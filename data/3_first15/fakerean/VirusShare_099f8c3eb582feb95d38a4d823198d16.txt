push
mov
mov
push
mov
xor
sub
mov
test
je
xor
jmp
sub
roll
inc
mov
inc
cmp
jb
xor
inc
pop
pop
ret
push
mov
sub
push
push
push
call
mov
push
pushl
call
mov
push
push
call
push
call
mov
mov
mov
movl
jmp
mov
sub
mov
mov
xor
mov
mov
xor
push
pop
div
mov
mov
shr
mov
xor
push
pop
div
push
pop
sub
mov
shl
or
mov
mov
xor
push
pop
div
mov
mov
shl
mov
xor
push
pop
div
push
pop
sub
mov
sar
or
mov
mov
sub
mov
mov
mov
push
pushl
push
call
add
cmp
je
mov
mov
and
mov
mov
mov
jmp
lea
push
push
push
pushl
call
lea
push
pushl
call
mov
mov
xor
push
pop
div
mov
mov
and
mov
mov
mov
cmpl
jne
mov
mov
mov
add
mov
push
call
pushl
call
push
push
push
push
push
push
call
pushl
pushl
pushl
call
push
call
pushl
call
push
push
call
pop
pop
push
call
push
push
call
push
call
push
call
pop
pop
leave
ret
int3
xchg
int3
int3
int3
int3
int3
int3
scas
push
popf
mov
loopne
sahf
int
dec
mov
xor
push
inc
inc
hlt
xor
xchg
sub
stc
jbe
sbb
sbb
jno
andl
stos
xlat
arpl
lret
adc
movsl
sbb
pusha
test
inc
cmp
insb
mov
mov
jp
ja
sbb
sbb
jb
adcb
stc
cli
and
iret
inc
mov
xchg
adc
add
jae
sti
mov
cmp
xor
imul
or
dec
fdivrl
in
xchg
and
mov
and
stos
xorl
hlt
xchg
inc
imul
es
dec
xchg
mov
sar
jp
mov
pop
in
mov
push
addr16
imul
and
in
cmpsl
mov
int
or
iret
add
mov
jo
testb
dec
sti
jle
push
xchg
icebp
pop
jmp
sahf
xor
push
cmp
movsl
jmp
jmp
mov
adc
fadds
cwtl
leave
fnstcw
test
in
add
jo
mov
stc
sahf
pushf
fstpt
push
inc
pusha
sahf
insl
fistl
add
adc
xchg
adc
pop
out
xchg
leave
cmpsb
dec
pop
pop
inc
push
stc
and
or
dec
lcall
test
loopne
int
add
ss
test
pusha
jmp
lret
gs
xchg
push
testb
adc
mov
xor
lods
dec
pusha
adc
pop
stos
ror
test
sub
fs
adc
lahf
push
mov
clc
or
and
xchg
xor
push
dec
lret
push
push
jae
cmp
call
inc
pop
lahf
add
mov
bound
add
adc
icebp
or
jnp
and
xlat
xchg
mov
adc
inc
dec
jb
dec
rcll
stc
adc
mov
out
mov
cwtl
fs
popf
xchg
adc
sti
jg
xor
outsb
xchg
ud2
inc
xorb
cmpsb
ss
out
mov
mov
fidivrs
push
cmp
or
mov
cmp
incl
imul
pop
nop
movsl
scas
cmp
orl
xor
xchg
xor
repnz
sub
mov
jb
cmp
xor
sahf
mov
and
cmpl
jge
adc
aad
aaa
rol
inc
sahf
xlat
pop
pop
add
inc
iret
add
jne
out
dec
aad
loope
jo
pop
cmpsb
fs
inc
adc
and
orb
pop
int
aas
add
call
ret
sbb
dec
mov
push
fidivs
and
jne
mov
bound
out
leave
les
add
xor
mov
xor
pop
ja
xchg
cli
add
push
and
mov
cli
test
push
add
pop
cmc
inc
inc
jmp
pop
or
xchg
sahf
mov
add
jmp
pusha
pop
mov
loopne
sbb
dec
jmp
xchg
lea
sub
mov
jecxz
mov
cmpsl
mov
les
aam
test
jne
mov
sub
cmp
push
sbb
fcmovu
push
push
orl
cmc
mov
call
cmp
fisttps
dec
dec
mov
in
dec
jnp
bound
test
rcr
mov
cmp
les
orl
push
fsubrl
out
adc
nop
decl
lret
pop
ljmp
in
and
and
sbb
loop
jo
imul
add
and
shr
sub
vmovaps
and
adc
bound
aas
inc
arpl
cmp
ret
out
sbb
ficoml
inc
decb
mov
pop
jae
loope
sub
pop
xchg
jge
push
in
nop
mov
or
jb
pop
mov
inc
cmp
mov
push
or
xor
push
push
xchg
enter
sbbl
jns
inc
popf
shl
ljmp
inc
mov
leave
mov
sbb
add
loopne
inc
repnz
adc
sbb
ja
dec
in
jp
pusha
fdiv
xor
xchg
jmp
sahf
ss
pop
ret
push
repz
dec
addr16
mov
add
sbb
dec
lock
loop
jns
lds
std
scas
cmp
mov
mov
outsb
dec
mov
test
jb
test
dec
lcall
push
xchg
mov
ds
fs
mov
mov
mov
ja
repz
movsl
push
lret
insb
shlb
xchg
jne
jb
mov
add
cmp
mov
xchg
adc
jae
setp
ss
aas
mov
fldcw
xchg
outsb
pop
stos
mov
vsubss
sbb
mov
mov
out
fisttpl
lret
cmp
pop
leave
mov
flds
fdivl
mov
dec
pop
jne
out
lods
mov
popf
jg
jb
fldlg2
mov
push
push
inc
xchg
pop
ret
fadds
cwtl
sbb
add
mov
inc
repz
outsl
push
xchg
or
orl
insb
stc
addr16
push
mov
push
mov
add
jae
pop
cwtl
cld
jno
xchg
pop
sub
jmp
or
mov
icebp
mov
les
pusha
test
mov
sbb
sbb
out
pushf
xor
rcrb
jg
aad
pop
mov
mov
les
jg
repnz
rol
sbb
jmp
lret
and
sahf
or
dec
lret
or
outsb
jbe
fidivs
fisttpl
inc
and
push
fildl
mov
incl
les
mov
mov
mulb
push
add
fs
sti
into
js
in
dec
dec
and
loopne
in
dec
pop
int
mov
adc
mov
test
push
mov
addl
popa
js
pushf
push
insb
stc
gs
es
call
imul
pop
xor
loope
sub
add
dec
ret
lret
cltd
cmp
and
btc
push
lea
dec
add
fcompl
cmp
icebp
in
mov
out
jge
loope
or
dec
push
lds
mov
rol
inc
hlt
aaa
sahf
imul
jns
lcall
mov
pop
xchg
inc
mov
jne
rorb
sub
lds
hlt
lcall
sbb
sti
push
mov
push
into
fcomps
inc
ljmp
xor
inc
inc
push
push
or
lahf
or
test
movsb
sbb
xchg
bound
gs
xor
test
scas
mov
cmp
callw
test
shrl
push
push
dec
popf
sbb
dec
pop
mov
push
xchg
inc
lahf
pop
and
xchg
mov
mov
adc
jnp
pop
cmp
mov
ret
leave
mov
addl
pop
out
lea
and
mov
push
ret
arpl
cmp
sub
sub
jno
pop
int
mov
nop
push
outsl
aad
mov
adc
loope
ficoml
les
stos
sbb
out
cltd
pop
jbe
adc
add
aad
inc
hlt
sub
das
int
mov
pop
loopne
cmp
xor
cmc
orb
lcall
xor
lock
mov
das
jb
add
or
mov
push
xchg
test
sub
out
repnz
ftst
xor
mov
dec
outsl
cmp
inc
fsubl
and
jecxz
fldt
in
shrl
stc
xlat
cvttps2pi
stos
lds
inc
push
pop
dec
jne
xchg
cmp
outsb
fisttpll
fistpl
hlt
in
pop
insb
test
movsl
cmp
xor
pop
adc
pop
outsl
adc
jno
push
cwtl
cwtl
xchg
fdivp
and
leave
mov
test
cmp
pop
aaa
jl
jbe
add
out
cmp
and
out
jg
cmp
ljmp
imul
jp
push
push
xor
ja
fmulp
cmpsb
push
xor
add
fs
sub
aad
enter
add
fs
cmp
pop
sbb
jne
sbb
stc
scas
cmp
aad
gs
xor
outsl
and
push
cmp
and
lret
pop
sbb
push
sbb
jb
sub
inc
mov
js
scas
sbb
sub
or
dec
inc
in
dec
arpl
inc
clc
pop
bound
call
mov
or
mov
cmp
push
or
in
mov
rolb
pop
jecxz
mov
pop
or
pop
out
test
in
push
leave
in
jp
ja
jmp
in
subl
mov
out
mov
mov
add
cmp
mov
xchg
fimull
out
add
scas
push
push
cmp
add
push
mov
mov
xor
out
aam
sub
leave
push
add
add
ss
dec
test
cmp
cmp
pop
popf
ja
and
push
lret
xchg
sub
jg
jno
or
sahf
push
rorl
lods
out
dec
fsubs
jmp
in
mov
out
stos
movsb
xor
mov
cmpsb
xor
mov
or
or
lods
loopne
hlt
xchg
ljmp
xchg
arpl
add
arpl
inc
or
lret
loope
into
inc
adc
jno
sbb
xor
or
lcall
in
repnz
fcoms
jne
cld
pop
cmp
dec
inc
fs
lea
mov
arpl
pop
cwtl
hlt
cmc
push
push
ret
push
es
xor
repz
or
mov
dec
incb
fidivl
jecxz
repz
movsb
int
scas
cwtl
cltd
mov
shll
xchg
sub
mov
repnz
push
popl
jb
and
mov
and
movsb
sbb
lret
iret
rorl
int
or
loope
cs
fsub
and
cmp
push
int3
mov
call
loop
adc
movsl
add
out
repz
jmp
in
ds
cmp
jecxz
mov
adc
xchg
dec
push
push
jle
sbbb
stos
in
pusha
and
mov
jle
jb
cltd
movb
adc
xchg
sub
push
mov
movsb
ja
fbstp
inc
lea
and
nop
sub
sub
loop
cmpsb
mov
nop
cmp
data16
lahf
inc
and
movsb
aad
lods
cmpsl
fisttps
repz
lcall
shrl
and
inc
pop
mov
jbe
sub
mov
loope
out
stos
xchg
pop
loope
push
xlat
sarb
ret
add
jge
push
pop
cli
out
xor
enter
test
cmp
adc
and
push
ds
push
and
pop
xor
cmp
xchg
lods
pop
mov
mov
repnz
add
jp
mov
cli
in
or
shr
jnp
test
cmp
dec
in
repnz
mov
adc
jmp
jp
ss
pusha
mov
adc
jae
insb
stos
pop
inc
out
lods
ret
ds
fldl
add
pop
rolb
imul
repnz
dec
mov
dec
scas
pop
test
negb
sbb
cmc
jl
out
or
sahf
cmp
not
cmpsb
sahf
pop
aaa
dec
dec
add
insb
sbb
test
mov
clc
lahf
jns
js
pop
push
lahf
pop
movb
aaa
repnz
mov
or
in
lods
cmp
into
xor
arpl
inc
fdivl
sbb
mov
pop
out
jmp
test
mov
js
fxch
jmp
push
xor
pushf
neg
call
jo
adc
jmp
pop
sar
fstpt
aam
out
add
push
jns
fincstp
js
flds
repnz
mov
add
mov
lock
sub
and
and
push
jg
pop
xchg
jmp
push
ret
es
popf
aas
ficomps
inc
push
movsb
mov
push
lods
fwait
shr
mov
movsb
fnstcw
test
adc
lds
out
nop
pop
or
ja
mov
and
mov
push
in
fwait
call
mov
mov
mov
mov
fs
stos
sbbb
scas
xor
movsl
pop
ja
cli
lods
mov
subb
cwtl
jecxz
xchg
arpl
sbb
mov
loop
leave
pushf
mov
imul
mov
adc
mov
jl
pop
or
aad
gs
jp
lcall
xor
xchg
out
insb
xchg
movl
mov
das
rcll
xlat
mov
inc
xchg
push
subb
dec
movsb
je
add
xor
addr16
dec
push
or
xchg
orl
fistpl
adc
sub
aad
rep
pop
or
inc
ret
inc
push
inc
aad
inc
sub
push
repnz
xlat
stos
add
pop
xchg
push
sbb
cmp
or
pop
fists
jge
inc
jge
pop
enter
sti
jbe
sbb
cmp
dec
les
sbb
cmovo
test
lret
shl
lock
insb
hlt
clc
sub
push
ret
nop
mov
movsb
ret
jecxz
cs
push
ficomps
cmpsb
dec
xchg
pop
icebp
mov
les
cmp
xchg
push
into
mov
mov
aas
mov
dec
fcmovbe
notb
pop
dec
jb
push
xchg
mov
lock
mull
adc
adc
loope
clc
orl
xchg
lock
mov
and
js
xor
cmp
push
add
add
sub
xchg
imulb
jge
jecxz
test
mov
or
and
out
clc
adc
jecxz
cmp
dec
jg
mov
sti
pop
add
movsl
mov
pop
xchg
lds
mov
cld
scas
mov
jl,pn
mov
push
xor
mov
push
sub
lds
jg
mov
test
test
and
jmp
lea
sbbl
push
jg
add
das
adc
mov
push
inc
mov
int
xor
imul
lock
mov
sub
fisubl
mov
jmp
nop
das
mov
or
add
hlt
adc
and
sub
cmp
test
and
fists
push
push
mov
fstps
in
in
iret
xchg
shlb
sbb
ja
sbb
or
test
pop
sti
inc
loopne
mov
and
cmpb
and
push
inc
mov
add
pusha
out
dec
insb
inc
push
loopne
dec
push
cli
pop
sub
xor
add
lock
or
je
mov
leave
pop
mov
jo
xor
pushf
sub
adc
mov
xor
jge
xchg
jae
sub
js
lods
jae
pushf
add
mov
js
jb
mov
push
aaa
mov
test
out
mov
sbb
pop
in
or
pop
push
xchg
out
outsb
lods
adc
pop
int
js
clc
fdivrs
and
jp
xchg
das
int
jle
arpl
in
out
push
add
repz
cmp
sub
ret
mov
xchg
push
inc
mov
mov
pop
sub
add
mov
scas
test
outsl
push
or
ss
neg
fbstp
add
jae
andb
inc
popf
adc
dec
clc
pusha
outsb
imul
and
jge
test
lods
das
in
les
mov
inc
cmp
outsb
jg
int
jno
cmpsl
inc
or
lret
pop
or
pop
movb
movsl
cmp
sbb
pop
mov
cmp
stc
nopl
ljmp
dec
mov
fwait
push
pop
pop
testb
push
xor
bnd
dec
sbb
cmp
sbb
pushl
stc
js
xchg
cld
sbb
mov
data16
shlb
xor
mov
adc
pop
push
xchg
pop
mov
in
mov
xchg
xor
inc
in
mov
sub
inc
dec
shrl
sti
mov
lock
adc
ret
xor
std
sub
xchg
jbe
jne
xorl
adc
mov
dec
pop
nop
addl
pusha
lea
pop
cmpsl
adc
mov
push
loopne
xchg
ffree
and
stc
add
bound
je
ret
aaa
sahf
pop
or
jmp
dec
lock
sbb
mov
pop
fldt
dec
mov
mov
xor
jnp
negl
cli
pop
xor
mov
inc
sub
gs
gs
aaa
cmc
ds
add
mov
fs
stos
mov
std
mov
or
fdivr
in
stc
cmpl
sbb
and
stc
and
test
dec
int3
lds
aas
mov
cmp
les
push
pop
mov
push
mov
mov
push
and
mov
cmc
pop
lds
out
loope
adcl
and
add
daa
xchg
mov
cwtl
push
das
test
leave
data16
cmp
cwtl
in
jo
bound
stos
pop
mov
cmc
mov
inc
test
dec
mov
xchg
mov
fstps
in
stos
adc
jle
xchg
pushf
and
add
mov
inc
scas
loope
dec
ss
add
cmpsl
cmp
xor
test
adc
lods
popa
sub
jecxz
push
lods
aam
mov
mov
sub
mov
jp
loope
and
mov
aaa
rep
js
jb
push
pop
stos
sub
push
dec
enter
nop
dec
mov
mov
dec
std
jmp
test
mov
cltd
push
nop
jmp
xchg
jecxz
push
dec
popa
pop
mov
add
add
popa
jno
hlt
addr16
xor
scas
aam
or
cmp
icebp
and
aas
xchg
jae
into
pop
mov
push
xchg
dec
mov
ds
adc
pop
mov
xlat
xor
push
jo
mov
orl
pop
flds
or
iret
dec
ljmp
enter
sbb
xlat
lret
inc
sahf
cmpsl
in
jb
cwtl
cmp
xchg
sub
rcrb
xor
out
bound
pop
daa
ss
xor
push
or
push
addb
xchg
outsl
dec
arpl
fnsave
lea
xchg
outsl
cmp
test
push
frstor
lea
shlb
xor
cmp
inc
mov
mov
insl
aas
stos
mov
or
idivl
out
jl
adc
ret
inc
icebp
in
push
aam
jo
icebp
xchg
mov
add
xor
push
in
sub
mov
test
inc
ror
sub
xor
sbb
sbb
mov
std
lret
dec
pop
popf
call
add
and
ljmp
push
cmpsb
sbb
stc
mov
mov
add
in
mov
ds
add
sub
xor
sub
mov
jle
adc
push
js
das
mov
and
pop
add
and
enter
dec
push
mov
mov
xor
lret
shr
sub
jo
push
sub
hlt
iret
xchg
stc
xor
xor
push
pop
aam
js
adc
dec
pop
adc
in
mov
and
pop
cmp
lock
aaa
aad
cmp
rcll
jae
dec
xor
push
mov
cmp
aad
add
xor
xor
lock
test
ret
mov
cmp
pop
inc
adc
adc
enter
cli
dec
fists
mov
jge
sub
xor
sarl
cmp
jg
dec
xchg
xorb
outsb
imul
push
mov
push
fstpl
xchg
lds
sbb
mov
push
sub
or
jl
subl
sbbl
into
jb
push
cmp
out
movsb
cs
cli
shll
jg
xor
out
ret
or
loope
push
sub
pop
scas
mov
adc
push
xchg
mov
cli
das
push
push
in
js
pop
rorl
mov
mov
xor
sub
pop
xor
jp
int3
mov
adc
lcall
movsb
fsubrl
decl
mov
in
stos
and
sbb
mov
lods
loopne
ficoms
ds
out
loop
flds
sub
jmp
dec
stc
jp
fldt
into
mov
push
incb
jmp
stos
lods
addr16
lds
dec
sub
add
jns
mov
push
cmp
outsl
and
mov
clc
icebp
xlat
loope
mov
sahf
jno
xchg
cmp
les
in
rcll
mov
add
add
sbb
cmc
fistpl
pop
sub
in
mov
stos
adc
shrl
xchg
jle
xor
jo
je
adc
ret
pop
push
dec
pop
push
mov
mov
mov
ss
fwait
test
inc
mov
fwait
jae
lds
adc
push
sahf
push
pop
sbb
mov
mov
jmp
push
xor
push
outsb
inc
sub
or
pusha
sbb
xchg
jnp
shr
mov
and
enter
aas
fdivs
jnp
push
jge
xchg
sub
xor
test
or
mov
inc
mov
xchg
clc
lods
cli
movsb
cmpsl
jmp
inc
xor
fisttps
cli
ds
xor
mov
fs
stc
or
dec
movl
es
mov
clc
jle
stos
xorb
andb
sub
dec
inc
dec
stos
in
imul
xor
lods
jbe
inc
inc
or
clc
addl
dec
add
jg
pop
jge
test
in
xchg
pop
jmp
fs
push
inc
into
jle
arpl
sub
push
sahf
das
repz
push
xor
je
and
sti
pusha
add
sub
pop
adcl
out
bound
insl
mov
inc
or
and
inc
mov
adc
addr16
test
lods
rep
lret
lret
movsb
cmc
outsb
dec
or
addr16
icebp
sbb
fdivrs
ret
inc
aas
dec
or
lret
lret
lret
mov
je
stc
inc
or
out
cmp
pop
notb
fwait
je
push
adc
mov
outsl
push
fcompl
xor
mov
loop
js
xor
enter
sub
xchg
cltd
xor
inc
mov
cmp
add
adc
scas
mov
loope
mov
sti
frstor
dec
adc
and
push
out
das
lea
add
cmp
and
pop
inc
fnsave
ret
pop
pop
push
clc
rol
jg
nopl
aad
das
test
mov
inc
imul
jne
adc
dec
clc
inc
loopne
sbb
mov
and
mov
data16
mov
dec
add
and
ja
mov
ss
xchg
ljmp
xor
xor
push
shl
push
or
cli
add
scas
mov
jne
add
lret
jmp
aaa
mov
fisttpll
xchg
shlb
insl
outsl
ja
xor
push
push
cwtl
loopne
cld
or
pop
inc
cwtl
mov
nop
mov
popa
mov
xchg
out
cmpsb
mov
test
mov
mov
xor
inc
sti
mov
cmp
or
shl
mov
js
out
inc
mov
or
aas
gs
aam
push
out
outsl
scas
and
addr16
jg
xchg
xor
dec
stc
fwait
lds
add
into
mov
inc
pop
scas
inc
movsl
aad
dec
fisttpl
inc
fsubrs
loop
fistps
insb
xlat
pop
aad
pop
cmp
dec
push
mov
jp
jp
sbbl
fisubrs
add
movsb
cmp
aaa
jecxz
adc
cs
pop
jg
and
mov
or
pop
or
xorb
mov
mov
mov
sub
xchg
rep
inc
inc
rorl
test
mov
nop
in
or
xchg
add
mov
mov
iret
inc
sub
mov
jno
fcom
test
pop
in
in
cmpsl
xor
and
push
daa
mov
xlat
push
repz
addr16
cmp
fwait
cmc
and
sbb
jmp
jbe
xchg
inc
arpl
xchg
xor
stos
orb
add
jae
xchg
jns
mov
and
ret
dec
jne
dec
lret
lcall
mov
inc
xchg
sbb
imul
adc
lods
cmp
cmp
sbb
xchg
ljmp
mov
loopne
dec
mov
pop
inc
xorb
xor
sbbl
jae
push
pshufw
imulb
dec
mov
ret
pop
jns
adc
idivb
loop
inc
mov
fmull
cmp
add
lret
jecxz
into
add
xchg
out
aad
fdivrs
sbb
pop
xchg
in
xorl
mov
push
pop
mov
push
pop
js
fidivl
mov
ret
int3
fwait
inc
and
leave
mov
dec
lret
push
mov
push
stc
push
jnp
fs
stos
sub
mov
repnz
mov
adc
sub
jecxz
add
pop
stos
push
mov
pushf
mov
fwait
mov
fld1
iret
push
in
cmp
into
and
mov
sub
add
sahf
mov
mov
pop
mov
in
mov
add
repz
lret
fidivrl
pop
test
iret
inc
jl
and
imul
fs
mov
xchg
mov
push
sub
pop
addl
sub
nop
mov
push
add
push
lahf
das
scas
fiaddl
fisttps
jns
xlat
insb
add
mov
mov
scas
andl
xchg
mov
push
fildll
lods
xor
xchg
ds
in
sahf
mov
inc
xor
xor
pop
dec
adc
cmc
jge
jb
pop
negb
mov
negl
std
lock
adc
jl
ja
inc
jb
outsb
lea
and
cmp
jae
or
or
push
mov
out
xor
mov
sbb
scas
pusha
jp
mov
push
in
push
loop
xchg
sub
mov
pop
push
test
stos
sub
xchg
add
and
ljmp
pop
cli
or
sbb
mov
sbb
mov
movsb
fucom
lahf
sbb
xor
mov
sbb
fimull
adc
movsb
mov
inc
arpl
inc
add
pop
lods
faddl
sub
mov
adc
add
into
popa
lea
xor
icebp
in
lds
test
inc
mov
int3
mov
call
icebp
rol
pushl
add
mov
push
inc
nop
push
outsb
and
es
lret
cmp
scas
add
pop
loop
cs
cmp
idivl
pop
mov
adc
mov
jo
sbb
jnp
cmp
mov
or
bound
gs
cmp
popa
fisttpll
pop
xchg
adc
ss
repz
testl
in
sbb
das
add
pop
std
inc
ja
lea
adc
push
and
jns
jmp
dec
nopl
jmp
push
cmp
and
push
sub
dec
cmp
aaa
ret
mov
lods
imul
sub
cmpsb
loop
xchg
pushf
sbb
loop
ja
data16
std
gs
and
pop
sub
arpl
bound
ret
xchg
mov
aaa
mov
rcr
and
push
inc
pop
ret
push
push
or
fadds
sbb
int3
push
leave
pop
fwait
push
sbb
cltd
pop
int3
jns
cmp
iret
mov
hlt
cmpb
pop
insl
dec
pop
inc
mov
js
clc
sub
add
dec
cmpl
xor
lret
xchg
jbe
or
jp
push
xlat
adc
mov
push
jecxz
sbb
mov
fdiv
leave
adc
push
js
inc
lcall
pop
jmp
mov
adc
add
scas
jb
ljmp
fwait
mov
mov
mov
jnp
xchg
inc
sbb
stos
enter
js
fists
ret
mov
and
jmp
insl
hlt
add
push
out
jge
enter
aad
and
add
fwait
jmp
imul
scas
not
xor
mov
test
lcall
dec
and
das
scas
jbe
push
mov
fsubrl
notb
cmp
fs
and
out
insl
icebp
stos
daa
dec
cmp
hlt
and
popa
pop
sbb
js
add
xchg
and
or
js
fs
mov
push
jne
xor
outsb
les
mov
and
pop
popa
mov
and
fcomp
cmp
inc
sub
pop
incl
out
test
lret
fcomps
sbb
or
pop
push
dec
pusha
pop
mov
mov
sub
and
mov
xor
xor
or
js
pop
xor
cmpsl
sub
cmpb
adcb
pop
imul
repnz
mov
es
or
or
mov
add
shl
push
rolb
push
mov
addl
xor
imul
popl
push
aam
and
add
mov
ja
mov
mov
jne
ds
add
cmpsl
ljmp
insb
push
rcrl
movsl
cltd
scas
add
in
imul
ret
lods
dec
push
mov
cwtl
adcb
mov
repnz
arpl
pop
daa
scas
lds
jle
jmp
xchg
pop
xor
filds
mov
clc
xchg
cmp
ja
inc
repnz
inc
stos
subb
and
fs
lds
jecxz
sub
inc
out
fsubl
sub
in
sbb
xor
inc
out
cmc
inc
add
mov
inc
dec
cmpsb
sub
dec
arpl
mov
popa
call
and
lods
push
xchg
aas
jge
and
loope
sub
cwtl
insb
sbb
inc
clc
bound
test
and
pushf
jge
lcall
or
cmp
xchg
add
sub
roll
les
pop
lcall
pushf
xor
and
xchg
push
mov
dec
movsl
ljmp
jecxz
add
xor
hlt
movsb
jbe
lret
jle
pusha
xchg
repz
das
xchg
int3
sarb
sub
jmp
in
push
js
push
cmp
movsb
mov
dec
stos
push
cmpsl
imul
push
inc
sbb
add
leave
fcomp
sub
push
xchg
loop
gs
push
pop
sqrtps
dec
and
fdivr
bound
push
leave
mov
jae
incl
adc
jnp
icebp
enter
outsl
xor
movsl
xchg
mov
sub
movntq
out
mov
xor
adc
lcall
mov
cltd
daa
lret
out
pop
mov
dec
cs
aas
jbe
pop
sub
push
xchg
inc
ja
fsubs
repnz
dec
pop
adc
aas
ret
pushl
mov
mov
cwtl
inc
pop
jb
mov
out
je
push
xchg
push
repnz
sub
jg
lock
cmp
aaa
shll
jno
cmc
push
and
repnz
cltd
xor
xchg
jge
mov
mov
jns,pt
pop
push
mov
fwait
loopne,pn
mov
xchg
pusha
imul
aaa
popf
sub
and
inc
sbb
test
enter
das
mov
mov
push
out
sarb
sub
push
rcrl
jo
js
push
rol
mov
or
xchg
pop
loopne
shll
mov
and
mov
xchg
rcrl
inc
sub
sbb
inc
jecxz
fwait
xorl
push
push
outsl
sub
aam
popf
sahf
add
movsl
xchg
in
sub
out
jl
xchg
sbb
mov
loopne
cltd
jns
lcall
jo
mov
icebp
cmpsl
xor
pop
repnz
into
mov
movsb
xor
es
lods
icebp
test
cmp
and
lock
mov
push
pop
push
push
push
insl
pushf
inc
cmp
push
out
test
rcrb
cmp
imul
int
ds
mov
jle
idivl
in
dec
in
or
into
int3
bound
scas
aas
enter
dec
push
dec
outsb
test
dec
adc
scas
push
sbb
leave
out
and
add
xor
jns
mov
jge
je
outsl
cs
add
test
jns
imul
jg
pop
adc
push
jecxz
and
inc
jg
jae
inc
xchg
shll
out
vpaddw
idivl
cmp
roll
push
pop
call
ret
mov
push
jnp
push
shrb
sbb
pop
mov
test
mov
out
or
push
das
cmp
cs
sub
adcb
cmp
neg
dec
jbe
mov
lret
rorb
add
mov
inc
xchg
inc
mov
push
lock
into
pop
xor
jne
icebp
xor
xor
dec
ffree
test
sub
mov
cmp
inc
outsl
int3
ret
leave
xlat
test
incl
pop
jns
mov
js
jmp
jg
in
jl
dec
jo
cmp
in
icebp
and
lods
jg
push
fisubrs
scas
and
cmpsl
jb
loope
inc
sbb
add
jmp
into
decl
mov
mov
mov
cmp
push
addr16
aam
pop
or
out
cmpsl
mov
popa
shll
stos
lods
add
push
mov
ss
leave
int3
js
in
sub
push
cld
dec
out
cmp
or
mov
clc
push
and
push
mov
pop
adc
and
idivl
inc
shrb
pop
test
xchg
imul
lods
lret
ss
pushf
mov
scas
mov
daa
loop
rolb
mov
mov
pop
adcb
xorb
ret
cmp
pop
adc
or
cltd
pop
popa
xlat
mov
xlat
adc
test
icebp
or
cmp
nop
jnp
cltd
stos
cld
sub
sub
push
es
in
js
das
and
dec
call
imul
popa
push
sbb
dec
pop
cmp
outsl
mov
inc
repz
fs
loop
mov
adc
ds
xchg
mov
jnp
ret
nop
pop
pop
xorb
jbe
mov
jecxz
rol
xor
cmp
lock
inc
and
lds
loop
sbb
popa
inc
insl
lret
add
movsb
in
sbb
lods
iret
stos
push
ljmp
jnp
or
dec
and
pop
lea
pop
or
pop
popa
inc
clc
dec
clc
push
out
arpl
jp
push
cltd
js
xchg
dec
adc
inc
mov
adc
or
pop
xchg
pusha
mov
sahf
por
out
xor
lods
pop
sbb
addb
rorb
adc
push
inc
xchg
adc
scas
je
icebp
add
pop
std
xlat
testb
notb
pop
shl
cmp
mov
sub
loopne
xchg
hlt
aaa
sub
or
add
test
mov
xor
inc
loope
mov
dec
in
ds
push
stc
mov
and
jge
leave
subb
test
loop
ljmp
pop
test
mov
jmp
xchg
push
mov
mov
mov
out
cmp
cmp
gs
sub
ss
mov
mov
pop
icebp
add
inc
jge
cmp
pop
stc
dec
mov
adc
jno
cmp
scas
repnz
addl
pop
mov
mov
imul
sahf
lods
and
cmpsb
mov
dec
pop
add
enter
push
adc
sbb
enter
pavgb
stos
stos
js
xchg
into
rol
xor
inc
out
pop
xchg
les
in
test
inc
jmp
pop
mov
ljmp
fbld
sub
roll
sahf
xor
sub
mul
les
or
mov
xchg
cli
xlat
add
negb
in
dec
bound
ds
mov
stc
cmp
xchg
movsl
aad
cli
push
testb
jge
fs
mov
mov
insb
sbb
ret
pop
pop
xchg
sub
add
fimull
fadds
shlb
shlb
stos
mov
mov
movsb
mov
ljmp
ret
subl
jbe
jbe
leave
in
ljmp
stc
cmp
fs
filds
push
sysexit
adc
xchg
fwait
xchg
inc
cmp
cmp
mov
scas
sbb
into
sti
dec
push
mov
mov
pushf
xor
loop
mov
mov
int
popa
call
jbe
scas
fwait
out
adc
outsb
mov
pop
mov
pop
clc
es
or
cmpsb
cmp
popa
add
es
ret
push
loop
arpl
jae
push
cltd
dec
xor
mov
pop
dec
mov
test
and
pop
pop
mov
cmp
jns
push
mov
lret
out
jne
push
stos
mov
mov
rorb
test
in
adc
jmp
pop
cmp
dec
mov
nop
mov
cmp
xlat
mov
push
jno
push
fwait
xor
inc
fnstenv
daa
jae
shrl
dec
add
in
out
ljmp
stos
cmc
xchg
sub
rcrb
push
pop
xchg
sub
lret
or
jne
push
or
xchg
js
sahf
fadds
sub
xchg
mov
sahf
fs
lret
fstl
je
lods
mull
mov
or
sub
push
fbld
ds
sub
std
or
fnsave
xchg
mov
lret
in
in
loope
mov
movsb
test
icebp
enter
push
out
sti
stos
movsl
dec
aad
sbb
add
faddp
push
mov
jecxz
xchg
and
or
add
jb
dec
jnp
cli
fidivrs
add
sub
ja
mov
add
mov
or
xchg
mov
arpl
dec
out
mov
adc
arpl
mov
cld
lock
iret
cld
pushf
cld
xor
out
adc
cs
mov
adcb
and
aas
mov
xchg
sub
les
push
out
imul
cwtl
test
insl
nop
jecxz
shrl
jne
sbb
push
push
shll
pushf
out
fucomp
shl
add
mov
adc
jbe
scas
sbb
or
stc
addr16
imul
rcr
inc
pop
popa
sbb
int3
xchg
std
pop
xor
fwait
rolb
sub
insl
lea
xor
mov
sbb
xchg
mov
rcr
inc
dec
lds
stos
sbb
dec
push
pop
pop
and
in
das
les
rclb
mov
test
aas
ja
mov
push
push
inc
pop
mov
test
cmpb
inc
cli
cwtl
movsl
pop
pop
cmc
pop
pop
in
pop
out
stc
aaa
jg
setg
test
jg
bound
sub
jo
xorl
xor
jp
xchg
mov
dec
xor
inc
jb
jp
xchg
jp
adc
dec
jmp
lret
sub
add
repnz
or
insb
mov
test
loopne
std
add
jl
mov
xchg
ds
and
insl
mov
cmc
mov
or
adc
fs
je
jne
add
out
and
cmc
movzbl
sarb
cmova
pusha
data16
and
cltd
mov
pop
cwtl
mov
pop
ljmp
inc
lock
pop
jl
dec
jae
lret
aad
pop
and
rcll
and
into
lods
mov
jbe
out
jne
pop
enter
icebp
in
stos
mov
stos
ja
mov
cmp
mov
leave
add
inc
pop
and
mov
pop
add
das
mov
gs
test
cld
fisttpl
sub
xor
dec
xchg
lods
in
ja
mov
pop
push
in
fists
and
push
mov
xchg
sarb
inc
nop
xchg
into
push
mov
xor
pop
push
cmp
xchg
sbb
and
and
test
mul
jg
jne
loope
push
dec
sarb
test
mov
adc
loopne
push
loopne
inc
or
je
sahf
sbb
sub
dec
cmp
sbb
mul
cmp
adc
fwait
cs
or
stos
lret
add
filds
cmpsb
in
or
insl
mov
push
inc
lods
and
cmp
cld
dec
ret
ss
rcr
jo
sub
mov
mov
dec
or
and
leave
in
pop
mov
and
xchg
bound
pop
inc
adc
cld
test
mov
imul
inc
ret
sti
clc
aas
mov
stos
sub
sub
aas
and
pop
movsb
in
bound
test
fisubs
inc
cmp
mov
scas
aaa
adc
jle
les
test
xchg
mov
xor
sub
popl
or
add
stc
cmpsb
jle
mov
shll
push
cmp
xlat
mov
lahf
xchg
lods
jbe
les
push
push
mov
aam
out
cmp
xchg
sti
mov
ss
mov
mov
sub
xor
mov
ret
lahf
xchg
stc
sbb
jne
xchg
lret
addr16
mov
out
rcll
cld
out
xchg
stc
jle
inc
cmp
mov
addr16
mov
cmp
sbb
fsubr
adc
mov
nop
mov
fs
cmp
into
out
cmpsb
sub
testl
dec
xchg
loopne
or
and
jmp
aaa
fmul
in
sahf
inc
inc
mov
dec
push
rcll
sub
jge
xchg
bound
scas
mov
or
jns
sahf
jno
jb
mov
mov
adc
add
xor
fnstsw
pop
fisubs
ret
je
outsb
add
pop
cmp
mov
sahf
clc
mov
cmp
cmpsl
mov
adc
lahf
bound
dec
outsl
emms
sbb
pop
jle
divl
pop
movsb
andb
add
add
in
or
add
aam
icebp
fs
lods
xchg
mov
push
mov
addl
into
pop
cli
aas
mov
push
call
jl
lret
out
push
sub
add
adc
scas
data16
mull
mov
or
dec
and
dec
inc
sbb
enter
push
mov
push
xor
or
inc
inc
and
pop
cmp
xchg
sar
xor
xor
push
bound
mov
mov
adc
add
gs
inc
ss
jb
cmp
data16
insb
pop
xchg
push
inc
push
push
sbb
les
jne
mov
adc
pop
xor
js
stos
mov
xchg
mov
scas
cs
inc
out
mov
movsl
cmp
sbb
clc
aaa
imulb
lods
push
ret
in
push
adc
mov
inc
loope
mov
xor
push
jl
int3
bound
add
pop
das
in
daa
or
das
push
sub
in
lock
and
mov
insl
mov
push
hlt
imul
lcall
sti
insl
pop
jp
repnz
cmp
add
xchg
push
lret
dec
mov
pop
std
clc
fadds
ss
inc
cmp
dec
cmp
insl
pushf
push
lret
mov
std
xchg
push
aad
loopne
loopne
pop
lods
out
and
cmp
mov
cmp
test
inc
mov
cmp
popl
sbb
pop
fmuls
repnz
and
pop
jnp
push
mov
xlat
imul
xchg
stos
sub
pop
sbbl
aas
lret
adcb
hlt
push
sub
imul
push
push
dec
jb
andl
je
xchg
fnstenv
cmp
insl
test
jae
int3
int3
mov
sbb
adc
or
xor
mov
cmp
fmuls
sub
xchg
inc
cmp
dec
dec
loop
data16
les
inc
scas
test
sahf
out
and
sbb
cmpsb
push
cmpsb
ret
or
mov
iret
add
and
and
idivb
jae
rolb
imull
jae
push
roll
inc
sbbl
dec
adc
and
outsb
jne
es
jge
imul
loopne
mov
ds
outsl
sahf
xor
jg
jno
pop
lret
loopne
xchg
adc
in
out
nop
sub
fldcw
repz
mov
ss
sti
jecxz
push
enter
std
mov
mov
mov
repz
dec
sahf
ret
cmp
pop
jp
push
push
cmp
sub
mov
fs
mov
inc
inc
int3
mov
inc
popf
pushf
gs
daa
jge
in
shrl
xchg
xor
lods
push
pushl
xlat
jb
jns
or
pop
scas
jmp
mov
insl
sub
lds
adc
pop
push
test
add
jae
jge
aam
add
jne
lods
lds
insl
scas
fidivrl
dec
out
lods
xchg
roll
push
test
push
stos
rcrb
shll
and
push
scas
add
cmpl
sbb
dec
jge
push
push
jb
outsl
xabort
mov
inc
vpsrld
mov
jno
pushf
into
repz
loopne
arpl
nop
outsl
mov
xlat
push
push
adc
shll
adc
mov
mov
sub
lret
push
sbb
cmpsb
out
outsb
sub
lods
test
enter
jne
movsb
loop,pt
ret
add
mov
push
sub
jl
xchg
imul
adc
inc
xor
lds
xor
mov
dec
mov
lods
data16
pop
iret
sbb
xchg
dec
inc
xor
push
pop
in
jbe
jmp
cmp
mov
stos
xor
mov
daa
or
movhps
lods
adc
sbb
xchg
cmp
ja
add
or
adc
dec
js
adc
sarb
xchg
aam
mov
adc
sbb
push
jmp
push
test
add
sbb
sti
fmull
fstpl
mov
or
cmc
movsb
cli
pusha
sar
mov
sbb
pop
mov
movsb
inc
test
dec
lahf
pop
aad
es
sbb
out
adc
adc
hlt
fsubrl
pushf
pop
mov
cmp
xor
pop
jns
push
cmc
cmp
clc
mov
xchg
add
jo
loope
dec
dec
outsb
add
loope
xchg
inc
xchg
in
add
push
imul
push
fucomip
aas
dec
xor
inc
xchg
mov
movsb
cmp
jnp
insl
push
and
mov
pusha
mov
jge
xchg
js
push
mov
mov
aam
loop
inc
jno
pop
lds
daa
ret
shl
mov
repnz
sbb
jbe
dec
mov
inc
lcall
test
fisttps
xchg
xchg
scas
fcomps
sub
and
test
xor
lahf
test
sahf
cmp
cmpsl
push
hlt
jge
aam
push
or
pop
sub
out
and
xor
add
cmp
lcall
jnp
push
mov
in
dec
sbb
lods
xchg
mov
hlt
jbe
lret
out
push
ret
int3
dec
or
fisttpll
jge
sbb
repz
mov
stos
push
daa
inc
mov
mov
in
arpl
out
fisubrs
push
cmc
aaa
or
xchg
jecxz
lret
inc
push
das
jns
fcompl
leave
icebp
fistl
jmp
lds
sbb
test
es
sbb
cs
gs
gs
lahf
mov
jo
repnz
add
inc
sbbl
ret
mov
cltd
inc
sub
call
std
leave
pop
rolb
mull
inc
push
or
push
mov
loopne
sbb
sahf
testl
sbb
and
cmp
rcrb
adc
add
xchg
xchg
lock
or
push
cwtl
in
rorl
lods
mov
stc
cmc
and
pop
cld
sub
inc
mov
cmc
enter
inc
cmp
xor
clc
mov
jecxz
ds
stos
ljmp
xchg
jge
femms
xor
loope
test
sub
aas
movsb
filds
pushf
ror
enter
daa
scas
jl
imull
and
jo
aam
ja
sub
mov
aam
add
popa
mov
test
scas
jl
stc
ficoms
in
les
ss
push
test
jg
pop
cltd
sbb
fisubrl
pushf
outsb
jmp
cmp
cld
mov
push
jnp
imul
out
sub
mov
sbb
lcall
push
hlt
insl
loop
inc
mov
pop
loope
movntps
sbb
je
pop
fildl
push
fs
dec
cmp
or
mov
sbb
add
out
aad
add
clc
aad
add
mulb
loopne
xchg
inc
adc
push
pop
fstpt
ficoms
mov
call
cmp
and
inc
hlt
pop
and
cmp
out
mov
xchg
xchg
in
int
lret
loop
mov
sbb
repnz
shrl
lds
in
stc
or
stos
dec
addr16
and
push
cmc
dec
icebp
mov
jno
ficompl
add
adc
mov
es
out
dec
pop
sbb
popa
fsubr
gs
push
addr16
sahf
and
add
pop
cltd
loop
and
mov
jl
es
cli
iret
cld
adc
mov
pop
add
cmp
dec
sbb
mov
inc
scas
mov
add
xchg
cmp
xor
lock
fs
icebp
dec
jns
pop
test
filds
fisttpll
bound
push
pop
scas
xchg
adc
orb
andl
jns
jno
arpl
lock
or
outsl
cmp
fdivrs
rolb
and
lea
dec
sub
les
sbb
cmpsl
xlat
lcall
push
pop
jg
scas
nop
add
add
mov
shlb
fs
fisubs
or
daa
sub
rol
aam
into
mov
sbb
mov
ds
cmp
iret
mov
data16
lret
es
and
xchg
pop
mov
dec
add
ret
addr16
pushf
sti
or
mov
inc
in
sbb
fwait
cwtl
negb
xor
jns
aad
stos
iret
out
xor
or
xor
sti
xchg
mov
pop
sbb
rorb
xchg
hlt
jno
dec
std
ret
mov
stc
test
add
push
lods
and
gs
sub
loope
mov
cwtl
imul
es
sbb
out
cmp
sar
add
jg
or
push
pushf
sub
or
mov
inc
das
std
aas
fwait
rcl
xor
push
lods
xchg
push
sahf
jmp
mov
cmp
je
and
scas
int3
xor
cmp
mov
loopne
loop
adc
addr16
addl
ret
xor
xor
ss
cmpsb
dec
and
bound
xor
xchg
fldl
jbe
jmp
sahf
shlb
add
mov
outsb
mov
cmpsb
out
loop
push
fwait
push
push
outsb
xchg
enter
push
andb
cmp
out
iret
jno
stos
lock
imul
fcomps
das
xor
lods
xor
pop
mov
jne
fs
push
mov
stos
pop
fadd
iret
cli
jl
xor
fwait
enter
sbb
out
in
pop
fwait
in
inc
sarl
shlb
mov
repz
xor
hlt
mov
divl
into
sti
xchg
call
int
fdivrl
insl
shll
call
inc
cmp
mov
scas
add
stc
mov
inc
mov
adc
cmpl
shl
int3
cmpsl
inc
movsl
leave
loopne
imul
inc
adc
xchg
pop
xchg
pop
imul
sbb
pushf
dec
pop
adc
mov
shll
pushf
js
cmc
and
stc
adcl
ud2
pop
mov
adc
inc
push
jge
inc
xlat
out
dec
mov
xchg
popf
add
cltd
cmpl
mov
cmp
xor
cmp
mov
xor
inc
xchg
pop
mov
data16
or
test
sub
push
aas
dec
push
pop
test
sub
subb
cli
roll
jnp
xor
sbb
fwait
int
add
cmp
xchg
les
iret
lret
fsubrl
mov
or
fldl
mov
lods
sbb
movsl
hlt
into
mov
outsb
cmp
das
add
leave
jo
outsl
inc
and
fcoms
mov
arpl
dec
xor
pusha
jecxz
jno
jne
int
sbb
fstpt
jae
fcomp
xor
rcr
test
jbe
out
out
or
leave
push
mov
std
aad
fwait
inc
jns
mov
dec
and
sahf
or
and
inc
ja
cmp
xor
fnstsw
pop
mov
add
fnstenv
popf
and
cmc
iret
xchg
xchg
mov
xchg
sbb
shrb
icebp
sub
and
xchg
incb
cmp
mov
dec
jecxz
dec
mov
popa
lret
cwtl
stc
into
rorb
push
push
jbe
pop
leave
sahf
dec
test
cmp
pop
outsl
cmpl
scas
sti
jns
adc
mov
shl
sarb
sbb
inc
lds
push
sub
ljmp
mov
mov
imul
push
xor
sub
rcrb
sbb
gs
push
push
outsb
inc
sub
out
lods
mov
cmp
mov
jo
aas
stc
lea
ret
sub
rcrl
push
or
mov
enter
pop
inc
fldcw
pop
jbe
push
push
loope
and
shll
ret
aaa
xor
mov
lret
cld
mov
xchg
and
sarb
xchg
sbb
shlb
in
popf
popa
jo
xor
sub
out
subb
daa
imul
sbb
adc
or
xchg
loopne
movsl
mov
cmpsb
stc
pop
pop
daa
pushf
push
push
repz
in
jl
inc
aam
test
mov
jecxz
jbe
imul
arpl
push
jg
je
in
nop
lret
dec
js
pop
xor
inc
mov
outsl
adc
pop
mov
clc
icebp
xor
lods
and
mov
push
dec
dec
out
inc
gs
mov
cmp
mov
insb
sbbl
or
mov
es
pop
rcll
fs
sbb
insb
xchg
sub
jg
xlat
jmp
decb
outsl
fsts
sub
rclb
addb
repnz
scas
icebp
or
cmp
dec
mov
and
mov
sbb
push
hlt
xor
fsubrs
xchg
in
ret
outsb
rolb
adc
call
mov
xor
popa
inc
sub
aaa
sub
dec
xchg
in
jecxz
mov
je
xchg
out
jecxz
pop
stos
ss
and
popf
sbb
dec
and
pcmpeqd
add
xchg
and
cld
inc
stos
mov
mov
lods
pop
arpl
sbb
xchg
mov
inc
adc
add
imul
sbb
or
xchg
loop
arpl
loope,pn
cmc
cmpsb
divb
cmp
mov
xchg
mov
pop
inc
xchg
mov
xor
jp
jns
sarl
xchg
loopne
cmp
int3
pop
imul
xchg
push
or
or
or
arpl
mov
dec
xchg
adc
loop
aas
inc
mov
xor
out
sahf
cld
or
add
pop
sub
cwtl
jl
movsb
jecxz
push
test
sub
ret
add
mov
ja
cld
sti
mov
sbb
mov
in
imul
mov
clc
inc
push
cmp
into
jp
rcll
xor
push
adc
jo
sbb
ss
pop
fcoms
mov
loope
dec
push
enter
lret
rol
cltd
adc
imul
repz
sub
cmp
dec
sbb
iret
jae
inc
fmuls
xlat
outsb
push
test
sub
lcall
push
mov
mov
mov
fs
adc
pushf
xchg
push
dec
pop
xchg
cltd
pop
mov
push
frstor
inc
out
in
jmp
popf
mov
mov
pop
cli
frndint
gs
test
adc
and
pop
test
or
cmp
push
push
add
fstpt
out
sbb
xlat
push
movsl
pop
ljmp
mov
lret
mov
xchg
xchg
add
adc
jle
cli
push
pusha
sahf
xchg
sti
leave
dec
pushf
push
cmp
xor
rcrl
mov
cld
mov
je
addb
lret
cld
xchg
cmpsl
jl
mov
in
lahf
repnz
pushf
xor
inc
add
adc
or
notb
test
cmpsb
sbb
sub
add
and
ret
lahf
shll
xchg
subl
mov
jp
outsb
sbbb
imul
push
pop
ja
into
xchg
leave
out
jae
mov
ret
mov
jb
outsl
outsl
push
inc
pop
cli
add
push
inc
leave
inc
dec
outsl
push
insl
xchg
cld
xor
xchg
sub
popa
je
dec
js
jae
cwtl
jp
jbe
fucomi
cmpsl
repnz
faddp
mov
xor
mov
out
sbb
outsl
inc
mov
fcmovne
into
xor
shl
jb
mov
loopne
dec
inc
fstpt
add
pop
jmp
roll
jnp
mov
jmp
outsb
cmp
dec
ljmp
mov
sub
xchg
jo
jbe
jecxz
mov
dec
enter
imul
mov
push
out
fidivrs
add
sbb
aas
fldl
inc
mov
movsb
pop
pop
dec
rol
fwait
test
cli
cli
in
and
out
xlat
sbb
mov
lahf
mov
sbb
jge
imul
cmpb
mov
fdecstp
dec
lret
lret
mov
mov
sub
ret
xchg
add
cmp
lods
push
insb
int
or
or
test
pop
adc
mov
stos
and
xchg
js
out
push
rclb
dec
inc
dec
lahf
adc
sbb
lods
fmul
jo
mov
add
push
setbe
out
mov
hlt
pop
scas
xchg
pop
fldenv
inc
das
cmpsb
pop
setno
fwait
dec
es
jns
popf
add
sbb
lret
inc
xor
cld
mov
pop
cs
into
jge
adc
xchg
int
mov
adc
cmp
xchg
inc
fdivr
xchg
xchg
test
jbe
div
xchg
dec
sub
jno
rorb
das
into
sbb
push
stos
jo
jp
out
push
fs
int
mov
incb
in
add
aaa
inc
mov
jge
jo
push
cmpsl
add
add
dec
xchg
jge
outsb
std
push
ficoms
test
outsl
and
push
mov
movsl
clc
movsl
push
or
repnz
inc
ja
out
es
mov
popa
in
lret
je
fs
sub
lret
xor
in
dec
fidivrs
stos
sbb
jp
scas
dec
adc
mov
iret
popf
xchg
xchg
clc
repnz
dec
pushf
cmp
sarb
jne
jl
push
cmpb
jge
test
push
into
mov
inc
sti
adc
xor
xchg
jle
dec
xchg
push
sbbl
stc
icebp
and
mov
lock
aaa
jnp
nop
inc
inc
push
negb
dec
sub
adc
push
aas
sbb
int3
push
push
fs
dec
xor
aaa
jb
outsl
inc
mov
cmp
pop
aaa
lcall
push
cmpsl
jmp
mov
test
mov
test
ljmp
or
std
push
dec
xchg
lds
xor
rorb
xchg
addb
repnz
jae
call
or
pop
into
xorb
repnz
push
clc
or
push
pop
dec
std
mov
jp
xlat
sbb
cmp
jo
frstor
jg
fbstp
mov
ljmp
mov
movsb
fimull
sub
test
inc
shll
ret
mov
xor
sbb
sub
dec
mov
into
ds
or
popf
push
mov
fsts
mov
loop
bound
mov
cwtl
jp
clc
repnz
pop
icebp
xor
cmp
iret
mov
sbb
sbb
cmp
sub
cmp
dec
jb
repnz
pop
loop
and
mov
ljmp
jle
cmpsl
daa
scas
push
sti
sub
cmpb
data16
adc
scas
test
outsl
xor
imul
mov
test
inc
mov
mov
shrl
mov
add
adc
and
push
cli
xor
cmp
popf
jnp
dec
xchg
addl
jne
push
and
scas
add
stos
or
mov
sub
xchg
leave
lahf
fcom
mov
icebp
ss
jb
sub
mov
movaps
cmp
and
test
icebp
jae
int3
mov
push
leave
fidivl
dec
fstl
mov
push
xchg
mov
mov
xor
mov
bound
sbb
or
out
dec
or
push
lods
jbe
sub
out
push
or
pop
dec
outsl
push
pushf
dec
jle
xor
bound
mov
adcl
mov
inc
sbb
std
aad
or
mov
in
adc
pop
add
fcomps
mov
mov
fmuls
clc
call
push
mov
xchg
jnp
cmc
xor
arpl
dec
mov
inc
xchg
jo
jmp
inc
fsubs
dec
push
fwait
sbb
mov
jmp
mov
push
lods
xor
ret
pop
mov
loop
push
add
pop
aas
jmp
pop
fs
pop
or
xchg
sbb
jp
pop
idivb
aad
dec
push
cltd
cmpsb
and
sub
push
shlb
stos
mov
insl
pushf
mov
shlb
stos
inc
in
mov
jg
xchg
lcall
jae
out
std
sub
in
mov
repnz
add
cmp
hlt
sbb
subl
sbb
pop
into
jb
test
pop
loopne
xchg
fiaddl
xor
jle
out
inc
mov
lcall
jp
cltd
and
pusha
imul
movsl
xchg
in
fs
and
cmpsl
mov
or
in
shrb
fwait
jecxz
and
fwait
shrb
adc
cwtl
cmp
cwtl
jno
popa
push
movsb
cmpsb
pop
lock
jmp
repnz
jbe
cmp
inc
fdivs
pop
mov
lock
xlat
scas
cld
subb
sbb
cmp
mov
and
xor
enter
das
rclb
test
jp
sub
in
jl
lcall
xchg
lods
mov
xchg
and
mov
fnstenv
shl
ret
lahf
xchg
int
insb
xor
pop
sahf
inc
push
cmp
les
lock
xchg
cmp
xchg
loopne
inc
aad
cmp
cli
cmp
push
bound
ror
test
adc
out
pop
cmp
add
stc
js
mov
enter
mov
faddl
addl
iret
test
fdivl
rcrb
cmp
mov
notl
stos
lret
jecxz
call
ljmp
fisubrl
add
push
and
aam
sbb
dec
dec
pop
cmc
je
xchg
pop
xor
aad
inc
pop
jge
xor
das
or
lret
add
push
push
decl
lods
cld
fstpl
xor
adc
jae
jbe
fdecstp
aad
test
lods
lds
arpl
pop
cld
lcall
xor
push
ret
test
pop
jb
pop
cs
test
lea
cmpsl
or
repnz
test
movsl
jns
add
adc
fdivrp
ljmp
xchg
mov
pop
aad
xor
and
out
divl
fisttpl
jecxz
jo
outsb
mov
add
xchg
outsl
push
out
xchg
mov
jne
loop
pop
sub
lods
cmp
push
mov
pop
shl
adc
and
fs
cmp
and
xchg
jg
push
jns
imul
or
mov
movsb
std
and
hlt
outsl
adc
xlat
sub
xchg
push
out
repnz
mov
fld
inc
cmpsb
in
lock
add
sahf
rolb
test
testb
in
xor
mov
fdivs
xchg
movsl
xor
inc
scas
mov
adc
repz
mov
sub
xchg
push
ret
cmp
fs
lods
lods
leave
test
or
push
pop
cmp
movsl
jp
stos
dec
aam
out
sub
mov
lea
pop
add
cltd
sbb
leave
push
nop
lahf
xchg
dec
popa
test
add
ss
push
lods
mov
mov
jle
mov
shrb
push
pop
mov
add
mov
dec
shrb
scas
test
inc
popa
mov
dec
jnp
sarb
out
jmp
xor
cwtl
iret
shrb
cli
pop
mov
xor
fnstsw
and
add
insl
cmpb
adc
cmp
nop
mov
pop
mov
into
dec
pop
cmpsl
sbb
out
andb
sbb
aad
fnstsw
ret
adc
int
sbb
ja
xchg
cmpl
aas
cmp
or
ljmp
js
mov
mov
or
imul
adc
arpl
dec
add
or
cs
loopne
push
scas
mov
mov
fldenv
enter
jb
mov
or
mov
scas
mov
mov
adc
mov
lods
or
mov
outsl
in
jecxz
je
xchg
inc
fistpll
inc
mov
cli
out
sub
les
add
rcll
jmp
lcall
and
clc
sub
adc
and
lret
pop
mov
mov
pusha
mov
jle
push
outsl
inc
xchg
into
mov
pop
push
add
out
lds
lret
pop
orb
insb
ret
ds
arpl
push
cld
idivb
pop
cmp
out
push
push
mov
divl
xchg
cmp
jl
dec
lea
mov
lds
out
xchg
sahf
sub
aas
cmp
pop
jp
xchg
fnstenv
sub
scas
push
lds
jge
aas
lret
ret
js
adc
aas
fdivs
mov
pandn
loop
push
ds
xor
cmp
inc
mov
push
imul
mov
or
loope
or
cmp
jp
add
fmul
cmpsl
xor
mov
dec
stos
fcmovne
cmp
cmpsb
lods
in
lret
jl
pop
mov
cmp
cmp
xchg
insb
sub
in
and
rcll
int3
dec
push
and
mov
adc
test
add
inc
sub
or
mov
push
ds
lock
dec
pop
jle
jp
popf
leave
cmp
les
gs
movsb
mov
add
mov
addr16
dec
scas
mov
pop
adc
push
fninit
mov
jl
and
call
push
and
lret
imul
cmp
mov
add
scas
out
sbb
mov
scas
sahf
push
test
adc
adc
idivb
outsb
sub
adc
jo
sahf
js
mov
cmp
lahf
dec
xor
ss
push
ja
push
jnp
mov
pop
dec
sbb
jle
or
and
xor
mov
roll
pop
test
cltd
idiv
or
in
sub
clc
xor
stos
cmp
sub
xchg
leave
xor
js
mov
nop
jg
stos
xor
jl
mov
xor
jmp
sub
in
aas
inc
cmp
sub
hlt
mov
pop
fcmovnb
sub
xor
pop
and
fnstsw
jp
jl
mov
lcall
jle
xchg
out
in
sub
sub
movsl
mov
in
mov
and
inc
test
push
pop
cmp
frstpm(287
inc
sub
in
pop
sbb
inc
mov
out
mov
jo
sbb
push
sub
pushf
cli
sbb
jnp
add
bound
loop
inc
and
push
and
ret
mov
cmpsl
mov
or
mov
sub
sub
adc
sbb
idivl
sub
enter
iret
int
adc
imull
enter
xchg
lahf
jmp
nop
bound
inc
repz
or
jnp
ret
mov
fnsave
in
mov
mov
cmp
dec
xchg
fildl
sbb
sar
xchg
pop
adc
pop
xor
xor
mov
and
fwait
out
or
add
mov
icebp
xchg
in
or
cld
pushf
and
mov
popa
cmpsl
lret
jmp
mov
add
or
jl
ljmp
test
cmp
loope
roll
xorb
push
xor
gs
pop
es
popf
or
pop
adc
inc
in
xchg
addr16
sub
add
fwait
cmc
mov
hlt
cmp
push
mov
jne
jl
lods
cmp
inc
cmp
lcall
cmpsl
mov
push
jp
adc
xchg
mov
sbb
push
test
sbb
loope
push
mov
in
fst
fildl
inc
add
addr16
mov
imul
fcomp
mov
and
popl
push
cs
jne
inc
repnz
adc
scas
push
cwtl
jg
pop
or
mov
incl
shl
push
mov
pop
xor
outsb
fistps
add
lods
push
and
jecxz
push
loopne
test
insl
sub
and
out
mov
out
push
divl
push
and
xor
icebp
int3
add
sbb
add
aas
mov
mov
icebp
les
pop
xor
or
sub
aaa
fwait
push
jno
movsb
adc
and
cmp
xchg
sub
loope
xchg
ljmp
fbld
leave
xchg
pop
push
pusha
cwtl
push
sub
push
mov
shll
mov
cmc
sub
mov
nop
sbb
push
or
inc
add
pop
mov
popl
daa
jnp
pushf
mov
or
mov
or
rorb
aaa
jge
imul
cltd
and
insb
mov
pop
cmp
sub
push
add
fstpt
mull
ljmp
mov
mov
mov
mov
sbb
mov
repnz
insl
inc
loope
mov
xchg
cmc
mov
xchg
xor
mov
popf
jp
cmp
negl
mov
icebp
lea
icebp
add
stc
and
sub
int
mov
xlat
jg
inc
sub
mov
arpl
sarb
nop
scas
aas
pop
cwtl
mov
out
sarb
dec
push
or
lds
push
cld
andl
mov
sarb
das
jmp
lret
push
enter
mov
xchg
aad
cmp
scas
or
add
add
div
mov
out
lock
xchg
xor
push
dec
pop
out
push
inc
or
int3
loop
inc
jle
inc
neg
mov
add
int3
push
mov
rclb
pushf
jge
sbb
adc
or
mov
pop
lock
pop
jo
jbe
popf
les
add
jmp
stc
rol
fs
jbe
mov
cwtl
pushf
jp
test
mov
push
mov
fdiv
inc
jno
dec
in
or
fnstsw
lods
jne
xchg
adc
out
ds
xchg
mov
or
aas
mov
rorl
push
daa
leave
or
cltd
xchg
div
fstpt
cmp
mov
jne
bound
pushf
mov
jns
loopne
out
adc
movsl
add
pop
or
fisubrs
cmp
sti
rcll
inc
sahf
inc
sti
push
hlt
fcmovb
idivl
xchg
adc
rclb
inc
lcall
mov
stos
push
getsec
push
fiadds
iret
mov
imul
outsb
inc
cmpsb
popf
les
and
push
out
push
aam
adc
dec
cmc
in
xor
add
inc
ret
mov
repz
ret
cmpsb
or
adc
rcl
cmp
addb
je
clc
push
adc
sub
and
mov
adc
sub
fnsave
mov
fimull
pop
pop
fnstsw
push
icebp
sub
mov
pop
pusha
and
lods
push
mov
add
scas
cmpsl
js
mov
data16
inc
pop
cmp
xchg
inc
and
mov
insl
xchg
add
pop
xor
arpl
std
clc
popf
js
cli
sbb
jo
shll
adc
lock
lods
jecxz
movsl
dec
xlat
sbb
movsb
aam
insl
adc
mov
das
xchg
popa
inc
jecxz
sub
pop
jnp
mov
cmpl
jle
enter
jmp
das
lret
fldenv
adc
test
xor
mov
pop
call
orb
push
sub
mov
jge
clc
mov
cltd
jnp
in
sbb
mov
fs
inc
xor
es
popa
imul
mov
pop
mov
cmp
cmp
pusha
out
imul
in
cli
fs
scas
push
sub
inc
loop
jle
pop
jle
aaa
push
mov
adc
fldt
jno
mov
cmc
daa
add
xor
rol
fs
stos
mov
sub
lcall
rep
loopne
inc
loopne
mov
cld
mov
sub
inc
mov
loop
call
mov
outsb
imul
mov
mov
clc
fwait
scas
push
insb
int3
inc
sahf
sbb
loop
test
xor
in
mov
cmp
aad
gs
mov
xchg
inc
jmp
xchg
incb
lds
sub
push
jp
cld
lcall
cmp
sub
xor
outsb
add
xor
xchg
sub
js
push
inc
rclb
popa
aas
insb
enter
mov
dec
push
iret
cmp
std
ret
loop
mov
jmp
dec
out
daa
fildl
mov
ljmp
ficomps
pop
fcoml
sarb
jno
repz
inc
idiv
testl
js
jno,pt
dec
ja
sub
mov
xorl
sti
movsb
xor
inc
mov
cmp
ljmp
mov
les
xchg
cmc
mov
jl
inc
lods
test
mov
dec
pop
cmp
inc
fisubs
enter
and
jno
mov
sti
cld
adc
push
inc
inc
push
mov
sub
adc
xor
xchg
lret
sbb
or
mov
inc
push
jb
fnstenv
iret
lcall
maskmovq
testl
push
ljmp
add
mov
scas
sbb
cmc
cmp
popf
aas
sub
or
adc
scas
xchg
lods
rorb
andb
movsl
test
push
lret
xchg
xchg
subb
loop
mov
loope
cmp
or
mov
push
adc
das
sahf
mov
enter
dec
stos
in
out
sub
push
dec
mov
ja
xlat
mov
xchg
rcrl
sbb
adc
jp
add
xor
jno
dec
outsl
decl
jmp
jno
mov
clc
scas
les
and
test
inc
push
fnsave
xor
jp
ficomps
jo
pop
and
adc
dec
pop
push
cs
aas
sub
das
add
add
fmull
jmp
sar
mov
xor
adc
pop
pop
lahf
jns
or
mov
cld
and
mov
add
insl
push
push
mov
mov
pop
je
xchg
cmp
xor
fsubrp
lcall
daa
into
leave
ret
repz
lock
push
xlat
inc
cwtl
repnz
or
mov
ret
xchg
loop
cltd
mov
mov
sub
test
adc
loopne
pop
je
inc
stos
addr16
xchg
dec
mov
mov
cmp
repz
xchg
movsb
faddl
push
das
pop
dec
xlat
out
jbe
daa
mov
sarl
jge
and
push
aaa
pop
mov
xchg
jle
xchg
rcr
and
pop
fists
iret
gs
mov
adc
adc
cmp
pop
push
push
cmp
ljmp
repnz
daa
mov
sti
cmp
mov
push
insl
outsl
pop
loop
and
shlb
js
in
or
hlt
je
mov
je
loopne
mov
inc
mov
movsb
in
outsb
notl
jo
ja
shl
jmp
dec
sub
popf
mov
adc
rcrl
mov
les
adc
cmp
pushf
xor
stos
es
hlt
sub
jno
mov
dec
mov
adc
notl
orl
gs
dec
xor
cmp
out
and
and
dec
outsl
ret
lcall
add
clc
xchg
enter
bound
lock
fsubp
cmp
idiv
jae
xor
mov
push
lds
sub
cmp
cmpb
insl
int3
cwtl
scas
and
push
cmp
mov
ds
insb
mov
ljmp
dec
sub
add
mov
hlt
pop
xor
test
add
sub
push
mov
push
jne
inc
mov
pop
adc
aas
cmp
jl
ret
or
ljmp
iret
xor
jns
mov
insl
jnp
xlat
insb
dec
add
cmp
cmc
push
jns
adc
aam
loop
es
popf
inc
fdivs
imul
dec
test
cmp
mov
cwtl
pushf
inc
dec
test
loopne
xor
test
imul
mov
dec
mov
ss
xchg
out
or
mov
pop
arpl
and
mov
dec
push
into
add
cmp
cmp
aaa
idiv
iret
push
sbb
mov
jne
pop
in
ds
sub
shll
movsl
push
inc
notb
adc
and
or
dec
jp
popf
cs
les
adc
xlat
xchg
xor
inc
sub
pusha
sub
add
mov
in
in
sbb
xor
loop
mov
pop
add
lcall
lret
jmp
inc
test
out
fmulp
mov
sub
call
pop
fisubs
push
mov
mov
cmp
repnz
add
or
jns
add
and
pop
mov
push
les
inc
add
push
jl
cmp
outsl
movsb
std
lock
pop
mov
int3
cmp
outsl
xchg
mov
sub
cmc
push
push
inc
in
ss
add
pop
jae
scas
cmp
and
pop
xchg
xor
and
jle
addr16
stc
sub
cmp
sahf
test
xchg
clc
call
xchg
lods
xchg
sub
lcall
lcall
cmp
daa
insl
lock
add
mov
in
insl
in
pop
stc
xchg
mov
into
sbb
push
and
or
cmp
or
in
ljmp
leave
out
clc
cmp
cmpsb
negl
aaa
lods
aad
in
or
cmp
dec
push
cmp
jp
xlat
iret
add
flds
out
ret
fcmovu
cmp
mov
xor
or
loope
pop
faddl
pop
jge
jne
mov
and
cmp
cmp
aad
outsb
lods
push
orl
mov
mov
sbb
pop
push
push
loope
insl
aam
pop
add
cmpsl
les
xor
jo
sub
test
or
daa
push
cmp
mov
adc
int3
push
push
or
xchg
mov
push
call
sbb
data16
cwtl
aas
iret
daa
in
xor
adc
aaa
cmp
popf
stos
cmc
inc
sbb
mov
addr16
stos
dec
jl
xchg
sti
idivl
sub
push
mov
daa
lahf
xchg
subb
or
stos
cmpsb
and
dec
adc
or
repz
pop
enter
popf
lea
xchg
sub
sbb
and
push
cmp
loop
sahf
add
cli
bound
add
add
imul
and
mov
ror
fdivs
jns
jmp
or
push
or
or
mov
icebp
pop
mov
dec
fdivl
push
bound
in
or
adc
pushf
mov
mov
outsb
ja
fisttpll
dec
cwtl
sbb
sbb
jb
sahf
push
std
mov
loop
in
fsubr
cmp
out
sub
cmp
mov
pop
sahf
dec
inc
cmp
repz
and
push
std
pop
mov
mov
mov
jb
outsb
jecxz
mov
inc
push
fcomi
push
test
repnz
inc
xchg
push
xchg
loop
mov
jmp
in
inc
data16
frstor
fst
inc
cmp
dec
aam
sub
pushf
xor
add
dec
decb
es
adc
jg
mov
xor
lret
sub
stos
cli
fnsave
pop
jno
fdivrs
mov
enter
arpl
lcall
or
insb
or
jg
fisttpl
xchg
add
lock
inc
fisttpl
add
inc
xchg
es
lea
and
in
hlt
popa
outsb
leave
or
repnz
test
cmp
lcall
ficompl
add
sub
and
adc
imul
idivl
add
imul
dec
imul
add
mov
and
loopne
in
mov
fiaddl
mov
pop
mov
add
and
pop
xor
aaa
movsl
adc
push
jns
in
and
scas
dec
sbb
adcb
test
add
xor
jns
mov
add
loope
adc
and
jns
loop
out
mulb
fistpll
xchg
rcrb
pop
inc
ret
andb
xchg
mov
jmp
mov
scas
fs
sub
jge
in
imul
jae
and
add
xchg
add
adc
inc
add
push
popf
jnp
jo
xor
mov
enter
push
daa
pop
cmc
jmp
pop
add
popf
mov
sbb
stos
mov
cmpsl
or
loop
ffree
je
test
dec
popa
mov
push
jg
outsl
and
adc
lcall
inc
mov
cmpsl
popa
push
jle
insb
xchg
inc
sbb
lock
out
aaa
ljmp
push
cmp
cli
inc
adc
icebp
outsl
repnz
mov
std
cwtl
sahf
xchg
int3
mov
inc
repnz
scas
lahf
cmp
xor
mov
sahf
inc
mov
mov
fsubl
cli
jne
es
adc
xorb
iret
gs
pop
std
cmc
or
jns
adc
pop
rcrl
sarl
test
pop
fdivp
pushf
and
lret
xor
insl
add
jbe
rorl
cmp
fnsave
cmp
jnp
pushf
idivb
in
in
negb
add
push
jmp
scas
sub
mov
movl
jmp
or
pop
arpl
iret
mov
pop
jl
fs
test
cmpsl
pusha
sub
cmp
cmp
cli
ja
fdivrl
adc
mov
push
pushf
dec
cmp
into
out
insb
insb
sub
mov
jae
out
adc
and
repz
in
mov
xor
mov
popf
lahf
addl
xchg
mov
and
outsl
out
xor
adc
jmp
push
icebp
insb
sarb
gs
mov
popa
sub
mov
dec
out
lds
adc
lock
pop
lcall
bound
adc
test
xor
in
and
adc
test
or
shrb
ficoms
out
jns
pop
inc
cmc
seta
mov
push
outsl
cmp
imul
push
movsl
call
lcall
jle
jmp
iret
push
pop
push
jne
inc
rcr
push
shll
adc
jp
hlt
enter
xor
cmc
mov
cmp
cmp
sub
imul
xchg
in
mov
xor
or
xor
ss
jl
cmpsl
ds
adc
inc
cmpsb
scas
fsubl
xchg
out
in
cmp
sbb
stos
jns
dec
ss
jecxz
out
gs
js
stos
dec
aam
rorb
pop
xchg
neg
fldcw
adc
xchg
xchg
jne
out
sub
xchg
xchg
js
nop
aas
jl
jge
xchg
das
adc
inc
loopne
test
sbb
dec
sub
cli
gs
lret
imul
mov
cmpxchg
jmp
xor
push
lret
int
sti
mov
mov
and
push
jge
aam
inc
out
in
leave
popf
sub
push
bound
cmc
jp
mov
xor
add
push
inc
inc
fldlg2
mov
test
mov
adc
clc
mov
daa
loope
inc
and
dec
lods
les
inc
jne
fnsave
adc
outsb
in
mov
sbb
mov
outsl
xchg
sub
pop
lds
lret
cmpsl
loop
subl
lret
pop
mov
adc
ds
ret
test
fmull
and
lods
or
fdivr
or
imul
mov
xchg
das
jmp
inc
cs
scas
lock
inc
int
out
add
rorl
and
add
ja
push
mov
or
icebp
xor
cmp
jb
out
cmpsl
mov
mov
fdivrs
adc
jnp
and
movb
cmpsl
adc
dec
inc
inc
lock
call
add
inc
push
das
outsl
mov
ljmp
iret
push
lahf
ret
popa
push
mov
jae
push
pop
mov
inc
shl
rcrl
pop
mul
pop
out
push
aad
stos
aad
sbb
mov
add
sub
mov
imul
stos
fldl
cmc
lock
and
lcall
xchg
jnp
jns
jmp
mov
stos
or
idivb
je
rorb
adc
sbb
pop
test
and
shll
lock
pusha
ret
xor
and
jae
inc
mov
add
inc
cmp
sbb
and
inc
add
xchg
stos
aam
xchg
sti
out
stc
cwtl
adc
mov
jae
mov
cmpsl
out
cmp
in
imul
mov
sbb
xorb
jmp
sbb
jne
jg
inc
es
in
adc
xor
cmp
xor
add
add
nop
sub
fmulp
xchg
add
aad
dec
hlt
xchg
pop
ret
push
pop
aas
pop
das
add
orb
add
sarb
mov
scas
sbb
xchg
sbb
ret
ret
ret
in
and
mov
xchg
and
add
fadd
popa
test
aas
daa
inc
push
popf
outsl
dec
push
cmp
pop
ret
inc
imul
out
sub
and
xor
mov
or
pop
in
gs
nop
leave
adc
mov
dec
push
push
jbe
popf
jns
cld
testl
xlat
dec
fnstenv
mov
sbbl
or
lahf
xchg
xor
push
into
xchg
pop
mov
insb
jmp
push
out
je
loop
stos
sbb
addr16
sbb
scas
dec
xchg
inc
ss
cmp
dec
enter
mov
mov
or
push
ss
stos
icebp
incb
inc
rol
dec
xchg
sub
loop
jne
pop
adc
ret
sbb
xchg
mov
push
nop
stc
imul
jl
mov
bnd
inc
mov
testl
and
decl
xchg
mov
fcmovne
loopne
enter
cmpsl
sub
daa
inc
or
and
pop
sbb
fbld
stos
sti
lods
lret
std
sbb
xchg
sbbl
fbld
int
and
in
push
add
sti
jp
adc
arpl
add
jmp
daa
sti
push
xor
sbb
adc
dec
adc
and
or
call
addr16
cmp
cvtdq2ps
cld
jl
inc
mov
mov
or
mov
xchg
out
popf
fistl
mov
cmp
inc
xchg
lcall
mov
mov
push
sub
xchg
fsubr
roll
loope
pop
mov
gs
addr16
and
sub
incl
popf
enter
jae
mov
hlt
lods
lea
xchg
inc
repz
sarl
pop
ja
push
mov
call
xchg
cli
call
enter
sahf
pop
xchg
pop
add
pop
pop
out
call
lcall
lock
ja
mov
push
call
outsl
dec
mov
inc
repz
or
test
or
cmp
mov
shll
sbb
sahf
cmpb
xchg
outsb
cmpb
ficoml
push
je
and
cltd
sbb
call
stos
daa
push
cltd
push
inc
xchg
jbe
mov
mov
mov
enter
pop
or
into
jmp
and
sbb
dec
popf
xchg
sbb
je
pop
xchg
pop
mov
icebp
lods
daa
mov
mov
inc
push
mov
lret
add
add
push
imul
sbb
mov
and
ret
stc
aas
sub
lcall
cmp
mov
sbbl
cmc
rclb
sbb
pusha
stos
sbb
icebp
dec
mov
jo
inc
ss
mov
test
sub
rorb
test
xor
idivl
dec
repz
or
mov
pop
test
pop
jge
mov
and
mov
repnz
daa
add
cmpsb
mov
cmp
imul
cs
xor
dec
cmp
xor
repz
mov
jo
cmc
testb
and
inc
pop
negb
ret
arpl
outsb
jmp
enter
subl
insl
js
lret
jno
sbb
stos
lret
rorb
xchg
mov
xor
enter
ds
outsl
and
stos
stos
je
cs
ds
xlat
mov
push
mov
jmp
in
inc
xrelease
jbe
movsb
nop
or
inc
mov
jmp
xchg
pop
mov
lea
jg
mov
mov
or
pop
mov
and
push
je
inc
inc
xchg
mov
iret
push
loope
jnp
adc
xchg
lods
xchg
gs
inc
clc
in
and
push
jg
pop
imul
mov
filds
aas
mov
sub
sahf
out
insb
ss
cwtl
fdivs
inc
pop
cmpsl
or
bound
sbb
mov
push
jbe
int3
mov
mov
sarb
aaa
rcrb
rorl
fs
jne
aas
or
sub
fiaddl
int
mov
loopne
movsl
in
aam
sahf
popa
mov
mov
dec
les
mov
sbb
mov
rorl
fs
mov
ja
out
add
sbb
adc
sbb
adc
mov
ret
and
ficoml
shlb
addb
enter
arpl
jno
shl
xchg
xor
jb
es
sbbb
test
rep
xchg
lock
mov
and
cwtl
es
push
lock
es
lret
sub
fdivs
or
mov
pop
pusha
lea
cltd
lods
push
lea
das
inc
inc
mov
stos
add
sahf
jns
pop
jg
mov
cmp
adc
lea
pop
xor
push
sub
imul
aam
out
dec
mov
mov
test
push
mov
idiv
ficomps
jo
hlt
inc
pop
or
notb
mov
fnstsw
test
push
pop
enter
mov
leave
adc
pusha
jno
or
mov
nop
lods
push
mov
test
cmp
fisubl
and
mov
negb
fstps
dec
nop
in
mul
loopne
andl
xor
jb
pop
aas
push
outsl
and
mov
lea
or
bound
xor
stc
fisttpl
data16
mov
and
add
call
ret
fisttps
and
stc
movsl
jge
mov
mov
mov
mov
loope
in
movsb
clc
cmp
rcl
mov
xchg
dec
fbld
ss
rolb
add
jns
roll
mov
xchg
mov
adc
jnp
mov
add
adc
lock
xlat
dec
lret
js
xlat
fldl
cmpsl
lret
adc
pop
jb
and
dec
xchg
dec
fnstcw
outsl
ret
aas
pop
add
push
and
aas
mov
mov
test
cld
mov
inc
cmc
dec
test
dec
cmp
push
mov
sub
aad
add
movsl
sbb
push
jmp
mov
jbe
dec
imul
dec
inc
pop
xlat
mov
mov
push
pushf
pop
sub
addr16
cmp
bound
mov
and
scas
neg
lods
insl
inc
jmp
rclb
fiaddl
add
and
sbb
xchg
or
pushf
aaa
add
loope
popf
push
bound
adc
mov
in
out
pop
lods
fcompl
test
shr
adc
test
mov
das
xchg
in
movsl
mov
and
clc
cltd
cmpsl
insb
rol
mov
sub
pop
inc
icebp
dec
mov
xor
cmovg
mov
inc
repz
inc
ret
mov
sbb
cmpsb
repz
mov
mov
mov
in
sbb
fcmovnb
sahf
gs
test
mov
push
adc
cmp
cmp
jecxz
jbe
and
iret
xlat
pusha
sub
jno
sti
int
pop
test
sbb
push
aam
jecxz
test
add
in
sub
icebp
call
clc
cmpsb
xchg
aad
sbbl
dec
mov
cltd
lods
add
mov
mov
pop
fnstsw
jne
in
mov
pop
dec
mov
cmpsl
xor
xchg
mov
pop
xchg
fadds
fs
inc
rclb
adc
sbb
jo
mov
dec
movb
pop
outsb
sbb
out
inc
out
rcl
hlt
dec
xchg
ret
xchg
dec
pop
add
jno
jo
movsb
jl
xchg
jno
mov
pusha
je
and
xchg
adc
and
push
add
adc
add
int3
cmp
xor
and
std
jb
ja
mov
push
lahf
out
popl
add
pop
and
sub
adc
push
and
xor
lock
fwait
add
add
cmpsb
inc
test
cmp
test
add
xchg
sbb
dec
mov
pop
outsl
int3
subb
sbb
dec
pop
push
idivl
scas
jmp
mov
pop
fcompp
inc
je
jns
mov
or
jno
xchg
xor
mov
jp
mov
dec
das
pop
bound
adc
sub
jl
inc
push
add
mov
shlb
js
cmp
fs
fldcw
scas
cmp
stc
adc
add
ljmp
or
lcall
cs
cmpsb
sbb
push
sub
or
xor
aad
mov
mov
push
jne
pushf
stos
les
inc
mov
mov
pop
lahf
out
ficomps
nop
cld
outsb
lahf
pusha
sub
push
ja
push
add
inc
mov
xor
rorl
cltd
std
imul
push
cmpb
lods
addr16
test
ret
sbb
add
sub
lea
ret
outsl
cld
add
leave
jbe
iret
mov
mov
cltd
inc
decl
lret
sub
fs
push
add
rcll
sbb
scas
mov
mov
sbb
lea
mov
push
loop
sub
cmpsb
cmp
cmp
pop
inc
aaa
out
ja
mov
jle
mov
iret
inc
dec
aam
or
out
das
cwtl
pop
mul
xchg
das
faddp
dec
push
or
sbb
dec
inc
cld
or
mov
xor
out
test
out
cmp
or
jle
in
xchg
sbb
sbb
mov
and
lock
imul
mov
adcb
lods
sub
pop
adc
jo
mov
mov
es
iret
pop
xchg
inc
and
insl
dec
in
pop
sbb
bnd
subb
dec
mov
aaa
jl
andl
lock
cmp
negb
xor
push
add
and
push
push
mov
shlb
pop
mov
movsl
jae
xchg
add
in
imul
movsbl
cmp
dec
xor
mov
pushf
and
stos
jo
pop
jecxz
push
ds
loopne
mulb
stc
push
pop
iret
push
mov
adc
jmp
push
push
shlb
stos
shlb
push
push
or
lods
mov
jno
test
inc
cltd
cli
adc
jle
mov
pop
out
call
xchg
mov
xchg
decb
mov
mov
pop
insl
das
cmp
or
ret
mov
iret
push
and
jmp
aad
xor
dec
fstp
push
rcrb
cmpsb
jno
lret
pop
and
mov
or
add
adc
aad
call
inc
gs
insl
push
test
adc
movsl
js
jbe
mov
sar
adc
out
rorb
outsb
and
mov
inc
in
rcll
popf
xchg
fsubr
movsl
mov
jl
loopne
pop
es
adc
cmp
add
cmp
pushl
cmpsb
nop
jg
pop
jl
pop
cmpsl
xchg
sub
jg
je
popf
int
ja
fdivs
or
pushf
orb
out
in
and
cmpsl
mov
shlb
js
imul
adc
mov
fyl2xp1
mov
in
outsl
addb
lds
mov
and
in
int
iret
sbb
sub
shll
jge
xor
push
test
lcall
aas
cmp
lahf
adc
inc
negb
test
ljmp
sbb
inc
mov
lock
lds
add
inc
movsb
insb
dec
cld
add
dec
xor
xchg
xor
xchg
inc
loope
test
negl
inc
sbb
clc
push
and
and
dec
and
dec
fsubrl
sub
adc
inc
sbb
mov
lea
gs
push
inc
xchg
arpl
stos
mov
push
xchg
aam
test
jnp
test
xchg
arpl
test
push
out
or
mov
cmpsl
sbb
inc
push
int
or
gs
bound
add
adc
push
test
mov
das
cltd
push
jecxz
push
sub
mov
test
clc
adc
clc
pop
popf
xchg
out
scas
jg
leave
pop
je
and
pusha
lods
pop
je
lahf
clc
push
push
push
stos
loope
adc
mov
sbb
addb
cmp
sarl
dec
inc
outsb
cmp
mov
or
out
and
xor
add
je
ja
xlat
insb
test
mov
fs
lock
inc
jbe
push
sub
in
insb
mov
loopne
arpl
movsl
jmp
in
jmp
pop
jl
in
dec
and
clc
push
mov
mov
insl
out
imul
and
je
xor
out
sbb
pop
add
xchg
push
cmp
ret
add
xchg
or
icebp
push
out
or
xchg
pop
pop
cmpsl
or
inc
ret
lods
stc
xchg
mov
lea
mov
push
jmp
inc
or
in
or
bound
out
imul
cmp
or
aaa
pop
mov
test
dec
hlt
daa
add
xchg
stos
lret
je
push
test
adc
jne
test
lods
push
add
sub
jae
ss
push
mov
stos
adc
and
or
subl
jne
fcomps
xchg
ret
out
add
lahf
ret
stc
jl
xor
push
xor
sub
and
fldcw
icebp
or
scas
mov
and
jnp
lock
movsb
pop
jecxz
stos
mov
or
sbb
adc
xchg
and
fmuls
scas
add
push
mov
es
enter
cld
outsl
fwait
cmc
iret
aaa
xchg
nop
add
inc
mov
fdivs
mov
inc
aas
fbstp
dec
xor
mov
fneni(8087
mov
stos
mov
gs
dec
rcll
add
jns
jp
mov
pop
cmpsl
dec
xchg
cmp
push
xchg
outsb
insb
nop
dec
dec
push
loop
dec
leave
shl
and
ljmp
mov
call
jp
add
inc
lret
cmpsl
jno
jbe
and
loope
fnstsw
enter
movl
sbb
jne
push
fmuls
jecxz
push
sbb
pusha
add
dec
or
pop
std
or
mov
das
push
adc
pushf
mov
stc
repz
mov
stos
movsb
inc
into
rcrb
mov
mov
xor
mov
aad
dec
or
adc
lods
jg
pop
stc
add
adc
push
enter
fs
add
test
pop
stos
and
iret
sub
inc
loopne
movsb
pop
in
in
jo
mov
mov
xchg
sahf
insl
mov
ss
and
pusha
aaa
lret
cmpsb
loop
mul
jb
xchg
inc
pop
jg
lods
dec
jo
push
jns
xchg
mov
push
or
scas
push
lea
das
arpl
or
mov
lds
iret
inc
add
iret
es
adc
mov
out
int3
xchg
ret
adc
mov
adc
sahf
adc
mov
flds
sub
cmp
push
or
xchg
ja
dec
add
fyl2xp1
rcrb
add
jmp
sbb
inc
jbe
mov
xor
or
sbb
sub
xchg
sub
jne
inc
push
push
sub
push
fs
ret
mov
out
dec
add
repnz
cmpb
xor
sbb
dec
sarb
enter
pusha
dec
scas
and
ja
xor
cmc
mov
xchg
push
mov
cmpsb
or
aas
push
pop
outsl
inc
pop
xor
xorl
popf
mov
cld
and
dec
aam
stos
jbe
xchg
push
mov
lret
mov
shll
imul
mov
jl
sub
cltd
dec
add
testl
pop
mov
scas
dec
pop
shr
cmp
inc
pop
movsb
xor
std
sti
push
int
out
and
inc
mov
mov
imul
cmp
jle
mov
push
inc
inc
jns
mov
movsl
inc
cmp
idivl
in
push
mov
jmp
pop
cld
int
std
or
xlat
call
arpl
ret
and
fisubs
adc
iret
pushf
push
mov
mov
mov
xchg
push
adc
sub
fimuls
test
dec
xor
add
aam
out
aas
popf
fadd
mov
mov
cmc
inc
icebp
adc
mov
adc
das
jle
jns
mov
sub
mov
icebp
or
push
cli
insl
popf
ret
mov
imulb
cld
insb
test
jge
mov
adcl
mov
int
add
xchg
add
pop
movsb
das
out
push
mov
fwait
test
push
jecxz
sti
ljmp
mov
lds
outsl
pop
mov
jo
mov
adc
lret
rcll
push
in
test
sbb
ja
sbb
pop
int3
outsl
mov
fistl
gs
cmp
push
xchg
push
sar
mov
fadd
dec
sbbl
cmpsb
mov
cmp
sub
aam
add
sub
imul
lods
xchg
xlat
inc
pop
inc
popa
xchg
cmc
pop
adc
or
add
adc
push
idiv
ret
in
xor
cmp
fwait
arpl
jo
mov
xchg
jnp
aam
test
pop
sbbl
mov
pusha
outsb
mov
pop
dec
fldl
sahf
cwtl
fildll
cmp
pop
push
mov
je
stos
shrd
cmp
aaa
lods
mov
xor
lret
lret
mov
test
cmpsb
into
push
and
inc
add
aaa
push
inc
decb
and
add
mov
sar
out
inc
fidivs
enter
xor
and
outsl
inc
and
scas
nop
lahf
ficomps
cmp
sbb
filds
rcll
mov
ficomps
xor
cmp
inc
or
mov
lret
push
dec
jns
push
leave
inc
cmp
cs
mov
mov
pop
mov
and
mov
and
jmp
sbb
add
push
ret
jecxz
iret
cmc
and
lcall
leave
push
mov
ror
gs
or
jmp
mov
scas
cltd
adc
lods
sahf
mov
movsb
mov
repnz
aad
mov
mov
cmp
in
out
xor
cmpsb
sti
int3
pusha
out
jl
xchg
test
fs
mov
jle
scas
pop
insl
xchg
adc
sti
test
jb
orl
enter
mov
cmp
enter
ljmp
mov
popa
fisubs
addl
jnp
aad
xor
scas
scas
mov
outsb
sub
das
lods
loope
xor
mov
inc
icebp
pop
sahf
inc
push
jbe
sbb
pop
arpl
arpl
inc
dec
sahf
add
rolb
divb
shll
cmpl
jns
xor
push
imul
dec
pop
sbb
cwtl
in
and
cmp
leave
dec
push
xor
adc
subb
cmp
cmp
call
es
xor
xor
adc
or
fwait
clc
fwait
push
push
stc
nop
mov
test
xchg
rorb
js
repz
fisubrl
lock
jp
arpl
test
daa
inc
jae
lret
addr16
add
xlat
leave
add
jge
in
test
cmpsl
ret
out
addr16
sbb
sbb
repz
mov
rcrl
sub
cmpsl
sub
hlt
dec
jbe
pop
inc
sub
push
imul
fwait
pop
jl
cmp
or
adc
pop
cmpsb
cmp
inc
inc
scas
stc
jae
add
mov
daa
adc
out
cld
mov
dec
mov
mov
mov
pop
pop
inc
pop
ljmp
xor
or
test
push
xor
loope
sti
push
enter
inc
loopne
ret
pop
lea
inc
add
inc
sub
xchg
jns
mov
loopne
aad
lahf
inc
push
arpl
xchg
cmp
inc
inc
or
jg
and
daa
jle
adc
inc
dec
add
push
mov
mov
pop
addb
aam
sub
lret
rorb
mov
mov
sbb
jae
mov
pop
dec
dec
test
rclb
inc
mov
aad
lods
add
stos
pop
ror
push
addr16
loop
mov
icebp
lods
mov
pushl
xchg
push
fildl
inc
fs
ss
add
cmp
stc
idivl
inc
jne
test
hlt
jb
andb
jmp
dec
int
xchg
jne
mov
in
cld
in
and
insb
xor
aam
cmp
lcall
inc
xchg
imul
repnz
in
jmp
ja
mov
jp
push
in
sbb
mov
jne
sub
sbb
jg
icebp
jb
fwait
xorb
lock
and
lret
jmp
in
addl
add
cs
push
or
lods
xor
inc
shrl
sbb
iret
in
sbb
push
cmpl
ds
mov
inc
sub
daa
mov
std
pop
cmc
sti
pop
or
inc
outsb
movsb
xchg
mov
fwait
nop
push
imul
sub
cmp
popa
es
cld
iret
in
sub
jecxz
aas
fdivrs
mov
add
xchg
stos
inc
in
add
pop
fmuls
push
sbb
mov
jmp
cmovo
sub
push
idivl
out
test
mov
and
je
lock
test
pop
mov
jb
mov
cltd
or
data16
mov
add
push
or
xor
pop
sarb
sub
int3
jno
pusha
cwtl
movsb
aad
in
ss
sub
les
pop
andb
je
push
loopne
xchg
xchg
dec
push
cmp
out
sbb
xchg
int
inc
ja
rcrb
xchg
xlat
jns
cmp
and
mov
ret
xchg
cmp
xor
lahf
nop
and
inc
icebp
mov
xchg
xorb
outsl
test
outsb
pop
leave
push
xorl
dec
cmp
push
icebp
xchg
pop
dec
push
cmp
lret
cs
push
rclb
pop
xor
xorb
scas
sub
cmp
pop
lahf
inc
les
sbb
or
dec
xchg
xchg
or
dec
xchg
push
cs
fidivs
adcl
dec
cld
iret
and
add
in
ret
jle
dec
xchg
sbb
int
rcrl
lret
xchg
pop
jb
inc
push
adc
stc
pop
fs
repnz
mov
rcr
scas
mov
aas
jne
leave
cmp
aam
in
jmp
and
subb
pushf
outsl
pop
push
and
shrl
mov
aaa
in
cmpsl
sarb
mov
dec
lahf
popf
lds
cmpsl
cltd
mov
inc
loop
fsts
dec
and
in
adc
jbe
lret
xor
pop
mov
pop
rcrb
mov
cmp
adc
movsl
scas
in
and
outsl
cmp
das
rcrl
pop
fdivr
and
pop
outsl
subl
rcrb
mov
xchg
and
mov
cwtl
and
inc
out
into
xor
and
xchg
scas
sub
xchg
and
call
xor
mov
xor
cld
jnp
roll
jg
imul
mov
inc
xchg
push
out
imul
inc
scas
mov
imul
out
mov
aas
mov
sbb
rol
push
test
jmp
pop
mov
sub
insb
and
mov
cmp
inc
rolb
ds
popf
add
rolb
push
pop
nop
jl
ret
lds
andb
ss
mov
xor
out
out
jecxz
ds
cltd
xchg
cmpxchg
mov
pop
pop
cmpsl
cmp
arpl
jnp
mov
mov
sbb
popa
leave
out
mov
in
jge
pop
dec
sub
shrb
or
imul
call
clc
jg,pn
pusha
data16
out
push
pop
loope
fwait
lret
cmpsb
inc
xchg
dec
cmp
lret
loopne
jmp
dec
out
fdivrl
xchg
imul
std
cmpl
add
jmp
jae
shrl
dec
je
jno
sbb
cltd
stc
adc
out
mov
aaa
enter
loop
out
arpl
inc
cmp
popa
jae
popf
std
xlat
enter
xor
pop
aas
js
ljmp
push
flds
mov
lret
or
fistl
mov
cmp
ret
hlt
dec
js
lds
dec
pop
pop
adc
push
add
pop
sub
sbb
dec
sbb
jecxz
push
add
dec
subb
adc
lods
mov
dec
xor
ret
aad
cmpsb
icebp
scas
mov
mov
popa
dec
int3
pop
sub
fwait
jno
in
sub
push
sub
test
jne
repnz
mov
push
sti
xchg
dec
adc
int3
out
pop
or
sbb
push
cwtl
dec
jp
mov
movsl
int3
cmp
sbb
adc
and
in
pushf
mov
inc
cmp
repz
pop
xlat
mov
lea
sub
jo
push
js
jg
or
into
or
outsl
and
int
xlat
mov
dec
inc
xchg
xchg
repnz
imul
cmpsl
pop
pop
push
or
xor
sbb
data16
mov
mov
imul
pop
or
frstor
lret
xchg
add
dec
and
dec
cmpsl
xchg
popa
call
mov
mov
cmp
or
int3
test
shrb
add
sti
imul
pop
sahf
mov
xlat
add
mov
inc
test
out
fs
fiaddl
imul
add
push
mov
lret
cmc
test
int
jnp
push
xchg
sub
imul
movsb
cs
jns
pop
mov
and
mov
or
hlt
mov
lods
push
out
mov
bound
xor
mov
cmpl
enter
mov
shll
test
xchg
or
mov
inc
and
sub
mov
stc
test
dec
mov
hlt
add
push
test
cmp
xor
stc
divb
jmp
clc
dec
nop
stos
fsubrl
aad
cmp
out
cmpsb
inc
dec
enter
aad
ja
jl
mov
mov
mov
mov
test
fisubrl
repnz
adc
dec
movsb
andl
test
aad
lods
test
inc
imul
inc
pushf
insl
mov
inc
push
cli
dec
out
mov
shr
sbb
or
push
out
in
push
add
or
popf
pop
shll
adcb
insl
ret
sub
and
or
lods
out
inc
test
dec
int
fwait
xchg
push
test
push
adc
repnz
das
in
push
add
sar
jo
add
popa
inc
popf
ljmp
lods
aas
cmp
jbe
aam
iret
xchg
adc
imul
inc
setns
xor
js
test
jmp
push
and
adc
les
and
mov
call
pop
xchg
push
sub
inc
pop
xchg
or
es
rol
or
and
stos
nop
and
in
jae
mov
add
addl
push
mov
adc
fisubrl
loop
and
rcll
jg
movsl
out
push
adc
and
pusha
into
xchg
sbb
hlt
xchg
jno
adc
cmp
movsb
test
mov
mov
xor
or
icebp
lock
or
movsb
sbb
add
test
pusha
lds
mov
mov
repnz
clc
mov
fwait
std
or
or
sub
pusha
test
jns
push
pop
xor
mov
jge
arpl
adc
sbb
lods
cmp
outsb
in
cmpsb
sarb
pop
enter
cmp
pop
rorl
or
jg
cmp
adc
mov
iret
sti
ds
nop
gs
adc
push
push
adc
orb
mov
mov
cld
fcmovnu
xchg
xchg
push
cltd
cmp
cmp
vmovntdq
fwait
cmp
and
insl
insl
add
idivb
adc
or
ficoml
sqrtps
in
cmp
fstp
xchg
rcr
add
jb
and
push
adc
or
loop
lods
pop
into
inc
aam
out
out
cmp
pop
and
jl
push
scas
fldl
movsl
sbb
pop
cmpsl
ficoml
pop
shl
sub
push
xchg
aaa
xor
aam
adcl
sub
mov
scas
test
mov
fildl
sbb
inc
lods
int3
daa
lret
fiaddl
cmpsl
enter
pop
or
or
mov
mov
push
jg
and
das
in
xor
fsubrs
xlat
mov
dec
mov
push
push
fimull
dec
shlb
add
mov
cmp
popf
lea
add
mov
decb
pop
sub
adc
es
jno
cltd
cmp
cmp
adc
cmp
add
mov
shlb
pop
ret
sub
dec
adc
lock
or
push
push
cs
dec
sub
repnz
jo
cmpsb
cltd
lods
mov
jno
imul
test
fmul
add
adc
xchg
mov
repnz
add
pop
aad
sahf
mov
and
cmp
cmp
popa
jne
js
xchg
inc
cld
stos
out
jno
imull
fldt
daa
stos
jne
andb
xchg
sub
push
xor
pop
or
and
push
cmp
repz
lahf
and
cld
cltd
movsb
push
add
jmp
push
push
ret
outsl
mov
sub
dec
jno
push
jne
pop
and
pop
jnp
pop
inc
mov
int3
pop
es
add
mov
ret
mov
adc
xor
aaa
ljmp
inc
sahf
sub
mov
lea
pop
fs
inc
iretw
and
ja
insb
cmpsl
loope
inc
cli
dec
and
in
jg
lahf
jle
jns
sbb
shl
sbb
and
dec
in
push
loop
push
fidivrl
clc
and
gs
jg
mov
pop
xchg
cli
stc
mov
jmp
lea
xchg
pop
cmp
push
pop
dec
jne
sbb
pop
ret
inc
push
xlat
pop
cmc
mov
rorb
or
daa
loope
jmp
aam
out
adc
inc
push
mov
fstl
sub
add
add
mov
fimull
movsl
jg
xchg
jno
test
jecxz
aas
into
add
lret
ficoms
fmull
loopne
xor
clc
repz
test
scas
fs
divl
jl
popa
xchg
jno
add
mov
and
cli
lret
insl
push
inc
mov
and
das
clc
cmp
mov
and
insl
cltd
lock
and
push
xchg
mov
movsb
cmpsb
mov
fwait
stc
jno
ret
test
imul
es
movsl
mov
fimull
xor
sub
insb
insb
mov
adc
fwait
jecxz
movsb
mov
enter
add
jno
xchg
pop
out
js
jp
loopne
add
sub
in
fldenv
lret
dec
sub
shrl
pop
inc
loop
sarl
push
dec
xchg
xchg
add
jae
push
jae
add
jnp
push
inc
adc
fwait
shl
jp
pop
cmp
in
aaa
fwait
mov
lds
fdivs
movsl
cltd
lahf
gs
shlb
xchg
jg
xlat
fs
jbe
ds
pop
imul
pop
xor
das
aaa
loope
fstpl
xlat
loope
mov
xor
cmp
int3
addr16
clc
cmpsl
sbb
pop
mov
cmp
pop
cld
dec
daa
jne
scas
lock
lock
icebp
nop
jae
or
fstl
nop
jae
cmp
orb
push
xor
ja
mov
popf
jb
out
or
inc
loope
push
adc
das
push
mov
outsl
dec
loop
and
cmpsb
mov
gs
adc
fwait
pop
rorb
jbe
adc
aas
mov
cmp
stos
arpl
ficompl
clc
fst
out
into
cmpsb
mov
xchg
push
ret
sarl
cli
add
dec
xor
pop
ficoml
adc
test
in
xchg
stos
mov
fdivrp
arpl
and
lock
test
jp
add
adcl
js
movsb
jae
xchg
xchg
push
insb
repnz
or
add
repnz
cmp
sbb
mov
out
add
lret
cmp
int3
cltd
pop
xor
xchg
shlb
xchg
repz
xchg
push
add
in
jo
push
mov
or
cli
inc
sti
fwait
lret
ret
or
pop
push
or
test
jno
lods
imul
cld
push
and
stos
out
data16
rorb
pop
dec
fdivl
mov
bound
jecxz
lret
fwait
jg
adc
sub
xchg
into
mov
icebp
rcr
xchg
rolb
mov
mov
outsl
fs
call
sub
add
clc
into
jbe
push
pop
mov
mov
xorb
mov
lods
push
enter
out
jg
xor
xor
movsb
or
es
inc
mulb
rcll
sbb
rorl
lds
and
scas
cmpsb
xor
sahf
xor
mov
mov
cmpsb
aad
fdivrs
pop
aas
into
call
cmpsl
fsub
adc
or
jnp
je
icebp
cltd
xchg
in
and
xor
and
xchg
test
das
jp
jo
xor
int
pusha
fldt
or
stos
jl
inc
icebp
testb
ljmp
sbb
add
mov
xlat
mov
fbstp
sar
cltd
or
movsb
popf
mov
jle
scas
popa
push
cmp
sbb
push
ja
je
pop
mov
rep
call
xor
pop
pop
inc
arpl
jmp
pop
cmpsb
sti
movsl
adc
cmpsb
int
fs
imul
inc
cmpsl
test
fstl
push
or
adc
push
xchg
jns
jp
xchg
sbb
mov
sti
cs
push
xor
out
xchg
xor
test
iret
sbb
push
repz
inc
fnstcw
mov
lahf
add
push
jo
out
test
lret
xor
sub
jl
cmpsl
mov
outsb
js
pop
mov
popf
lret
cmp
xor
mov
jge
int
or
pushf
push
or
pusha
add
fldcw
shll
in
add
mov
icebp
cld
inc
add
lods
fidivrl
hlt
dec
loopne
daa
fdivr
inc
hlt
stc
pop
or
jbe
jmp
push
xor
out
jno
loop
cltd
push
cvttps2pi
or
pop
push
lret
xchg
push
sahf
pop
add
pop
insl
aad
add
xor
cmpsl
jb
test
cmpb
aad
add
and
fldt
pop
add
rdpmc
sbb
add
ljmp
push
insl
xor
and
imul
clc
int
adcl
push
jmp
adc
pop
mov
dec
cmp
sbb
inc
or
ret
inc
add
andl
insb
js
out
lock
aaa
nop
sbb
add
xchg
cmp
gs
stos
outsb
and
xor
or
sub
or
fwait
loope
lcall
sbb
sub
mov
mov
xchg
lret
in
test
mov
adc
jne
push
rcrl
adc
fdivrs
cmp
mov
pop
mov
mov
bound
jb
rorl
aas
pop
pop
xchg
pop
push
insl
pop
int3
and
sahf
out
test
sbb
cmp
push
cwtl
into
loopne
dec
es
push
repnz
cli
push
popa
dec
mov
lock
push
rcl
fs
inc
leave
and
enter
data16
mov
lea
call
cmp
push
push
sahf
add
sahf
jg
mov
and
in
fwait
dec
adc
push
xor
add
mov
jbe,pn
xchg
adc
iret
popa
dec
testl
cmp
addl
sub
sbb
add
cltd
jge
aad
mov
xor
imul
pop
sub
sbb
jl
push
fbld
fldcw
pop
mov
dec
cwtl
xor
xor
cmp
pop
loope
xor
jbe
xchg
nop
clts
mov
popa
mov
adc
out
cmc
inc
add
cmp
lods
xchg
inc
pop
mov
pop
pop
ds
test
and
mov
ds
add
push
inc
sti
lods
cmp
or
cmp
mov
into
out
rorl
push
mov
mov
leave
xchg
pop
push
je
fbstp
dec
imul
xchg
loope
enter
mov
inc
shlb
jmp
inc
mov
jbe
adc
push
gs
add
enter
xchg
repz
adc
imul
loop
jg
inc
mov
notl
push
push
cmpsl
iret
cmp
andl
adc
xchg
test
adc
scas
fwait
xchg
adc
imul
add
cmp
push
lret
pop
scas
jne
push
sbb
fidivrl
fidivrl
in
sbb
mov
or
fistps
xchg
sub
jae
test
movsl
cmpsl
cmpsb
push
xor
mov
out
orl
cli
push
jno
dec
mov
pop
add
jno
sub
jmp
mov
in
add
jae
icebp
push
movaps
push
push
sbbl
cmp
sub
pop
jmp
mov
push
rolb
inc
adc
mov
je
inc
cmp
pop
dec
cmp
fnstsw
mov
dec
dec
mov
ljmp
xor
call
sub
xor
cltd
inc
jbe
cld
add
cld
push
add
testb
cmp
push
or
lea
fildll
cli
ret
stos
cmpl
cmp
add
dec
mov
aam
adc
mov
sub
or
inc
js
inc
lahf
add
jl
xor
jae
mov
jne
sahf
cmp
dec
scas
int3
mov
sahf
sbbb
imul
clc
push
pop
idiv
aam
dec
jb
adc
mov
dec
loope
dec
jecxz
add
push
ja
ret
loop
outsl
mov
pop
in
inc
aam
lcall
je
ret
cmp
rcl
xchg
ja
leave
test
pop
add
mov
mov
cltd
lods
xor
call
mov
insl
mov
jns
push
enter
mov
push
shll
jecxz
add
shlb
sbb
cmp
or
movsb
add
xlat
loope
dec
in
mov
cmp
pop
stos
into
cld
sub
push
scas
pop
sub
jb
lret
mov
lret
shr
jg
cli
jle
jbe
shrl
or
and
and
add
add
mov
pop
inc
xchg
inc
nop
xor
push
jge
xchg
ret
jae
daa
add
jb
xchg
nop
or
movsl
in
mov
leave
pop
es
inc
ficomps
enter
sub
cmp
out
shrb
xchg
rcl
mov
mov
xor
pop
inc
shr
mov
or
and
cld
push
jno
or
xchg
xor
push
dec
lods
lret
int3
int
das
fs
in
or
sbb
into
ret
cmpsb
sub
js
mov
pop
fisubrs
addr16
adc
cmc
cli
or
push
lods
mov
xor
test
pop
lods
push
jno,pt
lret
dec
adc
out
sbb
insb
mov
shll
mov
and
andl
dec
lret
and
ret
ret
out
das
or
stos
mov
lahf
add
add
lret
sub
xor
enter
arpl
mulb
add
xchg
add
sbb
dec
sub
rcrl
incb
add
lret
mov
mov
adcl
pop
jbe
xchg
xchg
test
sahf
pop
push
repz
sub
gs
sbbl
push
pop
jo
inc
adc
insl
movsl
cmp
rcr
gs
test
fsubl
mov
outsl
insl
pop
outsb
je
andl
jae
test
push
pop
add
lods
pop
clc
je
push
push
sbb
dec
cltd
test
sbb
cmp
jbe
ds
fwait
xor
out
cs
cmp
cwtl
pop
fwait
in
cmp
fstps
sbb
popf
xchg
sbb
in
fwait
and
lods
leave
sbb
fcmovnbe
mov
les
movsb
mov
mov
pusha
enter
mov
mov
xlat
sub
je
ret
out
xchg
adc
popa
ret
movsb
add
xchg
bnd
les
js
sub
xchg
push
jl
cli
lds
mov
jg
jb
mov
mov
mov
fldcw
loop
add
inc
daa
cmp
ja
cwtl
repnz
or
xor
xor
lret
dec
outsl
mov
clc
jns
and
call
inc
adc
les
scas
ret
cmp
xor
dec
mov
rol
mov
mov
outsl
in
iret
mov
push
loope
movsb
movsb
jge
fmull
test
cmp
xorl
push
adc
daa
sbb
enter
in
roll
fistpl
daa
jmp
mov
push
jmp
jae
mov
jmp
stos
cmp
bound
lret
jecxz
dec
in
pop
icebp
xchg
jae,pt
lahf
dec
sahf
jne
mov
jp
push
mov
or
movsb
pop
mov
xor
push
fadd
imul
js
xchg
popa
jmp
mov
das
inc
call
sarb
fiadds
mov
add
into
test
push
pop
mov
dec
pop
inc
fdivrp
testb
fistl
or
shlb
inc
mov
std
hlt
dec
pop
xor
dec
inc
xchg
mov
in
outsl
fs
mov
cmpsb
cltd
loope
cmpsb
mul
ds
loop
andb
cmp
dec
ret
imul
add
and
or
push
fidivl
dec
sub
and
imul
cmp
mov
test
pop
das
mov
or
adc
stc
clc
iret
mov
jle
sbb
popa
cs
insl
lret
daa
or
test
lods
cltd
inc
cmp
adc
add
mov
out
lret
ds
out
mov
ffree
out
mov
filds
mov
dec
sub
ljmp
pop
add
add
cmp
divb
jb
add
dec
lcall
out
in
mull
pusha
mov
sub
jl
push
je
jecxz
dec
sarb
pusha
jge
divl
xchg
pop
xor
aas
pop
jnp
pop
rcll
add
mov
lock
push
add
push
in
xchg
mov
pop
in
ss
xchg
js
mov
ret
sarb
mov
out
and
sbb
fadds
outsb
mov
retw
pusha
bound
pop
sub
stos
je
push
lret
xor
dec
pop
adc
xchg
cli
cmp
xor
inc
fwait
pop
adc
and
cwtl
push
jno
rolb
inc
push
scas
movsb
push
out
aaa
out
mov
xlat
push
rcrb
jg
jge
sbb
push
movsb
or
inc
push
das
addr16
sbb
push
mov
xor
cli
sbb
xor
and
add
mov
fs
cmp
pushf
hlt
sub
push
popf
mov
int3
dec
inc
adcl
sbb
fstp
enter
fs
imul
mov
pop
dec
adc
andb
out
imul
je
inc
jbe
or
dec
cltd
push
mov
mov
pop
jp
push
lods
gs
repz
sqrtps
imul
fadd
hlt
pop
mov
inc
mov
push
add
sbb
or
mov
test
adc
adc
mov
sbb
push
lea
mov
pop
xor
jb
js
add
push
dec
or
push
sbb
iret
mov
test
mov
loopne
xchg
in
imul
leave
popl
add
std
js
and
xchg
bound
lock
add
jg
loopne
xor
or
data16
jmp
mov
ret
pop
push
pushw
inc
mov
and
or
dec
cmpsb
jne
inc
fcom
sub
fstpt
lock
inc
inc
aas
arpl
sarl
stos
sbb
cmp
jp
push
xchg
adc
into
push
xor
xchg
mov
fistl
pushf
or
or
xchg
mov
cs
xchg
lea
icebp
out
sub
mov
in
in
pop
lret
adc
xchg
mov
and
sti
mov
fmull
loopne
inc
mov
stos
popa
mov
cltd
lcall
add
and
add
inc
orl
test
pop
lock
jbe
ret
adc
pop
jl
xor
in
sbb
lods
sub
orb
negl
or
pop
ret
movsb
fidivrl
xchg
loop
mov
imul
adc
int3
movsl
lret
addb
pop
outsl
testl
cmp
add
add
pop
mov
das
sub
cmpsb
in
jmp
pop
lods
xlat
in
ljmp
pop
pop
cmp
and
lahf
scas
ss
xor
mov
xlat
xor
addr16
out
sub
xlat
outsl
cmpsb
aam
cmc
insb
cmc
add
add
insb
xor
adc
in
loop
cwtl
stos
into
push
mov
ja
jmp
cmp
xor
test
adc
test
lds
icebp
sbb
push
mov
sbb
stc
adc
mov
jne
mov
in
repz
imull
push
mov
leave
or
cld
and
jecxz
stos
sahf
mov
or
pop
jo
adc
leave
je
dec
insb
inc
xchg
loop
lcall
xor
xchg
pcmpgtd
mov
xor
xor
imul
in
cmp
mov
imul
xor
mov
negl
inc
inc
jb
jle
dec
repz
cwtl
cmp
xchg
or
setae
pop
int3
xchg
imul
lea
adc
cmp
pop
jns
clc
mov
test
ja
int3
inc
xor
cmp
roll
imul
daa
cs
testl
adc
test
cld
cs
push
fistl
push
jecxz
in
vpmaddwd
dec
jne
adc
pop
hlt
fildl
cld
fsubs
inc
fmuls
mov
movsl
jmp
sub
cmp
adc
je
mov
mov
ret
inc
mov
mov
jmp
enter
lods
mov
outsb
cwtl
lods
sbb
adcb
repnz
inc
adc
rorl
sub
cmpsb
and
mov
icebp
xchg
cmp
xchg
adc
pop
sub
dec
lret
loop
dec
dec
popl
add
add
sbb
ss
sbb
mov
or
cmp
call
test
lods
mov
testl
jo
or
fwait
and
ljmp
xchg
mov
lock
rcl
mov
sub
jecxz
mov
mov
mov
or
lods
xor
dec
pop
xchg
fstp
rclb
movsl
lods
scas
pushf
jns
xorb
pop
cld
into
scas
into
imul
mov
popf
jbe
pop
mov
das
and
xchg
les
add
shl
orb
mov
scas
out
lret
je
je
lcall
in
cmp
lods
decl
cs
aaa
loop
lods
mov
add
sti
cs
sbb
out
loop
cmp
mov
dec
js
jge
push
and
add
imul
jmp
pushf
jge
pop
mov
call
cmp
enter
jp
cmp
xor
or
fnsave
inc
movups
jae
movsb
mov
rclb
adc
stc
out
push
mov
xchg
imul
xor
mov
ja
mov
ss
jge
cmp
mov
test
out
sbb
int3
jp
shll
shlb
xor
jb
fisubrs
xchg
lods
mov
addl
iret
movsb
loopne
dec
and
and
or
pop
andl
jo
xor
inc
inc
call
jno
inc
stos
icebp
cmp
inc
inc
sbb
sbb
cmc
jne
je
sub
mov
arpl
icebp
insb
xchg
mov
jmp
out
inc
jbe
adc
sbb
ret
xchg
lahf
popa
test
xchg
in
cmp
faddp
mov
add
dec
inc
daa
dec
int3
in
mov
adc
mov
adc
and
or
shl
mov
mov
add
out
or
mov
ret
movsb
stos
adc
jae
testl
xchg
loop
pop
push
out
dec
and
xchg
jno
or
and
jg
into
jp
cmp
xorl
dec
rcrb
jg
fildl
adc
inc
push
imul
test
test
jmp
std
pop
fucom
mov
mov
jecxz
fdivrl
pushf
cmp
jecxz
loopne
mulb
js
adc
pmaxub
ljmp
insl
adc
in
pop
call
ret
fxch
cmp
xor
ds
data16
lret
sarl
ret
lods
adc
sub
jne
cmpsb
pop
pop
dec
aam
icebp
xor
loop
mov
imul
jbe
or
sub
dec
push
xchg
ljmp
xor
and
fbld
adc
jnp
sti
push
push
pop
push
insl
and
test
xchg
cs
pushf
add
push
pop
clc
stos
hlt
and
jne
test
xlat
adc
jae
mov
ds
mov
inc
sub
int
inc
mov
mov
jnp
loope
leave
out
in
cmp
xchg
xchg
lret
or
xor
out
call
subb
cmpsb
inc
fistps
xor
std
mov
mov
imul
in
rolb
or
fs
mul
or
dec
and
jo
iret
push
cmpsb
hlt
loopne
adc
dec
xchg
pop
pop
jns
or
add
cvtdq2ps
pushf
inc
cmp
mov
int3
cmpsb
stos
outsl
leavew
loope
push
pushf
stc
movsb
mov
insl
inc
mov
sub
sub
jecxz
sbb
push
push
cmp
pop
mov
adcl
aaa
aam
adcb
inc
ficoml
mov
adc
lods
sub
jo
pop
shrl
or
out
push
sub
std
push
jge
insl
push
nop
push
lcall
and
adc
pushf
bound
xchg
sub
js
xchg
leave
sti
jp
xchg
jae
xchg
adc
dec
flds
lods
jb
mov
xchg
jne
out
or
adc
xchg
cmp
pop
sti
jnp
dec
add
leave
mov
adc
mov
or
jle
mov
mov
out
push
mov
and
cmp
cltd
test
inc
and
rol
xchg
out
and
loope
cmpsb
sbb
in
repz
sbb
jae
sbb
cmp
divb
repz
scas
push
mov
dec
into
out
inc
sub
cwtl
mov
mov
movsl
ds
mov
fstl
popf
aas
cli
loope
test
or
pop
addr16
pop
in
xchg
push
icebp
lcall
xor
adc
and
shufps
xor
lea
popf
inc
enter
jp
arpl
js
xor
icebp
je
mov
or
inc
ja
or
cmp
sbb
adc
xchg
xchg
jle
std
xchg
adc
cmpsb
aam
int3
sbb
xchg
fildl
push
dec
xor
pop
add
sub
add
or
in
mov
cld
sbb
adc
jbe
ss
es
push
sahf
mov
lret
cmp
push
xor
mov
dec
mov
into
stos
out
mov
ljmp
fcoms
fcomps
sub
cmp
dec
cmp
andl
pop
adc
pop
mov
sbb
ret
jnp
mov
push
sarb
sbb
and
movsbl
mov
test
scas
jp
xor
jo
jne
js
mov
mov
inc
mov
nop
jbe
push
cmp
in
mov
lcall
push
xor
adc
sub
cli
pop
jb
adc
mov
xorl
rclb
std
jge
mov
loopne
test
mov
mov
mov
dec
jns
rcll
loope
es
xlat
xor
and
mov
mov
leave
clc
xor
cmp
insl
cmpsl
pusha
out
test
lods
add
inc
cmp
ja
sub
aam
push
add
mov
imul
mov
lods
push
jo
fiadds
inc
mov
faddl
mov
jp
shl
lea
rolb
out
inc
fstpt
ret
jl
pop
imul
xchg
int3
lods
outsb
nop
out
test
xchg
sbb
stos
out
adc
rcl
stos
movsl
push
ds
das
sub
xor
cmpsb
pop
push
sbb
fcmovbe
pop
mov
cltd
mov
stos
lcall
xchg
lea
fistps
es
sahf
int3
mov
push
adcl
shl
addr16
negl
negl
push
shl
push
and
sub
mov
lahf
out
add
stos
pusha
cli
cmpsl
mov
ljmp
in
pop
jg
int
cmc
movsb
or
into
push
jl
dec
fadds
mov
xlat
inc
frstor
mov
mov
hlt
push
out
xchg
xchg
jo
enter
add
pop
test
aaa
add
cmpsl
xor
mov
push
inc
iret
scas
inc
rol
out
popl
stos
add
push
jns
add
ja
stos
out
pop
pop
push
jbe
shrl
in
jp
and
jae
das
dec
or
and
inc
inc
xchg
mov
mov
sub
sub
mov
cwtl
ja
mov
test
std
mov
imul
addr16
and
cmp
adc
data16
or
adc
and
adc
inc
dec
xchg
sti
lcall
xchg
jp
lret
scas
xchg
test
ljmp
add
je
ss
or
call
and
jge
dec
shrb
es
mov
mov
dec
test
xchg
xchg
not
push
mov
adc
mov
push
int
mov
data16
sbb
push
ljmp
mov
test
mov
pop
mov
xlat
shll
xchg
clc
orb
sub
int3
pop
aad
lds
sbb
lock
out
xchg
imul
xchg
inc
shl
push
push
mov
sti
cwtl
adc
jle
cs
pop
and
inc
cmp
cmp
stos
inc
aas
ds
lret
add
je
fistpl
xchg
fsub
cmp
xchg
pop
sti
loope
mov
jmp
xor
pop
push
sti
push
stos
out
xchg
test
mov
push
insb
imul
hlt
inc
xlat
xor
mov
fcoms
sti
pop
pop
push
adc
sbb
jae
sahf
pop
mov
dec
jge
jp
mov
hlt
adc
mov
adc
adc
mov
add
movl
sub
adc
pop
pop
xlat
jne
xchg
jl
aaa
xor
outsb
jbe
enter
lds
cltd
dec
mov
rolb
push
mov
or
out
fidivs
jmp
mov
push
outsl
or
adc
xchg
ljmp
pop
aam
cwtl
xor
add
jp
mov
mov
je
adc
rclb
and
js
inc
push
pop
sbb
ret
ja
mov
pop
jp
test
push
fmuls
pop
or
add
add
fstl
cmp
pusha
adc
jg
dec
xchg
cld
jae
shrb
cmp
cmp
stc
pop
bound
cmp
call
clc
push
xchg
scas
xchg
sbb
pusha
xor
jmp
cli
xor
adc
rol
pop
mov
xchg
jno
push
cld
sti
cmpb
push
and
push
fsubl
xchg
cmpsl
dec
lcall
fwait
pop
adc
stc
fbstp
push
loopne
adc
sub
jae
mov
xor
sub
les
sub
pusha
lcall
xchg
jle
jle
push
sbb
lret
aam
in
sbb
lods
subl
es
jb
dec
mov
mov
jl
es
lods
outsb
inc
addl
xor
cs
jne
gs
out
jno
sarl
and
mov
mov
cld
hlt
imul
in
push
sub
push
subb
rcl
inc
mov
rolb
out
adc
dec
xlat
aam
push
js
outsl
and
test
xchg
adc
cli
mov
sub
push
outsl
sub
fsubrs
mov
add
and
in
pushl
das
ja
jbe
lods
or
jecxz
and
mov
out
add
xor
pop
cmp
xchg
push
xor
cs
add
shrb
shrl
mov
ffree
pop
add
nop
std
hlt
movsl
dec
sbb
mov
xor
cmpsb
xor
mov
int
test
sarb
wbinvd
xor
insl
push
dec
cmpsl
push
mov
in
loopne
inc
pop
aas
sbb
mov
das
cmc
shrl
mov
fwait
mov
movsl
aam
arpl
fs
fmul
fldl
loope
lret
je
pop
aad
insb
popl
xchg
ret
mov
std
and
je
inc
adc
mov
push
aaa
stos
mov
lret
aas
or
lahf
jl
lock
enter
cmpsl
sub
push
mov
mov
jmp
mov
insb
pop
lds
rcr
sbb
and
pushf
xor
jl
sahf
jns
lods
push
nop
les
addr16
and
and
int
push
mov
notl
and
add
jmp
cmp
loope
jb
mov
mull
sahf
in
psubsb
mov
cmpsb
in
pop
mov
mov
jae
out
cltd
nop
pop
fs
fstpl
daa
insl
xor
inc
insl
into
insb
iret
cltd
repnz
loope
pushf
dec
cmp
sbb
repnz
jecxz
mov
js
rolb
das
pop
mov
ret
fsubrl
push
mov
and
shl
xor
stos
mov
mov
test
bound
stc
push
cli
movsl
add
and
sub
sahf
insl
std
fnstcw
aas
adc
sub
sbb
mov
push
iret
xor
sbb
aas
out
xor
pop
test
fcomps
pop
add
loopne
cmp
jl
rcrb
fs
fbld
iret
inc
insl
or
sbb
jne
xorl
jne
xchg
sti
push
ficoml
jg
dec
sub
dec
dec
sub
sti
shll
sbb
sahf
imul
mov
ss
sbb
pop
mov
imul
mov
inc
sahf
ja
sbb
orb
fstpt
push
js
jnp
int
add
or
sub
arpl
push
mov
ror
insb
dec
jle
push
arpl
mov
ss
cmp
das
cld
jo
in
repz
loope
andb
add
mov
mov
or
jecxz
sbb
in
lret
stos
add
je
or
mov
mov
lods
test
cli
addps
lods
mov
fwait
pop
mov
jbe
shrb
popf
adc
pop
xchg
mov
daa
mov
ljmp
arpl
sahf
in
in
lds
inc
xor
aas
cmc
cs
cmp
fmull
mov
sub
fistpll
mov
push
bound
push
out
and
mov
mov
adc
sahf
lds
mov
sar
sarb
lret
rcll
adc
mov
sub
and
sbb
sub
daa
sub
push
rcrb
xlat
xchg
pop
ljmp
cmp
adc
test
mov
and
les
out
cmpsl
mov
scas
and
dec
ds
repnz
adc
divb
add
movsl
sub
mov
inc
lods
ljmp
sbbl
scas
ss
xor
mov
inc
jp
movsb
pop
pusha
insb
filds
jae
sbb
pop
fwait
xor
push
mov
nop
or
mov
test
daa
pop
aad
ret
loopne
sub
out
jne
cmp
call
mov
enter
test
aas
and
push
cmpsl
lret
ja
push
lods
lcall
lea
in
pop
ds
inc
jge
mov
ret
fisubl
stos
mov
sbb
pop
jmp
sbbb
fidivs
mov
cltd
fnsave
push
dec
stos
xchg
pop
jecxz
push
es
and
loopne
pop
mov
dec
mov
insb
fstps
ljmp
push
xchg
xchg
call
cmpsb
enter
rcrl
mov
lret
and
imulb
push
in
cmp
mov
rorl
push
inc
lods
ja
scas
sbb
push
sbb
dec
push
or
pop
ljmp
push
sbbb
test
and
mov
int3
int
inc
or
imul
mov
sbb
mov
repnz
add
sub
cli
mov
dec
cmp
pushf
add
jl
xor
push
sbb
mov
inc
std
mov
or
adc
pushl
dec
xchg
add
sbb
mov
jp
shll
push
outsl
mov
cmp
les
xchg
rorb
call
mov
and
xor
out
stc
xor
cmpsl
xor
fwait
adc
cli
mov
jno
popf
dec
dec
mov
aaa
xchg
xor
xor
cmc
and
scas
cmp
jmp
cmp
aad
nop
cmpsl
rcrb
sbb
cwtl
adc
dec
test
pushf
andl
add
movsl
stos
add
jbe
arpl
xor
mov
add
jmp
fstl
ret
mov
or
stos
lea
or
pop
popf
mov
lods
outsl
mov
adc
stos
insl
fstl
pop
sbb
lcall
les
aad
cmp
push
xchg
sbb
cmc
push
jmp
xchg
jnp
fdivrs
outsl
testb
mov
shl
cmpsl
movsb
outsb
popf
aad
dec
lahf
mov
jbe
xchg
les
xchg
mov
mulb
push
leave
and
jb
or
mov
rcrl
push
mov
enter
mov
xchg
jne
cmp
dec
jne
aas
fnstsw
inc
mov
addr16
shlb
and
inc
xor
lcall
push
add
mov
jmp
insl
loope
mov
push
and
repz
fisubrl
inc
wbinvd
call
cmc
js
into
inc
cmp
imul
mov
pop
mov
push
mov
xor
xchg
shrb
xchg
xchg
jo
sbb
pusha
sbb
insl
lods
mov
roll
sbb
mov
repnz
icebp
movsl
out
stos
stos
pop
in
pusha
and
pop
lock
int3
aam
cli
mov
ja
mov
sbb
call
mov
ret
popf
mov
jae
test
jb
in
inc
adc
or
mov
test
std
cmpsb
arpl
in
and
sbb
icebp
push
add
sahf
dec
inc
xor
push
inc
dec
add
push
jge
cmp
jb
aam
sbb
int3
pop
jns
cmp
or
call
mov
dec
std
sub
sub
aaa
mov
sti
jns
and
xchg
inc
or
movsl
add
rolb
repnz
imul
push
mov
insl
stc
gs
mov
mov
add
mov
cmp
sub
js
lods
mov
mov
lret
sbb
in
inc
in
adcb
inc
insb
cmp
jmp
mov
dec
cs
into
push
inc
adc
lea
xor
cltd
mov
mov
loope
pop
loop
repnz
out
lret
insl
fcmovne
mov
scas
push
sub
xor
and
push
xchg
mov
ja
pop
lods
add
fildll
mov
inc
fs
iret
jbe
pushf
xchg
xchg
out
mov
mov
into
mov
cmc
inc
add
popa
jo
movsb
add
sub
ljmp
fwait
inc
outsb
sarl
mov
xchg
xchg
sub
rorb
or
movb
jl
or
cs
add
xor
inc
lret
add
ss
out
mov
fstp
sub
in
xchg
or
fcomip
mov
sub
rclb
mov
scas
jecxz
add
lea
and
iret
fmulp
dec
mov
dec
push
adc
shl
pop
loopne
andl
mov
fisubrl
mov
arpl
mov
aaa
mov
mov
into
mov
sub
sub
dec
lods
jnp
mov
push
pop
or
push
add
jno
mov
dec
clc
xorl
cmp
xor
xchg
adc
repnz
les
xor
push
lods
movsb
mov
xchg
ja
cmc
mov
cmc
mulb
mov
cltd
jnp
in
outsb
std
rclb
cmp
lods
dec
and
adc
adc
jns
push
inc
pop
cmp
cli
push
test
xlat
add
std
xchg
jecxz
mov
orb
lahf
mov
cmp
push
mov
sub
loopne
jo
add
push
nop
fstps
movl
out
pop
and
test
lock
out
gs
xor
outsl
xchg
hlt
lds
push
mov
fcomip
mov
cli
mov
sbb
push
add
shll
xor
outsl
adc
cwtl
adcl
shlb
int
in
cmp
ljmp
lcall
popa
ror
mov
push
push
int3
fs
xchg
cmp
push
push
push
cmp
les
mov
pop
xor
and
cmp
xchg
inc
mov
in
rol
popa
mov
cmp
xchg
sbb
test
xor
std
xor
in
es
leave
stos
push
mov
sub
push
out
or
sbb
popa
add
pop
xchg
insb
pop
sbb
std
test
stos
push
push
testb
bound
add
fcoml
cmpsb
add
fistl
push
test
imul
je
inc
fildll
jb
insb
mov
popa
mov
fwait
outsl
and
scas
loop
aad
adc
and
push
js
aad
add
xorb
clc
sub
hlt
xor
aas
jns
sbbl
jbe
jns
jl
sub
loop
clc
push
xor
lret
xchg
jb
es
ficoml
push
dec
push
sti
cmp
and
jbe
test
sub
add
jns
adc
and
xor
push
jl
push
mov
jmp
sub
repz
and
mov
xchg
fwait
mov
rclb
sub
jmp
cmp
mov
popf
xchg
pop
int3
test
hlt
add
incl
jp
addb
mov
stos
adc
dec
sbb
xchg
pop
adc
stos
mov
xor
outsb
mov
insb
xlat
scas
int3
lds
push
call
jl
lods
ds
outsl
nop
test
jb
ja
dec
or
add
je
psraw
and
inc
ret
pop
lret
aas
stos
adc
dec
sub
mov
cmp
jbe,pn
mov
push
and
std
mov
jmp
roll
scas
xlat
lods
push
push
adc
sti
pop
xchg
mov
pop
mov
mov
mov
jbe
vucomiss
lods
fcoml
or
in
jb
out
cmp
jmp
xchg
push
cmp
xchg
jmp
xor
insl
sub
sbb
push
inc
mov
or
shl
pusha
std
ret
jecxz
pop
aas
inc
sahf
bnd
inc
mov
popl
adc
fisubrs
sub
mov
fbstp
js
testl
test
pushf
ret
movb
mov
lock
lods
adc
call
jo
jmp
pop
cld
js
cwtl
fdivp
and
or
fwait
pop
insb
push
jae
adc
cmp
mov
test
push
ljmp
mov
pusha
sub
add
scas
js,pn
loopne
xor
fistps
mov
sub
and
test
sub
js
or
add
xchg
adc
andl
ja
fldenv
pushf
in
fldcw
out
mov
mov
jl
inc
ljmp
lahf
js
push
fs
mov
loope
les
adc
notl
rcll
mov
imul
mov
push
rclb
push
stc
in
lret
out
and
in
fdivrs
jne
xor
push
add
sbb
add
data16
in
pop
jmp
xchg
jns
movsb
outsb
or
mov
dec
jp
aad
repz
aaa
pop
mov
and
pop
test
push
push
jl
dec
cmpl
sbb
sub
mov
andb
pop
and
adc
mov
andb
ss
das
lods
frstor
push
jle
xchg
repnz
inc
ss
out
cltd
scas
lcall
cmp
es
adc
add
xchg
cwtl
xchg
cmc
and
clc
loop
mov
leave
cltd
add
std
popw
mulb
outsb
fs
cmp
jne
ret
xchg
adc
lret
out
jmp
jbe
lock
jno
cli
add
aam
fadds
push
adcb
mov
push
int3
pop
insl
int3
inc
cmp
xchg
repnz
loope
jle
fwait
pop
mov
jo
xor
add
mov
das
or
mov
and
ljmp
push
mov
push
fidivrs
fildll
mov
mov
xchg
jp
push
insl
stos
testb
pop
inc
add
mov
inc
inc
pop
ljmp
fnstsw
insl
cli
or
je
repnz
rorb
and
adc
mov
jmp
mov
fmull
adc
add
outsb
adc
sbb
loopw
sbb
sbb
leave
lret
mov
or
pop
loop
and
leave
inc
mov
daa
inc
fsubrl
stc
jae
loop
push
andb
sbb
dec
mov
gs
je
sti
and
push
cmp
aad
js
ret
imul
or
push
mov
inc
push
outsb
data16
or
dec
shlb
pushf
sbb
mov
mov
test
xchg
movsl
push
pop
xchg
add
aas
mov
jg
xchg
xor
xchg
shlb
xor
push
pop
fcmovne
mov
loopne
lock
mov
ret
mov
add
sub
xchg
mov
mov
inc
decl
pop
cmp
cmp
out
jmp
and
rclb
cmp
sysenter
mov
shlb
arpl
out
scas
pushf
or
mov
xor
dec
mov
popa
push
mov
iret
fmuls
loop
decl
insw
popf
shl
sub
sahf
cld
push
cmp
stos
push
and
add
mov
aad
xor
mov
mov
cmp
es
mov
mov
mov
xor
pop
nop
lods
stc
mov
pop
popa
in
or
pop
push
adc
inc
inc
ja
push
jle
dec
lcall
test
lds
ds
fistl
adc
cs
and
mov
shrl
outsb
lahf
inc
push
cwtl
inc
xchg
cwtl
daa
pop
repnz
mov
lods
add
gs
jge
inc
adc
jecxz
sub
rol
repnz
add
sbb
inc
xor
icebp
mov
or
fcmovb
push
les
and
cli
in
lahf
cmp
stos
fdiv
rcrl
dec
jle
jae
stos
into
cmp
cld
sub
mov
inc
imul
mov
mov
dec
in
pop
negl
xchg
ss
pop
mov
sbb
xchg
movsl
sahf
sbb
rcrb
sbb
push
shlb
arpl
pop
cmpsl
stc
and
xchg
xchg
xor
push
stc
test
add
sub
popf
jbe
out
cs
jnp
pop
jne
sbb
cmp
test
inc
jns
fisttps
cmpb
push
test
rorb
addr16
lods
jns
jl
into
dec
scas
sub
pop
cli
ret
test
nop
jge
jo
cmp
xchg
dec
ds
pop
into
rdtsc
sbb
sub
mov
fcoms
xchg
jle
inc
pop
aam
xchg
cld
push
ds
out
repz
in
popa
or
in
fcomi
int
xchg
out
cmc
adc
aaa
jno
or
arpl
repz
sbb
mov
jo
movsb
push
stos
mov
stc
push
or
xor
ret
mov
jns
mov
xchg
mov
sbb
outsl
ljmp
les
or
movsl
call
jo
mov
sahf
pop
pusha
imul
cmpl
mov
mov
loop
lods
clc
cmp
outsb
pop
adc
and
cmp
push
imul
inc
sbb
add
out
test
clc
xchg
pop
dec
add
push
push
out
fimull
sub
into
or
mov
or
xor
sbb
mov
out
mov
out
test
jno
ret
inc
and
jmp
jb
and
dec
lret
sub
and
loopne
jmp
ss
sub
jl
pop
or
int3
addr16
fldl
or
ficompl
nop
rorb
pop
lahf
or
dec
popa
mov
xchg
aaa
repnz
cs
int
mov
mov
mov
stc
jnp
fadds
mov
mov
into
ss
sbb
pop
les
orl
xchg
fcoml
int3
outsl
je
cmpl
sti
out
jnp
push
fadds
fwait
mov
add
in
push
inc
stc
pop
repz
call
out
int
push
xor
leave
mul
sbb
fcoml
pop
aad
test
jecxz
testb
push
insl
pop
jno
jno
movb
sbbl
mov
mov
adc
lods
or
cld
jmp
sub
cmpsb
test
cli
push
cltd
icebp
scas
cmc
fwait
out
push
jle
xchg
outsb
fisubs
insl
repz
aas
imul
push
lea
inc
jnp
mov
jns
mov
insb
movsb
stos
mov
shlb
adc
and
enter
mov
in
adc
fiaddl
lock
sub
add
popf
or
insl
push
insb
sub
ljmp
pop
xchg
sub
aaa
popf
sbb
or
mov
mov
xor
ss
cld
mov
leave
in
call
pushf
fnstsw
loopne
addr16
lock
daa
pop
dec
shr
sahf
mov
cld
inc
ljmp
mov
or
insl
pop
xchg
lods
jl
dec
movsb
bound
inc
sbb
aad
decl
xorb
pop
xchg
int
pop
pop
inc
out
jns
fs
adc
add
fs
fucomip
inc
scas
xchg
movsl
inc
jnp
fsts
shrl
lcall
push
pop
mov
or
inc
and
mov
add
mov
test
in
inc
push
cmp
jl
adc
xchg
aam
orb
adc
push
call
cmp
lahf
sub
stc
adc
xchg
ret
pop
xor
dec
mov
push
lahf
cmpsb
adc
add
inc
jno
cmpsb
and
push
pop
inc
push
mov
mov
stos
out
fdivrs
negb
mov
pop
insl
loope,pn
push
or
popf
dec
inc
in
jae
push
jmp
dec
jne
jge
cld
mov
imul
add
dec
shrl
xchg
sarb
jb
pop
pusha
jg
int3
ret
sub
sub
sbbb
dec
sbbb
cld
outsb
mov
fbstp
add
dec
call
mov
cmp
call
bound
xorl
jne
cltd
adc
and
or
pop
mov
jo
mov
fimuls
mov
les
aas
imul
cmp
push
xchg
pop
ja
test
and
mov
dec
sub
lods
sub
cltd
enter
jne
ds
xorb
mov
pop
push
dec
inc
mov
movsb
mov
popl
aad
inc
clc
call
stos
insb
inc
pushl
test
nop
push
cmp
sti
dec
das
push
lea
jp
mov
or
or
pop
les
hlt
scas
imul
arpl
call
ficoml
loopne
cltd
cltd
loope
lock
int3
sti
lods
add
std
scas
sub
mov
lods
in
jmp
mov
mov
outsb
pushf
stc
mov
jns
sub
scas
lds
fnsave
mov
fstpt
pop
xor
je
cmpsb
out
xchg
pusha
cmp
rclb
sbb
adcl
pop
mov
es
fs
and
mov
repnz
rcrl
add
mov
and
xor
mov
in
pop
dec
adc
sub
mov
adc
icebp
ror
jmp
call
jmp
xchg
push
pop
push
adc
fwait
cli
in
push
test
xchg
add
in
or
mov
bound
lock
xlat
icebp
in
sbb
orl
adc
jecxz
push
jp
popf
sub
movsb
pusha
aad
xchg
push
inc
arpl
jl
cmp
dec
cmpsb
xchg
jo
popa
int3
jb
mov
pop
xchg
push
mov
jne
sub
negl
call
mov
mov
das
orl
xlat
out
or
add
test
stos
dec
dec
pop
testb
mov
test
jmp
mov
sbb
or
mov
daa
or
inc
pop
lods
push
xor
rcl
adc
std
push
mov
imul
push
and
loop
push
movsb
jns
maxps
cmpsb
jne
jns
add
and
add
jmp
ret
cwtl
push
addr16
in
test
mov
xchg
mov
in
adc
mov
or
pop
int3
int
mov
arpl
movsl
xor
adc
test
xchg
jbe
shl
ljmp
push
jnp
outsb
outsl
rcrb
dec
mov
out
mov
push
fmul
fbstp
sbb
out
mov
mov
cmc
gs
cmpsl
add
cli
mov
xchg
cwtl
cmp
sbb
xor
jo
aad
xchg
xchg
test
or
out
mov
and
push
adc
jnp
fnsave
sub
aas
mov
and
xchg
je
push
and
les
test
mov
mov
fisubl
and
push
jbe,pt
push
cmp
push
ds
je
sbb
dec
xor
sbb
scas
outsl
nop
mov
shl
mov
mov
rol
xor
aam
jns
jp
leave
lock
cmp
pop
faddl
mov
stos
mov
test
outsl
dec
ds
jb
cmp
mov
adc
xchg
mov
or
ja
popf
mov
cmpsb
outsl
in
mov
std
and
cmc
pop
pop
movsb
xor
ja
ja
mov
movsl
das
test
fisubrl
adc
shlb
pop
movsb
dec
mov
inc
rclb
cmpsl
or
pop
or
push
je
dec
pop
sbb
sti
or
mov
ret
loope
cwtl
pop
loopne
jns
addr16
test
jecxz
cli
pop
scas
jl
add
mov
jns
punpckhwd
lahf
pop
pop
mov
ret
fadds
or
aam
cmp
cltd
cmc
into
imul
stos
jb
push
xor
fwait
jg
outsl
mov
inc
iret
adc
xchg
or
fidivl
lods
iret
adc
sar
outsl
ljmp
loope
mov
dec
scas
add
je
repnz
pop
push
inc
sub
jbe
xsavec
mov
cmp
out
inc
pop
push
sar
fidivrl
push
pop
or
and
sub
dec
adc
in
mov
iret
push
xor
andl
lret
mov
mov
cmp
sarb
xor
mov
adc
adc
in
pop
icebp
jmp
data16
push
clc
xchg
mov
pop
xchg
sahf
fistpll
cmpsl
and
inc
cmp
jae
ds
sub
cmp
loop
dec
pop
fdivl
pop
outsl
std
popf
jb
sbb
xor
lods
jmp
dec
dec
ds
pop
sbb
and
cltd
or
xchg
cmpsl
mov
fbstp
movsl
push
xor
outsl
or
mov
xor
rorb
mov
popf
iret
roll
sahf
arpl
and
pop
lcall
loope
add
ljmp
cld
imul
cli
les
insl
adc
loope
xchg
das
mov
cmpsb
add
pop
repz
inc
fisubl
div
mov
inc
xor
jo
sub
inc
jnp
pop
push
jg
test
movsb
cmpsb
int3
jno
xor
or
inc
call
sub
push
std
or
push
push
subl
jnp
bound
movsl
subl
out
jno
test
stos
test
or
sbb
xchg
or
outsl
add
rorb
cs
adcb
pop
repz
out
jle
pusha
jl
add
push
jb
jnp
ret
mov
push
and
push
and
pushf
mov
insb
mov
out
mov
mov
mov
mov
xor
je
and
loopne
dec
xchg
add
pop
lods
test
dec
stos
adc
nop
insl
sti
into
inc
shll
fcoms
push
jg
pop
sbb
jno
ret
sbb
neg
aas
popa
inc
lahf
inc
adc
int3
shll
mov
push
scas
xor
repnz
ds
pop
cmp
loopne
aam
pop
dec
sbb
dec
mov
leave
jecxz
add
pop
movsb
or
sbb
adcl
lea
imull
in
cwtl
mov
xchg
shrl
dec
cmpsl
out
fucomip
jno
adc
gs
mov
and
xchg
rol
dec
push
mov
cs
stc
mov
int3
dec
imul
xchg
andb
insb
dec
or
push
pop
and
or
add
xor
add
add
or
in
popa
push
jp
xchg
cltd
mov
xchg
call
cwtl
mov
scas
scas
in
in
adc
adc
cmpsb
outsb
xchg
stos
mov
add
add
mov
mov
add
imul
inc
lea
inc
loope
pushf
mov
xchg
cmpsl
jb
cmp
or
xor
cwtl
cltd
scas
jb
mov
loopne
add
cs
mov
or
push
mov
pop
fucomp
std
xchg
dec
cmp
stc
aad
push
adcl
cmp
mov
repz
pusha
pusha
test
in
scas
and
popa
jg
xlat
outsl
jb
test
add
add
enter
adc
jb
mov
and
and
cmp
mov
aaa
insb
test
movsb
mov
jno
xor
xchg
xchg
xchg
push
test
cmp
mov
data16
ja
punpcklbw
lcall
sbb
jae
push
push
push
mov
pop
sbb
jnp
icebp
xlat
cmpsl
idivl
cltd
hlt
mov
aad
xchg
adc
or
jmp
jo
xor
stc
mov
loope
test
and
dec
push
cmpsb
or
nop
and
jo
pop
xor
test
dec
rcrb
aaa
mov
pop
movsl
fucomi
fwait
fs
out
js
mov
fsubrs
stc
pop
int3
jl
xor
cmpsb
out
xchg
repnz
test
fcmovnu
cs
jns
repnz
mov
inc
lods
negl
mov
cmp
xchg
jns
mov
hlt
aad
xor
add
inc
jecxz
mov
pmuludq
rcl
addr16
pushf
int3
push
fcoml
loope
push
jo
pop
add
mov
gs
test
lcall
aam
or
insl
push
fwait
ljmp
add
cmpsb
mov
fisubrl
enter
adc
add
mov
das
xorl
cwtl
out
mov
push
cmp
jge
adc
xchg
inc
stos
jmp
shr
test
je
jg
push
jg
pop
adc
inc
aad
ret
xchg
and
xlat
xchg
xchg
hlt
jae
lock
sahf
aas
filds
xchg
lea
xchg
jg
adc
std
xchg
adc
imul
jnp
add
or
rol
pop
icebp
adc
outsl
mov
mov
std
js
out
loopne
inc
xchg
adc
mov
and
mov
and
insb
dec
jb
mov
fwait
int
imul
insb
shlb
push
fistps
in
mov
adc
add
sub
sbb
xchg
mov
jb
shrl
loope,pt
adc
xor
push
rolb
push
shl
and
pop
mov
cwtl
icebp
andb
push
orl
mov
gs
fnstenvs
and
rcrb
leave
les
mov
jnp
movsl
outsl
movsb
sub
fbstp
fwait
ja
mov
out
adc
jb
clc
xlat
push
and
pop
aad
xchg
aaa
fwait
mov
sub
mov
mov
movsl
popa
loope
js
insl
shlb
xchg
mov
scas
cmc
and
mov
jae
daa
sbb
sub
movsb
lock
das
lcall
xchg
jne
push
cmp
cld
rorb
call
imul
lods
sarb
xchg
mov
ds
jp
pop
jmp
sbb
das
sub
popf
mov
outsb
sbb
sub
in
out
inc
cmp
push
fnstsw
addr16
mov
idivl
cltd
out
cmpsl
and
and
aaa
clc
hlt
cmp
xorb
xor
xlat
fcoml
mov
repnz
jg
cmc
inc
test
jge
outsb
cli
int3
adc
hlt
mov
das
idivl
push
sahf
pop
add
sahf
loopne
popf
pushf
adc
mov
add
sbb
iret
rcrl
inc
mov
into
insl
jle
jl
in
jb
push
in
inc
daa
jno
gs
mov
loopne
jbe
inc
xor
mov
icebp
es
sbb
inc
pop
jae
or
or
bound
mov
fisttpll
sbb
mov
adc
jne
data16
flds
ds
pop
jb
and
outsb
or
je
lahf
int3
mov
leave
imul
jl
and
push
or
out
ficomps
lahf
lcall
mov
insl
fcmovbe
jno
jecxz
cmpb
dec
cmc
push
and
cld
pop
mov
test
test
add
sbb
popa
iret
repnz
or
pop
data16
and
test
sar
pop
int3
daa
push
adc
sbb
xchg
out
fwait
xchg
inc
xor
ds
or
je
lahf
jge
pop
int3
sar
push
push
inc
xor
and
flds
and
xchg
jl
sbb
ret
push
pop
fwait
cwtl
push
fwait
and
push
loop
inc
rorb
aaa
xchg
bound
inc
pop
scas
and
push
mov
mov
fs
repnz
fadds
rcr
push
sbb
dec
xchg
adc
sbb
cld
lds
and
aad
movsb
sbb
je
sbb
mov
mov
fists
hlt
or
subl
lret
pop
aad
mov
aaa
sbb
dec
jmp
repnz
daa
fiadds
mov
ficoms
cs
sbb
sarb
loope
inc
add
inc
cmc
mov
dec
push
jmp
xchg
pushf
outsb
fcomps
clc
push
cmp
pusha
rorl
adc
xchg
sahf
leave
add
cmp
adc
dec
imul
ret
inc
push
xchg
aaa
cmp
push
mov
add
cltd
adc
jge
pop
clc
movsl
sarb
inc
add
inc
xchg
xchg
jp
outsb
fldenv
leave
push
push
jmp
and
js
push
mov
xchg
int3
aad
pop
icebp
xor
lock
push
int
mov
test
lea
mov
nop
inc
inc
adc
idivl
movsb
in
inc
jb
jnp
and
test
or
aam
mov
pop
test
add
and
and
ds
sarb
rclb
cwtl
mov
ret
sub
dec
stos
sbb
pop
and
xor
movsl
ficompl
test
gs
pop
icebp
rcll
imul
or
shr
rol
jno
sbb
add
push
aas
cltd
sbbb
jne
popf
into
mov
xor
adc
inc
inc
inc
xchg
orl
es
lret
loope
jnp
and
jmp
shl
outsl
pop
mov
pop
dec
movsl
shll
dec
push
and
shlb
mov
stos
lea
stos
sbb
test
mov
xchg
adc
arpl
push
mov
mov
imull
mov
mov
flds
fld
mov
insl
pop
xor
xchg
jecxz
lock
inc
pop
xor
out
push
lea
push
loope
adc
cmp
mov
mov
push
sbb
enter
notb
mov
rcrb
das
std
jb
jmp
mov
stos
add
insb
xchg
inc
mov
xor
add
sbb
mov
dec
mov
outsl
addr16
fiaddl
test
push
fcomip
cmove
sbb
mov
mov
ja
sub
push
enter
lret
push
pop
jecxz
xor
jmp
mov
adc
xor
xchg
in
dec
movsb
cmp
inc
dec
out
push
push
cmpsb
int
ret
dec
xchg
push
or
and
push
ficomps
lcall
jo
outsb
shlb
mov
lcall
ret
dec
mov
push
loopne
jne
inc
mov
insl
les
xor
addr16
mov
loopne
cltd
fcmovb
xor
icebp
out
xchg
mov
mov
mov
cwtl
push
lea
fldcw
mov
fcomp
out
ficompl
jp
test
xchg
inc
pop
cld
or
dec
xor
and
add
mov
bound
in
add
dec
jecxz
test
jmp
push
jmp
les
or
imul
pusha
ret
stos
cld
add
inc
push
mov
push
sbb
inc
in
add
sbb
adc
cs
cltd
mov
shll
add
fnstsw
lahf
dec
cmpsb
movsl
psrlw
dec
pusha
notl
dec
mov
ret
xchg
or
and
push
dec
movsb
xor
arpl
fcoml
push
fistpl
ret
lds
pop
fcmovne
push
outsl
mov
jae
out
scas
add
push
mov
insl
out
sarl
add
cmp
mov
iret
rorl
test
pop
xchg
bound
movb
icebp
in
push
fcompl
push
test
loop
push
mov
and
stos
adc
add
and
or
add
cltd
xor
cmpb
ja
sahf
sub
fcoml
and
pop
mov
adc
ret
add
push
rclb
jg
dec
adc
daa
out
dec
inc
xchg
push
in
mov
add
dec
test
movsb
and
stos
inc
push
je
js
subb
sbb
pop
adc
mov
fabs
push
and
push
xchg
xchg
in
loope
pop
add
aam
addr16
hlt
aad
fprem1
add
sbb
mov
roll
pop
dec
adc
mov
data16
repnz
inc
jns
dec
stc
psadbw
lret
cli
loop
adc
std
cmpsb
cmc
sub
sbb
cld
loope
or
out
outsl
mov
sub
xor
sub
mov
dec
sbb
pop
mov
jnp
lahf
pop
jmp
je
jmp
les
shll
aad
scas
cmc
imul
iret
lea
xchg
or
or
test
rcl
jb
out
pushf
xor
dec
add
loop
mov
dec
dec
adc
call
xor
xor
xlat
xchg
push
pop
arpl
mov
imul
sub
sarl
enter
push
xchg
aam
mov
orb
add
dec
rcr
in
sub
push
sub
ret
cmp
mov
stos
fdivrs
aad
dec
jno
int
inc
xchg
inc
imul
mov
jmp
sti
out
mov
mov
lret
mov
mov
sub
test
cmp
pop
mov
dec
call
pop
out
inc
mov
cmp
imul
cmpsb
cmp
lahf
and
shl
dec
or
divps
fcmove
mov
daa
cltd
jmp
int3
in
fcmove
ror
stos
push
push
cli
push
jmp
dec
push
test
bnd
aas
add
xchg
dec
lods
lods
hlt
int3
mov
mov
and
arpl
push
test
rcll
dec
fwait
dec
xor
adc
xchg
cmp
sbb
cmp
inc
sub
mov
pusha
pusha
dec
inc
adc
dec
mov
ljmp
mov
test
loope
pop
dec
cmp
jnp
fxch
cmp
mov
cmp
ds
fldlg2
sbb
adc
sbb
jg
xor
sbb
push
jne
sbb
pop
gs
test
cmp
jae
pop
out
jbe
mov
cli
lahf
add
dec
lcall
cmpl
ja
shlb
ljmp
sti
add
cmpl
jmp
or
in
sbb
dec
cwtl
dec
xchg
sub
add
ja
cmc
jl
add
inc
outsb
mov
cli
pop
pop
pop
inc
stos
movsl
out
andb
dec
cmp
or
mov
push
fadds
mulb
add
jns
out
repz
mov
out
mov
nop
cmp
lods
sub
or
loop
xchg
loop
fisubs
jnp
sarb
mov
insl
cmp
rcrl
bound
sub
das
mov
orl
push
mov
add
push
and
push
jnp
mov
sahf
adc
andl
push
rcr
pop
xstore-rng
cmpsl
inc
jl
lea
cmp
and
pusha
imul
aad
cmp
iret
pop
mov
mov
jmp
movsl
outsl
mov
arpl
test
sub
or
mov
sbb
adc
lret
test
sub
mov
cmpb
mov
xchg
mov
or
imul
cmp
mov
fdivrl
lods
xchg
shrl
cmp
shrb
inc
mov
and
mov
or
mov
mov
jno
mov
stos
jns
sub
fdivs
mov
fsubrs
pop
fisubl
shlb
mov
out
xor
inc
iretw
mov
add
ds
fmul
mov
sbb
sbb
js
arpl
pop
in
aad
jge
je
xchg
jns
dec
add
mov
cmp
sub
xor
xor
xlat
aas
imul
unpckhps
mov
lock
push
dec
test
jnp
jae
lock
test
arpl
and
cmp
xchg
cmp
fs
ja
popf
sbb
fsubp
mov
xchg
lods
jae
sub
adcl
dec
stos
adcl
fwait
mov
push
icebp
mov
xor
jno
sub
lods
xchg
dec
test
dec
dec
sub
jg
and
call
dec
jae
cwtl
and
dec
mov
sbb
xchg
ljmp
testl
aaa
popa
insb
jmp
pop
ljmp
xchg
add
sbb
push
pop
xor
and
sbb
sahf
pop
les
adc
mov
je
and
cmp
push
loop
sub
cmpsb
xchg
sbb
insl
mov
and
out
daa
add
iret
out
xor
sbb
repz
jp
addb
pextrw
daa
sub
loop
cmp
mov
fists
repz
fldt
mov
xor
or
mov
call
sub
repnz
mov
add
int
into
test
pop
jae
mov
insl
mov
jg
jg
divb
pop
or
fwait
std
pop
dec
shll
jecxz
aas
jns
cmp
jb
das
pop
in
fisttpl
and
mov
inc
test
jo
and
jne
cmp
int3
mov
and
sbb
add
and
xchg
fcoms
cmpsb
dec
test
mov
cmc
es
push
dec
mov
jmp
sbb
lret
fsubr
sbb
fildl
sbb
mov
xchg
pushw
or
adc
push
jns
pop
aad
call
rorl
daa
lock
adc
mov
or
dec
or
es
jg
repnz
pop
lds
or
mov
scas
sub
cmp
jl
xchg
jg
test
pusha
adc
add
scas
push
lods
aad
lods
xor
or
test
xor
aad
jb
lods
xor
sub
std
add
xor
outsb
mov
inc
dec
sarl
clc
dec
ljmp
or
int
and
sarl
push
and
outsl
mov
orl
cld
and
mov
int3
imul
adc
out
fisttps
push
mov
in
mov
add
sahf
push
fiaddl
add
push
aaa
dec
daa
mov
bound
out
outsl
pop
leave
das
and
mov
leave
push
outsl
sti
es
cli
sbb
out
lahf
xchg
xchg
aam
or
xor
xchg
dec
es
cwtl
stos
add
adc
add
sbb
in
dec
scas
dec
sti
daa
stos
sti
das
mov
aam
mov
test
std
pop
cmc
jp
ljmp
dec
outsb
pop
mov
push
push
and
data16
cmp
jne
mulb
or
int
pushl
mov
mov
fisubrs
mov
mov
and
bound
inc
xor
xchg
push
inc
mov
or
mov
cld
mov
mov
or
pusha
and
or
lret
ja
rorb
adc
lret
aam
dec
fisubrl
leave
mov
mov
lret
or
mov
ficompl
or
dec
into
and
jge
sbb
aam
stc
sub
push
push
out
or
push
out
jp
sub
mov
sarb
lret
std
in
inc
or
mov
mov
shll
pop
test
jl
mov
lahf
push
lcall
mov
call
add
bound
fcompl
inc
xor
lcall
scas
jp
push
jb
inc
call
sti
cltd
ljmp
clc
push
push
rclb
push
or
mov
outsb
sbb
sub
mov
fiaddl
sbb
fcmove
xor
jmp
pop
mov
loop
hlt
dec
dec
mov
sbb
mov
adc
pop
enter
xchg
in
push
scas
mov
mov
add
xor
data16
xchg
dec
sub
sub
jl
sub
inc
cli
xor
adc
icebp
push
pop
adc
xor
loopne
adc
fdivs
mov
out
jne
ret
or
bound
xchg
std
lcall
mov
rorl
pusha
ja
cli
dec
aad
mov
xor
enter
lods
std
lret
fs
inc
pop
mov
icebp
movsl
xchg
sahf
lret
dec
push
sub
mov
fsubr
ficoml
jecxz
sub
lahf
add
sbb
fldenv
scas
lods
push
cmp
sti
aaa
mov
pop
aas
pop
js
pusha
in
mov
cmpsl
sub
xor
test
imul
mov
jg
mov
enter
xchg
fs
imul
insb
movsl
in
repnz
mov
mov
ljmp
call
or
sub
mov
subb
out
or
dec
or
sbbb
dec
lock
lcall
adc
dec
mov
dec
add
paddq
outsl
pop
test
jb
add
int
loopne
add
mov
lret
stos
jno
inc
das
xor
push
mov
xchg
cmp
aaa
ss
sti
cmp
cld
lods
adc
mov
popf
out
jb
or
jno
in
popa
inc
mov
or
mov
fdivrp
inc
pop
add
rolb
dec
jp
push
add
dec
mov
pop
inc
dec
js
test
dec
rolb
notb
popf
sbb
fnsave
mov
ja
or
inc
add
scas
sub
inc
cmc
add
sub
push
mov
imull
push
mov
test
and
inc
ds
mov
in
xchg
dec
popf
cli
and
xor
adc
push
mov
dec
pop
lahf
cwtl
dec
iret
out
sbb
or
jb
pop
das
sbb
and
pop
sbb
out
mov
addb
lcall
divb
and
sub
inc
push
jecxz
aad
lods
push
int3
add
jg
mov
mov
cli
xchg
sbb
add
sbb
mov
mov
sbb
push
fdivs
mov
fcoml
popa
mov
cli
loope
call
scas
js
dec
adc
push
subb
cli
fucomp
or
adc
lea
dec
or
and
lds
ja
lahf
mov
jge
ss
jno
stos
jae
inc
imulb
aam
add
jb
rcrl
idiv
imul
mov
bound
sbb
in
pushf
pop
fwait
pop
mov
in
xchg
push
sub
push
in
rolb
popl
xor
lock
stc
popf
mov
mov
mov
shlb
cli
movsb
ret
cmp
jb
sti
add
jl
mov
jae
xor
mov
loop
subl
leave
pusha
dec
ds
out
sub
daa
in
dec
lret
or
mov
iret
test
popf
jno
jecxz
dec
test
fwait
xlat
gs
or
test
jne
stos
inc
aas
pop
in
push
int
out
aam
dec
xor
in
push
or
mov
stos
rep
imul
inc
stc
mov
mov
mov
pop
jns
jge
adc
adcb
outsb
jg
fimull
fimuls
daa
jecxz
mov
adc
repz
mov
jmp
jbe
and
aam
addr16
mov
outsb
leave
inc
iret
or
inc
and
and
xchg
das
inc
jnp
mov
pop
jecxz
or
sbb
xor
lock
push
jmp
rolb
push
cmp
ret
sti
test
gs
push
xor
jbe
inc
jl
iret
aas
mov
xorb
add
lahf
insl
pop
ss
pushf
lcall
mov
mov
stos
mov
inc
pop
clc
loope
jmp
aad
add
sub
andl
pop
insl
addr16
lret
jb
lds
lret
jnp
aad
mov
xchg
xor
in
mov
subl
aas
in
sti
stc
mov
pop
fistpll
insl
mov
mov
or
aad
icebp
jg
hlt
addr16
mov
push
and
sub
pop
add
add
mov
mov
mov
inc
inc
mov
jne
das
mov
aad
xchg
cmp
insb
push
dec
push
pop
aad
icebp
jl
bound
or
fildl
push
cli
addr16
lcall
add
mov
jmp
adc
out
mov
movsl
out
lret
jl
jmp
outsl
pop
push
repz
mov
cmp
cmpl
out
fnsave
inc
jle
adc
enter
adc
cmp
popa
je
enter
adc
orb
fdivrp
test
bound
inc
lret
push
pop
pop
mov
dec
aad
cmp
cs
lds
scas
aas
bound
or
cli
xchg
test
or
je
xor
sub
scas
cmp
fcoml
push
inc
arpl
inc
movsl
cli
jno
loope
fcoms
mov
adc
out
les
cld
mov
sbb
sbb
jg
push
push
ds
repz
rcr
sub
pop
movsb
cltd
iret
jnp
dec
push
jbe
inc
adc
mov
push
jge
jp
mov
rolb
je
cltd
or
scas
rcll
xor
adc
jb
dec
xchg
pop
sub
inc
adc
xor
dec
cmovo
bswap
test
jns
negl
lret
xchg
test
and
cmp
stc
pop
iret
in
mov
pop
dec
adc
push
mov
andb
mov
lret
je,pn
jnp
xchg
std
outsb
jns
punpckhbw
sbb
xchg
mov
mov
cmpsb
pop
add
fistps
inc
fnstsw
jbe
or
jns
xchg
seta
outsl
scas
xor
cld
loope
mov
xchg
inc
test
pop
xchg
mov
jo
stos
test
pop
cmp
aad
movsb
mov
jne
mov
cli
mov
or
js
ljmp
cltd
ret
push
mov
dec
loope
mov
push
loope
jle
out
call
out
stc
push
jo
ficoml
scas
dec
cmc
push
mov
lret
mov
mov
adc
jno
xchg
xchg
jbe
mov
dec
insb
loopne
cmp
movsb
xor
push
inc
pushl
xlat
rol
or
pop
adc
insl
jnp
pop
adc
aam
pushf
sub
sub
cmc
movsb
push
mov
fmuls
test
dec
jae
mov
lock
jmp
mov
std
xchg
imul
mov
or
dec
xchg
dec
stc
lea
or
push
mov
push
addr16
jbe
sub
jl
ja
stc
cmp
insb
sbb
dec
adc
pop
outsb
dec
push
rclb
pop
je
clc
push
or
das
jg
sub
mov
adc
sbb
shrb
jge,pt
pop
cmp
pushf
xor
sahf
inc
push
aad
push
imul
push
jnp
push
jg
and
mov
cmpsl
or
orl
mov
movsl
inc
adc
push
push
inc
xchg
sbb
lret
shlb
sub
pop
dec
inc
adc
in
xchg
xchg
cmp
sbb
inc
adc
out
ds
addl
divl
test
pop
mov
out
push
push
sub
adc
fldenv
aaa
cmp
xor
nop
sbb
mov
aad
sub
popf
jb
cmp
pop
cs
push
movsb
orb
dec
fwait
cs
dec
cs
jmp
call
xchg
stc
cwtl
fmul
add
cmp
add
mov
add
mov
int3
out
fidivs
dec
add
aaa
add
mov
out
sbb
push
jae
clc
mov
or
mov
pop
out
int3
or
aam
xchg
push
mov
enter
add
dec
xlat
out
cmp
xor
or
or
sti
or
dec
inc
adc
pop
loopne
dec
stos
test
xlat
jmp
jns
icebp
mov
rcl
or
out
imul
jb
adc
in
mov
sbb
nop
stos
cmp
call
and
in
dec
push
mov
popa
jb
stos
lahf
cmp
jae
ss
adc
stos
fisubrl
push
jno
and
mov
push
jnp
jns
dec
fisubrl
cmp
inc
or
loopne
cmpsl
int
pop
sbb
loope
movsl
sar
movsl
push
out
cld
in
sbb
or
inc
or
xchg
inc
sysexit
pop
sub
inc
or
add
scas
mov
or
into
or
repnz
stos
mov
sbb
push
fwait
jle
mov
dec
jno
sbb
xor
mov
jg
xchg
cwtl
cmpsb
aam
push
and
mov
jle
cmp
push
push
pop
outsb
jecxz
insl
shr
cmp
lods
stc
inc
and
imul
xlat
push
cmp
inc
sub
lods
xchg
push
xchg
push
fs
sub
push
mov
jno
imul
mov
sbb
mov
xor
push
popl
shll
mov
sbb
xchg
sbb
rcrl
imul
lret
sub
push
cmp
xchg
aad
scas
xchg
test
push
and
es
test
mov
sti
hlt
fnstenv
cmpsb
mov
pop
jo
data16
jbe
push
mov
jne
daa
xor
mov
push
push
xorl
dec
lock
std
xor
mov
leave
gs
shll
popa
xchg
cld
subb
jne
push
xchg
jbe
jl
popa
xor
xor
inc
ss
jno
xchg
jge
lahf
xchg
data16
fdivrs
sub
cmp
sub
ljmp
out
sbb
jne
popa
lds
cmp
mov
xchg
mov
mov
out
iret
repnz
xor
jno
loopne
insl
ret
xchg
xor
or
mov
les
shll
pop
mov
hlt
shll
add
scas
pop
out
rcrb
das
add
add
call
lret
jg
shll
lcall
imul
and
imul
dec
es
pop
pop
adc
mov
popf
shlb
lock
jle
out
ficoms
sbb
outsl
insl
pop
js
popa
lock
test
frstor
jmp
notl
mov
push
dec
fisubl
cmp
and
scas
dec
add
dec
fs
inc
dec
inc
daa
xor
scas
test
push
adc
sub
je
pop
ss
sub
lcall
xchg
xchg
jecxz
dec
cmp
jg
lcall
push
cwtl
fmul
xchg
testb
in
stc
mov
push
sbb
in
fistps
test
push
fxam
dec
mov
sbb
ljmp
sub
sub
sub
mov
sub
mov
daa
cmp
movsl
js
leave
add
scas
dec
mov
mov
inc
push
mov
mov
or
sub
jmp
stos
notb
enter
test
xchg
pop
out
lock
sbb
and
mov
in
push
ss
imul
sub
pop
jmp
jne
insl
cmpsl
insb
fldt
dec
aam
cli
mov
fiaddl
and
cli
sbb
popf
xor
xchg
fsubl
push
int3
int3
loope
adc
mov
movsl
fwait
in
xchg
vmread
lret
add
sub
or
repz
cld
fsubl
aas
test
and
stos
push
pop
pop
ja
movq
cmc
loopne
pushf
xchg
inc
xchg
loop
push
and
outsl
repnz
push
inc
ret
sahf
fs
loop
es
fadds
push
cmp
adc
mov
shrl
add
int3
sbb
adc
add
popl
inc
movsb
add
pop
push
sbbb
stos
addr16
mov
ret
mov
add
xchg
and
repnz
fimull
hlt
xor
xor
dec
out
arpl
stos
scas
sbb
fnstsw
test
jmp
in
prefetch
addr16
pop
dec
sbb
pop
arpl
and
arpl
adc
je
push
mov
xor
in
push
jmp
in
mov
dec
jecxz
xor
jb
mov
jmp
mov
jg
in
jns
pop
push
shll
call
call
pop
aad
adc
push
inc
lock
and
sub
iret
add
sbb
cmpsb
sub
xor
cwtl
xchg
pop
pop
push
xchg
inc
insb
or
loope
xchg
push
adc
dec
and
dec
sbb
adc
int3
dec
loopne
test
mov
incl
sub
ds
aaa
loop
mov
iret
gs
mov
addl
cli
add
fstl
repz
insb
hlt
leave
aad
cwtl
std
hlt
sub
xor
nop
adc
and
sub
or
pop
add
les
aad
test
arpl
stos
and
mov
test
repnz
mov
push
lds
es
ss
adc
in
pcmpeqw
aad
pop
and
hlt
jg,pn
sti
jmp
ret
jmp
lahf
je
inc
mov
out
iret
xor
xorl
mov
mov
cld
into
dec
out
push
and
movsl
jo
sub
mov
jne
in
fdivp
or
stc
push
jns
jne
in
sbb
loopne
inc
xor
cmpsb
bound
or
add
dec
icebp
mov
rcrl
loopne
cmp
aaa
dec
ds
arpl
mov
aad
push
popl
shlb
inc
popf
std
sbb
lcall
jl
sbbl
loope
stc
loopne
int3
mov
mov
cwtl
jno
lret
mov
and
add
dec
frstor
jo
jbe
test
cs
pop
inc
jp
in
insb
fs
js
or
pusha
jecxz
jp
sub
lret
sbb
aam
stos
rcl
test
js
jae
ret
jle
dec
stos
inc
add
xor
pop
movsb
pop
fidivrs
in
test
dec
inc
clc
jmp
dec
push
cli
cmovle
repnz
lret
out
add
iret
lock
lret
mov
and
loopne
pop
jge
in
mov
and
push
or
gs
push
mov
xor
loop
dec
cmp
popa
jp
sbbl
xchg
dec
mov
stos
mov
clc
in
aam
movb
pop
shrl
lret
add
and
add
pop
mov
dec
mov
add
shrb
jge
sahf
aad
cld
mov
push
sub
push
sbb
sbb
dec
jne
pop
sbb
sbb
test
add
cld
ja
push
or
xor
test
mov
pop
repnz
outsl
call
testl
test
xchg
fisttpl
add
in
push
mov
push
and
dec
sbb
cld
lods
or
sub
cmc
inc
mov
mov
fisttpl
iret
loope
sub
sbb
mov
adc
adc
loope
xchg
mov
and
gs
test
testb
xchg
ss
out
xorb
ss
push
mov
sahf
fildl
push
cmp
mov
es
pop
aas
pop
lcall
outsb
rolb
push
adc
pop
rclb
je
push
or
stc
je
add
arpl
iret
shl
stos
pusha
popa
pop
in
sahf
dec
das
icebp
pushf
aad
out
loope
pop
jbe
sahf
and
movb
dec
xor
scas
xlat
cmpb
jmp
dec
mov
addr16
in
sarl
stos
out
fimull
xchg
outsb
in
mov
xchg
mov
cmp
push
loop
rcrl
scas
dec
push
jns
dec
lea
add
jne
and
imul
repz
in
xchg
jle
mov
dec
fnsave
cmp
cs
push
lock
or
jne
lcall
or
clc
in
sbb
in
leave
xchg
inc
push
scas
loope
ror
data16
and
adc
jno
mov
cld
sub
cmpsl
adc
leave
cmpsl
clc
loop
test
stos
out
add
pop
cmp
repnz
xor
ret
mov
out
mov
adc
adc
xchg
divb
popa
xchg
out
addr16
pop
mov
jmp
sbb
mov
out
cmp
imul
outsl
jne
lcall
mov
jg
ss
jmp
insl
ror
pop
sub
shl
gs
jp
subl
mov
or
and
mov
andb
or
mov
cmp
ds
sbb
pop
sbb
bound
and
pushf
dec
or
es
test
ret
adc
push
add
pop
add
jge
xchg
mov
mov
sbb
jl
push
adc
fwait
adc
or
push
mov
or
jo
movsl
loop
adc
adc
mov
inc
pop
or
sbb
sub
clc
in
xchg
adc
mov
in
lret
pop
or
or
rcr
dec
cmp
pop
fdivrl
jge
ds
call
ds
xchg
sbb
movsl
data16
or
sub
pop
mov
push
ja
jl
inc
sti
jmp
mov
sub
sti
inc
lods
nop
dec
sbb
mov
xchg
jecxz
aas
pop
mov
enter
data16
adc
jecxz
mov
dec
sub
je
push
shll
es
pop
xchg
jmp
pop
imul
sar
mov
lcall
in
ret
jns
or
lret
xor
pop
mov
xchg
pop
xchg
aaa
dec
jmp
mov
ss
out
or
cmc
push
je
fidivs
dec
dec
xchg
pop
lock
push
sub
pusha
sub
pop
iret
add
cmp
and
mov
pop
push
in
mov
fistpll
push
iret
mov
scas
lds
int3
call
mov
mov
inc
dec
imul
mov
sub
inc
sbb
inc
push
addb
in
fwait
mov
push
rcrl
push
andl
xchg
pop
fstpl
sbb
pop
fxch
add
jp
inc
ds
mov
lds
jnp
and
or
in
ds
mov
dec
cmp
insl
int
out
xor
sbb
mov
sbb
nop
mov
fiaddl
fldcw
shrb
xchg
cmpsl
sub
iret
adc
aas
popf
mov
icebp
std
mov
imul
cs
std
outsb
je
inc
sub
or
xchg
enter
mov
pop
dec
jno
mov
mov
adc
movsl
mov
mov
rcrl
repnz
aas
cmp
add
push
adc
outsl
jl
xor
lret
popa
bound
orb
loop
xorps
hlt
into
or
mov
mov
cmp
jmp
lcall
mov
arpl
pop
addr16
jle
push
xchg
ja
push
test
cltd
and
fwait
std
jae
pop
jp
loop
in
add
filds
add
pop
push
pusha
and
cmp
or
sbb
sbb
inc
mov
pushf
ss
test
cmp
insb
mov
sbb
jne
sub
sti
cmp
fdivr
pop
xor
and
xor
rolb
mov
fcoms
or
lds
in
adc
pusha
mov
jp
stos
jnp
mov
js
push
pop
cmp
in
frstor
outsb
insb
and
mov
scas
push
out
and
pop
mov
sti
push
push
push
ljmp
addr16
and
iret
xor
adc
ret
icebp
sub
pusha
push
jb
leave
xchg
sbb
jno
and
xchg
out
in
bound
je
loopne
enter
addr16
xor
stos
sbb
lock
cmp
pop
adc
loop
or
jp
gs
popa
icebp
clc
nop
lods
lds
xchg
pop
add
add
inc
aam
sbb
cmp
inc
gs
push
in
pop
push
mov
inc
jno
mov
or
into
jb
inc
and
rclb
push
push
cmpsb
leave
fiadds
repz
sbbb
dec
xlat
mov
cmp
hlt
out
inc
and
icebp
add
sbb
push
and
push
mov
push
jnp
test
cltd
ret
ret
test
stos
xor
pop
xor
push
inc
pop
in
inc
dec
fsubrl
mov
data16
loope
xorb
mov
pusha
and
cmp
pop
fwait
gs
pop
stos
jne
mov
jg
test
insl
negl
jae
dec
scas
inc
mov
popf
fildll
clc
jno
jg
mov
cwtl
mov
push
jae
test
add
mov
rclb
movsb
lret
fisubs
shl
loope
mov
ss
lock
pop
xor
iret
movsl
test
pop
jecxz
xchg
inc
mov
sarb
ret
xchg
movsl
mov
jle
pop
mov
sub
sbb
repz
repnz
fsubrs
leave
pushf
inc
fucomp
decl
xchg
jge
sbb
mov
out
sbb
or
shlb
in
daa
fidivrl
xor
jo
mov
jl
cli
mov
mov
mov
dec
adc
push
cmp
outsl
xor
lcall
icebp
not
stos
mov
rclb
test
testl
sarl
jg
sbb
fcoml
ja
inc
xchg
test
scas
or
sub
mov
push
sbb
into
in
dec
lcall
push
inc
cmp
sub
nop
cmpsb
scas
int3
movsb
imul
test
xor
lret
aaa
mov
js
into
add
outsl
fildll
lds
dec
frstor
and
mov
cltd
push
bound
mov
clc
adc
sub
aad
xchg
fstps
fwait
mov
stos
inc
mov
dec
stc
pusha
jo
cli
mov
push
and
sbb
ds
movsb
movsb
mov
dec
xchg
mov
or
andl
mov
and
and
mov
pop
xchg
adc
and
mov
popf
add
xchg
and
cmp
ret
fimuls
mov
aam
cmpsb
in
cld
cwtl
fisubrl
pop
sbb
out
sbb
lcall
xor
shlb
pop
stos
jbe
xchg
arpl
push
jb
ret
dec
dec
nop
call
repz
inc
push
arpl
xlat
jne
hlt
jle
aam
jne
arpl
loopne
les
sbb
push
insb
jns
xchg
add
or
inc
xor
xor
jbe
testb
lret
or
add
dec
inc
push
sub
lret
int3
imul
sub
push
bound
xchg
mov
sub
loope
cmp
sbb
mov
icebp
fprem
mov
or
movsl
icebp
add
sti
addr16
cmc
push
mov
sub
sbb
dec
jb
bnd
mov
mov
stc
xchg
out
lock
adc
push
lds
lahf
mov
orl
lret
jp
xchg
js
mov
imul
lahf
cmp
loope
notb
xor
or
pop
cmc
cmp
mov
mov
shlb
cmp
lea
fld
jecxz
orl
pop
cs
cmp
pop
add
repz
push
jns
jo
pop
cmpsb
inc
hlt
or
and
xor
jg
pop
outsb
mov
mov
mov
inc
xchg
loop
lcall
daa
add
rcrl
push
lcall
and
repz
insb
push
xchg
inc
std
lahf
sahf
cmc
fcmovne
out
cwtl
xor
pop
in
aad
cmpsl
sbbb
pop
mov
push
jno
add
subb
insl
fs
loop
in
pop
xchg
out
mov
mov
in
mov
mov
pop
aam
divb
jg
mov
ja
ror
enter
mov
lret
ja
dec
sarl
jmp
cli
leave
xlat
mov
lcall
aad
mov
out
inc
mov
cmp
mov
push
adc
call
push
cmp
dec
mov
add
cmpsl
add
stc
sbb
xchg
xor
adc
imul
mov
sarl
and
iret
mov
dec
xor
dec
jns
je
pop
xor
adc
cld
decb
jb
mov
jg
xchg
aas
nop
sbb
popa
xor
loope
fsts
push
out
sti
mov
bound
mov
jb
and
int
xchg
jle
mov
xchg
test
nop
add
cmpsl
xchg
pop
mov
sbb
in
lods
aas
lods
mov
hlt
movsb
in
mov
ficoms
rcrl
mov
sub
xlat
clc
or
or
stos
xor
pop
sbb
imul
movsl
adc
fnstenv
xchg
js
es
mov
pusha
fcmove
add
movsl
inc
scas
and
lahf
mov
loopne
clc
mov
and
das
in
das
cli
test
push
cmp
cmp
push
and
and
insl
lret
adc
mov
imul
scas
jo
lret
or
cmp
sbb
popf
or
jl
jb
xchg
imul
ret
mov
cmpsl
or
pop
mov
subb
out
and
adc
js
mov
std
push
xchg
mov
fdivrs
stc
add
pop
aas
mov
sahf
push
sbb
out
push
lcall
fmull
mov
imul
pop
notb
push
jge
loope
jnp
add
mov
dec
sbb
mov
add
insb
push
jb
in
movsl
idivl
lcall
xlat
out
adc
mov
push
push
mov
mov
mov
test
gs
cltd
pop
mov
aas
mov
mov
xor
jl
test
push
cmpsl
ficoml
sub
sbb
jb
flds
call
jmp
cli
fldl2e
cmpsb
stc
sbb
bound
xor
sahf
pop
cwtl
fs
mov
jge
inc
push
jae
je
loopne
sbb
or
dec
ds
shll
xchg
ss
mov
xchg
jl
jle
outsb
inc
leave
mov
xchg
test
inc
popa
cmp
jp
cmpsb
call
loope
sub
add
outsl
jno
imul
cmp
decb
jmp
test
loopne
and
fcmovnbe
dec
mov
rolw
mov
adc
ja
fdivl
pop
jae
aam
lods
cmp
mov
scas
dec
das
repz
movsb
aas
mov
pop
jns
out
insb
out
adc
add
push
mov
push
mov
push
outsb
push
out
int
jle
jns
daa
stc
add
dec
imul
dec
daa
gs
push
cltd
push
cmp
mov
jno
test
pop
dec
and
ljmp
push
pop
cmp
xor
push
dec
shll
pop
or
daa
iret
fidivrl
sbb
and
dec
imul
lods
sub
pop
data16
jbe
push
or
adc
enter
sbb
sub
xchg
dec
cmp
lock
clc
aam
mov
adc
sub
les
lods
jnp
loop
loop
dec
mov
xchg
call
fcmovnbe
adc
push
ja
mov
xchg
mov
or
outsb
lret
rcl
sub
jecxz
scas
std
pop
pop
inc
cmpsb
les
xchg
lcall
mov
push
rep
andb
into
sub
stc
std
dec
in
rcll
mov
xchg
test
insl
ljmp
pop
mov
rcrl
hlt
ds
loope
outsb
adc
pop
jge
adc
mov
les
push
loope
push
push
les
and
jae
jge
jb
sahf
and
movsl
notb
cmp
ret
mov
sbb
fiadds
jle
xchg
int
sahf
ret
shll
xor
xchg
sub
incb
js
jnp
adc
pop
mov
pusha
or
enter
mov
jns
add
rcll
subb
or
jge
fisubrl
push
test
scas
push
push
bound
pop
repnz
fs
sbb
pop
or
daa
pop
testb
ljmp
pop
push
xor
out
inc
xchg
inc
das
ret
adc
xchg
jne
sub
aas
mov
adc
sar
addr16
xor
dec
or
adc
xor
imul
sti
mov
sbb
stos
dec
outsb
mov
jo
sbb
fmuls
pop
rcrl
mov
lcall
stc
inc
jno
and
sub
inc
ljmp
mov
mov
mov
loope
mov
mov
lods
out
and
fisttps
sbb
xchg
pop
es
mov
lahf
mov
les
pop
sbbl
pop
unpcklps
pop
decb
jcxz
xchg
popa
push
lods
xchg
xlat
cmp
aas
out
out
mov
arpl
ja
repnz
push
push
sbb
scas
xchg
cmc
xchg
in
pop
fadds
int
out
aad
gs
or
push
pop
mov
mov
fsubl
nop
andb
lods
pushf
dec
sti
iret
and
clc
sub
mov
decb
loope
xor
out
sbb
add
popf
jnp
push
jno
add
adcl
shl
daa
cmp
cli
mov
std
inc
sub
cmpsl
or
or
aam
call
loop
inc
nop
std
push
push
into
mov
mov
or
call
sti
add
sub
xchg
mov
and
push
jmp
adc
pop
cmp
aas
lock
in
jns
adc
inc
test
jo
jp
loopne
cmp
nop
dec
jno
cld
pop
adc
faddl
out
mov
pusha
int
dec
dec
jg
nop
mov
jecxz
sbb
xchg
mov
shlb
sbb
push
call
loopne
cmp
aaa
scas
push
int3
clc
js
or
add
pop
sub
jge
fidivrl
stc
mov
mov
xchg
or
or
cmp
sahf
sub
fsub
jg
adc
push
push
aas
xor
lods
out
or
mov
and
mov
icebp
push
mov
cli
add
popf
push
insl
loopne
inc
stos
fsub
or
test
stos
imul
arpl
scas
lret
cmc
daa
hlt
pop
aas
test
out
cmpsb
out
inc
inc
pop
jo
adc
icebp
cwtl
loopne
jno
pushl
mov
lds
dec
cld
cmp
daa
cwtl
mov
cmp
je
push
and
data16
lods
call
and
clc
pop
ja
nop
add
into
lret
popa
sbb
lock
sub
mov
inc
inc
and
push
cmpsb
cltd
fstpl
imul
pop
cltd
sbb
and
lods
xorl
mov
and
test
xchg
adc
mov
loope
jne
mov
jb
mov
push
add
ja
shlb
int
std
mov
pop
test
cmp
sti
movsl
fmull
sub
adc
push
mov
cmpsl
sub
cmp
sub
push
sbb
mov
or
sub
data16
les
stos
push
fldenv
pushf
enter
pop
cmp
mov
outsb
jno
and
add
mov
pop
sub
dec
pushf
ds
xor
daa
dec
add
push
movsl
std
add
or
stos
mov
add
or
push
push
dec
idiv
idiv
mov
push
and
mov
dec
xchg
test
test
test
cmp
mov
inc
ret
aam
jmp
call
rcr
jnp
cmc
adc
outsl
or
mov
dec
nop
in
mov
das
insl
push
sbbl
in
addl
sub
add
cmp
mov
cmc
mov
jp
pop
cs
mov
insl
xor
lods
fwait
pop
or
in
push
je
sarl
arpl
mov
ret
sbb
jge
sub
inc
aad
sub
scas
pusha
sbb
push
in
and
stc
xchg
jb
dec
insb
add
push
jne
and
ss
push
movsl
test
adc
rorb
xchg
in
aaa
add
jmp
cmpl
and
jno
pop
xor
cmp
insl
xchg
and
pop
adc
jecxz
shll
mov
aaa
xchg
into
ret
mov
stc
xchg
sbb
test
add
xchg
call
cmp
clc
int3
inc
in
xchg
inc
xlat
mov
pusha
xor
lock
sarl
inc
jl
or
mov
inc
sahf
mov
jbe
test
mov
and
pop
jns
lcall
xchg
addr16
add
stos
in
pop
push
stos
shll
mov
or
adc
mov
pop
lret
adc
sub
mov
push
cmp
pop
cwtl
push
or
repz
sbb
dec
mov
pop
and
incl
and
int
push
cmp
int
dec
flds
pushl
xchg
cmp
mov
mov
xlat
push
xor
mov
cmp
mov
xor
xlat
mov
push
pop
xchg
push
add
xor
add
cmovle
nop
jecxz
inc
sahf
pop
cmp
fisubrl
out
push
cs
flds
jnp
js
pop
mov
mov
add
inc
roll
mov
js
and
mov
and
or
jb
shrb
push
in
out
ror
int
and
pop
movsb
pop
roll
loop
jecxz
adc
ret
nop
fwait
lods
sahf
jle
in
push
xchg
mov
arpl
jmp
mov
and
test
adc
mov
xor
daa
add
adc
nop
cmp
aas
shrb
pop
sbb
mov
lcall
cmp
jne
jecxz
pop
pushf
and
call
jmp
out
xchg
icebp
insl
lret
repnz
adc
mov
inc
dec
jb
fnstenv
imul
lahf
add
cmp
mov
dec
test
ss
data16
leave
xchg
cwtl
sbb
jg
cmc
lret
add
xor
int
push
lods
push
push
pop
int3
mov
int
mov
cmpsb
mov
mov
push
iret
push
pop
xchg
orl
stos
fdivrl
pop
les
stc
inc
prefetchw
or
push
mov
pop
xlat
jge
jb
repz
cmp
pop
adcl
repnz
push
xchg
and
xor
fs
dec
push
add
in
sub
pop
insb
aaa
out
push
xchg
decl
pusha
and
inc
push
aaa
jnp
les
test
jbe
sub
aam
int3
fs
xchg
out
fsubrl
inc
dec
cmc
mov
push
jmp
push
fldenv
cmpsl
fidivs
inc
jb
and
cltd
dec
ret
sub
push
jp
shrb
fwait
mov
sub
lock
mov
in
add
fstpt
sbb
in
and
jo
dec
fldl
iret
xor
clc
popf
int3
icebp
pop
mov
lret
dec
mov
dec
jmp
lret
add
lods
ret
jno
xor
outsl
rorl
fcmovnbe
mov
mov
sbb
mov
push
add
jle
sub
dec
out
loop
imul
xchg
std
fwait
data16
stc
mov
push
into
mov
push
fistps
dec
mov
adc
shll
push
fildll
dec
pop
insl
mov
xor
fwait
loop
mov
cmpsb
into
jle
ret
add
imul
test
negb
fldcw
adc
popa
fistpll
add
ljmp
popa
mov
push
mul
push
fists
ss
mov
pop
outsb
lahf
adc
les
out
shr
sbb
out
gs
mov
push
mov
scas
inc
out
es
test
int
cmp
lea
adc
lcall
lock
rcl
fdivs
and
xor
arpl
xchg
movsl
fidivs
jns
lret
imul
or
jge
imul
lret
loop
mov
pop
pusha
fisubs
std
mov
mov
add
adc
jg
cwtl
aas
and
vmovlpd
jl,pn
and
inc
sar
adc
and
or
addr16
stos
addr16
jecxz
iret
das
sar
pop
test
clc
inc
shl
gs
add
mov
xchg
jns
xchg
cltd
push
les
push
mov
ljmp
outsl
push
leave
ficoml
jb
call
sbb
sahf
jo
cmc
repnz
out
fdiv
inc
scas
mov
mov
cmp
xchg
dec
inc
sub
cmpsl
sbb
xor
ljmp
in
and
push
lret
jl
lods
jp
xor
push
mov
shl
incb
ret
ficompl
push
adc
pop
lds
sbb
stos
in
cld
js
pop
scas
out
jmp
repnz
pop
mov
mov
sahf
pushf
adc
add
sbb
jmp
stos
sub
int
xchg
jl
sub
inc
call
cmc
xchg
pop
rcrb
aas
or
in
sub
mov
es
int
mov
inc
or
jge
inc
mov
push
cmc
jmp
or
and
pushf
cmp
shl
fdivs
mov
mov
lret
mov
inc
jne
imul
les
push
mov
adc
mov
or
adc
loop
jl
mov
dec
bound
and
push
iret
into
jle
adc
mov
push
adc
movsl
mov
lods
xchg
adc
hlt
add
add
stos
push
adc
outsb
inc
dec
jle
mov
shrb
fsubrl
mov
mov
sub
repnz
dec
scas
rorl
pop
sbb
pop
out
mov
push
dec
test
cmp
mov
popa
lds
pop
or
orl
sub
lahf
adc
jns
bound
push
add
jno
inc
lahf
and
lahf
int3
fcoms
icebp
cld
or
stos
add
push
pop
push
scas
sahf
loop
xor
inc
mov
sti
xchg
lahf
les
sbb
shll
ret
cmp
ljmp
pusha
js
pop
mov
pop
cmc
pop
push
xlat
scas
add
or
jmp
repnz
add
and
push
dec
mov
mov
shl
and
scas
cmc
dec
out
frstor
fimull
test
jp
mov
bound
and
fsubrl
pop
enter
mov
imul
dec
xor
into
lods
aas
jmp
add
mov
jge
sub
adc
mov
cmp
sbb
xchg
push
or
loope
push
xchg
pop
push
jmp
andb
add
cwtl
imul
sbb
mov
hlt
gs
in
call
lcall
das
xlat
add
cwtl
mov
jae
jmp
inc
nop
mov
push
mov
cmp
in
cmp
fwait
popf
push
lods
pop
scas
cs
les
cmp
popf
pop
xor
pop
je
in
jns
add
int3
mov
add
jno
inc
movsl
out
mov
imul
mov
fucomip
inc
push
movsb
and
sbbb
mov
pop
inc
int
push
in
and
in
cwtl
cmpsl
outsl
xchg
mov
add
push
into
cwtl
fmulp
add
mov
add
lret
imul
adc
sub
loopne
and
cld
jl
pushf
xchg
push
push
xchg
and
pop
xchg
dec
data16
addb
pushl
into
leave
dec
shl
jg
in
adc
cwtl
and
ljmp
xchg
cmp
mov
shll
mov
xor
add
clc
jno
xlat
and
fidivrl
outsb
fwait
mov
mov
hlt
test
int
xorb
inc
push
inc
repnz
pop
es
cmpsb
inc
lcall
orl
dec
aaa
repz
jno
cmp
or
add
push
add
movsw
incb
test
fiadds
mov
js
inc
push
lods
push
repnz
fistpll
rcrb
xchg
inc
mov
negl
sub
or
jb
stos
dec
push
mov
add
xchg
dec
aaa
inc
popa
pop
sub
dec
sbb
stc
mov
int3
xor
pusha
xor
out
adc
jp
dec
movsb
xchg
mov
sbb
aaa
add
mov
adc
mov
xor
aad
dec
cmp
and
iret
in
pop
test
mov
pop
out
jns
sbb
jo
daa
scas
imul
daa
or
out
mov
add
lret
mov
test
xorl
scas
xchg
ds
fs
lock
push
mov
repz
int
ja
jns
xlat
add
sahf
das
pop
out
and
lock
pop
int
clc
test
loop
mov
mov
mov
mov
mov
jo
pop
int3
mov
jae
lock
out
jb
sbb
xor
dec
mov
repz
andb
adc
sub
mov
roll
mov
xchg
lahf
and
mov
cwtl
stos
mov
ss
mov
cmc
test
pushf
and
imul
xchg
bound
pop
push
arpl
fnsave
popa
mov
sbb
loop
imul
pop
adc
out
leave
mov
loopne
and
lahf
and
xor
pop
pop
not
mov
pushf
popa
repnz
popa
sbb
cltd
setnp
lret
js
insb
insb
jb
add
js
push
jbe
cs
inc
lods
aam
push
mov
mov
mov
cmp
dec
lock
mov
mov
push
cmp
in
adc
adc
outsb
xchg
dec
fwait
push
fisttps
sub
call
rcll
outsl
mov
aad
subb
inc
pop
xchg
scas
and
jmp
xchg
sub
fmuls
lds
xor
mov
push
dec
xor
jmp
ds
sbb
cmp
push
test
iret
add
jne
jbe
lcall
in
fcmovbe
jecxz
lahf
aaa
inc
mov
stc
lods
jne
and
sbb
inc
xorb
js
fdiv
dec
and
out
in
and
or
loope
stc
test
jmp
jno
dec
add
push
imul
insl
fcompl
dec
mov
push
mov
addb
sbb
bnd
xchg
sub
outsb
insl
and
dec
sub
cmc
imul
loope
or
jnp
cwtl
jb
push
push
mov
push
ds
push
jo
cli
cmp
add
sub
sbb
jns
pop
popf
test
mov
fsub
test
sub
jno
and
pop
out
cs
movsl
pop
bound
dec
stos
sti
inc
dec
in
cmpsl
mov
stos
inc
scas
xor
mov
fadds
cmp
jg
shll
lret
insb
jb
sbb
sti
jg
cli
fiadds
ss
jmp
dec
add
mov
and
movsl
gs
inc
ret
ss
pop
dec
cmp
pop
sub
mov
adc
push
dec
hlt
adc
pop
or
sahf
out
fdivl
push
pop
xor
jo
jge
testb
push
mov
je
outsl
push
push
cmpsb
clc
cmpsb
in
in
pop
rcl
aaa
inc
fimuls
sbb
gs
or
cmp
cmp
push
lock
lea
loope
pushf
jns
scas
jle
jecxz
lret
out
inc
xlat
lds
aaa
mov
stos
push
cmp
cli
insl
or
enter
pop
adc
pop
ds
mov
cmp
push
adc
rcl
ret
mov
sub
jno
mov
in
or
mov
outsb
pop
sbb
inc
xor
xchg
addr16
sub
in
cli
mov
push
mov
in
fsts
lahf
lock
insl
and
stos
pop
stos
jle
xchg
addr16
mov
xor
dec
jge
mov
dec
jns
fisttps
mov
test
test
xchg
stc
pop
xchg
sub
cmova
xor
test
pop
shrb
dec
jb
add
arpl
jmp
inc
and
ja
aam
pop
test
daa
mov
sub
add
xor
fnsave
scas
push
push
pop
sahf
sub
or
nop
push
sbb
or
push
arpl
jl
fwait
inc
test
int
dec
cwtl
lret
ret
or
cmp
insl
pop
adc
jns
push
sub
notb
xchg
dec
and
pop
nop
add
cmpsl
nop
mov
mov
pcmpeqb
rclb
lods
sti
pop
mov
mov
sbb
popf
xchg
xlat
mov
sub
out
int3
fiaddl
mov
pop
adc
push
in
xor
movl
cmpsb
mov
dec
jg
pushf
jo
in
mov
dec
out
push
repnz
std
and
test
jecxz
pop
pop
lret
xchg
adc
jle
out
stos
rcrb
dec
ret
xchg
and
popa
sbb
pusha
mov
icebp
sub
int
cmp
call
sbb
insb
sbb
fiaddl
or
loope
mov
sbb
repnz
in
fbld
mov
pop
push
movsb
aad
or
push
dec
clc
fnstcw
push
outsl
or
inc
and
jmp
pop
jo
imul
into
add
mov
ljmp
xlat
int3
test
cltd
in
and
das
popa
data16
sub
insl
mov
push
dec
sbb
xchg
xor
shll
enter
xchg
adc
dec
aas
and
subb
xchg
into
adc
mov
out
adc
sbb
push
sbb
fwait
xchg
inc
sbb
jmp
mov
stos
jnp
aas
test
leave
sbb
out
call
mov
pusha
popa
mov
sub
lods
mov
or
into
dec
movsl
xchg
loop
sub
loope
add
mov
push
loope
dec
cmp
mov
outsl
roll
mov
ljmp
fidivrl
mov
jecxz
mov
push
test
ucomiss
cmp
adc
sbb
int3
ljmp
cmp
lcall
pop
jmp
jle
enter
mov
mov
mov
aam
mov
cmpsl
lods
mov
repnz
lcall
ret
push
or
fidivs
push
ja
xchg
mov
mov
xchg
jo
adc
ss
sarl
lret
adc
lods
clc
jle
sarb
xchg
outsb
out
fists
and
sarb
pop
mov
sbb
cltd
and
pop
cmpsb
mov
rclb
leave
mov
add
sub
imul
mov
xchg
stos
cltd
add
cmc
sub
mov
hlt
mov
dec
mov
pop
loope
sub
sub
insb
das
testb
loop
jl
int
jge
leave
xchg
push
pop
fnsave
jns
cld
dec
sub
and
or
push
sbb
sub
lret
jnp
mov
dec
insb
dec
mov
cs
daa
aad
or
scas
rcrb
jmp
shll
clc
icebp
mov
xchg
sub
ret
mov
pop
pop
loope
xor
mov
lret
push
sbb
loop
popa
movsl
and
mov
clc
push
jns
pusha
loopne
pusha
lret
fstps
pop
outsl
or
cli
xchg
iret
loop
scas
and
idivl
adc
fdivrp
fwait
inc
or
es
out
ffreep
add
xchg
or
add
aas
push
xor
xor
dec
insl
adc
incl
insb
xor
or
fdivr
and
or
add
notl
lcall
pop
push
imul
rcr
xchg
add
jbe
cmp
sarl
leave
or
data16
pop
jge
sbb
nop
xchg
mov
pop
adc
cltd
ret
shr
add
pop
sbb
das
push
sub
pop
mov
mov
sbb
es
test
in
push
leave
mov
cli
adc
adc
sbb
aad
mov
lods
add
in
jne
dec
into
movsl
add
cmc
push
sbb
mov
subb
or
pop
stc
loopne
inc
sub
sti
xor
jne
mov
ds
imul
out
insb
es
in
push
out
mov
daa
mov
fwait
sub
mov
cmp
pop
cmp
mov
scas
int3
popf
and
insl
add
dec
jmp
mov
nop
cli
insl
ja
add
pop
cld
cmp
mov
sbb
leave
adc
mov
push
inc
xor
pop
imul
inc
scas
xor
mov
cmp
jl
inc
shlb
mov
inc
add
lahf
add
nop
mov
je
lret
mov
xor
add
xlat
daa
cmpsl
ljmp
and
dec
cmp
jmp
out
popa
std
dec
xor
sbb
and
rcrl
lods
pop
xor
aaa
je
pushl
dec
imul
lea
push
lds
pop
add
ljmp
and
mov
iret
sahf
xchg
adc
loop
inc
dec
xor
mov
out
inc
cmpsb
scas
mov
ret
and
in
and
sar
or
iret
test
into
in
addl
sbb
loop
rclb
mov
mov
test
aas
shrb
jmp
lret
jbe
push
loopne
push
push
movsb
cmc
call
ss
mov
push
ss
and
pop
push
push
mov
or
dec
fbstp
jno
jae,pn
xchg
lds
or
sbb
insl
inc
jno
scas
dec
out
dec
mov
cltd
daa
mov
lcall
cmp
cmpsl
push
sbb
jmp
popf
je
and
fs
aaa
mov
rorl
shll
enter
arpl
js
push
xchg
outsb
xchg
fistpl
enter
add
push
mov
xchg
pop
fldcw
ss
ret
hlt
insb
lods
cmp
jg
int
pop
pusha
insl
add
fcmove
out
sbb
sarb
jns
adc
pop
inc
cmc
push
ljmp
pop
pop
jmp
das
pop
pusha
test
stc
add
stos
jl
neg
lret
lea
dec
test
mov
ret
push
std
inc
andb
int
xlat
jbe
jp
cmp
arpl
sti
aad
test
repnz
in
or
or
pop
mov
ret
push
ret
mov
cld
pop
inc
mov
outsb
or
ja
push
fs
ja
lods
fadd
inc
shrb
cmc
cmp
xchg
mov
mov
test
out
push
jp
xlat
sub
sahf
push
cltd
sbb
mov
and
jmp
lret
and
out
dec
push
pop
pop
inc
test
mov
fistps
xor
cmpps
push
add
xchg
popa
sub
sti
ja
cmpsl
cmp
stos
or
xor
dec
sub
aas
test
cwtl
mov
mov
sahf
push
pop
unpcklps
add
lret
cmpsl
jo
push
xor
xor
rorl
pop
insb
inc
push
jbe
insl
ret
mov
out
loop
icebp
jb
data16
push
cmc
dec
add
push
mov
xchg
enter
testl
mov
imul
add
fstpt
rol
lea
sahf
inc
repz
in
adc
int3
sahf
stc
fnstcw
les
mov
xchg
mov
in
push
xor
jle
jecxz
mov
lcall
mov
out
mov
jno
and
lods
fucomip
rcl
je
cwtl
es
fcmovbe
jne
insb
pop
or
aaa
pop
dec
pop
iret
stc
loope
cli
mov
inc
ror
dec
mov
fcompl
cmp
test
pop
push
or
xor
andl
push
fs
cltd
add
or
fstpt
lods
test
ja
push
and
fisubl
stos
push
jnp,pn
lahf
and
ret
sbb
pusha
aad
push
mov
imul
test
jae
mov
out
test
adc
mov
repz
inc
xor
stos
mov
jno
sub
idivb
sbb
xor
ja
sahf
fdivrp
dec
push
in
mov
in
ret
outsl
mulb
sahf
daa
popa
xchg
xchg
pusha
arpl
push
jge
call
aas
push
push
cmc
adc
ja
jg
add
xchg
sbb
dec
cmpb
shl
adc
jne
push
and
cmp
inc
ljmp
fnsave
xchg
push
loope
add
push
fnstenv
insb
or
mov
inc
sbb
repnz
cmp
dec
mov
sgdtl
mov
clc
dec
outsb
jnp
mov
loope
inc
out
cmc
ss
inc
pop
cld
xor
add
lret
ljmp
fs
jne
xchg
inc
negb
lret
mov
insb
pop
rcrl
cmpsl
cmp
flds
mov
out
xor
imul
sbbl
and
or
insl
push
and
jmp
mov
mov
decl
inc
incl
popf
or
mov
push
lock
inc
testl
jl
xchg
push
sub
and
lea
dec
insb
lods
fwait
rorl
mov
daa
movsb
cmp
sbb
pop
sbb
movsl
outsb
mov
hlt
cmp
les
out
fldcw
mov
jae
sbb
negl
mov
in
xor
stos
fdivr
dec
sub
push
js
movsb
cmc
outsb
loope
daa
dec
cmp
das
cwtl
xor
add
mov
int
arpl
repnz
out
in
fwait
xor
mov
fists
inc
jae
mov
rcll
cmpsb
or
sti
ret
sbb
sub
cwtl
jmp
imul
outsl
adc
and
and
popf
xchg
clc
imul
xor
pshufw
fcmovb
xor
loop
adc
outsb
adc
xlat
and
adc
sub
sbb
add
xchg
mov
inc
jecxz
aam
xchg
jge
push
add
jno
add
dec
and
sbb
pop
outsl
xchg
xchg
add
jae
push
xor
test
and
js
sbb
sar
push
sub
push
mov
jns
sub
inc
ficompl
cs
test
nop
jae
scas
insb
in
xor
pop
mov
pusha
cmp
sub
jp
arpl
pop
sbb
xchg
in
pop
xor
cmp
mov
mov
inc
loopne
roll
cltd
pop
jmp
nop
loopne
mov
mov
movsl
inc
mov
inc
loop
or
pusha
inc
ja
test
fbld
or
fcompl
call
arpl
loop
pop
lds
shrb
jns
hlt
mov
adc
mov
mov
fcomps
lods
insb
sub
cmp
cmp
adc
cmpsl
jle
inc
or
scas
pop
pop
jbe
fldl
out
sub
hlt
inc
icebp
lret
cmp
jns
out
cmpl
xorl
jge
add
hlt
jl
inc
mov
inc
mov
push
clc
mov
push
xchg
inc
pop
jle
push
push
jb
xchg
mov
mov
or
mov
sbb
in
jb
xchg
fdivrl
jg
xchg
mov
adc
decl
aas
sbb
imulb
add
jbe
addb
sub
inc
sub
arpl
sti
and
jno
ds
add
pop
dec
jne
rcll
add
cli
xor
lahf
sbb
ljmp
xor
and
lods
insl
inc
mov
lcall
jbe
push
mov
push
sbb
cmp
and
daa
movsb
mov
mov
jge
inc
cmpsl
sbb
movb
sbb
insb
xchg
bound
xchg
mov
push
shl
imul
subl
popa
fdivrs
andl
lahf
inc
sti
nop
fnstsw
sub
icebp
add
push
push
sbb
aas
adc
inc
nop
xchg
dec
add
or
repnz
repz
movb
mov
insb
cmp
push
push
shlb
int
cmp
neg
lret
mov
inc
mov
fsubs
adc
in
mov
sbb
lahf
push
mov
out
inc
pop
add
fsubl
flds
das
popf
std
loopne
in
mov
fcoms
fpatan
testb
setbe
jmp
push
adc
mov
mov
xor
add
mov
xchg
sub
imull
inc
jns
int3
pushf
pop
jecxz
lds
pop
mov
sub
mov
adc
jp
or
leave
dec
insl
inc
xchg
adc
xor
rorb
jo
pop
inc
mov
adc
mov
nop
xor
sahf
mov
lock
sysexit
inc
mov
test
pop
xor
add
test
pop
cld
addb
pop
inc
cmp
inc
inc
icebp
out
pop
push
lods
out
je
adc
dec
lahf
push
gs
hlt
popf
ss
sub
addr16
stos
outsb
and
mov
lods
push
ss
or
dec
jl
push
jb
sbb
pushf
hlt
scas
cmp
mov
adc
fwait
stos
push
and
sbb
movsb
pop
test
mov
scas
xchg
pop
cmp
fstpl
daa
je
xchg
aad
test
xchg
adc
inc
test
and
jbe
mull
dec
jle
fidivs
orb
sahf
call
lret
cmc
test
outsb
jge
dec
mov
xchg
xchg
push
xchg
mov
pop
or
sub
add
nop
cmp
fdiv
fwait
inc
test
adc
shlb
setnp
decl
repz
popf
aas
xor
push
inc
cli
mov
adc
and
xlat
sub
icebp
rcll
frstor
sub
repnz
cmp
movsb
adc
orb
add
inc
pop
roll
or
leave
mov
push
shr
sarb
movsb
jl
bound
loopne
outsb
stos
pop
or
xchg
push
add
push
lahf
add
adc
iret
call
sbb
mov
jl
jg
ljmp
repnz
sbb
loop
sbb
mov
mov
or
add
sub
push
sub
xorl
dec
and
push
fstl
inc
sub
mov
lcall
inc
sbb
push
adc
xchg
pop
stos
ud2
test
imul
rorl
fscale
icebp
inc
sbb
roll
in
sbb
cmp
mov
imul
cmp
lret
fldl
pop
jecxz
sbb
mov
imul
mov
ss
stc
sbb
fwait
shrb
sbb
cmp
clc
xor
cmpsl
daa
shll
xor
repnz
rclb
jno
ss
fidivs
mov
notl
pop
daa
xor
fidivs
aad
xchg
aaa
dec
lds
adc
insb
xchg
jno
mov
in
or
test
rclb
mov
and
add
push
sbb
jne
pusha
add
xchg
push
stc
add
sub
inc
push
decl
adc
pop
xor
mov
sub
adc
hlt
xchg
xor
xchg
push
sbb
dec
je
push
pop
aaa
xor
pop
sub
cmp
adc
test
add
insl
push
and
cmc
cmp
int
push
dec
fsts
in
addr16
pop
push
dec
pusha
add
mov
imul
cmp
pop
add
sbb
ja
dec
ds
push
lea
and
mov
jle
cs
fbld
andl
sarb
ret
ja
inc
dec
in
lcall
fwait
cli
mov
push
pop
cmp
or
sbb
sbb
cmp
push
mov
ret
neg
pop
pusha
sub
or
fcomps
mov
jmp
mov
mov
movsb
mov
pop
or
fdivs
cmpxchg
outsl
popf
arpl
pop
pop
add
loop
xlat
sbb
int
shrb
int3
lahf
popa
xor
clc
pushf
dec
xor
andl
out
dec
cmp
or
push
adc
mov
andl
dec
sub
or
outsl
pop
inc
aad
lcall
loop
icebp
jmp
jno
cmpsb
adc
and
xchg
jno
scas
aad
sarb
sub
aad
mov
fidivl
adc
sub
and
cmpsl
mov
aam
mov
popa
jmp
daa
cmovb
insl
sbb
inc
or
inc
pop
lds
ljmp
popa
jg
test
ja
je
jo
inc
adc
adc
cmc
pop
mov
jno
sub
xchg
shlb
mov
or
xchg
xor
xchg
rolb
xchg
pop
test
cmp
mov
mov
orl
push
adc
cmpsl
jbe
fnsave
insb
mov
pusha
int
std
inc
pop
xchg
imull
dec
add
pop
lds
add
int3
xchg
mov
pop
aaa
jbe
int
lods
out
ds
pop
aad
jge
cmp
inc
push
jno
popa
int3
dec
int
inc
fildll
jecxz
test
iret
or
addl
and
scas
push
repnz
movsl
daa
sar
sub
into
dec
cltd
in
push
push
jnp
in
or
cmp
mulb
adc
mov
aad
ret
sub
push
stos
inc
pop
jnp
push
pop
cmp
xchg
aas
addr16
test
imul
mov
out
sub
jg
lcall
cmpsb
push
xchg
aaa
cmpsl
popf
sbb
in
int3
jle
int
enter
mov
dec
jle
addr16
cmp
js
js
push
test
jo
add
dec
push
pop
lods
fsubl
cmp
sbb
imul
outsl
dec
dec
out
ljmp
add
jbe
xchg
add
in
push
xchg
mov
mov
cmp
lods
sub
jmp
xchg
inc
jg
mov
push
fsubs
int
mov
inc
pop
cmp
xchg
sub
push
or
add
bound
or
push
push
sub
lret
bnd
mov
stos
cwtl
mov
add
adcl
cmp
push
jp
jo,pt
jge
push
pushf
add
mov
mov
call
insl
xor
loope
add
or
xchg
sahf
insl
jns
in
mov
repnz
or
addr16
adc
mov
scas
jns
adc
sub
mov
dec
xchg
ljmp
mov
inc
das
mov
mov
ja
lea
movsb
scas
xor
test
rclb
xchg
jmp
sub
mov
js
sbb
cmp
mov
fcoml
hlt
fisttps
xor
adc
add
xchg
cmp
mov
pop
cmp
into
add
cmp
mov
insb
jno
mov
test
inc
cmpl
jmp
cs
in
dec
out
lock
js
sub
dec
outsl
cmp
hlt
shll
popa
outsl
adc
sarl
shll
dec
sbb
jmp
mov
ficomps
outsl
sub
out
jmp
aaa
sbb
movsl
xchg
cld
jmp
dec
sbb
push
in
fldcw
popf
rcll
ret
mov
sub
push
jnp
mov
jle
lret
mov
outsb
js
inc
lods
int
sti
mov
xchg
xchg
pop
cwtl
fidivl
dec
jge
rcl
mov
leave
push
xchg
mov
mov
mov
aad
imul
dec
mov
aad
rolb
imul
sbb
outsb
jae
push
xchg
or
cmpsb
in
adc
cmpsb
leave
test
jne
cmpsb
xchg
in
and
mov
add
sbb
mov
rcl
arpl
es
mov
icebp
cmpsb
jbe
mov
mov
jle
jp
aam
jne
mov
push
cs
sub
mov
leave
jns
inc
pop
adc
mov
cmp
xchg
cmp
add
xchg
loopne
mov
insl
jbe
push
sub
lret
adc
fidivrs
xchg
lds
out
mulb
xor
add
daa
cmp
scas
mov
imulb
mov
pushf
cmp
mov
cwtl
xchg
add
repz
daa
sub
popa
jbe
push
jnp
jp
jae
fidivrs
jbe
jecxz
and
repz
add
dec
out
inc
pop
movsb
and
dec
cli
xor
sbb
lods
fisubl
insb
cmp
add
shrl
fucomp
sar
inc
inc
or
and
cmc
xlat
jmp
mov
scas
lea
mov
je
mov
push
in
cltd
daa
mov
insl
sub
stc
das
mov
cmp
mov
fmuls
cmovno
daa
mov
js
test
xchg
movsb
mov
mov
mov
and
push
xchg
test
jb
push
addl
mov
shlb
mov
aad
dec
into
incb
pop
jmp
rcll
jle
jmp
xchg
in
sbb
pop
fnstenv
adc
mov
mov
xor
mov
dec
stos
mov
push
mov
pop
lret
jns
and
out
xlat
mov
jbe
idivl
inc
int
sahf
add
or
add
push
rol
mov
lock
push
sbb
adc
inc
iret
or
mov
fprem1
loopne
xor
shl
add
rcrl
aam
xchg
jb
or
cmp
jecxz
sbb
jno
dec
jb
mov
mov
test
mov
jle
bound
in
push
xchg
pop
shlb
aad
dec
test
push
loop
repnz
jo
xchg
fsub
leave
int
mov
repz
inc
sbb
mov
sub
cmp
push
jno
jg
xchg
cmpsb
mov
in
jecxz
cmp
xor
sbb
mov
into
mov
push
lahf
cmp
push
mov
fnstcw
xchg
inc
dec
stos
push
sbb
testl
nop
popf
lea
lods
jne
mov
pushf
outsl
movsl
add
inc
in
outsb
test
subb
popf
and
arpl
xchg
lcall
cmp
fldcw
add
loop
adc
push
sti
cli
cs
bnd
rorb
xchg
add
xor
jg
sti
push
addl
sub
adc
lds
rol
pushf
xor
mov
test
xchg
cmp
iret
lock
xchg
jbe
xor
xchg
int3
and
dec
fistl
movsl
and
mov
clc
cmp
ja
loope
xchg
test
fidivrs
sub
dec
fstpl
sbb
xor
movsb
mov
add
cmp
std
rcl
dec
mov
lods
popf
cmp
xor
test
ds
dec
out
andnps
pop
cmpsl
stos
pop
out
pop
aam
inc
sub
cmc
cmp
jge
outsl
mov
mov
adc
stos
xor
subl
insb
sub
jae
daa
jle
push
mov
in
inc
fidivl
cmp
inc
rcll
push
mov
jmp
lds
and
cmp
push
fcmovu
xorb
popf
jbe
or
push
jp
adc
and
out
xchg
lar
sti
outsl
imul
cmpsl
stos
shlb
or
lds
mov
adc
or
inc
dec
ss
mov
aas
fnstenv
push
fsubl
add
cltd
clc
je
xor
je
iret
mov
fisttpl
mov
cltd
outsb
dec
cli
push
adc
out
leave
rcrl
mov
dec
out
push
sbb
adc
mov
add
push
jge
inc
frstor
jp
movsb
or
pop
enter
dec
in
es
mov
repz
cmp
fdivr
rorl
xor
popf
mov
push
lret
bound
lods
mov
ret
js
inc
out
in
lock
jno
int
loop
aam
imul
pop
jecxz
mov
xchg
mov
sbb
arpl
mov
push
test
sub
inc
jle
rcl
daa
inc
enter
loope
incl
inc
fadds
loope
stc
daa
mov
out
gs
sbb
jge
inc
pop
inc
mov
testb
aam
ss
ja
lds
pop
mov
outsl
pop
push
add
pop
ja
pop
and
into
jnp
sarb
mov
cmp
ret
cld
movl
adc
sub
ss
sahf
sub
repnz
gs
out
lea
cltd
outsb
fcompl
dec
add
add
mov
jl
cmpsb
pusha
fists
clc
imul
mov
push
jns
sarl
or
and
dec
ret
or
mov
pushf
popa
adc
stos
negb
sarl
lret
out
xchg
loopne
push
mov
sbb
jns
inc
std
inc
mov
or
fbstp
sbb
cmp
xor
mov
in
imul
jle
iret
aas
dec
push
and
popf
mov
stos
insl
dec
xchg
cmp
mov
outsb
mov
push
ds
dec
adc
jne
pushl
xor
lcall
loope
cmpsb
mov
sub
lods
sahf
mov
mov
das
ror
add
stc
xor
pop
mov
mov
and
loopne
push
adc
adc
scas
gs
inc
stos
pop
bnd
push
xchg
sub
shll
push
jnp
xchg
sub
cmp
cmc
repz
cmpsl
mov
cmp
sbb
mov
adc
mov
int
repnz
sbb
cmpsb
mov
fisttps
loope
mov
js
pop
and
ljmp
or
repz
movsl
fwait
xchg
ret
andb
or
inc
add
repz
sar
pop
inc
roll
test
stc
cld
scas
ss
pop
pop
rcl
imull
xchg
cmp
mov
divb
push
jae
jge
xlat
imul
rcrb
or
out
daa
mov
or
shr
fdivrl
pop
mov
adc
add
aam
lret
lret
add
mov
lods
rorl
mov
adc
lcall
cmp
cli
clc
addr16
insl
and
mov
cltd
inc
lea
pop
rcll
mov
fisubl
cld
adc
cwtl
inc
out
cwtl
popf
lcall
or
pop
ret
lret
in
dec
add
inc
xchg
int
mov
iret
test
cli
addl
test
mov
out
cltd
mov
dec
dec
mov
add
mov
dec
sbb
imul
pop
outsl
ret
inc
inc
into
call
xor
in
addl
in
sub
cmp
xchg
xlat
push
push
adc
sbb
fs
subl
cld
test
ljmp
mov
lcall
push
xor
shlb
rcll
xor
gs
mov
inc
dec
subb
mov
loopne
das
shrb
iret
fwait
divb
dec
mov
insl
fwait
iret
sbb
int
bound
mov
loop
xchg
mov
repnz
add
bnd
jmp
imul
add
dec
je
ljmp
push
cltd
xor
xchg
and
push
xlat
ds
lods
aaa
cltd
add
mov
lock
iret
fs
ss
cltd
hlt
push
movsl
cli
arpl
pop
jp
and
repz
adc
mov
xchg
in
adc
imul
mov
imul
leave
mov
inc
push
fldl
push
push
insl
add
mov
xchg
ja
jle
lods
movsl
and
jl
sbb
and
jmp
mov
hlt
push
adc
rcl
add
or
mov
aas
out
rcr
adc
or
inc
iret
xchg
xchg
cmp
xlat
push
xor
jb
dec
cmp
stos
stos
adc
xchg
mov
sub
sub
loope
test
adc
adc
es
and
inc
mov
dec
xor
mov
test
test
cmp
xchg
ret
xor
jge
sti
mov
jns
movsb
je
mov
dec
dec
or
jle
and
cmc
repnz
jb
add
push
loope
mov
jge
xorb
mov
lea
gs
fs
js
xchg
jl
cmp
mov
cmp
push
je
inc
out
mov
lods
and
repnz
jns
pop
inc
les
in
loop
roll
jns
loopne
sbb
inc
push
mov
sub
and
test
pop
loope
stos
test
inc
iret
movsl
loopne
aad
sbb
xor
cli
das
loopne
and
or
inc
cltd
and
stc
ficoms
test
mov
inc
push
mov
cwtl
mov
fwait
xchg
jecxz
push
jae
cmc
loopne
jp
ficoms
sub
imul
mov
adc
jb
jmp
mov
inc
out
mov
add
sub
in
sub
jmp
out
mov
push
mov
xchg
cmp
outsb
mov
jmp
out
or
sbb
iret
jecxz
sarb
dec
fadds
inc
pop
mov
leave
jecxz
inc
mov
int
push
mov
les
add
in
aam
xor
mov
push
push
movsb
and
sbb
out
es
sub
lret
xchg
sbb
adc
mov
adc
mov
das
jae
sahf
clc
fcomip
mov
mov
cld
rclb
stos
shll
xchg
aaa
call
cmc
aaa
lds
aad
out
into
sub
nop
daa
iret
mov
dec
pop
adc
mov
mov
sbb
pop
lock
mov
xor
xlat
mov
xor
cmpsl
ljmp
jp
add
outsb
cmp
imul
and
mov
insb
int
cmp
ss
xchg
jge
mov
cmp
jns
add
mov
xor
loope
pop
lcall
pop
adc
mov
dec
int
mov
movsl
sbb
cmpsl
sbb
cmp
adc
jns
lcall
push
push
pop
sub
and
aaa
push
and
gs
out
movsl
jmp
xor
xor
fs
cmp
dec
mov
cwtl
pusha
loop
mov
push
cmpsl
push
sbb
ret
andl
xchg
mov
cmp
insl
xor
mov
mov
ljmp
xor
xchg
cmp
cmp
cli
test
pop
inc
icebp
aad
push
movsb
cmp
add
xchg
adc
inc
cmp
loop
mov
sarb
shl
fwait
push
test
jnp
and
fstpt
mov
xor
or
xor
add
sarl
dec
ret
sub
je
pop
out
cmp
sub
int
andl
mov
jmp
fimuls
push
out
std
mov
mov
dec
test
jae
addb
add
lea
fdiv
repz
add
xchg
pop
mov
sub
stos
jb
mov
outsl
inc
pavgw
jp
inc
jb
inc
rorb
jmp
dec
jno
shll
in
sub
xor
pop
xor
add
cmp
cli
jmp
xlat
repz
inc
push
mov
push
loopne
jle
lock
adc
fildll
jmp
cmp
mov
les
sub
fisubl
ss
imul
es
seta
lock
das
pop
mov
push
dec
jae
or
xor
loopne
and
cmp
push
daa
outsl
mov
mov
mov
sahf
test
hlt
xchg
pushf
sub
dec
daa
lcall
sub
cmovg
adc
inc
sbb
pop
scas
xor
sarl
fwait
xchg
inc
mov
cmp
jecxz
das
out
sarl
out
mov
addr16
dec
xchg
sub
mov
imul
int3
mov
bound
sub
gs
aas
subb
xchg
or
adc
loop
xor
mov
add
push
faddl
movsl
inc
xor
loop
mov
ret
repz
mov
mov
movsl
fstps
xchg
sar
arpl
cs
mov
xor
gs
mov
xor
js
or
or
mov
mov
push
fiadds
cmp
adc
lret
jb
flds
cmpsl
jo
in
push
mov
adc
les
aam
xchg
out
push
jmp
bound
icebp
call
jae
xchg
jnp
mov
aaa
pushf
cwtl
add
enter
sub
addb
mov
or
je
leave
sub
cmpsl
lret
jecxz
aaa
adc
inc
outsl
aaa
in
mov
cld
lret
mov
add
orb
and
cmc
shr
xchg
sbb
sbb
cwtl
out
add
pop
mov
dec
cs
mov
fucomp
ret
mov
jg
movl
repnz
dec
xchg
hlt
cli
int
fstp
aas
movsl
subl
cltd
mov
xchg
adc
mov
xor
mov
mov
cmp
xchg
mov
fs
push
xchg
xchg
insl
ds
mov
jp
adc
clc
add
cli
and
lds
cmp
imul
mov
cli
in
dec
xchg
adc
arpl
insl
xchg
or
add
add
and
mov
pusha
sub
aad
cmp
add
hlt
cmp
mov
lds
subl
jnp
outsb
push
test
jmp
sub
sbb
add
into
fistl
popa
push
and
test
lahf
das
leavew
sub
outsb
mov
ret
in
add
lock
fstp
cmp
imul
cmc
clc
jle
clc
in
or
sub
xchg
sub
sahf
outsb
sub
jle
mov
pusha
outsb
mov
in
nop
and
ljmp
ret
dec
cli
fnstsw
lods
jbe
int
xor
mov
jge
dec
inc
es
inc
mov
sbb
cmc
sub
jge
in
mov
cmpl
jg
adc
aaa
test
call
pushf
cmp
dec
sbb
jns
sbb
stos
push
jae
in
imul
mov
test
mov
adc
das
scas
icebp
inc
add
mov
jno
push
pusha
shlb
loope
push
or
shrb
cltd
fidivrl
je
scas
push
or
cmp
xchg
pop
jl,pt
mov
call
add
xchg
inc
jge
sbb
loope
mov
sbb
sahf
pop
cmp
push
cmpsl
and
gs
out
push
pop
push
nop
push
push
mov
cmp
call
test
in
inc
lret
out
push
pop
add
popf
icebp
mov
adc
je
mov
and
out
mov
scas
inc
push
mov
inc
jo
dec
and
popf
add
scas
sar
rclb
dec
mov
sbb
aaa
ss
es
mov
mov
and
fisubrs
ret
ret
push
fnstenv
xor
and
cs
inc
jle
mov
xchg
xchg
loop
push
jbe
xor
mov
sbb
rcr
int
xchg
jne
sarl
mov
adc
call
mov
loop
jecxz
push
arpl
mov
out
fs
hlt
roll
add
and
cmpsb
add
cmp
mov
sti
xor
push
out
pop
xchg
and
jmp
jge
pop
add
test
cmc
sti
and
inc
test
in
outsb
clc
lcall
add
pop
aaa
sbb
jg
in
fistpl
and
int
pop
lret
or
jge
push
xor
icebp
adc
xor
sub
inc
jmp
mov
sahf
insl
xlat
getsec
pop
test
mov
push
push
rolb
push
icebp
fwait
outsb
or
sbb
sbb
mov
out
gs
adc
es
adc
hlt
mov
push
fnstsw
out
nop
lods
add
sub
dec
std
scas
stos
dec
mov
fisubrl
pop
pop
mov
xchg
je
dec
and
pop
cld
sahf
jbe
add
inc
lods
out
add
imul
jp
sahf
pop
imul
mov
bound
cltd
mov
sub
inc
rcrb
dec
xchg
fwait
pop
mov
pop
pop
push
adc
or
or
sbb
inc
pop
fcoms
sarb
push
xor
stos
loopne
and
jnp
adc
dec
loop
pop
loop
fisttpll
mov
mov
mov
and
adc
stos
lret
inc
sbb
call
inc
and
cmp
outsb
sub
xor
lods
repz
test
mov
fsubl
mov
subl
push
in
and
jle
fildl
lret
lcall
pusha
xor
sbb
mov
dec
and
movsl
mov
popf
fcomps
std
xchg
enter
xchg
test
cltd
inc
in
cmc
mov
clc
and
pop
jp
test
pop
inc
popf
jmp
push
loopne
push
pushf
js
sbb
mov
sub
movl
sbb
sbb
rcrl
shr
mov
xor
rorb
adcb
mov
pop
xchg
repz
inc
xor
daa
in
stos
dec
xchg
hlt
ficompl
pshufw
ja
stos
jmp
inc
sbb
cltd
sbb
pop
mov
xchg
fiaddl
or
dec
rorb
iret
or
add
xchg
cmp
cmc
pop
js
stos
push
sti
cmp
and
stos
add
hlt
mov
adc
pusha
pop
test
gs
loope
jp
adc
aaa
xchg
pushf
je
loop
jno
jge
or
test
lahf
aas
mov
adc
xchg
add
add
xchg
mov
push
inc
cli
xor
pop
in
rolb
cmpsl
push
push
or
adc
dec
rcrl
loop
outsb
sub
cmpsl
push
pop
ja
clc
jb
add
or
xor
pop
jo
in
add
add
lods
and
inc
stos
aas
fwait
mov
sti
adc
ss
pop
adc
jnp
xchg
mov
cmp
push
cmp
shrl
jmp
stc
pop
pop
enter
testl
jl
mov
cmc
daa
es
punpckhdq
pusha
in
inc
pop
sbb
mov
mov
loop
ret
cmc
es
imul
xor
xlat
movsl
mov
push
cmp
cmp
cwtl
sbb
sbb
push
or
in
push
inc
in
jns
mov
ficompl
clc
stos
cmp
jge
sub
lahf
pop
add
xor
into
xchg
adcl
cmp
cmp
call
dec
and
mov
jno
push
jle
cmp
adc
popf
nop
xchg
push
add
int
aaa
inc
std
pmulhuw
int3
mov
call
jle
mov
cmp
outsb
aam
cmp
mov
outsb
mov
les
mov
bound
jecxz
sbb
fisubrs
sub
inc
mov
dec
xchg
orl
mov
das
jnp
jne
loop
hlt
sub
dec
inc
push
sbb
cmp
rorb
pop
jmp
cld
or
jno
jl
cltd
inc
data16
fcoms
shl
fadds
repz
pop
fldt
or
ss
add
fst
into
xor
inc
loopne
lds
xor
jg
popf
ljmp
mov
loop
jp
ret
jo
push
xchg
cli
in
test
jbe
aad
mov
fisubs
mov
int
aas
hlt
sub
mov
inc
mov
cmp
xor
mov
clc
jno
sub
into
ljmp
dec
lods
mov
add
sbb
out
lock
and
cli
test
pushl
dec
pusha
sahf
hlt
jmp
xchg
jbe
or
jg
in
lret
mov
push
lods
dec
outsl
sbb
loope
xor
jl
xor
and
rorl
jp
lods
loop
lcall
push
les
inc
aad
jle
jge
gs
int
mov
xchg
icebp
adc
mov
sub
movsb
mov
popa
push
inc
adc
sub
mov
push
mov
ja
fnstcw
pop
xchg
pop
mov
outsb
mov
lock
and
mov
cmp
sub
mov
andl
jp
cs
xchg
outsl
mov
stos
outsb
movsl
fidivrl
mov
movsl
xor
pop
adc
movsl
inc
iret
in
mov
xlat
xchg
mov
inc
loope
bound
xor
test
aam
punpcklbw
sbb
inc
xor
repz
fs
cmc
adc
jl
adc
pop
mov
out
out
xor
out
popl
mov
xchg
cmp
mov
data16
stos
inc
lret
jnp
pusha
sub
lea
inc
jecxz
clc
jnp
pop
pop
idivb
xchg
xor
loope
nop
xor
and
xchg
arpl
mov
inc
inc
out
stos
shlb
in
xlat
call
ljmp
es
sbb
out
mov
sub
inc
mov
mov
xor
pop
std
jns
ja
dec
int
incb
out
fisubl
inc
sub
and
data16
inc
push
imul
push
adc
movsb
ficoml
lock
lahf
ret
mov
je
adc
adcb
and
adc
ret
in
sbb
jns
mov
aaa
mov
xor
mov
iret
jnp
pop
mov
loope
mov
mov
mov
data16
data16
ss
push
mov
and
xchg
addl
xlat
xchg
cmp
xchg
loope
out
mov
shrl
notb
mov
xchg
pop
mov
pop
xchg
xchg
inc
push
and
fcoml
cmp
push
inc
pop
lods
shrl
das
cmp
outsb
lods
scas
outsl
add
mov
cmp
mov
les
outsl
mov
lcall
sub
cmpsb
iret
lret
cmp
shrb
inc
lods
mov
add
and
push
pop
cmp
imul
pop
int
out
xchg
xor
fsubrp
xchg
data16
lods
jge
sub
cmp
rcl
mov
cmpsb
stos
mov
in
add
in
mov
pusha
and
push
dec
inc
adc
loop
mov
push
shll
aas
lds
enter
testl
pop
mov
movsl
roll
ljmp
jo
aaa
push
xchg
loop
int
or
adcb
sub
movsb
mov
or
call
jp
lret
or
fcoml
aaa
and
lock
imul
mov
jbe
mov
movsl
xor
sahf
loope
nop
or
out
ss
mov
cmp
mov
out
ret
sub
sahf
imul
jb
xor
adc
sub
jne
inc
jo
stos
cld
fisubrs
and
xor
push
jns
mov
fdivr
aaa
fs
ja
mov
lret
inc
pop
or
push
inc
or
cld
and
push
add
xchg
xor
insl
out
mov
and
fld
cli
scas
fs
mov
subl
int3
and
popf
push
gs
std
fs
mov
mov
iret
push
dec
mov
adc
sbb
ror
fcoms
sbb
sbb
jge
rcrl
xor
cmpsb
mov
mov
sbb
jmp
jo
dec
jg
mov
es
or
xchg
fistl
iret
xchg
test
outsb
mov
push
pop
xchg
inc
or
cld
pop
dec
mov
lcall
imul
cld
xchg
jp
test
dec
xchg
test
xor
mov
lret
sbb
arpl
sahf
aaa
inc
movsb
xchg
mov
std
jnp
sub
das
sbb
xchg
in
mov
xlat
jne
inc
inc
test
mov
jle
int
sahf
adc
cs
inc
inc
add
int
xchg
mov
fidivrl
orl
and
push
stos
je
xchg
dec
in
lcall
adc
popf
test
int
loope
test
xor
scas
lods
aad
inc
fbstp
jne,pt
jb
or
sub
imul
loop
fisubs
incb
scas
or
sub
rol
test
xchg
lea
xor
gs
cmpb
inc
pop
jno
scas
lahf
push
clc
dec
xor
mov
arpl
aad
sub
push
jl
fildll
pushf
repz
leave
lcall
test
enter
mov
mov
push
popf
rcrl
xchg
jne
add
inc
sub
popa
mov
and
pop
sub
push
out
addr16
push
xor
aaa
push
insb
in
sub
mov
sbb
push
mov
xchg
sbb
je
xchg
out
mov
sub
lcall
aad
sub
jmp
popf
mov
mov
adc
and
inc
adc
pop
jne
icebp
rcrl
lret
fmul
mov
pop
fstp
pop
icebp
bound
insb
decb
test
fldl
fs
stos
shll
call
and
scas
scas
xchg
push
xchg
out
pop
pop
lret
loope
pop
rol
cli
xchg
popa
add
push
js
add
sub
popa
fsubl
dec
pop
add
iret
mov
sub
popf
mov
int3
xchg
push
test
xor
xor
repz
jb
sub
enter
test
push
js
shrb
dec
mov
js
fwait
xchg
into
inc
insb
mov
cli
in
sbb
rolb
push
mov
dec
imulb
pushf
leave
test
repnz
mov
push
push
pop
cmpsl
pop
shr
into
popf
xchg
lea
lock
adc
cwtl
cltd
cmp
in
and
adc
xchg
mov
push
adc
mov
das
subl
mov
shll
mov
mov
cmp
shll
mov
inc
mov
pop
cmp
inc
insl
push
push
pop
cld
dec
loopne
jns
clc
mov
mov
push
xchg
mov
dec
jle
flds
xchg
mov
int3
movsb
sub
sub
inc
aad
inc
and
mov
pushf
lock
in
mov
mov
push
push
insl
pop
mov
mov
sbbl
sarl
jge
pop
xchg
fisubrl
invd
xchg
sbb
jp,pn
cli
out
addr16
loopne
xchg
sbb
scas
stos
movsb
imul
dec
call
mov
mov
loop
ljmp
jno
loope
ljmp
out
push
lahf
push
adc
dec
shlb
lods
aad
add
repnz
mov
icebp
xchg
arpl
arpl
int3
repnz
lcall
sub
push
adc
ffree
pop
lea
leave
mov
cmp
cmp
daa
adc
pushf
or
nop
in
sbb
sbb
push
loope
mov
nop
sbb
mov
imul
xchg
out
xchg
lea
arpl
inc
adc
jb
and
add
mov
cwtl
sbb
mov
orl
jp
cwtl
push
loopne
xchg
add
jle
xor
or
add
push
add
jge
lock
adc
xor
hlt
iret
jns
xchg
lds
or
in
or
ficoms
lret
push
mov
cmp
cwtl
movsl
out
inc
mov
bound
ficoms
push
cs
std
and
push
push
aas
rolb
jmp
mov
leave
ja
and
pop
xor
movsb
pushf
xor
add
cld
fcoms
pop
add
push
cs
cmc
icebp
fldl
call
push
out
mov
roll
push
gs
mov
outsl
cmp
xor
xor
ret
fdivrp
dec
rorb
and
lods
shlb
sbb
iret
lahf
push
mov
jmp
pop
test
pop
int
or
ss
in
mov
sahf
andb
call
dec
or
push
sbb
push
push
clc
lret
pop
xor
sbb
pop
hlt
insb
out
popf
test
mov
shll
sub
dec
adc
pop
adc
aam
dec
cmp
dec
mov
and
or
mov
aaa
je
mov
cwtl
push
xor
pop
add
mov
cmp
loop
adc
adc
sbb
out
pop
push
std
dec
dec
in
testl
dec
mov
sub
sub
mov
add
in
and
aaa
mov
leave
mov
xchg
cmp
push
lcall
push
movsb
push
insb
dec
ret
adc
adc
repnz
jne
xor
cmp
lret
mov
cmp
into
or
cvttps2pi
jp
mov
and
push
ret
dec
js
lods
loopne
inc
pushf
fimuls
push
cmpsl
cmpsl
ljmp
cld
sbb
fldt
stos
fs
cmp
sbb
rcl
ret
and
mov
imul
and
data16
mov
jg
pusha
xchg
rolb
rcr
outsl
mov
adc
stos
andnps
std
push
jae
iret
and
es
push
pop
mov
mov
cmp
fimuls
push
mov
in
jns
xchg
push
mov
jmp
cmpsb
add
inc
mov
jg
or
cmc
mov
inc
jle
ss
push
cli
xchg
outsb
sahf
sti
mov
in
push
inc
jns
sbb
es
xor
mov
pop
dec
dec
cltd
ret
lret
xlat
sbb
out
stos
sahf
cwtl
and
mov
dec
repz
shl
arpl
mov
aaa
fdivs
test
add
add
outsl
addb
or
dec
or
cmovno
outsb
gs
xchg
leave
pop
lds
pop
ljmp
push
sub
and
jb
push
mov
imul
mov
xchg
leave
ja
fmull
faddp
or
dec
test
pop
pop
out
jl
scas
and
std
adc
sbb
mov
pop
inc
push
inc
std
add
mov
addr16
jb
inc
fadds
data16
fstpt
mov
push
roll
das
insb
inc
jbe
dec
mov
cmp
je,pt
call
lret
ljmp
stc
push
imul
ds
mov
xchg
rorl
sub
pop
arpl
jle
mov
cmp
mov
jbe
dec
das
sub
xchg
cld
je
ret
dec
rcr
mov
mov
cmp
pop
jl
popa
jb
mov
jmp
jge
mov
push
push
fs
cmpsb
cltd
cmp
pop
xor
cmp
iret
call
aas
jecxz
pusha
ret
xchg
sub
outsl
lea
imul
stos
neg
addr16
xor
dec
aam
add
and
xchg
loop
clc
push
sbb
cmp
inc
neg
push
fcom
inc
cmp
in
push
leave
push
cltd
ja
mov
jnp
ret
jb
leave
test
jecxz
inc
xchg
sbb
adc
push
fimuls
mov
sub
ljmp
lods
icebp
jns
inc
xor
jo
pop
mov
xchg
cmpsl
mov
call
cmpsl
cmpsb
fdivl
cmc
roll
xor
cmpsl
in
pop
stc
scas
lock
mov
inc
pop
dec
mov
and
icebp
or
jbe
insb
add
push
xchg
mov
jbe
int3
in
sbb
nop
mov
cmpsb
lcall
ss
dec
subb
test
imul
movsb
mov
sub
adc
testl
fs
adc
sbb
or
add
pop
inc
adc
in
shrl
fdivr
xor
test
mov
xor
loope
jnp
repnz
cmp
adc
dec
into
test
fidivrs
bound
in
jns
les
in
push
lea
sbb
jno
incl
leave
mov
xchg
mov
cmp
lret
pop
sub
imul
xor
or
and
sbb
je
sub
mov
jne
xchg
or
cmp
sbbb
daa
mov
push
push
cmp
push
xchg
movsl
mov
adc
mov
or
mov
fs
popa
adc
jbe
sbb
into
das
rolb
pop
aaa
fnstenv
cmpsl
mov
mov
xor
std
mov
and
into
andb
cmp
and
sub
in
fs
div
fidivrs
arpl
jne
jne
in
sub
lret
xchg
pop
sbb
adc
fisttps
rcrb
mov
pop
sub
and
aad
xchg
decl
inc
mov
jge
xor
xchg
fwait
pop
repz
or
testb
lods
cmp
decb
out
inc
add
push
mov
jmp
js
push
xor
push
fimuls
xchg
add
sahf
pop
add
fbstp
fnsave
cld
les
in
push
fs
nop
jl
lds
push
or
lret
inc
add
adc
pop
inc
sub
js
jg
jnp
fbstp
cmp
mov
icebp
pop
xchg
sarb
and
push
int
fdivl
shll
aaa
icebp
jns
es
xchg
mov
mov
insb
imul
sub
mov
dec
xlat
imull
cwtl
cmpsl
loop
std
mov
jecxz
cmp
jno
push
data16
pop
int
lods
jne
cmp
mov
xlat
push
shl
xchg
lods
jmp
jmp
loope
push
jg
and
popf
mov
in
xchg
cmp
push
or
jns
in
inc
xor
inc
stos
rclb
dec
add
imul
push
jae
push
dec
iret
imul
sarb
ja
imul
cwtl
repnz
fidivrs
sahf
sahf
xor
sub
mov
lcall
mov
add
mov
rorb
pop
fabs
data16
lcallw
sub
aad
pop
cmp
sbb
lret
pop
in
cli
lahf
adc
lods
cmp
lahf
iret
xor
add
ret
add
lods
pop
aam
xorl
sbb
outsl
xchg
lods
imul
mov
xor
outsb
mov
add
or
fcomps
cmp
cmc
aaa
mov
mov
jmp
repz
xchg
pop
jge
mov
cmc
push
arpl
add
or
jmp
sub
das
outsl
cltd
push
hlt
jae
out
shlb
sub
mov
loopne
cmpsb
sub
or
andl
loope
inc
cmc
jp
push
pop
movsl
leave
movsl
out
sub
stc
jns
lcall
sbb
addl
icebp
adc
or
and
dec
push
outsb
xchg
shlb
int
add
mov
insl
dec
and
in
sbb
lret
test
ss
jl
icebp
fidivl
pusha
mov
inc
jnp
lods
adc
pushf
fidivrl
or
adc
loopne
test
lret
data16
cmp
sbb
xor
mov
jg
andb
mov
inc
mov
fnstenv
or
jge
test
popf
and
scas
sbb
fisubs
jecxz
mov
jmp
imul
mov
cwtl
lock
or
arpl
add
mov
imul
jo
das
jnp
aam
dec
paddd
mov
and
int
fldl
and
mov
addb
data16
mov
pop
jbe
xchg
xchg
js
mov
arpl
ret
jge
xor
ds
es
dec
aas
ss
outsb
mov
xchg
cmpsl
or
movsb
mov
les
add
xor
int
jge
loopne
aas
arpl
jo
cltd
popf
iret
roll
push
jno
jp
bound
test
push
or
add
sbb
in
ljmp
fidivs
pop
pop
in
je
or
in
xchg
mov
jo
mov
lcall
pop
cwtl
lret
push
orl
into
push
xor
std
pop
shlb
pop
jae
sbb
or
jo
shlb
push
xor
sti
pusha
adc
xor
aas
xchg
out
jb
pop
push
loop
mov
ret
daa
xlat
fnstsw
lea
inc
jmp
fwait
outsl
mov
pop
rolb
dec
push
lock
movsb
xor
adc
scas
repz
int3
idiv
insb
jbe
fstps
scas
jb
xchg
imul
cld
pushf
fwait
jg
movsb
mov
hlt
xchg
orb
sub
push
jge
ds
popa
ja
jne
mov
pop
inc
mov
sub
dec
cwtl
dec
push
sub
add
lds
test
dec
xchg
cltd
dec
sub
mov
faddp
sarl
mov
ljmp
out
inc
pop
cmp
repz
push
test
data16
divb
test
pop
xor
or
and
xchg
lret
adc
jbe
lods
mov
fs
enter
js
push
ffreep
mov
pop
in
aas
jae
or
in
add
adc
mov
lcall
and
mov
ja
xor
rorl
out
dec
and
cmp
mov
fidivs
ret
inc
repnz
pop
shr
xchg
insb
xchg
rorl
shl
jmp
lret
aas
push
xchg
dec
push
lods
and
mov
or
jno
push
shll
pop
sbb
add
cmpsl
xchg
xchg
or
faddp
loop
mov
shrl
fs
pop
cmpsl
adc
adc
ja
cmp
add
pop
lea
test
popa
xchg
es
loop
mov
xchg
fs
fisubrs
push
lret
les
push
stos
cltd
nop
cmp
fnop
push
push
roll
lock
in
mov
inc
cli
jns
dec
fdivl
push
sti
jecxz
dec
mov
or
cmp
mov
sbb
lahf
jo
inc
stc
inc
xchg
xor
inc
push
ret
or
push
test
jne
mov
test
or
jmp
aaa
mov
mov
and
adc
pushf
popf
cmp
mov
add
sub
jb
inc
xor
push
mov
xchg
sbb
add
popf
dec
test
stc
xor
fxch
and
mov
cmp
mov
push
push
xchg
push
das
and
sub
dec
dec
sarb
jae
mov
mov
mov
add
mov
sbb
sub
in
mov
cmp
imul
sub
fs
movsl
jo
cmp
leave
pop
lret
push
sub
mov
out
xchg
sub
fisubl
sub
mov
insl
push
sbb
jo
lret
fs
imul
nop
jno
out
cmp
mov
imul
jne
aaa
mov
ljmp
dec
cmp
out
jp
xchg
fisubrs
lahf
jp
pop
repz
fsubr
or
popa
fcmovnbe
into
lods
int
arpl
lods
and
js
cli
push
mov
xorb
add
mov
cmp
inc
icebp
fistpl
pop
mov
xchg
jb
cmp
cmp
mov
mov
push
pop
adc
iret
bound
daa
pop
movsb
sub
lods
jp
xor
add
mov
and
push
test
inc
mov
ret
test
and
lret
lret
jns
sub
sub
out
mov
shrl
pop
into
push
inc
pop
lds
lods
mov
push
adc
pop
loopne
jle
lahf
in
mov
fxam
jmp
adc
jno
inc
push
pop
mov
iret
sbb
cli
sub
sbb
or
test
pop
fwait
xor
arpl
push
mov
xchg
outsl
ret
inc
mov
sub
rcll
sub
or
sarb
cmp
inc
adc
pop
inc
push
or
sbb
fbld
pop
test
jl
out
incl
rcrb
xchg
int3
adc
cmpsb
shll
out
sub
cwtl
enter
xchg
mov
xor
xchg
xchg
in
dec
adc
inc
or
xor
or
mov
pop
lcall
jns
adc
cmp
pop
in
sub
push
xor
mov
sbb
call
jle
dec
mov
mov
ds
stos
sub
addl
mov
dec
pop
xor
push
pop
ret
sbb
jo
xchg
fsts
pop
popa
sbb
ljmp
fisttpl
xchg
scas
mov
arpl
test
mov
cmp
rcl
and
cmpsl
loopne
nop
adc
push
dec
inc
lock
fwait
push
lahf
pop
adc
scas
arpl
sbb
les
daa
aad
xchg
bswap
xchg
fisubrl
mov
fidivl
cwtl
stos
or
hlt
imul
repnz
enter
out
mov
mov
pop
xchg
sub
sar
inc
int
arpl
mov
push
rorb
call
in
mov
lock
loopne
pop
add
imul
hlt
xor
mov
dec
sub
lods
and
inc
and
cmc
mov
inc
push
mov
dec
cmpsl
xor
jecxz
push
aad
mov
sbb
xor
push
add
cwtl
imul
adc
fmull
addr16
fsubrl
lahf
jo
and
add
xchg
adc
test
fs
jp
mov
dec
or
jbe
jge
dec
jns
mov
lcall
fldcw
in
mov
cmp
sub
call
jno
push
daa
les
lcall
je
mov
insl
xchg
or
and
ss
decb
fnsave
test
pop
and
call
out
imul
mov
mov
add
mov
bsr
out
pop
out
push
inc
in
jbe
mov
in
dec
adc
pop
mov
adc
add
cmp
push
mov
pop
pop
ss
icebp
jnp
gs
jbe
jl
mov
outsb
sahf
int3
int3
add
cmp
dec
pop
jns
jo
mov
sub
mov
and
jle
movsb
or
xchg
out
add
inc
popa
cmpsl
push
jecxz
ja
xor
mov
push
movsl
divl
mov
adc
and
jns
js
inc
sub
and
outsl
xor
jmp
negb
pushl
xor
jp
je
inc
push
adc
mov
dec
scas
rep
sbb
test
test
int
dec
daa
jb
imul
xchg
in
mov
and
outsb
jb
pop
jb
jb
and
mov
jae
dec
mov
cmp
adc
arpl
repnz
add
mov
ret
mov
cli
xchg
pop
sbbl
add
xchg
push
xor
sbb
xlat
ja
mov
or
js
popa
add
cmp
push
lods
into
sbb
dec
mov
out
inc
repnz
imul
outsl
xchg
rcll
test
and
jmp
add
stos
pop
jb
inc
jg
jle
stc
in
mov
and
mov
sub
and
sbb
jns
inc
sub
movsb
or
aaa
push
jae
ljmp
fistpl
mov
aas
cmpsb
cmp
cmpsb
adc
push
dec
sahf
mov
jnp
push
in
dec
pop
cmpsb
cld
mov
imul
push
outsb
add
fucomp
js
cli
push
or
xchg
call
and
ljmp
jns
mov
scas
fildl
call
fsubrl
into
sbb
gs
out
cmc
xchg
mov
mov
cmpsb
mov
in
or
adc
in
stc
mov
jae
push
adc
or
add
mov
test
arpl
push
aad
or
or
arpl
popf
xor
jae
jle
pop
fisubl
cwtl
test
int3
das
push
and
and
add
daa
jb
movsl
dec
sbbl
popl
out
inc
mov
fidivrl
jle
mov
mov
inc
add
das
incb
pop
ror
std
xchg
popf
fnsetpm(287
xor
push
sub
cmp
jle
aaa
cmp
mov
sbb
jp
xchg
dec
scas
cmp
or
in
shr
jmp
pop
pop
push
cmp
jno
xchg
cltd
imull
out
cmpsl
in
and
imul
into
mov
sbb
out
mov
pop
in
adc
xor
xchg
mov
popa
fdivrl
sar
push
pop
jne
cmp
pushf
push
scas
lods
jbe
push
mov
fistpl
or
pop
das
or
aas
pop
xchg
loopne
test
dec
xor
push
stos
out
shrb
inc
sub
pop
mov
mov
mov
push
sub
fstl
cmp
add
cli
or
in
popa
fs
movsl
outsb
ds
cmp
cmp
aad
fldenv
mov
push
scas
mov
bound
sub
cwtl
mov
test
push
nop
cmpsl
or
or
pop
jae
cmp
xor
push
jae
push
cmpsb
sbb
jnp
pop
and
pop
or
fidivs
push
mov
jno
inc
xchg
jno
cmpsb
adc
xor
xchg
ds
jae
out
outsb
ljmp
push
cltd
ret
ja
mov
fnstcw
out
mov
jmp
and
mov
aas
push
cmp
push
sti
div
add
xor
mov
sbb
dec
sbb
mov
pop
adc
popa
pop
jg
clc
add
cmpsb
or
popf
sub
mov
fsub
or
test
mov
sub
out
jno
mov
insb
in
cmp
and
es
outsb
xchg
fistpll
imul
xchg
pop
lea
xchg
pop
repz
and
into
out
mov
sti
out
ljmp
push
xlat
push
sbb
adc
cld
cli
inc
push
mov
andb
jle
sbb
and
lods
add
jmp
mov
sbb
call
jne
fwait
sbbl
arpl
pop
nop
dec
sub
gs
repz
or
fadd
int3
sbb
stc
pop
sub
mov
push
pop
jb
cmpl
dec
in
fidivs
movsl
icebp
ss
cmp
lock
mulb
mov
dec
and
sahf
sub
push
cmpsl
fimuls
sbb
mov
rcrl
cwtl
in
wrmsr
pop
popa
xor
mov
loop
jne
push
dec
push
inc
repnz
sub
sbb
push
scas
lcall
xor
fnstcw
ret
cld
push
mov
sub
mov
xchg
lea
push
loop
push
jnp
add
iret
int
inc
insb
test
mov
pop
mov
lock
inc
jae
inc
pop
repnz
add
and
cmpsb
aad
jno
cli
inc
or
inc
iret
scas
rorl
fstpt
adc
sarl
scas
mov
push
sbb
insl
scas
pop
sub
or
xlat
mov
lods
js
cmp
aas
xchg
enter
cs
xor
data16
fisubrs
pop
xchg
xchg
inc
mov
lods
inc
inc
fistps
ret
fistpll
mulb
test
and
mov
xchg
pop
pop
lds
das
sbb
fsub
push
sub
jns
or
xorl
push
jle
add
inc
fcmovnb
lret
mov
popf
xor
outsb
lahf
dec
dec
mov
xor
rorb
xchg
push
xor
jnp
insb
pop
lea
stos
adc
mov
cmc
mov
pushf
mov
sub
mov
ret
test
sbb
rcr
lret
sub
stos
cmpsl
neg
xchg
or
js
mov
adc
dec
jle
jns
sub
icebp
or
jo
mov
les
sub
mov
imul
jge
gs
out
ficoml
jae
pop
das
lahf
xor
scas
jae
push
dec
pop
sbbb
rorl
xor
inc
xchg
xchg
lock
inc
xor
push
call
jne
inc
cmpsb
mov
inc
rcl
add
loop
fnstcw
sub
subb
cmc
jle
and
dec
mov
lahf
movsb
scas
int3
push
and
jg
call
push
call
mov
adc
pop
jnp
iret
jg
sahf
cmpsl
test
push
or
aas
es
mov
fisubrl
mov
dec
mov
out
pop
sahf
xchg
pop
mov
fldenv
xchg
pusha
mov
push
pop
inc
or
mov
andb
adc
je
sbb
push
mov
fsub
xor
push
sahf
mov
inc
les
sti
cmp
loop
lahf
mov
jge
mov
rcll
scas
cmp
lret
xor
xchg
jae
lea
incl
inc
add
dec
jg
jmp
xor
cwtl
xor
add
add
jae
test
cmpsl
test
xchg
leave
jne
mov
xchg
cmp
mov
rclb
xchg
lock
mov
std
sbb
xor
mov
ficoms
cld
mov
stos
mov
add
das
or
dec
cmc
add
addl
in
je
pusha
outsb
adc
stos
mov
xor
cmc
out
sti
shlb
je
jp
test
sbb
or
jne
mov
push
push
daa
hlt
xlat
sub
mov
sbbl
lods
adc
xchg
or
adc
lret
leave
arpl
dec
lods
js
dec
hlt
lcall
adc
jae
add
in
inc
daa
mov
pop
int3
test
ja
xchg
aaa
push
adc
mov
hlt
ds
ret
push
js
and
push
jmp
and
jg
or
shlb
adc
mov
popf
js
sti
mov
xchg
std
push
outsb
out
sub
jns
out
jge
sub
lahf
enter
filds
push
push
sbb
pop
ret
out
scas
fcomps
push
loop
and
test
out
adc
mov
cmp
inc
cmpsl
stos
js
sti
inc
cmp
lret
mov
sbb
out
iret
mov
loop
test
lea
pop
test
aas
push
lret
jg
mull
push
adc
mov
sahf
insb
mov
and
pusha
inc
arpl
jbe
push
leave
push
jne
pop
out
cmp
inc
sbb
push
push
xchg
xchg
pop
jnp
and
shll
dec
lods
jecxz
push
mov
sbb
aam
xor
mov
fs
inc
add
sub
sub
mov
adc
mov
stos
ljmp
pop
pusha
sbb
out
lock
xor
cmp
adc
adc
cmp
or
mov
lock
fadd
add
mov
adc
repnz
fs
jbe
push
mov
sti
xchg
sbb
lock
add
daa
mov
mov
test
dec
mov
or
sub
pop
cld
stos
or
mov
mov
jo
jne
mov
cld
xchg
mov
imul
push
adc
push
mov
test
loope
pushf
xor
jno
or
inc
xor
cmpsl
and
jmp
shll
loop
jbe
test
hlt
cmp
inc
cmp
pop
pop
sub
or
fs
and
jae
xor
inc
cmp
scas
push
test
in
dec
pop
lret
lcall
fidivrl
mov
mov
mov
arpl
gs
rcrb
jge
fs
push
clc
popa
xor
push
cmp
xor
scas
jmp
xchg
push
xlat
xor
cwtl
les
mov
xchg
dec
cmpsb
sub
ss
or
aam
repnz
leave
xor
leave
push
add
loope
pusha
xchg
popa
shl
mov
rcrl
cltd
adc
ret
cmp
ja
jbe
jo
shrb
popa
xchg
and
fldt
add
xchg
or
mov
pusha
mulb
jb
jecxz
lds
xor
xchg
mov
xchg
xor
adc
cmp
repnz
mov
std
cmpsl
loopne
std
gs
mov
sarl
mov
sbb
inc
pop
lods
adc
hlt
jne
fwait
push
inc
test
fwait
test
stc
popa
xor
ja
out
js
push
adc
les
test
rcr
mov
es
xlat
mov
cmp
inc
jae
cmp
pop
dec
add
cmp
mov
sub
aam
mov
sbb
dec
fs
inc
jge
fwait
mov
incl
or
dec
mov
fcmovu
int3
jne
push
or
jnp
popa
or
mov
add
or
and
mov
xor
xchg
sub
scas
ret
icebp
or
jne
xchg
push
jo
inc
fdivl
push
mov
cmpsl
mov
cld
push
add
les
scas
mov
sub
sub
dec
push
xchg
mov
push
lods
push
aaa
daa
xor
mov
and
or
push
std
xor
jg
arpl
mov
jg
fsub
mov
mov
xchg
mov
out
cmp
andb
mov
mov
fcmovbe
sub
push
sub
push
pusha
popa
pop
int
bound
and
cmc
sbb
daa
pop
pop
and
inc
mov
cmp
testl
dec
es
mov
push
inc
js
repnz
push
cmp
lcall
icebp
mov
hlt
sub
out
in
dec
dec
dec
or
imul
out
cmp
add
arpl
jae
outsl
daa
xor
aam
in
sbb
mov
loop
mov
xchg
fldenv
arpl
mov
pushf
adc
arpl
aad
sub
shrb
push
fsts
pop
xchg
sub
movsl
push
cmp
dec
xchg
jp
mov
stos
cwtl
push
add
mov
inc
insl
rcr
and
pop
jge
add
mov
test
in
lret
arpl
dec
call
fisubrl
repnz
out
cli
mov
test
shlb
loope
into
std
mov
mov
andnps
pop
add
test
ficompl
jne
or
push
popa
dec
inc
push
jnp
es
mov
adc
cmp
lods
mov
adc
repz
fstpl
jo
pop
test
sahf
std
add
movsb
adc
add
inc
sbb
push
test
mov
sub
sbb
dec
popf
jne
push
jbe
mov
std
push
adc
sbb
pushf
sbb
inc
ret
sar
dec
hlt
shlb
rorl
in
insl
cmp
iret
add
js
jl
mov
lods
popa
xchg
xchg
dec
fnstcw
mov
in
inc
jecxz
outsl
inc
dec
push
mov
mov
icebp
jne
xchg
push
std
imul
and
cmpsb
xchg
sbb
dec
gs
xor
and
mov
pusha
xlat
push
imul
lods
sub
call
packuswb
xchg
jl
addr16
fsts
push
lds
loop
mov
push
leave
fwait
or
jo
rol
push
les
rcrl
sub
adc
jb
call
cltd
js
pop
push
sarb
xchg
mov
out
mov
xchg
mov
dec
and
sbb
push
jg
jae
mov
jle
and
pop
sub
call
shrb
cmp
rcrl
xor
push
adc
and
cmp
dec
mov
lahf
fwait
cltd
fldenv
cmp
rorb
or
sahf
inc
mov
push
gs
ret
jg
daa
mov
imul
cmc
ret
mov
mov
or
or
int
out
push
pushf
dec
pushf
inc
mov
adc
sub
clc
fisttps
mov
lock
test
mov
cmpsb
ss
xor
jle
daa
pop
js
mov
movsl
call
jne
jae
lea
out
fcomps
cmp
mov
lods
outsb
pushf
push
loop
jns
add
lret
add
clc
mov
test
cltd
xor
add
ror
fucomip
mov
mov
mov
add
sub
aaa
insb
adc
mov
out
arpl
add
add
jns
scas
ret
das
push
mov
inc
imul
push
xor
cld
pop
sbb
and
xorl
scas
inc
scas
stc
sbb
lcall
les
jl
lock
push
vunpckhpd
mov
adc
adc
jb
sub
bound
sub
rdpmc
fildl
mov
xor
or
fimull
sti
or
jmp
or
mov
inc
out
push
xchg
push
or
int3
in
test
scas
sti
or
push
adc
mov
into
add
mov
xor
insl
std
jbe
cmp
pop
rorl
xlat
stos
mov
push
lcall
push
xchg
xchg
scas
imul
sub
sub
fstl
pop
adc
and
int
pop
icebp
xchg
cmpsb
push
push
aas
andb
pminsw
mov
cmp
insb
or
lock
mov
push
mov
clc
das
sub
adc
icebp
or
leave
push
mov
jle
inc
sub
pop
es
fstl
mov
ja
sbb
aam
mov
mov
push
cmpsb
inc
mov
xlat
sahf
leave
xor
and
fistl
incl
and
inc
dec
mov
sbb
fstpt
adc
ljmp
pop
cmc
mov
repz
add
dec
notl
enter
das
push
inc
sbb
divb
sub
adc
jbe
iret
test
jecxz
add
sbb
aas
jae
and
cmp
sub
and
xor
xor
scas
xchg
add
mov
mov
add
cmpsb
cld
sub
aad
stc
leave
jle
dec
aaa
and
or
xor
dec
jp
shl
lcall
mov
neg
xor
push
adc
clc
sub
test
mov
nop
inc
xchg
xchg
es
lock
lock
enter
rorb
dec
push
sbb
sub
jne
in
pop
fldl
pop
mov
out
sbb
mov
push
add
popa
mov
loopne
stc
das
popf
add
movl
mov
xor
add
or
dec
stos
jl
ss
push
out
outsb
scas
fcoml
pop
mov
and
into
fnsave
daa
sub
pop
repnz
cli
push
cmpsb
or
add
and
out
sub
in
loop
push
mov
cli
adc
lret
sub
jmp
mov
and
jl
es
add
sbb
aad
xor
lcall
sub
aad
imul
xchg
mov
jmp
cmc
sbb
movsl
push
pop
stos
lahf
fidivrl
fs
loop
or
imul
cmpsl
inc
xor
add
ja
mov
popf
lea
andl
test
push
dec
cmp
bound
mov
ja
sbb
popa
push
jp
xor
ja
sti
add
stos
mov
scas
and
int
das
out
ret
fldl
xchg
xchg
add
in
xor
push
icebp
or
sub
lcall
imul
cmp
mov
adc
xchg
daa
sahf
push
jae
jb
add
push
dec
mov
hlt
shll
mov
mov
adc
ds
mov
das
scas
inc
rcr
mov
fs
cli
int3
stos
rcrb
push
xchg
xchg
sbb
cmp
lahf
mov
test
adcl
cmp
sbb
pop
pop
jge
xchg
hlt
sub
mov
enter
xchg
mov
mov
aas
pop
pusha
cld
sub
and
outsb
hlt
and
imul
lods
cmc
rcll
pusha
mov
or
aaa
jmp
mov
test
mov
imul
pusha
xorl
js
sbb
addb
push
sbb
push
in
fcomps
and
mov
mov
outsl
call
jle
rcrb
test
adc
movsl
mov
mov
fs
and
movsl
jbe
pop
out
pop
loope
dec
sti
and
sub
jp
sbb
icebp
leave
dec
adc
decb
enter
ror
imul
mov
xchg
cmp
fwait
mov
lcall
pushf
add
adc
testl
mov
dec
repnz
jno
stos
push
sbb
in
movsl
mov
divl
cmpsl
pop
jge
rolb
add
in
xchg
arpl
lods
data16
movb
icebp
pop
int3
and
test
arpl
divb
pop
rol
push
out
cli
lret
insb
xlat
je
xor
cmp
ja
int3
and
adc
dec
scas
mov
jl
jg
or
daa
jno
add
add
or
dec
dec
push
fsubl
or
cwtl
add
roll
pop
or
bound
pop
js
test
push
dec
aam
shrl
sub
addr16
jb
sub
push
lea
out
xchg
jmp
icebp
cltd
icebp
imul
clc
lret
xchg
xchg
inc
inc
sub
inc
inc
andps
or
insl
inc
adc
fcoms
adc
std
bound
push
fldl
mov
or
in
inc
sbb
ds
fcoml
ret
icebp
test
xorl
jl
inc
inc
das
mov
nop
outsb
inc
rolb
cmp
mov
mov
mov
sub
and
sub
sbb
jae
push
cli
leave
add
push
push
cmp
gs
sbb
movsb
into
js
lcall
push
xor
mov
call
and
push
fcomps
cld
inc
mov
addl
mov
pop
lea
xchg
testb
out
arpl
pop
vpmadcswd
mov
cmp
stc
test
ret
pop
xchg
push
add
in
lods
dec
jbe
mov
jl
add
xchg
or
xchg
mov
div
test
inc
cmp
pop
out
add
in
fldt
repz
ret
jb
cmp
rorb
push
sbb
add
pop
xor
mov
add
or
insl
fldl
test
fsts
fildl
fcmovu
adc
lret
cmc
pop
subb
sub
jbe
leave
sbb
adc
cs
sti
xchg
push
loopne
mov
push
imulb
repz
mov
jmp
pop
jo
push
jl
fldl2e
jmp
ljmp
jno
into
cltd
ret
jo
iret
mov
mov
lahf
jp
dec
or
stos
aaa
xchg
testl
jecxz
sti
inc
xor
mov
fcoms
or
jae
pop
push
mov
ljmp
aas
shll
mov
push
mov
cmpsl
sbb
fdivr
adc
push
movl
out
adc
movsb
aad
lret
mov
pop
push
divb
add
push
cmpb
dec
stos
jmp
mov
or
jno
sbb
mov
jge
sbb
fisttps
pop
inc
pop
negb
cmpsl
pushf
xor
imul
repnz
out
and
test
inc
rcr
aad
xchg
aaa
dec
dec
movsb
cs
jno
dec
mov
mov
mov
iret
mov
fwait
fwait
shrb
mov
add
movsb
in
push
cmp
jge
jecxz
inc
pop
jne
cmpsl
sbb
xor
loope
mov
dec
xchg
les
mov
fdivrp
je
mov
out
ret
rcll
daa
mov
dec
xor
js
fisubs
sbb
and
mov
out
jns
jg
subb
iret
ljmp
ds
test
loope
cmc
stos
mov
pop
int3
sahf
cld
adc
insl
lret
clc
jge
cmp
push
adc
stc
cltd
mov
sbb
mov
pop
pop
xor
mov
mov
push
movsb
mov
insb
sahf
push
lcall
lock
stc
fs
rcrb
je
xor
cmpsl
and
mov
mov
pop
xchg
mov
cwtl
incb
aaa
popa
sbb
sub
and
inc
int3
rcll
icebp
mov
mov
ds
or
test
rolb
xchg
lea
and
loop
and
xor
cmp
xchg
stc
or
out
adc
dec
mov
inc
mov
mov
scas
dec
push
sbb
push
cmc
pop
inc
cs
mov
xor
mov
sub
je
mov
sub
out
push
mov
lock
push
hlt
xor
loopne
sbb
in
movsl
mov
dec
mov
icebp
sahf
sub
sub
and
aam
insb
imulb
pop
enter
xchg
sti
cwtl
and
mov
cmpsb
lcall
ljmp
ret
inc
outsl
fistl
cwtl
and
cmp
ss
icebp
imul
ret
cmc
cmp
mov
xchg
xchg
jbe
adc
sub
and
jmp
pop
arpl
sub
iret
push
or
mulb
popf
insb
mov
sbb
leave
add
ret
out
test
pop
or
fistl
lods
mov
add
pop
xor
lock
and
add
imul
pop
pushf
out
int
fisttpll
push
fsubp
fsubrs
cli
data16
inc
sti
repz
rcll
dec
fidivs
popa
ror
cmpsl
dec
dec
fs
push
leave
and
dec
stos
fildll
push
cmpsl
fwait
sbb
xchg
std
jne
lods
dec
or
lcall
inc
loopne
loopne
into
xor
adc
das
loope
sub
ss
je
outsb
fiadds
pop
test
cmp
sub
arpl
xchg
sahf
sarb
imul
mov
popf
movb
mov
sbb
clc
lock
inc
imul
add
ret
sub
andb
test
lods
cmp
mov
push
cli
lret
arpl
adc
push
test
shrb
fnstcw
pop
mov
add
xchg
dec
add
cmp
icebp
mov
loope
loopne
out
sarb
aas
add
cmp
add
xchg
sbb
mov
lahf
popf
xchg
outsb
mov
xlat
jbe
xchg
test
pop
add
fwait
push
je
push
and
lods
cli
jge
mov
lds
add
xor
and
iretw
ljmp
adc
inc
jp
add
and
clc
fimull
sahf
push
ret
lcall
xorb
sub
and
mov
mov
dec
mov
jle
cmc
je
inc
jne
aas
push
int
pop
dec
fldpi
mov
das
jg
and
cmc
pop
adc
sbb
enter
adc
dec
and
push
dec
mov
test
sbb
lahf
pusha
xor
xchg
pop
sub
leave
lret
clc
push
lds
gs
hlt
xchg
fcoml
or
lea
lock
push
mov
addr16
pop
sbb
aaa
adc
fdivrl
xchg
movb
shr
dec
push
inc
filds
movsb
xchg
aam
stos
jo
add
imul
xor
clc
push
fimull
sbb
jbe
je
jb
aam
out
add
mov
add
lcall
jmp
cmp
cmc
fbld
int
dec
out
mov
jecxz
push
pop
sub
popf
int
mov
sbb
rcr
add
pop
push
insl
cld
and
in
sti
jge
in
push
stos
adc
lahf
in
jnp
mov
aas
mov
mov
dec
mov
push
inc
add
xchg
leave
aas
adc
cmp
sbb
or
xchg
les
mov
and
xchg
enter
sti
pop
movsb
imull
fimull
add
das
ret
push
dec
lods
lret
pop
fistl
cmp
hlt
icebp
push
inc
xor
and
add
xor
imul
push
ret
jg
loopne
rcr
popf
aad
testb
mov
add
lea
mov
insb
outsl
mov
xchg
jns
in
inc
fildl
mov
pop
popf
jmp
cmp
ljmp
jecxz
ja
pusha
fwait
sbb
sahf
dec
leave
stos
rcrl
pushf
dec
lods
mov
xchg
mov
rcl
stos
push
sub
sbb
loop
jo
jge
and
iret
mov
push
jno
lahf
mov
dec
xchg
pop
test
xor
popa
push
xchg
lods
add
test
push
out
mov
cmc
xor
push
out
inc
cs
push
rcrb
mov
cli
in
mov
jno
arpl
dec
fwait
insb
andb
or
fwait
repz
iret
rcll
in
jle
cwtl
xor
ret
in
stc
rol
fidivs
and
popf
jae
jp
xor
adc
sub
push
call
lds
in
sbbl
cmp
into
xor
addr16
jp
fcmovnbe
xchg
test
hlt
js
lret
mov
or
leave
push
inc
aad
xchg
ja
js
fiaddl
mov
inc
push
push
xchg
jmp
out
aam
jp
shll
xor
pop
pop
xor
stos
sbb
icebp
add
cmp
in
filds
xchg
mov
xchg
ja
sbb
lea
insb
shrl
loop
mov
idivb
sbbl
xor
mov
icebp
es
dec
jne
insl
sub
inc
push
inc
jno
xchg
xor
push
adc
sti
or
sbb
inc
nop
or
push
push
cwtl
or
cmc
jl
cmp
shrl
mov
adc
idivb
inc
add
dec
mov
aad
test
jecxz
insl
aad
cmpsl
enter
lock
into
xchg
cli
push
inc
push
aas
sbb
sbb
xlat
and
jle
push
roll
push
lock
add
popa
js
dec
jo
mov
popf
or
mov
test
push
inc
mov
test
clc
and
loopne
jne
std
pop
push
int
lret
test
sbb
push
xor
insb
mov
leave
inc
lret
shl
or
mov
or
cwtl
push
lds
test
add
dec
daa
jl
std
sahf
bound
outsb
pop
call
adc
jmp
arpl
xchg
jo
test
jmp
sub
hlt
nop
or
scas
ret
dec
icebp
stc
jl
cmp
sbb
push
mov
ss
add
fstps
or
pop
cmp
mov
xchg
shr
mov
push
xor
pop
cmp
cmpsb
imul
popa
mov
das
mov
pop
mov
pop
dec
mov
dec
imul
fisubrl
jle
adc
jno
dec
cmpsl
adc
mov
shr
int
sahf
dec
lret
mov
fcoms
jo
sub
rorb
stos
int
mov
push
insb
push
mov
jo
addr16
mull
into
jbe
mov
sub
pop
es
mov
out
mov
popa
push
jno
dec
rclb
push
loopne
cmp
leave
repnz
icebp
lcall
fsts
leave
and
push
arpl
sbb
ss
and
pusha
jmp
xor
les
lcall
and
sub
cltd
andb
ret
popl
push
testl
jno
imul
xchg
in
test
dec
adc
call
cli
adc
xchg
sbb
aam
aad
ror
call
mov
lds
push
popf
addl
add
mov
enter
or
xlat
sbb
fcomp
leave
loopne
add
ret
push
outsb
shr
inc
stc
mov
mov
decb
out
cld
jns
xchg
fistps
adc
xlat
stc
cmc
or
push
cmp
inc
adc
mov
popa
stos
dec
fildl
mov
faddl
std
and
lea
mov
push
inc
push
xchg
mov
push
ds
dec
push
and
or
xchg
mov
or
or
repz
stos
es
lret
subl
ret
sub
mov
aaa
insb
mov
push
inc
incb
sarb
mov
shll
aas
bswap
pusha
xchg
lcall
xchg
and
out
pushf
dec
mov
aam
lcall
jle
pop
ror
fidivrl
lods
pop
ss
inc
push
add
insl
lods
lds
pop
inc
mov
and
xor
push
cmpsb
or
shrl
mov
adc
dec
add
addb
aaa
pop
scas
subl
mov
imulb
filds
sub
jo
xor
in
addl
arpl
ljmp
xorl
xchg
sub
test
add
jne
sbb
js
adc
and
lock
stc
inc
std
int3
jl
pop
push
sti
push
ss
insl
int3
lods
jae
sbb
mov
mov
test
cmp
test
inc
mov
movsl
aam
lds
jne
xor
xchg
loop
aaa
xor
jno
pop
test
cmp
pop
lcall
loopne
mov
orb
cmp
enter
and
jne
jae
sub
jp
data16
sarb
mov
in
out
mov
aas
insl
mov
pop
pushf
pop
mov
fimuls
mov
pusha
inc
or
pushf
sub
sbb
mov
and
sti
fstp
cmpsb
adc
jp
aaa
and
mov
int3
sub
data16
in
in
fs
mov
push
lods
mov
dec
xchg
push
clc
sahf
enter
dec
pusha
push
xor
lret
push
int
push
sub
rorl
xor
je
jmp
jge
stc
repz
mov
js
outsl
xor
mov
dec
ds
mov
jl
or
jecxz
lods
add
xor
stos
jo
mov
xor
adc
ss
and
lret
movsb
imul
mov
ja
mov
dec
mov
xor
dec
cs
out
xor
rorb
outsl
pop
cmp
mov
sar
das
das
and
fimuls
movsb
fs
loop
clc
loop
mov
jb
xlat
ljmp
faddl
dec
icebp
aaa
ret
inc
fs
scas
xor
test
mov
xchg
fcoml
mov
idiv
shl
add
cld
jmp
and
pop
outsl
pop
js
push
repz
rolb
mov
pop
test
mov
xor
jecxz
addr16
aas
xchg
mov
or
movsb
mov
out
add
or
aam
and
push
mov
xchg
lds
xchg
pop
and
in
mov
mov
inc
roll
in
sub
mov
jmp
or
lods
mov
jl
pop
lret
jg
cmpsl
mov
or
lea
in
repnz
jecxz
mov
pusha
mov
aad
xchg
lret
xchg
fs
ss
shlb
jg
jae
mov
pushf
sbb
in
out
mov
aam
jne
pop
inc
cltd
cmp
jo
fisttps
sbb
mov
sbb
lock
icebp
ds
cwtl
xchg
icebp
stos
pop
push
mov
adc
addr16
pop
addr16
outsb
adc
leave
movsb
xor
lds
enter
mov
popa
fiaddl
adc
mov
dec
ret
rcrl
dec
pop
and
mov
adc
ret
lahf
stos
mov
add
jmp
aaa
adc
xor
movsb
out
xor
xchg
and
or
out
jg
pusha
jmp
aas
cld
pushf
cmp
xlat
fists
xchg
icebp
xchg
mov
cld
sbb
nop
dec
test
mov
sub
das
cmp
imul
test
push
mov
adc
test
push
cmp
or
mov
fwait
into
add
jg
outsl
jno
inc
das
jp
push
push
add
cmp
test
andl
xchg
jne
flds
cwtl
jne
jmp
pop
jbe
scas
fsubrs
push
test
mov
addl
dec
push
xor
pop
in
xchg
ret
or
arpl
add
scas
push
fistpll
mov
dec
pop
mov
sbb
mov
or
insl
pop
add
mov
sub
ficomps
mov
inc
dec
mov
xor
and
sbb
pop
shrb
cltd
movsl
and
cmpsb
sub
test
mov
adc
test
dec
jo
add
sub
outsb
data16
add
enter
jp
push
xchg
sub
in
loopne
mov
mov
sbb
jmp
pop
xchg
mov
repz
repz
and
mov
in
in
sub
xchg
adc
jb
mov
in
inc
stc
cmp
jb
cmp
lds
push
push
idivl
arpl
stc
dec
push
jle
sbb
popf
or
push
out
pop
cs
lds
push
out
jnp
scas
cwtl
into
imul
testl
sbb
cmp
cltd
adc
add
and
xor
cld
clc
add
stos
jecxz
dec
in
idivl
nop
test
loopne
aad
sbb
push
int3
mov
jecxz
enter
in
jno
out
cmpsb
mov
cli
add
or
mov
xor
mov
jmp
lahf
sbb
cmp
mov
iret
popa
loope
gs
and
cmp
das
mov
lea
out
stos
aas
jae
mov
out
call
outsl
pop
jnp
notb
mov
lods
popa
dec
pop
pop
loopne
sbb
xor
pop
push
inc
mov
dec
mov
xor
and
jmp
pop
jge
hlt
in
clc
addb
popf
loopne
cmp
sbb
jp
xchg
push
or
sbb
rolb
sub
mov
mov
cmpb
aaa
mov
idivb
shlb
hlt
mov
adc
call
shlb
push
pop
pop
sub
clc
call
pop
xor
mov
mov
addr16
sub
mov
mov
lds
push
test
loope
cmp
lret
out
cmp
mov
or
push
mov
mov
sub
cld
roll
jmp
push
add
loopne
aas
sub
mov
data16
addr16
mov
lods
data16
mov
or
xchg
stc
test
and
jno
push
dec
cltd
and
das
jmp
lret
inc
nop
pop
stos
int
int
xor
mov
pop
pop
fdivp
enter
insl
js
jle
and
add
adc
sub
add
lret
pop
xchg
jo
xchg
sbb
imul
push
fdiv
jno
test
call
mov
xor
mov
push
nop
pusha
cmp
test
addr16
outsl
dec
mov
mov
push
cmp
ljmp
cmp
push
imul
icebp
lcall
sarl
xor
add
int
fmull
cmpsl
push
jecxz
adc
fisubrl
add
ret
test
insb
daa
ror
pop
icebp
and
inc
ds
sub
jnp
dec
ret
push
dec
lods
add
adc
sti
pop
call
xor
loope
ljmp
jo
bnd
pop
add
sbb
adc
loope
push
enter
inc
dec
sbb
js
add
add
pop
lret
sub
std
pop
scas
fadd
mov
pusha
jne
sub
sub
pop
popf
lahf
ret
dec
inc
jecxz
or
ret
pop
icebp
xlat
fdivrs
pop
jmp
xacquire
sub
test
dec
jg
push
add
pusha
add
push
or
adc
pop
mov
jae
aad
and
adc
push
shlb
inc
or
std
sti
pop
scas
jmp
mov
pop
cld
cmp
fisttpl
into
sbb
push
xor
mov
bound
sbb
push
xor
mov
ret
inc
in
xor
test
pop
sub
and
add
hlt
add
shll
ret
adc
xchg
movl
cmc
adc
mov
dec
push
adc
ret
mov
pop
int
je
rcrl
mov
mov
imulb
mov
mov
xchg
and
pop
xchg
mov
dec
popf
cld
arpl
fistps
aas
movsb
mov
inc
push
push
pop
mov
mov
add
lret
mov
loop
cwtl
dec
pop
int3
push
mov
pop
jno
push
aam
xchg
pop
or
dec
lds
fimuls
add
xorl
inc
out
cmp
in
cltd
xor
jne
jg
ret
jne
cmp
lret
push
jp
lods
mov
mov
mov
les
push
cld
popf
mov
xchg
loope
mov
mov
and
mov
stos
adc
mov
ljmp
adc
xor
in
push
cmc
out
cld
xchg
mov
stc
xchg
bnd
stc
xchg
mov
or
pushf
scas
dec
add
inc
xchg
loop
pop
xor
cmp
sahf
test
and
xchg
js
ss
jmp
push
sub
jae
cmp
fdivrl
leave
ret
xor
and
xor
fwait
cmpsb
movsl
test
aad
into
cltd
pop
mov
jnp
sub
sbb
dec
push
cltd
gs
subl
dec
or
addr16
shl
pop
push
xlat
sbb
fst
jno
int3
outsl
dec
std
pop
adc
sub
add
jae
inc
sub
leave
adc
xchg
cmp
out
sbb
fcoml
cmpb
ljmp
arpl
in
push
inc
jne
cltd
mov
je
push
lds
sti
outsl
ror
xchg
cmp
jmp
fdivrs
cli
cld
into
add
idivb
mov
clc
adc
jb
stc
psrlw
enter
mov
rcrb
icebp
movsl
lds
fmul
je
lcall
mov
add
int
loope
notl
stos
into
and
mov
push
jmp
xlat
jg
mulb
sub
stc
icebp
pusha
fidivrl
and
push
jne
int3
mov
scas
popa
shr
lods
xor
mov
std
jmp
add
test
inc
jns
adc
fdivr
adc
push
mov
scas
out
cmp
lret
loop
in
outsl
mov
rcrb
das
mov
cltd
je
aas
fs
sbb
scas
shll
xchg
leave
sbb
in
xchg
aaa
sbb
out
fdivrs
addr16
mov
fistpll
mov
add
into
xchg
pusha
in
ljmp
dec
dec
testb
movsl
adc
pop
xchg
enter
adc
std
dec
test
pusha
and
out
rcrl
in
fld
xorb
jnp
mov
pusha
jg
xchg
test
loope
loop
add
jmp
inc
xchg
inc
jno
adc
clc
lcall
in
mov
out
sbb
inc
jno
or
xchg
jne
or
inc
shlb
dec
imul
outsl
fwait
mov
sbb
jmp
ret
in
jnp
out
clc
jmp
into
sbb
shrl
pop
repz
or
fldenv
or
mov
pop
leave
ljmp
in
dec
inc
sbb
cld
fwait
dec
sbb
int
mov
cmp
sub
icebp
pop
xchg
in
shrl
sti
call
test
dec
fisubrl
sbb
adc
shll
cmp
fwait
inc
pusha
popf
sbb
jmp
test
in
and
or
mov
xlat
ljmp
scas
popa
lods
jl
pop
fistl
bound
inc
pop
jo
jb
mov
mov
mov
and
lock
push
xchg
cwtl
in
mov
jae
popa
mov
cmc
jmp
mov
dec
and
mov
out
mov
cmp
scas
icebp
into
pushl
pop
add
xchg
fs
divps
fisubrs
sbb
push
addr16
push
adc
cli
add
sbb
fldenv
xlat
ret
mov
mov
push
mov
repz
inc
cld
stos
mov
cmpl
xor
idivl
out
add
mov
pop
sar
xor
ds
xor
rclb
push
pop
cltd
add
cmp
inc
andb
sub
call
add
add
inc
cld
push
pop
and
mov
and
test
push
jecxz
ja
lahf
repnz
xchg
push
mov
faddl
add
iret
xor
pop
popf
mov
stos
fsubrs
mov
jne
dec
pop
and
lods
popf
dec
push
cmpsb
shr
mov
int
jp
xor
jp
mov
gs
dec
cli
jae
push
push
enter
out
cmp
rorl
inc
or
or
sysexit
hlt
pop
andl
jbe
dec
test
js
sbb
adc
push
lret
inc
aaa
insb
xchg
popa
nop
in
addr16
out
int
and
pop
leave
mov
push
pop
mov
hlt
pushw
jno
arpl
mov
in
inc
je
pop
into
sarb
jns
sub
jp
lahf
jecxz
cli
inc
or
adc
mov
inc
xor
pushf
lock
push
stos
adc
sbb
lret
xchg
xchg
aaa
mov
gs
cmpb
jo
sbb
fs
leave
add
adc
test
mov
movsb
jae
js
outsl
push
mov
test
rol
mov
sarb
test
fldt
sub
lret
or
iret
test
lcall
add
dec
js
cld
lea
push
cli
inc
mov
lcall
clc
inc
jo
jo
fbstp
lret
push
inc
aad
ds
daa
addl
test
mov
pop
sbb
jl
out
movsl
dec
iret
mov
out
sbb
adc
or
ljmp
repnz
mov
dec
xchg
jbe
int3
sbb
pop
daa
fisttpl
xchg
cmp
les
mov
loope
sbbl
pop
pop
or
sub
mov
push
dec
insb
mov
add
ret
gs
adc
push
sbb
and
shll
or
sub
pop
pusha
mov
pop
jo
push
dec
popa
sbb
inc
dec
lock
xchg
hlt
fdivrl
inc
movsb
inc
push
mov
lahf
and
pop
lret
je
jae
cmc
mov
sub
lahf
scas
or
ret
xor
xchg
std
hlt
or
shrb
sub
cld
in
popf
cltd
adcl
xchg
test
pop
mov
jnp
lock
cmp
push
loop
cltd
addb
nop
negb
movsl
mull
sti
out
mov
in
andb
outsb
jae
dec
or
ret
inc
addb
sbb
lods
mov
mov
sub
dec
lret
jg
stc
mov
pop
jb
push
adc
fldcw
dec
negb
cmp
repnz
lods
int
mov
hlt
mov
iret
mov
pop
call
js
out
aad
adc
pusha
jae
xchg
mov
jp
test
arpl
std
lock
xchg
jmp
enter
les
loope
fidivl
lret
mov
shlb
cmp
rcrb
pop
mov
xor
adc
xchg
js
adc
sbb
loopne
stos
adc
imul
lahf
sbb
aad
vmovlpd
sub
dec
lods
sbb
ja
stos
sbb
out
push
mov
push
loop
aam
cltd
jnp
ja
mov
shll
mov
xor
mov
call
cmp
cwtl
mov
outsl
cli
jg
xor
aaa
pop
js
xchg
adc
pop
sub
and
adc
sbb
xchg
pop
xchg
call
rep
pushf
push
or
xor
imul
dec
mov
xchg
push
ljmp
mov
mov
cmp
xor
xchg
scas
pop
sbb
mov
cwtl
stos
mov
adc
test
pop
fwait
std
dec
and
xchg
jno
inc
mov
into
inc
jae
js
movsl
and
out
jle
or
loopne
in
ret
jns
push
insb
and
jmp
lret
enter
jno
nop
mov
xrelease
mov
aam
incl
mov
cli
imul
shlb
inc
aas
pop
push
mov
hlt
dec
and
jne
ret
add
ljmp
pushf
stos
jbe
mov
push
sub
xor
popa
sti
dec
jg
scas
ljmp
inc
jge
daa
addr16
mov
out
sarb
loop
xchg
xchg
cmc
fiadds
aam
std
xchg
leave
pusha
xchg
pop
or
jle
std
into
pop
inc
subl
adc
inc
cmpsl
and
cmp
mov
repnz
add
add
in
sub
outsb
xor
ljmp
sti
movsl
dec
or
jbe
les
lds
cmpb
and
dec
jnp
xor
sub
bound
sbb
lock
jne
sub
clc
sbb
mov
data16
and
aad
aam
enter
add
cs
in
sub
sub
push
inc
nop
rolb
push
jnp
lock
and
jb
jmp
rorl
mov
les
ss
add
xchg
cmp
cs
xor
in
mov
and
ja
adc
xchg
popw
and
enter
cmpsb
jnp
lds
mov
popa
mov
xor
andl
pushf
fnsave
cmp
push
rorl
test
xor
mov
out
arpl
in
pop
pop
pop
pop
or
and
mov
aas
inc
jp
cmp
jnp
scas
fmull
bound
add
outsl
pop
stos
test
fs
mov
or
ds
add
adc
mov
scas
xchg
inc
mov
inc
stos
mov
dec
and
dec
adc
daa
xchg
in
test
in
test
sub
dec
call
push
in
ds
test
and
jmp
out
cs
sbbl
ss
testl
sbb
cmp
push
xor
push
cmc
cmp
cs
inc
cmp
fwait
sub
test
jle
iret
pop
adc
xor
gs
mov
mov
mov
cmp
jmp
addl
mov
dec
push
or
sbb
loope
jecxz
ja
push
sbb
sbb
out
fsub
jmp
jp
iret
mov
jo
mov
sbb
xchg
cmpsb
dec
cmp
in
dec
xor
das
mov
cmp
dec
xchg
push
lret
scas
push
rcrb
test
fimuls
es
or
into
sub
jns
dec
push
lahf
out
pop
lock
inc
dec
std
daa
movd
jl
push
pop
push
rclb
mov
mov
arpl
ljmp
in
test
xchg
jl
and
test
mov
mov
xchg
mov
decl
mov
imul
jl
pushf
outsb
cmp
dec
sub
and
sbb
sub
insl
inc
cmc
inc
adc
out
add
xor
add
ret
ja
pop
test
jno
in
sub
pop
mov
pop
mov
mov
sub
mov
fwait
aam
mov
xchg
test
cmp
lods
addr16
sarl
add
dec
jp
jmp
add
push
cmpsl
je
or
cs
dec
ret
sti
mov
push
cmp
aad
xchg
jle
sarl
enter
fldt
out
xchg
test
push
lods
adc
hlt
push
add
mov
cwtl
cs
push
pop
mov
cmpsl
arpl
lock
pop
cltd
aas
fs
jnp
rorb
cld
insb
jle
aad
movsb
add
xor
into
movsl
movsb
scas
cmp
shlb
inc
xor
push
cmc
mov
xchg
and
cmpsb
xchg
cli
pusha
pop
sub
das
sti
sti
cmp
mov
push
clc
es
outsl
and
or
sub
jae
adc
mov
fnstenv
mov
imull
adc
mov
mov
xlat
add
mov
push
sbb
adc
xchg
addr16
das
push
dec
dec
and
or
xchg
mov
dec
das
enter
push
daa
aas
imul
insb
and
mov
ds
xorb
daa
jb
or
xlat
push
jge
jb
xor
sarl
push
xlat
xchg
mov
cmp
jnp
mov
in
mov
mov
scas
and
mov
inc
push
loope
jnp
sub
jne
mov
int3
scas
ficoml
repz
fwait
aam
scas
cmp
add
fists
das
dec
dec
jmp
stos
outsb
fidivrl
jns
jmp
subl
sbb
dec
cmpsl
add
lods
pop
repnz
outsb
aaa
arpl
lods
xor
arpl
test
cmpsb
hlt
jbe,pn
inc
repz
sub
test
or
jecxz
fmuls
lock
inc
ds
mov
jge
dec
jns
adc
aam
dec
stos
cltd
mov
jae
mov
pop
movzwl
cwtl
push
pop
mov
decb
lret
int3
inc
js
data16
jle
outsb
pop
jge
in
dec
adc
mov
sbb
add
ret
test
xor
outsb
cmc
movsl
or
test
push
iret
xchg
int3
bnd
mov
xor
jbe
xor
mov
push
popa
out
sbb
stc
push
fwait
insl
or
call
ja
je
aad
aam
xchg
pop
test
add
and
push
fcompl
imul
test
leave
in
lahf
cltd
daa
lar
pusha
adc
push
pusha
dec
cld
hlt
das
cli
ja
xlat
fsts
mov
ljmp
hlt
fmull
cmp
nop
xor
repz
pop
or
push
pop
jbe
mov
jge
cmp
pusha
ljmp
push
nop
dec
or
loope
shrb
mov
lds
push
int3
inc
push
in
rol
jae
daa
pop
inc
lea
xchg
push
sbb
stos
test
jge
iret
pop
shlb
or
pop
jg
push
ret
jge
lds
lds
icebp
aas
add
jp
push
adc
das
xor
test
js
fbld
mov
divb
aad
or
lahf
lds
jp
test
and
idivl
pop
cmp
sub
adc
fdiv
adc
lock
jecxz
add
adc
cmp
push
cmc
xor
fstpt
and
xchg
ret
mov
push
push
mov
and
shll
rol
jb
lahf
sar
xchg
out
gs
jo
adc
cltd
and
cltd
xchg
mov
xchg
repnz
push
mov
arpl
les
outsl
or
in
fwait
rcrl
aam
mov
pushf
sub
lds
adc
in
push
lret
pop
icebp
inc
outsb
pop
stos
jp
adc
shrb
dec
loop
aam
movsb
in
scas
fs
mov
negb
sub
sti
inc
xorb
js
add
pop
insl
sbb
add
into
into
std
out
dec
and
cmpsl
nop
push
pop
inc
mov
cwtl
sar
adc
ljmp
push
or
and
das
popf
clc
hlt
inc
roll
adc
jle
ss
aam
adc
push
or
dec
add
popa
movl
mov
fstl
lds
subl
lret
pushf
mov
push
in
out
mov
mov
sub
movsl
ret
mov
jno
por
out
sub
jnp
or
and
xor
out
mov
adc
adc
filds
fdivs
ficoms
int3
adc
mov
test
jmp
xor
and
xor
jb
test
or
pop
addr16
repnz
and
movl
sahf
jnp
test
mov
xchg
adc
xorw
xchg
jl
out
xchg
and
repz
inc
jno,pn
mov
push
jns
sub
mov
cmpsl
and
testl
lods
sarl
stos
test
sub
mov
aaa
cld
dec
repnz
mov
cltd
pop
xchg
sub
mov
aas
nop
push
outsb
je
ret
adc
in
pop
push
in
loop
rorb
lods
inc
mov
push
testb
clc
test
movsb
arpl
pop
int
xorl
jne
ficoml
leave
jle
ret
sub
pop
popa
scas
jp
jecxz
xor
xchg
xchg
dec
or
je
cmpl
mull
icebp
popl
std
mov
lret
sbb
xor
jp
cs
addb
test
lods
cld
lret
jno
xchg
xlat
sbb
cs
and
outsb
cmp
and
aad
cmp
sub
fisubl
push
bound
into
mov
pop
push
mov
lds
push
lret
outsb
sbb
fsubrp
lcall
dec
cltd
shrl
loop
jle
or
mov
dec
jmp
inc
lahf
popf
push
mov
cmp
pop
ficomps
dec
gs
cmp
and
ror
ja
gs
aad
sbb
mov
add
cwtl
ret
mov
xor
or
jmp
mov
outsl
mov
cs
inc
inc
cmc
and
cmc
cltd
popw
and
dec
std
int3
pushf
outsb
cmp
mov
mov
movsb
inc
jp
pop
xor
cmp
jns
push
mov
mov
pop
xchg
leave
pop
in
fbstp
jae
scas
cmpsb
clc
data16
test
push
add
clc
jne
fwait
cli
int
add
push
cwtl
test
addr16
das
je
xorb
or
dec
xor
fsubr
mov
lcall
stos
inc
mov
shll
out
add
xor
into
inc
xchg
inc
inc
das
arpl
adc
pop
pop
and
outsl
cmpsb
fs
jl
and
xor
mov
push
mov
popa
mov
mov
imul
xchg
dec
pop
xor
enter
outsl
mov
inc
test
lret
inc
mov
cmpsb
cltd
loope
lds
rcr
je
loopne
sbb
test
jmp
test
pop
jge
pop
adc
add
xor
inc
cmc
mov
popa
pop
out
jbe
and
inc
and
aad
mov
mov
test
aad
push
xchg
icebp
dec
sub
scas
xchg
jns
stos
sbb
sub
push
inc
into
add
inc
ret
lods
fidivrs
adc
stos
jp
jno
and
enter
mov
or
pop
mov
cmp
inc
push
adc
hlt
test
jle
or
pop
sbb
pop
into
sub
jno
cmp
inc
ljmp
push
push
cmp
popf
mov
add
cmpsb
enter
mov
xor
mov
scas
or
cmpsl
add
in
push
cmpsb
icebp
pusha
fidivrs
push
and
out
sub
adc
sbb
sub
mov
jo
jb
out
stos
pop
scas
fdivrl
pop
push
dec
jle
mov
sub
adc
data16
cmp
imul
jne
loop
adcl
mov
lret
push
push
fmul
loop
in
adc
sbb
scas
and
mov
fstl
call
mov
cli
add
pop
clc
push
mov
fdivl
adc
test
lods
dec
das
mov
roll
jns
pop
push
ficoms
push
cmp
movsb
stc
ja
dec
xor
fiadds
fs
mov
dec
add
push
rcl
in
adc
into
push
pop
add
and
xor
insl
repnz
and
shlb
in
aas
and
jmp
cmp
xchg
sbb
xchg
mov
sub
sbb
out
mov
adc
sub
sbb
divb
or
andl
cwtl
xchg
icebp
cld
xor
ficoml
adc
inc
mov
aaa
stos
adc
ficoms
sahf
cli
ficoml
push
sub
mov
xchg
js
out
ret
js
cmp
cmp
cmp
pop
pop
pop
push
loop
pop
xor
ror
xlat
jae
and
ds
leave
stos
add
int
arpl
jmp
mov
scas
xchg
int3
inc
lds
push
lock
and
jb
xor
mov
sbb
or
pushf
pop
sub
stos
leave
push
clc
sahf
aam
and
xor
dec
mov
dec
push
xabort
xchg
mov
pop
pushl
jmp
daa
in
stos
adc
mov
in
jno
pop
cmp
call
adc
pop
mov
arpl
dec
dec
mov
or
scas
push
mov
test
inc
mov
or
pmaddwd
imul
andb
cli
pop
data16
in
fcompl
enter
mov
xchg
inc
je
sub
int3
jg
fwait
pop
sti
out
rolb
lahf
mov
pop
call
push
out
loope
inc
dec
cmc
push
sub
xchg
pop
clc
fdivs
nop
adc
push
fcompl
inc
clc
mov
clc
cmc
mov
adc
pop
sbb
fsts
cmp
xchg
outsl
shlb
pop
xchg
fimull
sbb
inc
jbe
fsubrl
int3
and
mov
add
neg
lahf
dec
out
push
jo
push
mov
int
xchg
jo
fidivs
xchg
dec
aaa
fcomps
imul
mov
jae
imull
adc
cmp
iret
mov
ficoms
cmp
cmp
cmp
jbe
sti
xlat
cmp
lods
cmpsl
rcrb
jae
stos
add
mov
enter
movsb
outsb
xchg
dec
cmpsb
fcmovbe
lds
shl
rcrb
or
jbe
stc
jg
pop
and
pop
rcrl
leave
sbb
addr16
push
jns
sub
or
xchg
les
inc
pop
mov
lret
mov
pop
mov
dec
inc
aad
lret
add
dec
hlt
inc
jns
dec
stos
mov
hlt
add
sub
add
out
jmp
mov
call
dec
pop
sbb
mov
enter
sbb
push
pop
mov
mov
insl
mov
scas
xor
jnp
jbe
sub
fwait
cli
ret
pusha
cmpsl
xor
stos
cli
fdivl
pop
arpl
fwait
addb
jp
imul
or
push
adc
push
data16
jbe
cmpsl
call
add
ret
imul
loopne
scas
inc
add
lret
or
jns
pop
js
leave
into
cwtl
lret
push
test
mov
sahf
test
push
loop
outsb
in
loopne
pop
rcll
sbb
loopne
or
sub
cld
jmp
adc
js
or
in
xchg
ljmp
cmp
out
fwait
mov
fs
mov
cmp
rcrl
rcll
dec
cld
fwait
test
dec
inc
std
loopne
push
ret
cmc
les
jmp
sub
mov
mov
call
rorb
push
enter
push
hlt
mov
jb
and
or
icebp
cwtl
jbe
mov
add
cmp
mov
cmp
adcb
and
xor
mov
adcb
sbb
pop
cs
xchg
out
mov
jae
xor
mov
inc
fdiv
ds
and
jne
dec
push
cmp
sub
push
enter
push
xor
pop
cmp
sbb
fs
mov
imul
cwtl
xchg
jo
mov
sbb
add
mov
cmp
mov
xlat
push
popf
push
aaa
outsl
pop
sbb
mov
cld
int
or
cmp
outsl
or
jp
imulb
and
mov
mov
jne
push
xchg
push
pop
cs
lock
arpl
fst
xchg
sti
add
lea
movsb
in
mov
call
lret
sub
push
lods
adc
ret
rorl
inc
scas
std
fsubrl
cmpsb
jge
fstpt
jg
push
jecxz
add
sub
lea
xor
add
subb
cmp
insb
sbb
clc
scas
out
fstpl
mov
push
or
or
adc
xchg
stos
cltd
lcall
xor
push
xchg
bound
push
inc
push
push
jg
lret
stos
xor
aam
je
push
sbb
and
or
push
mov
dec
push
push
stos
mov
insb
add
inc
push
mov
push
cmpsb
inc
leave
js
xor
fiadds
outsl
clc
mov
mov
into
shll
xchg
dec
push
outsb
fstpl
incb
dec
out
out
mov
and
lahf
clc
push
fs
and
push
jne
add
pop
aaa
xor
insl
sbb
xor
lods
push
or
pop
bound
sbb
loop
mov
bound
sub
movsl
xchg
sub
fiaddl
mov
sbb
imul
in
dec
andl
push
roll
dec
push
ret
sahf
xchg
out
movsb
mov
xlat
push
mov
test
loop
inc
lret
leave
xchg
popa
push
add
adc
pop
pop
clc
or
jns
xchg
aaa
push
ficomps
push
ret
mov
add
ds
rcl
mov
xlat
ret
fcoms
pop
repnz
sbb
icebp
ficomps
cmp
test
frstor
in
xor
rep
inc
lods
adc
out
xor
jl
nop
mov
add
out
xchg
push
add
mov
cmpsl
aam
cs
int
arpl
repz
test
mov
mov
mov
push
adc
xchg
in
pusha
pop
call
cs
popf
mov
rclb
cmp
je
and
sahf
or
pop
mov
push
push
imul
mov
push
and
adc
push
jno
xchg
jge
fisubrs
lods
xchg
mul
and
lret
ja
add
rcll
popf
pop
imul
adc
lcall
pusha
pop
add
ljmp
pop
mov
aas
inc
mov
lcall
lea
pop
lea
pushf
lods
xor
add
pop
mov
sub
xchg
hlt
int
out
iret
jne
push
cmpsb
or
dec
mov
aas
dec
sahf
pop
fldenv
cmp
pop
xchg
scas
popf
dec
jecxz
xlat
add
xor
std
adc
stos
ss
dec
popf
sahf
or
mov
insb
loope
mov
scas
push
mov
mov
into
xor
jo
mov
lds
je
xchg
insl
jg
add
in
push
xchg
jmp
add
or
fnsave
push
sbb
dec
lods
pusha
pop
jl
aam
shlb
push
mov
jo
and
push
clc
icebp
stos
cmpsb
pop
sahf
hlt
pop
xor
xchg
scas
mov
push
pop
scas
in
jecxz
scas
insl
lea
pop
pop
sarl
out
push
cmpsb
add
mov
or
ds
jbe
pushf
jl
jo
ret
jnp
test
add
fidivl
ds
inc
pop
scas
aam
or
add
xchg
cmpsb
adcl
dec
push
pop
stc
outsl
pop
fwait
mov
das
mov
or
xchg
jb
test
add
in
fstps
pop
jne
into
scas
lods
inc
cmc
sbb
jle
mov
sti
fs
mov
dec
sub
nop
or
add
mov
jmp
pop
pop
es
roll
cmp
in
mov
or
push
push
jb
daa
jnp
jns
pushf
dec
cmp
or
dec
test
in
repz
xorb
lods
ja
inc
and
adc
int
test
cwtl
inc
adc
lahf
lcall
pop
push
sbb
or
cmp
cmp
cmp
sbb
sar
mov
incl
addr16
cwtl
test
mov
sbb
inc
lahf
loopne
lret
push
lods
outsb
jnp
jmp
mov
or
cs
aam
shrl
and
xor
sub
into
out
xor
xchg
pop
xchg
sub
hlt
sbb
lock
jmp
push
sarb
out
pop
dec
into
out
sbb
xchg
cmpsl
mov
adcb
stc
xchg
inc
ds
int3
repz
inc
jbe
div
int3
jb
adc
mov
adc
jne
or
es
xor
jle
push
xor
cmpsb
xchg
xchg
sti
cmpsl
xchg
adc
lods
jle
in
sub
sbb
stc
mov
orb
jnp,pn
cmp
jb
fistps
into
add
loope
incl
ja
test
idivb
adc
shlb
sbb
les
loop
dec
xlat
mov
sbb
cmpb
xchg
arpl
pushf
cmpsl
and
std
andb
outsb
int3
les
cmpsb
lea
ret
sbb
adc
fisubs
jns
daa
std
in
lret
and
movsl
pop
pop
adc
les
or
inc
imul
roll
add
mov
repz
jecxz
jle
push
sbb
sub
addl
lds
and
das
rsm
out
jl
xor
xchg
lret
cmp
fdivr
movsl
cmp
pop
aad
mov
sub
jg
cmpb
mov
negb
into
stos
sbb
jb
ss
mov
stos
inc
mov
add
jae
jle
scas
push
arpl
mov
imul
pop
fwait
xor
dec
mov
gs
arpl
xchg
or
test
dec
hlt
inc
std
dec
xchg
fistps
jb
mov
or
cmpsl
pop
cmpsb
inc
js
fimull
gs
lret
sti
leave
mov
xchg
jae
add
lret
dec
loopne
idivl
inc
pop
scas
push
fdivrs
add
out
jmp
or
push
jnp
pop
icebp
fnstenv
ss
scas
fnstcw
pop
inc
int
adc
lret
jmp
add
imul
imull
push
std
ja
bnd
push
sbb
mov
test
fistps
lea
aas
icebp
jne
sbb
test
xchg
xorl
adc
mov
fcmovne
fisttpll
jp
pop
aas
inc
ret
jmp
in
xchg
loopne
add
adc
sbb
dec
mov
sbb
mov
cld
aad
pushf
push
mov
aam
adc
sbb
ret
dec
pop
iret
sahf
lds
repnz
cltd
jb
fidivl
sbb
pop
mov
lcall
movb
mov
loope
cmc
inc
xchg
push
adc
pop
jge
jo
or
imul
in
add
jne
pop
ljmp
stc
jb
sti
xor
lret
xchg
lods
mov
pop
pop
les
jb
in
push
lea
pop
add
push
mov
adc
xadd
pop
jg
arpl
outsb
stos
mov
mov
jmp
lock
iret
xor
or
inc
inc
nop
jbe
xchg
cmp
cmp
insb
pop
fildll
pop
jo
rcr
xor
stos
fwait
jl
push
imul
cmp
cmc
loope
fsubl
fdivl
cmpsb
in
xlat
push
mov
push
scas
mov
jne
mov
outsb
mov
addr16
hlt
xchg
ja
cmp
sbb
mov
out
test
mov
pushf
in
xor
bound
in
pushf
lret
jnp
jbe
mov
sub
dec
scas
xorl
bound
std
push
mov
or
push
pop
mov
enter
inc
lock
dec
sti
ss
int3
add
les
mov
pop
xchg
push
add
and
pop
or
fisubl
inc
imulb
push
movsb
xchg
jmp
cmpsl
and
cmc
fwait
xor
jmp
loope
push
or
xchg
add
test
jge
push
cmp
mov
ret
mov
sbb
sbb
sub
rolb
inc
jmp
pusha
movsl
sbb
or
aaa
mov
dec
mov
aad
add
in
les
fdivrs
sahf
xchg
mov
dec
inc
pop
divl
pop
faddp
movl
mov
outsb
loop
push
jo
push
pop
xchg
testb
ss
mov
inc
sti
shll
push
jno
scas
sub
inc
and
pop
adc
jns
or
ljmp
aas
popa
add
fisubs
popa
pop
and
daa
push
stos
dec
dec
imul
orb
or
das
sub
stc
repnz
test
xchg
pop
loopne
mov
outsl
jb
sub
rcr
sub
shlb
sti
lcall
pushf
movsl
jns
lret
aam
xchg
cmp
or
sbb
in
rcrb
sbb
call
shl
stos
lahf
in
test
jmp
pop
dec
push
lret
mov
push
and
pushf
popf
mov
fbld
pushf
daa
xchg
ret
push
or
and
subb
cmp
push
fldt
aaa
push
push
test
stos
cmp
mov
sti
jmp
leave
push
test
lcall
mov
mov
cli
in
stc
bound
or
pushf
mov
cmp
or
lods
and
add
xchg
out
push
xchg
mov
pop
sub
add
lods
aas
push
sbb
sub
xlat
inc
pop
and
xorb
mov
loopne
xchg
lcall
mov
test
sub
inc
xchg
aaa
out
xor
ljmp
mov
addl
out
inc
push
cmp
std
lods
testb
test
xchg
outsl
insl
push
push
mov
add
movsl
in
cltd
xlat
jnp
inc
mov
sub
mov
cmp
inc
add
insb
mov
pop
fadd
jne
mov
pop
or
and
and
add
ret
sahf
js
les
nop
ret
bound
inc
xor
inc
inc
sub
add
mov
sahf
ja
sbb
loop
sbb
mov
pop
dec
lds
sub
push
inc
ljmp
imulb
scas
inc
sbb
push
jp
mov
inc
xchg
sbb
out
add
add
inc
push
repz
lods
pop
data16
jge
repnz
movl
lcall
lahf
test
sbbb
inc
test
dec
add
sti
mov
pop
lahf
int
bound
sub
jnp
mov
pop
add
xchg
adc
push
dec
scas
push
ss
aas
cmc
ljmp
aam
stos
lret
mov
call
mov
in
hlt
mov
and
xchg
arpl
sub
mov
push
mov
xchg
adc
flds
adc
les
jb
adcb
leave
cmc
mov
mov
sub
and
fstpl
add
dec
les
jo
mov
cmp
add
cmp
sbb
mov
in
icebp
sbb
xor
rcrb
jp
push
xor
or
imul
or
jge
ret
dec
jno
xor
enter
jo
fs
ficomps
sub
mov
cmpsl
mov
mov
inc
sbb
push
mov
aad
xchg
jle
out
js
xlat
inc
shll
mov
inc
xor
call
ret
xor
mov
rclb
pusha
loope
sub
mov
and
and
push
movntq
out
enter
sbb
and
xor
mov
outsb
push
aad
movsb
dec
in
cmp
xor
insl
sbb
test
jge
cld
pop
inc
inc
imul
repz
mov
and
sub
sbb
inc
inc
mov
pop
mov
pop
jbe
enter
test
sbb
or
mov
mov
test
cmp
cli
add
pop
pop
sub
mov
ss
cmp
scas
add
insb
jle
inc
sbbb
stos
xor
dec
insb
pop
lret
outsl
add
mov
ret
aad
aaa
jge
push
cmpsb
cmp
mov
test
or
out
xor
aas
mov
sbb
xchg
cmp
add
adc
aas
sub
popa
insb
xor
repz
add
sub
xchg
or
les
adc
xchg
out
jl
lret
sahf
sbb
xor
dec
inc
int
cmc
cmp
cmp
adc
imul
ljmp
xchg
mov
sar
lods
xchg
cld
xchg
xor
fwait
dec
push
jnp
adc
sub
in
sar
xchg
add
push
sbb
out
stos
mov
int
or
sub
and
sub
pop
lods
pop
rcrb
inc
imul
or
lock
pop
adc
lea
mov
movsl
shl
jp
inc
mov
sbb
inc
fucomp
gs
xor
or
es
imul
dec
pushf
xor
and
fcomps
pop
inc
cmp
cltd
dec
fstpl
inc
cmpsb
jp
dec
loop
adc
jge
int
mov
push
shrl
mov
aaa
pop
sahf
lods
mov
jo
xor
mov
or
jp
inc
mov
scas
movlps
jg
iret
ja
pop
jno
jo
testb
aas
xchg
push
xchg
int3
arpl
add
rorl
insl
repz
dec
sub
fidivs
mov
jnp
xchg
fbstp
pop
push
mov
test
inc
jno
in
fstps
inc
movsl
and
cwtl
add
lods
add
sbb
add
cmp
sbb
ret
aad
cltd
fdivl
sbb
lea
pop
mov
icebp
mov
pop
xor
jmp
popl
add
ds
mov
sbb
jp
inc
aad
in
lcall
cs
lahf
ja
adc
cmc
in
jge
je
cmp
mov
dec
je
add
xchg
stos
lret
sahf
into
mov
dec
cmp
and
dec
mov
sub
mov
scas
mov
les
sub
adcb
sahf
dec
xor
bswap
xchg
adc
pop
xchg
and
mov
sub
jns
fnstsw
data16
mov
sub
jbe
shl
jg
stos
imull
dec
cmpsb
push
orb
ljmp
out
int
or
xor
cmpsb
popa
sbb
gs
and
sbb
or
jo
mov
stos
mov
inc
ret
sbb
sub
smsw
insb
in
mov
push
xor
addr16
nop
or
bound
adc
mov
dec
and
scas
test
fs
fistps
ret
data16
xchg
push
divb
ljmp
push
inc
jp
inc
ficoms
call
popa
jnp
andl
out
push
mov
pop
push
jne
inc
mov
cmc
std
fiaddl
js
push
aaa
xchg
mov
pop
inc
xor
cltd
jle,pt
test
push
mov
jp
pop
lods
ret
xor
scas
cmp
insb
mov
push
nop
test
mov
xchg
fdivl
pushf
xchg
mov
mov
daa
push
jnp
mov
dec
imul
mov
fcomp
imul
dec
lock
mov
pop
push
mov
push
pusha
sub
leave
in
jns
sbb
shll
sub
jmp
sarb
mov
orb
mov
lods
xchg
testb
and
ret
pop
fstpt
repz
aad
mov
cwtl
cltd
fnstsw
js
pusha
loop
xor
rcr
sbb
xchg
and
xchg
jnp
add
jmp
add
push
movsl
cmpsl
rcll
dec
sub
mov
in
repz
mov
inc
orl
int
xor
jns
test
xchg
or
insl
je
push
out
jecxz
push
jb
jno
pop
push
or
jnp
cmpsl
in
aaa
xor
jne
mov
cld
add
pop
fisttps
ja
push
test
es
adc
push
inc
int
enter
pop
push
adc
pop
push
push
hlt
aaa
or
js
xor
push
xor
xor
out
orb
lds
add
iret
and
push
adc
outsl
add
pop
in
pop
mov
cs
popa
dec
dec
test
call
or
push
enter
sbb
int
push
xor
adc
push
in
mov
xchg
xor
pop
inc
loopne
xchg
leave
push
xchg
ja
cmc
in
push
inc
loop
mov
pop
rolb
out
negb
insl
and
inc
mov
popf
lahf
xchg
aas
xor
sub
test
adc
leave
cli
and
pop
out
xor
mov
call
dec
sti
cmc
pop
loopne
xor
stc
pop
popf
dec
dec
les
test
mov
in
iret
cmp
cli
jge
mov
xchg
test
inc
andl
fsubrl
sbb
xchg
sbb
popa
pop
xchg
jecxz
cmc
xchg
and
mov
sub
movsl
aaa
push
sub
enter
jo
fs
fistpll
les
imul
and
popa
dec
sub
jecxz
leave
jbe
push
adc
and
leave
mov
lcall
jle
popa
pop
hlt
and
pop
inc
and
int
push
outsl
adcb
and
mov
lret
addb
test
cmp
mov
ljmp
or
repnz
pop
int3
mov
sbb
xlat
shlb
mov
lret
aas
ficompl
daa
icebp
lods
jnp
fnsave
mov
cmpb
sub
pop
int
xchg
add
shrl
add
sub
inc
cs
pushf
adc
xchg
push
jae
cmp
mov
cs
and
lods
xchg
flds
shlb
sbb
jle
shll
jg
bound
inc
xchg
push
loope
xlat
fnstsw
call
outsb
add
out
stos
cmpsl
lret
sbb
nop
dec
xlat
pusha
xchg
mov
or
pop
pop
sarl
inc
dec
hlt
daa
xor
aaa
dec
add
subb
cmpsl
add
insl
mov
mov
mov
das
mov
in
mov
aaa
add
stos
mov
add
inc
int
push
mov
push
test
adc
add
adc
fnstcw
test
add
lods
and
and
pop
mov
jne
out
bound
into
mov
sbb
movsb
sbb
aam
inc
sbb
call
inc
call
sbb
lret
rcl
push
stc
xor
jae
adc
xchg
inc
and
mov
repz
mov
mov
outsb
aad
out
lock
inc
shll
dec
or
dec
push
push
adc
into
call
cli
in
and
push
in
sahf
lds
ja
inc
lret
out
cmc
test
fsubrl
jb
adc
mov
fimull
or
and
cmpb
push
pop
sbb
test
mov
sbbl
mov
in
mov
dec
das
jmp
in
test
fdivs
fistpll
nop
stc
adc
mov
ja
scas
xor
jge
and
mov
inc
mov
or
lock
movsl
test
movsb
mov
daa
adc
ficoms
mov
repz
jo
inc
xchg
mov
xchg
mov
sar
and
or
mov
stos
stos
pop
inc
pop
and
mov
push
xor
push
jnp
shr
lods
and
dec
test
mov
sbb
or
iret
mov
mov
xchg
add
fsubs
ljmp
lock
jg
sbb
mov
pop
popf
in
je
mov
mov
add
fildl
pop
adc
sbb
leave
js
popf
add
mov
and
dec
arpl
pusha
leave
and
sbb
daa
mov
je
cmp
sub
fimull
sub
mov
bound
jae
nop
dec
lods
shl
adc
jno
or
xor
dec
mov
and
pusha
xor
js
jle
cmp
pusha
arpl
sbb
jo
jg
fwait
push
rorl
lea
and
jno
stos
pop
js
lahf
lods
inc
out
or
test
scas
push
daa
out
push
cmpsl
xchg
leave
lcall
push
push
lods
sahf
adc
mov
test
pop
gs
je
cmpsl
xor
jge
push
inc
data16
dec
add
adc
cmp
gs
xor
repz
mov
mov
sub
bnd
fists
jno
xchg
fcmovnb
fstps
out
mov
lods
sbb
and
xchg
lahf
mull
adc
push
fldenv
jge
scas
cmp
call
iret
bound
loope
inc
mov
test
mov
icebp
pop
lods
xor
stc
js
inc
add
push
cmpsl
push
jmp
mov
push
jbe
fstl
mov
jmp
sub
repz
inc
in
push
xor
push
pop
nop
jns
mov
orl
mov
cmp
mov
lcall
lock
dec
addl
push
cltd
inc
adc
inc
xor
pop
jg
or
mov
sub
adc
sbb
pushf
hlt
push
xchg
rcrb
xor
and
push
mov
add
mov
mov
ljmp
dec
adcl
jb
testl
sbb
fwait
push
sub
aas
adcl
sub
lcall
andb
jne
mov
sbb
mov
sbb
call
pusha
les
sarl
and
sbb
mov
rol
push
iret
fdivr
int3
cmp
pushf
lods
mov
test
fcoml
xchg
xor
mov
sbb
sub
dec
popa
mov
mov
scas
mov
pop
enter
in
xor
cmp
lret
mov
les
push
out
sbbl
inc
aaa
in
xchg
dec
add
or
out
add
and
or
call
mov
jb
out
add
xlat
nop
mov
je
js
and
cmovo
loop
cmp
lods
lea
jle
das
scas
or
mov
mov
fcoml
sbb
pusha
dec
shlb
pop
fbstp
and
js
xchg
xchg
push
and
repz
xchg
es
insl
subb
sbb
fstps
pushl
xchg
sub
or
int3
sahf
adc
fdivrs
rolb
cs
or
lods
flds
push
inc
pusha
mov
inc
jle,pt
ror
jecxz
mov
fidivs
incb
int3
stos
lods
out
inc
dec
outsb
and
insl
ss
jmp
test
rcll
mov
inc
jle
inc
lahf
mov
sub
gs
jg
js
outsl
push
push
xor
dec
ja
pop
xor
aam
pushf
icebp
aas
sbb
fildl
outsb
call
gs
mov
adc
push
lods
push
aas
jmp
imul
sar
ss
in
fdivrl
sub
mov
in
clc
cmp
pop
stos
fidivl
movsb
inc
cmc
adc
es
ret
scas
in
push
pop
adcl
mov
mov
and
and
pop
pop
shrl
sbb
fstpl
daa
test
pop
gs
sbbl
sub
inc
lahf
dec
xlat
adcb
push
pop
repnz
xor
push
mov
out
ja
in
aam
sbb
in
xor
mov
not
jp
xchg
xchg
lret
lds
out
mov
cmp
mov
jle
sub
inc
sbbb
fwait
popf
ljmp
ret
ds
outsb
and
xlat
jo
adc
in
mov
push
rolb
popa
adc
push
jmp
das
aas
js
fists
cld
mov
test
mov
or
push
cmpsb
aas
cli
dec
cmpsb
or
pop
mov
lock
mov
punpckhdq
in
jp
cmp
pushf
ret
mov
and
in
insb
loope
ljmp
lahf
movl
or
mov
and
in
mov
enter
pop
adc
jecxz
fidivrs
nop
mov
outsb
push
mov
fs
sub
iret
xchg
sub
xchg
scas
xchg
xor
rcrl
mov
jb
out
jmp
push
and
lea
fldl
gs
jp
fisubrs
hlt
loop
insb
les
mov
cmpsl
popf
push
fidivrl
dec
jmp
pop
or
mov
mov
lret
jbe
int3
js
scas
jecxz
mov
pop
outsb
fldcw
in
mov
lret
outsb
and
fbstp
mov
sbb
xchg
xchg
gs
xor
imul
iret
ret
rolb
push
sbbb
rcl
cmp
xlat
mov
jno
loope
pop
mov
in
inc
addb
pop
leave
xchg
test
bound
sub
mov
lret
inc
xchg
negb
jp
fsubs
pop
and
out
inc
jno
test
add
or
aas
js
cmp
lahf
fsub
cmp
lret
mov
inc
xor
js
dec
mov
push
mov
mov
mov
sbb
mov
sahf
dec
cltd
imul
mov
mov
shlb
pop
push
rclb
pop
andl
cmp
xchg
aad
mov
fldcw
pop
cs
es
and
xor
ja
lret
loop
mov
movsb
mov
push
scas
scas
int3
cmp
xor
cwtl
inc
jae
push
lods
out
repnz
int
rol
aam
fs
rep
es
cmp
mov
mov
test
mov
in
mov
and
cmp
pop
inc
sar
stos
add
fs
in
fcmovb
stos
enter
dec
in
insb
xchg
mov
mov
pop
sbb
xchg
into
adc
mov
rcr
sub
es
sub
filds
clc
ljmp
cmpl
push
imul
jo
mov
mov
cmpsl
fdivp
orl
in
pop
cli
neg
std
iret
add
push
test
sbb
outsl
dec
cli
and
test
and
xchg
dec
mov
bound
and
mov
push
int
orl
insb
mov
xorl
jae
ljmp
adc
shrl
daa
push
adc
adc
repnz
sti
adc
js
scas
int
jb
add
loope
lahf
out
loope
mov
mov
int3
add
or
pop
repz
vpacksswb
in
sarl
insb
or
mov
lahf
and
inc
jno
adc
or
nop
aas
aas
lock
test
lock
lcall
inc
inc
test
loop
mov
xor
cmp
add
push
test
inc
mov
sbb
pop
mov
outsb
cmpsl
stc
pop
lods
lea
pusha
je
lds
mov
adc
data16
push
and
pop
loope
add
movsl
sbb
and
xor
jmp
sub
or
jmp
add
cmpl
test
es
mov
fcomi
ljmp
and
pop
jns
and
or
xor
lods
jno
ljmp
data16
enter
fidivrl
push
ljmp
outsl
cld
pusha
pop
dec
add
xchg
ret
pushf
clc
fsubp
inc
stos
inc
jne
cmp
sbb
adc
lahf
xchg
and
sti
aam
cld
mov
gs
aas
popf
xor
mov
ret
xchg
gs
jp
lret
add
aam
cld
mov
push
jno
dec
in
push
mov
jecxz
sbb
inc
das
pop
mov
xchg
cmpsb
and
ret
pushf
add
aas
jmp
enter
js
mov
mov
ret
push
sub
call
bound
cwtl
mov
in
int
scas
mov
insb
stos
xchg
outsb
iret
fisttpl
repnz
scas
inc
insb
cmpsl
sbb
pop
mov
pop
and
lock
adc
mov
xchg
imul
in
lock
addl
push
inc
jle
xchg
push
cltd
cmp
les
cmc
push
aaa
jbe
sub
loopne
push
test
std
test
loop
inc
adc
test
addr16
push
lcall
jg
cmpsb
add
push
cld
fildll
adcb
sub
ss
xchg
sbb
stos
out
pop
adc
mov
mov
push
xor
lds
cmp
hlt
iret
pop
xor
jne
xor
insl
jae
or
push
xor
mov
cmp
jae
push
xchg
jge
xchg
inc
xor
ds
aam
dec
jmp
dec
test
out
jbe
in
lds
dec
mov
lea
mov
test
dec
rcrl
and
lret
xchg
shrb
mov
pop
xor
arpl
jle
push
outsb
and
hlt
dec
adc
sub
adc
sbb
mov
leave
fwait
or
add
push
push
mov
sbb
jb
mov
add
dec
fdivl
adc
adc
sub
sahf
ss
cli
inc
inc
jne
ds
xchg
filds
jmp
pop
aas
sub
mov
in
mov
pop
cltd
jmp
mov
out
xchg
ficoml
mov
cli
xor
add
sbb
out
in
mov
adc
fistps
xchg
loope
in
dec
jecxz
outsl
les
adc
pop
cmp
aas
add
jae
js
cwtl
lds
inc
and
or
in
mov
sbb
mov
adcl
pop
fcoms
push
xor
mov
inc
mov
mov
das
jp
and
cld
mov
mov
xchg
xchg
aam
sub
out
sub
sub
cli
lahf
sub
arpl
in
adc
les
sbb
xor
int
adc
mov
addl
and
jp
cld
js
fnstcw
loopne
loopne
bound
ss
loopne
je
sbb
dec
enter
repz
stc
insb
repz
leave
jl
or
dec
cmp
mov
cwtl
pop
jno
push
pop
mov
sub
call
xchg
pop
fcmovbe
js
shlb
pop
je
pop
icebp
scas
scas
out
add
dec
cwtl
iret
or
or
nop
in
inc
shll
mov
cmp
dec
imul
popa
xchg
sbb
fdivl
adc
xchg
cmc
push
pop
mov
jne
xor
mov
int3
add
pusha
mov
stos
xchg
notb
insl
lock
leave
testb
icebp
lods
cmp
rol
loopne
push
aam
mov
rcrb
dec
ss
aad
dec
add
hlt
pusha
repz
inc
fdivp
cmpsl
or
xor
xor
das
mov
dec
xlat
mov
ds
jae
xor
clc
inc
mov
lock
scas
mov
test
xchg
lea
jb
nop
sti
adc
and
dec
xor
fildll
dec
push
imul
addl
dec
test
rorl
inc
push
ljmp
jg
stc
xor
iret
sti
adc
stos
jl
or
mov
mov
aas
push
sti
adc
ljmp
mov
cmp
push
insl
aad
popf
int
mov
xchg
mov
sub
insl
xchg
and
aaa
lods
out
push
cmpsb
nop
adc
cwtl
sbb
push
or
cmp
add
loope
push
add
push
cmp
loope
imul
dec
cld
sub
vandnps
out
push
mov
xchg
lock
xchg
mov
std
pop
push
jle
inc
xor
lock
xchg
mov
pop
pop
mov
js
jo
cmp
adc
jno
adc
push
cmp
mov
cwtl
sbb
push
movsb
inc
data16
cmp
test
jnp
sahf
outsl
fistps
add
lahf
mov
xchg
rcrl
sahf
sbbb
cmp
or
divl
xchg
and
inc
popa
dec
mov
and
int
call
xor
std
xchg
xchg
cs
xchg
ret
imul
fisttps
push
mov
ja
mov
mov
push
insb
push
leave
cltd
mov
pusha
jns
lret
lods
shll
sub
ja
pop
adc
stos
sbb
and
fnstenv
and
sti
insb
push
ss
outsb
cmp
lock
cwtl
xor
es
mov
in
and
push
pushl
aad
stc
xchg
pop
mov
data16
pop
scas
cltd
xchg
in
repnz
fwait
outsb
inc
cmovns
inc
push
mov
mov
in
imul
clc
dec
adc
shll
mov
int3
jge
loopne
mov
sti
jno
pop
inc
ja
cmpsb
add
mov
inc
testl
mov
dec
mov
dec
ja
sbb
xor
mov
dec
cmp
popa
mov
std
dec
mov
xor
and
into
push
sbb
in
fstpl
cwtl
sub
jbe
mov
push
or
mov
not
xchg
lahf
cmp
inc
scas
push
dec
cmc
mov
adc
push
xchg
mov
add
aad
movsl
and
clc
mov
aad
sbb
bound
scas
pop
adc
lret
stc
and
lods
fistpll
mov
fildll
push
mov
or
aam
xor
pop
fldl
lcall
xorl
pop
aaa
sub
jp
popf
fnsave
fs
mov
aas
imul
hlt
test
sbb
or
repz
lret
xchg
jge
hlt
aas
imul
shl
jnp
testb
or
mov
xorb
lret
clc
lret
gs
xor
dec
aas
jns
and
fs
and
xchg
sbb
fiadds
outsb
inc
popf
ret
js
clc
repnz
test
sti
addr16
pop
and
sbb
vdivsd
hlt
sbb
mov
movsb
and
mov
xchg
xchg
rcrl
fsts
test
test
fcomps
stos
cli
or
leave
xchg
sbb
lods
xor
in
mov
mov
loop
pop
enter
add
fidivrl
loope
mov
and
shlb
mov
inc
js
enter
adc
std
je
pop
in
shl
fisubrl
and
lods
sbb
stos
mov
loope
cmc
pop
sub
iret
pusha
mov
mov
jp
jle
mov
xchg
dec
cltd
scas
xor
es
inc
mov
int
fdivrs
adcb
pushl
mov
dec
adc
mov
sub
jp
loope
test
fisubl
jecxz
add
xchg
and
or
xchg
ret
jns
push
jecxz
cli
sbb
jl
popa
ficoms
push
gs
add
and
mov
add
sbb
inc
push
inc
inc
bound
pop
or
cmp
stc
js
pop
add
inc
and
push
dec
call
pop
xlat
sub
inc
mov
push
pop
jnp
jg
xor
cmp
jl
add
sub
mov
ret
sti
inc
data16
lahf
loopne
sub
in
pop
or
xchg
sti
arpl
jae
mov
lahf
sub
push
js
add
scas
pushf
loopne
push
int3
lcall
in
jle
push
shl
movb
push
dec
mov
das
or
lcall
test
je
inc
enter
iret
stos
sub
cmc
add
out
or
push
pop
jo
pushf
or
jnp
pop
andl
add
or
mov
jnp
test
push
addr16
or
cmpsb
popa
sbb
add
rcrl
mov
outsl
mov
jo,pt
dec
mov
cmp
push
popa
and
jl
push
sbb
nopl
movsb
xor
xchg
fs
xchg
cwtl
inc
cmp
cmpsb
sbb
cmpsb
add
jnp
rol
incb
mov
xor
push
pop
pop
adc
aad
lock
jp
repnz
cwtl
sbb
xchg
out
mov
inc
mov
or
test
mov
inc
cmpl
sub
imul
jp
aas
pusha
xor
adc
mov
inc
sub
es
das
inc
mov
sti
pushf
ret
inc
xchg
stos
cmp
in
sub
iret
or
sar
xchg
rorl
fmull
lods
mov
mov
enter
mov
adc
rorb
mov
cltd
adc
icebp
roll
scas
adc
sbb
add
cmp
push
sbb
dec
mov
fdivs
xlat
adc
and
lcall
stc
loopne
jo
loop
sub
je
pop
xor
rclb
push
sbbb
jecxz
add
xchg
lahf
stc
rorl
mov
sub
ds
push
inc
inc
xor
sub
into
dec
in
mov
inc
or
notl
enter
movsl
stos
cld
add
ss
dec
pop
scas
cmp
dec
adc
lds
movsl
or
movsb
iret
mov
pop
pop
xor
nop
adc
adcb
lret
repnz
sbb
push
mov
rcll
cli
shl
std
xchg
and
aam
stos
aas
pop
sub
adc
pop
fimull
cmp
repnz
add
pop
pop
rcl
adc
mov
push
in
jbe
sbb
sahf
adc
jb
cwtl
dec
stos
stos
test
mov
addr16
cmp
sub
xchg
pop
cmc
xchg
jb
push
xor
or
scas
or
inc
sbb
out
adc
in
mov
cwtl
sub
add
jg
jne
add
push
sub
addb
inc
rclb
test
test
popa
dec
int3
pushf
adc
in
dec
mov
test
cmc
testb
jmp
cmpsb
mov
loopne
fsubl
stc
les
fbld
testl
pop
stos
mov
xchg
inc
dec
loopne
adc
lret
in
jns
xlat
xchg
imul
pop
cmpsb
or
pop
lahf
aaa
gs
inc
cmp
test
lods
push
mov
pop
pushf
movsl
adc
cwtl
mov
lahf
sub
mov
push
shlb
and
sbb
dec
cmp
aad
out
mov
inc
ficoms
xor
jl
cmp
in
loope
sub
inc
subl
cli
pop
inc
hlt
sub
xchg
push
push
test
dec
mov
mov
ds
movsb
call
mov
sahf
inc
inc
nop
data16
or
cmpsl
xchg
push
lahf
ja
and
mov
inc
mov
testb
pop
jge
mov
scas
icebp
lahf
js
lock
lahf
push
lahf
dec
jnp
inc
xor
into
push
gs
and
cmp
out
mov
daa
adc
add
pushf
fwait
push
dec
push
pop
adc
repnz
push
lock
mov
andl
xchg
stos
xor
sbb
and
hlt
jne
mov
jnp
lods
ja
sub
in
pop
xor
int3
loope
sub
cli
cld
mov
dec
aas
sub
into
mov
jp
add
mov
shr
xorb
add
rcll
stc
or
push
sbb
inc
lcall
stos
mov
xchg
pop
fistpll
leave
xchg
insb
in
cmpsb
ja
sub
loopne
sbb
outsl
cmpsb
sahf
xor
into
and
pop
sbb
sub
pop
sub
cltd
outsl
hlt
sub
inc
sub
jns
fimull
xor
or
in
mov
xor
and
mov
lds
shll
dec
xchg
sbb
push
or
inc
xor
push
mov
mov
adc
xchg
pop
fisubrl
pop
dec
call
jo
mov
fst
xor
cmp
les
sbb
mov
dec
out
jo
lret
push
jg
dec
sub
mov
xchg
movsl
repnz
jp
mov
mov
lods
sbb
jp
loope
pop
loopne
cmp
imul
cld
xor
out
or
push
pop
popa
in
jge
shll
and
sti
jge
leave
das
adcl
push
push
ja
dec
aaa
lock
sarl
adc
cld
push
mov
iret
outsl
mov
sbb
jg
icebp
pop
and
sti
cmp
sub
sbb
aad
push
mov
mov
pop
int3
addr16
mov
jmp
sub
add
mov
lahf
jge
or
and
mov
rorl
iret
pop
sbb
dec
loope
jmp
xor
test
lea
stos
pop
rcll
mov
pop
pop
outsl
xor
out
mov
mov
dec
rcll
xchg
cmpsb
push
xchg
insb
mov
out
adc
jbe
test
cmpsb
sti
jne
mov
test
mov
jle
sbb
ljmp
cld
mov
add
sbb
or
addr16
nop
xor
pop
dec
jae
inc
dec
loopne
out
popl
xchg
sbb
popf
rcll
mov
dec
push
dec
sub
jns
movsl
pop
pop
mov
xchg
sahf
or
adc
addr16
sbb
push
sti
loopne
int
jbe
jle
out
mov
xchg
xchg
xchg
cmpsl
dec
lret
sahf
jp
out
lods
fnstsw
cmp
pop
push
inc
pop
adc
jge
in
push
mov
fldt
mov
mov
inc
jno,pt
push
sbb
in
pop
pop
es
add
mov
jne
mov
push
bound
add
dec
sbb
shrl
add
lods
call
insl
loop
int3
inc
in
push
pushf
icebp
repnz
sub
repnz
mov
loop
in
xor
lds
jb
pop
notl
int
fsubp
adc
mov
cmp
add
lcall
fs
add
cmp
mov
xor
fwait
pop
popf
mov
fldt
add
add
fisubrs
sti
and
xor
negb
mov
inc
push
movsb
mov
xchg
mov
push
testl
lahf
jno
cmp
push
aam
dec
mov
pop
cmpsl
std
mov
out
adc
in
push
aam
outsb
out
sar
mov
or
out
pop
push
leave
lret
adc
movb
add
inc
mov
subb
in
cs
pop
cmpsl
xor
repz
dec
shlb
mov
repnz
ljmp
mov
xor
and
sub
scas
push
lds
pop
mov
sbb
fwait
cmpsl
xor
sub
adc
lret
xor
hlt
jne
push
js
cmp
push
in
push
push
out
adc
jb
mov
stc
add
lds
mov
sbb
ret
add
jecxz
xchg
push
inc
add
sub
mov
xor
pop
mov
jecxz
gs
inc
fs
xor
xchg
dec
jno
gs
dec
push
ret
inc
cmp
in
jecxz
inc
cmpsb
lret
mov
lcall
xor
inc
aad
push
rdmsr
inc
push
icebp
icebp
mov
daa
arpl
dec
sbb
mov
sti
popa
call
test
scas
popa
add
jae
stc
inc
aas
mov
or
mov
popf
mov
jbe
push
pusha
jecxz
adc
loopne
push
clc
mov
popf
lds
jmp
call
rorb
inc
jnp
pop
lea
push
icebp
or
mov
test
xor
cltd
xor
jbe
jo
lock
popa
mov
out
push
lret
or
pop
mov
shrl
loopne
push
dec
and
pop
imul
repz
cs
scas
or
mov
dec
insb
cmp
sbb
mov
mov
loope
rcrb
adc
ljmp
mov
scas
fidivrl
pop
lcall
in
adc
mov
jbe
lds
out
cli
popa
add
sub
outsb
or
inc
out
and
call
ds
sbb
repnz
mov
pop
sbb
adc
mov
push
dec
xor
add
adc
lcall
das
je
cltd
add
hlt
pop
jge
aaa
push
pop
xchg
pop
movsl
in
loop
mov
add
and
cmc
imul
mov
rolb
add
mov
in
test
sub
stos
mov
jnp
mov
arpl
jnp
and
pop
das
movb
lods
add
in
xchg
ret
les
insl
jne
imul
mov
push
jmp
inc
dec
sub
dec
mov
lea
aam
subb
dec
andl
movsl
inc
out
bound
scas
add
cmp
lret
push
hlt
js
mov
cltd
std
es
mov
pop
xlat
dec
dec
pop
movntq
out
sti
idiv
sub
ja
xchg
jbe
out
and
sub
cmp
insl
stos
jnp
enter
mov
cmpsl
fcomip
push
push
pop
lds
test
ds
ss
lock
imul
push
mov
testb
inc
test
pop
inc
xchg
popf
jbe
das
or
nop
xchg
jbe
mov
ja
leave
sub
fbld
lock
ljmp
xchg
push
outsl
mov
mov
sbb
jl
iret
iret
pushf
inc
adc
sub
popf
ret
imulb
and
mov
mov
cmp
xor
xchg
daa
daa
insb
cmp
inc
call
jb
repnz
arpl
push
jl
sub
pop
push
outsb
sahf
push
lahf
xorl
lods
cmp
notb
mov
out
push
or
je
xchg
jg
sbb
lcall
enter
loope
pop
mov
push
xchg
lds
sbb
and
add
mov
sbb
pextrw
or
shl
adc
das
sbb
sahf
pop
push
xchg
stos
jmp
cli
jmp
pop
loop
inc
or
mov
cltd
jecxz
addb
sahf
aad
shlb
ds
aam
pop
stc
dec
add
aad
push
cmc
leave
setns
fiaddl
shrl
fdivl
arpl
sar
sbb
stos
push
dec
out
mov
sub
push
adc
push
rcrb
enter
call
push
test
mov
daa
clc
mov
mov
add
inc
std
jle
push
push
mov
mov
cmp
fildll
jb
enter
rolb
mov
in
adc
pop
push
push
cmpsb
xlat
or
ror
inc
dec
popa
int
xchg
das
jl
add
push
mov
jns
hlt
test
inc
cwtd
cltd
sub
xchg
dec
shl
into
inc
jmp
pop
cmp
mov
pop
cltd
ret
dec
outsl
xor
xchg
add
std
lods
js
aam
adc
dec
mov
xorl
xor
mov
lods
dec
bound
bound
dec
jno
je
cmc
xchg
sbb
xchg
outsl
testl
dec
leave
iret
orb
mov
pop
out
fildl
mov
repz
daa
clc
jo
aas
mov
mov
cs
fwait
imul
test
ficompl
inc
call
int
repz
sarb
jp
rcll
cld
jns
je
adc
hlt
and
mov
pushl
hlt
scas
pop
xor
movl
divl
addl
clc
xor
into
mov
or
jg
ret
inc
cwtl
adc
cltd
mov
lret
mov
dec
inc
push
jo
mov
cmp
dec
dec
dec
sub
xlat
push
inc
aam
lea
test
jo
popa
inc
aaa
lods
mov
fmuls
sub
loopne
adc
and
sahf
inc
js
pop
scas
or
sbb
cmp
and
popa
xchg
ret
cmpb
pop
outsl
pop
cmpsl
sti
dec
or
mov
shlb
and
or
mov
cmp
mov
mov
subb
pop
pop
les
add
push
shll
pusha
inc
sbb
loope
adc
and
test
and
sub
ja
fucom
in
add
jo
xlat
lcall
ret
rcrb
jno
jbe,pn
sbb
lea
inc
push
imul
out
xor
adc
inc
mov
mov
out
icebp
mov
pop
divl
pop
jecxz
pusha
push
mov
loope
xchg
pop
sub
arpl
fbstp
aam
xchg
adc
aam
cs
cwtl
lods
mov
and
movsl
into
xchg
push
adc
xor
int
xchg
ss
mov
ljmp
mov
lock
js
xchg
out
stos
cmp
jnp
cld
jge
inc
cld
or
dec
push
sub
pop
inc
cmp
testb
xchg
inc
sbbl
sub
testb
mov
inc
cmp
sub
fwait
test
adc
ret
out
sub
jmp
mov
mov
cmp
jmp
ljmp
sub
cmpb
out
jne
jge
sub
or
add
iret
cmp
js
call
fisubrs
out
out
lods
pop
cmpsb
ret
fidivrs
les
mov
mov
out
adc
cld
shlb
adc
cwtl
mov
in
fidivl
ljmp
orl
sub
mov
aad
jmp
adc
and
insb
and
icebp
clc
jmp
pushf
mov
push
mov
pusha
lods
popl
lret
fldcw
imul
lret
mov
xlat
lea
mov
aad
add
mov
gs
xor
cs
and
mov
test
mov
sbb
cmc
mov
scas
jo
pop
fwait
mov
pop
sub
das
insb
jbe
sarb
lods
jae
in
xchg
jae
loopne
add
aaa
and
sub
pushf
mov
sahf
and
xlat
imul
insl
cld
shll
xor
cmpsl
sahf
leave
xor
repz
push
pop
push
lock
add
jp
xlat
rcrb
adc
xchg
or
and
xor
cmpsl
and
cmc
leave
pop
pop
push
mov
and
imul
mov
cs
xchg
lods
and
cmc
cmp
mov
inc
fdivrs
shlb
lods
ljmp
jno
iret
and
rolb
daa
test
daa
cmpsl
shl
std
inc
mov
or
jo
rorl
notb
pop
and
cmp
and
pop
mov
adc
ret
fstps
mov
xchg
add
out
jmp
fwait
inc
aad
sbb
loop
test
inc
sub
sbb
imul
rorb
loopne
lahf
xchg
pop
xchg
and
rolb
nop
daa
lods
sub
pop
mov
dec
mov
fists
add
aas
inc
inc
stc
jge
movsl
sub
cmp
xchg
test
lds
push
mov
jecxz
stos
inc
jecxz
mov
jmp
ret
push
sarb
insb
je
adc
push
xchg
jb
dec
push
insb
sbb
es
insl
jg
mov
insl
sub
shl
cmp
sub
fcoml
les
cwtl
sub
or
in
ret
test
inc
or
xchg
mov
push
pop
jp
pop
faddl
insb
adc
add
in
popa
fsubr
rorl
xchg
xor
push
add
scas
and
jecxz
insb
or
stc
xor
adc
test
popf
js
insl
lcall
xchg
test
pop
stos
out
popa
mov
or
cmp
stos
sub
insl
sbb
insl
xchg
mov
add
test
lods
insl
mov
push
clc
in
cmpsl
popa
ret
sti
adc
sbb
clc
es
icebp
adc
cmc
idivb
mov
sbb
dec
inc
push
lret
or
sub
dec
or
rorb
xchg
pop
addr16
daa
jg
mov
enter
fcom
mov
sbb
pop
push
and
mov
ret
mov
xor
pop
mov
dec
ljmp
out
addb
push
push
adc
imul
leave
mov
sbb
popf
xor
mov
inc
outsl
push
loope
xchg
dec
add
enter
loope
out
fs
dec
incl
cmp
in
js
cmpsl
negl
call
xchg
jne
into
xor
jmp
pop
adc
mov
sub
test
pop
ret
lcall
cmpl
xor
jns
jge
in
pusha
std
ja
inc
call
lock
mov
imul
sub
inc
cmpsl
sbb
repnz
pop
in
cmp
insb
xchg
lret
nop
mov
les
faddl
dec
pop
aas
jae
push
lods
lods
push
popl
in
sti
out
xchg
jno
jmp
fdivp
and
inc
jl
pop
xor
sub
adc
dec
pop
int3
mov
int3
jecxz
jno
push
mov
xchg
push
mov
or
fiadds
and
loop
inc
cmpsb
dec
hlt
stc
loope
sub
jle
mov
xchg
cli
ret
mov
sub
pusha
mov
xchg
dec
repnz
adc
mov
cmp
lret
rorl
out
or
sub
shll
cmc
testl
dec
lock
lea
and
in
mov
nop
and
xchg
and
mov
aam
mov
pop
push
adc
mov
pop
mov
aad
aam
dec
mov
cwtl
in
inc
jmp
aaa
cwtl
imul
aam
ret
dec
pop
lods
xchg
fcoms
call
addr16
mov
mov
inc
int3
push
mov
fsubrp
mov
shl
mov
mov
dec
dec
int
sub
fs
and
hlt
jmp
xchg
ja
add
fstps
icebp
push
mov
movsb
dec
and
mov
lret
stc
mov
push
imul
adc
cmp
jmp
stos
push
xchg
inc
fwait
xchg
fs
xor
in
fmuls
out
xor
decl
cltd
pop
aaa
testb
sbb
push
ss
mov
in
mov
cmp
mov
lahf
insb
xlat
rcll
ljmp
outsb
mov
fdivl
out
icebp
and
cmpsb
subl
sub
xchg
sti
shrl
roll
jae
int
cmpb
xlat
mov
cmp
loop
mov
push
hlt
sahf
xchg
in
in
pop
scas
jne
sub
pop
mov
ror
int3
divl
mov
add
cmpb
mov
dec
fs
xchg
ret
inc
jae
sbbb
sbb
dec
jl
pop
pop
ja
test
add
xor
test
dec
lcall
cltd
xor
adc
and
fdivrl
loopne
ljmp
scas
pusha
dec
or
sahf
mov
aam
sarl
xchg
mov
sbb
negl
shrl
mov
dec
aas
jle
jne
aad
xor
jne
push
add
add
adc
mov
mov
cld
aas
mov
pop
das
test
dec
inc
xor
nop
lret
jns
imul
inc
cmc
lret
clc
test
adc
push
pop
mov
push
add
jbe
push
insl
fs
jmp
inc
jo
pop
stos
cmp
fdivrl
pop
dec
or
jp
push
in
outsl
lcall
sbb
enter
mov
inc
mov
out
ja
in
in
jo
andb
les
push
aas
or
imul
cli
inc
and
mov
scas
cmp
push
scas
cwtl
mov
ja
sub
mov
icebp
sub
sub
fnstenv
popf
pop
sbb
aam
xor
add
insb
loope
inc
push
testl
mov
sbb
divb
aad
or
add
adc
inc
push
imul
xchg
cmp
push
mov
push
ljmp
add
mov
or
pop
pop
lret
xor
clc
into
sbb
mov
mov
ljmp
gs
movsl
lret
xchg
mov
add
mov
cmpsb
adc
or
xor
jle
cli
mov
leave
out
test
lods
mov
add
jbe
xor
lea
adc
ss
gs
push
jne
xor
cmp
sbb
test
lods
mov
call
xchg
mov
shlb
inc
leave
xchg
add
jb
call
adc
or
clc
pop
cwtl
idiv
aas
jno
jne
daa
inc
mov
repz
sub
adc
pop
pop
mov
sub
clc
xor
ret
xchg
je
fstl
dec
leave
dec
inc
jl
lds
fnstsw
sub
push
les
dec
out
inc
sbb
lods
mov
xor
aaa
add
and
lods
cltd
or
lods
pop
int3
gs
lods
sbbb
mov
nop
or
loope
xchg
or
insl
push
stc
pop
test
pop
jns
test
pop
out
adc
fwait
int
outsb
lcall
loope
xor
jl
sbbl
push
push
mov
and
push
sub
dec
adc
aas
nop
loop
mov
stc
dec
dec
add
dec
jns
mov
hlt
lock
shrb
movsb
aas
shlb
lock
aas
pop
test
imulb
push
and
jmp
movsl
or
cltd
mov
les
or
fsubrs
push
xchg
sti
adc
lcall
cmp
dec
lods
inc
lea
hlt
outsb
sbb
ja
outsl
scas
dec
shll
lcall
jle
mov
mov
xchg
jnp
push
lods
fs
xchg
cmpsb
data16
lods
std
fists
out
mov
fldenv
icebp
jnp
mov
mov
stos
mov
inc
addr16
lods
stc
fwait
or
mov
out
into
adc
pop
fimuls
xchg
repz
sti
iret
xchg
jge
hlt
mov
xor
add
sahf
in
shl
cmpsl
inc
sbb
aas
jp
lret
cltd
test
sbb
sub
jl
sti
mov
stos
in
mov
cmc
in
hlt
sbb
mov
ss
jb
add
test
mov
xchg
push
lret
sarb
hlt
xor
repnz
into
lret
mov
arpl
aad
leave
inc
cs
xor
outsb
stos
push
aaa
inc
pushf
hlt
sbb
pusha
sbb
pop
jns
mov
dec
dec
mov
in
imul
cmc
cmp
jbe
xlat
xlat
jecxz
mov
jnp
mov
mov
mov
jecxz
mov
mov
cmp
mov
add
sbb
push
cmp
mov
repz
adc
icebp
sub
push
xlat
aam
int3
orb
jnp
out
add
mov
or
inc
je
lds
stc
in
add
stc
filds
mov
lahf
cwtl
lods
lods
push
mov
or
arpl
stos
jbe
ret
test
aam
mov
xchg
outsl
push
jae
fstps
xorb
std
and
jno
xchg
pop
push
orl
inc
inc
pop
daa
out
mov
cmp
jle
mov
adc
outsl
bound
mov
mov
dec
jp,pt
ds
xchg
dec
and
xchg
push
xor
test
nop
scas
faddl
and
sbb
inc
rol
dec
add
sbb
sahf
mov
dec
cmc
aad
inc
sub
movsb
ss
or
clc
adc
ja
or
shlb
rorb
xchg
lcall
sbb
push
lea
int3
je
xchg
stc
sbb
cmpb
lret
xchg
out
or
sbb
push
sbb
xor
sbbl
jmp
fdivrs
push
jle
insl
scas
dec
jp
lods
jns
addb
pushf
fistl
jns
test
dec
mov
ds
xorb
mov
pop
jnp
mov
stos
xor
es
in
stos
out
xor
jmp
and
pop
mov
jmp
adcl
fcoms
add
mov
je
xchg
inc
std
jle
jae
ret
negb
mov
rep
out
xor
neg
adc
out
neg
push
cmpl
in
adc
js
loop
out
rorl
frstor
clc
movb
adc
pop
stc
xchg
jge
fprem1
dec
cltd
and
mov
dec
rcrb
scas
hlt
icebp
fsubl
test
cwtl
jne
shl
insl
add
sbb
sub
push
in
jnp
loope
jmp
rcll
mov
call
ja
sub
outsl
xchg
cli
inc
sarl
cwtl
xor
lret
jb
rorl
inc
imul
int3
xor
xor
sti
xchg
push
and
ret
lahf
mov
sub
jb
loopne
mov
mov
jb
rolb
mov
mov
push
push
outsl
lock
mov
inc
sub
cmp
out
xchg
ret
fs
cmpsb
pop
and
jns
push
jmp
xchg
mov
fimuls
fistl
sarl
std
mov
or
inc
outsl
cmp
sub
ljmp
out
push
mov
lret
or
mov
stos
push
and
subb
movb
ja
adc
mov
js
pushf
jo
stc
dec
pushl
adc
jmp
sbb
loope
mov
or
pusha
stos
stos
popa
xor
pop
test
push
dec
pop
inc
mov
push
lock
je
jbe
mov
ja
mov
cmovl
aaa
pop
cmpsl
push
push
int
xchg
aaa
sbb
loop
mov
xchg
int3
cmp
push
jg
cmp
fwait
pop
jo
adc
sti
test
pushf
dec
stos
pop
cld
ds
sbb
inc
xchg
xchg
loopne
movsb
call
cltd
jge
push
lock
adc
fisttps
pop
idivl
hlt
mov
iret
pop
fs
jl
stc
lea
xchg
cmpsl
push
push
sbb
les
cmp
mov
and
pop
aaa
insb
and
and
push
iret
xchg
mov
jnp
stos
sbb
mov
lahf
cmpsl
vsubpd
aad
inc
cmp
fldt
sub
pop
sub
dec
dec
adc
jo
jae
or
in
or
inc
outsl
mov
and
jns
fistps
inc
add
xor
out
push
imulb
mov
fcmovne
xor
xchg
cmp
jecxz
cmc
mov
jbe
es
and
add
fs
ja
outsl
dec
fadd
mov
xorl
mov
add
jecxz
insl
fiaddl
lods
mov
test
icebp
jo
ljmp
aas
sub
mov
and
repnz
mov
mov
adc
mov
jbe
lea
mov
rclb
rolb
and
jl
sar
mov
push
fs
repz
ds
mov
mov
or
repnz
and
jno
dec
aam
mov
jae
and
adc
cmp
ds
pop
mov
fsubrp
pop
ljmp
popf
and
add
lods
out
in
jb
jae
aaa
repnz
stc
mov
dec
adc
mov
cmp
dec
icebp
pushl
insl
adc
mov
mov
cmp
xchg
xor
jp
or
mov
or
dec
pop
pop
sbb
and
inc
dec
ja
in
add
cs
clc
push
push
xchg
sbb
stc
addr16
loope
mov
sub
sub
mov
xor
push
repz
inc
jae
cli
out
push
mov
xchg
bound
sub
gs
imulb
and
lock
cmp
xchg
movsl
sbb
pop
jnp
test
inc
in
js
mov
xchg
or
popf
sti
rclb
xchg
xchg
xchg
pop
or
sbb
push
cld
aas
shll
sbb
dec
dec
push
push
pop
shr
lcall
cmc
out
lret
out
outsb
push
fisttpl
imul
xchg
push
filds
push
pop
push
mov
add
jno
stc
stos
lods
lret
sbb
adcb
and
fbstp
addr16
inc
add
lret
sub
push
push
push
lret
movsb
mov
xchg
rcr
xchg
js
cmpb
outsb
dec
aaa
mov
mov
shrd
sarl
leave
sbb
sarl
inc
stos
das
sub
push
xor
popf
dec
push
fcompl
shll
or
jb
sarl
jo
flds
dec
les
jge,pt
pop
daa
ja
push
popa
jmp
cmp
sbb
add
in
mov
rdmsr
test
sbb
js
call
xor
inc
int
xchg
adcb
fnstenv
pop
or
roll
scas
jno
test
push
test
mov
aaa
shrl
jge
mov
addr16
out
mov
jno
ret
lods
xchg
or
out
fisttpl
imul
hlt
jl
or
mov
out
icebp
test
test
lret
in
sahf
icebp
jp
cltd
or
stos
test
mov
and
xchg
fnstcw
xchg
jp
ficoml
mov
push
pop
inc
popa
jp
mov
aam
popa
lods
mov
push
test
sarl
cmp
xchg
outsl
jmp
add
aas
inc
mov
testl
stc
mov
in
xor
lcall
in
cmp
lahf
or
adc
inc
pop
cmp
clc
sbb
into
rorb
or
ror
pop
sbb
jg
ss
rolb
xlat
add
or
idivl
mov
add
frstor
fcmovne
clc
or
sbb
pushf
daa
popf
das
push
or
iret
jnp
sbb
jle
or
mov
jne
sub
add
in
sti
ficoml
cmpsb
in
cmp
jmp
adc
mov
stos
push
push
roll
push
repz
stos
shlb
and
xchg
sbb
mov
adc
and
dec
leave
xor
aas
cmp
mov
push
adc
ss
mov
lcall
mov
mov
add
clc
out
idivb
pop
out
inc
stc
hlt
xchg
pop
push
movsl
cltd
add
inc
jbe
sub
cmpb
dec
dec
mov
dec
stos
mov
push
inc
daa
jo
mov
subl
or
and
dec
mov
out
hlt
ds
mov
std
or
lods
aad
scas
mov
or
cmpsb
fidivl
dec
repnz
push
jb
aas
sbb
sub
mov
cld
cli
pop
push
mov
stc
xchg
lods
push
lock
jg
mov
add
xor
xorb
frstor
mov
pop
out
jno
cli
movl
inc
lret
jns
in
mov
sbb
in
dec
or
push
aad
jb
or
cmp
or
fldenv
je
mov
rcl
sbb
arpl
subl
jno
add
and
aaa
orl
fadds
shll
adc
mov
xor
sbb
jnp
sub
cmp
lret
scas
sub
push
jb
mov
push
in
sbb
cmp
movl
fcomps
sbb
mov
or
sub
mov
inc
test
xor
add
cwtl
test
data16
adc
xor
dec
inc
push
gs
sub
xchg
or
filds
inc
cmp
inc
dec
xchg
jnp
movsl
sub
aas
xor
sbb
sbb
sbb
sti
aam
or
js
mov
rorb
adc
ret
cmc
repnz
cmpsb
pusha
mov
lods
push
pop
ret
lea
dec
cltd
adc
mov
mov
add
outsb
adcb
push
jae
add
adc
mov
xlat
lahf
dec
adc
loop
jecxz
out
in
aaa
nop
push
jge,pn
push
popf
cmp
adc
push
insl
ljmp
dec
dec
dec
xchg
pop
xchg
sbb
sub
and
mov
mov
enter
add
mov
arpl
jecxz
pushl
xor
dec
in
mov
sbb
lahf
icebp
and
fldenv
mov
adc
ret
push
sbb
mov
aas
pusha
leave
out
into
loop
push
mov
loopne
rorl
lret
stc
setns
std
in
leave
add
push
imul
jl
ds
stos
push
cs
pop
mov
xchg
mov
fildll
mov
js
and
andb
push
pop
into
xchg
test
cmp
lods
outsl
pop
out
out
jo
mov
icebp
jnp
and
aad
sbb
data16
push
xor
jnp
ret
push
andl
lret
mov
jl
pop
inc
test
es
mov
dec
pop
jp
dec
dec
sbb
jb
icebp
in
shlb
mov
xchg
or
jle
mov
sub
add
dec
mov
pop
and
fidivs
test
stos
dec
ret
push
daa
int3
mov
test
and
pop
leave
xlat
pop
mov
inc
fwait
xchg
cmp
repnz
aam
and
test
pop
add
or
cmp
push
push
cs
jmp
nop
push
out
push
addr16
and
mov
or
int
arpl
push
je
mov
mov
xor
test
inc
jbe
roll
dec
sub
hlt
in
xchg
lea
sub
pop
popf
aam
mov
jnp
cmp
stos
mov
shll
cli
call
test
orb
mov
mov
rclb
cmp
sub
scas
dec
adc
fwait
test
loope
sahf
inc
subl
dec
adcb
dec
adc
lock
sbb
push
lret
pop
xchg
jo
aas
aaa
stos
ja
lea
sahf
pop
pop
xor
sbb
inc
cltd
shlb
insl
cmpsb
lods
sub
inc
lahf
push
lcall
movsb
mov
cmp
dec
inc
sbb
cmc
xchg
mov
arpl
cwtl
push
add
data16
ror
add
mov
loope
lcall
push
jp
idivl
mov
fists
cmp
sub
cmpsb
dec
jmp
xor
pop
xchg
mov
shll
mov
jg
jle
cld
in
je
sbb
loop,pn
mov
fdivr
dec
add
jp
insl
hlt
push
scas
gs
inc
mov
mov
push
sbb
mov
jecxz
jno
push
push
adc
adc
mov
push
insl
mov
mov
push
cli
cmp
xor
fucom
mov
adc
mov
dec
mov
mov
xor
lahf
xchg
mov
data16
xor
stos
insb
sbb
mov
xchg
jle
mov
and
in
mov
movsb
or
fildll
cmc
pop
cmp
loopne
or
nop
inc
scas
dec
xchg
test
jmp
je
loopne
or
ljmp
sub
dec
sti
repz
mov
dec
aas
mov
and
insb
scas
push
mov
mov
repnz
lods
mov
pop
addr16
and
cwtl
daa
dec
inc
mov
lods
jne
xor
enter
scas
fwait
lods
lds
pop
jmp
aam
enter
fs
rorl
add
fnstcw
dec
movups
mov
xor
daa
cmp
pop
jle
dec
xchg
xchg
push
mov
push
dec
xchg
test
enter
mov
push
lcall
rcl
notl
mov
mov
in
xor
and
das
arpl
cmp
repz
aam
mov
outsb
pop
fs
lock
xchg
lods
movsl
add
iret
mov
pop
mov
mov
divb
sbb
je
shl
add
stc
xor
and
filds
aas
dec
pop
or
stos
jmp
or
add
dec
or
mov
in
nop
jle
test
mov
movsl
dec
mov
inc
adc
jp
mov
jle
sub
push
hlt
xor
in
mov
out
inc
adc
pop
jge
mov
push
pop
inc
fs
pop
mov
leave
outsb
cmp
fidivrl
fcmovb
mov
adc
in
rcr
adc
idiv
pusha
rolb
push
loop
je
jns
arpl
cmp
mov
lock
pop
dec
test
shll
adc
outsb
pop
sbb
xchg
push
popf
mov
add
sahf
aad
dec
pop
loopne
sub
and
fs
mov
xor
int
push
outsb
jbe
jae
xor
pop
cmp
clc
add
dec
lods
adc
ljmp
push
or
fisubrs
jle
sbb
lcall
sub
sbb
and
call
jecxz
cmp
adc
mov
jns
cltd
mov
pop
sub
mov
cmp
filds
inc
pop
and
cmp
testl
jmp
in
xlat
testb
mov
push
sbb
call
loopne
sub
cmp
cmp
dec
add
xchg
in
cmp
adc
pop
mov
je,pn
scas
pop
dec
inc
or
jae
lods
adc
sti
rol
xlat
nop
data16
or
mov
pop
add
jecxz
and
inc
fstpl
out
shlb
mov
fs
call
or
mov
xchg
jne
pop
aam
sub
xor
cmp
xchg
pushl
adc
dec
xor
gs
leave
ja
and
mov
andl
fwait
pop
nop
jbe
lret
pop
fisttps
call
mull
pushf
push
cmp
inc
add
mov
aam
jg,pn
ds
je
fnstenv
in
addb
xchg
push
cltd
lods
imul
fidivrl
mov
sub
dec
mov
inc
or
pop
dec
pushf
mov
fbstp
mov
loop
andl
fstps
stos
jo
mov
adc
cmpsl
ss
in
das
testb
pusha
loopne
dec
cmp
dec
pop
adc
push
jne
lret
shlb
push
pop
testl
xorl
in
pop
xor
pushf
mov
insb
sahf
lret
out
push
js
jb
adc
push
mov
leave
mov
cmp
xchg
jns
adc
adc
sbb
fs
loopne
cltd
popf
scas
add
movaps
add
shrl
sub
mov
lea
adc
leave
pop
sbb
outsb
out
push
test
incb
sub
add
push
xor
sbb
jl
test
mov
mov
sarb
cmpl
dec
jg
mov
mov
mov
xor
pop
jno
ljmp
jmp
in
mov
cli
sar
hlt
mov
fnstcw
mov
pop
and
dec
mov
dec
adcl
or
mov
dec
mov
rcll
mov
nop
sahf
jb
cmp
sahf
aas
jecxz
stos
repnz
adc
inc
std
push
sbb
and
stos
xchg
fmul
lds
mov
cmp
or
inc
in
add
cmp
nop
out
out
xchg
inc
jae
and
xor
sbb
cmpsb
mov
in
sbb
sub
outsl
add
aaa
push
sbb
loop
push
fs
test
scas
es
dec
insb
in
enter
clc
mov
pop
and
push
jl
fsubrs
pop
call
mov
jae
jle
pop
xor
incl
pop
jecxz
adc
in
mov
pop
xchg
in
jmp
sarl
int
pusha
mov
fdiv
data16
pop
ss
stc
pop
lahf
inc
call
jge
sets
xor
lock
dec
leave
loopne
lret
les
xchg
loope
add
dec
inc
lret
cld
lods
notb
pop
mov
pop
gs
pop
nop
xor
cmpsb
bound
sti
int3
pop
hlt
insl
dec
js
mov
push
xlat
lcall
out
xor
ret
mov
mov
test
cli
mov
add
lods
adc
adc
iret
push
sub
mov
mov
push
testl
pop
lret
inc
cmp
mov
pop
pop
sbb
sub
mov
adc
xor
mov
aam
test
data16
jmp
jp
and
push
sub
mov
push
inc
adc
dec
insl
mov
xchg
ret
cmp
ret
ja
inc
xor
call
out
int3
shrl
in
shlb
mov
fcomps
lock
jb
arpl
jns
fisttpll
rcpps
xchg
orl
add
loopne
scas
or
cmpsl
xlat
inc
sub
addl
sub
lods
and
mov
add
sub
pop
jno
pop
add
xchg
push
popf
push
mov
ja
xor
pop
sti
into
mov
in
or
sbb
inc
push
ja
mov
push
mov
iret
in
mov
add
std
jle
cmp
lock
pop
mov
add
rcr
pop
push
in
movsl
xchg
test
or
jns
xor
mov
leave
adc
xor
rclb
andb
scas
cmp
sub
hlt
mov
scas
addl
int3
mov
sti
icebp
add
and
ljmp
dec
push
xor
adc
cmp
out
loopne
lcall
cmp
lods
stos
sahf
push
ret
sti
push
das
mov
in
fnstenv
cld
or
mov
int3
and
mov
jno
sub
sbbl
dec
call
jne
xor
cwtl
push
scas
pop
and
out
xor
jmp
pushf
dec
lds
outsl
repnz
in
sbb
fs
xchg
icebp
daa
icebp
nop
jnp
dec
jge
ficomps
cltd
inc
sbb
jbe
adc
adc
aam
test
mov
scas
dec
jecxz
pop
cmp
xchg
adc
push
jbe,pt
jae
les
jge
adc
xchg
push
cmpsl
pop
push
push
fcoms
or
stos
or
rcr
movsl
xchg
fwait
addr16
mov
jae
test
mov
rolb
xorl
out
loopne
mov
pop
pop
xchg
in
psubb
mov
xlat
xor
or
loopne
lea
je
vmread
mov
imulb
icebp
xor
jnp
xchg
inc
jae
or
lcall
dec
push
mulb
mov
dec
repnz
inc
cmpsl
add
test
add
pop
mov
icebp
sbbb
push
rcrl
sbbl
dec
cmc
pop
cmpsb
pop
xchg
aas
pusha
stc
fistl
xchg
ret
jns
jmp
xor
leave
test
inc
jno
mov
repnz
jns
insl
xor
aam
popa
or
or
in
bound
inc
cmp
and
mov
clc
fwait
cmp
xchg
outsl
in
cmp
scas
aas
lcall
xor
push
jl
ja
adc
mov
enter
mov
dec
mov
faddl
subl
hlt
cld
inc
cli
mov
call
mov
movsl
fsubl
inc
add
and
pop
xchg
loope
fs
fsubrl
add
lret
cmp
ds
mov
pop
les
xchg
pop
pop
sti
test
jmp
jnp
aam
fwait
or
lods
pop
popa
sti
sub
stos
movsb
xor
cld
jmp
xlat
fildll
jnp
and
xor
es
int3
cmc
pushf
rol
adc
shlb
std
fs
xchg
mov
cmp
push
lahf
ret
aam
out
pop
jmp
cmp
jne
mov
std
and
stos
xchg
or
out
btc
mov
and
gs
out
xor
cld
sbb
fucomi
loope
stos
fisubs
stos
mov
mov
stos
lds
popa
lods
dec
rcrb
dec
jp
mov
fidivrl
repz
aas
sbb
je
pop
std
mov
add
cmpsb
aaa
jle
aaa
popa
sbbl
cmpsl
push
cmp
dec
pop
dec
imul
push
imul
aam
mov
jle
mov
sbb
adc
xor
and
push
push
addr16
ja
mov
mov
cmp
pop
sbb
mov
xlat
shrl
adcl
sbb
sahf
das
mov
and
jg
sub
clc
sarl
mov
mov
shll
call
jle
pop
mov
sub
mov
dec
ss
mov
mov
std
stos
das
mov
out
sub
or
jns
jb
sub
stc
add
push
loop
mov
filds
dec
fsubp
fdivs
mov
mov
out
in
arpl
fnsave
mull
aam
dec
dec
aaa
jge
xor
movsl
gs
xchg
nop
out
subl
mov
mov
xchg
mov
loopne
ss
iret
scas
lahf
js
jg
sti
and
shl
adcl
push
repnz
gs
repz
push
jg
cs
push
imul
cmp
pop
xor
xchg
push
notb
or
nop
clc
and
push
xor
shll
jmp
pop
lcall
insw
jo
xor
mov
jecxz
movsl
sub
mov
and
push
mov
mov
adc
loop
jb
or
lret
mov
cld
jnp
rcll
dec
nop
inc
rclb
je
mov
jo
add
mov
mov
mov
loopne
push
aad
lods
std
subb
ret
inc
insl
mov
scas
jg
imul
int3
popf
mov
mov
xchg
adc
dec
ljmp
sbb
addl
push
cld
subb
pop
push
fdiv
lea
mov
jnp
scas
stos
cmp
sub
lcall
xchg
pop
stos
mov
in
rcl
mov
sbb
rol
xchg
mov
aaa
xorl
pop
adc
rclb
xchg
push
sub
dec
push
push
stos
dec
testl
imul
cmpsl
mov
ljmp
and
aas
les
rorl
test
xchg
mov
cmpb
cld
and
dec
mov
adc
ret
out
jp
js
push
mov
push
pop
cs
xchg
shl
and
mov
xor
popf
stos
stc
cli
add
orl
xor
fldenv
sbb
ss
lock
pop
dec
leave
or
cmp
and
mov
loope
scas
repz
adc
mov
test
add
mov
inc
lods
adc
sbb
jb
call
insb
jecxz
inc
rclb
jb
loop
insl
sub
cmc
aam
js
lret
add
aas
push
lds
xchg
in
movsb
rcl
inc
jge
arpl
xor
sbb
xchg
inc
fwait
scas
inc
out
push
lods
enter
sti
aam
aam
cmc
lea
sarl
mov
adcl
shrl
push
call
mov
cmc
xchg
xchg
test
ds
fidivrl
stos
jmp
stc
in
push
scas
fucompp
icebp
mov
int
push
mov
or
inc
data16
xchg
mov
into
insl
int3
stos
popa
inc
stos
test
sarb
jmp
inc
mov
fwait
inc
push
push
push
xor
popf
xchg
aaa
pushf
pop
ds
lock
fcompl
aas
sarb
mov
lods
call
mov
lret
lcall
loopne
adc
jb
loop
shl
dec
movsb
mov
fsts
sub
lds
lret
out
adc
and
ja
jmp
rorl
adc
insl
icebp
clc
int3
nop
sbb
push
shlb
inc
test
lret
gs
xchg
cmp
andl
sahf
pusha
xor
fistpl
add
sbb
test
fmul
push
pop
addl
incb
pop
inc
jmp
and
jno
clc
sbb
xchg
mov
mov
or
cld
xor
mov
cld
dec
push
divb
mov
cmp
lock
test
inc
and
jo
in
outsb
adc
call
test
adc
int
or
vminpd
jp
add
dec
jl
fisubs
pop
cmp
xor
xchg
inc
mov
das
mov
jp
roll
sub
aas
mov
jmp
mov
cmp
sub
aad
outsb
imul
scas
inc
mov
rcrb
jp
push
out
mov
push
jmp
lret
cwtl
cmpsl
aam
sub
pop
push
adc
out
lds
push
orb
inc
pop
push
or
mov
push
lds
rep
sbb
pop
mov
adc
rcrl
aaa
add
sarb
ss
inc
call
pop
mull
jnp
push
sahf
sbb
jp
push
js
ret
jle
xor
xor
ret
dec
cmpsl
nop
mov
fisubrl
call
subl
xor
inc
sbbl
add
jb
and
mov
push
mov
popa
je
enter
jno
into
adc
add
inc
sub
lea
addr16
stc
dec
jg
adc
scas
ljmp
fsubrs
or
bound
pop
out
sahf
mov
sub
sub
vpaddsw
jo
sub
in
aaa
mov
stc
xchg
lahf
jp
pop
mov
push
adc
and
mov
int
bound
ds
xchg
in
and
scas
jae
mov
push
decb
inc
movsl
push
jge
adc
pop
rcrb
andl
lods
js
daa
cmpsl
dec
hlt
sti
sub
rorb
cltd
cltd
or
push
push
jnp
clc
in
push
enter
pop
divl
lret
repnz
ss
push
shrl
fiadds
mov
insb
out
pop
mov
cmp
mov
sub
push
in
add
jo
je
or
das
xlat
mov
cmpsl
icebp
loop,pn
cmp
das
or
shrb
bound
sarl
jp
pusha
add
mov
scas
pusha
jb
sub
lea
xor
sbb
ja
in
pop
adc
int3
leave
js
aas
inc
and
adc
je
enter
fldenv
inc
mov
int
pop
push
leave
xchg
adc
or
imul
lret
lahf
leave
imul
mov
sub
insb
xor
ljmp
int
gs
lret
rcll
aam
dec
sub
in
cmp
or
push
xchg
sbb
jnp
and
jl
xchg
sub
jnp
lock
in
mov
dec
cmc
das
rcrb
fnsave
mov
xor
pop
and
inc
sahf
leave
shll
andb
jge
mov
idivl
addb
out
les
std
loop
sub
cmpl
fld
mov
fldt
mov
mov
in
pop
or
test
xchg
dec
mov
pop
shr
add
sbb
xor
gs
xorl
das
call
cwtl
pop
xchg
cmp
jb
ja
inc
das
inc
jne
addr16
sbb
dec
clc
pop
fsubrs
ret
test
xchg
popa
pop
dec
hlt
leave
movsl
fucompp
or
sbb
fs
pop
xorl
inc
nop
leave
stc
jnp
jae
ljmp
mov
dec
rolb
inc
aam
cli
cmp
mov
adcb
inc
fadds
adc
mov
add
insb
sahf
mov
xchg
jge
shrb
xchg
add
aad
xor
sbb
xchg
cmp
sti
push
and
das
rolb
stos
push
mov
repnz
mov
xor
sub
jmp
outsl
pop
popa
fidivrs
subb
out
ljmp
cmpsb
mov
jno
sub
and
je
add
iret
push
hlt
inc
xchg
inc
xchg
mov
ljmp
in
js
lret
mov
fisubrs
xchg
cmp
mov
movsl
lret
pushf
add
sti
shr
insl
aam
sbb
dec
push
sbb
pop
mov
ds
out
int
inc
fistpll
adc
fdivrl
push
and
testl
hlt
idiv
sub
in
test
js
rcr
pop
sbb
loope
jno
cmp
inc
xor
out
lret
and
scas
pop
and
sub
add
jle
cmp
cmp
cmp
scas
in
test
mov
iret
sbb
push
iret
cmpsl
mov
sbb
push
lea
adc
jecxz
test
push
add
js
push
mov
ret
push
xor
xor
lods
mov
aad
nop
adc
sbb
outsb
jno
and
push
cmp
das
add
sbb
nop
ss
push
outsl
loopne
imul
and
push
bound
pop
xchg
mov
popa
cmp
stos
mov
mov
jns
loop
xor
lea
or
fadd
int
popf
xlat
cmpsl
mov
popf
std
mov
dec
mov
xor
xchg
jp
push
jge
jb
stc
or
scas
push
and
setno
and
and
mov
sub
loopne
pushf
lods
or
ret
jg
sub
adc
cmp
aam
adc
push
imul
into
gs
aas
repnz
cmp
test
int3
or
lods
clc
adc
in
push
adc
sbb
mov
and
or
test
mov
movsl
pop
push
mov
popf
pop
mov
fimull
fadds
shrl
or
add
jmp
cld
add
cmpsl
sub
in
cmp
ss
dec
scas
inc
into
push
push
test
mov
aaa
xchg
push
hlt
scas
es
mov
shl
adc
inc
lods
fldt
jae
cld
mov
mov
fwait
pop
stos
mov
and
pop
sbb
int3
in
cmc
adc
cmpsb
dec
mov
jp
outsl
or
lcall
fmull
lcall
mov
repz
dec
cld
xchg
mov
push
jg
jbe
outsb
and
in
jg
data16
cmp
xchg
add
push
inc
pop
popf
lods
imul
cwtl
dec
cmp
push
test
xchg
and
jbe
dec
sub
and
outsl
pop
sub
sub
mov
imul
add
sbb
stos
jecxz
popa
mov
popa
pop
test
test
jge
imul
mov
mov
mov
pop
cs
push
jp
xor
negl
push
xor
dec
lods
andl
mov
sub
outsl
in
mov
or
lahf
insl
jge
or
xchg
mov
and
pop
jecxz
fildll
sbb
hlt
jne
jnp
sub
mov
sti
add
cld
mov
lret
mov
frstor
adc
and
pop
pop
push
jnp
fwait
test
iret
test
popa
xor
loop
inc
pop
icebp
cld
mov
fsubrl
repnz
push
sub
imul
sbb
pop
xor
add
mov
or
fisttpll
repnz
dec
pop
cmpsb
add
add
pop
and
inc
stc
xchg
inc
push
mov
push
push
push
clc
iret
outsl
ficoms
jmp
add
xor
shll
movsl
mov
shrb
and
aas
stos
or
mov
mov
lock
aad
adc
push
jns
dec
leave
mov
outsl
int3
movsb
xchg
cmp
fistl
xor
and
nop
call
lret
xchg
add
lcall
das
mov
mov
fwait
cltd
aam
push
adc
bound
mov
test
xor
in
int3
adc
lret
es
imul
cltd
xchg
lret
dec
cmp
outsb
adc
xchg
loop
ret
ss
dec
pop
xchg
and
shr
mov
jmp
dec
pop
inc
sub
sub
mov
sub
or
cmp
cmp
sbb
bound
or
clc
xor
mov
fiadds
stos
mov
incl
adc
push
xor
icebp
test
or
xorb
jb
inc
in
roll
sarb
push
push
xorl
xchg
imul
loop
rclb
mov
jp
loopne
mov
jo
inc
xchg
cld
sbb
std
dec
xchg
movsb
jle
int
subl
js
sub
out
adc
iret
xchg
mov
mov
push
out
in
push
mov
mov
dec
sbb
aaa
negl
inc
clc
jmp
push
and
imul
jae
imul
xor
in
xchg
icebp
enter
adc
iret
mov
xchg
dec
popa
and
movb
insl
push
icebp
pop
test
adc
mov
or
sub
jno
sbb
mov
dec
stos
dec
cmpsl
push
aam
sub
mov
cmp
adc
mov
std
loopne
push
dec
nop
jp
les
sbb
xchg
aad
mov
mov
sbb
adc
cli
out
stos
xchg
les
or
inc
push
lods
rcrl
push
cmp
or
xchg
mov
fdiv
pop
jb
push
sub
inc
sub
and
jp
or
jo
shlb
in
stos
and
sbb
cmp
xchg
out
sub
out
call
push
jecxz
mov
shll
nop
lahf
fstpt
xchg
rcrb
test
inc
jne
jge
daa
cld
pop
rcrb
imul
out
mov
sub
xor
shll
cltd
vpcmov
clc
jae
adc
and
fiaddl
push
into
add
das
orl
lret
data16
sti
dec
xchg
mov
jb
jg
lods
pushf
sbb
xor
cmpsb
rcrl
repnz
cld
jno
dec
push
gs
loopne
or
jp,pt
rorl
shrb
mov
cmc
pushf
mov
pop
push
pop
iret
adc
add
aas
mov
jae
ret
inc
xlat
adc
xchg
or
inc
sbb
movsl
out
adc
out
orb
iret
aad
insl
fsubs
pop
popa
or
xor
push
leave
jns
push
hlt
cs
pop
xchg
dec
ja
popa
adc
jmp
bound
xchg
sahf
sub
jmp
xor
or
mov
and
outsl
xchg
mov
xor
neg
sub
fdivl
sub
push
mov
out
jl
loope
xorl
lahf
mov
mov
push
mov
ljmp
push
pop
imul
xchg
adc
sbbl
fwait
xor
push
outsb
pop
ja
mov
aad
div
mov
addb
orl
pop
fwait
mov
sbb
dec
hlt
xchg
add
shrb
jb
pop
in
pushf
in
sub
negl
mov
jmp
jo
pop
push
mov
jmp
inc
cltd
sub
xorb
out
cli
pusha
xchg
add
fdivl
popw
in
in
sbb
enter
or
dec
shl
ret
mov
decl
mov
stos
mov
clc
adc
std
fstpl
or
lea
test
lret
pusha
cwtl
sarb
iret
inc
dec
repnz
cltd
in
dec
lahf
loope
jo
aad
pop
push
lods
add
aam
mov
imulb
shlb
inc
inc
ds
xchg
loopne
mov
adc
loopne
out
sbb
aas
lcall
inc
subb
mov
mov
jb
pop
push
push
fnstenv
in
repnz
add
sbb
nop
test
call
push
sbb
jl
ret
js
scas
inc
xor
dec
enter
pusha
xchg
add
xchg
andb
sbb
mov
icebp
push
les
adc
inc
xchg
ret
insb
mov
pusha
rcrb
jnp
jae
hlt
sarl
cmp
dec
dec
xor
jl
adc
jl
repz
cmp
lret
and
adc
mov
mov
push
push
mov
push
pusha
mov
sub
enter
mov
out
or
xchg
jl
adc
mov
mov
andl
pop
stos
idivl
sbb
orb
sub
cs
pop
iret
arpl
out
mov
sub
adc
jne
add
adc
cld
and
inc
and
repnz
add
adc
test
mov
mov
sbb
cmp
and
stc
push
push
lret
mov
push
add
lcall
sub
dec
push
push
les
jecxz
add
mov
mov
and
pop
insl
aaa
enter
lret
ret
adc
or
cmc
mov
add
jecxz
or
testb
icebp
shl
mov
fbld
pushf
das
das
lahf
shr
xor
addr16
cltd
mov
scas
repnz
loope
jae
inc
jb
fwait
cmp
pop
ret
or
icebp
imul
out
or
add
pop
push
xor
cli
fstpl
lods
in
sub
xlat
inc
inc
addb
xor
cmp
stos
and
push
repnz
imul
dec
je
pop
aas
lcall
sub
fstl
pop
mov
loopne
shl
xchg
daa
push
add
pop
mov
hlt
cmp
mov
mov
dec
cwtl
pop
fcomp
jbe
mov
int3
es
out
iret
lret
jp
xlat
loope
mov
mov
mov
jl
add
jne
sub
mov
lret
fiadds
js
lods
inc
fidivrs
adc
adc
pop
xchg
loope
arpl
out
lods
xor
insl
outsb
jbe
icebp
add
inc
push
arpl
test
iret
xchg
scas
inc
mov
push
xchg
aas
imul
enter
cmc
fcmovnb
fsubl
jmp
inc
pop
lods
dec
cmpsl
and
test
sahf
cmp
and
lret
or
jns
repz
insb
mov
push
adc
nop
cmp
xlat
fs
fistps
xchg
hlt
mov
mov
inc
fcmovbe
fcoml
pushl
jp
lret
aad
in
and
inc
ret
test
cmpsl
jo
push
lods
loopne
pop
aam
adc
movsb
mov
pop
js
pop
sbb
xorb
jle
movsl
lahf
cmp
aam
and
mov
sar
push
cmpsb
leave
mov
in
pop
insl
pop
hlt
and
popa
hlt
inc
sub
mov
xor
lret
xchg
aad
stc
mov
jmp
cld
imul
mov
pop
lret
pushf
pop
sahf
dec
push
into
aad
mov
mov
fldt
xor
pop
stos
mov
test
dec
dec
mov
sbb
mov
xchg
popf
jl
hlt
lods
or
out
pop
in
jp
pop
pop
dec
cmp
mov
cmp
testb
mov
inc
lret
push
repz
pushf
pushl
insl
pushf
ss
or
or
lcall
adc
repz
pop
jle
std
imul
xchg
test
mov
dec
xchg
xor
jne
jb
pusha
cmp
daa
jo
adc
add
dec
add
cli
mov
mov
fldcw
test
push
in
pop
inc
dec
in
das
lods
jmp
andb
push
std
scas
test
fistpll
pop
and
mov
daa
adc
cltd
add
fwait
push
push
or
sub
mov
mov
icebp
in
popa
cld
lahf
btc
dec
dec
xor
fnstsw
mov
cmp
cltd
aaa
loop
test
bound
mulb
loop
stos
mov
adc
sub
jle
push
aas
and
pop
jns
adc
pop
aaa
cmp
in
lock
push
dec
movsl
rol
repnz
out
lods
push
mov
movsb
adc
pop
fisubs
mov
sub
cltd
gs
and
fs
pop
lcall
incb
aad
in
jno
fcomi
lea
xor
xchg
test
push
jp
xchg
mov
lods
lea
mov
repnz
jmp
aas
cmc
pop
jae
sbb
push
fbstp
xor
sub
push
pop
lods
call
pop
mov
mov
aas
cwtl
negl
and
nop
mov
or
inc
mov
push
in
jecxz
cwtl
outsl
test
dec
jae
lfs
mov
inc
sub
mov
sub
in
nop
xchg
xor
cs
inc
dec
add
mov
out
je
aaa
xlat
decb
jns
mov
inc
xchg
aaa
adc
les
xchg
pop
jg
test
lret
pop
cmp
inc
fists
das
xchg
movsb
movsl
xchg
or
add
add
ja
push
dec
ss
nop
jo
xlat
cmp
or
sub
mov
jbe
adc
imul
mov
pop
add
fs
aas
int3
cltd
out
pop
fildl
push
outsb
adc
dec
push
jae
jl
loopne
movsb
mov
rolb
or
stos
or
mov
add
and
inc
aaa
adc
decb
adc
push
scas
and
lock
push
mov
pusha
insl
aad
rolb
sbb
pop
dec
add
push
in
cmp
cs
hlt
repz
xlat
dec
bound
pop
sarb
test
idivl
or
and
and
fistpll
xor
jae
inc
push
mov
xchg
aas
mov
out
shll
les
das
jo
incb
rcll
sbb
and
lcall
or
and
mov
mov
push
push
mov
hlt
and
leave
lret
jecxz
xchg
add
sbb
jb
movb
sub
add
or
add
xchg
data16
gs
roll
mov
push
push
jmp
xchg
push
and
mov
add
mulb
ljmp
inc
or
js
push
rorl
push
dec
imul
sbb
lret
sbb
cmpsb
fisubrl
xchg
jbe
cmp
stos
mov
jmp
mov
pop
mov
xchg
adc
or
div
xor
cmc
push
mov
test
or
std
mov
sbb
dec
inc
add
sbb
addr16
aam
ret
pop
inc
insb
mov
jmp
push
jno
imul
hlt
es
adc
sub
insl
cmp
shlb
add
sbb
test
add
lahf
push
add
jecxz
lods
cld
lret
movsl
das
iret
mov
cmpsb
les
and
or
arpl
and
out
jl
loop
mov
add
imul
dec
pop
pop
stos
ss
inc
cltd
scas
dec
fwait
jnp
aad
pop
pop
jge
aam
xchg
fcomps
call
daa
lods
jge
jecxz
xor
jns
lds
fldl2e
sti
dec
mov
or
pop
out
in
adc
insl
int3
cmp
lret
sub
fisubrs
lret
outsb
cmp
mov
arpl
pop
add
mov
pop
les
loop
in
pushf
mov
testb
mov
cmp
jge
movsl
add
test
add
ret
push
scas
mov
ss
mov
ljmp
ds
frstor
pop
push
push
dec
insb
dec
cmp
rcll
push
jb
add
fwait
jb
push
add
adc
adc
mov
pop
fs
push
mov
jnp
dec
scas
sub
add
cwtl
and
cld
sti
or
test
cmp
lods
ret
stos
pop
fbld
outsb
jp
mov
loopne
fcompl
add
push
popa
add
rcll
adcl
mov
jne
jecxz
pop
lret
xor
fmull
pop
fists
inc
clc
clc
lods
rorb
jnp
cltd
push
or
inc
cmp
push
add
push
pop
push
addr16
test
pop
dec
lcall
nop
pop
jns
into
scas
pop
aad
cmc
cmp
mov
loope
scas
pop
mov
push
out
sbb
mov
push
ret
push
mov
jae
shrb
cmp
clc
lds
ret
repz
fdivrs
mov
lock
cmp
stos
sbb
jae
sbb
push
pop
mov
xchg
jle
push
xchg
jge
out
pop
push
jno
loope
mov
or
push
xlat
jns
test
mov
xor
mov
mov
or
cld
pop
jecxz
add
in
mull
mov
aaa
sbb
ja
mov
sbb
aas
test
cmp
into
lds
pop
fnsave
jg
push
fwait
rorl
xor
ds
push
mov
sub
push
xlat
jne
imul
xchg
iret
test
in
add
mov
pop
ret
ja
insl
dec
sub
mov
loope
cmpsb
push
add
dec
mov
mov
inc
push
adc
adc
pop
dec
mov
adc
mov
ljmp
gs
xchg
xor
jle
fwait
dec
test
imul
stos
in
fbld
mov
into
push
pop
or
xchg
fidivs
ret
xor
push
movsb
sub
add
insl
sub
stc
repnz
mov
jae
sbb
cs
pushf
fmuls
mov
mov
lret
es
xchg
push
xchg
adc
pop
das
add
mov
pop
aad
out
jbe
int3
pop
jp
push
pop
cmpsl
ss
nop
lea
xor
mov
cltd
cmp
mov
in
arpl
sbb
stc
pop
cltd
mov
sub
in
xchg
sub
mov
rorl
in
inc
cmp
aad
push
dec
sahf
mov
imul
mov
insl
negb
das
push
js
fisttps
inc
in
xchg
pop
cmc
push
adc
inc
or
test
fs
push
sahf
and
mov
jmp
sbb
xchg
fistpll
cwtl
inc
outsl
pop
out
mov
fwait
xor
xchg
leave
jle
lahf
lds
sub
addb
xchg
dec
xchg
cmp
stos
imul
and
fs
out
add
add
rcll
push
or
mov
push
ljmp
fisubl
push
or
dec
jbe
aas
mov
stos
push
shr
mov
push
pusha
dec
mov
pop
xor
mov
in
mov
jmp
dec
mov
ds
add
push
add
xchg
scas
mov
pop
inc
push
mov
dec
sub
or
aam
adc
int3
sub
sbb
mov
or
pop
mov
sub
sub
sub
add
jns
rcll
cmc
mov
add
sub
jp
into
cmp
push
jns
sub
outsl
sbb
cmpb
aam
mov
mov
and
dec
mov
loop
jne
pop
sti
cwtl
jnp
cs
fdivrs
cmc
fwait
sahf
xchg
push
push
ja
push
loop
das
f2xm1
call
sbb
aaa
je
jmp
mov
cmp
dec
imul
sub
mov
xchg
out
cmp
mov
sub
leave
inc
lds
stos
or
mov
xchg
test
mov
in
cmp
sbb
mov
sbb
or
mov
leave
inc
mov
decl
push
ret
sti
enter
inc
pusha
mov
movsb
sbb
mov
enter
and
test
nop
stos
push
sub
xor
nop
xchg
mov
and
js
jbe
jno
mov
or
mov
mov
xlat
mov
dec
cmp
mov
cli
xchg
test
rorl
daa
jnp
aaa
xchg
in
aas
test
push
sub
and
jnp
mov
push
outsb
imul
mov
jp
pop
pop
jmp
inc
jno
xchg
ds
ja
loopne
inc
pop
divb
mov
push
lods
fldt
shlb
movb
clc
jp
imul
jle
or
push
push
movl
inc
lods
sarb
adc
imul
mov
int
hlt
call
and
jg
pusha
or
push
jb
or
fldenv
scas
popf
enter
sbb
inc
or
pop
ds
pushf
shlb
jne
jno
or
sub
fisubrl
adcb
push
lds
pop
cmc
cmp
mov
cmp
add
hlt
in
mov
sub
xor
cld
negb
adc
mov
dec
xchg
fs
xor
cld
mov
fisubl
sti
stos
cmpsb
pop
fs
jge
hlt
out
mov
cmp
adc
mov
push
inc
dec
and
sub
mov
dec
and
and
jmp
adc
loope
push
dec
shrl
lock
stos
cmc
adc
arpl
pop
xor
cmpsb
push
aas
push
cltd
or
movsb
xor
mov
mov
pop
lcall
filds
mov
mov
dec
inc
das
dec
mov
xchg
add
aam
cmp
movsl
fs
push
stos
outsl
cs
nop
sti
jb
out
les
rolb
data16
pop
or
cmp
jp
cmp
lahf
daa
mov
pop
sbb
lds
inc
fidivs
hlt
adc
int
xchg
andb
dec
jl
in
mov
cmpsb
adc
push
std
jno
jno
adc
fldln2
clc
sub
inc
pop
fsub
push
inc
and
mov
repnz
in
insb
inc
mov
stos
and
adc
stos
jb
mov
sbb
call
mov
xorl
mov
mov
cmp
rol
stos
xchg
mov
inc
shrb
lds
mov
enter
stos
cmp
pushl
xchg
mov
jecxz
sub
mov
enter
cmpsl
jl
ljmp
out
in
popa
ret
mov
int3
xor
bound
mov
mov
scas
lcall
inc
int3
adcb
out
xchg
xchg
pop
pop
push
loopne
fcomps
stc
dec
cltd
loope
loopne
lods
sahf
inc
lods
cmp
push
js
pop
jge
cmp
popf
fldcw
js
rcll
xchg
in
cwtl
mov
rcr
jae
gs
mov
xor
xor
incb
jae
repnz
lahf
es
push
push
pop
pop
xorl
jmp
mov
int
xchg
fcomps
test
and
int
mov
popf
mov
push
jp
ja
stos
pop
insl
scas
xor
sbb
mov
lret
in
xor
out
dec
mov
or
mov
ret
pop
jne
or
mov
shlb
mov
inc
push
adc
cmp
lods
adcl
push
mov
and
call
push
inc
call
data16
inc
jl
inc
xchg
cmp
xor
pop
add
or
adc
push
insl
fwait
cmp
jbe
in
adc
inc
iret
adc
data16
mov
popf
push
sbb
mov
bound
clc
dec
and
sbb
mov
movsl
clc
addr16
popa
mov
or
xor
rorl
fnsave
sub
cli
xchg
cltd
movb
pop
enter
das
fisttpl
cltd
xor
cli
mov
cs
pop
jb
repnz
addr16
and
sub
repz
cmpsl
std
push
das
lock
mov
dec
cmp
mov
addr16
in
mov
ret
test
pop
xchg
lahf
jg
int3
xchg
cmp
push
sbb
push
jno
pop
mov
int
jl
adc
into
rol
fstpt
mov
repz
fsubr
push
mov
adc
and
int
popa
xchg
cwtl
jp
push
xchg
sub
sarl
sbb
shl
xchg
and
pop
packssdw
adc
jge
fdivl
sbb
dec
mov
jne
pop
jge
mov
fbstp
xchg
daa
adc
mov
pushf
xchg
stc
push
mov
cmp
pop
fwait
push
inc
hlt
add
std
push
mov
mov
sub
fldenv
out
and
pop
sub
and
jnp
repz
jnp
leave
sbb
mov
vpmulhuw
lods
jae
inc
imul
xchg
imul
stos
rcl
mov
int3
or
popf
sub
arpl
scas
jne
data16
xor
popa
in
mov
lcall
popa
and
xchg
fcmovnbe
mov
lods
mov
add
mov
cmp
ss
cmp
or
repz
or
pop
mov
popa
pop
mov
sbb
adc
lods
bound
incl
mov
sbb
mov
and
lods
jnp
jne
jmp
add
sahf
jbe
std
mov
cmp
inc
xchg
into
call
ss
mov
dec
xor
loop
mov
sbb
push
xchg
aad
sub
xor
or
imul
sbb
fwait
mov
insl
aad
popf
cmp
dec
popf
xor
jecxz
push
je
xor
insl
orps
xor
cmpsb
in
icebp
dec
or
xchg
pop
inc
imul
cltd
not
mov
or
clc
aaa
xchg
push
push
dec
loopne
sbb
cmpsb
mov
pop
adc
push
inc
call
ficomps
pop
neg
pop
test
sub
add
dec
sbb
sbb
nop
push
xchg
and
mov
stos
mov
or
aas
cmp
push
mov
pop
adc
shll
jmp
push
imul
imul
and
icebp
cmp
fldcw
xor
divl
stos
lds
pop
jmp
sbb
jg
rcll
push
mov
stc
or
or
adc
int3
push
add
arpl
fwait
fwait
pop
sub
sbb
mov
ja
cmp
int
jmp
xor
add
or
ficompl
popf
lret
cwtl
add
inc
cmpsb
icebp
or
pop
ds
inc
mov
mov
xor
cmp
xchg
pop
aam
cli
sarb
lahf
das
or
out
pop
mov
int
inc
inc
pop
inc
call
jg
test
test
jb
add
mov
sar
outsl
xor
clc
xchg
pop
push
hlt
or
xchg
lods
jo
push
mov
xor
dec
outsl
loopne
jge
or
dec
pushf
mov
and
push
repz
inc
and
push
stos
xor
push
cmpb
sahf
clc
add
addr16
pop
pop
jne
movsb
subl
jno
inc
and
jns
ficomps
into
cmp
jns
pop
outsl
fwait
icebp
shrl
xchg
inc
pop
xor
test
aad
xchg
sub
pop
shlb
inc
test
iret
push
cmpsl
cmpsl
out
std
mov
popa
movups
cwtl
mov
stos
outsb
cli
pop
mov
mov
insl
shll
mov
loope
push
aaa
cmp
push
lcall
nop
ja
test
add
ljmp
sub
int3
push
sub
icebp
inc
dec
mov
add
jp
xchg
jp
xchg
dec
sub
adc
jmp
xor
sti
mov
mov
in
cmp
and
jns
pop
ds
add
cmpsb
cmpsl
cwtl
mov
mov
sahf
nop
mov
mov
xchg
sbb
jb
cld
cmp
mov
mov
fs
orl
dec
dec
in
mov
cmp
ja
rorb
jl
sbbb
mov
adc
iret
sub
and
xlat
sbb
test
stos
inc
adc
xchg
mov
rclb
test
adc
repnz
enter
scas
mov
xchg
dec
pop
push
push
sub
in
iret
pop
jbe
lock
mov
rcll
mov
push
mov
bound
test
sbb
xchg
fidivrl
cwtl
cmp
loope
std
imul
jge
addr16
stc
sbb
test
jbe
mov
mov
inc
inc
lahf
std
sub
mov
mov
xor
xor
je
lds
xor
mov
mov
push
mov
push
jo
lea
fadd
sub
cli
aas
cltd
pushf
test
xchg
subl
bound
xchg
mov
or
dec
cmpsb
dec
add
cmpsl
sbb
adc
mov
into
popf
dec
sub
inc
pushw
pushf
adc
or
leave
and
push
fwait
ficomps
rclb
sti
mov
push
xchg
fldt
mov
adc
icebp
imul
out
out
out
sti
dec
out
jae
pop
push
sti
adc
jno
test
rcl
gs
orb
lea
movsb
rclb
mov
adc
jo
xlat
test
ljmp
add
cmp
sub
dec
sub
nop
or
add
mov
movsl
clc
fnsave
out
mov
cmp
test
add
shlb
jmp
imul
ss
jmp
sysexit
cmp
sti
dec
sahf
adc
stc
jge
inc
jecxz
xor
push
push
inc
and
pop
fsts
mov
pop
jne
pushf
loop
add
orl
jbe
dec
jmp
mov
pop
fsubrl
sbb
aas
cmpsl
adc
and
icebp
jle
clc
lret
lods
inc
dec
pop
insb
and
mov
jge
lcall
add
test
imul
jmp
ret
shl
dec
cwtl
add
test
push
inc
and
inc
push
sub
dec
mov
int3
addl
dec
movsl
popa
xor
and
movsb
ljmp
push
dec
fildll
icebp
mov
lock
cmp
xor
ss
and
push
loopne
arpl
or
jbe
daa
sub
jg
pushl
cld
push
loop
push
vcomisd
mov
mov
add
adc
mov
mov
cmp
sbb
imul
sbb
adc
fcoml
fwait
cltd
cmpb
sbb
rclb
mov
inc
incl
inc
or
cs
sub
lret
fcoms
movsb
cmp
push
dec
lea
sbb
xchg
inc
rorb
call
insb
movsb
cwtl
fwait
in
fdivl
sbb
out
push
xchg
adc
mov
ror
test
lods
lahf
insb
movsl
mov
jge
pusha
outsl
pop
cmp
xchg
xchg
rcrl
pop
adc
mov
ljmp
push
mov
add
add
ja
outsl
mov
mov
and
dec
ja
jge
out
insb
jne
fisubrs
fdivp
push
cwtl
clc
mov
mov
loopne
shlb
in
test
lea
div
add
je
ljmp
dec
mov
adc
aam
mov
jge
outsl
test
mov
lea
cltd
or
jns
sub
movsb
lret
imul
fdivrl
clc
sarb
sub
in
icebp
xchg
sbbb
add
negb
inc
xor
test
fstps
add
jecxz
movsl
mov
mov
imul
mov
sub
cmp
inc
das
lret
fucomp
adc
jae
inc
sbb
cmpsb
jae
out
sbb
aaa
xlat
std
sub
inc
jg
cmp
stos
jg
dec
into
mov
pop
cwtl
sahf
filds
jo
xor
or
pop
pop
mov
add
jbe
mov
repnz
add
jns
repnz
in
je
jmp
dec
sub
adc
push
dec
inc
imul
lds
adc
flds
adc
inc
mov
add
cltd
push
and
pop
dec
cmp
pop
mov
inc
imul
test
sahf
add
xchg
out
mov
fdecstp
inc
movsb
int3
test
fwait
stos
shll
dec
dec
or
cli
inc
dec
cld
dec
sub
mov
pop
out
leave
outsl
sbb
lret
test
jae
mull
mov
inc
or
xchg
fsubrl
push
fwait
jnp
movsb
les
pop
pop
sahf
std
jp
clc
repnz
push
dec
pop
rcrb
inc
out
jg
test
sbb
lcall
fsts
dec
jmp
ja
out
xchg
adc
imul
push
dec
bound
sahf
jp
popa
or
xor
jb
ror
stc
xchg
ja
and
jne
mov
outsl
cwtl
inc
pop
testl
cmpsb
rolb
mov
xchg
adcl
push
call
fldt
xchg
inc
out
adc
cmpsl
xor
cmc
jmp
push
mov
jp
imul
or
xor
inc
push
xor
fwait
and
loope
das
ret
cwtl
add
filds
jbe
stos
fwait
xor
adc
mov
cmp
jno
inc
in
sbb
cld
fldl
cmpb
int3
pop
test
sub
loop
push
test
cwtl
aas
sbb
dec
mov
push
hlt
mov
push
sub
aam
nop
push
sub
jp
daa
pushf
sub
mov
scas
imull
sub
sbb
dec
nop
add
popf
cmpsb
xor
insb
sub
fsubp
cli
lcall
loop
or
shll
ljmp
cmp
addb
mov
cmp
push
cmp
popf
pop
add
cmp
adc
repnz
xchg
cli
inc
lret
imull
or
inc
aam
daa
push
sbb
xchg
jae
aam
sbbl
bound
or
imul
sbb
xchg
sbbb
rclb
sbb
mov
inc
mov
scas
mov
imul
out
inc
sahf
xchg
ret
stc
rol
xchg
or
and
gs
sub
imul
push
cli
pcmpgtd
jle
movsb
adc
aas
jle
mov
bnd
outsl
pop
or
mov
leave
mov
lcall
in
xor
addr16
fdiv
dec
sarl
mulb
xchg
push
inc
cmc
mov
rcrb
aad
xorl
sahf
fistl
sbb
jmp
out
int3
jb
mov
fs
sahf
add
cmp
js
sbb
mov
and
jecxz
outsl
loop
in
shrl
inc
or
test
aaa
pop
adc
lods
push
out
cmpb
sahf
int
mov
lcall
sbb
sub
push
push
push
sub
aaa
sti
sub
cmp
test
xor
enter
add
jp
loop
adc
pop
sbb
sbb
pop
test
in
add
idiv
xor
xchg
jnp
and
sti
jmp
fimull
push
xchg
pop
dec
outsl
movsl
xor
dec
pop
mov
imul
lahf
and
mov
negb
out
xchg
ljmp
add
rclb
or
push
add
cmpsb
lea
test
mov
clc
fsubrl
sarb
jg
sbb
xchg
add
push
pop
cli
clc
lret
cmp
lcall
mov
add
rcrb
lods
cwtl
ljmp
stos
cmpl
test
cmc
sub
adc
inc
in
sbb
or
outsl
and
sbb
shlb
jge
sbb
je
adc
mov
jae
jp
test
xchg
test
xor
sbb
jg
rorb
jge
fs
add
adcl
add
ss
xor
jne
inc
jbe
mov
addr16
mov
adcb
in
jbe
dec
orl
push
shlb
adc
pop
flds
orl
pusha
and
jle
rclb
jl
in
adc
subl
call
jg
or
loop
es
push
add
and
out
add
int
cltd
dec
loop
shlb
fbld
test
mov
out
and
sarl
clc
ja
push
jge
insl
sub
or
pop
imul
push
fs
mov
je
and
mov
xchg
sti
cmpsb
movsb
lret
ret
fstpl
clc
mov
xchg
subb
daa
xor
inc
fxch
push
sbb
fnstsw
mov
xchg
xchg
add
or
repnz
dec
dec
flds
sub
sbb
in
int3
xor
stos
jp
mov
or
test
and
out
add
dec
mov
cmp
cmp
aaa
iret
adc
aas
push
inc
mov
cmpsl
adc
sbb
mov
jp
scas
mov
adcb
mov
add
mul
rorb
filds
fistps
pop
xchg
fsts
mov
lcall
int3
sbb
jecxz
stc
mov
push
out
sbbl
jae
cmp
stc
adc
in
arpl
add
and
sbb
dec
sub
xchg
aaa
adc
xchg
int3
pop
push
lret
mov
mov
add
test
shrl
cld
test
xor
push
ret
jecxz
shrl
into
dec
and
add
jl
add
mov
je
mov
mov
xor
cmp
pop
loopne
xchg
dec
rcll
pop
imul
test
xchg
in
and
imul
es
and
adc
fbld
ret
dec
out
cwtl
cmp
push
xor
mov
decb
dec
ss
xchg
sub
lcall
mov
mov
bound
mov
stc
inc
rorl
test
icebp
addr16
sub
pop
adc
testl
fisttpll
xor
fcoml
or
pop
mov
add
inc
es
mov
iret
fistl
and
loop
mov
nop
jbe
xorl
call
icebp
int3
mov
xchg
ret
dec
cmpsb
lcall
adc
dec
xchg
lret
push
sub
push
repnz
out
xchg
push
pop
mov
pop
pushf
sbb
mov
mov
in
cs
aam
mov
dec
and
bndldx
aam
jnp
jo
movsb
lret
pop
mov
cs
dec
iret
syscall
fcomi
je
jle
push
or
ja
and
test
inc
push
push
bound
cmp
mov
and
mov
push
mov
mov
push
inc
std
mov
cmp
jne
pop
dec
fimull
int
movsb
mov
pop
inc
cmp
push
ss
lret
lcall
and
aas
dec
and
mov
in
push
or
or
cli
jg
insb
dec
ret
push
dec
arpl
jg
arpl
or
mov
push
push
fidivrs
cmp
aam
jmp
sub
fmull
mov
adc
into
idiv
cmpsl
int
jo
mov
inc
push
mov
mov
insb
add
push
mov
and
push
jns
nop
add
xchg
pusha
pop
mov
rcrl
push
mull
jmp
test
sbb
in
lods
imul
xchg
test
push
repz
inc
out
sub
int
cmpsb
xor
daa
fisubs
push
fcomp
sub
cli
xorl
add
jl
mov
add
inc
repz
addb
jecxz
insb
xchg
xchg
lret
mov
daa
cmp
xlat
leave
test
xchg
stos
rolb
scas
xchg
stc
inc
sbb
insb
or
pop
mov
sbb
nop
jmp
jae
push
jbe
lods
push
xchg
fbstp
std
movsl
or
lcall
sbb
mov
jnp
cmp
dec
mov
push
adc
icebp
enter
xchg
rcrl
stos
add
push
inc
jns
js
cmp
popf
pop
in
mov
movsb
jae
dec
scas
loope
mov
mov
std
aad
xchg
es
mov
into
loope
mov
in
cltd
jne
jne
out
cmp
cli
out
mov
mov
fwait
dec
insb
ja
repz
outsl
pop
test
es
cmp
xchg
xor
and
mov
push
push
inc
je
jmp
jns
jg
loopne
sti
jmp
int3
pop
cmpsl
dec
sti
fildl
jge
divl
dec
pop
dec
aas
push
cltd
inc
lods
add
aas
imul
lods
xchg
dec
adc
insl
filds
and
pop
ljmp
shufps
xchg
mov
jno
enter
bound
jg
fwait
out
in
push
pop
sub
add
lahf
imul
add
push
adc
pop
das
jmp
jnp
out
add
lods
aam
xchg
push
mov
hlt
ds
xchg
imul
cmp
cmp
add
std
adc
push
imul
add
cmpsl
lcall
mov
jge
mov
and
mov
push
jp
cmpb
push
xor
popf
lahf
mov
in
cmp
shll
out
repz
ret
int3
pusha
data16
jo
mov
inc
in
jbe
fistps
out
sub
cmpsl
cmc
push
cmc
mov
inc
sub
cltd
push
mov
loopne
and
dec
xorl
out
lret
scas
and
dec
jmp
jp
adc
jmp
xchg
loopne
rcr
pop
cmp
loopew
push
inc
xchg
dec
jo
cmpsb
xchg
test
mov
gs
push
ds
xchg
mov
jp
cmp
dec
out
aas
ss
mov
inc
es
xchg
in
push
pop
test
stos
iret
pop
and
mov
sub
adc
mov
xchg
insb
sub
inc
sbb
int3
scas
sahf
add
push
sbb
ljmp
data16
mov
xor
in
sbb
or
stos
or
inc
jb
adc
pop
scas
mov
out
imul
adc
fs
mov
mov
pop
leave
imul
xchg
daa
test
dec
xor
mov
bound
adc
andb
push
incl
inc
push
test
mov
pop
mov
jns
aam
dec
nop
cs
adcb
mov
jno
movsb
lahf
cmp
push
fiaddl
mov
leave
mov
aas
and
rcr
jns
insb
mov
in
std
stc
in
xchg
jmp
mov
mov
add
jmp
rcrb
pop
stc
cmp
test
mov
lods
mov
or
cli
inc
jg
sbb
add
addr16
mov
mov
push
sbb
jecxz
add
test
or
out
jecxz
lret
in
fstps
shl
xorl
je
in
pop
mov
cmp
mulb
aad
arpl
ss
xchg
popa
mov
mov
shlb
fmuls
xor
push
pop
outsl
mov
cmp
data16
cli
sbbl
fnstcw
adc
sbb
inc
xchg
ficomps
mov
or
push
sti
movsl
push
addr16
xor
mov
sub
cmp
adc
ljmp
xchg
inc
xchg
dec
mov
repz
xchg
and
jmp
inc
add
push
gs
cmp
mov
add
xchg
xchg
lock
and
dec
popf
jo
lods
leave
stos
inc
cmpsb
cli
mov
lret
ret
inc
sub
mov
or
bound
mov
xor
push
lcall
dec
fsubs
jp
and
add
data16
mov
push
adc
ficomps
leave
mulb
loope
aad
mov
lods
inc
stos
xchg
dec
xlat
pushf
jge
mov
adc
in
xor
xchg
push
dec
or
push
js
aaa
lods
lock
jge
imul
push
mov
sbb
dec
pusha
enter
shl
lds
xchg
jmp
cli
inc
enter
pushf
rol
mov
fsubrs
xlat
jbe
aas
ja
jnp
outsb
out
lret
lret
xor
lea
or
das
dec
into
mov
std
les
cld
test
or
neg
sub
nop
test
loopne
mov
out
in
sbb
cmp
cmp
lea
cmp
fistl
push
outsb
push
imul
sub
loop
adc
stos
adc
in
adc
out
int3
loopne
js
jge
scas
dec
lods
jg
in
cmp
or
or
inc
les
js
dec
dec
lret
cmp
or
repnz
pusha
jl
lds
pop
xor
and
adc
lods
addr16
loopne
dec
rcrb
jl
rorb
xor
fsubrs
inc
or
inc
sub
leave
mov
add
negb
cmp
mov
fdivrs
fs
push
lcall
test
rcl
jmp
pop
lret
or
out
shrl
dec
xchg
xor
mov
bound
push
mov
ljmp
mov
xchg
pop
fimull
dec
sub
xor
nop
cmpsl
loopne
outsl
clc
jecxz
or
push
jae
mov
testl
add
push
out
xchg
cmc
or
lret
pop
push
push
and
sub
cmp
in
sbb
pop
or
in
test
sbb
xchg
push
lcall
cwtl
mov
xchg
mov
pushf
adc
fnstcw
dec
xchg
loope
pop
shlb
add
pop
xchg
pop
outsl
and
icebp
inc
mov
xchg
shll
ret
ja
mov
push
jle
or
mov
pop
mov
pusha
test
popa
xchg
and
adc
pop
repnz
lret
loop
cmp
sti
xchg
jbe
insb
lds
call
cld
repnz
inc
or
call
stc
jbe
fs
xchg
sbb
data16
cmpsb
cmpl
mov
outsb
and
sbbb
and
popf
jmp
decl
repnz
sahf
call
or
cmpsl
lock
mov
ljmp
jl
xchg
push
sub
fsubrl
push
push
mov
call
out
mov
push
ljmp
and
lods
cmp
and
fsubrp
dec
and
jmp
cmpsb
adc
es
mov
mov
fdiv
adc
push
fwait
shll
loop
sbb
jg
and
pop
cld
mov
push
fistps
inc
jbe
andl
inc
push
lret
mov
imul
add
dec
nop
jbe
mov
jo
pop
jg
xchg
push
outsl
repnz
mov
mov
idivb
dec
xor
loope
sbb
or
repnz
pop
push
push
pop
jg
ror
dec
sbb
iret
test
hlt
pcmpgtd
or
imul
or
je
data16
in
popf
es
adc
jnp
jle
adc
jae
lds
push
test
pop
add
cwtl
mov
jnp
into
push
inc
pop
pop
stos
pop
fsts
dec
subb
pop
mov
add
inc
imul
xchg
imul
andl
sti
psubb
mov
add
mov
fstpt
imul
jge
popf
lods
push
mov
cwtl
xchg
and
sub
mov
mov
imul
xchg
mov
fs
lds
jbe
lcall
sub
inc
push
bound
add
loop
jmp
pop
sub
push
scas
addr16
shlb
insb
jg
cmp
jp
and
sbb
cmpsb
clc
push
xchg
xchg
mov
jecxz
push
mov
push
adcl
sbb
in
sub
stc
lock
lret
pop
adc
dec
inc
mov
fisubrl
in
or
dec
push
mov
jmp
enter
les
adc
hlt
pusha
insl
pop
push
push
repnz
out
lahf
adc
test
pop
test
lret
daa
faddl
cmp
ja
pushf
jae
stos
sub
bound
lds
mov
add
mov
pop
xlat
push
cwtl
fsubl
pop
sub
int
in
shrl
stos
pop
cmp
push
xor
or
jae
jae
clc
fisubs
cmpsb
jno
cwtl
and
push
inc
jmp
ja
mov
js
push
add
adc
xchg
sbb
inc
cmp
imul
xor
loop
cmpb
dec
mov
sarb
add
das
xchg
dec
xchg
xchg
in
ds
xchg
nop
out
sbb
test
mov
pop
xor
sub
xorb
mov
inc
sti
leave
cmp
lds
adc
testb
arpl
imul
push
inc
and
dec
repnz
fimull
jmp
sub
shrb
mov
xor
mov
pop
add
stc
pop
ljmp
out
xor
ljmp
jle
xor
mov
mov
add
or
in
cmp
aad
cs
xor
and
hlt
nop
mov
jns
pop
jp
mov
fwait
mov
push
inc
pop
xor
sub
aam
adc
jge
mov
fldcw
jge
cmp
inc
pop
out
xchg
xor
jo
dec
mov
dec
lods
cmpsb
popa
dec
mov
out
pop
mov
lret
xchg
call
and
mov
mov
loope
out
aam
mov
adc
jo
adc
xchg
inc
or
push
or
mov
cmp
ss
test
mov
push
push
fdivp
mov
push
add
push
push
push
out
fcompl
popa
mov
lret
aas
lea
mov
scas
push
adc
pop
mov
imul
in
jecxz
lret
imul
ficoml
out
jg
pushw
rol
out
sahf
push
repnz
lahf
lcall
lods
insb
mov
mov
dec
pop
adc
pop
adc
lcall
dec
scas
aad
dec
out
in
int3
test
cmp
cld
sub
xor
cmp
and
pusha
fstl
mov
stos
inc
jge
pop
inc
adc
cwtl
loop
in
aaa
sbb
cld
in
repnz
in
clc
sub
cld
das
pop
mov
out
dec
or
icebp
cltd
mov
jae
xor
test
mov
sub
js
mov
mov
fcoms
inc
imul
and
cmp
jo
sbb
stos
inc
out
call
lods
imul
xchg
out
xchg
movsl
push
cli
lods
js
stos
fwait
adc
jne
sub
add
rcll
lea
aam
cmpb
cli
pop
rorb
inc
xor
cmp
lret
stos
out
or
lock
movsb
mov
pop
inc
repz
outsb
scas
mov
or
lcall
mov
dec
rorl
pop
orb
ret
loop
movsl
lea
jmp
arpl
pop
lea
jge
push
cmp
cmpsl
divl
xor
ds
loope
mov
mov
cmp
pop
jo
aas
or
push
das
mov
cmp
fsubrp
call
pushf
ret
mov
mov
xor
adcl
aad
pop
movl
mov
fsubs
jecxz
dec
mov
lret
xchg
mov
mov
sbb
clc
int
or
cmp
cmpl
out
xchg
scas
pusha
pop
data16
mov
xor
adc
sbb
loopne
inc
or
adc
or
lea
lds
add
fsub
shll
lcall
xor
push
adc
lret
xchg
fcompl
sahf
sbb
xor
dec
xor
xchg
shrl
cmp
lds
dec
inc
pushf
jmp
test
into
rorl
xchg
test
dec
inc
mov
js
hlt
cmp
xchg
mov
cmp
sti
out
inc
int
mov
push
sahf
test
jns
jne
stos
in
and
leave
pop
mov
lret
ja
aaa
pop
scas
pop
pop
cltd
jecxz
out
xchg
in
mov
outsl
ss
cmpsl
jg
mov
sbb
idivb
cmp
cmp
sbb
ds
aaa
mov
pop
imul
xor
and
mov
out
jmp
scas
popf
adc
mov
add
jno
push
or
pop
dec
xor
aam
les
xor
and
pop
mov
fcmovnu
push
push
in
rcrl
sahf
mov
cli
stc
mov
movsl
dec
pop
inc
add
idiv
jge
cmpsb
aad
cmc
push
ja
adc
xlat
sub
dec
xlat
and
lds
daa
xchg
outsl
dec
js
cmpsl
pop
inc
hlt
shlb
imul
daa
fwait
or
dec
cld
in
jecxz,pn
cwtl
verr
mov
cs
inc
push
aam
outsl
pop
out
sub
es
gs
mov
inc
int3
pop
ret
cmp
or
sub
jmp
mov
mov
inc
cmp
mov
inc
fdiv
xchg
xchg
mov
div
scas
in
bound
push
lods
cli
xor
mov
add
repz
mov
inc
inc
inc
or
loopne
filds
scas
cmp
stos
sbb
and
lods
or
mov
jmp
mov
iret
negb
mov
dec
adc
or
popa
aas
mov
bound
lret
out
outsl
aad
dec
les
and
cmp
inc
adc
or
in
das
mov
push
inc
aad
sub
scas
xchg
sbb
jl
pusha
inc
push
jnp
or
mov
xchg
ss
sbb
imul
roll
jbe
push
xchg
dec
outsb
loope
xor
fidivrl
ja
and
lods
sahf
mov
aas
arpl
stos
xor
push
faddl
fwait
xchg
les
cld
pop
cli
pushf
lds
add
xor
mov
fsub
imul
mul
jmp
dec
iret
and
mov
jp
sub
imul
jge
mov
push
push
sti
popa
mov
iret
xor
sbb
not
push
add
or
cmp
or
outsb
xchg
out
out
rclb
or
inc
mov
add
bound
adc
lret
pop
dec
test
cmp
mov
lods
movsl
xchg
add
outsl
rolb
inc
push
mov
jecxz
sub
mov
fcomps
stos
and
outsl
xchg
push
punpckhwd
cmp
add
cwtl
gs
xchg
pop
sbb
loopne
aas
lods
and
mov
fwait
pop
aas
cmp
sbb
jo
out
adc
or
test
ucomiss
lods
frstor
ficoms
addr16
xchg
jns
scas
jne
aaa
adc
and
loopne
ficoms
adc
push
cmpsl
xchg
arpl
pop
or
lods
rclb
mov
cmpsl
hlt
out
out
add
ljmp
nop
into
jle
xchg
je
fwait
popf
cli
push
outsb
and
shr
loopne
testb
lcall
xchg
cmpsl
loopne
mov
popf
daa
dec
push
adc
cwtl
scas
jmp
pop
fiadds
outsl
jle
pop
fisubl
dec
test
jo
movsl
lcall
jb
jle
sbb
in
adc
es
out
cmp
adc
inc
pop
mov
mov
stos
push
mov
frstor
add
pop
push
fwait
mov
mov
mov
loope
and
dec
lock
xchg
mov
sub
jnp
dec
xor
popa
dec
xchg
mov
xor
xor
data16
push
stc
push
jno
add
lods
sub
in
nop
out
jnp
adc
pushf
push
ret
popf
enter
lahf
test
and
cmc
jo
cmp
adc
bound
fisubrl
push
add
xor
inc
decl
test
ss
mov
mov
mov
cmp
xor
add
sarl
dec
call
cli
mov
dec
jno
sub
pop
pop
or
jl
icebp
test
lock
pop
or
xor
sbb
pop
push
stos
in
add
push
insl
jl
test
mov
bound
mov
cmpsb
lret
fisttpll
and
adc
frstor
cli
inc
mov
dec
push
push
mov
jnp
mov
sbb
xor
jp
test
cmpsb
push
xchg
rcll
rcl
add
icebp
or
sbb
xchg
add
bound
subl
fcoms
out
xlat
sbb
xor
or
cs
mov
addr16
nop
or
and
pop
in
jecxz
fsts
jle
lods
lea
insb
push
jo
test
mov
cmp
imul
mov
xor
sub
pop
outsb
dec
fstl
mov
sahf
movsl
push
jns
jle
pop
loopne
aaa
pop
xchg
lods
movsb
dec
xchg
cwtl
popa
cld
roll
push
stc
testl
xchg
jge
cmp
jb
pop
push
cmp
adc
fsubrp
mov
inc
mov
mov
jle
and
mov
fisttps
lcall
pop
xor
cltd
addl
lret
adc
sbb
and
pushf
repnz
out
or
imul
rcrb
lret
into
loope
lret
mov
in
xchg
cmp
xor
jno
mov
push
pop
jge
test
cmp
push
mov
push
les
outsl
or
adc
mov
sub
test
jl
js
ja
lds
add
lret
pop
cwtl
mov
test
mov
and
addr16
adc
aas
lea
hlt
inc
sub
jmp
cmpsl
or
and
movsl
inc
lds
mov
sub
sub
and
xchg
push
jne
jecxz
adc
loope
decb
mov
add
push
lods
movsb
shlb
jns
out
inc
mov
ret
xchg
inc
jns
sbb
leave
dec
lock
push
stc
mov
adc
aad
push
pop
sahf
mov
inc
aaa
cmp
imul
jl
fidivs
pop
pusha
mov
sahf
xchg
fldcw
mov
xor
xorl
push
loop
out
mov
cmp
dec
mov
stc
lahf
lds
push
shlb
jmp
bound
dec
pop
fnsave
sub
pop
mov
push
mov
dec
sbb
fdivrs
jb
imull
adc
std
mov
pop
add
jne
pushf
push
and
scas
add
fstpt
mov
sub
mov
mov
add
addb
into
inc
ss
mov
enter
dec
add
jns
lcall
and
rcrb
xchg
jnp
outsl
inc
fwait
int3
and
orb
pusha
jmp
mov
dec
xchg
inc
and
jp
leave
fbstp
ja
subl
jbe
cs
and
or
or
lretw
scas
sub
sub
aam
ljmp
mov
aaa
ret
inc
or
incb
pop
adc
push
inc
and
mov
fstl
ds
repnz
dec
repnz
sbb
jbe
arpl
ficoml
stos
stc
pop
pusha
pushf
nop
adc
pop
inc
add
pop
ljmp
push
cwtl
lret
outsl
stos
pop
and
je
lock
mov
add
jo
mov
insl
sub
and
outsl
imul
dec
outsb
nopl
ds
jns
cld
pop
outsb
push
or
jnp
pop
cmc
imul
push
cmp
push
adc
jp
xor
fisttps
mov
jge
inc
push
jle
idivb
jge
xchg
dec
mov
dec
popf
mov
in
jne
lock
xor
shlb
xchg
mov
in
dec
in
xchg
pusha
mov
cltd
cmp
adc
jecxz
negl
aam
mov
cmp
adc
test
cwtl
xchg
pop
xlat
xchg
push
test
sub
cmc
js
sub
add
mov
push
movsb
adc
in
or
and
movsb
push
stc
ljmp
rcr
lock
roll
ret
pop
dec
adc
mov
push
pop
repnz
xchg
xor
cmp
sti
xchg
cmc
push
xchg
and
std
add
dec
lret
mov
push
dec
movsl
cmp
push
gs
push
ret
mov
jle
arpl
push
cmp
sub
pop
mov
push
fsubs
or
das
enter
lock
push
jl
icebp
int3
lahf
jle
int3
mov
stos
sti
cmp
in
shlb
nop
mov
or
inc
ret
cltd
stos
mov
pop
push
cmpb
insb
out
jns
out
xchg
pop
fldcw
iret
xor
and
stos
cmpsl
mov
fistpll
imul
addr16
int
push
mov
scas
add
pop
fisubl
push
jbe
add
adc
sub
outsl
sub
add
cmp
adc
mov
xchg
adcb
xor
idiv
jnp
mov
or
push
cli
cltd
lret
shl
push
enter
mov
mov
fcmovnu
fsubrs
xor
out
mov
and
adc
iret
sub
fwait
mov
mov
mov
push
inc
cmpsb
cmpsl
cmp
xor
add
lret
mov
stc
into
add
das
popf
mov
mov
pop
arpl
jecxz
out
lahf
out
cmp
fisttpll
sahf
sbb
in
sbb
jmp
int3
dec
daa
inc
outsb
mov
sub
xchg
xor
outsl
enter
int
cmp
dec
push
adcl
sub
pop
fisttpll
mov
testl
sti
add
pop
mov
jo
xor
shlb
adc
pop
jb
mov
popa
add
enter
xor
add
movsl
stos
aam
rep
adc
sub
pop
lock
xchg
mov
lret
or
inc
pop
mov
jno
imulb
mov
inc
adc
orl
adc
adc
xlat
jnp
mov
push
lds
les
xor
shr
xchg
daa
movsl
fwait
jns
fnstenv
pop
cli
jmp
push
xchg
xchg
stos
xchg
mov
pop
and
pop
iret
cmp
pop
ficoms
jle
lret
xchg
cli
adc
and
fwait
push
loope
mov
inc
fcoms
push
pop
out
cwtl
pop
loop
xor
mov
pop
mov
pop
sbb
add
outsb
inc
sub
or
sub
dec
xchg
pop
mov
mov
xchg
icebp
pushf
das
imul
sub
xchg
jb
jmp
mov
pop
xor
addl
mov
jbe
mov
in
add
sub
sbbl
sbb
mov
add
inc
dec
mulb
jb
inc
ffree
and
xor
imul
or
cmp
movsl
mov
mov
adc
cmp
push
mov
imul
push
pop
pop
jp
jns
xchg
call
mov
dec
mov
stos
lock
mov
lods
fnstenv
mov
mov
push
enter
sub
cmpsb
mov
inc
pop
nop
ficomps
add
mov
out
mov
push
xor
loopne
in
sub
out
and
sbb
mov
push
mov
inc
inc
in
repnz
insb
fdivrl
sbbb
pop
xor
dec
out
sbb
add
mov
loopne
inc
jmp
das
loopne
pop
cs
fs
pop
dec
adc
decl
stos
xor
movsl
sub
fiaddl
pop
cmp
popf
pop
pop
adc
mov
arpl
add
fcoms
xchg
pop
add
adc
dec
pop
in
pushl
daa
fimuls
pusha
push
inc
push
repz
inc
int
dec
loope
push
push
mov
pop
or
jbe
mov
inc
shlb
pop
stos
jp
xor
push
bound
push
push
imul
scas
pop
rcll
iret
das
int3
xchg
push
shlb
fs
mov
sbb
cmp
movsl
add
xor
dec
test
rclb
mov
fildl
mov
fdivl
out
pop
mov
repnz
mov
repz
stos
test
jle
fsubr
adc
out
mov
and
sarb
mov
xlat
jp
jne
inc
and
xchg
mov
ds
iret
out
cmp
test
and
fcoms
fdivrs
push
or
sbb
repz
lock
test
pop
dec
xor
xchg
or
push
lea
sub
pop
xor
js
cmpsl
push
xor
jmp
xchg
inc
add
adc
cmpsl
test
daa
mov
mov
push
aam
sub
movsl
mov
cmp
sbb
mov
mov
aad
jl
sbb
or
aaa
jl
lahf
cmp
adcb
xchg
out
xchg
mov
inc
inc
inc
nopl
aad
jnp
or
xchg
mov
jl
pushf
dec
call
fwait
xor
push
cli
mov
xor
dec
insl
dec
mov
and
fists
in
lahf
push
push
push
mov
popa
cmc
mov
insb
outsl
aaa
cmp
cmp
loopne
fidivrl
dec
inc
je
popa
lock
pop
dec
jmp
fnstcw
sbb
hlt
mov
push
aam
mov
cmp
jae
dec
arpl
mov
mov
call
pop
inc
test
and
add
jmp
insl
cmp
jle
fmuls
mov
cld
mov
cltd
lods
add
xor
fadd
jmp
lods
out
dec
xchg
icebp
sub
adc
stc
enter
pop
cmp
jl
xchg
jns
jnp
inc
popa
addr16
int3
dec
jmp
icebp
ss
mov
cltd
jp
ljmp
test
dec
pushf
addr16
mov
xchg
jo
addb
sub
or
inc
sbb
mov
pop
mov
addr16
and
outsb
jmp
sbb
fnstenv
not
lahf
inc
aas
xchg
push
call
mov
inc
jb
pop
sub
jmp
lods
push
test
dec
mov
ficoml
and
mov
fcompl
push
mov
mov
mov
pop
mov
and
pushf
push
lahf
mov
cmp
cmp
xor
fistps
daa
imul
adc
das
push
into
inc
mov
je
lea
in
dec
stos
cltd
rcll
lret
scas
pop
inc
in
push
stc
popf
out
mov
outsb
mov
mov
test
mov
push
pop
mov
insb
jno
mov
cs
jnp
pusha
pop
lret
inc
add
dec
inc
mov
loope
imul
sbb
sbb
inc
sbb
dec
addb
pop
fcompl
mov
xchg
add
dec
ret
pushf
cmpsb
lock
mov
mov
cwtl
les
jl
rcrb
fbstp
jns
fistl
popa
sub
pop
cli
and
mov
xchg
ret
add
pop
dec
insl
std
mov
mulb
es
popa
lds
ret
cmp
inc
ret
add
dec
or
mov
sub
loopne
jl
in
add
fnstenv
and
in
ja
aas
mov
fcomp
inc
cli
and
mov
orps
mov
test
jo
adc
adc
ja
sub
jp
sub
jp
add
cmp
dec
xchg
movsb
lret
adc
jecxz
pop
cmc
dec
sbb
repnz
jae
pop
scas
jge
mov
jl
addr16
adc
sub
mov
or
das
dec
inc
mov
inc
clc
pop
lret
adc
loopne
jmp
rol
inc
push
icebp
cmp
cli
sbb
imul
dec
cli
push
xchg
je
inc
idivb
es
and
xchg
aas
or
or
cmp
scas
sub
stos
xchg
and
dec
aas
push
pop
shll
rorl
inc
jno
ss
mov
xor
repz
xor
jecxz
cwtl
pop
daa
aaa
psubusw
cmp
mov
xor
or
loopne
add
xor
add
pop
adc
mov
call
mov
test
jp
push
in
xor
adc
out
addr16
inc
dec
adc
sbb
les
lcall
scas
cmc
adc
mov
pop
not
and
xchg
mov
sbb
cs
arpl
ret
mov
cmp
iret
cli
xlat
sbb
mov
pushf
icebp
mov
arpl
jnp
aaa
inc
cmp
adc
or
repz
xchg
adc
mov
fs
sbb
aas
mov
jns
outsb
sbb
xchg
xor
pop
imul
adc
or
xchg
jecxz
aad
ljmp
xchg
repz
xor
testl
or
pop
vdivps
xchg
mov
sahf
adc
sbb
icebp
pop
inc
loope
and
outsb
xchg
jae
mov
add
xchg
scas
outsl
loop
in
ss
rcrb
pop
out
outsl
cli
cs
xchg
pop
mov
pushf
xchg
movsl
loope
aam
pop
inc
sub
lea
cmp
ret
in
testb
and
in
out
sahf
pop
test
xchg
jmp
ss
std
loopne
es
add
dec
sbbl
pop
sbb
int3
lret
sahf
pop
pop
adc
repz
or
scas
sub
jge
dec
movsb
mov
push
data16
outsb
outsl
ljmp
out
stos
mov
fcomp
cmp
push
fs
pushf
pop
rcrb
jle
mov
mov
jb
xchg
adc
mov
xor
cmp
outsl
jo
ss
lods
pop
rcl
test
in
ljmp
jae
jnp
cmp
mov
xor
mov
rorl
sub
das
hlt
pop
add
push
test
push
lcall
jecxz
arpl
arpl
pushl
faddl
mov
xor
cmp
mov
psubb
ficomps
je
push
lret
xchg
repnz
mov
sti
movsb
loopne
or
je
xchg
cmc
xchg
pop
pop
shr
fsts
js
pop
mov
mov
jae
popf
pop
mov
fisubrl
mov
lcall
out
add
mov
inc
or
push
add
sbb
mov
mov
lcall
mov
add
cmpsl
xor
add
sub
xchg
sbb
js
sbb
push
outsl
push
les
pop
pop
inc
or
or
enter
jecxz
fdivrp
dec
xor
sbb
cmp
enter
testb
push
fimull
rorl
pop
fldcw
out
js
pop
mov
pop
xrelease
fimuls
lods
mov
fs
mov
sbb
push
iret
adc
inc
jmp
inc
into
push
jnp
dec
adc
cs
or
mov
movsl
je
adc
repnz
ljmp
add
sub
or
scas
test
mov
push
cmp
xor
inc
test
push
insl
cli
pop
jp
std
cmc
mov
mov
aas
leave
adc
inc
int3
jp
ljmp
movsb
ja
test
push
or
xlat
xchg
jge
testb
ror
cmc
insb
pushf
mov
xchg
fdiv
add
jl
sub
dec
in
dec
lahf
dec
mov
fdiv
fmull
jbe
mov
add
mov
iret
add
rorb
daa
aaa
mov
pop
icebp
stos
cmpb
cmpsl
mov
pop
mov
lds
cmpsb
sub
hlt
arpl
notl
cmpb
mov
inc
sbb
mov
cmc
mov
xchg
push
dec
sbb
inc
cmp
in
push
inc
faddp
pop
fcompl
pop
jb
int3
notl
push
fsubrs
xor
adc
adc
mov
push
sar
shrl
out
mov
xor
nop
cltd
xor
cmp
cmc
outsl
subl
cmpsb
dec
repnz
push
dec
fwait
or
sub
sbb
cld
cmpsb
outsb
nop
lret
cwtl
sbb
je
pusha
adc
cmp
stos
xchg
dec
jno
jne
mov
aam
stc
dec
ljmp
into
stc
imul
fcoms
or
cmpb
cmc
cli
paddusb
outsl
lea
dec
jmp
lea
ret
add
in
mov
mov
cmp
jge
mov
push
mov
out
in
fcmove
cmpsl
mov
inc
mov
out
inc
sub
sbb
xchg
jno
stos
add
and
cli
ss
mov
adc
sub
fistpl
mov
sub
test
jnp
lahf
lcall
test
stc
addr16
jge
push
dec
mov
iret
cmp
jno
jno
and
mov
push
inc
jp
stos
fsubr
mov
sub
daa
movsb
jnp
loopne
lcall
repnz
push
daa
insb
add
dec
pusha
add
in
dec
sub
imul
icebp
add
mov
push
out
xchg
or
mov
and
and
push
cmp
mulb
dec
js
inc
movsb
sub
insb
mov
outsl
mov
push
mov
mov
hlt
jae
js
sub
cs
out
stc
mov
fisubrs
xchg
push
mov
mov
ljmp
aam
jecxz
xchg
outsl
daa
jbe
das
hlt
cs
dec
in
fadds
and
arpl
xlat
inc
jmp
push
nop
or
std
adc
stos
cmc
lock
sbb
and
or
push
je
loope
push
xchg
insb
xor
scas
popa
mov
ror
mov
dec
popf
sub
in
orb
push
dec
sub
push
aas
push
xchg
mov
sti
mov
mov
mov
leave
sub
cmc
push
outsl
inc
lret
mov
dec
js
gs
andl
imul
cmpsl
ja
push
repz
sbb
std
jo
push
popf
popf
outsl
jmp
test
mov
inc
int
push
push
push
push
xchg
push
std
clc
mov
jo
std
pop
sarl
cli
icebp
or
dec
jne
or
lds
into
lods
xlat
sub
loope
loop
mov
data16
xchg
pop
sbb
scas
dec
sub
xchg
aad
ss
inc
cmp
dec
scas
sbb
repz
mov
add
pop
jg
mov
cmp
gs
je
jns
mov
loop
test
cmp
dec
test
in
push
xchg
insl
imul
mov
add
subb
xor
mov
sbb
aam
mov
sti
add
jo
scas
xor
iret
sbb
sar
das
push
mov
aam
imul
mov
test
xchg
pusha
les
mov
pop
mov
fisttpl
inc
lcall
ror
insb
mov
cmc
std
cmp
or
shl
jnp
out
outsl
cmpsl
mov
mov
cmp
xor
shlb
cs
lahf
hlt
and
cwtl
shlb
pop
fxch
inc
jl
shll
xchg
subb
cli
shlb
push
xchg
xchg
fdiv
push
and
sti
cmc
int
sbb
rorl
push
or
adc
addl
hlt
std
aaa
out
sbb
clc
mov
add
mul
xor
dec
xor
sarb
shll
and
scas
scas
icebp
xchg
orb
fstl
stos
jmp
loope
xor
sbb
xchg
xor
es
push
loopne
std
push
outsb
adc
and
cmp
js
cmpsl
mov
pop
inc
push
xchg
adc
push
inc
push
push
add
sbb
fisttpl
in
outsl
push
iret
push
sbb
sbb
sub
fsubrl
nop
jno
into
xchg
push
je
stos
dec
jae
rolb
insb
dec
xchg
xlat
das
int3
pop
dec
js
ret
int
sysenter
mov
decl
imul
push
das
mov
addr16
lock
fiadds
push
loop
scas
dec
mov
jb
mov
hlt
add
push
lcall
xchg
sub
inc
jecxz
leave
sbb
push
testb
xchg
sbb
and
test
adc
mov
lds
popf
loope
mov
je
xchg
hlt
sbb
mov
xchg
add
jnp
push
jb
adc
jmp
bound
stc
out
test
lock
popf
inc
or
arpl
int3
test
xor
sbb
movsb
sub
popa
dec
xor
mov
cmp
bound
call
adc
scas
fwait
xchg
sbb
xchg
sub
push
inc
sub
lock
or
imul
in
sahf
xchg
pop
mov
lock
push
mov
push
mov
movl
call
or
cwtl
xchg
add
mov
cmp
int
fists
pop
es
cmpsb
in
enter
inc
or
push
push
dec
rorb
out
xor
and
adc
loopne
nop
arpl
sub
testb
call
daa
into
std
or
mov
xchg
dec
call
pop
sahf
mov
dec
cli
addr16
jmp
dec
xor
xor
scas
add
xchg
mov
fldenv
pop
xchg
arpl
jb
jo
or
into
and
jg
movsl
xor
lahf
inc
sub
mov
pop
push
lahf
jns
jno
and
dec
dec
scas
out
sbb
or
push
call
ficomps
pop
ret
call
add
mov
lret
dec
pop
dec
fwait
jle
xor
and
xorl
or
sti
jmp
cmpsl
jge
adc
test
fldt
lea
movsb
decl
int3
inc
cmc
lret
mov
adc
add
js
pop
daa
mov
pop
xor
push
xchg
pop
xorb
stc
pop
and
cmp
test
xchg
cwtl
and
mov
mov
sbb
loop
push
movsl
cmp
inc
jmp
iret
rorw
fstpt
cld
dec
mov
movsl
cmp
rcll
hlt
imul
or
mov
jae
mov
inc
pop
mov
push
cmp
stc
mov
stos
mov
dec
or
jecxz
loopne
stos
inc
popf
stos
cltd
sbb
addr16
gs
jl
xorl
adc
lahf
add
gs
shlb
mov
lds
add
push
mov
aas
outsl
push
inc
and
xchg
jns
cs
pop
das
inc
popf
inc
sub
inc
pop
popf
lahf
outsb
movsl
mov
mov
mov
out
push
ret
adc
xchg
or
pop
in
sbbl
mov
jp
adc
push
je
int3
mov
adc
in
lods
push
lds
testl
pop
jo,pt
fmuls
aaa
cmpsb
push
insb
jns
ljmp
add
jge
testb
jl
inc
mov
or
pop
jno
mov
sub
stos
mov
xchg
stos
les
in
fcmovnb
cmc
mov
dec
nop
cwtl
cmpb
or
pushf
stos
ljmp
outsb
imul
ficomps
add
test
xchg
or
out
mov
icebp
pop
iret
mov
mov
xor
sti
jne
fnstcw
std
xchg
mov
mov
push
movsb
sub
out
bound
das
inc
xor
xor
shl
pop
fldt
xchg
scas
sub
inc
in
dec
dec
or
mov
mov
adc
push
mov
jbe
das
xor
out
xor
lock
push
mov
xchg
cmp
inc
call
push
std
and
mov
lcall
loopne
cmpsb
xchg
dec
shlb
xchg
push
add
sti
add
imul
call
jecxz
inc
sbb
aaa
popa
pop
push
jge
adc
lock
in
inc
push
inc
outsb
add
sub
xchg
pop
dec
mov
jmp
mov
enter
cmpsl
scas
fs
mov
nop
sub
popl
cmpsl
out
adc
xor
aam
hlt
pop
push
pop
repz
push
and
movl
mov
adc
ret
jmp
gs
stos
jecxz
mov
xor
test
jecxz
jge
out
xor
in
dec
adc
push
or
sub
add
and
jmp
cmp
out
pop
pop
insb
pop
fmuls
outsb
sbbl
fadds
push
daa
or
or
sahf
add
rcrl
pushf
loop
add
or
cmpsl
lds
pop
mov
fildl
add
or
insl
hlt
mov
cmc
ret
inc
test
sbb
call
cmpsl
int3
das
push
cmp
hlt
dec
and
xor
cmp
jns
into
push
mov
aas
pop
mov
sbb
insb
enter
mov
call
push
dec
aas
xor
sahf
fisttpl
enter
jg
cld
push
pop
jb
xchg
dec
and
mov
in
jne
gs
cmp
lea
mov
push
jo
test
mov
sbbl
icebp
gs
aas
cmp
lods
fidivl
push
scas
ljmp
ret
pop
adc
in
pusha
aaa
call
xor
xlat
mov
in
cmp
js
in
rcrl
push
xchg
xor
push
out
bound
jg
push
mov
rolb
mov
sbb
and
add
push
jbe
mov
divb
or
inc
xor
push
xchg
mov
xor
mov
jmp
mov
push
or
in
sbb
inc
loope
pop
shlb
dec
pop
adc
cmc
mov
jnp
push
mov
popa
xor
adc
push
push
adc
lahf
pop
call
aad
dec
rorb
mov
push
add
ss
or
mov
arpl
je
ret
sbb
test
mov
cmpb
aam
and
dec
and
jnp
or
fwait
test
adc
insl
xchg
lret
and
push
mov
jne
popf
adc
test
jp
movsl
outsl
std
stos
pop
insl
faddp
adc
popf
pop
and
cmpsl
pop
lock
jbe
aaa
or
popf
scas
iret
imul
pop
dec
jne
fstp
test
xor
pop
lock
pop
fldt
xchg
dec
push
enter
inc
test
mov
loopne
repz
mov
popa
rcrl
jbe
jo
imul
aas
imul
xor
jge
out
hlt
xor
movsl
cld
fucomip
mov
test
pop
dec
in
hlt
loope
dec
mov
sahf
or
adc
push
dec
cwtl
cmp
dec
sbb
or
dec
roll
movsl
xchg
in
hlt
out
adc
xor
mov
push
pushf
out
fcos
mov
jmp
mov
int
ficoms
jbe
int
in
dec
cmpsb
and
xor
lea
adc
not
push
dec
dec
sub
push
cmc
stc
xchg
jbe
mov
lods
jge
insl
popa
daa
fiadds
inc
daa
inc
add
ret
imul
or
push
sub
xchg
xchg
xchg
mov
ja
aaa
pop
jae
dec
aad
ret
mov
addr16
daa
pushl
jnp
js
xchg
div
imul
sub
xor
flds
dec
cmp
test
and
mov
sub
lock
pop
xor
shrb
notb
mov
lahf
xchg
mov
and
sbb
aas
sbbb
or
js
xor
xchg
xor
inc
or
mov
jno
add
out
jae
xchg
movsl
lret
mov
je
xor
adc
xchg
and
push
lcall
jg
inc
jp
enter
xor
ss
insl
fwait
lock
subb
inc
lahf
mov
xor
xchg
dec
jnp
ret
imul
movsb
test
mov
dec
loope
cld
pop
aad
xchg
jle
xchg
arpl
ljmp
sbb
adc
push
mov
mov
xchg
adc
adc
jne
mov
rorb
sahf
arpl
orl
repz
in
icebp
jle
dec
add
fstl
hlt
mov
mov
push
rcrb
test
mov
testl
pop
xchg
lahf
jp
cmc
push
xor
add
sub
add
stos
xchg
mov
mov
mov
cmp
test
or
push
rolb
pop
std
addr16
imul
or
mov
cmpsb
gs
xor
xchg
into
mov
jge
mov
dec
xor
faddl
lock
cmp
mov
decl
arpl
push
mov
sbb
mov
sub
cli
popf
jae
lcall
xchg
lret
xlat
hlt
push
or
mull
and
add
mov
mov
mov
mov
push
add
stc
out
sub
addb
pop
movsb
and
ds
out
fs
repnz
add
cltd
push
sub
pop
lcall
push
or
dec
ret
pop
mov
lea
sbb
and
cs
aas
mov
je
imull
cli
xchg
dec
mov
sbb
enter
dec
or
and
repnz
repz
clc
xor
mov
pop
into
cmp
ds
sahf
loop
in
push
inc
jae
ljmp
jns
xchg
mov
jae
push
cmp
inc
pop
push
sub
xor
dec
popf
repz
cmp
sbb
rorl
jns
jo,pt
test
pop
addl
iret
mov
push
sub
pop
in
mov
fdivrl
je
add
push
inc
sbb
roll
vpor
cld
push
int3
mov
xchg
lods
pop
gs
jmp
push
mov
mov
push
cld
push
sub
add
test
pop
add
jno
sbb
int
pop
mov
xorb
mov
add
das
jl
ja
xor
es
arpl
mov
sbb
repz
loope
fwait
aas
std
dec
xchg
popa
es
cmp
nop
scas
jbe
inc
shlb
adc
mov
jmp
dec
xchg
mov
push
cmc
fmul
gs
pop
dec
pop
push
outsl
inc
in
iret
imul
cmpl
cs
cmpsl
test
dec
movsl
or
jg
xchg
mov
dec
add
mov
punpcklwd
imul
outsl
adc
dec
cmp
mov
fdiv
xorl
xchg
dec
subl
or
mov
cld
mov
sbb
cmp
data16
inc
sbb
mov
mov
mov
adc
mov
mov
xor
popf
xchg
push
cmp
out
addr16
adc
cli
sbb
mov
sbb
adc
clc
outsl
rcrb
add
daa
mov
out
push
notl
mov
enter
sbb
and
cld
or
add
lret
pop
xchg
xchg
push
insb
or
sbb
push
sbb
push
pusha
or
in
mov
jmp
lea
mov
les
decl
roll
push
inc
cltd
scas
or
dec
mov
cmp
mov
enter
lcall
sub
xchg
mov
test
inc
cmc
mov
mov
fs
cmpb
cmp
push
lods
out
mov
imul
mov
and
cmp
out
adc
test
cmpsl
inc
bound
test
sbb
scas
and
sbb
lds
mov
mov
add
mov
jg
sbb
subl
jecxz
clc
ljmp
sbb
mov
enter
inc
mov
fisubrl
push
por
xchg
out
idivl
mov
stos
inc
add
mov
fbld
aad
pop
sti
push
cmpsl
cltd
stos
mov
or
sub
cs
sbb
scas
enter
push
pop
add
and
inc
inc
cmp
adc
in
mov
addr16
push
or
scas
mov
or
sti
push
cmpsl
inc
mov
inc
jge
jne
pop
cmp
ror
and
inc
adc
and
imul
lret
je
aas
fstpl
in
and
sub
test
mov
dec
xor
xor
jecxz
mov
ja
shrb
imul
mov
inc
cmc
loope
fisubs
stos
jle
test
in
cmpsb
adc
rcl
inc
xor
aad
add
push
repnz
sbb
into
sub
imulb
jle
cs
and
dec
daa
sub
cmc
jmp
xchg
jae
orl
and
faddl
aam
addb
pop
mov
push
arpl
push
mov
mov
dec
sti
xchg
repz
jmp
mull
sub
packssdw
mov
std
cmp
adcb
pop
mov
pop
repz
jns
pusha
je
aas
xor
dec
es
jb
ffree
xor
or
arpl
sub
pushf
outsl
aam
dec
cld
fwait
sbb
lret
into
dec
mov
adc
jmp
divl
add
jl
sbb
hlt
mov
fsubrs
cmc
mov
dec
and
or
or
inc
movsb
xchg
inc
or
clc
fs
sub
or
cmpsb
scas
add
daa
stc
sub
lret
sbb
dec
pop
cmpsb
jnp
mov
inc
pop
mov
xchg
cmp
cs
sarb
orb
mov
mov
fsubp
lods
aam
and
jo
addr16
lods
clc
es
sti
xchg
jmp
lcall
push
jle
add
cmp
mov
push
std
sub
fcompl
iret
mov
test
push
dec
mov
imul
mov
pop
add
bound
mov
push
daa
data16
ja
leave
popa
pop
pop
out
stos
inc
mov
popf
test
fwait
xor
pop
inc
into
cmpl
jmp
xor
and
sub
xchg
hlt
call
cmp
lahf
scas
cli
outsb
sub
sub
and
out
leave
adc
add
repnz
xchg
xchg
inc
rolb
adc
pop
add
ljmp
in
mov
and
sub
fistpl
aas
sti
jo
xchg
mov
fcoml
adc
add
mov
out
and
sub
sbb
push
adc
pop
leave
jg
mov
cmp
mov
fs
or
orb
xor
das
xor
hlt
pop
jo
out
adc
fimull
push
and
imul
shrb
stos
fsubl
das
mov
sbb
adc
int3
into
push
push
xchg
push
adc
in
jo
mov
es
pushl
xorb
xor
clc
pop
xchg
or
and
js
out
mov
sahf
xchg
push
insb
pop
hlt
add
mov
fcmovb
ss
add
xchg
ja
sbb
add
aaa
data16
sub
xor
add
cmpsb
jbe
sub
fwait
jae
sar
push
add
out
xchg
movsl
sub
out
ds
cli
jp
daa
dec
stos
cmp
xorb
sbb
dec
jl
xchg
push
gs
adc
fmull
sbb
aad
shlb
xchg
sarb
add
addl
mov
cmp
xchg
mov
scas
jmp
ds
into
xchg
cmp
lds
gs
inc
sysret
into
popf
out
daa
js
jbe
sbb
mov
in
pop
adc
jle
sbb
sub
repz
subl
lock
mov
mov
in
mov
scas
add
les
cmp
ss
pusha
push
pop
sub
dec
jle
sti
and
mov
int
pop
inc
cmc
nop
mov
mov
mov
dec
mov
xchg
negb
imul
dec
fstps
jae
ret
push
mov
pop
daa
test
push
or
lret
cmp
add
sar
gs
test
xlat
mov
cmp
fs
dec
sbb
jno
pushf
sti
inc
gs
adc
repz
into
xlat
sub
or
xorl
notl
aaa
jl
movsb
repz
or
inc
ljmp
cmpb
bts
cmp
sub
jbe
out
call
xchg
fsubrs
inc
shlb
xchg
jae
nop
push
mov
inc
nop
inc
mov
add
xor
out
pop
mov
push
outsl
rolb
sbb
or
and
ret
pushf
mov
inc
fs
stos
outsl
test
sub
and
popa
jmp
inc
movsb
dec
and
popf
lods
fcmovu
push
mov
insb
mov
roll
popa
or
loope
out
inc
roll
jle
cmpsb
xchg
aad
shl
xor
mov
insb
adc
jmp
iret
popf
dec
mov
or
xchg
inc
inc
add
xor
pop
arpl
test
nop
cltd
insb
loopne
lea
stc
test
sbb
dec
adc
and
fldl
push
or
jecxz,pn
scas
xchg
adc
or
jb
mov
jno
notb
sbb
pop
out
sub
or
jle
es
mov
pop
stos
cmc
aaa
mov
xchg
mov
roll
fsubs
pop
fidivrs
popf
jbe
inc
xor
mov
inc
mov
loop
inc
dec
lret
adc
int3
hlt
mov
push
cli
mov
mov
xchg
mov
clc
mov
leave
inc
xor
jmp
jge
add
stos
add
mov
cmp
cmc
insl
gs
mov
je
lods
pop
xor
xchg
xor
cltd
sbb
xchg
fmuls
sarb
imul
lock
stc
inc
adc
pop
cld
test
push
notl
ljmp
jbe
cmp
leave
leave
pop
inc
ror
sub
lahf
sub
mov
add
adc
mov
xor
mov
and
cmp
test
loope
jno
xor
and
push
mov
add
movsl
clc
mov
or
sub
fisubl
out
sbb
xchg
sbb
sbb
cmpb
jge
inc
out
xor
sarl
push
dec
lret
sti
jmp
mov
xor
iret
add
sbb
int
arpl
cmp
add
mov
inc
nop
push
inc
inc
push
adc
das
shl
lahf
xchg
loop
pushf
das
cmp
dec
mov
and
cli
test
or
xor
xor
mov
daa
fiaddl
je
push
leave
ret
out
pop
sbb
push
jo
jo
and
xchg
xor
les
or
sbb
lds
dec
icebp
stc
mov
mov
test
and
dec
les
mov
or
xchg
sti
or
xor
dec
fpatan
aas
mov
cmc
lods
xor
and
lods
and
mov
mov
xchg
fldt
and
mov
fwait
nop
xchg
adc
mov
inc
lds
mov
sub
std
jae
lods
xchg
rorb
in
add
sub
lea
xchg
aaa
into
aas
dec
jns
loopne
mov
push
cmp
out
mov
pop
and
into
cmp
addr16
ljmp
loope
les
mov
loope
pop
push
mov
leave
fwait
pop
in
in
cmp
insl
pop
cli
stos
sub
mov
shl
and
addb
divb
or
push
sbb
xchg
push
negb
adc
mov
push
mov
popf
ljmp
lods
xor
and
imul
pop
loope
andb
ja
or
mov
out
jns
or
negl
pop
iret
and
jns
repnz
aam
lahf
xor
in
pop
pop
push
jle
or
sbb
std
xor
adc
daa
cmpsb
ja
subb
paddsb
inc
ret
inc
mov
cli
daa
cmp
aaa
cld
pop
push
stos
push
mov
rorl
adcb
ret
mov
push
imul
pop
shlb
mov
rorl
lret
sub
xchg
and
cmp
pushf
gs
sbb
lahf
divl
xchg
mov
pop
fcomps
jb
ficompl
roll
es
cmp
mov
mov
js
jmp
leave
xchg
sub
mov
into
jns
cld
xorb
mov
fildll
stos
loope
repz
dec
pushf
lahf
mov
movsb
out
nop
in
xchg
fistl
mov
aad
data16
cmp
lret
jae
rol
mov
pop
in
jge
pop
jb
insb
lcall
mov
mov
mov
mov
push
jl
inc
xor
cmp
loop
subl
cmpsl
lods
sub
lock
nop
fmul
hlt
inc
xchg
and
in
inc
movsb
in
mov
scas
mov
nop
pushf
cld
outsl
pop
mov
or
cli
xchg
xchg
rcrl
lock
iret
es
mov
aam
and
dec
cmp
xor
rorl
rorb
stos
pop
nop
in
and
mov
xchg
aad
flds
mov
dec
push
insb
dec
fdivrs
mov
pop
add
je
outsl
cmp
adcl
fwait
push
jmp
out
clc
outsl
and
inc
lret
mov
mov
iret
aad
imul
add
xchg
insl
cmp
xor
fdivr
dec
xchg
inc
jo
les
ja
add
push
xchg
cmp
jmp
lahf
push
fbld
pop
insb
xchg
sub
mov
fists
lret
fisttpll
push
ror
ljmp
inc
stc
xor
sub
push
push
mov
add
repz
cmc
dec
sbb
test
enter
push
pop
or
mov
divb
cltd
xchg
xor
fistps
inc
jns
ret
insl
xchg
sar
fwait
outsl
sub
push
sub
rcrb
lods
lods
daa
sbb
int3
dec
inc
out
repz
ljmp
in
dec
sub
and
jb
out
sbb
adc
test
aad
mov
xchg
gs
or
mov
dec
movsl
out
ret
cmp
mov
xlat
mov
push
sub
sbb
xor
lcall
adc
ljmp
adc
repnz
or
mov
stos
mov
mov
pop
cmpsl
test
inc
imul
outsb
inc
lahf
add
mov
lcall
push
mov
mov
outsb
inc
movsl
or
rorl
dec
pop
lret
dec
nop
xchg
push
mov
xchg
push
cs
leave
or
or
loop
loope
xor
mov
insb
push
push
mov
ds
inc
out
movsl
jo
mov
inc
nop
adc
inc
and
or
adc
enter
sub
idivl
xchg
dec
ljmp
push
mov
xlat
xchg
inc
jmp
int3
fld
dec
cmpsb
adc
inc
sub
lret
or
out
or
aad
pop
inc
lret
aas
in
sbb
mov
xchg
jge
xchg
out
lahf
mov
lahf
rcrb
pop
adc
dec
shll
xchg
mov
ret
fldl
add
push
mov
mov
mov
inc
test
cld
addr16
jo
insb
mov
int3
pop
cld
ljmp
inc
inc
inc
mov
jae
xchg
pop
jecxz
sbb
mov
xor
mov
adc
mov
sbb
int
inc
jmp
push
push
inc
cmp
call
scas
dec
xchg
jle
push
fcomip
pop
outsl
loopne
and
jecxz
ss
clc
xlat
stos
ret
pushl
jge
mov
cli
or
cwtl
cmp
cmp
jns
bound
jg
popa
mov
imul
dec
ret
cmp
idiv
lcall
scas
in
inc
addr16
sbb
mov
push
add
testl
xchg
inc
in
out
outsb
cmp
rorb
pop
sbbl
fmuls
test
lahf
lahf
int
inc
outsl
cmp
mov
push
mov
inc
mov
jns
test
faddl
adc
xor
lret
xchg
mov
cmp
and
lods
push
mov
loopne
add
mov
pop
test
gs
popa
sbb
push
xor
push
cmp
add
add
xchg
or
ja
xor
int
mov
insl
pop
test
iret
lahf
negl
repnz
mov
dec
loop
lods
push
test
cmc
jle
pop
sti
out
incb
xchg
out
mov
testl
aam
xor
sub
bound
int3
fists
add
pop
dec
pop
push
cld
jns
inc
sbb
test
mov
stos
xchg
pop
scas
loope
in
incb
stos
stos
mov
push
pop
mov
shlb
out
ficomps
mov
or
adcl
push
ret
sbb
mulb
mov
pop
mov
insb
push
pop
mov
dec
xchg
test
jnp
and
jg
subb
leave
push
arpl
xchg
jmp
daa
shl
pop
and
imul
jecxz
inc
jae
lods
mov
aaa
jmp
pushf
mov
xor
mov
xchg
in
subb
arpl
push
out
pop
aaa
and
cmp
cwtl
push
mov
xchg
cmp
ficoml
dec
or
loopne
add
inc
stc
inc
mov
clc
adc
pusha
cmp
daa
in
pop
enter
mov
imul
adc
and
push
sahf
outsl
iret
or
mov
xor
mov
mov
cltd
subl
les
mov
mov
int
inc
pusha
hlt
dec
xor
movsb
push
jge
jae
xchg
jg
push
fsub
aam
lcall
lods
fisubs
mov
push
mov
std
xor
aam
mov
in
enter
sbb
xor
xchg
fisubl
dec
inc
jo
mov
and
hlt
push
ret
icebp
mov
or
mov
ret
xlat
test
mov
faddl
inc
test
sbb
push
inc
outsb
add
cwtl
ja
ljmp
pop
sarl
addb
lods
inc
pop
sbb
or
mov
mov
fsubr
or
jp
push
jb
sahf
cli
fldl
scas
and
roll
iret
inc
fildl
dec
adc
add
lods
dec
test
xchg
cmp
fnstenv
cmp
adcl
aam
out
pushf
addb
fiadds
das
xor
sub
jmp
notl
insb
lret
dec
push
adc
enter
jge
xchg
xchg
sbb
xchg
loope
mov
cmp
xchg
inc
stc
mov
ljmp
adc
mov
push
test
jl
or
push
adc
and
cwtl
lea
sub
sahf
jmp
xor
pop
inc
dec
movsl
ds
sub
xchg
dec
lahf
lret
xor
dec
jmp
adc
repnz
adc
sbb
fwait
loope
popa
lret
jl
repnz
imul
pop
rclb
dec
lods
mov
or
adc
xchg
out
lcall
test
pop
dec
cli
ja
inc
sti
test
mov
push
sbb
xlat
dec
dec
or
fsubp
xor
fcompl
loopne
or
add
or
ljmp
cmc
ds
xor
push
and
lock
mov
std
mov
cmp
jl
push
insl
sub
inc
rcr
es
dec
outsb
cmp
cs
jle
stos
rcr
popa
scas
arpl
inc
inc
lods
cli
add
test
jne
enter
xchg
xchg
inc
out
and
cmp
jns,pn
mov
sbb
in
and
mov
or
xchg
push
rorl
xor
out
mov
cmp
mov
scas
aaa
gs
push
ds
loopne
push
and
gs
cmc
les
push
jge
stos
mov
std
in
adc
add
and
mov
fcomi
test
push
dec
adc
push
mov
repz
mov
test
pop
or
cli
pop
inc
aam
xchg
xchg
pop
xchg
pop
in
sbb
sub
mov
cli
inc
jo
cmp
data16
lods
xor
cmc
jns
sub
and
add
call
sub
xorb
mov
lods
add
or
add
mov
insl
jbe
movsl
movups
jp
dec
cmpsl
fwait
shlb
inc
and
cmp
mov
int3
dec
dec
cmp
xchg
lret
scas
add
int
pop
int3
add
inc
push
jnp
iret
dec
and
push
enter
push
and
lcall
pusha
or
dec
icebp
aam
inc
adc
addl
or
add
cmp
dec
aas
adc
lock
sarl
les
mov
aad
bound
sti
inc
icebp
add
addr16
ror
pop
add
lcall
andl
arpl
mov
cmp
and
fisttps
xor
ret
addr16
scas
lods
dec
ss
sbb
push
xchg
add
jno
push
cmpsl
leave
sbb
insb
fbstp
mov
stos
pop
push
popf
popa
shlb
jne
sub
cwtl
jnp
cwtl
rolb
xchg
add
lds
mov
push
fs
stos
aam
push
arpl
ljmp
es
add
xor
inc
jne
sahf
addr16
fsubl
adc
es
dec
jb
mov
cmpsl
mov
cmp
testb
pop
jle
jns
fbld
dec
mov
into
stos
fcomi
push
jnp
adc
stos
sbbl
aas
add
scas
dec
push
je
movsb
in
repz
add
pop
adc
data16
stc
inc
out
aad
add
mov
insl
je
mov
jnp
mov
aas
and
jmp
inc
sub
sahf
xor
addr16
cmp
fs
adc
cmpb
fisubl
fwait
loope
nop
add
mov
mov
push
fimull
imul
leave
enter
or
test
test
mov
push
push
mov
sbb
test
adc
cltd
dec
push
xlat
mov
pop
xchg
sti
loope
jge
pop
les
scas
lods
clc
les
int
mov
mov
push
test
aas
int3
pop
and
sub
xchg
fnstsw
clc
push
data16
ljmp
mov
wbinvd
cmp
and
lds
icebp
adc
or
roll
in
add
jg
adc
ljmp
sbb
ret
stc
jl
mov
fsubp
cmc
cmp
cwtl
cmp
mov
mov
sbb
dec
xorl
lret
imul
es
xchg
repz
push
call
sbb
sub
mov
jecxz
add
jg
xor
and
lret
daa
movsb
outsb
and
std
push
jne
xchg
mov
cmp
clc
adc
or
inc
out
mov
mov
ss
add
daa
insb
hlt
inc
mov
ja
in
push
aaa
cmp
jns
iret
rclb
mov
out
in
sub
push
jns
jge
mov
lds
fucomip
loop
jne
sub
or
jno
sub
jmp
jnp
adc
je
lcall
jle
or
enter
loope
lds
xor
addb
pop
lahf
fnstenv
mov
or
dec
push
sarl
add
lods
les
int
icebp
cltd
xchg
mov
and
pusha
ret
pop
roll
mov
and
mov
push
cs
mov
testb
fcmovb
addr16
ficompl
loopne
or
imul
sub
mov
jg
sbb
mov
sbb
xchg
in
xor
jp
std
add
icebp
shlb
roll
push
xor
adc
aaa
cld
xchg
pop
mov
fwait
ljmp
add
ljmp
dec
or
sbb
jp
mov
xchg
loopne
sub
aas
loop
xchg
sbb
negl
jmp
cwtl
xor
std
jne
mov
outsb
sbb
leave
sbb
ret
jl,pt
test
imul
inc
inc
pop
sbb
ja
mov
push
mov
pop
lea
aad
push
leave
mov
add
cmp
stc
dec
inc
clc
shlb
loope
push
es
not
pop
addr16
std
test
xchg
icebp
and
inc
jl
jg
pop
out
out
out
fisubs
ss
call
adc
pop
mov
fwait
mov
and
add
and
or
std
jne
call
inc
jl
fmuls
push
mov
mov
pop
xor
fisubrl
lret
inc
mov
mov
rol
mulb
sbb
dec
adc
scas
mov
mov
stos
push
enter
push
dec
xor
or
lods
adc
fsubrl
enter
movsb
dec
sahf
lods
movsb
call
out
mov
add
add
push
add
test
mov
push
aad
pop
lea
mov
xchg
inc
dec
push
andl
push
adc
adc
sbb
sub
xor
inc
sbb
cmp
adc
bound
jb
xor
jo
adc
push
rorl
pop
mov
arpl
push
mov
in
loope
ret
sub
gs
xlat
popa
xchg
mov
mov
and
xchg
inc
cmp
xlat
dec
xor
dec
outsl
les
dec
jo
xchg
sbb
jo
int
add
das
push
and
cmp
dec
outsl
push
outsl
add
in
push
cli
mov
mov
loopne
jo
fnsave
loope
popa
cltd
cmpb
inc
ficomps
mov
push
shlb
test
pusha
cmovo
jge
scas
jecxz
aad
shrl
push
aad
sbb
cmpsb
sarb
push
push
pop
les
int3
push
push
shlb
xor
mov
call
mov
mov
cwtl
add
push
jne
push
adc
xor
lock
xor
inc
or
shrb
pop
adc
enter
subl
inc
xor
stos
fs
jl
pushf
cmpsb
sub
insl
jg
xchg
daa
sub
adc
adc
add
or
adc
xchg
lods
js
jle
into
call
jo
xchg
pop
adc
adc
xchg
nop
fwait
ss
into
pop
sub
dec
push
pop
and
jge
adc
xor
fs
dec
inc
popf
cmp
ret
lcall
out
dec
xor
fwait
in
ss
jb
aaa
pop
sub
stc
inc
test
xchg
cmpsl
pop
pushf
dec
add
je
inc
shll
mov
cmp
mov
test
hlt
sbb
test
and
hlt
jmp
pop
pop
inc
inc
push
movsb
jp
pop
xchg
cmp
aaa
sbb
scas
imul
outsb
out
cmp
repz
jp
cmc
sbb
aad
pop
dec
inc
lahf
inc
data16
aaa
pop
push
arpl
cmpsl
in
jmp
wbinvd
mov
cmp
je
fwait
ret
out
daa
mov
cld
in
xchg
xchg
mov
cmp
push
jbe
push
mov
xor
push
testb
inc
add
cmp
lock
inc
jnp
cwtl
hlt
and
push
loope
ret
leave
addr16
mov
jo
or
ret
popa
mov
jl
arpl
inc
pop
shll
lods
and
aaa
pop
xor
and
repz
jnp
inc
shll
leave
jnp
jmp
or
sub
fwait
xlat
jbe
pop
hlt
pop
ret
fstps
mov
pop
sbb
pop
les
js
inc
jae
call
cmp
inc
jge
xchg
test
sub
add
stos
mov
xchg
addr16
fisttps
mov
mov
test
mov
cmpsl
popa
loope
outsb
in
xor
cld
jne
adc
add
xchg
jg
inc
aad
lods
mov
push
lcall
xchg
jno
cmp
pop
jle
push
test
fcmovnbe
lods
add
movsb
and
pop
pop
lea
adc
cmc
loope
shll
test
mul
shr
int3
and
roll
repnz
imul
shrl
mov
push
arpl
gs
loop
std
add
in
pop
adc
adc
lock
inc
cmp
mov
cmp
faddl
pushf
adc
xchg
jl
pop
enter
loope
dec
hlt
imulb
pop
push
lret
cmp
mov
jae
flds
rcrb
pushf
and
fldt
dec
lds
push
jo
mov
in
ljmp
push
pop
dec
out
stc
dec
sub
repnz
xchg
inc
lret
mov
add
cmpsb
lret
mov
cltd
sub
adc
or
pop
sarb
jl
jne
jns
and
mov
mov
pusha
in
jns
pop
add
xor
call
lods
shll
mov
test
sahf
mov
inc
mov
cmpsl
push
adc
push
into
mov
test
jb
inc
insb
cmp
inc
ds
pop
icebp
cmp
and
stos
jae
ds
insb
rcrl
lods
in
ljmp
js
push
rcrb
lods
mov
in
cs
push
movb
rcll
mov
jb
sub
jg
push
sbb
pop
or
xchg
lods
stos
iret
aaa
dec
sarb
loop
rcrb
cmc
push
pop
stc
cmpsl
insl
sbb
jnp
jp
cmp
adc
mov
sbb
rclb
scas
pop
addr16
loop
pusha
insb
mov
mov
sub
add
test
xchg
xchg
or
test
sarb
push
loope
cmp
arpl
lahf
xor
aam
xchg
jo
mov
or
mov
mov
push
int
daa
push
sti
imul
es
pop
test
insb
lret
jp
and
dec
dec
loopne
lahf
push
push
icebp
inc
in
cwtl
shl
js
sub
lods
mov
push
popa
dec
dec
jl
jnp
push
adc
and
imul
das
jnp
cltd
ret
xchg
add
cmp
sbb
xchg
push
pusha
lods
inc
imul
insb
fnstsw
add
pop
push
cltd
cwtl
rcl
pop
or
sbb
test
mov
mov
dec
pop
cmp
xchg
cltd
mov
pop
xchg
xchg
stos
in
mov
mov
fnstcw
ljmp
data16
cmp
push
imul
cmp
sbb
cmp
xor
out
xchg
mov
lds
jge
inc
subl
dec
das
adc
push
jmp
push
bound
ds
dec
lret
mov
cmp
sbb
ljmp
xchg
outsb
ss
lahf
push
repz
gs
filds
cmp
dec
jle
sbb
in
adc
push
cmp
mov
sti
cmp
leave
lea
push
stc
jmp
cmp
aaa
add
test
lods
push
xor
pusha
aas
push
or
mov
test
pop
xlat
ret
lods
adc
loop
mov
int
jge
nop
jle
lock
jno
in
or
or
iret
xchg
jb
rolb
cmpsl
lods
pushf
push
daa
out
xchg
or
and
push
sbb
mov
add
lcall
orb
sbb
xor
jae
sub
jno
movsb
rorl
test
lock
xor
mov
sub
cltd
in
flds
mov
xor
inc
lods
lcall
imul
sbb
and
insl
add
es
jo
nop
add
ret
jge
pop
lahf
pop
jo
xchg
lods
stc
cmp
adc
pusha
xchg
or
cmc
in
aas
loope
in
push
pop
sbb
cmp
and
in
out
mov
stc
pop
xchg
cld
lock
xchg
icebp
fwait
mov
cs
add
push
out
iret
push
gs
push
rorl
sub
mov
add
sub
loop
inc
outsl
push
mov
les
xor
mov
push
not
mov
movl
repz
lahf
cs
xchg
mov
mov
lods
lcall
dec
gs
pop
aaa
lods
dec
lods
add
imul
cmpsl
dec
xorl
je
adc
mov
icebp
jl
in
ja
push
int
pop
or
pushf
mov
sub
mov
sub
dec
clc
xchg
stos
fwait
loopne
sub
iret
je
iret
arpl
sbb
les
out
pop
int
arpl
mov
jl
jmp
bound
fcmovnb
fcmovu
xlat
push
or
sub
test
sbbb
iret
iret
adc
adc
pushf
cmp
xchg
fiadds
fstps
jecxz
mov
add
test
cwtl
mov
js
aam
in
fsqrt
pop
leave
lock
popf
inc
adc
shlb
scas
pop
out
sub
inc
push
test
jne
cs
dec
ss
sbbl
js,pt
dec
pop
dec
jle
mov
into
iret
and
push
and
xchg
jecxz
add
aad
negb
dec
cwtl
mov
or
pop
mov
call
inc
sub
scas
repz
pop
ret
add
call
mov
shrl
fiaddl
sub
jo
je
cmc
xor
lea
les
push
push
ljmp
and
sub
and
jne
outsb
fsts
movsl
add
dec
test
sub
js
mov
cltd
inc
scas
dec
pop
aas
xor
lock
or
xor
outsb
movsl
sbb
sahf
imul
xchg
xchg
inc
add
jne
mov
and
ret
pop
out
shlb
push
in
loop
lock
mov
sbb
orl
ret
ds
sahf
bound
les
faddl
jo
in
stos
adc
mov
mov
rcrl
dec
ds
and
in
push
sbb
ficomps
sbb
and
sub
clc
lods
mov
int
dec
fiaddl
sbb
push
popf
hlt
fwait
adc
dec
ds
sbb
icebp
mov
pop
lock
mov
add
xor
xchg
movsb
jge
call
pusha
mov
cli
sub
dec
inc
mov
adc
and
pusha
fwait
arpl
sbb
je
and
loope
or
mulb
pusha
mov
xor
cmpsb
sbb
mov
and
jne
int
dec
ja
adc
xchg
pop
subl
jp
nop
clc
sub
sbb
adc
inc
jle
rorb
mov
stc
ja
adc
mov
or
adc
or
inc
mov
sub
fdivl
int3
inc
jns
fs
adc
stc
test
ds
xor
dec
xchg
or
inc
sub
lods
popf
adc
pop
sbb
xchg
mov
ja
icebp
inc
hlt
mov
inc
jno
sbb
add
and
testl
inc
ret
and
into
cmp
std
lods
xchg
mov
and
sbb
int
sahf
je
ljmp
stc
scas
and
mov
inc
and
mov
ftst
mov
xor
sub
dec
adc
cmp
shl
imul
sahf
lods
aad
inc
add
cmp
inc
fwait
pop
cli
jno,pn
xor
sub
popf
cmovne
jae
mov
or
and
or
sbb
push
dec
push
mov
cmc
lahf
xorb
mov
mov
js
fldl
adc
lcall
xor
mov
inc
xorl
adc
es
shr
scas
mov
sti
mov
mov
andb
jp
mov
jg
js
loope
lods
imull
fnstsw
pop
jmp
pop
movb
mov
scas
xchg
or
or
jnp
push
jne
cmp
adc
into
mov
nop
ss
cmpsb
jb
xchg
sub
cmp
sub
sub
cli
push
mov
sbb
out
mov
or
xchg
and
sarb
cmp
mov
jecxz
fs
into
dec
lods
add
jne
dec
icebp
rorb
mov
sbb
pop
mov
mov
movsl
imul
or
inc
xchg
push
pop
xchg
add
and
push
or
cwtl
push
sub
push
sbb
add
jae
in
mov
and
push
test
out
xlat
xchg
popa
out
ljmp
aad
je
in
mov
loopne
loopne
add
mov
mov
pop
mov
orl
adc
push
sbb
fucomi
push
dec
adc
xor
subl
dec
pop
inc
out
sub
push
ret
mov
sub
sti
mulb
mov
addr16
pop
sub
and
push
leave
ror
push
inc
ficoms
cld
ss
shll
ja
mov
jg
or
cmp
mov
mov
js
pop
lahf
in
inc
sbb
js
dec
xchg
mov
sbb
stc
jb
push
or
cmp
aas
sub
cmp
or
lods
je
stos
jp
std
inc
sbb
mov
mov
sbb
pop
out
mov
out
jl
les
xchg
repz
leave
sbb
xchg
enter
loopne
push
xor
mov
push
sti
adc
imul
mov
leave
xchg
mov
cs
push
mov
dec
and
out
and
xchg
das
push
push
xchg
and
lcall
dec
inc
jle
iret
loopne
jbe
mov
dec
imul
sub
repz
pushw
imul
lcall
fmuls
mov
fnstenv
adc
std
arpl
int
push
mov
mov
sub
lret
rcr
cmp
imul
pop
inc
dec
mov
pop
dec
mov
lret
sub
lea
scas
ret
cmpsb
in
mov
scas
dec
mov
add
sub
cmpsl
dec
xchg
xchg
dec
cmp
shlb
lds
scas
scas
rolb
popa
cs
mov
mov
fidivs
movsl
jb
inc
jge
xor
ret
into
mov
cmp
je
mov
ror
cmp
jmp
jnp
and
ja
or
popa
xchg
out
inc
addr16
repz
mov
shlb
dec
pusha
push
int
bound
adc
test
mov
out
push
mov
cmp
test
inc
arpl
cwtl
sbbb
jbe
push
pop
jg
or
adc
xorl
mov
ds
push
push
cmp
outsl
add
pop
sbb
xchg
adc
sub
dec
dec
add
cmpsl
push
or
push
inc
dec
dec
xlat
sbb
sbb
push
das
or
les
or
mov
fdivrs
js
inc
mov
sbb
dec
cli
jo
jo
and
aam
cltd
push
adc
jnp
jne
movsl
clc
outsl
jae
xlat
cltd
stos
out
xor
ret
sti
xor
add
mov
clc
push
mov
ffreep
ret
dec
xchg
jb
lahf
dec
in
mov
mov
push
lds
pusha
mov
sbb
push
notl
sti
scas
and
push
ret
enter
xchg
imul
sub
stc
mov
into
xor
fisttpl
movsl
test
sahf
loop
ss
test
or
out
je
iret
mov
in
push
jnp
addr16
jns,pt
fnsave
mov
mov
push
xlat
sub
sbb
mov
sbb
shr
aam
fnstcw
mov
jle
adc
rclb
pop
subl
movsl
jnp
pop
fisubs
dec
clc
repz
push
xchg
stc
mov
jecxz
mov
fs
mov
std
dec
dec
enter
pusha
cmp
sarl
repz
lret
rorl
das
fmull
jge
nop
lret
mov
inc
dec
out
enter
subl
and
insb
xor
aaa
js
daa
addr16
filds
push
sbb
xchg
sub
aas
xchg
imul
or
push
out
cltd
ds
je
dec
add
push
fnsave
pusha
std
mov
addl
mov
in
stos
repz
or
mov
sub
rclb
cs
cmc
xlat
push
mov
push
sub
cmp
xor
or
test
inc
and
jb
stc
movsb
inc
inc
mov
sub
lock
push
loope,pn
dec
xchg
lret
jmp
pop
adc
aad
in
jne
push
lock
out
mov
sub
jae
outsl
adc
test
sbb
push
or
movsb
xor
push
cmp
jp
cmpsb
lcall
movsl
mov
pushf
movsl
cmp
sub
cld
xchg
push
mov
dec
rcrl
adc
cmp
jbe
dec
jne
sbb
push
aad
dec
fnstenv
push
shl
enter
into
mov
mulb
jle
jo
cs
int3
cmpsb
xchg
js
mov
mov
mov
loopne
sbb
inc
fisubrl
add
mov
xchg
out
ret
jmp
shr
popf
sti
sub
pop
mov
pop
pusha
sbb
xchg
adc
jmp
scas
sub
fstl
shlb
sub
mov
loopne
jnp
push
add
push
fildll
std
out
inc
fsubrs
push
es
mov
scas
xchg
icebp
mov
ss
lods
jns
lcall
adc
dec
ljmp
sbb
mov
pop
fs
ss
lcall
adc
adc
enter
mov
incl
xor
cs
adc
popa
add
mov
cmp
ljmp
lock
mov
inc
jns
and
adc
bound
add
mov
or
push
pop
fsubl
pop
cmp
sub
subl
mov
and
addr16
sub
dec
sbbl
pushf
or
leave
test
fisttpll
leave
add
inc
inc
sbb
rcl
jle
aas
add
outsb
jno
mov
out
sti
sbb
mov
jg
int3
popa
das
xlat
ss
pop
in
xchg
mov
fdivl
ret
push
ds
mov
adcl
orb
and
stos
add
popf
shlb
in
xlat
scas
jae
mov
popa
mov
ds
mov
aad
push
cmp
sbb
fucom
test
jl
leave
aam
cmp
sub
sbb
icebp
sbb
aas
pxor
in
and
push
les
jge
cwtl
rorl
mov
mov
dec
sub
out
adc
jnp
inc
mov
pop
or
pop
mov
push
cld
and
add
adc
push
adc
out
push
or
aam
daa
int
xlat
xor
test
cmpsl
and
mov
inc
jmp
xor
and
push
lods
and
ljmp
push
clc
outsb
xorl
jmp
push
push
ret
outsl
xor
les
push
and
and
push
push
mov
sbb
test
arpl
mov
loope
or
test
repnz
dec
test
xlat
push
and
enter
adc
cmpsb
stos
jo
inc
arpl
or
and
ljmp
cmp
ss
andl
jnp
loopne
dec
outsl
or
loop
or
popf
fucomp
inc
xorl
and
push
cwtl
add
in
fwait
add
adc
leave
fisubrs
inc
stc
sbb
das
sbb
adc
shl
jmp
stc
mov
push
push
imul
sbb
jmp
shrl
or
mov
add
mov
mov
jno
stos
aaa
mov
arpl
push
or
xor
cs
or
imul
xor
mov
lods
divl
lret
rcr
lea
clc
fcmovbe
movsl
mov
jg
xchg
in
xchg
sub
and
repz
shr
loopne
into
test
shrb
inc
movsb
inc
inc
out
test
in
stc
fbld
lods
call
mov
insl
icebp
push
int3
or
dec
xor
daa
mov
inc
jmp
jp
inc
pop
push
xchg
sbb
sahf
out
nop
les
pop
jnp
dec
add
push
jnp
mov
imul
inc
or
mov
in
mov
add
xchg
pop
or
mov
scas
loop
inc
fucomi
xchg
rorl
popf
ror
daa
cld
cwtl
mov
pop
jbe
rol
aam
nop
jecxz
cmp
mov
in
leave
add
inc
incb
aam
jo
aad
lds
sahf
mov
loop
jl
push
inc
or
aad
insb
mov
lock
adc
xchg
repnz
mov
mov
mov
sbb
es
adc
aas
repnz
dec
les
stos
mov
pusha
jb
mov
pop
shll
lea
fnclex
and
movhps
aas
mov
and
ss
sub
cmc
loopne
call
xchg
sub
xor
jnp
fs
xchg
in
inc
or
xchg
fisttpll
negl
pop
sbb
ljmp
sets
rolb
data16
xor
rol
xchg
mov
cmc
jp
leave
mov
dec
fs
jle
push
pop
mov
cmp
int3
ljmp
mov
jne
enter
jno
lret
and
insb
insb
mov
mov
ret
mov
mov
xor
or
in
push
fxch
icebp
mov
imul
pop
int3
mov
mov
test
in
dec
movsb
clc
jns
aas
jo
pmuludq
sub
mov
cmp
ja
movsl
outsb
push
ret
aaa
push
rclb
sbbb
cmp
adc
sbb
mov
ds
add
sub
dec
push
movsl
lods
addl
sahf
xchg
sub
movsb
xadd
aaa
cs
hlt
push
push
inc
add
inc
add
sbb
inc
adc
mov
cmp
pop
jg
mov
pop
cmp
or
and
dec
mov
fisubrs
mov
cs
mov
les
icebp
rcrb
in
xor
stos
je
test
pop
clc
dec
enter
jno
insb
pop
adc
add
push
push
jns
sub
xchg
cwtl
dec
xor
jo
mov
push
dec
xchg
insl
jge
cvtps2pd
xor
sbb
mov
imulb
jne
xlat
lea
jno
fwait
daa
fs
fsubr
divb
jno
xchg
ficompl
add
ljmp
loopne
dec
xlat
out
pushf
push
cwtl
dec
in
gs
ret
adc
jmp
shrl
dec
xor
cmpsl
jp
pop
in
cs
inc
xor
packuswb
repz
cmpsb
ret
add
sub
and
loope
xchg
mov
and
aam
dec
outsl
mov
mov
mov
adc
xor
push
push
aam
in
adc
or
int3
add
inc
push
dec
rorb
je
jb
sti
loop
sti
and
sbb
out
jle
push
roll
dec
popa
and
sub
test
sub
inc
lcall
cwtl
sbb
mulb
scas
cmp
mov
add
es
test
inc
adc
adc
mov
addr16
ret
inc
adc
out
test
js
cld
and
mov
and
sahf
dec
xor
shlb
cmpsb
or
mov
call
xchg
mov
adc
jns
mov
lret
mov
lret
pop
std
add
add
pop
aaa
ja
push
push
test
xor
mov
loopne
inc
sbb
dec
jbe
je
push
or
imul
jle
xor
inc
mov
aaa
add
add
jl
xor
les
daa
push
sub
push
push
scas
insl
ljmp
jo
pop
xor
cmp
pop
pop
push
mov
lahf
sbb
imul
sar
pushf
popf
sub
push
xchg
jge
pop
mov
sub
mov
mov
stc
xchg
nop
pop
imul
jae
push
sbb
cwtl
cmpsb
jbe
xor
mov
fwait
mov
mov
inc
popf
sbb
inc
ret
andl
and
stos
and
mov
sub
pop
loopne
lahf
xchg
sahf
jno
jg
dec
xchg
sbb
lock
inc
xor
dec
pop
lret
push
addb
cmc
pop
mov
cmp
pop
test
add
arpl
pop
xor
daa
dec
cmp
inc
lods
cmp
mov
mov
push
jle
pushf
inc
and
cmp
sbb
in
sub
in
lea
mov
roll
movsb
leave
sbb
mov
aad
push
xor
cmc
mov
mov
shll
ret
in
jl
ja
adc
idivb
loope
xchg
push
jle
mov
dec
push
pop
imul
loop
jmp
mov
movl
pop
jmp
je
and
test
dec
or
dec
xor
mov
mov
cmpsb
add
add
cmp
popa
cltd
jb
xor
nop
mov
and
int3
mov
icebp
inc
and
push
ljmp
push
push
add
faddl
cmp
xchg
sub
fistpll
stos
mov
hlt
iret
pop
roll
or
dec
xchg
imulb
idiv
ja
leave
and
mov
mov
inc
pop
in
scas
adc
movsb
pop
std
repnz
add
andl
sub
rol
test
jnp
and
add
ljmp
mov
and
mulb
inc
pushf
fcoml
xchg
pop
pop
inc
outsl
outsb
popf
fisubs
mov
mov
imulb
loopne
daa
dec
jae
sbb
mov
dec
xorl
pushl
fimuls
stos
jo
popf
add
mov
cli
sub
roll
cltd
sbb
nop
in
popf
jle
xchg
gs
jae
mov
rcrl
mov
dec
cmp
pop
es
mov
mov
mov
lods
stc
aam
fucomp
mov
mov
or
xchg
or
ret
outsl
pop
enter
push
cmp
out
aad
enter
inc
sahf
paddd
sub
xor
xor
orb
lcall
lcall
ja
adc
mov
push
les
std
or
cmp
fstpt
jno
sub
sahf
iret
movsb
pop
jbe
sti
pop
mov
testb
aas
xor
add
sahf
mov
movsl
pop
xchg
outsl
adc
mov
stos
testl
mov
ret
sti
cmp
dec
cs
mov
outsb
mov
mov
xlat
push
test
sub
fdivrl
lahf
subl
inc
shrb
insl
fwait
or
mov
scas
mov
xor
fbld
test
xchg
mov
mov
dec
mov
push
scas
das
stc
inc
inc
dec
imul
pop
negb
sub
add
ret
sbb
inc
jns
lret
mov
les
xchg
cmp
xor
test
ja
lods
jns
jne
push
push
daa
push
sarl
sub
pop
mov
add
add
in
pop
sbb
pop
jo
mov
in
mov
pop
pop
cmp
cmp
dec
cmpsb
arpl
sub
mov
fs
movsl
dec
jge
cmpsb
insb
sbb
dec
mov
clc
xchg
pop
add
jmp
mov
push
stos
mov
pop
faddl
sbb
mov
xchg
mov
xor
jecxz
inc
std
clc
jp
mov
gs
fstl
jl
or
cmp
push
int
sti
cmp
in
cmp
sub
ficompl
add
push
test
repnz
pushf
test
xor
xchg
and
pop
iret
in
mov
jecxz
aam
jae
push
daa
shl
or
xchg
xchg
test
push
jecxz,pt
das
mov
mov
push
test
and
push
add
popf
xor
hlt
inc
ficompl
lea
sub
std
and
and
repnz
outsl
jmp
outsb
out
and
stc
testl
fistl
loope
xor
aam
xchg
and
and
push
or
sahf
test
xlat
pop
lock
or
mov
inc
pop
inc
aam
clc
or
pop
jnp
fldl
inc
xchg
or
loopne
lcall
in
inc
or
inc
mov
jge
sti
cs
in
add
add
fidivrl
dec
stos
into
stos
xchg
fldl
add
sbb
or
loopne
inc
push
into
mov
push
pop
cmp
js
mov
jae
mulb
mov
orl
xchg
or
sbb
push
mov
push
mov
pop
incl
imul
fists
fistps
sahf
mov
mov
xor
mov
xchg
jp
lock
jecxz
ja
sbb
outsl
daa
pushf
scas
push
push
cmpsb
mov
lret
stos
popa
movsl
insb
test
movq
mov
leave
push
pop
add
enter
sbb
and
xchg
clc
push
ret
xor
lock
jge
sbb
cs
nop
pushw
fdivrs
mov
or
mov
int3
xchg
rclb
jae
fsubrs
lahf
fnstenv
mov
lods
in
fidivs
sub
jns
stc
mov
fcomps
out
loopne
mov
dec
std
stc
xor
mov
stos
cmp
sbb
push
inc
and
fwait
mov
inc
test
xor
pop
mov
int
cmp
inc
mov
xchg
sbb
aaa
inc
jle
or
fs
fisubs
out
sti
loopne
sbb
sahf
daa
adc
stos
fstl
add
mov
push
mov
leave
and
mov
push
int
push
xchg
xor
popa
int3
xlat
lahf
icebp
ss
adc
or
jmp
out
nop
xor
ja
xorl
lds
mov
xlat
sub
pop
ret
jg
sbbb
mov
inc
push
push
jne
mov
xchg
inc
inc
inc
ja
jno
adc
xor
out
or
adc
push
pusha
stc
data16
mov
out
and
add
imul
cmp
shrb
mov
inc
adc
adc
adcb
les
test
add
outsb
rorl
mov
mov
inc
mov
xchg
sub
mov
cmp
test
mov
cmc
or
or
lahf
into
push
les
push
rorb
orl
fistpl
xor
xlat
lods
mov
cs
cmp
push
adc
out
mov
popa
push
pop
testl
push
inc
mov
cmpb
out
lock
push
shll
int
jae
out
jmp
cld
fcomp
repz
aaa
inc
mov
cmp
fwait
scas
movsb
shl
pusha
movsl
sbb
scas
add
scas
xchg
cmp
jnp
xor
aas
fadds
xchg
and
pop
mov
xor
mov
pop
loope
dec
mov
pop
imul
stos
aas
push
leave
add
mov
push
int3
mov
outsl
clc
cmp
lcall
scas
mov
insb
jg
fstps
inc
pop
aas
in
push
lcall
cmpsb
in
dec
imul
je
xorl
add
outsb
push
cmpl
lods
lret
add
adc
leave
mov
jae
mov
or
add
mov
ret
rorb
test
inc
int3
stos
pop
cmp
mov
mov
dec
mov
call
ret
ret
pusha
ljmp
inc
jno
adc
adcb
and
or
rcrl
mov
add
mov
cmp
add
add
or
sbb
cmpsl
call
push
stos
pop
clc
arpl
mov
enter
mov
sub
dec
mov
in
pop
ret
out
hlt
adc
or
cltd
movb
mov
pop
lahf
xchg
push
and
push
xor
sbb
in
sbb
sub
push
inc
bound
mov
int3
out
xchg
cmp
pop
js
xor
add
je
mov
sbb
push
sub
inc
out
sub
in
cmp
xlat
nop
mov
inc
xchg
mov
jl
cmp
rcrb
int
shl
cmc
clc
aad
jle
mov
and
add
std
xor
sub
mov
inc
nop
mull
sahf
js
inc
enter
hlt
add
loop
rorb
int
mov
bound
and
packuswb
pop
jno
bound
push
cmp
xchg
ret
mov
mov
repnz
xor
cld
xor
enter
inc
mov
movsl
sub
imul
and
mov
cmp
inc
push
js,pt
sti
mov
xchg
mov
xadd
xchg
sub
in
pop
sbb
dec
jmp
adc
ja
mov
push
push
dec
negl
scas
xchg
nop
int3
xorl
cmc
out
xchg
pop
mov
andb
std
xchg
addr16
xor
pop
mov
mov
push
ret
into
bound
rol
adc
dec
jbe
stos
sbb
sub
out
sbb
lcall
std
inc
shlb
repnz
pop
and
jae
pop
adcl
gs
mov
mov
and
jmp
pop
dec
mov
aad
inc
mov
mov
mov
cltd
inc
arpl
mov
adc
mov
fs
push
sub
pushf
pop
cmp
jnp
dec
out
bound
or
push
mov
pusha
insl
add
lret
adc
push
push
xchg
hlt
or
push
and
stos
loop
pop
repnz
jp
test
mov
jnp
dec
test
mov
pop
cmpsb
adc
mov
daa
test
jb
xlat
xchg
pop
add
cltd
andb
jp
mov
cmp
gs
inc
in
lcall
xor
jns
xchg
push
out
out
add
inc
adcb
adc
adc
je
jl
xchg
push
mov
mov
daa
mov
jle
lcall
stos
pop
call
or
int3
es
data16
push
push
dec
cmpsl
adc
add
stc
sub
out
xchg
push
pop
ljmp
or
sbb
mov
add
nop
pop
clc
jecxz
sbb
xchg
dec
and
cmp
push
mov
sbb
dec
adc
mov
lds
enter
push
popaw
stos
pop
jb
mov
rolb
xchg
push
jmp
ror
or
ret
xlat
sub
movb
jne
test
stos
pop
repz
repnz
lods
mov
mov
mov
or
mov
add
sub
inc
and
adc
dec
frstor
lds
aaa
shrb
xor
ljmp
outsl
fisttps
enter
add
adc
js
scas
pop
ja
rcrl
fcmovu
and
aaa
inc
ss
rcl
inc
ret
mov
idiv
jo
lods
sti
dec
rclb
addr16
dec
sub
outsl
push
sbb
mov
or
mov
imul
rorb
fldcw
repnz
call
lods
push
inc
push
xchg
add
bound
lret
dec
add
lret
add
jne
stos
test
gs
push
mov
pop
sub
int3
adc
sti
mov
cltd
push
and
arpl
inc
fadds
in
ja
cltd
clc
add
sbb
cwtl
fiadds
jmp
push
and
dec
adc
cmp
dec
mov
in
add
insb
jg
inc
jge
cmp
clc
arpl
fdivr
sbb
outsb
sub
inc
xor
push
insb
inc
mov
test
fbstp
mull
pop
icebp
shrb
jno
and
mov
pop
data16
dec
into
add
jb
mov
inc
dec
or
icebp
or
pushf
push
or
imul
dec
jae
and
and
push
or
sub
add
push
ljmp
push
sbb
lds
cmp
loope
shrb
lcall
dec
mov
idivl
inc
jne
mov
ficompl
lods
adc
push
sbb
and
lahf
cli
jb
ds
xor
inc
out
loopne
jnp
or
mov
xchg
cwtl
aaa
dec
jl
iret
xlat
insb
sbb
pop
inc
push
cmp
mov
test
jmp
lret
pop
push
inc
je
popa
or
adc
adcb
test
data16
push
dec
jnp
jb
ficompl
mov
ja
cmp
leave
aad
cmp
push
outsb
repnz
inc
sub
in
std
je
xchg
add
adc
xchg
pushf
jl
pop
jb
pusha
pop
xor
scas
xchg
and
xchg
nop
fs
push
ds
mov
mov
cmp
push
xchg
jno
jecxz
jge
and
mov
mov
fists
ffreep
sbb
shlb
mov
cmpsb
jb
lock
push
outsl
sbb
dec
mov
push
fcomp
xchg
or
mov
lret
push
xchg
push
xchg
daa
mov
outsl
adc
js
pushaw
rcrb
sub
xchg
stos
jnp
mov
out
dec
dec
rcrl
addb
adc
sub
fstl
loope
lret
cmpsl
shrd
out
mov
lock
inc
add
loope
les
dec
mov
jp
sbb
bound
out
bound
mov
scas
insb
xchg
xchg
xchg
inc
aad
push
dec
jae
sbb
das
ret
out
pop
add
andl
mov
mov
rclb
sbb
push
ss
ret
pusha
lret
hlt
or
add
lret
lcall
push
shrl
inc
enter
shrl
jg
and
push
rcll
jl
xchg
gs
jae
out
mov
pop
or
xchg
sti
aad
outsl
data16
mov
or
fadds
inc
aaa
in
imul
push
push
adc
cmc
push
mov
fldl
dec
sahf
xchg
imul
sub
jg
jnp
pop
add
jbe
cltd
mov
xchg
push
lret
ret
push
repz
sbb
sbb
jecxz
or
and
out
das
mov
outsb
xchg
nop
push
ficomps
pop
cmp
jmp
lcall
inc
sti
lret
imul
dec
cmp
cmp
movsl
hlt
stos
inc
sbb
xlat
push
pop
xlat
aaa
xchg
shl
or
jmp
mov
push
faddl
jmp
xlat
dec
xchg
xchg
int
ljmp
cmp
icebp
incb
clc
mov
dec
int3
dec
scas
cmp
shll
mov
cwtl
inc
mov
loop
xchg
lahf
sarl
cmp
pop
cmp
mov
loope
adc
fidivrs
or
inc
inc
hlt
stc
pop
sbb
sbb
cmp
inc
cmp
imul
pcmpgtb
call
repz
sti
mov
lods
or
faddl
das
das
clc
nop
jns
cmp
pop
xchg
popf
fmuls
daa
jns
jns
dec
dec
inc
jl
nop
adc
ret
aas
cli
sub
fcoms
popa
push
cltd
add
outsb
mov
dec
push
mov
or
sub
bound
leave
xor
aam
mov
xchg
mov
insl
loopne
inc
pop
test
pushf
int
xor
sbb
ret
jae
jl
cmp
repnz
xor
mov
pop
mov
lcall
jecxz
jmp
mov
xor
inc
or
aaa
aam
inc
hlt
sbb
fwait
mov
repnz
sbb
jb
pop
xchg
enter
sbb
mov
in
or
adc
push
mov
mov
shlb
arpl
pop
cmp
mov
inc
xorb
lock
mov
fimull
pop
jmp
lock
sub
imul
and
adc
les
je
jp
fmul
pop
push
jp
adc
xlat
mov
push
mov
sub
push
ss
leave
xchg
repz
cli
insb
pop
stos
sbb
outsb
adc
inc
xor
push
sbb
xchg
je
out
test
mov
cmp
jl
pop
mov
mov
push
dec
and
push
les
movsl
out
and
push
sbb
mov
shl
cmp
push
ret
xor
and
divl
dec
sbb
lcall
push
cmp
mov
cmp
cld
fwait
push
xchg
mov
mov
cmp
iret
cmp
or
dec
push
dec
outsl
pop
mov
jg
pop
imul
insl
fldt
aad
stos
jecxz
cmp
xchg
sub
push
lahf
loopne
not
scas
ror
arpl
lods
stos
inc
pop
insb
aas
and
addr16
aas
jmp
out
test
pop
jbe
pop
mov
decl
insb
push
dec
mov
enter
lock
jns
dec
ljmp
fisubrl
cmp
gs
or
dec
jae
sbb
xchg
mov
mov
inc
and
loopne
insl
jecxz
xchg
gs
daa
add
imul
push
and
mov
or
cmp
jg
xor
mov
cli
sub
lahf
jbe
and
cld
sub
adc
push
jmp
dec
jge
movsl
jno
stos
hlt
out
mov
cmp
ds
ret
xchg
roll
testb
cltd
lcall
xchg
icebp
xchg
shrb
pushf
sbb
push
js,pn
fiadds
fldcw
lods
mov
pop
fsts
mov
jae
xchg
scas
aad
mov
pop
cmp
cld
imul
cmpl
xor
mov
in
jg
or
sahf
pop
pop
cmp
loope
adc
pop
mov
sbb
sbb
in
filds
add
mov
mov
lods
cmp
fstpl
pusha
fldl
lahf
shrb
mov
mov
pop
sub
gs
or
xchg
daa
sub
jmp
fdivrs
cld
in
xor
inc
pop
shrb
cmp
cs
push
mov
pop
aas
pop
and
testb
fstps
and
mov
cltd
push
jno
mov
mov
xor
out
push
pusha
xchg
adc
sbb
andb
stc
pop
in
push
setnp
ljmp
xor
mov
jo
dec
xchg
mov
sbb
cmp
fdivr
ds
stc
mov
or
mov
xchg
mov
repz
jmp
jp
jmp
or
sub
out
scas
mov
aam
fistl
call
out
movsl
pop
xor
add
insb
sbb
out
sub
mov
inc
sbbb
pop
imul
or
push
repnz
pop
push
cld
push
dec
es
add
jle
sbb
pop
xor
ret
xchg
sub
push
pop
push
fstl
sti
shlb
sarb
cli
orb
out
nop
xor
jo
movl
mov
and
cmpsl
inc
jne
iret
mov
fwait
jp
xchg
adcb
popf
enter
xor
daa
divb
sti
xchg
out
dec
mov
into
push
sub
sub
cmp
repnz
or
adc
shll
std
adc
addr16
push
or
sarb
adc
or
lret
or
aas
inc
rolb
mov
rcrb
pop
pop
xlat
mov
fs
mov
mov
mov
jge
inc
fisttps
xchg
shlb
mov
jmp
cli
cmp
cmpsb
xchg
in
mov
inc
adc
data16
xor
fstpl
mov
jg
add
bt
and
lods
std
mov
jg
shr
mov
mov
jmp
lds
cmp
xor
in
in
sarl
push
fistpll
out
and
in
icebp
inc
lret
dec
fcoms
jmp
or
lea
aad
daa
fildl
push
cmpsb
cld
test
push
push
lods
cld
sbb
fwait
mov
xor
dec
xchg
mov
dec
sti
adc
adc
ljmp
and
aam
jne
popa
sbb
dec
push
dec
scas
xor
jae
mov
xchg
dec
mov
jae
nop
notb
dec
mov
xor
xchg
incb
or
jno
and
loop
xor
test
in
in
loopne
jne
mov
xor
add
sbb
jae
test
push
inc
fiadds
dec
hlt
jbe
shll
aam
clc
mov
mov
inc
xchg
mov
xchg
pop
pusha
add
fadd
mov
cmp
and
ret
add
xchg
test
mov
and
mov
pop
sti
jbe
mov
hlt
iret
pop
rcrl
or
xchg
push
xor
pop
add
dec
nop
ja
mov
jl
or
in
clc
cmp
iret
and
xchg
jg
lds
mov
jge
sub
fidivl
dec
mov
cltd
imul
outsl
xchg
data16
flds
sbb
test
pushf
fwait
sbb
fwait
aam
add
js
js
lea
xor
cmpsl
sbbb
test
add
xor
sub
es
pop
jp
sub
jno
inc
mov
cltd
fwait
and
xchg
test
loopne
or
mov
scas
mov
data16
or
lret
mov
xor
mov
adc
test
dec
adcl
dec
dec
push
cmp
popa
repz
cwtl
fldcw
in
test
daa
mov
cmp
mov
out
rcll
cmc
pop
xchg
fisttpl
loop
aad
rcrb
fwait
sti
pop
mov
shll
dec
push
stos
add
aam
sub
pop
hlt
cmp
push
lahf
or
fnstcw
out
dec
sub
push
jns
rcll
or
inc
out
ss
xlat
das
fadds
fsts
and
jbe
mov
cld
jno
loope
mov
mov
lods
test
stc
push
pop
in
scas
aam
push
fwait
lock
lods
shrb
nop
adc
and
adc
adc
jo
and
jb
dec
mul
lock
sub
cmovb
mov
xchg
sub
and
int3
in
mov
lods
cs
dec
aam
out
mov
jne
test
dec
out
int3
xchg
test
mov
inc
add
test
pop
push
stos
mov
xchg
loope
add
stos
icebp
loope
or
fwait
jmp
mov
jo
sub
mov
pop
mov
sahf
inc
push
adc
or
pop
in
or
or
xchg
stos
lcall
push
sti
pop
mov
mov
movsb
notl
test
lds
add
mov
pop
mov
pop
adc
pop
adc
int
in
popa
lds
or
xor
rcl
ja
ret
es
xchg
gs
push
call
xor
push
loopne
cmpsb
test
ror
addr16
cmpsl
xchg
call
or
push
js
test
jb
xor
mov
insl
sbbl
cwtl
ret
push
jbe
sbb
sub
rcrb
adc
and
dec
testl
pop
mov
shl
push
rolb
add
cld
insb
xchg
sbb
adc
jg
lcall
jne
pop
jae
cmpsb
adc
popf
mov
fs
pop
outsl
mov
stos
lcall
jecxz
movb
insb
rcrl
push
mov
xor
sahf
mov
mov
push
sbb
out
pusha
adc
scas
xchg
mov
stos
push
gs
sbb
and
inc
movsl
inc
sahf
out
lock
cmp
movsl
scas
inc
ss
pop
stos
jmp
or
xor
cmpsl
sbb
aam
push
jle
shrl
and
test
iret
arpl
mov
mov
mov
loop
xor
mov
pop
lods
mov
mov
enter
mov
mov
outsl
shlb
rorb
sbb
push
xchg
cmpsb
ss
dec
imul
fcomp
sub
sub
mov
dec
sub
or
js
adc
add
dec
pop
mov
outsb
je
movsb
mov
jmp
xchg
insl
mov
shrl
addr16
xchg
xchg
jmp
mov
test
push
adc
inc
and
jne
xchg
loope
mov
xor
and
push
xchg
jle
push
fidivrs
pop
pop
and
adc
sub
jno
xchg
lcall
ljmp
cmp
and
pop
jg
inc
dec
mov
int
fmulp
add
pop
pop
dec
ret
dec
shll
or
es
push
xchg
jmp
xor
cmp
xchg
ret
adc
dec
es
orw
mov
cmp
sub
jne
add
lahf
pop
push
mov
hlt
or
sub
adc
and
xor
dec
fdivs
push
inc
sbb
int
cmp
mov
cmp
imul
out
pop
cmp
add
in
and
aam
adc
adc
xor
xorb
enter
xchg
sub
pop
xor
in
cmp
dec
xchg
sub
call
sub
sbb
out
enter
roll
pop
mov
push
adc
jne
fildl
xchg
mull
xchg
cld
movsb
jne
les
test
loope
jle
mov
test
paddsw
jbe
loope
cld
sub
jnp
cmp
out
and
sub
mov
fbstp
push
mov
fs
leave
xchg
pushl
fmuls
jns
pop
jae
mov
cmpsl
dec
shll
cmpsb
cld
push
int
dec
das
repnz
cltd
cli
xchg
rorb
pop
in
xchg
nop
mov
push
lds
stos
inc
jb
mov
jp
outsl
push
icebp
int3
mov
sub
push
sbb
data16
shll
enter
pushl
add
sub
mov
lods
inc
mov
ret
movsb
das
outsb
mov
out
imul
mov
je
jg
int
xchg
divl
jae
adc
loope
lock
cmp
enter
or
stos
lods
adc
ja
mov
cmp
or
or
mov
aaa
shl
out
stos
out
in
jne
mov
push
outsl
and
fidivs
xchg
sbb
sbb
ja
leave
hlt
cmp
mov
mov
adc
insl
repnz
cmp
push
push
add
int
cld
jno
mov
scas
pop
push
rcrb
sti
pop
dec
add
lret
dec
lret
push
jno
pushf
fiaddl
xor
jbe
sbb
lods
sub
pop
mov
fisubs
fisubrl
sarl
popf
xor
jbe
into
xchg
ret
xor
daa
jne
lods
cmpb
in
and
jg
cmp
cmp
fcomps
ljmp
xchg
pop
xor
inc
sbb
leave
popf
fisubrl
insl
lcall
icebp
xchg
mov
pushf
xor
lock
pop
lds
leave
cwtl
pop
rclb
aam
lods
es
and
movsb
test
sbb
jmp
lahf
dec
jae
xchg
lahf
mov
std
sub
sub
xchg
mov
inc
in
and
inc
add
loopne
jae
out
or
mov
cmpsl
pop
or
pop
push
mov
stos
dec
jo
jg
ja
adc
push
add
jne
jle
push
dec
sub
cmp
pop
es
orb
mov
lods
rorb
gs
iret
xchg
hlt
outsb
pop
add
mov
mov
xchg
dec
js
fstp
cmp
push
xchg
movsl
popa
mov
dec
sbb
xchg
ss
sub
enter
std
sub
fldcw
or
mov
mov
ja
ret
in
mov
in
xlat
data16
movsl
aad
out
loopne
jo
enter
aas
mov
or
push
std
xchg
cs
cs
add
push
cmpsb
subl
std
dec
lods
or
stc
hlt
mov
movsb
mov
sbb
xlat
sub
sbb
mov
sub
cmp
arpl
int
add
in
jp
cmp
sbb
push
push
data16
dec
rcrb
or
push
adc
inc
movsl
or
cltd
js
aas
xchg
jg
cs
mov
mov
xor
test
repnz
mov
push
mov
mov
test
mov
sbb
inc
pop
xchg
fstl
cmp
pop
mov
xchg
push
das
stc
out
dec
sahf
fdiv
ljmp
lcall
push
xor
inc
inc
inc
loope
daa
cmp
in
inc
aaa
mov
mov
int
xor
lretw
mov
das
inc
movsl
aad
in
fsubrs
shl
xchg
into
inc
sbb
test
cmc
adc
scas
js
mov
pop
dec
cmp
xlat
sub
mov
shll
outsb
cmp
fldenv
nop
rorb
fwait
mov
lret
and
push
out
iret
dec
push
jns
lcall
mov
testl
imul
push
cs
lea
fsubs
js
pop
cmp
and
adc
movb
sarl
xchg
cld
hlt
lods
stos
ret
xchg
negl
mov
mov
hlt
fmulp
jl
aad
or
xor
xchg
cld
cmpl
aas
dec
xchg
and
push
pop
or
arpl
out
xchg
dec
roll
ret
das
jns
mov
cwtl
inc
jb
and
push
cmpsb
inc
and
repz
shl
sub
inc
inc
fisubs
cmpsl
faddl
cld
cmpsl
inc
es
mov
mov
data16
clc
jp
cmp
mov
mov
add
movsl
xlat
mov
mov
movsb
push
fadd
aam
inc
dec
pop
mov
in
mov
xchg
fwait
or
mov
sub
mov
push
loopne
decl
cli
pop
test
arpl
loop
jo
xor
adc
adc
aas
push
jnp
dec
loopne
dec
xlat
sub
and
mov
pop
and
xchg
cld
or
fstpl
mov
push
jp
sub
mov
repnz
stos
mov
adc
mov
mov
test
mov
mov
fbstp
lock
dec
test
pushf
jl
cli
mov
push
lods
sbb
and
inc
dec
sub
out
in
lret
pop
cmp
aaa
incb
jecxz
insl
fwait
dec
lea
adc
sbb
lds
jl
add
jnp
cld
cmp
loop
scas
adc
sbb
jo
jae
xchg
js
xlat
inc
rcrb
pop
adc
adc
rcr
rcll
pop
jg
pop
add
popf
cmp
sbb
lock
ret
and
in
stos
add
ja
aam
ljmp
push
push
es
out
cmp
pminub
fidivs
cmc
fldt
sub
cmp
adcb
repz
dec
jo
push
inc
xor
and
loope
and
cmc
and
or
call
in
imul
push
loopne
mov
cmpsl
imul
test
pop
sar
sub
cmc
fwait
inc
div
mov
pop
add
add
push
mov
inc
and
xor
aam
les
cmp
sbb
adc
cmp
push
cmp
out
rol
aaa
leave
pop
jp
loope
out
inc
inc
mov
mov
or
imul
stos
bound
mov
adc
int
popa
std
sub
jge
leave
in
xor
std
pop
ja
aaa
xchg
mov
pop
repnz
mov
aad
mov
aam
xchg
mov
sbb
pop
jns
bound
mov
std
jmp
push
xchg
hlt
jne
sub
aas
testl
lcall
dec
adc
mov
mov
mov
adc
add
outsb
lcall
into
push
mov
ret
movsl
adc
stos
icebp
mov
pop
das
test
xchg
mov
push
out
scas
jge
sti
jle
and
imul
testb
pop
sbb
adc
mov
dec
hlt
xchg
jnp
push
add
lcall
pop
rol
mov
push
xchg
mov
mov
les
out
lret
add
aaa
xor
es
hlt
out
dec
xor
scas
rclb
push
out
pop
out
push
add
add
xlat
ds
test
add
jp
cmp
xchg
add
bswap
jl
pop
cmp
mov
xlat
mov
mov
and
hlt
push
sbb
adc
and
imul
lcall
cmp
pusha
pusha
ret
pop
inc
pusha
dec
data16
push
jecxz
inc
scas
dec
jne
dec
icebp
lods
lds
jo
dec
cmp
aaa
ret
jbe
mov
or
call
lahf
or
or
xchg
or
cmpl
or
orb
jmp
jbe
sbb
xor
jo
push
jbe
es
fisubl
aas
hlt
je
outsl
pop
pop
mov
mov
jae
or
insl
push
mov
mov
icebp
pop
cld
jle
ficoml
jg
mov
sub
cs
jo
push
cmp
std
les
icebp
into
test
add
subb
insl
jo
push
cmp
xor
push
and
leave
inc
and
mov
js
outsl
outsl
loop
mov
xor
sub
loope
jbe
aaa
ret
into
jge
incb
mov
test
xchg
in
jecxz
hlt
mov
es
sar
outsb
dec
mov
lods
cmp
popa
inc
repz
push
and
jp
leave
loopne
mov
add
test
outsb
add
fistpll
dec
xchg
sub
inc
mov
clc
and
lock
pop
jb
mov
outsl
xchg
lds
sbb
in
scas
pushf
sbb
pusha
jle
or
and
shrl
inc
aam
fiadds
into
xor
push
push
loopne
push
mov
outsl
dec
sub
mov
pop
inc
add
popf
fnstsw
imul
jne
pop
mov
push
jb
add
xorl
mov
test
aaa
int3
scas
cmp
jecxz
daa
inc
inc
and
xor
pop
inc
imul
ja
push
cs
stos
push
pushf
mov
shrl
sbb
imul
xor
jbe
rcrl
or
push
or
sbbl
push
xchg
jmp
subl
sub
mov
jno
int3
push
incb
gs
sti
fnstenv
pop
std
sbb
jno
sbb
fistpll
mov
testl
dec
and
or
fildl
or
and
jnp
and
adc
shlb
mov
cmp
sbbb
mov
loopne
push
jbe
inc
test
lret
xchg
sbb
lret
loope
add
jns
xor
mov
inc
jle
pop
push
pusha
mov
jo
jno
mov
jae
mov
les
lods
sahf
popf
sub
or
push
inc
popa
sbb
xchg
mov
mov
stc
mov
je
ljmp
push
loop
test
in
mov
out
je
aam
lods
scas
push
fwait
imul
repnz
cli
mov
lods
lds
inc
std
cld
or
rol
aaa
call
in
jns
jb
jp
pop
mov
dec
jnp
add
xchg
cmp
and
dec
push
sbbb
ret
stc
lahf
add
lahf
lret
test
sahf
sub
repz
xchg
lds
pop
rorl
roll
icebp
jp
sbb
xchg
lock
xor
sbb
pop
pop
loopne
jns
mov
arpl
scas
xchg
and
out
add
cmp
add
pop
pop
dec
xlat
mov
mov
inc
dec
rorb
xchg
jno
pop
mov
repnz
pop
cmp
inc
push
int
jp
add
gs
or
mov
je
pop
jae
sub
xor
int3
shlb
lds
or
call
adc
sbb
dec
inc
rol
sbb
filds
dec
insb
mov
das
jne
push
xchg
xchg
leave
out
fsubl
lret
scas
fs
xchg
xchg
imul
loop
sbb
mov
jl
sub
cmpb
insl
jle
mov
loopne
pop
les
mov
in
push
push
mov
fwait
or
adcl
and
cltd
mov
push
xlat
sub
push
in
push
sbb
outsl
and
pushf
and
mov
jp
loop
lods
mov
loope
dec
popa
cmp
fs
jbe
rolb
dec
cli
sub
or
xchg
jp
pop
inc
je
cmc
xor
add
fcmovb
mov
stos
cld
xlat
mov
int3
xchg
out
iret
dec
cmp
sub
aaa
add
daa
sub
dec
ret
imul
dec
cmc
pop
push
sahf
test
repnz
int
inc
int3
scas
pop
scas
mov
pop
lods
xchg
jb
push
jbe
jnp
mov
movl
pop
scas
sbb
xlat
mov
pop
push
adc
cli
mov
mov
sub
fs
sbb
push
int3
or
xor
mov
aam
pop
imul
mov
pop
stos
iret
rcll
sub
push
ja
or
xor
popf
pand
jmp
add
out
cmp
mov
add
pop
mov
lcall
sbb
mov
cli
popl
mov
gs
mov
jge
jge
outsb
in
arpl
cmp
mov
inc
mov
test
insl
aam
mov
test
dec
iret
add
je
lock
mov
aad
inc
mov
fsubl
fisubs
mov
jmp
xor
fistpl
mov
and
cmp
aaa
aas
mov
loopne
pop
movsb
shl
imul
mov
and
sub
pop
mov
subl
sbb
in
dec
mov
lock
icebp
jne
jge
ljmp
cmpsb
inc
cmpb
stos
daa
jmp
sbbl
dec
into
lock
xor
adc
jp
daa
lcall
rolb
daa
sbb
push
push
mov
dec
out
mov
mov
dec
mov
xor
or
xchg
pushf
fmuls
lock
aad
push
adc
adc
pop
jge
dec
inc
pop
mov
cmp
js
pop
sub
fwait
mov
ret
sbb
mov
test
in
dec
and
jnp
pop
mov
sub
or
push
pop
fstpl
sti
imul
decl
sbb
cmp
lods
sub
jns
push
sahf
insb
loop
out
std
bound
lock
fisubrs
add
loope
add
sub
push
mov
sbb
out
jnp
scas
repnz
rcr
mov
jge
std
sub
push
lods
push
xchg
fnstcw
lods
add
push
pop
dec
frstor
jns
daa
lea
push
fwait
pop
sti
dec
mov
outsb
pop
mov
push
mov
jmp
sub
lret
xchg
push
xchg
dec
cwtl
fistpl
add
mov
nop
xorl
pop
dec
xchg
pop
pop
adc
mov
cli
movsb
cld
lea
stc
popa
cmp
fisttps
aaa
sub
mov
movsl
imul
aas
inc
dec
jnp
dec
repz
ret
scas
add
push
insb
data16
push
adc
cltd
or
aas
adc
scas
test
in
lret
orl
push
fs
daa
fmuls
adc
adc
add
iret
stos
dec
push
xchg
inc
inc
cltd
sti
outsb
out
push
fldcw
ljmp
aad
insb
xchg
data16
mov
xor
lahf
aad
jb
pop
hlt
test
cmpsb
push
and
pop
les
or
in
fsin
loope
aaa
sub
sarl
mov
gs
push
jnp
lock
call
divl
pcmpgtb
pop
jno
je
lahf
inc
push
push
mov
loop
mov
xor
fimull
adc
clc
leave
xor
movsl
and
cmp
dec
rcr
movsb
repnz
lds
outsl
xor
cwtl
loop
mov
xor
xorl
arpl
out
sub
pop
pop
push
jb
push
sahf
and
inc
imul
jno,pn
dec
sub
aas
insl
cmc
xchg
pop
jbe
cmp
dec
fldl
icebp
cmp
mov
into
jo
jge
mov
loopne
adc
add
xchg
mov
inc
sbb
dec
stc
sti
push
sbb
sbb
jmp
pushl
shlb
mov
pusha
into
mov
jns
and
cmc
sub
es
das
dec
movsb
shlb
cmpsb
sub
or
xor
fstp
inc
pushf
cltd
in
sbb
mov
shr
adc
test
lock
int
sub
push
inc
inc
push
cmc
add
dec
pop
rolb
imull
inc
sub
or
call
divb
testb
add
std
adc
pop
jbe
or
repz
mov
mov
xor
xchg
out
inc
int3
ret
jmp
xor
iret
jecxz
dec
enter
repnz
sub
push
dec
jg
into
and
test
stc
mov
xchg
xchg
push
mov
outsb
mov
les
pop
lock
mov
daa
sbb
mov
movsl
xchg
rcll
mov
sbb
into
add
rolb
movsb
repnz
call
jge
fsubrs
or
pop
pop
pop
imul
add
stos
data16
cld
push
sahf
fs
daa
push
mov
pop
popl
fstpl
inc
out
dec
subl
into
rol
and
cmp
test
rol
std
dec
push
xor
inc
jae
mov
pop
pop
xchg
push
adcb
add
cmp
mov
and
mov
daa
mov
sub
clc
add
dec
mov
xor
fwait
loop
icebp
sahf
sub
xchg
add
nop
roll
mov
lcall
push
sbb
or
push
ret
push
js
dec
lods
cmpsb
das
jle
ret
cld
lods
or
cltd
jle
lock
jns
push
xor
iret
imul
jae
iret
in
out
fcmovb
cmp
and
loop
jb
cmp
shlb
fisubs
ficomps
and
jno
insb
jl
mov
sub
sbb
mov
cld
mov
into
or
sahf
les
add
pop
int3
push
in
shll
cmp
ja
pusha
sti
ja
cs
jne
mov
lock
sub
and
push
or
sbb
jg
dec
dec
pushf
pop
sbb
mov
push
inc
jle
cmp
mov
loope
inc
mov
xchg
dec
add
dec
in
mov
dec
or
and
mov
clc
dec
mov
xchg
insl
pop
ja
push
push
ret
cmp
sbb
xchg
bound
in
hlt
mov
cmp
movsl
es
popf
sub
out
aas
mov
std
inc
jmp
enter
rcr
in
mov
sub
or
je
in
outsl
cmp
mov
lret
popf
add
sbb
inc
or
notl
pushf
mov
push
sub
test
leave
jl
jp
or
add
je
orb
or
icebp
xchg
out
stc
sub
add
jns
mov
popa
test
cmpsb
test
sbb
mov
mov
jbe
mov
jbe
pop
or
mov
nop
insl
jge
lret
and
daa
sbbb
xor
jmp
add
es
outsb
push
sub
pop
sti
sub
jmp
jg
sub
loopne
cwtl
jae,pn
cmpsb
in
jl
and
negb
xor
pop
mov
lahf
inc
dec
mov
adc
inc
adc
xor
shrl
loope
inc
push
dec
jle
push
xchg
pop
out
insb
shll
data16
sbb
push
or
cmpsl
outsl
out
ret
addr16
enter
arpl
jno
dec
out
fcmovnb
pushf
or
cli
stc
outsl
mov
fsubp
call
mov
test
and
sbb
leave
mov
shlb
shll
dec
jmp
lret
inc
in
arpl
lret
pop
aad
inc
jo
inc
sbb
shll
in
outsb
inc
in
fisttps
adc
in
push
add
pop
pop
ret
movsb
xor
pop
scas
cld
popf
xchg
aas
ja
andb
jnp
adc
cmp
andl
add
cld
repnz
jmp
jmp
das
dec
lock
cwtl
les
adc
sbb
gs
mov
lods
fsubrl
imul
and
mov
mov
in
fdivl
mov
scas
aad
xchg
roll
mov
lahf
iret
dec
xor
test
adc
mov
xchg
loopne
pop
icebp
inc
jecxz
push
adc
arpl
nop
push
or
add
ror
insl
loope
repnz
push
es
push
cltd
mov
mov
adc
mov
mov
jle
or
mov
add
cmpsl
xor
dec
bound
dec
pushf
pop
aas
rorb
xor
fnstenv
stos
inc
jo
pop
xchg
add
bound
mov
adc
adc
mov
outsb
jae
jl
sub
or
mov
mov
push
sahf
push
add
scas
leave
ret
lcall
or
mov
int
idiv
jno
add
test
ss
cmp
sub
xchg
mov
push
mov
mov
jg
jb
pop
mov
and
or
in
outsl
or
xlat
xchg
fists
jbe
jecxz
call
idiv
loope
rolb
xor
fistl
mov
sbb
mov
dec
fwait
add
jecxz
leave
lea
pusha
xor
stos
pop
jnp
inc
push
pslld
in
push
mov
pop
cmp
stos
mov
jg
pop
add
pop
or
fisubs
les
pop
xor
aaa
das
jecxz
xchg
inc
icebp
mov
mov
push
nop
cmp
and
repz
iret
insl
sub
ficompl
lret
test
lret
adc
cmp
ds
lock
shrl
push
loop
shll
clc
insb
or
loope
adc
push
lret
push
mov
xor
mov
sub
cld
mov
sbb
fstpt
xor
stc
fcoml
push
test
lret
lods
lds
scas
roll
xor
or
fldl
xchg
push
mov
dec
inc
inc
sub
cmp
fldenv
mov
jne
jp
dec
and
fxam
xchg
sbb
in
insl
jne
call
popf
in
dec
add
adc
push
sub
rcll
jnp
faddp
cmp
jnp
cltd
dec
adc
push
das
int
test
imul
sub
addr16
pop
stos
rcrl
shl
jo
aam
in
mov
push
add
in
pop
adc
sub
pop
mov
les
mov
movsl
pushf
scas
test
mov
cltd
jecxz
jmp
adc
adc
push
aas
jge
ljmp
push
inc
inc
adc
sbb
mov
cmp
movsl
jl
orb
push
ja
add
pop
and
mov
aaa
jno
xlat
int
sub
enter
mov
mov
fstps
dec
lret
dec
scas
frstor
sbb
xor
sbb
cmp
pop
mov
jecxz
sbb
leave
out
push
ror
xor
cmpsl
mull
mov
ja
or
jbe
xchg
sbb
les
daa
mov
les
mov
jge
add
cld
fnstenv
mov
xchg
in
int
fucom
mov
and
shl
mov
jae
stc
scas
xlat
test
inc
xchg
movsb
mov
and
sti
enter
idivl
rolb
pusha
add
jle
jns
sub
jecxz
or
jmp
cmpsl
out
pushf
int3
add
aas
adc
insb
xchg
inc
js
xchg
cmp
push
dec
jo
fwait
cmpsb
int3
mov
pusha
int3
cmp
enter
xor
pop
adc
imul
rcrb
mov
mov
xchg
sbb
mov
testl
lods
sub
adc
pop
or
mov
bound
test
xor
pop
jnp
cmp
jg
and
adc
sarb
loopne
inc
push
test
mov
jmp
das
lock
stc
addr16
inc
pop
es
cmc
rol
mov
notl
hlt
jno
dec
lret
es
cmp
cwtl
aam
mov
and
mov
in
stos
xor
fsts
pop
jns
sbb
scas
adc
cld
mov
or
cmp
xor
pop
pop
cmp
icebp
popa
js
mov
jno
inc
mov
jbe
pop
rep
lods
sub
fnstenv
int3
shr
rclb
sub
jge
daa
dec
xor
adc
xchg
lcall
mov
jmp
lods
sub
cld
push
scas
sbb
pusha
fnsave
mov
cmp
shrb
insb
push
sbb
movsb
je
es
f2xm1
adc
imul
lods
fdivrl
jle
jo
ja
loope
or
or
adc
movntq
mov
or
inc
repnz
mov
push
mov
imul
xchg
mov
mov
pop
nop
cmp
add
das
mov
inc
in
inc
cmpsl
imul
mov
decl
movsl
pop
mov
dec
and
aaa
aaa
sahf
std
outsb
movsb
adc
jnp
xchg
in
mov
fxch
mov
xchg
pop
mov
scas
shrl
cmovl
add
loope
inc
or
adc
ret
push
sub
jo
popa
inc
and
into
cmp
into
jmp
push
cmpsb
sbb
int3
out
cmp
jb
xor
test
stos
cmp
xor
lret
test
add
jle
cltd
dec
fistpl
xchg
jle
popa
sub
orb
inc
dec
repnz
push
cmc
imul
push
lods
les
in
loopne
inc
xchg
or
xor
xor
cld
cmpb
test
mov
and
fsubs
dec
arpl
inc
test
xchg
dec
mov
inc
cmpl
add
jge
cmp
and
jnp
sub
mov
sub
imul
fwait
push
scas
int3
data16
sub
xor
sub
pop
popf
dec
and
shll
mov
add
lcall
or
pop
adc
and
pusha
jbe
or
cmp
inc
cltd
jl
jmp
std
push
fwait
call
test
out
and
and
loope
cltd
mov
push
lret
fisubl
fnsave
adc
clc
insl
push
das
rorb
pop
bound
or
cmc
jo
mov
pop
push
lret
cmp
jmp
imull
iret
mov
lods
jb
push
mov
test
xchg
xchg
push
stos
xchg
test
mov
aaa
push
push
mov
clc
mov
xchg
pop
mov
mov
sbb
jbe
sub
push
fs
clc
add
xorl
mov
pop
jle,pt
or
out
iret
nop
jge
mov
push
sub
cmp
in
sub
pop
dec
jne
shlb
jo
out
dec
in
dec
insl
lahf
push
stos
shll
pop
push
lret
testb
jmp
das
icebp
xor
or
adc
push
enter
popf
mov
mov
bound
std
stc
loope
mov
mov
mov
inc
in
mov
push
scas
sub
push
lock
lahf
mov
mov
xlat
lods
dec
push
pop
data16
pcmpeqb
mov
outsl
arpl
adc
sbb
add
mov
inc
insb
in
inc
ja
orb
mov
adc
or
or
pop
jmp
test
je
pop
mov
xchg
adc
lahf
lods
cli
inc
jns
mov
mov
arpl
add
arpl
sahf
adc
fnstsw
or
int3
jae
push
dec
cs
xchg
cmp
pop
or
scas
enter
pop
dec
jl
arpl
xchg
adc
jbe
shr
dec
pop
test
mov
xor
xchg
scas
out
mov
push
and
add
or
lret
sub
fldl
out
test
insb
aaa
repnz
addl
mov
dec
ljmp
mov
lret
pop
mov
movl
add
into
rolb
xor
enter
mov
xchg
xlat
pop
sahf
jl
and
mov
movsl
xlat
fidivs
hlt
push
push
enter
mov
inc
mov
std
rolb
mov
push
push
or
dec
dec
cmp
clc
push
mov
iret
test
dec
es
leave
test
outsb
ds
cmp
shr
mov
enter
ret
and
sbb
stos
xor
pop
cmp
mov
out
mov
push
int3
testb
in
neg
test
jecxz
lcall
xor
fadd
repnz
push
sub
pop
jge
adc
cmp
xchg
lock
pop
mov
cld
push
fwait
icebp
fucom
cltd
mov
sti
shr
lods
xchg
push
cmp
inc
stos
cmc
xor
xor
mov
pop
adcl
push
jmp
inc
int3
dec
sbb
pusha
out
leave
mov
insl
mov
pop
rorb
jle
mov
jmp
mov
cld
jns
dec
cmpsb
xor
es
nop
hlt
repz
adc
out
push
adc
pop
mov
or
enter
lret
bound
inc
adc
mov
push
out
jge
jge
xor
jb
mov
cmp
fldl
dec
ss
aas
xor
pop
and
sbb
test
test
movb
gs
hlt
sbb
jle
lahf
clc
test
ja,pn
fldl
fadd
lock
push
shl
add
sub
popf
jo
mov
insl
dec
dec
movsl
push
or
jmp
push
and
xor
xchg
mov
popa
dec
xlat
mov
leave
shrl
mov
pop
fistl
insb
add
inc
push
jb
aas
adc
pop
adc
jg
int3
jmp
out
rorb
vpcmpgtb
insb
stos
push
mov
insb
xchg
pop
fs
cmp
testl
fwait
mov
call
mov
inc
xchg
and
fisttps
push
dec
inc
or
mov
jmp
pop
jne
or
push
jg
inc
stc
xchg
movsb
jge
lds
jge
pop
push
imul
repz
add
sbbb
or
cmp
and
jne
shrb
stc
add
pop
xor
dec
add
popl
mov
add
mov
in
in
movsl
int3
mov
sub
movsl
inc
or
push
pop
cltd
rorb
cmc
aas
sti
dec
fsubrl
ret
adc
icebp
push
ljmp
cmpsb
xorl
cld
int3
shll
pusha
jp
push
arpl
in
mov
imul
sarb
jno
mov
cmp
push
cs
add
push
dec
cwtl
xchg
sahf
std
je
pop
lock
pop
data16
sbb
call
insb
pop
outsl
sub
loop
xchg
or
xor
and
add
out
fcmovu
sub
pop
sub
mov
sbb
push
and
push
jns
and
mov
mov
add
dec
and
rclb
cli
test
pop
setle
cmp
arpl
call
mov
sub
sub
sbb
sbb
mov
jbe
out
cltd
xchg
enter
pop
sbb
outsl
mov
dec
fnstcw
or
mov
mov
shl
push
in
push
test
inc
rcll
aaa
pusha
fsub
enter
inc
add
subb
mov
pop
mov
adc
insb
xchg
lock
cmp
jmp
mov
or
sub
inc
rcrl
push
movsb
or
jl
xchg
pusha
pop
jge
jnp
xor
mov
imul
or
pop
pop
test
mov
cmpsl
out
sub
inc
mov
mov
push
pop
sub
outsb
cmc
xchg
push
stc
arpl
mov
ja
in
cmp
push
xchg
aaa
mov
or
sbb
cld
rcrb
jecxz
xchg
cmp
test
in
xor
mov
inc
daa
mov
dec
push
pop
cs
xlat
mov
cltd
mov
jle
adc
jnp
test
int
data16
pop
mov
sub
sbb
add
or
and
rcrb
iret
movsb
pop
cmp
cmp
push
jae
adc
pop
cmp
adc
adc
loope
cmp
xchg
ljmp
loopne
adc
and
frstor
dec
test
cmpsl
mov
mov
mov
stos
xchg
fs
fiadds
imul
test
mov
outsl
jnp
repz
xchg
pop
sbbb
int3
iret
xchg
dec
jl
es
push
and
fstpl
loopne
fisubrs
jmp
pop
rep
jb
fcmove
cs
test
pop
sbb
inc
shrb
ficompl
sub
add
ret
jns
xchg
mov
shl
cli
dec
pushf
jle
movsb
mov
out
mov
cmp
add
cmc
scas
popl
gs
add
xor
mov
adc
lea
lods
sbb
pop
sbb
outsb
cvtps2pi
sub
das
stos
xor
fisttpl
orb
push
pop
mov
lds
mov
push
test
inc
jmp
std
iret
push
test
arpl
inc
inc
adc
decl
aaa
out
mov
xchg
shr
and
sub
pop
stos
lcall
cld
xchg
inc
les
mov
mov
xor
test
push
jns
iret
sbb
dec
jo
jns
popa
mov
sti
vmread
or
out
mov
mov
cmc
mov
pop
mov
bnd
push
adc
nop
ja
cli
mov
dec
stos
add
gs
mov
xor
and
xor
fdivrs
imul
test
adc
xlat
loop
sbb
test
shll
inc
pop
lahf
imul
cmp
xor
adc
and
fdivrl
dec
xchg
nop
mov
mov
negl
ljmp
cmp
xchg
add
mov
insl
mov
pusha
fildl
fistpll
xlat
fcmovnb
cmc
mov
cmp
cmp
ja
jmp
call
call
je
fiadds
aam
sub
adc
push
mov
addl
jo
cltd
add
xchg
imul
pop
int
mov
jl
push
popa
lcall
das
sbb
popa
sarb
test
stos
gs
das
int3
or
cmc
inc
sub
jp
inc
test
pop
fdivr
jge
jno
cmp
mov
test
rdpmc
test
and
and
xor
test
ds
push
orl
jb
dec
and
mov
repz
fcompl
sahf
lea
xor
inc
rcll
cli
stos
sub
mov
dec
cmp
push
insl
sub
inc
lret
jmp
div
pop
push
clc
and
pop
or
fs
scas
aas
mov
push
jp
dec
sub
stc
notl
add
jae
dec
hlt
lahf
jnp
rorb
adc
push
sub
loope
int
cmp
notl
push
xor
cmc
dec
outsb
mov
and
fldenv
mov
sti
cltd
lods
fnstsw
gs
data16
aas
add
mov
jp
cwtl
jne
add
sbb
sub
test
adc
fsts
dec
xchg
lea
pushf
js
cmp
dec
mov
inc
sub
pop
mov
mov
sbb
test
lea
repnz
or
in
sbb
and
fldt
rcrb
mov
xlat
dec
mov
dec
aaa
stc
xchg
out
ror
in
mov
mov
subl
fadds
fildl
push
sub
xchg
mov
push
push
push
pop
dec
test
dec
inc
xchg
nop
scas
cmp
int3
mov
and
mov
or
fmuls
push
je
pop
jmp
inc
enter
rcll
jne
out
dec
mov
inc
movb
sbb
dec
xchg
sahf
and
aad
or
push
sbb
mov
aaa
pusha
jmp
ljmp
popf
hlt
mov
adc
filds
pop
sub
jne
xor
jno
cltd
mov
dec
mov
add
out
mov
fstp
or
inc
or
fidivrl
orb
xor
divb
loope
lahf
in
aaa
je
jb
fsubs
sbb
and
push
mov
popl
nop
adc
mov
mov
icebp
scas
jle
xchg
push
or
adc
adc
scas
jne
push
adc
stos
mov
loop
mov
leave
repz
fsubrl
mov
std
pop
xor
inc
adc
mov
jg
ljmp
jp
fsub
mov
xor
or
add
add
sub
ja
andl
or
loopne
das
lea
jle
insl
inc
daa
lods
xchg
test
xchg
add
jb
gs
jo
sbb
imul
jmp
push
outsb
push
outsl
loope
jno
sti
cmp
or
xchg
mov
test
pop
jnp
mov
and
stc
jmp
sub
sub
fadds
or
mov
out
fcoml
mov
out
push
incl
dec
dec
and
out
adc
inc
xor
imul
or
ja
insb
xchg
and
adc
dec
push
mov
ret
test
movb
mov
outsl
out
pop
aad
add
mov
adc
xor
pushf
call
pop
inc
hlt
lcall
int
scas
dec
repnz
push
ja
adc
repz
mov
jp
mov
clc
fidivrs
pop
xor
mov
fnsave
or
mov
xor
or
dec
ret
xor
push
mov
sbb
lock
inc
repnz
fsubr
int3
mov
jl
sti
mov
cmpsl
fwait
xchg
stos
jae
and
fsubrp
rclb
dec
adc
push
fimull
jnp
jp
lret
cmc
hlt
xor
xchg
adc
pop
lods
or
leave
mov
mov
mov
mov
pop
push
inc
lds
test
inc
rolb
out
out
gs
add
inc
sbb
cmc
add
fwait
out
adc
outsl
test
fwait
cmp
int
das
test
sti
out
in
mov
mov
testb
aas
movsb
pusha
xor
adc
inc
cmp
dec
push
mov
arpl
ror
imul
mov
loop
into
cli
inc
inc
push
pop
test
ret
js
test
dec
jge
jg
xchg
inc
movsl
jl
movsl
push
dec
or
mov
push
jl
into
mov
testb
pop
das
icebp
repz
call
xor
push
pop
mov
into
mov
cmp
xor
leave
outsb
or
push
cmpsl
jae
in
negl
in
cmp
int
imull
pushf
fwait
mov
test
push
leave
jns
adc
mov
cmp
inc
jne
mov
mov
dec
enter
or
dec
cmpsl
aaa
test
push
fmull
arpl
in
pop
dec
popf
lcall
inc
inc
rcll
stos
adc
push
sbb
sbb
or
push
push
aad
sub
pop
or
mov
stos
pop
out
incl
movsb
add
test
jo
sub
pop
cwtl
ret
in
jno
loop
das
sub
movsl
mov
cmp
lods
mov
add
pop
inc
negl
addr16
sbb
ret
pushf
in
and
mov
nop
push
xor
xchg
cmp
jge
inc
mov
lods
sub
in
icebp
cli
inc
cmp
clc
scas
aad
in
lahf
jns
sarl
mov
mov
fistpl
lcall
dec
and
shrl
mov
fildl
negb
push
lea
cmc
push
mov
fistl
dec
dec
sub
jbe
jmp
push
dec
mov
pop
pop
pop
push
cs
fistl
and
les
add
jae
movsb
dec
arpl
mov
cld
mov
daa
nop
cmp
popa
cltd
adc
dec
leave
xor
sbb
fdivr
in
sbb
cmp
fnstsw
insl
pop
ret
or
sti
push
add
dec
push
popw
and
push
ds
inc
mov
jae,pn
clc
xlat
imul
sbb
repz
pop
add
mov
fcomp
xchg
pusha
mov
int
dec
repnz
sub
pop
adc
neg
mov
pop
repnz
push
inc
inc
xchg
popa
sbb
cmp
push
test
sti
cmp
movsl
xchg
sbb
enter
cmp
cwtl
xlat
cwtl
insl
xchg
add
lds
out
cmp
lret
sbb
and
dec
dec
jne
dec
pop
mov
push
push
fsubrs
and
ds
mov
pop
xchg
jge
cld
jne
call
insl
sub
mov
pop
and
xchg
mov
clc
pop
cmp
popa
mov
push
pop
push
mov
int
cld
icebp
int
xor
ds
ret
pop
fstps
fcoms
fcmovnbe
das
adc
adc
and
notb
cmp
pminsw
aaa
jmp
test
lret
xor
sbb
aas
sbb
cmp
jp
push
adc
stc
inc
cltd
adc
inc
cmp
sti
fadds
pop
gs
and
inc
sbb
jae,pt
es
jg
dec
mov
cwtl
xchg
lret
iret
xchg
lahf
rorb
fbstp
mov
cmpl
cmp
jle
insb
cwtl
cmp
or
outsl
sub
ret
nop
push
or
xchg
negl
add
dec
add
cmpsl
arpl
stos
insb
and
xchg
mov
scas
mov
sbb
aas
jl
rorl
adc
inc
stos
mov
ds
mov
mulw
mov
test
push
test
mov
sbb
stc
or
into
sub
repz
xchg
sahf
daa
lret
mov
imull
pop
arpl
mov
loop
negb
adc
aas
sbb
fldl2e
imul
add
jns
inc
cmc
enter
popw
mov
icebp
in
insl
loopne
cmp
pop
add
add
mov
imul
sbb
call
sahf
out
or
sarl
outsb
mov
pop
lcall
mov
pop
or
sub
jmp
ficomps
cmpsl
stos
int
jno
cld
add
out
lcall
mov
adc
lret
jno
je
xchg
je
lds
out
shll
inc
or
hlt
movsl
mov
adc
and
pop
push
js
testb
stc
leave
xchg
adc
imull
mov
inc
xlat
xor
xchg
stos
sti
popf
out
xor
or
xchg
xchg
jb
and
addr16
je
in
jnp
add
pop
loopne
sub
and
mov
pushf
jae
mov
cmp
adc
sahf
adcb
cmp
inc
mov
push
jbe
push
movsl
arpl
cli
cmc
adc
jmp
addr16
mov
or
push
or
jp
mov
jecxz
mov
or
jnp
nop
aas
rol
mov
push
loope
das
jecxz
ret
cmp
push
andb
mov
cmp
xchg
fsubrl
icebp
test
leave
into
mov
sahf
or
test
subb
movsb
and
lock
pop
or
sbb
jno
adc
repz
shll
je
shrl
jae
mov
inc
jno
aam
clc
dec
mov
int3
xor
test
arpl
shlb
pop
or
cmpsb
cwtl
mov
dec
lahf
or
push
sub
mov
arpl
cmc
add
in
int3
aad
mov
subb
mov
jg
mov
jle
mov
fsub
clc
adc
xchg
into
inc
lcall
fimuls
mov
mov
shll
aad
in
inc
push
cmp
neg
inc
push
add
cli
push
adc
paddb
mov
ja
sbb
incb
xchg
jbe
mov
pop
and
mov
or
add
insl
push
jno
fnstcw
mov
xlat
mov
add
js
lahf
popa
ljmp
or
ret
andb
mov
push
or
lret
mov
scas
movb
dec
pusha
rclb
jl
xchg
push
mov
cs
popa
in
stos
jl
loop
xchg
into
fcompl
jne
gs
jne
dec
shrb
jns
jp
inc
push
sub
xchg
pop
add
sahf
pop
mov
jne
xchg
aad
pop
stos
rorb
inc
dec
or
dec
test
fdivr
or
psubsw
scas
mov
lds
sbb
mov
pop
xchg
jo
add
jo
sti
and
pop
mov
cmp
jno
inc
cmpsl
test
cmpsb
inc
ret
push
mov
ret
or
jo
je
lds
inc
jp
push
lock
dec
dec
jmp
aad
pop
incl
xchg
or
data16
pop
movsl
test
and
pop
jnp
or
lahf
insb
lahf
dec
bound
and
scas
insb
or
js
xor
xchg
or
dec
or
inc
popa
or
xor
repnz
xchg
mov
les
jl
dec
sahf
popf
adc
mov
bound
hlt
insl
xor
mov
xorb
mov
cltd
add
pop
cmp
clc
pushf
add
xor
or
jns
and
cmp
insl
imul
loop
xchg
mov
push
out
cmp
push
pop
loop
inc
pop
push
push
mov
lods
mov
push
jle
mov
cmc
daa
test
stos
xor
or
pop
mov
scas
or
jecxz
aad
xor
in
pop
sub
imul
xchg
out
push
sarw
mov
jnp
aas
cmp
cmp
lock
xchg
out
pop
xor
clc
xchg
ja
xor
sub
shrb
jl
mov
cwtl
imulb
movsl
push
fs
icebp
out
into
cmp
mov
popf
cmpsb
pop
inc
xor
clc
cmp
imul
add
adcb
cmp
cwtl
mov
adc
in
das
in
push
ja
mulb
pop
ss
imul
mov
dec
pop
cs
and
xor
sbb
push
cltd
sub
cmp
push
cmp
imull
popa
test
jecxz
push
xor
push
popa
aam
and
push
inc
push
inc
add
test
pop
stos
push
fwait
or
in
pop
pop
rcll
imul
push
sub
fs
call
xor
pop
inc
and
cli
cld
nop
addr16
fadds
jno
push
cs
push
jg
test
je
mov
clc
mov
add
mov
lcall
sub
fsub
jnp
clc
ljmp
outsl
sbb
decb
jmp
frstor
push
sbb
into
add
push
add
ss
leavew
in
jb
add
out
mov
loope
int3
add
mov
call
mov
sbb
mov
hlt
jl
adc
and
add
mov
mov
mov
jp
cwtl
fstpt
popa
xor
js
mov
loope
xchg
sub
push
or
out
loop
dec
mov
xchg
or
cmp
pop
and
adc
rorl
cvttps2pi
pop
add
cmp
out
dec
in
addr16
scas
mov
jl
pop
push
arpl
push
pop
xlat
movaps
lods
loope
outsb
mull
add
cli
inc
pop
mov
inc
cmp
fwait
inc
imul
loop
repnz
jnp
fbld
push
adc
out
jno
jb
jge
insb
jb
or
fdivl
sub
mov
add
int
imul
jg
add
js
loopne
xchg
xor
cmc
mov
sbb
dec
mov
pop
or
xchg
push
mov
out
inc
inc
sbb
push
cmp
iret
adc
and
sub
xor
sbb
jns
inc
xchg
sbb
es
data16
ficoml
cld
sbb
cmp
arpl
out
dec
sbb
loop
lea
fstpl
dec
and
jle
test
pop
jl,pn
and
sub
adc
and
aad
cltd
sti
lret
jo
ds
int
ret
fwait
xchg
sahf
pop
jb
scas
loope
add
daa
mov
or
pop
lock
lcall
pop
rcll
dec
dec
das
lods
aam
icebp
divb
and
inc
pop
enter
and
and
clc
lock
hlt
cmp
incl
jbe
aam
inc
and
cmp
pop
and
dec
data16
and
mov
cmp
std
xbegin
sti
or
and
xchg
jno
dec
adc
fwait
outsl
test
fistpl
dec
jp
mov
iret
mov
xchg
lods
test
fidivs
pop
fdivl
mov
jp
dec
loop
div
sahf
fidivs
jmp
ret
xor
cmpsb
pop
cli
xor
mov
popa
roll
ftst
or
and
inc
xor
cmpsl
push
or
xchg
incl
pop
in
pop
dec
das
or
add
cmpl
jns
lock
mov
xor
fisttpl
cmp
es
jno
jne
jns
aas
and
outsl
push
insl
jecxz
pop
push
fwait
loope
jo
ret
mov
jg
insb
inc
es
js
xchg
cwtl
push
and
pop
in
fcomps
push
lret
lods
mov
xor
in
inc
push
mov
lret
jne
aas
sub
outsl
ss
pop
xor
sub
mov
jbe
sarb
or
pusha
pop
sbb
test
sub
xchg
popa
movsb
sub
sbb
cmp
ret
mov
pop
mov
js
push
add
mov
lahf
ret
mov
and
fadds
cltd
mov
sahf
jbe
ret
xchg
xorb
mov
sub
das
into
xor
fs
jmp
pusha
xor
mov
int
out
scas
je
jbe
xchg
mov
jnp
xor
jo
cmp
cmpsl
and
sarl
push
mov
push
shrb
jne
pop
mov
adc
subl
cmc
pusha
add
iret
pop
ds
bnd
mov
push
add
loopne
sub
sub
pop
sub
hlt
mov
dec
test
test
les
andl
lcall
sub
and
xchg
sbb
xor
aas
and
sub
lcall
movsb
pop
xchg
lret
mov
xlat
aas
bnd
xchg
cwtl
xor
mov
dec
cmc
add
mov
fstp
mov
xor
loope
mov
lret
xor
int
stc
mov
sbb
add
sbb
mov
xor
imul
mov
clc
test
jo
inc
int3
sahf
fdivrl
imul
add
and
mov
push
push
xchg
test
adcb
mov
dec
xor
outsb
xor
cmp
add
out
mov
mov
mov
je
adc
dec
scas
adcl
je
repz
sbb
lds
mov
cmp
xchg
imul
fsubrs
divl
enter
scas
pop
rol
test
ret
push
mov
xor
test
mov
std
add
mov
mov
lret
adc
xchg
sub
aas
inc
lcall
pop
xchg
mov
fcom
ss
add
sub
mov
aam
push
cli
mov
lods
das
lret
inc
pop
inc
stos
cmp
mov
xor
dec
jne
jecxz
pop
mov
cmp
and
xlat
push
cmc
push
jp
and
pushl
ljmp
fcomps
push
out
pop
jns
test
or
aas
das
cmp
lock
sub
sbbb
cmc
cmc
cmpsb
ja
int3
jne
xchg
push
insb
xor
notl
inc
in
xchg
mov
dec
cltd
push
bound
fsub
addr16
out
sub
adc
inc
sahf
pop
je
lahf
imul
inc
test
out
popa
iret
test
mov
pop
fdivrl
xchg
xor
out
or
pop
push
add
sbb
inc
xchg
lret
nop
in
insl
es
loopne
sub
xor
push
ror
sbb
mov
xchg
loopne
dec
xor
lods
adc
mov
cmp
xchg
or
ljmp
enter
js
sub
mov
stos
jns
inc
push
fiaddl
xchg
iret
pop
addl
sbbl
test
cltd
push
pop
adc
das
aas
outsb
shll
out
and
pop
or
cmp
loopne
adc
cltd
popf
call
wbinvd
pop
mov
sbb
adc
das
cmp
lcall
lahf
push
pop
jbe
cltd
mov
jle
shr
loopne
mov
sti
lods
movsb
adc
movsb
popa
add
adc
mov
cmpsl
fs
xor
hlt
jb
push
or
sub
inc
scas
add
push
push
jns
mov
and
push
int3
fcomip
push
adc
loope
out
movsl
push
lahf
cld
push
insb
out
mov
push
divps
mov
xchg
inc
lock
subb
ljmp
lret
mov
das
mov
mov
mov
sbb
jb
mov
cmc
push
and
push
or
and
arpl
jbe
ja
adc
inc
pushf
insb
and
repnz
in
xor
repz
push
pop
in
hlt
push
in
mov
jae
fildll
mov
jbe
rolb
mov
outsl
xor
add
rolb
sub
and
nop/reserved
push
gs
push
mov
dec
lods
or
jp
scas
push
sub
xchg
inc
fidivrs
jno
mov
xchg
jle
out
mov
cmpsl
mov
bnd
mov
scas
sub
xchg
adc
ret
ss
ficoml
jbe
mov
das
xchg
addr16
cmc
mov
imul
pop
add
jnp
cmc
std
xor
ret
lret
jbe
push
pop
ja
adc
je
mov
mov
xor
ja
jb
mov
xorb
sbb
cmp
lahf
jns
jmp
mov
ljmp
push
shrb
les
push
fistps
shlb
iret
sub
sub
mov
testb
xchg
xor
add
mov
add
or
jecxz
sub
add
inc
cltd
fs
fnstcw
mov
std
das
data16
push
lock
mov
in
xor
mov
xor
cmp
aas
mov
mov
add
xchg
pushf
dec
in
stos
mov
test
jnp
test
dec
add
test
sub
or
cmp
loope
xchg
push
inc
lea
cmp
addr16
jns
imul
out
mov
idivb
dec
ljmp
jb
ret
mov
or
pop
jns
clc
scas
ret
out
inc
xor
pop
dec
gs
aam
les
stos
test
cmp
std
inc
into
push
inc
pop
cmpl
and
mov
mov
clc
pop
sbb
popa
shl
notl
lods
mov
adc
aam
lods
insl
mov
push
adc
loop
adc
jns
adc
jns
fwait
es
stos
xor
sub
adc
mov
sbb
push
popa
mov
cmp
ds
out
jno
ljmp
mov
and
out
movsl
lock
jns
pop
sub
in
mov
pop
dec
sahf
ss
inc
push
rcr
xor
sbb
addr16
imul
cmc
inc
cwtl
loop
in
cmp
ret
cli
pop
inc
pop
ret
enter
mov
jno
outsb
imul
imul
push
push
xor
fnsave
rcll
pop
dec
shrb
ficoms
mov
rclb
adc
mov
in
adc
imul
rol
and
nop
fimull
jns
add
loope
aas
sbb
in
adc
mov
mov
aam
pop
aas
dec
mov
dec
inc
ret
hlt
sub
mov
mov
adc
adc
push
outsl
notl
mov
jbe
jne
lods
add
push
mov
ss
mov
pop
imul
xorb
mov
cmp
loop
outsl
insl
sbb
stc
fs
inc
mov
fsubr
mov
je
add
stos
and
fisubs
push
and
xchg
mov
aas
xor
mov
mov
pop
cs
data16
or
lods
shl
mov
scas
mov
mov
cmp
sub
incl
fcoms
imulb
rorl
cmp
dec
push
adc
pop
push
jg
stc
pop
mov
int
ret
fbld
sti
mov
adc
pushf
jo
and
and
mov
incl
and
gs
fsubl
push
in
incl
out
jle
rcl
xchg
mov
sbb
jo
xor
aas
xchg
outsl
mov
iret
xchg
sar
mov
jbe
incb
movsb
test
loope
aad
or
popf
scas
or
mov
xor
inc
xor
orl
pop
mov
xchg
call
aaa
outsl
ja
loope
pop
cmc
sbb
es
lock
mov
push
add
mov
divl
sbb
xor
cmp
fwait
iret
fsubs
xchg
push
cld
push
xchg
leave
push
push
jl
or
add
int3
scas
pop
cmp
cmpsl
scas
sbb
xchg
push
lock
fs
lods
cmp
lock
jle
jmp
cli
cwtl
inc
cmc
jo
das
das
add
insb
loope
mov
gs
mov
push
movsb
push
rorb
sub
fistps
addr16
lea
mov
mov
mov
repz
je
xchg
mov
stc
xchg
pop
pop
pop
pop
cmpsb
xchg
cmp
sti
dec
mov
mov
adc
icebp
push
xchg
mov
ret
pop
adc
mov
sbb
and
sar
mov
cmp
jae
mov
cld
mov
shll
jnp
jmp
aaa
adc
dec
and
nop
sbb
adc
mov
xchg
jb
xor
aam
adc
orb
rclb
jnp
xor
test
cmp
mov
stos
arpl
cmp
or
cmp
and
int
aas
iret
fldl
fwait
mov
cwtl
or
ds
and
push
mov
mov
in
stc
jmp
rep
jb
outsl
xchg
xor
popl
pop
out
and
outsl
in
insb
stos
adc
and
leave
fldenv
jo
rorb
pop
mov
inc
movsb
jl
xor
push
dec
clc
daa
dec
cmp
add
iret
xor
jnp
pushf
pop
hlt
icebp
push
push
mov
and
es
sub
fnstsw
xor
inc
stos
xlat
xor
push
gs
daa
lret
add
data16
xchg
in
gs
dec
mov
pop
lret
rcl
lds
inc
and
mov
xlat
les
test
js
mov
jp
sahf
out
cmpsb
jnp
push
or
jnp
pop
xor
rcll
or
into
push
sub
loopne
add
fildl
in
pushf
jecxz
jg
outsl
jns
das
dec
mov
fbstp
or
jb
mov
movsl
hlt
clc
imul
in
ljmp
out
sub
pop
mov
inc
insl
cmp
or
pop
jecxz
fucomip
mov
xor
sub
ja
inc
test
jle
adc
sti
sti
jns
jne
xchg
je
sub
clc
repz
loop
aam
sbb
mov
mov
add
push
or
jmp
xchg
addr16
mov
mov
enter
mov
orb
pusha
xchg
out
insb
sub
dec
pop
sarb
inc
push
fadds
adc
dec
sbb
push
insb
cmp
sbbb
sahf
and
repz
jns
cmpsb
cmp
mov
or
test
add
adc
outsl
dec
push
dec
jb
sub
xor
adc
ja
enter
jg
arpl
in
inc
ds
mov
push
pop
arpl
insb
jp
fisttpl
mov
rclb
dec
cltd
cmp
sub
sbb
repz
ret
insl
mov
pop
mov
mov
pop
pushf
xchg
aam
insl
mov
lahf
inc
adc
push
cld
sbb
call
fisubl
lret
inc
aaa
jg
les
adc
fimull
test
subl
shlb
xchg
mov
ljmp
test
pop
inc
xchg
sub
popa
insb
dec
jbe
xchg
popf
icebp
aas
stos
add
xchg
sarb
pop
daa
cld
fs
inc
pop
call
test
aaa
jp
repz
xlat
mov
adc
test
inc
inc
pop
fadd
testl
stos
xchg
out
lods
mov
push
or
sbb
les
jae
cld
mov
jno
push
out
rorl
and
xor
popl
lock
inc
sarb
mov
mov
add
lock
add
lcall
xor
xchg
xor
mov
dec
repz
inc
scas
push
dec
cmp
cs
iret
add
popf
call
and
fbld
mov
jb
and
insl
or
or
adc
jnp
insl
decl
adc
sbb
xor
adc
sub
mov
iret
addr16
insl
incl
lahf
xor
push
cmpsl
repnz
push
stos
rcll
pop
movsb
leave
push
cmc
scas
jmp
mov
push
ret
pop
loope
cltd
int3
fsubl
loope
cmp
call
push
or
push
shll
int3
adc
shlb
aad
mov
fbld
fistpll
rcll
cmp
mov
and
and
subb
xchg
and
inc
cmp
int
jae
lods
int3
add
or
sarb
mov
loope
mov
push
jge
dec
insl
xchg
cmp
daa
sub
repnz
inc
fxch
nop
subb
movsl
nop
push
and
loop
roll
shlb
xchg
adc
mov
in
sbb
mull
adc
ja
repz
fwait
aad
lods
mov
mov
dec
shl
jmp
sbb
scas
lock
ds
sarl
cwtl
xor
push
ret
shl
pop
xchg
mov
ret
jne
nop
push
adc
loope
adc
or
or
iret
adcl
dec
cltd
aas
ret
cltd
jg
and
in
mov
out
lret
fisttpl
or
fisttps
jbe
ds
and
mov
int3
xchg
xor
lahf
mov
sub
pop
xchg
lods
jp
addb
gs
ja
mov
imul
sarl
xchg
imul
shll
lret
lret
mov
add
lock
inc
mov
hlt
dec
sahf
mov
adc
jp
aas
mov
lods
insb
sub
cli
mov
push
repz
rol
mov
push
repz
popf
test
adc
divl
lods
xor
mov
les
dec
in
stos
jecxz
shlb
sbb
dec
int3
stos
xchg
push
nop
loopne
xchg
test
xchg
shlb
xchg
cltd
aad
lahf
push
add
incl
jne
fdivp
sub
jecxz
lods
fcoms
mov
loope
adc
mov
mov
repz
les
mov
jne
lock
dec
dec
lret
adc
rorl
dec
xchg
push
sbbb
mov
jmp
xchg
mov
pop
push
enter
jecxz
xor
add
mov
in
js
aam
addb
inc
mov
jo
and
stos
jae
cmp
xchg
aas
mov
xor
movb
xor
push
cltd
cli
stos
stos
imul
cmpsb
sbb
cmpsl
pop
or
jno
xchg
aad
lods
scas
cmp
or
pop
pop
mov
mov
mov
jb
jmp
cs
push
sub
sub
fidivrs
in
adc
adc
addr16
and
pop
add
pushf
daa
sbb
cli
or
mov
out
pop
in
adc
xchg
insb
add
pop
fidivs
popf
setg
lahf
loop
jg
xorl
and
rolb
fsubs
and
data16
hlt
fidivl
lods
out
loope
jmp
andl
push
mov
inc
insl
xchg
cmpsb
sub
cmp
or
mov
in
push
imul
fmuls
adc
jmp
adc
push
mov
and
add
dec
cs
or
xchg
sahf
iret
inc
inc
xchg
lcall
push
mov
adc
xchg
mov
sbb
cli
and
jbe
adc
push
jne
and
lock
stos
lock
sqrtps
imul
je
add
jne
mov
cld
push
cli
je
jbe
popa
bound
xorb
pop
repnz
adc
lds
adc
in
push
or
push
sbb
jb
add
or
mov
mov
call
push
lcall
in
jo
jle
adc
testb
xor
mov
cmp
test
sbb
mov
push
adc
aas
mov
fiadds
jg
fistps
sbb
ret
jne
xchg
pop
stc
cmpb
andb
pop
push
mov
cli
lds
or
test
sbb
lock
test
call
xchg
bound
push
xchg
nop
cmp
jecxz
in
push
jae
fstps
dec
pop
sarl
int3
xchg
and
ljmp
sbb
into
mulb
test
or
cmp
leave
out
fldcw
aas
push
ja
mov
arpl
and
mov
hlt
test
or
xor
in
fwait
out
cld
push
sub
push
out
inc
adc
push
cmp
lods
inc
in
imul
movsb
adc
cmpsb
ds
das
and
and
cmp
add
push
and
mov
xor
push
nop
stos
mov
push
pusha
and
mov
push
xchg
not
pop
into
and
jno
rorl
fidivs
dec
mov
push
outsb
adc
cmc
jo
sbb
js
xor
movsl
adc
in
stos
jp
xor
xor
jns
jns
cli
in
xchg
add
and
inc
sbb
and
fs
dec
lds
in
inc
or
into
mov
mov
inc
xor
fadd
mov
pushf
cmp
insl
cmp
imul
rolb
movsb
mov
cs
cmp
mov
sbb
add
mov
fs
subb
and
mov
sub
cli
mov
shl
fs
jae
xor
jl
xchg
sti
lret
dec
and
ficoms
popf
xor
jge
in
inc
lahf
cwtl
lahf
int
push
sahf
mov
test
inc
popf
and
cs
jmp
mov
xchg
cmc
ret
jns
inc
or
pop
gs
inc
push
xchg
jno
mov
xor
std
mov
dec
mov
rclb
dec
inc
sbb
shr
sub
lret
mov
or
cmc
outsb
rcll
rorl
add
push
inc
call
and
push
pop
int3
jns
dec
jge
jb
orb
sarl
inc
sbb
repnz
sbb
fcomp
in
dec
pushf
pop
data16
andb
aaa
jae
clc
dec
lcall
aad
mov
mov
incl
cli
cmp
mov
inc
xchg
mov
ljmp
addr16
or
add
inc
ret
testl
fdivrs
insb
inc
push
adc
fs
add
dec
and
push
xchg
jecxz
mov
mov
mov
rcr
jg
pop
shlb
xlat
inc
repz
xchg
and
dec
iret
mov
cmpsb
xor
leave
pusha
mov
orl
cmp
lock
std
in
and
aad
mov
daa
mov
rdtsc
scas
inc
shll
lret
xchg
and
icebp
call
imul
mov
or
std
jg
int
cld
sbb
je
mov
imul
int3
xchg
aam
ds
dec
cmp
fwait
sahf
outsb
fcomps
xchg
or
test
xchg
enter
jbe
inc
test
clc
in
and
xor
ret
add
jno
ljmp
scas
cmp
popf
push
sub
aam
sub
pop
loopne
std
add
stos
hlt
xor
iret
xchg
or
flds
xor
or
mov
inc
lods
lods
addr16
xchg
movsl
scas
cmp
pop
dec
mov
pusha
cmp
push
cmp
inc
add
loopne
xchg
orb
dec
fld
gs
jle
push
sbb
pusha
aaa
ja
cmp
mov
daa
inc
push
or
dec
mov
stos
sbb
sarb
inc
js
ret
pushf
add
mov
and
inc
sbb
cmpsl
rcl
mov
lcall
and
les
mov
fdivr
or
aam
mov
sub
pop
push
and
push
mov
add
lahf
mov
out
outsl
in
add
hlt
icebp
int
dec
test
or
push
addr16
lock
or
stos
sub
pushf
dec
fnsave
fbstp
lcall
sti
mov
sbb
cmp
sbb
cmp
cmp
int3
mov
cmpsl
jo
dec
inc
shrl
lret
cltd
sti
ja
adc
fimuls
sbb
clc
pop
sbb
leave
mov
aad
sahf
and
lock
sbb
mov
sbb
nop
dec
testb
mov
mov
shr
outsb
lcall
in
outsl
inc
fcomps
pop
jg
test
nop
pop
or
lods
cmp
sub
lret
add
aaa
mov
pop
and
mov
movl
mov
xor
mov
xor
add
or
pop
inc
es
cli
mov
jmp
dec
ret
sub
lods
out
shlb
jne
xchg
cmp
arpl
inc
aad
cs
les
dec
sub
cmp
lret
rorb
cs
test
push
dec
jne
mov
cmp
lods
sarl
or
mov
ds
dec
test
loopne
sub
dec
fwait
push
mov
in
inc
mov
in
mov
test
call
jne
push
std
rorl
add
add
jecxz
in
imul
into
pop
push
roll
cmc
sti
adc
push
mov
xor
icebp
mov
sbb
pop
fsts
mov
jb
mov
out
aad
or
push
mov
push
mov
cmp
mov
lahf
and
push
loope
out
inc
loope
outsl
pop
push
loop
js
jne
sbb
fcomip
repz
dec
sbb
add
shrl
rolb
loopne
js
into
sub
divb
mov
adc
scas
lods
sbbl
shll
loopne
rol
fdivrs
jmp
dec
sahf
cs
xor
outsb
jo
mov
inc
lock
mov
cmp
popf
mov
jne
insl
push
div
lret
mov
lret
popa
js
insl
imulb
fimuls
orb
les
sbb
repnz
aaa
inc
xlat
test
pop
pushf
inc
stc
mov
pop
mov
cmp
ljmp
mov
sub
sub
ljmp
nop
jl
cmpsb
pop
fildl
pop
leave
int
je
lret
and
sbb
sbb
les
dec
pop
sbb
imul
adc
mov
xchg
rorl
pcmpeqb
mov
ja
xchg
xchg
decl
jmp
repnz
pop
popf
les
cmp
cmp
jge
push
lret
dec
jne
lret
mov
sbb
fistpll
or
fcoms
dec
mov
movlhps
xchg
jno
sbb
testl
sbb
sbb
mov
mov
std
popf
outsl
pusha
jo
iret
fildl
mov
jbe
and
dec
fnsave
movsl
add
rclb
es
push
pop
inc
outsb
pop
push
movsl
testl
mov
mov
lret
mov
call
cld
icebp
dec
xchg
or
mov
cmp
bound
jle
lret
mov
js
aam
cmpb
sub
aas
dec
pop
test
arpl
mov
fidivs
les
pop
je
dec
or
mov
and
and
push
mov
cmc
xor
cmp
pop
nop
dec
in
pushf
repz
add
sub
mov
test
stos
cmp
popa
cmpsl
xor
aaa
push
cwtl
mov
inc
ret
test
mov
mov
scas
add
push
jbe
pop
jns
cs
cwtl
xchg
pop
out
pop
sub
enter
sarb
adc
xchg
jge
jns
fs
out
daa
orl
jnp
jge
inc
cwtl
xchg
testb
cltd
ss
sub
push
add
add
lahf
cli
mov
and
inc
or
scas
and
jecxz
testb
cmp
jmp
push
gs
bound
jne
lahf
cmp
lods
roll
push
bound
or
sbb
mov
cs
mov
test
das
cmp
dec
xor
in
xchg
popl
pop
xor
xchg
aas
ss
movsl
sub
add
test
dec
dec
lock
xlat
leave
adc
add
test
jb
sarl
movsb
push
cmp
mov
xchg
popf
fildl
scas
mov
outsl
and
imul
pop
sar
std
add
mov
sub
mov
gs
test
jo
or
enter
adc
enter
cli
push
imul
jne
pop
jno
in
movsl
and
mov
cmp
xchg
mov
mov
test
push
sub
lahf
int
and
divps
mov
xor
push
pop
in
shll
fs
je
sub
dec
lds
sbbb
push
mov
lods
xchg
shr
dec
call
leave
test
dec
mov
and
js
or
dec
shll
sbb
cmc
mov
gs
mov
int3
int3
lods
push
bound
pop
repz
enter
cmpsl
test
in
fs
cmp
push
ss
push
jp
jo
add
or
cmp
xchg
gs
xchg
lret
or
in
xchg
je
push
xor
sbb
fsts
add
cmp
add
xchg
push
mov
push
gs
aas
pop
sti
addr16
xchg
or
fwait
sbb
xor
mov
outsb
out
cltd
or
push
xchg
xor
ljmp
and
and
test
sub
sub
xor
test
add
in
dec
pop
jnp
push
mov
in
pcmpgtw
movsl
add
test
in
and
mov
mov
jecxz
addr16
aam
popf
ror
push
mov
jg
jne
push
sbb
lods
cmp
jl
sbb
scas
pushl
or
mov
mov
push
adc
xchg
movsl
pop
dec
pushf
outsb
movl
sbb
mov
sub
mov
test
jb
pop
neg
adcl
das
push
test
dec
aad
add
xchg
movsl
and
add
dec
je
push
in
in
hlt
cmp
pop
push
lock
outsb
and
addr16
cltd
or
fsubs
ret
mov
push
lock
adc
mov
pop
rcll
push
push
jge
add
loope
mov
lods
mov
sub
cltd
scas
aam
xor
iret
lret
dec
push
fsubs
or
and
cmpb
mov
push
iret
cmpsb
int3
cs
in
aaa
sub
lahf
shl
dec
sahf
inc
push
push
sbb
adc
sarl
test
mov
push
dec
add
ljmp
jmp
in
loop
push
int
cmp
cmp
sbb
inc
add
lods
insl
imul
dec
cmp
decb
clc
iret
push
jns
mov
jp
out
mov
adc
mov
push
or
jmp
xchg
xchg
test
out
imul
inc
test
hlt
sub
adc
pop
jb
in
in
aas
jne
push
shlb
movsb
jge
ljmp
mov
shl
divb
adc
dec
mov
adc
cli
lea
aad
mov
das
cmp
mov
xor
cltd
jecxz
bound
out
mov
stos
pop
xchg
into
add
sbb
scas
imul
mov
pop
inc
inc
fdiv
mov
sbb
aam
pop
lds
out
int
rol
mov
test
scas
mov
pushf
popa
fcmovnbe
fisttpll
psllq
xchg
sbb
clc
cmp
mov
and
dec
push
cmpsb
inc
test
or
cmc
call
sarl
mov
xchg
push
push
mov
push
jno
stc
xchg
pop
or
orb
jae
lcall
ja
add
adc
sti
adc
pop
mov
jbe
sub
incb
mov
mov
inc
je
mov
mov
mov
mov
cmc
sbb
clc
mov
aad
lcall
adc
mov
outsl
xchg
inc
test
out
cwtl
add
pusha
jbe
push
pop
xchg
mov
cmp
mov
mov
xor
and
insl
test
push
lods
popa
dec
rcl
aam
jge
mov
sbb
xor
dec
pop
test
mov
int3
adc
shlb
sbb
psrlw
ret
mov
test
popa
pop
mov
push
adc
mov
icebp
sbb
not
pop
sbb
decl
push
mov
push
mov
pop
dec
into
loop
sub
sub
popf
mov
pusha
inc
inc
push
dec
inc
pop
xlat
out
cmc
xchg
mov
out
les
push
inc
xchg
or
out
bound
push
hlt
fwait
mov
pop
jecxz
aas
fcmovb
pop
fsts
lock
mov
push
push
add
jns
inc
int
cmp
push
push
push
sub
fimuls
fbld
loop
inc
jg
or
pop
hlt
add
imul
jg
dec
sub
les
ret
mov
mov
fisttpl
xor
stos
mov
jle
jg
mov
scas
testb
jmp
xor
and
in
adc
pop
xchg
sbb
lret
mov
sub
mov
inc
mov
and
loope
das
in
pop
push
mov
pop
sub
sahf
sbb
xor
or
cs
pop
cli
addb
lcall
mov
enter
pop
add
out
or
jl
cmpsl
push
ret
divl
loop
fwait
and
dec
clc
js
pop
ljmp
pusha
in
push
insl
movsb
adc
imul
cmp
std
ficompl
push
xchg
jns
loop
orl
xchg
rolb
push
adc
aaa
jbe
xchg
jb
jne
cld
rcl
cld
fdivl
inc
jno
adc
dec
and
push
pushf
ds
xchg
sbb
cmpsb
popf
mov
adc
mov
dec
loop
dec
les
push
cs
psubsw
scas
repnz
repz
clc
dec
int
sub
push
cltd
mov
aad
imul
int3
js
mov
xchg
lods
imul
test
test
fcomi
add
fisttps
enter
icebp
fld
and
xorl
enter
imul
pop
incb
mov
in
add
jne
mov
mov
push
jno
test
data16
mov
and
testl
cmp
loope
add
pop
and
cmp
test
mov
inc
rolb
mov
ret
inc
hlt
xchg
fisttps
pusha
ret
rolb
jl
push
in
shr
adc
inc
xchg
popa
dec
enter
ret
sbb
xor
pusha
push
push
mov
testl
out
rorb
test
dec
ss
adc
movsl
mov
les
dec
lds
adc
push
xchg
jae
adc
popa
or
xchg
scas
jnp
push
std
add
push
and
jmp
and
sbb
jle
call
inc
inc
sbb
add
out
test
dec
dec
adc
jb
xchg
pop
jbe
inc
fdivp
xchg
mov
dec
push
sub
addr16
pop
dec
jo
sbb
xlat
or
ret
sub
outsb
dec
movsb
lock
out
xchg
cmp
pop
stos
cmp
or
pop
xchg
push
leave
jge
dec
jno
das
or
cmp
stc
loope
sbb
nop
lea
movd
inc
je
js
lods
mov
stos
nop
test
aas
inc
sbb
cli
inc
jns
outsl
aaa
pop
mov
cmp
into
int3
xchg
xchg
adc
cmp
roll
gs
xor
dec
xchg
mov
cwtl
addl
adc
adc
divb
cwtl
sub
movsl
rcrb
push
aaa
arpl
cmp
loope
xor
jge
dec
mov
shll
cmp
xor
frstor
out
das
mov
icebp
pop
jp
out
nop
inc
mov
xchg
lock
sti
jge
jmp
sbb
sub
or
dec
rclb
jae
imul
pop
aad
adc
mov
dec
push
xchg
mov
mov
xchg
movsl
sbb
mov
cmp
test
mov
addl
push
aas
rcl
cmpsb
inc
jo
inc
insb
push
cli
push
push
dec
scas
pushf
add
cmp
pushf
add
mov
sti
popf
sarl
mov
fwait
jnp
imul
arpl
pop
adc
in
pop
mov
xor
outsb
jne
jecxz
jbe
mov
and
cmp
mov
or
jmp
cmpsl
mov
lahf
jmp
push
fs
sbb
mov
mov
mov
sub
mov
movsl
arpl
fisubl
pushl
or
xchg
arpl
cmp
xor
pop
lods
push
roll
push
mov
mov
out
loopne
adcb
lahf
cmp
fcomps
add
ret
cmpl
mov
jb
sbb
jmp
mov
xchg
mov
jecxz
cmp
adc
lret
sbb
dec
mov
mov
dec
movsl
lret
ds
in
cmp
xchg
jecxz
mov
xor
imul
jmp
test
sarb
lods
bound
jmp
les
roll
cmp
test
cmp
cmc
hlt
insb
jno
mov
mov
lods
inc
cmp
lcall
jmp
lods
cs
lret
ret
arpl
sub
movzwl
xchg
mov
adc
add
adcl
imul
stc
clc
and
out
loope
in
mov
popf
aam
mov
sub
iret
cmp
jno
mov
sbbl
cmp
adc
or
rorb
ds
mov
jmp
and
fprem
push
rcl
into
cmc
mov
dec
notb
mov
fbstp
and
add
repnz
jle
jb
arpl
inc
add
jb
adcl
es
sbb
jns
mov
nop
les
sbb
test
push
scas
mov
daa
mov
das
pop
add
loopne
dec
fwait
shlb
out
mov
in
mov
jnp
es
add
and
mov
rcl
push
hlt
push
push
mov
cmp
stos
sti
push
ror
add
ret
or
pop
iret
aam
loope
movsl
ficompl
gs
out
sub
xchg
in
push
aaa
flds
jecxz
xchg
test
jbe
loop
or
fs
sub
dec
add
inc
push
jge
loope
push
lret
push
scas
push
movsl
jp
dec
pop
arpl
lcallw
aas
leave
fbstp
adc
xchg
movsl
or
cmp
rcrb
bnd
mov
sbb
ret
xlat
add
cmc
cmpsl
mov
and
sbb
or
add
jmp
mov
adc
fs
neg
mov
cltd
shlb
add
cmpxchg
adc
jg
mov
pop
push
or
xor
sahf
cli
rcrl
shll
ja
lahf
xchg
mov
jle
es
xorl
js
lock
nop
lcall
aad
push
mov
mov
stc
daa
in
idivb
jbe
jbe
lods
xor
popa
lret
fcoms
sbb
mov
sti
mov
pusha
push
cmp
stos
movl
and
mov
negl
xchg
js
mov
and
add
ss
jb
jmp
stc
jb
jae
xor
sbb
mov
aas
scas
je
jne
jcxz
pop
movsb
sub
popf
xor
pop
dec
stos
popf
mov
or
and
mov
pop
mov
jo
notl
fistl
shll
fistl
stc
insb
inc
imul
pop
xchg
add
test
push
leave
hlt
addr16
pop
test
cwtl
in
xor
scas
in
repz
je
loope
jle
aaa
adc
movsb
jo
inc
push
mov
inc
or
dec
int3
call
aad
adc
icebp
jns
mov
xor
mov
clc
jns
pushf
mov
call
dec
cwtl
pushf
fildll
imul
js
sar
cmp
push
in
paddw
cld
iret
mov
sarl
xchg
jbe
xlat
das
dec
imul
ret
pop
cmp
sarl
stos
fcmove
lret
jg
aam
lcall
orl
and
push
push
icebp
test
sub
cmp
lcall
sub
bound
out
add
pop
sahf
gs
or
pusha
les
push
or
sub
sbb
xchg
push
mov
xor
fldt
adc
or
cmpsb
sub
xchg
jo
cli
add
shll
test
pop
inc
sub
xchg
mov
shrl
push
push
in
out
pop
out
int3
add
std
inc
adcl
cmp
mov
pop
fisttpl
mov
and
fwait
or
loope
add
sbb
insl
imul
pop
sub
in
test
inc
cmp
adc
xlat
fistpll
decl
jecxz
adc
cltd
add
stos
cmc
jl
icebp
jmp
push
roll
xchg
outsl
mov
loopne
mov
mov
dec
test
movsl
loop
loop
hlt
iret
out
jecxz
lret
dec
movsl
jecxz
cmp
xchg
out
add
adc
icebp
ljmp
testb
nop
or
dec
sbb
outsl
dec
lea
push
mov
inc
push
xor
in
mov
fbstp
mov
lcall
loop
xchg
jl
insl
jl
insl
push
mov
dec
loope
mov
ja
das
or
add
or
popa
daa
dec
sahf
inc
in
cmp
jle
je
inc
inc
push
add
loope
mov
or
sbb
pop
sub
out
sub
lret
daa
push
adc
xchg
cmp
scas
jns
mov
iret
dec
stc
hlt
and
insb
roll
xchg
outsb
mov
ss
popf
dec
jno
mov
popa
pop
ss
test
push
xchg
mov
ficomps
clc
add
or
ret
mov
adc
xchg
mov
xor
xor
test
mov
int3
mov
or
mov
sti
idivb
push
or
xchg
in
jno
mov
fisubrl
insb
add
push
pmulhw
pop
cmp
int
in
pop
in
lret
mulb
scas
sub
xchg
mov
sbb
push
pop
arpl
loope
js
movsl
leave
xor
lret
mov
and
aas
add
scas
xchg
adc
out
jo
mov
jo
pop
out
cmpsb
clc
add
sub
sahf
cmp
sub
mov
cmp
ja
es
cmp
xor
add
cmc
xchg
mov
stos
test
fnstenv
pop
in
outsl
clc
fisttpll
into
sar
pop
stos
in
pop
outsl
add
push
jae
inc
lods
push
add
adc
push
mov
mov
xor
push
mov
cmpsl
lret
loopne
rol
push
inc
scas
cltd
mov
push
mov
aam
aam
aad
ds
lahf
dec
int3
xor
cmp
mov
push
rolb
cmp
or
cs
mov
push
mov
call
xchg
repnz
xchg
push
sub
cmp
call
xchg
dec
push
mov
push
aam
stc
test
cltd
notb
cmpsb
lret
je
fsubrl
mov
dec
fdivl
sbbl
mov
mov
inc
outsb
ljmp
cmp
cmp
adcl
sbb
jecxz
call
popa
add
add
add
iret
add
mov
leave
daa
push
clc
es
mov
sbb
les
and
push
out
cmp
push
xchg
push
dec
notl
leave
push
jo
xor
push
jp
clc
pop
fnstsw
cmp
in
aam
frstor
push
or
ret
pusha
jp
into
fisttpl
lods
adc
or
lods
inc
bound
out
jb
movsb
mov
jg
cmp
mov
mov
stos
fucomp
add
push
add
sbb
push
fmul
mov
add
dec
dec
add
lahf
jnp
sbb
loopne
scas
sbb
sub
movsb
popf
bound
add
mov
xchg
add
cli
ljmp
mov
cmc
iret
fs
std
mov
push
mov
jg
lcall
fwait
mov
push
jns
jnp
lds
xor
mov
out
fildl
jo
push
mov
aad
mov
mov
loopne
into
xor
int
push
sahf
subb
icebp
fsubp
insl
jb
lock
xchg
movsl
mov
or
gs
mov
jbe
movsl
mov
lea
rol
test
movsb
sub
popf
dec
cmp
mov
mov
or
arpl
rcrb
mov
adc
and
cmp
ret
stos
hlt
sbb
fxch
hlt
aas
in
add
andb
daa
test
sub
adc
dec
cmpsb
sti
lea
lds
loop
test
loop
and
pop
jecxz
mov
sub
xchg
mov
add
and
cs
icebp
je
ljmp
scas
stc
scas
pop
and
insb
cs
inc
cli
add
or
lods
push
movsb
dec
jle
stos
mov
mov
daa
add
ss
sub
mov
loopne
jmp
adc
es
sti
orl
adc
repz
out
sbbl
lods
sbb
mov
ficoml
mov
jg
ret
adc
add
mov
lock
adc
lret
xor
sahf
das
cmp
insl
push
mov
lods
xchg
push
jl
jo
mov
das
cli
cmp
aaa
sbb
or
js
mov
or
mov
mov
fcomps
filds
es
lock
sub
testb
or
push
push
mov
sbb
jg
sti
or
imulb
mov
jmp
push
fs
jno
add
ds
jno
stos
je
jge
clc
and
outsb
mov
xor
jnp
enter
movsl
pop
xor
add
mov
mov
pop
std
sub
add
stos
aaa
cmp
mov
pop
xor
pop
sub
push
std
int
stos
daa
jmp
ret
gs
sbb
repnz
or
jns
inc
sarl
or
cmp
in
mov
ficomps
jae
lcall
lock
xchg
ret
and
mov
mov
pop
adc
xchg
fimull
push
and
and
loope
lret
call
repnz
and
sti
jecxz
iret
cmp
rep
cld
adc
cmp
int3
gs
insb
lret
test
inc
jne
das
rorl
hlt
sbbb
push
push
cltd
call
sub
add
mov
leave
jne
test
ss
sti
mov
xchg
call
or
daa
mov
jb
add
in
dec
test
sub
mov
sbb
sub
test
or
cmp
rcrb
dec
pop
cmc
ret
hlt
sbb
data16
js
push
out
movsl
inc
in
mov
hlt
loope
scas
jne
fistl
xorb
sub
jg
cmpsb
dec
jge
inc
mov
rorl
lods
sbb
sar
jp
sub
sbb
and
cmpsb
sbb
ds
pop
xchg
pop
cmp
aaa
lods
jecxz
sbb
or
xor
xor
test
push
mov
outsb
outsb
mov
adc
std
sbb
jbe
mov
outsl
loopne,pn
or
fs
or
dec
fmuls
ret
or
sub
xor
push
or
leave
dec
loope
in
test
inc
jmp
xchg
or
cmpsl
imul
stos
mov
movl
loop
jbe
and
addb
add
pop
jne
mov
js
out
and
jmp
sbb
cltd
das
mov
xchg
je
push
pop
cmp
sub
push
jne
pop
out
popl
push
dec
or
jb
xor
sbb
nop
lret
dec
xchg
sub
sti
cwtl
xchg
mov
mulb
jge
pop
mov
dec
divl
mov
jns
out
dec
stos
mov
mov
pop
jns
fisttpl
adc
jns
xor
movsb
jmp
pushf
movsl
out
cld
mov
adc
std
or
leave
faddl
xor
dec
shlb
jnp
push
sbb
xchg
lds
inc
xchg
push
xor
mov
push
push
xchg
test
sub
out
in
ljmp
lea
movsb
in
jno
cmp
push
fnstsw
movb
mov
mov
xchg
sbb
mov
or
dec
rcll
pop
sub
ljmp
adc
push
jg
mov
iret
imul
cld
xor
in
jns
jnp
fwait
iret
mov
and
out
fbld
push
xchg
fcoms
sahf
fsubrl
pushf
and
xor
mov
xchg
lds
int3
outsb
pop
fldcw
loope
das
cld
fs
popa
adc
push
mov
mov
addr16
jmp
stc
xor
orl
xchg
mov
sbbl
adc
pushf
stc
aam
incb
xorb
push
je
inc
inc
sahf
inc
cmp
xchg
lahf
icebp
jnp
pop
call
in
add
mov
gs
imul
dec
jg
loopne
loop
out
leave
aaa
push
lret
pop
cmpsb
mov
push
push
fldenv
push
jl
xchg
push
cmp
testb
idivb
cmpsl
xchg
fwait
jb
stos
stos
push
jo
scas
out
enter
push
out
push
jmp
lcall
hlt
ljmp
test
xchg
movsl
add
jbe
popf
inc
dec
pop
push
enter
das
lcall
movsb
nop
repz
sbb
jo
xor
inc
jle
call
sub
or
mov
insl
loopne
cs
cld
insl
sub
push
in
pop
loop
int
inc
lret
cmpsl
sbb
aas
je
inc
mov
pop
push
adc
lret
xor
in
or
mov
xor
mov
lret
or
inc
lods
loop
out
sti
dec
xchg
xor
jbe
cwtl
jbe
xchg
fcomp
push
push
pop
dec
xchg
popa
add
aad
or
jne
dec
cwtl
fs
lods
inc
mov
movsb
inc
in
shlb
insl
test
pop
fdiv
cs
add
sar
mov
cmpsl
imul
push
add
push
pop
sub
test
sti
xor
fdiv
adc
lret
adc
cmp
mov
push
out
popa
mov
cmpsl
mov
inc
sbb
jbe
mov
rep
data16
aaa
or
mov
xor
push
addr16
mov
pop
mov
movaps
add
fcomps
cli
rorb
movsb
test
push
mov
fs
sbb
sbb
jae
lock
pop
and
fldl
ljmp
call
and
jmp
cmp
add
xchg
cmp
xor
loopne
mov
movb
jge
jl
cmp
sarb
sub
int3
hlt
mov
xchg
push
fildll
aam
lds
pop
orb
sarl
aam
dec
xchg
mov
ljmp
aad
aad
das
push
mov
fisttps
jne
xchg
scas
cmpsl
inc
add
mov
stc
lret
fdivrl
into
fidivrs
dec
testb
jne
push
dec
sub
scas
clc
dec
and
insl
in
stc
repz
fstps
add
fidivrl
repz
xchg
mov
add
pushf
sub
lods
adc
xchg
xor
fcmove
xchg
adc
out
pop
js
cmp
lea
pushf
pop
cltd
in
hlt
movsl
xor
lret
add
cs
sub
in
fsin
rorb
scas
or
mov
pop
out
mov
arpl
cli
fldenv
jge
in
out
in
dec
sbb
sub
pop
aam
iret
cmp
sub
rcrl
sbb
and
jle
out
insb
stc
std
lock
fnstcw
mov
fldl
ss
lret
stos
fsubl
out
js
add
cmpsb
sbb
inc
cmc
inc
sti
stos
push
cltd
pop
cwtl
jmp
fisubrl
test
dec
add
test
mov
add
mov
lret
pop
loope
xor
cmp
xor
cmc
add
jg
outsl
xchg
stos
pop
sub
jne
stos
es
out
repz
outsl
loopne
out
cmp
xorps
cmpsl
mov
sahf
pop
xor
push
sbb
loopne
cmpsb
push
jns
mov
dec
push
mov
pusha
jno
dec
loop
cs
or
imul
in
mov
jbe
fadds
dec
push
dec
lcall
mov
sub
adcb
fsubl
in
leave
nop
rcl
mov
adc
sub
sti
mov
fisubrl
xor
xchg
jbe
pushw
insb
or
ds
data16
jae
outsb
cs
out
xor
bound
add
enter
xchg
ficoml
xor
xor
stc
mov
dec
jo
mov
ja
push
sub
test
mov
mov
mov
imul
add
xchg
add
lcall
roll
cltd
lea
and
addr16
popa
dec
out
daa
xchg
add
outsl
into
jae
mov
fcoml
push
ds
in
pushf
stc
pop
stos
ja
mov
stos
cmpsl
in
scas
in
xchg
mov
call
inc
mov
add
push
in
xchg
imulb
xor
dec
cmp
insb
out
push
mov
push
and
or
stc
insl
mov
dec
pop
push
shrb
arpl
daa
scas
sbb
loop
sub
lods
mov
lahf
test
push
divb
inc
and
sbb
pop
pusha
test
clc
negb
ret
jl
add
xchg
push
mov
testb
cmp
sub
js
lret
add
js
shl
std
filds
xor
or
imul
cmpsb
xchg
rclb
fisubrl
mov
pop
add
and
xor
jbe
mov
sub
mov
das
jns
arpl
inc
imul
mov
cmp
mov
sub
inc
dec
jp
xor
push
jns
mov
mov
flds
dec
mov
fadds
mov
add
stos
mov
mov
adc
icebp
and
leave
pop
fwait
adc
pop
movl
ficoms
in
repz
mov
icebp
and
pop
pushf
lea
jle
inc
lods
push
cmpl
addb
xchg
repnz
test
jns
aad
xor
sbb
btc
movsb
jecxz
lock
movsl
adc
sub
push
add
and
adc
insb
sbb
lret
outsl
lret
fsubrs
es
movl
cmpsb
mulb
repz
inc
pop
iret
mov
push
pop
aad
mov
mov
mov
addl
fnstsw
insb
fld1
stos
movl
and
clc
sub
xchg
sbb
cltd
stos
xlat
loope
sub
xchg
repz
push
add
mov
inc
adc
mov
mov
sbb
dec
jge
rolb
add
arpl
inc
jge
pop
dec
test
fsub
xchg
shrl
or
cmp
mov
mov
mov
repnz
jne
jo
sub
cld
adc
and
mov
or
outsb
cmp
rcrb
fstpl
sbb
xchg
std
pop
rorl
cmp
enter
or
sbb
push
pop
push
cwtl
xor
ja
jmp
jbe
xorl
test
ds
mov
dec
test
inc
stos
mov
imul
sub
jge
cmp
aaa
outsb
fsubl
sbb
xchg
push
mov
mov
mov
xor
add
out
jne
in
xor
lcall
data16
lods
xchg
enter
mov
or
jp
pusha
jg
sahf
subb
popa
mov
pop
aaa
dec
adc
mov
mov
sti
push
cmc
sbb
inc
into
mov
inc
inc
mov
fld
sub
push
and
dec
cs
add
jns
daa
push
divl
pop
inc
jnp
fs
les
pop
arpl
and
int3
testb
pop
fsubrl
pop
stc
das
push
push
pop
pop
fs
sub
in
shll
and
dec
xchg
sub
pop
test
cltd
jmp
js
andl
insb
aam
inc
push
rorb
inc
xor
into
lea
aam
rcr
dec
adc
std
inc
test
in
pop
stos
mov
sub
inc
jo
xor
add
bound
jmp
jne
loop
aas
pop
push
mov
mov
dec
sbb
cmpsb
push
fs
mov
sbb
adc
ja
ja
fcomps
loope
jge
jae
sbbl
jmp
outsl
sbb
stos
lods
push
fidivl
fnstcw
mov
addr16
data16
cmp
dec
in
daa
push
dec
or
cli
addl
js
xchg
clc
lahf
inc
cmp
mov
mov
adcb
jg
jmp
or
xor
lcall
fsts
or
and
cmc
int
mov
lock
xlat
mov
inc
or
fmuls
aas
xchg
orb
loope
add
pop
add
inc
movsb
xchg
push
mov
cmp
fucomi
mov
cli
push
js
stc
pushl
dec
push
int
loope
jb
and
in
and
jno
sub
dec
lods
enter
das
mov
inc
push
jbe
pop
rcll
das
dec
ret
cwtl
and
popf
notl
pop
out
jo
filds
std
in
pop
mov
shll
cmp
and
jno
push
adc
ret
cmp
fsubs
or
das
out
lcall
pop
stos
movsb
sti
xchg
les
xchg
push
pop
out
lea
lret
int
jbe
inc
xor
js
repnz
push
jecxz
cmp
xorl
xchg
mov
fdivrl
push
mov
xor
push
mov
pop
insb
jne
adc
mov
out
inc
lcall
cli
loope
mov
in
jge
adc
xchg
xchg
mov
mov
mov
pop
aaa
imul
mov
aaa
sbb
cwtl
mov
in
popa
out
xchg
push
sub
test
out
and
sarb
mov
aaa
in
repnz
adc
sub
in
out
mov
loopne
add
subl
cs
sahf
test
es
push
inc
dec
out
pop
in
std
sbbl
xchg
dec
pop
sub
dec
sar
jmp
push
test
in
cmp
mov
test
fs
stc
out
cwtl
neg
jecxz
or
hlt
xor
test
add
mov
fisttps
notl
dec
test
xor
inc
push
adc
repz
mov
lea
shl
hlt
mov
scas
jge
daa
sub
int3
xor
or
xchg
aad
and
orb
jle
daa
dec
xor
lcall
push
xor
je
scas
mov
inc
and
outsl
sub
cli
jp
test
loopne
jns
flds
mov
mov
lea
fcoml
ret
mov
in
dec
test
scas
and
int3
cld
movsb
and
shl
int
test
fisubrl
adcl
out
sbb
gs
loop
inc
sbbl
adc
sbb
sub
aaa
insl
scas
mov
aaa
leave
jg
push
cmp
lds
and
shll
ja
push
iret
test
iret
enter
and
mov
cmc
loope
cmpsl
sub
xchg
xchg
jae
jle
inc
sbb
pop
jl
mov
idivb
dec
pop
loopne
shll
movsl
jecxz
je
or
arpl
out
adc
push
imul
jle
fst
fidivrs
jge
mov
and
shl
stos
push
jecxz
lret
out
in
stos
sub
ss
test
punpckldq
sbb
xchg
pusha
mov
inc
bnd
shld
cmp
sbb
add
ss
jno
sahf
and
rolb
aaa
push
filds
mov
push
daa
in
stc
cmp
adc
pushf
adc
ds
push
gs
scas
lahf
popa
shr
loop
xor
daa
mov
adc
lret
cmp
testb
add
jbe
movups
mov
adc
or
ljmp
xlat
add
push
mov
push
jno
cltd
cmp
jnp
xchg
es
sub
and
jge
out
mov
mov
dec
xchg
data16
scas
jne
icebp
lock
data16
xor
dec
add
pop
rcr
outsb
nop
lcall
or
xchg
mov
fidivs
das
mov
xchg
sbb
adc
std
repz
mov
push
mov
pop
inc
xor
cmc
mov
cmc
push
add
int
dec
sahf
inc
xchg
bnd
or
insl
imul
inc
adc
les
out
inc
fwait
orb
rep
and
jb
push
fildl
jmp
add
mov
pop
jle
jp,pt
rcr
xchg
mov
cmpsl
std
xchg
or
sub
stos
mov
lret
pop
push
jno
lds
je
subl
addb
js
pop
divl
mov
inc
jae
std
pusha
jmp
mov
add
ja
and
out
ljmp
mov
sbb
cmp
addr16
cmp
mul
lret
sbb
pusha
xchg
xor
xor
or
jnp
sbb
scas
pop
mov
cmp
dec
imul
test
andl
push
mov
les
mov
mov
out
ret
lret
fldt
mov
mov
out
lods
xorb
sbb
jns
and
push
mov
jmp
mov
jnp
je
ret
jb
xlat
mov
insb
std
ljmp
test
rorb
jmp
scas
mov
push
mov
pop
cld
mov
sbb
orl
sbb
int3
insl
adcb
cld
es
fsubl
jnp
lods
clc
mov
xchg
mov
scas
stos
cmp
xor
aam
sbb
dec
scas
xchg
jg
hlt
fcompl
testb
sub
sbb
xchg
push
mov
mov
inc
test
fistps
popa
xor
cltd
push
mov
ffree
or
mov
sub
mov
and
mov
aad
aas
sbb
icebp
in
iret
outsb
jecxz
pop
test
fs
xor
cmp
dec
mov
mov
repz
mov
ds
or
sub
and
inc
leave
jl
mov
leave
mov
mov
adc
adc
stos
imull
sbb
jns
inc
test
sub
sbb
lcall
mov
xchg
std
push
mov
add
outsb
repnz
fidivrs
xor
or
imul
test
jp
cmp
xchg
aad
jo
ret
pop
pop
lret
add
dec
push
xor
mov
mov
dec
mov
xor
and
jmp
cltd
in
clc
out
mov
push
sbb
jp
cmp
mov
sbb
xchg
add
jbe
and
or
aaa
or
lcall
stos
adc
pop
cmpsb
mov
icebp
xor
sbb
dec
aam
loope
imul
push
dec
std
loopne
mov
je
mov
addb
mov
fiaddl
ret
cmc
sti
add
xor
loope
sahf
xlat
jnp
scas
and
sbb
cli
fwait
push
jo
push
adc
adc
push
int
pop
jb
mov
testl
add
mov
es
jbe
mov
lea
popa
ret
aam
dec
mov
sub
hlt
fwait
test
jb
rolb
imul
fwait
dec
jns
mov
lret
cmp
jle
and
sbb
std
std
or
icebp
jp
mov
adc
and
imul
xor
sahf
adc
shl
or
out
push
imul
shll
pop
mov
gs
mov
fcomps
cli
cli
gs
or
adc
xchg
push
aaa
imul
fwait
mov
adc
fwait
mov
bnd
dec
xchg
aam
mov
push
push
andb
lret
mov
push
jno
add
int
movsb
mov
js
sub
sub
in
ret
ret
test
out
inc
sub
and
sbb
push
pop
jmp
sub
stos
sbb
jb
hlt
outsl
dec
data16
and
cmp
data16
mov
mov
movsl
pop
iret
pushf
cmc
notl
rcll
and
jg
push
mov
push
push
push
cmp
outsb
inc
inc
loope
fmuls
fcoml
fbstp
sbb
scas
xor
cwtl
cwtl
cwtl
pusha
dec
stos
fisttpl
data16
std
mov
pop
adc
cmp
jbe
imul
inc
cmc
call
les
js
sahf
lds
cmpsb
test
test
inc
cmp
sbb
push
pop
stos
push
sub
insb
pop
pushf
dec
xor
repz
ss
sbb
fst
out
push
fadd
adc
adc
xchg
dec
sub
inc
arpl
cmp
mov
adc
gs
xchg
pop
sti
fimuls
adc
jae
xor
loop
bound
push
nop
rclb
mov
aam
mov
cmp
int
add
aad
loope
imul
add
jge
fstpt
shll
jnp
push
mov
insl
jnp
add
sbb
jge
insb
sbb
mov
adc
xor
pop
stc
in
xchg
sub
stc
jle
xchg
cmp
mov
push
icebp
lock
leave
jb
inc
or
and
add
xlat
adc
add
das
sbb
scas
mov
jmp
inc
pop
nop
adc
out
jno
insl
mov
mov
or
bound
ja
xchg
cltd
test
or
pop
push
pop
mov
mov
in
sub
sbb
rcr
lahf
lea
xchg
loopne
cmp
push
les
sbb
fdivr
lcall
jmp
cmp
add
imul
loop
mov
lods
enter
leave
dec
pop
jns
jp
scas
movl
jle
mov
pop
jecxz
dec
mov
gs
xchg
xor
mov
sub
in
aaa
dec
loop
pop
sbb
sahf
add
mov
add
pop
loop
ret
adc
fcoml
inc
mov
dec
jge
clc
push
pop
outsb
pop
mov
test
pusha
sub
sub
push
fcmovbe
or
jae
stos
add
inc
ss
push
cmc
xor
pop
adc
or
rcll
into
and
push
fcomps
insb
inc
cmpl
out
fcomps
outsl
loopne
adc
dec
shrb
add
dec
cli
xchg
jl
loopne
pop
movsb
out
pop
addr16
and
add
add
sbb
scas
xchg
push
adc
cmpsl
dec
mov
nop
cmp
xchg
cmc
sbb
pusha
adc
cwtl
subb
repz
nop
cmpsl
mov
dec
popa
pop
scas
push
mov
js
lcall
clc
sub
cmpsl
lds
cld
xchg
fs
dec
jno
and
rcl
mov
lock
inc
or
out
mov
repnz
jge
mov
inc
pop
shrl
mov
insl
sti
add
mov
sbb
std
lret
fisubs
push
inc
mov
jnp
hlt
aas
outsl
lea
push
mov
push
mov
mov
sub
pop
ljmp
loope
xchg
push
jo
in
xchg
jnp
clc
subb
sub
sub
jmp
dec
mov
dec
inc
jo
insb
lock
mov
rclb
js
mov
inc
sbb
div
fildl
dec
jns
mov
lds
adc
mov
sub
test
and
es
pop
fistpl
scas
out
push
mov
pushf
test
adc
mov
data16
mov
mov
mov
mov
push
push
sbb
mov
push
push
sbb
stos
push
push
repnz
scas
lods
adc
lcall
xlat
jno
test
mov
cltd
push
bnd
xchg
pop
addr16
mov
cmp
clc
std
jg
adc
xchg
ss
sub
fistpl
mov
xchg
inc
cmp
in
jmp
fadd
aaa
orl
pop
inc
fidivs
pop
aam
xchg
inc
aad
mov
setg
jnp
lahf
inc
ja
movsb
cmp
xor
aas
mov
push
xor
and
lods
mov
dec
and
sub
aad
subb
mov
ds
in
pop
push
enter
cmp
movsb
data16
pop
lret
pop
cmpsl
add
dec
xchg
mov
arpl
stos
xchg
mov
push
pop
mov
inc
subl
out
rcrb
mov
aad
mov
mov
int3
sbb
loope
lahf
mov
out
mov
pop
jecxz
test
mov
out
loopne
mov
mov
xor
dec
cwtl
sti
and
aaa
out
jge
iret
mov
and
aam
cmp
jbe
sub
pop
into
sub
and
sbb
loopne
lds
pushf
mov
xchg
adc
fcom
fiadds
andb
sub
sub
rcr
das
mov
shrl
dec
arpl
std
mull
xchg
cmpsb
in
pop
mov
fucompp
mov
shll
dec
mov
dec
addr16
pop
cwtl
pop
add
dec
cmp
lahf
cmp
mov
insl
sub
lret
jmp
scas
testl
test
push
pop
ljmp
adc
pop
enter
fdivs
in
cmp
bound
push
popa
faddl
jno
mov
mov
push
addr16
sub
loopne
into
or
mov
orb
shl
sarb
push
jecxz
gs
subb
adcl
out
rcrl
jno
add
mov
jecxz
stos
push
not
mov
jno
ja
outsl
xor
ret
dec
insl
sub
pusha
ja
and
aas
cmp
imul
decb
enter
cmp
jns
rorb
add
xchg
pop
outsb
nop
mov
les
pop
inc
adc
lods
ljmp
mov
repz
pop
pusha
push
mov
jmp
insl
inc
repnz
mov
jle
mov
and
scas
popa
insb
dec
test
ja
dec
dec
jmp
or
push
cmp
cmp
and
mov
or
cld
mov
in
push
pop
lea
push
adc
push
cmc
cs
loopne
cmc
hlt
lea
pushf
sbb
pop
mov
push
adc
or
aam
fwait
and
dec
sub
or
mov
mov
jns
jbe
dec
pop
xchg
jnp
pop
adc
add
out
testb
hlt
fdivs
pop
and
adc
ficoml
sub
into
bound
cmp
push
push
push
fstpl
nop
jl
je
dec
sub
xchg
loopne
mov
mov
jno
dec
test
cmpsb
movsl
fisttpll
out
sbb
push
jle
jo
pop
cmpsl
push
pushf
sbbb
inc
ret
shll
inc
imul
adc
inc
mov
lods
push
shlb
cmp
or
pusha
cld
imul
clc
fs
inc
and
jbe
ljmp
les
add
inc
int
jg
pop
cltd
rcrl
mov
xor
sbb
out
je
sbb
lea
lcall
pop
into
movsb
nop
aam
sbb
xchg
push
inc
popa
xor
jge
and
aas
ds
mov
and
stos
lahf
and
xor
add
int3
andl
fnsave
imul
sbb
jge
roll
or
xchg
stc
push
cmp
sti
aam
sub
scas
adc
into
jmp
and
cli
movsl
fimuls
add
out
xlat
sbb
jno,pt
dec
pop
fwait
mov
es
test
add
pop
push
scas
push
mov
ret
les
ret
dec
lahf
push
jns
sbb
pusha
call
cmpsb
xor
in
inc
lods
dec
xor
jp
addr16
dec
cltd
inc
ret
test
in
out
in
ss
xor
testb
cmc
test
mov
pop
call
shlb
sti
rol
cli
lea
data16
cs
cltd
ret
mov
jmp
jl
test
push
pop
lock
dec
xchg
push
and
sub
and
sbb
btc
cmp
rcrl
lret
mov
fidivs
testb
pushf
xchg
jne
jg
push
mov
jecxz
insb
dec
dec
inc
daa
jnp
out
fs
push
sbb
mov
stos
mov
stos
sti
repnz
jns
popf
outsl
cmp
adc
cmc
dec
fcoml
stos
cmp
jle
push
js
lret
cmp
lds
in
lea
add
inc
xchg
ja
push
dec
pop
xchg
add
push
cmpl
jecxz
fwait
js
mov
insb
jl
xor
jb
push
imul
sahf
arpl
push
and
push
add
in
nop
addr16
adc
mov
mov
jbe
outsl
xchg
push
ds
push
mov
and
mov
fwait
push
dec
mov
cmp
shll
daa
call
movsl
mov
arpl
leave
shrl
or
cmpsb
out
mov
jne
scas
add
aaa
fnstcw
insb
cmpsb
mov
pop
hlt
mov
repnz
stos
dec
dec
or
mov
in
jmp
or
lcall
push
inc
fistl
mov
sbb
insl
mov
and
jnp
stc
insb
ss
pop
int3
arpl
cmp
dec
pop
mov
pop
mov
jnp
sbb
adc
arpl
lods
sahf
lea
xor
xchg
test
sub
mov
mov
fistpll
adc
nop
pop
jmp
xchg
pop
out
cmpsb
cmp
stos
inc
std
int
fwait
xor
mov
mov
mov
xor
fldenv
cmp
fld
sarb
shrb
fnstenv
aam
lods
mov
cld
cmc
jns
sub
mov
or
loopne
jne
jns
push
pop
jno
int3
or
dec
ret
addr16
int3
imulb
push
inc
push
fistpll
fnstcw
push
jne
mov
jb
push
insb
sbb
iret
lahf
test
or
int3
rorb
call
mov
popa
incl
fstl
jb
daa
cmp
dec
cmp
jae
sahf
jne
sarb
mov
jp
shrl
pop
dec
das
hlt
insl
outsb
int
mov
xor
fwait
cmp
mov
mov
dec
mov
push
fimuls
lock
test
sub
lock
enter
adc
imul
push
xchg
xlat
leave
jnp
xor
stc
fsub
mov
inc
into
add
cmc
mov
outsl
push
sbb
xchg
imul
mov
dec
pop
out
or
mov
push
add
cmc
loop
lods
push
cmp
mov
mov
in
dec
std
push
adc
push
mov
syscall
pop
lret
sbb
mov
cmp
fmuls
mov
push
mov
pop
loopne
ret
push
xchg
pop
dec
lret
or
cmpsl
lahf
fcoml
int3
aad
outsb
shr
jno
fiaddl
xchg
fcomip
pop
mov
cmpl
xor
or
push
pminsw
enter
cli
enter
dec
in
rorl
xor
sub
xchg
inc
insb
add
popf
jno
out
sti
gs
dec
loope
shl
push
mov
pop
out
cmpsb
and
xlat
fsub
jle
or
push
xchg
into
cmp
mov
push
adc
mov
xchg
sub
daa
fidivrl
repz
popa
dec
or
aaa
jbe
mov
mov
ret
fwait
xchg
sbb
adc
dec
adc
outsb
lahf
roll
xchg
push
lret
add
sarl
inc
xchg
xchg
adc
mov
clc
insl
out
movsl
mov
add
mov
movsl
lahf
jns
test
es
into
mov
xor
mov
pop
dec
mov
fdivp
out
test
push
out
pop
push
cld
push
and
and
mov
pop
add
fwait
das
jns
sub
imul
pop
orb
out
fnsave
iret
pop
mov
or
sbb
mov
xchg
or
ret
lret
jae
cli
mov
ds
stos
arpl
xlat
cwtl
rclb
cli
sub
dec
push
push
loope
xchg
or
xchg
insl
js
and
dec
sbb
pop
filds
cli
jne
ja
pop
fsubp
sub
push
or
rclb
pop
hlt
add
outsl
jle
mov
adc
xchg
int
lret
add
sbb
scas
ret
pop
cltd
repz
mov
js
fisubrl
cmc
pop
outsl
mov
fs
add
addr16
cwtl
cli
mov
popf
pop
push
ja
into
mov
jae
inc
and
clc
inc
les
or
pop
push
sahf
xchg
xor
arpl
sbb
cmc
push
ljmp
hlt
xchg
cmp
jne
mov
sub
xchg
outsb
cmp
stos
jnp
popf
loope
sbb
data16
enter
jecxz
cmp
inc
dec
and
fistpl
and
xor
orb
xlat
std
lret
fstl
sbb
inc
dec
cmp
xor
push
cmp
mov
xor
or
in
shl
icebp
adc
push
cmpsl
aad
lret
cmpsb
pop
jns
mov
dec
outsl
mov
movsb
sti
mov
rcrb
sbb
orb
push
imul
mov
jge
jmp
imul
cmp
loopne
mov
mov
out
push
in
push
cmp
ja
ret
xchg
adc
mov
inc
push
mov
dec
dec
ljmp
xor
push
bound
dec
pop
xor
cmpsb
mov
adc
in
cmp
xchg
aas
jae
sub
roll
push
jns
cmp
lods
sub
xchg
jb
call
cltd
lods
cmp
mov
cmp
add
pusha
stos
pop
cltd
mov
cmpsl
or
cmp
rcl
jno
mov
rorl
inc
movsl
push
fsub
mov
movsl
xor
faddp
cmp
add
test
cmp
xchg
icebp
mov
jle
jae
scas
faddp
adc
or
arpl
rcrl
les
mov
testl
jbe
test
fiaddl
inc
popf
jecxz
int3
mov
aas
jmp
dec
movsl
out
loop
xor
into
push
mov
mov
mov
sbb
or
jno
ror
in
and
cmpsl
or
jge
mov
imul
out
arpl
repnz
arpl
loop
push
lcall
jp
out
mov
jl
into
scas
das
jne
dec
andb
xchg
orl
add
or
test
rorl
dec
test
xor
push
dec
jo
xchg
aaa
jbe
dec
in
fisubs
sub
mov
fimuls
in
lds
xor
jle
or
cmc
cmp
xlat
sub
jmp
add
sbbl
pop
sub
shlb
push
mov
jns
xchg
adc
negb
adc
lret
stc
xchg
dec
mov
xor
outsb
adc
fidivs
fs
dec
mov
lcall
add
fmuls
mov
rclb
out
mov
sub
pop
adcl
sarb
cmp
lret
out
mov
lahf
or
xor
aam
sub
testl
xchg
inc
mov
cli
out
mov
arpl
push
pop
ja
mov
xor
sti
xor
mov
or
cmp
or
inc
arpl
cwtl
in
add
jno
or
in
jbe
cmp
sar
inc
sti
andb
lahf
fwait
std
fwait
fwait
xchg
sbb
aad
push
lret
xorb
pop
in
inc
cli
push
pusha
mov
cli
iret
lcall
daa
jns
out
in
fdivp
sbb
and
dec
pop
mov
and
icebp
jo
xchg
lds
and
inc
jmp
or
cmp
out
mov
jnp
xchg
les
popa
insb
cs
sbb
pop
mov
clc
sbb
sbb
adc
add
loope
lcall
loope
lcall
std
and
sbb
mov
push
mov
aad
or
sti
jp
adc
push
mov
jb
mov
cmpl
lods
aaa
add
pop
and
dec
sub
or
js
add
lahf
divl
add
addr16
xchg
or
in
lret
push
pop
mov
aas
push
or
fnstsw
cld
mov
jl
add
xchg
pushl
add
sahf
rclb
out
inc
nop
adc
cmp
pop
pop
dec
sbb
sbb
xor
jmp
lret
push
pushf
mov
mov
xor
mov
test
imul
inc
or
xchg
out
out
pop
cmp
rclb
xchg
xchg
sar
cmpsl
outsb
inc
cmp
pop
in
dec
jb
pop
leave
arpl
stos
je
idivb
icebp
cmpsb
popf
hlt
dec
xchg
ss
aam
add
into
jl
ficomps
xchg
call
jo
pop
or
cmp
addr16
xlat
int3
jno
fnstcw
lds
jns
test
adc
iret
pop
jecxz
add
shrl
repnz
cli
adc
xlat
dec
push
push
aas
hlt
dec
stos
stos
xor
mov
mov
adc
mov
ds
movb
stos
arpl
sub
and
and
mov
jmp
sub
push
out
push
sahf
cld
cmp
add
out
pop
out
inc
test
jno
inc
jl
inc
clc
sbb
or
dec
std
push
loop
sub
push
dec
addr16
cmp
mov
mov
xchg
in
insb
jge
mov
movsl
stc
xchg
hlt
dec
mov
ljmp
out
scas
mov
in
mov
push
test
sbb
orb
xor
fldl
mov
jle
mov
mov
pusha
aaa
test
xchg
xlat
xchg
pop
ret
cmp
jne
outsl
ds
shrb
imul
mov
inc
pop
cmp
inc
sarl
cwtl
pop
mov
xor
stos
mov
popa
and
sbb
seta
std
dec
mov
xor
enter
inc
pop
test
aad
outsb
inc
add
adc
mov
rcll
xor
mov
sub
std
mov
xor
lea
hlt
xlat
and
popl
dec
jbe
shrl
out
add
xor
push
mov
push
jnp
dec
testb
inc
or
and
imul
arpl
dec
and
xor
and
dec
sub
lret
int
or
cmpb
jle
and
das
sub
and
fs
mov
mov
and
pushf
testb
fisubl
arpl
test
gs
adc
mov
pop
xchg
aad
mov
in
ret
xchg
dec
jnp
ljmp
je
fimuls
fldcw
pushf
or
or
push
mov
push
and
or
sbb
xor
jg
das
sbb
cmpsl
push
pop
xchg
repnz
sub
aaa
repnz
mov
mov
push
jns
enter
bound
and
mov
cmp
jb
or
in
sarl
daa
xchg
add
std
cs
ficoml
test
sub
jae
scas
movsb
add
popa
jae
or
sahf
xchg
lret
pop
push
pusha
and
out
aad
fwait
lock
inc
dec
push
xor
mov
cwtl
mov
sbb
in
roll
mov
test
das
sub
test
das
mov
icebp
xor
jne
mov
or
das
mov
cmpsb
mov
pop
cld
mov
push
nop
std
xchg
inc
push
gs
or
hlt
sbb
dec
pop
test
data16
xorb
mov
cmpxchg
jg
lea
dec
inc
fidivs
jecxz
mov
sub
fnsave
ds
jle
ret
aaa
cwtl
rcll
xor
dec
and
inc
cmp
seto
mov
mov
xchg
xor
push
add
movsl
loop
popf
iret
test
pop
aas
mov
mov
adc
arpl
pop
dec
ds
xorb
pop
or
stos
rcll
mov
or
or
jb
mov
fwait
xchg
mov
sub
mov
xchg
frstor
jecxz
jl
aad
pop
push
push
loope
push
mov
bound
cmpsl
mov
xor
dec
add
cmp
lret
sub
cmp
push
pop
int3
movsb
add
pop
adc
pop
mov
je
bound
mov
pushf
daa
sahf
add
fcomps
and
cmp
pop
and
call
in
and
mov
outsb
out
inc
ja
and
scas
arpl
cmc
sbb
add
int3
jbe
push
cmc
outsl
dec
mov
popa
movsb
dec
cli
fsub
or
fcoml
and
mov
and
pop
mov
or
xor
les
push
inc
jb
xchg
inc
dec
aad
xchg
jnp
and
mov
push
inc
shll
test
or
or
add
loopne
sbb
inc
insb
cmp
imul
out
sahf
sahf
aad
paddsw
pop
loope
mov
and
add
in
add
lahf
fisubl
cmpsb
sub
mov
loope
shr
ret
int
fdivs
dec
adc
dec
push
xchg
outsl
xor
in
sub
ret
rcrl
and
scas
sbb
sbb
es
pop
mov
ss
popf
nop
aaa
loopne
jl
cmp
sbb
dec
mov
sub
sub
add
cmp
addr16
push
pop
lods
in
shll
mov
pusha
jp
aas
lcall
pop
nop
dec
dec
xchg
add
test
mov
adc
ss
scas
sub
sbb
cmp
or
lcall
cmp
insb
push
mov
adc
in
bnd
clc
xchg
add
and
sbb
test
stos
rclb
shrb
or
or
mov
sbb
and
ljmp
lea
ja
stos
xchg
xchg
repz
jo
pop
imul
fdivrs
fldl
adc
mov
dec
movsl
cwtl
test
cmp
or
cmp
adc
lock
adc
cmpb
or
negb
scas
add
in
mov
mov
adc
mov
push
add
inc
loope
call
fsubl
jp
dec
ret
es
dec
ss
andl
inc
and
jge
adc
jns
adc
push
rol
mov
out
xor
ljmp
sarb
jg
inc
sbb
int
mov
outsl
sub
mov
cmp
push
pop
cld
xchg
pop
and
cmp
sbb
pop
out
sub
push
addr16
ret
inc
or
sub
xor
mov
ss
and
push
push
add
and
lret
push
out
dec
lret
xchg
add
and
sub
es
lcall
dec
test
shl
inc
or
sub
cmpsl
mov
and
enter
mov
xlat
in
jo
mov
add
add
in
inc
neg
imul
jnp
cmp
int
sub
cmpsb
rcl
add
dec
divb
xchg
loop
test
imul
push
jns
inc
push
int3
sahf
and
sub
xor
hlt
jmp
fnstcw
pop
mov
or
pop
fisubrs
jo
mov
ss
or
test
imul
mov
jp
mov
add
sbb
aas
inc
sbb
or
and
mov
dec
push
flds
xchg
repz
jp
xor
sub
repz
xchg
imul
push
add
lahf
dec
pop
push
push
xor
ret
aad
xchg
adc
and
out
jmp
mov
bound
pusha
push
cli
xchg
ret
add
icebp
xchg
sbb
rolb
cmpl
dec
je
sub
mov
cmp
xchg
outsl
subl
popf
add
cmp
ja
or
arpl
scas
mov
les
dec
ficoms
jb
js
aam
shl
add
jg
leave
xchg
xor
scas
cmc
jbe
push
icebp
jp
cmp
clc
cltd
call
test
adc
or
mov
lcall
cwtl
dec
mov
fisubrs
rclb
adc
pop
sub
cli
dec
jbe
je
fsubs
mov
xor
test
sbb
add
adc
loopne
lods
lahf
or
movsb
adcl
decl
std
xchg
fistps
inc
xchg
out
das
pop
nop
rcrb
lcall
add
es
leave
cwtl
add
push
es
iret
pop
icebp
arpl
and
inc
dec
jp
jae
add
outsl
push
cmp
addr16
cmp
push
mov
dec
aam
jmp
cmpsl
pop
test
outsl
mov
or
gs
sub
and
dec
sbb
add
sub
jnp
inc
adc
inc
mov
ljmp
daa
repnz
std
inc
loope
adc
subl
or
dec
rorl
pusha
test
mov
push
popa
add
sti
cli
mov
shrl
and
cmpsl
cld
pushf
lds
stc
arpl
xchg
jmp
sub
movsb
cli
xchg
push
in
cmp
mov
rcrb
cld
cmp
mov
icebp
and
mov
sub
mov
push
test
push
lret
xchg
in
aad
les
and
gs
inc
cmp
outsl
xor
inc
insl
mov
shll
pop
mov
aad
fwait
xchg
lods
in
mov
push
push
push
shl
mov
mov
outsb
xor
das
jbe
sub
dec
sbb
dec
dec
cmp
rclb
add
js
xor
jbe
xchg
pop
clc
jne
inc
rcr
imul
mov
lods
mov
stos
inc
movsb
cmp
in
cmp
ljmp
cmp
or
repnz
cs
pop
inc
sbb
orl
gs
stc
andl
sbb
stc
pop
pop
pushf
lret
aaa
add
cwtl
movsb
mov
mov
adc
inc
lods
inc
and
pop
lret
cmp
sbbl
and
lds
sub
jecxz
jo
sbb
shl
in
jb
sub
imul
mov
pop
out
cmp
adc
dec
arpl
mov
movsl
jg
loop
faddl
mov
shlb
add
sbb
jbe
mov
mov
clc
mov
pop
mov
in
idivb
push
pop
jmp
arpl
lret
pop
ljmp
xor
mull
lret
loopne
pop
stc
mov
movsb
mov
loopne
adc
fwait
test
gs
les
add
mov
cmp
scas
std
and
mov
add
and
clc
cmc
hlt
jo
cltd
mov
push
cmp
and
cmp
lahf
mov
add
mov
inc
lahf
xchg
test
lcall
xor
roll
bound
rclb
repz
daa
into
in
sti
lcall
aam
clc
mov
dec
test
cld
add
out
aam
sahf
rcrl
xor
jl
mov
xchg
call
xchg
jmp
inc
cmp
adc
pop
lea
popf
xchg
pop
sub
jmp
xor
adc
loop,pn
data16
and
sarb
xchg
cmpsl
pushf
mov
jo
xor
pop
mov
xchg
mov
sub
out
popf
push
movsb
mov
imulb
lds
hlt
adc
jle
add
fcmove
rorl
inc
int3
faddp
adc
popf
sub
pop
outsl
enter
push
and
push
je
outsb
push
mov
xchg
movsl
jg
push
int
lods
pop
mov
mov
lea
mov
stos
dec
and
xchg
stc
dec
fsub
or
sub
lahf
cmp
ss
xchg
es
sub
aam
fnstsw
cmp
imul
xchg
pop
inc
push
add
mov
cmpsb
cltd
mov
fisttps
pushf
cli
jle
or
loopne
cs
and
fstl
mov
mov
ljmp
mov
xchg
in
or
inc
sub
cld
cmp
call
mov
mov
xlat
aam
lahf
flds
adc
in
push
push
ss
adc
adc
fiadds
outsb
in
pop
das
in
in
ret
je
into
jecxz
stos
leave
sub
lods
pop
jo
popf
daa
in
cmp
xchg
dec
mov
insl
iret
jns
aaa
ja
je
repz
pushf
nop
mov
shll
popf
jae
mov
out
mov
mov
in
add
sub
cmc
and
inc
out
mov
inc
mov
xchg
jb
xor
inc
mov
and
shrl
and
jp
pop
mov
rorl
and
lcall
in
imul
repz
pop
nop
jnp
mov
xor
pop
imul
push
xchg
das
add
hlt
mov
sub
cli
pop
test
jnp
fidivrl
pop
jo
push
mov
jbe
xchg
arpl
cmc
cmc
cmp
sbb
inc
negl
mov
fmulp
ficoml
pop
and
lret
fwait
xor
jb
mov
cmc
xor
add
xchg
mov
imul
jle
test
aas
add
imul
cltd
dec
xchg
dec
aam
pop
add
sub
nop
mov
scas
fiadds
fadd
jg
mov
psraw
fildl
xchg
inc
pushf
inc
mov
xchg
ja
bound
jp
cmc
sahf
cmp
inc
add
add
jge
add
inc
fldt
arpl
scas
adc
mov
sub
pop
push
or
sub
popa
sub
cmovbe
stos
sarl
aaa
jnp
daa
ds
mov
rcrb
inc
or
cmp
sub
adc
xor
clc
pop
dec
push
popa
mov
push
das
fnstsw
and
push
out
ss
mov
lret
loop
sub
repnz
xor
mov
sbb
dec
jp
pop
scas
test
and
arpl
fsub
out
jbe
scas
push
cmp
pop
andl
pop
jbe
daa
mov
div
dec
in
mov
push
pop
jno
scas
mov
ret
sbbb
dec
xchg
sub
mov
cmc
test
mov
xor
aas
aam
dec
ljmp
add
repz
or
sub
jbe
enter
ss
push
and
xchg
in
daa
stc
addr16
popf
inc
imul
test
xchg
mov
inc
add
mov
decl
fcomps
fildl
jne
es
fucom
pop
xor
mov
enter
cmovl
ja
in
mov
stc
jle
dec
xchg
pop
push
mov
bound
and
inc
mov
jne
pop
jno
dec
xchg
insb
jns
dec
pusha
mov
xchg
ss
push
inc
or
lcall
in
insl
add
clc
aad
jl
xorb
push
and
mov
stos
add
mov
mov
sub
ret
rcl
or
add
nop
movsl
jmp
mov
fwait
xor
mov
lcall
pushf
iret
adc
dec
std
or
pop
jns
mov
cld
mov
inc
ret
push
pop
aad
ljmp
inc
loope
stos
jp
push
addr16
fsubl
mov
lret
lock
and
je
cmp
pop
fwait
ret
nop
cmpsb
adc
pop
jmp
and
push
or
and
push
adc
push
clc
mov
ja
mov
je
mov
test
pop
fwait
bound
cmp
ficoms
xchg
test
cmpb
lds
or
and
imul
mov
or
push
lods
push
cmp
repz
cmpl
pop
dec
pop
testl
cmp
mov
cmp
mov
xchg
movsb
cmp
jb
loop
adc
mov
xor
scas
inc
lds
xor
and
xchg
push
inc
push
inc
dec
mov
scas
pop
sub
add
ja
jg
inc
addb
out
adc
mov
mov
lahf
aad
lret
sub
out
push
pushf
sub
ja
jl
cmpsl
adcb
push
jne
dec
inc
jle
cmc
adc
xchg
mov
lahf
addr16
add
sub
and
mov
jl
pop
loop
dec
xchg
sbb
sbb
xchg
add
add
ss
pop
shrl
xchg
dec
scas
inc
jne
iret
lods
xchg
and
add
add
aaa
aas
test
stos
jmp
inc
xchg
cwtl
rclb
or
push
push
mov
and
adc
fbld
mov
add
das
lods
dec
push
lahf
pushf
push
jne
ljmp
sub
sub
loope
je
jo
pop
push
pop
dec
mov
xchg
rorb
filds
push
xlat
cs
xchg
mov
sbb
xchg
dec
cmp
pop
popf
in
push
les
mov
fdivrl
loop
in
push
cmp
jg
xor
clc
mulb
push
pop
or
mov
cmpsl
pop
cmc
ficoml
pusha
xchg
mov
push
loope
test
aaa
mov
sbb
aad
ficompl
pop
jnp
insl
cmp
mov
in
arpl
addr16
pop
enter
and
cmp
lods
xchg
cwtl
mov
or
cmp
arpl
loope
and
in
popf
mov
and
pusha
adc
jl
ds
fdivr
iret
dec
les
mov
pop
xor
jbe
aad
cmc
fnsave
test
xchg
jno
popf
cmp
dec
pop
fildl
jae
mov
lock
xor
cli
dec
sub
test
jmp
xchg
outsb
rcrl
dec
daa
idivb
adc
mov
sub
fmul
or
data16
xchg
or
push
cmp
jecxz
cmc
add
cs
sub
addr16
test
loope
pop
fidivrs
out
add
adcl
cmp
cmc
loope
inc
xchg
mov
out
jp
incb
es
sbb
xor
mov
or
pusha
inc
fwait
inc
aaa
adc
pop
mov
dec
cmpsl
xor
les
aad
dec
sub
adcl
inc
pop
inc
pop
popa
nop
sub
dec
xor
add
imul
xchg
push
je
add
adc
call
add
push
iret
scas
fwait
inc
push
lret
sahf
aam
arpl
mov
adc
add
ljmp
jl
insl
into
push
mov
pop
cld
test
mov
test
hlt
mov
ljmp
adc
mov
imul
addr16
push
ret
hlt
scas
pop
cmpsb
ret
rsqrtps
push
pop
push
cwtl
out
pop
loop
mov
xor
pop
mov
and
xchg
sub
xor
mov
mov
lret
rclb
imul
mov
push
mov
inc
scas
test
xor
testl
mov
in
cmp
cltd
shll
jg
lods
xor
movsl
daa
lcall
xchg
push
xor
add
or
mov
leave
icebp
bsf
dec
push
subl
and
xlat
sbb
lds
jns
xor
insl
adc
mov
ret
roll
sub
and
dec
mov
nop
xor
icebp
decb
test
adc
fcompl
cs
dec
pop
test
daa
xchg
push
sti
adc
clc
sbb
shll
cmp
adc
fcompl
iret
pop
xor
lds
add
dec
xchg
jge
xchg
xchg
dec
dec
mov
xchg
cmpsb
push
mov
jle
or
in
out
jbe
or
aas
imul
push
daa
fs
fsubl
decb
cli
addb
pop
and
xor
or
cmp
cld
cmp
negb
fwait
inc
lock
cmpsb
pop
add
test
sbb
or
pop
test
jp
add
pop
and
adc
sahf
jnp
adc
popf
lahf
jl
xchg
dec
mov
mov
out
jae
cli
sbb
jo
inc
jmp
adc
jmp
cmpb
stc
pop
inc
leave
pop
or
mov
addl
lahf
pop
mov
aaa
aad
loop
insb
pushf
sbb
mov
push
jns
sub
adc
xchg
in
imul
movsl
jbe
xchg
inc
push
inc
popl
sbb
rcl
lods
pop
dec
dec
notl
adc
mov
or
icebp
cmp
dec
ret
xorb
loope
add
ljmp
push
movsb
and
out
inc
add
scas
js
ficoms
mov
outsb
lea
call
fwait
mov
mov
mov
xchg
mov
xor
xor
sbb
es
cmc
fistl
add
adc
dec
cmp
loope
loope
dec
sub
jb
pusha
inc
lods
fwait
mov
insb
fs
mov
inc
and
xor
into
push
sub
insb
notl
cmp
push
pop
jge
gs
sub
push
das
or
mov
fldt
push
das
inc
clc
pusha
jle
xor
add
fldl
mov
pop
js
xchg
dec
dec
xor
jb
insl
push
ss
adc
ret
ja
stos
fmul
and
mov
jmp
lahf
loopne
std
mov
and
mov
rcll
push
pop
and
mov
xor
and
cmc
xchg
dec
dec
in
push
xchg
xchg
adc
jne
xor
cmp
out
stos
mov
push
jne
daa
insb
lret
push
arpl
push
imul
push
xor
mov
loopne
in
mov
mov
in
xor
inc
push
popa
push
stos
cmp
cmp
in
inc
divb
cmp
mov
loopne
adc
fs
clc
jge
cmp
cmp
inc
sub
adc
outsb
mov
pop
push
or
lock
sbb
jle
or
ss
hlt
sbb
in
pop
dec
inc
dec
adc
jge
add
in
pusha
or
sub
and
dec
addr16
cmp
test
div
std
and
out
loope
ja
ss
inc
aam
lods
out
orb
mov
mov
dec
push
adc
out
shlb
pop
dec
xchg
inc
mov
mov
xor
cmp
std
push
mov
out
imul
inc
push
xchg
orl
lods
xor
pop
in
cmp
dec
xchg
repz
movsl
rol
jl
popa
jge
mov
mov
sbb
mov
or
pushf
pop
inc
rcll
push
adc
mov
jl
pop
jnp
aas
add
fmuls
repnz
push
stos
push
pop
mov
sbbl
pop
fimull
sub
dec
pop
jbe
mov
es
lods
ss
shll
pop
mov
mov
push
adcl
ja
outsl
pop
out
pop
jge
enter
out
lock
mov
push
adc
sahf
xorb
out
sarb
sbb
mov
shl
call
loopne
jp
iret
ds
aam
pop
pop
push
push
outsb
add
stos
ja
xchg
pop
lfs
mov
test
leave
pop
daa
into
sub
mov
xchg
call
ds
cmpsb
pop
sub
ds
imul
lds
fsubs
fwait
aad
cwtl
or
int3
in
daa
fwait
out
ret
jmp
pop
insl
xchg
add
cwtl
das
dec
sbb
lods
shrb
pop
test
clc
je
mov
cmp
or
lret
mov
jmp
les
pop
out
xchg
ljmp
fimuls
pop
into
mov
nop
test
shlb
xor
fstl
jge
lret
xchg
lods
in
sub
sbb
into
pop
jno
inc
mov
xchg
pop
shl
adc
mov
fs
xor
cmp
cltd
lds
jns
xlat
xlat
fiadds
mov
and
ret
cld
outsl
add
or
sub
adc
jb
sbbb
jne
les
outsl
sub
xchg
popa
stos
stos
adc
test
aam
out
mov
lds
ja
orl
call
xlat
jbe
fimull
out
sbb
mov
xchg
popl
sahf
jns
mov
pushf
in
arpl
or
jmp
jno
cld
mov
sbb
gs
dec
mov
cmc
aad
xchg
outsb
imul
cmpsl
xchg
in
adc
mov
stos
mov
int
inc
sbbl
cmp
adc
cmp
fildl
fisubrl
push
shl
mov
xchg
mov
icebp
sarb
xchg
nop
das
adcb
cmp
repz
cwtl
cwtl
xchg
mov
dec
pop
sbb
push
xchg
xchg
test
sbb
jns
xchg
push
iret
popf
xchg
inc
shr
bound
cmp
sub
xor
push
cmp
push
mov
shll
insl
insb
fisttpl
lods
out
add
aam
fs
sti
fsts
nop
dec
and
inc
call
mov
bound
pop
mov
push
cmc
mov
xchg
pop
gs
sbb
inc
shrb
add
xor
icebp
mov
cmp
in
push
or
lock
pop
jp
sub
ret
jp
iret
add
jns
stos
push
pop
cmp
jl
fbstp
add
lock
enter
sub
jle
mov
jb
sub
cmpsl
and
sub
or
mov
pushf
subl
add
and
pop
add
rcr
mov
jne
out
cld
add
pop
and
arpl
loopne
and
pop
push
mov
outsb
or
jb
or
pop
cmpsb
mov
loop
fistps
stos
jbe
imul
jg
mov
imul
mov
lods
push
movsb
xchg
push
mov
xor
icebp
sub
test
pop
add
int3
cltd
mov
lret
cli
sar
push
jge
adc
push
scas
jae
test
fs
add
jge
and
in
cmp
push
dec
pusha
and
xor
mov
cmp
lds
mov
lock
add
xchg
loopne
mov
jg
pop
gs
and
ds
inc
mov
inc
push
daa
xchg
mov
xor
bound
mov
pop
std
aad
xor
cmp
mov
sub
repnz
mov
jno
subl
sub
or
cmc
insl
jl
and
jns
add
add
or
or
enter
jl,pt
pop
bound
stos
loop
sub
and
adc
stos
jle
push
mov
mov
das
xor
pop
insl
test
or
aaa
imul
cs
mov
ror
dec
lds
repnz
xchg
ljmp
mov
lcall
cld
cltd
shlb
mov
fs
pop
inc
js
pop
test
pop
push
inc
inc
inc
shlb
jecxz
mov
push
mov
add
aas
dec
add
testl
ljmp
mov
pop
scas
aad
push
mov
clc
je
fildl
xor
lea
mov
pop
andl
gs
popf
xlat
and
fdiv
or
mov
stos
lods
cltd
inc
add
mov
xor
add
mov
mov
ret
test
xor
xchg
loopne
ret
mov
inc
pop
and
inc
dec
mov
leave
shrb
and
and
in
addb
adc
jg
jg
fwait
mov
outsl
mov
xchg
pop
mov
push
enter
pop
ficompl
xor
push
inc
xchg
dec
ja
mov
lcall
fdivl
lret
ss
xlat
in
lcall
mov
push
inc
pop
out
add
jne
pop
mov
lret
xchg
sub
scas
jle
mov
rorl
and
hlt
in
cmp
add
clc
pusha
xor
push
es
and
mov
mov
xor
or
jmp
sti
and
neg
mov
stc
int3
push
add
cmp
adc
ja
gs
out
xchg
imul
leave
sbb
sub
pop
mov
jg
inc
pop
pop
fadd
xor
shll
fidivs
pushf
push
fadds
xor
xchg
mov
rcrb
jmp
bound
shl
sbb
mov
mov
arpl
shrb
cmpsl
shll
dec
sbb
in
pop
jl
sub
cmp
push
lods
sahf
sub
dec
andl
push
pop
jne
xchg
jp
pushf
mov
js
and
add
mov
out
pop
fdivrs
xor
pop
cmp
or
bound
push
cs
cmc
add
jge
lods
mov
es
mov
jns
test
loopne
sub
lret
bnd
dec
iret
cmpsb
fstl
leave
pop
mov
adc
sbb
loopne
popl
xor
sub
sbb
data16
pop
xor
pop
dec
jns
xchg
jmp
mov
lahf
pop
mov
pop
fdivs
icebp
shrl
xlat
xchg
push
dec
addr16
pop
push
mov
lds
and
dec
or
loope
int
cmp
add
pop
in
pop
scas
hlt
xor
sub
and
das
rorl
pop
dec
jnp
lods
out
cwtl
add
cltd
or
into
stos
cmc
or
das
xchg
sbb
test
or
xlat
scas
mov
adc
mov
shr
mov
lds
gs
or
mov
sub
mov
jmp
mov
or
push
sbb
add
fisubrs
out
jmp
daa
pop
push
xor
shrl
mov
sbb
enter
flds
adcb
movsb
cltd
mov
xor
gs
mov
jns
imul
pop
and
push
mov
sbb
mov
les
and
lods
mov
inc
mov
inc
rcll
outsl
xchg
xor
xchg
push
stc
jbe
dec
outsl
xchg
in
lret
push
scas
sbb
test
sub
dec
cmp
imul
jge
push
out
cmc
lcall
nop
sti
lods
outsl
mov
mov
mov
lock
out
mulb
gs
push
in
pop
push
jno,pn
ds
cmpsl
adc
dec
sub
incb
jl
jge
or
fwait
jl
ficomps
or
xchg
mov
icebp
sarl
insb
and
push
adc
fldz
dec
dec
out
xlat
fists
push
clc
bound
inc
jp
xchg
mov
ljmp
bound
cmp
xor
push
sbb
jp
sub
or
int
push
hlt
addr16
fsubrp
push
sbb
adc
js
xchg
pop
stc
cld
mov
jecxz
les
cli
ja
jle
std
int
xchg
repnz
sub
fmull
sar
mov
je
popf
loop,pn
repz
cld
dec
cmp
mov
cmpsb
push
daa
popa
call
cmpl
push
leave
pop
lret
sti
fnstenv
add
aas
outsb
and
dec
xchg
test
mov
or
dec
setg
dec
adc
hlt
cli
outsl
sbb
push
test
movsl
int
arpl
insb
mov
das
shll
sub
adc
jmp
mov
sbb
mov
lea
sti
jo
mov
xor
inc
xchg
jecxz
xchg
cld
test
addr16
ffree
and
xor
inc
jae
sbb
call
loopne
not
sahf
mov
mov
rol
jmp
loopne
jno
imul
stc
dec
fdiv
jl
dec
rclb
fisubrl
rorb
push
lret
mov
mov
js
loopne
mov
xor
inc
test
and
testl
scas
insb
leave
rcrb
aam
ljmp
std
imul
test
pop
repz
dec
xor
jp
pop
mov
rclb
movsb
add
rclb
adc
stos
inc
js
and
xor
je
test
add
or
and
or
je
adc
and
adc
pop
cmpsl
test
and
adc
dec
push
cmc
popa
pop
nop
mov
cmpsl
sbb
jl
or
out
inc
push
mov
pop
roll
cwtl
test
lds
in
xor
fisubrs
addr16
mov
xor
mov
test
cltd
cmp
je
dec
jg
xorl
add
inc
cmp
adc
sbb
out
ltr
or
rcrb
je
mov
repz
scas
pop
daa
and
fiadds
or
div
enter
outsl
mov
inc
bound
add
pop
jne
adc
xchg
mov
mov
cmp
popl
fs
cmpsb
jnp
sub
push
xchg
in
lock
xchg
cmp
fstl
fmull
add
in
imul
ljmp
lea
dec
hlt
popa
mov
inc
dec
xor
clc
out
adc
sub
lea
test
adc
sbb
lock
cld
dec
dec
cmp
pop
pop
xchg
imul
jge
adc
sub
les
or
mov
push
xchg
cmp
dec
inc
cmp
ret
and
jne
lock
mov
enter
outsl
int
imul
aaa
jle
or
push
addb
push
mov
scas
jns
fiadds
test
xchg
cmp
mov
adcb
mov
pop
pop
repz
test
repz
push
mov
gs
inc
popa
std
adc
cmc
cwtl
lods
sbb
cli
insl
jle
and
dec
sub
out
inc
push
cmpsl
ds
lock
dec
pop
jg
pop
sub
or
notl
xor
xor
or
nop
mov
adc
pusha
xchg
jns
jmp
mov
insb
sbbl
in
mov
int3
ja
enter
add
mov
arpl
jnp
mov
sbb
stc
sub
cld
cli
push
pop
mov
test
and
icebp
or
fistpll
xchg
dec
lret
cltd
inc
ja
lea
aam
shll
and
outsl
out
aas
aam
fstp
filds
test
mov
pusha
popa
outsb
imul
sbb
insl
add
cmovae
mov
mov
in
ja
fwait
jle
repz
mov
movsl
xchg
es
sbbb
cmp
fsubrs
push
xchg
movsl
pop
daa
xchg
jnp
fucomi
and
iret
out
mov
add
dec
push
add
lods
insl
jecxz
xchg
mov
add
mov
jae
mov
xor
pop
int3
icebp
dec
mov
pop
int3
enter
and
insb
mov
pusha
jp
push
push
jecxz
push
das
jmp
add
adc
aas
out
lock
loope
cmp
or
xchg
insl
xor
popf
gs
pop
std
mov
adc
jg
pop
fucomi
xchg
push
add
das
xor
add
aas
xor
cld
fisttps
add
and
push
push
pop
filds
sahf
jb
pop
mov
insl
int
pop
dec
mov
ret
push
movsb
cmp
adcb
xor
add
xchg
cmpsb
lods
inc
ljmp
inc
inc
out
out
xchg
xor
jmp
or
outsb
mov
add
sub
cmp
mov
mull
mov
inc
cmp
andb
mov
pop
add
mov
dec
nop
sbb
mov
into
cmpsl
mov
cmp
hlt
dec
addl
push
andl
jmp
dec
add
sbb
inc
aas
or
mov
ret
push
xor
mov
cmp
es
lods
push
dec
in
test
daa
cmpsb
shrl
or
push
loop
mov
lcall
popf
push
mov
xchg
std
cs
cld
fldenv
mov
cmpsb
push
mov
mov
jae
and
ret
ja
call
popa
pop
and
xlat
mov
rorb
lods
movsb
xor
add
mov
sbb
adc
cli
loop,pn
xor
sbbl
icebp
dec
cld
out
fnstcw
sbb
sbb
xor
lea
int3
sarb
subb
in
cmpsb
sub
out
daa
jnp
out
outsb
scas
jp
sbb
das
lea
notb
mov
andl
lods
ljmp
inc
cmc
cmc
js
hlt
jp
push
lock
sti
mov
sahf
out
int
call
movsb
jae
test
jbe
aas
lahf
mov
mov
imul
mov
daa
cwtl
and
sahf
test
cld
cmp
adc
jb
movsb
mov
pop
testb
int
push
movsl
inc
xchg
mov
dec
insl
push
ffree
or
jns
jns
stc
fcmovne
ds
loope
push
arpl
push
addr16
jl
mov
inc
lret
mov
sarl
aaa
outsb
and
scas
jle
lds
imul
repz
hlt
mov
pmuludq
xor
mov
mov
pop
pushf
stc
xchg
add
jmp
pop
cs
sahf
dec
sub
sbb
sar
cld
outsl
and
movl
les
ljmp
xor
push
jns
pusha
nop
in
icebp
or
or
xor
and
xor
or
push
ljmp
divl
xchg
mov
jg
das
stos
mov
xlat
loope
and
lret
add
int3
inc
and
jns
sahf
inc
cmp
leave
test
add
fcmovnbe
adc
pop
add
inc
jp
xor
add
xlat
xchg
je
inc
insl
mov
xor
mov
push
into
ja
ret
mov
jecxz
imull
lods
ds
fidivs
test
aaa
push
mov
rorb
cli
std
scas
scas
xchg
mov
push
lahf
or
das
mov
es
ret
cmpl
and
lahf
mov
aas
movsl
pop
call
ret
bound
sbb
leave
push
scas
data16
es
sub
push
cmp
xchg
pusha
adc
push
sub
fs
pop
add
jle
fistl
ds
insl
inc
pushf
mov
pop
sub
es
movsb
sbb
stos
sbbl
adc
mov
dec
paddw
xor
xor
loop
push
mov
mov
int3
movsl
or
inc
xchg
cmp
dec
add
mov
mov
or
aad
cmp
fnstsw
sti
in
icebp
iret
imul
push
inc
or
mov
cmp
xlat
inc
mov
cmp
clc
rcrl
daa
lahf
outsl
xchg
pop
arpl
mov
ss
cmpsl
daa
mov
imul
jmp
pop
mov
xor
adc
fildll
fisubrl
or
rcl
jmp
shlb
jp
dec
jne
in
cmpb
ficoms
inc
lret
out
xchg
dec
sbb
push
xchg
in
and
adc
cltd
push
xor
add
bound
xchg
pop
or
cmpsb
fdiv
lahf
cmpsb
arpl
lods
fdiv
sbb
mov
outsl
and
jmp
fcomip
lock
xchg
lret
fcoml
shll
outsb
gs
rcrl
aad
push
fwait
pop
cmp
lcall
in
cs
jmp
in
outsl
out
jg
fidivs
jge
cli
push
cmp
adc
xor
add
or
mov
cmpsb
mov
push
in
out
add
lcall
mov
test
push
out
xchg
mov
pop
into
rcll
daa
movsb
sbb
std
dec
inc
and
out
xchg
arpl
adc
test
and
mov
push
sbb
loop
cmp
mov
mov
popf
outsl
idivl
mov
movsb
inc
push
push
dec
lock
and
rolb
xchg
dec
jb
jno
fnstenv
mov
js
arpl
and
mov
popf
xor
sbb
stc
mov
pop
in
jae
movsl
outsb
cld
insl
and
ret
data16
mov
cmp
loop
pop
stc
loope
mov
repnz
cmpsl
enter
aam
mov
decb
xlat
incb
mov
and
and
cmp
push
rol
sti
in
pop
dec
jae
ss
fsubs
cmc
adcl
add
dec
or
xor
fisubl
inc
inc
mov
or
sbb
out
repnz
jl
scas
lea
and
add
arpl
scas
push
mov
insl
xchg
int3
imul
cld
add
mov
hlt
dec
fs
mov
es
inc
ret
stos
jecxz
xor
rcl
jle
ficomps
mov
mov
insb
divb
mov
push
jg
dec
iret
daa
in
mov
int3
rorl
hlt
clc
push
push
inc
jbe
pop
add
das
mov
jae
out
mov
dec
xor
adc
mov
pop
js
and
gs
adc
mov
sub
lret
lock
jg
fiadds
sbb
rol
leave
push
ljmp
inc
push
inc
shr
out
sub
call
fwait
jae
pusha
add
push
jg
leave
inc
jg
in
adcl
xchg
and
jnp
adc
mov
mov
clc
ret
jae
mov
fiadds
mov
lds
les
jns
cmpsb
mov
dec
setge
int3
jl
and
mov
stc
jbe
or
jmp
add
dec
orl
pushf
repz
mov
mov
adc
gs
loopne
es
cmp
push
pop
jp
lret
out
jge
pushf
mov
push
pop
and
adc
xor
jnp
mov
cmp
popf
test
cmpsb
adc
in
push
data16
sbb
and
addb
adc
movsl
inc
std
out
cmp
pop
mov
aaa
cmc
outsl
and
and
or
insl
aam
mov
enter
arpl
dec
data16
pop
and
mov
jl
pop
sub
add
cmp
or
cwtl
sub
and
insl
pop
iret
lahf
popa
aad
dec
adc
dec
sbb
out
loop
repnz
fwait
jmp
sub
cmpsl
or
sub
jge
xchg
pop
mov
adc
push
cmc
jge
adc
neg
dec
add
push
jge
and
movsb
mov
adcb
enter
out
lret
mov
sbb
xor
sbb
pslld
dec
dec
mov
insl
fwait
scas
inc
or
cli
and
pop
adc
cmp
sbb
mov
movsl
xchg
jae
lods
mov
dec
sbb
pop
out
scas
xchg
and
pop
ret
adc
lret
pop
sbb
mov
jns
add
je
gs
mov
ds
lds
testl
or
mov
pop
and
lods
inc
mull
sub
lock
loope
push
ret
xchg
pop
or
in
je
inc
push
out
push
inc
or
push
es
lret
add
frstor
or
aam
clc
mov
mov
das
jbe
incb
mov
xor
mov
aam
loop
dec
push
add
notl
leave
sub
iret
pop
das
outsl
mov
xor
fs
mov
sbb
clc
sub
and
leave
call
cmpsl
xor
inc
iret
dec
orb
push
std
loop
sub
jne
cwtl
mov
mov
into
fistl
xor
addb
fidivrs
adc
cmp
inc
loop
daa
or
mov
stc
dec
mov
inc
insb
out
int
jmp
loop
aas
dec
pop
fmull
inc
fsubrl
leave
insl
sbb
daa
jle
sahf
xor
dec
mov
lret
std
xchg
nop
and
ljmp
dec
jmp
cmp
mov
add
jns
sbb
mov
push
lcall
cs
cmp
mov
mov
iret
mov
dec
in
idivb
gs
or
sbb
push
call
xchg
mov
je
cwtl
pop
sbb
add
fsubr
movsb
xor
jae
in
cmp
bnd
sbb
cmp
adc
nop
pop
inc
xor
xchg
lret
inc
fidivs
and
cmp
fadds
das
pop
sbb
pop
cmc
js
clc
cmp
mov
dec
and
jb
out
daa
lods
addr16
push
jl
ret
jp
push
dec
scas
stos
mov
sahf
lods
jb
les
sub
rorb
cmp
ret
lret
int
test
in
pop
xor
xchg
sti
outsb
testb
pop
loop
push
int
aad
add
fisubrs
or
mov
mov
xchg
adc
push
sbb
dec
cmp
vpsubsw
inc
movsl
pop
loope
sub
scas
ficompl
fwait
lds
movsb
jecxz
inc
imul
scas
andb
add
call
jg
pop
movsl
pop
ret
jo
sbb
jae
lods
mov
xchg
xchg
sahf
adc
stc
data16
pop
mov
aam
xor
test
adc
push
es
rorl
lret
decb
pop
les
push
loop
addr16
loop
andb
xchg
pop
sbb
outsl
cmp
mov
cmp
push
sbb
pop
xor
aaa
sbbl
sbb
mov
xchg
pusha
cmc
call
into
addr16
and
divl
cltd
jmp
aad
lret
repnz
push
cs
xchg
test
decl
dec
xchg
enter
mov
or
push
jns
loopne
mov
fiaddl
sbb
popa
push
dec
mov
call
xchg
fmull
testl
cmp
es
or
idiv
les
mov
lcall
or
jecxz
xlat
xchg
or
pop
push
jo
repnz
aaa
jae
in
push
xlat
dec
stos
lahf
add
mov
jle
popf
mov
cmp
out
xorl
mov
mov
sub
jg
jns
repnz
add
outsl
inc
ja
lahf
enter
push
dec
cmp
loope
mov
fnsave
pop
sub
inc
and
out
icebp
test
xchg
pushf
ljmp
mov
lods
mov
or
xor
iret
sbb
inc
cltd
cmp
imul
aaa
cmp
xchg
or
sub
inc
in
inc
mov
pop
mov
inc
dec
mov
hlt
test
das
test
push
cmp
sbb
mov
notl
sub
inc
cmp
in
lds
push
sarb
mov
or
ret
hlt
add
or
mov
push
xchg
test
mov
popf
push
test
fcoml
mov
fidivs
fmul
mov
int3
aam
shrl
mov
mov
xchg
adc
pusha
jbe
and
test
bound
in
push
inc
mov
xor
mov
sub
dec
pop
cld
pop
movsl
leave
out
pop
rorb
sub
sarl
ja
cwtl
imul
mov
ja
mov
cli
sbb
inc
loop
repz
add
or
daa
adc
aam
jp
fidivrs
sub
sti
jl
adc
les
push
into
cmp
sbb
icebp
lds
cmp
lds
dec
add
jb
jecxz
stos
mov
sub
into
xchg
and
aam
inc
call
icebp
xor
or
mov
push
imul
cmp
mov
mov
push
push
fmulp
cs
rorb
dec
sub
pop
sbb
sub
sub
pop
xchg
fs
inc
pop
gs
add
movsl
push
movsl
inc
adc
jb
lds
add
mov
and
cmp
inc
cld
js
pop
cmpsb
mov
jno
call
iret
pop
cmp
lea
pop
or
xchg
dec
push
add
lret
lret
xlat
arpl
cmp
sbb
jno
add
xchg
jnp
mov
idiv
iret
into
cwtl
ret
pop
in
ficoms
xor
call
inc
in
aam
adcb
into
pop
out
sbb
xor
cmp
aaa
mov
loopne
imul
and
data16
repnz
dec
push
add
cmpsb
xchg
pop
ror
and
inc
dec
push
aaa
sbb
cmpsl
mov
ret
test
xchg
daa
add
fs
ss
dec
mov
out
cwtl
jmp
or
in
and
pop
rcrb
or
and
xchg
fdivrs
add
push
add
adc
ds
pop
cmp
insl
ljmp
add
adc
ret
or
cmp
push
or
mov
inc
pop
sub
xchg
xchg
inc
mov
or
dec
aam
adc
or
dec
dec
mov
mov
mov
or
movsl
inc
pop
mov
cmp
jb
aas
out
inc
xchg
mov
inc
sbb
call
sbb
add
jns
dec
mov
gs
pop
fwait
lcall
or
mov
sub
jl
imul
pop
pop
iret
mov
mov
pminsw
push
push
aam
jo
jb
or
pop
mov
in
sbb
jbe
and
xchg
xchg
dec
push
xchg
test
in
sti
jae
fs
cmpl
hlt
pusha
inc
mov
jno
loopne
dec
loop
ljmp
xchg
popa
inc
mov
es
sbb
xlat
jae
pop
mov
rorl
push
inc
out
mov
notb
decb
jo
jge
mov
xlat
outsb
mov
sbb
push
ss
and
mov
test
xchg
dec
outsb
adc
push
xchg
fbld
out
jg
and
pop
adc
push
mov
hlt
push
in
or
andl
and
mov
mov
xor
pop
jge
aam
cmp
out
lret
mov
pop
fcom
les
mov
sbb
std
add
fstl
imul
xchg
inc
push
stos
pop
cmp
sbb
decb
insb
cmp
adc
ljmp
jbe
push
and
inc
mov
psllw
sbb
ret
ret
pop
sti
jne
mov
stc
push
mov
jae
dec
mov
out
lcall
insl
pop
mov
loope
mov
lret
mov
dec
sub
in
fwait
out
dec
ds
mov
cmpsl
fdivs
add
push
xchg
push
dec
in
inc
faddp
imul
movsb
mov
mov
lods
int
icebp
adc
mov
out
cmpsb
shl
push
into
inc
in
pushw
jle
inc
movsb
mov
adc
inc
mov
mov
shlb
sbb
pusha
lahf
jge
sbb
orl
or
inc
xchg
mov
pop
lret
cs
nop
jp
gs
bound
push
shrd
xchg
cld
jno
cmc
mov
scas
ss
push
mov
movsb
out
mov
mov
insl
test
sub
inc
inc
in
les
add
or
jl
mov
loopne
cwtl
xchg
test
inc
pop
movsl
sub
lods
rolb
sub
and
bound
dec
sub
push
imul
and
rorl
aas
xchg
cltd
pop
je,pt
lret
xchg
das
pop
push
cmc
ja
call
mov
mov
les
mov
push
ret
or
enter
incb
xchg
fwait
mov
xor
mov
lds
inc
fdivl
cmp
xchg
shlb
popl
jg
shrb
sbb
push
jg
pusha
iret
ret
and
mov
rclb
ret
lods
pop
mov
adc
lcall
arpl
mov
mov
xor
inc
inc
push
mov
mov
fs
mov
in
lods
cmp
loopne
xchg
adc
test
int3
mov
sarb
inc
cmc
and
push
jne
dec
dec
loope
jb
aam
pop
fsubrl
fdiv
jb
adc
out
rcrb
bound
xchg
test
add
fdivrs
cmpsl
and
push
inc
jecxz
out
push
adc
fadd
or
lcall
jb
mov
push
outsl
jp
mov
pop
jp
add
cmp
cmpsb
das
stc
jo
in
cmpsl
add
jbe
jp
cmpsl
pusha
fsubr
mov
clc
jmp
mov
inc
jl
das
xchg
add
dec
mulb
sub
adc
sbb
cmp
cmp
jp
out
inc
adcb
imul
jp
mov
cwtl
je
cs
cmp
rorb
push
addr16
fcomps
mov
pop
push
popf
mov
fsubrs
cmp
add
xchg
pop
dec
insl
arpl
mov
imul
or
arpl
dec
scas
int3
testb
sbb
fildl
fcomi
loopne
mov
leave
xchg
pop
xchg
bound
cmp
push
out
insb
pop
inc
and
out
pop
cmc
xchg
std
inc
mov
mov
pop
ds
shrb
push
xchg
adc
pop
xlat
icebp
repz
mov
mov
add
mov
inc
cmp
or
hlt
aaa
inc
sub
mov
adc
aaa
xchg
and
jne
push
push
out
mov
jecxz
adc
push
dec
xor
mov
push
jle
mov
out
ret
pop
xchg
sub
rcrb
mov
test
mov
mov
test
add
div
mov
adc
mov
leave
mov
dec
je
sub
jne
adc
test
shl
cmpsl
add
cmp
rcll
hlt
int
mov
lret
add
adc
insl
inc
jle
lret
add
sti
and
pop
shrl
xchg
shrb
inc
adc
sub
xchg
bound
push
aas
call
stos
std
scas
dec
jle
popa
or
push
xor
xchg
mov
sarb
bound
scas
adc
pop
popa
je
daa
pop
adc
loop
test
sbb
je
mov
je
mov
pop
mov
insl
push
pop
mov
sub
or
jb
movl
inc
pop
inc
aad
pop
or
xor
rcrb
jmp
ja
push
lret
orb
and
mov
std
insl
fs
repnz
bound
add
loopne
pop
push
jo
pop
fcmovnbe
nop
pop
test
imul
lods
mov
cs
xor
jl
push
cmpsb
pushf
repz
test
rcrb
test
loopne
pop
inc
bound
fmul
fdivrs
insb
sarl
sbb
and
push
xlat
out
pop
int
inc
fisttps
or
xchg
xor
enter
xor
ja
popa
clc
icebp
xchg
mov
pop
and
test
dec
cs
push
or
sub
fs
mov
sub
adc
test
xchg
lcall
les
cs
rcrb
dec
jnp
enter
imulb
mov
aad
popf
xchg
stos
jae
pmovmskb
sbb
xlat
and
pusha
popa
nop
pop
xchg
pop
add
cmp
mov
popa
imul
push
add
or
add
mov
fsubr
icebp
xchg
xchg
sub
addl
dec
pop
xor
or
cmpsb
pop
mov
cs
adc
aas
jae
sub
sub
pop
mov
xchg
fwait
ds
pushf
pop
rorb
or
xor
mov
leave
scas
sarb
shlb
pop
out
std
cwtl
shll
adc
dec
aaa
arpl
cmpsb
imul
movl
xor
jl
push
rcrb
adc
adc
scas
mov
arpl
sti
adc
mov
movsb
addb
icebp
fwait
inc
inc
cmp
inc
out
movsb
insb
adc
stos
in
fisubrs
scas
sub
or
fldl
add
inc
pop
jmp
jle
add
aam
dec
pop
je
fstpt
pop
cmp
lds
aam
int3
inc
dec
or
movsb
not
xor
rorl
xor
outsl
adc
pop
xor
rcl
mov
push
inc
dec
and
aaa
movb
negl
mov
ljmp
push
fdivl
jecxz
cmp
cmpsl
insb
lock
xor
aas
xchg
stc
mov
jns
repz
and
jnp
lahf
testb
push
ffreep
dec
sbb
sub
or
sub
divl
roll
xchg
xor
sarl
das
popa
xorb
sbb
sub
add
std
jmp
bound
sub
mov
gs
insb
sub
lea
incb
mov
jmp
repz
out
adc
ja
add
jns
xor
pop
cmpsb
orb
mov
lahf
rcll
or
xor
es
push
addr16
push
push
inc
xlat
push
push
pop
insl
or
dec
movsl
push
and
sbb
add
jmp
in
jle
leave
mov
xlat
inc
movsb
jl
pop
fcmovne
fs
dec
sti
pop
cmp
nop
push
jnp
xchg
mov
and
fs
repz
add
scas
lcall
push
pop
cmpsb
ret
jmp
add
cmpb
cmp
je
cmpsl
sbb
imul
and
aas
jne
out
pop
jmp
xchg
add
adc
add
frstor
pop
inc
lret
adc
div
mov
mov
cmp
add
mov
movsl
and
int
not
xor
in
daa
cwtl
sub
sbb
mov
sbb
and
cli
sbb
pop
sbb
dec
pop
scas
or
aam
scas
repz
sahf
fmull
cmp
testl
xchg
movsb
shrl
inc
dec
arpl
ret
xchg
mov
sti
pusha
lahf
mov
xchg
pop
and
bound
xlat
inc
fstpt
mov
outsb
jp
out
call
lea
fmull
add
add
and
adc
jge
and
dec
xor
rorb
pop
jmp
or
cs
icebp
mov
imul
push
xor
mov
clc
fcoms
jmp
sbb
ja
mov
dec
xor
jl
sub
pop
lret
push
movsb
fisubrl
fisttps
dec
mov
push
jbe
jnp
rcl
clc
test
call
pop
jae
xchg
sbb
mov
hlt
lcall
mov
daa
fadd
xchg
sub
jnp
jecxz
lcall
call
and
and
sahf
sti
ficomps
adc
pop
cmpsb
call
mov
pop
pop
jne
loop
cmpsb
sbb
shlb
sub
test
dec
jl
adc
add
push
cmp
adc
daa
scas
mov
jp
mov
sub
jo
icebp
inc
movl
sub
mov
cmp
cmc
loope
add
fs
iret
or
and
mov
jne
loop
mov
sbb
loope
dec
aad
mov
aad
dec
xor
ret
mov
push
add
idivb
adc
push
mov
jns
insl
cmpb
int3
jb
dec
inc
js
jecxz
jmp
in
cmc
cwtl
clc
sarb
addr16
push
xorl
or
movsl
add
fsts
out
ret
jecxz
mov
sub
mov
add
mov
pop
jne
push
inc
aas
mov
inc
or
and
outsl
aas
in
fs
xlat
and
vmovq
mov
pop
xchg
adc
push
jns
gs
jg
popf
xor
shrb
dec
in
popf
add
popa
mov
push
inc
mov
jl
punpckhwd
jecxz
inc
mov
mov
sub
xchg
jecxz
and
mov
inc
es
dec
push
dec
arpl
fwait
shll
imul
ficoml
cld
les
ret
icebp
stc
dec
out
sbb
fwait
sbb
fdivp
sbbb
rorl
arpl
push
cmp
pop
dec
std
xor
pop
daa
out
pusha
cmpsl
out
pop
push
out
aas
jns
mov
cmc
push
mov
dec
shll
sbb
mov
inc
popf
fstpt
dec
insl
pop
push
loop
leave
push
ror
adc
inc
lods
xchg
inc
xor
fmul
fisubl
mov
inc
add
pop
icebp
push
addb
jecxz
lcall
mov
test
sbb
cmpsb
pusha
push
and
inc
mov
push
stos
xor
sbb
testl
jmp
push
adc
test
dec
xchg
inc
lods
sub
popf
stos
out
int3
dec
push
scas
xchg
xchg
pop
aaa
sub
nop
xor
mov
loope
inc
add
mov
xor
sbb
push
jbe
adc
dec
int3
mov
fld
mov
xor
inc
push
fisubl
sub
cmp
mov
loop
jg
or
xchg
bound
jne
dec
nop
cld
loopne
cwtl
push
mov
mov
and
mov
mov
fwait
cld
pop
adcl
mov
cld
rcrl
out
mov
jl
cld
xor
sub
sti
and
mov
add
imulb
ret
xchg
push
sub
js
xlat
sub
das
add
adc
fbld
clc
adc
fidivrl
xchg
cwtl
ret
insl
push
hlt
add
out
ret
mov
pushf
subl
push
sub
loop
das
hlt
lds
push
test
cmp
jno
inc
mov
mov
cmp
sbb
les
adc
daa
jae
dec
dec
sbb
test
dec
fldl
movb
cmc
scas
sub
pop
gs
lds
or
shr
cmp
add
lock
xor
and
sbb
les
jmp
mov
jecxz
ret
mov
xor
stos
mov
mov
pop
sub
jno
sbb
push
sbb
nop
ljmp
inc
inc
or
cmp
add
mov
push
shlb
xchg
pop
push
xchg
scas
xchg
inc
pop
and
sbb
ficompl
xchg
sub
mov
jge
cmc
fistpll
xor
repz
jp
stos
into
sub
cmp
xchg
sub
pop
out
xor
dec
sahf
pop
jge
or
mov
jl
add
mov
stos
or
push
adc
jecxz
mov
sub
xchg
test
or
jle
fwait
repz
scas
xorl
xor
popa
test
inc
pusha
push
stos
repz
jp
push
and
mov
add
mov
in
mov
adc
fistpl
pop
ret
popa
test
repz
out
gs
ret
jno
jge
lahf
lahf
das
les
fdivs
jp
jo
or
popf
dec
hlt
pop
cmpsl
pop
fisubrs
loope
imul
xchg
movsb
dec
fadds
mov
bnd
hlt
aam
mov
ds
mov
fwait
push
mov
lods
mov
jge
lods
js
jae
push
mov
pop
and
dec
dec
sub
mov
inc
pop
outsb
push
adc
arpl
jns
leave
push
ret
mov
leave
cmp
shl
fwait
mov
loopne
add
repz
test
jge
int
loop
es
xor
loop
outsb
and
pop
repnz
ror
mov
sub
mov
xchg
leave
mov
push
dec
jo
mov
cmp
in
dec
ret
mov
push
gs
mov
faddl
mov
jl
sbb
xchg
cmc
cwtl
std
jbe
out
pop
push
adc
and
sbb
arpl
in
push
sbb
dec
push
aam
and
pop
rcrl
hlt
or
mov
ret
mov
cmp
adc
js
mov
dec
push
sarb
shrb
push
adc
adc
xchg
fdivp
adc
adc
stc
outsb
jbe
xor
xlat
mov
out
cli
mov
rol
lods
ret
aaa
cmc
inc
sbb
addb
cltd
data16
inc
push
lret
dec
push
je
movsl
dec
adc
push
sti
lcall
and
aaa
loopne
mov
test
in
cwtl
adc
xchg
push
push
out
cmpsl
jg
pop
push
in
punpcklwd
jmp
lret
not
push
loop
test
mov
data16
jnp
sbb
ret
xchg
pop
xchg
and
pusha
jge
jp
adc
xchg
push
cwtl
inc
mov
sbb
fisubs
mov
mov
mov
pop
sti
scas
mov
andl
push
jno
fadd
mov
or
cmp
jmp
jmp
cmpsb
in
fstpl
mov
les
inc
mov
dec
cmpsb
jo
insb
daa
jb
dec
xor
cmp
inc
call
fldcw
icebp
xor
jae
and
mov
push
pop
shll
xchg
cmp
shlb
incl
xchg
sub
jecxz
inc
add
push
jecxz
xor
lret
or
add
out
outsb
sahf
mov
dec
loopne
imul
nop
adc
fst
push
test
int3
push
jne
pop
inc
mov
cmp
sbb
rol
pop
xor
lds
push
inc
inc
dec
inc
clc
adc
mov
push
mov
test
decb
std
stos
mov
push
mov
test
push
arpl
push
or
fildl
inc
push
adc
mov
dec
cltd
pop
push
adc
mov
cmp
push
sbb
lea
sahf
cmp
or
jg
xor
inc
or
fstl
adc
pop
and
incb
cwtl
fwait
icebp
shrl
in
clc
mov
lock
sti
insb
adc
xchg
movntps
add
or
adc
sub
adc
pop
lds
js
push
and
pop
jnp
xor
cmp
mov
push
sub
ss
and
ret
inc
inc
insl
shrl
flds
stc
add
jne
pop
cmp
aam
cmp
imul
mov
xchg
mov
jbe
hlt
test
bound
or
insl
fwait
sarb
out
fadd
cmp
popf
sub
adcb
mov
and
add
sbb
xchg
lahf
insb
xor
ret
arpl
pop
jmp
sbb
addr16
pop
mov
push
mov
xchg
idivb
jb
xor
sbb
lea
pop
or
loop,pt
mov
ret
push
pop
push
xor
pop
jno
push
cmc
mov
das
cmp
pusha
loop
push
fisubrs
xchg
and
clc
stos
int
popa
pop
mov
mov
jnp
inc
cmpb
adc
data16
sbb
ret
push
std
dec
dec
cmc
into
mov
and
cli
jecxz
loop
dec
lret
cmp
shl
push
test
xchg
pop
call
test
frstor
sub
and
jg
mov
cltd
and
mov
or
cld
jo
aaa
ljmp
das
dec
jge
out
mov
out
andb
loopne
notl
xor
in
jecxz
cmp
mov
jle
test
mov
int
out
jecxz
xor
inc
cmp
and
mov
adc
dec
xchg
repnz
pushf
dec
adc
and
cli
inc
imul
mov
mov
arpl
push
stc
aad
popf
lret
xor
popl
mov
jmp
lods
loop
jns
cmpsl
or
jle
add
rcr
das
sbb
push
mov
adc
push
daa
or
mov
cld
fnsave
push
pusha
mul
jp
xor
xchg
daa
test
sti
sbb
data16
cltd
and
cmp
das
mov
mov
sub
jno
sahf
daa
pop
daa
push
cmp
icebp
sub
in
out
imul
testb
stos
pushf
xchg
imul
in
fwait
je
xchg
ljmp
stc
leave
fcmove
ja
in
int
test
fdivrs
inc
rcr
push
sbb
lret
lret
jg
outsb
scas
or
inc
and
mov
mov
out
cmp
in
and
push
ret
sbb
sbb
pusha
xor
inc
popa
shll
imul
xchg
cs
repz
xchg
outsl
je
sbb
cmpsb
icebp
mov
pop
pop
dec
cmp
test
stos
mov
adc
in
sub
loopne
cmp
test
mov
andl
in
cmp
dec
pop
sub
cld
xlat
xchg
fcmovu
std
xchg
push
jg
push
and
adc
pop
mov
jae
and
xor
xor
add
out
pop
pop
testl
cli
mov
mov
xor
das
insb
pop
leave
dec
call
mov
or
mov
fbstp
sub
daa
xor
xchg
outsb
cmpsl
mov
cvtpi2ps
sub
fidivs
icebp
scas
stos
ja
mov
pop
nop
pop
orb
out
lods
lock
je
mov
mov
out
div
scas
loope
stos
cld
jae
in
icebp
sbb
jl
cmp
adc
jge
mov
aad
xchg
push
xchg
aaa
jp
mov
es
pop
je
cwtl
stos
fdivrs
stc
sbb
fdivrs
outsl
imul
scas
popa
ds
jmp
mov
adc
inc
or
push
ds
xor
xor
pop
in
adc
dec
mov
dec
mov
ja
out
push
fsubrl
mov
cs
sub
jae
loope
ret
divl
inc
cmpsb
aas
incl
fsubs
mov
mov
jno
jle
mov
xor
test
insl
pop
mov
stc
sub
fildll
cmp
loopne
int
add
fidivrl
outsb
fistl
xchg
int3
imul
xchg
add
aas
cs
add
sub
cld
rsm
or
cmovo
add
mov
cs
jns
push
sub
mov
movsb
imul
xor
stc
inc
loopne
sub
repz
push
clc
jge
andl
aas
jnp
rorl
sbb
pop
jns
fcompl
and
mov
lret
popa
gs
fisubs
cwtl
xor
ja
hlt
lcall
sbb
cld
leave
scas
cmp
test
and
sub
ja
je
pmullw
cmc
ljmp
or
test
gs
mov
xor
fs
and
mov
aas
je
in
cmp
scas
popf
mov
aam
shll
outsl
aad
push
jne
leave
pop
jns
inc
dec
inc
stos
pushf
or
gs
mov
mull
xchg
aas
leave
mov
les
scas
loop
aam
sbb
loop
sbb
jnp
xchg
cltd
dec
rorl
mov
sti
jbe
iret
rcrb
scas
mov
pusha
jns
inc
jb
call
jb
cli
sbb
xchg
icebp
hlt
sub
jne
call
addr16
mov
lea
repz
xchg
das
mov
in
add
mov
scas
pushf
mov
sub
jge
fs
fdivs
xchg
sbb
incl
push
mov
bnd
mov
or
in
fdivrs
sbb
mov
out
xchg
rcrl
sbb
xchg
lds
addr16
xchg
mov
sti
push
cmc
fdivrl
xor
sbb
fs
dec
cvtps2pd
test
sub
fst
stc
stc
ret
aam
add
insl
xor
subl
jo
dec
cmp
lods
adc
outsl
inc
bound
imul
push
data16
cwtl
mov
das
ljmp
jo
jmp
stc
adc
pop
in
push
xchg
sbb
xchg
pop
shrl
repz
jb
loop
and
fnsave
lret
cmp
sahf
fwait
arpl
push
inc
pop
add
mov
mov
imul
pop
push
cmc
sbb
vpmaxsw
mov
mov
mov
push
cld
mov
shll
xor
repz
nop
cmpsb
cltd
data16
adc
icebp
jmp
das
sbb
ret
movsl
jle
shl
sbb
and
in
push
xor
mov
cwtl
jmp
fstps
es
push
adc
js
pop
rolb
dec
adc
add
cli
mov
inc
inc
cli
mov
sub
ret
xor
repnz
fildll
mov
lea
icebp
xor
cmpsb
cmpsl
int3
out
adc
aam
mov
inc
or
shll
xor
leave
jmp
sbb
dec
popa
xlat
test
sti
push
inc
arpl
ss
sub
rol
mov
test
jo
xchg
gs
aam
add
and
jecxz
not
gs
push
xlat
sbb
cmp
out
add
dec
aad
sbb
andb
cmp
pop
imul
mov
cmpl
jmp
lcall
sbb
pop
aad
push
jg
daa
aaa
mov
xchg
xor
shl
out
shlb
call
add
or
fwait
xor
ljmp
adc
cmpb
std
data16
jmp
outsb
adc
sbb
xor
aam
dec
fdivp
push
xchg
lcall
xor
xchg
bound
mov
or
push
inc
test
dec
mov
mov
adc
xor
dec
mov
mov
mov
int3
mov
push
adc
xor
sti
xor
push
pop
dec
and
adc
adc
cmpsl
daa
test
fcoml
inc
pushw
adc
insl
rcl
pop
stos
lods
xlat
xchg
out
adc
loopne
cmp
inc
shl
jl
sarl
outsl
jge
pop
mov
pushf
outsb
mov
xchg
test
fcmove
fxtract
inc
pop
jmp
js
ret
sbb
dec
dec
sti
sbb
push
das
push
mov
out
movsl
xchg
aad
int
loop
fmull
cmp
dec
sub
inc
inc
shrb
sbb
dec
ret
shr
xor
sub
gs
mov
in
adc
cltd
shlb
cmp
mov
shl
add
je
fsubs
push
andb
gs
sub
iret
fidivl
or
mov
push
rclb
repz
mov
xor
dec
shll
sub
mov
jecxz
push
gs
lods
or
or
dec
dec
cmp
pop
int
repz
es
arpl
lds
gs
ret
jecxz
sub
adc
jae
and
or
mov
mov
movsb
sbb
xchg
cmp
popa
ss
in
or
rcr
fs
or
adc
scas
ret
push
stc
inc
out
mov
push
test
jb
insl
verr
xchg
loopne
shlb
popf
cli
xchg
ds
jecxz
cmp
movsl
dec
xchg
lods
imul
sbb
cmc
mov
xor
fbstp
aas
pop
scas
jae
cmpsl
jns
dec
hlt
lods
dec
mov
std
movsl
jne
mov
in
jae
jecxz
roll
or
call
and
or
out
out
data16
cmc
push
push
int3
push
addr16
scas
scas
or
pop
xlat
mov
out
push
inc
ficomps
es
push
movsl
push
and
inc
clc
jge
mov
stos
lret
movsl
cmc
dec
std
aad
inc
pop
fldenv
arpl
jl
lods
std
fnsave
aam
lcall
imul
in
jo,pn
test
sub
adc
scas
shll
sahf
stos
jo
cmp
outsb
cmpsb
mov
ror
xlat
mov
mov
mov
idivl
fs
inc
sub
or
cmpl
jbe
daa
imul
dec
enter
lea
mov
or
repnz
scas
and
es
xchg
jb
gs
int3
ja
pop
or
jnp
daa
mov
sbb
cwtl
dec
loopne
mov
adc
lahf
mov
pop
rcrb
pop
sbb
call
roll
pop
and
jmp
cmp
and
cmp
mov
ds
repz
int
push
sbb
xchg
jp
popf
mov
rorl
fsubl
adc
movsl
hlt
and
dec
dec
mov
mov
lret
xchg
adc
sar
sub
and
lea
mov
stos
adc
out
jns
aas
div
inc
jno
xchg
xor
cwtl
sbb
in
test
sbb
popf
push
call
cmp
subl
sbb
mov
mov
jecxz
mov
sbb
mov
cmpsb
adc
xor
jae
ljmp
xchg
push
pop
jmp
mov
repz
mov
into
movsl
js
and
push
fcmove
cmp
aam
sub
jl
mov
loop
and
jnp
cmp
inc
or
sub
mov
sbb
add
idivb
je
sti
loope
jb
test
sub
popf
pusha
insb
push
jae
aaa
mov
mov
pop
in
loope
mov
xor
push
mov
push
or
jg
test
jns
lea
pop
adc
loop
shrd
push
pop
or
out
add
sbb
psubsb
mov
jae
mov
mov
jo
and
jno
jmp
sbb
insb
and
xor
rorl
mov
mov
mov
fldcw
loop
mov
lahf
ss
pop
fcmovu
addb
pop
inc
push
fisubrl
pop
sub
dec
jae
push
aaa
ret
daa
add
icebp
cmp
mov
rcrl
mov
mov
inc
mov
pusha
mov
xchg
mov
cs
fmull
jno
icebp
es
pop
cli
jae
xor
movsl
daa
sub
subl
neg
int
push
jnp
je
cwtl
popf
inc
ds
icebp
mov
ljmp
cmpsl
pop
mov
mov
jge
loop
call
sub
cwtl
push
fs
cwtl
scas
jge
daa
inc
cmp
loope
adc
xchg
out
cmp
jns
hlt
sbb
sub
sub
js
lcall
pop
sub
loop
ss
adc
notb
jmp
in
adcb
xchg
adc
dec
es
mov
cwtl
outsb
movsb
inc
lahf
je
inc
addb
push
xchg
loop
into
mov
cltd
int
test
sbb
enter
push
insb
mov
adc
fwait
and
and
gs
inc
adc
cld
aam
and
outsb
stos
sbb
popa
add
addr16
cli
ljmp
inc
mov
fs
xchg
daa
adc
mov
xchg
call
ljmp
stos
aad
or
dec
inc
repz
ret
mov
outsb
shrl
cmp
push
std
and
es
stc
je
mov
orb
mov
add
aaa
lock
popf
xor
mov
shl
mov
clc
hlt
inc
std
movsb
mov
bt
lret
loope
xchg
daa
ljmp
or
mov
sbb
insb
and
jns
andl
out
mov
lret
jg
ds
dec
and
aas
xchg
mov
and
and
fisubrl
enter
inc
jno
sub
aad
xor
mov
or
xor
push
push
mov
data16
jnp
dec
idivl
pop
mov
add
push
repz
fwait
cmp
pop
mov
neg
loope
add
addr16
xchg
jmp
loop
repnz
mov
ret
fadd
xor
jl
scas
or
fs
aaa
aaa
pushf
cli
pop
lods
and
xchg
enter
pop
jecxz
inc
mov
sub
stos
in
inc
bound
movsl
ret
inc
xchg
inc
punpckhwd
mov
lods
je
cmpl
mov
dec
cmpsl
cmp
mov
pop
mov
ljmp
rorl
inc
mov
aas
test
cmp
sahf
fwait
lret
lods
int3
push
movb
xchg
aas
ror
inc
pop
mov
fcompl
fidivl
xchg
adc
shl
inc
jae
lods
mov
js
test
scas
insb
mov
mov
into
xor
mov
pop
dec
fs
imul
mov
dec
jo
jp
mov
push
or
pop
add
scas
push
cmovbe
dec
outsl
xchg
lea
ret
fisttpl
insl
icebp
jg
cmpsb
lret
cmp
sub
movsb
in
out
cmpsb
sar
stc
push
lds
cmp
scas
or
sbb
sbb
jmp
mov
push
cld
pop
cltd
leave
push
popf
mov
cld
fidivl
lea
lea
dec
inc
mov
in
pusha
ret
cli
in
and
mov
xor
cltd
loopne
inc
clc
cs
add
cld
sbb
mov
andl
cs
scas
mov
cmpsl
hlt
and
adc
loopne
pop
into
dec
xchg
cmpsl
xchg
in
mov
pop
pop
push
test
inc
je
mov
stos
test
jnp
pop
loop
pop
jge
lahf
test
call
fs
jecxz
std
inc
out
mov
subl
mov
aad
divl
cmpl
outsb
cltd
mov
into
hlt
outsb
mul
xchg
push
cli
sub
xchg
mov
popf
sub
lcall
and
cmp
jl
ja
pop
ds
sbb
push
and
test
xchg
xor
les
push
cli
call
orl
fneni(8087
xor
or
enter
inc
out
popf
dec
cmp
lret
cmc
mov
call
mov
push
out
aas
loop
call
lods
and
jo
in
mov
out
pop
push
sahf
xchg
xchg
lock
test
or
push
arpl
test
out
xor
pop
jnp
sti
dec
scas
mov
adc
orb
ret
sub
or
sbb
insb
outsb
sbb
iret
lret
lds
sub
fcmovu
mov
sub
aad
mov
popf
mov
xor
mov
lret
push
jbe
lcall
pop
xchg
sar
insl
test
jns
push
jl
out
cmp
push
push
cli
and
inc
xor
lret
push
in
ss
adc
insl
dec
repnz
inc
test
shlb
ss
fimuls
call
std
aaa
into
or
out
lock
mov
lahf
adc
adc
lahf
push
add
fwait
aad
jbe
insb
and
cltd
jne
push
sbb
push
nop
inc
inc
push
adc
in
scas
imul
scas
ret
popf
iret
push
lret
mov
sbb
xchg
xor
popa
mov
xchg
js
mov
jp
data16
out
idivb
jne
and
aam
mov
xor
xchg
sub
mov
sub
ja
push
adc
xchg
stos
iret
movsb
leave
pmovmskb
iret
sahf
push
adc
xor
in
in
cmpsl
mov
adc
mov
shl
cmpsb
dec
cmp
bound
push
in
mov
sbb
jbe
movsl
gs
arpl
xor
repnz
in
jnp
xor
ds
or
pop
adc
fsub
pop
pop
push
movsl
jl
adc
xor
hlt
scas
pop
dec
imul
out
xchg
repz
shlb
fwait
in
dec
lea
pop
lret
sbb
pop
push
mov
inc
imul
or
jae
adc
inc
jns
imul
dec
jge
mov
push
push
filds
cwtl
les
out
outsl
xor
dec
in
sbb
jno
lcall
aas
hlt
push
jmp
dec
add
or
xor
sbb
sub
push
push
mov
pop
xor
je
aad
ret
dec
movsb
cmp
jnp
lahf
mov
fldl
dec
mov
insl
mov
jp
add
cmp
into
push
and
cmp
fs
call
jo
fucomi
mov
les
xchg
mov
imul
xchg
or
fucomp
fimull
cli
icebp
and
jle
adcb
rolb
mov
dec
sbb
ret
lret
insb
mov
mov
das
fcomps
stc
les
scas
aam
cs
ljmp
ret
in
pop
loop
cmp
add
pop
xlat
xchg
jl
cs
cmp
out
cmp
in
cli
test
das
push
test
and
je
inc
outsl
aaa
out
adc
or
insb
jno
xchg
adc
rcl
pop
adc
mov
cmpsb
add
mov
xchg
jb
lahf
sbb
dec
into
add
mov
ret
dec
sbb
mov
mov
jmp
jp
in
arpl
insb
and
fsubrp
cmp
insl
fwait
mov
neg
ftst
lret
or
inc
stc
xchg
mov
je
mov
add
sbb
bound
fucomi
add
sbb
test
jg
je
movsl
ljmp
add
mov
imul
xchg
jecxz
popa
or
in
popf
jl
arpl
je
aad
mov
inc
cmpsl
sbb
or
out
dec
cmp
js
test
sub
lahf
jecxz
jb
popf
add
push
xchg
ret
xchg
add
sarl
pop
sub
rcll
mov
adc
pop
rorl
popa
cmc
mov
jle
jge
cld
das
jg
addl
sahf
stos
inc
lods
pop
xor
or
push
jp
out
add
ret
push
jmp
sbb
jbe
mov
dec
enter
pop
jmp
out
aas
sub
cmp
fmull
aam
mov
orb
ffreep
push
mov
or
mov
cmp
xchg
std
jg
or
xchg
cli
cwtl
sbb
out
jge
xor
and
psrad
fdivl
inc
xchg
or
in
in
mov
aam
loope
sarl
leave
fwait
mov
xorb
jmp
test
daa
pop
pop
cmp
bound
mov
xchg
inc
cmp
lods
inc
adc
rolb
or
repz
dec
xor
shll
push
add
dec
lds
xchg
rcl
add
scas
ret
lods
test
shrl
stos
push
sbb
xor
mov
sub
lock
cmp
and
fdivr
test
cmp
fstps
imul
or
adc
scas
cmpsl
ss
or
and
push
imul
shlb
xor
lret
mov
jbe
mov
sbb
jno
mov
jle
sti
addl
mov
shrl
cmc
int
add
bound
and
mov
and
imul
test
mov
xchg
gs
int3
cltd
loop
add
sub
cmp
hlt
in
push
adcl
enter
add
inc
mov
fldcw
sbb
popa
mov
pop
int
dec
imul
add
dec
push
outsl
mov
mov
jo
inc
adcb
mov
mov
loop
mov
out
mov
sbb
lds
cld
popf
inc
sbb
dec
ret
and
ja
cmp
loope
cmpsl
imul
std
movsl
xchg
fldcw
sub
js
mov
jns
shrb
stos
outsb
add
js
xorl
push
xchg
pop
idivb
test
in
outsb
and
test
xchg
cli
outsb
int
clc
cmp
in
out
dec
xchg
and
mov
xchg
adc
outsl
pop
mov
test
jne
sub
bound
jnp
mov
data16
or
xchg
cld
inc
mov
pop
cltd
or
jge
sti
aas
inc
lahf
sub
sbb
movsl
add
decl
xchg
sub
dec
cld
test
insb
push
mov
jno
mov
sarb
push
xor
xchg
hlt
cli
sti
movl
pop
repz
lret
xchg
and
mov
sbb
pop
inc
cld
jno
mov
jmp
jmp
pop
mov
mov
push
jp
shll
shll
push
add
lods
pop
scas
mov
xor
dec
rolb
adcb
data16
jge
sbb
jmp
push
iret
ds
test
lock
or
push
push
out
adc
inc
sarl
sahf
lock
add
push
ja
rorl
fwait
inc
xchg
das
pop
nop
and
jp,pt
pop
sub
shrb
in
out
inc
mov
aas
xchg
xor
stos
adc
xchg
in
xor
int
mov
unpckhps
jmp
xor
test
pop
test
xor
and
dec
outsl
adc
test
out
dec
aad
sbb
das
add
sbb
leave
jl
adc
adc
mov
aas
sbbl
cwtl
sub
imul
inc
or
jp
push
mov
ljmp
xchg
dec
mov
and
push
dec
inc
and
pop
mov
xor
and
xchg
scas
xchg
sbbb
add
clc
and
je
sub
test
mov
enter
pop
jno
sub
sbb
lea
sub
jb
sti
sbb
cld
xchg
or
out
jg
fadds
outsl
add
mov
popa
outsl
inc
inc
mov
mov
adc
sarl
or
lods
lods
cmpsb
test
dec
imul
jbe
sbbb
int
dec
jo
pushf
or
adc
in
jnp
push
cmp
mov
imul
popf
wrmsr
pop
xor
jle
sbb
mov
sbb
fisubs
cmp
dec
sub
test
sti
cmc
outsb
pop
dec
pop
pushf
repz
cmpsl
clc
ret
jnp
mov
jg
and
fidivl
pop
and
pop
mov
les
sbbl
xchg
fbld
cmp
popa
dec
popf
add
jns
lret
scas
jp
idivl
jbe
inc
xor
sbb
cli
imulb
imul
add
mov
dec
or
push
pextrw
adc
imul
rorl
jmp
fs
and
outsb
out
fidivrl
aas
mov
cmp
shll
call
orl
sti
inc
cs
test
cmp
jg
pop
cltd
dec
je
xchg
or
and
repz
fistl
pop
adc
ret
movsb
sbb
sub
cmpsb
popf
push
cmp
popf
dec
int
push
dec
cmp
sub
sbb
gs
mov
sbb
fdivl
stc
clc
fwait
inc
cmp
push
mov
mov
fisubrs
jnp
fistpll
loop
in
or
inc
leave
addl
ja
cltd
push
push
and
cmc
or
int3
jle
shrl
or
pop
mov
ljmp
and
dec
aas
aad
js
inc
and
fldl2t
fcmovnu
inc
sub
lea
pop
or
mov
cvtdq2ps
xor
mov
daa
lret
repz
loope
lahf
rcrl
cmp
dec
mov
out
push
push
outsl
mov
fidivs
not
rcll
push
enter
push
fidivl
aaa
xor
ret
psadbw
adc
arpl
lds
pop
cmp
cwtl
xor
pop
push
leave
mov
es
inc
mov
dec
sbbb
mov
add
or
jne
fdiv
dec
sahf
rolb
mov
add
mov
xor
and
push
idivl
xor
aad
pop
mov
jecxz
xchg
pop
adc
decb
sbb
shlb
gs
bound
test
xchg
mov
jns
popa
dec
xchg
cmp
loopne
mov
or
jl
mov
cmp
rcll
andl
cmp
insl
pop
dec
jno
gs
mull
mov
jne
scas
cmp
mov
test
outsb
adc
scas
shrb
lcall
fsubrs
call
jns
outsl
xor
shrd
cld
or
and
push
inc
xchg
cmp
dec
push
in
ret
dec
imul
repz
out
paddq
ss
icebp
repz
stc
testb
xchg
cmp
dec
add
mov
fstpl
pop
mov
xor
sub
fmul
jae
cmp
pushf
add
push
int
add
push
and
sbb
imul
push
adc
jmp
pop
jecxz
xchg
mov
jb
addl
icebp
lods
cmpsl
popf
je
push
pop
xchg
int3
xor
cmc
in
roll
sbb
imul
xchg
cli
clc
stos
pushf
pop
xor
mov
and
cmp
mov
lods
jmp
cld
fdiv
ljmp
clc
fs
mov
lea
sub
fnsave
push
dec
jae
test
hlt
mov
dec
js
sarb
sahf
xchg
or
inc
js
movsl
pop
test
pop
xchg
cmp
aaa
std
arpl
mov
test
xlat
mov
mov
mov
cli
movb
aam
adc
jmp
andb
mov
mov
orb
mov
pop
mov
shlb
lods
int
nop
ret
pusha
mov
push
inc
cmp
dec
in
inc
imul
leave
ds
loope
sub
push
mov
fdivrs
jecxz
xchg
add
mov
popf
outsl
les
fwait
dec
sbb
popf
stos
rcll
and
dec
idivb
into
mov
jl
pop
bound
pop
icebp
and
int3
add
adc
out
push
lcall
fsts
adc
sub
shrb
or
sbb
adc
sti
dec
sbb
lea
or
icebp
repz
test
mov
pop
cmpsl
xchg
xor
shlb
outsb
das
sbb
pop
incl
push
es
stc
icebp
sbb
jmp
mov
cli
subl
adcb
movsl
push
mov
scas
xor
cmc
pop
inc
dec
xchg
out
out
push
daa
ret
sub
or
imul
jmp
sbb
icebp
dec
push
frstor
daa
jl
inc
mov
clc
sub
test
xor
jnp
add
mov
shl
xchg
cs
insl
test
orl
push
adc
test
movl
out
iret
mov
push
sbb
jecxz
add
fnstcw
dec
mov
add
aam
pusha
xor
mov
nop
xor
push
xor
pop
data16
jnp
pop
xchg
or
add
jmp
ret
scas
maskmovq
testl
dec
in
sub
arpl
pop
mov
mov
mov
push
or
int
jp
xchg
sbb
call
sub
movsb
sahf
stc
xchg
into
outsb
dec
cmpsl
lock
push
and
sahf
outsb
in
xor
xchg
lods
repz
or
and
std
std
jmp
in
std
in
stc
andl
es
ffreep
jp
adc
mov
ret
les
div
jo
mov
jl
call
inc
cli
loopne
inc
jmp
inc
mov
jne
into
mov
call
jbe
sub
pop
sub
jne
xor
pop
out
mov
lret
fadds
jo
lret
sbb
test
fwait
ljmp
add
inc
repz
sbbb
out
jp
cwtl
adcb
cmp
pop
jg
popf
sub
clc
call
mov
adcb
clc
mov
sbb
push
add
xchg
das
xor
icebp
cltd
sbb
push
ja
or
mov
pop
iret
pop
mov
dec
and
adc
ficompl
mov
jl
shl
stc
xchg
or
xchg
xor
into
pop
mov
popl
sub
sub
mov
sahf
inc
out
or
dec
dec
int3
jo
insl
mov
aas
je,pn
aas
hlt
lea
mov
lret
test
rol
inc
sarl
add
mov
or
jmp
shr
cmp
outsl
andl
lock
cmc
and
dec
test
addr16
iret
inc
movsl
mov
jno
js
test
call
repz
jae
ficomps
xor
sbb
call
dec
dec
stc
mov
lret
push
ds
cld
jmp
xor
mov
mov
jb
sub
cmpsb
lods
xchg
outsb
sub
xor
mov
daa
mov
dec
xchg
scas
push
ds
push
sbb
jp
ret
mov
sarb
cmp
popl
lods
pusha
leave
out
in
popf
sbb
loopne
popf
fldl
popa
cmpsl
sahf
or
inc
ret
and
int3
or
sbb
out
jge
xchg
fs
in
mov
sbb
xor
sub
out
movsl
incb
mov
rcll
test
lret
mov
mov
jb
mov
pop
add
or
inc
movsl
dec
daa
sbbb
sub
ret
jo
dec
inc
sub
add
jle
lods
pop
pushf
js
inc
out
xor
mov
test
js
in
sbb
adc
adc
lret
hlt
mov
inc
xlat
jmp
in
aad
cld
jno
xor
mov
iret
push
inc
xchg
sbb
stos
push
scas
and
ror
in
aad
cs
out
movsb
dec
xchg
into
adc
mov
push
dec
lret
fsubs
jle
insb
mov
or
js
and
mov
fnstcw
lahf
fucom
je
fbstp
iret
inc
enter
lcall
pop
mov
test
dec
int3
dec
notb
add
insl
es
mov
push
or
mov
and
and
mov
mov
dec
scas
jmp
faddp
mov
insb
cmp
push
mov
pop
pushf
cmp
aas
call
movsb
dec
pop
push
bound
fwait
xor
sahf
enter
scas
xchg
xchg
inc
xor
xor
mov
sbb
pop
fisubrs
fcmovne
cmp
push
dec
into
shll
dec
std
and
pop
fidivrl
adcl
jp
inc
and
mov
cmc
mov
nop
ud1
loope
sbb
pop
stc
push
lds
out
int3
orb
mov
popa
jo
lret
fidivl
adc
xor
jae
sahf
sbb
lahf
xchg
sahf
xchg
shlb
fstl
mov
mov
dec
dec
pop
dec
out
inc
and
scas
inc
jmp
push
clc
inc
sbb
aaa
popa
xchg
mov
popf
cmp
aas
sbb
sar
out
adc
mov
pop
xchg
ret
push
test
inc
push
movsl
repnz
aaa
inc
iret
fimull
push
ret
ficomps
mov
pop
cmp
cmpb
xlat
xor
cmp
in
jmp
sbb
repnz
fdecstp
pop
inc
xchg
cld
push
adc
xchg
enter
dec
pop
push
ret
stos
mov
ss
mov
outsb
arpl
inc
sahf
push
sbbl
mov
cltd
test
cmpsl
test
cmp
mov
outsb
js
push
scas
sub
addl
enter
sar
lea
cli
sbb
cmp
cli
mov
mov
clc
sbb
adc
stc
sbb
into
mov
movsb
pushf
add
loopne
out
in
pusha
adc
iret
loopne
dec
lods
sbb
mov
cmp
pushf
inc
or
adc
lret
cmp
dec
add
nop
out
sub
not
stos
push
sbb
dec
rcll
inc
push
into
mov
sbb
cmp
fnstsw
lock
lret
dec
ljmp
lcall
pop
adc
stc
and
sarl
sbb
das
popf
xchg
ja
or
imul
cmpsb
jle
cmp
test
mov
xor
mov
sbb
xchg
jb
dec
stos
add
roll
addr16
ss
mov
xchg
xor
cmpsb
in
sub
inc
cmp
pop
out
cwtl
idivl
dec
dec
add
or
test
aam
pop
enter
out
pop
push
jmp
mov
cmpsb
in
jmp
popf
loop
push
stc
pop
insb
ss
ljmp
xchg
popl
mov
inc
movsb
dec
dec
add
movsl
cmpsl
mov
lods
pushf
out
jecxz
jb
sahf
xor
testb
fcmovnu
mov
sbb
mov
call
push
out
sub
call
jb
movsl
and
jne
scas
scas
aad
pop
jns
or
xor
popa
dec
dec
shlb
push
sub
in
in
outsl
dec
mov
es
inc
aas
pop
xor
je
test
dec
fnsave
test
xor
ja
pop
xor
push
lods
int3
les
jmp
aaa
andb
mov
lock
aad
xlat
cli
adc
outsb
sub
sbb
dec
inc
loopne
mov
jb
test
adcb
add
cwtl
push
in
clc
mov
daa
cmp
mov
in
cmc
inc
inc
fs
inc
and
adc
pop
hlt
add
les
adcl
mov
or
scas
rcrl
pop
dec
aad
aas
sub
jnp
xor
xchg
shrb
jno
pushf
inc
and
xchg
outsl
fisubrs
dec
mov
les
push
push
fisttpll
jb
jne
jns
xchg
adc
aad
xchg
push
add
sbb
jp
mov
leave
cltd
enter
popa
loopne
or
outsb
adc
inc
jge
and
pop
pop
cld
mov
cmp
loop
fdivs
or
xchg
lds
jmp
test
jae
inc
in
lret
jl
es
loop
inc
sub
add
xchg
or
sub
inc
hlt
lret
test
sub
fldt
insb
and
push
or
pop
flds
push
sbb
imul
and
scas
jo
mov
xor
xchg
xchg
out
jg
cmpsb
insb
mov
and
gs
jo
inc
pop
mov
cmp
push
jl
out
scas
mov
test
jl
mov
pop
aaa
jg
mov
ror
add
cmc
dec
push
pop
out
pop
js
cmc
add
sti
ss
inc
into
push
insb
insb
pop
cmp
adc
push
sbb
xchg
adc
mov
test
xchg
or
dec
ja
pop
repz
xchg
inc
idivb
insl
mov
loope
outsb
sbb
das
and
adc
and
push
pushl
clc
daa
loope
cmpsb
pusha
inc
xchg
and
pop
fiadds
push
int
fst
and
iret
repnz
int3
sub
mov
adc
dec
aad
aad
jecxz
scas
lods
fisubrs
testl
xchg
jnp
dec
aad
push
outsl
repnz
mov
cmp
inc
test
mov
pop
adc
dec
sarb
outsb
cmpsl
jbe
push
pop
cmp
xchg
call
in
adc
arpl
int3
cmp
jno
test
pop
or
jo
in
test
shlb
push
mov
jae
mov
dec
lods
imul
push
pushf
sbbb
int
mov
xchg
and
add
or
cli
lret
cmp
mov
push
mov
mov
cmp
adc
cmp
lock
jb
cld
cmp
add
in
cmp
cwtl
push
hlt
pop
dec
shlb
sub
adc
inc
stc
pushf
lods
out
gs
int
xchg
and
jle
adc
mov
fs
imul
shrb
mov
movsb
ret
negb
stos
data16
shlb
add
gs
insb
jo
test
adcl
cmp
inc
gs
pushf
fldl
fadd
adc
inc
and
test
test
mov
pop
hlt
pop
fcmovnbe
dec
movsb
sub
push
addr16
popa
mov
ja
addr16
fdivp
mov
pop
xor
mov
pop
dec
jmp
mov
dec
imul
adc
cs
jnp
push
jmp
repnz
dec
pop
cmp
xor
sbb
inc
mov
jle
sbb
test
pop
movsbl
imul
loope
push
pop
mov
push
xchg
jno
imul
pop
jecxz
pop
mov
in
xlat
mov
movsl
int
imul
lcall
lds
jge
pop
repnz
pop
or
xor
leave
add
out
bound
in
xor
jns
leave
mov
pop
insl
xlat
or
imul
cwtl
ljmp
mov
stos
push
test
sub
in
mov
sbb
jno
pushl
jo
dec
mov
ja
mov
mov
cmp
insb
push
in
inc
cmpsl
pop
jbe
sbb
cs
loopne
iret
cmpsb
push
shl
rcrl
push
into
movups
jo
addl
dec
mov
pop
gs
sbb
shr
imul
leave
and
xor
in
pop
pop
dec
adc
scas
jge
push
hlt
ljmp
push
in
cwtl
sbb
xlat
imul
mov
or
test
hlt
fstl
inc
push
xchg
int
inc
jne
adc
jno
icebp
maskmovq
testl
jp
mov
test
mov
push
mov
leave
cmp
or
test
cs
into
pop
leave
jecxz
xchg
into
mov
shll
cmp
rcl
cmp
cmp
mov
and
imulb
addr16
jb
shrb
mov
mov
inc
icebp
or
shrb
clc
pop
arpl
in
lret
sbb
mov
or
and
into
sub
cmpb
jne
jmp
std
push
dec
inc
pop
pop
mov
cwtl
mov
or
inc
lret
xor
call
stc
daa
mov
popf
loope
cld
fidivl
iret
lea
sbb
pusha
mov
push
adc
add
ljmp
cmp
jmp
pop
je
rclb
outsb
fistpll
jbe,pn
fisubl
adc
push
mov
lock
ret
pusha
ret
xchg
add
or
push
xor
jp
inc
mov
inc
test
xchg
lcallw
jo
shrb
cmc
out
push
add
lods
and
lahf
pop
or
into
outsl
mov
mov
shll
mov
iret
test
loop
adc
lahf
lock
scas
sbb
or
mov
out
mov
push
ss
dec
shl
xor
jle
js
jp
dec
and
pop
add
mov
mov
mov
rcrb
ss
mov
and
pusha
push
jns
pop
cli
std
pop
inc
mov
movsb
pop
lret
icebp
stos
dec
into
cltd
sbb
mov
jmp
test
mov
pop
out
jecxz
ror
cltd
daa
add
pop
cltd
jecxz
divl
inc
rcrb
sbb
lret
pop
icebp
cmp
mov
push
mov
jp
or
loop
or
addl
inc
mov
imul
test
pop
dec
pushf
jmp
jo
adc
add
mov
test
out
lret
pop
push
bswap
es
add
xchg
and
addr16
mov
mov
mov
rclb
and
sbb
ja
jae
dec
call
jmp
loop
fildll
dec
xchg
adc
pop
cmpb
xor
int3
test
ljmp
mov
out
xor
movb
or
out
mov
cmp
xchg
adc
dec
rcl
inc
lods
mov
iret
loopne
mov
xor
dec
test
gs
stos
shlb
es
cmp
xor
mov
test
or
ret
inc
push
lods
lret
pusha
push
je
pop
pop
add
sbb
scas
lea
adc
fisttps
hlt
xchg
pop
xor
xchg
sbb
loop
push
xor
mull
mov
cmp
mov
stos
icebp
dec
inc
mov
popa
imul
sti
in
ficompl
mov
adc
pop
in
outsl
mov
inc
sti
or
push
loope
outsb
test
test
jns
negb
cmp
mull
out
vfrczsd
adc
aad
icebp
push
mov
pop
add
pop
mov
cmc
mov
ret
jp
ja
stos
dec
insl
arpl
fiadds
mov
jecxz
imul
sbb
iret
xchg
push
cmpsb
jle
arpl
shlb
std
inc
int3
fisttpll
mov
fwait
xor
xor
xor
xchg
test
mov
fmull
repnz
xchg
pushf
sub
mov
ds
sub
repz
push
push
xchg
rorl
cmpsl
lsl
or
jl
push
push
repz
add
insb
mov
mov
dec
sti
xor
fimuls
lret
enter
aaa
out
dec
mov
loop
inc
mov
enter
rcll
pop
jno
push
cmp
dec
pop
adc
push
jns
int
fists
add
mov
push
int3
js
cmp
das
gs
pop
jb
data16
sub
das
sar
bound
dec
adc
sbb
add
dec
hlt
push
jle
push
xchg
ficompl
cmp
push
mov
ljmp
stc
or
and
push
pushf
arpl
rorl
mov
das
dec
or
cmp
dec
push
fidivrs
jl
data16
mov
or
or
and
das
dec
rorl
sub
inc
adcb
out
scas
xchg
push
test
mov
pushf
sub
cmp
sbb
repz
lahf
lret
call
pop
push
ret
popa
fs
add
test
mov
in
push
jbe
jns
sbb
sbbb
mov
mov
xchg
mov
dec
sahf
es
mov
out
push
jo
aad
lret
int
jmp
cmc
or
xor
sub
dec
fnstenv
cmp
out
testb
icebp
pop
pop
cmp
movsl
fimull
pop
lods
xchg
or
repz
dec
das
sbb
fildll
sub
gs
xchg
or
stos
mov
or
dec
movsl
xchg
jmp
cli
dec
andb
dec
cmp
fsubl
in
mov
cltd
jnp
out
adcb
fstpt
aaa
loop
add
aad
sub
mov
in
or
ja
loopne
or
inc
jmp
mov
xchg
mov
mov
pop
pusha
cld
sbb
inc
rorb
hlt
repnz
pop
add
lfs
and
imul
xchg
dec
ss
lahf
xchg
jnp
loope
ret
cmp
sub
dec
push
add
out
repnz
movsl
mov
lret
out
xor
adc
xor
sbb
imul
ds
inc
or
push
lahf
xor
jg
aad
popa
cld
outsb
or
mov
int
leave
in
push
or
adcl
lock
add
mov
daa
aam
push
adc
popa
push
add
xchg
jns
insl
bound
cmpsb
scas
lcall
add
pop
mov
and
movl
mov
mov
sub
aam
shll
add
mov
int3
xchg
inc
jmp
add
enter
pop
scas
push
or
jmp
std
ljmp
mov
mov
dec
dec
inc
ficoms
jg
mov
test
stos
popf
push
pop
cmp
fcomps
xchg
xchg
mov
rcrb
mov
out
pop
pusha
mov
dec
loope
pop
movsb
jbe
lret
sbb
mov
int
pusha
flds
shlb
pop
fldl
pusha
movsb
lods
jns
shld
lods
jp
mov
cli
int3
arpl
lock
popa
mov
lahf
mov
mov
es
jmp
sbb
outsl
push
pop
push
sbb
imulb
pop
xchg
mov
les
adc
sbb
loope
push
rcrb
sbb
out
adc
push
add
mull
sub
faddl
gs
jecxz
pop
adc
cltd
outsb
sub
cltd
push
jmp
mov
lea
cmp
in
fcomp
aam
mov
out
data16
dec
jle
test
mov
push
push
push
xchg
shl
push
push
ljmp
pop
sub
add
xor
outsb
mov
add
mov
adc
orl
jp
sub
sbb
xchg
mov
fadds
mov
jl
add
out
inc
and
and
jno
push
faddl
mov
lea
stc
in
pop
flds
jecxz
inc
mov
shll
and
stc
jno
mov
addb
pop
subl
fmuls
push
ret
xor
inc
push
dec
dec
pop
jae
lret
fisubl
outsb
cli
pop
xor
jecxz
and
cli
cmp
sub
imul
jne
scas
pusha
outsb
mov
mov
push
adcb
call
pusha
gs
sbb
cmpsl
push
in
xor
adc
mov
jbe
arpl
clc
push
push
movsb
adc
nop
cli
lret
mov
fwait
cmp
inc
mov
call
dec
mov
pop
mov
xchg
jecxz
repnz
roll
jge
inc
and
cmp
pushf
push
push
fidivrs
xor
loop
dec
jmp
xchg
add
lret
jg
mov
sub
pop
dec
push
cmp
pop
pusha
stos
in
jb
cld
push
or
ss
xchg
xor
mov
cmpl
ret
xor
pop
adc
pop
mov
mov
mov
and
ds
cmp
push
mov
jns
jae
in
jg
xchg
sub
mov
sub
mov
ss
rcll
aad
mov
imul
stc
lcall
stos
adc
int3
ret
sbb
test
and
or
or
xchg
or
pop
imul
jo
xchg
mov
xlat
and
push
pand
xchg
sbb
aas
das
inc
dec
lods
imul
or
shrl
push
cmc
insb
imul
loopne
lret
pusha
aas
bnd
jecxz
test
and
lods
cwtl
pop
xor
je
push
sub
cmp
push
xchg
pop
or
fwait
add
es
and
enter
repz
ss
jno
cmc
xchg
leave
aaa
cmpsb
fstl
push
add
pop
dec
xchg
sub
lcall
insl
shll
leave
imul
add
mov
enter
pop
mov
faddl
pop
fidivs
sub
enter
repnz
xchg
dec
into
lea
fnstenv
lret
push
clc
call
cld
loopne
aad
mov
cltd
cmp
das
popa
mov
cli
and
dec
rclb
ficomps
fcmovu
iret
push
xchg
mov
in
sar
imul
mov
pop
and
sarl
push
test
dec
xor
lret
test
dec
xchg
cltd
and
sub
add
loop
jp
fsts
leave
mov
sbb
test
test
ljmp
clc
rol
repnz
inc
popf
adc
push
lock
stc
sbb
jl
dec
ljmp
cmc
jl
xchg
les
inc
mov
pop
sbb
jg
jle
scas
clc
push
mov
and
inc
leave
jmp
dec
jge
jp
xor
inc
mov
loopne
mov
xchg
sub
push
push
mov
cmp
mov
mov
mov
test
addr16
and
outsl
add
stos
jp
leave
dec
push
pushf
fisubrl
mov
movsl
pushf
lea
and
inc
orb
cmp
enter
mov
mov
xchg
add
cltd
rcrl
in
cmpl
imul
push
into
xor
cmp
scas
sub
push
es
or
insb
lret
lea
jp
dec
call
insl
add
xor
and
xlat
hlt
sbb
push
aam
f2xm1
inc
cwtl
insb
sbb
sbb
popf
test
popa
mov
or
xchg
mov
jb
push
notb
xlat
add
cmp
jne
clc
sub
out
push
adc
cmp
mov
pop
cmpsl
lods
cmp
out
notl
jae
xor
stc
jb
mov
mov
xor
xchg
int
mov
push
gs
loope
rclb
cwtl
jmp
inc
movsb
test
fnstenv
push
and
and
shll
mov
int
jne
jle
mov
pop
filds
mull
cmp
jb
das
fs
dec
shlb
or
test
push
dec
ficoms
loope
cmpl
iret
or
lahf
mov
add
add
test
imul
push
lret
int3
ss
int
mov
jns
mov
movsl
lea
pop
mov
pushf
shr
pop
sub
andb
mov
shrb
cld
int3
push
pop
lods
loop
and
movsl
jle
sub
insb
les
or
sbb
fidivs
fwait
mov
or
push
iret
dec
lret
cmc
push
or
sub
cmp
mov
addb
lods
pop
cmp
popa
cmp
mov
out
dec
jnp
cs
xlat
mov
imul
gs
mov
jle
push
stos
popf
out
loope
int
dec
mov
jmp
das
enter
mov
out
mov
adcl
pop
mov
fdivl
cmp
push
mov
fdivrs
mov
adcb
push
icebp
jo
dec
pop
scas
add
xor
icebp
or
clc
push
orl
outsb
daa
sub
and
adc
sub
movsb
lods
add
add
or
add
test
ss
outsl
mov
xor
mov
lea
mov
rol
sub
int
push
cmp
xlat
adc
mov
mov
int
int3
js
cmpsl
mov
xor
and
pop
sub
pushf
scas
adc
cmc
pop
dec
mov
lret
cmp
icebp
dec
test
jl
icebp
fldl
aaa
mov
dec
adc
sub
sbb
into
nop
fmuls
lods
lcallw
mov
push
popa
in
aaa
shll
cmpsb
sti
gs
int
cwtl
outsb
test
jb
and
mov
pop
xor
subb
addl
dec
add
loope
repz
in
fsts
les
stos
cmpsb
jno
sbb
fstl
mov
sbb
test
sti
jle
cmp
std
addr16
jmp
js
xor
xchg
sub
pop
and
aam
not
nop
adc
jo
stos
loope
sarl
adc
cmpsb
mov
stos
mov
testl
push
lcall
cli
pop
push
xchg
cmc
clc
push
sbb
push
mov
scas
js
rorl
mov
fidivs
jmp
or
pop
push
es
mov
pop
lock
cltd
loopne
push
shrl
in
sbb
cmp
sub
fcomps
cmp
sbb
fwait
rorl
gs
jb
hlt
xchg
decb
in
shll
dec
mov
mov
icebp
shr
add
mov
push
or
adc
push
sub
xchg
inc
int
rorb
stos
insb
push
dec
inc
sbb
sahf
outsb
jnp
test
sbb
xchg
sub
daa
xor
sti
repz
or
shr
adcb
and
or
add
testb
loopne
dec
jno
mov
push
sbb
pop
ss
and
pop
mov
pop
test
pop
or
mov
loop
movsb
dec
jp
lea
mov
push
sti
cmp
popa
inc
cmpsl
nop
push
mov
adc
cmp
push
loopne
movsl
xor
xrelease
add
inc
ljmp
adc
icebp
xor
ret
sti
je
push
jae
iret
sub
mul
mov
jne
pop
ja
pop
movl
es
mov
pop
cltd
pop
mov
mov
mov
rep
movsb
mov
daa
addb
xchg
push
into
lret
adc
cs
lahf
cwtl
fcom
cmp
fsubs
inc
jnp
shll
and
add
pop
out
jnp
arpl
outsb
jecxz
stos
movsl
notb
sbb
fcoml
mov
js
es
scas
fdivrl
dec
sar
xchg
gs
add
gs
pop
out
pop
insb
cmp
xor
shll
pop
inc
fwait
pop
cld
jp
call
orl
push
xor
dec
mov
mov
sub
in
cmpsl
fldl
and
test
pop
mov
sub
hlt
mov
xor
cmpsl
loope
mov
push
xchg
mov
pusha
sbb
mov
or
outsl
sub
pop
sahf
aad
in
hlt
dec
pavgw
loop
shll
or
stc
sub
mov
and
cmp
sbb
mov
int3
gs
pop
xor
dec
mov
rolb
sub
mov
jmp
leave
fisttps
xchg
mov
test
jnp
cmpsb
xchg
movsb
lods
push
dec
inc
repz
cmp
test
sbb
mov
hlt
in
les
lds
jns
push
clc
dec
mov
or
adc
mov
jo
mov
xor
mov
cmp
icebp
sub
call
xor
mov
or
out
pop
insl
sbbl
jb
mov
or
cmp
and
imul
xor
jnp
mov
mov
test
stos
xor
jmp
jmp
mov
or
xor
aad
sbb
mov
test
out
cltd
xchg
out
pushf
cmp
ss
pop
test
fldcw
int
mov
jae
ljmp
sbb
aad
mov
add
mov
andb
push
movsl
mov
xor
fnstenv
pop
ds
scas
js
inc
adc
sbb
mov
mov
cmp
test
out
mov
mov
ret
vunpcklps
lret
inc
filds
xor
cli
ret
dec
inc
sub
ret
jle
fbstp
icebp
mov
movsb
add
jb
adc
insl
aam
xlat
sbb
inc
jecxz
test
mov
inc
test
add
mov
cmpb
xlat
xor
xor
jp
xchg
sbb
mov
fldl
arpl
sbb
cmp
outsl
pop
mov
cmp
jmp
add
add
fisubrs
leave
fld
jo
inc
outsb
jno
mov
les
mov
xchg
cli
cmp
addr16
cmpsb
mov
call
ret
hlt
pop
add
movsb
into
das
jg
stos
cmp
stos
orl
inc
and
sbb
add
lcall
loop
loopne
or
sarb
inc
jmp
add
sbb
repz
fldl
roll
jno
fisttps
adc
cmp
mov
pop
mov
dec
shl
std
lret
fwait
leave
xchg
lcall
mov
xor
pushf
jmp
xor
in
hlt
xor
aaa
mov
mov
cmp
andl
bound
push
dec
dec
std
push
ficoms
jecxz
jns
ja
in
mov
add
xor
js
xchg
push
arpl
inc
stos
and
cmp
insb
inc
add
rolb
pop
insb
lods
jmp
sbb
and
out
pop
out
fmuls
xchg
sub
outsl
pop
out
xchg
mov
ret
mov
mov
sbb
push
and
mov
push
pop
and
call
dec
mov
or
lret
sbb
jle
fisubrl
mov
xor
out
bound
daa
xchg
mov
jae
call
inc
loopne
push
repz
jp
push
adc
test
xor
loopne
cmp
lcall
insb
inc
jo,pt
in
dec
fs
sbb
dec
ss
add
cmp
adc
xchg
jp
mov
xor
les
jp
fs
fwait
iret
push
lahf
mov
test
mov
out
enter
xchg
adcl
pop
or
inc
js
cmp
lcall
dec
cltd
sub
jnp
add
add
call
fidivl
adc
cmpl
or
mov
call
pop
jne
out
cmp
scas
clc
cmp
xor
cmpsb
fwait
xchg
xor
dec
dec
icebp
and
mov
fldl
xlat
hlt
das
jb
pop
push
lret
cmp
dec
movsl
xchg
out
push
incl
stos
mov
pop
loop
jecxz
mov
outsb
rcrl
dec
xor
pushf
and
hlt
mov
test
pushf
std
das
in
loop
mov
cld
mov
out
aam
or
inc
movsl
mov
hlt
pop
pop
bound
xchg
imul
in
xchg
xchg
sub
push
jp
xchg
call
or
sub
repnz
aaa
cmp
outsb
testb
sub
test
adc
test
xchg
aam
mov
xchg
push
mov
pop
dec
pop
mov
jb
or
xchg
and
lahf
gs
adc
fnop
adc
stos
pushl
dec
add
adc
adc
push
mov
frstor
pushf
pop
mov
jecxz
push
gs
cmp
xchg
mov
loopne
fld
adc
sub
add
js
arpl
loope
or
lcall
ja
dec
add
fidivl
mov
push
adc
sub
arpl
push
outsb
cld
mov
adc
fistpll
leave
mov
je
pop
ss
leave
sub
add
popa
lods
ss
add
fsubrp
fldcw
sub
xor
scas
cmpb
xchg
adc
xchg
faddl
lock
sbb
gs
aam
inc
jmp
stos
hlt
fnsave
mov
push
stos
bswap
xor
mov
insl
or
adc
adc
cmpsb
fnstenv
add
rorb
sbb
scas
movl
mov
das
cld
pushf
mov
or
jno
dec
loope
mov
in
mov
mov
les
iret
movsl
lret
lahf
cltd
inc
cs
flds
ret
clc
roll
pushf
mov
testb
and
and
push
sahf
push
lcall
pop
push
push
mov
std
xchg
clc
jnp
cwtl
je
popa
push
inc
xor
lods
icebp
mov
ljmp
sub
enter
mov
add
add
mov
cmp
jmp
loop
jns
mov
fucomip
push
jb
push
sub
jae
adc
jns
je
jl
push
xchg
add
add
or
xlat
mov
shlb
mov
mov
push
mov
cmp
fwait
out
inc
out
mov
xchg
aaa
xor
xchg
pop
imul
jb
pop
lcall
scas
clc
and
adc
xor
and
in
enter
dec
es
dec
lods
jmp
aam
aaa
mov
dec
pop
shlb
repz
out
repz
sub
aam
mov
adc
or
pop
or
loopne
cs
xor
inc
icebp
or
jle
inc
and
jecxz
cmp
aaa
pop
xchg
add
add
jae
xchg
fmulp
scas
lods
cmp
or
insl
pop
sbbb
fwait
push
pushl
test
push
retw
pop
mov
pop
popf
repnz
daa
dec
std
mov
leave
dec
mov
jp
iret
xchg
adc
dec
not
outsb
mov
adc
fistl
adc
imull
pop
mov
mov
sbb
test
sub
scas
fldl
dec
gs
idivb
xchg
inc
je
dec
adc
jp
ds
or
je
adc
pop
int
push
jecxz
loope
or
daa
stos
xchg
jge
jg
jb
jo
mov
subl
mov
data16
jno
push
pushf
test
in
shl
movsl
sbb
test
add
mov
out
repnz
lcall
fldl
mov
jmp
mov
insb
lret
push
pop
std
or
das
dec
push
mov
les
dec
add
fsubl
inc
push
mov
popa
sbb
outsl
inc
jo
inc
push
push
scas
cld
out
shrb
pop
scas
pop
lret
loope
lcall
int
adc
lods
mov
ds
clc
stc
inc
inc
movsb
sbb
jbe
pop
test
lock
push
repz
subb
mov
pop
in
mov
mov
xchg
add
cmp
push
sbb
test
inc
pushf
mov
subw
lahf
popf
test
inc
into
es
icebp
xchg
je
addr16
call
sbb
lods
icebp
xchg
pushf
cmpsl
lahf
pop
mov
in
xor
jbe
sbb
out
repnz
repnz
arpl
push
dec
mov
push
push
cld
lahf
fsts
mov
pop
stos
bnd
sub
pop
cmp
pop
cmp
movups
cld
aam
jae
add
xchg
insl
repnz
sub
hlt
inc
cmc
loope
sub
add
icebp
lret
jbe
xor
inc
cmp
outsb
popf
sbb
js
cwtl
add
fcomps
sbb
or
sbb
jae
les
jae
lods
lods
jl
ret
pop
and
or
or
cld
jne
jg
xor
aad
add
or
mov
sub
pusha
push
adc
cmc
pop
out
mov
out
int3
mov
mov
mov
push
and
mov
test
out
xchg
repnz
add
lods
push
inc
mov
or
mov
jno
loopne
mov
mov
movsb
inc
ret
pop
arpl
shl
jno
lds
insb
out
fists
xchg
cmc
das
daa
mov
mov
pop
fistl
je
and
adc
dec
mov
pop
fs
sbb
lret
in
xor
mov
jecxz
lods
bound
xor
dec
pop
jb
std
push
aas
test
push
rolb
insb
outsl
push
aad
inc
and
movsl
push
push
sahf
inc
lcall
mov
jg
adc
xlat
xor
mov
out
lods
xor
adcl
jmp
out
lea
or
xchg
xor
call
aaa
xlat
cli
lret
flds
or
movsl
cmp
push
and
fs
jae
sbb
xor
rolb
movsl
xor
das
push
jp
jp
call
push
xchg
loope
push
pop
icebp
in
dec
ja
ret
jne
test
leave
push
fmuls
jae
js
mov
adc
lods
lods
inc
sbb
add
jge
ljmp
pushl
jnp
jmp
rcrl
je
scas
fcomi
xchg
cmp
jbe
mov
push
adc
sub
adc
dec
jp
push
mov
and
push
data16
sbb
jae
push
lret
xor
int3
pop
std
lret
cmp
lea
jo
pop
insb
or
out
dec
xlat
mov
sahf
add
loop
cmp
and
scas
inc
jnp
xor
jns
add
in
outsb
cs
sbb
mov
mov
adc
or
and
xchg
stos
push
sub
or
imul
mov
cmpsb
inc
adc
xchg
cli
adc
lods
ret
jb
ja
lea
cli
imull
jbe
push
xchg
or
jge
lret
out
test
imulb
cmp
mov
fdivs
fs
push
sub
mov
imul
lock
bswap
enter
jecxz
adc
fs
lret
insl
int
jb
or
insb
push
xchg
pop
dec
loope
push
aas
ja
ret
lods
xchg
mov
or
xchg
fisubs
out
fnstcw
dec
mov
inc
push
inc
cmc
cmpsl
xchg
outsl
push
cmc
jns
cmpsb
jmp
fnstsw
popa
sbb
loopne
movsb
mov
push
test
adc
jle
push
test
std
sbbb
mov
test
daa
data16
pop
jno
imul
xor
jno
mov
mov
cmpsl
sbb
jb
push
jp
mov
xor
ds
cmp
ret
mov
adc
lahf
jecxz
fcoms
sbb
popa
ret
push
jl
insb
pop
ret
or
add
movsb
xchg
jnp
pop
pop
das
pop
push
mov
ljmp
ja
push
rcr
adc
in
lock
adc
pop
and
adcb
ret
mov
daa
in
adc
lock
lahf
shlb
mov
xor
or
xor
fnstenv
aad
mov
movsb
add
pop
jne
jae
loop
stos
mov
cmpsl
lea
and
mov
inc
adc
das
mov
jne
sub
cmc
push
subl
test
xor
out
negl
xchg
mov
inc
outsb
sub
push
push
jns
das
add
and
jnp
jb
jns
sbb
mov
sub
xchg
cld
popf
addr16
jg
cs
jl
pusha
cmpsb
in
cmp
push
arpl
rolb
inc
xor
leave
aam
pop
roll
test
jb
enter
repz
cmpsb
mov
sahf
push
imul
cltd
mov
cmp
gs
fdivr
inc
in
pop
lods
xchg
or
imul
icebp
pushf
sbb
xchg
shlb
stc
adc
test
cmp
inc
cwtl
jmp
dec
jno
fmull
inc
dec
ss
sub
mov
out
or
add
movsl
push
imul
clc
lods
or
xor
cld
out
aam
inc
sbb
gs
push
cmp
pop
movsl
pop
jp
fidivl
push
jo
and
loope
std
jecxz
repz
pop
dec
rorl
adcl
add
jmp
daa
aam
sbb
adc
roll
ja
aaa
xchg
xchg
xchg
pop
les
sbb
cmp
xor
adc
jp
mov
imul
push
inc
mov
mov
or
adc
mov
mov
popf
dec
in
add
push
lret
dec
mov
pushf
outsl
push
sub
sub
icebp
daa
push
shrl
int
sub
sbb
lahf
pusha
inc
inc
loop
int3
sub
popf
test
popa
test
clc
xchg
inc
lret
sbb
fst
lds
outsb
lahf
sbb
pop
stc
fwait
ljmp
sbb
cmpsb
jmp
sub
push
dec
cmp
adc
lea
push
adc
add
lcall
les
xor
pop
mov
xor
and
ret
pop
shl
int
pushf
sbb
cmc
dec
mov
mov
or
dec
cmpl
mov
nop
test
fisubl
out
adc
push
ljmp
insb
xor
das
and
mov
je
or
xchg
insb
stos
push
lahf
shll
xchg
loope
jmp
sub
mov
bound
incb
ja
pop
xchg
stos
mov
fcmovne
dec
std
xchg
cmpsl
insl
dec
push
mov
inc
mov
test
hlt
in
mov
pop
add
pop
mov
mov
xchg
mov
repz
cltd
loope
into
xchg
stos
lret
mov
jl
ljmp
push
adc
and
inc
pop
pop
pop
mov
aad
out
in
outsl
sarl
add
fimuls
sub
xchg
push
mov
inc
inc
imul
and
add
add
je
mov
out
ret
push
jge
mov
std
test
mov
rolb
hlt
rclb
xchg
dec
mov
out
clc
ss
sbb
or
push
shl
mov
mov
xor
and
sub
mov
sahf
fidivrl
repnz
jp
sbb
push
test
test
or
pop
xlat
das
cs
mov
lea
sbb
mov
sub
inc
mov
dec
repz
in
sub
mov
cmp
movsb
std
xor
xchg
aam
aas
scas
insl
push
mov
push
es
test
xchg
inc
enter
test
in
jmp
jg,pt
dec
jg
std
xchg
fstpl
scas
cmc
into
jo
test
mov
cmpsb
xor
ds
in
push
imul
adc
xchg
jo
outsb
int
xor
cs
gs
jb
push
inc
xor
adc
xchg
aas
lea
addr16
xlat
inc
jae
test
xor
xor
std
sti
mov
ficoml
lret
and
aaa
jno
ret
repnz
xorb
sub
mov
jo
or
data16
sbb
mov
out
sar
cld
sar
or
xchg
insl
mov
pop
inc
adc
mov
xchg
test
push
js
jbe
sbb
das
mov
and
xor
ljmp
inc
jp
jo
and
and
nop
packssdw
ja
aas
das
or
dec
das
xchg
push
test
js,pt
ret
add
shlb
jns
outsb
xchg
ret
sub
fdivrl
mov
aad
iret
cld
push
add
sbb
icebp
test
or
sar
cmovbe
or
adc
int
and
dec
fs
sub
push
xchg
xor
js
arpl
mov
daa
ljmp
xchg
fnstsw
jbe
jge
push
mov
pushf
out
sub
cmp
cwtl
or
sub
addr16
mov
adc
mov
in
xor
xlat
mov
test
pop
out
rcrb
xor
addr16
movsb
aam
xor
jb
movsl
cmp
adc
lcall
mov
mov
repz
add
mov
lret
sub
ja
cmp
sbb
mov
mov
jno
js
test
mov
adc
jp
icebp
push
jge
out
stos
mov
in
gs
in
jnp
call
cwtl
adc
arpl
loopne
neg
jge,pn
push
xchg
jne
popa
xor
leave
out
pop
cmp
mov
xlat
mov
xor
fcomps
or
xor
cmp
mov
sub
push
jl
xchg
nop
stc
gs
outsb
jae
arpl
repnz
cmp
pop
inc
pop
mov
je
sub
rorb
and
test
ds
sbb
cli
aad
scas
outsl
xchg
sub
jge
and
adc
lods
or
sub
xchg
push
mov
dec
jmp
cli
mov
inc
stc
fsubrp
scas
je,pt
insb
outsb
jle
int3
inc
pop
std
ret
lahf
inc
bound
sbb
push
int
icebp
clc
lock
shll
dec
jmp
icebp
push
adc
xchg
ret
cli
jle
test
jnp
jns
pop
mov
out
gs
mov
sti
sti
pop
inc
cmp
sub
mov
loope
pop
jnp
test
inc
shll
aad
mov
into
pop
jo
push
cwtl
jl
ret
cld
dec
in
daa
push
sti
jne
xor
aaa
ffreep
pop
add
or
push
mov
push
stos
adc
sub
pop
mov
dec
shrb
pushf
xorl
ds
scas
ss
pushl
imul
pop
fcomps
push
scas
ljmp
mov
lea
mov
jne
insl
repz
pushf
inc
pop
xchg
xor
lahf
jmp
mov
daa
push
xor
push
mov
cmpl
pop
jmp
adc
sub
add
mov
push
dec
mov
mov
stc
xchg
movsl
sub
icebp
stc
cltd
add
pop
adc
mov
jecxz
std
jae
mov
bound
add
pusha
js
push
sti
stos
loop
sbb
push
fstps
ss
mov
int
aam
mov
test
pushf
sub
mov
cmp
call
mov
pop
or
bound
icebp
add
stos
cmp
mov
std
and
loope
xor
scas
or
pusha
inc
xor
xor
scas
xor
jg
xor
outsl
test
dec
rolb
pop
pop
ljmp
incb
pushf
adc
test
inc
mov
jl
rol
dec
outsl
aad
mov
mov
adc
push
popa
add
add
sbb
outsb
xor
pop
insl
push
arpl
fsub
push
addb
je
pop
or
push
add
mov
pop
mov
jns
inc
pop
push
xchg
xchg
in
or
fnstsw
nop
sbb
pop
aam
and
xor
call
sbb
dec
stc
sub
mov
pop
cmp
div
mov
inc
lods
inc
dec
aas
cmp
dec
test
xorl
mov
jge
sbb
mov
rcr
cmpsl
jmp
jno
out
add
inc
in
outsl
mov
jge
xlat
add
mov
push
xlat
mov
xchg
mov
push
sti
or
ds
sub
or
mov
or
mov
sbb
rcll
inc
shll
cmp
push
test
dec
shll
loope
mov
test
repnz
cmpsl
sbb
fisttpl
js
ficompl
pop
push
scas
test
and
mov
inc
test
mov
sbb
pop
push
enter
adcb
pop
loop
sti
aam
mov
sbb
pushf
sti
xchg
mov
mov
test
in
pop
mov
cmpsl
fdivrs
popa
push
fwait
js
xchg
mov
dec
jl
mov
adc
inc
inc
dec
lds
ret
js
out
xchg
scas
scas
jns
cmp
sub
repnz
sahf
inc
mov
loopne
push
or
imul
mov
scas
xlat
xchg
aas
divb
mov
dec
shl
xor
add
and
mov
sub
sub
add
mov
fnstcw
and
lret
ja
sbb
cltd
mov
sbb
pop
adc
mov
mov
lock
lahf
inc
jnp
jb
ss
bound
lcall
push
mov
fstpt
jle
xchg
sub
sbb
push
mov
addl
mov
fs
ja
addr16
xchg
jo
pop
mov
jb
sti
jo
popf
int3
push
cs
ja
add
jle
nop
mov
test
pop
jecxz
inc
cwtl
mov
iret
in
or
scas
fists
mov
je
cli
xor
rcrl
ss
and
lods
add
inc
insb
popa
jno
jne
xor
cmp
mov
je
nop
xchg
cli
fsubl
test
xor
push
mov
xchg
stos
mov
filds
pop
xchg
fxch
rorb
and
rorb
cmp
popa
sub
sbb
fisttps
nop
xchg
jmp
jecxz
jg
icebp
lahf
push
pushf
xchg
jmp
adc
jnp
lods
sbb
lcall
sub
cmp
xor
inc
adc
test
push
pushf
xchg
ret
cmp
fisttps
lods
jp
mov
inc
mov
mov
cltd
loope
jno
in
int
adc
sbb
pop
and
xor
insl
and
mov
mov
dec
adc
mov
push
mov
inc
adcl
sub
das
xor
or
xor
ficoml
cmpsb
mov
mov
add
add
out
mov
jge
mov
dec
xor
shlb
arpl
fmull
jp
mov
in
sub
push
inc
movsl
sti
cmp
pop
xchg
pushl
lock
negl
push
push
out
pop
dec
jmp
add
xlat
test
push
outsl
rcrl
outsb
rclb
cmpsb
out
popf
lret
adc
push
push
inc
mov
jno
jnp
lret
jnp
or
pop
sub
sub
movsb
jle
iret
push
scas
cmp
int
or
push
pop
jl
push
or
je
out
push
push
mov
test
or
lock
sbb
push
mov
lahf
adc
mov
aas
jns
jp
movsl
daa
mov
dec
clc
repz
xor
push
cmp
jl
popf
adc
inc
jmp
lods
imul
cmpsl
inc
mov
jp
rolb
mov
push
mov
fsubrs
jp
adc
shll
xchg
aas
sbb
cmp
mov
jae
jmp
dec
inc
lods
test
mov
fcoms
mov
xlat
out
mov
aam
pop
imul
mov
mov
fdivr
mov
mov
or
adc
or
mov
sbb
stc
aam
sub
mov
cmp
mov
stos
je
stos
pop
adc
lret
bound
dec
sub
outsl
rclb
or
cmpb
pop
mov
pcmpeqd
dec
jbe
sub
add
jae
aas
xchg
mov
test
fisttpll
ret
or
fnsave
test
mov
ret
loope
pushf
push
aas
cld
xchg
inc
mov
push
jg
mov
mov
shll
sarl
add
mov
sarb
loopne
imul
mov
repz
cli
orl
ret
mov
adc
in
imul
pop
mov
sbb
shlb
push
lds
sub
sub
pop
pop
sarl
mov
cmp
cmp
stos
jmp
test
jno
xchg
pop
pop
push
cmp
pop
sbb
out
or
and
scas
push
pushf
shll
ret
xlat
sarb
mov
jno
in
sarl
mov
loope
xor
insb
outsb
ljmp
nop
cmp
or
pop
es
inc
dec
das
les
jg
sbb
jle
frstor
xchg
xor
jp
sbb
and
aas
jle
pop
fistps
subl
push
sbbl
pop
das
imul
popa
cmp
jl
dec
sub
add
clc
ret
notb
dec
out
pop
mov
add
sbb
jp
sar
add
sbb
loop
push
push
adc
in
pop
test
test
xlat
sub
adc
mov
data16
pop
sub
push
sbb
stos
cltd
lds
daa
pop
add
dec
jge
movsl
test
and
jge
int3
mov
aas
jecxz
mov
adc
insb
addl
and
mov
roll
cmc
les
mov
add
fisttpll
mov
mov
cli
add
push
loope
je
sti
jg
mov
adc
dec
inc
pop
mov
jle
sub
fistpl
lods
xor
test
bound
arpl
mov
es
sbb
lret
push
ljmp
push
jns
lahf
push
fnstenv
hlt
jecxz
movb
dec
xchg
call
mov
scas
scas
cmp
mov
sub
mov
dec
xchg
push
data16
dec
imul
lea
fs
shrb
fcoml
int
cld
loop
and
pop
push
cmpl
paddq
insl
ja
and
fistpl
shrl
and
sub
mov
popf
xor
je
dec
push
and
mov
loope
xchg
xor
sub
dec
mov
daa
jb
mov
sbb
push
cmp
cwtl
in
add
rcll
xchg
aaa
addr16
rcl
or
dec
jge
cmpsl
cmpsl
scas
sti
sbb
ds
push
or
jbe
pop
lcall
lea
je
or
sti
sbb
repnz
jnp
push
cmp
adc
push
sub
mov
insb
cmp
incb
int
out
mov
push
shll
xchg
ficoml
lock
adc
sub
push
je
cmpsl
insb
std
and
mov
or
movsl
or
in
fcomps
lods
arpl
cltd
xor
mov
rclb
ja
dec
sbb
popa
stos
leave
add
xchg
adc
add
xlat
add
out
push
jo
test
pop
inc
int3
sub
mov
pop
loope
push
lock
jae
and
in
jecxz
gs
je
js
xchg
jne
in
dec
and
enter
dec
add
mov
int
in
add
pop
mov
lea
mov
leave
mov
push
leave
or
jae
in
pop
mov
out
aaa
add
push
push
into
or
scas
shll
stos
mov
or
andl
in
inc
es
pop
cli
dec
notl
gs
dec
inc
int3
and
rorb
stos
add
inc
jle
push
push
ljmp
dec
mov
add
mov
shl
adc
js
adc
xchg
lods
gs
popf
insb
pop
push
jmp
stos
dec
sub
mov
test
pusha
and
lcall
stos
ret
dec
add
xor
sub
fildl
and
dec
ret
xchg
push
dec
cmp
push
add
je
sub
test
pushf
into
insb
cmpb
lahf
ds
ret
insl
add
adc
jmp
xchg
ljmp
dec
out
aad
fisubs
out
fldcw
shr
or
mov
mov
frstor
aad
sarl
adc
pusha
js
push
jae
js
aas
jle
scas
aam
loopne
push
push
js
lods
and
cld
push
lret
sti
insb
je
xor
imul
dec
cs
data16
mov
fidivs
iret
sub
lret
sbb
sbb
out
test
data16
popa
sub
mov
jo
out
sbb
cmp
push
cmp
faddp
or
imul
push
mov
int3
shlb
mov
shll
add
mov
add
fdivp
cltd
lods
repz
push
or
enter
scas
sbb
iret
je
dec
push
divl
mov
aas
jg
inc
es
dec
and
sub
out
lods
pop
adc
aad
loope
cmp
jno
imul
cmp
mov
ficomps
push
mov
mov
mov
hlt
jo
xor
pushf
cli
sbb
add
xor
mov
dec
enter
or
dec
xchg
mov
add
adc
push
mov
es
mov
dec
lcall
pop
jmp
test
inc
sub
xor
call
dec
xchg
repz
inc
in
insb
pop
push
dec
push
sti
sbb
jmp
mov
sub
loopne
js
and
dec
cltd
inc
enter
lods
mov
xor
xor
hlt
xor
das
xchg
inc
aaa
sub
push
xlat
subl
ss
push
pop
stc
and
sub
sbb
jo
ja
test
mov
gs
push
adc
push
push
aaa
aad
mov
fstps
pop
adc
adc
loopne
das
int
fimuls
inc
ss
mov
pop
dec
idiv
loope
add
inc
inc
adc
fisttps
scas
imul
push
adc
fidivs
scas
push
out
cli
dec
jno
cwtl
inc
xlat
stc
mov
jp
and
push
test
cmp
xor
pop
dec
ss
add
shl
insb
and
in
ret
push
xchg
paddb
sub
dec
adc
pop
aad
cmpb
or
xchg
cld
pop
aad
neg
add
cmp
or
pop
icebp
mov
xor
mov
jg
push
xchg
sub
es
std
fistpl
clc
or
sub
jmp
xchg
jmp
out
out
or
fadds
push
rcr
jp
xchg
imulb
addw
orb
xor
sbb
imul
jecxz
adc
xchg
fmul
inc
lcall
mov
jae
rclb
add
adc
sarb
or
test
scas
fwait
in
pop
je
lods
inc
inc
lods
imul
mov
inc
mov
hlt
out
outsl
in
mov
lds
push
xor
push
xor
repnz
sbb
imul
test
clc
ret
test
and
pop
mov
pop
sbb
int
jecxz
xor
mov
sbb
and
pop
insl
adc
jl
filds
ficoml
or
lds
or
pop
pop
dec
sti
cmpsb
mov
cmp
sbb
int
aad
mov
xlat
mov
dec
add
fldenv
popf
hlt
loopne
popa
cmp
ja
and
xlat
dec
inc
mov
push
xchg
lcall
stc
mov
adc
jp
notl
sub
aaa
inc
inc
daa
out
adc
jns
sub
js
out
push
cmp
loopne
jns
out
adc
or
xor
ret
test
lds
adc
mov
outsb
je
test
cmpsb
and
xor
mov
aaa
xchg
into
sbb
lea
adc
cmpsb
xchg
sti
movsb
jne
jae
sub
inc
xor
es
mov
aas
mov
jl
sub
mov
or
jae
pop
xchg
or
push
sub
jle
pop
es
mov
sahf
lods
mov
or
inc
push
dec
shrl
out
xchg
arpl
pusha
in
adc
hlt
mov
sahf
test
andl
push
outsl
dec
movsb
mov
and
outsl
pop
or
xor
lahf
xchg
stc
and
in
mov
dec
dec
aas
mov
adc
rcl
out
incl
push
mov
lods
mov
scas
mov
repnz
inc
loop
test
inc
sbb
fwait
adc
xor
cmp
mov
lcall
stos
pusha
cwtl
pop
inc
notl
and
xchg
push
sbb
lahf
popf
xchg
pop
jl
pop
fucomp
test
loope
xchg
loope
pusha
insl
mov
nop
lret
insb
in
test
clc
leave
xlat
sbb
mov
pop
movl
test
rcl
push
xor
js
add
repnz
and
mov
leave
sahf
pushl
adc
out
pusha
shl
loop
out
push
sub
ffreep
bound
fwait
xchg
fistpl
pop
in
decb
rcl
dec
idivb
ds
pop
dec
jmp
adc
ret
out
cmp
cwtl
adc
mov
iret
lret
into
mov
mov
call
gs
push
dec
in
sbb
mov
adc
xchg
test
jae
inc
sbbl
lods
repz
call
mov
dec
lock
mov
inc
mov
push
imul
pop
filds
jmp
out
hlt
jmp
jns
sub
inc
hlt
int3
call
ret
fstpl
stos
test
xchg
push
clc
cmc
test
test
mov
dec
lret
jmp
push
mov
stos
add
dec
jmp
jp
push
clc
js
push
fsubs
popa
mov
sbb
push
fwait
rcrl
inc
mov
lock
sbb
push
aaa
jp
mov
cmpsl
jmp
cmp
and
pop
adc
jg
and
out
sub
push
sbb
jge
xchg
xchg
push
push
pop
push
and
jns
pop
push
std
pop
iret
outsl
jecxz
cld
inc
push
mov
lods
outsl
push
cmp
hlt
mov
icebp
cmp
fdivrp
aam
xchg
stos
or
pusha
scas
push
ret
cmpsl
pop
test
jge
dec
mov
lret
scas
adc
pop
ret
test
lret
pop
sub
mov
rcl
dec
cmpsl
adc
mov
jb
mov
or
sbb
dec
incl
push
aam
mov
cmp
mov
cs
insb
loope
out
jp
stos
push
stos
outsb
stc
mov
cmp
mov
mov
add
lret
jns
add
shll
in
shrl
xchg
gs
shlb
andb
cmp
subb
aad
mov
and
into
pop
arpl
int
hlt
jo
pop
mov
pop
mov
pop
aam
jo
addr16
sub
out
or
jg
sub
dec
jns
fidivl
daa
cmp
arpl
gs
out
ja
adc
arpl
pop
cli
sub
or
outsl
sbb
or
xchg
cli
add
pusha
rcrb
jne
push
emms
clc
testb
mov
mov
push
mov
out
shl
mov
je
pop
repnz
push
in
out
add
and
in
daa
jle
in
jmp
sub
mov
mov
push
into
sbb
fcomps
mov
xor
inc
inc
test
fwait
push
in
adc
call
sbb
adc
cltd
xchg
enter
inc
mov
sbbb
aas
cmpsl
push
mov
daa
cmpsl
cmp
into
xor
dec
sub
fdivrl
pop
inc
aam
sub
inc
ret
mov
lods
fidivl
inc
dec
lret
stc
in
call
sbb
add
dec
xor
inc
inc
loop,pt
cmp
mov
daa
int3
dec
jl
jecxz
dec
jge
push
xor
mov
add
sbb
lahf
gs
mov
nop
or
pop
inc
ss
cmpb
leave
or
addl
lds
dec
mul
mulb
add
mov
mov
lds
int
sti
pop
andnps
push
or
loope
shl
push
sbb
sub
sar
fidivrs
ja
sub
negb
insb
jp
iret
xor
adc
or
rorb
pop
ja
lock
cmp
sbb
add
sbb
test
ljmp
mov
dec
mov
fdivrs
test
inc
mov
or
or
nop
sahf
in
dec
or
dec
cli
loopne
mov
dec
nop
notl
adc
out
push
out
lock
mov
int3
shlb
mov
mov
psrlw
int3
packsswb
dec
pop
xor
xchg
stos
shrl
rorl
push
adc
fidivrs
pop
xchg
xchg
sbb
shll
lea
and
sub
and
and
jnp
inc
mov
jmp
fs
shrl
jae
xchg
test
inc
dec
imul
scas
outsl
cli
fildll
lret
or
push
dec
shrb
cld
adc
mov
sar
stc
adc
sti
or
popa
hlt
mov
test
mov
jne
add
aad
jg
gs
insb
xor
loop
addb
push
xor
or
repz
sbb
or
mov
iret
bnd
push
fimuls
cwtl
aad
sub
mov
mov
lcall
or
or
repnz
aas
imul
fs
cmp
mov
mov
pop
push
push
pushf
insb
orb
test
lock
lret
xchg
jmp
xorl
sahf
xchg
imul
dec
add
xor
push
mov
mov
iret
mov
cmpsb
adc
inc
scas
push
mov
pushf
cld
cmc
fs
lock
mov
cmpl
les
add
popa
ret
cmpw
or
pop
sbb
call
loope
push
pop
pushl
mov
xchg
or
sahf
push
sbb
outsl
shl
cmp
xor
cmpsl
je
and
cmp
add
popa
fwait
lods
fwait
mov
sbb
adc
sbb
xchg
mov
jne
lds
rorl
imul
and
mov
xor
push
mov
clc
dec
lcall
sbb
mov
lret
push
fisubl
imul
aad
in
scas
stos
mov
lret
aas
pop
faddp
cltd
call
jmp
lock
and
sub
pop
dec
adc
add
sbb
hlt
scas
lea
cwtl
pop
mov
decb
xchg
aas
or
jp
jnp
jge
sub
dec
call
xchg
int
scas
jb
mov
add
sahf
in
iret
adc
cmp
mov
rclb
jge
pop
pop
cmp
push
pop
jle
loop
xor
cmp
sarl
aad
pop
enter
in
bound
arpl
jb
xchg
dec
sub
leave
mov
pop
and
in
aam
ss
jbe
or
divb
push
add
adc
repnz
cmc
push
or
in
or
movb
out
mov
push
loop
imul
lea
hlt
sub
in
mov
std
sub
into
jg
das
outsb
xchg
push
cmp
mov
fsubr
and
outsb
out
jbe
jae
stos
ja
or
pop
lock
jle
jecxz
cld
mov
addr16
xor
daa
mov
mov
jl
pop
loop
cmp
mov
out
shlb
mov
test
ds
mov
nop
adc
mov
and
xchg
out
push
jmp
insl
aas
jnp
jo
lret
and
sahf
fs
daa
jae
out
dec
mov
lcall
mov
xor
fst
cmp
push
scas
iret
out
adc
test
fildll
mov
cmpb
cs
pop
pop
out
roll
idivl
call
out
setae
in
addr16
test
sub
mov
lcall
or
mov
pop
out
fisttpll
mov
sbbb
mov
out
repz
bound
sbb
in
and
add
mov
cmc
ret
mov
jbe
pop
sub
mov
jbe
xchg
fstpt
mov
or
lods
fsubl
out
xchg
mov
adc
enter
ds
push
fcomip
aad
aas
jbe
imul
shlb
rcr
hlt
dec
ja
inc
outsb
inc
rcrb
push
push
xchg
ret
jnp
pushf
and
xchg
jmp
cmpsb
imul
in
sbb
daa
adcb
mov
push
inc
cmp
outsb
into
in
aam
les
jle
mov
fsubrs
and
std
push
nop/reserved
or
shrb
push
aad
pop
jge
fcmove
sahf
and
push
shll
out
dec
sub
xchg
or
sti
push
pop
movsl
fwait
dec
cld
push
lret
aaa
dec
mov
xchg
fwait
arpl
sahf
jmp
jge
ljmp
and
aaa
push
pop
xchg
jo
popa
aaa
mov
dec
out
or
pop
fstpt
inc
outsb
insb
xor
inc
dec
adc
jecxz
outsb
cltd
and
mov
ficoml
stos
xor
adc
xchg
push
cmpsl
incb
aad
mov
sbb
arpl
and
fnclex
adc
call
lods
inc
pushf
lret
xchg
inc
push
test
insw
jle
dec
mov
and
lods
les
mov
push
mov
dec
add
mov
scas
or
addr16
stos
fistpll
jnp
test
adc
pop
mov
mov
imul
xor
ljmp
cmp
mov
adcl
lods
jp
shll
out
mov
mov
test
inc
and
mov
xchg
stc
add
jne
insb
cmpsb
xchg
dec
andb
inc
popa
int3
in
test
aas
mov
iret
sbb
stc
push
push
addr16
pop
mov
pop
fwait
shl
mov
push
cli
jl
sub
jae
or
jo
xor
test
nop
dec
jl
xlat
xlat
cld
and
iret
jg
ret
aad
out
sub
or
cld
or
push
mov
les
lods
add
dec
lds
in
fidivs
jg
ret
testl
into
mov
mov
movsl
ja
or
sbb
add
pop
iret
dec
xchg
icebp
xorl
push
or
int
mov
adc
inc
pop
push
inc
mov
mov
mov
in
mov
rolb
daa
or
lcall
mov
mov
aaa
imul
sub
and
dec
and
and
cmp
mov
and
popf
loope
jp
je
pop
andb
aaa
stc
sub
mov
inc
inc
fisttpll
pushf
jns
adcl
adc
mov
mov
adc
xor
pusha
mov
in
mov
in
fmull
pop
jecxz
or
cltd
xlat
or
in
insl
pop
cmpl
adc
dec
cmp
inc
test
xchg
int3
clc
arpl
push
arpl
in
gs
xor
jmp
jge
jne
adc
vmptrst
ss
mov
je
adc
jo
lahf
cli
cmp
nop
inc
mov
jle
jge
clc
mov
rolb
mov
scas
test
push
in
fs
insb
jge
jecxz
ret
das
or
lock
cmp
xchg
insl
cmp
ret
repnz
pop
jl
mov
xchg
sub
inc
outsb
ljmp
xchg
std
test
push
mov
cmpsb
call
inc
sbb
out
jmp
pop
ljmp
xor
loop
out
pushf
fst
cld
inc
sub
jmp
jg
in
loopne
xchg
lea
sub
pop
jg
push
sbb
jg
aas
push
pop
sub
cmp
fcom
arpl
and
loop
dec
nop
insb
inc
xchg
lods
pop
stos
pop
or
int
xchg
and
inc
cmp
xchg
test
mov
jb
out
push
cltd
mull
push
inc
push
in
pop
adc
dec
mov
scas
cmpsb
mov
cmp
inc
iret
jle
popa
dec
mov
test
ds
sarl
pop
push
dec
inc
sbbl
mov
ja
lcall
ficomps
xor
dec
ja
imul
jmp
sbb
mov
js
insb
inc
pop
xor
inc
mov
push
or
mov
std
dec
inc
shlb
push
ret
sub
cltd
psubb
inc
jg
inc
xchg
decl
jecxz
imul
insl
ja
sub
mov
add
clc
std
xor
lahf
fldt
popa
aaa
out
pop
hlt
dec
cmc
xor
pop
js
push
test
call
orl
test
sti
mov
mov
pusha
jo
stc
fwait
dec
out
pop
add
int
mov
out
cwtl
and
fs
mov
int
xchg
push
clc
js
ja
push
pop
pushf
mov
inc
aaa
push
into
push
loopne
notl
dec
arpl
fsubrs
mov
sti
insb
dec
iret
push
cmpsl
fildl
das
sub
push
pop
shrl
repz
rorb
inc
cwtl
dec
in
int3
cmpsb
push
jmp
fisttpl
rcrl
clc
loopne
pop
notb
inc
pop
pop
popa
test
insb
sbb
fisttpll
mov
sub
ja
shr
push
jmp
or
xchg
or
and
ficoms
push
cmp
add
rorl
cmp
inc
mov
push
ficompl
mov
icebp
cmpb
dec
mov
fiadds
mov
inc
xor
xchg
jbe
out
dec
filds
call
push
sub
jge
or
dec
int
push
cld
adc
mov
xor
mov
cli
and
ret
daa
sahf
jp
sub
adc
mov
sub
lods
mov
cwtl
jmp
pusha
cmp
and
lods
out
mov
dec
mov
stos
lcall
fs
fwait
pop
imul
dec
test
int
sbb
repz
or
in
sub
fistl
outsb
lret
outsb
addr16
cmp
outsb
or
fiadds
nop
mov
fildl
inc
mov
xorb
pop
outsb
outsl
add
xchg
mov
repz
push
dec
imul
ds
dec
scas
pop
addr16
popa
adc
inc
pop
aas
popa
sbb
pusha
andb
mov
or
jmp
mov
add
shlb
es
dec
fstl
push
scas
imul
mov
pop
rclb
adcl
fsubs
mov
push
pop
icebp
out
mov
sub
pop
jns
stos
or
cs
mov
jbe
lret
sbb
jl
fucomi
pusha
xchg
pop
xchg
push
pop
push
push
inc
mov
hlt
jl
test
or
sbbb
mov
cmpsb
fisttpll
jmp
mov
mov
nop
xchg
ret
int3
push
and
pop
mov
mov
pop
xor
mov
stos
inc
call
loop
cmp
push
and
mov
int
pop
fistpll
out
mov
mov
and
push
popf
imul
and
inc
int
fisubl
cmpsl
add
adc
fists
jae
jne
int
push
movsb
fdivrs
repz
and
mov
stos
icebp
in
stc
mov
hlt
popf
inc
or
cmpsb
adc
push
push
mov
dec
mov
dec
or
push
lret
es
sarb
ds
cltd
outsl
ret
xor
pushf
dec
sub
push
dec
lods
addr16
cld
add
xchg
sub
mov
cmp
xchg
sbb
mov
lds
xchg
and
movsb
test
cmp
pop
lret
outsb
inc
jae
scas
imul
mov
inc
iret
add
mov
jb
cmpsl
lods
scas
inc
adc
test
loop
cmp
clc
popf
jae
into
xchg
add
xor
and
ffree
gs
jle
cli
out
push
ret
sub
sbb
and
xchg
sbb
test
cltd
xor
das
push
pop
push
xchg
cwtl
repnz
in
jno
add
mov
and
sbb
dec
inc
popa
into
fisttps
ljmp
cwtl
mov
lret
mov
mov
xor
sti
fsubrs
loope
sbb
sbb
add
or
jg
fdivl
adc
push
xor
test
cmpsb
and
and
pop
popa
fwait
in
xor
mov
into
popa
inc
or
mov
sahf
or
jnp
inc
fs
pop
push
push
ret
dec
sbb
push
xchg
imul
xchg
mov
xor
mov
push
adc
add
cmp
and
sbb
pop
push
jns
xor
cmpsl
dec
lahf
push
and
push
aam
jbe
dec
and
fisubrs
lret
inc
cs
push
and
mov
cmp
int
icebp
or
shl
dec
mov
cltd
lods
out
and
clc
jno
push
arpl
mov
adc
in
mov
scas
add
dec
daa
cmc
mov
inc
push
inc
ja
mov
xchg
js
je
les
inc
xchg
add
xor
gs
dec
push
scas
fwait
mov
popf
test
imul
push
push
rol
cmpsl
out
hlt
mov
jo
inc
cmp
jmp
cld
adc
mov
adc
inc
fcom
push
daa
push
mov
enter
pop
clc
ret
jae
ljmp
lea
mov
jmp
mov
popf
mov
flds
sbb
ljmp
xor
mov
xchg
outsb
cmp
ds
xor
jb
jecxz
xorl
mov
nop
js
inc
imul
pop
xor
lahf
insb
lcall
sbb
add
dec
icebp
inc
mov
cmpsl
lods
test
std
outsl
sub
rcll
or
movsl
xlat
movsl
ja
mul
xchg
mov
aad
jno
dec
xchg
pop
popa
aad
and
inc
push
xchg
dec
xor
out
shl
inc
mov
xor
out
cmp
dec
and
lcall
scas
and
inc
loop
xchg
addl
ss
adc
addr16
pop
xchg
or
pop
or
mov
xor
mov
mov
call
dec
out
aas
xchg
pop
js
cmp
stos
mov
leave
out
out
cmp
cmp
mov
dec
ficoms
out
push
nop
jb
and
nop
stos
lahf
jp
ret
js
pop
fbld
push
xor
in
mov
bound
mov
nop
fldcw
fcompl
adc
pushf
cmpsl
pop
mov
rclb
xorl
mov
cmpsl
pop
jl
sti
push
cld
sbb
inc
out
faddl
sbbl
stos
js
mov
cmp
leave
in
sarb
adc
inc
push
fidivrl
sub
int3
out
xor
iret
add
inc
jns
es
jb
lahf
jno
ret
dec
sbb
pop
out
mov
aad
jb
pop
andl
sbb
insb
sub
push
jb
jl
lahf
mov
mov
loope
enter
orb
adc
cmp
cmp
and
ja
cs
fs
scas
xchg
adc
cmpsb
shrb
bound
lcall
jg
cmpsl
mov
add
xor
sub
push
jl
pop
push
push
sahf
int
push
lcall
jno
lret
repnz
inc
add
aaa
pusha
sbbl
mov
movsb
jmp
and
xrelease
imul
mov
adc
mov
mov
add
mov
out
cmc
out
scas
fcmovnb
pop
sbb
bound
pop
test
mov
push
and
hlt
repz
sti
loop
ja
shr
jg
or
jge
cs
sub
out
popf
insl
mov
leave
ret
ss
gs
and
les
fiadds
fidivrl
and
and
inc
call
dec
and
js
push
jl
sub
jecxz
loopne
cmp
mov
bound
shll
mov
movsl
sti
jbe
lea
push
jecxz
jnp
stc
pop
insb
mov
mov
add
nop
add
xchg
inc
or
sub
lahf
push
inc
mov
aam
push
lret
add
xchg
and
inc
push
out
popf
mov
mov
xor
lahf
jnp
mov
adc
xchg
repz
aaa
repz
cmp
xchg
icebp
fimuls
ljmp
scas
or
mov
cltd
subl
mov
push
sbb
xor
xor
popa
cli
arpl
fsubrs
in
or
inc
int3
notb
pop
fdivr
aaa
inc
mov
movsb
inc
icebp
jg
sbb
mov
cli
dec
repnz
test
cmpsl
jmp
sub
aam
out
rcrl
mov
out
jl
xor
int
sbb
das
lret
loop
rcrl
outsb
pop
push
out
int
sti
mov
shr
daa
mov
cmp
and
negl
or
jne
add
sbb
mov
inc
mov
push
xchg
test
push
into
pop
out
jecxz
jo
ret
out
push
cmp
jno
sub
push
enter
mov
lods
cmp
mov
mov
ret
inc
jno
dec
lret
cli
jp
enter
add
es
aad
test
jle
mov
emms
pop
rcrb
jmp
or
pop
sbb
pop
push
adc
mov
push
cli
mov
mov
jbe
cld
ja
or
sbb
or
push
jo
aam
test
stos
pop
jmp
mov
in
rcr
mov
imul
popf
icebp
int
inc
aad
outsb
insl
leave
xor
xor
inc
out
dec
jmp
add
leave
rcr
inc
andb
mov
jnp
enter
cld
mov
push
xchg
xor
arpl
and
jo
pop
xchg
bound
repnz
in
add
push
out
int3
mov
inc
add
leave
cmpsb
imul
mov
test
pop
vcvtpd2ps
icebp
lock
mov
stc
pop
cmp
sbbb
xchg
in
xchg
push
lods
mov
test
call
leave
pushf
pop
xlat
xchg
and
pusha
jle
mov
and
movsl
cs
stos
mov
nop
push
lahf
addr16
xchg
andb
lcall
mov
ret
lret
adc
fists
rcll
mov
jl
pop
sahf
mov
push
lea
sub
insb
mov
adc
xor
cmpsb
into
dec
or
lods
cmp
push
cmp
arpl
xchg
add
inc
jb
jb
jae
ss
jbe
lcall
movsb
inc
dec
fnsave
fiaddl
shl
mov
push
mov
cmp
rep
or
sub
bound
jecxz
or
ds
inc
push
and
jg
stos
lds
adc
rorb
mov
stos
and
jp
cltd
in
sbb
flds
fidivrl
in
mov
inc
imul
and
sbb
je
into
test
jnp
mov
fnsave
iret
mov
inc
lahf
xchg
iret
repz
dec
mov
call
dec
sti
inc
mov
ffree
or
aaa
ficoms
ret
jno
enter
cmpsl
xor
insl
dec
in
repz
mov
push
orb
dec
jae
call
mov
inc
sbb
roll
aad
jo
xchg
or
idivl
dec
fstpt
shll
dec
lds
jl
cmp
ret
inc
jns
orl
adc
gs
xor
mov
fld
ret
movsl
jne
xor
shl
sub
fadds
sub
pushw
sbb
xchg
mov
outsl
and
nop
aaa
adc
lds
aas
lahf
xor
ffreep
lret
or
imul
and
es
push
xchg
adc
add
cmp
xchg
adc
lods
push
in
pop
movsb
je
cmp
and
jp
scas
fwait
in
sarl
add
movsl
pop
jge
cltd
cmc
imul
ds
inc
out
mov
aad
outsb
repz
inc
std
sub
addr16
in
sub
iret
sarb
cmpsb
or
es
cmp
js
rorb
xlat
mov
enter
mov
ds
xor
fldenv
lcall
jg
mov
test
stos
and
lods
cmpsl
shlb
aas
call
jo
in
or
xchg
sahf
mov
daa
divb
push
out
pand
fstpl
outsb
ss
and
inc
rcrb
clc
in
cmp
out
mov
cmpl
xor
xor
jecxz
lea
arpl
lret
rcr
outsb
mov
out
imul
push
xchg
aam
je
mov
jae
sbb
leave
sbb
cmp
fsts
cwtl
cmp
mov
ficoms
cwtl
out
push
ljmp
jmp
scas
cli
jo
loopne
add
popa
shll
outsl
sub
sub
outsb
sub
mov
scas
xorb
dec
out
sahf
jne
imul
cmpsb
push
dec
jns
inc
js
jg
les
dec
rol
loopne
ror
dec
mov
push
inc
test
outsb
jecxz
je
fnsave
addr16
pop
xchg
clc
push
je
sub
inc
adc
fsubl
int
popf
outsl
neg
jnp
clc
lods
rcrb
inc
mov
insl
pushf
jl
ds
movsb
pop
adc
imul
iret
and
jbe
cmp
in
mov
movsl
dec
test
adc
aad
add
mov
cmp
push
jge
cmp
lret
inc
je
dec
adc
ja
aaa
sub
fdivl
sub
dec
lret
push
jno
imul
nop
pop
insb
js
mov
jns
shrb
test
pop
int
pusha
pusha
aas
aaa
inc
cwtl
fiadds
outsb
repnz
popa
les
mov
psrlw
push
push
cmp
mov
pop
cwtl
mov
popf
lea
rorb
ljmp
inc
andl
scas
inc
jg
xchg
jle
inc
mov
xchg
aas
icebp
sbb
fcomps
and
jne
out
xlat
xorl
pop
sbb
test
in
dec
jb
in
sbb
add
and
add
in
das
iret
stos
add
insb
push
mov
out
frstor
jo
leave
gs
or
mov
addr16
mov
pop
and
or
lret
inc
in
sbb
mov
inc
loope
sahf
dec
mov
mov
mov
sub
test
inc
xchg
dec
xor
mov
mov
int3
loop
push
insl
or
and
imul
inc
lret
and
mov
push
jle
gs
push
mov
je
pop
mov
ss
and
add
add
repnz
inc
ret
inc
jmp
fsubrs
mov
xchg
push
dec
orl
fmul
mov
inc
sti
push
cld
out
adcl
cmpl
jb
fldl
outsb
adc
xor
pop
push
decb
dec
ret
addl
out
cwtl
adc
ret
out
and
movsl
dec
lret
lods
inc
test
std
jo
push
popf
dec
mov
pop
mov
out
or
xchg
push
sub
int3
or
inc
cmp
pop
imul
xchg
push
jns
jge
enterw
daa
mov
mov
scas
inc
stos
rorl
cmp
xchg
cmp
jl
jge
into
xchg
push
fdivrp
xchg
orb
shlb
add
dec
adc
sahf
imul
dec
daa
inc
cltd
push
push
test
mov
mov
push
mov
mov
cmpl
pop
dec
inc
cld
addr16
js
cmp
loope
mov
jns
inc
push
cs
enter
fldcw
push
mov
test
mov
sub
sbb
addb
xor
mov
jge
dec
sub
pop
adc
pop
add
mov
inc
mov
in
imul
mov
push
sti
sbbl
fs
mov
mov
pop
jae
imul
mov
adc
pop
pop
in
push
xorb
rcrl
xchg
out
dec
movsl
adc
add
mov
loope
hlt
fsubp
sbb
cmp
xchg
popf
scas
xchg
aas
ret
cmp
inc
mov
std
and
scas
and
cld
mov
push
outsb
movsl
pusha
mov
sub
ss
es
push
add
repnz
lahf
test
clc
add
mov
add
cltd
movsb
outsl
mov
inc
add
push
popf
xchg
jp
out
scas
push
inc
pop
mov
add
jl
ja
push
jp
bound
ljmp
or
or
push
neg
loop
mov
ja
mov
add
jns
repnz
xchg
push
arpl
inc
nop
test
or
insb
inc
jge
fidivl
add
adcb
data16
daa
cmpsl
inc
imul
in
jmp
scas
test
ss
nop
inc
cwtl
daa
cmp
mov
mov
sbb
add
icebp
popa
rcll
xor
imul
lods
in
cltd
and
aam
popa
pop
push
pop
adc
and
int3
push
jbe
push
pop
shll
sbb
sbb
ret
fstl
inc
popa
inc
push
xor
cli
pop
or
mov
inc
sub
mov
push
xor
cmpb
cmc
jo
mov
pop
xor
int
nop
dec
mov
iret
dec
jl
push
or
pushf
neg
push
push
push
xchg
imul
imul
lahf
jp
pop
xchg
or
fs
pop
fcompl
loop
mov
inc
sub
push
push
arpl
adc
cmpl
mov
sbb
or
popf
adc
dec
sbb
pop
jle
enter
inc
mov
inc
or
fucom
js
es
jg
test
push
xor
lock
pop
ljmp
cmp
dec
testb
test
mov
mov
nop
dec
imull
xchg
test
mov
inc
sbb
lock
dec
mov
cmpsb
std
icebp
outsb
lea
xchg
cld
outsb
push
mov
cmpl
data16
out
inc
cmp
lds
cmc
aad
inc
out
push
popa
adc
mov
and
loope
and
push
mov
or
mov
out
mov
mov
leave
push
pop
jle
xchg
push
cmp
mov
dec
fisubrl
repz
inc
dec
dec
pop
std
add
stos
ss
in
inc
jp
sbb
add
leave
mov
adc
in
adc
loop
mov
rcr
ljmp
lods
rol
xchg
xlat
or
mov
lds
inc
scas
mov
dec
xchg
mov
pop
stos
xchg
ljmp
aad
sub
mov
mov
mov
push
repz
loopne
lret
pusha
and
sahf
enter
xchg
daa
cmp
cmp
sbb
adcl
add
clc
dec
sbb
dec
ret
je
mov
data16
das
outsb
int
arpl
insl
xchg
das
call
dec
or
or
sbb
repz
fisubrs
cmp
in
repnz
jo
jge
scas
ds
or
cmp
sbb
fiaddl
xchg
cmp
lods
add
add
mov
xchg
push
pop
xor
add
scas
add
mov
inc
xor
ss
dec
int3
pop
arpl
lock
mov
mov
sbbl
pop
xlat
lock
jbe
nop
fimull
pop
mov
insb
mov
into
cwtl
jns
mov
mov
mov
fsubl
arpl
outsb
mov
leave
xor
lcall
mov
imul
dec
pop
jge
xorl
arpl
jmp
adc
pop
into
adc
lahf
push
mov
decb
pop
fiadds
jge
cmp
aaa
jle
and
xor
or
ss
jno
in
pop
mov
stc
incl
std
out
mov
push
sub
arpl
dec
call
pop
inc
cs
sub
stos
and
fwait
cmp
idiv
sub
fadd
stos
and
cmp
jge
sub
in
mov
pop
enter
les
mov
xor
ret
dec
vphaddubd
mov
rorl
int
cmp
ljmp
dec
in
imul
dec
inc
mov
call
cld
sub
sub
sub
adc
ficoms
divb
pushl
or
je
fst
add
nop
lods
jecxz
cmp
dec
jmp
xor
sub
jg
pushw
outsl
sbb
pop
loopew
pop
jge
ficoml
popa
cmp
dec
std
addr16
inc
inc
or
cltd
and
icebp
mov
mov
inc
pop
fcompl
out
adc
lret
sbb
into
mov
adc
mov
shlb
mov
and
lret
mov
loope
xor
cli
pop
adc
pop
xor
ljmp
or
or
add
and
mov
js
ret
loope
shll
lret
mov
mov
or
outsl
mov
shrb
ljmp
mov
mov
bts
or
add
lock
sbb
std
ret
insl
add
ret
das
and
iret
pop
jp
cli
xor
outsl
or
mov
mov
rcll
sub
lret
mov
pop
repz
jp
stos
add
push
adc
xor
adc
loop
dec
xchg
push
pop
clc
or
inc
aaa
push
and
in
les
cmp
ja
sub
test
pop
inc
dec
repz
ret
and
fsubr
ss
out
aas
scas
mov
dec
add
and
jp
sarl
aam
mov
in
ljmp
fidivs
fcompl
mov
mov
lods
dec
jnp
or
cmp
cmpsb
das
inc
loopne
xchg
mov
fadds
mov
cmp
push
dec
and
mov
jg
mov
sbb
mov
xchg
or
inc
enter
imul
mov
js
nop
repnz
pop
mov
and
dec
nop
pop
into
inc
adcb
lods
stc
cmp
fmul
and
xchg
dec
mov
popa
bts
jns
aam
hlt
fdiv
in
or
sub
sub
rol
int3
ret
pop
mov
sbb
rcl
cmp
xor
mov
sbb
dec
push
in
aad
sbb
mov
sarl
add
ret
mov
or
cli
movl
repz
loop
adc
jl
test
dec
lock
jae,pn
jnp
sub
jmp
mov
loopew
pop
out
inc
lods
dec
stc
fisttpll
lods
mov
jp
xchg
hlt
sbbb
or
dec
cltd
popa
out
pop
xor
adc
cmpb
jbe
adc
or
jp
js
pusha
fs
sbb
push
data16
or
lahf
jnp
jp
cmp
dec
popf
mov
push
and
insb
les
loopne
dec
std
push
and
cmpsl
les
push
clc
stos
push
leave
jne
sub
loope
fs
mov
bswap
aas
test
sub
sbb
cmpsb
cmp
cmpb
mov
dec
sti
pushf
jns
cmp
fs
lods
and
jge
add
pop
inc
call
movsl
jg
scas
rol
cs
loopne
jo
js
int3
imul
icebp
cli
mov
repnz
cmpl
roll
pop
or
mov
lret
inc
cmp
mov
xor
mov
imul
sub
mov
inc
das
repnz
in
int
push
mov
ss
inc
outsl
jnp
sbb
xor
mov
loop
jnp
sbb
push
dec
outsl
push
mov
or
shlb
idivl
es
lods
imulb
shlb
xor
xchg
clc
pop
out
jmp
rorl
inc
mov
cld
fildll
repz
xor
aas
pusha
in
outsb
sub
cmp
lock
ret
cmpsl
cwtl
lret
ds
pop
pop
cwtl
mov
mov
nop
sbb
mov
xchg
orb
xor
stos
dec
pusha
pop
int3
fsubs
pop
jecxz
cmp
fisubl
andb
sbb
add
xchg
repnz
xchg
cwtl
stos
or
in
enter
cmp
jmp
int
out
out
or
std
loop
mov
push
cmp
xchg
add
std
xchg
ret
ja
inc
cmpsl
cltd
fldcw
sbb
sub
test
aaa
ficoms
movsb
pop
xor
xor
out
xor
or
cmpsb
fdivrp
sbb
mov
add
sbb
test
repnz
xor
mov
push
push
push
jmp
mov
cmpsl
aam
xorl
cmp
pop
out
int
loopne
sbb
enter
mov
sub
int
rclb
pop
cld
outsl
aas
sub
fcoml
xor
int3
cmp
scas
jmp
jp
movb
and
sub
and
push
mov
stc
lods
sbb
ljmp
daa
ffreep
jg
cmp
jge
cmp
repz
sub
push
and
mov
inc
adc
in
in
sbb
test
cs
sbb
fcmovb
repnz
and
pop
inc
sub
icebp
jge
push
cmp
sbb
lods
loop
stc
pop
mov
daa
or
xchg
dec
pushf
or
sbb
jge
rol
xchg
enter
sub
mull
cs
adc
mov
es
mov
stc
push
icebp
cmp
movsl
fwait
inc
imul
adc
ret
mov
xor
aas
xchg
mov
fisttpll
mov
fwait
push
mov
inc
pop
mov
cld
sbb
cwtl
les
repz
sub
shlb
mov
ja
pop
int
fs
lds
xor
lds
mov
inc
push
or
ret
lcall
fcmovnb
dec
and
push
push
shr
rcrl
sbb
insl
push
push
dec
jns
add
cmpsl
dec
pop
inc
lock
gs
push
or
add
icebp
or
pop
data16
jg
repnz
out
and
add
rclb
fmull
test
cld
ficoms
mov
pop
test
sbb
and
fwait
jo
inc
in
ret
nop
rcl
xchg
xchg
enter
xor
jmp
mov
int3
iret
jecxz
add
pusha
pop
pop
aaa
push
cwtl
cmp
jb
roll
dec
rcll
xor
mov
out
std
stos
loope
fisttps
adc
cmp
xor
data16
sbb
mov
or
jp
cmp
movsl
notl
xor
or
mov
jo,pt
cmp
sub
in
sbb
mov
mov
jge
mov
add
sbb
cmc
sarl
inc
ja
pusha
sub
jl
out
push
push
inc
and
cmp
in
pop
dec
sbb
push
jle
loopne
outsb
push
test
inc
xlat
cmp
inc
sbb
js
xchg
push
add
fbstp
jno
dec
ss
push
ret
rolb
xchg
hlt
daa
or
movl
adc
or
sub
int
lret
ljmp
outsb
mov
js
push
dec
dec
jge
lock
not
lahf
popa
in
sbb
sbb
lret
pushf
push
xor
or
ds
lret
ret
test
scas
cmp
xchg
push
sbb
push
inc
dec
dec
mov
roll
xchg
ret
addr16
dec
scas
mov
push
mov
dec
pop
pop
das
subl
jmp
jb
mov
xor
rorl
inc
inc
mov
repz
out
adc
push
hlt
nop
xlat
mov
sbb
mov
arpl
loop
cmp
repz
cmp
in
or
cltd
ret
dec
sbb
jecxz
rorb
aad
inc
add
shll
mov
ret
stos
push
ret
jb
pop
pop
push
sub
test
push
adc
dec
andl
fcoms
fcoms
lret
xor
jmp
enter
add
inc
dec
xlat
dec
adc
rcrb
mov
cmp
cltd
jle
pop
shrb
cltd
jle
lds
mov
xchg
jge
mov
dec
or
insb
pushf
cmpsb
fcomps
push
push
sub
enter
outsb
fwait
lret
adc
cmp
and
arpl
cmp
jp
fcomps
lea
mov
dec
scas
pusha
jns
cmp
std
stos
fisubrs
xlat
shll
sbb
push
sub
fstps
in
pushf
ljmp
inc
cmc
jle
mov
sub
cmp
add
cmp
add
mov
mov
xchg
cld
pop
xor
xor
sbb
es
in
mov
out
inc
jne
inc
inc
mov
jle
orb
xor
dec
aaa
jne
das
dec
lods
cmp
sbb
pop
fs
push
adc
lret
jmp
stc
mov
nop
and
mov
test
cmpsl
dec
lret
fstpl
mov
pop
frstor
fdivl
rcrl
rsqrtps
jle
adc
xchg
cmp
sub
cwtl
icebp
mov
xchg
fldcw
dec
fstl
bound
pushf
fsubrl
repz
sbb
mov
cmp
cmp
sub
push
push
jg
inc
sbb
int3
std
sub
shrb
push
jb
js
jne
dec
out
mov
lret
fwait
push
gs
bound
rcrb
gs
pop
and
dec
stc
cli
add
mov
mov
aas
push
insb
gs
andb
enter
stos
mov
jns
sub
push
movsl
push
mov
jae
fwait
loope
lcall
mov
mov
fiaddl
lods
cmc
cmp
ljmp
push
scas
cmp
jge
cmpsl
cltd
pop
pop
loope
outsb
lods
rcrb
mov
out
add
mov
int
dec
xchg
aaa
jb
lret
outsb
mov
out
fdivl
sbb
aaa
jns
rorl
fsubs
push
mov
jb
or
jne
pop
lea
mov
jbe
adcl
sbb
push
cltd
out
mov
mov
std
push
bound
xchg
dec
lahf
mov
lea
lods
in
and
and
mov
pop
cmc
sbb
outsb
mov
push
fmul
jbe
pop
mov
int
fiaddl
xor
clc
mov
lret
sub
out
in
xor
or
push
incl
sarl
in
pop
jmp
sahf
mov
xchg
iret
addb
shll
fisubl
mov
pop
iret
out
scas
test
out
lock
mov
outsl
std
imul
xchg
mov
push
insl
scas
shrl
fcoms
inc
out
sub
jmp
pop
sti
push
aad
jnp
sbb
mov
aam
inc
data16
inc
push
gs
dec
in
mov
mov
sbb
scas
gs
dec
ret
mov
cmpsb
or
int
or
push
lret
dec
adc
jge
pusha
jmp
sub
pop
addr16
dec
hlt
mov
fmull
push
or
push
mov
dec
scas
ficompl
xor
and
mov
shrb
ficoms
push
hlt
test
mov
and
arpl
dec
scas
add
pop
add
cli
xchg
mov
jbe
pop
insl
addl
mov
inc
out
fidivrs
mov
mov
push
or
mov
testb
pop
mov
rcrb
scas
aam
mov
sub
dec
cmp
mov
sbb
xor
aas
mov
xor
xor
es
mov
jns
iret
mov
sub
xchg
test
movsb
icebp
ret
cmp
out
int3
add
push
and
push
enter
xchg
or
or
cwtl
shlb
lret
mov
cli
scas
in
pop
and
xchg
add
iret
mov
pushl
mov
mov
fisubrs
cltd
mov
mov
mov
mov
or
adc
neg
int
nop
out
push
lahf
xchg
shlb
fldt
fs
ss
call
mov
std
xchg
or
jbe
test
lea
andb
push
mov
fs
aam
mov
cmpsl
cmp
js
movsl
adc
in
aas
push
shrl
int
inc
pop
arpl
mov
xchg
xchg
adc
lock
call
sti
loope
jle
mov
jmp
sub
cmp
adc
orb
nop
add
imul
cwtl
outsl
loopne
insl
ret
xchg
adc
test
lret
pop
lds
clc
scas
hlt
pop
jbe
pusha
cmp
lret
or
test
imul
pop
cmp
cmp
or
out
or
lock
test
mov
lcall
push
stos
push
xor
lahf
repz
push
push
xchg
aad
sub
repz
inc
call
sbb
fs
movsl
fcompl
iret
jnp
mov
cwtl
jg
push
lret
add
clc
negl
scas
inc
xlat
lods
cld
test
dec
jmp
cmpsb
test
fcoms
adc
push
xor
or
out
jmp
mov
push
sub
fptan
rcrb
sub
por
xor
test
cmpsb
jle
sub
negb
stos
dec
add
sbb
jno
xlat
daa
orb
jg
pop
or
sarb
mov
push
cmp
push
pusha
cmpsb
aad
dec
cmp
lret
mov
imul
xlat
movsb
loop
and
aam
dec
push
xchg
lods
sbb
xchg
lahf
push
out
call
fcmove
out
cli
imul
addb
cld
rorb
fldcw
sub
cmpsl
inc
sbb
adc
mov
shlb
cmp
xor
push
lock
enter
sub
movsb
jle
sub
adc
pushf
mov
repnz
cmc
insb
add
loope
push
pop
xchg
rclb
mov
and
aad
mov
int
pushl
add
push
cmp
jp
jbe
or
push
sahf
cmp
test
sbbb
call
adc
mov
loope
ficoms
scas
minps
arpl
sbb
insb
adc
xchg
or
fsubp
mov
shlb
fwait
jmp
repnz
sbb
sbb
ds
sti
pop
outsl
loope
xor
sub
lds
and
fwait
popf
test
rcl
add
jl
inc
inc
fnstenv
fisttps
push
xchg
cmp
mov
les
pop
pop
xchg
jl
bound
in
hlt
ret
xchg
cli
xor
dec
mov
adc
insl
push
sub
movsb
shll
mov
adc
pop
btr
or
xor
dec
jecxz
xchg
ljmp
cltd
adc
jp
or
cmpsl
push
mov
pop
push
mov
adc
inc
xchg
push
fsubr
mov
inc
das
imul
scas
adc
pcmpeqb
in
or
loop
dec
or
adc
mov
out
imul
push
dec
shlb
cmp
mov
pop
sub
fmuls
xchg
rcrl
in
adc
ret
add
jle
movsl
sbb
inc
or
jecxz
adc
into
cltd
mov
ss
mov
mov
add
mov
jg
jo
fidivrs
loopne
loopne
pop
jne
dec
out
stc
imul
sbb
inc
arpl
sbb
xor
in
sbb
fdivr
sub
nop
loop
cld
repz
adc
sub
adc
xlat
fsubs
ljmp
pusha
jge
dec
fdivr
cmp
or
and
push
pop
gs
or
repnz
daa
and
ja
cld
jns
pop
mov
sbb
lret
adc
call
sub
in
mov
decl
outsl
inc
mov
push
inc
data16
dec
addr16
inc
or
jo
mov
mov
pop
cltd
daa
jo
lods
imul
lret
imul
roll
push
je
lods
inc
nop
or
mov
or
mov
mov
push
inc
ret
out
cmp
pop
ja
aaa
aas
mov
hlt
adc
push
pop
icebp
jne
pop
add
jne
mov
inc
dec
imul
outsl
jne
test
cmp
push
mov
mov
dec
aaa
out
orb
lods
cs
jno
or
cmp
sub
add
mov
xchg
movsl
mov
jns
inc
fistps
outsb
push
pop
cli
lret
mov
je
test
cmp
mov
in
cmc
pop
test
jge
lods
mov
jbe
dec
push
mov
shrl
cltd
loope
push
jb
cs
pop
cmp
xchg
mov
mov
sbb
sub
cltd
fildl
scas
movsb
mov
rcr
inc
insb
pop
insl
scas
imul
sub
in
daa
dec
imul
jnp
ja
icebp
xor
push
shlb
cs
stos
sti
cs
or
ror
in
pushf
addb
lock
popa
or
push
in
imul
scas
push
daa
aam
sbb
std
jl
mov
cmpsb
sub
stos
enter
push
shrl
sub
or
jnp
nop
push
leave
lods
icebp
or
lods
loop
movsbl
add
sti
movsl
inc
scas
pop
repnz
mov
mov
test
adc
in
icebp
add
adc
out
jnp
and
sub
mov
add
xchg
push
cmp
fdivr
mov
jle
call
lods
lods
and
jno
adc
sti
mov
cmp
adc
cmp
sbb
shlb
sub
shrb
sbb
dec
fiaddl
sub
lahf
loope
ret
xchg
dec
out
or
outsl
push
sub
out
sbb
js
adc
xor
sub
pop
out
or
inc
imul
loopne
pop
imul
std
fisubl
sbb
push
cmpsl
sub
push
mov
shrl
cmp
ffree
fldenv
pop
adc
xchg
in
sbb
inc
mov
addr16
mov
sbb
les
add
ljmp
or
xchg
out
inc
ret
xchg
cli
push
sarb
rcll
in
pop
ffreep
pop
mov
in
push
xorb
sbb
dec
mov
sub
test
loopne
push
adc
or
loop
fwait
pop
cmp
jns
inc
bound
push
jo
cld
imul
sub
mov
jg
or
push
jae
adc
test
add
push
mov
pop
lock
test
into
shl
je
lret
sbb
push
push
lods
xor
sbb
mov
imul
test
or
shll
cmp
iret
or
fwait
mov
stos
rorb
mov
pop
addb
jge
jne
mov
inc
mov
add
popf
incb
mov
sub
add
sub
gs
lcall
out
sub
mov
jp
imul
mull
push
inc
jnp
adc
repz
loope
jns
gs
les
test
hlt
lds
fdivr
dec
fwait
lds
and
sarb
push
lea
icebp
sub
jecxz
cmp
mov
sbb
popa
fbld
aas
inc
jmp
cmp
arpl
cwtl
fcoms
sub
cmpsb
push
cmpsb
cs
hlt
rorb
or
bnd
out
pop
jecxz
dec
lds
mov
call
gs
in
repz
stos
fisubrl
test
dec
push
jb
lods
test
pop
mov
jbe
inc
sub
test
inc
idivb
movsl
aam
in
and
mov
sbb
out
cltd
inc
sub
test
cmp
mov
xchg
mov
xchg
or
shlb
push
sub
cmp
out
jb
dec
and
int
mov
pop
outsb
lods
mov
div
cmc
or
mov
xorl
int3
xor
xchg
and
jge
add
and
test
das
sbb
mov
testl
jg
xchg
dec
loope
pop
mov
dec
jbe
test
into
iret
les
test
cmp
mov
and
sbb
mov
cmp
pop
cltd
cmp
or
daa
psubusb
or
pop
add
fistpl
and
lods
adc
insb
pop
mov
push
add
cmp
pop
ret
mov
mov
enter
dec
sahf
rclb
out
test
mov
das
lock
ja
xchg
mov
jmp
add
jae
in
xchg
pop
sub
mov
test
push
das
lahf
xchg
sbb
jnp
cmp
adc
cmpsb
xor
das
rcrl
pop
insl
xor
cmp
mov
test
in
push
pop
sbb
lods
sub
imul
sub
int
cmp
adc
mov
mov
cmp
lods
inc
push
sbb
adc
xor
out
sti
les
adc
push
shrl
je
data16
xor
dec
dec
sub
and
pusha
add
fidivs
adc
adc
add
lea
mov
xor
fsubr
out
int3
pop
movsb
sub
jp
jl
dec
ret
das
lcall
movsb
mov
jns
xchg
dec
cmpsb
ja
jbe
cli
inc
dec
adc
movl
loop
arpl
aad
loopne
and
ljmp
mov
pop
push
test
sbb
mov
leave
mov
std
dec
jb
xor
cmp
int3
outsb
pushf
mov
daa
rcl
out
movsl
enter
adc
cmp
or
sbbb
pop
mov
ljmp
sar
lret
sub
outsl
pop
dec
mov
fdivrl
add
push
fiadds
pop
lahf
cmp
bound
mov
ljmp
mov
and
adc
pop
jnp
mov
cmp
mov
xor
notb
addb
fwait
push
sub
nop
inc
sbb
cmp
inc
sub
les
xchg
lds
je
push
fsubrl
adc
add
insb
ds
mov
push
notl
pop
sbb
aam
movsl
cmp
mov
out
jp
xlat
adc
and
aas
inc
jo
push
call
dec
test
cmpsl
add
jp
popf
lea
adc
sbb
adc
push
pop
lods
xor
stos
cmc
mov
add
mov
xor
inc
add
mov
es
xlat
loop
jno
lcall
gs
jp
jb
stc
lret
mov
inc
repnz
jae
cli
pop
int
xlat
dec
mov
jne
push
xor
jge
pop
sbb
push
push
inc
imul
mov
cmp
inc
pop
fwait
mov
mov
sbb
out
jb
enter
nop
shll
adc
les
andb
js
add
inc
orb
cmpsb
sub
pop
ficoms
dec
sbb
jge
test
pop
mov
cmp
pop
mov
add
fwait
insl
inc
out
stos
xchg
mov
lds
lea
out
leave
cmc
outsb
cmp
cmp
in
sbb
in
sub
lret
pop
push
cli
push
cmp
leave
outsb
pushf
mov
pop
ss
mov
mov
pusha
adc
cli
adc
dec
repnz
jmp
jp
dec
inc
sub
aad
aas
pop
sbb
stc
fisubl
pop
or
and
cmp
insb
inc
fcmove
scas
pop
int
scas
or
mov
pop
stos
add
jp
or
inc
mov
hlt
jle
mov
inc
leave
fimuls
inc
loopne
les
push
clc
mov
jno
pop
sahf
divl
das
push
aad
mulb
xchg
test
test
int
outsb
int3
lods
out
or
mov
mov
jb
cmc
loop
pop
cmpsl
or
imul
icebp
push
push
icebp
pop
shll
push
fdivrl
outsb
mov
cwtl
daa
add
movsl
xchg
ljmp
and
xchg
loope
imul
cltd
or
lods
mov
mov
insl
popa
add
push
scas
arpl
jge
dec
jmp
push
cs
sbb
push
jp
decl
loope
sub
pop
dec
cmp
jbe
xor
mov
orl
lds
push
out
inc
ja
xor
fcoms
lods
xchg
push
cmp
insb
mulb
insb
sbb
dec
lret
pop
or
gs
sar
mov
mov
aas
pop
xchg
lea
in
iret
pop
cmp
jnp
aad
push
adc
addr16
add
lret
cltd
xor
mov
mov
jnp
subl
mov
fidivl
jge
fwait
mov
inc
inc
mov
mov
loop
and
sbb
aam
xchg
ss
add
xorb
pop
cmp
loop
push
mov
daa
cmp
dec
xchg
das
aad
fmul
sbb
out
int
xchg
adc
movsb
mov
xorb
ret
jns
stc
xchg
es
repnz
rolb
stos
add
pop
push
xor
pop
cli
icebp
gs
shll
or
jns
or
push
or
inc
jb
pop
jo
sbb
or
and
into
cmp
jbe
in
lret
enter
movsl
cmp
mov
xchg
shrl
ds
mov
cmp
dec
jmp
jns
mov
xor
scas
jae
test
out
mov
cmc
fucomi
and
pop
xlat
in
mov
adc
sahf
test
pop
xchg
mov
inc
insb
pop
xlat
jle
into
cmp
in
mov
pop
sti
jno
test
fs
test
sbb
and
loop
inc
push
jl
add
xchg
dec
adc
lods
adc
dec
jo
or
and
mov
add
stos
push
add
adc
push
inc
push
jl
mov
sarb
adc
fistpll
sbb
imul
xor
stos
jp
popa
add
cwtl
cmp
mov
add
push
jp
jge
es
outsb
adc
cltd
push
out
arpl
fisubs
fnstenv
xchg
out
inc
insl
mov
into
addr16
jne
push
push
mov
sub
sub
test
das
stos
in
insb
shlb
aaa
push
mov
lods
cmp
xchg
dec
popf
neg
jl
cwtl
dec
subb
fists
and
jne
cmp
lea
xchg
or
mov
xor
jp
xchg
not
adc
orb
add
and
lods
popf
mov
subb
cmpsl
mov
lea
dec
aaa
test
cmp
cmc
sub
bound
sbb
jno
es
repnz
jg
sbb
inc
stos
into
insb
aaa
xchg
xchg
sarl
jmp
sbb
sbb
pop
aas
sbb
cmpb
mov
mov
repz
mov
sbb
test
add
test
jecxz
insl
orl
sti
in
push
fidivs
dec
and
mov
mov
inc
into
mov
sahf
mov
ljmp
mov
int
jmp
xor
sti
pop
and
xor
pop
lret
cli
ja
mov
jl
xor
addb
insl
shlb
push
sbb
hlt
push
cmpsb
lods
sbb
clc
mov
xor
pusha
imul
sbb
mov
sbb
aas
out
lahf
sbbb
fsubs
cmpsl
sub
scas
xlat
loopne
das
cmpsb
fwait
insl
push
jle
mov
hlt
clc
add
aas
aaa
mov
andnps
adc
test
dec
popa
or
lea
mov
inc
jle
scas
xchg
out
pop
mov
out
push
pop
mov
mov
jbe
or
test
dec
and
lcall
sub
adcl
jmp
inc
out
mov
repnz
cs
inc
mull
jmp
mov
shll
jmp
and
inc
or
out
call
mov
sub
pop
mov
repnz
adc
lahf
jge
dec
ds
push
push
sti
xchg
jl
loope
and
pushf
loopne
lahf
jnp
cmp
fsubrl
shlb
das
insb
mov
pop
pushl
std
aam
xlat
repz
cwtl
aam
addr16
pop
idivl
cmpsl
rol
popa
inc
in
jb
xchg
adc
rcrl
mov
imul
arpl
xchg
jge
setp
subb
or
aas
xlat
adc
lds
sub
mov
aas
es
sbb
and
xor
dec
test
dec
mov
int
pop
mov
inc
incl
jl
adc
ss
pop
jg
mov
adc
and
mov
sarb
daa
lret
xchg
xchg
adc
dec
js
movsl
adc
shl
cmpsb
sar
cmp
je
popa
mov
and
adc
ret
enter
push
arpl
iret
mov
push
insb
bound
mov
dec
push
fwait
outsb
sub
pop
stc
incl
mov
out
mov
std
in
push
sbbb
lea
in
jae
or
js
test
testl
mov
inc
int3
jmp
mov
adc
pop
ret
out
stos
cmp
sbb
add
pop
and
pop
imul
out
fistpl
inc
sbb
inc
jnp
insl
pusha
fstpt
out
or
xchg
ss
cmp
inc
dec
sub
lock
pop
test
imul
and
fcmove
mov
sub
xchg
push
pushf
test
fists
inc
shlb
fisttpl
shr
pop
adc
scas
push
add
push
and
lret
sbb
int
ret
sub
push
das
xchg
mov
inc
cmpsb
inc
lods
gs
cmp
sub
or
or
ja
fwait
lock
sbbl
jo
jo
add
pop
arpl
mov
movsb
mov
shr
nop
lahf
nop
pop
mov
push
cmpsl
xlat
or
mov
icebp
mov
out
inc
inc
dec
cmp
scas
jp
mov
imul
sahf
dec
jge
jmp
push
adc
les
sbb
xchg
push
cmpsb
xchg
dec
in
mov
mov
ffreep
push
scas
xchg
cmc
andl
or
mov
fbld
mov
jmp
sub
fstl
pop
add
jne
adc
cs
arpl
sar
inc
iret
and
mov
enter
push
out
pop
inc
notl
leave
imul
mov
and
xor
stos
or
push
pop
pop
lahf
fcomp
mov
adc
out
mov
outsl
lds
xor
lahf
add
push
or
andps
daa
adc
dec
sbb
or
jmp
stos
test
mov
loopne
fistpl
lret
xchg
xchg
push
lea
xorl
inc
dec
aas
js
xchg
push
movsb
loopne
jns
jp
jb
or
insb
mov
bound
add
add
xchg
mov
arpl
and
jo
mov
mov
inc
sbb
pushf
shrl
inc
or
and
cmp
outsb
in
into
shll
push
aaa
dec
jno
pop
ret
dec
gs
mov
inc
mov
add
test
das
xchg
test
ret
sbb
or
or
cltd
test
mov
imul
sub
jae
ret
xchg
iret
scas
and
cs
repz
loopne
popf
es
test
mov
or
mov
xchg
adc
xchg
call
add
les
mov
cwtl
jp
pop
mov
pop
or
jno
lahf
xchg
pop
clc
imul
push
add
or
push
mov
arpl
es
add
pop
push
hlt
sbb
insb
in
nop
dec
in
dec
jp
repnz
mov
lahf
call
cli
pop
jbe
negl
push
scas
aaa
rep
out
sub
enter
int3
mov
das
and
mov
mov
jp
in
mov
xchg
iret
pcmpgtb
aas
and
cld
mov
xchg
ss
sub
nop
movsl
and
mov
iret
mov
mov
sbb
dec
lret
sbb
sub
cvtps2pi
outsb
les
imul
pusha
push
scas
daa
pop
lds
pop
jl
pop
xchg
push
clc
xchg
pop
push
sub
adc
mov
jnp
ret
or
rcrl
ljmp
cmp
add
popf
mov
sub
xor
or
out
cli
push
daa
sub
cld
mov
aad
repz
xchg
outsb
xor
shll
popa
divb
and
and
leave
ljmp
mov
lea
xchg
div
mov
sbb
or
mov
fidivs
les
sbb
sbb
add
insb
mov
icebp
mov
je
mov
adc
push
loop
andl
mov
mov
xor
push
and
add
sbb
leave
fmull
pop
mov
cs
popf
jo
or
dec
adc
movsl
sbb
mov
fs
adc
cmpsl
sbb
or
jb
fucomp
inc
out
ds
mov
mov
mov
sbb
mov
cs
or
mov
movsb
and
xor
mov
dec
add
cmp
je
std
aaa
push
xchg
add
aas
test
popa
adc
cli
dec
adc
subl
sub
push
lea
jmp
dec
cmp
inc
enter
xchg
ljmp
cmp
pop
and
push
cmp
add
out
loopne
call
pop
lds
jnp
push
pop
cltd
or
fcoml
pop
or
or
in
push
pop
mov
mov
xchg
pop
leave
xchg
je
inc
xor
data16
cmp
mov
insl
ret
xchg
pop
mov
fisttps
push
mov
xor
stc
test
sbb
add
inc
fldt
adc
fistps
movsb
sbb
ret
sbb
pushf
and
scas
icebp
or
adc
jno
inc
pop
dec
rcll
out
jmp
pop
push
mov
popa
pop
cmp
scas
hlt
fwait
stos
mov
cmp
ja
cmc
push
mov
and
push
add
xchg
mov
mov
icebp
sub
push
xor
imul
shlb
mov
sbb
push
xor
icebp
cltd
xor
jb
int3
inc
add
push
cld
add
loopne
stc
ss
dec
scas
pop
cwtl
leave
call
leave
movsb
push
neg
insl
adc
cmp
and
aas
into
add
rclb
repz
fcoms
cmpsb
mov
lretw
out
cmpb
dec
push
add
mov
repnz
movb
push
dec
xchg
sub
sti
inc
sub
jnp
mov
loope
lcall
jmp
shlb
repz
fimuls
cmpsl
sbb
adc
notb
add
add
adc
jno
add
fwait
and
add
stc
xchg
das
dec
xor
mov
test
mov
sbb
mov
adc
sub
mov
mov
sbb
popf
mov
mov
clc
xchg
mov
sub
cltd
ljmp
and
stc
fdivrs
push
cmpsb
out
adc
fwait
jns
in
jns
mov
clc
stc
fdivrs
adc
pop
into
mov
sub
enter
stc
or
insb
int
cmpb
cmp
imul
into
mov
cmp
cmp
jns
jle
popf
push
mov
push
in
push
or
jbe
pop
cmp
incb
je
in
jne
lock
jg
xor
pushf
in
stos
push
movsb
or
lods
jb
test
repz
icebp
xchg
cs
sbb
enter
dec
cltd
jl
insl
pop
jp
lods
orb
push
int3
or
adc
add
aad
jl
inc
insl
ret
dec
cmpsb
mov
mov
mov
sarb
mov
in
and
loopne
cwtl
pop
sub
in
outsb
out
in
dec
cmp
xchg
jo
xor
inc
lret
xor
adc
test
adc
fsubs
andl
lret
xchg
pusha
int
popa
push
add
popa
imulb
test
pop
pop
cmp
mov
test
add
sbb
cmp
cmpsb
leave
inc
jno
sub
js
out
stc
xor
lds
cli
mov
cmp
repnz
xor
testb
stos
fcmovnb
or
xor
and
mov
sarl
push
je
adc
jle
push
push
push
xchg
andl
push
cs
test
icebp
mov
rcll
mov
loop
sahf
xchg
pusha
xchg
xor
xor
pop
pop
repnz
pop
cwtl
add
pop
mov
pop
test
std
sub
cmpsb
push
inc
mov
cmpsb
mov
mov
lcall
sbbl
into
pusha
xlat
cwtl
mov
popf
pop
lahf
push
loop
pushf
sbb
arpl
and
imul
stos
push
dec
cmp
or
push
mov
add
sbbl
loop
js
or
xor
cmp
mov
ret
lds
dec
pop
inc
jl
inc
es
psubusb
mov
aam
dec
int3
ja
cmp
add
ds
sub
add
sub
data16
imul
xchg
add
fdivr
hlt
repnz
out
mov
aas
sub
sub
cmp
push
mov
sahf
in
jbe,pt
in
dec
cltd
pop
xchg
add
stos
les
mov
insl
roll
mov
or
jle
rol
jnp
test
stos
out
dec
jecxz
inc
into
loopne
push
jbe
jne
fidivrs
mov
mov
jb
push
fs
pushf
add
xchg
adc
xchg
jnp
std
dec
repnz
pop
jne
inc
out
adc
shll
cmp
testl
inc
push
adc
fs
jnp,pn
mov
mov
xchg
dec
push
lea
fwait
pop
rcrl
fs
push
ret
repnz
aas
pop
scas
rcl
sahf
mov
mov
push
divb
bound
cmp
mov
pop
in
orb
mov
popa
call
aaa
lahf
push
test
outsb
push
clc
call
cmp
xlat
dec
jo
or
jo
outsl
xchg
sub
in
rorl
js
xlat
je
jb
push
daa
in
mov
lret
rolb
mov
sbb
xor
nop
loopne
aad
stos
bound
xchg
test
push
cs
mov
cmp
mov
push
push
cli
push
pop
ss
push
push
scas
je
fists
jne
push
add
sub
jp
cmp
mov
cmp
call
xchg
push
les
arpl
push
outsl
mov
inc
loopne
xchg
mov
cmp
cmpsl
xchg
jg
cmp
adc
nop
mov
imul
rclb
je,pt
mov
leave
cmp
inc
movb
aas
mov
mov
fs
pusha
inc
mov
je
test
test
push
iret
test
mov
push
scas
clc
sbb
sbb
jns
loop
inc
push
push
orb
jp
test
mov
inc
out
insb
mov
mov
inc
adc
sub
loopne
ljmp
ja
pusha
test
push
jge
sub
inc
mov
insl
xchg
jb
cltd
rorl
mov
cs
imul
jmp
cld
in
adc
out
es
out
repz
jo
jne
xchg
inc
xor
aad
and
cmpsl
dec
clc
sbb
and
mulb
adc
daa
or
jo
jmp
and
jge
jns
lret
stos
out
jge
sub
push
scas
mov
scas
jmp
loopne
mov
mov
pop
cmp
stos
jno
stos
gs
test
insb
jl
repz
dec
dec
test
jae
mov
icebp
movsb
adc
inc
pop
divl
or
in
pop
loopne
dec
jge
std
jno
sub
lods
xchg
add
aas
stos
pusha
and
xchg
shll
decl
in
or
test
dec
cli
inc
ret
mov
add
cmpb
push
aam
lahf
sub
pop
sub
push
lret
ds
dec
pop
fmuls
jno
xchg
in
lret
mov
or
or
xlat
jecxz
inc
cwtl
push
loope,pt
jmp
sub
adc
push
insl
sbb
adc
fistl
cmp
cmp
push
sti
scas
scas
in
test
mov
aaa
enter
rclb
in
xor
push
or
lret
test
sarl
jmp
leave
sbb
inc
popa
or
xchg
sub
imull
mov
sti
addl
cmp
popf
adc
xchg
mov
loopne
push
mov
and
filds
inc
hlt
test
or
lcall
and
stos
push
sbb
pop
in
and
jp
cwtl
lea
incb
mov
sti
mov
rcl
insb
add
xor
fnstcw
repnz
pop
pushl
pop
add
lock
add
call
in
ret
neg
xchg
xor
aam
jl
pop
add
fistl
add
les
data16
shll
in
or
mov
dec
das
mov
add
inc
jae
pop
inc
xchg
xor
add
fdivrl
sti
les
subb
dec
imul
orl
js
mov
insl
xchg
arpl
pop
sub
inc
fistps
je
add
pop
mov
ret
stos
dec
imul
lods
cmp
mov
mov
movl
sbb
fnsave
or
mov
push
aad
into
jp
stc
adc
add
aas
shlb
xchg
loope
mov
out
in
xor
fisubrs
pusha
bound
fcoms
test
mov
iret
pop
arpl
fsubrl
fnsave
jns
or
aas
mov
in
sub
push
or
outsb
lock
mov
popa
mov
adc
loope
jbe
out
cmpsl
sbb
icebp
clc
das
xor
pop
je
test
push
sbb
outsb
pop
adc
sbb
leave
cmp
rcr
jp
adc
add
cmp
xor
dec
push
pop
mov
xchg
scas
push
rolb
insb
stc
scas
cs
cmp
push
inc
push
mov
xor
stos
stos
cmc
adc
jnp
test
and
or
and
fsub
aam
arpl
or
arpl
pop
and
adc
popa
push
mov
fists
cld
or
pop
das
loopne
addb
push
sbb
enter
jmp
mov
aaa
and
lock
fwait
popa
loope
xchg
and
xchg
mov
xchg
add
popa
bound
xor
out
popa
mov
icebp
vmread
imull
aam
cmp
push
cltd
adc
es
lcall
insb
add
xchg
les
xchg
mov
inc
das
push
ljmp
lret
cmp
loopne
idiv
sub
mov
fwait
int
sub
pop
adc
lcall
dec
push
pop
inc
loop
jne
or
jnp
mov
ljmp
jecxz
adc
xchg
jmp
lret
mov
inc
jge
pop
addr16
add
cwtl
pushf
hlt
add
push
rcrl
in
iret
jmp
paddq
mov
hlt
mov
dec
rcrb
add
es
push
popa
daa
cwtl
and
adc
adc
dec
push
or
cmp
je
mov
push
ja
daa
sbb
loope
cltd
and
xchg
stc
stos
push
fwait
jecxz
xchg
sbb
sbb
mov
push
xchg
mov
lcall
pop
and
mov
pop
adc
jle
lods
xorb
sub
je
movsb
pushf
inc
icebp
cmp
shll
fprem
xor
fldcw
jo
mov
sub
or
scas
adc
dec
xor
jbe
iret
pop
or
mov
ret
fcmovbe
movsl
ftst
sbb
bswap
cmc
lea
adc
cmp
icebp
stos
decl
loop,pt
movsb
pop
push
push
pop
mov
mov
out
cmp
lret
and
dec
mov
test
push
out
nop
cmp
pop
js
in
pop
xor
inc
mov
shl
ss
cmp
test
adc
push
addr16
mov
leave
cwtl
aaa
jno
and
sbb
adc
cmp
mov
or
add
add
lods
pusha
cltd
fists
in
sub
fisubs
push
imul
adc
sub
fidivs
jg
push
jns
jb
loopne
out
fcompl
ss
jg
outsl
add
push
fsts
and
mov
enter
outsl
cmp
xor
mov
jl
nop
dec
fdivrl
xor
inc
push
pusha
fscale
push
cmp
gs
jo
cld
bnd
sarl
repnz
push
lock
adc
sub
mov
std
mov
out
out
mov
dec
gs
lods
mov
lahf
fistpl
jle
mov
xchg
jae
mov
mov
dec
fsts
ds
imul
cs
out
cltd
popf
inc
or
and
repz
add
push
mov
rcrb
divb
push
pop
sub
clc
sub
fidivrs
outsb
mov
dec
pop
jne
into
idivb
sub
in
push
inc
adc
push
fistpll
repz
nop
sbb
out
cmpsb
pop
xchg
pushf
cmp
sub
scas
inc
lods
xchg
fisubl
pop
inc
jo
pop
fidivl
cwtl
movsl
shrl
pushf
mov
leave
mov
daa
adc
fistl
inc
shrl
cmp
mov
push
inc
cmp
jb
pop
xchg
cmp
sbb
push
adc
fcomps
mov
xchg
adc
repz
xor
dec
cmp
arpl
xor
lret
popf
fldt
insb
loop
sub
addl
inc
frstor
mov
scas
mov
test
inc
rcll
dec
fdiv
dec
xchg
pop
and
and
mov
cmpsl
sub
fistpll
cmpsl
repnz
movsl
xor
cmp
sbb
popf
ficoms
push
mov
cmp
in
repnz
mov
add
mov
repnz
and
roll
scas
mov
jns
mov
and
inc
movsl
call
fcomip
jg
mov
mov
enter
jne
outsl
aas
mov
push
sbb
mov
and
addb
aas
dec
imull
out
sbb
aam
in
or
fwait
jp
xchg
mov
nop
sub
insl
mov
fld
jne
loope
or
insl
mov
mov
inc
roll
jno
dec
unpcklps
es
jne
mov
pop
dec
mov
js
or
dec
mov
xchg
dec
repnz
push
ret
xchg
fucomi
ja
push
mov
ja
in
push
mov
movsl
insl
xchg
mov
pop
cmpsl
sahf
rorb
push
mov
fs
adc
popa
aas
test
push
adc
loopne
mov
xor
sbb
and
mov
or
push
pop
scas
cmp
lea
mov
adc
rclb
jno
mov
dec
mov
out
cmp
fsubrp
xor
lahf
sbb
pop
in
ror
adcl
in
fsubrs
sub
fcmove
push
pushf
sbb
ljmp
in
iret
cmp
xchg
add
adc
es
dec
dec
jno
inc
and
xchg
sti
iret
and
pop
inc
add
push
sub
add
outsb
dec
fwait
cli
push
aam
ss
xchg
movsl
insl
or
fnstsw
xchg
or
dec
xchg
or
xlat
adc
mov
jae
xorl
cmp
jno
sarl
int3
fstps
jb
nop
xor
push
xchg
out
int3
xor
lcall
sar
push
xchg
out
adc
sbb
int3
mov
iret
fwait
scas
mov
ds
int3
and
cmp
adc
add
test
add
stc
xor
sub
push
cmpsl
les
rol
outsl
and
and
xor
xor
out
xlat
dec
es
push
and
push
xchg
inc
cmp
arpl
push
je
popa
dec
pop
cmp
outsl
fsts
idivl
popf
mov
jne
mov
lcall
and
jne
dec
and
out
faddl
push
sbb
push
insb
inc
mov
loope
xchg
xor
xchg
and
cmp
lds
test
ljmp
loope
xchg
adc
adc
in
inc
dec
dec
mov
inc
iret
sub
lret
je
jge
or
sbb
xchg
loopne
sbb
dec
das
jns
add
mov
cmp
out
aad
push
fldl
mov
and
inc
mov
ljmp
dec
into
mov
fs
pop
mov
lret
adc
xchg
movl
stos
pop
mov
xchg
sub
cmp
mov
clc
cmp
push
inc
imul
out
mov
arpl
fdivr
jecxz
mov
sub
insl
jecxz
mov
jbe
sbb
jae
movsl
sub
xchg
jge
jno
incl
aaa
push
adc
pop
add
jg
sub
cli
mov
xchg
pushf
adc
adc
or
add
jl
xchg
xchg
cld
addr16
aas
ljmp
jecxz
jmp
and
xchg
push
sub
xchg
push
xorb
test
jle
fiaddl
push
inc
stos
arpl
push
and
mov
sarl
xor
cmp
popa
dec
imul
ret
enter
push
aas
xor
cmp
loopne
jne
cmp
push
inc
leave
lock
loope
inc
cld
loope
and
xor
je
and
dec
testl
rolb
shll
out
cmpsb
xor
xlat
repz
aam
das
xchg
sbb
nop
into
push
or
test
push
dec
mov
sub
sub
daa
mov
adc
cmp
mov
in
mov
popf
clc
mov
xchg
out
aaa
insl
pushf
loope
inc
shlb
jno
mov
ss
sub
cmp
je
xor
out
pop
sbb
ret
movsb
push
mov
cs
sbb
js
dec
dec
xchg
adc
fnsave
pushf
mov
data16
data16
rorl
and
int3
lret
add
dec
pop
mov
movsl
movb
jnp
sti
and
inc
movsb
test
in
ficompl
mov
mov
pop
hlt
push
sub
sbb
mov
jne
push
les
add
ret
xlat
jl
enter
or
shll
fnstcw
ret
or
add
xor
ret
pusha
sub
inc
outsb
test
in
testb
inc
push
stos
xchg
sub
push
call
insb
imul
inc
clc
or
mov
test
lcall
out
cmc
mov
mov
test
jge
shlb
stc
out
loop
subb
gs
cmp
ror
and
cmpsb
in
ja
sti
or
pop
mov
jno
sub
je
dec
or
xchg
jp
jl
push
fnstsw
cmp
pop
test
loope
jg
out
push
and
movb
sub
stc
sub
push
test
lret
add
cltd
repz
push
jge
push
sbb
inc
mov
mov
inc
aaa
fwait
jns
push
adcl
push
out
cltd
inc
sbb
stos
sbb
mov
lods
jecxz
movsb
ljmp
repz
push
push
xchg
jne
mov
mov
jno
ret
shr
shl
lock
pop
sub
push
jo
les
add
sbb
lahf
mov
subb
mov
lods
adcl
xchg
pminub
xor
adc
stos
sub
sbb
mov
mov
mov
ljmp
sbb
sub
adc
dec
xor
mull
pusha
mov
or
mov
jns
fwait
cwtl
inc
fldcw
add
and
sbb
add
xlat
imul
dec
imul
hlt
neg
movsb
imul
lods
bound
lcall
aaa
xchg
push
dec
loopne
push
cmp
push
movsl
test
icebp
pop
add
jno
popa
loopne
add
lahf
jbe
inc
iret
jge
jecxz
mov
scas
fstps
jge
inc
imul
insl
out
test
jge
pop
adc
adc
movsb
dec
sub
cmpsl
je
mov
xor
pusha
insl
xlat
push
pop
int3
fsubl
xchg
mov
sub
cmp
mov
call
shl
aas
stos
mov
push
xor
xchg
adc
cs
jbe
mov
dec
push
and
adc
ficoml
lahf
popa
aam
mov
push
lcall
repz
gs
sub
arpl
inc
push
pop
xchg
push
arpl
in
into
mov
pop
mov
aaa
jnp
jge
push
mov
test
push
mov
dec
mov
loop
out
push
jmp
adcb
adc
mov
or
clc
jmp
adc
or
loope
pop
mov
and
cli
mov
add
rep
in
xchg
lcall
popa
cmpsl
imul
push
je
fildl
push
loopne
push
push
xchg
mov
aas
testl
xchg
xchg
ljmp
inc
push
mov
pop
icebp
int
adc
fwait
jae
fildll
or
fwait
xor
sbb
int
insl
out
ror
xor
out
repz
faddp
lea
xlat
lcall
inc
lret
mov
cli
mov
int3
mov
pop
sbb
lcall
add
push
mov
add
xchg
aad
push
cld
push
out
xor
mov
dec
stos
mov
jbe
mov
mov
orl
faddl
stc
iret
mov
pop
and
cltd
incb
cmp
out
push
fidivrl
or
addr16
sahf
jno
outsb
daa
aad
sub
mov
adc
jp
pop
aas
sbb
data16
div
mov
push
ror
sarb
pop
cmpsb
les
sbb
in
jne
cmpsl
imul
xchg
push
mov
pop
mov
cmc
jl
popf
lahf
bound
mov
jg
rcll
cs
aam
outsb
dec
lahf
fadd
lcall
test
cwtl
sub
aas
test
sub
rorl
nop
mov
pop
cmp
mov
sbb
aaa
sbb
lods
cmpl
xor
inc
or
mov
cmpsb
mov
popf
inc
or
stos
fcmovnbe
in
icebp
inc
insb
sub
push
neg
cmpsl
movsb
and
sti
ss
call
scas
lret
iret
cmc
adc
adc
fcomps
test
mov
into
fldt
std
inc
popf
and
add
fdivs
dec
shll
sbb
adc
jle
mov
ja
sub
xor
push
sub
popa
dec
cmp
pop
and
insb
push
xchg
jae
fidivs
mov
imul
fdivs
sub
mov
aam
adc
sbb
add
inc
shlb
incl
insb
sbb
sti
dec
jnp
jnp
xchg
push
jae,pn
adc
xchg
or
mov
aas
xor
out
pop
mov
es
jmp
sti
pusha
jne
and
jmp
mov
jmp
sahf
jb
cmp
jp
pop
push
bound
cmpsl
flds
out
aas
dec
adc
or
faddl
xchg
pushf
dec
jnp
push
and
int3
lcall
fdivrs
push
and
js
repz
jne
adc
jnp
enter
xlat
loopne
sub
sbb
daa
lock
cmp
xchg
stos
pop
push
pop
xchg
les
cmp
xorl
cwtl
push
arpl
mov
pop
std
mov
cmpsl
add
and
aas
jno
mov
fwait
bndstx
pop
nop
repz
mov
mov
out
int
sbbb
sub
push
push
call
dec
cld
lods
lret
iret
jmp
dec
adc
mov
adc
stos
cmp
mov
movsb
ljmp
pop
adc
mov
dec
add
lods
pop
rcr
hlt
cmp
lcall
mov
add
xor
arpl
mov
jns
or
xor
pmuludq
inc
mov
push
daa
pop
into
mov
xchg
mov
pop
pop
fdivl
xor
pusha
xchg
iret
and
dec
test
push
cld
mov
les
and
movsb
pmaxub
or
mov
adc
jbe
xchg
mov
cmpsb
cmpb
mov
mov
lock
sahf
lret
jne
pushf
mov
mov
bound
xchg
push
pop
jbe
movsl
fsubrs
mov
jnp
leave
mov
leave
jae
jl
jle
frstor
mov
push
add
cli
movlhps
enter
data16
or
cmpsb
call
cmpsb
neg
xchg
cmp
test
cltd
cld
test
mov
cmpsb
mov
leave
insl
ja
jge
push
jg
repnz
in
popf
lahf
xchg
ret
adc
mov
inc
ja
ds
sbb
mov
cs
mov
sub
iret
jg
inc
or
sbb
mov
aad
xor
outsb
out
cmp
mov
cmp
es
or
loop
pop
in
outsl
xchg
adc
cvttps2pi
inc
in
inc
js
push
xorb
cld
mov
fistl
cmpl
mov
inc
mov
dec
xchg
adc
call
pop
hlt
or
and
add
jo
jne
pop
xor
shl
stos
xchg
mov
shlb
jo
cwtl
inc
add
inc
xor
inc
test
test
or
lea
xchg
jno
addl
dec
mov
fisubl
outsl
daa
aaa
sub
iret
mov
mov
je
dec
adc
sbb
test
rcll
and
lds
push
call
std
pop
dec
push
mov
loopne
jmp
sarl
pusha
rcll
lahf
out
and
xorb
stos
mov
insb
insl
adc
adc
test
addr16
fdiv
inc
sbb
repz
adc
pop
pop
or
mov
cli
outsb
xor
sub
xchg
ja
push
push
rolb
into
shrb
inc
std
repz
jbe
pop
mov
cmc
xor
in
idivl
orb
cmp
mov
adc
test
and
xor
repnz
negl
stos
inc
outsb
jmp
push
popl
ss
jg
lds
pop
sbb
mov
imul
xor
mov
les
sbb
sbb
mov
cltd
jle,pt
aad
pop
sarb
in
out
test
sbb
sbb
dec
or
mov
cli
imul
push
pushf
inc
inc
enter
and
popf
dec
repnz
test
sub
jb
sbb
lea
add
fs
mov
sub
jae
and
int
pushf
mov
xchg
pushf
scas
pushw
jp
insb
jo
inc
and
test
bnd
iret
or
inc
leave
mov
test
out
push
adc
out
inc
les
lock
int3
mov
cmp
gs
leave
jecxz
je
push
or
in
jmp
fwait
outsl
movsb
gs
arpl
outsb
cmc
mov
data16
iret
gs
iret
mov
aad
nop
adc
or
cmpsb
addr16
orb
shll
in
aam
dec
and
jge
pop
push
push
xchg
jnp
sahf
push
pushf
adc
mov
push
mov
inc
ret
sbb
mov
mov
fwait
adc
jl
pop
mov
adc
stos
and
cli
and
sub
inc
cmp
mov
popa
pop
add
xor
xchg
or
je
push
push
and
mov
cwtl
jle
dec
enter
pop
dec
inc
cmp
mov
add
mov
and
imul
loop
inc
inc
in
rcrl
add
xorb
nop
hlt
or
mov
aam
push
pop
ficoml
call
or
cmc
xchg
xor
pusha
enter
ds
cmp
cmp
mov
out
mov
inc
xchg
andl
adc
jg
lock
fprem1
xor
outsl
and
xchg
mov
test
andl
mov
push
lret
mov
clc
cltd
adc
outsb
pop
fstps
dec
mov
mov
lods
xchg
pop
ja
xchg
add
dec
ds
adc
sub
fwait
rorl
imul
aaa
leave
add
negb
xchg
xchg
ss
push
dec
jae
mov
mov
sti
add
pop
repnz
cmp
hlt
test
xlat
xchg
sbbb
jnp
in
rol
and
cmp
pop
cmovle
lods
add
imul
lret
jnp
push
inc
add
xchg
rolb
out
stc
pop
ja
pop
nop
pop
cmp
std
cltd
pop
lahf
lds
loopne
cs
in
or
sub
mov
lds
cmpsb
imul
push
mov
addb
aam
sub
pop
sub
rcl
sahf
mov
jbe
int3
bound
mov
add
scas
xor
mov
add
fucomi
adc
push
xchg
and
pop
xor
push
sbb
adc
cmp
psubsb
xor
in
or
ror
out
or
push
mov
xchg
dec
cmpsb
xor
gs
push
sbb
push
and
add
int3
cmc
inc
mov
add
adc
mov
sbb
outsb
in
iret
into
cmpsb
xor
and
adc
inc
xor
push
pop
inc
incb
andb
addr16
movsl
or
mov
in
jo
pop
dec
scas
jbe
gs
cmp
cwtl
les
stos
and
pop
sbb
or
adc
pop
hlt
lret
lods
imul
mov
pop
ljmp
add
out
inc
xor
push
in
mov
popf
mov
jl
or
push
sub
les
repnz
cwtl
sub
lahf
sbb
sbbl
repz
push
cs
nopl
cltd
add
xchg
cmpsl
sarb
popf
idivb
push
or
fldl
stos
sbb
into
lcall
scas
orb
add
insl
das
test
lcall
push
in
lds
cmpsl
pusha
scas
lret
adc
std
xorb
adc
and
adc
and
pop
adcl
pop
or
cmp
adc
push
nop
enter
sub
sub
in
sti
cmp
fldt
dec
jp
mov
xchg
popa
mov
out
lret
or
xor
xchg
mov
xchg
js
cld
xlat
test
loope
jmp
xchg
ror
pop
movsl
cmp
jnp
xor
mov
das
xor
aaa
mov
add
dec
sti
mov
adc
rcr
xchg
outsb
pop
out
and
and
xor
jmp
imul
lods
and
xor
leave
test
cwtl
cmp
cmpsl
push
xchg
jl
mov
and
xchg
mov
in
push
bound
or
dec
mov
mov
stos
pop
jae
cmp
lds
add
inc
lds
std
fs
fisttpl
push
lret
stos
sub
jo
xor
sti
sti
mov
gs
push
xchg
mov
loop
fs
rcrb
daa
into
cmp
push
mov
push
dec
pop
and
les
decl
scas
mov
pop
push
and
mov
scas
lods
repz
inc
sub
or
cld
ljmp
lret
jns
fisttpl
xchg
aas
sbbl
imul
sbb
nop
fistl
adc
cmp
dec
popa
ja
lret
xor
cmpsl
jl
sub
jne
lods
jle
push
enter
sbb
mov
pop
sbb
insb
mov
xlat
xchg
shl
enter
out
pushf
dec
arpl
or
das
adc
imul
fsubl
sub
ret
ja
jb
inc
jp
sbb
decb
lcall
push
and
iret
add
iret
notb
xchg
mov
inc
pop
or
jns
loope
movsl
jl
dec
loopne
lods
add
and
jno
mov
inc
jno
dec
test
push
cmp
mov
fiadds
std
inc
mov
xchg
sub
lahf
jmp
adc
lock
xchg
sahf
push
in
mov
jle
sahf
shll
xchg
cmp
inc
jb
ss
daa
in
sbb
and
lea
popf
into
int3
negb
xchg
iret
xchg
inc
mov
pop
fs
jge
aaa
scas
xor
cmp
jnp
cmpsb
push
lods
pop
sti
sub
xor
pusha
lods
pop
je
mov
mov
xchg
mov
mov
cmpsl
fisttpll
test
adc
lret
dec
sar
push
daa
in
xchg
icebp
sub
cmp
adc
call
loope
int3
mov
mov
mov
data16
dec
push
and
test
add
dec
jae
not
sub
xchg
dec
sub
xchg
push
mov
mov
jp
or
sub
sub
mov
dec
enter
pop
fsubs
lock
xchg
mov
mov
cli
push
int
andl
mov
gs
iret
dec
je
jmp
bound
xor
or
add
mov
cltd
fwait
xor
daa
jns
mov
std
add
mov
lea
sbb
ror
mov
sub
xor
imul
pop
roll
mov
popl
out
xchg
in
mov
into
xchg
rcrl
rcll
cmp
into
push
push
mov
mov
jmp
mov
push
push
jle
mov
mov
and
jle
mov
xchg
lods
sbb
xorl
loope
pop
mov
adc
and
flds
or
sub
sbb
mov
jae
and
outsl
mov
adc
cmp
fmulp
fstl
adc
adc
leave
mov
insl
sub
ss
dec
xor
pop
movsl
push
mov
pop
push
push
sbb
idivb
shrb
jmp
dec
roll
pop
push
popf
inc
jmp
ret
sbb
xchg
and
clc
jecxz
jmp
adc
xor
xchg
mov
sub
imul
dec
or
ds
inc
icebp
popf
movsl
sub
add
loop
cld
pop
mov
dec
enter
mov
jae
mov
lock
out
jns
dec
aad
jb
mov
stc
cmpsl
iret
xchg
mov
and
repnz
push
daa
jl
adcb
pop
ja
mov
mov
jl
nop
pop
nop/reserved
add
mov
sbb
jb
into
add
adc
lret
rcll
and
mov
pop
pop
in
mov
adc
adc
lret
push
add
out
push
cmpsb
dec
fidivs
sub
fidivl
call
pop
cmp
or
fldt
stc
xchg
sbb
xor
movsw
xchg
inc
mov
lds
test
fisubl
cmp
outsb
pushf
xor
ret
loop
pop
incb
dec
push
adc
cmpsb
sti
ret
xor
or
sub
jne
test
test
jecxz
or
stos
daa
and
ljmp
es
mov
fcomi
dec
mov
dec
pop
fnsave
sub
adc
dec
inc
adc
sarb
sbbb
dec
lods
jecxz
jo
xchg
pop
sbb
xchg
jo
ret
int
icebp
or
cli
xlat
mov
jns
jge
pop
xchg
lret
inc
jge
int3
jne
js
dec
mov
adc
imul
outsb
ljmp
sti
movsb
xchg
add
add
inc
cmc
test
jge
or
in
jp
cmpb
fcomps
repz
mov
xor
scas
or
cmp
xlat
pop
cmp
mov
movsl
sub
mov
mov
imul
sbb
jo
jo
pop
gs
sbb
cmp
fs
jle
cmp
mov
mov
repz
bound
cmpb
iret
ret
outsb
ljmp
imul
sti
or
or
sbb
inc
or
mov
cmpsl
repz
roll
cwtl
in
add
stc
daa
pop
or
mov
add
xor
pop
add
inc
scas
sub
add
cmp
stos
pop
mov
dec
and
loopne
dec
test
or
popa
sbb
add
fs
add
adcb
xor
push
add
lea
in
jecxz
pop
mov
out
mov
addr16
movsb
lea
cmp
iret
fldt
fcmovbe
mov
lea
dec
dec
push
pop
sbb
jnp
mov
lods
aad
imul
jecxz
aad
xchg
xor
push
mov
test
clc
fsub
cmp
add
add
adc
jge
rcll
pop
lods
xchg
repnz
aas
pop
shlb
orl
flds
jae
or
cli
nop
call
enter
ss
mov
adc
in
ljmp
xchg
into
lret
fstpl
cmp
sub
lods
cwtl
pop
or
icebp
ds
mov
dec
pop
cs
pushf
dec
mov
mov
jno
mov
daa
mov
mov
jmp
dec
inc
shlb
gs
or
stc
ja
push
jns
sub
cltd
lret
pop
iret
jo
cmp
test
jbe
clc
mov
je
cmpsb
push
jno
push
push
enter
cmp
jmp
xchg
scas
sub
push
lods
mov
push
ljmp
rorl
mov
add
push
vmovsd
rol
rcll
pop
inc
push
xor
jmp
lods
adc
iret
push
js
mov
mov
pop
push
in
mov
repz
xchg
mov
mov
mulb
mov
mov
adcb
pop
mov
jno
lods
je
es
fcoms
inc
lock
orl
sub
push
lods
inc
aas
data16
data16
pop
jbe
nop
imul
jno
stc
int
mov
fcomps
repnz
jl
movsb
mov
das
or
loopne
movsb
in
orl
das
mov
mov
lahf
inc
mov
cmc
inc
mov
negl
popf
mov
adc
xchg
or
jge
pusha
push
decl
aas
iret
das
sbb
xchg
sbb
sbb
mov
ret
cld
xor
ror
aad
and
mov
in
outsb
pop
pop
mov
movsl
lock
cmp
pop
cld
dec
nop
sbb
sbb
ljmp
arpl
cmpl
pop
pop
psrld
cld
pop
fdivl
mov
inc
jg
lods
mov
out
bound
stos
xrelease
sti
stos
jo
or
shlb
je
add
aam
test
adcb
mov
jne
out
lret
xor
xor
aas
pop
sbb
xchg
daa
shl
jo
js
and
enter
stos
aam
push
inc
fisttpl
pop
sub
pusha
inc
rcrb
insl
mov
cmpsl
jge
sbb
rorl
cmc
mov
or
aaa
xor
repz
sub
push
dec
rcl
add
sub
mov
fdivrl
push
nop
jg
jp
imul
adc
sbb
push
cmp
stos
cmpsl
mov
mov
movsb
ja
out
in
test
add
mov
jo
inc
pop
jns
ss
test
les
mov
pop
dec
test
push
cmp
push
jg
es
clc
mov
xor
jne
pushf
mov
and
mov
mov
int3
stos
and
mov
cmp
in
jmp
sub
movsl
xchg
sub
mov
flds
iret
out
mov
sbb
inc
push
mov
je
and
bswap
arpl
scas
xor
insb
push
xchg
push
jbe
ljmp
gs
inc
loopne
sti
cmp
ss
and
adc
cs
cli
cmc
sbb
out
or
pop
iret
cmp
push
ss
mov
pop
mov
jae
push
mov
fs
push
xchg
pop
mov
insb
push
fwait
sbb
cmp
jne
movsl
loop
clc
loop
std
pop
jo
ss
dec
movsb
push
ds
rorb
inc
aaa
rorl
push
mov
mov
shll
jle
or
mov
dec
jo
lock
adc
sub
rorb
pop
popf
jo
adc
mov
push
neg
mov
inc
mov
addr16
fnstenv
adc
andb
dec
cmp
xchg
mov
push
out
ss
add
jno
jbe
mov
shll
mov
rorl
lds
pop
jge
xor
scas
ret
adc
icebp
movb
sub
pop
out
mov
roll
xchg
scas
fcoml
icebp
cmp
call
jle
sub
insb
add
cmp
inc
mov
mov
dec
sbb
cltd
mov
push
dec
das
fcomps
icebp
int
sub
jmp
cmp
sbb
jp
ds
insl
rol
mov
or
mov
inc
sbb
mov
lret
mov
loopne
test
test
out
push
mov
mov
out
std
outsb
lret
cli
pop
int
xchg
rcl
mov
inc
xchg
mov
test
cmc
push
insl
mov
push
mov
or
scas
jne
mov
dec
stc
sub
mov
aaa
hlt
mov
nop
aaa
fcomip
scas
fwait
and
mov
bound
lret
sbb
mov
std
cmp
fnstsw
cmp
sbb
inc
ret
dec
cmpsl
aad
push
addr16
fcmovnb
or
dec
dec
popf
jecxz
ljmp
or
lock
mov
pop
insb
lods
aam
jmp
in
out
dec
mov
pop
int3
and
adc
lods
and
stc
rcr
sub
xchg
lcall
mov
shl
add
iret
push
cmpsb
inc
sub
add
repz
sbb
mov
jp
inc
inc
pop
div
lea
popa
movsb
or
mov
repz
nop
ficoml
outsl
push
ja
push
jl
mov
push
imul
push
sub
or
xor
mov
test
inc
ljmp
pushf
roll
push
add
jmp
test
icebp
sbb
and
iret
mov
pop
fdivrs
loope
fwait
and
jnp
cmp
push
lcall
cmovl
fdiv
fwait
or
mov
aaa
std
shlb
cmp
inc
cmp
add
sbb
in
clc
cmpb
in
in
mov
xchg
xchg
sub
add
cmp
pop
aad
inc
scas
mov
and
lahf
sub
xor
or
jns
and
fwait
push
mov
insb
lret
test
jmp
sub
test
push
out
jmp
xchg
repz
push
jmp
arpl
fisttps
das
inc
bswap
fwait
hlt
scas
cmc
leave
push
scas
stos
mov
gs
bound
mov
cli
xchg
xlat
pop
in
lret
leave
test
cmc
loope
mov
loope
int
bound
das
mov
imul
fsubrl
sbb
mov
sarb
repnz
cmp
mov
mov
test
and
xor
fcmovnbe
pop
xor
sbb
cmp
add
pop
inc
dec
push
jmp
je
lock
jg
cmp
sub
sub
call
fdivr
pop
je
lds
sar
dec
es
loop
test
data16
shr
xchg
sbb
cwtl
pushf
xchg
cmpsb
in
inc
les
inc
pop
dec
jmp
lea
cli
fsubrl
mov
es
daa
out
xchg
push
add
mov
jge
addl
add
cwtl
jecxz
mov
psrlq
fdivrs
cmc
fcoml
mov
imul
mov
jge
and
push
mov
pop
sub
sub
mov
out
mov
lcall
sub
push
add
cwtl
lea
and
jnp
stos
sbb
mov
xchg
enter
xor
cs
xor
mov
push
push
xor
outsb
out
inc
push
jno
ja
cld
mov
lods
and
inc
lods
sbb
jnp
popa
jecxz
or
fcmovbe
push
jecxz
push
popa
icebp
in
cmp
int3
sti
or
imul
test
lret
and
jns,pt
nop
sahf
sbb
mov
push
sbb
movsb
dec
sar
xor
pushf
aad
lods
or
popf
sbb
stc
aas
cmp
movsl
loop
lret
xor
lret
xlat
dec
mov
dec
dec
lret
cld
cmpb
sub
or
cwtl
int
add
mov
sahf
push
cs
xor
outsb
nopl
std
push
movsl
test
lcall
cltd
loopne
xor
xchg
iret
sti
sub
mov
xorl
rcr
jmp
mov
xorl
cmpl
xor
ficomps
mov
push
dec
pop
repnz
fisubs
mov
pushfw
xchg
sbb
clc
xor
popf
push
fcoml
scas
std
dec
cld
push
jo
aad
es
bnd
pushf
mov
inc
gs
shlb
lret
mov
movsl
ss
or
ret
mov
cwtl
xchg
mov
bnd
sub
fs
call
arpl
cwtl
rol
cli
jnp
in
xor
mov
push
fists
idivl
aas
ss
pop
xchg
imul
cs
mov
xor
mov
clc
jae
push
mov
sbb
and
push
les
mov
subl
sub
mov
and
mov
out
ret
or
dec
mov
xchg
and
inc
pop
mov
push
xchg
inc
out
outsb
inc
inc
clc
cmpb
xchg
inc
mov
xchg
sub
inc
push
bound
stos
pop
push
push
push
inc
adc
fidivs
and
inc
stos
inc
mov
xlat
cmpsb
sub
popa
les
push
ret
and
pushf
fstl
ret
repz
lahf
push
xchg
cmp
xchg
lods
insb
mov
fs
and
xorl
dec
cmp
pop
fcomi
push
in
push
idivl
push
orl
jnp
addl
xchg
popf
inc
je
outsl
cmp
rorl
jle
pushw
xor
lea
ja
or
incb
popl
xchg
jl
push
das
sbb
xchg
mov
push
or
sbb
cmpsl
pusha
pop
pushf
or
aam
movsl
dec
push
xchg
fimull
pop
lods
xor
dec
lods
inc
cltd
and
rcpps
out
mov
lods
fdivrp
mov
jl
push
lret
iret
imul
adc
xchg
fs
mov
pop
aaa
dec
or
sbb
xor
testl
mov
push
lret
jne
out
pop
xlat
adc
xchg
fistpl
fcomps
outsl
sbb
or
xchg
jne
push
pop
rol
jns
out
stos
in
pop
mov
xor
jb
jb
pusha
rcrl
incb
js
ss
in
adc
dec
cmp
jns
adc
nop
mov
pop
jbe
fmulp
daa
shlb
adc
mulb
ret
iret
imul
mov
add
stc
aam
sets
ds
push
addr16
lea
cmp
mov
inc
fwait
pusha
sub
imul
mov
mov
xor
pop
call
cwtl
sub
xor
pop
jmp
mov
and
jne
adc
mov
enter
fwait
xchg
dec
fwait
rcll
popf
movsb
fisttpl
js
out
pop
shrl
cmp
insb
inc
dec
lahf
nop
loop
pushl
loop
mov
and
sub
xor
loope
movsb
cmp
mov
mov
mov
in
int
mov
std
xor
outsb
repz
aas
rolb
lods
mov
clc
arpl
pop
xor
dec
inc
mul
inc
pop
lret
mov
xchg
and
sub
movsb
adc
adc
push
inc
cmp
and
push
enter
pop
inc
int
dec
and
mov
pop
sbb
mov
xlat
dec
testl
loope
mov
lret
sub
and
jno
push
push
add
pop
cs
std
xchg
cli
aas
stc
mov
cmp
pusha
mov
cwtl
mov
imul
gs
lahf
mov
pop
addr16
dec
sti
add
push
mov
fisubrl
pop
mov
jns
xor
mov
sbb
xchg
mov
mov
lods
xorb
push
call
or
lock
loop
insl
bound
movsl
stos
add
aas
pop
push
push
data16
mov
pop
push
xor
sub
clc
xor
xchg
mov
mov
add
shl
pop
lahf
cmp
mov
in
mov
cs
push
fimuls
mov
lock
shll
add
stos
pop
iret
inc
lret
add
mov
daa
inc
sbb
mov
test
xchg
inc
adc
pusha
mov
mov
hlt
lcall
pusha
pop
hlt
cwtl
lock
mov
adc
out
insl
sarb
and
cwtl
jno
pusha
mov
mov
mov
rclb
shlb
add
stc
arpl
and
sub
popf
jo
clc
rorl
out
lods
jle
mov
sbb
loopne
das
in
mov
jle
push
idiv
inc
add
sbb
jp
jmp
pop
add
mov
mov
addr16
adc
sbb
dec
sub
loope
jbe
rep
aaa
repnz
jns
lock
mov
aaa
push
jno
rcr
cmpsl
xchg
psrld
movsl
add
enter
xchg
jle
adc
mov
cmp
lcall
test
dec
mov
dec
push
pop
pop
add
and
sbb
jbe
clc
imul
nop
xchg
in
data16
fwait
loop
pushf
outsb
sbb
pop
fcoml
mov
dec
mov
les
jno
in
sarb
lret
lcall
add
xchg
jg
xchg
lods
cmp
das
inc
into
stos
into
mov
inc
cmp
ret
and
and
adc
outsb
std
in
das
pop
out
fisubrs
sub
lds
shlb
and
iret
mov
dec
jge
or
ja
adc
inc
mov
inc
cmpsb
or
pusha
mov
popl
and
pop
add
insb
jmp
cs
sar
adc
call
les
mov
jg
lock
fidivrl
jg
loope
sub
enter
inc
and
cli
pop
xchg
fbld
mov
data16
incb
mov
lock
xchg
push
cmpsl
scas
sub
in
ret
lret
jo
stos
mov
or
out
mov
sub
pop
cs
rorl
shl
push
ss
mov
sahf
inc
pusha
add
xchg
dec
or
or
imul
cs
jae
sahf
jbe
pop
lds
sub
mov
sbb
les
lret
mov
xor
ds
bound
and
pop
aam
ret
sub
mov
pop
xor
icebp
shr
stc
gs
xor
jge
inc
adc
sahf
neg
pop
jns
in
js
pop
add
jge
add
pop
or
cmp
testb
adc
scas
pop
lret
pop
dec
std
ficoml
push
mull
jl
adc
mov
sub
jmp
mov
shlb
pop
mov
mov
inc
sub
fisttps
fdivl
or
pop
arpl
jge
push
sub
mov
push
out
mov
inc
loopne
adc
stc
jmp
roll
dec
out
je
push
cli
stos
inc
ljmp
fwait
ja
dec
movsl
test
scas
int3
push
xchg
loopne
mov
dec
add
dec
in
mov
adc
sub
push
or
inc
inc
or
ljmp
loopne
outsl
mov
out
lcall
push
mov
shll
xchg
lret
pop
xor
or
rcrb
pop
push
outsb
out
push
xchg
ss
xchg
lret
lret
or
fwait
xorb
push
out
pop
std
mov
inc
mulb
repnz
popf
mov
lods
lcall
adc
loope
fsubs
outsl
subb
hlt
in
push
outsl
ret
mov
sbb
aaa
cs
push
sub
push
xchg
out
xchg
enter
mov
push
imul
scas
in
into
inc
adc
movsb
int3
and
push
mov
mov
inc
mov
lret
out
xchg
sub
lock
popa
shll
xor
cmp
rcr
out
mul
pop
cltd
pop
sbb
lcall
ss
xchg
push
or
cmpsb
das
loopne
jecxz
and
das
pop
jmp
mov
outsb
mov
addr16
or
outsb
out
loope
pop
sar
mov
and
lret
adc
add
lea
cmpsb
out
inc
in
xchg
fimuls
push
xchg
ja
cmp
andb
add
std
sub
push
es
dec
cltd
mov
or
fadd
movsb
jnp
pop
shll
xor
and
dec
in
popa
cli
jne
or
sub
shlb
cmp
cmpsb
ret
repnz
cs
xchg
dec
mov
dec
lret
sahf
pop
mov
push
pop
fnstsw
fwait
popf
mov
iret
lahf
pop
in
ss
in
test
cld
repz
jmp
arpl
mov
rorl
std
mov
xor
andl
dec
sbb
dec
xchg
fists
jbe
clc
jnp
pop
cld
into
cmp
enter
popf
mov
mov
xlat
lods
clc
xor
mov
iret
or
test
mov
sub
cwtl
push
aad
movsl
bound
inc
push
pop
mov
xchg
sub
xor
ret
mov
cmpsl
mov
push
jl
pop
adc
addr16
rclb
call
add
iret
sbb
hlt
insb
mov
nop
movsb
mov
jb
push
ljmp
cltd
sarl
scas
out
lods
dec
daa
inc
jne
idivb
add
fs
out
add
adc
mov
dec
out
call
fbld
push
add
or
mov
shr
and
pop
push
sbb
bound
xchg
mov
cmp
bnd
pop
mov
cmc
pop
daa
imul
dec
sub
xor
push
rcl
mov
push
shrl
aas
movsb
fldln2
pushf
pop
xchg
xchg
in
push
scas
jle
mov
andl
sub
sbb
xchg
lcall
imull
cmp
push
xchg
jp
xor
jp
xor
mov
mov
es
ljmp
scas
jno
or
roll
inc
adc
xchg
aam
mov
mov
inc
pop
flds
jae
sub
push
lcall
testl
popa
cmp
inc
test
repnz
into
push
push
jns
jns
push
popf
iret
dec
xchg
pop
xchg
outsl
sub
inc
aam
add
mov
popf
scas
mov
gs
jle
add
xchg
mov
adc
hlt
arpl
sub
push
int
xchg
mov
add
std
xlat
or
std
shrl
in
adc
fidivrs
fwait
into
adc
cli
push
push
imul
inc
jnp
cld
dec
out
mov
pop
lods
scas
xor
mov
push
imul
into
add
pop
or
jle
xor
imul
mov
je
sbb
bound
sub
dec
dec
loopne
push
jge
jecxz
das
not
loope
xchg
jns
add
popf
arpl
shl
jae
xchg
jno
aas
sbb
imul
inc
jl
je
pushf
cmp
xor
push
in
sbb
movq
sub
mov
movsb
and
test
rol
aam
pop
stc
sub
pop
pushf
jno
or
dec
xor
cmp
sub
leave
mov
pop
pushf
fisttpl
inc
cmc
rcll
sub
fisubrs
xor
cmc
das
ret
mov
outsl
sti
pop
mov
aaa
ret
in
add
repnz
push
or
or
push
add
in
out
xchg
js
aaa
sub
iret
fs
movsl
retw
jmp
cmp
loopne
lea
xchg
in
loope
and
mov
push
sub
mov
xchg
push
not
arpl
mov
cmc
ret
sahf
jge
popf
out
sbb
jo
loopne
xchg
out
scas
aam
mov
fwait
add
adc
mov
push
imul
pop
mov
insb
add
or
jae
arpl
lods
fwait
push
cli
in
push
orl
or
cmpsb
cmp
lods
add
lahf
push
lods
outsb
xor
mov
nop
iret
jne
pusha
call
cmp
sbb
push
inc
push
jl
push
aaa
jne
stc
xor
dec
mov
pop
test
dec
sahf
jmp
mov
iret
popf
adc
jmp
xchg
into
jns
sub
push
lods
pop
xor
push
maxps
in
arpl
adc
inc
ret
sbb
cld
fiaddl
sbb
das
sbb
ficoml
mov
inc
mov
repnz
push
cld
in
xlat
pop
js
popa
in
or
int3
sub
lret
mov
dec
mov
retw
ror
movb
mov
xor
repz
notb
repnz
fucomp
aas
outsl
adc
inc
mov
mov
fs
adc
mov
mov
mov
lea
je
std
sub
push
jge
and
sub
stos
pop
popa
adc
push
pusha
pop
fmulp
arpl
test
shrl
pop
dec
add
mov
cmp
sbb
sbb
inc
jecxz
in
cmp
push
fistl
int3
aam
test
nop
ja
xor
imul
pop
outsb
mov
pop
jno
rcrb
pop
dec
ret
mov
xor
pop
repz
cmp
loop
xchg
mov
loope
les
loope
out
std
lret
mov
mov
mov
adc
imul
inc
xchg
daa
pop
add
fisubrs
ss
adc
xor
jl
sub
adc
js
dec
mov
daa
adc
mov
and
fldl
imul
jns
jmp
call
push
add
push
sti
cmp
ljmp
cmp
mov
scas
movsb
ret
orb
lods
inc
lret
dec
jle
movsl
and
int3
mov
jge
and
xchg
out
insl
cltd
clc
and
inc
push
sub
push
inc
mov
mov
inc
fsubrl
jmp
in
fmul
cmc
and
jae
call
inc
ds
fidivs
xlat
xchg
push
cld
xchg
lds
popa
cli
push
pop
or
stos
outsb
cli
jmp
lds
cmp
jnp
neg
jbe
fisttpll
push
jle
sbb
out
xor
rorb
jp
xor
rol
arpl
push
scas
scas
aad
int3
jg
cmpsb
sub
repz
aas
add
push
mov
idivl
pop
lock
lock
out
popa
ljmp
jecxz
inc
xchg
cwtl
outsb
das
pushf
insl
push
outsl
scas
or
push
nop
gs
cmp
inc
pushf
dec
dec
mov
fst
loope
xchg
cs
jge
negb
ss
jo
sbb
push
sbb
xor
add
movsb
cmpsb
or
jnp
cmp
in
cmp
sub
xchg
mov
js
sub
in
push
dec
insb
inc
sahf
pand
inc
push
pop
pop
jb
and
fsts
fbstp
cmpsb
ss
dec
inc
mov
inc
ss
jns
mov
rcll
pop
sub
mov
inc
cltd
mov
pop
xchg
jmp
les
xchg
jecxz
or
mov
cmp
cld
mov
adc
in
cmp
stc
out
dec
inc
jecxz
cltd
push
fildll
es
jle
imul
lret
xchg
cmp
out
rcrl
popf
gs
inc
aad
cs
xor
clc
xor
cld
cmp
movsb
cs
push
fnstenv
sbb
pop
xchg
adc
add
jg
sbb
sbb
xchg
dec
sbb
cld
pop
jnp
jae
insb
dec
xchg
aam
fdivrs
or
push
jl
in
push
test
mov
mov
lds
repnz
outsb
pop
ret
test
xchg
fwait
mov
lock
jno
xchg
ds
and
mov
or
sbbb
mov
ljmp
scas
mov
test
les
mov
int3
mov
pop
xor
fdivl
ja
and
mov
cmp
rcr
dec
lcall
mov
jecxz
lods
adc
xorl
cmpsl
pop
dec
cmp
dec
sbb
mov
push
add
inc
xchg
int3
xor
pop
cs
scas
adc
pop
push
jb
sbb
push
mov
and
fistpll
mov
and
movsb
and
dec
xchg
sub
hlt
subl
outsl
adc
std
aam
mov
pusha
pop
adc
test
addr16
ret
mov
hlt
sub
and
xchg
xor
lds
jge
mov
xor
adc
push
or
outsl
mov
lds
pop
sub
mov
scas
movsl
sub
push
mov
sub
in
jg
mov
jbe
add
rcrl
xchg
xchg
or
bound
in
shlb
sbb
pop
mov
push
shlb
cmpsl
test
push
cmp
or
ror
out
sbb
mov
sahf
mov
or
mov
sub
loop
cmp
fcmovb
mov
in
and
outsb
cwtl
cmp
push
test
stos
mov
or
cmp
jne
add
mov
sahf
clc
test
add
jne
out
cltd
mov
xor
push
cs
jo
sahf
xchg
mov
insb
sbb
call
cli
jae
mov
pop
inc
shrl
mov
mov
mov
push
bound
mov
cmp
repnz
dec
sub
sub
imul
fnstcw
cmp
aam
push
popf
fsubl
xchg
and
test
cs
inc
js
div
in
sub
movsl
add
jbe
xorb
push
outsb
cmpsb
or
mov
mov
xchg
je
into
xor
add
jl
cmp
mov
cmp
fadds
ja
cmp
inc
xor
jmp
shrb
call
test
cmp
or
in
xchg
add
xchg
xchg
adc
sbb
int
pop
js
xchg
xchg
je
loope
mov
and
mov
add
fimuls
mov
aaa
mov
sbb
jmp
loope
adc
loopne
mov
addr16
rol
outsl
pop
xor
add
sub
stos
cmc
push
outsl
xor
std
cmp
sbb
add
pop
jae
sub
cld
push
rcrb
test
cmp
imul
ljmp
imul
repnz
mov
or
outsb
cmpl
push
sub
loope
loopne
test
mov
icebp
cs
mov
cmpsb
adc
adc
adc
push
inc
sub
mov
rol
inc
shlb
scas
xchg
xchg
cmpb
popa
add
mov
repz
notl
cmp
jmp
xchg
xchg
sarl
pushf
add
dec
adc
mov
adc
dec
mov
cmp
fwait
xchg
xor
xchg
data16
cli
popa
add
inc
adc
xor
ss
mov
sarb
int3
js
push
mov
lock
jb
mov
mov
lock
add
lcall
jg
fbld
mov
sbb
pushf
xchg
jg
pop
outsb
jge
mov
xor
in
jbe
adc
stos
ror
gs
xlat
xor
insl
mov
fildl
insb
or
div
lahf
icebp
lret
enter
xchg
aas
fwait
jle
inc
imul
aaa
popa
mov
leave
aad
mov
xlat
mov
jmp
xor
or
add
rcll
mov
inc
ss
or
lock
lret
cmp
lcall
xor
cld
out
lods
xchg
outsl
std
lret
push
jmp
outsl
popf
lcall
sbb
scas
inc
xchg
shlb
arpl
cltd
push
lea
test
in
mov
or
lea
loop
jnp
shll
mov
dec
mov
pop
sbb
data16
lock
incb
cmp
in
mov
rcl
into
or
dec
sbb
mov
push
dec
mov
mov
repnz
scas
ss
in
push
movsl
outsl
pop
dec
xor
dec
pop
xchg
sbb
xchg
xchg
mov
mov
push
sbb
out
imul
jecxz
aaa
mov
stos
insl
pop
pop
push
dec
inc
push
imul
mov
mov
pop
lahf
dec
sbb
es
sbb
das
lock
xor
mov
ret
std
jnp
and
push
xchg
fimull
neg
inc
or
popf
int3
ja
fistps
and
in
out
andb
mov
aas
fidivrl
je
xchg
repnz
sbbl
xor
add
mov
lods
cld
pop
gs
sub
jb
andb
mov
adc
inc
lret
cmp
arpl
or
jbe
mov
mov
sub
pop
ficompl
push
and
or
sbb
sar
dec
popa
dec
int3
pop
bound
lea
ret
ret
int3
cmc
pop
adc
cs
mov
cld
jae
std
loope
loop
add
xchg
xor
dec
call
popa
xchg
orl
jno
fs
sbb
pop
mov
xchg
xor
pop
inc
ficoms
sarl
or
mov
in
int
pusha
aam
lods
inc
mov
repnz
cmpsl
jnp
jge
bound
adc
mov
mov
cmpsl
dec
fnsave
in
xchg
scas
repz
pop
xchg
orb
ljmp
jno
mov
loopne
mov
adc
jb
mov
lods
xor
add
mov
push
filds
mov
lds
arpl
pop
orb
and
mov
and
inc
sbbl
sub
cld
xchg
je
mov
rdpmc
arpl
adc
xchg
or
jmp
inc
add
inc
push
push
inc
xchg
adc
movl
ljmp
pop
mov
fisubrs
or
pop
push
push
rcl
lock
mov
xor
hlt
pop
pop
jo
xchg
cmc
das
dec
mov
jle
je
es
outsl
loop
movb
int3
mov
imul
in
or
xchg
sbb
mov
and
mov
lahf
mov
xor
mov
inc
and
inc
jnp
cmp
inc
adc
inc
and
xor
bswap
xchg
push
lahf
aad
inc
mov
cmpsb
inc
dec
fwait
dec
xchg
mov
mov
mov
fs
insb
outsb
gs
aad
out
sbb
jecxz
xlat
stos
sub
mov
dec
arpl
test
pushf
inc
mov
pusha
add
push
lret
inc
adc
xchg
and
cmc
test
sub
jnp
cmpsl
lea
repnz
enter
movsl
fistps
in
jo
xchg
mov
push
in
xor
movsb
fidivl
test
pop
test
outsl
and
cmp
enter
inc
inc
dec
in
dec
adc
dec
inc
pop
fsts
lds
fwait
stc
fstpt
dec
sti
mov
pop
in
inc
out
xor
bound
out
adcb
or
cltd
fwait
mov
sahf
pop
mov
cmc
sbb
and
notl
and
in
pop
clc
stc
sbb
dec
pop
mov
jns
push
xchg
dec
mov
orl
in
and
or
mov
mov
ja
push
and
out
inc
in
push
lahf
dec
out
push
mov
cmpsl
dec
aaa
pop
fwait
das
or
adc
jno
mov
inc
aam
xchg
or
das
rolb
mov
push
mov
jle
shrl
bound
push
cltd
setns
sub
fisubrl
mov
pop
pop
pop
xchg
mov
test
xchg
jnp
shl
mov
fidivrs
das
xchg
pusha
and
sbb
repnz
add
and
jae
std
es
adc
orb
ljmp
ret
pop
jno
jge
ret
repz
sbb
ret
loope
xchg
push
in
xchg
das
jmp
cld
fstl
sub
mov
mov
push
mov
lret
xchg
cmp
adc
mov
jmp
cmp
inc
repnz
mov
xchg
lds
adc
push
shl
leave
jne
enter
or
add
daa
lret
dec
daa
daa
insb
or
shrl
shll
cmp
pusha
ss
or
xchg
push
leave
and
call
xor
or
cmp
sbb
sub
sbb
adc
jnp
notl
test
test
int
hlt
push
jno
push
sbb
jl
mov
mov
cmp
cld
and
shlb
ja
push
ja
gs
adc
dec
sbb
cmp
push
pop
lds
fimuls
cmp
push
popa
sbb
loop
mov
hlt
pop
hlt
adc
jno
inc
xchg
ret
ljmp
pop
mov
fsub
pushf
xchg
xor
imul
daa
dec
sbb
arpl
mov
mov
xor
pop
jb
dec
fs
mov
sub
subb
cmpsl
fidivrl
add
shlb
int3
sbb
and
js
add
jmp
out
aam
add
xor
popa
add
iret
cmpl
or
outsl
aas
jbe
jmp
ljmp
pop
repnz
std
inc
lods
test
mov
insb
insb
daa
out
mov
insb
idivb
stos
rol
jns
jne
arpl
mov
rclb
int
mov
jge
in
hlt
xlat
test
jne
aad
push
push
in
mov
ret
push
dec
dec
xchg
fbstp
hlt
mov
mov
mov
inc
loopne
iret
xchg
aam
jecxz
mov
cmp
add
jmp
jnp
cwtl
dec
jg
iret
test
das
xchg
fsubl
jmp
insl
dec
sbb
mov
pop
inc
inc
addr16
jl
dec
notl
lret
adcb
loope
into
test
adc
int
outsl
mov
iret
xrelease
lcall
mov
push
pop
enter
jo
or
loope
pop
dec
cli
adc
int
mov
cltd
add
dec
inc
cmp
cli
jge
jge
jmp
data16
hlt
lcall
jbe
std
push
push
pusha
arpl
test
mov
fbstp
shrl
cmp
and
decb
dec
enter
mov
loopne
fwait
cld
add
dec
dec
push
cmp
push
xchg
or
bound
jae
or
pop
shll
in
xor
and
mov
fisttps
sub
xor
lock
sbb
jnp
cmp
mov
fstps
pop
enter
shrb
dec
or
push
jne
xchg
push
mov
scas
or
mov
cmp
pop
sbb
outsb
cmp
loopne
stos
jecxz
xor
sbb
jmp
xchg
dec
push
sbb
adc
xlat
jecxz
xchg
mov
xchg
jecxz
in
shlb
test
jb
add
jnp
jecxz
scas
or
clc
sbbb
ret
setge
or
dec
in
in
sti
lret
or
ror
adc
cmc
cmp
sub
push
rcrb
mov
icebp
pop
pop
gs
cs
imull
test
lods
add
in
mov
xor
push
or
out
out
cmpxchg
pop
sbb
scas
cwtl
mov
pop
scas
stos
imul
jmp
ret
dec
cmp
iret
stos
push
push
fsubl
jne,pn
mov
mov
add
test
xor
pop
push
test
cmpl
sahf
push
pop
call
aad
cwtl
aaa
insl
mov
push
andl
fcoml
push
xchg
cld
stc
jecxz
xor
pop
je
pop
pop
mov
cmc
cltd
stos
ficomps
mov
rclb
cs
dec
dec
setno
sahf
loopne
daa
in
icebp
call
mov
jmp
fistl
dec
mov
lahf
add
es
push
mov
mov
dec
lcall
ret
xchg
mov
mov
fists
dec
lret
fcoms
dec
cwtl
and
jmp
sbb
pop
sbb
data16
gs
push
icebp
adc
iret
int3
outsl
xor
cmp
add
xchg
jmp
rclb
int3
sti
enter
and
fisttpll
ret
pop
mov
int
repz
cmp
add
mov
mov
mov
inc
xchg
jge
xchg
or
and
pop
mov
mov
mov
mov
addr16
lea
fdivr
mov
mov
add
sub
inc
mov
push
mov
test
imul
jp
enter
shrb
pop
outsl
loope
sub
mov
in
add
out
lods
dec
mov
scas
push
dec
notb
and
in
inc
pop
lret
fs
jbe
sahf
frstor
or
push
xor
aad
cmp
int3
mov
cmp
rorb
cltd
scas
dec
popa
jb
and
pop
or
pop
std
push
push
ljmp
pop
sti
cwtl
call
jne
jo
xor
inc
mov
mov
or
fldl
jno
push
popf
pop
xor
cld
xchg
mov
xchg
and
push
add
jne
sub
and
out
adcb
jl
xchg
sbb
sbb
or
pop
or
in
insb
inc
sub
cli
lods
pop
outsb
or
fmuls
pop
loope
mov
adc
enter
repnz
push
lret
popf
mov
xchg
dec
lods
or
pusha
push
add
xchg
fwait
lds
sbb
ror
arpl
jg
adc
mov
push
iret
inc
add
les
outsb
orl
push
sub
inc
xor
cltd
inc
jbe
lret
push
push
mov
xchg
in
jb
sub
out
xor
fwait
dec
insb
into
mov
pop
push
nop
fimuls
sub
fcomip
ljmp
rcrl
pop
xchg
mov
add
nop
sbb
incl
lea
inc
mov
mov
loop
xchg
cli
pop
jp
js
xchg
mov
cmpsb
xorb
lahf
test
enter
aas
sbb
js
aam
test
xor
in
push
mov
jo
xor
ds
xor
out
sbb
xchg
or
cmp
dec
pop
ds
stos
dec
xchg
pop
sbb
mov
pop
mov
and
mov
data16
dec
mov
out
sub
adc
add
xor
add
fiaddl
push
enter
mov
clc
fnstenv
dec
aam
adc
pushf
fisubrs
testb
mov
adc
mov
or
push
xchg
mov
add
jb
ret
mov
inc
or
pop
jecxz
popa
imul
es
pop
cmp
rcll
sbb
or
push
cmc
mov
and
jno
mov
add
xor
leave
adc
insl
add
and
imul
or
mov
sbb
cmp
sbb
xor
adc
lret
imull
aad
adc
push
in
mov
repnz
or
data16
fwait
xchg
xchg
mov
dec
xor
or
xor
int
test
iret
mov
cmpsl
sbb
cmp
add
popf
movsl
xlat
mov
push
dec
jo
cmc
inc
lods
call
loop
cs
ja
xchg
or
ret
pop
mov
inc
int3
das
jl
outsb
xchg
mov
lret
fs
shll
xor
cmp
orl
dec
into
and
stos
or
xchg
and
cmp
into
add
sarl
ret
mov
lock
cli
and
dec
mov
std
into
rclb
pop
cmpsl
rol
push
shll
gs
loope
lahf
sub
sub
jle
call
test
push
out
xchg
cmp
push
push
mov
popl
sub
test
movsl
fistl
and
out
or
scas
movsl
lds
xchg
subl
inc
mov
test
add
testl
xchg
xchg
or
dec
arpl
imul
dec
sub
push
fsts
push
adc
cmp
add
push
pop
out
sub
js
dec
xchg
call
mov
out
dec
ja
jb
iret
sbb
mov
xchg
pop
sub
and
pop
mov
aam
xor
enter
lea
cmpsb
push
mov
sub
adc
sub
movsb
popf
clc
mov
cmc
add
inc
or
adc
jmp
call
xor
push
mov
lods
inc
inc
sub
std
dec
jl
adc
gs
jle
loope
xlat
sbb
testl
fisttpl
outsl
call
sbb
ja
in
sbb
iret
mov
sbb
out
xchg
xor
xchg
sahf
jl
enter
int
add
mov
and
rcr
test
pusha
xor
jle
mov
incl
add
push
arpl
dec
ret
jl
mov
pop
adc
loope
sahf
iret
mov
pop
jae
pop
push
jno
add
das
ret
rcr
ljmp
je
or
inc
fildll
inc
push
mov
xchg
rclb
adc
pop
lret
sarb
in
inc
xor
pop
inc
hlt
mov
cmp
adc
adc
cmp
mov
pop
adc
jle
push
arpl
loop
mov
jns
mov
xchg
imul
gs
xchg
iret
int
mov
dec
in
pushf
cli
dec
sbb
into
mov
mov
loope
setne
sbb
mov
les
out
sub
jb
push
xchg
sub
std
fdivrs
arpl
xor
mov
jl
es
push
rorl
jo
enter
in
jle
imul
lahf
int3
aad
push
divb
push
mov
mov
dec
push
inc
adc
push
sbb
push
je
add
mov
mov
cmc
sub
movsb
aaa
imul
shll
jne
into
lcall
and
pusha
arpl
sbb
sbb
push
pop
jecxz
sbb
mov
inc
dec
inc
sub
mov
sub
pop
or
or
shll
push
sub
ficomps
outsl
sbb
fldcw
and
iret
clc
cmp
mov
data16
jg
add
sub
jmp
ret
lahf
loop
and
dec
sbbl
xchg
inc
shrl
in
mov
stos
cmp
push
test
mov
adc
xor
cmc
mov
add
sahf
fildll
cmp
int
decl
and
jge
fnstcw
mov
lcall
imul
bound
cmp
inc
sub
cmpsb
fcoml
ss
adc
cmp
mov
les
lock
lock
pop
aaa
fisttpll
in
xorl
adc
mov
out
mov
out
sahf
mov
es
adc
es
test
fildl
xor
jge
fwait
jae
daa
mov
js
and
das
outsl
icebp
lahf
mov
dec
fnstsw
and
lea
rcll
imul
adc
cmp
mov
xchg
out
inc
push
rcr
fisttps
jle
in
xor
inc
scas
mov
or
arpl
lahf
sub
test
jmp
push
or
out
enter
add
lret
jg
inc
insl
add
lret
dec
push
cli
adc
jmp
mov
test
mov
pop
cltd
rcrl
jb,pt
stos
shrl
lods
adc
pop
mov
loopne
mov
add
xchg
xlat
adc
fmuls
or
inc
xchg
and
mov
pop
mov
fwait
sub
je
cmp
test
loopne
outsb
and
adc
xchg
je
dec
int3
mov
gs
push
test
int
jecxz
andl
imul
aaa
out
bound
dec
mov
jb
call
test
adc
loope
xlat
test
and
iret
cli
fwait
pop
ljmp
sbb
outsb
iret
sbb
test
sti
leave
ljmp
inc
out
je
or
insl
aad
ret
jno
add
andl
xor
pop
std
js
jg
aas
or
aas
leave
mov
ret
sub
xor
add
and
adc
loop
mov
lcall
lret
popa
push
loopne
or
ss
push
lods
push
lcall
icebp
push
mov
and
in
fucom
or
std
pop
push
dec
shufps
test
jb
jno
jb
aas
cmp
push
push
lcall
xor
cli
sbb
add
pop
jge
je
enter
jne
dec
fidivs
in
and
into
call
pop
add
sub
int3
mov
pusha
push
add
pop
orl
test
xchg
or
adc
add
insb
sti
pop
lret
add
push
push
mov
sti
mov
add
jns
inc
fcompl
aad
dec
or
and
dec
dec
lret
inc
lods
xor
shrl
sbb
mov
ljmp
xor
rcr
lcall
inc
scas
and
push
lahf
pop
pushf
out
aad
mov
pop
add
iret
jo
sbb
mov
pop
jecxz
pop
dec
add
pop
test
scas
leave
decl
out
adc
push
push
cmp
data16
dec
sbb
loopne
mov
cmp
pop
dec
sub
into
xchg
ljmp
mov
cli
cmpl
ljmp
das
mov
fdecstp
jnp
xor
rcll
xor
xor
enter
jae
pop
sub
push
ss
push
xchg
or
xor
insl
cs
pop
ret
std
sarl
out
xchg
hlt
sahf
inc
jbe
sbb
fs
daa
sub
clc
pop
dec
hlt
rcpps
ret
xchg
andl
xchg
xor
mov
jl
adc
pop
or
xchg
es
and
mov
add
fnstcw
sbb
jnp
cmc
sahf
and
add
les
adc
jmp
mov
push
stos
cmp
adc
out
push
test
fisubs
aad
lret
pop
test
sahf
dec
and
push
setle
add
dec
dec
sub
cmp
mov
fwait
xchg
dec
add
push
push
pop
adc
fmuls
cmp
aad
mov
int
iret
cmpsl
stos
mov
call
jecxz
nop
inc
xchg
cmp
cmp
xchg
pop
push
mov
pop
lock
jb
addr16
pop
mov
nop
sbb
imul
pushf
mov
out
jnp
stos
push
roll
mov
pop
mov
cli
repnz
or
fstps
push
arpl
inc
xor
cs
mov
mov
js
mov
dec
cmp
dec
pop
ror
xlat
xor
xchg
pop
push
add
subl
add
aam
jl
add
and
dec
sbb
add
cmp
push
inc
inc
nop
in
inc
push
js
and
jnp
mov
das
xor
aas
and
sbb
dec
cmpsl
push
scas
icebp
mov
aaa
jle
jge
int3
sub
aaa
lds
push
push
pop
jbe
pop
cmp
pop
adc
xor
hlt
pop
outsb
subb
jbe
mov
dec
pop
pop
imul
mov
or
inc
inc
pop
mov
notl
jl
xor
in
iret
mov
adc
pop
iret
jle
xor
xchg
sub
adc
jae
insb
xchg
jno
inc
lea
adc
lods
rorl
mov
roll
xor
outsb
test
push
sahf
fisttpll
jge
leave
inc
and
lods
mov
icebp
addl
arpl
mov
xor
arpl
mov
sahf
pop
push
daa
jle
scas
jmp
rclb
cmp
cld
cltd
mov
int3
out
pushf
mov
mov
mov
mov
add
movb
stos
mov
es
dec
addr16
jg
mov
jns
pop
xchg
test
push
arpl
sub
sbb
adc
or
cmp
mov
es
dec
leave
jno
loop
sub
pop
repnz
ja
enter
test
lea
sub
out
test
push
xor
push
inc
and
dec
test
test
fisttps
fsubrl
inc
lds
loope
call
mov
mov
out
fwait
lret
pop
mov
mov
cld
insl
daa
xchg
cmc
cmc
adc
push
call
or
or
rcr
shll
cmc
daa
dec
mov
mov
in
dec
and
call
add
cmc
fs
or
sub
or
aam
and
insl
les
push
push
lods
push
outsb
hlt
or
adc
in
lds
loop
cmp
mov
arpl
clc
das
data16
or
xor
into
xchg
adc
cmp
add
pusha
cmp
or
inc
mov
loopne
cmp
add
stos
dec
fwait
mov
stos
shrl
scas
pushf
gs
sub
shrb
sahf
sub
cmpsb
iret
xchg
sahf
aaa
dec
push
and
adc
jno
sahf
scas
jp
pop
mov
mov
mov
pop
inc
jp
fwait
dec
pop
bound
xchg
mov
cmp
add
cld
into
daa
pushf
inc
mov
adc
push
add
and
cli
mov
xchg
test
push
clc
call
shll
int3
sub
ret
fcomps
rcrb
jns
inc
scas
out
mov
jb
sub
mov
cwtl
sub
mov
and
cmp
clc
and
add
dec
out
enter
or
or
mov
je
mov
test
cmp
inc
mov
sbb
leave
test
cmp
jne
dec
aas
fs
ja
push
inc
push
push
fidivrl
sbb
and
out
sbb
fwait
jno
lods
das
push
sbb
lret
sbb
mov
push
lock
or
cli
int
jae
jae
call
bnd
sub
aaa
inc
sub
imull
xor
jecxz
mov
addr16
lret
pushf
lock
add
mov
aam
jno
out
ja
out
jle
xchg
push
mov
les
shrl
js
add
outsb
mov
mov
xchg
addb
movsb
mov
aad
or
mov
lcall
and
inc
in
or
mov
cmp
lods
sarb
addr16
mov
fisubl
pop
test
push
push
inc
inc
add
cli
stos
fwait
rcrl
stos
dec
mov
dec
or
repnz
inc
daa
dec
lahf
jb
cmp
ja
push
push
inc
out
scas
test
push
subl
inc
adc
pushf
push
outsb
rolb
rorl
addr16
dec
xor
push
xacquire
stc
or
jne
add
dec
xor
test
call
push
sarb
aam
popa
sti
inc
sbb
addl
cs
pop
sub
loopne
dec
jp
adc
cmp
loop
pop
lds
in
pop
dec
fs
outsl
fiaddl
loopne
cli
jo
dec
rolb
sub
push
push
sbb
roll
test
fldcw
mov
adcl
mov
bound
mov
jbe
push
insb
int3
inc
push
lds
dec
pop
insb
mov
aad
adc
and
hlt
and
push
jp
sbb
aas
push
test
push
pop
loopne
test
mov
repnz
or
fistl
aaa
imul
pop
aaa
outsb
and
sahf
adc
sub
lock
jg
nop
test
and
lds
cmpsb
test
fisttpll
dec
in
add
mov
ja
jg
xorl
adc
sub
in
fistps
dec
xor
fimull
xchg
aaa
je
mov
xor
ja
shlb
mov
pop
push
fdivrl
test
pop
fdivrl
pop
or
xor
jle
out
sahf
inc
inc
fsts
pushf
mov
and
and
or
inc
pop
cmp
std
jne
leave
or
add
imul
push
outsb
addr16
mov
fsubl
iret
lock
xlat
jge
lret
jae
daa
push
gs
jbe
or
jp
aad
push
or
mov
ret
cmc
jnp
loopne
or
push
jecxz
xchg
jge
adc
xchg
or
mov
sbb
lock
add
mull
xor
iret
or
push
add
imul
shrb
jo
pop
jge
and
mov
and
xor
mov
mov
call
dec
dec
cld
subl
sub
push
and
sub
aaa
lds
inc
lods
xor
aam
das
adc
mov
pop
push
add
xchg
ret
stos
push
push
sti
aad
or
mov
mov
sahf
xor
sbbl
mov
push
arpl
sub
lcall
sbb
cmp
xchg
stos
pop
fwait
xchg
ret
xor
cmc
cmpl
cmpsl
jo
lods
roll
fs
jns
cmp
fidivrl
push
mov
xor
mov
jle
pop
popf
push
ss
or
cs
xlat
mov
inc
into
jns
or
sub
xor
out
lods
ret
xorb
jle
rorl
xlat
push
cli
jl
std
sahf
xchg
pop
cmp
inc
les
ret
scas
add
or
jmp
lock
fidivl
aad
popa
aas
and
mov
stos
pop
ror
mov
or
lcall
sbb
stos
pop
addl
pop
test
adc
ror
push
dec
les
popa
mov
xlat
icebp
cld
aad
cld
mov
sbb
and
cli
xor
mov
jl
scas
sbb
inc
sahf
pushf
cld
sbb
fadds
aaa
pop
push
popf
push
mov
xchg
das
lock
call
fsubrl
jae
cmc
pop
out
popa
nop
cwtl
stc
fwait
add
xchg
daa
mov
mov
adc
adc
push
mov
lock
int
dec
incb
push
jl
xchg
leave
fnstcw
dec
mov
enter
mov
push
loop
jp
sub
mov
je,pt
and
mov
and
lret
aam
repnz
xchg
xchg
fstl
ret
inc
int3
loope
jle
loope
push
lods
xor
xorb
insl
jmp
sub
cmpsb
dec
xor
xor
mov
icebp
loop
mov
repnz
orl
push
xchg
inc
push
push
mov
cmp
cmp
movb
imul
sbb
dec
fucomip
lock
jno
aad
shrb
ret
push
dec
fs
sub
xor
push
pop
and
mov
push
in
pop
dec
arpl
or
pop
jae
in
jbe
cltd
add
mov
lcall
ds
negb
es
jecxz
cmp
xorb
jno
int3
movsb
mov
add
lea
dec
cmp
jl
cmp
push
cmp
jns
or
arpl
pop
repz
mov
cli
ret
pop
dec
or
mov
jnp
sbb
in
sub
sub
pop
mov
test
out
repz
jp
fs
mov
push
pop
pusha
test
loopne
je
gs
lods
imul
lock
jecxz
add
mov
cmpsl
out
push
and
lret
xchg
je
fistpl
push
adc
sub
mov
rorl
call
mov
aam
movsl
iret
dec
inc
stos
in
fwait
mov
popf
cmp
loope
and
in
xchg
sar
lock
jle
inc
push
lret
jge
mov
xchg
loopne
dec
push
mov
mov
jns
pop
cmp
adc
and
jg
out
xlat
leave
adc
cltd
or
mov
mov
bound
sbb
or
mov
pop
andb
stos
mov
xchg
xlat
stc
cmp
and
shrl
js
xchg
std
dec
pop
and
or
add
xchg
cmpsb
jge
sbb
cmpl
sbb
mov
jmp
sbb
inc
or
dec
outsb
hlt
test
add
cmp
or
cmp
inc
scas
sbb
adc
xchg
fisttpll
mov
jmp
or
adc
or
inc
push
jg
jg
jp
and
sahf
fisubs
sub
push
push
je
mov
dec
inc
enter
add
and
push
cmpl
rcrb
or
popa
ss
out
ljmp
inc
mov
movsl
or
insl
cmpsb
test
fyl2xp1
inc
jp
mov
cs
les
fs
xchg
or
push
lahf
addr16
mov
shrb
push
pop
hlt
inc
fdivr
insl
add
xchg
and
in
push
ret
movsl
inc
icebp
into
adc
aad
inc
xchg
xor
mov
out
loop
mov
imul
cmpsl
inc
or
in
insb
add
mov
mov
inc
or
jno
mov
cmpsl
add
push
sub
cmpsb
xor
pop
fnstsw
or
nop
popa
mov
inc
dec
fstl
out
jns
mov
or
lds
dec
outsb
cmpsb
or
add
add
cmc
or
movsl
add
mov
dec
shlb
rorb
sbb
inc
add
push
nop
pop
xchg
test
sub
js
icebp
mov
fistl
sbb
jg
xchg
cmp
jl
xor
outsl
and
mov
pusha
xor
or
iret
dec
xchg
dec
xor
cld
pop
sarb
mov
test
pop
outsl
push
into
or
fs
and
mov
cmpsl
add
cmp
adc
jle
ret
addb
movsl
mov
mov
and
sub
inc
dec
or
in
leave
adc
lock
js
jle
push
pop
hlt
mov
mov
xor
mov
mov
mov
push
xchg
jge
or
adc
inc
enter
or
and
enter
adc
xchg
filds
enter
es
inc
roll
sbb
inc
adc
jns
aas
or
xchg
push
or
adc
push
and
imul
and
mov
mov
ds
push
or
adc
mov
call
repz
or
push
movsl
cmp
jo
push
pop
js
data16
notl
and
cmpl
cwtl
popf
mov
inc
mov
iret
mov
xchg
rolb
xlat
loopne
sete
loopne
mov
mov
loope
mov
pop
cmp
xchg
jae
jecxz
dec
lcall
cltd
push
pop
xor
xor
mov
push
test
push
pop
mov
xor
jp
lahf
inc
mov
pop
outsb
in
out
int
sbb
loop
lock
dec
in
pop
inc
lds
fdivrs
xchg
mulb
rcll
stos
pop
push
push
push
mov
jmp
cmpxchg
aad
jno
jecxz
fildll
jo
jp
xchg
ljmp
leave
add
test
aam
std
mov
mov
xor
clc
dec
popf
clc
scas
iret
push
cmpsb
jne
push
addr16
or
push
jo
or
push
push
adc
fidivs
mov
and
in
out
lods
int
push
inc
lcall
cmp
pop
inc
daa
iret
in
mov
je
test
add
sbb
imul
ja
in
std
pop
jmp
mov
mov
ja
aad
mov
pop
loopne
fsub
stos
dec
imul
cmp
loopne
xlat
testl
fwait
cmp
aaa
xchg
or
jno
insl
scas
mov
jecxz
je
inc
jge
add
push
cld
jmp
and
loop
push
pop
rcr
lea
cltd
mov
mov
iret
jecxz
dec
clc
push
fmull
push
je
jbe
mov
sbb
ret
mov
push
pop
pop
inc
adc
bound
rorb
in
pop
mov
dec
sbb
fstpt
pop
mov
lret
sbb
rorl
and
mov
nop
stos
push
push
das
repz
xor
addb
sahf
sbb
fsubrl
fsubrs
rcr
xchg
pop
inc
imul
out
adc
lcall
xor
nop
mov
adc
aaa
xchg
jle
cmp
pop
int3
sub
mov
xor
dec
lea
rclb
faddp
clc
dec
imul
jge
or
std
push
sti
fwait
push
subl
dec
bound
adc
mov
fistl
jne
inc
loop
adc
ja
and
arpl
inc
stos
inc
repz
dec
lds
rcrl
push
leave
pop
adc
push
lea
movl
sub
subl
movl
lock
icebp
mov
add
pop
pop
and
cld
xor
mov
pop
insb
mov
sbb
jge
ret
gs
cmp
xor
push
jae
in
out
repz
jno
iret
lret
gs
add
mov
mov
loop
cmp
xorb
clc
lahf
hlt
pop
aas
and
das
push
adc
sbb
ja
aaa
sub
lret
cmp
rcl
dec
imul
add
mov
lods
jo
pop
jmp
mov
int3
stc
lret
ss
cmp
out
jns
inc
mov
test
push
pusha
scas
shlb
inc
jns
pop
lss
pop
shrb
jecxz
or
aad
jg
fstps
mov
xchg
int3
push
pushl
test
jo
sub
imul
mov
mov
push
bound
les
lods
adc
push
jne
clc
jo
mov
sub
dec
jbe
loope
cmp
pop
nop
push
test
orps
jl
jmp
cmpl
jae
and
ljmp
mov
je
rorl
hlt
orl
fldenv
cmpsl
pop
inc
xchg
adc
jmp
push
into
add
es
test
mov
mov
and
adc
xor
xchg
cld
test
lods
data16
mov
and
mov
push
out
ja
ss
inc
mov
pop
jno
inc
cld
lods
sbb
insb
cmp
sarb
mov
push
xor
adc
shl
xchg
repz
dec
and
mov
xchg
dec
mov
sbb
push
pop
enter
lods
ljmp
das
shll
sbb
mov
cmp
stos
adc
mov
add
jle
push
pushf
mov
jnp
pusha
out
mov
dec
cli
fsubl
mov
loop
outsb
cmp
pushf
jmp
shll
jb
xor
out
mov
mov
or
mov
imul
push
jmp
test
jnp
stos
ret
mov
das
xor
push
fiadds
and
pop
sahf
and
and
dec
fnstcw
add
jno
jbe
into
sub
xchg
xor
mov
lcall
xchg
lds
pop
movsb
mov
sbb
mov
pop
stos
nop
push
push
lret
mov
cmp
adc
push
cmp
lods
xor
and
out
jmp
mov
mov
inc
ds
daa
aas
pop
pop
xor
out
xor
and
mov
pop
mov
add
jnp
sub
mov
inc
popa
add
cmpsl
cmp
data16
xchg
push
sub
mov
sub
push
lods
pop
sti
rorl
cltd
push
cld
mov
lahf
push
sub
in
cwtl
fxch
aam
or
cmp
cmpsb
pop
loope
inc
xchg
rcr
jno
adc
lds
xchg
rcll
jp
fldpi
sbbb
fs
testb
fwait
les
jp
and
mov
out
adc
inc
add
fistps
js
cmp
xchg
cld
cmp
xchg
push
jns
jnp
sbb
pop
daa
dec
js
int
jge
ss
add
jge
inc
gs
hlt
inc
add
ficomps
pop
mov
inc
icebp
les
mov
das
push
adc
pmullw
ret
mov
xor
flds
js
jge
ljmp
cmc
clc
inc
inc
jbe
enter
xchg
sub
cmp
lret
pushf
sahf
cmp
popf
xchg
incb
hlt
ret
add
or
test
push
das
sar
lret
sub
js
out
sti
push
add
push
or
xchg
xchg
mov
fs
mov
mov
loop
shlb
mov
pop
and
shll
push
cmp
ss
sub
sub
push
mov
ficoml
jns
ja
mov
jb
loop
xchg
nop
inc
push
xchg
adc
ds
incl
sub
xor
xchg
adc
push
pop
out
pop
push
push
data16
mov
loop
mov
test
paddq
fisubs
aaa
shr
mov
call
cld
lea
aas
mov
stos
scas
out
inc
xor
mov
out
xchg
sbb
sti
nop
icebp
mov
das
inc
outsl
in
int3
mov
fsubrl
in
cld
pop
sahf
add
popa
std
jp
mov
pop
lahf
inc
jg
stos
add
fcoms
mov
cmpsb
lea
imul
pop
mov
ss
push
out
outsb
inc
lods
cmp
jl
jle
in
xchg
inc
adcl
repnz
xchg
in
xchg
aaa
mov
clc
outsb
loope
fmull
lods
popa
add
and
shrb
lahf
push
xor
jae
int3
mov
fimull
cmc
mov
mov
sbb
incb
sbb
xchg
sbb
pop
out
cmp
imul
orl
dec
pop
xchg
push
mov
adc
addr16
fdivs
lds
dec
dec
cltd
inc
mov
sti
cmp
push
in
or
sbb
pop
fcoms
cmp
xor
or
pop
popl
fldenv
mov
in
fadds
icebp
pop
sbb
loopne
lea
insb
adc
mov
and
inc
ret
les
push
inc
mov
cmp
hlt
loope
sbb
ror
ret
imulb
addr16
pop
fstl
push
in
sti
add
loope
jne
pop
jnp
adc
das
aad
in
xchg
mov
lcall
mov
xchg
jae
xchg
mov
or
or
sbbl
or
addl
lret
adc
pop
lock
les
jle
cmp
jg
sub
xchg
pop
imul
cld
sti
mov
ljmp
out
mov
lods
sbb
fidivl
out
in
cmp
imul
ljmp
ret
jnp
and
jp
hlt
sar
xor
jecxz
int
lcall
pop
cltd
mov
xor
dec
push
push
ret
push
push
mov
jg
sbb
je
jle
int3
adc
sahf
jnp
and
sbb
inc
xchg
iret
pop
repz
and
cmpsl
mov
xlat
jno
cmc
mov
add
adc
popf
pop
call
push
loop
pop
das
lods
ljmp
sbb
enter
pop
xor
sub
outsb
add
lods
pop
jnp
xor
rol
dec
fwait
pop
inc
call
add
daa
imul
sbb
or
fstl
mov
mov
repz
cmc
xchg
cmp
das
arpl
xor
mov
mov
cmpb
dec
repnz
dec
dec
push
inc
mov
imul
fs
sbb
fucomp
push
dec
xor
jnp
test
or
ss
lea
lea
jo
mov
adc
mov
xor
popf
rcll
loopne
inc
movsl
fimull
movsl
addb
cmp
fs
nop
fldl
lahf
cld
lock
lds
inc
mov
movsb
fisttpl
imul
clc
pop
das
mov
mov
mov
aaa
push
test
test
mov
mov
xchg
and
bound
cltd
cmc
iret
inc
outsb
shlb
or
inc
push
jne
nop
add
add
inc
mov
stc
xchg
sarb
jo
mov
dec
xchg
out
dec
sahf
test
mov
xchg
test
movsl
loop
inc
std
cmp
es
sbb
push
test
sbb
or
cwtl
mov
jbe
xchg
mov
mov
aam
or
jp
lret
movsl
sbb
adc
sbb
stos
ficoms
push
inc
shlb
aaa
outsb
nop
fisttpll
adc
outsb
lods
repnz
mov
sbb
pop
and
sbb
pop
pop
mov
mov
mov
inc
rep
cltd
mov
adcl
mov
imul
cwtl
lea
or
pop
call
in
test
outsl
arpl
xor
dec
cs
xchg
push
cmp
push
push
xchg
xor
fadds
lea
fbld
add
pop
cmpsl
sub
roll
mov
fs
jnp
fwait
scas
cld
notl
jg
mov
lea
mov
pop
cmp
sub
fs
loopne
in
dec
aaa
push
fwait
inc
mov
imul
int
mov
mov
rorl
in
fwait
jne
gs
add
insb
lods
popa
cmp
lcall
xlat
cmp
and
mov
lret
pop
sbb
mov
cltd
lcall
mov
sub
movsl
imul
popf
adc
test
in
popa
js
in
sub
shlb
cmpsb
cmpsb
sahf
inc
fdivrs
add
arpl
mov
mov
or
movsl
sti
ret
incl
sub
loopne
xchg
jmp
sbb
loope
adc
adc
repz
push
in
jnp
add
in
pop
push
mov
lret
jo
pop
jb
int3
shll
cs
sbb
mov
mov
dec
jp
xchg
int
pop
std
adc
idivl
and
les
xchg
jns
or
out
clc
dec
pop
add
movsb
sub
adc
es
mov
push
add
ss
insb
stc
xchg
je
ret
push
pop
out
out
mov
std
push
cmp
pop
out
sahf
es
enter
cli
hlt
inc
repz
loop
addr16
or
into
mov
mov
inc
mov
cmpsl
inc
mov
mov
sub
cmp
andl
add
ret
cmpb
scas
fs
loopne
add
out
aaa
pop
cmc
lret
sub
adc
jae
test
outsl
sbb
cmpsl
pusha
jbe
std
and
out
or
notb
outsb
xchg
sbb
jmp
xor
clc
sarb
mov
inc
mov
es
xor
push
jle
or
pushf
add
jbe
adc
pusha
mov
lods
add
add
mov
sbb
data16
cltd
push
mov
xor
jno
inc
dec
call
stos
cld
sti
outsl
js
sub
pop
fnstsw
in
push
inc
cli
or
or
and
cmpsb
sbb
dec
pop
dec
aas
jecxz
sti
ret
or
int
inc
push
dec
jns
hlt
repz
in
xchg
jb
sbb
dec
movsl
pop
cld
call
xchg
xchg
js
inc
movsl
dec
jp
lods
and
stc
lds
insl
inc
xchg
and
push
int3
pop
not
jecxz
fldl
push
incl
mov
fnstcw
pop
in
roll
repz
inc
sahf
movsl
xchg
lea
les
push
xchg
in
cmp
sbb
loop
dec
xchg
or
adc
ljmp
shl
add
jns
adc
mov
mov
clc
or
mov
aaa
push
push
xchg
sahf
sub
in
sbb
sub
mov
imul
dec
and
xor
sbb
jge
add
mov
mov
loopne
in
cltd
lahf
jo
pop
and
shrb
std
pushl
stc
dec
rcl
inc
mov
cmpl
cmpsb
out
and
push
stos
push
dec
adc
mov
push
sti
or
arpl
mov
push
je
inc
dec
enter
jne
xchg
adc
adc
pop
hlt
sub
pop
cwtl
sbb
les
je
aas
test
shlb
cmp
pop
fstps
mov
fisubs
pop
mov
push
cmp
sbb
test
xchg
sub
pop
clc
jecxz
nop
xchg
sub
movsl
and
call
add
fiaddl
xchg
dec
loopne
push
cmp
mov
fsubr
fs
and
fisttpll
cmp
push
push
std
insb
repnz
fsub
fcmovnbe
fists
inc
push
mov
emms
sti
movsb
cmp
xchg
xchg
icebp
and
dec
jb
mov
push
and
test
or
aad
fxch
sbb
pop
fisubrl
xchg
xor
or
leave
movsl
sub
outsl
xchg
roll
jae
sbb
xchg
mov
dec
cmp
inc
fistl
bound
fs
insb
shll
test
sbb
mov
inc
lock
dec
dec
and
enter
out
icebp
adc
hlt
in
sub
pop
adc
rcrl
scas
mov
xchg
xchg
in
pop
pop
out
inc
repnz
sbbl
hlt
pop
bndstx
sbb
icebp
mov
mov
test
pop
xor
push
jbe
test
mov
inc
and
orb
mov
repz
jle
lcall
pop
and
xor
cltd
mov
testb
mov
dec
xchg
and
data16
inc
dec
fmull
lret
lahf
and
mov
stos
lcall
sbb
inc
lea
adc
dec
or
jge
mov
enter
or
xchg
inc
sar
cltd
lock
and
pop
push
lea
adc
popa
ja
and
test
sub
xor
cmp
cmp
jle
sub
pop
push
push
adc
insb
dec
cmp
lock
pop
test
cmpsb
popa
sub
mov
gs
mov
insl
push
and
gs
or
pop
inc
cld
out
mov
cmp
data16
push
adc
jge
mov
sbb
ss
fcmovu
xor
lds
xor
inc
dec
movsl
xchg
sub
mov
sbb
mov
push
gs
cltd
push
mov
xor
xchg
int3
jecxz
fnstenv
stos
xor
cmp
je
shrb
jmp
scas
test
into
mov
xor
ret
inc
addr16
stos
pop
sub
ljmp
mov
out
and
dec
stos
int3
cmp
insb
imul
sbb
and
pop
and
pop
dec
pushf
incl
xchg
arpl
inc
jg
sbb
push
in
daa
pop
ficomps
push
pop
aad
insb
gs
cmp
add
pop
fldl
sbb
cwtl
sarl
dec
adc
add
or
rcrl
gs
or
push
clc
jbe
jg
cmpsl
cmpl
aaa
inc
sub
pop
sub
lods
in
ja
lret
loopne
pop
jmp
pop
test
negb
loopne
push
int
cld
or
xchg
lcall
add
les
dec
mov
or
or
xchg
push
imul
cs
enter
dec
add
sub
jmp
iret
mov
outsb
clc
jbe
jmp
xor
jbe
cli
test
sbb
push
xchg
bound
pop
jle
add
cmp
xchg
scas
xchg
out
pop
mov
outsb
mov
xor
sbbb
cltd
mov
out
push
xor
jae
outsb
cmp
mov
sub
adc
shll
popa
gs
push
xor
aam
shlb
mov
clc
push
push
enter
inc
loopne
or
movsb
iret
mov
nop
adc
dec
mulb
daa
pcmpgtb
aaa
cmc
xchg
mov
std
icebp
dec
loope
popf
jns
push
push
sti
push
scas
cmp
pop
dec
hlt
adc
jmp
cmpsl
dec
in
cmpsb
aas
ljmp
xor
movsl
fdivl
in
adc
mov
xor
mov
jae
mov
push
xchg
pop
test
fwait
xlat
push
rclb
cwtl
ret
out
or
mov
xor
insl
dec
dec
inc
fsts
cs
or
sbb
jmp
es
stc
js
mov
push
jl
div
and
aad
inc
mov
xchg
xchg
cmc
xlat
push
pop
dec
sbb
jmp
rcll
adc
sub
pushf
xchg
lahf
fdivs
in
jecxz
orl
cld
mov
sub
ja
xor
sbb
hlt
xor
lret
xor
xchg
cmpsl
push
mov
mov
sbb
in
push
mov
cmpsl
mov
mov
cmp
mov
imulb
add
sbb
out
mov
cmp
dec
aad
inc
adc
in
mov
sub
call
gs
xchg
loope
dec
sub
cld
fdivrp
rolb
pop
mov
or
jecxz
adc
sbb
adc
inc
int3
dec
push
dec
xor
icebp
enter
mov
sub
rcll
js
cmp
fidivrl
xchg
mov
lret
push
mov
pushf
movsl
inc
mov
insb
xchg
popf
xor
adc
add
lock
cmp
pop
adc
xchg
add
add
stc
push
fistpl
inc
mov
aas
int3
mov
mov
dec
inc
ret
sti
scas
push
jp
add
pop
clc
imulb
insb
xchg
mov
mov
dec
push
fistpl
rorl
fnstsw
cmp
repnz
aad
cmp
mov
adc
mov
inc
ret
cmp
ja
or
pop
sbb
fidivrs
jmp
mov
inc
sub
call
inc
mov
sub
mov
pop
sub
mov
out
jp
mov
dec
jl
sbb
sti
outsb
ja
pop
pop
frstor
popf
and
js
adc
jno
ljmp
inc
in
pop
sbb
ja
cmp
lods
xchg
dec
jmp
aaa
add
mov
cld
and
sub
es
push
pop
cmpsl
sbb
enter
imul
loop
scas
icebp
scas
inc
fstps
data16
jne
movsb
subb
xor
imul
out
dec
lds
stos
hlt
pop
inc
ljmp
xor
faddl
adc
outsb
stc
mov
scas
mov
ja
dec
hlt
push
gs
stos
pushf
pusha
add
aas
jbe
mov
mov
cmp
movsl
mov
int
sub
lret
pop
icebp
jle
sbb
mov
dec
shll
cltd
dec
mov
dec
lret
push
js
wrmsr
dec
ss
data16
int
adc
test
aad
sbb
je
out
sbb
pop
insb
insl
rorl
push
je
ja
inc
bswap
pop
fcomps
jns
les
pop
clc
fwait
loop
leave
xor
es
pop
shll
pop
sahf
mov
add
mov
cmc
push
or
add
mov
imul
ds
xor
push
adc
mov
jo
cmc
dec
daa
dec
fisttpll
dec
mov
cmc
push
mov
dec
push
nop
mov
and
mov
es
out
inc
movb
test
clc
and
fimuls
xor
pop
movsb
cld
ret
xchg
fistl
jp
push
clc
push
pushf
mov
fwait
xor
flds
js
aad
or
int
xor
outsl
scas
push
dec
mov
pop
jmp
sbb
add
mov
out
or
test
cmc
mov
mov
fsubrs
or
xchg
lret
xchg
jl
pop
sbb
lcall
out
push
push
dec
mov
xor
mov
cmp
jmp
cli
imul
and
inc
xchg
jno
push
xor
bound
into
inc
push
mov
xor
fildl
jg
cli
add
add
adc
and
pop
mov
movl
cmpb
xchg
cli
pop
jo
sub
push
repz
xchg
mov
lret
pop
xor
aaa
loop
ja
leave
jl
pop
push
jle
push
repnz
sub
rcrl
add
int3
xor
sahf
mov
adc
addr16
mov
or
js
and
mov
inc
xchg
sub
push
stos
cmp
adc
or
or
mov
jo
ret
sbb
adc
test
lods
movsl
add
aas
adc
push
pop
cwtl
push
add
iret
and
or
adc
lock
clc
daa
gs
inc
fisttpl
sub
mov
orb
repz
insl
push
xor
aaa
or
rol
cwtl
lods
sbb
fistl
lret
scas
inc
fisttpl
lods
inc
mov
cmpsb
jae
loop
or
es
ljmp
and
dec
test
push
mov
pop
mov
inc
bound
push
cmp
mov
inc
jmp
adc
insb
addr16
lods
mov
pop
stc
bound
out
or
pop
cmovp
arpl
mov
hlt
inc
xchg
push
imul
jnp
clc
stc
xchg
and
push
push
movsb
add
jge
mov
es
xorb
and
out
rcr
cmp
adc
xchg
fwait
mov
sub
sub
xor
mov
sti
or
mov
dec
icebp
cli
movsl
lret
ffree
hlt
mov
shrl
loope
mov
pop
je
pcmpgtw
rcll
fdiv
dec
aas
aaa
pop
in
mov
mov
pop
mov
mov
aam
cmpsl
das
or
ds
sarb
adc
pop
daa
push
out
sti
and
or
sbb
fs
stc
std
adc
cld
das
adc
push
dec
popa
rcrb
clc
sbb
inc
dec
pop
aam
scas
sti
sbb
in
sarb
xchg
inc
das
ja
iret
or
sub
cmp
jne
cmpsl
f2xm1
scas
cmp
pop
addr16
repz
nop
hlt
lods
add
mov
dec
push
sbb
cld
popa
adcl
xchg
mov
andb
lds
into
pop
shr
out
push
mov
mov
inc
stos
cmpsb
mov
sti
mov
mov
seto
clc
test
mov
clc
rolb
mov
subw
pop
and
bnd
jne
hlt
push
ret
pop
fistpl
ficoml
in
call
popa
data16
jns
movsb
add
mov
xchg
inc
out
xlat
xor
ds
add
jl
add
and
les
nop
fmul
out
dec
pop
cmc
sub
or
nop
jae
or
gs
sti
push
sub
add
mov
pop
into
pushf
dec
xor
in
mov
and
xor
out
sub
inc
xchg
mov
inc
adc
daa
scas
std
mov
sbb
bound
jb
jne
xchg
mov
data16
or
mov
out
adc
add
sub
nop
pop
in
loopne
stos
and
insl
out
add
daa
in
cmp
pushf
jno
pop
sbb
lods
or
call
mov
ljmp
cmp
push
sbb
idivb
call
dec
sbb
imull
push
inc
test
aaa
cmp
sub
xchg
adc
cmp
jecxz
or
pop
jne
xor
mov
xor
ljmp
xchg
dec
mov
fs
xor
mov
push
lds
jbe
fists
outsb
scas
sub
push
add
mov
cld
aad
cwtl
mov
cmp
fptan
in
imull
loopne
add
mov
ss
cltd
ret
stos
daa
adc
stos
cwtl
pushf
test
lcall
dec
adc
cmp
daa
out
lods
inc
mov
sbb
jae
adc
jno
xchg
sub
sbb
add
pushf
popf
xor
test
jns
xor
shrl
lret
popa
jns
cmp
jge
sbb
out
cmp
jno
subb
and
movsl
jmp
pop
into
xchg
out
cmp
insl
pop
mov
xchg
fwait
pop
in
xchg
rcrb
push
adc
aaa
push
mov
lcall
cmpsb
jp
mov
add
fnstcw
fsubs
sbb
jb,pn
cmp
and
les
xor
push
sbb
ret
adc
insl
addb
jnp
jecxz
aam
std
insb
push
push
mov
js
sbb
ds
push
pop
cmp
dec
jmp
pusha
xor
xor
jmp
loope
ss
and
pop
les
fcompl
inc
or
addl
xchg
ja
push
loope
cld
mov
data16
inc
es
cmp
xor
or
imul
cmp
into
cli
add
or
pop
pusha
movsb
ret
stc
in
jno
repz
xorb
nop
les
pop
xchg
arpl
pusha
mov
rorb
add
push
lock
mov
inc
test
mov
flds
mov
fdivs
push
setns
and
bound
in
je
pop
jb
mov
sbb
push
fcmovbe
test
pushf
popf
cmp
iret
pop
mov
sub
cmc
ljmp
adc
in
cs
subl
rcl
dec
jle
jle
sbb
icebp
jge
rcll
aas
sub
inc
popa
pcmpgtd
lret
cmpsb
mov
scas
push
or
mov
in
in
sub
add
arpl
sub
pop
and
add
mov
enter
ret
add
and
and
lret
add
mov
gs
jbe
loope
xchg
subl
jo
lods
or
mov
pusha
dec
sub
mov
shrl
dec
movsb
cmc
fimuls
sbb
in
mov
push
push
orb
mov
xchg
stos
jno
testb
rorb
sarb
sarl
test
lcall
rorl
mov
pop
and
or
pop
lods
shrl
testb
repnz
inc
jae
out
mov
pop
mov
repnz
push
int3
sarl
repnz
cmp
inc
adc
push
test
mov
lret
test
add
mov
and
pop
jo
rsqrtps
das
in
jge
cmp
jge
mov
mov
jns
es
mov
add
into
pop
push
enter
imul
push
jg
sub
fists
test
stc
movsb
mov
fwait
push
arpl
std
mov
in
mul
xor
jne
insb
ds
fcoms
rclb
lret
cmpsb
mov
adc
adc
in
cltd
push
jl
sbb
test
repnz
pop
cltd
scas
cmpsl
out
sbb
xor
movsl
sbb
mov
ljmp
pop
fnstcw
arpl
mov
int3
fisubrl
push
daa
lock
xchg
adc
add
repz
mov
jo
add
outsb
fnstcw
push
cmp
adc
add
lret
test
das
xor
ds
add
fisttpl
adcb
les
mov
in
inc
imul
aas
ds
adc
and
push
lahf
insb
and
subb
xor
mov
subb
adc
push
rclb
pushf
sbb
and
lock
std
int
and
mulb
pusha
jae
jno
jns
sahf
inc
sbb
adc
out
fildl
stos
test
pop
lock
insl
ja
hlt
cmc
and
shlb
mov
scas
push
rorl
xchg
add
push
add
lret
fcoml
loopne
or
mov
pop
xor
mov
mov
jmp
dec
cmp
out
add
xchg
inc
fwait
lret
mov
inc
lret
pop
cltd
icebp
push
sbb
std
dec
sahf
jbe
and
test
sahf
cmp
adc
jae
imul
sbb
cmp
daa
cld
in
sub
sti
jle
push
jp
dec
cmpb
or
stc
or
in
fistpl
lea
and
jno
jg
cmp
push
mov
adc
mov
fidivrs
aam
cwtl
jg
and
in
push
and
or
mov
dec
jae
mov
repz
mov
daa
inc
adc
mov
imul
xor
mov
icebp
xor
jae
pop
fadds
mov
leave
and
mov
rcrb
jecxz
decl
mulb
imul
je
cmc
cmp
fmulp
mov
or
lods
xchg
sub
push
fcos
dec
or
add
ret
cmp
mov
clc
outsl
outsb
inc
lea
inc
out
sub
sbb
sbb
loopne
sbb
mov
fcomps
and
in
mov
rolb
icebp
cli
push
mov
or
std
bnd
decb
fcompl
scas
nopl
push
sbb
stc
sub
je,pn
push
pop
sub
cmp
rcl
mov
jbe
loope
mov
ror
mov
fs
cltd
cmpb
test
aam
jge
div
jmp
aaa
jmp
xlat
jae
in
imul
les
js
cmpsl
dec
cmp
add
sti
pop
sbb
negl
jg
add
andl
add
cmp
cld
dec
xchg
movsb
int
xor
push
jbe
push
xchg
add
and
and
add
xchg
cmc
jg
idiv
sub
pop
pop
and
mov
pop
jg
imul
pop
lcall
and
cli
adc
scas
in
sahf
in
adc
lret
and
int
loopne
dec
mov
mov
fstpl
xor
ss
loope
repnz
push
add
sarl
push
call
sti
testb
jp
xchg
jae
add
xchg
in
or
push
imul
xchg
or
push
adc
aam
sbb
mov
lods
jae
sub
mov
adc
pop
cmpsb
jmp
jecxz
ja
test
andl
mov
xchg
mov
test
jbe
insb
pop
out
xor
mov
repz
test
pop
or
insb
dec
test
sub
sub
hlt
icebp
inc
fisubs
cmp
fsubl
adc
mov
stos
push
push
imul
xor
fwait
loopne
mov
icebp
mov
ror
sti
rcll
xor
mov
xchg
addr16
or
mov
stc
test
rolb
dec
dec
jne
cli
dec
pushf
lret
mov
test
daa
repz
sbb
inc
mov
idivb
pop
lods
add
lahf
dec
fdivs
add
jb
pop
push
jae
fwait
stos
mov
mov
sub
jns
cmpsl
xor
int
rolb
lret
leave
push
mov
lret
cwtl
out
xlat
adc
sbbl
mov
pushf
dec
adc
test
je
es
repnz
sub
mov
jo
pop
cmp
inc
xchg
and
mov
lods
hlt
xchg
pop
mov
aam
xor
inc
jp
pushf
jg
cld
es
adc
stc
pop
outsb
mov
cmp
movsl
nop
add
mov
pop
add
inc
movsb
cmpsl
push
adc
cmp
inc
or
hlt
shll
out
or
loop
push
pop
sbb
xchg
out
push
cmpl
mov
sahf
cli
or
add
insl
or
pop
mov
nop
cld
ljmp
sbb
cmp
adc
adc
out
dec
sub
mov
cli
pop
mov
push
test
stos
mov
mov
xchg
sbb
push
call
xchg
and
gs
lea
inc
add
insb
negl
add
js
xchg
sub
mov
mov
sbb
sbb
jb
push
das
dec
and
pop
lock
ficomps
lahf
aaa
jae
mov
imul
lret
mov
lea
xchg
sahf
sahf
pushf
imul
mov
popa
lea
mov
icebp
and
push
cmp
xor
cwtl
adc
ljmp
dec
mov
pop
negb
xor
or
push
sub
loop
ss
push
inc
inc
mov
or
adc
adc
inc
clc
sub
dec
jno
or
dec
pop
shrb
sbb
aas
pop
lcall
mov
push
dec
cmp
cwtl
mov
repnz
jmp
cmp
pushf
mov
insb
lds
or
jecxz
push
xor
cmp
jge
fsubrs
sbb
xor
cmpsb
sbb
add
or
clc
xchg
mov
mull
cmp
std
into
dec
lcall
fisttps
imul
and
xor
jge
push
cmpb
mov
and
lea
xor
psrad
mov
xlat
fnclex
in
test
inc
icebp
loope
insl
in
loope
ret
test
bound
int3
stos
shrb
stos
in
xchg
cmp
pushf
lods
ljmp
mov
cld
xor
shlb
xchg
adc
int3
scas
mov
sub
mov
adc
ror
lahf
inc
test
xchg
out
jge
mov
adc
cli
sbb
push
iret
stc
push
inc
daa
mov
je
loope
lock
pop
fisttps
into
adc
xrelease
pop
mov
into
mov
aaa
add
stos
test
decb
scas
mov
or
pop
cwtl
xor
movl
dec
rclb
cmpsb
cltd
adc
imul
out
cmp
pop
ret
ret
orl
xor
mov
xchg
pop
movsl
mov
jb
in
aas
jl
mov
jg
rcrl
mov
je
outsl
mov
mov
stos
dec
test
add
xor
jl
inc
dec
inc
int3
sub
fwait
sub
adc
pop
std
push
stos
out
in
mov
mov
or
or
cmc
pop
outsb
or
sbb
test
lock
jmp
jb,pt
decb
ljmp
jecxz
leave
ja
imul
sbb
cmpsl
cmpsl
repnz
sub
jp
add
popf
mov
shll
ljmp
mov
leave
mov
xchg
cmp
sbb
test
jmp
pop
dec
jnp
outsb
jne
cltd
xlat
std
mov
fmuls
or
mov
xchg
imul
lret
aas
out
push
pop
gs
xbegin
sub
pop
mov
jl
cmp
outsb
xchg
adc
stc
scas
dec
cld
or
shrl
aam
lret
clc
rcr
aam
push
js
stos
rorb
loope
sub
shl
adc
idivl
les
push
adc
stos
jns
loope
stc
jle
arpl
pop
rorl
dec
rcll
mov
rcrb
test
sti
ss
in
outsl
pop
sbb
lods
test
sub
cmc
fsubp
add
fstpl
es
add
iret
push
push
xor
mov
sbb
scas
repnz
lcall
outsl
outsb
inc
and
sub
mov
fsts
ds
lret
aam
in
lret
or
leave
cmp
pop
aas
fcompl
fnstsw
cmp
in
enter
fbstp
push
sbb
add
clc
ds
xchg
adc
addb
or
adc
xchg
cmp
fdivl
lds
mov
testl
leave
sbb
mov
repz
in
jno
ret
fisttpl
test
jp
pop
jl
mov
dec
mov
push
fwait
sub
add
pop
jmp
pop
pop
xchg
int
xchg
popf
or
rcll
pop
push
mov
ret
dec
enter
dec
add
dec
dec
mov
nop
xor
jns
fnsave
aas
mov
sti
subb
sti
in
lds
xchg
pop
bound
fldenv
xor
xchg
cmpsl
adc
dec
roll
cwtl
ja
adcl
mov
xchg
test
sbb
sahf
bnd
xchg
hlt
xor
std
xor
popf
les
shl
adc
mov
cltd
fisubs
xchg
int
mov
movsl
xchg
xor
test
outsb
pop
in
fsubr
cld
addl
mull
xchg
or
fbld
inc
in
imul
mov
pop
loop
ret
cmpsl
lahf
cwtl
xlat
inc
pop
push
sbb
lahf
push
mov
xchg
add
sbb
jmp
mov
sub
test
dec
mov
and
sub
fwait
loop
xchg
pop
aad
adc
ja
sub
add
jle
push
and
stos
aas
in
jge
shlb
testb
dec
js
divb
repnz
dec
insb
imul
dec
push
add
loopne
cmpsl
mov
dec
call
rcrb
push
xchg
dec
pop
push
ljmp
sarb
sbbl
movq
outsb
sbb
or
push
inc
repz
aad
imul
cmovbe
inc
xchg
rorl
push
push
popf
mov
sbb
jecxz
xchg
fsubrs
pop
mov
nop
sbb
leave
push
pushf
outsb
sub
and
inc
sub
enter
push
ss
lods
push
xchg
div
adc
xor
xor
add
inc
xor
stc
xor
lods
ja
lock
mov
nop
mov
sahf
jb
lds
push
mov
clc
imul
dec
sub
or
mov
movsl
iret
sbb
in
adc
sub
fsubs
mov
pushf
sub
fstl
adc
popf
js
push
sbb
push
sarl
sub
pop
scas
jge
lret
ficoms
or
and
mov
ss
lock
and
xchg
mov
push
sbb
bound
bound
dec
movsb
mov
pop
mov
pusha
mov
test
dec
mov
xchg
pop
xchg
mov
dec
inc
test
mov
mov
dec
jg
push
pushf
movsb
sarl
jge
lcall
xor
or
inc
adc
out
aam
adc
mov
fcom
pop
cmc
push
push
mov
mov
fucomp
xchg
inc
or
xchg
popa
ret
xor
ficoml
mov
push
cltd
or
cmp
push
and
add
movsb
repnz
adc
lret
lods
shll
jo
fldl
push
mov
add
out
xor
mov
out
jmp
out
mov
movsb
cltd
pop
push
xor
into
ss
arpl
scas
out
fcoms
ja
gs
add
in
subb
inc
imul
gs
sub
dec
sbb
iret
add
arpl
jmp
cld
fildll
insl
cld
dec
adc
fsubrl
xor
mov
pop
movsl
outsb
ds
mov
pushf
and
mov
or
lods
fmuls
mov
or
dec
test
inc
movsb
push
mov
jle
dec
out
inc
inc
jl
dec
sbb
mov
mov
adc
int
mov
adc
in
lods
and
cmp
lds
inc
dec
popw
inc
pop
or
movsl
dec
pushf
jge
mov
fdivrs
test
mov
jle
in
insb
sbb
stc
into
mov
leave
icebp
xor
enter
dec
ss
loope
cmp
jmp
lahf
mov
gs
pop
pop
inc
fs
lahf
add
loop
sti
dec
dec
inc
and
push
cmp
les
and
outsl
and
test
call
fldcw
std
in
in
pop
ret
imul
xor
leave
scas
add
cmc
xor
stos
cwtl
push
mov
rcrl
mov
jbe
adc
ja
repz
loope
jecxz
cld
xor
or
popa
dec
cmp
in
imul
inc
push
mov
push
push
arpl
push
or
mov
sub
jp
push
or
fcom
fdivrl
jl
lods
aaa
pop
mov
dec
fnstenv
int3
ds
xchg
pop
cmp
test
test
pop
test
test
imul
pop
test
sbb
mov
dec
xchg
sti
dec
mov
rcrl
mov
out
fmul
push
push
arpl
aam
mov
fcomip
out
arpl
add
sub
sbb
push
ret
nop
nop
xchg
pop
xchg
pop
stc
adc
jae
out
sbb
scas
sub
dec
add
push
mov
enter
stos
jle
sbb
lret
mov
inc
insb
ret
push
aad
cmp
jp
cmp
fwait
cmp
leave
sub
outsl
call
and
pop
mov
xchg
adcl
inc
push
dec
fcmovu
fistps
inc
stc
rorl
popf
je
xchg
mov
sub
push
mov
mov
ret
test
ja
jecxz
cmp
xor
test
out
pop
mov
outsl
jb
les
gs
sbb
push
test
cmp
outsb
add
mov
aam
adc
add
xorl
adc
shrb
int3
mov
enter
dec
dec
sbb
add
into
movsl
push
lock
xchg
pusha
hlt
lret
sbb
inc
pop
sub
xchg
scas
or
jnp,pt
xchg
fdivr
xchg
pop
aad
inc
movsb
xchg
inc
loopne
push
or
push
mov
pop
int3
test
sub
test
clc
std
adc
fidivs
ljmp
daa
push
jmp
push
mov
cmp
cmp
ret
ja
jo
seto
sti
test
pop
push
pop
jne
sbb
and
bound
data16
mov
pop
push
pusha
lret
push
push
push
stos
sbb
fs
stos
lea
arpl
or
stos
pop
mov
stos
or
add
cmp
ja
mov
pop
jl
adc
stc
xor
mov
outsl
aaa
mov
pushf
mov
loopne
lock
jge
mov
add
icebp
movl
inc
cmp
dec
incl
lods
dec
cmp
sbb
sbb
invd
pop
xchg
push
fisubrl
mov
popf
icebp
addr16
je
das
xchg
add
loope
jmp
jbe
jne
push
loop
push
xor
dec
mov
add
movl
adc
cmp
rcrl
mov
mov
jb
scas
fistl
xchg
adc
in
dec
dec
sbb
outsb
lcall
pushf
incb
xorl
mov
mov
lods
xchg
clc
add
jae
rorl
out
cmpsl
mov
add
jle
mov
or
jge
fiadds
dec
data16
fidivrs
push
mov
rcrb
or
adc
jne
jno
movsl
inc
pop
pop
xchg
sbb
and
pop
fwait
cmp
rorl
cwtl
stos
pop
int3
sub
or
in
addr16
test
mov
sbb
jecxz
push
pop
cmp
ds
mov
push
jl
hlt
in
jecxz
gs
call
addl
mov
inc
and
add
fstl
inc
mov
je
pop
imul
fdivr
call
adc
and
shrb
adcl
mov
gs
movsb
sub
and
add
sbb
sbb
insl
jmp
jp
jno
pushf
divl
out
mov
mov
sarl
insb
add
xor
mov
cmp
sahf
rcrb
jns
and
and
cmp
fstp
imul
sub
negl
arpl
int
xor
xchg
ss
dec
adc
incb
insb
popa
in
js
inc
test
pop
and
or
mov
dec
xchg
lock
push
xchg
iret
adc
cmpsl
fs
lahf
push
cmp
jb
sub
lahf
xchg
cmp
cmp
cmpsl
ficoms
aad
xchg
stos
xchg
lods
inc
test
notb
adc
popf
jns
push
ret
scas
jbe
pushf
arpl
test
cmc
das
mov
add
insl
add
shrb
pop
xchg
jge
sarl
push
das
fidivs
jbe
cwtl
sub
cmpsl
jb
pop
test
pop
or
xor
xchg
movb
pushl
or
sbb
ret
mov
mov
xor
dec
xor
push
mov
push
jle
ljmp
je
sbbl
dec
inc
jp
int3
inc
mov
push
or
push
repnz
jno
mov
mov
lds
lods
ret
clc
adc
dec
pop
insl
inc
add
aad
cltd
fisttps
popa
lods
je
push
adc
faddl
sbb
out
imul
dec
test
and
rcrb
and
insb
or
lods
in
adc
push
loopne
and
pop
pop
inc
mov
or
les
sbb
inc
imul
sub
lock
hlt
mov
pop
stc
pop
rclb
and
push
mov
ss
cmp
sub
aam
orb
sub
fidivrl
js
inc
leave
mov
mov
pushf
cmp
jecxz
pop
cmp
bound
cmp
xchg
fsubp
add
pop
sub
push
or
jns
inc
jb
fs
in
call
sbb
jnp
stc
in
rcrb
push
xchg
das
cmp
pushf
jecxz
imul
fnstsw
add
gs
icebp
stos
jg
push
mov
addr16
sbb
lcall
loopne
imul
mov
and
xchg
and
push
dec
xchg
jno
cmp
fnsave
mov
ret
data16
sub
stos
add
leave
and
jge
adc
xchg
cmc
jb
or
std
pop
and
outsb
mov
orl
fwait
mov
mov
movsb
jae
cmp
or
fsts
and
fidivs
xor
inc
test
je
stos
cmp
xchg
add
dec
dec
adc
push
stos
mov
out
enter
dec
sahf
clc
outsb
jl
sbb
push
cli
pop
pop
or
imul
or
xor
outsl
pop
fdivr
xchg
mov
fistpll
mov
cmp
imul
andb
mov
ror
pop
daa
xchg
mov
int
pop
xchg
cmp
xchg
aam
cmp
test
lea
hlt
and
mov
adc
xchg
sbb
outsb
cltd
mov
rorl
or
xchg
ret
out
jl
les
mov
in
sbb
inc
jo
adc
mov
test
or
dec
aas
mov
aad
dec
int3
mov
xor
push
js
xorl
out
add
mov
push
xadd
xchg
jns
lcall
mov
out
pop
xlat
add
jns
outsl
xchg
decb
inc
cmp
adc
mov
popa
mov
jp
mov
and
push
mov
iret
adc
push
int3
mov
or
xor
lret
xor
inc
call
mov
push
pop
movsl
repz
orb
mov
mov
ja
push
test
mov
mov
pop
sbb
push
jae
sahf
rolb
negb
or
shl
xchg
cld
inc
add
push
adcb
adc
stc
outsl
pop
inc
and
push
pop
sbb
mov
enter
outsb
mov
mov
mov
sbb
ret
xor
and
cmpsb
decl
xor
lea
adc
scas
jne
daa
xchg
ja
clc
cmp
mov
xor
insb
or
pop
adc
sar
adc
imul
dec
rclb
inc
addb
shlb
push
jo
push
mov
lahf
mov
icebp
popf
in
mov
das
lahf
lret
jg
sub
sbbb
lods
cmovp
inc
sarb
mov
and
inc
cwtl
enter
ds
mul
dec
loope,pn
fs
cmc
cmpsl
add
pop
mov
lret
ja
adc
cmc
mulb
test
sub
jmp
mov
aam
add
xchg
xchg
pop
js
sti
aad
adc
adc
aaa
add
jl
jae
rol
push
popf
movsb
les
pop
cmpsl
jno
mov
flds
out
jne
out
adc
adc
rcll
jge
in
xchg
add
add
ret
mov
das
clc
sti
stos
jl
dec
into
jb
aad
mov
sbb
push
or
ljmp
adc
mov
dec
loope
ss
or
cltd
and
xchg
push
sub
or
rcl
fmuls
jmp
fcomps
sbb
lcall
push
stos
add
lcall
sub
jns
int
or
lret
pop
ljmp
push
test
sub
arpl
or
movsb
lcall
enter
fsubs
leave
pop
testb
add
sti
mov
mov
addr16
pop
fwait
int
and
addr16
add
cmp
out
roll
jp
or
mov
imul
add
repz
lock
fldl
add
enter
imul
iret
pop
daa
fidivrl
pop
mov
jnp
dec
testb
je
imul
or
outsl
lods
push
push
out
pop
divb
das
xchg
jbe
rcrb
jb
mov
inc
ss
jecxz
lock
ret
insb
push
dec
dec
dec
sub
or
mov
aad
insb
push
orl
xchg
test
push
xchg
iret
cmc
xorb
adcb
cmpsb
xchg
into
mov
ret
cmpsb
add
add
es
aas
mov
rclb
movsb
test
pusha
je
adc
insb
mov
push
stc
and
or
and
in
sub
jp
ljmp
push
sub
xor
or
fiadds
push
xchg
pop
test
roll
mov
out
notl
ret
popa
daa
hlt
jbe
add
daa
mov
aas
popf
jle
aas
add
or
andb
dec
scas
out
ret
popf
ljmp
cmp
xchg
mov
mov
jl
sbb
or
push
stc
mov
mov
mov
pop
dec
dec
lcall
aaa
mov
adc
cli
push
sbb
cmp
push
loop
push
add
repz
dec
andl
nop
xchg
sub
fstpl
in
bound
pop
and
insb
mov
les
cmp
sbb
into
aaa
lcall
fsubrl
mov
jb
lret
push
jg
rol
inc
addb
daa
dec
pop
iret
jo
clc
iret
and
dec
pusha
cmp
xchg
cwtl
outsl
xchg
adc
and
pop
sbb
mov
movsb
stos
jecxz
adc
and
lea
cmp
stos
aas
sbb
add
dec
push
pop
lret
mov
mov
xchg
and
stos
or
popf
out
push
jl
sar
fisubrs
xor
arpl
push
ss
test
sarb
scas
cmc
fisttpll
je
dec
imul
dec
insb
xchg
sbb
xor
stos
shrb
cmove
addr16
cmpsb
add
call
ljmp
aad
pop
pop
lea
inc
or
mov
mov
loopne
das
lods
dec
fnstcw
pop
inc
aam
push
push
std
sub
dec
and
pop
mov
frstpm(287
ficomps
pop
fcmovbe
sbb
jl
icebp
xchg
out
jp
pop
dec
xchg
mov
xchg
test
dec
xor
lcall
jno
inc
dec
lods
pushf
jge
pop
imul
push
test
out
dec
push
and
push
lods
mov
imul
lret
add
arpl
or
lret
shl
hlt
movsl
iret
and
jp
dec
mov
in
mov
mov
stos
int3
repz
mov
pop
sbb
cmp
cmp
aas
dec
stc
cmp
das
push
mov
and
mov
hlt
jo
mov
es
shll
jl
loopne
gs
pop
xor
xlat
mov
cmp
hlt
cmp
nop
pop
lea
in
inc
cmp
es
or
scas
sub
addl
pop
pusha
sub
xor
cmp
cmovs
cwtl
push
inc
push
repnz
lret
insb
icebp
test
pop
sbb
hlt
lods
fsubr
dec
adc
adc
outsl
std
popf
jae
xor
out
sbb
jns
ss
jg
shrl
cld
xor
sbb
xorl
xorl
mov
inc
sbb
gs
cmp
pop
mov
cmp
sbb
jg
jmp
push
inc
pop
mov
outsb
popa
jae
lret
enter
pop
ret
cmpsl
xchg
push
mov
outsl
inc
fistps
and
in
add
cwtl
sti
jno
cli
jl
jae
ja
push
pop
mov
inc
ret
test
jg
or
ret
inc
icebp
repz
xchg
xor
and
icebp
popa
or
sub
out
pop
push
bound
xchg
je
enter
leave
fwait
out
dec
cmp
cld
pop
push
aas
pop
push
cmp
xlat
int
push
sbb
lods
sub
je
add
jg
inc
jmp
faddp
sbb
orb
xchg
push
or
mov
xor
rcll
xchg
or
pop
add
test
fiaddl
hlt
cmp
adcb
adc
dec
dec
sbb
pop
stos
add
aas
xchg
lods
dec
cmp
jmp
jmp
add
pop
or
lock
jo
out
xor
add
mov
jmp
imul
xchg
cwtl
fnstcw
add
mov
addr16
cmp
rclb
mull
std
mov
cwtl
les
insl
insl
les
jle
fists
push
rcll
addr16
aaa
stos
xchg
pop
jmp
xchg
mov
dec
sub
jbe
and
cmp
sarl
into
ret
add
ljmp
push
xchg
sahf
aad
and
sub
scas
imul
lods
shlb
push
jle
jo
xchg
in
lahf
mov
shll
pop
fdivs
sahf
push
js
dec
aaa
ret
das
fdivrl
test
jbe
jo
mov
stc
and
in
lea
mov
outsl
out
adc
popa
adc
mov
inc
inc
mov
dec
mov
jo
scas
xchg
or
or
jl
jge
in
pop
fmulp
xchg
pop
orl
jns
rclb
or
jbe
mov
sbb
mov
push
daa
insb
sbb
je
scas
arpl
mov
inc
test
popa
sub
test
pop
add
rorb
aam
js
jb
add
push
push
or
jae
js
xchg
jae
repnz
adc
xor
add
adc
iret
mov
inc
sub
mov
mov
mov
xchg
mov
stos
sbb
sbb
pop
jecxz
mov
out
cmpsl
inc
cmpsb
push
mov
lcall
int
mov
aam
or
push
sti
mov
mov
sub
adc
push
inc
mov
repnz
fs
pushf
std
ret
test
mov
or
flds
mov
jnp
add
mov
hlt
pandn
mov
inc
push
fdivrs
sbb
xor
mov
mov
add
arpl
jne
jmp
push
pop
mov
pop
fnsave
icebp
mov
into
xor
mov
daa
icebp
mov
aas
fxch
iret
arpl
adc
pop
sti
stc
cld
push
mov
pop
xchg
sbb
mov
test
ficoms
mov
loop
xchg
mov
jmp
fistpl
insb
xchg
pop
push
addr16
shlb
and
scas
xchg
mov
sbb
in
aad
mov
std
stos
xchg
sub
lcall
out
mov
loopne
push
xchg
lret
adcl
jbe
jo
mov
lcall
mov
push
andb
fstpt
shrb
mov
cmp
xor
add
shlb
lret
push
and
hlt
add
push
jmp
lods
ljmp
jmp
xchg
sbb
add
jp
xchg
jg
push
mov
negl
out
or
shl
fld
dec
dec
ret
or
add
sub
push
in
out
mov
mov
xchg
sub
jae
shll
es
add
nop
lds
push
sti
push
in
cmpsb
movl
fwait
and
mov
xor
mov
and
dec
jg
lret
sbb
sub
ja
pop
stos
sub
lahf
xchg
fwait
mov
aam
fldcw
adc
xor
arpl
mov
imul
adcb
jmp
cmp
fdivl
lods
repnz
dec
jne
cmpsb
jecxz
mov
pushf
int
sub
pop
mov
dec
stos
xor
outsb
fcmovu
dec
lea
into
hlt
rorl
or
jp
insl
ret
sub
pop
and
pop
pushf
adc
xor
xchg
sub
sub
data16
rcrl
sub
push
daa
push
dec
push
pop
and
push
or
daa
imul
pop
lcall
pop
mov
lahf
outsl
pop
fistpll
fldcw
dec
in
jae
test
xor
mov
test
xchg
xchg
fdivl
fcomp
mov
scas
mov
popf
inc
out
add
add
testl
dec
jne
in
dec
adc
in
popa
add
imul
xchg
jns
sub
mov
lcall
aad
push
pop
push
mov
inc
xor
adc
loopne
outsl
cltd
push
vpsubusw
inc
sub
scas
inc
mov
jp
dec
dec
enter
js
dec
ja
sarl
mov
pop
pop
sub
mov
out
cmc
jl
mov
ret
pop
and
std
sub
sub
pop
fbld
daa
dec
hlt
jne
in
test
test
test
adc
jne
push
in
mov
movsb
cld
jge
jl
xor
divb
in
jnp
idivl
loope
cltd
scas
push
sub
out
add
aad
mov
leave
mov
push
fbstp
outsl
mov
mov
popa
xchg
and
xor
mov
ja
mov
out
pop
aas
sahf
jne
rclb
sub
leave
xor
and
aaa
jbe
stc
adc
mov
pop
icebp
or
insw
push
out
jno
int
out
or
push
out
imul
dec
push
mov
xchg
inc
aas
stc
xlat
jno
repz
mov
scas
popf
adc
xor
push
lds
aad
les
test
int
out
lods
std
mov
loope
inc
daa
and
cmc
movsb
iret
mov
cmp
je
sub
andb
arpl
ret
jne
aad
cmp
jg,pt
inc
jne
icebp
sbb
jae
xchg
lea
mov
ja
imull
pushf
and
ror
push
mov
das
cmpsl
lods
mov
or
xor
and
pop
aas
repz
shl
cld
jae
pop
cmp
jle
fwait
lock
cmp
xchg
subl
push
enter
add
insl
jp
mov
sbb
mov
sbb
pop
and
sbb
add
cmpsb
xor
mov
or
das
mov
push
mov
push
or
out
in
out
xchg
mov
repz
push
lock
mov
jae
shll
cld
add
popf
stc
mull
addr16
sti
sbb
mov
cmp
jb
adc
ja
mov
out
ret
push
push
cld
fs
xchg
jne
jo
fwait
pop
fs
insb
push
push
jl
pop
cmpsl
push
lret
lret
outsb
sub
test
cltd
movsl
sub
test
ret
pop
call
add
dec
xchg
push
xor
add
scas
stos
jne
and
icebp
add
aas
loope
jne
loop
add
iret
xchg
adc
das
fdivrs
adc
push
movsb
mov
jns
nop
ljmp
fldenv
cmc
inc
sub
idivb
add
inc
mov
loope
add
fildll
mov
pushf
mov
mov
jo
lds
lods
pop
mov
jmp
inc
mov
sbb
jb
sbb
or
insb
sbb
repz
jmp
icebp
arpl
stos
jbe
mov
orl
call
mov
rcrl
das
aas
jo
mov
test
mov
ficoml
dec
popf
call
and
sti
cmc
add
push
in
lret
push
push
sti
loop
popf
inc
imul
js
call
lcall
or
int3
sbb
push
rorl
push
dec
xchg
jp
cmp
cltd
adc
cli
cli
adc
jmp
movsl
inc
sbb
push
shlb
imul
xor
pusha
adc
and
cmp
add
mov
in
ljmp
mov
sub
repz
cltd
rcr
mov
cli
aaa
out
shrl
dec
adc
jg
mov
loope
mov
jl
fwait
ljmp
sub
mov
inc
fwait
cmpsb
ljmp
or
shl
repnz
and
mov
adc
mov
dec
lcall
and
ret
xchg
pop
push
sbb
stc
cmp
mov
mov
xchg
repz
sbb
popf
push
rolb
lods
push
sub
clc
stos
push
out
cltd
pop
pop
mov
test
jmp
in
loopne
sub
imul
xor
mov
mov
sub
subl
popf
mov
mov
out
mov
fnstenv
ds
jae
repnz
aad
sysenter
icebp
jge
adc
fstl
lea
push
adc
mov
dec
mov
enter
fidivrl
cld
inc
mov
sbb
jecxz
inc
or
push
xor
sbb
pop
or
jns
cltd
adc
inc
cld
loope
and
xchg
adcb
mov
sahf
pop
cmp
fsts
push
lock
addl
clc
xchg
push
cmp
and
pusha
push
push
loope
sub
mov
fdivrs
outsb
data16
lret
nop
bound
arpl
sub
out
rcl
push
fsubs
mov
lahf
push
pushf
fistl
dec
fdivrl
cli
dec
adc
sub
lods
mov
popa
cmp
and
lods
or
jg
xor
add
lret
loop
mov
adc
cmp
insb
jg
mov
adc
shlb
cmp
in
mov
lods
mov
mov
mov
fstl
in
mov
ja
adc
dec
scas
aaa
cli
xchg
sbb
in
lock
jns
mov
jae
pop
std
add
outsb
jno
jp
js
cmpsl
std
repz
es
mov
lcall
jecxz
cld
push
cltd
push
imul
jmp
and
test
xchg
lds
cmp
cmc
hlt
popa
inc
in
iret
lods
sub
mov
push
das
imul
rorl
mov
lea
sub
fstpl
loope
subl
xor
out
nop
mov
movsl
sub
jmp
mov
andl
jge
loope
nop
shrl
es
js
xlat
scas
push
sbb
cmpsl
mov
mov
out
mov
int3
sbbl
in
daa
add
mov
mov
add
in
imul
mov
data16
jno
insb
jno
stc
xorb
fmul
movsl
into
jnp
or
adc
loope
scas
mov
arpl
and
sub
nop
dec
pop
loopne
mov
call
pop
out
dec
ss
int3
and
or
faddl
fcompl
stc
shrb
jae
sbb
sbb
add
iret
repnz
fsubr
pop
leave
inc
xchg
aas
push
sbb
mov
dec
add
sub
loope
es
roll
sbbl
mov
scas
lahf
xchg
pop
cmp
jge
cmp
jg
addb
dec
mov
lcall
arpl
add
fwait
orl
cmp
js
mov
icebp
pop
or
sti
das
insb
cld
xor
pop
xor
incb
inc
sub
cltd
pop
add
fcmovnu
fstl
push
scas
pusha
add
lods
notb
jbe
pop
fs
mov
sub
mov
test
mov
jp
or
push
int
outsb
sbb
mov
pop
pop
imul
push
rcrb
pusha
sbb
mov
cmp
rcr
je
pop
rorl
pop
std
inc
dec
fldenv
xor
pop
enter
cltd
mov
push
div
add
mov
and
ljmp
hlt
insb
inc
xorl
ficomps
cmpsb
dec
int3
cltd
pop
xchg
sti
add
pop
sub
inc
xchg
mov
lods
adc
pop
push
and
inc
mov
pop
cmc
cmpsb
mov
popf
out
or
mov
loope
call
repz
test
mov
lods
fiaddl
sbb
adc
xor
nop
lock
shlb
mov
jg
mov
push
xchg
mov
pop
dec
pop
sub
xchg
xor
cmp
cld
dec
sarb
out
dec
adc
and
mov
call
cltd
movsb
or
push
imul
push
jne
sub
lret
mov
pop
mov
sbb
add
lret
mov
mov
outsl
arpl
push
int
mov
cmc
adc
jle
jmp
xchg
out
inc
mov
ret
mov
ret
bound
or
js
push
aas
lds
adc
xlat
in
mov
adc
rcll
dec
mov
jae
int
pop
adc
jmp
jbe
scas
sub
dec
xor
fwait
dec
jmp
int3
or
sbb
enter
pop
mov
enter
mov
lret
and
ja
hlt
or
into
mov
mov
loope
loopne
cmc
sbb
and
cs
push
imul
cmp
sahf
scas
clc
or
aas
das
leave
popf
mov
repz
mov
or
nop
jle
mov
pop
cmp
dec
stc
xor
mov
or
rcrl
sar
fcmove
push
imul
push
push
push
push
roll
fsts
add
xchg
mov
insb
fisttps
xor
leave
sbb
fdivl
les
rcll
pop
out
push
in
cltd
es
and
jle
ljmp
loope
xor
sub
inc
jb
imul
mov
fisubrs
pushf
lods
xorl
popa
call
jg
mov
aad
in
inc
loope
dec
test
push
and
fistps
xchg
js
mov
notl
xorb
enter
add
scas
cmp
xor
mov
pop
test
push
xchg
mov
in
fs
ss
fildll
lock
jnp
pop
dec
jnp
mov
push
fisubrs
add
jge
in
scas
push
and
jp
cli
dec
mov
cmp
pop
mov
pop
pop
out
mov
lret
push
xor
pushf
pop
jne
das
daa
mov
test
das
or
push
or
sub
das
inc
push
sar
outsb
jmp
push
ja
push
mov
int3
sub
call
jp
jno
or
ret
sbb
bnd
push
pushf
test
les
mov
mov
xor
inc
inc
out
hlt
into
dec
or
stos
jmp
imul
jmp
adc
cltd
test
rorl
vmovdqa
nop
adc
lods
or
lret
mov
or
clc
sbb
rol
mov
lret
div
inc
xchg
decb
fldcw
ret
xchg
imul
in
fisttpll
cmp
lea
xor
pop
cmp
in
dec
popa
pop
jmp
dec
rcrb
xchg
pushf
insb
lds
das
dec
jne
mov
xrelease
mov
popa
or
jo
enter
lret
shlb
adc
ficompl
cmpl
sub
dec
aas
pop
aas
jmp
imul
shlb
into
lea
sbb
mov
jbe
fmull
pop
dec
cltd
sub
cmp
cmc
jecxz
js
adc
lcall
in
imul
clc
ror
test
push
inc
addl
js
cli
popa
lock
es
mov
cli
inc
andl
iret
das
addr16
cmp
lea
mov
adc
shll
sub
imul
lcall
push
outsl
sbb
pop
jmp
fsubrs
dec
js
std
pop
addr16
sbb
fsubs
cmp
cs
aam
add
mov
sbb
shlb
or
out
jmp
scas
inc
or
and
cmpsl
or
push
jns
push
into
in
sub
and
sti
loope
push
jne
in
inc
out
jnp
mov
push
int3
xor
add
icebp
in
fstl
jecxz
push
shll
inc
outsb
jbe
push
aad
or
out
mov
push
test
aaa
lods
outsb
add
jg
jge
in
mov
xchg
inc
testl
cwtl
push
aaa
cli
shrb
adc
adc
daa
loop
inc
fidivrl
dec
popf
lahf
or
bound
imul
jmp
iret
nop
dec
sti
aaa
push
jne
in
ficomps
jge
aad
aam
loop
xchg
push
mov
mov
jecxz
cmpsl
mov
jns
xor
and
scas
enter
and
pop
xchg
add
xorb
and
fwait
in
mov
and
cmp
fstp
jmp
repz
lret
shlb
ficoml
cmc
inc
aad
pop
pop
push
sub
std
sbb
add
pusha
hlt
repz
mov
xchg
push
cmc
ret
shrb
xor
ds
xchg
das
int
in
pusha
mov
xlat
dec
test
hlt
lods
data16
push
xchg
outsl
stc
aam
xor
add
aam
dec
daa
adc
push
fstpt
scas
mov
inc
add
lret
js
test
cli
ss
stc
loope
xchg
mov
fwait
ljmp
into
jne
push
test
jecxz
mov
inc
test
push
xchg
xchg
and
lcall
loope
cmp
pop
mov
adc
stc
dec
pop
adc
mov
push
cmp
jg
push
mov
cs
testb
jge
sbb
sbb
sbb
pop
or
xchg
xchg
sub
ret
pop
out
hlt
leave
nop
inc
mov
jmp
test
call
jg
mov
aaa
scas
mov
pusha
pop
dec
scas
or
mov
sbb
arpl
fs
clc
xor
repnz
or
mov
xchg
ficoml
mov
pop
mov
inc
icebp
xchg
mov
mov
cmp
mov
inc
enter
jmp
ret
lret
and
jmp
insl
mov
xlat
fimull
cmp
pushf
mov
jbe
inc
add
mov
je
push
sub
or
sbb
inc
xor
and
mov
or
int3
aas
jecxz
push
adc
or
inc
mov
jecxz
adc
clc
lahf
mov
shrb
gs
sbb
push
iret
add
xor
push
pop
mov
xor
mov
pop
shl
mov
mov
add
repz
pop
push
sbb
inc
outsb
sub
mov
dec
push
lods
inc
xchg
ret
testb
pop
mov
mov
test
out
xor
outsb
adc
test
repnz
sub
xor
cmp
shrl
push
xchg
cs
cmp
iret
ja
outsl
outsl
shll
ret
add
xor
mov
mov
and
in
es
adc
push
push
ficomps
mov
roll
push
mov
es
test
popf
sahf
push
add
mov
inc
and
mov
pop
sbb
add
and
notl
sbb
fwait
cmp
ret
lahf
leave
jns
lret
loop
fiadds
jb
jl
fincstp
test
pop
mov
scas
fucom
nop
adc
incl
shlb
adc
jb
pop
push
jbe
push
jnp
push
loop
add
xchg
icebp
cmp
fwait
adc
pop
push
test
jmp
dec
adc
cwtl
add
lcall
sub
inc
adc
insb
bound
pusha
dec
decb
inc
clc
cli
data16
pop
xor
das
mov
out
sub
adc
ds
and
mov
and
lcall
push
sahf
dec
gs
jae
push
mov
xorl
and
inc
sbb
dec
inc
mov
ljmp
cmpsl
arpl
sbbb
inc
pop
cmpsl
and
mov
loope
out
adc
or
test
cmp
sub
jecxz
data16
push
push
add
leave
jp
sbb
aas
shl
jbe
popa
loop
mov
aad
inc
mov
loope
out
lret
jl
or
cmpxchg
xor
pusha
inc
cmp
jnp
repnz
xchg
pop
arpl
inc
fidivrl
insb
loop
repz
cmp
push
clc
nop
std
repnz
add
sarb
xchg
or
adc
stc
notb
adc
imul
pushf
shl
fisttpll
fcomps
xchg
repz
push
jg
or
xor
sbb
push
push
push
xor
adc
xor
jmp
pop
push
xor
cmp
mov
push
scas
fisubl
xchg
fsubp
aaa
movsb
mov
iret
imul
scas
sub
andl
mov
and
stos
lea
hlt
push
imul
out
dec
js
xchg
cmp
inc
sbb
push
inc
loope
lock
cmpsb
jno
ret
stc
jns
imul
adc
pop
fisubrl
enter
xorb
adc
pop
cmp
bts
mov
pop
cltd
lock
arpl
mov
rcll
loop
xor
out
and
dec
cmp
cmc
inc
sub
add
cmpl
xchg
test
adc
mov
outsl
push
pop
pop
inc
sbb
test
xor
bound
xchg
iret
lock
shrb
les
aam
into
out
push
repz
xchg
in
dec
inc
xchg
jns
sahf
cmp
in
int3
mov
cmp
add
xchg
shll
mov
fadds
mov
inc
pop
shl
pop
popf
jns
add
jae
adc
das
pusha
or
pop
loope
jne
push
add
or
lea
and
imul
adc
mov
insb
push
mov
xchg
mov
je
ret
sbb
cmp
pop
rolb
aaa
outsb
jp
call
cmpsb
lods
cs
mov
imul
stos
mov
cli
jg
ja
inc
inc
iret
sbb
mov
js
xchg
inc
popf
inc
fstpl
xlat
leave
xor
mov
and
mov
mov
nop
popa
loopne
sahf
sbb
clc
cmp
pop
pop
mov
test
testl
repz
icebp
mov
adc
mov
into
out
sbb
repz
fs
fs
sub
and
inc
xor
inc
mov
std
pushf
mov
mov
mov
push
leave
jmp
imul
pop
pusha
test
arpl
sbb
mov
xchg
pop
popf
mov
ja
mov
rcr
mov
cmp
push
insl
pop
jbe
jb
inc
add
and
push
in
mov
push
jae
or
scas
and
jmp
xchg
and
lods
psubw
lods
jae
adc
les
mov
movsb
sahf
adc
mov
or
test
popa
sbb
and
dec
loopne
scas
mov
ret
in
aad
aam
lds
mov
inc
roll
mov
add
ds
lret
mov
xor
sub
mov
jle
jnp
data16
fimuls
daa
out
add
mov
int3
mov
push
mov
lock
int
ret
or
rorb
repnz
enter
mov
pop
jle
loope
adc
jmp
dec
push
movsl
pusha
jne
in
sti
in
mov
aas
xchg
dec
sub
dec
ja
lret
addr16
popa
mov
sub
pushf
dec
xor
xor
or
xor
pop
repz
sub
add
cmpsl
push
xchg
int
loopne
xor
pop
push
jg
or
jg
in
cld
pop
cmp
cld
test
shlb
inc
mov
movsb
ss
push
cmc
push
jmp
jae
enter
subl
and
test
xlat
push
sarl
inc
mov
out
cwtl
cmp
mov
mov
jb
add
lea
xor
imul
dec
imul
std
adc
mov
popf
pusha
inc
xlat
pop
lods
lea
push
adc
outsl
lods
sbb
xchg
jg
mov
sbb
lcall
fdivrl
in
jb
jl
imul
int3
jl
dec
sti
outsl
repz
pushf
and
or
pop
cmp
in
in
aaa
fwait
stc
dec
xor
and
dec
adc
xchg
sub
loopne
cmp
sub
fidivrl
mov
rclb
xor
inc
mov
mov
es
sahf
lds
xor
push
sbb
cmp
dec
xor
xchg
sbb
add
pushf
repz
mov
into
or
adc
inc
push
aad
loop
loope
fadd
xchg
pop
push
addr16
lret
dec
mov
into
mov
or
clts
and
add
leave
or
xor
push
dec
jmp
rcll
pop
andl
mov
mov
ret
dec
scas
pop
test
leave
fists
stc
jnp
push
adc
add
jmp
add
stos
mov
cmp
push
aad
mov
int3
mov
popa
mov
lret
test
lcall
je
push
dec
lret
test
pop
pop
out
sbb
lods
mov
mov
jb
ftst
jg
inc
jnp
xchg
mov
mov
int3
les
insl
mov
pop
sbb
cmp
xor
call
sub
and
insb
and
pop
fcomps
add
cmp
sub
mov
inc
push
sub
pop
loopne
pushf
popf
inc
pop
imul
jnp
sbb
cmpb
cmp
pop
jge
push
adcl
popa
das
push
sub
movsb
aam
enter
and
cmp
or
test
xorl
xchg
mov
aad
fldl2t
cwtl
adc
cmp
add
cltd
pop
pop
out
and
push
and
jne
dec
or
push
adc
mov
push
xor
jbe
rorb
jno
scas
stc
pushf
jns
xchg
ficoms
sub
in
or
iret
iret
jl
movsl
mulb
dec
add
adc
sbb
push
ret
loop
sbb
jns
push
mov
xchg
into
aad
mov
pop
pop
scas
ficompl
lcall
jg
test
pop
inc
jg
jg
dec
sub
mov
fldcw
xchg
dec
popa
xchg
roll
fdivp
jb
fwait
add
sbb
fmul
adc
cmp
push
and
push
and
add
testb
mov
addl
test
stos
fs
mov
popa
fcom
cmp
dec
movsb
bound
repnz
lret
push
dec
fidivl
popf
rcrl
test
push
nop
out
push
call
sbb
into
jp
or
addr16
or
dec
jb
xchg
mov
rclb
pop
mov
out
neg
in
xlat
and
xor
jmp
adc
mov
hlt
adcl
js
inc
sahf
inc
shlb
jecxz
cmp
arpl
cmp
mov
push
jp
jg
cmp
mov
cwtl
adc
jns
je
in
lfs
mov
fs
mov
and
cmp
aam
fisttps
das
loop
push
or
shlb
sub
sub
mov
aas
inc
mov
or
inc
mov
sbb
hlt
xchg
daa
je
mov
fldcw
cwtl
push
xor
inc
mov
popa
in
pop
scas
ds
add
xchg
lea
mov
add
inc
cmc
pop
fiadds
xlat
xor
push
pop
pop
cmp
xchg
lret
push
dec
insl
mov
ljmp
and
loop
test
inc
pop
xchg
gs
mov
sbb
out
pop
sub
in
rol
pop
mov
adc
push
insb
dec
out
aad
icebp
mov
movsl
outsl
mov
cs
adc
sub
cmp
add
aaa
adc
inc
dec
call
mov
out
dec
or
outsl
insl
xor
js
adc
adc
out
or
sbb
mov
inc
mov
in
mov
filds
out
and
add
in
push
negb
fimuls
xchg
mov
push
xchg
cld
push
rclb
or
lret
jmp
adc
insb
sbb
out
enter
shl
test
jecxz
stos
jl
aas
aam
mov
mov
adc
sbb
fbld
stos
push
nop
dec
push
jnp
xor
mov
ret
std
movsl
ss
int
pop
cmpsb
push
push
icebp
mov
fs
add
jmp
insb
imul
jno
andb
lea
cmp
daa
pop
inc
pop
shll
mov
popa
jne
aad
sub
push
shrl
push
int3
jo
sub
mov
icebp
test
ss
dec
mov
sti
mov
fadd
fwait
push
sub
sbb
push
int3
xor
int3
addr16
clc
rorb
xor
jmp
xor
pop
mov
insl
sahf
cltd
pop
cmc
xchg
enter
xchg
pop
jge
pop
xor
fildl
jmp
add
sbb
mov
jge
sbb
mov
movb
inc
outsb
mov
fsubs
shl
rorl
lods
notb
mov
incb
pop
pop
cmpsl
or
xchg
push
xchg
icebp
fcmovne
lea
and
sete
enter
arpl
repnz
push
iret
mov
or
fdivrs
jno
into
mulb
mov
sub
jmp
mov
pop
adc
pop
pop
cmp
test
adc
jae
mov
movsl
push
inc
pop
cmc
mov
imulb
mov
mov
rol
adcl
sbb
inc
cmp
xor
push
icebp
xor
xorb
popa
xor
jge
rorl
bound
jb
ja
inc
add
iret
inc
lret
cmp
lods
lea
outsl
push
mov
pop
push
and
or
or
mov
fwait
mov
lahf
test
mov
loop
jecxz
cli
jne
dec
scas
enter
repz
es
mov
sub
repnz
or
mov
pusha
imul
xor
jae
fmuls
out
lds
leave
imul
cmp
push
rol
loop
dec
cmp
imul
outsb
push
sahf
dec
mov
aaa
jp
dec
jno
cltd
lahf
scas
sbb
das
jnp
or
adc
jb
addr16
out
insl
cli
mov
inc
xchg
ja
insl
iret
and
je
inc
pop
sbb
ret
ficoml
out
add
divb
dec
dec
mov
test
mov
lods
sub
jle
stc
fsubrs
pop
loopne
call
and
or
dec
and
out
insb
addr16
fisttps
xor
cmp
add
sti
ret
jbe
fnstcw
dec
test
hlt
popa
mov
add
sbb
mov
mov
cmp
mov
stos
mov
je
sbb
es
jmp
jp,pn
jae
outsl
push
mov
lcall
in
fs
mov
mov
cmc
jo
cld
das
mov
mov
faddl
repz
adc
push
rcrb
addr16
in
mov
mov
inc
and
hlt
mov
dec
add
loope
cli
push
pushf
insl
cmpsb
jmp
arpl
mov
dec
ja
sti
adc
xor
mov
pop
ficomps
jle
and
xor
sub
or
daa
data16
sub
pop
mov
lcall
sbb
xchg
pop
and
ljmp
loopne
in
cmc
xor
and
mov
xchg
jl
add
sbb
mov
dec
cmp
xchg
int
pop
sub
out
mov
sub
mov
add
in
mov
enter
mov
and
cmpsb
jmp
push
je
xchg
aad
cmp
sbb
dec
mov
shll
ja
adc
xchg
fbstp
imul
xchg
push
jno
out
insl
adc
cmpsb
jbe
ljmp
ss
fdivr
and
pop
orps
push
test
mov
jp
dec
mov
scas
jle
pop
inc
cli
scas
cmpsl
inc
push
jg
push
jecxz
shll
and
cmp
cmp
or
push
or
jbe
pusha
fsts
cmc
push
push
jle
jg
mov
rcrb
aas
mov
mov
jle
dec
jecxz
fsubrl
ret
jecxz
ds
adc
in
out
js
xchg
xchg
mov
jb
mov
in
bound
in
sbb
loop
dec
popf
mov
jno
push
push
mov
je
faddl
mov
push
jb
test
aad
pop
add
into
jp
and
and
push
aad
mov
sbb
adc
push
int
mov
test
test
mov
inc
jle
sbb
lcallw
adc
mov
pop
dec
pop
popf
jl
xor
outsb
xchg
pop
mov
sbb
xchg
or
mov
aas
lods
insb
pop
repnz
sti
sub
push
pop
push
testb
pop
jmp
xor
and
inc
jge
push
sbb
mov
ret
or
dec
sbb
and
scas
cmc
dec
in
inc
and
or
ljmp
pop
mov
pop
cld
jb
je
cld
sbb
ja
and
rolb
aas
out
add
add
sub
add
push
ja
mov
sbb
mov
cmp
cmp
add
xor
shlb
add
mov
cmc
adc
shrb
std
jg
aaa
aaa
movsl
lock
popa
pop
imul
lret
jae
mov
ja
cmpsl
jge
outsl
cmc
popf
mov
push
repz
and
mov
add
inc
movsb
cmp
adc
mov
rclb
push
mov
lock
pushf
mov
mov
test
jbe
pop
jle
cs
push
sbb
fdivrs
daa
pop
loopne
push
push
inc
loope
jmp
add
out
fiaddl
test
or
push
insb
addr16
xor
call
cmp
cltd
scas
test
mov
mov
arpl
pop
sbb
add
sub
jecxz
xor
jecxz
nop
mov
pop
xor
cld
test
rcrl
loop
loop
and
xchg
add
mov
mov
fdivrl
push
insb
ljmp
arpl
add
lods
mov
xchg
lcall
jae
out
dec
insb
fmuls
add
mov
les
leave
xlat
cs
scas
out
xchg
sbb
add
ds
xor
xlat
sub
inc
adc
mov
inc
xor
fdivrs
sub
pusha
lea
push
mov
inc
sbb
cmp
and
cmp
lds
jno
xchg
add
mov
jmp
subb
push
fistpl
xchg
fsubr
lea
xor
jmp
movsb
arpl
bound
adc
pop
add
rclb
mov
mov
roll
xor
leave
xchg
push
aas
into
test
lea
xor
test
out
sub
pop
or
popf
push
push
arpl
dec
mov
adc
lret
cli
cmc
pop
lea
dec
jbe
xchg
je
cmp
popa
dec
fs
je
icebp
cmp
push
repz
cmp
add
cld
sub
in
mov
xor
lret
repz
pusha
in
sub
hlt
mov
sbb
movsb
xchg
lahf
lods
fdivrs
cmp
rolb
mov
adcb
xlat
cmpsb
pop
fisttpl
jns
push
cmp
push
pop
sahf
test
loop
aam
and
xchg
mov
dec
or
in
mov
jmp
fstpt
xchg
in
jns
push
jnp
aam
mov
xchg
or
mov
or
cmp
push
mov
ss
cld
jge
mov
aam
xor
adc
mov
aad
bnd
ds
pop
into
inc
mov
mov
push
inc
fcomi
inc
ja
rclb
sub
into
ja
push
daa
pop
dec
scas
sub
mov
cmp
xchg
mov
push
scas
dec
mov
mov
or
shlb
test
andb
inc
xor
sbb
mov
loopne
arpl
int
out
cmp
jno
or
lea
jle
out
iret
popf
push
std
push
ds
int3
test
lock
lods
jne
sub
lret
adc
add
mov
mov
in
xchg
xor
mov
sbb
xor
add
pop
in
adc
jmp
stc
jno
sbb
and
int3
sub
fs
dec
mov
adc
mov
loopne
mov
imul
aam
int
cmp
and
sub
xor
repz
push
pop
loop
jg
jne
pop
mov
xchg
pusha
cmpb
mov
xchg
dec
es
mov
adcb
stos
stc
and
mov
mov
lcall
sub
adc
stos
jmp
inc
push
add
pop
call
add
lea
sub
jo
sub
sub
pop
test
pop
or
xchg
mov
jne
fdivrs
inc
pop
int
test
cltd
add
shrl
aaa
dec
aaa
pop
lret
ror
and
sbb
and
dec
xchg
xchg
arpl
f2xm1
jge
scas
pop
ss
lock
push
mov
push
call
stos
test
int3
mov
xchg
addps
imul
jge
mov
adc
cwtl
hlt
sarl
lret
cmpsl
out
test
push
mov
cmp
cmovns
inc
push
push
cmp
push
daa
mov
mov
lea
bound
jle,pn
dec
cmc
jb
and
sti
rcll
adc
fld
jg
jecxz
dec
jnp
rolb
adc
pop
mov
sbb
or
sbb
mov
push
mov
in
pop
int3
jnp
mov
addl
pop
shlb
jae
arpl
test
jge
sbb
or
inc
mov
cmp
and
mov
or
imul
jnp
inc
cli
xor
popa
out
xchg
pop
mov
add
xchg
repz
xchg
mov
fucomp
dec
outsl
adc
pop
out
stos
sub
shlb
mov
dec
js
ds
lods
cwtl
stos
lret
jno
nop
or
push
or
aam
cli
daa
jmp
cltd
stc
cli
mov
or
outsb
mov
cmp
fidivs
push
adc
jne
mov
hlt
cld
xchg
sbb
mov
scas
push
negb
mov
mov
inc
lock
ret
in
adc
jmp
push
pop
mov
popf
jmp
out
or
lret
jge
push
inc
cmc
adc
xor
inc
into
loope
enter
jne
jmp
adc
jns
cwtl
scas
testb
orb
ret
mov
sahf
inc
imul
lods
or
shlb
xor
aas
cmp
sbbb
xchg
cltd
int3
cwtl
xor
dec
and
push
inc
idiv
adc
mov
and
icebp
inc
enter
xchg
test
mov
push
adc
push
outsb
gs
push
add
lret
pop
test
mov
add
les
in
js
fwait
or
or
pop
jb
adc
add
push
xor
lock
add
cmp
push
je
jne
adc
add
stos
sti
lret
iret
imul
inc
scas
int3
rcll
push
nop
enter
lret
movsb
cs
mov
es
cltd
mov
aad
pop
ret
dec
leave
mov
enter
fbstp
mov
push
jle
push
dec
dec
push
add
ror
add
push
pop
hlt
mov
and
in
imul
stos
fldenv
push
or
inc
add
scas
rolb
xchg
daa
int
ret
mov
push
ss
push
pop
push
xchg
cmpl
cld
dec
js
rcll
jg
mov
in
lret
icebp
cmp
aaa
es
push
insb
jg
add
mov
cmp
je
mov
or
clc
out
mov
push
mov
dec
sbb
scas
and
out
cmp
inc
jae
mov
dec
inc
cli
jns
mov
sub
adc
mov
std
call
mov
jo
xchg
mov
and
arpl
decb
adc
aas
cmp
ss
and
sahf
jbe
sub
addr16
orb
insl
cmp
jbe
rclb
sbb
out
in
or
lds
jns
pop
xor
repz
icebp
cmc
repz
das
arpl
test
gs
mov
lcall
loopne
add
cmp
lret
sar
fisubrs
xchg
cmpsb
sbb
notl
jg
test
or
cltd
push
and
push
push
mov
in
sbb
out
mov
lret
or
xor
inc
jae
dec
dec
mov
rolb
jmp
lock
dec
test
fbstp
fsubr
je
and
jl
ficoms
sub
fwait
outsl
xchg
sbb
pop
fwait
ljmp
inc
outsb
sub
enter
packssdw
pop
jecxz
bound
mov
fdivs
stc
das
mov
pushf
fwait
or
add
inc
lcall
or
sbb
mov
jno
mov
cmp
and
inc
mov
dec
push
test
mov
test
aaa
or
mov
xor
cmpsl
mov
jns
xchg
lods
lea
cwtl
and
jge
test
jecxz
in
cmp
sub
sub
cwtd
sub
in
mov
scas
rcll
xor
mov
pop
nop
je
pop
push
push
pop
lock
stos
cmp
orl
ds
sub
mov
xchg
mov
dec
pop
aam
stos
xchg
sub
outsb
xor
insl
mov
and
fcomp
icebp
pop
dec
xor
sbb
dec
pop
mov
call
cmc
or
hlt
ss
fistps
sub
pop
test
loop
aad
out
push
je
add
add
push
adc
dec
mov
dec
ret
cmp
dec
cmp
or
sbb
jmp
subl
xchg
pop
cwtl
jl
lods
sub
ret
pop
adc
sub
mov
out
mov
outsl
pop
scas
sbb
popa
movsb
repz
push
hlt
roll
mov
lcall
test
dec
fcmovnbe
xor
mov
andl
and
out
and
pop
es
call
aaa
xchg
xchg
iret
adc
loop
iret
mov
sub
sbb
ficompl
xor
out
push
cwtl
xor
shlb
addb
aas
nop
cmp
cmp
mov
iret
dec
add
aaa
push
push
mov
adc
xor
in
adc
scas
cmp
int3
call
faddl
mov
loope
xchg
jl
mov
cs
pop
dec
loopne
push
inc
stc
lcall
mov
in
adc
testl
faddl
mov
push
dec
repz
push
dec
loop
arpl
sub
lods
test
in
adc
push
lret
dec
mov
lahf
jno
push
sub
popa
mov
jno
inc
ss
daa
icebp
push
push
stos
fdivrs
aaa
push
sbb
scas
xchg
jno
sbb
add
mov
jmp
fdivrs
test
and
and
in
movsb
push
pop
lret
xor
push
jg
mov
sub
aam
imul
pop
xor
xor
jp
mov
cmp
push
or
inc
push
cmpsb
rcrb
mov
ds
sarb
add
imul
data16
lea
repnz
loopew
jp
or
and
mov
adc
lock
jge
data16
xor
dec
outsb
int
js
xchg
push
cmp
test
ds
push
ret
sub
movsl
fwait
adc
mov
jge
cmp
adc
cs
cli
dec
shll
and
sub
in
sti
inc
cmp
pop
and
filds
sub
adc
cmp
xor
push
mov
jl
insl
cmc
test
push
cmp
dec
cld
gs
mov
sub
pop
add
jl
mov
mov
mov
loopne
sar
fildl
cwtl
cmp
arpl
push
popa
bound
lds
mov
add
or
rcrb
xorb
out
rolb
sti
add
cltd
cmc
stc
push
dec
push
pop
sbb
sbb
scas
xchg
arpl
rcl
mov
pop
insb
add
inc
in
sub
rorl
mov
mov
or
dec
ficoms
dec
test
sub
xchg
xor
xor
fimuls
push
test
dec
into
sbb
and
out
adc
jbe
jbe
add
fsts
push
scas
cltd
fstpt
mov
xchg
xor
insl
addb
leave
dec
imul
mov
loope
cwtl
shl
cmp
xchg
sbb
adc
outsb
mov
lcall
loop
fldl
mov
xor
xor
or
in
push
inc
mov
cmpsl
lcall
mov
mov
imul
add
cmovge
xor
lcall
mov
xchg
lds
in
adc
out
repz
cmpsb
pop
cmp
arpl
cmp
mov
fadds
add
xchg
jno
out
data16
mov
mov
call
mov
xchg
cwtl
adc
cmpsl
dec
pop
sub
bound
ret
jns
add
push
test
or
sbb
pop
xchg
inc
xchg
jle
xor
adc
xchg
shlb
dec
mov
sti
mov
push
adc
push
test
in
lahf
pusha
jne
add
add
inc
lahf
call
mov
into
and
xor
xchg
or
sub
out
inc
mov
adc
mov
xchg
mov
popa
mov
inc
mov
fistl
pop
xchg
mov
shrl
ja
push
lcall
jle
mov
daa
lret
sbb
rclb
adc
dec
and
out
push
faddl
shll
mov
fwait
sbb
or
cli
sbb
pop
push
pop
mov
mov
dec
mov
jl
aas
xchg
cmc
add
pop
mov
rcrb
scas
lea
or
inc
rol
inc
add
dec
cmpl
movsb
ja
inc
andb
in
sbb
mov
push
ret
cmp
or
sub
jge
iret
ss
mov
and
in
inc
add
cmp
int3
lods
fildl
hlt
cmc
and
jg
lcall
loopne
insb
jecxz
or
xchg
pusha
ret
gs
sub
rolb
mov
mov
mov
jge
jg
push
scas
rcrl
sahf
and
ret
pop
fsubrs
mov
call
mov
fisttps
push
sbb
adc
pushf
xchg
outsl
aad
in
mov
shr
cmpb
cmp
sbb
popa
clc
rolb
test
mov
add
cwtl
cmpsl
or
and
mov
outsb
popw
push
cmp
dec
leave
aam
mov
roll
cmp
fs
pusha
test
push
jg
mov
ds
lods
mov
int
cmp
and
cmp
xchg
mov
movl
xor
push
adc
cmp
mov
mov
cmp
sbb
sub
sub
pusha
pop
je
data16
dec
inc
leave
sbb
fcmovb
dec
pusha
xchg
mov
rclb
rep
inc
xor
inc
mov
lahf
in
insb
sub
insl
push
push
jne
nop
fstp
imul
xor
aad
push
sbb
popa
aas
outsb
lahf
lods
fs
xchg
repnz
cmp
inc
test
movsb
fsubl
outsb
loopne
ss
sbb
test
pop
out
mov
dec
shrb
adc
mov
add
gs
jnp
xor
jp
mov
aad
xchg
iret
xor
pop
cmp
ds
cmp
aad
out
adc
je
lds
xor
jae
xor
xchg
push
inc
movsl
adc
mov
loop
ror
sbb
inc
cli
mov
sbb
pusha
mov
ss
mov
push
xchg
nop
inc
mov
bound
xchg
outsb
mov
jb
lret
cld
ds
mov
or
data16
jns
or
mov
jns
cltd
pop
jne
adc
push
data16
cmpsb
movsl
cmpsl
mov
mov
and
enter
mov
add
out
mov
mov
adc
mov
movsb
ja
cltd
jecxz
repz
inc
ljmp
pusha
pop
adc
dec
dec
push
push
insl
ret
ljmp
popa
xor
icebp
das
sahf
aad
pop
add
mov
jo
jns
add
subl
sbb
in
sub
push
ffreep
cmovp
mov
adc
addr16
push
aaa
and
xlat
cs
shrl
mov
call
insl
stos
aam
cmp
in
movsl
addb
dec
stc
or
mov
or
fcmovb
xchg
loop
dec
ret
cltd
repz
ss
orl
sbb
mov
in
andl
push
arpl
cmc
jp
dec
in
push
bound
shll
ds
in
adc
push
push
lret
in
adc
cmpsl
push
cld
xlat
xlat
cmp
mov
inc
js
mov
push
adc
rcr
fucomi
movsb
cwtl
insb
add
mov
pop
imul
jmp
sbb
jg
and
mov
dec
push
dec
je
stc
cmpsl
mov
popa
and
sub
pop
ret
cmp
jecxz
mov
popf
es
mov
andl
popa
aaa
clc
test
adc
int
jl
or
es
lahf
mov
inc
test
sti
fldpi
push
fwait
or
jp
test
popa
mov
outsl
adcb
ja
cltd
xchg
jge
imul
test
cltd
cmc
add
mov
xchg
sub
sbb
mov
xchg
sarl
cmpsl
push
es
push
cs
cmp
ljmp
dec
nop
add
in
xchg
popf
jg
sbb
jns
jecxz
dec
dec
fcomps
lods
xchg
mov
sub
test
dec
cmp
pop
lods
add
xor
bound
ja
sarb
inc
dec
xchg
arpl
hlt
adc
dec
dec
mov
or
push
or
adc
and
or
movsl
xor
cmpsb
push
mov
ss
fwait
es
scas
mov
gs
lret
cltd
or
xor
addl
test
mov
xor
mov
clc
jp
inc
mov
cmp
push
adc
pop
pop
lret
dec
jnp
movsb
pcmpgtb
cmp
cmc
xchg
pop
sub
pcmpgtb
sbb
add
fistpl
loope
movl
data16
fisubs
fwait
and
daa
lcall
add
add
gs
sbb
sub
sbb
sub
jmp
mov
and
ss
push
sahf
movsl
aas
mov
popa
xchg
pop
sub
and
cmpsb
lahf
xchg
mov
xchg
jmp
pop
inc
movsl
sub
inc
in
jno
sbb
lods
and
dec
add
aaa
push
lcall
mov
decl
mov
inc
rcrl
cmpsl
dec
lock
mov
mov
sub
dec
xchg
iret
jno
lock
enter
xor
xchg
into
xchg
mov
shrl
push
cld
jno
and
clc
or
add
or
clc
in
fwait
pop
imul
cmp
cli
adc
pop
inc
mov
mov
jae
dec
sub
ret
sub
dec
aas
and
or
rcr
push
movsb
ror
lret
cmpsb
divb
inc
add
sub
jle
sti
test
flds
dec
outsb
outsl
or
es
pop
out
aas
pop
mov
or
sub
jle
std
jbe
jge
pop
in
mov
add
rcrl
testl
adc
xchg
mov
testb
out
push
push
fdivrl
jno
mov
mov
sub
xor
in
arpl
es
dec
fbld
pop
mov
mov
xor
sbb
sub
fbld
xchg
cmp
cmpsl
pop
inc
cmp
int3
outsb
fs
jle
adc
or
test
adc
mov
cmpl
lret
and
inc
push
test
sub
pop
dec
pop
daa
cmp
inc
sbb
push
leave
inc
cmp
popa
pop
insb
dec
pop
jne
adc
out
icebp
out
mov
pushf
cwtl
push
add
push
popa
and
lret
and
jo
or
mov
inc
ret
jb
outsl
cmpsl
jle
inc
sbb
mov
xor
mov
js
cmp
sub
xorl
push
pop
roll
aaa
addl
mov
std
cmp
outsb
fistpll
fsubs
fdiv
or
ret
jno
std
enter
sbb
and
mov
inc
repnz
adc
add
pop
rclb
cmp
bound
cmp
mov
pop
test
mov
bound
jb
jg
jg
xchg
out
ja
insb
push
cmp
and
cmp
inc
int
inc
aam
push
push
into
sbb
push
fs
lret
mov
rcrb
pop
mov
in
in
jmp
stos
ss
fildll
out
fnsave
in
inc
std
jnp
rorb
hlt
cli
cmp
cld
ficoms
cmpb
in
or
sbb
dec
and
jb
rclb
cmp
pusha
dec
or
in
xor
cmc
sub
dec
loop
push
push
adc
pop
xchg
mov
cmp
xor
pop
pop
sbb
mov
stos
popf
inc
pusha
andb
or
fwait
in
sub
addl
xchg
cmpsl
imul
add
daa
pop
mov
xchg
sti
in
rol
mov
mov
mov
enter
outsb
mov
lahf
push
shlb
or
gs
out
aaa
gs
lret
push
out
add
ljmp
jg
insb
cmp
cmp
sti
arpl
sub
movsb
mov
jnp
aaa
sub
scas
lock
movsl
adc
and
jne
sub
add
fcoms
fdivrl
std
sbb
cmpsl
shll
stos
cmpsb
push
jl
lahf
fwait
les
mov
in
pop
xor
pop
lea
fmul
or
mov
pop
adc
loopne
cmp
aaa
mov
xor
push
fistpll
dec
stos
subl
adc
pop
mov
jmp
sub
xor
mov
cmp
inc
mov
das
or
pop
lret
and
or
popf
outsl
lret
push
inc
in
ror
rorl
fstl
mov
push
mov
ljmp
stc
jbe
sub
int
nop
repnz
xchg
lods
dec
xchg
inc
cwtl
cmpsl
leave
sub
aam
into
es
xchg
xchg
jns
in
sub
cmpsb
mov
imul
outsb
mov
outsb
mov
sbb
xchg
pop
inc
push
pop
xchg
mov
ljmp
inc
dec
clc
push
pusha
lea
push
and
jge
jle
xchg
jecxz
adc
adc
dec
and
pushl
fldl
add
push
lods
pop
popf
push
push
adc
pop
dec
jge
ja
sarb
mov
cmc
ret
jecxz
cmp
push
icebp
pop
fistps
mov
xlat
je
lret
xor
aas
int3
rorb
dec
test
adc
pop
add
push
mov
and
adc
cmpsb
mov
xor
mov
adc
pop
paddusb
aas
js
jb
inc
aam
xor
xchg
jle
push
test
inc
fwait
push
jmp
jae
repnz
icebp
jle
sbb
stos
fstpt
test
std
ret
pop
int
or
add
push
hlt
das
jae
pop
adc
cmp
loopne
addr16
iret
std
shrb
push
cmp
jnp
aam
mov
fisttpll
int
add
push
leave
jge
mov
push
push
dec
adc
ret
jge
addb
and
cwtl
stos
movsb
jp
pop
xchg
jg
xchg
int
push
loopne
cmpsl
pop
fs
sahf
shrl
mov
mov
call
fwait
jns
loop
mov
shrb
sti
cmp
aas
lret
insl
push
jle
cmp
pop
pushf
cmp
ja
pop
fdiv
jl
call
xlat
enter
or
and
scas
movsb
mov
pop
or
int3
xchg
sbb
add
mov
decl
in
xor
dec
shl
sbbb
jle
and
cltd
das
aaa
sub
cmp
adc
in
int3
mov
cmp
adc
dec
and
xor
push
orb
and
xchg
into
out
iret
mov
inc
cmp
repnz
into
mov
nop
inc
add
fcmovne
and
imul
jle
jmp
add
cmp
hlt
movl
andl
arpl
xchg
pop
aas
push
mov
inc
pop
push
outsl
pop
les
incl
mov
push
push
imul
pop
sbb
enter
loop
cmpsl
xor
dec
ret
mov
scas
or
sub
fwait
pusha
inc
arpl
addr16
int3
test
movsb
sub
shll
rorb
push
insb
push
es
cmpsl
cli
jle
lds
lret
lds
mov
aad
and
negb
pop
pop
sub
add
mov
call
mov
mov
mov
cltd
lea
and
and
push
icebp
test
and
stc
add
es
adc
sub
adc
arpl
sbb
adc
and
sub
mov
mov
sub
jo
outsb
cmpsb
inc
dec
jbe
rcl
sub
xor
es
mov
and
cmp
ja
rcll
add
dec
inc
xor
mov
icebp
mov
mov
loop
int3
nop
add
add
hlt
out
xchg
dec
mov
or
and
in
out
add
es
jbe
add
and
inc
cmp
bound
mov
loopne
or
jmp
xlat
rcll
cmpsl
push
sbb
xchg
push
dec
add
ljmp
adc
in
push
mov
or
aam
mov
lds
push
fistpll
test
add
mov
sub
loope
mov
inc
mov
xor
xlat
jb
lods
push
mov
xchg
pop
lcall
stc
mov
shrl
cmpsl
mov
xchg
pop
nop
push
cmp
dec
sbb
mov
gs
test
cli
fists
jmp
and
lret
loop
shll
dec
and
rcr
fnstenv
sahf
jle
dec
mov
xchg
fcmovnu
jne
movb
and
push
jp
hlt
les
test
pop
clc
cmpsb
or
dec
fsubrs
dec
cmc
fldln2
ss
sbb
cwtl
inc
aas
faddl
inc
cmc
imul
inc
cmp
mov
add
and
xor
push
fs
int3
call
out
or
sub
cmpsb
mov
mov
pop
and
xchg
jnp
or
mov
ret
mov
mov
orl
sbb
scas
dec
addl
jae
push
jp
enter
icebp
pop
stos
mov
inc
test
jmp
xor
dec
adc
mov
mov
mov
xchg
xlat
push
push
into
pop
mov
add
jle
movsb
push
cmp
aaa
out
inc
or
mov
iret
xor
dec
in
sub
andb
ret
or
add
pop
mov
jp
dec
or
pop
sarl
inc
daa
xchg
xchg
xor
push
adc
sahf
in
sub
movsl
daa
ljmp
fiadds
mov
cmp
int
cmp
xchg
aas
pop
fwait
imul
scas
repnz
dec
in
mov
inc
popa
loope
imul
xor
xlat
lahf
inc
imul
ja
add
cmpsl
ret
jae
fadd
xchg
orl
loopne
add
roll
fbstp
pop
add
adc
adc
push
jl
sti
ljmp
dec
push
not
sbb
enter
movsb
sub
outsl
loopne
daa
test
xchg
jno
fidivrl
fsubl
and
imul
stos
into
mov
pushf
or
and
cmp
ljmp
lahf
in
mov
mov
addr16
sub
xor
lds
xor
mov
fs
repnz
into
jmp
jp
dec
mov
sbb
mov
stos
ss
lret
dec
cmp
rcrb
jmp
sub
xchg
jp
inc
bound
xchg
jg
es
or
loope
scas
mov
mov
inc
dec
pop
fldl
push
sar
adc
popa
and
xchg
fcomps
and
mov
insb
aad
fcmovnb
data16
iret
aaa
inc
lods
and
stos
out
jmp
adc
mov
jecxz
add
pusha
cmp
sbb
insb
or
test
jmp
fwait
jnp
and
jp
icebp
mov
out
ja
sub
adc
iret
and
daa
idivb
ljmp
jg
lret
sti
dec
enter
imul
jg
mov
cmpsl
cli
and
sbb
add
cmpl
mov
js
dec
mov
stos
aam
jne
ljmp
jbe
jle
dec
adc
adc
xchg
jp
js
dec
xchg
repnz
push
sahf
push
dec
movsb
and
aas
mov
cmovo
mov
ret
sbb
lds
mov
adc
cli
mov
mov
lret
inc
stos
nop
or
adc
lcall
xchg
mov
cli
cmp
xor
test
ficomps
push
daa
push
dec
inc
xchg
fwait
pop
lea
xchg
xchg
dec
test
pop
xor
loop
sbb
sub
sbb
cmp
loopne
loop
out
loope
jns
mov
xlat
jg
negl
jno
lahf
les
scas
dec
iret
ds
push
mov
dec
test
bnd
stos
lea
fidivrs
xlat
pop
cmp
loopne
in
dec
negl
push
dec
shll
mov
push
cltd
sbb
lcall
mov
pop
out
out
outsl
cld
mov
fwait
xchg
cli
scas
enter
push
stos
scas
sbb
push
mov
jbe
jg
ss
mov
mov
push
mov
iret
es
add
test
sbb
jmpw
test
adc
sbb
push
lahf
jg
mov
daa
sbb
pop
add
xchg
xor
sbbb
jno
in
ret
push
repz
cld
sarb
ds
into
pop
loop
cmc
mov
sub
mov
push
pusha
and
push
mov
mov
mov
arpl
jecxz
into
xchg
mov
push
inc
arpl
jne
mov
inc
cmc
jmp
sbb
pop
add
sub
mov
or
mov
mov
sti
mov
sbb
outsl
int3
cmpsb
adc
loope
sbb
sub
clc
xor
divb
stos
repnz
pop
lods
and
sarb
jne
jl
and
mov
mov
adc
xchg
adc
arpl
adc
je
adc
cltd
cmp
bound
mov
xor
add
and
add
imul
push
mov
cs
adc
cmpsb
pop
add
loopne
mov
adc
add
cmp
imul
ljmp
pop
test
mov
adc
ds
enter
pop
movsb
mov
mov
pusha
stc
mov
scas
into
xor
mov
aam
incb
fsubrs
std
add
push
sub
inc
stos
mov
mov
movsl
enter
or
xchg
aas
ss
jge
mov
bound
dec
inc
paddsb
int
lea
int
dec
es
lea
mov
repnz
insb
xor
inc
sahf
push
jns
ljmp
or
or
ja
movsl
fldenv
sbb
push
cmp
or
xchg
mov
in
out
sub
and
insb
pushf
js
mov
push
lock
push
repnz
and
pushf
sti
jecxz
mov
shll
jno
out
fsts
pop
push
cmc
daa
inc
lret
adcl
sub
xor
jb
aas
insl
mov
ja
and
gs
push
xor
or
daa
pusha
push
fisubrl
xchg
mov
adc
fidivs
fisubrl
xor
jnp
mov
cmp
adc
mov
lea
mov
xchg
inc
mov
or
sarl
jb
sbb
insb
imul
and
sub
cmp
sbb
punpckhdq
enter
mov
pusha
xchg
imul
icebp
jbe
jnp
dec
ja
shl
mov
lods
dec
cmc
stos
cltd
ror
nop
pop
cmp
add
jg
jge
xchg
sbb
icebp
mov
sahf
stos
mov
scas
adc
mov
push
int3
andl
std
scas
js
jecxz
cmc
adc
fists
or
hlt
sbb
je
pop
mov
mov
mov
lea
xlat
ss
sub
mov
mov
stc
pop
mov
sub
xor
cld
int
shrb
add
pop
ret
jo
call
cmp
or
mov
jbe
pop
push
in
mov
xor
fadds
mov
shll
and
insb
xchg
pop
ret
push
mov
or
pop
out
dec
pushl
mov
std
movsb
outsb
xor
push
xchg
call
xor
mov
bound
aas
push
pushf
push
shll
sub
adc
lret
daa
nop
dec
dec
dec
lahf
fsubrs
cs
int3
or
push
or
or
push
dec
outsl
notb
movsl
test
adc
das
outsl
xlat
test
lods
lcall
dec
pop
inc
pop
sbb
das
xchg
mov
stos
mov
lds
jp
mov
dec
xor
fcmovnbe
pop
xchg
nop
add
pop
adc
call
lea
fldenv
push
je
pop
mov
sub
out
ret
and
in
dec
sahf
fdivrs
xchg
push
imul
data16
sub
int
or
pop
xor
push
lds
inc
test
pusha
xor
scas
insl
fldenv
cmp
jnp
stc
mov
sbb
popa
and
inc
pop
cmp
movsl
rcrl
jae
xchg
sub
adcl
pop
mov
es
cmp
into
sub
cmp
mov
outsl
sbb
js
push
push
jmp
xlat
ja
mov
cld
push
repz
dec
mov
jmp
in
mov
pop
xchg
push
mov
pop
xchg
aas
out
imul
jmp
inc
jmp
enter
or
stc
ror
or
or
pop
push
adc
ret
sub
outsb
lcall
sbb
add
mov
rcrl
ficomps
jp
mov
bound
stc
popa
jmp
lcall
movsl
les
mov
jns
test
loope
adc
int3
mov
out
rclb
push
xor
or
data16
sub
iret
jne
in
push
nop
aam
rorb
negb
push
sub
cltd
mov
add
pop
jmp
shr
push
push
xchg
adc
push
mov
cmp
xchg
rclb
cltd
add
jmp
lcall
push
sbb
fwait
xchg
and
push
adc
ss
push
mov
testb
jno
push
lock
jno
ljmp
jb
xchg
xorb
fs
insl
push
lds
mov
out
pop
fidivl
mov
jmp
popf
mov
fistpl
sub
jl
test
aas
stos
fwait
adcb
mov
push
adc
adc
push
shl
dec
pop
or
lret
cmp
xchg
mulb
jne
aas
aas
jl
rcl
dec
cmp
clc
and
mov
sbb
ret
add
ja
mov
into
pushf
mov
cmp
xorb
xor
imul
pop
call
clc
inc
dec
ja
test
nop
jb
retw
cmp
fwait
sub
dec
js
daa
jle
sub
sahf
test
adcl
or
negb
icebp
sub
stc
xor
xchg
test
test
add
inc
add
mov
cmp
or
mov
sbb
subl
xchg
push
movsl
jae
and
mov
and
arpl
lcall
xor
movsl
add
push
cltd
jg,pt
jecxz
popl
fwait
pop
jecxz
in
pop
jno
xchg
into
xchg
dec
ja
cmpsb
xor
inc
lods
mov
sbb
ret
inc
lds
xchg
in
fidivrl
cmp
xchg
cld
pop
push
jne
orb
xchg
imul
pop
lds
loopne
dec
loop
popa
adc
cmp
push
add
insb
xor
movsb
ss
pop
cltd
jg
cmp
pop
movb
cltd
call
push
mov
test
mov
aaa
dec
es
jo
out
jo
cmp
test
xchg
int3
movsl
ljmp
dec
shlb
inc
and
repz
push
sub
jl
push
es
into
imul
loope
mov
xor
mov
xorl
lods
scas
add
adc
dec
xchg
mov
add
pop
and
fldenv
cmc
ds
mov
scas
xchg
xor
jmp
dec
lret
stos
lds
adc
stos
mov
ret
or
je
out
cli
push
push
cmp
andl
roll
and
nop
dec
push
enter
incl
rclb
jo
pop
scas
testb
dec
mov
stos
aas
cmpsb
adc
decb
gs
fisttpl
xchg
jae
cmpsl
push
cmpsb
arpl
mov
in
in
jo
cs
pop
dec
roll
xor
add
mov
mov
rcrb
jbe
push
das
mov
xor
rorl
addl
xlat
push
mov
xchg
test
mov
jbe
pop
cmp
faddp
jns
movsl
sub
add
int3
push
je
popf
cwtl
cmp
xchg
daa
call
mov
iret
shl
xlat
pop
sbb
push
and
popf
xchg
sub
ja
dec
push
and
mov
mov
test
outsl
in
hlt
sti
mov
cmp
push
out
jmp
jns
jne
cmp
mov
sti
mov
mov
cli
into
ja
jge
mov
sub
aas
negb
cs
fisubl
jg
xor
lret
jo
sub
mov
movsl
lods
adc
cmp
jb
mov
rorl
mov
xchg
push
push
divb
add
push
clc
fs
bound
sub
jno
scas
movsb
out
mov
lods
dec
scas
jbe
and
les
int3
gs
aad
pop
lods
lds
int
insb
int
lahf
lods
dec
out
mov
add
mov
adc
adc
lcall
or
jnp
inc
xor
push
pop
jb
daa
ljmp
add
dec
and
dec
xor
sub
sbbb
faddp
push
cwtl
inc
pop
out
mov
pop
cmp
xlat
sar
push
jae
icebp
pusha
fadd
xor
out
inc
mov
addr16
sub
inc
sub
push
dec
sbb
adcl
stos
add
push
in
or
ljmp
mov
inc
addr16
mov
inc
enter
in
dec
popa
fwait
aas
aad
movsb
imul
bound
sahf
lcall
and
and
mov
out
aad
cmp
shl
les
and
jl
imul
stos
mov
mov
xor
add
dec
and
fisubl
test
adc
xchg
in
lret
sub
mov
push
mov
mov
out
jno
repnz
test
push
jmp
jnp
jae
mov
cmp
loop
sub
icebp
push
mov
pop
arpl
inc
push
mov
push
inc
jmp
addb
jo
gs
jo
cmpl
call
addr16
push
insb
into
stos
aad
gs
dec
fcmovu
dec
dec
leave
fisttps
in
add
add
popa
pop
iret
pushf
lea
dec
dec
aas
mov
or
mov
add
sub
mov
lods
cld
dec
dec
dec
stc
arpl
cmp
mov
retw
pop
aam
mov
xchg
and
js
call
and
adc
rolb
xor
pop
sbb
cmc
rclb
mov
xor
outsb
into
mov
dec
sbb
cmp
repz
adc
std
into
and
xchg
out
popa
push
or
mov
push
jb
adc
lahf
push
mov
pop
mov
cs
int3
in
ret
addr16
outsl
jmp
ret
inc
enter
das
sbb
lods
ljmp
mov
inc
daa
mov
andb
lret
dec
add
add
lret
aaa
scas
and
jl
adc
sbb
orl
or
cmp
push
aaa
pop
xchg
movsb
aas
rclb
fcomi
stc
sti
sbb
sbb
sub
test
popa
and
addb
fnstcw
push
mov
mov
aad
loopne
lods
es
fs
dec
inc
bound
xor
cmp
sub
add
daa
push
popf
dec
orl
mov
pop
inc
pop
inc
mov
xchg
cld
sbb
stc
clc
mov
out
pop
loop
cmp
imul
xchg
shrl
out
xchg
dec
push
or
pop
pushl
ficompl
dec
lahf
add
and
xchg
cld
dec
dec
xor
leave
addr16
das
jo
jbe
push
mov
xchg
xchg
xchg
rcrl
cmp
aas
or
pop
stos
popa
ja
pop
jns
je
push
scas
sarb
mov
mov
xchg
jb
inc
test
jl
cld
fadd
fsubl
mov
xor
xchg
loop
or
xchg
xchg
shlb
push
in
jno
enter
dec
mov
add
or
add
out
scas
and
mov
movsb
mov
je
call
or
pop
xchg
shll
sbb
xor
cmp
pop
adc
imul
scas
in
sbb
popa
stc
mov
shll
std
push
addr16
jo
cmpsb
leave
mov
push
vpsrlq
sbb
cmovb
push
inc
xchg
pop
push
or
es
dec
jno
adc
popa
ret
cmovae
aaa
mov
repz
xor
jns
jle
xchg
aad
and
push
add
ret
clc
mov
outsl
xor
ljmp
shll
add
outsl
arpl
loope
sub
rorl
lock
jle
inc
por
or
bound
scas
push
loopne
jmp
jb,pt
imul
sub
aad
cmpsl
rcl
inc
mov
sti
sub
jns
daa
adc
add
dec
cmp
xchg
sbb
popf
sbb
xorl
push
add
lahf
sarb
jmp
jae
lds
std
call
mov
cmp
and
jo
popa
push
imul
mov
dec
jne
push
xchg
cld
mov
cld
add
cwtl
sbb
aad
movsl
dec
jle
fwait
adc
subl
lea
out
mov
cs
xchg
inc
inc
fcmovnu
xor
mov
or
bound
mov
jg
adc
mov
stos
fisubrs
das
ds
adc
sub
adc
add
jmp
pop
mov
loope
adc
mov
xchg
mov
out
xor
in
cmpsb
or
out
out
pop
lret
sbb
mov
scas
jne
arpl
push
cmp
scas
fldl
push
ficoms
sbb
xchg
hlt
jp
inc
push
clc
test
int
inc
pop
mov
out
mov
mov
faddl
jmp
xchg
iret
sub
push
sub
jbe
sub
arpl
mov
sbb
nopl
jne
cmp
pop
bound
insl
les
outsl
test
push
cmpb
out
divb
push
jg
xchg
int3
filds
push
adc
mov
aaa
push
xchg
or
cmp
incl
dec
cmp
jge
pop
lea
into
xor
rcll
pop
mov
push
jmp
daa
jne
sub
out
test
xor
arpl
and
dec
in
mov
dec
pop
jmp
cmpb
movsl
iret
xor
cmp
jns
xor
dec
test
cmp
add
or
sbb
push
js
sbb
cmp
inc
icebp
and
js
cmpsl
out
repz
call
sub
sub
pop
rorl
mov
mov
cmpsb
add
add
pop
mov
add
in
pop
mov
mov
lcall
jb
push
test
add
out
mov
stos
xor
xchg
das
aas
fcomps
lret
enter
sti
add
pop
fbld
stos
mov
inc
pushf
hlt
inc
shll
mov
lock
sbb
in
pop
xchg
and
sbb
aas
mov
jl
lods
xchg
push
mov
inc
pop
sub
cld
lods
stos
jnp
push
add
inc
add
pop
push
cmp
mov
xor
or
popa
push
and
xor
pop
pop
insb
sahf
clc
nop
mov
leave
jnp
or
movsl
popa
mov
mov
mov
push
idiv
aaa
lret
mov
rcrl
mov
mov
jle
fldl
cmp
in
adc
sarl
in
mov
movsl
fbstp
repz
mov
shll
ror
lds
out
jge
outsb
cwtl
add
arpl
subb
fnsave
mov
sahf
mov
mov
push
iret
fstpt
lods
pop
pop
mov
in
lahf
lock
jb
mov
gs
enter
inc
xchg
out
pop
mov
mov
sbb
mov
mull
mov
mov
xchg
outsl
orl
repnz
inc
fldt
aad
mov
dec
mov
cmc
dec
in
cltd
jmp
xchg
aas
push
inc
sbb
push
push
mov
pop
sub
push
cmpsl
pop
jbe
orps
push
cmp
in
push
and
out
add
imulb
push
ret
push
add
stc
xor
push
mov
pop
rcrl
jge
loope
sti
adc
jp
data16
inc
sub
jbe
das
sub
dec
test
fdivrs
push
xchg
cmp
push
xlat
push
es
mov
punpcklbw
xor
push
int3
incl
jl
and
fwait
lcall
loop
push
inc
inc
mov
leave
and
pushf
popl
add
je
es
add
xchg
mov
jg
mov
es
int3
jne
xchg
mov
and
into
push
outsl
ljmp
mov
mov
mov
lds
sbb
adc
dec
xor
int3
daa
sub
sub
aaa
lods
push
lea
mov
int
enter
mov
jp
and
lods
lods
add
jno
sub
lahf
iret
iret
or
xor
pop
mov
lds
sbb
push
jnp
xor
add
stos
aaa
adc
xor
mov
leave
mov
pop
xlat
dec
fucom
iret
sub
insb
sub
in
mov
jmp
jae
test
outsl
imul
and
cmp
cmp
fisubrs
lahf
pop
out
das
out
sub
ret
rorl
pop
push
sbb
inc
mov
bound
sub
in
adc
pop
loop
rolb
fsts
push
imul
push
scas
stc
jmp
mov
cmp
dec
aaa
push
pop
xchg
inc
cmc
sub
cmc
cmp
mov
cmp
inc
push
fs
add
pop
pop
add
fdecstp
jns
ficompl
arpl
js
scas
ds
adc
or
add
cld
popf
mov
fdivs
ds
in
fs
nop
dec
ds
fwait
push
inc
mov
adc
jnp
scas
addr16
xchg
aam
jo
fnstcw
fs
pop
xor
adc
aam
adc
dec
in
cs
adc
inc
sub
mov
stos
cmp
cmpsb
cmpb
and
mov
jb
lahf
push
xchg
mov
cmpsb
xchg
test
jbe
push
and
adc
pop
loopne
in
pop
js
repz
inc
push
adc
xchg
xchg
mov
jg
lods
ss
fwait
vorps
ss
xor
and
push
pop
jl
xchg
mov
arpl
aaa
sub
push
sub
push
cltd
lahf
xchg
xor
fwait
out
jg
cmp
enter
arpl
mov
test
pop
xorb
mov
rcrl
inc
jne
jg
jmp
adc
xchg
push
idivl
jae
inc
and
mov
add
sbbb
add
cmp
and
pop
jg
sub
mov
cmp
sub
push
mov
inc
rclb
pushf
push
in
das
cmp
jmp
mov
cld
fsubl
das
loop
inc
sbb
cli
roll
cmc
xadd
push
pop
data16
icebp
sub
pusha
add
pop
xor
jmp
test
lods
jle
sarb
inc
cmp
and
cmpsb
dec
jno
popa
and
ja
and
imul
xor
adc
xchg
pusha
inc
sub
jg
pop
mov
push
faddl
cmpsb
inc
mov
ret
or
cmp
adc
outsb
std
inc
xchg
std
xchg
jmp
mov
jae
testb
xchg
ja
popf
add
dec
and
loope
stos
and
in
les
push
orb
push
mov
jne
dec
fxch
sub
in
cltd
jo
add
adc
movsl
dec
fldl
add
stos
rclb
xchg
inc
decl
pop
jl
lahf
mov
aas
aad
outsl
cltd
xchg
enter
xchg
sbb
hlt
mov
sub
push
and
add
sub
cli
bound
test
add
icebp
sbb
add
jmp
mov
dec
adc
sti
pusha
sbb
fdivr
add
insb
aaa
in
cmc
insl
lods
mov
ret
cltd
movsl
ss
fs
nop
lods
sbb
lds
push
shrb
and
les
jmp
loope
and
rcr
mov
hlt
cmpsb
xlat
jno
lods
lods
push
stc
lret
cmpsb
jae
push
fadds
lahf
adc
sub
cmpsb
pop
aas
das
xor
push
pop
xchg
inc
mov
dec
mov
dec
jbe
push
xchg
jge
into
add
stos
dec
rorb
repnz
sbb
inc
aad
add
ja
pop
or
cmp
xchg
mov
pushf
icebp
push
test
scas
in
test
rcrl
sub
test
sub
repnz
insb
xchg
lcall
test
mov
dec
test
sarb
cmp
cli
mov
outsl
pop
ljmp
ficomps
incb
imul
popf
mov
mov
xchg
imul
jecxz
inc
sti
jmp
cmp
mov
mov
mov
lret
dec
test
push
shlb
push
xorb
pop
addb
cmp
jne
push
test
xor
cmc
or
add
sbb
pop
cmp
dec
push
mov
scas
cld
popa
cmp
inc
mov
test
fsub
cs
dec
mov
inc
or
mov
bound
les
fs
lcall
mov
shl
mull
cwtl
xchg
dec
add
and
sub
data16
mov
mov
sbb
mov
les
jb
and
cmp
in
lret
fcmove
sar
pusha
cmp
pop
icebp
subb
sbb
out
add
and
movsl
jle
cmpsb
clc
or
lcall
sbb
inc
mov
add
mov
xor
and
icebp
push
daa
inc
cmp
pusha
pop
inc
mov
xor
fst
fptan
cmpsl
cmp
adc
ja
popa
adc
loope
loop
cmpl
divb
xor
fisubs
sti
mov
mov
sbb
xor
mov
cmp
mov
repz
and
outsb
movsb
movsb
shlb
movsl
xchg
cmp
outsl
adc
cmpsl
movsb
call
jnp
mov
data16
lds
mov
rol
or
jne
cltd
stos
ret
sub
or
jg
push
dec
movsl
xchg
pop
jmp
sahf
outsb
imul
fnsave
fdivr
outsl
pop
mov
add
push
mov
adc
cmp
shrb
pop
mov
test
sub
pop
int
jecxz
rorb
or
iret
test
adc
dec
in
or
and
inc
jns
mov
push
fcoml
push
inc
rol
sub
fucomp
imul
mov
lahf
stos
adc
dec
inc
add
push
or
popf
mov
rcrl
sbb
add
pop
mov
jae
mov
ja
pushf
pop
jnp
outsb
pop
pop
lret
js
pop
jge
sub
jmp
inc
into
and
fistpl
push
mov
scas
add
lods
shl
or
insb
pop
xor
push
pop
add
mov
mov
in
scas
jecxz
or
outsb
jae
xor
sbbl
adc
push
stos
push
mov
clc
mov
dec
in
fiaddl
popa
aas
fsubr
mov
pusha
xchg
cmp
mov
es
xorl
imul
cld
inc
daa
les
into
inc
rcrl
in
pusha
pop
nop
ss
mov
sbb
fstpt
push
adc
xor
cmove
jno
movsl
pop
pop
xor
adc
xchg
adc
xchg
test
xor
pop
pop
cmovae
push
add
data16
xor
jmp
das
push
fstps
psubusb
inc
jecxz
rolb
sbb
sub
mov
and
mov
outsb
fsts
adc
mov
mov
xor
mov
add
nop
and
mov
mov
lahf
inc
ja
sbb
fldt
cmc
or
inc
mov
mov
cmp
mov
dec
in
jb
cmpsl
testb
rorb
cmp
push
adc
and
jae
in
inc
cmp
clc
mov
and
push
jge
repnz
test
pop
rcrl
ss
idivb
add
sbb
lahf
push
arpl
aad
enter
dec
jle
cmp
jge
sbb
stc
sbbl
mov
xchg
out
subb
in
insl
rorb
xchg
mov
mov
xor
gs
jae
jb
fldt
lcall
popf
stc
jae
movsl
ja
mov
jle
cmp
push
pop
xor
mov
pusha
cmpsl
cmp
mov
xor
sbb
outsb
fisttpll
imul
mov
cmp
cmpsl
dec
inc
mov
aaa
repz
push
lcall
xchg
in
cmp
add
lret
push
aas
xor
xor
jb
xchg
and
orb
xorl
pop
arpl
or
outsl
mov
repz
jae
pop
cmpl
in
in
leave
mov
arpl
and
mov
mov
ret
aam
cmp
lods
das
xlat
sbb
into
mov
test
lcall
sub
lcall
add
sbb
push
adc
jbe
jecxz
cmp
loop
idivl
jmp
cmp
outsb
jne
ret
jl
jmp
notl
mov
pop
inc
dec
fiadds
lods
pop
or
adc
mov
push
jge
int3
lret
add
ret
pusha
mov
ja
cmp
mov
cld
mov
shll
add
cwtl
aam
mov
insl
xor
jge
mov
data16
mov
and
jg
loope
rep
mov
iret
mov
mov
mov
ds
jnp
xor
nop
inc
sub
pop
cmp
std
xlat
aad
push
mov
sub
lods
enter
push
sahf
pop
enter
stos
add
xlat
pop
aaa
xchg
jmp
push
fcoml
imul
adc
and
je
dec
pop
xchg
sbb
roll
cmp
mov
repnz
pop
popa
mov
xor
push
nop
lcall
std
mov
ljmp
mov
dec
xchg
adc
sahf
mov
xor
jg
loop
cmc
icebp
lea
mov
call
cmpl
cltd
pop
or
aaa
jnp
mov
loop
ret
dec
mov
out
xor
sub
jmp
mov
leave
into
scas
mov
lret
mov
bnd
and
push
scas
test
cmpsb
xchg
push
out
xor
lds
call
and
call
push
pop
cld
adc
jae
fcmovb
or
xchg
enter
inc
outsb
sub
js
bound
test
pop
lds
xchg
nop
lahf
insb
ljmp
fsubr
call
and
inc
push
cmp
xor
dec
push
sub
adc
stos
stos
cmp
pop
xchg
jno
jg
jae
in
adc
dec
insl
daa
popa
dec
mov
fs
sbb
jge
xchg
mov
fnop
dec
rcl
imul
ds
pop
sbb
jnp
sbb
jmp
pop
cmp
pop
mov
test
outsb
bnd
fisubrl
mov
jg
and
and
pop
int
icebp
popa
repz
subl
dec
repz
dec
lods
rcll
push
data16
push
mov
aaa
sbbb
sti
or
mov
mov
pop
and
loope
sbb
inc
push
pop
jp
and
push
rorb
popa
lret
xor
daa
add
or
jg
loop
xlat
cmpsb
arpl
xchg
mov
mov
mov
pop
shlb
nop
push
test
inc
popf
mov
add
std
faddp
fs
cmp
and
or
data16
dec
test
imulb
or
mov
psubq
ja
dec
add
ret
fs
sbb
sbb
mov
and
es
ret
cmp
push
out
in
lea
dec
push
inc
mov
add
mov
adc
add
and
push
data16
aas
adc
mov
push
mov
dec
jno
inc
xor
jae
imulb
icebp
ret
sbb
lock
xchg
cmp
add
xor
mov
xor
test
stos
sbb
adc
pushf
cmp
push
pop
aas
lods
pop
and
adc
loop,pn
pop
stc
icebp
out
subl
ret
pushf
pop
test
adc
add
inc
and
pop
outsl
repz
pushf
pop
fwait
mov
inc
lret
jl
je
pop
in
dec
push
gs
xchg
mov
mov
sub
lods
mov
dec
push
xor
ljmp
inc
push
insb
inc
scas
test
faddl
subb
scas
mov
iret
pop
mov
pop
jle
mull
add
push
dec
push
ficomps
cmp
push
jnp
divl
mov
or
shr
js
xchg
mov
xchg
outsb
jp
pop
jge
scas
loop
popf
xchg
xor
les
cmp
cmp
xchg
push
enter
adc
pop
xor
lock
sbb
sbb
gs
insb
xor
pop
loop
pushf
pushf
out
inc
xchg
cmpb
rcl
cltd
adc
push
xchg
scas
inc
xchg
stos
cmp
lods
daa
mov
fimull
fcmovnb
fs
fisubl
mov
in
sti
cs
movsl
out
repz
mov
sub
cmp
in
in
cld
fwait
xchg
out
cmp
jb
push
sbb
stc
jb,pn
lods
or
xor
js
icebp
cli
lods
push
fldenv
ret
inc
lcall
add
lods
lcall
jae
push
inc
dec
bnd
mov
jb
into
and
cmp
xchg
xchg
adc
out
and
or
adc
icebp
cmp
test
add
bnd
mov
adc
scas
xchg
or
xor
adc
cmp
sar
xchg
in
mov
ljmp
por
mov
mov
dec
leave
out
mull
and
add
out
insl
sub
popf
pop
test
decl
lret
fstps
rcr
sti
jne
xchg
leave
or
loop
mov
pop
and
inc
test
xor
jo
addr16
lret
adc
adc
push
out
mov
adc
adc
incl
or
das
bound
xchg
or
scas
in
jno
push
dec
pop
adc
mull
add
and
mov
push
popa
add
ja
ds
sub
aam
adc
mov
clc
repz
out
std
jp
leave
loop
incb
sub
stos
movsl
test
pusha
fidivl
xchg
shl
stos
mov
aas
jb
data16
mov
xchg
jbe
imul
ljmp
ret
jbe
pop
clc
cwtl
aad
dec
test
adc
divl
xchg
stos
inc
mov
addr16
dec
cltd
add
in
daa
clc
roll
enter
add
add
dec
stos
addl
sub
sahf
ss
sbb
sub
std
jns
test
dec
sub
rclb
cli
enter
xchg
into
sub
loopne
xlat
test
and
cmc
gs
scas
xchg
dec
out
and
sti
outsb
dec
add
iret
sub
test
cwtl
push
mov
lock
loop
aas
cmpsb
pop
rorb
ret
mull
dec
lret
aam
fdivr
adc
mov
shrb
enter
sub
in
and
out
int
dec
push
and
xchg
inc
sub
mov
push
xor
cmp
mov
and
jno
ss
pop
test
lds
inc
xor
in
lret
cmpsb
test
cltd
insb
adc
std
xor
push
lret
mov
jecxz
scas
jno
mov
repnz
shr
sbb
or
mov
jo
ret
mov
lods
or
and
lret
pop
add
cmc
or
ret
cld
leave
xor
dec
sbb
es
add
xchg
aas
fadds
sbb
mov
or
mov
jnp
dec
aas
xlat
and
push
ficompl
inc
mov
es
loopne
jb
aaa
sub
mov
push
arpl
sbb
ret
add
jne
cmpb
xor
lods
shrl
test
insb
cs
es
adc
add
xchg
cmpsl
test
inc
inc
fcomip
adc
lcall
lds
mov
or
jbe
lock
fs
inc
lock
imul
cs
in
popa
pop
and
insl
mov
mov
or
xchg
ds
or
pusha
lock
sub
jne
mov
sbb
adc
mov
pop
pop
cmp
dec
sub
lds
add
inc
pop
xchg
cmp
call
and
aaa
or
inc
xchg
mov
enter
push
fcmovnu
cmp
lret
push
outsl
adc
xchg
out
or
imul
push
std
stc
cmpsl
dec
add
pop
hlt
cmp
push
outsl
ljmp
push
loop
pop
sbb
iret
cltd
xchg
mov
xchg
jp
jecxz
dec
xchg
sahf
sti
cld
or
test
insb
push
xchg
jg
pushf
ja
leave
dec
cmp
mov
mov
aad
adc
push
pop
es
int
sbb
xor
daa
or
inc
stos
fnstsw
fdivrs
mov
shrl
pop
and
and
sarl
pop
push
repz
inc
xor
adc
in
xlat
rol
movsl
jecxz
cmp
or
dec
es
les
fwait
add
jecxz
cltd
call
mov
push
ds
inc
cwtl
dec
pop
jne
sub
pop
stos
leave
movsl
add
lds
andb
in
jl
stos
push
popf
cmc
add
or
arpl
add
push
int3
sub
jg
hlt
push
repnz
push
dec
add
sbb
mov
or
xor
cwtl
push
pop
mov
int3
out
push
cli
stos
out
in
sarl
mov
test
mov
mov
insl
pop
popf
jo
je
scas
jg
push
sahf
sbb
fstpt
in
mov
mov
mov
stos
xchg
mov
fidivs
dec
mov
pop
push
dec
dec
pop
cmpsb
mov
mov
xor
scas
jl
bound
sbb
adc
mov
inc
push
in
push
sbb
lmsw
xchg
in
jmp
dec
xor
pop
fs
mov
mov
push
add
pop
pop
xor
in
mov
leave
inc
lret
xor
xlat
xchg
test
cmp
movsl
add
insb
daa
imul
push
cmp
enter
push
mov
mov
push
aad
stos
inc
jmp
xchg
jge
mov
jg
mov
lds
mov
xlat
lret
arpl
shlb
idiv
and
lods
dec
mov
lods
cmpb
out
adc
push
sbb
push
ljmp
gs
loope
or
adc
and
mov
pusha
xor
ret
mov
std
sub
adc
xchg
and
sub
adcb
es
dec
fcmovb
fsubrl
mov
xor
pusha
in
daa
arpl
adcb
out
fiaddl
add
push
sbb
repnz
and
adc
orl
inc
jp
cmc
cli
add
jmp
ret
dec
xor
push
frstor
xchg
fisubrl
xor
sbb
scas
rorb
jg
js
in
cli
mov
test
aas
mov
adc
repnz
xchg
inc
das
sub
stc
fwait
push
pop
sbb
and
xchg
test
inc
or
aad
mov
push
lcall
addb
inc
orl
test
dec
push
or
dec
inc
lret
xchg
xor
gs
add
jge
push
xchg
lock
daa
stos
or
fsubrs
pavgw
jbe
dec
pop
ds
popa
dec
es
xor
cwtl
cmp
inc
push
dec
push
adc
iret
xor
in
lods
lahf
mov
les
js
aam
ss
jmp
mov
ja
push
mov
into
adc
pop
nop
cld
inc
add
mov
ret
sub
imul
mov
fs
das
push
popl
dec
sub
pop
xchg
rcrl
in
xor
les
mov
mov
sub
gs
add
sub
out
sbb
mov
div
mov
inc
jns
mov
hlt
or
cltd
gs
sub
xor
test
ds
push
mov
jbe,pt
xchg
jno
loopne
dec
popf
sbb
jae
jecxz
xchg
push
cli
fistps
fsubrl
pand
imul
inc
addr16
mov
lahf
test
fnstsw
fs
jg
sub
test
cmp
xchg
xor
mov
xchg
mov
sbb
iret
lods
cmp
lcall
xor
rolb
aas
enter
mov
cmp
xchg
pushf
aam
clc
outsb
gs
fidivrs
fsubl
jg
test
xchg
repnz
cwtl
pop
mov
cmp
mov
jne
pop
lock
dec
cmp
jmp
mov
ret
mov
xor
and
xlat
loopne
cmp
inc
decl
movsl
test
clc
sub
je
push
adc
mov
fildll
into
pop
adc
clc
and
and
adc
cs
mov
aas
aas
mov
pop
add
adc
pop
stc
pusha
fst
out
or
xor
fs
push
mov
pop
inc
mov
movsb
mov
add
and
dec
xchg
test
pop
stc
popa
cmp
mov
mov
fbstp
jns
leave
aaa
dec
andl
inc
sbb
js
fiaddl
push
int
adc
xor
adc
std
sbb
pop
call
sbb
xorl
fildl
mov
cmp
adc
add
mov
cmp
mov
push
shlb
ja
or
mov
divb
or
xchg
xor
pop
pop
repnz
xchg
add
sti
das
fcmovnb
fadd
jmp
lcall
sub
std
je
fdiv
push
and
cmp
repz
loopne
mov
mov
in
jl
mov
sub
mov
shll
cltd
pop
cmp
xor
int
add
mov
es
nop
xor
stc
into
sbb
push
mov
inc
push
mov
syscall
xchg
fidivl
and
rcrb
test
dec
jmp
cmp
jb
xchg
ja
pop
fmuls
xor
pop
cmp
push
dec
clc
jb,pt
rclb
lcall
mov
filds
xchg
ss
xor
imul
push
shll
das
fistpll
inc
pusha
push
cli
pop
fucomip
vpshlb
adc
subl
aaa
lods
add
dec
mov
sbb
sbb
mov
and
sbb
pusha
push
in
lods
jnp,pt
ret
push
mov
loope
pop
mov
mov
mov
inc
mov
adc
stos
outsb
cmp
outsl
test
fldcw
mov
cmp
lds
pusha
sub
outsl
jb
jle
mov
out
outsb
and
jge
mov
jae
testl
dec
test
mov
sbb
xchg
xor
scas
icebp
call
icebp
xor
das
or
ret
loopne
popa
shlb
mov
outsl
xchg
frstor
ljmp
inc
ret
fisubrs
incl
inc
sub
sti
scas
loop
push
aas
add
xchg
int
loopne
cmc
dec
inc
xchg
add
add
add
and
xchg
repz
or
push
negb
cmpsb
mov
lea
aaa
cmpsb
pop
inc
js
outsl
pop
push
mov
or
mov
sub
test
push
mov
jmp
mov
iret
stos
dec
in
stos
pop
add
popa
pop
shrb
and
jae
cmpsb
out
pop
mov
push
mov
sti
sub
xor
xchg
push
mov
aam
cwtl
in
xchg
add
push
lahf
sahf
and
popf
dec
mov
testl
mov
xor
lret
cmp
das
cmp
lods
push
shl
fnstenv
dec
push
jo
xchg
xchg
fistpll
cmc
push
das
loopne
cmc
push
dec
outsb
xchg
inc
xlat
sbb
inc
jg
mov
sbb
mov
out
dec
xor
mov
mov
jle
lock
add
ss
cmp
add
mov
dec
mov
scas
and
sbb
movlps
pop
and
mov
in
dec
daa
popf
inc
lret
xchg
xor
rolb
fcompl
scas
mov
lcall
lods
jo
shlb
push
popa
bound
into
pop
push
or
test
sbb
jp
sbb
jmp
mov
mov
inc
call
sub
addr16
cwtl
cmpsl
cmpsb
out
jmp
jnp
cmp
je
push
cmp
movl
push
test
out
adc
xlat
add
loopne
daa
jge
clc
cli
add
inc
mov
popl
dec
outsb
scas
in
pop
sti
das
pusha
sarb
mov
dec
sub
bound
fsubl
pop
imul
jne
push
lcall
testl
push
or
jo
lods
pop
and
fucomi
dec
icebp
mov
lea
shll
mov
jp
and
mov
ds
outsl
lahf
pushf
fwait
repz
push
cld
push
shl
jp
jnp
mov
fsubp
shll
pop
add
fcmovnbe
add
jg
in
rorl
repz
test
push
add
andps
fisttps
mov
jmp
cmp
int
ficomps
sahf
jb
js
inc
xchg
frstor
and
cmp
and
cmpsl
lcall
scas
add
cwtl
fmull
cmp
and
add
xlat
fimull
daa
cmc
imul
or
pop
repnz
ffreep
movsb
push
sysexit
jne
push
mov
js
mov
lahf
and
xor
mov
mov
sahf
xchg
jb
cli
adc
hlt
bnd
out
mov
mov
dec
out
outsb
cltd
loop
mov
lcall
sbb
xchg
mov
and
adc
sub
loope
stc
mov
push
test
pop
push
add
call
fs
bound
jp
je
cltd
inc
dec
mov
jge
add
pop
nop
xor
mov
xlat
add
sbbl
push
jle
mov
dec
dec
popa
mov
fs
mov
imul
mov
adc
jb
adc
add
mov
loopne
push
pop
sbb
pop
jg
push
fiadds
xchg
jne
lock
push
jno
xchg
xor
xlat
gs
into
lds
sbb
rcll
add
cltd
mov
mov
pop
in
mov
adc
xor
jb
fidivrl
pushf
popa
lcall
mov
mov
sbb
xchg
inc
dec
cmp
sti
mov
jnp
das
adc
mov
inc
insb
pop
and
in
repnz
mov
mov
jb
pushf
jae
adc
sbb
push
fwait
dec
sub
pop
out
dec
insb
sub
imul
test
in
cmpsb
mov
xchg
adc
push
je
mov
push
call
jg
outsl
lds
aaa
add
es
aaa
std
cld
xlat
popa
mov
mov
mov
cld
xor
xor
push
add
ja
iret
insl
jle
inc
jne
push
xor
sbb
imul
dec
cli
repz
pop
cmp
or
repz
fnstenv
pop
xchg
mov
add
push
loop
jnp
mov
mov
cmpl
pop
add
xchg
jb
mov
cwtl
push
or
pop
loopne
sbb
adc
daa
mov
in
jne
adc
push
mov
ljmp
or
mov
in
in
lcall
mov
in
cltd
mov
cmpsl
xchg
in
adc
int
add
lret
pop
mov
test
mov
mov
aas
sbb
sub
and
stos
loope
dec
mov
mov
dec
add
orl
mov
push
rcll
or
push
or
mov
rorl
sub
mov
cmp
add
mov
adc
xchg
scas
dec
mov
imul
jne
popl
sbb
jg
xchg
mov
sbb
dec
adc
fistl
pop
test
or
clc
pusha
sahf
mov
rcrb
or
and
jmp
lock
movsl
scas
jnp
lret
imull
mov
jb
inc
mov
cmpsb
xchg
mov
aaa
xchg
aaa
test
mov
addl
aaa
mov
out
pop
or
aaa
enter
lret
inc
xchg
stc
add
ret
lret
in
or
xorb
mov
testb
sti
addr16
in
dec
jbe
xchg
adc
ret
add
dec
sub
xor
jecxz
stos
lret
stc
pop
push
insl
cmp
or
xor
pop
bound
lea
sbb
repz
dec
adc
enter
call
js
fcompl
jno
mov
xor
lcall
adc
pushf
cltd
and
cmp
fnsave
cmp
faddp
inc
bound
mov
push
negb
lods
jo
fisubrl
inc
jae
iret
bound
xchg
dec
fidivrl
popl
outsl
scas
xchg
add
mov
lods
test
daa
sbb
lret
mov
xchg
loop
pop
shll
idivb
cmp
sbb
cmp
in
ret
inc
sub
fistl
daa
jbe
popf
sbb
lcall
fcmovne
add
rcl
or
mov
jnp
mov
or
pop
rcl
xchg
inc
stos
js
jle
mov
cmp
mov
mov
loope
pop
and
or
push
xchg
jecxz
adc
jo
popf
dec
pop
mov
incb
mov
int3
das
cmp
pop
mov
jbe
pusha
pop
jb
into
lds
out
adc
cmp
cmp
xchg
int3
inc
cli
adc
popa
sub
push
sbb
inc
lret
mov
popa
test
add
adc
fldt
mov
cmp
filds
mov
mov
imul
pop
ret
fnclex
dec
insb
sbb
pop
shlb
enter
lods
testb
inc
adc
dec
faddl
mov
aaa
jbe
xchg
jns
dec
xor
xor
mov
sub
add
in
add
fwait
pop
shlb
aam
shrl
xchg
mov
arpl
cmp
shlb
mov
ja
xlat
mov
cmp
cmp
jnp
dec
adc
mov
int3
mov
jle
test
stos
or
cltd
xchg
sbb
xchg
dec
stc
ljmp
rorb
mov
xlat
lret
mov
sbb
ret
xchg
mov
jb
or
add
inc
mov
rcr
xchg
or
mov
fdivl
je
sbb
scas
das
push
movsl
xchg
inc
pop
xor
cltd
mov
inc
cmp
movsl
cmp
popf
sub
sbb
dec
scas
xchg
sarl
jmp
or
arpl
rcrb
jp
lahf
les
sbb
loopne
js
pop
add
cmp
aad
pushf
in
orb
xchg
mov
aam
mov
xchg
jbe
addr16
hlt
adcl
pop
add
jp
jg
cmp
arpl
add
jnp
test
jb
dec
jmp
push
fiadds
loope
inc
das
je
pop
rorl
add
mov
sbb
outsl
push
add
ljmp
sti
cld
push
rol
js
fmulp
mov
pop
push
nop
and
dec
mov
inc
enter
sbb
push
dec
xchg
mov
pop
xor
jle
fiadds
and
adc
aam
cmp
and
jb
dec
pop
repz
cwtl
xor
ret
push
and
insl
sub
sarb
push
add
loopne
out
sub
movsb
and
addr16
mov
push
rclb
inc
push
jmp
or
and
repnz
int3
sub
inc
mov
es
outsb
xchg
adc
ja
sub
sub
add
mov
cli
mov
repz
js
int
cmp
test
test
aad
hlt
aas
or
sbb
repnz
cmp
pop
fcmovne
sbb
bound
lret
xchg
dec
cltd
or
sbbl
inc
sbb
jg
notl
add
lret
loope
inc
ficoml
dec
dec
sub
push
jp
lds
mov
lock
aad
dec
pop
mov
les
test
enter
and
stos
adc
lcall
or
daa
sti
test
jne
or
sar
shrb
or
loope
leave
add
mov
sub
rcrl
test
pop
add
push
cmp
rcll
sub
xor
es
mov
movsl
mov
ljmp
pop
pop
arpl
in
stos
push
dec
movb
in
icebp
test
ficompl
cltd
and
in
aaa
sbb
inc
mov
sbb
pop
data16
mov
mov
jne
lcall
or
movsl
enter
popa
shll
xor
xchg
idiv
dec
jae
ret
inc
sub
cwtl
or
out
xchg
push
sti
cmp
mov
mov
pop
outsb
cli
mov
mov
pop
xor
mov
and
dec
inc
icebp
push
into
xor
int
mov
sbb
xchg
jmp
pop
inc
daa
mov
xchg
es
popf
pop
mov
lods
fisttps
cwtl
xor
mov
mov
aas
loopne
movsb
out
aaa
mov
pop
sbb
outsb
inc
in
inc
xchg
std
sub
insb
lods
sbb
jno
lods
cli
scas
fwait
dec
cltd
lds
add
or
fistpll
out
adc
adc
adc
push
xlat
hlt
jg
cs
sub
push
orb
jecxz
jnp
sub
dec
and
bound
mov
or
shl
test
and
cmp
sbb
hlt
fistpl
dec
arpl
lret
cmp
pop
dec
cli
add
jmp
adc
mov
mov
es
mov
pusha
pop
pop
mov
mov
adc
lahf
test
cmp
mov
and
inc
fstpt
jge
not
mov
push
dec
sub
jecxz
loop
movsb
mov
test
out
lock
dec
sub
dec
ss
rcrl
adc
out
sub
mov
clc
call
jmp
xlat
sbb
inc
pop
fildl
jp
jmp
lods
jmp
add
nop
mov
repnz
push
test
lds
xor
sbb
sub
aas
add
outsb
jbe
dec
dec
pop
cli
inc
add
movsl
add
dec
push
pop
lcall
out
fldl
dec
test
and
xchg
inc
lock
das
movsb
add
mov
jne
pop
cld
cld
inc
mov
aas
add
fistl
sbb
jmp
ret
std
cmpb
jge
out
scas
pop
ja
lods
jge
mov
test
mov
adc
sbb
pop
scas
es
sahf
push
xchg
pusha
dec
adc
inc
movsl
ljmp
and
adc
push
sbb
stos
sti
cld
cs
cmp
mov
xchg
popf
loopne
adc
ds
ret
or
out
fstl
or
movsl
test
loop
push
out
jns
imul
mov
shl
xchg
fs
sbb
dec
in
orb
jno
andb
xchg
and
cmc
cmc
cltd
andl
loope
add
sahf
out
aam
das
das
test
cmp
inc
repz
cmp
int3
int3
ret
xor
add
data16
sarl
push
xor
cmp
adc
in
movsb
daa
dec
pop
repnz
jecxz
cmp
push
out
and
popf
dec
or
mov
popf
jno
pop
add
out
dec
mov
ljmp
lahf
movsl
aad
jmp
ljmp
cmpsl
out
push
mov
and
mov
repnz
xchg
mov
push
sub
sub
dec
fwait
cs
jmp
and
sub
sub
mov
xor
in
daa
divb
shl
fisttpl
add
nop
mov
cmc
rcll
mov
inc
jg
jo
cld
sub
jae
addl
sbb
ds
out
pop
dec
adcl
and
adc
lods
ja
jns
mull
fsubrs
dec
inc
mov
mov
jns
sti
adc
mov
mov
add
loop
daa
aaa
sti
out
inc
daa
mov
pop
jnp
in
ljmp
add
es
stos
lcall
xor
jbe
mov
cli
pop
clc
cmp
mov
scas
outsl
mov
pop
jle
xorl
testb
adcb
enter
push
imul
ss
sbb
lret
out
or
or
sub
mov
mov
lret
cltd
pop
adc
rorb
sahf
pop
in
iret
add
lret
mov
mov
movb
xchg
leave
out
sub
stos
adc
mov
mov
rcl
and
les
inc
fisubl
xchg
sbb
iret
add
xor
add
mov
mov
push
jmp
dec
mov
and
and
sbb
aad
call
dec
push
in
push
push
pop
sub
fadds
and
mov
cmp
pop
arpl
jbe
fistl
xchg
and
aaa
pop
pop
pop
pop
ja
call
out
cmp
std
dec
aas
stos
insb
mov
int
cmp
pop
rcrb
dec
adc
inc
lods
adc
nop
jo
pop
in
loope
lock
dec
xor
inc
or
lods
cld
xchg
jb
xchg
insb
fists
push
pop
and
imul
out
push
mov
inc
in
outsb
fnsave
fdivp
call
mov
rorl
daa
stos
mov
aas
dec
fists
gs
pop
mov
pusha
jae
mov
sub
sarl
xor
fstps
int3
jns
fcmovu
adc
sbb
out
loopne
cmp
ljmp
es
jne
pop
sbb
movsl
pop
mov
notl
jle
clc
mov
fsub
inc
xor
push
stos
xlat
jg
cmpsl
sub
test
jmp
dec
pop
stc
lods
sub
stc
icebp
dec
adc
xor
fwait
les
scas
shrb
test
test
inc
mov
mov
loope
int
fsubrl
mov
ljmp
mov
and
pop
push
out
inc
addl
insl
xlat
mov
js
inc
dec
mov
pop
pop
fdivr
xor
dec
imul
push
stos
lods
push
addr16
cld
fsubrl
xchg
inc
imul
mov
pop
mov
mov
inc
cmp
mov
jno
adc
les
add
inc
and
fwait
xchg
pop
dec
push
out
aad
repz
or
jne
loope
and
rcrb
dec
mov
addr16
jmp
or
js
xchg
aas
mov
push
push
sbb
jne
lods
popa
jge
sbb
push
mov
inc
xchg
bound
add
inc
js
test
mov
std
pop
dec
adc
in
mov
xchg
push
xor
out
dec
dec
mov
jb
test
push
insl
jge
mov
jl
sbb
jl
adc
addr16
fs
adc
inc
leave
test
mov
mov
xor
mov
mov
loope
loop
adc
mov
repz
push
or
mov
dec
sub
repnz
jnp
cwtl
cwtl
sub
out
sti
stos
push
jno
cmpsl
cmc
dec
xlat
stc
adc
adc
in
or
jle
or
dec
cmp
xchg
sarl
or
movsb
imull
jmp
sub
scas
push
scas
add
jmp
movsb
pusha
lock
mov
sbb
insb
push
jle
add
push
mov
xchg
neg
subl
enter
out
jns
into
in
inc
adc
adc
jbe
xchg
lods
cwtl
mov
adc
orl
test
add
cmp
pop
and
adc
cmpsb
cmp
inc
xchg
test
cld
sahf
jbe
leave
insb
insb
out
insb
add
mov
popf
aaa
hlt
push
sbb
jns
sarb
enter
mov
outsl
jmp
adc
cmp
mov
xchg
mov
lcall
xchg
add
lock
cmpsl
mov
cmp
xchg
arpl
inc
mov
xor
mov
js
dec
test
mov
mov
xchg
jne
lods
ret
in
repnz
cmpb
lea
mov
pusha
movsb
outsb
insl
shlb
sub
popf
pop
loop
inc
enter
dec
push
jmp
leave
addr16
pop
pop
xchg
add
cmp
xchg
lret
fmul
mov
roll
vmaxss
icebp
cld
daa
insl
fdivrp
in
dec
iret
sti
mov
shlb
pushf
cmp
pop
mov
insl
inc
inc
inc
jmp
add
cli
jl
ds
push
test
push
ljmp
mov
fwait
jne
mov
repz
push
sbb
sub
cmpsl
sub
fsubr
dec
jns
pop
in
xchg
in
mov
push
pop
in
add
lret
or
cwtl
xchg
inc
inc
in
push
lock
dec
jmp
pop
and
js
jp
xchg
fcmovbe
sub
mov
push
xchg
push
cmc
mov
sub
and
xchg
dec
pop
cmpsl
adc
fcoms
jnp
cmp
xchg
adc
aam
lret
cmc
push
fbld
adc
jmp
and
out
out
imul
jmp
fistl
out
and
mov
cmp
mov
sub
mov
in
pop
int
fwait
cs
mov
inc
pop
movsb
ljmp
mov
adc
fildll
push
outsb
inc
xor
or
xchg
pop
mov
divb
push
lahf
clc
cmpsb
fisttpll
imul
scas
int
repz
xchg
mov
pop
xlat
outsl
sbb
adc
popa
cwtl
int
inc
lds
push
dec
xchg
xchg
clc
dec
ss
loope
arpl
cmp
pop
test
jno
out
inc
adc
aad
pop
sbb
adcl
andb
dec
shl
lods
push
push
sub
adc
ja
pop
sbb
fcoms
or
adc
push
arpl
imul
sub
mov
adcb
add
test
lods
fwait
jno
aam
sub
inc
call
mov
lods
adc
lret
lods
addr16
stos
cmc
pop
push
sbb
mov
inc
insb
shrb
shlb
xchg
jg
ret
xchg
jg
movsb
adc
xor
stos
push
aam
ret
sbb
mov
jno
xchg
sahf
mov
stc
in
mov
push
dec
not
inc
mov
out
leave
lcall
out
mov
xor
mov
lods
fcomip
push
out
or
jge
xlat
mov
cltd
inc
add
ret
push
insb
mov
fildll
jns
mov
cmp
and
hlt
js
mov
push
fnsave
sarl
std
mov
jge
mov
fmul
xor
arpl
add
inc
xchg
sarl
or
mov
mov
fcoml
mov
cmp
sub
lods
inc
dec
hlt
jmp
aad
test
dec
lock
sub
push
mov
cmp
xor
movsl
sub
or
ret
or
xchg
fimull
pushf
scas
xchg
into
mov
in
in
jp
rcll
shlb
push
mov
dec
movl
popf
scas
cmpl
mov
sbb
lea
xor
sub
jge
xchg
push
cwtl
int
dec
enter
sub
ss
cmpsl
out
jp
sub
jmp
leave
pop
cld
pop
arpl
pop
mov
js
push
imul
add
adc
fdiv
pop
outsl
jno
xchg
dec
and
or
jge
mov
sub
cmp
call
sub
pop
and
mov
mov
aas
fdivs
lcall
mov
or
icebp
fsubrs
fisttpl
fcomip
push
cmp
loop
adc
shlb
hlt
add
pop
lock
outsl
and
jb
repnz
or
sub
jno
test
sub
cltd
stc
fcmovbe
dec
enter
call
xor
pop
dec
mov
xor
mov
xor
stc
pop
ljmp
cmpsb
cmpsb
leave
test
outsb
cwtl
mov
std
xlat
movsb
pop
adc
push
jmp
imul
jno
cmp
ljmp
movb
dec
mov
lret
add
nop
leave
mov
jp
dec
xchg
loopne
out
clc
add
mov
fisttpll
xchg
mov
aaa
std
mov
xor
ret
adc
adc
mov
insb
subl
pop
add
inc
or
cli
dec
adc
jbe
cmp
aas
sbb
cmp
adc
mov
fs
popa
lahf
iret
std
or
pop
jb
pop
sub
loop
xchg
scas
mov
or
add
lcall
lods
and
cmc
fdivl
lods
or
pop
fsubl
xchg
hlt
clc
leave
mov
ret
insl
jl
pop
cwtl
jbe
cmp
fwait
stos
xchg
in
je
sahf
pop
insl
inc
mov
lods
adc
pop
or
jge
add
sub
and
ds
fs
dec
jo
dec
push
pop
pop
fsubrs
insl
and
xor
push
movsb
bnd
mov
sub
rolb
insl
dec
mov
lcall
sub
fisttps
incl
dec
push
clc
sbb
icebp
xor
out
rolb
les
pop
ret
movsl
adc
fcom
out
in
aad
ds
mov
mul
popa
jae
cmpsb
out
pop
push
or
nop
push
je
push
mov
push
aad
daa
testb
clc
pop
cli
jp
in
in
jge
dec
fmuls
cmp
je
xor
int
xor
mov
mov
cmpl
push
add
not
int3
sahf
cwtl
jmp
inc
add
js
add
and
push
iret
xchg
or
ss
mov
push
enter
iret
or
and
xchg
xchg
inc
pop
xor
mov
mov
jecxz
mov
mov
add
sbb
stos
insb
fcmovne
inc
scas
mov
idivb
jne
sbb
ds
mov
jg
or
dec
test
loopne
repz
adc
out
inc
outsl
pop
mov
daa
iret
add
mov
dec
mov
pop
or
and
dec
sub
cwtl
inc
sub
mov
jnp
test
mov
lods
ret
in
testl
xchg
cmp
push
lods
pop
insb
icebp
add
test
ljmp
jle
lea
stc
std
sub
mov
mov
adc
adc
loopne
pusha
repnz
adc
cmp
pop
lock
cmp
imul
jno
test
pop
and
and
add
push
clc
push
xor
icebp
ja
mov
fidivs
imul
aas
sub
sbb
sbb
jnp
out
outsl
push
lret
sbb
adc
ja
or
popa
lock
inc
outsb
xchg
sbb
jnp
inc
xor
movsl
lods
cltd
adc
mov
out
xchg
test
jno
jp
imul
dec
mov
jns
or
aad
imul
int3
std
and
inc
sbb
cmp
inc
clc
and
inc
idiv
add
add
jne
and
ljmp
test
je
mov
out
cmpl
push
test
xor
shl
cmc
imul
jmp
fdivr
mov
sub
out
jne
call
sub
ljmp
dec
xchg
mov
add
mov
cmc
fdivs
into
sbb
sbb
mov
lods
and
test
test
push
mov
in
hlt
sarl
jbe
mov
xchg
shll
jb
daa
mov
xchg
icebp
add
add
sub
hlt
or
jle
inc
pop
mov
gs
mov
sar
xor
inc
in
lea
lds
sahf
jle
mov
or
jl
loope
cmp
pop
mov
pop
push
sub
stc
and
inc
inc
push
test
and
out
iret
test
xor
and
mov
xor
mov
repz
cmp
into
mov
pushf
inc
in
xlat
sub
in
cmp
dec
dec
movsl
loopne
movsb
mov
pushw
mov
aam
jae
out
jge
in
jae
lods
mov
xchg
add
loop
adc
inc
mov
scas
cmp
jle
shlb
pop
lods
adc
xor
cmp
mov
and
inc
cmp
in
test
gs
mov
lods
call
popa
xchg
cmpsl
xchg
test
mov
mov
xor
cmp
jmp
pop
sahf
shll
outsl
test
add
out
int
imul
xchg
and
lret
out
pusha
int
scas
xchg
adc
fs
mov
cmpsb
mov
sbb
test
lret
dec
dec
mov
outsl
add
pushf
adc
xchg
and
xor
fld
sub
rcrl
push
sbb
jp
sub
bndstx
push
in
cmp
test
push
mov
push
or
or
pop
mov
add
push
outsl
mov
scas
jne
enter
stos
movsl
aam
sahf
sarb
lods
out
lret
dec
cmp
cs
pop
aam
add
mov
out
test
sti
pop
jmp
test
jns
out
in
out
das
mov
push
dec
jb
std
mov
jge
enter
movsl
shrl
ret
data16
pusha
mov
dec
mov
mov
test
or
adc
adc
inc
int
adc
add
inc
pushf
shr
enter
pop
inc
sub
dec
scas
scas
sbb
push
jne
inc
fidivs
jge
sub
clc
jge
sub
or
mov
add
mov
ja
repnz
nop
stc
lcall
sub
adc
out
clc
dec
ds
outsb
jno
mov
xor
add
or
push
add
sbb
cmp
or
pop
not
push
icebp
daa
repz
mov
and
jnp
add
outsl
popf
fnstenv
out
xchg
mov
jp
loopne
or
gs
out
lcall
push
lods
in
dec
lcall
jmp
xor
xor
inc
adc
mov
icebp
dec
xor
shll
mov
scas
xor
jle
mov
mov
in
das
lret
xlat
sub
push
mov
jle
outsb
push
or
inc
iret
sub
sub
rclb
fld
movsl
cmp
lock
sub
sub
pop
adc
cmp
fisubs
pop
jbe
cmpl
je
push
pop
mov
cmp
aaa
gs
mov
and
shll
mov
dec
xchg
mov
sub
cmpsl
xchg
scas
mov
mov
dec
mov
cmp
hlt
xchg
and
cmpsl
rcr
lret
nop
ljmp
outsl
sbb
std
sub
mov
pushf
push
hlt
jle
pop
nop
arpl
add
jl
push
int3
dec
pushf
ficompl
or
ljmp
sub
mov
mov
sbb
rclb
jno
in
mov
sar
into
xchg
jno
mov
and
mov
loopne
xchg
and
pop
mov
cltd
imul
dec
sub
ja
mov
cld
out
pop
lret
leave
mov
iret
jp
out
popa
mov
mov
js
jbe
xchg
test
repnz
push
push
test
pusha
loop
dec
sti
mov
lret
jg
divb
int3
cmpsl
mov
mov
jp
sahf
loope
mov
or
std
jl
fistps
and
jp
sti
sbb
std
lahf
push
leave
fs
dec
aaa
mov
enter
notl
push
popa
xchg
shl
ljmp
data16
or
addr16
inc
sub
jo
xor
dec
stos
mov
scas
add
cmp
mov
jnp
mov
mov
adc
push
cmp
divl
pop
sub
push
iret
mov
dec
pop
test
cmp
in
cmp
push
push
sahf
inc
aaa
sub
push
adc
cmpsl
xchg
pop
ret
sub
jo
jae
dec
insb
dec
mov
cmp
mov
outsb
dec
les
lock
je
pop
jmp
fisubrl
cmp
jge
push
adc
push
aam
jecxz
pusha
lock
out
lods
dec
mov
lods
and
push
inc
add
je
xchg
xchg
xchg
lds
loopne
jo
xchg
mov
jl
cltd
adc
fndisi(8087
fsubl
jne
imul
mov
into
sub
outsl
loope
sbb
mov
int
sbb
loope
testl
push
pop
jecxz
mov
xlat
xchg
gs
push
enter
sub
push
or
xchg
cmp
or
mov
jge
push
or
popf
pop
push
xchg
sbb
mov
loopne
cwtl
repz
clc
sahf
enter
fsubs
out
jle
inc
ja
cld
add
or
repnz
mov
clc
icebp
out
popa
in
test
fbld
or
add
lret
ret
sub
inc
or
inc
das
inc
ds
cmp
hlt
insl
push
push
fisttps
imul
clc
sbb
cmp
dec
fcmovbe
dec
aad
arpl
mov
xor
add
mov
or
cmp
and
adc
cmp
inc
jg
mov
mov
packsswb
rcrl
cmp
lahf
cli
push
xchg
adc
aaa
cld
mov
jp
xor
push
es
sbb
sub
mov
dec
xchg
aam
popa
fnstcw
sub
ficoms
push
sbb
jbe
shll
or
into
cmc
push
adcb
fists
stos
inc
call
mov
jmp
stos
xor
sahf
cltd
sub
mov
add
cmp
out
mov
xchg
push
fnstenv
xchg
jmp
push
xchg
adc
xchg
cmpl
inc
nop
call
popf
bound
out
stos
cmpsl
mov
out
cmp
mov
aaa
mov
clc
leave
cld
mov
lods
add
inc
lea
xor
pop
push
push
mov
fstpl
add
sbbb
repz
out
ficomps
cmpsb
cmp
test
enter
jnp
pop
mov
cs
data16
leave
jge
subb
cmpsb
jns
cli
jne
int3
in
hlt
jne
and
inc
stc
xorb
mov
lret
test
cli
ret
mov
xchg
push
insl
movsl
adc
roll
loopne
test
sti
xchg
icebp
addr16
dec
or
repz
sti
stos
dec
adc
ret
sub
cmp
sbb
inc
aas
in
xchg
mov
test
mov
jl
pop
mov
adc
or
imul
insl
jns
jae
xchg
aas
insl
add
sub
cmpsl
xchg
xchg
xor
hlt
or
push
jb
sub
or
push
aam
push
sarl
cs
sbbl
add
scas
shll
imul
es
iret
ja
ror
push
sti
inc
cltd
cli
idivb
ds
push
or
and
and
push
iret
inc
addr16
xor
movsb
pop
mov
xchg
das
fwait
in
lret
sub
mov
int3
sbb
dec
pop
dec
rcrb
dec
loopne
pop
adc
xchg
ljmp
mov
inc
out
orb
adc
sub
push
pop
shlb
clc
cmp
sub
mov
jno
arpl
push
insb
push
and
push
jno
adc
mov
inc
pop
aaa
jnp
int
xchg
inc
jns
xorb
hlt
test
sarl
add
data16
movsl
ja
adc
mov
ljmp
sahf
into
icebp
add
fs
dec
sub
push
pop
push
inc
cmp
jae
adc
iret
ds
imul
sub
xor
iret
ror
in
mull
jmp
sub
xchg
inc
jbe
lcall
push
leave
clc
fcmovb
jmp
addr16
add
stos
xor
es
stos
addl
scas
or
inc
mov
xor
mov
stos
movsb
imul
xorb
mov
rcl
add
sbb
push
lea
or
loope
adc
ror
mov
sub
iret
in
in
jge
orl
inc
xchg
jo
popf
pop
mov
adc
sar
inc
outsb
xchg
pop
mov
idivb
shr
adc
dec
shl
insb
inc
cmp
cmpsl
testl
fisubrs
cmc
push
into
push
inc
jmp
fcmovbe
iret
inc
dec
add
add
add
sti
xor
ljmp
notb
pop
cli
xchg
daa
notl
fs
inc
add
xchg
divl
xchg
cmp
push
ret
test
popa
rol
gs
mov
mov
mov
movsb
mov
in
nop
adc
xchg
mov
xor
jbe
test
mov
xlat
jg
cmpsl
push
cli
js
fadds
xchg
push
pop
xchg
cmp
rep
stos
mov
jp
sub
sub
mov
popa
cmp
inc
clc
in
fcoms
pop
ljmp
and
out
pop
xor
shlb
repnz
imul
and
sahf
test
out
les
xlat
pusha
cmp
shrb
add
arpl
xchg
push
lods
mov
push
or
adc
outsb
sub
and
jo
fs
cmpsb
rorb
push
cmpsb
out
in
push
cmc
idiv
push
mov
ss
inc
pop
fcmovnu
movsb
push
rcll
fldt
xor
pop
jno
and
mov
divl
jmp
fadds
sub
pop
pushf
clc
loopne
cld
cltd
and
mov
jmp
adc
sub
adc
mov
push
pop
lds
sbb
sub
push
sub
mov
mov
sub
lret
sbbl
sub
pushf
nop
pop
adcb
test
and
pop
mov
mov
push
int3
lahf
jb
arpl
lock
xchg
pop
outsl
add
lret
inc
in
int3
lret
mov
cld
jecxz
xchg
add
dec
xorl
hlt
jmp
popf
push
das
pop
xchg
push
stos
sub
outsl
jns
mov
mov
call
cltd
je
xchg
mov
loope
add
xchg
jbe
mov
push
add
fcmovnu
mov
mov
cld
inc
push
xorl
pop
xchg
push
dec
cmc
flds
push
dec
xchg
cwtl
mov
jb
pusha
adc
cmp
enter
dec
gs
inc
in
sbb
push
cwtl
pop
imul
popa
shr
inc
shl
addr16
call
js
fsubs
mov
or
lods
adc
or
inc
iret
pusha
ret
data16
fnstenv
pop
popw
push
rolb
adc
xlat
adcl
aas
mov
jl
scas
movsb
loop
fmul
rcll
shrb
jo,pt
aas
fdivl
rolb
scas
add
outsl
jl
push
loope
xchg
jecxz
push
or
vsubpd
and
and
imul
lods
iret
adc
xor
mov
jo
insb
in
bound
sbb
sti
add
ds
dec
pop
cmc
js
dec
jbe
add
mov
pop
jge
imul
in
jecxz
push
inc
imul
dec
xor
movsb
ja
adc
call
mov
into
pop
enter
mov
jno
push
dec
mov
cmp
pushl
jge
rolb
add
sub
inc
mov
subl
lahf
int
bound
sub
xor
js
mov
mov
xchg
cld
xchg
int3
filds
mov
gs
xchg
mov
mov
jae
xchg
int
popa
pop
mov
scas
daa
popa
mov
insb
nop
mov
or
int3
and
or
jbe
jge
mov
dec
lods
lea
cmp
aam
mov
lods
pop
ret
nop
cmp
inc
movsb
mov
xchg
scas
inc
fldt
mov
out
or
daa
mov
jb
into
and
xchg
pop
dec
sbb
add
das
adcb
cmp
packssdw
pusha
xor
aas
iret
mov
aam
mov
stc
lds
cmp
int3
add
in
pop
insl
ret
and
and
inc
dec
lcall
xor
xchg
out
movsl
jle
lods
rcrl
push
mov
lods
mov
mov
pop
fwait
and
sub
arpl
mov
and
and
pushf
inc
int3
add
enter
aad
aam
daa
movq
inc
mov
push
repnz
bswap
je
sbb
insl
inc
incl
xchg
lods
std
mov
out
testb
mov
mov
sub
scas
testl
xchg
pop
imul
mov
outsb
ret
popf
dec
arpl
fwait
int3
mov
insb
insl
mov
and
mov
insl
mov
lds
nop
adc
inc
andl
xchg
fidivl
mov
and
sbb
dec
mov
sub
aam
inc
xchg
push
push
rolb
lret
pop
divb
sub
cli
and
sbb
fmul
ds
lret
hlt
movsb
inc
push
iret
and
sub
arpl
fsubl
pusha
imulb
iret
push
mov
sarl
js
and
jl
data16
test
xchg
rorb
sbb
enter
out
mov
and
idiv
mov
fiadds
gs
jl
insb
cltd
jg
push
jmp
sub
push
js
add
inc
push
cmc
push
das
sbb
cltd
mov
sti
mov
cmc
fisubrl
cltd
cli
decb
dec
and
push
mov
mov
insl
inc
and
adc
nop
push
shlb
fxch
xchg
sarb
mov
dec
sub
mov
cmp
das
cmpsl
add
loopne
push
xchg
cmc
daa
mov
test
lcall
add
push
xchg
sbb
and
dec
mov
popa
ja
xchg
clc
out
cmp
xor
fs
xor
test
loop
pop
and
rcl
je
adc
xlat
sub
dec
aaa
jnp
or
shlb
dec
or
adc
int3
jo
pop
lret
imul
lcall
ja
inc
dec
filds
mov
pop
inc
int
sbbb
jbe
fcmovne
cwtl
pop
mov
cmp
mov
pop
icebp
andb
shl
add
js
push
cli
loop
xor
mov
adc
push
lock
rcrl
cmc
imul
mov
mov
cmp
mov
sahf
push
mov
daa
dec
ljmp
mov
xor
or
cmp
dec
dec
push
repz
xchg
cmp
or
ror
hlt
dec
inc
jo
dec
cmp
js
jp
sbbl
xchg
xchg
mov
add
adc
orl
stos
inc
jle
xchg
jb
das
addl
push
aam
int
dec
repnz
mov
sbb
dec
sti
cmpsl
jg
xchg
lret
movsb
or
and
and
int
jb
mov
cmp
psraw
mov
mov
ficoms
xor
cmp
or
mov
push
xor
adc
in
stos
cmc
sub
push
aam
icebp
not
cmpb
pop
jmp
mov
xor
data16
fildl
out
leave
mov
mov
jb
add
sbb
mov
loop
test
fiadds
aam
and
test
aaa
cmp
fnstsw
cwtl
xor
mov
repnz
mov
mov
out
pop
dec
sub
adc
cmp
mov
mov
push
pop
insb
fldl
mov
add
movsl
jbe
sbb
xor
mov
inc
lahf
pop
sbbl
cmp
adc
fnstenv
mov
sbb
inc
lcall
test
sbb
and
aad
xchg
popa
in
and
in
imul
das
mov
pop
nop
or
int
lock
sub
cli
in
mov
and
fwait
in
sti
inc
popf
repz
push
sub
push
rcrl
gs
push
xchg
outsl
in
cwtl
sbb
sbb
inc
mov
dec
jmp
adc
call
out
xor
mov
inc
stc
roll
leave
outsb
xor
jb
xor
loop
scas
mov
jge
outsl
mov
push
push
movsb
sub
pop
sbb
push
or
xsave
dec
cltd
out
push
sbbl
pop
stos
fcoms
mov
mov
ret
push
inc
outsb
sub
cltd
jb
cltd
aam
fmuls
add
into
sti
inc
test
xchg
jge
cmpsl
call
pop
push
cmp
pop
pop
jecxz
adc
push
sbb
xchg
or
and
mov
or
cmp
int3
xor
xchg
jg
inc
shll
mov
movntq
popf
or
out
sbb
mov
sub
ficoml
xchg
and
xor
es
das
sbb
cwtl
loopne
mov
sub
jmp
insb
push
and
xlat
mov
cmp
cli
or
add
and
shlb
dec
and
mov
mov
xor
rolb
stos
xchg
fsubl
lcall
inc
push
xchg
aaa
cmp
mov
sti
mov
mov
cwtl
stc
add
and
sahf
loope
mov
or
mov
data16
or
outsb
incb
outsb
add
sub
or
fdiv
cmp
imull
inc
mov
adc
out
cwtl
push
push
xchg
pop
cltd
loop
test
in
and
in
xor
dec
sar
xlat
mov
inc
test
xchg
cli
jg
inc
jns
push
sbb
into
stos
xchg
cmc
cltd
xor
out
mov
jae
sub
int3
fcomi
lods
loopne
mov
mov
push
cmpl
ret
loopne
loope
mov
xor
movsl
and
cmp
jecxz
and
mov
dec
dec
pusha
icebp
xchg
imul
dec
daa
sti
jp
movsl
adc
or
lret
dec
addr16
jg
push
scas
iret
jb
out
pop
fs
aam
fsubrs
cltd
aad
scas
add
add
adc
mov
hlt
mov
xor
xchg
or
fldenv
jnp
add
mov
test
stos
shrl
pop
pop
mov
xchg
popf
ret
cmp
push
mov
mov
mov
in
out
mov
in
call
in
and
xchg
stos
push
pushf
or
lea
sbb
popf
push
cmp
and
fs
jno
in
mov
popa
test
xlat
jns
adc
mov
xor
pop
iret
xor
and
fnstenv
adc
inc
mov
clc
pop
inc
push
imul
shr
cmpsl
sbb
add
mov
cmc
dec
ds
xchg
ljmp
dec
clc
mov
ljmp
dec
iret
outsb
mov
lea
jo
add
fistps
int3
mov
lods
ret
scas
cld
popf
test
adc
push
jmp
xchg
fildll
decw
into
and
iret
mov
dec
pop
pop
jp
xchg
and
xor
xchg
and
and
out
loopne
lods
jp
jp
xchg
pop
pop
popa
mulb
add
sub
ljmp
mov
leave
orl
push
insl
mov
mov
icebp
cmp
adcl
push
cwtl
sti
or
sbb
jl
das
jecxz
or
inc
xor
cs
dec
pop
push
xor
adc
add
test
sbb
sub
jl
add
mov
fistpl
fnstsw
mov
addr16
jmp
arpl
inc
shll
sub
test
xchg
mov
add
push
enter
and
jl
xor
faddl
pushf
popa
xlat
loop
movb
cwtl
jae
and
repz
mov
jp
fsubrl
pop
adc
fcmovnu
pusha
add
lret
mov
in
xchg
jbe
and
or
mov
int3
rorb
mov
xor
mov
inc
push
incl
xchg
test
push
sub
in
xor
sbb
shlb
pop
xchg
das
mov
or
or
aad
sbb
ja
adc
xchg
mov
pop
pop
pop
in
lret
std
in
fisubs
shrl
and
insl
inc
lds
jg
xchg
mov
push
xor
popf
xor
push
sbb
and
mov
sub
xlat
push
lahf
push
xchg
cltd
cmp
rcr
sbb
sub
dec
or
push
lret
mov
cmpsl
mov
jmp
push
lret
lret
lret
adc
pop
dec
sub
out
fstps
mov
lcall
pop
and
std
jge
addl
lds
mov
cld
mov
sbb
cmpl
out
shr
fucomp
pop
fcmovu
into
inc
pop
dec
bound
ja
les
call
sub
pop
cwtl
lret
xchg
pop
add
cmpsb
adc
les
xor
mov
push
imul
cmpl
sbb
mov
and
mov
xor
pop
in
jle
pop
mov
xlat
adc
icebp
movsl
sbb
mov
dec
push
xor
push
jns
mov
xor
es
in
mov
js
fisubs
push
or
jle
mov
fdivr
shl
scas
movsl
clc
stos
in
ja
adc
mov
and
jge
enter
inc
insl
add
lret
pop
inc
cmpsl
push
ljmp
xchg
add
mov
xchg
xchg
push
rcrb
add
xor
pop
loope
fxch
mov
and
inc
jmp
dec
int3
dec
es
stos
arpl
test
push
out
cmp
insl
fwait
jp
cmp
mov
cli
shrb
jge
jbe
lcall
push
cs
out
mov
push
call
jo
aam
adc
jne
hlt
add
or
movsl
ret
aas
mov
loopne
fs
sub
inc
mov
xchg
cs
outsl
adc
and
cmp
jnp
sub
mov
inc
test
sub
cmp
add
mov
sub
and
sub
pop
addr16
mov
push
repnz
push
sub
xor
clc
inc
jg
xchg
inc
jo
mov
xchg
test
inc
ljmp
xor
imul
leave
std
mov
mov
mov
inc
cwtl
in
int
adc
adc
sbb
pop
mov
and
movsb
pop
aas
push
dec
loope
movsl
lahf
testb
lods
push
nop
in
addr16
shl
arpl
fdivrs
xor
sub
mov
mov
mov
xchg
pushf
inc
jmp
mov
bound
xor
fdivrs
and
clc
js
pop
ss
incl
repz
mov
xlat
in
loop
out
out
leave
sarb
jl
dec
call
push
adc
or
adc
pop
sbb
aad
int
js
leave
test
push
cmp
negb
cmp
or
xor
mov
pop
lea
and
outsl
adc
or
adc
pop
aaa
test
inc
mov
xchg
je
inc
lahf
stc
into
xchg
out
adc
add
add
mov
push
push
jae
xchg
inc
or
repz
ds
and
enter
jg
push
jne
pop
rclb
lret
add
loope
iret
dec
add
adc
pop
pop
test
ljmp
int
sub
jo
cli
mov
movsb
dec
ds
adc
pop
pop
shrl
mov
cli
xlat
mov
push
mov
xchg
adc
f2xm1
stos
push
test
dec
xchg
orb
adcb
subb
adc
pop
push
fildl
jmp
mov
xor
jo
jge
insl
pop
xor
rclb
xchg
cmpsb
adc
in
sub
or
sub
cld
push
push
into
movsb
enter
sar
pop
cmpsl
int3
mov
sbb
xor
push
jge
cmpb
sbb
inc
shl
hlt
ljmp
inc
repnz
or
mov
mov
das
push
out
and
fistl
int
push
lods
js
xchg
mov
rorl
into
push
cmc
vpsllw
testl
ljmp
push
ror
xchg
lret
sbb
lock
fnstenv
cmp
push
sbb
xchg
mov
xchg
into
stc
out
adc
xor
enter
aad
aaa
fs
into
test
sbb
add
sbb
pop
xchg
xchg
or
std
xchg
ret
roll
push
and
pushf
xor
xlat
mov
popa
roll
inc
nop
sti
sub
pop
mov
movsb
enter
inc
ja
insl
push
out
in
ret
push
incl
jno
lds
adc
repnz
and
ds
or
mov
xchg
jg
sub
in
pusha
jp
ds
jl
imull
shlb
insb
sti
xchg
int3
rclb
adc
push
dec
shlb
outsb
rcr
lea
imul
dec
lret
or
ss
mov
pop
nop
imul
je
outsl
aas
rorl
out
aad
stos
and
xchg
hlt
rolb
icebp
scas
inc
subl
in
pop
mov
cmp
pop
iret
dec
das
decb
loopne
pop
push
cmp
inc
and
fbld
push
xchg
aaa
jb
stos
jno
xor
lds
les
cmpsb
call
sbb
je
insb
lods
mov
lods
mov
loop
add
cmp
inc
pop
xor
loopne
in
mov
cmp
aaa
fadd
lods
bound
rorb
mov
lods
push
pop
inc
mov
repz
dec
mov
mov
or
xchg
sbb
stos
pop
in
outsl
lahf
inc
mov
out
pand
mov
dec
out
jns
rclb
shl
pop
push
jl
or
cli
leave
push
xchg
adc
lret
dec
dec
mov
movsl
ja
or
cmp
fs
dec
cltd
sahf
jnp
xor
iret
or
mov
lods
daa
outsb
pop
roll
stos
mov
xchg
addl
lahf
pop
pop
xchg
andl
scas
xchg
sbb
cmp
loop
sbb
jmp
xchg
int3
xchg
out
mov
enterw
sub
and
lret
mov
jnp
ja
movsl
sahf
mov
aas
xchg
je
mov
inc
hlt
sub
pop
xor
mov
pop
xor
sbb
bound
adc
add
ret
push
cmpsb
adc
and
scas
cld
ret
arpl
cmp
psubusb
inc
cmc
dec
testl
jo
add
jno
adc
jp
xor
ds
or
out
fimuls
movsb
push
push
stos
adc
mov
sbb
movsl
jge
lea
xor
xchg
mov
es
push
cwtl
mov
in
jne
mov
iret
pop
jae
mov
push
mov
subb
adc
pop
or
fwait
jmp
mov
dec
dec
scas
cmp
inc
fcmovnbe
rcrb
hlt
dec
fstpt
lcall
ljmp
icebp
push
xorl
cmp
in
jb
add
fldt
or
dec
jg
cmp
xchg
sbb
cwtl
insb
cmpsb
push
push
pop
mov
jmp
in
repnz
sbb
xor
sahf
sbb
sbb
cs
nop
cltd
push
stos
push
dec
xor
sbb
xor
xor
stc
lea
int3
or
mov
popf
sahf
rol
fstl
das
movsb
ja
dec
fimull
lods
lds
out
inc
ret
mov
aad
and
mov
loopne
popa
dec
iret
dec
sarl
sub
and
sbb
add
imul
xor
fisttpll
nop
sub
mov
dec
add
cmp
sbb
inc
adc
scas
pop
jg
and
cmp
movsb
xchg
dec
in
icebp
lret
repz
ds
xor
push
aad
jg
pop
mov
xor
add
pushf
enter
add
sub
or
jl
inc
test
sbb
adc
mov
jne
sbb
adc
sub
cmp
cwtl
gs
cmpsl
cld
cmp
push
repz
fisttps
js
rolb
sarb
repz
clc
jae
cwtl
fs
inc
sub
mov
mov
and
mov
mov
aaa
jnp
mov
dec
scas
inc
cmpsl
repnz
stos
cld
cmp
or
mov
inc
cmpsl
aas
jb
jge
mov
fmuls
sarl
mov
or
call
or
adc
adc
repz
gs
adc
jno
xchg
sub
inc
loop
xor
xchg
ss
cmpb
add
cld
idivb
adc
shlb
dec
add
js
pop
fisubrl
testb
and
subl
mov
daa
dec
sarb
xchg
sti
xchg
cmp
fsts
sarb
nop
mov
lds
rcl
cmp
in
in
pop
bound
xor
push
dec
mov
xor
int
std
not
and
push
adc
insl
outsb
rcll
fbstp
call
xchg
movsb
add
mov
inc
inc
and
into
jae
sbb
cmpsb
flds
fwait
cmpsl
pop
call
mulb
je
les
imulb
and
xor
cmp
add
fisttpl
mov
ss
pop
cltd
and
aaa
xlat
movsl
shll
and
pusha
jnp
outsb
mov
imul
pop
push
sub
sub
pushf
ljmp
or
movb
pop
out
clc
in
bound
pop
mov
push
out
bound
lea
cmc
dec
inc
shlb
outsb
js
es
xlat
xor
cmp
adc
test
fsubl
mov
lds
mov
scas
fnstenv
and
xchg
mov
lret
rcr
inc
cmp
ds
stos
xorl
in
daa
rorb
sub
inc
jmp
dec
add
dec
push
cmp
std
push
popa
xor
and
adc
nop
mov
dec
mov
sub
popf
push
push
andb
out
or
sub
sub
pop
nop
dec
loopne
mov
movsb
mov
out
fdivp
scas
lahf
sbb
inc
hlt
jecxz
test
mov
pushf
jnp
ret
lods
outsb
fwait
or
aam
test
jne
scas
dec
pop
adc
mov
js
mov
imul
adc
movb
mov
jo
cs
lds
in
cld
lds
cmpl
loop
sbb
sub
stos
pop
inc
loope
inc
clc
cltd
fwait
addr16
push
cmpl
loop
cmp
sub
in
cld
cld
mov
or
fwait
mov
inc
mov
xor
fcoms
scas
xchg
mov
ljmp
push
and
cmpsb
nop
lcall
jmp
adc
pop
sub
and
es
sub
enter
leave
inc
add
and
imul
cmp
nop
push
mov
sbb
inc
cmpsl
cld
or
ja
xchg
cmp
dec
add
or
cmp
out
xchg
insl
dec
shlb
inc
jae
dec
ja
loope
mov
xchg
insl
lcall
sub
dec
xlat
and
ret
sbb
push
pusha
add
jecxz
add
fimull
test
lret
mov
fildl
inc
out
or
mov
stos
and
mov
faddl
repnz
enter
and
and
pop
repz
push
cwtl
add
mov
mov
add
mov
imul
sti
jecxz
clc
mov
xor
jge
mov
inc
sub
scas
mov
inc
push
gs
push
xchg
jp
jno
push
pop
mov
and
out
or
fldenv
mov
leave
fs
stc
jl
cmp
and
sub
cmpsb
and
xchg
int
sbbb
mov
ss
int
pop
mov
std
or
aad
fsubs
loop
jae
pushf
and
popa
jns
adc
xor
jo
mov
icebp
sbb
stos
not
mov
and
in
pop
mov
inc
inc
or
loope
mov
inc
xor
out
arpl
shlb
enter
lock
fsubrl
ror
enter
mov
ficoml
imul
pop
xor
addr16
imull
push
stc
jbe
jecxz
cwtl
flds
jmp
les
mov
vcomisd
add
scas
or
mov
shr
addr16
ret
dec
out
mov
push
fdivrs
pop
fisttps
ds
and
or
pushf
mov
fsub
insl
push
sahf
add
dec
rcr
mov
dec
icebp
sbb
mov
dec
pop
js
mov
push
inc
js
xor
scas
xor
xchg
pop
cs
mov
ret
pop
dec
or
imul
sub
test
aad
cwtl
pop
loop
mov
mov
das
sub
ss
jge
cld
mov
lods
dec
mov
cmp
loop
sbb
mov
mov
mov
push
push
mov
and
pop
ja
inc
cwtl
mov
and
dec
push
sub
aam
ds
add
sti
setbe
push
or
std
sub
dec
dec
roll
push
outsl
out
sub
xchg
mov
fimull
mov
mov
pop
les
mov
push
jl
out
cwtl
outsb
rcrb
aas
scas
dec
ror
loope
sub
shrb
push
adc
pop
jp
imul
pinsrw
or
xor
jnp
subl
subb
iret
xlat
int3
push
or
pop
shlb
imul
cwtl
out
cmc
and
dec
dec
push
xchg
arpl
jbe
jns
xchg
sti
mov
sub
sahf
mov
xchg
cmp
sub
xor
pop
and
mov
inc
mov
dec
out
cwtl
sbb
stc
mov
and
test
sub
loop
add
ds
jmp
xor
lods
rclb
outsl
icebp
sbb
mov
mov
addr16
mov
adc
dec
bnd
jo
outsb
inc
lods
aas
aam
adc
out
sarb
add
ret
mov
mov
mulb
mov
out
inc
jbe
inc
out
jns
mov
add
pop
inc
inc
sbb
mov
jmp
jle
stos
cmp
cmp
es
cmp
cltd
push
repz
addr16
dec
mov
out
cld
loope
leave
cmp
cli
jo
xor
or
xor
andl
iret
jmp
adc
xchg
loop
mov
add
fdivrl
in
push
pop
dec
or
xor
pushf
adc
stc
test
or
ret
pop
pop
lret
sub
data16
lods
mov
mov
inc
sbb
inc
cmp
jne
leave
push
pop
icebp
push
or
out
bound
xor
sbb
repz
scas
mov
jns
inc
rorb
or
incl
adc
repnz
hlt
xchg
mov
mov
test
lods
repnz
jo
sub
dec
aam
leave
fistl
sbb
stos
stos
inc
dec
inc
stc
jp
clc
fwait
test
scas
fcoml
cmpsb
jnp
ja
pop
lock
lods
stc
stc
xor
ja
push
xor
aaa
push
je
ljmp
xor
popa
xchg
jecxz
lods
stc
ja
pop
pop
add
mov
into
insb
ror
je
mov
xor
shlb
xor
xor
adc
imul
pusha
inc
mov
dec
iret
ja
mov
xor
loopne
and
sahf
and
imul
adc
sahf
or
ljmp
and
aam
mov
xchg
jl
jg
ja
and
in
add
jle
fisubrl
or
adc
push
pop
mov
loopne
je
inc
iret
xchg
jmp
adcl
xchg
call
ret
mov
inc
lcall
cs
iret
in
aad
arpl
push
mov
fcomi
cmp
jbe
pop
push
shll
pop
and
xchg
xchg
add
add
xchg
pop
ljmp
test
arpl
addr16
sub
jnp
pop
ja
pop
adc
sbb
pop
shlb
push
pop
xchg
jecxz
cmp
jb
mov
popf
adc
mov
inc
imul
jl
outsb
sbb
xor
adc
ljmp
push
xchg
mov
pop
pop
add
icebp
xchg
jae
pop
out
sub
ljmp
shrb
sbb
inc
fs
push
jg
mov
xor
mov
popa
fisubrs
push
arpl
and
stos
pop
psubsw
ja
fadd
enter
jno
cmp
lock
sahf
cmp
or
cmp
or
cld
adc
lods
mov
inc
mov
mov
scas
dec
in
clc
jno
xor
inc
data16
xchg
sbb
es
xor
xor
or
outsl
insl
inc
cmp
cmc
ljmp
outsb
loope
fsubrs
xor
aad
out
mov
sbb
jl
push
mov
cmpsl
fistl
push
pop
xchg
into
adc
xchg
xor
aam
iret
fldl
stc
jp
popa
adc
and
or
cmp
or
jo
adc
cmp
mov
cmp
inc
dec
das
outsl
push
push
arpl
add
add
subl
int
dec
cmpl
sub
cmp
cltd
aaa
dec
ss
popf
cmc
test
adc
lds
in
iret
mov
sub
aaa
push
mov
fidivrl
aaa
test
push
and
ljmp
mov
cmpsl
pop
sti
outsb
jl
hlt
insb
xchg
loop
dec
cltd
pop
stc
push
or
repz
sti
fs
mov
pop
push
mov
jmp
add
roll
fimull
enter
xor
lret
iret
imulb
xor
and
lahf
inc
nop
fsts
cmpsb
enter
mov
jno
les
mov
xor
pop
mov
sbbb
iret
sub
aam
add
ds
jmp
and
adc
xchg
and
nop
clc
dec
push
sub
mov
add
scas
and
ss
xor
pop
adcb
jns
ljmp
sti
jno
pop
fucomp
sub
mov
fsubl
mov
das
in
outsl
pop
inc
arpl
pop
call
cmovo
dec
pop
sti
sahf
xchg
xchg
leave
nop
scas
xlat
sahf
test
mov
scas
in
in
mov
nop
mov
aas
lahf
movsl
gs
popf
xorl
pop
sub
ds
sbb
aam
mov
push
sub
pop
cld
shl
xchg
and
inc
pop
and
cmp
sbb
test
dec
xchg
cwtl
lock
jb
sar
lcall
dec
sbbb
js
inc
rcrl
jmp
ss
mov
xor
fs
and
add
jge
in
enter
int
pop
inc
jp
jge
loope
test
int3
cmpl
dec
pop
inc
jo
ljmp
push
ret
adc
jb
sbb
jecxz
imul
cmp
rclb
inc
cmp
push
aam
push
lds
xchg
mov
inc
add
inc
movsl
jmp
fisttpll
mov
mov
pop
push
fcomp
jmp
ss
mov
cmp
popa
sbb
xor
addr16
pop
dec
add
dec
pop
insb
lahf
sbb
pop
cmc
and
lods
cli
cmc
repnz
scas
pop
sarb
stos
or
repnz
mov
in
sub
iret
sbb
out
andb
pop
sbb
fiaddl
and
loopne
jne
adc
push
ds
xlat
inc
ret
jb
js
sbb
jl
mov
mov
sbb
adc
fisubs
adcb
roll
xchg
inc
xor
push
push
dec
iret
xor
sub
sbb
lds
jge
mov
dec
es
lock
and
push
push
adc
ret
dec
mov
xchg
fcoms
fiaddl
pop
lea
sub
jg
shll
std
into
or
rolb
and
sbb
mov
dec
sbb
jl
daa
or
jns
stc
push
scas
xchg
or
jecxz
std
push
je
lock
sub
out
shll
mov
neg
add
lock
and
js
hlt
or
xchg
pop
jge
inc
rolb
xor
add
dec
dec
jnp,pn
xor
arpl
xor
mov
adc
sbb
mov
inc
pop
dec
pop
call
xchg
xchg
mov
arpl
call
adcb
popf
sbb
fcomps
insl
sub
mov
mov
pop
jo
incb
jecxz
jp
clc
pop
fmulp
movsb
repz
int3
dec
mov
cmc
sub
fwait
in
in
sub
sub
and
jmp
cmp
sahf
jmp
adc
cmpsl
push
adc
mov
pop
push
push
cmpsb
lret
fiaddl
mov
gs
je
sti
mov
ror
or
jno
aad
andl
cmp
aas
test
andb
sub
dec
or
lock
cmpsl
movsl
pop
pop
outsb
pop
push
inc
mov
sti
mov
adc
addb
cli
push
sub
inc
or
jge
push
je
sbb
pusha
push
push
or
aas
je
mov
movsl
lock
mov
iret
in
daa
movsl
nop
pop
cmc
test
sub
sub
mov
lahf
mov
cmp
jg
lahf
cmc
out
fstpt
pop
add
cld
jbe
fs
cmp
jne
xchg
push
sbb
fistpll
dec
movsl
mov
in
jne
rcll
ret
cs
movsl
push
ds
xchg
add
rcrb
push
lock
mov
xor
fists
inc
bnd
hlt
xor
and
add
test
dec
inc
hlt
test
negb
loopne
jg
jo
xchg
mov
cmp
filds
call
pop
mov
or
shll
pop
fmuls
cmp
mov
test
inc
jb
aad
test
sti
jno
insl
lret
iret
lods
sbb
outsb
ss
cmc
lret
hlt
pop
fucomi
aad
loopne
push
cmp
imul
jge
push
push
inc
mov
xchg
xchg
les
sub
add
and
adc
mov
and
es
cmpsl
imul
ffree
xchg
rolb
gs
jo
lcall
pop
ja
ret
mov
test
in
das
dec
push
decl
or
test
fs
pop
cmp
push
scas
subb
hlt
fdiv
mov
stc
aas
mov
and
dec
in
negb
mov
mov
xchg
mov
nop
cltd
imul
dec
xchg
lcall
mov
lods
out
mov
lret
mov
dec
jl
mov
mov
jp
call
push
inc
mov
mov
lds
pop
fcmovnu
inc
mov
cmp
or
sti
inc
ss
popf
jnp
cld
in
incb
stos
imul
icebp
sub
roll
lahf
mov
and
mov
mov
aaa
or
xchg
lods
add
mov
rcrl
inc
shll
push
push
imul
out
sub
adc
bound
mov
das
lret
sub
sub
test
add
rolb
test
sbb
cld
fsubp
mov
test
icebp
sahf
xchg
dec
fsub
jnp
loop
inc
jecxz
leave
scas
mov
jo
lods
add
push
dec
fsts
fs
xchg
push
cmpsb
mov
inc
jecxz
pop
push
jo
push
push
xchg
vandps
mov
xchg
call
movsl
mov
cs
inc
mov
pop
shl
push
mov
stos
push
dec
cltd
mov
sbb
mov
dec
sbb
sbb
push
in
mov
ss
outsl
sbb
add
push
enter
jb
mov
test
mov
loop
dec
ds
mov
inc
data16
stos
popf
adc
and
popf
fs
loop
xor
and
test
adc
lret
and
or
inc
xchg
and
mov
insl
add
jo
scas
jbe
push
sub
scas
lret
add
pop
out
mov
add
mov
repnz
push
push
mov
mov
js
popf
xor
test
jecxz
inc
shll
nop
pop
inc
cmc
push
sub
shll
jmp
jno
leave
xchg
xchg
push
orl
stos
sbb
sahf
mov
test
rclb
mov
mov
jge
stos
pop
add
pop
jg
sub
shrb
sti
stos
jl
mov
inc
stos
inc
addr16
lret
in
lret
mov
inc
in
lcall
pusha
mov
movsb
aam
xor
mov
xor
and
mov
mov
mov
xor
loopne
fwait
pop
cmp
lret
out
fdivrl
add
or
pop
mov
es
or
or
push
lds
in
repz
mov
dec
icebp
push
mov
push
xchg
pop
xchg
lods
xchg
cmp
pushf
jle
pop
mov
in
inc
sbb
inc
sub
call
mov
sbb
int
xchg
std
test
cmp
and
xor
jecxz
mov
adcl
out
mov
cmp
out
xchg
mov
sub
jae
dec
data16
push
aas
aas
push
push
push
mov
call
adc
nop
repnz
lods
lock
aam
test
sub
in
das
add
out
scas
mov
inc
lret
movsb
cmp
xorb
test
fstps
push
inc
push
and
mov
pop
jge
adc
cmp
ret
in
pop
or
fiaddl
out
pop
mov
pop
jl
pusha
inc
cmp
lret
lret
call
pop
sub
inc
and
in
cmc
jg
in
xchg
fwait
mov
aad
jne
dec
loope
cmp
push
sahf
movsb
jae
mov
andl
mov
jnp
or
pop
es
jb
add
mov
xchg
leave
push
jb
and
lock
adc
and
paddb
cmp
pop
adc
mov
dec
insb
pop
mov
test
mov
loop
fcmove
jbe,pn
daa
aaa
cmc
iret
idiv
in
inc
cmpb
adc
cmp
pushf
test
mov
adc
daa
ret
add
das
cltd
fsubrs
andb
leave
in
lods
mov
jp
mov
push
cmp
xchg
repnz
sbb
mov
sub
mov
cmp
scas
pop
fisubrl
cltd
loope
inc
dec
mov
pop
adc
clc
inc
outsl
jle
sbb
inc
xchg
lods
xor
jecxz
negb
test
dec
sbb
mov
xchg
jae
dec
imul
stc
adc
pop
testb
mov
dec
add
dec
jp
out
mov
out
lea
push
jae
cli
arpl
aas
push
cmp
jle
add
jno
data16
jp
test
cmc
test
in
fwait
es
jae
xor
xchg
aaa
test
hlt
js
xchg
fs
repz
mov
or
adc
repnz
lea
fs
stos
jnp
in
clc
dec
lds
inc
adc
notl
sbb
pop
xchg
mov
dec
scas
lret
mov
pop
xor
push
xchg
ja
sub
lcall
mov
loope
xor
or
jl
push
test
mov
rol
and
pop
xchg
out
pushf
fisttps
add
aaa
push
test
es
push
aas
inc
gs
sbb
ja
pusha
push
cmpl
andl
inc
cmp
mov
inc
dec
sub
jb
loope
mov
adc
cmp
xorl
test
incl
hlt
mov
add
cli
cmp
mov
ja
cmp
lds
or
lea
sub
test
and
adc
xchg
stos
add
pushf
pop
add
fildll
xchg
mov
jecxz
jno
mov
push
loope
cltd
fwait
je
inc
cmp
test
dec
fsubrs
add
mov
fmul
loope
push
jno
xchg
mov
push
push
xchg
cli
xchg
jo
and
imul
mov
mov
sub
jb
and
daa
cs
xor
sbb
enter
les
ret
pop
mov
jp
pop
jge
cmp
adc
xor
stos
lods
inc
push
es
xchg
in
cmp
sub
xchg
loopne
gs
dec
mov
pop
lods
daa
test
data16
mov
add
mov
iret
jecxz
inc
inc
pop
mov
pop
fprem1
loop
lods
lret
cmp
push
mov
andb
stc
icebp
sbb
cmp
sbb
ja
mov
push
dec
and
mov
aam
mov
notb
out
aam
jecxz
in
in
jo
inc
mov
fiadds
fstpt
add
mov
repnz
loope
pop
addr16
mov
clc
aam
add
xor
mov
orb
xlat
and
sbb
icebp
dec
cmc
push
divb
movsb
fwait
arpl
sub
sbb
xor
loopne
dec
add
test
or
mov
and
mov
and
dec
add
jbe
mov
aam
xchg
dec
fbld
rclb
sub
fbstp
fiadds
sbb
out
push
bound
shr
out
lds
addr16
sti
clc
cli
sbb
subl
mov
adc
lret
loop
xchg
adc
mov
int3
push
repnz
push
add
pop
cmpb
movsl
repnz
inc
cmpsb
nop
pop
fidivrs
fiadds
je
lock
outsl
aas
jp
mov
mov
adc
ret
mov
aaa
sbb
addr16
lcall
xor
inc
jecxz
dec
pop
aas
hlt
repz
or
and
xor
jno
shl
out
adc
fmul
gs
shrl
push
pop
pop
lock
inc
pop
out
jmp
pop
in
pushf
xchg
rorb
fiadds
sbb
add
adc
jp
mov
push
in
dec
add
sub
xlat
outsl
ret
cli
scas
je
scas
push
test
and
repz
fldenv
dec
jb
or
test
push
and
in
lock
mov
sarb
inc
push
cld
stos
push
fdivs
mov
sub
dec
rorl
cmp
insb
and
sub
jne
mov
mov
jmp
and
xor
repz
outsb
jo
sbb
mov
and
pop
iret
scas
cli
pop
mov
mov
xchg
sbb
mov
sbb
xor
ss
sti
and
pop
ficoms
stos
push
mov
jp
into
lds
mov
sbb
mov
ja
pop
jp
in
sbb
arpl
dec
fstpl
inc
icebp
mov
mov
push
adc
sub
sbb
cli
loope
dec
mov
test
popf
pop
repnz
popa
int
ljmp
cmc
add
push
mov
xchg
or
loop
inc
mov
or
or
daa
aas
std
fs
fistpll
cld
rcl
sbb
cmpsb
enter
push
aaa
bound
dec
sbb
xchg
pop
jmp
jbe
ret
pushf
shll
pop
mov
cmp
mov
jl
push
imul
cmp
bndldx
add
push
flds
cmpsl
data16
addr16
xor
ret
in
jno
mov
sbb
cmp
mov
jg
leave
pushf
idivl
pop
dec
push
sub
add
pusha
ret
scas
mov
ficoml
mov
jo
sbb
sub
pop
das
imul
or
or
adc
dec
add
xor
xchg
lret
jle
and
jg
sub
push
outsb
enter
jmp
jg
fsubp
nop
clc
stc
scas
idivl
cmp
clc
iret
xchg
push
adc
cmc
dec
jmp
repnz
in
dec
sbb
nop
inc
and
adc
lock
or
cmp
in
mov
sbb
adc
push
adc
fsubrl
imul
inc
dec
adc
cmp
jmp
jae
mov
push
inc
stos
jbe
in
mov
std
dec
mov
dec
les
cwtl
fisubrs
mov
lods
and
inc
pop
jb
ds
mov
mov
mov
leave
fnstsw
leave
out
rolb
add
pop
adc
xchg
xor
out
sbb
in
stos
pushf
mov
dec
xchg
dec
jno
dec
sbb
cltd
add
lcall
pop
sbb
sub
lahf
lock
pop
inc
jecxz
fcomps
fidivs
out
add
fsubl
or
js
loopne
mov
jp
out
cmpsl
jecxz
daa
or
ljmp
mov
jno
lahf
imul
push
mov
mov
cmp
lret
or
incb
sub
stos
xlat
mov
pop
xchg
xchg
jecxz
fs
and
aaa
and
insb
loope
out
imul
xor
lock
das
dec
scas
mov
pop
xor
lret
fisubs
testb
add
jle
pushf
rclb
adc
gs
imul
adc
pop
int
imul
cli
nop
scas
iret
daa
push
mov
cwtl
or
daa
subb
xchg
inc
fwait
mov
out
pop
test
insb
or
xor
pop
mov
cmpsb
enter
jne
push
xchg
xchg
xchg
xchg
xchg
rclb
sub
adc
pop
stc
jmp
fisubrl
mov
inc
push
add
insb
mov
sub
loopne
lret
push
movsl
jge
lods
rcll
pop
push
adcb
iret
and
pop
mov
in
cmpsl
test
mov
mov
mov
lods
pop
add
in
or
and
sub
dec
test
push
add
inc
test
add
sarl
xchg
aas
xor
mov
sbb
js
mov
jg
pushf
iret
fcmovbe
dec
push
jmp
jg
mov
mov
scas
mov
cld
add
cmp
loop
test
sbb
cmp
and
bound
inc
inc
adc
or
jb
dec
in
hlt
lock
pop
lods
in
fists
cmp
sub
xchg
sub
ficoms
lods
stos
mov
or
xchg
add
rcll
and
push
loope
cmp
into
adc
test
xor
scas
rol
jae
xlat
negb
mov
pop
adc
inc
ficomps
mov
lods
cmp
enter
dec
jge
sub
pop
cwtl
ds
fwait
cli
mov
ret
pop
add
xchg
hlt
lret
mov
loope
leave
push
jg
in
mov
sub
punpckhwd
push
add
jg
test
add
sbb
xorl
loope
in
call
insb
dec
jl
jecxz
xchg
cltd
jge
subl
inc
jl
push
movsl
jecxz
add
or
lods
adc
sbb
cmp
pop
mov
les
es
movsb
incl
test
jle
int
iret
xor
aam
test
fisubs
mov
stc
mov
loopne
pop
sbb
jg
dec
mov
outsl
mov
jmp
or
add
loope
mov
fcmovnbe
xor
sub
mov
push
cmp
fidivl
or
call
hlt
fldt
cmp
cmp
inc
in
hlt
in
xor
aaa
stos
lahf
jg
jnp
aas
fs
pop
xchg
les
mov
loope
cmp
xor
mov
cmp
out
sahf
adc
xor
cmp
add
pop
into
mov
inc
out
jmp
int3
adc
outsl
xchg
pop
pop
in
inc
nop
sub
jp
sub
jecxz
inc
mov
insl
pop
sbb
loopne
xchg
mov
das
outsb
push
nop
and
mov
mov
xchg
rcrb
push
insb
ret
dec
rclb
mov
popf
mov
mov
cmpsb
adc
pop
sbb
andb
leave
test
adc
in
pop
inc
xor
cmp
push
fnstenv
push
call
es
jno
cs
cmp
pop
lock
dec
sub
cli
mov
lahf
mov
je
mov
lods
or
clc
sub
and
xor
outsl
in
adc
or
push
lcall
pop
gs
mov
add
add
repnz
andb
cltd
sub
push
mov
mov
mov
jnp
push
mov
adc
push
pop
mov
jmp
or
fdivrl
or
popf
divb
mov
jnp
in
scas
data16
sbb
cs
push
iret
mov
and
sub
mov
inc
mov
dec
mov
cmp
xorb
sbb
cmpsb
cmp
jl
repz
shlb
stos
dec
dec
sub
sbb
or
and
aaa
loope
insl
xor
lock
fcmovne
xchg
push
addb
stos
pop
je
inc
loopne
in
loope
mov
inc
add
mov
mov
imul
sbb
nop
jge
ret
pop
lock
pushf
and
out
movb
shl
xchg
dec
add
loopne
loop
lret
inc
sub
mov
ret
popa
pop
xchg
movsb
ret
add
bnd
in
xchg
add
adc
shl
jne
jl
pop
xchg
daa
jle
inc
inc
shrl
rorl
and
leave
sub
mov
sub
cmp
adcb
sub
fcoml
adc
jno
int3
cs
movsl
xor
iret
scas
push
jnp
int
pop
shlb
into
sub
rclb
pop
push
jl
inc
add
ds
add
test
jae
push
and
into
mov
inc
mov
pop
sub
ret
push
lahf
andb
ret
dec
mov
dec
daa
mov
pop
inc
pop
mov
push
das
imul
xor
rorl
pop
lret
ficoms
lcall
fisttpl
or
cmp
dec
ljmp
inc
ret
jae
xchg
iret
testl
cmpsb
dec
leave
pop
adc
mov
jl
jecxz
mov
rol
outsl
jmp
dec
xor
packssdw
push
fsub
or
and
sbb
sahf
jne
adc
adc
bound
push
loope
loopne
jmp
sub
xchg
and
aad
mov
aad
push
adc
loope
std
loopne
mov
jne
sbb
imul
and
ds
rorb
out
xchg
stos
push
push
mov
pop
cmp
fiaddl
push
outsl
fimull
mov
pop
std
mov
sub
test
push
mov
std
jmp
out
lock
jno
adc
adc
mov
jne
jmp
pop
add
arpl
and
jmp
mov
add
mov
sarb
mov
shlb
mov
cmp
scas
and
fisubrl
pop
popa
push
cld
mov
cmp
mov
mov
push
push
mov
add
movsl
dec
mov
and
pop
adc
or
cmp
xchg
adc
addps
xor
mov
inc
cmp
adc
adc
cmp
arpl
pop
stc
dec
iret
mov
shrb
inc
jns
jp
icebp
mov
pop
or
movsb
fcmovnbe
repnz
add
xor
mov
repz
iret
adc
test
minps
mov
cld
mov
mov
and
add
out
sub
push
stc
shr
notb
and
cmpl
cli
add
or
orb
xor
outsb
sub
arpl
das
push
loop
xchg
test
dec
fistps
push
inc
shlb
cltd
daa
jle
pop
gs
repz
mov
cltd
cmp
sbb
xchg
cwtl
sbb
mov
add
push
mov
mov
or
out
outsb
mov
clc
in
int
dec
or
jb
dec
lods
sbb
test
int
aas
ret
std
adc
les
outsl
fdivrl
or
in
call
aas
addb
loop
xor
mov
mov
sub
jl
pushl
data16
sti
ljmp
pop
sub
mov
jae,pt
mov
add
imul
cs
cli
lods
in
daa
or
outsl
push
js
cmp
push
les
cmp
popa
push
decl
inc
sub
or
sbb
jg
js
es
push
cmpsb
movsbl
int
rclb
pusha
daa
ret
out
add
sbbl
es
movsb
in
or
testl
and
pushf
in
int
out
les
movsb
fdivrl
fildl
rcrl
jno
ljmp
push
sub
ja
test
jne
mov
inc
push
les
inc
pop
imul
pop
fs
sti
push
jbe
sub
js
and
inc
out
cmp
sub
mov
xchg
sbb
mov
dec
inc
aad
add
data16
fsubl
ja
int
and
ret
push
lret
js
mov
dec
divl
mov
lea
clc
dec
dec
or
push
out
pop
jle
test
jg
mov
adc
shrl
dec
arpl
jne
dec
clc
add
iret
add
dec
daa
loopne
jne
dec
popa
cmp
outsb
mov
cs
pop
lret
mov
adc
push
shl
or
lahf
in
jb
cmp
in
inc
icebp
repz
xor
fdivrp
sub
pop
es
jge
and
cmp
imul
es
pop
dec
xchg
mov
jge
pop
pop
mov
icebp
push
ret
out
inc
push
std
inc
lods
dec
daa
mov
repz
pop
cmp
loope
xchg
mov
and
pop
loopne
cmpsl
sbb
cmp
xchg
filds
xchg
notb
sar
adc
jns
push
dec
mov
data16
push
jmp
sti
cmp
pop
cwtl
mov
popa
test
xchg
mov
imul
std
cmp
subl
repz
xchg
and
mov
faddl
icebp
add
cmp
shll
cmpsl
mov
push
scas
jne
lahf
push
dec
mov
add
mov
pop
cmp
dec
lea
dec
push
dec
mov
test
mov
jnp
or
push
or
xchg
not
cs
imull
mov
leave
mov
shrl
jne
shrb
inc
mov
pop
outsb
add
inc
jge
mov
dec
clc
into
call
out
mov
lock
jecxz
mov
mov
js
arpl
popf
jle
push
xchg
dec
mov
lret
jmp
setge
in
add
mov
fistpll
or
aaa
mov
jb
dec
lods
push
scas
stc
lahf
dec
sbb
or
sbb
addr16
stos
cli
les
repnz
or
cli
lea
stos
mov
das
sbb
sbb
mov
fildll
push
adc
sbb
lock
push
ss
bound
adc
mov
xor
iret
fmuls
inc
mov
adc
lret
sarb
iret
mov
scas
add
leave
mov
imulb
imulb
adc
sub
dec
or
xchg
movsl
mov
cmp
push
and
xchg
cmp
pop
sub
cs
stos
pop
loope
addr16
test
xchg
loopne
push
into
xchg
test
adc
icebp
std
lret
repz
aaa
lods
cmc
push
jnp
cs
aas
pushf
xchg
cmc
shl
js
xor
push
xchg
xlat
nop
testl
push
dec
fstl
add
popf
or
push
pop
add
push
inc
lcall
mov
clc
popa
cmp
fdivl
movsb
jmp
pop
notl
push
push
push
or
xor
psrld
test
fmul
popa
cmp
sbb
sbb
or
or
jae
rcrb
aad
mov
into
hlt
lods
data16
or
repnz
push
push
xchg
cmp
stos
btrl
fdivr
insb
aaa
lods
pop
icebp
push
sbb
rorb
pop
pop
jns
pop
add
add
xor
dec
mov
sub
je
in
or
mov
adc
and
cmp
jnp
lret
icebp
fidivs
outsb
loopne
jno
imul
mov
pop
lret
pushf
rol
jae
test
inc
xor
enter
mov
mov
mov
and
inc
and
test
sbb
or
cmp
je
mov
mov
cmpsl
test
insl
icebp
jmp
mov
cmp
mov
pop
addr16
int
sub
pop
sub
sbb
jp
sbb
jnp
mov
jp
test
outsl
sti
xchg
in
add
notb
mov
jns
fldcw
add
and
test
cs
xchg
mov
cmp
incb
xchg
jp
jle
jecxz,pt
inc
int
popa
pop
es
shlb
icebp
fstps
and
xlat
rorl
aad
mov
xor
or
in
fcom
shll
shld
add
jg
inc
jb
lcall
xchg
and
add
push
mov
stos
xchg
roll
cmpsl
les
fs
push
jae
lcall
enter
inc
jae
negl
movsb
mov
push
test
cmp
lret
stc
pushf
outsb
xor
stos
sub
dec
test
pop
sbb
or
mov
cli
xchg
addb
movsb
sub
outsb
sbb
sbb
dec
push
movsb
nop
aas
in
cld
ss
xchg
jle
repz
xchg
out
sbb
ret
push
jns
inc
into
xlat
data16
pop
leave
addr16
add
mov
cmpsb
push
std
sbb
aad
dec
stc
ss
loope
xor
popl
or
stc
jmp
call
dec
aas
popf
sbb
pop
add
sbb
imul
jae
jge
jb
push
pop
mov
push
cltd
xchg
xchg
mov
std
mov
shll
jmp
addr16
outsb
push
and
dec
cld
and
lods
adc
ljmp
cmp
mov
push
xor
xchg
fldl2t
cmp
insl
inc
pop
xchg
dec
sub
test
cmp
push
inc
and
or
loope
fs
adc
outsl
jg
cwtl
orl
aad
test
mov
popa
and
outsb
pushf
daa
lahf
adc
push
xlat
mov
jmp
and
jo
lahf
aam
pop
jge
cmp
cmp
inc
icebp
lds
add
aaa
mov
imul
adc
jno
test
lret
imul
push
pop
mov
sub
dec
repnz
and
mov
popf
insb
imul
lea
mov
inc
and
push
rclb
jmp
lea
pop
sbb
sub
or
popa
leave
clc
mov
cmpsl
jecxz
enter
and
cltd
out
add
jbe
out
mov
nop
and
lret
jbe
mov
dec
lcall
cmp
mov
sbb
pop
or
lret
subb
jl
stc
jns
push
shrb
subb
test
mov
sbb
and
lea
hlt
pusha
pusha
jae
insl
stos
adc
dec
push
out
push
bnd
and
gs
loop
int3
push
loope
in
cli
insb
dec
out
sbb
int3
jnp
rorl
push
and
rcl
adc
ljmp
testb
call
popa
jp
push
cltd
add
mov
mov
push
imul
loope
pushf
sub
test
push
cs
popf
pop
xor
adc
adc
pop
mov
adc
dec
xchg
orb
aad
pop
pcmpeqd
mov
popa
ds
std
add
test
inc
cld
ja
cmc
and
sub
or
cld
xchg
mov
lea
cli
xor
dec
lods
and
std
and
arpl
jp
inc
jb
aad
roll
xchg
scas
mov
dec
ret
dec
mov
movsb
mov
leave
lds
cmp
mov
nop
stc
xchg
in
push
outsb
jl
and
fs
push
pop
push
adc
push
adc
popf
mov
pop
les
xcrypt-cbc
cmpsl
shlb
in
dec
pop
add
mov
daa
add
mov
test
adc
dec
inc
xor
mov
sbb
mov
ds
push
shl
lret
test
mov
shll
dec
and
cmp
xor
int3
adc
xchg
sti
inc
inc
sbb
data16
or
mov
sub
xor
adc
dec
inc
dec
add
stos
adc
shrl
out
sub
mov
rcrl
push
add
pop
jbe
repnz
mov
sub
push
dec
jp
fcompl
xor
xor
out
loop
lock
aaa
pop
jle
xchg
push
fsts
mov
out
shll
mov
jl
mov
scas
mov
div
inc
xor
mov
sub
ret
iret
sbb
mov
sub
pop
and
loope
mov
cmpb
int3
leave
xlat
subl
and
nop
dec
ror
add
dec
fldt
pop
loopne
aad
dec
int3
rorl
shlb
mov
push
cmp
jl
xchg
and
ljmp
mov
mov
cmpsb
cltd
xchg
frstor
or
inc
rol
js
les
int
cmc
add
lea
sbbl
mov
mov
cmovl
aaa
or
andb
in
mov
je
in
inc
push
cmpsl
xchg
inc
cs
movb
lods
stos
sar
xorl
sarl
inc
push
mov
sbb
adc
mov
les
sub
out
mov
arpl
out
add
xor
fstl
decb
push
emms
push
push
or
sbb
push
xor
push
pusha
and
inc
lods
push
mov
push
fisubl
dec
add
xlat
and
push
sub
mov
int
fs
aas
cmpsl
dec
gs
add
outsb
call
dec
lret
dec
dec
repnz
sbb
and
sbb
into
xor
punpcklwd
pop
push
lock
adc
hlt
bound
stos
dec
xchg
jnp
xor
movswl
daa
jmp
repnz
sub
fwait
push
or
loopne
push
rolb
lret
xor
enter
pop
mov
fcompl
sbb
or
outsb
inc
mov
dec
fbld
lods
xor
mov
pop
push
clc
add
das
cli
sbb
shrl
add
and
cmpsl
je
in
add
cld
dec
mov
mov
sub
test
push
push
mov
dec
movsl
mov
add
adc
push
push
test
cmc
pop
jae
sub
inc
cmp
lret
lock
das
in
inc
push
fisubrl
stos
iret
pop
fisttps
cmp
pop
int
mov
lcall
shrb
out
pop
lcall
nop
daa
dec
cld
sbb
call
mov
popf
gs
jecxz
jle
aad
sbb
pop
add
loop
call
cmpsl
fdivp
xchg
cmpsb
jge
popa
and
in
or
not
sbb
cmp
loop
cmp
push
stc
pop
ds
orl
xor
sub
iret
loopne
cmpsl
and
push
pop
jp
lock
and
xor
cmc
shll
call
in
xor
sbb
jle
std
inc
sbb
test
popf
sarl
xor
sub
jns
aas
dec
call
jbe
xchg
aas
lods
add
pop
jecxz
sbb
jl
lods
xlat
sbb
or
mov
add
xchg
ret
adc
loopne
cmp
jge
inc
mov
les
sbb
push
test
pop
outsb
pop
cs
push
push
cwtl
ss
insl
addr16
or
pop
mov
xchg
outsl
or
add
cmp
sbb
adc
mov
xorl
fldenv
ds
add
mov
mov
clc
inc
lret
cmc
sbb
inc
in
stos
lret
rclb
in
jno
adc
dec
pop
inc
scas
jo
out
push
xor
gs
ret
sbb
adc
cmc
or
in
cmp
inc
mov
fimull
lcall
fildll
push
pop
mov
out
or
inc
out
cmpsl
loopne
push
inc
jbe
inc
lret
inc
jle
adc
mov
pop
inc
cmp
jmp
push
jb
inc
call
push
cwtl
out
faddp
cmp
rcll
xchg
push
adc
jno
push
push
outsl
out
fs
into
sbb
add
lock
nop
xchg
xor
xor
jecxz
jbe
popa
popf
idiv
add
xchg
jno
dec
aas
xor
hlt
and
adc
stc
sbb
xchg
jmp
inc
adc
aam
cmp
test
pop
jb
push
pusha
scas
mov
inc
stos
push
push
xchg
cmp
jmp
aad
mov
add
enter
adc
jp
push
sahf
jmp
cmpsb
imull
pop
push
das
cli
push
insb
xor
in
sbb
pop
xor
jecxz
cmp
push
sub
int3
lods
loope,pt
or
xchg
dec
sub
andb
or
hlt
std
fidivrs
aaa
out
pop
std
lds
pop
int3
inc
int
out
jg
add
and
sahf
aas
dec
sub
inc
rorl
add
xlat
aam
jne
fwait
pop
add
sahf
sbb
pop
fwait
xchg
dec
int3
fistps
or
lcall
sbb
mov
adc
bnd
sub
mov
hlt
cld
fmul
mov
mov
shlb
int3
js
xchg
mov
mov
sahf
jmp
inc
xchg
dec
cmp
push
sbb
pop
fldenv
in
push
jns
out
mov
insl
dec
sub
in
pop
addr16
pop
aad
aad
and
mov
push
cmp
insb
test
aam
icebp
add
jbe
push
ficoms
xor
adc
sbb
jg,pt
test
ss
inc
dec
mov
xor
aad
ret
fcomp
enter
jg
fidivrs
das
mov
add
outsl
add
or
jg
sub
cli
int
push
cmpsb
jmp
xor
out
fstps
sbb
scas
cmpsl
fwait
je
sbb
cld
in
inc
mov
mov
cmpsl
sbb
es
into
xor
add
pop
shr
pop
cmp
mov
mov
fbstp
ds
aad
rclb
mov
insl
sub
sub
add
mov
mov
lods
and
repnz
into
cmp
std
imul
aam
add
mov
jl
cltd
inc
cli
push
cmp
push
ds
mov
nop
test
pop
sub
jp
in
ja
sbb
adcl
push
adc
sbb
mov
dec
mov
and
popf
aad
je
or
lret
fldl2t
push
xchg
test
inc
movsl
inc
mov
orb
mov
pop
sub
shlb
fwait
rclb
test
dec
or
jg
fiadds
add
lret
lret
out
xchg
sub
addr16
arpl
fisttpl
mov
push
xor
mov
push
sub
loop
cmp
icebp
mov
cmp
scas
jno
sub
mov
testb
xchg
aam
add
add
pop
jae
fisubrs
fmulp
xchg
nop
mov
mov
pusha
addr16
std
mov
clc
mov
lods
pop
jp
gs
xlat
je
pop
inc
cwtl
loopne
out
into
negb
or
cmpsl
mov
clc
or
rorb
xchg
ljmp
aad
pop
sbb
aas
cmpsb
add
scas
aad
xor
filds
mov
leave
adc
lea
sbb
or
aam
loop
xlat
xchg
aas
xchg
mov
ret
inc
mov
das
or
mov
mov
push
lea
sub
pop
lods
sbb
in
in
dec
dec
daa
and
popa
pop
jno
imul
sub
repz
call
mov
les
sahf
dec
jns
addr16
fdivrs
cs
mov
dec
bound
loopne
sar
pop
test
iret
xor
imul
out
outsl
cltd
cmp
fwait
or
in
mov
adc
mov
pop
push
xor
xchg
in
cli
mov
adc
scas
pushf
test
xor
test
sub
pushl
call
inc
cmp
xor
inc
jae
mov
scas
sbb
dec
dec
loope
jp
xchg
aad
pop
shrb
pusha
jb
stos
fs
ja
push
loop
adc
adc
jl
push
inc
jnp
sbb
decl
es
loop
mov
ret
scas
mov
jae
push
fwait
add
loop
in
add
xchg
jns
aam
or
sub
sub
in
inc
mov
dec
adc
dec
sub
lahf
dec
aas
sbb
loopne
ja
add
enter
dec
sub
dec
pop
and
inc
jmp
clc
dec
les
dec
sub
add
rcrl
lret
bound
imul
dec
popl
sub
test
in
inc
sub
mov
cmp
push
xchg
fnstenv
notb
jb
ss
test
call
pop
xchg
sub
add
std
jbe
add
mov
fs
jg
adc
adc
push
fldt
into
clc
cmp
andl
xchg
pop
cmc
add
das
setns
xchg
sub
push
push
rcrl
daa
inc
clc
pop
scas
sub
and
gs
cmp
mov
stos
aas
into
leave
jb
clc
pop
jmp
ljmp
fsubrs
dec
fisttps
or
cmpsl
fcoml
fnstcw
and
xchg
adc
inc
test
pop
push
or
push
sti
aas
shrl
cwtl
pusha
hlt
add
or
in
mov
daa
mov
enter
sbbl
pusha
push
lret
jb
cmp
mov
pop
jnp
push
mov
adc
mov
lret
mov
lea
out
pop
ljmp
repnz
fstl
pop
cmpsl
jnp
shrb
insb
frstor
sbb
es
bndldx
mov
dec
dec
lods
inc
outsb
hlt
mov
push
loopne
lock
insl
lcall
bound
mov
adc
test
pop
adc
xchg
aaa
dec
add
and
mov
data16
and
mov
inc
mov
mov
lret
pop
push
pop
rorb
inc
adcl
mov
movsb
nop
mov
movsl
pop
mov
inc
das
inc
pop
mov
cmp
or
popl
ja
stc
and
imul
outsb
int3
add
push
lret
mov
out
xor
test
or
sub
jecxz
cmpl
loope
int3
and
sbb
jp
dec
push
in
xchg
cmp
es
jge
or
mov
stos
pop
or
ljmp
ret
jb
mov
fwait
dec
inc
and
addb
cltd
sub
pop
sbb
and
fiaddl
pop
lcall
popf
push
mov
punpckhdq
mov
fdivs
sub
out
aam
test
and
out
std
cmpsl
in
jl
lcall
inc
arpl
dec
aas
push
cmc
lret
adc
addr16
and
push
sbb
add
cwtl
jnp
add
pop
hlt
jne
js
fwait
xchg
inc
and
jns
outsl
cltd
or
ss
clc
fsubl
inc
insl
mov
cwtl
cmpsl
orb
fstpt
mov
push
mov
dec
or
cmpb
sbb
or
addb
adc
jbe
in
cmp
in
adc
mov
mov
movsl
xchg
sarl
pusha
movsl
mov
arpl
addr16
fwait
xor
test
rolb
lods
pmaxub
xchg
insl
repz
imul
dec
or
fs
pushf
out
int3
lods
popa
sub
adc
or
clc
repnz
lock
clc
or
bound
inc
inc
imul
xor
rcll
les
fisubl
sbb
jns
fisttps
and
mov
push
jae
jmp
stos
aad
mov
pop
or
gs
aaa
push
stos
movsb
jae
or
hlt
movl
xor
xorb
clc
add
insl
insl
push
inc
adc
inc
dec
and
or
out
inc
cmpsl
jl
add
inc
into
push
nop
jecxz
pushf
or
push
jne
mov
cmp
in
jmp
bound
movsb
jno
scas
inc
mov
or
movsb
mov
push
in
stos
add
testb
mov
enter
sbb
mov
pop
pop
loop
lds
xchg
lahf
andl
adc
out
xchg
adc
jbe
loope
lock
into
sub
lret
push
cmc
sub
les
bound
cmp
lea
cmpsb
mov
dec
stos
jnp
sub
imul
and
cltd
out
lock
out
pusha
ljmp
aas
aam
or
ja
dec
add
mov
outsb
push
inc
jl
xchg
and
outsl
xorl
xor
pop
loope
ljmp
addl
out
test
xchg
mov
cmpsl
int3
add
push
lahf
data16
adc
enter
jmp
lahf
aaa
jle
iret
es
xchg
popf
call
xor
orps
mov
adc
ss
push
push
loop
adc
shl
cmpsb
lcall
push
rorl
iret
jae
out
xor
rclb
jae
cmpsl
adc
dec
pop
stc
imul
stc
sbb
and
cmpsb
lods
outsl
je
add
adc
popa
imull
pop
enter
sbb
in
das
je
sar
inc
mov
into
out
push
push
jge
sbb
fdivs
inc
jge
cmp
in
pop
inc
stos
pop
scas
jg
inc
fists
add
mov
stos
mov
dec
inc
xor
mov
in
lea
cltd
aad
sbb
inc
push
sub
pop
popl
das
sbb
inc
loopne
mov
add
dec
loop
cmp
shlb
xor
adc
cmp
fdivrl
pusha
add
mov
lcall
mov
jle
sbb
xor
into
mov
jns
popa
add
sbbb
add
dec
sub
dec
out
mov
cmp
push
pop
jmp
dec
cmc
cwtl
insl
cmp
jmp
int
inc
faddp
add
mov
mov
test
popf
mov
push
jns
mov
movsb
es
clc
mov
leave
cmpsl
push
jae
pushf
and
insl
mov
or
push
and
xchg
xor
push
fcomps
xchg
pop
and
std
lods
jno
sti
push
cmpsb
fs
unpcklps
mov
arpl
lods
xor
pushw
repnz
int
rcrl
sbb
loopne
inc
push
sbb
push
sbb
xchg
sub
adc
stc
inc
push
sbb
scas
push
sub
fildl
mov
and
pop
in
pop
or
cmc
cmpsb
jnp
rol
aas
push
pop
scas
mov
fwait
sub
int
loope
gs
cltd
out
xchg
mov
or
xchg
or
call
mov
mov
push
push
in
scas
and
xchg
mov
mov
movsb
mov
cltd
test
frstor
iret
xchg
scas
cwtl
push
test
mov
cmp
sub
leave
pop
mov
movsb
gs
imul
dec
test
jmp
lds
ss
sbb
cmpsl
jmp
sbb
andb
push
in
cmpsb
push
or
iret
or
cmp
adc
mov
pop
or
xchg
popa
xor
lods
adc
sti
pop
pop
add
sarb
pop
xchg
mov
dec
mov
push
cmpsb
lcall
shrb
pop
inc
mov
iret
or
inc
dec
xchg
jecxz
lcall
pop
insl
pop
scas
hlt
arpl
mov
imul
lods
pop
pop
outsb
jl
mov
int3
repz
std
sbb
enter
jb
stc
adc
mov
adc
xlat
inc
inc
cmp
lret
push
ljmp
divl
cmp
dec
hlt
xor
sub
rep
jg
out
or
adc
jp
insb
sarl
call
insb
jnp
jle
shl
nopl
je
adc
or
pop
sbb
out
xor
hlt
sub
mov
fs
cmp
lock
adcb
jnp
inc
fcmovbe
addr16
vmread
or
fcmovu
loopne
in
sbb
push
xchg
shll
cli
cmpsb
lcall
repnz
cmp
repnz
scas
mov
mov
divl
es
aam
stc
xor
mov
movsb
mov
mov
daa
xchg
mov
or
leave
sub
int3
test
sub
cmp
enter
mov
fcompp
call
pop
sarl
jno
xor
lahf
push
add
icebp
sbb
jp
mov
pop
jge
call
mov
aam
jae
out
xchg
jmp
sahf
adc
je
dec
xor
sbb
add
jb
fucomip
cmp
fsubrs
outsb
mov
fdivl
sti
or
scas
into
adc
xor
fnstenv
shrb
xchg
clc
adc
push
test
pushf
incb
dec
or
ficompl
fildll
cmpsb
mov
ret
inc
jb
repnz
imul
out
inc
jp
or
and
adc
jl
cmp
pop
mov
add
out
adc
xchg
mov
inc
pop
sti
lret
loope
pop
or
enter
cmp
xchg
test
pop
jp
ret
sub
add
les
fisubs
out
ja
aad
cmp
cmpb
sbb
push
mov
outsb
in
hlt
push
pop
ljmp
jecxz
push
mov
cmpsl
clc
popa
or
xchg
fadds
xchg
jmp
add
push
cmp
lahf
adc
mov
adc
mov
jb
push
lds
mov
dec
jb
fdivrp
cmp
shrl
xor
gs
hlt
cmp
push
cmpsb
arpl
je
lcall
push
inc
lds
mov
sbb
rclb
add
pop
add
mov
push
scas
inc
in
cmp
jne
push
dec
cmp
cmc
cli
leave
jnp
push
sbb
xor
and
sbb
leave
fmuls
xchg
movsb
sub
push
sbb
and
xchg
sub
iret
shrb
scas
imul
loope
inc
int3
jge
sarb
dec
rclb
jno
movq
cwtl
push
cltd
pushf
lea
ds
leave
mov
imul
dec
cmp
jnp
in
push
xor
jecxz
inc
test
mov
and
jg
scas
mov
xchg
movsb
sub
aad
int3
sbb
xchg
jne
shrl
pop
sub
push
mov
outsl
mov
add
and
xchg
mov
pop
lock
xorb
int3
notb
loope
dec
jg
pop
imul
pop
subl
push
dec
scas
lods
stos
sahf
loop
data16
add
sbb
dec
push
sub
rol
mov
dec
jmp
loop
cltd
ss
lds
mov
jbe
ret
jge
hlt
mov
push
xor
adc
mov
daa
fstpl
stos
cwtl
jecxz
lea
adc
call
pop
rcl
mov
ficoml
inc
bound
popa
sub
int3
stos
jle
add
aad
in
or
sub
aaa
dec
inc
push
pop
inc
push
mov
jnp
cmp
vcvttps2dq
push
xor
push
sbb
sbb
repz
test
xchg
cmc
out
popa
scas
mov
xchg
dec
fnstcw
bound
jge
mov
popa
sbb
xor
jl
out
dec
int
inc
stos
pop
sbb
pusha
gs
pushf
ja
pusha
sub
xlat
mov
jmp
inc
repz
adc
sbb
lea
aaa
jge
mov
ret
sub
sbb
mov
cmp
xlat
or
bound
or
leave
fadds
pop
out
adc
adc
push
xor
jp
push
cmp
cmp
add
fcoms
pop
insb
shll
inc
sub
mov
out
out
insl
mov
sbb
jae
jb
mov
icebp
mov
out
adc
leave
fcoms
jae
jb
or
mov
or
rep
bnd
outsl
stc
dec
test
movsl
ja
mov
lods
lret
aam
ljmp
sbb
test
mov
mov
cmpsl
dec
stos
add
push
adc
leave
mov
test
nop
pop
add
ret
aaa
cmp
mov
sti
xchg
ja
bound
cltd
or
call
or
cltd
push
push
lea
lods
pop
mov
roll
push
adc
fnstsw
jge
cmp
pop
push
andl
xchg
int3
sub
or
lea
cs
test
cmp
cmc
mov
rorl
movsb
cli
cltd
jbe
mov
mov
out
cmp
mov
stos
insb
and
xor
bnd
xchg
insb
outsb
andl
jno
sbbb
xchg
adc
test
lret
pop
inc
xor
push
sbb
stc
jp
pop
mov
test
cmpl
sti
or
negl
inc
sahf
push
pop
mov
mov
cltd
cmp
or
xchg
aad
push
sbb
jg
xor
pusha
hlt
fsubr
jns
cltd
fwait
jp
dec
cmpb
popa
add
mov
in
mov
lret
lcall
jo
dec
lret
sti
or
lock
fldenv
and
lods
pop
add
and
loopne
mov
xor
pusha
and
clc
inc
lods
imul
movl
arpl
add
imul
sbb
xchg
leave
orl
ljmp
cmp
orl
outsb
sahf
ja
dec
loope
outsb
mov
arpl
orb
pop
lods
lds
cmp
int
mov
lea
inc
jge
sub
shrb
xor
in
cmpsb
popf
xor
test
repnz
enter
xorl
lea
jg
repnz
inc
inc
xchg
mov
lea
jg
push
lcall
insb
pop
andl
hlt
lods
jns
cmp
adc
cmp
and
addl
ss
dec
sbb
inc
dec
rcl
dec
pop
add
mov
addl
xor
imul
sub
rcl
mov
xlat
negb
jno
stos
scas
xchg
jecxz
shl
mov
and
inc
out
fcomps
push
ja
out
jg
out
test
xorb
mov
xor
outsl
je
fsubl
mov
jbe
push
negl
mov
scas
into
cs
adc
jne
rcrb
movsl
andl
imul
jl
inc
imul
out
pop
int3
sub
loopne
jecxz
sbbl
cmp
jns
jmp
dec
mov
add
sahf
push
scas
push
sub
jnp
adc
ja
sub
in
test
imul
inc
xor
jge
mov
xchg
jno
cld
inc
mov
sbbl
sub
pop
sub
xchg
ljmp
and
xchg
fs
xchg
ljmp
iret
xor
in
insb
cmp
imul
outsl
mov
xchg
or
adc
dec
lods
nop
outsb
dec
js
jo
or
out
push
add
loop
cmc
sbb
shl
sbb
cld
call
gs
stos
in
sbbb
add
adc
les
hlt
dec
add
adc
cmp
rcr
mov
jg
adc
or
movsbl
and
popa
or
mov
inc
mov
pop
ss
push
pop
mov
imul
fsubrs
add
jp
faddp
andl
stos
lret
mov
jnp
int
fidivs
test
aaa
mov
cmp
sahf
jg
les
sub
call
mov
xor
jne
les
ficompl
aas
sub
rep
or
push
push
sbb
add
mov
push
push
pop
adc
pop
mov
xlat
xchg
jp
push
insb
pop
push
mov
pop
rcll
jl
push
xor
test
sarb
mov
and
add
aas
mov
cmp
repz
push
repnz
jle
push
out
inc
lods
xor
and
xor
clc
test
pop
xchg
sub
adc
mov
sti
insb
and
adc
jge
out
aam
mov
hlt
mov
or
jg
push
dec
outsb
pusha
repz
pushf
loope
jne
decb
and
mov
std
fisubs
data16
sub
es
sbb
shl
sbb
mov
test
dec
fidivrl
jo
xchg
push
out
pusha
inc
xor
fldcw
push
jle
dec
ss
push
xor
jns
mov
mov
adc
sbb
jb
mov
and
in
push
pusha
loope
push
mov
or
das
inc
xor
xor
iret
ljmp
clc
call
rolb
loope
xchg
xor
shrl
xor
aas
jp
jae
and
push
mov
mov
inc
mov
fcomi
mov
push
xchg
and
adc
mov
xchg
lahf
dec
insb
popl
js
std
lahf
stc
daa
xchg
add
jb
adc
call
test
dec
cmpsb
jl
jb
rolb
mov
adc
repnz
or
push
xchg
cs
or
push
push
inc
inc
cmp
loopne
adc
push
push
ret
orl
cmc
jge
inc
sub
lods
fadds
push
gs
clc
pop
mov
pop
cli
mov
and
das
aaa
mov
cmp
xor
jecxz
jnp
cmp
cmpsb
push
testb
popf
dec
into
adc
jb
and
lea
mov
inc
sarl
and
pop
mov
mov
stos
lock
inc
jnp
or
rcl
fcmovu
adc
mov
pop
test
mov
pusha
push
mov
test
ficoml
push
cmpsb
pop
cmp
dec
push
insb
sbb
jnp
mov
sahf
fists
and
lods
pusha
fldcw
inc
aaa
out
outsb
std
shrb
xchg
jcxz
cmp
dec
loop
iret
push
pop
mov
sbb
fucomp
pop
cmp
sub
sbb
movsl
repnz
dec
adc
cmp
daa
push
mov
inc
sbb
dec
push
in
and
test
aas
jp
leave
xchg
mov
mov
or
jnp
mov
out
adc
xor
lea
call
add
es
movsl
test
inc
push
popa
shll
jge
sbb
or
dec
dec
xor
adc
testb
mov
jg
imul
xchg
daa
popf
fnsave
mov
push
repz
popf
and
push
repz
pop
pop
xchg
cmpsl
insl
ret
addr16
pop
negb
push
clc
cmpb
xchg
cld
cmpl
push
testb
inc
rolb
pop
sub
roll
stos
cmp
subb
adcl
xor
std
sub
lock
add
lcall
fists
nop
push
sub
out
mov
push
mov
enter
sub
xchg
jp
cmpb
cmc
pop
jne
and
int3
gs
or
lret
aam
jl
mov
insb
aas
stos
ret
or
jge
shl
lret
sbb
sub
mov
xchg
or
adc
push
adc
dec
scas
mov
and
adc
push
pop
daa
mov
mov
jge
mov
jmp
cmp
dec
or
cmp
and
dec
dec
negl
push
inc
adc
leave
cltd
fistl
mov
lcall
add
push
testl
cmc
popa
vmaxpd
jnp
pop
lea
inc
mov
call
out
imul
jecxz
je
cwtl
negl
jl
pop
sub
cmp
movd
cmp
ret
bnd
cmp
lret
aam
lret
cmp
inc
pop
in
mov
ucomiss
fs
mov
mov
xchg
inc
or
mov
les
bound
in
inc
add
sub
mov
xchg
mov
mov
sub
or
cmp
jno
inc
jge
scas
add
sub
enter
mov
cltd
push
mov
fistpll
test
daa
pop
lds
mov
in
cmpb
push
stos
inc
out
xchg
sbb
pushf
repnz
push
aas
std
adc
sarb
aas
imul
lds
sbb
and
jae
repz
lea
push
call
sbb
sbb
aam
lods
and
jb
nop
add
ds
xchg
subl
mov
cli
cmp
inc
dec
daa
pop
fisttpl
ret
aad
pop
mov
jl
mov
fsubrs
lock
push
push
enter
mov
sarb
sub
xchg
sbb
outsl
jecxz
pop
daa
aas
fsubp
or
jo
in
mov
inc
pop
arpl
pop
xchg
sub
mov
jg
or
out
xchg
add
insb
mov
cmc
sbb
data16
and
xchg
in
inc
ret
mov
mov
xchg
pusha
pop
and
stc
sbb
test
call
imul
stc
iret
pusha
and
je
aad
hlt
push
add
les
cmp
test
lock
sbb
outsl
push
mov
rorl
mov
das
mov
inc
jg
sub
sbb
dec
cmpsb
fdivr
jp
jle
mov
fdivs
cmp
xor
adc
adc
fwait
pop
inc
pop
dec
clc
lea
dec
dec
jae
pop
inc
lods
cmpsl
dec
lahf
add
add
imul
out
arpl
jl
jmp
jbe
add
mov
inc
cmc
adc
cli
xchg
push
lock
ss
stos
jmp
xchg
sbb
out
pop
cmc
inc
jmp
inc
sti
mov
fnsave
loope
fwait
imulb
insl
mov
jae
cmpsb
icebp
sbb
test
add
test
shrb
repnz
mov
adc
xchg
js
or
jmp
xor
push
loope
clc
pop
push
pop
pop
testl
mov
outsb
sbb
pop
imul
test
mov
int3
xor
mov
cmc
cmp
pop
je
push
outsl
in
add
mov
fsubr
sarb
das
cwtl
inc
test
or
add
addr16
sub
mov
add
mov
sub
lcall
add
mov
out
inc
jnp
push
scas
ret
ret
test
dec
jmp
popf
sbb
mov
sbb
xor
imulb
fld
mov
imul
rcll
sub
outsl
sbb
xchg
mov
mov
sbb
xchg
mov
jbe
pop
jns
xor
cmpsb
aad
and
aam
sbb
hlt
xchg
sbb
mov
push
into
ja
ret
mov
mov
jnp
or
push
sub
cltd
outsl
add
loope
mov
inc
mov
sbb
cwtl
test
xchg
mov
sbb
lods
adc
into
xchg
xchg
mov
sti
gs
rol
outsb
ds
or
push
cmpsb
mov
adc
out
adc
stos
xchg
sub
xlat
xlat
mov
cs
cmc
add
adc
shrl
in
pop
add
jg
and
sub
popa
lds
divl
sarl
inc
iret
ret
cmpsl
mov
push
scas
nop
adc
ss
xchg
int
sub
daa
xor
adc
xorb
xchg
pop
push
lret
insl
and
lret
push
out
dec
or
adc
adc
adc
jecxz,pn
ror
push
and
add
cltd
cs
inc
das
or
daa
xchg
mov
cmp
popl
push
mov
push
dec
out
mov
jg
xchg
mov
inc
cltd
mov
data16
dec
and
mov
or
sbb
clc
cs
pop
int
xchg
scas
or
and
push
test
xchg
jb
mov
cmpsb
cwtl
add
pop
das
cmp
mov
sbb
negb
ficoml
mov
lcall
inc
xor
mov
xor
inc
sub
int3
aaa
fldenv
ljmp
sub
add
in
jp
adc
cmp
decl
or
pop
scas
adc
in
xchg
pop
dec
cmc
xorl
mov
in
adc
cmp
push
push
sbb
jns
adc
add
rcrb
aas
xchg
xor
xchg
jmp
cmp
subl
rcrl
dec
pop
jae
mov
xor
leave
lock
lret
add
inc
mov
mov
inc
stos
dec
xchg
sub
sub
enter
sbb
mov
cmp
in
punpckhbw
stc
repnz
aas
mov
pusha
adc
pop
sbb
pushf
mov
shll
push
popf
inc
rcrb
mov
pop
pop
loope
push
sarl
xchg
push
adc
repz
cmp
mov
ret
adc
push
pusha
shlb
leave
outsl
sti
hlt
cwtl
pop
dec
xlat
outsl
mov
mov
mov
adc
rcll
push
xchg
mov
mov
push
sub
inc
cmpsb
xchg
aam
lods
sbb
cltd
add
iret
dec
push
mull
fisubl
push
sahf
psubq
aaa
and
pop
dec
push
imul
mov
push
add
dec
xchg
adc
cwtl
in
test
enter
push
subb
sbb
outsl
cltd
dec
mov
stc
adc
inc
pop
daa
jnp
mov
nop
xchg
andl
or
push
iret
clc
inc
scas
dec
dec
stos
inc
mov
sarl
xchg
dec
mov
push
or
mov
movsl
add
lods
outsl
push
ss
add
and
clc
mov
fadds
dec
mov
mov
shl
adc
push
rcll
inc
es
xor
test
icebp
xor
lret
jle
xchg
shrl
push
pushl
sarl
fisubs
cmpsl
daa
xor
sub
push
xor
pop
nop
movsl
dec
out
pop
std
and
arpl
outsb
mov
out
push
ja
lret
lret
xor
cli
pop
add
jae
and
rorb
ss
lcall
movsl
mov
cmpsb
into
gs
jp
or
popf
enter
push
dec
and
pop
stos
dec
xchg
aas
icebp
pop
push
pop
stos
les
xor
stc
pop
jno
add
cltd
cli
aam
das
adc
sahf
rolb
sub
lea
mov
xor
pushf
sarb
pop
loope
lret
mov
or
and
cmp
popa
and
ljmp
jb
imul
pop
and
pop
addr16
mov
push
fsubrs
pop
ret
sti
xchg
decb
mov
mov
sub
aas
icebp
sub
push
fcmovnbe
xor
in
add
inc
jmp
xchg
mov
fidivs
out
lcall
mov
in
loope
mull
fistl
lcall
mov
mov
into
inc
pop
scas
pop
bound
test
rcl
xor
into
push
sbb
ds
jne
inc
jbe
xor
shr
mov
ds
rcl
inc
loop
in
xchg
or
jnp
sbb
sub
sub
pop
cmp
repnz
push
out
loopne
adc
jmp
scas
dec
fmul
push
jl
enter
dec
je
and
xor
das
jecxz
xchg
shlb
xor
clc
movsb
cmpsl
leave
fistps
jae
xor
dec
lock
push
stc
push
in
ss
jae
cmc
shlb
mov
sbb
mov
movsb
hlt
cmp
jle
rorb
mov
ljmp
and
ljmp
je
fsts
ret
fists
mov
pop
dec
cld
push
lods
out
cmp
mov
mov
push
popa
shlb
add
cmp
insl
dec
mov
cmpl
mov
icebp
mov
shl
outsb
movsl
icebp
test
ja
jne
movsl
xor
pop
stos
jge
mov
xchg
out
ror
pop
mov
leave
pop
pop
lods
pop
xorl
sahf
loop
cmpsl
mov
flds
neg
mov
int3
adcb
or
dec
xchg
mov
test
add
jns
push
aaa
and
push
pop
outsb
flds
mov
jmp
inc
cwtl
out
cs
jmp
mov
scas
sahf
sbb
mov
mov
imul
mov
cmpsb
cld
imul
out
inc
andl
subb
jmp
mov
cwtl
pop
int3
pop
mov
push
mov
mov
mov
clc
out
fnstsw
leave
lods
xchg
jo
lds
inc
push
fisubrl
xor
mov
out
test
aam
insl
and
inc
aas
bound
sbb
mov
cs
in
add
test
les
mov
mov
mov
mov
loop
leave
add
ficoms
insb
inc
das
loopne
mov
cmpsb
int
test
pop
cmp
loop
bound
clc
aad
mov
ret
loop
push
cmpsb
sbb
add
lret
mov
inc
imul
mov
mull
add
ret
add
jbe
aas
cld
dec
jmp
lock
xchg
pop
loope
cmpb
dec
pop
dec
mov
dec
adc
xor
inc
cmpsb
fiaddl
inc
dec
cmp
lods
int
push
mov
idivl
push
ljmp
xchg
adc
and
hlt
shlb
test
lds
add
xchg
stos
call
pop
insb
negl
sub
inc
call
jge
pushf
ja
lahf
mov
xor
and
leave
fsubs
pop
mov
sub
ljmp
mov
add
stos
gs
and
rolb
mov
sarb
ds
stos
mov
outsb
jle
push
movsl
nop
mov
in
leave
mov
mov
loopne
dec
sarl
push
mov
xor
cmp
lret
in
inc
xchg
sub
pop
scas
popa
mov
movsl
xchg
jne
movl
xlat
shr
pop
subb
jbe
cmc
or
adc
mov
ret
xchg
ret
mov
cmp
inc
fwait
adc
jmp
or
xlat
jge
pusha
js
daa
es
cmp
pop
jp
xor
popa
push
mov
shr
loopne
or
mov
mov
iret
mov
icebp
pop
outsb
jge
out
cmp
mov
fisubl
lcall
dec
add
adc
mov
gs
cmp
adc
aam
fcomps
adc
stos
test
ja
in
add
mov
xor
adc
fistl
es
gs
jo
data16
pop
or
mov
mov
mov
jae
test
sbb
outsl
mov
adc
out
xor
punpckhbw
inc
gs
lds
cmp
outsl
adc
adc
xchg
push
mov
sbb
or
adc
dec
leave
inc
push
mov
lods
popf
filds
inc
dec
add
js
scas
push
cwtl
in
mov
out
adc
mov
movsl
add
dec
rcll
add
divb
push
fsubl
mov
in
pop
fs
mov
ret
lretw
pop
mov
clc
inc
jge
sub
add
adc
push
fcomps
mov
xor
rolb
adc
ja
pop
mov
pop
lcall
cmpsl
adc
xor
push
popa
leave
pop
int3
stos
or
stc
xchg
mov
xchg
inc
movsl
jbe
jo
das
push
jns
mul
clc
jne
cmp
and
mov
pop
ds
jbe
xchg
jo
sbb
or
dec
cmp
loope,pn
push
mov
lahf
push
int
aas
cmp
lea
push
push
xchg
mov
cs
mov
pop
sbb
fstps
fistps
ficoml
dec
pop
adc
mov
inc
xchg
dec
mov
dec
movups
mov
mov
lea
popf
cli
or
stos
mov
notl
ss
cmp
ja
xchg
mov
cs
push
in
call
shll
in
jnp
enter
mov
and
jbe
aas
xchg
lock
outsb
xchg
push
xchg
mov
mov
addb
inc
sub
lock
fsub
insl
or
popa
inc
cmp
bound
mov
mov
ret
insl
xlat
outsl
iret
icebp
das
test
fisubrs
push
cld
xchg
jle
adc
ret
sbb
adc
mov
out
adc
fsubrl
xchg
xchg
sbb
loop
inc
sar
pusha
xchg
shrb
mov
sub
es
sbb
push
xor
ret
hlt
sub
in
xchg
lods
cmp
cmp
add
cmp
dec
gs
jmp
les
out
inc
lea
insb
mov
sub
ss
lods
dec
mov
fs
jmp
rcl
stos
imul
int
stc
imulb
xor
push
nop
pop
in
cwtl
inc
inc
add
fnstsw
sub
movsb
add
sahf
aam
movsl
je
xlat
pop
and
jge
stc
xor
shrb
fstpl
sub
mov
pop
mov
in
in
test
in
xchg
sbb
shl
iret
pop
adcb
fs
lret
sub
mov
test
cmp
ja
pop
sbb
push
pop
sbb
scas
cli
sub
outsb
push
adc
sahf
push
nop
dec
sbb
fst
pop
stc
xor
shrl
pusha
adc
aad
out
enter
popf
add
fs
lods
mov
shll
jae
push
arpl
movsl
xchg
sbb
stos
pop
jg
inc
aad
mov
pop
dec
movsb
cmpsl
scas
mov
mov
clc
or
pop
cmp
repnz
in
divl
imul
jmp
sub
or
lds
out
jecxz
mov
add
add
out
pop
mov
xchg
icebp
cmpsb
dec
xchg
jg
stos
jae
push
and
xor
jmp
psrlq
xor
push
in
jecxz
pop
out
es
notb
mov
mov
xchg
ljmp
xchg
add
sbb
test
jmp
mov
mov
mov
cld
sti
jl
mov
jns
stos
sub
sti
repnz
fsubs
xchg
xor
addr16
in
test
mov
and
arpl
mov
pop
icebp
and
jno
cltd
sbb
cs
mov
std
add
fldenv
cwtl
adc
mov
lret
shlb
mov
dec
pop
stc
imul
inc
repz
mov
xor
iret
mov
adc
mov
test
mov
sub
incb
pop
mov
xor
icebp
pusha
ljmp
push
das
jo
sbb
shll
add
fistl
int3
xor
in
sub
icebp
test
mov
mov
scas
jnp
sbb
xchg
cmpsl
jo
ret
mov
cwtl
enter
push
clc
sbb
into
shl
cmp
sbb
mov
push
push
adc
testl
jae
pop
out
lret
lcall
stc
sub
jecxz
xchg
add
icebp
call
pop
push
mov
xorb
lock
inc
inc
inc
dec
cmp
gs
push
in
mov
add
enter
out
push
xchg
xor
idivb
push
jp
loope
sahf
xchg
cli
ljmp
jmp
stos
mov
divb
jbe
mov
xchg
test
pushf
hlt
cmp
inc
aad
and
mov
js
mov
inc
les
mov
inc
out
push
jbe
push
xchg
aaa
cld
sbb
add
push
fwait
mov
mov
addr16
jno
and
cltd
inc
jae
pop
or
sti
mov
cmc
mov
ja
xchg
mov
es
mov
out
xor
jge
gs
daa
dec
call
jg
loop
cltd
int3
push
mov
mov
jae
ja
test
std
notl
loopne
fldt
out
or
into
or
jp
xor
add
mov
rorb
lods
mov
push
jg
inc
sub
int
mov
int
push
pop
scas
jne
mov
lea
pop
mov
mov
in
stos
xchg
bound
jg
jmp
sub
testb
imul
movsl
or
enter
das
outsl
xor
je
and
stos
mov
mov
roll
out
xor
nop
push
cmp
andb
mov
notb
pop
xor
shll
jno
cmp
push
ds
push
sbb
jge
xchg
call
or
or
shlb
jmp
jmp
out
dec
je
push
jae
jle
and
pop
popf
test
popa
inc
mov
push
mov
mov
push
movsb
or
inc
xchg
fldenv
loop
dec
movsb
rcl
cmp
sub
aad
mov
stos
movsl
add
fcomi
mov
pop
add
mov
jle
jmp
lds
icebp
jp
cmp
test
add
pop
push
out
mov
mov
and
inc
out
outsl
lret
pop
push
or
sbb
pushl
jmp
lfs
sbb
sti
add
pop
add
sbb
xchg
adc
cmpsl
dec
loope
jae
loop
lret
daa
pop
addr16
mov
lea
in
adc
sbb
adc
lahf
jmp
cmpsb
sti
scas
inc
movsb
sub
popa
clc
mov
dec
sub
into
jns
xchg
jno
cmp
dec
rcl
pop
shlb
lock
nop
push
pop
out
jae
push
push
xchg
xchg
or
push
jne
push
mov
mov
loopne
jb
jbe
cmpsb
cmp
inc
ret
or
sub
in
pop
out
pusha
sub
push
clc
inc
loop
cmp
fs
cld
mov
ret
push
push
add
sub
ljmp
mov
sahf
dec
push
fmull
cltd
repnz
in
add
inc
mov
adc
xorb
lods
fnstcw
sub
jecxz
lahf
xor
stos
dec
imul
inc
sbb
pop
or
scas
rclb
cmp
cmpsl
mov
das
xchg
pop
cs
out
adc
rorl
pop
xchg
jae
push
pop
ss
mov
es
shr
lret
ret
dec
mov
inc
das
ja
addb
mov
inc
rorl
int3
and
clc
add
stos
jge
inc
adc
popf
insb
outsb
mov
jno
mov
in
adc
lods
sub
add
xchg
movsl
pop
frstor
mov
cli
cmp
mov
mov
mov
push
out
in
paddsb
iret
les
arpl
push
fs
dec
outsb
push
js
add
fucomp
scas
add
rcll
inc
mov
mov
cmp
stos
enter
mov
mov
mov
fcomip
dec
sub
cmpsb
add
loope
push
fcoms
mov
fnstcw
pop
cmp
daa
and
cmovae
xchg
cltd
xor
aaa
mov
add
mov
mov
loopne
add
pusha
stc
push
int3
adc
dec
imul
ficoml
roll
mov
cmp
pop
jo
dec
cld
in
shll
enter
mov
xorb
enter
imul
into
imul
fldl
testb
xor
aas
xor
xor
mov
mov
cmp
and
inc
out
push
inc
add
dec
sbb
fdivrl
insl
pop
int
push
jae
fisttps
scas
pop
push
adc
mov
adc
mov
lods
add
stos
ret
xchg
mov
es
push
jne
sub
adc
sub
aas
pop
mov
sbb
push
xchg
add
mov
leave
icebp
push
inc
and
les
adc
sub
jecxz
daa
push
movsl
je
xor
mov
pop
subb
subb
and
xchg
mov
push
xor
mov
mov
in
sete
popa
pop
std
mov
xchg
inc
jb
fcompl
mov
sub
js
cmpsb
pop
sarl
out
xor
or
ret
mov
adcb
mov
lds
out
jecxz
sub
test
adc
add
js
aas
aam
in
enter
inc
test
test
sahf
adc
inc
push
movsb
ja
dec
test
cltd
leave
lods
imul
std
sub
fwait
xlat
es
pop
sbb
sahf
jno
outsl
lret
inc
or
inc
adc
ja
lds
push
fisttpl
inc
js
mov
aam
adc
mov
pop
stc
pop
int3
push
adc
adc
lock
sahf
adc
flds
pop
lcall
je
adc
fwait
cmpsb
push
cmp
dec
clc
mov
jp
fmull
out
push
mov
andl
xchg
or
pop
fdivr
imul
scas
pop
xchg
js
incl
addr16
movb
dec
dec
nop
std
push
push
je
pop
cmp
lret
in
mov
jle
insl
fstl
rcl
stc
out
fsubrl
mov
aaa
xchg
jmp
outsb
stc
lods
data16
enter
stos
sbb
test
adc
stc
dec
cmp
nop
mov
fimull
mov
test
inc
xchg
mov
mov
xor
mov
lret
push
xor
fnstenv
std
push
cmp
stos
std
push
xchg
fbld
sub
setb
or
add
sub
repnz
push
mov
or
adc
sub
mov
addr16
push
ret
sbb
push
cs
int3
leave
je
dec
xor
mov
shl
mov
mov
mov
scas
punpckhbw
sbb
or
rol
jge
leave
inc
pop
mov
xor
int
mov
adc
js
push
lock
ret
ja
data16
inc
and
rcrb
into
sbb
push
push
dec
xchg
xor
pusha
sti
lret
xor
push
mov
adc
ficompl
repnz
xlat
add
dec
mov
test
adc
inc
icebp
xlat
insb
push
arpl
imul
test
and
pop
aam
xor
or
mov
push
pop
movsl
xchg
push
mov
add
ret
loopne
outsb
int3
dec
mov
xchg
in
cmp
xor
loopne
cli
lcall
jae
iret
xor
or
lds
addb
inc
jae
movsb
lods
add
jno
inc
std
or
dec
mov
adc
in
cmpsl
pushf
int3
or
mov
fs
add
sub
jp
in
movups
sbb
jecxz
mov
sti
sub
cltd
or
sub
mov
mov
mov
ror
stos
sahf
pop
cli
mov
test
in
bound
popa
lods
push
inc
aam
iret
or
adc
adc
xchg
lret
and
mov
and
xor
mov
or
xchg
out
inc
adc
shll
fmull
out
rclb
pop
adc
ret
mov
sbb
pusha
imul
clc
pop
dec
fcomp
push
sub
adc
ds
or
mov
enter
hlt
push
aad
data16
lea
jb
das
jns
icebp
jne
fsubl
fisubs
std
push
int
nop
xor
cmc
test
imul
int
cmp
daa
les
cmp
clc
daa
xor
out
jecxz
bnd
mov
sub
pop
insl
add
sub
lcall
mov
dec
push
adc
cmp
cli
sub
sub
shrl
cli
add
mov
and
dec
lods
and
icebp
dec
loopne
xor
cmp
mov
sbb
lcall
push
xchg
xchg
sub
pop
sbb
jne
mov
mov
loopne
mul
mov
lahf
mov
cmpsb
sbb
test
add
andl
test
and
inc
sbb
sub
add
ss
int3
rcrb
mov
rolb
dec
sub
enter
pop
add
int3
shll
and
and
or
aas
xchg
movsb
ss
leave
adcb
imul
fnstsw
std
in
mov
dec
in
imul
mov
add
out
adc
loopne
xchg
mov
add
nopl
adc
xchg
movsb
cmpsb
shrb
std
and
or
movsl
adc
aas
pop
stc
sub
mov
fs
test
and
cmp
add
mov
outsb
scas
xor
dec
mov
inc
sar
cmp
inc
pushf
pop
cli
xchg
cmp
jno
jo
lods
into
mov
call
lahf
xlat
inc
cltd
jg
pop
roll
repnz
adc
shr
ja
rorb
stc
mov
xlat
inc
fstpl
repnz
mov
mov
aas
in
mov
mov
out
movsl
je
jg
shrb
sub
addr16
and
sbb
out
js
xlat
push
repz
mov
xchg
idivl
cltd
aad
push
jne
ss
and
inc
adc
icebp
jg
pop
pop
andl
fstpl
xor
shl
in
push
orb
in
int3
pop
mov
mov
das
icebp
cmp
add
push
xor
popa
sub
pop
cs
push
rorb
mov
xor
inc
outsb
loop
cmp
dec
xor
cwtl
test
mov
jp
jno
adc
pop
pop
fldt
lods
jmp
call
sub
mov
ret
fmull
mov
inc
jmp
ds
add
out
jb
int3
dec
jmp
cmp
mov
gs
test
into
testl
mov
cmp
mov
push
fisttps
ljmp
hlt
arpl
cltd
testl
xchg
jne
ljmp
add
imul
pop
es
jae
insb
hlt
lock
add
cs
mov
test
pop
iret
lahf
cmp
fnstcw
jp
sbb
mov
fcmove
fwait
sub
je
insl
nop
sar
sub
mov
xor
data16
jo
sub
fildl
mov
rorb
push
dec
sbb
mov
jecxz
std
pop
es
dec
or
ljmp
inc
dec
cli
dec
mov
lahf
xchg
add
lahf
jno
dec
out
sbbl
cld
jge
push
ror
mov
orl
or
popa
add
iret
shl
add
xlat
mov
and
nop
lret
dec
cld
pop
adc
lods
lahf
jp
mov
out
iret
lcall
leave
adc
mov
and
or
ficomps
fbld
shrb
fs
movb
icebp
cmc
mov
push
push
mov
jmp
lcall
dec
and
cmp
out
rcr
lock
into
in
int
push
mov
ljmp
adc
dec
push
pop
add
das
push
sbb
push
mov
jle
mov
jle
mov
out
fwait
sbb
cltd
xchg
sub
xchg
cmp
sti
and
test
jmp
dec
scas
test
in
mov
jae
inc
fcompl
jl
int
xchg
sbbb
mov
sbb
test
dec
in
inc
mov
and
pop
nop
hlt
and
pop
ss
int3
ret
cmp
das
insl
repnz
imul
and
subb
test
push
mul
dec
cmp
inc
and
cmp
popf
insl
js
negb
daa
stc
daa
cld
in
shlb
push
inc
xchg
sti
movl
and
and
xor
inc
inc
and
sbb
mov
or
sbb
add
out
inc
pop
inc
dec
mov
add
je
mov
shr
cmp
cmp
sub
imul
cwtl
pop
add
adc
cmpb
lcall
cmp
test
lods
mov
inc
and
out
in
sub
ret
repnz
xchg
decb
fmull
xchg
inc
das
loop
ret
sbb
int3
sbb
inc
mov
call
xor
jns
mov
mov
or
mov
sbb
testb
push
fs
in
inc
mov
cmpsl
or
shl
cld
sbb
dec
popf
mov
inc
gs
push
imul
daa
and
add
std
push
xchg
sub
sub
pop
ret
mov
lcall
pop
lcall
xlat
inc
adc
ds
mov
sbb
andl
fwait
sbb
xor
imul
cli
pop
jns
lcall
out
add
cmp
push
into
push
in
add
sbb
rcl
mov
inc
mov
jne
scas
lods
lret
fwait
jo
inc
popf
sub
mov
sahf
dec
jae
xor
add
pop
mov
mov
ret
int
das
inc
cwtl
cmp
mov
cmp
sbb
add
mov
shl
sub
fcomp
push
mov
xor
movsb
jbe
jg
fmuls
xchg
fstpl
arpl
out
movsb
flds
jno
pop
movsl
dec
sti
push
lret
sub
aaa
push
dec
gs
cmp
mov
push
xor
aam
or
lret
push
jp
std
adc
nop
pop
pop
std
imul
pushf
call
mov
jle
xchg
fstpl
in
mov
in
add
icebp
test
push
xor
sub
xorl
adc
xchg
decb
mov
or
repz
push
dec
adc
pop
xor
es
sub
mov
sti
std
mov
stc
fwait
sub
aam
xor
push
or
jns
js
call
lods
pushf
or
lea
stos
das
sub
push
xchg
fs
jno
cmp
sub
es
add
adc
mov
ror
clc
push
dec
enter
adc
cmp
dec
pop
mov
mov
sarl
xor
das
add
or
pop
hlt
out
inc
nop
ficoml
dec
cwtl
xor
test
movsb
shrb
xchg
sbb
push
push
les
sbb
cmpsb
mov
fwait
jne
call
mov
jle
cmp
cmp
jnp
mov
cmc
aam
jns
push
sbb
inc
cmp
dec
and
push
aaa
fwait
xor
cmp
jg
sbb
jns
dec
lods
repnz
iret
popa
xor
repz
jmp
adc
xchg
mov
sub
aad
lds
pop
push
cli
mov
test
dec
sbb
cmpsl
cltd
sub
dec
movsb
aad
add
pop
jecxz
lcall
repnz
int3
pop
xor
cltd
movsl
lret
lret
adc
and
mov
adc
mov
sbbl
or
fcmovu
push
jno
cmp
add
out
mov
sub
jg
jno
cmpsb
subl
xor
out
shr
lods
lds
popa
cwtl
decb
addr16
adc
aaa
jl
jb
subl
int3
addr16
sub
dec
adc
neg
dec
je
pop
mov
push
cmp
pop
jl
mov
cmpsl
jnp
mov
mov
out
test
rorl
or
rorl
push
sub
in
mov
out
enter
adcl
push
xor
cltd
xchg
int
std
and
test
push
jne
xor
pop
push
xor
sub
dec
jl
jge
idiv
xor
pminsw
into
aad
jns
fisubrs
pusha
sbb
les
stos
push
adc
fcomip
push
or
imul
cmp
jp
in
cmp
dec
ret
int
addr16
push
or
push
in
add
iret
sbb
sbb
leave
inc
andb
out
adc
sarl
mov
ljmp
hlt
xor
lcall
mov
insl
jge
movsb
loopne
xchg
sahf
insl
fwait
sahf
jg
and
imul
jbe
fnstsw
cs
sbb
and
pop
loop
push
xor
pop
sub
sbb
jbe
and
cli
adc
pop
rcll
imul
xchg
or
inc
arpl
and
mov
xorb
pop
in
clc
repz
sbb
pop
hlt
lcall
add
jp
clc
call
rcrb
sarl
inc
cmpsl
jnp
das
enter
mov
pop
jp
insl
filds
sbbl
and
loop
mov
inc
cmp
sub
repz
lret
sbb
mov
mov
cmc
fisubrl
adc
rcrl
pop
push
shlb
dec
mov
cmp
addl
mov
ja
add
mov
mov
hlt
xor
iret
add
sub
cmp
ficoms
faddl
adc
and
mov
stc
jb
push
cs
mov
fs
jo,pn
js
scas
inc
xchg
push
mov
stos
xchg
xchg
into
fxch
das
add
ror
dec
orl
add
enter
int
arpl
in
fwait
xor
mov
in
xor
jns
inc
shll
loopne
stc
ret
jno
sub
loopne
add
ss
mov
in
mov
dec
loopne
jp
js
ret
mov
push
aas
in
mov
dec
outsl
mov
aas
sbb
sub
sub
lock
lcall
movsb
pop
je
and
loop
or
repnz
mov
pop
pop
iret
daa
mov
stos
fs
mov
mov
or
jae
popf
outsb
mov
stos
repz
push
into
inc
xchg
movsl
sbb
mov
add
cmp
push
mov
and
and
xchg
xchg
mov
sbb
movsl
stos
orl
lods
popa
movsb
fmul
cmp
daa
insl
cmp
mov
xchg
dec
xor
pop
aaa
rorb
mov
pop
aad
das
mov
cs
and
adc
popf
mov
sub
pop
dec
clc
shlb
xlat
fisttps
int3
adc
mov
sub
cmp
cld
xor
ja
inc
rcl
and
popa
arpl
ja
sub
repz
add
and
lods
xchg
jge
push
mov
aam
xchg
in
sub
push
std
ljmp
in
jp
xor
xlat
aas
jp
in
loopne
mov
fldl
mov
movsl
cmp
jb
js
or
nopl
mov
repz
ret
ds
xchg
mov
dec
xor
movsl
in
adc
adc
int
test
icebp
fsubl
mov
push
repnz
xchg
ss
loopne
sahf
rcll
push
daa
sub
or
pop
mov
test
cmp
jmp
mov
pop
int
ja
mov
int
xchg
ss
inc
jns
sub
mov
js
lock
sahf
aaa
push
inc
or
xor
sbbb
dec
xchg
or
cmove
dec
fwait
pop
sub
jl
popf
mov
les
or
adc
push
ficoml
aas
and
and
ss
cmpsb
jmp
cmp
fwait
imull
xor
iret
mov
xchg
mov
aaa
inc
mov
inc
lods
mov
xchg
mov
sub
and
pop
jmp
loope
loop
xchg
jbe
movw
mov
lock
push
popf
jns
lcall
adc
mov
iret
mov
xlat
iret
dec
xchg
movsl
mov
xor
adc
cmp
dec
jg
ror
data16
cmpsb
and
jmp
fmul
inc
mov
insb
mov
jle
test
push
clc
out
mov
mov
push
pop
les
dec
xor
xchg
nop
cmpsb
cmp
dec
out
cmpl
cmp
stos
fs
dec
push
loopne
inc
jle
movsb
rcll
dec
dec
aas
dec
mov
dec
fidivs
clc
nop
aad
dec
mov
mov
mov
jns
sbb
test
flds
je
js
mull
and
aaa
icebp
push
dec
sarb
icebp
adc
cwtl
sbb
out
insb
add
xchg
mov
inc
push
pop
fdiv
inc
mov
into
aad
sub
mov
pop
cld
jmp
mov
mov
das
mov
leave
call
push
out
jle
sbb
leave
ret
int3
xchg
sub
movsl
push
xor
xchg
and
jp
sub
icebp
pop
lods
in
in
ror
pushf
pop
divb
roll
outsl
gs
cmp
aaa
mov
cs
sahf
push
push
test
add
pop
push
repnz
test
enter
dec
in
movsb
pop
cmpb
test
pop
xchg
sub
mov
and
fidivs
sbb
ds
adc
push
ret
cmp
nop
aas
mov
aas
inc
in
rcl
mov
or
cmp
jbe
and
stos
pop
xchg
adc
adc
jmp
scas
inc
imul
repnz
mov
imul
mov
ror
adc
add
cwtl
mov
inc
out
jecxz
xor
je
mov
popa
or
dec
sbb
shr
fs
pop
out
mov
dec
inc
mov
dec
outsb
pusha
scas
adc
pop
inc
jnp
iret
cli
jle
jmp
shr
cmp
mov
pmulhw
in
cmp
inc
mov
stc
pushf
dec
popa
inc
dec
inc
dec
xchg
xchg
mov
jl
cli
sbb
loop
pop
rorb
out
fwait
jne
xor
out
lret
pop
xchg
mov
sar
pop
jle
pop
loopne
or
incb
inc
scas
daa
mov
pop
sbb
std
aas
pop
testb
inc
adc
xchg
lock
std
xor
xor
stc
xor
into
push
dec
mov
mov
imul
push
pop
hlt
fsub
ja
pop
imulb
push
push
xor
and
ds
imul
sub
push
push
cld
insb
or
and
xchg
add
std
pop
daa
imul
push
cmp
filds
mov
in
inc
xor
fidivl
insb
test
and
lar
out
mov
pop
mov
add
jmp
lret
fsubs
push
outsb
ja
mov
and
add
xchg
flds
sub
mov
stos
mov
ss
push
push
sub
pop
adc
loopne
sarl
lock
dec
inc
xor
mov
pop
rcll
mov
imul
movsb
xchg
sti
in
rcll
and
sub
adc
jge
mov
pop
jg
lret
mov
dec
sbb
inc
cs
push
xor
daa
and
cmp
sub
negb
pop
outsl
pop
cltd
lods
es
cvtps2pd
jecxz
int
test
ljmp
repnz
mov
pop
or
sub
sahf
jle
cmp
popf
std
lea
iret
loope
pminsw
mov
pusha
int3
in
xor
xchg
dec
jmp
pop
leave
ret
cmp
enter
in
in
imul
pop
rcrl
in
mov
les
sbb
int
mov
les
inc
sarb
out
dec
xchg
outsl
push
outsb
pop
adc
xchg
mov
push
jecxz
or
inc
adc
push
inc
xchg
add
push
mov
mov
popa
bound
adc
mov
cmp
icebp
mov
push
lds
stos
loop
ds
mov
bound
popf
cmpsl
mov
sub
insl
stos
outsb
add
jae
bound
mov
jae
push
pop
push
in
push
clc
in
or
aas
ja
aad
dec
push
dec
pop
pop
or
lock
lcall
and
push
mov
bound
xor
cmpsb
neg
or
lahf
incb
push
xchg
lods
mov
adc
call
add
pop
enter
jmp
or
pop
shll
int3
jecxz
jno
imul
push
mov
in
mov
test
inc
xchg
loope
or
lods
stos
loopne
frstor
pusha
lods
jmp
cld
push
in
xchg
mov
add
mov
xor
inc
je
das
and
pop
and
pushf
cmpsb
and
call
pop
mov
push
sub
fnstenv
add
push
sub
rcrl
or
mov
and
faddl
in
shlb
mov
jle
add
int
dec
xlat
xor
inc
dec
imull
xorl
or
loopne
cmp
dec
lret
mov
popa
jecxz
ja
popf
scas
or
jmp
mov
cmp
shll
mov
in
loopw
dec
inc
aas
mov
push
shl
mov
cmpsl
cmp
pusha
dec
call
incb
imul
mov
pop
iret
dec
xchg
sub
sbb
sub
cmp
stos
je
fdivrs
xchg
cwtl
or
inc
or
insl
pop
pop
cs
nop
in
insb
pop
add
ret
push
lret
pop
leave
fstpl
ficoms
pop
mov
fnstcw
clc
les
frstor
add
xor
mov
jle
and
jmp
sarb
or
push
xchg
sub
mov
jno
and
pop
push
fbld
movsl
jle
lea
hlt
ret
dec
aad
jmp
insl
xchg
fs
cli
cmc
inc
mov
push
xchg
mov
mov
mov
or
imul
mov
popa
xor
fisubl
sub
xchg
cmp
push
cmp
setp
fsubrl
imul
fsubs
jo
pusha
mov
or
lret
pop
add
lcall
lea
cwtl
push
inc
mov
pop
and
mov
sub
pop
lret
mov
dec
add
call
out
cmpb
dec
int3
mov
push
std
adc
add
imul
fcmovu
add
sub
push
aam
sub
mov
sbb
faddp
mov
rcrb
jle
pop
fs
pop
dec
inc
vmread
add
dec
jl
dec
lods
ljmp
gs
loope
test
pushf
pop
cmp
data16
pop
fstpt
enter
ds
das
pop
jl
nop
jo
popf
push
out
stos
fisttpll
insb
iret
or
out
fstpt
pop
out
lds
sub
mov
mov
jge
xor
mov
stos
inc
sbb
test
mov
and
ficoml
pusha
lods
divb
and
jg
nop
imul
ja
mov
jne
or
inc
fucomip
fsubrp
jge
movsb
cmp
call
outsl
cmpsb
jnp
mov
cmp
iret
push
mov
stc
push
bound
sbb
add
jne
pop
inc
movsb
es
and
lock
mov
jno
dec
jmp
add
jl
sub
push
dec
jae
adc
enter
sbb
xchg
or
pop
outsb
mov
adc
jb
in
pop
add
fldenv
mov
mov
mov
incb
or
xchg
mov
push
lds
xchg
inc
in
cmp
aaa
xchg
out
and
sub
orb
push
push
int3
mov
divb
xchg
sub
and
and
fisttps
fbstp
and
iret
repz
lea
sbb
adc
mov
out
hlt
sub
push
repz
adc
jnp
cmp
dec
cmpsb
test
xchg
pop
leave
repz
outsl
and
cmpsl
lods
pop
fdivs
in
xor
adc
movsl
sbb
mov
jns
push
add
xchg
gs
adc
fisttpl
and
or
cs
das
push
iret
outsb
out
or
jb
push
mov
ljmp
xchg
push
cltd
inc
or
xor
ljmp
bound
jg
ds
int3
lods
ljmp
jg
imul
mov
mov
lret
movsb
jl
xchg
xor
pop
lock
sbb
int
iret
imul
adc
adcl
lods
sub
or
xor
cmovne
pop
mov
jl
push
ja
sahf
mov
test
mov
mov
mov
or
cmpl
inc
popf
mov
fdivs
scas
in
bound
mov
sub
push
pop
xchg
ret
stos
cmpsb
scas
dec
mov
cli
xor
xor
push
xchg
xchg
or
push
rcr
mov
pop
mov
fimull
das
push
scas
add
scas
shl
ret
cli
xchg
adc
dec
lods
mov
subl
or
add
lds
adc
out
lret
mov
aad
inc
cs
mov
mov
pop
mov
mov
push
aaa
pop
and
or
push
jle
pmuludq
add
je
cltd
xor
add
xor
and
fldenv
fstl
repnz
dec
pop
adc
cmp
mov
jecxz
add
mov
jno
imul
lahf
xchg
pop
jecxz
pop
mov
xchg
add
sbb
jae
mov
insl
dec
jnp
inc
leave
inc
mov
push
bound
insb
aad
ss
cmp
je
inc
pop
clc
xorl
push
or
lret
cltd
daa
xchg
and
lret
insl
jp
inc
stos
aas
icebp
mov
xchg
add
fadds
add
cmp
movl
testb
insl
mov
jge
cmp
mov
out
xor
pop
iret
adc
cmpsl
jbe
js
incl
test
test
sub
adc
dec
fucomip
lods
mov
mov
roll
sbb
bound
out
sub
js
push
mov
jns
or
lods
mov
mov
pop
and
cmp
jecxz
pushf
jle
push
out
fnstenv
cwtl
jb
aam
aas
sbb
ret
push
lret
push
cli
mov
roll
loope
cli
jo
mov
adc
push
jecxz
les
mov
mov
nop
push
pop
mov
push
xor
pop
pop
sbb
loopne
cmpsb
mov
push
pop
lds
sbb
add
dec
loope
inc
sub
ss
xorb
rorb
subl
fildl
pop
push
pop
dec
mov
flds
stos
pop
ja
push
pop
cmp
lahf
adc
je
fwait
mov
cmp
or
sbb
pop
addr16
adc
cmp
pop
mov
pop
dec
cltd
test
mov
cmp
and
dec
and
adc
mov
aad
mov
cli
sbb
out
daa
insb
cltd
ficompl
pop
and
mov
movsb
mov
enter
daa
ja
rclw
mov
or
out
push
test
pop
xchg
xor
popf
iret
nop
repz
or
in
je
out
outsb
and
dec
sub
clc
adc
jmp
push
or
test
and
lahf
jle
jno
popf
arpl
fmulp
sahf
lret
inc
test
pop
push
jge
hlt
push
inc
push
push
testl
sub
add
out
and
movsl
ror
dec
mov
add
mov
and
enter
incb
xchg
ds
push
jno
pop
sti
sahf
lock
xchg
jecxz
call
sub
lret
push
sub
inc
cld
dec
sub
insb
push
sub
or
test
inc
out
mov
mov
push
inc
mov
ror
cmp
xor
pushf
or
cmp
or
jge
push
push
push
sbb
sbb
xchg
movsl
jnp
flds
xchg
inc
xchg
dec
mov
jmp
push
lods
nop
pop
bound
push
xor
mov
xlat
sahf
test
adc
std
or
sbb
and
rcrl
jnp
adc
mov
and
aas
in
jmp
pop
fsubrs
jmp
mov
lods
mov
cmp
icebp
mov
and
shrb
je
mov
xchg
xchg
sbb
lods
xchg
iret
xor
loop
das
pusha
mov
push
jecxz
mov
test
repz
cmpb
addr16
mov
popf
adc
out
sub
mov
xchg
fisttps
push
mov
inc
or
fs
dec
or
inc
mov
fdivs
into
ja
jnp
mov
push
scas
jno
pop
flds
sub
xor
cli
xor
add
mov
scas
imul
mov
adc
shrb
cmp
dec
int3
dec
call
xor
outsb
aad
out
cmpsb
xorb
and
jno
call
fmul
xor
pop
add
insl
and
cmp
dec
clc
mov
inc
lock
stos
flds
mov
xor
add
adc
pop
mov
jb
mov
int3
mov
cmp
sbb
dec
add
sub
cmpps
inc
mov
xor
mov
mov
add
rcrb
push
xlat
mov
in
mov
insl
mov
out
lods
les
mov
in
inc
je
insl
add
js
cmc
icebp
lfs
pop
push
out
adc
idiv
cmp
shrl
fs
sub
jb
lret
sbb
push
add
cmp
sub
mov
das
pusha
sahf
das
hlt
call
loope
jge
test
xchg
enter
xor
cmpsl
rcl
push
mov
adc
jno
loopne
pop
insb
jecxz
mov
jge
sub
pusha
pop
pop
xchg
xor
mov
scas
push
out
push
mov
push
clc
xchg
mov
icebp
ljmp
jp
sti
bound
xchg
mov
arpl
xor
mov
ljmp
cmp
mov
out
cmp
insl
fildll
lret
xchg
imul
cmp
movsl
add
cmp
bound
adc
xchg
roll
into
ja
stc
aam
add
inc
fnstcw
test
xchg
push
adcb
xor
repz
adc
jnp
push
ja
or
push
jbe
mov
xchg
xor
dec
sub
les
jle
add
xchg
or
xchg
xor
addr16
lcall
movsb
out
in
test
sbb
sti
repz
sarb
add
push
inc
int
es
xchg
or
xor
je
hlt
xchg
les
jg
add
mov
in
adc
push
xorb
mov
mov
mov
orl
mov
mov
push
int3
sti
inc
sub
pop
xor
aam
fsub
nop
mov
movsl
fstps
add
fbstp
loop
sbb
divl
cmc
and
int
cmpsb
push
mov
push
dec
push
add
sarl
sti
mov
iret
jbe
fcoms
lahf
cmp
jae
call
push
xchg
cmp
mov
movsb
xchg
shll
push
and
push
and
mov
mov
push
lret
ret
or
mov
pop
test
aam
or
mov
and
or
cmp
pusha
rcl
pop
mov
arpl
push
pop
xor
push
pop
outsb
and
adc
pop
cmp
dec
add
mov
xchg
mov
arpl
push
shlb
out
jge
call
push
xchg
push
pop
sbb
and
pop
int3
jo
inc
aam
enter
mov
push
loopne
rcll
call
sbb
jae
xchg
mov
cmpsb
cltd
jmp
lods
pop
in
and
mov
add
ficoms
push
loop
sahf
or
cmp
push
je
clc
xchg
dec
add
pop
fidivs
fists
xchg
dec
cmp
sub
bound
cmp
dec
stos
jmp
sbb
scas
cltd
mov
push
cltd
sub
pop
test
and
inc
mov
sub
stc
lcall
jae
cmp
lcall
stos
inc
pop
std
imul
adc
xrelease
xchg
sub
inc
sbb
les
pop
mov
jae
into
sar
push
test
adc
pop
ret
loope
mov
lods
inc
test
sub
push
and
or
or
js
mov
xor
mov
inc
add
or
mov
inc
or
loopne
cmp
mov
push
xchg
mov
xor
lods
imul
insb
xor
je
xchg
add
aad
inc
jle
pusha
or
outsl
dec
mov
ja
out
add
sbbl
movsl
xor
or
jae
mov
int3
xor
mov
inc
imulb
push
jge
rcrb
test
add
frstor
addr16
movsl
in
cmp
and
dec
push
jb
outsl
or
rdmsr
pop
push
mov
andb
jl
cmp
push
mov
scas
rorb
sub
mov
xchg
orb
xchg
notl
insb
js
rolb
sti
fnstenv
fstpl
aaa
and
or
mov
fistpll
add
inc
subb
je
into
shrl
mov
in
jle
dec
mov
jge
je
mov
mov
jge
fs
push
pop
mov
ja
sbb
add
leave
out
sbb
call
bound
iret
sbb
dec
data16
test
call
mov
popa
adc
subl
movsl
push
mov
out
shl
addr16
add
mov
lods
sub
push
sbb
sub
mov
adc
fs
inc
xor
cmp
pop
and
lods
into
pop
pop
stos
or
ljmp
mov
adc
in
cmp
sbb
idivl
pop
adc
mov
or
addr16
jbe
mov
imul
mull
sub
loop
add
pop
push
pop
in
sahf
mov
add
pop
jo
inc
pop
jno
push
mov
std
mov
bound
lods
push
push
in
jecxz
mov
mov
imull
push
shr
popf
cmp
nop
push
shll
leave
push
sub
jb
dec
inc
mov
dec
mov
clc
push
cwtl
cmp
dec
lods
aas
or
mov
pushf
mov
push
cmp
pop
jmp
xor
push
mov
shr
fnstsw
or
enter
hlt
adc
pcmpgtd
pop
xchg
and
roll
nop
adc
pop
mov
jle
sub
mov
or
xchg
xor
adc
xchg
xor
add
frstor
mov
dec
or
xchg
dec
pop
pusha
mov
movsl
jno
testl
adc
add
jl
es
jno
ret
je
aas
or
xchg
xchg
lds
mov
ds
push
mov
in
aad
mov
movsb
xlat
dec
inc
xor
in
xlat
or
stc
sub
movsl
enter
sbb
push
inc
sub
nop
add
aaa
sub
sbb
je
cmp
jns
and
xchg
repz
jbe
in
ljmp
adc
mov
daa
cmp
insl
test
stos
xor
or
sbb
subb
xchg
push
xor
ljmp
pushf
fisubs
scas
push
push
aaa
leave
cltd
pop
xorb
ficompl
cmp
out
add
out
bound
cwtl
sbb
adc
mov
lret
inc
add
mov
fwait
and
mov
subl
outsb
leave
sub
addl
cwtl
push
lahf
or
and
ljmp
frstor
cmp
cli
in
sbb
mov
mov
sbb
data16
sbb
jmp
adc
jecxz
lds
xchg
imul
add
add
sbb
popf
test
std
sub
jb
or
movsb
sbb
cmp
rol
sub
lods
mov
dec
repnz
inc
push
pop
clc
pop
inc
cmp
push
pushf
push
mov
les
pop
cmp
pop
aas
jl
push
scas
les
neg
popf
or
mov
sub
test
fcomip
aas
fwait
xchg
mov
xchg
and
aam
nop
xchg
inc
loop
mov
or
xchg
lcall
dec
popa
push
pop
dec
xor
inc
inc
jl
xor
imul
fcom
pop
mov
sub
pop
sub
or
xorb
xlat
fldcw
je
out
aad
cmpsl
dec
mov
scas
flds
mov
gs
std
or
inc
push
lahf
aaa
jns
nop
pop
mov
shr
jmp
hlt
addb
push
in
js
cmp
lods
lock
addr16
push
test
sub
mov
loop
mov
adc
loope
adc
dec
shrl
pop
xor
add
lret
jp
movsb
int3
xor
fisubrl
nop
inc
out
mov
or
test
movsl
movntq
inc
sbb
xchg
inc
movsb
lods
adc
xchg
ss
jbe
xor
bound
push
je
push
sub
and
mov
inc
fildl
icebp
aaa
mov
or
out
or
mov
and
sbb
gs
movsl
or
aad
int
or
or
fdivr
stos
rcr
xlat
ret
lods
pop
mov
xorl
mov
inc
xor
lahf
mov
xor
sahf
sbb
outsl
leave
pushf
adc
cmpsl
pushf
sarl
test
call
jge
mov
mov
xchg
jmp
je
fidivl
shr
cmp
or
lock
and
bound
test
xchg
mov
mov
push
sti
mov
lds
cli
jbe
lds
nop
jmp
xchg
out
mov
insb
hlt
repz
sub
dec
or
mov
and
xor
je
cmp
push
iret
mov
inc
inc
xchg
pop
sarb
sbb
mov
adc
sbb
sbb
andl
insb
or
mov
je
divb
aas
inc
cld
clc
xchg
inc
and
aam
mov
sbb
sub
and
cmp
pushf
add
rcll
jg
pop
sbb
repnz
cmp
rorl
test
mov
mov
leave
xor
inc
add
mov
ds
es
out
xlat
jg
dec
pop
aas
mov
icebp
gs
inc
inc
mov
dec
pop
or
pop
add
mov
or
and
out
push
sti
es
fucomi
jae
jecxz
fsts
stos
out
cmp
aas
or
lods
mov
jmp
add
push
std
loopne
icebp
test
ret
mov
pop
sbb
stos
mov
push
nop
jne
push
cmp
test
dec
leave
sbb
adc
jbe
push
xchg
xor
mov
jle
je
scas
xchg
dec
push
outsb
inc
push
ss
sub
mov
xchg
negb
add
out
jns
xchg
repnz
hlt
mov
out
and
jl
sarl
mov
jb
imul
sbb
mov
ss
jno
sbbl
dec
fwait
dec
inc
sbb
mov
push
bound
inc
dec
mov
sbb
cmp
sbb
aad
sub
cmp
shll
call
pop
popf
aam
push
mov
pop
xlat
fwait
pop
mov
testb
sbbb
arpl
gs
jnp
rcrl
fwait
add
mov
jbe
outsl
adc
jb
out
sbb
jns
cmp
sbb
xor
push
mov
mov
aam
bound
inc
add
pop
inc
push
and
fcompl
test
lahf
ret
sub
fsubrs
je
inc
notl
cmp
inc
xor
pop
iret
push
push
cwtl
and
inc
and
pop
or
into
xchg
repz
and
mov
dec
jbe
push
xor
rorb
xor
mov
cmp
clc
ret
and
pop
sub
jp
sbb
jge
sub
cmc
jo
push
xchg
push
out
jnp
pop
dec
mov
popf
sbb
insb
fwait
push
inc
ja
mov
mov
xchg
nop
mov
shrl
pop
pop
pop
test
add
mov
pop
mov
mov
push
shrb
imull
push
cltd
cwtl
inc
addr16
nop
xchg
fs
in
scas
lret
mov
imul
leave
test
and
jmp
retw
push
out
or
cmp
bound
addr16
push
in
sbb
cmp
or
xlat
repnz
es
cmpb
mov
out
sbb
rcrl
into
jl
in
inc
cmp
ljmp
les
and
sub
lea
and
mov
dec
or
xorl
test
mov
ret
pushf
jmp
add
test
dec
xor
mov
adc
jmp
xchg
mov
repnz
repnz
mov
gs
insl
mov
or
fwait
ja
xchg
sbb
cwtl
std
clc
outsb
inc
popa
sbb
pushf
or
cmp
or
add
dec
jecxz
push
into
addr16
mov
mov
lock
out
or
jb
std
sub
xchg
divb
push
mov
in
adc
movsb
vmwrite
xor
dec
mov
pop
jbe
mov
aas
lea
and
dec
jo
mov
lods
xlat
mov
mov
lahf
add
sbb
pusha
add
sbb
int3
or
cmp
xor
cwtl
repnz
pop
sahf
scas
xor
mov
pop
xlat
cmc
jg
loope
inc
pop
pop
frstor
add
mov
std
das
jecxz
push
sbb
faddl
lret
int3
cmp
mov
movsl
push
mov
mov
jle
rol
add
mov
scas
cmp
nop
into
push
sub
push
mov
in
rcrl
cmp
test
mov
xor
mov
addl
push
std
or
arpl
pop
and
idiv
jbe
xchg
ljmp
nop
inc
mov
mov
popa
mov
push
out
out
mov
mov
inc
push
lea
cli
mov
dec
repz
sub
jo
test
js
stos
mov
outsl
outsl
loopne
adc
in
insl
jmp
cmovae
cltd
fucomp
mov
adc
mov
adc
adc
and
test
dec
xchg
test
push
fidivrl
push
xor
out
cmp
fwait
ret
cmp
mov
je
lcall
cmp
cmp
mov
add
rcll
aad
add
sahf
mov
xchg
jge
or
fs
lcall
out
and
sbb
mov
mov
push
pop
cmpsl
fndisi(8087
gs
lahf
mov
clc
outsb
rcll
mov
sub
mov
sub
dec
jns
mov
sahf
lds
mov
enter
test
jl
mov
or
sbb
xchg
repnz
pop
fbld
jg
push
push
xchg
mov
imul
push
and
add
movsl
or
pop
popl
cmp
sub
bound
add
pop
cmp
or
and
fbld
lret
jnp
movsl
pop
jmp
or
push
sub
cwtl
jne
mov
bound
mov
inc
imul
fwait
xchg
xor
jg
repz
push
push
movl
jg
hlt
aam
addr16
test
pusha
mov
adcb
xor
sbb
jmp
mov
ljmp
ja
mov
notb
aam
inc
xchg
jecxz
scas
add
sbb
dec
into
loopne
testl
in
jno
mov
cld
imul
jmp
pop
push
xorl
mov
roll
test
cmp
incl
or
adc
xchg
mov
fsub
ljmp
stos
aam
xchg
add
cmpl
lods
jbe
notb
stos
out
mov
xchg
ret
xchg
les
xchg
or
jmp
mov
pusha
push
push
pop
inc
dec
xorb
push
outsb
pop
and
test
xor
pop
jo
std
mov
mov
adc
cs
lods
std
sbb
hlt
xor
fists
out
jmp
jmp
xchg
popa
subb
lret
cld
cs
dec
push
dec
and
ljmp
xchg
adc
pop
lret
xchg
in
sahf
stc
scas
pushf
sub
jg
pusha
loope
imul
pushf
scas
loopne
out
sub
cli
push
mov
mov
lods
sti
push
enter
xchg
nop
dec
add
jb
pop
and
insl
leave
popf
add
hlt
repnz
aad
push
mov
xchg
movsb
inc
in
sti
xchg
popf
push
out
pushf
mov
fwait
arpl
push
idivl
cmp
xor
mov
cmp
inc
mov
mov
pushf
fsubrl
dec
pop
sub
xchg
xchg
data16
cmp
pushf
push
add
push
mov
or
scas
testl
jo
ret
pop
hlt
cmp
shlb
push
cwtl
mov
cmp
xchg
ljmp
pop
xchg
mov
pop
pop
fnsave
sti
cmp
cmp
and
mov
cmp
sub
xchg
fimull
sbb
jae
cltd
loop
orl
sub
mov
sbb
push
lret
dec
stos
mov
sbb
ret
loope
mov
xor
xchg
lcall
mov
mov
fwait
push
lock
cmpsb
xchg
jecxz
jb
and
push
pushf
or
cmp
push
inc
sarb
adc
jns
dec
aas
fwait
aam
mov
inc
xchg
xlat
xchg
hlt
loop
xor
dec
test
mov
icebp
mov
call
mov
negl
in
mov
jbe
inc
add
cs
cli
xchg
jecxz
or
cmp
cwtl
mov
sub
adc
push
add
push
outsb
mov
sbb
dec
scas
inc
mov
daa
aas
icebp
int3
adc
push
jp
cmpsl
sahf
jae
movsl
clc
data16
ret
je
movsl
ret
ret
or
cltd
je
sub
mov
adc
cmp
pop
mov
pusha
ljmp
int
stc
sub
orb
jb
je
sbb
ljmp
adc
jp
fiaddl
movsl
mov
mov
sub
and
sbb
sti
mov
pop
cmc
cmp
insl
in
lods
cld
sbb
bound
xchg
sub
xor
jnp
mov
xchg
les
ret
scas
into
fsts
lret
push
adc
mov
mov
pop
movsb
test
icebp
rclb
push
xchg
vpmacssdd
sbb
sahf
outsl
aad
into
jne
pop
jge
add
mov
mov
data16
arpl
movsl
aaa
fsubr
das
rcrl
cld
mov
jge
lcall
push
adc
cmp
adc
addr16
and
sub
in
mulb
movsb
cmc
repnz
imul
mov
pop
jbe,pn
pop
mov
loopne
lock
xchg
push
stos
fistps
test
lds
lgdtl
loope
mov
and
and
sub
xor
mov
in
xchg
int
xchg
pop
mov
or
add
xor
shll
jbe
or
adcl
cmpsb
sub
out
mov
insl
iret
lret
fstl
les
xchg
lods
cmp
ljmp
andb
jb
cli
lds
pop
mov
lods
sbb
les
test
fs
xor
sbb
lcall
int
aas
adcb
dec
sysexit
aas
inc
sub
xor
test
scas
sbb
dec
xchg
inc
pop
mov
mov
mov
mov
and
popl
sub
mov
xorb
push
ja
cmpsl
idivl
stos
lds
mov
loop
dec
adc
adc
sub
cmp
inc
inc
cmc
int
aas
popa
or
cltd
sahf
test
out
gs
mov
xchg
int
inc
sbb
jp
jae
sbb
xor
inc
mov
cli
pop
mov
xchg
cmp
adc
fimull
scas
fsubs
dec
mov
pusha
and
pop
cmp
push
fisubrl
pop
xor
icebp
jg
mov
mov
push
sub
push
insl
pop
cmpsl
nop
mov
test
or
push
push
sub
rolb
xor
fisttpl
shlb
jle
sbb
mov
out
pop
dec
test
mov
stos
fbstp
xlat
adc
xchg
scas
mov
mov
jnp
add
mov
jmp
int3
jl
add
push
pop
popf
test
fldenv
cmpsl
loopne
dec
nop
insb
hlt
aaa
test
push
or
xor
test
inc
add
mov
sub
int
jnp
fstpl
or
mov
adc
aad
bsr
jns
mov
movsb
pop
pusha
hlt
xchg
test
inc
arpl
xor
rcrl
insl
arpl
or
jns
inc
xchg
xor
scas
ja
mov
mov
rorl
sbb
add
test
sub
je
orl
dec
lret
loope
xor
in
jb
test
ja
ja
cmp
push
inc
cmc
mov
inc
pop
repnz
nop
aaa
add
in
dec
mov
lcall
out
repnz
push
or
shlb
int3
cmp
mov
jo
addb
push
inc
ret
sub
test
mov
aam
sub
sub
xchg
inc
out
cli
adc
pushf
rclb
ret
das
xchg
je
and
icebp
pop
mov
and
cmp
fists
cmp
sbb
jmp
add
addl
add
inc
stos
mov
mov
jp
xchg
jecxz
cmp
adc
inc
call
xchg
push
int3
adc
mov
dec
pop
sub
arpl
and
lock
icebp
inc
jnp
testb
xlat
test
inc
in
mov
adc
movsl
movsb
adc
xlat
add
test
les
push
shll
inc
adc
add
and
mov
push
mov
pop
addl
andb
jne
lcall
xor
xchg
das
pop
jle
xchg
xchg
fistpl
data16
sbbb
xchg
pop
insl
js
xchg
call
int
loopne
adc
shrb
insb
shll
mov
mov
inc
cltd
xlat
enter
xor
rorl
fisttps
fsubp
fcmovb
xchg
stos
popa
mov
sub
push
ret
xchg
add
and
and
or
stos
aad
mov
shrb
stos
dec
addl
pop
pop
xchg
bnd
mov
inc
lret
bound
stc
or
sbb
jno
xor
or
adc
mov
lods
dec
sbb
add
sbb
test
mov
mov
add
mov
xor
adcb
jmp
es
jno
sub
roll
out
cwtl
inc
int3
es
ret
ljmp
outsl
push
jno
in
cmpsb
push
mov
add
pusha
or
jne
shlb
popa
imul
testb
fldl
repz
adc
test
enter
shrl
xchg
sub
xchg
aas
ret
repnz
fistl
enter
push
das
xchg
jge
lock
adc
inc
stos
xor
imul
scas
fdivs
lret
xlat
sub
cli
flds
dec
ja
cmp
cmp
xchg
pop
mov
push
stc
cmc
mov
insb
add
fisttps
scas
and
add
mov
rcr
or
lea
data16
scas
iret
cmc
xchg
sarb
int3
stos
dec
fcomip
jmp
cmp
push
inc
int3
int
int
iret
adc
sbb
cltd
jge
lods
mov
adc
jne
jle
inc
sub
lea
lret
pop
sub
loop
ds
inc
popa
aad
mov
std
mov
in
lret
sbb
cmp
rcrb
std
xchg
stos
pop
xchg
mov
xchg
xor
jne
pop
push
pusha
mov
mov
xor
jb
add
loope
sbb
add
stos
mov
lods
push
pop
popa
pop
into
out
mov
sub
rclb
add
loopne
xchg
subl
xchg
fistps
inc
rorb
cmp
ja
icebp
jmp
sbb
fstl
in
add
loopne
inc
negb
dec
jecxz
rclb
inc
pop
inc
jnp
push
imul
adc
mov
out
dec
add
push
jb
mov
fsub
sbb
adc
test
push
sbbb
clc
arpl
pop
adc
push
xchg
mov
cmp
push
lcall
pop
add
enter
mov
lds
stc
xorb
mov
mov
lret
xchg
jns
push
adc
inc
fistpl
jno
pushf
sbb
xchg
adc
adc
dec
addr16
dec
mov
idivl
xchg
mov
enter
dec
mov
in
arpl
cs
push
out
insb
cmc
or
stc
add
aam
pop
sarb
ljmp
hlt
cmp
lock
push
mov
xchg
dec
xchg
push
dec
ljmp
jno
movsb
adc
test
pushf
sar
pop
inc
stc
shl
rcl
test
sti
cli
outsl
subb
fidivs
mov
sub
lahf
inc
cmpsl
jle
js,pn
xchg
imul
movsl
stc
sbb
es
jns
pop
push
or
lcall
cmpl
xchg
ret
adc
push
ja
mov
mov
mov
push
xchg
inc
rorl
fistpll
pop
pop
roll
int3
bound
rorb
and
int3
hlt
jo
and
rol
mov
cmpl
jb
setb
jns
call
inc
outsb
popa
fxch
dec
loop
ret
ror
mov
rolb
mov
dec
push
repz
cmp
xchg
imul
pop
mov
ja
movsl
out
cld
movsl
repnz
mov
incl
out
arpl
clc
xchg
sar
test
imul
jg
cmp
fwait
push
les
and
roll
add
mov
push
jle
sbb
loope
popf
and
lcall
test
stos
xor
fsubrs
dec
ret
mov
mov
sub
cmp
hlt
ja
dec
or
mov
iret
add
fcoms
movsl
mov
dec
dec
out
movsb
sbb
sub
stos
and
adc
test
icebp
out
insl
push
or
cld
in
push
sub
andl
push
int
xchg
adc
and
mov
pop
out
test
and
fnstenv
and
lret
pop
jns
sub
mov
mov
icebp
daa
add
push
jne
push
lock
dec
push
inc
stos
pop
sbb
lcall
cmp
mov
mov
loopne
pop
add
add
std
dec
add
stc
dec
or
test
add
mov
mov
mov
add
xchg
imul
ficoml
out
push
mov
cs
in
out
adc
pop
in
cli
push
inc
aaa
cmpsl
push
fadds
pop
lods
or
lret
loope
mov
jae
push
and
arpl
adc
scas
test
sarl
mov
jns
push
cmpsb
jbe
push
arpl
nop
leave
mov
mov
sbb
adc
notb
sbb
dec
imul
mov
mov
jmp
sub
int
ljmp
or
push
mov
sbb
and
add
add
popf
ret
out
rclb
decl
fstps
push
insb
fwait
loop
add
cmpsb
addl
je
pop
sbb
subb
shrb
and
sarb
push
sqrtps
mov
mov
push
test
add
push
jge
mov
or
ret
aaa
and
test
out
xor
arpl
scas
into
sbb
je
inc
cmp
jge
movsl
xchg
push
dec
mov
pop
cltd
dec
dec
loop
dec
inc
or
enter
mov
in
icebp
cmp
inc
std
jnp
sub
cmp
fcmovu
stos
lcall
repz
mov
and
dec
mov
inc
clc
add
jo
ss
mulb
mov
sahf
xchg
shll
scas
mov
xchg
xor
mov
inc
cmp
and
dec
out
cmpsl
sbb
mov
inc
fxch
movsb
scas
outsb
outsb
sbb
inc
xor
dec
cld
push
and
sbb
cli
cmp
mov
push
sbb
mov
test
pop
dec
and
mov
jnp
or
add
into
cmp
call
test
out
lods
push
inc
mov
test
cld
cwtl
jns
mov
loop
daa
xchg
jae
cmpsb
inc
cltd
xchg
lods
addl
mov
mov
in
jae
xchg
or
test
loope
push
mov
lcall
add
sub
aam
into
cmp
jo
andl
cmp
mov
addr16
dec
cmp
sub
fwait
and
fiaddl
lea
ljmp
addr16
push
push
adc
imul
adc
xor
xchg
sbb
sar
mov
mov
mov
fwait
int
sahf
cs
cli
cmp
dec
mov
lods
cwtl
lods
mov
scas
lds
sub
pop
fldt
loop
sbb
fwait
dec
loop
mov
lret
inc
mov
mov
aas
filds
add
inc
inc
xchg
push
sub
ljmp
pushf
inc
dec
mov
jo
push
pop
xor
mov
sbb
ja
sahf
push
mov
cmc
mov
repnz
shll
repnz
sub
push
pop
push
or
loope
jns
mov
sub
push
fsub
stc
mov
out
es
bound
inc
in
push
and
dec
sub
test
fwait
or
mov
lcall
xorb
outsl
shl
xchg
lock
ret
mov
push
push
int
sbb
insb
pop
mov
nop
iret
adc
jb
decb
jecxz
ljmp
cmpsl
ficompl
ficomps
sub
inc
test
and
add
ret
scas
mov
int3
insl
mov
lea
pop
dec
test
jo
jns
inc
imul
mov
cli
std
pop
adc
fwait
repz
pop
xchg
shll
adc
rorl
outsl
lcall
jnp
or
mov
icebp
inc
fsubrl
fcoms
sub
lret
xchg
push
test
ds
stc
pop
add
mov
ficoms
idivb
iret
inc
mov
out
push
cli
rol
sub
push
ret
jmp
pop
adc
ret
dec
test
test
repnz
pop
repz
fwait
cli
mov
cmp
in
mov
mov
cmp
pop
shr
or
dec
sahf
aad
in
outsl
sub
dec
mov
mov
je
mov
or
dec
mov
in
mov
pop
and
rcrl
scas
lret
mov
lock
sbb
scas
out
andl
std
fwait
adc
or
insb
cmpsl
scas
mov
add
pop
and
sbb
mov
mov
mov
pop
mov
out
ja
pop
push
sub
push
imul
shrb
insl
jp
xor
jno
sahf
icebp
test
xor
clc
aad
loope
push
shll
cwtl
in
sbb
xor
pop
xlat
mov
pop
in
nop
push
push
shrl
faddl
dec
jbe
dec
orl
push
lods
or
insb
jmp
cmp
lcall
arpl
push
out
and
shll
mov
jle
pop
add
jno
icebp
pop
pop
shll
dec
push
or
js
xchg
fwait
movsl
pop
call
sub
and
fisttps
shll
jns
cwtl
pop
fisubs
scas
out
mov
inc
pop
and
notb
sub
add
inc
pop
xchg
mov
data16
icebp
push
call
mov
popf
pushl
shlb
arpl
sbb
inc
xor
xchg
lods
rcrl
and
sbb
sti
out
or
jo
ds
std
loop
cld
loop
and
mov
xor
popf
xchg
cmp
mulb
add
push
lahf
dec
popf
filds
jne
or
fisubrs
mov
push
pop
mov
daa
push
xchg
insl
mov
js
push
xchg
xor
mov
pop
movsl
idivl
popa
xchg
dec
popf
sub
jecxz
mov
push
insb
pop
lods
pop
xor
push
sub
dec
push
and
pop
das
sub
mov
pop
das
mov
out
pushl
pop
jae
lock
call
scas
adc
push
push
cmp
std
cmp
js
sub
pop
in
sbb
test
jmp
idivl
sbb
xor
lcall
or
xor
call
xchg
and
xchg
xor
out
stc
dec
loope
lcall
add
insb
fldl
or
add
dec
jbe
mov
imul
nop
xor
pop
sarb
mov
inc
jge
or
cmp
fldl
mov
test
mov
jp
nop
cmpsl
es
ljmp
loopne
js
insb
mov
clc
pop
cmpsb
movb
xchg
jb
and
loop
inc
and
loop
int3
cmp
test
out
add
outsl
inc
les
andl
pusha
xor
sbbl
jo
jge
jb
sahf
adc
or
pop
add
je
mov
sbb
jg
sti
into
loopne
push
mov
movsb
mov
je
pop
cmp
xlat
lret
lret
sbb
mov
mov
clc
inc
push
push
inc
adc
cmp
xlat
mov
gs
mov
dec
cmp
shrb
lcall
cmp
shrl
in
or
lock
jno
sbb
mov
loop
cld
mov
fwait
out
jnp
fdivrl
mov
daa
jno
bound
inc
sahf
mov
clc
lcall
insb
adc
add
adc
push
adc
jl
pop
out
jmp
jmp
ds
xchg
cmpsl
je
popf
mov
cmpsl
jle
lret
lock
imul
xor
or
or
outsl
lcall
jmp
xchg
inc
push
les
aad
xor
fistps
iret
dec
xlat
jp
hlt
into
stos
push
xchg
sub
xchg
dec
enter
xor
or
inc
pop
or
push
jnp
in
xchg
stos
sbb
out
fdivs
mov
mov
jnp
mov
addr16
adc
jb
add
fcmove
fiadds
adc
mov
aas
add
fcoml
in
sbb
adc
or
sub
sub
shr
sbb
mov
cmpsl
pop
xchg
push
in
push
xchg
iret
jbe
xor
mov
sbb
dec
mov
jns
and
mov
shl
cmp
mov
repz
clc
movsl
hlt
outsl
test
aas
or
imul
xor
aas
pop
xlat
mov
lods
sub
cmp
fmuls
inc
fsubp
xor
imul
inc
jae
outsb
dec
cmp
jle
sbb
sbb
ds
pop
jge
add
jle,pn
les
mov
dec
adc
pop
subl
cmc
pop
daa
pop
hlt
scas
sub
inc
jle
mov
test
xchg
pcmpgtd
pop
test
nop
loop
or
fsub
adc
pop
mov
push
test
js
jo
stc
mov
add
jo
js
in
xchg
xor
sbbb
ret
out
pusha
or
jmp
cli
aaa
push
in
aam
sbb
pop
mov
repnz
ja
xorb
pusha
stos
test
out
xor
lcall
sub
or
jge
mov
pop
jecxz
aam
cld
cltd
fwait
call
outsb
push
and
add
and
sbb
sti
loop
jnp
xor
lcall
call
int
mov
sbb
pop
lret
subl
cmp
push
scas
testl
int3
inc
jg
stos
sbb
loopne
mov
push
mov
in
mov
fidivrl
int
cmpsl
pop
jg
xor
jge
std
fstps
addb
icebp
insb
add
rorb
stc
test
ss
js
pop
outsb
sub
mov
jno
jne
sub
fnsave
pop
sar
fmulp
add
orb
daa
push
push
mov
and
call
pslld
inc
push
mov
cltd
push
daa
dec
movsb
shll
mov
clc
scas
push
fadds
push
les
sub
lods
mov
and
mov
insl
ljmp
mov
fucomip
jae
negl
dec
inc
gs
xor
ret
push
pop
push
sub
test
cmpsl
mov
jl
sub
cmp
pusha
cmp
imulb
pop
and
push
pop
decb
jbe
jne
jnp
pop
decb
lock
mov
pop
jp
or
mov
aas
adc
or
push
cli
lret
inc
adc
inc
cwtl
mov
in
mulb
movsb
xchg
lds
popa
int
std
or
dec
cmpsl
pop
sub
lahf
cli
pop
and
mov
in
enter
call
mov
jle
jnp
call
cs
mov
cwtl
int
mov
add
pop
gs
bound
lret
fwait
out
add
aas
sbbl
adc
aad
push
movsb
inc
pop
xchg
sub
push
and
add
int
imul
jnp
cmp
jecxz
arpl
ds
dec
js
stos
pop
or
sbb
jbe
jne
clc
adc
test
xchg
dec
sbbb
cs
clc
fstpl
add
jnp
in
mov
add
aaa
lcall
movsl
pop
sbb
jmp
loopne
cmp
xor
xor
xchg
inc
test
inc
pop
imul
ds
add
mov
popa
rclb
sub
das
mov
xor
pop
pop
xchg
js
les
in
test
cmp
sbb
and
or
jle
mov
jne
les
repz
and
and
lret
and
mov
loope
shll
sub
jmp
cltd
test
mov
adc
sbb
dec
jns
insl
addr16
sub
fimull
cmp
push
sbb
mov
cmpb
and
and
and
jae
loop
mov
push
inc
mov
lret
rorl
pusha
ja
sbb
push
sub
jecxz
rcrl
mov
fstpt
rcr
ja
inc
lods
lods
sbbl
add
dec
dec
or
adc
idivl
cmp
xlat
push
add
and
sbb
lcall
pop
das
movsb
movsb
push
not
ret
in
mov
push
mov
clc
test
call
insl
add
test
sarl
shll
jo
insl
insb
stos
js
inc
fisttpll
int3
pusha
int3
in
mov
sbb
xchg
aad
cmc
dec
add
mov
ss
sarb
xor
add
mov
cld
or
sub
xchg
out
jno
dec
fs
add
int
fmulp
popa
inc
fwait
mov
sub
mov
scas
push
loop
jp
push
pusha
adc
repz
cli
dec
in
mov
ljmp
jno
push
shlb
mov
xorb
aam
mov
out
lods
outsb
adc
add
add
cld
dec
pop
sbb
shr
popf
out
aas
repnz
sbb
push
fisttpl
popf
mov
arpl
xor
out
xor
inc
jnp
mov
mov
je
call
lods
inc
out
lock
insb
mov
mov
leave
jnp
jge
in
and
shll
es
mov
dec
push
pop
rorb
stos
xchg
stc
jp
jmp
xor
mov
popf
cmp
cs
shlb
inc
xchg
cmp
sub
pusha
dec
dec
mov
cmp
inc
cmp
push
pop
xor
std
repnz
mov
jle
inc
adc
cli
in
pop
imul
cmp
js
xchg
xchg
addl
ljmp
xor
xor
add
sub
aam
mov
enter
testl
scas
or
in
bound
jg
ret
outsb
or
mov
xor
movsl
or
xchg
and
add
scas
adcb
jge
in
out
xchg
stc
adc
add
cmp
pop
mov
push
lahf
xchg
xor
adc
dec
cmp
call
stos
push
pop
jg
jns
dec
loopne
pop
hlt
cmp
pop
ljmp
stc
push
add
sub
addb
mov
mov
xchg
pop
mov
int
loop
imul
stos
jno
push
sbb
inc
xor
push
xor
xchg
add
xor
jp
aas
sub
repnz
jne
in
jge
cli
mov
std
es
cmc
pop
idivl
int
loope
sahf
in
lahf
dec
mov
fdivs
cmp
pop
sbb
xchg
jbe
into
pop
ret
imul
fndisi(8087
test
push
inc
mov
imul
cmpsl
cmc
inc
mov
fs
dec
mov
xchg
cmpsl
sub
ja
mov
in
loopne
and
mov
inc
jmp
xchg
xchg
xchg
mov
imul
xor
arpl
cmpsl
cmpsb
cmp
pop
jmp
test
cmp
jg
ljmp
jbe
aas
adc
inc
xchg
stos
push
mov
add
sub
pop
push
jo
jnp
lock
push
jns
std
test
inc
iret
ss
sub
push
xor
ret
and
mov
xchg
sbb
repz
enter
jge
pop
popa
push
pop
pop
in
sbb
jle
dec
jnp
mov
rorl
arpl
mov
push
fadds
cmp
fwait
out
es
jns
cmp
mov
mov
jno
mov
sahf
sbb
arpl
xor
repz
mov
and
hlt
inc
push
push
mov
sbb
mov
mov
not
fsqrt
orb
int3
xor
xchg
repnz
imul
inc
pop
lahf
loopne
rcll
stos
xchg
push
imul
add
xor
sbb
dec
fwait
in
stc
jbe
dec
cmp
and
test
push
cmp
int
adc
inc
push
je
adc
sbb
jmp
jp
outsb
imul
std
mov
out
lods
inc
xchg
hlt
lods
dec
sbb
or
fistps
fwait
dec
loop
push
arpl
scas
mov
pop
mov
mov
cmp
push
call
aaa
xor
xchg
shl
es
mov
andl
pop
sbb
mov
fprem
fisubrl
mov
mov
lds
jo
notb
scas
cwtl
test
aaa
das
test
fstpl
jno
adc
jg
inc
jb
in
std
mov
orb
popa
gs
clc
es
pusha
add
in
lea
dec
imul
lds
inc
add
xor
cmpl
mov
sub
cmpl
fiadds
xchg
fisubrs
push
insl
stos
mov
int3
jbe
push
pop
negb
add
out
dec
mov
inc
lret
sub
sbb
mov
mov
or
adc
sub
cmpl
xorb
cltd
adc
fstp
xlat
cmp
js
sub
add
jno
mov
xor
rcrb
sbb
movq
push
xor
mov
fadds
push
jno
cs
and
movsb
sbb
out
js
subl
ret
xor
std
sub
mov
xor
subb
std
lock
cmp
push
stos
popa
xchg
insl
lahf
or
pop
fwait
pop
rcrb
divb
js
fisttpl
outsb
mov
xor
jb
movb
push
dec
inc
inc
push
jl
icebp
lahf
imulb
dec
pop
pop
inc
mov
pop
gs
cmpsl
push
sub
push
cmpb
loopne
arpl
pusha
and
jg
cld
mov
addr16
xor
add
inc
cmp
adc
into
test
mov
jne
dec
or
aad
mov
or
fldl2t
xchg
out
dec
jne
shlb
pop
xor
in
add
cmp
js
mov
enter
jg
dec
fdivs
dec
mov
mov
mov
or
rolb
or
je
adc
xchg
adc
addl
xor
lods
xchg
ficomps
loopne
xchg
sub
adc
xlat
jl
stos
je
pop
loop
faddl
cmpsb
daa
std
scas
jg
xchg
mov
and
pop
mov
dec
fwait
sub
inc
jae
out
push
test
je
add
xor
or
or
cmp
inc
fwait
xchg
and
dec
loope
add
mov
jae
out
push
cmpsl
pushl
daa
movsl
cmp
fdivl
ret
cmp
sub
sub
cmp
push
adcb
clc
lea
sub
imul
add
test
add
cs
sub
subb
push
sbb
sub
movsb
outsl
jo
or
bound
andl
test
or
and
add
xlat
xchg
andl
ret
ss
not
ljmp
pop
outsl
stos
ja
std
mov
push
sub
pop
add
or
xor
xor
enter
andb
pop
pop
push
sub
out
pop
pop
cwtl
mov
addl
fldt
add
mov
in
push
popa
or
or
cmp
shll
push
ss
xchg
adc
jo
sbb
faddl
pop
loope
notb
sahf
fbld
pop
fsubrs
push
and
hlt
popf
das
and
lods
out
dec
ret
insb
mov
mov
adc
mov
or
sbb
lret
sti
lret
iret
push
xchg
lcall
std
xchg
ja
leave
pop
mov
pop
test
mov
outsb
je
fnstenv
dec
call
sbb
adc
add
dec
push
xchg
shlb
xchg
push
mov
xchg
dec
scas
lahf
leave
dec
xor
pop
adc
les
inc
call
mov
inc
xchg
clc
dec
sub
stos
cmp
push
push
xor
sbb
mov
enter
add
and
inc
dec
or
push
xor
clc
xor
add
and
roll
fists
mov
sarb
dec
pop
xchg
ljmp
cmp
rclb
adcl
pop
mov
ljmp
cltd
data16
out
dec
jp
daa
test
cmp
mov
loopne
push
sbb
pop
fidivrl
dec
ret
mov
inc
dec
cli
fisttpll
fs
push
fwait
pop
push
push
leave
stos
imul
into
movsb
mov
movsb
mov
xor
jo
sbb
jo
js
outsb
inc
xor
mov
and
pop
sub
jecxz
js
inc
pop
ret
lret
xchg
js
imul
jae
test
sbb
pop
aas
in
cmpsl
out
add
repz
scas
imul
xchg
and
mov
fldenv
jbe
loop
sub
and
xchg
fdivrs
into
cmpsb
cmp
push
mull
dec
adc
cmpsl
lret
or
movsb
jle
addr16
aas
and
and
and
cmp
pop
fs
int3
arpl
test
jg
fsts
fs
into
push
ret
rolb
cmp
and
lret
fcmovbe
xchg
insb
lds
cwtl
dec
jecxz
cs
add
mov
mov
jne
sub
jecxz
dec
cmp
scas
stos
loop
test
xor
pushf
jmp
fcomp
mov
add
xchg
jb
mov
ret
mov
test
xchg
cmp
dec
mov
xorb
fiadds
lret
xor
daa
dec
clc
addb
lea
incb
loope
inc
mov
inc
dec
inc
and
ret
mov
sbb
xor
outsb
mov
outsb
cmp
jg
sbb
scas
mov
add
dec
sbb
mov
push
sbb
icebp
ficoms
outsb
mov
add
dec
arpl
popf
mov
lea
xlat
sub
adc
cwtl
les
hlt
test
out
push
xor
lods
aad
ja
mov
dec
nop
lock
aaa
push
es
mov
xchg
movsb
jbe
out
jecxz
dec
test
popa
lahf
jno
fmull
dec
push
mov
push
out
imul
mov
pop
cmpsb
pop
repz
mov
xchg
xchg
xor
mov
sub
mov
rolb
ss
inc
scas
into
mov
inc
push
lods
push
push
into
test
popa
dec
iret
cmpsl
pusha
push
loop
jae
jecxz
and
into
inc
push
jg
pop
das
stos
cmc
neg
xchg
out
sbb
adc
xor
pop
sub
adcb
inc
lret
mov
xchg
add
in
inc
rcrb
in
add
je
mov
bound
cs
or
add
pop
popf
jge
cmp
pop
scas
test
and
js
das
shlb
insb
lret
mov
rclb
adc
fisubrl
nop
call
cs
push
and
lret
outsl
fwait
jno
dec
es
dec
adc
sub
dec
xor
stos
sub
mov
lret
imul
mov
mov
in
data16
jle
arpl
add
outsb
mov
out
nop
shll
mov
dec
sbb
jle
cwtl
mov
jns
jno
scas
stos
xchg
sub
push
int3
sbb
sub
push
add
loopne
xor
mov
add
fs
cmpsl
leave
push
lcall
xchg
loopne
adc
lods
mov
add
mov
stos
inc
add
imul
loop
push
daa
sub
xchg
mov
in
adc
out
addr16
cld
stc
push
xchg
xchg
test
push
xchg
cltd
notl
adc
in
test
paddsb
jno
mov
cs
popf
int
je
adc
sub
xor
inc
dec
bound
cmp
imul
imul
stos
sub
mov
sub
cld
mov
in
cld
add
jmp
sbb
cmp
mov
nop
ret
je
pop
movsl
popa
or
adc
std
sub
cmp
jno
dec
lret
pushf
popf
push
mov
or
clc
mov
das
stc
push
adc
push
andl
mov
outsb
push
add
imul
adc
cmpsb
sbb
adc
inc
lds
cltd
push
push
dec
ret
sub
adc
sbb
mov
ja
mov
mov
mov
into
lahf
aam
jno
add
inc
push
or
repz
jle
xor
sub
sub
sbb
das
cltd
test
push
stos
inc
andb
jp
sbb
and
add
pop
or
cli
xor
loop
pop
lret
pop
scas
inc
push
outsb
xchg
addr16
mov
adc
add
outsb
xchg
std
icebp
xor
fistl
gs
sbb
imul
rcr
ja
push
in
in
sub
out
or
push
cmp
mov
inc
sub
je
mov
mov
push
push
push
jmp
xchg
xor
inc
xchg
mulb
das
mov
sub
push
pop
in
mov
jns
inc
std
xchg
hlt
dec
hlt
nop
stos
mov
fcoml
sbb
sbb
aaa
in
add
sti
xchg
mov
mov
outsb
stos
mov
incl
clc
mov
pop
mov
shll
loopne
in
sbb
stos
jmp
adc
inc
mov
pop
repz
mov
xor
push
or
insb
es
xchg
mov
xor
jae
ret
imul
push
jo
loop
push
in
lahf
jnp
sub
movsl
pop
jmp
and
jbe
sti
push
out
cmp
mov
ret
jl
in
or
mov
add
lahf
fwait
mov
aad
xchg
mov
fwait
push
add
das
adcb
or
rolb
or
push
mov
repz
lods
int
cwtl
push
loopne
decl
lret
mov
dec
xor
xchg
mov
dec
mov
imulb
adc
lahf
jbe
push
push
add
xchg
movsl
sti
ret
add
outsl
add
insl
dec
and
jne
sti
pop
pop
or
roll
mov
mov
or
fadds
loopne
enter
test
test
jb
dec
or
mov
inc
mov
int3
hlt
mov
pop
cmp
and
jnp
inc
pop
push
iret
cmp
mov
lret
int3
lock
or
mov
cmc
sbb
mov
mov
cmp
lods
dec
gs
lcall
aad
rclb
cwtl
ret
inc
insb
leave
dec
leave
les
mov
mov
icebp
lea
xchg
push
divl
mov
mov
inc
dec
mov
fiadds
shrb
inc
jae
pop
xchg
cld
dec
lock
ffree
cmp
mov
lods
gs
mov
nop
push
dec
lds
xchg
roll
push
int
in
jae
fstpl
jmp
xor
mov
or
xlat
mov
inc
cltd
loop
add
push
mov
jo
hlt
xor
in
dec
ret
push
dec
xor
sar
mov
or
jbe
hlt
jg
xchg
adc
jmp
ss
mov
mov
scas
mov
jno
mov
jne
rcrb
xchg
inc
push
das
cs
subb
stos
call
std
jle
stc
mov
inc
cmc
sub
lods
sbb
adc
pop
fwait
dec
sbb
fwait
jo
mov
out
pop
sarl
xor
xchg
leave
jbe
ldmxcsr
dec
xor
cmp
sti
mov
push
test
je
mov
dec
hlt
les
cmp
or
lcall
mov
xchg
test
orb
and
scas
scas
xor
jecxz
arpl
enter
sbb
jo
adc
fldenv
cmc
xorl
insb
je
fbld
inc
mov
sub
std
cmpsl
xor
rcrb
pop
lcall
popa
inc
mov
xchg
push
out
pop
mov
dec
in
subb
fsubrs
aam
dec
or
or
fildl
mov
jmp
push
daa
sbb
loopne
and
mov
insl
push
loop
sbb
out
cmp
or
stc
aaa
inc
dec
xchg
popa
mov
mov
hlt
lahf
test
cmp
jne
test
inc
inc
add
fnstsw
incb
jne
xchg
stos
aas
mov
movsb
movsb
sbbl
or
pop
and
jno
fldcw
xchg
jae
in
adc
xor
xchg
iret
mov
xorl
add
sbb
stc
cli
cmp
mov
fs
jp
dec
filds
add
cmp
push
adc
jno
sbb
lret
xlat
jno
mov
lret
dec
xchg
lods
mov
cltd
xchg
lret
inc
add
mov
cmc
adc
rolb
mov
or
mov
nop
sub
push
outsb
cld
dec
andl
pop
xlat
movsb
xchg
cmp
js
enter
mov
mov
sub
jae
push
rolb
sub
aad
pusha
and
test
inc
mov
jmp
dec
test
das
call
movsb
cmp
or
cs
out
cmp
int
cmp
fs
and
sbb
movsl
arpl
and
in
lret
mov
xchg
mov
pop
loop
cmpsl
test
movsb
fidivrs
lahf
addl
daa
imul
lahf
loopne
cli
pop
in
in
aaa
daa
les
dec
mov
lods
mov
mov
lret
inc
pop
addl
dec
in
std
xchg
out
cmp
lret
inc
push
sub
lea
xlat
sub
loop
adc
imul
outsl
arpl
xchg
ss
push
test
scas
or
pop
mov
shl
outsb
jge
rorb
xchg
pop
addl
aaa
enter
divb
ret
imul
fildll
pushf
les
pusha
cmpsl
sub
sub
mov
sub
or
mov
fs
mov
adc
dec
push
cmpsl
sub
mov
push
inc
jae
insl
movsl
mov
rcl
insl
pushf
mov
ret
test
xor
das
xor
arpl
push
adc
sbb
pop
push
lret
repz
jne
xor
add
adc
ja
add
aas
xor
mov
jbe
pop
frstor
cmc
jnp
adc
mov
jae
add
inc
imul
pop
mov
and
jecxz
popa
jp
mov
das
in
clc
push
and
pop
jno
mov
aaa
call
mov
test
mov
sbb
pusha
sub
dec
push
cmp
push
xor
enter
xlat
flds
imul
lahf
lahf
and
fisubrs
out
inc
mov
mov
jns
lcall
inc
pand
jno
adc
aad
ds
mov
fnstsw
or
pop
ds
imull
push
fdivs
cmpsl
push
add
or
ljmp
in
xor
es
xor
enter
leave
movsl
xchg
sbb
dec
mov
xchg
sahf
ljmp
mov
cmp
out
or
push
pushf
sbb
dec
fwait
sbb
imull
in
jb
cwtl
int3
inc
incl
and
movsl
jmp
dec
int
pop
shr
pop
fnstcw
sbb
lods
adc
in
stos
sar
repnz
inc
inc
imul
ret
in
scas
cmc
arpl
fs
pop
mul
push
out
xchg
mov
negb
shr
sub
mov
jecxz
call
inc
lea
cli
push
dec
inc
xorb
popa
sarl
andb
ja
aaa
pushf
inc
cmp
cld
or
adc
jns
iret
jmp
data16
push
mov
jo
pusha
sub
pop
xchg
xor
sahf
push
xchg
ffreep
push
xor
arpl
sahf
stc
arpl
les
jb
xchg
cmp
xor
jp
int
push
jp
mov
aam
jp
shl
mov
hlt
popf
and
testl
jl
mov
aaa
sbb
sbb
mov
cs
clc
mov
insb
loop
pop
sub
js
pop
jge
cs
rcrl
add
push
popf
add
enter
lods
and
stos
pop
mov
aaa
ss
pop
mov
sahf
mov
test
inc
sub
jg
icebp
fcomip
pushf
or
enter
arpl
leave
inc
xchg
test
ret
and
sbb
int
dec
cwtl
andb
imul
xchg
sub
jb
lds
lret
in
cli
andb
adc
mov
push
add
adc
dec
mov
and
cltd
push
push
ljmp
sbb
movsb
into
ret
or
sub
sbb
inc
mov
pop
pop
ret
sbb
sbb
push
mov
add
xchg
fcoml
nop
in
int3
jle
shrl
and
jmp
aas
notb
or
sbb
adc
popf
cmp
popf
xchg
xor
out
sarl
sub
adc
sub
pop
inc
jge
out
ffreep
push
push
pushf
out
push
add
add
dec
inc
pop
aas
and
out
mov
scas
mov
sbb
aad
idivl
mov
ljmp
jne
xchg
sub
mov
mov
fstpl
adc
out
sub
cmp
pop
jge
push
rol
or
mov
push
lods
adc
mov
pop
repz
dec
jns
daa
add
inc
dec
xor
sbb
add
fwait
jecxz
sbb
add
sub
int
dec
divl
mov
call
lea
push
and
out
inc
inc
sub
pop
dec
lds
add
mov
call
cmp
je
rclb
pop
add
test
popa
push
pop
insb
bound
push
loop
xchg
pop
test
and
dec
sub
mov
pop
adc
lods
xchg
aad
adcl
pop
out
dec
mov
add
mov
mov
fsubs
mov
mov
xor
adc
add
adc
es
adc
dec
and
push
push
loop
push
fdivp
pop
pop
push
bnd
xchg
sbb
sbb
gs
bound
sbb
loopne
jnp
xor
outsb
mov
fucom
iret
ds
pushf
int
adc
fucomp
inc
out
pop
sbb
pop
mov
cwtl
lods
psllq
fs
mov
jecxz
shl
inc
adc
loope
push
lret
rol
jle
pop
inc
andb
cmp
movsb
mov
arpl
das
lcall
adc
jge
mov
mov
les
jge
sub
fdiv
fistps
cltd
or
in
stc
adc
outsb
rorl
jl
pop
jmp
pop
clc
pop
lea
fadds
gs
mov
inc
fs
int3
or
shl
and
dec
fsubl
adc
sbb
pop
push
mov
mov
mov
or
dec
popa
and
mov
pop
dec
inc
or
push
cmp
cmpsl
xchg
push
outsb
adc
addb
cmp
loope
add
rolb
jnp
cmpsl
sub
ret
jg
aam
stos
pop
scas
cmc
mov
lret
cmpsb
repnz
adc
out
and
stos
or
mov
and
sbb
mov
pop
xchg
mov
sub
aaa
and
cmp
push
leave
mov
fcomps
mov
addb
cmp
mov
mov
bound
or
mov
sub
or
ret
dec
fistl
dec
lods
enter
cmp
and
inc
pop
imul
mov
xchg
inc
loope
push
or
jbe
insb
mull
shlb
lret
dec
dec
mov
jecxz
idivl
rcl
and
push
mov
movsb
sub
push
sbb
sbb
adc
out
out
or
fs
add
andb
or
in
hlt
ficoms
movsb
or
dec
jae
fs
or
out
push
out
mov
scas
sub
ficoms
aas
push
leave
mov
lret
outsb
push
or
push
and
mov
push
arpl
add
cmp
scas
mov
dec
mov
xor
int3
mov
push
pop
rolb
adc
sbb
push
adc
stc
js
arpl
outsb
lret
adc
ljmp
sbb
stc
icebp
inc
dec
cmp
lahf
call
adc
cmp
lahf
aaa
mov
jmp
mov
mov
add
and
xor
das
imul
test
add
mov
ds
sbb
lds
fcmovnb
or
xchg
add
mov
sbb
or
xor
popf
sub
ret
pop
inc
fs
dec
sbb
pop
test
paddusb
mov
pop
fst
or
pop
inc
int3
and
movsb
lods
fiadds
pop
push
test
or
xor
push
jnp
xor
fidivrs
test
sub
xor
xlat
jae
cmc
jnp
mov
inc
jbe
fnsetpm(287
fcomi
jae
lcall
jl
sbb
add
jp
ja
movsb
push
lahf
je
bound
add
adc
jnp
shrb
dec
push
push
mov
out
std
addr16
loopne
mov
mov
inc
mov
add
stos
mov
dec
dec
mov
push
mov
ljmp
jmp
bound
or
add
ret
aaa
dec
xlat
xchg
in
incb
cmpsb
flds
mov
lret
bound
or
scas
add
arpl
js
je
loope
shlb
jbe
or
and
fisttps
and
in
fs
repnz
pop
and
jo
aas
jecxz
inc
lret
mov
aaa
bound
adc
mov
rolb
adc
inc
imul
and
dec
jmp
xchg
lods
outsb
int3
add
jne
fcmovbe
sbb
inc
les
hlt
inc
adc
sub
or
sbb
test
cld
test
ficompl
stos
jb
adc
fcompl
push
out
fs
adc
test
bound
shrl
out
pmaxsw
sbb
xor
sbb
jbe
jg
sbb
fcoms
cmp
jnp
imul
sub
std
inc
sub
xchg
out
fcmovnu
nop
add
sub
out
in
inc
mov
pop
scas
cmovo
pop
hlt
mov
sbb
adc
into
lret
int3
addr16
jb
inc
push
scas
inc
jl
and
ficoms
iret
pop
pop
ljmp
xor
mov
in
testb
dec
cmp
cmovae
push
pop
inc
cs
lock
dec
lea
and
mov
nop
rorb
sub
or
andb
adc
addb
loope
mov
insb
push
int3
inc
cmp
inc
pushf
dec
mov
nop
push
xchg
mov
nop
lds
push
sarb
out
xor
xor
mov
dec
pop
pop
push
rorb
cmp
scas
enter
ja
add
out
les
cmp
sub
jnp
pop
int3
or
push
pop
and
push
cmp
repnz
daa
cmp
mov
in
lock
inc
dec
popa
int3
mov
stc
adc
bound
xchg
dec
mov
cmp
pop
fwait
dec
add
xor
mov
jp
adc
fwait
push
push
repz
dec
or
mov
icebp
inc
adc
inc
jg
adc
cwtl
arpl
xchg
mov
sub
stos
pop
jl
stc
and
shrl
in
enter
sub
jmp
sbb
in
pop
scas
and
pop
aaa
adc
lds
push
fdivrl
mull
push
xchg
repz
or
mov
mov
mov
jmp
lret
xor
pop
inc
and
or
sbb
bound
and
push
aad
sbb
cmp
or
out
dec
sub
add
insb
xchg
sbb
mov
imul
mov
xchg
dec
jle
and
out
push
push
arpl
out
lods
rcrb
dec
mov
fildll
movsl
and
sub
cmp
mov
outsb
cs
popf
jns
scas
fcomip
mov
out
fisubs
push
mov
in
js
and
test
data16
xchg
addl
mov
popa
push
jmp
lock
adc
pop
and
outsl
insb
inc
mov
int3
sbb
addr16
adc
loop
imul
inc
mov
sbb
hlt
mov
inc
pop
ss
push
ss
outsb
outsl
int3
adc
jae
lret
rorl
ret
dec
pop
mov
popa
stos
cmp
mov
mov
xchg
sbb
mov
inc
and
add
pop
and
mov
jae
addr16
adc
mov
adcb
mov
iret
out
or
paddusw
vmread
decb
aad
mov
popf
pop
mov
pushf
sub
xor
jle
push
movsb
movsl
or
movsb
test
fildll
fistpll
xchg
xor
inc
mov
and
push
mov
inc
les
movsb
xchg
add
insl
mov
mov
loopne
aad
jecxz
inc
and
lock
add
std
movsb
shlb
faddl
clc
or
lods
ss
pop
ret
add
or
pop
test
cmp
pop
inc
popf
dec
rol
add
push
sbb
sub
cmp
jmp
inc
fsubs
ss
int
lcall
mov
stc
scas
add
pop
xchg
js
in
adc
dec
adc
ljmp
lahf
fadds
popa
xchg
jecxz
sbb
aaa
hlt
pushf
inc
inc
in
cmp
push
or
addr16
aas
jb
xchg
sub
or
movl
je
or
mov
es
movsl
daa
sub
add
jle
insl
ret
push
lcall
mov
lahf
js
ds
pushf
test
jle
cwtl
adc
fldcw
sub
pop
outsl
mov
lods
mov
push
mov
js
jb
fidivrl
addr16
notb
add
push
shr
lahf
nop
mov
push
movsl
movsb
mov
jmp
repnz
stos
stos
outsb
push
outsb
aas
negl
rolb
repnz
or
cmp
stos
fisubrl
sbb
push
shrl
cmc
sbb
lret
shlb
mov
je
mov
rcll
imul
mov
addr16
data16
lods
mov
xor
push
fucomi
fildll
loope
jecxz
cmpsb
push
sbb
add
mov
cmpsl
ja
mov
fsubrs
loopne
push
jmp
or
inc
cmpsb
fisubs
xor
enter
or
sbb
outsl
xor
push
rol
out
daa
or
or
loope
xchg
in
mul
xchg
sbbl
or
add
insb
aaa
mov
and
add
pop
push
popa
fimull
mov
jge
sarb
in
add
or
ja
or
push
in
dec
xchg
mov
ja
stos
xor
daa
jmp
adcl
or
inc
xchg
outsb
daa
incb
dec
xor
xorb
push
inc
sti
push
jge
aad
sahf
add
testl
jnp
out
insl
fists
into
daa
fsin
aas
in
jno
sub
je
mov
int3
jg
or
sbb
xlat
daa
push
and
sub
mov
out
in
add
push
xchg
push
lods
pop
std
cli
xchg
push
add
mov
sbb
imul
xchg
push
es
add
and
icebp
xchg
xchg
sahf
rorb
sbb
push
aaa
mov
cld
test
xor
jo
ljmp
sbb
lea
sbb
iret
sti
jo
orl
sub
movsb
js
sub
sbb
sub
mov
mov
imul
adc
imul
pop
test
hlt
xor
dec
and
inc
sub
fnstsw
test
cmc
jne
sub
outsl
rcr
sarb
incb
inc
mov
lds
cmpl
xor
xlat
orl
mov
dec
pusha
push
adc
fisubrl
in
aam
loope
icebp
and
cmpsl
je
jbe
aaa
and
adc
lods
push
lahf
push
inc
fwait
jnp
jnp
or
mov
push
inc
cs
fldt
shrb
fistpll
add
in
pop
sub
loop
inc
fwait
jmp
dec
inc
inc
jnp
cld
adc
std
repz
lds
adc
lds
jecxz
in
jne
mov
sbb
sub
mov
mov
xor
cli
ss
mov
mov
ret
shl
adc
lcall
and
jbe
xchg
inc
add
aam
dec
and
fbld
rcl
dec
int
fisubrl
sub
nop
push
sti
nop
dec
sub
or
xor
mov
xchg
mov
inc
or
lcall
insb
mov
sbb
lock
mov
mov
in
in
add
mov
ds
cli
sbb
cwtl
aam
jnp
loope
in
inc
pop
lret
in
xchg
addr16
lahf
fnsetpm(287
popa
fwait
mov
inc
and
mov
loope
pop
cltd
ficoml
aaa
inc
adc
sub
xchg
imul
xabort
in
cmpsb
push
pop
inc
dec
es
clc
out
dec
pop
sub
mov
pop
out
dec
in
mov
pop
das
jg
cli
dec
mov
sbb
mov
je
adcb
hlt
pop
fsubrs
or
inc
sarl
out
out
ret
and
or
jg
xor
scas
mov
call
sahf
xor
stos
movsl
scas
sahf
mov
in
aas
sub
les
jo
add
bound
dec
test
shlb
call
mov
lock
js,pn
mov
test
inc
lret
fwait
nop
xacquire
nop
jbe
sub
push
mov
or
dec
jbe
cmpsb
xchg
push
cwtl
jle
or
mov
dec
mov
xor
xor
mov
or
sbb
push
mov
in
push
cmp
add
sbbl
cld
sub
roll
test
jbe
std
jbe
pop
and
inc
mov
xor
outsb
mov
jo
add
ret
cmp
fadd
add
xchg
aaa
scas
mov
mov
lock
addr16
icebp
sar
cmp
add
cltd
int
adc
adc
add
mov
test
dec
sarl
push
sbb
and
and
lds
rorl
sbb
push
dec
dec
mov
pop
jge
jb
adc
hlt
fwait
je
ja
pusha
les
dec
insl
dec
xor
out
mov
or
dec
cltd
or
cmpsl
std
mov
lods
cmpsl
mov
loopne
mov
cwtl
test
rcrl
adc
fsts
cmpsb
in
fnsave
dec
std
mov
dec
in
inc
movsl
dec
je
lods
lahf
sbb
and
in
and
xor
pusha
mov
mov
addr16
in
xor
jo
mov
repz
xchg
pusha
inc
ds
imul
and
dec
or
sbb
dec
sbb
lods
sub
divb
xchg
or
add
xlat
pop
jle
and
xchg
mov
pop
mov
fs
xchg
mov
imul
and
js
sbb
xchg
xor
sub
xchg
jae
loopne
mov
mov
sbbl
pop
fildll
stos
mov
jbe
enter
cmpsb
and
icebp
or
ljmp
sub
jmp
add
hlt
mov
cmp
pop
les
out
in
ficompl
lds
jno
fbld
inc
aad
test
lret
dec
pop
into
jae
sbb
dec
add
xor
and
xor
ficoml
mov
cmc
or
cmc
push
pop
icebp
cli
ljmp
and
xchg
ret
jmp
lds
xchg
test
pop
dec
mov
jmp
andl
shlb
lahf
cmc
pop
scas
mov
xchg
mov
push
adc
lds
and
adc
stc
lods
stos
cli
pop
adc
imul
orl
out
and
clc
or
inc
mov
jge
sbb
inc
or
bnd
arpl
xor
dec
sub
jno
bound
xchg
and
add
cmp
add
cmp
test
mov
mov
mov
bound
lahf
rcr
and
xor
jo
mov
push
aad
mov
nop
sub
fstps
test
mov
fsubl
fldl
dec
aam
or
pop
fmuls
cmp
pop
lret
scas
sbb
mov
adc
das
repnz
or
shrb
popf
inc
lods
fwait
les
fcmovne
pusha
out
inc
mov
insb
arpl
jle
mov
lahf
insb
push
sub
jmp
sbb
pop
sbb
pop
adc
jge
xchg
xlat
sahf
ljmp
mov
data16
push
outsb
pop
mov
fbld
mov
out
inc
jg
rolb
cmpsb
dec
pop
jno
pop
into
test
cmp
and
es
mov
fsubl
dec
xchg
cmpsb
andb
push
ds
mov
lock
adc
lds
jecxz
cmp
or
repnz
cmc
sub
fiaddl
imul
cmp
add
orb
add
test
test
jb
or
dec
adc
insb
and
mov
test
int
dec
hlt
sarl
in
mov
inc
inc
ljmp
and
add
mov
out
sbb
xchg
das
loop
mov
lcall
pop
dec
or
xor
test
mov
and
jmp
mov
ds
lret
mov
mov
pop
xchg
lods
xchg
push
movsl
aas
sbb
sti
adc
test
add
or
gs
movsl
arpl
rcr
rol
loopne
dec
fwait
pop
pusha
flds
mov
adc
je
jl
dec
sub
ret
jge
inc
push
and
cmp
and
popa
nop
jno
xchg
test
fwait
or
pusha
in
mov
xchg
and
hlt
cmpb
adc
mov
mov
mov
jl
pusha
rcrl
popf
lret
xlat
add
sub
and
out
ja
icebp
add
out
add
out
mov
movl
nop
pop
out
adc
and
dec
dec
adc
mov
jecxz
and
aas
xor
movsb
inc
js
aas
into
sti
sbb
mov
mov
iret
ja
cmp
xchg
fnstcw
ja
xor
add
shlb
xchg
repnz
imul
adc
loopne
mov
dec
mov
fsubrs
roll
rolb
push
popa
jnp
add
adc
or
cmp
mov
ret
mov
mov
ljmp
test
xor
and
jmp
mov
push
js
es
add
mov
inc
into
aad
push
add
jnp
fwait
xor
add
cmpsb
xorb
fdiv
sarl
adc
fcom
jnp
pop
fwait
shl
pop
bound
out
cmp
repz
testb
adc
cs
hlt
insl
orb
sbb
daa
in
out
aas
jecxz
pop
or
cmc
dec
aaa
sub
dec
scas
sarl
lahf
cmp
sti
adc
sbb
push
fadds
fs
stc
lock
push
in
aas
inc
or
jae
in
mov
add
mov
pop
fs
popf
pop
in
cltd
lea
bound
int
notl
pop
sbbl
or
arpl
enter
push
inc
imul
pop
jnp
pop
cmp
aas
ret
sub
mov
pop
dec
and
popa
lahf
out
lret
mov
xlat
pop
dec
ret
ds
lods
stc
cmc
div
adc
push
dec
lock
xor
jl
sti
cmc
pusha
push
testl
mov
jb
movsl
or
xchg
in
jmp
inc
or
or
mov
and
ss
sbb
adc
iret
mov
ret
pop
adc
cltd
and
andnps
into
dec
and
aad
cmp
pop
mov
cmpsl
inc
mov
push
xchg
fildll
xor
jge
pop
out
aad
jp
idivl
fucomip
adc
test
mov
sub
mov
out
insb
stos
add
xor
xchg
int
adc
out
mov
decb
cli
sahf
sbb
mov
out
push
call
inc
jg
clc
dec
push
push
repz
pavgb
push
adc
fimull
imul
pop
subb
addr16
scas
pop
into
cmpsl
jmp
dec
movsb
sub
jns
mov
xchg
mov
stc
rcll
call
cmp
mov
in
ja
int3
jb
push
inc
cmpsl
mov
xchg
shll
jp
xor
xchg
mov
mov
pop
lock
lcall
test
stos
push
and
dec
push
xchg
adc
inc
loope
cli
or
call
pushf
lret
gs
lret
orl
dec
fld
cmp
repz
inc
jp
push
pop
mov
aaa
out
jg
xor
rcrl
xor
push
test
dec
dec
or
insb
test
ljmp
dec
mov
in
lods
sub
pop
lcall
inc
cmpsb
lock
mov
inc
cmp
fstpl
mov
inc
popa
xchg
ficoms
pop
test
xor
js
dec
push
out
das
push
test
pop
inc
mov
push
rol
and
dec
inc
jno
out
loopne
mov
jnp
add
lret
mov
mov
dec
out
sahf
ja
mov
push
lods
mov
cmp
xor
in
aam
pop
jnp
inc
sub
xchg
xchg
pop
push
xchg
sbb
testb
jo
push
pusha
xchg
push
sbb
add
jmp
lahf
xchg
jae
inc
fdivr
fildll
mov
fistpl
movsl
movb
dec
or
jnp
shlb
out
mov
push
sti
rolb
sbb
icebp
lcall
ror
pop
int3
and
sub
push
push
std
sbb
dec
lcall
call
xchg
push
mov
lret
sub
mov
dec
xchg
dec
and
mov
stos
or
jle
pop
pop
test
arpl
test
into
inc
sub
loop
popf
or
mov
mov
les
cmp
mov
xor
popa
dec
jae
adc
outsb
fxch
cs
sbb
mov
stos
mov
inc
dec
loopne
jns
lret
mov
and
leave
repnz
add
aas
ret
cmp
xchg
jno
loope
imul
adc
fimull
ljmp
add
cmpsl
addl
cmc
push
popa
jnp
jns
cmpsl
and
push
cmp
xor
leave
or
jge
hlt
cld
subb
prefetchwt1
or
clc
cmp
ret
lea
add
jno
mov
mov
ds
mov
mov
push
sbbb
lods
add
loope
sahf
addr16
aad
or
sub
xchg
push
test
aas
sti
push
xchg
ljmp
cmp
push
lock
push
mov
bound
push
ret
push
mov
push
cmpl
jns
mov
fidivs
mov
or
popa
pop
xchg
loop
xchg
out
ss
sub
adcb
in
mov
cmp
inc
jns
jo
lcall
mov
cmp
test
jbe
pop
test
pop
je
ss
and
cmp
pop
xor
lods
in
add
sbb
mov
add
enter
xlat
sub
aad
mov
xor
xchg
jmp
push
stos
inc
pop
loope
dec
mov
cmp
xchg
fildll
ret
or
hlt
cmp
cmp
leave
dec
or
mov
mov
popf
push
mov
out
jmp
cmp
repz
mov
push
out
jno
push
iret
loopne
cmp
mov
xlat
roll
cmc
xor
js
jecxz
iret
cli
sbb
or
lock
sub
outsl
or
adc
cli
inc
jg
mov
add
push
mov
movl
xchg
repz
ds
fcomip
jb
in
dec
int
mov
bound
sbb
xchg
aam
stc
lds
adcb
pop
js
inc
adc
sti
xchg
rcrb
jbe
sbb
jno
clc
scas
jae
push
aam
jge
in
dec
testb
dec
mul
rorl
cmp
inc
jg
out
xchg
and
ror
pop
pushf
mov
push
xchg
inc
mov
addl
leave
pop
adc
and
gs
frstor
scas
push
push
and
or
mov
and
push
in
xor
fs
inc
mov
sarl
hlt
sbb
repnz
push
push
dec
outsb
mov
adcb
dec
add
mov
push
loopne
cltd
hlt
add
test
mov
jg
js
add
xchg
jecxz
mov
xchg
sbb
mov
or
mov
iret
cmp
repz
cmp
mov
insl
push
in
xchg
ret
xor
dec
push
xor
xor
xchg
mov
adc
clc
dec
jb
dec
orl
mov
stos
test
cmpb
sbb
movsl
or
in
aaa
cltd
or
sub
push
movsl
adc
bound
loope
xchg
xchg
cmpsl
push
pop
movsb
push
idiv
sbbl
and
sbb
xor
xchg
mov
int
repz
dec
push
bsf
inc
mov
or
push
jge
jns
vpmulhw
mov
push
sahf
testb
scas
int
push
stos
cmp
inc
imul
addr16
or
or
cmpsb
xchg
inc
push
lods
pop
shl
ljmp
xchg
xchg
inc
push
xchg
das
popa
inc
xchg
clc
lcall
mov
inc
add
jo
mov
sbb
mov
ss
pop
push
mov
or
add
mov
push
cmp
jne
add
fsubrl
aam
xor
xchg
dec
push
jg
mov
nop
cli
push
push
xchg
and
pop
jp
or
das
scas
scas
jecxz
into
xlat
adc
lods
add
test
out
cmp
jg
adc
scas
add
movsl
jmp
in
cmp
les
push
lcall
mov
or
clc
mov
jl
adc
out
xchg
mov
ja
pushf
ds
xor
negl
push
orb
loopne
pop
addr16
sahf
push
loop
aaa
fimull
cmc
pop
jecxz
nop
je
or
in
adc
stos
flds
pop
jae
add
pushl
rolb
jo
aam
jecxz
enter
and
je
pop
adc
inc
ds
test
pop
jecxz
in
inc
sbb
pop
sbb
fists
xchg
cltd
sub
inc
dec
xchg
and
xor
xchg
roll
push
sbb
movsl
aam
sbb
pop
push
movb
cmp
push
sbbb
cmp
ret
adc
pop
inc
test
sti
mov
pop
jne
cld
xchg
push
jbe
adc
sub
cmp
test
movb
call
fucomip
arpl
mov
pop
pop
dec
jne
fwait
mov
xchg
dec
andb
lahf
mov
cltd
out
jg
pop
push
xor
push
sti
push
insb
lret
adc
les
push
nop
js
pop
mov
pop
push
and
jae
insl
sbb
jns
pusha
or
add
aas
int
nop
sub
pushf
mov
mov
jp
pop
into
lds
incb
lds
adc
icebp
mov
and
pop
inc
xor
or
push
mov
cld
iret
and
fisubrl
jnp
xchg
jns
push
jmp
add
out
jae
popf
cld
jl
adc
xor
sbb
in
mov
push
rcl
jl
loop
les
lret
mov
imul
jno
mov
testl
sbb
loope
imulb
pusha
pop
fwait
xlat
push
lret
inc
pop
cmp
inc
jp,pt
adc
cmpsb
mov
gs
or
fistpll
push
mov
aad
sub
adc
sub
mov
inc
add
leave
mov
shll
nopl
stc
int
cmp
xchg
sahf
cs
pop
fidivrl
adc
push
pop
jns
push
and
jecxz
mov
aas
adc
xor
or
icebp
loope
rorl
mov
cmp
mov
xchg
stc
subb
ja
cmp
stos
sbb
sbb
xor
push
hlt
into
xor
clc
divb
mov
icebp
mov
cmc
and
jne
imul
je
ljmp
inc
cmp
testb
daa
jg
mov
pop
pusha
xchg
clc
lret
es
in
and
add
imul
insl
mov
dec
sub
sub
outsw
insl
cwtl
out
jbe
ds
ret
dec
iret
dec
les
or
cmp
dec
int3
sarb
push
inc
in
jg
movb
aaa
push
jo
xchg
test
out
mov
push
jp
testb
sbb
cvtps2pd
aad
sub
mov
bound
int
adc
jge
stos
sub
mov
mov
and
dec
ja
loop
jns
ja
or
or
dec
dec
push
add
leave
sarl
dec
cmpsb
xor
fmull
nop
dec
jne
lret
js
nop
and
xchg
cld
push
out
stos
jl
sbb
lods
es
xor
cli
and
bound
xchg
add
dec
cmc
pusha
sbb
rolb
push
xchg
jg
xchg
mov
mov
xchg
pop
sub
add
mov
cli
cmpb
out
jae
movl
clc
xchg
xchg
ljmp
fdivrl
jno
sarb
mov
imul
into
cmp
js
pop
cmp
cmpsl
inc
idivb
mov
test
and
outsl
adc
cwtl
cwtl
fisubs
hlt
mov
mov
or
jns
adc
movl
out
xor
shlb
dec
das
mov
fidivrl
mov
dec
loope
movsb
mov
mov
or
mov
cmp
daa
icebp
cmp
aaa
gs
aad
push
inc
push
sub
pushf
aaa
clc
push
inc
sub
push
inc
xor
les
sbb
adc
mov
mov
cwtl
popa
push
xchg
xchg
imul
lcall
ljmp
pop
pop
xchg
out
xor
sub
gs
fldenv
push
xchg
mov
pop
mov
ret
sub
sbb
or
stos
sub
cwtl
les
or
sahf
mov
lret
insb
call
mov
xchg
push
push
pop
aaa
xor
fidivrl
fstpt
out
jns
orl
fs
in
insl
jo
xor
push
push
xlat
mov
inc
xor
out
inc
jne
fcoms
jno
sbb
jecxz
mov
xchg
xchg
fisttps
cmp
nop
outsb
call
hlt
mov
lea
scas
or
add
mov
mov
mov
add
mov
lods
sarb
mov
sbb
sbb
push
les
sub
mov
adc
inc
mov
cmp
push
xor
loop
aam
mov
int3
xlat
xchg
pop
mov
or
addr16
mov
fildll
loope
lock
fisubl
and
add
test
lret
xchg
dec
icebp
xchg
sti
cmpsb
arpl
jns
mov
dec
xchg
xchg
push
out
sbbl
sti
into
sti
or
xchg
fxch
push
lods
sub
mov
adc
xor
adc
aam
gs
icebp
push
orb
leave
imul
fwait
cmp
mov
xchg
fs
jo
shrb
push
push
xchg
sub
xchg
in
jge
sub
and
das
dec
pop
push
sub
dec
das
movsbl
mov
mov
ds
sub
sbb
lds
xchg
cld
push
jnp
lds
shr
bound
inc
sbbl
pop
xor
push
xchg
hlt
dec
jle
add
xor
xor
aam
jmp
scas
stos
and
mov
jge
repz
mov
and
dec
pop
xor
pop
sbb
push
push
xor
push
adc
push
push
pop
xchg
cmc
dec
movsl
xchg
setge
popa
xor
out
jno
add
rcrl
lahf
lahf
sbb
add
jle
and
jl
sarb
push
cltd
scas
int3
jb
add
cld
mov
cmp
fwait
adc
jmp
loope
dec
push
sbb
fisubrs
xor
loopne
push
stos
fcmovb
jmp
in
add
shl
lods
sbb
pop
sbb
ret
stos
pop
cmp
xchg
mov
xchg
push
jno
and
mov
cmp
mov
xor
imul
jo
xchg
les
push
fwait
xor
add
cwtl
xchg
das
push
mov
add
in
jns
dec
mulb
pop
data16
jno
xchg
mov
sbb
mov
mov
xlat
mov
movl
jb
pop
pop
add
and
cmp
jae
les
sbb
in
dec
push
mov
push
les
lds
sbb
outsb
cmpsl
pop
dec
dec
jb
mov
lea
or
gs
stos
push
ds
adc
push
ds
sub
imul
push
fiadds
lods
leave
sbb
xchg
mov
xor
in
sahf
add
sbb
jle
inc
test
movsb
aam
neg
je
pop
sub
mov
mov
call
inc
dec
jae
xchg
incb
cltd
sbb
sbb
inc
out
mov
jmp
pop
jb
in
out
or
lret
dec
mov
lds
xchg
add
je
call
mov
into
cmpsb
dec
xchg
test
mov
cmpsl
in
or
mov
ljmp
xor
jns
add
stos
movb
cmpb
xlat
pushf
xorb
loopne
mov
mov
inc
inc
or
dec
in
adc
cmc
and
pop
mov
outsl
and
sbb
add
int3
xor
lret
cli
jnp
hlt
insl
push
xor
jno
mov
lock
lcall
xor
dec
stc
dec
rcl
push
rcrb
mov
xchg
jmp
mov
ss
add
ljmp
arpl
and
sbb
push
or
or
push
in
sub
jo
cld
out
xchg
fsubrp
mov
mov
xor
ret
xchg
sar
shrl
xlat
loopne
pop
test
cmpsl
out
cld
das
insl
and
ja
jge
mov
or
inc
in
adc
cmp
mov
mov
pop
adc
test
cmp
mov
push
push
les
xchg
lcall
inc
lods
and
ja
in
movsb
sub
and
inc
jge
mov
dec
loope
insl
pop
mov
aas
push
xchg
xchg
shr
repz
ja
add
lds
mov
mov
push
rorb
cltd
and
xchg
cmp
call
xorl
add
not
sub
aam
sbb
jg
xor
inc
test
imul
cld
xor
outsl
cmp
mov
loop
jmp
scas
lret
loope
incl
mov
mov
imull
and
xlat
xor
pop
out
pushf
fwait
in
sub
in
xchg
lock
in
ss
movsl
in
pop
sub
dec
ja
shlw
inc
divb
int3
lcall
inc
inc
iret
dec
adc
inc
xchg
pop
cmpsl
push
inc
dec
push
push
in
sar
loope
sbb
jno
cmp
fcmovu
cltd
xlat
mov
xor
adc
mov
pop
or
inc
cmc
xorb
mov
and
mov
push
jno
cmp
in
cltd
inc
inc
push
and
std
call
in
and
into
imul
push
jnp
popa
out
xchg
imul
pop
jle
mov
mov
rcll
daa
outsb
hlt
ja
xor
aam
shlb
adc
push
mov
inc
push
mov
cmp
jg
into
cli
imul
shl
jecxz
add
out
sahf
jbe
popa
xor
and
xor
pushf
add
enter
hlt
arpl
test
add
sub
cmp
aam
int
test
mov
add
mov
or
into
clc
add
mov
fstl
icebp
push
mov
movsb
mov
jno
dec
dec
pop
cmp
hlt
in
cli
push
adc
adc
mov
xor
subl
jne
adc
lahf
sub
xlat
pcmpeqd
ljmp
xor
jb
divl
mov
sti
bound
jae
fiadds
loop
out
cmp
xchg
adc
fisubrs
and
adc
pop
ljmp
or
add
lret
mov
dec
add
cmp
mov
inc
push
cld
adc
gs
in
xchg
test
jb
fwait
sub
xor
cmp
aaa
mov
push
add
icebp
adc
cmc
ror
pop
jo
pop
adc
call
jmp
repnz
adcb
inc
xor
mov
xchg
in
dec
pop
mov
dec
and
jp
xchg
pop
cwtl
fcmovnbe
dec
jmp
push
int
sub
pusha
std
insl
idiv
movsl
rorb
movsb
inc
test
inc
enter
xchg
cmc
shrl
jp
cs
mov
lahf
xlat
add
mov
icebp
mov
ja
shlb
xor
pusha
adc
push
mov
jp
cwtl
pusha
cmp
cmp
cmp
pusha
sbb
lret
sub
pop
shll
mov
jg
xchg
shrb
push
and
xor
add
sub
mov
pusha
push
call
fbstp
and
inc
movsl
mov
inc
icebp
clc
pop
in
xor
stos
daa
push
iret
jl
popf
jo
lret
mov
cmc
xor
xchg
iret
mov
dec
mov
jg
inc
cmp
jl
out
loope
mov
xchg
pop
test
dec
test
std
jns
push
enter
mull
sub
xchg
and
adc
lcall
shl
mov
xor
pop
jmp
mov
add
xor
mov
or
lods
push
js
push
mov
pop
xchg
dec
mov
ss
inc
add
and
fs
inc
aam
adc
outsl
inc
sub
mov
cmp
dec
jp
push
or
subb
movsb
adc
lret
cwtl
insl
jle
sub
mov
mov
jge
pop
std
pusha
add
dec
mov
jb
lock
mov
inc
xchg
mov
add
add
mov
fbstp
sbb
mov
pop
test
mov
stc
xchg
cwtl
sarl
pop
imul
xchg
addr16
mov
pop
imul
jecxz
loopne
pop
dec
xchg
or
jge
push
je
ja
jge
cmp
out
add
inc
push
xor
xchg
push
inc
mov
aad
jae
push
sar
sub
fldt
cwtl
adcl
int
mov
fs
jp
dec
outsl
pop
inc
ret
jl
sub
sub
in
adc
jg
or
and
ja
push
mov
xchg
cmpsb
fisubrl
jb
cmp
iret
out
rsqrtps
lods
and
jb
or
fldl
sub
cmp
rorb
es
fcomip
out
and
orl
jmp
lods
shlb
incl
add
xor
cmp
mov
adc
add
leave
test
inc
out
ret
mov
lahf
cli
lret
out
jne
icebp
inc
mov
popf
insb
js
xorb
inc
xchg
cmp
inc
inc
enter
xor
aam
push
sbb
xor
inc
push
cmpsb
aaa
pop
push
stc
test
fmull
les
loop
pop
out
cmpsl
rcll
jo
out
lods
sbb
and
mov
ret
inc
inc
mov
subb
orb
jns
les
mov
or
xor
xchg
push
shrl
add
rclb
pop
out
pop
push
pop
adc
bnd
ret
lcall
xor
push
mov
mov
xchg
fsts
mov
sbb
idiv
mov
dec
pop
inc
subb
sub
cmp
fpatan
jnp
sub
mov
gs
inc
dec
or
inc
das
movl
pop
jae
leave
lock
mov
cmp
jo
mov
mul
add
xchg
inc
int3
mov
xor
jne
lcall
ja
insl
mov
movsl
or
xchg
les
push
repz
mov
xor
dec
mov
decb
sbb
jecxz
imulb
pop
jge
sub
movsl
mov
cmp
add
ja
call
lods
push
ret
jmp
push
sbb
mov
mov
outsb
fimuls
test
nop
fcoml
out
sbb
ret
dec
rorl
cmp
in
push
mov
fstpt
jmp
stc
je
jb
aas
xchg
lea
aad
adc
stos
dec
mov
mov
xchg
cs
shll
push
dec
dec
or
mov
lahf
mov
mov
jle
dec
mov
inc
pop
cmp
push
jbe
jge
jnp
cmp
das
xor
stos
movsb
sub
das
lock
or
mov
pop
aas
mov
xor
dec
mov
daa
pop
dec
int3
mov
mov
xchg
lret
std
xchg
or
mov
sbb
mov
cmp
xor
lret
lods
or
pop
nop
cwtl
push
inc
aad
inc
repnz
in
roll
sub
loop
rcll
inc
and
jmp
mov
js
int
imul
icebp
pop
cmp
xor
mov
out
inc
push
xchg
pop
cmc
pop
lret
loop
stos
jmp
ret
ss
sub
call
adc
xchg
cmp
xchg
pop
sub
pop
pop
push
test
cmp
mov
mov
jmp
call
lret
cld
sbb
lock
xchg
adc
aas
loopne
xchg
aam
xlat
mov
notl
push
stos
cmpsb
dec
lods
inc
or
cltd
loope
jle
arpl
xchg
dec
jle
out
mov
push
xchg
jle
repnz
mov
push
enter
sbb
pop
shrb
xchg
inc
mov
in
push
pop
scas
dec
hlt
outsb
sbb
clc
pop
sbb
test
jg
lds
dec
rclb
call
push
imul
in
movsb
mov
mov
pop
mov
test
push
movsb
xor
mov
gs
je
add
jecxz
mov
ret
mov
mov
or
mov
sbb
jo
mov
mov
scas
bound
lcall
out
adc
shl
jl
aaa
and
iret
push
mov
js
ret
push
push
cs
jne
shll
push
in
popa
out
mov
daa
lcall
addr16
aam
push
loop
lds
push
mov
sub
loop
into
push
mov
loop
sti
dec
shlb
jl
cmp
jb
xchg
mov
mov
mov
push
mov
or
in
or
mov
jecxz
push
mov
adc
roll
sbb
arpl
push
add
int
in
pop
jne
mov
pop
or
adc
insl
rcrb
jp
adc
test
sahf
es
adc
adc
push
adc
xor
aaa
jae
dec
pop
cmpsl
loop
mov
push
sbb
lahf
popa
ficompl
rcrl
jge
push
jns
sbb
mov
sub
inc
test
pop
int3
mov
pop
cs
lods
ret
leave
jl
add
pop
mov
sbb
pop
jecxz
xchg
adc
test
icebp
mov
add
push
in
xchg
xchg
sbb
xchg
add
aaa
pop
mov
mov
sbb
jp
mov
pop
pop
je
mov
or
mov
pop
xchg
jae
inc
mulb
or
and
push
xchg
scas
jno
and
sti
lods
flds
mov
fimull
push
mov
test
ss
or
mov
loop
inc
pop
sti
gs
test
orb
sub
pop
call
stc
lret
dec
xchg
movl
lock
lock
aam
dec
das
mov
or
lock
xlat
add
mov
repnz
popf
inc
ret
shrl
mov
cwtl
xlat
xchg
xor
fidivs
or
scas
jmp
dec
fwait
nop
inc
lahf
call
ficompl
sub
add
xchg
sub
cmp
ljmp
push
pop
in
mov
lods
jbe
push
jg
int3
mov
mov
cwtl
adc
pop
movsb
enter
mov
sbb
fldcw
fbld
fnstcw
insl
clc
push
mov
std
decl
dec
cmp
aam
jo
rcll
adc
push
je
out
scas
test
pop
jbe
or
jl
test
repnz
loopne
call
adc
pop
into
fisubl
insb
aam
add
pop
pop
xor
test
lods
xchg
pop
popl
pop
fcom
dec
int
ret
or
adc
cmp
xor
mov
cltd
jb
enter
xorb
les
pop
in
adcl
filds
xchg
call
lods
and
inc
dec
movsb
push
mov
ja
repz
push
es
testl
mov
add
dec
test
loope
jae
test
pop
fldl
sub
call
push
or
sub
dec
mov
jcxz
ss
sbb
inc
cmp
xchg
mov
mov
dec
int3
in
fidivs
push
lahf
and
nop
ja
out
ds
push
jl
add
faddl
sbb
dec
hlt
les
ljmp
jb
movsb
ret
jo
inc
jmp
pop
dec
adc
lea
or
push
xchg
mov
hlt
jg
in
xor
mov
mov
repz
push
add
in
shl
aas
std
scas
mov
jg
je
scas
ljmp
mov
test
push
xchg
mov
jne
pop
test
int
sub
out
xor
cs
ds
enter
sub
mov
cli
pusha
jns
inc
xchg
inc
stos
mov
push
sub
cwtl
fidivrs
js
ret
mov
jle
lret
iret
mov
sub
mov
or
inc
sub
cmc
outsb
sub
or
jo
adc
fmuls
push
dec
mov
jl
sti
adc
mov
jmp
adc
sbb
popa
ljmp
popa
hlt
sub
cmc
jl
dec
dec
jbe
jnp
test
mov
in
icebp
lock
movsb
insl
jg
mov
jns
outsb
sub
lods
pop
in
lods
push
testb
push
add
jmp
iret
lahf
bndstx
shlb
fcmovnbe
mov
push
xchg
push
mov
test
adc
loopne
subb
inc
inc
or
lea
es
fiaddl
jae
stos
and
xchg
sahf
mov
mov
xchg
xchg
lds
mov
bswap
mov
push
push
jl
inc
push
inc
stc
inc
test
aad
cld
out
addb
out
outsb
int3
inc
pop
or
test
inc
or
add
shll
push
and
mov
cmp
pop
outsb
fldenv
or
lea
inc
and
cmp
pop
ret
mov
dec
fdiv
fadd
outsl
bnd
sub
in
sub
and
xorb
insl
mov
cmpsb
int3
cmp
bound
add
pop
push
pop
call
xchg
mov
insl
or
xor
and
inc
xlat
fs
lahf
xor
clc
shrb
movsl
outsb
jns
int
add
jne
push
add
xchg
mov
shll
fisttpl
lahf
popf
xchg
inc
fs
loop
xor
jecxz
jl
ljmp
repz
cmp
add
sub
xchg
fcomps
cmp
mov
test
and
and
cwtl
jl
bound
inc
lods
mov
fcmovbe
mov
pop
fstps
pop
aad
lcall
pop
pushf
adc
adc
jmp
mov
fwait
fwait
jo
xor
leave
dec
int
add
pop
lcall
mov
jbe
inc
insb
ja
dec
or
push
in
xor
cmp
negl
out
dec
movl
push
mov
lahf
enter
into
mov
sub
add
pop
fisubrs
adc
and
ss
mov
push
mov
add
fwait
outsl
rcr
imul
fs
pop
mov
pop
repnz
loope
jmp
cmp
dec
mov
sub
imul
xchg
ret
and
pushf
lea
sub
mov
push
pop
mov
mov
pop
pop
ja
sub
es
mov
dec
mov
in
mov
ret
lcall
fmuls
lds
dec
movsb
nop
cmp
faddl
push
fisttpl
rolb
and
or
dec
cmp
repz
or
sbb
mulb
lea
pop
pop
xor
enter
cmp
jne
jb
dec
or
in
mov
sub
and
data16
or
test
inc
inc
mov
adc
pop
xchg
push
lcall
mov
lret
mov
imul
popa
int
sbb
rclb
scas
cli
cmp
add
xor
and
and
pop
cmp
xchg
jmp
test
scas
mov
outsl
loope
mov
fdivr
repz
fidivl
ficompl
ljmp
push
dec
rol
push
iret
jp
inc
cmp
jg
int
sub
imul
lret
cltd
dec
mov
dec
adc
xchg
push
and
add
add
imul
inc
sti
mov
fnstenv
sbb
xchg
xchg
outsb
dec
mov
add
mov
test
sub
pop
inc
sbb
cmpsl
cmc
adc
std
mov
pop
hlt
test
and
test
mov
test
loope
addr16
sub
mov
outsb
jmp
pop
pop
sbb
adc
jne
sbb
sbb
add
pop
dec
sbb
ret
cmp
sbb
xor
ret
faddl
int
xor
flds
xchg
into
gs
mov
cs
or
mov
jmp
out
adc
cmpl
jno
fnsave
mov
jb
dec
push
or
lods
movsl
icebp
xchg
push
outsb
push
dec
lahf
adc
int3
adc
mov
outsb
shlb
push
and
jae
sub
adc
or
ljmp
in
xor
out
mov
jo
and
jne
mov
movsl
xchg
mov
sbb
aaa
add
mov
sub
cmp
test
mov
fstpl
repz
cmp
pop
leave
or
outsb
cmp
cmp
test
pushf
dec
xchg
or
dec
or
and
ds
imul
mov
in
jns
aad
sub
cwtl
es
mov
pop
mov
xor
loopne
pop
jne
inc
cltd
pop
cli
je
xor
gs
sbb
test
not
out
setg
inc
xor
inc
mov
stos
push
or
lret
dec
rorb
daa
stc
jnp
loop
xor
mov
std
xor
add
jmp
lods
gs
out
mov
leave
mov
mov
or
sub
jle
push
pop
pop
mov
sub
mov
stc
push
mov
pop
xchg
xchg
inc
xor
adc
psubd
cmp
cmc
je
idivb
jne
popa
subb
daa
cmp
sub
push
leave
data16
mov
test
rorl
or
sti
inc
int3
jae
in
das
mov
bound
test
imul
test
inc
xor
mov
ret
cld
popa
mov
pop
icebp
lret
rorb
ljmp
fst
aas
out
daa
cmp
mov
jae
xchg
leave
lcall
inc
push
stc
push
mov
dec
lds
adcl
repnz
push
xchg
adcb
dec
fcomps
jnp
add
scas
fwait
mov
cmpsb
lock
and
jge
js
data16
mov
subl
add
ret
rolb
test
add
out
sbbb
xor
pause
lea
leave
pop
mov
xchg
sti
mov
adc
add
adc
iret
ss
adc
bound
mov
pop
mov
jb
dec
in
lcall
pop
pop
xchg
loope
push
jno
push
inc
call
rcl
test
aas
popf
jmp
cmp
pop
inc
push
js
aaa
xchg
dec
or
daa
lods
fmuls
fbld
sarl
bound
push
jo
stos
dec
cmp
repz
xchg
mov
lock
fmuls
je
sub
dec
dec
cltd
push
test
icebp
call
mov
sti
scas
xchg
test
mov
or
lret
imul
pusha
sahf
sub
and
mov
fstpt
pop
sub
cmpsb
fsubs
mov
mov
int3
mov
or
lds
push
icebp
xor
in
push
sbb
fiaddl
and
out
jno
imul
mov
lock
aaa
negb
cmp
stc
cmpsl
xchg
lahf
jge
loopne
add
sbb
inc
or
pop
and
aas
out
lock
and
icebp
mov
mov
push
outsl
xor
jmp
or
leave
ljmp
fs
insb
inc
push
mov
mov
ficoml
movsl
movsb
push
mov
adc
xchg
and
bound
push
idiv
and
cmc
xchg
lret
push
cmp
sbb
imul
xchg
addr16
mov
mov
cli
insl
jp
fistps
nop
outsl
call
add
punpckldq
add
or
ret
icebp
into
aas
dec
push
ja
push
ljmp
mov
movsb
aas
andb
mov
dec
and
scas
scas
gs
inc
mov
adc
cmp
push
jno
mov
pop
or
inc
adc
mov
mov
xor
xor
dec
into
mov
cmc
mov
cmpsl
fcoms
bound
clc
pop
adc
into
mov
mov
adc
idivb
inc
pop
sbb
lcall
daa
aaa
pop
dec
sbb
stos
pusha
sbb
rolb
outsl
mov
xchg
pop
push
rcrb
addr16
add
pop
add
lea
mov
les
mov
pop
js
inc
mov
add
or
insl
push
iret
sub
fwait
lret
jo
sub
pop
pop
add
or
push
pusha
pop
or
shll
int
pop
lds
mov
pop
and
mov
out
or
movsl
es
push
inc
loopne
xchg
ds
andl
outsb
and
mov
push
jle
mov
out
aas
pop
insb
movsl
fldl
sbb
imul
stc
or
cmp
push
popl
push
sti
jns
push
nop
inc
repz
push
lock
pop
cmc
and
dec
nop
call
xchg
sbb
xor
xor
cs
test
leave
pop
movsb
xchg
and
inc
mov
insb
out
mov
xchg
push
out
cmp
pop
cwtl
dec
mov
cmp
add
adc
jle,pt
ficomps
and
scas
mov
mov
ds
sbb
aaa
fstpl
inc
xchg
fs
repz
mov
dec
je
repnz
jns
mov
adc
pop
dec
cmpsb
sbb
sub
lcall
andb
je
movsl
jg
sbb
sub
cwtl
out
mov
push
addr16
loopne
dec
and
cmp
push
pop
pop
adc
mov
cmc
mov
jl
jge
jmp
cli
add
cwtl
jge
sbb
add
push
dec
mov
push
js
in
jl
sub
int
test
imul
lock
ljmp
sub
inc
out
out
jl
ret
fadds
pop
mov
pop
inc
push
fcompl
mov
push
cs
cmp
jge
int3
sub
bound
cmc
out
mov
js
sti
lds
pop
add
adc
ss
out
dec
roll
cwtl
jg
insb
dec
movsl
lret
shll
dec
leave
scas
test
xchg
push
gs
loope
lcall
mov
arpl
imul
and
jnp
sub
lret
mov
out
push
sarb
jge
fistpll
mov
cmpsl
adc
dec
cmpxchg
xlat
mov
fmuls
and
cmpsb
sub
xor
mov
stos
addr16
and
jmp
mov
rcll
mov
cmp
push
mov
jg
cmp
fwait
cmp
pop
fs
cmc
mov
xchg
ljmp
leave
mov
mov
fwait
sub
daa
movsb
cmp
test
fisubs
mull
xor
dec
mov
movl
mov
aam
jg
dec
cmp
call
popl
sbb
aas
cmp
gs
rcll
jnp
xchg
pop
js
imul
repnz
xlat
sub
mov
xchg
mov
xor
test
dec
fs
push
mov
jae
push
rcrl
add
or
fstpt
movsb
rorl
enter
adc
out
adc
je
cmp
sbb
sarl
and
fists
dec
sarb
lret
push
jnp
stos
jp
sub
pusha
mov
xlat
lock
mov
mov
and
rcll
daa
or
dec
add
inc
push
lret
sbb
aas
or
insl
imul
scas
test
add
scas
xor
jb
ret
xchg
aas
xor
ret
faddl
mov
jmp
mov
stos
mov
or
or
adc
cmp
cmp
sub
insb
inc
mov
sub
xchg
or
mov
pusha
pop
pop
xchg
and
nop
lcall
and
push
xor
mov
lret
sbb
imul
pop
incb
js
or
cmp
js
dec
push
push
fwait
out
adc
dec
fs
lock
jnp
jp
arpl
dec
and
mov
fwait
rorb
pop
xchg
cld
cmpsb
pop
xor
sar
cmp
mov
dec
or
sbb
xchg
cmpsl
add
outsl
xlat
and
adc
pop
fwait
and
and
jno
in
push
out
sbb
mov
sub
vpsubb
inc
push
push
test
cmp
cmc
mov
mov
cmpsl
pop
dec
mov
xchg
cmpsl
lods
push
xor
jle
sub
daa
aam
sbb
inc
stos
bound
xchg
cmp
in
lock
fwait
lods
mov
das
int3
pusha
lods
sbb
ss
dec
sub
jecxz
fadds
sub
aam
adc
movsb
gs
jae
cmpsb
popa
out
add
jo
fmul
mov
sub
sbb
add
adc
pop
inc
jnp
add
mov
adc
popa
mov
sub
inc
dec
int
enter
mov
imul
fcmove
lret
or
adc
inc
sahf
mov
jmp
addr16
jno
sbb
jg
sbb
imul
jne
adcl
pop
xor
push
mov
mov
and
add
fwait
lods
mov
fiaddl
loope
push
adc
jno
scas
mov
test
cmp
faddp
es
dec
push
lods
popf
cmp
ss
les
push
je
es
jl
mov
bound
jbe
cmc
push
test
stos
je
mov
xchg
loop
push
or
cwtl
lods
jmp
hlt
cli
push
mov
mov
cmp
mov
dec
sbb
push
cs
aam
pushf
dec
call
and
loope
jo
mov
mov
and
hlt
aam
lods
ret
push
adc
gs
jl
sbb
mov
pop
and
adcb
cltd
push
shlb
mov
sbb
mov
pop
pop
shlb
push
pop
sbbb
mov
and
dec
in
cmpsb
lods
ljmp
mov
fwait
divb
add
inc
add
andb
movsb
aaa
or
xchg
xor
mov
bound
or
and
push
shlb
sbb
cltd
movsl
cmovl
mov
rcrl
das
stos
daa
shlb
int
sbb
sarl
loope
std
roll
out
icebp
repz
xchg
call
in
ja
mov
pop
pop
jno
xor
mov
movsb
or
lea
out
adc
mov
mov
scas
pop
aaa
push
outsb
ds
adcl
push
push
cmpsb
sub
lods
cmpsb
or
enter
push
cmp
inc
pushf
movsl
shll
and
dec
fistps
sub
jmp
scas
and
imul
xchg
jp
lcall
xorb
push
aaa
and
in
test
dec
out
cwtl
xchg
jg
aam
subb
les
bound
shlb
shrb
inc
push
icebp
xlat
cmpb
jl
je
adc
aaa
lret
lea
mov
mov
add
aas
add
push
push
iret
or
xor
pop
fsubl
xchg
cli
jne
push
call
sub
pop
lret
mov
xor
jb
push
fsubrl
cli
stos
dec
ds
pusha
or
repz
and
jmp
clc
and
add
cmp
imul
dec
sub
inc
jae
inc
outsb
add
jb
mov
test
cmp
inc
dec
cltd
or
adc
jno
cwtl
and
loope
sahf
jle
movsl
mov
mov
cmp
leave
add
jge
int3
paddq
jle
sbb
sahf
xchg
into
sub
imul
cwtl
into
out
mov
dec
xchg
sbb
or
and
pushf
xor
lds
call
sbb
fcoms
test
pop
dec
ja
shl
loop
sbb
cltd
jbe
negl
cltd
int3
into
jo
jg
mov
sbb
fninit
mov
adc
xchg
sbb
jns
popf
and
shl
mov
outsl
dec
outsl
fildll
stos
lcall
movsb
cli
fs
xor
add
xchg
test
stc
push
cld
mov
push
adc
icebp
fsubrs
scas
mov
jmp
sarb
mov
xchg
jmp
xor
into
subb
push
lret
adc
mov
xchg
fisttps
test
xlat
out
movsb
sub
sbb
data16
in
call
cltd
hlt
fwait
sahf
notl
jl
dec
mov
xchg
in
shll
add
enter
rol
mov
cmp
sbb
ret
push
bound
in
ljmp
andb
je
push
sbb
mov
xor
and
repnz
pusha
ret
in
sti
loope
mov
std
cwtl
sti
xchg
dec
stos
or
lcall
push
repnz
xchg
adc
arpl
mov
lock
xchg
push
cld
add
out
into
and
sbb
ljmp
stos
stc
mov
xor
push
call
add
mov
daa
pushf
packsswb
stos
push
std
xor
iret
jns
add
xchg
fldcw
xchg
add
rclb
in
hlt
and
ja
mov
push
enter
inc
enter
sub
xlat
push
adc
aad
je
nop
xchg
cld
or
or
add
or
push
out
sub
shll
pop
addr16
jnp
mov
add
mov
push
icebp
daa
fs
or
aad
scas
cmpsb
xor
in
fdivrl
daa
hlt
mov
sbb
call
inc
lods
xchg
jno
lret
jge
fs
mov
std
lea
lods
lds
mov
aas
push
fwait
out
add
icebp
push
inc
cli
or
xchg
lods
insb
je
pop
cmp
sub
ja
sti
adc
pop
das
mov
scas
xchg
leave
daa
dec
lcall
outsb
insb
dec
pop
cmc
push
sahf
mov
sub
arpl
ss
cmp
fldenv
nop
ss
rorb
jp
push
pop
std
popa
lahf
push
jmp
sbbl
sbb
cmpsb
xor
jmp
and
dec
jae
mov
jns
sbb
jo
ss
push
xor
call
mov
int
hlt
push
xlat
inc
cmp
adcl
adc
add
push
jg
pop
enter
xchg
mov
push
jp
xchg
sbb
mov
mov
psrld
fisubrs
inc
sub
sbb
and
idiv
shlb
test
dec
sbbl
gs
movl
cmp
pop
mov
mov
icebp
shl
jo
mov
push
sbb
xor
les
ret
dec
pop
mov
in
xchg
push
int3
mov
pop
popa
adc
stc
lods
add
pop
jmp
outsl
push
lea
testb
lret
int
shrd
mov
stos
mov
and
pop
lock
inc
and
in
sbb
pushf
or
sbb
loop
mov
dec
jb
int
ds
jle
push
adc
adc
faddp
daa
xchg
imul
pmaxub
outsb
and
ss
or
sti
or
cmpsb
and
xchg
inc
dec
ljmp
ljmp
scas
jl
nop
xor
add
inc
sbb
ret
add
loop
mov
xchg
mov
fs
setp
mov
nop
jbe
push
dec
mov
stc
xor
add
lods
push
and
mov
or
stc
and
add
adc
xchg
cmp
push
pop
jge
and
push
dec
pop
cmp
arpl
and
jae
xor
cmp
cmpsb
stc
pop
cmpsb
jo
sbb
push
fadds
fstps
testb
mov
lods
ja
cmp
rclb
clc
fists
stc
inc
push
dec
dec
into
add
idiv
insl
fmulp
out
lock
jae
lds
mov
test
call
sub
dec
sbb
daa
jge
mov
aam
scas
jmp
pop
adc
or
cmp
sub
rcrb
mov
pop
mov
cmp
pop
fidivrl
push
das
push
mov
push
mov
in
jno
std
es
sahf
movsb
jb
movsb
mov
dec
ret
cmp
in
mov
fsubrl
popa
or
mov
fcompl
adc
stc
int3
xor
push
xchg
pop
jno
addr16
xor
or
jno
in
push
std
shl
dec
dec
mov
dec
inc
hlt
sub
daa
loopne
popa
lcall
push
popa
dec
clc
int
aad
inc
ds
push
mov
pop
insl
mov
arpl
push
aas
loop
es
outsb
push
mov
mov
and
inc
inc
add
dec
ja
inc
gs
and
pop
bswap
xor
rolb
mov
fucomi
mov
repz
ret
shr
jo
test
ret
ret
aad
call
aam
xchg
add
dec
or
dec
mov
popf
xor
movsl
push
sbb
ret
mov
and
nop
jb
cld
stc
mov
sbb
imul
adcl
out
testb
pslld
addr16
push
dec
stos
pushfw
lahf
out
rolb
adc
cld
xchg
mov
cmp
pop
dec
std
std
xchg
ret
lods
and
aaa
sahf
mov
mov
cs
or
js
and
jno
or
cmp
outsb
pushf
into
push
inc
pop
pop
bsf
sub
push
mov
or
fbld
jo
fbstp
pop
jp
add
jge
dec
inc
stos
pop
sbb
jg
ret
pop
mov
inc
xlat
sbb
lods
push
stos
sbb
dec
mov
popa
jns
inc
sub
sub
cmc
xchg
test
loop
jp
xchg
pop
sub
sti
lds
scas
adc
sbb
mov
sahf
lea
and
pop
xor
mov
mov
stos
leave
clc
push
pop
rcrl
clc
out
and
sub
push
pop
push
mov
jmp
mov
scas
lcall
mov
pop
stos
outsb
fs
js
xlat
adc
jnp
bound
cmpsl
jmp
scas
nop
pop
push
xchg
icebp
push
dec
dec
jno
mov
rolb
out
dec
cmp
dec
sub
mov
and
mov
clc
mov
es
push
mov
insb
out
insb
sbb
push
fcoms
cmp
fimull
mov
mov
jecxz
cmpsl
cmpb
mov
and
jmp
addr16
xchg
mov
popf
adc
sbb
sbb
inc
pop
jnp
dec
repnz
in
iret
add
jne
inc
mov
push
scas
xor
mov
ret
mov
icebp
jbe
fnsave
clc
imul
xabort
add
shlb
das
mov
mov
cld
mov
cltd
xchg
sbb
std
sbb
mov
pusha
pop
ljmp
mov
push
pusha
push
aam
lea
shr
or
outsl
pop
or
jne
and
cmp
mov
ret
popf
gs
pop
sbb
cmpsb
adc
add
push
and
mov
or
adc
addr16
mov
and
scas
enter
shlb
andb
sbb
xor
call
push
sti
out
push
mov
test
aam
jle
add
xchg
je
pop
lcall
lds
push
dec
mov
jmp
mov
sbb
push
jmp
mov
popa
jne
iret
in
sahf
jecxz
mov
outsl
mov
aas
dec
cmp
gs
xchg
cmpsl
les
pop
dec
or
adc
nop
sbb
mov
add
sbb
mov
adc
mov
jns
daa
test
pop
subl
mov
fbstp
xchg
jb
mov
jno
push
inc
mov
sub
jg
ficomps
mov
lret
clc
das
test
fsts
in
jae
jmp
xlat
mov
inc
int3
jno
daa
into
xchg
mov
fistps
push
dec
cmp
sub
xchg
adc
xchg
insb
xchg
fcoms
mov
and
inc
pop
fistps
mov
xchg
lea
push
roll
dec
and
xchg
sar
pop
jne
scas
xchg
mov
mov
add
and
incb
fstpt
jge
jb
xchg
mov
pop
in
les
lods
adcl
lods
insb
fwait
xchg
mov
cmp
lea
loopne
aaa
mov
cwtl
in
mov
jns
jecxz
in
cmp
outsl
outsl
fsubrl
xor
repz
into
sahf
ret
gs
das
cmp
int
loop
xchg
shrb
push
jns
push
sbb
jae
js
popf
mov
add
popf
std
cltd
cmp
in
mov
sub
idivl
sub
push
leave
xor
dec
push
icebp
shrl
popa
push
icebp
popa
icebp
or
or
pop
push
or
inc
sahf
cli
or
mov
xchg
pop
sti
test
sub
mov
mov
push
push
dec
push
data16
das
inc
dec
push
inc
push
dec
in
out
mov
fcoml
outsb
cmp
test
lcall
in
clc
lock
push
mov
cli
inc
shll
cmp
sub
sub
sar
fnstsw
pop
fcmovnu
ret
out
mov
incb
jne
movsb
push
xor
insl
rol
lds
mov
and
cmp
jnp
jge
lret
jne
sti
jge
dec
adc
jmp
inc
ds
inc
or
pop
in
fistl
int3
jns
mov
pop
and
or
fsubrl
dec
je
mov
enter
orl
ret
push
outsb
add
out
in
mov
dec
mov
add
mov
lea
sbb
repz
pushf
cmp
add
rorl
insl
nop
ffreep
inc
inc
push
sbb
dec
pop
std
jp
cmpsl
inc
xadd
pop
or
mov
clc
addr16
sbb
test
fisubrs
mov
mov
je
js
sbb
pop
sahf
leave
pushf
push
ja
js
insb
cmp
mov
cmp
jge
pop
jmp
and
std
cmp
scas
mov
jne
test
jg
stos
lcall
lods
bnd
mov
sub
push
mov
cmp
xor
xchg
push
push
decl
cmp
xchg
fs
sahf
inc
fdivrl
dec
bound
andnps
addr16
adc
shll
pop
push
aaa
adc
out
adc
ss
aas
stos
xchg
lods
aaa
fucom
adc
dec
scas
insb
add
aaa
adc
xchg
ds
mov
jb
in
xchg
xchg
cmp
add
shll
push
outsb
pop
jmp
aad
and
dec
and
loope
pusha
pop
or
out
sahf
inc
mov
pop
rorl
jns
sub
hlt
fstpl
data16
pop
cwtl
dec
adc
sti
inc
xor
xor
aaa
pop
mov
orl
mov
loopne
dec
es
fisttps
and
in
dec
lock
dec
sbb
into
outsb
inc
xor
je
jae
inc
push
add
mov
int
xchg
rorl
sbb
loopne
sbb
adc
mov
mov
arpl
dec
int3
outsl
xchg
lds
mov
xor
pop
in
and
push
mov
jl
std
push
xor
idiv
push
pop
lret
test
shlb
add
pop
fsubrl
inc
mov
jne
cmp
mov
scas
mov
mov
arpl
sub
in
out
sbb
testl
fldlg2
inc
mov
add
jge
test
adc
aaa
jb
sub
dec
adc
imul
adc
movb
testl
inc
mov
dec
mov
or
push
sarl
mov
cmp
cs
aad
imul
loop
mov
stos
andl
add
sbb
cmp
mov
mov
call
lea
gs
jne
xor
cld
lods
dec
sub
in
mov
je
rolb
mov
int3
cltd
icebp
add
and
dec
sbb
or
out
ds
movl
inc
popa
imul
xor
and
roll
dec
fwait
dec
popf
jl
hlt
and
imul
and
mov
sub
cmp
mov
dec
lret
cmp
outsb
out
add
xor
ljmp
and
imul
xchg
dec
cmpsl
lods
lock
mov
sbb
mov
mov
hlt
fs
inc
lret
into
pusha
movsb
scas
and
xchg
dec
ljmp
jae
xchg
ljmp
inc
mov
stos
pushf
repnz
mov
lret
in
leave
mov
jo
mov
inc
popf
int
mov
addb
fldenv
push
pop
mov
enter
push
jo
outsb
in
pop
cmp
cmp
add
iret
and
or
movsl
pusha
xor
mov
dec
test
sub
jno
adc
jnp
int
push
sbb
mov
jecxz
pop
imulb
xchg
jg
in
mov
add
cmp
aad
pop
testl
inc
adc
out
inc
mov
and
adc
push
imul
mov
dec
lret
pop
bound
jo
cs
add
add
in
aas
lcall
hlt
popf
adc
push
dec
jno
or
jne
xor
inc
add
pmulhuw
mov
mov
out
repnz
or
movl
add
stos
test
arpl
jb
xlat
mov
data16
pop
inc
lock
add
imul
dec
and
inc
inc
push
mov
je
xchg
data16
leave
lret
push
orl
xchg
add
fnstsw
int3
es
push
pop
sahf
sbb
mov
xchg
pop
test
scas
ficoms
fstl
push
shrl
aas
jle
push
test
data16
mov
popa
push
dec
ror
mov
inc
mov
push
inc
imul
add
fdivl
nop
std
push
shlb
dec
mov
mov
sahf
xor
push
adc
mov
mov
push
cmp
mov
xor
cmp
mov
adc
aam
jns
mov
and
test
hlt
pop
nop
hlt
and
mov
push
fstp
mov
sbb
cmp
push
pusha
push
xlat
movsl
lea
mov
xor
or
push
jne
adc
bound
inc
rorb
pop
jmp
iret
push
cmpsl
push
cmovns
or
in
mov
sbb
nop
mov
iret
pop
mov
cmp
in
adc
ret
adc
cmp
jb
adc
push
addr16
pop
mov
pop
push
ror
outsl
jmp
ret
dec
dec
lcall
push
test
jecxz
jle
dec
fs
adc
sub
arpl
test
add
repz
and
fwait
lds
adc
and
sbb
scas
jge
call
sbb
in
shlb
sub
jmp
jbe
in
out
pop
int3
mov
mov
fstp
mov
lahf
ficoms
cmp
xlat
enter
adc
aad
push
push
sbb
push
jle
fs
lret
fs
adc
fcoml
mov
imul
xlat
sub
xor
nop
in
pop
lods
fmul
xchg
fmulp
and
into
or
test
sub
pushf
adc
repnz
mov
sub
addr16
xchg
fs
cwtl
fisubrl
lods
mov
out
loopne
add
gs
push
repnz
icebp
xchg
repz
loope
outsb
jecxz
shl
push
cmp
nop
mov
or
inc
cmp
fdivr
shl
fwait
loopne
adc
test
fwait
scas
popf
stos
xchg
jbe
loope
fiadds
cld
rcll
hlt
inc
push
inc
push
jg
inc
adc
fmull
and
shll
daa
or
ds
mov
int3
mov
rcrb
lock
or
movsb
movsb
adc
notb
or
icebp
push
test
sub
xchg
mov
inc
mov
pushl
or
pop
popf
int
outsb
xchg
mov
mov
mov
xlat
lds
fnsave
into
push
xchg
inc
lahf
je
adc
fadds
and
jns
mov
pop
sub
pop
mov
xor
mov
mov
inc
jge
push
fidivrs
cmp
sub
adc
mov
lahf
and
xchg
push
mov
push
and
movsb
cmp
cmp
fcompp
testb
cmp
xor
pusha
xchg
iret
loop
sbb
inc
das
mov
push
in
mov
sub
loope
dec
lock
xchg
jne
in
sbb
fwait
mov
jne
add
stos
out
add
sub
and
sbb
fs
fldcw
loope
lcall
out
dec
or
shrl
jbe
js
out
lahf
xlat
repnz
loop
push
aad
sbb
inc
push
and
jmp
rcrb
insl
mov
insb
ljmp
movaps
data16
mov
outsb
ret
lret
popa
xchg
sub
adc
push
mov
dec
adc
in
andl
mov
dec
fs
xor
fdivl
fucomip
xlat
push
or
mov
stc
nop
push
xor
mov
jl
cmp
xchg
xor
sbb
test
cmp
lahf
insb
cpuid
cwtl
icebp
jno
sub
das
mov
sbb
sbb
loopne
or
aaa
or
insb
dec
dec
push
pop
add
adc
addb
dec
ljmp
ret
cmp
leave
or
adc
aad
ljmp
add
daa
lods
push
or
insb
enter
add
cmp
fs
dec
and
dec
pop
jns
sbb
inc
mov
dec
xchg
data16
adc
mov
cs
ss
filds
pop
mov
sbb
jbe
lods
inc
push
sbb
orl
nop
movsb
rcrb
adc
in
inc
inc
ficoms
call
jl
push
jae
fldcw
adc
dec
lods
sti
push
adc
adc
stc
inc
push
ret
cwtl
leave
fcmovb
fbstp
in
add
jb
pop
push
cmp
mov
out
inc
mov
lret
add
clc
or
inc
mov
inc
jnp
lahf
pop
dec
test
add
xchg
sbb
sub
jo
nop
sti
push
xchg
insl
mull
jg
sti
mov
sub
movsl
mov
cmc
nop
gs
xchg
xchg
test
inc
aas
sbb
sbb
mov
cmp
jecxz
xor
inc
cwtl
mov
icebp
addr16
pop
push
or
cmc
xchg
aam
loope
mov
and
xor
xor
loop
cli
shrl
les
sbb
repnz
imul
mov
test
lret
in
mov
pop
mov
fadd
mov
push
enter
mov
sbb
and
jbe
xor
push
mov
add
imulb
inc
in
pop
mov
xchg
arpl
or
jmp
ret
sbb
mov
xchg
xchg
jnp
or
popl
push
adc
mov
jmp
fnstsw
dec
stc
mov
push
rcrl
icebp
mov
jne
mov
je
inc
xchg
fwait
into
mov
test
fldenv
pop
idivb
and
pusha
fwait
sahf
pop
jno
jo
iret
out
loopne
ret
stc
push
lcall
das
mov
notl
push
sti
sti
pop
sbbb
push
or
xchg
ret
sub
push
mov
lahf
fwait
jo
mov
pusha
pop
adcb
add
in
mov
cltd
xor
add
iret
lret
and
nop
inc
jbe
stos
jmp
sarl
lock
out
cmp
mov
cmp
imul
jnp
pop
inc
or
in
ds
rcpps
push
xor
sub
ds
or
add
lcall
lea
loopne
or
shr
mov
fildl
fisttpll
xorb
push
sbbb
out
inc
push
pop
in
or
and
and
cld
repnz
rol
mov
sbb
in
les
ficomps
xchg
andb
push
cld
inc
arpl
mov
out
stc
repz
dec
mov
jg
xchg
pusha
push
popf
imul
sub
xchg
cwtl
mov
xor
and
add
push
popf
inc
pop
aas
pushl
rcll
adcl
mov
dec
sub
inc
xor
icebp
subl
cs
daa
mov
inc
pop
and
dec
cmc
movsl
subb
push
fldl
bound
xor
imul
mov
cwtl
ljmp
das
inc
add
stos
mov
loop
loop
test
ja
pop
das
or
ret
pop
gs
jg
loopne
fisttps
add
jae
cmpsb
xor
test
mov
dec
loope
inc
outsl
fistps
out
inc
adc
xchg
xor
aad
in
xrelease
loope
es
cmp
inc
lahf
fwait
inc
rcrl
out
mov
jl
push
sub
mov
rcr
lcall
mov
repnz
sbb
xchg
shrl
jmp
es
xor
popa
insl
jo
push
ret
sub
outsl
jns
mov
std
mov
jp
jno
call
sbb
xchg
mov
or
xchg
ret
push
mov
nop
pop
mov
xor
fdivr
adc
jl
dec
mov
mov
roll
loopne
pop
popa
pop
outsb
mov
or
lret
jle
fmull
iret
mov
push
or
repnz
mov
sbb
push
sarb
fmuls
adc
pop
hlt
call
test
push
sub
clc
dec
imull
sub
xchg
dec
push
sub
lea
adc
stos
dec
cmp
fwait
or
mov
dec
mov
ja
fwait
cwtl
mov
sbb
js
das
jp
stc
or
stos
push
adc
add
nop
rorb
pop
and
mov
jo
lcall
xchg
int3
mov
mov
push
ret
jne
push
fcmove
mov
add
mov
ret
xor
mov
cmp
out
push
mov
xchg
sahf
les
jmp
sub
outsb
dec
sahf
push
or
push
cmp
cld
shrb
shrb
clc
loope
shl
mov
inc
sub
ret
jecxz
sub
xchg
loop
sbb
je
sub
sub
nop
pop
cs
dec
jle
xchg
movsb
popa
mov
sbb
mov
cld
xchg
divl
sbb
test
outsb
das
imul
mov
push
jno
bnd
xchg
in
push
scas
cmp
ja
rcrb
cmp
jo
hlt
adc
jmp
int3
cmc
imul
enter
shlb
cmp
cmp
movsl
xchg
mov
outsb
clc
fsts
nop
fdivs
pop
xchg
insb
cmp
jbe
popf
mov
imul
adc
sbb
cmpsb
cmpsb
rol
add
int3
loopne
cmc
push
icebp
pop
or
fldl
pop
shll
out
rorb
mov
out
aas
mov
cmpsb
adc
and
sub
js
add
jbe
xor
mov
movsl
push
sahf
inc
mov
lock
push
ss
pop
and
jae
or
fstpl
xor
in
or
pop
divb
mov
lods
xchg
fadd
lret
mov
out
repnz
sub
pushf
mov
pop
dec
jg
mov
adc
jge
mov
rorb
sub
lods
mov
adc
dec
pand
insb
daa
insb
push
xchg
fs
inc
sub
shrb
fwait
add
cli
inc
sbb
sub
jne
loope
pop
aad
mov
pop
dec
insb
cmpsb
call
sub
loopne
das
and
aam
mov
aaa
sub
xchg
hlt
scas
aam
loopne
push
mov
sub
loopne
or
jp
dec
adc
scas
adc
sub
cmpsb
js
int3
into
mov
xor
xlat
popa
push
or
or
mov
and
push
or
cmp
mov
push
add
lock
cmp
xlat
mov
shll
ljmp
add
push
inc
sbb
icebp
mov
xor
xchg
push
fs
sub
repz
pop
cmpsl
cmpsl
mov
outsb
mov
test
shlb
les
pop
mov
xor
or
mov
rcrl
call
stos
pop
jno
adc
push
mov
mov
cmova
and
and
mov
cli
fcomps
adc
dec
xchg
loope
out
rcl
adc
movhps
mov
aam
jne
rorb
or
sbb
enter
push
or
inc
sbb
cltd
scas
ss
jnp
sbb
lea
lret
out
adc
ss
ds
add
subb
fwait
aad
mov
mov
inc
pop
xchg
mov
sbb
cmpsb
push
jne
pop
jno
data16
sbb
adc
jae
push
lock
push
lds
aas
xor
mov
out
mov
cmp
jb
sahf
sbb
jmp
xchg
sbb
inc
out
mov
sub
fimuls
cmp
adc
and
adc
imul
test
fisttpll
sbb
adc
outsl
js
lods
or
xchg
and
add
jnp
or
xchg
fadd
std
mov
xchg
jb
sahf
movb
pop
iret
adc
mov
subl
in
adc
sbb
jae
fwait
ja
shll
scas
ficoms
inc
push
ret
sbb
out
imul
stc
out
or
pop
and
cwtl
and
inc
loope
or
and
mov
insb
add
int
push
mov
push
fldt
jns
cs
adc
negl
cmp
aam
sub
imul
movsb
lock
js
cld
leave
mov
jmp
sub
mov
xor
in
mov
cwtl
fistpll
jle
push
adc
sub
jmp
mov
and
pop
sbb
out
testl
cmp
fstpt
js
dec
je
aad
fidivs
rclb
xchg
push
cmpsb
inc
roll
popf
mov
adc
dec
sbb
das
leave
push
sbb
mov
mov
xchg
out
or
pushf
xchg
loope
fs
ds
outsb
xchg
es
or
push
xor
jecxz
lcall
ljmp
add
push
jbe
dec
addr16
fadd
repz
dec
out
xor
or
leave
pop
sahf
and
call
mov
inc
sahf
sbb
push
insb
or
push
pushf
loop
mov
pop
aad
lods
test
leave
fsubs
mov
icebp
scas
mov
stos
xor
fwait
popa
push
add
dec
and
add
mov
nop
sub
loope
xchg
or
jo
adc
xor
push
dec
push
or
insb
movsb
pop
int
cltd
lods
lds
dec
cmpsb
std
pusha
sbb
std
lcall
pop
cmpsl
add
xchg
inc
sbb
les
leave
and
sub
push
jne
shll
aas
in
cmpsb
mov
cmpl
push
push
ret
nop
outsl
inc
int
xchg
aad
and
mov
pop
fcompl
jmp
or
lds
dec
mov
cmp
inc
mov
xchg
mov
xlat
pop
imul
insl
inc
out
lahf
leave
dec
add
xor
dec
movl
and
mov
ficoms
jo
fucomip
sarl
arpl
or
ficompl
inc
mov
or
mov
enter
mov
sbb
rcrb
jb
stc
into
icebp
mov
in
addb
pop
xlat
and
mov
pop
add
scas
call
dec
push
mov
subl
adc
jb
cmpsb
bound
mov
cmp
enter
jbe
dec
xchg
int
mov
stos
jle
popa
sub
lods
xor
jmp
rclb
add
sbb
jg
cmpb
push
out
sahf
in
jae
cmp
dec
pop
dec
imul
fucomp
adc
mov
or
stos
adc
mov
mov
sub
iret
push
lods
jl
lea
xchg
lock
add
iret
cli
call
imul
adc
push
out
fsubs
scas
dec
mov
and
lock
adc
xor
lods
push
add
dec
fsubrp
jp
roll
jae
inc
sbb
lahf
pop
rcr
pop
jne
popf
loope
les
mov
lret
loop
lock
jns
jp
cwtl
ret
aad
aad
jge
shlb
ljmp
cmp
mov
pop
dec
or
pop
popf
ds
mov
lahf
mov
int3
test
fldcw
int3
outsl
jmp
push
stos
lea
cmc
call
inc
pop
mov
arpl
cmp
rcr
inc
push
push
xor
je
sub
ja
push
mov
pop
push
cld
jno
call
call
or
jle
insb
mov
and
pop
lock
aas
fistl
cmp
daa
cwtl
adc
mov
jp
sub
lock
sbb
loop
pop
push
jae
pop
inc
outsl
data16
mov
rol
mov
and
xchg
pop
mov
lea
cs
cmp
sbb
dec
movsb
push
pusha
dec
pop
in
or
or
ja
jmp
stos
aam
imul
lcall
mov
test
pop
pop
dec
inc
add
xor
dec
je
lods
push
dec
decb
sub
mov
mov
lahf
and
xor
xchg
jnp
and
xchg
pop
jno
stos
or
jmp
add
insl
adc
adc
cwtl
rcrl
mov
jbe
cmp
pop
inc
dec
cs
ds
cwtl
imul
sub
andb
out
mov
rcrb
out
decl
pop
iret
insb
insb
mov
movsl
in
mov
pop
loopne
xchg
mov
lret
mov
and
icebp
ret
out
mov
popf
gs
add
xor
xchg
movsb
popa
outsl
pop
xchg
stos
les
push
dec
leave
ret
les
nop
adc
cmc
movsl
and
mov
push
movsl
out
xchg
cmp
sub
out
mov
lret
jbe
mov
test
int3
stc
cs
or
and
or
js
push
cmpsb
imul
xchg
xor
ss
adc
push
mov
jns
sahf
das
jecxz
or
bound
push
mov
adc
pop
cmpsl
push
sub
dec
mov
inc
cwtl
push
das
mov
jecxz
jb
xor
sbb
cmpl
fdivrl
add
pusha
sbb
push
es
push
mov
daa
push
mov
mov
out
call
mov
cmpsl
loope
xchg
xchg
out
jmp
or
std
push
sahf
mov
inc
xchg
push
add
pop
jb
inc
xchg
or
sub
mov
leave
hlt
in
movsb
lock
jbe
inc
lret
push
outsl
movsb
fists
and
das
xchg
jne
xchg
leave
mov
in
popf
cmp
ss
in
add
loopne
push
cmp
das
jmp
jns
int
cwtl
out
adc
and
mov
pop
shlb
shll
cld
test
xor
es
cmpsb
pop
add
jg
test
xor
mov
and
inc
xor
sbb
push
loope
pusha
jbe
arpl
stc
into
fdivrl
adc
lds
aam
mov
clc
aad
mov
sub
or
into
or
scas
ljmp
jle
or
pop
fisttpll
and
or
adc
aam
jnp
scas
mov
movsb
enter
insb
pop
push
inc
add
in
mov
push
lcall
lea
shl
jmp
mov
rcll
adc
rorb
mov
cmp
imull
jno
cmp
js
ficoms
mov
jno
inc
or
jp
test
dec
inc
cmp
pop
out
mov
pop
lcall
test
cmp
dec
push
add
push
mov
sbb
popa
adc
test
lahf
cmp
sbb
mov
sarl
stc
dec
fcmovnbe
dec
jno
jnp
adcb
call
cmp
xor
stos
out
icebp
repnz
mov
cmc
cld
lahf
loopne
lds
into
push
into
jno
insb
outsb
cmp
xchg
fisubs
icebp
ret
push
repnz
lds
test
in
adc
jo
mov
repz
aas
jnp
jns
cmp
inc
data16
cmpb
mov
adc
jmp
adc
push
pop
cs
mov
ret
not
pop
lret
jne
cli
sbb
aas
jne
daa
outsl
int
cmp
je
jbe
adc
imul
fs
in
and
out
mov
or
push
adc
loop
vpunpckhqdq
dec
andl
mov
sub
push
push
fcmovnbe
xor
lds
dec
testb
cmpsl
insb
xor
in
sbbl
mov
adc
mov
cmp
jb
mov
mov
repz
and
in
sti
push
ss
inc
rorl
pop
mov
ds
not
jle
adcb
ds
and
xor
and
fdivrl
adc
leave
cli
je
mov
lock
or
mov
mov
faddl
imul
in
aaa
and
in
and
sahf
sub
bound
sub
orb
lock
mov
mov
ja
dec
je
xchg
mov
mov
sub
movsb
sti
jno
or
xchg
sti
sub
dec
ret
pushf
popf
mov
out
add
pushf
lods
mov
popl
adc
mov
dec
iret
sbb
or
add
std
mov
lods
push
fsubl
adc
adc
popf
lods
stos
xor
inc
xchg
icebp
add
jne
adc
es
cmc
xchg
inc
stc
fwait
inc
pop
sbb
inc
jno
xchg
fabs
iret
pop
sbb
bound
loopne
orb
ret
inc
addr16
loop
lahf
ds
jno
push
test
das
or
push
enter
push
push
sbb
imul
out
jge
fldt
icebp
inc
push
push
pop
push
jbe
popf
ret
push
cmp
push
fcmovnu
jl
data16
jecxz
jecxz
mov
sti
in
xchg
outsl
call
pop
call
pop
pop
pop
stos
movsb
ret
adc
or
and
lret
mov
rcrb
pusha
icebp
xchg
jno
pop
jle
jns
orl
mov
rcll
sub
dec
jp
cwtl
mov
rcrl
mov
mov
fisubl
cwtl
test
jno
cmp
in
movsl
adc
in
cmp
xchg
mov
jne
xchg
adc
movsb
push
xor
or
lods
cwtl
notb
rorl
mov
lret
loopne
cmp
fistpll
inc
mov
lret
rcrl
aas
mov
outsb
pop
xchg
mov
cmp
xor
mov
inc
aas
mov
dec
pop
out
outsl
xchg
scas
mov
lahf
mov
xor
add
mov
stos
loopne
pop
mov
ret
inc
jecxz
nop
stos
pop
nop
jge
mov
shll
imul
xor
xchg
pop
adc
pop
rcr
hlt
or
call
hlt
pop
push
roll
nop
mulb
shl
cltd
incb
inc
dec
sbb
cmp
and
mov
sbb
push
fwait
lea
rcrb
jge
aad
mov
test
push
mov
push
sahf
xor
loop
or
dec
and
popf
ret
push
jo
and
fucom
jns
dec
add
or
jmp
jge
hlt
and
and
xor
cmpsb
es
repnz
sub
loope
out
shlb
and
mov
xor
sbb
gs
adc
inc
mov
adc
xor
lret
mov
das
ja
mov
mov
orl
aas
push
arpl
into
ret
repnz
mov
in
inc
popa
or
scas
xchg
fldenv
adc
pop
in
mov
xchg
mov
mov
sub
xor
xchg
icebp
sbbl
add
mov
jp
shr
mov
movsb
fs
pop
imul
lcall
inc
insl
in
jg
add
xor
fs
xor
int3
stc
sarl
mov
push
mov
fisubs
mov
loop
push
int
and
mov
cltd
push
cmpsl
hlt
adc
cli
sbb
es
lret
inc
icebp
mov
int3
es
mov
lods
pusha
mov
sub
mov
inc
adc
adc
mov
dec
arpl
adc
sahf
out
mov
inc
jg
aam
aas
lea
mov
add
xor
and
adc
adc
jge
fcomps
jbe
jbe
xchg
aad
mov
lock
push
fs
or
jb
js
cwtl
gs
negb
incb
aas
cmp
dec
iret
pop
and
add
add
xchg
scas
into
es
cmpsb
mov
jo
sub
mov
mov
mov
push
fiaddl
dec
xchg
mov
adc
inc
repnz
test
jae
dec
fdivr
fstps
sub
out
call
ja
xor
in
xchg
sti
shl
scas
push
add
hlt
pop
cmp
shl
and
cwtl
movsl
add
xor
cld
icebp
xchg
mov
int
nop
mov
xor
leave
mov
dec
arpl
repnz
pop
movsb
cmc
cmp
jecxz
xor
or
push
push
mov
sbb
icebp
sbb
fdivs
loop
pop
jg
push
pop
cld
dec
pop
fs
jg
push
cmc
rcrb
pusha
out
push
adc
rorl
addr16
adc
ret
jb
scas
fsubs
mov
in
jl
mov
sbb
repnz
aaa
sti
lds
lcall
or
fstl
adc
or
insl
ret
dec
add
scas
fs
mov
sbb
sti
fistps
outsb
mov
xchg
push
push
jae
push
push
push
out
jnp
gs
push
xor
push
mov
jne
out
add
cli
add
mov
cmp
bound
mov
mov
jo
inc
pop
das
push
out
jns
bound
int3
sub
imul
test
inc
in
loopne
lods
xchg
shrb
or
add
gs
decl
int
insl
cmp
lds
ds
sub
ss
add
test
fiaddl
sbbb
mov
or
inc
push
cs
push
push
lods
arpl
cmc
rorl
add
scas
aas
sub
mov
shlb
mov
mov
mov
cmp
mov
ret
pop
pop
pop
shl
jae
fcomp
jge
xor
xor
ljmp
xorb
stc
outsl
inc
incl
dec
sbb
or
lods
push
outsb
orb
pop
pop
and
into
or
dec
jecxz
dec
inc
inc
pop
cmpb
jae
incl
sub
mov
mov
push
push
je
and
inc
test
insl
fimuls
sbb
mov
imul
push
xor
mov
pushf
jle
inc
imul
fwait
inc
push
loop
cmpsl
pop
add
pushf
add
or
loope
fnstcw
xchg
xlat
and
mov
sbb
mov
jno
pushw
sub
aas
shlb
sub
inc
jmp
jle
lret
ficoms
jns
cmp
movsl
fwait
xor
jge
les
and
pop
scas
test
out
bound
js
imul
and
and
xor
cld
movsl
popf
dec
xor
adc
mov
adc
into
lds
subb
xor
outsb
test
aaa
mov
inc
movsb
jno
lock
mov
pop
push
cld
pop
pop
pusha
cmp
fwait
mov
push
pop
mov
aam
inc
pushf
jae
mov
push
out
or
test
rclb
sbb
nop
dec
ja
jecxz
dec
mov
int3
mov
inc
sar
test
push
sub
xchg
movsl
jb
cmp
cltd
ret
add
add
adc
jno
lea
push
jb
ss
frstor
or
insl
movsl
imul
xchg
cwtl
popf
test
stos
xor
movsb
cmp
sbb
and
and
jne
dec
xlat
adc
adc
push
xor
ficoms
lret
mov
test
push
in
shrb
popa
orb
stos
pop
lahf
dec
cmp
cmc
jb
sub
jg
movl
mov
cld
mov
clc
cmp
notb
mov
data16
cmp
es
and
rcrb
adc
push
movsl
inc
and
ret
inc
fdivrl
mov
data16
aas
cmp
loope
fwait
xor
jne
into
es
mov
sub
andl
pushf
andl
out
sub
pop
aad
mov
mov
rorb
and
dec
xchg
hlt
push
or
je
movsb
into
add
add
js
fwait
inc
rcl
adc
cltd
mull
xchg
imul
xlat
xchg
in
pop
cmpsl
nop
out
cmc
xchg
xor
int
cmp
mov
mov
lcall
addl
clc
push
xchg
dec
mov
int3
push
pop
cmc
iret
or
andl
mov
movsl
mov
into
lds
or
clc
cmp
sub
mov
inc
fiadds
and
lds
hlt
sbb
mov
frstor
push
mov
shll
jmp
sub
test
adc
xchg
fbld
xchg
aas
js
lcall
jbe
mov
call
scas
mov
sub
arpl
push
sahf
sub
pop
mov
dec
repz
inc
adc
sbb
imul
inc
clc
or
repz
mov
push
adc
dec
ljmp
xchg
push
rcr
push
fisubs
push
fcompl
add
loop
daa
in
pop
jle
int
dec
testb
sbb
xchg
int
fcoms
cmpsl
add
inc
pushf
out
ret
mov
xchg
loopne
or
lock
dec
repnz
sub
sbb
gs
pusha
jo
movsb
pop
jnp,pt
cltd
inc
or
jns
inc
pop
repz
out
fdivrs
pop
jp
or
loopne
shl
jb
mov
pop
outsb
add
test
lahf
out
push
fwait
ret
lods
inc
hlt
cmpsl
fadd
rcrl
adc
cmpsl
pushf
mov
and
dec
aaa
sbb
daa
gs
push
pop
jecxz
jle
aaa
xor
stos
pop
cmpb
ja
xor
arpl
or
mov
mov
jl
push
outsb
in
mov
shll
leave
pop
or
imul
push
rcrb
mov
sub
scas
pop
subb
ret
lods
dec
jb
or
std
cli
mov
mov
inc
sbb
mov
inc
sbb
lds
push
or
jne
cmpsb
cmp
sub
lret
rcr
cmp
mov
mov
xchg
fildll
xor
sbb
pop
push
lea
xchg
lea
pop
pop
in
sub
mov
jecxz
insb
fistps
xchg
pop
mov
mov
cs
jmp
jbe
insb
mov
jns
inc
mov
sarb
sub
mov
stc
and
xchg
add
add
mov
sahf
lahf
dec
je
push
arpl
imul
fsub
xchg
adc
sbb
xchg
cli
pusha
dec
dec
jecxz
mov
push
int3
mov
fidivrl
shrb
data16
push
lods
fucomi
fsubrl
shlb
mov
ret
add
int3
mov
rcrb
lret
rcrl
and
pop
fwait
xorb
xor
lods
cmp
scas
cmpsb
mov
addr16
pop
mov
push
out
jl
ret
inc
fidivl
cmp
push
ror
add
dec
sub
andb
push
or
enter
ret
add
repnz
xor
mov
into
mov
movsb
jb
notb
push
jnp
jp
imul
mov
lock
dec
fldcw
or
mov
cmpb
aas
int3
mov
pushf
sub
out
fdivr
fidivrs
xor
test
sub
jmp
sub
sbb
cmp
or
mov
or
and
sub
flds
mov
fldenv
mov
lret
pop
repz
xchg
add
adc
adc
jmp
xchg
enter
jae
sbb
add
push
xchg
xchg
jnp
xchg
in
xchg
add
jmp
inc
xchg
jl
in
xchg
push
rclb
dec
pop
or
cld
adc
roll
or
fistl
pop
stos
sarb
ret
fldenv
cltd
cmp
cmpsl
xor
int
pop
mov
jecxz
mov
push
cmp
and
mov
lods
adc
or
mov
cli
cmp
sbb
jle
inc
nop
add
pop
inc
ljmp
mov
stos
shrl
mov
test
pop
xchg
fsubrs
cmp
add
jae
aaa
out
cwtl
jno
xchg
shl
pop
cmpsl
lret
nop
test
inc
in
in
test
in
and
icebp
xor
movsl
jns
mov
jbe
xchg
cmp
sub
ret
ficomps
pop
mov
add
xor
fimuls
lods
mov
scas
imul
push
inc
pop
sti
pushf
das
test
dec
sbb
popa
xor
into
pushf
mov
imul
and
int3
adc
jl
cmp
loope
mov
cmpsb
xlat
popa
jns
sbb
jg
pop
jl
icebp
add
addb
jg
or
cmp
popf
jmp
fildl
adc
jo
aam
sbb
js
xchg
push
push
push
mov
lea
lcall
loopne
pop
divl
decl
xor
xor
inc
lcall
inc
mov
ja
mov
fsin
sub
or
xlat
ss
lcall
test
jne
mov
fdivrl
xor
mov
push
int3
adc
xchg
aaa
mov
add
adcb
repnz
stos
or
outsb
and
xor
or
mov
and
inc
dec
out
aam
outsl
mov
cmp
push
mov
jno
mov
cwtl
or
bswap
inc
and
shrb
mov
movsl
xchg
sub
mov
push
lods
mov
imulb
fisubl
mov
dec
sar
aaa
jne
sub
cltd
incb
fldcw
jbe
mov
mov
or
lcall
fs
cmp
out
inc
and
dec
inc
xor
mov
dec
add
inc
cmp
or
and
mov
dec
push
and
inc
fcoml
repz
mov
xor
movb
fs
xchg
mov
xchg
imul
mov
scas
shl
pop
je
notl
jle
add
cmc
outsb
xor
repz
int
jne
cmpsl
movsl
insb
xchg
cmp
jle
add
roll
outsl
les
jae
sub
movsb
pop
sub
in
jg
lods
mov
movsl
aad
add
lods
pop
stos
addr16
daa
mov
leave
add
sbb
insl
loope
fcmovnbe
loop
sub
mov
dec
jno
into
cld
cmc
xchg
jp
aas
and
push
or
add
clc
xor
pop
gs
std
adc
fs
xor
push
dec
lret
pop
cmp
mov
arpl
xor
jbe
sbbl
xchg
jecxz
mov
ret
mov
mov
add
ror
das
inc
jo
lods
in
popf
push
sbb
sbb
std
and
ret
in
out
mov
sbb
and
dec
mov
or
fsub
and
loopne
sbb
lret
push
adc
xchg
pop
repnz
xlat
pushl
or
jl
mov
add
or
rcr
aas
dec
xlat
and
xlat
and
mov
cmp
enter
aaa
mov
xor
int
cli
adc
xchg
or
int
sbb
mov
mov
jo
sbb
xchg
dec
cmp
push
lret
inc
sbb
or
mov
add
repnz
xor
cmpsl
jns
es
fldl
sbb
push
cmp
xchg
ja
xchg
add
xchg
cld
sub
jecxz
xchg
bound
fidivl
popa
enter
jl
in
cmp
push
xchg
dec
in
cmc
push
daa
mov
mov
in
inc
pop
xor
scas
out
cmpsb
popf
push
and
and
shll
test
cmc
mov
adc
cmp
ret
push
faddl
sbb
fnsave
pop
mov
push
sahf
or
ss
ret
lahf
or
xchg
mov
aad
sub
lcall
push
pop
shrb
or
and
insb
xchg
dec
jnp
sub
or
iret
sti
xor
imulb
icebp
mov
push
cmp
mov
aaa
dec
inc
sbb
xor
sbb
xchg
leave
dec
jo
and
rcll
mov
mov
cmp
adcl
fxch
jl
fdivrl
xchg
popf
movsb
call
shlb
xor
mov
push
jb
rorl
adc
pop
es
or
in
sbb
or
jmp
mov
or
leave
mov
ljmp
fyl2xp1
imul
pop
hlt
pop
pop
dec
or
mov
arpl
mov
fwait
pop
in
add
cli
andb
pop
sub
adc
int3
orl
shll
jp
mov
bound
xchg
in
repz
push
mov
add
cmpsl
mov
pop
pop
mov
scas
sbb
pop
cld
dec
lret
mov
mov
aam
fs
icebp
call
mov
test
adc
jecxz
jp
outsb
or
rcll
dec
or
jle
jmpw
pop
leave
sbb
mov
pop
mov
std
stc
mov
div
enter
nop
inc
aam
jg
decl
fs
aaa
sbb
das
test
mov
cwtl
orl
mov
mov
xlat
in
add
xor
sub
push
imul
mov
cmp
int3
lret
lret
sub
lods
add
and
cs
loopne
movsl
ficomps
dec
cmp
push
push
fsubrp
cmp
scas
xchg
mov
xor
sbb
imul
sub
cmpsl
and
jg
lret
fisubrs
stos
dec
out
rcrl
popf
fsts
ds
mov
or
in
and
or
add
xchg
mov
lahf
adc
inc
mov
sbb
sub
fs
aaa
dec
mov
jae
cmpb
mov
push
das
leave
cld
mov
mov
push
movb
jmp
hlt
outsl
leave
mov
push
inc
cmpsl
imull
fnstsw
insl
sti
xchg
mov
cli
mov
sarl
sbb
ljmp
add
xchg
xchg
jae
movsb
aam
jo
insb
push
inc
xor
push
mov
push
sub
push
gs
push
sub
pop
sub
mov
or
cmp
in
mov
test
mov
push
jnp
std
inc
mov
decb
mov
jbe
xor
dec
jae
std
popf
push
loop
aad
test
xchg
fstpt
mov
cli
mov
sbb
jno
cmp
jne
gs
fstpt
ret
insb
push
adc
or
out
sbb
xor
mov
lock
pop
mov
xchg
cltd
shrb
inc
jg
sbb
and
push
loopne
pop
mov
cmp
ficoml
push
inc
push
cwtl
adc
push
popf
pusha
lret
adc
cwtl
lock
and
mov
pop
scas
mov
sbb
aad
jbe
jecxz
in
imul
ds
cli
leave
fs
and
and
dec
cs
stos
popf
cwtl
jno
pop
xchg
cmp
fisttpl
ret
insb
sti
cli
repnz
jnp
cmp
daa
ljmp
loop
xor
push
sbb
push
lds
add
xchg
mov
movb
lret
out
cmp
jmp
cwtl
jg
and
movsl
int
lods
add
or
test
imul
lock
jae
call
stos
mov
dec
push
lea
sub
cwtl
lret
test
stos
sarb
or
mov
and
xchg
mov
mov
fnstcw
or
hlt
xor
push
mov
test
movsl
lods
jno
mov
push
les
push
dec
jnp
sbb
push
adc
cmp
push
mov
out
xchg
mov
inc
cmpsb
je
xor
jecxz
xchg
jecxz
dec
push
ss
push
xchg
ret
xor
xchg
in
inc
or
test
ret
rcll
in
xlat
mov
cmpb
adc
mov
add
jb
cmp
cltd
push
xchg
inc
push
ret
scas
xor
orl
rcr
les
daa
cmp
das
cmp
pop
or
mov
ja
cmp
jns
fdiv
push
jecxz
idivb
lcall
je
jne
ficomps
nop
push
pop
sub
ror
cmpb
xchg
and
fs
add
pop
push
test
cmpsl
notl
cmpsl
or
push
push
adc
das
clc
insb
repnz
adc
xchg
push
ret
jle
adcl
in
sbbb
xchg
lret
movsb
xor
cmp
and
pop
je
cli
fimuls
and
pop
sarb
and
add
dec
jge
ja
mov
shlb
mov
inc
imul
out
jmp
and
pop
cmp
cmp
xor
loopne
adc
pop
xchg
adc
or
and
inc
mov
imul
xchg
mov
es
cmp
orl
outsl
fwait
jecxz
cltd
push
sub
mov
push
xchg
dec
adc
test
or
sbb
push
outsl
sbb
lret
push
adc
xchg
testl
mov
jge
sbb
cmpsb
div
cmpsl
lock
push
jnp
dec
mov
mov
out
shrl
in
call
adc
mov
add
lds
jno
push
dec
or
rolb
jecxz
gs
vandps
std
fstl
fdivr
sbb
shll
jns
or
mov
faddl
pop
shlb
push
inc
jge
je
in
out
mov
sub
les
push
int3
cwtl
pop
fists
insb
xor
fbstp
mov
cli
pop
pop
lea
pop
xor
insb
sbb
ja
repz
shll
popa
dec
pop
stos
mov
jge
bound
stos
and
mov
iret
mov
mov
cld
dec
push
repz
lret
xchg
cmc
in
data16
sbb
sbbb
rol
fsubs
cmp
mov
xor
jge
cmc
vpunpckhwd
add
mov
mov
mov
cmpsb
repz
jno
out
lret
jmp
adc
jle
pop
lahf
arpl
pop
add
pushf
adc
push
lret
push
mov
insl
out
movl
mov
scas
ret
dec
loopne
xor
gs
xchg
inc
fs
movsb
call
gs
das
cmp
js
xor
sub
aas
mov
fisttpl
dec
in
adc
pop
pop
testl
icebp
jge
mov
movsl
movsl
dec
add
das
fwait
inc
loop
nop
dec
into
mov
popf
repz
cmp
jg
insb
stos
or
imul
fidivrs
fistps
cmp
xchg
into
out
sbb
xchg
fdivrs
out
sbbb
hlt
addr16
ret
stc
subl
incl
or
insl
leave
lcall
stc
movsb
repnz
jg
or
mov
sbb
xchg
add
push
fnsave
sub
pop
loope
int3
clc
loope
pcmpgtb
pop
iret
push
jb
dec
scas
aad
sbb
lret
daa
pop
pop
dec
jmp
cmp
pop
inc
jnp
imull
cmp
mov
push
mov
cmp
insb
data16
es
sbb
out
fisubl
sbb
dec
inc
pop
xor
loopne
push
pop
repz
cmp
adc
loopne
cmp
sub
orl
cwtl
out
xlat
mov
shll
fistps
test
jmp
jle
mov
pop
xchg
lret
outsb
mov
hlt
ret
dec
cmp
stc
in
dec
or
xor
movsb
lret
pusha
fwait
movsl
inc
mov
add
repz
popf
mov
and
inc
xor
test
sbb
cmc
call
xchg
cmc
cld
lahf
repz
and
mov
mov
pop
add
sub
mov
pop
loope
leave
addb
faddl
fucom
imul
and
popf
cmpsl
repz
ret
jnp
inc
mov
stos
cwtl
in
push
cmp
out
or
push
rcrb
jl
adc
or
xchg
dec
inc
add
mov
incb
in
mov
leave
dec
jmp
cmpsl
ret
hlt
adc
jne
roll
into
inc
jne
pop
nop
mov
xchg
xor
idivb
aaa
mov
xor
cmpl
ss
fs
adc
cmp
mov
sarl
clc
pop
jle
push
jg
iret
shr
sbb
lret
test
imul
nop
mov
outsb
lcall
sub
fsubrl
ds
push
jge
sti
movsl
and
and
mov
clc
outsl
pop
in
mov
addb
gs
lcall
fisttpl
enter
mov
inc
mov
cmc
rcrb
pop
jecxz
inc
xor
std
inc
cmp
lock
jl
popf
out
pop
aam
cltd
cltd
inc
or
add
arpl
mov
andl
cmp
lcall
xchg
push
je
mov
sub
pop
pop
jl
ljmp
sub
gs
stc
sbb
mov
push
cmc
es
mov
mov
pop
xchg
or
mov
or
pop
lds
data16
cmp
mov
sub
test
mov
pop
test
mov
mov
movsb
pop
in
push
sub
movntps
jmp
push
addr16
mov
inc
dec
aad
and
enter
fldenv
xchg
or
adc
dec
cmp
jnp
add
negl
xchg
outsl
ret
out
push
sbb
aas
loop
fwait
mov
mov
sar
xor
pop
mov
nop
dec
xchg
mov
inc
fistl
cltd
ss
int3
test
movsb
sub
into
dec
fucomip
and
popf
xchg
sbb
mov
int
std
xor
out
and
xchg
ret
push
add
imul
jmp
pushf
aam
mov
ljmp
or
sbb
inc
popf
xchg
inc
gs
xchg
cltd
repz
lods
cld
xor
jmp
icebp
aad
jle
hlt
ficomps
test
jecxz
xor
mov
jmp
ret
loop
je
repz
ficoms
sub
mov
jbe
mov
or
xlat
sbb
pop
iret
sbb
pop
cmp
cmpsb
lcall
movsb
rcll
adc
pushf
mov
cmpsl
mov
jmp
mov
lret
fsubl
jb
fidivs
xor
dec
test
cli
iret
sub
adcb
sbb
das
fnstenv
jl
sub
jmp
sbb
mov
cmp
insl
nop
xchg
and
mov
leave
incl
test
inc
jge
dec
int
add
push
cmp
pusha
push
or
addr16
pop
clc
push
daa
inc
mov
push
pop
push
xchg
cmc
hlt
je
mov
jg
subl
xchg
jns
push
cli
mov
mov
lret
aam
pop
push
mov
sti
add
aad
inc
pop
outsb
mov
lahf
out
mov
jns
mov
fs
imull
sub
lret
jmp
or
jns
loop
imul
clc
shl
stos
dec
leave
push
ljmp
icebp
xor
mov
js
cmp
xor
call
cmc
rcrb
test
or
xchg
jbe
stos
inc
loope
mov
and
cli
mov
cmp
ret
cmp
aam
popf
mov
in
insl
mov
popa
imul
mov
dec
adc
mov
scas
pop
xchg
jno
clc
imul
or
mov
hlt
sbb
cmp
cmp
inc
sub
push
fcomp
clc
or
sbb
sti
dec
rol
sbb
xor
cmp
out
notl
aaa
shlb
mov
jp
lods
sub
ds
movsb
cmp
fisttpll
test
jne
pushf
sbb
test
cmpsb
dec
add
ss
mov
bound
cli
aaa
fadd
pop
push
push
inc
aam
addb
fmuls
push
imul
or
scas
push
in
pop
cmp
sbb
sbbl
sub
mov
xchg
push
adc
and
test
inc
cmc
daa
repnz
add
pop
dec
push
adc
sbb
mov
cli
add
out
repnz
jbe
cmp
ds
sarb
out
jge
std
sarl
mov
push
lret
shr
dec
cmp
mov
mov
pop
and
jecxz
and
pop
and
in
es
add
mov
cli
call
mov
pushf
mov
aaa
mov
enter
pop
sub
pop
aad
enter
jno
pop
xchg
sub
pop
add
xchg
imulb
cs
pop
cmp
je
aam
sbb
sbb
mov
ljmp
lds
push
gs
sub
cwtl
cmpsb
sbb
adc
outsl
xor
push
scas
js
sar
xor
clc
enter
pop
lods
iret
mov
cmc
loopne
das
pavgw
ss
push
jl
jge
xor
dec
sub
mov
stc
movsb
mov
sbb
push
outsb
xlat
add
rclb
or
test
mov
rcrb
cmp
dec
mov
push
cmp
pop
xor
shll
pushf
or
cmp
push
pushf
adc
sub
jno
fisttpl
xchg
jno
stc
sub
sbb
nop
imul
movsb
call
push
ss
adc
sub
stos
jb
cmpl
add
daa
data16
xchg
in
mov
in
stos
sarb
lds
xchg
push
aas
jge
in
mov
fdivrp
mov
rorb
movsl
lcall
mov
mov
push
fcompl
mov
popa
lcall
push
lock
fucomip
movb
mov
sub
sub
cltd
lret
pop
testb
jg
scas
icebp
mov
dec
test
mov
sub
add
dec
push
dec
lock
mov
stc
push
outsl
mov
gs
out
fsts
jmp
andb
dec
jmp
shll
bound
push
mov
int3
mov
mov
loope
jge
stos
pop
fistpll
out
jg
cli
sub
pop
jo
pop
test
jg
stos
jp
push
cmp
pop
out
sbb
cs
js
mov
sbb
xchg
push
gs
xorl
dec
mov
push
or
mov
inc
in
fscale
test
imul
iret
inc
jno
mov
adc
ja
xor
mull
or
add
test
and
fiaddl
xchg
scas
cmpsl
enter
out
scas
aad
sbb
adc
sub
fbstp
sub
ret
popf
aad
or
in
xchg
add
or
rclb
rcll
clc
loopne
lods
fsincos
xor
sub
orl
adc
push
stc
icebp
adc
shrb
js
popf
pop
mov
or
stos
fildll
mov
pop
ss
adc
push
adc
js
jns
shlb
or
pusha
int3
jnp
std
sub
or
cmp
subl
adc
xchg
lods
idivb
inc
aas
push
insb
cmpl
fwait
xchg
mov
insl
pop
nop
into
jns
inc
inc
jno
mov
mov
mov
cmpsb
movsl
push
int
test
cmc
sub
popf
mov
inc
and
imul
test
lahf
ljmp
mov
or
movsl
hlt
hlt
iret
test
std
mov
hlt
flds
push
push
enter
and
rorl
sub
mov
jae
inc
shrb
or
pop
or
or
inc
dec
fadd
enter
jmp
adc
dec
shl
or
dec
pushf
xchg
test
inc
mov
mov
add
movsl
dec
rorb
dec
subb
mov
mov
add
jle
repnz
popf
aam
mov
jo
addl
xchg
push
scas
xor
fdiv
loop
push
int3
negl
mov
push
call
mov
cvtps2pi
shll
push
mov
test
out
clc
movsb
and
pop
pop
jg
movsl
inc
fcomp
out
sbb
sbb
mov
jb
lds
int
xchg
outsl
lods
std
sbb
xchg
mov
out
xchg
mov
sbb
pop
iret
xchg
jmp
insb
dec
sbb
les
aam
mov
xchg
test
or
addr16
and
dec
pop
inc
pop
lods
stos
push
mov
or
push
idiv
mov
sahf
fwait
mov
das
jmp
es
or
sub
pop
jle
nop
loope
test
xor
stos
mov
fwait
repnz
xor
repnz
add
lock
mov
push
mov
adc
daa
mov
mov
pusha
add
enter
mov
mov
push
lahf
lods
sub
sub
aaa
mov
int
sarb
in
mov
addr16
xor
aam
sub
les
stc
mov
xorb
adc
out
fsubrp
mov
fnsetpm(287
scas
adc
orl
sub
inc
mov
std
rorl
lods
nop
ljmp
std
pop
leave
movsb
shll
rorl
clc
cld
addr16
mov
xchg
bound
cltd
jae
add
sub
outsl
rol
pop
xchg
mov
cltd
jo
sub
or
lods
imul
insb
sarb
js
inc
jnp
push
mov
dec
aas
adc
loop
outsb
cmp
mov
test
dec
insb
cmp
hlt
test
bound
xchg
loopne
pop
jle
cltd
push
mov
mov
sub
cmp
jg
lds
js
or
lock
mov
dec
cmp
pop
jecxz
pop
out
jo
dec
push
fsts
pop
repnz
out
jmp
ficomps
pop
inc
cs
xorb
pop
mov
je
scas
or
daa
jns
lods
pop
clc
sub
dec
jnp
pop
xlat
loop
jne
xchg
fisubrl
mov
push
or
adc
aam
andl
and
sbb
push
cs
push
xchg
inc
xorb
hlt
adc
jno
inc
or
jb
mov
adc
dec
cmp
pop
pop
xchg
xor
inc
xchg
aad
sbb
enter
cld
and
fsubl
mov
js
or
add
out
insl
test
lahf
mov
aaa
test
add
mov
inc
inc
out
outsl
mov
mov
mov
ret
add
outsl
push
sub
inc
ss
pop
inc
popf
push
adc
and
pop
stos
dec
andl
adc
pop
cli
repnz
rcll
mov
fs
int3
test
cmp
imul
xchg
add
fs
push
dec
ja
je
mov
mov
stos
fstpl
test
int
inc
leave
into
shl
mov
sub
xor
mov
or
movsl
xorl
test
mov
jp
in
push
das
cmpsl
or
cmp
jg
test
sti
popf
xchg
pop
movsl
push
jg
imul
dec
xchg
sarb
push
popa
dec
xchg
and
dec
loop
sbb
sub
hlt
cmp
jb
or
lcall
push
outsb
mov
lret
xor
imul
mov
or
xchg
lea
out
jns
movsb
clc
push
ljmp
loope
push
cmp
ss
sub
insb
push
arpl
insl
test
and
sub
pop
pop
idivb
sub
mov
test
cmp
add
adc
xor
adc
imul
sbb
dec
sti
out
lcall
cmp
sbb
mull
jmp
roll
movsl
stos
push
in
adc
mov
lods
mov
cmp
mov
mov
mov
xchg
ja
or
fwait
mov
cmpsl
in
popf
sub
out
sub
mov
test
imul
mov
adc
dec
pushf
mov
jns
sub
add
mov
jmp
push
push
ja
xchg
cmp
push
sub
bound
sub
icebp
dec
mov
jmp
les
adc
mov
add
xchg
pop
sbb
fmul
int3
sbb
jnp
inc
ja
inc
test
xchg
bound
int3
sahf
cmp
pop
stos
pop
jno
mov
int
lahf
negl
mov
cmp
aaa
out
sbb
xchg
stos
ljmp
ret
sub
inc
scas
adc
enter
pop
and
daa
fdivs
cmp
clc
popa
ljmp
sahf
stc
jecxz
mov
xor
rcr
push
fstps
in
cmp
ja
jnp
pop
rolb
mov
push
in
imul
and
loop
js
fidivs
dec
mov
sbbl
push
add
mov
stos
repnz
adc
push
xor
aad
call
loope
xchg
xchg
movsl
dec
rcrl
push
in
xor
adc
imul
mov
aad
adc
js
test
sahf
mov
sbb
jne
clc
adc
and
sub
xor
and
icebp
nop
cmpsl
call
or
cmpsl
add
dec
in
fimuls
maxps
call
shrl
pop
cmpsb
jb
add
outsb
stc
cmpb
mov
jnp
ja
jae
or
outsb
fisubl
aaa
out
push
mov
pop
dec
stc
cmp
or
out
jo
sbb
bound
das
jne
inc
inc
dec
pop
scas
mov
xchg
or
arpl
mov
push
cmpsb
aad
and
xor
and
mov
or
jno
imul
popa
out
mov
inc
cmp
fwait
sub
sbb
leave
outsb
sub
mov
lret
mov
jbe
shl
dec
sbb
scas
lahf
dec
push
ss
jecxz
imul
inc
mov
xchg
xchg
mov
mov
mov
jmp
fdivr
cli
ds
sbbl
ret
dec
xor
orl
sub
shr
and
adc
xchg
cmpsl
stos
push
insb
dec
dec
hlt
mov
daa
fmul
inc
arpl
adc
movlps
jno
jno
jbe
or
mov
pop
dec
test
mov
in
hlt
xchg
mov
lods
cmp
fsubrl
leave
lret
sbb
xchg
dec
xor
mov
negl
xchg
pop
cmp
push
sub
adc
stc
cmpsl
fsubl
cmpsl
outsl
pop
add
fisttpll
ljmp
jae
outsl
mov
push
xor
ret
int
stc
lret
push
pop
push
pop
inc
sti
insl
mov
ljmp
push
jl
out
add
mov
popf
or
pusha
negb
cmp
fists
dec
test
or
cmp
fbld
xor
movsb
aaa
rorb
mov
and
cmp
clc
ret
jb
sub
sbb
pop
xor
repnz
lock
dec
push
xchg
inc
cmpsb
pop
pop
jg
adc
lock
fdivr
xor
fsubr
xor
pop
push
mov
imul
not
push
test
hlt
add
cmp
or
jne
scas
mov
or
xor
sbb
fwait
xchg
loopne
rorl
ljmp
ret
iret
cltd
lock
mov
addr16
or
adc
cltd
mov
add
aad
xchg
inc
mov
je
out
sbb
sbb
fldl
pop
cmp
cmpsb
jecxz
int3
test
or
or
loope
pop
cmp
aaa
xchg
cmp
in
lods
jg
mov
add
lahf
sti
sbb
movsl
sub
sub
repnz
insl
add
push
fisttps
outsb
iret
cs
pusha
inc
jl
inc
xchg
or
rorl
les
lahf
fs
push
xchg
or
movsl
aas
dec
enter
or
push
sub
add
lea
xchg
insb
mov
pop
xchg
shr
fcomp
mov
sbb
shll
xchg
and
test
lds
out
inc
xor
mov
test
dec
mov
fisttpll
or
out
adc
inc
jmp
sub
es
jg
pop
inc
arpl
inc
das
mov
icebp
outsl
push
cltd
add
sub
pushf
ljmp
mov
out
leave
shrb
mov
sub
loope
xor
inc
adc
mov
outsb
loop
jnp
inc
adc
mov
mov
mov
clc
fnsave
jge
mov
ret
jmp
cmp
xchg
stos
leave
jl
xchg
lcall
mov
xchg
call
adc
dec
xchg
sbb
cld
gs
pop
jmp
iret
pop
inc
aaa
xchg
mov
cli
filds
js
bound
pop
shll
ja
xchg
mov
sub
add
addr16
cmpsb
out
xor
loope
in
cmc
lret
xor
lret
xchg
jecxz
mov
push
sbb
fiaddl
ficompl
xor
cmpsl
jg
shlb
sub
out
inc
ds
test
push
mov
push
xchg
mov
lea
sub
xchg
jo
movsl
mov
cmp
add
repnz
push
nop
gs
add
nop
mov
inc
cmp
jmp
sub
add
ss
pop
jo
insl
inc
insb
push
mov
xor
mov
dec
xor
jns
push
xchg
sbb
ds
jmp
mov
xchg
cmp
ljmp
adc
divl
loope
add
mov
mov
xchg
add
sbb
jge
mov
push
rcll
repnz
or
pop
shr
jbe
dec
into
and
rorl
lock
test
jnp
sbb
xor
pop
mov
inc
addr16
dec
lret
dec
insb
aam
fwait
aas
push
and
adc
fcomip
or
rcll
lods
xchg
pop
push
repz
movsb
sub
test
imul
fstl
pop
pop
mov
negl
or
push
imul
mov
xchg
inc
dec
lods
popa
in
push
leave
test
add
jbe
pop
test
nop
js
rclb
xor
stos
mov
sbb
and
and
cmpsb
jp
and
mov
fbld
mov
lods
xchg
outsl
aam
push
push
fbld
add
dec
mov
les
flds
das
cmpsl
dec
push
xor
pop
nopl
push
fistpll
je
sbb
push
push
repnz
cmc
lock
rorl
loop
addl
dec
call
pop
daa
popa
push
ret
dec
mov
insb
sahf
movsl
add
or
xor
movsb
in
outsl
test
inc
fsubp
and
push
call
fimull
dec
add
aaa
push
sbb
aad
mov
addr16
push
adc
hlt
xchg
jae
and
imul
jp
xchg
add
adc
pop
clc
xor
mov
insb
jns
mov
or
jo
sbb
sub
pop
mov
xchg
pop
dec
or
clc
in
andl
inc
into
in
push
divl
sbb
stos
andl
ds
pop
repz
push
mov
popl
adc
loop
mov
dec
inc
jmp
or
push
addl
mov
into
sti
sub
aad
jo
cmp
fists
xchg
inc
movsb
mov
sbb
leave
addr16
notl
cmpsb
inc
sub
and
sbb
pop
ss
sahf
or
xchg
push
push
fildl
cmp
icebp
in
dec
sbb
mov
pop
push
sbb
fwait
test
int3
push
lock
js
call
lahf
into
mov
mov
sbb
mov
adc
js
pop
loopne
xlat
jno
mov
sub
cwtl
pop
clc
or
xor
in
sub
lcall
lahf
push
mov
ja
ret
dec
sbb
mov
jmp
pop
jmp
mov
mov
out
insl
push
inc
mov
push
scas
adc
mov
jecxz
ja
int3
stos
nop
mov
xlat
push
in
add
cmp
js
inc
pop
lea
sbb
insl
ss
cld
jl
pop
adcb
mov
pop
sbb
repz
scas
subb
mov
mov
aas
inc
gs
jg
imulb
dec
dec
mov
jecxz
mov
sub
jl
gs
leave
cs
sub
fdivp
rcl
aad
push
cmpsb
push
dec
insb
mov
inc
xor
in
inc
push
inc
jbe
xchg
inc
adc
in
ret
xor
into
push
rol
lcall
loope
xchg
call
add
mov
lods
dec
or
cmp
lret
leave
fcmovnb
in
xchg
push
das
sub
and
imul
int
ret
mov
xchg
xor
leave
adc
test
scas
pop
fdivl
or
add
cmp
xchg
sti
outsb
jae
fisubrs
push
idivb
fwait
int
imul
jmp
mov
inc
push
outsb
jbe
mov
in
cltd
imul
inc
mov
sbb
and
adc
scas
adc
add
mov
jbe
xor
sbbl
xchg
and
xchg
lahf
gs
dec
ja
repz
mov
and
push
repz
sti
dec
iret
fwait
push
or
mov
xor
pop
inc
aaa
and
pop
jno
sub
inc
and
jmp
xorb
mov
je
mov
inc
xchg
jp
loope
xchg
or
mov
pushf
mov
push
cmpsl
or
daa
movsb
test
lock
sub
rcrb
arpl
sub
rcl
add
jge
imul
cmpsb
enter
and
add
push
icebp
pop
xor
cmp
jge
fwait
xor
cmp
push
xor
enter
repnz
lods
je
pop
cli
pop
rcll
fnclex
fistpll
inc
fnsave
or
test
and
movb
adc
sub
xor
daa
jg
je
ja
adc
adc
xchg
cmp
loope
mov
rclb
cmc
adc
dec
fdivrl
dec
repnz
mov
xchg
xchg
hlt
outsl
push
inc
push
fisubrl
jl
xchg
fcompl
sbb
imul
daa
movsl
mov
test
mov
leave
xchg
lea
add
and
and
xchg
rcl
mov
cmp
and
arpl
cmp
and
not
dec
add
and
jg
ret
mov
adc
daa
shll
sub
addr16
or
in
ljmp
ret
dec
pop
or
xchg
inc
int3
dec
push
or
add
pop
ss
inc
ja
or
or
ror
xor
and
add
movsb
xchg
xor
sub
gs
cmp
jns
popa
push
or
repz
pop
leave
sub
out
sub
fisubrs
push
add
movsl
ds
adc
lock
xlat
push
jl
sub
bound
movsb
sbb
adc
dec
ret
push
pop
shlb
jle
out
xlat
iret
add
sbb
fildll
ret
xchg
imul
pop
cmpsl
pop
stos
jns
jb
xlat
jne
jp
popa
pop
dec
andb
lahf
call
jne
jae
dec
clc
lods
xor
imul
sbb
neg
rcll
mov
cmp
fisttpll
mov
mov
imul
ds
xchg
js
inc
es
adc
nop
cwtl
jle
cmpl
push
ret
int
sahf
aas
sub
in
push
jae
sahf
jne
jp
in
sbb
lret
stc
cmp
cli
pop
bound
dec
insl
rclb
adc
push
push
lret
mov
out
and
mov
and
xchg
jmp
lock
scas
xchg
mov
and
aaa
xchg
nop
mov
mov
rcrb
int
sbb
sub
rolb
repnz
ret
xchg
push
js
flds
icebp
lods
ss
stc
or
inc
adcl
jo
and
xor
hlt
andb
sahf
xor
ja
dec
js
call
push
sbb
cmp
cmpsl
add
mov
cmp
inc
lock
aas
ja
push
loopne
cmc
xchg
call
sbb
jnp
js
pcmpgtb
jl
xor
fdivrs
iret
fildll
testl
out
outsb
decl
lahf
dec
dec
mov
sarl
int3
jge
int
fs
clc
loop
mov
mov
add
jmp
into
xor
aas
push
icebp
cs
pop
stos
xchg
aaa
inc
cmpsb
sub
ror
stos
jg
mov
add
pop
or
jp
out
push
adc
aaa
fs
andl
push
cmp
cs
popf
jl
pushf
fadd
incl
in
ds
mov
push
pop
fisttpl
sbb
sahf
and
xchg
bound
cmp
xchg
sbb
mov
xchg
cmp
int
aam
jno
je
jae
pop
movsb
and
lret
call
jo
sarl
or
mov
test
mov
fmul
insl
std
jbe
cmp
notl
rorl
sub
loop
ret
mov
jne
int
loope
cmpsl
bnd
push
leave
fistps
add
adc
popa
inc
mov
out
sub
pop
std
dec
ret
push
divb
adc
cmc
mov
push
mov
fs
aas
sub
pop
jecxz
stos
xchg
scas
add
jge
pop
inc
cwtl
lods
fs
lcall
std
sbb
mov
pop
inc
ficoms
mov
test
data16
or
aas
mov
std
inc
mov
test
cmp
dec
sub
mov
ja
cmp
sub
jg
sbb
xchg
inc
xor
push
jp
lcall
push
add
loop
ret
adc
sbbl
insl
xchg
addr16
imul
cmp
jno
push
add
add
data16
popa
sub
xor
jle
popf
out
xor
mov
mov
movsb
push
out
sbb
jecxz
repz
mov
mov
shrb
das
decb
sbb
inc
cmpsb
adc
scas
fwait
lret
arpl
lods
and
cltd
mov
and
sbb
daa
int3
mov
aaa
lock
cltd
mov
icebp
mov
dec
scas
movsl
inc
jns
or
push
lds
mov
cmp
xor
scas
dec
mov
dec
xchg
inc
cwtl
jp
dec
movsl
mov
sub
cmp
cmp
cmp
push
mov
or
push
lea
popf
lcall
xor
cli
inc
inc
cmp
push
hlt
loope
sahf
mov
int3
ljmp
dec
jae
scas
xchg
mov
gs
ret
stos
mov
mov
cwtl
sbb
mov
lods
add
add
push
sbb
cmp
xor
add
cs
adc
xchg
flds
popa
mov
sti
nop
cmc
push
ja
sbb
andb
fbld
xor
xor
movb
adc
adc
out
idivl
mov
jp
jmp
lea
push
add
inc
jbe
sbb
stc
inc
lret
mov
cwtl
ficoml
std
orb
mov
jb
insl
xchg
mov
dec
inc
sbb
jle
sbb
sub
in
push
cmp
jno
mov
movsb
jle
sbb
out
mov
test
sub
pop
xor
fistps
mov
sbb
jl
xchg
pop
loop
aaa
pop
cwtl
add
je
xor
mov
dec
loope
jg
rcrl
cli
adc
out
call
je
stc
aas
push
faddp
test
mov
mov
or
test
lods
negb
cmpsb
jo
testl
inc
cwtl
add
mov
xchg
add
push
pop
ret
je
dec
call
push
out
xchg
jl
test
inc
jo
push
xchg
inc
push
ja
pop
mov
stos
sbb
mov
push
out
das
into
adc
xorb
shll
sti
negb
js
push
stos
jge
push
xorb
aas
mov
inc
pop
sub
add
xor
je
dec
loop
pop
push
sbb
or
aam
pop
test
out
insb
xchg
add
inc
cmp
mov
push
mov
test
jno
cwtl
add
lret
adc
scas
adc
xor
push
or
sbb
cmp
pop
sub
cmp
mov
aas
pop
std
daa
popf
scas
into
and
and
inc
gs
lcall
xor
xchg
dec
pop
mov
arpl
mov
push
adc
mov
mov
test
cmp
call
push
adc
divb
movsl
inc
fs
xchg
xor
lea
lret
fistps
jae
jp
mov
inc
mov
xor
dec
insl
pusha
mov
fneni(8087
scas
adc
jno
rcl
xor
jl
fbld
or
xor
xor
mov
scas
jmp
xchg
xchg
scas
mov
and
ret
mov
cs
test
cmpsl
popf
sub
mov
dec
push
dec
mov
jne
adc
mov
enter
call
jne
ds
rcrl
outsl
adc
pop
fildll
pop
aad
ror
or
addr16
mov
lcall
push
mov
pop
jecxz
mov
iret
fdivl
xor
sbb
add
fcomps
icebp
xor
lea
fstps
sub
jns
pop
ficoms
lret
out
into
inc
xchg
ret
gs
lods
xlat
lahf
push
and
ds
mov
insb
cmp
idivl
jo
mov
mov
cmp
pusha
adc
jbe
inc
data16
adc
xchg
iret
mov
ret
lods
into
lahf
ja
jbe
pop
jecxz
std
dec
dec
insl
pop
bound
sub
jae
fcomps
mov
mov
hlt
lea
psubb
test
and
add
fcoms
or
mov
add
and
mov
push
add
xchg
mov
sahf
out
xchg
stos
stos
jmp
sub
xchg
popf
ficompl
xchg
cmpsl
icebp
test
enter
push
inc
out
out
or
inc
out
repz
adc
aam
ja
mov
jp
mov
push
or
outsl
nop
jb
mov
fiadds
sub
jg
xor
xor
loopne
pop
cmp
cmp
pop
inc
ljmp
cmp
divb
insl
lock
push
loopew
loope
cld
js
clc
dec
nop
adc
mov
divl
pop
in
cmp
std
sbb
add
adc
daa
rorl
inc
pop
adc
test
popa
fistpl
lds
inc
inc
stos
rcll
xchg
stc
je
in
mov
arpl
xchg
mov
add
aad
and
pop
push
jge
mov
and
clc
jecxz
and
in
testb
int3
adc
mov
cmpsb
rep
add
mov
mov
jbe
ret
mov
adc
push
fildl
xor
pushf
mov
pop
mov
sub
lcall
mov
cmc
adc
jb
xchg
mov
shrd
xor
xchg
shrl
pusha
add
add
mov
xchg
pop
add
lds
mov
jbe
jecxz
decb
loop
mov
push
jp
call
in
mov
jl
mov
inc
mov
rorl
test
mov
push
fstl
xor
xchg
movsb
in
decl
fldl
and
stos
mov
stc
jg
lcall
push
or
insb
push
jmp
jae
sbb
adc
mov
pop
lahf
lcall
push
and
clc
dec
jp
mov
sub
mov
cmp
mov
fs
xchg
sbb
sbb
cs
cs
js
insb
imul
cmpsb
fwait
sbb
xor
xchg
getsec
xor
and
lcall
popa
mov
xor
dec
push
jl
add
dec
pop
andl
leave
sub
pushf
lahf
cwtl
movsb
jae
lods
jae
aaa
inc
xorb
xchg
stos
imulb
jp
and
sbb
lea
push
loope
jg
sahf
xchg
pop
cltd
call
inc
xor
cli
jge
rcr
inc
pop
inc
pop
nop
pop
je
test
ret
mov
xchg
xor
inc
add
jbe
sub
sbb
dec
sarl
push
xor
cld
mov
mov
xor
sbb
mov
clc
pop
fwait
push
int
dec
mov
filds
push
jns
fcmovu
stc
ror
andb
lds
pop
adc
not
sub
iret
dec
imul
push
inc
adc
icebp
xchg
mulb
xchg
dec
jb
add
test
jbe
jl
ror
ret
outsl
add
adc
ficoml
mov
or
pushf
dec
fbld
pop
es
int
stc
xor
inc
jmp
rorb
lea
mov
xchg
cltd
ja
cmpsl
repz
lret
cld
es
addb
pop
add
mov
int
jg
call
das
jae
stos
cmc
int3
fdiv
cmpsl
inc
imul
call
ret
cmp
ljmp
adc
cs
push
inc
ret
sub
stos
ss
inc
cmp
xchg
jbe
lds
xor
mov
mov
out
sub
xchg
ret
pop
xchg
lret
mul
push
imul
decb
jb
div
pop
cli
dec
and
in
push
push
xor
flds
mov
mov
mov
jg
imul
adc
mov
aas
xor
repz
pop
sbb
sub
or
jo
add
les
cltd
aam
xchg
lcall
adcl
pop
lods
test
pop
or
fwait
js
inc
add
roll
repz
mov
call
jno
adc
jmp
or
lcall
movsl
ss
and
mov
scas
mov
cmc
xchg
sub
sbb
sub
push
pop
jle
sub
stos
mov
push
xor
pop
xor
std
jo
adc
xchg
ficoml
jno
add
push
call
cs
inc
pusha
aas
stos
mov
cmpsl
push
push
and
divb
cmp
xlat
sub
inc
dec
aad
push
inc
mov
adc
movsb
f2xm1
push
sbb
loope
or
aaa
sbb
pop
fidivrl
cltd
jb
hlt
pop
out
jl
jbe
mov
into
imul
add
adc
inc
and
xlat
mov
lcall
aad
mov
out
jae
cmp
pusha
aaa
sub
jnp
leave
mov
mov
push
dec
and
shr
sbb
fdivrl
or
cmp
mov
xchg
into
scas
pushf
std
push
les
add
dec
fisubrl
push
outsb
rol
inc
bound
stc
stos
add
jmp
loopne
dec
movsb
mov
leave
stc
test
into
and
test
jbe
sbb
in
scas
popa
test
fs
xchg
int
mov
js
mov
fmuls
adc
dec
scas
mov
cmp
dec
push
sbb
scas
int3
adc
jp
nop
xchg
mov
lcall
bound
mov
stos
xchg
mov
sbb
jmp
or
mov
pop
sbb
push
ljmp
adc
xchg
jp
insl
xchg
or
in
sarb
in
lret
aaa
cmpsl
mov
inc
fwait
out
mov
xchg
jp
aas
jne
sbb
adcl
pop
scas
push
pand
imul
push
mov
fildll
cwtl
adc
lahf
rclb
inc
test
cmp
andb
inc
pop
sub
pop
xor
xor
add
sbb
mov
xchg
subl
std
mov
notl
mov
and
xchg
jmp
cltd
mov
dec
push
ror
pop
pop
rolb
dec
cwtl
push
pop
or
jmp
push
test
cmpsb
pop
push
mov
pop
outsl
jecxz
sub
jmp
xor
sub
popa
rol
sti
push
dec
mov
in
lret
es
xchg
in
xchg
outsb
lock
jo
in
xchg
and
lds
sti
aas
dec
sbb
js
mov
jb
sti
arpl
cmc
hlt
out
or
xor
aam
xchg
xchg
add
mov
sbb
cmp
sbb
mov
sub
xor
xor
lods
outsl
pop
imul
push
movsb
ljmp
out
fnstcw
xor
fstpt
jecxz
xor
lds
cwtl
add
out
jg
fcomps
addb
movsb
pop
xchg
add
movsb
enter
pop
js
jb
pop
pop
shlb
sbb
mov
mov
lock
je
and
mov
push
je
rcl
loop
imul
xchg
mov
adc
cwtl
cmp
push
pop
pop
cmp
jl
dec
fdivr
clc
mov
inc
int
cli
sar
test
jno
add
js
popa
pop
jp
sub
stos
ljmp
daa
out
pop
push
pop
cmc
jo
jo
fwait
shrl
xchg
push
dec
enter
mov
add
add
enter
ret
and
or
loop
in
dec
pop
or
outsl
jne
jecxz
out
add
in
mov
test
outsl
xchg
mov
rolb
out
pop
pop
push
pop
jle
push
shlb
inc
xor
aad
mov
fsubp
subb
cltd
mov
shll
mov
mov
lock
add
add
mov
xlat
xor
xchg
jns
jge
dec
aaa
push
out
mov
aam
inc
add
cmpsb
or
and
xchg
inc
es
add
sbb
stos
mov
inc
ja
popf
fiadds
scas
outsl
push
inc
cmc
hlt
pop
ret
push
jle
mov
shrl
movsl
int3
je
out
and
sarl
fisttps
inc
or
test
mov
jo
and
push
inc
push
xchg
lret
sti
in
inc
enter
add
mov
iret
pop
movsb
sbb
data16
or
fwait
xor
outsl
loopne
mov
inc
mov
mov
cwtl
mov
add
add
rcl
pusha
popa
pop
dec
movsb
cmp
shlb
pop
fwait
dec
inc
incl
movsl
mov
dec
mov
push
push
xor
mov
xor
adc
daa
jae
adc
pushf
testb
sar
jae
ljmp
add
and
movsb
or
xchg
pop
mov
shrb
ffreep
popa
clc
mov
cmp
add
call
pusha
or
jl
fcmovbe
pop
add
push
pop
iret
push
les
mov
mov
sub
enter
imul
jno
push
and
adc
jge
add
ror
xchg
xchg
jg
es
mov
je
enter
sarb
loope
fildl
arpl
dec
jge,pt
cmp
inc
fadd
inc
pushf
fbstp
pop
xorl
xor
cmpsl
jmp
fiadds
leave
test
test
mov
fs
inc
out
mov
adc
inc
adc
enter
je
jl
shl
mov
mov
scas
and
leave
xor
lcall
push
mov
dec
xor
push
fidivl
mov
int
add
and
lcall
sti
rcrl
and
and
outsb
insl
pushf
jne
push
pop
adc
xchg
test
pop
fsubrl
stc
repnz
pop
fnsave
stc
lcall
ja
outsl
push
xchg
sahf
in
ds
and
xor
mov
fwait
xchg
xor
dec
in
jbe
rorb
mov
jno
addb
lea
pop
add
cli
call
pop
ret
aaa
sub
and
xor
sbb
es
sub
in
xchg
inc
add
sbb
push
movsb
iret
sub
lock
ss
push
lds
fs
jmp
mov
mov
enter
dec
mov
cmpsb
inc
mov
adcl
inc
push
mov
ret
mov
sbb
scas
je
push
dec
xor
mov
ljmp
lcall
mov
stos
sub
rclb
push
fdivrs
gs
push
subl
pop
inc
push
xor
dec
sbb
or
in
mov
mov
jns
cmc
pop
cmp
add
ja
mov
outsl
orl
sub
lds
subl
incl
gs
leave
jmp
jle
pop
fnstcw
add
sarb
adc
imul
sarl
pop
sbb
mov
icebp
into
popa
pop
adc
mov
mov
ds
rcl
shr
dec
ljmp
in
test
popa
pop
inc
out
mov
inc
rol
sub
std
adc
shrb
cmp
btc
mov
cmpsb
add
aad
adc
xchg
dec
js
mov
pop
add
in
and
stc
push
jmp
in
loop
movsb
mov
psubb
xor
lock
pop
push
pop
add
mov
push
inc
cmpsb
stc
push
insb
out
or
push
sub
ret
xor
mov
dec
fimull
out
sbb
outsb
pusha
sar
sbb
xchg
cmpsl
ret
test
out
aas
movsl
ret
std
inc
adc
es
sub
add
cmpsb
mov
les
clc
mov
mov
adc
cld
aas
lret
popa
lds
sub
cmp
dec
lods
test
pushf
inc
pop
rolb
adc
mov
sub
mov
jae
push
cmp
mov
adc
add
xchg
xor
pop
jle
lret
sbb
inc
loope
push
dec
in
adc
outsb
ja
pop
test
int3
push
inc
outsb
icebp
sbb
aas
inc
std
sub
aam
sub
pop
add
not
stc
sbb
scas
and
std
dec
popa
iret
in
in
inc
add
xlat
pop
xchg
adc
inc
outsl
xor
cs
outsb
or
out
push
cmpsb
rcr
push
ss
push
stos
fnstsw
sub
inc
dec
dec
push
fisubrl
gs
std
data16
xor
int
int3
add
cli
mov
and
push
pop
jmp
lea
rep
xor
ret
div
pop
mov
or
jge
insb
insl
and
into
inc
in
int
stc
mov
jmp
hlt
out
mov
xchg
lods
mov
push
cmp
out
cmpsb
out
pop
mov
je
pop
cmpsb
or
xor
sbb
sbb
sub
lea
add
inc
loopne
test
adc
arpl
adc
je
or
push
cmpsl
repnz
push
jg
push
mov
xchg
pop
leave
cmp
mov
orl
push
lahf
or
xlat
int3
dec
mov
iret
and
add
add
jp
nop
fisubs
aam
orb
mov
jbe
sub
inc
pusha
push
add
cmp
imul
mov
jo
jae
test
xchg
int
sahf
inc
mov
mov
fidivl
stos
pop
mov
minps
ja
div
aaa
sub
shrb
out
int
shrb
xor
pop
cmp
mov
lea
xchg
das
sbb
pop
repz
arpl
jmp
in
shll
lods
cwtl
mov
push
sbb
mov
popf
mov
dec
or
lock
adcl
pop
and
inc
divl
adc
adc
pop
in
xor
mov
pop
jns
outsl
lock
add
adc
cli
or
jne
push
sbb
jbe
clc
inc
hlt
decl
test
daa
push
gs
aaa
pop
sbb
repnz
pop
jb
repnz
mov
xchg
in
pushf
fstpl
dec
and
orb
sbb
sahf
push
sahf
inc
push
mov
negl
fcmovb
dec
addr16
push
push
jno
test
push
sahf
test
rolb
pop
pop
xor
mov
shlb
ja
cmp
test
xchg
dec
fnsave
jmp
lods
nop
iret
dec
push
fbld
lea
mov
mov
inc
mov
scas
push
inc
pop
enter
mov
mov
ja
das
jns
jo
pop
dec
aas
fs
push
pusha
xor
sbb
iret
jmp
std
mov
fstpl
cltd
aam
aas
int
pop
or
push
pop
push
add
sti
and
ljmp
mov
adc
pop
mov
cmp
je
mov
stc
fcmovb
out
shl
or
sahf
fstps
or
fcmovne
inc
sub
movsb
sub
adc
js
push
pusha
shll
sbb
es
pop
lods
pop
lret
rorb
xorb
push
test
insl
add
les
scas
je
fnstcw
cltd
mov
inc
mov
dec
in
faddl
rolb
push
and
push
xlat
outsb
pop
push
push
pop
push
mov
inc
jnp
faddp
xor
mov
stos
roll
push
pop
push
adc
fcmovu
mov
sbb
mov
and
adc
sbb
repz
les
scas
stos
into
xchg
dec
popa
mov
lea
mov
repz
andl
xor
dec
mov
ret
mov
and
adc
or
cmp
test
xchg
mov
adc
cltd
sub
lret
pop
insl
xchg
aaa
xchg
cs
adc
sub
jle
out
sbb
insl
pop
mov
or
pop
in
jmp
cmpsl
push
sub
das
movsl
dec
sti
push
enter
aas
adc
dec
jno
or
xor
xchg
xchg
xchg
xchg
jle
lds
testl
icebp
push
and
and
push
mov
mov
cmc
pop
push
das
mov
mov
mov
push
sub
sub
mov
add
lret
std
data16
test
pop
icebp
imul
and
pop
ret
pop
xchg
mov
adc
jbe
dec
leave
rorl
inc
aad
cmp
or
jns
mov
icebp
sbb
jno
mov
cmp
cmpsl
js
stos
pushf
in
rorl
mov
stc
pop
fstl
jecxz
dec
data16
mov
or
in
ds
push
xor
jae
mov
stos
add
or
in
xor
or
shl
outsb
push
in
and
test
popf
aam
out
int3
push
ss
outsb
outsl
test
stos
sbb
add
nop
pusha
js
sbb
pop
outsl
pop
jecxz
mov
xchg
nop
pop
ret
jo
in
mov
fwait
inc
loope
pop
maskmovq
testl
ss
ss
push
insb
jmp
sub
sub
jbe
mov
jp
pop
enter
lret
int3
cwtl
loop
negl
std
jecxz
mov
mov
cmpsb
fisttpll
cmc
imul
scas
mov
mov
jle
lret
cltd
push
push
or
rorl
je
ss
insb
cld
push
mov
pop
xchg
pop
mov
jmp
pop
push
clc
aad
push
hlt
mov
pop
and
sbb
divl
push
dec
mov
add
ja
mov
push
or
sub
insl
out
stc
popa
mov
or
fbld
xor
fdivrs
jo
data16
cmp
lock
daa
aas
rorl
icebp
inc
fldcw
popl
ds
imul
outsb
aaa
notb
into
jns
fildl
mov
outsl
or
dec
cmp
adcl
dec
lret
jp
mov
cli
push
fnsave
aad
into
pop
sub
cmp
rcll
push
cmp
dec
fcmovnu
xor
sub
pop
pop
sarl
push
fs
mov
scas
mov
sub
jo
mov
cli
loopnew
negb
cmp
nop
xchg
in
inc
aad
xchg
cs
gs
mov
or
test
cmc
nop
cmc
pop
or
out
insb
push
push
pop
pushf
lods
mov
pushf
xlat
lahf
repnz
pop
pop
mov
xchg
insl
cli
cwtl
cmp
iret
jle
mov
jle
mov
push
add
mov
or
cltd
or
aaa
inc
jl
xor
adc
call
inc
int3
jno
aas
or
xchg
pop
jnp
stos
popl
popf
dec
or
add
subb
mov
pop
je
pop
repnz
or
insb
push
add
and
loope
mov
jmp
scas
xchg
mov
push
lock
mov
xchg
enter
sbb
jle
mov
bound
scas
lds
xchg
test
mov
insl
mov
cmp
xor
or
pop
sub
pushf
fdivl
pop
in
inc
mov
pop
adc
enter
mov
sub
sbb
outsb
repnz
rcrl
mov
add
pop
cli
into
sub
xlat
jns
sub
pop
std
adc
scas
outsl
mov
sbb
in
cmpb
xchg
xchg
arpl
aas
mov
dec
es
enter
xchg
outsl
out
leave
cs
gs
rolb
pusha
fldt
mov
add
icebp
mov
insb
jnp
add
inc
push
ret
les
jp
mulb
sub
cmpsl
shlb
fmull
push
push
pop
and
scas
sarb
jno
mov
daa
sub
xor
lods
add
sbb
jb
cwtl
in
push
cmp
or
les
xchg
or
mov
add
push
sti
mov
cmp
fidivrl
scas
ss
push
adc
jg
enter
aas
lcall
sbbl
mov
outsb
pop
sbb
cmpsb
cmp
mov
jno
inc
cmp
fbstp
sahf
xchg
repnz
outsb
push
jns
int
cld
les
pop
dec
repz
call
pop
fdivrp
and
into
push
sbb
loop
insl
les
pop
adc
in
fstpt
sahf
adc
repz
jle
aas
mov
sti
xor
notl
outsl
fwait
test
int
jo
fcomi
jno
pop
div
movsl
ds
test
movsl
push
inc
pushf
jbe
ret
mov
inc
pop
xchg
icebp
dec
push
mov
ret
lods
push
test
jmp
pop
clc
and
insb
out
jmp
pop
push
loope
and
xor
pop
xchg
shl
ret
fsubl
mov
sbb
rolb
mov
mov
cmp
or
jecxz
test
repz
fsubrl
nop
push
aam
movb
jecxz,pt
lcall
sbb
ror
sub
mov
popf
ds
jle
ss
out
pusha
push
mov
push
int3
xchg
leave
cmp
lods
add
mov
mov
nop
out
ds
add
xor
stos
dec
out
jmp
push
sbb
lcall
imul
add
push
dec
es
loop
mov
aaa
jmp
jmp
out
cmpsl
nop
mov
and
loope
inc
pop
push
cmp
movsl
push
insb
loope
inc
daa
mov
lea
arpl
push
loopne
sahf
popa
aaa
xchg
inc
fidivs
fwait
mov
xchg
push
adc
and
xor
and
mov
push
dec
xchg
outsl
jg
add
imul
xchg
xor
mov
aaa
or
jae
mov
mov
cmpsl
sub
push
jo
jecxz
cmpsb
xor
cld
mov
in
dec
shr
out
mov
xor
inc
add
inc
sbb
mov
setl
sub
inc
add
and
and
and
popf
dec
fistps
rcrb
and
jg
fxch
loopne
in
dec
dec
pusha
push
cmp
jne
mov
cmp
jge
pushf
mov
rcr
lret
leave
push
jne
es
mov
cmpsl
out
mov
jb
pop
mov
mov
inc
scas
push
jge
inc
push
scas
stc
imul
addb
inc
xchg
cmp
pushf
sub
les
stos
xor
pop
fisubl
cwtl
xor
ljmp
fadds
inc
stos
sub
js
mov
cmc
and
pop
cmp
nop
popf
dec
xor
mov
jge
popf
ss
and
es
call
fcmovne
repz
push
lahf
pop
xchg
mov
jnp
ljmp
mov
xor
jg
push
and
or
repz
inc
aas
cmp
mov
jb
lcall
push
mov
repz
jns
scas
jno
stc
sbb
jl
popf
xchg
dec
ret
sbb
hlt
rep
lds
adc
xchg
push
stos
in
idivb
jbe
test
jae
stos
dec
sahf
cmp
jb
test
jmp
push
jg
xor
test
incl
pusha
popa
fidivs
push
mov
xor
dec
push
or
addr16
xlat
stc
pop
adcb
lods
iret
mov
mov
xor
mov
add
outsb
in
shrb
xor
push
or
cmpsb
add
enter
mov
daa
cltd
shll
incl
mov
popl
push
mov
gs
add
cmp
jg
sti
mov
push
in
sbb
cmp
push
inc
lods
inc
in
movsb
or
sub
test
mov
xlat
xor
pop
and
add
in
sub
fmuls
dec
rcrb
andb
xchg
xchg
mov
arpl
enter
sub
xchg
sbb
pusha
and
add
in
push
and
popf
xchg
arpl
jnp
xor
rclb
push
shrb
mov
stos
subb
add
xor
sbb
jecxz
xchg
andb
adc
js
xchg
das
jmp
fimull
scas
jnp
fs
sti
aad
and
outsb
jp
mov
dec
mov
sarb
xlat
popa
aad
pop
arpl
scas
test
test
in
cmc
or
fadds
es
xor
lret
cld
jbe
imul
outsl
repnz
movb
das
pop
mov
jae
rcll
lds
push
mov
and
cmpb
gs
popa
add
inc
cmp
iret
ret
mov
dec
stos
lret
pop
sar
cmpsl
test
push
sub
jmp
aam
lock
add
xchg
pop
jnp
cmpsl
iret
mov
std
aas
adc
mov
movq
ljmp
adc
in
jno
mov
cli
mov
repz
pushf
mov
or
rcll
int
fdivr
ret
dec
mov
in
pop
dec
xor
std
sub
sti
mov
sbb
jg
lods
outsb
stos
or
cmp
mov
mov
ljmp
adc
mov
mov
punpckhdq
roll
aaa
mov
data16
out
cmp
pop
jge
sub
jno
push
xchg
inc
enter
movsl
or
push
adc
adc
dec
pusha
add
and
jmp
cmp
addb
jp
sub
aam
sub
mov
and
das
push
imull
pop
mov
mov
popa
or
jg
das
lods
sbb
push
test
arpl
push
repnz
push
int3
ds
mov
sub
into
sbb
push
jge
sbb
sub
dec
mov
test
and
sub
mov
fwait
bound
out
sbb
add
mov
ds
cld
in
data16
cs
aaa
add
fistpll
daa
cmc
stc
pushf
outsl
sti
adcl
jg
adc
jl
or
push
sub
imul
fcoml
sbb
push
push
lea
gs
imul
roll
pop
out
sub
mov
sub
pop
jb
out
mov
cltd
xor
popf
or
inc
cmpsl
cmp
sbb
add
push
mov
in
cmc
cmpb
mov
pop
ret
mov
mov
adc
cmpsb
fisubrs
cmc
hlt
jbe
push
dec
sbb
loop
lea
jmp
or
and
mov
out
sti
xor
jmp
sahf
inc
pop
lcall
fldl
jo
fmulp
fmuls
std
stos
pusha
outsb
inc
jg
lea
sub
out
js
std
mov
loop
lret
testb
mov
pop
add
clc
out
sbb
push
xor
out
dec
xchg
fdivrs
jne
int
jo
cmpl
into
adc
cmp
mov
cmp
push
jecxz
insb
daa
and
pusha
andb
push
inc
lret
leave
movsl
mov
daa
out
pop
mov
and
loope
or
fldt
addr16
or
insl
stc
stos
popf
jno
jecxz
push
and
push
jns
in
pop
sbb
cmc
sti
inc
push
ds
adc
xchg
aaa
mov
cltd
iret
call
shlb
cmovns
mov
adc
pop
cmp
scas
bound
and
mov
das
adc
inc
and
jno
mov
mov
movsl
daa
or
rcrb
fdiv
pop
add
mov
lods
xor
sub
lret
loopne
push
jge
xchg
loop
push
lds
or
jl
in
mov
jo
jg
mov
je
xchg
ljmp
cld
mov
pusha
push
mov
cmp
dec
cltd
hlt
push
add
rclb
ficompl
xchg
and
enter
ret
jecxz
stos
cmp
dec
adcl
cmp
imul
outsb
or
shlb
in
xchg
mov
sarb
enter
mov
out
in
xchg
fstp
frstor
flds
loopne
sti
cmp
stos
cmpb
sbb
sbb
les
sub
addr16
pop
mov
mov
xorl
lret
cmp
adc
pop
jp
bound
mov
stc
scas
mov
push
adc
inc
lret
mov
int
dec
inc
ljmp
jnp
add
or
orb
mov
cmpsb
rcrl
jae
push
je
mov
dec
or
pusha
cmc
push
inc
les
std
leave
aaa
mov
leave
popf
push
out
xlat
xor
sub
shrb
das
lock
dec
ss
mov
rcl
xchg
stos
cmp
push
incb
mov
stos
cmp
mov
jne
jno
push
je
and
dec
inc
push
test
mov
inc
outsl
in
call
pop
sarb
sub
lret
mov
adc
and
cmpl
fadds
rcrl
adcb
sub
xchg
jnp
ret
add
jne
push
dec
iret
fidivrs
or
mov
fmuls
push
sbbb
cmpb
mov
xchg
pushf
dec
jne
mov
cmpl
pop
mov
jl
dec
popf
jl
minps
dec
inc
lods
mov
sti
mov
inc
cmpsl
push
xchg
adc
adc
out
in
sub
hlt
les
inc
imulb
dec
xchg
jmp
jno
loop
sub
and
pop
xor
pop
mov
test
movsl
stos
jl
and
nop
in
xchg
jecxz
mov
fwait
lret
ds
lods
idivl
xchg
dec
fsubrs
mov
sbb
pop
mov
cld
cmp
dec
cmp
test
and
fs
jmp
flds
sbb
es
out
mov
and
sbb
mov
push
or
mov
test
and
cmpsb
and
sbb
dec
jbe
pop
ret
mov
data16
addl
es
push
xor
dec
cmpsl
test
icebp
lahf
sub
fnsave
dec
pop
and
lret
cmpsb
ret
dec
push
icebp
cmp
nop
and
stc
sub
and
cltd
mov
lret
jbe
cltd
sub
popf
cwtl
sbb
jb
pushf
jmp
lcall
inc
sub
xchg
jo
daa
mov
sub
bound
mov
pop
je
xchg
aas
mov
inc
jne
cmovge
ret
mov
lock
ljmp
mov
test
sbb
xlat
cmp
xchg
int
or
es
push
sub
and
pop
mov
addl
xchg
outsb
lock
movsb
imul
and
movsb
jmp
jns
mov
xchg
sbb
in
cmp
jp
adc
xchg
cmp
fcmovne
std
call
pop
test
inc
mov
push
lcall
or
enter
jge
xchg
push
xlat
mov
xor
sbb
or
shl
pop
je
push
addr16
xchg
mov
arpl
loope
js
mov
dec
add
aaa
cmp
mov
popa
push
jge
push
test
dec
jno
ja
popa
cmp
test
lcall
subb
cmp
xchg
push
xlat
cmp
pop
pushf
mov
aad
in
dec
pop
lcall
inc
out
outsb
daa
mov
testl
xchg
add
push
sbb
cmp
loop
sbb
lcall
pop
dec
cmp
or
xor
or
xchg
insl
add
add
outsl
and
lret
pop
int
enter
or
loope
insl
and
add
fs
jle
lds
ret
clc
movsb
adc
dec
hlt
xor
sbb
add
cmpsb
adc
ljmp
popa
jo
mov
ds
imul
movq
xor
inc
mov
and
pusha
fcmovb
mov
imul
sbb
mov
cmp
icebp
leave
sbb
loope
int
fs
out
cli
nop
jmp
inc
cmp
cs
stos
icebp
pop
nop
fwait
cs
sbb
in
add
mov
aad
mov
xlat
pop
jl
dec
imul
adc
imul
inc
leave
movsb
mov
mov
cmp
fs
inc
cmc
jns
mov
and
sbb
icebp
push
inc
dec
fwait
add
subb
mov
mov
or
sbb
mov
repnz
pop
in
ds
pusha
cwtl
call
push
pop
lods
dec
push
jnp
mov
lret
jle
enter
lock
decb
cmp
std
jmp
xchg
ret
xchg
popa
ret
mov
movsl
mov
add
pop
out
sti
fisttpll
enter
lock
bound
lahf
cmc
pop
xor
jl
jmp
adc
push
jl
into
xorl
mov
inc
pop
hlt
movsl
mov
ljmp
add
sbb
sub
jmp
pop
sbb
push
sub
cmp
and
cmp
dec
inc
mov
inc
inc
or
cmpsb
mov
fisttpll
or
and
leave
xchg
jmp
add
mov
imul
fwait
xor
adcl
sbbl
stos
mov
pop
cmpsl
frstor
cmp
in
movsb
mov
ljmp
add
xor
xchg
adc
mov
nop
push
lods
inc
outsl
int
push
mov
mov
scas
scas
out
movnti
cmpb
or
sti
jmp
and
outsb
aam
cmp
pop
dec
pop
mov
adc
jne
xor
and
mov
movsb
mov
jmp
sub
add
xchg
xor
jno
js
sub
stos
push
mov
adc
shlb
xor
or
stc
fisttps
dec
mov
call
or
mov
cmp
pop
mov
sbb
stos
push
sbb
inc
pop
or
or
ss
sub
pop
adc
push
cmp
xlat
mov
push
jp
inc
jo
mov
loop
int3
mov
les
adc
cmp
mov
insb
dec
xchg
or
and
xor
jae
aaa
jb
jl
icebp
jle
sbb
add
mov
test
xchg
add
inc
cmp
adc
jbe
sbb
aad
adc
shll
loope
lods
push
ljmp
xlat
push
aas
scas
add
pop
mov
mov
inc
stos
jne
testb
push
scas
push
and
ss
adc
cmp
repnz
out
ja
sbb
das
sti
mov
mov
scas
sbb
pop
adc
dec
xchg
push
fsubrp
shll
sar
xorb
cmc
out
dec
or
out
mov
int3
aam
push
lahf
mov
out
pcmpeqb
push
sbb
sub
mov
sti
jo
pop
push
ds
cwtl
and
cmp
repnz
or
movsl
pop
pop
jno
out
inc
jl
mov
sub
mov
xor
sti
stos
xorb
or
mov
movzbl
outsb
fnstenv
sub
sub
divb
inc
inc
ret
cmpsb
jge
filds
jg
mov
push
test
jo
or
sub
push
outsb
inc
shl
popa
lea
std
out
cmpsb
popf
xor
pop
jne
or
jb
push
in
lods
in
and
and
mov
into
push
popa
call
lds
ds
out
dec
push
adc
stc
movsl
leave
outsb
lcall
fld
xor
movsb
in
std
call
cmpsb
cpuid
lret
pop
scas
xor
pushf
subl
pop
sub
es
imul
adc
sbb
jg
adc
test
pusha
and
scas
push
scas
dec
mov
cs
push
in
je
inc
lea
jle
pop
pushf
fwait
xor
jne
sbb
add
pop
imul
inc
xor
mov
int3
and
sbb
popa
xchg
sub
mov
sub
clc
mov
gs
inc
imul
push
insb
and
cmp
inc
aaa
xchg
outsl
xchg
add
nop
fisubrs
sar
sbb
cmp
shll
fwait
add
jne
sbb
jae
mov
xchg
js
arpl
loope
daa
xor
sbb
jmp
pop
test
addb
cs
movl
dec
jp
out
es
pop
je
in
scas
cmpsb
repz
lock
ret
mov
ss
inc
mov
movsl
dec
push
rolb
lahf
imul
mov
fnstcw
push
sbb
mov
xchg
push
loopne
aas
cmp
dec
insb
adc
cmp
rcll
mov
xchg
inc
loop
sbb
add
xchg
and
add
sbb
dec
arpl
mov
mov
xchg
icebp
jno
sub
pusha
dec
add
inc
inc
in
lock
call
loope
je
xor
cli
pop
scas
jb
in
fists
mov
mov
outsb
insl
push
inc
aas
pop
rcll
les
dec
mov
jne
or
ficomps
ds
roll
aam
mov
into
loop
add
or
and
dec
loopne
sub
cmp
xor
rclb
aaa
std
dec
pop
xor
insl
add
stos
sbb
test
cli
test
test
jl
xor
or
or
fstpt
lahf
fidivrl
data16
xchg
dec
jg
test
xchg
imul
sbb
divb
icebp
sar
fbld
ja
test
inc
mov
aas
stos
sub
out
cltd
xor
and
mov
es
adc
push
fwait
pop
rorl
jl
or
lds
bound
mov
rcrl
test
inc
pop
or
sbbl
xchg
mov
dec
sti
xchg
addr16
gs
test
xlat
mov
xor
jl
fucomi
adc
inc
lahf
das
xor
cld
fimull
out
std
pop
mov
into
orps
movsl
add
popf
ficompl
mov
push
sti
adc
xchg
jno
push
test
pushf
movsl
int
pusha
loop
pushl
shlb
pushl
inc
jne
adc
outsb
mov
dec
int
rclb
push
inc
push
movsb
pop
cmovns
pop
addr16
dec
mov
scas
pop
fsubs
aas
pcmpeqd
sbb
mov
outsl
cltd
or
adc
xor
mov
mov
adc
les
sub
jnp
in
push
or
insl
imul
loop
xchg
js
xchg
push
inc
xor
inc
xchg
jae
cmp
mov
lret
jno
mov
jne
sub
mov
xlat
imul
push
notb
add
mov
jge
xchg
and
fcoml
push
jae
cmp
pop
push
ja
js
sbb
hlt
push
mov
pop
jle
bound
push
loop
xor
popa
les
sbb
ljmp
push
pop
mov
mov
test
or
popa
sub
insb
arpl
push
addr16
mov
add
and
pop
movl
add
jo
call
and
mov
out
sub
rep
inc
imul
and
popa
pop
lcall
pop
push
outsb
mov
nop
cmpsb
loop
dec
sbb
jo
fwait
xor
std
movsl
jl
pusha
cmp
in
out
repnz
fs
lret
fiadds
xor
roll
lret
inc
aaa
cmp
idivl
jno
mov
loopne
call
or
mov
shrb
sub
outsb
lock
add
pop
inc
cli
jae
imul
int3
dec
ja
testl
mov
ss
dec
push
loope
enter
inc
inc
std
mov
insb
lods
ds
cld
inc
popl
outsl
sbb
in
pushf
inc
lret
lea
pop
ljmp
bound
ficoml
lahf
sbb
jno
arpl
arpl
sub
cs
cmp
cmpsl
jl
cltd
mov
push
lds
sbb
xchg
inc
stc
mov
lret
test
rcll
inc
ja
shll
aaa
lea
outsl
cltd
rol
jns
add
or
mul
mov
sub
push
scas
xorl
lea
inc
dec
ret
sti
filds
lret
pop
dec
scas
push
nop
lret
popa
inc
fwait
das
adc
es
adc
in
push
pop
xchg
sbb
ljmp
mov
jge
loope
call
and
mull
push
sti
xor
dec
lret
imul
sub
in
xor
push
daa
es
or
cltd
xlat
or
inc
jae
enter
jmp
mov
or
or
xchg
test
inc
pushf
jge
cmp
or
loope
inc
mov
and
dec
fcmovne
mull
push
mov
ret
in
jmp
pop
xor
pop
cli
push
mov
lea
jmp
pop
mov
jo
mov
dec
test
add
rclb
int3
sarb
cli
shl
dec
popf
xchg
lahf
test
sti
cltd
insb
dec
xor
xor
mov
mov
add
mov
mov
dec
popf
jmp
in
daa
sbb
ret
or
cld
hlt
adc
mov
push
fs
xchg
cmpsb
lahf
cli
shrl
jp
int3
push
fsubr
test
and
mov
add
adc
in
in
arpl
push
mov
and
sbb
pop
mov
xchg
add
pop
dec
sub
cmp
das
js
push
push
cmp
jg
mov
mov
adc
movsl
rorl
pop
test
fnstenv
pop
xlat
push
pusha
cmp
lds
add
shll
into
mov
xchg
or
dec
fs
enter
xchg
mov
mov
jl
dec
jp
test
daa
fs
es
xor
outsl
xchg
fisubl
inc
shll
movsb
mov
lcall
cltd
xchg
and
fidivs
mov
sub
lea
adc
popf
push
add
mov
or
jo
enter
dec
pop
fisubl
mov
mov
negl
fwait
lea
mov
hlt
push
pop
ret
rcll
sub
sub
subb
hlt
fldenv
lea
pop
mov
lea
cmp
test
mov
dec
sbb
mov
sub
pop
cmp
fisubrl
ret
xchg
sbb
inc
pop
in
xor
xchg
in
push
dec
imul
dec
sbb
sbbl
bound
enter
std
sbb
xchg
fdivp
lahf
lock
xchg
in
mov
stos
das
gs
or
adcl
add
push
cmp
jge
stc
mov
jle
add
ficompl
push
into
incb
testl
in
pusha
ret
loopne
ret
movb
inc
mov
arpl
lret
xchg
mov
lcall
jnp
lcall
outsl
lea
out
inc
mov
mov
lcall
add
pop
mov
fisttpl
clc
xlat
push
inc
mov
mov
mov
imul
push
fwait
fs
rep
leave
and
xor
xchg
xchg
jg
ljmp
xor
pop
or
insl
jle
lcall
pop
ret
shll
js
das
jmp
fistps
mov
arpl
mov
cmp
cmp
push
mov
sub
call
xchg
and
gs
fdivr
pop
mov
push
cwtl
inc
out
mov
cmpsb
repnz
xor
jle
sbb
inc
ds
push
push
xchg
sbb
out
push
clc
lods
xchg
imul
icebp
mov
test
xchg
ljmp
stos
dec
dec
jo
push
cs
jnp
jb
sub
or
jmp
shl
mov
inc
cltd
jmp
sub
mov
call
pop
mov
loope
sub
or
mov
sbb
pop
adc
ret
cmp
mov
mov
pop
filds
jle
mov
xor
mov
xor
xor
cwtl
mov
jo
sub
dec
stos
sbb
jne
imul
or
mov
jae
leave
push
loopne
and
inc
aas
or
mov
int3
lods
jle
mov
rolb
or
psubsw
sub
in
aad
jno
aaa
dec
loope
sub
push
mov
mov
dec
dec
jl
mov
outsb
jge
inc
jo
jae
test
icebp
sbb
cmpsb
lea
jno
bound
stc
ffreep
push
gs
sub
or
adc
pop
out
xlat
jle
push
sbb
push
sub
and
sbb
clc
aad
pop
loope
movsl
xchg
clc
dec
fwait
insl
adcl
adc
dec
mov
jne
adc
xor
pop
in
sbb
sbb
test
add
jns
lods
mov
loop
push
mov
dec
scas
lds
sub
ficoml
out
js
test
inc
mov
out
movsl
in
pop
cmp
out
pop
out
mov
btc
sub
iret
or
jae
lret
movsl
sbb
scas
ds
mov
andl
mov
outsb
adc
rcrl
mov
mov
push
inc
inc
inc
mov
push
mov
jecxz
movsb
ret
outsb
adcl
mov
push
imul
scas
pop
inc
popa
mov
or
andl
jmp
ds
sub
mov
xchg
xor
fwait
imul
popf
sbb
cmp
int
das
push
insb
add
xchg
jle
mov
cmp
enter
adc
lock
movsb
sub
enter
push
xor
xchg
aam
mov
int
adc
or
fcoml
icebp
movsw
push
popa
inc
in
xchg
in
inc
icebp
pop
xor
insb
jle
sahf
out
sbb
cltd
lods
js
jl
notl
pop
mov
add
xor
cld
push
mov
sub
jae
ljmp
lret
cmpsl
mov
repnz
jo
ss
sub
mov
jae
repnz
xor
pop
addl
push
fnstcw
nop
sub
inc
pop
das
sbb
inc
mov
mov
dec
xchg
pop
sahf
push
in
xchg
fnstsw
int3
mov
iret
movl
mov
mov
mov
pop
dec
fdivrl
mov
xor
stos
stc
jg
mulb
out
sbb
cmpsl
data16
push
mov
push
mov
xor
imul
psubsb
mov
iret
jb
sub
movsb
dec
jbe
pop
xlat
jmp
xor
push
cmpsl
jbe
xor
fwait
mov
and
mov
mov
jnp
add
out
pop
popf
lcall
cmp
mov
lahf
fisubrs
fistps
mov
xor
movsl
stos
lds
and
stc
mov
push
mov
sub
push
add
ds
fdivrl
push
fistl
arpl
dec
jp
cmp
pop
sub
cmpsb
mov
pop
pop
pop
push
mov
enter
rcrb
mov
ja
pop
jne
jg
cmp
je
push
inc
xchg
xchg
mov
sahf
and
mov
sub
cmp
fbld
test
rclb
mov
sbb
scas
jl,pn
push
jb
inc
jo
stos
dec
mov
inc
jno
mov
ljmp
pop
jae
mov
mov
loop
out
jmp
pop
xchg
cmp
push
mov
or
pop
xchg
popf
or
xor
xor
xchg
xor
cmp
pop
iret
sub
lret
cmp
sub
mov
mov
jecxz
jmp
daa
bound
es
adc
lcall
test
add
jae
xchg
dec
lret
cmpsl
adc
outsb
test
ljmp
mov
dec
lret
jge
fdivr
and
jns
jnp
sub
scas
mov
cmp
out
mov
hlt
test
scas
incb
mov
mov
shrl
cli
push
mov
ja
ja
cmp
pusha
pop
inc
das
test
outsb
js
out
vpcmpeqw
stc
aam
or
in
shl
cmp
test
pop
pop
rcrb
ret
cli
add
inc
sbb
aam
scas
pop
cs
ljmp
cmp
ret
mov
or
sbb
mov
in
imul
daa
addr16
imul
call
cmp
xor
out
fistpll
stos
mov
fucomi
pop
sbb
xchg
ljmp
push
gs
pop
out
push
jg
aas
xchg
mov
das
jecxz
push
leave
and
inc
pop
jl
call
lds
mov
lock
jo
mov
inc
dec
cmpxchg
add
mov
stc
mov
cld
push
out
adc
pop
pop
andl
and
push
mov
mov
sub
sets
jne
or
sbb
cltd
xchg
xor
mov
popf
xchg
mov
mov
das
aaa
fcmove
and
arpl
sub
into
mov
loope
sbb
and
mov
mov
cmpsb
in
lret
jae
mov
loope
adc
fidivrs
pop
sbb
aam
dec
add
sub
mov
jmp
inc
jno
pop
and
or
dec
sahf
add
mov
sub
xchg
filds
pusha
fisubrs
adc
into
pop
jp
adc
mov
sub
push
cmp
mov
sar
add
out
out
xchg
jg
jno
mov
and
mov
nop
repnz
shlb
lret
imul
dec
jecxz
lret
push
add
inc
outsb
sub
inc
aas
xchg
addr16
xchg
jg
sub
add
outsb
sub
adc
fstp
cmpsl
mov
add
hlt
pop
cmp
js
mov
imul
ja
mov
mov
stos
sub
mov
shld
or
sub
mov
lret
jns
sbb
adc
add
daa
fdiv
lcall
push
mov
out
cmp
das
into
ds
push
push
dec
mov
add
jle
mov
push
cmpsb
mov
gs
mov
dec
xchg
pusha
cmp
repz
add
mov
mov
cmp
test
mov
test
lds
int3
xchg
scas
adcl
push
shrl
jb
mov
fsubs
lods
ja
out
ret
test
xor
rolb
sbbb
and
not
insl
pop
and
mov
outsl
xor
stos
pop
xchg
jno
test
iret
dec
test
add
nop
sub
cmpsb
ret
dec
mov
adc
and
mov
cmp
enter
rol
loope
push
cmp
mov
test
jns
jmp
xor
mov
cld
mov
mov
ss
cmp
dec
in
sti
jne
push
aaa
fwait
lea
xchg
sub
insl
mov
mov
xlat
loop
loopne
dec
mov
loopne
add
enter
and
xor
js
mov
inc
lock
sub
xor
push
test
inc
mov
or
lcall
and
aam
sub
js
testb
add
xchg
pop
aad
movsb
jg
jo
jbe
addl
loop
shrl
xchg
add
negl
insl
dec
sub
out
lods
dec
repnz
xchg
xor
dec
out
loope
cmpsb
popf
sub
adc
jp
mov
stc
sub
es
adc
add
scas
imul
cmpsl
out
into
addr16
mov
es
lea
xor
ja
mov
movsb
ljmp
dec
out
out
pusha
cmp
inc
mov
std
lock
int3
sbbb
mov
dec
xor
jnp
adc
inc
fs
push
push
inc
add
aad
out
xor
sbbb
mov
and
push
jp
cwtl
pop
fidivs
xchg
xor
call
rcll
mov
mov
popa
mov
mov
add
or
jb
mov
inc
lret
sub
cli
xor
cmp
negb
sub
test
inc
stc
sbb
int3
xchg
lret
shr
cmpsl
xchg
hlt
xor
arpl
rcll
jecxz
sub
xor
or
add
insb
aam
outsb
adcb
jl
adc
cmc
insb
push
jge
inc
ja
int3
insl
add
lods
push
xchg
out
lods
vhsubps
imul
mov
cmp
ret
mov
mov
mov
cmp
inc
sub
ret
ss
sub
loope
sarl
mov
mov
int
sahf
sbb
orb
add
jnp
pop
insl
sbb
inc
adc
sti
insb
ja
mov
or
shlb
scas
inc
cmp
aam
jp
xchg
nop
sbb
adc
fistps
mov
sbb
aam
pop
nop
push
aad
jb
inc
aaa
adcb
sub
xor
jno
add
mov
push
fwait
pop
and
orl
imul
mov
flds
or
notb
cwtl
ret
fistl
mov
pop
stc
cmp
sbb
pop
inc
or
xlat
fldl
addb
lret
and
pusha
push
xor
adc
cmp
into
pop
add
fnstsw
push
sarb
mov
or
imul
mov
cmpsl
lock
push
and
xchg
cmp
xor
and
xchg
xor
imull
sbb
sbb
mov
shll
gs
adc
scas
adc
inc
cmp
jl
add
fwait
mov
out
mov
repz
pop
int
mov
inc
lret
dec
loop
lret
cmpsl
scas
and
xchg
mov
pop
inc
js
pop
jg
in
cmp
pusha
mov
or
into
dec
lahf
jbe
movsb
pop
push
mov
adc
pop
cmp
ret
dec
stos
rcrl
dec
sub
sbb
pop
outsl
xchg
sbb
hlt
mov
xchg
mov
ficoml
bound
pop
and
pusha
je
and
jne
xor
loopne
xchg
cmp
fs
sub
sahf
ret
enter
call
fnstenv
jl
aam
out
fwait
jle
cmp
stc
rcr
jbe
mov
add
cmp
and
push
lea
pop
jbe
movsb
jecxz
mov
sub
test
cmpsl
push
je
std
sbb
jmp
out
jl
rorb
test
movsb
push
jle
and
cmp
movsl
in
lds
cmp
gs
sar
outsl
jbe
add
popa
lds
inc
aad
out
cmc
scas
xchg
sub
mov
sbbl
mov
xchg
lods
imul
xchg
sbb
aas
lock
test
out
loop
fmuls
xor
mov
sbb
ficompl
mov
lret
cmp
cmp
adc
mov
adc
or
or
loopne
fwait
lret
mov
imulb
aad
scas
push
ljmp
fistpll
sahf
jge
pusha
cmpsb
lahf
adc
mov
push
cwtl
lahf
lahf
or
test
fnsave
aaa
dec
or
ljmp
ret
jge
or
xorb
pop
pop
sbb
int
cmp
lea
add
mov
dec
pop
lea
inc
inc
cmpl
cmp
jmp
inc
jns
or
fadds
shrb
sbb
sub
mov
scas
push
test
fdivrs
adc
in
leave
pop
mov
mov
or
jno
xor
rorl
or
push
jne
xchg
jne
leave
pop
iret
jnp
pop
sub
push
loopne
mov
test
dec
out
inc
add
push
cmpsb
mov
xlat
pushf
leave
jmp
adc
loopne
push
stos
es
and
cmp
add
pushf
fisubl
inc
lods
cmp
xchg
outsb
add
stc
cmp
lea
or
push
cld
jg
push
mov
in
xchg
cltd
xchg
nop
popf
and
mov
sbb
or
jae
fdivr
js
mov
mov
rcrl
stos
mov
adc
jnp
xor
ret
andl
adc
stc
rcrl
daa
icebp
mov
fnstenv
mov
mov
pop
fisubs
xor
fs
popa
cmp
add
dec
add
add
scas
xchg
sbb
sarl
xor
outsb
daa
jns
dec
sbb
inc
push
aad
xchg
sub
test
or
jne
pop
mov
jecxz
jg
mov
jmp
xchg
je
add
ret
push
lahf
and
or
xchg
loop
pop
gs
push
pop
and
outsl
loopne
adc
fldenv
adc
or
imul
push
pop
outsl
das
cs
xor
testb
test
add
aam
daa
sub
scas
stos
mov
imul
cmp
js
mov
xor
outsl
mov
imul
xchg
out
inc
cltd
into
mov
imulb
cmp
jbe
xor
pop
xor
repnz
push
sbb
and
int3
out
imul
xlat
rcrb
cmpsb
xchg
cmp
inc
inc
or
mov
sub
jbe
out
inc
inc
and
loopne
gs
imulb
loopne
xchg
add
jns
clc
xchg
test
mov
ss
ret
mov
out
leave
nop
cmp
xchg
sbb
test
movsl
rorl
int3
cmp
and
pop
ror
bound
adc
xchg
jmp
rorb
dec
dec
lods
dec
pop
arpl
add
jae
jmp
cmc
in
filds
xchg
aam
es
notl
arpl
xor
xor
cmpsl
addr16
mov
je
xor
mov
sti
pop
xorb
xchg
dec
mov
sti
push
mov
jo
xchg
int3
insb
xor
push
and
cmp
add
cmpsl
repz
rcll
fs
stos
xchg
add
and
sbb
add
mov
jmp
fldt
jnp
jg
xchg
dec
int3
in
int
jno
lods
lods
cmp
sti
mov
mov
bndldx
inc
iret
add
ja
fs
std
gs
icebp
imulb
imulb
xchg
push
cwtl
test
in
fisttpl
xchg
mov
js
rol
or
aaa
lea
cmp
scas
leave
pop
inc
jp
call
out
push
jae
orb
jge
out
inc
sub
adc
push
or
aaa
in
xchg
inc
pop
mov
mov
sub
and
fildl
jae
repnz
lea
jecxz
jbe
lock
xor
and
mov
nop
mov
push
mov
sub
mov
cmp
xchg
test
or
inc
xor
pusha
cld
cmp
fs
xor
aam
stos
ds
fs
and
inc
cmp
mov
sbb
xor
mov
aad
mov
jnp
inc
lock
and
cmp
in
addr16
pop
aas
pop
sbb
icebp
mov
pop
xchg
test
js
push
dec
dec
mov
sti
cmc
inc
jl
pop
sbb
shr
outsl
xchg
loopne
xor
cmp
nop
pop
mov
adc
cmp
mov
push
mov
jge
loop
data16
dec
add
outsb
repnz
or
nop
orl
sub
cmp
pop
popa
mov
lahf
into
push
pop
dec
cmp
jecxz
adc
or
popa
cmpsl
cmc
xchg
xor
inc
xchg
pop
imul
scas
or
xadd
jge
imul
dec
push
scas
adc
xchg
cmp
mov
xchg
add
or
and
daa
adc
inc
or
arpl
out
mov
mov
ja
mov
stos
dec
scas
add
ja
xor
xchg
jl
shrb
sbb
fisubrl
dec
pop
es
dec
adc
cwtl
sub
xchg
fwait
aas
les
shrl
lret
pop
inc
add
pop
xlat
inc
mov
into
movhps
push
testb
pop
or
pusha
pop
out
push
aad
test
lds
push
es
cmp
aad
test
mov
mov
pop
sbb
inc
add
jne
xchg
test
pop
push
jmp
orl
repnz
jle
mov
ds
mov
push
scas
mov
loope
pusha
ficoms
pushf
inc
or
imul
add
mov
mov
int3
inc
pop
xor
lret
dec
sub
in
sbb
mov
lret
and
loop
xchg
scas
pop
fsubs
fcmovnb
mov
loop
pop
nop
dec
loope
pop
jno
push
sub
inc
cwtl
pusha
outsl
iret
pushf
aaa
mov
xchg
mov
adc
icebp
mov
pop
aaa
mov
lcall
insb
fisubrl
pop
add
or
adc
aam
cmp
and
cmpsl
aad
mov
cmp
scas
xor
jbe
pop
ret
es
adc
sbb
lock
in
movsb
clc
adc
lahf
je
dec
repz
dec
outsb
pop
pop
lcall
mov
adc
lods
xchg
enter
mov
xorb
je
mov
das
ret
cmp
or
data16
es
mov
fsubl
adc
or
int3
dec
mov
mov
pop
orb
xchg
xchg
mov
out
mov
xchg
sbb
adc
xchg
sti
enter
push
mov
lret
jns
hlt
push
dec
or
je
pop
xchg
mov
imul
add
xchg
mov
cwtl
jge
jl
sbb
add
xor
dec
sbb
fwait
lea
xchg
repnz
je
jl
and
mov
repz
inc
sbb
negb
mov
out
je
or
dec
ja
pop
push
ret
ficoms
mov
fmulp
les
adc
push
push
mov
iret
in
cltd
out
lret
lods
dec
les
xchg
mov
sahf
loope
lds
movsb
mov
cmp
mov
roll
inc
outsl
push
fstl
jl
icebp
movsb
dec
and
inc
dec
jle
inc
xchg
inc
sar
cwtl
mov
cs
fyl2x
jae
xchg
out
lahf
inc
and
jecxz
xor
add
pop
and
pop
push
cs
mov
and
arpl
test
adc
pop
mov
mov
and
hlt
ret
sbb
add
in
mov
mov
xchg
cwtl
out
xlat
jbe
inc
lret
mov
sbb
xchg
and
push
outsb
lahf
mov
in
loope
in
loopne
jle
popf
lahf
jne
addl
or
testb
popa
mov
mov
push
inc
insl
push
adcl
and
movsb
jl
xchg
sahf
jg
jae
mov
lods
mov
jg
or
and
loop
pop
sbb
in
jo
lock
cmp
cmp
jl
add
mov
jg
fwait
divb
xchg
lods
clc
adc
xchg
loope
or
imul
cmpsl
nop
add
ljmp
mov
dec
cmpsb
movsb
add
mov
stc
jge
shlb
pop
xorb
jo
pop
fstp
xchg
stc
xor
pushl
xor
ficompl
popf
loopne
xor
mov
push
leave
ss
outsb
fldl
repnz
roll
dec
ret
nop
test
xor
fdivl
dec
insl
mov
sub
aam
pusha
and
call
loop
adc
xor
sbb
sbb
shrl
imul
push
daa
loopne
aad
jp
pop
jp
xchg
cmp
adc
pushf
sub
mov
hlt
pop
call
mov
xor
scas
call
mov
xor
mov
enter
add
pop
aas
testb
js
mov
movsb
xchg
sbb
xor
mov
jo
ljmp
iret
fidivs
enter
mov
imull
jecxz
enter
xor
push
or
adc
dec
cmpsb
sbb
and
jns
imul
inc
loope
sahf
sbb
mov
cmpsl
add
jle
xcrypt-ofb
cmpsl
lods
pusha
xlat
mov
cs
add
shrl
add
pop
sti
movsl
das
les
call
shrl
mov
sti
lods
je
or
cmp
lods
xor
pop
lahf
inc
pop
leave
decl
out
xor
insb
sahf
imul
mov
shrb
xor
out
or
xor
mov
cmp
mov
lds
stos
enter
jecxz
and
out
mov
aam
jp
jl
gs
sbb
jl
fwait
mov
pop
dec
push
repz
lret
or
stos
mov
ret
int3
push
mov
fildll
ficompl
xchg
in
pop
shll
int
cmp
shrb
mov
jae
aam
pop
mov
or
mov
push
sysexit
push
xchg
mov
inc
pusha
scas
jno
cmpsb
and
pop
cmc
pop
mov
inc
icebp
and
or
pop
pop
lock
mov
hlt
pusha
dec
push
xor
and
pop
dec
or
dec
outsl
jno
adc
je
mov
pop
cmc
pop
jmp
xor
rcr
sbb
adc
loopne
adc
sbb
and
dec
sub
je
cmpsl
jnp
push
fs
in
pop
xchg
andl
stos
je
xor
xchg
js
mov
or
mov
lahf
jmp
xor
cwtl
inc
and
push
call
lods
bnd
mov
or
push
pusha
fstl
scas
aad
out
icebp
cs
cmp
lea
xchg
ds
jmp
fcomps
add
mov
xor
subl
sub
test
mov
shl
loopne
mov
pop
push
jp
dec
lods
mov
cmpsl
xadd
sti
cmp
push
cmpsb
pop
popf
scas
das
push
or
mov
out
rclb
push
fisubrl
sub
and
mov
das
or
pushf
push
ficompl
pop
mov
addb
lods
call
add
and
and
call
add
cs
in
sbb
push
bound
sahf
pop
test
add
call
mov
jp
sbbl
mov
adc
mov
gs
ja
pop
pusha
outsb
push
outsb
fidivs
push
jl
jle
pop
sbb
std
popf
dec
mov
pop
adc
inc
jp
ret
xchg
std
stc
jmp
icebp
mov
ret
jp
cs
out
jae
jmp
int
fadds
mov
test
shll
pop
mov
daa
inc
js
push
fidivrl
leave
jge
fnstcw
imul
imul
sbb
xchg
sahf
das
add
push
test
rorb
hlt
rcrl
push
loope
shl
icebp
jno
movl
and
mov
js
jmp
hlt
cmpsb
stos
popf
loop
outsb
mov
mov
insb
call
addr16
pop
mov
lret
repnz
and
incb
lcall
stos
xor
inc
ror
mov
fsubs
xchg
leave
and
rorb
pop
lret
fsubrs
leave
adc
cmpsb
dec
adc
fistpl
add
inc
iret
mov
inc
push
mov
or
ljmp
adc
adc
xchg
sub
push
pushf
jmp
or
mov
inc
jmp
out
pop
push
idivb
inc
ret
xchg
fisubrl
dec
insb
xchg
femms
sbbb
inc
xor
lods
enter
sub
jno
adc
xchg
insl
imul
les
sub
jecxz
adc
mov
adc
lret
jle
sti
bound
pop
dec
jae
push
rcl
mov
dec
mov
insl
dec
test
push
add
hlt
lret
sub
aam
jnp
loop
mov
sbb
iret
test
scas
xor
lahf
shll
mov
test
dec
lds
push
add
push
xchg
cs
pop
dec
or
popa
sti
mov
mov
mov
je
sub
loope
movsb
cmp
pusha
push
adc
and
sbb
mov
shr
xchg
data16
sahf
cltd
pusha
fimull
mov
jg
add
notl
sub
out
sbb
es
mov
sbb
loop
lret
in
jbe
neg
push
pop
lret
cmp
in
scas
movsl
mov
frstor
mov
mov
aam
in
rorb
shll
xchg
js
insb
imul
das
push
dec
sub
je
mov
ljmp
inc
pop
loop
push
outsb
fisubl
js
mov
jo
es
daa
mov
jmp
sub
cmpxchg
and
inc
dec
subb
and
inc
stc
inc
fwait
mov
jb
fcmove
jbe
adc
add
pop
ss
lcall
into
and
push
leave
mov
outsb
xchg
in
into
imul
and
shrb
adc
not
clc
add
lods
and
mov
cwtl
aas
cmp
sub
pop
mov
xchg
dec
out
pop
jns
mov
test
sbb
pop
xchg
xchg
clc
jae
ljmp
cmp
incb
lahf
lahf
js
jge
pop
jo,pn
inc
test
pop
inc
inc
or
flds
mov
add
dec
mov
and
xchg
adcb
dec
adc
push
btr
ffreep
iret
das
repz
or
loopne
cmp
es
mov
mov
fldenv
adc
loope
sub
fsubrp
mov
or
int
inc
mov
pop
xor
les
roll
ret
in
mov
and
shr
call
and
std
dec
mov
aas
push
cs
jge
in
add
cmp
add
xor
sbb
sub
adc
in
push
xor
insb
mov
out
ret
jae
repz
daa
xchg
movsb
je
cmp
push
aas
popl
mov
mov
test
xchg
cmp
outsl
pop
cmpsb
xlat
sub
jge
mov
push
sbb
mov
push
mov
lock
push
jmp
rolb
popa
fistpll
jo
and
pop
push
mov
jo
add
stos
rol
mov
xor
and
sahf
cmp
cmp
jo
iret
fnstcw
ret
mov
mov
les
pop
jg
dec
fstp
sub
push
add
adc
xchg
jnp
pop
push
inc
cmc
or
mov
andl
mov
cltd
xor
orb
rorl
mov
mov
jecxz
fadd
and
xchg
xor
gs
sar
xor
es
dec
cs
js
pop
jecxz
int
fs
and
sub
mov
test
mov
xchg
cmp
pop
pop
adc
inc
jns
out
mov
and
sti
in
xchg
mov
cmpsl
or
and
leave
aaa
inc
inc
pop
lods
or
mov
cmc
dec
push
cmp
inc
jo
jge
adc
das
rcl
xor
xchg
test
out
or
fwait
repz
call
xlat
pop
xchg
mov
xor
test
andl
mov
negb
xchg
sbb
std
jg
jp
shrb
push
xchg
mov
xchg
mov
pop
lcall
or
les
cmpsb
addb
inc
out
mov
xchg
out
sbb
pop
adc
or
adc
lret
mov
inc
add
hlt
cmpsl
scas
xor
mov
outsl
ret
cmp
xchg
xchg
xchg
outsl
cwtl
or
std
les
xchg
push
sbbb
xchg
and
sbb
enter
stos
mov
mov
arpl
cmc
test
rolb
in
insl
pop
stc
mov
scas
test
jns
mov
xor
in
sbb
fbld
lret
gs
adc
scas
sub
in
pop
hlt
rclb
les
xor
das
stos
sub
mov
stc
pop
fmul
mov
inc
sub
mov
mov
jo
add
dec
ja
sbb
cmp
popa
xor
push
jb
rorl
repnz
add
andl
test
test
jecxz
mov
roll
pop
clc
cmp
push
fcom
xor
and
inc
push
sahf
pop
or
cmp
push
add
fcompl
sub
loopne
sarl
or
xchg
pusha
mov
or
roll
icebp
xchg
jge
xchg
xchg
int
jge
mov
cltd
lahf
loopne
rcrb
mov
js
push
mov
mov
adc
xchg
mov
hlt
lcall
inc
inc
jmp
push
push
movsb
lock
ja
insb
xor
bound
xor
add
cmp
pop
cmp
movsl
cmp
jns
shll
test
xor
sbb
cli
cli
imul
aaa
mov
jl
pop
outsb
dec
jecxz
lahf
mov
pop
and
icebp
orl
cmp
cmpb
add
rcr
out
enter
jne
fucom
pandn
mov
in
call
out
mov
mov
add
insb
ret
outsl
push
and
jne
ss
lock
movsb
mov
xchg
push
jge
push
fdivs
shrl
push
mov
sbbl
xor
dec
pusha
sbb
push
rcrl
test
call
xlat
fcmovb
imul
or
popf
push
lods
mov
clc
aas
push
test
inc
mov
in
sbb
mov
rcll
sub
movsl
jmp
lds
jle
or
data16
enter
int3
scas
cli
jns
test
out
cltd
cmc
or
jbe
inc
loopne
xor
push
fcomi
jge
cmp
dec
xor
push
adc
cmpsl
jae
enter
ja
or
dec
jg
mov
mov
xor
sbb
jecxz
inc
mov
or
and
mov
sub
hlt
aaa
pusha
jns
mov
mov
adc
call
negb
jle
pushf
aad
add
jno
imul
loopne
aas
cmc
push
test
push
sbb
sbb
fidivrl
sahf
or
lods
inc
pop
jmp
mov
rclb
sub
xorb
push
data16
jp
xor
lods
adc
sahf
sub
sub
add
int3
xchg
cs
xchg
repz
aaa
mov
mov
int3
test
dec
nop
ss
pop
push
jne
hlt
or
xor
fwait
scas
testl
lcall
aam
fnsave
xlat
pop
xchg
xchg
into
cld
xorl
sbb
insl
add
pop
mov
push
mov
call
fadds
int
xchg
icebp
sub
pop
jne,pt
and
sub
cmpsb
lock
sbb
cltd
push
push
lods
push
aad
ror
push
and
fstp
mov
rep
nop
push
push
into
push
xor
out
scas
mov
in
or
pop
cld
add
jno
pop
add
cmp
repz
xchg
in
es
pop
shll
or
icebp
imul
hlt
mov
mov
sbb
dec
mov
rorb
xlat
mov
jno
mov
in
sti
lcall
jmp
mov
dec
mov
insb
xchg
shrl
pop
aas
data16
aaa
push
mov
icebp
and
sub
scas
icebp
aad
addr16
shlb
inc
xlat
mov
or
pop
dec
popf
push
jl
mov
fwait
dec
xchg
sbb
xchg
jne
jnp
jb
mov
xor
lods
mov
jge
loopne
xor
inc
jecxz
out
mov
inc
add
sar
pop
mov
cmpsl
jbe
push
add
test
mov
loope
xchg
xchg
rorb
lret
in
inc
jno
repz
leave
nop
flds
mov
and
jnp
inc
lcall
repnz
push
cmp
sbb
mov
jg
test
sbb
je
in
hlt
aam
mov
dec
aas
xchg
mov
mov
xchg
outsl
ret
jne
adcl
fstpt
movsl
ss
das
data16
mov
lea
mov
outsb
andl
sti
out
pop
outsb
sub
ja
xor
push
jmp
lock
dec
ss
mov
ret
lret
test
dec
xchg
sbb
jmp
xor
xchg
adc
jne
filds
push
push
xchg
leave
jne
call
adc
ss
mov
xchg
xor
call
fs
or
testl
sbb
sbb
sbb
jnp
mov
xor
mov
push
aas
pop
aas
xor
sbb
cli
insl
out
sbb
nop
fucomp
enter
cmp
push
popf
jbe
inc
cltd
addb
insl
pushf
fiaddl
cmp
ja
out
jg
fstpl
add
adc
into
or
inc
or
repnz
jb
ss
fcomps
lock
add
jne
je
cltd
jp
xor
fiaddl
jmp
push
jns
pop
or
jmp
jo
mov
sub
add
pushf
xchg
sub
jg
push
mov
enter
lret
aaa
mov
xor
push
loope
inc
inc
cmp
in
jecxz
sbb
pop
sarl
jb
sbb
cmc
dec
jl
hlt
repnz
add
push
jo
xchg
stos
test
out
xchg
adc
notl
pop
dec
sub
xchg
mov
adc
outsl
and
inc
lret
xor
mov
add
js
mov
mov
nop
out
mov
xchg
or
mov
jo
push
outsb
xchg
stos
inc
push
outsl
lods
pop
jecxz,pt
shll
mov
fwait
hlt
adc
lahf
inc
xchg
out
fwait
icebp
jne
mov
dec
repz
jg
fbld
cltd
adc
ret
arpl
ja
push
stc
pop
mov
movsl
call
or
xchg
adc
popa
fcmovnbe
and
sarl
lea
adc
ljmp
xchg
cmp
scas
add
ljmp
push
jns
mov
fadds
mov
sub
scas
xchg
pop
lods
xlat
test
pop
add
btc
icebp
push
mov
push
mov
add
pop
mov
lods
mov
dec
xchg
mov
loope
and
sarb
sbb
fildl
and
push
mov
adc
mov
shrl
rcrl
inc
hlt
inc
push
sbb
xlat
pop
push
xchg
xchg
cs
dec
jns
jp
std
ds
les
ja
ja
in
mov
clc
les
jb
inc
mov
push
push
add
shll
rcll
push
subl
xchg
ds
mov
sahf
js
mov
int
inc
rcrl
push
frstor
add
mov
decb
xchg
sbb
dec
sbb
adcb
fdivrp
std
xchg
and
sbbb
xor
sbb
ret
aam
or
jnp
dec
pop
mov
jnp
mov
push
push
aam
add
ja
ja
dec
pop
inc
and
iret
add
sbb
gs
push
mov
mov
cmpsl
sbb
xor
movsb
loope
dec
cmp
cltd
int
dec
push
push
nop
aam
das
sub
mov
stos
lods
mov
out
push
mov
xor
lret
xchg
stos
ja
js
in
imul
inc
lahf
pop
mov
sub
xchg
ja
xchg
leave
mov
aam
sub
and
iret
xchg
push
jg
ss
mov
sub
addl
pop
daa
jp
mov
sbb
cmpsl
mov
hlt
mov
enter
add
fwait
insb
ud2
mov
xchg
out
pop
clc
dec
and
fiadds
pop
add
imul
sub
push
pop
xchg
clc
push
jns
mov
add
fsub
mov
sub
fdivs
mov
enter
inc
mov
inc
cmp
into
cs
es
mov
jno
jns
inc
mov
pop
cltd
and
mov
call
aas
ret
xor
xor
sub
push
mull
addr16
sub
sub
or
popf
sbbl
and
testl
xor
sti
int
jg
pop
adc
cmp
or
js
jns
xchg
ds
mov
div
inc
xchg
or
int
xor
xor
insb
add
jp
push
push
ficomps
test
mov
xchg
jbe
bound
push
add
ss
dec
and
loope
out
sti
sbb
stos
add
pushf
xor
in
lock
mov
push
and
into
cli
and
dec
pop
mov
out
xor
ret
jnp
and
add
ss
or
and
andb
and
xor
cmpsb
popa
sub
pop
sub
add
cmpsl
ds
adc
pop
imul
out
and
movsb
mov
mov
popa
imull
mov
xchg
or
loopne
fstpt
in
dec
jno
pop
mov
in
cmpsl
jnp
fisubrl
push
mov
mov
bound
push
enter
jo
lds
mov
xchg
add
jne
inc
pop
dec
mov
mov
enter
ljmp
cmp
decb
dec
mov
mov
mov
xor
mov
neg
inc
fcomip
or
mov
lds
mov
fldenv
cli
cltd
lret
std
push
inc
jge
xchg
call
ja
test
les
xorb
or
jp
lock
jge
mov
cwtl
push
scas
pop
iret
ss
outsl
cltd
dec
sbb
fnstsw
xchg
push
xor
rcrl
mov
clc
insl
push
scas
xchg
add
cmpsb
leave
mov
inc
sahf
js
sbbb
imul
outsb
pop
push
push
test
shll
daa
pop
cld
shlb
mov
mov
inc
cwtl
and
jg
fwait
rorb
pop
xchg
fistps
or
adc
mov
cwtl
xor
adc
pop
jno
lcall
imul
mov
push
flds
mov
jl
test
add
in
jecxz
cmp
lret
out
repnz
pop
cld
or
out
mov
xchg
lret
xor
add
bound
cmp
xor
pop
das
and
test
or
cmpsb
add
movsl
dec
je
mov
mov
and
lds
fcomp
cmc
sub
out
mov
mov
fisubs
xor
std
pop
addb
cmpsb
inc
int
imul
lea
dec
adc
xchg
jo
jp
out
pop
nop
out
push
mov
sbb
push
stc
adc
sti
push
mov
repz
cmpsl
jmp
adc
push
cmc
cltd
rclb
lds
loop
add
into
test
sub
rorb
es
popa
mov
inc
xchg
cmpsl
bndldx
sub
xchg
dec
out
push
mov
bound
dec
sub
push
in
and
mov
inc
in
loope
add
jbe
enter
push
mov
sub
mov
or
insb
mov
lock
inc
leave
push
je
stos
mov
rcrl
cmpsb
lcall
movsb
jecxz
aam
aas
dec
stos
outsl
aas
call
pop
sub
leave
jns
dec
mov
pop
out
scas
addr16
ja
lea
jg
cmp
xor
inc
gs
fsubs
dec
xlat
cmp
fiaddl
arpl
adc
test
sub
lock
cmpsb
push
pop
stc
push
inc
pop
pop
aas
adc
cmp
sarl
sub
push
in
or
lret
mov
mov
push
lock
sti
clc
pop
push
add
jnp
pop
rol
dec
cmp
les
xchg
sub
add
cmp
mov
mov
mov
push
mov
cmpb
ss
jmp
pop
sub
insl
lods
adc
or
sub
sbb
cmpsl
call
test
pop
adc
in
mov
arpl
mov
adc
push
xor
add
push
jl
mull
inc
pushf
cld
stos
cmp
and
fwait
repnz
push
ljmp
into
xlat
pop
or
mov
sbb
mov
fadd
xchg
lds
cmp
pmullw
lret
mov
ss
lret
add
aaa
leave
inc
xor
mov
sub
mov
jb
out
sbb
mov
push
rcl
push
jnp
outsl
sub
lock
ja
icebp
sbb
mov
lods
cmpsb
orb
or
mov
push
jb
mov
insl
pusha
iret
test
xchg
addr16
sbb
pop
and
repz
sbb
jmp
jae
in
mov
cmp
mov
xchg
orb
fcmovnu
jo
pop
scas
sbb
and
test
dec
andb
or
scas
out
sbb
test
inc
inc
stos
call
sub
add
jmp
cmp
xchg
adc
xchg
stos
lea
lret
or
out
mov
dec
sub
xor
push
test
ret
int3
sahf
in
insb
jl
mov
cmp
aam
dec
mov
mov
cmpsl
leave
cmp
lods
shl
imul
stos
nop
add
movsl
and
xchg
jge
shrl
mov
inc
out
push
mov
sub
jp
pop
jns
icebp
orl
dec
lock
outsl
fdivrs
jb
daa
mov
faddl
mov
in
cmp
cmp
push
sbbb
insl
xchg
cs
jecxz
test
in
dec
jnp,pt
xor
jnp
xor
jnp
xor
sbb
cli
data16
imulb
ds
lcall
testl
cmpsb
pop
xchg
add
mov
std
loopne
aad
push
data16
pop
xor
fsubl
xor
es
lcall
loop
xchg
sahf
push
jp
sbb
adc
xchg
es
in
stos
sbb
aad
loopne
jae
gs
mov
xchg
xchg
mov
mov
cld
js
cmp
sub
pop
mov
inc
jmp
xor
ljmp
pop
mov
insl
and
fwait
and
pop
cmc
int
xchg
loopne
ror
and
dec
mov
add
xchg
add
int3
fldenv
jae
xor
cmp
xchg
add
inc
adc
mov
inc
jg
sahf
pop
inc
ds
sbb
jl
and
jecxz
mov
mov
punpckldq
loope
aam
clc
xchg
pop
inc
repnz
sahf
and
mov
stos
push
pop
test
push
pop
out
popf
aad
add
or
sbb
xchg
jle
dec
and
insb
mov
addr16
mov
leave
add
notb
es
adc
jns
xor
inc
mov
inc
or
imul
mov
dec
andb
sti
fnstcw
xor
movsl
xchg
add
ja
je
outsb
test
pop
dec
repnz
dec
pusha
dec
scas
sarb
loop
lock
mov
jno
pop
xor
or
mov
fdivrl
scas
pop
or
sbb
shlb
call
mov
push
inc
div
out
lret
add
pusha
gs
test
xchg
inc
or
cmpsl
movd
idivb
jnp
mov
je
fidivl
xor
and
dec
mov
test
jl
ljmp
lods
push
fsubrl
xor
fisubl
jmp
and
iret
out
dec
add
add
jo
pusha
mov
inc
std
insl
xor
xchg
test
out
inc
lahf
xchg
loopne
iret
mov
jecxz
jle
pop
inc
nop
dec
dec
push
xchg
test
push
mov
cld
shrb
leave
cmc
jmp
push
push
mov
leave
sub
cmp
mov
fldcw
pop
movsl
add
imul
fnstenv
dec
sub
pop
enter
imul
push
mov
cli
fstps
jns
cmpsb
out
les
cwtl
cli
sub
outsb
pop
inc
cmpsb
jnp
cmp
dec
jnp
jl
cmp
pushf
and
cmp
jp
inc
push
cli
out
inc
lock
xor
add
xchg
rolb
adc
jge
mov
mov
jmp
repnz
aas
fidivrs
repnz
arpl
dec
mov
jmp
sub
insl
push
pop
pop
jge
ljmp
rcr
sub
xlat
fdivrl
jg
dec
cmpsb
sbbl
jno
fistpl
mov
or
lcall
dec
jbe
jmp
jmp
sahf
mull
add
push
js
shrb
cli
dec
xor
test
movsb
ljmp
fimuls
jp
int3
sahf
aas
rcrl
je
js
std
jle
fs
xor
movsl
imul
push
mov
rcll
shll
out
fcmovnb
inc
adc
icebp
fs
cltd
cwtl
out
pop
push
das
pop
push
js
sbb
adc
outsb
mov
dec
jne
or
pop
pop
jmp
push
sbb
adc
push
fistpll
popa
xor
or
sbb
sbb
sahf
in
sub
jae
jne
cmpsb
in
mov
pop
nop
cmpsb
sbb
mov
and
addr16
insl
xchg
faddp
aaa
add
mov
mov
push
xorb
imul
inc
mov
bound
stos
mov
sub
loop
jb
pop
pusha
mov
xlat
sarb
xchg
mov
add
mov
cmovs
jne
ror
subl
out
and
jecxz
es
jp
stos
pop
cs
incl
sbb
testl
mov
mov
test
push
lea
and
inc
sahf
or
pop
cmp
mov
rcrb
mov
sbb
cmp
lods
mov
mov
cld
inc
mov
and
lahf
xchg
mov
push
rsqrtps
nop
fadds
fdivr
mov
les
sub
jae
lods
add
inc
test
lea
ss
or
pop
pop
jne
ficoms
add
dec
sub
das
mov
and
cmp
fwait
pop
in
adc
and
test
insb
sub
mov
mov
out
push
insb
jne
stos
or
ja
pop
insb
sar
je
xchg
dec
sahf
adc
sub
mov
aad
jmp
and
fsubs
loop
dec
loop
dec
jmp
dec
cwtl
test
sbb
mov
and
pop
sbb
add
cmp
je
outsb
xor
int
std
xor
dec
mov
mov
sub
inc
fistpll
or
push
aaa
xor
dec
cmp
lea
mov
ljmp
cld
fwait
mov
movsl
push
or
xor
in
leave
jbe
xchg
popf
push
cwtl
pop
inc
mov
push
sbb
sbb
and
adc
clc
cmpsl
lea
in
in
and
add
inc
inc
lods
lahf
cli
and
iret
jle
xchg
mov
add
mov
xor
les
and
pop
test
mov
shl
sub
mov
test
mov
stos
jmp
push
dec
inc
fs
xchg
mov
cs
ret
sub
or
test
fnsave
in
xlat
add
push
mov
repz
cmp
and
adc
push
inc
pop
xchg
gs
repnz
xor
xchg
jg
jge
pop
mov
es
pushf
pushf
inc
pop
stos
mov
adc
daa
mov
loope
ficoml
loope
and
nop
sbb
jb
dec
inc
xchg
or
add
dec
sbb
fistps
jns
jecxz
push
jl
subb
sbb
and
stos
scas
cli
and
cli
clc
out
sub
popf
dec
lahf
roll
data16
push
fldl
add
in
aad
sysret
incl
add
icebp
adcl
dec
xchg
popa
or
insw
mov
or
mov
mov
inc
mov
movsb
pop
cmpsl
sbbl
movsb
and
or
adc
movd
mov
dec
and
insl
clc
addr16
bound
aam
lret
pusha
adc
xchg
mov
loop
adc
push
shl
add
mov
jmp
push
push
lock
and
push
iret
nop
js
jnp
movsb
mov
jmp
jno
and
dec
lret
mov
adc
xchg
nop
fisubs
xor
push
mov
xor
adc
or
inc
andb
sarl
pop
mov
pop
mov
mov
mov
sbb
jg
xchg
outsl
and
in
mov
mov
lea
cmp
push
xchg
mov
mov
nop
sbb
ss
add
cmp
dec
ss
xchg
or
test
out
cmp
mov
cltd
jb
xchg
aaa
add
jge
push
loope
push
xorl
in
push
push
xchg
add
mov
in
mov
data16
les
gs
out
push
out
cld
jbe
stc
cltd
or
mov
jne
shlb
aad
aas
xchg
lahf
xor
sub
and
jno
sub
dec
cmp
cmp
jecxz
out
pop
jnp
add
nop
imul
clc
loopne
xor
jbe
mov
inc
mov
dec
add
adc
jle
xchg
rorb
fdivrl
lods
call
dec
mov
icebp
mov
div
enter
rolb
aad
push
test
addr16
mov
cmp
cmc
ja
sub
and
test
inc
nop
mov
gs
cli
lahf
and
pop
in
movsl
repz
jmp
int3
insb
pop
mov
sub
xor
test
inc
cmp
out
dec
or
fnstsw
ljmp
xor
jne
das
push
xchg
mov
imul
jo
add
scas
inc
xchg
adc
lods
mov
aad
push
or
aas
mov
or
fmuls
xor
fwait
into
xchg
sahf
xchg
inc
add
cmp
xor
sbb
jb
sahf
push
sub
jp
dec
mov
xor
sub
pop
imul
sbb
loope
add
loop
xchg
gs
jmp
jns
and
shrb
ret
sarb
test
push
fiadds
insb
mov
xchg
subb
out
xor
cmp
ljmp
shl
jb
or
push
xchg
xchg
mov
lock
in
xor
lods
imulb
adc
movb
jns
out
out
cmc
int3
cmp
daa
test
cltd
sub
std
lea
stos
xchg
xchg
mov
lds
jge
cltd
cmp
adc
cs
and
xabort
mov
push
mov
clc
dec
xor
in
adc
sbbb
sub
xor
push
mov
push
xor
or
sbb
jnp
push
and
dec
faddl
js
push
movsb
mov
cmp
mov
cmp
sub
add
daa
lret
mov
mov
imul
or
inc
pop
idivb
mov
lahf
inc
mov
sbb
incb
les
xor
addr16
movsl
mov
bnd
lds
xchg
mov
add
xchg
loopne
and
xchg
pop
mov
pop
pop
xchg
jle
mov
cwtl
pop
pop
ja
pop
nop
cmp
cwtl
imul
jno
in
pushf
xor
lea
aad
jno
out
out
hlt
cs
loope
mov
cli
mov
xchg
ror
pop
mov
movsb
imul
stos
adc
iret
lea
adc
cmp
pushf
movsb
mov
dec
bound
out
mov
pop
mov
cmp
jl
pop
add
xchg
addr16
call
xor
pusha
int3
sub
insb
jmp
jb
test
out
lret
je
popa
jns
insb
xchg
outsb
pop
mov
cmovno
cld
mov
xchg
cmp
pop
decb
jo
addr16
xor
mov
out
sub
pushf
xchg
xchg
movsb
fxch
sbb
int
sbb
pop
inc
notb
popa
inc
arpl
xor
push
in
ds
adcl
push
cmp
out
imul
je
xchg
and
in
es
into
mov
stos
test
fiaddl
fiadds
mov
incl
dec
loopne
cmp
inc
idivl
jb
pop
xor
cmpsl
jle
arpl
aam
push
ss
and
orl
test
ds
sub
fsub
call
mov
add
dec
inc
outsb
jns
jno
inc
faddl
hlt
scas
xor
lahf
clc
jmp
add
mov
xchg
or
aaa
or
and
push
aad
test
out
in
shlb
jecxz
sbbl
insb
xchg
stos
xchg
lret
stc
sbb
es
loopew
cmpl
mov
pop
mov
fimuls
insl
jge
arpl
aam
xor
cmpsb
out
scas
and
rolb
and
imul
inc
and
shrb
out
jecxz
dec
int3
outsb
in
fildl
jne
pop
add
stos
int3
mov
mov
or
mov
in
es
aas
pop
sbb
cmpsl
cmp
addl
mov
lahf
xor
sbb
out
xor
mov
mov
call
or
pop
orl
loop
inc
xchg
std
cmp
fdivrp
dec
adc
mov
ljmp
jge
lcall
mov
inc
push
lock
push
fisttpll
cltd
push
xor
pop
xlat
xchg
orb
pusha
or
xor
cmpl
dec
ljmp
mov
loop
mov
mov
insl
inc
xchg
sbb
cli
push
int
mov
jecxz
mov
aam
pusha
cmpsb
ljmp
mov
jecxz
shlb
movsb
pop
mov
popf
xchg
push
mov
mov
mov
cmpsl
mov
popf
xchg
jecxz
inc
mov
shr
fbld
fstpl
add
outsb
jnp
stos
arpl
lds
xchg
xchg
add
ja
mov
sahf
push
sbb
fwait
cmp
inc
insb
inc
jb
aas
inc
xlat
enter
xor
iret
add
mov
repnz
mov
int3
cmpsl
cwtl
sbb
test
stos
cmp
jns,pn
push
cmp
jp
push
int3
lcall
adc
lea
dec
shll
aaa
or
dec
bound
stos
sbb
jg
xchg
lahf
lock
cmp
fsts
and
inc
aas
mov
ja
pavgb
loop
jmp
mov
dec
shrl
popa
loopne
sbb
loopne
js
cmc
mov
lret
pop
mov
mov
ret
adc
cmc
and
add
js
shll
pop
push
cli
push
insl
fwait
mov
nop
mov
push
fwait
imul
mov
pop
xor
or
aam
adc
add
mov
jl
jnp
pop
jg
lcall
roll
mov
and
movsb
lret
aam
cmp
popf
fnstenv
lods
add
shll
imull
imul
test
repz
xchg
add
inc
ljmp
leave
repnz
push
adc
movl
ljmp
icebp
fs
mov
in
or
mov
xchg
imul
sbb
mov
clc
pop
test
cmpsb
xchg
loope
aas
lods
fwait
push
adcb
inc
cmp
pop
cmp
imul
leave
fucom
mov
insl
loopne
mov
clc
push
xchg
bound
ja
mov
ficomps
or
flds
stos
adc
xor
add
jle
sub
jge
sbb
test
lahf
xchg
cs
add
push
cmp
jp
faddl
sub
lock
sbb
inc
ljmp
cmp
popf
dec
jbe
push
and
mov
and
hlt
dec
cmp
inc
loop
inc
outsl
jl
pop
cmpsl
mov
cltd
jns
lahf
push
shrl
cmp
enter
outsl
inc
stos
cmp
cmp
inc
sbb
mov
xchg
cmpsl
cmp
xor
mov
dec
test
pop
test
adc
pushf
ljmp
pop
mov
or
mov
out
mov
icebp
dec
sub
int3
or
les
in
push
xchg
gs
iret
or
mov
xchg
sbb
add
add
bound
loopne
adc
fs
adc
add
pop
and
pop
pushf
dec
lods
push
outsb
xor
dec
or
pop
into
inc
push
out
dec
mov
outsb
inc
ja
fidivl
jne
cltd
adc
mov
mov
jp
in
cs
mov
scas
fcmovne
test
push
push
pop
push
test
add
or
jns
xor
mov
test
jge
fstps
and
pop
stos
out
mov
push
sbb
js
int
stos
gs
out
sub
cmp
add
jbe
push
fistps
add
adc
or
enter
cwtl
rcr
mov
dec
in
mov
ror
jle,pt
int3
xor
sub
in
or
mov
sahf
push
fidivl
iret
cmp
dec
imul
cmpsb
jmp
and
xor
scas
cld
fwait
cmp
enter
dec
mov
repnz
mov
sub
nop
pop
in
repz
imul
sub
das
and
sub
lcall
sbbl
mov
pushf
xchg
lcall
into
pop
js
xchg
mov
shll
movsb
dec
repnz
jmp
dec
mov
push
or
push
shr
adc
inc
jmp
rcl
jo
inc
inc
into
ss
fisubrs
lods
xor
addr16
test
sbb
mov
sahf
neg
movsl
xchg
inc
js
add
test
cmp
iret
sbb
xchg
sub
loope
loopne
test
mov
dec
movsl
call
sbb
add
dec
outsb
sbb
jp
inc
sub
shrb
insl
cmp
lret
jmp
add
loop
jle
and
adc
lcall
mov
mov
cmp
loopne
or
or
cmc
fs
lods
add
cmp
jecxz
jmp
or
cwtl
dec
mov
push
sub
shll
popf
imul
mov
orl
sub
cmp
in
push
int3
gs
jg
mov
sbb
or
mov
subl
scas
inc
xchg
es
negl
rcr
iret
sub
jo
add
xor
pop
push
arpl
add
ss
fs
addr16
mov
mov
ror
fdivl
xchg
mov
or
testl
push
jmp
fwait
mov
add
movzbl
hlt
test
xor
mov
inc
insb
push
imul
ret
mov
cmp
xor
out
orl
imul
mov
lods
out
sub
push
arpl
inc
lods
mov
call
push
fisttps
add
cli
in
sbb
push
mov
popf
data16
cmpsl
out
jne
stos
jns
addr16
aas
test
dec
jnp
lds
pop
ja
mov
aas
arpl
or
test
jae
jns
and
outsl
fimuls
mov
xchg
out
jge
add
pusha
cmp
sahf
es
aas
in
aas
movsl
sti
adc
jl
sbb
lock
fwait
sub
xchg
dec
pop
stos
popw
sub
mov
jnp
add
mov
outsb
mov
or
sbb
mov
test
mov
mov
pop
xor
cmp
inc
fldenv
or
mov
mov
xchg
pop
nop
mov
sbb
repz
pop
out
aad
shrb
lods
sbb
in
addb
mov
lahf
mov
pop
push
pop
or
sub
lret
enter
scas
outsb
cmpxchg
pop
mov
movsb
push
subb
add
fstps
mov
int
cmpsl
scas
mov
cmp
jecxz
sahf
inc
hlt
cmp
and
pop
xchg
fistl
add
and
and
jnp
cwtl
dec
bound
inc
lret
js
out
lret
rorb
and
loop
dec
xchg
fisttpl
jbe
icebp
jae
insl
xlat
mov
ret
or
sahf
lcall
repz
jo
in
mov
inc
mov
mov
into
lret
inc
mov
xchg
pop
or
or
sub
cmp
lret
xchg
das
mov
inc
shrb
mov
mov
xor
or
jmp
rolb
lcall
repnz
xor
outsl
das
adc
icebp
or
push
mov
xchg
ret
push
jnp
scas
fldcw
ljmp
shlb
lcall
ret
cmp
fwait
inc
dec
add
rcll
mov
in
dec
cmp
mov
mov
int3
push
pop
pop
pushf
pop
fsubl
adc
outsb
jnp
arpl
aaa
mov
aam
adc
int3
popf
mov
push
lock
pop
pop
aaa
sahf
bound
mov
enter
push
sub
testl
idivb
and
cmp
mov
push
out
sub
sub
nop
inc
add
jns
cld
adc
rcrb
daa
cmp
pop
insl
cmpsl
movsl
pop
xchg
and
imul
test
dec
jl
lods
cmp
mov
sub
mov
pop
xchg
adcb
or
adc
push
das
jnp
imul
insl
adc
jp
fimuls
mov
fists
mov
leave
js
shr
ja
dec
popa
adc
ds
jne
sub
and
or
inc
and
cs
stos
cmp
sbb
pop
pop
mov
fldt
xor
inc
mull
and
pop
cli
mov
psubsb
and
jae
xor
push
mov
mov
mov
xlat
pop
movsb
mov
insl
cmc
jecxz
call
sbb
lods
enter
insw
mov
push
test
addr16
adc
fwait
shll
inc
and
adc
jne
rol
xor
pop
jmp
in
xor
je
xchg
add
cmp
fnsave
scas
outsl
and
cmp
daa
mov
inc
push
push
adc
or
lea
mov
sbb
lock
jne
aad
mov
jp
shlb
jno
out
and
add
xlat
test
out
in
test
jb
mov
cmpsl
push
movsb
and
mov
adc
jb
clc
dec
imul
cmp
loopne
cmc
mov
subb
push
pop
test
stos
leave
repz
and
in
and
push
sbb
int3
pop
int
mov
mov
mov
cs
test
pop
cld
ljmp
push
inc
inc
mov
pop
sbb
sub
test
xor
cli
or
rcll
inc
mov
adc
mov
add
and
mov
cld
add
ss
mov
pop
je
push
sub
ds
outsb
inc
and
inc
and
push
in
insb
rclb
jp
add
rcr
lds
dec
lods
in
popa
dec
and
decb
push
std
mov
sbb
mov
cltd
rclb
enter
ss
mov
outsb
out
mov
pop
or
adc
lock
or
and
lds
lea
dec
jl
adc
aam
mov
iret
loopne
out
cmp
ror
xor
and
pop
or
inc
xlat
jle
std
jmp
lods
or
lcall
mov
data16
add
aas
insb
xchg
mov
xchg
ud1
ficomps
daa
add
bound
push
mov
scas
pop
sub
lcall
mov
aam
push
inc
rcrb
insl
fldenv
push
scas
push
fildl
mov
push
xchg
outsb
jmp
mov
test
test
pop
pop
rolb
xchg
gs
mov
test
dec
insb
jns
mov
loope
popa
and
mov
add
dec
push
and
shl
hlt
fsin
pop
or
in
imulb
mov
inc
outsb
dec
pop
inc
icebp
gs
fcomi
lods
arpl
les
inc
push
fdivr
mov
mov
sub
cli
add
xchg
mov
cli
pusha
add
arpl
loope
imul
mov
mov
push
adc
cli
mov
mov
inc
jg
dec
mov
sub
adc
push
sbb
hlt
fcomps
orl
xlat
xchg
jmp
mov
arpl
push
mov
daa
jge
pop
cmpsl
mov
adc
adcl
cmc
mov
aaa
das
jno,pt
mov
mov
stc
xchg
inc
les
xchg
dec
cmp
jbe
mov
add
rorb
or
enter
insl
stos
sub
pop
jl
or
mov
sahf
and
mov
out
cmp
adc
stos
adc
repz
ret
aad
pop
addr16
mov
shrb
dec
stc
stos
orl
and
psrad
fiaddl
pop
xchg
jle
xchg
mov
mov
lahf
jg
loope
cmp
sbb
cltd
aaa
cmp
mov
enter
incb
lds
mov
popf
std
movl
jmp
mov
sub
lret
xchg
mov
lret
mov
mov
pushl
rorl
pushf
sbb
sub
ljmp
imul
sahf
stos
jo
cmp
jns
push
lods
sbb
lock
lahf
adc
lret
cmp
cmp
pop
ret
popa
push
fmuls
sbb
cmp
aam
xor
jbe
push
sub
cmc
and
dec
mov
fimull
insb
gs
orb
ret
les
std
mov
dec
mov
pop
dec
out
sbb
dec
dec
call
adc
xchg
inc
out
outsl
mov
cmpsl
subl
out
push
jbe
int3
loopne
sub
push
jo
data16
dec
xchg
sub
in
mov
jecxz
push
cmp
out
es
cwtl
inc
fs
and
loopne
inc
test
cmp
ljmp
in
sub
lret
fdivrl
cltd
imul
dec
adc
out
jo
loope
fsubs
jmp
pop
int3
arpl
xchg
add
hlt
rorl
mov
sti
insb
mov
jne
popa
xchg
js
xchg
movb
in
sub
add
sbb
aad
push
loopne
pop
and
mov
sub
insl
negb
adc
dec
mov
cmpsb
daa
bound
pusha
aas
lds
mov
push
sbb
and
inc
rcr
out
daa
dec
dec
jne
imul
loopne
sub
stos
neg
jae
lea
imul
cs
mov
call
mov
sbb
mov
es
fistl
push
or
iret
lds
and
xor
xor
mov
popa
dec
push
test
mov
fcomp
and
cltd
and
push
ja
repnz
outsl
jecxz
jae
mov
pop
cmp
mov
jnp
ljmp
pop
xchg
push
jle
jp
call
fldcw
xchg
jo
fnstsw
pop
into
mov
iret
in
sti
jmp
and
fs
mov
mov
cwtl
push
mov
sbb
jp
cltd
push
or
adc
adcb
int
jb
adc
data16
out
jo
outsb
xchg
filds
std
or
and
imulb
lods
push
xchg
push
inc
cwtl
sbb
xchg
sbb
xchg
mov
cmp
xchg
sub
ret
pop
mov
fs
pushf
jecxz
fwait
xchg
push
and
jns
ja
xor
or
out
jle
test
push
cwtl
cmp
pop
dec
loope
mov
xorl
fadds
scas
cmp
xlat
mov
ret
sbbl
out
inc
mov
sub
push
add
in
repnz
lock
fiadds
push
mov
outsl
push
xchg
xchg
mov
lret
sarl
fcomi
dec
into
pop
dec
outsl
pop
testl
outsl
call
mov
lods
xchg
fistpl
popa
stc
rolb
imul
aam
es
lea
cmp
inc
gs
mov
adc
sbb
repnz
aaa
mov
inc
mov
rcrb
int
inc
arpl
pop
sbb
sti
xchg
pop
xchg
rorl
cltd
shll
ficoms
xorl
cltd
jecxz
testb
out
push
or
into
ljmp
xchg
rorb
xchg
cmc
inc
cwtl
push
mov
cmp
in
aam
call
test
dec
in
popa
in
cmp
mov
loope
es
inc
arpl
mov
outsb
fisubl
aad
lret
loopne
dec
insb
incl
mov
insb
insl
enter
lods
nop
test
xchg
fcomps
je
or
cmpsb
outsb
gs
popf
js
in
cwtl
jl
stos
addr16
fs
mov
mov
int
adc
and
ja
mov
js
ds
push
in
jl
repz
pop
dec
scas
call
add
jl
sbb
out
jb
setle
lock
mov
fwait
inc
push
adc
into
xor
das
in
xor
outsb
add
ljmp
push
xchg
movsl
fisubl
stos
in
shl
jp
outsl
cmc
cmp
inc
push
das
mov
xor
mov
or
lahf
sub
jmp
test
push
xor
fs
in
cltd
sub
xchg
ss
shrb
push
rolb
push
gs
rclb
jmp
cs
jge
mov
setb
dec
jmp
test
mov
lret
mov
outsb
xor
pop
call
dec
adc
fwait
sbb
pop
xchg
cmpsb
repnz
xor
xchg
pop
loop
ficoms
mov
fidivs
fmul
mov
xchg
xlat
leave
pop
mov
test
pop
push
aas
lock
aaa
iret
dec
xor
stos
inc
sbb
xchg
daa
sub
hlt
mov
jmp
sub
and
jo
jl
pop
mov
pop
leave
lock
ljmp
and
addr16
inc
cmpsb
pop
jecxz
pushf
mov
adc
mov
bound
lock
in
xchg
mov
gs
adc
sahf
incb
and
rcll
sub
leave
lods
shl
scas
push
xchg
jmp
push
inc
pop
out
lock
imul
xor
mov
mov
jo
sbb
pushf
xor
pop
in
int3
notl
imulb
push
mov
cmp
fwait
xor
icebp
pushf
rclb
sbb
loopne
inc
sbb
push
mov
pop
jge
in
std
xchg
push
xor
ret
adc
repnz
ds
mov
push
mov
and
mov
cli
loop
push
test
jle
pop
xchg
or
rcl
cmp
aaa
push
arpl
nop
lds
mov
lretw
fstps
arpl
lcall
cmp
sub
pop
js
pop
add
daa
xchg
sarb
add
inc
push
fwait
cwtl
jb
mov
sub
pop
inc
adc
shrb
xor
push
sub
or
inc
test
test
ds
testl
jo
inc
imul
pop
dec
rcrb
push
pop
jns
fisttpll
or
push
dec
lock
fld1
push
stos
jbe
xchg
insb
in
test
stc
push
out
pop
jle
mov
fistpl
cld
pusha
sbb
notl
ss
loopne
loopne
mov
lahf
sbbl
fwait
cmp
xor
dec
ljmp
lods
xor
add
scas
mov
sub
sarb
fimull
jmp
push
ror
gs
adc
aam
ja
in
daa
mov
imul
pop
out
gs
aas
cmp
mov
js
or
sub
mov
adc
add
mov
in
std
xlat
mov
aad
xchg
push
push
and
jae
loop
push
adc
xchg
mov
cltd
mov
xor
inc
aaa
mov
cmp
sahf
push
lahf
sbb
sbb
dec
or
enter
or
and
jl
sbb
mov
fisttps
add
jge
subb
jns
in
js
adc
or
push
je
dec
adc
testb
dec
into
test
inc
sub
fs
jno
xor
cmpsw
adc
repz
decb
sbb
sbbl
ficomps
add
testl
mov
jb
imul
xor
xor
repnz
or
or
int3
stos
pop
inc
dec
daa
sub
add
mov
fsubs
sub
nop
jg
add
mov
das
imul
arpl
rcll
xchg
movsl
mov
sbb
das
jbe
push
and
js
out
and
mov
pushf
push
mov
pop
jne
and
imul
push
adc
mov
xor
pop
and
lret
sbb
loop
lea
pop
nop
cmc
cs
push
xchg
cmp
stc
je
scas
mov
sub
rcrb
pop
test
movsb
insl
lock
add
out
mov
cmc
pop
mov
cmp
movsl
mov
jne
jmp
adc
cmp
pop
mov
and
hlt
push
sarl
fdivl
sbb
loopne
lds
jnp
add
mov
ss
movhlps
aas
jmp
loopne
fsubs
jmp
out
mov
test
test
push
sbb
dec
pop
mov
lret
cmpsb
in
sbb
scas
jge
pusha
xchg
push
fstl
popf
jno
aas
push
imul
jo
pop
sbb
mov
cmpsl
fcomi
call
xor
or
in
pop
xlat
inc
cmp
mov
sub
subb
ds
add
testl
lds
les
clc
xchg
nop
xchg
call
subl
inc
or
cmp
sbb
aas
mov
mov
imul
ja
mov
adc
pop
jmp
insb
and
lock
lret
xchg
jg
inc
sub
push
fisttps
notb
leave
xchg
dec
jp
push
stc
inc
dec
sbb
dec
repz
xchg
aad
sbb
fisubrs
mov
dec
xchg
repz
dec
mov
sub
sub
xchg
divl
pop
cmpsl
lea
push
add
mov
add
sub
adc
movsl
jge
mov
loope
push
push
adc
lods
loopne
call
jb
nop
orb
add
mov
mov
mov
dec
cld
cltd
add
mov
xchg
stc
add
or
int
jmp
push
adc
pop
push
movsb
popa
cmpsl
xchg
int
push
push
jle
fimull
cmp
cmp
or
jne
aam
mov
out
test
mov
push
add
adc
fnstcw
fs
jnp
dec
testb
push
jne
dec
xchg
xchg
push
into
and
ja
pop
jge
mov
and
dec
pop
ds
cmc
adc
jl
arpl
nop
cmp
dec
lock
pop
mov
xchg
lock
xor
inc
jge
test
ror
inc
pushf
test
jnp
addr16
fistps
mov
jns
mov
icebp
sub
dec
push
test
push
ret
out
mov
pushf
pop
decl
stos
xor
cwtl
xor
divl
jnp
loopne
and
mov
adc
out
or
and
loope
cmp
inc
pushf
jmp
ficoml
inc
sti
inc
scas
pop
sub
ds
fisubl
nop
sub
popf
stos
cmc
roll
dec
adc
fiadds
pop
jbe
imul
push
adc
jns
das
cmpsl
pop
cmpsl
movsl
fistpll
stos
pop
outsb
dec
push
fsubp
xchg
pop
mov
jns
inc
dec
jbe
push
xor
mov
in
xlat
sahf
cmpsl
sub
mov
pop
outsl
push
mov
cmp
pop
xchg
lcall
hlt
scas
iret
jo
xchg
dec
leave
mov
pop
test
mov
xorl
iret
xor
dec
mov
repnz
jecxz
add
movsb
popa
outsb
pusha
cmp
sbb
xchg
mov
sar
fnstcw
lods
in
cmp
push
mov
faddp
xor
jno
mov
mov
mov
fcmovu
add
sbb
outsb
loopne
push
pop
je
cwtl
lahf
pusha
fwait
xchg
icebp
cmpsl
pop
movsl
pusha
xor
jae
or
ja
test
pop
aad
jbe
adc
sbb
and
jp
in
dec
fsubl
paddusw
and
test
dec
nop
scas
movsl
push
sub
sub
mov
lcall
sarb
lret
mov
mov
out
xchg
sbbb
inc
xor
pop
inc
imul
rcll
jl
lds
sbb
stc
and
mov
and
inc
xor
cmp
mov
pop
cwtl
mov
add
mov
ret
xchg
mov
sub
jb
das
dec
out
enter
js
popa
mov
popf
sub
ja
or
lds
ja
mov
fimull
jne
lock
xchg
xchg
repz
cmc
mov
cmpb
pop
mov
inc
mov
push
push
repz
bnd
pop
cwtl
xor
lret
cmp
movsl
xchg
or
xor
fists
xchg
jae
or
mov
ljmp
lock
fdivs
leave
aad
sbb
adc
inc
inc
xchg
cmp
xlat
inc
stos
int
data16
mov
sbb
in
pop
int3
add
push
mov
into
sbb
push
leave
js
push
ss
cwtl
mov
sbb
mov
inc
pop
imul
popa
mov
mov
mov
mov
je
mov
lahf
pushf
dec
insb
dec
aad
aas
add
call
jbe
add
mov
cmp
nop
inc
adc
mov
push
jnp,pn
arpl
xor
int3
cmpsl
jbe
xchg
fwait
sti
and
push
mov
mov
add
int3
fwait
or
cmp
mov
test
or
std
mov
cmpsb
fcmovnu
repz
ss
movsl
push
jb
push
adc
sub
dec
test
and
xor
jnp
imul
jg
and
sub
pusha
mov
dec
add
scas
inc
addl
insl
pop
sar
roll
xor
js
popf
mov
pushf
and
into
jmp
mov
fistps
subb
sbb
sahf
fmull
inc
lahf
popa
mov
pop
in
scas
test
js
les
mov
lods
loopne
fistpll
sbb
adc
pop
repnz
fimull
in
cmp
dec
mov
add
pop
es
sub
or
fistps
push
outsb
loop
add
test
ds
sahf
pop
sti
ret
icebp
push
sarb
fstl
jg
mov
mov
pop
inc
pop
pop
push
lods
mov
sub
xchg
pop
sbb
popl
test
push
leave
aad
sbb
imul
xchg
xchg
into
mov
stc
mov
inc
xchg
push
arpl
repnz
aam
xor
js
sub
loop
push
fistps
push
cmp
data16
cmpsl
cmpsb
pop
xor
sub
or
mov
js
mov
dec
dec
xchg
ficoml
subl
insb
repnz
sbb
inc
scas
out
pusha
mov
mov
inc
dec
aas
inc
inc
lods
mov
jne
shr
neg
sti
daa
ja
clc
mov
cmc
pusha
push
or
rcrb
xchg
lea
push
ds
outsl
dec
xchg
push
mov
xor
adc
adc
or
cmp
pop
adc
pop
and
push
nop
jp
mov
jmp
sbb
push
pop
xor
mov
mov
xchg
scas
loopne
sub
je
mov
sbb
jb
sarb
pushf
scas
dec
fbld
inc
or
dec
lcall
lock
leave
aam
ret
add
jg
jns
mov
and
in
mov
cmpsb
popa
cmp
sub
popl
and
test
push
sbb
cmpsb
arpl
lock
ret
push
out
sarl
aam
fs
popf
lods
shll
push
push
xor
jo
cmp
inc
icebp
sub
sbbb
test
xchg
xchg
add
or
jo
or
mov
cmp
add
xorl
roll
imul
mov
sub
mov
lods
mov
out
rorb
incb
rol
loop
adc
mov
into
std
out
push
xchg
fsubrs
fisubl
xchg
imul
mov
mov
push
gs
xchg
add
push
loopne
push
in
mov
cmpl
add
data16
mov
adc
xchg
repnz
add
popf
bnd
push
aam
mov
clc
into
fdivs
pop
mov
loopne
push
mov
jns
jge
stos
push
mov
fcmove
xlat
xor
push
out
ficoms
dec
clc
in
sbb
xor
and
cmp
inc
in
cwtl
pop
cmpsb
aam
xchg
adc
pusha
jmp
stos
adc
test
roll
pop
sbb
pop
mov
mov
jp
cltd
sub
xor
mov
jne
sbb
cmpsl
jo
lret
push
and
sub
cmpsb
sub
cltd
loop
subl
test
mov
dec
movsl
outsb
adcl
int3
inc
test
lcall
mov
mov
in
cli
sti
popf
aas
cld
or
out
pop
imul
movl
sub
sbbl
mov
mov
jae
xchg
and
sti
das
dec
ljmp
sbb
pop
ret
mov
pop
mov
call
lcall
rcll
test
mov
jle
test
outsb
lcall
ret
xor
popf
mov
sbb
andl
push
lret
sbb
ret
push
cmp
aad
jnp
xchg
inc
dec
mov
xchg
ret
gs
sbb
xor
jecxz
dec
addb
aam
imul
pop
es
arpl
out
adc
cmp
aam
sbbb
scas
pusha
cli
mov
push
xchg
and
push
cmp
bound
jmp
and
dec
leave
loopne
jecxz
mov
mov
and
inc
mov
scas
adc
orb
xchg
lahf
xchg
lret
ja
pushf
mov
push
rorb
sti
jnp
push
ret
movsb
cwtl
push
cmp
inc
or
pop
aaa
out
sub
xchg
test
iret
js
imul
cld
outsb
jns
push
or
jo
and
ds
pop
xchg
push
inc
inc
fcompl
xor
cmp
push
addr16
mov
ljmp
mov
stos
mov
clc
inc
repz
imul
data16
fs
mov
dec
movsb
aad
out
mov
mov
add
rcrb
xchg
pop
cmpsl
mov
loopne
divl
loopne
inc
mov
rorb
pop
pusha
mov
loopne
imul
test
in
es
adc
xchg
cmp
imul
or
dec
iret
sub
dec
push
or
push
mov
rcl
or
lcall
aam
xchg
dec
mov
lds
cmpsb
pop
cmp
dec
stos
pop
and
lcall
neg
add
push
inc
aas
int3
sub
and
fwait
pop
js
adc
test
push
gs
popl
adc
aas
fadds
lds
in
shlb
push
cltd
and
lcall
xor
mov
in
cs
lods
xchg
xorl
test
pushl
or
jecxz
xchg
mov
jle
popf
or
sub
les
or
bound
push
xchg
and
shrb
mov
imul
push
dec
inc
out
push
xchg
add
sbb
adc
cltd
sti
pusha
add
leave
and
arpl
int
cmpsb
mov
jno
mov
nop
imul
mov
pop
xor
sbb
je
xor
rcrb
fwait
cmp
mov
leave
movb
in
fisttps
popa
das
pushf
add
inc
push
push
push
pop
fstpl
xchg
vdivss
outsb
push
dec
dec
xor
out
sbb
xor
call
jp
addr16
jecxz
xchg
jge
into
push
arpl
addb
mov
push
repz
jbe
jle
cmp
scas
shll
mov
xchg
jle
addr16
xor
push
mov
aaa
loopne
scas
sti
mov
in
pop
mov
mov
lea
test
les
in
jl
jl
or
shlb
jl
fstl
outsb
jns
fbstp
mov
fiadds
imul
inc
adc
xor
and
mov
je
pop
outsb
mov
mov
lahf
pop
decb
add
sti
fiadds
xlat
loop
arpl
outsb
je
sarl
stc
dec
mov
lock
out
add
inc
inc
in
mov
ror
or
sub
ror
add
imul
push
lods
cli
mov
xchg
fcoms
jmp
outsb
push
cmp
repz
pop
test
sub
shr
sbb
push
stc
xor
clc
outsl
cs
into
leave
jnp
lea
jno
and
test
pop
cmp
shr
xorb
xchg
dec
jl
pop
loopne
rorl
mov
mov
out
pop
dec
sbbl
jmp
xchg
in
and
out
add
cmp
stos
fmul
dec
leave
aaa
sub
cmc
rclb
dec
fistpl
mov
adc
in
adc
fwait
mov
iret
fstps
negb
sbb
adc
mov
xchg
mov
addb
jbe
adc
movsb
xchg
stos
test
ds
lock
push
jge
imull
mov
sub
xchg
cmp
lock
mov
inc
lahf
adc
inc
cmp
xor
lea
imul
xor
sbb
mov
leave
prefetcht0
pop
fs
mov
out
lcall
pop
mov
adc
mov
adc
mov
xor
jl
stc
je
clc
xchg
fidivs
pusha
imul
dec
mov
ds
and
sti
cmp
mov
out
ja
repnz
or
int
adc
out
push
sbb
dec
jae
mov
mov
lea
mov
loopne
cmp
lock
arpl
es
sub
adcb
ds
mov
pop
outsl
xchg
roll
ljmp
mov
pop
inc
popa
movsl
cmpsl
jmp
sti
xor
lods
xchg
mov
and
sbb
or
pusha
cmp
and
jecxz
cltd
mov
ss
push
lock
mov
jno
inc
fcoms
adc
loop
or
push
and
mov
xor
sub
fldenv
popa
lock
xchg
push
pusha
xor
push
dec
xchg
movsl
cmp
nop
aas
add
push
repz
xchg
scas
imul
lcall
pop
mov
adc
mov
xchg
dec
inc
lahf
mov
out
fidivs
sbb
sarl
xchg
in
cld
daa
popa
and
jae
inc
mov
xor
mov
sub
mov
sbb
out
lahf
inc
and
mov
mov
inc
not
jl
push
sbb
test
pop
adc
cs
js
movsl
adc
test
mov
mov
and
add
xor
loope
cwtd
pop
out
jb
sbb
mulb
divb
push
insb
filds
adc
xor
out
jge
pop
and
jle
das
outsb
ret
iret
test
call
fwait
outsl
push
cwtl
mov
repz
scas
lret
icebp
dec
lods
arpl
push
movsb
iret
lret
xchg
pop
jne
lret
mov
arpl
push
ljmp
mov
subb
out
mov
out
lret
push
sub
cli
nop
out
ficomps
dec
rcrl
inc
push
into
xchg
ror
rorl
adc
daa
hlt
testb
pusha
bound
ret
shrb
fisttpll
movl
or
bnd
add
iret
or
dec
xchg
idivl
mov
int3
cmp
adc
lds
xchg
jno
fadd
fwait
sub
shl
push
adc
sub
adc
std
add
pop
pop
jnp
out
cmc
add
nop
inc
int3
mov
xchg
push
sbb
sbb
push
cltd
das
inc
pop
roll
jl
inc
outsb
push
xor
in
lock
fildll
aas
pop
divl
lcall
pop
lret
dec
je
xchg
fwait
sub
jl
aad
xchg
fldenv
jne
sbb
shll
addr16
jl
frstor
push
mov
in
in
sbb
fildll
cwtl
ficoml
and
test
test
xchg
loopne
in
andl
mov
pop
es
mov
outsl
and
test
sub
test
movsb
sbb
pop
push
add
and
and
and
pop
scas
andl
test
mov
inc
sbb
in
aas
inc
cmpsl
addr16
mov
xchg
imul
iret
scas
rcrl
les
bound
add
stos
loop
xchg
fcompl
push
jg
cmp
add
cmpsl
fistps
xchg
or
ficompl
xchg
enter
sbb
aaa
add
or
lods
inc
aas
or
xor
imull
lock
aad
jbe
and
cmp
xchg
pop
sbb
pop
pop
push
push
es
jno
js
fcoml
pop
hlt
pop
or
mov
js
test
fldl
adc
mov
scas
cmp
add
jne
xlat
lret
ret
push
rcrb
shl
pop
cwtl
push
loop
mov
js
or
data16
inc
aaa
xchg
data16
loopne
call
test
mov
xchg
in
mov
or
and
sub
push
mov
cvtpi2ps
stos
mov
stos
cld
or
jg
pop
stos
lock
xchg
sub
sbb
rcrl
mov
call
inc
das
mov
in
cmpsb
mov
int3
jle
dec
repz
xchg
ret
test
imul
sbb
sbb
ljmp
cmpsl
mov
or
xchg
pop
push
and
les
les
shrb
push
adc
ljmp
and
xor
mov
sbb
gs
add
into
fnstenv
sub
mov
test
dec
ljmp
dec
push
jle
cwtl
mov
outsl
mov
iret
addr16
fmuls
pushf
push
jle
jle
push
mov
pop
adc
mov
inc
xor
mov
push
idivb
call
mov
dec
mov
js
jmp
jecxz
adc
xor
jmp
ds
dec
fcompl
adc
shlb
nop
or
repnz
pushf
dec
pop
push
sub
dec
fisubs
pusha
in
cmp
xchg
cmpl
shlb
adc
adc
mov
nop
pop
imul
xlat
jno
call
jg
sbb
inc
sub
and
outsl
popf
or
add
mov
add
out
pop
testb
pop
fbstp
xorl
mov
pushf
clc
jae
mov
or
lods
fisubrs
pop
fisttpl
mov
mov
mov
mov
mull
mov
leave
ret
cld
adc
shll
sbb
test
jb
mov
push
inc
f2xm1
lea
mov
adc
das
ja
imul
mov
cs
inc
add
bound
shrl
icebp
leave
call
pushl
rclb
jne
fsubp
enter
test
xor
lret
jg
mov
sbb
adc
je
loopne
loope
inc
sbb
adc
xchg
jg
pop
fadd
adc
ret
aad
test
jno
xchg
inc
les
outsb
fistpl
push
sti
push
mov
xchg
stos
mov
insl
sub
ret
jbe
and
lods
sub
mov
iret
jp
cltd
or
mov
sbb
js
es
lret
ljmp
lods
daa
adc
ds
js
ds
stos
clc
fwait
cmp
loope
fistl
push
mov
fwait
sbb
imul
imul
test
xlat
cmpl
inc
sbb
cmp
int3
adc
xchg
das
add
sbb
jg
imul
fldt
dec
inc
loope
push
repz
sti
mov
arpl
cs
mov
les
xchg
sahf
hlt
sub
mov
stos
or
lea
shrl
adc
and
pop
dec
movsb
push
or
test
pop
mov
mov
icebp
cmp
insb
pop
adc
cmc
pop
cmp
imulb
insl
xor
popf
ss
pop
insb
and
pop
stos
xlat
ds
or
ljmp
movsl
sbb
out
les
adc
and
into
mov
jbe
adc
data16
popf
pushf
dec
int
push
or
inc
xor
sub
sbb
add
jne
adc
fcompl
fwait
ret
adc
ds
aas
fcmovnu
jae
and
sub
arpl
jae
jb
fisttps
sub
std
lret
lahf
xor
jge
mov
push
data16
inc
bound
enter
jmp
in
int
mov
cwtl
xchg
add
lret
out
lods
jb
pop
fwait
lea
xchg
dec
arpl
add
mov
insl
nop
or
inc
rolb
jp
ja
sahf
inc
inc
fidivl
push
arpl
fwait
pop
insl
fwait
add
jle
rolb
inc
or
fnsave
push
xchg
push
inc
sbb
lds
xlat
mov
pop
and
mov
repnz
push
ret
sbb
push
imul
and
mov
pop
ffreep
mul
scas
jecxz
sbbl
mov
movsb
out
inc
fistps
jae
mov
stos
push
mov
inc
insb
daa
hlt
roll
into
push
mov
lahf
sbb
xchg
sub
mov
sahf
mov
inc
mov
or
movsb
loope
sbb
cwtl
loope
jp
sbb
pop
lahf
imul
jmp
repz
ja
push
data16
std
fs
test
add
test
scas
fmull
test
insl
push
inc
mov
imul
lods
dec
lea
out
push
cltd
fnstenv
xchg
jbe
mov
mov
neg
xor
dec
inc
jae
pop
test
lcall
jno
pop
lcall
adc
jae
cld
mov
test
rcll
pop
movsl
jge
or
mov
push
fiaddl
sbb
mov
aas
xlat
leave
mov
sub
dec
data16
sbb
jp
cli
jae
test
adc
pop
push
mov
es
jg
clc
test
cmpsl
stc
outsl
arpl
ret
ljmp
icebp
imul
fbstp
testl
fwait
dec
das
adc
movsb
and
aaa
pop
imul
mov
inc
fnstenv
notl
jle
dec
dec
pop
out
mov
sbb
pop
adc
rorb
and
xorb
cs
fdiv
jns
out
push
cmp
mov
cmp
je
pop
dec
mov
test
movsb
cmpsl
jbe
shrb
out
push
pop
push
int
mov
cmc
fwait
in
inc
cmp
sbb
jge
jp
loope
mov
aaa
cwtl
inc
icebp
enter
cmp
or
mov
adc
inc
ljmp
jle
fidivs
rorb
xchg
sub
mov
cmp
out
arpl
insl
repz
sarb
mov
mov
sub
jmp
xchg
push
cwtl
fmul
sti
icebp
shll
leave
and
inc
addl
cmp
push
sub
hlt
and
lret
lods
pusha
inc
mov
mov
dec
add
outsb
loopne
pop
mov
aam
clc
dec
jbe
ljmp
sub
cltd
jl
mov
aaa
outsl
mov
shr
sbb
pop
pop
into
repnz
jmp
inc
jp
shll
shll
lret
sbb
pop
xchg
sbb
xchg
add
rcr
and
iret
push
or
cmpsl
mov
popa
push
pop
xchg
das
pop
int
pop
gs
jnp
adc
and
inc
adc
in
mov
shl
stos
pushl
jp
sti
int3
or
cmpl
mov
mov
pop
xchg
xor
lods
adc
repz
add
push
loope
fwait
sbb
mov
pop
dec
xchg
xchg
int3
lods
ds
and
into
stos
pop
jecxz,pn
lods
rcll
xlat
in
ja
mov
push
int
addr16
divl
inc
cmp
test
mov
outsl
in
cli
and
sub
mov
fstpt
mov
mov
ja
or
movb
and
mov
data16
hlt
and
mov
pusha
push
adc
loope
add
mov
or
clc
cld
and
push
inc
inc
jae
ret
xorb
jl
mov
mov
call
and
inc
test
das
sbb
xchg
mov
jb
add
sub
cli
cs
lcall
pop
jo
int
adc
inc
inc
dec
arpl
push
fwait
mov
test
shlb
mov
aad
popf
sub
outsb
int3
dec
push
daa
mov
pop
and
insb
nop
inc
test
mov
pusha
imul
arpl
les
adc
adc
mov
or
adc
xchg
cmpsb
jo
divb
inc
je
stc
test
inc
sbb
mov
dec
inc
mov
jmp
sar
push
dec
mov
add
push
popa
pop
mov
sub
sbb
jecxz
or
dec
ss
out
aad
lds
popa
push
scas
dec
cmp
mov
xchg
dec
add
mov
popa
push
cmp
dec
out
cmp
js
insb
pop
fld1
pop
test
ds
sbb
pop
inc
and
lret
dec
lods
sub
inc
and
mov
jecxz
loope
test
fistps
push
outsl
mov
push
sahf
inc
sbb
mov
out
mov
xchg
mov
dec
mov
outsb
cltd
cmovns
jno
loop
adcb
in
push
xor
aas
add
dec
xor
adc
cmc
jbe
jb
dec
cmp
cmp
or
ljmp
xor
add
loope
mov
xchg
mov
push
mov
pop
fisubrl
xchg
stos
repnz
notl
mov
push
cmp
out
cmp
aaa
xchg
nop
inc
and
outsl
jae
push
popf
push
dec
dec
inc
fiadds
cld
cmp
popf
pop
les
push
daa
inc
ja
add
and
aam
loopne
mov
in
in
add
test
dec
shrb
insl
dec
enter
out
fwait
add
xchg
cs
aam
inc
sbbb
push
xorb
cmc
cmpl
dec
pop
sarl
pop
loop
push
mov
ret
push
pop
adc
fnstsw
mov
push
fimull
adc
adc
cmp
sub
or
pop
sahf
lret
xchg
scas
or
js
int
movsl
ljmp
aas
jns
test
xchg
jl
add
lahf
pusha
fsts
sub
sub
cmpb
outsb
arpl
xchg
daa
inc
or
mov
sarb
pop
jmp
adc
iret
or
pushf
div
or
cmp
xor
in
jns
add
sub
inc
and
xor
mov
andb
push
dec
pop
add
sbb
cmp
aaa
push
aas
push
jg
in
push
lcall
out
shlb
daa
inc
mov
add
mov
mov
flds
add
movsl
mov
and
fiaddl
jo
stc
xor
jp
fsubrs
cmp
lcall
into
enter
push
fnstsw
or
aas
jp
sub
fwait
xchg
xorb
sub
jp
arpl
je
pop
ss
scas
mov
mov
mov
mov
lods
sub
mov
sbbb
xlat
movsb
pushf
addr16
sarl
shlb
mov
sub
mov
ret
ret
cmp
test
testb
int3
fdivl
add
or
fistl
dec
outsb
pop
popf
xchg
test
or
push
cmp
stc
pop
loopne
pop
inc
sub
cmc
dec
pop
push
sub
pop
sbb
insl
sarb
sbb
addr16
insb
insl
in
or
sub
orb
sub
inc
rclb
and
and
in
out
add
fstl
fstpt
out
out
cld
sbb
dec
pop
jecxz
scas
nop
inc
pop
scas
test
push
vpsubusw
leave
nop
outsb
lcall
loop
ret
inc
jmp
test
mov
pop
adc
mov
mov
inc
pop
rcr
push
out
imul
dec
faddl
dec
sbb
jno
pop
fnsave
cli
pop
stc
push
or
and
inc
int3
in
ret
lea
mov
mov
lcall
push
addr16
jbe
in
sub
mov
xchg
out
sti
icebp
xlat
sahf
jmp
jl,pn
rcll
fstpt
aam
outsb
cltd
stc
add
xlat
jg
jb
xchg
mov
fs
std
sub
add
adc
lea
push
ja
popa
sub
push
xchg
inc
decl
in
xchg
lds
insb
sbb
sbb
ja
sbb
or
js
cmpsb
cltd
sbb
push
xchg
push
push
pop
frstor
mov
jg
cmpsl
rorb
push
aaa
and
in
inc
test
jnp
xchg
mov
mov
xchg
mov
mov
test
fstpl
pop
mov
cmp
pop
sbb
and
mov
mov
xlat
scas
rolb
adc
add
and
push
adc
ljmp
cmpsl
inc
jbe
mov
mov
ljmp
push
call
or
push
xor
test
push
add
mov
rcrl
movsl
or
pop
dec
dec
cmp
mov
sbb
mov
xor
add
in
cmpsb
push
jns
loopne
dec
sahf
hlt
stos
cmc
iret
pop
pop
mov
in
gs
jnp
jb
repz
stos
cmpsl
sbb
jg
dec
test
pop
xchg
pop
xchg
mov
xor
or
icebp
push
lock
or
pop
jl
cwtl
mov
dec
dec
in
mov
movsl
fisubrs
out
push
lret
and
cmpsl
dec
or
arpl
sbb
jae
mov
add
or
or
jnp
add
cli
adcl
negb
cli
insl
dec
imul
popa
test
cmc
sarb
vunpcklpd
or
cmp
rorl
imul
aas
je
pop
adc
xor
add
xorl
idiv
push
cmpsb
jnp
push
sahf
pushf
and
fwait
mov
addb
enter
into
xchg
and
pop
pushf
add
add
mov
push
sub
pushf
int3
push
std
jmp
cmp
insb
fdivrl
jns
subb
aaa
push
dec
inc
adc
incl
outsl
jno
xchg
outsb
jl
les
fstp
push
addr16
xchg
sbb
out
and
mov
mov
mov
mov
fwait
mov
mov
outsl
pop
sbb
hlt
repz
cld
frstor
push
lcall
cmp
cltd
fimuls
push
mov
dec
std
fucom
mov
iret
and
lret
das
out
and
outsl
loope
movsb
ss
cmp
xchg
and
stos
iret
ss
fldt
jecxz
aaa
mov
lea
or
scas
repnz
xchg
sub
cmovle
and
jbe
stc
insb
out
jae
cltd
adc
fdivrl
ljmp
cmpsb
popf
dec
in
xor
pusha
ret
xor
arpl
xchg
push
push
mov
xchg
add
dec
in
lock
xchg
jle
xchg
cmpsb
lcall
stos
pop
test
aas
mov
and
add
or
outsb
mov
mov
dec
jg
lcall
pop
xor
adc
mov
decb
loop
mov
pop
adc
cmc
out
cmpsb
lahf
test
sbb
xchg
adc
sbb
push
xor
add
ss
add
mov
add
inc
mov
cmp
sarb
aam
push
hlt
mov
adc
test
int3
pop
inc
cltd
stos
fxch
mov
sub
int
sub
sub
lods
adc
jmp
inc
ret
jmp
cltd
cltd
jp
in
jne
adc
std
fistpll
insb
push
int
jb
scas
lock
mov
xor
mov
loope
movsl
mov
mov
aas
adc
fdivrp
cltd
dec
push
test
mov
nop
mov
cli
aas
enter
mov
cmp
xchg
iret
loopne
dec
popa
data16
je
jb
push
mov
adcb
rolb
test
sar
ret
mov
out
push
cmp
or
call
movsl
imul
xchg
and
and
sbb
cmp
fdivrs
lcall
cmp
or
add
dec
mov
insb
fildl
stos
pop
jno
lock
and
cs
cli
stos
es
mov
lods
pop
sub
orb
lock
in
mov
jno
movsl
or
jg
inc
jnp
or
sbbl
adc
test
insl
inc
add
mov
repz
adc
enter
pop
scas
ss
lds
jp
cmp
cld
or
adc
xchg
jo
xchg
cmp
adcl
addb
fwait
inc
out
sti
pop
pop
mov
pop
mov
test
insb
inc
lret
dec
aam
jne
dec
out
pusha
dec
jecxz
or
mov
or
cld
ret
inc
dec
jns
jecxz
push
xchg
mov
inc
int
cmpsb
orb
aam
jl
pop
negl
call
xchg
cmp
test
inc
add
push
jb
mov
mov
shlb
cmpsb
std
daa
std
test
xchg
pop
ret
inc
cmp
pusha
insb
or
movsb
push
xchg
mov
push
push
sti
lret
stc
dec
daa
ret
fldl
cmp
sti
adc
loopne
sahf
pop
mov
arpl
repz
out
mov
stos
pop
sbb
outsl
pushl
sbb
sbb
arpl
jecxz
xor
shl
push
leave
mov
push
sbb
jno
aas
mov
out
in
mov
sub
scas
adc
adc
xchg
out
sbb
test
mov
add
popf
mov
xor
cmc
test
scas
dec
loopne
lcall
push
in
jmp
cmpsl
mov
fmul
and
pop
pushf
fisttpll
jbe
insl
xchg
dec
and
push
adc
dec
in
cmp
jne
jns
int3
and
pop
sarl
adc
movl
sbb
jb
pop
dec
xchg
adc
es
xor
fstpt
add
ds
insl
les
pop
jnp
cmpsb
mov
adc
lea
add
mov
mov
pop
popf
js
mov
movb
xchg
out
ffreep
mov
mov
enter
aam
cmpsl
push
lods
jle
jae
mov
inc
stos
xchg
negb
lock
dec
xchg
scas
mov
out
inc
imul
shll
push
lcall
fs
mov
imul
mov
push
pop
ljmp
sub
fists
lret
push
and
pop
loope
xchg
cmp
lock
divb
lcall
cmp
dec
movsb
leave
loope
loop
push
lods
enter
sbb
pop
lcall
xor
xchg
xchg
sub
pop
ficomps
xchg
cmpsl
mov
dec
mov
enter
add
inc
xchg
rep
inc
fnstsw
test
sbb
add
and
mov
neg
jge
or
xchg
xchg
mov
jl
jp
aas
cmpsb
jne
popa
add
adc
ljmp
sti
mov
mov
pusha
or
xchg
enter
dec
or
incl
inc
test
nop
addr16
incb
imul
stos
js
jmp
cmp
sahf
xchg
mov
adc
mov
xlat
or
aam
fcmove
dec
sahf
xchg
loop
jecxz
dec
fadds
sub
cltd
test
push
jle
inc
pop
leave
cld
cmpsl
scas
repz
dec
push
xchg
adc
pop
mov
imul
aas
jno
stos
or
clc
gs
rcrb
stos
add
popa
add
out
dec
mov
ja
js
cmp
mov
pop
jmp
push
iret
mov
cmpsl
xchg
ret
push
cli
sub
hlt
sub
adc
repz
jo
out
pop
popa
adc
test
push
mov
add
mov
outsl
push
shlb
ss
lock
mov
popf
lods
pop
sub
mov
ffree
xchg
mov
shlb
mov
dec
fwait
xor
xchg
std
mov
fwait
and
fildl
mov
out
cltd
fldt
hlt
xchg
push
push
push
lock
int
mov
js
fmuls
out
popa
xchg
test
movsl
shr
xchg
ror
insl
repz
sub
and
repnz
in
popf
data16
in
dec
call
sbb
enter
stos
loopne
imul
aam
and
mov
loop
inc
push
lds
ja
adc
push
pushf
cmpsb
jmp
add
jnp
pushf
call
mov
stos
mov
push
mov
repz
sub
fs
shlb
inc
mov
out
sub
mov
jo
jne
cli
sbb
dec
sbb
pop
mov
cwtl
movsl
dec
adcb
fsubs
add
xor
icebp
mov
inc
push
mov
mov
aas
mov
adc
xor
mov
pop
sub
aam
loope
lea
dec
movsb
mov
xchg
jp
xchg
adc
std
test
xchg
sbb
pop
fdivrs
cs
fs
stos
mov
sub
lret
pop
jp
nop
xchg
and
xor
bound
cmp
mov
xchg
push
mov
xor
add
fistpl
arpl
rcr
push
cmc
xor
sbb
loop
data16
jae
dec
jg
mov
mov
or
sub
inc
and
xor
xchg
ret
call
jbe
xchg
jns
mov
mov
add
pop
popa
cli
mov
dec
repnz
and
mov
sbb
and
ljmp
mov
xchg
jecxz
cmp
jae
dec
mov
jge
xor
cmp
mov
mov
inc
or
jns
insl
out
test
push
ss
cli
cli
jno
sub
jns
inc
out
jae
bound
mov
jb
mov
mov
mov
dec
xchg
xor
aas
xor
dec
mov
rcr
lock
fcmovb
lahf
int
sbb
call
push
mov
jg
mov
add
fildll
pushw
xlat
jb
inc
mov
and
pop
fsub
loope
outsb
std
xchg
fcmovb
jo
ficoms
lock
sub
xchg
mov
jno
push
sbb
pop
jle
add
imul
fs
dec
xor
mov
ja
paddd
bound
lret
add
movb
push
out
mov
jmp
adc
jl
mov
stos
xchg
insb
outsb
pop
mov
cld
adcb
sbb
out
jno
jle
ffreep
lret
aam
jge
mov
int
ret
pushf
mov
decb
mov
push
in
addr16
outsb
fabs
xor
ja
fcompl
call
push
and
lods
jmp
push
stos
les
arpl
push
cmp
in
mov
jl
imul
andb
or
mov
lods
shll
mov
jmp
nop
dec
push
mov
mov
adc
ljmp
and
pop
lock
mov
js
xchg
movsl
push
jecxz
mov
rclb
jg
addr16
stos
or
and
into
pop
mov
mov
pop
scas
add
push
dec
inc
jno
xlat
dec
push
cmp
icebp
mov
es
divl
js
lea
dec
movsl
iret
mov
ds
mov
cltd
ret
sbb
mov
lcall
adc
push
pushf
jbe
stos
and
jp
mov
sub
ja
mov
xchg
out
sbb
testl
das
xor
adc
stos
mov
sbb
pop
mov
test
mov
adc
leave
call
fisttpll
xlat
scas
rolb
aas
pop
cmp
fistpl
fstps
pop
push
nop
pop
into
jns
leave
push
jmp
cmp
dec
mov
shrl
dec
xchg
outsl
xor
sub
sbb
in
movsb
jb
and
jecxz
mov
stos
inc
jae
push
adc
lods
jb
test
imul
dec
cwtl
ss
ret
aad
es
xchg
add
int3
out
sbb
scas
into
rolb
lods
and
sbb
mov
jmp
add
in
rol
outsl
cltd
loop
sub
divl
mov
dec
out
out
push
mov
pop
jl
push
cld
pop
xchg
jae
data16
pushf
mov
in
imul
rcl
cwtl
jg
popf
sbbb
inc
loop
ss
je
or
dec
test
mov
jmp
test
add
aam
push
xor
push
stc
dec
fwait
cmp
sbb
movsb
shrl
mov
mov
stos
dec
cmp
cmp
xchg
repnz
mov
xlat
push
jecxz
push
mov
sbb
and
insl
mov
mov
sbb
stc
or
dec
or
jge
out
push
mov
iret
lods
dec
cs
mov
push
test
jbe
mov
jb
xchg
in
and
icebp
cmpsl
inc
test
sti
dec
inc
fdivl
fs
mov
and
dec
enter
add
xor
inc
sarl
adc
mov
andl
lods
add
iret
ret
dec
sbb
aaa
mov
or
int3
cmp
inc
outsl
ret
insb
aam
stos
mov
imul
pushf
jmp
jge
mov
pushf
dec
inc
fcomp
mov
movsl
repnz
mov
cmpsl
roll
mov
addr16
mov
rol
sbb
xor
fs
dec
mov
push
xchg
loopne
lcall
arpl
pushf
lahf
mov
mov
out
cmp
je
jmp
aam
dec
mov
repnz
adc
adc
ja
jge
inc
mov
ret
push
lcall
fwait
aaa
jne
inc
mov
jmp
adc
mull
mov
pop
xchg
lcall
sti
sarb
lret
inc
and
data16
pop
imul
mov
int
jp
ljmp
repnz
pop
fldcw
loopne
scas
push
in
inc
add
cmp
ret
ja
mov
pop
andb
add
dec
inc
in
adc
xchg
mov
inc
lods
pop
fsubrl
push
or
repnz
in
push
int3
pop
inc
inc
mov
lahf
out
cmc
in
cmp
jo
fsubrs
fnsave
out
addb
sub
cld
sarl
lock
adc
arpl
insl
push
mov
es
arpl
dec
leave
hlt
lret
mov
cld
jae
inc
xor
pusha
cld
mov
lret
les
addr16
xchg
scas
adc
push
pop
std
mov
enter
out
sub
mov
outsl
mov
mov
js
mov
xor
sub
lods
adc
ds
das
sahf
jb
mov
cwtl
xchg
bnd
sbb
lds
sub
push
in
sbb
getsec
xor
sub
xchg
stos
mov
or
sbb
mov
les
popf
out
lcall
xchg
insb
pop
adc
mov
sbb
test
push
adc
iret
push
jbe
lods
inc
repnz
cmpsl
push
and
inc
aas
fcoml
sub
sub
mov
fwait
out
xor
and
mov
sbb
fidivrl
test
lds
daa
out
js
inc
and
sahf
xchg
mov
and
mov
lods
mov
inc
inc
out
adc
push
push
enter
cmp
xchg
xor
lock
orl
imul
mov
xchg
clc
fstpt
int3
ds
andb
out
ja
pop
enter
mov
push
xchg
leave
jmp
push
stc
mov
sub
scas
jne
pop
xorl
sub
pop
mov
dec
je
iret
aam
std
mov
int3
sub
stos
addl
daa
pusha
ds
cmpsl
dec
rcrb
rolb
je
loopne
insb
cmc
xchg
jge
cli
cld
mov
pushf
pop
push
sub
jecxz
cwtl
aas
push
enter
fsubrl
scas
je
adc
sub
and
xchg
mov
or
aaa
lcall
pop
sub
iret
xor
cwtl
shlb
test
and
dec
push
sarb
fcmovne
pop
push
shlb
call
fwait
loopne
int
dec
pop
sbb
rcll
dec
jnp
pop
inc
loope
lds
sbb
js
repz
xchg
call
xor
scas
cltd
stos
test
nop
inc
lock
dec
in
mov
in
xlat
pop
stos
sub
and
xor
pop
in
mov
inc
push
lret
enter
or
test
dec
push
push
cmp
in
push
movsl
inc
call
adc
out
xchg
lea
adc
mov
movsb
int
into
imul
dec
pushf
mov
cmp
sub
xchg
rolb
or
sub
je
fs
jg
xchg
mov
ss
popf
sub
cmp
fnstcw
cmpb
sti
gs
push
shlb
lea
sbb
mov
scas
cmp
ss
pop
inc
jle
enter
repnz
xor
xchg
cwtl
lret
ret
notb
mov
fwait
mov
test
push
adc
pusha
mov
push
sbb
adc
bound
lods
lea
jmp
and
mov
aam
je
mov
fs
adc
mov
loopne
xchg
dec
add
std
lods
loop
mov
cld
jle
repnz
jge
push
insb
cmpsl
cld
cmp
jg
fsubrs
incl
es
inc
jnp
jg
push
sahf
aaa
iret
jmp
jo
add
lds
cmp
je
jbe
jge
sbb
pusha
adcb
insb
je
cwtl
push
add
adc
adc
cmp
into
cmpl
das
jge
mov
cmc
cmc
sub
sbb
enter
sti
xor
js
xor
dec
mov
jge
scas
jge
mov
repnz
leave
inc
push
or
pop
aaa
xlat
pop
cld
pop
popf
and
or
add
inc
adc
movsl
mov
test
mov
cmc
and
daa
inc
pop
out
push
sti
push
dec
arpl
mov
insb
loope
aaa
std
jae
scas
scas
movsl
cmpsb
paddw
into
outsb
add
adc
mov
jbe
push
lret
daa
cwtl
jae
push
ss
xor
aad
pushf
and
xor
in
pop
and
hlt
or
test
inc
imul
imul
sub
inc
adc
lahf
fistpll
repz
jbe
push
outsb
outsb
dec
popa
popf
cmp
imul
test
call
dec
dec
inc
lods
out
mov
or
or
mov
jnp
mov
aaa
adc
xchg
sti
or
mov
cmp
add
xor
ljmp
lods
push
test
add
jmp
jmp
lahf
cmp
call
inc
arpl
out
and
leave
mov
adc
jno
repnz
shlb
lods
sbb
mov
push
test
enter
add
or
pshufw
dec
outsb
movsl
mov
and
add
bound
pusha
inc
adcb
xchg
or
lock
jg
sub
adc
outsl
test
adc
lcall
mov
fmuls
iret
ret
push
sbb
push
xchg
aam
dec
pop
push
into
repnz
sub
sub
inc
dec
sbb
clc
adc
inc
mov
jge
jb
popa
push
imul
xchg
or
incb
or
fdivr
cld
adc
mov
cmp
jg
and
movsl
jmp
jecxz
jae
cmp
test
push
sbb
pop
xchg
sub
mov
sbb
jno
xchg
mov
pushf
sub
sub
xchg
inc
inc
pusha
adc
jns
lcall
mov
xchg
fdivrl
ret
and
jae
ja
add
push
mov
adc
hlt
movsl
hlt
jae
mov
in
jae
loope
pop
cmp
imul
pop
lret
jge
popf
into
movsb
or
cmp
shl
jge
das
inc
dec
mov
in
jns
repz
pop
es
rcr
xchg
cs
dec
inc
inc
mov
leave
add
and
cmp
mov
adc
push
or
in
sub
jb
flds
pop
cmpsb
sbb
rcrl
pop
arpl
jl
scas
fildl
clc
pop
inc
ret
call
adc
mov
mov
xor
lods
xlat
das
addr16
inc
addr16
push
ss
pop
cmp
fists
xor
inc
ja
fwait
xor
sub
outsb
jb
mov
into
stc
in
sub
ja
or
jecxz
dec
mov
les
cmp
inc
dec
sub
adc
fs
icebp
mov
lret
sbb
jmp
sub
lcall
loopne
paddusb
rorb
loopne
dec
in
push
add
dec
pop
push
adc
mov
jp
jbe
push
cmpsl
mov
xchg
mov
push
fadds
lods
mov
jge
and
and
popa
sub
stos
xchg
mov
inc
out
mov
pop
mov
int
ret
test
xor
pop
xor
and
pop
xchg
in
fimuls
inc
push
mov
fmulp
xchg
mov
int3
pop
test
mov
xchg
or
jmp
or
jg
add
test
and
loope
mov
cmp
dec
out
lods
ljmp
in
inc
or
jno
mov
xchg
sub
jo
mov
fsub
add
enter
aad
repnz
jae
lret
and
cmpsl
lods
sub
sub
in
xlat
iret
jmp
push
xchg
xor
push
cmp
inc
out
sub
sub
add
push
jne
aaa
dec
jmp
cmp
mov
dec
shl
mov
lea
scas
or
push
data16
imul
mov
popa
fdivrl
pop
repz
or
jg
jo
xor
inc
mov
out
jnp
popf
cmp
iret
lea
xchg
je
cli
aaa
inc
mov
aas
push
inc
mov
andl
pop
aaa
faddl
sbb
cvttps2pi
iret
movsl
ss
sub
cmp
nop
je
sbb
pop
pusha
cmp
pop
xor
jno
jbe
fcmovnu
jl
sbb
mov
dec
mov
leave
psllw
mov
push
loopne
jo
and
mov
sub
xchg
xchg
in
pop
push
push
movsb
pushf
dec
jmp
mov
xorl
dec
dec
lcall
xlat
pop
cmpsl
lcall
ds
ret
shll
scas
std
out
aad
insb
ds
lret
cmp
sbb
push
push
in
or
sub
jnp
out
sbb
or
cmpsb
mov
fnstcw
sbb
mov
loope
lret
xchg
call
sub
jno
lods
jb
xlat
ja
ljmp
imul
pop
cs
divl
imul
dec
mov
sub
test
push
sub
into
push
or
loope
xor
jae
and
adc
fwait
mov
in
sbb
mov
test
mov
std
sbb
outsb
popa
inc
add
or
call
or
sti
arpl
cmp
cmp
sahf
jmp
adc
fmulp
xchg
push
xchg
repnz
cmp
aaa
or
inc
jno
cmp
into
cs
lahf
add
mov
pop
jb
jbe
pop
xchg
cli
mov
pop
sbb
mov
leave
push
pop
mov
or
push
or
and
mov
daa
push
jge
mov
imul
jg
sbb
jbe
iret
adc
cmp
sub
test
sbb
push
mov
pop
loopne
and
push
test
push
or
or
or
out
inc
push
lds
mov
je
dec
ljmp
lcall
test
jle
fstps
in
int
dec
mov
push
bound
leave
lock
loop
mov
inc
int3
sub
xchg
xlat
cmc
pop
mov
push
jae
xchg
dec
pop
sub
popf
push
cmp
insl
mov
fisubrs
dec
xchg
int3
outsl
fiadds
mov
lret
fsts
inc
cmpsl
mov
roll
cltd
sti
adc
fcoml
or
iret
mov
es
cmp
lret
push
cmp
xchg
jnp
imul
push
push
mov
or
and
dec
pop
push
sub
in
push
ror
arpl
jge
out
mov
inc
xor
xor
dec
lret
push
shll
int3
imul
xchg
mov
bound
dec
ret
aas
pop
sub
sub
ret
stc
inc
cmovs
xor
fdivrl
xchg
lahf
xor
js
pop
aas
lcall
mov
call
stc
add
sbb
popa
jae
jmp
repz
xlat
push
xor
cmpl
sarl
cmpl
xchg
adc
push
jg
inc
add
lea
stc
dec
push
add
xor
xor
ja
nop
mov
insb
pop
jae
movsb
jne
fs
mov
cmpsb
inc
sbb
leave
cmp
sahf
mov
call
mov
or
mov
mov
push
icebp
in
inc
cwtl
inc
mov
and
mov
and
inc
fnstsw
aam
mov
aaa
gs
lods
sbbl
clc
mov
xorl
fs
push
and
adc
cwtl
gs
repz
sbb
fidivrl
push
sbb
mov
dec
xchg
pop
xor
sbb
lea
out
test
jnp
lock
adc
sti
bound
sti
inc
cmc
js
loop
xchg
adc
clc
add
popl
out
sahf
jecxz,pn
arpl
mov
test
lret
fimuls
insb
lahf
add
ds
movl
mov
inc
mov
push
sub
pop
rorb
and
jae
fstp
vpsrad
ficoms
or
push
mov
adc
add
in
mov
push
sbb
in
pop
shll
inc
and
sub
push
and
lock
push
xchg
inc
xor
jo
icebp
mov
inc
rolb
push
xchg
scas
nop
test
mov
or
sub
add
and
addr16
int3
add
cltd
mov
repz
sub
or
in
test
ja
add
les
scas
in
cmpsb
xlat
jo
pop
lea
add
add
dec
push
outsl
xchg
sbb
lahf
cmc
jg
sub
ficompl
rcrl
cmp
pop
and
adc
out
jno
inc
lcall
ja
rorl
mov
and
cmp
insb
test
xlat
cli
mov
dec
rorl
test
jnp
sbb
je
mov
or
out
incl
or
mov
lea
push
xchg
dec
mov
pop
inc
lcall
in
lret
in
cld
add
push
push
xchg
lea
iret
hlt
xor
mov
mov
fildl
xor
aas
xchg
int
outsl
mov
das
inc
pop
xchg
fdivr
xor
dec
sub
push
add
jae
imull
adc
push
scas
cmc
xor
jo
pushf
test
aas
imul
jg
or
in
fsubl
dec
mov
sti
add
pusha
stos
and
jno
out
xorl
dec
cmpsb
lds
xchg
fidivl
ss
add
sbb
aaa
and
adc
mov
std
test
mov
shr
imul
inc
dec
push
popf
dec
fcomps
in
movsb
jns
mov
dec
push
mov
pop
xchg
sub
dec
jb
xor
cmp
mov
lret
shr
test
pop
es
and
cld
call
push
leave
pop
push
sub
sti
or
arpl
sbb
push
loop
mov
movsb
mov
iret
xchg
loope
les
test
inc
fdivr
pop
inc
jecxz
jle
jle
xor
cmpsb
rorl
sarl
test
mov
dec
xlat
push
mov
sarl
mov
add
bound
push
dec
mov
jle
lcall
jbe
mov
add
subb
dec
pop
pop
cmp
int3
std
pop
mov
push
hlt
les
psubusw
add
adc
test
lcall
and
sti
cmpsl
daa
inc
rorl
pop
add
mov
push
rorl
imul
push
sbb
sub
xchg
jle
mov
jae
lret
mov
loope
addr16
in
orb
lret
mov
out
pop
sarb
pushw
xchg
dec
stos
mov
xchg
je
aaa
test
int3
push
negl
test
addr16
mov
mov
fisttpl
add
enter
sbb
push
fbld
mov
int
pop
in
mov
cmp
adc
xchg
fnsave
das
or
scas
mov
flds
fistpll
mov
mov
ja
or
inc
jno
aam
and
cmp
lock
push
pop
adc
into
inc
cmpsl
lods
lcall
loope
flds
insl
add
test
xchg
ja
and
xor
lcall
dec
inc
and
mov
mov
or
inc
insb
scas
xor
test
push
jg
mov
fwait
fldt
inc
xor
xor
push
xor
sub
mov
jmp
out
lds
or
loopw,pn
pop
mov
test
push
daa
pop
jle
ljmp
mov
cmp
cmp
sbb
lock
lods
inc
out
mov
lahf
dec
sbb
xchg
cmp
testl
mov
add
pop
sahf
cmpsb
inc
jbe
cs
dec
pop
lods
ja
jle
sbb
pop
and
add
lahf
insl
sub
je
lds
shrl
fidivl
adc
xor
lret
pop
inc
test
jne
or
mov
sub
or
imul
lcall
xchg
mov
shr
daa
faddl
push
pop
mov
sbb
mov
adc
dec
pop
inc
lods
or
xchg
mov
cltd
push
aam
pusha
cwtl
xor
andl
popw
cwtl
inc
int
push
xor
fs
pop
xchg
mov
stos
loop
ret
shrb
push
in
adc
jnp
loop
push
das
scas
sub
mov
or
fmuls
es
cwtl
lret
mov
xlat
pop
mov
jmp
mov
dec
dec
and
xor
cld
dec
and
jmp
add
hlt
and
mov
push
and
aad
add
loope
xor
and
and
push
das
adc
int3
mov
jg
xchg
add
add
scas
inc
stc
cmp
adc
repnz
push
js
cli
in
mov
cwtl
dec
sub
cltd
mov
mov
cmp
movsb
sbb
push
outsb
jmp
repz
imul
add
pop
pop
mov
add
sbb
inc
stos
mov
ret
xlat
subb
cmpsb
dec
lds
dec
xchg
or
push
xchg
jl
sub
insl
mov
ja
jno
notb
xchg
mov
jmp
cwtl
je
std
xchg
push
mov
movl
sbb
jno
call
sbb
mov
sub
stc
inc
cmp
cmp
rolb
add
fdivs
dec
inc
stos
fsin
mov
adc
xor
mov
in
shrb
push
xor
scas
ljmp
dec
jo
xchg
or
mov
and
movsb
and
push
sahf
adcl
mov
mov
cmpsb
insl
aam
xcrypt-ctr
cmpsl
pop
or
cmp
dec
insb
jmp
js
pusha
pushf
sub
pop
in
mov
cltd
xor
push
inc
and
mov
push
jp
arpl
cmp
jg
testb
mov
pop
mov
or
adc
in
icebp
mov
mov
pop
push
dec
int3
ret
push
shll
pop
adc
jno
mov
xlat
inc
cmpsb
dec
imulb
add
imul
pop
nop
mov
into
bound
addb
add
xlat
sub
mov
and
pop
fucomi
cmp
sar
sti
lock
mov
lods
mov
add
dec
pop
inc
or
cli
xchg
imul
xor
jne
mov
push
push
sub
es
push
inc
lret
gs
lret
pusha
movl
andl
mov
imul
lcall
pop
aaa
mov
aad
xchg
rol
aas
xchg
mov
and
movsl
xchg
fwait
test
jp
mov
scas
pop
xlat
repnz
xchg
movsb
int
mov
or
scas
inc
das
pop
aas
xor
les
lock
mov
mov
int3
arpl
rcr
leave
js
pop
out
imul
cmpsl
sub
dec
add
xor
sub
rorb
shrb
and
jg
xor
mov
ljmp
loope
nop
pop
js
jnp
lods
rclb
arpl
fldenv
cmp
add
xor
mov
fmull
push
sub
jns
cmp
leave
popa
cmp
add
push
cmpsl
rcrl
adc
dec
xchg
inc
xlat
cmp
stc
ja
aad
pop
aaa
xchg
xchg
cmp
pop
test
add
push
in
in
shlb
mov
or
daa
es
cmpsb
mov
mov
iret
in
pushf
test
xchg
fdivs
icebp
sahf
jmp
int3
xchg
adc
fwait
xor
movsb
icebp
sub
and
cmp
invd
push
jo
push
dec
movsl
fcoms
xor
aas
inc
lods
or
js
test
into
rclb
imul
shl
ss
sbb
push
jg
fiaddl
aas
pop
push
xor
loop
push
std
xor
decl
add
das
out
mov
inc
xchg
push
es
or
pop
mov
xor
pop
pushf
pop
xor
add
jbe
jb
or
fldl
sbb
inc
lods
mov
mov
pusha
mov
or
inc
push
jle
push
test
in
popf
cmp
out
cli
insb
das
pop
pop
xor
cmpordps
adc
sti
pushf
sbb
add
test
fsts
xchg
xor
or
xchg
adc
push
hlt
push
dec
xor
xchg
or
subb
xor
pop
and
mov
in
ja
push
fwait
mov
xchg
push
mov
int3
test
cmp
int3
dec
and
leave
mov
dec
pop
ja
lock
pop
add
add
jecxz
jmp
pop
xchg
rep
or
js
cmp
pop
std
inc
clc
push
cmp
cmp
shll
repz
inc
adc
popf
fistps
pop
in
in
inc
ds
cmove
pushf
mov
pop
bound
add
pop
mov
lcall
out
sbb
jmp
mov
mov
imul
roll
sbb
xor
scas
insb
dec
sub
aam
xchg
push
or
cld
mov
aaa
pop
divb
jbe
mov
xchg
js
mov
lods
add
push
imul
sbb
mov
out
push
xor
xchg
pop
inc
inc
test
cmp
xor
jbe
cmpsl
lds
movsb
mov
hlt
push
lret
ret
popa
bound
jle
ficomps
ret
adc
inc
fsubl
int
shlb
xor
or
adc
mov
sub
add
mov
in
or
testl
and
jp
scas
push
fistpll
xor
insl
xchg
mov
push
adc
out
xchg
mov
out
bound
cmp
cmp
aam
insb
ss
pop
mov
mov
jge
and
scas
add
bound
or
pop
mov
mov
lock
sub
xchg
stc
and
aas
or
test
jo
push
leave
xlat
jg
lahf
pop
fsubrl
test
mov
scas
cmc
sahf
jp
nopl
call
shl
dec
inc
jg
fs
repnz
loopne
imul
push
pop
fs
xchg
hlt
in
cld
add
jecxz
adc
dec
sti
pop
dec
fisubs
hlt
mov
test
push
sub
cmc
pop
fisubl
mov
lock
adc
fisttps
jno
xor
xchg
lea
movsb
dec
loope
into
jne
push
jb
xlat
xor
xor
mov
aad
leave
jp
mov
xchg
call
movsb
mov
mov
add
mov
xor
sub
addb
push
int3
pop
clc
push
fwait
in
adc
dec
stos
filds
outsl
push
or
dec
scas
pop
mov
ljmp
test
test
fnsave
cld
rorb
lahf
jge
test
test
mov
mov
popa
movsl
xor
fs
adc
fstpt
xchg
inc
cld
popf
pop
mov
mov
cmp
les
mov
sbbl
icebp
jmp
cmpsl
push
xsha1
cmpsb
cmovnp
adc
lahf
and
pusha
js
cmp
xchg
inc
fidivrs
fldl
in
insb
cmp
and
or
sbb
dec
fsubp
jae
dec
mov
out
cmp
arpl
imul
inc
inc
jbe
out
mov
cmp
out
mov
xor
lods
push
mov
cmpsb
lock
shrb
aaa
pop
jae
rcrl
mov
lods
cs
add
jg
std
mov
and
pop
or
mov
xchg
aad
stc
ljmp
push
mov
add
mov
mov
push
jno
sub
insb
ret
jecxz
loope
leave
push
mov
jmp
xchg
jno
xchg
loopne
mov
lcall
movb
add
shll
outsb
in
ss
xor
sbb
inc
jge
sti
mov
or
cmp
ds
mov
mov
push
cmp
pushf
cmp
xor
push
sub
in
push
mov
jecxz
mov
insb
loope
fbstp
sub
addl
in
scas
adc
popl
mov
ret
push
mov
add
mov
repnz
sti
mov
movsl
andb
jb
mov
ds
scas
loop
insb
es
jge
inc
pop
pop
jmp
inc
push
repz
rorl
dec
xchg
daa
fs
adc
mov
mov
xchg
sbb
outsl
add
imul
jecxz
add
mov
cmp
jmp
lea
sub
pop
xor
loop
das
js
hlt
xchg
jp
lea
imul
pop
out
mov
fcmovb
and
jle
cmp
pop
push
fdivs
adc
sub
or
leave
stos
jge
sbb
popa
mov
out
loopne
aaa
fcomp
ja
mov
mov
dec
pop
scas
push
outsl
ret
pop
lods
scas
xor
insl
mov
xor
add
push
jl
push
xchg
fbstp
testl
push
aam
cmpsb
subl
mov
mov
adc
mov
dec
cmpsl
loope
in
lock
scas
call
imull
leave
mov
xchg
jbe
add
push
sub
movsl
loope
ret
mov
lock
mov
xor
ds
cmpsb
push
mov
sti
inc
iret
xor
mov
sahf
lret
enter
cltd
mov
sub
movsl
adc
push
test
push
pop
mov
ss
mov
ja
push
push
xchg
int3
sub
cs
xchg
inc
mov
movsl
xchg
lcall
and
aam
gs
lods
pop
jg
daa
push
jmp
insb
scas
or
jg
push
xacquire
jns
test
pop
xor
fyl2x
repnz
or
outsl
sbb
or
aam
sbb
nop
ret
push
mov
mov
lcall
add
loope
dec
daa
add
or
jp
inc
pop
cltd
clc
out
lea
pushf
pushl
adc
shll
int3
lcall
mov
adc
and
imul
iret
xchg
pop
pop
pop
or
and
inc
dec
in
test
dec
popa
sti
adc
inc
cld
iret
cmp
enter
mov
imul
mov
orl
scas
dec
jecxz
lret
or
and
sbb
arpl
lea
and
in
popf
jmp
adc
fsubs
inc
mov
or
xchg
fistpll
nop
dec
cmp
ss
sbb
movsb
push
es
adc
push
sub
push
repz
mov
es
repnz
push
lahf
scas
cltd
cmpsl
mov
aad
aam
sarl
lret
dec
jbe
loopne
addl
xorb
ret
cli
aad
dec
pop
sbb
mov
das
jecxz
xlat
xchg
or
dec
mov
mov
repnz
dec
push
arpl
jb
scas
mov
pop
mov
cli
xor
cmpsb
rcr
daa
mov
repnz
lds
addr16
gs
sbb
mov
fwait
push
int
fcoml
leave
ss
bound
ds
mov
sahf
imul
mov
pushf
cltd
cmpl
jp
clc
mov
jnp
std
test
push
leave
fldpi
inc
xor
fisubrl
lea
push
jmp
and
into
add
ss
push
mov
fadd
add
sarl
and
sub
xchg
and
jle
insl
inc
jae
pop
xchg
enter
and
sub
sahf
movsl
ss
add
sahf
jne
lea
adc
sbb
sub
fdecstp
mov
punpckhbw
inc
movsl
mov
xchg
ja
jecxz
leave
scas
mov
inc
inc
mov
js
cmp
pop
test
xchg
rorb
rorl
adc
cmp
push
test
jae
icebp
jp
pop
mov
lret
rcr
adc
in
cmp
xor
xchg
mov
jecxz
xorl
rcrl
or
sbb
stos
inc
pusha
lock
add
cltd
popf
cmpsb
int3
xchg
add
mov
push
mov
rorl
xchg
add
adc
lret
aaa
fst
cmp
in
testl
push
insb
and
push
aaa
mov
xor
xlat
fwait
cmc
test
jne
cmpsl
jo
lcall
and
xor
or
insl
into
imul
in
fistpll
cmc
aaa
in
xchg
mov
xchg
push
pop
cmp
dec
dec
lods
push
pop
mov
sub
lods
les
fucom
push
and
js
out
cwtl
lret
xor
test
sub
xchg
fidivrl
xor
and
and
inc
adc
data16
fistps
xor
inc
sub
test
pop
pop
inc
bound
loope
sub
mov
and
pop
shl
push
in
popa
imul
ss
xchg
sbb
mov
inc
ret
cmp
sub
dec
inc
xchg
lock
ljmp
repnz
aad
xchg
jae
inc
xchg
in
imul
sub
mov
inc
scas
loope
fists
loopne
gs
cld
mov
xor
mov
sub
scas
repnz
in
lods
push
mov
jno
aas
arpl
jb
outsb
in
dec
cmp
adc
bound
in
push
xchg
bound
roll
sub
in
mov
push
subl
not
adc
cmp
cmp
xchg
pop
pop
dec
in
in
loope
inc
idivl
je
je
sub
sbb
mov
dec
or
fbld
fucomp
xor
pop
jecxz
cmp
loope
mov
rcrl
jle
std
sub
pop
jmp
dec
loope
dec
out
mov
jle
push
mov
dec
mov
lea
daa
out
repnz
js
lea
or
and
mov
rcrb
dec
cmp
push
add
ret
out
dec
pop
mov
shrl
xor
xor
xchg
sbb
mov
mov
rcl
sub
xor
outsl
pop
addr16
call
pop
rcrl
jo
and
andl
mov
and
pop
adc
lods
mov
inc
rep
dec
leave
outsb
push
sets
test
cmpsb
mov
cmp
push
lods
enter
arpl
push
fcompl
rorl
cmpsl
imul
inc
fwait
jbe
cmp
jmp
fwait
adc
fldt
add
movsl
popa
in
out
mov
xor
jg
xchg
xor
and
pop
aas
sbb
cmp
cmc
dec
fwait
pusha
sbb
shlb
test
dec
sub
std
jae
clc
mov
and
cli
popf
jge
xor
xchg
lods
rcr
dec
mov
or
push
ljmp
fnsave
out
mov
xchg
mov
sarb
mov
mov
popf
dec
lods
push
mov
mov
js
inc
call
into
je
in
mov
frstor
adc
jnp
outsb
ds
pop
jae
xor
sahf
negw
loop
mov
push
jge
add
out
out
jle
cwtl
leave
xchg
cmpsl
xorb
clc
pop
mov
xchg
aaa
scas
aad
jne
dec
push
mov
cmp
push
popf
lret
mov
shlb
or
rorl
push
inc
js
sub
repz
cmp
lahf
jp
pop
inc
test
std
ret
popa
adc
push
nop
loopne
lret
inc
pop
out
jns
pop
lcall
stc
and
cmp
pop
ror
add
mov
mov
pop
out
aaa
cmpsl
jno
dec
shrl
inc
es
push
or
or
outsl
jns
call
clc
xor
xchg
aas
push
fneni(8087
mov
jnp
cld
mov
daa
test
mov
xchg
scas
int3
sbb
mov
mov
mov
shrl
jg
add
addr16
imul
insl
ja
pop
out
aaa
lcall
xchg
flds
js
mov
cmp
mov
pop
ror
shll
push
adc
imul
cwtl
mov
dec
outsl
xor
nop
mov
insl
mov
xchg
sbb
cmp
dec
jle
cld
je
iret
leave
fimull
push
cmp
add
dec
movsb
pop
les
push
lds
ljmp
pop
xchg
popa
cmovae
cmp
jb
xchg
int
xor
mov
nop
shl
daa
sbb
cmpsb
movsl
stc
or
out
mov
dec
mov
ss
sub
cwtl
imul
bound
add
sub
dec
adc
jnp
ret
and
push
cs
inc
scas
loop
clc
rolb
sub
xchg
cwtl
lret
push
jp
inc
shlb
fsubr
add
pop
stos
cmp
sbb
cmp
shll
pop
loope
push
pushf
sub
and
shl
or
inc
dec
sub
xor
push
loop
lret
cmp
ss
add
jbe
clc
loop,pt
mov
xchg
data16
ljmp
mov
scas
jmp
and
cli
stc
xchg
mov
ja
lea
lea
add
outsl
hlt
mov
or
jno
call
cltd
cmp
dec
pop
push
pop
jl
adc
sub
pushf
cltd
rep
inc
push
mov
repz
adc
pop
loope
jb
shl
sar
add
pusha
sub
ret
mov
xchg
add
mov
push
out
aad
data16
adc
aaa
mov
cmp
adc
in
fcoml
push
jecxz
addr16
imul
dec
insl
cli
inc
jecxz
and
adc
cmp
inc
das
xlat
popa
pop
add
sbb
lcall
mull
push
xor
push
mov
jmp
sbb
pop
stos
cmovns
fdiv
mov
mov
jo
xor
cmp
cmp
loopne
or
and
push
adc
movl
stos
and
or
movb
pop
inc
sub
pop
sub
push
xor
and
or
and
adc
push
push
mov
icebp
add
push
pop
or
sti
pop
xchg
add
aaa
cs
dec
xor
xchg
mov
adc
cmp
jae
sti
movsl
stos
loope
fidivrs
xor
dec
jne
cmpsl
xlat
notb
jb
adc
jno
mov
arpl
out
sbb
cld
adc
icebp
or
cmp
inc
xchg
in
adc
sahf
xchg
daa
pop
mov
jb
mov
sub
mov
dec
cmpsl
lret
ja
stc
mov
rorl
popf
into
out
cmp
lret
fcomi
mov
push
jmp
push
out
das
rolb
mov
mov
sub
sbb
xor
cmp
mov
in
inc
dec
mov
pop
inc
pop
sub
xor
mov
cmp
push
loop
lcall
lods
popa
mov
test
mov
out
inc
push
jne
push
loopne
aaa
and
js
popf
cmpsb
push
dec
xor
orb
std
mov
out
insl
js
jp
pop
movhps
jae
dec
push
mov
xchg
cli
xchg
jns
test
test
pop
stc
inc
lods
sarl
cmp
ss
inc
clc
adc
loope
sbb
sahf
jle
or
push
adc
call
jge
test
pop
stc
enter
fs
pushf
js
cmc
stos
add
daa
push
gs
jg
popf
outsb
out
roll
xchg
mov
mov
je
stos
xor
jl
xor
cwtl
loopne
or
push
icebp
std
iret
in
jg
in
or
sarl
jns
pusha
int3
push
idivl
loope
jp
push
rcll
fiaddl
jb,pn
add
icebp
pop
sub
scas
fists
sub
out
enter
mov
fnstcw
sub
sbb
push
outsb
bound
insl
das
adc
int3
fbld
sub
cli
les
mov
mov
pop
data16
fmuls
inc
mov
inc
xorl
xchg
mov
repz
in
add
cmp
jl
leave
daa
mov
fsubl
mov
rcr
iret
add
cs
fneni(8087
cs
fadds
iret
jne
ljmp
jnp
fucomi
aaa
xchg
das
in
or
rorl
out
jle
cmpsb
fucom
sub
push
xor
stos
into
jne
mov
pop
adc
leave
imul
or
dec
and
imull
ss
test
arpl
dec
out
mov
mov
ss
dec
jmp
or
add
xor
inc
inc
xchg
inc
push
movsl
push
and
pop
sbb
shlb
xor
fstl
mov
adc
clflush
icebp
jge
loop
dec
xchg
mov
cmp
and
out
loope
aas
push
cmp
sub
dec
enter
or
fwait
dec
imul
and
sub
in
flds
cmp
rorb
pop
xor
mov
xor
stc
enter
scas
mov
cld
mov
shrl
subl
mov
xchg
push
jno
dec
repz
movsb
lretw
jns
mov
loopne
leave
lds
adc
inc
or
mov
mov
data16
aaa
cmp
jae
ret
ret
sahf
pop
mov
out
xchg
lret
pop
int
lahf
pop
cmpsb
add
inc
or
lcall
rcll
sub
and
test
popa
dec
fwait
into
popa
subl
push
mov
xchg
int
mov
jno
jecxz
inc
sbb
sub
lret
clc
cmp
mov
inc
outsb
fwait
rcll
xor
in
fxch
lcall
mov
test
push
cmpsb
cwtl
xchg
ret
rcr
and
push
cmp
cltd
pop
and
les
lds
pop
or
scas
repz
pop
hlt
mov
addr16
add
push
fimuls
add
loop
pop
push
mov
pop
rcr
movsb
cmc
daa
arpl
fsubp
dec
and
pop
xchg
sub
fcompl
jge
dec
push
mov
movsb
inc
imull
cltd
int
adc
jecxz
stos
ja
hlt
lea
lret
mov
aam
dec
or
pop
popl
jae
outsb
or
mov
cli
inc
dec
shlb
pop
test
mulb
dec
adc
ror
lods
lds
or
movsl
xchg
jp
aas
test
shrb
sub
inc
cltd
scas
in
xchg
push
pop
cmc
jno
lret
jo
pop
in
or
inc
xchg
fnstsw
lahf
in
pop
jns
sbb
or
mov
push
jmp
xchg
mov
jnp
inc
repz
fucomi
pop
lahf
or
push
aas
repnz
inc
jns
sub
ljmp
jle
mov
adc
dec
cld
repnz
orl
sbb
sub
lock
ds
mov
pop
sbb
lret
in
ror
cwtl
inc
mov
mov
insl
mov
adcb
in
icebp
scas
xchg
imul
adc
int3
push
aaa
popa
fcmovbe
in
cmpsl
add
sbb
push
mov
stos
out
inc
inc
ljmp
divl
mov
not
out
fidivl
mov
mov
into
mov
cmc
xchg
dec
pop
mov
jne
or
movb
test
pop
rcrb
popa
das
push
xor
sbb
push
and
xor
cmp
sub
inc
mov
xchg
or
jl
test
push
lock
mov
sbb
cmp
jns
add
jb
ja
jle
dec
popa
and
loopne
jg
gs
adc
jge
shll
loopne
arpl
movsl
aaa
repnz
pop
fildll
mov
mov
mov
mov
xchg
jl
sbb
add
jl
push
cmc
pop
clc
dec
fistpl
jl
and
sub
aad
outsl
lahf
push
push
jg
push
ds
movsb
cmc
xchg
cld
sbb
pop
das
repnz
inc
xor
mov
cmp
pop
jbe
inc
jl
cmp
out
outsl
push
in
jns
add
cli
stos
or
loop
sub
jl
lock
cwtl
xorl
mov
sahf
sub
sub
popf
pop
aaa
call
and
pop
cmp
mov
lret
mov
sbb
loop
rcl
sub
outsl
jecxz
add
leave
adc
and
or
stc
mov
negb
jle
sbb
shlb
push
gs
mov
dec
cmp
jle
aaa
jno
xchg
cs
lea
std
xor
jge
enter
scas
mov
xlat
out
rcrl
sub
test
rorb
incb
mov
lods
aaa
stc
cld
pop
stc
stos
cmpb
sub
jb
outsl
stos
test
add
mov
cltd
sub
pop
bound
idiv
shl
jb
fdivs
push
lods
je
test
les
mov
xchg
jae
dec
and
and
xchg
int3
adc
rorl
call
mov
pop
gs
bound
xchg
scas
imul
jo
xor
ja
jmp
inc
rcl
push
lods
inc
aad
enter
shll
iret
cmp
daa
fbstp
gs
cmpsb
cwtl
jmp
lock
int
mov
xchg
inc
pop
inc
xchg
test
ss
sub
cmp
sbb
dec
mov
fsubrl
pop
ljmp
fmuls
movsb
jo
pop
inc
cmp
jnp
movl
sbb
sbb
jb
xor
cmp
jmp
das
cmpsb
cmpsb
cltd
lahf
sahf
sahf
dec
jge
or
shrb
jo
mov
mov
arpl
push
insb
mov
inc
sbb
repnz
xchg
mov
mov
mov
jge
or
mov
icebp
fwait
mov
push
sub
xchg
pop
or
daa
or
sbb
sbb
dec
sahf
or
les
ret
repnz
faddl
adc
insl
loope
incl
stc
imul
sbb
mov
lds
pop
mov
and
jmp
mov
iret
lret
cmp
sbb
jno
fdivr
fildll
fst
mov
cmp
hlt
leave
cmp
pushf
cmp
mov
lcall
orb
add
mov
lods
add
jns
inc
mov
adc
jge
ret
mov
rcrl
out
sub
add
aam
mov
imulb
addr16
cli
and
xchg
icebp
inc
ja
cmp
outsb
sbb
xor
loopne
cmp
xor
sbb
aam
loopne
mov
xchg
jne
cwtl
mov
je
stos
xchg
popa
mov
push
jge
jg
dec
lock
cmp
in
mov
movsl
pop
mov
imul
aad
popf
outsl
int
mov
cld
lods
sahf
xor
test
sub
leave
adc
leave
pop
sub
adc
and
xor
xchg
mov
js
mov
mov
fwait
aad
jp
add
cmp
lods
scas
arpl
adc
pop
adc
addb
xor
mov
push
add
and
push
ret
push
cmpsl
cmc
sti
lods
test
lret
push
sbb
add
xchg
inc
or
inc
lcall
ds
pop
sbb
jns
stc
cmp
es
cmpsb
cli
jp
inc
cld
cmc
ret
fldcw
call
sub
add
mov
leave
cld
sub
mov
test
add
int3
jp
jle
mov
pop
add
flds
xchg
adc
cmpsb
jb
fnstcw
adc
dec
or
pushf
aad
sbb
loopne
insl
pop
ljmp
push
loope
xor
cmp
jl
or
ds
cmpsl
cmp
and
sub
lahf
push
mov
aas
scas
outsb
dec
mov
mov
mov
cmpsl
dec
sub
cmpsb
or
sarb
stos
aad
je,pt
insl
mov
ret
xchg
das
cs
xor
mov
push
push
xor
mov
std
out
adc
shrl
jge
fs
lret
xor
stos
out
lahf
push
cmpsb
imulb
or
add
iret
ror
bound
sub
cli
aaa
stos
test
hlt
daa
cmp
push
sub
xor
inc
cmp
sbb
dec
int
sahf
stc
add
negl
and
int
in
jnp
cli
movsl
dec
movsb
pop
mov
cld
push
sbb
ret
movsl
pop
fisttps
mov
mov
add
pop
push
std
in
cmc
inc
adcb
jns
fsubs
enter
mov
scas
repz
cltd
cmp
jno
loopne
jo
sahf
in
xchg
imul
data16
xchg
xchg
sbb
xor
sub
repnz
push
pop
or
or
xchg
and
shll
push
or
call
loop
push
enter
leave
cmpsb
inc
jp
mov
dec
fbstp
jno
aad
aad
xchg
pop
cltd
scas
out
verw
repz
das
or
sbb
adc
or
mov
mov
adc
daa
mov
arpl
out
lret
movsb
adc
add
push
jg
pop
jl
in
cmp
gs
repz
mov
mov
call
or
jl
pop
or
lea
adc
mov
mov
shlb
pusha
ret
xchg
mov
inc
xchg
jecxz
sub
insl
sbb
bnd
mov
out
pop
filds
ljmp
inc
fcomi
shll
loop
lret
push
sti
int3
cmp
loopne
push
and
call
pop
mov
lds
shl
daa
dec
inc
xchg
push
jl
pop
fwait
orb
subb
out
add
pop
mov
or
pop
add
mov
iret
lds
popa
push
jmp
sub
cmpsl
xor
lods
movsl
imul
sbb
pushf
sub
pop
out
add
sub
dec
roll
inc
test
pop
push
add
push
xchg
pusha
movsb
dec
and
inc
cmpsl
in
in
ficomps
sbb
pop
xchg
push
mov
jp
into
lret
jne
and
adc
push
inc
jno
add
or
int3
scas
pop
xlat
inc
mov
popa
pusha
mov
jle
mov
xchg
nop
int
test
dec
lret
pusha
pusha
lahf
icebp
in
or
hlt
pop
inc
sbb
push
inc
xchg
xchg
cmp
inc
loopne
mov
repnz
stos
gs
pop
push
fcmovne
sahf
pop
add
push
xchg
sub
stc
xor
je
mov
inc
cs
loope
repnz
push
sub
jle
sbb
stos
push
daa
gs
push
ljmp
fs
sub
call
adc
add
popf
orb
scas
popa
out
push
xchg
cltd
and
adc
xchg
xor
int
pop
mov
sbb
mov
mov
das
cmc
inc
cli
sbb
cmp
mov
repz
aas
cltd
dec
rcll
fidivl
loope
xchg
xor
mov
cwtl
pusha
shll
xor
les
insb
xchg
es
jnp
outsb
shrl
and
dec
sbb
add
fwait
adc
in
jnp
lret
push
mov
jbe
addl
adc
rclb
fdivs
sbb
call
les
add
sbb
sar
inc
or
add
mov
push
loop
mov
pop
adc
enter
cli
cmpl
inc
inc
ret
xchg
ss
xor
cmc
cmp
cmpsb
shlb
add
imul
push
push
sub
and
pop
lahf
adc
mov
repz
xchg
xor
xchg
pop
xorb
ljmp
pop
xor
fstl
mov
aaa
insl
aas
dec
adcb
sub
es
adc
sub
lret
mov
fildll
fs
mov
lods
and
push
pop
push
mov
cmp
or
cs
pop
push
in
cmc
jne
inc
aaa
dec
dec
mov
dec
call
out
mov
mov
lea
aaa
xor
pop
push
and
popa
popf
leave
gs
xchg
pop
scas
icebp
rclb
cmp
jne
adc
adc
mov
inc
push
sub
fst
sub
daa
in
daa
ja
in
fbld
fnstcw
push
sub
inc
jbe
push
clc
xor
ret
daa
cmp
mov
cld
mov
or
mov
xorb
mov
push
sar
xchg
mov
cli
shlb
scas
mov
fldenv
jno
xchg
lods
mov
pusha
idivb
adc
mov
push
fwait
jp
sti
into
adc
pop
jne
loopne
mov
js
xor
and
lds
jecxz
jp
outsl
jecxz
aaa
in
inc
hlt
lret
jae
mov
imul
mov
dec
mov
outsl
lcall
notl
push
mov
mov
dec
jae
cmp
les
inc
outsb
sbb
mov
lret
rcll
mov
mov
aaa
add
or
int3
rclb
push
cmp
int
or
and
rol
or
cmpsl
popf
loopne
ret
add
out
ss
cmp
ret
repnz
int
or
stos
cmp
sbb
push
nop
enter
test
cmpsl
fbstp
ja
xor
xchg
mov
gs
inc
das
in
bound
and
arpl
aaa
lods
popl
inc
iret
mov
or
and
jb
lock
jmp
lret
ljmp
lret
clc
pop
add
les
add
or
js
lcall
or
sbbl
xor
adc
fcompl
mov
and
xchg
xchg
stc
std
mov
jp
xor
mov
sbb
xor
ror
mov
loop
jno
outsl
add
lods
adc
adc
inc
adc
xchg
leave
test
addb
push
push
push
jnp
sbb
sub
test
sub
lock
outsb
sarl
push
adc
push
fisttps
mov
xor
xorb
adc
iret
ds
lock
fstpt
jbe
js
out
insb
add
fnstenv
es
jg
xor
jno
es
mov
push
orb
das
xchg
nop
mov
jmp
jns
mov
or
loope
adc
cmp
daa
in
rolb
cmp
xchg
pop
push
mov
ficompl
mov
lahf
call
cld
sub
rclb
xchg
xchg
dec
add
mov
mov
xchg
mov
push
jnp
mov
pop
in
pop
mov
inc
xchg
push
inc
pop
or
daa
inc
movsb
or
add
dec
popf
lods
test
sbb
repz
mov
add
je
push
fwait
xchg
test
gs
jbe
inc
sbb
inc
push
mov
jecxz
lahf
sub
sbb
lret
fwait
and
sbb
adc
pusha
jno
in
out
push
push
fwait
mov
inc
cmp
push
mov
cmpsb
cli
push
ja
std
int
lock
xlat
pop
test
jmp
and
imul
pushf
xchg
xchg
in
stos
and
jnp
mov
pop
lds
dec
outsl
test
add
mov
mov
mov
pop
nop
inc
dec
inc
add
call
push
mov
andb
mov
shll
cli
rcr
mov
not
pop
dec
lahf
sbb
sti
xor
lods
fmuls
cld
ss
fdiv
adc
dec
pushl
push
rcrl
inc
xchg
fidivrl
jo
and
dec
repz
std
daa
jle
push
stc
repz
negl
sahf
cmpsl
sub
cmp
sub
sub
cmp
add
cmpb
fnclex
ss
and
xchg
fstpl
push
insb
xchg
das
and
mov
mov
mov
adc
imul
pop
dec
das
clc
pusha
mulb
pop
mov
push
mov
lods
adcl
aad
es
lahf
pop
or
data16
jbe
pushl
cmp
mov
pop
or
dec
lods
scas
insl
fwait
cmp
inc
xchg
jecxz
movsl
inc
shl
scas
jo
popa
lods
enter
aam
inc
xchg
or
out
fisttpll
hlt
pop
mov
pop
sub
cmpsl
in
loope
loope
loope
icebp
cmp
pop
jmp
mov
push
sbb
sub
push
arpl
fdivrl
fisubs
gs
jo
push
pop
push
push
xor
adc
into
add
adc
stos
rcrb
test
int3
popf
or
cmp
ret
pop
push
dec
pop
inc
xchg
cmp
jae
adc
sbb
push
jne
add
jge
shlb
test
mulb
jle
sub
xor
pop
xchg
xor
pop
xlat
dec
shrl
mov
dec
pop
ss
sbb
shll
cltd
push
in
mov
xor
pop
sub
cmc
jno
mov
jle
inc
push
mov
mov
xchg
inc
ror
decl
xchg
sub
js
daa
aas
popf
mov
aaa
jns
imul
es
adc
into
cmpsb
or
mov
or
push
or
fisttpl
leave
add
mov
push
adc
pop
jno
fdivrl
xchg
pop
lods
push
mov
push
or
or
test
enter
mov
add
xchg
aas
and
fcmovb
aad
sub
fwait
sbb
sub
lret
mov
pop
and
in
cmpsl
xchg
add
pop
stc
and
out
fisubl
pop
mov
mov
lods
fwait
loope
add
adc
adc
mov
out
jl
sub
cld
insl
aas
xlat
mov
dec
adc
in
sub
repz
pop
add
dec
jg
inc
adc
push
imul
xchg
inc
inc
xchg
daa
jo
add
inc
push
add
mov
ljmp
pop
std
loope
jae
push
cmpsl
data16
enter
ljmp
lcall
lahf
push
jg
push
fsubrl
push
inc
pop
shrl
xor
xor
mov
xchg
movsl
hlt
les
or
xor
adcb
or
mov
jmp
movsl
mov
ret
scas
out
mov
aas
add
imul
sbb
adc
jne
dec
and
adc
and
pushf
les
test
cmpsb
xor
pop
mov
pop
mov
pop
add
inc
jg
movsl
jae
pop
lahf
push
jae
fwait
repnz
pop
and
ret
pusha
ret
and
dec
cmpsb
scas
in
sub
movsl
xchg
dec
aaa
ss
and
pop
inc
push
xor
adcb
jns
mov
cltd
jl,pt
popa
mov
xlat
pop
movsl
stos
inc
mov
fcoml
jne
add
das
std
mov
lahf
xchg
les
jp
roll
sbb
in
fstps
xchg
jae
fwait
xchg
cmp
loopne
and
add
mov
xchg
andl
or
mov
aaa
jle
pop
addr16
or
xchg
enter
jg
int3
xor
pop
inc
push
or
jge
icebp
loopne
jb
test
rclb
out
sarl
cmp
cmpl
outsl
dec
xor
div
mov
faddl
jp
cmpsb
inc
mov
push
aas
nop
jo
cmp
cmp
mov
pop
popa
add
bound
cmc
xor
fistpll
je
out
aaa
jmp
into
fcoms
mov
int3
fwait
pop
sti
shll
mov
lods
cmc
or
sti
mov
inc
shll
cmpsl
out
movsb
stc
aad
and
rcrl
lock
mov
loop
mov
cmp
je
xor
outsl
jmp
imul
push
cld
cwtl
test
stos
mov
test
pop
movl
sbb
xchg
add
xor
into
or
pop
jo
mov
scas
sub
ds
mov
rorl
insb
mov
shll
in
jecxz,pn
ret
stos
into
jg
popa
dec
int
mov
cmp
sbb
cmp
mov
inc
pop
dec
push
sub
fimuls
lahf
lcall
or
incb
pushf
mov
es
push
jbe
push
push
sub
inc
rcr
xchg
out
or
dec
imul
xor
inc
scas
lea
divl
push
aam
xor
xchg
mov
or
scas
out
pop
je
mov
jecxz
adc
or
pop
push
lea
cmpsb
test
repnz
lods
mov
sahf
das
xor
cmpsb
mov
call
insl
addr16
mov
jo
sbb
es
push
sbb
inc
mov
lcall
lock
sti
sahf
pop
push
dec
in
mov
sbb
test
or
mov
lahf
lret
push
sbb
adc
mov
sbb
mov
xchg
cmp
stos
mov
clc
push
dec
outsb
sti
xchg
push
aad
cmp
push
add
push
xor
lods
add
imul
cmpsb
lock
test
pop
xchg
mov
cmp
outsl
jg
adc
stc
aaa
push
cmc
in
xchg
inc
pop
adc
outsb
fadds
xor
fwait
hlt
and
and
jmp
xchg
xor
lahf
loopne
aam
das
dec
cmpb
xor
mov
leave
dec
pop
cs
push
loopne
fnstsw
pop
ret
pop
not
dec
clc
push
pop
xor
orl
sbb
jno
pop
mov
jns
lods
mov
jp
ficompl
sbb
aaa
and
mov
imul
or
and
outsl
out
fmuls
xchg
cld
push
in
test
sbb
lods
sbb
cmp
xchg
adc
and
jo
scas
adc
xlat
jbe
or
and
or
popa
push
mov
jp
xchg
or
pop
jno
jno
xor
outsl
scas
clc
jo
outsb
aam
cld
sbb
xorl
aas
mov
mov
adc
or
lds
repnz
jp
push
pop
lret
adc
mov
add
inc
dec
or
or
mov
daa
and
jbe
pop
ljmp
dec
scas
mov
mov
push
jecxz
mov
mov
mov
les
dec
jne
shrl
out
cmp
jmp
cmp
ret
sub
sbb
mov
pop
jg
sbb
cmc
xor
ljmp
js
ljmp
enter
jge
fwait
push
sbb
aad
pop
pushf
shrl
and
or
outsb
dec
dec
ficoms
dec
movsb
cwtl
adc
xchg
notl
push
loop
jno
outsl
sbb
xchg
leave
fidivrs
sbbb
test
xchg
add
sub
lret
mov
push
push
mov
or
mov
add
xor
mov
lods
subb
cltd
idivl
add
mov
cmp
xchg
mov
inc
jbe
inc
loope
call
out
in
shlb
xor
lock
test
pusha
or
enter
add
sbb
sub
sub
cmpb
lea
add
cmp
les
mov
scas
dec
jbe
outsb
subb
out
fildl
cli
js
lock
cmc
lret
imul
mov
mov
xchg
dec
or
dec
lret
xor
pop
jns
inc
push
ljmp
and
into
lds
jb
mov
jo
sbb
ret
test
jnp
loope
or
push
leave
cmp
stos
pop
xor
andb
cwtl
cmc
xchg
aaa
dec
hlt
or
in
movsl
dec
mov
out
jg
jg
or
idivb
dec
xchg
in
sub
test
testb
adc
mov
insb
sub
jge
fisttpll
mov
cltd
or
dec
lahf
cs
mov
sub
xchg
iret
xchg
cmpsl
jae
addr16
dec
stos
mov
lahf
dec
cmp
fs
pushf
adc
sub
lods
out
xchg
in
std
in
adc
outsb
pop
and
mov
jnp
iret
adc
xlat
sti
nop
pop
jmp
jmp
cmpsl
push
mov
mov
mov
test
ds
cld
iret
loop
shlb
xor
mov
adc
jno
inc
mov
and
cmc
subb
xchg
sahf
fsubrp
push
cmpsb
add
mov
enter
call
insb
add
mov
push
or
and
sbb
jl
incl
adc
inc
nop
rcl
mov
or
cmc
orl
lcall
mov
sub
inc
mov
xlat
mov
push
mov
push
jge
cmpsb
adc
out
jl
les
pop
insb
inc
fisubrl
aas
lods
pop
jbe
hlt
lods
cmp
lock
mov
mov
outsl
sub
push
adc
jnp
adc
testl
outsl
xor
sbb
int3
pop
sub
mov
int3
lods
inc
xchg
xor
sbb
sub
pop
outsl
jp
pop
and
add
bound
and
jl
xor
fmull
ljmp
push
or
mov
in
mov
fwait
jp
cmp
shlb
jge
and
cmp
out
cltd
cmp
sub
jno
fsts
cli
sbb
sbb
xchg
dec
out
popf
cmp
dec
mov
add
sti
mov
fs
jp
adc
mov
cmp
cmp
add
std
outsb
mov
das
bound
shll
pusha
or
and
cli
inc
stos
imul
in
scas
rcl
mov
push
push
scas
mov
rcll
add
xchg
cmp
mov
movsl
xchg
stos
mov
ret
test
mov
fbstp
xchg
enterw
out
rcll
movsb
push
xchg
jns
inc
mov
and
push
int
inc
mov
pop
lds
xchg
pop
movsl
push
pop
ret
sub
cmc
lock
xor
lar
fldcw
jg
cmp
aam
pop
imul
push
inc
nop
iret
cmp
add
sahf
mov
cmp
add
mov
movsb
das
xchg
jns
pop
jge
ljmp
stos
lods
xchg
out
adc
inc
cmpsl
dec
add
addb
es
repnz
inc
pop
ljmp
jge
push
dec
add
popa
push
lret
mov
push
or
push
sub
jmp
andl
cld
xchg
cmpsl
mov
add
sbb
in
jb
sbb
mov
cmc
nop
sti
mov
push
std
push
adc
mov
scas
adc
sbb
sbb
push
push
prefetch
cmp
mov
jle
xchg
push
pop
dec
xor
pop
add
in
sub
push
in
mov
aaa
xor
mov
ficoml
jnp
loopne
out
fs
push
sbb
loopw
inc
sub
xchg
xor
shll
out
push
adc
pop
pusha
mov
xor
cmp
dec
and
ret
clc
mov
rorb
add
dec
mov
jecxz
pop
bound
push
lcall
mov
mov
add
pop
incb
xor
sbb
cltd
xor
les
push
push
daa
mov
dec
cmp
cli
add
push
ljmp
scas
mov
aam
loope
push
xchg
jnp
stos
sbb
pop
lcall
stos
jb
lods
adc
mov
addb
push
inc
push
cmpsl
mov
hlt
and
mov
xchg
int
ret
ja
push
int
adcl
int3
dec
or
adc
shr
imul
pop
mov
popa
ror
dec
lods
fimuls
addl
insl
jecxz
insb
scas
dec
int3
pusha
mov
or
add
sbb
push
mov
cmc
or
ds
jg
je
fdiv
cwtl
add
cmpsl
aas
adc
cmp
push
mov
mov
cmp
test
cmp
or
jecxz
and
insl
mov
insl
fwait
and
shlb
sub
iret
mov
push
push
ljmp
jb
xchg
xor
and
inc
imul
add
icebp
adc
mov
shlb
es
imul
adc
movsl
mov
test
out
js
loope
iret
mov
scas
dec
hlt
xchg
mov
mov
sbb
arpl
mov
fwait
cli
inc
lock
cmpl
mov
pop
xor
jnp
inc
or
mov
arpl
stc
xchg
adc
or
sub
pop
sbb
xchg
addr16
popf
push
cli
and
outsl
mov
add
lcall
dec
icebp
mov
leave
jmp
sbb
mov
inc
movsl
add
pop
jne
pop
or
ja
and
xor
jbe
das
lea
and
fs
repnz
sbb
mov
int
or
mov
fcompl
cmp
dec
push
pop
mov
cmc
callw
xchg
and
adc
cmpsb
xchg
lcall
pop
mov
cli
sbb
outsb
add
in
outsb
ljmp
push
add
dec
mov
dec
stos
add
push
outsb
mov
sbbb
mov
or
xchg
mov
pop
cltd
xchg
int3
pop
mov
fld
fidivs
test
mov
fmuls
cmp
pop
mov
sbb
dec
jno
push
xchg
lcall
push
fs
pusha
mov
arpl
scas
mov
imul
and
xchg
popw
iret
jg
xchg
sub
in
fidivl
cmpsl
xchg
inc
leave
ret
loop
std
in
xor
push
pop
xor
cmpsl
xchg
fcoml
cmp
mov
pop
sbb
jne
int3
frstor
icebp
stos
mov
out
in
mov
test
inc
int
push
test
pop
mov
push
data16
mov
sub
sub
mov
or
rclb
pop
ret
push
xchg
mov
jmp
les
mov
or
pop
jbe
movsl
or
xchg
subl
jmp
adc
mov
popf
fldt
or
xor
mov
clc
sahf
mov
push
ja
sub
sarb
lods
dec
mulb
lods
out
add
cmpsb
jb
lcall
or
inc
mov
push
mov
add
adc
mov
adc
sub
fdivl
adc
adc
stos
fisubrl
loopne
std
xor
addr16
stos
ror
adc
push
fucomip
fisubrl
je
add
sub
push
pop
dec
add
pop
int
sub
dec
xchg
and
out
jno
jl
sbb
insl
int3
fbld
xor
insb
cli
out
nop
pop
jno
lods
inc
or
pop
jnp
inc
inc
pop
dec
imul
mov
add
jno
lret
or
clc
in
jne
push
fiadds
cmpsl
daa
out
hlt
sbb
or
mov
loopne
or
jle
sti
cmp
mov
xchg
je
enter
stc
push
mov
mov
je
fidivrl
adc
mov
adc
mov
fwait
in
insb
idiv
gs
lret
sbb
mov
sbb
and
pop
ja
fnstcw
add
mov
mov
and
dec
rol
push
cmp
mov
inc
push
lret
mul
cmp
inc
sahf
fyl2xp1
repnz
fwait
jnp
cmc
ss
in
lcall
pop
nop
inc
mov
loopne
xor
test
sbb
stos
cs
or
pop
or
add
nop
out
xlat
into
xchg
dec
dec
sub
int
inc
iret
pop
dec
or
lahf
cld
cmp
pop
cmp
cltd
out
xor
pop
fs
ret
or
push
repz
push
cwtl
pop
in
enter
xchg
fisubl
jge
mov
sbb
cmpl
popl
dec
mov
in
shr
sub
inc
in
in
sarb
mov
movsl
in
pop
inc
cmp
insl
andb
pop
or
ret
hlt
and
push
push
insb
jb
mov
fcomi
pusha
or
add
mov
dec
cmp
sbb
adc
movsb
lods
lret
scas
js
arpl
pusha
jg
mov
add
sbb
xchg
push
mov
inc
mov
flds
mov
andl
arpl
outsb
pop
test
loope
bound
mov
xor
in
mov
cltd
out
je
int3
pop
lock
and
js
je
repnz
or
shrb
sub
sbb
outsb
xchg
xchg
test
sbb
pop
dec
or
sti
inc
fstpt
pop
adc
jnp
mov
mov
hlt
insb
adc
in
xchg
and
int
leave
pusha
lock
gs
pop
xchg
scas
mov
dec
int
push
add
cmp
dec
insl
xchg
out
fstps
sbb
add
pop
xor
pop
mov
inc
mov
pop
or
cmpsb
mov
cmp
push
pop
mov
xor
loopne
lods
dec
fcmovne
pop
xchg
jp
in
and
inc
js
rorl
rcl
jl
sbb
out
mov
jo
jl
stos
mov
push
push
and
pusha
mov
and
mov
lds
push
or
mov
fwait
std
dec
cmpsl
sbb
cmpsl
jae
push
ret
push
xor
dec
mov
mov
add
cmp
jmp
inc
jmp
mov
mov
iret
in
adc
adc
mov
cmp
inc
sbb
add
add
in
sub
add
xchg
cmp
xor
xchg
mov
pushf
push
es
popa
stc
mov
cmp
and
push
adc
lea
mov
cwtl
sahf
dec
movsb
xchg
test
fs
fnstsw
inc
cmp
push
imul
adc
xor
push
fwait
cmp
jmp
push
jmp
jmp
push
mov
pop
xor
jp
movsl
rolb
rcll
repz
sahf
mov
jbe
into
sbb
repnz
and
shr
sbb
cmp
lahf
or
push
stos
je
test
cmp
push
mov
in
sub
enter
mov
adc
pop
inc
fldl
or
mov
shr
mov
ds
imul
or
shrl
imul
stos
pop
lds
mov
fwait
lret
pop
pushf
and
mov
pusha
xchg
loopne
subl
pop
push
stos
jge
sbb
popf
pushf
pop
sbb
loopne
sub
sub
xor
das
cld
mov
mov
inc
sti
mov
push
pushf
out
jnp
push
inc
mov
cmpsb
pop
fwait
add
insl
lds
pop
outsb
out
or
stc
fcomi
and
jl
mov
lret
push
fmuls
sub
mov
lds
test
xlat
ror
push
into
mov
in
ds
add
or
cmpb
ja
cmp
push
adc
add
andb
sbb
pop
push
ret
sbb
jmp
hlt
xchg
call
pop
adc
insl
cwtl
cmp
test
aad
es
dec
adcb
cmpsl
mov
cltd
in
push
push
jge
pop
rolb
push
int3
mov
sti
fldl
jle
pop
stc
aas
das
add
pop
cmp
imulb
add
pop
lret
cmpsb
inc
add
lock
add
std
xchg
call
fs
lds
mov
test
jl
outsl
fwait
cmc
xchg
stos
idivl
pop
ret
js
pop
cmpb
test
cwtl
outsb
mov
das
daa
lds
xchg
fst
or
das
pop
lock
or
pusha
in
out
inc
stos
inc
or
jmp
out
stos
es
hlt
cmp
fildl
fucomi
outsl
mov
pop
add
fcoml
lods
mov
jns
mov
lods
cwtl
movsl
cmp
repz
add
stc
pop
loopne
cltd
aad
mov
mov
jmp
pushf
mov
mov
leave
xchg
sbb
dec
cmp
nop
jmp
add
inc
push
cmp
push
cmp
cmpsl
subl
cli
mov
or
ret
cli
das
clc
leave
inc
movsl
mov
imul
mov
pop
push
repnz
adc
cli
xor
in
xor
int3
adc
inc
pusha
xchg
and
out
mov
sub
xchg
inc
jo
cmp
jmp
ret
jl
sbb
mov
pusha
xor
enter
repnz
sahf
ljmp
mov
js
mov
mov
mov
stos
fnstcw
mull
jmp
pop
add
xchg
xchg
pushf
jle
js
lea
cmp
cmpsl
mov
pop
xchg
enter
xor
packssdw
cmp
sbb
gs
inc
jnp
test
add
sbb
aaa
popa
ficompl
cmc
and
nop
dec
xor
in
imul
ljmp
test
mov
add
cmp
mov
aas
bound
push
xor
push
mov
or
lods
imulb
pop
inc
test
push
and
pop
sbb
add
lea
xchg
push
or
jecxz
mov
fistpll
or
cmpsb
data16
inc
cwtl
xchg
lods
out
mov
jecxz
movsl
push
add
sbb
clc
enter
repz
cmpsb
xor
fwait
jns
push
mov
lods
inc
xor
push
adc
popf
lods
jo
inc
test
inc
mov
ja
das
pop
stc
push
rcll
xchg
inc
or
sbb
ret
cmc
jns
sub
xchg
out
enter
fists
faddp
and
pop
jo
inc
aas
and
sbb
aam
in
sbb
jp
les
fwait
divl
notl
adc
and
imul
inc
outsl
xor
in
and
incl
scas
xor
push
inc
in
pusha
sahf
lret
data16
sarl
jge
jae
jle
and
pop
lods
cmp
das
jb
cwtl
int3
xchg
out
std
xchg
xor
fisubrs
repz
xchg
add
sub
pop
fnstcw
pusha
std
movsb
push
cltd
sti
inc
and
inc
push
pop
add
roll
ret
arpl
or
lods
mov
mov
xor
dec
xchg
arpl
aas
lahf
popl
sahf
in
adc
shr
mov
or
scas
dec
xchg
xchg
and
out
lods
lods
mov
gs
add
cmp
pop
pop
xchg
arpl
mov
xor
mov
enter
popf
inc
and
repnz
movsl
in
push
dec
ret
test
inc
pop
lret
jne
and
out
test
mov
ret
ds
movsb
inc
int
jl
and
jge
mov
mov
and
sub
je
insb
cwtl
clc
aam
testl
fldl
scas
shrb
loop
enter
clc
es
and
mov
mov
jmp
or
inc
add
mov
in
clc
jbe
dec
stos
xchg
sti
mov
mov
jbe
sub
cmp
jp
out
or
cmpsb
movb
les
adc
mov
or
lcall
cmpsl
popf
pop
mov
mov
aaa
sub
push
sahf
or
sbbl
or
inc
into
imull
cmp
pop
loope
stos
or
imul
adc
add
cmc
adc
aam
add
xor
lds
sub
dec
lods
divl
and
mull
jmp
in
loopne
andl
sbb
out
sbb
popf
ja
add
insl
add
arpl
rclb
in
daa
cmp
arpl
mov
mov
dec
mov
jle
pop
mov
sbb
jae
pop
dec
rcl
add
cld
dec
adc
fwait
sbb
movsb
xchg
push
sbb
push
jmp
fs
jl
jno
call
mov
insb
das
clc
and
sbb
and
cs
mov
sbb
add
mov
mul
std
imul
test
std
inc
xor
add
dec
call
jmp
mov
sub
or
out
scas
imul
push
xor
push
dec
xlat
dec
add
jo
jl
dec
call
cs
jne
addb
mov
push
sbbl
xor
es
push
aam
test
andb
push
push
jp
dec
icebp
ss
pop
stos
out
or
addr16
cmp
mov
insl
adc
mov
xor
adc
adc
mov
loope
aaa
dec
jae
push
push
test
clc
or
dec
xrelease
and
std
cmp
mov
ljmp
lock
pop
leave
fcompl
adc
pop
loopne
dec
ja
add
dec
xchg
rol
xchg
mov
pusha
or
xchg
or
nop
lret
in
cmp
mov
dec
sub
xchg
testl
add
aas
sahf
push
movsb
and
stos
int
lret
aaa
adc
jno
add
mov
cmp
in
mov
sub
popa
pop
mov
mov
inc
push
push
sbb
movsl
test
jmp
jg
scas
add
scas
pop
xor
imul
or
jns
push
jno
andb
cmp
ja
xor
jno
js
mov
cmp
sbb
je
hlt
cmpsb
out
push
movsb
insb
mov
cmovb
mov
inc
inc
shlb
jle
add
mov
xchg
mov
push
sahf
lret
je
test
xor
or
add
jmp
xor
and
nop
cmpsb
lcall
push
jecxz
push
negl
dec
add
les
lret
fcomps
add
rcrb
push
xor
stos
push
push
enter
dec
test
dec
repz
aas
mov
mov
ret
dec
sbb
inc
or
push
lds
mov
pop
notl
pop
mov
push
in
lret
xor
in
mov
dec
das
lcall
pop
inc
sub
aad
xchg
icebp
rolb
flds
fldcw
sbb
shll
jo
fwait
cmp
jo
xor
std
add
out
adc
push
add
not
mov
jbe
push
cmpsb
mov
adc
push
int3
out
mov
icebp
mulb
shl
adc
and
mov
mov
pop
mov
and
sbb
xchg
inc
hlt
movsl
xchg
jg
adc
dec
cmp
sbb
sbb
sub
jnp
fwait
test
dec
cmpsb
fisttpll
cwtl
dec
mov
jge
jns
push
xor
push
nop
inc
ljmp
jno
imul
mov
aad
ret
pop
imul
push
out
rclb
sbb
das
dec
mov
mov
mov
or
out
dec
pop
insl
jge
shll
jae
adc
pop
mov
mov
mov
add
aas
ss
idivl
into
add
decb
xor
or
sub
loop
into
outsb
in
sub
adc
cmpsb
add
lahf
xorb
daa
cmp
out
jge
bound
mov
inc
scas
je
fcmovb
inc
es
xor
stc
cmp
int3
jecxz
xchg
xor
fisubl
xchg
jl
aad
cli
or
popa
cmpsb
in
addr16
es
les
dec
lret
jbe
aas
add
cmp
mov
into
imul
out
movsb
stos
scas
clc
loope
decl
xchg
push
mull
dec
cmp
cmpsl
lods
pop
ret
and
adc
mov
dec
jecxz
leave
adc
inc
fcoms
fisubs
sub
or
stos
hlt
or
mov
hlt
pushf
pop
shlb
in
or
lods
xor
data16
xlat
outsl
sarb
jle
mov
test
jl
aaa
call
xchg
mov
shrl
scas
rcll
and
sub
ret
addr16
dec
movsb
inc
daa
test
loopne
mov
fadds
icebp
xlat
adc
sub
stos
push
push
fcoml
sbb
stc
mov
into
pusha
sbb
dec
movsb
pop
push
es
xor
mov
mov
dec
sub
adc
mov
cmp
mov
test
jle
xchg
add
out
test
lock
jo
stos
sti
mov
pop
es
shl
shr
inc
pop
push
add
mov
ja
sub
xor
xor
push
jnp
cmp
or
imul
add
pop
inc
mov
push
jle
sub
lcall
dec
push
xchg
leave
mov
adc
jg
outsl
in
mov
cmc
arpl
andl
dec
retw
bound
jo
adc
and
ds
and
mov
lock
into
dec
jmp
fs
cli
add
add
call
cmp
mov
ljmp
pop
aam
mov
mov
mov
fsubs
fcoms
aad
push
inc
daa
mov
inc
ja
push
movsl
sbbl
adc
in
jmp
mov
lcall
into
fdiv
inc
in
mov
inc
test
lods
or
xor
mov
mov
test
jp
push
fnstcw
mov
and
sbb
inc
notb
jne
mov
inc
mov
out
in
cld
fistpl
mov
roll
icebp
xchg
dec
test
inc
dec
push
movsb
xorl
push
add
test
jne
ds
out
int
pop
incb
inc
ljmp
xor
push
push
mov
and
mov
mov
outsb
xchg
mov
rclb
inc
add
xor
icebp
stos
push
jl
push
cmpsl
push
in
lds
pop
jo
inc
inc
cmp
pusha
push
loop
hlt
jae
push
mov
cmp
xor
push
pop
push
push
repnz
imul
clc
bound
mov
cwtl
icebp
mov
xchg
mov
sub
sahf
std
stos
sahf
and
cs
loopne
adc
lret
jecxz
xorl
pop
adc
sbb
xchg
std
adc
sbb
iret
nop
inc
mov
sbb
inc
push
inc
std
or
dec
pop
sbb
leave
sbb
xorl
jl
sub
sbb
sbb
push
xorl
cmpsb
in
push
xor
cwtl
repz
pop
jb
mov
xor
mov
and
clc
ja
sub
ret
dec
daa
sub
xor
xor
mov
push
cld
ret
mov
cmpl
fdiv
adc
fldcw
leave
sti
scas
mov
ss
aaa
adc
mov
scas
movsl
mov
pop
outsl
insb
adc
scas
xor
jae
insb
je
xchg
push
ds
pop
push
ret
push
adc
pushf
stos
push
or
insb
mov
dec
out
mov
pop
lea
xor
cmp
add
sbbl
cmp
daa
sbb
pop
cmp
xchg
repz
adc
adc
iret
in
xchg
mov
and
add
clc
in
ja
mov
movsb
inc
inc
ret
pop
dec
hlt
sbb
adc
dec
lahf
je
imul
das
pop
mov
in
imul
cmpsb
sub
sarl
mov
push
inc
inc
adc
sbb
mov
mov
icebp
sub
pop
push
and
pop
sbb
cwtl
arpl
fisttpll
shrb
sbb
inc
add
pop
repz
jp
mov
inc
popf
shrb
dec
mov
sbb
imul
imul
mov
aam
jmp
dec
cmc
jo
pop
dec
loopne
pop
inc
jne
das
xchg
aas
sub
adc
dec
ss
pop
or
aam
stc
or
push
aas
ss
add
mov
ret
jl
jle
mov
jbe
mov
mov
sbb
lock
mov
das
sub
jnp
dec
add
lods
pop
sbb
sbb
xor
dec
push
into
out
pop
pop
lock
and
adc
fwait
loopne
or
mov
rcrl
data16
push
pop
daa
dec
stos
pop
mov
mov
std
shll
sbb
ffreep
ret
lcall
loop
inc
test
jmp
ror
fiaddl
popf
jecxz
cmpsb
mov
pushf
stc
and
dec
outsb
es
mov
jl
add
mov
data16
jns
loopnew
aas
and
lret
and
in
cltd
xlat
adc
jae
loope
xchg
testb
insb
inc
jl
inc
xchg
aad
dec
pop
icebp
push
and
sbbb
std
outsl
xor
pop
jbe
std
cwtl
mov
aaa
cmp
std
mov
pushf
xchg
xor
das
jo
mov
mov
es
movsb
pop
lcall
inc
jg
stos
ljmp
in
sub
cmpsl
in
and
std
add
sub
ret
cmp
adc
dec
outsb
fsqrt
inc
xchg
xchg
sub
sahf
out
insb
rcll
ret
fdivr
ret
pop
dec
cs
cmpsb
push
push
dec
sbb
sarl
stc
test
sbb
jg
push
cmpsb
xchg
xor
cmp
icebp
mov
das
jo
rcrb
jo
arpl
jle
jns
movsl
in
testl
add
in
xor
cli
lea
scas
pop
inc
add
add
sbb
fbld
push
jb
pushf
dec
jge
or
sub
out
mov
insl
pusha
fiaddl
inc
xchg
daa
ficomps
test
mov
out
xorl
aam
shl
hlt
jp
mov
jge
sub
sbb
xor
daa
push
mov
mov
and
and
sub
fmull
jb
test
sub
rorb
xchg
arpl
mov
mov
push
or
icebp
lcall
fbstp
loopne
jmp
sub
iret
mov
adc
lea
add
inc
and
inc
lds
cmpsl
xchg
mov
notb
stos
out
mov
es
pop
ret
cmc
and
jp
loope
xchg
xor
popa
mov
outsb
pop
sub
mov
xchg
pop
loope
pop
bound
jecxz
sub
mov
xchg
xchg
arpl
repnz
mov
xlat
add
push
push
lahf
stc
jae
out
iret
nop
jge
add
bound
add
dec
aad
out
in
xor
push
in
mov
push
arpl
pop
js
mov
hlt
aad
pop
cs
out
xchg
adc
push
jge
mov
cmpsl
cmc
pop
in
mov
add
jo
push
enter
push
inc
int
xor
xchg
mov
and
or
rcll
push
pop
imul
in
xor
jnp
lret
aam
aas
lret
xchg
and
cld
cmp
test
dec
iret
mov
jbe
scas
add
xor
sbb
out
add
cmp
add
out
add
or
mov
fs
iret
rclb
push
dec
xor
addb
sti
inc
popf
data16
pop
push
insb
cmpsl
or
leave
ss
inc
imulb
lcall
testb
jae
and
test
sbb
repnz
xor
mov
sbb
rcrl
outsb
sahf
pop
push
push
popf
mov
jno
mov
push
es
jno
cmp
lods
test
es
popa
inc
das
or
adc
sbb
jmp
push
push
jo
sti
aaa
test
in
sub
sbb
je
adc
loope
mov
mov
push
jae
in
lahf
je
xor
outsl
sbb
mov
aad
push
push
ljmp
and
ret
sbb
xchg
or
mov
daa
dec
mov
cmp
negl
sub
pop
mov
push
xchg
inc
xchg
in
push
stos
test
fsubs
ds
ds
lcall
or
xchg
or
sub
repz
test
add
shr
ret
jne
sub
stos
roll
inc
sbb
fs
sahf
sub
push
and
xor
sub
filds
mov
aas
cs
lcall
mov
aam
xor
stc
mov
sbb
push
and
enter
out
xor
mov
push
push
int3
xor
test
mov
adc
dec
inc
mov
jge
cmp
jl
adc
inc
mov
add
mov
stos
and
into
inc
iret
in
jp
push
adc
repnz
das
das
jnp
outsl
dec
mov
arpl
dec
adc
push
jae
cltd
push
pushf
jmp
out
sub
mov
add
add
lods
and
inc
push
dec
fisttps
pushl
cmp
push
dec
and
cmp
mov
ds
adc
addr16
das
addb
adc
jmp
test
fnstcw
fdivrs
push
mov
clc
cmp
xor
add
mov
and
sub
sbb
mov
out
mov
lods
and
push
xor
repz
js
fildl
jge
or
inc
inc
xor
adc
out
pop
out
add
adc
notl
lahf
sbb
shlb
out
cmp
jb
dec
sub
jge
lea
pop
int3
insl
cmc
dec
insl
mov
dec
test
mov
loope
cltd
sahf
xchg
adc
mov
add
ret
or
cmp
sub
mov
inc
adc
pop
sub
pop
cld
loop
pop
cmp
mov
fcomps
and
mov
cwtl
stc
mov
lods
jmp
rclb
or
aaa
mov
cs
mov
pusha
mov
pop
fidivrs
mov
dec
mov
jle
sbb
adc
cmpl
dec
dec
pop
pusha
adc
adc
cwtl
mov
mov
jl
push
aam
jns
imul
jns
out
mov
ss
xor
fmuls
aam
sti
pop
jns
das
ss
lahf
cmp
adc
out
enter
add
sub
mov
int3
je
imul
or
mov
adc
lods
lcall
incl
mov
jge
sbb
roll
add
mov
sbb
inc
xor
add
out
rcl
ret
push
adc
inc
pop
cltd
lea
scas
insl
fmul
or
mov
sub
cmp
mov
fisubs
inc
mov
daa
ljmp
lods
bound
or
mov
xor
sbb
add
mov
sub
int3
jp
jge
jbe
add
xchg
add
push
call
xor
test
mov
sub
xchg
xor
cmp
pop
sarb
push
iret
xchg
mov
lock
pop
push
or
push
add
add
mov
lcall
fwait
push
mov
gs
ja
idivb
sub
jne
sbb
cltd
ret
cld
dec
push
in
push
or
xchg
gs
sub
xor
stos
pop
mov
and
push
fidivrl
and
rcrb
ja
adc
shlb
mov
mov
ds
dec
jmp
jo
into
cmp
inc
jne
mov
aad
lods
pop
test
or
xchg
out
fs
or
xorb
ds
add
cmp
inc
arpl
js
push
loop
add
push
cmp
push
int3
aas
pop
jge
jmp
or
xchg
and
xor
cmp
mov
add
jge
rcrl
push
repnz
cmovge
adc
in
push
clc
std
minps
in
sub
icebp
ss
push
das
in
add
mov
icebp
mov
hlt
adc
enter
and
stos
popa
subb
rcrl
inc
add
es
pop
xor
mov
mov
jae
sti
int3
push
sub
rorb
lahf
clc
pop
icebp
add
loope
and
fs
pop
ss
mov
cmc
cmp
push
dec
lahf
mov
mov
jmp
cmp
mov
movsb
cmpsl
ret
push
shlb
jne
std
jmp
lcall
in
lds
cmpsb
pop
fdivl
or
add
pop
cmp
enter
push
push
sub
and
scas
loopne
sbb
outsb
pop
insl
xchg
mov
add
in
bound
pop
pop
pop
jmp
insl
adc
lods
mov
pop
test
arpl
call
pop
nop
dec
mov
push
sub
and
mov
dec
adc
int
pop
stos
movsl
and
xchg
pop
jae
ss
in
push
add
dec
inc
mov
loopne
aas
call
xchg
inc
fwait
jo
sbb
lds
iret
sub
xchg
mov
xor
insl
push
pop
out
daa
xchg
push
mov
popa
dec
icebp
loope
xchg
leave
sbb
push
leave
icebp
notb
inc
jmp
sbb
mov
ljmp
push
btc
sub
dec
enter
mov
in
pop
jae
mov
shll
pop
cmp
leave
pop
mov
xchg
dec
push
xor
incl
pusha
cmp
and
xor
add
lea
pop
hlt
push
xchg
mov
inc
shlb
cltd
add
stos
inc
xchg
roll
ljmp
sar
in
fstps
add
cld
iret
sbb
lods
out
cs
sub
cmc
rol
lret
daa
push
pop
mov
inc
mov
and
xchg
adc
or
loop
inc
iret
rcrb
mov
inc
mov
jns,pn
mov
mov
aaa
pusha
or
inc
ds
mov
les
das
mov
clc
and
aam
push
and
rorb
xlat
cmp
mov
jne
and
mov
mov
loopne
mov
call
ret
popl
cs
xor
lds
adc
cs
sbb
ja
stos
xchg
mov
xchg
dec
mov
out
imul
int
test
jne
loopne
cmp
rcrl
gs
adc
mov
mov
pop
loope
cmp
lret
add
dec
pop
test
bound
lods
clc
fsubs
inc
mov
lock
insb
pop
pop
push
fimuls
aas
out
test
pop
push
icebp
inc
lcall
out
jecxz
fbld
adc
ds
jb
test
outsl
lcall
jae
mov
pop
sub
cwtl
test
push
cmp
scas
adc
or
push
in
ret
mov
jo
insl
fmul
push
test
cmpsl
add
enter
mov
ja
xchg
ret
daa
int
addr16
in
jb
xor
xchg
sahf
mov
push
jmp
pop
dec
data16
std
lret
mov
popa
outsb
add
xchg
add
shll
pop
or
push
das
lsl
jbe
cmp
cltd
mov
jbe
pop
mov
jmp
test
pop
scas
test
cmp
cmpsl
rcrb
cmpsl
popf
enter
mov
cmp
mov
shrl
mov
js
call
lcall
aaa
scas
rcrl
sarl
push
lds
mov
pop
aaa
mov
xchg
jp
imul
in
mov
xchg
or
mov
out
and
jbe
ljmp
add
dec
bound
mov
sub
fld1
fcoml
insl
pop
sbb
filds
sub
mov
mov
inc
pusha
gs
aas
pop
cli
fs
out
mov
push
cld
xchg
dec
jnp
xor
shlb
add
cs
mov
ror
movsb
xchg
inc
sti
jne
inc
repnz
xor
movsb
call
jg
dec
or
dec
rcrl
pushf
xchg
imul
addl
dec
fucomi
divl
xorb
sbb
jge
sub
aas
dec
iret
mov
pop
fisubs
nop
inc
insl
repz
pop
mov
xor
cli
outsl
sub
mov
jns
mov
aas
lock
pop
xor
repnz
inc
dec
push
repz
movsb
int
add
lock
or
dec
popa
or
cmp
nop
gs
push
je
lret
xor
clc
in
jnp
hlt
sub
cmc
sub
test
xchg
jae
lret
pop
shr
mov
add
outsb
push
call
sbb
movsb
cs
aam
loop
js
dec
xlat
fdiv
test
add
dec
push
mov
xchg
ja
sarl
movsl
cmp
in
or
sub
or
push
in
jae
js
or
fidivrl
xor
lock
adc
jmp
dec
or
das
add
mov
sbb
sbb
adc
jnp
or
and
jno
scas
popf
test
push
jo
cs
daa
lret
into
lods
lret
add
xchg
xchg
imul
xchg
shll
push
pop
xor
fisubrs
xor
pavgw
ljmp
out
in
loope
popf
xchg
jo
fldl
imul
jle
fwait
ret
and
dec
lcall
and
in
cmp
and
jle
shrb
inc
dec
stc
call
xlat
pop
jnp
sbb
rcll
mov
scas
jmp
xchg
jge
ja
push
stos
ja
pop
sbb
test
sbb
aas
xchg
lds
repnz
lock
lea
dec
es
inc
loope
lret
jmp
mov
movlps
jle
inc
or
sbb
cltd
push
repnz
popf
in
mov
mov
out
test
ds
adc
cmp
cmc
ret
js
in
ss
gs
or
pop
test
je
xchg
sub
rorl
push
jecxz
inc
jbe
add
jmp
sub
sub
jno
dec
imul
fildl
pop
out
jo
jge
insb
or
outsb
xor
lahf
dec
sub
jmp
cli
mov
into
sbb
sbb
outsl
or
out
loopne
adc
jp
mov
cmp
stos
fwait
lods
mov
pop
repz
test
jle
push
insl
push
mov
jnp
dec
loope
out
adc
pop
movsl
ds
sub
test
loop
icebp
or
dec
fidivs
inc
pusha
test
mov
jo
fldl
mov
clc
add
xchg
insb
popa
rol
jl
loope
inc
and
add
mov
mov
das
pop
xchg
in
or
lods
into
sbb
outsl
push
xorl
xlat
dec
mov
cli
shrl
push
dec
int
mov
pop
or
mov
daa
jg
xor
jne
sarb
in
cld
pop
push
add
inc
sbb
add
out
test
int
push
pop
jp
push
adc
es
insl
and
das
sub
adc
push
jbe
iret
xlat
xchg
mov
xlat
or
adc
xor
das
mov
pop
popa
fldt
mov
sbb
outsb
inc
adc
ret
repnz
xor
cmpsb
clc
mov
xor
xchg
out
push
cwtl
mov
movsb
xchg
push
jb
mov
inc
cmp
pop
movsb
in
adc
mov
xor
nop
push
xchg
lret
jg
push
lahf
sub
icebp
inc
push
cs
pop
std
jmp
daa
mov
xchg
cwtl
inc
xchg
test
sub
cmpsb
rclb
loope
jo
pusha
loope
imul
mov
pop
cli
mov
daa
push
insb
dec
stos
lret
push
jmp
pop
mov
mov
out
cmp
fldl
or
dec
mov
push
mov
dec
pop
pop
mov
xchg
xchg
jecxz
mov
cltd
insb
add
mov
and
cwtl
pop
push
gs
sarb
inc
lods
test
mull
inc
xchg
int3
shr
jae
push
jbe
fsubrs
addr16
in
mov
add
mov
or
mov
addr16
filds
stc
div
xchg
fisubrl
insl
jle
add
loope
sub
inc
ljmp
fstps
insl
ret
pop
insb
xchg
push
add
lret
pop
stc
je
stc
mov
rorl
dec
movsb
adc
cwtl
mov
stos
push
mov
insl
fisttpll
inc
or
ds
int
rolb
fistpll
outsb
sahf
iret
mov
je
test
call
aam
andl
lods
flds
ds
jg
adcl
dec
outsl
stos
xchg
cmp
ljmp
sbb
xor
xor
inc
push
fisttpll
out
pusha
jp
loopne
lock
imul
cmp
arpl
mov
jno
ficompl
adc
notb
out
xor
rclb
xor
adc
dec
mov
test
inc
lods
mov
lea
mov
mov
add
ds
js
cvtdq2ps
ljmp
leave
dec
add
lds
stos
jle
adc
add
xchg
cmp
dec
pop
cmc
dec
lret
sbb
loopne
sbb
mov
in
or
arpl
push
arpl
adc
imul
test
jo
test
ljmp
imul
ds
loope
orb
mov
out
xchg
and
push
stos
xchg
xchg
jecxz
and
and
xchg
inc
lret
push
aam
or
outsb
mov
pusha
sub
lret
scas
fcmovu
add
sub
sti
sbb
daa
fsubp
cmp
rorl
aad
roll
out
shl
inc
mov
roll
lea
sub
fcoml
lret
push
imul
mul
jge
sub
cltd
stos
cli
or
mov
xchg
pop
jp
xor
xchg
jns
pop
rcl
incl
add
inc
cs
cwtl
xchg
dec
mov
mov
cmp
movsl
mov
arpl
icebp
xchg
pushf
ud2
jno
mov
gs
movsb
mov
loope
out
test
xor
adc
mov
movsl
xchg
loopne
cli
cld
xor
xor
mov
pop
mov
dec
dec
adc
pop
aad
in
ret
xor
mov
fldcw
xor
cmp
sbb
dec
insl
aaa
mov
jl
mov
outsl
loope
and
rol
mov
test
out
loope
in
stos
fdivp
dec
xor
jg
push
xchg
push
pushf
cmp
mov
xchg
mov
mov
or
mov
out
aam
pop
lcallw
in
dec
push
jmp
ljmp
xchg
in
popf
mov
fstps
sbb
and
stos
outsb
mov
jne
fs
in
lret
aam
xchg
shrl
data16
mov
test
and
outsb
clc
pop
push
sub
rcrl
or
pop
mov
mov
icebp
fdivrl
mov
or
jo
das
test
cmp
push
sti
ljmp
push
sbb
dec
inc
je
mov
adcb
sbb
adc
jmp
dec
std
adc
ror
lret
sbb
inc
ja
lret
xor
outsb
cli
pop
add
cmp
pop
pop
adc
filds
push
cmp
mov
out
sbb
fs
mov
sub
outsb
outsb
adc
fs
insl
xchg
lahf
cmp
push
or
sbb
push
lods
call
dec
cltd
rcrb
mov
lea
dec
cs
dec
inc
cmc
in
aas
cmp
jno
cmp
sbb
cli
mov
ss
adcb
scas
mov
mov
inc
mov
das
dec
out
hlt
push
jmp
and
mov
sbb
int3
pusha
mov
sub
fwait
mov
imul
bnd
into
test
jne
or
scas
mov
sub
mov
movsb
lret
fldz
sub
rcl
jae
pop
dec
mov
out
int3
shrd
pop
in
das
movsb
pop
inc
fistpll
ss
or
inc
pop
daa
push
mov
test
or
mov
mov
xchg
loop
jns
jge
push
xchg
mov
sbb
xchg
ret
push
shl
cmp
xchg
lahf
dec
pcmpgtw
cmc
mov
pop
mov
lods
movsb
xor
dec
inc
push
mov
sub
idiv
push
test
inc
jbe
out
inc
lahf
mov
test
sbbb
stc
pop
mov
add
test
push
rolb
out
mov
pop
mov
add
push
mov
xchg
or
mov
stos
mov
jno
imul
xor
in
xchg
fs
into
mov
xchg
data16
add
pop
jo
pop
push
lods
add
push
sbb
insb
sarb
sub
dec
imul
and
rcrl
and
mov
mov
add
jmp
and
sbb
xchg
add
add
xchg
test
shll
xchg
imul
add
ret
movsl
fwait
jg
pop
ret
out
test
les
ljmp
mov
and
and
adc
add
inc
inc
pop
dec
jo
add
insl
pop
dec
lea
sti
inc
pop
jp
sbb
ja
arpl
ja
jmp
lods
mov
inc
leave
jne
and
jle
outsb
out
mov
mov
movsb
mov
mov
aas
pop
add
fiaddl
les
sbbl
pop
sbbl
js
cmpsb
std
adc
mov
scas
fistpll
imul
add
mov
push
adc
jmp
lods
gs
xchg
enter
and
xor
add
add
jmp
rol
repz
test
cld
mov
pcmpgtd
mov
mov
insb
loop
cmp
sbb
mov
cmpsl
popf
std
push
ljmp
and
mov
pop
ret
cmp
ret
pusha
popf
xchg
jne
push
fmull
inc
into
sti
adc
rcrl
push
ja
rcrb
push
cmp
pop
dec
sub
out
xchg
out
pop
addr16
clc
xchg
out
jbe
roll
cwtl
in
out
sub
xor
pusha
enter
push
fisttpl
sbb
ficoms
divb
xorb
stos
roll
xchg
and
pop
addr16
pushf
fidivrs
jg
testl
dec
dec
addr16
scas
popf
push
ljmp
xchg
jle
or
lock
jb
push
mov
fwait
inc
cld
mov
ja
fnstenv
cltd
nop
mov
xor
sarl
popf
sbb
cs
mov
repz
mov
xchg
sbb
jno
imull
loopne
out
icebp
fwait
xchg
adcb
cwtl
pusha
push
pusha
cmpsl
rcl
int
shll
addl
inc
nop
and
data16
cmpsl
lea
inc
inc
ror
sbb
sub
xchg
shr
adc
adc
test
shrb
jae
adc
sti
dec
push
in
jbe
out
cs
orb
sub
in
jne
push
cmp
inc
lahf
pushl
popf
xor
std
xchg
mov
jge
ret
stos
push
pop
sub
sub
sahf
jmp
jbe
repnz
push
adc
loope
mov
je
mov
in
sbb
mov
in
stc
mov
bound
lret
inc
sub
or
stos
lret
push
adc
jo
imul
out
adc
push
mov
add
ret
in
andb
imul
push
cmp
xor
mov
pop
fdivl
stc
sub
or
pop
scas
jo
push
pop
or
inc
sub
ret
dec
jg
xchg
mov
push
jl
pop
cwtl
jo
and
xor
pusha
dec
ljmp
and
xor
test
push
sbb
dec
into
je
lods
jbe
cmc
iret
out
sarb
pop
enter
sub
insb
in
outsl
js
xchg
cmp
fnsave
pop
adc
push
inc
leave
icebp
or
push
out
dec
fs
mov
xlat
dec
dec
mov
fnsave
sbb
stos
shll
ljmp
scas
and
and
loope
pop
push
mov
aas
test
popa
cmpb
jae
ss
nop
pop
div
bound
mov
in
pusha
es
imul
fldl
dec
dec
add
in
lret
mov
inc
inc
scas
mov
imul
insb
leave
xor
sbb
in
adc
sarb
lea
mov
mov
shll
jae
inc
lods
or
jle
arpl
ss
mov
lods
xchg
lea
in
pushf
xor
mov
daa
jnp
imul
sbb
push
imull
ds
dec
icebp
push
cmp
pop
ret
repnz
inc
nop
rcll
cmp
push
inc
add
inc
jmp
loop
push
mov
insl
sub
cmp
repnz
add
sti
adc
dec
sub
sub
imul
imul
arpl
jle
mov
imul
lods
sub
stos
repz
mov
xchg
ficoml
jmp
mov
jo
cld
or
cmpsb
mov
push
notl
mov
or
inc
clc
push
pop
add
fdivl
and
cld
or
xchg
icebp
dec
out
push
mov
jbe,pn
adc
adc
leave
or
gs
loop
mov
or
aam
pop
movsl
mov
push
cmp
push
sbb
pushf
mov
pop
shrl
jp
ret
out
aaa
mov
aad
pusha
lods
push
test
fimull
push
popf
xchg
addr16
add
xor
and
sbb
test
fisttpl
daa
in
sbb
test
mov
imul
xchg
mov
movsl
xchg
icebp
out
jo
xor
int
movsb
icebp
adc
icebp
mov
adc
and
icebp
dec
scas
daa
fdivs
jl
test
ret
repz
mov
lea
out
fcoms
and
pusha
in
push
pop
jo
adcl
push
filds
mov
and
xor
jb
out
loop
imul
cli
jmp
jbe
mov
sub
repz
sub
jge
push
leave
bound
add
icebp
mov
dec
in
sub
ret
in
and
jae
pop
fistpll
je
jge
push
mov
iret
inc
sbb
or
add
lahf
sub
push
lock
xor
and
ret
and
dec
push
fwait
xor
lcall
and
movsb
loopne
pop
xchg
jg
xor
adc
mov
aam
sbb
lea
test
push
out
mov
xor
jbe
es
jl
sbb
rcrb
ret
or
lret
insl
mov
arpl
into
test
mov
and
push
fisubrl
das
das
loop
fwait
pop
sub
bound
mov
push
sub
lcall
cld
lret
int3
movsb
adc
pop
pusha
cli
jecxz
adc
dec
in
xchg
push
mov
adc
inc
mov
cmp
add
call
lahf
sub
cltd
shll
sti
mov
dec
xchg
test
lcall
fstps
ljmp
bound
in
lcall
cwtl
out
cmp
mov
cmp
scas
leave
jae
mov
lods
out
divb
ja
push
outsl
pop
outsl
mov
leave
adc
sub
aaa
sti
scas
es
mov
stos
xchg
sti
hlt
dec
scas
hlt
stos
aaa
inc
and
inc
cltd
mov
or
push
loop
lods
sbb
xchg
or
outsb
cmpb
mov
cmp
mul
not
dec
les
mov
sub
clc
int
hlt
iret
out
lret
aad
cli
pop
dec
stc
adc
out
lods
adc
pop
pop
loop
divps
es
xchg
adc
cmp
leave
leave
mov
mov
xchg
inc
outsb
out
pop
mov
les
pop
mov
push
sahf
xorl
jmp
fistpl
aam
sbb
fs
inc
cmpl
test
scas
ds
gs
jecxz
pop
fwait
xchg
add
xchg
out
cmp
loopne
stos
jg
outsb
dec
out
mov
jmp
cmp
scas
mov
loopne
out
sub
loope
jbe
cmp
in
adc
cmp
dec
sbb
and
insl
xor
mov
add
cltd
shll
or
loop
xor
push
or
dec
sub
pop
pop
fdivr
lock
das
inc
cli
test
sahf
in
enter
mov
sbbb
jg
jae
out
sbb
jle
dec
loop
jp
jle
hlt
sahf
mov
mov
mov
and
out
inc
jle
mov
fdivr
cmp
mov
push
cmpsl
mov
fcompl
idivl
cli
or
aad
in
xor
jg
push
adc
test
sbb
cmpsl
pop
dec
xor
sbb
mov
mov
cmp
xchg
sub
ret
nop
lret
clc
push
xchg
fs
xchg
fwait
jnp
mov
push
lahf
pop
nop
jecxz
push
les
cmc
and
mov
cmp
in
movsb
pushf
adc
adc
xchg
jmp
lea
imul
mov
xor
ds
dec
jge
cmp
ret
xor
mov
adc
dec
add
jge
movsb
xor
sahf
pushf
adc
lea
add
adcl
fldt
ficompl
adc
and
insl
mov
fxch
pop
cmp
jl
das
rorb
out
dec
out
mov
or
bound
nop
call
roll
add
push
xor
gs
and
enter
insl
mov
minps
cmpsl
mov
test
mov
pop
ret
imul
test
sbb
js
sub
fsubrs
add
xchg
jbe
xor
adc
push
adc
push
pop
mov
ja
lahf
rolb
sbb
pop
add
mov
iret
lock
push
shrb
xchg
out
aam
outsb
ljmp
inc
mov
mov
push
in
mov
ret
jmp
ficoms
add
fwait
jb
xlat
inc
repnz
sbb
and
xchg
adc
add
mov
cmp
insb
js
inc
mov
pop
fmull
inc
out
adc
mov
push
mov
cmp
add
dec
push
setl
mov
test
ljmp
xchg
or
pop
pop
adc
xor
sub
inc
adc
sbbl
inc
leave
loop
mov
push
sahf
in
in
insl
jnp
push
aaa
mov
fdivrl
dec
mov
inc
pop
loop
into
mov
jne
mov
xchg
call
fisubs
rsm
sub
pop
shll
xor
adcl
scas
loopne
ret
jns
popa
imul
mov
cmp
arpl
adc
or
addl
jecxz
jns
movsb
dec
xor
cmp
negb
mov
data16
cmp
stos
popa
sub
mov
xor
popl
pop
pop
cmp
and
ret
mov
shlb
push
inc
mov
lods
adc
or
pop
push
js
aad
mov
add
rcrb
shl
fwait
out
jno
enter
mov
pop
outsl
jae
icebp
sub
rcr
imul
loop
mov
lock
push
sub
arpl
clc
mov
mov
in
mov
mov
xchg
mov
and
mov
pop
cs
inc
xor
into
dec
cltd
dec
sub
pop
dec
jl
dec
insl
cmc
cmpsl
pop
fwait
jp
or
pop
push
push
jl
ret
cwtl
dec
pop
or
jmp
add
iret
mov
mov
cmp
loop
fists
and
divl
push
jg
jbe
pop
adc
pusha
shr
enter
in
xor
daa
or
jb
mov
mov
fisubl
jne
js
add
mov
movsb
sahf
cmpsl
aad
out
test
arpl
testl
and
adc
xchg
and
lods
xchg
data16
lret
cmp
insb
out
fidivl
adc
repz
jp
jae
rolb
sbb
mov
xchg
lret
call
cli
dec
int3
loop
ljmp
sbb
or
int3
incb
mov
xor
inc
aaa
test
mov
xchg
inc
pop
push
jae
adc
shll
sub
xchg
repz
cmp
ja
in
daa
into
lea
pop
out
or
aas
ds
ret
ss
jo
insl
mov
pop
dec
lock
or
dec
psubsb
mov
dec
into
data16
out
loop
imul
aam
xor
std
or
jne
mov
push
clc
push
ljmp
lds
xchg
rep
jnp
out
outsl
add
sub
mov
daa
sbb
out
in
sub
insb
cmpsl
pop
inc
shrb
jge
add
dec
pop
mov
and
movsl
pop
cmpb
xor
xor
int
jge
or
inc
shr
xchg
or
inc
fisubs
inc
xchg
sarl
stc
out
test
xchg
mov
sbb
pop
sbb
loope
stos
lea
daa
pop
push
inc
jo
je
add
lock
gs
in
mov
cmp
and
int3
cmp
push
push
dec
add
fsubr
loop
aam
insb
iret
mov
movsl
aam
pop
jbe
lea
dec
push
stc
inc
hlt
ds
push
ret
mov
add
aam
lret
sbb
adc
xor
mov
push
stc
stc
add
mov
cmpsb
fwait
repnz
scas
roll
sub
arpl
fcmovnbe
sub
stos
mov
sahf
pushf
jle
jo
dec
mov
into
faddl
cmp
sbb
test
or
hlt
mov
fxtract
add
jnp
sti
ficompl
aam
out
popa
jbe
lret
mov
mov
bound
jg
adc
leave
jle
sbb
das
push
push
jmp
add
int3
rcl
loope
loop
lret
ret
mov
sbb
imull
mov
int3
nop
icebp
adc
cmpsl
cmp
lds
mov
jp
fmul
stos
aam
and
pop
pop
add
sbb
jmp
adc
xchg
outsl
test
out
push
add
out
sbb
dec
add
mov
xchg
add
lds
jns
dec
jle
stos
in
out
mov
sbb
dec
lock
hlt
roll
pop
and
out
test
movsb
push
mov
aaa
pop
dec
xchg
test
push
mov
ficoms
and
test
jns
mov
add
test
nop
cmc
test
jge
outsb
push
imul
fdivrs
out
mov
sub
jns
pop
xor
push
cwtl
pop
js
xor
notl
mov
sub
jge
jbe
mov
xor
push
lret
sbb
shlb
arpl
es
into
mov
leavew
mov
stos
add
repz
push
sbb
enter
ljmp
hlt
cmp
sti
rcl
inc
ret
mov
inc
jl
xor
cld
in
cmc
xlat
xchg
leave
lcall
or
cmpb
push
dec
mov
pushf
push
mov
nop
adc
dec
dec
inc
movsl
sbb
lahf
dec
fcmovne
pop
mov
inc
adc
xchg
shll
rcrb
pop
add
push
sti
lea
ret
cmp
push
mov
cmpsl
pop
jp
lcall
lea
jnp
mov
sarl
lret
repz
xor
sub
faddp
out
lcall
jg
in
inc
pop
xchg
or
cmpsb
mov
sub
dec
xchg
imul
sub
iret
les
cmp
pop
pop
mov
xchg
shrl
jno
pusha
pop
xor
mov
add
test
mov
cmpsl
lret
arpl
stos
push
fwait
sub
pop
rclb
adc
movsb
stos
sub
frstor
mov
sbb
sbb
add
loope
sbb
mov
sbb
xchg
xchg
test
inc
sbb
dec
jnp
xor
aad
cld
js
outsb
or
stc
inc
jnp
movsb
add
fs
call
and
incb
std
repz
and
mull
inc
jbe
scas
push
push
jns
ja
cld
icebp
lods
popf
dec
insb
jae
jb
and
dec
lcall
pusha
or
adc
jo
jnp
fcmovb
lds
cmpsb
jecxz
pop
call
push
cmp
shlb
jno
xchg
test
scas
aad
xchg
scas
xchg
mov
mov
jmp
and
mov
rolb
xor
pop
insb
pop
inc
std
popf
je
sbb
lcall
fdivs
jmp
push
push
jp
sbb
mov
icebp
shr
iret
cmp
jnp
lock
icebp
jmp
hlt
inc
daa
jmp
adc
add
bound
int3
mov
push
cmp
out
lds
adc
flds
mov
xchg
sbb
cmp
add
jp
lcall
dec
aas
insl
gs
cld
sbb
xchg
push
fsubs
lcall
fsubl
or
nop
dec
ss
imul
das
cmp
add
mov
stos
aaa
test
ljmp
push
ficomps
pop
xor
scas
scas
dec
cmp
mov
cmp
push
mov
fisubl
push
mov
fnstcw
add
movsl
xchg
ret
jne
adc
pop
bswap
in
sbbl
bound
int3
outsl
mov
push
mov
pop
cld
ljmp
dec
sbb
ljmp
inc
xrelease
inc
in
dec
ljmp
or
fcoml
shlb
dec
mov
cmc
loop
push
mov
lds
arpl
out
in
cmp
dec
push
jle
aas
mov
je
out
jecxz
loop
scas
mov
cmp
push
mov
lea
clc
es
in
xchg
ficomps
ljmp
add
xor
push
lret
mov
mov
shll
xchg
insl
xchg
out
shrl
push
pop
mov
cmp
mov
mov
fwait
or
shlb
jno
jl
jp
adc
iret
leave
test
rcrl
mov
je
push
inc
out
push
movsb
les
push
shrl
push
aas
ja
sbb
dec
iret
push
add
xchg
js
inc
mov
push
scas
mov
rclb
cld
mov
jns
rcr
addl
push
xor
jle
cld
adc
cmpsl
add
mov
push
mov
cmp
hlt
xchg
lods
jg
jecxz
jne
xor
mov
sti
mov
jb
fnstcw
sbb
movsb
push
sbb
out
dec
push
cmp
mov
jmp
insl
out
and
stos
jmp
mov
stos
sbb
fldenv
lahf
inc
mov
sub
mov
xor
sub
cmpsb
addr16
jmp
pushf
andl
lcall
pop
pushf
fsubrl
repnz
jmp
add
lcall
push
bound
push
jmp
jb
xor
xor
sub
loope
repnz
jle
and
test
jl
jecxz
mov
je
imul
dec
push
mov
sbb
nop
cmp
mov
mov
add
fidivl
ret
sbbl
add
int3
popf
in
xchg
outsl
loopne
jno
aad
leave
pop
inc
cmp
and
movsb
fs
or
lods
cmp
cmp
add
mov
insl
movl
adc
push
push
xchg
je
add
test
mov
add
jnp
cmp
outsb
cmp
leave
mov
test
loop
pop
cmpb
fisttpll
xor
test
scas
shlb
fmuls
lods
cmovae
dec
lock
movsb
int3
sbb
addr16
xor
call
lahf
dec
push
add
mov
iret
push
mov
or
and
fadds
je
negb
inc
push
add
pop
xor
sub
mov
mov
inc
push
sbbl
xchg
lea
or
shlb
fsubr
sub
pop
xchg
or
dec
inc
ds
push
rcll
xor
test
jle
sbb
out
out
cmc
fs
repz
iret
mov
sub
fisttps
leavew
sbb
xor
jns
and
inc
xor
jge
pop
pop
std
fists
push
push
rcr
loopne
adc
cmp
or
xorl
fisttpl
fadds
pop
lret
cmp
mov
hlt
sbbl
testl
mov
pop
mov
jns
shr
pop
xor
mov
or
mul
xchg
dec
push
imul
negl
fwait
adc
adc
pop
jo
pop
dec
mov
xchg
mov
enter
jmp
ljmp
or
hlt
addr16
or
in
fs
xchg
xchg
inc
out
addr16
test
int
sub
pushf
add
add
das
xchg
pop
and
sbb
cmp
sbb
fidivrs
mov
and
loopne
pop
rolb
jge
js
cmp
test
sbb
iret
incl
cmpsl
add
add
call
push
jno
das
or
scas
in
pop
in
or
mov
aam
mov
call
adc
fisubrs
cmp
cmc
enter
movl
mov
cmp
neg
popf
push
mov
or
sub
push
push
dec
or
push
ret
jne
xchg
sub
dec
push
test
jnp
mov
pop
push
or
jae
adc
jmp
aam
pop
ficompl
adc
jnp
inc
subb
xchg
rcl
call
sub
pop
or
in
xchg
mov
mov
xchg
xchg
inc
xchg
stc
mov
imul
mov
add
pop
faddl
mov
mov
inc
fsubr
add
add
incl
jb
incl
inc
add
mov
addr16
ja
add
push
pop
xlat
inc
add
or
icebp
xchg
loope
sbb
lock
dec
out
andps
adc
js
imul
test
dec
jecxz
pop
lea
shrb
inc
jge
pop
cmc
pop
mov
pushf
arpl
in
xlat
loop
insl
addr16
sub
ds
pop
iret
fsub
mov
xor
pop
in
cld
adc
mov
add
aad
pop
mov
push
lcall
jmp
lcall
add
push
call
add
xchg
out
popf
push
rcrl
xor
mov
hlt
pushf
outsl
xchg
test
pop
mov
ror
rol
mov
mov
xor
sbb
jnp
sti
sub
outsb
dec
in
pushf
jge
mov
push
mov
mov
js
add
inc
int
out
mov
test
cmpsl
pop
aas
addr16
dec
fcomps
jg
jno
cmp
jo
adc
shrl
mov
jnp
mov
and
mov
sbb
inc
fnstenv
cmpsl
pop
sbb
xchg
pop
je
iret
and
cmpsb
mov
jb
push
and
call
lods
mov
jno
call
mov
jmp
sub
leave
sbb
clc
pop
jns
adc
call
testl
xchg
mov
out
add
cmp
out
fsubl
mov
xchg
dec
das
leave
mov
sub
sub
bound
out
mov
mov
movsb
stos
or
popf
jecxz
sub
adc
fimuls
xchg
scas
mov
int
std
test
cmp
fninit
mov
mov
adc
sub
jmp
pushf
inc
jne
aaa
ljmp
jae
inc
sbb
xor
aam
or
cmp
cld
aad
sbb
push
mov
mov
scas
addb
in
adc
or
es
mov
xchg
cmp
lock
hlt
sbb
mov
or
add
adc
orl
inc
dec
std
push
out
mov
mov
pop
sub
inc
imul
cltd
cmpsb
and
scas
cmpsl
outsl
adc
adc
clc
stos
mov
pop
lea
hlt
and
es
sub
adc
jb
lcall
lock
add
push
lret
or
mov
cmpsb
iret
flds
jns
cli
sahf
mov
pop
adc
mov
in
mov
in
sub
pop
out
cld
mov
jns
or
inc
stos
das
ljmp
jns
inc
loopne
xchg
pop
dec
or
in
sbb
mov
outsl
sub
nop
push
outsb
adc
xchg
dec
js
or
or
push
xchg
push
xor
in
xlat
in
aaa
lret
or
arpl
add
scas
adc
inc
mov
out
in
mov
cmp
lock
es
sbb
adcb
push
loope
popa
sbb
loope
adc
or
ss
sub
arpl
repnz
into
fs
arpl
push
out
sub
xchg
cmpb
mov
push
mov
bound
jl
pop
xchg
jge
jecxz
dec
sub
es
rcr
mov
test
cltd
xchg
push
jno
cli
adc
cmovl
in
fisubl
inc
shll
mov
inc
mov
out
pop
insl
popf
sbb
cmp
inc
pop
jle
sbb
cmpsl
lea
mov
add
xor
in
divl
inc
pop
cmp
add
pop
adc
push
rorb
push
jmp
inc
xor
add
mov
lahf
add
loop
nop
je
mov
sub
lahf
dec
jp
das
adc
in
xor
pop
xchg
mov
shll
push
sbb
cld
mov
mov
cmp
adc
and
popl
cs
jb
sub
jne
sbb
inc
adc
jb
jb
bound
mov
cmpsb
mov
adc
daa
int3
adc
mov
or
sbb
cs
adc
sahf
jmp
test
icebp
pop
mov
mov
cmp
mov
xchg
lss
xchg
inc
sub
and
jecxz
or
ficoml
dec
sub
scas
aam
pop
dec
test
push
orb
mov
cmpsb
fdiv
loope
add
pop
stc
into
lods
pusha
sub
imul
clc
lret
add
push
mov
cmp
jb
es
repz
out
ja
scas
pop
pop
push
fdivrs
and
insl
mov
int3
movsl
mov
mov
call
and
xchg
roll
out
out
shl
mov
sub
out
incl
pop
inc
mov
int3
xor
mov
dec
dec
xlat
sti
cld
lahf
addr16
cmp
xor
cmp
hlt
and
popf
in
jge
pop
cmp
xlat
cmc
inc
mov
jae
inc
jp
and
hlt
sub
mov
arpl
or
or
xchg
lret
addb
jl
jl
dec
cld
inc
add
aad
leave
mov
dec
add
movsl
fistl
sbbb
int
fnsave
sub
dec
add
sub
hlt
mov
push
jecxz
push
imull
lcall
or
adc
jae
scas
es
jmp
or
pop
ret
dec
mov
mov
and
subl
sahf
inc
insb
aaa
ja
mov
ss
jno
stos
ret
aam
jbe
int3
cmp
inc
aas
cmp
lcall
cmc
pop
loop
lahf
test
in
je
sbb
outsb
xlat
iret
std
les
insb
cwtl
cmp
sub
lods
in
adc
sbb
sbb
push
jp
pop
mov
cmpsb
stos
xor
lret
push
out
push
call
sbb
aaa
ds
push
pop
xchg
aaa
sub
cmp
pop
cli
stos
divb
mov
xchg
mov
mov
cmc
shl
sub
mov
loop
out
dec
mov
hlt
xor
pop
jle
stos
sahf
mov
mov
repz
test
test
stos
inc
pushf
cmp
int3
je
js
inc
push
jbe
pop
cld
ss
fnsave
xor
and
insb
mov
outsb
pushf
mov
loope
je
mov
stos
data16
push
cmp
mov
das
inc
fisttps
in
jae
addl
xor
pop
cmp
iret
sbb
js
xlat
popa
jno
icebp
jns
lcall
and
sbb
iret
pop
mov
jecxz
hlt
or
dec
jle
xchg
mov
iret
fistpl
lock
pop
insl
mov
and
std
lods
cmp
mov
jmp
push
pop
leave
js
lret
test
lahf
pushf
add
fs
outsb
out
aad
daa
or
xor
test
jle
cmp
xor
mov
push
inc
inc
mov
nop
ret
mov
scas
push
fidivl
or
test
mov
std
pop
cwtl
fcompl
and
cmp
fimuls
and
fwait
xlat
je
mov
xchg
fcomi
cmc
dec
aaa
bound
adc
jbe
aaa
xchg
push
jne
test
repnz
inc
mov
cmp
jns
dec
mov
clc
cmp
cmp
push
adc
sarb
cmp
sub
cmp
je
adc
fdivrp
pop
jnp
sbb
or
bound
cmc
xor
dec
add
inc
adc
push
pushf
pop
mov
sbb
data16
aam
ret
fs
xor
sub
xchg
rcrb
into
sbb
xchg
cli
inc
cld
push
or
sbb
sti
jp
adc
andb
imul
xor
cmp
fisubrs
add
sahf
inc
jp
data16
push
lret
ret
mov
out
mov
cmp
scas
inc
push
xlat
fistpll
adc
xchg
mov
mov
sub
xchg
and
idivb
inc
shlb
jl
out
sub
pop
les
add
pop
push
mov
mov
popf
stos
cmp
lods
jg
mov
push
int3
add
hlt
inc
js
sbb
add
pop
in
testb
cmp
and
xchg
jg
lahf
mov
sub
mov
lock
cmp
jne
enter
js
movsb
outsb
lods
mov
leave
nop
ror
push
xor
inc
dec
jle
mov
pop
push
mov
popf
cmpb
mov
dec
lea
aam
push
inc
xor
filds
sbb
out
negb
movsb
dec
jge
jbe
cmpsb
ret
mov
outsb
mov
cmpl
and
adc
cmp
push
sub
add
pop
or
xor
fadds
imul
add
stos
test
lock
pushf
jo
les
lret
outsl
sbb
js
push
mov
jae
enter
fcmovb
fidivrl
loopne
andl
jnp
sub
leave
cmc
imul
push
jb
inc
outsl
mov
jecxz
mov
sbb
pop
push
jmp
neg
je
or
sbb
test
scas
pop
pop
inc
jno
shll
cmp
stos
loope
and
add
arpl
pop
push
sub
mov
jnp
aad
test
pop
lods
sub
mov
dec
or
shrb
mov
push
out
insb
aad
and
pop
mov
bound
pop
mov
fdivrs
ret
and
xchg
ds
cmpsl
lret
xor
test
fsts
jg
push
ljmp
dec
imul
jg
mov
jno
push
jecxz
inc
or
inc
or
dec
cmp
adc
push
ficomps
pop
sbb
jp
jno
bound
sbb
jl
je
mov
cwtl
xchg
bnd
dec
pop
jecxz
add
stos
cmp
fisttpll
jg
sbb
pusha
orl
xor
cmp
xchg
inc
ds
je
loop
leave
lea
mov
dec
mov
jmp
xchg
aam
xor
xchg
dec
pop
mov
dec
and
sub
test
stc
movsb
addr16
push
xchg
inc
pop
call
jno
fnstsw
sbb
sub
loopne
out
sbb
imul
test
arpl
xlat
jg
xor
cmovae
enter
xchg
pusha
sbb
fwait
sub
inc
movsl
mov
mov
xchg
or
dec
cmc
out
sbb
fists
scas
testl
insb
or
cmp
pusha
or
dec
jns
sub
in
mov
mov
jno
xchg
xor
dec
out
and
rclb
add
lods
mov
sub
or
sbb
adc
adcb
in
cmc
popa
xor
repnz
aad
and
stos
pushf
lds
lds
es
pop
sub
gs
sbb
mov
inc
inc
shrb
arpl
fcmovnbe
or
test
add
icebp
mov
repnz
pop
enter
push
pop
out
mov
shlb
push
pop
mov
jnp
xchg
mov
out
in
jnp
adc
iret
out
aad
jno
xorb
dec
rorl
pop
sbb
xor
out
jnp
lods
repz
ret
mov
ret
or
inc
pop
fwait
inc
sbb
pop
mov
std
notb
and
and
inc
popf
or
iret
imul
in
or
aam
mov
xchg
leave
adc
ja
fucomp
xor
xor
sti
adc
mov
ss
add
shrl
hlt
cli
mov
nop
mov
or
andb
stc
xor
adc
aas
out
mov
mov
mov
into
adc
adc
jnp
mov
adc
addb
add
sti
loop
ficompl
pusha
sub
jns
jns
loop
test
mov
sbb
mov
and
gs
pop
sub
ficomps
mov
out
out
adc
jl
add
adc
mull
negl
lds
push
sbb
jno
push
mov
gs
mull
pop
push
stos
jae
xor
fidivl
xchg
mov
xor
jno
mov
das
add
aam
ljmp
pop
mov
push
scas
lds
xor
cmp
mov
xor
mov
mov
fidivrs
mov
inc
push
pop
popa
test
push
push
push
test
insl
xchg
xchg
or
and
sbb
pop
mov
mov
sub
je
inc
xor
xchg
pop
add
mov
cli
add
je
fbstp
scas
jae
dec
lret
jbe
test
dec
fs
or
pop
cltd
andl
inc
popa
inc
dec
pop
jge
in
push
mov
icebp
call
fs
dec
xchg
lret
sub
fs
cmpsl
in
cwtl
notl
dec
loope
rcrb
sbb
int
dec
sbb
or
cmp
inc
add
and
pop
mov
test
xchg
mov
xlat
out
popf
mov
add
mov
gs
and
cmp
or
repz
sbb
xor
ja
ficompl
cmpsl
lret
xor
lret
mov
int
leave
scas
jo
push
mov
xor
out
dec
in
mov
repz
cmp
rcll
push
enter
adcl
sub
pop
inc
test
icebp
adc
ret
and
idivl
mov
in
jg
or
dec
push
sbb
testb
lods
ficoms
lock
ss
call
cmp
rcll
mov
outsb
movsb
mov
adc
icebp
imul
int
in
bound
stc
push
aaa
repz
out
cmp
dec
fcoml
in
into
popa
popf
dec
sub
jbe
cmp
pusha
dec
xchg
sub
gs
lahf
mov
and
sub
mov
lock
inc
jmp
sar
mov
std
mov
fnstenv
mov
cltd
int3
sbb
xchg
xchg
or
imul
mov
xchg
sub
popa
add
or
and
push
clc
in
aaa
jns
sub
out
jle
dec
lods
and
jns
scas
nop
add
sub
int
iret
or
mov
xor
pop
cmp
shlb
mov
lock
and
jae,pn
mov
sahf
outsl
add
loope
or
rcrb
fwait
test
or
adc
push
mov
cmpsb
fnstsw
jo
sahf
mov
movsb
in
shl
push
xor
sub
cwtl
dec
xchg
jbe
cwtl
and
push
mov
aas
popa
inc
pop
jecxz
mov
loopne,pt
pusha
aas
and
out
pop
mov
fdivrl
mov
fdivrs
sub
in
adc
cmp
test
out
xchg
lcall
shlb
cmp
or
add
jnp
iret
in
test
mov
dec
cmp
lret
pop
ficoms
dec
int
aas
lcall
pop
or
xchg
xchg
xor
call
fistl
or
push
push
add
inc
rep
adc
mov
daa
push
push
sbb
jmp
fcmovb
jae
popf
addl
out
ja
xchg
mov
mov
pop
js
xor
or
sbb
pop
xor
cs
fisubrl
lds
loop
mov
les
pushf
and
cmp
fsubl
subb
test
lcall
fidivl
cld
nop
jg
push
or
loope
or
icebp
adc
or
mov
in
lods
fsts
jae
movsb
jbe
sbb
insb
fists
xorl
hlt
test
inc
push
mov
mov
outsb
movsb
call
cmp
rorb
lods
lret
add
xchg
pop
pop
push
movsb
inc
cmp
in
fxch
cmp
mov
xor
adc
push
push
xorb
call
sbb
and
lret
or
or
cvtps2pi
mov
mov
dec
cltd
loopne
and
sbb
cltd
push
xchg
jno
mov
xchg
cmpb
ror
sbb
dec
sti
pop
push
mov
leave
inc
dec
cmp
rorb
pop
pushf
push
xor
mov
push
outsl
xor
arpl
jg
xchg
push
add
sarb
shl
mov
mov
jecxz
sub
movsb
stc
shll
inc
aaa
mov
std
loopne
pop
in
ffreep
testl
jo
inc
push
lds
lcall
jo
inc
mov
cs
jae
fs
aad
adc
push
sub
cmp
movsb
out
ficoml
and
addr16
rorb
dec
jns
mov
scas
das
ds
jno
xor
add
jno
flds
cltd
pop
pop
roll
rep
repz
clts
cmp
leave
fldl
nop
pop
rorl
push
ret
mov
in
push
scas
ja
mov
out
inc
fidivl
std
jmp
mov
cmp
dec
mov
push
push
push
leave
cmp
rolb
sbb
das
fdivr
adc
jmp
into
mov
pusha
js
adc
push
das
test
popf
mov
push
push
sbb
loope
adc
fcom
lcall
fistpl
sub
lret
popf
shlb
xor
jb
xlat
fsubs
popa
rcrb
insb
xchg
push
xchg
pop
push
sbb
inc
adc
and
popf
or
jg
jmp
mov
adc
int
lcall
mov
js
and
fdivrl
adc
cmp
or
cld
mov
mov
mov
insl
scas
cld
adc
or
pop
sbbb
fwait
sub
sub
lea
mov
sbb
shll
out
mov
pop
mov
add
sub
sahf
mov
add
sub
mov
stc
push
fs
xchg
and
shlb
xor
divb
dec
xor
rcrl
mov
idivb
in
cmpsl
cmp
xor
jg
aam
stc
aam
mov
out
cwtl
clc
pop
jb
sub
jl
outsb
add
nop
push
aam
fs
mov
ljmp
mov
mov
add
push
xor
in
pop
ds
out
push
lcall
jl
or
lret
and
pop
push
push
jb
in
pusha
imul
push
mov
cs
xor
add
sbb
mov
add
dec
and
sbb
les
or
leave
jo
lea
pushf
fstps
push
jl,pn
ds
push
ret
jmp
pushf
out
mov
dec
xchg
sub
nop
cmp
sub
mov
ret
insl
sub
out
aad
push
shlb
jecxz
inc
bound
int3
lahf
arpl
leave
shlb
push
sbb
stc
pop
mov
jns
imul
jle
xchg
adcl
daa
mov
jge
xor
loop
push
or
ret
xchg
xchg
xor
cli
ds
call
mov
push
sub
add
mov
and
cmp
or
out
aaa
jae
mov
pop
sub
mov
repz
sbb
mov
inc
adc
addr16
xchg
clc
subl
cmp
cmpsl
stos
inc
xor
dec
movsl
pop
push
ja
sbb
add
fisubrl
js
or
mov
adc
es
arpl
lds
or
nop
dec
pop
sti
in
hlt
test
shrl
or
dec
std
loope
insl
xor
xlat
pop
jmp
insb
pop
xchg
xchg
popf
xor
nop
jo
adc
push
adc
arpl
into
ljmp
add
add
data16
mov
pop
push
sub
addr16
fldl
xchg
or
xchg
jns
jb
cmc
inc
xchg
in
mov
or
dec
iret
xor
and
loop
in
test
push
adc
out
repnz
daa
fwait
mov
bswap
adcl
add
cmp
jb
fnstenv
jle
test
dec
xorb
insl
jecxz
pop
loop
push
bound
mov
cmp
xchg
jno
sub
shlb
push
mov
cld
lods
push
lods
adc
xor
jl
into
mov
cli
sub
sbb
xchg
idiv
push
sahf
repnz
inc
pop
fidivl
push
cmp
filds
into
adc
rcll
jae
mov
jmp
imul
mov
and
pop
pusha
xchg
cmp
aas
fucomip
add
loopne
loop
jp
push
add
das
in
add
jbe
imul
lcall
scas
cmp
lcall
jnp
enter
mov
mov
stc
sub
jl
mov
stc
mov
jnp
cmp
int3
adc
fbld
pop
cmp
xor
xchg
jle
js
lock
lds
push
inc
xor
add
mov
test
sub
in
dec
inc
je
jl
cmpsb
jnp
cmc
ljmp
pop
arpl
hlt
push
jbe
imul
inc
cltd
sahf
or
cmp
sahf
sub
test
sub
dec
and
rcr
ljmp
lret
jmp
int3
pop
cmp
push
mov
mov
mov
out
mov
mov
xlat
push
outsb
lea
push
or
pushl
or
cmc
les
pop
pop
adc
mov
dec
pop
das
insb
test
and
sub
cvtdq2ps
pop
jecxz
push
aam
dec
sub
in
je
cmc
loopne
repz
dec
ja
sub
je
adc
ficoms
hlt
lahf
insl
mov
adc
push
mov
test
mov
scas
neg
pop
sbb
xchg
out
cwtl
xchg
or
jmp
mov
nop
lahf
mov
pop
inc
adc
sub
imul
push
pop
ja
mov
dec
test
rcll
pop
xchg
lods
loop
ja
xchg
lret
aad
shlb
std
mov
jg
push
gs
cmp
sahf
cmp
and
jle
inc
in
lea
inc
xor
stos
sbb
jae
pusha
scas
mov
mov
push
push
push
mov
inc
jmp
jg
test
nop
jmp
int3
outsb
mov
mov
leave
mov
xor
adc
fcompl
mov
std
cmp
mov
pop
out
pop
mov
rolb
adc
sub
jmp
loope
push
lods
je
cmp
mov
int3
lret
cmp
dec
xor
push
pop
jl
stc
jns
lods
ret
xor
jp
pop
sbb
or
in
ret
leave
jge
inc
jb
jmp
mov
movsl
mov
sarb
cmp
dec
repnz
in
dec
xor
jae
insl
mov
sahf
enter
jmp
jle
cmpsl
ss
int
add
mov
ja
sbb
sahf
and
mov
mov
clc
test
enter
mov
enter
lcall
cs
push
adc
and
push
mov
popf
hlt
sub
jo
or
mov
xor
ss
sarb
stos
popf
mov
lods
jp
shr
jb
adc
inc
call
xorb
jmp
lret
mov
je
in
lods
test
or
xchg
mov
sub
mov
adc
arpl
pop
sub
adc
mov
xchg
mov
inc
ret
dec
push
out
shl
xor
sub
mov
cmpsb
xchg
add
pushf
jae
pop
lret
jnp
dec
fidivl
push
out
divb
pop
adcb
add
test
mov
clc
mov
cmp
lahf
mov
fcoml
aam
add
mov
cmpb
je
stos
lret
jae
iret
xchg
in
push
mov
xchg
xchg
cmp
in
push
sbb
and
sbb
mov
fcmovne
aas
sbb
xchg
xor
and
pop
bound
call
dec
inc
iret
mov
std
ljmp
into
inc
dec
add
stos
jno
stos
in
and
pop
and
aad
and
pop
pop
outsl
xor
ds
sbb
jns
popf
xchg
ret
imul
xchg
push
adc
pop
and
pop
mov
loop
fimuls
xor
cli
stos
ljmp
jnp
dec
push
or
xlat
push
mov
push
push
and
mov
idiv
popf
aaa
andb
jmp
sbb
dec
push
clc
push
call
sarl
inc
mov
cmp
inc
dec
scas
imul
daa
pop
cmpl
orl
imul
jnp
adc
push
add
adc
fsubs
fs
xchg
adc
add
jb
ret
es
mov
arpl
popf
or
mov
pop
adc
adc
cmp
or
js
fldenv
sub
xchg
in
xor
outsb
std
lcall
bound
add
pop
adc
xchg
call
add
test
fdivrl
stc
inc
in
or
fstpl
imul
cli
and
ret
lret
add
sbb
mov
jns
push
push
cmpsb
je
fildl
outsb
mov
cld
imul
popf
cmp
inc
bound
push
cltd
js
rep
je
inc
and
add
dec
jge
movsl
stc
adc
add
mov
pushf
mov
aam
cld
fidivrs
sub
outsl
std
mov
pop
repnz
xlat
sub
mulb
sahf
jg
repz
mov
scas
mov
int3
les
jbe
or
fmuls
popa
adc
add
imul
test
popf
aaa
xor
test
xchg
mov
cmp
rorb
sub
fidivl
mov
push
xchg
icebp
mov
mov
fstpt
cmp
mov
inc
test
inc
shlb
mov
push
fs
divb
push
sub
fcompl
or
cltd
and
jle
int
out
mov
fs
repnz
stos
push
inc
add
mov
and
mov
push
int
ret
fs
icebp
mov
pop
inc
dec
adcb
or
ljmp
xchg
adc
ficoms
sarb
cmpsb
dec
imul
popa
mov
cli
or
mov
xlat
cltd
pushf
pop
jno
aad
pop
popf
jle
push
mov
fldl
pop
shr
mov
fcmovbe
out
mov
mov
clc
cmp
push
pop
stos
cmp
inc
nop
mov
sub
xchg
ss
xor
outsb
mov
cli
xor
test
jg
or
sub
cmp
cwtl
or
js
adcb
sub
mov
js
mov
adc
loope
scas
imul
jge
pop
andl
rclb
add
push
mov
inc
mov
mov
les
inc
sub
dec
cmpsl
mov
pushf
cmp
stos
mov
mov
mov
or
push
or
leave
pop
adc
int
sbb
insb
sbb
test
cmp
and
dec
inc
cmp
mov
push
test
mov
push
sub
fisttpll
ret
pop
inc
push
jno
pop
cmp
xor
push
dec
push
jo
ret
add
cmpl
mov
push
adc
ljmp
cmp
lahf
out
mov
dec
xchg
insl
or
into
int
leave
sbb
xor
jp
out
mov
cmpsl
xchg
lea
mov
orl
cmp
shlb
pop
inc
add
stos
inc
push
in
call
negl
jb
in
inc
mov
dec
incb
mov
mull
mov
test
push
inc
sub
lea
cmp
pop
xchg
lret
mov
stos
leave
jg
rol
pop
mov
xchg
dec
aas
jo
push
popf
xor
jno
xor
push
add
cmp
ret
addr16
fwait
lahf
or
and
sub
lret
dec
xor
incl
cmc
ljmp
imul
mov
push
fsubp
xchg
mov
fidivrs
imul
std
push
fisttpl
hlt
xor
ljmp
int3
pop
sbb
dec
jp
dec
rclb
inc
pushf
aad
mov
movsl
arpl
cmp
cmp
jns
popa
cmp
jle
sub
jb
jecxz
cmp
lret
xchg
xorb
movsl
cld
loope
out
fsts
movsb
in
in
cmpsl
and
xchg
xchg
and
lock
mov
cmp
adc
cmpsl
call
push
pushf
mov
mov
rolb
test
cmpsb
add
sbb
inc
in
fwait
dec
jp
fcoml
add
inc
mov
mov
enter
xchg
lea
ljmp
mov
xchg
movsb
push
loope
pop
adc
movsl
mulb
mov
jbe
or
xchg
adc
es
lahf
inc
mov
mov
imul
pop
stos
add
js
xor
or
addb
or
dec
je
cmc
inc
cmp
fadds
fwait
sbb
pop
inc
jno
push
popf
ljmp
xor
scas
enter
jns
imulb
mov
adc
ret
fwait
fs
shll
xlat
adc
add
dec
sub
and
out
sub
or
imul
mov
aaa
lret
clc
fisttps
ljmp
es
push
mov
cwtl
mov
xchg
pop
sbb
push
xor
xchg
cmpsl
mov
mov
sub
push
sahf
adc
sbb
imul
push
inc
mov
test
shl
and
movsb
adc
imul
aam
dec
sbb
inc
rcrl
and
mov
mov
insb
clc
and
cmpsb
mov
jbe
push
adc
cli
inc
nop
ret
xchg
aas
outsb
sub
jb
lods
or
pusha
rcl
mov
mov
cmc
jmp
dec
int3
ret
enter
fmulp
jg
test
cwtl
jl
ret
mov
sti
or
xchg
pop
jbe
adc
insb
lgs
jmp
sbb
xor
adc
pop
pop
leave
push
orl
sahf
leave
scas
inc
jle
xor
adc
fstpl
sbb
shr
mov
or
mov
xorl
mov
icebp
rcrb
call
mov
cwtl
jecxz
in
out
rclb
sub
xchg
loope
jecxz
sti
xchg
scas
arpl
nop
mov
push
add
popf
int3
and
inc
les
sarl
xorb
stos
pusha
idiv
and
xchg
fdivrs
sub
pop
jne
lock
fmuls
das
pop
or
sahf
mov
cmc
xorb
dec
sub
cli
fsts
dec
call
add
ror
mov
or
mov
iret
jbe
push
jne
and
mov
cld
pop
or
pop
sub
sbb
pop
roll
xor
add
in
xchg
push
lcall
mov
push
hlt
jae
xorl
add
gs
insb
outsb
jbe
dec
jnp
cmp
mov
subb
xor
jge
outsl
sti
pop
lret
ljmp
jae
cmpsb
popa
popf
xor
test
test
out
aad
mov
movsl
pop
mov
xor
mov
test
ret
enter
cmpsb
imul
add
scas
push
aaa
cmp
imul
shlb
cmc
mov
mov
pop
mov
sar
xchg
push
add
in
out
mov
mov
push
sbb
imul
jecxz
inc
dec
icebp
inc
mov
inc
xor
push
mov
rclb
lock
ror
mov
add
or
mov
mov
aad
bnd
add
xor
imull
cmp
fldt
movl
lods
shll
sub
mov
jb
cmpl
add
cmp
out
mov
mov
cli
and
fistps
loope
jno
cld
mov
jbe
popa
stos
lock
adc
mov
loopne
popf
inc
cmp
test
fildl
xchg
lret
cwtl
inc
lock
movl
mov
inc
mov
mov
stc
fidivrl
mov
lcall
xchg
out
mov
movsl
aaa
xlat
jge
pop
pushf
jg
sbb
fmuls
jno
pop
jmp
mov
jbe
stos
dec
xchg
and
sbb
fmull
popf
out
cmp
stc
dec
inc
jns
pop
loopne
push
push
loopne
adc
xor
imul
loopne
inc
mov
push
xchg
xor
popf
xor
shrl
jecxz
aaa
ss
push
dec
xor
pushf
lret
xor
mov
test
add
popa
push
pop
stc
pusha
rorb
movsb
jo
cli
xchg
jge
pop
icebp
scas
xlat
test
jp
insb
pop
jae
jne
gs
and
pushf
test
mov
jle
movsl
iret
je
push
ret
xchg
mov
lret
add
dec
cmp
leave
mov
push
jb
es
insl
adc
sub
xchg
mov
cmc
repnz
sbb
popl
ret
add
xor
pop
dec
mov
or
clc
cmp
aam
mov
pop
fidivs
and
mov
in
sbb
fwait
jecxz
ljmp
adc
mov
inc
rcll
cmp
lea
sahf
sti
pop
test
mov
stc
inc
ret
sbb
test
in
clc
jg
adc
fcoml
or
adc
scas
xchg
push
sbb
mov
outsb
xchg
sahf
and
xor
fwait
inc
cmpsl
sub
xchg
jmp
movsl
push
push
jecxz
or
mov
cld
jno
outsl
lret
cmp
dec
test
jp
lcall
cmp
or
movl
aaa
arpl
rol
jge
or
out
cmpsb
filds
add
ds
jmp
add
adc
push
outsl
inc
std
fcomip
fs
int3
imul
sub
nop
es
xchg
adcb
and
xchg
sbb
sub
mov
out
cmpsl
insb
mov
lock
pushf
jp
adc
inc
sub
add
cmp
mov
std
lock
lods
mov
mov
out
mov
out
out
addb
gs
sub
mov
add
mov
int
adc
sub
mov
leave
jmp
cmpb
lea
sti
out
cld
xor
and
scas
in
cs
jb
sbb
push
xchg
or
pop
enter
imul
sbb
fucomp
push
test
repnz
sbb
inc
push
jb
sbb
sub
cmp
in
imul
push
out
ret
bound
jb
or
sti
lea
jg
adc
mov
in
push
in
or
mul
add
sbb
loopne
jg
lret
add
popf
sub
cltd
sahf
shlb
stos
lret
push
mov
and
mov
orl
lahf
inc
lahf
je
and
mov
jne
ss
jg
mov
mov
mov
jbe
fadd
out
adc
push
cmp
aad
outsl
push
loope
in
inc
ret
sub
mov
cmp
aas
rorb
xchg
ffreep
mov
mov
sub
mov
in
mov
inc
movsb
mov
mov
mov
and
idivl
cmp
sbb
cmpsl
es
loopne
int3
jno
popf
inc
jo
or
imulb
es
cmp
and
inc
sub
dec
loope
push
xchg
push
jb
jo
xor
in
nop
loop
sub
push
jnp
sbb
psraw
xor
in
test
pushf
pusha
int3
outsl
pop
push
in
clc
and
cli
and
stos
test
jns
jl
into
dec
mov
clc
fdivrl
mov
out
sbb
dec
cltd
pop
cmp
push
sbb
pop
sub
jb
outsb
or
push
insl
or
pslld
and
or
add
test
lret
add
and
subb
jo
mov
dec
and
sti
les
xchg
fnstcw
xchg
add
or
insb
xor
in
xor
into
push
xor
out
jne
popa
push
xchg
mov
and
mov
in
aam
pusha
stos
call
pop
loopne
jmp
push
jecxz
imul
jp
sub
imul
shrl
dec
popf
shl
mov
into
std
xchg
cmp
fcmovnb
sbb
idivb
pop
loopne
pop
cltd
jge
pop
dec
fists
cld
inc
icebp
cmpsb
subl
std
mov
ss
das
jns
add
jo
imul
and
inc
mov
push
cmpsl
xor
leave
popf
loopne
aas
pop
push
xchg
orb
inc
jg
mov
mov
and
mov
movsb
lock
mov
pop
jne
mov
or
lahf
mov
mov
add
adc
cltd
mov
xor
incl
sahf
mov
push
mov
add
jnp
cld
and
loope
mov
pop
mov
sbb
add
lret
mov
cmpsb
xor
mov
cli
mov
adc
mov
mov
rcr
fildl
jno
push
testb
add
mov
out
in
mov
add
jnp
je
movl
inc
xor
xor
sub
jnp
jecxz
fimuls
sub
rorl
iret
cmc
insl
xchg
mov
push
jl
rolb
add
mov
xlat
xor
or
add
adc
dec
or
mov
lock
cmpsl
popf
hlt
and
sti
xchg
pmullw
sarb
inc
loop
jp
addr16
push
imul
cmp
sbb
imul
rcrb
mov
fsubrs
int
aad
dec
out
jg
xor
sbb
or
mov
jb
dec
dec
fcmovnb
imul
mov
roll
test
movsb
add
or
mov
clc
pop
sub
cmpsl
push
iret
cmp
cli
dec
dec
or
xchg
es
mov
dec
bound
subb
push
sub
sbb
dec
add
and
gs
cmp
pop
es
rol
test
outsl
inc
pop
fcompl
fucom
in
fidivs
mov
lods
adc
push
pushf
pop
icebp
adc
popa
clc
inc
and
sbb
pop
pop
mov
sti
sbb
add
pop
push
xchg
iret
mov
sbb
xor
inc
or
out
bound
into
in
and
add
mov
mov
mov
aaa
add
rolb
lret
pop
decb
xor
enter
sub
mov
and
pop
jge
adc
cmp
mov
mov
jb
js
mov
shl
loop
mov
std
xchg
test
in
and
test
mov
pop
ss
test
xchg
sahf
add
pop
sti
xchg
fs
fcomi
test
call
sub
cmc
fnstcw
xor
push
xchg
sub
push
add
inc
lahf
imul
enter
test
movsl
loopne
sbb
pop
adc
in
mov
push
cmc
push
es
sub
mov
cmp
fsubrp
dec
test
inc
fs
fsubr
sbb
fsts
enter
cmp
and
push
addl
sub
sub
mov
leave
or
sub
clc
jle
mov
pop
jp
pop
dec
scas
xor
scas
mov
adc
adc
pop
mov
insl
sbb
loop
pcmpeqw
cld
sub
fiadds
out
fnstenv
jmp
aam
mov
cmp
mov
or
pop
lds
clc
popa
mov
jb
push
popf
fisubrl
in
sbb
sub
xor
lds
repnz
lock
outsb
arpl
and
xchg
movsb
xor
pop
add
push
cmp
pop
and
out
test
sbb
mov
fistps
ja
les
dec
lock
push
mov
add
dec
mov
cmp
loopne
sub
cmpsb
pushf
sub
sub
shll
negb
fisttps
cs
in
and
or
mov
iret
test
scas
adc
xor
mov
inc
clc
or
pop
and
cmp
movsb
stos
xor
ficoms
mov
in
sbb
addr16
lods
mov
insb
dec
loop
testl
mov
dec
mov
push
xchg
mov
dec
pop
sub
cli
xchg
test
cmc
in
and
movsb
pop
adc
mov
xor
ljmp
movsl
aam
out
leave
xor
ficompl
mov
pop
push
gs
aas
jl
jbe
je
inc
addb
mov
notb
fisubs
lock
mov
dec
lret
fbld
repz
and
idiv
cmpsl
std
xlat
mov
cmp
add
out
sarl
sub
int
cmpsl
mov
test
push
jmp
sti
fiadds
xchg
mov
sub
cld
insb
fmuls
and
cmp
pushf
and
sbb
inc
lea
sub
into
pop
or
fwait
aas
ds
push
dec
sub
mov
sbb
dec
add
mov
arpl
inc
fs
stos
pop
jnp
and
dec
add
fisttps
lahf
loop
jne
xor
sub
stos
mov
mov
sbb
sarb
out
xor
inc
icebp
and
fcom
cmp
jnp
mul
movsb
mov
xchg
in
jl
cmp
inc
and
push
stos
test
and
sub
mov
imul
outsl
cmp
stos
xor
add
mov
sbb
popf
mov
xor
mov
sarl
adc
inc
mov
mov
jns
add
jo
push
add
ret
pushf
jle
inc
imul
sub
adc
dec
jle
lret
adcl
dec
push
mov
push
movsb
xor
mov
and
cwtl
mov
push
mov
add
outsb
pop
pusha
into
int3
lret
mov
lods
test
cli
lea
fidivl
repz
xchg
xor
add
out
xchg
int3
lahf
push
pop
jge
xor
adc
dec
aas
ljmp
adc
and
mov
arpl
movsb
sbb
pusha
sbb
fisttps
movsb
jecxz
xchg
aaa
cmc
out
xchg
fs
add
stos
decl
jne
inc
add
stos
jo
cmp
push
les
push
out
xchg
xchg
subl
sub
xor
negl
sbb
pop
outsl
cld
jmp
mov
or
xlat
pop
insb
rorb
xor
int
and
aam
sub
pop
movsl
nop
inc
push
push
insb
and
daa
fstps
movsb
out
xchg
jno
jge
push
and
mov
nop
sbb
and
inc
pop
mov
pop
pop
push
popf
ljmp
les
out
pop
test
lcall
divl
xor
cmp
addr16
lock
mov
mov
or
xorb
xlat
push
or
jmp
xor
push
pop
idivb
ljmp
fdiv
leave
or
scas
rorb
pop
mov
jne
inc
sarl
mov
mov
js
mov
fistl
outsb
fs
jno
imul
mov
jne
dec
jae
mov
push
in
dec
sbb
fstl
int
inc
adc
mov
int3
jge
imul
push
push
inc
bound
cmpsl
jno
xor
jmp
xchg
or
les
imul
movsl
jo
cmp
test
mov
jae
cld
adc
stos
or
std
or
push
sub
lret
add
sbbl
xchg
lock
pop
in
fdivl
or
adc
int
ret
imul
ds
xor
mov
fcoml
cwtl
hlt
inc
mov
cmp
les
cmpsl
bound
xor
int3
mov
inc
out
scas
sarb
ss
mov
or
aam
xchg
inc
and
inc
ja
in
and
push
or
repnz
and
xlat
bound
in
xchg
or
dec
push
mov
cs
repz
mov
push
mov
fistps
dec
xor
adc
mov
xor
outsb
or
enter
jl
sbb
cmp
repz
push
pushl
jbe
or
mov
inc
xor
jge
rorl
pop
push
scas
subb
pusha
ret
dec
xchg
cmpsb
idivl
cs
pop
movsb
mov
scas
inc
xor
sbb
mov
rorb
test
mov
mov
icebp
jne
pop
push
cmp
out
pop
jnp
fs
push
mov
int3
xor
jle
lret
sahf
mov
sbb
sbb
cmp
sti
jecxz
add
call
inc
sbb
lods
sub
dec
and
mov
adc
add
sbb
jle
shrl
adc
mov
pop
outsb
loop
rorb
sub
ja
jp
in
mov
inc
jg
sbb
int
lret
push
jle
mov
es
popa
ror
mov
pop
incb
mov
inc
scas
add
cmpsl
lea
idivl
cmp
rcrb
jl
ljmp
mov
lea
dec
cmpsl
lock
into
sub
movsl
mov
jno
dec
or
orb
fadds
mov
pop
aad
or
cld
notb
add
inc
jl
cmpsb
or
stos
cmc
rorl
pop
cli
pop
in
cld
push
jb
cmp
mov
flds
jge
mov
mov
call
mov
les
sub
bound
sbb
in
js
xchg
sti
hlt
and
xorl
push
pop
cwtl
push
push
push
mov
pop
inc
xchg
mov
pop
mov
iret
or
jg
fnstcw
and
in
std
and
ss
scas
inc
pop
inc
sub
adc
sbb
cmp
into
mov
test
pop
cmp
nop
mov
outsl
notl
mov
mov
popa
mov
je
push
addb
test
pusha
dec
add
ja
out
test
adcb
js
push
sub
iret
jnp
hlt
mov
push
cmc
push
imul
push
shrb
push
sar
das
cmpsl
lods
cmc
dec
xchg
lock
or
adc
fadd
clc
dec
ljmp
jne
push
shll
lahf
and
lcall
lcall
mov
fsts
in
jl
repnz
or
dec
and
xchg
and
enter
push
sub
lds
ss
jnp
or
xchg
outsl
mov
les
jle
inc
sub
sbbl
pop
or
push
dec
jg
loop
inc
insl
adc
cld
adc
mov
mov
rcr
xchg
imul
in
test
subb
or
sub
xlat
xor
mov
xchg
fisubrl
jb
xchg
adc
pop
into
jg
cmp
cmp
nop
stos
mov
leave
dec
leave
lcall
cmc
mov
hlt
mov
mov
shlb
sarl
mov
lahf
daa
mov
jecxz
cmpsb
mov
hlt
cmpsl
int
fimull
cli
movsl
lods
push
cmp
xchg
xchg
ljmp
scas
dec
int
sub
cmp
xadd
sbb
imul
ficoml
mov
pop
mov
cmc
jnp
outsl
sbb
push
and
aam
mov
mov
or
mul
test
xchg
jge
xchg
xor
sarl
cmpsl
pop
pop
into
mov
fisubrl
imul
loope
sbb
jno
xlat
mov
mov
sarl
adc
add
test
lods
leave
pushf
xor
loop
mov
mov
into
je
leave
lahf
push
xchg
push
repnz
lds
js
cmp
xchg
cltd
mov
setns
es
lds
fmuls
movsl
daa
pop
shll
sub
and
fwait
into
pop
or
rcrl
jg
pop
popf
mov
fcmovnbe
cli
xor
fistl
mov
test
jge,pt
out
daa
in
jp
inc
insl
jb
inc
dec
gs
xlat
mov
shll
dec
push
adc
int
js
lret
ret
addl
adc
shr
mov
out
adc
add
xchg
mov
xchg
sub
imul
inc
out
push
sub
xor
and
mov
pushf
push
ss
das
pop
pushf
cltd
repnz
xor
jb
lock
and
test
frstors
xchg
rcr
xchg
notl
xor
mov
movsb
into
sbb
pop
inc
call
cwtl
xor
inc
das
outsb
push
jns
es
inc
out
roll
les
sub
push
jl
sbb
and
adc
lods
adcl
es
outsl
idivb
and
imul
push
das
and
test
dec
aas
outsl
mov
roll
push
aas
cmc
cmc
sbb
les
push
je
add
inc
ljmp
ss
dec
lcall
mov
insb
int3
xor
mov
xchg
mov
add
add
fistps
enter
dec
ret
mov
cmpsb
sub
mov
jp
int3
jmp
jb
and
lds
mov
mov
dec
lock
andl
std
and
inc
out
pop
add
in
shr
xor
lret
loopne
pop
shl
add
mov
ja
xchg
add
sti
push
rcl
jl
add
jb
and
lods
fmull
sub
jmp
js
or
jge
ret
or
stos
sbb
mov
pop
sub
mov
movsb
nop
test
adc
push
jne
aad
pause
or
mov
fcmovne
outsl
mov
pop
inc
push
scas
orl
loopne
sbbl
push
in
out
cs
test
cltd
je
test
test
mov
push
dec
mov
jns
xor
mov
mov
add
jl
lret
sbb
inc
lds
aam
xchg
xor
mov
pop
lahf
cmc
sahf
jns
addb
mov
adc
pushf
or
jns
jns
xor
xchg
sbb
cld
jns
jg
jb
lea
jno
mov
push
leave
clc
lods
aaa
enter
xadd
cmpsb
xchg
flds
xchg
pop
pop
aam
xchg
aad
sub
jne
dec
cmp
out
in
mov
xlat
pop
imul
push
add
pop
ljmp
loopne
add
inc
pop
loope
adc
gs
xchg
inc
fildll
mov
push
movsb
inc
jae
in
xlat
xchg
rclb
add
fsubrs
mov
cmp
mov
ss
xchg
xor
ljmp
sbb
mov
loopne
jge
enter
inc
cmc
sahf
pusha
testl
mov
dec
fwait
jg
repnz
push
repz
cmp
cvtdq2ps
std
pusha
push
mov
and
nop
xlat
cmp
clc
sbb
push
xchg
subb
push
adc
scas
push
mov
jnp
add
popw
test
push
into
sub
inc
sahf
test
addr16
inc
lret
mov
movsl
mov
adc
out
test
dec
dec
and
mov
jg
out
cmp
jmp
inc
repz
lret
jne
push
push
mull
mov
dec
movl
fcmovnbe
pop
repnz
add
loopne
arpl
lods
fimuls
sbb
into
mulb
out
jae
cmp
pusha
pop
orl
xchg
rcrb
cmpsl
jp
xlat
fidivrs
xor
aaa
adc
je
pop
sarl
loop
mov
xchg
aam
adc
jmp
push
push
mov
sub
stos
insb
aas
pop
and
out
leave
inc
sub
mov
ljmp
jo
adc
arpl
sahf
daa
push
es
mov
inc
int
aaa
inc
pop
cld
jo
sbb
ss
cwtl
xlat
pop
cmp
stos
lds
mov
fs
cmp
ljmp
push
adc
call
sti
bound
jmp
iret
movsl
leave
jecxz
aad
or
ljmp
mov
icebp
call
add
or
test
lret
iret
orl
ror
mov
stc
cmpsl
fdivs
push
mov
pop
in
icebp
fwait
pusha
mov
scas
sub
sti
movsl
xor
fnstenv
mul
into
mov
rcr
mov
sahf
clc
pop
fdivr
pop
movsl
sahf
out
sub
test
loopne
sarl
mov
outsb
vmptrst
or
mov
lods
das
js
inc
pop
test
shll
xchg
loope
cmpsb
fnstenv
jo
fnstsw
xchg
aam
popa
pop
cs
pop
sub
lds
cli
out
push
adc
addr16
mov
in
mov
rcll
jb
in
aad
mov
clc
sti
outsw
movsb
test
xchg
into
xchg
push
out
movsb
and
popf
xlat
call
nop
xchg
pop
into
and
in
sub
rorb
push
int3
jne
testb
popa
and
icebp
in
sbb
mov
inc
or
hlt
and
jbe
cwtl
fadd
jl
pop
mov
mov
adc
adc
imul
jno
icebp
xchg
dec
rcr
push
push
inc
pusha
mov
xor
dec
fidivrs
sbb
add
mov
aaa
daa
ljmp
pushf
push
xchg
dec
pop
lcall
addl
jo
mov
and
and
jnp
vpmovmskb
push
lahf
adc
icebp
imul
push
dec
outsb
mov
xchg
push
xchg
pop
repnz
dec
ljmp
aaa
mov
icebp
cmp
sbb
out
mov
mov
add
ss
xchg
jmp
icebp
cmc
xor
es
xor
mov
insl
mov
hlt
daa
mov
cwtl
push
bound
sub
jmp
jp
dec
mov
xor
xchg
or
ret
jecxz
cli
push
xchg
push
sbbb
xor
adc
jp
cmp
lahf
scas
mov
aam
enter
adc
lds
and
test
mov
cltd
adc
mov
sarl
loop
sar
cmp
mov
sbb
lret
inc
inc
mov
cmc
loope
sbb
jg
sub
outsb
sar
and
loop
adcl
fs
adc
je
lret
out
xor
cmp
inc
movsl
sbb
scas
xchg
das
stos
pop
sahf
fwait
xor
jno
xchg
clc
cs
mov
lock
mov
jbe
not
cld
sbb
out
jne
loope
icebp
call
mov
aad
dec
loope
pop
cltd
push
lods
adc
mov
sbb
movsb
inc
jle
add
sarb
nop
stos
xor
pop
jle
outsl
cmpsl
push
daa
or
test
mov
cmp
scas
pop
shll
les
jne
repz
repnz
add
and
orb
lods
jbe
xchg
aam
in
lods
cmp
pushf
push
add
or
enter
loopne
cmpsb
mov
dec
fwait
sbb
cmc
aas
data16
cmp
icebp
xlat
fmuls
push
bound
sbb
mov
fsubl
out
xor
lcall
mov
inc
enter
pop
dec
or
or
sti
out
push
push
jl
and
cmp
movsl
xor
inc
inc
inc
aaa
daa
aas
adc
and
xor
aad
sbb
daa
xchg
loop
mov
divl
jg
mov
in
mov
sub
mov
dec
cmp
fnstcw
pop
popf
ret
mov
pop
je
xor
add
pop
jne
jmp
xor
sub
shr
fsubrs
hlt
ret
ljmp
jno
or
pop
out
dec
cmp
or
fscale
gs
std
push
fisttpl
call
push
jne
sub
rcl
inc
inc
jmp
out
nop
cs
stos
pop
bound
loop
fwait
aaa
inc
or
repnz
daa
and
out
sub
inc
sti
adc
out
fisubrl
sbb
cmpsl
lock
mov
jl
fbld
test
js
mov
movsb
xorl
pop
mov
push
xor
xlat
je
fwait
insb
pop
addr16
cmp
jle
mov
mov
insl
xchg
adc
or
dec
out
test
fdivrp
mov
add
decl
testl
fiaddl
inc
cmp
aas
fsubl
ret
fstpl
outsl
jns
cmp
mov
mov
ja
aam
mov
push
fadds
ret
loope
sub
inc
sti
stos
pop
test
hlt
call
sub
inc
or
clc
aad
fcoml
loopne
xor
and
or
inc
wbinvd
fwait
jo
sti
pop
sub
xor
test
mov
imul
dec
mov
and
mov
cld
das
push
loopne
lds
xchg
adcl
addr16
lock
clc
xchg
vpand
pop
pop
fdivrs
rcrl
loope
sbb
das
xor
lods
cmp
or
movl
outsb
prefetch
xchg
lcall
rcrl
mov
or
pop
lret
in
jl
negb
sahf
mov
push
arpl
mov
icebp
test
ljmp
sub
test
dec
mov
in
and
test
pushf
out
or
gs
mov
int3
sbb
push
bndldx
out
cmp
and
pusha
xlat
jp
out
inc
lock
fndisi(8087
or
dec
jo
xor
jmp
leave
fnstsw
jne
int
stos
inc
repnz
push
in
xor
jns
leave
repnz
mov
mov
jle
fdivrp
iret
loope
pop
xchg
and
pop
jnp
and
mov
imul
imul
jp
les
push
nop
hlt
mov
pusha
mov
bound
dec
insl
sub
pop
sub
out
adc
lods
pop
stc
mov
or
ret
in
mov
sti
mov
sub
int
rcl
iret
xchg
push
jge
sbb
xlat
dec
cmp
popa
mov
dec
call
xchg
cmp
xor
sub
int
test
ds
lds
and
nop
lods
mov
add
shr
push
sub
mov
shlb
lea
push
pop
add
mov
pop
sbb
jb
jo
jbe
push
xor
aad
xchg
jb
mov
push
scas
cli
dec
cltd
scas
mov
in
fdivl
xorb
mov
fistpl
push
in
lret
arpl
out
push
into
add
cmpsl
into
mov
xchg
outsl
rcrl
mov
pushf
sub
cltd
xor
dec
inc
inc
popa
mov
rcl
negl
daa
out
lcall
xchg
nop
sub
xor
test
pop
iret
out
mov
pop
xorb
dec
add
ja
testb
mov
fst
rorb
imul
or
addr16
xsaveopt
pop
shlb
add
and
enter
xor
add
pop
movsl
sbb
mov
xchg
ficomps
xchg
pop
fldenv
jmp
xchg
and
sbb
jg
mov
inc
popf
rcl
xor
js
push
mov
mov
mov
inc
out
push
outsb
test
test
mov
jns
gs
ds
andb
rcll
out
pop
add
mov
into
cmpsb
stos
insl
movsl
cmp
loop
xchg
mov
ljmp
gs
into
movsl
jae
lahf
xor
mov
cltd
mov
xor
js
xchg
shlb
jns
in
ficoms
aas
jp
add
mov
sahf
fidivrl
push
insl
mov
pop
and
aad
daa
mov
xlat
xchg
loop
out
shl
cmp
es
bound
daa
mov
sbb
adc
jmp
inc
test
dec
add
fdivs
xor
and
aam
in
lahf
mov
and
movsl
mov
inc
popf
testb
mov
mov
mov
divb
lods
mov
jb
sbb
jnp
mov
lock
sub
insb
xor
pop
test
lret
adc
insb
icebp
or
add
jb
andl
xchg
popf
test
add
movsb
adc
and
aad
push
pavgb
scas
sbb
inc
dec
repz
idivl
fisubs
inc
push
sbb
xor
dec
loope
mov
sub
in
push
cmp
pop
cwtl
cwtl
jb
shrb
jmp
cld
jg
mov
out
inc
lods
jmp
cld
pusha
lods
sub
fistpll
push
insl
imul
scas
push
cmp
xchg
imull
sub
negl
repz
mov
push
fcoml
mov
hlt
and
lods
cmp
jp
jp
cld
inc
sub
jae
xchg
jmp
push
xchg
stc
fstpt
push
mov
popl
ljmp
and
sbb
jne
or
adc
xchg
daa
neg
dec
adc
mov
pop
imul
xor
jo
sub
push
popa
jb
popf
dec
jl
cmp
push
out
mull
out
out
fstl
jg
ficompl
mov
mov
pop
cli
mov
sbb
rcl
out
sub
daa
add
jne
movsl
cmp
ret
or
fmuls
std
mov
jnp
push
jno
sbb
xor
sti
add
clc
aas
dec
ret
push
das
mov
inc
and
jns
popa
pop
adc
push
xor
adc
fucomi
jbe
push
jae
mov
notb
dec
pop
dec
sbb
mov
cmp
pop
jecxz
rclb
out
add
loopne
ffree
in
cmp
xchg
sub
in
sbbl
rcrl
pop
lea
fwait
push
pop
push
sub
hlt
popa
fsubrs
cmpsl
mov
jno
add
mov
ljmp
xor
outsb
mov
or
lds
notb
mov
jge
out
xchg
lret
sbb
ja
adc
daa
xor
sbb
xlat
iret
je
test
cld
rorl
adc
cmp
je
xor
inc
pushf
cmp
or
insb
pop
pop
dec
fcmovbe
rcrb
adc
sti
fwait
jo
out
pop
imul
push
and
nop
adc
dec
dec
cmp
test
cli
jge
aas
push
clc
cmpsb
inc
loopne
xor
addl
mov
icebp
sub
mov
js
mov
cmc
cwtd
int3
aas
push
mov
lds
js
push
cmp
adc
nop
dec
push
scas
fisubs
add
iret
fdivl
ret
xchg
sub
jmp
fdivr
pop
jl
bswap
icebp
pop
sbb
cld
inc
push
addr16
insl
jb
outsb
mov
mov
js
xor
mov
dec
out
mov
inc
in
inc
rorl
mov
adcl
fwait
xchg
je
jmp
out
into
and
aaa
mov
ss
dec
mov
icebp
lcall
fwait
or
repz
in
scas
cmp
addb
ja
xchg
aaa
or
nop
insl
and
pop
push
in
jmp
sub
inc
push
inc
push
imulb
and
pusha
mov
mov
fabs
std
cltd
and
arpl
push
test
cmc
push
mov
pop
mov
andl
mov
cli
cmp
shlb
aas
mov
jno
fwait
orl
xchg
jl
mov
pop
inc
cmpl
cmp
fs
xlat
or
mov
sbbb
out
push
shrb
ret
xlat
scas
cmc
sahf
je
sub
lahf
lds
in
sub
mov
psubw
mov
stos
or
popa
sbb
fimull
cltd
nop
mov
sub
sub
and
jmp
enter
popa
dec
lret
dec
and
adc
dec
mov
sbb
add
inc
add
sub
addr16
mov
cmp
out
shll
mov
repnz
test
or
inc
scas
push
loop
cmp
scas
push
cmp
mov
sar
repnz
add
cmpsb
int
je,pt
jecxz
push
mov
cmp
stos
scas
outsl
xchg
push
aad
mov
xor
push
push
insb
rcrb
std
pop
mov
test
cmp
jge
xchg
ds
adc
sti
call
enter
out
pop
fbld
imul
sub
int3
sahf
arpl
jle
mov
xlat
mov
inc
out
sbb
xchg
sbb
push
jp
jg
ja
jle
dec
gs
test
sub
bound
jmp
out
sbb
clc
pop
push
stos
incl
and
pop
inc
pop
inc
rcrl
push
mov
shlb
mov
jbe
pop
xor
cmc
insb
jnp
xchg
push
stc
icebp
mov
xor
cmpb
leave
and
aaa
mov
filds
test
mov
adc
rorl
dec
jnp
cld
mov
mov
dec
dec
jmp
cmpsb
out
jp
or
mov
mov
es
push
sti
call
fwait
outsb
mov
mov
xchg
pop
sbb
xor
lods
test
inc
sub
and
incl
ret
or
lea
lcall
or
cwtl
xchg
xlat
icebp
mov
sti
sbb
dec
pusha
xchg
sbb
jg
adc
or
repz
in
push
jmp
lcall
bound
mov
jge
inc
pop
push
lahf
sahf
or
aaa
sub
movsl
addr16
lahf
scas
mull
or
stos
movsl
fcomps
lock
inc
mov
cmp
cmp
push
sub
add
add
pop
sbb
mov
push
and
movsb
cmp
outsl
jns
movsl
addr16
dec
sub
out
daa
mov
pushf
cmc
sub
stos
shl
dec
push
in
xchg
iret
dec
adc
jg
sbb
sbb
or
adc
mov
adc
pop
lret
pop
add
loopne
fcmovbe
arpl
push
es
push
mov
pushfw
pusha
sbb
inc
sarl
sbb
sbb
pop
cmp
adc
push
push
xchg
gs
mov
mov
sahf
leave
pop
xor
pop
xor
pushf
jecxz
pop
dec
xchg
enter
sub
test
loope
gs
adc
bound
push
mov
addl
rorl
pushf
enter
cli
shrl
mov
pop
subl
or
push
mov
dec
xchg
or
xor
mov
add
push
sub
mov
pop
jne
xor
cmp
inc
push
cs
inc
repz
xchg
cmpb
ljmp
lret
jecxz
outsl
adc
sbb
sub
sbb
pop
or
in
lods
decb
fwait
lret
aaa
jmp
lcall
pop
out
jle
out
test
in
add
add
pop
insl
cmc
pop
sbb
xchg
dec
sbbl
pop
xor
ret
lds
dec
push
pop
or
sub
or
fmulp
ja
xchg
jmp
mov
mov
add
loopne
cmp
xor
add
jg
mov
adc
testb
mov
sbb
xchg
or
negb
inc
stos
rcll
outsb
xor
shlb
ds
and
ficoml
jmp
jle
sarl
sbb
add
scas
in
or
adc
addr16
add
mov
fistps
bound
mov
cmp
xchg
push
arpl
cmp
mov
mov
adc
fsubl
push
jmp
stc
lea
jle
pop
inc
mov
arpl
arpl
cwtl
sbb
inc
push
rorl
mov
addb
es
mov
xor
scas
jbe
imull
xor
xchg
or
mov
pop
cmp
inc
pop
jg
and
and
mov
fmul
int
or
pop
or
out
ss
xlat
mov
inc
popf
movsb
cltd
adc
dec
mov
mov
or
sub
ljmp
add
inc
mov
int3
sar
fcomps
xchg
addr16
imull
xchg
adc
mov
scas
or
sbb
dec
mov
pop
sbb
lret
lret
mov
out
bound
lret
mov
in
insb
mov
fisubl
leave
mov
data16
mov
mov
pop
lock
cmp
andb
negb
outsl
mov
jle
addl
test
mov
jp
pop
push
sub
sbb
loope
mov
inc
std
das
fisubl
sub
in
pop
fcmovb
dec
scas
in
add
dec
and
loope
mov
mov
loop
popa
add
cmp
insl
dec
out
fiaddl
jp
mov
jns
mov
and
push
xchg
out
sbbl
sbb
scas
mov
outsb
aad
test
stc
aaa
aas
sbb
in
jmp
lret
jne
ja
stos
jmp
fcmove
rep
lret
ja
sbb
mov
cwtl
jmp
xchg
rorl
adc
xor
cmp
repz
fistps
jo
jle
mov
xchg
mov
sub
or
cwtl
adc
push
inc
sbb
ja
rcrl
xor
cmp
jne
out
jb
adc
lock
or
push
jecxz
dec
sbbb
mov
jo
mov
xchg
xchg
push
mov
fsub
jecxz
lcall
and
and
insb
push
fildl
cld
xor
cwtl
out
jbe
or
fldcw
lock
out
mov
out
and
loope
mov
in
pop
into
popl
push
mov
sub
int3
stc
inc
fisttpl
pop
pushf
sti
pop
dec
inc
mov
jg
jg
lea
fisubs
daa
lds
adc
inc
ljmp
mov
ds
cltd
outsl
and
pop
das
sub
aas
fcomps
out
mov
push
pop
ftst
sub
sub
loopne
jns
add
sarl
cmp
out
jnp
inc
or
push
mov
cmp
stos
push
in
cmp
adc
pop
mov
or
insl
js
push
inc
ss
xor
pop
out
cmp
mov
mov
notb
dec
mov
rcll
or
push
aaa
inc
and
inc
popf
mov
and
mov
jno
and
sbb
lds
imul
insl
pusha
dec
lods
jp
pop
or
int3
loope
lods
cmp
jmp
lret
iret
sbb
sub
add
cmpsl
fst
cmp
inc
shll
dec
pushf
mov
pop
in
je
dec
xchg
pop
sbb
ror
ja
pop
jl
jno
mov
out
xorb
stos
mov
sub
lcall
scas
test
xchg
ja
sbb
mov
stos
imul
inc
shll
cmp
inc
pop
mov
fstp
sahf
dec
mov
test
add
lcall
adcl
push
xlat
jbe
lret
add
mov
adc
push
adc
in
push
dec
mov
cld
jne
rcrb
je
pop
mov
iret
lahf
and
pop
xchg
and
mov
push
cmp
push
int3
push
xchg
pop
pop
in
nop
mov
jle
lahf
jne
insb
aaa
mov
loopne
imul
mov
rcrl
inc
xchg
add
ljmp
mov
sti
int
lret
pop
cmpsb
les
cmc
loope
neg
or
xchg
fistl
lret
mov
loope
jno
pop
stos
lods
imul
mov
pop
push
ss
xchg
sub
xor
dec
xor
or
mov
sbb
xchg
jbe
fcmovnu
and
pop
dec
xor
testl
int
inc
imul
out
in
mov
fstps
mov
imul
mov
mov
lds
push
jg
ljmp
addr16
jp
pushf
cmp
mov
mov
cmp
jno
pop
mov
addb
dec
ret
pop
jmp
add
testl
sub
outsl
dec
xor
std
add
cltd
ror
pop
imul
inc
jp
icebp
dec
sub
dec
test
push
sbb
cmpsb
sbb
lods
mov
sahf
imul
cmpsl
std
out
movsb
mov
and
mov
sub
sub
enter
cmp
sbb
test
sti
cmp
enter
lret
ret
cld
jge
nop
scas
jb
add
mov
mov
push
ficoms
loop
inc
pusha
sbb
mov
aas
lcall
bound
xor
adc
int
mov
int
sub
ja
mov
cmp
insl
daa
scas
outsl
mov
jns
inc
sub
inc
ljmp
mov
jg
bnd
lock
in
fnsave
call
or
ja
sbb
mov
test
add
xor
pusha
cmp
inc
xchg
or
std
loope
xor
pop
cmc
loope
dec
and
xchg
jg
push
adc
mov
dec
insb
shll
aas
inc
pushl
xor
test
shl
fbstp
or
aaa
stos
sub
mov
sub
icebp
sbb
jmp
movl
andb
pusha
les
aaa
inc
rcrb
xchg
test
fnstsw
pop
fisubs
pop
idivb
pop
mov
and
lock
mov
fs
mov
je
cmp
jle
push
cmp
pop
jnp
lds
xlat
pop
inc
gs
cmpsb
imul
mov
fnsave
dec
fildl
and
mov
popf
xor
insl
jb
inc
sub
add
out
push
sbb
xor
out
and
jae
js
or
mov
xchg
cmp
sub
lret
dec
adc
std
xchg
pop
lret
xchg
adc
and
mov
arpl
xor
adc
pop
jno
rcrb
mov
lods
in
mov
cld
jnp
out
pushf
call
inc
mov
dec
sbb
out
mov
rol
out
movsb
fldt
cmp
pusha
inc
dec
imul
sub
aam
xor
and
sub
fmull
cmp
icebp
pop
subl
std
xchg
mov
popa
inc
sbb
xor
pop
arpl
outsb
push
add
push
test
push
add
dec
stos
test
mov
pushl
out
sbb
mov
adcb
hlt
jbe
and
adc
sub
cld
into
outsb
movsb
mov
fildl
jmp
test
jg
call
enterw
and
cltd
mov
js
fstpt
jbe
mov
sbb
repnz
cld
push
adcl
sub
xlat
mov
sub
xchg
jo
ljmp
out
sbb
jnp
andb
cmp
cltd
out
dec
cmpsl
xchg
sub
shlb
jnp
mov
cmpsl
pop
jno
xchg
mov
pop
cwtl
mov
loop,pn
sub
idivl
es
pop
mov
pop
mov
ljmp
outsb
roll
in
adc
test
fs
inc
adc
push
jb
dec
xchg
lcall
and
xorl
call
add
nop
xchg
push
rorl
mov
negb
stos
cmc
and
idivb
xchg
insb
data16
data16
dec
xor
mov
pop
mov
repnz
pop
xchg
mov
daa
imul
into
vandnps
loope
mov
add
nop
movsb
repnz
and
pop
cltd
and
add
fucom
outsb
xchg
mov
andb
lret
inc
adc
mov
sti
inc
adc
rcrl
lods
mov
test
xchg
add
sub
add
mov
loope
rcrb
shlb
test
outsl
ret
adc
and
loope
mov
sbbl
dec
rorb
or
jns
inc
cmp
jo
cmp
inc
rclb
or
test
das
iret
test
fmulp
mov
lods
xchg
shlb
rcr
jno
popa
rclb
roll
push
ret
mov
nop
xor
pop
sbb
aad
push
hlt
sbb
ret
mov
mov
shll
sbb
xchg
push
repz
xchg
movsb
mov
popf
insb
cld
jo
fwait
lods
cmp
outsl
icebp
cmpsb
cld
push
sub
add
sbb
xchg
pop
stos
je
mov
mov
iret
adc
push
dec
push
pop
jge
dec
pop
out
fs
xor
cmp
lds
push
js
sub
lods
enter
and
sub
cmp
les
neg
in
pop
pop
mov
std
pusha
adc
push
jo
push
les
test
bound
loop,pt
movsb
hlt
call
dec
scas
xchg
pop
nop
pop
add
mov
inc
cmpsb
pop
and
lret
ret
push
sub
subl
outsl
ljmp
push
in
cmp
sbb
and
or
fists
das
pop
inc
gs
rcl
dec
jns
stc
leave
add
sbb
xchg
les
push
outsl
fildl
pop
pop
enter
mov
jnp
mov
mov
test
mov
adc
xchg
sub
fistpl
call
mov
mov
sbb
fs
dec
int3
gs
adcl
orl
lahf
pop
sahf
xor
aad
xchg
add
xchg
fstpt
mov
sub
in
push
js
pop
cmpl
push
adc
data16
in
insb
cmpsb
inc
andl
in
fldenv
test
into
pop
inc
mull
xor
pusha
arpl
ss
repz
movl
jl
outsl
addl
mov
push
push
imull
mov
fidivs
loop
cmpsb
les
out
ror
jp
aam
test
fcompl
repz
fldcw
dec
pusha
add
mov
push
jbe
les
int3
ss
cmp
rorb
push
add
sbb
push
add
dec
cmc
ja
cs
push
mov
cli
ret
sbb
add
push
test
test
xorl
fiaddl
arpl
xchg
shrl
int3
xor
sub
mov
loopne
inc
dec
mov
xor
mov
xchg
inc
pop
mov
ja
push
int
dec
idivl
xchg
test
stos
cltd
fildll
test
dec
xlat
loopne
ljmp
or
mov
cltd
sar
push
cmp
enter
add
cmp
jmp
or
dec
sbb
push
test
dec
lret
in
movsl
dec
adc
clc
pop
shrl
ss
mov
gs
scas
ds
sub
lods
mov
imul
push
or
add
push
enter
leave
cmp
dec
scas
dec
add
into
lds
xchg
stos
or
push
dec
shll
out
jecxz
movsb
add
dec
rclb
push
out
xchg
movsb
f2xm1
aas
dec
add
loop
imul
fdivrl
sbb
jmp
iret
loope
call
mov
jae
shlb
std
mov
clc
dec
cmp
aam
inc
adc
mov
enter
push
sti
pop
sbb
cmp
jne
ds
jmp
lcall
shld
out
dec
dec
xor
mulb
fcmovb
scas
subb
daa
mov
jb
dec
aad
call
and
xchg
daa
jg
cmp
lret
stos
ficompl
test
mov
adc
enter
sub
adcl
add
lods
pop
mov
aam
stc
xchg
sar
add
jne
icebp
addr16
pusha
jmp
mov
stos
sub
repz
and
jl
idiv
daa
sbb
cs
cmp
popf
pop
fisttps
fs
lock
lods
pop
rol
imul
mov
pop
mov
inc
in
sarl
sbb
jecxz
mov
xor
cld
test
mov
imul
movsl
xchg
fisttps
cmp
test
lret
je
mov
fisubs
rol
mov
call
les
adc
jg
mov
mov
push
fwait
popf
std
loop
sbb
negl
jo
cmpsb
xor
adc
js
pusha
inc
in
sbb
pop
cmpsl
int3
xor
xchg
or
pop
mov
test
dec
sbb
jne
push
sub
rcll
test
daa
popa
imul
or
test
xor
mov
xor
inc
lret
shll
sarl
nop
push
mov
mov
fcomi
xchg
call
mov
xor
push
mov
jecxz
lock
xlat
dec
xchg
sbb
push
and
enter
mov
cmp
inc
out
mov
jmp
int3
inc
imul
addr16
sub
jns
testl
xlat
jecxz
push
repnz
xchg
movsl
call
lods
sub
psrad
aaa
sub
and
imul
sub
ss
repz
leave
ds
ljmp
mov
rcr
sarl
popa
fcmovnb
xchg
inc
cli
bnd
aam
out
jo
cmp
sub
iret
dec
dec
xchg
xchg
xor
push
mov
dec
push
cwtl
jmp
mov
mov
adc
repz
push
inc
dec
je,pt
and
push
pop
sub
fbstp
icebp
cmp
negl
adc
jmp
hlt
lret
out
addr16
outsl
test
fisubs
mov
sub
cld
lds
jb
dec
test
aas
das
and
movsb
shll
xor
sub
xchg
push
std
in
daa
lods
cmpsl
insl
icebp
fnstsw
sbb
xor
or
xchg
inc
mov
xchg
push
jg
and
adc
std
cs
fdivl
push
test
int3
dec
and
mov
mov
xlat
movsb
lret
lods
jg
data16
lcall
xchg
and
aam
test
dec
mov
jae
mov
in
mov
hlt
sub
je
sub
stos
dec
or
jns
call
dec
addr16
movsl
jle
aas
push
dec
sbb
push
jge
and
pop
jecxz
push
push
mov
mov
mov
stc
cmc
add
sbb
mov
xchg
add
dec
sub
mov
bound
dec
jp
js
xor
imul
test
scas
adc
movsl
add
mov
negl
sahf
pop
repnz
cltd
cli
in
arpl
in
sahf
mov
and
cmp
fs
stos
in
xchg
clc
fdivl
insl
jae
in
pop
add
adc
add
jmp
rcll
sti
pushf
imull
test
daa
xorl
push
sub
mov
jecxz
imull
push
stos
cmpsl
inc
sar
jns
pop
mov
faddp
pop
and
pop
xor
fnsave
jmp
scas
xor
jmp
mov
lret
mov
cmp
jne
pop
cmp
sbb
ds
lcall
fs
imul
sahf
pushf
cwtl
adc
das
scas
loope
inc
gs
jb
dec
neg
cli
bound
jmp
jl
jno
pusha
xchg
cmpsl
lods
push
mov
cli
aam
cmp
je
mov
enter
dec
pushf
jg
and
add
sbb
dec
stos
and
dec
enter
jne
mov
je
lcall
xchg
cmpsb
sarl
pop
dec
sub
gs
enter
add
sarl
cmpsl
andb
dec
sbb
les
fcoms
cmp
insb
pusha
jmp
jb
sub
mov
adc
shlb
fiaddl
in
xor
rcrl
xchg
and
movsb
ds
cld
popa
ljmp
mov
jbe
mov
add
shrl
imul
stc
inc
sbb
sub
in
rclb
test
addr16
into
test
std
push
fildll
sbbl
and
mov
mov
lods
xchg
in
xchg
pop
popf
int
fisttps
aad
xor
jns
loop
mov
call
fldl
jecxz
jg
xchg
in
inc
mov
cmp
gs
sub
lcall
aam
mov
aas
lret
jg
das
add
inc
push
ljmp
fcmove
cmp
or
dec
adc
mov
enter
and
lods
mov
dec
mov
xchg
das
in
test
stos
popa
lods
repz
push
pusha
in
repz
adcb
adc
push
jns
cmpsb
rolb
or
jmp
fnstcw
fsts
pop
sub
nop
nop
push
sbb
mov
out
jle
scas
cvttps2pi
sub
nop
pop
jb
std
cmpsb
xlat
or
jg
jb
fs
rolb
lds
repz
in
xor
add
xorl
mov
xchg
shlb
xor
ret
sub
push
int
enter
push
aaa
add
lock
sub
or
push
xchg
push
and
aam
or
fs
xchg
cmp
insl
imulb
xor
mov
mov
xchg
out
and
jmp
push
cmpsb
dec
mov
dec
inc
pop
jae
and
clc
inc
int
push
icebp
shrl
std
setae
push
in
jne
dec
cld
insl
mov
jo
mov
xor
dec
rorb
popf
mov
or
mov
es
adc
movsl
push
dec
push
fstps
fcoml
ljmp
mov
iret
out
jb
or
pop
aas
or
add
jmp
push
call
mov
dec
mov
sbb
xor
and
or
imul
mov
lock
inc
cmp
adc
jle
jno
sahf
pop
mov
push
mov
push
xor
loope
or
sub
jecxz
movsb
add
jl
push
insl
add
mov
mov
inc
push
xchg
pop
jmp
clc
in
xor
dec
jb
sub
outsl
push
dec
mov
xchg
cmp
push
jnp
jo
mov
inc
xlat
shl
dec
test
insb
lea
sarl
jle
out
add
bound
scas
xor
fldenv
cmp
popf
pop
push
scas
mov
nop
adc
lcall
lcall
lret
into
mov
jg
inc
fprem
js
sbb
push
cmp
push
mov
cmp
ret
sub
add
shr
cltd
fs
push
fdivrp
lahf
mov
push
inc
aaa
dec
out
xrstor
ficoml
jp
add
push
xor
pusha
inc
repz
aas
lahf
or
in
sub
in
enter
jne
add
orl
test
push
mov
mov
in
lahf
inc
or
shrb
loopne
pop
inc
push
js
in
incb
adc
xor
add
dec
pand
and
and
and
sbb
ret
inc
js
addb
movsl
mov
insl
mov
xchg
data16
cmp
xchg
jae
xchg
les
cmp
pop
dec
pop
or
push
or
mov
ret
cmp
fcoms
add
es
jb
sbb
outsl
mov
cmpl
adc
popa
cltd
adc
je
pushaw
popf
mov
icebp
jmp
or
sbb
loope
loop
das
and
add
inc
aaa
mov
fisubs
cmp
jmp
fs
pop
pop
mov
enter
aad
setp
mov
inc
dec
cmp
fidivrs
push
mov
push
out
cmp
lds
or
add
add
and
lds
or
jmp
pop
repz
or
sub
stos
scas
notl
sub
loop
std
movsb
push
xchg
push
sbb
mov
idiv
push
scas
jae
lcall
fiaddl
xor
sahf
xor
mov
mov
ljmp
movsl
jo
int
sbb
add
adc
push
mov
jecxz
mov
fwait
mov
daa
nop
mov
fdivrs
in
call
sbb
mov
mov
nop
mov
je
sar
jp
cmp
jae
mov
xchg
cld
int
sbb
mov
scas
mov
addb
and
cmpsl
pop
jp
rcll
js
sub
mov
mov
adc
fmuls
pop
mov
mov
push
aad
fwait
imul
and
test
sub
push
mov
incl
dec
lods
sbb
inc
popf
jne
or
negl
shl
inc
push
jae
ljmp
popf
test
in
pop
pop
daa
xchg
xor
loop
shrl
sub
sub
mov
and
adc
add
and
push
insb
mov
cmc
sbb
add
push
xor
fdivrp
inc
es
sub
pop
mov
adc
lock
push
and
int3
dec
shll
lods
call
in
push
insb
xchg
repnz
popf
psraw
rcrl
mov
and
or
lcall
cwtl
sbb
push
mov
xor
add
mov
test
addr16
int
pusha
jge
test
xlat
pop
std
int
add
out
dec
push
inc
aad
mov
popf
sahf
mov
cmp
cmp
jbe
jl
hlt
andb
movsl
mov
cmp
adc
movsb
push
aam
mov
add
in
xor
ror
inc
aam
sub
xchg
int
lret
xlat
mov
into
dec
aaa
sub
insb
pop
into
gs
pop
flds
jle
movb
aas
xchg
mov
mov
pop
cmp
movsl
and
and
shr
mov
sub
lds
ss
jns
push
xor
add
xchg
mov
vmovups
addl
sub
cmpsb
and
stos
xor
mov
xor
xchg
pop
and
nop
push
outsl
xchg
push
call
pop
cltd
movsb
inc
out
and
mov
mov
call
sub
add
test
push
dec
sub
daa
dec
je
cli
fwait
lock
clc
xchg
shll
aas
pop
enter
cwtl
pop
jnp
test
sub
jnp
jmp
mov
shufps
outsl
andb
push
xchg
loop
mov
nop
mov
neg
push
cmp
dec
and
std
sbb
lods
or
ret
or
push
xlat
imul
cmpl
fisubrs
jg
jno
dec
in
das
movl
jne
xor
cltd
xor
rclb
cmp
jnp
mov
xchg
loop
roll
cmp
or
mov
into
out
aas
inc
iret
jbe
pushf
fsin
pop
dec
pusha
inc
shll
push
sub
enter
xor
or
and
and
adc
ds
sub
out
pop
sbb
fadd
std
aad
mov
cwtl
outsb
mov
jns
and
fbld
dec
mov
mov
push
int
mov
dec
stos
mov
mov
mov
xchg
dec
popa
loopne
and
orl
inc
dec
fcompl
test
push
dec
add
pusha
dec
or
int3
stos
adc
adc
gs
push
xorl
jl
cmc
dec
cmc
mov
cmp
movsl
mov
jnp
ja
stc
outsl
mov
cmc
fmull
sub
xchg
out
call
es
push
sub
repnz
ret
test
sub
inc
les
pop
inc
push
sbb
cmc
jo
adc
mov
fbld
in
dec
cmpsl
sub
mov
adc
mov
mov
loop
shr
cmpl
je
sub
mov
and
in
push
lret
mov
mov
sub
mov
scas
mov
in
adc
stc
mov
jmp
call
fs
add
mov
xlat
mov
or
jle
imul
cmpsl
aam
out
cwtl
push
inc
insl
ror
or
mov
pushf
insl
inc
and
xor
out
mov
cmp
push
sub
mov
mov
stos
call
sbb
mov
mov
mov
cltd
push
xor
lea
jbe
mov
mov
pop
push
mov
dec
push
pop
pop
mov
stos
test
movzbl
ret
enter
sbb
sbb
repnz
xor
xchg
mov
test
add
push
pop
and
jl
pop
mov
rcrb
or
in
fcomp
mov
into
fs
pushf
imul
or
test
nop
xchg
sbb
outsb
xor
mov
stos
push
scas
dec
xchg
outsl
arpl
mov
popf
es
pop
add
sbb
xor
mov
jne
enter
xor
lock
push
jns
lcall
inc
lods
mov
and
sub
mov
inc
sbb
cmovge
dec
adc
int
inc
je
or
and
inc
or
xor
rcrb
aaa
lret
mov
iretw
cmp
sub
lret
int
mov
sub
pop
sahf
rolb
jmp
mov
sbb
cmpb
test
cli
jl
pop
pop
xchg
subb
fsubl
adc
push
inc
scas
mov
jbe
aaa
xor
sbb
rcr
ss
shlb
inc
test
lcall
mov
dec
mov
pushf
xchg
out
push
sbb
pusha
cs
in
out
ficompl
dec
ss
mov
popa
imul
out
ljmp
sub
adc
in
jo
ss
push
ljmp
inc
cwtl
cld
pop
loop
in
jno
sbb
xchg
ret
dec
sbb
jmp
cli
mov
lods
notl
cmp
push
xchg
dec
push
cltd
jmp
out
in
and
fs
xor
or
roll
out
add
pop
ja
out
hlt
aad
or
out
aas
cmp
imul
jle
sbb
adc
imul
mov
mov
inc
xchg
imul
mov
cmpsb
mov
xor
cmp
pop
inc
sar
or
xchg
nop
lea
fstp
mov
popf
mov
mov
shl
lods
jmp
xor
inc
inc
pop
imul
iret
xor
mov
test
jl
cli
cld
dec
inc
imul
sub
clc
lahf
xchg
movsl
nop
popf
cmp
nop
into
les
adc
adc
repnz
rolb
rolb
jp
test
or
out
out
int3
xchg
mov
xor
gs
loop
sub
and
dec
push
out
cmp
int
mull
out
ss
pop
or
enter
push
imul
jle
pop
and
rorb
mov
inc
mov
mov
jne
faddl
xchg
test
lcall
add
mov
mov
fidivs
es
fildll
hlt
and
cmp
lcall
shrb
daa
cli
inc
mov
cmp
clc
nop
int3
cli
scas
sub
jmp
xchg
out
mov
repnz
add
aaa
add
mov
test
fs
fsub
inc
mov
push
cli
int3
sub
mov
jle
aaa
sub
and
cmpsb
xchg
jp
pop
lds
push
cmp
out
jae
lret
psubb
pusha
lods
push
js
cmc
enter
xchg
xchg
sahf
or
test
pop
xlat
mul
hlt
or
pop
arpl
mov
pop
lods
std
inc
out
add
sbb
sbb
cwtl
jno
pop
lret
daa
pop
inc
mov
lgdtl
mov
test
push
xor
popf
scas
pop
xor
mov
test
sbb
sub
lahf
dec
fwait
ljmp
push
fldt
fadds
scas
xor
aas
push
add
loop
mov
cmpsl
mov
dec
push
push
or
lret
xchg
insb
push
std
cmp
and
mov
je
mov
fmul
jnp
xchg
dec
inc
std
loopne
jmp
and
pushf
je
inc
aam
dec
sbb
cmp
movsb
pop
arpl
cmp
cmovs
xor
jg
dec
sbb
insb
aad
jp
push
or
ucomiss
mov
cli
fbstp
ret
aad
nop
and
in
dec
out
dec
test
add
sahf
mov
jle
inc
movsl
sub
pop
in
pop
xchg
adc
mov
std
mov
mov
fidivrl
sarl
or
cltd
xchg
jmp
mov
mov
xchg
inc
or
pushf
jmp
lods
adc
test
cmp
and
mov
mov
int
inc
mov
int3
xor
dec
cmp
hlt
and
in
out
jb
dec
add
jnp
add
jns
pop
sub
fildll
add
cmpsb
les
and
adc
cmp
sbb
pop
in
and
and
and
sbb
arpl
sbb
xchg
hlt
ret
sbb
push
or
push
pusha
jecxz
ret
sbb
inc
push
jae
dec
scas
push
mov
push
add
rdpmc
cmp
addb
insb
or
sbb
xchg
por
add
push
cmpb
out
sub
dec
mov
ret
lea
ja
push
mov
sub
lods
test
jg
adc
sub
outsl
gs
push
dec
push
mov
dec
add
inc
pop
cmp
test
inc
test
mov
mov
mov
jae
cmp
pop
cld
pop
xchg
jnp
out
js
sub
and
adc
jg
shlb
pop
adc
cld
sub
std
inc
xchg
sub
out
push
xchg
std
dec
mov
sbb
sbb
dec
icebp
int
mov
mov
mov
pop
cli
out
pop
pushf
outsl
bound
enter
sub
mov
add
dec
int
call
xchg
push
stc
jae
inc
xchg
mov
pop
and
add
mov
mov
fcmovnbe
pop
push
jo
adc
push
jmp
loopne
ret
in
inc
mov
aam
mov
jl
notw
out
mov
xchg
imul
fldl
or
imul
adc
sub
jne
call
xchg
dec
divb
and
cmp
push
mov
xchg
mov
insb
push
or
xchg
pop
sahf
fbld
lcall
js
movl
fldl
sub
aam
jno
xchg
cs
cmp
out
sub
or
mov
xchg
adc
rcrb
movsl
subl
and
xchg
negl
mov
xchg
fcmovnbe
dec
cmc
add
jb
pop
mov
mov
add
push
jle
and
into
jp
sbb
inc
in
in
nop
xor
xchg
ss
push
jge
clc
cmp
cmpsl
add
mov
push
mov
outsb
or
xchg
pop
daa
xchg
jle
int
sub
xchg
ljmp
jge
push
out
and
fnstcw
sahf
ljmp
or
ds
test
pop
push
fwait
mov
jecxz
push
jge
cmp
pusha
arpl
sub
lahf
mov
push
repz
ss
testl
cld
cwtl
inc
das
nop
decl
out
icebp
in
sti
push
mov
jbe
inc
or
inc
sahf
add
or
sbb
xor
popf
mov
mov
negl
ss
imul
fimuls
adc
pop
fcmovu
jle
push
out
stos
test
sbb
insb
mov
mov
sahf
notl
repz
and
je
leave
int3
add
pop
cmp
or
leave
icebp
or
cmp
loopne
sbb
dec
inc
pop
jbe
arpl
push
jo
out
out
sub
xchg
sahf
push
fsubs
dec
gs
ja
xor
fwait
imul
call
mov
imul
cmpsb
mov
scas
jle
jmp
jp
and
ss
popf
inc
mov
idivb
push
xor
or
push
int
push
outsl
push
and
pop
sub
int
jp
inc
xchg
jbe
cltd
jae
and
rorl
pop
pop
cwtl
sti
adc
mov
dec
outsb
dec
insb
out
lret
divl
adc
jae
add
outsb
pop
bnd
sub
cmp
cmp
mov
in
int3
inc
nop
call
xchg
pop
imul
jge
pop
adc
sub
pop
outsb
mov
dec
je
or
loop
adc
mov
pop
fs
cli
xchg
jno
rorl
dec
inc
ds
dec
shlb
insl
es
sti
mov
mov
or
and
adc
popa
cmpl
movsl
and
pop
push
rol
xchg
sub
rol
je
push
ret
pop
cmp
adc
in
arpl
or
push
daa
out
jl
add
fcompl
outsl
data16
pop
div
setns
inc
and
jne
scas
lods
inc
lss
test
jmp
add
adc
ja
inc
or
pop
xchg
imul
mov
outsl
lock
cmp
scas
sarb
mov
jmp
div
cmp
and
repz
xchg
pop
mov
mov
mov
jbe
cmp
js
cmp
lds
fs
xor
sbb
sub
mov
push
in
neg
inc
adc
mov
sub
sbbb
prefetcht0
nop
sub
into
inc
cmp
mov
jns
filds
jae
dec
or
test
xchg
in
in
mov
xchg
xor
adc
cmpsl
pop
inc
jecxz
inc
jbe
orl
in
hlt
add
std
imul
cmp
cltd
cmpsl
das
or
pusha
and
lcall
push
aas
cmp
rolb
or
gs
jl
cltd
push
inc
lods
mov
mov
stc
jnp
sahf
mov
cmpsb
leave
adc
cmovnp
nop
mov
faddp
loop
dec
inc
loopne
mov
sub
stos
lret
rcrl
roll
das
repnz
mov
cltd
stos
cmp
cmp
mov
mov
or
mov
add
sbb
sbb
mov
mov
cmpsb
outsb
xchg
lods
js
in
mov
leave
out
pushf
in
cmp
fldcw
adc
sbb
gs
sbb
rcrl
jno
ret
test
pop
cmpxchg
enter
iret
dec
xchg
fnstsw
out
cwtl
popf
adc
pop
xor
lea
inc
mov
shr
or
adc
outsl
push
inc
dec
inc
lret
mov
int3
xorb
popf
sub
js
mov
lret
pop
jo
jmp
dec
dec
fmull
sub
mov
js
dec
inc
pop
mov
out
movsb
cs
sbb
mov
xchg
jmp
cmp
add
out
in
hlt
pop
push
iret
lret
pop
mov
jmp
sbb
nop
cs
out
into
idivb
mov
ljmp
xchg
cmpsb
pop
mov
repz
pushf
pop
cli
xlat
pop
sbb
inc
and
push
out
cmp
add
sbbl
mov
mov
scas
je
fisubl
push
sub
dec
mov
jae
and
or
sti
push
xor
test
in
aaa
push
lods
adc
sbb
mov
jmp
fmull
lcall
cltd
in
in
sar
mov
mov
es
sbb
repnz
push
jl
dec
es
ds
ljmp
jne
xor
xor
mov
idivl
in
out
les
icebp
mov
push
xor
xlat
sub
enter
in
vpsrad
add
stos
add
or
jge
outsl
cltd
dec
sbb
fsubrl
mov
je
inc
in
icebp
jl
add
incl
test
int
out
sbb
and
push
arpl
loop
pop
jae
mov
mulb
test
repz
ja
icebp
test
pop
das
stos
jns
shrb
pushf
popa
shlb
mov
pushf
mov
ss
in
mov
sub
xor
xchg
sti
sbbb
das
lret
mov
mov
mov
add
jge
and
aas
push
xchg
fiadds
mov
dec
addr16
ljmp
cltd
lahf
pop
push
sar
js
sbb
adc
icebp
lods
loope
mov
mov
push
sbb
push
mov
outsb
cpuid
arpl
xor
clc
mov
sub
ficomps
mov
push
lret
dec
inc
out
inc
pushf
inc
xlat
xor
push
fldenv
addb
xor
pusha
inc
iret
or
lcall
cmpsb
jecxz
mov
nop
ja
mov
cmp
jae
push
xchg
rep
add
lods
and
xchg
inc
inc
pop
cmp
cmp
cmp
cld
pushf
push
lahf
in
insb
and
and
les
inc
pop
inc
or
leave
aas
sub
test
std
jp
rol
or
push
mov
aad
cltd
pusha
dec
pop
sbb
ret
xchg
scas
cwtl
adc
xor
incb
dec
jl
scas
and
sub
fidivrl
fimull
mov
xor
adc
xchg
jmp
pop
fisttpl
add
sbb
cltd
call
sbb
push
mov
inc
xchg
pop
jecxz
xor
push
ja
sub
jbe
inc
loop
cli
push
fs
xchg
aad
cmpsb
cmpsb
fst
xlat
inc
sub
jae
dec
fwait
stc
lds
arpl
movb
ss
sbb
pop
xlat
gs
mov
call
leave
and
fwait
and
pop
outsb
fimull
shll
push
mov
test
loopne
std
cmp
sbb
gs
push
push
subl
fstl
xchg
ja
mov
cmp
jp
ds
jg
test
mov
push
pop
mov
ret
aam
out
incb
inc
adc
movsl
andb
mov
insb
ficoms
push
xor
jae
jle
add
movsb
outsl
lret
or
out
cli
pop
test
pop
adc
out
insb
pusha
sub
decl
mov
or
and
rcrb
push
add
shr
pushl
dec
cmp
aaa
adc
push
inc
xchg
xchg
int
cs
adc
cmp
rcr
cltd
push
push
popa
outsl
test
cmp
xor
mov
or
sbb
xchg
jo
and
push
pop
adc
pop
add
add
outsb
add
adcb
out
sub
sahf
xor
icebp
mov
adc
pop
pop
ret
dec
jecxz
push
mov
pop
imul
mov
mov
mov
arpl
stos
jmp
mov
test
xlat
popf
popl
movsb
push
push
shlb
mov
testb
shrb
jns
outsl
inc
shlb
aas
and
jp
push
test
int
mov
jmp
fmuls
xor
mov
bound
in
sbb
pop
sbb
and
call
and
data16
popa
loopne
pop
and
into
jb
mov
nop
iret
jmp
and
cmp
and
sysexit
and
popf
cmpsb
adc
insl
subb
jo
or
scas
call
dec
dec
push
repz
or
cld
dec
fimull
ds
aaa
outsl
ss
hlt
mov
rclb
pop
push
mov
bswap
adc
pop
rcr
mov
jns
es
or
iret
sub
out
ljmp
sub
test
pusha
inc
fimuls
mov
mov
ss
or
cmp
push
addr16
dec
or
fwait
cli
xchg
ljmp
aas
and
push
repz
stos
add
ljmp
jns
std
sbb
push
sbb
sbb
bound
call
pop
iret
and
sarl
mov
imul
pop
cmp
popf
jnp
mov
pop
lds
and
rcrb
daa
ss
push
sbb
call
das
divl
sub
pop
adc
xor
mov
sti
nop
jns
test
add
adcb
or
mov
sub
pusha
sbb
push
sbb
divl
mov
or
scas
imul
mov
clc
fdiv
push
xchg
mov
inc
adc
fcmovnb
in
call
clc
push
mov
sbb
mov
and
add
sbb
adc
stos
jg
insl
rolb
int3
rclb
mov
arpl
movsl
mov
in
add
insl
fnsave
ljmp
pop
fiadds
dec
or
push
aaa
enter
cltd
ss
lcall
out
jo
movsb
dec
sbb
or
pop
inc
fldenv
popl
test
lahf
inc
repnz
ja
pop
jne
dec
mov
or
jne
pushf
xor
xor
testb
inc
sbb
ret
cli
jge
xchg
fnstsw
mov
push
mov
lahf
dec
jg
or
pop
mov
int
cmp
pusha
aad
aad
jnp
sbb
mov
adc
test
out
cmpb
in
add
push
push
iret
add
push
hlt
xor
dec
movsb
rcrl
xchg
gs
jl
js
lds
daa
adc
lods
jb
mov
xor
inc
bound
sbb
dec
mov
pop
adc
in
push
in
sub
xchg
sarb
pop
mov
std
inc
sub
cltd
pshufw
jns
sbb
sub
mov
cld
inc
das
rol
sahf
es
mov
and
and
cltd
lcall
cwtl
mov
push
mov
mov
cmc
xchg
jno
int3
adc
fimull
sbb
leave
push
jl
push
xorb
mov
cs
fadd
aad
imul
lret
cs
shlb
push
notl
into
lret
pop
sbb
sahf
xchg
inc
jnp
pop
in
lods
sti
cmp
loopne
adc
lea
frstor
push
ds
int
and
fdivrl
lea
pusha
enter
adc
in
cmpsl
xor
pop
fld
pop
add
outsl
movsl
ds
sub
je
inc
xor
push
in
sbb
loop
pop
xor
out
insb
arpl
in
or
xchg
lods
icebp
mov
add
sahf
ss
ror
scas
or
sub
movsb
and
pop
dec
mov
adc
lret
xchg
dec
and
fldenv
jae
jne
outsb
lret
adc
jnp
loopne
jns
sbb
adc
fstpt
clc
pop
int
fsubrl
test
out
imul
pop
mov
cmp
sub
cmpsb
push
inc
loop
sbb
sub
push
xchg
shr
stos
repz
roll
and
push
test
cmp
push
jnp
cmpb
jmp
mov
jbe
fyl2x
push
dec
cmp
or
push
xor
pushf
icebp
push
xchg
mov
or
mov
sub
das
xorb
pop
pop
fabs
notl
sbb
jl
cltd
add
mov
orl
xor
xchg
icebp
sbb
insb
rorl
cwtl
push
into
inc
les
sub
scas
xlat
pop
aas
aam
mov
pop
pop
xor
int3
pop
push
es
mov
sub
pushl
mov
push
scas
or
subl
fstps
inc
dec
pop
not
fs
fsubrs
dec
mov
jmp
sahf
lret
imul
jecxz
cmpl
push
lods
ljmp
dec
sub
xor
xchg
aad
int3
in
add
frstor
lock
mov
jnp
xchg
ds
mov
lcall
or
sbb
mov
dec
jp
adc
sub
stos
xor
sbb
mov
out
mov
push
movsb
into
sbb
das
cmp
pop
pop
adc
shrb
xor
pop
jge
rolb
add
out
sbbl
aaa
sbb
xchg
aam
loop
and
ret
push
pop
pop
mov
jnp
lods
sub
mov
jmp
test
fdivrl
pushf
xchg
mov
mov
pop
xchg
push
fmuls
cmp
and
and
mov
das
mov
scas
mov
fwait
or
inc
lds
jg
inc
sbb
fsubr
pop
mov
xor
xchg
xchg
pop
mov
or
xchg
in
insb
test
into
scas
aas
in
pop
jns
xchg
aad
mov
add
cmc
mov
orb
leave
cmpb
add
lods
cmp
jmp
clc
push
insb
dec
bound
jmp
imul
cmp
xlat
or
cs
push
and
push
jl
push
xor
mov
popf
fucomi
clc
push
ja
sahf
sti
cmp
scas
pusha
jb
xor
adc
test
sbb
mov
add
and
and
xchg
push
call
orb
jo
sbb
and
shrb
addr16
enter
aam
fldt
jl
lds
mov
sbb
push
lds
or
icebp
push
outsb
pop
adc
into
ds
ret
testl
iret
dec
xchg
sub
push
icebp
frstor
lea
int
stos
mov
dec
testl
mov
push
lods
jge
or
int
sbb
mov
xchg
mov
fisubs
into
loop
popf
jnp
and
pop
xchg
scas
xchg
aad
xor
shll
mov
lretw
popa
adc
add
fmull
in
aaa
mov
sbb
imul
movsl
popf
mov
je
aaa
rolb
xchg
pop
outsb
xchg
or
loop
int
xchg
movsb
fiaddl
das
clc
lcall
mov
xor
arpl
int3
lods
adc
jne
jp
sub
lods
jnp
insb
pop
lret
add
in
push
mov
xchg
sbb
push
push
cltd
mov
sbb
pminsw
mov
in
sbb
dec
sbb
mov
jg
repz
in
je
sub
push
icebp
sub
sub
sbb
jmp
add
cltd
mov
inc
fnsave
fsubl
int3
fisttps
lcall
mov
jl
dec
add
nop
lods
into
divl
divl
int
add
sbb
lock
mov
fcoms
xchg
mov
xor
add
into
jns
mov
and
out
stos
jb
in
adc
ret
xchg
and
insb
cltd
movsl
jo
movsl
sbb
xchg
xor
jl
loop
cwtl
std
insl
sahf
in
addr16
movsl
arpl
insb
psraw
fmull
stos
fistpll
aam
cmp
cs
xchg
dec
jae
stc
fstpt
dec
jmp
cmpsl
arpl
cmpsl
pop
lea
fwait
fwait
js
cli
sahf
sbb
sbb
sarl
adc
mov
xlat
popf
jbe
xchg
sbbb
and
shr
ljmp
pop
inc
insl
vfrczss
movsb
pop
out
add
pop
xor
mov
nop
cmc
add
fsubrs
les
or
add
jae
sahf
in
push
adc
adc
xchg
repnz
push
fcoml
in
add
jp
or
loop
popf
filds
xchg
adc
inc
into
inc
inc
mov
sub
lods
das
dec
jbe
addl
adc
mov
mov
cli
and
push
cmc
int3
xchg
mul
dec
pushf
ret
cwtl
icebp
pop
pop
jne
add
sub
sub
aas
mov
ret
mov
mov
add
sahf
imul
push
cmp
cmp
or
mov
aas
sub
sbb
and
ret
cmp
sub
nop
imul
add
add
sar
icebp
cmc
mov
lgs
stos
xchg
stc
jne
xchg
inc
addr16
jbe
mov
fwait
mov
adc
push
imul
inc
fwait
mov
pop
jno
ror
dec
or
sub
fwait
sub
pop
shr
popa
jae
cltd
pop
ds
push
daa
dec
push
imul
lods
sbb
and
and
xor
inc
leave
jb
lret
inc
push
sbb
fbld
sbb
stos
mov
jno
mov
out
jmp
mov
bound
xchg
insl
shll
je
stos
out
std
dec
sbb
outsl
mov
mov
jle
pop
mov
jno
xchg
test
loope
push
adc
imul
mov
sub
rcrb
imul
shrl
pop
jge
mov
fcoml
mov
adc
jecxz
pop
dec
pop
push
sahf
push
cmpsl
or
fldenv
ud0
in
and
in
movsb
sbb
lock
pop
pop
imul
hlt
sahf
or
lahf
xor
dec
stc
push
inc
out
pop
mov
adc
cmp
std
jne
fwait
push
mov
mov
orl
icebp
mov
add
ret
ret
push
lcall
fcoms
push
and
arpl
push
push
mov
sub
mov
mov
push
or
ret
cli
pop
sbb
add
insl
adc
push
inc
les
test
lods
mov
jp
dec
test
shl
xor
fsub
dec
mov
pop
fiadds
or
lock
nop
mov
push
sub
js
stos
xor
insl
xor
dec
daa
add
mov
push
ret
out
adcb
jae
push
sub
insl
in
adc
movsl
lahf
pop
or
add
jae
cmpsl
adc
xchg
mov
arpl
push
push
add
lock
mov
push
outsl
arpl
lahf
xchg
xor
add
out
jmp
aad
hlt
dec
out
lret
push
and
pop
jnp
scas
adc
xlat
cs
cmc
push
pop
jmp
mov
fsubrl
fdivl
sbb
test
dec
pop
xor
iret
in
xlat
push
imul
fld
cmp
inc
pushl
popa
push
sbb
pop
cmp
inc
jo
int
imul
sti
push
dec
xlat
test
shrb
xor
loope
mov
fwait
rol
xor
mov
xchg
mov
lret
fistpll
lret
jl
inc
inc
jecxz
sbbl
xlat
ss
push
cmpsl
pop
jp
xchg
fdivs
add
in
sub
cmpb
movsb
sub
push
das
imul
dec
xchg
loop
add
or
repnz
nop
sbb
or
add
dec
mov
xorb
bound
nop
cmp
call
add
mov
dec
mov
xchg
pop
cli
xchg
and
shrb
rcl
bound
mov
sbb
clc
dec
sub
push
dec
fsubrs
jns
dec
inc
mov
movsl
mov
mov
nop
sub
mov
rorb
xchg
adc
sub
insl
jae
dec
mov
aas
int3
pop
pop
nop
lret
fwait
dec
pop
mov
hlt
icebp
and
xor
into
or
cld
ficomps
sahf
lea
push
in
negb
mov
jecxz
push
out
rcrl
push
outsb
leave
test
je
xor
clc
or
in
push
int
stos
jl
ficompl
out
mov
xor
adc
mov
daa
pop
jns
jmp
test
xchg
push
mov
mov
pop
add
das
mov
mov
adc
ljmp
push
jne
sbb
test
push
fchs
push
add
mov
pushf
xor
rolb
xchg
add
dec
xchg
cmpsb
cli
outsb
mov
jbe
pop
add
jbe
dec
insl
push
loope
pop
ror
daa
xor
mov
insl
bound
push
pop
add
jb
xchg
and
xchg
mov
mov
sbb
xchg
movsl
jmp
dec
adc
jle
xchg
ret
fucom
roll
mov
sbb
test
lret
fidivrl
adc
adc
jmp
sub
add
and
mov
and
sub
adc
push
cmpb
push
nop
shlb
movsb
sbb
push
repz
mov
insb
or
imul
jo
xor
xor
inc
or
sbb
push
add
mov
mov
dec
shll
adc
pushf
mov
out
jle
sub
mov
cltd
shl
out
mov
adc
loope
pusha
cwtl
popa
sbb
loop
sbb
sub
xor
outsb
repz
sti
and
mov
insb
loopne
je
pop
cli
dec
add
jmp
mov
stos
xchg
jb
mov
pushf
out
cs
pusha
not
or
xchg
mov
loopne
shr
or
out
cld
sub
dec
mov
cmp
test
out
xchg
std
push
inc
repz
orl
lds
idivl
and
cli
sub
mov
lcall
sahf
fnsave
aam
mov
call
ja
in
xchg
bound
add
cmp
add
or
add
fsubs
jp
mov
test
push
clc
in
xlat
subb
cmpsl
mov
inc
dec
pushl
pop
add
cs
adc
jb
mov
pop
lock
xchg
mov
dec
mov
sbb
rcl
xchg
xor
jmp
sbb
push
mov
pop
les
test
push
rolb
push
jl
decl
aaa
mov
aam
out
ljmp
mov
pop
ss
fmuls
lods
mov
xor
mov
cli
adc
push
mov
sub
push
xor
imul
aaa
std
fcomi
pop
xor
call
loop
or
adc
xchg
sub
out
pop
shll
jo
lcall
pop
sbb
sti
mov
or
insb
lret
or
out
aas
mov
inc
inc
xlat
mov
inc
mull
lods
lods
xchg
add
xor
loopne
pop
mov
movsb
xchg
dec
icebp
inc
stos
and
adc
fstl
stc
sbb
xchg
lret
jne
xchg
mov
mov
dec
add
inc
out
jmp
xchg
lods
test
jl
jae
xor
push
loop
shlb
cmp
fildl
xchg
xlat
in
imul
loopne
addr16
xor
push
fsubrs
mov
jecxz
flds
mov
push
add
push
rorl
clc
mov
push
dec
hlt
add
cli
loope
inc
dec
cmpsb
xor
push
std
js
pop
fdivrl
jo
push
repz
mov
sub
aad
mov
cmpsb
lahf
mov
and
push
push
test
adc
jg
mov
mov
inc
mov
sub
adc
loope
scas
aas
cmc
push
out
xor
adc
pop
sub
sub
lret
dec
das
enter
push
mov
mov
and
inc
lahf
lret
mov
jle
cmc
push
and
and
stos
xchg
insl
adc
ror
dec
in
arpl
orb
sub
mov
and
sbb
mov
addr16
orps
mov
xchg
mov
mov
adc
sbb
dec
sub
test
push
sbb
gs
xchg
cmpsl
dec
cmp
test
fldt
sub
dec
xlat
stos
pop
insb
sti
aaa
ror
lock
mov
cmp
xor
ret
mov
dec
adc
mov
fwait
in
js
cltd
addr16
out
div
mov
loope
or
in
in
push
push
incb
es
dec
out
pop
jae
or
dec
adcb
cmp
inc
int
ret
mov
fisubl
mov
dec
or
pop
push
das
ja
aaa
xchg
fs
pop
aad
mov
test
add
ss
mov
cmp
xor
popf
stos
push
mov
pop
sub
push
imul
xchg
ds
testb
in
sbb
into
notl
insb
into
cltd
imul
ja
shrb
push
imull
fsubrp
loope
add
dec
sbb
mov
mov
addr16
fldenv
cmc
scas
sub
icebp
mov
subl
or
loope
push
or
mov
aam
testb
cmp
pusha
test
lods
call
adc
aaa
fs
mov
flds
cmp
mov
adc
ljmp
scas
push
mov
mov
cmpl
or
lds
setno
scas
std
adc
inc
pop
sbb
adcb
pop
inc
or
push
xchg
dec
xchg
mov
inc
jecxz
icebp
lock
aas
pop
incb
dec
mov
sti
dec
lret
rorb
insl
xor
xchg
mov
inc
repz
pop
sbb
xchg
xor
ja
mov
and
push
mov
dec
mov
mov
insb
in
fcomi
pop
int
lods
repnz
in
enter
test
xor
mov
imul
cmp
cmp
lods
cmc
stos
mov
orb
jnp
aam
mov
scas
mov
adc
push
aad
loopne
sbb
ja
sub
cmc
push
addr16
xchg
mov
stos
arpl
pusha
xor
sahf
xor
add
aas
scas
pop
or
shl
lds
leave
je
pop
sbbl
jae
or
and
pushf
xor
icebp
and
scas
incb
lods
lea
data16
jne
cli
mov
sub
div
or
push
aam
pop
lahf
xor
mov
lds
xchg
movsl
dec
cmp
dec
insb
sbb
insb
sysenter
adc
push
in
roll
sub
and
stos
mov
mov
test
or
mov
sub
ja
mov
and
mov
mov
loope
push
mov
push
subl
mulb
pop
push
mov
push
mov
pop
aas
inc
cmp
adc
das
fadd
dec
jbe
mov
test
push
cmpsl
and
jg
xor
int
inc
lds
mov
movsb
mov
int3
mov
daa
xchg
shll
outsb
cmp
mov
jge
or
mov
sub
xchg
or
mov
jge
lret
jmp
jge
dec
in
jle
cli
call
mov
pusha
add
xlat
imul
out
adc
xchg
push
out
inc
cmp
mov
sbb
notb
sbb
popa
sub
lods
jl
rcrl
sbb
add
push
notb
cld
sbb
xchg
je
xlat
mov
hlt
mov
inc
jo
add
popa
insb
int3
ret
fbld
mov
pop
sub
dec
test
mov
cs
mov
or
jnp
int3
out
lahf
xchg
adc
scas
mov
adc
jae
nop
sti
xchg
sub
cld
cmp
adc
jl
or
cmpl
pop
out
xor
cmpsb
xchg
xchg
cld
add
psrad
ljmp
ja
out
jecxz
xchg
test
dec
xor
jg
cmp
aas
sbb
test
cmp
testb
cmpsl
push
pop
mov
add
repnz
push
out
sub
pop
mov
sub
fldl
push
fwait
scas
sbb
stos
xor
xlat
xor
push
sbb
add
sub
push
insb
mov
xchg
testl
inc
mov
in
mov
xor
and
out
mov
xchg
je
aam
jo
js
std
out
decb
jae
and
bound
jae
mov
mov
stc
sbb
aam
icebp
dec
lock
xlat
mov
xor
scas
push
sbb
outsb
lock
jbe
mov
dec
sub
insl
data16
dec
mov
cwtl
push
add
in
lret
dec
sub
mov
not
leave
shlb
flds
mov
mull
inc
mov
push
jecxz
sub
pop
pop
call
pop
adc
push
xor
repnz
stos
cld
mov
in
fs
pop
mov
sti
out
test
push
stos
fldl
pushf
push
das
int3
push
shl
test
adc
movsb
pop
out
stos
cmp
cs
mov
out
jle
inc
push
popa
andw
cmp
cmp
les
pushf
test
out
mov
lcall
sub
aam
negl
xchg
in
pop
xchg
enter
adc
mov
mov
outsb
and
mov
adc
mov
test
jne
incl
mov
sarb
adc
pop
xchg
rcrl
sub
mov
jns
into
insl
outsl
xchg
test
and
mov
call
mov
daa
clc
pop
sbb
icebp
inc
insl
shll
mov
pop
addr16
jno
orb
cmp
adc
bound
pop
test
or
daa
or
mov
mov
xchg
xchg
sub
cmp
insb
and
xor
cmp
idivl
mov
mov
jne
fisttpl
jno
mov
cmc
xor
mov
rclb
mov
jne
aad
outsb
test
loopne
cli
shl
mov
pop
out
cmp
mov
adc
sbb
mov
mov
pop
add
sahf
push
stos
insb
jb
aas
add
inc
dec
nop
orb
push
push
mov
loopne
mov
sub
loop
sbb
push
dec
push
cmp
ret
mov
cmp
dec
mov
mov
insb
xchg
je
imul
or
xchg
inc
adc
pop
pusha
mov
mov
lcall
fisubrs
mov
faddp
rcl
push
hlt
lds
gs
push
cmp
rorl
dec
cmpsl
jbe
repz
shl
fistl
push
mov
mov
xchg
xchg
xchg
stc
jg,pt
xchg
inc
jns
mov
sub
pop
addr16
lcall
cmp
push
xchg
sub
call
out
lcall
popa
push
xor
cmp
cmp
int
mov
xor
mull
mov
clc
pop
jecxz
and
jl
sub
jb
jo
sbb
inc
jnp
lods
imul
sbb
ficoml
dec
push
lret
mov
hlt
xor
push
aam
add
iret
xorb
outsl
loope
jmp
mov
leave
lret
cmp
scas
lcall
mov
out
test
rorl
ja,pt
pushf
lcall
sbb
jecxz
or
xor
and
cmp
xor
or
fld
in
jo
sub
outsb
inc
notl
push
insl
push
ljmp
cmp
dec
pusha
rcrl
add
pop
dec
mov
js
out
pop
aad
mov
xor
xchg
aas
repz
call
nop
mov
add
xor
je
fistps
fsub
jno
stos
jle
pop
inc
insb
lds
nop
xor
mov
add
sbb
enter
adc
test
mov
cmp
and
jno
arpl
lds
rolb
hlt
mov
fnstenv
mov
clc
push
push
repz
mov
mov
adc
fidivrs
mov
push
fldt
aad
add
cmp
movsb
pop
psubd
or
lcall
addl
insl
movsb
nop
mov
and
mov
adc
outsb
outsb
stc
push
into
cld
jmp
in
cmpb
dec
sbb
xorl
fisubl
cs
push
repz
jp
fldt
stos
sub
nop
flds
push
cmc
push
rcrl
push
jp
mov
or
mov
add
das
pop
dec
xchg
lcall
in
push
std
push
sub
add
inc
add
movsl
pushf
inc
inc
in
cmp
mov
xor
sub
int3
test
aad
cmp
and
inc
adc
mov
push
sub
jo
ror
outsb
push
rcl
imul
pushf
push
movsb
jmp
out
shlb
jo
mov
fldt
pop
mov
imul
mov
fs
into
inc
add
fldlg2
decl
xlat
inc
adc
push
push
int3
cmp
ljmp
gs
push
nop
jns
xor
sbb
je
jno
pop
xor
repz
fsts
push
jmp
std
pop
outsl
inc
iret
ret
cmp
aam
push
loop
insb
cmp
pop
and
cmp
lret
and
bound
add
jmp
and
push
mov
pop
jnp
and
dec
jmp
jmp
push
mov
enter
arpl
mov
mov
mov
push
pop
outsl
or
pushf
jo
xchg
mov
mov
mov
lds
mov
cmpsl
xor
pusha
ret
in
insb
or
sar
jnp
out
dec
insb
mov
dec
out
iret
cltd
sbb
cltd
sub
lret
idivl
dec
pop
fcomp
mov
in
pusha
cltd
push
inc
mov
pop
lahf
pop
rol
pop
fwait
dec
je
insb
dec
les
negl
jecxz
push
popa
jge
in
in
mov
dec
lods
neg
lds
sbbl
test
mov
dec
jmp
arpl
jmp
out
insl
cmpsb
inc
xchg
mov
movsl
or
adc
xor
int
or
push
lock
pop
and
cmp
ret
lret
test
js
xor
or
jge
cli
dec
pop
pop
in
mov
ret
dec
jmpw
dec
push
sbb
and
and
fisubrl
pop
scas
mov
gs
aam
push
push
test
and
test
pushf
stos
or
fbstp
xchg
jb
xchg
adc
js
enter
mov
dec
adc
add
xchg
fidivrs
cmp
ret
mov
cmp
faddl
sub
pop
shrl
shrl
cs
fistpll
and
lds
xchg
mov
add
ds
out
pop
fimull
imul
cli
xchg
movsb
jne
sub
lds
xor
aaa
hlt
in
or
cld
mov
mov
pop
dec
cmp
pop
xor
xor
dec
xchg
sbb
sub
lods
pop
jbe
jmp
add
ret
mov
mov
lahf
pop
outsb
mulb
cmp
cli
sbb
add
scas
pop
jnp
sbb
push
push
inc
jo
sti
divb
shlb
pop
inc
cltd
push
add
pop
xchg
inc
sub
sbb
inc
jb
pop
mov
xor
lods
pop
pop
ljmp
lret
and
mov
je
in
jle
lahf
pop
insb
dec
pop
sbb
mov
daa
cmc
je
xor
arpl
xchg
push
je
lret
mov
lea
cmp
push
das
or
int3
xor
jns
sub
and
sub
popf
fs
add
push
bound
scas
rorl
inc
dec
cmp
loopne
sbb
cmp
sbb
test
aad
mov
test
es
push
test
faddl
xor
lods
lea
shrb
cs
cld
inc
jl
push
jno
jae
inc
and
mov
sbb
adc
xchg
adc
or
add
ret
jb
push
pop
mov
or
lds
push
sarb
test
jle
cltd
leave
jnp
dec
or
stos
inc
insb
call
dec
sahf
inc
jae
gs
stc
push
adc
ffreep
or
inc
cmpsl
inc
mov
push
jl
pop
adc
cmp
xchg
pop
pop
inc
stos
push
xchg
sti
repz
and
cmpl
jne
lds
out
and
movsl
in
inc
pop
dec
fisttpll
push
leave
sbb
push
xchg
pop
sti
lods
outsl
pop
push
cmp
mov
mov
and
jbe
dec
ljmp
sbb
fmulp
add
bound
cltd
sbb
test
int3
std
cmp
into
mov
push
mov
jp
or
insb
adc
xchg
call
sub
sahf
int3
mov
jl
outsl
dec
cmp
fsubs
test
aas
dec
xchg
xor
fsin
leave
jo
popf
xorl
push
stos
adc
cmp
inc
pop
jae
daa
test
cld
out
pop
lret
add
jns
or
and
test
bound
cmpsb
sub
jg
and
cltd
jp
rcll
or
sti
xchg
mov
and
pop
xor
movsb
dec
js
stc
push
pop
aaa
jb
jno
mov
scas
cmp
cmpsl
test
fs
ficomps
sarb
pop
cmp
cmpsl
mov
mov
movsb
out
jecxz
cmc
push
mov
inc
push
in
inc
dec
sub
ret
shlb
cmp
jbe
and
or
xor
imul
mov
sbb
stos
fwait
cmp
push
pop
je
scas
lret
std
cmp
mov
mov
aas
jge
mov
out
rclb
loopne
in
xchg
mov
cmp
mov
out
in
insb
andb
idivb
inc
lock
ljmp
sahf
mov
test
xchg
addb
popa
jns
sbb
jg
popf
pop
xor
pop
imul
enter
and
jbe
out
idivb
in
lods
fdivs
out
or
pop
loope
test
push
and
les
mov
mov
or
sti
inc
imul
mov
or
filds
movl
or
or
data16
mov
or
and
leave
stos
insl
repz
or
adc
daa
jp
fs
adc
adc
fs
ds
push
mov
cwtl
ljmp
repz
sub
or
pop
push
jb
add
pop
sub
fisubs
ja
leave
imul
add
imul
xchg
adc
outsl
mov
sub
aaa
aam
inc
dec
inc
test
aam
popf
aad
push
cmpsb
xor
packsswb
push
subb
push
jb
mov
adc
pop
jge
push
adcb
sahf
fisubs
stos
int
imul
mov
jecxz
and
lea
ja
fcom
fidivrs
add
push
jle
add
test
mov
enter
mov
xor
cmp
cmp
imul
xchg
das
scas
xchg
mov
shll
sti
imul
push
jno
loopne
jecxz
mov
lods
scas
outsl
adc
or
push
mov
movsb
fsubrl
xor
mov
xor
and
repz
fs
jmp
int
pop
xlat
mov
subl
sqrtss
xlat
inc
inc
repnz
fwait
or
or
jp,pt
cmp
xor
in
outsl
aaa
push
dec
ds
jne
jge
incl
mov
push
jns
pop
dec
jmp
out
xor
add
sbb
push
mov
out
sub
pusha
jae
pop
inc
mov
pop
loopne
or
mov
push
lods
jnp
je
in
lcall
cmp
mov
fidivl
sbb
ja
push
ja
mov
pop
jl
jbe
enter
les
adc
mov
outsb
lods
cmp
fldcw
insl
loop
rorl
fwait
es
cmc
lcall
ja
fstpt
push
lcall
mov
movsl
xor
or
jecxz
sbb
dec
or
cld
mov
test
shll
pop
or
rcrl
mov
popf
dec
mov
inc
inc
jae
pop
xchg
aas
push
lods
mov
adc
hlt
es
je
call
out
dec
sti
adc
pop
add
popf
mov
or
sbb
or
mov
fbstp
mov
inc
daa
dec
frstor
add
scas
sub
or
adc
out
or
repz
sub
lret
daa
shll
ficoms
loop
cmpsl
stos
adc
mov
adc
or
fimull
jb
mov
xchg
outsb
out
push
xchg
adc
test
xchg
sbb
imul
xchg
dec
sbb
mov
popf
fwait
cmpl
mov
test
sub
in
cmpsl
test
lcall
lret
jle
rolb
add
dec
xchg
sub
out
push
adc
lods
cld
imul
shrb
out
jbe
outsl
ja
inc
xchg
movsb
bound
mov
push
jmp
ror
xchg
enter
clc
jl
in
std
dec
xchg
loop
and
adc
fldenv
enter
mov
test
sahf
in
and
dec
imul
dec
inc
bound
call
push
inc
sahf
test
aaa
dec
fisttps
cmp
ret
jnp
jo
inc
sbb
stos
add
je
xchg
mov
sub
mov
test
sahf
sbb
push
cmp
cmp
mov
lods
call
push
int3
jl
xor
mov
sub
jecxz
or
fisttpl
xchg
loope
jg
mov
aad
push
imul
in
mov
std
inc
add
mov
out
popa
xor
pop
mov
sbb
jae
into
adc
mov
test
out
sbb
int
mov
js
loop
lcall
lret
cmp
inc
test
mov
cmc
mov
and
mov
and
aaa
mov
push
inc
loopne
fisttps
mov
pop
loop
rorl
dec
hlt
aas
outsl
mov
and
push
or
bound
sbb
dec
mov
sti
aas
pop
movsb
in
jb
pcmpgtb
and
or
inc
mov
mov
testl
dec
fs
jnp
cmp
ficoms
stos
add
sub
or
test
aam
testb
sbb
hlt
nop
dec
jg
dec
std
in
xchg
jl
mov
lcall
add
lahf
inc
inc
xchg
or
inc
ds
int3
or
push
popf
adc
push
mov
pop
ficomps
or
mov
mov
mov
rcll
icebp
push
push
mov
sbb
pop
mov
imul
mov
mov
mov
xor
repz
int
add
pop
adcb
sbb
jns
jle
xor
test
pop
scas
and
push
and
sbb
cmpsb
mov
frstor
mov
mov
inc
cmpsl
les
call
or
aaa
xchg
xor
dec
inc
aas
dec
jbe
movb
mov
outsl
cwtl
insb
pop
dec
lds
fs
inc
push
lcall
or
and
xchg
mov
shl
inc
xchg
enter
and
les
rorl
cmpsl
mov
cmp
outsb
outsb
and
call
movsb
sbb
mov
fistl
xor
and
loopne
into
js
jle
ja
shrl
cmc
es
test
mov
pop
je
ss
add
loop
outsb
loope
fisttpll
les
loope
sarl
adc
mov
mov
xor
rclb
in
movsl
jb
mov
adc
pop
push
xchg
xor
sub
sarl
pushf
int3
test
and
mov
adc
jmp
sub
jo
jecxz
jmp
js
mov
sbb
movd
push
pop
arpl
pop
cmp
in
inc
adcl
xchg
movsb
mov
jg
xor
jns
jp
push
std
adc
ss
jo
out
push
cmp
lret
js
mov
sti
push
loopne
int3
jecxz
push
loope
nop
cltd
daa
cwtl
sub
or
push
xor
out
jle
mov
and
pushf
mov
movsb
jb
out
pop
pusha
add
sub
and
ljmp
aas
sub
int3
dec
lods
insb
sbb
mov
leave
mov
cmp
arpl
push
lods
lds
pop
or
adc
loopne
lcallw
xor
xchg
xchg
add
jl
aaa
and
aad
mov
push
inc
xchg
pop
mov
subl
adc
stos
sbb
xor
adcl
sub
dec
adc
cmp
pop
mov
xor
jbe
fmull
xor
mov
xlat
test
xchg
xor
aam
xchg
adc
inc
cmp
fisubrl
jo
leave
add
xor
inc
or
inc
jae
movnti
jecxz
sub
adc
sub
mov
xchg
scas
daa
mov
inc
dec
cmp
lds
loopne
mov
push
pushf
mov
out
loopne
and
sbb
loopne
rorb
inc
bound
xchg
jmp
or
push
ljmp
lds
outsl
mov
cmpsb
mov
mov
sbb
sub
add
dec
pop
xchg
xor
pop
push
std
in
inc
add
inc
push
jmp
mov
fcomps
sub
sbbb
pop
ret
aad
js
ret
sbb
fs
xor
xor
pop
jns
lret
aaa
jno
add
jno
loope
cmp
dec
sarl
hlt
mov
inc
pop
xchg
cmc
lret
fbld
ss
int
subb
popa
leave
dec
je
jae
mov
push
push
std
cmp
test
xchg
ja
pop
loopne
fistps
jae
jmp
fstl
cmpsb
mov
sbb
pop
lds
subl
or
mov
sub
std
sub
inc
jne
pop
mov
arpl
jae
fwait
inc
nop
scas
sub
stos
lods
das
movsb
cmp
sbb
enter
push
lock
ffree
or
xor
fildll
dec
pop
mov
fists
xchg
jle
xor
mov
mov
mov
cmpsl
or
loope
cmpsl
push
jle
mov
pop
fstpl
mov
fcmovnu
pusha
push
daa
pop
scas
sar
jl
cmc
adc
test
cwtl
jbe
call
fildl
cmp
insb
dec
push
gs
mov
scas
mov
jecxz
inc
inc
lods
sub
cs
pop
jae
gs
cmpsb
sbb
push
inc
inc
and
cmpsl
pushf
sub
cltd
mov
mov
inc
jl
xchg
subl
sbb
xchg
mov
sbb
push
mov
sahf
mov
jo
inc
add
fbld
xor
ljmp
mov
xchg
push
xor
lahf
xchg
std
lea
ds
movb
lret
adc
sub
int
cmpl
add
push
aaa
pop
mov
sbb
test
adc
mov
pop
cmp
imul
lods
dec
aaa
bound
push
sti
inc
fbld
xchg
mov
and
jg
pop
rcl
xchg
xor
jle
push
les
xchg
or
out
mov
dec
jb
cmp
adc
mov
and
jae
fistl
insb
pusha
lcall
pop
mov
push
das
cmp
scas
lds
out
sahf
mov
inc
scas
jmp
das
pop
jl
out
fs
bound
lret
mov
xchg
inc
pop
and
mov
push
cmpl
pop
push
shll
out
xlat
pop
rcrb
jmp
xor
dec
sub
insl
fmull
das
and
jb
out
das
mulb
pop
sub
outsb
hlt
ret
mov
sub
mov
xlat
je
mov
dec
push
js
in
cwtl
pop
xchg
xchg
jb
mov
mov
mov
jno
fs
xchg
and
pop
out
sbb
mov
movsb
clc
jge
cmp
jae
inc
ficoms
in
dec
nop
push
pop
pop
or
out
mov
inc
dec
mov
stos
stc
sbb
ljmp
xor
push
inc
jno
sbb
loop
sub
jbe
fstps
testb
lcall
add
cmp
hlt
pushf
scas
inc
stos
mov
lds
jmp
xchg
test
pop
xchg
lretw
sub
iret
dec
push
sti
fidivl
push
inc
xchg
test
push
adc
cmp
inc
int3
lret
test
mov
pop
cmp
pushf
insl
aam
imul
xor
fwait
scas
sarb
cmp
aam
or
mov
outsl
cli
push
dec
or
lret
addr16
lea
dec
xchg
mov
sbb
lahf
xor
fbstp
adc
repz
and
stos
dec
push
xor
push
push
and
flds
inc
mov
mov
mov
xor
adc
mov
cmp
pushf
pop
push
inc
sub
mov
mov
and
inc
insl
cmc
sub
pusha
into
sbb
add
mov
cli
jge
mov
push
mov
cmc
push
mov
inc
push
cmpsl
or
jne
movsb
sahf
push
mov
pop
les
jmp
xor
push
jle
xor
daa
adcb
xchg
and
and
xor
or
mov
inc
sub
daa
aad
push
lea
mov
negb
sti
push
cli
sbb
sub
pop
pushf
jecxz
rcrl
jecxz
mov
cs
clc
sar
test
je
js
fwait
cmp
lods
ljmp
or
in
js
lcall
cmp
mov
cmp
sub
shrl
mov
outsb
push
cmp
rcr
lret
mov
arpl
fidivrl
lret
fisubl
and
inc
lock
loopne
negb
bound
test
scas
bound
adc
shrl
stos
push
loop
mov
or
iret
inc
sbb
lcall
jmp
shll
jle
stos
inc
imul
out
ret
gs
inc
ret
hlt
mov
cwtl
out
jl
fwait
push
int
fwait
inc
iret
dec
push
pop
jl
xor
cmovno
inc
clc
mov
sub
imul
popa
cmp
mov
adc
xor
pop
sbb
outsb
stos
into
popa
sub
data16
pop
xchg
push
cmovp
mov
pop
jno
inc
aaa
lcall
jp
jb
in
ret
cmp
das
mov
and
cmpsl
sub
and
mov
mov
addl
cmp
sub
or
add
push
popa
and
jb
cmpsl
cmpsb
and
jmp
jns
jno
aas
lods
dec
dec
rcl
jae
sti
cmp
xor
xor
mov
push
pop
mov
mov
push
pop
pop
mov
repz
lret
cmp
test
jge
adc
iret
int3
out
mov
rol
mov
pop
lock
or
or
sbb
fwait
lahf
in
bnd
outsl
jle
adc
jecxz
cld
out
rcr
stc
in
les
popf
dec
mov
repnz
cmpb
xor
addr16
mov
rcll
xchg
jns
in
jmp
rclb
out
enter
jl
iret
or
cmp
js
push
or
mov
mov
loop
cwtl
cmp
sbb
ja
jb
and
loope
popf
xchg
nop
out
jno
lret
in
shll
sub
fnstsw
cwtl
fbld
test
mov
inc
inc
sbb
add
jne
je
fwait
mov
pop
adc
adc
mov
mov
mov
push
test
pop
repz
and
inc
mov
pop
mov
ret
cmp
cmp
adc
cwtl
pop
popf
stc
cltd
shl
sbb
out
daa
xorb
pop
faddl
pop
pop
lret
mov
in
ret
jmp
add
out
mov
insl
adc
and
fwait
pop
jecxz
jns
fs
cwtl
mov
fistl
mov
iret
jns
push
test
inc
mov
push
test
out
fadds
dec
mov
movsl
xor
pop
sti
sbbl
dec
add
ljmp
std
adc
out
xchg
mov
pusha
jmp
imul
imul
xchg
outsl
jl
out
mov
jns
mov
ret
push
cmp
out
sti
dec
xchg
lock
inc
xchg
imull
xor
adc
and
cmp
push
adc
sarb
aad
aas
push
lret
push
lods
inc
lock
sbb
in
jmp
pop
cli
dec
adc
lds
xor
xorb
mov
and
inc
mov
mov
outsl
out
xchg
mov
nop
lret
dec
mov
out
adc
loope
xchg
cmpsb
add
push
mov
addr16
fisubrs
jnp
push
fdivrl
jmp
call
sub
shll
jo
aaa
stc
or
mull
jp
push
lret
mov
jnp
and
cmp
xchg
cmp
jg
loope
xchg
gs
or
mov
mov
jg
pushf
and
mov
mov
cmp
xlat
popa
pop
lock
mov
sahf
mov
addr16
test
add
mov
sub
leave
cli
mov
and
push
lret
push
cmp
flds
xchg
stc
les
inc
adc
and
cli
jle
add
jge
pop
xor
mov
test
shlb
nop
pop
fisubs
nop
leave
mov
ss
adc
les
subb
sbb
std
movsb
sub
xchg
lds
test
xorb
pop
push
testl
xchg
sub
pop
pop
ljmp
lock
stc
sbb
push
xlat
out
rcrb
xlat
int
inc
hlt
pop
cmp
mov
pusha
sub
les
add
and
add
xchg
mov
aaa
jecxz
xchg
aas
ret
ss
cmp
mov
mov
aad
repnz
xor
nop
aam
dec
addr16
movsl
fcoms
decl
cmp
dec
popa
pop
xchg
push
mov
inc
stos
mov
or
loopne
pop
push
iret
outsb
inc
sbb
sub
mov
adc
mov
pop
test
xchg
mov
add
scas
pop
sbb
inc
and
xchg
jecxz
repnz
pop
inc
imul
xor
sub
jge
aam
mov
cmpsl
bt
lea
ret
scas
fisubrl
sbb
push
aam
jp
push
push
es
adc
or
xadd
inc
cld
dec
push
imul
cmp
fisttpl
jp
mov
add
test
xor
in
pop
xchg
arpl
cmp
inc
int
pop
or
cwtl
fistpl
aaa
leave
cwtl
xchg
sub
dec
push
jge
pop
fsubl
lret
out
sub
les
ds
in
add
mov
gs
sub
es
xor
nop
bound
decl
movsl
mov
push
faddl
dec
xchg
cmpl
mov
sbb
ffreep
das
test
sbb
xchg
dec
cli
pop
or
in
inc
arpl
rolb
test
mov
xchg
cli
in
mov
test
popf
pop
stos
mov
ud1
andb
xchg
jl
mov
loope
cmp
jnp
pop
das
je
mov
fidivs
stc
push
scas
cltd
loop
sbbl
pushf
or
data16
insl
mov
sub
or
mov
add
xor
mov
pop
int
mov
outsb
cmpl
inc
cmp
adc
or
int3
add
lea
pop
dec
imul
cli
testb
and
repnz
cs
pop
xchg
jne
mov
mov
lret
repz
mov
arpl
out
call
sub
pop
and
mov
fs
xchg
sub
add
cmpsb
repz
lcall
int
sahf
jbe
in
cmp
or
pop
mov
xor
sbb
mov
cmpsl
pop
enter
jle
push
enter
mov
lods
jge
test
add
dec
jae
xchg
inc
fadds
test
int3
jg
cmpsl
in
lods
mov
loopne
fisttps
mov
dec
pop
std
jp
jmp
inc
stos
repnz
das
insl
decb
fwait
hlt
xchg
jns
mov
out
push
jb
imul
push
clc
cwtl
pushf
cmp
jo
sub
inc
ljmp
loopne
popa
xor
mov
xchg
pop
int
ljmp
xor
inc
push
mov
jg
leave
repnz
clc
test
sub
add
leave
mov
fmull
stos
add
add
or
xor
sahf
lcall
imul
pushf
call
cmpb
or
adc
inc
test
jge
mov
dec
mov
fdivrp
jne
push
data16
lahf
sub
jg,pt
lock
xorl
xchg
pop
movsb
ljmp
in
ret
dec
rorl
xor
push
iret
adc
movsl
sub
inc
mov
inc
and
add
sub
add
popa
dec
gs
cmp
subb
repnz
rclb
inc
iret
or
push
jle
mov
stc
lcall
outsb
std
aad
in
dec
and
jp
jo
in
xlat
inc
shl
sub
xor
lret
int3
sbb
gs
stos
xor
notb
inc
push
das
xchg
cmpsl
jo
cmp
je
stos
bound
insb
mov
and
cld
mov
notrack
cltd
scas
mov
stos
sbbb
dec
mov
cmp
aas
pop
xchg
out
jbe
js
hlt
xor
sbb
loop
adc
xchg
xchg
push
sarl
sahf
orb
repz
sub
shrb
inc
in
les
pop
ljmp
aad
inc
scas
jmp
negl
dec
pop
mov
lea
icebp
and
daa
shl
add
xor
and
mov
out
inc
push
test
aad
insl
nop
or
cld
enter
lret
pop
and
jecxz
lods
sbb
xchg
out
sub
in
loopne
xchg
sbb
cmp
test
jge
and
pop
lods
jecxz
mov
cmpsl
inc
outsb
pop
dec
cmp
in
push
inc
inc
stos
mov
mov
outsb
sarb
push
jmp
out
mov
jecxz
pop
push
add
fcmovbe
push
repz
cs
inc
xchg
mov
data16
lds
aas
sahf
sti
cs
lods
cmpb
xor
and
les
loope
and
mov
data16
xor
pop
jns
inc
mov
inc
ficoms
fwait
jmp
xor
lcall
xor
in
cltd
jp
aas
movsb
inc
add
aas
add
insl
leave
outsb
ret
sar
aad
or
push
adc
push
ss
fisttpll
insl
cmp
push
daa
loope
add
cli
mov
int3
and
fsubrl
cmp
and
fdivl
sahf
dec
adc
aad
out
adc
ret
rcrl
cmp
inc
mov
sbb
daa
cmp
loop
push
adc
push
dec
dec
mov
in
push
test
mov
mov
or
cli
adc
mov
int
stos
push
cs
outsb
inc
pop
mov
xchg
xor
js
sub
or
sub
enter
or
fbld
call
lea
sbb
xchg
jecxz
and
xchg
cmpsb
into
mov
cmp
inc
sbb
jb
dec
daa
les
xchg
lret
pushl
inc
iret
xchg
jle
fnstenv
aam
and
rorl
xchg
int
adc
adc
xlat
test
jne
je
fstl
icebp
xorl
mov
fwait
sub
xchg
mov
cmc
dec
or
xchg
mov
pushl
push
int
dec
add
lret
xchg
jle
adc
mov
jnp
jmp
clc
iret
mov
mov
push
and
pop
lret
adc
sbb
jbe
mov
scas
mov
jnp
mov
mov
test
in
jno
out
inc
arpl
add
push
ja
pop
lahf
pop
cmp
jbe
test
push
shlb
aad
pop
dec
negl
ret
xor
fwait
stos
nop
aaa
jo
pop
mov
scas
lods
dec
jno
cltd
cmpsl
sbb
sbb
ffreep
dec
jns
mov
fdivrl
pop
sbb
sub
mov
out
lret
icebp
push
xchg
test
cltd
push
jbe
jle
or
mov
mov
push
xchg
imulb
lods
inc
cmp
movsb
insl
pop
xchg
test
inc
mov
popa
or
jg
mov
pop
jmp
icebp
or
dec
xor
pop
shll
or
mov
sbbb
xor
fwait
xchg
shlb
negl
sub
popf
movsl
out
xor
fnstsw
and
push
mov
dec
jl
stc
jbe
mov
jno
shrb
dec
xor
pop
ret
mov
test
test
lcall
mov
stc
out
pop
push
loopne
dec
icebp
adc
pop
stc
xor
subb
std
inc
ds
lock
or
and
mov
movsl
stos
shlb
inc
stc
or
mov
in
insl
cwtl
lock
xchg
pop
and
dec
sub
and
cmp
inc
nop
adc
imul
xchg
gs
xor
mov
and
sbb
cmpsb
pop
sub
push
inc
loopne
nop
out
in
or
loopne
cmpsb
repz
aad
les
inc
imul
xor
inc
push
aas
push
sub
mov
shll
inc
sub
popf
dec
cmp
cmp
aaa
or
push
sbb
lret
inc
hlt
mov
cli
jle
in
jp
loope,pt
lock
test
test
cmp
sbb
dec
rolb
mov
movsb
and
lea
xor
stos
sbb
pusha
pop
rcrb
and
fcmovne
mov
mov
in
mov
repnz
and
xchg
fs
jecxz
movsb
jno
adc
enter
into
push
or
lret
imul
mov
mov
pushf
enter
and
std
jb
mov
pop
mov
mov
add
cwtl
adc
out
sub
das
filds
cmp
sahf
decl
and
les
cmpsl
mov
fisubrl
imul
clc
aam
sarl
or
xor
iret
jbe
mov
movsb
in
mov
push
mov
jecxz
movsl
cmp
mov
stc
mov
ret
add
outsb
fmul
push
outsl
sub
jle
cmpsb
lods
roll
dec
mov
aam
xor
and
jg
adc
jno
or
mov
push
jl
cld
mov
movlps
sbb
gs
stos
rcrb
jl
jnp
mov
ret
mov
sub
push
std
sbbl
imul
idivl
xchg
mov
dec
sahf
cmpsl
inc
adc
repnz
je
xchg
mov
outsb
lea
mov
xorl
mov
and
nop
std
mov
pusha
cmc
rorb
int
mov
cmp
inc
lods
frstor
sbb
psubusw
pop
xchg
inc
jle
pop
inc
push
and
out
in
shll
gs
dec
and
push
bound
stos
xor
push
mov
jle
jp
loope
dec
mov
shll
idivb
mov
jne
sarl
xor
sar
pop
sbb
pop
jns
xchg
jb
xchg
shrl
popf
jecxz
insl
and
ljmp
jg
fsubrl
repnz
gs
adc
pop
xchg
fidivl
mov
inc
inc
mov
aaa
or
test
or
pop
stos
orl
jecxz
xchg
push
lds
mov
push
dec
mov
cmpl
jae
cmpsl
loopne
dec
pop
fisttps
in
mov
adc
inc
int
push
add
mov
iret
lret
inc
pop
lock
xor
cmpsl
aad
cmp
mov
repz
jb
jno
or
rcrb
and
sub
mov
sub
adc
or
jbe
std
into
rcl
dec
add
adc
outsl
ds
jae
movsb
mov
push
fdivrs
scas
mov
cmpsl
sbbl
xchg
push
adc
icebp
nop
scas
dec
insl
mov
lods
xor
aad
daa
repnz
or
test
rorb
scas
jnp
and
pop
mov
push
scas
mov
inc
jo
mov
xchg
clc
or
inc
jnp
out
xorb
es
cwtl
dec
mov
sub
push
inc
xor
jmp
push
sbb
leave
cmp
pusha
pop
aas
mov
int
jnp
lret
std
aaa
cwtl
cmp
mov
xchg
jl
loopne
jge
inc
or
inc
out
pop
aad
pop
xor
rep
pop
dec
mov
rcrb
clc
and
aad
mov
xor
pop
push
mov
cmp
inc
mov
add
ljmp
sbb
pop
jb
popa
push
test
cmp
daa
or
fnsave
jecxz
mov
push
jnp
leave
sbb
outsl
xchg
push
test
outsb
pop
cmp
scas
loop
xor
arpl
mov
js
ja
and
sbb
pop
cmp
and
jp
mov
cmp
rolb
bound
pushf
loopne
sub
mov
pusha
inc
lods
pop
in
in
cmp
imul
dec
xor
cli
jbe
inc
mov
cmpsb
bound
js
push
in
les
lgs
and
dec
fmuls
xchg
std
imul
xor
jne
mov
push
dec
dec
pop
jp
xchg
cltd
sbb
sti
rclb
pop
mov
test
imul
add
xor
pushf
push
sub
ss
mov
cltd
int3
icebp
mov
shrb
or
cli
sti
inc
mov
aam
sub
push
jb
sub
lahf
xor
fisttpll
sbb
cs
inc
cmc
nop
inc
mov
adc
jns
mov
mov
stos
popf
xlat
sbb
cwtl
fcmovnu
pop
lock
fwait
push
jo
push
xchg
xchg
int3
pop
ficoms
dec
xor
rolb
xor
cli
pop
cli
imul
xor
adc
mov
dec
aad
lods
aad
sbb
xor
outsb
xchg
xor
test
pop
sub
xor
jle
je
enter
push
push
shlb
push
stos
dec
cmpb
pop
movsb
cmc
inc
xchg
rcrl
inc
xor
mov
imul
movsb
or
add
jg
mov
mov
jecxz
sahf
lds
pop
hlt
jle
and
or
pop
packsswb
fbld
xor
daa
clc
push
test
lret
or
adc
and
clc
test
and
mov
or
or
jl
in
fwait
inc
mov
mov
and
lret
stos
shlb
inc
cmpsl
test
addl
cmp
mov
mov
mov
jno,pt
loop
leave
mov
push
lret
jbe
pop
xor
repnz
push
lods
mov
and
sbb
mov
pop
mov
and
in
dec
scas
or
les
jae
scas
xor
in
cmp
xor
sti
shll
subl
rol
dec
cld
lret
fldl
in
cld
mov
lds
sub
mov
mov
cmp
add
adc
cmp
or
stos
xor
or
pushl
sub
out
sbb
mov
out
clc
cli
leave
jmp
test
cmp
xor
sbb
insb
push
xorb
out
push
incl
mov
fsub
mov
jns
sahf
adc
repz
sub
lret
das
js
mov
ja
sub
rorl
scas
outsl
mov
pushf
out
dec
out
in
ja
shrb
push
subb
mov
dec
filds
imul
test
xor
leave
xchg
mov
add
outsb
mov
push
out
add
xor
push
out
pusha
out
jo
rorb
and
mov
jmp
repz
lea
aaa
pop
pop
stc
stos
mov
orl
push
xchg
pop
inc
sub
adc
sbb
sbb
push
add
lahf
pop
xor
push
fnstsw
sbb
mov
xchg
shrl
xor
sub
lret
jmp
push
fdivs
in
xor
sarb
cwtl
dec
jnp
sbb
mov
addr16
es
push
insl
cmpsb
mov
lret
or
sbb
bound
pop
cmpb
push
adc
icebp
test
dec
or
imul
pushf
js
jb
clc
outsl
or
xchg
cmpsb
pop
loopne
leave
mov
bound
add
scas
iret
dec
loope
jp
outsl
pusha
jge
fstpt
aaa
je
loop
xor
shlb
cs
push
mov
outsl
outsl
in
inc
add
sub
and
sti
fdivrp
ss
mov
insl
sarl
and
add
cs
notl
dec
or
js
lahf
in
xchg
push
testb
aas
xchg
lods
mov
or
sbb
aaa
arpl
cmpsl
adc
push
and
sbbb
pushf
xor
mov
add
cli
pop
ljmp
mov
aaa
mov
and
mov
cmpb
sti
dec
ret
mov
dec
ljmp
sub
lea
mov
jle
adc
push
xor
xor
or
or
dec
push
bound
xlat
ret
cld
cmp
sub
mov
pushf
adc
inc
popa
pop
and
push
mov
insl
cld
lods
dec
insb
test
cmp
iret
call
pop
jmp
ds
cmc
add
rcll
mov
lret
add
cmp
xchg
adc
into
in
frstor
or
or
mov
movsb
add
ds
xor
fcmovnu
add
lret
mov
ljmp
imul
notl
push
sbb
cwtl
fsubrs
aam
push
pop
stos
cmpsb
mov
loopne
pusha
or
cli
loop
jbe
inc
ljmp
cli
loopne
or
cmp
test
divb
fimull
shlb
sbb
dec
inc
leave
mov
mov
imul
jbe
shll
sub
cmp
insl
dec
int3
jp
push
adc
xchg
and
test
mov
mov
inc
orb
sub
icebp
mov
fadds
andl
rorb
stos
xchg
mov
sub
shrb
push
mov
in
mov
pop
iret
in
mov
iret
pop
in
in
jb
add
mov
out
mov
dec
sbb
inc
inc
jno
xor
push
loopne
pop
xchg
arpl
testb
pushf
mov
push
cli
jns
fstpt
shrl
inc
and
jne
loope
jp
loope
jl
add
cmp
mov
hlt
pop
push
mov
fmuls
out
xchg
push
push
xor
mov
out
out
sbb
sub
repnz
testb
punpckhwd
ret
es
mov
pop
xor
xorl
sti
out
movsl
adc
lds
pop
push
test
jno
outsl
fsubs
rclb
sub
add
push
cwtl
mov
fdivr
pusha
adc
jbe
xchg
pop
adcl
test
mov
rcll
add
dec
mov
xor
and
loop
aas
mov
movsb
outsb
mov
sub
or
mov
sbb
jge
mov
test
insl
fndisi(8087
push
fdivl
and
aaa
ficoms
push
call
cmp
movsb
in
jnp
mov
inc
xor
insl
xor
scas
mov
or
mov
mov
and
or
lret
lret
dec
std
cwtl
sub
adc
inc
call
or
in
sahf
subb
fnstcw
mov
sub
out
and
jecxz
and
faddp
jb
add
aam
loope
jnp
insb
xor
lods
test
lcall
sbb
lcall
lea
outsb
jae
popf
or
add
sbbb
mov
push
add
scas
jns
xchg
inc
leave
test
packsswb
mov
mov
jge
pop
dec
xchg
repz
jecxz
ja
out
jg
fistl
cltd
repnz
clc
and
aaa
xor
popa
mov
daa
xor
test
dec
mov
push
int3
mov
mov
xor
aad
and
dec
pushf
mov
xchg
mov
mov
fprem
jl
add
and
pop
jle
adc
or
imul
daa
fldl
imul
imul
push
pop
mov
ss
mov
add
cs
daa
call
outsl
xchg
in
es
adc
pop
inc
and
sbb
pop
insb
jecxz
fs
add
iret
pop
imul
loope
imul
push
and
in
sbb
and
popa
adc
scas
icebp
cs
pop
push
out
mov
shlb
push
fistpll
fs
cmp
mov
lret
xor
ja
mov
push
adc
ficompl
lods
movsl
out
shl
loop
jne
imul
ficoml
repnz
testl
jo
popl
add
imul
ds
adc
into
je
cmpsb
hlt
adc
cmp
pop
scas
push
int3
sub
test
pop
xor
mov
dec
loopne
pop
addr16
sbb
xchg
or
fildll
push
pop
sub
mov
mov
adc
movsl
test
jg
cmp
push
stos
cmp
sarb
sub
xlat
cmp
mov
lea
stos
shl
mov
inc
cmpsb
jbe
loop
ret
je
scas
and
adc
sar
test
enter
lock
cmp
movsl
lock
lret
lret
lcall
adc
mov
ret
mov
imul
scas
sbb
aad
in
sub
or
xchg
cmpsb
jae
lods
out
insl
popa
loope
sbb
inc
mov
cwtl
and
lods
fsubrl
inc
insb
aas
add
ret
in
cmp
inc
movsb
mov
mov
in
sub
push
jb
sbb
mov
mov
stos
lret
hlt
push
cmpsl
sub
clc
loop
and
mov
push
leave
add
xlat
ret
sbb
and
push
cmp
push
sub
inc
cmp
add
mov
insl
out
popf
dec
je
inc
sbb
dec
cmpsl
xchg
push
mov
inc
lods
and
cltd
or
outsl
fists
lret
pushf
subl
jb
in
mov
cs
push
push
aad
mov
loopne
push
mov
mov
pushf
popa
inc
scas
es
or
fs
inc
jo
iret
mov
cltd
dec
add
mov
mov
les
leave
push
test
into
xor
ffreep
cltd
movsb
je
mov
test
cltd
pop
insl
and
dec
test
mov
xchg
xchg
push
lds
cmpsb
push
out
xlat
pop
mov
les
pop
mov
insl
xor
fs
pop
xorb
inc
jnp
pop
pop
lret
mov
adc
lea
mov
lahf
push
insl
daa
out
loop
inc
xor
enter
decb
je
pop
pushf
jo
daa
mov
ds
dec
insl
lret
shrb
popa
ja
dec
xlat
fists
cmp
imul
jmp
dec
cmp
push
addr16
mov
in
jge
in
inc
andl
cmpsb
shrb
mov
mov
add
rcll
call
xor
xor
imul
negl
in
pop
pop
mov
jl
int
adc
mov
adc
icebp
out
pop
inc
jmp
in
cmp
mov
or
mov
xor
jge
add
mov
imul
pop
into
loopne
aaa
mov
aaa
gs
outsl
push
mov
mov
cmpsl
mov
sar
push
push
pop
push
loopne
mov
xor
mov
mov
stos
inc
into
test
orl
or
insl
in
leave
adc
inc
enter
mov
aam
push
sub
sbb
mov
leave
cltd
mov
mov
push
jg
xor
jecxz
loopne
pop
stos
daa
stos
and
push
stc
pusha
movsl
lea
xor
imul
fisttpl
jne
rorb
xor
ljmp
fcomps
into
mov
sub
lods
mov
xchg
xchg
scas
shr
ret
pop
mov
sbb
mov
lret
aam
aam
imul
pop
enter
push
jecxz
lock
out
inc
fcom
aam
cwtl
xabort
les
leave
stc
sub
data16
lods
pushf
lret
dec
cmpsb
mov
mov
xchg
push
pop
jle
push
xlat
lret
adc
mov
cmp
shll
or
inc
adc
adc
stos
cmp
push
push
adc
addr16
add
outsb
mov
jns
mov
xchg
daa
scas
mov
dec
jmp
dec
jne,pn
ds
xor
shr
std
cmpsl
add
add
push
ret
inc
or
push
mov
mov
cmp
mov
cs
mov
jne
fnsave
loop,pn
jp
fs
icebp
hlt
int
inc
sub
jle
add
mov
adc
push
hlt
mov
loopne
sbb
mov
call
jbe
iret
jne
hlt
repz
popa
movsl
cmpsb
sbb
xlat
add
insb
jle
test
fdivp
pop
dec
jge
je
addl
dec
adc
mov
mov
mov
aaa
xlat
add
cs
xor
in
je
outsl
mov
std
push
subb
lds
mov
sbb
dec
xor
push
or
mov
scas
fdivl
scas
ljmp
enter
sarl
xchg
jmp
lahf
pop
push
xor
or
fwait
out
jo
lret
rcrl
xchg
cli
loop
ljmp
in
xor
mov
call
das
imull
rorl
push
out
test
inc
xchg
mov
push
pop
mov
dec
call
inc
das
mov
add
std
test
jno
xor
mov
insb
bound
add
pop
les
mov
push
lcall
es
test
fadds
ja
mov
pop
or
ss
and
adc
mov
js
aam
jle
lds
jo
cltd
adc
cld
mov
mov
addl
pop
jns
mov
out
addb
or
pop
fiadds
inc
mov
push
add
pop
cmp
xchg
insl
aas
add
fcos
mov
sub
xlat
xor
or
mov
mov
dec
js
mov
push
mov
mov
xchg
xor
jns
and
into
cmc
sub
repz
in
sbb
mov
sbb
adc
dec
popa
aas
add
aad
into
ret
inc
mov
sbb
mov
add
fmul
mov
jb
add
fnsave
xor
fldl
push
xchg
add
sbb
jne
mov
sub
jp
push
add
push
mov
aad
add
sub
dec
mov
aad
ret
cmp
push
sub
mov
sub
in
inc
lds
xor
mov
jp
insb
xchg
cmp
and
lahf
mov
popf
xor
lahf
inc
dec
shll
out
loop
cli
fmull
cmp
adc
rolb
jmp
out
clc
mov
aam
imul
mull
mov
xor
pop
cmpsb
call
push
push
xor
cmpsl
incl
jno
sbb
scas
jno
aad
test
jecxz
sub
dec
push
dec
push
addl
imul
fsubl
repnz
add
sahf
pop
stos
add
lcall
cmp
mov
push
push
hlt
iret
lret
ret
inc
mov
push
pop
xor
das
cs
fdivp
inc
in
repnz
xchg
js
insl
inc
dec
xor
push
les
aaa
sbb
xor
daa
dec
es
xor
sub
clts
daa
pop
sub
add
inc
pop
scas
bound
cld
cmp
dec
xchg
sbb
shrl
pop
xor
repnz
aas
mov
lahf
popf
aas
xchg
popa
xlat
adc
xchg
loopne
dec
andb
ja
pop
inc
xor
cmp
das
sub
inc
icebp
inc
aas
cmp
jne
rclb
pop
sub
or
scas
xchg
loope
mov
push
hlt
sbb
imul
shll
or
data16
dec
xchg
loope
pop
sti
fdivl
xlat
mov
test
jle
shll
dec
cmpsb
repnz
insl
and
repnz
cmp
int3
ficoml
sbb
aas
push
or
xor
ret
push
fwait
movsl
mov
fisttpll
adc
sahf
cmp
jmp
sub
push
cmc
icebp
lds
inc
jp
mulb
sbb
push
pop
cld
push
cmp
test
ja
aad
sar
jae
dec
repz
xor
pop
arpl
xchg
daa
inc
loopne
scas
lds
cmp
sub
xchg
or
xchg
push
dec
pop
ret
cmp
out
push
push
sub
or
ret
sahf
mov
repnz
push
mov
push
push
stos
dec
out
imul
ja
stos
mov
pop
int3
adc
sbb
mov
or
inc
or
arpl
in
leave
insl
jae
inc
mov
sbb
ljmp
add
dec
sarl
pusha
pusha
jmp
xchg
test
sub
in
pop
jl
and
mov
ret
push
mov
int3
add
int3
dec
add
mov
inc
mov
cs
test
gs
popa
aam
sbb
jbe
push
imul
das
jnp
out
out
or
xor
in
cmc
movsb
cmp
js
jg
jnp
dec
out
and
sbb
inc
aam
push
ret
cmp
lahf
inc
outsl
outsl
sbbl
fs
sub
scas
inc
lods
inc
mov
jo
mov
xor
sarb
push
ret
push
inc
pop
mov
sahf
mov
sarb
pop
mov
jo
push
lret
repz
pop
pop
jle
xorl
shlb
sbb
mov
dec
das
and
xor
dec
adc
jnp
int3
rcll
ret
mov
je
call
test
and
pop
out
adcl
push
mov
or
shl
jo
or
cmp
pop
rorb
cld
dec
inc
out
stos
lret
imul
jo
sbb
test
push
push
and
mov
mov
shll
outsb
add
push
mov
add
cmp
std
mov
ret
test
inc
xchg
xlat
jmp
outsl
jo
inc
mov
xchg
imul
mov
inc
sub
adc
popf
inc
jg
out
sbb
fistpl
aas
lahf
pop
xchg
es
pop
cwtl
cmpsl
test
test
loopne
pop
sbb
pop
jb
dec
sbb
mov
mov
sbb
cwtl
xadd
int
jnp
orl
pop
jns
push
inc
sahf
sti
xchg
stos
jle
mov
out
mov
xchg
or
pop
std
mov
movsb
adcl
lret
mov
push
pop
scas
adc
shl
sbb
sbb
outsb
in
xor
test
in
cmpsl
mov
push
outsb
push
leave
pop
jp
popf
shr
ljmp
dec
lods
mov
jae
and
inc
in
int
loop
std
xor
repz
lret
cmc
cmpsl
bound
lods
add
inc
flds
lods
aam
inc
jb
nop
and
repnz
out
add
push
iret
or
cmp
jge
int
mov
mov
int3
push
dec
inc
leave
repz
lods
fisubs
out
and
pop
xorb
mov
jae
xchg
in
dec
loopne
adc
cmp
jle
pop
outsb
jae
or
call
mov
jne
adc
sub
pop
aaa
out
sub
nop
std
sar
push
test
sbb
sub
pop
mov
insb
lret
pop
ret
test
das
shrb
xchg
cmc
aaa
out
loope
mov
push
and
mov
xchg
dec
pop
mov
orb
jae
mov
mov
popf
add
or
dec
pop
sub
in
lds
adc
push
cltd
stc
cmc
lods
mov
mov
subl
sbb
fdivrl
test
ss
inc
push
in
adc
xor
aam
in
mov
sbb
cld
and
fbstp
cmp
jmp
jmp
clc
jmp
xor
iretw
into
cli
shrb
int3
cmp
mov
inc
imul
jno
inc
std
jnp
jb
jb
lods
je
sbb
inc
push
xor
fidivrl
cmp
arpl
rcll
inc
stc
rdpmc
out
lret
push
adc
lret
pop
ljmp
pop
inc
and
sbb
pusha
aam
xchg
stos
in
cltd
mov
mov
fisubl
push
fstpl
leave
lret
cwtl
mov
cs
mov
mov
cmpsl
lahf
leave
fs
sbb
xchg
hlt
and
fwait
ret
jp
fs
mov
and
dec
xchg
iret
sub
pop
sub
and
sub
jge
mov
mov
cmp
stc
scas
out
add
roll
scas
pop
fildl
jg
mov
pop
ret
jnp
mov
les
pop
call
ds
jno
lods
jo
test
fs
inc
cltd
pop
cltd
push
lds
dec
dec
pushf
jae
mov
adc
fcomps
adcl
lret
ljmp
pop
stc
cltd
aaa
lea
mov
cmp
fst
and
insb
or
out
push
mov
jnp
jbe
popf
sub
jae
xor
aad
sub
sub
and
negb
dec
or
inc
cmp
adc
xchg
xlat
int
lcall
and
mov
push
cld
add
pop
mulb
dec
inc
into
pop
xor
add
ja
movsb
add
cli
loopne
xchg
andl
dec
out
ss
mov
and
push
xchg
pop
inc
lret
cwtl
cmc
push
in
cli
andb
add
fcom
bound
pop
sbbl
dec
pop
cmp
jo
stc
sbb
mov
jmp
aam
sbb
and
xchg
out
mov
fidivs
jo
add
out
test
push
jae
ficompl
xchg
push
bound
jecxz
mov
xchg
call
mov
inc
insb
loopne
cmp
add
cmp
rolb
dec
xor
mov
arpl
push
in
adc
push
mov
scas
sub
or
adc
jl
xchg
push
xchg
fistps
mov
mov
sub
jge
mov
cli
cmpsb
mov
test
loopne
pop
xor
arpl
xchg
or
mov
cli
daa
or
hlt
mov
scas
mov
adc
cmp
iret
push
jns
ja
fld
lds
mov
or
sub
ret
inc
xchg
test
icebp
sbb
js
insl
cmp
js
addr16
sbb
xor
mov
stc
sbb
stos
mov
jmp
mov
jg
sub
cld
xchg
bound
scas
sbb
out
into
out
fisttps
popa
mov
in
xchg
in
lods
mov
pop
xor
mov
and
fisubl
pop
dec
xchg
ljmp
cmpsl
shrl
add
lods
lret
ret
mov
in
sbb
adc
aas
pop
push
push
loope
int3
shl
rep
cmp
sub
jle
xchg
jb
cld
cmp
jmp
fldpi
loope
and
imul
decb
out
mov
add
cmpsl
test
lods
mov
imulb
cmp
and
pop
call
fistps
sbb
mov
fxch
mov
dec
sbb
into
test
lods
push
and
jne
lock
dec
stos
push
or
mov
adc
movsb
stos
std
hlt
cmp
ljmp
sbb
out
jge
sbb
or
inc
movsl
add
movsl
in
mov
cs
out
std
scas
aas
shll
mov
or
dec
iret
push
fmuls
xchg
inc
mov
xor
xchg
mov
fistpll
adc
dec
icebp
cmpsl
push
pop
or
imul
lods
fld
cli
dec
adc
push
fcmovne
jecxz
fdivrp
imul
lea
test
enter
add
pop
sub
sbb
fisubrs
test
or
cwtl
enter
enter
js
pop
dec
cwtl
dec
dec
idivb
mov
repz
pop
jbe
mov
ret
sbb
mov
push
fwait
aas
enter
jmp
ret
pop
in
negl
sbb
mov
ds
mov
shll
es
call
push
lds
cmp
cmp
add
sub
aaa
sbb
loope
scas
imul
mov
test
xchg
cmc
adc
jno
or
add
xor
cmp
ltr
cmp
push
mov
ds
push
sub
xlat
es
sub
jmp
push
push
jns,pt
lds
cmpsb
mov
mov
push
mov
shl
sub
test
test
jne
pop
cmp
fs
jmp
or
mov
mov
fwait
popf
testb
mov
xchg
lcall
xchg
jo
xor
and
push
and
xor
sub
sbb
or
or
push
push
out
movsl
add
in
mov
xchg
jno
xchg
mov
jmp
popa
fdiv
and
add
dec
sbb
ficoms
sbb
daa
pop
xor
jns
mov
negb
fdivl
pop
or
xor
mov
into
push
mov
enter
psrlw
dec
mov
inc
incb
repz
iret
xchg
iret
sbb
paddb
mov
adc
sub
lds
mov
xchg
push
enter
add
sbb
int
mov
dec
loopne
xchg
push
outsb
jp
pusha
insl
sub
xchg
mov
xchg
cmp
fdivr
pop
loop
push
mov
inc
sbb
out
aam
mov
mov
ret
mov
mov
mov
xchg
repz
adc
fsubrp
adc
xor
in
jb,pn
mov
inc
jge
jmp
push
movsb
push
xchg
add
xor
dec
insl
nop
fdivl
and
cld
leave
xchg
add
test
mov
aaa
insb
test
and
xor
imull
cmc
xchg
clc
inc
inc
les
lods
aaa
shlb
pop
lret
mov
dec
cmp
fidivrs
frstor
movsl
imul
rorl
arpl
gs
shll
les
mov
filds
not
es
into
cmp
sbb
dec
lock
aam
scas
call
mov
adc
jg
sbb
icebp
push
xor
fcmovu
cmc
jl
lock
in
xchg
lahf
cmp
mov
inc
jnp
jl
arpl
inc
scas
hlt
xchg
mov
call
insl
std
and
test
lcall
xchg
ja
in
push
dec
sahf
out
and
push
mov
stos
push
mov
loop
push
fidivrs
in
ret
jl
add
cmp
dec
js
xor
ss
pop
jbe
sarl
lods
push
xchg
fistl
arpl
jle
in
insw
lahf
scas
xchg
inc
adc
mov
inc
pop
pop
decl
insl
in
sbb
cltd
pop
pop
test
es
in
cmp
int
or
aaa
xor
loop
pop
sbbl
xchg
mov
mov
add
jge
adc
jge
lcall
xlat
dec
mov
sbb
cltd
jb
jp
and
addr16
add
pop
cltd
adc
fs
fwait
and
or
mov
or
mov
pop
ret
pop
pop
adc
sbb
dec
or
shl
sahf
dec
outsb
jg
add
mov
sbb
cmpsl
jae
fisttpll
mov
push
dec
inc
icebp
repz
pop
or
hlt
ljmp
out
sbb
in
sarb
xor
addr16
pop
pop
mov
lods
ret
addr16
inc
cs
fwait
stos
out
mov
mov
fisttpll
loope
in
or
call
mov
pop
fimull
fidivs
cmp
mov
loope
out
inc
push
sbb
pop
shlb
jae
clc
adcl
dec
fmull
and
fsubrs
jbe
adc
popf
rcrl
cmp
push
adc
jle
xor
ss
imul
push
push
inc
push
xor
loope
jl
fidivrl
jge
outsl
mov
jl
dec
jecxz
cmp
mov
adc
std
ror
dec
jns
aas
lock
jp
cs
mov
mov
cmp
sbb
repz
leave
pop
je
cwtl
jae
push
pop
add
test
lret
pop
push
hlt
or
test
hlt
xor
dec
test
xor
or
or
popf
pop
pop
add
jecxz
or
xchg
cs
push
adc
pop
inc
mov
dec
adc
jl
sti
push
and
sub
mov
or
aaa
pop
imul
ja
or
js
leave
jb
fcomps
jl
insb
xor
mov
dec
int3
movsl
sub
lcall
lret
icebp
pop
and
adc
dec
dec
stos
mov
inc
xor
mov
sahf
pop
scas
pop
repnz
jne
inc
aam
daa
cli
mov
fists
mov
jp
add
jmp
test
adc
aam
push
xchg
insl
insl
jno
lea
or
xchg
adc
adc
mov
in
mov
flds
into
ret
jno
mov
fstl
xor
imul
mov
mov
or
das
test
aaa
nop
je
fildl
call
insl
xor
jl
mov
xlat
push
movsl
push
dec
out
dec
aam
push
push
xor
movsb
stc
mov
cmp
repz
nop
mov
adc
clc
mov
test
out
stos
mov
fstpl
cmp
pop
ret
xchg
cmp
movsl
mov
push
sub
outsb
imul
dec
sub
pushf
jo
adc
into
adc
mov
aaa
fsubr
sub
adc
pop
ret
or
stos
lea
sub
mov
and
decl
in
pop
icebp
or
notb
lods
adc
pop
xor
mov
or
xor
sbb
push
insb
ss
lcall
ficoml
or
cmpsb
adc
je
jae
pop
cmpsl
and
and
inc
scas
mov
push
repnz
inc
inc
mov
punpckldq
sub
and
push
push
xchg
loope
dec
stos
scas
jge
out
repz
jge
add
jno
mov
lods
push
mov
sbb
cmpsb
out
lods
cmc
xchg
dec
out
add
mov
int3
sbb
sub
push
mov
push
push
cmp
clc
mov
cwtl
shlb
mov
sahf
jno
jl
pop
or
ficomps
scas
inc
pop
fs
dec
jbe
jne
sahf
adcl
push
push
mov
inc
jns
and
or
mov
sbb
inc
out
mov
dec
push
scas
test
push
dec
push
in
pop
fs
aas
sahf
xchg
push
inc
sub
cmpsb
and
add
jno
sbb
mov
je
cltd
call
mov
cld
xchg
test
cltd
fadds
xor
cmp
xor
shlb
jbe
out
push
mov
jo
xchg
mov
sbb
xor
aad
arpl
sbb
push
shrb
lods
dec
pop
mov
lds
push
sub
mov
jae
push
cmp
push
push
mov
inc
sahf
cltd
jl
and
rolb
push
lret
call
xchg
addl
inc
movsb
aaa
xchg
gs
and
aam
jae
or
rcll
pop
push
dec
or
insb
fsubrl
add
stos
pop
sbb
imul
jp
xor
ja
adc
mov
jmp
jae
mov
cmp
mov
out
insl
jg
sbb
cmc
and
sub
cltd
mov
and
sub
push
mov
or
scas
movsl
sbb
outsl
pop
aam
js
hlt
mov
push
ror
add
adc
cltd
push
arpl
add
mov
mov
insl
pop
mov
jbe
out
movsb
bound
int
xor
push
and
mov
in
gs
cld
sub
inc
mov
sbb
lock
sub
xchg
fucomip
das
or
std
out
push
repz
mov
and
clc
scas
cmpsb
test
arpl
fdivrl
cmp
pop
scas
pushf
adc
cmp
jmp
jo
inc
mov
shrb
inc
unpcklps
push
jl
lret
fisttpl
mov
shll
and
cmc
xlat
nop
push
dec
movsl
jge
lahf
dec
pop
dec
adc
loope
sub
out
inc
and
std
rorb
or
mov
cmp
les
ds
movsb
je
aam
adc
jmp
lods
or
mov
repnz
xchg
push
orl
dec
jbe
jl
call
cmpl
adc
or
test
lods
icebp
mov
aas
jb
or
js
lret
pop
jbe
arpl
dec
jbe
lret
jmp
mov
cld
pusha
out
mov
divb
push
subl
adc
in
adcb
dec
mov
or
jmp
xchg
or
push
lret
jge
push
mulb
addb
push
sub
ret
push
ss
and
pop
fsts
out
and
jns
ljmp
mov
in
popf
sub
sub
xchg
jmp
dec
mov
in
xor
mov
enter
sbb
pop
subb
pop
dec
cld
sub
add
pop
shlb
daa
cmp
outsb
std
mov
lea
in
test
rcrl
pop
outsb
lea
jge
ljmp
sbb
popa
aaa
int
lret
xor
xor
fisubs
gs
push
push
sbb
or
xchg
adc
iret
pusha
pop
add
nop
or
das
xchg
mov
cwtl
dec
shll
add
dec
je
and
push
cld
pushf
xor
sub
insb
or
cmp
add
cmpsb
lods
int
dec
aaa
mov
add
sbb
dec
in
xchg
xchg
icebp
pop
pushf
xchg
stc
mov
sbb
push
loopne
jecxz
scas
test
out
pop
call
sub
add
cmp
cmp
fdecstp
pop
pop
ljmp
mov
icebp
sub
push
mov
lods
enter
cld
stos
xchg
dec
jb
sbb
stc
stos
mov
scas
mov
and
enter
lods
out
outsl
mov
mov
imul
mov
pusha
int3
adc
inc
nop
mov
data16
or
nop
dec
or
je
xlat
adc
jne
andl
xchg
cltd
call
push
jnp
mov
icebp
sbb
lods
out
aaa
cmp
pop
ret
mov
fstps
sbb
sar
fdivrs
mov
mov
pop
lret
test
xchg
add
sub
mov
sarl
dec
rorb
sbb
fists
mov
xchg
repnz
clc
mov
dec
mov
lods
pop
std
cmp
or
int
dec
adc
rcl
mov
clflush
add
rorb
int3
add
decb
lret
sub
or
jo
pop
fs
cld
cmp
push
pop
test
repz
ret
into
test
sbb
pusha
mov
add
cmpsl
mov
xor
xor
or
stc
out
mov
jp
pop
sbb
xchg
insl
fistps
mov
pop
shlb
inc
outsb
shrl
lods
aad
push
xchg
sub
stc
fbstp
push
inc
push
outsl
and
inc
pop
jns
into
fldl
scas
ret
jp
ret
cmp
hlt
daa
cwtl
vandnps
xchg
mov
cli
notb
dec
jl
loope
mov
add
add
sbbl
aas
cmp
lods
cmp
xchg
push
xchg
or
aam
mov
into
mov
sub
lahf
push
popf
sti
add
sbb
jmp
xor
iret
adc
clc
cld
push
sbb
pop
jbe
mov
mov
std
cmp
pop
popf
jmp
cmp
popa
sub
test
mov
mov
aas
mov
jl
in
lahf
lods
add
push
pop
xor
and
jbe
mov
cwtl
pop
aam
and
cmc
push
movsl
popa
rcrb
movsb
shlb
jg
clc
pop
js
xor
repz
add
in
pusha
push
iret
jge
push
iret
add
gs
jle
test
mov
addr16
push
in
or
pop
jae
loope
xor
ljmp
mov
insl
loop
push
popa
and
mov
mov
cmpsb
pushf
test
or
adc
mov
mov
sbb
or
adc
ja
into
lods
rol
xor
loope
push
xor
cs
mov
test
sub
pop
pop
pop
or
pop
cmp
push
out
outsb
jmp
sub
out
xchg
xlat
adc
stos
jnp
sbb
and
loopne
or
clc
push
push
gs
sahf
rorb
nop
in
loopne
lea
movsb
mov
jbe
arpl
rorl
jmp
dec
test
loop
jo
mov
rcr
hlt
push
cmp
lahf
aaa
lret
sbbl
ret
in
gs
daa
mov
sahf
daa
or
xchg
subb
and
lds
add
push
mov
mov
js
mov
nop
jbe
cmp
dec
in
rclb
pop
test
mov
fists
xchg
out
push
xchg
jecxz
addr16
mull
dec
jno
les
addl
ss
call
dec
cmp
in
push
xchg
jmp
cmpsb
add
or
sub
or
in
xchg
sub
xor
in
in
xlat
subl
hlt
add
jo
pop
enter
dec
pop
ja
pop
call
mov
mov
jp
out
sti
lock
daa
js
jmp
aad
inc
lods
xor
pushf
mov
push
inc
inc
cltd
mov
ficoms
add
push
daa
hlt
out
jg
cmp
mov
inc
sbb
in
nop
cld
push
mov
mov
xchg
loop
xor
iret
stos
popf
dec
call
dec
push
mov
sahf
ficoms
imul
push
aam
out
dec
push
mov
je
scas
add
mov
dec
scas
or
pop
jo
test
push
gs
inc
push
sub
xchg
cmp
mov
in
movups
push
popa
and
push
xchg
cld
jns
pcmpgtb
int
fidivrl
addb
pushf
add
loopne
outsl
mov
and
pusha
push
xchg
pop
pop
sbb
dec
cmp
in
std
push
pop
negb
cmp
push
adc
jmp
loope
and
ss
dec
scas
aaa
test
or
push
dec
inc
xor
loop
ds
mov
in
es
outsl
icebp
inc
push
pop
and
sbb
roll
int
cltd
insb
jne
aam
out
pop
imul
decb
out
loop
js
repz
ret
sbb
divl
push
lret
cmc
scas
cmp
cltd
mov
mov
xor
iret
jo
lock
stos
adc
ljmp
cltd
loope
adc
or
into
arpl
cwtl
int
insb
out
push
out
dec
jmp
frstor
sbb
mov
cmp
jnp
adc
xchg
testl
mov
mov
pop
movsl
xchg
mov
mov
lcall
arpl
xchg
xor
xchg
adc
xchg
hlt
shr
jge
scas
fwait
jno
testb
sub
and
in
pop
loopne
xor
jl
pop
int
push
data16
repnz
popf
mov
and
sbb
lcall
sahf
sbb
xor
adc
imul
pop
data16
sahf
or
push
cmpsl
sbb
ja
fadd
mov
lods
cmpsb
xor
inc
aaa
jns
pop
xchg
imulb
stc
fcompl
lcall
bound
ret
scas
fdivrs
add
pop
insb
mov
lds
scas
xchg
sub
mov
cmp
stc
dec
fnstcw
xor
mov
enter
push
cmovbe
xor
in
fstps
gs
idivb
rcrl
cmc
cli
subl
in
jecxz
jnp
aas
shll
pop
clc
imul
clc
push
dec
ficomps
cmp
jge
clc
cmpb
fcompl
into
scas
mov
push
pop
aad
repz
inc
add
xchg
loope
iret
mov
xor
mov
pushf
push
clc
cmp
sub
insl
sub
repnz
in
inc
adc
adc
pop
ret
pushf
pop
pop
xchg
popfw
clc
cwtl
sub
pop
loopne
cmc
mov
icebp
inc
addr16
jge
mov
sub
in
and
jp
clc
add
sub
sahf
jo
sub
insl
pop
ss
cmp
or
test
sbbb
stc
xor
dec
xchg
adc
sub
mov
and
push
push
subl
inc
jns
inc
into
mov
ret
hlt
rorb
ficoml
inc
xchg
xchg
stc
addb
inc
mov
jp
lods
push
je
fcomps
pop
adc
int3
mov
popf
jg
xchg
pop
imul
aaa
push
lcall
outsl
mov
mov
lea
and
insb
mov
pop
pop
out
dec
pop
lea
push
int
pusha
add
icebp
shl
jp
mov
and
add
push
es
adc
mov
or
movsl
pop
mov
cmp
cmpsb
aas
int3
pusha
test
inc
pop
enter
and
sub
out
mov
mov
arpl
push
arpl
test
xorb
mov
decb
push
fistpl
hlt
xorb
pop
fsubrs
mov
and
and
clc
leave
mov
jmp
xchg
adcb
or
or
pop
sub
subl
inc
ds
pop
pop
sub
adc
add
pop
mov
aaa
stos
xor
test
sbb
ds
and
mov
inc
rorl
shl
mov
push
jecxz
stc
mov
out
call
push
sbb
ss
push
out
xor
outsl
mov
pop
outsl
xchg
mov
inc
jno
sbb
or
jnp
xor
aaa
into
cmpsl
je
nop
mov
icebp
adc
frstor
or
jp
icebp
test
cmp
data16
push
ja
sbb
jmp
inc
jge
xchg
out
adc
inc
mov
dec
outsl
out
lcall
push
cmp
orl
jmp
hlt
add
insb
loop
pop
pop
xor
adc
add
xor
popf
mov
out
data16
xchg
mov
sub
xchg
fcompl
cmpsl
inc
idivb
popa
cwtl
add
orl
push
push
sub
xchg
in
dec
popa
lods
adc
jne
mov
das
cmp
negl
sbb
dec
cmpb
xor
nop
es
jo
sub
jnp
jecxz
mov
std
jnp
sub
pop
dec
test
push
arpl
mov
cmp
lods
arpl
adc
xorb
out
pop
mov
in
xor
loop
repz
xchg
mov
push
cli
or
ljmp
rcll
adc
sti
mov
push
repz
xchg
lea
sbb
mov
mov
aas
lea
and
jo
scas
xchg
hlt
pop
ljmp
cli
fildll
pop
addl
push
outsb
sub
adcl
adc
sahf
dec
fsubs
jge
dec
loop
sbb
or
imul
in
push
dec
xchg
inc
fistpl
xchg
jp
cld
repz
std
cli
pop
push
test
lods
sub
movsb
cld
lea
cmp
jne
mov
loope
js
push
dec
int
cltd
xchg
mov
loopne
pop
jne
lods
xchg
mov
cmpsb
xchg
mov
add
lock
sub
lds
xchg
int
jle
sbb
push
lret
out
jo
lret
in
lock
sti
jl
std
loope
mov
lret
imul
adc
jge
std
sub
add
daa
fldt
out
fnstcw
cwtl
pop
lods
stos
xchg
loop
cltd
push
sbb
outsl
hlt
and
xchg
pusha
test
or
push
mov
sub
out
adc
xor
adc
jg
loopne
xchg
js
sbb
addl
mov
jo
push
jns
div
mov
mov
pop
mov
mov
xchg
fidivrs
test
mov
xchg
jbe
or
push
inc
pop
adc
stc
stos
sub
icebp
test
pop
nop
outsl
push
xchg
mov
add
sarl
pop
xchg
lret
out
mov
mov
movsb
jp
std
les
mov
int
jmp
and
icebp
dec
es
fnstcw
movsb
xlat
pop
andl
pop
aaa
mov
cld
or
das
aas
pop
cmp
xchg
mov
icebp
sbb
fwait
ljmp
lahf
jno
popf
or
loopne
fnstcw
mov
pop
insl
jae
les
inc
inc
dec
push
aas
ds
popf
sbb
adc
int
and
loop
popf
or
xor
mov
sub
mov
xchg
je
pop
ret
mov
push
adcl
cld
push
push
int3
out
aad
push
movb
jo
cmpsb
push
mov
adc
in
and
mov
std
dec
cmp
xchg
sbb
and
push
faddl
push
int
loope
shrl
push
iret
mov
ljmp
add
mov
adc
jb
add
lods
xor
xor
mov
insb
mov
aad
or
pop
sahf
cmpb
rorl
cmp
je
mov
adc
adcl
je
sub
mov
sub
xor
mov
cmpsl
sbb
sub
aas
gs
test
adc
push
imul
std
jge
pop
dec
fists
cmp
adc
sub
lret
and
sbb
cltd
test
call
not
jle
in
mov
fucomi
and
test
nop
adc
and
ficompl
pop
fimuls
stc
mov
mov
push
jns
push
mov
jmp
out
mov
cmp
fsubs
js
cmpsb
push
sub
jp
mov
pop
loop
inc
int3
inc
insb
movsb
addr16
testb
je
faddl
movsw
je
mov
jne
xor
push
mov
gs
inc
dec
bound
lods
aad
mov
pop
jae
dec
lds
pop
cmp
dec
jno
ljmp
xchg
clc
add
test
inc
sbb
fbstp
das
dec
aaa
push
cmc
push
fwait
xchg
sub
sbb
fidivl
sbb
fcmovbe
jmp
mov
cmp
dec
push
push
popa
test
fstpt
nop
repnz
mov
icebp
repz
pop
pop
movl
push
adc
jne
pop
jle
scas
push
pop
pusha
mov
sbb
push
sub
test
aad
adc
aam
arpl
pop
mov
mov
lret
lods
cmovs
jge
aas
pop
arpl
leave
stos
sub
xor
adc
fildl
test
out
or
int3
dec
leave
nop
daa
or
or
fimuls
cmp
aad
out
in
mov
incl
incl
out
test
dec
xchg
lret
mov
or
adc
jo
test
sbb
enter
add
sub
ss
and
into
in
subl
add
dec
pushf
push
fimuls
test
repnz
xchg
cld
bound
cmp
add
add
push
popf
in
xchg
jmp
pop
test
cli
sub
mov
dec
mov
sub
sti
test
add
aam
add
stos
sbb
xchg
jecxz
add
outsl
mov
sbbl
jae
aad
ljmp
aas
adc
mov
mov
popa
lods
nop
add
xchg
stos
sbb
outsb
cmc
cli
mov
sbb
dec
mov
add
sahf
mov
scas
adc
xchg
cmp
add
leave
mov
or
or
aaa
arpl
mov
jmp
mov
inc
insl
mov
and
dec
mov
rcll
fdivs
jbe
jl
dec
jno
inc
sub
fwait
cwtl
and
and
fstps
test
into
test
add
stc
xor
neg
sub
mov
pop
jns
rolb
out
fs
mov
ss
xchg
mov
push
ja
jno
negb
int3
test
fistpll
adc
jl
frstor
mov
inc
lea
or
bound
stos
xchg
nop
inc
icebp
mov
in
test
daa
leave
xchg
lahf
cmp
in
loop
sub
imul
lock
mov
outsb
int
and
push
je
adc
pop
out
test
test
cld
orb
mov
outsb
cmp
jne
sbb
lret
mov
xor
lahf
mov
push
test
push
mov
xchg
cmpsl
pusha
ret
cltd
pop
mov
fwait
and
push
inc
mov
jle
lahf
adc
cltd
xor
lods
sbb
test
fs
movsl
push
andb
cmp
loopne
dec
xchg
mov
sti
adc
sti
mov
loopne
nop
stos
out
ja
xchg
arpl
jl
pop
in
rolb
ret
popa
jge
incb
jecxz
mov
or
mov
mov
lret
int
stos
ss
in
aad
push
jp
jl
sti
cmpsl
ret
out
sti
movsb
inc
xor
imul
andl
cs
mov
cmp
push
lret
push
sahf
aad
mov
jbe
cmp
mov
fistpll
mov
jge
sbb
push
pop
out
and
nop
rclb
pop
insb
xor
adc
aam
fbstp
cmp
dec
sarb
popa
jecxz
orb
inc
sti
aas
and
sarb
addr16
andb
shll
mov
popa
daa
cmp
adc
aam
cmp
lods
mov
and
add
aad
fidivl
dec
insb
push
fcomps
into
cmp
cwtl
mov
rol
add
fwait
sub
or
push
cmpl
pop
mov
pop
jae
xor
or
push
orb
mov
das
inc
nop
out
pop
mov
inc
xor
add
or
leave
mov
hlt
cwtl
pop
inc
std
pop
insb
jg
dec
cmp
js
sub
andl
jmp
inc
mov
lea
popf
jbe
in
mov
jge
scas
pop
dec
cmp
hlt
and
jg
fsub
test
mov
repnz
push
mov
imul
cmpsb
mov
movsl
insl
mov
push
and
mov
lds
push
mov
aam
dec
pop
loop
inc
cmpsb
dec
push
out
fsubl
add
inc
mov
jge
loop
ljmp
mov
jae
dec
je
jp
adc
sbb
cs
jns
dec
in
pop
pop
cmp
les
mov
addl
outsl
ret
mov
or
fs
push
fmuls
sub
shrb
lods
imul
sarl
aad
mov
cmp
and
cmc
and
jp
and
sub
sti
cmc
js
pop
xor
jnp
adc
dec
ljmp
addr16
jg
aas
push
mov
rclb
mov
movsb
iret
push
fildl
and
lcall
gs
mov
jl
mov
dec
stos
jp
push
in
jae
push
pop
inc
mov
in
mov
jnp
and
pushl
xchg
mov
dec
inc
sbb
add
leave
loopne
fwait
jb
pinsrw
in
or
cmpsb
shrl
add
pop
sub
sbb
stos
das
jle
arpl
jae
sbb
xor
fstl
in
sarl
mov
adc
xchg
sub
pop
and
or
popf
xchg
lods
fidivrs
in
sbb
xor
and
push
stos
es
sub
cltd
mov
or
insb
mov
mov
cld
push
pop
sbbb
pop
fwait
lahf
icebp
aas
push
in
xchg
mov
iret
pusha
cwtl
mov
mov
pop
mov
dec
in
push
push
jbe
fnsave
push
cld
jp
mov
inc
push
mov
add
imul
sti
push
ljmp
insb
mov
jge
out
sbb
rorb
addr16
mov
decb
and
dec
sub
inc
lods
sbb
movsb
call
fisubrl
sbb
lcall
ss
mov
mov
adc
lret
sub
sbb
mov
push
bound
xchg
xor
xor
adc
fldl
mov
ja
lcall
jne
xchg
mov
stc
arpl
rcrb
mov
pop
outsb
mov
push
mov
and
dec
xchg
into
lock
xor
jl
adc
push
dec
push
dec
cltd
pop
sub
jge
cmc
dec
or
hlt
ds
cmpsb
mov
les
pcmpgtb
mov
sbb
sbb
sub
mul
and
fnstenv
test
fwait
pop
mov
dec
pop
mov
mov
pop
popa
mov
imul
adc
mov
pop
xchg
and
jl
mov
call
xchg
fistpl
pop
shrl
divb
mov
mov
loopne
jge
aam
mov
sbb
ja
add
sbb
cwtl
call
fsub
push
out
sarb
xor
or
cltd
add
popa
test
icebp
mov
xor
ds
ficoms
adc
cmp
cmp
xor
jge
dec
mov
mov
push
mov
mov
xchg
fsubs
or
ret
jnp
mov
pop
xor
loope
mov
pop
repnz
hlt
xchg
inc
ljmp
cmp
loopne
out
pop
mov
and
jno
bound
daa
idiv
or
mov
out
clc
clc
movsb
cmp
pop
int
dec
pop
fcmovb
fwait
xchg
and
aam
jge
or
imul
loope
fs
add
orb
adcl
out
jno
sub
ljmp
enter
xchg
pop
fnstenv
mov
data16
jl
adc
cmp
test
sbb
loop
insl
fsubrl
out
adc
cld
faddp
add
xor
mov
or
sbb
xor
push
push
into
idivl
sub
sub
jmp
pop
push
or
jbe
jo
lods
jge
addr16
sbb
repz
icebp
cwtl
nop
pop
adc
xor
sbb
xchg
ja
inc
sub
clc
fisubs
xchg
les
fisttps
push
ret
call
stc
lds
xor
lret
mov
jge
out
rcrb
or
std
adc
call
out
cmc
cmp
testb
fs
jno
pop
les
pop
ja
in
jp
imul
xor
pop
or
mov
xor
std
sti
daa
mov
dec
sub
out
cmpsl
mov
jecxz
jno
clc
outsb
cltd
mov
mov
adc
sbb
push
xchg
pushf
repnz
jmp
call
int3
mov
xchg
mov
fwait
movsl
pop
out
popf
mov
xchg
xchg
cs
pop
or
jmp
xchg
hlt
pop
xor
aad
cmpsb
cmp
sbb
or
pop
xor
sub
fwait
cmc
lea
insl
mov
sub
insb
inc
aad
pop
mov
push
outsl
push
inc
inc
sub
push
pop
mov
jmp
mov
loop
sbbl
xchg
mov
in
push
push
movsl
xchg
rolb
call
mov
enter
push
into
and
or
std
lcall
mov
fcomp
leave
dec
les
mov
jno
sbbl
jg
in
imul
or
ret
push
dec
push
lret
lahf
cmp
mov
lock
pop
pop
adc
shll
int
sti
cld
sub
sbb
lds
xchg
pop
mov
addr16
test
dec
mov
pop
jb
push
jmp
stos
movsl
or
pop
mov
hlt
dec
xchg
test
out
dec
adc
sbb
test
mov
stos
adc
sbb
jge
xchg
jp
or
mov
dec
lret
or
das
push
inc
inc
sahf
dec
scas
xchg
jmp
gs
cwtl
popf
shl
lahf
mov
ret
and
shlb
pop
iret
mov
adc
jbe
popf
mov
sub
out
loope
mov
bound
mov
test
lret
dec
add
xchg
std
test
mov
call
push
shrl
mov
dec
orb
cwtl
out
daa
jge
sbbl
pusha
mov
idivl
adc
cli
jle
push
push
out
inc
in
xchg
movsl
cmp
xor
pop
add
call
lcall
test
mov
ja
mov
pop
mov
pop
imul
mov
lcall
dec
jno
push
add
fisttpl
dec
mov
inc
cmp
lahf
xchg
jp
xchg
cmp
xor
push
mov
xor
test
mov
hlt
pushf
fidivs
lahf
push
stc
test
out
iret
push
test
cltd
shll
pop
and
sti
jno
aam
sub
jmp
xchg
sbb
nop
or
iret
mov
movsl
xchg
pop
push
sub
test
or
dec
xchg
mov
mov
mov
cmp
or
in
ror
jbe
mov
push
in
loope
leave
mov
in
mov
stos
and
lcall
icebp
and
dec
sub
push
out
dec
lret
fs
xchg
lcall
mov
jmp
dec
shl
pop
fidivl
and
pop
sti
testb
mov
stos
inc
movsb
lcall
add
notl
xchg
lods
push
xchg
loope
mov
lret
int3
out
fdivl
fucomp
or
and
in
fistl
lahf
xchg
test
lock
xchg
mov
out
pop
xor
lahf
cmp
jo
fwait
jmp
mov
sbb
rorw
cmpsl
push
pusha
call
pop
jl
loopne
stos
leave
negb
popf
pop
sub
fcoml
xchg
movsb
stos
pop
in
mov
mov
popf
xchg
ja
and
mov
sbb
xchg
dec
mov
loopne
or
or
xor
loop
add
rolb
out
or
cmp
pop
iret
sbb
xor
mov
insl
aam
pop
out
sub
data16
mov
sub
or
int
testl
pusha
xchg
cmp
xchg
add
adc
stos
dec
lcall
cltd
stos
xchg
mov
shrl
jne
hlt
lahf
push
and
jl
shrl
rcl
mov
push
jns
pusha
adc
repnz
jmp
or
sbb
dec
jae
jle
sub
dec
sbb
sbb
pop
inc
repz
cs
xor
insb
lock
pop
mov
lret
push
mov
imul
mov
and
cmp
adc
hlt
into
adc
and
fdivrl
adc
insl
adc
fwait
mov
jae
mov
push
xlat
xchg
cmp
cmpsl
orl
fwait
les
aam
fcmovu
jne
daa
shlb
push
fstpl
xchg
rclb
inc
and
mov
sti
push
add
sbb
movsl
aas
mov
and
or
jb
mov
scas
fsubs
aad
push
js
out
pop
add
and
mov
dec
xor
in
fdivs
ljmp
add
jno
jb
stc
mov
xchg
hlt
push
sub
jge
push
xchg
in
es
inc
add
bound
jae
mov
ss
fmuls
mov
in
jns
popa
adc
xchg
arpl
fidivrl
hlt
jns
cmp
lods
aas
push
popf
sub
mov
xor
mov
shlb
test
in
call
aad
cmp
ljmp
insb
lods
dec
xor
iret
pop
or
jge
insl
data16
scas
cwtl
mov
dec
sub
rcrb
test
pop
pusha
pop
sub
inc
out
dec
xchg
push
jnp
pop
imul
orb
cmp
xchg
sub
jg
jp
xorl
ror
lock
or
mov
cli
mov
cmc
xor
lahf
sbbl
cs
imul
dec
xor
xchg
lret
mov
nop
xorb
or
jge,pt
sub
jns
clc
push
xchg
sarb
adc
aad
je
mov
mov
and
hlt
pop
data16
ret
cmp
dec
xlat
popa
jnp
fadds
les
push
cmc
addr16
mov
insb
loop
push
sbb
add
sti
test
dec
cmp
movsb
push
sbb
mov
xchg
sahf
jp
sbb
mov
xchg
out
mov
dec
push
pop
adc
insb
stos
sub
movsl
aam
ljmp
fxam
jle
test
notl
add
es
sbb
sub
pop
or
cmp
ret
out
inc
xchg
jge
cmpsl
dec
jecxz
sbb
orb
roll
sub
push
mulb
add
je
push
cmp
arpl
pop
add
popf
jle
xchg
xor
jb
iret
sub
xchg
mov
xlat
push
lods
arpl
dec
lds
mov
fcmovne
dec
outsl
or
xchg
mov
inc
icebp
addr16
mov
addb
dec
nop
dec
in
mov
pop
xor
icebp
call
pop
mov
or
lahf
inc
fsubrl
add
loopne
scas
add
mov
es
mov
fs
ljmp
arpl
addl
push
repnz
push
int3
jg
push
les
repnz
mov
and
xchg
adcl
adc
mov
cld
or
adc
testl
jge
mov
sbb
pop
xor
cs
mov
sbb
pop
add
loope
pop
movsb
mov
jp
or
pop
jle
mov
les
push
mov
hlt
pop
leave
data16
inc
sbb
enter
adc
mov
mov
adc
scas
jg
and
inc
lods
fbld
insb
adc
push
cld
xor
dec
dec
sub
jnp
in
mov
xchg
lods
fcmovnbe
mov
int
mov
mov
xchg
mov
push
dec
cmc
daa
xor
push
fistpl
mov
imul
and
div
and
int3
sarb
test
mov
arpl
mov
das
cmp
push
dec
subl
subb
cmp
and
orl
adc
les
pop
rcll
push
pushf
lcall
jb
int
sub
push
dec
scas
lret
mov
push
mov
call
sub
add
jae
in
movsl
mov
cmp
mov
and
sbb
repz
add
ljmp
mov
mov
xor
es
scas
sub
dec
sahf
xchg
mov
shrl
mov
ja
filds
inc
loop
cmp
jg
out
jnp
push
push
fldl
lret
push
add
add
pop
cmp
inc
ss
lret
int3
dec
stos
jl
mov
insb
sbb
movsl
into
sub
xchg
jnp
aaa
sbb
sbb
lret
insb
xor
jp
rcrl
movsb
push
fcomp
lret
and
sbb
jmp
sub
inc
cmp
test
int
adc
mov
shlb
inc
shlb
inc
rorl
roll
jg
sbb
aaa
adc
xor
imul
xor
pusha
sbb
mov
rolb
nop
adc
cmp
cmpb
dec
mov
push
mov
loope
add
bswap
xchg
dec
call
mulps
or
mov
pusha
dec
pop
sub
push
fldcw
push
cli
mov
lret
int
mov
movsb
pop
aam
xchg
inc
and
in
xor
mov
seto
aad
cs
adc
in
outsl
mov
daa
add
sahf
ret
and
push
fdivl
push
test
movsb
lds
push
jno
jp
push
mov
mov
lock
xchg
sbb
push
mov
push
fistpl
lods
and
lods
fwait
adc
js
and
sbb
stos
cwtl
push
daa
push
mov
stos
bound
jge
popf
xchg
jl
mov
dec
notl
jbe
pmuludq
jno
sbb
inc
xor
arpl
mov
clc
aas
xchg
mov
sub
xchg
fdivr
ret
jl
add
mov
sbb
jno
imul
scas
cmp
pushf
push
test
dec
xor
push
push
into
push
push
mov
es
int
push
adc
cwtl
mov
call
xchg
jns
xor
dec
int
adc
pop
mov
frstor
xchg
mov
sbbl
les
bound
leave
lret
adc
aaa
xor
cwtl
xchg
push
rolb
push
pop
adc
xchg
test
inc
inc
int3
push
pop
cs
cmp
or
adc
movsb
fists
push
cmp
pusha
daa
mov
movsb
mov
wbinvd
data16
inc
jg
cld
cs
push
push
mov
pushf
imul
jl
inc
roll
std
lret
or
rcll
and
inc
cld
inc
inc
sub
mov
mov
xchg
test
mov
add
hlt
push
test
ficompl
pop
sbbb
addl
mov
in
jnp
popa
fcoms
mov
xor
popa
pop
mov
lods
pop
inc
fwait
mov
sbb
inc
bound
repnz
sbb
mov
lret
pop
mov
stos
nop
sbb
addr16
and
jle
fnstcw
out
jge
fcom
push
sbb
ja
enter
pop
push
ffree
lret
lret
xor
mov
push
addr16
dec
add
in
sbb
add
push
sbb
mov
call
cmp
mov
sahf
xor
fnstsw
repnz
outsb
setge
inc
ret
push
xlat
imul
lock
hlt
mov
cmp
and
out
dec
jmp
rorb
xor
outsb
cli
sub
mov
fs
inc
negl
adc
enter
sbb
mov
and
testl
cmp
jge
testb
fiaddl
and
xor
int3
dec
repnz
lcall
xor
push
dec
or
ja
push
or
mov
in
pop
add
call
add
adc
cmp
ja
cmp
pop
sub
mov
movzwl
mov
dec
pop
push
mov
or
xor
scas
ljmp
imull
movsb
repnz
int
xlat
cli
or
clc
gs
roll
arpl
mov
ja
xor
loop
inc
jo
xchg
and
pop
aad
in
into
int3
sbb
pop
cmpsb
inc
repnz
clc
dec
pop
xchg
mov
mov
scas
loop
push
push
packuswb
dec
loope
xchg
or
xor
arpl
mov
add
mov
xchg
bound
sti
ret
lods
jmp
inc
and
push
cmc
jp
jne
mov
dec
mov
sbb
inc
lea
sub
shrb
adc
adc
fcompl
mov
test
cmp
test
lcall
mov
cltd
pop
sbb
ljmp
inc
push
jae
ret
fisttpll
je
cs
cmp
mov
outsb
fidivrl
inc
xor
ret
add
push
cwtl
pop
scas
lods
cmp
imul
mov
push
add
pop
outsl
mov
aad
fistps
inc
mov
jl
mov
push
repnz
mov
lea
out
das
push
pop
repz
pop
xchg
inc
je
push
int
fst
cmc
insb
mov
cwtl
sbb
data16
data16
lock
cli
xor
leave
sub
add
out
inc
sbbb
fdivl
pop
and
sbb
inc
mov
xor
js
mov
adc
xor
jl
sar
xchg
add
out
js
xchg
scas
mov
cmp
hlt
cmc
xor
fadds
mov
in
out
das
push
mov
js
fbld
bound
sbb
and
mov
aam
cmc
mov
xor
bnd
and
xor
cmc
and
mov
jp
test
lods
test
and
or
into
in
jo
pop
jmp
mov
ds
out
add
mov
inc
outsl
stos
enter
inc
fstpl
out
xchg
sbb
cwtl
lret
sub
iret
dec
sbb
clc
adc
pop
call
xor
xor
sbb
iret
xor
ret
lcall
xchg
mov
add
icebp
mov
add
call
or
dec
test
inc
lahf
jp
jge
mov
cmc
stos
jae
mov
jne
in
call
jle
or
out
imul
lds
dec
leave
test
test
in
lret
lds
arpl
dec
xchg
and
inc
arpl
stos
outsl
adc
push
daa
inc
push
pop
je
push
jecxz
and
xor
xchg
mov
out
add
cmc
mov
cmp
push
sbb
sarb
mov
sbbb
gs
jb
jno
cmpsl
sbb
lret
xchg
jl
dec
jl
xor
jp
or
pop
imul
push
movsl
in
push
inc
add
test
mov
repz
int
rep
adc
sarb
cs
xchg
js
cmp
mov
jae
fucomp
xor
xor
xor
mov
fists
inc
jno
mov
out
fstpt
cmp
mov
pop
sti
ljmp
pop
pop
stc
test
xchg
xor
out
mov
jle
pushf
gs
addr16
int3
outsb
jmp
mov
movsl
mov
jmp
jl
cmp
inc
mov
clc
xor
jno
dec
xor
add
imulb
xor
xchg
push
out
outsl
push
fdivrp
stos
mov
mov
bound
je
pop
addr16
pop
sbb
lods
loop
ss
add
push
rep
aaa
jl
lods
mov
pop
arpl
out
mov
push
sub
mov
fwait
mov
mov
out
cmp
pop
push
loop
dec
movsb
pop
lea
jl
sub
dec
sbb
in
movsb
cs
insb
dec
fwait
lods
mov
ljmp
int
repz
arpl
gs
fidivrl
ljmp
pop
addr16
es
or
and
dec
xchg
jle
lods
mov
push
cwtl
std
xor
int3
cmp
sub
jns
add
pop
into
insl
out
in
sub
loope
mov
mov
mov
or
loope
pop
outsb
in
xchg
add
repnz
jecxz
push
ret
pop
mov
popa
gs
xchg
pop
repz
out
aad
adc
test
mov
ret
jo
sub
mov
leave
push
mov
xchg
jge
fldt
adc
aad
ffree
icebp
rcrb
mov
lock
jecxz
dec
mov
adc
sbb
loopne
or
repz
aas
dec
pop
outsb
stos
jbe
xor
cld
add
dec
lret
or
cmpsb
scas
fisubrs
push
lods
mov
xor
insb
cmp
lds
pop
in
push
mov
gs
inc
sub
daa
sub
shlb
xchg
stc
xchg
dec
loop
scas
jl
xor
loopne
mov
mulb
jmp
outsb
inc
push
or
sbb
jl
sub
lds
add
pop
xchg
mov
sarb
andl
mov
outsb
mov
mov
add
sbb
loope
ffreep
test
xchg
movsb
pusha
into
pop
xchg
ljmp
inc
movsl
arpl
lret
mov
inc
add
mov
adc
xchg
mov
lds
push
adc
ljmp
or
push
mov
pop
imul
push
ljmp
fisttpll
xchg
loop
out
movsb
inc
push
pop
push
loopne
ror
fistpl
psubb
icebp
jge
fwait
mov
mov
pop
cs
lds
adc
mov
jecxz
pop
pop
jbe
jl
xor
dec
mov
mov
jmp
mov
push
ljmp
jbe
jl
aas
push
jns
or
xchg
lret
in
popa
ss
psrad
lea
xchg
xor
popa
dec
dec
pop
push
test
cld
fisttps
add
push
mov
pop
lret
jp
or
shl
jle
mov
cmp
fwait
lahf
push
cmp
mov
cltd
dec
push
or
call
mov
mov
pop
mov
or
popa
leave
or
lock
push
imul
rcl
stos
and
pop
mov
cmpsl
out
mov
xchg
dec
scas
push
in
jmp
loopew
mov
rol
xor
adc
xor
xchg
adc
or
leave
insb
or
idivb
push
scas
mov
hlt
test
mov
push
sub
push
ret
lret
sbb
test
stos
outsl
sarb
ret
scas
sub
fistps
mov
mov
xor
jmp
pop
jg
push
lea
dec
inc
fnstsw
in
in
xor
inc
movsb
lahf
sahf
jmp
das
cmpsl
push
or
mov
mov
ljmp
mov
addr16
jbe
mov
repz
sbb
movsl
mull
xchg
cmpsb
out
imul
or
xor
inc
mov
cmc
inc
jo
clc
push
in
push
or
jbe
adc
xchg
sbb
negb
push
pusha
es
add
fsubl
adc
mov
inc
push
idivl
enter
inc
mov
insb
mov
jmp
jbe
jecxz
sbb
aad
cld
sbb
adc
pop
sbbl
ja
xchg
loop
mov
in
pop
mov
and
movsb
rcl
pop
mov
jmp
lods
xor
mov
orl
adc
or
add
stos
add
in
adc
arpl
xchg
lahf
pop
icebp
cltd
into
push
aas
mov
pop
pop
imul
dec
in
lods
movsl
fnstenv
push
out
cmpsb
out
adc
dec
dec
sub
cs
adc
lcall
xchg
std
icebp
cwtl
xchg
xchg
das
test
dec
aas
arpl
adcb
into
push
fisttpl
mov
mov
adc
or
push
sub
aaa
lahf
sti
lods
je
shrb
div
leave
cmp
cmc
pop
lret
mov
or
les
sbb
int3
adc
cmp
or
adc
les
xchg
dec
arpl
in
jge
and
and
push
dec
push
dec
lret
pop
push
cld
cmp
cmp
lahf
xor
mov
and
ja
and
jb
pop
cmp
fdivr
repnz
insl
sbb
rolb
xor
test
sbb
or
xchg
repz
cmp
jo
shll
sub
std
mov
mov
aam
cmpsl
add
xchg
sahf
fsubl
cmp
xchg
movzbl
jge
pop
or
imul
pop
shr
jnp
adc
or
jae
and
fstpt
pop
xchg
xor
add
negb
sbb
je
mov
je
sbb
mov
mov
inc
adc
loope
mov
push
aad
dec
and
cmp
fsincos
jbe
cmp
imul
cwtl
out
adc
ret
push
fisubl
sbb
mov
jae
ss
test
push
scas
andb
out
adc
ficomps
mov
addr16
push
ret
ret
mov
icebp
jl
sbb
dec
xchg
movsl
movsb
repz
imul
cld
add
cmpsb
lods
test
add
pop
cli
iret
add
andl
repz
test
jne
jno
mov
push
xchg
mov
jne
xor
mov
mov
call
jae
dec
pop
popa
js
sti
xchg
jne
mov
aam
mov
ss
jnp
xchg
loope
movsl
dec
jo
fistl
iret
jmp
jge
add
jge
jle
jae
mov
or
push
fidivrl
jecxz
mov
jg
mov
hlt
jl
fnstenv
test
push
or
jnp
in
repnz
iret
and
mov
aad
pop
js
dec
dec
movsl
sub
dec
adc
push
js
xor
imul
loop
pop
lcall
xchg
call
fs
fsubs
fnsave
xchg
jmp
out
pop
jle
arpl
mov
pop
lods
pop
hlt
cmp
icebp
cmp
subb
cltd
and
mov
adc
pop
test
stos
imul
test
inc
leave
xor
jle
or
inc
call
add
cmpsb
cwtl
lock
push
addr16
push
lods
xchg
add
loope
stos
lahf
dec
and
xor
test
mov
mov
push
add
jp
andb
inc
clc
sbb
adc
sub
push
push
xor
cld
mov
ljmp
sub
bound
add
cs
sbb
push
sbb
push
incl
fildll
fbld
push
ret
inc
bound
push
xorb
shlb
mov
fisubrs
repz
push
loope
out
ror
fdivrl
cmp
xor
daa
outsl
pop
cmp
mov
mov
bound
add
in
lds
outsl
xor
fnstsw
ja
idivl
loop
xor
xchg
mov
pop
mov
loop
jge
sahf
and
sub
push
movsl
adc
mov
lds
fdivrs
cs
push
cmpsl
outsb
push
ds
jns
and
sbb
movsl
mov
sbb
sub
mov
inc
and
fucomip
cmp
rcr
inc
xor
add
icebp
adc
and
mov
divl
pop
outsb
mov
sub
aaa
or
lods
daa
data16
inc
rcrb
dec
mov
mov
int3
dec
sbbb
stos
inc
xor
push
adc
repnz
add
movsb
xchg
push
shlb
aad
rcl
jge
dec
aam
lods
add
push
js
pop
jecxz
jne
test
mov
out
xor
push
cmpsl
push
stc
jb
orl
aad
jg
pop
inc
or
std
dec
pop
subb
mov
mov
mov
pop
sub
mov
adc
push
push
and
aam
adc
mov
in
pop
cmpsb
jne
stos
subl
jp
in
stos
fistpl
aad
adc
dec
mov
stc
cmpsl
repnz
mov
mov
sbb
sti
pop
test
mov
mov
inc
mov
push
clc
xchg
sbb
divb
push
add
cld
ficoml
incb
fcoml
es
xor
mov
jo
js
pop
xor
sbb
popf
iret
ljmp
outsl
xchg
fdivp
ret
mov
mov
enter
aam
cmc
or
bound
add
jb
adc
sub
xchg
cmp
sub
sahf
push
mov
pop
mov
in
jl
lods
and
dec
push
mov
jp
movsb
sub
xchg
mov
aas
pop
nop
addr16
ret
cs
xor
ja
jecxz
enter
xchg
gs
sbb
enter
out
scas
fnsave
sarb
in
adc
test
mov
ret
add
js
mulb
jnp
pushf
je
fwait
mov
ficomps
ds
fmull
enter
repz
add
fdivr
mov
xchg
sbb
popl
mov
into
push
imul
fdivrl
inc
jle
jne
insl
shr
loop
xor
jb
movsb
movl
movsl
inc
push
cld
push
cmpsl
repnz
int
mov
push
cwtl
lahf
mov
stc
adc
fucom
cmp
jno
pusha
fimuls
pop
sub
out
mov
xlat
xchg
jg
lret
and
icebp
push
insb
push
leave
push
lret
xlat
loop
leave
push
and
xor
cmc
rcrl
xchg
mov
push
leave
add
fdivr
xor
cmpsb
pop
mov
test
fs
inc
pop
rolb
cmp
sbb
insb
sbb
jb
jle
and
add
mov
push
clc
fidivl
dec
xchg
rcll
loop
push
fnstsw
fisttps
into
mov
push
leave
in
stos
aad
cmp
and
xor
xor
or
out
cmp
shlb
jmp
pop
pop
pop
es
add
hlt
and
cli
mov
and
cltd
jge
js
movsb
inc
push
aaa
icebp
dec
mov
inc
xor
repnz
mov
sbb
pushf
jge
xchg
push
xchg
arpl
fildll
test
adc
repz
aaa
cmp
data16
shrb
aam
pop
orb
dec
mov
push
lods
cmp
sbb
cmpsb
outsl
jne
fisubrl
inc
fdivrp
cmp
arpl
or
nop
out
mov
test
xchg
fadds
rorl
ja
pop
mov
xor
test
push
mov
ret
add
cwtl
xor
inc
cmp
imul
jno
gs
jnp
jge
repz
pop
mov
int
adc
cmc
jb
in
sbb
mov
cs
mov
dec
flds
filds
stos
cmpsl
outsl
xor
stc
popf
pop
jns
mov
or
mov
or
fcoml
mov
add
int3
pop
shr
add
in
inc
call
sbb
sub
gs
jne
push
add
pop
sub
and
mov
mov
lret
shll
fs
out
dec
hlt
xor
into
pusha
fwait
in
jecxz
stos
loope
dec
xchg
cwtl
pop
dec
out
push
inc
cmc
jb
xor
fisttpl
aad
nop
cmp
aaa
ja
insl
push
push
pop
push
inc
lods
sbb
inc
adc
daa
mov
in
sahf
inc
fdivr
add
fimuls
mov
push
scas
dec
cmp
xchg
fcmovnu
movsb
rcll
sub
inc
lods
stos
mov
push
jbe
adc
inc
data16
es
push
sub
inc
aam
fidivrs
add
xlat
inc
cmp
int3
stos
lods
test
xorl
mov
sbb
aam
jg
imul
pop
test
out
lock
fiadds
mov
push
jp
clc
nop
push
imul
and
ja
std
je
ret
repz
loop
pop
into
and
push
lahf
mov
stc
xlat
pop
cmpsb
pop
repnz
and
mov
rcll
jmp
push
add
or
arpl
lds
ljmp
arpl
fnstsw
cmc
pop
aad
xor
call
jge
dec
pop
pop
mov
dec
clc
repnz
mov
cmp
pushf
sbb
subl
pop
dec
mov
mov
sub
xchg
pop
jo
bound
mov
imul
sbb
add
sub
popf
cmpsl
shll
push
adc
xorl
mov
shlb
xor
sbb
xchg
add
pushw
inc
lds
cmpsl
mov
pop
push
outsl
mov
push
push
mov
cs
jmp
pop
mov
xor
push
fcmovb
addr16
pop
cmp
sub
push
xlat
add
jo
jle
roll
and
mov
xchg
push
fucom
outsb
inc
xchg
out
imul
loope
mov
js
subl
inc
pop
sbb
leave
pusha
push
mov
sub
loope
sub
in
mov
shlb
or
cmc
push
or
pop
mov
scas
call
enter
pop
dec
aaa
into
call
int3
sbb
push
xor
add
inc
cs
cwtl
mov
adc
add
cmp
inc
and
jmp
push
add
jl
jbe
mov
add
push
mov
jnp
cli
xchg
insb
add
xchg
popf
bound
bswap
xchg
pop
fsubrs
pop
inc
jle
mov
in
xchg
negb
push
cld
mov
adc
call
dec
jge
adc
add
test
mov
loope
push
inc
mov
test
mov
in
lds
pop
das
pop
jecxz
insl
adc
cmpsb
lock
popa
pop
sti
pop
xchg
scas
push
jb
and
push
mov
repz
loope
loope
lret
pop
inc
out
push
and
mov
mov
sahf
pop
cld
jmp
test
mov
or
int
decb
test
mov
repz
mov
cmpb
pop
rcl
js
aam
xchg
pop
insb
fidivrs
jns
inc
inc
or
cmp
ss
xchg
decb
pusha
jl
data16
cltd
adc
ret
sbb
enter
mov
fiaddl
clc
cld
shlb
repnz
lea
cli
adcl
dec
in
xchg
gs
mov
mov
int
es
in
ficompl
shll
andb
mov
jo
aas
cmc
icebp
lods
mov
and
mov
push
sbb
test
dec
or
push
dec
sub
pop
add
inc
and
mov
mov
mov
xor
inc
fst
test
jg
and
in
data16
div
pop
mov
call
push
and
or
mov
test
movsl
push
sahf
jle
fmulp
sub
inc
push
adc
sub
sbb
lods
stos
int
cmp
jecxz
mov
mov
inc
dec
movsl
jle
jmp
jo
pushf
jecxz
push
lods
mov
arpl
fidivs
repz
ljmp
dec
jge
sarl
jne
and
pop
lods
cmp
push
dec
jl
jmp
stos
pushf
fxch
out
mov
jecxz
push
or
aaa
aad
les
lock
ret
mov
mov
mov
xchg
sub
es
ficoml
stc
and
ret
je
stc
pop
aas
inc
sti
fisttps
push
jg
fmull
dec
pop
inc
int
scas
in
fadds
cld
and
in
lret
lods
subb
pop
xlat
dec
dec
pop
pop
inc
fdivrp
jno
mov
xchg
lea
dec
and
enter
pop
outsl
mov
int3
outsl
test
shlb
fistpll
push
scas
test
pop
and
popa
icebp
jecxz
inc
mov
and
iret
xor
xchg
ret
fdivp
pop
out
out
cmpsl
sub
shrw
mov
jge
xor
cmp
clc
dec
mov
in
jp
insl
cli
and
imul
pop
aad
add
cmc
ljmp
sub
sub
push
xchg
insb
test
dec
fs
xor
fsubrp
mov
cmp
xor
mov
mov
repnz
add
imul
sbbb
pop
nop
fnstenv
adc
js
and
inc
mov
dec
inc
or
iret
fcoml
stos
push
je
inc
mov
pop
xor
dec
xlat
enter
mov
out
dec
int
ja
cs
pop
cmp
sbb
dec
stc
data16
enter
dec
dec
push
out
xchg
clc
stos
mov
mov
test
inc
xchg
rcll
testl
popa
hlt
loopne
iret
sub
pop
fldt
pop
sti
out
sbb
mov
jnp
xchg
outsb
xchg
sub
and
xchg
or
addr16
scas
mov
arpl
orb
add
mov
pop
cmp
orb
jge
dec
int
pop
inc
push
add
sbb
mov
xchg
add
and
dec
lcall
xchg
insb
addr16
dec
add
std
fadds
jge
sub
mov
and
sub
fbld
call
ret
lcall
cmp
and
mov
mov
fwait
pushf
les
or
or
cltd
popa
jne
jns
addb
fistl
dec
aaa
and
test
ljmp
inc
ret
repz
mov
lea
pop
loope
call
int
mov
inc
pop
jecxz
cmpb
imul
rcrb
cld
sub
and
fistpll
and
add
pop
sbb
xor
jp
xchg
popf
mov
mov
lods
rolb
sub
xchg
sbb
pop
inc
pop
insl
sub
mov
push
inc
jae
add
sub
movsb
outsb
ret
lahf
xor
arpl
shll
mov
push
data16
inc
cmp
and
jp
or
mov
xchg
pushw
lds
xchg
adc
shld
dec
pop
leave
or
cli
push
add
xchg
inc
call
outsb
or
xorb
mov
push
jno
add
jecxz
pop
xchg
mov
dec
pop
sbb
rol
int
mov
cmpsl
push
push
cmpl
cs
push
hlt
mov
jle
pop
sub
adc
out
jbe
xlat
sahf
std
lds
mov
mov
and
jno
mov
mov
pop
push
movsb
pop
jbe
and
es
es
xor
adc
lds
sbb
or
fs
and
ret
into
xchg
fs
aam
out
fstpt
pop
mov
lcall
negb
subb
addr16
add
push
push
push
pop
cmp
mov
mov
and
jo
sbb
scas
inc
mov
adc
mov
mov
sbb
dec
or
dec
cltd
add
push
pop
inc
leave
jp
push
mov
xor
push
nop
fistpll
sbb
inc
out
sub
addl
and
iret
sbb
inc
mov
addr16
adc
mov
xor
aad
mov
mov
inc
mov
les
add
xchg
lcall
fisubs
adc
pop
xchg
lcall
mov
pop
pop
jns
or
mov
aam
aaa
and
stc
popl
dec
push
out
mov
mov
mov
push
out
dec
cwtl
sub
xor
outsb
pop
xchg
scas
jbe
enter
repz
cmpsl
ret
xchg
scas
cmpsb
pop
jb
insl
dec
sbb
cmc
and
rcll
mov
sbb
sbb
loopne
mov
xchg
mov
rorl
leave
fwait
cltd
inc
mov
jno
adc
fists
jp
fistps
pop
mov
pop
sub
les
int
dec
add
shrb
dec
push
cmp
sbbb
push
inc
sbb
shlb
lods
adc
sbb
repnz
jbe
out
pop
nop
negb
dec
loop
push
mov
test
or
or
mov
pop
cli
iret
fs
or
bound
clc
pop
ljmp
cs
pop
push
jle
data16
add
or
or
fucom
je
pusha
inc
jg
add
bound
jle
decb
and
jne
adc
shlb
sbb
in
cmp
aad
inc
xorl
das
punpckhbw
fstps
and
roll
or
sbb
inc
add
leave
jle
mov
or
filds
loope
add
rolb
test
adc
outsb
sub
gs
xchg
add
fidivrl
pop
sbb
mov
pop
xchg
in
flds
popa
test
cmpb
lahf
daa
addb
out
add
pop
mov
enter
inc
jmp
ss
fsub
testb
add
es
ds
or
add
nop
push
push
inc
adc
sbb
jae
test
or
mov
imul
cmovne
fnstenv
mov
leave
jne
test
das
cld
call
fiaddl
or
outsl
xchg
das
test
jns
mov
mov
gs
jno
mov
xchg
fiaddl
jns
jl
lret
or
inc
nop
push
jae
aas
repz
jb
pop
ja
sbb
add
jns
popf
cmpsl
fidivrl
adc
mov
in
xchg
mulb
jl
add
lds
pop
fiaddl
sub
cmp
cmp
mov
dec
sub
inc
mov
insb
stc
das
nop
ret
xlat
xchg
and
mov
lret
push
cli
pop
sub
scas
fldl
mov
movsb
lds
mov
fwait
jge
or
pusha
les
adc
xor
enter
or
out
dec
mov
jmp
lcall
inc
jp
jno
les
jmp
rcr
xchg
xchg
mov
and
scas
push
shrl
push
jne
or
xchg
std
mov
clc
call
orl
xor
fucomip
fs
sub
dec
cs
aad
popf
sub
imul
lahf
dec
or
outsl
pop
int3
inc
gs
pop
orb
icebp
popa
stos
mov
inc
test
adc
xor
add
jl
dec
cmp
adc
std
push
dec
sub
xor
out
fldl
add
ljmp
sarl
mov
push
push
and
mov
scas
lods
dec
js
clc
jmp
pusha
lret
add
push
add
and
or
pop
push
mov
add
daa
xchg
push
adc
xchg
inc
pop
popa
ja
jle
outsb
gs
fwait
loopne
inc
xor
outsb
cmp
and
sbb
mov
pop
jmp
movsl
nopl
dec
rcrb
jge
jecxz
int3
sbb
inc
repz
jmp
mov
sbb
sahf
lock
test
test
pushf
mov
stc
xchg
mov
cs
dec
ja
add
pop
cmpsb
or
mov
and
mov
mov
sahf
mov
jb
mov
inc
or
inc
pop
and
ret
out
imul
icebp
xchg
mov
insb
call
jno
and
sti
int3
lods
cli
arpl
cmp
loopne
daa
inc
sbb
push
sub
sub
imul
lret
pop
test
lret
push
or
jg
scas
loop
mov
push
cmp
xchg
icebp
mov
cmp
fmuls
cmc
cmp
adc
leave
xchg
fldt
mov
cs
scas
mov
hlt
or
push
mov
ljmp
gs
xchg
push
test
xor
sub
mov
push
jmp
or
mov
and
and
leave
push
push
dec
xor
mov
in
aam
cmp
data16
pop
call
mov
roll
jbe
aaa
subb
test
gs
add
icebp
pop
mov
xchg
xchg
les
push
or
xor
and
xchg
mov
int
stc
jmp
jl
pop
jne
fistpl
xchg
stc
test
loop
push
push
out
loope
sub
icebp
adc
sbb
not
lods
mov
loope
call
pusha
add
push
cmp
jno
adc
mov
adc
push
mov
pop
subb
sub
ja
ss
enter
dec
mov
in
dec
push
aaa
xor
popa
hlt
add
aaa
inc
movsb
lcall
dec
mov
adc
cmp
or
in
adc
xor
cmp
out
cwtl
cltd
adc
jns
out
jp
stos
ljmp
cwtl
dec
leave
mov
lahf
adc
jecxz
jg
sub
mov
je
sbb
ret
adc
repz
push
jne
sbb
xor
jnp
sarl
pop
add
mov
fldt
fmuls
and
insb
loopne
xchg
stc
lock
pop
shr
xchg
std
sbb
xorl
std
aas
rcr
daa
pop
lcall
push
in
daa
inc
sub
pushl
scas
mov
inc
mov
js
jp
ja
pop
cmp
cmp
out
rorl
mov
adc
insl
push
jo
or
cwtl
xor
hlt
mov
idiv
test
or
xor
out
sbb
xchg
mov
mov
jnp
xchg
mov
jnp
pushf
lahf
jl
push
icebp
or
add
jnp
xorb
ds
cmc
lock
imul
movsb
pushf
mov
xor
inc
xor
int
aas
add
mov
mov
mov
loop
inc
fidivs
addr16
pop
out
movsb
sbb
and
mov
test
mov
fcmovnb
jo
lock
data16
dec
sbb
dec
lock
mov
dec
xchg
xchg
cwtl
jecxz
hlt
xor
sti
dec
sub
stos
insb
mov
ljmp
xchg
pop
push
out
adc
fisubs
pusha
js
lock
push
outsb
mov
clc
nop
test
imul
mov
add
fdivs
or
shll
sub
frstor
sub
cmp
mov
fs
xchg
jne
mov
jae
add
add
call
xchg
mov
mov
cmpsb
xchg
push
sahf
les
daa
xchg
nop
add
inc
adc
inc
xchg
pop
stos
cs
loop
or
inc
scas
sbb
mov
scas
fiadds
inc
push
in
ljmp
jg
pop
xchg
negl
add
fistpll
push
jge
sbb
out
mov
push
mov
and
ljmp
add
inc
out
rclb
sub
add
push
fisubl
dec
push
scas
xlat
jo
test
sub
jne
in
and
cld
jp
test
xor
insb
les
test
imul
pusha
test
mov
jmp
mov
daa
ss
loope
scas
repnz
mov
aam
mov
adc
push
rorb
sbb
insl
out
push
shlb
insb
and
aas
sti
outsl
sub
pop
pop
fidivs
sub
jae
fwait
popf
je
inc
mov
pop
in
pop
jge
imul
jp
jo
enter
cmp
stos
repnz
gs
imul
pminub
sub
aaa
sbb
mov
pop
pusha
mov
pop
and
sarl
ss
mov
push
into
jno
pop
mov
add
shlb
test
dec
pop
stos
pop
out
or
add
inc
imul
aaa
jge
pushf
inc
push
xchg
xchg
sahf
or
stos
inc
and
cmpsl
sub
lret
sub
gs
movsl
mulb
mov
les
push
mov
add
in
mov
xor
and
mov
adc
loop
pop
repz
rcl
or
jmp
and
adc
inc
dec
loope
les
push
mov
outsb
mov
mov
pop
pushl
mov
mov
xchg
ror
lds
mov
in
mov
in
loope
add
out
daa
sbb
je
popa
rorb
outsb
ror
add
adc
adc
xchg
sti
and
inc
jno
push
jp
hlt
movsl
loop
lcall
test
mov
inc
shrb
fmuls
push
cmp
mov
outsb
into
in
pop
imul
pop
dec
movsl
add
mov
xchg
sub
lret
and
push
fdivr
ret
imul
int
xor
lea
pusha
loop
shll
cs
rol
out
or
roll
jo
mov
loop
jle
ja
aad
pop
fstl
sahf
sbb
push
jg
arpl
leave
mov
pop
jecxz
mov
xor
dec
test
sub
cmp
aam
jmp
push
jge
push
fidivrs
inc
int3
adc
jno
and
adc
jle
loope
cs
mov
lods
xchg
jnp
arpl
mov
mov
and
subb
insl
adc
ss
mov
pushf
fimull
mov
arpl
stos
inc
push
mov
int3
cli
dec
push
mov
stos
and
xchg
and
adc
addr16
push
cltd
pusha
cmp
fnstenv
mov
stos
mov
xlat
dec
mov
fbstp
xor
aaa
sub
jb
mov
rcrl
out
jo
pop
testb
test
and
sub
xchg
sub
idiv
jns
aad
lds
pushf
ja
outsl
pop
int3
add
cmc
mov
out
loope
add
add
mov
mov
xor
into
mov
cmp
fstl
xchg
push
dec
mov
cmp
stos
or
adc
or
xchg
mov
mov
jge
xor
dec
xchg
mov
mov
or
pushf
dec
push
fs
mov
sbb
pusha
push
inc
call
or
mov
imul
inc
outsb
sbb
push
xor
jle
pop
or
jae
ja
lods
adc
nop
xchg
inc
and
jbe
arpl
jo
wbinvd
insb
in
mov
sbb
mov
rcrb
and
test
lea
pop
sub
cmp
and
out
mov
imul
in
mov
incl
jge
or
or
push
or
mov
jl
lods
test
ret
push
ret
inc
dec
xchg
iret
push
and
movsb
loopne
inc
es
mov
int3
xchg
test
cmp
sub
mov
and
mov
and
icebp
or
divb
bound
cmp
movsl
nop
movsb
jp
ljmp
ljmp
inc
ds
jbe
sar
mov
or
xchg
imul
scas
test
cli
notl
aam
and
jne
pop
sub
mov
cmp
xor
arpl
sbb
fadd
jne
loope
cs
jmp
cmc
or
jbe
cmp
test
adc
lods
lret
shlb
addr16
out
sbb
jmp
pop
inc
xchg
dec
mov
addr16
movsl
mov
das
int3
jno
xchg
jp
xor
scas
cmp
jmp
mov
adc
push
dec
sbbb
ljmp
mov
jecxz
rcll
add
fwait
mov
int3
mov
mov
mov
mov
cmp
dec
pop
cwtl
stos
aad
dec
jb
push
add
jbe
out
jp
test
popf
call
push
cmpsb
jnp
les
sub
popa
and
aaa
ss
pushf
xchg
xor
testb
adc
fisubrl
mov
mov
add
mov
sbb
cmp
xor
hlt
rcr
movsb
ret
test
jb,pn
lret
jo
pop
jno
adc
add
fnstenv
movsb
mov
and
ljmp
dec
xchg
popf
pop
adc
insl
xchg
aaa
xchg
add
pushf
ja
shlb
and
cmpsb
shr
xor
sbb
mov
xchg
jns
jns
add
push
mov
mov
lock
jmp
jle
int3
and
cmp
push
dec
dec
cltd
pushf
into
fnsave
cmp
rorb
sti
pop
cltd
fwait
sbb
mov
xchg
addr16
call
das
push
mov
push
daa
add
daa
dec
sbb
sahf
jle
ja
outsl
sbb
out
mov
mov
mov
mov
xchg
xchg
call
aaa
sub
xchg
mov
mov
mov
inc
ret
and
xchg
ss
mov
js
xor
pop
or
mov
aam
mov
push
nop
fildl
cli
adc
cmp
arpl
cmp
jo
ljmp
les
adc
repz
and
stos
mov
fbstp
mov
xchg
adc
mov
dec
or
loope
nop
ror
aaa
push
jp
ja
leave
pop
jb
cmp
insb
and
clc
cld
jge
mov
fstpl
or
leave
insl
cli
mov
dec
repnz
fsubrl
dec
inc
mov
mov
fcomps
push
adc
cmpsb
jo
fidivs
mov
popl
inc
sbb
icebp
test
shll
scas
in
push
das
xchg
sub
orb
xchg
je
lock
icebp
jne
mov
shlb
and
adc
pop
push
outsb
cltd
aaa
jle
mov
pop
xor
loop
testb
jg
sub
ja
xor
xlat
sbb
pop
pop
inc
divl
hlt
xor
testl
bound
or
les
es
insb
lds
cmc
fisttpl
mov
and
sbb
hlt
add
insl
cld
daa
dec
sbb
loop
out
shrl
lock
xor
stos
cmpsb
out
sahf
cmp
ficomps
cltd
std
inc
in
das
or
in
lahf
das
xor
mov
je
iret
ret
es
cmp
repnz
in
loopne
in
or
cmpsl
dec
mov
call
mov
sbb
out
pop
inc
push
std
cmp
dec
pop
test
mov
jae
shrl
jns
inc
call
mov
mov
xor
inc
push
inc
aas
xchg
popa
xor
mov
test
dec
imul
sub
adc
das
maxps
out
inc
or
push
and
out
jno
addr16
mov
push
das
mov
jge
jnp
adc
xchg
into
hlt
in
push
gs
mov
mov
or
jl
lahf
mov
jg
mov
pop
test
fwait
lods
mull
sub
imul
fildll
pop
xor
add
data16
in
mov
xchg
sub
push
paddw
insl
cli
test
add
cmpsb
push
nop
int3
insl
shl
icebp
sub
popf
js
call
rcrl
sarb
push
das
push
jle
aad
cmpsb
addb
sub
movsl
sbbl
cmp
jmp
jbe
popf
xlat
push
inc
push
icebp
jbe
and
jp
cmp
or
sbb
cli
out
pop
xchg
xor
popa
add
pop
call
lahf
cmpsl
jno
inc
nop
dec
sub
test
in
mov
in
cld
fmul
xchg
into
or
mov
icebp
fsubrl
outsl
shlb
sarl
loop
or
imul
js
hlt
mov
jmp
mov
dec
xor
scas
lea
inc
dec
roll
pop
mov
or
cmp
sub
inc
push
sbb
outsb
lock
push
aad
in
test
fs
adc
cmp
jne
push
pop
mov
inc
mov
jmp
adc
jecxz
xchg
mov
dec
or
sbb
dec
pop
mov
mov
js
sub
jge
xchg
orb
ja
sub
add
push
rolb
in
pop
mov
movsl
pop
mov
add
inc
jg
test
mov
xchg
loopne
repnz
inc
and
and
cmp
jae
outsb
std
in
adc
sub
mov
scas
jnp
fidivl
cs
xchg
out
cmp
mov
sub
mov
mov
mov
lcall
inc
ficoml
xor
out
and
test
sbb
das
int3
xchg
insl
dec
in
aad
xchg
push
cmp
ss
icebp
imul
pop
xchg
imul
mov
movsl
sbb
ss
mov
cmc
aaa
cmp
negb
aaa
pusha
mov
xchg
sti
add
mov
or
lea
out
dec
int
fisubrl
mov
adc
data16
lock
out
adcl
xchg
sbb
cmpsb
call
call
jmp
sahf
inc
xor
adc
popa
xchg
inc
and
push
push
pushf
rcrb
push
push
cmc
shl
cmp
cld
mov
mov
iret
mov
adc
addl
leave
and
js
xor
repnz
pushf
xchg
in
repz
mov
jge
xor
scas
mov
test
jno
aas
call
enter
lock
add
in
cmp
sbb
call
cld
aaa
xor
ret
cmpsb
cmp
sub
fimuls
dec
pop
gs
inc
loopne
or
sub
pop
cmp
xchg
scas
mov
cmp
push
lods
insl
or
fisubs
test
fildll
leave
jns
stos
mov
jno
dec
push
mov
test
mov
sbbb
lds
ret
fdiv
mov
in
out
clc
stos
mov
push
test
out
into
lods
flds
and
or
ja
in
shll
pop
or
jp
jmp
xor
adcl
add
adc
repz
jecxz
out
lcall
mov
xlat
cwtl
push
icebp
loop
fs
cmpsl
fs
insl
scas
enter
mov
pop
or
and
repz
dec
and
in
or
and
mov
pushf
xchg
mov
xchg
push
inc
outsb
mov
test
shl
sub
sar
or
fsubrs
push
loope
dec
std
adc
stc
shrb
movsb
dec
mov
insb
inc
add
movb
in
pusha
or
jge
inc
jle
in
dec
mov
stos
sub
pop
int3
or
inc
lahf
movsl
sub
jle
imul
push
mov
mov
jae
aad
out
dec
clc
or
mov
xchg
sub
sub
lret
pause
std
add
idivb
mov
movbe
fs
mov
test
jecxz
mov
sbb
ds
lods
aam
lcall
mov
add
dec
cs
mov
leave
scas
popa
lahf
xor
daa
push
adc
mov
ds
aaa
arpl
ret
add
cmp
out
lret
adc
xor
dec
aaa
scas
push
push
adc
idivl
jle
movsl
bnd
push
fldcw
jmp
jl
fcompl
dec
aad
pop
and
xchg
ss
sbb
out
sub
fwait
sbb
nop
mov
lret
mov
add
neg
ffreep
out
xchg
gs
xchg
adc
xorb
cmp
and
addr16
lcall
cs
mov
shll
dec
popa
fcompl
iret
lds
ret
scas
push
mov
push
jle
cmp
loopne
pop
cmp
jnp
repnz
les
test
mov
lcall
and
add
out
stos
dec
int3
gs
fs
mov
mov
push
cltd
jnp
into
push
xchg
out
inc
in
pop
mov
daa
in
push
push
sahf
and
sbb
popf
adc
daa
inc
out
inc
movsb
inc
movsb
popa
mov
jno
out
mov
iret
andb
sarb
xor
movsb
jp
sarl
loopne
sub
xor
push
ss
loopne
inc
in
subb
stc
add
push
fldcw
daa
xor
push
adc
push
daa
aas
push
jmp
ja
xor
insb
lcall
xor
and
fisubl
cwtl
jns
sub
stos
scas
loope
dec
shrl
loope
sub
fwait
cs
jecxz
or
cld
mov
sub
dec
mov
mov
into
adc
inc
setno
testl
sbb
test
cli
pop
fdivr
rclb
adc
sub
or
gs
stos
mov
adc
out
out
inc
adc
adc
jmp
push
and
into
jecxz
xor
addb
fcoms
mov
and
outsb
adc
add
insb
xor
and
cmpsb
popa
outsb
cltd
outsb
fdivl
scas
fsubs
cmp
fstpt
xorl
out
out
pop
inc
loopne
cmp
cltd
les
and
cmp
in
mov
shll
adc
and
loop
and
lret
push
push
cmp
gs
xor
lds
pop
mov
test
cmp
jecxz
inc
test
pop
jge
arpl
cmp
mov
popa
and
clc
lret
iret
outsb
ljmp
inc
mov
iret
test
pop
popf
xor
sub
dec
jbe
nop
add
fnstsw
frstor
flds
test
xchg
les
push
mov
jo
cld
mov
dec
jle
or
or
xchg
lods
sbb
push
sbb
mov
xchg
xor
inc
out
outsl
lods
jp
scas
sub
popa
mov
cli
and
xor
xchg
in
gs
push
movsb
aam
into
test
inc
insb
mov
pop
int
pop
push
mov
adc
cmp
enter
xor
shrb
or
lret
enter
cwtl
sbb
cs
fwait
lret
cltd
xchg
mov
pop
dec
mov
and
jne
push
mov
add
jno
jge
test
cli
outsl
add
inc
out
sub
and
pop
aam
int3
stos
inc
mov
bnd
out
imul
mov
divl
mov
cmpsl
mov
test
xchg
dec
call
ficoms
xchg
jp
test
into
int
adc
mov
lcall
cmp
dec
mov
mov
xlat
mov
jmp
mov
push
mov
sbb
mov
pop
sbbl
outsb
fists
cs
mov
pop
cmpsl
and
les
sub
dec
leave
dec
mov
int
pop
test
push
sti
push
pusha
daa
test
test
xchg
jl
adc
pop
mov
js
or
add
loope
inc
push
inc
testb
fs
aad
in
push
and
dec
add
bound
jne
fisttpl
out
inc
lret
rcll
add
push
out
adc
movsl
dec
call
mov
push
and
es
repz
scas
or
rcr
mov
lock
push
les
test
test
mov
popf
push
jnp
sahf
jb
sub
arpl
mov
js
ds
sahf
fstl
incb
icebp
jne
mov
cmpsb
rclb
and
dec
iret
jae
push
bound
sub
jle
mov
inc
jno
movsl
clc
push
cmp
insb
jmp
adc
add
int3
mov
ljmp
loopne
jae
xchg
mov
cmpsb
sub
or
mov
or
and
jae
dec
dec
sbb
jae
js
inc
cs
leave
push
and
inc
adc
or
mov
imull
inc
xchg
sbb
lods
int3
in
leave
inc
mov
pop
xchg
out
cmpsb
lahf
insl
xor
inc
imul
push
mov
jnp
test
loopne
pop
jp
pushf
xor
fwait
jge
pop
add
push
mov
pop
out
lahf
popf
js
hlt
adc
inc
ffree
repnz
test
in
pop
push
add
test
cmp
jmp
push
cmp
sbb
jns
addr16
test
cltd
mov
test
ja
push
outsl
aaa
repz
pop
dec
outsl
cmp
pop
cmpsl
pushf
dec
addl
fdiv
dec
gs
xor
aam
lock
xor
fstpt
pushf
cmp
shrb
xor
and
pop
adc
cmpsl
push
mov
clc
lcall
orb
hlt
nop
out
sbb
fldl
cmp
aam
inc
movsl
mov
idivb
stos
sahf
adc
stos
mov
mov
mov
pop
fwait
cmp
fnstenv
jae
and
cmpsl
pop
aad
outsb
fwait
sub
inc
push
ret
lahf
lds
sbb
into
ljmp
xchg
stos
leave
sbb
lcall
mov
sub
cmpsl
mov
test
and
xchg
fwait
or
mov
pop
in
fs
and
push
iret
lods
push
add
stos
mov
mov
mov
xlat
ss
cmpsb
dec
clc
pop
repnz
inc
add
inc
pop
mov
sahf
rcr
inc
mov
jg
cmpsb
mov
aad
or
sbb
cmp
imul
add
adc
xlat
sbb
js
mov
or
xchg
daa
stc
mov
dec
push
mov
mov
mov
inc
int3
mov
popf
add
fbstp
or
movsb
sbb
mov
xor
movsl
mov
lods
ds
add
xchg
xor
dec
es
dec
ljmp
cmp
jg
adc
push
xlat
xchg
inc
add
pop
pop
dec
mov
lods
push
or
call
mov
stos
aam
and
add
mov
mov
aas
cltd
mov
mov
mov
add
stc
cmpsb
mov
add
and
movsl
jno
jae
pusha
testb
lahf
out
cli
inc
cmp
mov
mov
in
cmpsl
das
jno
pusha
cld
int
sbb
outsb
jge
loop
sbbl
mov
aaa
mov
add
aad
orl
test
xor
inc
jp
outsl
in
sti
and
stc
jmp
test
into
pop
mov
fistps
imul
cld
mov
dec
xchg
in
add
or
mov
cs
push
outsl
pushf
out
add
repnz
jmp
and
jmp
rorl
cmp
xchg
pop
lods
pop
adc
inc
mov
add
scas
scas
lds
mov
push
xchg
addl
sub
dec
mov
mov
xchg
sbb
xor
rcll
test
jne
pop
add
js
mov
fistl
jle
in
jg
push
test
xchg
iret
sub
dec
pop
dec
xorl
bound
push
ljmp
pop
popa
add
test
mov
mov
fldcw
and
mov
and
adc
daa
add
dec
insl
std
out
ror
movsl
pop
mov
arpl
inc
or
push
sub
pop
lea
jl
fbld
enter
cmp
lret
add
inc
adc
bound
mov
daa
push
xor
aaa
sbb
adc
add
in
mov
inc
mov
and
int3
push
xchg
push
dec
insl
lods
mov
pop
shll
pop
sub
out
pop
pop
adc
jnp
or
insb
xor
je
xor
inc
adc
cmpsl
adc
xchg
push
ret
cltd
cmc
jno
cmpl
mov
aad
cmp
lods
xor
jae
mov
xor
icebp
sbb
fistl
pop
mov
lods
or
cmc
lcall
mov
mov
movsb
notl
repz
rcrl
arpl
hlt
sub
fdiv
jbe
stos
movsb
jmp
inc
xchg
xor
enter
arpl
mov
cld
imul
icebp
fnstsw
sbb
fwait
mov
adc
hlt
sub
ja
mov
mov
or
hlt
mov
les
in
or
adc
iret
pop
pop
in
adc
cmp
ja
sbb
test
xchg
push
leave
mov
lea
pushf
mov
jns
fdivrl
cli
mov
aas
mov
lret
push
push
lods
add
pop
jle
push
pop
testb
insl
add
movsb
pop
popa
jo
pop
xor
mov
pop
inc
mov
faddl
sub
loope
add
test
xchg
mov
jne
lret
inc
cwtl
pop
fsts
mov
push
mov
or
and
ret
push
adc
test
add
loope
sub
dec
jmp
adc
sahf
mov
aas
aas
sbb
sbb
shrl
icebp
adc
or
cli
push
fistpll
adc
sbb
dec
ljmp
xchg
cmpsb
std
insl
inc
inc
mov
or
xlat
outsl
inc
movsb
cli
popa
les
inc
jge
out
adc
test
ss
adc
and
outsl
pop
hlt
inc
inc
and
aad
or
mov
push
mov
jo
push
arpl
cmpb
sbb
aas
insl
adc
xchg
leave
xchg
push
loopne
adcb
fnstsw
aad
clc
add
push
ja
mov
ds
cli
add
leave
loopne
xchg
xor
cld
cmp
jle
pop
jg
ret
fs
cmpsl
add
iret
cmp
jle
pushf
adc
imul
daa
aaa
mov
rolb
add
fsubr
pop
icebp
insb
mov
or
sbb
insb
shrb
rcl
out
push
ret
aaa
inc
insb
mov
inc
lcall
push
lahf
sbb
cld
ss
fsubrl
pop
adc
and
sahf
jo
sub
pop
xor
sbb
ficoms
int3
mov
sbb
cmc
inc
jne
adc
or
xor
popa
out
xchg
das
push
mov
push
add
inc
sub
cmp
sub
jmp
stos
inc
add
sub
jle
es
push
test
aas
mov
out
loopne
cmpsb
out
mov
mov
xorl
jmp
cli
pop
rorl
mov
jg
mov
and
jns
and
push
outsl
test
jle
mov
popa
icebp
ret
jns
sub
pavgb
adc
lock
insb
scas
les
jl
das
clc
adc
mov
hlt
hlt
mov
test
in
mov
pop
lahf
cmp
xor
jnp
jnp
out
jecxz
jge
jno
jmp
pop
cld
xor
xchg
cmp
push
scas
and
ja
pop
dec
xchg
xor
xchg
loope
insb
inc
repz
adc
dec
out
es
subb
inc
das
ret
faddl
or
jb
or
or
movsl
xchg
add
fsubrl
loope
and
sub
mov
push
notb
addr16
imul
sub
pop
jno
sarb
sbb
or
ret
notl
incl
push
rclb
mov
mov
in
mov
in
je
lock
sbb
loop
mov
xor
in
jg
mov
xchg
xchg
lds
frstor
rcl
fmull
pop
mov
pop
daa
daa
jo
enter
fcompl
insb
adc
jno
fimuls
test
push
jmp
leave
aad
or
cltd
xchg
xor
fistpll
pop
mov
jno
outsl
cli
sbb
push
outsb
dec
data16
movsl
dec
in
and
mov
arpl
mov
mov
mov
sbbl
in
or
hlt
gs
jge
mov
test
and
mov
mov
xor
addr16
nop
enter
fwait
mov
lret
pop
xchg
loopne
in
out
ret
pop
sbb
pop
std
ds
jmp
dec
aad
outsb
les
jge
and
mov
cmpsb
pop
push
jmp
popf
sub
ja
add
lock
test
movsl
sub
sbb
in
scas
test
push
push
sbb
repz
dec
push
out
lods
mov
and
mov
leavew
inc
test
out
insb
pushf
jecxz
les
xor
je
and
loope
fsubp
jo
into
cmp
loopew
ljmp
pushf
shlb
jl
imul
incb
cmpsl
add
fsubrl
dec
mov
and
xor
iret
rolb
push
roll
or
jne
out
xchg
inc
jle,pn
test
inc
pop
fdivp
dec
xchg
je
add
aas
lret
arpl
add
unpckhps
xchg
mov
loopne
test
movsb
push
cmp
in
pushf
inc
lret
lahf
sub
cmp
pop
jae
repz
mulb
test
fnsave
jnp
ficompl
add
scas
inc
cli
lret
pop
rcll
jnp
push
dec
push
pop
dec
jb
jb
lods
xchg
enter
jns
fdivl
lock
xchg
jp
aas
loope
adc
inc
rcll
sar
add
cmpsb
mov
jecxz
gs
ficompl
jg
fwait
dec
adc
add
xor
and
popf
cmp
ss
push
inc
fs
lret
inc
ja
les
je
daa
sbb
sti
push
loop
xchg
or
push
dec
add
sub
mov
sahf
aam
adc
in
fdivs
or
pop
jle
dec
icebp
and
mov
xchg
bound
stos
or
mov
imul
adc
push
mov
add
popf
dec
add
scas
mov
jns
pop
ret
xor
xchg
mov
jb
test
jns
or
push
inc
sub
and
or
push
pop
dec
out
lahf
cmp
repnz
add
shrb
mov
pop
cmp
mov
xor
push
rep
cltd
jg
out
rorl
push
jp
rcl
ret
dec
jne
mov
in
mov
mov
out
jne
cmc
mul
insb
imul
ss
xor
push
or
mov
or
xor
pop
lahf
jb
xor
inc
mov
lahf
out
cld
fucomi
add
dec
push
jbe
push
jmp
loop
push
clc
incb
arpl
es
movsl
cmc
mov
add
mov
mov
pusha
dec
push
add
mov
clc
or
mov
pop
hlt
push
push
popf
test
gs
cmp
push
mov
fdivl
inc
pusha
lds
xor
sbb
pushf
pop
test
call
cli
lds
dec
inc
mov
inc
mov
ret
nop
add
movsb
int3
mov
loopne
fildll
inc
or
imul
mov
add
push
in
out
add
repnz
flds
push
pop
incb
data16
and
xor
es
cli
addr16
jno
fdivrs
lahf
lahf
leave
divl
rcll
lea
daa
xchg
jmp
movsb
sbb
mov
mov
dec
cltd
xlat
inc
stos
push
lods
outsb
je
mov
sub
ror
std
xchg
cmpsl
sub
stc
repnz
dec
stos
mov
jle
adc
test
sbb
mov
test
cmpsb
jae
adc
bound
bound
mov
add
out
sarl
je
jno
jl
lret
adc
adc
js
mov
sub
sahf
out
outsb
cmp
pop
cmpsl
xchg
inc
jp
mov
inc
xlat
rorl
out
cmc
jp
add
xor
xchg
mov
xchg
test
fidivs
mov
ljmp
sub
inc
cmc
mov
sbb
push
dec
fdivrs
int3
push
popf
in
adc
loopne
dec
scas
fdivs
mov
mov
call
mov
fcomps
lods
inc
and
je
test
adc
in
hlt
imul
inc
cmp
fprem
dec
add
sub
leave
sub
call
add
jle
lret
xchg
int3
pop
add
sub
cmp
gs
es
hlt
addb
pusha
aad
pop
xor
bound
xor
fadd
add
in
nop
cmp
lock
jg
negb
inc
mov
fwait
xchg
mov
add
cmpl
scas
ja
mov
js
push
inc
sub
in
movaps
cmc
mov
lds
xor
sbb
pop
movsl
or
or
jae
add
movsl
mov
sbb
insl
fnstcw
push
daa
outsl
lods
aaa
mov
ja
sahf
adc
das
push
ss
push
je
cs
lahf
jecxz
jb
add
pop
packssdw
sub
lret
shl
lds
inc
cmpsl
and
jae
popa
mov
ror
test
xchg
pop
stos
in
xchg
frstor
push
cs
fs
adc
pushf
out
jecxz
fadds
outsl
add
or
sti
mov
xchg
daa
xor
fisttpl
aam
outsb
push
ljmp
mov
fwait
iret
call
add
pop
je
call
fildl
dec
xor
insl
in
fisubrs
mov
dec
adc
neg
push
ret
adc
cmp
jb
cld
shrb
movsl
btc
mov
sub
push
in
loope
lret
ljmp
ss
mov
out
cmp
popa
int3
out
sbb
pushf
not
inc
and
sub
sbb
sub
cmp
jae
leave
xchg
jmp
pop
and
ftst
into
xor
and
lcall
jbe
inc
leave
outsb
cwtl
cmp
lods
cmc
and
sbb
lods
shlb
ljmp
shrb
push
sub
push
std
mov
xchg
add
call
dec
mov
jp
int3
imul
dec
rorb
inc
dec
push
push
jno
gs
shlb
xor
repz
lahf
inc
xor
sub
xor
lret
std
mov
and
mov
mov
es
xchg
mov
xchg
adc
cmp
popf
pop
das
add
sti
shlb
movsb
test
test
push
add
into
sub
adc
fsubs
add
mov
sbb
mov
push
xor
shrb
jle
in
inc
fcmovb
mov
les
jb
pop
push
into
pop
and
pop
mov
out
mull
push
pop
sub
sub
insb
scas
mov
outsl
sub
mov
test
dec
nop
in
aad
out
pop
pop
mov
xchg
adc
mov
js
mov
mov
inc
daa
insl
or
add
in
adc
std
cs
pushf
pop
loope
fsubl
jmp
sbbb
fcmovne
imul
jge
fisubl
lret
or
outsb
dec
push
jg
and
sbb
and
or
add
cmp
fstpt
insl
leave
je
dec
xchg
inc
push
out
mov
outsl
ljmp
stc
mov
stc
cmp
add
pusha
adcl
jmp
and
pop
add
movsb
push
shll
add
or
pusha
inc
pop
xchg
lret
loop
dec
fwait
insl
pop
sarb
push
cmp
push
lds
sti
ret
cmp
mov
cmp
out
mov
shrb
mov
adc
orl
ja
jns
mov
push
aas
mov
nop
movsl
lock
xchg
std
test
mov
sub
push
mov
dec
mov
or
push
adc
add
ds
jb
add
xlat
mov
out
pop
movntq
mov
push
sbb
sarb
jns
push
pop
dec
ret
mov
mov
das
mov
dec
xchg
add
out
mov
mov
jne
out
popf
in
aad
aam
xor
in
loope
push
sub
or
cmp
mov
lahf
ret
jns
pop
xchg
scas
fldcw
sbb
mov
stos
mov
sub
outsb
xor
out
popa
fstps
mov
lea
aas
pusha
push
jb
jnp
outsl
and
lahf
mov
sub
pusha
dec
outsw
mov
in
fsts
push
out
sub
push
in
jecxz
test
or
in
and
and
ja
push
cmp
jns
or
shrb
adc
sbb
xlat
push
or
jmp
jp
rcl
leave
add
sbb
mov
sub
cmc
hlt
adc
shrl
lret
adc
sub
sub
jl
popf
js
add
cmp
in
negb
mov
sti
mov
cmp
in
arpl
sahf
dec
xlat
fbstp
loopne
int3
jne
insl
out
and
stos
lahf
dec
rcll
mov
mov
and
sbb
fcom
xchg
jb
jb
loopne
movsb
shrb
dec
lret
es
rcl
pop
bound
pop
fisubrl
sahf
push
adc
lret
mov
mov
or
and
jb
ffree
stos
notb
pop
sahf
adc
jmp
scas
or
in
gs
outsl
pop
jmp
inc
outsl
sbbl
call
push
hlt
mov
push
jge
xchg
jge
ss
dec
shlb
fcomps
xchg
push
cmp
scas
xchg
mov
sub
mov
insb
fnsave
sub
xor
jae
push
gs
mov
jo
xor
cmpsb
bsr
cmp
hlt
int
add
dec
lcall
in
icebp
or
xchg
notl
rorb
xor
cmp
int3
mov
pop
lahf
sub
rolb
mov
and
lods
jmp
push
popf
gs
mov
mov
add
add
sub
pop
xor
or
jae
xor
add
testl
push
nop
inc
loope
push
jmp
sub
out
sub
pushf
or
cmp
popa
cli
std
pop
pop
xchg
lcall
andl
fisubrl
test
in
add
int3
jle
rolb
jmp
stos
xor
and
aas
push
push
xlat
daa
sub
mov
in
mov
inc
adc
push
imul
sub
lock
and
test
mov
mov
mov
sar
pop
mov
ret
out
xchg
lods
test
push
xrelease
out
cmpsl
call
imul
jno
sbb
scas
test
fisubrl
data16
jmp
push
lods
jb
hlt
xchg
jb
jecxz
mov
leave
movsl
fidivl
sub
sub
adc
add
inc
ljmp
hlt
test
inc
sub
int3
fnstcw
js
push
add
in
rol
adc
ret
mov
jnp
fmuls
test
xlat
pop
xlat
fsubs
pop
stos
sbb
out
xor
adcb
jne
cmp
cmc
sarb
lret
in
out
test
call
stc
adc
sub
sbb
pop
out
mov
lods
lahf
adc
add
push
push
mov
and
mov
clc
stos
sti
movb
mov
les
cld
test
mov
ret
sub
stc
xor
push
fimull
jmp
mov
and
inc
js
dec
add
inc
jl
pop
daa
add
cmpsb
outsb
loop
jne
sbb
adc
push
lret
mov
fdivr
mov
cltd
pop
dec
mov
push
popf
dec
ja
lcall
movsb
jns
dec
jbe
mov
or
sbb
adc
push
and
fsubrs
sub
xor
xor
data16
push
aas
in
push
mov
sbb
cli
cmpsb
loope
pop
jnp
jg
sub
mov
sub
mov
add
fistl
popa
pop
out
aad
lahf
jo
adc
jns
cmp
popf
nop
sbb
ret
push
lods
js
add
xchg
dec
add
jae
sbb
jmp
cmpsb
fcompl
loop
inc
mov
and
pop
or
cmp
mov
cmp
dec
xchg
clc
jnp
jnp
std
pop
mov
mov
scas
leave
test
push
inc
cld
or
movq
and
cmp
jle
imul
fisttps
mov
stc
xchg
fldt
aas
jne
push
cmp
mov
inc
ja
or
push
mov
jg
xchg
xor
adc
cmp
and
call
lret
mov
pop
fwait
mov
jmp
scas
xchg
mov
add
pop
test
cs
in
mulb
lcall
je
inc
xchg
inc
mov
push
or
xchg
push
mov
rorb
mov
insb
push
into
cmp
addl
jle
pop
inc
push
jno
add
cmpsb
jle
jge
out
mov
mov
xchg
xchg
imul
cltd
adc
push
cli
fisubrs
xchg
test
xlat
imul
adc
lcall
dec
cs
pop
or
dec
push
andl
mov
in
lret
lcall
sbbb
int3
mov
in
adc
push
cmpsb
lret
repnz
int3
pop
pop
sub
pop
hlt
adc
xchg
and
hlt
sahf
popa
sbb
jge
jl
jne
enter
dec
popf
jbe
lds
adc
adc
xchg
jge
es
lods
xor
push
outsb
sub
sbb
loop
xlat
ss
push
addb
push
je
push
aam
mov
sub
outsb
in
sub
inc
lods
rolb
cmpsl
jnp
adc
testb
xchg
addr16
outsb
pop
leave
je
pop
pop
popf
xchg
add
cwtl
mov
movsb
jbe
jae
push
xchg
inc
mov
imul
adcb
xchg
mov
or
call
pop
xor
test
js
or
aam
je
sti
dec
push
or
mov
adc
and
jl
ret
sub
int
pushf
push
cmc
dec
sub
ficomps
repnz
cmp
rorl
push
jl
outsb
xchg
loop
mov
and
sbb
loopne
loopne
dec
iret
mov
lret
push
xchg
leave
lock
push
sbb
sub
mov
fldt
iret
repnz
push
push
mov
jns
dec
dec
cld
sub
xor
popa
scas
subl
popa
test
lea
mov
mov
testl
clc
or
int
test
jmp
sub
xchg
call
shlb
in
mov
aad
push
adc
ja
scas
pop
push
popf
push
in
jmp
dec
enter
xor
push
sbb
push
mov
testl
adc
dec
loop
pop
mov
arpl
sbb
dec
mov
cld
and
aas
and
scas
rorl
push
and
cmp
jno
fdivs
jo
or
lret
add
or
out
add
lahf
and
dec
mov
jg
sahf
adc
outsb
inc
in
push
inc
dec
jmp
aaa
pop
fcoml
fsubrs
enter
xor
push
dec
xchg
pop
fisttpll
mov
cld
cld
add
lds
xor
fstl
dec
shrb
adcl
push
js
inc
dec
fadds
dec
jne
xchg
push
int3
xchg
xor
push
pop
push
dec
loope
cld
stos
shrb
je
jae
sarl
das
into
sbb
pop
cmp
fwait
jns
jp
stos
decb
xor
pop
pop
adc
inc
test
dec
dec
inc
or
sbb
das
lea
or
sub
pop
jne
mov
shrl
in
outsl
pushf
out
pop
cmc
rcr
jae
inc
mov
jns
push
icebp
push
cmpsb
leave
add
jae
sti
mov
shr
jne
add
jp
xor
das
test
insb
out
adc
sub
or
add
dec
fdecstp
popf
pushf
cmp
test
push
bound
pop
mov
mov
inc
cld
jbe
pusha
out
push
xor
inc
rorl
lret
jle
jg
lsl
cmpb
add
push
mov
test
aad
aad
leave
xchg
rclb
xor
add
xchg
jb
icebp
call
sbb
sbb
stc
jge
xchg
into
dec
mov
cs
push
inc
sub
xchg
lds
loope
mov
ficomps
dec
ja
cmc
inc
adc
mov
xchg
jge
notl
lods
das
outsl
add
test
pop
push
es
std
sub
dec
mov
sbb
pop
ss
add
pop
mov
std
push
repnz
fdivl
roll
jnp
or
stos
add
and
sub
divb
fmuls
into
cmp
jp
insl
insl
in
jge
add
jge
aas
data16
push
aas
psraw
jns
daa
fists
js
pop
fs
inc
pop
dec
xchg
mov
lret
mov
mov
mov
mov
adc
sub
xlat
sub
and
popa
sub
das
sbb
add
or
lea
xchg
lods
js
repnz
xor
movsl
filds
incb
fnstcw
cli
fisttpll
adc
loopne
mov
pop
outsl
icebp
push
testl
lret
and
fidivrs
sub
and
in
mov
push
push
dec
ljmp
mov
pop
xor
and
outsl
fstl
in
sub
sbb
shll
xchg
fadds
dec
pop
inc
aaa
arpl
sbb
mov
in
lahf
push
xchg
in
cmp
scas
rolb
aad
xlat
xor
or
loop
cmpsb
pop
mov
inc
push
dec
jmp
push
lcall
out
test
dec
and
leave
cmp
xchg
mov
arpl
lds
mov
addr16
enter
mov
aaa
addr16
add
popa
mov
pop
fstpl
jl
outsb
inc
out
repnz
div
mov
pop
add
push
or
add
mov
out
testl
pop
dec
repnz
jno
and
dec
loop
or
int3
daa
add
inc
bnd
jl
jmp
push
in
in
fnstcw
ljmp
int3
in
add
cmp
enter
sub
xor
addr16
loope
fdivp
call
loop
inc
push
pop
je
ja
jp
roll
push
stos
and
int
mov
add
mov
shl
jb
in
call
inc
push
shl
stos
sub
cld
dec
jae
js
push
fiadds
jo
and
mov
adc
mov
call
cmp
loope
cmpsb
xor
pop
and
mov
frstor
cltd
cli
loope
mov
jp
int
jge
loope
xchg
daa
es
scas
cmp
pop
data16
addr16
pop
push
jnp
imul
cmpsb
call
rcr
add
int3
rcl
cmp
cli
pusha
rcrl
pop
int3
or
xor
insl
decb
or
xor
repz
push
inc
inc
xor
ds
loopne
rol
pop
mov
pop
decl
inc
imul
out
cld
scas
cmpsb
aad
in
sbb
xor
jbe
pop
xor
nop
fisubs
and
and
test
or
fnstenv
mov
scas
inc
insl
adcl
mov
leave
jb,pt
mov
call
sbb
pop
jmp
xchg
push
or
fmuls
into
addb
pop
adc
repnz
aad
aam
lret
nop
negb
xor
aad
hlt
arpl
pop
jno
mov
fildl
pop
push
mov
sub
jmp
minps
jno
mov
out
mov
push
push
xlat
loopne
xorl
rcrl
in
mov
out
jmp
fwait
popa
fldl
shrl
out
xchg
ds
xchg
mov
fistpll
in
hlt
push
push
sub
mov
and
aas
pop
out
mov
daa
cmpb
out
dec
ss
mov
dec
dec
arpl
aas
xchg
ja
mov
cmp
sti
pop
mov
cli
inc
mov
xor
pop
or
popa
push
mov
xor
outsl
imul
imul
sbb
cmp
push
incb
adc
data16
in
repz
aad
js
pop
sbb
fs
inc
sub
xchg
sbb
into
int
push
add
sahf
fdivrs
notl
scas
ret
add
pop
fwait
sarl
popa
pop
rcr
subb
cmp
xor
jo
jns
push
call
hlt
std
bound
int3
aad
add
in
or
push
and
pop
mov
xchg
xchg
or
leave
ret
dec
nop
xchg
clc
cmp
lea
mov
mov
add
or
mov
aas
jle
push
inc
stos
out
roll
xor
sbb
mov
js
xchg
xor
cmpsl
mov
pop
aad
or
andl
into
push
test
push
or
inc
stc
in
mov
aad
lock
mov
aaa
stos
shll
ficoms
arpl
mov
jno
xchg
jp
mov
mov
mov
sbb
out
mov
mov
inc
jne
mov
pop
add
punpckhdq
xor
or
popf
inc
rcr
test
jle
mov
scas
push
imul
fwait
mov
dec
pop
test
inc
sub
jb
add
mov
push
sub
push
ja
add
bound
add
stc
sti
push
cli
out
rcr
mov
sbb
adc
stos
xchg
lods
push
je
decb
and
lods
mov
cmpsb
xlat
mov
popa
pop
je
inc
repnz
jo
loop
dec
push
lock
push
fcoms
or
jecxz
fcom
addl
shrl
popa
mov
xchg
add
ficoml
test
fcompl
mov
pusha
xchg
xor
add
cmp
in
sti
add
cs
push
sbb
add
dec
test
addr16
mov
xor
mov
pop
pop
fsts
push
inc
lds
stos
pop
xchg
adc
ss
scas
lea
push
cmpsl
js
subl
aaa
add
test
cmpsb
mov
jb
ljmp
loopne
loope
jge
out
jae
jl
mov
or
push
ret
push
clc
idivb
mov
testl
mov
jnp
or
pop
xor
jno
outsl
cmpsl
jecxz
ret
call
mov
scas
or
jl
jns
dec
jno
dec
adc
pop
mov
jnp
mov
push
lods
cmpsb
cmp
in
mov
sbbl
mov
xor
adc
decl
mov
mov
fninit
jnp
push
xchg
ret
and
dec
shll
inc
cmpsl
pop
dec
fs
bound
cld
filds
sbb
aad
dec
pop
bsf
pop
sbb
lret
jge
push
shrl
cmp
cmp
xor
fsts
adc
cmp
ljmp
jle
imulb
in
cwtl
xlat
push
test
or
mov
lahf
or
push
les
mov
add
mov
popa
mov
test
mov
mov
dec
shlb
aam
xchg
lret
adc
sub
inc
lods
divl
mov
xchg
cmpb
cmc
jns
imul
cltd
mov
mov
push
pop
or
jmp
outsb
mov
lret
adc
lcall
xlat
mov
cmc
pop
repnz
xchg
test
fbstp
ja
or
xlat
fsts
push
xchg
cmp
pop
xor
sub
xchg
inc
sub
pop
pop
dec
lods
cld
add
push
cmp
orl
insb
je
xchg
push
ret
mov
nop
and
cmc
pop
sbb
add
imul
xor
mov
inc
leave
xchg
loopne
adc
mov
mov
ret
add
sbb
push
out
arpl
mov
push
aam
jno
lock
mov
shrb
dec
jbe
inc
mov
or
sbb
lcall
pop
or
fs
shll
jmp
lock
mov
enter
addb
jo
sbb
ret
adc
adc
jecxz
mov
jae
push
sub
adc
pusha
xlat
sahf
or
ds
sbb
int3
adc
dec
subl
pushf
adc
je
mov
push
jbe
out
arpl
dec
mov
scas
lds
and
insb
das
cmp
aam
cmp
jnp
lds
push
in
or
insw
cld
jmp
or
int3
inc
decl
inc
lods
and
or
jnp
jmp
pop
push
xchg
aaa
int3
and
lahf
sub
es
in
outsl
or
inc
push
movsb
aad
inc
ljmp
inc
push
dec
popf
ja
pusha
in
or
mov
sti
jp
push
jns
jnp
or
lods
sub
adc
repnz
push
xor
sarl
xlat
jmp
push
clc
sarl
imul
or
pushf
or
ret
mov
rcr
hlt
repz
fsubr
pop
sbb
addb
outsb
mov
push
lods
xchg
dec
std
add
lret
push
cmpsl
daa
mov
mov
mov
insb
sub
xchg
lret
push
xchg
sub
adc
shll
dec
addr16
divl
lahf
and
cmc
or
sub
cmp
fistpl
mov
jae
cmp
leave
pop
inc
xor
adc
inc
outsl
vorps
sbb
xchg
clc
cmpsl
dec
daa
sarl
mov
ret
xorb
ss
cmp
aad
sbb
aam
xor
inc
push
lahf
das
jnp
icebp
pop
push
xchg
outsl
sbb
shrb
gs
scas
and
sub
sarl
add
cmp
rol
mov
dec
jno
scas
dec
xchg
or
dec
add
mov
adc
loopne
js
jp
mov
and
or
negl
fdivl
xchg
repz
mov
jne
adc
dec
lahf
insb
xchg
and
xor
jmp
cs
push
push
lcall
cmp
jno
shrl
call
cli
adc
xorb
flds
lret
fisubrs
jne
xchg
loopne
add
sub
stc
bnd
mov
div
lcall
sub
pop
ja
mov
mov
popf
push
stos
cmp
add
adc
pop
pop
fmuls
mov
test
mov
jbe
cmpb
push
push
add
popa
sbb
inc
fisttps
push
out
cmp
sbb
sbb
loop
int
fidivl
cmp
inc
lods
mov
lret
mov
push
jne
mov
faddl
cli
imul
stos
insl
mov
enter
je
out
mov
ss
aaa
lahf
aad
adc
jp
or
sbb
pushf
std
clc
cltd
fiaddl
xchg
inc
push
ljmp
jle
xchg
cmpsl
adc
or
leave
cmc
mov
jecxz
mov
xor
push
cs
cmpsb
loope
jae
adc
pop
adc
sbb
test
inc
movl
mov
mov
mov
push
jge
faddp
shrb
cmc
cmp
dec
in
dec
inc
andb
mov
pop
sub
or
ljmp
out
in
adc
out
js
add
into
mov
les
xchg
test
inc
push
test
sub
or
sub
jmp
inc
scas
mov
push
aad
push
fcoml
cwtl
ficomps
idivl
dec
es
aas
push
cmp
mov
cmpb
inc
add
in
scas
pop
mov
add
xlat
int3
in
iret
adc
out
adc
add
sahf
dec
test
xlat
sbb
sbb
movsb
or
add
aaa
sub
xor
rclb
mov
fadds
add
jb
adc
mov
xchg
cmp
nop
cmp
jl
shl
inc
js
pop
cmp
adc
ficompl
inc
pop
mov
sarl
xor
adc
dec
mov
jns
jg
sub
mov
test
jl
int
jl
mov
rcr
mov
es
inc
fstl
out
es
xlat
call
lods
mov
int3
jne
pusha
test
push
adc
push
pop
cli
mov
xchg
lret
in
jp
jnp
lea
in
push
lds
popf
fisttpl
jb
cmc
idivl
mov
in
cld
lods
push
scas
mov
mov
sub
xchg
sub
lea
add
add
imul
add
pop
dec
inc
xor
movsl
hlt
in
pop
cmc
shll
mov
dec
mov
mov
into
xchg
mov
out
in
pop
inc
push
out
test
out
lahf
and
std
lret
push
fisttpl
adc
repz
mov
leave
push
das
sbb
dec
mov
push
ret
fwait
xlat
mov
jg
test
jbe
and
hlt
xor
iret
push
inc
lahf
xor
adc
stos
icebp
xor
push
pop
enter
std
lock
push
outsb
test
sbbb
push
mov
jle
push
cmp
hlt
test
pop
mov
out
pushf
sbb
push
es
cmc
test
mov
mov
rclb
call
xor
shlb
xchg
out
and
les
mov
and
mov
pusha
jge
sbb
add
push
lods
stc
sarl
mulb
ss
ljmp
pop
pop
push
xor
push
add
lock
xlat
mov
sarb
pusha
or
ret
pop
sti
arpl
xchg
popa
pop
push
xchg
and
dec
imul
pop
adc
pop
mov
jl
aaa
push
sub
push
xor
pop
xchg
movsl
jns
cmc
inc
push
xor
cmpsl
inc
or
test
or
ret
push
lret
jmp
mov
sbb
fmull
pusha
and
hlt
cltd
movsl
mov
mov
jae
leave
or
pusha
in
rorb
xchg
mov
ror
xchg
outsl
cmp
fucomi
sarb
mov
xor
xchg
icebp
and
inc
xchg
test
fcoml
mov
dec
mulb
pushf
ffreep
xlat
xor
nop
lds
adc
inc
ss
push
or
aaa
or
outsl
in
push
jge
xchg
and
nop
std
xchg
jp
jne
aad
jge
mov
icebp
fs
jns
int
push
jo
icebp
out
fwait
adc
test
cmp
js
arpl
cmp
adc
cmp
jnp
xor
inc
jbe
fdivl
call
jno
mov
inc
dec
ret
les
mov
scas
jge
lret
cmp
adc
push
jne
add
mov
pop
push
mov
fldcw
test
push
lods
leave
mov
arpl
sub
aas
push
mov
add
xchg
push
add
ret
push
jne
mov
stc
pusha
out
sbb
aaa
jnp
xor
pop
cld
mov
and
add
scas
rcll
es
cmp
push
dec
ror
pushf
loop
test
push
or
cmpsl
outsl
xor
jno
add
pop
jnp
or
jl
push
cli
lods
leave
lea
mov
mov
sub
ljmp
xor
iret
adc
xchg
push
cmp
mov
lret
xchg
xchg
mov
dec
leave
dec
hlt
xchg
imul
pushf
pop
sub
repz
push
pushf
stc
dec
add
mov
loope
xor
rorb
stos
pop
nop
or
xor
jmp
inc
aam
mov
cmp
push
and
and
mov
rcrb
jb
add
xor
insl
decl
xor
hlt
add
jne
adc
mov
inc
repnz
add
lods
lods
or
pop
jle
sbb
rcl
inc
jg
xlat
inc
jl
xlat
pop
jle
stos
jns
lahf
xor
fcomps
pop
test
adc
and
mov
loop
push
mov
adc
inc
dec
outsb
out
pop
call
in
dec
mov
iret
push
mov
and
das
out
divb
fimull
add
cltd
cwtl
es
cmp
mov
outsb
lods
dec
xor
pushf
mov
fidivl
mov
mov
adcb
testl
dec
sahf
icebp
sub
pop
gs
xor
sarb
out
pop
or
popa
dec
test
inc
inc
and
mov
cmpsl
imulb
repz
enter
and
shlb
inc
mov
xchg
inc
outsl
adc
std
imul
mov
mov
mov
sbb
xorb
dec
imul
sub
movsl
cwtl
push
jg
add
int3
out
push
mov
ret
out
push
imul
xor
lods
repz
fcoms
mov
in
pop
ficomps
out
mov
xor
lea
rolb
dec
popa
mov
jmp
gs
mov
dec
or
jne
push
cmpb
sub
in
ret
jo
adc
inc
test
pop
jmp
inc
fs
add
mov
sbb
pop
push
jnp
ljmp
jo
adcl
jmp
movsl
insl
lahf
push
into
pop
inc
or
jno
bound
sub
adc
xchg
xor
xor
mov
push
in
and
daa
dec
in
popa
xchg
jge
push
jbe
mov
xor
adc
mov
loop
cmp
or
xchg
inc
add
pop
inc
jb
popf
cli
lcall
and
mov
mov
lods
inc
mov
sub
sahf
adc
aaa
fistps
mov
out
popa
cmp
add
xchg
sbb
push
adc
jne
jb
into
lcall
cmp
xchg
xor
cs
faddl
add
xor
sbb
sahf
jmp
repz
jmp
jno
pushf
lods
xchg
sbb
sbb
xchg
ret
inc
imul
inc
sub
push
fs
mov
add
repnz
dec
cltd
test
xor
pop
pushf
push
pusha
adc
fs
dec
fcompl
jae
dec
mov
mov
jg
sbb
scas
mov
mov
sti
fdivrl
dec
popa
cmpsb
dec
sub
cmp
pop
arpl
pop
das
imul
int3
xlat
push
cltd
int
cmp
adc
inc
shrl
cmp
es
adcb
inc
pushf
sbb
sub
pop
sti
mov
cmp
test
add
cmpb
fists
ret
insl
mov
imul
or
xor
cli
jnp
lret
sahf
mov
cmp
scas
xor
inc
jle
adc
push
inc
cmpsl
xor
popf
sbb
pop
popf
ret
stos
fisubs
fcompl
out
sub
add
enter
inc
jp
in
xchg
or
pushf
jnp
stc
inc
insl
add
xchg
jl
es
shlb
or
push
test
repnz
cs
xor
and
std
gs
orb
in
rcl
mov
add
mov
xor
fstp
mov
and
push
jne
adc
lods
dec
sti
es
testb
les
adc
lahf
lea
jmp
jnp
xor
xchg
or
mov
xchg
xor
sti
lea
mov
das
cmp
vhaddps
mov
add
ja
fs
fnstenv
and
lock
int3
lods
scas
ret
push
mov
or
and
xchg
leave
fwait
gs
clc
mov
nop
pop
aam
stos
sub
decb
stos
push
jo
outsb
cmc
xor
xor
fs
lahf
int
repz
orl
jae
hlt
mov
pop
ret
lcall
mov
aad
or
ljmp
ds
and
xor
sbb
insb
stos
pop
imul
dec
dec
stc
stc
xchg
sub
push
loopne
push
cmp
ss
or
sbb
shrl
lock
jbe
int
pop
jbe
shrb
inc
cmc
add
frstor
adcl
popf
xchg
daa
ret
imul
xchg
jl
mov
sub
std
fsubs
subl
sub
push
out
mov
gs
add
mov
dec
or
loopne
mov
xchg
push
jno
push
and
ret
push
push
mov
jnp
jle
rcll
jle
sub
mov
imul
lods
inc
push
sbb
jns
sbb
sbb
mov
dec
pop
fnstenv
ret
mov
cs
ss
fwait
mov
sahf
xor
stc
pop
push
sbbb
mov
fldcw
lock
xchg
dec
hlt
test
push
mov
dec
mov
cltd
inc
xchg
push
cmp
loop
repnz
or
add
inc
pop
ret
out
pop
sbb
sbb
scas
xchg
push
loopne
aas
mov
jg
int3
pop
mov
add
lret
push
push
clc
pop
iret
adcb
hlt
test
inc
rcrb
icebp
loop
mov
mov
add
pop
dec
sub
pop
sbb
adc
stc
imul
mov
cmp
xchg
inc
iret
or
xchg
cmpsb
cld
rcll
ds
gs
mov
lret
add
jmp
test
pop
xchg
pushf
push
lahf
fisubl
ss
hlt
scas
int3
dec
fstpl
push
adc
out
adc
adc
int
dec
sbb
push
push
incb
ret
test
push
adc
shrb
pop
inc
mov
loop
fmulp
aas
loope
popa
jge
loopne
test
pop
add
sub
and
add
arpl
ja
cmp
sbb
cld
pop
jecxz
daa
out
cmp
mov
dec
push
out
jmp
out
mov
or
fs
mov
pop
data16
jno
mov
mov
cmpsb
fwait
or
movsl
pop
sub
add
mov
loopne
in
jl
mov
add
inc
cmc
xor
add
sbb
popf
inc
out
sub
pushf
fsubrl
repz
xor
icebp
mov
dec
or
jecxz
pop
test
push
mov
pop
jnp
sti
in
pop
and
mov
xor
jl
add
ja
mov
fs
gs
cmpl
out
xlat
xor
xlat
jo
out
mov
out
jnp
mov
sbb
or
lret
pop
xor
sbb
sbb
fcomip
jb
out
sbb
cmp
test
arpl
call
je
aas
mov
xor
into
pushf
scas
xchg
adc
cli
addl
mov
mov
jae
jg
xor
sbb
push
lcall
fldcw
loop
or
int
cmp
std
iret
outsb
add
or
sbb
mov
loop
inc
aad
pop
xor
mov
nop
mov
andb
mov
sub
fidivrl
inc
ret
enter
shr
pop
jmp
iret
xchg
leave
inc
fidivl
jl
mov
mov
sbb
ds
cmp
sbb
sti
fbstp
add
and
xchg
jge
sub
cmp
leave
stc
js
pop
add
int
fidivrs
lret
addr16
lea
jns
xchg
pop
sar
mov
iret
stos
ja
cmp
fstpt
jecxz
push
or
jno
pop
gs
daa
cmp
sub
fnstenv
into
and
repnz
fwait
sbb
test
loopne
data16
xchg
fwait
in
mov
and
inc
jmp
es
jne
sub
or
inc
lcall
icebp
jno
and
pop
sbb
push
ljmp
popf
data16
xor
lods
rcrb
sbb
lcall
dec
jno
jl
cltd
jno
jae
adc
sbb
adc
fadd
inc
dec
jbe
jno
jne
xchg
xchg
mov
xor
testb
loope
mov
pop
xor
cmpsb
in
xchg
pushf
test
dec
popa
dec
xlat
stc
out
repz
fmul
sub
jne
insl
inc
repz
les
inc
imul
inc
adcb
jne
sbb
sub
add
shrb
leave
push
pop
jmp
lock
outsl
js
stos
pop
ret
push
in
fdivrl
jnp
mov
push
jmp
je
mov
cmp
repnz
pop
test
push
popa
mov
mov
ret
in
dec
mov
or
idivb
xor
loopne
ja
mov
mov
iret
test
sbb
sti
stos
daa
icebp
in
add
popf
addr16
shlb
stc
aas
cmpb
push
daa
sub
sbb
inc
or
jnp
fcoml
mov
out
data16
jmp
movsb
mov
pop
lret
aam
push
adc
push
into
mov
mov
fldl
fwait
sub
mov
xor
pop
out
xchg
jg
mull
inc
shlb
neg
push
mov
pop
sub
mov
xchg
push
cmp
call
repnz
push
in
out
cwtl
jl
pop
ret
xor
aam
icebp
push
xchg
cli
cmp
jmp
dec
xor
shrl
xlat
add
cmpb
sarl
push
add
xchg
pusha
mov
insb
jno
mov
inc
mov
loop
mov
les
dec
jns
mov
add
adc
divb
sbb
fbld
add
sub
insb
imul
aas
jnp
mov
sub
cmp
inc
sub
sahf
or
or
push
ss
xor
push
sbb
push
jmp
mov
movsl
and
xchg
cmpsl
ja
popf
cmp
shlb
mov
enter
cmp
lcall
dec
mov
xor
push
in
sbb
push
fadds
push
pop
imul
xchg
and
sbb
adc
jns
leave
in
leave
arpl
rorl
push
std
lods
jmp
and
iret
mov
imul
dec
decl
inc
mov
clc
inc
pop
das
inc
fstpt
add
xchg
dec
and
sahf
pop
ja
outsb
fnstenv
ret
jmp
repnz
enter
es
jo
fwait
xchg
sbb
and
adc
cmp
cmp
cmp
arpl
addr16
imul
inc
or
rcrl
xchg
icebp
and
es
cwtl
cli
mov
dec
xor
and
xor
mov
int
or
mov
notb
xchg
fcomi
xor
cmp
add
outsb
fstl
cmp
inc
xor
inc
adc
in
xchg
mov
lret
dec
xchg
xor
test
jb
add
daa
iret
cmpl
sbb
cmp
jecxz
stos
movsl
shll
add
aas
hlt
push
cli
adc
pop
dec
dec
xchg
pop
adc
lahf
icebp
leave
push
je
movsb
in
mov
dec
mov
ret
insl
cmpsb
cs
stos
mov
or
iret
mov
aaa
sbb
aaa
hlt
inc
jo
cmc
xacquire
imul
fcomps
aas
pop
or
data16
icebp
pop
js
clc
call
pop
mov
or
ljmp
xchg
mov
call
fs
ss
arpl
lods
mov
int
or
xchg
xor
lea
xchg
incb
push
mov
popa
aaa
lods
add
pop
xchg
out
mov
mov
push
push
mov
inc
test
pop
pop
mov
pop
idiv
mov
dec
dec
ja
inc
imul
sub
push
loope
adc
and
xchg
jbe
xor
dec
imul
jns
xchg
icebp
sbb
sub
inc
sbb
mov
ljmp
out
push
add
std
and
scas
pop
xchg
sbb
mov
in
dec
dec
mov
mov
cli
mov
and
mov
xor
inc
aas
decb
fdivrs
cmp
cld
negb
shll
xor
in
push
or
sbb
shll
push
dec
stos
mov
mov
lea
roll
cltd
das
into
sub
out
out
sub
movsb
xchg
dec
fmull
rcrl
lods
sub
aaa
and
sbb
mov
cmp
adc
lea
pop
jo
sbb
les
cmc
enter
inc
adc
cmp
scas
dec
movb
les
add
inc
pop
pop
out
sub
add
push
cmc
inc
jne
movsl
inc
mov
mov
cmp
xor
or
mov
sub
jne
inc
dec
movsl
enter
repz
ljmp
out
lcall
fldpi
scas
pop
loop
cmc
stos
in
pusha
or
pop
xor
movsb
inc
push
popf
fdivrl
repz
xlat
ret
dec
push
pop
lret
adc
add
fwait
in
mov
xorl
mov
addr16
add
aad
das
addl
sti
call
xchg
sarl
push
jnp
xorb
les
pop
repz
cmp
outsl
dec
jbe
lods
jbe
mov
outsb
out
xor
stos
sbb
jnp
sbb
pop
outsb
popa
push
sub
in
jg
ret
jb
bts
mov
loope
out
or
adc
dec
cmp
mov
rclb
xor
out
xor
add
jecxz
jnp
out
mov
dec
in
pusha
lahf
sti
and
sbb
mov
mov
gs
push
insb
shrb
xor
add
xchg
jne
push
or
add
dec
inc
jo
sar
lods
adc
inc
dec
adc
sti
xor
pop
test
cmp
insb
aaa
enter
mov
add
cmp
les
inc
ret
mov
ss
add
or
jmp
lret
mov
or
rcl
adc
xor
leave
out
rep
stos
rcrl
jle
pop
into
lcall
cld
mov
sub
push
lea
xchg
lock
mov
jbe
in
jo
outsb
push
push
js
jnp
sub
sbb
stos
out
fld
sub
aas
imul
adc
jno
xchg
push
xor
add
mov
sub
add
push
mov
scas
gs
pop
lds
les
orl
add
les
push
in
pop
adc
or
popf
out
lcall
pop
stc
mov
lret
xchg
cmpsl
jg
pop
sbb
into
xorb
jg
sbb
add
sbb
mov
mov
mov
mov
cs
arpl
lea
jb
and
sbbl
dec
mov
popf
or
int3
lret
leave
xchg
dec
push
loop
imul
scas
pop
imul
in
mov
ret
push
xor
aam
sub
xchg
adc
push
movsb
loope
scas
rorb
repz
add
adc
push
lea
pushf
jmp
xchg
mov
sub
scas
xchg
cmp
xchg
adc
stos
mov
sbb
push
add
lock
ljmp
inc
inc
or
repz
sahf
sbb
push
into
inc
repnz
fsubl
call
out
mov
clc
fildl
adc
mov
fs
cmp
mov
sahf
mov
jb
mov
xor
mov
xchg
adc
ss
aad
mov
sahf
xchg
add
cwtl
into
add
dec
xor
aas
icebp
into
imul
jge
inc
movsb
add
xchg
ja
js
popf
push
testl
and
xor
std
cmp
pop
push
mov
sbb
dec
call
ljmp
lock
shrb
dec
ja
icebp
fdiv
jo
add
sbb
adc
scas
popf
adc
jl
adc
out
xchg
adc
mov
push
mov
pop
mov
out
sbb
cld
mov
inc
push
and
ret
mov
jne
or
push
mov
pop
pop
mov
inc
pop
stos
loopne
sub
mov
push
addl
pop
movsl
adc
lcall
popf
and
sub
sti
xchg
es
jp
leave
inc
cmp
or
es
sub
sbb
xor
into
push
mov
jno
cmp
out
mov
jb
ja
sti
aad
lahf
mov
mov
nop
push
or
xchg
push
cmpsl
mov
dec
jg
clc
jp
cmp
loop
jae
arpl
mov
adcl
add
cmc
vpxor
sti
xchg
loopne
je
int3
loop
movsl
pop
mov
icebp
push
lock
xlat
fisttpl
repz
dec
enter
adc
mov
pop
sbb
push
out
repz
in
jb
mov
shl
push
inc
sbb
push
ss
mov
ljmp
lea
mov
cltd
lret
sbb
pop
inc
aaa
es
outsl
and
push
stc
adc
ja
jmp
dec
jmp
pushf
pop
mov
filds
mov
adc
sti
repz
sub
aaa
stc
xor
sahf
cltd
icebp
jnp
add
insl
mov
divb
cli
idiv
adc
dec
dec
mov
push
sub
xchg
inc
dec
rolb
cwtl
adc
sbb
xchg
push
pop
add
adc
add
cmp
cmp
jo
cld
sub
add
xor
call
pop
or
andl
das
jns
push
mov
fsincos
sub
cmp
or
mov
sub
cmpsl
ljmp
test
cmp
sbb
shlb
rol
testl
lret
xor
scas
mov
rorl
add
mov
xchg
gs
out
roll
addr16
lock
pop
push
add
mov
adc
loop
adc
inc
sbb
sub
ret
jno
in
outsb
fstpt
inc
arpl
mov
std
cmc
in
mov
mov
aaa
xchg
mov
ja
mov
or
les
add
call
aaa
sbbl
adc
and
cwtl
or
or
clc
mov
subb
nop
push
dec
inc
fsub
fcoms
lds
scas
dec
cmp
int3
cmp
inc
adc
xchg
sbb
cs
popa
ret
insl
lea
addr16
rcll
cmp
xchg
inc
movsl
pushf
bound
mov
outsl
stos
loope
sbb
loopne
out
bound
nop
notb
pop
enter
sub
jle
out
popa
neg
pop
adc
inc
sub
js
mov
addl
or
nop
loopne
jge
mov
in
jge
sbb
xchg
adc
xlat
or
mov
shlb
dec
adc
jb
mov
aad
lock
popa
scas
iret
fcomps
inc
push
ja
in
xlat
sub
data16
or
mov
movsb
inc
cmp
je
mov
xchg
clc
push
je
cmp
pop
lock
xchg
fsubrl
cmp
or
push
cmp
or
mov
push
dec
lcall
push
imul
or
jnp
mov
scas
dec
addr16
std
push
mov
aam
pop
pop
test
insl
mov
adc
jne
cli
xor
shll
fcom
and
xor
xlat
or
xchg
stc
scas
dec
jne
dec
sub
ret
jbe
jo
push
pop
adc
jecxz
cmpsl
fwait
sti
shlb
nop
outsb
scas
andl
jl
sbb
jmp
adc
lods
jnp
cld
or
nop
xchg
inc
push
fistpll
add
jne
mov
inc
aam
jp
dec
jp
sbb
mov
enter
in
lret
popf
gs
xor
or
insl
sub
mov
leave
or
gs
ljmp
idiv
xor
adc
push
inc
repnz
fsts
cmp
into
das
lds
jae
cmpsb
ret
adc
lret
je
dec
cld
mov
adc
xchg
sahf
std
jnp
aas
movsl
push
add
pop
test
std
aam
mov
in
mov
jp
dec
cld
mov
sub
add
ss
or
in
push
insl
cmp
jp
xchg
xchg
inc
add
sub
xor
je
jp
ret
ret
add
scas
adc
push
and
pop
call
ret
and
mov
mov
mov
aam
scas
jle
push
add
xchg
ss
mov
cmpsb
jg
enter
mov
inc
into
add
shll
inc
inc
jo
or
mov
insl
addr16
xchg
aad
pop
repnz
movsb
jno
xchg
jecxz
lods
xchg
test
xor
int3
scas
outsl
sub
hlt
mov
nop
lods
or
and
mov
mov
jbe
dec
insb
mov
stc
daa
out
imul
aas
movsl
mov
fmull
stos
xor
cmpsl
ss
and
je
cltd
mov
jnp
jge
adc
adc
or
nop
aad
adc
or
icebp
int
rcll
rorb
dec
jne
insb
je
jmp
and
xchg
xchg
cmpsl
add
push
add
pop
imul
imul
jmp
xchg
xor
lret
aaa
mov
rcrl
jns,pn
pusha
jecxz
testb
mov
mov
in
push
mov
push
je,pt
movb
call
js
popf
add
out
or
xchg
pop
jle
sub
in
icebp
test
aad
repz
mov
in
xchg
sbb
popf
sub
mov
mov
sub
xchg
cs
xchg
adc
bound
mov
cli
cmp
hlt
dec
bound
jb
jns
jmp
scas
adc
sti
xchg
insb
dec
repz
and
pushf
popa
dec
lods
fisubrs
jecxz
movsl
mov
mov
add
pop
faddl
inc
mov
lret
cmc
or
aas
push
and
movsl
mov
or
xor
addb
sbb
sub
ret
sbb
or
popf
pop
jge
sub
gs
out
xor
or
mov
cmp
mov
pop
leave
xor
lea
adc
sub
cmp
sbb
popa
iret
xchg
xor
cmp
xchg
mov
test
ds
jecxz
fsubp
ds
push
loope
sub
ljmp
nop
test
clc
add
mov
out
fistpll
cld
lods
adc
movb
cli
sub
push
rolb
out
push
aas
fbld
jg
push
mov
sbb
push
mov
dec
mov
cmp
lret
or
ret
pushw
jnp
and
xlat
dec
jmp
loopne
fcmovu
cmpsb
negb
fidivrs
push
nop
fdivrp
fisttps
jecxz
lds
repnz
adc
push
lods
test
rcrb
test
xchg
add
push
mov
enter
hlt
jg
cld
jl
and
mov
movsl
cmp
stos
outsb
ss
in
fisttpll
mov
aaa
dec
xchg
mov
in
das
dec
cmp
aas
out
inc
int
dec
bnd
sub
pop
stos
lea
push
repnz
idiv
push
xchg
shlb
adc
cs
in
aas
push
xor
in
stos
mov
sub
imul
daa
mov
mov
jns
int3
dec
lret
inc
pushf
loope
stos
xor
pop
pop
mov
pop
push
imul
mov
push
fsubr
cmpsb
and
xchg
and
mov
push
adc
pushf
xchg
in
push
pop
inc
imul
imul
jno
or
add
or
imul
xchg
jg
and
shll
int
fwait
xor
nop/reserved
jge
shl
fisttps
jnp
rolb
and
dec
fwait
aas
push
inc
cwtl
pop
push
outsb
adc
nop
pop
push
aam
jnp
and
loop
arpl
popa
xchg
inc
push
shlb
xor
test
icebp
pop
out
mov
push
mov
adc
int3
jge
lock
push
aad
lds
dec
sub
pop
jo
daa
in
jmp
popa
repz
xlat
fnstenv
xchg
arpl
ds
popf
inc
jle
aas
jne
mov
in
and
mov
popa
cmpsl
stos
jns
dec
mov
movsl
and
pop
adc
stos
in
cmpsb
push
xor
jo
mov
stos
push
cs
add
aam
add
scas
sub
test
incb
pop
dec
pop
ret
test
js
cld
cmp
insb
je
mov
jg
loop
out
lods
sbb
lcall
ds
push
pop
dec
nop
jp
push
shrl
test
lods
incl
sbbl
sub
inc
andl
xchg
mov
sub
mov
inc
cmpsl
cmp
fwait
push
sub
and
pop
or
ss
adc
xchg
and
pop
cmp
xorl
or
pop
shlb
pusha
int
pop
cmp
ret
sbb
imul
or
jo
cs
jne
and
adc
test
loope
cmp
mov
fnstcw
dec
push
and
inc
sahf
sub
cmp
add
mov
jmp
pop
mov
xchg
xor
push
mov
xor
sub
jg
out
rcr
imul
iret
jmp
xor
adc
sahf
or
in
pop
push
mov
daa
pop
mov
dec
jle
mov
inc
cmp
mov
fdivrs
fistpll
shll
ret
sub
das
lret
into
cld
dec
pop
std
mov
in
daa
adc
sub
das
mov
stos
sbb
dec
nop
xor
lahf
jmp
push
xor
push
add
cwtl
mov
pop
dec
fdivl
stos
movl
inc
repnz
loopne
es
out
push
mov
adc
inc
es
stos
arpl
mov
test
push
hlt
adc
imul
iret
pop
xchg
pop
push
mov
rorl
in
imul
subl
push
mov
outsb
popf
shrb
jmp
pop
xchg
mov
insl
pop
insb
jp
push
mov
jecxz
out
lods
dec
int
mov
in
xlat
rsqrtps
popf
mov
test
and
ja
cmc
mov
adc
jno
and
ss
xchg
pop
testb
push
ja
outsb
mov
in
or
call
bound
test
aaa
mov
xchg
stos
imul
popf
imul
mov
jo
lret
addl
xchg
ja
mov
mov
jns
stc
ret
ret
cmc
push
or
cmp
xchg
sbb
cmp
into
ret
dec
aad
pop
dec
adc
xchg
loopne
rcrb
cmpsb
lds
mov
xor
pop
ret
lds
jne
clc
pop
imul
inc
pop
dec
mov
std
push
jg
sub
sahf
shlb
pop
lods
scas
cmc
out
addr16
mov
push
addb
int3
sbb
push
stos
repz
outsb
fwait
xchg
testl
dec
out
xor
push
sub
aaa
or
not
cmpsb
sbb
dec
mov
inc
add
hlt
ficoml
or
jp
aas
iret
out
std
enter
test
clc
jb
cld
scas
jecxz
outsl
iret
jge
fisubrl
mov
push
mov
add
fldt
out
cmp
jp
imul
fists
add
pop
xor
add
sbb
mov
in
xorl
cmp
lods
push
arpl
inc
mov
hlt
fmuls
sbb
xchg
loope
mov
cli
sbb
and
jmp
add
clc
push
xor
fucomi
in
xchg
imul
pop
pop
mov
mov
pushf
icebp
or
push
mov
mov
or
test
cmp
popa
les
jbe
stos
in
xor
ret
pop
hlt
sub
out
cli
mov
jp
sti
sub
pop
negb
add
test
in
jl
fwait
pop
cld
pop
lret
je
and
xor
shrl
shll
sub
jb
ret
ret
dec
decb
insl
cmpsb
dec
pop
fadds
pop
or
mov
mov
das
cmp
clc
cld
cmc
adc
xchg
cmp
jbe
sahf
xor
fisubrl
aad
pusha
dec
jp
filds
popa
lea
inc
or
cmp
xor
cmpsb
lcall
outsl
or
cs
or
dec
pushf
test
pop
adc
and
inc
shl
test
xor
ret
xchg
sti
movsl
add
and
jle
mov
mov
mov
cmpsl
and
arpl
fiadds
add
inc
lcall
mov
xchg
sbb
inc
add
enter
xor
or
cmpl
sbb
imul
popa
xlat
inc
icebp
jmp
aas
daa
pop
mov
ljmp
clc
sub
sbb
adc
adc
loope
in
add
pop
repnz
fbld
cmp
add
xor
stos
jns
adc
stc
daa
lret
mov
mov
test
ljmp
push
mov
mov
mov
outsb
insl
jne
push
push
ucomiss
mov
dec
mov
fwait
cvtpi2ps
xchg
adc
ret
movsl
test
mov
cmp
out
xchg
pop
push
xor
test
hlt
mov
xchg
add
sub
jge
fsubrl
popf
add
les
dec
fmull
rcrl
xor
nop
or
fldenv
mull
push
aad
sbb
imul
pop
scas
push
outsl
jne
jg
stos
dec
adc
inc
add
or
sbb
sbb
cmp
adc
or
cwtl
in
jnp
loop
in
lds
jnp
push
cmp
jp
psubq
jae
or
movsl
movsb
push
add
arpl
stos
jb
js
push
nop
ss
enter
out
aas
scas
mov
xchg
sub
dec
lods
pop
adc
pop
mov
jecxz
add
cmpsl
int3
loopne
sbb
fs
rcrl
push
in
in
orl
sub
push
xor
andl
inc
aam
neg
jno
shrb
mov
clc
subl
mov
lcall
jecxz
add
scas
sub
adc
xchg
mov
dec
fwait
dec
es
or
mov
adcb
cltd
cmp
or
or
push
hlt
pop
les
dec
add
jl
insb
sarl
xor
inc
imul
gs
fwait
loop
test
mov
jae
cmp
pop
shrb
mov
dec
cmpsb
mov
jmp
adc
subb
xor
rcrb
push
adc
adc
data16
cmp
or
add
cwtl
cli
jbe
cmp
movsl
ss
sbb
cmpsl
je
mov
sub
insl
ret
sbb
push
pusha
lods
mov
sub
int3
adc
mov
ret
or
and
imul
inc
sbb
rcl
jmp
push
sbb
jp
jno
stos
inc
clc
push
lcall
jb
mov
sbb
outsb
aaa
add
movsb
fidivrs
mov
sbb
into
inc
jmp
notb
add
lock
sti
dec
js
push
lret
dec
sbb
push
jo
hlt
lds
cwtl
push
stc
rorl
lret
add
repz
ret
pop
idivb
or
test
add
jbe
jp
popa
js
out
adc
xor
inc
mov
movsb
shll
jle
mov
sub
sarb
and
mov
call
xor
fstl
das
push
call
mov
dec
dec
lock
ret
push
cltd
or
outsb
jo
pop
xchg
incb
insl
add
gs
jge
inc
pop
cwtl
testl
pop
add
mov
and
jge
stos
xchg
loopne
test
mov
das
dec
jno
cmc
in
mov
mov
push
cmpsl
cmp
sahf
push
jae
pop
mov
outsb
clc
out
lret
xor
loopne
enter
pop
loop
push
mov
cmc
dec
mov
sbb
inc
cld
mov
clc
and
js
mov
call
das
mov
andb
cmp
daa
sub
insb
adc
jmp
ss
shll
xchg
jge
std
sub
add
pop
mov
sbb
mov
mov
insb
testl
icebp
in
mov
inc
mov
dec
adc
fisttps
mov
jae
mov
icebp
dec
loopne
mov
jae
mov
sub
cli
mov
cmp
into
lret
sub
cmpl
outsb
mov
inc
pop
jo
mov
cmc
inc
xchg
data16
je
jp
clc
in
xchg
dec
jmp
sbb
repnz
xor
fidivrl
pop
pop
push
bound
and
lea
jle
xor
neg
lods
inc
xchg
int
punpckhwd
xor
mov
loop
scas
adc
stos
push
fs
sbbl
cmp
outsl
jbe
dec
jnp
int3
and
in
push
lods
pop
pop
sarl
aas
pop
test
jae
pusha
mov
lds
divl
test
add
jmp
pop
leave
cmp
mov
loop
inc
dec
push
mov
cwtl
jmp
movb
push
sub
xchg
ret
gs
inc
loop
sub
out
xchg
jo
xor
out
jecxz
or
or
add
out
dec
push
sub
inc
je
je
mov
aad
pop
clc
shll
inc
cmp
movsl
xor
adc
sbb
cli
lock
int3
leave
in
push
rolb
outsl
outsl
mov
adc
adc
inc
inc
stos
gs
xchg
fisubrl
es
mov
adc
xchg
test
xchg
insb
out
xor
jl
add
pop
repz
fsubs
xor
xor
imul
fisttpl
das
orl
jns
push
icebp
xor
pushf
ret
fstpt
pop
mov
shrb
mull
nop
jp
or
xor
sahf
test
or
mov
fs
push
dec
div
jmp
mov
cmp
mov
inc
fxch
cli
sbb
ret
rclb
out
sub
int3
inc
inc
hlt
fisubrs
pop
out
mov
stos
ret
push
xchg
dec
popf
pop
test
add
lods
adc
stos
cmp
jecxz
pusha
call
add
in
popa
jp
fst
loope
sub
mov
inc
enter
sti
xchg
sub
rcrb
pop
push
or
outsb
mov
das
pop
aaa
fstpt
mov
jbe
dec
inc
mov
pop
arpl
mov
fcoml
adc
out
shl
add
fldt
jg
sbb
cmp
loopne
enter
cmpsb
sub
push
push
leave
lock
or
sbb
inc
jo
xor
loopne
push
mov
movups
or
mov
push
and
push
mov
mov
or
scas
cmpsl
inc
add
cmp
inc
inc
in
mov
mov
fiaddl
aad
cmc
jge
fwait
stos
jno
insb
pop
or
cmpb
shll
imul
cmp
cmp
cli
call
js
in
movsl
rol
cmpsb
mov
cli
mov
inc
push
push
out
ja
dec
xlat
ficoms
or
call
imul
stc
cmp
xor
aas
cmp
sbb
and
or
mov
pop
mov
push
mov
push
cmp
aas
in
aas
cmc
inc
pop
push
fwait
mulb
jb
cs
incb
test
xchg
mov
xor
add
fistl
xor
cltd
ds
loopne
cmp
lahf
loop
das
sub
adc
daa
stos
jge
je
jns
aam
out
push
je
sub
mov
bound
clc
xor
lahf
jns
push
les
mov
inc
dec
push
outsb
push
icebp
andb
adc
mov
inc
or
fcmovu
sbb
ss
sbb
cmp
xor
cs
xchg
xchg
cli
inc
stc
hlt
mov
dec
in
popa
mov
enter
mov
xchg
arpl
pusha
mov
ljmp
cs
sbb
inc
fsubrl
insl
insl
or
idivb
adc
stc
inc
mov
mov
imul
rcrl
cwtl
lahf
pop
or
add
cs
mov
les
setg
fstp
out
notb
sub
scas
jae
jae
jp
iret
add
insb
sbb
popf
sbb
and
je
mov
sbb
das
cmp
inc
sub
push
xor
lds
sahf
mov
xor
or
inc
test
out
lea
dec
push
lods
adc
jnp
in
movsb
jp
jmp
ds
xchg
pop
xor
out
test
aam
jl
aaa
out
xorl
ja
xor
push
fdivp
push
mov
adc
or
in
mov
jg
mov
and
xchg
out
jnp
mov
cld
jns
outsb
pusha
outsb
out
idivl
in
mov
bound
pop
mov
pop
sbb
pop
out
addr16
jb
hlt
mov
dec
pop
incl
movl
sahf
dec
into
data16
mov
mov
shrl
shlb
outsl
fwait
std
add
inc
cmc
test
movsl
idivb
or
cmp
pop
out
mov
jecxz
fs
jmp
pop
sbb
dec
mov
mov
cmp
pusha
pop
jbe
xor
add
add
mov
lds
pop
mov
insl
cmp
dec
out
and
jbe
pop
sbbl
daa
and
jl
rcrb
jmp
int
sbb
stos
cmp
ja
inc
cmp
xchg
ret
cmpsb
inc
test
out
inc
sub
mov
test
push
mov
cwtl
rep
lock
ljmp
sbb
nop
rorb
hlt
dec
xor
push
dec
lock
out
in
insb
popf
inc
push
sub
adc
rcrl
popa
jb
sbb
icebp
fstl
in
enter
sbb
adc
xor
mov
xchg
push
jge
hlt
push
lods
pop
mov
test
aad
jl
clc
idivb
fs
aaa
dec
lahf
cmovge
jecxz
clc
out
cld
std
or
rcrl
mull
scas
lods
ret
add
push
jmp
add
aas
outsl
sahf
popf
repnz
add
mov
ret
iret
dec
push
icebp
fdivs
xchg
lods
scas
fs
fnsave
cmp
jno
rcl
pop
ret
pop
and
xchg
jecxz
xor
hlt
outsb
lcall
ja
mov
sub
stos
lcall
push
cltd
cmpsb
and
loope
inc
mov
outsl
cmp
xchg
cmp
test
xor
fnstcw
cli
and
subl
test
or
push
sub
pusha
shlb
das
cmp
dec
sbb
aas
shlb
jno
ss
sub
push
add
mov
sub
daa
js
cmp
push
sbb
mov
adc
cmp
xor
mov
jle
xchg
js
mov
cmp
fisubrl
sub
dec
push
sub
ss
xchg
lods
lods
cmc
xor
btr
inc
mov
add
insl
inc
and
xchg
sub
xchg
lock
sahf
popf
or
jae
outsb
push
mov
jbe
adcb
mov
std
ss
and
in
mov
loope
dec
xor
popa
cmp
fcmovnb
or
push
stos
pushf
pop
movl
lds
mov
push
sub
and
sub
sahf
addr16
repnz
js
int
lret
dec
aam
shlb
inc
arpl
push
loop
xchg
test
mov
les
insb
dec
arpl
cwtl
cli
push
mov
stc
mov
inc
xchg
cmp
push
mov
loop
or
or
adc
clc
stc
mov
pusha
fstpl
mov
xchg
jbe
out
push
mov
gs
jb
xchg
out
popf
les
pop
lds
lock
inc
adc
test
icebp
pusha
mov
movsb
mov
iret
insl
adc
fdivr
pop
jne
in
test
je
rcr
xchg
push
and
scas
inc
scas
push
gs
out
mov
addb
sub
sbb
stos
cmp
push
repnz
ja
ss
or
xor
fcoms
dec
hlt
das
fisubrl
loop
push
iret
sub
cli
test
mov
cmp
loopne
addr16
repnz
lcall
mov
and
xchg
shrb
add
pop
mov
in
add
pop
push
cmp
dec
xor
jp
xor
push
inc
xchg
inc
dec
or
gs
mov
pop
push
mov
push
or
frstor
jl
in
aam
fnstcw
shll
mov
xchg
xchg
xor
xor
dec
ds
cs
add
inc
jge
test
sub
movsb
imull
mov
int
mov
pop
faddp
scas
testl
xor
addr16
and
out
in
add
sbb
cmpsl
arpl
loope
jno
notb
jp
push
mov
fsubrl
pop
mov
fstpt
nop
imul
xchg
jmp
rorl
sbbb
stc
jmp
push
imul
jb
jg
ja
enter
mov
lea
xchg
cmp
xor
scas
ret
popl
or
cs
clc
inc
mov
in
outsb
pop
jmp
dec
das
stos
ret
insl
xchg
sub
scas
push
shl
test
movsl
or
xchg
sub
arpl
xchg
inc
out
pop
popa
xchg
lock
mov
jp
push
xor
push
insb
scas
push
lods
mov
xchg
lret
adc
and
mov
stos
inc
pop
scas
sti
pop
mov
not
cmp
jb
xor
inc
inc
test
leave
xor
jno
movsl
and
cli
lea
push
and
stc
loope
pop
in
and
mov
repz
push
repnz
sarb
xor
add
and
sub
inc
add
dec
int3
gs
mov
push
aaa
mov
inc
cmpsl
pop
ss
daa
jecxz
movhps
bound
mov
subl
and
and
and
push
movsl
jo
jnp
lea
adcl
jg
shlb
test
lods
adc
or
test
aaa
sub
mov
push
dec
loope
pop
fldpi
iret
sub
fisubrs
mul
imul
sub
cmpsl
and
dec
mov
and
or
push
cmpsl
add
repnz
daa
inc
pop
lret
adc
fucomp
adc
xor
movb
inc
push
jge
push
jbe
cmp
in
movsb
and
pop
insb
out
fimull
aam
ds
fs
cltd
fs
jle
test
or
sub
aaa
ja
addr16
outsl
add
push
xchg
jbe
inc
nop
mov
jecxz
hlt
insb
mov
cmpsl
pusha
sbb
sub
or
jns
inc
lods
dec
aas
inc
or
mov
add
stc
jg
test
jnp
xor
pop
add
enter
test
jp
mov
add
rol
fldt
dec
lahf
jl
imul
arpl
and
sar
dec
jbe
mov
inc
jns
popf
lcall
mov
loope
dec
push
aaa
loop
dec
sub
bound
cltd
cld
cmc
outsb
push
jp
sub
mov
popf
add
mov
leave
jg
jbe
mov
lret
add
pusha
scas
dec
cmp
mov
leave
mov
and
push
inc
popf
sbb
arpl
lds
fisttps
scas
loopne
pop
mov
push
sub
jns
or
push
cwtl
in
loopne
sbb
ret
xor
inc
nop
test
fadds
int3
dec
mov
sbb
movsb
xchg
xchg
or
dec
pop
les
inc
idivb
test
aas
out
adc
out
dec
mov
shl
cld
roll
lahf
push
loop
adc
pop
and
push
call
inc
std
jp
call
bound
and
lret
jl
inc
pushf
push
adc
test
sub
mov
xchg
shlb
push
subb
jno
popf
aam
fldl
mov
lock
adc
dec
lock
sbbl
sarb
fs
imul
repz
cmp
xlat
dec
jb
jbe
ret
adc
or
loopne
cs
aam
mov
ja
sub
cli
addl
aaa
insl
cmp
loopne
orl
in
sbb
dec
stos
ds
dec
xchg
lods
inc
mov
add
orb
and
and
jge
stos
dec
sub
xor
dec
sti
mov
add
hlt
aas
fnstsw
icebp
in
std
outsl
inc
push
mov
pop
fcomip
aad
fnsave
repnz
lret
stc
dec
dec
aam
es
xor
addr16
fcmovb
lahf
cmp
sbb
mov
test
push
dec
mov
push
xlat
insb
insb
icebp
cmp
jo
xchg
int3
sub
or
push
popf
pop
xlat
lock
push
fldcw
sbb
in
cmp
add
pop
inc
push
jp
adc
ret
loop
push
sub
loopne
mov
shrb
xchg
jne
clc
jle
aam
andl
push
and
aas
dec
stc
mov
aaa
icebp
and
and
cltd
pop
imul
mov
and
mov
lea
jmp
or
or
mulb
repz
jne
rcr
push
pop
aam
push
fstps
test
jbe
xor
sub
mov
shrl
or
push
fistl
push
outsl
adc
push
push
push
popa
cmpsb
or
dec
sub
mov
cld
aaa
jmp
inc
in
xlat
sbb
push
dec
mov
jl
sbb
jno
mov
adc
adc
push
adc
xchg
add
cmp
xlat
stos
xchg
call
stc
rcll
jne
adc
clc
push
in
and
aaa
mov
adc
sub
adc
scas
sbb
mov
push
mov
mov
pop
decl
jns
cmp
lahf
rorl
int
mov
sub
in
scas
jno
imul
sub
mov
adc
mov
or
xor
push
sbb
mov
xlat
ja
and
cmp
mov
inc
jno
pop
sbb
cld
add
clc
mov
je
xlat
lret
enter
and
mov
add
mov
in
jg
js
push
or
add
xor
jne
shrl
jns
js
jg
sub
xchg
mov
sbb
dec
sbb
xlat
les
test
jp
arpl
inc
in
add
mov
and
call
jmp
unpckhps
addps
subb
push
inc
in
das
insl
sub
pop
pop
sub
cld
sub
pop
and
fimuls
iret
mov
jae
push
jne
push
jb
xor
js
cmpl
rcr
jnp
leave
ja
out
pop
insb
out
mov
push
sbb
in
add
icebp
cmp
cli
or
xchg
int
or
xor
or
jecxz
popa
imul
cld
enter
xor
aas
leave
cmpsl
fwait
arpl
jne
adc
cmp
push
xor
xlat
adc
or
pop
adc
cmc
shll
and
pop
dec
hlt
js
pop
ret
aam
repz
leave
out
shl
xor
jns
imul
xchg
das
clc
push
aad
fisubrs
pop
adc
mov
mov
imul
ja
loop
test
jbe
mov
dec
enter
jno
imul
int
adc
int
rcl
aaa
stos
dec
in
imul
insl
fldcw
es
out
mov
in
nop
mov
xor
addl
sahf
mov
or
aaa
pop
xchg
scas
icebp
lahf
adc
push
add
mov
pop
mov
and
lods
or
rclb
mov
push
mov
subl
inc
or
fbld
sbb
push
mov
lret
push
push
mov
pop
push
fistpl
movsb
fmull
sti
insl
jnp
inc
movsb
test
ja
inc
cwtl
aas
and
shrb
jnp
push
das
push
andb
test
sub
mov
and
inc
mov
jg
nop
jb
stos
mov
jno
cld
and
jle
mov
jge
fisubs
jecxz
sti
fnstcw
push
dec
push
scas
mov
loope
fwait
adc
push
int
mov
or
icebp
and
pop
jecxz
icebp
rcll
push
pop
pop
jmp
das
ficompl
sbb
sub
mov
imul
bound
ja
jmp
xor
aaa
push
stc
scas
xlat
inc
dec
dec
aaa
lcall
xor
test
xchg
add
inc
adc
jo
fstps
cmp
adc
movsb
mov
mov
sahf
ljmp
mov
xor
sub
rcrl
pushf
inc
pop
mov
pop
in
js
mov
inc
dec
xor
fcompl
out
mov
adc
pop
lret
test
sbb
mov
pop
in
push
cld
stos
dec
push
mov
rdtsc
push
ret
xor
iret
movsl
pop
and
das
outsl
cmp
add
ss
inc
popfw
aad
lcall
stos
adcb
add
fisttpll
sti
mov
out
cmp
sub
jg
insb
push
jg
hlt
ljmp
lea
push
push
cmpsb
fnsave
aad
std
out
sahf
xchg
inc
dec
out
mov
xchg
lods
jnp
leave
lock
popl
daa
mov
mov
arpl
arpl
mov
lods
lcall
sub
movsl
fisttpll
out
into
sbb
inc
jg
dec
mov
push
dec
iret
pop
je
insb
mov
jmp
popf
cmp
and
sbb
cs
inc
imul
loopne
xchg
mov
and
add
insl
gs
inc
test
in
dec
jb
add
orl
mov
xor
das
js
jecxz
sub
fidivl
rcrl
and
leave
adc
mov
jo
insb
push
loopne
cmp
enter
rcrb
into
mov
inc
shlb
sarb
sbb
pop
outsl
test
adc
jg
fcom
lea
lcall
mov
outsb
push
and
xchg
xchg
ljmp
push
mov
sub
xor
and
mov
or
fidivrs
test
and
sbb
subl
push
push
jge
cltd
push
pop
xor
fadd
in
fnsave
lcall
push
pushf
xchg
cli
outsl
xorl
mov
fdivrl
add
and
cmpsb
adc
sbb
insb
sub
xchg
adc
in
icebp
scas
rcll
popf
mov
mov
inc
pop
cmp
jno
inc
outsl
bound
mov
push
ficompl
sub
adc
jnp
int3
je
clc
dec
and
and
mov
jne
aam
mov
jge
mov
inc
lods
outsb
inc
scas
insl
mov
cmp
push
incl
cmc
lahf
push
sbb
add
flds
stos
and
test
cmpsb
mov
sub
adc
stc
in
or
cmpsb
mov
pop
xor
push
push
repnz
lahf
inc
jecxz
out
mov
out
in
sub
mov
mov
outsl
xorl
ret
add
aad
testb
lret
push
xor
adc
mov
daa
shrb
adc
xor
sub
pop
sahf
jbe
mov
popa
sahf
jbe
out
cmpsb
ror
fwait
test
pop
fstpl
push
and
add
lods
dec
jno
push
ret
test
test
shrl
out
jge
xor
pop
clc
inc
cmp
push
jno
mov
aas
mov
xor
subb
jg
sti
andb
pop
andl
mov
aas
mov
icebp
fstpl
xor
gs
cmp
xor
aam
std
rcl
mov
add
js
das
in
jo
adc
push
aad
mov
inc
xchg
jns
movsl
sub
or
xchg
push
in
xor
pop
add
mov
lahf
das
push
inc
fldcw
pushf
lret
cltd
mov
dec
scas
leave
enter
scas
pop
arpl
pop
mov
clc
adc
sti
arpl
fnsave
adc
lods
dec
pop
jecxz
pop
fwait
sbb
es
mov
adcb
mov
ret
ds
push
test
iret
out
in
xchg
inc
dec
aam
enter
aam
movsl
jp
dec
mov
das
ret
fistps
inc
or
mov
imull
movsb
dec
mov
adc
adc
rclb
xchg
add
aas
fnstcw
lods
ds
outsl
rclb
dec
and
pop
cmp
or
adc
test
push
add
jg
inc
int
mov
mov
mov
sub
popf
or
ss
jl
arpl
mov
jle
dec
adc
mov
xchg
mov
dec
aam
mov
iret
ficoml
jp
call
jle
mov
test
mov
popf
mov
movsb
loope
mov
push
jmp
push
cmpsb
fcmovbe
cmpsl
jp
pop
rorb
dec
mov
in
adc
sbb
insb
xchg
jne
xchg
inc
jo
fidivs
add
pop
pop
pop
movsl
call
mov
push
in
std
pop
lcall
lds
adc
nop
mov
sbb
fdivrl
jmp
inc
dec
mov
pop
mov
sar
stc
mov
xor
jbe
sub
mov
jg
mov
add
leave
inc
out
adc
xor
jp
or
cmpsl
test
xchg
push
rorl
fwait
dec
xorb
cmp
shrd
cmp
les
je
cmp
outsb
in
shrb
into
lret
mov
ret
cmp
pop
aaa
xor
jge
jo
lea
push
inc
test
sbbl
inc
nop
add
mov
bound
xlat
out
adc
mov
jne
inc
adc
rorl
aas
sub
jb
mov
and
adc
mov
movsl
icebp
dec
insb
cmp
and
push
mov
je
popa
or
or
cmp
xorb
push
jmp
sbb
adc
inc
repnz
ja
mov
mov
pop
in
add
movsb
mov
out
cmpsb
and
sbb
xchg
lcall
pop
pop
jb
sub
pop
ss
fs
int3
cmpsl
loop
and
insb
xchg
cmp
js
jae
pop
dec
add
or
push
sub
jns
ljmp
mov
cs
pop
jo
mov
xor
aad
int
mov
fisttpll
call
jle
push
and
hlt
sbb
popa
je
jg
jg
pop
push
and
fisubs
mov
bound
loope
jb
imul
jnp
aas
nop
inc
into
sub
mov
leave
adc
movsb
into
ljmp
cmp
cmp
sub
ss
cmp
sbb
idivb
and
outsb
shll
lea
scas
insb
adc
adc
enter
add
jns
inc
je
add
iret
data16
mov
pop
gs
arpl
mov
dec
or
mov
cmc
loop
cmp
sbb
popl
aad
test
lss
cli
in
or
clc
int3
jae
jg
gs
das
dec
stos
pop
jge
jns
inc
push
dec
pop
pop
bound
mov
orl
lods
test
fidivs
popa
sbb
push
decl
add
pop
mov
jmp
xchg
cmp
imul
rorb
call
dec
mov
es
fistl
adc
inc
sbb
xor
xchg
xchg
jb
rcr
fwait
popf
test
mov
int
push
mov
icebp
out
fistpll
testb
mov
xlat
cmp
xchg
test
aaa
pop
cld
in
je
addr16
mov
sub
xor
int
rdtsc
in
sub
cmp
sub
sbb
loope
xor
or
mov
lock
mov
je
add
inc
cwtl
mov
mov
sarl
jle
out
ja
mov
xchg
jo
dec
jnp
bound
and
or
mov
lret
and
cli
fcoml
push
fldl
enter
lock
push
push
jnp
and
or
out
fidivs
cmc
sbb
add
jecxz
imul
mov
and
into
loope
push
dec
std
xchg
shr
mov
pop
sbb
into
cmp
mov
xlat
repz
mov
ds
mov
cwtl
shlb
into
pop
mov
aad
lret
xor
and
jp
sbb
enter
insb
or
inc
divb
dec
in
push
adcl
test
push
popl
mov
mov
fsubr
xchg
push
add
ss
add
lcall
jl
sbb
ret
sbb
cmpsb
dec
bound
push
cmpsb
xor
mov
push
in
pop
imul
lcall
dec
cmp
out
fdivs
sbb
ds
imulb
adc
sbb
aas
imul
lcall
push
sbb
mov
lret
sub
sub
imul
loopne
xchg
addr16
enter
push
dec
dec
orl
mov
and
xor
insl
loopne
mov
or
add
xchg
push
inc
mov
push
movsb
pop
loopne
test
mov
mov
pop
scas
jae
in
insl
or
cwtl
mov
fwait
je
add
insl
mov
mov
popf
loopne
dec
loopne
push
jp
fsubl
xchg
shrl
aad
sub
pop
aas
loope
xchg
mov
mov
fs
jnp
pop
or
add
icebp
adc
add
push
outsb
sub
fimuls
inc
push
mov
jno
rorl
fucomp
repz
add
cmp
inc
sub
sbb
lock
pop
test
lods
lock
lcall
mov
inc
mov
or
push
mov
mov
notl
dec
fdivs
xlat
jmp
jns
xor
cmpsl
push
fldcw
adc
int3
ficompl
mov
xchg
xchg
sub
pop
sbb
sbb
leave
repnz
jg
and
cwtl
fdiv
je
ljmp
jb
cwtl
repz
ja
loop,pn
mov
pop
dec
mov
push
pop
push
mov
flds
clc
xor
adc
mov
pop
mov
outsb
push
mov
inc
xor
mov
add
addb
out
loope
push
nop
sbb
dec
jp
sub
xchg
jge
mov
fdivl
loopne
and
cmp
cwtl
ja
cltd
xor
and
leave
lock
ja
inc
ja
cmp
daa
mov
aaa
push
and
out
repnz
push
incl
jmp
loop
nop
mov
in
pop
inc
call
mov
stos
adc
call
mov
inc
lods
pop
cmp
iret
xchg
daa
jle
push
xor
cmp
dec
mov
xor
jne
cmp
pop
jo
dec
cwtl
jb
imulb
out
lea
repnz
cmp
add
jbe
out
mov
adc
adc
adc
cs
les
xchg
push
jnp
jb
mov
popf
mov
outsb
push
test
into
sub
dec
xchg
and
xor
xchg
pop
dec
cmpsb
sub
aas
je
xchg
sbb
hlt
xor
and
insb
pop
test
mov
out
jo
cli
push
movsb
inc
test
xlat
pop
inc
aaa
in
outsl
xor
fwait
repnz
ret
enter
mov
cwtl
fldl
outsl
dec
adc
sbb
pop
cmp
mov
pop
das
jne
sbb
sbb
imul
out
push
push
jp
in
cmpb
in
mov
jbe
mov
imul
add
cmp
add
mov
or
lea
data16
add
aaa
mov
movsb
sub
flds
mov
adcb
mov
stc
add
cld
dec
cmpsl
fs
jg
xor
fistl
dec
mov
ret
mov
adc
jecxz
add
xor
test
arpl
repnz
dec
or
and
ds
cwtl
jns
test
dec
and
fs
and
add
bound
adc
cmp
jmp
mov
test
movsb
pushfw
das
push
dec
lods
jo
pop
inc
mov
adc
jb
dec
es
aad
push
enter
add
cltd
and
lea
js
sub
cmp
cli
test
jno
cli
lahf
xlat
or
repnz
pop
imul
push
pop
add
adc
popa
aaa
leave
negl
sahf
iret
mov
jmp
jge
out
sbb
and
movl
sub
add
scas
push
jmp
movsl
arpl
push
and
ret
aaa
insl
push
nop
imul
es
cltd
int3
dec
xor
sub
pushl
push
push
jmp
outsl
iret
pop
bound
pop
jle
je
stc
adc
pop
jbe
lods
cld
or
rcrb
cmp
cmp
dec
iret
sti
icebp
add
mov
and
popa
sbb
and
aaa
mov
in
pop
test
in
outsl
mov
into
cmpsb
mov
cld
fwait
sbb
sbb
inc
mov
lea
mov
rcll
xlat
sub
xchg
or
test
in
jnp
int3
add
xor
sbbb
mov
mov
push
mov
outsl
divps
jo
dec
sbb
mov
movsb
xor
xchg
push
xchg
or
aad
push
add
add
fxch
xor
push
les
add
mov
sub
cltd
fimull
add
ds
and
cmp
sbb
sbb
in
out
cwtl
lds
lahf
push
xor
xlat
mov
nop
mulb
xor
pop
or
mov
add
mov
lock
jae
arpl
in
pop
xlat
mov
repz
lods
xchg
stos
in
inc
xchg
sarl
push
popa
xchg
jnp
lret
cmp
mov
cmp
in
mov
jecxz
xchg
int
cmp
or
xor
and
push
mov
push
push
movsb
cmp
dec
mov
pop
lret
add
pop
mov
jecxz
push
ljmp
cmc
ss
loope
fcompl
and
and
hlt
push
movsb
lahf
es
ret
js
hlt
scas
dec
push
shl
lods
roll
fsts
mov
push
sahf
int3
mov
pop
mov
shrl
sbb
cmc
stos
cmp
inc
rcl
sbb
push
in
push
ds
scas
std
mov
jbe
aaa
add
pop
enter
int
adc
bound
add
cld
mov
mov
pop
popf
push
ficoms
pop
adc
in
sub
ja
pop
loopne
mov
add
fnstsw
cmp
repz
clc
pop
gs
test
lea
test
lods
in
call
ss
ss
adc
xor
in
lods
xchg
sbb
in
mov
fildl
addb
out
cltd
fnstcw
jnp
out
cmpsb
jno
or
sarb
pop
dec
addr16
mov
outsl
push
repz
jge
outsb
xor
lock
add
jne
pop
sbb
stos
xchg
cld
outsb
dec
mov
cmpsl
jge
stos
jo
push
or
push
rcrl
int
jmp
jns
cmc
imul
or
lret
jl
test
push
or
adc
push
adc
mov
aaa
test
sbb
aaa
arpl
aaa
add
nop
push
add
std
pop
sbb
mov
jae
mov
xchg
xor
push
dec
cmp
mov
lret
negl
jl
test
xor
mov
arpl
inc
or
gs
jle
aam
and
xor
and
jnp
out
add
push
xchg
add
outsl
mov
mov
mov
jnp
lea
shrb
pushf
or
dec
fsubr
xorb
xchg
and
ret
add
loop
and
rcrb
ljmp
adcl
clc
lock
adc
loopne
pop
rol
cmc
and
dec
adcl
mov
je
loop
popf
int
sub
imul
xchg
fldcw
int3
mov
gs
loopne
jae
dec
pop
add
inc
stos
std
lds
or
dec
mov
jnp
mov
ret
cltd
rorl
pop
idivb
jnp
jnp
xor
sub
sub
add
inc
es
or
dec
in
inc
cmp
or
inc
dec
ret
popa
popa
inc
imul
dec
lcall
es
pop
and
push
mov
ret
push
mov
sbb
sahf
repnz
cwtl
inc
inc
iret
adc
cmpsb
mov
mov
lock
js
cwtl
xchg
jne
mov
fiaddl
jge
ficompl
add
add
pop
push
inc
insl
lods
in
mov
insb
les
mov
stos
xor
jno
sub
sbb
inc
add
aas
dec
bound
push
pop
aad
aas
pop
fscale
jne
mov
or
sarb
mov
int3
jmp
jge
and
push
ljmp
xchg
sub
std
push
inc
mov
test
cmc
das
push
popa
pop
jnp
adc
mov
mov
cmc
xor
fnsaves
xor
pop
and
push
dec
test
out
sbbl
adc
sbbl
loopne
jge
add
mov
int
test
xchg
mov
out
mov
sub
or
push
pusha
jns
fs
je
mov
insl
xor
mov
mov
loope
lock
aam
jb
flds
mov
lahf
push
inc
das
sub
and
test
dec
sub
insl
ljmp
js
push
test
mov
iret
mov
xchg
sbb
cli
jae
call
loope
mov
lods
mov
lods
mov
xchg
lock
sti
mov
mov
pop
loopne
jmp
xchg
imul
xrelease
lret
sub
add
add
mov
std
enter
sbb
xchg
or
shll
jg
pusha
cltd
in
or
inc
mov
subl
sahf
sbbl
in
add
pop
cld
icebp
stc
fisttpl
xor
gs
jno
out
jge
pop
data16
dec
rep
sub
jge
int3
mov
dec
movsl
pop
sub
rorb
jb
cmpsl
lea
mov
or
mov
inc
mov
adc
arpl
cmp
repz
lds
shlb
push
lods
jp
pop
pusha
lods
mov
and
les
test
negl
sbb
xchg
pop
and
or
push
lods
ja
shlb
fs
mov
leave
mov
push
mov
ret
ss
popf
sti
adc
sub
or
push
sbb
int3
ret
dec
je
adc
sbb
into
daa
jne
add
hlt
aas
outsb
pusha
and
cmp
ljmp
add
mov
push
fs
inc
mov
subl
psrad
cmp
aas
js
ret
lds
push
aad
mov
inc
shrb
fwait
mov
inc
repnz
stos
scas
test
mov
jne
ljmp
int
sub
or
inc
sbb
xchg
testb
mov
in
popa
add
jg
sti
mov
cltd
jne
push
add
dec
leave
cli
mov
pushf
inc
insb
out
in
pop
sbb
cmpsb
jge
shr
imul
dec
js
jmp
mov
in
lea
jge
jnp
ds
je
adc
or
adc
cmp
les
mov
jle
jae
or
insl
sarb
inc
mov
jge
and
lret
lea
hlt
dec
call
imul
jns
sahf
ds
jg
scas
pop
stos
in
in
inc
or
mov
or
ds
test
into
mov
mov
mov
lods
sub
pop
mov
pop
pop
inc
push
jle
push
jge
pop
jmp
sbb
sti
xlat
xor
fwait
cli
dec
mov
sbb
test
mov
lret
xor
insb
mov
test
insl
cli
sub
fsubs
nop
dec
xor
push
data16
or
xor
jb
and
fmul
mov
xor
xchg
fsubl
in
xor
popa
shll
inc
jb
xorb
int3
ljmp
fwait
test
adc
pop
arpl
sbb
icebp
out
adc
lret
push
push
push
or
xchg
sub
xchg
popa
jge
dec
push
mov
xchg
xchg
in
push
outsl
rolb
mov
sub
mov
outsl
jl
icebp
mov
lret
into
or
mov
sbb
mov
xor
mov
mov
push
mov
mov
js
cmc
jmp
jl
arpl
lock
push
push
cli
lahf
cs
adc
test
repnz
bound
pop
pop
xchg
dec
popa
pop
stos
add
inc
pushf
push
outsb
pop
jp
roll
pop
and
xor
ret
mov
inc
sbb
adc
inc
fldcw
stos
sbb
cmp
clc
or
add
in
scas
mov
int
js
mov
push
outsb
loop
gs
out
lret
jge
fmuls
fidivl
iret
dec
repnz
insb
xor
xor
mov
jne
cmp
stc
or
stos
pop
push
pop
std
inc
mov
push
adc
cld
jns
or
add
lock
shrl
int3
sti
lcall
jle
mov
jo
adc
je
fdivp
and
shrb
jp
inc
stc
es
push
dec
test
or
xchg
mov
push
mov
or
jmp
push
mov
push
ret
jo
cmp
jmp
sub
out
jge
push
push
mov
hlt
jnp
cmp
inc
sbb
mov
mov
mov
cmp
dec
mov
out
and
cmpsl
jns
mov
cwtl
outsl
add
lcall
shrl
stc
out
mov
popa
push
mov
sub
mov
repz
dec
sub
xchg
ds
pop
inc
xor
or
addr16
popa
nop
xchg
loop
lods
dec
lds
cmpsl
adc
mov
out
jb
jmp
mov
cmp
pop
in
adc
aas
andl
push
inc
jle
aaa
int3
or
fisttpl
cld
js
cmpsb
mov
dec
xchg
xchg
lds
add
push
out
inc
daa
dec
jnp
or
mov
push
inc
aam
daa
stc
push
jl
into
call
adc
data16
xor
mov
fistps
dec
pusha
stc
push
cmc
test
ret
rcrb
mov
sarb
into
xchg
and
aam
and
mov
std
or
test
stc
cld
pop
test
insb
orl
dec
cld
mov
jns
test
rcrb
or
fsts
enter
pop
adc
repnz
imul
mov
lcall
dec
fwait
in
adc
clc
fsub
fnstcw
fs
dec
sub
cli
ret
addl
popf
xchg
cmpsb
fdivr
or
aam
fisubl
sbb
dec
push
mov
push
stos
mov
insl
xor
sub
lcall
cli
mov
pop
jbe
call
out
ret
in
xor
roll
pop
fildll
fwait
cmp
push
mov
mov
inc
cmp
adc
movsl
pop
jge
out
mov
or
sahf
inc
push
push
push
scas
das
test
shlb
pop
test
outsl
cmpl
xchg
addr16
sub
insb
mov
loope
dec
clc
pop
icebp
js
pop
enter
mov
mov
pop
add
add
cmp
mov
stos
into
xor
and
popa
add
daa
aas
jno
adc
lret
loop
test
pop
push
pop
sub
and
pop
pop
push
mov
push
xlat
loope
xchg
push
ret
sub
jae
sub
cwtl
out
cs
roll
add
leave
addr16
push
cmp
in
mov
and
cmp
jnp
mov
mov
movsl
cmpl
jp
cmp
and
lea
mov
mov
add
mov
sbb
push
cmp
inc
and
and
adc
mov
cmpsl
or
pop
rcrb
cltd
add
into
xchg
mov
repz
push
or
out
sbb
mov
inc
repz
out
pop
sti
add
std
xchg
mov
pop
lea
cmp
lcall
mov
mov
push
push
dec
cwtl
in
mov
aad
jmp
repz
daa
out
pop
fmuls
jp
and
clc
xchg
cmp
fnstsw
fwait
jae
jp
sbb
stos
mull
sbb
mov
jp
or
insb
test
jno
out
xchg
movsl
test
mov
pavgb
pop
xchg
mov
mov
add
fidivrs
ret
xchg
adc
jl
das
push
ret
out
cwtl
aad
cs
cmp
loope
add
dec
mov
sti
mov
xor
loop
dec
mov
out
fdivp
xchg
stc
test
ror
stc
push
arpl
inc
pop
std
fdivs
fisubrl
sarb
leave
adc
lahf
xor
pop
fadds
test
imul
clc
lahf
or
loopne
repnz
and
enter
lret
add
cltd
pop
xchg
insb
xor
dec
push
sub
in
mov
testl
xchg
push
test
mov
mov
stos
insb
pop
mov
cmpl
and
ret
push
xor
stc
dec
pusha
lahf
or
mov
pop
out
arpl
shrl
xchg
idivl
movswl
stos
inc
mov
push
cmp
sahf
popf
push
sub
gs
mov
and
aad
push
enter
arpl
addl
or
dec
dec
and
jecxz
jbe
cmp
imul
std
push
es
inc
push
cmp
flds
scas
inc
cmp
mov
ljmp
inc
ret
mov
cmp
mov
hlt
insl
add
mov
pushf
adc
les
test
xlat
test
bound
add
sub
cmp
faddl
push
inc
je
mov
adc
int3
and
call
stos
testl
push
sarl
mov
add
cmp
mov
dec
out
in
or
cs
pop
dec
cld
leavew
in
imul
and
mov
daa
iret
mov
or
sbb
mov
mov
inc
out
addr16
lock
jo
sub
xchg
or
les
mov
loopne
arpl
mov
cmp
negb
dec
inc
fidivl
stos
add
repz
sbb
inc
mov
jb
xchg
out
into
and
movlps
sahf
add
lret
into
push
in
test
out
in
cmp
jge
fldt
iret
leave
lcall
and
xchg
lahf
addl
stos
cmpsb
mov
fstps
pop
movsb
push
jns
stos
out
testl
stos
filds
xor
xchg
loope
dec
imul
gs
les
ljmp
inc
int
fbld
aaa
push
aas
adc
inc
test
xor
popf
add
icebp
js
inc
mov
arpl
cld
fadds
sarb
movsb
xor
in
and
nop
mov
lret
and
lahf
add
push
push
pusha
mov
inc
dec
push
jae
and
mov
jne
dec
adc
scas
popf
testl
add
popf
push
mov
fcoml
xor
repnz
fs
lea
inc
scas
add
clc
push
ror
repz
jecxz
arpl
fistps
ljmp
mov
xchg
mov
pop
pop
ss
call
add
aad
setns
mov
mov
cmc
xor
nop
and
in
add
pop
in
sti
dec
repz
aas
and
or
int
cmp
andb
iret
add
xor
mov
cmp
dec
lret
das
adc
adc
jno
jbe
cmp
inc
das
push
and
sbb
mov
iret
pop
js
pop
enter
xchg
je
add
mov
movsb
cmovs
inc
lea
cmp
mov
test
push
sub
mov
enter
inc
icebp
cmc
imul
fnstsw
cs
mov
xor
ss
xchg
xor
xchg
inc
jmp
sub
sbb
cmp
dec
mov
pop
jg
mov
iret
lds
lds
scas
les
gs
add
sub
ret
pop
mov
and
ljmp
ss
dec
pop
aas
sbb
mov
inc
fs
test
push
xchg
lods
and
les
push
pop
xor
cwtl
lock
gs
or
cmc
pmaddwd
xor
xchg
iret
inc
dec
adc
lds
movsb
in
lds
inc
xchg
hlt
clc
movb
or
mov
mov
ljmp
jge
mov
sbb
mov
xchg
push
data16
sbb
xchg
in
push
pop
imul
mov
movsl
mov
js
subl
cmp
adc
enter
mov
jl
sub
pop
adc
xchg
xchg
sbb
das
les
fwait
dec
rcll
jl
mov
leave
jnp
and
push
pop
sub
test
adc
or
pop
mov
pusha
mov
fwait
jmp
test
mov
mov
or
pop
and
arpl
mov
push
dec
add
fcmovnu
shrb
mov
add
adc
mov
pop
jge
sbb
fnstenv
lcall
repz
mov
dec
pop
pop
hlt
mov
sub
sbb
xor
mov
test
mov
clc
mov
std
inc
data16
icebp
push
sti
or
cmp
jl
rorb
push
negb
push
cwtl
ds
push
inc
xchg
inc
xchg
imul
cli
pop
loop
movb
dec
cmpsl
in
scas
push
dec
push
sbb
mov
ret
fwait
push
popf
mov
fdivr
imulb
lcall
js
cmp
enter
jne
cmp
and
outsb
pushf
dec
rol
insl
push
fwait
int
mov
cmc
xor
insb
movsb
inc
lea
add
push
push
repz
js
xchg
mov
mov
fs
sub
push
sub
iret
or
push
sbb
ret
adc
ret
lcall
jmp
mov
xchg
test
imul
lds
dec
and
stc
scas
push
mov
push
inc
mov
xor
repnz
dec
pop
imul
mov
pop
xor
loopne
xor
mov
fbld
push
lret
lcall
jnp
add
cli
mov
pop
pop
lods
das
xchg
stc
jg
jne
add
and
push
cmc
and
push
jns
push
rol
into
push
adc
xor
out
shl
mov
jo
pop
loope
push
xor
push
xor
jb
test
je
movsl
or
inc
sub
jo
mov
cld
stc
dec
push
xchg
loop
jno
hlt
push
cmc
notl
movzwl
lahf
add
mov
xor
dec
jno
lock
dec
repz
jle
push
push
adc
lea
pop
jecxz
cmp
sub
or
imul
xchg
mov
subl
fcomi
cmp
dec
std
adc
addl
xchg
adcb
dec
fistps
lcall
xchg
lcall
and
jp
fwait
pushf
icebp
xor
out
pusha
adc
xlat
test
ljmp
scas
and
add
loopne
jne
xchg
xchg
pop
fldl
mov
pop
aaa
ret
test
xchg
test
ret
xchg
ret
and
add
xchg
in
push
mov
dec
arpl
fisubs
jecxz
fimuls
pop
fisubs
jmp
jae
and
sbb
sbb
stc
rcl
and
xchg
push
hlt
jnp
mov
pop
fcompl
flds
out
jo
adc
jns
sbb
dec
rclb
psubusw
insb
mov
inc
loopne
hlt
es
add
and
dec
popf
xchg
push
and
das
sbb
xchg
insl
fimuls
xchg
xchg
mov
sub
outsl
pop
sar
bound
cmp
stc
arpl
lcall
pop
mov
jae
enter
inc
neg
cld
jp
arpl
orb
mov
jns
insl
pinsrw
ret
mov
sub
mov
dec
repnz
sub
lret
cmp
fs
jp
mov
sub
enter
lods
and
xor
cmpsl
cli
mov
jle
push
mov
fadds
or
jg
or
jle
mov
inc
xchg
jecxz
pop
or
sbb
or
bound
cld
out
ficoml
ja
loop
popf
sub
add
orb
dec
pop
sbb
mov
mov
jae
ret
xor
xchg
int
pop
inc
mov
jnp
sti
add
clc
pop
lds
outsb
lock
mov
pop
stc
pop
cmpb
and
cmc
adc
mov
cmp
sbb
loopne
pop
mov
aam
mov
out
push
mov
and
enter
sub
into
pop
inc
lds
sbb
mov
pop
mov
lods
cli
cmp
into
xchg
stos
das
mov
cltd
pop
movsl
cs
loopne
pop
fwait
loop
scas
mov
jle
add
xchg
jbe
jl
jg
push
out
dec
mov
cli
icebp
cli
cmp
or
out
outsl
push
jno
lret
sbb
pusha
shll
pop
cmc
mov
or
sbb
sbb
je
inc
jmp
xor
mov
cmp
je
mov
pop
mov
xlat
out
iret
xor
loopne
push
fnstenv
sti
mov
out
pop
subb
loop
ljmp
fstpt
out
into
ret
imul
mov
mov
push
arpl
inc
nop
add
and
outsl
mov
dec
rolb
inc
cmpsb
or
jmp
sbb
ds
lcall
dec
stos
sbb
cmp
lods
jns
lret
outsl
xor
hlt
insl
mov
daa
cmpsl
adc
and
out
xchg
fidivrl
jl
pop
and
out
xchg
stos
inc
lcall
xor
dec
push
stos
sahf
mov
mov
add
pop
cmpsl
clc
sub
ljmp
insb
sbbb
dec
mov
mov
cmp
in
mov
mov
add
leave
sbb
adc
in
and
mov
aad
add
sbb
int3
cld
xor
in
xchg
std
push
addr16
pusha
add
out
out
and
je
cmp
rol
xchg
xchg
push
addr16
int3
pusha
mov
dec
bnd
rorl
es
and
xchg
mov
inc
dec
addr16
and
in
push
dec
es
notl
loope
push
jb
lret
jns
ret
or
out
sbb
mov
out
cmc
das
inc
repnz
out
out
pop
or
sub
cli
lock
imul
mov
cli
rorb
mov
jp
shlb
push
in
sarb
les
xchg
add
xor
popfw
or
iret
add
and
test
mov
scas
mov
int
pop
jle
pop
cmp
aam
lret
testb
or
outsb
into
jo
out
inc
scas
adcl
pop
fildl
das
mov
pop
pop
test
cli
pop
inc
xchg
add
pop
jecxz
ljmp
inc
aas
mov
pop
or
mov
sbb
dec
in
pop
push
roll
mov
add
mov
cmp
daa
sub
js
push
aaa
mov
ss
adc
test
jns
xor
pop
outsl
or
dec
push
mov
pop
dec
dec
rcr
mov
loope
mov
cs
dec
sub
inc
mov
push
add
mov
cmp
cltd
xor
sub
lcall
dec
jns
or
adc
lods
mov
outsl
in
jno
mov
sbb
pop
repz
aaa
xchg
and
mov
dec
pusha
mov
orb
fidivrl
fmuls
neg
lret
mov
or
cmp
cld
in
mov
ja
sub
sub
stos
or
push
insl
leave
shll
xchg
stos
scas
test
fdivrl
es
mov
pop
sbb
push
jmp
xlat
sub
fs
and
dec
pop
fdivrp
sbb
addr16
fbld
jae
push
jb
test
enter
push
add
filds
pop
pop
sub
xchg
int3
cli
aaa
jl
sarl
sbb
jg
hlt
cmpb
add
mov
jmp
pop
inc
jecxz
dec
sub
push
xchg
into
adc
mov
pop
inc
cmp
mov
inc
enter
and
int3
inc
push
es
jns,pt
addr16
imul
cwtl
add
fistl
jae
sbb
sub
movsb
mov
dec
imul
inc
adc
in
fxch
or
imul
xchg
out
mov
pop
push
jns
hlt
sbb
hlt
push
insl
pusha
xor
mov
sbb
sub
in
loopne
movsb
aad
dec
enter
push
inc
arpl
mov
les
repnz
sub
shl
cmp
or
imul
lods
mov
pop
xchg
sub
nop
ljmp
popf
fcomip
pop
pop
jl
inc
addr16
pop
imul
dec
fldt
mov
cmp
and
jg
ds
mull
aas
cmp
sbb
inc
mov
pop
in
ds
xchg
popf
add
popa
daa
mov
out
pop
push
sbb
arpl
mov
lods
idivl
shlb
ret
push
imulb
adc
pop
aas
mov
sub
jae
mov
or
lea
cs
je
push
aam
add
scas
std
lret
out
cs
ljmp
arpl
fs
sti
lahf
push
jns
out
xrelease
dec
popa
loopne
mov
cmc
dec
mov
lods
arpl
orb
sbb
nop
xchg
gs
vcvtpd2psy
cmpsb
xor
out
mov
xor
dec
ljmp
iret
stos
dec
pop
dec
data16
lcall
mov
jno
fnstcw
dec
and
push
es
stc
rclb
push
mov
pop
into
sar
or
or
push
addr16
sbb
sahf
and
mov
shll
cmp
gs
push
repnz
das
adc
jg
imul
mov
sub
in
add
mov
adcl
or
cmp
ss
pop
inc
sarl
daa
mov
mov
mov
adc
push
sbb
mov
cmpsl
shl
push
jg
xchg
cmp
push
mov
pop
mov
lret
cld
in
jle
mov
aaa
mov
ret
jle
outsl
xor
xchg
or
xor
pushf
int
je
cmp
test
inc
and
cli
filds
jne
or
jns
fstpt
imul
das
or
sti
cvtdq2ps
shlb
frstor
cmp
lret
and
fsubrs
imul
dec
xor
cwtl
add
fwait
mov
mov
jbe
add
rol
cli
sub
jae
pop
lcall
adc
lods
sub
sahf
mov
test
pushf
push
jne
cltd
lret
mov
lret
pop
sti
push
and
jg
das
mov
dec
shr
mov
adc
shl
sub
fs
cmc
insb
xor
dec
enter
lahf
lock
shrb
sub
push
push
mov
jo
jge
cmc
std
pusha
pusha
jl
pop
push
shrl
mov
or
cli
pop
push
jmp
test
pop
adc
loope
ret
dec
rcrb
pushf
xchg
out
or
dec
xor
adcb
mov
loopne
cltd
push
pushf
dec
les
rcrb
sbb
ss
sub
scas
cmp
dec
pop
push
inc
lock
xchg
sub
loope
push
rcr
push
xchg
push
les
clc
scas
ret
pop
pop
test
mov
mov
ss
add
or
sbb
xor
cmpsb
bound
or
imul
subl
in
and
mov
rol
jb
push
outsl
pusha
mov
jg
adc
loopne
sbbb
sub
int
fidivrs
mov
push
sub
push
pop
xor
mov
mov
ja
ljmp
mov
ret
test
fs
fists
mov
incl
sar
mov
pushf
lods
xchg
call
pusha
add
xorl
xlat
cli
add
sub
lea
cmp
jnp
leave
lods
inc
push
insl
sub
jmp
pop
iret
cltd
andb
add
iret
xchg
cmc
lahf
push
push
sub
adc
enter
mov
push
inc
andb
adc
mov
mov
aas
pop
incl
or
out
aam
movsb
test
jecxz
cli
xchg
pop
jnp
aad
adc
in
add
jns
xor
mov
loopne
mov
adc
mov
xchg
push
popa
loopne
cwtl
lcall
jmp
fucomi
sbb
roll
sub
in
xchg
sub
push
or
das
inc
jo
jae
cmpsb
je
fsubr
pusha
popa
std
into
nop
mov
mov
rol
push
inc
mov
xchg
xlat
adc
push
add
ljmp
adc
fisubs
repnz
pop
push
mov
hlt
pop
stc
ja
xchg
and
lahf
in
push
sahf
repnz
iret
out
enter
cltd
push
dec
mov
dec
sti
pop
dec
lret
mov
jb
mov
mov
xchg
les
pop
out
pop
mov
gs
dec
lret
daa
xchg
mov
mov
fbld
push
popf
test
iret
jno
lds
in
inc
pop
lods
sub
aas
xchg
mov
xchg
mov
mov
mov
cmpsb
dec
add
dec
push
adc
xchg
xchg
idivb
cmp
mov
mov
adc
jge
les
jnp
dec
push
push
adc
push
mov
cmp
push
push
xor
jae
jb
adc
mov
int3
sbb
outsl
jae
jbe
or
lcall
cmpsl
push
cld
cmp
mov
xlat
js
addr16
imul
lret
push
enter
add
jns
or
push
jo
data16
cltd
inc
pop
mov
sahf
mov
call
in
sub
xor
outsb
mov
jae
mov
push
sahf
cmp
mov
push
insl
pushl
push
stc
dec
bound
jge
jecxz
repnz
cs
pop
push
lret
mov
push
in
shrl
sub
negl
mov
enter
mov
out
xorl
dec
mov
push
pop
push
fldenv
xlat
dec
cld
popf
nop
test
xchg
pop
jmp
negb
cli
mov
xchg
pop
call
adc
adc
scas
push
inc
mov
cmc
jg
pop
add
lret
mov
repz
shl
cmp
inc
in
sbb
int3
cmpsb
lahf
mov
movsb
and
fsubl
test
jmp
fstpt
jg
sbb
xor
scas
xchg
add
mov
xchg
pop
shlb
add
sub
inc
sbb
lret
jns
cld
sub
in
push
mov
add
inc
cli
and
repnz
xchg
mov
lods
andl
sub
jae
ror
xor
mov
push
jbe
loop
addr16
xlat
pop
push
test
repz
lret
add
jecxz
pushl
and
cmp
push
mov
jl
movsl
ret
pop
aad
mov
xor
ficoml
xor
mov
int3
test
mov
jbe
gs
fwait
lcall
cmp
xchg
mov
fwait
inc
loope
jmp
int3
in
mov
mov
outsb
or
out
sbb
aas
or
sbb
adc
and
mov
push
jbe
push
inc
mov
mov
inc
sub
dec
mov
fiaddl
int
fisubs
jmp
lcall
rorb
jb
dec
dec
cmc
ljmp
mov
mov
add
cwtl
sub
jmp
cld
pop
movsb
ljmp
mov
xchg
imul
jns
popa
call
mov
push
jg
sub
mov
push
jno
jl
or
test
outsl
mov
pop
iret
jns
adc
out
insl
xor
test
lret
mov
shll
mov
ljmp
xchg
and
mov
adc
pop
push
add
mov
mov
add
pushl
test
inc
and
fidivs
adc
lods
popf
pop
mov
mov
insl
mov
stc
sub
popf
cmpsl
jecxz
sub
stos
mov
xor
adc
stc
and
mov
push
loopne
inc
or
add
jnp
xchg
cmp
pop
pop
push
ljmp
sub
pop
in
imul
pop
sub
iret
sub
idivl
xchg
push
adc
add
in
mov
jno
int3
ffreep
or
xlat
loopne
in
mov
leave
sub
gs
xchg
subl
flds
sub
les
xchg
sarb
mov
iret
fwait
insb
pop
cmp
loopne
sub
mov
jae
js
loop
lods
cmp
inc
cwtl
push
push
fbld
inc
test
jnp
dec
mov
cli
adc
bound
shlb
sub
fiaddl
movq
push
sub
jl
inc
mov
int3
dec
jb
in
adc
adc
mov
ss
or
out
cmc
mov
add
cmc
mov
cs
rol
lcall
cmpsl
inc
stos
int3
or
and
sub
adcb
ja
ficomps
cmc
aaa
adc
scas
mov
fsubr
cwtl
fwait
jmp
mov
sbb
in
lock
push
or
vpunpcklbw
loopne
enter
sub
or
aad
push
mov
mov
jbe
inc
loope
rclb
into
popa
jno
subb
mov
or
data16
aad
lret
jne
cmp
sbb
aam
pop
mov
and
test
sbb
fldenv
and
jmp
pusha
movsl
inc
mov
push
xchg
fcmovnu
add
mov
aam
outsb
cmp
push
xor
loop
cmc
mov
sub
and
jbe
ret
jns
sub
aam
out
inc
sti
outsl
adc
cltd
je
packssdw
and
push
and
out
inc
rolb
cmp
gs
cmpsl
faddl
insl
xchg
mov
dec
xchg
jecxz
and
xor
in
push
mov
fnstsw
aaa
pop
cli
fisubs
xchg
sbb
movsb
aaa
stos
fnstcw
fisubrl
insl
xchg
insl
cmpl
pop
out
imul
aam
dec
cs
pop
cltd
mov
sbb
cmp
and
inc
test
lea
sbb
push
dec
cmp
add
fdiv
pop
adc
mov
cmp
xchg
push
xchg
in
int
das
add
int
cmp
adc
iret
stc
push
jl
cmovne
out
add
imul
int
and
test
cmpsb
sahf
and
cltd
inc
mov
add
and
lret
cmp
stos
clc
mov
sub
pop
sbbb
mov
das
cmp
xchg
mov
mov
dec
xchg
ror
mov
pop
incl
cmp
cmp
push
cltd
mulps
lea
mov
pop
mov
call
stos
or
iret
adc
mov
fnstcw
mov
jnp
cmp
xchg
hlt
out
sbb
sbb
sahf
mov
xor
int3
push
fstl
jmp
mov
adc
scas
mov
or
adc
inc
jge
test
xchg
jbe
in
cmp
mov
mov
adc
push
push
push
stos
and
push
mov
je
ret
fisubrs
lds
mov
js
jnp
scas
push
fsincos
or
sbb
daa
in
in
jg
mov
mov
aaa
or
jg
cltd
lds
ds
in
sub
stc
pushf
fs
mov
sbb
jnp
jecxz
cwtl
dec
fcmovb
int3
pop
fldl
pop
cmp
dec
lahf
pushf
dec
dec
movsb
mov
jne
rolb
xorb
hlt
js
push
stc
cmp
push
ficompl
dec
ret
and
jge
push
out
jb
ss
cwtl
dec
rolb
mov
sbb
push
pop
and
mov
call
scas
repz
jbe
cmp
inc
push
or
adc
xor
xchg
addl
fcompl
sub
inc
xor
or
popa
out
fnstsw
mov
outsb
outsl
fisttps
js
test
mov
jg
dec
lahf
outsb
push
adc
imul
inc
xlat
int
sub
mov
lods
xor
cwtl
mov
daa
loope
lods
inc
lret
stos
mov
push
mov
xor
mov
sbb
pop
jns
dec
fbld
adc
lcall
inc
mov
jbe
cld
insl
insl
cs
lret
lcall
lods
jb
scas
gs
stos
lock
sbb
adc
in
dec
lcall
mov
dec
gs
dec
jl
add
mov
ret
mov
push
nop
mov
idivl
sub
hlt
or
les
frstor
or
rorl
dec
sbb
stos
andb
repnz
testb
sarb
inc
sahf
shrl
fnsave
rdmsr
push
sub
mov
movsl
xor
adc
mov
push
inc
movsl
sti
adc
add
fdivl
outsl
fs
cmc
inc
push
jne
movsb
out
push
add
pushf
js
ss
aaa
repnz
pop
jo
aaa
adc
imul
mov
stos
cmpsb
dec
insb
mov
jg
dec
fwait
cmpsb
ficoml
daa
sub
pop
pop
notb
int3
push
push
scas
gs
inc
pop
xor
mov
push
rcll
pusha
mov
jo
pop
in
sbb
pushf
xchg
out
push
xor
sbb
fwait
aad
leave
pop
js
adc
testb
pop
cmc
dec
xchg
mov
xchg
popa
xor
imul
ret
and
mov
cmp
push
cltd
ljmp
xchg
in
fcmovnbe
inc
repz
jo
mov
cmc
or
jns
jecxz
ret
pop
scas
addr16
filds
jnp
fdivl
jg
pop
dec
pop
insl
imul
lock
imul
sub
outsb
nop
lds
arpl
mov
lods
in
stc
dec
negb
cmpsb
pop
push
aad
shll
pop
push
mov
cmp
jp
mov
popw
sbb
lret
lods
aas
ret
pop
movsb
mov
int
arpl
dec
jae
mov
notl
xor
pusha
push
shrb
fs
jnp
fcmovne
push
mov
and
nop
dec
pop
jne
xchg
or
andb
andl
enter
lock
orl
dec
jecxz
or
xchg
lcall
mov
clc
add
leave
mov
clc
les
push
das
or
fimull
mov
ret
jae
rcrl
jo
int
and
mov
pop
add
loop
xor
lahf
inc
jmp
mov
fstps
jb
ja
aam
jbe
add
sub
clc
jnp
sub
push
xor
push
mov
xchg
cmpb
out
push
sti
push
stc
cli
rep
jae
popa
dec
adc
pop
jge
sbb
loopne
cmp
pop
lea
ja
pop
imul
loopne
rclb
inc
xchg
outsl
outsl
hlt
cmpsl
jge
jno
sbb
out
sub
repz
test
popa
jmp
mov
adc
loop
xchg
push
fwait
int
push
popf
adc
cwtl
cld
xor
cmp
roll
outsb
or
inc
shrb
lds
dec
mov
loope
or
sub
cld
loop
add
lock
push
inc
adc
pop
sub
jns
fstl
dec
and
sub
lret
cltd
inc
fcoml
mov
aam
sub
ja
mov
btr
mov
test
aad
mov
ret
jmp
push
or
dec
cmp
test
push
cmp
mov
jne
mov
xor
xor
jae
jbe
ja
jnp
or
ret
sbb
arpl
lret
sub
dec
mov
int
stos
sarl
inc
ret
dec
aas
or
jae
pusha
inc
clc
fdivs
xchg
icebp
jnp
push
cmp
inc
or
and
cli
adc
in
push
dec
add
dec
je
int3
jp
or
adc
outsl
js
inc
or
inc
push
or
sub
mov
cltd
inc
jne,pt
mov
jb
and
mov
fldcw
or
sub
lea
and
mov
xor
jns
outsl
cmp
ror
xor
and
or
sub
nop
mov
push
pop
je
jge
fistl
or
mov
mov
stos
xchg
mov
aaa
sub
and
mov
dec
rcrl
sbb
cli
and
or
mov
int
pop
lds
iret
push
push
xor
adc
movsb
jns
dec
dec
sahf
inc
pop
or
stos
repz
addl
mov
sahf
sub
cmp
push
sbb
imul
cltd
int
cmp
ret
pushf
push
das
fidivl
es
cmp
mov
mov
push
dec
or
lods
adc
ss
cmp
pusha
popa
mov
sti
fsub
add
imul
push
pusha
mov
mov
xchg
pop
aas
popf
loope
and
xchg
fsts
cwtl
test
jns
mov
and
ja
xor
mov
xchg
fists
nop
mov
lods
iret
add
push
and
jo
leave
sbb
mov
cmpsb
mov
dec
iret
leave
jno
test
pop
movsb
ds
mov
mov
fnstsw
push
xor
mov
inc
faddl
rorl
lcall
lods
es
pop
sub
adc
add
stos
xor
xor
leave
xor
dec
mov
jle
push
rcr
popf
in
btc
sahf
jp
sahf
lret
pop
loope
outsl
dec
stc
in
fwait
sbb
sbb
add
mov
cmp
daa
dec
fisubl
les
popa
jbe
dec
mov
cltd
mov
sub
test
or
or
push
mov
cmp
xchg
test
jl
mov
vmread
jmp
test
out
sub
xor
push
gs
pop
sbb
mov
ret
mov
jae
cwtl
std
inc
sub
xchg
and
sub
daa
adc
sub
push
xchg
les
push
outsl
bound
fdiv
pop
mov
sbb
pop
popf
jne
popa
int3
cli
rcll
push
fwait
push
movsl
mov
and
ljmp
out
jp
inc
dec
jae
cmpsl
fistpll
fdivl
ja
arpl
push
ds
bound
sub
xchg
jg
loope
push
repz
xchg
les
iret
stos
xchg
and
into
jnp
sub
inc
inc
or
in
lods
aad
in
ja
pop
or
sbb
jnp
cmpsl
fcoml
xchg
daa
out
mov
repnz
fidivl
pusha
sub
or
scas
adc
push
repnz
dec
bound
into
xor
stos
jle
push
mov
test
in
add
mov
cmp
lods
test
test
inc
fs
xor
xor
xor
orl
jne
aaa
fstps
jbe
js
mov
mov
dec
decb
or
jmp
out
and
inc
mov
daa
leave
out
cwtl
jl
aad
sbb
loope
adc
out
fcmovbe
jl
sti
out
orl
mov
jecxz
fs
lret
sti
shlb
or
repz
mov
testb
xor
test
test
pusha
out
pop
js
dec
aas
out
outsb
stos
ret
ror
outsb
xchg
dec
add
lret
mov
fdivrl
aam
lock
loope
add
add
mov
sub
xchg
or
mov
cltd
mov
ror
or
repz
pusha
xor
push
lods
mov
sbb
pop
aad
pop
repz
push
nop
out
or
pop
test
fisttpl
xchg
push
push
loope
mov
mov
or
fdivrl
pop
mov
sbb
jbe
jl
mov
push
ss
lahf
hlt
pop
out
jmp
es
xor
push
cltd
test
mov
cmpsl
nop
mov
xor
cmp
cwtl
cmp
and
and
sbb
jno
jno
loopne
fstps
jge
std
adc
aam
pop
cmp
adc
sub
adcl
dec
loope
jle
cmp
test
insb
mov
push
shlb
adc
push
push
fnstcw
pop
add
jg
pusha
jge
jmp
mov
call
iret
adc
jns
xchg
adc
inc
repnz
jns
clc
dec
add
fs
sbb
xlat
push
jns
and
xchg
es
lea
enter
mov
mov
stos
inc
jmp
sbbb
je
mov
mov
out
mov
and
in
jne
ljmp
nop
add
jo
cmc
stos
test
pusha
cmp
sub
je
lods
mov
out
adc
cmpsl
lret
sub
arpl
outsl
stos
and
push
dec
adc
push
out
add
and
jl
lea
sarl
popf
fidivl
ljmp
xor
popf
sbb
dec
pusha
push
jg
daa
mov
push
int
rcr
sub
adc
mov
xlat
mov
mov
cmc
or
pop
sbb
sahf
enter
ljmp
testb
lea
ds
inc
aam
pop
adc
pop
adc
cmp
sbb
frstor
push
sahf
mov
sbb
push
jb
xor
hlt
js
fistps
xchg
loopne
sbb
adc
aas
repnz
jg
push
incl
inc
scas
lock
dec
fisubl
mov
mov
mov
int
sbb
roll
notb
bound
cmp
es
jp
sar
jp
jp
cmp
cld
mov
xchg
lds
inc
pop
pop
mov
stos
mov
or
xor
adc
sub
push
repnz
cmp
dec
loop
pusha
lcall
xchg
xchg
jne
popf
cltd
adcl
cmpsb
jns
push
xchg
into
mov
xchg
icebp
mov
fs
popa
xor
jnp
push
aad
loope
mov
aas
inc
lret
sarl
outsb
daa
lods
or
lahf
cmp
pusha
in
jbe
pop
cmpsb
and
pop
jns
les
in
inc
xchg
jo
pushf
inc
add
mov
mov
hlt
jecxz
addr16
or
sbb
adc
mov
rcr
pusha
inc
add
popf
arpl
inc
sbb
lock
lods
shrb
push
loop
jno
out
shll
push
jbe
dec
ficompl
test
pusha
push
add
xchg
clc
shrb
mov
sub
sbb
push
aaa
sub
inc
out
sbb
xchg
pushf
jmp
fimuls
or
and
xor
push
add
mov
and
rorb
push
popf
and
in
pushf
jae
pop
jb
das
push
mull
ret
insl
jmp
nop
jae
jbe
into
pop
push
cmpl
mov
stc
and
mov
lock
mov
push
sub
xchg
xor
imul
mov
add
dec
leave
inc
testb
pop
ss
fmulp
adc
lcall
iret
mov
imul
movsl
loop
cwtl
out
fidivrs
dec
jg
push
je
daa
mov
in
std
and
icebp
outsl
arpl
aaa
mov
or
leave
call
xor
out
in
cmp
jle
and
jg
push
icebp
call
sub
bound
les
test
add
adcb
fcoms
xor
push
mov
mov
roll
pop
lret
stos
filds
adc
mov
mov
and
jp
jmp
lds
call
add
mov
aad
in
lret
cmpsl
sahf
push
inc
and
clc
stos
mov
sub
cwtl
jae
sub
stos
dec
lahf
xchg
push
adc
dec
or
or
pop
mov
mov
repnz
push
sub
jl
out
mov
or
es
popf
mov
cmp
fisubrs
adc
aad
in
jae
movsb
cmp
push
lahf
sbb
stc
sbb
jle
loopne
sbb
mov
inc
pushf
arpl
mov
repnz
jb
insl
inc
inc
fnstenv
inc
mov
or
mov
in
pop
out
jl
xchg
mov
imul
sbb
nop
push
dec
cmp
ret
test
scas
cmp
adcb
aam
out
or
ficompl
inc
mov
fnstsw
xor
mov
repnz
mov
lds
repz
push
test
in
jg
or
inc
loopne
pusha
mov
fiaddl
push
mov
test
pop
in
pop
inc
inc
or
mov
ds
mov
mov
pop
mov
sub
dec
mov
add
xchg
mov
iret
fs
lock
jb
jnp
xchg
sbb
in
xchg
cmpsl
sub
xlat
and
push
stc
jne
adc
cmp
out
test
cmp
aas
inc
add
fisttps
dec
cmc
or
nop
lcall
cli
out
loop
stc
adc
in
test
into
pusha
ds
js
lods
or
sbb
mov
lock
xlat
mov
cmpsl
aam
mov
lock
inc
mov
mov
cmpsb
cmp
lcall
and
jl
loope
jle
repnz
mov
or
sti
lods
sub
jno
jge
ret
jnp
cmc
rcrl
fmuls
jle
gs
movsl
addl
sti
jg
movsl
dec
ret
jne
in
add
in
iret
gs
push
imul
cmp
jge
xchg
xchg
xchg
lret
loop
daa
in
and
int3
or
sti
sub
std
int3
push
mov
jns
out
push
ficoml
lds
add
jno
lret
inc
and
fidivrs
push
push
mov
sub
out
lcall
jo
pop
mov
out
aaa
sbb
push
or
push
jecxz
test
adc
sub
popf
and
test
xor
jo
xchg
js
in
jg
data16
or
popa
lock
xor
out
adc
xor
inc
dec
cs
int
cmpsb
cmpl
push
repz
mov
push
mov
mov
sub
loope
sbb
pop
push
movsl
and
sbbl
shr
movb
fidivrs
cmp
pushf
lahf
and
in
dec
scas
push
push
and
mov
scas
fistps
lret
xor
jp
sub
stos
and
aad
aaa
sub
js
push
rcll
mov
cwtl
hlt
cmpsl
mov
xorl
sbb
std
xchg
test
stc
fidivrs
mov
lcall
sbb
mov
mov
xlat
add
sbb
or
sahf
adc
scas
and
pusha
hlt
lods
ss
loop
out
repnz
pop
lds
std
cmpsb
mov
repz
mov
mov
or
adc
jbe
daa
adc
ficoml
scas
loope
nop
mov
dec
jae
fsts
cmp
pop
xor
push
in
cmp
sbb
lret
push
or
divb
call
enter
xor
shlb
pop
sub
insl
fsubl
iret
insl
mov
sub
mov
xor
imul
lock
clc
push
nop
adc
in
jno
insb
out
rolb
mov
or
fstpt
repz
dec
mov
pop
dec
fcompl
nop
cld
xor
xchg
std
dec
scas
push
jg
sbb
mov
in
outsb
dec
out
scas
sub
xor
and
sbbl
mov
adc
aam
out
dec
push
or
scas
push
lods
push
stc
fwait
push
sti
shlb
jg
in
push
mov
adc
inc
outsl
xchg
push
sub
cld
jnp
sub
aas
sarl
or
mov
push
mov
xchg
popa
cltd
xchg
push
test
js
loopne
repnz
test
ds
and
push
push
sbb
adc
lea
push
out
pop
addr16
add
xor
scas
mov
enter
xchg
dec
insl
shlb
shr
sbb
xchg
push
ret
cli
lret
push
das
jg
jp
pop
push
mov
filds
xchg
mov
cmp
mov
stos
popa
dec
jns
or
adc
sub
xchg
les
fimuls
fnsave
push
or
fsubrl
loope
sub
mov
lcall
shrb
test
hlt
pop
pop
ret
frstor
fwait
loopne
mov
in
cmp
dec
scas
test
pushf
mov
xor
mov
shlb
in
je
mov
in
fbld
fwait
leave
pop
mov
pop
xchg
adc
mov
push
cmp
xor
lock
imul
jno
jl
test
ret
dec
cli
mov
pop
mov
mov
daa
jns
mov
dec
adcb
push
add
jmp
sbb
jp
or
das
popf
pop
ret
sbb
xchg
pop
jbe
pop
testb
mov
mov
xor
mov
cmp
testb
scas
es
addr16
rsm
xorb
pop
testl
jg
popa
xor
dec
cmpsl
cmpsl
mov
stos
dec
mov
push
imul
push
or
popa
sti
pop
mov
fmul
call
cmpsl
jmp
xchg
lock
pop
add
mov
test
push
mov
adc
cmpsb
pop
xchg
sbb
jo
rcll
pop
cld
pop
into
cwtl
mov
sub
fisttpll
popf
aas
sbb
lret
in
clc
xchg
xchg
and
mov
dec
dec
negb
xor
movsl
lock
jecxz
add
lock
pop
inc
cmpl
and
fwait
xchg
enter
mov
test
arpl
cmp
scas
sar
sbb
push
mov
fiaddl
pop
pop
in
jb
mov
lock
out
gs
shll
ret
test
movsl
into
outsl
test
in
pop
imul
sub
movsb
and
push
cli
fidivrs
popa
scas
enter
fdivrl
and
scas
push
push
inc
cltd
mov
mov
ficoml
cld
ja
mov
mov
cmp
mov
test
test
inc
sbb
mov
dec
push
push
call
xor
sbb
negb
test
call
xor
mov
xchg
int
mov
stos
mov
cld
and
stos
push
mov
dec
mov
imul
or
fdivrs
jns
lahf
mov
jnp
movsb
test
xchg
cmp
cmp
dec
int
sti
xchg
and
aas
ret
push
js
subl
mov
jns
scas
inc
lret
out
and
push
xor
divl
mov
mov
cmp
shl
xor
into
sahf
shlb
dec
fs
and
hlt
sub
rol
das
cmp
pop
jne
xchg
mov
data16
ds
xchg
iret
adc
mov
adc
loopne
xor
movsl
mov
jecxz
repnz
aaa
popa
sub
push
test
cmpsb
cmp
and
cwtl
push
pop
inc
xor
pop
iret
test
std
pusha
mov
stos
idivb
push
xor
rol
pop
xor
xchg
cmpsb
jo
fnstcw
gs
out
push
jge
aad
dec
push
jnp
leave
pop
mov
mov
mov
cmp
lret
or
das
or
sbb
push
loop
les
push
cltd
aas
cs
mov
cmpsl
xor
cpuid
out
out
inc
xchg
dec
sub
test
in
pop
xchg
sbb
or
lret
loop
cmp
repnz
mov
mov
adc
rcll
daa
cwtl
sbb
xor
fmul
xor
sahf
popf
push
jae
adc
jo
in
sbb
nop
cmpsl
push
shr
gs
jno
arpl
or
sub
ljmp
in
and
and
fs
test
popa
and
sbb
movsl
mov
jb
stos
push
mov
dec
xchg
sbb
push
push
and
mov
das
push
out
sbb
pop
clc
push
rcrb
push
or
push
data16
lcall
lcall
imul
ret
dec
or
in
je
push
dec
add
leave
xlat
ja
cld
dec
push
jns
xchg
aam
rcrb
and
push
sbb
hlt
mov
test
and
lret
scas
or
into
test
aam
in
mov
add
dec
mull
cmp
in
mov
push
repnz
lcall
xor
mov
adc
lret
or
aaa
pop
ret
sub
push
lock
pusha
lods
pushw
inc
jmp
stos
xchg
sahf
push
nop
fs
imul
subb
and
or
leave
mov
dec
pop
push
jnp
fdivl
stos
pusha
or
std
data16
sub
xor
mov
sub
sub
or
xchg
cwtl
dec
lds
mov
dec
dec
scas
add
lret
cmp
push
inc
cld
ss
leave
xchg
jge
and
std
dec
mov
or
sbb
xor
jge
imul
sub
ljmp
test
ffree
xchg
nop
xchg
stos
dec
mov
fistl
ret
nop
add
movsb
sub
adc
jno
mov
notb
jo
mov
push
or
mov
cmp
inc
rcll
aaa
jge
dec
mov
adc
push
mov
vpblendmb
js
insl
cmova
jbe
in
xlat
fwait
and
cmpsl
sarl
lods
dec
add
pop
jp
int
or
in
scas
jne
js
xchg
sbb
out
out
movsb
pop
int
jmp
sub
push
sub
mov
adc
lret
popf
mov
mov
cld
mov
pop
add
mov
cli
xchg
cmp
jnp
xchg
rorb
xchg
lods
lret
add
cmc
cli
dec
sahf
cmp
sub
or
mov
mov
loopne
xchg
add
popa
pop
lds
and
pop
stos
iret
inc
fldenv
pushf
je
sub
fmuls
mov
push
sub
or
xor
mov
adc
test
mov
mov
xchg
fcomps
jnp
mov
pop
cld
loop
hlt
or
dec
sar
repz
call
xchg
add
and
scas
jecxz
mov
mov
cwtl
out
add
dec
imul
xchg
sbb
call
mov
popa
xchg
push
or
in
movq
cmp
xchg
fsub
dec
pop
inc
jb
and
pushf
dec
push
jns
inc
xchg
jne
jns
cltd
push
lcall
mov
sbb
mov
sbb
jne
hlt
ds
jne
adc
popf
xchg
push
fcomps
push
int3
mov
imul
xchg
jo
jmp
idivl
pop
inc
add
hlt
jo
mov
jbe
pop
push
lahf
jmp
pushf
sarb
dec
dec
push
jg
mov
fwait
push
and
out
jnp
jno
mov
sub
xchg
mov
in
les
icebp
pushl
pop
inc
fwait
jl
js
in
in
notl
test
pushl
cmp
push
add
and
push
adc
out
cmpsl
inc
les
aam
xlat
pop
cli
stc
sti
sahf
lods
ljmp
ret
inc
das
jbe
jb
mov
cmp
mov
mov
lods
ret
imul
push
mov
fimull
dec
push
pop
sub
das
sub
in
push
mov
test
xchg
mov
loop
sbb
xor
sbbb
mov
cmpsl
daa
movsl
jo
sti
popf
push
gs
out
pop
sbb
gs
adc
aam
or
aaa
cmp
sub
cmp
xchg
arpl
dec
in
xor
scas
lock
dec
xchg
dec
loope
sarb
cs
lock
out
icebp
cmp
mov
call
mov
mov
jle
and
lret
dec
pop
js
out
sbb
jecxz
sub
fbstp
roll
jle
inc
adc
pop
or
pop
ret
push
shll
aaa
std
mov
mov
sbb
jb
ss
lods
push
scas
scas
jne
dec
gs
mov
int3
inc
inc
loopne
cmpsl
mov
aad
sbb
ja
mov
mov
rolb
lock
pop
aaa
sbb
mov
adc
cltd
inc
jb
iret
fisttpll
shll
cmpsb
movsl
aad
cmp
pusha
push
je
arpl
push
xlat
pop
loope
adc
fcmovne
adc
out
push
jge
add
mov
or
scas
xchg
imul
int
mov
cmp
out
dec
mov
lahf
cmp
pushl
xchg
and
jbe
push
incb
je
add
lahf
pop
nop
pop
adc
sub
lcall
mov
add
ljmp
fbld
sbb
pop
pusha
mov
nop
ljmp
pop
adc
popf
fistpll
mov
mov
xor
dec
lock
push
adc
dec
sub
out
push
scas
push
push
xlat
and
cmc
push
mov
ljmp
jno
mov
pushf
leave
cmc
jle
mov
mov
push
popf
pop
aad
push
cli
sbb
jmp
xchg
xor
call
mov
xor
push
stos
mov
xchg
aad
pop
sub
fldl
adcb
lds
stc
popl
orl
jns
arpl
in
add
dec
adc
fwait
arpl
loop
jecxz
xor
jae
repz
pop
lods
and
in
cmp
call
sbb
mov
or
dec
mov
fcomp
jns
pop
inc
sbb
pop
leave
insb
aam
adc
inc
into
jbe
sub
idivb
daa
jl
or
cmp
or
movsb
out
out
xchg
push
sbb
mov
int3
and
arpl
test
fxch
pop
adc
xor
outsl
pop
and
or
stos
sbb
test
jb
xchg
mov
fists
in
popa
push
in
cmpsb
outsb
ret
not
cmp
inc
loope
and
subb
call
loope
test
outsl
ja
cmp
movsl
out
lds
mov
fsubs
add
fcmovu
push
dec
cmp
sub
xlat
lods
cld
jns
cmpsl
cmp
inc
std
fs
xchg
push
test
dec
push
jno
addr16
mov
out
sub
popa
orl
and
pop
pop
dec
fwait
add
gs
xlat
inc
fisubl
clc
aas
shrb
pop
xchg
xchg
stos
test
imulb
pop
mov
adc
jecxz
sub
ret
das
dec
lods
mov
pop
inc
push
les
xor
jp
lcall
jns
das
push
mov
shrl
hlt
fsubl
or
sub
dec
outsb
aas
xor
jle
gs
jne
lret
nop
jno
daa
push
jmp
push
push
or
popf
or
ret
sub
and
std
mov
lock
dec
gs
outsb
shrb
push
arpl
rcrw
pop
xchg
std
sti
add
mov
fcmove
lock
push
pusha
fnstsw
lods
mov
mov
cmp
and
fnstcw
mov
ljmp
jmp
and
push
cmc
sub
xor
in
scas
lods
lea
outsl
mov
aam
repnz
push
das
push
pop
js
dec
sub
push
mov
mov
nop
mov
out
dec
sahf
fcom
and
into
out
clc
dec
mov
scas
aam
mov
mov
or
lea
imul
loopne
pop
rcll
jnp
divl
popf
and
fs
les
add
in
call
fldl
pop
aaa
or
out
test
mov
add
xor
test
std
mov
in
into
ret
loop
sbb
sub
repnz
stc
push
fwait
xor
stc
pop
adc
dec
inc
roll
out
outsb
shrb
scas
or
jb
test
repnz
mov
or
stos
and
sub
lahf
clc
inc
inc
shll
enter
in
sub
mov
or
imul
cmp
cltd
loop
cmpsb
imul
inc
pushf
addl
js
mov
sub
or
adcb
push
cmp
push
mov
jecxz
outsl
mov
outsl
pop
jge
cmpsl
mov
lock
in
cld
inc
dec
push
lea
jbe
or
xchg
stc
sub
xor
xchg
fbstp
std
stos
mulb
sub
rol
sahf
sahf
jmp
xchg
jbe
xchg
and
cs
pop
push
hlt
dec
inc
movsl
push
and
hlt
test
jnp
fs
stc
adc
inc
int3
js
push
enter
mov
scas
sbb
lea
push
int
outsb
adc
int3
scas
pop
xor
int3
fxch
stos
pop
push
sahf
push
pop
pop
push
movsb
sub
sub
je
jmp
daa
or
xchg
fbld
dec
add
es
dec
add
jg
add
inc
std
pushf
cld
xor
scas
mov
sti
sarl
call
cli
or
rep
adc
cwtl
cmp
pop
sbb
add
inc
out
dec
aaa
movsl
cmpb
aad
push
xor
sbb
loop
mov
mov
xchg
ljmp
inc
jo
aad
lret
inc
dec
fwait
je
sbb
cmp
mov
shlb
or
aam
bound
and
inc
mov
popf
pusha
call
sbb
orl
fidivrl
sub
jns
jae
lcall
xor
mov
imul
lret
mov
xchg
dec
cld
add
aam
mov
pop
push
dec
repnz
sub
call
mov
mov
call
jle
je
mov
addr16
pop
jg
dec
lea
mov
pushf
movsb
pop
mov
jb
cmp
jp
mov
shr
subb
popa
inc
sub
pop
cmc
out
jge
inc
cmp
cltd
push
mov
ret
pusha
mov
out
sbb
lea
pop
sbb
pop
inc
cmp
add
leave
mov
jp
ljmp
or
stc
pop
add
jecxz
jmp
int
lret
jo
xchg
dec
pop
mov
shlb
mulb
mov
test
jp
push
mov
pop
addr16
push
add
mov
sub
popf
xchg
mov
popf
inc
or
stos
inc
cmpl
roll
fwait
popf
insb
mov
lock
sub
xor
rcrb
icebp
mov
or
dec
mov
inc
data16
fucomi
and
inc
popa
sbb
inc
cmpb
push
sub
adc
and
or
imul
sub
xor
dec
cld
aam
jp
jno
in
lahf
call
mov
mov
push
adc
insb
inc
inc
fsubl
subl
dec
cli
and
lods
push
mov
fstl
xchg
enter
or
dec
popf
cmpsb
push
lock
pop
dec
jmp
xchg
xchg
sub
in
mov
mov
xchg
lcall
add
aaa
or
mov
rorb
xchg
mov
mov
cmp
sbb
out
and
fstpt
pop
mov
jo
rclb
aaa
xchg
or
mov
mov
loop
or
inc
imul
outsl
xor
cld
in
sbb
adc
dec
xlat
popa
jo
cmp
pop
or
out
lahf
sahf
ret
aas
add
dec
inc
sbb
iret
rorl
jge
ljmp
sub
adc
std
nop
push
mov
outsb
into
call
sub
test
mov
js
push
icebp
ret
rolb
lret
stos
add
icebp
cmpsl
jns
scas
cmp
mov
les
jae
fildll
mov
adc
mov
jb
xchg
js
mov
stos
jnp
popa
in
inc
push
loope
sbb
inc
cmp
sub
lods
fstpl
dec
dec
add
and
xor
jmp
je
mov
add
dec
out
jl
mov
mov
inc
and
push
sbb
out
shrb
or
mov
sub
mov
cmc
mov
push
adc
rclb
in
push
aam
in
and
adc
fisubrl
pusha
das
loope
ret
popa
mov
add
push
push
ss
pop
sbb
sbb
addb
mov
fucomip
jns
es
or
mov
cmp
movsb
adc
mov
clc
out
jl
roll
js
loopne
sub
cmp
loope
pusha
popf
call
jmp
mulb
add
lods
push
xor
repnz
pop
insl
pop
loope
scas
fisubs
movsb
cmp
mov
out
cmp
and
test
push
daa
scas
push
push
cwtl
mov
fisubl
aad
mov
addl
inc
add
ss
fisttpll
xchg
pushf
repz
insb
pop
test
movsl
lcall
mov
daa
adc
insb
sahf
popf
inc
gs
jle
inc
out
cltd
push
ret
mov
icebp
ds
push
fstpt
paddq
or
xor
adc
fisttps
or
or
mov
out
es
repz
or
leave
stos
adc
gs
push
sahf
lret
lret
in
push
sub
push
xchg
or
scas
fisttpl
xchg
lahf
xor
out
push
fiadds
jl
sbb
out
loop
push
add
sub
loopne
bound
cmp
daa
and
addr16
mov
cmp
in
add
mov
pushf
jns
inc
mov
aam
cmp
push
mov
cld
jns
xchg
and
sbb
idivb
pop
out
sahf
data16
call
dec
push
mov
mov
shrb
and
nop
push
adc
aas
cmpsb
shl
xchg
lock
or
mov
ficomps
push
adc
mov
mov
inc
jg
mov
jo
mov
or
daa
aad
jno
xchg
imul
pop
lret
add
mov
test
shl
dec
jno
loope
push
jmp
mov
jb
push
imul
fidivrs
pop
rolb
or
mov
mov
cmc
into
sub
inc
pop
xchg
cld
ret
lea
sub
mov
cli
cmp
mov
scas
nop
add
dec
mov
sbb
test
gs
outsb
ret
es
shr
mov
lret
sub
jg
stc
sub
into
push
nop
nop
xchg
mov
or
sbb
subl
loopne
nop
mov
pushf
pop
and
dec
cwtl
pusha
cmc
lea
repnz
or
fisubl
out
ljmp
xorl
pop
movb
jg
mov
mov
leave
push
ret
iret
jle
gs
mov
pusha
push
daa
inc
lret
cmp
sub
and
dec
mov
popf
pop
sti
fldcw
imul
scas
dec
adc
xlat
push
dec
mov
ss
jecxz
lea
xchg
sub
fdivr
loopne
sbb
lahf
in
mov
and
push
mov
lret
shrb
stos
out
aas
repz
mov
ficoms
lret
add
xchg
jno
daa
test
mov
add
sbb
cmp
mov
lods
int
or
cmc
add
mov
call
pop
push
push
popf
jne
dec
pop
shl
or
repz
fs
cmp
push
insb
cmp
and
add
mov
aas
roll
leave
popa
pop
cld
and
sbb
les
add
or
lods
js
jo
cwtl
cmpsb
js
icebp
jp
or
add
or
sbb
movsl
push
xchg
mov
in
jmp
and
mov
pop
mov
jb
int
loope
iret
xchg
shrb
xor
pop
mov
mov
push
add
xor
dec
push
sar
push
arpl
scas
clc
push
push
rclb
pop
iret
mov
ret
stos
cld
jge
into
leave
push
fisubrl
hlt
push
push
xchg
push
stc
bound
and
push
dec
mov
pusha
nop
imul
dec
imul
clc
inc
pop
mov
outsl
out
or
xchg
sbb
hlt
jmp
xchg
pop
push
or
cmp
or
test
inc
dec
sarb
push
clc
fdivrs
fisubl
xor
addr16
mov
pop
or
movsw
jmp
sti
in
sub
cld
std
mov
ret
jae
or
loopne
inc
sbb
sbb
push
dec
mov
xchg
inc
lcall
dec
ljmp
adc
jbe
mov
in
xor
xchg
jg
fcmovbe
adc
cmp
imul
inc
cmp
and
inc
cmp
and
add
push
cmp
push
sub
cmp
jge
cld
and
gs
mov
mov
jb
mov
aaa
sbbl
mov
and
sub
inc
mov
jo
mov
out
cmpsl
scas
xor
add
leave
sbb
test
rcr
xchg
clc
xor
dec
fidivs
mov
mov
mov
pop
dec
lahf
xor
mov
sarl
push
pop
xor
sbb
pusha
fucomi
dec
xchg
cwtl
jno
jge
mov
aaa
pop
push
popf
leave
xchg
cmp
std
add
mov
mov
pop
test
ljmp
cmp
es
push
jg
cmc
addr16
in
clc
and
dec
mov
adc
mov
dec
push
xchg
iret
stc
sub
es
mov
filds
or
rol
add
or
and
mov
or
cltd
mov
lcall
xor
sti
outsb
push
xchg
lahf
inc
push
loopne
out
sub
jne
pop
ret
cmp
daa
frstor
ret
das
sahf
repz
dec
pusha
shr
pop
loope
push
ret
popf
mov
movsb
cmp
sbb
sub
insl
add
add
pop
xor
add
in
pop
mov
js
pop
cs
hlt
inc
popa
add
jnp
stos
test
xchg
mov
dec
ljmp
shl
inc
std
cmc
push
pop
jecxz
xchg
inc
inc
aad
movsb
popf
pusha
test
lds
pop
std
cmp
pop
mov
std
data16
xchg
jge
iret
sbb
add
std
push
insb
jl
mov
mov
fidivrs
cmp
dec
adc
mov
hlt
loop
js
in
test
fs
and
scas
cmp
jg
fsubrl
fisttps
pop
fisubrl
sub
push
xor
sarb
add
fcmovb
add
jbe
test
aaa
nop
insb
sbb
pop
inc
aas
or
mov
lods
leave
int
dec
push
pushf
popf
mov
popf
inc
push
leave
sti
jbe
add
in
aad
insl
sbb
cld
shll
xchg
mov
dec
inc
sub
xor
mov
push
pop
xchg
pop
mov
jno
cmc
pushf
aad
sub
rorl
lcall
popf
call
add
xchg
push
and
aad
rclb
fsts
movlps
sbb
xor
inc
pop
addb
js
pusha
aas
jno
addr16
scas
outsb
mov
sti
std
mov
stos
inc
xchg
mov
nop
lock
aas
push
repz
outsl
adc
mul
push
fs
mov
fcmovne
int3
push
jae
lods
mov
push
insb
pop
fs
mov
scas
data16
or
insb
jns
gs
mov
test
loop
push
cmpsl
push
cs
addr16
mov
fdiv
mov
push
movsb
dec
sbb
jle
lahf
scas
jae
jbe
sbb
hlt
jge
pop
into
sarl
gs
scas
sub
sub
adc
arpl
xor
and
cmp
adc
pop
jne
jnp
dec
mov
pop
xchg
mov
mov
push
clc
or
and
les
nop
jb
gs
fmuls
cmp
mov
dec
mov
sbb
mov
dec
pop
add
xor
test
inc
and
adc
push
pop
enter
inc
mov
mov
js
xchg
sti
and
pop
sub
out
popa
adc
xor
cmp
jle
add
pop
pop
push
cs
mov
cmc
ja
ljmp
xchg
daa
notb
push
pop
xadd
hlt
pop
out
push
jmp
es
popa
dec
push
out
std
ds
jne
mov
js
dec
or
or
in
icebp
mov
xlat
jo
loop
xchg
jne
sbb
test
pop
ret
popf
push
pop
jmp
aam
dec
pop
or
cmpsb
adcb
xchg
movl
push
sub
por
xchg
mov
ja
sbb
dec
sbb
jmp
jg
jne
sbb
scas
or
aaa
or
pop
dec
orb
shll
repz
xchg
jp
and
movsl
pop
or
mov
stos
into
xchg
js
mov
lock
imul
mov
or
scas
mov
sub
mov
lods
pop
in
lret
std
inc
hlt
cmp
cwtl
lahf
popf
rcll
loopne
ja
inc
cmp
das
push
imul
hlt
jp
test
add
out
jmp
adc
lahf
mov
test
call
faddl
cmp
ja
stc
add
jge
mov
in
imul
jae
mov
mov
orb
sbb
shl
jl
idiv
test
fwait
jae
xor
test
mov
es
xor
jle
dec
pop
xchg
cs
cld
pusha
xchg
pop
out
jp
in
mov
test
mov
pop
mov
jle
in
sub
sub
stos
loop
jmp
addr16
adc
jecxz
fstpl
lock
cltd
ret
adc
cwtl
mov
cltd
jg
dec
incl
fwait
ljmp
dec
mov
sbb
jmp
sub
jb
enter
xor
cmpsl
pop
and
push
push
repz
jo
add
mov
add
dec
fsts
aad
jne
fbld
or
mov
rclb
inc
hlt
cltd
stc
or
cmp
cwtl
dec
push
cmp
ret
lods
push
imul
fistpl
lcall
xor
pop
inc
lods
int
sub
add
jb
test
popa
arpl
cmp
xchg
fldl
mov
push
and
insl
and
and
sbb
fsubrl
jle
cmpsb
pop
fcoms
clc
jmp
jnp
scas
pop
fwait
xlat
mov
fldcw
stos
je
pop
sub
and
cmc
int3
jecxz
daa
ljmp
add
mov
mov
test
popf
pusha
stos
fidivl
push
cmp
add
dec
cmpsb
stos
mov
enter
mov
insb
and
jbe,pt
xchg
insl
mov
nop
insl
cmpsb
xor
nop
mov
mov
cld
mov
call
xchg
stc
mov
push
push
mov
sub
imull
addr16
shlb
push
mov
in
mov
add
sub
insb
sti
ss
push
sub
add
int3
mov
leave
push
scas
jge
jnp
sub
push
xchg
int
idivl
loopne
xor
sbb
jb
mov
add
push
sub
popf
cwtl
lcall
dec
jge
rclb
in
insl
add
add
pop
dec
fwait
dec
inc
ja
inc
xor
xor
pop
mov
pop
pop
lcall
mov
cmpl
push
ffree
sub
cmc
adc
gs
pop
loopne
outsl
cmp
shrb
dec
dec
adc
adc
inc
dec
pusha
mov
add
xchg
outsb
mov
xchg
sbb
stos
lea
ret
mov
test
pop
test
add
shl
pop
int
mov
mov
in
idivl
test
inc
push
mov
test
popf
jge
sub
ret
rolb
mov
push
sbb
cmp
xorb
adc
ret
push
push
xor
ldmxcsr
jl
add
dec
add
cmp
mov
movsw
hlt
push
cmp
sub
mov
out
pop
mov
inc
xor
dec
sahf
sbb
sbb
lods
cmp
test
jb
test
push
adc
cwtl
xor
dec
cmpsl
js
imul
imul
inc
ror
je
in
fidivrs
jg
lods
xor
jp
sub
mov
mov
dec
pop
lret
mov
psubb
xor
xor
cmp
xchg
scas
rorb
mov
cmc
add
orl
lods
es
push
dec
xchg
mov
ljmp
jbe
xor
push
xchg
push
rorl
jae
dec
in
fsubrs
pushf
push
dec
push
or
mov
int3
adc
mov
cmpsl
sub
push
shrl
pop
jbe
hlt
js
xchg
les
mov
mov
insb
popa
cmovae
adc
jo
shrl
shrl
xor
mov
add
aad
mov
pop
int
sbb
or
ret
fdivs
dec
push
xor
mov
inc
mov
sbb
je
jne
ret
jmp
daa
stos
or
fstpt
out
call
fs
cmp
pop
test
sbb
dec
hlt
inc
movsb
push
push
lcall
sbb
inc
push
dec
inc
stos
jg
push
lret
rorl
xor
adc
in
jg
and
mov
pop
pop
xor
outsl
sub
iret
add
mov
in
pcmpgtd
leave
pop
jg
jb
les
or
into
sub
ret
pop
mov
lcall
je
adc
or
xor
inc
sahf
xor
xchg
cmp
into
idivb
cwtl
adc
push
pop
mov
lea
jge
sbb
xchg
pop
out
push
lret
push
xchg
scas
test
or
dec
jl,pn
and
mov
push
lea
leave
or
push
push
mov
cmc
testl
fnstenv
movsl
cmp
das
lret
mov
push
insl
les
adc
rolb
push
push
jmp
stc
movsl
cmp
sbb
mov
sbb
je
fst
cs
push
sub
pusha
push
or
test
loopne
sbb
jg
xor
push
mov
or
es
adc
mov
jo
mov
lds
pop
lcall
insb
push
push
or
mov
in
mov
adc
mov
rcll
jne
jge
insb
jns
roll
lods
jb
dec
out
push
xchg
mov
es
xor
popa
add
jns
repnz
fiadds
stc
push
add
arpl
push
das
ss
aam
test
sbb
gs
adc
insb
sbbl
xor
pushf
dec
mov
or
cmpsl
rcll
arpl
imul
push
add
mov
cmp
jo
dec
arpl
in
insl
iret
idivb
adc
mov
mov
push
mov
add
sbb
aam
lock
loope
arpl
sub
mov
pop
or
lret
adc
mov
testb
aad
adc
dec
push
sbb
rcll
es
dec
ljmp
shr
ja
add
dec
or
incl
sub
fcoml
or
sub
pop
push
push
and
inc
add
xchg
push
pop
mov
fsubp
aas
mov
dec
sub
insl
pop
mov
fimuls
add
and
inc
adc
fwait
xor
sub
adc
insb
dec
aam
roll
inc
or
push
pushf
sbb
cs
jne
test
cmp
test
or
jno
mov
movsl
mov
cmpl
add
shlb
lahf
inc
shrb
out
sub
and
jle
inc
push
pop
push
push
fnsave
fsubr
out
movsl
fiadds
sub
mov
cmp
lea
add
xchg
pop
xor
repnz
dec
sub
test
and
addl
pushl
xchg
push
test
jne
pop
outsl
cmc
jnp
mov
mov
jno
add
pop
lret
xor
into
or
outsb
pop
cmpsl
adc
leave
jne
xchg
xchg
sti
xor
mov
cs
and
add
sti
fidivl
pusha
xorb
cwtl
cmp
jnp
jl,pn
jb
stos
mov
shrl
pop
int3
push
lcall
xlat
rep
add
push
jns
cmpsb
jge
mov
rorl
mov
repnz
mov
in
int
mov
lea
fsubl
add
cmpsb
mov
ret
mov
pop
cmp
inc
sub
inc
lcall
and
sbb
or
cmp
adc
jne
pop
pop
cmp
pop
sbb
mov
cmp
cmp
xor
pop
cltd
adcl
xchg
ja
xchg
insl
or
sub
sbb
xchg
mov
iret
scas
cli
push
in
or
adc
hlt
push
xlat
gs
lods
push
dec
inc
insb
cmpsl
dec
push
sbb
mov
jbe
in
popl
mov
jo
pop
mov
sub
rcrb
push
lock
cwtl
lods
sbb
sbb
clc
pop
cmp
mov
xlat
add
cmc
mov
and
sub
ljmp
jle
adc
loope
mov
cwtl
jl
mov
pop
xor
orb
pusha
and
mov
lods
fisubrl
in
mov
mov
orl
add
aad
sbb
jecxz
and
fidivl
lahf
xor
sbb
scas
pop
imulb
cmp
and
and
push
mov
sbb
daa
push
or
sbb
mov
lahf
mov
sbb
and
idivl
fs
adc
mov
ret
push
clc
movsl
and
int3
fs
notl
lds
xchg
aad
loopne
imul
sub
inc
movsb
pop
cs
xor
je
jp
cmp
pushf
dec
je
mov
fiaddl
out
mov
setge
fdivrl
iret
rorb
scas
orb
stc
lock
sub
andl
movl
xchg
int
inc
cmp
outsl
loopne
cmp
jno
jno
inc
cmp
inc
jge
mov
imul
pop
or
inc
out
clc
repnz
into
test
fisttps
dec
push
push
push
cmpsb
in
imul
cmpsl
stc
out
sub
xchg
mov
xor
mov
jnp
imul
out
repz
and
push
scas
adc
jnp
out
and
and
add
push
movsb
or
pop
cmp
addb
outsl
push
dec
jmp
icebp
inc
cmp
jo
outsl
jo
sub
cmp
mov
clc
mov
jae
lcall
dec
push
xchg
imul
push
loope
out
leave
xchg
xchg
adcb
mov
mov
sub
aaa
ret
ja
incl
lret
jl
xchg
jns
pop
inc
test
iret
stos
aad
dec
imul
imul
daa
add
fcmove
adc
arpl
test
mov
cmp
adc
aaa
fwait
pop
mov
or
insb
pop
jecxz
rcrl
lcall
stc
mov
mov
xchg
arpl
mov
sbb
add
dec
test
test
addr16
jg
cmpsb
in
enter
sub
jne
rorl
cli
imul
in
xor
mov
or
push
cwtl
add
loope
rcrl
loop
ds
les
sbb
adc
andl
mov
xchg
rol
lea
mov
loopne
pop
xchg
into
test
shll
xor
mov
sahf
dec
mov
cmpsl
xchg
pop
jnp
les
jl
icebp
adc
cld
xlat
pusha
insb
mov
ljmp
mov
gs
pop
ja
fwait
xchg
pop
inc
add
sub
test
inc
unpckhps
inc
and
out
movsb
jb
out
xlat
xlat
lret
mov
mov
js
pop
jns
sbb
xchg
cmp
xlat
inc
or
imul
jmp
cs
or
mov
nop
mov
pop
sub
jmp
out
mov
jae
jno
or
xlat
negb
out
leave
sbb
out
das
enter
jb
mov
andl
fisttpll
lds
mov
addl
flds
dec
xor
sbb
and
sbb
es
out
push
dec
xchg
imul
jge
adc
dec
pop
lret
sbb
sbb
ds
mov
xor
repnz
sub
xchg
jno
popa
iret
loop
lahf
inc
in
out
inc
cltd
stos
xchg
xorl
dec
cltd
sub
pop
push
xor
inc
divb
or
mov
test
jl
fstpt
cli
sbb
sbb
insl
pop
jp
int
dec
pxor
inc
mov
inc
mov
pop
sarl
inc
stc
jae
and
pxor
sub
les
les
cmc
fs
sub
fsubp
inc
push
sti
aam
inc
hlt
aas
jne
out
cmp
pop
stos
repnz
inc
out
aas
fnstcw
mov
or
pop
std
xor
and
ljmp
push
fldt
mov
inc
push
int
pop
lcall
sbb
fiaddl
add
pushf
and
mov
mov
fidivrs
inc
out
push
rclb
mov
dec
inc
xlat
jg
ljmp
push
mov
and
pop
sbb
jmp
mov
dec
inc
mov
aaa
xchg
mov
sbb
dec
pop
mov
pop
js
push
mov
push
repz
jmp
dec
push
gs
pop
jbe
sub
rolb
add
add
test
sub
mov
cmp
and
lods
and
ds
inc
sbb
ds
pop
sub
mov
insl
dec
jno
add
leave
int3
jbe
leave
aam
xchg
fidivs
repz
pop
in
xchg
cltd
stos
stos
mov
fxch
cmpsb
mov
pop
push
cmp
mov
pop
mov
mov
jmp
dec
addr16
push
insl
mov
movsb
pop
xorb
pop
sbb
out
mov
gs
sbb
xchg
cmp
in
ret
cmp
mov
jl
in
mov
rcll
imul
pop
js
push
add
bound
jb
jae
push
pop
rcr
xorl
pop
aam
jne
fisubl
pop
or
repz
mov
inc
std
pusha
xor
icebp
adc
call
pop
push
daa
int3
mov
popa
ja
loopne
cmpsl
std
add
sub
in
icebp
mov
jecxz
lds
inc
les
mov
insb
sub
test
arpl
fstpt
dec
sub
jne
fnsave
jle
mov
sahf
mov
add
lds
test
inc
fcompl
rol
fsubl
nop
add
sub
xchg
cmc
jo
imul
push
repnz
mov
cmp
cmovae
movsl
and
add
fs
push
push
jns
call
rcrb
pop
jmp
xor
jbe
jp
inc
cmp
or
xor
jge
mov
pop
pop
daa
insb
sbb
cltd
inc
jae
push
std
pusha
popf
mov
xor
insl
ljmp
pop
mov
clc
ret
bound
aas
and
inc
dec
rcrb
push
inc
add
fwait
mov
ljmp
and
lods
push
pushf
sahf
lcall
paddusw
xchg
rol
jnp
loope
pop
test
sbb
sbb
add
push
fmull
push
adc
cmc
mov
int
fstl
test
mov
mov
inc
sub
cltd
xchg
add
adc
lock
dec
aaa
pop
andb
ja
neg
or
lahf
xchg
dec
ds
in
jno
dec
cmpsb
ljmp
sub
movsl
test
push
fwait
pop
test
dec
jns
enter
lea
aad
jecxz
sbb
sti
mov
pop
mov
jb
jle
dec
insl
jp
push
es
xchg
shll
call
fisubrs
cmp
sub
and
incl
pusha
sahf
pushf
inc
sub
and
jbe
fadd
enter
scas
gs
arpl
cmp
or
xor
lods
ret
lds
out
gs
sub
inc
mov
bound
add
in
pop
imul
or
loope
les
repnz
lock
xor
sti
js
xchg
add
pop
add
cmp
mov
or
xlat
cmp
or
inc
jle
iret
std
into
or
xchg
mov
mov
inc
lods
sbb
scas
rorl
enter
push
movsb
test
jle
jno
jo
xor
or
push
cmp
sahf
sub
mov
or
jb
fcoml
xor
insb
mov
es
mov
out
push
pop
nop
gs
or
adc
jns
movsl
adc
stos
pop
push
les
jmp
ret
push
negl
sbbb
fstpt
xchg
loope
mov
xchg
in
fcmovnbe
push
pushf
stos
insl
add
jle
mov
js
or
xchg
rcr
cmp
mov
push
lock
mov
and
xor
pop
jp
hlt
les
rclb
rcrb
xchg
pusha
orl
or
push
js
pusha
lcall
ljmp
out
sbbb
sahf
lea
or
mov
adc
in
mov
mov
adc
mov
fadds
movsb
cmc
cmp
pop
aaa
sbb
hlt
sbb
inc
in
dec
add
adc
popf
mov
jnp
jne
mov
ret
loop
scas
pop
call
fadds
mulb
mov
jmp
dec
mov
incb
in
sbb
jle
mov
repz
adc
mov
repnz
rorl
cmpsb
mov
nop
xor
xor
out
popa
jle
xchg
movsl
movsb
push
xchg
jnp
dec
sahf
cwtl
nop
out
pop
mov
or
cmc
push
or
scas
cmpsb
jbe
xchg
outsl
test
leave
inc
pop
cmp
pop
jmp
dec
sahf
ja
mov
xchg
inc
icebp
jecxz
inc
lcall
jnp
push
fxch
mov
jle
testl
jo
xchg
xchg
flds
popf
in
and
out
shlb
jnp
adc
push
cmp
loopne
dec
add
lcall
xchg
dec
cmp
lods
mov
call
in
or
xor
xchg
data16
cld
sti
imul
std
dec
int3
push
push
test
aaa
sbb
loopne
insb
jge
daa
ficomps
test
jg
dec
call
mov
jae
jecxz
es
into
jnp
inc
push
jae
xchg
and
imul
add
movsl
lock
scas
jle
mov
jno
cltd
fs
pop
sbb
cmc
sbb
ficoml
add
or
sti
call
add
inc
push
cs
insb
fcmovne
inc
jl
pop
cwtl
xor
mov
xor
adcb
adc
adc
pusha
imul
loopne
jg
adc
es
out
ffree
push
jbe
cli
mov
inc
jge
mov
inc
mov
cmc
push
mov
push
cli
cltd
jo
inc
push
out
enter
data16
cmp
inc
xchg
pop
subb
movsl
rep
dec
fildll
xor
jns
add
movsl
push
js
jo
lds
pop
les
pop
insl
jno
jl
stos
xorl
sub
fs
das
fnsave
adc
testl
mov
lods
mov
out
pop
add
sti
pop
xchg
pushf
pop
out
jl
pushf
hlt
lret
arpl
cmp
rorb
pop
sbb
xchg
cmpsl
jno
in
test
inc
fstl
cli
xor
xchg
insl
nop
jge
jl
sbb
call
stos
imul
insl
inc
shlb
cmpsl
test
pop
dec
scas
loopne
std
add
fsubp
push
cld
mov
push
push
mov
es
add
lea
dec
outsl
push
clc
ret
ja
xor
into
subl
gs
or
xor
or
add
ss
ljmp
fmuls
lret
insb
daa
aas
ficoms
dec
dec
mov
and
in
pusha
jno
scas
sti
mov
lahf
mov
push
add
inc
mov
push
outsb
jb
cmpsl
addr16
inc
add
dec
xor
push
imul
jle
pop
insb
and
and
adcl
ljmp
push
and
repz
jecxz
iret
sub
push
mov
test
jns
xchg
fistps
sbb
sub
imul
xlat
addl
mov
adc
fdiv
lret
gs
and
call
sub
push
dec
mov
test
push
les
cmc
cmp
js
frstor
cmc
xor
outsb
pop
test
push
push
fsubl
push
cmp
rcrl
push
cltd
jecxz
add
or
mov
fdivp
dec
das
dec
pop
stc
inc
xor
sub
loopne
jne
push
leave
and
je
insb
ret
and
xchg
enter
scas
fsubp
mov
jbe
test
xor
jb
mov
incb
insb
in
les
mov
shll
fdivr
mov
movsb
sbb
mov
xorb
mov
dec
xchg
std
mov
dec
repz
imul
mov
cmp
mov
push
hlt
movsl
lock
pop
and
xchg
mov
fmulp
mov
mov
sub
dec
std
daa
fbstp
jle
into
out
pop
cld
iret
enter
jle
repnz
cltd
iret
sbb
mov
xchg
mov
ror
jmp
mov
adc
in
shl
xchg
mov
stos
mov
aas
xchg
jecxz
push
addr16
orb
mov
adc
jbe
push
aaa
mov
cmp
ss
cltd
nop
or
rcrb
mov
push
mov
iret
adc
adc
mov
cmpsb
cltd
or
xor
cwtl
adcb
mov
xor
loope
sbb
adc
push
or
inc
mov
arpl
mov
xchg
rolb
scas
push
sub
int3
mov
cwtl
fwait
inc
test
push
push
dec
in
arpl
cmp
sub
fidivrs
js
lods
mov
in
dec
ds
fnstcw
out
mov
mov
xor
xlat
in
mov
bound
cmc
int
sti
mov
dec
push
mov
mov
cmp
sub
push
sub
inc
enter
pop
test
push
out
icebp
sti
rolb
mov
push
xchg
ljmp
jl
cmp
sbb
aaa
add
fdivs
dec
cmc
cmp
lret
aad
lods
mov
je
xchg
mov
aam
nop
mov
push
cli
push
sub
or
insl
mov
ficompl
add
js
cmp
xor
jmp
mov
outsl
orl
add
push
pop
dec
out
mov
mov
call
repz
imul
push
push
add
popf
push
popa
pop
mov
in
dec
stos
fistl
fmuls
sub
test
cld
pushf
pop
inc
dec
mov
add
aad
clc
mov
cmpsb
fs
pop
mov
jnp
int
jge
jno
inc
sahf
cmp
scas
mov
pop
jg
addl
mov
repnz
rcrb
ljmp
scas
lret
mov
add
xor
xchg
sbbl
outsb
test
ficoml
jl
add
or
lea
or
cmpsl
add
fcoms
xor
outsb
push
jae
in
loop
sbb
cmc
fldenv
mov
jp
mov
xchg
roll
mov
shlb
or
loop
loop
and
int
mov
fs
push
fwait
add
lahf
add
and
out
push
rcr
into
xor
xchg
lret
insb
fstl
iret
loope
out
scas
add
clc
out
pop
aas
inc
adc
es
lret
scas
pop
movsl
fwait
mov
jge
push
aad
loope
addr16
pop
out
sub
fisttpll
push
mov
push
nop
ffree
jne
lods
dec
jg
inc
add
or
jnp
test
cld
lods
sahf
and
frstor
push
pusha
push
repz
ret
frstor
cmp
adc
pop
inc
adc
outsl
fdivs
jbe
xor
clc
andb
jp
jecxz
xlat
iret
jne
mov
inc
ret
sbb
pop
and
sub
test
loopne
inc
mov
dec
addb
idivl
lret
fidivl
cmp
mov
cmp
and
std
roll
fstps
sahf
and
inc
cmp
shrl
dec
pop
lcall
add
xorl
jmp
test
fldcw
push
rcll
pop
popa
dec
bound
xchg
imul
push
push
iret
mov
push
jmp
push
lea
cmp
sub
das
xchg
call
xor
aam
inc
add
cmp
pop
cmp
fcmovb
inc
rcll
cs
andb
pop
pop
inc
push
aam
push
les
scas
test
and
cmp
mov
push
faddl
call
fs
imul
lea
outsl
xor
cli
jbe
mov
arpl
shl
mov
xchg
or
xor
add
cmpsl
bound
push
jl
cmp
imul
cmp
add
or
mov
hlt
pusha
mov
lods
ja
fildl
add
stos
push
adc
movsb
fidivs
xchg
lahf
js
mov
ret
sbb
add
push
dec
stos
out
test
addb
mov
mov
enter
cld
lock
push
add
loope
pushf
sub
push
cmpsb
cs
outsl
mulb
out
popf
pop
into
cmpsb
push
mov
aad
mov
or
dec
add
iret
fdivs
xchg
mov
popl
lahf
cmpsl
subl
sti
pop
fsub
jno
inc
cmp
clc
inc
testl
js
call
test
js
loope
movsl
lods
loope
lret
ret
fstps
inc
inc
sbb
pop
enter
outsb
jmp
out
jg
sub
mov
daa
in
subl
clc
cli
adc
call
popf
adc
cmp
sbb
sub
scas
mov
int3
stc
cmpsb
pop
or
xchg
and
into
inc
sbb
nop
jbe
rcr
fisubs
outsb
xchg
sbb
stc
jno
aam
xchg
mov
movsl
inc
add
push
pop
test
adc
dec
xchg
inc
pusha
xor
push
cli
jbe
cmp
sarl
hlt
pop
repnz
xchg
jns
mov
adc
mov
imul
mov
inc
and
imul
mov
mov
inc
addl
vmread
ja
in
xor
mov
xor
loope
add
rol
ret
loope
and
jo
mov
and
sub
adc
call
cmp
cmc
add
movsl
push
in
int3
ret
movsb
repnz
fs
add
cmp
and
cmp
xor
push
jb
xchg
cmp
push
je
leave
jbe
add
jno
push
inc
xchg
or
and
adc
jns
sti
add
cmp
aaa
test
cmpsb
and
add
rolb
xor
cmc
cmp
daa
lock
xor
jno
xlat
jl
inc
pop
jmp
pop
push
rolb
mov
push
or
pop
pusha
add
jne
jb
jge
popf
out
cltd
pop
push
int3
push
mov
pop
popa
add
jl
scas
mov
xchg
dec
and
cltd
fnstcw
dec
mov
mov
push
lahf
jmp
in
movsb
in
xchg
loope
xor
push
lahf
pop
ss
mov
and
in
and
push
xorl
or
shlb
and
divl
clc
jbe
sbb
ficompl
addl
cmpsb
add
sub
xchg
adc
movsb
mov
adc
cli
mov
cmpsl
xlat
xchg
mov
cmp
jle
jmp
xchg
out
dec
mov
clc
mov
dec
das
add
inc
mov
lret
pop
inc
jbe
xchg
mov
ljmp
xchg
dec
sti
jnp
or
mov
jnp
aam
int3
jp
addl
mov
daa
cmp
mov
clc
or
or
cmp
pop
scas
aaa
arpl
dec
adc
and
mov
push
mov
xor
cmp
xchg
mov
divl
jb
or
daa
cmp
hlt
les
xchg
outsl
jg
pusha
fsubs
xor
xlat
push
fs
popf
inc
enter
push
pushf
xchg
rolb
mov
push
mov
sbb
or
mov
out
xor
push
xchg
jg
add
inc
outsb
std
testl
adcl
fwait
aas
lods
pop
fs
imul
fs
aam
sahf
mov
mov
lret
outsb
jae
cmpsl
add
cmp
push
inc
dec
push
push
cmp
outsl
inc
negl
dec
dec
inc
call
xchg
push
xor
pop
fists
push
aaa
mov
cltd
push
roll
in
xor
jmp
cmp
fsts
mov
xchg
jmp
dec
mov
xor
scas
adc
pop
stc
jb
push
pushf
adc
and
mov
pop
fwait
dec
loopne
xor
xchg
notl
in
scas
clc
inc
shrb
jbe
out
dec
adc
aas
inc
les
mov
dec
roll
xor
inc
mov
lods
movsl
pusha
push
mov
sub
cmp
adc
in
scas
rorl
shl
cmp
push
jno
outsl
loope
movl
aaa
stos
xor
sub
inc
mov
mov
jne
ret
inc
xchg
call
mov
sahf
and
setp
pusha
xor
enter
sbb
loop
jno
xor
lcall
aad
dec
fs
jmp
popa
cmp
out
inc
ss
or
xor
jmp
test
mov
mov
out
cli
mulb
dec
mov
push
lock
inc
aaa
popf
pop
insb
rorb
lcall
stos
cmpsb
add
sbb
pop
push
inc
in
pop
inc
daa
sbbb
rcrb
push
adc
ja
mov
es
data16
sub
mov
sub
xchg
into
xchg
xchg
imul
mov
mov
outsb
xchg
dec
push
sbb
mov
xor
xor
or
sbb
pop
andl
jp
xlat
and
push
cmp
mov
add
les
cmpsb
in
loopne
clc
jl
daa
add
jp
cmp
inc
adc
flds
out
mov
push
lret
xor
leave
jne
mov
push
cmpsl
test
lcall
cmp
aas
and
add
jle
cmp
pop
movsl
pop
sbb
jg
jns
sbb
test
cmpsb
xchg
fiaddl
shrb
and
int
ret
adc
or
cmc
inc
rorl
rcrl
mov
mov
xchg
test
aam
lret
out
jns
mov
add
mov
mov
ret
cmc
rol
arpl
cld
jnp
mov
gs
in
or
aam
and
je
ret
es
andl
inc
mov
mov
dec
mov
stc
push
sbb
out
add
dec
adcb
push
sub
ret
addl
aam
dec
orl
ror
adc
loopne
mov
stos
mov
in
test
dec
sub
les
sub
mov
xchg
cmpsb
xor
arpl
fidivl
repz
aas
movsl
mov
sti
stos
jne
cmpsb
gs
leave
sub
pusha
cmpsl
xchg
xor
xchg
add
push
mov
iret
xchg
lea
test
xor
out
das
mov
xchg
jecxz
sub
and
pop
and
decb
xchg
jmp
out
mov
scas
push
push
sub
sub
push
sahf
sbbl
dec
sub
imul
xor
out
or
inc
lret
sub
jae
or
repz
push
fs
pop
das
push
es
xchg
mov
push
inc
or
jo
push
push
cmc
imul
or
pop
mov
sbb
repnz
jl
adc
test
adc
sbb
out
mov
jecxz
and
call
repz
jp
dec
push
cli
dec
or
or
arpl
scas
mov
pop
cmp
cli
ret
or
notl
adc
fwait
leave
cmp
jnp
shl
mov
cmp
jp
adc
pop
aad
pop
push
xchg
sbb
sub
cmp
push
hlt
pop
es
lds
loopne
sub
mov
adc
inc
pop
fcom
xor
repz
jmp
sub
filds
incl
fs
in
lds
sbb
sbb
cmp
inc
sti
test
inc
icebp
xor
lcall
xor
and
lret
test
pop
shll
in
lea
pop
fcmovne
add
and
mov
mov
shr
xchg
std
mov
or
inc
push
cli
jbe
enter
ret
dec
push
dec
aaa
mov
push
jb
nop
mov
jnp
inc
push
push
push
sub
das
std
mov
scas
sub
or
testb
pop
stc
inc
ficoms
lds
pop
jnp
scas
fdivrp
cmp
inc
mov
mov
pop
addr16
cmp
call
nop
mov
sbb
sub
arpl
rcr
adc
mov
ffree
mov
int3
scas
cmpb
insb
shr
lahf
mov
fistps
loopne
or
loopne
dec
adc
jecxz
sbb
push
push
cli
mov
xor
mov
lahf
addr16
ljmp
adcb
or
popa
std
mov
jne
mov
ss
adc
cmp
imul
xor
jge
pusha
xchg
push
inc
cmpsl
inc
mov
imul
adc
or
pop
mov
inc
je
push
mov
lock
cwtl
jg
sbb
cltd
sub
lea
stc
add
cmpsl
frstor
repz
in
inc
std
out
or
xlat
pop
xlat
shrl
cmp
cmp
jmp
xor
repnz
jg
not
call
insl
lret
or
daa
mov
int3
mov
out
jmp
add
sub
push
add
push
sbb
mov
into
dec
push
inc
into
xchg
lock
pop
lock
inc
int
mov
hlt
inc
jmp
pop
mov
cmpsb
and
out
mov
int
mov
ret
andb
mov
push
jo
ljmp
mov
das
out
pop
lret
xchg
sbb
pop
dec
mov
pop
sbb
inc
adc
push
jp
je
out
sbb
movsl
push
mov
push
and
sub
ljmp
adc
icebp
and
cmc
cmpsl
inc
inc
pop
pop
loope
push
sub
or
out
sub
lea
mov
add
sub
mov
adc
std
lods
inc
mov
xor
mov
insb
and
jnp
pop
popa
add
rclb
fisubl
dec
push
add
aas
adc
fbld
dec
sbb
mov
dec
cld
push
xchg
jnp
sti
inc
popa
jp
push
rol
sub
xchg
xchg
inc
push
mov
shr
or
jp,pt
push
fs
fidivrs
inc
add
stc
fwait
and
dec
mov
mov
xor
cmp
aas
loope
mov
jg
pop
jmp
xorb
mov
push
stos
das
jp
shrl
push
mov
stc
mov
cs
into
les
add
fcoml
push
push
test
arpl
sub
mov
call
mov
call
inc
inc
icebp
int3
call
cmp
push
pusha
adc
jae
shlb
call
pop
int
jo
xor
stos
lods
fildll
xor
lret
scas
enter
mov
push
mov
test
lret
daa
jecxz
inc
xchg
cli
fildll
adc
les
push
out
push
jns
mov
cltd
adc
push
in
shrl
cmp
adc
lcall
rcll
adc
and
loopne
test
dec
mov
clc
fimull
jle
sbb
dec
sbb
jp
shr
mov
cli
stos
pop
cmc
outsb
or
push
push
or
or
adc
rcll
shl
int
jle
sahf
dec
mov
adc
fs
sti
mov
pushl
imul
rorb
arpl
shl
cmpsl
div
pop
sub
jg
in
gs
sbb
vpsrad
dec
jge
xchg
lahf
jbe
xor
jmp
pusha
movl
mov
js
dec
and
int3
mov
in
or
pushf
mov
inc
cli
cltd
mov
and
dec
stos
or
outsb
xor
ss
test
divl
push
insl
dec
hlt
push
cmp
mov
xchg
dec
mov
push
in
xchg
call
mov
cmp
xor
dec
std
mov
pushf
push
jle
lcall
std
test
cmp
jg
and
es
xchg
xchg
mov
scas
pop
fs
push
and
lret
mov
int3
pop
sub
scas
loope
xchg
push
cmp
mov
cmp
sbb
adc
jo
ds
sbb
adc
xchg
ret
out
mov
pop
fadd
xchg
ljmp
xchg
cmp
repz
push
xor
daa
xchg
jl
ret
jne
adc
dec
unpcklps
jae
xor
lea
xchg
sub
nop
dec
cmp
sarl
dec
push
jmp
iret
ret
pop
fwait
pop
outsb
sbb
js
jo
idivl
dec
mov
xor
jbe
sub
jl
mov
bound
lret
fists
sbb
push
xor
rorb
enter
rol
leave
int
out
cmp
ljmp
xchg
daa
sbb
cmp
push
clc
jns
cld
dec
sub
out
and
jbe
sbb
xor
cmp
dec
icebp
scas
loopne
fprem1
xor
loopne
cmpsb
test
dec
out
push
out
rcrl
arpl
enter
xor
pop
sbb
dec
or
sbb
dec
int
pop
nop
ffree
dec
adc
fimuls
pop
cmc
fmul
add
ror
outsb
cld
lock
cwtl
jb
inc
push
lret
cmp
or
or
inc
cmp
pop
bound
push
fwait
jb
mov
aad
sbb
test
loope
fstpl
mov
out
add
push
out
and
sarl
subb
sahf
test
in
mov
jnp
xor
icebp
call
movsl
je
jb
pusha
push
lret
fs
in
cmpb
cmpsb
test
out
inc
add
iret
arpl
mov
sbb
xor
dec
push
cmc
cld
mov
dec
mov
stc
cs
out
jns
test
dec
dec
insb
or
dec
popf
inc
in
fsubs
add
cli
repz
add
inc
cs
imul
cmp
out
mov
lods
push
inc
inc
out
mov
xor
cld
and
cmp
pop
add
fcmovbe
stc
insb
mov
dec
pop
loop
or
xor
mov
dec
push
lds
add
jb
jmp
movsb
cli
xchg
bound
icebp
or
cmpsb
push
aad
test
je
sbb
dec
push
pop
cwtl
or
cmc
lods
cli
insl
pop
js
inc
mov
sbbb
push
lock
call
add
cmpsb
or
scas
or
cmp
pop
inc
in
sub
popl
xlat
xchg
xchg
test
jmp
pop
ja
cwtl
xchg
lahf
pop
outsb
lea
jnp
fidivs
nop
adc
imul
jo
ljmp
push
adc
or
push
cmp
popa
or
cld
fs
rcr
push
mov
xor
push
xorb
jne
pop
in
arpl
pop
inc
mov
test
sahf
fucomip
pop
mov
jne
sbb
cltd
jg
push
adc
or
loop
pop
jb
clc
add
mov
mov
jbe
dec
fcoms
add
sbb
mov
jp
sub
sub
pop
xchg
mov
aas
inc
mov
and
mov
cmp
lahf
lret
mov
fxch
sbb
dec
sti
cli
mov
sbb
ret
push
push
add
dec
mov
insb
xor
push
or
add
add
and
lahf
xchg
lcall
mov
inc
xchg
fiadds
and
orb
mov
aad
aas
addl
push
out
imul
push
xor
outsb
aam
daa
push
sbb
int
in
icebp
inc
cmp
repz
lahf
fildll
mov
jmp
dec
jne
pop
adc
push
cwtl
sub
pusha
inc
fcomps
and
dec
jnp
shlb
in
daa
push
push
icebp
mov
enter
andb
enter
pop
int
and
sub
push
mov
cmp
pop
mov
mov
fs
jae
push
fs
pop
inc
lds
dec
movsb
dec
dec
es
test
fnstcw
test
sub
lock
push
daa
dec
lcall
cli
gs
les
jo
dec
cmp
push
push
dec
scas
lods
lcall
cld
dec
push
je
jnp
shrl
cmpsl
rorb
mov
pushf
dec
mov
sub
repnz
push
repz
jecxz
inc
xor
les
sbbb
cmp
xor
loop
inc
push
mov
js
cli
dec
mov
xchg
sub
add
adc
daa
dec
ret
cmp
pop
or
xchg
rcrl
and
xchg
gs
mov
dec
mov
mov
jne
xchg
or
jb
iret
sahf
cmpsb
and
cmp
sbb
dec
and
les
mov
cmp
push
popa
fnsave
mov
push
jo
and
mov
das
insb
jnp
xchg
in
pop
out
xchg
and
mov
popf
pop
lods
mov
aad
push
pop
jb
insl
std
push
pusha
nop
mov
lahf
fmuls
ja
arpl
push
arpl
mov
jge
cmp
roll
repz
addr16
bndstx
xlat
sbb
sahf
frstor
adc
fmul
subb
adc
sub
add
jno
adc
pop
cld
imul
dec
jbe
arpl
push
sub
xlat
imul
hlt
rcll
push
mov
mov
jecxz
cwtl
es
cmc
push
jmp
xchg
loope
fistps
xchg
pushf
xchg
jae
out
fsubs
repnz
pop
data16
pop
and
ror
cmp
je
popa
xor
test
mov
shlb
or
pop
loop
dec
cmpsl
push
mov
jno
leave
leave
daa
pushf
lcall
xchg
cmp
pop
jmp
test
loopne
cmpsb
aaa
subl
cs
sbb
push
iret
or
dec
add
push
hlt
std
orb
cmpsb
mov
xor
dec
sbb
cld
and
in
arpl
out
cmp
or
loope
xchg
cltd
pop
shrl
test
sub
addl
dec
pop
sub
mov
mov
push
sbb
int
push
pushf
insb
int
jb
push
mov
fwait
xchg
popa
push
out
ret
xlat
jno
mov
mov
popa
push
inc
mov
sbb
or
and
scas
xchg
pushf
mov
inc
sub
ds
xchg
mov
add
or
inc
pop
mov
movsl
xchg
jo
stos
adc
rcl
rorb
mov
cli
push
push
push
popa
popa
das
lahf
cmp
adc
inc
std
addl
pop
into
fisubl
mov
cmp
jo
aas
test
js
xor
arpl
addr16
inc
or
out
leave
cmc
push
test
ds
and
pop
mov
push
jge
cwtl
mov
xor
mov
sbb
and
cmp
lock
mov
dec
or
and
int
inc
mov
cltd
sub
pushf
nop
out
sahf
jo
mov
arpl
cmpsl
arpl
popf
neg
sti
scas
testb
pop
add
and
xchg
cmp
mov
mov
popa
xchg
mov
stc
or
xor
aam
fnstenv
inc
mov
mov
jge
push
mov
mov
push
in
pop
or
lods
std
adc
jo
lret
jl
in
stc
or
push
push
cli
movsb
daa
sub
xor
jl
mov
sbb
sub
movsb
pop
sub
dec
sub
mov
pop
daa
jo
and
push
cmpsb
or
andnps
push
pusha
add
add
vmwrite
jns
jge
xlat
fnstsw
dec
cmp
fs
sti
and
loope
mov
sub
stc
sahf
mov
mov
push
je
mov
xchg
sbbb
loop
pop
aaa
jne
xor
and
movsb
dec
jmp
xor
mov
push
inc
push
push
repz
jmp
fwait
mov
sub
mov
aad
push
negl
std
fstpl
psubb
out
mov
emms
xor
jne
add
pop
arpl
cmp
cmp
sbb
scas
out
or
jp
push
mov
push
xor
sbb
fisubrl
pop
sub
int
shlb
jns
jecxz
xchg
pushf
push
push
mov
xor
mov
outsl
mov
fdiv
leave
js
movsl
roll
loopne
mov
mov
xchg
stos
xchg
scas
or
mov
movsb
push
adc
jg
jmp
push
mov
in
sub
or
adc
cmp
addr16
fiaddl
push
rcl
lcall
fcmovb
xchg
pop
insl
xchg
inc
js
push
cli
xor
xor
pop
mov
js
stc
and
xchg
dec
xchg
or
pop
les
leave
movsb
dec
adc
das
scas
mov
stos
arpl
ss
dec
or
xor
mov
into
inc
mov
jecxz
scas
fidivrl
jp
lods
push
pushl
add
cmp
int3
jecxz
bound
mov
sbb
rcl
lock
ret
or
mov
into
mov
mov
pop
sub
movlps
cltd
cmpsb
pusha
or
cmpsl
and
fbstp
mov
add
dec
mov
outsl
punpckhwd
outsb
inc
xchg
push
adc
mov
dec
test
inc
rorb
les
mov
mov
inc
test
pop
add
aaa
enter
jl
jle
insl
jo
cmp
int
pop
and
mov
jbe
jns
push
inc
sbbl
aaa
push
sbb
mov
insl
push
iret
rorb
pop
jle
rep
adc
rcr
ljmp
les
pop
enter
dec
inc
std
xchg
les
leave
mov
pop
inc
popf
xchg
mov
push
cld
popf
fdiv
les
lds
stos
loopne
repz
iret
in
mulb
sbb
mov
scas
movsb
dec
xor
xchg
hlt
sbbb
or
cmpsb
xor
cmpl
aam
incl
mov
cli
mov
add
shr
pop
hlt
cmp
xor
mov
and
rolb
ret
inc
aad
add
and
pop
movl
insb
sbb
fdivrs
nop
jno
ss
pusha
pop
jbe
dec
inc
sbb
or
fdivl
daa
push
jb
cli
stc
mov
xchg
test
xchg
sbb
ror
cld
lret
mov
fsubrl
xchg
add
or
or
jo
or
cmc
xchg
push
fld
lods
add
and
push
adc
lea
dec
xchg
stos
sbb
cmpl
inc
pop
lods
clc
addr16
fxch
fiadds
adc
mov
mov
or
mov
mov
xchg
je
xchg
mov
pop
xchg
dec
ficomps
or
jge
out
loop
cs
js
mov
in
xchg
push
gs
mov
fnsave
push
movsl
or
fs
rolb
ret
add
fs
adc
xchg
dec
cltd
fsubr
pop
pop
loopne
aas
sbb
xchg
out
test
inc
loope
xchg
fucomp
shr
in
loop
icebp
fwait
jge
mov
xlat
rcr
inc
dec
dec
jecxz
mov
pop
mov
in
mov
fstpt
xlat
enter
nop
mov
lcall
dec
lods
mov
sub
cwtl
pop
gs
mov
pop
inc
mov
dec
aaa
cmc
jmp
in
jnp
call
mov
sbb
push
inc
cmp
adc
xchg
sub
loope
add
push
jne
xor
sub
inc
je
popa
and
mov
mov
out
cs
mov
clc
popf
js
push
mov
jge
fs
inc
out
sbb
scas
std
dec
adc
mov
mov
or
pop
jmp
stc
stc
rorb
add
rol
cmc
and
cs
push
inc
sub
rcrl
push
add
dec
pop
hlt
addr16
cmp
rolb
arpl
push
mov
jo
push
filds
arpl
sahf
les
or
aaa
cmpsl
call
lcall
ds
lret
sbb
lods
enter
cld
or
imul
sbb
jle
dec
out
lret
mov
sarl
ljmp
adc
pop
insb
dec
aas
adc
xor
aas
add
stc
pop
cwtl
bnd
sbb
add
mov
xor
inc
ja
push
test
adc
ja
jmp
jmp
fsubl
movsl
and
call
arpl
and
mov
lea
sbb
sahf
in
std
xor
jle
jle
setb
mov
gs
loopne
add
aaa
pop
aaa
add
test
mov
sbb
add
je
mov
into
sub
cld
inc
push
xchg
and
push
insl
aad
mov
shrb
in
std
fs
in
mov
clc
shlb
push
and
pop
fs
or
sti
dec
mov
lock
dec
lret
dec
out
pusha
dec
cmpsl
movl
decl
cltd
push
into
sahf
adc
test
mov
nop
sub
int3
icebp
jecxz
out
inc
pop
clc
cmp
stos
jae
and
addr16
cltd
es
mov
mov
popa
jg
jle
sbb
lds
push
pop
mov
lret
sub
cmp
pushf
mov
rclb
loope
mov
mov
adc
mov
add
mov
jecxz
or
cli
and
stos
sub
dec
xchg
lea
and
sub
ret
clc
dec
push
and
sarl
rol
mov
mov
jbe
xor
sbb
lods
mov
lahf
inc
loopne
push
inc
mov
dec
jl
xchg
push
xchg
mov
dec
adc
inc
cmpl
push
mov
int3
fidivl
repz
mov
aaa
lret
xchg
fdivrl
mov
push
dec
pop
jnp
iret
loopne
xchg
pop
jnp
arpl
add
mov
fistl
mov
push
test
insl
iret
xor
inc
jg
sbb
add
dec
js
xchg
sbbb
add
sub
mov
cs
sub
jmp
roll
mov
nop
cmp
pop
jb
aas
mov
aad
das
adc
mov
lcall
incl
xchg
stc
pop
xchg
gs
sub
cmp
jne
mov
stos
movsb
andl
addl
dec
out
ljmp
push
jnp
mov
shrb
stos
jle
xor
and
jg
test
mov
je
stos
mov
outsl
aad
mov
mov
fcomi
sub
sbb
dec
jge
sahf
sbb
int3
cmp
mov
int3
mov
fwait
ret
pop
por
cmp
push
mov
repz
pop
leave
mov
lods
mov
sub
outsb
push
cltd
fsts
dec
cmc
jae
xchg
dec
stos
xchg
lock
add
mov
pop
dec
cmp
lods
negb
sub
insb
xor
mov
data16
hlt
sbb
cmpb
stos
or
movsb
lock
repz
fisubrl
fimuls
std
test
mov
dec
adc
pop
lods
ss
jns
sbb
push
dec
sbb
dec
inc
paddusw
out
sbb
xchg
insl
cmp
mov
lret
jnp
cmp
es
hlt
cmpsb
ror
int3
lcall
add
push
cmp
dec
adc
mov
adc
add
inc
sti
and
inc
lcall
pop
add
std
inc
cmpsl
loope
adc
test
pop
jnp
sub
std
push
rcl
jo
subl
mov
pop
jge
cmp
mov
cmpsb
rcrl
dec
sub
nop
or
fstl
aas
out
push
out
hlt
cmp
sbb
fcomps
in
popf
stc
daa
nop
hlt
out
pop
fucomp
jnp
test
jns
cmp
xchg
addr16
lods
lahf
mov
xlat
sub
cmp
fs
fsub
aaa
pop
xchg
sub
test
dec
in
test
xor
push
sub
jnp
ret
cmp
loop
cmp
mov
loope
lock
iret
xchg
daa
jg
and
clc
push
jmp
cmp
xlat
lcall
popa
outsl
imul
push
sbb
fwait
adc
int
pop
cs
divb
xor
fisubrs
add
xor
jle
fistpll
or
add
lret
cli
jbe
out
xor
fcmovu
pushf
lds
icebp
or
pushf
pop
pop
pop
mov
jo
lahf
sub
iret
mov
out
or
in
xor
xlat
ret
adc
test
or
mov
add
pop
sbb
lods
cmpsl
aad
cmp
dec
dec
loop
outsl
out
sub
mov
in
xlat
lahf
ds
mov
push
xchg
lds
out
pop
stos
xchg
scas
inc
js
adc
xlat
adc
shrb
loope
add
adc
sbb
xor
cmc
cwtl
outsl
in
enter
push
pop
dec
iret
xchg
das
les
jl
ja
push
sub
mov
jge
inc
and
or
lods
cmp
mov
mov
js
int3
mov
hlt
jns
inc
aam
arpl
test
mov
sub
movsb
fldenv
jecxz
insb
xchg
dec
xchg
or
inc
xchg
jb
sahf
test
lock
fs
dec
in
cmpsb
jecxz
mov
loop
test
pop
sbb
arpl
xchg
popa
stc
sbb
dec
mov
push
adc
sahf
dec
mov
fcomps
mov
jno
test
xchg
lret
lcall
jg
lds
adc
cmp
enter
sub
cmpsl
loopne
loope
sarl
xchg
xchg
mov
fisubrl
daa
push
or
mov
in
arpl
inc
dec
fsubrs
cli
ljmp
fs
dec
idivl
jecxz
or
in
andb
xor
leave
inc
fistpll
mov
pop
loopne
and
loopne
incb
adc
in
jecxz
int
and
cltd
cld
push
xor
das
mov
sub
mov
es
inc
cmpsl
xor
sub
ret
push
pop
inc
and
or
insl
icebp
pop
test
movsb
loope
sbb
adc
bound
mov
and
out
and
add
sub
clc
mov
mov
sub
jns
xlat
test
test
sbb
xchg
pusha
leave
adc
add
cltd
pop
int
xor
mov
push
idivb
int3
pushl
push
fdivp
rcrb
mov
sub
js
jne
fbstp
ljmp
push
xchg
inc
insb
mov
into
loop
pop
pop
or
and
rolb
insb
lock
add
push
outsb
cld
push
divb
fimuls
out
jg
mov
or
dec
test
adc
cs
jmp
jne
sbb
add
mov
pushf
inc
cltd
lds
sub
mov
push
js
cli
fmull
xchg
mov
js
pusha
cmp
sarl
mov
push
shlb
adc
add
xchg
stos
popf
mov
xchg
fmull
in
xorl
insl
pop
mov
ljmp
idivl
push
adc
movsl
sbb
mov
arpl
pop
gs
lock
pop
fmulp
push
je
popa
loop
cmp
cwtl
inc
bound
je
in
inc
fwait
shll
mov
movsl
jmp
fmull
xor
sbb
or
inc
pop
or
xor
lea
adc
mov
jno
aaa
movb
xchg
jp
fimull
lds
push
mov
push
scas
push
outsl
xchg
call
mov
rorb
adc
and
ljmp
in
lahf
fwait
stos
sbb
loopne
sbb
adc
inc
cmpsl
push
dec
add
jle
popa
je
and
mov
cwtl
xchg
xor
out
fidivrl
jae
std
xor
mov
mov
or
loope
inc
cld
ret
cmp
je
fs
mov
movsl
mov
lret
add
mov
es
ret
lea
adc
mov
in
lahf
adc
mov
outsl
mov
insb
shl
mov
loopne
and
jo
push
mov
adc
jle
sub
mov
push
ret
adc
xchg
out
jb
dec
add
mov
dec
jne
test
xchg
dec
sbb
and
cli
jmp
xchg
sahf
rolb
push
sbb
lret
gs
aaa
insl
aas
pop
rcrl
dec
in
hlt
movsl
aad
std
sub
adc
and
mov
xchg
pop
lret
jecxz
bound
mov
movsl
call
sbb
ret
out
cmp
fiaddl
cmp
ds
popf
cmp
mov
nop
stos
addr16
xchg
int3
pusha
rorl
lret
sub
test
or
hlt
std
lcall
jmp
inc
lds
cmp
jo
adc
jo
jae
xchg
or
ds
xchg
or
push
out
adc
adc
mov
pop
push
mov
mov
push
mov
scas
test
adc
mov
lea
popa
sar
inc
outsl
shlb
mov
ja
movsb
inc
popa
loopne
push
push
pop
and
fsubl
je
mov
mov
push
mov
ds
mov
pop
xchg
pop
outsb
aam
outsl
add
loop
out
out
sti
stos
jnp
test
mov
cwtl
out
nop
push
mov
je
mov
inc
int3
fidivrs
adc
lds
cli
jge
xchg
xlat
jns
xlat
mov
shll
push
or
mov
addr16
push
xlat
mov
dec
inc
sbb
xor
xchg
adc
imul
push
in
mov
xor
sub
xchg
leave
mov
dec
jno
pop
push
dec
pop
cli
dec
ljmp
ds
sbb
ja
push
cmp
insl
push
repnz
dec
dec
jo
js
addb
out
xchg
mov
pop
mov
or
push
xchg
push
mov
mov
inc
loope
xchg
cmpsl
pop
loopne
mov
mov
xchg
fwait
ret
lahf
ja
pop
gs
xchg
mov
inc
div
xchg
shl
adc
jb
aas
dec
jecxz
jle
jb
xor
mov
scas
xor
int3
sahf
sub
adc
fimuls
hlt
movsb
push
lcall
arpl
je
aas
mov
xchg
imul
ljmp
xchg
das
sub
cmp
xchg
inc
push
pusha
adc
out
shll
popf
out
push
outsb
gs
inc
lcall
imul
jecxz
lret
jmp
iret
cld
xor
jb
jbe
outsl
cld
jl
testb
inc
add
mov
mov
sbb
fadds
aad
mov
mov
push
fiaddl
mov
mov
icebp
push
pop
dec
inc
notb
adc
jbe
sarb
ljmp
mov
movsb
jg
fs
xor
leave
enter
push
xchg
imul
jge
mov
dec
repnz
out
add
mov
shll
lea
lock
nop
ja
in
cmp
sub
fidivrs
jb
adc
fs
dec
sbb
mov
adcb
mov
repz
in
sbb
lea
shrl
dec
xchg
cmc
loope
testb
inc
push
mov
negb
push
xchg
mov
rol
push
push
jg
pushf
dec
jg
adc
adc
mov
ljmp
or
je
jmp
mov
xor
sti
fwait
xor
mov
repnz
loopne
pop
pop
mov
lods
js
es
mov
aaa
insl
or
sub
xlat
imul
cld
mov
xchg
icebp
stos
sub
xor
jg
sub
push
popf
jecxz
and
fwait
cmc
mov
or
add
movsb
xchg
xor
popa
lahf
xchg
jae
nop
cmp
and
dec
sub
jle
subl
fnstcw
lods
stos
mov
push
xor
pop
les
movsl
lods
mov
loop
add
test
mov
xchg
stos
jnp
hlt
loop
mov
icebp
mov
inc
stos
into
or
mov
out
add
add
push
xor
pop
imull
mov
or
add
push
fldl2e
sub
cltd
mov
stos
lcall
dec
push
out
jnp
dec
les
add
sub
mov
clc
lock
adc
push
les
xchg
mov
imul
jb
and
sahf
in
push
inc
mov
popf
aaa
sbb
jne
add
loopne
or
sbb
jecxz
pop
push
push
dec
ja
mov
mov
mov
out
push
push
add
aad
shr
lock
vpcmpgtb
jbe
sti
xchg
cmp
mov
pop
pop
js
fdivs
lret
call
jae
push
test
add
mov
push
leave
std
xor
jl
cmp
sub
mov
add
icebp
jp
into
or
in
hlt
jmp
mov
fldt
cmp
or
cs
add
nop
sti
xchg
das
in
imul
ret
stc
cmp
and
aad
cmc
cmp
cmpsl
cltd
fidivs
pop
xchg
xchg
in
les
arpl
push
fistl
outsb
inc
lcallw
scas
ret
shrb
in
enter
cmpsb
arpl
mov
ds
or
push
mov
js
sbb
sbb
mov
roll
jecxz
mov
or
icebp
and
scas
add
pushfw
test
ja
fisttpll
leave
xor
pop
jg
sbbb
jl
les
cmpsl
cmp
adc
adc
test
js
push
mov
pop
test
inc
fisttps
xor
and
xchg
outsl
jmp
addl
shrl
pushf
sbb
stos
push
scas
or
cmpsb
xor
lods
sti
call
into
daa
cld
imul
sbb
push
xchg
in
int
arpl
lret
sub
jae
je
dec
cld
push
xchg
aas
or
cli
cmpl
test
test
pop
repnz
jmp
data16
lea
ficomps
mov
repnz
stos
cmpb
push
mov
sub
xor
popa
mov
pop
pusha
add
shrb
scas
xchg
jns
ret
xchg
sub
pop
mov
dec
aad
data16
adc
adc
pop
and
cli
fwait
adc
in
lods
shll
pop
jmp
sahf
es
mov
cmp
cmp
pushf
cmc
mov
sub
xor
xor
test
fwait
mov
les
outsl
out
add
fs
fnsave
out
xor
insl
xorb
adc
jp
or
or
or
outsl
into
rorl
ds
dec
mov
bound
and
jb
mov
pop
das
pop
negb
stos
or
imul
pop
loopne
mov
cli
lods
loope
insb
pop
pop
fdivs
pop
movsl
out
add
xor
aas
in
sub
clc
int
push
cmp
addb
push
lahf
enter
jae
inc
or
imul
cmp
inc
jbe
sbb
testb
jo
inc
xorl
push
xlat
fsubs
fmull
fdivrs
pushf
shl
mov
or
push
movsb
ja
call
jbe
fistps
cmpsl
je
lods
cmp
cmp
cld
xchg
pop
ret
ja
fdiv
jp
jnp
push
pop
xor
arpl
sti
pop
and
and
sarl
sahf
nop
mov
sbb
mov
clc
inc
and
inc
aad
fimull
addr16
outsl
lret
and
push
cld
and
or
jecxz
lods
fisttps
sub
cli
cmc
pop
jl
push
dec
das
movsb
out
mov
ret
jae
xchg
into
xlat
push
orl
jmp
mov
sub
fdiv
dec
out
cltd
sbb
popf
fsubrs
fs
inc
sbb
cmp
push
push
js
fildl
imul
std
mov
loop
ret
dec
iret
dec
clc
popa
inc
enter
xchg
mov
mov
push
aam
fistps
hlt
sarb
int
jle
outsb
sbb
dec
iret
pop
or
dec
cmpsb
pop
pusha
out
mov
add
pop
aad
mov
shr
outsb
inc
out
into
out
lods
in
sbb
inc
fcmovne
into
arpl
stos
or
das
mov
insb
ja
adcl
mov
rclb
inc
sbb
xchg
data16
jno
int
xor
and
aam
mov
sbb
into
mov
movsl
adc
pop
imul
loop
test
es
mov
add
jge
inc
ljmp
sub
fs
mov
adc
iret
ret
pop
je
stc
sbb
test
out
nop
mov
push
outsb
sbb
inc
inc
shll
je
lods
rclb
stos
push
and
sar
ret
mov
lret
sbb
mov
jmp
and
scas
pop
mov
xchg
mov
adc
push
push
sbb
adc
pushf
into
xchg
test
mov
and
insb
out
js
iret
push
dec
and
xchg
mov
mov
adc
adc
iret
xlat
sahf
ret
add
ret
fnstenv
adc
enter
xor
shl
aaa
fldenv
pushf
pop
cmp
les
sbb
sub
ljmp
rorl
sub
sub
cmp
stos
sbb
cmp
arpl
xor
into
out
jmp
dec
sbbl
js
and
bound
push
nop
cmpsl
lahf
xorl
inc
enter
ljmp
adcb
mov
int3
pop
decb
sbb
pop
ljmp
inc
ds
test
mov
cld
fcmovne
sub
xlat
push
inc
aad
pop
fimuls
mov
push
jg
leave
imulb
pop
sbb
mov
pushf
pusha
sub
sbb
cltd
mov
aam
iret
cmc
jge
sti
in
stos
xchg
pop
testb
xchg
cld
ror
lret
fsts
cmp
xlat
push
sbb
inc
jmp
js
jmp
mov
sbb
loope
pop
push
add
arpl
ljmp
or
pop
sbb
cmp
or
fdivrs
push
mov
mov
mov
and
pusha
out
scas
sti
adc
and
das
pop
out
dec
jno,pt
pop
rorb
jmp
es
pop
jle
mov
fidivrl
test
mov
xchg
cmp
jge
in
xor
xor
add
mov
mov
inc
and
jno
push
cmp
adc
int
ja
lock
out
and
add
call
pop
std
test
aas
cmp
cmpsb
lret
lds
xchg
ja
xchg
addb
and
or
fstl
out
push
adc
mov
icebp
mov
inc
xchg
dec
jb
test
movsb
inc
or
fisubrl
pop
and
jg
lds
outsb
mov
mov
mov
cmpsl
aas
lea
xor
sbb
and
test
mov
mov
cmp
pop
test
sbbl
lods
adc
xchg
imul
jmp
fsts
fsubrl
or
test
or
sbb
inc
lea
lods
mov
call
pop
out
lds
sbb
cli
pop
mov
dec
sti
rcr
cli
mov
mov
xor
das
mov
jae
ret
ds
mov
inc
ss
sbb
scas
enter
or
adc
adc
loope
iret
mov
inc
inc
in
mov
xor
pop
push
loop
shrl
or
es
mov
stos
sbb
dec
sub
movsl
out
cmpsl
xchg
jecxz
fdivs
push
stos
cltd
das
pop
inc
inc
mov
push
pop
xlat
out
pop
adc
lods
stos
in
mov
arpl
shl
out
adc
imul
mov
lret
arpl
lahf
movsb
push
ss
loopne
mov
push
inc
fidivl
arpl
push
jne
imul
das
mov
and
jecxz
in
popf
in
xchg
mov
fsubrs
bound
xchg
iret
sub
or
pop
stc
aaa
xor
lahf
mov
fsubs
inc
fwait
xchg
shll
xchg
ja
inc
adc
add
dec
adc
sti
outsb
mov
sahf
mov
test
adc
cmpsl
cmpsl
aas
int3
repz
cli
clc
cmp
movsb
lahf
dec
test
dec
lock
loopne
lock
rorb
imul
sarb
inc
sbb
and
ja
nop
cmp
cwtl
inc
outsl
xchg
sahf
adc
loop
cmpsb
xor
jnp
mov
std
xor
mov
inc
jae
ljmp
add
mov
pop
mov
imul
jnp
repnz
mov
add
call
ljmp
xor
fsubrs
icebp
sbb
and
xor
mov
push
mov
or
xchg
daa
jne
xor
inc
xchg
fldt
sub
lea
enter
addr16
adc
nop
jno
mov
icebp
imul
outsl
mov
sub
cmc
icebp
out
insl
cmp
push
xchg
push
jge
stos
mov
cwtl
add
or
sub
lods
out
rorb
push
and
jb
sbb
mov
outsl
adc
adc
pop
and
inc
cmp
andb
insl
rcrl
pop
mov
negb
pop
test
jge
push
lods
int3
mov
jmp
out
je
out
inc
rorl
sahf
fsubrs
in
pop
shlb
movsl
jle
xor
iret
dec
lods
je
dec
popf
mov
iret
and
mov
cmpsb
and
pop
push
aaa
pop
dec
push
sbb
sbb
ret
popa
xor
fcomip
lret
add
xor
ljmp
hlt
les
and
mov
and
enter
push
mov
in
hlt
aad
in
cmp
and
lods
push
sub
addr16
mov
push
inc
xchg
push
aas
dec
inc
xchg
lds
jle
lahf
les
mov
cmp
lahf
stos
pop
fidivrs
addl
cltd
out
mov
mov
xor
jae
test
pop
ret
adc
jmp
clc
gs
push
pop
adc
rol
lahf
and
js
movsl
sbb
dec
daa
cld
mov
pop
xchg
orb
inc
and
push
rorb
xchg
outsl
das
mov
out
jle
adc
jmp
test
outsl
jle
push
dec
js
push
mov
loop
mov
inc
jno
out
lds
int
jae
jp
hlt
stos
dec
sbb
ret
outsl
rcll
or
mov
adc
and
xchg
addr16
add
inc
popa
push
jbe
add
push
aad
push
inc
hlt
adc
pop
add
out
ret
cli
inc
xor
roll
push
adc
stos
cmp
out
inc
adc
and
mov
xchg
test
cmp
lahf
xor
push
fstps
dec
pop
nop
sub
jno
xchg
test
xchg
or
adc
je
scas
jb
mov
xchg
or
sbb
push
jg
jbe
xor
lock
ljmp
adc
push
add
jge
and
test
rcll
xchg
jmp
outsb
lahf
mov
and
xchg
jp
inc
in
sti
jb
pop
in
dec
repnz
aad
mov
add
jmp
xor
mov
lods
xorb
add
mov
jle
push
insb
test
rorb
mov
adc
int3
push
fmuls
addr16
shll
add
sbb
clc
das
adc
pushf
nop
xchg
add
fisttps
vmwrite
lods
lret
jecxz
dec
add
mov
testl
test
mov
repz
jl
push
inc
pusha
mov
enter
scas
inc
pop
shl
push
fcmovne
mov
jl
repz
xchg
faddp
mov
cmpsl
test
adc
shrb
jbe
mov
das
fistps
lods
jge
mov
cmpsb
loopne
dec
push
scas
dec
ret
add
jecxz
test
and
mov
xor
bound
xchg
outsb
ljmp
test
and
ljmp
push
dec
bnd
dec
pop
enter
fwait
es
mov
mov
stos
daa
aam
and
jge
out
inc
je
push
dec
xor
mov
inc
bound
and
jae
fwait
mov
cmp
jo
int
stos
sbb
ret
or
pop
mov
pushf
sub
insb
lret
add
fucomp
jns
add
popa
and
pop
fadd
jns
push
mov
xchg
iret
cmpsb
jne
inc
cmp
push
push
cs
pop
das
ret
jge
or
cltd
dec
jnp
sub
mov
ds
in
sti
pusha
test
das
dec
push
repnz
ret
scas
or
mov
js
pushf
cwtl
and
or
out
inc
mov
sbb
data16
repz
jbe
and
push
push
mov
inc
ljmp
std
sub
pop
jo
jne
call
mov
cld
pop
jg
add
push
nop
js
mov
popf
xor
and
jne
repnz
xchg
cmp
pop
out
cmp
nop
mov
das
test
incl
mov
rorb
jo
sahf
out
aam
daa
in
jns
and
and
sub
in
cli
out
jae
outsb
jecxz
dec
mov
les
cmp
jmp
icebp
adc
lock
mov
out
call
cmp
rorl
lds
push
fiaddl
mov
fwait
mov
and
mov
xor
in
nop
fstpl
pop
push
testl
test
dec
xchg
pop
xor
xchg
pop
and
and
icebp
pop
cmpsl
push
cmp
adc
int3
jb
lods
insl
jns
cld
add
dec
xor
and
mov
popf
xor
inc
cs
or
sbb
stos
push
pop
or
cwtl
out
rclb
xchg
adc
sti
push
std
out
inc
mov
xor
in
fildll
outsb
iret
repnz
adc
cltd
xor
inc
and
pop
jl
inc
dec
cmc
aaa
sbb
jge
aaa
pop
xchg
inc
jg
dec
ficoms
pop
lds
test
push
sbbl
mov
gs
and
push
push
js
xchg
daa
inc
ss
out
cmp
jne
cmpsl
jp
push
sbb
mov
mov
mov
outsb
ret
push
in
mov
adc
dec
ljmp
fcmovne
andl
jle
add
mov
add
xor
stos
lock
lret
jno
cmp
jmp
and
aad
pop
mov
das
cltd
and
add
lods
aaa
scas
stos
in
fistpl
push
jge
test
jno
in
and
or
lds
rorb
clc
in
loopne
shrb
sarl
call
adc
xor
gs
mov
repz
pop
and
sbb
add
dec
add
out
jne
pop
xor
shr
inc
push
ds
add
mov
or
mov
adc
lcall
cmp
dec
in
pop
push
xchg
cmp
jns
xchg
call
pop
cmpsl
jb
jg
enter
jnp
jle
js
add
test
push
mov
iret
push
clc
mov
sub
clc
push
push
mov
std
cmp
pop
jl
or
mov
nop
hlt
mov
iret
lret
mov
pop
push
jae
or
sbb
in
movsb
xor
cmp
out
xchg
jl
pop
sub
leave
sub
hlt
mov
pop
xchg
sub
test
andl
add
jge
ss
xor
push
xchg
lods
pop
out
in
cmc
mov
inc
call
scas
lea
xchg
pop
icebp
in
pop
dec
leave
scas
dec
push
jp
js
lods
mov
js
jp
inc
adc
push
inc
jnp
sbb
mov
je
test
and
rsm
xor
stos
jno
cli
aam
cli
xor
inc
cmc
loope
dec
addr16
repnz
inc
or
call
out
push
push
aad
mov
iret
daa
sub
out
or
mov
lock
jmp
les
loopne
cmp
push
cmp
ss
sub
addl
decl
cmp
pop
dec
cmpsl
cmp
dec
popf
jg
jecxz
jnp
or
pop
pop
orl
xor
mov
fimull
out
pop
xor
mov
bound
out
jb
adc
enter
int3
mov
jle
into
or
popf
pop
lret
mov
movsl
cmp
dec
xchg
and
mov
ss
pop
lock
lods
test
cmpsl
pop
sbb
int
cmp
push
jnp
mov
add
push
adcl
cmpsl
aad
popf
out
andb
movsl
out
adc
sbb
aad
es
lea
sbb
xchg
mov
or
add
outsl
jge
sub
lds
shrb
push
push
xchg
inc
inc
addr16
hlt
add
push
add
cmp
out
jl
mov
js
pop
or
push
enter
shrb
or
rolb
in
es
sbb
and
cmp
adc
pop
ja
jmp
lcall
dec
fstpt
out
int3
movsb
adcb
es
jne
lds
cltd
out
xchg
fldl
cld
pop
andl
xor
mov
xor
out
and
pop
cli
insb
shrb
leave
adc
push
fdivrs
movsb
mov
cwtl
adc
inc
jmp
adc
or
add
pop
jne
hlt
repz
mov
mov
mov
js
sbbb
xchg
ret
adc
dec
icebp
cmp
sub
dec
mov
xchg
enter
int
xchg
jbe
aaa
dec
dec
insl
js
and
mov
inc
cmpsb
fidivl
xchg
les
jo
sbb
call
add
inc
or
xchg
and
adc
mov
push
push
sbb
push
dec
pop
cmp
adc
cli
mov
sbb
icebp
mov
mov
cld
mov
lahf
cwtl
mov
nop
lret
push
into
aas
jmp
lds
mov
jnp
dec
or
inc
std
fimull
dec
addr16
and
pop
adc
js
adc
or
adc
mov
pop
xchg
adc
and
test
pop
addr16
rcl
dec
adc
dec
pop
push
sbb
dec
out
mov
mov
inc
out
or
add
dec
inc
daa
sbbl
add
stos
jne
je
in
xlat
pop
lds
sub
push
call
mov
xor
add
pop
adc
int
push
iret
xor
loope
outsl
xbegin
test
or
mov
out
pusha
aad
in
addr16
xchg
pop
push
cli
pop
subb
addr16
mov
jmp
rcrl
std
add
fimull
mov
sbb
dec
out
das
mulb
ja
mov
loope
sbb
push
fistpl
popa
aas
or
imul
dec
mov
or
in
push
mul
call
cld
dec
mov
in
cmpsl
adc
push
mov
out
cltd
cmp
xor
push
test
daa
sahf
pushf
push
iret
mov
inc
daa
push
fistl
mov
insb
rcll
dec
out
outsb
push
mov
xchg
or
loop
push
mov
sub
sub
xor
lcall
les
repnz
sub
cmp
push
sbb
jp
push
mov
cmpsl
dec
call
sbb
rolb
mov
lods
mov
mov
push
mov
mov
jbe
outsb
or
inc
pop
jae
cmp
enter
mov
fadd
hlt
mov
popf
cmpsl
dec
xchg
icebp
xchg
push
jo
inc
dec
aad
std
xchg
das
pop
mov
aaa
ljmp
in
jl
jmp
mov
aad
daa
and
arpl
sti
fwait
cli
push
sbb
pop
cmp
push
in
push
push
pop
mov
lcall
xor
jns
fnstcw
std
sbb
pop
enter
sub
sbb
adc
sub
jne
and
push
popf
sub
mov
dec
mov
mov
or
test
mov
lods
sbb
cmpl
sbb
outsl
stos
in
mov
nop
rorl
fdivp
std
notl
dec
fwait
sbb
lods
adc
testb
lcall
mov
out
lods
into
test
jno
dec
mov
jmp
jbe
repz
scas
aas
mov
mov
pop
into
and
lods
mov
js
and
push
imul
je
mov
dec
mov
push
jbe
push
mov
jecxz
inc
adc
stos
ja
or
js
mov
scas
push
ss
into
sbb
push
insl
add
int
cmp
cltd
mov
mov
leave
dec
aaa
std
mov
sub
repnz
sbb
insb
mov
xor
fldt
mov
cmpsl
fnstsw
scas
call
mull
repz
cmp
push
fstl
in
add
adc
xorb
push
imul
int
xchg
mov
pop
push
je
jnp
lock
mov
ffree
xor
popf
mov
mov
pusha
or
gs
inc
sub
std
ss
xchg
cmpl
jecxz
je
xchg
mov
pusha
fists
mov
push
push
ficomps
fdivl
push
dec
iret
sarl
sub
push
aaa
mov
ret
pop
push
mov
push
jne
jae
and
mov
or
lret
lods
lock
or
out
cs
lret
mov
lret
arpl
int3
cmp
popa
cwtl
mov
in
int3
push
outsb
pop
adc
mov
insb
dec
inc
fdecstp
pop
je
and
in
out
int3
xchg
mov
mov
cltd
pushf
inc
or
xchg
aas
jo
jmp
mov
fldcw
inc
arpl
insl
fs
mov
ret
push
loop
ds
or
imul
sbb
cld
mul
push
lods
stos
adc
test
rcr
fmull
adc
int
scas
pushf
mov
nop
push
stc
in
add
pop
xchg
mov
xchg
repnz
rcl
pop
das
xchg
lods
sbb
add
cmp
or
in
popa
pop
add
mov
mov
daa
pop
xchg
cmpsb
movsl
or
fnstcw
fwait
and
push
test
jmp
sub
push
lods
mov
js
adc
adc
lea
fdivs
sub
iret
out
cld
cltd
sbb
push
pushf
popf
inc
test
sar
notb
sbb
andb
xchg
cli
insb
add
or
jnp
iret
pop
jmp
subb
scas
iret
add
lods
pop
push
pop
jnp
push
sahf
xor
jbe
push
test
push
mov
rol
sub
test
xchg
adc
xchg
xor
loope
sti
cmp
cli
hlt
nop
jmp
xchg
aad
and
dec
or
pop
js
shll
sarl
jbe
mov
cmpsb
and
and
pop
nop
lock
xchg
out
adc
mov
subb
dec
xor
test
add
int3
jmp
cmp
inc
inc
nop
in
dec
dec
mov
adc
mov
mov
pop
mov
rorb
or
cmpl
in
loope
lods
xchg
pop
add
stc
ds
push
dec
sub
out
jmp
mov
popf
pop
pop
jecxz
jle
stc
scas
mov
rcrb
push
mov
in
mov
int
mov
mov
lcall
mov
xor
inc
xchg
xchg
mov
push
leave
cs
sub
push
mov
jnp
leave
js
in
mov
fdiv
movsb
xchg
jns
int3
push
hlt
data16
fmull
aad
pop
push
or
add
and
and
adcl
outsb
mov
mov
nop
lret
iret
lods
sub
xchg
adc
push
xchg
gs
mov
sahf
adc
cmp
adc
adc
xchg
cmp
or
and
inc
in
cmp
adc
mov
push
into
lods
sub
pop
push
call
repnz
xor
add
fwait
adc
xchg
and
dec
ljmp
lret
test
push
lds
mov
iret
and
movsb
sub
call
mov
popa
sub
in
mov
jmp
cmp
ret
mov
dec
jg
cmpsl
int
test
push
or
inc
ret
mov
add
fdivl
mov
in
push
or
in
aaa
mov
out
test
loope
or
fwait
pop
sbb
xchg
pop
divl
das
cld
xlat
call
sbb
sarl
mov
rcl
xchg
fstpt
sahf
mov
jb
nopl
ret
or
mov
aam
or
add
pop
mov
pop
test
sub
push
in
repz
xor
fs
add
sti
cmpsl
idivl
cli
lret
add
jne
or
ret
pop
lods
cs
scas
xchg
push
adc
push
jno
test
push
jae
add
addr16
fwait
and
push
and
shlb
and
stc
cmp
insl
dec
adc
jbe
mov
cmp
mov
inc
mov
fldl
rcrb
dec
inc
mov
xor
andl
dec
fwait
call
sub
lret
push
fmul
call
push
lds
cli
dec
shll
push
dec
sbb
pop
dec
jne
push
lret
inc
xor
dec
xchg
and
jo
xchg
mov
xor
gs
xchg
scas
lock
or
pop
dec
push
in
hlt
fisubl
pop
movsb
mov
leave
xchg
fwait
gs
lds
andb
xchg
dec
mov
outsl
and
std
adc
jp
xor
shll
jg
inc
mov
hlt
into
xor
jp
sti
mov
cmpsl
add
out
int
dec
xchg
pop
xor
mov
test
icebp
lock
add
mov
dec
mov
stos
addl
xbegin
add
shrb
push
imul
stc
pop
jle
lret
leave
xchg
push
data16
sbb
ret
dec
or
movsb
jno
mov
or
jmp
mov
out
or
mov
push
pop
sbbl
outsb
movsl
enter
jl
aam
cmpsb
jnp
sbb
xor
lahf
or
in
js
add
cmpsl
dec
or
cwtl
xchg
inc
dec
pop
iret
addr16
push
fwait
sub
inc
pushf
cmpsb
jo
jecxz
lods
dec
mov
inc
add
insb
xor
jb
dec
push
push
fmuls
in
cmpsl
ss
data16
jae
inc
pop
mov
cmpsb
sub
mov
push
mov
es
and
xlat
jp
adc
xor
imul
int3
loope
sub
outsb
xchg
dec
dec
shll
aam
mov
loop
call
aas
cmp
int
xor
jmp
andl
or
fsubr
pop
test
or
add
cltd
gs
sub
push
test
jbe
int
mov
sub
dec
sbb
mov
out
push
or
test
adc
out
rcrb
mov
popa
les
pop
cltd
inc
mov
xor
je
jno
out
sub
xchg
mov
out
dec
mov
or
ret
int3
jne
test
mov
lahf
mov
or
or
icebp
mov
lahf
or
fprem
jae
mov
xor
sbb
jno
dec
test
mov
lret
jno
mov
mov
lock
lahf
push
sub
pop
push
sbb
adc
mov
hlt
pop
ror
das
je
jmp
imul
push
jb
pusha
push
push
cmp
insl
subb
jl
es
icebp
mov
pop
aam
pop
xchg
sbb
xchg
lcall
push
pop
xor
xor
cwtl
pop
rorb
xchg
into
lea
neg
mov
xchg
insl
jmp
cmp
mov
shrl
dec
jbe
xchg
mov
xchg
test
mov
orl
adc
lock
loopne
ljmp
jb
decb
xchg
inc
and
shlb
cmpsb
int
mov
loopne
mov
inc
mov
xchg
imul
daa
rorb
sub
and
mov
outsl
fstl
dec
movsb
sbb
pop
testl
xor
divb
dec
sub
ret
addr16
xchg
mov
mov
xchg
in
mov
pop
fldl
rcll
adc
outsl
movsb
push
pop
and
jg
fisttpll
sbb
mov
lock
and
stos
inc
xchg
sahf
jecxz
fdivrs
int3
adc
mov
xor
jg
xor
sarb
mov
js
gs
dec
jno
cmp
mov
mov
dec
xlat
lcall
fiaddl
js
les
vmovss
jg
mov
sbb
bound
ret
movsl
cmp
push
insl
xchg
outsb
xchg
js
test
rcll
int3
cmp
pushf
subb
lds
lret
mov
jmp
lret
je
jae
and
cmpsl
lds
test
push
es
jge
hlt
cmp
push
cld
lods
cltd
jle
xchg
adc
jno
lret
jmp
xor
sub
sti
mov
rcrl
inc
inc
ljmp
cli
pop
xor
mov
jl
nop
pop
das
lds
jo
jne
shl
push
repz
js
enter
out
inc
jns
lods
dec
scas
sbb
sbbl
xor
cmp
lret
xor
outsl
pop
xchg
cmpsl
jp
rol
and
sub
sahf
lods
pop
push
mov
or
mov
jo
mov
enter
clc
pushf
mov
push
loop
lea
dec
push
cltd
inc
out
xchg
cmp
popf
call
sbb
jmp
je
dec
ljmp
push
push
dec
lcall
pop
sub
sub
push
lahf
dec
inc
dec
and
sub
mov
dec
or
cpuid
dec
insb
xchg
mov
pop
rolb
pop
in
mov
push
cmp
arpl
cmpxchg
insl
dec
aad
dec
push
ret
push
xchg
fistpll
xchg
xchg
arpl
and
inc
sahf
sbb
sbbl
out
es
outsl
jno
lods
incb
jb
pop
push
cmc
sub
push
lret
inc
push
int
jmp
xor
pop
push
mov
cwtl
testl
fstpt
xchg
cmp
lahf
push
sbb
jg
push
lcall
ss
pop
cltd
test
enter
cmp
movsl
or
xor
mov
inc
and
push
je
mov
mov
jmp
lcall
mov
add
push
or
sbb
mov
int
pop
btl
push
les
push
mov
fnstsw
rorl
add
xchg
movsl
ds
loope
adc
scas
cwtl
inc
xchg
mov
fistl
sbb
inc
les
push
push
and
add
sbb
mov
xchg
shll
popa
ds
cs
push
das
outsl
lahf
cwtl
jmp
jmp
fdivrl
cld
push
adc
jle
xchg
stc
int
mov
mov
je
add
and
cmp
scas
repz
addr16
addb
aam
cltd
outsb
mov
push
ja
xor
jmp
dec
mov
arpl
pop
sbb
cwtd
insl
sub
cmp
shl
xchg
xlat
inc
js
or
idiv
pop
test
lahf
fcoml
mov
xchg
xor
es
fsubrp
xor
xchg
icebp
sbb
xchg
pop
jmp
popa
pop
pop
cmpl
rolb
xchg
or
mov
xchg
push
test
ret
add
into
inc
enter
adc
es
in
jg
call
rcl
mov
pop
test
jne
int
and
or
pusha
add
scas
fisttpl
inc
fiaddl
push
iret
mov
lock
sbb
xor
daa
and
mov
shll
in
lea
out
xor
inc
sub
xor
push
jae
inc
stos
jp
or
cmp
pop
mov
lods
stos
jge
cmp
dec
push
cmp
icebp
pop
dec
fcmovnb
mov
push
pop
xor
lods
xchg
push
pop
cmp
test
dec
enter
and
inc
dec
in
ss
dec
dec
sub
adc
jp
clc
jbe
push
fsubl
add
rcrl
pop
pop
or
jmp
cmp
out
arpl
xchg
fisubs
cli
pop
inc
mov
or
pop
or
xor
jbe
hlt
pop
pop
jb
push
cmp
or
shl
bound
adc
ds
test
pop
xor
cli
push
push
pop
cwtl
mov
cmp
mov
sbb
xlat
mov
dec
pop
jecxz
adc
adc
into
xor
push
push
mov
jg
push
push
in
icebp
mov
mov
mov
cmp
push
out
mov
out
je
pop
out
daa
or
repnz
imul
dec
clc
fildll
loop
out
push
cltd
std
and
lods
push
hlt
cmp
xchg
sbb
sbbb
mov
loopne
enter
ja
repz
imul
cld
and
cmp
das
cmpsb
adc
or
test
xor
pop
out
cmp
xchg
mov
jo
movsb
sub
gs
pop
adc
lret
mov
and
cltd
sahf
mov
or
fwait
aam
cmp
add
or
rol
pop
add
loope
jns
rcrb
cmp
pop
push
xchg
mov
cld
ljmp
xorl
pop
mov
in
fmull
or
mov
cmp
dec
leave
imull
xor
popa
adc
cmp
jg
sub
fildll
or
les
pop
add
sub
inc
outsb
jge
inc
pop
test
jmp
stc
xchg
pop
je
stc
mov
stos
xchg
mov
loopne
xor
stos
inc
dec
inc
pop
jmp
adc
jbe
or
push
sub
mov
les
mov
fucomip
ljmp
repz
ds
imul
add
out
push
sub
lret
xchg
cltd
sbb
push
xor
pop
cmpb
in
in
loope
testl
ja
mov
jbe
jbe
insb
rorl
sub
stc
fwait
sbb
mov
jle
sub
mov
xchg
movsb
rcrb
add
add
mov
aaa
das
mov
push
xorl
push
fs
mov
cli
mov
popw
sbb
push
xchg
push
mov
dec
sbb
and
enter
cmpsb
lret
xchg
dec
and
add
dec
push
imul
outsl
push
mov
aaa
xchg
insl
xchg
push
scas
mov
stc
scas
bound
mov
sbb
xor
jns
out
xchg
mov
inc
adc
fstpt
je
fnsave
mov
and
mov
lods
in
test
adc
xlat
mov
int
fsubr
out
sub
ljmp
rcrl
repz
mov
adc
fstpt
repnz
cmp
lock
gs
ret
xor
jp
clc
inc
jecxz
mov
outsl
sbb
dec
in
outsb
scas
aad
lret
add
or
pop
fidivrl
cltd
lret
sbb
outsl
nop
aad
ja
push
pop
add
and
scas
cmp
pop
or
push
enter
dec
jno
inc
mov
test
popa
dec
xchg
into
ret
aas
add
jb
mov
xchg
call
aas
inc
mov
mov
lock
and
sbbl
les
test
or
push
pop
std
sbb
lock
stos
sub
ret
lahf
dec
sub
jns
fwait
adc
xchg
xchg
xor
ds
sbb
push
js
scas
cmp
hlt
insb
hlt
inc
push
or
repnz
dec
jecxz
test
ljmp
dec
sub
push
loop
sbb
mov
arpl
out
sub
sbb
ret
mov
mov
xchg
pop
inc
pusha
rcrb
lea
or
mov
aam
inc
xgetbv
jns
stos
and
add
imul
int3
push
cld
mov
and
call
jnp
dec
insl
mov
push
xchg
aad
and
cltd
bswap
imul
stos
mov
scas
mov
lock
sbb
pop
std
sbbl
out
adc
arpl
dec
inc
push
mov
pusha
xor
add
push
or
cmp
dec
jge
jne
push
icebp
ja
mov
mov
rcll
xlat
gs
lods
xor
sti
jae
mov
pusha
pop
inc
push
add
and
lret
fwait
mov
out
cmpsb
loop
xor
mov
mov
xor
pop
mov
repz
ds
cmp
xchg
adc
xor
jno
lods
pop
test
imul
adc
cmpsl
mov
mov
sub
mov
mov
int
sbb
sub
sbb
sarl
cmpl
mov
inc
daa
test
pop
adc
in
jne
in
rol
mov
add
shll
in
and
add
sub
pop
inc
or
dec
or
or
rcrl
arpl
sahf
mov
insl
cli
xchg
dec
cmpsl
pop
xor
jl
addr16
sti
adc
push
std
test
dec
sub
jmp
fmuls
lea
jnp
cmpsb
test
lea
loope
sub
xor
in
mov
xchg
inc
ja
hlt
cmp
fbld
clc
hlt
mov
stos
dec
loope
ficomps
jl
mov
mov
push
sub
cli
or
out
fisttps
sub
ljmp
sbb
sbb
pop
fimuls
iret
or
ret
iret
std
xchg
loop
add
fs
in
xlat
shrl
jnp
dec
pop
leave
xor
fmull
outsl
imul
pop
rolb
mov
add
dec
xchg
cmp
fdivs
fiadds
dec
in
div
data16
jecxz
jne
or
cmp
mov
mov
jmp
aad
enter
push
sub
fistpll
push
lods
test
pop
ficomps
enter
pop
push
push
in
xor
push
hlt
xchg
mov
xlat
add
fstpt
push
mov
sub
stc
insb
push
imul
hlt
sub
mov
cmp
dec
push
adc
pop
adc
and
hlt
push
fbld
add
xlat
add
mov
mov
mov
mov
lds
test
cmova
call
fbstp
xor
imul
jmp
mov
mov
cli
xchg
out
add
cld
sub
or
mov
push
push
xchg
and
mov
mov
xchg
dec
insl
lret
xchg
outsb
sub
inc
js
mov
scas
xchg
scas
sub
inc
je
fs
mov
jp
jnp
mov
sbb
pop
sbb
push
cmpsb
inc
insl
rorb
fistps
in
aad
cmp
inc
cmp
push
aam
jecxz
ljmp
jmp
push
adcl
jo
ret
aad
insl
add
mov
mov
or
test
out
or
sub
adc
loopne
repz
test
cmp
test
mul
add
rcrb
or
xor
pop
cmp
sub
shl
pop
lret
ljmp
adc
cmp
and
iret
mov
gs
mov
out
sub
jp
add
cli
push
les
or
insb
xor
inc
xchg
fisubl
cmpsl
fwait
mov
out
call
ret
loope
fdiv
sbbl
je
icebp
push
in
mov
or
mov
xchg
pop
inc
push
add
add
dec
mov
sbb
push
or
or
or
test
adcl
clc
lea
call
pop
ljmp
daa
mov
jecxz
lea
mov
dec
mov
lods
sbb
inc
mov
test
je
mov
ret
rcll
xchg
adc
push
push
lcall
xlat
pushf
pop
orb
inc
xchg
rol
int
push
xor
shll
pusha
jnp
lret
jbe
ret
adcb
add
aam
stos
out
and
xor
out
sub
mov
mov
stos
les
das
lret
cmpps
mov
xchg
dec
adc
pop
push
lret
cmp
mov
mov
daa
bound
sbbb
cmpsl
adc
cmp
pop
movsl
jb
inc
rorl
mov
dec
out
or
fsubs
cmc
bound
insb
pop
mov
mov
mov
fnsave
pop
outsl
add
xchg
mov
jmp
jae
stos
push
fs
mov
enter
sbb
loopne
outsb
imul
and
or
aad
ja
mov
and
mov
test
sbbb
add
test
cmp
inc
push
ds
or
movsl
or
jg
inc
and
in
or
push
call
adc
lock
sbb
xor
pop
xchg
test
inc
in
push
lods
aaa
cli
testl
xor
sub
mov
nop
jg
mov
test
imul
push
add
fisttps
lods
loop
push
rcrl
mov
mov
cld
fnstsw
sarl
mov
cwtl
xor
in
aad
stc
xchg
ds
lahf
fwait
cmpsl
inc
add
out
xchg
into
cld
jns
cmpsl
out
enter
push
in
sahf
outsl
popa
sbb
mov
pop
adc
mov
stos
mov
ret
inc
aaa
clc
cmp
and
lret
call
scas
mov
fsubr
lcall
mov
movsb
lds
iret
pop
cmpsb
cmp
add
jb
enter
ficoml
or
ja
inc
xchg
pushl
fnstcw
pop
jl
sar
nop
iret
xchg
push
mov
mov
dec
js
dec
or
gs
dec
enter
mov
pop
and
sub
arpl
sti
cmp
mov
dec
ret
cmpsb
int3
cmp
mov
insl
pop
fdivrs
rolb
inc
jb
jae
push
iret
test
repnz
outsb
fstpt
mov
sub
imul
pop
adc
cmp
ds
mov
push
sub
iret
outsl
stc
imul
out
test
daa
mov
adc
and
fstpl
mov
nop
or
insl
jo
scas
jmp
xchg
cmp
repz
cmc
shlb
movsl
xchg
ret
test
adc
sbb
data16
frstor
xchg
jo
fwait
xor
inc
xchg
jnp
and
lods
aas
mov
jmp
repz
mov
dec
ret
or
out
or
xor
sahf
movsl
dec
adc
stc
sarl
add
jae
push
sbb
xchg
shrb
jae
jmp
pop
adc
pop
cmpsl
push
mov
pop
pop
push
cmp
push
sub
sbbb
push
lcall
or
add
lock
inc
stos
clc
into
xchg
jg
into
movsl
dec
pop
clc
mov
xor
push
inc
xlat
mov
mov
xor
add
pop
cmp
aam
or
sbb
mov
loop
insl
xor
xchg
lahf
aas
mov
mov
shlb
pop
movsl
mov
movsl
fwait
shrb
jg
mov
dec
rcl
ret
mov
cmp
mov
cltd
push
ret
push
fldenv
sub
adc
insl
xor
mov
mov
inc
mov
pushf
push
dec
cmc
xor
cmp
fldl
rclb
rdmsr
mov
push
ret
daa
or
mov
inc
xor
pop
cltd
ret
push
pop
das
fsubl
mov
pop
or
pushf
mov
pushl
jle
daa
mov
lds
filds
cld
in
xchg
pop
scas
sub
or
add
movsb
adc
dec
aas
or
pop
into
imul
xor
push
cld
push
inc
addb
jl
sub
mov
pop
call
dec
aad
xchg
lds
shr
rcl
inc
testl
in
dec
or
dec
ss
pop
adc
int
popa
popf
mov
cmp
outsl
stos
in
inc
addl
mov
mov
dec
lods
mov
jg
sarl
xchg
dec
mov
sbb
inc
mov
dec
pop
imul
add
out
mov
scas
test
fcomps
arpl
shll
insb
aam
adc
fdivrp
fadds
aaa
in
jmp
push
jo
aad
push
push
fsubs
xor
popf
push
push
sbb
lea
pop
test
das
pop
mov
fistl
mov
inc
mov
sbb
clc
cmp
mov
cmp
cmp
cmp
sbb
lds
xchg
inc
pop
dec
jg
fidivl
stc
andl
loopne
cmp
subl
add
lahf
adc
mov
outsb
cmp
incl
inc
sub
jo
mov
and
gs
pop
stos
dec
scas
jo
lcall
repnz
and
testl
data16
lahf
push
sub
popa
mov
out
push
out
pop
shl
xor
dec
mov
and
movsb
cld
shll
adc
movsb
mov
outsb
nop
push
dec
inc
and
sub
xor
push
or
in
cmp
and
or
push
cltd
xor
xchg
jecxz
cli
jo
add
or
push
mov
sar
cmc
jle
cmp
sbb
divb
fistpl
xorl
leave
jecxz
xchg
sbb
cmp
imul
lcall
pop
or
lods
test
sar
jmp
mov
pop
das
push
ss
out
hlt
push
mov
sbb
cmp
inc
es
xchg
pusha
pop
push
jns
fsts
mov
fisttps
data16
jg
xchg
fs
or
arpl
adc
or
inc
mov
dec
jp
xor
add
mov
test
jmp
cld
jmp
jg
lcall
push
pop
ljmp
addr16
loop
movsb
xor
lcall
loop
push
xchg
sbb
xlat
test
loop
lea
mov
loope
mov
xchg
xor
loopne
push
sub
fdivrp
leave
push
or
mov
cmpsb
and
dec
dec
sbb
sarb
mov
je
or
dec
pop
dec
add
mov
xchg
jge
or
pop
mov
aam
mov
scas
mov
xchg
pop
imul
push
inc
data16
popf
mov
jp
inc
aam
outsl
adc
fldenv
cltd
out
int3
jle
xchg
jle
jle
test
call
sub
mov
sbb
adc
fdivl
pusha
ja
sbb
lret
mov
std
movsb
dec
lret
add
xchg
mov
lock
push
aam
and
pop
daa
xchg
data16
and
sub
in
sub
mov
outsb
and
movsl
adc
mov
fisttps
jecxz
test
jg
cli
sub
mov
mov
xchg
mov
push
jge
dec
aas
int
aaa
movsl
fnstcw
mov
divl
add
popa
jno
mov
mov
insb
or
ficomps
adc
jns
adc
roll
es
sbb
cli
dec
jne
mov
dec
push
jg
ret
lcall
push
sbb
cmpsl
xchg
pusha
jmp
dec
jle
sahf
testl
rolb
xor
xchg
rcll
cs
lret
je
or
stos
ljmp
pop
sbbl
push
pop
inc
imul
iret
subl
pusha
lret
int3
mov
and
sbb
lahf
jl
xchg
or
sub
faddl
in
sbb
sbb
jnp
push
dec
jge
std
out
mov
imul
adcl
sti
int3
scas
lret
add
out
ficoms
xchg
or
and
xchg
jl
push
xor
imul
dec
xorl
inc
dec
inc
testb
xchg
mov
cmc
fcoml
pop
adc
inc
xchg
rcr
cmpsb
mov
addb
push
inc
lods
into
pop
adc
loope
cmp
js
xchg
pop
dec
dec
fcompl
jle
pop
xlat
mov
iret
loopne
jle
lea
xchg
mov
inc
cs
sbb
lcall
add
pop
push
inc
lock
shlb
out
cmc
sbb
xchg
loop
push
cmp
mov
jns
cld
sub
mov
ljmp
jl
inc
push
mov
inc
push
imul
fiaddl
shrl
sbb
outsl
into
and
dec
mov
repz
test
cld
shl
pop
cli
int
push
dec
dec
hlt
sub
enter
ret
cmp
jg
push
ret
rcr
popa
push
sbb
je
mov
cli
jo
adc
dec
mov
push
jmp
mov
jle
aas
cs
mov
scas
arpl
adc
lret
adc
pop
jl
lret
sub
ja
mov
scas
sub
add
mov
je
sbb
into
pop
aaa
and
or
dec
xchg
push
and
test
push
inc
adc
out
or
pop
jne
fisttpl
das
adc
pop
inc
xor
pop
push
mov
mov
pop
into
nop
mov
mov
fldl2t
mov
icebp
call
shl
gs
add
mov
enter
mov
sbb
inc
push
aam
push
lcall
scas
gs
or
test
in
or
fwait
dec
in
inc
push
mov
add
dec
outsl
xor
je
out
out
inc
sub
push
out
sahf
inc
mov
fs
or
ja
and
adc
mov
andb
mov
dec
and
inc
pushf
popa
stos
sub
stos
pop
scas
test
pop
mov
out
pop
sbb
mov
cmc
mov
stos
inc
cmp
inc
mov
aad
andl
sub
inc
movsb
pop
sbb
ret
notb
mov
jbe
pop
aad
push
out
aaa
mov
inc
outsl
jle
rolb
and
stc
cmpsl
fld1
repz
mov
sbb
mov
mov
mov
sub
jne
loop
push
pop
inc
dec
popa
xlat
popf
lods
jb
add
mov
pop
cmpl
ds
shlb
add
popf
xor
inc
xchg
out
rorl
add
xchg
xor
inc
loop
lock
jl
dec
push
push
mov
sarl
sti
xchg
push
mov
fld
aas
sti
rorl
mov
inc
inc
dec
test
push
arpl
add
add
lcall
add
lahf
xchg
je
jp
out
xor
xor
out
js
pop
pushf
jmp
in
lret
and
testl
xor
dec
arpl
loop
jae
xor
repnz
or
xor
mov
inc
sbb
outsl
cmp
inc
scas
push
mov
aam
sbb
sti
int3
sub
repnz
outsl
jo
movsb
iret
iret
dec
dec
fisubrl
repnz
pop
push
sbb
in
pop
add
leave
popf
outsl
mov
xchg
adc
std
mov
xor
pop
sub
das
push
cmpsl
dec
in
xchg
cli
mov
loop
repz
mov
dec
cmp
xor
lods
scas
fcoms
jns
cmpsl
sbbl
pop
roll
dec
add
dec
call
mov
sub
pop
inc
aam
pop
push
pop
sub
pusha
fiadds
add
add
cmp
adc
push
movsl
imull
popf
xchg
in
and
push
adc
test
push
and
sbb
mov
sbbb
or
fwait
mov
imul
int3
cmc
lods
rcr
jmp
push
add
imul
pushf
inc
popa
or
dec
sub
out
mov
movsl
or
mov
sbb
inc
push
xchg
outsl
cmp
fwait
rcl
pop
push
sbb
cmovl
jbe
movq
ja
add
fdivrp
lods
cmp
jmp
jp
lea
inc
jp
fldenv
mov
push
mov
cmp
pop
push
out
dec
sbb
cmp
pushf
mov
jnp
pop
int
nop
mov
pusha
lds
stos
adc
test
loope
add
dec
jl
xchg
cs
roll
xchg
loop
adc
sub
add
jmp
mov
cs
int
xor
jae
test
loopne
cli
sub
push
das
fldl
push
inc
mov
pop
fwait
ljmp
cmp
addr16
xchg
in
jmp
bound
and
adc
out
pop
jb
push
or
push
bound
mov
lahf
mov
push
fisubrl
ret
push
insb
lods
mov
and
stos
sub
std
je
inc
stc
rcl
aaa
mov
or
jnp
dec
lock
enter
add
sbb
mov
insb
push
testl
in
into
adc
pop
fstpl
xor
jno
push
xlat
sub
jo
cltd
loopne
icebp
repnz
inc
insl
fisubl
loop
xor
inc
dec
push
pop
cmp
test
mov
mov
shl
and
pop
sub
scas
xor
add
adc
mov
ljmp
add
mov
pop
outsl
mov
popa
push
jbe
adc
aas
sbb
lcall
ror
test
cmpsl
sub
pop
push
sbbl
push
inc
icebp
jae
sbb
and
xchg
nop
cmc
das
mov
jae
pop
adcb
push
lods
adc
push
daa
push
and
push
sbb
jb
inc
pop
mov
aaa
cmp
or
jmp
jne
addb
inc
cltd
ljmp
xchg
and
pusha
mov
lret
mov
orl
pop
cmp
inc
pop
dec
mov
cltd
dec
xchg
movsb
mov
cmp
sti
sub
rclb
lods
in
adc
and
or
in
stc
mov
mov
dec
push
addr16
sub
lea
mov
cld
stos
inc
dec
leave
in
cltd
cmp
jne
dec
in
xor
push
daa
cmp
jecxz
outsb
cwtl
inc
rorb
icebp
dec
push
test
ljmp
mov
ret
out
add
cmp
gs
fwait
jbe
data16
scas
lret
push
xchg
sqrtss
mov
sub
stos
or
bound
xorb
int
lods
mov
add
inc
add
insb
aad
shll
mov
mov
scas
aaa
jns
mov
xchg
es
jbe
scas
int
ficompl
mov
fildl
or
mov
inc
int3
add
and
lret
add
and
push
mov
jmp
or
sbb
roll
push
sbb
stc
ret
cmc
imul
dec
adc
repz
sbb
je
pushf
in
mov
inc
jge
and
cs
sahf
sarb
stos
stc
xchg
movsl
dec
test
mov
xchg
adc
pop
das
or
in
mov
sbb
dec
inc
repnz
test
into
out
cmp
xor
sbb
jg
xlat
pop
adc
inc
arpl
dec
add
sub
jne
adc
rol
inc
lret
lods
insl
inc
sti
xchg
sbb
jmp
out
dec
das
cmp
mov
rclb
mov
and
and
jecxz
fwait
popf
push
pop
out
js
cmp
add
adc
out
or
ss
push
das
jae
add
test
jno
push
loope
outsl
insl
xor
test
sar
clc
inc
inc
sbb
cmc
cmpsb
dec
push
pop
mov
add
or
addr16
mov
lret
shl
dec
jb
outsl
and
imul
imull
sub
fwait
aam
gs
jmp
jle
mov
iret
adc
pop
mov
pop
jecxz
jns
cmc
mov
jp
xor
mov
dec
ss
lods
jle
cld
adc
adc
je
rsqrtps
aad
aad
ret
sbb
mov
and
js
fwait
call
xor
add
mov
aam
imul
pop
lods
jl
mov
shll
mov
add
mov
sahf
fimull
gs
mov
sbb
xor
mov
fisubrs
or
insb
mov
call
movsb
dec
jo
gs
les
cmpsl
or
arpl
xor
mov
lcall
mov
xchg
outsb
pop
pop
sub
jo
adc
inc
out
bound
mov
jae
imul
push
cmp
xlat
bound
fld
mov
cmp
jle
push
test
lds
rorb
or
and
sbb
push
repnz
pop
xor
int3
add
pop
fwait
mov
mov
les
clc
clc
xchg
sbb
daa
mov
test
or
xor
cmp
adc
out
popa
test
mov
fwait
jb
inc
lcall
cltd
cltd
jl
loopne
imul
push
movsb
jge
mov
imul
fidivrs
or
pop
xchg
sbb
in
ljmp
dec
jae
mov
xchg
dec
call
fwait
sub
pop
lods
sub
pop
into
data16
mov
push
out
sbb
loope
fdivr
push
mov
out
pop
xor
aad
mov
push
xchg
dec
cwtl
mov
push
mov
ds
pusha
popf
out
inc
int3
mov
rcll
pop
outsb
andl
je
pushf
int
out
lods
cmp
stos
adc
pop
sbb
fisubl
push
dec
rcll
lods
add
mov
ljmp
bound
sti
xchg
jno
out
mov
jne
shll
pop
cmp
add
stos
xchg
or
mov
ds
imul
adc
mov
pop
push
loope
fnstcw
xor
add
cmp
inc
fstps
ret
push
and
sub
addb
add
scas
xor
pop
mov
int3
out
lcall
pop
push
inc
hlt
adc
popa
mov
dec
mov
xchg
call
fldt
xchg
insb
xlat
insl
lcall
inc
fbstp
out
dec
cltd
mov
leave
add
pusha
ret
cmpsb
flds
inc
dec
sbb
mov
cmc
into
push
ret
jo
push
int
adc
syscall
inc
jb
jb
dec
mov
imul
dec
repz
stc
xlat
fildll
xor
mov
ljmp
sub
out
pop
sti
inc
jge
adc
cmp
jmp
cmp
cwtl
add
cmp
loop
jne
gs
or
jg
outsb
ficoms
xchg
jecxz
push
or
not
test
jl
push
pop
aas
mov
mov
insl
divb
cs
lret
mov
xlat
insl
insl
lcall
sub
lahf
jae
test
mov
imul
je
dec
cmp
inc
xchg
stc
in
mov
pusha
mov
cld
push
mov
and
jno
sbb
dec
add
push
cmpsl
mov
pop
sub
stc
adc
adc
int3
out
mov
add
add
adc
xchg
dec
ja
out
or
pop
xchg
nop
popa
insl
out
pop
std
scas
nop
fimuls
sub
cmp
mov
mov
jnp
jmp
push
jmp
sub
adc
mov
sbb
div
lods
ret
testl
dec
push
leave
xor
mov
adcl
lds
mov
aam
lock
jbe
call
stos
lcall
in
jae
add
loope
mov
push
adc
mov
push
sahf
fidivrs
enter
sar
icebp
add
xor
cmp
fidivl
cmp
mov
xchg
gs
inc
scas
mov
jmp
fisubl
and
hlt
pop
repnz
cmc
jmp
mov
mov
pop
out
mov
xlat
pop
aad
mov
push
cmp
adcl
leave
insb
and
mov
mov
pop
sbb
popf
sub
enter
push
cli
lea
push
sti
mov
sub
gs
inc
mov
xor
mov
pop
mov
mov
ret
mov
xchg
fwait
pop
testl
cmpsl
clc
xlat
xor
test
enter
fwait
mov
jg
inc
jge
fcomi
inc
lcall
pop
mov
mov
mov
jge
pop
arpl
aaa
scas
mov
jg
mov
mov
inc
es
loopne
cmpsl
rcll
push
mov
fnstenv
pop
xchg
outsl
dec
test
out
ljmp
pop
icebp
add
sub
dec
jle
gs
inc
and
lods
mov
mov
push
stc
cli
lahf
in
sbb
dec
fwait
dec
inc
dec
xor
mov
xor
std
and
fs
arpl
push
adc
fcoms
sub
dec
add
jb
sbb
outsl
adc
adc
lock
jb
or
cmp
xchg
repz
push
push
ja
push
rorb
insl
mov
loope
cltd
cmp
jge
cmp
add
xchg
xchg
jno
aad
adc
and
cmpsl
das
clc
push
mov
not
push
pusha
jb
lcall
mov
aas
scas
cli
xor
negb
push
cmp
or
push
in
in
sbb
pop
cmp
mov
rcll
sub
add
dec
push
bound
cmpsl
jp
movsb
mov
repz
popa
js
ljmp
and
cmpsb
lahf
add
pop
xor
mov
mov
test
push
int3
dec
out
fidivrl
dec
and
insl
sub
dec
and
add
in
adc
mov
mov
mov
pop
push
in
insl
mov
mov
cmpsl
lcall
cmp
fsubp
push
insb
mov
shll
jne
daa
sub
jmp
push
dec
mov
aas
scas
imul
mov
push
das
popf
mov
jns
hlt
addr16
fsub
push
ficoml
mov
push
into
in
pop
subb
xchg
cmp
sbb
scas
mov
fisubs
stos
push
clc
mov
push
jp
mov
icebp
and
mov
pop
mov
push
dec
jp
leave
ja
add
pusha
jp
push
out
jmp
out
mov
adc
in
mov
cmp
loop
push
push
xchg
popa
fdivs
nop
cmp
xchg
in
add
and
xorl
xchg
jb
fisttpll
xchg
outsl
daa
pop
xchg
adc
mov
fwait
ljmp
fldcw
add
test
inc
out
outsl
out
mov
shl
jg
mov
pop
jmp
inc
inc
cmpsl
dec
dec
ss
ret
out
adc
push
cmp
cmp
xchg
pop
inc
sbb
adc
dec
push
pop
jnp
cmp
xchg
ret
addr16
push
aam
pop
xor
andl
rolb
xor
pop
mov
push
xchg
jb
psubd
ficoml
aad
mov
mov
aas
xchg
out
cmc
in
leave
aaa
into
imulb
mov
pusha
dec
mov
jns
sub
add
adc
bound
lcall
add
lahf
fstpl
loopne
enter
dec
pushf
cwtl
cltd
insb
pop
push
mov
xor
push
out
ffreep
sub
lods
add
test
sub
dec
in
sbb
stos
adc
cmp
dec
jecxz
mov
push
les
loopne
mov
std
jno
mov
call
movb
xchg
cli
push
pushf
clc
xlat
mov
pop
loope
xchg
fcomp
xor
shrw
pop
and
dec
rcll
push
lahf
and
sbb
repz
dec
xorb
sub
xchg
int3
sub
and
xchg
ss
adc
test
and
xor
xchg
aad
mov
jmp
imull
lahf
inc
icebp
ret
inc
mul
repnz
sbb
push
jp
push
inc
sub
outsl
mov
push
popa
scas
jecxz
fldcw
lret
stc
sbb
movsl
xor
jns
ljmp
dec
jb
imul
xor
adc
arpl
cmp
into
mov
mov
loop
pop
aam
mov
mov
bound
jae
pushf
fcom
aad
adc
pushf
cltd
aas
inc
mov
push
sub
xor
xchg
inc
mov
adc
lods
enter
xchg
cwtl
cmpsl
in
xchg
fdivrl
sbb
xchg
fists
push
shll
pushf
fwait
inc
pop
sar
mov
cmc
dec
icebp
cmpsb
xor
loopne
sub
ljmp
movsl
or
ficoml
and
jmp
xchg
xor
addr16
xor
outsb
mov
nop
sub
push
jo
pop
inc
inc
iret
and
pop
mov
pop
sbb
add
shlb
scas
cltd
imul
pusha
push
or
scas
ret
jge
mov
gs
test
std
jns
pusha
insb
push
push
shrl
and
and
or
sbb
scas
ljmp
jae
ljmp
pop
jne
and
out
mov
sbb
xchg
leave
jb
in
mov
out
lcall
popa
mov
es
dec
cld
adc
or
mov
enter
stos
inc
sbb
inc
push
xchg
jp
sbb
and
mov
loope
add
outsb
fmuls
xor
and
push
stc
dec
adc
popf
sub
repnz
stos
jl
bound
sbb
inc
adc
fidivrs
mov
mov
lret
cmp
aas
je
mov
out
xor
cmpsl
push
mov
push
cwtl
leave
in
cld
jmp
sub
add
sahf
popf
in
mov
fisubs
xor
roll
or
mov
insb
sub
cmp
push
rclb
mov
jb
mov
cld
mov
repz
out
mov
inc
dec
sub
lods
je
rcrl
adcl
cltd
loop
sub
adc
out
jbe
xchg
xor
lods
int3
fst
or
dec
sub
into
xlat
and
scas
loopne
jmp
in
decb
lcall
add
shlb
shll
and
leave
pusha
mov
loope
adc
cmpb
mov
test
fidivs
cmp
mov
outsl
mov
test
adc
sbb
sarl
cld
sbb
pusha
scas
mov
cmpsb
xlat
in
sub
pop
in
std
js
jmp
ret
aad
cli
and
sarl
stc
xchg
xor
int
insb
mov
cmp
cmp
mov
in
sti
ret
jo
fdivrp
mov
sbb
pmulhuw
add
pop
leave
push
xchg
xchg
in
out
outsb
xchg
inc
inc
sti
inc
dec
test
inc
lea
adc
or
outsb
call
pop
js
insb
cmp
sub
sbb
or
jmp
addr16
jo
pop
lret
dec
pop
shrb
jmp
das
fmull
mov
mov
imul
popf
cmp
cmp
sarl
mov
notb
hlt
pop
add
idiv
gs
push
jp
push
add
fsubr
xor
xor
push
and
xchg
imul
shlb
xchg
adc
jo
dec
out
ss
sar
adc
mov
mov
xor
dec
mov
enter
cmp
iret
rorl
mov
push
ret
lea
cs
cmp
lea
xchg
int3
adc
divl
mov
rcl
or
das
dec
fstl
insl
push
cmc
adc
lds
arpl
andl
shll
adcb
leave
mov
subl
filds
pop
sbb
lea
jno
sub
sarl
jg
sbb
mov
cmpsl
std
push
ds
dec
nop
and
or
ret
outsb
lret
sti
cmp
sbb
dec
cmpl
cmpsb
adc
mov
scas
loopne
fwait
ret
dec
cmpsl
or
inc
out
fwait
stc
in
add
popf
ret
cld
adc
ss
mov
add
aaa
lea
pop
andb
fs
mov
lock
push
fdivrl
and
lret
sbbb
adc
call
ds
add
jo
test
repnz
cmpsl
out
or
cmp
in
jo
xchg
rcrb
loopne
cmp
notb
sbb
cwtl
shrl
outsb
movsb
aam
aaa
xor
sti
les
lcall
les
subl
xchg
popf
int
and
dec
movsb
in
sbb
mov
cmp
out
pop
sahf
pusha
sub
addb
adc
mov
fisubs
fwait
pop
popa
cltd
les
cmp
in
test
xchg
inc
ror
xlat
leave
scas
lds
xchg
jb
iret
pop
js
push
repnz
rorl
and
xchg
dec
mov
imul
loope
dec
mov
cs
jge
fisubrs
rcrb
fnsave
mov
push
out
pop
cmp
mov
mov
lods
lret
loop,pn
fists
mov
imul
sub
inc
push
call
mov
mov
fmul
mov
inc
divl
clc
test
pushf
aam
push
fistpl
pop
in
imul
stc
and
jae
stc
mov
insl
dec
xor
inc
movsb
push
insb
mov
mov
dec
inc
aam
into
add
add
lcall
xor
push
cs
mov
rolb
or
mov
sbb
xchg
xchg
imul
sti
mov
loopne
imul
imul
mov
movsl
push
insb
fwait
push
jle
sbb
sbbl
mov
cmpb
sub
insl
xor
cmp
aam
adc
push
fwait
dec
das
cmpsl
ljmp
pop
pushl
movsl
adc
cmp
js
stc
add
fstps
rcrb
pop
aas
add
lret
sub
pop
jno
mov
cmpsl
mov
mov
fisttpl
sub
cmp
jle
mov
push
addr16
idiv
std
je
scas
aaa
lcall
push
leave
sbb
xor
mov
mov
repz
int
mov
dec
popf
test
mov
fistl
sar
mov
jecxz
inc
dec
add
xor
out
cmp
sub
pop
jae
pushl
mov
int3
or
rorb
jne
insl
xchg
xor
push
cwtl
jp
pop
and
iret
inc
add
mov
int3
or
jno
cli
jge
pop
in
bound
ds
jg
pop
jl
mov
xor
ret
bound
in
jl
outsb
ljmp
in
inc
cs
arpl
out
mov
dec
xchg
sbb
mov
cmp
jno
push
inc
je
mov
mov
les
inc
mov
stos
loop
cwtl
ficoms
enter
and
push
out
int3
out
popf
cmp
cli
stos
lea
or
or
push
add
push
into
and
stc
ds
cmp
sub
push
jns
mov
inc
je
mov
and
push
pop
ret
mov
sub
add
repz
pushf
mov
add
movl
or
or
scas
aad
sub
cld
xor
pop
pop
call
or
sbb
jecxz
dec
jmp
stos
cld
aam
clc
mull
sti
dec
movsb
xlat
outsl
xlat
inc
repz
rclb
fistpl
pop
bound
outsl
pop
mov
or
and
lods
push
and
dec
inc
xchg
or
pop
cmpsl
aaa
rcrb
aam
imulb
cmpsl
xor
adc
inc
and
subb
xor
jmp
mov
mov
clc
in
fstps
pop
mov
ret
loopne
jae
jae
lods
sarl
dec
es
cli
sub
xor
jb
clc
scas
aam
pop
push
push
add
xchg
das
bound
dec
add
jbe
xchg
int3
cmpsl
mov
add
lea
sti
push
adc
jae
out
movsl
mov
add
jecxz
xchg
sub
cmp
mov
mov
out
call
xchg
int3
or
jne
pop
cmpsl
stos
push
mov
xchg
orl
and
push
xchg
push
cmp
ja
clc
test
add
lods
xchg
mov
dec
mov
mov
adc
adc
adc
sti
or
xor
xchg
in
push
xchg
addl
inc
daa
mov
add
and
lods
insl
negl
push
push
or
inc
idivb
adc
fldenv
push
sub
das
fs
sub
sub
xchg
and
pop
cmp
mov
ss
inc
mov
lahf
jmp
popaw
cmp
scas
jp
push
in
scas
mov
or
add
push
push
sub
sub
rorl
push
adc
add
pop
je
xlat
insl
ret
mov
mov
ljmp
into
mov
xchg
sti
ret
lds
push
push
leave
lods
cmp
fsts
adc
cmc
fidivs
xor
jae
adc
push
jnp
mov
aad
cmpsb
jg
xlat
pop
shrb
or
lods
add
mov
pop
sub
gs
adc
pop
ficomps
pop
or
icebp
and
jmp
sarb
mov
pop
push
adc
mov
or
andl
pop
and
inc
jne
sub
xchg
pop
emms
push
pop
sahf
or
push
imul
fldenv
xchg
out
inc
aad
decb
sbb
push
inc
fs
or
mov
jbe
fnstsw
xor
sti
out
and
fdivp
xor
lret
mov
dec
mov
scas
or
sub
dec
adc
cld
jo
cmp
push
add
or
jns
sbb
sbb
inc
pop
lock
aam
pusha
jae
out
ds
aas
in
jle
dec
mov
and
mov
pusha
arpl
xor
sub
orl
push
and
ret
and
xchg
outsb
adc
std
add
mov
jo
out
mov
push
imul
pop
inc
das
iret
out
pop
inc
rcrb
xchg
pop
push
and
add
sahf
loop
sub
dec
jge
jno
mov
xlat
jecxz
out
lea
jnp
test
ja
fyl2xp1
push
imul
mov
js
fdivrl
lcall
add
shrb
adc
int3
inc
repnz
or
movsl
xchg
inc
sub
dec
cmp
lods
mov
inc
push
mov
mov
fnstsw
into
xchg
jb
push
cmpsb
add
inc
or
mov
jp
cmp
xchg
popl
mov
mov
push
jo
fdiv
push
or
shll
out
push
mov
adc
fisubs
std
push
movsb
out
imul
mov
cltd
push
sbb
mov
sbb
sbb
push
call
adcb
popf
rolb
loop
pop
mov
mov
std
mov
rorb
cmp
ret
cli
push
jl
imul
push
cmc
rcll
adc
ret
add
push
mov
cmpsb
jmp
xlat
mov
or
or
add
subb
lods
outsl
je
out
inc
or
inc
jo
insl
adc
nop
insb
sbb
and
nop
sahf
js
pop
pop
mov
push
fbld
jle
dec
daa
in
outsb
pop
jge
push
cmc
call
jae
lret
mov
xchg
and
mov
mov
sbb
adc
gs
call
push
cmp
cwtl
fs
and
ja
addr16
or
mov
pop
decl
subb
push
mov
cmp
stos
ljmp
mov
ss
mov
xchg
cltd
mov
push
push
pop
pop
leave
cli
dec
mov
add
xchg
adc
mov
push
lock
cwtl
andb
hlt
movsl
out
sub
inc
mov
jne
add
jmp
and
add
cmp
call
jge
xchg
je
xor
or
out
dec
shl
sub
call
or
push
inc
and
stos
icebp
or
aas
push
adcl
xchg
add
test
sub
cli
in
sub
jp
gs
pushl
iret
jo
mov
mov
mov
lahf
push
nop
dec
rclb
cli
cwtl
adc
cmp
cmp
mov
negl
int
or
or
mov
les
pop
pop
jmp
mov
lretw
pop
call
and
add
divb
out
xchg
xor
cwtl
js
repnz
mov
and
mov
data16
pop
cmpsb
cld
aaa
gs
jno
cwtl
arpl
and
add
outsb
pushf
insl
es
bound
sbb
test
xchg
mov
sbb
das
jecxz
lock
push
jle
xor
xlat
faddl
push
inc
test
scas
jp
ror
cmp
insl
pop
mov
jg
popf
sahf
adc
int
push
xchg
add
dec
cmp
xor
xchg
call
mov
adc
inc
mov
enter
addl
out
or
pop
mov
jno
psrad
icebp
pop
scas
aad
idivb
jmp
andl
push
bound
and
mov
loop
xor
dec
iret
into
lcall
xor
test
xchg
adc
inc
aas
loop
arpl
cmpsb
sbb
add
mov
pop
cmpsl
xchg
fsubs
cwtl
mov
lcall
aas
push
jnp
cmpsl
push
or
dec
pop
cmpsb
fdivrl
jne,pt
mov
sbbb
mov
loopne
js
pop
mov
pushf
xor
mov
pop
shlb
push
stos
inc
insb
popa
rcrb
push
sub
cmpb
ds
mov
sub
push
das
adc
pop
ss
mov
out
leave
lcall
inc
add
xor
mov
xchg
push
mov
sbb
pop
inc
or
daa
mov
sbb
cmc
les
fnstsw
xor
orl
mov
movsb
pop
fucomi
mov
test
pcmpgtw
movsb
mov
sbb
and
and
inc
popa
shl
scas
imul
scas
jmp
jae
cmpsl
mov
xchg
pop
jnp
adc
add
and
cmp
scas
scas
mov
mov
stos
or
cmp
pop
pop
lods
mov
stc
scas
jo
das
popf
pushf
pxor
repnz
add
mov
push
push
adc
jbe
jge
jecxz
test
ja
fstpt
je
fs
mov
push
mov
dec
nop
push
inc
dec
jl
iret
xchg
inc
popa
add
out
sti
pop
pushw
xor
cmp
repz
sub
scas
in
aaa
push
outsl
pusha
stos
rcl
cmp
mov
xor
test
dec
fisttpl
adc
cs
mov
push
mov
sub
adc
xor
cs
in
mov
push
cmp
sbb
push
loop
push
mov
fnsave
adc
push
mov
inc
lcall
pop
sub
mov
xor
repnz
and
insb
sbb
fwait
adc
fbstp
scas
xchg
repnz
stc
adc
mov
jns
push
pop
aaa
mov
in
fnsave
insl
sub
rcl
cmpsl
ja
out
add
pextrw
add
mov
sbb
or
mov
mov
cmpsl
cli
dec
out
scas
add
adc
popa
mov
repz
pop
popf
adc
add
inc
shrb
xor
arpl
sbb
aaa
test
inc
inc
in
movsl
mov
test
xchg
mov
loope
movsb
stos
shr
mov
mov
repz
outsb
inc
lcall
icebp
sbb
in
ret
out
aas
scas
addl
pop
cmp
ljmp
push
or
xor
test
and
rcl
jmp
fistpl
lock
ja
je
mov
andb
fsubrl
or
orl
or
xlat
dec
jecxz
mov
adc
cs
into
shrl
mov
sbb
mov
hlt
out
and
add
or
and
fcoms
gs
cld
xchg
cmp
mov
test
adc
xor
outsb
push
aaa
or
xchg
cwtl
fwait
add
pop
dec
cmp
and
hlt
mov
push
ficomps
daa
xchg
fdivl
ljmp
fistpll
cmp
pop
jge
fs
incb
pushl
mov
lret
idiv
rol
out
shll
lds
jne
add
mov
stos
push
cmp
rcl
push
mov
push
fidivrs
xchg
popf
push
je
lcall
dec
stos
sub
xchg
inc
adc
stos
adc
mov
and
insb
mov
mov
lds
mov
jo
jecxz
sub
push
fcoml
mov
stos
fldlg2
mov
int3
nop
jno
pop
das
cltd
and
pop
inc
cmc
sub
out
push
or
fistpl
loop
icebp
jle
dec
jb
cs
dec
lahf
insl
movsb
lret
sub
in
mov
mov
inc
test
xchg
push
inc
loop
fcompl
movl
std
mov
mov
inc
jp
or
xchg
in
lret
scas
cmc
dec
out
out
inc
inc
adc
out
test
divb
ds
sub
jae
or
ja
xor
lods
xchg
das
out
inc
insb
sbb
cld
mov
xlat
cmp
pop
daa
shlb
repz
sub
or
mov
and
jne
rolb
lcall
xchg
and
lods
sub
fldcw
push
ljmp
sbb
xchg
xlat
jb
sub
into
push
dec
nop
das
dec
cmp
out
jae
sbb
aas
adc
xor
cwtl
les
sbb
cs
ret
dec
xchg
sti
push
mov
mov
mov
int3
shlb
test
xlat
rcrb
or
add
dec
js
dec
or
movsl
test
and
add
mov
scas
or
xchg
inc
or
jno
clc
dec
pop
cmpsl
mov
out
idivb
fdivl
jo
push
sub
cli
dec
cmp
in
in
in
rcll
push
adc
fadd
mov
cmp
mov
test
sbb
insb
leave
nop
inc
mov
push
ficomps
repz
mov
adc
lcall
in
push
ret
sub
inc
call
cwtl
cmp
xor
jl
add
in
xor
imul
hlt
imul
dec
push
mov
lock
movsl
ds
jmp
dec
daa
insl
jns
cld
in
pusha
mov
lods
push
sub
das
clc
adc
add
add
popa
xchg
movsb
pop
loope
xor
int3
mov
jmp
mov
fnstcw
pop
test
inc
fdivs
push
es
loope
mov
in
loopne
mov
test
test
xchg
and
or
cld
ja
fldenv
xor
clc
test
repnz
and
inc
xchg
jae
jno
cmpsl
xchg
inc
add
add
mov
sbbb
mov
fs
jno
fyl2x
xor
rcrl
push
jecxz
sub
int3
cmp
or
pop
repz
inc
lea
jno
enter
or
stos
xchg
sar
push
arpl
out
mov
aam
sbb
lock
xchg
adc
xchg
ds
fimuls
mov
lock
jne
inc
inc
rcl
movsl
sbb
and
push
icebp
add
jo
enter
outsl
daa
fildl
sti
std
sbb
dec
shlb
dec
scas
in
scas
sub
cmp
sbb
in
cld
stc
mov
pop
popf
je
lcall
xlat
mov
addr16
jecxz
mov
inc
cwtl
test
nop
inc
fnstenv
aam
into
jns
add
lods
and
loope
mov
bound
dec
push
cmpb
mov
xchg
cltd
pop
rcrb
sbbb
mov
outsb
sbb
cli
adc
mov
outsl
pop
xor
outsb
push
sub
adc
and
lret
pop
or
dec
push
and
dec
incb
in
dec
addr16
jns
pushf
lea
lret
jne
imul
les
sub
pop
jbe
dec
rcrl
xchg
or
ja
and
pop
cmp
leave
sahf
pop
mov
and
into
lret
stc
aad
or
shll
push
cmpsl
incl
add
sub
add
mov
cmp
inc
sbb
mov
dec
adc
or
in
lock
in
lods
pushf
lahf
push
mov
pop
or
daa
mov
pop
sub
dec
negb
mov
push
or
dec
addr16
sub
addr16
jmp
cmpsl
pusha
add
and
push
aas
ja
insl
cmp
push
out
sbb
lods
shl
xor
mov
xlat
insl
inc
jne
enter
inc
lcall
dec
cmp
add
cmpsb
inc
imul
mov
push
cmp
xchg
pop
adc
sbb
mov
sbb
push
or
rorb
call
jge
sbb
mov
mov
arpl
mov
pop
repnz
add
pop
xchg
test
push
and
enter
jae
jne
fistps
mov
aaa
mov
int3
pop
xchg
push
into
or
xchg
cmp
pop
dec
je
jg
jp
jl
pop
cmpsb
loopne
jg
das
call
aad
paddusw
xor
addb
adc
ljmp
fnstcw
adc
outsl
lahf
aaa
sbb
std
adc
fisttpl
dec
dec
fmul
scas
test
das
movq
dec
test
lods
daa
data16
cs
test
pushf
sbb
pushl
mov
xchg
test
fisubs
sub
jns
push
inc
jb
pop
cltd
mov
sti
shrb
sub
je
es
pop
loope
jge
dec
les
jns
inc
mov
push
xor
test
dec
dec
imul
int
mov
add
andl
dec
push
out
in
mov
mov
movsl
xchg
push
stos
push
jecxz
jbe
nop
mov
outsb
imul
add
xchg
and
sti
cld
or
jns
xchg
mov
and
ret
cli
bound
push
jb
scas
es
add
sar
inc
lcall
mov
iret
movsb
ret
xchg
jle
out
movsb
insl
call
add
mov
in
adc
je
gs
lods
aaa
daa
add
jb
movsl
xor
lea
jmp
adc
hlt
pop
fadds
stos
sub
test
fisttpll
inc
sti
sub
jp
xchg
das
lret
jmp
test
lea
and
sub
je
clc
sbb
test
clc
inc
push
lods
push
imul
ja
aam
push
cwtl
or
sub
aaa
fdiv
les
mov
adc
jb
pop
pushf
loope
adc
mov
push
sbb
mov
cltd
dec
and
push
jmp
mov
push
xchg
jle
jnp
add
aam
popa
jl
enter
or
push
mov
lcall
mov
or
int
push
inc
ret
xor
and
stos
push
xchg
dec
mov
jge
mov
popa
movsl
sti
repz
fdiv
xor
cmp
mov
loop
add
outsl
sub
sub
ljmp
stc
out
loopne
xchg
fldenv
fsubrs
lods
fsubrs
mov
mov
aas
lods
mov
sahf
insb
lock
fimuls
and
ja
lds
je
fnstenv
int
mov
mov
out
aad
xor
stos
fidivs
out
popf
cmp
xchg
inc
mov
push
xchg
in
mov
loopne
out
mov
mov
xchg
mov
out
es
rorl
jp
cmp
loop
mov
aas
mov
push
aad
mov
aam
mov
lahf
mov
fisubrl
lods
imul
fisttpll
xchg
inc
enter
outsb
xchg
ds
jno
or
cmpsb
and
adc
repnz
ds
pop
adc
mov
push
push
cs
orb
cpuid
fbld
jnp
ljmp
in
stos
sbb
or
std
movsl
push
popa
lahf
mov
push
and
rcrb
jbe
test
mov
shl
sti
xchg
jae
mov
push
in
cs
pop
add
out
out
fwait
mov
popf
orl
xor
or
add
rcr
stos
aaa
ljmp
or
and
scas
jnp
pop
mov
or
ss
dec
and
call
imul
sahf
lret
inc
jge
pop
fcomip
mov
push
mulb
aas
xchg
mov
mov
adc
cmp
mov
divl
popf
mov
dec
push
fists
push
insl
mov
orl
cli
push
loopne
jne
call
mov
push
sub
jg
xor
xor
cmpsl
cmp
in
div
js
in
inc
call
hlt
in
dec
scas
inc
scas
arpl
xor
lods
jo
sub
adc
jo
fadd
das
mov
ficoms
pop
jmp
xchg
dec
push
pop
add
jno
push
enter
sbb
dec
pop
adc
mov
arpl
imul
gs
lock
push
dec
stc
push
cmp
cmp
xchg
in
mov
inc
push
cmc
es
test
mov
add
xchg
push
pop
call
fmull
in
push
das
sbb
test
rcrb
push
jno
ret
icebp
fdivs
xor
rcrl
xchg
shlb
std
cmpl
jmp
and
es
cmpsl
xor
adc
iret
push
mov
das
or
inc
pushf
inc
out
jns
push
mov
es
cmc
lahf
dec
push
scas
xor
pop
push
push
mov
shll
pop
les
inc
roll
std
adc
mov
pop
jecxz
repnz
shll
orl
gs
pop
lahf
adc
leave
mov
int
xchg
int
test
sahf
pusha
loop
cmp
ret
cltd
xchg
int3
push
adc
std
mov
das
decb
testl
lods
inc
jl
clc
out
xchg
popf
sti
imul
inc
cmp
jo
ljmp
inc
mov
pop
xchg
leave
cmpsb
add
adc
push
pop
les
push
nop
cmpsl
in
mov
jl
notl
std
loop
pop
int3
hlt
lods
fildl
test
pop
lea
fwait
jno
aad
f2xm1
adc
shll
cld
aad
call
inc
aad
dec
int3
dec
repz
xchg
test
scas
mov
clc
push
sahf
or
push
dec
lods
loop
xchg
sub
add
out
cmp
add
cmp
jbe
pop
aam
sub
outsl
adc
push
cmp
xor
inc
in
pop
xor
mov
mov
pop
inc
mov
add
push
decl
cli
mov
or
adc
incb
adc
dec
push
aaa
push
push
popf
ficoml
shll
jg
inc
idivb
xor
cmpsl
in
xchg
aad
xor
stos
jns
popf
xor
push
movsb
lods
cmp
nop
aas
out
jne
aaa
xchg
test
xor
sahf
js
iret
mov
jo
xchg
lods
cmp
jnp
xchg
data16
leave
jb
jg
pop
lds
cmp
cmp
mov
cmp
daa
dec
jbe
nop
mov
arpl
and
ds
ret
cmp
mov
ss
in
ret
lret
mov
push
sbb
push
pop
push
mov
push
imul
and
mov
pop
test
es
out
xchg
nop
mov
in
sahf
pop
sub
jne
aam
pop
mov
or
jns
mov
aaa
out
jecxz
fldcw
pop
ret
xchg
vcvtsd2si
in
clc
inc
aam
adc
dec
jl
ja
not
sbb
xlat
testb
ds
dec
jae
jbe
out
lock
xlat
push
sub
popa
cmp
lret
mov
cltd
and
clc
cmp
or
xchg
pop
jmp
pop
rol
add
pop
push
adc
push
sbb
and
jne
mov
dec
repz
mov
cmp
cmp
xor
xchg
push
push
cmp
dec
xchg
jno
pop
imul
pop
inc
sahf
dec
or
inc
xchg
iret
jne
inc
inc
xor
lea
and
cltd
lock
xor
cld
fsubr
mov
xchg
and
jne
mov
pop
jne
or
adc
cltd
inc
orb
jecxz
fbstp
outsb
mov
mov
mov
bswap
push
dec
test
push
shrl
inc
jnp
xor
sub
out
out
aad
movsl
sbb
pop
mov
ror
aad
fnstcw
mov
jbe
push
and
jmp
pop
pop
gs
pusha
pop
xor
xor
lahf
jge
mov
mov
mov
test
sbbb
clc
mov
or
jmp
mov
ffree
push
or
mov
inc
pop
orl
push
mov
or
pop
jl
push
cmp
pushl
fsubl
addl
out
xchg
or
std
push
out
xchg
ret
pop
cmp
pop
cmpsb
jmp
insl
lea
push
cmpsb
ja
jecxz
inc
push
test
movsb
mov
lods
test
cmp
arpl
stos
shll
push
rorl
cwtl
shl
cli
mov
jo
je
ret
stos
rep
mov
xorl
xchg
jecxz
cltd
and
pop
push
ljmp
xor
sbb
xor
sub
aad
jmp
push
addr16
mov
or
pop
push
sahf
or
aad
lods
or
pop
test
jns
mov
cmp
je
xor
push
jle
adc
addr16
gs
imulb
pop
push
lods
into
mov
je
gs
ss
mov
paddsw
xor
xor
cli
test
pop
adc
mov
mov
jmp
shlb
xchg
stos
cli
mov
test
scas
jg
pop
lods
scas
outsl
mov
stc
xor
fcoml
iret
sbb
imul
jnp
fnsave
pop
xchg
cltd
ret
sub
add
nop
scas
ljmp
xor
adc
push
js
add
in
outsb
inc
lcall
mov
and
mov
insl
jp
and
popf
lahf
or
dec
loope
push
cmp
enter
jg
mov
sub
and
inc
jns
xor
pop
jecxz
mov
mov
mov
cmpb
jbe
in
bound
shl
addr16
dec
shlb
fdivs
add
fisubs
mov
dec
jp
jns
lret
inc
xor
mov
cltd
xlat
test
and
dec
cli
ljmp
pop
cwtl
inc
pop
test
cli
cmp
add
mov
cmc
ffreep
insl
shr
and
jb
roll
nop
xor
icebp
add
lea
pop
popa
add
xchg
scas
enter
fbstp
loope
je
adc
jg
xchg
inc
leave
inc
outsb
sbb
cmpsl
loope
idiv
cmp
enter
or
xorl
cli
mov
sti
clc
fidivl
aam
sarb
stc
popf
ret
cmp
or
jns
inc
cmp
add
test
push
popf
inc
jl
adc
lcall
xchg
imul
leave
repnz
daa
sbb
mov
adc
sbb
in
aam
stos
nop
in
movsb
pop
and
push
aam
int
mov
loopne
add
xchg
mov
sbb
adc
call
idivl
jnp
in
adc
mov
lahf
xchg
hlt
mov
fdivl
sbb
sub
mov
inc
gs
repnz
fnstenv
jecxz
mov
jecxz
lods
pusha
mov
mov
mov
add
lahf
decb
or
mov
inc
in
sahf
cmc
cmp
enter
data16
in
and
pop
inc
aam
lods
jg
stos
mov
int3
scas
lret
in
les
aas
mov
lods
xchg
mov
rcrl
out
cmp
push
mov
pop
lret
movsl
dec
mov
cmp
dec
testl
pop
into
inc
adc
xchg
mov
add
out
out
iret
call
mov
dec
popa
cli
mov
call
cltd
dec
ljmp
clc
sub
shlb
mov
xchg
jle
test
int3
pop
cmp
jno
not
das
inc
xchg
shll
fnstsw
inc
mov
fcomip
jns
test
push
inc
lock
sarl
fwait
lcall
rcrb
push
insb
pop
stos
dec
pop
jb
nop
cmp
rorb
ljmp
sub
adc
rolb
icebp
add
adc
adc
mov
jo
loopne
mov
mov
fisttpll
adc
dec
and
dec
push
inc
or
fwait
xchg
dec
je
jg
and
movsb
mov
imul
inc
and
adc
sbb
int
pop
inc
roll
rcrl
test
mov
loop
push
pop
dec
xchg
leave
adc
sub
jae
bound
cmc
adc
cmp
xlat
je
cmp
add
cld
fcompl
dec
fsubrs
jg
fwait
jbe
or
lds
ljmp
std
orl
lea
push
pop
filds
jl
aaa
adc
int3
lds
and
filds
in
cmc
imul
icebp
movsb
xchg
lea
ja
jge
loopne
add
fs
push
imul
pop
cwtl
xchg
pop
mov
fnstenv
sub
cs
mov
inc
lds
std
loopne
inc
lods
xor
into
xchg
or
inc
les
int3
mov
mov
mov
ret
iret
xor
push
fisubs
leave
cmpsb
ljmp
jo
into
xorl
int
xchg
sub
adc
xchg
mov
insl
arpl
mov
push
stos
jle
mov
fadds
mov
xchg
push
in
cmpsl
xor
pop
loop
cli
push
cmp
pop
bound
pop
mov
xchg
mov
pusha
push
test
negl
mov
scas
xchg
add
adc
mov
loop
sbb
jo
loopne
clc
sbb
cmp
stos
sbb
loope
loop
xor
das
ja
fnstcw
fcompl
xlat
ret
mov
in
gs
shr
stos
les
scas
loop
mov
fbstp
pop
dec
das
add
dec
and
int3
loop
mov
sahf
inc
movsl
push
sahf
xlat
outsb
add
insb
js
daa
add
fsubrs
jae
mov
jmp
lcall
mov
popa
ja
mov
icebp
stc
xor
js
xor
push
jecxz
cld
or
hlt
push
clc
jns
mov
fldenv
dec
jbe
lods
adc
dec
lcall
clc
mov
cmpsl
dec
loop
xorb
sbb
sahf
ja
cli
push
enter
jmp
inc
mov
pop
mov
test
int3
movsb
pop
cmpsb
stos
add
jecxz
int3
push
jmp
test
xchg
mov
jno
shlb
jmp
lret
cmp
adc
mov
iret
mov
cmp
cmc
std
sub
pop
std
add
adc
enter
mov
push
and
dec
xchg
lds
inc
orb
sub
call
xor
dec
cs
push
cmpsl
movsb
sbb
xchg
aaa
test
lods
sahf
out
mov
sub
mov
jns
inc
jnp
pop
mov
xor
push
ret
daa
mov
sub
push
frstor
lea
mov
mov
ret
pusha
inc
fidivl
mov
insl
popf
pop
repz
mov
clc
rolb
xor
add
jmp
jae
cmp
inc
pop
cmp
scas
and
xchg
mov
enter
sbb
lock
enter
adc
add
cmpsb
lods
mov
mov
icebp
jbe
mov
aad
subb
mov
clc
or
push
xor
sub
ss
pop
xor
jecxz
push
mov
cwtl
dec
jecxz
jno
lcall
rcrb
sbb
movsb
or
mov
pop
mov
ja
rcrb
add
test
jecxz
and
push
loop
or
xor
fidivrl
xor
inc
push
idivb
sarb
rorb
popf
jmp
and
test
imul
mov
negl
mov
sbbb
mov
std
ds
push
xor
shl
adc
loopne
add
je
aaa
test
lds
lret
jge
xchg
push
push
cli
pop
test
aaa
dec
push
mov
mov
popa
jecxz
push
jge
mov
enter
sub
or
add
in
popa
pop
std
cli
fistpll
and
ss
std
std
ljmp
nop
je
pop
cmp
das
mov
cmp
loop
pop
daa
cmp
sarb
ffreep
test
fs
sub
es
jne
imul
mov
fs
xor
lock
sbb
jae
mov
int3
mov
pop
lock
imul
jno,pn
jo
daa
mov
mov
addr16
je
xor
and
stos
sbb
and
lods
pop
jecxz
push
shll
repz
xchg
cmpsb
out
push
sub
sbb
ljmp
fs
iret
xor
or
adc
fnstcw
es
mov
data16
cld
xchg
push
ds
sub
lods
js
test
pop
push
int
outsb
ja
outsl
in
out
std
dec
cld
repnz
xlat
and
adcb
cltd
lea
adc
lods
repz
out
adc
xchg
jns
add
xor
add
dec
lret
pop
pop
aaa
ret
sbb
adc
les
fadds
push
lods
mov
push
xor
xor
and
fildll
es
xchg
cmp
imul
inc
das
mov
test
das
jno
lret
inc
jle
mov
out
in
sbb
into
mov
cmp
inc
fnstcw
sarl
mov
mov
dec
out
ss
pop
test
sbb
pop
repnz
mov
pop
push
cwtl
mov
mov
cmp
aad
adc
test
movsb
fcmovnb
add
adc
cmpsl
in
shrb
dec
mov
idivb
push
addr16
pop
arpl
fdiv
sub
xchg
es
xor
fcmovnbe
mov
dec
sti
jno
int3
arpl
xor
testb
mov
shrl
xchg
rorl
mov
cmpsl
sbb
pop
mov
mov
or
lret
fistps
xorl
dec
cmp
add
lret
add
int3
call
xchg
push
pop
cltd
movsb
aad
dec
adc
pop
shlb
repnz
clc
inc
xor
loopne
dec
repz
int
and
ljmp
mov
cmpb
push
xchg
bound
mov
ret
mov
mov
in
pop
mov
arpl
sbbb
mov
pop
andb
sbb
jg
mov
cmp
add
outsl
inc
jo
cmp
loop
int
add
arpl
pop
repz
mov
add
cmp
sbb
int
cltd
mov
adc
je
pusha
pop
mov
lods
cmp
mov
and
aas
test
imul
insl
call
loopne
push
dec
or
cltd
sub
mov
scas
inc
sahf
mov
and
inc
inc
pop
jge
sbb
sub
rcl
and
not
jo
xchg
jne
les
fldz
dec
add
call
addr16
ret
sbb
xchg
inc
mov
testl
stos
xchg
xchg
or
mov
outsl
mov
imul
pop
xchg
jno
cmp
mov
mov
mov
in
test
mov
test
lods
adc
shlb
outsl
rol
or
fcoms
inc
divl
inc
pop
repnz
mov
push
orb
pop
movl
ror
ret
call
jae
loope
mov
aad
adc
sub
adc
jp
jo
aas
mov
push
push
fmul
div
hlt
add
mov
enter
cmp
push
mov
daa
loop
lea
xor
loop
mov
data16
inc
ret
add
pop
sub
movsl
inc
jecxz
pop
and
sbbl
mov
dec
subb
out
negb
push
nop
sbb
cmc
xor
xor
jno
outsl
inc
mov
push
add
add
xchg
xchg
dec
fcmove
fldcw
xor
repnz
mov
cwtl
jge
adc
mov
jmp
int3
pop
in
fisttpll
mov
les
mov
test
mov
pushf
push
push
add
sbb
inc
jecxz
adc
jne
imull
ss
push
sub
repnz
gs
into
int3
xor
lret
int
mov
popf
addl
lahf
and
outsl
jo
mov
faddl
add
es
mov
cwtl
push
sbb
add
xlat
movsb
lods
test
mov
repz
nop
cmp
mov
push
inc
jmp
push
lock
nop
or
mov
xchg
pop
mov
xchg
xor
xor
imulb
mov
in
add
ljmp
cwtl
pop
add
cmp
jecxz
xor
push
jnp
and
repnz
fisttpll
mov
inc
insl
pop
jb
xor
mov
xchg
cmp
xor
inc
dec
loope
andb
pop
xchg
xchg
es
stos
push
std
dec
sbb
inc
push
add
adc
shrl
and
cmp
nop
jno
dec
pop
out
rcrl
and
dec
mov
je
cmp
and
pop
cmc
repz
inc
pushf
ljmp
pop
xchg
fwait
mov
sbb
insl
loopne
ret
cmp
je
pop
adc
out
push
dec
roll
xchg
icebp
cld
fldenv
lret
and
mulb
mov
fs
ss
cwtl
bound
xlat
xchg
in
in
or
leave
out
adc
insb
cli
dec
popa
sbb
pusha
mov
mov
sbb
loope
jb
fs
xchg
data16
mov
cwtl
jg
mov
repnz
bound
sbb
insl
mov
sbb
arpl
xor
push
cmp
repnz
jle
scas
or
pop
ds
enter
in
push
mov
lods
mov
dec
loope
sarb
sbb
fsubp
inc
fwait
mov
push
das
in
push
lret
adc
xchg
xchg
inc
and
dec
pusha
push
cmp
dec
inc
mov
pusha
xor
insl
aas
fst
rcrb
add
dec
je
mov
mov
add
xor
pop
adc
jae
popf
rorb
xchg
push
fbld
mov
and
in
jmp
jmp
push
mov
dec
push
or
or
mov
sub
movl
clc
mov
mov
pop
xchg
sub
stos
ds
lret
dec
idivb
lods
in
nop
aas
mov
orl
aad
ret
adc
popa
sub
enter
sub
jmp
scas
sub
lretw
jle
add
pop
and
mov
mov
or
mov
aam
xchg
outsb
test
or
push
mov
add
in
or
mov
ja
mov
mov
fcoms
and
push
push
cmp
cmp
fsts
jae
mov
dec
fdivl
mov
out
jb
pushf
rclb
sub
outsb
dec
shrl
roll
ret
fwait
cmc
outsb
dec
icebp
sub
push
mov
outsl
mov
dec
sbb
adc
push
loope
cmovae
add
mov
sbb
sbb
ret
inc
mov
jne
or
pusha
das
out
mov
out
sarl
std
pop
dec
mov
cmp
push
testb
pushl
push
jb
jge
mov
data16
lds
gs
ror
add
leave
stos
mov
sub
jl
inc
pop
mov
inc
push
cmpsl
jo
jns
int
adc
in
mov
sub
outsb
pop
out
lcall
adc
push
inc
aam
outsb
inc
icebp
loope
es
xor
daa
stos
outsb
xor
aam
xchg
lods
inc
sbb
push
sbb
cmp
std
sahf
jle
xchg
sarl
dec
stos
arpl
jmp
xchg
xchg
mov
cld
shl
test
out
xchg
mov
leave
fcoml
mov
mov
inc
pushf
push
lret
or
mov
dec
scas
in
xor
aaa
clc
movsb
arpl
bnd
mov
mov
adc
jg
mov
inc
rcr
shl
sub
sarb
lcall
test
jmp
cmpsl
mov
push
pushf
adc
imul
out
xchg
dec
mov
mov
mov
test
mov
jnp
adc
mov
iret
test
fstpt
push
cli
mov
or
lods
repnz
push
shrl
outsb
mov
hlt
cli
or
mov
lea
test
and
mov
stos
movb
aaa
fistpll
jne
jg
ljmp
out
cmp
pop
aas
push
mov
push
mov
pop
scas
pop
xlat
xor
jns
popa
and
test
or
cmp
sub
addr16
mov
mov
mov
out
xchg
imull
push
mov
cmp
jno
adc
mov
lcall
scas
stc
mov
xor
mov
outsl
sub
out
repnz
jo
xchg
mov
dec
gs
mov
or
pop
sbb
scas
add
xor
pop
lods
int
dec
int
ss
add
or
adc
stos
add
inc
ror
das
fbld
inc
mov
insb
lock
inc
ds
inc
ss
push
fildl
stos
jp
add
rolb
shl
xor
sarl
cwtl
out
push
mov
mov
pop
or
sub
push
shll
inc
sbb
xor
jbe
jmp
pop
and
roll
pop
adc
lds
push
push
popf
lods
in
jae
xchg
pop
and
or
cmp
shll
scas
lret
push
outsl
nop
xchg
hlt
pop
adc
and
test
and
mov
pop
repnz
decl
jp
cmp
add
dec
mov
pusha
add
lahf
je
cmpsl
outsl
xor
xchg
sti
stc
cli
cmpsb
dec
or
imul
loop
mov
mov
or
or
scas
les
cmp
gs
push
inc
mov
jle
sbbl
mov
outsb
test
inc
in
ja
in
mov
loopne
aad
sub
sub
jg
adc
add
push
pop
dec
out
or
push
mov
cmp
cmc
inc
ret
stc
cmp
mov
iret
sbb
pop
hlt
pop
popf
shl
scas
pop
adc
dec
aam
fucomp
push
insb
mov
popa
xchg
mull
xchg
cmp
les
xchg
jge
add
outsl
pop
mov
jmp
xor
arpl
jmp
fstps
xorl
stos
push
pop
es
rol
pop
mov
xchg
test
and
in
adc
sub
daa
sahf
mov
mov
sbb
xchg
fmuls
inc
push
scas
xor
ret
clc
and
mov
stos
sub
loopne
xchg
lods
add
inc
out
jnp
out
mov
adc
push
xor
pushf
arpl
insb
dec
into
jno
pop
sbb
jb
leave
js
adc
stos
jb
stos
xchg
add
lcall
rorl
mov
push
cmp
mov
inc
mov
or
pminub
dec
push
hlt
xor
je
sahf
jg,pn
pop
adc
lea
out
mov
popf
mov
jbe
shrb
adc
jne
jecxz
int3
sub
inc
inc
outsb
sub
jle
stos
or
pop
scas
xchg
dec
pusha
fs
pop
repz
push
sbb
jb
imul
mov
add
out
cmpsl
mov
shl
aaa
addb
mov
or
ja
shlb
push
cmp
data16
lock
outsb
hlt
jnp
movsl
pushf
imul
add
mov
adc
sbb
push
call
pusha
ret
inc
mov
aad
fsubrl
mov
push
cwtl
mov
xchg
xchg
loop
loope
push
stc
imul
loope
push
lods
out
jns
test
lret
xchg
cmpsl
into
int3
pushf
lds
or
sub
push
pop
mov
fists
ffree
mov
stc
mov
adc
lds
xchg
lcall
jg
sbb
popa
je
dec
inc
mov
dec
lcall
cmc
fistps
fwait
rol
inc
ret
or
popa
mov
cmp
cs
mull
and
mov
out
mov
in
insl
int
addr16
or
rolb
stc
lods
dec
xchg
jae
decl
out
fcmovnb
mov
imul
stc
movsl
ret
sbb
out
mov
push
and
push
or
nop
std
adc
jnp
xchg
adc
inc
outsb
cmp
fistl
jg
das
stos
fsub
mov
xor
ret
xlat
or
loope
sti
mov
sbb
push
bound
pop
push
pop
jecxz
cmpsl
fistl
xchg
pop
jno
mov
jnp
cmpl
shrb
sahf
incb
pop
das
das
loope
outsb
fistl
call
adc
leave
push
jbe
mov
sub
jle
pop
mov
sbb
xor
pop
lret
adc
xor
rcrl
cmp
mov
ds
sbb
lds
pop
xchg
addl
iret
lock
fsubrl
mov
fsts
sub
aam
movsb
addl
je
mov
loope
or
sbb
fdivrp
call
sbb
sbbb
daa
pop
add
cld
adc
xchg
call
and
test
cli
pop
bound
leave
aad
jl
lret
pop
lds
add
stos
cld
push
or
cmp
jns
pop
sbb
add
xor
or
mov
and
dec
movsl
paddusb
pop
mov
ficoml
ja
mov
sub
inc
jnp
dec
xor
movsl
fnstenv
cmp
iret
dec
or
jo
jns
ja
sub
into
or
pop
xchg
xchg
mov
mov
mov
into
jne
pop
lods
clc
push
xchg
mov
imull
or
xchg
out
mov
in
fidivrl
inc
cmpb
mov
sub
loop
out
pusha
cmp
movsb
lahf
xchg
jmp
shl
adc
mov
sbb
jecxz
pop
call
subb
les
aad
jae
and
adcb
push
add
rol
dec
jmp
push
mov
aaa
adc
sbb
das
adc
pop
sbb
mov
ds
fidivl
sbb
movsb
xchg
lret
jae
icebp
or
dec
fistl
push
lds
dec
push
push
jl
or
jge
mov
jl
cwtl
rcrb
lret
jmp
int3
xchg
sbb
pop
inc
shlb
cwtl
fistpll
out
mov
lock
pop
or
int
and
in
out
addr16
sti
jl
pop
cltd
jl
jb
popf
dec
icebp
dec
pushf
aas
sahf
xacquire
jno
ret
ja
movsb
or
outsb
xor
push
lret
lret
push
das
dec
push
je
or
cmp
xchg
mov
int
adc
into
pop
loopne
pop
aad
sbb
out
js
xchg
pop
xchg
inc
aaa
mov
shrb
out
xlat
dec
test
add
inc
inc
in
in
pop
xor
dec
inc
inc
sub
lea
jmp
inc
insb
jge
inc
insl
nop
clc
icebp
enter
or
jo
dec
fimull
in
daa
nop
pop
call
loope
inc
repz
lcall
movsl
iret
or
lcall
jbe
popa
mov
sub
dec
xlat
push
mov
push
xchg
fisttpl
movsb
sbb
incl
ljmp
fisubs
xchg
fs
cmp
lret
adc
in
div
lods
filds
sahf
mov
push
out
imul
cwtl
lahf
sarb
mov
jge
dec
mov
add
jg
pop
scas
mov
xor
outsb
inc
outsb
pop
movsl
lret
xchg
sbb
cwtl
xor
inc
pop
js
mov
add
cmpsb
mov
push
xchg
sub
adc
mov
mov
inc
pop
fwait
sub
shl
ljmp
adc
lock
orl
and
mov
adc
inc
dec
out
mov
imul
out
sub
out
out
inc
push
out
fldenv
xor
xor
mov
jne
repnz
lods
insb
jle
mov
or
adc
push
mov
andb
adc
push
mov
decb
hlt
mov
jg
imul
xor
dec
inc
mov
clc
stc
xor
int
cltd
scas
jnp
xor
jg
cmc
mov
fstl
cmc
sahf
xchg
iret
scas
rol
addr16
in
lock
sbb
cmp
xchg
pop
mov
inc
sbb
sbb
and
imul
mov
xor
fcmovnbe
jle
mov
pop
fnsave
rcll
insb
sbb
mov
mov
push
cltd
scas
fistpl
leave
outsb
dec
mov
inc
mov
into
pushf
cmp
out
mov
push
push
cld
mov
into
pop
mov
mov
pop
xor
jnp
cmp
daa
int3
push
movsb
add
dec
jb
fucomp
jnp
fisubrl
inc
add
out
jl
jo
lret
data16
mov
insl
mov
pop
mov
xlat
jmp
fstpl
xchg
ja
stc
cli
pop
ljmp
cltd
cmc
lods
das
loop
ss
les
jnp
lods
mov
jle
fiaddl
lock
test
and
or
xor
mov
fildl
test
or
mov
subb
int3
shlb
ljmp
mov
xor
mov
std
insl
not
sub
fstpl
or
leave
in
into
insl
aad
pop
pop
paddq
sub
stos
out
fs
xor
or
fldcw
dec
adc
das
xor
fimull
adcb
pop
and
mov
mov
push
xor
int3
xor
pop
mov
inc
mov
jmp
inc
lock
xlat
mov
pop
push
test
rorb
or
rolb
addr16
ret
ds
cmpsb
jp
cmp
pop
pop
mov
jp
enter
cltd
cmp
ficompl
or
xchg
jecxz
or
push
mov
mov
jbe
cmpsb
iret
neg
adc
xchg
pop
jp
mov
shl
repz
add
cmpsl
add
mov
pop
xchg
sbb
int
or
js
or
mov
pop
aaa
cltd
push
mov
lcall
cld
aaa
fidivrl
rorl
out
fwait
and
enter
mov
shlb
jl
sbb
adc
in
inc
in
js
push
mov
jae
enter
xchg
out
mov
xlat
psraw
lods
in
cmp
jnp
shlb
push
shrb
outsl
add
push
nop
pushf
sbb
adc
mov
in
jmp
or
mov
lock
roll
cmc
daa
add
dec
mov
fistps
popa
pop
dec
sbb
repz
xor
push
mov
push
cmp
add
mov
mov
or
in
xorl
aad
fstl
fdivrp
dec
mov
shll
mov
fcomip
ret
and
int3
cmpsl
mov
xchg
mov
mov
mov
lahf
daa
jne
xor
push
push
repnz
add
inc
pushf
xchg
mov
test
scas
inc
mov
and
cmp
inc
cmp
mov
testl
mov
addr16
in
call
sbb
push
xlat
sahf
add
mov
pop
jp
jb
cmp
push
xor
fbld
push
pop
xlat
dec
jge
out
repnz
mov
adc
stos
add
mov
cltd
lcall
jmp
adc
adc
mov
pop
inc
dec
or
lods
clc
cmp
push
je
push
jp
adc
or
hlt
fnsave
sbb
pop
popa
cmp
and
or
and
inc
adc
shll
ret
repz
push
pop
adc
adc
fnsave
cld
xor
iret
pushf
mov
mov
adc
out
shr
lods
and
adc
jae
xchg
out
adc
jl
fs
mov
dec
adc
test
jp
sahf
imul
adc
std
add
pop
xor
in
popa
mov
adc
jno
loop
inc
push
insb
mov
filds
insl
mov
and
mov
sub
scas
pop
mov
inc
mov
aam
shr
inc
inc
imul
rcll
leave
dec
push
jecxz
sahf
fs
js
or
sub
lret
pop
sbb
cmpsb
loopne
xor
sub
cmp
jmp
or
lods
xor
fs
adc
bound
leave
and
dec
cmp
xchg
call
pop
std
sti
dec
mov
cmp
push
add
inc
das
or
dec
mov
dec
jle
xchg
fwait
call
mov
mov
kandnb
cmp
shll
xor
mov
out
daa
mov
fisttps
js
das
jg
out
mull
sbb
inc
int3
dec
insb
xor
pop
shrl
sbb
mov
jb
jne
and
pushf
mov
lods
inc
ljmp
jg
push
movsb
into
jmp
push
outsb
mov
jge
out
movsb
dec
iret
mov
push
or
cmpsb
mov
pop
sahf
xor
jnp
or
insl
cmp
cwtl
push
mov
ljmp
icebp
xchg
fcmovnu
adc
stos
aaa
divl
lahf
sbb
lret
xchg
xchg
stos
sub
push
pop
jb
imul
pushl
sbb
into
push
sbb
push
nop
ret
cmp
dec
pop
add
mov
dec
jle
fld
daa
sbb
repz
push
arpl
stos
lahf
jne
movsl
js
add
sarl
test
ja
out
mov
pop
cmpsb
adc
lret
pop
repnz
sti
mov
jno
sub
mov
xor
cmp
es
dec
fwait
push
dec
pop
jbe
and
pusha
aam
popf
inc
ret
lods
and
push
mov
popf
hlt
ret
push
icebp
hlt
xor
sub
push
push
push
cmc
inc
cs
jg
sbb
xor
jae
xor
iret
popf
mov
outsl
in
sbb
sbb
jns
loop,pt
push
inc
imul
loopne
inc
and
sub
push
jge
adc
es
jl
pop
ja
inc
cli
inc
stos
dec
xor
sub
and
dec
fsubrs
mov
sub
mov
imul
pop
push
mov
or
into
sbb
and
mov
add
mov
jne
push
inc
jmp
sarb
push
ret
mov
add
sahf
popf
push
int3
lahf
xchg
loop
pop
es
rcl
mov
mov
cmp
fsubr
jb,pn
cmp
test
lock
jmp
mov
dec
cmpl
repnz
stc
or
or
jne
into
repnz
push
add
pop
jle
insb
adc
sbb
adc
daa
dec
enter
dec
or
scas
test
cmp
sti
mov
pusha
sub
iret
sbb
sti
loopne
cltd
sub
cmp
push
push
sbb
mov
push
hlt
or
sub
movb
iret
cs
cmc
add
addl
loopne
cmp
or
arpl
daa
insl
mov
scas
sbb
mov
test
mov
xchg
mov
jb
aas
les
outsb
pop
mov
repnz
mov
pop
jge
push
or
adc
xor
cmpsb
int
adc
pop
mov
or
pop
jnp
bound
popa
stos
sbb
addl
mov
pop
into
insb
lcall
add
push
iret
mov
lea
lret
rolb
adc
ret
test
mov
pop
sarb
ficomps
je
mov
mov
test
mov
or
shr
lea
ds
pop
jge
cmp
pop
int3
in
ljmp
mov
mov
insl
add
in
xchg
ficoms
push
adc
push
pop
clc
int3
cmp
ds
inc
cmpsl
loope
add
ret
push
push
xor
insl
jae
push
std
adc
andb
adcl
sub
push
loop
movsb
mov
push
bound
in
inc
jle
dec
sbb
sub
mov
stos
rclb
lahf
or
jle
xor
pop
dec
mov
andb
and
inc
xchg
xor
lods
jge
data16
ja
mov
aaa
mov
pop
ljmp
out
int
push
outsb
cs
pop
test
stos
gs
add
gs
lahf
sbb
or
loop
push
mov
and
xchg
push
shr
out
out
scas
out
jg
pop
mov
dec
jae
je
xor
jmp
push
cmp
aas
imul
iret
repnz
lret
in
xor
and
or
fadd
mov
leave
and
adc
or
in
orl
lcall
push
insl
repz
mov
push
jbe
or
std
sbb
and
lahf
fnsave
mov
leave
cltd
or
loopne
test
lock
and
xchg
or
cmpsb
mov
jmp
scas
xchg
dec
lret
hlt
cmp
mov
cwtl
idivb
enter
push
mov
pop
or
cmpsl
iret
push
fs
rcrb
mov
ds
pop
das
or
xchg
add
aad
mov
fimuls
inc
sub
jb
jg
aam
add
adc
push
pop
add
shll
popa
push
adc
jle
mov
pop
push
loopne
cmp
out
sbb
ret
mov
mov
push
xor
jo
lods
xchg
sub
mov
push
rcrb
xchg
xchg
insb
adc
xlat
push
dec
mov
xor
int3
sub
jb
sarl
mov
shlb
xor
or
dec
add
out
sbbl
pushf
sub
jge
pop
xor
sbb
or
mov
mov
pusha
iret
mov
push
out
out
sbbl
pop
in
scas
dec
and
and
pop
xor
mov
push
addb
iret
testb
jg
aas
add
xor
mov
mov
pop
push
or
fcom
xchg
fimull
es
pop
cmc
jecxz
ja
push
push
int3
aas
adc
push
or
lcall
add
mov
fistl
xchg
sbb
arpl
mov
mov
jno,pt
mov
mov
fwait
push
popf
pop
adc
pop
orb
mov
sub
inc
repz
mov
les
lret
orl
inc
jae
mov
test
sbb
imul
mov
mov
inc
dec
sub
mov
sbbl
shlb
gs
lret
sbb
fs
jmp
repz
dec
ret
add
stos
popf
fstpl
xchg
cmpb
js
nop
lds
xor
jg
push
mov
jp
jnp
stos
cs
dec
push
dec
sarl
outsl
dec
cmpsl
in
mov
jnp
icebp
mov
dec
aaa
cmp
popf
add
add
fs
test
jb
sbbl
mov
sbb
stc
shll
cmp
fsubrs
xchg
pop
lret
out
out
icebp
ret
test
dec
popf
mov
pop
mov
mov
mov
sub
xor
add
cmp
push
shlb
pop
insb
mov
testb
mov
inc
mov
pop
pavgw
mov
arpl
xor
in
jl
into
pop
out
lahf
xchg
ret
inc
pop
pusha
add
adc
push
inc
iret
xlat
pop
jnp
and
xor
cwtl
mov
imul
adc
imul
mov
pop
sbb
or
lahf
leave
and
mov
and
mov
outsb
pop
xor
cwtl
out
es
xor
push
push
pusha
gs
mov
cmp
sub
pop
jnp
sub
sub
or
adc
clc
out
mov
dec
pop
jecxz
movsl
adcb
xchg
mov
cmp
jg
scas
into
jns
stos
iret
shl
pop
xor
fisttps
inc
decl
pushf
repz
sbb
rorb
sbb
mov
fdivrs
xor
xor
mov
test
iret
data16
push
cmp
mov
cld
frstor
addl
dec
into
sub
mov
adc
mov
mov
xor
sbb
jns
cwtl
push
test
sti
neg
mov
jo
in
bsr
cld
andb
adc
inc
and
movsl
test
xchg
jl
xchg
jmp
or
fisubrs
xchg
stc
xor
sbbl
aam
or
fmul
sub
out
adcl
or
xor
xor
push
insl
sbb
sub
rcll
xlat
dec
daa
popf
rorb
pop
push
mov
call
add
imul
mov
lds
and
gs
loopne
mov
adc
jge
out
es
rcll
mov
xchg
mov
rol
mov
push
nop
scas
jp
lahf
inc
mov
or
cmpsb
sahf
fadd
cli
sub
cs
insb
cwtl
lds
and
mov
negb
push
xor
pop
enter
push
pushf
jno
lds
aad
scas
add
xlat
sub
outsl
cmp
shrl
int3
jge
mov
and
inc
xchg
pop
repnz
decl
push
daa
fsub
ret
lods
stc
mov
mov
add
repz
xor
into
ja
inc
int3
add
push
sbb
pop
cmp
sbb
mov
xchg
aad
fwait
mov
sbb
shr
scas
negb
jp
aad
cld
lcall
and
dec
out
sub
negl
xchg
bound
inc
pop
dec
pop
xor
dec
sub
xor
cli
scas
dec
or
test
and
arpl
fs
icebp
sahf
dec
jg
inc
push
push
movhlps
loopne
test
push
stos
add
gs
hlt
fxch
movsb
mov
js
add
clc
inc
scas
cwtl
dec
repnz
cltd
mov
pusha
cwtl
jo
inc
xor
fimull
push
test
inc
dec
call
lock
pusha
cmp
and
clc
daa
or
imul
pop
jo
dec
inc
pop
mov
mov
xor
mov
jno
sbb
int3
subl
aaa
add
pushf
test
addb
mov
jg
or
int
js
dec
push
adc
and
pop
loope
in
aad
enter
lods
dec
xor
aaa
cmovnp
push
out
popa
incb
sbb
mov
jp
cmpsb
pop
xchg
andb
aad
dec
push
das
xchg
pop
test
icebp
adc
xor
nop
push
push
pushf
mul
in
popf
sub
nop
pop
xchg
into
fcompp
xchg
movsb
mov
cmp
mov
add
shlb
lret
lods
push
or
mov
std
push
jne
push
xor
insb
or
js
xlat
jno
ud2
fistpl
pop
repz
aam
sbb
jle
in
xchg
loopne
mov
in
mov
ret
ds
lods
xor
lock
aam
and
repnz
or
jns
jmp
ja
jb
dec
mov
mov
fsubrs
jns
lock
push
cwtd
mov
xchg
hlt
aaa
scas
mov
iret
mov
xchg
test
inc
sbb
pop
pop
dec
lods
pop
jp
jg
and
adc
in
add
xchg
push
outsb
xor
sub
int
jo
pop
pusha
push
aas
loopne
jp
add
jecxz
in
xor
lea
jge
lods
inc
jge
jne
inc
xor
adc
inc
mov
cmpsb
pop
push
fstps
cli
notb
xchg
adc
mov
cmp
push
fmuls
inc
cmp
push
xor
subl
or
jl
add
popf
idivl
dec
dec
stos
scas
lret
imul
imul
adc
pop
cmp
push
das
sbb
jmp
push
dec
fwait
add
push
pop
push
inc
jo
test
push
pop
mov
orb
jge
cmp
stos
mov
out
pop
dec
int3
rclb
das
jbe
test
pop
test
cmpl
cltd
sub
push
das
lret
xor
leave
outsb
fmul
sbb
or
add
jno
ljmp
clc
xchg
mov
dec
ljmp
das
rcr
sarl
mov
push
repnz
sub
cmpsl
sti
pop
sti
push
ss
cltd
movsl
push
mov
mov
xor
inc
xchg
stos
mov
sub
jl
cmp
push
xchg
jae
imul
leave
xlat
movsb
test
pop
push
inc
add
enter
mov
and
es
sbb
adc
xchg
insb
outsl
mov
pop
ljmp
push
mov
push
fistl
sub
dec
xchg
cmp
or
cmp
mov
adc
xchg
xchg
or
pop
enter
or
ds
mov
pushf
mov
addr16
push
lret
sti
sbb
or
pop
mov
stos
jno
test
pop
jmp
jmp
mov
std
cmp
jo
pop
jns
pop
insl
mov
push
hlt
mov
push
cmpl
pop
das
les
into
xor
cli
pop
jmp
into
mov
lods
and
fiadds
stc
out
or
pusha
sti
jb
cli
aam
jge
adc
arpl
clc
sbb
iret
add
push
mov
out
add
movsl
dec
lahf
stc
push
dec
dec
mov
push
sbb
jl
mov
fistpl
push
mov
fists
nop
push
push
xbegin
cmp
sub
or
punpckhdq
pusha
fldenv
dec
ret
sub
rorb
xchg
push
fimuls
or
xchg
lret
movsb
scas
in
inc
lods
movsb
and
pop
nop
sbb
push
inc
push
movsl
sbb
mov
imul
dec
into
mov
stos
aas
push
rcrb
mov
wrmsr
pop
dec
lea
stc
fcoml
pop
sbb
xchg
xchg
mov
mov
sbb
or
cmc
pop
mov
adcb
mov
es
xor
push
adc
pop
imul
repnz
fcomps
out
cmp
jne
push
outsb
mov
mov
cmp
cmp
and
stos
imul
mov
push
bound
and
sub
ja
adc
pop
ljmp
hlt
ret
add
outsb
insl
aam
stos
pop
pop
push
stos
mov
scas
movsb
mov
negb
inc
enter
jb
popa
mov
mov
leave
in
cmp
xor
mov
into
sbb
incl
daa
and
pop
clc
rcrl
pusha
mulb
mov
xor
jbe
sbbl
sbb
faddp
outsl
scas
cmpsl
stos
cwtl
mov
dec
lcall
out
dec
adc
xor
es
cli
testl
adc
add
les
shll
mov
std
scas
into
mov
inc
and
nop
push
add
in
arpl
dec
loop
shll
test
mov
push
mov
lds
test
jnp
pop
xchg
and
mov
add
lods
pop
in
cltd
adc
stos
cmp
cmp
xor
pushf
ljmp
push
adc
mov
sub
or
cld
lcall
cmc
aas
or
push
sbb
gs
out
popa
loope
cmc
loope
jecxz
fisubl
insl
loope
sahf
shlb
cmp
pop
lea
stos
stc
mov
cmp
lods
push
cmp
into
jp
repnz
fstpt
in
nop
lea
std
out
rcrl
add
dec
std
mov
pop
mov
lods
pusha
imul
sbb
addr16
gs
orl
jo
sbb
pop
and
sahf
or
js
mov
cmp
mov
cmp
insb
jl
enter
fdivl
add
pop
inc
push
jle
in
dec
and
push
jno
pop
inc
js
sahf
jo
jle
cmp
hlt
roll
mov
ja
arpl
pop
and
add
and
mov
test
and
imul
and
in
sahf
les
sbb
and
out
add
aaa
mov
repnz
or
sarl
add
into
or
pop
into
add
sarb
or
aaa
push
jl
cmp
arpl
push
outsl
call
test
jne
sahf
daa
or
mov
in
mov
cmpsb
mov
push
test
add
push
jne
in
mov
addl
push
mov
dec
jae
outsb
mov
mov
mov
insl
gs
or
mov
and
fmull
bound
imul
mov
ljmp
xor
jo
pop
xchg
and
xchg
out
cli
xchg
dec
sbbl
loope
and
in
shrb
dec
push
add
add
mov
aas
mov
rcrb
xchg
sti
int
jecxz,pt
lcall
loope
cmpsb
sub
mov
push
out
les
push
xor
cmp
dec
pushf
fwait
jecxz
jg
ja
stos
enterw
mov
gs
or
test
fdivrs
jl
and
xchg
jb
push
and
xchg
push
outsl
jbe
ljmp
out
inc
in
test
faddl
cmp
scas
mov
xlat
jb
mov
sarb
jge
mov
scas
add
out
cwtl
add
mov
ljmp
sbb
je
sbb
enter
insb
aam
jl
imul
sbb
inc
add
out
pop
or
inc
mov
sub
add
xchg
cmp
jmp
sarl
int3
das
dec
push
cltd
or
lret
jne
push
rcl
jae
mov
dec
icebp
call
push
fisttpll
popf
ret
mov
lret
repz
push
sti
or
adc
push
in
push
add
mov
or
shr
mov
lea
int
dec
adc
cli
mov
das
push
loopne
fs
fsubl
arpl
mov
leave
lock
cmp
and
sahf
call
adc
loop
or
addl
xor
lods
cmp
pushf
mov
shrl
mov
ja
fwait
aad
aaa
in
xor
mov
and
push
inc
jb
pop
repz
popf
xor
cmp
popf
mov
aaa
call
out
add
dec
adc
leave
out
dec
insl
fimuls
es
cmpsb
pusha
sub
ss
imul
dec
push
lss
push
or
jge
jno
cmp
push
push
inc
lock
outsb
push
push
and
push
addb
and
inc
clc
js
into
and
or
ja
adc
icebp
and
cli
lea
sub
fiaddl
inc
jo
push
jae
lds
push
and
fcoml
shlb
mov
popa
das
arpl
jns
stc
popf
push
mov
cs
pop
mov
jns
sbb
xchg
int
shlb
cmpsl
inc
std
or
mov
mov
sahf
repnz
jl
dec
dec
cmpsl
xchg
dec
sbb
outsl
movsb
push
lea
out
lock
and
in
sbb
pop
lea
push
imul
adc
movsb
sub
js
xchg
fmuls
push
mov
and
jmp
movsbl
push
jge
xchg
pusha
sub
adc
cmp
sbb
rol
lahf
xchg
enter
mov
mov
mov
rcr
inc
jbe
rolb
pop
fidivrs
mov
lret
cmp
dec
shll
cli
movswl
jl
cmc
test
sub
jmp
in
add
mov
paddq
sbb
mov
shlb
xchg
dec
int3
lret
sbb
push
aam
inc
pop
ret
or
fs
stos
int
mov
mov
lea
ss
push
addb
clc
in
mov
adc
fs
and
pop
les
fldcw
cld
loope
mov
dec
incl
outsl
sbb
jecxz
js
addr16
test
mov
fmuls
and
clc
push
test
jne
jb
shl
iret
mov
xor
outsl
jnp
mov
test
xchg
push
pop
lods
imul
ficomps
daa
xchg
dec
aam
rolb
iret
xchg
jge
and
pop
adc
xchg
push
push
mov
daa
pop
pop
lods
mov
dec
and
adc
mov
lahf
adc
xor
into
mov
dec
fldl
mov
mov
test
arpl
test
int3
insl
adc
out
fimuls
repz
loop
shlb
bound
loop
loop
inc
stos
adc
test
sub
pminsw
std
mov
mov
sub
in
mov
in
gs
loop
loop
push
in
push
pop
aam
stos
jbe
xchg
xchg
out
mov
insb
and
xchg
adc
lea
mov
fistpll
aam
decl
iret
sahf
add
cld
mov
divb
dec
pop
lcall
das
mov
aaa
inc
loop
inc
stos
jns
add
ret
push
pop
jg
push
loopne
frndint
xor
adc
cltd
pop
stos
sub
rclb
push
movsb
mov
unpckhps
mov
es
inc
fnop
inc
mov
popf
fdivs
fistl
sub
out
cmpsl
adc
out
xchg
push
cmp
lods
mov
rorb
loopne
xchg
mov
out
or
loopne
cmpl
cmc
ja
dec
cmp
ds
popf
pop
out
or
into
xor
add
loopne
mov
dec
sti
cmp
push
lock
push
add
dec
mov
lcall
adc
xor
insl
adc
push
das
and
push
imul
jl
cltd
es
add
sub
jge
cmc
sbb
add
out
sbb
fadds
dec
in
repz
in
sbb
movsl
jae
in
mov
jnp
push
cmpsb
jns
ljmp
sti
lea
cmpsb
push
pushf
pusha
push
xchg
xchg
scas
test
add
imul
js
in
icebp
aaa
add
sti
sbb
jge
in
pop
sahf
xchg
push
dec
out
cmpsb
sub
push
in
mov
mov
push
mov
sarl
inc
lods
xor
push
call
adc
cmpsb
xchg
mov
aaa
fcom
out
cmp
mov
push
push
jmp
push
mov
setnp
rcrb
repnz
mov
mov
mov
mov
pop
mov
ds
fs
xchg
pop
mov
adc
jmp
out
xlat
aam
ja
mov
lahf
adc
add
cmpsb
xor
sub
ret
xchg
popf
rolb
aaa
inc
mov
sub
movsb
xchg
repz
add
inc
mov
cltd
loope
adc
cmp
inc
jle
repz
mov
xor
ffree
push
mov
xor
push
xchg
insl
imul
lahf
mov
fadds
mov
pop
fcomps
nop
xorl
sub
adc
jbe
inc
push
aas
insl
push
sbb
mov
sti
fs
inc
sub
insb
xor
dec
add
cmp
aad
mov
loope
js
or
in
mov
lods
adc
notl
xlat
int
xchg
xchg
or
pop
pop
imul
popa
into
dec
pop
push
sbb
shlb
cmp
movsl
mov
mov
sub
xchg
cs
jns
cltd
out
fwait
dec
int
dec
fsts
and
idivb
mov
mov
clc
jmp
cmp
cmp
in
test
bound
add
inc
sbb
jns
or
push
loopne
imulb
jae
stos
test
push
and
adc
ljmp
inc
cmpsb
fs
jnp
xchg
fsts
cmp
adc
pop
test
das
sub
push
jge
mov
insb
mov
or
pop
mov
aad
cli
add
fisttpll
fwait
es
imul
cmpsl
inc
jmp
je
test
pmulhw
xchg
cmc
pop
scas
push
and
xor
mov
in
push
xor
rolb
adc
jb
stos
xlat
pop
cmpsb
mov
leave
es
ffree
fstpl
aaa
mov
mulb
lea
cmpsl
xchg
daa
enter
and
push
fisttpll
ja
jp
mov
mov
cmp
shll
xchg
add
mov
cmpsl
sbb
fisubl
push
cmpb
fcompl
dec
mov
inc
fwait
xchg
lods
mov
push
inc
mov
mov
arpl
ds
sub
xor
mov
fwait
dec
mov
popa
jno
jmp
jl
cmp
fwait
jae
adc
jecxz
fisubs
loope
cltd
inc
jns
xchg
push
fnsave
pop
fisubs
push
nop
ljmp
push
mov
sbb
xchg
test
js
push
pop
stos
sub
sar
lahf
inc
push
xchg
repnz
or
or
push
aam
fs
scas
inc
gs
xchg
scas
insb
arpl
sub
inc
add
stos
xchg
in
lds
cmp
stc
mov
mov
out
pop
iret
imul
leave
add
in
pop
addb
cmp
lods
xlat
inc
rorb
mov
dec
and
xchg
jne
popa
push
clc
pop
sti
jp
or
push
cmpsl
jle
fists
xor
cmpsl
inc
jl
pushf
fcoms
out
jmp
mov
nop
sbb
adc
pop
xchg
sar
hlt
or
mov
pop
imul
push
popf
dec
out
loopne
mov
push
sbb
sbb
jns
ja
push
push
cli
test
sub
jb
lock
sub
aam
fstl
sbb
loopne
jle
gs
jecxz
aaa
adc
or
mov
into
enter
lret
aaa
mov
fidivs
xor
lock
int
or
dec
jnp
dec
fwait
fs
jl
sub
xor
iret
ret
aam
add
cmp
adc
adc
push
cmp
cmp
lret
push
and
dec
mov
test
loopne
xchg
repz
out
ja
out
mov
or
pop
fisubs
mov
mov
mov
lock
push
jle
repz
push
jmp
jns
jo
pop
movl
xchg
cmc
mov
jae
fmull
xchg
sbb
rcl
and
shll
ss
mov
jae
pusha
shrl
and
aam
scas
sbb
add
jns
out
std
into
std
xor
les
bound
pushaw
mov
xlat
sbb
lods
loop
cmp
daa
mov
fsubs
jns
rorl
jmp
xchg
lea
iret
je
mov
fwait
loop
cmpsb
xor
xchg
xchg
pop
xor
dec
pop
mov
aam
imul
int
out
jbe
outsl
push
movb
mov
mov
andl
test
stos
add
sub
orl
adc
fwait
add
ds
idivb
xor
fldt
movsl
fsubs
notb
arpl
fucomip
cld
leave
mov
jae
ret
add
add
cmp
stos
xor
xor
pusha
pop
stc
lcall
fiaddl
test
mov
out
ljmp
cmc
mov
adc
mov
pop
sub
add
int3
lock
pop
mov
movsb
ret
push
xor
mov
imulb
in
add
lea
cmp
sbb
aad
lcall
mov
xor
xor
add
sbb
jl
fcompl
lahf
test
mov
jnp
and
repz
or
inc
pop
dec
xor
les
mov
mov
subl
mov
push
movsb
jl
add
ret
jle
jo
out
dec
pushf
test
cltd
je
lcall
inc
mov
or
mov
xacquire
test
inc
add
enter
cld
icebp
or
adc
mov
mov
test
adc
dec
sbb
adc
lods
pop
xchg
hlt
xchg
clc
add
lahf
out
adc
sbb
jle
mov
dec
or
add
fs
inc
repz
inc
lods
movsl
imul
sub
mov
xor
fisubrl
sbb
scas
jmp
loope
and
or
popf
data16
inc
iret
stos
push
inc
xchg
test
mov
lret
insl
push
xlat
iret
push
enter
jge
rol
or
add
loope
add
rorl
jne
popa
pop
mov
nop
call
xorb
jecxz
push
int
popw
or
and
lods
fldt
cmp
mov
std
mov
sbb
xor
std
test
jle
push
popf
xchg
xchg
sarl
mov
or
mov
cwtl
packssdw
insl
lock
mov
out
sbb
roll
lods
scas
sbbb
sub
mov
idivl
mov
test
icebp
sub
popf
sub
outsb
ljmp
aad
jg
ss
add
xlat
inc
cmp
mov
dec
jae
cmp
jo
jo
sub
fwait
jns
pop
in
xor
or
cmp
inc
lea
add
std
ret
and
mov
inc
into
xchg
in
dec
das
mov
mov
adc
xchg
mov
icebp
mov
mov
sbb
mov
inc
int3
and
pop
int
xor
call
fistpl
inc
into
enter
jmp
mov
rcrb
xor
daa
sbb
xor
cwtl
divl
mov
dec
pop
or
and
gs
scas
jp
jb
les
add
mov
ja
and
lret
aam
mov
outsb
icebp
pop
push
mov
mov
cmpsb
sbb
enter
jl
pop
jo
mov
push
push
push
cmp
xchg
into
xor
test
lods
in
adc
push
pop
or
pop
popa
out
rcr
xchg
mov
pop
andb
ret
mov
mov
rol
pop
push
sub
xchg
push
das
nop
mov
mov
jp
pusha
fs
sahf
xrelease
cmp
aam
lea
outsl
mov
sbb
daa
pop
aaa
ret
push
cmp
sbb
ss
adc
inc
int3
push
xlat
push
testb
adc
pop
loop
adc
cmpsl
sub
imul
pop
sahf
hlt
cmp
mov
loopne
jecxz
stos
xchg
inc
jge
dec
in
jne
repz
repnz
xor
loopne
inc
add
inc
mov
cli
scas
pop
jmp
push
dec
fsts
mov
cltd
mov
adc
adc
dec
add
jo
outsb
xchg
das
cmc
inc
xor
mov
shll
jbe
pop
xor
fnstenv
jmp
mov
notb
scas
mov
fdivrs
jl
xchg
xchg
add
and
cmp
push
mov
dec
scas
mov
pop
les
cmc
xor
and
jecxz
adc
sub
ja
scas
mov
sbb
repnz
test
pop
push
cmpsb
rcrb
das
push
popa
xchg
aad
jb
stos
push
mov
repz
cs
cld
jp
ss
ss
lea
cmpb
pop
cltd
scas
mov
mov
mov
repz
lahf
fstpt
inc
sub
mov
sbb
test
inc
insb
les
lret
daa
mov
adc
fwait
sbb
cmpsl
or
jno
lret
add
pusha
fildl
jg
push
pcmpgtw
outsl
and
stc
cmp
pop
sub
xchg
pop
sbbb
xchg
daa
add
xchg
ja
jnp
dec
int
add
jbe
mov
loopne
jp
test
inc
mov
into
sbb
out
seto
pop
movl
and
cwtl
pop
fwait
mov
cmpb
mov
fucomi
mov
loope
loope
pop
pop
jno
roll
dec
out
ljmp
cmpsl
in
into
aas
dec
push
sbb
add
add
mov
negl
push
scas
cld
mov
cmpsl
aaa
sub
xchg
cmpsl
lock
sub
inc
adc
out
in
sbb
scas
cmc
std
ljmp
fstp
cmp
push
xorb
sbb
rorl
and
push
clc
sarl
dec
imul
test
test
movsl
pop
loopne
or
ljmp
enter
jae
push
mov
out
push
lods
lret
mov
jp
lds
mov
xchg
movsb
lret
cltd
pop
push
mov
sbb
inc
mov
or
lods
divb
test
out
imul
push
dec
dec
cwtl
or
xchg
push
mov
cmp
test
shlb
dec
cmp
addr16
mov
pushf
stos
sbb
or
mov
femms
jne
adc
in
cwtl
sahf
xchg
test
xchg
xchg
and
sbb
adc
sbb
inc
push
mov
outsb
mov
dec
jle
mov
insb
jmp
add
push
mov
popa
jmp
repnz
insl
mov
push
lret
mov
subb
mov
pusha
add
pop
jmp
popf
mov
adc
mov
pop
enterw
call
hlt
pop
lods
mov
movsl
push
pop
cmpsl
cld
mov
sbb
xchg
jge
cs
add
clc
xlat
push
std
cmp
mov
shl
add
inc
sub
and
xor
mov
inc
push
xchg
mov
jge
adcb
xchg
je
pop
sbb
ss
lret
lods
dec
addr16
push
insl
leave
push
adc
sub
push
hlt
aam
xchg
lods
hlt
dec
pop
and
mov
dec
inc
pop
or
add
mov
sbb
bound
sub
pop
inc
add
push
jno
roll
sub
add
imul
movsb
mov
jne
jl
shr
add
xor
enter
fcoml
push
iret
sub
and
mov
push
scas
pop
cmpsl
fcompl
idivl
insb
lahf
mov
dec
or
pusha
jb
or
sbb
in
sub
fs
sbbl
cmc
cwtl
add
addr16
cmpsb
fs
dec
sbb
push
push
or
ss
push
mov
xchg
out
mov
shlb
inc
xor
xchg
movsb
add
sbb
push
mov
rep
cmp
or
sub
cli
nop
enter
lods
shr
jmp
mov
jecxz
subb
mov
mov
jle
cmp
imull
lcall
inc
xor
mov
push
pushf
pop
xor
mov
jle
adc
test
or
imul
arpl
lds
mov
push
fs
jne
je
mov
dec
ja
push
aad
mov
inc
mov
sub
pusha
pop
mov
fdiv
testl
addr16
out
cmp
hlt
movsb
add
into
ljmp
outsl
pop
outsl
and
pop
jbe
or
mov
shll
mov
popf
xchg
dec
inc
lcall
mov
mov
cli
cmp
inc
and
mov
or
dec
xor
and
dec
int3
xchg
cmp
or
daa
pushf
loopne
xor
insl
loopne
out
fnsave
les
mov
lods
int
cmp
mov
xor
arpl
mov
movsl
mov
hlt
and
add
repnz
mov
ljmp
pop
mov
xchg
mov
lret
mov
jg
sub
sub
or
add
ret
loope
in
mov
fs
cmp
xchg
inc
jmp
adc
ss
mov
jg
or
aam
repz
and
mull
add
sti
stos
add
mov
adc
cli
xchg
push
inc
xchg
scas
in
out
mov
aaa
jno
enter
scas
adc
stc
out
fmuls
and
je
stos
jbe
inc
mov
xor
test
int3
mov
insb
cwtl
test
ret
sbb
insb
or
mov
pop
sbb
lret
pop
mov
arpl
lea
push
filds
fstpl
test
cmpsb
lahf
xorl
cmp
insb
fs
xchg
lds
fisttpl
pop
push
sbb
inc
cli
mov
add
push
cmp
addr16
or
xchg
ficoms
imul
fsubrp
push
dec
sbb
xchg
mov
add
pop
sbb
in
out
mov
mov
arpl
cmp
adc
dec
xchg
test
sub
xlat
test
xor
out
pusha
insb
testl
pop
shlb
and
ljmp
cltd
inc
or
nop
sbb
rclb
pop
push
jb
mov
jnp
jge
xchg
xchg
testb
mov
mov
dec
into
mov
push
repz
xchg
sbb
push
ds
lds
jae
push
std
popf
or
out
pop
xor
cmc
xchg
push
scas
cmp
hlt
mov
pop
shlb
cmp
pop
push
test
pop
xchg
js
cwtl
icebp
daa
pushf
cwtl
aad
mov
pop
pop
mov
mov
mov
jp
add
aaa
jg
sti
xor
push
pop
jnp
jle
je
push
hlt
lret
rclb
mov
mov
cmc
xchg
cmp
and
shr
or
cltd
pop
and
cmp
xchg
imul
fsubr
dec
xchg
test
pop
fnsave
leave
das
and
ss
dec
add
fcos
fs
lods
xor
dec
sub
repnz
jge
cltd
movsl
jb
jge
pop
bound
inc
bound
int
ds
xor
add
mov
or
dec
aam
jne
ret
dec
sbb
push
push
pop
fwait
aam
sbb
dec
das
je
dec
push
adc
push
push
test
mov
cmpsb
movsb
push
sbb
mov
jbe
stos
in
cmp
call
mov
and
sbb
mov
or
iret
fst
fiaddl
gs
fcmovnu
dec
cli
lahf
xor
test
dec
push
lods
mov
and
adc
stc
aaa
sub
insb
jge
mov
stos
sbb
popf
and
add
add
js
jp
push
push
ss
mov
dec
sbb
dec
inc
cld
jle
pop
mov
sbb
jmp
add
mov
cmp
ficoml
xor
rcr
xchg
push
call
fiadds
mov
cli
lret
cs
lods
pop
push
push
pcmpeqw
dec
cmp
gs
lods
test
xchg
mov
or
call
or
cmc
out
mov
adc
leave
cmp
or
or
push
ja
push
lcall
lea
push
xor
push
sub
push
fmulp
add
enter
je
push
movsl
jb
hlt
leave
xchg
cmp
inc
lock
cmp
clc
sbb
imul
mov
loope
imul
insl
flds
ss
xor
pop
arpl
addb
adc
xorl
mov
cmpb
and
mov
lods
mov
orb
addr16
in
sub
clc
and
mov
inc
xchg
ud0
movb
in
imulb
mov
push
pop
lds
sbb
xchg
sbb
loopne
xchg
pop
xchg
insb
jo
sub
xchg
lret
lds
pushf
sarl
mov
or
popa
je
adc
push
cmpsl
into
movsl
mov
and
repz
jl
push
sub
mov
mov
pop
daa
xor
cmc
stc
test
dec
dec
mov
and
add
shr
mov
mov
stos
add
push
test
mov
mov
push
adc
shll
stc
movsl
pop
push
push
dec
sbbb
push
mov
mov
adc
cmp
dec
iret
pop
test
add
ffreep
or
fstpl
loope
xchg
xlat
jns
aaa
lea
frstor
sbb
sub
inc
sub
cmpb
mov
push
fidivrs
icebp
addr16
shlb
add
mov
jle
xchg
or
pop
push
mov
popa
loope
dec
mov
movsl
xor
pushf
push
dec
repnz
jns
sti
movsb
mov
iret
mov
cmpsl
sbb
loop
push
xchg
jbe
std
push
xchg
mov
insl
mov
and
mov
xor
popl
lock
sub
xchg
mov
or
pop
adc
dec
xor
mov
loope
ja
repnz
pushf
hlt
xlat
jl
mov
dec
enter
push
push
fadds
lods
inc
jle
adc
pushf
xchg
push
xor
fidivrl
sub
inc
fnstcw
xor
cwtl
loopne
jg
lahf
repnz
call
in
push
ja
mov
sub
push
sbb
xlat
jecxz
push
inc
stc
aas
dec
add
xchg
inc
pushf
xor
or
pop
leave
inc
cmp
aaa
shlb
cld
out
mov
xorl
xor
mov
sub
pop
sub
ja
jae
adc
jle
mov
sarl
ret
ss
add
iret
mov
dec
and
push
xor
mov
mov
insl
sub
sub
and
jb
test
xchg
in
sbb
ljmp
pop
cmc
or
xchg
popa
mov
pusha
pushf
inc
sbb
inc
cmc
lahf
adc
dec
repz
iret
dec
movsl
inc
mov
mov
int3
jge
test
jbe
pop
enter
cs
sbb
xor
fidivrl
in
xchg
mov
in
push
icebp
lock
jbe
rol
stos
xchg
rclb
pop
cmp
xchg
sbb
ljmp
and
add
nopl
mov
aaa
ja
mov
mov
push
and
dec
push
pop
jnp
and
push
sbb
test
push
inc
push
das
mov
lahf
and
sbb
mov
pop
aam
or
int3
push
or
pop
sub
iret
and
jmp
add
js
lret
or
add
loope
mov
andb
insb
inc
data16
or
jbe
or
pop
adc
mov
cmp
pushf
cmpsl
ja
cltd
ja
hlt
or
movsl
xchg
mov
xor
xchg
outsb
fs
sbb
adc
inc
push
pop
pop
mov
push
pop
jne
sbb
mov
sub
dec
call
pop
aaa
xor
push
sub
mov
call
push
into
sbbb
insb
dec
mov
jmp
ss
jl
popa
iret
sub
add
sbb
pop
mov
repnz
mov
sub
and
jne
mov
sub
jbe
fs
rolb
mov
movsb
mov
adc
inc
ss
dec
lds
ret
stc
lds
sti
lcall
and
xlat
rcll
xchg
xorl
movsb
imul
les
leave
xchg
cli
mov
aad
sahf
sub
or
inc
jbe
int
xor
sbb
jne
inc
popf
testl
cmp
int3
mov
dec
addr16
ret
insl
inc
mov
jl
push
mov
ljmp
push
sub
push
xchg
and
add
adc
jmp
mov
movsb
or
inc
nop
outsl
cmpsl
and
test
and
or
push
xchg
sti
jno
adc
xchg
mov
mov
push
movsb
roll
xchg
cmp
jmp
jle
jmp
jle
and
lcall
leave
data16
adc
lea
mov
jno
out
inc
cmp
add
aam
fldl
fisttpl
sub
daa
jbe
pop
clc
sbb
pop
pop
sbb
repz
cmp
mov
fwait
sub
repnz
pop
nop
adc
mov
xlat
fsubs
sbb
mov
ret
jbe
push
xor
je
jbe
push
mov
sub
push
xor
mov
ds
sub
or
test
xchg
jb
iret
fnstenv
stos
push
fwait
sbb
and
pop
cmp
addr16
scas
decb
push
jl
and
mov
mov
adc
aas
das
lods
mov
jb
aam
aad
or
js
cmp
repz
ret
push
ljmp
or
xlat
and
pushf
or
ja
ss
icebp
dec
out
cmp
xchg
dec
jp
adc
or
andb
add
mov
jmp
dec
imul
jl
mov
sbb
psrad
pusha
aaa
mov
push
test
cmp
mov
pop
cmp
xchg
jbe
lret
and
mov
dec
lcall
mov
out
bound
sti
clc
jmp
mov
loopne
and
xor
xchg
mov
shrb
xchg
lret
xor
aam
mov
and
inc
xchg
ljmp
dec
fucomip
aam
aas
leave
bound
sbb
out
adc
jp
aad
mov
mov
clc
mov
add
cli
and
ja
xor
adc
and
mov
inc
das
testb
lret
nop
dec
inc
cmpsl
inc
dec
clc
mov
jmp
into
adc
cs
cmpsl
sbb
mov
sub
movsl
aad
lcall
xchg
inc
sub
aam
push
stos
sub
pop
push
notb
mov
add
call
adc
add
lods
lcall
lds
movsl
pop
push
cmp
mov
shll
out
mov
xchg
xor
shll
sbb
or
mov
mov
nop
push
sbb
xor
push
divl
lods
adc
xorl
jmp
leave
and
mov
sbb
push
xchg
insb
pop
les
ds
xor
sub
mov
jmp
test
faddp
cmp
inc
mov
clc
push
add
mov
mov
sbb
jb
scas
inc
cmp
es
ss
mov
dec
adc
jae
mov
dec
mov
ss
pop
mov
test
sahf
sbbl
sbb
cli
mov
jns
outsl
pop
cmp
and
add
mov
jecxz
push
lock
adc
int3
lret
inc
les
mov
in
clc
xlat
jmp
outsl
fidivrl
jmp
lock
mov
scas
cli
cmc
fs
push
sbb
mov
je
mov
jb
loopne
jecxz
stos
sbb
mov
mov
cwtl
xlat
ficomps
mov
push
xchg
dec
mov
push
adc
cmp
aas
jno
in
sub
adc
in
mov
inc
adc
in
pusha
fistpll
add
jecxz
push
rcll
leave
cltd
jae
pop
fld
sub
daa
inc
add
cmp
dec
cmp
in
fwait
adc
sub
pop
jns
inc
adcl
jae
stos
mov
jle
or
xor
dec
sbb
fs
pop
pop
xlat
ja
or
iret
outsb
ficompl
sbb
adc
mov
pop
pminub
aad
jnp
mov
aam
push
dec
das
jne
dec
push
repnz
cmp
xor
sbb
jmp
in
pushf
sbb
add
cmc
cs
rorl
and
sbb
cmp
imul
mov
cmpxchg
cmp
jnp
popf
jns
shlb
cld
pusha
fidivrs
jnp
sub
cltd
fcoms
mov
mov
sbb
hlt
test
adc
fwait
in
dec
pop
push
xchg
cmpsb
lods
lods
inc
adcl
in
pop
xchg
shr
movsl
loop
test
out
loop
scas
mov
or
insb
sub
sbb
jl
cmpsl
lods
ds
sub
out
xchg
cltd
les
in
and
mov
fstpl
push
mov
fwait
outsb
dec
jge
sti
mov
andl
hlt
dec
lods
fbstp
pop
cmp
ljmp
push
and
add
add
lret
pop
fstp
inc
add
ljmp
arpl
fidivrs
add
std
insb
cmp
add
pusha
test
int3
sbbb
mov
js
cmp
mov
test
sbb
pop
mov
mov
add
faddl
add
or
push
ffree
sbb
push
inc
mov
inc
mov
or
inc
imul
mov
mov
sub
nop
frstor
insl
mov
cs
and
xchg
push
inc
lahf
iret
sub
jmp
xor
cmp
or
mov
sbb
cmp
jmp
frstor
xchg
sbb
mov
std
cld
xchg
ja
xor
ljmp
fcoms
stos
out
scas
push
aas
and
ret
add
mov
add
cwtl
xchg
or
dec
testl
xor
sub
adc
adc
in
push
test
pop
mov
push
mov
push
mov
cmp
mov
inc
ss
shlb
inc
call
sub
pop
dec
mov
sarl
das
push
fnsave
lods
push
sbb
push
mov
mov
enter
jbe
std
mov
lret
loop
lea
divl
cltd
int
in
pushf
xor
icebp
arpl
mov
notb
stos
stos
mov
sub
lea
mov
inc
mov
lret
mov
mov
in
std
aaa
fmull
push
rcrb
and
or
cmp
jg
push
test
lds
sub
push
inc
lret
not
clc
mov
inc
jo
xor
pop
dec
in
dec
and
or
fsubp
std
xchg
push
insl
and
jmp
inc
iret
pop
cmp
xchg
outsb
cmc
cmp
cmp
xor
shlb
adc
cli
mov
push
aaa
pushf
add
cmpsl
cwtl
push
mov
mov
jl
dec
cmp
sbb
jns
frstor
pop
xchg
mov
lss
ljmp
mov
incb
loope
xchg
sub
and
xor
in
add
nop
outsl
nop
in
icebp
lcall
scas
cmp
je
nop
stos
clc
cmpb
sahf
xchg
jb
fadds
negb
cmpsl
or
add
dec
adc
sbb
push
fiadds
push
inc
pop
je
ret
jp
fninit
fldt
mov
and
lahf
imul
lea
addb
outsl
arpl
subl
pop
xor
dec
sub
add
fdivp
je
or
and
mov
pop
movsb
movb
std
iret
jmp
std
out
add
aam
push
mov
cmp
mov
bound
fcompl
sbb
imul
jmp
pop
add
add
pop
push
shll
adc
out
mov
and
aam
addb
adc
lcall
cmp
aas
or
add
shll
add
mov
fnstenv
icebp
pop
xor
into
fwait
insb
int
push
aaa
mov
push
cmp
cmp
adc
and
mov
mov
cs
fadd
lret
or
cmpsb
in
adc
repnz
mov
fs
lods
les
pop
iret
stc
push
add
mov
cmpsb
jl
inc
pushf
iret
sbb
test
mov
pop
test
rcrb
jne
inc
int
lahf
int
mov
movsl
mov
sub
hlt
in
in
dec
scas
mov
popf
shrb
mov
cwtl
jl
clc
push
addr16
lret
jno
jns
sub
cmp
mov
jbe
insb
imul
dec
test
pop
xchg
dec
mov
xor
jbe
add
xor
mov
mov
jecxz
add
sti
or
jne
cmc
jbe
mov
int
test
hlt
pusha
cmp
push
in
sbb
mov
hlt
orl
or
xchg
inc
les
dec
in
not
outsb
jp
fs
jno
add
xchg
addr16
pop
xor
int3
cmp
jno
cmpsb
ljmp
je
cmp
test
mov
pop
dec
jo
icebp
cmp
loopne
xlat
lock
scas
cmp
and
decl
fadds
adc
shrl
xchg
out
adc
pushf
pop
mov
fucomip
cld
inc
jns
stos
sbb
jg
dec
xor
scas
mov
mov
bound
in
mov
xor
je
inc
decl
inc
mov
shlb
mov
and
xchg
cmp
and
push
test
loopne
sbb
loope
push
xlat
mov
pop
scas
jle
inc
add
fmull
out
cli
ret
test
pop
sub
or
xchg
lcall
movsl
pop
clc
cltd
or
cmovbe
shll
cli
mov
bound
sbb
rcrb
push
and
cmp
je
jns
inc
dec
lods
pop
mov
pop
push
inc
adc
add
in
shr
iret
insb
add
xchg
push
xor
xchg
movsb
lods
xchg
cli
sahf
bound
fldl
or
sbb
call
out
loope
jecxz
loopne
sub
pop
push
dec
scas
sbb
fwait
jg
and
dec
stos
push
sub
or
dec
das
jle
sahf
jmp
fnstcw
mov
lret
dec
scas
out
xchg
mov
fisubl
loopne
mov
lds
or
xchg
test
push
js
shrl
jmp
dec
sahf
into
aam
divl
in
pop
mov
dec
loopne
jp
insb
or
sbb
inc
cmpsb
les
gs
or
popl
cmpsl
add
xchg
fucomip
push
xchg
xor
cmp
insb
push
lcall
sbb
nop
ret
jp
jo,pn
insl
jne
cwtl
orb
mov
nop
stc
addb
or
inc
lods
push
imul
in
mov
sub
push
imul
xchg
orb
sub
popf
add
lret
jae
and
cmpl
in
pop
mov
bound
insl
cld
imul
fucomip
dec
out
cld
mov
scas
jb
sub
xchg
cld
or
ljmp
mov
xorl
push
and
test
dec
lods
pop
ja
mov
aam
aad
call
test
ss
mov
test
cld
stos
adc
arpl
sbb
xchg
rolb
das
imul
push
out
mov
out
xchg
mov
adc
cmp
decl
ret
pop
mov
mov
negb
stos
cmp
imul
jmp
rcll
sti
jns
add
loop
jecxz
das
cltd
mov
mov
ret
in
sbb
call
std
lock
loop
and
mov
jg
mov
dec
mov
mov
aad
xlat
jge
pop
mov
sbb
aam
mov
cltd
mov
mov
das
sbb
inc
mov
or
int
in
pop
add
lret
xchg
xchg
mov
xor
rorl
aad
pop
push
popf
sub
lock
push
xchg
mov
out
lock
xchg
pop
xorl
in
push
xor
mov
inc
push
or
mov
iret
das
inc
cmp
inc
push
lods
imul
pop
sbb
icebp
decl
dec
sbbb
scas
pop
inc
jg
adcl
add
jb
xor
arpl
out
dec
jne
dec
push
inc
in
jp
pusha
outsl
jle
jp
roll
jmp
call
insb
lea
add
cmp
stc
arpl
cmp
adc
fisubrl
rol
andb
jmp
test
jae
xchg
icebp
idivl
sahf
jns
push
cmp
jmp
cwtl
push
shll
cmp
lcall
loop
dec
out
cmpsl
dec
xor
xor
add
and
push
mov
ja
ss
fistpl
push
dec
pusha
push
pushf
cmp
rcrb
mov
cli
je
and
lods
rcl
jns
mov
dec
dec
jle
sbb
sbb
ljmp
adc
inc
cwtl
add
adc
xor
xchg
mov
test
shrl
inc
fidivl
hlt
fcompl
ret
fmuls
or
inc
sbb
idivb
daa
cmp
sbb
data16
add
sar
stos
lahf
sub
icebp
addb
pushf
push
ds
paddusb
xor
cmp
fimuls
lods
inc
arpl
pop
adc
loopne
leave
mov
jb
dec
cltd
dec
cld
cmp
jmp
mov
cmp
mov
xor
in
out
loopne
jecxz
sub
mov
pop
mov
mov
fistpl
les
fisubs
mov
shll
jg
repnz
mov
rcr
div
enter
rorb
mov
std
cmc
call
stos
fisubrl
mov
jecxz,pt
cmc
das
je
mov
and
test
push
mov
push
insl
into
pop
shll
lahf
or
xor
pusha
lahf
xor
sbb
mov
ret
lret
adc
or
bound
dec
inc
dec
cmp
loop
mov
jne
sbb
cmp
sahf
lcall
dec
xchg
push
pop
push
outsb
inc
lods
test
loop
outsl
lods
arpl
jb
sub
inc
ljmp
rorl
les
test
lcall
mov
add
in
cmp
pusha
or
sbb
jb
cltd
xchg
int3
mov
fidivl
in
xchg
in
pop
in
loope
filds
xor
xchg
add
xor
cld
cmc
cmp
jmp
or
pop
add
bound
cld
cmpsl
sbb
dec
jne
roll
mov
sti
and
outsl
jns
mov
jb
jno
cwtl
call
bound
lcall
sbb
pop
pop
sbb
mov
add
add
scas
inc
loopne
out
pop
pop
inc
adc
adc
mov
daa
lods
rcll
push
stos
mov
adc
and
movsb
outsb
or
loopne
sbb
push
push
leave
test
in
and
xacquire
ret
inc
jle
inc
in
std
ja
fmuls
or
and
les
sub
dec
xchg
insb
mov
jno
xchg
fwait
push
aas
xchg
lcall
lods
dec
shll
mov
loop
movl
xor
add
imul
testb
sarb
shll
mov
rcll
jnp
ret
cmp
xor
subl
inc
ds
aam
insl
cwtl
push
sub
ljmp
rolb
lret
sub
pop
push
test
pusha
jg
jl
push
aas
stos
xor
les
je
scas
pop
nop
mov
or
adc
xchg
outsb
xorl
pop
dec
jbe
jp
aas
or
lea
lods
scas
pop
out
or
cmp
cltd
clts
dec
lods
lods
jp
cltd
push
sbb
mov
test
sbb
pusha
loope
pusha
sub
stc
subl
dec
adc
mov
pop
rcrb
inc
shll
inc
das
ss
sub
jbe
cmpsl
fdivrl
cmp
movsl
xchg
mov
and
inc
mov
dec
cs
pop
dec
xor
sbb
fld
adc
loope
inc
mov
sbb
push
mov
push
xor
xlat
mov
mov
sub
dec
inc
roll
or
nop
adc
and
repnz
add
fiadds
mov
or
push
jb
cmp
imul
and
call
aad
dec
dec
sar
dec
les
mov
sub
ret
popa
cld
cs
outsb
and
dec
push
rcr
adc
inc
aaa
cmpsb
cmpl
icebp
xchg
mov
cmp
jecxz
xor
dec
insl
mov
das
xchg
xchg
pusha
cmpsl
arpl
jbe
jmp
lods
test
xor
xchg
sub
sub
fsub
xor
add
scas
popf
sbb
mov
mov
mov
test
xchg
dec
or
xchg
sbb
cld
out
nop
inc
adc
pop
sbb
rorb
ljmp
sbb
add
and
pushf
test
mov
sub
dec
jne
dec
cli
gs
mov
out
arpl
dec
xchg
xor
je
pop
jnp
out
outsl
imul
mov
sub
xchg
mov
repz
dec
adc
lahf
jne
insb
xchg
jno
or
sub
jp
test
jo,pt
adc
jl
jp
cmpsl
testl
or
iret
mov
enter
cmc
and
xchg
ds
idiv
je
mov
aad
cs
mov
jne
pop
repnz
loopne
int
fwait
orl
xchg
sub
insl
movsb
ret
bound
cmp
push
and
inc
jg
pop
xchg
mov
cli
xor
sbb
jnp
cmp
mov
sub
pop
pop
sub
dec
cmpl
stc
cmpsl
or
jmp
out
push
lea
fs
inc
fiadds
jb
out
inc
pop
mov
mov
roll
addb
mov
movsl
lahf
pop
mov
popa
je
pop
jbe
inc
leave
mov
mov
fwait
notl
popf
filds
fidivrs
sbb
mov
xor
js
lcall
pop
out
orl
dec
loop
mov
jno
mov
test
stos
bound
xchg
inc
xchg
xor
leave
mov
lret
sbb
jmp
xchg
and
aad
insb
sbb
lret
adc
dec
in
push
xchg
dec
jbe
adc
out
ljmp
icebp
push
fcomps
lret
sbb
es
lcall
lock
sub
jge
xchg
add
pop
ljmp
lcall
cmpb
cmp
mov
cmpsl
add
add
sahf
mov
mov
add
inc
popa
xor
lods
or
lods
jge
dec
pusha
cmp
out
stos
lea
mov
aas
dec
outsb
out
push
call
insb
hlt
jmp
ljmpw
leave
fisubrl
push
mov
inc
inc
dec
and
xlat
enter
aam
rolb
mov
in
outsb
das
test
mov
int
adc
aad
pushf
aad
cmp
dec
ffreep
jnp
jle
test
lds
arpl
and
movsb
pop
fadd
loopne
repz
lods
cltd
mov
mov
shrb
push
adcb
push
sub
sbb
ljmp
dec
xchg
xchg
mov
repnz
and
mov
jl
sub
adc
pop
sub
aad
cltd
cmp
add
xor
mull
addr16
sub
test
enter
out
jo
inc
push
jmp
xor
ja
jmp
mov
sub
cmp
mov
sti
add
mov
stos
aas
cli
ja
je
pop
popa
imull
fdivrl
inc
xor
push
xchg
ret
cmp
test
jb
clc
add
xchg
sub
push
push
inc
mov
or
int
popw
dec
test
mov
test
shr
inc
xor
push
xor
stos
mov
add
aad
push
cmpsb
sbb
xchg
xor
not
xchg
cltd
jno
sahf
ljmp
in
cmp
add
enter
cwtl
rorb
cmp
fmull
fists
out
gs
dec
and
lods
movsb
das
inc
and
imul
imul
ret
popf
mov
add
push
mov
inc
inc
in
pushl
cmpsb
mul
push
ljmp
dec
pop
cmp
and
add
and
std
sbb
xor
mov
or
lods
leave
adc
incl
and
mov
dec
loope
xchg
jo
enter
cmc
push
divb
arpl
das
push
mov
inc
iret
cmpsb
jae
or
add
aad
lcall
mov
addb
mov
mov
inc
sub
inc
mov
filds
pop
mov
int
jge
add
sbb
jae
xor
pop
rolb
fwait
xor
xchg
stos
mov
or
imul
mov
push
hlt
mov
scas
jnp
lahf
adc
lds
lea
xor
stos
popa
ret
ds
adc
cmpb
sub
std
repnz
test
aas
pusha
add
mov
push
imul
es
push
and
ret
sbb
pop
cmp
hlt
out
lea
or
cld
sbb
mov
mov
sub
mov
lret
xor
add
out
ficompl
mov
cmp
xchg
stos
out
je
jmp
cmp
cli
into
ds
test
cmc
cwtl
and
fadd
pop
jg
movsl
mov
test
popf
cmp
or
dec
inc
cwtl
cltd
add
sahf
loope
jp
push
or
sbb
mov
cmp
lods
sbb
dec
repnz
cltd
test
stos
aam
mov
and
pop
testb
movsl
fsubs
fdivrs
int3
jle
jae
out
push
inc
scas
and
add
jg
pop
cmp
lcall
aaa
cld
pusha
mov
inc
outsb
mov
sub
or
mov
in
push
mov
add
je
add
pusha
sub
xchg
mov
adc
ljmp
addl
jl
je
fcmovb
sbb
sbb
cmpb
cmp
insb
mov
daa
dec
ss
pop
les
inc
sub
fwait
outsl
jns
iret
and
xchg
andl
roll
inc
or
jbe
push
sub
cmp
ret
xor
stos
ja
mov
scas
sbb
dec
test
sbb
leave
cmc
mov
ja
cwtl
movsb
mov
add
jmp
add
sub
les
inc
jno
mov
aaa
adc
push
ret
icebp
in
int3
mov
xchg
mov
fadds
push
xlat
loop
imul
fldcw
nop
imul
xorl
add
pop
add
xchg
xchg
sub
sbb
add
dec
push
add
ja
leave
loopne
cmp
push
popf
cmc
and
sub
and
xor
je
pushl
pop
mov
jns
rol
or
aam
xor
les
cmp
sub
dec
dec
dec
inc
out
es
loope
in
cmp
div
adc
adc
and
adc
adc
push
cs
jb
or
in
sub
out
mov
push
mov
mov
test
cmp
sbb
mov
outsb
je
enter
or
jae,pt
testl
lods
pop
xchg
daa
sbb
incb
ljmp
mov
and
xor
mov
aam
fldcw
jl
out
scas
es
sti
pusha
push
inc
xchg
cli
cli
ss
dec
mov
pop
push
cli
xor
mov
out
sub
mov
hlt
sub
test
imul
pop
pop
pop
mov
icebp
inc
mov
insb
cmp
in
inc
movb
out
ds
lea
xchg
test
and
test
inc
mov
jb
bound
fbstp
ljmp
hlt
mov
jg
popa
mov
mov
adc
mov
in
cmp
sub
fbstp
sahf
jg
mov
lea
in
xchg
fldcw
cld
aam
outsb
xor
out
push
sub
cmpsb
call
mov
pop
shll
lock
scas
testb
push
mov
es
fsubr
push
sbb
xchg
mov
aam
jo
fs
mov
jae
mov
cmp
or
sahf
dec
lock
loope
mov
mov
jo
cmp
pushf
fsubrl
movsl
jne
adc
adc
xchg
popa
jb
and
outsl
fstl
mov
pop
test
cs
inc
push
sub
jae
popa
sub
test
xlat
dec
test
fwait
jge
fwait
insb
rcrb
jbe
cwtl
in
imul
scas
lret
jb
xchg
inc
sub
call
pop
inc
les
sahf
sub
jp
arpl
push
xor
sub
pop
pop
xchg
sarl
roll
fdivrl
cmc
test
sbb
repnz
call
inc
jmp
cltd
mov
mov
stos
push
mov
cmp
sahf
push
std
mov
je
lds
mulb
sub
xor
push
shlb
or
inc
push
pop
push
adc
clc
cwtl
jg
inc
daa
jne
jg
add
mov
pop
insb
mov
xchg
ljmp
and
stc
xchg
inc
shlb
inc
scas
or
sti
add
ror
push
loope
pusha
sub
dec
cmp
pop
sbb
pop
add
cltd
cmp
push
in
xor
jnp
jne
cmpsb
rcl
test
aas
cltd
sub
sub
cmp
inc
mov
or
jmp
mov
dec
sub
pop
mov
add
sbb
pop
test
sbb
fwait
aas
push
sbb
mov
insl
xchg
jecxz
rorb
stc
pop
jge
push
repz
jl
jl
popa
stos
sub
fdivrs
jo
sub
add
jne
cld
dec
xlat
cmp
push
add
fbld
pop
adc
sbb
adc
jbe
movsl
int3
add
aas
jo
xor
sub
in
pop
out
daa
ret
aad
xorl
pop
clc
rolb
nop
or
aad
out
pusha
fidivrl
arpl
cmp
leave
cmp
sub
fidivs
filds
shlb
xor
or
mov
jle
adc
jl
das
sti
mov
das
sub
fcmovne
jnp
pop
dec
dec
in
pop
mov
pop
mov
jge
push
xor
jp
stos
jmp
jge
jno
shlb
popf
jns
ret
test
sbb
in
out
pop
in
rcrb
mov
sub
andb
pop
cli
mov
add
push
inc
jo
in
stc
bound
pop
into
pusha
stc
jo
adc
mov
add
fst
xor
mov
lcall
xchg
outsb
imul
jnp
xchg
pop
arpl
hlt
dec
ja,pn
xor
push
sub
jmp
sub
outsl
std
mov
nop
iret
xor
stos
out
faddl
hlt
ret
loope
imul
cmp
fcoml
out
push
fbstp
push
pop
es
rclb
cmp
das
mov
fstpl
cmp
push
bound
jl
and
dec
mov
adc
sbb
orl
ds
pop
cltd
in
and
and
pop
fs
pop
jb
aam
addr16
lret
adc
inc
jbe
lcall
jecxz
leave
gs
icebp
dec
xor
ss
pushl
mov
filds
push
push
enter
rorb
imul
inc
push
mov
pop
and
inc
clc
aaa
push
lea
pushf
mov
arpl
cld
lds
mov
fwait
jp
mov
or
push
mov
adc
push
mov
push
hlt
repz
out
xchg
xchg
daa
add
std
pop
adc
imul
sbb
imul
shll
inc
sbbl
jl
stos
push
loop
and
cltd
icebp
xchg
daa
mulb
push
stos
movsl
in
ficoms
fimuls
mov
ljmp
in
xchg
loope
cld
and
ret
sub
test
mov
in
fnsave
mov
dec
out
clc
mov
adc
adc
or
in
hlt
int
das
mov
jp
xlat
sbb
pushf
insl
push
mov
imulb
sub
mov
cmp
lds
pop
and
sahf
pop
jmp
sahf
stc
aaa
xchg
xchg
sub
push
dec
adc
aam
insb
xor
xor
dec
push
sbb
jbe
jmp
xor
mov
sub
jmp
lock
shr
mov
add
cld
and
and
jb
push
adc
popf
mov
rolb
dec
clc
test
mov
sbb
shrl
jge
jmp
jae
in
test
roll
dec
jo
aad
pop
or
ljmp
push
fs
inc
shrl
push
ret
sub
icebp
scas
sub
xorl
pop
xor
add
mov
jl
jbe
fdivp
jge
nop
push
mov
pop
fstps
xchg
stos
jno
imul
pop
pop
push
mov
inc
pop
into
cld
inc
fnstsw
test
imul
jno
add
sub
lea
int3
dec
cld
push
pop
inc
pop
push
fisubl
rcl
inc
mov
sbb
adc
jecxz
sub
pop
mov
dec
mov
inc
insl
sub
xor
pop
fwait
enter
inc
insb
xchg
xchg
mov
or
jae
ss
push
fildll
pop
push
negl
lods
ret
cltd
xor
inc
mov
xchg
add
int
pop
int3
movsb
mov
and
aad
add
adc
in
mov
add
movq
mov
mov
and
data16
nop
or
leave
cmp
sbb
push
inc
jns
mov
inc
inc
cld
and
xchg
mov
jl
push
push
xchg
cmp
inc
mov
xlat
cmc
inc
mov
or
hlt
cmp
and
sbb
adc
adc
sbb
push
cmp
cwtl
in
xchg
sbb
xchg
cwtl
mov
out
or
mov
jl
mov
add
ror
loop
daa
jnp
ret
sti
mov
mov
add
arpl
or
iret
negl
repz
test
mov
sahf
inc
ss
fsubrs
dec
testb
xor
fbld
xorl
sar
addr16
adc
adc
jae
jp
push
stos
xchg
rcrl
mov
jp
jl
mov
mov
xchg
lds
leave
jle
xchg
mov
dec
sub
test
and
test
das
pop
insl
push
fucomip
lret
repnz
or
cmp
movsb
jae
push
leave
insb
outsb
fcoms
cltd
jnp
insl
xchg
jae
jne
mov
stos
pop
lock
outsb
xor
push
sub
mov
pop
cmc
xchg
loope
gs
mov
mov
xchg
mov
mov
jne
inc
inc
jbe
xchg
es
pop
sti
jnp
push
and
dec
jp
cmp
push
cmc
jnp
flds
mov
mov
push
in
outsb
hlt
xor
or
and
jo
adc
loope
cwtl
out
pop
or
push
lret
loop
mov
dec
mov
ret
cmp
dec
loop
dec
clc
enter
xchg
cmpsb
mov
aam
fldenv
cmp
xchg
rol
shlb
dec
arpl
jbe
cmp
popf
pop
imul
stos
mov
imul
push
sub
std
mov
dec
fistpll
mov
mov
fcomp
lea
aam
jle
fnstsw
mov
lret
adc
mov
loope
std
sub
repz
push
outsb
xor
push
roll
cwtl
scas
lods
gs
pop
adc
mov
xor
test
insl
scas
sbb
nop
inc
fisubl
adc
shl
adc
xor
cld
mov
mov
iret
pop
stc
dec
dec
xor
scas
and
addr16
outsb
out
scas
insl
mov
scas
addr16
test
inc
stos
xchg
les
sub
xlat
inc
lret
xor
mov
xor
cmp
mov
jbe
dec
mov
in
cmp
mov
fsubrl
repnz
out
or
pop
out
icebp
xchg
adc
jne
iret
jg
and
shlb
dec
or
pusha
decb
lret
imul
jmp
je
inc
add
outsl
push
cmp
mov
pop
fwait
sbb
sarl
xlat
mov
mov
pop
cmpsl
mulps
sub
xchg
popa
imul
fcom
mov
ja
fsubr
mov
or
adc
jmp
popa
cltd
hlt
mov
js
scas
mov
pop
mov
aaa
stos
das
adc
push
pop
push
sub
subb
xor
inc
out
cwtl
das
dec
mov
call
mov
stos
inc
add
adc
add
pop
dec
in
push
pop
jmp
cld
add
aam
push
in
rclb
jne,pt
mov
xor
cli
mov
dec
jbe
mov
dec
mov
mov
test
pop
imul
clc
sub
iret
adc
aas
mov
add
ja
cltd
sahf
inc
jl
inc
jge
dec
sub
icebp
cmc
mov
or
fninit
inc
jbe
dec
mov
js
xor
pop
mov
stos
cmpsl
int
push
lret
jb
fnstsw
in
or
jnp
fidivl
push
dec
jge
adc
jne
pusha
clc
cmc
pop
mov
das
pushf
push
daa
sbb
dec
das
enter
mov
mov
xor
inc
mov
mov
shrl
das
jle
mov
dec
int
ror
dec
test
add
xor
push
popf
ret
mov
stc
inc
and
fsts
outsb
jae
pop
test
lret
push
insb
add
pop
addb
scas
push
lds
mov
jne
test
mov
mov
movsb
push
inc
mov
mov
pop
hlt
cltd
jecxz
and
or
pop
pop
sbb
cmp
daa
popa
cs
fstp
jmp
filds
les
pop
push
in
inc
pop
xor
shlb
dec
aad
push
sub
loope
repnz
mov
lret
pop
mov
jo
cltd
add
and
add
xchg
fs
sbb
iret
pop
shrl
not
cmp
adc
pop
or
sub
les
jne
add
mov
movsb
loope
dec
cli
pop
scas
loop
pop
add
mov
add
jp
jp
cmp
add
nop
push
outsl
push
insb
jge
mov
loopne
out
add
fcompl
add
cli
ss
stos
sub
lods
sti
fisttpll
stos
in
push
add
or
sub
daa
mov
out
push
sub
xchg
dec
mov
lock
in
or
xchg
xorb
jbe
lods
shr
mov
adc
sahf
test
ficompl
ljmp
xor
mov
mov
add
cmp
push
fdivrs
mov
gs
and
jae
loopne
mov
mov
fists
cmp
push
dec
stos
sar
adcb
scas
aas
mov
cmc
daa
mov
mov
cmp
xchg
mov
or
incl
lcall
cmp
fs
cmp
iret
lret
dec
ret
mov
scas
or
stos
call
int
mulb
xor
mov
push
xchg
lods
push
or
jae
sub
jle
stc
cmpsl
mov
scas
icebp
cmp
mov
cmp
pand
lahf
xor
cmpsl
je
dec
data16
sub
push
aad
roll
icebp
arpl
pop
mov
insb
push
xor
mov
and
stc
dec
sbb
mov
inc
movsl
mov
xchg
arpl
test
movsb
stc
mov
mov
ret
inc
loope
arpl
imul
sub
xor
or
or
add
mov
rol
jg
jo
jmp
pop
cmp
mov
mov
les
jns
or
mov
stos
and
pop
clc
add
les
mov
and
aad
out
pop
fmull
hlt
xor
mov
loopne
scas
pusha
push
xchg
pop
out
mov
xor
dec
ds
ja
mov
ljmp
cmpsb
xchg
ret
adc
xchg
and
pop
cwtl
jmp
out
loope
fisubs
insb
js
xor
jg
in
out
add
ljmp
ret
jp
in
cmp
addr16
hlt
fndisi(8087
adc
jo
xor
or
xor
mov
mov
and
mov
rcll
dec
repz
and
sub
mov
in
inc
sub
adc
cli
inc
inc
aam
push
dec
adc
xchg
xchg
add
icebp
cmp
movsl
sbb
out
push
into
mov
mov
cltd
dec
and
and
fistpll
fcmovb
lret
adcl
mov
insl
enter
and
or
mov
lods
mov
add
dec
cli
dec
adc
lods
mov
dec
lods
in
sub
lcall
lret
jmp
mov
push
jle
loop
adc
std
pop
pop
pop
xor
xchg
xor
jg
in
ret
insl
jmp
xchg
mul
stos
inc
mov
push
gs
les
mov
popf
inc
pop
mov
out
lret
pusha
lods
rolb
call
testb
stos
call
lock
adc
cmpsb
std
jmp
js
or
or
jb
nop
shlb
xor
aam
cs
mov
pop
cmpsb
xchg
icebp
xor
test
popa
sbb
enter
jne
cmp
call
rclb
dec
add
xchg
mov
mov
sub
daa
les
xchg
sub
inc
mov
hlt
pop
jmp
or
cs
insb
push
pop
cmp
push
cmp
es
int
mov
jmp
cmp
adc
daa
adc
notl
xor
mov
cs
idivb
icebp
add
lds
jg
cltd
push
daa
xchg
outsl
stc
push
out
in
mov
cmp
sub
pop
adc
fcomp
xor
sub
push
stc
dec
push
mov
lock
fstpl
jbe
pop
data16
sub
enter
mov
adc
pop
stos
cmp
adc
test
lock
sub
push
stc
pop
repz
call
loope
mov
cmp
js
push
mov
pop
xor
or
mov
pop
jns
sbb
cmp
xchg
mov
fwait
pop
scas
punpckldq
mov
cwtl
fisttps
pop
pop
in
push
out
fwait
jg
inc
push
fdivs
push
mov
mov
pop
insb
cmp
add
cs
adc
xor
insl
and
subb
adc
adc
sbb
loope
ficompl
add
push
xchg
imul
xchg
inc
pop
mov
jno
xchg
movsl
int3
xor
sub
mov
inc
mov
dec
lods
jp
inc
cld
jae
or
mov
or
insb
in
aas
pop
imul
test
movsl
fsubs
sbb
nop
addr16
cli
push
imul
cli
pop
mov
mov
shll
adc
cld
lret
pop
cld
push
xor
xchg
xchg
pushl
jbe
and
dec
lods
xor
ja
mov
lds
bound
add
ss
dec
xor
mov
mov
xlat
cmp
enter
fmul
addb
test
jl
xchg
pop
jg
sbb
inc
clc
push
adc
bound
stos
jmp
add
je
inc
fldl
call
lods
cmp
mov
nop
adc
aad
fstpl
ss
sbb
add
mov
imul
or
lea
inc
mov
add
in
push
cli
loop
std
push
cmp
dec
lcall
xor
pop
jnp
jge
and
push
rorb
xchg
andl
invd
fld
daa
clc
cmpsl
loopne
les
cmp
ret
pushf
gs
jo
lret
push
mov
and
cmpsb
sub
loope
frstor
sbb
aam
in
mov
mov
and
out
aad
fisubrl
xchg
out
inc
mov
mov
scas
shll
sub
jo
aaa
adc
xchg
cmp
xor
outsb
mov
mov
mov
cld
adcb
mov
mov
sub
cltd
shlb
xchg
out
adc
pop
fisubrs
xchg
inc
inc
lods
pop
jp
xor
fcmove
inc
pop
jno
xchg
test
lods
mov
cmp
pop
or
dec
fnstcw
push
repnz
popf
movsb
add
inc
or
mov
idivl
or
cltd
outsb
cmpsl
movsb
cmp
call
pop
je
roll
push
inc
popa
test
sbb
sti
mov
mov
cs
or
in
push
push
sub
in
adc
mov
jnp
cmp
dec
adc
and
dec
or
movsl
daa
gs
dec
mov
and
test
out
push
push
mov
lods
dec
movsb
mov
xchg
adc
push
icebp
xor
roll
imul
in
adc
arpl
shll
in
iret
leave
push
push
cmp
sub
repz
jns
xchg
ss
jl
inc
xlat
mov
out
adc
adc
and
xor
icebp
add
xlat
fsubrs
imul
jp
xchg
inc
push
scas
push
add
jmp
xorl
and
mov
lock
popl
das
cmp
or
fildll
lcall
jmp
ljmp
pushf
push
mov
add
mov
jl
mulb
dec
das
je
lret
nop
sbb
test
out
roll
and
repnz
js
and
xchg
adc
xor
push
scas
popa
inc
cmp
xchg
mov
pop
mov
outsl
push
cmp
dec
ds
and
pop
adc
xchg
sub
mov
roll
jns
xor
sub
fwait
adc
sub
pop
mov
and
mov
xlat
femms
push
mov
jno
js
in
xchg
mov
mov
loop
imul
mov
rcrl
adc
and
es
mov
imul
cwtl
mov
pop
call
mov
xchg
mov
lea
sbb
cmp
jmp
cld
in
cs
and
in
adc
inc
imul
repnz
sub
stos
and
data16
mov
es
add
pop
inc
out
xchg
or
ret
in
sub
cmp
into
out
fdivs
mov
out
jp
mov
mov
sbb
int3
test
mov
xor
mov
insl
or
scas
dec
fsubrl
jb
add
dec
mov
or
and
jle
push
dec
ljmp
cltd
jns
pushf
cmp
pop
nop
pop
sub
pop
fisubrl
js
sahf
out
jns
add
movl
call
jmp
stc
mov
inc
cmp
cli
loope
shll
jmp
mov
aaa
xchg
mov
or
cli
inc
daa
repnz
mov
or
sub
mov
and
arpl
push
inc
lods
das
nop
mov
outsl
mov
xor
cmp
sub
shlb
rcl
jecxz
pop
in
fwait
mov
xor
cwtl
mov
dec
push
repnz
cmc
sbbb
xchg
stos
js
scas
pop
gs
scas
mov
repnz
and
jns
aam
mov
imul
int3
xchg
mov
or
xor
mov
pop
movsb
push
data16
push
sub
dec
mov
jbe
mov
int3
xchg
imul
subl
inc
arpl
xchg
bound
vunpcklps
lea
or
xchg
adc
ficoms
stc
dec
and
test
in
mov
ljmp
or
insl
cmp
pushf
sub
push
insl
lock
push
dec
push
into
sub
shr
std
cmp
or
inc
ret
fnstenv
jae
loope
bound
dec
ficomps
cli
dec
int
push
sbb
xchg
outsl
test
mov
add
dec
mov
xor
sti
inc
jb
or
jg
dec
sbb
bswap
cmp
jecxz
push
or
cmp
jecxz
sub
adc
xor
adc
mov
jmp
mov
dec
cwtl
adc
aam
sub
repnz
int3
inc
or
stmxcsr
adcb
and
stos
imul
or
push
clc
or
sub
divl
sub
add
push
push
loope
fisubl
cli
pop
mov
std
fwait
aaa
xor
fiadds
or
inc
or
cld
repnz
ret
sub
or
bnd
das
mov
xchg
cwtl
in
inc
idivl
dec
es
cmp
int
push
arpl
push
push
xchg
pop
mov
and
inc
out
fisubrl
fsubr
mov
ret
cmpsl
cmp
test
enter
push
fdivl
popa
lret
sahf
rol
inc
bnd
lods
and
ja
stos
mov
pop
xor
or
pop
fwait
add
out
fwait
push
mov
clc
cld
jne
mov
xor
lods
pop
add
and
data16
xchg
stos
daa
xor
dec
testb
scas
pop
movsl
loop
xor
xchg
xchg
fdivs
scas
mov
into
push
sub
shrl
xchg
jns
sbb
lods
pop
dec
push
xorl
jns
jg
movsl
sbb
les
insl
clc
hlt
xchg
jecxz
out
xor
or
jp
mov
aad
in
in
mov
ret
pop
cwtl
cmp
mov
les
add
sbb
xorb
xor
outsl
movsl
sub
inc
jbe
into
jno
int3
sbb
cmpsb
lcall
xchg
dec
lods
pop
ss
lock
cmp
add
movsl
lahf
ja
jnp
lret
fstps
cld
pop
xor
and
push
ja
mov
cs
test
das
ja
ljmp
cmp
stc
dec
xor
mov
out
stos
data16
in
xchg
lret
cmp
pop
cmpsl
and
lods
mov
insb
add
repnz
push
adc
rcll
dec
stos
fwait
mov
push
xchg
outsb
int
mov
jg
and
xlat
jg,pn
adc
insb
xor
xchg
test
xor
int3
mov
testl
xor
roll
lock
mov
cwtl
add
std
jge
dec
cmc
aam
cmp
jp
dec
pop
sub
or
sub
pop
negb
cmpsl
xchg
add
int
flds
xchg
test
xlat
pmulhuw
mov
imul
mov
xor
das
adc
jge
mov
lret
inc
lahf
test
jp
in
xchg
dec
mov
dec
rclb
adc
cwtl
dec
pop
hlt
mov
cltd
sub
jl
inc
adc
das
dec
pop
mov
shll
xor
out
sbbb
jmp
lods
sbb
jbe
in
andl
add
sub
test
aad
sbb
sbbb
xor
popf
jo
xchg
lahf
lret
outsl
and
and
jge
cmpsb
out
in
jne
call
lahf
dec
hlt
xor
mov
adc
mov
sub
js
mov
add
dec
fadds
arpl
lea
out
mov
adc
dec
hlt
add
inc
sbb
out
sti
push
daa
or
lods
test
mov
cwtl
out
and
js
rcll
push
xor
xchg
jb
stc
repz
and
aam
push
in
orb
dec
imul
scas
shrl
ja
sub
jbe
cmc
loopne
shrb
xor
mov
inc
add
imul
aad
inc
and
das
sti
jnp
mov
idivb
out
mov
dec
ror
pushf
xchg
das
arpl
cmpsl
mov
adc
add
xchg
in
imul
sbb
xorl
pop
fs
lahf
sbb
jnp
popf
aas
lods
xor
mov
shlb
or
sub
xor
xor
dec
int
lea
sub
in
jne
imulb
xor
rolb
adc
mov
repnz
call
sub
push
cmpsb
stos
pop
push
loope
repnz
outsb
call
in
std
adc
mov
sbb
jl
sahf
inc
dec
mov
push
andb
pop
xchg
xchg
mov
xor
ret
sub
movsl
fnstsw
mov
mov
je
push
addr16
lock
add
subb
jnp
dec
mov
mov
jge
dec
movsl
leave
ja
inc
mov
fucomp
jecxz
call
js
sub
lods
inc
add
std
jbe
daa
movsb
pop
adc
pop
rcrl
inc
push
std
mov
or
mov
sbb
cmp
mov
jae,pt
adc
mov
cwtl
scas
sub
xor
sbb
arpl
icebp
rcrl
sbb
ljmp
xchg
mov
ret
mov
mov
adcl
sbb
popf
mov
les
mov
roll
iret
jp
mov
cs
ds
mov
sub
inc
mov
sub
iret
xchg
cmp
rcr
push
mov
fcoms
js
xchg
aas
sbb
push
xchg
pop
in
lock
fnstcw
inc
fs
xor
ret
sub
nop
insl
shll
mov
push
adc
in
pushf
mov
mov
into
icebp
inc
xorb
ret
test
pusha
dec
jp
stos
fstpt
out
loop
sbbl
inc
and
ret
xchg
jnp
scas
cltd
into
aas
movsl
or
adc
jmp
int3
push
add
xor
fnsave
hlt
xor
push
mov
lahf
inc
fldln2
jb
fnstenv
xor
xchg
idiv
push
sub
js
popa
sti
out
pushf
push
shlb
ljmp
daa
adc
pop
cmp
test
lret
test
test
adc
hlt
aas
mov
pop
sub
lcall
jmp
mov
ljmp
in
inc
jecxz
push
lock
jbe
aad
fnstenv
leave
mov
jge
leave
ret
push
cwtl
and
inc
and
fistpll
mov
dec
outsb
scas
js
out
movsl
lods
jo
frstor
pop
loope
push
xorb
outsb
es
popf
pusha
inc
js
fmulp
addl
mov
mov
xchg
ja
nop
pop
mov
into
popa
out
call
mov
out
daa
pop
sub
or
test
push
mov
sbb
push
out
pop
sub
outsl
xor
pushl
sbb
xlat
xchg
shrl
scas
adc
mov
pop
and
or
test
mov
cltd
mov
dec
xlat
cmp
aam
outsb
pop
out
lcall
ja
ja
mov
push
adc
mov
ds
insb
gs
fldl
loop
div
pop
jnp
ja
outsb
fbstp
sub
pop
cmp
and
fstpl
lock
or
movsl
dec
pop
mov
rol
jbe
cmpsb
test
push
pop
mov
adcl
lahf
mov
push
scas
leave
xor
repnz
lret
inc
adc
mov
jmp
inc
into
inc
pop
insb
xchg
mov
into
mov
sbb
push
adc
scas
dec
mov
mov
dec
out
push
leave
pop
test
or
jne
sbb
sbb
mull
jbe
es
push
xor
xchg
cmp
mov
mov
and
and
iret
cmpsb
mov
cvtdq2ps
mov
sub
cmp
inc
inc
xchg
cmc
fst
mov
call
cmc
and
sbbl
jae
dec
xlat
std
push
jl
sbb
ds
rol
data16
in
arpl
rcrb
lret
sub
jno
mov
sbb
cmpsl
mov
jne
fs
adcl
fsubl
xchg
pop
adc
and
jmp
add
fwait
sbb
ja
pop
mov
inc
popf
es
jp
xchg
add
xacquire
iret
or
mov
daa
mov
xor
inc
sub
arpl
lcall
inc
sub
lods
push
or
jg
test
imul
mov
std
jl
cmp
orl
scas
outsb
pop
or
loopne
adc
aaa
aas
xchg
sahf
inc
stc
push
cmp
ret
loop
ffreep
stc
shrb
xlat
jle
test
xor
mov
mov
xlat
lods
jae
ds
rorb
adc
mov
cmp
push
into
les
ret
adc
and
xor
stos
mov
lock
cmpsl
jle
addr16
arpl
xor
icebp
ja
inc
or
aaa
arpl
xchg
cmpsb
je
sbb
cwtl
and
push
icebp
inc
pop
jmp
xchg
lods
xor
pop
out
adc
or
sub
sub
notl
dec
fldt
jbe
mov
adc
hlt
clc
mov
bnd
scas
mov
fisubrl
mov
aad
shrd
loope
or
jg
cmpsb
scas
inc
adc
jp
pop
jmp
and
fsub
icebp
ljmp
push
sbb
fiadds
leave
test
dec
insl
rcrl
inc
negb
add
push
mov
addr16
loop
dec
ret
das
ds
adc
out
add
cli
cltd
and
neg
mov
jmp
mov
xor
cmp
adc
pop
lahf
lea
decb
loop
dec
or
or
lea
aas
xor
out
mov
lret
xchg
in
sub
inc
cmp
das
sti
or
add
xor
push
adc
push
arpl
aad
dec
push
lret
lret
lods
mov
ret
fstpl
lret
jbe
roll
ja
jnp
bound
push
inc
pusha
push
mov
mov
or
mov
xchg
add
fiaddl
lods
stos
or
mov
sub
shlb
je
push
inc
mov
and
stos
mov
std
sub
push
pop
or
repnz
leave
pop
adc
ja
and
sbb
xor
dec
push
pop
add
and
lock
hlt
xorb
push
pop
ds
sbbl
sbb
cmpsb
filds
repz
add
notl
push
pusha
jmp
pop
gs
pusha
inc
sbbb
cld
lahf
mov
jge
stos
addr16
rcrl
jns
andb
jbe
dec
imul
test
and
out
cmp
cmpsl
cli
sbb
lahf
add
leave
adc
mov
fwait
pop
stos
xchg
popf
sar
int
aas
mov
call
adc
pushf
cmp
sti
test
popf
out
sbb
adc
loop
push
cltd
sub
push
mov
dec
sahf
jle
push
mov
push
jl
sbb
adc
pop
test
sub
call
mov
out
xchg
jbe
pop
daa
push
add
dec
cmpsb
lods
enter
shlb
push
adc
imul
mov
scas
loopne
xchg
xor
jnp
cmp
sbb
outsl
xchg
gs
push
add
dec
fsubrl
add
jp
daa
lods
cs
mov
nop
in
icebp
jno
imul
or
lret
arpl
inc
jle
sbb
mov
adc
leave
or
push
test
mov
adc
mov
sub
sbb
mov
add
jge
inc
cli
and
js
pop
pop
clc
mov
push
mov
pop
addb
fucomi
dec
loope
stos
sub
push
xchg
mov
mov
pushf
adc
and
cmp
xchg
jmp
je
js
aam
xchg
jmp
mov
vpaddw
sbb
pop
mov
xchg
subb
mov
mov
test
mov
xorl
pop
mov
dec
in
xor
adc
test
test
mov
pop
jb
sub
mov
sub
adc
mov
mov
lret
jae
pop
adc
pop
scas
inc
xchg
push
dec
jmp
add
mov
dec
pop
mov
xor
push
mov
dec
dec
popa
jns
jbe
push
xor
inc
sbb
sub
dec
push
inc
dec
xchg
mov
insl
xchg
je
fidivl
or
or
sarb
mov
mov
idivb
data16
adc
mov
xchg
sbb
inc
sbb
cmp
sbb
insl
loop
mov
sahf
insl
sbb
jb
out
pop
cmc
outsb
add
lret
std
or
cs
jge
adc
shlb
ret
cli
pop
mov
cmp
insb
mov
out
cld
pop
or
push
or
jae
xchg
pop
sbb
mov
test
push
bound
cmp
nop
or
into
xor
add
int3
cmc
cmp
mov
ret
add
jmp
stos
decl
pop
outsl
imul
pop
add
pop
sub
cli
or
push
jb
scas
jmp
cli
into
sbb
push
iret
or
pop
icebp
popf
jecxz
test
adcb
xorl
push
add
je
pop
mov
pop
xchg
mov
xor
rcl
loope
lret
add
popf
fsubp
enter
aad
das
sub
aaa
ret
fwait
or
mov
pop
dec
repnz
aaa
jecxz
lds
orl
ljmp
sbbb
sbb
xor
enter
adc
ss
aas
lahf
fildl
fwait
xchg
test
xor
mov
ja
out
cmp
push
pushf
pop
cmp
add
fsubs
jae
outsl
jmp
call
xchg
push
movsl
rol
lods
mov
mov
push
cs
push
mov
insb
stos
mov
dec
pop
push
xchg
pop
iret
inc
stos
in
insb
mov
adc
in
xchg
adc
jge
mov
loop
clc
dec
push
inc
xlat
jnp
sub
xchg
clc
es
inc
push
idivl
sbb
aad
dec
mov
sub
int
in
adc
xchg
xor
inc
push
popf
shrb
gs
imul
addr16
repnz
ret
rolb
mov
ds
call
mov
stos
add
sarw
fistl
outsl
out
sbb
scas
jmp
test
stos
jmp
add
movsb
and
ret
movsb
dec
iret
add
dec
pop
xor
or
ljmp
xor
cmc
mov
out
notl
imul
data16
push
or
dec
or
sbb
ja
lcall
shlb
in
fs
and
and
call
shll
iret
xor
lea
push
push
jno
in
daa
mov
jno
xchg
lret
loop
sub
sbb
and
jle
adc
repnz
stc
cmpsb
mov
loop
testl
gs
std
jno
mov
movsl
push
js
sub
test
bound
mul
in
lock
jg
sbb
jg
test
in
ret
adc
mov
addl
hlt
cmp
js
repnz
mov
xchg
bound
pop
decb
sti
call
rol
cli
loope
imul
fistps
inc
mov
iret
pop
in
lods
mov
mov
add
ret
mov
inc
cmp
das
pop
mov
xchg
adc
mov
pop
sbb
aas
pusha
xor
cmp
cmp
mov
xor
fcmovu
jbe
cmpl
popa
cmp
xchg
xchg
ss
and
ljmp
iret
int3
aad
add
nop
fcompl
jnp
cmp
cmpsl
leave
fstp
dec
sub
push
ljmp
cmp
xchg
dec
mov
adc
movsb
fimull
sub
sbb
jnp
lcall
push
adc
enter
neg
jae
cwtl
pop
pop
outsl
out
sti
jl
dec
fwait
out
pop
fdivs
dec
fisttpll
cs
sti
movsl
add
jns
mov
push
in
sbb
pop
sub
icebp
jge
pop
in
lods
inc
fsubs
andl
ficoml
fsub
inc
popa
orl
mov
loopne
sbb
fldenv
mov
dec
loope
outsb
ja
dec
mov
out
dec
pop
cmp
add
nop
icebp
sbb
das
scas
ljmp
movsl
sti
outsb
inc
cmpl
cmp
out
dec
imul
pop
cmp
push
out
mov
jns
leave
mov
movsb
cmp
mov
sbb
lods
sahf
push
addl
mov
push
std
fistpl
js
pop
movsl
test
int
dec
adc
mov
sbb
pushf
adc
xor
pop
hlt
fldcw
push
loope
cmp
mov
addr16
test
or
scas
jle
lods
ficomps
lods
adc
jle
sub
xchg
lret
ljmp
cmp
add
inc
inc
repz
mov
xchg
sbb
popf
into
es
mov
push
loop
imul
ret
js
adc
pop
sahf
hlt
sbb
iret
popa
mov
pop
ja
and
mov
xor
pop
inc
clc
mov
pop
loopne
out
ficomps
into
add
pushf
inc
pop
hlt
lods
mov
fldl
add
xchg
jbe
push
and
and
scas
test
or
and
xchg
mov
je
scas
jle
pop
aaa
aam
loop
shr
test
cwtl
inc
push
push
pop
inc
mov
fs
and
push
out
push
loop
adc
add
mov
xchg
cltd
xchg
daa
cmp
clc
sub
test
out
sub
add
xorl
fs
aaa
test
dec
pop
mov
mov
repz
xchg
jge
std
push
imul
sbb
clc
push
push
aas
sbb
fs
sbb
test
sbb
push
test
fwait
sbb
xchg
push
inc
pop
lahf
fs
in
mov
int3
adc
sbb
je
add
out
out
push
inc
mov
rdtsc
sbb
cwtl
xor
xor
std
data16
lahf
lcall
push
call
sbb
cmpsb
insb
and
mov
lds
inc
fnstcw
shr
int3
outsl
leave
push
sbb
loop
scas
cmpsl
mov
lcall
test
xchg
subb
repnz
daa
and
xlat
jg
or
cwtl
adc
sbb
and
pop
lods
enter
mov
sti
xchg
imul
cmp
xchg
cmc
fidivrl
dec
push
pop
fidivs
lods
mov
push
jnp
and
xchg
mov
inc
scas
test
or
sti
pop
test
mov
lods
inc
mov
dec
sbb
jnp
lret
lods
nop
rcl
ret
int
mov
aad
out
in
rorl
mov
es
adc
pop
int3
lock
pop
adc
xor
push
mov
shll
pop
shr
and
aam
lcall
add
add
fstpl
sarb
nop
out
push
mov
cmpsb
lret
jg
or
lea
cltd
jle
mov
idiv
jne
lock
fld
andb
pop
repnz
xchg
loopne
xchg
popf
inc
shll
shl
ret
push
xor
outsb
mov
mov
cmpsl
lsl
sahf
push
mov
push
and
mov
cltd
mov
adc
pusha
or
dec
out
out
shlb
xchg
cmp
mov
jg
ja
mov
adcb
pop
test
pop
sub
inc
push
xor
in
clc
push
ficoms
sti
scas
enter
jo
and
mov
dec
xor
inc
imul
pop
xor
cmpsb
repnz
mov
out
add
add
xor
cld
leave
jg
mov
std
stos
std
dec
into
insb
lahf
test
andb
mov
add
idivl
in
xor
out
in
push
cwtl
jmp
and
mov
popa
push
fidivl
ret
sti
in
out
mov
stc
xchg
sub
push
insl
es
dec
add
cld
cmova
cmp
ja
fnsave
and
jne
or
call
dec
or
xor
add
pop
and
xor
rclb
cmc
mov
hlt
xchg
and
xor
rcll
movsb
es
roll
dec
inc
jle
mov
adc
mov
movsl
insb
fisttpl
lcall
mov
lods
jg
ret
fdivs
loope
out
cld
xchg
push
in
mov
xor
cmp
into
test
clc
lret
mov
dec
daa
push
mov
xchg
add
mov
inc
sbb
inc
jge
fsubs
mov
and
mov
jmp
jb
lret
bound
movsl
add
scas
inc
mov
pop
fnsave
sbbl
pop
mov
xchg
xor
push
cmp
into
fs
sbb
imul
lds
popf
or
rclb
mov
ret
cmp
xchg
jecxz
adc
sarb
mov
xlat
xor
mov
je
cld
add
andb
ret
push
mov
mov
inc
and
dec
add
shlb
test
sbbb
int
and
icebp
insb
in
lcall
pop
test
add
daa
xchg
pushf
sti
js
adc
adc
arpl
jne
xor
add
dec
out
xor
andb
push
add
xlat
and
push
xchg
hlt
sbb
mov
sub
mov
mov
rcl
adc
and
jbe
and
mov
mov
mov
ret
repz
xlat
pop
aaa
int3
rclb
dec
insl
inc
jge
inc
and
pop
sub
test
ss
pop
lret
out
pop
outsb
pop
jo
pop
dec
fwait
mov
out
shll
out
iret
nop
dec
inc
movsl
mov
repz
pop
cmp
test
sub
add
cltd
std
push
xor
jecxz
jb
call
test
shrl
xchg
das
sti
scas
cmp
jp
aaa
int
or
shlb
mov
fadds
lea
push
mov
dec
addr16
sbb
add
inc
scas
std
icebp
repz
mov
in
mov
mov
icebp
outsb
cld
push
mov
clc
push
pop
jae
xchg
mov
mov
dec
repz
mov
iret
shll
into
mov
xor
mov
push
cmp
jge
std
mov
sbb
sub
loope
mov
jecxz
inc
sub
mov
mov
xchg
test
adcl
in
mov
lods
cmp
xchg
fldcw
push
into
divb
aas
pop
or
dec
adc
inc
inc
dec
add
int
cltd
xlat
dec
pop
repnz
fstpl
pop
cmc
fadds
xchg
mov
fwait
add
xor
aas
arpl
push
lea
push
ficoms
jne
jae
stos
xchg
bound
inc
stc
in
sahf
mov
xchg
add
cltd
adc
lcall
sbb
push
or
or
mov
inc
aad
sbb
subb
ret
xchg
repz
js
aad
xorl
or
test
fisubl
push
sbb
lock
xor
xchg
mov
add
push
mov
lcall
jg
cmp
fildll
lret
jae
mov
decl
ss
call
pop
push
adc
adc
add
pop
and
adc
je
or
fiaddl
test
add
sub
cmc
fildl
inc
imul
xchg
cwtl
dec
ljmp
scas
call
jecxz
push
fnstcw
cmp
test
test
js
scas
mov
stos
mov
xchg
pop
push
push
movb
insb
test
stc
add
xor
nop
shlb
mov
les
pop
pop
gs
xchg
jecxz
pop
jmp
lods
and
fdivrs
inc
dec
stos
sub
das
mov
xchg
jnp
mov
sbb
sahf
stos
xor
movsl
cwtl
xchg
mov
sbb
stc
fldl
add
stc
icebp
fsubrs
mov
fisubl
and
cs
adc
jmp
mov
push
mov
sbb
cmp
mov
and
xor
push
push
out
xchg
adc
mov
stc
decl
push
mov
test
out
mov
push
nop
add
jg
test
movsl
rcll
jne
sti
push
outsl
iret
movsb
xor
xchg
dec
sub
add
pop
cwtl
pushf
iret
xchg
cmpsl
popl
jnp
lock
jmp
adc
adcl
dec
sbb
adc
cltd
and
js
out
out
and
push
mov
lods
ds
imul
push
je
sub
dec
mov
orb
popf
push
mov
and
jge
fs
mov
scas
push
stos
xor
and
inc
jns
js
shll
xchg
fnstenv
mov
je
loopne
lock
mov
mov
mov
subl
adc
inc
xchg
lcall
popa
cltd
gs
push
insl
loope
mov
scas
jg
popa
push
shl
jnp
pop
lcall
add
daa
cmp
cmp
xchg
ja
repnz
push
xor
cmp
test
inc
rcl
test
inc
movsb
lcall
cli
inc
adc
jg
lret
push
mov
and
loop
out
lcall
add
out
in
sbb
jge
pusha
pop
loope
pop
je
orb
aam
mov
ds
stos
mov
jne
movsl
dec
sbb
ret
mov
pop
pop
fwait
cmp
pop
or
pop
repz
adc
outsb
mov
iret
jmp
pop
push
icebp
and
push
ljmp
push
sub
addl
mov
add
mov
loope
add
enter
test
lods
add
repnz
pop
push
cmc
loope
and
push
push
cs
lcall
stc
add
cs
pop
inc
mov
cmp
mov
test
scas
push
pop
push
cli
test
rolb
pop
je
mov
cmp
outsb
xchg
mov
jp
push
sub
outsl
repnz
or
adc
ljmp
mov
jg
mov
aad
jg
mov
xlat
mov
pop
adc
mov
xor
mov
sbb
add
loope
mov
lret
loopne
rolb
repz
sbb
scas
cmp
push
pop
imul
repnz
loope
imul
nop
cmp
xchg
xlat
jno
xchg
dec
ja
sbb
jbe
fdivl
mov
jae
xor
mov
loop
ficompl
adcb
add
mov
cld
pop
or
cltd
notb
sub
cmp
popf
fistpll
xchg
outsl
xchg
mov
loope
std
push
cli
push
lods
rcll
je
mov
inc
dec
lret
or
push
mov
iret
jae
cmpsl
outsb
cmc
xchg
roll
out
push
fisttpl
andps
popf
test
lock
mov
sbbb
xor
stos
dec
jns
or
push
pushf
jecxz
and
mulb
push
pop
pusha
jns
imul
jne
dec
push
jae
dec
leave
xor
adcb
pop
aaa
stc
pop
ljmp
adc
cmp
inc
aas
ret
cmpsl
or
push
adc
xchg
jmp
test
add
sbb
cmpsb
cmpsb
pushf
sub
and
dec
stos
std
push
mov
push
std
xchg
lods
rcrl
jbe
xchg
enter
add
cli
mov
cli
jmp
mov
cmp
pushf
xor
outsl
pop
rorl
dec
enter
sbb
mov
cmp
jle
fs
jo
das
sarb
into
push
lret
mov
fmull
push
push
push
mov
sub
sub
in
xchg
lahf
iret
enter
xchg
cmovo
jns
lea
mov
mov
shl
adc
dec
add
into
inc
ds
or
imul
or
add
push
inc
xchg
and
sbb
loopne
enter
inc
mov
pop
clc
pop
jae
xchg
pop
push
pop
stos
loope
pop
push
dec
fcmovnbe
xchg
dec
jb
or
xchg
lret
stos
mov
or
inc
sub
mov
mov
cltd
dec
test
pop
push
sub
mov
mov
fnstcw
fwait
lret
stos
or
bound
cmp
into
std
ret
call
xchg
sbb
jge
add
fistps
adc
jo
mov
push
sbb
mov
dec
xlat
orb
cs
aad
pop
push
or
repz
stc
sub
daa
movsl
cmp
imull
pop
add
xor
inc
cmpsb
adc
pop
inc
pop
sub
mov
ss
mov
inc
cld
inc
pop
loopne
xchg
mov
popf
sub
fisubl
movsb
adc
sub
cmc
fucomp
adc
in
xchg
fistps
xchg
popf
mov
pop
sub
fnstenv
dec
ss
mov
cmp
mov
cmp
idivb
dec
or
in
jo
lock
mov
inc
adc
or
js
xor
fisttpl
insb
repz
out
and
and
mov
add
mov
cmp
fnstenv
or
inc
cld
test
jo
xchg
pop
push
enter
sbb
mov
jge
ja
push
or
sbb
xchg
sti
testl
cmpsb
mov
enter
push
or
xchg
ljmp
cmp
les
mov
inc
xchg
push
popl
inc
je
xor
nop
sub
cmp
mov
inc
aas
add
popa
in
add
cmc
mov
sti
cmp
popf
add
jge
lret
fs
dec
adc
clc
lcall
gs
cmc
xchg
lcall
dec
popa
imul
cmp
int3
cld
lock
inc
sti
pop
mov
out
adc
aad
jo
mov
push
mov
and
pop
lahf
lods
jne
adc
sbb
dec
enter
pop
fwait
rol
push
aas
sbb
loope
in
pop
loope
adc
mov
jnp
sbb
dec
mov
mov
rcrl
xchg
mov
fstpl
lahf
int3
and
and
movsb
out
aam
lock
inc
mov
js
out
mov
sbb
pop
mov
daa
cmpsl
clc
fsub
leave
in
jle
insb
mov
repnz
in
cltd
push
or
add
mov
push
mov
inc
in
add
cmpsl
jns
fstp
pop
fwait
ds
or
in
push
jecxz
push
decl
pop
pop
dec
sub
add
js
mov
ss
lret
ret
fnstsw
pop
or
sub
insl
mov
jg
xchg
outsb
sbb
mov
jmp
adc
imul
pop
sbb
inc
jp
mull
mov
push
mov
nop
hlt
jae
push
cmp
add
mov
aad
jmp
dec
xor
inc
test
popa
push
imul
aas
lret
xchg
add
mov
stos
xchg
jle
xor
mov
add
pop
jg
mov
out
pop
inc
jmp
and
cmp
lds
pop
push
adc
stos
cmpsb
insb
aam
icebp
icebp
and
jmp
mov
stos
ds
movsl
mov
das
call
xchg
or
cld
mov
fldenv
loopne
andl
aad
add
nop
xchg
adc
or
faddp
mov
inc
fisubs
sub
lret
into
mov
in
xchg
mov
sahf
call
inc
in
shl
stos
sbbl
ret
andb
stos
or
xor
jecxz
rcrl
lea
jle
popa
inc
incl
inc
mov
xchg
movsl
pop
aaa
lret
adc
into
inc
add
push
jo
pop
xlat
or
xchg
movsb
sub
scas
dec
icebp
fldcw
adc
inc
fnstenv
hlt
xchg
jne
mull
xorb
sub
and
cmp
test
gs
fs
enter
adc
fildl
shll
sbb
data16
cmc
mov
jmp
add
cmp
jo
fidivl
mov
dec
push
mov
sub
jo
xchg
dec
cmpsl
lcall
mov
int
pop
movsb
in
ret
test
mov
in
loopne
repnz
sbb
xlat
and
inc
ret
mov
les
aad
sub
xor
dec
ja
jmp
mov
push
pop
loope
fistpl
arpl
shll
jl
addl
arpl
sub
sbb
mov
inc
shl
mov
aad
or
push
mov
clc
and
outsb
arpl
in
call
cwtl
fs
gs
sub
or
sub
out
jne
cmp
inc
ja
cmp
pop
sub
sub
das
jmp
sahf
je
outsl
rcrb
pop
push
out
sarl
mov
fists
call
lret
sti
mov
shll
push
or
cmpsb
cli
inc
ljmp
inc
xor
das
cmp
push
or
iret
jge
loop
rorl
fmul
addl
push
and
mov
cs
hlt
std
out
jo
xor
repz
or
ljmp
scas
mov
mov
adc
ret
jecxz
cwtl
push
dec
mov
fildll
roll
scas
stos
out
out
jge
sbb
push
cmp
in
mov
rorb
mov
cmp
mov
jmp
std
mov
xchg
cli
sub
lret
sbb
mov
adcb
mov
ja
or
gs
xchg
aam
sbb
add
add
jl
lahf
dec
std
cmp
loope
orl
test
in
xor
mov
inc
ja
cmp
shl
int3
sarb
pop
jle
iret
pop
xor
in
jno
push
jb
dec
out
int
jno
push
loope
inc
and
popl
int
or
adcl
loope
dec
mov
adc
test
sbb
inc
in
xor
adc
repz
lcall
lods
jnp
loope
mov
stos
sti
or
dec
test
and
push
pop
mov
outsl
mov
adc
in
push
push
add
push
jge
xchg
dec
or
insl
push
mov
lods
out
cwtl
jmp
mov
add
ja
imul
mov
int
stos
insl
add
iret
out
imul
daa
icebp
scas
sbb
gs
adc
movsl
xlat
filds
dec
mov
xor
fs
jnp
nop
aad
ret
pop
add
jp
daa
ljmp
xchg
orl
or
inc
in
push
mov
int
jns
mov
lods
jae
aad
lods
movsl
lcall
sarl
mov
xor
pop
mov
pop
icebp
fistpl
xor
push
stos
std
sub
sbb
in
jg
jl
push
in
test
jl
cs
cmc
adc
sub
lret
inc
fisttpl
rorb
fists
mov
push
and
adcl
xor
insb
xchg
xchg
sub
lods
cmp
loope
pop
mov
xlat
and
dec
fcomps
popf
fidivrl
or
mov
mov
out
and
sub
mov
std
push
mov
mov
inc
pop
mov
sahf
pop
mov
lret
adc
pop
mov
mov
iret
into
xchg
push
add
xor
pop
or
pop
pop
fisubrl
push
add
cmc
push
loopne
xor
repz
jge
mov
sub
pop
arpl
popa
cld
mov
add
cmp
call
push
fstpt
inc
push
js
dec
cmp
mov
ret
outsl
popf
fists
push
mov
and
fstpt
scas
adc
xor
popf
and
lahf
sbb
fwait
test
pop
jo
out
pop
popf
pop
jbe
push
cmc
sbb
fwait
ds
xchg
cmpsl
aam
scas
les
enter
fstl
movsl
mov
int
jbe
cmp
int3
cli
scas
fsubrl
pop
mov
movsl
add
jmp
dec
call
test
inc
mov
dec
push
pop
adc
xchg
movsl
inc
outsb
call
loopne
pop
popa
insl
movsl
data16
andb
or
mov
lcall
mov
or
cmpsb
mov
cmpsl
cmp
sub
dec
dec
fimuls
rorb
inc
sbb
xchg
mov
push
pop
and
and
jp,pt
les
jns
push
or
aas
lock
sarl
mov
or
outsl
or
inc
push
jmp
cmp
add
mov
pop
stos
movsl
jmp
orb
std
or
and
xor
leave
dec
mov
dec
leave
sub
jmp
es
dec
mov
dec
out
jno
das
cmp
jle
pushl
test
and
push
pop
add
es
pop
or
sbb
loope
cs
out
cltd
or
push
or
mov
out
paddsb
add
imul
leave
cmp
adc
popa
stos
in
pop
and
or
loopne
testl
es
lret
es
mov
das
and
lods
fwait
cmp
incl
clc
rclb
mov
lods
stos
jae
add
mov
xchg
sahf
xlat
iret
stc
ret
jle
inc
jle
xor
mov
insb
push
mov
mov
mov
orb
pop
xor
jl
xchg
pop
adc
jae
push
dec
mov
jo
fs
stos
js
shrl
fsubrp
mov
jnp
lahf
cli
ret
sub
lret
es
loope
or
aas
add
orb
mov
add
stc
sbb
rorb
ds
aaa
xchg
lsl
sub
pusha
dec
sahf
push
xor
in
jge
clc
and
fcmovu
dec
das
lahf
pop
mov
xor
mov
scas
xchg
jb
leave
adc
inc
scas
sbb
roll
xchg
and
sub
into
orb
push
loope
stos
lahf
insb
ret
adc
fcmovnbe
mov
nop
inc
aas
mov
repnz
jne
mov
outsl
add
cli
test
js
dec
or
and
jecxz
pop
scas
jne
sbb
cmp
into
mov
je
mov
iret
sub
and
mov
into
mov
adc
xchg
lock
dec
inc
sub
xchg
mov
pop
aas
mov
push
mov
jnp
mov
mov
mov
xchg
loope
inc
in
ljmp
pushf
mov
iret
insl
and
xadd
fs
loopne
adc
daa
adc
mov
into
mov
test
shrb
push
lods
sub
cmp
stc
cmc
sahf
mov
repnz
mov
fidivrl
lahf
add
mov
test
rorb
movsb
popf
and
sub
dec
add
mov
push
mov
mov
ucomiss
inc
mov
add
clc
ljmp
call
sub
xchg
lds
jmp
mov
fmuls
xchg
in
fbld
mov
divl
dec
bound
das
fmul
call
les
jbe
fistpl
scas
cmc
jge
xor
mov
or
enter
imul
sub
fldenv
adc
mov
gs
cmpb
imul
je
or
adc
add
out
cwtd
jns
das
mov
cmpsl
shll
mov
xor
addr16
inc
push
mov
xor
and
or
sahf
jns
adc
adc
sti
sti
push
mov
popl
xchg
shrl
mov
xchg
hlt
adc
sub
enter
outsb
xor
dec
aaa
fbld
add
aad
cltd
sub
loopne
inc
clc
jl
push
mov
aas
inc
les
stos
lcall
lods
sbb
pop
cmp
mov
fcompl
lahf
xor
or
sbb
dec
cmc
or
ja
adc
jno
bound
cmp
xchg
mov
hlt
pop
js
sub
das
inc
in
fpatan
add
add
mov
rclb
test
enter
xchg
pushf
nop
cld
pop
add
xchg
sub
das
jno
or
mov
shrb
jbe
mov
daa
lcall
jmp
xchg
mov
sbb
aam
or
sub
fsubl
je
mov
adc
rol
std
adcb
imul
scas
sbb
xor
clc
lods
ja
adc
cli
jno
pop
or
in
xchg
scas
cltd
inc
aas
inc
push
out
adc
push
cmc
pop
jg
push
mov
movsb
fwait
or
arpl
dec
aaa
xor
push
dec
cmp
mov
jge
jne
push
sub
jp
fildll
addr16
rcl
mov
cs
je
cmp
xor
add
cmpsl
xor
cli
pop
and
mov
fsubrl
jae
call
cltd
lcall
les
in
cs
inc
sub
aaa
in
aaa
rol
pop
add
rolb
mov
cltd
rcrb
jmp
aam
call
xchg
xchg
mov
sub
pusha
leave
subb
adc
stc
or
movsb
rolb
fcoml
pop
cwtl
xor
or
xchg
jmp
and
rolb
push
fidivrl
fidivl
push
cltd
popa
mov
inc
sbb
push
pop
out
sbb
sbb
xor
pop
xor
mov
ud1
incw
ds
dec
push
rcr
add
or
shrb
cwtl
sbb
pop
gs
fiadds
rcrl
sbb
fcomip
movsb
ds
lret
lret
stc
lods
loopne
cmp
cmpsb
fistpll
in
test
pop
dec
mov
pop
fxch
pop
jge
iret
lds
and
xchg
popf
mov
xor
lods
cmp
cltd
arpl
outsb
sti
je
dec
xchg
pushw
or
mov
mulb
jno
movl
cli
add
aaa
sub
lret
idivb
mov
add
xchg
jge
dec
arpl
test
xor
sub
enter
jle
jno
cmp
cmp
insb
dec
push
xor
es
push
pop
mov
pop
inc
inc
mov
jmp
inc
fdivrl
das
lahf
hlt
clc
addr16
fwait
sahf
insl
addr16
xlat
inc
lods
xchg
daa
shlb
jle
adc
mov
and
idivl
fildll
shrb
int
fstl
mov
cmpsl
rcrl
fstpt
cmpsl
jge
imul
dec
insb
ds
lods
xchg
mov
inc
add
repz
fs
cld
daa
push
rcrb
repz
enter
sbb
cmp
cmp
sub
popa
pop
dec
mov
xchg
fucomi
pop
xchg
mov
mov
push
repz
loope,pn
lock
aad
or
gs
mov
inc
mov
notl
iret
in
lock
dec
cs
xor
push
pop
mov
add
lea
mov
shrl
lret
sahf
ret
push
push
xor
or
fldl
push
aaa
mov
cld
pop
xlat
mov
jnp
incb
ret
mov
add
addb
ja
mov
and
push
int3
pop
pop
inc
fwait
mov
test
int3
mov
dec
rol
out
add
xor
mov
and
push
sub
out
and
mov
push
pop
hlt
add
dec
sbb
fwait
int
das
sub
jmp
push
popa
loope
stos
imul
xadd
xchg
cltd
xchg
sub
mov
mov
mov
cmp
cmc
adc
mov
or
mov
push
sbb
or
fimuls
push
scas
fmull
aam
inc
ljmp
lret
add
daa
push
jecxz
rorb
test
mov
pop
mov
loop
push
aaa
push
popf
lcall
inc
mov
nop
lret
dec
data16
loopne
add
sbb
les
hlt
iret
mov
jg
and
push
scas
mov
mov
pushf
inc
repz
jg
lret
ret
daa
adcl
sub
pop
mov
sub
xchg
pop
mov
in
test
lcall
cwtl
sbb
dec
mov
vpackuswb
aam
fistl
imul
sub
mov
je
jne
inc
fisubrl
dec
inc
and
add
dec
ds
scas
fcmovbe
xor
inc
mov
and
dec
lahf
mov
mov
inc
add
js
adc
testb
std
subb
xor
fcmove
push
sub
add
pushf
adc
ret
xchg
arpl
js
sarb
movsb
add
jne
inc
daa
scas
add
pushl
sti
pop
scas
daa
fisubs
ja
test
xchg
shrl
pop
addr16
pop
insb
jnp
pop
mov
ss
pop
or
push
ds
push
dec
mov
hlt
jl
push
out
mov
andl
dec
shrb
mov
xchg
ja
lret
mov
pop
rorb
inc
jmp
leave
stc
cs
in
movsl
dec
ljmp
pop
fwait
add
ret
pop
lea
fcomip
stos
idivl
icebp
pop
insb
mov
stos
out
outsl
shrb
ds
jae
notb
cmpsl
sub
dec
cmc
or
test
xor
outsl
aad
pop
pushf
cmp
ss
mov
add
and
mov
sbb
stos
test
add
adc
pop
ljmp
es
or
pop
sahf
xor
pop
push
roll
xor
mov
fidivs
jbe
jnp
mov
sub
mov
cmc
xor
jnp
xlat
std
xor
push
add
cld
mov
add
xor
jnp
fisttpll
cmp
rclb
inc
jle
in
aam
divb
jmp
cmpsb
nop
pop
scas
mov
dec
iret
nop
jmp
fcoml
leave
push
or
dec
or
rcr
jnp
fdiv
gs
icebp
out
mov
xchg
pop
cld
insl
std
mov
and
xchg
cwtl
pfrcpit1
inc
add
mov
movsb
cmp
fdivl
inc
and
dec
xchg
test
fstl
push
push
mov
sub
mov
dec
add
pop
xor
cmp
testl
mov
sub
lds
push
nop
addb
out
shlb
or
dec
inc
pop
in
cmpsl
insl
test
pop
lods
das
pop
mov
push
adc
mov
jne
repnz
pop
jae
les
bnd
daa
jae
pop
iret
push
push
in
mov
stos
test
inc
loope
mov
movsl
bound
pop
sbb
jae
sbb
pop
dec
ss
pop
mov
or
fisttpll
in
dec
cmp
pop
add
fmuls
stc
stos
cmp
in
sti
mov
xchg
adc
dec
sbb
ret
or
sbb
xchg
jmp
jl
cmpsb
jo
data16
mov
sbb
cmp
mov
cmp
dec
cld
movsb
jo
jmp
mov
dec
push
push
clc
adc
nop
pop
icebp
inc
inc
jecxz
sub
xor
sub
outsb
adc
mov
in
cmpsl
aam
cmpl
imull
dec
fbld
mov
addr16
xor
mov
fiaddl
test
xor
test
inc
dec
mov
or
or
popa
lret
cs
mov
push
outsl
testb
cmp
dec
jg
mov
push
insl
insl
call
mov
push
into
dec
ret
lds
push
fcomip
sub
xor
add
mov
sbb
outsb
xchg
jae
and
pop
jae
add
ficoms
pop
notb
add
mov
sub
sarl
jbe
push
test
jne
push
jmp
js
xlat
jg
repnz
mov
test
stos
and
call
xchg
aaa
in
xchg
push
cmp
int3
mov
lret
out
and
sti
add
xor
sbb
cmpsb
rclb
pop
xchg
add
fdiv
pop
movsl
jmp
push
add
cmp
mov
or
notl
out
pushf
mov
fwait
out
loopne
rclb
or
sub
and
sbb
sub
pop
adc
and
adcb
sarl
xchg
dec
cmova
stos
mov
xor
clc
lret
dec
lahf
scas
cmp
cmp
mov
lret
test
cmp
cmp
sub
jnp
mov
push
adc
inc
movsb
push
in
pushf
mov
in
pop
add
shll
xchg
enter
sbb
lss
hlt
shll
xor
sbbb
pop
xor
mov
inc
jp
pop
add
add
test
popa
xchg
leave
stos
mov
fucomip
incl
popf
aam
or
fcompl
and
dec
push
inc
pop
mov
push
adc
pop
fmul
cltd
cmpsl
pop
pop
lsl
jbe
mov
shr
pusha
outsl
mov
and
daa
cs
scas
mov
sbb
pop
test
push
pop
mov
test
std
fcmovnu
jmp
sbb
jmp
int
pop
mov
mov
or
outsb
les
inc
cmpsl
icebp
mov
dec
dec
mov
test
stc
movsl
test
mov
notl
cmpsb
sbb
rcl
mov
cmpsl
insl
xchg
int
jo
and
mov
xor
pop
sub
inc
jge
or
adcl
jle
std
and
xor
or
enter
sbb
ja
gs
jbe
imul
je
cmp
fs
sahf
js
xchg
ret
mov
xor
scas
jb
test
les
mov
sahf
pop
lods
into
es
pop
or
scas
push
xor
into
jae
icebp
inc
inc
int3
pushf
fistpl
pop
cltd
xchg
push
fildl
popf
or
scas
dec
push
jbe
dec
xor
mov
mov
jno
push
out
dec
imul
pop
sub
icebp
push
jmp
sub
pop
loop
cmp
adc
popa
mov
scas
mov
push
outsb
push
jg
aad
or
push
in
outsb
sbb
addl
xchg
movsb
xor
mov
stc
lahf
jp
test
sub
dec
push
cmpsb
ljmp
xchg
jae
pop
cmp
fnsave
cmp
lods
jle
js
pop
lods
xchg
pop
lret
scas
outsb
push
pushf
mov
sub
sbb
cmp
inc
rcl
in
jno
fidivs
push
xchg
jge
pop
pop
lea
sbb
xchg
push
les
and
xchg
lock
int
adc
lea
mov
xchg
popa
cmp
push
jg
mov
add
std
addr16
xchg
insb
icebp
fisubrl
dec
mov
jg
aaa
and
out
adcb
lods
pop
jne
lmsw
arpl
idivb
xchg
push
xor
sub
sbb
jo
adc
mov
or
lods
pushf
xchg
rcrb
sub
icebp
cmp
cmp
movsb
mov
stos
push
std
lcall
mov
aas
jecxz
push
daa
jns
loop
lcall
mov
popa
ret
sub
sbb
and
imul
xchg
ss
repnz
xchg
xchg
xchg
stos
and
std
adc
adc
loop
sbb
mov
imul
sbb
jge
fistps
push
leave
fs
pusha
ret
pop
mov
lods
int
jb
jg
in
inc
notl
sahf
out
js
int
xor
push
cmp
data16
dec
jns
mov
push
sub
outsl
sbb
out
pop
and
sub
adc
mov
test
movsl
cmp
sbb
pop
mov
ds
loopne
fwait
cld
jne
pop
cmp
push
test
dec
fnstenv
aaa
sbb
mov
mov
clc
das
cld
lock
cli
testb
pop
mov
adc
roll
sbb
ret
xchg
sarb
or
int
nop
or
cmpps
ss
cmp
call
xchg
cmp
sahf
sbb
lock
push
pop
sbb
lcall
imul
int3
dec
push
xchg
inc
inc
xlat
movl
sarb
jecxz
outsb
fnstsw
cmpsl
sub
insb
adc
xor
sarl
out
js
dec
stos
lret
test
arpl
in
shrb
mov
mov
mov
scas
sbbb
fisubrs
lds
fidivs
scas
dec
push
and
mov
sbb
xor
push
pop
jmp
stos
push
lea
inc
sbb
int
mov
int3
cmp
inc
popf
mov
sub
inc
in
in
push
mov
pop
rcrb
xchg
pop
pop
incb
shll
pop
ja
sub
sbb
mov
scas
xchg
cli
xor
repnz
shll
push
scas
ss
add
push
mov
daa
outsl
push
movsb
fists
xchg
add
cltd
push
std
mov
movsl
rcrb
jmp
iret
rclb
cmp
jbe
mov
dec
loope
mov
cld
jp
xchg
and
sub
iret
loop
mov
insb
lods
push
sub
dec
dec
jno
cmp
mov
dec
or
pop
test
enter
jns
sbb
or
mov
add
shll
rcrb
in
cmp
aaa
leave
ret
push
cwtl
or
mov
fld
sbb
test
fs
adc
repz
xchg
adc
jmp
pop
xor
insb
and
insb
in
aas
cltd
addr16
leave
into
sub
and
stos
imull
jns
testl
mov
stc
pop
add
shll
jg
jg
pop
mov
test
fimull
mov
imul
pop
xchg
jno
xorl
call
inc
stos
pop
jae
scas
icebp
or
xor
fnstsw
xor
jp
popa
cmp
xorl
out
loopne
int3
frndint
movlps
ret
cmp
sub
loope
jp
daa
fnstenv
dec
ret
push
or
fcoml
popa
and
sub
mov
mov
std
inc
mov
dec
dec
and
lahf
icebp
adc
inc
mov
std
std
or
and
push
int
lret
pop
scas
pop
mov
popa
rclb
or
ror
mov
sbb
divb
add
xor
dec
cmp
sahf
push
xchg
push
arpl
into
dec
pop
and
mov
mov
sbb
fisubrl
mov
pop
cli
addr16
out
orl
enter
mov
sub
movsl
std
jmp
lret
sti
mov
mov
loope
out
pop
xchg
cmp
es
pop
andl
cs
nop
mov
pop
jmp
je
arpl
dec
adc
and
xchg
xor
inc
out
dec
push
xor
stos
stos
push
sti
push
nop
xor
shll
push
mov
mov
mov
pop
xor
xchg
mov
leave
inc
pop
add
aaa
jmp
jb
push
sbb
clc
in
in
lods
cld
ljmp
inc
in
je
aad
and
stc
mov
enter
clc
bound
fs
stc
adc
out
ljmp
adc
cmp
fstpl
sub
jae
fdivs
mov
lret
repz
mov
sbb
dec
adc
in
adcb
sub
cmp
out
data16
pop
and
test
call
xchg
fistpl
aas
nop
orb
push
mov
jbe
int3
mov
sahf
dec
aaa
mov
push
stos
icebp
xlat
out
push
jbe
fstp
pop
cmp
pop
rcl
xlat
pop
inc
mov
pop
mov
shlb
call
pop
divl
mov
xchg
pop
mov
xor
mov
testl
shll
jno
push
lcall
push
or
mov
pusha
pushf
mov
sbb
scas
ffree
mov
xor
outsb
mov
dec
std
aas
xchg
jnp
xchg
test
xchg
mov
leave
jl
gs
shl
repnz
stos
add
ljmp
xlat
sub
pop
and
shlb
add
scas
jbe
sub
mov
arpl
inc
iret
pushf
pop
mov
sbb
movsb
aas
cmpsb
lahf
nop
inc
loope,pt
or
cmc
js
int
or
int3
lret
sub
push
scas
mov
fs
dec
add
jecxz
mov
jae
dec
mov
mov
dec
jae
sti
pop
scas
add
or
popf
push
sti
pop
and
mov
repz
adc
jo
mov
add
cltd
cltd
jle
or
mov
test
out
and
clc
inc
adc
iret
push
cmp
add
sbb
stc
inc
out
cmp
jle
push
jle
mov
cmp
or
pop
cmp
xchg
push
or
insl
paddusw
sahf
clc
mov
add
ret
jle
sub
call
dec
and
sbb
mov
in
pop
mov
mov
mov
lods
loopne
fstpt
lea
push
dec
and
mov
xor
dec
rcrl
pop
lret
ljmp
ja
xor
adc
fucomip
inc
dec
addr16
jnp
movsl
or
gs
aad
mov
cltd
inc
push
mov
mov
int3
lods
stos
add
lea
mov
sbb
mov
ss
movsl
push
mov
cmc
mov
jno
jae
loope
ds
test
in
cmp
hlt
pop
inc
pop
jno
mulb
xor
hlt
adc
dec
test
sbb
dec
inc
adc
mov
jmp
sbb
cmp
lret
mov
mov
push
and
mov
or
or
aas
sbb
into
repz
push
and
mov
mov
inc
mov
nop
and
pop
mov
inc
mov
and
jne
and
stos
mov
push
mov
popf
out
pop
push
cmp
xchg
pop
inc
adc
loop
xor
jecxz
mov
inc
or
inc
or
pop
sbb
mov
std
insl
sub
aaa
pop
sbb
inc
cmp
add
cmp
lret
or
loopne
xchg
aam
xchg
imul
sub
mov
xor
rorl
out
adc
daa
xor
aam
xchg
push
mov
add
ja
arpl
roll
pop
pop
popf
idivb
add
jno
cmp
mov
jno
sbb
dec
cmp
loope
cmc
mov
xchg
je
cmp
and
les
ljmp
ret
jns
pop
mov
pop
xchg
add
mov
mov
xchg
fdivr
data16
xchg
mov
jne
leave
lods
push
jno
push
popf
push
jnp
test
shlb
mov
lret
lds
xchg
xchg
adc
idivl
inc
cwtl
aad
popa
lcall
push
mov
les
cmpsb
xchg
mov
pop
dec
add
cmp
cmpsb
addr16
cmpsl
push
push
mov
add
sub
movsb
inc
rcrb
lcallw
ljmp
insb
sub
sbb
xor
mov
xchg
fnstenv
imul
test
xchg
cmp
stos
inc
into
cld
xchg
add
fisttpl
inc
cli
dec
add
pop
sahf
loopne
popf
arpl
adc
lds
cmp
insb
or
sbb
push
xchg
in
mov
test
jl
shll
xlat
std
bound
ret
gs
dec
loopne
and
repnz
test
xor
cmp
repnz
pop
pop
push
nop
sub
adc
lock
sub
pop
sbb
mov
or
imulb
jl
in
mov
or
sbb
shll
adc
pop
sbb
testl
xchg
cmp
popf
pop
ss
or
call
mov
xchg
mov
push
lcall
push
dec
mov
decb
or
and
mov
in
into
test
fbstp
cltd
mov
push
hlt
das
aas
push
mov
sti
xchg
out
cltd
push
cmpsl
inc
jbe
mov
and
cs
cmp
aam
sub
nop
lret
cli
ficoml
fs
mov
mov
stos
mov
add
pop
out
inc
push
mov
lahf
jecxz
fmuls
out
repz
in
jmp
push
xchg
sbb
xchg
xor
stos
push
mov
testl
out
repnz
lret
lods
sbb
inc
mov
stos
xor
mov
pop
pop
sbb
adc
push
inc
test
xchg
dec
aas
cmc
and
jg
dec
lea
fdivrs
pop
lds
mov
repnz
xchg
ret
mov
sarb
lcall
roll
xchg
fsubl
or
dec
stc
cmp
cs
stos
insb
mov
push
or
or
hlt
call
inc
fidivrl
push
jmp
mov
pop
jmp
mov
dec
cmp
adc
inc
xor
xorb
test
pop
adc
cmpsb
inc
push
repnz
add
fsubrl
cmp
icebp
jb
sbb
mov
mov
outsl
inc
push
arpl
loope
mov
jae
sarb
and
and
rclb
hlt
push
insl
loop
jl
fcomps
pusha
pop
hlt
repnz
xchg
arpl
adc
outsl
scas
cwtl
fists
lcall
mov
mov
lds
xor
jnp
and
movsb
push
pop
jge
cwtl
adc
add
aam
add
mov
out
rclb
in
cld
jl
mov
inc
mov
cltd
dec
or
jmp
jle
jp
adc
loop
sarb
jp
call
pusha
rcll
lock
stc
or
jns
mov
cmpsb
adc
mov
inc
mov
inc
mov
outsb
sbb
outsb
inc
jo
dec
lret
push
pop
adc
push
data16
pusha
jnp
push
pop
mov
xchg
and
stos
or
inc
lods
in
cmpsl
jno
jle
jmp
mov
in
ja
push
adc
jg
cli
dec
not
push
inc
ret
pop
rolb
stc
inc
imul
push
ror
mov
jmp
pop
sar
sub
dec
lret
fistpl
mov
mov
test
repnz
sbb
mov
sbb
lea
jmp
push
fildl
lods
mov
sti
xchg
aas
cmp
dec
mov
loope
inc
into
stc
add
or
std
push
movsl
je
push
mov
movsl
cmp
mov
outsl
and
repz
je
sub
fidivrl
lcall
push
pop
jmp
les
dec
les
add
aaa
and
and
ror
cmp
enter
imul
adc
or
das
jmp
jp
cmp
cmpsb
cmp
insl
add
push
clc
sar
xchg
aad
mov
push
lret
mov
stos
ja
lret
push
lea
int
push
xchg
mov
cwtl
pop
outsb
adc
sbb
sub
ja
fsts
xchg
mov
stos
inc
lahf
scas
cmp
jns
xchg
push
jns
xchg
pushf
aaa
insb
adc
aad
inc
mov
sub
in
mov
lret
sub
and
loop
and
pop
mov
data16
je
loopne
lret
sbb
cli
mov
add
dec
adcl
inc
std
aam
popf
movsl
in
lock
mov
out
aas
pop
add
cmpsl
adc
cmp
sbb
fisubrl
fs
out
push
cmp
xchg
orl
cmp
fcomi
mov
aas
xor
push
pop
popf
dec
loop
mov
ret
mov
aam
mov
xchg
es
repnz
sub
shrl
leave
sbb
pop
iret
add
cmp
add
add
sub
fistpl
xchg
fiadds
cmpsb
insb
xchg
add
mov
adc
sar
hlt
pop
popf
ret
dec
and
cmpsl
jae
adc
mov
fnstcw
cmp
insb
in
in
sub
shlb
mov
ret
ss
adc
xor
xchg
jecxz
pop
loop
cmc
imul
jp
pop
jg
idivb
in
loop
mov
les
les
xor
jg
mov
sub
mov
sti
getsec
jbe
pushf
sbb
sub
sbb
mov
test
push
sbb
push
sbb
mov
mov
adc
mov
jl
inc
mov
nop
out
scas
adc
mov
aam
mov
std
out
inc
cmp
mov
not
shrl
into
fidivs
pop
xor
int
adc
fs
cltd
sub
fs
loop
sub
repnz
xor
ret
fdivrl
mov
fmull
push
pop
inc
icebp
jne
push
les
or
insl
stos
repz
insl
lret
xor
adc
and
das
adc
insl
rorl
mov
xor
repz
mov
mov
jmp
xor
sbb
cmp
ss
sub
jbe
ds
or
pusha
in
sbb
inc
push
bound
sbb
fisubl
sub
mov
sbb
rolb
push
push
hlt
mov
outsl
push
push
xchg
test
idivb
or
xor
dec
les
push
inc
xor
pop
push
je
or
add
mov
cmpsb
xchg
shll
popa
mov
int
jle
lret
repz
push
int
clc
cli
icebp
dec
fimull
mov
pop
or
and
pop
sti
lcall
mov
popa
xor
into
xchg
ss
or
cmp
add
sbb
scas
je
push
in
ljmp
cld
imul
cmc
push
rcll
mov
push
das
mov
loopne
mov
in
cld
iret
dec
out
ja
dec
fnstcw
es
and
add
insl
icebp
and
pop
cmp
xchg
test
imull
mov
arpl
xor
inc
clc
sahf
ret
jo
shrb
push
push
shl
aad
movsl
cs
sbb
mov
pop
mov
outsb
jno
pop
inc
stos
pop
dec
mov
loop
inc
shrl
xchg
and
testl
pop
sub
sbb
imul
cmp
scas
loopne
add
ret
sub
decb
das
adc
hlt
aad
lcall
arpl
cmp
push
dec
test
test
cltd
cmc
push
xor
into
jp
mov
sbb
bnd
mov
pop
insl
pop
adc
rclb
pop
inc
adc
lret
push
icebp
cmpsl
and
cltd
pop
xlat
std
in
mov
dec
daa
daa
nop
gs
pop
inc
xor
mov
sti
xchg
into
icebp
inc
insl
scas
lcall
mov
adc
hlt
into
mov
test
inc
mov
pop
pop
jne
xor
mov
dec
xor
add
xlat
fucomi
sbb
sahf
and
cmpsb
mov
sbb
mov
dec
sahf
test
xor
add
out
cmp
in
inc
aas
inc
and
cmpsl
pop
mov
ret
sub
inc
lods
rorl
in
mov
pop
sbb
bound
insl
or
mov
jge
xchg
pusha
inc
lret
push
add
gs
dec
cmp
into
pop
xchg
and
mov
test
push
mov
insb
or
dec
bound
cmp
nop
movsl
pop
cltd
mov
jmp
fsubs
cld
icebp
xchg
dec
sbb
add
das
lret
cmp
insb
test
add
xchg
push
mov
mov
stos
out
cmp
negb
pop
and
push
xchg
adc
lods
repz
es
adc
sub
sbb
fucomi
jnp
call
cmp
sbb
js
sub
movsb
ret
jo
xor
shlb
in
pop
iret
or
daa
add
add
or
loop
call
mov
mov
ss
mov
xchg
dec
aam
call
das
mov
rcrl
mov
push
mov
cltd
test
popf
and
lods
jl
pop
cmpsb
into
cmpsl
fwait
outsl
xchg
in
adc
push
or
and
xchg
ret
inc
cltd
test
icebp
push
pop
sbb
cli
mov
cld
dec
mov
les
popa
inc
add
adc
in
mov
push
scas
aam
lea
pop
mov
xchg
cs
lahf
pop
push
push
test
nop
movsl
add
gs
jmp
nop
fisubl
adc
add
fmuls
jecxz
mov
je,pn
sbb
jns
cmp
add
gs
fldcw
loopne
inc
inc
popa
push
test
pop
int3
pop
lcall
icebp
jne
lea
cmc
adc
in
xor
test
addl
xchg
mov
pop
lods
pop
ret
cli
fistpll
dec
jp
sarb
adc
push
lret
jae
mov
sub
scas
rorb
cmpb
cmpsb
inc
in
or
orl
and
dec
lcall
add
xlat
inc
xchg
rep
xchg
clc
std
imul
test
pop
xchg
ret
test
sbbb
scas
sbb
add
int
mov
cmp
jge
adc
ret
pop
xor
push
sarb
mov
popf
daa
imul
push
jns
add
ljmp
data16
dec
clc
je
idiv
orb
or
pop
add
jle
js
fistpll
add
adc
lret
ret
xchg
mov
stc
bt
mov
shrb
add
adc
cmp
imul
push
and
jb
cmp
movsb
lods
xor
xchg
push
in
das
inc
dec
and
out
pop
sub
fwait
ret
xchg
mov
sub
mov
fnsave
xor
inc
and
out
icebp
dec
arpl
mov
into
roll
cmc
fmul
add
xchg
and
lret
or
push
divl
sub
rcrb
cmp
cs
and
jmp
push
mov
push
inc
test
pop
xor
andb
lods
out
or
jp
xor
push
and
push
lret
shlb
or
sub
fimuls
or
pop
test
push
or
xor
mov
into
jecxz
mov
sahf
jae
daa
xchg
mov
sub
test
xor
pop
cwtl
rcl
js
jnp
sub
int
fiadds
fcmovne
mov
test
ficoml
jb
cwtl
imul
repz
cmp
adc
mov
push
out
inc
add
add
rolb
enter
in
xchg
cmc
push
mov
pop
push
and
mov
and
int3
mov
mov
push
in
xor
fs
lods
into
push
loope
fs
andnps
mov
xor
mov
jnp
add
test
dec
int3
pop
mov
mov
xchg
cmpsl
pop
or
xor
jbe
pop
std
movsb
add
xchg
mov
testl
adc
jbe
dec
ret
test
insl
js,pt
push
test
xchg
mov
mov
cmp
fcmovu
mov
xchg
hlt
dec
lds
outsb
sbb
lcall
xor
stos
and
test
or
cli
mov
sub
out
xchg
int
loop
push
cmc
fcoml
shrl
cmc
pushl
xchg
int
inc
jbe
pop
fdivs
stc
sub
push
add
iret
insb
stos
jmp
loope
sbb
inc
in
push
in
jb
add
inc
out
sti
js
rol
repz
or
cmp
pushf
popa
add
xchg
pminub
adc
mov
ja
cli
jae
mov
cmpsl
rcrl
out
xchg
xlat
sbb
cltd
movsb
movsb
imul
xchg
mov
mov
mov
sahf
jnp
jbe
lea
sti
pop
sub
jl
fs
cld
cltd
outsl
mov
fsubl
mov
pop
pop
fcoms
out
rcr
imul
fidivs
add
sbb
pop
mov
mov
mov
pop
cwtl
daa
flds
sbbb
pop
xlat
out
std
lock
push
fwait
adc
sbb
xor
ret
lods
add
insl
jl
push
jecxz
dec
rclb
mov
ucomiss
fwait
xlat
sti
sub
daa
xchg
push
dec
mov
sti
fcmovnb
arpl
sub
insl
adc
movb
inc
fwait
aad
fimull
test
adc
inc
fstpt
sbb
sub
sbb
cmpsl
shrb
lea
adcb
and
pop
fadds
mov
xor
aad
lods
fistpl
push
mov
fmull
push
mov
and
test
jl
loop
das
ja
filds
add
and
add
sbb
scas
fcoms
dec
cmc
or
subb
leave
sub
sbb
inc
cltd
push
in
mov
call
xor
or
lret
aad
dec
fcmovnbe
insl
in
mov
xor
xlat
jbe
pushf
jo
rcll
xchg
pop
pop
ret
adc
xchg
xchg
js
xchg
sets
sti
or
sbb
or
jmp
sti
xor
rorl
mov
idivl
jnp
je
and
push
pop
xchg
xor
ja
add
into
xlat
pop
cmpsb
jle
aas
push
ljmp
loope
cmc
xchg
push
xor
iret
mov
adc
clc
out
int
inc
out
loop
mov
inc
mov
push
outsl
incl
push
mov
cmc
fdivl
sbb
jnp
inc
mov
add
out
faddl
adc
es
mov
jnp
push
push
or
pop
adc
movsl
in
ficomps
sbb
push
std
mov
jmp
out
jb
scas
or
iret
and
xor
pop
in
repnz
pop
repz
scas
fdivrl
and
jmp
mov
imul
in
sbb
push
mov
hlt
lods
jno
call
adc
roll
dec
aas
stos
dec
inc
daa
pop
js
adc
bound
fcompl
out
fxch
sbb
xchg
sbb
xor
enter
dec
orl
or
popa
jp
cmpsl
divb
je
dec
push
mov
sub
mov
call
in
rdrand
add
pop
lock
dec
fistpll
or
pusha
aad
adc
sub
push
xor
ss
out
test
push
nop
orb
int3
pop
jbe
sarb
cwtl
jb
xchg
cwtl
sub
jno
push
pop
ficoms
shrb
cmp
ret
adc
mov
leave
cmp
pop
mov
xor
mov
movsl
cmp
inc
xor
xor
inc
out
test
inc
xchg
out
cmpsb
xchg
sub
std
mov
push
mov
adc
or
in
mov
jne
in
mov
cwtl
dec
scas
dec
or
mov
cmp
jg
out
xchg
daa
cmp
lahf
fs
push
inc
push
jae
mov
insb
cwtl
adc
aam
jne
daa
stos
rcr
leave
pop
lds
jae
mov
or
imul
adc
fucom
fists
cmp
out
std
negl
cmpl
pop
mov
mov
mov
mov
jmp
js
popa
rcrl
dec
mov
push
and
sbb
into
sub
mov
mov
lods
sahf
xchg
or
popa
out
cmp
cmc
aad
lock
das
and
cld
in
mov
sbbb
mov
cmp
xor
pop
sub
negl
fisubrl
push
mov
testl
mov
mov
pop
xchg
push
and
cmp
cmp
cs
and
shrl
fnsave
push
fisubl
mov
lcall
adc
daa
lock
jne
adc
pop
imul
mov
nop
jne
mov
mov
pop
out
das
movsl
bound
jge
insb
out
sbb
insb
pop
cmc
add
lea
jns
ficoms
jnp
out
cmp
mov
arpl
jecxz
mov
lods
scas
jbe
mov
insb
ljmp
jo
xchg
sub
cmp
gs
int3
sub
sbb
movsl
cmp
ret
inc
ret
mov
mov
cmp
es
jl
add
inc
mov
mov
outsl
push
sbb
fstp
and
enter
test
popf
aam
loop
insb
jp
dec
xlat
mov
out
inc
pop
arpl
inc
call
rclb
fildll
filds
and
sub
xor
stos
sub
je
jbe
inc
adc
data16
daa
out
mov
into
imul
repz
xor
xor
ret
mov
gs
mov
jmp
sub
xor
mov
test
push
xchg
sub
jp
sbb
hlt
stc
mov
and
mov
jecxz
xchg
mov
lcall
push
xor
push
das
fucomp
test
sarl
mov
push
xchg
movsl
insb
shlb
lods
jp
nop
jl
shl
pop
push
sub
push
cltd
inc
xchg
adc
add
pop
pop
les
pop
insb
dec
loope
loope
stos
mov
lods
push
repz
insl
stos
mov
test
scas
sahf
and
xor
sub
jno
inc
add
inc
popa
dec
adc
inc
sbb
and
xchg
xchg
mov
xchg
rcl
cmp
pop
inc
stos
xor
xchg
dec
xorl
mov
faddl
push
in
pop
movsl
push
or
rclb
stos
shlb
pop
test
and
mov
add
push
iret
daa
loope
lods
push
xor
rorb
mov
pop
outsb
jl
push
dec
xchg
lahf
int3
and
lret
enter
pop
mov
mov
mov
dec
mov
sub
mov
jno
in
out
cmpsb
xor
sbb
in
incl
aam
pop
inc
popf
or
mov
add
mov
call
sbb
test
xor
push
sbb
insb
mov
mov
mov
mov
mov
aad
nop
rolb
out
adc
shrl
mov
test
jb
lret
sbb
mov
fwait
cltd
rcrb
adcl
xor
adc
pusha
js
inc
flds
in
push
repnz
addr16
dec
pusha
pop
cmpsb
in
in
negl
adc
es
mov
mov
shll
pop
push
mov
loop
jg
arpl
or
jno,pt
rcrb
cld
cwtl
mov
sub
sbb
dec
mov
sub
test
rclb
xchg
and
xor
fdivrs
mov
lods
pop
pop
mov
cmpsl
and
pop
and
cltd
cmp
mov
cltd
mov
mov
jge
mov
push
add
test
test
idiv
mov
push
jae
mov
dec
iret
popa
lahf
mov
jb
aas
out
fs
call
pop
mov
push
push
ds
xchg
pmuludq
mov
mov
sub
out
popa
sbb
sub
adc
jmp
inc
and
dec
cmp
movsb
nop
test
pop
je
stos
std
shr
icebp
cld
mov
loopne
js
add
aas
addr16
loope
inc
scas
mov
sbb
int
pop
or
or
adcl
call
push
shrb
in
sub
add
xor
nop
pop
out
call
xor
adc
loop
popa
js
sti
or
pop
adc
jge
pop
xchg
mov
jbe
push
test
push
aaa
jnp
das
int3
jl
lea
push
and
outsl
sarl
cmp
lods
bswap
mov
cwtl
mov
mov
repz
xchg
mov
outsb
aam
xchg
mov
ret
mov
or
sarl
cmp
loop
js
enter
xchg
dec
push
mov
and
std
call
fisubs
mov
jbe
popa
and
fdiv
mov
push
adc
test
push
or
xchg
dec
call
inc
push
pop
inc
lahf
shlb
jno
inc
icebp
pop
loopne
mov
push
fucom
das
ret
mov
push
stos
roll
xor
add
shll
push
fldt
dec
in
rcrl
repnz
jl
lahf
imull
mov
pusha
inc
jns
adc
sub
loop
mov
inc
mov
enter
ret
out
lret
ffree
nop
popa
das
imul
mov
push
int3
cmpsl
pop
fs
es
js
scas
lds
adc
jecxz
jno
pop
xlat
push
arpl
fcoms
imul
outsb
ss
fidivs
dec
mov
inc
jns
sub
inc
cli
out
dec
addr16
pop
test
aad
xchg
bound
pop
pop
pop
push
push
jmpw
mov
sbb
jae
fwait
mov
cs
xchg
repnz
xchg
les
into
sub
pop
mov
out
cltd
cmp
push
sub
mov
mov
sbb
imul
cmpsb
in
add
add
mov
push
adc
and
cltd
sub
or
dec
push
push
popf
jae
cmpsb
inc
or
pushf
sbb
call
adc
push
pop
cmp
rorl
xchg
movsl
dec
sbb
sbbl
pop
stos
sbb
pop
flds
mov
adc
xor
mov
mov
out
stos
test
cmp
pop
lea
out
push
cwtl
lods
xor
fstl
xchg
mov
xchg
pop
xchg
dec
das
js
or
push
mov
or
imul
fwait
xchg
and
sti
stc
inc
inc
xor
fisubrs
lds
in
int3
push
enter
mov
xchg
out
pop
inc
push
mov
mov
ficompl
ljmp
cmc
rcrb
sbb
lods
mov
dec
adc
popl
mov
add
push
scas
loop
cltd
mov
rcrl
pop
mov
aas
test
inc
es
mov
and
or
push
mov
push
xlat
outsb
cld
add
popa
les
clc
sti
fidivl
int
std
add
testl
or
aas
adc
sbb
fidivrl
sub
mov
in
les
stos
inc
test
ljmp
sub
push
ret
add
jg
push
jb
sbb
das
js
jge
lret
inc
fnstcw
push
inc
pop
enter
sub
sbb
lahf
add
dec
cmpsb
decl
push
gs
inc
add
shrb
gs
fwait
or
pop
out
imul
cltd
and
outsb
push
add
gs
sbb
outsl
fisubs
ret
xchg
xchg
adc
fs
clc
lcall
scas
cli
cwtl
push
xor
pop
sbb
sbb
nop
and
adc
rorl
imul
jb
rorl
lcall
das
cmc
enter
xchg
pop
mov
out
adc
scas
xchg
sbb
push
in
pusha
push
pop
gs
mov
mov
punpckhbw
imul
lret
pop
dec
pop
jno
xchg
mov
out
xor
mov
ljmp
jno
mov
inc
jmp
push
test
fnstsw
pop
mov
mov
sahf
xor
stos
stc
ret
push
ljmp
jecxz
push
popa
xor
aaa
pop
xor
ret
mov
and
pop
aad
dec
mov
pop
aam
rcl
mov
mov
add
add
js
clc
push
loopne
sub
xor
sub
jg
aam
icebp
cli
outsb
insl
idivl
jecxz
mov
es
sub
mov
pusha
scas
add
mov
mov
lea
adc
fsubl
cs
sub
cmp
xor
pop
jo
in
push
cmp
cs
call
mov
mov
jl
sbb
cmp
dec
cmc
adc
inc
dec
shll
add
xlat
in
dec
pop
das
xchg
mov
push
lods
cmp
adc
pop
mov
cmp
cmp
add
lds
call
mov
les
add
xchg
neg
add
in
jp
and
fists
cmp
sbb
inc
scas
test
mov
adc
xor
add
je
das
bswap
mov
popa
mov
fwait
aas
push
add
mov
push
sbb
push
add
push
push
popf
rcll
sbb
shlb
pop
pop
lds
dec
pop
lcall
sub
aam
dec
xchg
pop
sbb
mov
mov
dec
dec
adc
adc
out
xor
cmpb
sub
add
aam
push
gs
test
iret
mov
jg
mov
in
xchg
out
pop
pop
int3
in
pop
push
cwtl
jl
inc
gs
ja
push
cmpsb
cli
dec
pop
or
jo
add
xchg
fbld
or
je
xor
jne
push
loope
and
ror
test
sar
inc
out
scas
mov
sahf
mov
mov
cmc
cmp
add
pop
cmc
push
ljmp
dec
out
mov
inc
loope
addr16
lods
xchg
and
pop
rclb
sbb
push
pop
ror
negb
dec
gs
fstpl
push
jbe
dec
ds
push
cltd
mov
lods
mov
and
std
mov
fsubl
push
xchg
mov
test
inc
sub
iret
inc
int3
jb
stos
jmp
jb
aas
clc
cli
xor
out
cmp
dec
aas
dec
popa
mov
mov
adc
lods
cli
and
fiaddl
xchg
lahf
inc
setle
ljmp
pop
or
push
fs
es
stos
add
inc
inc
pop
inc
cmp
lock
loope
je
pop
jae
pop
or
fcoml
sbb
leave
adc
pop
xchg
loop
dec
sub
xchg
cwtl
lcall
jne
mov
adc
cmpsb
scas
rcrl
push
mov
sub
sbb
fisubrs
loopne
adc
inc
rorl
adc
lahf
je
cmp
test
out
fcomps
movsb
xchg
aas
jmp
fldenv
into
sbb
mov
sbb
and
push
andl
or
lds
mov
hlt
insl
dec
imul
out
aad
xchg
pop
push
insl
pop
enter
and
and
dec
loop
mov
sub
sub
lods
test
xor
jp
ljmp
sub
movsb
ret
mov
cmp
rcl
test
and
fs
movsl
and
loope
sub
xchg
js
std
add
fsts
lods
and
int
notl
into
pop
es
bound
cmp
shlb
pushf
mov
xor
pop
repz
insl
cmp
adc
push
insl
add
jecxz
cs
call
enter
insb
rorb
sbb
jge
ljmp
addb
cmp
cs
movsb
jnp
xchg
scas
cmp
jg
adc
test
and
data16
push
scas
adc
pop
add
sti
and
pop
lock
pop
insb
jge
and
mov
mov
fnstcw
mov
xor
inc
jle
loop
mov
popa
jo
adcb
add
jmp
push
pop
imul
push
insl
jl
ja
shll
ret
pop
call
lret
and
je
fnstenv
pop
clc
push
xchg
sub
jne
lea
inc
mov
mov
out
sbb
xchg
dec
xor
loop
add
cmc
cmpsb
adc
gs
pop
pop
sti
fsubl
push
adc
push
js
mov
push
mov
inc
mov
push
mov
mov
js
fs
add
iret
aam
jno
test
pop
mov
inc
out
push
and
inc
sub
xor
dec
pop
mov
mov
sub
add
sti
mov
cmp
mov
orl
subl
jp
cmp
fisubs
adcl
inc
pop
je
push
inc
ficoms
clc
aas
test
jno
mov
cs
xchg
sub
lcall
stos
leave
cwtl
bound
mov
aaa
push
imull
loope
enter
sub
aaa
mov
cmpb
xchg
aad
repz
sub
movsb
daa
in
stos
bound
adc
push
cld
out
fldt
shlb
outsb
hlt
push
add
push
popa
xor
jns
sub
jns
inc
jb
cs
mov
popf
pop
test
mov
arpl
sbb
pop
mov
mov
lock
xchg
inc
xchg
inc
ss
daa
mov
push
add
or
mov
push
hlt
ljmp
int
ljmp
and
adc
hlt
jb
and
mov
mov
scas
mov
in
xor
mov
call
mov
out
shl
jne
sbb
cmpsb
push
loop
cld
add
mov
loopne
mov
iret
call
ret
aam
dec
enter
xchg
push
inc
aam
mov
aas
pusha
idivl
lcall
lcall
sbb
js
imul
xchg
jne
ret
imul
push
rcll
mov
cmp
sbb
out
or
pop
mov
mov
insl
adc
enter
jecxz
jns
cmp
adc
mov
lea
push
scas
mov
xor
dec
sbb
or
cmpb
fwait
mov
inc
pushf
lcall
and
inc
stos
xor
lcall
mov
sbb
or
nop
nop
adc
subl
lcall
sbb
xchg
dec
loopne
mov
clc
aaa
and
lcall
push
xchg
in
lret
dec
inc
clc
xchg
mov
stos
scas
xchg
pop
sbb
push
mov
or
jne
adc
insl
pushf
cmc
push
mov
mov
mov
lods
test
cmpb
push
xchg
out
insl
xchg
sbb
es
or
fcomps
mov
call
imul
push
loope
pop
scas
sbb
push
test
pop
cs
bnd
xlat
fcmove
xchg
mov
dec
mov
sbb
fisttpll
dec
les
fldl
sub
insl
lcall
jae
xor
enter
ja
data16
or
fldl
or
test
push
scas
mov
mov
popf
imul
out
ret
rol
fucomp
test
mov
ss
out
mov
and
jb
cmpl
mov
mov
cli
pop
cwtl
sahf
pop
inc
pop
or
and
pop
sbb
xor
movsb
cmpl
pushw
sbb
add
mov
inc
out
aas
xchg
jns
call
dec
jmp
test
dec
insb
ja
pop
loopne
jno
and
vpackssdw
stos
cmc
xor
sub
pop
lods
pop
stos
mov
insb
or
inc
fs
jp
cwtl
sbb
fsts
je
mov
out
enter
pop
je,pn
or
mov
movsl
ja
inc
nop
fwait
arpl
aam
repz
and
push
and
mov
ss
pop
mov
lahf
fcompl
jge
pop
cltd
and
mov
and
ss
jns
ds
clc
xchg
arpl
fiadds
push
ret
aam
mov
in
adc
sbb
stos
and
mov
push
mov
dec
ficoms
xchg
repz
popa
insb
dec
mov
cmp
mov
insl
loopne
hlt
mov
push
mov
sbb
jo
bnd
inc
nop
jge
pop
pop
add
aad
imul
cmc
clc
std
pop
mov
cltd
adc
mov
mov
cs
push
into
xlat
or
das
std
sub
push
lret
in
out
push
orb
push
movsb
pop
sub
popa
adcb
into
add
mov
pusha
fwait
rcrl
sbb
pop
rcll
cmc
ljmp
xlat
xor
in
sbbb
ss
sti
call
cltd
pop
lods
jl
adc
sub
bound
pop
orl
addr16
leave
xchg
cs
lcall
lds
add
mov
test
xchg
sub
mov
push
movsb
push
xlat
jecxz
out
scas
and
xor
test
cwtl
mov
aam
js
adc
jge
and
and
mov
mov
and
adc
add
add
orps
xor
fists
cmc
add
or
mov
lods
add
cmp
sub
jno
sbb
sti
fnstsw
sti
sbb
ljmp
adc
int3
and
jmp
negb
js
push
cmp
loop
xor
cmp
repnz
add
test
cs
cmp
sbb
cmp
xchg
test
jno
int3
jbe
inc
divb
adc
xor
jle
inc
mov
or
push
pop
add
loope
ret
inc
push
es
xchg
fstpl
aas
add
mov
or
cltd
jnp
add
stos
dec
push
js
jmp
xlat
and
xchg
sbb
imul
mov
lds
dec
pop
sub
into
dec
pop
jge
dec
mov
leave
add
pop
in
gs
pop
pop
cmpsb
mov
mov
addr16
xor
ret
pop
cmp
js
sub
adc
cld
jp
pop
jmp
push
int3
negb
jb
xchg
xlat
fwait
std
cmp
xor
mov
icebp
xor
pushf
cmp
xorb
jo
xchg
mov
add
xchg
in
scas
xor
push
xchg
push
iret
mov
roll
mov
and
jae,pt
jo
add
or
push
pop
cltd
jmp
inc
push
add
sbbl
mov
dec
hlt
adc
dec
ret
jge
lea
push
push
pop
push
jne
std
mov
mov
int
push
dec
in
mov
push
mov
pop
lea
adc
push
movsl
aad
jbe
jnp
dec
fists
xchg
testl
cltd
testl
sar
mov
enter
hlt
cmp
outsb
in
adc
test
rorl
loope
test
daa
add
stos
sub
mov
dec
sub
push
cmp
stc
mov
jecxz
xor
mov
sbb
sub
daa
xchg
add
lods
into
sahf
scas
fwait
push
inc
mov
xchg
xchg
mov
dec
inc
xchg
negb
jle
xchg
xlat
sbb
pop
push
jb
and
cmp
jg
mov
mov
cmp
fsubrl
dec
jae
xlat
call
outsb
lahf
sbb
jae
sahf
cwtl
cmp
fsts
call
sar
out
jne
les
inc
leave
repnz
cmpsl
push
jge
fsts
fs
sbbl
adc
jg
pusha
sbb
jae
xor
mov
sbb
and
pop
aaa
inc
hlt
sub
je,pn
cmpsl
adc
sbb
int
pop
sbb
mov
sub
add
inc
stos
fnstenv
ss
cmp
dec
adc
cld
jnp
mov
cs
mov
fidivrl
ficoml
hlt
jle
sarb
movsb
loopne
jno
mov
cltd
arpl
enter
out
mov
add
mov
test
adc
mov
sbb
mov
xor
cli
movsl
cmpsb
add
or
xchg
rcr
movsl
jns
dec
jo
call
jbe
pop
or
into
rclb
std
dec
inc
stos
mov
mov
jo
or
xor
idivl
xor
sahf
mov
xorb
aas
sbbl
sub
ljmp
inc
data16
test
fistpl
xor
aas
or
xchg
inc
and
and
add
and
jne
add
mov
cmp
ret
add
cltd
dec
mov
or
xchg
adc
ret
outsb
xchg
xchg
cli
push
adc
aam
cmpsl
imul
fistpl
jno
sti
add
dec
adc
aad
add
mov
hlt
outsb
dec
fnsave
inc
cmpsb
inc
int3
adc
push
daa
or
push
xchg
lds
ret
and
and
jp
inc
pop
ficompl
mov
mov
cmp
aas
shrl
cs
sbb
add
mov
lock
lret
push
in
xorl
and
cwtl
jle
mov
idiv
popf
cli
push
incb
xor
or
jae
call
mov
sub
popa
call
sub
push
inc
cmp
sub
hlt
shr
inc
inc
sbb
aaa
adc
in
enter
fdiv
dec
subl
and
cmpsl
mov
xchg
mov
mov
jbe
mov
mov
push
mov
push
and
out
les
pop
pop
inc
sbb
xor
sub
or
jae
fnstcw
mov
add
xor
xchg
out
push
push
loope
push
adc
shr
sub
out
loopne
jae
pop
add
lds
pop
xchg
inc
dec
push
rolb
push
mov
mov
arpl
or
movsb
sti
or
adc
push
add
adc
sbb
add
icebp
out
lcall
xor
cmp
jns
or
pop
cmc
jb
cmp
jno
mov
sub
add
sub
xor
addl
stc
jb
pop
scas
cmp
cltd
andb
dec
jge
mov
xchg
sbb
sbb
add
fcmovb
mov
jnp
xor
xlat
push
test
das
test
movsb
std
adc
sub
data16
scas
push
aam
mov
mov
lret
and
jl
in
push
movsl
cmp
add
jbe
inc
cs
sub
push
aam
and
mov
nopl
shll
std
pop
scas
push
sbb
lcall
into
sbbl
adc
sub
or
fldcw
push
jg
fistpl
inc
xor
xchg
xchg
or
gs
sub
imul
push
xchg
cli
and
mov
xorl
shlb
loope
das
pop
int
bnd
and
jbe
cmp
cmpsb
inc
inc
loope
or
fnstcw
hlt
insb
xchg
ds
jnp
lods
pop
push
loope
call
cmp
scas
in
sahf
cmp
xchg
jnp
cmp
dec
pop
ret
push
jno
and
cld
mov
cmpsb
cmp
add
adc
and
sarl
jnp
push
lea
push
arpl
out
push
sti
mov
push
mov
mov
enter
jecxz
outsl
fwait
pop
fnstenv
repz
xor
andl
push
dec
dec
aam
lret
mov
dec
adc
dec
loop
ljmp
iret
movsl
push
ret
cmp
test
dec
dec
aas
mov
sbb
xor
aam
inc
mov
jmp
cmp
lods
outsl
cwtl
mov
push
mov
fsubrl
add
push
sbb
inc
pop
cmp
jne
test
not
addr16
lret
pop
add
sbb
add
lods
or
fstl
dec
aas
outsl
jae
addr16
loop
lea
xchg
unpcklps
ljmp
scas
data16
data16
xor
mov
cld
cmpsb
loope
insb
dec
imul
inc
add
loopne
jne
push
sbb
sub
js
xor
loop
fs
sahf
sbb
xchg
ficompl
rcr
mov
in
xchg
shlb
add
inc
enter
mov
std
adc
add
xchg
shll
pop
hlt
leave
cmp
lcall
fiadds
sub
xchg
add
jb
pop
pop
stos
lret
mov
inc
inc
mov
roll
adc
jo
std
mov
out
xor
mull
inc
and
dec
scas
ret
outsl
jo
jno
orl
cmp
lea
loopne
push
js
scas
addr16
mov
cmpsb
in
adc
adc
pop
cmp
push
iret
xor
imull
cltd
dec
movsb
dec
vpsubsw
adc
das
test
mov
sbb
jl
xchg
fsubrl
jmp
push
or
push
mov
repz
pop
fcomps
sbb
mov
lods
fwait
stos
fildll
pop
add
orb
cmp
pop
jns
imul
inc
xor
jmp
cltd
add
popf
jo
push
jecxz
pushf
pop
loop
int3
push
repz
js
pop
ret
les
sbb
and
xchg
inc
xchg
dec
adc
mull
insb
sbb
mov
stos
push
dec
xor
push
pop
mov
cmp
push
dec
mov
mov
mov
mov
cmpsl
add
pop
mulb
mov
out
shr
je
push
std
int
xor
push
pop
ljmp
std
fs
gs
push
push
sub
pop
push
jge
aaa
testl
ja
ds
xor
lahf
bound
stos
jecxz
inc
lock
push
jmp
jl
push
or
fnsave
dec
cmp
jae
daa
lods
rcrl
dec
rolb
shl
lahf
ds
mov
push
cmp
and
sub
test
clc
loop
ljmp
add
insl
rorl
cmp
test
fs
shlb
orb
sar
ret
mov
fistl
fildl
jg
dec
cltd
mov
sbb
xchg
jo
ss
jbe
loopne
inc
jb
shlb
cs
sarl
mov
xchg
pop
rolb
loop
pop
mov
scas
dec
inc
adc
loopne
das
je
pop
in
inc
or
push
mov
dec
xchg
or
mov
add
ret
fcoms
les
pushf
xchg
or
lcall
fstp
dec
out
les
push
pop
stos
mov
mov
or
or
xor
stos
test
insl
xor
sbb
mov
adc
pop
jmp
aam
lods
daa
iret
fistpl
sub
out
fisttpl
popl
imul
dec
out
in
cltd
out
sbb
mov
fisubrl
push
add
and
je
into
imul
mov
loop
into
clc
push
fistpll
shll
cli
ljmp
sub
cmp
leave
mov
push
int3
inc
sbbb
rorb
mov
mov
add
enter
xchg
push
ja
mov
adc
jbe
jp
dec
cld
scas
add
sbb
roll
outsb
mov
in
jp
gs
insb
and
pop
push
jnp
inc
sysexit
int
sbb
hlt
mov
dec
lahf
call
pop
test
aaa
xchg
mov
in
das
pop
je
pop
cmp
pop
push
test
in
cli
rol
dec
aaa
inc
shlb
adc
pop
pop
adc
and
fnstsw
movsb
mov
mov
leave
data16
jne
push
pop
decb
push
bound
daa
add
outsl
inc
pop
jge
in
aaa
fiadds
fisttpll
in
and
pop
push
pop
stos
jne
ret
loopne
pop
es
pmaxub
sub
cmpsb
inc
cwtl
push
pop
test
arpl
xor
cmp
sbb
mov
xor
movsl
dec
sbbb
es
sbb
cltd
std
push
loope
xchg
loope
test
fsubrs
xchg
stos
adc
arpl
push
dec
lret
cwtl
scas
sbb
cmpsl
stc
push
shll
imull
ret
ret
sti
inc
cmpsb
outsb
jle
divl
cli
mov
add
and
pop
mov
push
or
xor
pop
aam
ljmp
lret
xor
pop
popa
cwtl
mov
push
inc
fcoms
fs
cmp
subb
push
sub
popa
jb
inc
out
in
or
xor
aas
jecxz
out
scas
add
mov
int
cmp
sbb
fmull
and
clc
lods
rclb
cmpsb
out
popf
in
adc
pop
push
xor
outsb
flds
or
mov
jecxz
and
sub
fsubl
jbe
dec
pop
ret
incb
cs
cmp
arpl
in
jg
push
fstpl
out
lcall
or
mov
loopne
inc
cs
dec
pop
pop
mov
jnp
test
push
or
jge
pop
mov
fbstp
pop
mov
lret
jnp
cmpsl
divl
lret
inc
imul
pop
mov
fisubrl
push
ret
mov
or
xchg
fistpl
loop
or
sahf
xchg
fs
adc
fnstsw
cmpsl
mov
sub
jnp
inc
add
imulb
daa
stos
inc
stc
daa
mov
pop
push
scas
arpl
inc
mov
jg
ss
test
inc
lds
sbb
shr
stos
mov
pop
pop
je
jg
push
addr16
pop
push
jmp
cmpsb
rep
loopne
mov
scas
stos
nop
dec
add
push
notb
repz
jl
mov
shll
scas
into
xchg
adc
jb
les
push
or
and
cmc
call
cmc
mov
adc
mov
sub
and
movsb
push
add
push
add
inc
dec
lret
ret
mov
adc
inc
push
int
aam
xor
add
faddl
xor
ljmp
addr16
fwait
pop
sbb
mov
jno
cli
jb
ja
mov
jae
in
jo
mov
sbb
leave
ss
mov
or
dec
inc
jmp
inc
jecxz
sbb
add
out
push
inc
xchg
imul
jb
jmp
xchg
push
pop
rclw
push
std
movsl
test
sbb
and
notl
ss
pop
outsl
pop
outsb
jae
push
lret
cs
cmpsb
sbb
push
lea
dec
test
pushf
ret
ss
dec
and
data16
das
push
dec
pop
push
imul
dec
enter
pop
sbb
mov
shlb
adc
rcrb
inc
inc
in
sti
push
shrb
das
sbb
pop
mov
sar
cmp
mov
scas
jl
mov
pop
dec
xchg
out
sbb
lahf
jmp
sarb
repz
lea
rolb
sub
rcrb
fs
adc
addr16
popf
insl
push
push
sbb
mov
push
cmp
fs
fldenv
add
pop
xchg
lods
stos
add
xor
adc
gs
mov
aas
ret
add
das
ja
mov
js
push
rclb
pushf
es
jp
sub
push
or
fs
add
aas
outsb
jecxz
mov
out
xor
and
out
adc
cmovg
xchg
orb
aaa
xor
pop
push
arpl
pop
fisttpl
cmpb
shrb
cmp
les
or
stc
pop
xchg
outsb
data16
xlat
dec
pop
sub
or
dec
xor
rolb
rcrb
mov
ss
mov
ret
jg
jne
popa
sub
mov
gs
inc
out
imul
shlb
in
aad
adcl
pop
add
fyl2xp1
and
into
dec
and
pop
dec
jo
xchg
into
sarl
push
stc
cmp
and
xor
xchg
shlb
ljmp
lods
dec
out
repz
xchg
inc
rcrb
xchg
dec
mov
lcall
mov
dec
push
sti
pop
mov
jns
ljmp
mov
shrb
push
imul
pop
inc
adc
popf
fcomps
xor
fs
xor
cmpsl
dec
sbb
mov
mov
inc
loope
sahf
cld
notb
jle
and
insb
inc
or
aad
mov
mov
adc
jnp
loopne
comiss
pop
repnz
ret
mov
cmpsl
sub
sahf
jae
out
and
dec
clc
icebp
loopne
mov
sub
stos
dec
pop
sbb
lods
pusha
scas
cld
mov
mov
xchg
and
aad
scas
adc
pop
andl
jne
nop
testb
mov
ror
andb
ljmp
lcall
cltd
pop
sbb
push
aas
and
test
movsl
pop
cwtl
lods
ss
orl
dec
push
ret
shlb
mov
inc
stos
out
jne
xor
push
xor
push
insl
or
int3
mov
mov
loope
mov
or
ja
pop
xlat
or
insl
lds
push
loope
ror
aam
or
or
in
sbb
mov
rcrl
cld
or
in
scas
push
fdivrl
xadd
call
cmp
into
sbbb
test
mov
fucomi
inc
loop
test
mov
xor
roll
test
jmp
nop
icebp
cmp
inc
mov
repnz
mov
inc
loope
stos
pop
loop
and
cmp
andb
mov
arpl
mov
mov
sbb
add
sbb
movsl
mov
inc
scas
cmc
cmp
mov
fcomps
int
dec
jb
popa
mov
fwait
pop
pushl
dec
popa
imul
and
xchg
push
jecxz
sub
stos
bound
imul
mov
mov
xlat
push
and
dec
cmp
push
das
insb
in
push
cmp
mov
pop
adc
std
les
js
in
pusha
xchg
and
mov
and
shrb
nop
inc
and
les
stos
add
sbb
cmp
mov
call
js
fldt
push
jae
leave
inc
fchs
popf
jno
cli
jnp
cmpl
fildl
mov
arpl
fsubl
outsw
loop
xchg
adc
lock
out
xchg
ret
in
jns
jae
mov
mov
jns
lret
sbb
cli
inc
adc
das
xchg
mov
xor
dec
push
loope
ss
aaa
popf
test
and
dec
or
cmp
and
dec
xor
sti
or
adc
mov
sbbl
outsl
divl
cs
je
push
call
lret
dec
and
leave
mov
shll
cmc
repnz
test
aas
mov
hlt
scas
aad
dec
push
pop
jl
bound
movsl
push
lcall
out
or
out
lea
in
das
xchg
test
pop
dec
out
mov
fildl
cs
push
lahf
fs
sbb
pop
in
or
stos
fsubl
test
movups
pop
mov
push
lods
inc
das
push
or
call
mov
jnp
push
jnp
loopne
ret
xlat
mov
jg
test
stc
dec
mov
imul
mov
cli
incl
mov
dec
stos
mov
inc
lcall
out
pop
cmpsl
shrb
xor
cmp
orl
int3
lcall
fstl
mov
cli
aad
fmuls
cmpsl
sub
mov
xorb
sbb
outsl
push
addr16
testb
cs
fwait
in
and
mov
adc
aaa
push
or
divl
cmp
addr16
pop
nop
pusha
cli
inc
jno,pn
sar
sbb
stos
imul
jb
mov
inc
inc
push
loope
daa
inc
xchg
popf
arpl
movsl
dec
orl
mov
xchg
aaa
lahf
insb
mov
dec
rcrb
add
outsb
jns
push
cmp
lret
not
push
sub
mov
lret
pop
jle
jecxz
inc
inc
dec
dec
dec
sbb
fdivl
or
sub
mov
mov
dec
push
movsl
xchg
cmp
mov
mov
cmp
clc
cltd
lock
ja
into
iret
add
fildll
push
cmp
mov
xchg
adcb
nop
aam
xchg
mov
push
loope
xor
xchg
adc
stc
orl
or
pop
xlat
out
cld
stc
mov
dec
adc
aas
mov
push
push
dec
mov
adc
xor
jle
and
mov
or
ret
scas
mov
scas
mov
mov
mov
clc
mov
jne
inc
loop
je
pop
out
inc
dec
lret
push
popa
clc
daa
push
cmc
in
xchg
jns
sbb
aam
xchg
mov
push
push
fsts
inc
mov
and
and
sti
inc
and
add
mov
jb
mov
cwtl
je
dec
shll
orl
icebp
add
inc
inc
rcrb
push
rcr
dec
push
mov
mov
pusha
fisttpll
jl
push
mov
scas
sub
cmp
mov
in
and
pop
mov
cs
imul
jae
es
xchg
mov
in
mov
dec
fsubrs
inc
jns
repnz
sarl
int
nop
mov
inc
mov
pushl
popa
inc
xchg
adc
xchg
dec
call
les
test
and
out
in
mov
push
sbb
jmp
mov
cmpsb
pushf
mov
cmp
ljmp
fld1
int
mov
fisubs
lea
sarl
icebp
test
out
fistpl
or
mov
pusha
adc
rcll
and
rol
lock
into
jnp
pop
mov
jmp
lods
sti
imul
fldenv
mov
pusha
movsb
shl
dec
das
pop
popf
or
js
mov
mov
push
mov
leave
add
cs
xor
fiaddl
leave
les
inc
and
sub
adc
sbb
xor
rcrb
outsl
fidivrl
fisubrs
push
or
mov
pop
and
or
cltd
mov
add
ret
adc
inc
cmp
in
mov
ljmp
pop
shlb
ficoms
xchg
fmulp
cmpb
in
xchg
incb
add
iret
fildll
cltd
pop
int
inc
and
ljmp
mul
cwtl
pop
push
inc
cs
aaa
jge
addr16
and
std
or
mov
dec
cmp
stos
adc
cmp
into
imull
fdivrs
subb
xchg
dec
sub
cmp
fistps
xor
mov
orl
mov
push
jmp
dec
test
iret
dec
push
call
add
jmp
hlt
in
pop
popa
fwait
cmp
out
adc
hlt
push
cli
lcall
jecxz
cli
adc
addb
sahf
xchg
icebp
push
xchg
notl
inc
repnz
xchg
jns
rcrb
sub
inc
cmc
hlt
or
and
push
icebp
lds
add
push
adc
lods
cmp
xchg
aaa
out
mov
mov
mov
cld
in
mov
mov
or
leave
and
sub
das
inc
jae
gs
sub
rorb
fdiv
lds
dec
dec
dec
test
push
push
js
clc
inc
fs
ret
ds
mov
mov
ret
pop
lcall
cmpsb
rcrb
hlt
out
leave
xchg
ja
jb
and
fdivrl
cmc
xor
ss
mov
push
in
or
dec
mov
xor
inc
scas
ljmp
adc
fcoms
xor
dec
pop
cmp
cmp
xchg
mov
pusha
adc
out
lea
ret
adc
mov
popa
in
movsl
add
or
add
xor
fs
sbb
mov
cmp
cwtl
lret
ret
fldcw
mov
popf
out
imul
and
adc
mov
stc
jg
std
out
sar
divl
fnstcw
cmp
dec
inc
sub
outsl
outsl
or
adc
adc
scas
or
pushf
cmp
jo
dec
push
jbe
xor
pop
mov
mov
enter
rolb
cwtl
mov
sbb
add
mov
mov
arpl
dec
clc
push
scas
fucomp
cwtl
pop
enter
les
inc
push
lods
pop
loop
mov
nop
ds
inc
std
das
or
sub
pop
and
lods
dec
lret
sbb
xchg
fmuls
push
adc
adc
mov
jle
jle
sbb
ret
out
insl
inc
mov
mul
rorl
jl
push
push
mov
xchg
lcall
shrb
fucomp
aaa
ffree
cwtl
je
lret
stos
popa
popa
inc
push
imul
adc
mov
sbb
and
das
pop
fwait
push
add
js
adc
add
add
sub
sahf
movsb
sbb
into
in
test
roll
lods
das
cmp
test
sbb
pop
or
mov
loope
testb
dec
lret
mov
inc
scas
cltd
adc
data16
push
pushf
arpl
xor
jg
mov
mov
sbb
adc
pop
int
adc
sbb
test
sub
xor
shlb
mov
addr16
sbb
xor
shr
mov
and
mov
hlt
mov
mov
js
cmp
sbb
leave
das
fidivl
jge
sub
jmp
cli
idiv
ja
adc
lret
mov
sub
mul
cmpsl
test
in
mov
jno
xchg
fistl
dec
mov
sbb
loope
imul
inc
dec
push
xchg
mov
insb
add
adc
add
inc
mov
insl
scas
ss
or
mov
sbb
out
out
notb
mov
xchg
adc
lahf
or
out
in
inc
and
jecxz
cmp
int
sbb
mov
call
xor
mov
or
pop
loope
out
sub
adc
add
sub
adc
mov
insb
mov
neg
scas
cmp
sub
sub
aaa
incl
mov
pushf
mov
sbb
mov
rcl
cmp
mov
filds
jbe
xor
pop
adcl
mov
dec
call
out
mov
mov
mov
fwait
and
cmp
jae
lds
xor
cld
or
push
aas
gs
xchg
movsb
jno
nop
add
outsb
aaa
mov
les
push
push
push
push
mov
mov
jno
and
addl
xchg
xchg
dec
mov
push
pop
adc
cmp
aaa
push
mov
mov
pop
ret
cmp
imul
cwtl
scas
jbe
lods
push
cmp
dec
inc
add
or
out
sbb
lahf
xchg
fistps
add
loop
mov
push
push
mov
push
sti
sub
jle
adc
test
mov
ds
xchg
push
or
sahf
aaa
mov
or
cwtl
jbe
aas
add
xor
jae
mov
test
je
addb
sbb
aam
mov
mov
adc
mov
imul
mov
dec
fisttps
dec
mov
jmp
test
xor
pop
push
test
popa
cmpsl
repnz
mov
neg
inc
out
pop
adc
push
jmp
pop
or
jge
sti
xchg
xlat
cltd
lret
sbb
repnz
call
frstor
pop
incl
rorb
scas
and
test
fstps
addr16
mov
pop
outsb
mull
fsub
fbld
jle
andb
jb
inc
js
xchg
push
mov
mov
cld
cld
arpl
or
shll
stos
or
cmpl
and
out
shrb
iret
jge
cltd
xchg
movsb
daa
xlat
mov
fisttpll
adc
cmp
js
repnz
jno
xlat
cmp
orb
lcall
lds
je
ja
xor
mov
lret
test
push
or
mov
push
mov
aam
in
cmp
mov
jp
pushf
dec
pop
mov
push
mov
inc
push
dec
or
dec
pop
lahf
es
xor
lcall
push
xchg
jg
xchg
sub
sbb
enter
push
aam
pop
jbe
loope
and
sti
or
push
xor
out
ss
mov
fdivrl
sub
outsb
push
jmp
addr16
mov
jecxz
and
in
mov
ret
in
or
sbb
mov
sbb
nop
jecxz
xchg
shrb
das
aaa
dec
push
sub
outsl
dec
mov
add
bound
out
mov
cmpsl
pop
je
je
and
add
cmpsl
xchg
pop
movb
push
sub
push
xor
in
lea
fs
fldl
call
mov
imul
cmc
jmp
lcall
push
lods
push
int
sbb
imul
sbb
shlb
pop
insb
in
cmp
call
push
mov
push
dec
cmp
test
rorb
loopne
cmp
or
sbb
mov
inc
ficoms
mov
loopne
inc
cld
adc
mov
xor
ficoms
pop
lcall
adc
pop
enter
ljmp
dec
pushf
cmp
and
jb
or
scas
add
push
sbb
mov
testb
lahf
sub
dec
or
mov
or
xchg
pop
call
sti
jecxz
inc
out
cmp
lds
xchg
xor
rorb
pop
ja
loop
int
cmpsl
add
xlat
mov
pop
inc
fwait
rol
mov
jns
jae
mov
enter
dec
sbb
dec
fstpt
xchg
sub
mov
xchg
adc
pop
lcall
fidivrs
outsl
lock
cmc
push
cmp
cmp
aad
aad
jmp
xor
jb
sub
in
dec
pop
push
lcall
push
add
je
leave
mov
jmp
add
and
xor
add
adc
add
call
pop
push
inc
xor
push
mov
xor
add
es
mov
mov
int
repz
pop
hlt
adc
fcoms
push
in
mov
sub
mov
push
aas
push
xchg
and
inc
aaa
adc
ss
pop
push
sub
jl
or
daa
cmpb
mov
icebp
wrmsr
jg
sub
jp
sub
dec
aas
xor
lret
add
ja
pop
in
cld
xchg
cmpsb
fildll
fnstenv
sbb
sbb
fildl
add
lret
xor
sti
push
xlat
mov
lods
and
and
dec
ret
ret
mov
imul
repnz
mov
inc
ret
xor
push
les
imul
adc
sub
stos
das
out
pop
int3
mov
mov
ficoml
in
xchg
push
sti
popa
into
test
sbb
add
scas
mov
inc
mov
push
movsl
cld
and
les
pop
pop
and
mov
sbb
pop
add
sub
add
mov
adc
add
pop
xchg
clc
jno
mov
push
push
rep
mov
icebp
je
out
pop
or
xchg
divb
in
int3
jmp
pop
sub
rclb
adc
cld
jbe
mov
popf
dec
loope
shll
jno
into
sub
and
test
pop
inc
in
aad
fnsetpm(287
mov
aam
lea
sub
in
insl
loop
push
lods
sahf
sar
push
leave
xchg
jne
xlat
scas
shll
int3
push
inc
popa
imul
mov
mov
decb
adcb
mov
roll
fwait
jp
sgdtl
push
outsb
out
mov
out
xor
or
pop
inc
ljmp
mov
dec
mov
fildl
sahf
jo
lods
push
and
imul
int
arpl
stos
jmp
fldcw
dec
xorb
test
push
cmpb
outsl
pop
les
mov
cmp
lcall
mov
mov
add
sbb
sarb
daa
data16
lds
inc
ja
mov
pop
iret
dec
inc
sub
ljmp
sub
add
and
or
inc
lahf
stos
into
sbb
loop
sti
mov
mov
xchg
int
loop
add
stos
cmp
adcl
orb
mov
jp
repnz
insl
ljmp
adc
lods
in
jae
call
xor
xor
and
rcrl
add
sahf
pop
insb
dec
in
pop
dec
pop
jmp
xchg
sub
xchg
pusha
cltd
loop
or
push
inc
adc
sbb
jmp
inc
sub
imul
xchg
mov
stos
ds
stc
jmp
pop
xor
out
cmpsl
cld
xchg
push
and
mov
xor
mov
cmp
orl
sbb
imul
xor
jo
int3
dec
fcompl
outsl
push
sbb
xor
dec
pop
repz
mov
xor
inc
je
pop
mov
test
xchg
push
xor
icebp
pop
ret
pop
sahf
repz
rcrb
dec
popf
xor
dec
es
imul
adc
jp
fisttpl
sub
ret
jp
add
arpl
js
mov
cmc
dec
int3
cmp
das
in
pusha
test
sub
or
push
mov
cmp
dec
cmp
xor
je
movsl
jl
adc
and
mov
daa
daa
and
lock
mov
xor
lods
shlb
int
adc
leave
loop
in
and
sbb
js
mov
mov
outsw
jle
xor
leave
xchg
das
xchg
jg
and
and
sbb
lret
imul
idivl
mov
jne
nop
push
cli
mov
lahf
inc
popa
dec
in
aam
ja
mov
enter
xorb
imul
fstpl
test
dec
imul
test
fiaddl
pop
and
adc
stos
outsl
push
push
rcrl
outsb
jmp
pop
push
mov
rcll
push
add
scas
iret
shlb
lock
loope
add
add
xor
inc
fs
dec
or
lret
jg
push
jo
xchg
movsb
xchg
sub
movsb
aad
mov
ljmp
outsl
sarl
or
pushaw
andb
out
outsb
jb
out
mov
push
sub
and
jo
movsb
mov
xchg
test
or
fs
dec
bound
mov
fwait
add
rcrl
lret
push
push
or
dec
jmp
pop
xlat
mov
lret
outsb
std
in
out
in
fwait
xor
imul
incl
jp
aas
aaa
adc
aam
xchg
mov
mov
ret
sub
sahf
cmpsb
mov
mov
xorb
frstor
sub
mov
loopne
out
cmp
push
xor
xlat
icebp
fs
std
cltd
mov
sub
add
test
inc
inc
mov
xchg
adc
into
out
lcall
lds
mul
lret
dec
rcrl
ss
mov
jle
cmpsb
cmpsl
inc
sbb
pop
cmp
scas
fdivp
xchg
mov
data16
loop
arpl
jge
into
hlt
push
or
cs
jnp,pt
mov
mov
dec
sub
sbb
stos
ja
pusha
js
clc
mov
xor
push
sub
mov
mov
mov
jb
adc
pop
test
fisubl
dec
and
lcall
ficompl
fsubrp
jne
push
ja
adc
mov
mov
ss
and
mov
sub
jecxz
pop
mov
inc
sbb
mov
sti
mov
in
stos
xchg
movl
dec
imul
pop
jo
in
push
ds
iret
fcoms
leave
xor
or
mov
jbe
subl
push
pop
lods
ret
push
pop
repz
mov
loopne
mov
mov
mov
pop
push
test
and
pop
in
ret
jbe
inc
pop
dec
mov
adc
sbb
inc
cmpsb
outsb
pusha
sbb
mov
adc
lock
lods
add
mov
and
aam
mov
push
mov
rcrl
lds
pusha
icebp
jmp
stos
push
out
mov
fld
jo
pop
dec
movsl
jge
add
rorl
mov
pusha
add
enter
lcall
into
bound
jae
scas
mov
jnp
mov
sarl
sbb
out
data16
cmc
cli
in
xchg
mov
push
inc
bnd
dec
lea
je
fbstp
testb
pop
fldt
mov
inc
mov
rolb
cmp
bound
cmpsb
add
jecxz
in
cmp
repz
push
jo
mov
fstpl
or
js
adcb
sub
mov
jns
sbb
loope
les
and
mov
xor
push
or
jo
call
enter
pop
in
test
popa
jae
push
out
mov
push
out
loop
int3
outsb
sbbb
sbb
adc
push
inc
iret
cltd
mov
mov
dec
mov
mov
sub
inc
pop
pop
stc
xchg
in
outsl
cltd
push
adc
lods
mov
mov
in
sbb
mov
lods
adc
jno
into
push
add
xchg
lods
cwtl
push
jp
pusha
sub
pop
mov
data16
loopne
bound
je
xchg
int3
addr16
subb
mov
insl
ret
aas
sbb
loop
fmul
outsl
add
rorb
push
sbb
sbb
and
mov
loopne
and
sub
cmc
push
or
mov
in
iret
and
popf
and
or
jns
push
jb
inc
fxch
loop
inc
in
jp
inc
mov
mov
sub
inc
adc
popa
and
ds
pop
movsb
pop
add
jge
push
sahf
ds
add
out
or
jne
int
imul
pop
ljmp
fsincos
xor
pusha
cltd
xor
ret
jnp
xchg
js
xor
mov
push
sbb
xchg
mov
fldenv
mov
int
loope
cmc
pop
mov
movsb
fadds
pop
outsb
and
inc
or
daa
cbtw
xchg
rol
movsb
adc
mov
movsb
adc
shr
sarl
rcll
iret
sbb
lahf
lock
jg
cmpsl
jne,pn
dec
pop
fucomip
lret
daa
jae
add
ja
sbb
sbb
inc
xor
leave
rclb
sbb
adc
gs
lret
cmc
add
clc
lret
inc
mov
mov
gs
daa
push
pop
adc
dec
cmpsb
ret
fwait
loopne
aad
sbb
adc
xor
rcr
push
setae
lock
jnp
and
into
stos
cs
scas
pop
dec
sbb
xor
jecxz
popa
mov
dec
out
out
dec
dec
es
lea
mov
adc
adc
push
mov
mov
loopne
mov
pop
ret
insl
jmp
adc
and
sub
pop
jecxz
outsl
dec
fcompl
sahf
sahf
lcall
and
dec
pop
mov
iret
jb
lds
pop
cltd
int
add
es
out
sub
pop
fsubrs
test
outsl
es
fsubs
addl
inc
sbb
adc
imul
ror
lahf
js
or
or
adc
mov
cli
leave
jge
add
sub
rorl
jge
xchg
and
add
in
mov
cmp
mov
cli
pop
lea
out
bound
shlb
scas
push
fildll
stc
adcl
push
xor
add
inc
leave
bound
pushf
xor
mov
push
loopne
cmp
sbb
ret
adc
sbb
mov
add
lods
ds
jbe
push
and
pusha
cwtl
jnp
lret
xchg
jae
adc
pusha
mov
xchg
sbbb
lods
mov
in
sbb
mov
leave
shr
jge
push
aas
fsubs
push
or
cltd
cmp
mov
testl
loop,pt
ret
mov
loopne
mov
fnop
inc
cmpsb
push
repnz
xchg
jno
int3
fwait
dec
jecxz
cmpb
mov
xlat
sbb
aaa
je
xor
sbb
pop
sbb
jo
lret
inc
adc
out
mov
fsubs
test
ret
cmp
and
mov
mov
mov
cmp
xchg
xchg
fwait
sbb
inc
lea
bound
mov
cmp
in
clc
mov
dec
mov
push
js
popf
or
jne
ljmp
shll
sub
pop
loope
mov
into
jno
imul
cmp
fistpl
sarb
fsubrl
les
jb
cmp
dec
sbb
fdivs
stos
gs
mov
ret
jns
xchg
loop
test
loope
mov
call
sahf
pop
or
loop
or
jb
cmp
fisubrl
and
pushf
xor
fildll
push
lods
jo
inc
inc
cmp
adc
pop
shl
ret
je
dec
lret
add
mov
and
mov
ss
dec
mov
dec
sbb
xlat
add
stos
inc
push
jno
sbb
in
mov
or
adc
cmp
xlat
in
jnp
mov
pop
jle
add
cmp
pop
fnsave
jmp
xlat
fisubl
xchg
mov
fs
in
out
outsb
pop
and
fldcw
add
andl
mov
lret
mov
fwait
adc
mov
jno
addr16
outsb
jle
and
push
push
test
jne
imul
jae
in
push
icebp
jae
mov
loop
xlat
insb
push
leave
pop
in
lds
push
int3
int3
loop
inc
push
push
pop
adc
pop
mov
xchg
ffree
das
inc
cmp
sbb
push
fistpl
jae
sub
lcall
mov
es
dec
jp
xchg
outsl
fcoms
leave
lahf
hlt
pop
mov
call
test
jle
lcall
outsb
mov
das
mov
lods
aam
rep
lea
cltd
jle
imul
fldl
jae
test
jg
mov
xchg
mov
adc
xchg
lods
fwait
je
jo
sub
movsl
ret
add
aas
mov
or
inc
mov
dec
or
push
jl
mov
push
loope
lods
test
push
insb
icebp
jo
jp
cltd
cwtl
sub
mov
cmp
jns
and
into
aaa
push
or
fldl
sub
fcompl
inc
fcmovb
fimull
stos
mov
movsl
push
mov
pusha
and
sarl
push
imul
jle,pn
test
es
sub
mov
pop
in
add
std
test
mov
mov
pop
lods
leave
outsl
fcomi
adc
or
pop
pop
cs
leave
cmp
loopne
jmp
in
cmc
jle
xor
repz
jbe
sbb
pop
aad
mov
aas
out
pop
int
xchg
adc
imul
add
es
out
shll
insl
mov
lret
pop
mov
push
xor
jl
mov
imul
cwtl
sub
cs
sub
mov
dec
ret
jo
subl
mov
out
mov
leave
mov
or
and
push
xor
shrb
imul
mulb
stos
jmp
mov
add
inc
cmpl
or
dec
mov
mov
aas
add
cmp
dec
cltd
jno
inc
jo
push
outsl
std
sbb
jae
dec
add
pop
xchg
dec
xor
imul
pop
rclb
mov
fcos
loopne
mov
cmp
lock
jne
into
cmp
mov
or
push
dec
adc
rcrb
jle
rcrb
out
inc
aam
in
mov
pusha
call
jp
fs
pop
pop
cltd
std
cmp
roll
jge
sbb
sahf
cmp
mov
dec
xor
adc
test
push
cmpsb
jbe
add
mov
inc
popa
sub
test
test
mov
int
movsl
xlat
cmp
pop
inc
lret
ficompl
mov
push
lods
ret
adc
pop
adc
lahf
mov
aad
xchg
lods
repz
dec
daa
fstl
add
push
dec
inc
aaa
mov
pop
jbe
popa
arpl
jle
sbbb
push
rorb
mov
sbb
lds
add
cwtl
xchg
inc
pop
push
push
cmpsb
lds
inc
outsl
fwait
aaa
pusha
arpl
push
push
or
push
or
mov
sub
pop
cmpsl
adc
and
sbb
push
fs
dec
dec
in
sub
jb
ror
mov
push
aam
rorl
ja
push
push
mov
lods
and
mov
sbb
stos
in
pop
xchg
mov
ret
dec
sbbb
push
and
pop
mov
aam
loopne
fidivrs
pop
scas
dec
mov
imul
add
fld
jp
lea
cmovl
inc
inc
mov
mov
pop
xchg
add
jbe
cmpsl
int
cmp
out
xchg
inc
mov
out
cmpxchg
mov
pusha
dec
pop
sti
into
bound
dec
lret
pop
ja
ja
add
jp
test
cmc
popf
dec
icebp
fisttpll
cmp
in
and
pusha
ljmp
cmp
sbb
sub
adc
fsubrl
inc
pop
lds
sbb
fdivr
jb
in
inc
dec
stos
xchg
scas
lods
cmp
cltd
aas
add
scas
sub
push
aas
inc
mov
jb
je
pop
push
daa
repnz
inc
mov
gs
xchg
jl
repnz
adc
arpl
lret
mulb
inc
imul
push
sub
xor
push
movsl
pop
cmpsl
inc
bound
cmpsb
jl
cld
cmpsb
cmc
pusha
repnz
adc
lret
sar
xchg
aaa
lcall
fstpl
dec
xchg
jle
xor
int
bound
xor
adc
arpl
lahf
and
xor
adc
mov
fwait
cmpsl
adc
outsb
loope
ja
mov
mov
movsl
sub
cmp
xlat
clc
out
or
pusha
aam
aam
mov
jno
movsl
shl
jg
mov
mov
cmp
push
pushl
pop
jo
mov
insl
movsl
roll
xor
jns
fwait
aad
faddp
or
sbb
and
andl
and
call
mov
sub
or
lods
in
rcr
loop
test
cmp
jae
and
clc
xchg
dec
aaa
jbe
xchg
pop
jo
or
divl
mov
inc
bound
loope
jne
ss
jbe
fdivs
lods
inc
daa
cmpsl
mov
neg
xchg
dec
adc
jmp
notl
dec
sarb
fwait
adc
inc
mov
adc
scas
shr
lcall
mov
or
mov
adc
popf
mov
xor
pop
shll
and
jae
dec
mov
mov
xor
rol
pop
add
dec
push
jae
testb
push
ror
push
popa
mov
dec
and
ja
xor
dec
fidivrs
and
std
cmc
fidivrs
mov
or
and
cmp
je
mov
cmp
rorl
xor
xchg
xor
into
dec
mov
dec
test
sbb
add
roll
test
mov
jne
and
pop
lods
mov
dec
mov
or
sub
cs
js
in
jecxz
mov
mov
cmp
jmp
in
testb
repnz
sub
pushf
stc
xchg
or
sbb
mov
and
jg
mov
addr16
mov
das
pop
scas
mov
mov
mov
mov
testl
fiaddl
sti
xchg
testb
add
std
mov
movsb
imul
popf
jp
jg
addr16
xlat
repnz
lret
lret
push
pop
mov
add
fs
lahf
push
pop
mov
gs
jnp
or
jae
fistpll
pop
fbld
jb
subb
clc
inc
je
cmp
push
jb
xlat
jne
movsl
push
scas
jae
movsl
push
sub
repz
subl
lock
jp
lret
mov
jmp
lods
adcl
jge
cmp
and
jle
shrl
cli
pop
mov
in
xchg
add
icebp
and
add
mov
enter
pop
imul
jae
inc
inc
xchg
jo
lret
lea
fsubl
push
stos
es
xor
ret
mov
hlt
sbb
sbb
xchg
cmpsb
dec
pop
addr16
fistpll
std
pusha
div
adc
or
cmp
push
inc
insb
mov
loope
cmp
fsubs
pop
add
nop
dec
ja
nop
addl
mov
push
mov
cmp
aas
and
rorl
lcall
cmp
or
xchg
dec
sub
adc
dec
shrl
loop
stos
hlt
xchg
daa
xchg
data16
mov
dec
push
outsb
push
cld
pop
insb
clc
jge
or
popf
cltd
fs
mov
xor
out
les
xchg
jp
cmp
mov
xor
push
popf
adc
mov
inc
int
inc
repz
sbb
shll
mov
dec
fdivl
sbb
and
lock
enter
insl
sbb
pusha
jne
mov
cmp
sbb
sar
dec
lret
mov
ror
ds
imul
shlb
inc
data16
and
imul
sbb
test
shr
out
sbb
add
adc
lds
aas
aaa
enter
push
int
cwtl
add
jns
outsb
mov
imul
inc
add
cmp
pop
fdivrl
jmp
push
dec
mov
inc
or
cwtl
cmpsb
dec
add
pop
xchg
fs
or
cmpl
fdivrs
push
dec
xchg
add
inc
mov
fs
adc
push
divl
sbb
push
mov
repnz
inc
outsl
loop
int3
in
insl
test
mov
fbld
jb
iret
inc
mov
cmp
das
add
fnstcw
arpl
stc
pushf
and
add
add
loope
fst
jne
loope
rclb
add
jns
adc
and
js
dec
cli
cltd
shrl
mov
mov
adc
ret
fadd
mov
ljmp
jbe
push
lods
aaa
clc
aaa
notb
push
ljmp
and
lods
bound
push
xor
inc
icebp
incb
ret
ficoml
repz
movsl
lcall
dec
push
bound
jbe
popa
cmp
rcrb
das
pop
rol
cmc
ds
fcmovu
mov
es
jae
or
lret
cltd
das
xor
add
ds
sbb
popa
mov
push
insb
pop
xor
test
xor
incb
aaa
pop
xchg
mov
jne
sti
movsb
fisttps
lods
rorl
xlat
cmp
sarl
push
sub
lret
lock
sbb
int
fimull
sahf
add
xor
sub
xor
or
hlt
mov
sbb
inc
adc
test
daa
mov
lret
adc
jbe
cmpsb
pop
inc
jno
pop
frstor
jl
and
aam
dec
das
mov
and
std
addr16
out
mov
gs
jecxz
daa
ljmp
sub
jg
mov
aam
dec
aaa
lods
dec
aas
scas
xlat
cli
leave
icebp
mov
sahf
jp
icebp
lods
testl
jg
push
sar
jbe
jecxz,pt
leave
movsb
jmpw
mov
incl
jne
outsl
mov
lret
push
popf
push
nop
xchg
out
lods
or
fcomip
inc
repz
ficomps
dec
pop
sbb
les
ds
movsb
movsb
or
sarb
orl
and
cmpsl
push
andl
mov
mov
xchg
xor
xor
sarl
fstps
leave
js
adc
mov
cmpl
inc
mov
mov
stc
ret
mov
test
jno
out
pop
adc
stos
jp
pop
pop
lods
push
mov
out
pop
ret
lahf
in
push
in
in
xchg
jp
dec
ss
in
mov
fldl
mov
jle
pop
hlt
jecxz
ljmp
sub
cmc
scas
mov
rolb
ljmp
fstl
add
fwait
jl
lcall
rcl
adc
in
cs
aad
or
mov
mov
aam
jae
pop
add
cmp
add
jbe
xor
and
repnz
xor
repnz
inc
push
sbb
fidivs
pushl
push
fistpll
rcrl
jg
dec
insl
scas
push
pop
fwait
adc
push
les
xchg
test
mov
or
jge
mov
pop
aas
mov
xchg
adc
and
xchg
push
sub
pushf
rol
xchg
mulb
loope
lods
xor
aam
jbe
or
fstpt
mov
and
adc
jg
add
dec
mov
push
mov
adc
lret
iret
jle
sbb
mov
test
push
cli
bound
daa
lret
add
jne
popf
push
cmp
es
shlb
test
inc
mov
enter
mov
mov
sbb
push
inc
pop
inc
movsb
xchg
mov
andl
inc
dec
pushf
jp
dec
pop
cmp
ds
xlat
fstpl
stc
subb
stos
jecxz
into
jns
mov
negb
aam
mov
inc
pop
dec
xlat
pop
mov
push
addl
stc
and
sub
add
nop
imul
cmp
lock
add
jo
sbb
jae
push
add
mov
push
pop
out
inc
sbb
mov
sbb
dec
dec
jns
bound
mov
cs
push
jle
cmp
fsubr
jge
mov
imul
cmp
js
rcrl
pop
ljmp
jp
push
jnp
adc
js
aad
jl
sub
add
js
pop
test
sbb
push
mov
mov
into
fsubrs
xor
cmpsb
and
or
xor
in
pop
mov
or
push
lcall
loop
shl
decb
mov
outsb
jb
js
mov
dec
add
pushf
jnp
dec
mov
pusha
dec
jno
mov
sbb
dec
or
cltd
mov
push
inc
repz
xor
mov
cmp
enter
stos
popf
mov
push
movsl
and
loop
aaa
jb
aas
negl
stos
test
popf
xchg
push
push
fdivs
xlat
jne
jp
or
sub
bnd
inc
jae
testl
data16
pop
add
lea
in
mov
sahf
ret
push
int3
popa
aam
adc
mov
inc
in
out
xor
mov
movsl
rclb
vcomisd
pop
xchg
xor
mov
out
arpl
sbb
mov
cmp
aaa
xorb
ja
adc
push
lcall
inc
roll
not
cld
es
push
jno
out
push
bnd
mov
cwtl
test
gs
mov
push
repnz
mov
fcmovu
mov
fbstp
fdivrl
jl
scas
popa
xchg
add
cmp
leave
sbb
bound
mov
push
add
lcall
inc
push
inc
xchg
cmpsb
push
mov
sarl
xor
inc
adc
mov
bound
outsl
mov
cmp
lods
arpl
pop
jp
mov
cwtl
jbe
jbe
jmp
inc
sub
mov
and
loopne
mov
pop
ret
sbb
js
mov
test
adc
push
pop
inc
leave
out
dec
fnsave
mov
jmp
mov
addr16
int3
cld
push
inc
addb
ret
enter
loop
or
pop
mov
and
jle
or
jno
dec
lea
push
loope
pop
mov
jge
in
adc
dec
push
sbb
jns
std
fnstenv
lret
insb
xor
outsl
and
and
cltd
shll
mulb
jl
lods
sub
stos
inc
cmpsl
jg
adc
ret
and
mov
mov
cmp
js
inc
inc
pop
js
psubusb
xchg
jb
sub
push
mov
xchg
in
insl
js
cmp
movsb
jns
push
arpl
repz
sub
mov
xchg
mov
clc
inc
js
loopne
out
mov
fldlg2
pop
and
out
dec
add
cmp
arpl
pushf
in
enter
cmp
scas
fisttps
inc
sub
rol
sahf
xchg
mov
jle
or
adc
push
jl
sti
jg
mov
cmpsb
div
pusha
addr16
arpl
pop
nop
inc
mov
insl
dec
adc
xchg
mov
insb
mov
addl
inc
rcr
adc
fisubrs
fsubr
adc
into
repz
cmp
lret
cmp
movsl
mov
sbb
jb
cs
xorb
sahf
pop
aas
ss
ljmp
in
jg
cwtl
test
mov
adcb
and
movsl
pushf
jge
lods
adc
cld
jge
adc
out
pop
test
int3
pop
jae
loopne
fcoms
sub
dec
cmp
fidivl
jmp
js
cwtl
lret
je
jg
jg
aaa
pop
xchg
icebp
push
push
out
fsubl
call
cli
in
pop
dec
aaa
sbb
out
xchg
push
jg
js
stc
enter
mov
int
push
std
insb
adc
outsb
mov
adc
or
xor
push
ss
enter
in
hlt
mov
jg
cmp
push
test
mov
cmp
ffreep
scas
stos
jb
sti
aaa
inc
test
sbb
std
filds
jbe
xchg
lret
sub
sub
sub
std
frstor
pusha
sbb
aaa
inc
fdivrl
sti
mov
push
mov
loopne
dec
mov
jmp
cmp
imul
insb
jecxz
xor
popa
test
aas
out
pop
cmpsb
out
cmp
sbbl
ret
addl
imul
gs
insb
sbb
clc
mov
mov
xor
xor
pop
add
push
shr
jle,pn
sub
fadds
push
sub
sub
dec
out
mov
push
xorb
addr16
dec
pop
jl
fs
call
sub
mov
shr
aaa
push
in
adc
mov
and
popa
or
fisttpl
lret
push
inc
sub
rclb
push
sub
repz
pop
std
xor
aad
fadds
add
test
xor
mov
fs
xor
add
jns
int
cmc
xor
dec
lods
pop
outsl
ret
mov
cltd
in
jne
jmp
add
stos
lock
stc
xchg
lods
push
push
lods
rcrl
xchg
outsb
cltd
mov
fbstp
fnsave
outsb
cmp
dec
sub
movsb
fs
aas
movsl
mov
xor
ret
adc
jle
xor
dec
add
xchg
xchg
lcall
std
add
arpl
add
mov
scas
mov
cmp
inc
in
stos
xchg
rcr
bnd
pop
mov
gs
push
mov
pusha
outsl
mov
mov
mov
arpl
mov
pop
ds
xchg
xor
in
or
sbb
stos
xor
outsl
pusha
inc
mov
in
sbb
or
ljmp
negl
loop
sub
mov
mov
mov
fdivs
mov
pop
int
jl
add
dec
lds
pop
iret
nop
xchg
pop
pop
shlb
sar
imul
sub
and
jne
outsb
mov
mov
pusha
xchg
adc
pop
mov
pop
mov
mov
pop
push
cld
and
jno
stos
sbbb
ja
xor
jl
fwait
lea
jg
mov
mov
xchg
sbb
add
popf
je
in
cmp
and
jno
cmp
push
out
mov
sarb
mov
cmp
movsl
loop
or
in
cld
xchg
inc
shl
dec
movsb
pop
xor
jge
sbb
dec
ja
xorb
add
mov
and
and
js
inc
cli
fs
jno
sbb
cli
stos
mov
enter
cltd
adc
loop
xchg
in
rcl
pop
mov
jmp
or
jns
sub
inc
and
cwtl
xchg
out
pop
pop
movl
xchg
ret
rolb
fucom
dec
mov
sub
push
leave
out
xor
call
push
add
rolb
push
mov
sbb
rcrb
sbb
mov
jnp
movsb
xor
jo
adcb
and
jmp
and
loop
repnz
std
jbe
mov
pop
adc
lds
sub
iret
adc
cmpsb
jp
sub
dec
lret
stc
add
les
inc
adc
sbb
dec
popf
lret
inc
fucom
xchg
push
push
mov
rorl
mov
push
cmc
lods
xorl
cmpsl
daa
cmp
and
push
push
stos
sub
dec
in
aam
pusha
rcrl
pop
cmp
xchg
inc
mov
push
pop
in
jge
daa
and
mov
add
arpl
scas
mull
jl
mov
push
push
fdivr
xchg
or
loope
push
inc
mov
fisubs
dec
lods
je
movsl
push
sbb
dec
inc
imul
insb
ljmp
jo
sub
mov
daa
push
lds
shll
ret
lret
xchg
mov
sti
cmp
lods
or
xchg
xor
imul
mov
scas
enter
daa
ret
popa
add
into
push
call
shlb
sbb
mov
xchg
addb
xchg
lock
movsb
inc
xlat
adc
ss
clc
mov
test
mov
adc
test
mov
cld
mov
sbb
mov
dec
lret
push
dec
sub
or
push
push
iret
dec
xchg
and
cld
std
jno
dec
fstl
mov
popa
and
and
add
imul
push
in
xchg
cmc
mov
ret
jbe
cli
in
and
cmp
pop
fisubrs
pusha
clc
es
repz
add
xchg
pop
fsts
sti
jp
mov
push
jae
enter
lods
sbb
cltd
mov
lea
cmc
dec
jbe
ljmp
shl
mov
dec
sbb
sub
or
xchg
xchg
add
sbb
pop
ret
test
fwait
mov
xor
lock
jecxz
push
mov
push
ds
or
cli
rcrb
in
ret
cwtl
popa
movd
push
or
add
pop
jmp
shlb
xor
mov
into
dec
bound
addl
push
jge
sub
pop
xor
and
cmp
in
out
rdmsr
add
in
cmp
out
out
int3
movsl
add
adc
and
sbb
or
adc
mov
sub
adc
xchg
sbb
jb
cld
push
movsl
mov
jnp
xor
pop
xorl
cmpb
mov
xchg
cmp
cs
push
out
cmp
xor
mov
test
mov
outsl
lock
inc
enter
stos
mov
outsl
dec
leave
cmp
fs
pop
daa
pop
aam
inc
jecxz
rcrl
xor
jl
pusha
cmpsb
out
mov
scas
mov
xchg
xlat
pop
rcrb
jno
fnstcw
cmpsl
mov
mov
fs
mov
ds
xlat
cld
push
push
jmp
pop
or
or
push
jne
push
addr16
push
aad
lret
jns
ret
jecxz
jl
in
js
xor
and
je
inc
ret
cltd
hlt
aad
jmp
sbb
lods
adc
inc
mov
mov
push
dec
aam
pushl
dec
xor
lret
ss
push
fists
fs
and
aas
call
int3
sub
pcmpeqb
les
ja
jbe
jmp
fistps
mov
repnz
ds
jl
cmp
xchg
dec
sub
andl
sbb
dec
das
orl
push
stos
fiadds
scas
push
nop
test
shl
fnstsw
cli
test
movsl
push
push
in
in
mov
adc
mov
mov
mov
fs
mulb
daa
test
mov
cmpsb
adc
cmpsb
mov
sbb
and
xchg
js
test
out
push
ljmp
and
push
xor
jnp
and
ljmp
out
push
adc
fmul
icebp
jg
int
bound
sbb
shl
jns
sbb
sbb
leave
filds
cmc
es
xlat
jl
outsl
sbb
cmp
lds
xor
and
shll
imul
dec
popa
jbe
add
test
mov
ss
jmp
shrb
mov
push
mov
loope
jge
out
cmpsl
jno
ljmp
outsl
in
cmp
mov
jno
insb
sub
xor
fsubrl
sbb
push
jge
xor
aad
add
out
aaa
pop
ss
mov
insl
mov
or
cmp
cmp
push
dec
ja
mov
or
das
data16
out
push
inc
add
dec
rolb
push
test
pop
jp
sub
js
out
jo
rcll
rcrl
shlb
iret
fisubs
in
xchg
pop
fs
lods
mov
push
cmc
cmp
sbb
jns
inc
ficoms
lahf
push
loop
pop
fwait
mov
mov
ljmp
cmpb
sub
inc
cmpsb
sbb
inc
add
lret
xor
pop
dec
adc
ret
adc
insb
sub
insb
je
shrb
mov
les
inc
leave
mov
aad
adc
sbb
insb
iret
out
idivl
ljmp
sbb
es
xchg
push
outsb
call
mov
inc
dec
xchg
add
push
pop
fnsave
mov
repz
adc
xor
sti
popa
inc
add
into
ret
aad
cmp
or
cmpsl
mov
mov
adc
push
or
xlat
inc
dec
mov
mov
mov
push
add
mov
and
inc
cmp
data16
add
dec
push
xchg
and
pop
hlt
jle
mov
ss
dec
clc
mov
inc
mov
mov
push
mov
cmpsb
hlt
jmp
lods
adc
and
dec
xchg
push
test
test
push
je
sbb
loopne
pushaw
mov
sbb
mov
stos
add
loope
push
jbe
inc
sti
ja
orl
imul
repnz
mov
mov
sbb
js
in
out
aas
fwait
xchg
xchg
call
call
cltd
xchg
out
mov
sub
imul
add
add
mov
ret
aas
inc
insb
adc
js
xchg
mov
pop
int3
pop
stc
lret
cmp
adc
adc
push
xchg
adc
test
pop
jo
in
inc
les
push
and
cmp
dec
adcb
lds
popl
sbb
jle
sti
lds
jo
push
mov
jnp
pop
es
imul
lret
loop
in
pushf
mov
mov
and
xor
les
stos
xor
test
outsl
pop
push
push
inc
loope
ror
das
or
data16
repz
add
imul
and
xchg
push
cltd
daa
adc
xor
lods
xchg
in
out
in
adc
cmp
xchg
int
movl
adc
push
or
insl
les
in
das
xor
pop
push
fcomps
negb
fistpl
inc
aad
fsubr
je
and
pop
pusha
out
or
jae
ds
cmpsl
sub
add
mov
mov
arpl
pop
stos
jecxz,pn
mov
ret
jno
jnp
cmp
jmp
sub
clc
mov
movsb
imul
scas
ret
mov
lods
les
pop
je
nop
mov
in
cmp
fldt
sbb
mov
sti
ds
and
ds
adc
push
sahf
dec
lock
sbb
nop
dec
cmp
push
inc
xlat
jle
popa
jmp
xchg
ret
cmpsb
add
and
pop
iret
pop
fdivrp
das
adc
sbb
mov
ja
cmp
inc
enter
mov
jb
in
outsb
lcall
test
add
or
pmaxub
test
or
shll
push
sbb
sbb
push
fsubr
pushf
cmpl
jmp
popa
or
mov
sbb
pop
outsl
imul
lret
nop
hlt
test
out
xchg
dec
add
leave
or
dec
and
das
out
aam
or
mov
mov
es
adcl
jbe
fwait
inc
or
cmpsl
mov
inc
jne
lret
jecxz
and
nop
inc
popa
in
mov
dec
adc
out
lock
push
or
pushl
and
insb
stos
jle
testl
sbb
sub
mov
call
negl
fidivrs
scas
inc
mov
fldl
sbb
adc
jecxz
mov
int
xchg
pusha
cmp
xchg
cs
xchg
rcrl
divb
pop
xchg
sbb
subl
mov
call
cmp
xorb
vpmaxsw
push
mov
push
dec
jp
mov
jb
cmp
ficompl
leave
test
jmp
and
cwtl
sub
and
loopne
add
add
pop
add
cmc
or
mov
jg
dec
xlat
shrb
sbb
daa
or
popa
inc
add
int3
inc
push
mov
or
shrl
imul
test
add
adc
add
into
test
xor
jg
add
push
cmpsb
mov
faddp
mov
shlb
test
aaa
ret
adc
ds
lods
imul
lret
int
lods
sti
stc
scas
bound
sub
outsl
adc
add
mov
inc
cmp
push
gs
adc
xor
ret
je
sub
test
fildl
aad
hlt
mov
ljmp
or
outsb
lcall
cmpsl
movsb
pushf
jns
aas
cmpsl
cltd
sbb
in
fwait
pop
lea
and
divl
frstor
rolb
mov
pop
jle
int
mov
pop
pop
mov
and
adc
cmp
push
inc
xlat
ss
lods
fiaddl
lods
jnp
loop
jae
fisttpll
lea
out
jle
aas
fildll
add
adc
iret
aas
mov
sti
fdivrp
cmp
negl
aaa
popa
pop
pop
clc
dec
aas
in
add
fs
div
inc
adc
push
push
mov
pop
movsb
fstpt
add
fs
dec
inc
jle
xor
xor
ffreep
jecxz
lret
sbb
pop
jnp
mov
push
ja
jo
inc
push
out
cli
add
imul
stos
mov
sub
xchg
out
xor
loop
jmp
ror
stos
push
dec
sbb
cltd
rorb
push
pop
das
je
push
push
or
mov
inc
pop
outsl
add
pop
ret
jecxz
cwtl
movsb
cmc
imul
cwtl
in
or
lahf
jns
mov
andl
lcall
sti
xor
and
loop
fstpt
clc
xor
aam
dec
jmp
sub
daa
das
pop
adc
xchg
xchg
aas
inc
nop
jae
push
push
sbb
aaa
adcl
add
cmp
pop
cmc
dec
add
adc
push
loopne
dec
xchg
xor
mov
mov
mov
movsl
movsl
loope
sarl
jmp
in
andb
cmp
dec
jp
sub
pop
enter
aad
in
pop
ja
cltd
fisttpll
lret
cmp
aas
jae
cmp
add
in
cmp
ss
add
push
push
scas
je
pusha
fisubrs
sbb
loopne
push
ds
test
outsl
nop
das
scas
jb
arpl
push
pop
aad
adc
aad
add
mov
outsb
es
xor
test
fnstcw
add
mov
ficompl
shll
mov
arpl
xor
adcb
fsubrl
jns
scas
addl
lods
addb
and
xor
and
insl
movl
sbb
shl
or
xchg
xchg
push
mov
jl
adc
lcall
sbb
jl
sbb
jmp
rcr
in
test
mov
pop
lods
adc
mov
mov
jg
mov
out
sbb
nop
adc
or
inc
imul
gs
mov
sub
mov
call
adc
push
in
inc
cmpl
int3
jae
cmc
xchg
dec
js
push
movsl
adc
sar
js
add
enter
lods
push
or
das
aaa
jle
sub
adcb
aas
repz
sub
int
sub
push
lods
test
jmp
cmpsb
stc
xchg
xor
scas
sar
inc
faddp
aam
mov
mov
cmc
ret
mov
fadd
or
ds
xchg
daa
scas
mov
push
xor
bound
loop
sub
ja
lods
and
xor
movsb
pop
je
das
jae
inc
pop
cld
data16
xor
enter
fstl
mov
in
mov
push
and
mov
mov
sbbb
push
add
data16
inc
aam
pop
insl
pop
adc
jmp
inc
dec
dec
inc
call
decb
sbb
mov
sbb
pop
insl
pop
mov
clc
arpl
and
std
icebp
lahf
loopne
shll
xchg
sbb
pop
push
in
std
inc
lret
mov
adc
xor
mov
aas
xchg
outsl
mov
daa
nop
pusha
jnp
jnp
pop
dec
xor
inc
xchg
pop
insl
push
mov
comiss
or
fs
fcmovu
notb
std
or
pop
cmp
das
repz
pop
sub
fcoms
call
scas
lcall
lods
js
mov
or
pop
mov
inc
add
aaa
lock
filds
lods
mov
push
xor
push
xchg
scas
enter
ret
cmp
jo
in
and
cltd
xchg
inc
sub
adc
push
xchg
cmp
cld
mov
sbb
add
push
pop
mov
mov
fdivr
adc
stos
cmp
movsb
inc
fmulp
lds
mov
inc
inc
xchg
out
fidivl
lea
add
pop
popf
mov
adc
mov
inc
mov
bound
sbb
sub
mul
out
fcoml
js
mov
xchg
imul
lds
mov
fnstenv
sbb
xchg
data16
fdivrl
add
into
inc
and
jp
rcr
filds
daa
cs
lret
adc
ljmp
test
xor
js
add
subl
pop
xchg
mov
xchg
jno
xchg
push
push
adc
sti
nop/reserved
xor
mov
or
inc
mov
rorb
jp
les
mov
sar
mov
fists
lahf
mov
adcl
adc
inc
fld
and
and
or
orl
vmptrst
xor
pop
xor
imul
jno
mov
ret
xchg
sahf
mov
imul
scas
aad
jmp
fs
jo
inc
bound
insl
lcall
mov
pop
jb
cli
shlb
sub
scas
mov
aad
test
aas
outsl
in
fstpt
shlb
xchg
mov
subb
push
nop
sub
cmp
out
xchg
daa
sarb
in
loopne
and
xor
mov
push
mov
xor
sub
enter
repnz
adc
push
ficoms
es
xlat
aas
negb
mov
mov
add
pop
push
fimull
push
dec
mov
mov
mov
and
sub
rorl
mov
enter
adc
add
fisttps
sub
xor
mov
or
jp
mov
loop
mov
sbb
cmpsb
stc
arpl
and
pushf
or
mov
scas
lret
xor
mov
lea
jp
lds
jle
xchg
lods
sbb
and
sub
sarb
xlat
mov
outsb
stos
in
gs
adc
mov
cltd
push
xchg
shr
sbb
lock
dec
leave
sahf
pop
fstps
gs
jl
dec
or
cmp
pushf
add
into
addr16
mov
xchg
and
shl
stos
notl
sbb
mov
lock
mov
in
pop
mov
add
fwait
mov
mov
push
adc
aad
cs
je
jle
daa
mov
out
test
adc
daa
ljmp
scas
scas
sbb
data16
mov
les
insl
lods
lods
sub
in
test
aas
add
fwait
xor
mov
mov
cmp
ret
add
lret
inc
les
jne
ret
jno
sbb
mov
ret
cmp
ds
dec
dec
outsl
idivb
mov
insl
push
push
mov
sub
cmp
jecxz
mov
push
shr
adc
daa
jae
mov
jb
mov
mov
lds
ljmp
and
xchg
int
adc
or
or
mov
mov
add
negl
addb
dec
enter
pop
insb
test
pop
lods
or
js
dec
fwait
je
pusha
jmp
sbb
add
arpl
pop
mov
cmp
sub
ss
jl
mov
loopne
imul
add
sti
or
roll
mov
shrb
cs
hlt
inc
jp
mov
sub
inc
inc
mov
jns
jae
mov
sti
push
mov
insb
lahf
xlat
pop
out
dec
fiaddl
inc
insb
pop
aad
jmp
mov
cltd
sub
push
insb
adc
das
mov
pop
push
mov
xchg
dec
call
fisubl
mov
push
out
pop
outsb
jg
outsb
loopne
dec
inc
mov
push
dec
ja
insl
cmp
repz
stc
cwtl
inc
add
pop
icebp
and
fisttpll
mov
xor
les
cwtl
insb
into
pop
and
fnstcw
ljmp
aaa
jl
pop
in
in
lret
add
adc
or
scas
je
adc
pop
outsb
sbb
insb
mov
xor
scas
xor
sub
cmp
ret
xor
int
lret
sbb
dec
adc
pop
fnstenv
add
mov
addl
sub
xor
bound
les
mov
jmp
cltd
arpl
int
lock
or
out
sbb
in
mov
adc
or
ret
inc
jle
pop
sarl
add
jmp
sbb
push
out
mov
jecxz
dec
sub
sub
mov
stos
in
cmp
out
data16
jne
add
sbbl
sbb
jmp
inc
popa
pop
mov
or
push
addr16
cmp
lcall
pop
lds
pushf
jecxz
inc
cltd
sbb
les
inc
out
dec
insb
xchg
or
test
jmp
lds
pop
and
add
mov
fists
cs
mov
cs
push
sti
mov
mov
ljmp
aad
lods
adc
js
nop
sbb
push
xchg
jbe
or
and
test
cmp
in
out
out
insb
mov
subl
lahf
insl
pop
je
enter
mov
cmp
jmp
xlat
push
out
pop
push
adcb
pop
push
adc
icebp
roll
pop
mov
das
out
inc
arpl
mov
jbe
loop
dec
cwtl
jno
das
pusha
cmpsb
push
lods
xchg
or
and
pop
xchg
ljmp
xchg
lods
inc
pop
push
and
sub
mov
jecxz
lods
aam
add
sbb
lods
sub
leave
mov
cs
test
loope
shlb
dec
xor
push
adc
lods
mov
jnp
pop
test
aaa
dec
sbb
add
mov
push
loopne
sbb
push
adc
insb
and
stos
jle
cltd
shlb
mov
pop
sub
daa
mov
add
pop
xchg
bound
push
imul
testl
outsl
xchg
lret
sub
push
and
scas
and
inc
scas
mov
int
int3
or
insb
fildl
sbb
cltd
jle
jecxz
aam
fnsave
or
dec
inc
pop
lret
or
lahf
cmp
xchg
push
rcr
cmp
xchg
mov
adc
sarl
imul
rolb
cmp
mov
cmp
mov
into
in
rol
test
or
sbb
out
mov
js
ja
mov
mov
jle
mov
subl
scas
adc
and
xor
jle
test
cli
dec
into
adc
push
mulb
cmpsb
lret
pop
leave
fistpl
mov
test
sar
imul
fisttps
xor
inc
jnp
push
int3
js
cwtl
filds
mov
das
xlat
sub
and
ficomps
mov
ret
dec
mov
mov
push
rcr
les
insl
mov
out
ret
push
dec
repnz
xor
jmp
in
mov
in
xchg
rcrl
dec
jge
sbb
shrb
cmp
xchg
in
mov
imul
adc
out
add
movsb
pop
push
sbb
lea
orb
divl
jbe
xor
orb
ss
adc
cmp
leave
lods
mov
xlat
sahf
loopne
xor
imul
dec
add
fidivl
mov
gs
xor
mov
mov
pop
and
fimull
shl
js
aaa
adc
ljmp
or
inc
data16
xchg
rorl
movsl
jle
imul
pusha
jl
add
pop
add
ljmp
aas
hlt
fnstsw
les
sbb
ffree
push
fsubl
jae
xchg
sahf
imul
mov
push
shl
inc
popf
ds
clc
mov
shll
lock
rorl
in
xchg
sti
icebp
mov
push
loop
daa
sbb
out
cmp
jne
fs
jge
jmp
shl
test
jne
mov
xlat
pusha
test
mov
addl
push
and
pop
sub
pop
mov
lcall
fstl
subb
es
js
out
test
das
lcall
pop
das
pusha
cmp
xor
fucomp
mov
pop
add
pop
cli
sub
fld
sbb
ror
push
jle
sbb
sub
pop
push
mov
mov
and
mov
xchg
adc
and
sti
adc
test
lret
cmp
cs
imul
outsl
push
adc
mov
mov
sub
mull
int3
inc
stos
add
data16
pop
xchg
xor
mov
sbb
sbb
sub
arpl
and
aad
mov
mov
lahf
inc
and
loopne
in
sub
push
rcll
xchg
push
bound
mov
cmp
pop
shlb
mov
lods
divl
movsb
fmull
ficompl
pop
negb
popf
jmp
shr
add
mov
sub
sti
out
pop
sti
arpl
xchg
add
xor
mov
push
cli
ljmp
inc
sbb
sub
cmpsb
or
scas
ljmp
fildl
and
sub
and
inc
repnz
movsl
mov
xchg
xchg
mov
sahf
std
jae
pop
mov
ljmp
mov
mov
sbb
cmpsb
push
sbb
inc
cli
out
xor
xchg
rclb
nop
push
popf
mov
ror
xchg
mov
out
test
test
mov
xchg
mov
mov
clc
insb
idivl
and
and
xchg
xlat
mov
push
mov
or
inc
or
mov
xor
add
call
cmpsl
divb
inc
loop
ja
inc
or
sahf
push
clc
sub
mov
enter
roll
gs
push
jbe
stos
lods
loope
and
adc
jb
mov
adc
sub
jbe
xor
scas
sub
and
xlat
popa
fsts
push
jp
sbb
addl
xchg
mov
adc
mov
mov
and
cmpsl
pop
mov
mov
or
arpl
add
loopne
jmp
cltd
jmp
jne
cmpsb
adc
mov
add
inc
lods
fnstenv
fbld
and
mov
jle
mov
ljmp
fs
orl
gs
shr
sub
mov
les
cmp
dec
push
push
fidivl
push
cmpsl
push
mov
xchg
xchg
add
cs
cmp
rcll
pop
cwtl
ds
add
movsb
fidivrs
lea
xor
pop
in
and
seta
xor
jp
push
int3
jno
xorb
mov
bound
cltd
mov
push
xchg
mov
loopw
inc
aad
jmp
icebp
flds
lcall
in
cmc
or
sbb
out
jb
push
mov
jp
add
cmp
daa
xor
in
and
sub
ret
lret
mov
pop
xchg
inc
add
repnz
ja
loop
xchg
inc
addr16
andl
cmpsb
xchg
jmp
sysret
push
pop
pop
pop
lret
jo
mov
mov
insb
inc
push
sbb
ljmp
pop
add
mov
clc
pop
sub
repz
xlat
sbb
movhps
xor
mov
and
dec
mov
cli
jbe
ficoml
leave
and
testb
push
pushf
outsl
jmp
xchg
mov
fildll
push
add
rorb
inc
mov
push
shl
jno
lock
adc
scas
cmpsb
push
movsb
cmp
add
testl
mov
jo
xor
jne
and
inc
popa
mov
jge
sbb
enter
mov
mov
hlt
jp
mov
or
xor
jle
popa
fimull
repz
sbb
mov
loope
push
dec
pop
xchg
jle
xor
push
sahf
cmp
mov
daa
pop
add
ret
pushf
scas
cld
pop
sbb
outsb
jne
out
das
mov
inc
mov
addb
or
popf
mov
xor
inc
push
popf
test
scas
cmpsb
les
fisubrl
loop
jge
sets
mov
gs
push
or
and
es
or
aad
clc
outsb
mov
or
mov
and
lcall
push
inc
mov
mov
xchg
jno
xchg
xlat
aas
hlt
adc
inc
in
sbb
sub
dec
mov
loope
push
lret
scas
call
and
mov
test
cwtl
sub
sbb
push
cmp
lods
or
push
push
loope
ja
mov
jno
cmp
fsts
stc
jnp
mov
adc
lahf
fcomps
call
hlt
test
adc
push
mov
mov
lds
leave
xchg
fdivrs
lret
arpl
jp
out
sbb
fldenv
cmc
shll
cmp
notb
sbb
pop
in
rcrb
sub
jno
fsubrs
jmp
adc
sbb
test
mov
xchg
pop
nop
xor
mov
ror
add
jb
jmp
pop
jl
rorl
jo
sub
and
adc
dec
mov
sbb
xor
rolb
and
sbb
xchg
mov
popa
inc
adc
cmp
mov
movsl
sbb
scas
push
adc
adcl
cmp
fsubl
dec
pusha
shl
add
push
cwtl
leave
lcall
sahf
shl
inc
imul
mov
xor
scas
test
cmp
daa
jns
pop
jnp
enter
adc
jne
inc
mov
pop
push
mov
pop
mov
nop
xorl
arpl
push
aaa
cmc
sub
iret
pusha
cmp
cltd
jl,pt
mov
fcoms
or
pop
sub
pop
fimuls
neg
add
add
xor
cs
movsb
fwait
stc
lret
testl
xor
mov
test
mov
adc
pop
mov
push
push
cmpsb
jbe
mov
mov
addb
int3
lea
jmp
push
cmp
push
jnp
add
sbb
shr
xchg
inc
cmpsl
clc
add
inc
mov
inc
incl
mov
xor
inc
out
inc
movsb
cltd
insb
test
pop
repz
sub
add
bswap
movsl
aad
fadd
in
bound
enter
lret
push
push
daa
mov
ret
inc
xchg
arpl
imul
es
lahf
aam
lea
inc
sbb
add
loopne
mov
pop
lahf
outsl
mov
das
jmp
leave
inc
fwait
and
and
sub
int
std
clc
js
or
jl
add
sbb
cld
aas
sahf
push
jmp
fs
xlat
test
or
stos
cmpsl
addr16
cmpsb
mov
jb
adc
pop
pop
jnp
loop
out
cmp
iret
push
orb
xchg
lods
add
out
aaa
stos
add
jns
popf
or
mov
mov
addb
pop
pop
xchg
mov
jnp
and
inc
and
lret
xlat
movsl
dec
into
or
mov
rorl
sti
maskmovq
notl
incb
fwait
sbb
jo
inc
loop
cltd
xor
add
jecxz
ret
loope
sbb
sub
or
ja
mov
mov
sti
xchg
data16
inc
das
dec
test
add
fcmovbe
mov
xor
dec
sbb
jl
outsb
cmp
mov
and
fistps
loop
nop
imul
sub
insb
mov
sti
push
addr16
push
xchg
sbb
add
test
aaa
push
clc
jns
rdpmc
xchg
sub
addr16
xchg
dec
decb
push
cli
sbb
pop
cmp
jo
inc
and
das
movsb
int
sub
fdivl
mov
in
or
hlt
xor
loope
dec
shlb
js
or
inc
pop
jle
xchg
out
inc
push
mov
cmp
mov
xchg
iret
jae
pushf
push
sbb
mov
scas
sbb
sbb
cmc
xor
hlt
pushf
push
test
xchg
mov
dec
add
mov
into
add
jae
outsl
movsb
out
sub
int
lret
sub
mov
ret
fdiv
jg
add
mov
loop
push
sbb
adc
push
iret
in
not
mov
add
pop
mov
or
test
or
cmpsb
hlt
pop
add
sub
sbb
or
xchg
push
aad
inc
jo
mov
mov
scas
sahf
jno
inc
mov
xor
mov
fists
call
testl
insb
push
jle
lea
jle
je
cmp
pop
into
push
rcll
sub
sahf
adc
cs
je
movsl
mov
adc
mov
ja
and
daa
out
loope
sarl
sub
pushf
dec
insl
pop
xchg
sbb
sub
mov
xor
in
xchg
sbb
aad
lcall
xchg
cmp
jne
sub
jne
sar
lret
cmpsb
or
inc
div
cmp
add
les
in
mov
cmp
loopne
pushfw
pop
stos
push
jno
imul
jl
pop
movntq
mov
dec
mov
fadds
dec
mov
sbbl
cld
loopne
insb
mov
in
lahf
pop
push
loop
hlt
sbb
cltd
dec
adc
mov
int3
xchg
dec
lret
dec
std
sbb
ret
pop
inc
adc
cmp
ds
js
xor
xor
ror
jg
xor
mov
repz
aam
mov
pop
pusha
imul
adcb
mov
incb
ja
adc
xor
xchg
shr
jl
mov
pop
push
or
arpl
jns
rcll
pop
xlat
ret
xor
pop
xor
add
out
or
scas
les
mov
fnsave
adc
xchg
xor
mov
nop
mov
scas
push
movsl
mov
pop
pop
repnz
in
push
mov
inc
repnz
mov
add
hlt
dec
mov
aad
loope
sbb
pop
pop
rorl
insl
in
lds
lcall
xchg
add
mov
inc
cs
mov
jno
push
cmp
jecxz
mov
out
lds
pop
adc
daa
data16
mov
or
pop
jnp
cmp
outsl
push
sub
push
dec
je
out
pop
test
mov
jp
repnz
mov
mov
jg
xchg
arpl
jae
or
jle
loope
cmp
push
in
add
testl
jmp
sbb
xor
or
mov
cmpsb
incl
dec
mov
push
and
pop
and
dec
call
out
pop
test
dec
jl
xor
loop
add
arpl
divl
lea
jg
mov
jae
mov
call
lret
push
push
cmp
adc
push
inc
inc
cltd
cwtl
gs
mov
test
test
test
cmp
sub
jg
add
cmc
aaa
mov
sti
jg
incl
push
js
inc
cmc
push
xchg
jno
jg
fstps
dec
xor
add
jmp
test
out
mov
fidivrl
sbb
je
push
add
xchg
inc
push
out
pop
mulb
test
div
or
pop
stos
pusha
cmp
out
adc
pop
and
jns
adc
ja
push
scas
push
cmp
mov
mov
jbe
jo
lret
inc
test
inc
bound
sbb
test
pop
dec
bsr
mov
out
xlat
xor
mov
dec
inc
test
push
xchg
mov
lods
sahf
out
imul
jo
push
mov
andb
add
icebp
jno
dec
mov
mov
or
mov
sub
int
pop
repnz
sarl
inc
jns
mov
les
int3
push
mulb
pop
in
shl
or
jnp
loop
movsl
lret
pop
and
lock
enter
idivb
shlb
add
or
ljmp
adc
in
adc
xor
cmp
enter
repnz
or
jo
mov
clc
mov
out
out
sti
in
add
sbbl
mov
sub
and
adcl
insb
subl
sub
xchg
dec
int
ljmp
mov
mov
sub
dec
ljmp
xor
cmp
sub
sti
jp
push
test
add
add
sub
mov
jb
sub
or
dec
cld
cld
xor
test
sbb
insl
cmpsb
xchg
pop
jmp
pop
sbb
in
push
sbb
and
dec
mov
fistl
daa
js
pop
pop
or
jo
pop
out
pop
dec
ret
and
lcall
xor
push
add
jo
into
dec
add
test
ret
or
or
adc
inc
cmpl
iret
mov
xchg
adc
cmp
push
lret
lods
add
insb
jno
pop
mov
sbbl
cmpsl
aas
ret
xchg
jmp
insl
pushf
inc
mov
dec
xchg
aad
dec
mov
insb
pop
xchg
stc
imul
jnp
or
icebp
fs
sbb
cmpps
jecxz
fadds
std
cmp
fidivrs
xor
dec
dec
inc
jle
mov
push
inc
dec
nop
inc
test
mov
bound
ficomps
dec
fstp
mov
lret
xchg
xchg
negl
ss
mov
movl
addb
sub
out
jne
lahf
push
jmp
jmp
add
pop
adc
ret
cwtl
adc
out
arpl
fisubrl
sahf
sti
inc
mov
inc
sbb
or
adc
mov
clc
mov
push
pushf
in
xor
xor
pop
aaa
cmp
adc
scas
nop
cmpsb
inc
outsl
lret
fsubs
cmp
insb
or
insl
iret
sbb
cwtl
jne
out
jmp
mov
lret
lea
xchg
add
jne
mov
mov
in
bound
sub
mov
inc
std
out
scas
flds
sbb
dec
cmp
loop
jl
das
aaa
jbe
mov
jmp
mov
pop
cmc
push
mov
movsb
mov
ja
jnp
sub
jge
or
pop
movsb
mov
adc
pop
add
or
adc
fimull
mov
mov
inc
mov
fnsave
or
fmull
in
sbb
or
jle
mov
mov
sub
mov
sbb
jl
cmp
xor
decb
xchg
test
add
adc
add
adc
cs
jg
test
xchg
imulb
das
jo
jnp
xor
adc
fsubr
addl
or
xchg
ret
mov
movsb
jb
jle
icebp
mov
push
fwait
testl
fimull
dec
cli
stc
mov
or
or
pop
jl
pushf
sbb
sub
test
popf
mov
in
fs
cli
gs
xchg
mov
ret
xlat
rorl
popf
fiaddl
mov
pop
cli
cmp
lret
or
pop
pop
or
xchg
ret
jnp
push
pop
jb
rclb
outsl
andb
lock
ret
es
in
stos
push
dec
inc
xor
sbb
es
outsb
pusha
cld
rcrb
roll
xchg
xchg
jo
cmp
movsl
add
mov
movsb
sbb
lret
popf
add
mov
lds
data16
cmpsl
ficompl
xchg
je
push
push
add
lock
fsubs
sbbl
scas
test
fld
mov
and
pop
lahf
pop
sbb
cltd
mov
repz
sbb
cmpsb
sahf
sbb
push
jmp
mov
insb
pop
mov
ret
imul
aas
push
xor
mov
mov
xchg
jno
ret
dec
cmp
mov
in
fcmovb
lea
add
jmp
jge
dec
mov
movsw
dec
pop
dec
mov
cmpb
mov
int
lret
cwtl
sbbl
add
call
aaa
jge
sub
popf
pop
sub
lds
sbbl
mov
lea
je
cmp
rcr
and
clc
and
cmpxchg
push
inc
and
in
subb
cmpsl
aam
pop
pushf
cltd
ss
dec
dec
or
dec
mov
outsb
and
movsb
mov
lock
daa
xchg
xchg
dec
movsl
in
xchg
adc
xchg
push
jne
ljmp
pop
jle
lcall
addr16
testl
scas
fldt
jb
inc
mov
imul
xor
xor
xor
or
xor
add
add
mov
adc
mov
dec
add
pusha
add
adc
dec
add
rolb
jg
inc
add
rolb
