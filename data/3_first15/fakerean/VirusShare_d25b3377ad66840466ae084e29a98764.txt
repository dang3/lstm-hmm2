xor
sbb
mov
fisttps
jg
mov
sub
shlb
xchg
cs
adc
imul
imul
imul
xor
jp
or
test
add
lock
incl
out
xor
test
dec
rcrl
imul
jb
imul
arpl
ret
mov
sar
popf
imul
jecxz
icebp
aas
popa
or
cmc
mov
imul
popa
add
jmp
jl
pop
fdivrl
jmp
loop
lea
les
jns
jne
mov
punpckhwd
sub
dec
aaa
int
inc
lea
xor
psrlq
test
ret
pop
into
dec
xlat
xchg
orb
lahf
out
mov
or
sbb
xor
js
mov
sbb
ljmp
cltd
ret
xlat
mov
dec
mov
cmc
ds
lret
es
sbb
jns
mov
add
cli
dec
mov
aad
fmuls
adc
imul
stos
stos
ror
enter
mov
mov
jmp
insb
and
jmp
mov
dec
or
mov
dec
sti
clc
or
bound
or
push
add
pushf
fcompl
insb
sbb
xor
add
fstl
mov
ljmp
scas
stos
aam
stos
fsub
fwait
es
jl
dec
les
rclb
cli
popf
push
js
xchg
int3
jne
imul
popf
xlat
mov
jbe
adc
movsb
sahf
lret
push
pop
xchg
add
iret
stos
pushf
jecxz
je
popf
cmp
dec
sarl
cli
popf
push
xor
je
mov
dec
xchg
in
pop
mov
mov
popf
xlat
sahf
scas
sub
jp
jnp
mov
les
add
dec
cld
add
mov
pop
mov
dec
add
dec
or
jle
jnp
les
fnsave
mov
loope
cmp
sbb
aaa
mov
dec
shl
lahf
stos
ljmp
xchg
ljmp
cmp
adc
nop
in
push
mov
dec
arpl
fbld
push
mov
mov
iret
fsubp
sbb
sub
leave
imul
in
lahf
ljmp
jnp
adc
sub
insl
jle
mov
dec
scas
dec
insb
negl
pop
mov
dec
mov
mov
push
dec
fs
xchg
stc
jns
dec
add
jns
xchg
jns
arpl
mov
push
or
jbe
mov
push
or
jbe
and
push
add
jle
leave
aam
dec
or
xchg
dec
in
jmp
scas
adc
and
ljmp
cmp
jbe
pushf
inc
sub
cltd
jg
cwtl
push
gs
add
lahf
call
jmp
addr16
and
adc
inc
push
or
xor
clc
xchg
inc
and
mov
hlt
mov
mov
in
aad
mov
lea
aaa
clc
pop
cmpsb
xchg
xchg
or
mov
dec
fisubs
ret
ss
popf
int
jl
and
xor
and
inc
cmp
cmpsl
xchg
sbb
jmp
or
and
and
sub
les
inc
push
loop
aaa
add
movl
int
pop
push
rcll
inc
lret
cli
mov
mov
mov
inc
pop
add
xchg
popf
add
dec
jge
gs
fs
rcrb
pop
xchg
call
push
pop
int3
push
sbb
xchg
add
pop
sbb
and
mov
jle
and
das
and
jnp
ret
cmp
xchg
lods
sti
jbe
in
fsubs
lods
ja
movsl
inc
xlat
cmp
lea
inc
push
add
inc
sarb
mov
adc
inc
mov
inc
pop
xor
or
push
inc
push
mov
ror
stos
cltd
dec
es
push
xchg
xchg
pop
es
push
xchg
push
leave
lods
ja
movsb
pop
jo
fadds
xchg
test
jne
and
stos
ja
movsb
pop
inc
repz
adc
pop
movsl
inc
cwtl
and
push
lods
mov
inc
mov
in
cmpsb
fxch
sbb
fs
int
inc
mov
xchg
aam
fcoms
mov
add
xchg
dec
xchg
inc
fsubs
jecxz
and
dec
std
pop
arpl
inc
mov
inc
mov
mulb
mov
aam
inc
xchg
mov
in
mov
lret
sbb
icebp
movsl
push
dec
movsl
bound
jge
adc
pop
fwait
push
std
xchg
dec
aam
shr
or
jbe
in
adc
mov
cmp
negb
jg
cmp
push
addb
ret
gs
and
out
repz
imul
lcall
mov
xor
rcll
fadds
popf
cli
dec
xor
inc
adc
mov
fadds
mov
aaa
or
int
inc
push
mov
int3
inc
data16
movb
ss
inc
cmp
fmuls
fwait
adc
mov
cwtl
sbb
xchg
shlb
data16
sub
rcrb
mov
sar
ret
jne
push
jnp
jno
int
inc
push
clc
call
jae
int
pop
clc
push
bound
push
sbb
pushl
sbb
inc
push
int
dec
in
fsubl
jle
and
xchg
in
or
add
fwait
ret
gs
pop
scas
inc
jae
int
pop
push
clc
lcall
popf
fisttpl
jb
push
out
cmp
clc
mov
fisubrs
pop
or
lcall
jmp
and
xchg
or
jecxz
jo
popa
cs
pop
jns
into
rep
popf
xchg
cmp
outsb
xor
push
push
dec
in
inc
or
push
xchg
stos
sub
cmp
sbb
psubw
js
daa
push
sbb
fldenv
sbb
insb
inc
push
or
jge
bound
and
cmpsl
lock
push
lock
inc
xor
das
addr16
lea
push
or
dec
xchg
sbb
mov
and
push
std
and
push
or
and
push
or
and
push
or
and
push
or
and
push
in
and
or
test
add
sub
dec
sarb
cmp
push
xor
lods
lahf
dec
add
mov
pop
push
mov
mov
pop
dec
and
push
or
ss
push
cmp
ret
and
push
or
in
xchg
or
inc
push
lea
inc
push
adc
inc
push
or
pushf
dec
push
or
and
or
and
push
or
and
push
or
cwtl
dec
push
or
and
or
and
push
or
and
push
or
and
push
adc
push
or
and
push
or
and
push
or
and
inc
push
or
and
push
or
and
push
or
and
push
or
and
push
or
and
push
or
and
push
or
and
push
or
and
push
or
and
push
or
and
push
or
and
push
or
and
push
or
jns
push
clc
and
push
or
and
or
and
inc
push
or
and
push
add
stc
jecxz
jne
inc
clc
and
dec
push
or
cmpsl
inc
push
or
and
push
or
and
inc
or
and
push
or
and
push
or
and
push
or
and
push
or
and
push
or
and
push
or
and
push
or
sahf
dec
push
sbb
inc
push
shll
push
or
add
inc
jge
bound
and
jbe
and
js
jecxz
push
push
int3
gs
dec
ret
pop
mov
ljmp
mov
xor
sub
movsl
push
in
in
inc
jne
inc
jae
push
pop
add
movsb
adc
popa
adc
cmp
push
or
push
cmc
cli
cmp
lea
mov
lahf
lock
loope
xor
push
or
mov
movsl
pop
xchg
push
push
movsb
lea
inc
or
and
lret
mov
mov
jb
lods
sub
hlt
movsl
push
adc
das
sub
sarb
push
movsl
inc
fisttps
inc
push
or
ljmp
mov
sarl
sbb
xor
xor
jbe
pop
sbb
mov
movsb
hlt
and
pop
pop
xor
inc
pop
pop
cmp
movsl
push
sbb
mov
xor
notb
ret
arpl
xchg
ljmp
mov
xor
xlat
sub
outsb
mov
adc
inc
xlat
inc
push
xchg
sub
popf
fildl
dec
dec
in
bswap
and
orb
imull
mov
ret
and
push
or
inc
fidivrl
add
bound
pop
inc
push
jmp
movsl
inc
aad
es
and
cmp
fmuls
cwtl
lret
and
mov
push
fiadds
lods
push
xchg
fs
push
or
bound
push
dec
push
or
loop
dec
xchg
inc
bound
push
sbb
xor
pop
movsl
push
or
mov
dec
dec
shll
and
jmp
jb
or
mov
dec
aam
inc
mov
inc
adc
sub
inc
push
lea
and
push
aaa
das
int3
imul
sbb
sub
and
xchg
in
mov
fadds
xchg
jge
push
dec
fs
cmp
pop
and
stc
or
mov
movsb
hlt
and
adc
sarl
jecxz
pop
jmp
imull
cmp
push
push
add
orl
push
add
mov
cmp
push
imul
in
fstpl
pop
ret
xchg
popa
xchg
push
fs
push
or
fsubs
mov
cmp
push
mov
push
adc
lret
js
ss
xchg
fadds
insl
cmp
push
imul
push
imull
mov
cmp
dec
sub
and
push
or
pusha
cmp
in
push
or
fisubs
and
adc
sarl
jecxz
pop
jmp
aaa
scas
lret
in
xor
cmp
xchg
cmp
fiaddl
add
int3
in
ss
cmp
push
movsl
inc
filds
sub
cmp
and
xor
rorl
jno
fisttpl
and
or
inc
ja
dec
and
xor
and
xchg
ret
adc
xor
and
push
or
fldenv
ja
and
movsl
dec
xchg
inc
push
xchg
lret
es
sbb
xor
pop
movsl
inc
or
xchg
popf
xchg
cmp
and
jecxz
ss
inc
xchg
out
inc
push
or
popw
test
xor
ss
ret
or
ss
xchg
in
pop
inc
push
lea
sub
out
adc
inc
push
pop
popf
sbb
pop
mov
mov
stos
sarl
jecxz
pop
jmp
imull
xor
adc
xor
and
loopne
xchg
mov
test
cmp
loop
dec
lret
fs
es
jae
sbb
xor
cmp
fmuls
repnz
arpl
cli
sbb
rcrb
jle
push
pop
lea
sub
adc
adc
push
or
push
in
fstpl
and
inc
push
dec
in
dec
push
ret
push
cmp
pop
data16
jmp
inc
push
or
fisubs
and
adc
sarl
jecxz
pop
jmp
aaa
scas
lret
in
xor
cmp
adc
inc
orl
push
add
int3
in
cmp
pop
in
shll
push
mov
sarl
push
push
push
dec
fs
or
mov
xor
push
in
cltd
jmp
inc
cmp
jecxz
rolb
jg
dec
push
ja
dec
pop
pop
xor
xor
clc
dec
ret
adc
push
aas
xchg
bound
gs
and
push
or
popw
cmpsl
sub
and
push
aaa
das
int3
imul
dec
inc
pop
mov
xor
cmp
movsl
dec
aam
pop
mov
xor
inc
shrb
ss
pop
out
push
adc
cmpsb
dec
inc
push
mov
xor
ss
sub
dec
in
cltd
sub
inc
cmp
mov
xchg
jg
dec
push
ja
mov
xor
xor
cmp
mov
call
pusha
gs
and
push
or
popw
sub
ja
push
dec
fwait
lcall
push
aaa
das
int3
stos
shll
xchg
jmp
and
inc
jecxz
rolb
jg
dec
push
ja
mov
xor
xor
cmp
and
xchg
mov
stc
lea
or
int
or
xchg
mov
aaa
mov
and
push
in
inc
inc
push
or
and
xchg
shrl
push
lret
out
data16
inc
pop
movsl
dec
or
ja
dec
and
and
or
fiaddl
or
dec
movsl
dec
mov
fs
xchg
adc
mov
xor
xlat
sub
insl
mov
ret
inc
pop
xchg
sub
clc
fcoml
ret
and
jecxz
sbb
cwtl
jb
or
loopne
xchg
mov
and
cmp
inc
pop
in
fstpl
pop
add
xor
adc
push
cs
xchg
xchg
clc
pusha
xchg
inc
cmp
shll
dec
loope
cmp
and
ss
mov
bound
xor
cmp
add
bound
ss
push
dec
and
arpl
loop
push
xchg
inc
push
xchg
lret
es
sbb
xor
pop
movsl
inc
or
push
cmp
in
xor
cmp
adc
add
add
mov
test
lret
clc
sbb
gs
xor
sbb
push
sub
test
ja
and
push
jmp
mov
mov
movsl
inc
push
mov
shll
inc
pop
sbb
and
lock
inc
jge
and
push
or
fisubs
and
adc
sarl
arpl
or
mov
daa
daa
or
xor
push
or
ss
dec
and
and
jne
dec
adc
and
push
or
fisubs
and
adc
sarl
jecxz
cltd
jmp
mov
lcall
bound
es
push
or
data16
sub
jmp
mov
mov
sub
clc
and
test
add
sub
push
loope
cmp
cmp
mov
cmp
movsl
dec
popa
inc
push
mov
imul
xor
aaa
push
inc
fs
cmp
push
sub
movsl
mov
pop
cmp
cmp
ss
call
mov
test
or
xchg
sub
mov
jp
jns
mov
dec
xchg
or
push
cmp
cmp
pop
stc
mov
test
xor
and
test
loope
inc
cmp
sbb
sub
mov
out
js
mov
out
push
movsl
mov
pop
and
loope
mov
push
pop
sahf
mov
mov
fs
sub
movl
add
nop
jmp
fbstp
pop
int3
ret
insb
and
jb
aas
repnz
inc
pop
push
aas
mov
lret
sahf
mov
mov
pop
xchg
and
mov
shll
ja
cmp
adc
imul
rorl
fsubrl
push
std
jmp
scas
mov
stos
pop
and
and
es
cmpsl
test
mov
rol
sbb
sbb
je
and
ret
push
clc
mov
xchg
shr
sbb
pop
mov
mov
add
xchg
mov
sub
pop
das
in
fimull
ljmp
aad
dec
iret
mov
sbb
or
sbb
pop
mov
push
sub
imul
jge
push
cmp
mov
lcall
test
mov
jl
jmp
mov
sti
fistpll
cltd
test
cmp
loope
push
repnz
xor
fsubs
subl
and
push
add
dec
imul
movsb
mov
mov
mov
xor
mov
mov
xor
and
cmpsl
adc
insl
ret
cmpsl
cld
jo
push
cld
or
repnz
and
notb
mov
divl
mov
je
in
enter
in
addb
sub
test
sub
sub
dec
cmp
or
es
repz
add
cmp
les
imul
xchg
lret
push
jmp
fcomps
fimuls
in
adc
inc
sti
adc
out
pop
pop
out
mov
push
cli
jns
mov
das
inc
and
popl
nop
lods
pop
test
lods
je
divb
xchg
inc
mov
or
adc
scas
out
call
and
fdivrl
push
mov
ljmp
std
cltd
outsl
adc
pop
or
loop
xor
and
jle
xor
cmp
fidivrs
out
add
xchg
imul
icebp
cld
popl
xchg
outsl
nop
xchg
or
push
mov
or
sub
jnp
into
data16
pop
andb
mov
arpl
xchg
call
cmpl
cs
jne
mov
cmp
mov
out
lds
pop
xor
dec
push
call
mov
push
mov
inc
enter
mov
or
sub
sbb
jne
nop
inc
nop
push
sbb
sahf
push
sbb
xlat
mov
loopne
xor
cmp
shrb
pop
arpl
cmp
adc
dec
jl
mov
cmp
sub
push
ret
mov
pusha
scas
push
imul
data16
test
xchg
loopne
sbb
inc
add
jecxz
cmpsb
xor
sbb
xchg
stc
lret
cmpsl
mov
enter
fs
jle
mov
xor
adcl
imul
cld
inc
les
jecxz
xorb
inc
inc
xor
xor
add
jae
pop
dec
ficoml
mov
mov
lds
arpl
xchg
loope
loope
movl
push
cli
push
inc
cmpsb
negb
das
xchg
cld
ljmp
fimuls
and
mov
and
sub
sbb
adc
dec
push
rolb
int3
leave
icebp
fisttpl
xchg
adcb
sub
inc
xor
sub
and
lock
aad
push
loop
in
dec
lcall
out
pop
or
mov
dec
stc
jb
je
jmp
inc
xchg
mov
addb
test
dec
sub
and
lcall
outsl
jg
cmp
and
insl
mov
fisubrl
sbbb
xor
popf
or
inc
shrb
in
jbe
and
push
out
sahf
lahf
dec
inc
repz
in
add
cmpb
or
mov
lret
int
add
jb
mov
dec
stc
and
pop
test
and
imul
mov
sbb
pop
lahf
hlt
test
sarb
repz
dec
in
and
sub
mov
test
xor
jb
push
js
jge
jp
fimuls
ss
and
sbb
arpl
inc
aad
cmc
jl
testl
lret
pop
jp
pop
jnp
sub
lret
test
pop
cmp
jne
aam
mov
inc
scas
inc
insl
dec
sub
lret
cmpsl
and
repnz
jnp
dec
mov
imul
scas
xor
mov
cmpsb
xchg
add
mov
popa
fcomps
jmp
dec
sub
xchg
xchg
push
subl
outsl
arpl
rcl
ror
subb
mov
in
sbb
nop
cli
gs
out
cmpb
mov
out
lret
push
adc
stos
cmp
sub
mov
scas
fsubl
dec
xor
fiaddl
pop
pop
fwait
aaa
daa
and
movsb
xchg
push
xchg
mov
push
sbb
push
xchg
pop
add
or
push
mov
mov
aas
std
xchg
mov
and
pop
inc
enter
push
pop
lods
movsl
cwtl
cmp
leave
and
jp
mov
push
pop
in
into
stos
fstpl
pop
xchg
inc
rolb
cmpsb
inc
mov
imul
lret
sbb
or
mov
sahf
add
loop
adc
sbbb
or
mov
cmp
cmpsl
pushf
xor
shl
or
mov
test
nop
negl
rol
ror
mov
xchg
push
sbb
cltd
loop
cmpsl
pop
mov
insl
mov
adc
mov
mov
xchg
outsl
add
mov
leave
fs
jne
inc
std
sbb
sbb
mov
inc
shlb
add
bound
loope
xor
or
mov
push
iret
dec
orb
imul
pop
xchg
sti
addr16
and
adc
sbb
ret
sub
lods
loop
test
ljmp
fstl
dec
jmp
sub
sbb
push
sti
pop
lock
pop
lret
ret
add
and
sub
rcr
jp
call
lods
jge
xchg
lret
push
xor
mov
je
nop
push
adc
mov
mov
xchg
xchg
shll
pop
xchg
fdivp
xlat
or
arpl
or
mov
add
and
popf
test
pop
repz
stos
add
push
dec
push
int
push
out
in
in
sub
aas
fcmovu
stos
mov
or
orb
ds
fwait
mov
mov
xchg
xor
je
jmp
lret
movd
into
jo
in
scas
and
mov
cmp
sbb
or
daa
pop
loop
sub
mov
jae
mov
lahf
aad
sub
movsb
and
xchg
push
fisttpl
data16
add
push
sbb
or
aam
inc
ds
jb
test
cmp
cmp
fsubrs
jns
xchg
inc
mov
ss
mov
push
jae
jnp
lock
adc
dec
sbb
xor
mov
cmp
dec
dec
jbe
sti
add
cli
jmp
out
fmul
jp
adc
inc
aad
sahf
out
out
cmp
jae
and
dec
mov
sub
lret
aaa
loope
mov
loop
fwait
stc
and
std
jl
jnp
fistl
gs
sub
fdiv
aam
in
dec
or
inc
scas
in
lret
pop
sbb
mov
mov
cmp
or
add
imul
add
push
mov
or
or
int
dec
or
lea
rcrb
xchg
data16
inc
cmp
testl
mov
je
inc
xchg
jg
mov
sbbb
fsts
jl
adc
mov
mov
imul
in
pop
cmp
sub
cs
jno
daa
int
lods
mov
popa
rcll
js
mov
lret
imul
sbb
jo
mov
cltd
adc
xor
in
pop
add
insl
jns
ficompl
push
mov
mov
or
leave
mov
push
mov
int
lret
aas
popf
pop
jnp
test
aad
aad
mov
adc
fdivrs
and
mov
xor
enter
mov
movsb
mov
xchg
popf
and
dec
pusha
sbb
xlat
int
fsubs
jne
adc
inc
jl
jmp
mov
std
add
mov
out
adc
add
sub
ljmp
clc
fistpl
jp
mov
xor
xlat
xchg
gs
hlt
adc
inc
in
std
inc
jne
mov
jp
stos
jns
imul
push
rcr
sub
outsl
sarl
push
cld
cld
cmpsl
or
mov
or
shlb
stos
xchg
adc
mov
pop
nop
sbb
rclb
mov
xlat
pop
enter
xchg
mov
stc
pop
je
push
sbb
or
adc
fnstsw
leave
pop
jmp
jp,pt
cmp
sbbb
inc
aas
xor
add
xor
shlb
push
xchg
out
mov
pop
idivb
mov
lods
xchg
aam
out
jl
fsts
and
cld
enter
scas
sbb
imul
in
adcl
sbb
or
jmp
xchg
loop
jns
push
xor
js
cmp
mov
loope
lock
push
push
pop
pop
std
aam
and
jg
cmc
pop
shll
and
and
scas
sbb
aam
mov
addr16
or
dec
in
js
and
ja
mov
popa
push
jb
aam
adc
pop
inc
xor
cmp
sub
and
out
scas
pop
xchg
mov
jno
outsl
out
jnp
pop
lcall
push
imul
in
mov
jmp
scas
dec
test
aas
dec
repnz
scas
pusha
fstp
add
fidivs
loope
xchg
shrl
pop
mov
xchg
pop
push
scas
or
adc
scas
data16
repnz
sahf
xchg
adc
pop
adc
pop
fisttps
int3
hlt
lcall
and
lret
jbe
sti
and
pop
sti
push
jne
jne
or
loop
popf
popf
ret
or
pop
xor
ret
fisttpll
std
jno
push
jle
movaps
jg
jno
cmp
sub
aam
ficoml
call
mov
mov
sbb
push
adc
out
push
in
inc
movsb
xchg
mov
fcmovbe
repnz
cltd
add
rcrb
mov
lods
inc
mov
jmp
fxtract
pop
mov
push
imul
pop
or
add
adc
or
je
rcr
jg
inc
pop
sub
je
pusha
or
jne
lods
mov
lods
add
movsb
xchg
xchg
sbb
or
lods
push
or
mov
shll
popf
xchg
adc
mov
mov
into
inc
push
fldcw
popa
aas
sub
adc
jo
shrl
push
shl
lds
js
repz
add
cmp
mov
cmpl
xchg
sbb
imul
rcrb
ret
pop
outsl
sbb
sbb
out
repz
hlt
and
cmpsb
push
call
mov
je,pt
aas
xchg
cmp
data16
jns
scas
imul
std
dec
jno
push
jl
movsb
xchg
sub
pop
test
rcrb
fnstsw
add
mov
andl
dec
adc
cmp
mov
shlb
or
lcall
xchg
sub
repnz
gs
arpl
push
lret
pushf
punpckhdq
out
repz
sub
pop
sbb
fnstenv
aad
push
aad
test
outsl
insl
aaa
jecxz
cmp
mov
push
sub
xlat
int
out
sbb
xchg
inc
cmp
ret
mov
ljmp
jb
aas
outsb
test
push
mov
scas
cmp
and
jmp
pusha
and
mov
int
xchg
dec
clc
sahf
or
push
pop
push
cmp
pop
push
add
aad
daa
add
adc
ljmp
pand
and
fists
stos
rorb
or
push
pop
and
jmp
mov
xor
hlt
in
cltd
mov
inc
sbb
mov
jp
mov
dec
pop
xchg
push
sarw
add
loope
leave
int3
mov
daa
fistps
loop
in
jne
xor
lss
or
add
sbb
lods
div
jae
add
pop
mov
loope
inc
mov
inc
iret
sbb
pop
bnd
sub
fisttpll
nop
or
mov
or
or
cwtl
mov
cmp
inc
add
jne
pop
mov
inc
je
mov
int3
xchg
xchg
mov
inc
xchg
push
cmpsl
les
and
cmp
push
test
sub
add
test
or
push
roll
clc
sub
or
das
cmp
dec
push
aaa
cmp
add
aad
outsb
and
pop
mov
xor
std
xchg
notb
jbe
ret
sarb
xor
mov
fdivs
fs
lods
fisttpl
mov
enter
popf
push
push
test
popa
push
aam
cltd
sbb
into
mov
lret
xor
xlat
jae
mov
xchg
in
jle
stc
test
push
cmp
aas
sub
mov
enter
es
adc
out
xchg
mov
dec
cmp
testb
dec
push
inc
test
or
scas
fisttpl
gs
fucomp
sub
fcmovne
jecxz
dec
out
scas
pop
push
pop
in
jmp
adc
jne
in
or
idivb
pop
mov
pop
out
adc
cmp
lret
inc
cwtl
inc
mov
push
jge
adc
test
in
outsl
mov
outsb
imul
orl
mov
or
jnp
rcl
jmp
int
mov
mov
repz
cwtl
call
jns
sbbb
pop
lret
jbe
push
repz
pop
pop
repnz
out
adc
push
mov
cmp
xchg
mov
fsub
les
movsl
inc
in
or
or
and
xor
push
jg
lods
and
pop
fwait
popf
xor
insl
aas
or
das
cmp
cwtl
pop
insb
das
fdiv
cmp
frstor
jno
sbb
pushf
je
push
mov
adc
jnp
test
dec
mov
sub
int
jo
shrl
jge
push
les
cmpsb
inc
add
adc
jecxz
je
aaa
fsubl
bound
frstor
in
add
insb
jg
movsl
mov
enter
frstor
push
enter
mov
in
xor
stos
iret
xchg
std
push
packssdw
pop
shlb
and
push
dec
shll
xchg
or
dec
loop
in
sub
jns
mov
mov
push
scas
lock
mov
inc
fstps
push
movsl
mov
mov
pop
fwait
inc
jge
or
mov
lods
add
mov
mov
pop
cltd
int
or
popf
out
aas
lcall
stos
push
adc
enter
mov
in
push
pop
arpl
mov
cmpsl
jb
outsl
popf
arpl
adc
mov
inc
push
shll
pop
sbb
pop
sar
movl
enter
ds
adc
dec
idiv
push
jge
mov
sub
and
adc
stc
fists
sbb
inc
sbb
xchg
jp
inc
rcl
jl
in
inc
mov
lcall
cwtl
test
jg
dec
fucomi
push
out
mov
fwait
rcl
cmpsb
hlt
dec
pop
nop
pop
sbb
test
or
mov
ficomps
sub
pop
popf
les
jb
dec
jnp
adc
jno
mul
dec
pushl
push
xor
faddp
push
mov
int3
daa
cmpsl
push
jmp
arpl
dec
and
mov
into
mov
pop
push
push
stos
jl
bound
pop
cmpsb
mov
es
outsl
sbb
movsl
and
xchg
or
lahf
in
mov
hlt
sub
mov
adc
inc
adc
insl
enter
iret
aad
push
in
inc
popf
aaa
in
mov
int
adc
jp
xchg
xchg
lret
outsl
shrl
data16
mov
ja
lea
xor
or
mov
fcmovnb
aad
data16
dec
fstl
lcall
adc
movl
pop
and
and
sti
arpl
adc
xor
fnstsw
in
jmp
or
scas
test
xor
cmp
icebp
fstl
in
xor
adc
fadds
insb
cmpsb
push
mov
test
mov
jb
movsl
adc
test
sub
sbb
jo
test
loopne
pushf
mov
imul
aad
xchg
test
in
and
imulb
or
sti
adc
xchg
mov
jae
pop
xchg
sbb
add
mov
pop
xor
test
insl
mov
jmp
loope
dec
cwtl
repz
clc
cmp
mov
aad
pop
cmp
testb
fdiv
in
mov
xchg
mov
pushf
imul
jmp
sub
mov
enter
das
out
and
int3
xchg
jnp
pushf
xlat
into
jns
fidivrs
mov
clc
dec
aaa
mov
inc
xchg
cmc
pop
xchg
inc
push
lds
mov
dec
loope
cmpsb
fidivl
loop
jecxz
mov
pop
inc
sahf
pushf
sbb
adc
dec
jge
xchg
mov
sbb
jae
sub
pusha
idivl
mov
mov
test
dec
imul
and
sbb
cmp
pop
adc
rcrl
pop
scas
push
add
cmp
inc
insl
sub
xchg
push
hlt
subb
cmp
or
in
or
aas
xchg
es
pop
jns
mov
dec
scas
ror
stc
or
into
xorl
pop
sbb
cmp
stos
xor
mov
mov
sbb
push
je
push
sbb
stc
xchg
mov
dec
aas
ret
jg
clc
push
add
xchg
ficomps
or
loopne
and
cld
jp
lcall
jae
int
test
mov
push
xchg
out
fisttpl
push
dec
push
add
inc
mov
stc
xchg
out
xor
fdivrs
xchg
lods
inc
cmp
subl
push
icebp
out
inc
push
xchg
cmp
in
push
xchg
cmpb
out
pop
scas
call
inc
push
pop
movsb
fidivrs
cmc
outsb
in
jae
loopne
es
ret
cltd
or
pop
mov
aaa
dec
shlb
mov
shl
test
in
divl
mov
xlat
mov
pop
test
jp
fdivrs
xlat
popw
and
lods
popa
fwait
into
arpl
insb
dec
outsl
stos
dec
ret
jae
inc
inc
sbb
pop
jp
and
iret
lock
dec
jmp
push
test
movsl
lods
ljmp
insl
and
fs
incb
in
push
add
jae
inc
xchg
mov
adc
push
mov
jg
negb
mov
in
or
lea
sbb
xchg
fcompl
outsl
pop
pop
and
xchg
jnp
xor
adc
mov
inc
mov
popl
shrb
lret
cmp
jnp
add
ret
xlat
aad
popf
gs
xor
mov
adc
insb
dec
ja
mov
movsl
sbb
lock
pop
add
jns
insl
call
mov
sbb
in
loop
sub
cld
sbbb
cmp
pusha
or
xor
fcomi
clc
fildl
xchg
add
push
jle
add
cmc
movsl
lcall
mov
mov
sub
dec
cwtl
or
testb
xor
or
push
fsubp
imul
jecxz
dec
loopne
leave
rcrb
lods
xor
test
xor
mov
push
movsl
and
xchg
fdivp
inc
in
push
cmp
jl
pop
out
pop
dec
adc
jno
pop
pop
and
pusha
sub
cwtl
inc
mov
test
sti
add
dec
dec
dec
js
jmp
ret
dec
in
les
pop
mov
mov
in
pop
dec
adc
shlb
sub
cmp
lretw
in
je
adc
cmpsb
xchg
aam
adc
jge
shlb
cmpsb
ljmp
inc
mov
pusha
sub
dec
pop
pop
dec
loopne
insb
pusha
add
mov
punpckldq
pop
sub
or
pop
sbbb
or
rcrl
and
cmp
cmp
pop
insb
fisubl
fdivrs
xchg
nop
xor
inc
cmp
sub
popf
int3
lea
test
pop
cwtl
testb
jns
mov
jecxz
and
adcb
push
les
jg
mov
dec
mov
adc
aam
outsl
stos
out
add
outsl
pop
dec
cmc
ja
lcall
pop
scas
xor
test
and
nop
fisubrl
dec
les
pop
fimuls
idivb
cmp
loopne
les
or
push
xor
jecxz
in
xor
sub
cwtl
mov
jge
std
xchg
add
xor
nop
or
ds
or
mov
pushf
test
pop
mov
fimuls
lret
push
int3
adc
out
int3
cmpsl
push
mov
repz
fdivl
xchg
stc
aad
mov
stc
shrb
out
adc
stos
dec
cld
ljmp
adc
inc
pop
xchg
fisttps
mov
jbe
imul
mov
mov
inc
repz
xchg
roll
or
fwait
xchg
mov
mov
push
add
sahf
dec
xlat
xor
or
fcmovbe
adc
pop
lds
push
cmp
add
adc
and
add
scas
pop
push
test
lret
xor
mov
lods
push
adc
inc
mov
out
rcr
mov
enter
lock
cmc
or
or
xorb
pop
or
xchg
xor
push
mov
inc
dec
fs
cwtl
sub
rcrl
cmc
test
in
pop
mov
test
int3
and
fprem1
fstpt
mov
stos
test
imul
lcall
in
push
xchg
lea
pusha
shrl
pop
or
xor
sbb
fnstenv
in
cmp
dec
sub
insl
dec
insl
mov
push
push
pop
dec
xor
mov
pop
push
lods
call
jns
or
pop
jecxz
xchg
enter
test
out
int
in
lock
and
sbb
pop
xchg
sub
lret
mov
cmp
ret
push
push
arpl
jo
das
testl
je
mov
ds
xlat
mov
and
push
push
mov
jne
je
or
mov
dec
clc
jns
in
push
inc
sub
rclb
shlb
and
xor
cmpsb
bswap
popa
push
in
fstpl
scas
mov
pop
repz
cmp
cltd
sbb
lret
jl
nop
xchg
lcall
add
mov
test
inc
cmpsl
mov
aaa
fldt
sbb
movsl
rcr
dec
cmp
pusha
loop
into
test
pop
mov
jecxz
adc
test
lds
popa
add
rcl
pop
pop
lahf
xchg
adc
lret
jno
adc
lea
jnp
aas
aas
cs
pop
sti
dec
sub
mov
ret
push
dec
dec
and
fcmovnbe
xor
ret
pushf
cmp
mov
add
cmp
cltd
pop
ljmp
sub
int3
cmp
pop
xchg
xchg
nop
or
and
and
lock
rolb
pop
push
or
mov
dec
xor
pop
adc
or
push
push
push
test
bound
add
cli
pop
xor
loop
adc
pop
xor
scas
repz
mov
mov
dec
aam
push
iret
cli
ljmp
inc
jmp
jl
jg
ror
js
outsl
jb
push
das
in
mov
jecxz
pop
and
add
lods
js
xchg
jnp
inc
or
es
jno
adc
pop
inc
divb
sti
pop
dec
mov
ret
outsl
or
jmp
cmp
fists
lods
or
scas
mov
pop
mov
popa
xor
cltd
ret
and
mov
addr16
pop
and
mov
xor
std
in
adc
cmp
xor
outsb
ficoms
jle
add
push
andb
popf
fs
imul
test
lods
imul
scas
nop
stos
mov
clc
call
cld
insb
or
pusha
aam
pop
cmp
fs
inc
inc
test
ret
mov
call
repz
test
inc
flds
mov
subb
dec
mov
mov
aam
or
call
in
dec
push
sti
out
nop
xchg
inc
dec
jae
pop
add
fldenv
arpl
push
repnz
dec
xor
push
dec
les
shrl
inc
dec
push
or
and
sahf
fcoml
cmp
inc
mov
add
lret
mov
pop
jge
cld
push
nop
dec
addr16
push
shll
and
mov
push
in
lcall
mov
inc
jnp
es
stc
idivl
pop
mov
es
add
mov
xor
dec
xor
mov
fmull
ss
stc
sub
mov
clc
cli
and
mov
mov
xor
outsl
cs
xor
frstor
out
jns
cmpsl
dec
push
aad
aaa
repnz
out
ss
test
stos
mov
xchg
loope
and
push
aas
pop
add
into
and
and
lret
dec
and
push
cmp
iret
add
addr16
inc
cltd
icebp
inc
mov
nop
mov
inc
shr
sbb
blcmsk
adc
xchg
stos
rol
popf
cmp
sbb
incl
pop
lea
inc
inc
rcl
test
cmp
mov
roll
icebp
lea
nop
jb
mov
mov
daa
pop
adc
or
and
inc
push
imul
scas
mov
sub
and
and
mov
in
mov
xchg
movsl
add
mov
cmp
cmp
sub
mov
cli
and
dec
xchg
add
inc
sub
rcll
inc
push
and
rcr
mov
pop
aaa
inc
fidivrs
loop
dec
add
sub
cltd
int3
je
push
fimuls
pop
dec
xor
adc
cmp
sbb
xchg
mov
xchg
adc
sub
not
loopne
push
mov
jp
xchg
leave
imulb
mov
or
dec
adc
mov
sbbl
cli
cmpsl
rcl
scas
push
cmp
xor
xor
cmp
push
lahf
push
loopne
iret
pop
or
out
dec
fisubrs
dec
mov
xchg
xchg
jbe
or
push
cmpsl
and
fcompl
pop
clc
dec
xchg
jb
push
aam
fs
jo
ret
pop
rcrb
xor
enter
sub
inc
ljmp
push
sbb
frstor
std
mov
jge
xchg
lcall
scas
mov
push
pop
cmpsl
xor
out
pop
mov
mov
inc
push
add
lods
dec
push
in
adc
add
cmpb
je
js
out
fstl
les
sub
daa
lret
rcl
xchg
cmp
ss
and
aas
lods
cmpsl
inc
mov
int3
push
push
jb
or
adcb
mov
dec
push
lea
pop
in
xor
sbb
lods
mov
jp
xchg
jg
fnstenv
sbb
cmp
and
cmpl
pop
into
pop
js
adc
jbe
scas
aas
add
cmp
pop
mov
hlt
cmp
arpl
push
test
sub
mov
sbb
mov
enter
cmp
jge
jae
mov
jb
fdivrl
mov
gs
mov
sbb
inc
mov
xchg
call
mov
ror
push
sti
loop
lcall
jne
ficompl
cltd
mov
jecxz
std
pop
adc
insl
jecxz
fwait
ljmp
adc
dec
cli
out
push
adc
mull
or
and
adc
add
outsb
repnz
push
ret
pop
xchg
cmp
xchg
adc
decl
sti
fs
fadds
ds
ds
pop
sub
adc
inc
jg
insb
push
pop
push
sbb
adc
loop
xchg
insl
sub
xlat
push
lds
mov
pop
ljmp
mov
lret
in
fsubrs
xchg
lret
xor
mov
cmc
fisubrs
int3
ret
add
sbb
inc
jb
xor
cs
dec
sarb
push
outsb
or
cmp
stos
jle
outsb
fwait
mov
dec
add
push
sbb
cmpsl
or
lock
jmp
mov
xchg
adc
adc
push
pushf
sahf
add
xor
sti
adc
jmp
push
shll
mov
les
mov
dec
cmpsl
add
out
xchg
mov
push
or
hlt
xchg
lock
mov
sub
sbb
sbb
and
mov
fnstsw
insb
mov
add
orb
jo
cmp
add
aaa
push
repz
and
inc
daa
xor
shlb
mov
mov
xchg
ss
aas
mov
push
stc
aas
inc
mov
ja
popf
imul
inc
mov
cld
sbb
or
mov
arpl
pop
xchg
cltd
mov
inc
jl
jne
cmp
out
mov
pusha
and
sbb
push
insb
sbb
outsb
push
cltd
popa
cmpsl
ds
jl
and
test
adc
andl
push
push
out
pop
sbb
aam
aaa
add
mov
and
out
dec
imul
or
mov
lret
add
cmp
aaa
xor
clc
mov
imul
loope
sbb
fstpl
cs
repz
mov
pushf
addb
and
test
mov
jp
mov
insl
xor
xchg
inc
sbb
add
push
iret
and
push
dec
and
mov
mov
cmp
in
jbe
daa
jp
xor
jb
xorb
lods
test
nop
test
jp
sub
popf
mov
mov
mov
aaa
jnp
fsubs
pop
aas
jne
mov
inc
jp
push
push
ja
inc
sbb
jge
push
adc
inc
sahf
sti
sub
inc
add
aaa
int3
dec
cmovns
add
push
daa
adc
sarl
cmpl
sbb
adc
in
mov
subl
and
inc
dec
mov
or
xchg
test
pop
fnsave
cmp
icebp
ljmp
ljmp
mov
mov
rolb
and
push
jnp
int
mov
jge
push
pop
rolb
into
into
xor
jl
adc
sub
inc
push
iret
inc
nop
mov
sub
enter
lret
pop
in
inc
and
jo
dec
addr16
cmc
mov
xorb
and
loop
jno
sub
rorl
aas
xor
push
adc
neg
xor
adc
addr16
mov
cltd
sub
lock
add
add
aad
cmpb
pop
addr16
pop
push
xor
xchg
sbb
mov
movb
jmp
add
out
mov
orb
adc
sbb
jne
stos
pop
push
aad
les
test
xchg
hlt
nop
call
add
in
int3
pushf
and
adc
lret
mov
add
fsubs
mov
ljmp
mov
add
rorl
sub
sbb
mov
cmpb
add
xchg
mov
push
push
test
dec
in
cmp
dec
clc
repnz
mov
push
jo
lret
enter
jge
enter
cmp
and
push
mov
arpl
fcmovne
cs
mov
push
adc
hlt
pop
sar
leave
xchg
addr16
lea
stc
xchg
je
jae
test
inc
das
mov
lret
jb
sbb
pop
xchg
mov
push
pop
jno
push
hlt
fimull
insl
add
push
ljmp
leave
mov
pop
xchg
in
movsl
leave
xchg
fistps
or
mulps
cmpsl
jb
shrl
insl
movq
fdivrs
mov
dec
notl
repz
and
xchg
mov
jo
push
sarb
adc
repz
in
popa
mov
adc
add
mov
fs
add
mov
xor
mov
add
pop
dec
mov
fdivrl
mov
push
rorl
jle
mov
xor
popa
pop
imul
and
repz
sub
lods
lcall
jbe
xchg
loop
lds
cmp
xor
inc
sti
push
push
aad
and
push
xchg
add
int
jne,pn
inc
inc
fidivs
jb
mov
push
cmpsb
andb
imul
out
jnp
sbb
sti
push
das
sbb
orb
pcmpeqw
xor
sub
mov
loopne
lea
jmp
pop
or
and
pop
cmp
popa
scas
mov
loope
pop
sub
fstpl
cmpsb
repz
push
or
sbb
cmp
or
jb
out
add
sbb
cmp
pop
xor
jl
data16
aam
dec
mov
out
sahf
ja
inc
xor
test
mov
call
mov
fldcw
lahf
pop
pop
dec
ds
cli
ds
pop
cmp
fdivl
push
xor
pusha
mov
cs
mov
ds
ret
lock
jae
fndisi(8087
scas
fldt
lret
fcomps
inc
push
adc
adc
nop
adc
push
enter
xchg
add
jbe
dec
mov
stc
xchg
test
aad
pop
adc
lret
in
js
in
jp
sbb
in
dec
or
lea
xor
lods
test
xchg
xchg
popf
fidivrs
jb
pop
insb
imul
mov
xor
int3
ret
jg
push
jb
jmp
sbbl
cmp
jl
jno
outsl
sub
cmp
mov
std
divb
push
and
pusha
and
cmp
daa
je
xor
mov
sahf
sar
fnstcw
sub
inc
rol
pop
dec
in
push
and
dec
mov
nop
andb
add
lahf
cmpsb
shlb
es
inc
lods
lea
push
test
mov
mov
inc
xor
mov
dec
outsl
inc
or
ja
lods
dec
xor
sbb
sti
lods
xchg
outsb
lea
cmpsl
in
loop
ret
cmpsb
jmp
jno
push
pop
mov
repnz
pop
xor
inc
xor
adc
fnstenv
jns
mov
ret
sbbl
addl
rcl
adc
cs
sub
je
mov
push
in
sub
pop
fldcw
mov
sbb
sub
inc
test
shlb
push
clc
into
push
lret
mov
fld
jecxz
mov
outsl
dec
push
and
xchg
adc
lea
test
add
scas
push
mov
sbb
pop
push
push
xor
sub
sbb
dec
add
test
std
inc
dec
inc
fcoms
sub
out
dec
roll
jns
stos
cld
cmp
loop
xor
jmp
imul
push
imul
out
hlt
mov
mov
scas
out
cmovnp
xchg
outsl
or
and
mov
push
test
decl
ret
in
popa
idiv
icebp
fistl
mov
dec
mov
das
mov
cld
mov
adc
clc
imulb
loope
dec
and
mov
push
repz
leave
add
mov
inc
mov
test
je
cmp
icebp
scas
add
push
inc
ret
xor
cmp
fmuls
or
xor
bound
jno
or
sbb
cmp
inc
add
lds
inc
cwtl
in
iret
xchg
jnp
add
clc
inc
or
mov
out
xchg
loopne
xor
popa
jp
mov
mov
push
or
adc
xchg
xor
dec
push
xlat
loopne
mov
adc
push
mov
fisttps
xor
dec
iret
sahf
jecxz
dec
mov
iret
jmp
dec
repz
mov
std
lods
mov
xor
fcmovbe
mov
pop
mov
sub
pop
cli
or
mov
xor
push
inc
dec
clc
subl
andl
les
mov
xorl
mov
ss
mov
and
jge
adc
stos
cmp
xchg
pop
sbb
mov
push
xlat
push
outsl
es
push
mov
orb
pop
pop
xchg
gs
add
movsl
cmp
das
jnp
gs
pop
pop
mov
xchg
sub
jge
aas
xchg
ficompl
pop
xchg
ds
sbb
pop
xor
mov
popf
int3
adc
sbb
add
mov
jmp
hlt
push
push
pop
jo
fidivrl
icebp
shl
push
orb
dec
fsubrl
in
hlt
inc
pop
jbe
add
fcoms
add
add
inc
xchg
lahf
sbb
xchg
pushl
lods
fistps
shrl
jecxz
push
out
into
mov
inc
mov
popl
sub
xchg
fs
inc
mov
les
aad
imul
add
jg
sarb
pop
aam
fwait
mov
xor
out
divw
pop
imull
shr
sub
dec
dec
mov
push
pop
push
call
repz
sbb
cmp
test
push
mov
sub
bswap
jp
and
mov
adc
cmpsb
ljmp
jae
lcall
clc
add
mov
xor
hlt
fadds
xor
adc
call
mov
cmpsb
mov
add
jmp
mov
sbb
inc
imul
scas
insl
push
roll
ss
in
js
mov
push
dec
scas
in
dec
inc
or
add
xor
movsl
and
sub
and
jl
addr16
push
test
jbe
xor
mov
push
popf
xlat
out
sub
dec
loopne
cmc
orb
orl
mov
pop
push
push
xor
jecxz
push
imull
and
shrb
xchg
sub
ficomps
jmp
cmp
jbe
lret
test
test
in
data16
test
push
cmp
daa
xchg
dec
mulb
push
lds
cmp
and
ss
adc
add
fcomps
insb
outsl
sub
jo
sub
cld
or
lret
cmp
sbb
pop
sbb
das
test
fdivl
mov
add
mov
jbe
sub
flds
xchg
loope
mov
cmp
movsb
push
flds
nop
jbe
cs
and
hlt
idivb
pop
sbb
inc
jbe
sahf
dec
fwait
and
adc
mov
movsl
xchg
pop
fisubs
fdivrs
out
mov
pop
jg
sbb
scas
mov
sub
push
popf
push
pop
mov
nop
fld
adc
ret
int
jbe
sbb
inc
in
mov
cmpl
jns
mov
inc
int
mov
dec
out
pop
ja
mov
jns
or
std
cmpl
negb
xchg
pop
push
mov
xor
loope
subb
mov
lods
fisttpll
push
xor
fwait
jp
sub
mov
das
out
or
cwtl
cmp
inc
pop
sbb
and
sahf
rcrb
mov
adc
out
mov
cmpsb
scas
es
aaa
or
nop
or
inc
pop
or
dec
ds
mov
loope
decb
dec
out
jl
pop
fldenv
popf
jmp
pop
jp
sub
inc
push
pop
insb
in
mov
arpl
and
xor
insl
or
sub
es
fcompl
movsb
lret
cltd
mov
add
sub
add
cmp
js
cmp
push
stos
imul
add
lcall
mov
jb
jge
inc
mov
fdivl
cmp
xor
sbb
ss
pop
stos
fimuls
sub
and
leave
aaa
pop
test
pop
adc
cmp
mov
dec
add
outsl
pop
les
cli
push
jecxz
pushf
les
enter
in
jo
jg
out
mov
mov
sbb
mov
inc
out
xor
adc
jb
xchg
mov
push
out
sbb
in
pop
aad
mov
mov
add
xchg
push
dec
aaa
mov
mov
out
xor
mov
hlt
scas
push
cli
sbb
jmp
add
ret
xor
in
push
je
call
jne
adc
lret
sbb
mov
iret
lock
ljmp
push
cvttps2pi
into
loop
test
out
sbbb
insl
call
out
mov
movsb
ss
mov
xor
jne
inc
rol
jno
xchg
emms
mov
aas
out
xchg
in
rorl
test
adc
test
jae
jge
lock
mov
mov
inc
test
dec
popa
inc
xchg
cmp
xchg
adc
fs
pop
pop
xorb
clc
add
inc
lret
sub
sbb
mov
cld
inc
or
in
leave
aas
rclb
enter
imul
push
dec
scas
bound
lods
push
mov
sti
scas
add
inc
mov
adc
sub
sbb
xchg
in
ret
push
bnd
js
add
mov
test
sbb
mov
inc
xor
lds
adc
push
mov
std
jns
lock
movsb
push
fidivs
lods
std
cli
cmp
mov
inc
sub
mov
addr16
mov
bnd
stc
fildl
adc
loopne
sub
pop
lea
adc
inc
mov
jl
jmp
fdivrl
inc
sub
dec
inc
add
dec
addr16
lret
iret
push
icebp
test
mov
push
and
push
jb
sub
inc
jae
loop
cmpsl
fsubl
hlt
cmp
pop
nop
loope
ret
aad
popf
fdivrp
lret
and
and
adc
test
xor
sub
add
jl
fs
inc
es
icebp
in
fiaddl
test
pusha
stc
or
sbb
dec
pop
stos
repnz
idiv
aaa
push
and
mov
int
xor
fidivrl
int
adc
sub
stos
inc
pop
test
insb
adc
sahf
xlat
jo
out
push
outsl
mov
enter
mov
sbb
jns
jnp
jmp
cmp
pop
mov
test
cld
inc
sbb
fpatan
testb
xor
push
out
sarl
arpl
jne
pop
xchg
xchg
test
test
pop
mov
xor
fwait
push
pop
lahf
push
sub
lret
add
mov
jecxz
shrl
test
mov
or
pushw
mov
enter
jp
xor
imul
in
jb
sub
pop
cmp
dec
je
popa
lcall
adc
std
fisubrl
rcr
jle
add
cmp
sub
stc
sbb
sbb
pop
repnz
call
mov
push
and
push
inc
mov
or
flds
xchg
std
push
mov
lcall
mov
dec
in
ret
insb
jle
nop
sbbb
mov
dec
call
adc
push
add
jae
or
xor
movsl
loopne
push
cmpsl
int3
cwtl
stc
jg
aaa
test
std
adc
aad
or
outsb
jl
adc
and
shl
add
jg
or
cbtw
xor
dec
lock
jns
or
sbb
jne
jmp
jnp
lcall
subl
int
mov
xchg
les
cmp
cli
mov
mov
xor
fimuls
sbb
ljmp
cmpl
jg
mov
shll
addl
movsl
repz
ds
dec
sub
cld
adc
fwait
mov
sub
mov
cmp
and
inc
std
pop
pop
in
outsl
stc
int
cmpsb
push
out
or
xor
in
xchg
out
xor
add
outsl
fs
xchg
cmp
mov
cld
outsb
cs
es
sbb
jmp
add
in
gs
push
push
mov
adc
push
je
lods
cltd
xchg
mov
bound
and
adc
add
mov
les
ret
push
rcl
cld
sahf
into
mov
test
inc
or
mov
mov
add
divb
nop
lahf
ljmp
cmpsl
movsl
jbe
push
popa
std
mov
xlat
shrl
add
cmp
cmc
sub
pop
mov
push
sbb
inc
cmp
inc
dec
test
and
xchg
ror
jl
test
aad
sahf
mov
sbb
mov
movsb
sbb
popf
std
sbbb
dec
roll
scas
mov
inc
or
jbe
enter
das
bound
dec
pop
sbb
cmp
and
adc
fisubrs
cli
mov
lret
outsb
pop
and
sub
cltd
mov
xlat
fcomi
push
mov
bnd
popa
pop
lcall
lea
dec
jbe
inc
lahf
xchg
sub
cmp
mov
dec
jno
xor
iret
jo
ficompl
xchg
test
mov
inc
popf
stos
insl
adc
lret
jae
lock
scas
jns
fstl
push
testb
inc
das
mov
xchg
inc
in
scas
dec
sbb
lock
or
dec
mov
dec
and
xlat
and
sbb
pop
add
arpl
popf
fiadds
addr16
dec
add
mov
lcall
aas
adc
adc
test
mov
cwtl
gs
xchg
sbb
sbb
dec
leave
std
cmp
or
mov
and
or
aaa
in
xor
pop
xchg
or
xor
addb
nop
push
inc
jbe
inc
mov
int
add
pop
sub
popf
arpl
je
subb
adc
cltd
sub
test
adc
fdivrl
lods
xor
aaa
stc
andb
hlt
shrb
sub
lock
jb
or
shrl
cmp
mov
mov
mov
mov
dec
adc
sub
xorb
popa
or
xchg
popa
dec
or
sbb
in
dec
add
sub
outsl
ret
and
cmp
out
or
fldt
sub
int
mov
fldt
xchg
insl
dec
jle
inc
xor
xor
dec
xor
cltd
cld
inc
outsl
cmpsb
ss
sbb
aaa
ja
fmull
sbb
fimuls
in
popa
cmp
jp
add
popf
sti
mov
leave
insl
xchg
mov
iret
adc
xchg
incb
sbb
imulb
dec
xor
lret
imul
repnz
xor
test
fwait
mov
fs
cmp
shlb
jmp
jns
adc
shl
push
mov
jl
ljmp
add
jl
sbb
sbb
dec
ja
std
sbb
and
inc
and
xchg
add
push
mov
aaa
mov
sub
push
jmp
jbe
cmc
int3
aad
lea
ljmp
push
mov
std
ss
subb
sbb
inc
sub
fldln2
sar
and
mov
pop
in
adc
mov
push
xchg
test
sub
inc
aaa
sarl
testl
jg
push
ljmp
xor
ss
and
inc
and
lcall
inc
mov
lret
inc
sbb
rcl
lds
cmp
dec
adcb
mov
popa
pop
cli
js
xchg
cmc
sbb
sbb
mov
daa
adc
arpl
mov
push
xchg
jb
cmp
pop
sahf
adc
inc
push
in
pop
sti
cmp
sub
inc
mov
or
xor
aam
aas
sbb
imul
int3
jae
cltd
inc
mov
sbb
daa
mov
xor
iret
or
dec
loop
lock
jbe
jle
les
out
in
cmp
jge
pop
js
pop
mov
push
cmp
mov
sbb
sub
inc
iret
xorl
mov
add
dec
shrl
jbe
sbbb
leave
dec
xchg
fwait
lods
sahf
sbb
stos
addb
rcll
ret
cmp
lods
adc
sub
cmp
scas
sub
out
lret
testl
jg
lret
adc
mov
add
cld
cltd
insl
pop
nop
jge
push
fsubs
or
fisttpl
into
dec
cmp
jp
or
pop
orb
sub
js
lods
xchg
les
shll
pop
push
fidivrl
sbbl
jnp
ljmp
jle
mov
mov
add
ror
lods
popf
sbb
and
movsl
fmull
jo
add
lcall
test
jae
bound
mov
pop
shll
lods
pop
ds
dec
and
nop
pop
movsl
test
xchg
bound
adc
or
mov
jae
xchg
js
les
sub
popa
push
out
adc
dec
inc
pop
adc
lds
insl
rolb
aad
add
notl
cs
cltd
sar
std
jno
ljmp
int3
or
mov
jmp
out
xor
xor
orl
dec
movsl
push
xchg
icebp
int3
mov
push
jp
xchg
sub
scas
ret
adcb
enter
mov
inc
into
dec
inc
inc
cltd
pop
addr16
sub
js,pt
ja
jecxz
jl
or
cs
iret
pop
add
push
jne
in
aaa
lcall
push
addr16
xchg
mov
rcr
mov
outsb
shl
pop
xchg
clc
fwait
call
pop
mov
pop
or
jno
sti
dec
loop
add
push
imul
sarb
pop
mov
fcoms
imul
xchg
test
push
loopne
repnz
and
test
xchg
inc
push
mov
and
sbb
add
mov
daa
sti
data16
push
hlt
mov
push
xchg
inc
mov
popf
mov
and
pop
sub
dec
jnp
dec
sahf
cmp
cmp
lods
pop
xchg
imul
mov
lea
gs
ds
adc
scas
aam
inc
inc
jg
mov
mov
push
pop
test
adcb
dec
push
enter
popa
fwait
mov
fcmovu
push
scas
in
js
mov
hlt
mov
jge
faddp
inc
scas
repz
dec
clc
std
outsl
fistpl
xor
mov
scas
test
mov
or
and
mov
push
mov
out
std
lret
in
loopne
lods
into
ljmp
inc
fs
xchg
or
pop
xchg
add
call
pop
xchg
test
jb
sbb
sub
outsb
mov
adc
push
repnz
pop
enter
int
lock
ret
lds
into
xchg
in
mov
and
pop
xor
dec
mov
out
cmc
sub
add
int
jge
jno
push
sarb
ret
fimuls
fmuls
mov
pushf
push
push
inc
fstl
jne
stos
jb
jp
hlt
push
inc
sahf
cmpsl
jo
xchg
iret
mov
adc
cld
aam
inc
fcomps
arpl
scas
call
and
fidivs
in
arpl
adc
or
cmpsl
out
dec
xchg
push
insb
imul
clc
out
push
jbe
dec
int3
pop
stos
incb
xchg
stos
js
jbe
lods
mov
lcall
fwait
or
out
aam
test
jle
sbb
cwtl
push
inc
add
ja
and
mov
inc
jmp
pusha
jno
lret
mov
jno
or
arpl
mov
in
lods
sbb
mov
loop
inc
dec
mov
sarl
or
xlat
mov
jns
out
out
sbb
ret
jmp
cmp
dec
jb
cwtd
ret
and
xor
insb
cmp
dec
outsl
mov
movsl
or
leave
sub
mov
mov
leave
jns
scas
mov
ljmp
xchg
add
mov
push
imul
or
enter
mov
ja
sbb
fwait
push
push
jg
ds
iret
inc
pop
xlat
push
mov
xchg
mov
jmp
out
jno
cmpsl
loope
push
cmpsl
rolb
pop
xor
push
mov
push
bound
xor
jmp
scas
lods
mov
push
fnstcw
imul
cli
fisttpl
imul
mov
push
fsubrs
mov
clc
addb
or
jno
jae
faddl
mov
adc
dec
out
inc
int
xchg
stos
into
loope
sub
outsl
adcb
jo
movsl
mov
ficoms
lea
mov
and
rclb
mov
sub
daa
loopne
push
test
inc
pop
es
out
sub
xor
jbe
cmpsl
pusha
nop
push
jae
pop
mov
xor
push
fidivl
jg
cmp
clc
mov
lahf
enter
dec
mov
scas
add
fs
bound
popa
fsubrs
cmc
sahf
add
xchg
sub
and
pop
loopne
js
test
stos
add
sub
ficomps
sub
movsb
add
mov
pop
ficoms
inc
loopne
orb
lods
adc
negb
pop
test
das
and
mov
mov
cltd
xor
fsubs
fisubs
test
push
jge
rorb
sbb
or
loope
insl
rclb
jne
jmp
loop
cwtl
push
inc
dec
inc
outsb
leave
imul
mov
mov
push
pop
hlt
ror
push
dec
jecxz
xor
mov
cmova
rcll
les
jne
ss
push
subb
fs
pop
inc
push
shll
in
out
loop
loop
push
int
or
pop
aad
pop
sub
fidivrl
and
in
mov
mov
mov
dec
stos
je
inc
adc
push
sub
cmp
xorb
stos
sbb
add
xor
nop
mov
push
mov
and
pop
lds
aad
fidivl
pop
xchg
mov
xchg
sbb
jmp
out
xchg
cmpsl
iret
sbb
adc
inc
mov
in
inc
mov
inc
add
add
mov
lods
jae
rol
gs
daa
mov
xor
insl
push
arpl
hlt
movb
into
int3
inc
xchg
stos
fmuls
mov
mov
mov
xchg
icebp
sub
enter
inc
push
jmp
lcall
pop
rcrb
push
add
adc
adc
adc
movsl
jb
lahf
jne
stos
int
call
scas
mov
mov
lret
mov
cmpsb
dec
roll
es
sahf
lahf
sub
mov
inc
sbb
and
sti
movsb
scas
jb
clc
dec
test
std
lcall
pop
inc
adc
daa
sbb
enter
sbbl
stos
popf
clc
push
popa
and
ljmp
xchg
pop
add
mov
pop
lret
js
pop
jae
add
adc
pushf
aad
xor
popa
es
pop
mov
xchg
bound
mov
xor
xchg
fmul
jns
std
mov
cmp
and
mov
in
in
push
je
repz
lahf
lahf
enter
movsb
dec
and
dec
out
aaa
sbb
and
jne
xchg
sbb
enter
inc
dec
xchg
outsl
and
fisubl
cli
js
repz
add
imul
inc
scas
xchg
ja
and
adc
iret
arpl
pop
cmp
ret
xchg
cli
pushf
mov
lock
mov
inc
jb
mov
inc
shl
subl
push
pop
lret
ss
and
imul
movb
inc
sub
aaa
mov
vpaddsb
imull
iret
cmpsb
rolb
mov
subb
pop
shr
aad
cmp
fbld
push
jo
fisttps
cmp
test
push
ja
rclb
movsb
fisubs
cld
or
push
push
sub
fstps
cld
pop
cmc
mov
nop
mov
jge
mov
sbb
add
mov
outsl
mov
sub
fidivrs
pop
cmp
add
pop
mov
add
jg
jbe
inc
fdivl
dec
mov
sbb
inc
jl
lods
jp
in
mov
in
push
push
sbb
push
inc
add
jmp
or
mov
fs
imul
fs
adc
arpl
test
test
lea
and
xlat
fs
daa
bound
or
fs
outsl
hlt
dec
and
orb
pop
jo
inc
sub
loope
aad
inc
mov
loope
sbb
jns
out
cmc
call
les
lods
mov
out
mov
pop
cmpl
cmp
mov
pusha
xchg
rorb
cmc
add
pop
fld
xchg
sbb
arpl
loop
push
aaa
jg
and
sub
test
ljmp
xlat
and
sbb
jmp
push
pop
aad
mov
mov
je
test
mov
xor
mov
ret
aam
mov
add
adc
jnp
push
lods
repz
xor
sbb
out
pop
jecxz
loop
dec
repnz
push
loope
fnstenv
sub
jnp
push
fs
lcall
shl
es
sbbl
xchg
test
sti
shll
sbb
xchg
cwtl
inc
cwtl
or
daa
clc
fldl
jbe
lahf
xlat
mov
ja
jnp
sti
jle
loop
xlat
cld
jge
or
mov
jmp
add
popf
mov
mov
popa
push
pusha
mov
sub
cmp
rorl
pop
jb
ss
aam
jge,pt
out
push
icebp
cltd
mov
in
aam
dec
popa
hlt
lret
in
into
mov
mov
xor
lock
fsubp
cmp
mov
imul
add
ljmp
hlt
dec
in
or
jb
sbb
add
fldcw
dec
mov
leave
xchg
jbe
push
es
pop
sub
int
adc
inc
bound
or
mov
scas
popf
jno
imul
jl
loopne
inc
or
mov
pop
jecxz
jle
mov
add
dec
dec
ficompl
aas
mov
daa
pop
mov
jmp
xchg
lods
imul
xchg
cmpb
insb
ja
enter
adc
mov
sbb
lock
arpl
clc
add
stos
ljmp
jae
in
cmp
daa
pop
pop
mov
das
xor
inc
cli
jnp
jb
xchg
jecxz
sbb
and
fwait
fs
and
and
test
out
cltd
mov
push
idivb
sbbl
push
sub
inc
mov
std
addl
lret
sub
jecxz
adc
cmc
xchg
call
mov
adc
push
mov
divb
dec
mov
enter
xchg
jns
stc
out
es
imul
mov
adc
mov
subb
mov
dec
test
dec
test
stc
jge
fcoml
mov
jb
outsb
mov
stc
lock
out
movl
mov
sub
loop
cld
les
jmp
mov
xor
fs
pop
std
and
cld
leave
decb
pop
ret
jmp
pusha
inc
cmp
mov
fnsave
jmp
add
inc
cmp
adc
in
adc
aad
lock
rcrl
or
loopne
outsl
idivl
mov
shll
fucom
fildl
jne
add
mov
jg
dec
sub
push
xchg
outsl
jbe
mov
adc
or
jge
mov
xchg
add
in
mov
outsb
jmp
mov
inc
xchg
dec
or
pop
push
push
push
push
xor
sbb
shrl
jb
popa
cmp
aam
test
aam
in
insb
xchg
push
test
push
xchg
dec
mov
push
pop
fucom
inc
es
pop
xorl
adc
or
push
and
sbb
mov
pop
ja
or
dec
xchg
call
scas
add
ret
in
mov
cltd
test
push
pop
adc
mov
jecxz
and
mov
mov
int
dec
add
fcmovu
inc
fstps
add
adc
or
pop
xchg
or
xchg
cmp
std
sbb
in
clc
ficompl
jns
sub
cmpsl
mov
sti
pusha
lock
and
mov
push
xor
cmp
lahf
movsb
cltd
lcall
or
jbe
xor
pop
out
into
cs
mov
imul
and
jne
mov
xchg
in
dec
mov
or
jae
mov
jo
and
adc
sbb
stc
inc
rcrl
add
out
lods
mov
push
inc
inc
icebp
and
mov
aam
xchg
pusha
dec
incb
fmulp
push
jb
mov
int3
inc
imul
push
aas
push
adc
xor
fiaddl
and
aam
aad
aaa
inc
xchg
icebp
adc
sbb
test
jb
jbe
popa
outsb
js
js
mov
mov
shr
mov
cmp
lods
std
or
push
mov
or
and
adc
inc
mov
addl
addl
es
rcrl
inc
fdivp
adc
jo
pop
ja,pn
ret
in
inc
lret
jne
jo
dec
repz
mov
sub
jae
pop
push
pop
xchg
test
shll
pop
cmp
lods
dec
outsl
or
push
push
cmp
adc
das
mov
pop
inc
mov
cld
cmpsb
mov
in
mov
outsl
jecxz
sbbb
les
adc
insb
test
int3
loop
xchg
dec
mov
mov
xchg
fdivrl
push
insl
xchg
shll
xor
mov
addr16
daa
and
aam
add
adc
dec
nop
xor
call
jp
pcmpgtd
loope
and
and
jmp
and
jge
lods
hlt
mov
add
push
sub
push
fmuls
imul
cmpsb
adc
leave
dec
mov
movsl
pop
add
xchg
xchg
ja
dec
inc
vpaddb
stos
sbbl
mov
xchg
js
push
push
ds
xchg
roll
ja
aad
push
icebp
in
pop
mov
lret
cs
cmc
adc
lds
lcall
cmp
lock
inc
add
out
mov
xchg
and
and
dec
cmp
shrl
xchg
das
js
mov
jne
jecxz
repnz
inc
sub
shl
dec
push
jbe
inc
rorl
pop
push
jl
xor
mov
push
mov
or
es
repnz
into
ret
push
cmp
jno
dec
inc
les
andw
lret
ljmp
outsb
std
push
and
pop
mov
jb
stos
push
ret
jg
imul
fmuls
ljmp
sbb
dec
dec
adc
roll
daa
lahf
jbe
inc
jnp
shlb
test
inc
shlb
adc
lahf
xorl
push
cmp
lea
loope
inc
loope
pop
icebp
leave
cmp
fistl
push
and
ljmp
adc
lcall
xchg
cli
jmp
lret
xlat
pop
aaa
arpl
mov
or
push
push
sbb
or
outsl
inc
inc
xor
lods
push
and
in
mov
xor
and
rclb
sub
std
fistpl
mov
mul
std
aam
mov
in
dec
insb
cmp
cld
int
test
jmp
stos
push
arpl
popf
dec
inc
or
ret
jmp
cmpsl
pop
dec
movsb
pusha
pusha
push
repnz
pop
dec
mov
mov
push
lahf
jo
inc
and
sbb
xchg
fldl2t
jle
outsl
add
frstor
pop
mov
push
clc
dec
jno
into
insl
xchg
add
mov
jnp
inc
or
lret
in
scas
cs
test
and
mov
or
jns
jge
mov
lret
faddl
sbbb
popaw
xorl
jnp
cs
orb
xor
ror
cmp
pop
and
movsb
and
adc
mov
out
inc
adc
shrl
cmp
pop
and
fsts
rorb
sahf
orl
pusha
cmp
and
pop
and
nop
mov
lea
inc
out
repz
jl
sbb
xor
aaa
enter
jmp
lret
xchg
movsb
test
and
xlat
mov
adc
pop
mov
jl
repnz
xor
jno
mov
cltd
mov
mov
loope
or
movsb
add
std
dec
cmpsb
add
jge
loopne
pop
into
hlt
test
scas
pop
testb
lock
popf
mov
dec
mov
imul
stos
imulb
jae
pop
and
xor
jp
ret
jne
andl
sahf
push
jecxz
pushf
dec
pushf
mov
mov
repz
daa
sbb
jmp
xchg
stos
fdivr
in
xor
dec
add
loop
imulb
xor
xchg
in
pushf
push
shl
es
in
daa
mov
out
mov
sbb
and
and
lret
int
cmp
or
das
lds
and
xorl
mov
lds
pop
xchg
sbb
in
push
out
mov
inc
movsb
adc
cli
ss
insl
popf
movsl
es
mov
add
sub
stos
add
in
or
push
cmp
adc
decl
sub
jg
nop
mov
xchg
hlt
js
dec
pop
test
arpl
push
cmp
jae
pop
cmp
stos
mov
pushf
jo
and
insb
lock
xchg
fcompl
push
into
push
lcall
cmp
dec
sbb
dec
adc
xor
lds
push
jg
aam
pop
adc
mov
push
cmp
jle
jbe
push
testb
xor
fcmovnu
jle
or
mov
mov
xor
and
inc
movsl
mov
mov
and
ret
arpl
and
imul
cmc
addr16
je
push
cltd
inc
rcrb
js
push
repnz
sarb
test
pop
call
or
adc
out
pop
outsl
push
xchg
jge
pusha
dec
jb
mov
xor
movsb
into
pop
xor
xchg
lea
mov
lods
lret
das
inc
add
daa
lods
lret
sub
jno
loop
mov
push
fs
cmp
mov
fmul
cmp
sbb
and
movsl
mov
pop
push
shrl
jo
add
popa
dec
dec
push
xchg
xor
adc
inc
jne
ret
lcall
out
sub
xchg
cmc
mov
sbb
idivl
mov
cmp
dec
cmc
ljmp
mov
ss
lock
mov
test
andb
cmp
inc
test
xor
push
lods
or
inc
inc
mov
inc
and
orl
push
jecxz
jo
ret
dec
cwtl
mov
or
bound
sti
in
sub
cli
in
pop
pop
iret
adc
stos
out
int
dec
push
shll
inc
pop
std
sarl
std
stos
add
sbb
mov
inc
das
aam
movsl
xor
pop
xchg
xchg
push
jno
jecxz
and
inc
in
ja
lock
jge
jne
cmp
loopne
xor
sub
imul
cmp
push
fs
add
in
push
in
cmp
sub
sbb
and
dec
je
pushf
xchg
cmp
in
adc
push
loope
inc
cmp
test
jp
lahf
test
popa
jmp
dec
loope
inc
push
fnstcw
outsl
push
and
stc
insb
xchg
adc
pop
stos
pop
xchg
ret
out
cmc
xchg
ljmp
addr16
sahf
test
jo
push
cmc
or
scas
outsb
arpl
loopne
cmpsb
sub
test
outsb
push
xor
add
push
mov
lds
adc
int3
add
ret
data16
mov
repnz
mov
push
cltd
dec
int3
aad
push
leave
pop
lock
jmp
xchg
outsb
arpl
jae
sbbb
and
jae
scas
loopne
pop
imul
jle
gs
fnstsw
mov
lahf
fucomip
aas
push
sarb
test
dec
or
movl
xor
inc
or
jnp
xchg
test
mov
pop
fnstsw
xlat
push
movsb
xchg
out
cmpsb
jl
xchg
adc
jae
mov
sbb
sbb
loope
rolb
jb
add
sbb
xchg
jae
ja
test
xor
pop
mov
cs
mov
in
stc
cmp
sbb
pop
orl
in
xor
stos
and
pop
das
pop
gs
insl
cli
into
cmp
repz
call
inc
push
out
and
mov
jae
and
nop
enter
pusha
cld
mov
sub
loope
pusha
leave
fbld
push
inc
cmp
or
cltd
dec
mov
mov
and
pusha
ficoms
mov
es
cmp
in
xchg
and
pop
mov
mov
out
lret
dec
dec
push
mov
xchg
mov
cmpsb
js
rclb
bound
mov
ret
gs
add
push
jns
and
inc
decl
mov
mov
mov
loope
sub
scas
cmp
cmp
mulb
loop
sahf
push
loopne
stos
mov
sub
out
cmp
mov
dec
fs
lea
mov
add
xchg
jbe
in
int
fcoml
rcr
dec
jno
cmp
lret
and
sub
stc
pop
cmp
es
es
sahf
subb
test
pop
inc
jle
andl
adc
cmpsl
jp
scas
loopne
repz
shlb
cmp
or
or
sbb
ss
jmp
loopne
hlt
mov
cli
cmpsl
sbb
add
loop
ret
adc
sti
add
loop
push
in
push
dec
movsl
mov
in
out
fldl
and
cltd
push
dec
mov
push
mov
dec
rcll
and
das
cmpsl
push
mov
les
push
cmpsb
push
hlt
lret
dec
and
test
pop
xor
fsubrs
adc
push
leave
or
mov
dec
push
mov
xchg
cmp
mov
jmp
dec
mov
add
and
js
sar
lahf
jge
roll
js
mov
into
sub
mov
aaa
out
cli
sarl
sbbb
cld
mov
inc
test
lea
paddd
lahf
push
push
mov
rorl
rep
adc
sar
jb
mov
jb
mov
cmp
mov
mov
repnz
sub
dec
lret
imul
icebp
lods
call
sbb
fstps
cli
imul
sub
leave
movsb
fnsave
fsts
pop
sub
lock
pop
mov
rorb
add
popa
add
sbb
add
loop
imul
scas
andb
fisubl
and
test
movsl
ja
and
or
cmp
push
test
icebp
xor
jno
mov
repz
fs
imul
bndstx
or
mov
daa
loopne
xor
dec
dec
mov
jb
test
sub
mov
popaw
icebp
sbb
push
es
push
repz
repz
stos
lea
xchg
enter
loope
add
cmpsl
xchg
mov
enter
push
mov
call
adc
clc
dec
jmp
clc
jp
mov
fs
jb
mov
int3
subl
sub
or
inc
testb
xchg
cmpsb
xchg
mov
cltd
jmp
jns
lods
dec
or
cmpsb
popf
xlat
ret
lahf
mov
cmp
xchg
push
jg
xchg
lret
lcall
mov
mov
xlat
dec
lock
bound
dec
cmp
and
xchg
xchg
adc
cmpsl
adc
fwait
imul
cmpsb
cld
mov
subl
xor
out
scas
pusha
or
pop
mov
fiaddl
fadds
mov
cmovno
ret
jnp
xchg
int
dec
sub
xor
fwait
and
mov
repnz
lods
jg
xor
inc
xchg
out
add
aaa
nop
add
sbb
mov
mov
cmp
je
xchg
stos
mov
repnz
jne
lret
xchg
sbbl
inc
inc
jae
data16
jg
xor
leave
dec
dec
je
mov
rcrl
mov
push
aad
dec
ret
nop
add
ret
cmpsb
cmpsb
fs
dec
inc
adc
inc
imul
std
aad
cmp
pop
pop
lds
gs
dec
cld
enter
dec
es
push
rcr
adc
push
adc
cmpsb
ds
shll
push
adc
fsts
adc
es
cwtl
xchg
std
or
push
popa
aam
cs
add
jo
sbb
rclb
mov
push
xor
mov
jl
add
xor
out
dec
outsb
inc
xchg
adcl
sbb
cmovnp
inc
sub
test
les
fdivl
insb
and
in
sarl
cmpsb
pop
mov
and
shrb
ljmp
jae
push
mov
das
inc
jmp
mov
loopne
dec
dec
xchg
jmp
pushl
add
or
pop
and
outsb
pop
ja
sub
and
adc
sub
pop
xor
js
dec
add
imul
sub
imul
out
xor
xchg
mov
ret
ret
fs
sub
push
shl
inc
sbb
xlat
inc
xchg
ficoms
dec
sarl
and
dec
movsl
xchg
sbb
inc
inc
aad
sub
cwtl
mov
dec
xchg
ficoml
add
inc
or
or
or
xor
pop
loopne
mov
adc
leave
shrl
xlat
push
sbb
mov
test
fistpll
mov
xchg
cmpsl
push
jb
inc
cmp
mov
push
xor
sub
push
lods
ss
nop
pushf
lock
mov
lods
mov
lods
js
pop
loope
inc
mov
cmp
loopne
pop
or
nop
mov
sub
enter
lods
sahf
push
cmp
inc
rorl
outsb
fwait
adc
jecxz
ja
fidivl
push
fstps
mov
jecxz
dec
test
jmp
mov
jge
jno
ja
mov
fisttpl
jmp
and
sub
jnp
jmp
cmp
out
fsubrs
inc
add
mov
sahf
push
fdivl
pop
xchg
adc
inc
movb
lock
jge
lret
sbb
jno
cwtl
xchg
push
mov
or
enter
lds
imul
sub
lock
mov
mov
cli
xlat
pop
cmp
xchg
test
jecxz
jae
lahf
ds
rclb
adc
xchg
push
mov
pushl
mov
jo
push
mov
sbb
divl
mov
pop
stc
adc
add
sub
xor
mov
ja
cli
loopne
inc
push
es
dec
dec
jmp
mov
aad
jo
jp
movsl
cmp
xchg
mov
aad
mov
jg
adc
pop
stos
test
sti
push
inc
jecxz
shl
jbe
mov
shr
mov
adc
nop
scas
add
cli
jp
sahf
and
clc
push
mov
inc
pop
xchg
pop
mov
mov
xor
daa
pop
dec
sub
mov
aad
mov
bound
cmp
jmp
out
sahf
insl
scas
pop
inc
mov
rcl
dec
or
push
aaa
cmpsb
mov
sub
inc
push
inc
dec
out
stos
inc
loop
jle
pop
les
call
scas
cltd
neg
cmp
dec
pop
std
insb
lret
mov
or
mov
lcall
inc
push
shll
fcoms
sub
and
movb
mov
or
shrl
add
repz
fcmovne
xor
lods
mov
add
mov
je
inc
mov
cwtl
imul
sbb
jp
ljmp
mov
xchg
leave
jp
xor
filds
and
aad
inc
js
jae
icebp
dec
cmc
cltd
subl
mov
jl
fists
pop
notb
xor
movsl
aad
bnd
sub
cmp
xchg
mov
ljmp
mov
jge
dec
sbb
lcall
lahf
push
xor
push
pushf
out
fbstp
jbe
sbbb
in
xchg
jno
jae
cmpsl
adc
test
mov
sarb
mov
and
insl
push
xor
ljmp
pop
dec
push
movsl
inc
sbb
repz
fsts
enter
pop
xchg
sub
bound
sub
test
xchg
xor
mov
repnz
in
push
insl
sub
nop
pop
sbb
jecxz
aaa
outsl
rcl
add
mov
mov
add
push
das
iret
pop
dec
xchg
lds
in
xchg
mov
popf
fnstcw
in
xchg
cltd
mov
iret
insb
inc
in
push
pop
loop
fiaddl
nop
and
adc
mov
loopne
jg
jo
loopne
out
sahf
call
daa
cltd
shl
add
xor
cmp
mov
xchg
sub
scas
sub
stos
ror
mov
sub
jg
push
xchg
ficoms
xchg
aaa
mov
out
lret
mov
cs
mov
mov
pop
loopne
xor
clc
out
movb
mov
nop
clc
push
in
xor
mov
xor
loope
imul
mov
xchg
push
inc
mov
movsb
inc
pushf
jns
popf
adc
or
pop
push
cmp
push
out
push
loope
mov
pop
cld
pop
dec
push
in
movsb
lahf
fcomi
es
loop
xchg
add
sub
dec
adc
sub
push
inc
mov
das
not
mov
shlb
sbb
jb
push
push
fwait
hlt
decb
pop
sahf
xchg
ss
sub
jbe
jecxz
jge
rcll
and
punpckldq
ret
fisubs
adcl
pop
xor
je
repnz
cltd
imul
add
and
in
enter
mov
xor
jne
dec
test
push
mov
lcall
xchg
sbb
sbb
out
sbb
xchg
ret
or
cmp
cmp
enter
pushf
inc
fxam
dec
fwait
mov
lds
adc
cmp
scas
sub
cmp
pusha
nop
cltd
mov
jb
mov
stos
mov
test
jne
cmp
pop
jle
test
inc
rclb
push
inc
jp
dec
and
cltd
stos
mov
xchg
in
lret
xor
popf
push
mov
test
xchg
xor
mov
aas
das
loopne
sbb
sti
mov
adc
fistpll
outsb
xchg
lahf
cmp
lret
addr16
cmpsb
cs
ljmp
lods
sbb
xor
xor
and
sbb
xor
pop
loope
inc
mov
fsubrl
nop
aaa
inc
and
fnstenv
pop
mov
subl
dec
daa
dec
jmp
fimuls
mov
cli
sbb
imulb
stos
cmp
insl
stc
push
ret
push
negl
mov
popa
mov
inc
out
in
stos
int3
xchg
or
cld
jle
mov
mov
mov
lcall
mov
sub
inc
popl
lods
and
xor
pop
in
mov
jg
dec
gs
addr16
xor
push
aam
lods
lods
mov
cmp
cmc
in
psllw
push
repnz
mov
lret
xor
lret
fiaddl
in
xor
fsubrl
test
jb
xor
pop
test
test
mov
mov
sub
outsb
xor
stos
in
je
ds
sbb
or
fmull
pop
xor
or
insb
sahf
out
xchg
add
sub
pop
push
sbb
xlat
jmp
cmpsl
fs
shrb
xorb
vcvtsd2si
repz
sbb
stc
stc
inc
lahf
bound
test
add
and
lcall
inc
dec
xchg
cltd
sbb
cmp
das
test
cwtl
daa
loop
lods
punpckhdq
cs
push
test
pop
das
dec
sub
or
insl
or
jg
scas
lahf
jno
dec
cld
cmp
movsl
mov
out
sbbl
and
sub
ja
jae
add
loopne
fistpl
into
cmpb
jg
xor
xor
cmp
xchg
adc
inc
aaa
mov
xchg
and
cmp
mov
stos
mov
sub
outsl
mov
sbb
popa
xor
pusha
mov
xchg
je
mov
outsl
stc
jae
outsl
jg
in
dec
ret
mov
stos
add
dec
jge
lods
mov
dec
push
std
sub
pop
mov
dec
loop
shlb
inc
xchg
cld
loopne
xorl
jecxz
stos
inc
stos
stos
xchg
adc
xchg
xchg
sti
inc
mov
clc
sub
aas
sahf
test
sbbb
and
sti
xlat
dec
fisttpl
add
jo
mov
imul
sub
jle
push
cmpsb
test
dec
jecxz
sar
mov
sbb
or
mov
jns
insl
sbb
jl
or
mov
idiv
and
sbb
dec
jns
mov
mov
jle
cmp
out
sbb
xchg
push
or
jo
inc
fwait
cli
add
pop
test
add
mov
call
xchg
jmp
ds
popw
push
xchg
lret
cmp
push
and
in
test
call
ret
or
jnp
add
out
mov
bnd
mov
push
mov
loop
and
sbb
jne
push
test
mov
icebp
pusha
cld
mov
fdivrl
adc
mov
jle
stc
dec
sub
adc
xor
push
lds
rclb
sti
bound
fdivs
mov
jp
jae
push
in
jp
or
add
test
add
sbb
xchg
inc
dec
add
adc
or
push
push
rorl
mov
push
or
add
or
xchg
pop
adc
jo
and
orb
adcl
testb
jb
outsb
mov
hlt
xor
sbb
rcll
adc
or
sub
ret
cmp
aam
mov
aad
pop
les
xchg
push
repnz
mov
mov
sub
in
push
scas
das
pop
xor
inc
lock
scas
xchg
lds
xchg
dec
in
xor
bnd
loop
or
jno
adc
ljmp
or
testb
inc
adc
ljmp
sub
mov
lahf
lock
rcl
pushf
cli
orb
inc
sub
xor
xor
in
outsb
test
sbb
loopne
mov
xor
pusha
fiaddl
pop
push
xchg
iret
adc
popf
loop
std
daa
fiaddl
pusha
xor
fcompl
push
push
mov
rep
mov
sbb
pop
pop
stc
int3
pop
inc
lcall
inc
mov
jb
ja
xchg
mov
or
push
push
jnp
notb
sbb
inc
and
mov
inc
sbb
popf
mov
les
mov
repz
mov
aaa
lea
dec
bound
sbb
mov
cld
leave
inc
or
mov
xor
fdivr
andb
inc
cmp
pop
cmc
lahf
push
xchg
and
mov
xchg
ljmp
fistl
xor
insb
xchg
mov
sbb
imul
jge
daa
push
mov
sub
stos
dec
popf
jl
movsl
cmpb
ror
add
and
lcall
pop
sbb
in
fsubrp
testb
pushf
int3
daa
pop
xor
mov
stc
cmp
mov
mov
jp
lock
xchg
add
rorl
mov
adcb
mov
sbb
sbb
negl
mov
xor
push
ss
cmc
and
sbb
cwtl
cmp
pop
xchg
adc
mov
mov
jle
pop
adc
insb
scas
mov
mov
fwait
in
call
lods
jle
xchg
fcomp
aam
adc
pop
inc
and
push
cmp
or
mov
dec
jne
out
pop
or
fsubl
frstor
ret
jecxz
nop
mov
jl
cli
loope
add
mov
insb
pop
outsb
stc
add
mov
mov
lcall
sub
ja
mov
push
mov
or
jne
in
inc
and
pop
fcomip
nop
push
adc
mov
jno
test
test
sub
sub
bound
push
or
push
jecxz
xor
xor
jno
mov
pop
aam
cmp
clc
stos
dec
cwtl
enter
in
out
and
fdivrl
push
cwtl
shl
imull
je
aam
and
shrb
pop
and
das
into
inc
gs
adc
imul
and
unpcklps
and
dec
sbb
dec
lret
inc
pop
sbb
aam
std
sahf
add
testb
pushf
std
and
clc
repnz
dec
dec
repnz
int3
xchg
in
test
outsl
mov
sbb
sub
cli
xchg
lahf
subl
push
add
loope
es
jbe
pop
addr16
or
xlat
xchg
fildl
sbb
or
mov
arpl
push
hlt
cli
and
mov
mov
lods
lret
sub
cmc
sbb
mov
rorb
sahf
push
push
mov
jg
push
scas
mov
stc
in
jp
jnp
in
jl
jp
mov
jns
enter
push
shll
jae
dec
ds
fsincos
push
mov
inc
cmp
mov
addr16
rorl
push
stos
jbe
cmc
sub
ret
mov
fistl
test
mov
dec
lock
ljmp
es
push
ss
addr16
daa
sub
adc
lods
in
xor
subl
cwtl
xor
pop
imul
jae
in
mov
cmp
jg
xor
push
out
adc
outsb
dec
jge
out
inc
scas
mov
dec
fimuls
or
mov
mov
jo
xlat
imul
stc
push
xor
incl
push
push
pop
call
jb
pop
scas
sub
cmpl
pop
xlat
outsb
ja
jo
cmpsb
push
adc
dec
insb
fcoml
test
idivl
ficompl
outsb
add
or
in
mov
mov
arpl
jo,pt
pop
fwait
ret
mov
mov
int3
push
xor
repz
mov
mov
xorb
cmp
aas
lock
jnp
roll
sbb
inc
inc
loope
or
dec
pop
cmpsb
inc
cmp
adc
mov
movl
or
sarl
lods
into
pop
mov
bound
xchg
inc
add
pop
mov
xchg
mov
inc
incl
cmp
ljmp
scas
push
mov
aam
inc
out
push
push
add
dec
dec
jnp
cmpl
adc
pop
mov
inc
ffreep
lahf
adc
stos
scas
or
inc
lods
pop
cmp
test
inc
jnp
mov
cmpsl
outsb
mov
stos
ss
js
sbb
pop
mov
sbb
in
lret
iret
push
scas
in
sahf
xor
mov
mov
insb
push
loopne
mov
mov
cs
push
data16
inc
faddp
clc
in
sub
int3
xchg
mov
push
test
ret
or
inc
adc
jbe
stc
inc
fistps
adc
jae
lret
out
fcmovne
std
push
imul
add
inc
inc
arpl
mov
mov
ja
or
or
xor
lds
jae
cwtl
cmpsl
xchg
iret
cmpsb
lcall
insl
subl
movsb
gs
cmpl
rolb
xchg
or
jbe
enter
cwtl
in
aas
sbb
addr16
mov
mov
jmp
or
loopne
pop
and
test
adc
adc
aad
xor
inc
flds
add
les
mov
in
fwait
hlt
mov
ss
sub
push
push
sbb
fdivrp
pop
jns
sbb
adc
sti
push
scas
inc
iret
cmp
inc
pop
add
jbe
push
imul
js
push
jecxz
xor
lahf
mov
pop
stc
arpl
inc
sbb
icebp
lods
pop
in
js
adc
add
push
xor
pop
cltd
adc
xchg
call
popf
xchg
pop
sbb
sub
scas
pop
jbe
mov
pop
adc
outsb
mov
jmp
and
mov
iret
jl
fcoml
fldt
aad
and
fidivl
push
scas
sbb
or
ljmp
jae
fildll
mov
push
mov
js
adc
adc
cmpsl
jne
jmp
jno
jle
test
xchg
cmp
or
pop
jecxz
pop
addr16
mov
jecxz
sti
sbb
mov
dec
std
imul
wbinvd
mov
xor
arpl
clc
xchg
mov
cmp
leave
pop
adc
sub
dec
mov
pop
lods
push
outsl
mov
inc
in
addr16
ds
mov
sbb
dec
outsl
jl
jmp
push
xor
cmc
jo
pop
enter
jb
fisttpl
xlat
lods
cmp
sahf
mov
xchg
pop
lods
imul
mov
push
cmpsl
cmp
insb
cltd
sahf
rcll
mov
enter
add
mov
and
mov
test
cli
jp
popa
or
pop
es
mov
aad
lret
jns
sbb
pop
jecxz
fadds
adc
cmc
lock
and
fdiv
and
lods
xor
stc
js
subl
pop
je
mov
push
jp
inc
mov
into
sbb
repnz
and
mov
xor
shlb
push
push
ss
cld
inc
pop
mov
and
aaa
sar
rcr
mov
jp
lods
lds
fadds
add
lcall
fbld
in
lcall
popa
pop
outsl
push
and
cli
dec
bound
pop
daa
pop
out
aad
xchg
xchg
push
mov
lods
in
gs
aam
lods
push
sub
cmp
test
jge
dec
lcall
jle
in
popa
jbe
sub
xor
push
sub
adc
fs
adcb
repnz
inc
xor
popa
xor
repz
xor
mov
xchg
stos
test
jg
cli
dec
mov
dec
cmp
clc
int
frstor
pop
jg
jmp
ret
pop
test
popf
cmp
xor
pusha
or
or
add
cmp
fistps
jbe
lret
mov
xor
scas
push
repz
pop
test
adc
sub
adc
gs
add
adc
lret
sub
or
loop
scas
out
loope
mov
and
sbb
pop
xor
cld
sub
test
sbb
popf
aaa
les
imul
lahf
pop
and
mov
xchg
mov
into
dec
aam
inc
xchg
sahf
pop
xchg
rcll
ficoms
int
push
ja
rcl
mov
dec
push
cmp
imul
test
pop
push
outsl
lss
xchg
aaa
sub
add
cmpsl
sub
mov
jge
xchg
int3
cmp
jo
call
out
shl
mov
rorl
lock
or
push
push
sbb
imul
inc
mov
cmp
sbb
cmc
cmp
inc
xor
stc
mov
push
mov
inc
mov
dec
and
fistl
adc
int
filds
loope
pop
push
xlat
pop
mov
aaa
pop
xor
lcall
mov
in
mov
cmpsb
dec
outsl
mov
xchg
push
mov
mov
js,pn
mov
int3
cld
sub
iret
xlat
sub
mov
aad
sub
mov
push
mov
test
lcall
mov
and
or
lods
and
mov
or
aad
mov
jne
aad
fcomip
add
jmp
pop
adc
adc
mov
cmp
inc
jl
ficomps
out
les
mov
mov
sahf
or
ds
faddl
jmp
and
sbb
pop
push
mov
dec
aam
mov
and
xlat
mov
xor
cld
scas
rcll
mov
push
mov
jb
ret
cmp
sub
leave
hlt
icebp
in
fisubrs
ss
movsb
in
into
add
and
lock
sub
fidivrl
cs
bound
mov
repnz
addr16
dec
pop
jae
hlt
pop
fstp
xor
xchg
mov
jl
cmc
popa
ret
pop
mov
scas
movsb
cmp
imul
push
sub
lahf
lods
repz
xor
pop
adc
pop
outsb
movsl
cmc
pop
jne
ret
outsb
sub
fidivs
cmp
rorb
xchg
sub
fbstp
adc
ss
test
cmp
cwtl
imul
lahf
pop
andl
aad
push
or
sbb
dec
ss
rcrl
jns
aaa
jb
into
cmp
repz
pop
inc
clc
pop
ljmp
scas
xchg
add
lahf
out
mov
jmp
dec
dec
mov
sar
or
and
pop
lret
mov
les
inc
mov
push
adc
sub
je
inc
es
push
xchg
call
or
movsl
insb
dec
and
inc
popa
das
dec
push
xor
jb
and
xchg
add
icebp
lret
lods
hlt
loop
iret
xchg
add
fistpl
cwtl
div
or
pushf
sbb
loopne
jp
dec
icebp
jge
jmp
rol
jg
add
mov
push
test
adc
sbb
sub
lods
xor
push
add
in
fadds
mov
test
rorb
aad
lock
mov
fs
les
mov
fwait
adc
call
movsb
std
pop
jae
clc
dec
jg
jne
fwait
cwtl
add
dec
lcall
syscall
mov
sub
mov
imul
sbb
cli
shlb
lods
inc
mov
and
mov
dec
shrl
mov
xor
dec
dec
lahf
pop
stc
ds
mov
mov
xchg
in
outsl
shr
icebp
cmpsb
pop
sbb
inc
ljmp
jne
ror
xchg
pushf
mov
popa
or
rcll
xchg
jmp
int3
leave
push
mov
push
and
in
mov
inc
lahf
imul
imul
xor
divl
pop
gs
sub
ja
inc
testb
push
xor
xor
jg
je
stc
push
lds
sub
push
xor
push
or
pop
mov
sbb
jle
xchg
out
fadds
jge
lods
push
adc
icebp
cmp
push
shll
sub
mov
sti
and
mov
mov
pushf
jnp
inc
xchg
cmp
loop
pop
je
int3
mov
leave
push
sbb
test
pop
push
inc
lea
call
sahf
clc
or
inc
dec
fucom
fistps
dec
fs
inc
sbb
adc
mov
sbb
icebp
dec
pushf
push
xchg
sub
jns
loopne
scas
test
xchg
mov
fidivs
or
mov
jmp
mov
add
xchg
lahf
imul
add
or
mov
cmp
adc
neg
movsl
faddl
lods
sub
xchg
adc
pop
sub
push
pusha
push
jle
inc
dec
dec
ret
cmp
rcl
mov
mov
movsb
nop
dec
test
adc
jb
cmp
jp
or
mov
sub
and
outsl
popa
mov
adc
test
cmp
test
mov
inc
push
jmp
jb
or
jl
pop
test
jmp
sti
xor
push
and
rcr
pop
xchg
cmc
sub
jmp
addb
mov
popf
jmp
icebp
iret
movsb
xchg
jae
fiaddl
in
and
push
pop
mov
loopne
ror
ljmp
mov
outsb
das
jge
xchg
mov
dec
nop
mov
mov
pushf
sub
pop
fdivp
ds
insl
jg
and
cli
sub
sbb
cmpsl
sub
sbb
pop
out
mov
dec
imull
lea
add
mov
sub
icebp
mov
js
sub
or
in
std
hlt
xchg
fmul
cmp
ss
pop
sbb
sub
sub
into
movb
mov
cmpsb
cmp
shr
or
pop
loope
scas
push
add
lds
fisubl
daa
filds
jg
and
sub
and
add
pop
into
cmp
in
xchg
pusha
xor
sub
dec
nopl
mov
aas
mov
xor
aad
loop
lock
lock
xor
mov
mov
inc
xchg
mov
mov
mov
and
pop
mov
test
sub
das
sbb
lock
sbbl
add
inc
push
in
inc
pop
pop
stc
cmpsb
mov
aas
test
ja
dec
xchg
stc
and
push
pusha
xor
and
int
mov
push
fstpl
rorb
sub
in
mov
rolb
push
movsb
loop
inc
mov
ja
dec
popa
das
push
adc
loop
rorb
dec
adc
sub
fwait
lods
pushl
aad
imul
aas
jge
cmp
movsl
ret
sti
push
dec
inc
and
movsl
mov
cld
jb
mov
jns
cli
and
xchg
in
adc
ljmp
xchg
negb
sub
ljmp
or
aad
gs
jge
push
outsb
ljmp
mov
mov
into
loope
lahf
jp
or
xchg
jo
mov
movsl
loopne
ficomps
xchg
push
dec
fwait
test
cs
decb
mov
cmp
mov
int
cli
and
mov
cmp
bound
ds
cs
ret
movzwl
jecxz
xlat
mov
std
xor
outsb
mov
popa
jbe
loopne
popf
or
cmp
inc
lcall
into
imull
jae
mov
mov
xor
mov
push
bound
mov
scas
xchg
cli
imul
cmp
or
lret
mov
or
xchg
jo
push
repz
xchg
sbb
repnz
or
or
or
lods
test
mov
jo
push
mov
xor
adc
mov
lods
jb
xchg
mov
gs
clc
cmp
sbb
std
xor
pop
xor
out
push
fisubrl
inc
out
stc
les
push
lret
cmc
mov
push
call
and
arpl
inc
sub
mov
mov
dec
out
cmpsl
mov
add
gs
data16
fisttpll
push
iret
cs
dec
dec
dec
sbb
loope
dec
insl
pop
ja
push
mov
in
push
sbbl
jbe
xlat
fdiv
sbb
enter
shrl
je
je
add
rorl
sub
jnp
orl
scas
push
push
mov
jne
and
loope
cmpxchg
mov
mov
ss
out
lods
ret
adc
xor
aas
movsb
xchg
pop
xchg
pop
wrmsr
push
rclb
pop
lock
mov
or
rcrl
inc
mov
jmp
aas
imull
pushf
sti
mov
push
cmc
movsl
ret
inc
pop
sbb
ficomps
imul
jge
cmp
inc
pop
pop
les
push
adc
jbe
lea
mov
addr16
int3
and
xchg
scas
out
fdiv
shll
in
sbb
shlb
popf
adc
xchg
cmpsl
mov
lret
xchg
shlb
jp
ss
push
jmp
test
push
stos
sub
in
test
pop
xchg
stc
aaa
lret
xor
idiv
xor
hlt
push
cmpsl
lds
xchg
jecxz
adc
push
into
in
xor
lock
sahf
mov
jecxz
jne
js
cmc
lret
jmp
mov
rcrl
call
push
lahf
or
xchg
lds
aad
add
test
lret
iret
or
xor
mov
xor
loope
pop
aam
xchg
cmpl
fdivrp
aaa
jge
out
push
or
jmp
sbb
mov
fs
or
sbb
pushf
push
and
imul
jle
cmp
add
adc
add
xor
jne
xor
out
stc
aad
out
cmpb
pop
std
or
cmp
addr16
std
sbb
sbb
leave
lretw
cmpsb
pop
push
pop
mov
mov
lods
aaa
ret
popf
leave
das
mov
mov
or
popa
lods
xchg
scas
aaa
div
mov
inc
rcrb
pop
aaa
push
ficomps
cmp
adc
jne
int
dec
js
cmp
jb
or
xor
adc
pop
lea
scas
insl
fstpl
xchg
leave
lea
int3
mov
and
mov
and
sbb
pop
lock
aam
xchg
adc
sbb
add
xor
xchg
es
and
pop
mov
mov
xor
dec
push
lods
push
add
sbb
sub
es
adc
loope
push
mov
xor
das
loop
pop
cmp
jns
out
fisubs
or
push
xchg
call
std
mov
in
mov
shll
das
sub
mov
std
or
xor
mov
adc
jp
cmp
mov
sbb
push
xchg
lahf
outsb
test
push
and
rorb
movsb
into
sbb
and
jp
and
aas
les
cmc
sbb
push
lahf
xchg
dec
sub
add
mov
and
cli
imul
popa
fsts
inc
pusha
mov
add
ficoml
push
inc
sub
mov
test
bound
out
push
out
add
icebp
pop
cmp
shl
repz
or
dec
lcall
js
and
adc
idivb
mov
xlat
int
imul
push
inc
aad
cs
out
btc
xchg
sub
mov
push
or
add
mov
movsb
xor
mov
push
xchg
loopne
sbb
sub
cmpsb
test
aam
loop
cmc
pusha
andb
xor
scas
pushf
mov
lret
lret
jns
dec
loopne
mov
mov
xchg
xor
es
sahf
pop
jne
gs
add
inc
lcall
int
ja
mov
or
cs
adc
lret
lock
or
pop
lea
lods
dec
mov
xchg
fbld
jecxz
outsl
jns
push
test
cmpsl
repnz
data16
ja
insl
ds
repnz
fdivr
lock
in
fwait
dec
sbb
int
jmp
repnz
je
xor
cld
imul
dec
scas
ss
add
repnz
in
xchg
adc
test
xor
pop
add
and
adc
loope
out
push
inc
ds
repnz
fisubl
sub
mov
xchg
mov
fsts
lahf
std
inc
aas
sub
lahf
fwait
add
pop
pop
and
test
loopne
sbb
je
into
or
sti
je
and
dec
fdivp
outsl
imul
xchg
jle
xor
out
mov
bound
xor
push
jp
pop
lock
fdivrs
push
sbb
mov
testl
add
ds
lods
jnp
orb
push
jmp
sub
decl
icebp
lea
xor
xchg
mov
mov
leave
sbb
enter
jb
loope
mov
pusha
cld
xor
icebp
or
sbb
inc
test
lret
int3
pop
jmp
adc
cmpsb
cmpsl
lods
addr16
xchg
sub
cmp
pushf
rclb
cmc
addr16
jge
mov
notl
imulb
sbb
mov
stos
faddl
les
dec
sbb
xchg
ror
add
and
inc
dec
and
stos
sbb
daa
pop
and
mov
out
mov
cmp
xchg
daa
outsl
std
mov
popa
jbe
pop
xor
mov
loop
mov
std
mov
int
and
aaa
scas
les
pop
lahf
cli
xor
pop
jae
lock
pushf
lds
xchg
push
sub
xchg
nop
add
xchg
loop
xchg
setae
mov
jbe
imul
xor
idivl
adc
lahf
or
push
lahf
loop
movsl
jne
mov
jo
adc
loop
les
sub
fimuls
cmp
push
shr
xchg
lock
push
aam
loop
ss
mov
adc
pop
into
mov
sub
inc
arpl
repz
int
adc
in
jecxz
cld
nop
sbb
pop
or
adc
inc
icebp
loopne
out
sub
imul
cltd
jg
je
gs
jne
bnd
test
and
sbb
dec
mov
rorb
xchg
iret
pop
jge
jecxz
lahf
inc
je
mov
mov
fstps
jle
inc
sbb
xchg
sar
xchg
daa
hlt
test
fisubrl
add
pop
sahf
iret
xchg
mov
or
pop
sbb
leave
pusha
loopne
dec
jge
cmpsl
mov
cli
inc
fwait
mov
lods
gs
xchg
cmp
inc
or
cmpsl
mov
in
divb
out
dec
nop
ds
mov
popl
clc
cltd
rcll
xor
xor
daa
push
adc
sub
sub
lcall
or
cli
mov
sub
push
dec
rcrl
cmp
jmp
movsb
test
lock
jne
inc
sbb
clc
enter
mov
lahf
add
sahf
and
mov
loopne
and
js
sbb
add
xor
rorl
mov
std
cmc
fcompl
ss
mov
lock
and
push
adcb
leave
clc
into
cmp
inc
pop
icebp
cli
in
mov
shll
fs
dec
scas
cmpsb
jmp
lods
lds
sub
and
sbb
loope
shrl
cld
not
inc
push
cmp
pop
sbb
cmc
leave
es
sub
ret
xor
xchg
ss
sbbl
cmpsb
mov
in
test
or
jecxz
jg
test
aad
cmpsl
inc
jmp
movsl
cmpsl
pop
call
push
stc
rorl
mov
into
insb
jnp
faddl
mov
xor
xchg
xor
mov
lock
mov
add
insb
adc
repz
push
or
bound
test
loopne
adc
rorl
mov
and
dec
fldcw
cmpsl
xchg
add
mov
in
xchg
mov
ret
out
lods
xor
jle
pop
lock
ret
jle
lds
pop
xchg
sahf
jo
xchg
scas
adc
clc
jecxz
cmc
mov
aad
mov
loope
pushf
add
add
add
lret
scas
enter
repnz
lods
daa
stos
dec
sbb
adc
daa
sbbl
out
pop
rorl
cli
std
and
sub
mov
adc
adc
cmp
test
lahf
mov
out
inc
sub
pop
pop
out
dec
sub
outsb
push
cmp
jle
movsl
stc
jbe
cmp
hlt
test
out
inc
bound
mov
sub
mov
sbb
rcr
loope
insl
mov
adc
jmp
movsb
daa
dec
dec
or
prefetch
jl
xlat
pop
xlat
cmpsb
inc
sbb
or
add
xchg
push
cmp
test
int3
lret
push
inc
mov
pusha
int
push
dec
push
shl
adcl
mov
js
clc
cmc
in
xor
pcmpgtd
and
rcrl
mov
xchg
daa
insb
ret
lret
pop
das
push
lret
dec
push
outsb
mov
sbb
jae
rcrb
xor
mov
inc
or
push
or
mov
cld
and
orl
and
les
and
stos
imul
inc
xchg
pushf
sahf
inc
jle
pusha
push
out
outsl
jns
popa
sub
or
out
dec
icebp
cmp
or
out
pop
push
mov
lcall
jl
mov
cwtl
je
mov
sub
push
jge
mov
jno
mov
aam
xchg
icebp
stc
mov
xchg
push
enter
xor
scas
clc
lods
icebp
data16
xor
sbb
int
pop
repnz
fs
das
sub
fdiv
sbb
mov
sub
push
mov
pop
mov
adc
test
fisttpl
ret
mov
push
imul
xor
lret
cmp
cs
outsl
push
ljmp
and
lret
inc
fsubp
cld
testb
clc
pop
sbb
scas
sbb
sub
scas
inc
push
push
nop
js,pt
inc
jbe
pop
sarb
rcrl
sahf
adc
mov
adc
mov
stos
bnd
ljmp
adc
sbb
sub
popf
insl
dec
and
addr16
and
popf
repz
scas
adc
and
aas
push
enter
rcr
sbb
mov
mov
mov
xlat
sub
aam
add
scas
ficomps
mov
mov
mov
pop
and
les
sbb
outsb
jns
fcmovu
jns
daa
pop
stc
aam
jb
or
pop
sbb
cmp
sbb
push
mov
jbe
mov
xor
xor
add
pop
std
and
mov
inc
or
push
inc
into
je
lret
dec
adc
pop
pop
jle
xchg
aas
fadd
jns
les
jns
mov
lods
cmp
jp
jae
add
xlat
xor
sub
out
pop
jno
xchg
mov
jnp
xor
and
imul
aad
jnp
xor
stos
push
inc
stc
xor
imul
fisttpl
mov
adc
inc
pusha
sub
mov
js
mov
add
stos
call
lods
mov
dec
mov
aas
and
and
jle
cmpsl
repnz
push
mov
and
xchg
inc
rcr
push
mov
push
ret
mov
and
mov
push
pop
adc
andb
pop
push
bound
nop
mov
pusha
xchg
fs
pop
out
ja
ljmp
mov
fsub
jbe
into
push
incl
xchg
and
xchg
sbb
testb
jg
pop
push
push
mov
cmp
add
sti
fs
fsubrs
lcall
pop
std
test
jge
add
nop
xchg
mov
arpl
adc
js
imul
add
jmp
and
into
cmp
orl
xor
cwtl
sarl
jl
mov
lods
mull
rorb
neg
and
mov
loopne
push
lock
std
fcomps
inc
repnz
pop
dec
inc
fs
mov
mov
mov
mov
xchg
es
push
pop
and
outsl
rclb
cmp
aas
imul
stos
cmp
andl
lods
lea
out
inc
push
pop
sbb
pusha
aaa
or
ror
dec
adc
mov
ficomps
das
dec
lret
sti
test
gs
hlt
sub
dec
movsl
rorl
aaa
repz
sub
sbb
cld
push
test
push
xor
lcall
les
inc
fidivrs
sbb
out
ficompl
leave
imull
dec
das
sub
xorb
outsl
pop
xchg
fsubl
lock
inc
cmp
fdiv
cld
aad
push
scas
cs
test
int
repz
cmp
imul
sub
pop
lret
hlt
mov
or
in
add
sub
gs
or
popa
loop
or
hlt
aam
fists
aam
fldl
inc
enter
test
gs
and
mov
dec
add
sbb
test
inc
icebp
jae
dec
dec
xor
movsl
in
pushf
adc
loop
outsb
aad
and
outsb
xchg
lods
sahf
loop
mov
and
js
mov
and
mov
dec
sbb
mov
jne
add
fidivrs
xchg
pop
mov
xchg
orl
sahf
jae
fsubl
jno
aam
push
mov
in
in
mov
jae
cs
or
movsb
mov
mov
jne
jne
into
imul
mov
popf
in
sub
sub
das
add
inc
cmp
inc
popf
xchg
fldt
stc
js
stos
sbb
cmp
pushf
daa
and
mov
fwait
push
mov
aaa
push
jo
rcrl
xor
lcall
or
pop
dec
leave
jl
dec
fbstp
pop
sti
inc
shl
lods
es
adc
lcall
mov
cltd
xchg
scas
and
sub
push
xorl
ret
xchg
jb
js
xchg
dec
mov
fwait
sbb
jnp
or
daa
out
popa
pop
dec
xor
sub
xchg
mov
fisubrl
test
das
ljmp
xchg
xchg
and
movsb
mov
mov
sub
dec
pusha
push
or
xchg
inc
in
filds
loopne
push
push
pop
push
jo
sti
shlb
aam
jmp
dec
inc
aam
mov
jnp
rorb
push
sti
out
xlat
sbb
les
or
sbb
xor
js
sbb
dec
xchg
enter
inc
aaa
fcoml
lcall
jns
pop
repnz
jmp
adc
ja
in
int
test
pushf
or
les
cld
fisubrs
popa
in
or
sub
push
jl
push
xchg
inc
pop
mov
repz
out
mov
adc
xor
xchg
mov
pop
push
icebp
xchg
call
sbb
cmpsl
adc
mov
push
out
hlt
adc
jbe
lret
mov
in
push
inc
hlt
aad
mov
jno
psllq
push
cs
and
sub
mov
and
stos
fwait
mov
xchg
bound
fildll
adc
lcall
pop
pop
push
push
lea
jb
add
pop
mov
xchg
out
das
jns
fimuls
jle
stc
and
adc
and
pop
and
fcmovu
sbb
les
popf
and
xchg
inc
test
movsb
nop
ss
aad
movl
pop
jae
sbb
adc
adc
cmp
fs
repnz
in
cmp
aam
cmp
fimull
mov
push
scas
insb
jmp
in
cmp
cld
mov
sbb
ja
stos
jg
adc
lahf
loope
nop
das
je
dec
andl
cmpb
push
and
inc
pop
js
out
jb
mov
adc
xor
test
icebp
inc
xchg
inc
pop
lret
jge
sbb
xor
sarl
negb
jle
hlt
cmpsb
fmull
jle
cmp
jle
adc
or
mov
cli
or
jo
push
out
xor
lods
movsl
xchg
shrb
fisubrl
lds
jg
or
fsubrl
push
dec
and
sub
jg
insl
add
mov
daa
xchg
popf
or
rcl
aam
xchg
pop
stos
movsb
dec
inc
iret
mov
pop
sbb
ret
push
cmpsb
jb
pop
push
xor
pop
or
hlt
add
test
nop
add
dec
xchg
iret
sahf
sbbl
outsb
inc
dec
jae
xchg
roll
add
pop
and
jae
push
cmp
jne
xor
das
xchg
adc
out
fisubl
xchg
call
inc
iret
lock
dec
in
xor
pop
inc
inc
ss
and
or
lock
xor
sub
das
enter
in
pushf
add
hlt
mov
insb
sbb
mov
push
nop
dec
ljmp
mov
jmp
and
or
cli
jbe
sub
sub
dec
icebp
fnstcw
pop
sbb
adc
hlt
jb
xchg
mov
sub
jecxz
xor
jo,pt
loope
incl
inc
lds
xchg
xchg
xchg
je
xor
dec
mov
sub
inc
out
mov
add
jbe
cmp
xchg
roll
into
in
pop
ds
push
test
dec
lret
sub
and
cmc
stc
xchg
add
flds
fwait
scas
out
gs
pusha
jecxz
inc
fldcw
inc
bnd
fbld
lcall
test
test
addb
dec
insb
xchg
addr16
call
push
sub
in
push
dec
mov
aas
jne
xor
pushf
out
bound
xor
and
dec
jle
jp
inc
cmp
sub
inc
psllq
rol
push
adc
adc
testl
mov
rclb
push
add
andl
mov
pop
loop
mov
iret
les
and
loop
icebp
xchg
roll
out
fmull
inc
ret
sub
cmp
cmp
xor
xchg
jecxz
testl
inc
mov
inc
pop
push
adc
mov
mov
mov
push
repz
scas
mov
je
rcrb
enter
and
hlt
fs
or
pushf
iret
rcrl
cltd
adc
dec
testb
cmp
add
xor
dec
rcrb
dec
jo
adc
mov
xchg
cmp
or
or
xor
xor
and
dec
aam
add
xor
jecxz
xchg
fdivrs
xchg
and
push
inc
xor
adc
pop
inc
push
pushf
push
aad
cmpsl
adcl
out
popa
mov
stc
ljmp
jge
out
inc
pop
ret
pusha
mov
or
aad
jg
ret
mov
aas
mov
dec
nop
xchg
jbe
mov
jo
cli
mov
xor
fdivrp
push
test
and
mov
clc
xor
pop
lods
bound
add
jmp
pop
add
or
adc
jp
aas
test
cli
xchg
mull
ljmp
pop
clc
test
inc
out
imul
pushf
xchg
arpl
add
mov
fst
dec
cs
mov
adc
push
out
jl
cmpsb
jge
ss
sub
rol
mov
mov
loope
lahf
pop
ds
jne
sub
adc
jo
xor
mov
pop
cmpsb
adc
into
and
cmpsl
adc
cmpsl
sub
lret
sbb
xor
mov
mov
lret
inc
pop
adc
push
mov
pop
mov
negb
fst
out
jne
cmp
sub
scas
push
movsl
mov
pop
int3
adc
loopne
cmp
add
out
push
cmp
sub
dec
push
cmpsl
jbe
mov
mov
add
push
mov
mov
mov
cmc
mov
in
mov
mov
jmp
jne
push
shll
pop
nop
arpl
out
icebp
in
xchg
lds
xchg
mov
clc
leave
les
sub
jp
mov
rorl
xor
and
sbb
and
bound
das
lret
out
cmp
icebp
in
jno
add
daa
adc
push
push
sbbb
idivb
imul
mov
add
movsb
jg
imul
lret
shll
mov
xchg
push
inc
cmp
imul
sub
pusha
fistpll
aas
sub
inc
aas
sahf
push
jmp
lahf
sti
lods
push
sbb
inc
jle
shr
sub
lds
idivb
subl
xrelease
sub
push
in
sub
dec
scas
mov
rcr
sub
xor
jmp
fiadds
cmp
lcall
push
dec
cmp
addb
xchg
dec
cs
orl
lret
sub
xorb
mov
fwait
outsb
incb
xchg
lret
imul
mov
popa
pop
aas
inc
in
scas
sti
dec
mov
or
cmc
and
push
lods
scas
sbb
enter
call
lods
daa
sbb
enter
in
dec
lea
jb
lods
ret
pop
imul
xchg
pop
out
inc
inc
dec
push
dec
mov
fstl
mov
xlat
insb
ja
push
dec
pop
mov
fsubrl
inc
je
xorb
sub
adc
inc
cmp
adc
ds
dec
pop
lea
sbb
xchg
iret
scas
push
add
xlat
fistps
sbb
test
popa
sub
fcomp
xchg
cmpsl
xorb
cmpsb
xor
stos
dec
cmpsl
int
test
cmp
addr16
insl
cmpsb
sub
push
lds
pusha
pop
mov
cmp
mov
mov
xchg
in
and
mov
jae
xor
adc
sub
sub
xchg
jecxz
cs
divl
insl
pop
push
int3
movsl
mov
fdivs
into
adc
cmp
sub
sub
jbe
outsl
cmp
pusha
cmp
rorl
dec
and
adc
popa
mov
lea
in
sarb
or
popa
push
or
stos
jb
mulb
mov
jne
mov
push
inc
into
test
cmpsb
adc
push
pop
test
iret
dec
dec
sub
in
dec
cld
push
in
mov
xor
push
enter
jg
or
mov
jge
push
xchg
cmpb
adc
imul
dec
mov
sub
rclb
inc
or
ja
shrl
push
insl
jge
sbbl
fucom
pop
jo
mov
mov
cld
cmc
sbb
jbe
out
gs
jnp
sbb
lahf
cmpsb
scas
push
ja
cmp
push
dec
outsb
sbb
jbe
inc
scas
and
stc
inc
inc
mov
inc
rorl
pop
xchg
cltd
enter
subl
mov
mov
jmp
pop
mov
mov
ret
ss
icebp
mov
inc
ljmp
xor
iret
lods
shrl
sbb
jo
ja
lds
mov
repnz
pop
ret
pop
lcall
jnp
mov
cli
arpl
sbb
mov
int
aam
adc
jg
aas
ja
xchg
dec
adc
in
push
lret
ljmp
mov
mov
inc
sti
mov
lea
xchg
mov
in
fisubrl
daa
lds
mov
jne
fbld
xchg
divb
imul
shlb
call
bound
pop
adc
adc
mov
fstps
jmp
jne
cmp
fnstenv
out
mov
popa
fwait
lret
popf
addr16
cld
push
shr
jge
pop
mov
add
jecxz
in
cs
aam
or
push
gs
cld
and
ja
lds
sahf
jns
inc
mov
mov
adc
push
ja
sbb
mov
pop
rorl
mov
stos
and
pop
jmp
pop
inc
loop
jne
sarb
inc
test
or
aam
and
clc
xlat
dec
cmp
push
pop
xchg
call
or
jno
sti
mov
add
sbbl
movsb
aaa
push
or
aas
cwtl
cmp
scas
jmp
mov
int
xor
cwtl
fs
clc
push
pop
sbb
out
aad
cmp
cmc
test
enter
xor
dec
in
popf
dec
aaa
lock
pop
or
inc
or
sti
adc
loopne
call
pop
jns
cmpsb
xchg
cmpsl
xor
fmuls
xor
das
dec
xchg
mov
andl
les
insb
outsl
dec
fisubl
sub
lcall
xorb
dec
jge
or
jnp
ja
xchg
lcall
lods
mov
daa
or
lea
xchg
add
add
ja
cli
test
pop
js
movsl
and
sub
in
and
test
je
xchg
add
jb
ret
cltd
call
test
popf
lret
mov
or
divl
lret
pop
xchg
xor
adc
xor
call
sub
jb
or
pop
jp
dec
add
insl
mov
ljmp
cli
sti
dec
adc
and
mov
mov
shll
pop
popf
mull
adc
test
add
mov
inc
cmp
sbb
xor
cmpsl
call
dec
push
push
pop
cmp
sti
jnp
xchg
mov
clc
or
rclb
cmp
push
push
stos
push
int3
sub
jo
shrl
sub
mov
sbb
shll
push
xchg
or
test
dec
inc
mov
push
aad
nop
inc
aad
cltd
xor
nop
pop
popa
data16
aas
ja
inc
push
fiadds
rcl
pushf
add
test
fisubs
int
out
dec
rol
ret
popa
jno
mov
or
jg
add
sbb
pushf
xchg
jo
cmp
adc
inc
mov
icebp
lods
cmp
fwait
and
xorl
mov
push
scas
inc
jle
push
leave
lods
push
pop
jg
pop
bound
jl
insl
loope
int3
cmp
xor
xchg
es
add
sub
cmc
xor
fsubrs
pushf
jl
jne
inc
imul
xor
fimuls
or
cmp
cmp
inc
fcoms
mov
adc
loop
adc
ret
jp
clc
data16
push
cmpsb
mov
or
lret
jb
push
adc
push
jbe
out
mov
push
xorb
cmp
xor
mov
jmp
je
loopne
cmc
fimull
inc
xchg
sub
mov
in
sbbl
ficoms
sbb
andb
jle
sti
stos
nop
pop
aam
popa
jb
cmp
fisttps
sub
js
or
cs
adc
aaa
iret
jae
dec
pop
or
inc
mov
jl
xlat
sbb
pop
adc
mov
dec
js
cmp
push
and
lcall
sub
or
cmp
cmc
mov
lods
int
push
in
push
cmp
test
pop
and
fcmovnbe
inc
cld
imul
imul
cmp
insl
fldcw
push
fs
adc
mov
fisttps
xchg
dec
pushf
add
xor
inc
movsb
cmpsb
pop
ret
pop
pop
pop
lods
cs
adc
cltd
hlt
dec
adc
aam
sarl
lods
sub
hlt
inc
pop
repnz
cmpsl
daa
imul
jmp
lock
or
mov
cld
aaa
mov
movsl
lret
data16
clc
addr16
xor
jg
sahf
cmpsl
cmp
addr16
xchg
add
fidivs
repz
lods
or
mov
popf
sbb
fucom
sub
sbb
leave
mov
in
add
je
dec
push
out
xchg
test
pop
out
pop
dec
and
mov
or
mov
in
int3
imul
adc
mov
cwtl
imul
test
lcall
adc
movsl
jb
loop
in
ret
clc
xor
sti
jne
fldl
loope
fistpll
cmp
mov
btsl
into
xchg
je
push
add
mov
fdivr
mov
sbb
test
add
jo
xchg
rcll
cs
dec
stc
add
mov
testl
xchg
notb
xchg
or
stos
sub
push
push
aas
lods
cld
shl
mov
gs
js
sub
filds
add
pop
out
sub
xlat
sbb
repz
xchg
loope
xorl
aas
cmc
int3
in
ret
mov
cwtl
outsb
push
mov
inc
out
xchg
loop
addr16
hlt
xor
push
mov
loop
ror
mov
rcl
add
push
fistpll
push
int
stos
pop
and
ret
cmp
ljmp
jns
dec
dec
mov
jnp
mov
fstpl
mov
sbb
dec
add
push
jae
popf
fdivr
mov
int
in
push
add
das
out
dec
jnp
mov
lock
and
test
ja
or
mov
push
mov
mov
mov
cs
sbb
movsb
ja
jns
sub
add
call
repz
push
out
pop
shll
lds
out
adc
adc
sbb
sti
out
dec
jl
pop
stos
stos
pop
pop
int
mov
jl
sbb
and
add
dec
xchg
insl
pushl
xlat
icebp
shrb
mov
loopne
push
jg
cmpsl
outsb
push
mov
push
cmp
sbb
mov
xchg
jecxz
xor
in
mov
jb
loope
lcall
adc
mov
pop
fistpll
ds
sbb
jnp
sbb
sub
call
adc
mov
shll
jle
adc
adc
cmpb
cmp
dec
cmp
and
mov
test
inc
ss
and
push
lret
orl
mov
pop
clc
xchg
ds
mov
int
insb
fisttpl
pop
nop
xor
or
xchg
push
mov
daa
dec
hlt
cmp
int3
and
lahf
pop
ja
or
adc
cltd
xchg
adc
inc
ljmp
inc
negb
push
inc
mov
push
and
rcrb
rcll
jo
xchg
push
pusha
jne
cld
andb
out
dec
cltd
dec
push
sbb
iret
sub
adc
add
dec
cld
sbb
in
pusha
add
fnstcw
lds
cli
xchg
push
push
or
cli
mov
adc
cmp
inc
inc
push
jg
lods
xor
rolb
test
rorl
mov
xchg
cmpb
aaa
mov
cmpsl
sbbb
inc
cmp
movsl
add
push
mov
fisubrs
fldl
sbb
jge
outsl
push
jp
addl
mov
pusha
push
inc
dec
lea
mov
or
inc
or
je
mov
mov
add
mov
ffreep
push
repz
addb
and
add
adc
pop
es
pushf
or
in
test
in
sbb
imul
cmp
adc
mov
push
daa
xchg
push
inc
sbbb
insl
ret
inc
inc
or
inc
inc
pop
inc
push
xor
push
test
and
dec
mov
imul
add
aas
mov
xchg
repnz
sbb
fidivrl
jmp
cld
mov
call
push
jl
push
xorl
dec
jbe
jle
daa
stos
out
push
xchg
aad
jecxz
ss
int
sub
mov
jg
cmpsl
xchg
cwtl
rorl
cld
icebp
mov
mov
movsl
lds
stos
push
incl
lret
sbbb
and
aas
sti
fwait
pop
mov
mov
inc
adc
sub
ds
push
dec
dec
push
add
xchg
sbb
push
mov
jp
inc
out
xchg
js
fisubrl
rcrl
movsl
adc
lods
inc
cmp
lds
movsb
lock
fdivl
or
fs
add
jmp
in
inc
jge
xchg
xchg
xlat
mov
push
pop
mov
xchg
in
dec
mov
popf
sbb
shlb
mov
cmp
iret
jecxz
sub
or
or
jnp
and
mov
pop
mov
xor
arpl
mov
cmp
ljmp
xlat
or
adc
arpl
cmp
stos
dec
xor
outsl
icebp
or
lahf
mov
fbld
cmp
lahf
loope
icebp
repnz
and
push
fwait
mov
mov
mov
xchg
inc
dec
cmc
fmul
fwait
into
das
iret
in
je
xchg
xchg
in
adc
daa
sub
push
adc
lcall
ljmp
adc
sub
ljmp
jmp
or
out
cmp
sbb
shll
xor
xchg
mov
aaa
stos
xchg
adc
or
pop
xor
in
jns
ss
outsb
cwtl
shlb
pop
popa
xor
fldenv
ret
ret
roll
mov
repz
jmp
sbb
ds
sar
insl
xorl
xor
xor
pop
mov
adc
cmp
aad
mov
mov
sub
pop
mov
sub
aad
adc
mov
pop
iret
lods
jbe
jmp
popf
out
pop
or
or
call
jo
xchg
ret
jmp
call
adc
pop
ret
fistpll
lcall
scas
dec
movsl
mov
xchg
cmp
out
jns
dec
push
imul
pushf
fisubrl
or
dec
fstps
pop
aas
rcr
lcall
test
or
xchg
insb
nop
dec
movsb
in
lods
out
aad
inc
or
mov
pop
jns
xor
cmp
cld
add
dec
add
fists
sub
mov
mov
push
mov
sub
pop
push
push
adc
out
mov
ret
fldcw
fsubr
repnz
data16
popa
lods
mov
cmp
je
ret
dec
push
fildll
sti
vmulps
hlt
cmc
mov
sbb
call
fidivs
lock
iret
aas
testl
enter
in
imul
mov
or
fmuls
pop
add
sbb
xchg
mov
or
jle
int
pusha
mov
pop
cwtl
inc
push
in
repnz
rorb
cmp
jb
les
call
push
bound
cmpsl
sub
xor
push
xchg
push
sbb
std
sub
dec
in
fisubs
ret
lahf
sub
xchg
jecxz
and
iret
xor
iret
fistpl
enter
in
xchg
mov
inc
scas
lcall
push
or
cmp
filds
rol
into
mov
mov
mov
lahf
sbb
leave
mov
pop
ja
movsb
das
shl
aaa
mov
lahf
xor
xor
outsl
repnz
popf
mov
in
fadds
lahf
pop
fwait
mov
add
insl
mov
hlt
sub
ficoml
xor
jae
imul
aaa
leave
sbb
scas
inc
add
rclb
mov
pop
and
in
jo
sub
sbb
sub
or
mov
icebp
fiadds
dec
cmpsl
mov
test
jmp
lds
push
and
xchg
pop
fwait
into
xchg
popa
jns
cmp
shlb
test
imul
dec
aam
gs
cmp
push
mov
xor
out
mov
dec
dec
mov
xchg
lods
push
mov
movsl
into
cmp
dec
mov
enter
call
cmp
push
inc
aaa
fldenv
imul
sub
mov
loopne
pop
dec
leave
sbb
push
fdivrl
or
dec
sbb
aas
add
pop
icebp
popa
stc
fldenv
mov
subl
sbb
pop
clc
xchg
movsl
mov
or
mov
xchg
iret
dec
out
hlt
xchg
test
int3
outsl
lods
add
bound
sbb
dec
mov
sub
mov
scas
lods
bound
push
scas
stos
xchg
ljmp
aas
xchg
jg
jns
lahf
mov
xchg
jns
sbb
call
fld
sbb
pop
js
movsl
sbb
cmp
es
in
leave
cmovb
testb
arpl
inc
inc
test
cli
mov
aam
or
std
dec
push
pop
rcl
das
xchg
les
jmp
in
testl
pop
fstpl
mov
jo
or
rcrb
mov
mov
mulb
pusha
je
sub
mov
or
xlat
lahf
mov
fs
scas
sbb
or
adc
ficomps
cmp
and
fiadds
lea
mov
xchg
cmp
repnz
add
mov
mov
sub
and
mov
mov
in
add
lret
pusha
mov
sarb
popf
cmp
sub
jnp
sahf
adc
scas
int
dec
addl
xchg
insb
and
inc
aad
ds
push
mov
add
dec
movsl
nop
jne
faddl
mov
insl
mov
xor
ja
mov
leave
pop
mov
out
into
stos
inc
in
sbbb
leave
dec
movsb
jno
xlat
les
add
push
push
icebp
push
xchg
pop
push
clc
cwtl
sarl
loopne
jp
dec
test
sarl
xor
leave
and
mov
mov
xchg
sub
xor
jg
fstpl
fldenv
sahf
shll
loop
sub
test
idivb
leave
or
nop
add
pop
fwait
or
add
sar
add
lret
and
xchg
rclb
cmp
aas
mov
pop
aaa
dec
lret
lods
hlt
dec
int
aaa
daa
notb
test
push
jmp
inc
popf
xor
xchg
mov
push
push
xor
add
mov
fwait
es
imul
cmp
fwait
mov
or
adc
xchg
or
sub
xchg
inc
add
sub
test
sti
or
add
mov
test
sahf
je
mov
sbb
dec
xor
adc
in
push
or
stc
mov
clc
orb
adc
fwait
cmp
in
fsubs
jb
fidivrs
pop
mov
xchg
jge
sub
xchg
movsl
test
sbb
pop
test
add
xlat
mov
test
add
test
stos
ja
fsubr
insl
scas
sahf
add
push
push
addr16
ljmp
rorl
lods
dec
int
mov
push
jno
jno
into
sub
mov
into
adc
mov
inc
and
cmp
adc
jb
cwtl
jecxz
mov
add
xchg
outsb
insl
xchg
adc
scas
mov
dec
inc
push
scas
movsb
mov
mov
inc
cmp
mov
xor
push
icebp
cmp
xlat
addr16
add
cwtl
hlt
repnz
jbe
fmuls
push
out
hlt
clc
arpl
xchg
icebp
arpl
stc
gs
pop
sarb
jp
rcrl
and
cmp
sbb
test
popa
xchg
negl
or
rcll
cmp
pop
dec
sbb
daa
fwait
nop
adc
xchg
je
lret
or
loop
inc
ljmp
push
std
fistpll
or
rorb
arpl
push
dec
cs
xor
test
clc
out
sbb
add
pushf
adcb
mov
jecxz
dec
and
ss
jmp
add
inc
adc
insb
popf
inc
xor
add
pushf
ret
out
addr16
shlb
ret
mov
into
push
mov
and
ror
dec
cs
mov
cmp
pushf
inc
insb
sbb
mov
push
pop
sub
mov
addr16
xor
int3
mov
pop
sbb
fidivrl
repnz
jnp
or
ljmp
jle
and
mov
push
add
or
cwtl
pop
cmp
sbb
mov
dec
bound
mov
flds
mov
jecxz
add
and
arpl
stos
pop
jg
push
out
mov
jle
leave
aas
sahf
fcmovnu
cmpsl
and
jmp
lea
out
stc
pusha
and
mov
jge,pn
or
pop
push
stos
lea
xor
xchg
movsl
popf
cmp
adc
cmc
xor
andb
add
rcl
lret
sbb
hlt
mov
fwait
jge
cld
shl
dec
cmpsb
add
jae
xchg
ja
mov
push
pushf
pop
imul
pop
cmp
and
inc
and
lret
aaa
cmc
jnp
negb
jo
pop
cmp
xchg
mov
xor
ret
clc
pop
std
outsl
mov
test
into
mov
sub
rorl
sbb
hlt
orl
inc
dec
and
mov
test
ljmp
jbe
push
mov
mov
xchg
push
and
das
icebp
jmp
in
sub
jecxz
rcrb
push
cld
xchg
rclb
mov
cmp
inc
lea
push
mov
mov
jnp
shrl
and
imul
xor
and
xchg
or
cltd
aaa
int3
add
xchg
std
out
mov
sti
lret
fstpt
xorl
popf
imul
adc
aas
popf
iret
mov
jnp
int3
stos
roll
or
dec
aad
xlat
enter
aas
int
test
ret
cmp
test
mov
sbb
mov
mov
push
lcall
daa
jno
movsl
pop
cld
jecxz
loope
fdivl
les
aaa
mov
aam
push
mov
out
dec
les
jne
ljmp
aam
jg
adc
and
mov
pop
movsb
inc
iret
cs
aas
inc
imul
mov
insl
and
pop
in
sbb
cmp
add
inc
adc
fisubs
jbe
test
add
mov
cmp
les
fiadds
xchg
aaa
jl
push
outsl
or
dec
add
inc
sub
pop
stos
xchg
xorl
add
inc
mov
or
or
movsl
das
adc
sub
and
push
mov
in
aad
xor
jp
outsb
lcall
add
je
xlat
add
cmp
pop
sti
scas
sub
mov
lret
mov
add
add
jbe
pop
cmp
sub
mov
cmc
test
gs
ret
imul
xlat
inc
sarl
jge
mov
mov
repz
or
scas
or
jo
mov
lds
iret
lahf
nop
pop
lods
pop
movsl
add
sbb
pop
mov
pop
lcall
leave
lea
gs
push
scas
mov
test
cmp
ljmp
js
add
adc
inc
sahf
sti
push
fisttpl
pop
aad
mov
push
mov
cmpsb
adc
int3
pushf
sbb
mov
lods
push
add
int
subb
sbb
leave
addr16
fisttpl
mov
sub
sub
fcomps
sub
dec
sbb
in
int
enter
adc
ljmp
push
xchg
push
ljmp
inc
cmp
dec
aad
add
push
js
xor
dec
jns
addr16
repz
cmp
inc
mov
shlb
mov
dec
cmpsl
mov
mov
xchg
inc
xor
push
test
jp
cmp
sub
das
shlb
leave
fildll
push
mov
xor
xchg
push
or
filds
cmp
mov
aam
int
and
xchg
shrl
inc
add
sub
popf
pop
repz
gs
lahf
std
and
sbb
push
cmp
inc
jbe
fimull
jne
dec
mov
xor
jb
gs
pop
jae
push
push
into
mov
cmp
hlt
jbe
dec
pop
pop
sub
cmp
mov
fidivrl
insl
fisubrs
imul
sbb
mov
push
or
ud1
shrb
lret
aaa
incl
push
aas
mov
lret
outsb
push
call
xorl
test
dec
dec
jge
xchg
hlt
inc
roll
jge
enter
mov
pop
test
enter
xchg
cltd
cmp
dec
and
sub
je,pt
xchg
sub
insl
ds
imul
cmp
repz
cmp
out
mov
mov
outsl
dec
jne
cmp
mov
ret
scas
leave
adc
jl
in
inc
addr16
mov
inc
push
xor
movsb
andb
sbb
and
mov
and
sbb
jmp
jecxz
pop
and
jge
aam
xor
jae
sbb
mov
add
pushf
pop
cmc
aaa
je
jb
push
movsl
bound
dec
aaa
mov
orl
js
mov
push
add
jp
cs
mov
fmuls
jo
into
mov
mov
clc
aad
xor
and
scas
icebp
insl
fcomps
mov
stos
pusha
pop
fucomp
aad
xchg
or
adc
pop
mov
int
jecxz
roll
pop
das
pop
dec
cmp
mov
clc
sti
mov
jmp
mov
dec
xchg
hlt
js
or
mov
test
andb
int
xchg
mov
int
xchg
test
xchg
mov
mov
adc
bound
mov
pop
adc
inc
xchg
leave
int
sub
sub
mov
and
das
cmp
dec
jg
mov
xor
jg
mov
jecxz
and
ret
mov
andb
sahf
fisubrl
jns
push
xor
dec
shrl
pop
push
mov
sti
nop
subl
jne
gs
lock
sbb
scas
sarb
mov
ret
mov
xchg
sub
es
divb
int3
xchg
xor
notl
dec
mov
aam
or
sub
inc
ds
pusha
lcall
cld
pusha
or
ljmp
jno
pushf
bound
mov
dec
pop
into
cmpsl
jb
jbe
push
dec
xor
ficoml
js
mov
cmpsb
stos
cltd
xor
mov
sbb
mov
jge
push
mov
in
mov
or
mov
ja
fsubp
ret
insb
or
mov
popa
dec
push
dec
test
cmp
fisttpl
mov
js
in
jle
adc
loope
ret
or
fistpll
mov
mov
out
push
mov
add
mull
xor
dec
push
stos
inc
xchg
jg
jl
xchg
push
lods
dec
xor
clc
fcompl
xchg
movsl
dec
sbb
test
repnz
mov
outsl
xchg
shrb
xor
gs
in
and
sub
fldt
cli
sub
fidivs
dec
aad
popf
adc
addr16
and
xorl
or
lcall
mov
jns
jcxz
inc
cmp
test
ret
add
mov
add
jge
xor
mov
scas
leave
cmp
inc
decb
mov
clc
out
cmp
leave
adc
fldcw
or
mov
sub
repnz
dec
pop
mov
test
stos
pop
jae
jns
mov
cmp
cmp
das
insl
sti
in
dec
inc
sub
popa
subl
mov
dec
mov
dec
cld
aas
jp
testl
and
xor
inc
jae
inc
mov
xchg
cmp
dec
movsl
pop
lret
shlb
ret
jmp
daa
jl
dec
sbb
les
fld
das
push
orl
fdivr
pop
mov
inc
movsb
dec
das
popa
rcrl
sbb
push
test
add
push
add
sub
mov
jg
repnz
std
push
imul
rcl
inc
mov
mov
adc
mov
mov
push
jns
add
icebp
test
shll
bswap
mov
out
mov
jo
stos
rolb
addr16
andl
xchg
mov
ret
adc
jecxz
repz
pop
int3
lret
mov
xchg
adc
mov
adc
cli
dec
rorl
jp
ljmp
pop
in
rcrl
push
lods
and
cmpsb
test
iret
arpl
sti
cmp
mov
and
pop
sub
test
ss
dec
popf
fistpll
movsl
int3
mov
mov
andb
fucomp
push
push
adc
and
push
push
movsb
fcomps
sub
test
and
mov
dec
aam
psllq
das
loopne
xor
sti
in
outsl
jl
rcrb
jecxz
add
adc
adc
and
adc
scas
inc
sub
or
jle
xchg
fwait
pop
jb
xchg
iret
mov
pop
je
jp
dec
call
xor
mov
mov
insb
fnstcw
ja
mov
mov
sbb
or
orl
rcrl
inc
sbb
adc
xchg
lret
insl
movb
repnz
aad
cmp
xchg
sti
push
or
mov
lahf
mov
sub
xor
ljmp
push
pop
dec
fdiv
pusha
fcomps
loope
stos
sbb
mov
insb
test
xchg
stos
sbb
insl
pop
sub
push
cli
sbb
jmp
push
insb
push
jae
orb
mov
sub
test
test
and
and
pop
enter
jnp
mov
ja
inc
lods
lods
ds
popa
and
mov
sub
outsb
jp
pushf
loope
jle
outsb
xchg
arpl
popa
je
out
clc
cmp
adc
dec
stos
lea
je
shll
and
fisttpl
shrl
pusha
cmp
rcrb
out
or
lret
enter
insb
cli
jmp
fisttpll
add
jns
or
sub
dec
into
loop
int3
dec
dec
inc
rcll
lods
sbb
mov
not
pop
jo
add
push
roll
sub
add
mov
in
dec
out
cmp
xor
mov
gs
data16
xchg
xor
test
add
je
mull
movsl
mov
mov
dec
hlt
mov
xchg
or
jno
subl
dec
hlt
outsl
dec
bound
jmp
jno
out
aad
rolb
jge
mov
inc
add
mov
ss
lcall
pop
sbb
pop
jnp
je
shll
pop
xlat
fs
jbe
xor
sub
dec
pusha
jbe
xchg
inc
add
mov
lret
sub
or
cmp
mov
cli
sub
jp
push
xchg
push
mov
ds
mov
jnp
out
adc
sub
mov
jb
lret
inc
mov
jecxz
mov
jbe
sarl
inc
outsl
push
mov
loope
xor
push
sbbl
fnsave
cmp
xchg
mov
fdivl
lds
xchg
das
mov
inc
sbb
mov
cmp
push
sar
lock
lcall
jp
adc
add
sub
imul
inc
jo
cmc
imul
mov
stos
jle
xchg
dec
pusha
sub
inc
sub
mov
cmp
cld
mov
mov
test
inc
int
inc
std
inc
mov
dec
mov
dec
je
xchg
xor
nop
mov
jp
xchg
enter
jb
out
xchg
popf
int3
pusha
or
push
adc
inc
dec
lret
out
push
cli
shr
mov
or
push
lahf
loope
push
adc
or
mov
pop
mov
ficompl
lcall
out
push
jnp
faddl
mov
gs
movsb
dec
lea
adc
sti
pop
clc
inc
repz
jmp
cmpxchg
aaa
inc
ss
dec
fisttps
cmpsl
inc
mov
or
popf
add
lret
dec
pinsrw
leave
out
mov
nop
cmp
call
push
mov
jns
test
pusha
nop
jno
mov
xor
fxch
mov
int3
cmp
cmpsb
loopne
mov
mov
mov
test
rorl
push
je
or
nop
pop
jp
in
in
sub
lcall
adc
sbb
dec
inc
daa
mov
mov
fstpt
lcall
pop
lahf
dec
shrw
cmp
mov
stc
push
adc
and
or
jbe
dec
fmul
xor
pop
vmread
xor
mov
stos
pushf
xchg
dec
xor
int3
pop
addr16
add
jle
cmc
cmc
cmp
mov
mov
test
imul
cmp
dec
les
push
inc
jnp
test
push
insl
jmp
fcomip
and
popf
dec
add
std
push
movsl
adc
popl
iret
xlat
sar
or
lea
and
in
push
das
rorl
push
dec
pop
and
lock
push
pop
icebp
push
or
bnd
ljmp
scas
jge
jns
adc
int
inc
stos
outsl
inc
xchg
call
cmp
in
dec
mov
xor
jns
dec
rcr
call
ret
inc
shll
pop
mov
inc
popf
sar
and
mov
jmp
aam
cmp
adc
inc
shll
and
lods
loope
xchg
mov
push
adc
fbld
rep
or
or
in
mov
loope
neg
ljmp
pop
pop
fsubs
shlb
push
shlb
stc
ret
leave
insb
insb
fists
call
xor
inc
repz
dec
sbb
shrb
sub
cmp
nop
mov
dec
mov
jg
add
test
addr16
jno
xchg
popa
xchg
adc
lods
mov
dec
push
bnd
dec
int
lahf
or
shlb
roll
fucomp
mul
aas
xchg
and
add
inc
aam
imul
push
pop
shll
adc
jg
and
sahf
jns
ds
sbb
xchg
push
stos
fadd
and
cmpsb
inc
fdiv
loopne
scas
sbb
inc
push
lods
mov
add
cli
js
notl
jbe
lahf
repnz
adc
ds
or
cmp
mov
fidivrl
mov
fisubrs
pop
mov
dec
cmp
in
leave
sbb
cmp
fiadds
pop
cmc
cmp
dec
test
popl
adc
pop
mov
xchg
faddp
into
daa
sbb
loop
inc
xchg
dec
sahf
sub
pop
andb
movsb
dec
mov
rcrl
test
cs
lahf
imul
adc
sub
popw
mov
in
mov
add
jg
pop
std
inc
mov
sub
hlt
xorb
test
jl
cmp
mov
test
push
and
or
lock
popa
mov
inc
arpl
push
xchg
scas
lods
pushl
and
pop
adc
adc
push
imul
icebp
lods
shl
cmp
int
dec
fmuls
imul
pushl
sub
pop
dec
sub
add
and
jb
aas
cmc
stos
lods
pop
xchg
pop
int3
mov
sbb
or
inc
int3
in
jecxz
int
push
add
sub
dec
popf
inc
jmp
cmpsl
lahf
popf
mov
and
out
nop
push
fwait
mov
push
lock
adc
push
loop
in
loope
lods
scas
lahf
dec
jo
and
mov
test
lods
sbb
xchg
inc
fstps
out
adc
aam
push
test
and
mov
shrd
and
jbe
jmp
fucomip
push
sub
loopne
push
cmp
inc
shll
pop
push
sub
pop
scas
push
sub
incb
xchg
sti
or
sub
int3
into
jae
in
and
cmpsl
sahf
inc
out
popa
ja
push
xor
popa
les
add
push
aas
outsl
lcall
sbb
sub
ret
jae
addr16
mov
mov
xchg
neg
ffreep
push
pusha
scas
lret
stc
popf
mov
inc
stos
ss
add
clc
or
push
jns
pop
rdmsr
popa
jb
js
pop
mov
insl
mov
dec
das
outsb
stos
push
rcrl
ret
dec
mov
add
xlat
pop
lret
ss
gs
out
sbb
jae
xor
out
in
add
rcl
mov
aas
pop
push
out
xchg
xor
mov
mov
bound
inc
or
dec
cmc
sti
mov
push
xor
stc
pop
mov
ds
push
sbb
cmc
sub
insl
addr16
nop
jns
movsb
push
add
pop
sahf
inc
dec
mov
hlt
sbb
inc
xchg
in
stos
out
imul
inc
push
lea
fadds
xor
adc
and
mov
js
nop
imul
arpl
xchg
xchg
fnstcw
inc
sub
fs
lock
imul
add
add
subl
pop
dec
or
jbe
adc
mov
insb
mov
cmc
pop
xorb
repnz
imul
cltd
daa
pop
push
movsb
cmp
notl
mov
dec
rclb
xchg
call
and
dec
ds
pop
jge
lret
lret
lock
sub
aad
xchg
inc
out
hlt
loope
out
pushl
cwtl
imulb
enter
adc
imul
out
xor
addr16
push
mov
aam
addl
and
ss
pop
rcrb
jmp
mov
push
or
jge
dec
addr16
xchg
mov
iret
mov
add
iret
fldenv
leave
inc
inc
xchg
lock
lret
cwtl
mov
sub
fists
mov
add
inc
insb
push
cmp
das
lret
pop
test
mov
cs
pop
and
pop
or
jmp
std
add
jno
xchg
fisttpll
lock
pop
pop
and
in
popf
xchg
sbbb
xlat
sub
inc
push
mov
test
les
pop
popa
dec
pop
fld
int
popf
push
mov
scas
stos
dec
lret
lcall
jne
loopne
or
pushf
inc
arpl
add
jge
test
scas
jecxz
mov
inc
mov
mov
dec
decb
cmpsb
jne
sbb
scas
mov
ljmp
lret
adc
out
push
int3
jge
fbld
and
push
fwait
shl
xchg
sbb
test
leave
aaa
loop
push
xchg
xor
int
dec
dec
sbb
test
sbb
dec
enter
repnz
aam
imull
or
enter
dec
popa
add
gs
jge
push
jecxz
js
sub
test
push
imul
jns
xchg
mov
inc
pusha
cmovl
xchg
nop
mov
mov
hlt
mov
mov
mov
dec
in
sbb
sub
sub
inc
sbb
jp
xor
sub
vmread
inc
push
popa
stos
fmuls
rol
outsl
jb
outsl
push
xchg
ds
dec
loop
cmp
mov
std
xor
push
mov
test
pop
or
jge
ja
fcmovb
pop
into
arpl
in
cltd
push
jns
shll
popa
inc
fcmovnb
test
mov
imul
push
mov
inc
mov
or
bound
scas
sbb
iret
mov
adc
icebp
cmp
call
xchg
xor
xchg
iret
add
mov
imulb
sub
inc
dec
sub
xor
push
pusha
pop
adc
mov
add
pop
add
pusha
insb
scas
xor
jl
or
xor
les
aas
mov
mov
xchg
sub
push
iret
int
cmp
sbb
je
pop
push
insb
push
adc
cmp
stos
add
in
jns
cmc
jo
jmp
lret
lret
cmp
ror
fidivs
cwtl
push
cs
pop
mov
pop
out
sbb
xor
cmpb
or
jo
xlat
xchg
xor
push
fwait
mov
or
fnsave
addr16
test
xchg
sbb
insl
push
movsb
dec
mov
stos
daa
cmp
in
and
test
scas
icebp
jo
lcall
fs
aaa
fidivl
mov
outsl
mov
mov
lret
inc
add
xor
fmuls
inc
mov
dec
pop
mov
xchg
jecxz
push
test
jo
push
push
das
ja
adc
dec
xor
inc
ss
mov
stos
es
push
adc
sub
cltd
outsl
sbb
movsb
jns
aad
sub
push
pop
xor
xor
jecxz
pop
outsl
jns
hlt
int
test
jne
loop
movsb
arpl
push
pop
loop
or
pop
add
xor
hlt
mov
inc
dec
and
in
rorl
and
data16
fadds
mov
das
pusha
inc
sub
fbld
xor
pop
shlb
xchg
or
testb
and
mov
ja
push
iret
scas
add
dec
inc
leave
fists
mov
and
out
xor
pushf
or
sub
ret
iret
insl
sub
stos
mov
mov
xchg
insl
push
lea
dec
fcmovu
jno
rol
pop
je
outsl
aam
out
adc
cli
and
insb
push
data16
jo
inc
push
jge
mov
jg
cmp
mov
into
inc
sbb
xchg
cwtl
in
jge
loopne
pop
or
sbb
inc
sub
inc
jge
pop
es
bound
sahf
cmp
xlat
pop
and
roll
mov
out
ss
arpl
jle
pusha
sub
cmpsl
cwtl
lret
or
push
add
jbe
sub
push
sbb
jmp
outsl
sub
sbb
sbb
push
popf
mov
pop
sub
xchg
jle
or
outsl
mov
daa
fidivrl
fidivs
rcll
jecxz
jl
insb
inc
test
mov
add
outsl
in
fnclex
bound
addb
in
xchg
sahf
sub
loopne
xchg
cld
adc
mov
push
push
cli
pop
test
addb
or
mov
and
push
insb
mov
cmc
sub
mov
mov
lods
in
insl
ss
js
push
inc
sbb
fcoms
mov
lds
dec
add
mov
or
stos
mov
loopne
inc
xor
and
inc
sbb
jno
cwtl
movsb
mov
add
or
imul
mov
js
out
clc
test
leave
pop
je
fwait
test
ret
in
rolb
sub
push
je
dec
imul
sbb
loopne
and
sti
aas
into
pop
setnp
lret
insl
push
xor
into
int3
lahf
adc
lea
dec
add
or
mov
dec
adc
mov
sahf
outsb
mov
fdivrs
aaa
adc
daa
cwtl
in
insl
lods
dec
xchg
out
mov
pushf
cmp
push
jae
dec
sarb
add
jne
shl
sti
imul
test
mov
sti
lock
cmp
lods
adc
xchg
gs
xor
add
sti
lods
add
aad
jo
xchg
push
pop
fwait
dec
rcl
mov
fildl
jge
lods
and
push
jmp
rcpps
psadbw
and
mov
out
push
jecxz
loopne
mov
push
sti
out
mov
mov
jmp
mov
sub
gs
fmul
out
cwtl
hlt
pushf
call
adc
sub
add
out
sbb
cli
aaa
fwait
mov
inc
mov
in
xchg
push
jnp
int
pop
pushw
add
cmpb
and
lods
outsl
cmpb
into
mov
jmp
fcompl
xor
mulb
mov
cs
and
dec
inc
and
sub
daa
pop
lods
sahf
mov
clc
push
pop
pop
cli
and
stc
sub
subb
add
fs
mov
popa
add
lock
inc
pop
sahf
or
imul
sub
mov
jae
inc
sbb
fucomp
mov
xlat
cmp
inc
sbb
mov
or
jecxz
push
cmp
test
repz
movsl
mov
xchg
mov
sub
test
arpl
fadds
cmc
addl
ret
pop
mov
xor
adc
add
adc
loop
and
scas
pop
rcrl
push
cwtl
push
ljmp
int3
pop
enter
je
cs
xchg
or
aam
dec
adc
mov
fidivs
sbb
jne
cmpsl
cmpsl
shrd
pop
mov
bnd
push
cwtl
test
jmp
inc
fstpt
adc
cwtl
into
sbb
adcb
adc
rolb
mov
pop
jns,pn
push
cs
mov
xor
daa
push
xor
arpl
cs
jecxz
cmp
insb
icebp
pop
pop
adc
mov
sbb
sub
sbb
roll
sbb
add
inc
loopne
mov
jns
inc
rcrb
mov
fisubs
jne
leave
jns
add
and
repnz
ret
xor
inc
push
stos
and
movsl
mov
idivb
push
stos
dec
sti
dec
imull
jl
mov
jmp
dec
outsb
mov
push
sub
out
push
and
test
jbe
cld
call
sub
or
sbb
ficompl
inc
push
add
jb
push
aaa
and
aam
imul
add
shlb
data16
mov
cmp
inc
pop
cwtl
inc
cmc
inc
icebp
xor
cs
lret
jle
cli
call
xchg
scas
in
aam
dec
dec
mov
cli
mov
dec
fistpl
dec
frstor
pop
daa
adc
dec
pop
push
mov
pop
cmpsb
add
pop
jbe
outsb
in
add
loope
push
jns
imul
mov
mov
fadd
cmp
jmp
xor
inc
cmp
xlat
mov
ds
and
imul
mov
xchg
movsl
in
js
andb
cwtl
mov
xchg
jl
insl
in
cmp
loope
pop
or
das
push
mov
lods
mov
inc
clc
repz
call
cs
pop
orb
lods
outsb
in
mov
lods
push
or
imull
sub
and
push
fs
sub
out
mov
jmp
mov
mov
xor
sbb
rcrb
rcl
lahf
stc
sub
push
mov
popa
push
xor
icebp
jg
mov
dec
ja
sbb
adc
stos
shlb
jmp
add
xchg
stos
rcll
mov
pop
push
and
xchg
jmp
jecxz
nop
mov
nop
or
mov
mov
mov
rolb
faddl
rclb
pop
fldl
lods
sub
lds
jg
adc
add
or
xor
jl
sbb
mov
stc
mov
cmpsl
mov
in
sbb
orl
out
dec
jo
in
sub
push
lds
lahf
cmp
repnz
xchg
call
loopne
imul
insl
pushf
rclb
lds
jg
jge
push
fwait
xor
shrb
xchg
stos
leave
mov
sbb
xchg
cmp
pusha
inc
int
imul
mov
jnp
sbb
sbb
xor
lock
xor
add
and
mov
xor
xchg
pop
sub
dec
stos
addr16
pop
push
lea
or
cmp
pop
fcmovu
xchg
xchg
sub
ja
cli
lret
lea
push
lcall
mov
or
pop
fimuls
adc
and
loopne
mov
notl
pusha
pop
mov
je
fwait
cmp
out
repnz
push
pop
lods
jle
mov
mov
xor
and
add
push
xor
mov
pop
popf
lcall
sub
or
js
sbb
cmp
in
es
ja
mov
add
fsubl
insb
pavgb
pop
inc
mov
mov
and
shll
insl
and
sub
dec
mov
jmp
iret
inc
push
aam
jmp
xor
into
sbb
sarb
jg
xchg
mov
mov
insb
dec
dec
mov
sbb
outsb
mov
xor
clc
lret
pop
mov
mov
cmpsl
cmc
insb
inc
add
xlat
scas
stos
fisubs
push
insl
mov
scas
add
push
cmp
es
dec
insl
xchg
pop
push
cmp
je
push
stc
add
mov
dec
inc
xchg
and
push
test
subl
mov
mov
mov
mov
xor
shll
pusha
lods
pop
scas
cld
adc
and
shlb
ret
sbb
jb
mov
into
es
aam
or
mov
mov
push
ljmp
pop
push
rcl
ds
push
dec
xchg
add
cmp
xchg
sti
test
xlat
push
mov
aaa
sbb
scas
scas
shlb
int
mov
cmp
mov
or
pop
mov
into
cld
sbb
cmpsb
sub
aad
mov
ret
adc
adc
push
cmpsb
pop
mov
cwtl
mov
mov
jbe
mov
addr16
cmp
imul
into
dec
xor
xor
push
dec
xchg
pusha
lock
push
or
xor
push
loop
add
push
in
xchg
nop
add
fcomip
dec
xor
adc
iret
adcl
std
shl
es
mov
adcb
push
inc
push
fwait
inc
arpl
inc
notb
mov
and
jno
dec
leave
hlt
cmp
pop
fnstsw
push
adc
shrl
andl
into
insb
mov
jle
xchg
aas
mov
or
jbe
lea
aas
mov
pop
mov
mov
int
fldcw
dec
push
movsb
push
ret
cli
xlat
push
push
dec
dec
out
repz
into
adc
loop
fsubrs
mov
leave
mov
add
xchg
pop
inc
repz
ret
rorb
push
pop
dec
cltd
cmp
popf
mov
stos
pushf
adc
xchg
hlt
in
jl
xchg
fisttpl
push
jb
dec
xlat
dec
add
inc
stos
xor
call
xor
in
sbb
fdivs
inc
sbb
push
mov
popa
and
and
push
add
repnz
popf
push
repnz
ljmp
fs
test
movsl
sbb
jb
and
stc
shl
loope
js
mov
or
insb
clc
adc
or
push
scas
adc
pop
push
xlat
rolb
or
cmp
out
xor
inc
mov
dec
jnp
cmp
lcall
fstpt
xlat
mov
leave
mov
mov
hlt
test
lahf
add
lret
lock
fisubrl
sar
dec
pop
inc
fs
aaa
je
pop
insb
outsb
decb
mov
mov
loop
in
push
mov
lret
sub
lahf
cli
das
mov
pop
icebp
push
cmpl
fs
sub
scas
xchg
in
xchg
xchg
stc
jmp
mov
sbb
incl
jae
xor
je
xor
cmc
pop
pop
xor
call
jge
fidivs
dec
shlb
xchg
mov
push
scas
sti
fldt
iret
or
scas
push
shl
and
movsb
jecxz
lea
jle
lcall
int
es
mov
pop
sbb
mov
and
xchg
es
lcall
inc
out
ja
sbb
xchg
cmp
mov
andl
popa
sub
insb
aas
mov
lret
inc
and
or
stos
jbe
adc
jno
pop
or
jno
in
in
les
fwait
inc
push
xor
mov
dec
add
mov
jno
loope
xor
call
fs
pop
insl
leave
adc
push
rorl
or
dec
int3
pop
inc
push
push
icebp
cmp
xchg
out
ss
push
popa
push
out
mov
cltd
adc
push
and
lods
das
movsl
add
loope
pop
and
pop
pop
pushl
xor
adc
in
and
mov
push
mov
or
cmp
jg
xor
sub
int
and
push
fistpll
lock
xchg
rolb
loope
push
fistl
inc
pop
push
and
push
sbb
inc
add
sub
add
mov
adc
xchg
fdivrs
xchg
add
scas
dec
imul
jb
xor
cs
mov
xor
roll
mov
mov
or
test
out
icebp
sbbb
outsl
stos
shlb
subb
into
jno
mov
arpl
movsb
add
iret
lods
and
in
cwtl
cmpsl
sti
dec
or
scas
mov
in
daa
aaa
jg
jle
sarl
js
inc
jg
and
lock
push
ret
sub
jl
insl
pop
and
lea
out
rorl
fisttpll
inc
lods
inc
es
lods
cmp
or
jne
jmp
pop
out
out
xchg
mov
add
je
dec
mov
mov
out
jne
xchg
mov
aam
les
lock
mov
cmp
push
out
lahf
sub
sarl
data16
mov
decl
and
add
shlb
add
push
fldenv
adc
repnz
pusha
cli
mov
clc
jl
pop
mov
jp
into
daa
mov
fisttps
add
and
jp
mov
fisubl
sub
orl
jp
sub
mov
mov
sbb
lods
push
add
aas
test
xchg
fbstp
sarb
mov
pop
push
inc
inc
pop
out
and
mov
mov
aam
and
jl
dec
movsb
imul
icebp
push
loopne
adc
movsl
mov
outsb
sahf
arpl
or
dec
je
arpl
in
stos
sbb
lock
dec
jle
popa
dec
jmp
sbb
cmp
loope
sbb
jno
push
pushf
push
adcl
push
pusha
xchg
push
loope
fwait
cmp
pop
je
aas
inc
cwtl
ds
cmp
ljmp
fdivl
ret
or
inc
sbb
xor
loop
mov
cmp
xchg
enter
push
popa
mov
outsl
inc
jmp
test
push
mov
push
mov
mov
aaa
xor
cmp
loop
dec
ffree
push
dec
adc
pop
cs
jnp
jge
inc
scas
adc
inc
mov
sub
inc
std
in
mov
jnp
push
push
lea
cmc
lds
and
cmpsb
insb
lods
ds
ja
sbb
out
lods
or
movsb
inc
outsb
fsub
or
les
pop
sub
add
pop
jle
insb
mov
fldcw
mov
lret
fildl
fs
scas
inc
jo
mov
out
mov
pop
orl
ret
xchg
mov
popf
or
add
in
test
arpl
mov
mov
dec
adc
test
cmp
add
xor
sub
mov
mov
and
fldenv
jg
imul
mov
subb
inc
loopne
leave
add
hlt
mov
decb
xor
mov
jne
or
sbb
jno
lock
pop
rorl
mov
roll
mov
mov
sarb
and
stc
lcall
mov
or
test
lahf
sub
repz
out
fidivs
out
mov
imul
aam
sub
out
fmull
in
cmpsl
dec
out
xchg
pop
mov
shrb
mov
subb
inc
sub
and
loope
push
pop
xchg
inc
insl
mov
mov
push
mov
and
and
xchg
shrb
ljmp
test
pop
hlt
hlt
je
cmp
mov
rclb
jbe
xchg
ljmp
jae
pushf
hlt
mov
in
push
test
xchg
jg
stos
add
arpl
das
out
subl
mov
inc
push
cld
rclb
adc
ja
xor
cltd
adc
test
push
verw
sbb
movsb
adc
les
cmc
cmpsl
femms
sbb
and
or
jnp
inc
push
adc
ljmp
adc
shll
sub
mov
repz
sub
scas
imul
mov
sub
sub
loopne
fldcw
aaa
or
sbbl
imul
fcomps
dec
xchg
fildll
xchg
insl
inc
sub
xor
loop
dec
ret
mov
add
sub
les
xchg
xor
sbb
inc
and
fsubs
add
stos
xchg
adc
mov
sbb
add
scas
sub
ja
fistps
mov
mov
aam
sbb
stc
ja
adc
push
jb
dec
inc
and
push
xchg
hlt
jnp
nop
or
dec
mov
outsb
imul
into
add
setg
sbb
adc
xor
mov
sub
aad
and
jp
mov
cwtl
clc
cmp
dec
fimull
sub
out
mov
enter
std
enter
lock
das
add
add
pusha
lods
add
shlb
push
out
nop
or
enter
insl
jne
pushf
out
mov
aad
stc
xchg
add
push
cmc
psubusb
mov
dec
incl
cld
inc
or
or
cmpsl
mov
out
int3
scas
adc
push
dec
aam
loop
jb
mov
je
outsl
xlat
inc
mov
rcl
lret
popf
cmp
ljmp
notl
icebp
inc
fdivrl
push
leave
xchg
rcr
jns
dec
mov
xchg
xlat
fs
inc
xor
xchg
mov
inc
xor
test
pushf
and
jb
adc
daa
ljmp
ret
fwait
fwait
mov
popf
xchg
insl
ret
mov
out
jecxz
pop
cmpsb
stc
mov
and
mov
push
test
cmpl
in
fstpt
gs
jge
adc
or
sarl
fidivrl
xor
dec
mov
sub
loopne
out
inc
dec
loopne
inc
repz
sub
xor
sbb
jbe
aam
addr16
mov
orb
xchg
sbb
loop
ret
idivl
scas
fsubrl
addl
mov
leave
repnz
loop
or
sbbl
xchg
ret
jge
cs
ret
lods
cmpsl
xchg
in
dec
push
push
cld
jae
ret
icebp
cmp
scas
adcl
and
in
js
inc
sbbw
inc
cmp
jnp
hlt
stc
loopne
cmp
enter
aam
push
lcall
inc
inc
arpl
add
jb
dec
jl
insb
dec
cmc
sbb
cmp
dec
fsubrs
push
outsb
rorb
int
fldl
cmp
dec
mov
cs
out
adc
or
jecxz
movl
cli
mov
into
cs
hlt
xor
xchg
inc
jnp
push
fstl
xchg
sarb
add
leave
pop
inc
xlat
in
xchg
mov
xchg
popa
inc
mov
out
mov
loope
jp
mov
mov
xchg
mov
rorl
adc
and
pop
cltd
ja
cli
in
test
add
test
adc
adc
fsubrl
lret
pusha
sub
into
pushf
pop
or
mov
mov
push
xor
jmp
mov
cli
movsl
xor
mov
dec
imul
and
enter
fistpl
or
and
xor
jne
mov
popa
cmp
inc
into
add
repnz
outsl
je
sarl
jmp
cmp
cwtl
mov
es
push
js
and
jbe
mov
lock
and
fs
mov
jbe
push
imul
dec
mov
aam
sbb
icebp
shrl
lahf
ror
and
pop
adc
adc
mov
push
xor
mov
in
popa
jmp
push
je
jecxz
iret
push
rcrl
adc
jmp
or
loope
add
rcrb
lock
mov
sahf
lock
dec
ficoml
aas
dec
pop
shrb
out
xchg
mov
jg
xchg
mov
push
inc
cmp
cmp
int
das
push
pusha
mov
lods
add
pop
jb
insb
cmp
addr16
leave
xor
std
imul
enter
push
lock
jl
adc
daa
mov
inc
mov
xor
js
icebp
xlat
pop
das
data16
and
stos
add
loopne
cmp
sub
xchg
inc
xchg
add
xchg
or
pop
notl
in
cmpsl
rclb
test
mov
lcall
pop
fcmove
push
or
mov
pusha
dec
in
push
in
stos
std
push
jns
fstl
mov
mov
inc
xchg
sub
imul
loopne
dec
lret
pop
insb
and
jle
stos
test
jbe,pn
addr16
mov
repnz
or
xor
jecxz
sub
add
sahf
mov
push
lret
rorb
pop
sub
sahf
adc
loop
xchg
adc
pop
imul
gs
int3
xor
or
mov
and
mov
mov
xchg
or
xor
orl
lds
dec
ja
ds
ss
mov
es
ret
sbb
dec
cmc
cmp
mov
xor
test
rcrl
roll
mov
scas
cmp
adc
mov
inc
dec
sahf
stos
xchg
sbb
cmc
add
imul
cmc
lea
push
movsl
add
dec
outsb
daa
pop
and
out
ret
sbb
incb
add
insl
mov
or
adc
add
test
push
cs
lahf
lahf
xchg
jp
insb
cmp
cmp
cmp
movsl
push
sub
mov
imul
scas
iret
push
mov
jg
sub
sar
add
nop
xchg
jecxz
xor
lods
mov
insl
add
add
mov
or
add
dec
std
mov
jg
lods
sub
scas
insb
and
sahf
ja
sub
mov
cmpsl
push
mov
add
jb
dec
lcall
fnstsw
inc
imul
push
jl
xchg
mov
jbe
or
das
cs
test
loope
iret
call
scas
sub
pusha
xor
mov
add
lret
adc
jo
dec
pushf
hlt
dec
jl
fcmovu
sub
in
outsb
cmp
pop
sub
sub
pusha
ljmp
lods
cmp
les
in
xchg
roll
mov
mov
xchg
inc
repnz
jnp
mov
cmp
xor
xor
jecxz
push
jb
cwtl
jbe
sub
xchg
std
mov
aaa
push
jo
xor
icebp
sahf
arpl
xorl
imul
add
or
sub
repz
das
push
mov
aaa
mov
pop
or
xor
rclb
and
lock
fisubs
pop
test
ret
idivb
sar
sbb
lods
mov
daa
sbb
clc
movsl
out
in
rorb
lahf
call
mov
ja
sbb
scas
adc
lds
mov
jns
jnp
jmp
jl
call
into
cmpsl
push
loop
sti
pop
popf
pop
out
scas
inc
mov
xchg
xchg
out
into
aas
ret
jmp
out
repnz
add
mov
mov
imul
add
lret
cmc
sbb
xor
xchg
push
jne
xchg
jnp
cli
popf
sbb
xlat
sti
mov
repz
add
jg
insl
push
pop
mov
dec
mov
shrl
mov
sub
jp
cltd
rorl
mov
dec
xchg
out
les
cltd
pop
jns
xor
es
pop
xchg
movntq
out
cmc
out
or
insb
rcll
or
cmp
jnp
psrlq
out
mov
movsb
cmp
inc
leave
xchg
outsl
add
shl
gs
insb
xlat
dec
mov
clc
sub
add
maxps
push
out
jnp
cmc
cltd
scas
in
mov
ljmp
lock
lods
testb
jmp
or
mov
inc
rorl
fists
fldt
sub
negl
mov
xchg
loop
orl
inc
adc
and
out
jo
in
mov
push
push
shl
lds
lods
xor
jge
in
fbld
cmp
cmp
sub
mov
fdivs
fisttps
repnz
jns
daa
out
sahf
sbb
fisttps
pop
lahf
mov
bound
popf
jmp
cmc
push
inc
xchg
sub
ds
into
clc
cmp
xchg
jo
and
mov
mov
adc
leave
adc
mov
push
sub
lahf
push
mov
ja
ret
mov
jo
roll
lahf
in
outsl
cmpsb
dec
sbb
dec
cld
mov
sub
add
push
idivb
repnz
sahf
stc
dec
push
push
pop
loope
add
cmc
or
mov
fcomp
push
pushf
stos
adc
mov
pop
jae
and
adc
xchg
push
push
mov
inc
xlat
pop
iret
rcrl
xorl
shll
xor
push
jne
dec
imul
adc
ret
mov
sbb
lock
jb
outsl
cmp
or
mov
rcr
pop
out
sbb
dec
aad
or
mov
mov
push
jae
in
sbb
xor
pop
mov
in
cmp
mov
pop
sbb
divl
pop
mov
loope
xor
arpl
xor
xlat
cmp
lcall
addr16
jge
mov
mov
ret
xchg
js
fcom
call
cmp
xor
fcomip
adc
mov
lea
or
add
cmp
sbb
stc
inc
test
pushl
jmp
lret
jl
push
xlat
adc
and
dec
jb
mov
pop
js
fwait
and
push
xchg
mov
cmp
cld
pop
xor
sti
jg
shrl
cmpsb
pop
inc
stos
xor
sub
inc
jo
xchg
cmp
aaa
lea
inc
mov
imul
das
dec
outsl
repnz
std
mov
or
das
sbb
gs
scas
lods
jns
push
xor
popa
pusha
fsubrl
xor
mov
sub
or
sahf
push
pop
cmp
bound
js
int3
xor
jp
pop
and
sub
std
jge
push
iret
lcall
mov
dec
scas
ret
xchg
std
lock
mov
and
mov
jo
sbb
mov
and
adc
cmp
fmul
dec
push
test
inc
mov
xchg
iret
jp
mov
xchg
mov
cli
mov
push
lods
out
push
pop
adcb
cld
sbb
push
adc
cs
jae
or
push
lret
mov
mov
jg
fidivrs
out
xor
ljmp
in
inc
loop
fnstenvs
popf
xchg
lahf
cld
ss
popf
add
push
mov
dec
push
sti
mov
sub
pop
xor
mov
iret
mov
add
xlat
sub
mov
mov
xor
in
xchg
aad
xor
sbb
scas
cltd
sub
xor
ret
int
out
subl
jo
bound
inc
xchg
lds
add
lods
adc
hlt
cmp
stc
mov
cli
fs
sbbb
mov
xchg
stos
pop
mov
pusha
mov
cmp
loope
cmp
xlat
iret
stc
das
scas
mov
fldcw
jb
out
add
scas
and
push
push
outsb
fwait
jnp
jp
out
inc
inc
sub
inc
in
mov
movb
jl
mov
out
cwtl
call
loope
cltd
inc
dec
imul
push
adc
mov
and
idivb
iret
call
pop
jno
icebp
test
lods
sub
repnz
int3
das
loope
gs
mov
outsb
pop
gs
insl
sbb
xchg
scas
mov
lods
les
rcll
jp
xchg
cltd
in
dec
into
cmp
shlb
inc
jg
in
fcompl
test
or
cld
mov
add
loopne
xchg
mov
pop
shrb
icebp
pmullw
pushf
mov
mov
inc
add
sub
pop
lods
sbb
inc
xchg
cwtl
lock
mov
fcom
sub
mull
aaa
aam
cmc
fcmovu
jge
xor
fcmovbe
iret
push
push
popa
pop
cmp
ja
add
and
fwait
cmpsl
jnp
aad
inc
pop
cmp
push
inc
or
cltd
push
mov
jmp
pop
xor
sub
add
enter
outsb
cmpb
in
mov
in
sub
xchg
inc
in
test
pop
in
pop
fwait
repnz
inc
mov
mov
outsl
icebp
movsb
jmp
movsl
ret
dec
ljmp
cmp
in
cmc
pop
in
inc
leavew
fucom
outsb
jbe
sbb
dec
sub
mov
pop
es
inc
inc
sub
leave
push
out
mov
scas
add
sti
and
and
ss
sub
les
in
add
outsl
pop
data16
testb
cmp
pop
add
into
lcall
scas
and
arpl
mov
pop
popa
shl
subb
aaa
mov
popf
out
ficomps
sbb
or
jmp
jbe
sbb
cltd
pop
mov
jnp
mov
into
test
pushf
sub
stos
adc
scas
add
lds
popl
jno
hlt
and
push
mov
pop
push
pop
cwtl
cmp
test
push
add
dec
mov
cli
addr16
push
xchg
lock
loop
lods
jnp
aaa
imul
inc
jg
sbb
cld
xor
cwtl
cmc
ds
mov
pop
cmp
lods
sti
cld
jnp
aas
lahf
cmc
cmp
xchg
mov
shlb
data16
loopne
je
cmovno
test
and
cmp
mov
in
sbb
mov
in
push
add
adc
in
xchg
pop
add
jae
decl
lods
jns
rclb
cmpsb
pusha
fdivrs
mov
lods
js
mov
push
cmp
mov
and
push
xor
rcll
test
testb
xchg
jmp
mov
adc
xor
loopne
enter
sti
popf
jp
dec
mov
pop
scas
aam
imul
mov
inc
lods
and
sub
add
lds
xchg
lahf
xchg
sbb
xchg
fs
rcrl
mov
push
test
mov
popf
mov
fnsave
xor
test
test
fwait
insl
loop
ds
fdivrp
iret
adc
js
pop
xchg
adcb
dec
inc
adcb
add
cmpsb
dec
xor
or
mov
sbb
pop
cmpsb
orl
jmp
hlt
pop
scas
jmp
dec
sub
scas
sub
mov
loopne
mov
sub
xchg
in
cltd
mov
cmc
jmp
xchg
mov
insb
test
adc
aas
rclb
sub
cld
clc
mov
mov
push
inc
decb
in
test
mov
mov
sahf
fwait
xchg
repnz
mov
push
mov
xchg
mov
mov
lcall
dec
out
adcb
xor
cmp
pop
es
nop
mov
jne
subb
push
mov
fcmovb
inc
add
cld
lcall
dec
movb
std
test
inc
fnsave
or
xchg
sbb
mov
idivl
sbb
inc
mov
into
enter
ret
rorb
out
inc
in
xchg
jge
sbb
jmp
add
in
xchg
out
jb
dec
mov
sarl
leave
leave
fsts
and
sarl
pop
fcoml
inc
mov
ss
or
cltd
dec
or
mov
daa
mov
adc
shrl
or
in
subb
lock
mov
in
fidivrl
int
xchg
mov
dec
xchg
mov
data16
jecxz
repnz
fidivrl
jae
mov
cmpsl
inc
pop
out
push
sbb
adc
int3
jns
or
ret
les
out
bound
xchg
and
pop
push
leave
push
outsl
lahf
jnp
push
and
push
lods
insl
lds
inc
out
inc
mov
cmpsl
idiv
dec
loopne
imul
in
pop
enter
and
int3
test
push
add
addr16
push
rcrb
cmp
dec
and
outsb
xchg
xor
xor
pop
xchg
lahf
insl
in
sbb
xchg
cwtl
mov
pushf
repnz
xor
fcmovbe
insl
rcrl
pop
push
inc
or
jnp
in
or
pop
packssdw
xchg
mov
imul
cwtl
daa
jp
jns
ret
sub
push
fidivrs
test
pop
popa
sti
xchg
adc
out
pushf
test
ljmp
mov
xchg
jne
sbb
cs
jns
mov
push
dec
mov
xor
push
outsb
adc
xorl
push
ret
les
imul
cmp
stos
inc
dec
xchg
sub
inc
xchg
jne
mov
dec
add
fldenv
push
pop
je
adc
jne
xor
adc
repz
lods
inc
jl
fdivs
adc
inc
sbb
cld
mov
stc
scas
repz
inc
fldl2e
cwtl
mov
jns
repnz
cmc
push
ret
lahf
data16
test
in
aad
pop
xchg
loope
std
mov
jnp
push
repnz
inc
pop
cmp
lock
pop
mov
adc
negl
xchg
inc
dec
test
mov
nop
arpl
mov
lret
fstl
jecxz
ja
cs
fidivrl
sahf
pop
bound
mov
cmp
jg
data16
test
sub
pop
inc
and
dec
repz
add
sub
stos
sub
fsubl
cmpxchg
scas
dec
test
outsb
ljmp
fucomi
push
pop
mov
and
in
cmp
sti
popa
adc
adc
loop
scas
pop
jo
movsl
sbb
imul
adc
add
adc
aad
or
out
fsubrl
push
or
dec
and
xchg
inc
push
pop
out
sub
push
les
push
outsl
push
mov
lahf
sahf
lods
push
les
adc
imul
repnz
mov
sub
ret
lds
and
fdivrs
scas
aam
in
mov
xchg
fistpll
xchg
sahf
pop
es
dec
popa
pop
cmp
rcrb
pop
jno
push
idivl
ljmp
ss
aam
int
cmp
xchg
mov
mov
or
sbb
movsb
lret
insl
xchg
hlt
lret
add
sahf
push
dec
mov
aad
in
pusha
mov
cs
lods
and
jecxz
xadd
mov
adc
inc
imul
iret
pop
adc
ret
cwtl
push
adc
jmp
mov
mov
xchg
xchg
push
cli
add
out
pop
pop
pop
push
mov
arpl
cmpsl
lods
ret
imul
jl
jo
out
push
jnp
lods
jns
in
pop
cmpsb
push
ja
addr16
aas
lds
add
mov
sbb
and
pop
jmp
arpl
sub
shrb
push
out
xchg
xchg
jne
add
insb
push
imul
jb
lds
roll
clc
out
mov
sbb
jne
jecxz
mov
lahf
out
std
scas
xor
in
cs
push
or
ficompl
xor
movsl
xor
mov
push
pop
shrl
stc
dec
and
inc
sbb
mov
int
ds
loopne
outsb
xchg
fnstcw
xchg
fidivrl
in
jp
aad
lahf
or
jb
dec
insl
repnz
imul
mov
mov
dec
sub
fwait
cmp
xor
mov
scas
dec
stc
dec
repnz
sbb
jge
js
inc
sbb
out
fwait
mov
bnd
sub
mov
decl
test
pop
cmp
test
xchg
cmp
out
adc
or
cmpsl
pop
jb
lcall
add
aam
adc
mov
fdivrp
add
xor
test
pop
ja
lahf
push
js
mov
loop
je
rorb
aad
insl
pop
sbb
mov
or
outsl
pop
xchg
cmp
or
mov
push
ret
fldenv
jo
sub
add
fidivrl
mov
shl
inc
push
test
in
sbb
fnstcw
and
push
and
pop
dec
icebp
sbb
xchg
lret
in
mov
sbb
stc
lahf
gs
jae
sub
pushf
push
ret
jbe
jne
les
jne
xor
mov
lea
lock
ffree
xor
mov
cmp
cmp
mov
inc
pop
and
jne
sub
xor
scas
scas
test
pop
xchg
aaa
xor
movsl
and
mov
pop
loope
sbb
adc
cs
inc
mov
sub
push
in
xor
sub
lret
mul
mov
jns
jmp
dec
outsl
out
movsb
orb
inc
pop
pop
popa
jp
add
adc
mov
mov
cmovno
ret
int
jnp
jne
pushf
lcall
add
outsl
push
jo
addl
lods
mov
fcoms
mov
test
in
fcmove
pop
sub
je
fcmove
pop
ret
cmpsl
push
mov
adc
ret
inc
test
jno
dec
repz
sti
insb
or
mov
jbe
xchg
call
sub
adc
addr16
fwait
pushf
imul
pop
sbb
popf
gs
js
aad
mov
ljmp
into
cmpsb
daa
and
xchg
sbb
int
data16
test
add
andb
int3
mov
mov
sti
push
and
sub
lods
jg
or
rcr
or
push
adc
cli
lods
fadds
inc
orb
out
dec
jg
xor
mov
push
aam
pop
cmp
out
cmp
sahf
mov
stc
adc
sub
js
ret
xchg
push
add
adc
cltd
inc
dec
outsb
pop
aas
cmp
inc
nop
pop
inc
stc
push
ret
inc
ss
pop
sbbl
pop
jo
mov
mov
mov
jne
cmp
xchg
mul
inc
or
dec
xchg
iretw
repz
stos
push
mov
mov
xchg
and
and
sub
popa
mov
sbb
mov
adc
mov
addr16
inc
xchg
stos
inc
mov
xchg
dec
cs
push
and
int3
iret
or
mov
scas
jbe
xchg
mov
push
in
xor
xchg
jge
lock
inc
jl
xchg
loope
scas
lea
jnp
mov
xlat
lcall
mov
in
ss
sbb
sbb
cltd
xchg
movsl
xor
sarb
jns
rolb
pop
push
loopne
push
inc
pop
sbb
pusha
and
fisttps
test
leave
loopne
fwait
sub
ret
sbb
lcall
and
addl
xchg
decl
or
jb
mov
cmpsb
and
cmpsl
out
rol
sbb
adc
pop
pushf
pop
daa
sub
pop
xchg
movsb
frstor
lret
mov
cs
pop
fbstp
and
cmpsl
pop
enter
mov
and
and
test
bnd
adc
dec
mov
adc
in
mov
sbb
push
cli
in
ss
or
loopne
mov
pusha
cmp
fsubrs
lahf
add
mov
lret
lods
xchg
pop
adc
stos
mov
cltd
jge
leave
dec
pusha
or
mov
fcomps
popa
fsubl
inc
outsb
sub
dec
addr16
clc
inc
cmp
jge
jno
sub
jb
jae
pop
lods
mov
aam
mov
jmp
pushf
sub
popf
cli
mov
xor
ljmp
stos
xchg
or
in
cld
iret
ljmp
fstpt
push
lods
push
scas
pop
push
inc
sahf
neg
adc
xchg
xchg
ret
sti
enter
cld
mov
push
stos
push
aaa
xorb
je
sub
leave
jg
scas
or
xor
push
mov
fs
aas
jne
xor
lcall
shlb
bound
mov
pop
jg
adc
push
fsubrs
fneni(8087
daa
icebp
add
inc
mov
adc
jns
jmp
mov
imul
cltd
mov
push
or
ljmp
mov
sbb
fwait
jecxz
inc
pop
sub
xlat
icebp
aam
out
enter
inc
hlt
push
mov
inc
dec
hlt
sbb
and
cwtl
dec
cltd
jb
pusha
mov
jle
cmp
jmp
xchg
test
add
fistps
cld
xor
subl
je
sbbb
out
fmull
dec
pop
push
cli
cmp
sahf
test
inc
pop
in
jecxz
mov
inc
outsb
daa
push
pop
lcall
pop
es
loope
daa
aam
mov
in
mov
add
mov
insb
xchg
mov
sbb
sbb
bound
subb
outsl
stc
or
mov
jbe
mov
fcompl
xchg
jecxz
das
sahf
popa
cltd
sbb
or
shlb
dec
dec
dec
xchg
rorb
xor
test
cmp
jecxz
add
adc
mov
popf
test
mov
inc
mov
out
pop
loope
mov
popf
adc
fdivr
data16
out
jae
loope
and
enter
lds
decl
pop
notb
jb
jg
push
shll
adc
leave
xchg
outsb
xchg
arpl
sbb
push
leave
inc
pusha
scas
dec
insl
or
mov
imul
cld
ljmp
cmp
negl
mov
in
ret
jno
and
ljmp
xchg
xchg
clc
mov
aad
jg
mov
popa
add
xor
push
adc
mov
push
sbb
in
cli
push
icebp
out
mov
sub
sub
stos
andb
and
mov
jmp
cmp
popf
add
cwtl
in
leave
stos
testl
sbb
xchg
scas
imul
mov
popf
subl
dec
je
jne
leave
push
xor
mov
xor
cmpsb
adc
pushf
out
addr16
xor
lods
rcrb
jmp
icebp
sbb
sbb
cld
mov
mov
int
inc
gs
insl
xchg
mov
in
add
out
sahf
ja
rorl
ja
pop
stos
push
mov
xchg
add
fisttpl
js
jp
loopne
mov
mov
sbb
scas
out
data16
cld
add
lock
mov
dec
xchg
rcr
push
and
jg
xor
cmp
mov
xchg
iret
mov
outsl
and
popf
scas
pushf
in
std
cld
dec
mov
sbb
int
and
sub
cmp
cmpsl
fstl
xchg
leave
push
stos
jl
cmp
add
jb
ret
andb
xlat
pop
aaa
mov
cmp
cs
and
sbb
addr16
sbb
fistpl
xchg
fsub
xor
das
inc
fcmovne
mov
jno
lods
inc
std
dec
mov
divb
scas
jmp
lcall
into
cltd
jmp
outsl
dec
pop
xchg
stc
ljmp
packssdw
psllw
rcll
dec
repnz
or
ds
jp
leave
inc
jno
ja
dec
stc
repnz
subl
decl
ja
cmc
add
testl
movb
or
xchg
das
sbb
rcrl
test
mov
push
mov
sub
rorl
jmp
jae
adcl
loopne
leave
arpl
adc
stos
scas
xchg
out
jb
fcomip
adc
jg
adcl
cmp
dec
jg
in
xor
rclb
test
pop
mov
div
dec
decb
icebp
lods
scas
xor
sbb
push
push
mov
or
lret
pop
lods
jae
pop
mov
sbbl
add
gs
ja
jnp
jbe
or
fwait
cmp
mov
sti
pop
out
push
cvtps2pi
or
add
dec
in
xor
or
xchg
test
push
cmp
jo
jp
add
jb
es
popf
sub
shrb
mov
push
scas
and
dec
in
cmp
clc
je
cmovle
xor
hlt
push
mov
test
movsl
mov
adc
movsl
fsubs
in
ret
pop
test
push
aaa
cltd
ss
mov
adcb
ret
cmp
inc
sbb
push
call
lock
sub
and
test
push
xor
stc
jnp
push
mov
xchg
cmp
jp
out
adcb
icebp
les
xor
inc
cs
aam
repnz
mov
enter
mov
arpl
adc
fdiv
clc
xor
pop
call
jle
mov
inc
jo
lea
std
push
cmpsl
xlat
addr16
js
xchg
test
mov
mov
rolb
fsubrl
mov
out
pop
shlb
outsb
xorl
xchg
les
sbb
adc
mov
lock
aaa
stos
movsl
mov
push
adc
outsb
sbb
cli
cmp
xor
sbb
cmc
dec
rcr
adc
ss
xor
or
xlat
movsl
sub
in
xchg
subl
inc
pop
ja
xchg
xor
push
loope
pop
or
in
jmp
loopne
add
push
push
ret
popf
ja
inc
lds
xchg
add
es
jle
mov
xchg
pop
adc
mov
js
sub
jle
dec
push
inc
xchg
jo
push
sub
mov
in
aam
pop
push
or
mov
fists
xchg
ja
test
pop
xlat
push
les
lods
or
or
daa
xchg
scas
cmpsb
xchg
dec
push
mov
mov
pop
push
xchg
jge
mov
test
pusha
inc
add
arpl
xlat
add
daa
sub
fldcw
inc
xlat
jno
gs
lret
pushf
inc
mov
cmpsb
mov
outsl
inc
xor
jecxz
mov
popf
mov
push
fs
dec
ss
sar
stos
sbb
cli
ljmp
mov
icebp
mov
xchg
mov
loopne
mov
addr16
in
loope
push
imul
stos
out
mov
sbb
cmp
sub
lods
mov
clc
or
mov
jo
mov
stc
lods
mov
jp
insb
test
jne
loopne
mov
or
xor
jae
jp
jmp
insb
mov
adc
mov
sbb
mov
push
lahf
jbe
jo
lret
in
into
push
add
popa
and
out
pop
jb
inc
or
xchg
stos
in
sbb
in
jmp
jecxz
jb
jle
sbb
push
rcrl
clc
icebp
cmpsb
cmp
popf
or
or
sbb
mov
push
rclb
jp
adcb
fwait
mov
scas
add
sub
jle
sub
clc
or
inc
or
jns
xchg
jne
or
lds
sbb
jae
lock
ljmp
das
cld
push
pop
fwait
inc
mov
in
fstl
fmuls
or
das
jmp
push
pop
lret
ss
ds
sbb
arpl
out
pusha
add
enter
xchg
out
sarl
lds
mov
sub
repnz
jnp
popf
fistl
cmp
sbb
dec
imul
fwait
xor
pop
leave
push
or
fwait
cmp
or
test
pop
mov
adc
sub
insb
stos
out
leave
sub
leave
lock
jno
rolb
ss
cli
cmp
mov
cmpsl
dec
mov
or
data16
cmp
add
xor
dec
in
xor
dec
mov
xchg
lock
push
mov
jp
out
pop
sub
or
mov
adcb
rcrb
xlat
shr
adcl
xor
cs
cmpb
leave
mov
mov
mov
sahf
sti
into
dec
push
mov
das
mov
cmp
sbb
mov
jmp
int3
aas
mov
ss
lret
dec
es
sbb
dec
and
xchg
pop
xchg
movl
mov
imul
gs
jo
mov
lock
outsb
into
mov
sar
push
xor
jle
push
pop
push
dec
push
mov
xchg
mov
adc
insb
test
jge
hlt
aas
cmp
fucomip
cltd
mov
popa
enter
imul
xor
adc
test
dec
adc
dec
roll
je
shl
inc
iret
pop
ret
push
lret
sub
add
xor
lods
adc
out
in
test
mov
or
xchg
addr16
pop
lods
and
dec
jp
enter
jecxz
imul
sub
or
repnz
in
negw
mov
cli
add
add
add
int
out
xchg
sahf
outsl
xchg
jmp
push
ror
cmp
inc
sbb
jne
cli
icebp
loopne
shlb
push
xor
sub
mov
aad
icebp
clc
hlt
or
stc
js
jns
sub
insb
mov
mov
cmpl
daa
or
shr
pop
jbe
adcl
test
imul
rolb
cltd
sbb
pop
xchg
filds
inc
mov
jo
pop
push
orl
or
lahf
hlt
leave
xor
lret
push
je
and
enter
ret
xor
xchg
dec
jecxz
mov
ret
test
pop
iret
and
xor
dec
cmpsb
and
es
xchg
add
fsubr
and
movl
fistpll
pop
outsb
lret
gs
or
lods
xchg
fptan
in
and
or
pop
dec
or
jno
in
inc
negb
bound
cmp
ss
int3
or
sbb
faddl
pop
test
jb
inc
pop
or
xor
shll
pop
mov
stc
add
int3
fucomi
xchg
imul
inc
sub
mov
orb
fmull
add
jmp
push
lods
shlb
aas
mov
int
loopne
cmpl
bound
xchg
dec
push
add
shr
and
cmp
leave
aam
push
lea
sbb
adc
xor
xchg
mov
ljmp
push
mov
sub
xchg
cmpsl
cld
arpl
pop
xchg
xchg
pop
addb
cmp
dec
test
cmp
rol
xor
add
xor
mov
xorb
cs
test
mov
iret
movsb
fsubr
dec
mov
lods
lcall
xchg
jbe
sbb
lods
add
rcrb
sub
test
jnp
sbb
push
outsb
sub
dec
or
mulb
mov
into
inc
andb
fsubl
jmp
adc
push
add
adc
test
aaa
cltd
push
test
jnp
cmc
mov
mov
mov
test
pop
movsb
cltd
fwait
rcrl
les
popa
xchg
push
pop
ja
enter
sbb
lcall
jne
dec
test
jns
add
out
mov
add
test
lods
frstor
aam
lcall
xor
addb
stc
xor
mov
mov
popf
add
pop
xor
movsl
xor
lret
or
add
xchg
pop
push
ja
mov
lcall
test
mov
xchg
pop
int3
fldl
arpl
aas
fwait
icebp
mov
stos
ds
lods
movsb
loope
jg
push
add
in
lret
jnp
fisubrs
je
jmp
in
adc
scas
cmp
out
push
repnz
dec
jge
pop
mov
ss
jp
sbb
jmp
and
aad
lods
jo
or
dec
daa
test
xlat
sahf
or
jae
std
sahf
sub
pusha
cwtl
aam
jmp
sub
xor
or
add
sahf
dec
les
rcr
insb
mov
ror
jb
jnp
outsl
push
lods
push
mov
shr
push
add
push
xchg
hlt
dec
dec
push
fst
stos
je
xor
mov
andb
rcll
ja
fistps
push
sub
mov
dec
aas
outsl
push
jle
test
nop
hlt
add
fs
sub
test
addr16
test
and
sub
jle
fcomp
out
out
popf
movsl
or
in
clc
push
push
mov
mov
fcoml
inc
jno
inc
dec
cmp
outsl
in
es
outsl
lods
mov
rorb
pop
lea
jg
insl
add
jl
into
mov
test
xchg
push
iret
test
mov
cmp
sbb
push
pop
in
xor
cmpsb
and
mov
scas
cmpsl
lea
repz
addr16
imul
jbe
xchg
sbb
push
jno
xchg
mov
mov
mov
rclb
push
inc
inc
xor
popa
cwtl
mov
arpl
pusha
test
rcrb
repz
popf
sbb
pop
lods
cwtl
mov
pop
dec
push
xchg
xor
dec
pop
js
xchg
stc
into
mov
push
inc
mov
mov
inc
shlb
in
bound
cld
mov
out
lret
movsl
es
repnz
adc
ds
push
mov
sub
push
mov
cmpsb
adc
jbe
cmpsb
push
outsb
mov
loop
lds
pushf
push
add
push
jl
cmp
test
mov
iret
xchg
mov
and
cld
out
adc
arpl
aas
sahf
adc
stos
jbe
push
ss
les
or
push
negl
ret
mov
mov
lret
dec
mov
and
jae
or
push
dec
mov
mov
mov
outsb
and
inc
insb
gs
arpl
rorl
dec
jns
or
add
adc
fidivl
fstpl
ja
lret
cwtl
test
test
ror
jae
ljmp
mov
cmc
out
cltd
push
pop
xchg
xor
push
xchg
pop
pusha
mov
enter
fcomip
cmp
aad
xchg
push
fnsave
mov
rclb
insb
ss
jmp
rcr
cmp
sarl
out
dec
bswap
mov
shll
dec
push
mov
adc
int3
ss
clc
es
sbb
mov
inc
sbbl
cli
jg
xchg
mov
xor
mov
jno
pop
sub
xchg
sbb
push
stos
push
not
mov
popf
sub
int3
lods
dec
pmulhuw
push
adc
jnp
inc
xor
push
mov
inc
imul
jle
cmp
push
adc
push
xor
dec
clc
test
pusha
ljmp
out
pop
jae
das
in
sub
sub
andb
xchg
inc
dec
test
jns
jl
arpl
imul
fldt
sbb
or
push
push
mov
mull
and
icebp
jae
pop
jl
push
fidivrs
mov
xor
insl
or
cwtl
or
nop
xchg
dec
mov
sbb
xchg
adc
and
hlt
std
cmp
xchg
inc
cmpsl
imul
mov
jg
dec
sbb
out
sbb
dec
and
xchg
pop
cltd
test
popf
dec
lahf
or
test
cmpsb
sub
imul
jns
push
cmc
dec
clc
lcall
inc
rcr
imull
repz
outsb
imulb
xchg
jnp
mov
mov
jge
lcall
lret
xor
pxor
popa
sub
xlat
jmp
add
mov
lahf
por
es
je
bound
inc
mov
insb
xchg
frstor
ror
fstpt
ret
push
lret
sahf
mov
add
out
sbb
push
call
pop
or
arpl
bound
sar
scas
stos
arpl
adc
daa
adc
xor
in
mov
nop
xchg
iret
int3
push
xchg
or
sub
or
mov
lret
das
jmp
add
lcall
lods
add
mov
mov
pushf
jno
js
mov
lock
pop
xor
or
mov
sbb
fistpll
nop
push
lds
in
inc
sub
ja
pop
push
and
sub
pop
xor
adc
xchg
scas
rcrl
inc
ficompl
xor
jl
mov
inc
xchg
push
dec
out
int
lea
ds
and
mov
mov
pop
cmp
popa
inc
mov
int3
lds
dec
inc
outsl
inc
call
aam
jg
int
adc
repnz
sbb
mov
mov
loopne
inc
sbb
xlat
rcpps
push
xchg
sub
mov
dec
int
pop
bound
fdiv
mov
lods
cmpsl
xor
int3
cwtl
xchg
call
dec
repz
lods
std
rcrb
jmp
mov
bound
rcl
pop
into
inc
mov
in
pop
jge
lock
mov
data16
popf
std
sbb
jns
mov
and
in
and
push
and
ljmp
ret
push
pop
lods
ficomps
rcrl
sbb
dec
scas
fnstenv
jns
jno
addl
and
mov
stos
mov
mov
adc
push
and
cmp
or
idivb
lods
lds
shr
sbb
ljmp
pop
adc
aad
jge
push
cltd
shll
inc
in
inc
adc
xor
incb
and
mov
sbb
popf
sub
push
inc
push
lahf
xor
sbb
xchg
repnz
sbb
mov
ficompl
mov
pop
xlat
imul
cmp
mov
jne
fwait
cs
adc
xor
ds
xor
repnz
bound
popf
jmp
lock
movsl
push
add
notb
leave
dec
ficoms
dec
sbb
xchg
out
xchg
data16
mov
clc
shll
lods
dec
fs
sti
mov
and
xchg
xchg
cltd
or
inc
or
rcl
mov
aas
adc
xor
push
pop
divb
xchg
pusha
aam
leave
lcall
aas
pop
ss
je
mov
mov
jns
push
sbb
aam
inc
xchg
dec
into
repz
loope
xor
hlt
xchg
mov
js
or
loope
fildl
jae
dec
fcomps
xchg
push
push
call
inc
sub
mov
cmp
mov
mov
fs
mov
fs
xchg
jp
jno
loopne
nop
sbb
js
adc
inc
xor
add
enter
insb
mov
pop
pop
xchg
lods
flds
enter
test
jne
sub
jno
call
or
sub
jg
test
test
sub
test
xlat
ret
jg
and
lret
pop
shl
scas
xor
or
dec
lret
rorl
xchg
jp
pushf
into
pop
mov
sbb
ljmp
jl
dec
push
add
daa
xor
arpl
sub
and
and
cmp
or
xor
push
jmp
and
or
lock
je
mov
setl
adc
insb
sbb
aam
cmp
xor
inc
jecxz
mov
mov
add
or
pop
adc
in
push
sbb
insb
adc
stc
jl
adc
in
dec
xchg
pop
in
dec
leave
jg
sbb
out
mov
adc
sbb
cmpsl
or
cmp
std
xchg
out
fisubrl
pushf
fbld
pusha
xor
out
add
loop
sbb
jge
mov
jecxz
xchg
insl
push
or
in
pusha
or
sub
pop
testb
test
xor
clc
adc
sbb
inc
adc
outsl
ds
popa
test
sbb
test
jg
add
ret
andb
and
pop
adc
push
std
js
mov
pop
stc
adc
lea
movsb
pop
pop
pop
jecxz
inc
pop
sub
pop
sahf
js
shl
jecxz
sbb
std
fsts
inc
rcll
mov
int3
ljmp
inc
aad
lahf
lock
mov
add
scas
sbb
sbb
shrb
sbb
lret
loop
test
repnz
subl
leave
add
or
lock
dec
inc
or
je
daa
mov
mov
cmc
addr16
cmc
loop
xlat
pop
lret
lahf
mov
lds
mov
in
js
cmp
lret
push
inc
mov
bound
sbb
pop
pusha
cmpsl
pop
pop
mov
fwait
cmpsb
cmpsl
mov
dec
lret
movsl
jp
je
aas
fsubrs
sub
aam
inc
cmp
sub
pop
fstpl
shlb
jnp
adc
push
mov
mov
jnp
mov
insb
sbb
mov
ds
repnz
or
loope
js
mov
sub
adc
push
test
pushf
loop
inc
std
sub
pusha
pop
shll
sub
inc
clc
divb
or
jle
jge
mov
mov
cmpl
orl
test
scas
loop
popa
loope
icebp
mov
insb
xor
mov
inc
lods
and
aas
pushf
xchg
bound
inc
adc
in
jae
xchg
jae
dec
in
imul
fildll
cmp
dec
adc
test
mov
xchg
mov
fbstp
jl
inc
add
push
test
mov
and
xchg
fists
scas
or
pop
cmpl
test
fwait
les
shl
jl
les
mov
aaa
cmp
ljmp
sub
fidivl
in
mov
out
addr16
daa
insb
ficoml
fsubs
mov
loop
and
adc
pop
cli
fwait
inc
or
fsubl
or
push
loop
repz
mov
pop
test
xchg
dec
aad
inc
out
mov
jae
mov
pop
jnp
sbb
adc
shlb
or
neg
pop
inc
mov
ja
xchg
sub
mov
outsl
mov
es
mov
jnp
and
ja
sub
xchg
add
in
mov
cmpsl
imul
stos
popf
jne
sub
ja
cwtl
mov
mov
sub
xor
leave
imul
lret
mov
repnz
shlb
cwtl
jg
lock
out
sub
push
or
mov
sbb
loop
cs
insb
adc
je
fisubs
push
and
cs
cmc
sbb
fists
jp
or
mov
cmp
out
imul
int
mov
or
and
xor
jmp
lret
dec
popa
sbb
xor
or
pusha
mov
fdivrs
mov
pushf
cmp
add
out
adc
or
mov
pop
insb
sub
sbb
add
shlb
call
xchg
xchg
jno
sbb
jmp
stos
pop
push
movsb
rcr
push
xor
test
xchg
rorb
jb
xchg
push
mov
jno
lock
imul
std
jl
push
jecxz
aad
icebp
add
push
lret
mov
jp
mov
and
fdivl
data16
jnp
push
mov
xor
stc
mov
mov
jns
fiaddl
sbb
dec
and
sub
movsb
pop
in
push
fistpll
mul
loopne
nop
mov
mov
div
sarb
lcall
inc
scas
xor
popf
mov
push
std
sbb
mov
sbb
inc
sbb
adc
cli
mov
xor
push
inc
cmp
sub
lea
popa
inc
loopne
push
xchg
shrl
inc
xchg
ss
test
shll
pusha
lock
lcall
jge
imul
ss
or
cmp
je
aad
movsb
mov
pop
mov
ret
ret
add
fxam
push
dec
inc
loope
cmp
sbb
popa
out
or
xor
mov
sub
js
addl
clts
cmp
clc
pushf
mov
in
in
add
aam
push
call
cmp
rcrb
sub
dec
push
movsb
lds
pop
loop
dec
mov
arpl
push
pusha
inc
movsb
jg
je
ss
lahf
dec
lock
inc
clc
int3
sti
mov
push
fs
fiaddl
mov
gs
push
push
jp
pop
lret
mov
shr
pop
aam
sub
cltd
mov
cmp
outsl
repz
aas
mov
jecxz
xchg
hlt
rolb
jge
xor
scas
sbb
mov
push
mov
pop
dec
bound
xor
je
dec
mov
xor
mov
adc
shlb
fwait
push
mov
jbe
cmp
into
js
out
mov
mov
mov
push
lret
fcoml
sub
inc
mov
sub
add
repnz
cmp
jg
sub
sbb
sub
dec
dec
movsb
mov
jmp
adc
xlat
inc
shlb
lods
push
in
fwait
and
test
repz
cmp
xchg
pop
mov
les
insb
sbb
pop
adc
push
mov
cmc
jle
clc
dec
lcall
out
xchg
testl
in
ljmp
jmp
jb
xchg
mov
dec
ljmp
stos
mov
test
sti
mov
mov
ds
dec
sarb
loope
cld
ss
and
pop
push
sub
jne
sub
mov
sbb
jge
fidivrl
jle
pop
jno
loope
add
nop
push
mov
push
sar
cwtl
cmp
add
adc
sub
cs
stos
jmp
mov
das
push
inc
std
mov
mov
sbb
add
xor
xchg
imul
mov
andl
inc
fdivs
fsubp
ljmp
cltd
dec
mov
sbb
ds
adc
and
lods
call
sub
lahf
dec
iret
sub
push
dec
xor
or
jnp
addl
dec
hlt
stos
je
pop
jmp
xor
imul
xchg
xor
dec
or
inc
ja
mov
ret
and
stos
fdivrl
test
test
pushf
and
push
xor
push
bound
mov
loop
mov
jae
mov
ss
outsb
xorb
arpl
push
rorl
arpl
push
adc
add
cmp
cmpsb
mov
dec
add
scas
fdivrl
scas
cmp
add
lcall
and
mov
inc
out
outsl
sub
and
xchg
ja
out
xchg
stos
mov
int
divb
xlat
int
xorb
adc
in
in
addl
cwtl
sub
add
adc
jge
dec
xlat
stos
jno
push
or
leave
gs
cwtl
push
add
sub
loopne
xorl
xor
loop
push
mov
negb
cmp
mov
lods
push
bound
aaa
pop
jns
mov
sahf
test
mov
subb
stos
sbb
movsl
je
mov
ss
out
inc
in
bound
mov
pop
sub
jae
push
ret
push
adc
div
mov
in
adc
insl
gs
out
add
xchg
and
cmp
scas
popa
push
lret
test
hlt
lods
adc
scas
xchg
ja
int3
push
xor
div
jae
push
in
popf
inc
jnp
add
test
mov
xchg
orl
movsl
jl
pop
repnz
fnstcw
inc
xor
mov
inc
fdiv
movsb
fsts
add
add
lods
jmp
pop
in
mov
jle
or
cwtl
sti
mov
push
sub
lods
cmp
loopne
sbb
mov
mov
mov
sub
cmp
dec
sahf
aam
push
xchg
jge
outsl
sbb
scas
or
adc
fadds
mov
int
adcl
sub
lret
mov
mov
andl
and
pop
gs
nop
sub
leave
dec
ret
xchg
in
pushf
cmp
imul
arpl
test
nop
in
jecxz
repz
or
icebp
pop
pop
daa
xor
jae
pop
dec
mov
sbb
imul
xchg
mov
xor
and
dec
mov
push
sub
outsb
xor
repnz
mov
cmpsb
sbb
jo
imul
mov
dec
pop
xchg
mov
dec
orl
je
or
adc
add
pop
out
cld
cmp
adc
and
cltd
jae
jmp
shlb
jp
mov
fisubrs
icebp
mov
or
lcall
jge
call
xchg
in
js
cld
addr16
adc
push
test
nop
add
mov
in
mov
repnz
adc
in
cmp
jge
pop
adc
fsubrl
stos
mov
loope
xlat
fcoms
add
ja
icebp
add
sahf
filds
ds
pushf
aaa
rcr
sbb
bound
rclb
sbb
inc
dec
dec
jge
nop
inc
repz
pop
adc
sub
imul
cmp
and
and
int
adc
scas
jne
mov
sbb
seto
cmpsb
or
lret
fldenv
sub
inc
pop
pop
fidivs
cmpsl
ds
es
dec
and
leave
test
pop
aas
jae
mov
movsb
xchg
mov
add
xchg
out
out
lcall
js
dec
ds
push
je
sbb
adc
js
push
add
adc
aam
stos
xchg
inc
mov
mov
lock
push
mov
xchg
sub
or
fst
mov
stos
mov
xchg
mov
push
or
adc
cmp
inc
in
jae
xor
push
adc
outsl
sahf
mov
add
mov
adc
mov
mulb
rclb
mov
data16
or
pushf
std
pop
aas
fcmovnb
jg
cmpb
sub
or
mov
negb
movd
ja
std
sbb
lea
icebp
cmp
mov
popa
dec
dec
inc
pop
cwtl
aaa
jle
rcll
dec
xor
gs
mov
loopne
dec
imul
ds
mov
xor
aaa
stc
pop
out
ds
cld
jbe
xchg
leave
jp
jb
ud0
jbe
jns
stos
pop
imul
xor
cmp
push
mov
jae
les
adc
lods
cwtl
and
pop
lahf
flds
fbstp
and
mov
cwtl
test
ljmp
shl
leave
mov
adc
push
push
jbe
cmp
gs
lcall
outsl
icebp
cmc
push
mov
adc
push
push
insb
adc
pop
and
je
faddl
or
je
cmp
repz
inc
loope
pavgw
jg
xor
cmpsl
jle
sub
subb
ret
fsub
int3
sub
cld
incb
mov
inc
pop
xchg
sub
cmp
pop
mov
cmc
adc
xor
adc
in
cmp
mov
mov
cmp
sub
int
mov
sbb
out
dec
sbb
xor
out
dec
xchg
out
fprem
fsubrs
fs
pop
fsts
xlat
jno
or
inc
xchg
and
dec
add
test
cmpsl
arpl
cli
bound
push
mov
jb
inc
adc
das
decl
push
jg
inc
xor
add
outsl
or
or
push
dec
jno
sbb
jl
jno
out
lock
movsb
shrb
xchg
jmp
daa
aas
mov
adc
mov
xchg
pusha
pushf
dec
movsb
arpl
jle
push
pop
mulb
out
sub
or
mull
int3
jne
in
test
xor
adc
cmp
stos
jno
or
xchg
push
ficomps
out
fidivl
out
or
adc
stos
cli
call
xchg
push
mov
mov
addb
enter
fistps
or
xor
hlt
sbb
jge
loope
jecxz
gs
cmp
push
pop
aaa
orl
cmp
jo
cld
mov
js
lock
dec
out
cmp
add
inc
rol
jns
cltd
push
mul
push
loope
divl
cmp
adc
pop
add
daa
dec
sti
adc
push
rclb
jnp
dec
leave
sbb
add
out
cmpsb
fwait
stc
ficoms
pushf
xor
scas
pushf
int
push
cmpsb
add
aaa
add
adc
daa
sbb
pop
sub
sbb
jmp
fldenv
xchg
in
adc
mov
cmp
ret
mov
mov
pop
xchg
sub
xchg
ljmp
or
mov
subb
push
push
jge
lret
loope
mov
sub
xor
jno
pusha
je
jp
add
xchg
ror
push
into
clc
push
jge
lret
and
loop
cmc
notl
std
fnsave
adc
adc
lds
repnz
fcoms
imul
movsb
push
loopne
shrl
int3
sub
jmp
les
dec
pushl
js
push
rolb
cmp
mov
cltd
lock
cmove
sub
mov
ja
scas
in
rcr
loopne
push
mov
pop
lods
push
mov
sub
outsb
loop
mov
repnz
mul
scas
xchg
pop
test
shrl
iret
scas
ja
stc
cmp
leave
aad
icebp
xor
and
inc
fbstp
mov
mov
popa
dec
dec
xchg
pop
sahf
cmp
int3
loop
add
xchg
lods
aaa
fsubs
sub
pop
cmp
fmull
aad
jnp
mov
inc
lea
adc
ret
adc
shll
sbbl
scas
cpuid
jg
sbb
or
fimull
roll
sub
and
push
xlat
orl
mov
addb
addr16
jae
sbb
push
cmp
daa
xchg
rol
rcl
mov
dec
mov
inc
jl
cmpsl
ja
jbe
aas
add
mov
pop
movsl
sqrtps
mov
cmp
and
sbb
ljmp
pop
popf
or
inc
mov
mov
insl
in
fstpl
daa
jnp
repnz
loop
jle
pop
addl
pop
dec
adcl
dec
pop
addr16
jp
pusha
stos
sbb
adc
xchg
ja
adc
lret
and
sahf
mov
mov
aas
stc
pop
push
loopne
sub
out
pop
popa
dec
or
movsl
movsb
lods
lahf
mov
jb
int3
xor
add
mov
add
popa
sub
hlt
shl
add
jb
divl
test
sti
jg
push
int
test
adc
mov
faddl
std
popf
lea
arpl
push
je
push
and
adc
jecxz
and
push
out
testl
xor
out
roll
call
cwtl
dec
mov
ret
hlt
cmpsb
sarl
lcall
hlt
add
adc
xor
mov
mov
jo
lcall
jns
jae,pt
dec
lret
or
gs
imul
jo
inc
scas
cltd
cs
or
cmp
out
adc
gs
mov
adc
cmp
lret
shlb
cli
cld
adc
sub
mov
arpl
push
add
pop
lods
cwtl
mov
lret
loop
inc
fisubrs
sbb
cli
ret
lret
pop
xor
mov
adcb
js
pop
inc
push
xchg
fwait
pushf
lcall
aad
and
jnp
loop
cmp
jle
mov
or
lret
inc
loope
in
fst
in
inc
cmpb
into
sarl
sbb
jne
pop
mov
sti
movsb
inc
dec
stos
adc
jmp
add
cwtl
lret
out
rolb
mov
xor
xor
jno
sahf
dec
jmp
pop
ret
or
jp
or
stc
sbb
nop
mov
cmp
ljmp
cmpsb
sub
xchg
lock
je
and
repnz
in
arpl
enter
or
js
and
and
jg
xor
mov
push
ret
testb
js
lcall
loop
jo
or
mov
idivl
mov
lds
hlt
mov
inc
xor
jge
popa
cli
fs
jecxz
insb
jmp
daa
rcrl
jo
imul
pop
mov
or
out
lods
add
mov
cmp
xchg
ja
jae
sbb
mov
add
cmpsl
or
ss
xchg
pop
mov
int
xor
xchg
repnz
jno
cwtl
xchg
or
out
pop
ret
sbb
mov
pushf
jne
xchg
dec
xor
lods
sbb
repz
in
nop
and
lods
jl
add
aaa
and
xchg
inc
test
enter
sub
and
dec
xchg
xor
data16
fst
sbb
xor
push
imul
movsl
sbb
repnz
aaa
mov
lret
cli
out
push
dec
daa
push
iret
push
fcoml
in
pop
jns
cmp
xor
and
mov
stos
nop
shrb
cmp
ja
inc
mov
cmp
dec
call
adc
push
test
dec
and
loope
std
clc
dec
xchg
out
pop
push
arpl
mov
std
sub
push
mov
push
rsm
pop
aaa
add
iret
mov
mov
test
push
xor
shl
or
dec
mov
ljmp
sbb
sbb
xor
xor
mov
adc
ret
jg
jae
xchg
push
xchg
test
popf
iret
cltd
loopne
xchg
xor
adc
int
jge
jp
mov
xor
pop
pop
fiaddl
in
and
mov
xchg
ret
pop
cmp
mov
pop
pushf
fldt
cmp
insb
stos
dec
xorl
pop
mov
adcl
mul
movsb
push
lcall
ja
mov
sti
inc
mov
ficompl
jo
test
sub
xorl
mov
ljmp
lahf
pop
div
sahf
testb
jecxz
shll
xor
jge
insb
lea
push
and
mov
dec
mov
lock
cs
mov
repnz
adc
fdivr
push
pop
les
jb
or
js
insb
rolb
out
inc
aas
ret
cmpsb
test
jmp
jae
pop
cmp
repz
in
mov
je
loopne
sbb
je
jne
and
ljmp
adc
in
cmpsl
loope
bound
subb
sbb
gs
stos
xchg
leave
xchg
outsl
cmp
jl
pop
jmp
ret
or
arpl
ss
into
insb
lcall
sub
mov
and
lea
pop
pop
lock
and
imul
into
dec
cmp
scas
push
jle
lods
das
add
rcrl
mov
dec
inc
mov
mov
test
addr16
insb
mov
mov
sbb
mov
out
js
inc
rorl
cs
push
scas
out
mov
aas
call
adc
leave
call
jbe
lods
pop
faddl
rcrl
mov
push
je
mov
inc
repnz
icebp
out
ret
aad
negl
aad
sub
or
sub
cmovle
sbbb
movsl
sbb
ss
jp
lret
and
imul
and
xor
clc
mov
push
arpl
push
xor
into
movl
dec
testl
pop
out
jecxz
and
mulb
jbe
mov
loope
les
lcall
shlb
cmp
call
shrb
xchg
dec
push
mov
mov
mov
outsl
aad
cs
xor
inc
stos
pusha
test
mov
jmp
sahf
pop
out
mov
addl
lods
mov
or
lret
neg
cmp
dec
mov
mov
iret
addl
sbb
cmc
ffree
rclb
lods
gs
jecxz
lods
inc
and
xchg
jg
cmpsb
enter
sub
inc
adc
add
xorl
dec
aad
pusha
xor
adc
add
faddp
and
loopne
movsl
push
or
add
out
repz
xchg
push
cmp
cmp
bnd
imul
pop
dec
in
cmpsl
movsb
mov
push
add
mov
add
push
push
push
push
push
push
push
call
mov
cmp
jne
call
pushl
call
pushl
call
push
push
push
push
push
push
push
call
mov
call
pushl
call
call
pushl
call
push
pushl
call
pushl
call
call
pushl
call
push
push
push
push
push
push
push
call
mov
cmp
jne
pushl
call
push
pushl
call
pushl
call
push
push
pushl
call
call
mov
call
call
push
push
push
push
push
push
push
push
call
mov
pushl
pushl
call
pushl
call
call
mov
pushl
call
call
push
pushl
call
call
push
push
push
push
push
push
push
call
mov
call
mov
push
pushl
call
push
push
push
push
push
push
push
call
mov
mov
mov
xorl
push
push
push
push
push
push
push
call
mov
cmp
jne
addl
call
jmp
pushl
call
lea
push
push
push
push
push
push
push
push
push
push
call
mov
cmp
jne
push
push
pushl
call
call
push
pushl
call
push
pushl
call
push
call
pushl
push
pushl
call
push
mov
mov
push
push
push
push
push
push
push
call
mov
push
push
push
push
push
push
push
call
mov
subl
push
push
push
push
push
push
push
call
mov
addl
call
call
push
push
push
push
push
push
push
call
mov
cmp
jne
call
leave
ret
cli
fidivl
xor
mov
fdivs
fcmovnbe
jle
outsb
dec
out
sub
push
mov
mov
shr
mov
mov
sub
addl
roll
add
roll
xorl
roll
rorl
negl
xorl
add
dec
jne
leave
ret
es
dec
cld
add
mov
