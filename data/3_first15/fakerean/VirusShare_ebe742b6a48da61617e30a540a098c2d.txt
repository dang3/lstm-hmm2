sbb
pop
and
pop
add
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
jne
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
pop
sub
pop
neg
sbb
pop
and
pop
add
add
ret
cmp
jne
pop
pop
pop
mov
pop
add
ret
push
push
call
lea
push
push
push
call
add
cmp
je
pop
pop
pop
mov
pop
add
ret
cmp
jne
lea
push
push
push
call
add
test
je
mov
cmp
jne
push
push
call
mov
lea
push
push
push
push
call
add
test
je
cmp
je
lea
push
push
push
push
call
add
test
jne
cmp
jne
push
push
call
mov
push
dec
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
mov
xor
add
cmp
mov
mov
es
inc
add
add
js
dec
jl
add
and
cmp
dec
lea
push
push
push
push
call
add
test
je
cmpw
je
lea
push
push
push
push
call
add
test
jne
cmpw
jne
mov
mov
mov
pop
pop
pop
pop
add
ret
cmp
jne
push
call
mov
add
test
je
lea
lea
push
push
call
mov
mov
lea
add
test
movl
movl
movl
mov
je
mov
lea
push
push
push
push
call
add
cmp
je
cmp
jne
mov
lea
jmp
cmp
jne
mov
lea
jmp
cmp
je
lea
push
push
push
push
call
add
cmp
jne
pop
pop
pop
pop
add
ret
mov
mov
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
mov
inc
test
jne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
xor
mov
test
je
cmpl
jne
inc
mov
test
jne
ret
nop
nop
nop
nop
nop
mov
push
lea
push
lea
lea
push
push
push
push
movl
call
push
mov
call
add
cmp
mov
ja
mov
pop
pop
ret
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
mov
push
mov
xor
mov
test
jbe
test
je
mov
inc
cmp
jb
xor
cmp
setne
dec
pop
and
ret
nop
nop
nop
nop
nop
nop
push
push
push
call
mov
xor
add
cmp
jne
pop
xor
pop
ret
push
call
add
cmp
mov
jne
push
call
add
xor
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
push
call
push
mov
call
mov
mov
add
mov
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
lea
push
push
mov
call
mov
add
test
jne
push
push
call
add
jmp
xor
push
push
call
mov
add
test
je
cmpl
jne
push
push
call
lea
push
push
call
push
push
call
mov
mov
scas
repnz
add
adc
add
inc
add
add
mov
add
cmp
jae
mov
fwait
loopne
add
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
test
je
mov
sbb
inc
add
add
mov
add
cmp
jb
push
push
call
add
inc
push
push
call
mov
add
test
jne
mov
test
jne
push
push
call
mov
add
jmp
pop
pop
pop
mov
pop
add
ret
push
push
call
mov
add
mov
test
je
xor
push
push
call
add
test
je
cmpl
jne
lea
push
push
push
call
add
test
jne
inc
push
push
call
add
test
jne
mov
test
je
mov
test
je
test
jbe
mov
push
push
call
add
dec
jne
push
push
call
mov
push
push
call
push
push
call
add
xor
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
push
push
push
mov
push
mov
mov
mov
hlt
aad
add
call
mov
jl
inc
add
add
mov
add
cmp
jae
mov
mov
jnp
inc
add
push
push
push
call
add
test
je
mov
test
je
mov
cmp
jae
mov
mov
mov
jb
inc
add
add
dec
sldt
mov
add
cmp
jb
mov
test
je
mov
cmp
jb
pop
pop
pop
mov
pop
ret
movw
mov
inc
pop
pop
mov
pop
xor
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
push
movl
call
add
test
jne
mov
pop
pop
ret
mov
mov
push
mov
push
push
push
push
call
add
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
push
push
movl
movl
call
mov
add
test
jne
pop
ret
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
xor
cmp
mov
mov
mov
mov
je
mov
dec
mov
jmp
mov
mov
push
push
call
mov
add
cmp
jne
mov
mov
mov
mov
inc
cmp
mov
mov
je
mov
pop
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
add
test
jne
pop
ret
mov
lea
push
push
call
mov
movl
movl
movl
lea
mov
add
mov
test
je
lea
mov
test
jne
mov
mov
pop
ret
nop
nop
nop
nop
push
push
mov
test
movl
jne
lea
mov
cmp
jne
xor
pop
pop
ret
test
jne
mov
lea
mov
test
je
mov
lea
test
mov
jne
mov
test
je
jmp
mov
test
je
mov
jmp
mov
lea
test
mov
jne
mov
test
je
mov
cmpl
jne
movl
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
push
push
mov
movl
test
jne
lea
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
jne
cmpl
je
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
push
push
mov
push
lea
push
mov
lea
push
push
push
push
movl
call
mov
add
test
jne
push
call
mov
add
test
jne
pop
pop
mov
pop
pop
ret
lea
push
push
call
movl
movl
movl
mov
mov
add
mov
mov
mov
mov
mov
movl
pop
pop
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lea
push
mov
lea
push
push
push
push
call
add
cmp
jne
pop
ret
mov
mov
mov
push
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
xor
push
mov
lea
push
push
push
mov
call
mov
add
cmp
je
push
call
push
call
lea
push
push
push
call
mov
add
cmp
jne
mov
pop
pop
xor
pop
pop
ret
nop
nop
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
je
xor
ret
mov
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
cmp
jne
push
mov
or
xor
repnz
not
dec
pop
mov
push
mov
lea
mov
movl
cmpl
je
mov
pop
ret
lea
lea
push
push
push
push
call
add
adc
mov
pop
ret
push
call
mov
add
cmp
sbb
pop
neg
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
daa
add
add
push
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
mov
lea
lea
push
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
test
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
add
pushf
fldl
pop
pop
pop
add
js
inc
add
mov
push
dec
push
push
cmp
push
ja
mov
mov
mov
mov
jmp
mov
push
push
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
cmp
jne
xor
pop
pop
pop
pop
ret
mov
mov
mov
push
mov
push
mov
push
push
push
call
add
mov
mov
pop
pop
pop
pop
ret
push
shlb
push
shlb
xchg
xchg
shlb
push
xchg
shlb
sub
push
mov
push
mov
push
push
push
call
add
test
je
push
lea
push
push
call
lea
push
push
movw
call
mov
add
test
je
lea
push
push
call
add
test
je
mov
mov
movw
movw
add
push
mov
push
lea
push
push
push
push
call
add
pop
pop
pop
add
ret
mov
dec
cmp
ja
jmp
mov
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
jne
xor
pop
pop
pop
add
ret
lea
mov
shlb
stos
cwtl
shlb
into
cwtl
shlb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xlat
inc
add
insb
and
test
push
jne
push
call
mov
add
test
je
mov
push
push
call
add
mov
test
jne
cmp
je
mov
push
push
push
push
call
add
pop
pop
pop
add
adc
inc
add
cmp
jl
cmp
jg
add
push
mov
lea
mov
shr
rep
mov
and
rep
mov
movw
lea
push
push
push
push
call
add
test
pop
je
mov
push
add
push
push
push
call
add
pop
pop
pop
add
add
inc
add
pop
add
addl
nop
push
push
push
push
push
call
mov
xor
add
cmp
je
mov
xor
mov
push
rep
mov
push
cmp
je
mov
push
mov
push
push
push
push
call
push
mov
call
add
cmp
mov
je
mov
mov
movl
mov
mov
mov
mov
mov
mov
jmp
mov
push
mov
push
push
push
push
call
mov
mov
cmp
jne
push
call
add
pop
pop
xor
pop
pop
ret
push
push
call
push
mov
call
add
cmp
mov
je
mov
lea
push
push
mov
push
push
push
mov
call
test
je
mov
mov
cmp
jne
sti
add
pop
pop
pop
pop
ret
nop
push
push
push
push
mov
xor
cmp
je
cmp
jne
lea
mov
push
push
push
call
add
push
push
call
add
cmp
jne
mov
jmp
mov
push
call
mov
add
cmp
jne
mov
jmp
lea
push
push
push
call
add
push
push
call
add
test
je
mov
jmp
mov
push
push
push
push
call
mov
cmp
jbe
mov
push
lea
push
push
mov
or
xor
mov
repnz
not
dec
push
push
push
call
test
pop
je
mov
cmp
jbe
mov
dec
cmp
je
mov
mov
push
call
push
call
add
push
call
push
call
add
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
test
je
mov
push
call
add
mov
test
je
push
call
add
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
add
ret
nop
mov
push
call
pop
ret
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
cmp
jb
cmp
ja
mov
ret
xor
cmp
sete
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
jbe
dec
mov
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
add
push
call
add
ret
mov
add
push
call
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
cmp
jae
mov
mov
mov
mov
mov
inc
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
mov
cmp
je
cmp
jne
mov
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
cmp
jne
cmp
jl
cmp
jg
movsbl
mov
sub
mov
mov
ret
cmp
jl
cmp
jg
mov
movsbl
sub
mov
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
mov
push
push
push
push
call
add
test
je
mov
mov
test
je
cmp
je
cmp
je
cmp
jne
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
cmpb
jne
lea
push
push
call
add
test
jne
pop
pop
pop
add
ret
mov
cmp
je
cmp
je
push
call
add
mov
jmp
mov
lea
xor
push
push
call
add
test
je
mov
cmp
je
lea
push
push
push
call
add
test
je
imul
mov
lea
push
push
add
call
add
or
pop
xor
pop
add
ret
mov
pop
mov
mov
pop
pop
add
ret
push
call
lea
xor
push
push
call
add
test
je
mov
cmp
je
mov
inc
cmp
jae
lea
push
push
call
add
test
jne
pop
pop
xor
pop
add
ret
cmp
je
pop
pop
xor
pop
add
ret
lea
movb
mov
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
pop
movw
mov
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
lea
push
push
call
add
test
jne
mov
pop
pop
mov
movw
pop
add
ret
cmp
jne
mov
pop
pop
mov
movw
pop
add
ret
mov
pop
movsbw
mov
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
push
call
add
ret
add
push
call
add
ret
push
mov
push
mov
push
mov
push
push
push
push
call
add
test
je
cmpw
jne
push
push
push
push
call
add
test
jne
pop
pop
pop
ret
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
mov
mov
mov
ret
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
test
je
mov
mov
push
push
push
call
add
test
jne
mov
add
test
jne
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
add
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
push
push
push
call
push
push
call
mov
mov
push
push
mov
lea
push
call
add
test
je
mov
pop
ret
push
push
call
mov
add
mov
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
test
push
push
je
mov
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jne
mov
push
push
push
call
add
pop
pop
add
ret
cmp
jb
cmp
jbe
lea
push
push
call
add
lea
test
jbe
mov
sub
and
shr
mov
mov
mov
jne
mov
lea
push
push
push
call
add
pop
pop
add
ret
mov
mov
mov
mov
inc
cmp
mov
jb
mov
test
jne
movl
pop
xor
pop
add
ret
mov
lea
push
push
call
add
test
jne
pop
mov
pop
add
ret
mov
mov
mov
mov
mov
pop
mov
mov
inc
mov
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
test
mov
push
push
je
add
jmp
add
push
call
add
test
jne
mov
ret
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
push
push
push
push
push
call
mov
add
test
je
dec
fldl
mov
mov
mov
lea
mov
push
push
push
push
push
call
add
test
jne
test
je
push
push
call
add
test
jne
push
push
call
add
test
jne
mov
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
ret
mov
test
je
mov
push
push
call
add
mov
mov
test
je
mov
pop
pop
pop
mov
pop
ret
nop
nop
sub
mov
push
push
lea
push
lea
push
mov
push
push
push
push
movl
call
add
test
jne
mov
mov
mov
mov
lea
push
push
call
add
test
je
add
inc
cmp
jl
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
mov
pop
pop
mov
ret
push
push
call
add
cmp
je
mov
pop
pop
movl
xor
ret
mov
mov
push
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
mov
push
push
push
call
mov
add
test
jne
pop
pop
ret
push
push
call
add
cmp
je
pop
xor
pop
ret
mov
push
push
push
push
call
add
neg
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
push
call
mov
add
test
je
push
push
call
add
cmp
je
xor
mov
dec
cmp
ja
jmp
test
jne
push
push
push
call
add
pop
pop
pop
pop
ret
test
je
mov
pop
pop
pop
pop
ret
pop
pop
pop
xor
pop
ret
lea
repz
shlb
mull
shlb
pop
cmpsl
shlb
nop
nop
nop
nop
push
mov
push
push
call
add
test
jne
mov
push
push
call
add
neg
sbb
pop
inc
ret
cmp
jne
mov
pop
ret
mov
sub
sar
push
push
push
call
add
neg
sbb
pop
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
jbe
pop
pop
pop
xor
pop
ret
mov
mov
mov
push
push
push
call
mov
add
test
jne
push
push
call
mov
add
test
jne
pop
pop
pop
pop
ret
mov
push
push
push
push
call
add
test
je
xor
mov
cmp
ja
jmp
cmpl
jae
xor
jmp
mov
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
mov
mov
push
push
push
push
push
call
add
test
je
xor
jmp
mov
push
push
push
push
call
add
test
je
xor
jmp
xor
test
jle
mov
push
push
push
push
call
add
test
je
xor
pop
pop
mov
pop
pop
ret
lea
mov
shlb
or
test
and
shlb
jae
shlb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
push
mov
call
mov
add
test
jne
pop
pop
ret
mov
push
mov
push
push
push
push
call
add
test
je
xor
mov
push
push
push
push
call
add
test
pop
je
xor
mov
pop
neg
sbb
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
lea
push
mov
push
push
lea
push
lea
push
push
push
push
push
movl
call
add
test
je
mov
mov
lea
push
push
call
add
test
je
lea
lea
push
push
push
lea
push
push
push
push
push
call
add
test
jne
pop
pop
pop
xor
pop
add
ret
mov
pop
pop
pop
pop
add
ret
nop
nop
push
mov
push
call
add
test
je
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
neg
sbb
pop
inc
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
call
mov
test
je
push
push
call
add
test
je
push
push
call
mov
add
test
je
mov
push
push
push
push
call
add
test
jne
mov
push
push
push
push
call
add
test
jne
push
push
call
add
test
je
mov
test
je
mov
mov
test
je
push
push
call
add
mov
pop
pop
ret
push
call
add
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
call
mov
test
je
mov
mov
push
push
push
call
add
test
jne
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
lea
push
push
push
push
call
add
test
jne
lea
push
push
push
push
call
add
test
jne
push
push
push
push
call
add
test
je
mov
test
je
mov
mov
mov
test
je
mov
mov
mov
test
je
mov
mov
pop
pop
add
ret
push
call
add
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
push
push
push
push
mov
xor
mov
test
je
mov
mov
push
call
push
push
call
add
test
je
sub
add
sar
shl
or
mov
mov
test
jne
mov
pop
mov
pop
pop
mov
pop
ret
pop
pop
pop
xor
pop
ret
push
mov
push
mov
xor
lea
movw
mov
sub
and
shr
mov
mov
je
inc
cmp
jl
cmp
je
push
call
lea
push
push
push
call
add
pop
pop
ret
mov
sub
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
ret
nop
sub
mov
lea
lea
push
mov
push
mov
push
push
push
movl
call
add
test
jne
mov
lea
push
push
call
add
neg
sbb
inc
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
lea
stos
push
lea
push
push
push
push
call
add
test
je
lea
push
lea
push
push
call
mov
mov
lea
push
mov
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
test
jne
pop
pop
pop
mov
pop
add
ret
mov
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
mov
pop
pop
pop
pop
add
ret
movb
movw
mov
lea
push
push
push
push
push
call
add
test
je
mov
push
push
push
call
mov
mov
mov
push
push
push
push
call
add
mov
jmp
mov
push
mov
call
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
push
mov
mov
xor
lea
rep
mov
mov
stos
stos
mov
mov
xor
lea
rep
mov
lea
stos
mov
lea
push
push
push
push
push
movl
call
add
test
jne
lea
push
lea
push
push
call
mov
mov
lea
lea
mov
push
push
push
push
push
call
add
test
mov
mov
je
pop
pop
xor
pop
add
ret
test
jne
test
je
pop
pop
xor
pop
add
ret
lea
movl
push
push
push
push
push
call
add
cmp
jne
pop
pop
pop
add
ret
mov
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
add
ret
mov
lea
push
call
mov
add
test
jne
push
call
add
pop
pop
mov
pop
add
ret
mov
movb
movw
mov
lea
push
push
mov
mov
push
push
push
push
mov
call
add
test
jne
mov
push
push
push
call
mov
mov
lea
mov
push
push
push
push
push
call
mov
add
neg
sbb
inc
mov
mov
test
mov
jne
test
je
xor
push
mov
call
push
call
add
mov
pop
pop
pop
pop
add
ret
sub
push
mov
push
mov
push
push
push
lea
call
mov
add
cmp
jbe
lea
push
call
mov
add
test
jne
pop
pop
pop
mov
pop
add
ret
inc
push
push
push
call
push
call
lea
push
push
push
call
mov
mov
mov
push
push
push
push
push
call
lea
add
cmp
mov
je
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
cmp
jbe
dec
mov
mov
mov
mov
lea
shl
mov
mov
push
mov
push
push
push
push
call
add
test
jne
mov
shr
test
mov
je
lea
push
push
push
call
mov
add
movw
pop
xor
pop
ret
pop
mov
pop
ret
nop
nop
nop
push
mov
push
push
test
push
je
mov
mov
test
jne
test
jne
mov
test
je
mov
mov
movl
lea
mul
shr
lea
cmp
jae
mov
pop
pop
pop
xor
pop
ret
mov
xor
mul
xor
shr
je
mov
jmp
mov
xor
xor
mov
mov
inc
mov
inc
xor
mov
mov
sar
and
and
shl
mov
inc
mov
mov
sar
and
inc
or
and
shl
mov
mov
mov
sar
and
inc
or
and
inc
mov
mov
mov
mov
mov
inc
dec
mov
jne
mov
mov
mov
xor
mov
div
dec
je
dec
jne
xor
mov
mov
xor
mov
mov
sar
and
and
shl
mov
mov
mov
sar
and
inc
or
inc
and
mov
mov
mov
mov
jmp
xor
mov
mov
and
sar
and
inc
shl
mov
mov
mov
mov
inc
movb
inc
movb
inc
mov
movb
pop
inc
pop
pop
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
test
je
mov
mov
test
jne
test
jne
mov
test
je
mov
movl
cmp
jne
or
xor
repnz
not
dec
mov
mov
lea
shr
lea
cmp
jae
test
mov
jbe
mov
cmpb
jne
dec
jne
mov
and
jbe
shr
add
lea
add
mov
cmp
jae
mov
pop
pop
pop
xor
pop
add
ret
xor
cmp
mov
mov
mov
jbe
xor
xor
xor
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
pop
rolb
movl
jmp
mov
cmp
jae
mov
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jae
mov
xor
mov
inc
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
cmp
jae
jmp
mov
movl
jmp
mov
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
xor
mov
mov
xor
mov
mov
mov
mov
mov
and
and
mov
shl
or
mov
sar
and
shl
or
mov
mov
sar
and
inc
shl
or
mov
mov
inc
mov
inc
test
mov
jne
mov
mov
cmp
jae
mov
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
add
inc
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
xor
mov
mov
mov
mov
mov
shr
and
and
shl
or
mov
mov
sar
and
shl
or
mov
mov
inc
mov
inc
mov
jmp
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
jl
cmp
jle
cmp
je
cmp
jne
cmp
jne
cmp
jne
mov
mov
mov
shr
and
shl
or
mov
mov
inc
mov
mov
mov
mov
pop
mov
xor
test
pop
pop
sete
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
mov
push
push
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
jmp
mov
mov
add
test
je
mov
shr
push
push
push
call
add
jmp
movw
jmp
mov
mov
mov
xor
add
shr
rep
mov
and
rep
mov
test
je
mov
mov
mov
add
shr
rep
mov
and
rep
mov
add
test
jne
pop
pop
pop
pop
ret
mov
sahf
mov
shlb
into
mov
shlb
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
shr
push
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
lea
imul
and
mov
shlb
nop
nop
nop
nop
push
push
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
dec
cmp
ja
jmp
mov
mov
mov
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
add
push
push
push
call
add
test
jne
jmp
mov
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
add
test
jne
pop
pop
mov
pop
pop
ret
mov
pop
pop
ret
mov
inc
mov
shlb
xchg
mov
shlb
nop
nop
nop
nop
push
push
mov
mov
mov
mov
test
je
push
mov
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
push
mov
lea
push
mov
push
jmp
mov
mov
add
push
push
push
jmp
mov
add
sub
je
sub
jne
push
push
push
push
push
push
call
add
test
jne
jmp
push
push
push
push
push
push
call
add
test
jne
movl
mov
add
test
jne
mov
pop
pop
pop
pop
pop
ret
lea
and
mov
shlb
dec
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
mov
mov
mov
test
je
push
mov
push
mov
mov
mov
test
je
mov
lea
cmp
ja
jmp
mov
mov
add
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
lea
mov
mov
push
mov
add
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
mov
add
mov
sub
mov
je
sub
jne
lea
push
push
push
push
push
call
jmp
lea
push
push
push
push
push
call
add
test
jne
xor
mov
jmp
mov
mov
add
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
pop
pop
pop
ret
mov
or
and
mov
shlb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
push
mov
xor
mov
div
mov
mov
push
mov
mov
xor
div
mov
mov
mov
mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
xor
div
mov
mov
mov
xor
div
xor
test
mov
jbe
mov
mov
and
and
mov
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
and
xor
mov
xor
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
mov
inc
cmp
mov
jb
add
mov
inc
cmp
mov
jb
add
mov
inc
cmp
jb
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
movl
mov
ret
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
call
add
movw
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
push
push
push
call
movw
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
test
jbe
mov
push
mov
push
push
push
push
push
push
push
push
call
movb
pop
pop
ret
nop
nop
nop
push
mov
test
ja
mov
pop
ret
push
mov
push
call
add
cmp
jae
push
mov
push
call
add
mov
pop
pop
ret
lea
push
push
mov
push
call
add
movw
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
ja
mov
pop
ret
mov
push
push
mov
or
xor
repnz
not
dec
cmp
jae
mov
or
repnz
mov
not
sub
mov
mov
mov
shr
rep
mov
mov
and
rep
pop
pop
pop
ret
mov
lea
push
push
push
call
add
movb
mov
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
push
call
mov
mov
push
call
mov
lea
add
cmp
jae
lea
cmp
ja
push
push
call
add
mov
pop
pop
pop
pop
ret
mov
lea
sub
push
push
push
call
add
movw
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
or
xor
mov
repnz
not
dec
mov
lea
cmp
jb
pop
mov
pop
pop
ret
push
mov
mov
or
xor
repnz
not
dec
lea
cmp
ja
mov
or
repnz
not
sub
pop
mov
mov
mov
or
repnz
mov
dec
shr
rep
mov
mov
and
rep
pop
pop
pop
ret
mov
sub
add
push
push
push
call
add
movb
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
call
xor
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
mov
movl
mov
and
cmp
jne
mov
mov
dec
je
dec
je
sub
jne
mov
mov
push
push
call
mov
mov
push
push
call
mov
lea
mov
movl
mov
movl
call
mov
lea
push
push
push
push
call
mov
lea
push
push
call
lea
lea
push
push
call
mov
mov
sub
lea
push
push
call
mov
add
lea
push
mov
sub
push
cltd
sub
mov
sar
add
mov
push
push
push
mov
add
push
push
call
mov
push
call
mov
mov
push
push
push
call
push
call
mov
pop
pop
pop
movl
pop
add
ret
mov
call
mov
mov
push
push
push
push
call
mov
cmp
jl
mov
call
mov
lea
dec
push
push
push
push
call
lea
lea
push
push
call
mov
mov
cmp
mov
jg
mov
mov
push
push
call
mov
push
push
lea
push
push
push
push
push
push
call
mov
push
call
mov
mov
mov
push
push
call
push
mov
push
call
push
call
mov
pop
pop
pop
movl
pop
add
ret
movl
pop
pop
pop
pop
add
ret
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
push
lea
call
mov
mov
xor
cmp
mov
je
mov
push
push
push
push
mov
call
shr
and
mov
mov
mov
mov
push
push
call
mov
mov
push
push
call
mov
lea
push
push
call
mov
push
push
push
push
call
push
call
cmp
mov
je
mov
mov
xor
lea
rep
mov
lea
push
push
push
push
movl
mov
call
mov
lea
push
push
push
mov
call
mov
mov
mov
mov
push
mov
mov
call
test
je
mov
mov
mov
push
push
push
push
mov
push
mov
push
call
mov
test
je
mov
push
push
push
push
call
push
call
test
mov
je
mov
mov
xor
lea
rep
mov
lea
push
push
push
push
movl
mov
movl
call
mov
lea
push
push
push
mov
call
mov
mov
mov
add
mov
mov
mov
mov
shr
and
push
dec
call
test
je
mov
mov
mov
push
push
push
push
mov
push
mov
push
call
mov
xor
call
mov
push
push
push
push
call
test
jle
mov
lea
push
push
push
push
mov
call
test
je
mov
push
lea
push
push
mov
call
push
lea
movb
call
lea
movb
call
mov
push
push
lea
push
push
push
push
push
push
call
mov
mov
neg
sbb
mov
and
push
add
add
mov
sub
mov
mov
mov
mov
sub
sub
cltd
sub
lea
sar
add
mov
mov
push
mov
push
push
mov
push
call
mov
inc
call
mov
push
push
push
push
call
cmp
jl
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
mov
movl
movl
mov
test
jne
lea
movl
call
jmp
push
mov
mov
mov
and
dec
mov
je
sub
je
sub
jne
test
je
mov
mov
and
cmp
jne
cmpl
jne
and
mov
movl
testb
je
movl
mov
mov
mov
mov
mov
push
call
push
call
mov
mov
push
push
push
push
call
mov
movl
testb
je
test
je
push
mov
call
mov
or
mov
jmp
movl
mov
test
je
test
je
mov
mov
mov
mov
mov
push
test
je
mov
cmp
je
cmp
jne
mov
push
push
call
test
je
lea
push
push
push
call
test
je
cmpl
jne
movl
lea
push
call
mov
test
je
mov
mov
push
push
call
mov
mov
push
push
mov
call
mov
mov
push
push
call
mov
push
lea
push
push
mov
call
push
lea
movb
call
lea
movb
call
mov
lea
push
push
push
mov
call
mov
mov
movl
push
mov
add
push
mov
push
lea
push
mov
push
push
push
push
call
mov
mov
push
push
call
push
call
mov
mov
movl
mov
mov
pop
test
je
test
jne
mov
mov
and
cmp
jne
and
mov
mov
and
cmp
jne
movl
testb
je
mov
mov
mov
mov
movl
mov
push
call
push
call
mov
push
push
mov
push
push
call
mov
movl
testb
je
test
je
mov
and
test
jne
push
mov
call
mov
or
mov
jmp
mov
test
jne
mov
test
jne
mov
test
jne
mov
test
je
movl
lea
movl
call
pop
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
mov
and
cmp
je
push
mov
push
call
mov
push
mov
push
push
push
call
push
call
mov
push
push
push
push
call
push
call
mov
push
push
push
push
call
pop
jmp
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
call
test
je
mov
push
push
push
call
mov
push
call
test
je
mov
push
push
push
push
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
push
mov
call
mov
push
push
push
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
push
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
cmp
jne
mov
mov
push
push
push
push
mov
push
push
push
push
push
call
ret
mov
mov
push
push
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
movl
call
test
jne
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
mov
pop
pop
mov
mov
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
push
lea
push
mov
push
lea
push
push
push
lea
push
push
mov
call
test
je
pop
pop
pop
xor
pop
ret
cmp
jbe
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
pop
pop
pop
xor
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
pop
pop
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
mov
call
test
je
pop
pop
xor
pop
pop
ret
cmpl
je
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jbe
pop
pop
xor
pop
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
sbb
pop
pop
inc
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
call
test
jne
cmpl
ja
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
push
push
lea
push
call
mov
mov
mov
push
shr
push
movw
lea
push
call
add
mov
pop
pop
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
mov
push
push
push
push
call
neg
sbb
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
lea
push
push
push
push
push
call
add
adc
nop
nop
nop
nop
push
mov
push
call
mov
mov
lea
push
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
push
call
add
ret
nop
mov
sub
cmp
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
cmp
jne
pop
pop
xor
pop
ret
push
push
call
cmp
jne
push
push
call
test
je
mov
mov
movl
movl
mov
push
call
pop
mov
pop
pop
ret
push
call
push
mov
call
xor
cmp
pop
pop
sete
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
push
push
call
mov
add
add
sahf
rorb
hlt
add
xchg
xchg
jb
add
cmpsb
mov
loopne
cmc
out
add
loopne
into
mov
stc
in
lret
in
les
mov
mov
add
push
push
push
push
call
rcrl
jmp
aad
pop
add
add
shrb
addl
add
add
mov
fwait
gs
add
addb
addb
add
fstpl
push
jp
loope
arpl
push
add
lcall
inc
in
push
push
push
push
push
push
push
call
fwait
cmpsl
scas
add
fisubrl
fdivl
add
add
mov
insb
mov
fcmovnu
imul
jmp
push
add
sahf
pusha
add
testb
pop
ja
arpl
add
add
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
xchg
push
add
arpl
add
mov
add
lock
add
pushf
lds
test
add
ljmp
add
add
add
cld
add
loop
lds
xchg
add
sub
pop
push
push
push
call
add
push
add
add
flds
pusha
add
add
push
cwtl
shlb
out
ror
add
fcoms
mov
jp
add
sub
lcall
push
push
push
push
push
call
mov
stos
add
push
insb
add
add
insb
mov
add
cmpsl
add
add
add
jge
in
js
add
add
mov
in
ror
stos
jne
add
in
pop
push
call
push
push
push
push
push
push
call
scas
add
add
insb
testl
add
add
add
add
mov
pop
insb
mov
in
addl
scas
mov
rolb
enter
add
add
add
add
mov
add
mov
ja
stos
stc
cmc
add
add
add
call
push
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
bound
loop
lds
orl
mov
add
lret
add
stc
mov
jge
add
ret
outsl
push
add
nop
bound
lcall
add
fsubs
add
or
mov
push
push
test
push
add
add
mov
lahf
mov
clc
push
int3
mov
add
jne
add
out
pusha
sbbl
add
lods
aam
mov
in
xchg
clc
add
arpl
leave
icebp
fwait
test
mov
add
enter
add
add
add
data16
jge
stos
sub
pop
jmp
ret
push
push
push
lea
push
lea
push
push
lea
push
call
mov
loope
jb
add
mov
add
fbstp
jl
mov
add
mov
add
test
in
in
mov
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
in
add
add
bound
add
add
add
lret
add
js
add
add
test
fcom
add
add
test
mov
add
test
mov
nop
mov
jno
sub
pop
mov
push
lea
push
push
push
push
lea
push
push
call
int
jmp
jl
add
push
add
jmp
testl
add
cwtl
add
nop
mov
add
push
popf
add
add
cli
mov
add
pop
add
push
push
push
push
push
lea
push
call
add
add
pop
add
add
sub
mov
into
jne
mov
jl
scas
outsl
add
jmp
push
lods
mov
add
add
pop
mov
jae
movsb
cli
add
pop
filds
xchg
shlb
add
xchg
add
add
fwait
xchg
test
add
hlt
lcall
lock
addl
pop
add
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
cltd
add
lret
mov
mov
in
push
xchg
fildll
ret
mov
mov
idiv
pushf
xchg
filds
xchg
sbb
in
add
in
add
add
sub
pop
add
mov
push
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
negl
add
add
imul
add
add
add
add
add
add
jge
ret
xchg
test
add
mov
mov
add
xchg
std
mov
add
jmp
insb
add
lcall
sbb
push
lea
push
push
push
push
lea
push
push
call
add
add
out
test
leave
add
pop
add
fwait
add
flds
out
test
ja
mov
add
rclb
push
add
xchg
sub
pop
add
push
push
dec
not
push
xor
add
add
sub
not
pop
xor
inc
sub
rol
pop
push
push
push
push
lea
push
lea
push
push
call
movsl
stos
add
add
lcall
outsl
fstpl
add
imul
repnz
add
stc
ja
stc
cli
add
movsl
lahf
roll
push
add
sub
pop
pushl
push
push
push
call
add
xchg
add
add
pop
xchg
in
faddl
mov
add
fsubl
cwtl
fiadds
mov
out
pop
xchg
test
mov
add
push
add
out
mov
add
mov
mov
xchg
cmc
jmp
fcmovnbe
popl
jne
decb
mov
jnp
jo
push
xchg
sub
pop
call
push
push
push
call
sti
pop
jne
mov
add
add
mov
arpl
jmp
lods
insb
add
pushf
mov
arpl
mov
roll
xchg
mov
mov
jle
imull
add
push
add
les
fiaddl
jmp
add
fiaddl
test
mov
mov
lcall
inc
lock
push
call
jne
loope
add
add
fdiv
mov
int
add
repnz
add
out
add
jnp
loope
icebp
testb
pop
int
mov
enter
add
add
mov
pushf
imul
gs
push
lret
add
add
mov
add
add
int
mov
add
mov
xchg
lcall
inc
call
push
lea
push
push
push
push
push
push
lea
push
call
pushf
add
mov
add
add
mov
add
popa
mov
mov
idivb
mov
jne
add
push
pop
in
pop
faddl
mov
cmpsl
jo
je
movsb
add
lcall
inc
call
lea
push
lea
push
push
lea
push
call
add
xchg
add
add
nop
lds
add
mov
pusha
cmpsb
gs
popa
out
icebp
add
mov
mov
add
in
lods
pushf
add
add
jmp
xchg
mov
scas
mov
add
lock
mov
test
ljmp
add
jne
in
in
lcall
jne
push
push
push
push
push
call
cwtl
ret
pushf
add
pop
add
f2xm1
add
add
cmc
add
mov
add
jb
add
addl
add
xchg
pusha
add
sahf
sub
pop
pushl
call
push
push
call
add
out
js
add
pusha
fwait
push
testl
add
lods
aad
add
roll
in
cmpsb
add
fwait
cld
imul
popa
aad
filds
xchg
ret
loope
in
clc
pop
pushl
push
push
push
push
call
fs
cltd
pop
stc
roll
insb
pop
stos
rolb
js
loop
lret
movb
std
add
pop
scas
mov
mov
xchg
leave
add
add
add
add
mov
lods
arpl
lret
in
in
jge
in
lock
lcall
jne
push
lea
push
call
add
addb
add
jno
add
cli
insb
add
add
add
fs
mov
test
add
cmpsb
add
jbe
xchg
add
xchg
add
mov
sub
pop
call
push
push
add
add
push
xor
add
shr
sub
shr
sub
add
pop
sub
sub
shr
pop
push
push
push
call
roll
add
call
add
add
ret
jnp
add
out
cwtl
lock
add
add
fldenv
loop
mov
shl
stos
add
add
mov
jge
ficoms
addl
loope
add
add
in
hlt
pop
pushl
push
push
push
lea
push
push
push
call
cmpsb
pusha
mov
fs
add
cmpsl
add
mov
iret
mov
js
lcall
add
mov
xchg
out
cmpsb
pop
add
xchg
mov
add
lock
ret
lock
xlat
add
in
add
add
cli
test
imul
sbbl
add
add
add
imul
sbb
add
add
add
xor
aad
jbe
add
loopne
add
push
add
flds
pop
pop
popf
jae
je
add
leave
hlt
add
add
mov
fnsetpm(287
pop
mov
mov
add
fdivl
add
add
push
fwait
add
loop
xchg
sub
pop
push
push
push
add
inc
rol
push
push
pop
add
not
xor
sub
sub
add
pop
xor
sub
inc
pop
push
push
push
push
call
mov
cmpsl
xchg
pop
jno
mov
cmpsl
mov
test
scas
add
stc
push
andb
jl
icebp
nop
add
jae
hlt
imulb
mov
add
add
lock
push
push
push
lea
push
lea
push
push
push
push
call
shrl
mov
addl
fiadds
jne
shll
add
movsb
add
jns
fsubr
add
popf
jl
jl
add
add
add
mov
pop
fwait
jecxz
pop
add
iret
add
lcall
rclb
test
stos
lock
push
push
call
iret
add
add
add
insb
add
popf
mov
add
push
lods
push
scas
testb
add
mov
pop
mov
add
add
addl
push
mov
mov
fadds
test
mov
push
push
push
push
push
push
push
lea
push
call
add
add
stc
cli
mov
jb
add
add
add
add
jecxz
add
xchg
xchg
add
je
ret
add
jb
add
xchg
add
test
fwait
add
add
add
add
add
fcoml
out
add
jmp
add
sub
pop
push
push
push
push
push
push
push
push
lea
push
push
call
mov
add
popl
idiv
add
mov
add
add
add
xchg
out
shr
mov
add
mov
call
pop
aam
add
fs
add
add
pop
xchg
incb
mov
fbld
add
pop
sub
pop
mov
push
lea
push
push
push
lea
push
push
push
call
addl
add
add
add
gs
add
add
in
popa
add
jmp
cwtl
add
rclb
rolb
lcall
pop
in
push
push
push
push
push
lea
push
push
push
lea
push
call
rolb
in
fwait
mov
jp
push
rolb
push
loop
addr16
popf
into
jo
test
fldl
insb
add
mov
cwtl
add
clc
add
mov
mov
add
add
int
push
cmpsl
add
ja
push
clc
mov
pop
add
push
push
push
push
push
call
xchg
add
in
sahf
fisubrl
add
jle
mov
add
pop
add
add
iret
jnp
add
add
fiaddl
cmpsb
mov
add
bound
fildll
jno
std
movl
lcall
ret
loopne
add
push
lea
push
push
push
push
push
push
push
call
data16
lea
cld
lea
pop
add
test
mov
lods
add
add
mov
add
add
pop
add
divl
push
icebp
push
clc
mov
fcomps
gs
add
leave
int
mov
mov
int
in
loopne
mov
xor
push
push
lea
push
push
push
push
push
call
add
jmp
int3
in
mov
addl
add
incb
xchg
aad
incb
roll
add
mov
icebp
add
pop
add
add
add
fcmovnbe
bound
testb
int3
rcll
add
push
push
lea
push
push
push
call
les
nop
jne
insb
xchg
add
movsb
test
jle
xchg
in
bound
pop
add
add
add
in
xlat
xchg
add
jno
mov
add
sahf
in
shrb
add
add
add
add
add
add
add
test
add
add
sub
pop
mov
xor
push
push
push
call
xchg
cld
add
mov
js
add
add
mov
test
cli
mov
add
add
cmc
push
push
jne
movb
add
cltd
imul
add
fcoml
enter
add
into
aam
in
hlt
pop
add
push
push
lea
push
push
call
divl
add
add
pushf
add
add
add
call
add
add
imulb
iret
pop
jmp
int3
sti
in
xchg
cmc
add
mov
add
in
lock
lcall
mov
xor
push
push
push
push
push
call
add
add
iret
out
add
shlb
add
jecxz
add
add
xchg
add
mov
pop
mov
sub
pop
push
push
lea
push
push
lea
push
push
push
push
call
add
add
cld
mov
add
mov
sti
add
add
xchg
add
add
mov
add
xlat
repnz
fisubs
cmpsl
add
jbe
addl
lcall
inc
or
jno
adc
lea
push
push
push
push
call
imul
add
pop
scas
scas
popl
add
jnp
add
out
sar
add
mov
lret
mov
leave
add
rcl
xchg
jge
add
jmp
mov
add
add
push
lea
push
call
movl
add
add
mov
out
nop
add
iret
aam
out
mov
lret
mov
add
lcall
js
cmc
jmp
lods
lret
fwait
jecxz
jae
add
add
in
add
clc
lcall
les
add
push
lea
push
push
push
call
shlb
scas
movsb
mov
mov
pop
add
add
xchg
cld
add
push
add
xchg
add
stos
push
lret
stos
mov
mov
jo
push
ret
sub
pop
sub
push
push
push
lea
push
push
push
push
lea
push
call
repnz
add
add
add
leave
add
data16
jno
mov
add
mov
add
lds
add
clc
mov
add
add
fiaddl
leave
add
add
add
jmp
enter
add
pop
pop
push
push
push
push
push
lea
push
call
test
fildl
push
lods
push
add
stos
add
jo
add
out
add
fwait
add
sahf
orb
add
subb
in
call
rep
push
push
call
jbe
add
mov
xchg
lahf
lahf
add
mov
call
add
add
mov
std
test
add
jbe
sahf
out
add
mov
ljmp
mov
ja
add
test
push
stos
add
add
xchg
pop
add
add
loope
test
pop
push
push
lea
push
push
push
push
call
lea
js
push
sti
adc
pushf
sti
add
pop
jmp
in
aam
add
push
add
out
gs
add
data16
lds
lcall
push
add
add
stos
mov
xchg
add
mov
add
mov
add
lods
aad
in
call
mov
push
lea
push
call
jb
cmpsb
add
hlt
add
push
mov
sti
push
lods
fmul
lret
mov
imulb
movsl
mov
cmpsl
int3
mov
push
pop
les
jo
add
pushf
iret
push
sarl
jle
xchg
fs
jnp
testb
sub
pop
add
add
push
push
push
push
lea
push
lea
push
call
pop
mov
ficompl
lahf
jns
jle
jge
add
mov
push
iret
pusha
loope
jne
jecxz
push
jecxz
add
add
incb
add
mov
imul
out
lods
mov
lods
add
js
data16
add
stc
hlt
sub
pop
add
mov
xor
push
lea
push
lea
push
push
push
push
push
push
call
fadds
add
mov
out
add
add
fidivrs
add
add
mov
add
hlt
bound
add
ljmp
fwait
out
lds
lock
icebp
add
loopne
sub
pop
mov
xor
push
rol
pop
mov
xor
push
lea
push
call
add
ja
mov
aam
push
lret
lods
xchg
jmp
test
add
out
add
jns
mov
add
add
test
jns
lods
add
push
sub
pop
add
push
xor
pop
add
mov
push
push
sub
push
xor
add
sub
sub
not
ror
pop
not
xor
not
pop
push
push
push
push
push
push
call
ja
add
lret
testb
add
jno
fsubs
mov
lods
add
fadds
filds
add
loopne
aam
popa
out
mov
add
add
add
jnp
jle
mov
in
call
call
push
sub
xor
pop
push
push
push
sub
push
push
pop
add
shr
xor
shl
sub
pop
xor
pop
push
push
push
push
push
push
push
lea
push
push
call
cmc
add
popf
lods
shll
pop
add
add
loopne
cmc
fxch
fiadds
add
jp
mov
pop
mov
jp
rcrb
neg
imul
add
test
leave
add
fdivr
lcall
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
cmc
fld
icebp
flds
flds
leave
mov
add
add
add
movsb
jmp
add
add
in
add
mov
mov
add
lods
add
fidivl
js
add
push
movsl
add
bound
add
xchg
add
pop
mov
add
lcall
rclb
push
ror
push
push
call
add
add
add
add
xchg
aad
outsl
lds
add
lahf
mov
jmp
pop
ret
add
mov
sahf
mov
mov
mov
mov
cltd
mov
ja
add
jno
mov
add
add
icebp
mov
hlt
lcall
clc
push
push
call
xchg
stc
add
popl
mov
add
add
sti
add
mov
add
sar
clc
mov
push
add
add
add
add
push
scas
add
in
pop
bound
jmp
add
add
jecxz
leave
in
lret
shrl
pop
push
add
add
jnp
mov
mov
add
rcr
sub
pop
push
push
push
push
call
add
add
mov
add
adcb
call
pop
mov
int
add
enter
rcrl
int
into
mov
pop
popa
sub
pop
push
mov
push
push
push
push
push
push
push
push
push
push
call
out
jnp
add
add
add
xchg
xlat
fabs
les
mov
ja
mov
pop
add
mov
add
add
pop
jns
js
add
adcb
add
add
add
xchg
pushf
xchg
addr16
sub
pop
add
push
lea
push
lea
push
call
lret
roll
lahf
mov
add
add
add
popa
fistl
add
imul
add
jmp
add
add
enter
add
cli
xchg
add
add
mov
stos
vpperm
xchg
jl
add
mov
push
add
loope
add
hlt
lcall
ret
add
add
add
push
push
push
call
mov
add
xlat
lret
sar
lcall
add
add
fsubp
fwait
push
lret
push
add
add
jno
push
clc
sub
pop
mov
xor
push
rol
pop
add
push
push
push
push
lea
push
push
lea
push
push
call
add
add
movsb
push
pop
add
fists
js
mov
in
mov
xchg
stc
jecxz
in
in
lcall
inc
adc
xor
adc
push
push
lea
push
push
call
aad
loop
in
push
testb
in
add
stos
xlat
lahf
mov
ror
movsl
or
jmp
add
add
jbe
roll
int
jmp
add
push
shll
mov
add
call
xor
push
lea
push
push
push
push
push
push
push
lea
push
call
add
push
js
fdivrs
test
xchg
loopne
ret
rolb
pop
add
outsl
stos
pushf
add
loope
add
add
add
test
sti
mov
add
add
clc
mov
imul
aad
mov
addl
mov
mov
sub
pop
add
push
shl
pop
add
push
lea
rol
pop
pop
push
sub
xor
lea
dec
pop
mov
push
push
push
call
jbe
loopne
pop
mov
js
cmc
ja
sti
add
movsb
push
add
lret
add
pop
sti
fcmovnbe
jo
add
pop
mov
add
add
jp
bound
lahf
add
push
add
xchg
add
aam
pop
jle
add
test
lock
add
ja
pop
mov
loop
aad
enter
sub
pop
xor
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
iret
lret
add
bound
add
add
add
bound
andb
bound
stos
add
mov
cltd
jnp
sub
pop
add
push
sub
xor
pop
rep
mov
push
push
push
push
push
lea
push
push
push
push
push
call
fadd
add
add
add
add
rcrb
push
add
add
push
flds
data16
mov
bnd
xchg
popa
push
add
jnp
lods
mov
add
enter
add
add
je
mov
pop
sahf
ljmp
jnp
add
outsl
scas
add
add
fdivr
lcall
or
push
push
push
call
movsb
add
jmp
icebp
les
push
add
add
add
jnp
mov
lret
mov
mov
jl
loop
shll
add
lret
add
popa
push
in
shl
add
mov
mov
ljmp
mov
mov
enter
xlat
arpl
mov
mov
lcall
les
push
lea
push
push
push
push
call
fildl
add
lahf
je
add
add
jl
cmpsl
add
add
pop
mov
cmpsb
in
push
not
mov
sub
pop
or
je
mov
push
push
push
lea
push
push
push
push
call
lods
pop
mov
iret
add
repnz
mov
add
repnz
add
mov
cld
add
bound
mov
push
add
cltd
add
out
data16
pop
add
in
call
xor
push
push
push
push
push
push
push
lea
push
call
sti
call
fbstp
ljmp
add
push
push
add
xchg
mov
add
mov
add
xchg
sub
pop
add
push
push
push
push
push
push
lea
push
lea
push
call
lahf
mov
mov
lods
gs
cmpsl
push
xchg
mov
popa
fiaddl
cmpsl
add
test
push
push
pop
add
loope
fucomip
scas
loop
adcl
loopne
mov
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
jle
pop
add
mov
jno
movsl
test
add
filds
popl
popl
divb
add
pop
mov
add
add
imul
add
fs
add
push
bound
add
aam
jb
add
mov
testb
add
add
in
call
push
push
lea
push
lea
push
lea
push
lea
push
push
push
lea
push
call
mov
add
sahf
movsl
add
mov
add
popf
movb
in
bound
add
mov
cmpsb
mov
data16
add
data16
jns
imul
pop
jns
out
jb
add
std
pop
mov
fiadds
sub
pop
add
push
push
push
push
call
mov
subl
add
flds
addr16
mov
arpl
rolb
pop
fisubrl
scas
add
add
lcall
repnz
push
push
lea
push
push
push
push
push
push
call
in
mov
push
add
add
addb
imul
mov
addl
out
out
outsl
addr16
fmul
nop
aad
add
add
add
add
shll
add
popl
lret
je
ljmp
mov
sub
pop
push
push
sub
sub
pop
mov
xor
push
rol
add
shr
pop
add
pop
push
rol
sub
pop
rep
mov
xor
push
push
push
push
push
push
push
push
push
lea
push
call
add
gs
add
add
add
pop
loopne
push
test
lods
pop
ja
mov
push
leave
enter
sub
pop
or
je
push
dec
add
inc
pop
mov
push
ror
pop
add
push
not
pop
add
rep
push
pop
pop
push
push
ror
inc
push
or
inc
add
sub
ror
sub
sub
shr
not
pop
shr
pop
push
shr
sub
shl
pop
pop
push
add
dec
pop
mov
mov
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
call
scas
add
xlat
test
add
add
rcll
mov
or
xchg
add
sub
pop
mov
push
push
push
push
push
push
push
push
lea
push
call
mov
push
xchg
bound
add
mov
jae
add
rolb
add
push
push
add
addl
add
add
lods
add
mov
insb
data16
fisubrs
rolb
pushf
add
add
hlt
lds
add
fcompl
loopne
push
push
push
push
push
push
call
popa
jecxz
push
pusha
ja
movsl
pop
shl
call
xchg
scas
cmpsl
add
add
decb
jnp
add
add
fiadds
push
sub
pop
mov
add
push
push
lea
push
call
xchg
lea
add
fwait
add
pusha
mov
add
add
fadds
bound
mov
mov
mov
out
cld
movsl
add
pushf
loope
mov
iret
fsts
add
xchg
add
loope
add
add
fildl
pusha
test
mov
in
hlt
pop
push
push
push
not
not
dec
pop
push
push
push
shr
sub
pop
mov
push
lea
push
push
push
push
lea
push
push
call
add
add
ja
scas
pop
jle
add
in
add
clc
add
pop
stc
add
les
in
add
pop
cltd
nop
iret
idivb
fildl
out
add
sbbb
pop
testl
add
out
std
jae
add
add
adc
in
in
lcall
push
push
push
lea
push
push
push
push
push
push
call
add
add
movsl
add
lock
enter
test
out
add
call
fiadds
aad
popa
push
add
imul
shr
outsl
loope
xchg
add
mov
lret
mov
add
cmpsl
cmpb
addr16
add
sub
pop
pop
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
xchg
add
testb
add
lock
add
test
fwait
add
add
mov
fdivs
mov
add
xchg
les
iret
nop
je
add
mov
shll
fldl
cli
jl
xchg
roll
lcall
push
push
push
call
loope
add
xchg
add
pusha
pusha
test
aad
add
loope
cmpl
mov
add
sub
pop
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
test
add
jae
clc
jbe
add
in
popl
add
imul
mov
mov
add
add
add
icebp
clc
add
leave
ret
push
push
push
push
push
push
call
add
add
add
add
arpl
add
stc
lods
add
add
add
js
popf
add
aad
add
outsl
test
popa
pop
jne
xchg
add
add
call
push
push
push
lea
push
push
push
call
add
pop
mov
mov
xchg
mov
pop
add
out
fcompl
hlt
add
xchg
in
aam
push
add
add
add
shrb
call
push
push
push
push
call
add
mov
push
xchg
mov
cli
add
out
add
add
and
out
add
loop
push
int3
add
add
add
in
push
mov
into
mov
add
lds
js
arpl
push
xchg
jno
movsb
add
jo
jl
mov
in
hlt
pop
push
push
push
shr
sub
sub
inc
pop
push
push
lea
push
push
push
lea
push
push
call
pop
mov
mov
xchg
pop
add
add
add
jne
add
add
sahf
add
add
lcall
inc
cld
add
add
push
lea
push
push
push
push
push
push
push
push
push
call
loope
pusha
jmp
mov
xchg
ja
pop
jo
add
lock
push
mov
add
add
lods
jle
add
in
add
clc
jbe
add
jp
mov
add
mov
add
pusha
xorb
aad
add
add
mov
leave
sub
pop
addl
test
je
push
push
push
push
lea
push
push
call
mov
add
push
add
cmpsl
add
pop
add
ret
mov
loop
add
jp
cwtl
jge
pop
pop
mov
add
cmpsb
add
mov
push
add
push
cltd
pop
sub
pop
mov
pop
push
push
push
push
push
lea
push
lea
push
push
call
add
loopne
mov
add
add
out
enter
xchg
add
jp
add
add
in
cli
cltd
jbe
xchg
fdivl
add
mov
lcall
pop
push
push
push
push
push
call
lods
add
add
lret
add
stos
add
fistps
data16
loopne
add
mov
add
imul
push
add
pop
mov
clc
jmp
fcomps
mov
add
add
scas
add
jmp
mov
jno
jp
cwtl
js
mov
pop
push
xor
shl
pop
leave
ret
push
push
lea
push
push
push
push
push
lea
push
push
push
call
push
icebp
add
sti
pop
incb
addb
shlb
cmc
jecxz
pop
rcrb
in
test
fadds
mov
popl
fnstcw
ret
add
cli
imul
sub
pop
push
push
lea
push
push
push
push
push
call
add
lahf
repnz
add
sarb
fldl
xchg
add
add
add
push
ficoms
jp
add
jmp
pusha
add
add
enter
hlt
add
leave
jae
add
add
jl
int3
add
add
out
add
sub
pop
mov
push
push
push
lea
push
push
push
call
addl
aad
testl
mov
cmpsb
add
mov
add
add
adcl
pop
add
push
push
lea
push
push
push
push
push
lea
push
push
call
bound
add
faddl
add
add
cmpsb
cld
insb
mov
add
pop
in
add
outsl
lret
pop
add
int3
fldl2e
leave
cltd
mov
add
add
pop
xlat
out
add
lcall
push
push
push
push
lea
push
push
push
push
call
out
arpl
cltd
add
lret
mov
stc
jbe
stos
push
add
add
push
pop
add
add
sub
pop
push
push
ror
sub
add
xor
pop
push
testl
push
push
push
push
push
call
add
xchg
add
popf
cmpsl
lret
hlt
add
jne
fiadds
shl
loop
lds
cmpsb
fadds
fstl
ret
add
push
add
fbstp
add
add
add
xchg
add
add
lds
pop
add
clc
enter
in
add
cmpsl
add
add
jno
add
jl
jno
sub
pop
addl
push
push
push
call
add
add
pop
add
pop
add
mov
add
fldt
jl
add
hlt
pop
push
push
push
push
push
lea
push
push
push
call
xchg
add
xchg
add
add
int3
aad
std
mov
imul
mov
add
pusha
mov
shlb
in
in
lcall
cmp
call
mov
push
push
push
push
push
call
popa
add
loope
pusha
xchg
lcall
xchg
jecxz
mov
test
aad
out
add
add
add
popa
add
mov
add
fiadds
add
je
mov
add
push
out
add
in
call
mov
push
lea
push
call
add
jns
xchg
add
mov
sti
shlb
outsl
nop
add
lods
push
add
add
outsl
add
out
in
pop
movsl
add
push
in
jne
add
js
add
mov
push
add
jl
add
sub
pop
pushl
push
shr
pop
push
push
push
rol
sub
inc
pop
call
cmpl
jne
push
sub
not
pop
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
xchg
add
clc
mov
popf
add
pop
cwtl
in
lock
ficompl
fwait
mov
les
mov
mov
pop
pop
push
push
push
push
push
call
ljmp
loope
xchg
add
add
add
lret
add
add
loop
ja
in
leave
jmp
add
cmc
lods
push
pop
pop
push
lea
push
lea
push
push
call
add
subl
mov
mov
pop
add
jl
addr16
add
xlat
cli
pop
add
mov
pop
leave
push
push
lea
push
push
push
push
push
push
call
push
add
mov
jbe
add
xchg
cmpsb
test
add
push
xchg
xlat
push
add
xchg
add
ret
add
xchg
mov
add
flds
stos
int
pushf
aad
sub
pop
ret
push
push
lea
push
call
add
outsl
add
out
aam
mov
outsl
add
add
xchg
add
add
pop
add
or
adcb
mov
iret
scas
test
mov
mov
fs
pusha
add
std
add
mov
jnp
in
clc
pop
mov
add
push
lea
ror
pop
push
push
push
push
push
lea
push
push
call
je
popa
lds
ja
add
xchg
add
notb
roll
addr16
shll
push
add
add
add
add
roll
lcall
push
inc
sub
pop
push
push
push
push
push
lea
push
push
call
add
add
mov
xchg
add
in
add
lods
fldl
add
mov
shlb
nop
add
lock
mov
jae
arpl
add
mov
xchg
stos
mov
mov
addb
pop
add
aad
jle
push
into
in
sub
pop
movl
push
push
push
lea
push
lea
push
push
push
call
add
add
mov
add
add
sti
add
add
roll
mov
pop
jmp
pop
cwtl
je
fidivs
jno
bound
jge
lds
mov
data16
add
jb
add
add
add
add
add
mov
lods
add
cmc
std
mov
lods
roll
popl
lcall
pop
idiv
ljmp
push
shl
shr
pop
call
subl
push
push
call
jle
mov
fstps
add
mov
push
int
insb
add
add
xchg
jecxz
test
in
mov
in
hlt
addb
rolb
add
jne
xchg
jle
add
mov
lea
mov
sti
aad
stos
cmc
jmp
pop
out
out
gs
lea
cmpsb
out
add
lcall
jge
add
test
lcall
xor
lea
pop
pop
push
ror
add
lea
pop
pop
push
shr
pop
pop
push
shr
xor
pop
leave
ret
push
lea
push
push
push
lea
push
push
push
push
call
scas
add
cmc
jbe
add
int3
ljmp
sub
add
mov
data16
add
jb
add
add
add
add
add
stos
add
add
test
add
jl
add
jnp
scas
add
add
stc
xchg
mov
testl
sub
pop
mov
push
push
push
call
add
ja
mov
pop
hlt
mov
out
popa
bound
test
rolb
cmpsl
xor
mov
out
add
add
add
add
cli
push
out
std
aam
add
add
adc
jle
in
add
ljmp
div
xchg
jns
nop
loopne
in
add
lcall
cld
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
mov
xchg
lcall
add
add
mov
test
movsl
mov
add
add
mov
add
mov
jbe
add
mov
add
jns
add
mov
movsl
roll
push
not
shl
pop
push
push
push
push
call
pop
cli
movl
ljmp
add
loope
mov
add
xchg
stc
lret
push
lock
lcall
push
push
lea
push
push
push
push
push
push
push
call
add
loope
into
negl
mov
into
scas
jmp
pop
sbb
rolb
rolb
add
les
add
loopne
xchg
mov
shr
fwait
mov
in
fdivr
lcall
push
lea
push
call
mov
mov
icebp
add
jmp
add
lods
mov
out
lods
add
add
add
mov
add
fs
add
lods
lods
scas
popf
pop
add
add
push
arpl
fadds
cld
arpl
add
jb
add
in
clc
pop
mov
lea
push
push
push
push
push
lea
push
push
push
call
push
arpl
pushaw
iret
addb
add
add
add
add
add
fcomp
add
xchg
add
mov
mov
test
add
adcb
mov
in
loopne
lcall
call
addr16
call
ficomps
cmpsb
add
add
test
mov
add
in
push
add
add
add
add
sub
pop
mov
push
push
push
push
lea
push
push
push
push
push
call
mov
shll
add
jmp
repnz
jns
add
int
popf
fwait
mov
xchg
mov
mov
fcompl
call
push
call
jp
add
add
shr
xchg
roll
pop
mov
add
testl
enter
pop
lea
fucom
add
mov
add
add
add
hlt
pop
add
push
lea
push
push
push
push
call
add
add
faddl
lret
add
add
out
add
add
add
pop
add
add
add
add
fdivs
add
leave
add
cli
add
jae
add
add
add
add
add
sub
pop
mov
mov
push
push
push
push
push
call
arpl
test
mov
scas
rcr
lods
add
mov
cmpsl
add
pop
add
add
cmpsb
xchg
add
mov
out
add
addb
stc
add
add
inc
or
shr
add
shl
pop
add
mov
push
push
lea
push
lea
push
call
add
add
loope
shll
add
add
arpl
add
add
mov
divb
lock
hlt
add
enter
sahf
addl
add
push
iret
in
jnp
add
movsl
std
add
test
addb
add
lcall
nop
nop
nop
nop
cmp
jne
push
not
sub
add
add
pop
cmp
jne
push
not
pop
mov
movl
push
push
push
call
add
push
in
addr16
add
jb
add
stos
test
add
pop
cmpsb
add
mov
mov
pop
xchg
call
add
mov
add
fldl
mov
push
push
push
push
push
push
push
call
add
cltd
add
lock
cmc
mov
scas
clc
out
ja
jne
add
call
nop
ret
add
mov
fildl
add
les
add
add
add
scas
mov
cld
mov
popf
outsl
mov
loopne
mov
push
xor
pop
mov
push
add
lea
pop
sub
jne
mov
push
push
call
outsl
stos
add
add
add
add
out
loopne
lds
cmc
mov
add
add
out
test
out
add
mov
int
fcmovnu
jecxz
cmc
add
test
pop
push
in
clc
pop
movl
jmp
push
push
push
push
push
push
push
push
call
mov
addb
test
out
test
iret
faddl
addr16
imul
jns
add
jecxz
mov
mov
imul
in
add
mov
sub
pop
mov
push
lea
push
call
add
add
ja
enter
add
in
add
loopne
jge
incb
add
sti
xchg
mov
add
add
xchg
add
add
pop
mov
loop
add
pop
lea
jl
in
clc
pop
mov
push
not
sub
pop
cmp
jne
mov
push
shr
shl
ror
pop
movl
jmp
push
shr
not
ror
pop
mov
push
add
sub
sub
pop
cmpw
jne
push
shl
lea
pop
mov
movl
push
push
push
lea
push
lea
push
lea
push
push
call
pop
lods
cld
xchg
nop
imul
add
add
add
arpl
add
scas
test
enter
int3
add
lret
xchg
mov
fists
pop
add
xchg
add
add
js
test
test
clc
add
roll
add
add
add
lcall
inc
or
add
xor
add
push
push
push
push
push
call
add
add
pop
imul
mov
jo
repnz
iret
add
xchg
loopne
movl
mov
add
push
out
movl
add
add
ja
rolb
outsl
add
gs
mov
mov
add
pop
add
lcall
push
pop
mov
mov
push
push
lea
push
call
add
add
imul
add
add
add
add
add
mov
jo
lock
in
add
loop
mov
xchg
add
mov
hlt
lcall
push
or
push
push
inc
push
shl
inc
dec
sub
push
or
inc
add
xor
sub
rol
shr
pop
shr
pop
push
xor
pop
push
call
push
shl
pop
cmpl
je
push
push
shr
push
and
add
sub
not
pop
inc
dec
shr
rol
pop
push
push
call
add
add
mov
ljmp
xchg
add
lahf
xlat
test
pop
insb
xlat
mov
mov
mov
lcall
add
add
popl
ja
sub
pop
push
push
push
push
push
push
push
call
mov
add
mov
ja
xchg
stos
jb
stos
xchg
lods
icebp
add
add
add
add
mov
jne
lret
call
call
cmpl
je
push
push
shr
ror
dec
push
and
add
shl
sub
sub
xor
shr
xor
pop
sub
pop
push
push
lea
push
push
call
add
add
add
push
pop
clc
addl
add
jecxz
add
in
gs
lea
mov
mov
negl
add
add
add
lcall
push
inc
pop
call
push
shr
sub
not
pop
cmpl
je
push
push
add
lea
push
or
not
add
lea
dec
sub
not
pop
ror
inc
xor
pop
push
sub
shr
pop
push
push
push
push
push
lea
push
push
call
add
movsl
add
lcall
into
cmpsb
add
add
mov
jmp
add
jecxz
xlat
add
add
loop
mov
add
push
jnp
add
test
mov
in
xchg
xchg
sti
mov
add
loope
add
addb
popf
mov
push
lret
add
add
push
cmp
add
jmp
xor
ret
test
lods
js
mov
shr
add
push
and
add
add
dec
sub
xor
ror
pop
rol
lea
add
pop
push
shr
xor
lea
pop
push
push
dec
pop
call
push
inc
pop
cmpl
je
push
push
shr
inc
add
sub
push
sub
add
dec
sub
add
add
pop
add
pop
push
lea
push
push
push
push
push
push
push
lea
push
push
call
loop
add
jecxz
pop
add
add
out
add
mov
testb
roll
mov
add
mov
mov
loope
xchg
jge
in
icebp
add
xchg
scas
add
icebp
push
add
add
insb
pushf
add
mov
aad
jl
add
add
out
jb
add
lcall
call
push
lea
push
lea
push
lea
push
lea
push
push
push
call
cmpb
ret
add
imull
add
int
add
add
sub
pop
cmpl
je
push
push
dec
sub
push
or
not
add
add
shr
xor
sub
add
pop
lea
add
sub
add
pop
push
lea
pop
push
push
push
push
push
push
push
call
add
movsl
add
movb
xchg
add
pushf
imul
mov
outsl
add
add
add
push
push
jno
movsl
pushf
mov
test
add
call
call
cmpl
je
push
push
inc
dec
push
xor
add
ror
shr
dec
sub
not
not
add
rol
pop
ror
shl
lea
pop
push
push
lea
push
push
push
push
call
hlt
mov
add
mov
int
add
ret
add
lret
jns
add
add
add
stos
test
add
mov
mov
adcb
add
add
add
mov
add
into
mov
in
call
push
call
push
pop
cmpl
je
push
push
shl
rol
inc
push
and
add
ror
not
sub
ror
xor
xor
dec
pop
ror
pop
push
sub
not
pop
push
push
pop
call
push
push
call
add
pop
fidivrl
scas
lcall
stos
add
int3
jno
mov
faddl
insb
iret
jno
lock
push
add
rolb
pop
pop
xchg
cltd
push
mov
add
mov
pop
int
je
add
imul
lods
add
je
jl
sub
pop
cmpl
je
push
push
sub
shl
sub
push
push
pop
add
sub
add
add
shl
pop
lea
rol
add
pop
push
add
sub
pop
push
push
push
push
push
push
push
push
push
push
push
call
outsl
add
mov
andb
add
add
add
add
pop
add
test
testb
xor
lds
push
push
push
push
push
push
call
hlt
sahf
jle
fistpl
add
add
cmpsb
push
mov
add
out
add
cmpsb
add
stc
add
add
cmpsb
sahf
sub
pop
cmpl
je
push
push
shl
shl
add
push
or
inc
add
dec
add
sub
dec
pop
not
pop
push
sub
shr
pop
push
push
push
lea
push
push
lea
push
push
push
push
call
out
add
add
imul
popa
pop
nop
int3
gs
add
add
add
add
fwait
stos
xlat
call
bound
push
lcall
fdivrl
out
cmpsl
pop
test
shll
push
add
out
xchg
pop
add
lcall
into
xor
add
call
stc
add
mov
fadds
addr16
in
pop
in
add
add
jo
mov
add
enter
ret
int
add
les
imul
add
add
add
lcall
js
xor
ret
test
add
add
adc
les
push
pop
add
xor
sub
dec
xor
rol
sub
pop
add
rol
xor
pop
push
push
push
push
push
push
push
lea
push
call
add
mov
insb
data16
mov
mov
fadds
push
push
add
xchg
data16
add
add
popa
add
add
add
sub
pop
push
push
dec
lea
pop
call
push
push
push
push
lea
push
push
call
lods
in
js
add
out
add
add
enter
popa
add
xchg
add
add
movsb
outsl
add
add
loop
add
cmpl
je
push
push
sub
push
or
not
add
shl
ror
sub
lea
sub
dec
pop
sub
pop
push
lea
not
sub
pop
push
push
push
push
call
rolb
clc
jl
in
movsl
add
add
jp
xchg
add
add
add
add
add
mov
add
add
mov
stc
push
enter
add
outsl
mov
push
shlb
lds
pop
mov
add
loop
fisubs
adc
mov
faddl
add
mov
add
imul
pop
call
push
lea
shr
pop
cmpl
jne
push
push
push
push
push
call
add
movl
in
mov
leave
push
jmp
popl
add
add
add
xlat
mov
add
jnp
mov
add
add
add
add
into
add
jge
push
mov
pop
add
mov
idivl
add
in
in
lcall
inc
adc
out
pop
shr
add
pop
movl
push
push
push
push
push
push
call
test
add
movsb
cmpsl
fiaddl
add
add
add
mull
add
aam
add
fildl
mov
pushf
jge
add
add
add
pop
loop
add
add
add
leave
sub
pop
jmp
xor
push
ror
rol
pop
pop
push
xor
shl
shl
pop
pop
push
lea
push
lea
push
lea
push
push
push
lea
push
call
add
mov
add
add
add
add
mov
mov
add
mov
imul
add
add
movsb
popf
fs
repnz
add
add
filds
aad
add
xchg
negl
cltd
push
add
leave
push
add
out
add
lods
add
add
push
push
lea
push
call
mov
push
in
loop
xchg
add
mov
mov
jge
leave
fistpll
sahf
pop
add
scas
add
add
add
mov
popf
jnp
in
add
add
test
add
sub
pop
pop
push
pop
leave
push
push
call
add
stc
mov
call
repnz
popf
push
shll
mov
pop
jbe
mov
adc
mov
add
mov
fs
pusha
ja
lods
fldln2
rclb
add
aad
add
cwtl
add
pusha
xchg
lcall
or
push
push
push
push
lea
push
push
call
add
add
add
add
jne
pop
pop
leave
fdivr
test
add
pop
shlb
stos
loop
add
enter
test
add
jb
add
jbe
popa
add
add
test
fisubs
add
aam
scas
sub
pop
push
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
add
fmuls
rolb
add
jb
jnp
add
fadds
add
mov
jecxz
data16
jge
pushf
cltd
call
mov
add
lcall
in
push
pop
add
cmpl
jne
push
push
push
push
pop
add
not
inc
sub
sub
dec
shl
pop
xor
add
lea
pop
push
push
push
push
push
call
movb
jmp
add
xchg
out
jp
mov
xchg
add
mov
mov
mov
xlat
pop
push
jno
add
xchg
mov
stos
ljmp
add
insb
fmuls
in
lcall
jne
call
push
ror
shl
pop
push
push
push
push
push
push
push
push
push
call
add
fdivl
popa
mov
rcrl
in
add
xchg
call
mov
mov
ret
test
add
add
add
insb
add
add
sub
pop
call
jmp
push
push
call
mov
add
add
add
rolb
add
mov
arpl
add
add
arpl
lock
add
add
cld
loope
add
in
clc
lcall
jge
add
test
push
push
push
lea
push
push
push
push
call
cltd
std
cmpsl
fxch
fimull
mov
add
testb
add
lds
jbe
repnz
mov
in
lcall
add
add
cwtl
add
add
add
add
loope
push
mov
ficompl
add
cwtl
je
scas
mov
repnz
mov
loope
sub
pop
cmpl
jne
push
push
push
lea
push
push
lea
push
push
push
call
mov
je
jle
bound
pop
add
jnp
popf
add
outsl
jge
add
bound
jne
filds
loop
pop
add
addb
cltd
insb
pop
mov
push
add
cmc
add
mov
mov
push
push
xchg
add
test
xchg
pusha
mov
in
loopne
lcall
inc
or
es
add
push
push
shr
push
xor
add
not
shr
ror
sub
add
shr
add
pop
shr
lea
pop
push
push
push
push
push
push
push
lea
push
push
call
pusha
nop
shrb
mov
push
hlt
add
add
add
add
cmpsl
add
add
xlat
sti
outsl
jne
add
out
add
add
filds
jmp
pop
add
add
in
fdivr
lcall
jne
push
lea
push
push
push
lea
push
push
push
push
push
lea
push
call
mov
pop
data16
int3
add
out
xchg
int3
add
ror
add
ljmp
add
mov
and
roll
sub
pop
call
push
shl
ror
pop
lea
push
shl
pop
push
push
push
push
push
push
lea
push
lea
push
push
push
call
add
jl
into
cmpsl
iret
add
addb
iret
add
add
add
add
aam
add
add
lret
mov
pop
addl
fisttpll
xorb
add
test
add
mov
add
rolb
outsl
lahf
hlt
aam
fildl
push
fs
pop
push
push
push
push
push
push
push
push
push
push
push
call
stos
ja
add
add
div
add
jb
add
add
out
add
stos
add
fadds
add
add
lret
push
imul
movl
sub
pop
push
push
push
push
push
call
movsb
xchg
add
fwait
lahf
jmp
add
add
rolb
popf
filds
test
mov
cwtl
push
add
add
pop
push
push
lea
shl
pop
call
push
push
push
push
lea
push
lea
push
push
call
bound
add
ja
roll
pusha
add
add
add
add
add
mov
mov
out
mov
add
arpl
lcall
push
shr
add
pop
jmp
push
lea
add
lea
pop
cmpl
jne
push
push
add
push
or
inc
add
lea
ror
add
sub
pop
shr
pop
push
xor
pop
pushl
push
xor
shl
sub
pop
call
push
lea
push
push
push
call
std
mov
add
add
add
les
add
add
jns
add
mov
arpl
jae
fwait
add
add
fiaddl
jl
add
movb
cmpsb
add
xlat
add
push
pop
outsl
sub
pop
push
push
add
shr
xor
add
pop
call
push
lea
push
push
call
push
jecxz
ja
jno
add
add
push
mov
xchg
pop
fcompp
add
add
mov
fsubrl
loope
ret
frstor
scas
in
cmpsl
insb
add
idivb
sub
pop
jmp
push
push
lea
push
push
call
push
fsubs
jb
push
clc
add
jbe
in
test
xchg
scas
add
mov
push
add
add
add
add
jmp
imul
pop
int
enter
loop
pop
add
outsl
lods
test
fiadds
push
add
enter
lahf
call
pop
cmpl
jne
push
xor
xor
inc
pop
mov
push
add
add
pop
mov
push
push
rol
shl
pop
jmp
push
push
sub
push
or
inc
add
sub
shr
xor
dec
pop
sub
not
ror
pop
push
sub
pop
pushl
push
push
push
push
push
call
add
in
add
add
add
add
pop
jecxz
add
jecxz
add
into
add
testb
add
int3
add
add
sub
pop
call
push
push
push
push
push
lea
push
push
push
call
scas
mov
js
add
add
mov
lods
movb
jb
add
add
jne
sub
pop
call
push
push
dec
xor
push
xor
add
shl
inc
sub
sub
shl
pop
sub
add
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
call
xlat
add
mov
xchg
movsb
xchg
add
int3
mov
cmpsl
std
aam
cli
add
in
imul
mov
add
sti
add
lretw
int3
add
out
mov
in
mov
add
add
lock
jbe
add
lock
out
in
fcomps
jne
call
push
sub
sub
shl
pop
call
push
push
lea
sub
push
and
add
lea
ror
sub
shr
sub
dec
pop
shr
add
sub
pop
push
xor
pop
pushl
push
not
sub
add
pop
call
push
push
lea
push
push
lea
push
push
push
push
call
ret
rcrl
add
xchg
sahf
mov
xchg
add
add
stos
add
xchg
int3
gs
rolb
rcrb
jge
add
add
add
add
js
in
loopne
call
push
push
ror
push
sub
add
lea
sub
sub
sub
ror
sub
pop
rol
pop
push
shr
xor
lea
pop
pushl
push
not
sub
pop
call
push
ror
lea
pop
lea
push
inc
not
dec
pop
push
push
push
push
lea
push
push
push
call
push
mov
lea
mov
mov
int
add
add
jge
mov
jmp
jbe
add
test
add
sti
nop
ret
add
mov
add
mov
pop
jecxz
xchg
push
pop
mov
mov
sahf
sub
pop
call
push
push
not
not
push
sub
add
dec
sub
xor
add
pop
sub
xor
pop
push
sub
dec
pop
pushl
call
push
push
push
lea
push
push
push
push
push
call
lcall
enter
add
stc
jns
add
mov
add
add
add
faddl
loop
jae
add
roll
mov
add
jbe
loopne
test
stos
add
pusha
jle
arpl
mov
pop
popa
stos
add
shrl
fwait
add
in
loopne
call
push
push
sub
rol
xor
push
sub
add
shl
add
sub
rol
sub
pop
sub
lea
pop
push
push
lea
push
push
push
call
fwait
add
test
pop
add
cwtl
mov
insb
stos
add
add
arpl
incb
mov
jb
add
add
jne
call
push
lea
push
lea
push
push
push
push
push
call
cmpsl
add
add
add
add
out
jne
rolb
mov
xchg
int3
int
loop
movsl
out
rol
add
push
clc
jl
add
pop
pop
add
fstpl
data16
push
out
mov
push
add
mov
sub
pop
call
push
push
shl
shr
shr
add
push
or
inc
add
rol
sub
rol
add
pop
inc
lea
pop
push
push
push
push
push
push
call
add
into
jp
jge
lcall
jge
push
add
add
push
jp
add
cli
add
add
ja
add
cld
lods
mov
call
pushl
push
shl
rol
pop
call
push
lea
push
push
lea
push
push
push
push
push
call
add
add
add
mov
lds
orl
add
add
cwtl
addr16
push
mov
add
add
xchg
add
stos
stos
outsl
add
add
movsb
add
int
sub
pop
call
push
xor
add
pop
lea
push
push
sub
not
shl
shr
push
sub
add
shr
inc
shr
sub
add
ror
pop
sub
pop
push
dec
shl
shl
pop
pushl
push
push
call
pop
mulb
cltd
pop
shrb
add
add
lods
add
jno
add
ficoms
add
movsl
lods
mov
add
push
lods
sub
pop
call
push
push
lea
add
pop
call
push
push
xor
sub
shl
push
or
not
add
sub
sub
add
sub
ror
pop
rol
dec
sub
pop
push
ror
inc
pop
pushl
push
lea
push
push
push
call
add
in
data16
pop
xchg
add
test
lods
add
mov
add
add
into
bound
out
loop
push
push
add
in
xchg
in
sub
pop
call
push
xor
pop
call
mov
push
push
shr
dec
push
or
not
add
inc
inc
ror
sub
add
pop
sub
pop
push
add
pop
pushl
call
push
push
lea
push
push
push
push
push
lea
push
call
add
aad
jnp
enter
loope
add
mov
add
out
add
int
ret
add
clc
add
push
add
lds
mov
xchg
ljmp
add
add
cld
add
add
add
mov
pop
rolb
lret
pusha
add
add
add
fldcw
add
xchg
hlt
mov
in
loopne
push
push
rol
pop
pushl
push
pop
call
push
push
shl
dec
push
sub
add
ror
rol
sub
shl
dec
not
pop
add
sub
add
shr
pop
push
add
sub
pop
pushl
push
push
push
lea
push
push
push
push
lea
push
push
push
call
in
sahf
add
test
mov
add
add
imul
mov
add
add
jecxz
add
add
int
add
loop
add
add
sub
pop
call
push
push
ror
push
push
pop
add
lea
inc
sub
not
dec
dec
pop
ror
sub
pop
push
push
add
dec
inc
dec
push
or
inc
add
shl
shl
dec
sub
xor
pop
ror
pop
push
push
lea
push
push
lea
push
push
lea
push
call
mov
outsl
xchg
add
xchg
add
add
add
lret
shll
xlat
add
add
add
add
in
sub
pop
call
push
push
add
sub
push
and
add
shl
sub
not
inc
shl
pop
dec
inc
pop
push
push
push
call
in
add
call
pop
add
add
add
add
add
ljmp
add
test
xchg
xlat
cld
add
pushf
add
hlt
add
andl
pop
ljmp
test
loop
movsb
jns
fwait
rcrb
add
mov
sti
add
jne
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
add
add
xchg
push
add
add
fs
add
xchg
add
int
add
out
push
add
xchg
add
jae
add
add
add
add
mov
add
jns
aad
lret
gs
add
add
add
add
into
add
stc
push
add
push
push
lea
push
push
push
call
mov
add
add
jae
jl
pop
mov
mov
ret
jns
jp
add
nop
orl
mov
add
add
cmpsb
cmpsl
add
lea
add
lcall
inc
hlt
lea
push
lea
push
push
call
bound
xchg
movsl
add
add
aam
scas
push
into
jae
add
xchg
push
add
test
shll
clc
push
mov
repnz
push
fcompl
pusha
bnd
sahf
movsb
insb
je
add
cli
add
out
add
mov
hlt
lcall
test
call
int3
sub
pop
push
push
shr
not
sub
pop
push
push
push
lea
push
push
push
call
gs
add
cmpsb
jmp
jmp
xchg
bound
fiaddl
stos
aam
add
add
push
rolb
add
in
stc
add
addl
add
add
cld
add
add
add
add
cltd
add
leave
add
lahf
xlat
add
scas
xchg
std
add
lcall
add
push
push
call
add
add
mov
enter
enter
add
mov
push
add
cltd
add
mov
or
hlt
add
clc
lcall
add
push
push
push
push
lea
push
push
push
lea
push
call
sahf
fs
push
jne
js
sahf
fs
mov
add
in
add
add
lret
add
add
add
push
mov
mov
add
lock
add
xchg
loope
xlat
mov
add
in
add
insb
in
jb
sub
pop
push
push
add
inc
pop
push
push
sub
pop
pushl
push
lea
add
pop
push
push
lea
push
push
push
push
push
push
call
push
jne
fldl
mov
movsb
add
lods
add
add
call
xchg
add
add
mov
jns
add
mov
lods
neg
add
rolb
cmc
add
add
leave
movb
popa
test
sub
pop
call
push
push
not
add
sub
push
xor
add
shl
ror
shr
add
sub
add
sub
inc
pop
rol
shr
sub
pop
push
lea
push
push
push
push
lea
push
push
push
lea
push
push
call
jecxz
rclb
clc
iret
add
mov
add
stos
addr16
push
push
int3
add
add
add
xchg
add
lret
add
xchg
add
addb
test
add
push
fwait
notl
fdivr
lcall
jne
call
push
dec
pop
call
push
push
call
mov
add
mov
pusha
add
mov
jnp
pop
jbe
loope
movsb
add
push
add
add
add
stos
fcompl
jo
jb
aad
mov
aad
mov
push
add
lock
enter
lcall
inc
clc
push
push
push
lea
push
push
push
call
notl
add
add
add
xchg
lahf
xchg
add
pop
jmp
add
add
les
add
xchg
add
incb
add
popl
add
mov
add
out
scas
fwait
add
pop
mov
push
add
subl
jo
add
add
sub
pop
pop
dec
jne
push
lea
push
push
push
push
push
push
call
xchg
add
add
add
outsl
cli
addl
cli
xchg
loopw
fidivs
test
add
mov
mov
arpl
mov
add
sub
pop
jmp
push
lea
push
push
lea
push
push
push
push
push
push
call
jns
js
mov
test
push
add
lock
mov
add
add
add
pop
add
test
add
insb
jmp
mov
jno
add
add
add
add
hlt
add
test
jge
push
fucomi
mov
test
sub
pop
call
push
push
lea
push
xor
add
not
sub
shr
pop
shl
pop
push
push
push
push
push
push
push
push
lea
push
call
jp
aad
xchg
rolb
pop
add
popa
add
pushf
pop
jbe
add
movl
mov
mov
push
in
fcompl
jne
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
imul
add
add
mov
mov
scas
xchg
shll
lcall
test
mov
add
imul
add
mov
pop
call
push
sub
dec
inc
pop
push
call
push
dec
xor
pop
mov
push
dec
pop
lea
push
push
sub
rol
push
sub
add
shl
shl
add
sub
not
inc
pop
not
shr
pop
push
add
shl
pop
pushl
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
push
lea
push
call
flds
jb
add
imul
mov
add
add
add
pusha
loope
lds
add
push
mov
add
mulb
add
bnd
add
add
sub
pop
call
push
sub
inc
lea
pop
push
push
push
push
push
lea
push
call
cltd
lcall
fcmovnbe
test
pop
in
add
scas
add
outsl
add
push
gs
les
mov
add
bound
add
rolb
add
push
int
add
shl
imul
add
add
iret
imul
pushf
add
sub
pop
call
push
push
sub
inc
ror
push
xor
add
xor
add
add
sub
dec
pop
add
shr
not
pop
push
xor
dec
rol
pop
pushl
push
ror
add
xor
pop
call
push
push
lea
push
push
push
push
call
add
add
pop
push
add
movsl
xchg
add
flds
add
enter
js
add
popa
movl
imul
jnp
test
std
mov
xchg
sahf
imul
rcr
add
add
add
scas
pop
add
enter
add
add
rclb
stc
push
push
push
lea
push
push
push
push
push
call
add
arpl
hlt
mov
ljmp
mov
stos
add
add
scas
lods
out
jecxz
lcall
xchg
lods
add
add
popa
add
mov
add
pushf
outsl
add
lods
mov
imul
cwtl
mov
cld
int
add
movsb
arpl
add
sub
pop
mov
push
push
push
lea
push
lea
push
push
call
pop
add
addb
xchg
add
add
faddl
divb
add
pushf
mov
pop
push
jecxz
test
add
add
rolb
mov
add
pushf
mov
out
pop
imul
pop
lea
push
push
lea
add
push
sub
add
add
dec
xor
sub
add
pop
sub
sub
pop
push
push
push
call
add
add
add
cmpsb
out
shr
add
pushf
add
add
fucom
in
add
popl
call
sahf
test
add
add
rclb
mov
in
hlt
pop
pushl
push
lea
push
push
push
push
lea
push
call
mov
pop
jns
add
mov
push
add
test
jbe
addb
mov
fld
add
add
add
fildl
add
cltd
int3
xlat
push
jmp
ja
add
add
mov
jp
mov
addb
pop
pop
mov
add
add
mov
push
enter
sti
ret
iret
push
sub
pop
call
push
push
call
add
iret
jmp
add
roll
push
mov
iret
mov
jnp
add
iret
lock
xchg
jmp
imul
add
add
test
enter
xchg
add
xchg
pop
mov
cmc
bound
jp
stos
mov
jl
mov
lcall
add
push
push
call
jnp
mov
add
add
sarl
jae
add
fiadds
stos
ljmp
add
icebp
imul
cltd
std
xchg
ljmp
add
mov
xchg
pop
add
cld
sub
pop
push
push
xor
ror
rol
pop
push
push
lea
push
push
push
push
push
push
lea
push
call
add
test
xchg
add
data16
call
add
insb
cmc
into
mov
add
add
xchg
mov
int3
fdiv
mov
add
fiaddl
cmpsl
add
xchg
out
test
add
push
mov
faddl
popf
addr16
loope
addb
pop
add
add
shrb
jmp
add
in
loopne
push
pushl
push
push
inc
sub
rol
push
and
add
add
add
sub
sub
pop
add
xor
shl
pop
push
push
lea
push
push
push
push
call
aam
js
pop
add
ljmp
add
movsl
add
add
cmpsb
int3
add
shrb
cld
add
out
add
add
lock
addb
fiadds
sub
pop
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
sbb
stos
int
push
add
add
clc
add
lock
data16
mov
add
rolb
in
scas
fldl
add
add
add
in
data16
imul
mov
mov
add
sti
push
cltd
mov
mov
popa
add
loop
mov
mov
jnp
mov
push
add
mov
jl
shrb
shrb
xchg
lock
push
ror
sub
inc
push
or
not
add
rol
sub
ror
pop
inc
sub
not
not
pop
push
push
lea
push
push
lea
push
push
call
roll
jle
cltd
out
add
add
add
pop
rolb
add
add
add
fs
add
loop
add
lcall
jne
push
lea
push
lea
push
push
push
call
loope
add
add
add
add
add
push
lret
add
add
mov
push
add
add
xchg
mov
std
sub
pop
call
push
dec
pop
push
push
inc
shr
dec
pop
call
push
push
lea
sub
push
push
pop
add
rol
sub
dec
lea
add
add
pop
lea
rol
pop
push
push
lea
push
push
push
push
push
call
add
out
pop
scas
add
mov
add
out
repnz
push
test
jne
add
test
sub
pop
pushl
push
push
push
lea
push
push
push
push
push
push
call
add
lret
add
arpl
roll
push
add
xchg
add
out
add
lds
jbe
mov
add
jl
mov
add
fdivr
lcall
push
adc
add
rclb
pop
push
push
push
push
call
add
cmpb
hlt
add
enter
add
stos
jae
les
ror
push
add
add
fldl
testb
scas
add
pop
add
add
imul
in
mov
push
mull
lret
add
add
add
out
mov
into
gs
push
add
sbbl
jp
ret
in
pop
jmp
push
xor
add
rol
pop
pushl
push
push
lea
push
lea
push
push
push
call
add
test
add
imul
iret
icebp
movsl
aam
add
add
cmc
lods
add
add
add
ljmp
add
jp
lret
add
mov
push
pop
jmp
push
push
add
inc
shr
push
or
inc
add
add
lea
add
dec
sub
shl
lea
xor
add
pop
shr
sub
add
pop
push
dec
sub
dec
pop
pushl
push
push
push
push
push
push
call
iret
cmpsl
add
add
add
je
add
add
adc
add
addl
add
out
add
icebp
add
pop
pushf
xchg
mov
xchg
in
add
lcall
orb
add
movb
leave
xor
pop
call
push
push
rol
push
and
add
lea
sub
sub
add
not
shl
pop
ror
inc
inc
inc
pop
push
lea
push
push
call
add
add
mov
mov
mov
pusha
fistps
add
add
add
lret
hlt
mov
add
xlat
leave
js
rcr
in
hlt
lcall
jne
call
push
push
push
push
call
add
icebp
in
add
fiaddl
sti
movl
add
pop
test
add
mov
hlt
out
jns
add
cmpsl
mov
mov
add
stc
add
push
add
imul
aam
sub
pop
push
push
not
pop
call
push
lea
push
lea
push
push
push
call
add
add
mov
add
leave
rolb
push
add
mov
add
mov
jmp
scas
mov
add
stos
fwait
out
lds
scas
add
pop
lahf
mov
out
add
jge
add
pop
add
cmpsb
xchg
in
enter
cli
pop
int
add
xchg
add
lret
fdivs
in
lcall
add
push
pop
pop
push
add
add
pop
pop
push
not
shl
pop
pop
push
sub
sub
pop
pop
push
lea
push
push
push
lea
push
push
call
add
add
out
pop
xchg
add
cmpsb
mov
add
repnz
push
shr
ljmp
sahf
add
mov
imul
add
in
call
frstor
dec
push
push
lea
push
push
push
push
push
call
rcll
popf
add
add
add
arpl
add
add
pop
scas
ret
add
in
in
fcompl
les
push
push
lea
push
push
push
push
push
push
push
push
call
test
popa
mov
add
xchg
imul
jne
jbe
mov
lds
test
push
test
scas
add
jne
test
enter
add
out
cld
mov
add
mov
add
orl
mull
add
add
xchg
pop
push
outsl
lea
lcall
push
lea
push
lea
push
push
lea
push
lea
push
push
call
mov
fs
fwait
out
add
push
movsl
add
cld
add
hlt
filds
add
ljmp
add
add
sub
pop
ret
push
lea
push
push
call
add
rcll
mov
cmp
test
pop
add
add
sahf
xchg
add
iret
pop
add
add
fwait
xchg
popa
add
add
loope
pop
push
add
sub
pop
push
push
add
sub
inc
add
pop
mov
push
dec
not
xor
pop
cmpl
jne
mov
push
push
push
push
push
push
push
call
add
add
add
jne
popf
std
lahf
add
pop
outsl
add
xlat
popa
xchg
cwtl
incb
xchg
jecxz
pop
lret
add
add
add
insb
fldl
mov
mov
hlt
add
push
inc
or
lea
push
push
push
push
push
push
lea
push
call
mov
mov
jns
add
pop
aad
popl
add
mov
int3
add
add
test
xchg
push
jge
lcall
add
test
sub
pop
and
push
pop
xor
xor
push
sub
pop
add
push
push
push
push
lea
push
push
push
push
call
xchg
add
jns
subb
icebp
enter
aad
aad
iret
out
ja
scas
add
add
add
add
pop
jno
fcompp
push
xchg
add
add
sub
pop
xor
push
ror
dec
pop
dec
push
ror
pop
sub
push
push
push
push
lea
push
push
call
mov
fxch
mov
lods
enter
aam
add
out
hlt
lret
add
je
push
in
jo
add
xchg
mov
pop
mov
add
test
sub
pop
jmp
push
push
lea
push
push
call
pop
jge
jle
scas
fs
testb
pop
add
call
jns
xchg
add
testb
in
lock
lcall
add
add
push
lea
push
call
lret
add
cmpsl
add
aad
xchg
fcoml
mov
mov
add
jp
nop
push
imul
cwtl
push
add
mov
clc
lcall
xor
sub
add
add
sub
pop
sub
push
sub
xor
sub
shl
pop
cmp
jne
mov
push
push
push
lea
push
push
push
call
add
mov
add
add
fadd
enter
add
mov
add
add
in
jp
nop
add
add
lcall
dec
cmp
jmp
pop
mov
push
shl
add
xor
pop
shr
push
pop
add
push
push
push
call
add
out
push
pushf
add
mov
xchg
aam
mov
add
add
add
mov
mov
roll
lcall
jmp
push
push
push
lea
push
lea
push
push
push
call
add
mov
add
add
lds
add
rolb
add
rcrl
repnz
filds
int3
mov
xchg
movsb
jnp
popf
cli
imul
loopne
pop
push
not
add
xor
pop
shr
and
push
shr
pop
sub
push
sub
xor
pop
cmp
jne
push
lea
push
call
push
xchg
pushf
fdivp
add
xchg
popf
add
fsubrp
mov
mov
insb
mov
add
add
xchg
add
outsl
add
add
add
add
mov
jb
add
add
cld
fwait
add
clc
pop
leave
push
lea
push
push
push
push
push
push
lea
push
call
xchg
add
mov
inc
xchg
jmp
xchg
mov
add
cmpsl
add
in
rol
add
ror
std
addr16
pop
ret
push
xor
shl
shr
pop
push
push
dec
ror
pop
mov
push
pop
add
push
push
push
push
push
push
push
call
add
pop
xchg
in
jge
roll
add
add
add
add
add
xchg
shll
pop
add
clc
repnz
add
ja
mov
movsl
movsb
add
add
jecxz
add
add
test
pop
lea
mov
enter
in
lcall
push
push
push
push
push
push
push
call
mov
std
xchg
add
add
jp
fnclex
add
pushf
add
add
xchg
mov
pop
push
add
test
add
in
call
add
xchg
xchg
add
out
addb
mov
push
sub
pop
push
push
push
shr
pop
push
push
push
push
push
call
jl
add
jecxz
out
mov
add
jle
add
scas
cmc
ret
add
add
ljmp
cli
stos
cmpsl
add
add
and
add
add
xlat
aad
scas
add
fs
add
add
sub
pop
mov
push
add
dec
sub
pop
lea
push
not
pop
sub
push
lea
push
lea
push
push
call
add
push
add
mov
call
ja
pop
stc
js
mov
pop
outsl
pop
addb
add
in
test
sub
pop
mov
push
add
pop
shr
push
shr
xor
shr
add
pop
add
mov
push
push
push
push
lea
push
call
mov
xchg
aam
add
cld
add
scas
add
mov
pop
xlat
fistps
add
leave
add
pop
add
add
in
xchg
add
add
fdivrl
add
pop
or
negl
jnp
push
sub
add
dec
xor
pop
add
push
add
xor
pop
xor
mov
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
gs
jmp
add
add
stos
popf
lds
add
fidivrl
mov
repnz
add
pusha
add
mov
mov
add
fwait
add
imul
add
add
xchg
add
fiaddl
fadds
lcall
loopne
push
sub
sub
pop
rol
push
add
not
shl
pop
rol
xor
push
lea
push
push
push
push
lea
push
push
call
add
add
adcb
xchg
fstp
push
mov
add
lahf
add
add
add
jp
add
cwtl
loop
mov
sti
stos
push
add
sub
pop
inc
push
dec
sub
pop
cmpb
jne
add
push
sub
pop
cmp
je
push
push
lea
push
push
push
push
push
call
mov
imul
iret
mov
push
lcall
fwait
push
int3
cwtl
add
int
je
add
subl
add
add
jns
in
in
lcall
ret
adc
ror
pop
cmpl
jne
push
push
push
lea
push
push
lea
push
call
int
fidivrs
add
fstps
mov
add
add
mov
ja
fdivl
jno
mov
mov
add
sub
pop
xor
pop
push
lea
inc
sub
pop
pop
push
lea
push
push
push
push
lea
push
lea
push
push
call
mov
add
push
mov
push
int3
mov
add
xchg
push
lahf
add
add
add
out
sahf
mov
les
cmpsb
int3
add
lret
add
call
mov
mov
add
out
add
arpl
in
repnz
iret
cwtl
sarb
in
loopne
lcall
pop
push
shl
rol
pop
pop
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
add
add
add
add
jge
add
add
insb
data16
mov
push
iret
pop
loope
add
mov
fwait
add
rolb
mov
add
add
fcomps
ret
push
shr
shr
pop
mov
push
push
push
push
push
push
call
out
clc
fwait
testb
andb
cmpsb
add
add
push
shl
add
popa
mov
lods
mov
add
add
xlat
add
fiadds
mov
add
lcall
push
or
push
push
call
add
pushf
add
filds
stos
andl
aad
bound
add
mov
mov
out
ljmp
icebp
add
addb
iret
mov
add
mov
sti
bound
popf
add
sub
pop
push
push
inc
pop
add
mov
push
xor
sub
pop
testw
pop
push
lea
push
push
push
call
mov
push
mov
add
add
add
xchg
push
add
imull
pusha
add
jp
pop
faddl
not
add
add
add
testb
ljmp
add
jmp
lcall
push
inc
shl
pop
mov
push
push
push
push
push
push
push
push
push
push
lea
push
call
fcom
mov
xchg
add
cltd
jo
mov
repnz
add
add
pop
add
fwait
mov
vcmpps
jno
add
ficoml
add
cltd
add
add
xchg
cwtl
lea
lcall
add
call
out
pop
xor
push
shr
pop
pop
push
shr
not
rol
pop
pop
push
dec
xor
xor
xor
pop
pop
pop
push
xor
dec
add
sub
pop
pop
push
push
lea
push
push
push
push
lea
push
push
push
call
add
add
out
add
add
icebp
addl
add
mov
rcr
push
outsl
add
mov
ja
call
mov
test
jo
lods
idiv
xchg
test
add
cltd
ret
add
add
stos
xchg
add
mov
ret
add
add
pop
sub
pop
leave
push
push
push
push
push
call
add
jl
add
add
add
ja
mov
in
jno
add
add
add
add
jno
in
jle
add
test
add
pop
rcll
add
jecxz
add
add
rolb
pop
add
add
test
add
pop
mov
lcall
or
push
ror
pop
push
push
shr
pop
mov
push
not
sub
sub
pop
add
push
inc
inc
lea
pop
push
push
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
hlt
add
orl
stos
push
add
xchg
aam
xchg
add
add
mov
arpl
add
sub
pop
push
push
push
lea
push
push
push
push
call
jmp
add
add
add
mov
mov
mul
add
gs
add
mov
add
add
cmpsl
xchg
add
add
jbe
popa
call
jl
jecxz
iret
jp
rolb
add
scas
data16
jecxz
adc
sti
out
leave
outsl
push
mov
in
in
pop
mov
push
push
push
lea
push
push
push
push
push
push
call
jne
mov
add
test
cwtl
add
add
in
movsl
add
add
movl
add
add
clc
add
mov
add
add
add
fistps
cmc
add
add
add
movsl
rcll
pop
add
push
add
pop
pop
push
xor
pop
lea
sub
push
ror
dec
pop
mov
push
push
push
call
push
fadds
gs
mov
mov
add
je
add
mov
rolb
xchg
fcmovbe
add
arpl
test
mov
cmpsb
bound
int
add
add
jp
popa
clc
cmc
add
add
in
pusha
jb
stos
add
notl
push
shr
push
shl
pop
add
push
inc
dec
shr
xor
pop
mov
add
push
push
push
lea
push
call
mov
ljmp
sti
mov
add
add
add
push
test
add
mov
add
ret
lock
add
loopne
loopne
xchg
leave
fcmovnu
out
xchg
clc
incb
jl
in
lock
pushl
push
push
push
push
push
push
push
call
mov
incb
loope
fdivrs
cld
rcrb
jle
pusha
add
out
push
xchg
pop
add
add
add
pop
test
jmp
mov
in
in
lcall
inc
clc
push
ror
shl
pop
mov
push
push
push
push
push
push
push
push
call
movsl
sti
mov
ret
add
out
fcmovnbe
clc
add
popf
push
add
repnz
mov
insb
cmpsl
add
add
arpl
mov
mov
mov
add
addl
lds
mov
jnp
sub
pop
add
push
push
push
lea
push
push
push
push
call
add
mov
cmc
add
xchg
popf
xchg
test
lret
push
add
lods
jl
test
add
call
les
lcall
je
add
stos
push
mov
sahf
jno
xchg
add
out
add
jb
xchg
mov
gs
add
xlat
in
push
mov
in
xor
lea
push
lea
push
call
mov
jne
add
add
jne
pop
scas
pushf
xchg
nop
mov
add
pop
add
mov
pop
mov
pusha
fnop
pop
pop
mov
add
add
add
fadds
adc
rcll
xlat
pop
xor
push
push
push
push
push
lea
push
push
push
call
jmp
add
addl
add
push
add
add
add
xchg
lret
mov
out
cmc
add
lea
jl
iret
add
les
add
push
add
bound
push
loop
add
in
mov
iret
mov
add
mov
ret
icebp
aad
jo
call
rol
push
dec
ror
pop
nop
nop
push
push
call
push
lea
add
ja
mov
insb
rcrb
pop
pop
add
add
jb
loopne
cwtl
cmpsl
popf
arpl
aad
mov
add
add
insb
add
ljmp
xchg
in
mov
lahf
test
int3
mov
cld
add
add
mov
sub
pop
xor
push
not
pop
nop
nop
push
sub
ror
inc
pop
inc
nop
push
sub
sub
pop
nop
push
push
push
call
cmpsl
fwait
add
jmp
add
add
add
sahf
mov
mov
add
add
add
fadds
add
faddp
push
out
pop
mov
mov
rolb
jae
insb
add
add
pop
movl
add
test
incl
push
sub
pop
nop
push
lea
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
cltd
in
rolb
add
jmp
add
nop
add
sahf
cli
xchg
mov
push
scas
rclb
mov
stos
repnz
add
je
pop
add
mov
add
add
hlt
add
add
pop
jmp
lret
mov
out
mov
adcb
js
push
add
add
in
lods
pop
add
scas
lcall
lea
pop
cmp
je
push
pop
nop
nop
push
push
push
push
lea
push
push
lea
push
push
push
call
add
add
add
gs
mov
ficomps
add
sarb
mov
add
popf
adcl
add
scas
sarl
stos
add
std
add
add
mov
add
push
fnstsw
into
lods
jp
push
vpcomub
inc
nop
push
shr
ror
sub
pop
nop
push
push
push
push
push
lea
push
call
add
jne
pop
mov
mov
mov
loope
mov
add
jp
mov
add
sub
pop
cmp
jb
push
xor
add
pop
xor
jmp
push
push
push
push
call
mov
add
add
add
scas
addb
add
mov
mov
nop
add
add
cmpsb
add
add
rcl
add
movsb
int3
shr
add
xchg
outsl
imulb
in
lock
lcall
push
and
rcll
hlt
shl
sub
pop
movzwl
mov
push
push
push
lea
push
lea
push
lea
push
call
add
jge
jge
push
add
pushf
add
std
mov
fisubl
jecxz
add
movsl
add
jp
xlat
out
lds
nop
test
imul
shll
call
push
call
xchg
add
test
mov
add
negl
add
add
fcmovnb
mov
add
add
jmp
jp
add
add
mov
xchg
mov
xchg
fildl
call
lcall
dec
hlt
xor
push
sub
rol
inc
pop
xor
push
shl
pop
shl
xor
push
not
sub
lea
sub
pop
shl
push
not
dec
ror
pop
xor
push
push
push
push
push
call
sti
add
bound
pusha
jbe
add
cltd
push
add
js
xchg
addr16
pop
jnp
add
pop
int3
xchg
rcl
mov
add
add
add
add
add
push
add
mov
call
insb
xchg
add
add
scas
add
addr16
js
add
lock
lcall
loope
push
push
lea
push
lea
push
push
push
push
call
mov
add
add
cmpsl
add
add
jp
jge
cltd
add
into
mov
add
jbe
xchg
popf
movsl
mov
ljmp
add
push
leave
aad
mov
mov
add
add
add
in
in
lcall
or
push
push
push
call
add
xchg
loop
add
rolb
jle
jge
pop
addl
pushf
add
add
add
mov
push
sti
add
testb
add
mov
sub
pop
mov
push
sub
shl
ror
pop
add
pop
push
push
push
push
push
push
push
call
jnp
lahf
mov
add
add
iret
fwait
add
add
sti
ja
cmp
out
mov
mov
outsl
hlt
mov
mov
add
add
add
add
std
add
int
popa
jp
stos
movl
mov
jo
add
popf
add
jb
sub
pop
pop
push
ror
rol
shr
shl
pop
pop
pop
push
lea
not
pop
leave
push
push
push
push
push
push
push
call
cld
add
insb
sar
mov
add
cli
lods
test
lcall
jecxz
xchg
add
roll
add
mov
add
add
mov
add
jo
cmpsl
call
add
test
xchg
pop
loop
pop
push
mov
jo
add
add
sub
pop
ret
push
dec
shl
pop
push
mov
push
push
push
push
push
push
push
push
lea
push
push
call
in
cli
cmc
add
stos
fsubs
xchg
mov
add
add
push
pusha
add
add
pop
fmul
std
jmp
ret
out
jle
imul
push
jmp
add
add
mov
ficoms
in
fcomps
push
push
push
lea
push
push
push
call
add
add
add
notl
in
sbb
add
jge
les
mov
add
xlat
in
mov
out
insb
in
add
add
cld
add
test
push
add
push
push
lea
push
push
lea
push
push
call
xchg
add
add
add
jnp
out
icebp
add
push
scas
add
loop
jle
enter
out
mov
add
fbstp
ljmp
add
mov
jns
rolb
add
mov
xlat
jb
mov
add
add
push
push
push
push
push
push
push
push
push
call
mov
add
add
popa
pop
jmp
add
push
jl
test
add
jnp
add
xchg
add
add
add
cltd
div
add
add
push
add
mov
mov
jne
in
in
lcall
dec
or
adc
shl
pop
mov
test
je
push
lea
push
push
push
push
push
lea
push
call
mov
rcr
add
clc
add
add
mov
icebp
add
add
add
lds
clc
aam
cld
iret
scas
jle
mov
sti
imul
add
test
add
cmpsb
add
ja
add
add
movb
enter
out
add
scas
aam
add
in
in
lcall
jno
test
je
push
add
sub
shr
pop
mov
push
add
pop
mov
push
push
lea
push
call
add
push
add
add
add
add
add
ficompl
pop
out
add
add
add
popf
in
fdivp
mov
add
sub
pop
mov
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
arpl
fiaddl
add
add
test
jecxz
add
call
add
add
push
add
jle
jle
ret
add
add
shrl
fwait
cli
mov
cmc
add
fdivr
lcall
push
push
call
cmpl
mov
scas
push
add
jp
xchg
pop
add
cmpb
ret
cwtl
push
cwtl
xchg
add
std
add
add
push
popa
sahf
fcmovnbe
add
add
add
gs
mov
add
mov
sub
pop
cmp
je
push
not
pop
test
je
push
dec
dec
sub
pop
mov
push
push
push
lea
push
push
push
push
lea
push
push
push
call
jno
jle
add
push
call
je
add
pop
mov
xchg
pusha
in
add
jnp
add
fildl
add
lods
add
add
push
push
push
lea
push
push
push
push
push
push
push
call
pop
nop
test
flds
rolb
je
add
push
cmpsb
fs
mov
addb
add
popa
subl
add
add
iret
add
lahf
add
add
rorb
test
lea
push
lea
push
lea
push
push
push
push
lea
push
push
call
jb
add
add
add
add
add
mov
xchg
add
add
xchg
adc
js
add
popf
lret
aam
add
pop
mov
push
add
xchg
add
add
loope
jnp
push
ljmp
data16
add
jns
movsl
loope
icebp
popf
mov
mov
in
add
stc
scas
add
sub
pop
test
jne
push
push
lea
push
push
push
push
push
call
add
add
xchg
add
add
pushf
pop
pop
add
add
movsb
mov
in
lahf
js
fs
jne
rcll
cltd
loop
in
in
lcall
rclb
sbb
pop
mov
sub
dec
push
push
push
push
lea
push
lea
push
call
test
lret
int3
add
aam
add
add
add
xchg
mov
add
add
popl
in
add
sar
out
pop
xchg
add
mov
add
in
sub
pop
pop
pop
push
push
call
add
add
add
add
push
add
add
add
xchg
add
rorb
jae
mov
add
mov
add
add
mov
add
add
rclb
jae
add
add
popl
jae
lods
mov
add
mov
add
in
clc
lcall
push
dec
pop
pop
push
push
call
lds
add
pusha
add
fisubl
test
add
test
add
int3
add
add
add
out
stos
leave
add
filds
add
pop
add
push
add
push
xchg
mov
xchg
jns
in
clc
pop
leave
push
push
call
clc
add
add
jnp
cltd
push
xorb
mov
add
push
pop
fwait
push
mov
add
bound
iret
jo
add
xchg
add
mov
sahf
add
add
shlb
pushf
jne
imul
bnd
add
mov
rorl
add
xchg
add
mov
sub
pop
ret
mov
push
not
pop
inc
cmp
jne
push
push
push
push
push
push
push
push
push
push
call
test
xchg
xchg
push
in
sti
xchg
xchg
mov
pop
clc
repnz
lcall
sub
pop
lea
push
sub
pop
mov
test
je
push
push
lea
push
lea
push
call
addb
add
add
push
mov
jle
movsl
add
add
add
add
mov
ja
loope
movsl
hlt
popf
sub
pop
mov
push
xor
not
shl
pop
add
push
push
push
push
push
push
push
push
call
add
add
xchg
loopne
add
aam
xchg
add
leave
add
lret
scas
add
jno
add
push
scas
push
std
add
loop
movl
pop
cmp
jne
mov
push
shl
sub
pop
test
je
push
push
lea
push
push
push
push
call
ja
loope
insb
add
lds
jno
pop
in
add
mov
add
hlt
into
mov
jecxz
lea
add
add
push
add
popf
add
incw
pop
cmp
je
jmp
push
lea
push
push
lea
push
call
mov
add
add
add
jl
add
add
jge
add
mov
add
xlat
add
add
cld
gs
out
loope
in
stc
add
rclb
inc
bound
lea
push
lea
push
call
fiadds
push
add
jo
add
fs
imul
ret
push
add
clc
in
out
mov
add
in
call
lea
push
push
push
push
push
push
push
call
xchg
mov
pop
lahf
jne
sbbb
mov
add
stos
add
add
push
cwtl
faddl
add
xchg
push
roll
lods
out
add
enter
fdivr
lcall
pop
push
push
lea
push
push
push
lea
push
push
call
cld
aam
add
outsl
lea
add
add
add
add
add
sti
into
add
xorl
add
jbe
add
add
leave
push
not
lea
pop
ret
push
sub
not
add
add
pop
lea
push
push
push
push
call
push
mov
add
add
jne
push
mov
add
icebp
test
loop
into
je
rcl
jl
xchg
mov
fisttps
lods
pushf
out
xchg
pop
push
mov
mov
add
add
add
lret
mov
addl
add
push
ror
add
pop
pop
push
lea
ror
add
dec
pop
pop
push
lea
pop
pop
leave
push
lea
push
push
push
lea
push
call
outsl
add
pop
std
add
lock
mov
add
testl
push
lahf
int
push
add
cwtl
add
rorb
mov
mov
add
push
jbe
rolb
add
stc
push
mov
test
add
js
add
nop
add
sub
pop
ret
push
push
push
push
lea
push
push
call
adc
add
roll
xchg
mov
push
fiaddl
add
add
jmp
je
add
jmp
add
bound
add
add
pop
pusha
add
add
add
push
loope
mov
add
lcall
push
rol
xor
pop
pop
push
push
push
push
push
push
push
push
lea
push
call
jno
shl
add
mov
add
out
stos
loop
scas
add
push
add
iret
add
arpl
pop
add
imul
rclb
add
out
mov
xlat
iret
sub
pop
pop
push
dec
pop
pop
pop
push
lea
shl
pop
leave
ret
xor
cmp
push
inc
cmp
xor
adc
adc
adc
add
adc
sti
cmp
xor
adc
jb
adc
mov
add
mov
shrb
xchg
mov
mov
jo
sub
xor
and
xchg
push
dec
sbb
nop
mov
push
xor
movsb
fmull
test
xor
xchg
les
sbb
mov
cld
ja
cwtl
repz
push
mov
es
jns
push
cld
cs
stos
ss
cmp
mov
jp
cmp
testb
adc
mov
in
dec
sbb
les
sti
xchg
push
popf
mov
sbb
push
std
mov
mov
inc
mov
xor
mov
adc
xchg
mov
imul
jecxz
iret
or
push
in
cmp
mov
addb
pop
push
adc
and
xchg
xor
jge
xchg
fsubl
xchg
ja
sahf
pop
call
mov
pushf
int3
insl
or
fsubl
repz
leave
xchg
or
shrb
out
out
dec
adc
rcll
pusha
jl
sub
imul
cmp
cmp
pop
enter
pop
cmp
std
push
xor
pop
cwtl
out
inc
mov
in
outsb
xchg
jmp
enter
or
inc
int3
test
sub
aas
push
xchg
cltd
push
sbb
mov
and
imul
lods
out
and
and
aam
shl
ret
add
mov
push
mov
push
pop
jnp
popl
mov
sub
into
add
xchg
inc
lods
jne
roll
dec
cmpsb
jg
sub
andl
pop
ss
jl
push
repnz
sub
or
dec
xchg
inc
inc
pop
mov
es
psadbw
mov
push
pop
cmp
data16
or
sub
pop
mov
add
nop
hlt
jnp
pusha
out
adc
jmp
pop
arpl
pop
push
push
mov
pop
jo
sbb
inc
cmpsl
popf
mov
xlat
dec
lahf
lods
dec
orl
inc
add
jo
out
fisubrl
test
jbe
mov
test
sub
inc
mov
xchg
xchg
movsb
push
inc
je
add
fwait
lret
xchg
sub
ja
sbb
stos
pop
sub
out
aad
sub
rcr
cmp
mov
inc
pop
mov
repz
dec
bound
and
cmp
ss
sti
dec
push
sub
sti
and
xor
iret
mov
cmc
push
jmp
notb
clc
pop
add
aad
jg
shll
mov
inc
and
ja
mov
add
pop
leave
cmc
gs
fsubl
pop
stos
pop
ret
mov
sbb
push
fisubs
mov
sti
pop
pop
rcrb
or
push
xlat
sub
test
lcall
sub
push
inc
jae
mov
mov
mov
mov
shlb
and
jns
add
sub
in
test
in
cmp
out
mov
outsb
xor
and
cli
mov
pop
mov
repz
add
cld
adc
xor
out
jmp
cmpsb
xor
jne
mov
sub
or
repz
push
imul
inc
add
andl
ss
mov
rorb
in
cmpsl
call
or
addr16
enter
xchg
pop
or
movb
rol
pop
and
jge
push
push
pop
and
aaa
fcompl
outsb
scas
imul
mov
cmp
xor
mov
jmp
out
mov
mov
push
sbb
scas
pop
jge
mov
add
add
mov
shll
pop
xchg
inc
pusha
das
dec
nop
adc
inc
xchg
cmp
fcmovne
mov
loopne
repz
add
data16
fistps
sti
sbb
shll
fisubrl
jo
rcrl
mov
or
enter
mov
fs
xorb
mov
sbb
jno
lods
test
idiv
in
xchg
mov
mov
jnp
dec
cld
xlat
loope
adc
bound
mov
dec
pop
adc
gs
push
xor
jecxz
add
xor
xchg
movsb
push
dec
pop
pop
roll
push
insb
adc
outsb
hlt
js
lds
pop
mov
push
jp
dec
hlt
test
cmp
xchg
push
icebp
xchg
fsubrs
stos
lods
adc
add
sub
into
arpl
mov
aaa
subl
ret
imull
in
xchg
add
xlat
add
xor
xor
pop
insl
es
fdiv
inc
jbe
jns
ja
jnp
pop
cld
inc
mov
testb
adc
or
mov
jb,pt
jb
rsm
mov
and
mov
lcall
lods
lfs
sti
daa
pop
mov
jae
and
inc
fs
cmc
gs
in
cld
xor
mov
les
cmp
dec
repnz
ret
lret
insb
inc
cmp
mov
pop
in
push
xchg
ret
ja
cmpsl
lret
roll
mov
divb
mov
imul
movsb
adc
pop
shll
xchg
mulb
arpl
loop
mov
and
sub
pusha
cmp
mov
jmp
pop
or
jnp
adc
imul
imul
clc
sti
inc
cld
pop
sub
iret
fistpll
and
add
ret
ficomps
add
xchg
mov
push
xor
cmpsb
xchg
imul
sbb
int3
inc
or
ret
sbb
add
pop
pusha
shl
rcl
in
push
loope
cmpb
cmp
xor
or
lea
aam
daa
imul
xchg
into
add
pop
movsb
cmpsl
popf
ds
aas
fsubl
insl
pop
sub
sbb
lods
fldl
push
popa
lahf
ret
in
clc
mov
inc
xchg
cltd
cmpsb
and
sub
push
in
jb
ljmp
addb
leave
stos
cmpsl
inc
dec
stos
fcmove
pop
mov
mov
gs
lahf
outsb
xor
cld
and
pop
fmull
jp
int3
cmp
mov
imul
sub
pop
xor
popl
je
aaa
std
repnz
dec
icebp
fldcw
pop
cmp
dec
rclb
sar
ret
sbb
jo
sbb
xchg
lods
or
jl
int3
sub
inc
adc
xor
sti
out
bound
out
inc
push
stos
mov
aas
sbb
pop
jg
push
aam
jnp
jmp
pop
dec
push
pop
test
inc
mov
das
lea
dec
mov
mov
nop
sbb
mov
lods
imul
jge
call
cmp
sub
add
pusha
xchg
dec
pop
xchg
iret
lds
into
imull
cmp
loop
imul
mov
mov
dec
inc
fbstp
add
and
cmp
jbe
repz
dec
cmp
pop
in
cmp
push
les
pop
fwait
mov
mov
pusha
gs
mov
adc
push
repnz
out
xchg
lods
rcll
repnz
adc
add
push
sub
icebp
sub
pop
push
aaa
cli
nop
out
scas
lock
ss
and
lret
jo
gs
xor
mov
icebp
fwait
int
adc
push
mov
xchg
jecxz
test
fs
lahf
add
sti
rclb
xor
or
fsub
lcall
addl
jae
pop
in
rcl
dec
xchg
imul
inc
jg
dec
jg,pt
push
shl
cmp
jle
fnsave
dec
sub
jb
inc
xchg
mov
jne
jae
add
pop
lods
sbb
hlt
imul
mov
out
cmp
inc
fnsave
je
push
xchg
inc
int3
and
push
jnp
cld
sub
insl
mov
sub
shll
arpl
mov
jne
and
and
push
dec
sbb
jo
dec
push
xchg
cmp
call
lcall
dec
cmp
nop
imul
rcrb
cmpsl
icebp
jmp
mov
scas
adc
ret
popa
adc
popf
mov
or
shll
lods
mov
push
or
jno
ja
mov
inc
pop
ficompl
shlb
int3
dec
pop
mov
cmp
add
inc
mov
pop
add
jl
imul
xlat
movsb
adcb
loopne
and
sub
sub
test
mov
ss
in
adc
xor
pop
adc
pop
add
fdivl
arpl
inc
cmp
dec
sbbl
in
int
scas
pop
andl
outsb
cmc
sbb
rcrl
xchg
cmp
ljmp
dec
mov
pop
mov
dec
inc
xor
and
dec
inc
pop
inc
in
cmp
inc
call
movsb
dec
push
filds
ljmp
in
sbb
or
pop
fnstenv
push
dec
sub
arpl
push
jecxz
stc
bound
pop
movsl
movsl
push
add
xchg
daa
add
and
cmc
stos
xchg
pop
out
add
les
in
cld
jge
jecxz
dec
push
arpl
inc
mov
cmp
dec
lret
in
out
sub
std
sbb
ret
sbbb
mov
shll
mov
rorb
and
or
pop
mov
outsl
shll
nop
ret
or
fs
pusha
dec
xor
cs
sahf
pop
mov
inc
mov
mov
add
inc
fld
dec
aaa
inc
js
bswap
and
fdivrs
xchg
sbb
pop
xchg
mov
dec
mov
sahf
mov
mov
jmp
mov
in
jp
pushl
xor
push
and
insb
out
inc
adc
pop
push
mov
lods
jo
pop
in
test
in
jge
rol
inc
data16
leave
into
mov
aad
cmp
or
xchg
in
xor
inc
in
test
sarl
mov
mov
and
xor
inc
pop
ret
pusha
mov
pop
ljmp
sub
jo
icebp
in
cmpsb
jne
lock
inc
sbb
in
or
out
jg
cmp
mov
call
pusha
xor
xchg
aam
fadds
add
stos
mov
cs
in
inc
sbb
xchg
popa
inc
daa
in
pusha
js
lahf
call
push
testl
sub
sbb
mov
repz
sbb
fs
or
cmp
cmpsb
xchg
int3
jge
push
js
ret
cs
jnp
xchg
jo
push
shl
pop
push
idiv
ret
mov
je
sar
jbe
mov
inc
push
stos
inc
pop
fsts
xchg
mov
inc
sbb
movsb
imul
xchg
int
xor
cli
movsb
mov
sahf
rclb
xchg
add
mov
sbb
or
fadd
mov
in
scas
dec
adc
xchg
je
jne
test
ret
and
and
sub
fmul
and
inc
jmp
outsl
cmpl
xchg
push
add
inc
xchg
mulb
mov
pop
and
jne
mov
dec
jne
add
fistps
adc
xchg
pop
sbb
decb
jno
cli
jp
data16
jmp
jne
jmp
aas
fadds
or
popf
jecxz
neg
sub
mov
adc
xchg
imul
adc
out
sbb
or
mov
sbb
mov
lcall
addr16
inc
sbb
ret
cmpsl
daa
dec
xor
imul
add
mov
or
sti
mov
ss
popa
scas
dec
bound
in
jbe
or
ret
cmp
or
sbb
pop
call
hlt
ret
cmpsl
dec
popf
fldl
iret
test
add
aad
movsb
test
sbb
mov
fdivr
jae
inc
lods
fdivrp
aam
pop
out
pop
mov
push
jns
xchg
sub
mov
popf
jge
out
pop
push
cli
jbe
xor
xchg
xor
out
sbb
adc
lahf
ljmp
add
jo
mov
outsb
mov
push
ja
pop
das
iret
sti
sub
pop
lahf
jge
dec
call
lret
loopne
sbb
mov
lds
or
sub
outsl
or
lret
popa
roll
fdivrs
cmp
mov
mov
lods
cs
push
or
mov
add
loop
mov
pop
jno
jmp
mov
jl
xor
movsl
mov
out
popa
jle
mov
inc
dec
xlat
jnp
dec
ret
out
imul
repz
clc
mov
push
push
hlt
xchg
push
sbb
clc
and
cltd
inc
dec
pop
xchg
clc
and
out
int3
push
aam
adc
push
scas
mov
cmp
and
cmp
sti
mov
sti
inc
sbb
inc
sub
mov
insb
mov
dec
filds
dec
clc
or
lods
mov
dec
pop
dec
push
add
scas
sub
out
dec
xor
sbb
pop
xor
ss
inc
cmp
push
icebp
loopne
xor
sub
pop
jns
std
sarl
cmp
inc
add
xchg
sbb
mov
push
or
hlt
ja
mov
xchg
cli
aam
sahf
adc
test
stc
inc
mov
pop
pop
sub
jp
mov
cli
xchg
insb
mov
sbbb
addr16
outsb
sbb
aas
mov
mov
aas
cmc
cmp
mov
mov
ljmp
in
icebp
pusha
jp
into
jbe
cli
push
pop
cmp
or
ss
cmp
xchg
xchg
test
cmp
push
push
xlat
add
adc
gs
punpcklwd
sti
scas
imul
iret
pop
in
andl
aas
sbbb
jns
and
mov
cmp
pop
xor
sarb
jle
test
xor
cmp
aad
xchg
cmp
mov
push
xchg
jmp
push
jne
jg
mov
cmp
mov
ja
test
sub
andb
jae
inc
adc
imul
xor
loope
insl
stos
rorb
cmp
fistl
cmpb
pop
pusha
pusha
sbb
out
cmpsb
push
daa
or
pop
data16
insl
test
mov
lds
aad
jne
fstl
mov
mov
out
and
mov
or
jge
out
in
jo
cltd
jns
addl
push
loopne
repnz
and
int3
dec
fwait
jle
or
andb
pop
pop
mov
xor
mov
xor
sbb
cmp
xor
xor
sarb
outsb
test
or
adc
push
sbb
mov
push
std
outsl
push
pusha
inc
iret
adc
test
mov
lds
push
push
jo
mov
mov
jp
dec
sbb
sti
insl
aad
or
imul
or
ret
cmpsb
or
add
sub
cmp
sbb
sti
xor
pop
int
add
adc
pop
mov
pop
notb
in
mov
cmc
int
sub
pop
adc
repnz
xlat
push
decl
inc
jno
js
xor
jl
scas
sbb
add
outsl
mov
jmp
push
dec
add
test
out
adc
sbb
push
les
mov
dec
xchg
xor
lds
sbb
add
xchg
pop
vpmaxub
fwait
inc
add
int3
or
mov
cld
clc
jo
dec
and
loopne
xchg
jae
xchg
jno
aam
fs
addr16
daa
push
add
push
lcall
pusha
js
sti
lahf
xor
sbb
sbb
mov
or
imul
mov
xchg
mov
jg
inc
push
dec
dec
xchg
fisubs
xchg
ljmp
dec
or
jns
mov
push
enter
xchg
pop
cwtl
daa
jecxz
mov
ret
xchg
leave
addr16
mov
mov
lods
sbb
cmc
mov
jno
lock
cmc
in
sub
aad
mov
inc
jl
inc
das
add
mov
mov
test
pop
cwtl
loopne
aad
push
cmp
adc
popf
push
xchg
jne
stc
and
jno
call
dec
lret
and
and
cs
mov
add
notb
inc
lods
ds
mov
sbb
pop
jo
and
add
repz
adc
add
gs
lahf
out
les
mov
xchg
sub
aad
adc
cmp
jecxz
xchg
add
sahf
notl
outsl
ds
hlt
ds
jns
pop
in
and
lahf
les
xor
cmp
pop
outsb
pop
add
out
pop
fwait
pop
jmp
add
xor
int
mov
andb
std
and
xor
push
jno
jb
xchg
push
mov
fldl
jg
xchg
and
push
or
insb
xchg
cwtl
and
mov
or
fnstsw
dec
sub
sub
and
stos
nop
addr16
or
or
test
dec
arpl
inc
sub
ljmp
dec
data16
push
roll
orl
push
cmpsb
clc
out
xlat
push
fadds
cld
pop
mov
inc
fstl
push
cwtl
add
dec
xchg
int3
call
push
stos
mov
sub
mov
jle
bound
cli
pop
subl
dec
push
push
je
push
aas
pop
cltd
movb
ret
lahf
adc
mov
andl
sbb
call
sbb
divb
daa
mov
cmp
mov
aad
cli
inc
data16
jmp
mov
or
jmp
mov
xor
xor
lock
test
cmpsb
adc
loope
cltd
dec
push
jecxz
ss
pushf
jmp
imul
adc
test
pop
mov
push
dec
repz
cwtl
mov
movsl
mov
sbb
xchg
aad
test
xchg
mov
test
add
sahf
sub
fwait
and
aas
insb
stos
gs
leave
fwait
and
lcall
cli
pop
inc
mov
cmc
gs
fiadds
outsb
rol
xorb
dec
out
adc
push
add
fucomp
jg
ljmp
push
sbb
pop
xor
xchg
inc
clc
in
xchg
mov
sti
add
fdivrs
xchg
xchg
pop
int
aam
push
xor
pop
subl
mov
sub
pop
sbb
dec
out
lock
aam
jno
adcl
pop
lahf
xor
xchg
and
inc
dec
nop
pop
xchg
jno
push
xor
popf
aas
jg
test
push
jnp
repz
sub
pop
jne
fwait
int
cmp
mov
in
lods
mov
adc
jb
xchg
fisttpl
pop
das
and
movl
imul
and
adc
sbb
rcrb
mov
lahf
ds
pop
loope
sub
add
xor
lcall
xchg
dec
fldenv
mov
or
aaa
fsts
je
xchg
sub
xchg
push
inc
mov
lods
je
jp
or
je
pusha
jecxz
mov
mov
xor
popf
mov
add
cmp
out
pop
lods
mov
xor
insl
and
jge
dec
inc
push
xchg
mov
or
outsl
shll
mov
cmp
add
sub
cmp
pop
xlat
or
add
subb
ret
cltd
adc
pop
mov
xchg
and
clc
popf
dec
dec
cltd
xchg
mov
adc
push
call
jp
mov
inc
sub
adc
add
mov
fidivl
dec
repz
int
fldenv
pop
mov
inc
dec
sar
add
xor
sbb
mov
arpl
pop
mov
fwait
mov
push
imul
std
jns
fs
test
enter
cmpsl
push
inc
aam
dec
inc
add
inc
into
nop
movsb
xor
mov
out
cmpsb
pusha
fisttps
xchg
mov
outsb
or
mov
push
mov
sub
rorl
xorb
loop
pop
push
or
mov
and
int
lret
inc
icebp
popa
pop
jge
pop
cltd
push
fldl
int
mov
lock
sbb
lock
in
and
fcompl
out
bound
out
push
jge
in
sbb
pushf
adcl
out
imul
sub
ja
mov
pop
je
stos
adc
inc
jno
fcmovb
pop
shl
mov
or
loopne
in
addb
dec
mov
rorl
cmp
int
test
cmc
mov
adc
outsb
or
ficoml
divb
xchg
fildll
inc
xlat
ss
jbe
and
mov
add
ficomps
test
test
in
dec
mov
pop
les
pop
rcl
dec
mov
ljmp
dec
repnz
divl
ds
xor
lock
push
js
inc
cmp
idivl
cmp
aas
sub
pop
mov
cwtl
stos
inc
adc
pop
in
jno
jne
sbb
mov
or
jle
test
aad
imul
inc
lods
xchg
mov
std
inc
pop
hlt
ja
adc
jbe,pn
in
cmc
js
pop
rorl
push
out
xchg
fbld
test
mov
sbb
sti
pop
std
int
movsb
add
pop
sbb
cmpb
sbb
dec
dec
rorl
lods
sbb
mov
cmc
mov
lahf
dec
repnz
lcall
scas
std
pop
and
loop
mov
xchg
sbb
sbb
loope
mov
sub
stos
into
adc
insb
inc
rcrb
outsl
pusha
enter
mov
and
mov
daa
sar
cmpsb
sub
cltd
std
cmpb
aas
test
out
jnp
ds
mov
push
mov
andb
adc
ror
sbb
jmp
and
dec
sub
xchg
fldl
jne
xor
xor
xor
jecxz
add
xor
fwait
lock
push
sti
es
fldl
fcoml
dec
enter
addr16
outsl
in
push
jl
inc
inc
dec
xchg
icebp
orl
jns
jl
stos
sbb
cmp
cwtl
inc
cmp
mov
add
and
dec
ret
movsl
or
jecxz
scas
jle
xchg
sbb
push
aaa
in
fidivl
fisttpll
ret
cltd
ljmp
mov
mov
pop
or
es
loop
sbb
or
cli
and
cmp
enter
dec
cmc
movsb
inc
je
and
push
mov
addr16
xchg
add
in
movsb
mov
in
ja,pn
dec
xchg
lea
add
push
clc
loop
sahf
in
sub
movsl
push
sub
es
mov
movsl
sahf
int
in
out
mov
repz
repz
add
cwtl
leave
sub
outsl
mov
jg
outsb
popf
insb
inc
and
xlat
jge
mov
jl
pop
jae
leave
xor
mov
pop
add
fcoms
pop
fs
in
call
xor
cli
movsl
push
adcb
repnz
inc
sub
jl
add
add
cmp
dec
jge
cs
jno
jnp
jnp
add
clc
jnp
pop
push
test
scas
xchg
push
movsb
xchg
inc
movsb
addl
cmp
cs
and
adc
jnp
mov
out
movl
sbb
ss
pop
movsl
stos
nop
dec
jge
sub
or
push
and
add
je
add
filds
jns
jno
loope
or
mov
nop
jmp
clc
pop
imul
rcl
sub
adc
sub
cmp
pop
cs
pusha
pop
out
ds
sub
cmc
ljmp
movsl
hlt
jnp
push
add
xor
int
daa
in
lods
mov
push
dec
push
mov
aam
fmuls
and
mov
mov
push
in
jp
jp
fisubl
inc
jb
sete
out
loop,pt
add
inc
jg
pusha
inc
dec
pop
lock
fsubrs
lret
test
cmp
dec
cmpl
insb
sbbl
and
lods
outsl
leave
stos
jnp
cmpsl
xchg
sbb
daa
clc
pop
mov
aaa
leave
arpl
cli
ja
iret
fwait
repnz
repz
and
dec
add
pusha
xchg
fnstenv
aaa
je
nop
fisttps
fsubl
xor
mov
ret
outsb
int3
xchg
out
in
inc
test
rorb
stc
or
pop
xor
cmp
adc
inc
jp
add
outsl
or
mov
dec
scas
mov
popa
in
mov
test
stc
mov
aaa
lcall
js
loope
imul
jmp
lds
add
lret
inc
stos
outsl
lds
in
enter
push
jbe
es
ds
mov
movsb
cmpsb
mov
in
push
call
mov
sub
test
aam
sbb
fwait
int3
mov
push
rolb
jb
hlt
rcll
cmp
fadds
and
cld
mov
dec
pushf
push
cmp
sub
fimuls
mov
cmpsb
xchg
pushf
ss
outsl
fistpll
out
in
ljmp
mov
fnop
shrl
lods
add
xchg
outsl
fcoms
adc
mov
pop
mov
xchg
out
or
push
cmc
ljmp
arpl
xchg
push
inc
movb
ljmp
and
fsubr
test
out
jle
dec
push
daa
mov
sub
and
jns
fwait
push
ja
cmp
inc
dec
fcmove
fcompp
sbb
push
out
mov
and
push
test
outsb
dec
fcompl
idivl
clc
pushf
mov
mov
adc
rclb
xchg
out
fdiv
in
unpckhps
imul
pushf
scas
sti
adc
in
mov
pop
jb
mov
insl
mov
mov
dec
dec
sbb
jns
mov
shlb
inc
sub
mov
sbb
jb
push
jecxz,pn
push
dec
imul
incl
addr16
and
imul
pop
jp
jg
lahf
inc
shlb
ret
loope
icebp
jnp
mov
out
adc
sbb
xchg
imul
xchg
dec
shl
addr16
aaa
adc
push
aam
sub
sbb
les
ss
out
or
pop
and
into
lret
cld
lds
pop
mov
aas
push
or
rcr
inc
push
div
mov
mov
adc
mov
fcmovb
cwtl
and
outsb
adc
fs
mov
rcrl
jmp
cld
bsf
cmp
mov
or
imul
test
jg
add
jno
repz
subb
and
push
xchg
inc
sbb
cmp
adc
or
rcrb
jecxz
inc
loop
mov
sub
mov
push
fs
xchg
jne
mov
sub
loopne
xor
xor
sti
jns
dec
adc
scas
ja
or
lea
into
iret
pop
and
cld
daa
aad
mov
adc
jb
lret
sbb
and
adc
repz
jg
inc
xor
pop
movsb
insl
iret
sub
test
lods
fwait
xchg
or
out
sahf
xor
sbb
sub
in
sti
idivb
inc
or
xchg
int3
cltd
xor
jecxz
pop
aaa
andb
dec
mov
mov
scas
pop
sub
rcrb
push
or
pop
mov
lret
subb
xchg
insl
stos
ljmp
inc
out
dec
cmpsl
sbb
pop
pop
xchg
or
inc
orl
insb
int3
dec
push
nop
cmp
ret
mov
gs
xchg
cmpl
pop
je
ss
push
mov
ljmp
jb
jp
arpl
and
insl
cmp
cmp
mov
cmp
xor
loop
push
loopne
jae
mov
fimull
mov
mov
cmp
or
adcb
mov
adc
cwtl
test
leave
cmp
lods
stos
lret
and
cld
fs
mov
dec
ss
pop
jne
jns
lahf
add
jle
inc
jle
shl
or
mov
addr16
insl
daa
xchg
push
jb
sar
jl
cmp
and
movsb
out
sub
dec
adc
movb
cli
jg
repnz
and
imull
inc
test
sbb
lahf
pop
lcall
sbb
sarl
jp
into
ljmp
andb
or
push
loopne
add
pop
mov
pop
mov
leave
cmpsl
popa
inc
fwait
push
icebp
out
pop
xchg
gs
pop
call
ss
addl
aaa
ljmp
mov
fcmove
mov
movsl
rol
dec
cmp
mov
fwait
cmpsl
sbb
bound
jp
mov
xchg
jle
pushf
sbb
mov
aaa
mov
or
xchg
les
mov
sti
in
daa
popf
into
ffreep
adc
iret
push
xchg
mov
fcom
repz
dec
mov
sbb
int3
orl
es
cmp
sbb
mov
pop
jbe
pop
arpl
sar
xorl
scas
inc
dec
inc
cmpb
inc
repnz
inc
push
pop
xor
sub
dec
mov
test
cli
aad
jecxz
jmp
fistl
loopne
in
fwait
loopne
orl
test
bound
adc
stos
ret
repz
pusha
shl
cli
sub
ss
mov
xor
sub
pop
adc
jb
popf
dec
xor
push
lret
scas
lds
mov
out
inc
lret
lods
dec
jb
jecxz
mov
scas
xorb
es
xor
inc
hlt
ret
mov
fwait
xchg
adc
adc
sbb
inc
test
pop
pop
repz
cmpb
aas
subl
popf
add
and
shrb
call
pop
add
cld
stos
sti
add
and
bound
pop
es
cmp
fs
lret
sub
clc
fcoms
in
sarb
cmpsb
xor
mov
push
push
xchg
out
push
ret
clc
push
push
pop
push
and
or
outsl
mov
shlb
or
cs
push
pop
ss
jno
lret
out
push
push
sbb
xchg
ss
ljmp
mov
mov
and
jmp
js
dec
rclb
movsb
fwait
adc
loope
cmpsl
add
mov
mov
rol
mov
pop
hlt
out
nop
mov
jno
jmp
push
adc
push
push
and
sub
jp
popa
stos
loopne
shl
pavgb
xor
pop
inc
push
jnp
or
add
xor
andb
jmp
sbb
sbb
mov
fnsave
cmc
and
dec
cltd
es
out
dec
mov
xchg
nop
test
daa
lods
fiaddl
xchg
incl
je
jmp
pop
pop
in
ds
mov
cs
sarb
in
movsl
insl
nop
adc
hlt
cmp
jo
ret
jns
sub
addr16
sub
sub
pop
imul
mov
jmp
sti
pusha
loop
data16
pop
les
push
shll
mov
in
jecxz
lahf
add
mov
out
sub
mov
xchg
imul
pusha
adc
cmp
pop
mov
imul
push
dec
popf
movsb
addr16
push
into
popf
xlat
push
jmp
insb
pushf
aam
movsl
jb
int
out
xchg
lret
xor
jae
xlat
pop
cltd
xlat
add
adc
fdivs
cmp
repz
ds
or
jnp
inc
ds
and
mov
sets
cwtl
add
mov
jecxz
mov
negb
mov
ljmp
shl
push
movsl
and
sub
cwtl
add
popf
mov
sbb
mov
push
push
leave
popa
scas
in
aas
out
popa
mov
stos
popf
hlt
shll
mov
popf
push
pop
inc
js
movsb
cmpsl
jae
pop
popf
sbb
dec
lds
cmpb
lea
popf
bound
stos
insb
cmp
jne
ja
mov
sub
mov
push
rcl
sbb
lock
and
jb
daa
addr16
jo
aad
add
push
out
loopne
push
ret
jg
sub
stc
inc
jnp
and
xchg
pop
xchg
in
adc
lea
and
mov
mov
jle
lret
out
iret
movsl
lods
adc
sarb
jl
adc
insb
ret
and
add
mov
push
xchg
fidivs
insb
mov
iret
out
dec
popf
inc
fstl
stos
lahf
lds
jo
mov
cmp
outsb
adc
jnp
out
push
and
cli
jbe
cmp
jno
lods
pop
fisttps
inc
cmc
xor
imul
call
shlb
push
mov
fisttpll
push
mov
push
add
xchg
movsl
sbb
jns
data16
push
push
mov
mov
lods
cwtl
adc
push
dec
and
mov
repnz
xchg
xchg
push
mov
in
jg
scas
test
mov
sbb
xor
out
ret
ja
gs
out
cltd
adc
mov
aaa
push
test
dec
xchg
data16
mov
addl
mov
sub
ss
movsb
arpl
adc
adc
add
jg
testl
mov
nop
lret
mov
dec
pop
and
mov
adc
test
movsl
test
jne
xchg
mov
add
xchg
mov
mov
pop
aam
xor
push
dec
into
stc
adc
pushf
jle
sub
dec
mov
and
imul
dec
fidivrl
jne
adc
dec
jmp
lret
nop
repnz
adc
dec
sub
in
ror
ret
mov
sbb
repz
stc
or
adc
mov
cmc
cs
mov
andb
sub
jp
inc
push
dec
movsb
out
xor
sbb
pop
cld
adc
rorl
mov
or
jo
mov
lea
cmp
out
pop
fisubrl
adc
fldl
cs
mov
push
pop
mov
sbb
les
rclb
pop
xor
mov
mov
adc
sbb
test
shl
dec
dec
cld
pop
test
pop
xor
insl
and
or
das
pushf
mov
fdivrp
or
imul
xchg
in
push
imul
addl
mov
dec
inc
mov
daa
jno
or
mov
mov
and
stc
jle
loopne
adc
push
cmp
xor
lea
rorl
call
push
in
imul
or
mov
or
cld
inc
sbb
fwait
insb
xchg
icebp
mov
arpl
test
inc
lcall
xor
adc
and
inc
aad
shlb
xlat
mov
pop
test
mov
mov
dec
jl
sub
bnd
mov
adc
data16
jne
test
rorl
xor
lods
sbb
js
mov
and
mov
xchg
mov
les
push
insl
fisubrs
ret
dec
mov
andb
jecxz
sbb
ret
pop
js
sbb
xor
std
mov
fldl
pop
push
xchg
dec
mov
inc
and
and
pop
sub
dec
shr
in
cmp
ds
icebp
repz
inc
sub
inc
or
incl
lea
pop
xchg
push
mov
cmp
or
cld
insb
jbe
test
mul
ja
outsb
in
mov
insb
fistl
scas
jno
mov
pop
bound
in
mov
add
outsb
in
fs
lock
fstpt
int3
add
fcomps
fcompl
sarl
push
dec
inc
in
and
sub
fnstcw
mov
jae
sbbl
pop
fisttpl
outsb
addr16
insb
pop
fadds
ja
xlat
es
leave
scas
or
scas
and
dec
sbbb
addr16
out
mov
cmp
fisttpl
dec
nop
cmp
imulb
sti
cmp
cmp
xchg
int
out
ret
sbb
inc
icebp
out
cli
jno
cmc
inc
aas
sbb
add
push
shlb
aaa
lock
je
xchg
cmp
add
dec
inc
aas
adc
cmp
scas
or
mov
ljmp
nop
xor
insb
aas
in
jbe
xor
cwtl
xchg
mov
aaa
daa
or
jg
rclb
int
jbe
cmpsl
mov
inc
push
and
xor
in
leave
fs
test
scas
inc
jmp
data16
sub
mov
push
mov
imull
rclb
or
jp
ret
jbe
jnp
xchg
mov
sbb
in
sti
add
movsl
aam
mov
mov
dec
mov
cmp
cmp
pop
sub
pop
mov
dec
add
stos
roll
jle
inc
clc
inc
push
jb
fdivs
loop
add
xchg
fdivrl
cmp
addr16
push
mov
outsb
out
jb
stc
or
xchg
out
cltd
ficomps
mov
shrl
add
cmp
scas
popa
in
push
pop
shl
pop
push
pushf
jmp
aam
dec
sbb
sub
xor
mov
push
sahf
dec
adc
div
std
sub
add
push
add
mov
stc
rcrl
and
adc
cmp
push
fsubrl
repz
inc
dec
push
mov
out
mov
pop
pop
lcall
fucomip
adc
cmp
mov
add
int3
or
lcall
sub
lods
pop
xor
lock
addl
jle
sbb
mov
sbb
cli
dec
cmp
in
pushf
dec
outsl
test
mov
sub
pop
cmpsb
cmp
loopne
cmp
lcall
int3
push
sbb
dec
xchg
repnz
xchg
les
movnti
cmpsl
mov
dec
shl
cld
adc
mov
xchg
psrlw
fwait
aas
xchg
mov
push
cld
mov
dec
mov
sti
insl
cld
divl
or
jno
cmp
lods
outsl
xor
pop
popf
mov
scas
hlt
rep
mov
and
js
ror
mov
cmp
xchg
sub
or
or
jle
inc
imul
and
in
in
xchg
push
aad
in
iret
mov
imul
mov
outsb
cld
mov
cwtl
pop
dec
mov
lea
mov
js
fs
flds
or
andb
leave
enter
movsb
or
cmc
cld
pop
adc
dec
leave
sub
dec
mov
lret
jbe
push
movsl
jle
dec
arpl
out
call
or
fidivs
fdivs
out
insb
movb
cld
dec
add
lret
xchg
mov
dec
xor
xlat
mov
mov
dec
ror
cmp
dec
and
test
mov
inc
xor
jno
cmpsb
subb
fs
daa
iret
and
or
hlt
in
mov
ljmp
aas
cmp
xor
push
imulb
cltd
xchg
jb
adc
enter
icebp
ret
aad
mov
mov
cmp
pop
jnp
jmp
push
stos
jmp
lret
mov
test
stc
sqrtps
scas
aaa
add
xorl
movsb
inc
pop
push
inc
xchg
out
ljmp
dec
repnz
in
and
lds
jp
xchg
lods
std
xor
sti
repz
jge
cmp
jp
movsl
xchg
mov
rcr
stos
jo
dec
frstor
inc
sbb
adc
int
mov
pop
jno
sub
jge
jae
jbe
outsb
fcomps
int
cmp
inc
adc
xchg
ss
add
fwait
rcll
popa
xchg
dec
xchg
mov
mov
ds
leave
push
and
mov
dec
shl
or
sub
popa
cltd
into
ds
jne
mov
and
mov
jmp
inc
aas
or
pop
cs
xor
or
or
jge
js
xor
rol
jmp
sub
shrl
les
mov
cmpsb
xor
mov
test
out
add
xchg
mov
inc
pop
lods
fwait
cli
dec
mov
xchg
mov
outsb
inc
das
pop
loope
testb
sub
xor
enter
sbb
pop
mov
sbb
push
icebp
xchg
or
fcoms
ja
inc
push
shll
mov
cmp
adc
clc
cmp
shlb
xchg
addr16
cmp
popf
xchg
sahf
push
leave
addl
ret
push
orb
xor
add
addr16
inc
arpl
ja
mov
movsb
cli
or
pop
add
and
jbe
sbb
outsb
pop
sub
jge
and
jae
jmp
cmp
or
loop
ror
sub
sbb
loope
or
sbb
push
adc
imul
cltd
sub
push
fisubrl
or
mov
or
mov
xor
dec
out
inc
mov
sub
inc
adc
aam
sbb
push
adc
lds
mov
xor
repz
jns
clc
imul
add
xor
jg
scas
xchg
sbb
fistps
xchg
adc
fbld
imul
add
sub
mov
push
jbe
and
mov
lahf
pop
bound
adc
in
pop
lds
shrb
mov
ss
and
mov
in
in
xor
jns
add
or
mov
adc
push
inc
dec
push
push
ljmp
rorb
push
push
mov
int3
cmp
adc
dec
test
cmp
inc
sbb
stos
into
test
out
lock
movsl
mov
repnz
pop
pop
pop
jmp
fidivrs
jmp
xor
popf
stos
arpl
mov
jo
dec
mov
cmpl
pop
fwait
cmp
dec
dec
add
xor
push
mov
iret
pop
or
push
mov
mov
in
dec
movl
jecxz
in
inc
pop
je
or
sub
outsb
or
and
fmuls
into
sti
push
lock
xchg
int
sbb
out
sub
dec
mov
dec
mov
clc
icebp
movsl
or
cli
stos
jno
adc
add
sbb
xor
push
push
stc
mov
clc
xor
cmp
fisttpll
popf
ds
pop
push
pop
dec
or
das
fldl
shll
add
mov
jp
xchg
lret
mov
data16
rcrl
pop
shufps
sbbb
inc
jmp
dec
pop
jecxz
push
push
add
jmp
mov
add
test
test
shrl
cmp
xchg
dec
movsl
pop
out
push
sbb
insl
push
push
mov
push
mov
test
jge
sbb
cmp
add
addb
ljmp
mov
mov
sub
jne
mov
lods
xchg
pop
addr16
cmp
adc
or
jmp
xchg
in
dec
cmp
hlt
jo
int
stos
scas
inc
jae
mov
xchg
test
cmc
push
push
rclb
xor
hlt
mov
pop
addl
pop
lea
lret
scas
arpl
jecxz
cmc
pop
addb
dec
icebp
arpl
test
cli
outsb
xor
mov
jg
scas
cmp
std
sub
mov
lods
jns
orl
adc
mov
hlt
mov
dec
icebp
imul
xchg
imul
popf
add
fcoms
jns
mov
mov
adc
rcr
les
add
out
cli
fs
int3
leave
sbb
adc
mov
push
add
pushl
adc
pop
dec
cmovl
das
or
cmp
aam
xlat
insl
sahf
aas
or
cltd
pushf
shl
sbb
enter
lea
icebp
pop
arpl
xor
aaa
xlat
push
jmp
lods
cmpsb
xchg
lods
aas
hlt
mov
cmp
xchg
or
jns
dec
clc
cmp
mov
out
cli
lds
test
mov
hlt
aas
cmp
dec
xchg
jns
pop
dec
lods
dec
sarl
sub
daa
popa
dec
mov
mov
fwait
lret
cmc
dec
les
in
mov
rol
jmp
mov
std
pop
aam
clc
cli
fdivs
push
sbb
push
mov
xor
scas
mov
sbb
inc
dec
arpl
xor
stos
ds
ret
test
dec
mov
mov
mov
lds
pop
and
adcl
add
outsb
aas
inc
insl
sub
xchg
cmp
jo
add
pop
jbe
aaa
iret
cmc
pop
dec
xchg
and
push
xor
pusha
test
sub
fcompl
mov
lods
mov
js
jo
mov
out
loopne
jbe
push
decl
adc
repz
outsb
rcr
in
and
out
mov
push
mov
xorb
cmp
imul
stos
cmp
js
lret
push
mov
xor
test
mov
outsb
bound
es
push
dec
es
ljmp
adc
sub
notb
bound
cwtl
sbb
das
xchg
mov
pop
sbb
mov
dec
mov
call
jno
pop
push
mov
insl
fidivl
and
push
stos
cs
repz
push
lret
stos
int3
roll
and
mov
sub
sub
sbb
mov
fmul
dec
fadd
push
cwtl
mov
xchg
ror
popf
test
loope
add
popa
jnp
int3
sbb
test
cld
or
aaa
inc
push
or
mul
push
jl
sbb
sub
adc
jge
in
or
movsb
jle
xchg
icebp
lcall
std
outsl
xor
pop
hlt
in
xchg
fists
jg
addl
push
mov
inc
sub
loope
push
icebp
cltd
daa
or
pop
loopne
mov
lcall
cli
sub
add
adc
hlt
data16
clc
mov
dec
sbb
cmp
arpl
aad
pop
jecxz
rep
lcall
outsb
cmp
dec
sarl
jl
cmp
test
inc
daa
dec
icebp
test
rorl
push
scas
repz
fs
outsl
jo
hlt
xchg
movsb
hlt
js
or
xor
add
inc
mov
xor
ret
fcmovb
nop
dec
jne
mov
sub
pop
popf
lea
cmp
pop
mov
cs
mov
push
and
int
data16
push
mov
outsl
sub
push
mov
mov
outsb
push
mov
arpl
cmp
out
lahf
inc
push
adc
push
dec
aas
mov
frstor
lock
xor
mulps
imulb
cmpsl
mov
test
enter
inc
mov
jbe
test
dec
cmpsb
out
add
inc
cmc
fsts
je
mov
enter
iret
mov
fldcw
cwtl
jecxz
mov
dec
push
sbb
test
inc
cwtl
xchg
pop
repnz
pushf
insl
scas
jecxz
sbb
inc
cmp
sub
sti
mov
cmp
mov
mov
lcall
xchg
cld
cmpsl
loop
dec
addr16
add
xchg
enter
outsb
test
xor
xchg
mov
test
and
push
pop
and
xchg
cwtl
mul
xchg
push
mov
inc
sub
ret
and
jae
fidivl
xchg
pusha
mov
fcomip
insb
out
lret
pop
daa
jp
pusha
dec
mov
in
push
imul
mov
aaa
dec
jmp
inc
aad
inc
dec
xor
sub
and
push
and
and
dec
hlt
xor
and
mov
mov
sub
mov
pop
sarl
sub
cmc
arpl
leave
popa
sbb
jb
popf
inc
or
cmp
rcl
loope
imul
es
aad
mov
mov
cli
aaa
mov
fwait
loop
fimull
add
add
or
pop
mov
jp
mov
xchg
pop
js
push
push
inc
pushf
adc
xchg
gs
sahf
fwait
xchg
xor
jae
lahf
insl
cwtl
push
int3
sub
rcrb
jecxz
mov
outsl
mov
xor
lods
rclb
hlt
xor
enter
popa
fstl
adc
or
and
loop
push
repnz
add
je
xchg
test
adc
cmpsb
cmp
insl
lds
sub
adc
sub
jbe
stos
lahf
adc
adc
addr16
pushf
xor
enter
call
push
jg
pop
sbb
sbb
inc
push
sub
push
daa
adc
pop
gs
sbb
push
adc
cltd
xchg
ret
loop
dec
movsb
mov
push
jbe
sarl
fwait
call
imul
adc
mov
sahf
inc
into
addr16
pop
jne
cmp
or
stos
adc
test
inc
sbb
imul
pop
pusha
adc
sub
fs
xchg
imul
div
inc
jnp
push
jmp
pushf
out
in
icebp
imul
jge
push
or
shrb
jl
mov
loope
repnz
hlt
stc
fldenv
dec
test
inc
ret
negb
mov
push
or
stc
mov
repz
push
popa
pop
mov
xchg
addb
and
jnp
xchg
je
jl
xchg
loopne
lcall
cmc
movsb
sub
dec
push
aas
mov
or
xor
sub
push
sbb
add
cmpsb
jns
int
pop
adc
inc
xor
in
aam
and
popa
clc
cltd
sbb
in
scas
fwait
mov
out
repnz
inc
lods
push
popf
adc
mov
jmp
fisubrl
cmpsb
cmp
sbb
sbb
fs
sbb
pop
repnz
fbld
xchg
fs
and
add
mov
sahf
clc
adc
aam
inc
insb
adc
push
push
les
push
out
and
or
xchg
andl
lds
xor
stc
inc
mov
sub
fldl
cmp
faddl
xchg
pop
and
ja
frstor
xor
sahf
push
sarb
jno
outsl
mov
test
cli
xor
enter
adc
mov
or
xchg
push
sub
out
je
shrb
cmp
inc
ret
jecxz
and
repz
push
xor
lods
gs
movsl
jle
and
out
hlt
popa
cmpsl
mov
outsl
mov
inc
add
add
bound
iret
test
stos
xor
lods
int
or
jp
test
inc
inc
xorb
fmul
fiadds
arpl
pop
outsl
lahf
jl
cmp
pop
jmp
inc
jl
add
cltd
cmp
xchg
sbbl
ret
mov
sub
xchg
ficompl
std
or
sbb
test
xor
sub
insb
jle
lahf
pop
insb
mov
push
test
gs
and
in
call
mov
icebp
dec
mull
andl
and
lea
std
aam
or
and
cld
jne
or
je
int
mov
push
xchg
push
mov
data16
jo
xor
test
shl
je
pop
adc
dec
and
mov
bound
mov
sub
and
adc
pop
mov
in
xchg
in
jns
shlb
mov
mov
icebp
icebp
push
lret
adc
pop
sbb
mov
push
sub
test
fisttps
add
sti
orb
inc
pop
jge
sti
mov
mov
mov
rcrl
mov
mov
mov
adc
shrb
jns
inc
jmp
push
outsb
repnz
xchg
pop
mov
imul
popf
mov
fs
xchg
je
mov
jno
out
dec
adc
shll
xor
mov
faddl
ljmp
push
insb
lret
fisubrs
gs
cmp
imul
js
rcrb
scas
sbb
dec
ret
stc
outsl
cmp
imul
jae
repz
push
xchg
lret
addb
adc
dec
pop
push
cmp
xchg
mov
cltd
mov
rcl
aam
in
and
add
cmp
mov
sbb
insl
movsl
cmp
xor
xchg
mov
outsl
add
xlat
pop
rcrl
jo
push
nop
push
dec
xchg
pop
xchg
jb
int
or
adc
add
xor
pusha
sbb
sub
sahf
jle
cmp
pop
add
xchg
jnp
xor
loope
aas
mov
out
in
pop
or
sub
fcoml
daa
icebp
and
push
loop
xor
js
push
add
je
or
pop
insl
push
ret
fs
pop
lock
lret
mov
pop
mov
mov
xchg
cmpl
aam
fdiv
gs
sub
pop
fcmovnu
daa
inc
jl
cltd
add
push
cmp
es
inc
pop
out
out
push
into
pop
adc
dec
add
jg
mov
loope
cld
ret
jmp
jmp
ja
fwait
and
fbld
arpl
adc
ja
subl
xor
rclb
xchg
jmp
inc
daa
xchg
fisttps
daa
cld
mov
adcl
rcrb
jnp
mov
insb
add
jns
lcall
cmpsb
mov
cmpsl
repnz
negb
xchg
leave
repz
jbe
lahf
jo
into
into
mov
jmp
insl
repnz
xchg
mov
jb
inc
inc
sbb
sub
mov
repz
into
call
iret
and
jg
pop
in
pop
sub
fs
mov
lods
add
scas
adc
sbb
xchg
leave
push
and
loop
mov
int3
adc
mov
inc
cmp
call
pop
shrb
call
scas
cmp
xlat
adc
insb
loopne
adc
mov
dec
idiv
iret
test
mov
push
mov
mov
gs
and
shl
cltd
in
mov
mov
adc
fisttpll
xor
xchg
mov
mov
adc
sub
and
test
push
es
push
aaa
shlb
mov
cmpsl
jg
push
mov
dec
std
lea
adc
mov
push
popa
ret
pushf
xor
jo
hlt
and
arpl
rcrl
or
mov
xor
aaa
incb
xchg
mov
xchg
test
jb
sbb
add
in
xor
out
dec
cmp
cwtl
pop
jg
xchg
jb
push
je
inc
add
jle
ret
xchg
popa
addr16
xchg
pop
jmp
jecxz
outsb
in
dec
cmp
lods
orl
lea
jl
psraw
loope
mov
jo
sbb
jl
ljmp
js
mov
add
xchg
cmpsb
test
out
stos
imul
enter
mov
orl
xchg
sub
dec
mov
pop
xchg
mov
insl
mov
mov
jbe
push
jae
xchg
xor
data16
mov
sbb
enter
loopne
arpl
daa
cmp
add
push
lock
imul
jae
aam
xchg
ret
aaa
xor
pop
add
adc
inc
pop
sbb
setge
pop
ret
popf
cmp
jns
lea
xchg
dec
jecxz
das
dec
cmp
jno
xchg
mov
fs
xchg
xor
imul
dec
jne
sub
mov
fs
cmpsb
insb
call
sti
adc
lret
pop
xchg
imul
cmp
mov
outsl
cmp
int3
insl
lea
lods
aam
popf
in
movsb
sbb
pusha
les
jae
push
imul
icebp
aad
inc
gs
sub
lock
je
jb
add
mov
adc
jnp
push
or
jg
cmp
jae
negl
outsb
jbe
mov
or
cwtl
in
dec
lcall
mov
testl
mov
scas
ja
mov
sub
nop
mov
movsl
fildl
mov
dec
jl
mov
bswap
test
ret
mov
scas
add
push
leave
jb
loope
cli
xor
and
dec
gs
dec
push
std
inc
sbb
jg
pusha
mov
fsubl
rorl
ret
into
and
ss
sbb
shll
mov
push
sti
pop
sti
inc
shlb
les
jo
loope
ss
mov
dec
jo
pop
push
shrl
loope
pcmpeqw
aad
push
xlat
xchg
pusha
add
push
cs
push
add
xchg
mov
and
add
sub
dec
das
scas
fsubp
pop
xchg
inc
popf
movsl
lock
ret
lea
fwait
scas
movsb
arpl
int
push
xchg
dec
push
sbb
xor
pop
cmp
add
das
mov
dec
xchg
fnstsw
imul
imul
imul
push
adc
lea
lods
mov
nop
lds
inc
addr16
sub
add
add
jmp
jbe
test
mov
add
das
loope
les
loope
mov
pop
or
jne
loop
ret
shll
mov
pushf
mov
sub
lret
stos
add
xchg
ret
addr16
fsubl
ret
aas
xchg
jge
ret
in
ljmp
and
mov
adc
ja
inc
clc
aaa
pusha
fwait
lcall
pop
adc
mov
scas
std
xchg
pop
mov
stc
pushf
cwtl
xor
mov
lahf
xor
dec
nop
xorb
js
or
push
out
xor
mov
icebp
mov
dec
push
sbb
add
inc
clc
jns
sub
cmpsb
gs
cmp
rcr
bound
movsl
sbb
nop
mov
jmp
in
clc
outsl
sub
or
pusha
daa
ds
mov
push
aad
jle
outsl
clc
sub
sbb
cmp
lods
jae
push
lods
jbe
inc
sti
push
dec
inc
jmp
and
int3
xchg
xchg
aam
pop
push
sub
call
loopne
cld
gs
fcompp
mov
bound
inc
test
cs
scas
xchg
xchg
int
insl
add
sbb
fs
pop
aad
pushf
push
mov
or
ret
loopne
inc
mov
pxor
mov
add
pushf
movl
adc
mov
dec
in
fistpll
mov
jl
jae
jp
add
dec
push
jo
loopne
mov
mov
inc
mov
dec
fwait
jp
into
xchg
and
sbb
sub
cmpsb
adc
out
dec
and
mov
fstpl
inc
faddl
loope
mov
bound
lea
repz
adc
sbb
mov
inc
mov
push
ds
lea
leave
notb
aam
push
outsl
or
pushf
mov
dec
lret
repz
pop
mov
mov
lcall
inc
pop
mov
ret
aad
pop
push
mov
cs
fwait
mov
lret
adc
mov
and
inc
mov
fisttpl
sub
notb
out
fsubrp
pop
adc
sbb
xchg
lret
sbb
inc
lods
xchg
jl
js
pop
and
sarl
scas
in
or
or
dec
sub
jae
andb
push
jecxz
dec
mov
mov
leave
movsl
xor
mov
mov
mov
hlt
sub
int3
arpl
scas
cmp
arpl
js
xchg
sub
popa
jmp
adc
and
xchg
lcall
aad
inc
or
repnz
inc
xchg
sub
fcmovnbe
sbbb
aam
cltd
push
push
mov
addb
insb
pop
mov
push
sbb
jecxz
inc
sbb
inc
xor
mov
sbbb
imul
mov
outsl
gs
jp
jo
das
lcall
jle
adc
pop
xor
push
test
push
shrb
add
mov
neg
push
jmp
push
mov
lds
shll
mov
ret
inc
pop
push
outsb
cmpsl
mov
or
test
mov
sub
mov
loope
mov
cli
outsb
int
flds
mov
push
sbb
mov
clc
dec
pop
mov
mov
in
in
jg
mov
movsl
insb
aas
lret
outsb
or
out
xorb
jl
hlt
xor
xor
dec
add
push
std
inc
les
in
lret
ret
test
push
sbb
jmp
pop
test
lods
faddl
adc
cs
leave
add
mov
sub
and
outsb
aam
or
cmp
and
popa
cmp
xor
out
sti
jmp
jb
mov
jle
jns
mov
and
xor
cmp
or
imul
int
or
sahf
sbb
movb
testl
loope
inc
pushf
in
lret
jmp
jge
adc
into
ret
mov
cmc
dec
sbb
insl
sbb
mov
in
iret
cli
xchg
inc
sti
jae
std
subw
jae
and
push
jb
cli
fistl
dec
dec
std
mov
inc
call
int
outsb
daa
mov
leave
mov
and
js
push
mov
jbe
mov
mov
sti
push
xor
test
daa
pop
in
and
addr16
imull
and
loope
leave
mov
inc
mov
mov
sbb
push
pop
jecxz
xchg
arpl
pop
fcmovu
and
add
inc
scas
mov
out
cmp
push
add
out
in
stos
jp
adc
stos
jno
movswl
cli
xchg
mov
inc
mov
pop
bound
loope
nop
mov
es
pop
stos
out
push
mov
push
xchg
cmp
xchg
dec
pop
mov
cltd
imul
fdivrl
mov
and
sub
fsubrl
sbb
dec
ja
int
cli
out
push
scas
js
test
cmp
xchg
pop
sbb
icebp
and
ja
add
jg
aam
stos
test
mov
jns
stos
push
pop
fbstp
adc
lret
movsl
sub
jnp
pop
ljmp
lret
add
test
iret
add
xchg
xor
push
out
pusha
xor
rcrl
ljmp
jle
outsb
sub
mov
movsl
addr16
lds
ret
mov
cmpl
dec
cmpsl
test
in
sub
add
mov
mov
adc
cmp
pop
xchg
test
mov
push
jb
and
add
dec
push
popa
cmpsb
mov
push
adc
pop
sbb
push
fs
mov
and
sbb
loop
sub
dec
pop
sbb
jnp
pusha
cmp
adc
mov
adc
push
xchg
mov
lods
or
scas
xchg
adc
inc
push
push
push
daa
and
push
jmp
add
stc
mov
push
cmpsb
inc
add
jno
movsb
inc
data16
aam
inc
or
lahf
icebp
lret
popf
and
and
inc
aam
neg
ret
mov
or
xor
stos
clc
pop
fwait
out
into
sti
xchg
adc
push
movsl
icebp
xchg
mov
jno
mov
mov
fs
xchg
gs
fcomi
sub
jle
rcl
jecxz
popf
mov
nop
lret
jne
add
fwait
and
push
scas
inc
cwtl
cs
cmpsl
jl
out
test
xor
adc
mov
lcall
incb
sub
repnz
adc
push
bnd
and
xchg
dec
dec
push
mov
push
sub
mov
mov
push
mov
cmp
inc
sub
add
adc
std
ja
cmp
jae
shrb
out
adc
push
jecxz
sbb
aam
sub
pop
es
inc
sbb
pop
push
push
sub
test
lahf
cltd
pop
add
xor
aas
inc
push
adc
outsb
shrb
mov
dec
jp
jg
jne
rorb
mov
pop
xor
xchg
lds
mov
jnp
cs
and
mov
mov
outsb
subps
add
mov
adc
xchg
loopne
and
mov
pop
mov
or
pop
dec
imul
and
ret
out
sub
std
push
add
fwait
push
subb
cmpsb
mov
mov
cmp
mov
mov
dec
std
repz
and
mov
xlat
dec
jae
lock
sub
mov
or
dec
push
lds
push
loopne
add
add
push
push
outsb
push
mov
test
jecxz
lahf
sub
fstpl
ss
loop
mov
mov
and
ret
in
push
xchg
rcll
loop
push
fwait
xchg
inc
push
lods
sarb
adc
and
pop
jo
add
stc
mov
ftst
sbb
fsubl
push
js
std
dec
lret
add
lahf
loopne
rcll
dec
cli
scas
cmp
scas
or
movsw
cwtl
inc
mov
aam
jo
shl
push
pop
jno
or
cmp
pop
push
popa
sub
and
mov
pusha
pop
fmuls
pop
nop
xchg
addr16
xorb
xchg
out
pop
or
movsl
cmpsl
scas
dec
xor
sub
fs
ds
add
xchg
sbb
jns
mov
jnp
jo
ljmp
pop
pop
and
or
imul
out
std
jne
stc
in
mov
add
sub
and
mov
mov
adc
in
mov
pop
pop
aas
cmp
loop
cmp
mov
inc
sub
jmp
js
push
enter
imul
xor
out
shr
adc
inc
loopne
sub
stc
add
jnp
and
jg
les
popa
setno
movsl
dec
js
jnp
std
loop
push
das
xchg
out
pop
xchg
pop
fs
sub
dec
xor
cld
push
popf
cmp
mov
xor
repnz
xchg
idivb
mov
outsb
or
push
jo
push
mov
cmp
sbb
xchg
js
arpl
cmpsl
add
inc
sub
cli
pop
pop
loopne
push
jo
es
popf
jne
push
shl
sysexit
mov
shr
adc
dec
popa
add
pop
adc
jg
xor
ja
shl
pop
and
or
aas
mov
test
loop
xchg
mov
sahf
movsl
mov
testb
mov
pushf
test
jno
lea
insl
or
mov
push
repz
hlt
ftst
and
add
mov
push
push
aad
loopne
push
ljmp
adc
std
cmp
jmp
pop
lock
mov
mov
sub
push
insl
shrl
mov
xchg
outsb
xchg
xor
and
inc
dec
lods
push
jno
sbb
repz
add
daa
adc
jb
or
out
loopne
sbb
inc
and
incb
adc
xchg
adc
adcl
iret
pop
inc
mov
icebp
push
add
shrb
xchg
mov
in
mov
jb
lcall
outsl
scas
icebp
fcmovu
hlt
add
fstl
mov
test
and
and
pop
icebp
sbb
pop
cwtl
sub
lods
out
rorl
es
lahf
ja
mov
pop
xchg
les
jmp
xchg
xchg
sarb
push
test
sahf
fists
adc
xchg
cmp
aam
jno
data16
leave
inc
popf
popl
adc
jo
xchg
mov
loopne
push
loop
pop
popa
jp
out
test
cmp
adcl
icebp
push
and
fdivl
xchg
pop
movsl
mov
pop
orl
inc
rolb
mov
xchg
aad
push
push
ret
add
jo
js
xchg
mov
cmp
lret
sbb
cmp
mov
dec
mov
mov
lock
jbe
inc
cmp
mov
or
push
out
repz
pop
and
shrb
jno
shr
mov
cmpsl
sbb
or
push
lds
dec
lea
and
dec
repnz
lahf
or
lret
sub
jnp
jle
dec
cmc
xor
fwait
aam
push
xchg
inc
mov
leave
xchg
or
sub
jp
add
sbb
mov
movsl
fsubrs
test
fisubl
notb
mov
gs
sarl
frstor
jecxz
rol
or
xchg
lods
jno
insl
cli
dec
aaa
es
test
ja
sub
pop
stc
jecxz,pn
sub
jge
inc
popa
push
xacquire
push
mov
sub
fidivs
xchg
aaa
icebp
dec
hlt
roll
sbb
jmp
mov
jmp
in
mov
mov
test
xor
mov
mov
dec
jb
insl
add
ret
jo
ss
enter
push
sahf
adc
lret
aam
adc
mov
jo
loopw
outsl
xchg
or
ret
sbb
dec
scas
sbbb
jl
aas
and
movsl
sar
inc
pop
out
in
xchg
and
push
lea
cld
shlb
lcall
jp
lahf
pop
int
dec
add
mov
ss
pushf
test
cmpsb
leave
adc
mov
shl
dec
hlt
je
scas
cmpb
inc
es
lods
add
test
jp
out
dec
or
mov
out
jp
push
pushf
in
jo
rorb
mov
popf
or
loopne
dec
outsb
mov
stos
mov
xchg
pusha
cmp
push
stos
mov
dec
mov
pushf
push
mov
push
data16
into
cmpb
xchg
jns
stc
or
dec
sbb
addr16
jo
mov
or
sbbl
adc
mov
aas
outsb
ret
push
sub
jns
jp
xchg
mov
cwtl
and
cs
push
cwtl
lcall
fiaddl
jle
je
roll
aad
lds
xchg
loopne
rcrb
popf
outsb
mov
cmp
and
inc
enter
mov
adc
outsb
add
mov
fisubrs
mov
fs
test
into
or
lock
aas
mov
push
jp
xchg
add
push
pop
jmp
std
xor
or
mov
sub
lods
adc
dec
add
jp
mov
inc
out
inc
jp
lock
and
in
jmp
sub
scas
and
cmp
repz
outsl
in
push
dec
add
mov
adc
repz
jle
lret
jg
sbb
cmp
push
xchg
test
push
sbb
lods
shlb
das
xor
sub
xor
in
dec
roll
outsb
out
cmp
mov
mov
cmpsb
lods
jmp
leave
cltd
mov
mov
sbb
std
lcall
pop
movsl
mov
in
and
mov
out
out
inc
imul
int3
mov
aad
xchg
adc
xor
fnstenv
push
test
test
sarl
mov
fisubl
aam
in
inc
rcrl
pop
jg,pn
std
pushf
in
subb
or
sbb
inc
daa
push
xor
mov
repz
pop
mov
adc
inc
sbb
xchg
adc
sbb
push
jmp
dec
sub
movsb
pop
jns
xchg
into
mov
or
mov
orb
cmp
rcl
mov
and
dec
pop
or
in
or
ret
pop
ret
aam
js
jl
pop
idivl
nop
pop
fs
imul
mov
sub
subb
dec
pop
dec
stos
arpl
cltd
mov
jecxz
jo
dec
xor
lock
jae
and
gs
ljmp
xchg
fisttps
dec
mov
js
pop
shrb
in
cmp
push
mov
mov
cli
test
mov
rcrl
out
xor
addl
int
aas
pop
negl
adc
test
dec
jle
mov
insl
adc
mov
mov
push
mov
out
pop
fs
mov
inc
sbb
jle
or
mov
fstpl
imul
ds
mov
xor
out
jne
or
mov
xchg
call
aaa
and
out
mov
dec
popa
or
pop
adc
and
lcall
xor
pushf
rorl
push
dec
div
arpl
add
insb
pop
dec
dec
out
mov
cmp
bound
mov
jle
mov
movsb
gs
cmpsb
or
jg
test
pop
mov
or
ret
dec
lea
xor
shl
inc
push
loopne
dec
aam
ja
aad
sub
xor
jno
jns
repnz
enter
js
sbb
mov
ds
push
mov
cld
les
or
hlt
add
jo
xchg
in
shlb
cmc
xor
add
daa
mov
xor
push
in
sar
jns
xor
inc
xor
leave
push
inc
lds
xor
pop
adc
gs
int
adc
repz
mov
fwait
jge
fisttps
add
ficoml
and
je
mov
out
jnp
lcall
or
hlt
aam
clc
inc
mov
sub
bound
sub
jb
dec
loope
pop
loope
movsl
gs
inc
aam
and
sub
and
jae
shll
addr16
sub
scas
mov
mov
or
fcoms
jmp
add
mov
adc
inc
xor
shrb
test
in
dec
adc
and
fmul
cmpl
jno
dec
cld
pop
or
push
stc
mov
in
push
dec
aad
push
and
sbb
lcall
clc
loopne
jno
fcmovu
cmc
inc
dec
mov
and
gs
dec
jg
push
xor
mov
mov
imul
lret
or
push
add
push
add
mov
lock
push
rep
nop
adc
shr
leave
pusha
sar
sbb
push
mov
js
push
push
push
aad
add
leave
cmp
ret
stc
cmp
add
mov
neg
and
icebp
cmp
out
dec
lahf
jmp
pop
cmp
lahf
push
sub
mov
and
dec
jg
or
cmp
mov
jmp
mov
pop
sub
mov
mov
pusha
xchg
outsb
or
pop
mov
and
and
pusha
mov
cs
dec
jmp
repz
lock
sub
xchg
push
mov
or
call
inc
cmpl
inc
in
and
pop
xor
cmpl
jo
int3
xor
or
jns
andl
jb
pop
mov
fists
pop
push
gs
fbstp
jg
leave
jb
fcompl
sub
popa
jno
clc
pop
das
push
push
and
or
add
ret
outsl
iret
inc
add
adc
repnz
inc
gs
dec
mov
test
rclb
lea
lea
div
sub
lods
push
and
push
xchg
divb
cmp
inc
inc
scas
lret
xchg
data16
loop
adc
add
in
mov
mov
mov
into
lret
pop
fnstsw
inc
lret
add
test
cmp
mov
movsb
int
js
xchg
faddl
push
out
ljmp
jo
mov
jp
sbb
xchg
mov
stc
xchg
inc
mov
outsl
xchg
xchg
sub
cltd
jbe
jno
inc
mov
push
enter
fidivs
mov
ds
pop
mov
mov
popa
xor
jp
les
cmp
dec
add
std
dec
jmp
stos
hlt
je
jb
inc
sub
mov
dec
shl
pop
ss
sub
add
outsl
dec
dec
xchg
aad
or
shlb
fucomip
or
in
outsl
add
rcr
jbe
and
jns
int
int3
aas
cld
shrl
or
mov
sub
je
cmp
dec
out
pop
xorb
xlat
and
xchg
or
jns
mov
or
cmp
pop
and
movsl
xchg
lods
scas
call
sbbl
xor
dec
inc
and
or
jb
rorl
fldenv
loop
pop
xchg
push
mov
sbb
cmp
in
dec
rcrb
mov
mov
in
aam
and
jb
in
lcall
push
pop
imull
andl
mov
js
xchg
push
cli
cmp
add
dec
pop
scas
lock
adc
fxch
pop
aad
popf
dec
jmp
pop
add
or
or
test
loopne
mov
jnp
mov
sbb
and
pop
adcb
cmc
inc
es
xor
jl
stos
or
cmp
xor
mov
aaa
pusha
dec
jbe
push
cwtl
cmp
sbb
sub
and
out
cli
push
xor
lods
imul
mov
push
jmp
out
xchg
sbb
inc
outsl
andl
xchg
repnz
or
xor
mov
mov
mov
adc
lods
pushf
cmp
dec
scas
mov
daa
ret
cmp
and
test
dec
jae
movsl
push
scas
sahf
add
insb
pushf
cmpsl
lcall
out
adc
pop
push
cmp
test
sahf
pop
shlb
sub
fldt
mov
icebp
out
push
dec
dec
add
loope
mov
add
fstp
in
ja
xchg
mov
daa
dec
or
jae
nop
sub
or
mov
out
sti
repnz
adc
fs
arpl
sub
aam
ja
test
pop
push
js
mov
sub
mov
push
add
mov
sarl
dec
mov
fdivl
cli
jmp
int3
dec
js
out
lock
dec
push
movsl
or
pop
sbbb
add
imul
xchg
jp
inc
decl
cmp
test
xchg
dec
movsb
sbb
cld
mov
and
fistps
movsb
mov
imul
inc
inc
nop
cs
fsts
sub
js
repnz
inc
pop
outsl
rcrb
out
fwait
int
fimull
loope
clc
cmp
rcrb
add
inc
mov
push
mov
lahf
fs
test
inc
shrl
es
push
mov
movlps
push
sub
cmp
pop
popf
pop
roll
push
jne
cmc
ret
or
inc
repz
inc
sub
aas
fxch
ret
mov
lcall
adc
sbb
dec
mov
sbbl
sahf
push
mov
cmp
stos
or
xchg
test
out
sub
mov
test
mov
inc
or
hlt
repnz
test
pop
ds
jg
lea
adc
dec
add
pop
scas
push
jecxz
bound
or
mov
out
mov
adc
decb
jecxz
int3
fsubl
frstor
mov
lret
push
mov
jnp
jae
pop
push
xchg
or
daa
pop
mov
out
arpl
cltd
divl
insl
lret
xchg
out
call
mov
repz
cwtl
mov
jns
mov
popf
xchg
stc
popf
push
ficoml
lahf
mov
mov
int3
movsb
jbe
dec
inc
xor
sub
pop
shrb
xor
jge
loopne
imul
shrl
cs
push
pop
jnp
std
or
xor
cmp
xchg
lret
and
adc
push
jnp
jb
popa
filds
adc
adc
xchg
adc
or
fs
dec
loopne
mov
test
js
jmp
xlat
mov
call
out
pusha
popl
push
adc
pop
aam
xchg
jne
push
mov
cmc
inc
mov
out
fwait
or
pop
in
mov
cs
mov
and
dec
inc
popa
cmp
mov
pop
inc
or
leave
jo
cld
ffree
xchg
ficoms
xchg
dec
dec
mov
push
test
loop
pop
imul
outsb
add
test
in
sti
push
mov
out
in
enter
inc
sbb
fidivl
or
jns
hlt
mov
pushf
push
lock
iret
mov
rcr
roll
or
jnp
add
outsb
sbb
sti
inc
xchg
xchg
add
mov
sbb
inc
loop
cmpsb
orl
xchg
hlt
add
cmp
push
shr
rol
ljmp
imul
and
mov
jg
push
gs
sbb
cmp
lods
sbb
ja
mov
jbe
adc
and
popa
sbb
mov
dec
sub
pop
std
cmpsb
or
pop
arpl
sub
outsl
repz
ret
adc
pop
jmp
aad
jle
imul
fstl
adc
push
scas
xchg
ljmp
popa
mov
sbb
jle
cmc
cmpsb
addl
daa
iret
aaa
sub
cmp
dec
jp
push
push
in
adc
add
lret
cmpsl
and
popa
inc
add
xorb
xchg
jb
mov
je
xor
data16
cmp
pushf
cmp
inc
mov
xlat
mov
sub
fisubl
cmp
int3
test
mov
jb
pop
cmpsl
std
xor
pop
rcrl
icebp
cmp
insl
stos
mov
repz
push
imul
ret
aas
rcr
sub
and
dec
sbb
mov
push
push
mov
jmp
xchg
cld
arpl
cmpsl
or
add
push
push
fadd
xor
test
xchg
repnz
sarb
mov
cld
rcrl
push
addr16
mov
mov
outsl
add
subb
mov
hlt
test
xchg
fisttpll
icebp
mov
pop
jle
cwtl
xchg
loope
xchg
mov
insl
or
pop
adc
or
test
and
xchg
cltd
movsb
jae
pop
dec
lods
add
sub
jns
mov
clc
push
mov
int
or
shll
jno
pop
jb
jl
sbb
fcomip
pop
hlt
push
pop
and
in
xchg
xchg
sar
cwtl
inc
push
mov
cmc
inc
mov
data16
xchg
add
jnp
int
xor
jg
lock
pop
out
xor
pop
mov
jmp
out
ds
aam
jge
and
roll
clc
xchg
jl
out
test
or
stos
pop
lods
xchg
add
in
cmp
adc
shrb
int
push
ds
lea
cmc
mov
in
dec
sbb
je
adc
fdivrs
repnz
xchg
push
int3
lock
mov
xchg
pop
jle
pop
loope
or
pop
out
fidivrs
int
cmp
mov
ftst
xchg
in
mov
pop
jmp
outsl
lcall
call
mov
xchg
mull
cltd
ret
cmp
jo
jg
and
sub
sub
sbb
outsl
fimuls
popa
mov
mov
jle
rcrl
in
xor
mov
xchg
bound
jmp
and
fisttps
das
mov
dec
add
lret
mov
lret
inc
push
pop
std
xchg
jae
xor
push
ret
sbb
pop
imul
add
cmp
shrb
dec
cmp
add
dec
add
push
mov
outsb
imul
lret
jbe
negb
xchg
inc
jnp
hlt
idivl
mov
jge
add
xor
pusha
repnz
test
cwtl
mov
jns
pop
cmpsl
mov
add
xchg
xor
or
mov
aas
add
popf
repnz
cmc
mov
popa
inc
jns
xchg
repnz
xchg
push
jl
es
adc
enter
and
cmp
imul
push
shll
adc
jae
loope
and
mov
cmp
cwtl
stos
xor
cld
inc
pop
cmpsb
in
lahf
ds
jmp
test
sarl
adc
bound
inc
ljmp
dec
fisttpl
cmpb
pop
xchg
xchg
out
sbb
xor
push
and
mov
pop
mov
sub
cmpsl
sti
sbb
xchg
lret
push
adc
pusha
inc
mov
mov
cmpsb
test
cmp
rcr
stos
out
fmull
jae
pop
es
xor
sbb
jb
nop
mov
xchg
sbb
loopne
sub
inc
push
popa
cmp
pop
dec
popa
shll
dec
mov
testl
jp
das
mov
stos
lret
pop
dec
push
inc
xchg
inc
fbld
dec
aas
cmc
inc
inc
call
xchg
pushf
and
mov
push
lret
ret
addr16
in
sti
cmp
cld
adc
dec
dec
mov
and
movsb
es
or
outsl
cmp
iret
sti
add
and
mov
pop
pop
pushf
or
mov
nop
lds
sti
pop
adc
daa
fwait
or
pop
lea
fsubr
call
shl
int
call
arpl
sbb
cltd
xor
xchg
pop
mov
xor
sbb
imul
mov
stos
pop
dec
jp
dec
jbe
fcomps
out
lret
shlb
push
and
xchg
xchg
dec
push
xchg
mov
rclb
repnz
imul
fbld
shrl
pop
lret
lods
sbb
inc
cmp
in
jmp
fsubrl
dec
stos
xor
cld
xor
adc
push
les
ret
inc
xchg
or
sti
or
jmp
jns
lahf
imul
push
movsl
rorl
outsb
cmp
push
pop
pop
cmp
or
incl
cmpsl
xchg
mov
dec
and
clc
jbe
jb
sbb
xor
ljmp
xor
cmp
or
out
dec
scas
inc
jns
ljmp
lcall
sbb
or
dec
loope
adc
mov
xchg
mov
adc
xchg
mov
inc
ret
test
ret
pop
cmp
jp
into
or
cmc
cmp
mov
popa
das
dec
and
popf
pop
mulb
dec
movsl
roll
mov
call
sbbl
test
mov
jge
ljmp
mov
push
pop
mov
mov
xor
mov
jns
mov
inc
dec
add
js
jecxz
sbbb
mov
pop
test
mov
pop
jae
sub
lret
add
stc
jg
and
add
adc
pusha
cmpsb
je
fwait
inc
sub
movsb
mov
and
pop
ljmp
jnp
jle
shl
icebp
add
fdivrl
cmc
lcall
inc
or
fnstcw
cmp
cmp
mov
or
sbb
xchg
inc
sub
jae
push
and
outsl
or
int3
call
outsl
idiv
cmc
jns
or
stos
cmp
lret
add
movsl
sbb
loop
push
pop
sahf
mov
das
sarb
stos
dec
push
cli
mov
shrl
xorb
out
pop
pop
jbe
jge
loop
insb
clc
jno
mov
shr
roll
lods
clc
bound
cmp
pop
jecxz
icebp
dec
int3
cld
dec
out
sub
arpl
mov
sahf
adc
pop
cs
mov
movsb
ror
sbb
jg
not
pop
add
lret
pop
push
push
hlt
sti
imul
fwait
out
jl
mov
shrb
sub
sub
sub
shlb
pop
mov
mov
mov
enter
lret
inc
cmp
dec
mov
jl
xor
data16
movsb
inc
xchg
int3
sbb
cmp
add
int
mov
push
xchg
and
jbe
pop
add
stos
dec
orl
jae
or
mov
subb
push
mov
aas
stc
mov
jmp
aas
sub
daa
out
mov
and
jb
xchg
push
dec
push
loopne
adc
push
cli
clc
out
mov
jbe
jle
sbbl
push
dec
ret
push
pusha
jbe
adc
jae
out
divl
negb
cmp
add
push
pop
dec
test
or
mov
mov
add
lods
xchg
mov
popa
lock
rol
fists
sub
pop
pop
clc
loope
push
push
cld
out
inc
sar
stos
jle
mov
sub
insl
pop
push
lds
xchg
call
or
push
xchg
testb
jmp
xor
fsubrl
jnp
xchg
adc
stos
enter
mov
add
call
mov
ret
xchg
insb
dec
xor
push
aaa
je
clc
mov
mov
shlb
in
imul
testl
lods
cmc
mov
les
xchg
xor
imul
enter
xor
cli
mov
xchg
push
in
adc
test
mov
fisttps
mov
fiadds
pop
pop
popf
mov
mov
cmp
xchg
inc
and
add
sbb
xor
sub
movzbl
mov
pop
sub
das
or
xlat
fcmovnu
test
pop
packsswb
les
or
popa
add
dec
sbb
movsb
aam
sub
inc
pop
or
int
mov
or
jno
popf
rcrb
aad
clc
mov
sbb
adc
scas
mov
push
test
inc
inc
sbb
int3
xor
in
das
dec
push
fstl
std
xchg
mov
test
insl
sub
pushf
std
ja
and
gs
clc
clc
xor
pusha
loope
lea
xchg
out
mov
push
lea
movsl
rcrb
push
push
subb
test
mov
xchg
rorl
mov
and
and
dec
inc
out
pop
inc
cmpsl
mov
jo
xlat
cmp
dec
cmc
mov
mov
sbb
jae
push
mov
cld
insl
jl
fbld
stc
outsl
push
lock
out
daa
daa
xchg
ljmp
mov
dec
or
xchg
sbb
mov
pop
inc
decl
and
std
cmp
jge
and
and
mov
ss
xchg
sbb
xchg
gs
cwtl
cmc
xchg
inc
mov
testl
jmp
aaa
arpl
dec
push
popa
fists
inc
and
add
bound
dec
std
addr16
and
scas
fmul
sbb
jae
ret
inc
leave
repnz
call
push
fsubp
fisubrs
sbb
cmp
and
jmp
mov
shlb
mov
xor
lret
ss
call
inc
inc
or
fisubrl
add
mov
fnstenv
test
mov
outsl
or
loope
mov
stc
aaa
sub
shlb
test
xor
dec
push
mov
push
pusha
jne
jecxz
and
lock
inc
sbb
imul
aaa
addr16
into
fidivs
test
pusha
fwait
ret
popf
mov
mov
mov
inc
iret
xlat
mov
pop
das
inc
pop
dec
hlt
pop
sub
mov
loop
das
dec
pop
mov
dec
in
daa
outsl
lret
jns
or
ja
test
jecxz
mov
jl
sub
inc
pop
shrb
inc
add
out
scas
aas
outsl
cli
ret
rclb
cmp
or
pop
jae
jae
das
loope
pop
adc
lds
inc
stos
xchg
fldcw
inc
and
lds
fistps
add
push
es
xchg
xchg
jmp
mov
mov
pop
and
xor
in
in
mov
pop
fstpl
out
cs
sti
dec
dec
jae
sti
jp
sub
mov
adc
jnp
cld
push
jg
add
fwait
jb
testb
pushl
rol
ljmp
lahf
lock
mov
jnp
or
cwtl
fldl
pop
cmc
jne
push
push
pop
bound
cs
insl
xorl
testb
sub
mov
pop
outsl
xor
shll
mov
xor
iret
repz
and
pushf
adcl
mov
push
popa
mov
mov
movsl
push
push
jg
add
call
shll
test
inc
add
add
pop
pop
sti
pushf
fcoml
stos
js
xor
jbe
or
push
cmp
ficoms
xchg
pop
xlat
adc
add
add
cmp
sbb
ss
stc
xlat
dec
sbb
enter
push
out
inc
mov
jl
jnp
jns
ficoml
insb
or
movsb
mov
pop
shl
push
loop
fs
out
and
pop
or
mov
rol
movb
das
into
pop
inc
mov
sbb
testb
sub
xchg
pushf
push
negl
add
xor
dec
jle
push
mov
pop
ret
into
aaa
and
mov
add
sbb
mov
push
loope
les
pop
pusha
xchg
mov
jmp
xchg
loop
ficoml
xchg
rolb
sbb
inc
dec
or
movsb
in
mov
sbb
inc
lock
test
mov
lcall
imul
dec
dec
out
gs
outsb
sub
clc
pusha
cmpsl
push
mov
clc
lds
scas
mov
mov
or
movsl
and
cmp
shrb
pop
std
sti
mov
inc
mov
adc
cmpsb
push
mov
push
cwtl
dec
and
icebp
or
dec
cmc
gs
and
lret
mov
jmp
adc
sti
pop
std
ss
inc
leave
cmp
push
popa
inc
dec
jne
cmp
dec
add
mov
pop
and
xor
jge
js
sbb
mov
inc
pop
cmpsb
inc
data16
cwtl
dec
enter
stos
scas
cmpsb
cmp
int3
adc
mov
sbb
push
push
pop
idivl
push
adcl
sbb
dec
jne
sbb
and
sbb
mov
push
push
and
out
loope
aaa
ffree
push
push
mov
mov
sarl
sbb
aas
add
adc
mov
push
roll
es
jg
movsb
stos
lock
mov
test
std
push
pop
and
popl
adc
fbstp
adc
in
xor
std
les
mov
cltd
mov
xor
rcrl
int3
pop
ljmp
add
pop
test
push
jae
dec
xchg
ja
add
arpl
out
mov
mov
ficoms
push
dec
xchg
xor
loopne
pop
lds
js
mov
xor
sub
test
lret
cmp
push
mov
clc
push
cwtl
gs
pop
enter
stos
movsb
mov
jge
jle
repnz
xor
mov
fistl
or
xor
pop
inc
loope
sbb
push
inc
bound
lcall
cmpsb
inc
xchg
neg
mov
adc
ficoml
hlt
push
dec
aad
push
sub
jecxz
aad
test
jne
lea
xor
and
mov
mov
sub
repz
xor
sbb
scas
jl
push
insl
je
inc
add
ja
mov
sub
lahf
and
jmp
mov
add
out
mov
push
mov
jp
addr16
sub
sub
dec
add
sub
test
push
inc
mov
add
fdiv
into
jae
or
jecxz
mov
rcr
mov
mov
les
loope
dec
testb
in
stc
stos
push
scas
inc
jno
sub
jg
sbb
loope
in
dec
loope
inc
xor
jmp
sbb
call
stos
std
add
dec
cmp
mov
mov
pop
leave
push
addr16
and
push
and
js
push
test
mov
inc
mov
fsts
gs
mov
das
pop
mov
or
bnd
add
lock
mov
mov
mov
push
mov
sahf
mov
pop
sahf
out
or
push
mov
fwait
xor
jmp
inc
in
pop
cmp
xor
imul
sbb
push
jbe
mov
movsb
and
xchg
iretw
mov
xor
cmp
pop
iret
pop
cmp
outsl
pop
insl
xchg
lahf
adc
test
fnsave
cmpsl
stos
call
lods
dec
fwait
loope
inc
jg
jb
repnz
dec
cwtl
lcall
nop
and
pop
jg
mov
gs
outsb
mov
popf
incb
test
push
push
loop
cmp
sti
hlt
daa
dec
cwtl
sub
pop
js
mov
imul
testl
cmp
imul
xchg
aas
xchg
mov
insl
lret
js
int
aam
out
cli
push
pop
xchg
int3
in
mov
cmpb
dec
dec
or
inc
shrb
inc
lret
daa
push
mov
push
xor
push
jle
lcall
test
pop
sbb
xor
pop
cs
daa
xor
mov
sub
fcmovne
sbbb
pop
rclb
inc
aas
xchg
insb
test
rcrl
pop
lret
sub
in
je
repnz
mov
hlt
jo
push
in
push
xchg
jmp
dec
outsb
sub
adc
dec
mov
pop
bound
mov
mov
mov
sub
aam
loope
add
popa
das
jbe
add
cmpsl
xchg
cmp
repnz
add
in
int3
outsl
push
jecxz
stc
add
lahf
xchg
movsl
dec
int
mov
push
add
jge
cmpsb
loopne
shlb
es
adc
push
or
fldt
cltd
cmp
mov
icebp
cld
mov
dec
push
push
and
cmp
mov
fnstenv
lea
ret
imul
lds
lea
fimull
dec
clc
jmp
pop
or
xlat
xor
in
mov
sub
and
icebp
out
push
sbb
or
rcrb
add
scas
std
cltd
add
xor
insl
mov
adc
test
scas
xor
push
adc
mov
inc
mov
repz
lods
push
xor
adc
mov
insb
inc
shll
push
dec
push
dec
loopne
test
sub
add
rcll
push
adc
jo
cmp
ret
xor
jae
into
lret
lea
mov
shll
lret
jecxz
daa
xor
mov
test
jecxz
les
imul
mov
testb
or
mov
dec
add
xor
sbb
jb
inc
jbe
fs
sub
lret
loope
cld
movsw
mov
testl
aaa
xorb
mov
cld
std
fisubrs
sub
cmpsb
loopne
push
in
lods
shlb
lock
test
enter
jg
mov
sbb
ret
andb
lahf
jl
mov
mov
daa
ljmp
mov
pop
das
out
adc
cmp
mov
adc
aaa
jb
push
test
ficomps
inc
fisubrl
cmpsb
inc
aas
sub
adc
jne
sbbb
cmc
js
mov
scas
mov
mov
bound
mov
xlat
stos
cmp
out
mov
jg
bnd
fsubrs
clc
inc
jno
es
pop
rcrl
cmp
push
sbb
jno
enter
adc
jno
mov
icebp
mov
mov
push
cmp
out
rclb
xchg
inc
mov
mov
mov
insb
mov
cltd
inc
mov
or
cltd
xor
dec
cld
dec
cmp
ds
mov
cld
xchg
nop
jne
rcrl
testb
pushf
sbb
jne
dec
shrb
lret
mov
inc
mov
pop
daa
add
stos
sbb
mov
push
pop
pop
mov
fwait
pop
pop
push
cmp
movsb
dec
push
imul
pcmpgtb
or
or
push
into
push
ds
sti
iret
std
mov
popa
mov
icebp
pop
popa
mov
leave
and
mulb
loop
aam
rclb
jl
pop
mov
fsubrs
pushf
lret
stos
mov
mov
pop
cmp
and
movsl
sahf
sbb
or
jg
fidivrs
push
js
push
mov
loop
test
mov
inc
xchg
mov
insb
hlt
enter
cmp
cmp
xchg
push
sub
jmp
cmp
cmp
cmp
ja
pop
scas
or
repz
outsl
sti
rorl
fisubrs
bound
inc
cld
and
cmpsl
mov
scas
cld
and
push
ja
add
repz
sub
jno
mov
add
inc
enter
adc
sarb
or
xor
js
inc
xchg
inc
sub
test
scas
stos
lock
adc
sbb
mov
sbb
aas
sbb
pop
sbb
fmull
adc
andl
jne
cmp
test
pusha
shlb
mov
dec
daa
cmpb
xchg
or
aaa
pop
sar
lret
adc
shll
pop
jecxz
jge
ss
dec
inc
sbb
sbb
mov
loope
test
imul
mov
inc
call
adc
mov
mov
loopne
mov
scas
out
cmpsb
inc
and
nop
fmuls
enter
fisttpl
pop
out
fwait
pushf
cmp
push
add
ss
mov
or
shr
cli
cmp
mov
imul
adc
cmp
inc
fdivs
or
pop
lds
jg
add
inc
push
and
jae
mov
xchg
fdivr
pcmpgtb
push
cmp
pushl
sbb
adc
pop
lahf
lret
cmpsb
dec
xchg
mov
cmp
mov
jmp
jl
mov
stos
sub
mov
dec
mov
inc
loop
addl
out
jcxz
mov
push
xor
ficoms
mov
inc
xor
xor
mov
movsb
cmp
and
push
xchg
jbe
outsl
mov
inc
xlat
lcall
inc
mov
pop
and
jns
push
int3
add
dec
and
das
or
movsb
cmp
sub
pop
push
enter
jmp
test
xor
aad
and
jecxz
jp
ja
or
jae
movsl
call
xchg
and
cmp
and
mov
xor
fxch
fldenv
popa
mov
ja
push
sub
xor
das
adcb
test
xor
cld
or
sbb
xchg
mov
stos
and
stos
jbe
pop
add
cmc
ucomiss
cmp
andl
push
bound
push
das
push
inc
and
inc
cmpsb
aad
add
sbb
mov
loopne
cwtl
xor
jl
lock
inc
jno
add
jno
sbb
sbb
add
adc
mov
fwait
cltd
xchg
mov
sbb
ds
xor
push
dec
ret
jp
cmp
bound
icebp
dec
push
mov
xchg
out
mov
les
adc
xchg
jp
jno
repz
js
pop
xor
sbb
and
mov
inc
jae
jb
outsb
mov
popf
dec
pop
mov
cltd
pop
insl
push
mov
sbb
test
mov
push
xchg
arpl
aas
fs
inc
mov
mov
pop
sub
in
insl
pop
push
mov
ja
sti
repz
mov
popa
fisubl
cmp
in
push
lcall
repz
jecxz
in
insb
add
out
inc
or
mov
or
lretw
cmc
mov
out
pcmpgtb
mov
mov
mov
add
xor
inc
fnstcw
cmp
and
cltd
xlat
push
inc
or
repnz
cwtl
addb
stos
arpl
pop
push
ror
or
aad
and
mov
add
ja
xchg
aas
sub
shrl
movsl
xor
decb
daa
jle
adc
nop
out
pop
mov
nop
aas
xchg
mov
add
cmp
out
fcomp
mov
inc
pusha
lcall
pop
loopne
pop
daa
mov
jnp
xchg
loopne
imul
mov
call
mov
mov
inc
idivb
jmp
aad
mov
pushf
roll
mov
cld
negb
cmp
aas
inc
adc
or
mov
dec
sahf
or
mov
mov
or
je
push
adc
nop
cmpsl
pop
negb
lret
push
sub
nop
fldl
sbb
lahf
add
outsl
into
cwtl
sub
dec
stos
push
lds
jle
cwtl
enter
enter
and
loop
data16
cmp
movsb
inc
inc
jg
aam
xchg
pop
pop
daa
ljmp
testl
pop
xor
mov
dec
insl
push
adc
dec
fsubrs
xchg
sbb
lods
adc
mov
dec
adc
scas
repz
lods
xor
addb
imul
insb
imul
inc
xlat
addl
test
pop
movsb
mov
pop
cltd
mov
lret
ss
stos
repz
scas
jmp
push
mov
insb
xor
out
sbb
rorb
imul
or
add
loopne
dec
pop
push
jl
fucomip
push
add
pusha
push
lahf
push
pop
add
and
add
jge
mov
adc
inc
cmp
cmpsb
sarl
mov
xchg
jnp
mov
in
inc
lcall
movsl
ret
int
insl
jmp
xchg
inc
stc
inc
xchg
jg
ds
mov
push
mov
int
jb
stc
lea
fsub
mov
adc
mov
jle
dec
scas
mov
xchg
ret
or
sbb
ss
push
loop
push
inc
out
and
push
push
pop
int
mov
cli
mov
pop
shr
cmp
add
inc
lea
movsl
jg
and
into
inc
sub
pop
adc
pop
iret
lds
xor
into
out
xchg
je
jge
add
xor
jmp
pop
inc
aam
add
mov
jg
jge
fwait
testl
push
xchg
fidivs
ljmp
lods
mov
mov
cmp
popf
sbb
sbb
loope
dec
xchg
mov
mov
incb
negb
sbb
lret
loop
add
movsb
mov
es
cmp
sbb
scas
js
mov
int
mov
jbe
cmp
pop
call
mov
fadds
ret
shlb
or
cmpsb
enter
adc
or
jne
sub
xor
xchg
mov
call
js
push
cmpb
in
rcrl
lcall
sahf
jl
cmp
push
adc
ss
les
cmp
lea
jo
adc
mov
adc
ds
in
sbbb
repnz
cmp
and
es
aad
add
mov
ss
data16
lret
xchg
cli
fwait
dec
or
int3
pop
pop
or
les
mov
mov
sub
jno
rcrl
inc
push
pop
push
lods
lods
push
mov
cmp
pop
jle
xchg
add
jo
pop
adc
repz
insl
push
out
roll
lds
mov
mov
lea
aad
pushf
mov
sub
mov
sub
xchg
jmp
out
cmp
push
cmp
mov
inc
sbb
dec
insl
mov
scas
dec
sub
add
je
mov
shl
mov
cli
mov
sub
jecxz
add
cmpsb
mov
mov
push
mov
rcrl
add
cs
jbe
jp
xor
jb
inc
mov
mov
into
shll
lods
jns
in
mov
test
mov
mov
inc
lret
sbb
and
stc
and
cmc
or
mov
lods
cmp
and
clc
push
fisttps
mov
jle
or
and
add
das
insl
add
mov
out
cld
movsl
push
push
cwtl
adc
mov
dec
dec
push
aad
push
xchg
mov
iret
mov
push
mov
insl
int
lods
cmp
and
cmpsl
dec
inc
test
je
shr
cmp
adc
loope
or
sbb
imul
jns
cs
stos
cmpsb
xchg
lcall
adc
repz
add
and
mov
push
das
xchg
or
cmp
repz
sub
push
add
add
dec
jle
lahf
and
jb
sub
add
leave
addl
gs
ret
lret
ror
cmp
inc
es
imull
mov
shrl
rolb
test
mov
mov
in
data16
lahf
popa
stos
xchg
cmpsl
or
pop
xchg
sbb
dec
mov
arpl
repnz
jb
aad
aam
lods
mov
cmpsb
xor
outsl
inc
ds
jle
idivb
mov
pop
loope
gs
mov
ret
scas
cmp
jbe
adc
push
jecxz
int
pop
daa
mov
mov
lret
dec
cld
sbb
lret
dec
arpl
mov
shll
mov
ja
stc
pop
cmpsl
cmp
add
adc
lock
xor
sbb
sarl
xchg
cmpsb
stos
cmpsl
jno
pushf
sub
test
notb
rorl
adc
pushf
stos
fdivr
hlt
in
mov
sub
fbstp
lahf
sub
enter
xchg
xor
cmpsb
test
shrb
xor
add
ret
adc
mov
rcrl
xchg
pushf
pop
out
sbb
orb
stos
lds
inc
xor
cs
lds
jmp
bound
dec
sbb
mov
inc
bound
lcall
mov
imulb
xor
adc
aas
or
je
cmc
inc
mov
and
pushf
fcmovnbe
adc
incb
fs
mov
xchg
adc
ja
pop
cs
outsb
xlat
dec
ljmp
inc
outsl
test
mov
jnp
sub
lret
and
repnz
lds
rcrb
divl
outsb
idivl
push
and
and
or
xor
sub
gs
rcrb
cmp
lahf
movsb
sti
cmp
cmpsb
mov
xor
push
cs
jnp
pop
mov
xor
cli
xchg
or
xchg
adc
push
ds
popf
jns
jecxz
add
push
cmc
mov
xchg
sbb
js
inc
imulb
jp
leave
mov
dec
mov
sub
aaa
out
jle
mov
icebp
xor
push
pop
mov
ljmp
enter
push
sbb
push
jae
sahf
push
roll
pop
sub
cmp
std
shll
fdiv
push
in
addb
cmpsb
xorl
in
mov
sbb
not
pop
xchg
inc
outsl
popa
lahf
rclb
pop
and
jp
xor
inc
rorb
inc
scas
lahf
out
jge
test
mov
mov
pop
and
lea
push
imul
sbb
cwtl
js
add
sub
push
shll
jg
cs
jb
out
push
mov
fldlg2
fs
add
mov
bound
bound
popf
rolb
inc
mov
in
push
push
or
into
push
jnp
out
sahf
cmp
lods
cltd
mov
scas
out
pop
jl
stos
out
fs
mov
dec
lock
mov
int3
repz
lcall
or
jo
pop
cmp
pop
pop
addl
int3
rcll
xchg
mov
and
push
mov
gs
addl
insl
mov
jmp
sub
xorl
mov
xor
or
out
jmp
jb
arpl
adc
jno
das
cli
neg
inc
mov
add
mov
mov
mov
popf
push
fadd
in
movsb
lret
mov
jnp
out
adc
int
lcall
adc
fsubr
rorl
pop
pop
jecxz
xchg
jo
mov
mov
mov
add
into
mov
mov
dec
lret
dec
jne
ror
xchg
loope
mov
mov
dec
jecxz
jmp
jb
sub
icebp
popf
cld
popf
mov
pushf
sub
jns
inc
adc
insl
imul
adc
jne
js
lods
add
cli
test
add
push
inc
les
scas
xchg
das
sbb
push
jmp
rcll
dec
add
sbb
lock
orl
fwait
push
mov
xor
xchg
subl
jl
movsl
out
lcall
test
mov
and
fcompl
ljmp
gs
pop
push
ja
ljmp
mov
movsl
cmp
mov
inc
mov
xchg
fdivrs
mov
bound
std
sbb
sbbl
sti
rdtsc
icebp
mov
cmpsb
testb
cmp
push
jb
dec
mov
mov
repnz
xor
repz
mov
and
jns
fiaddl
popf
mov
xor
pop
pushf
pop
arpl
dec
cs
xchg
rorl
push
add
jno
std
ret
scas
stos
push
jmp
pop
stos
lret
inc
cwtl
repz
stos
cmp
add
and
das
push
sbb
add
test
or
rcrl
sub
loop
andb
mov
nop
jle
add
jmp
inc
jbe
and
xchg
cmp
in
hlt
aaa
inc
fs
sarb
lock
fstpl
xor
fsubrl
faddp
xchg
ret
cltd
xor
xchg
lahf
inc
negb
dec
gs
mov
jg
dec
stos
mov
pop
iret
mov
inc
cwtl
mov
pop
mov
xor
push
xor
and
adc
cwtl
xor
or
mov
int
mov
add
cmp
jg
jg
test
jp
sub
movsb
mov
cmpsl
xor
insb
movsl
cmpl
aaa
aam
cwtl
mov
dec
int3
gs
mov
fwait
es
add
hlt
hlt
ds
jmp
jns
adc
int3
cmp
xor
outsb
pop
mov
pop
in
sarb
popa
lret
cmpsb
out
sbb
xlat
negl
sub
push
jno
mov
mov
sbb
xlat
divb
lahf
loope
insb
xor
jle
and
push
push
mov
push
stc
mov
jmp
xchg
adc
das
pop
mov
aam
int
push
mov
addr16
dec
and
shll
stos
fcomps
mov
cli
cmp
in
xor
xchg
lret
cli
vcvttsd2si
mov
mov
jmp
mov
int3
or
inc
dec
std
and
aam
js
or
sti
aas
jo
inc
mov
jns
push
mov
mov
ret
push
sub
bound
mov
pop
sbb
sub
jmp
jle
dec
fldcw
out
push
add
insb
movl
repnz
xlat
push
je
rclb
adc
jns
enter
push
jl
mov
xor
mov
pop
jl
pop
cltd
jg
dec
xor
je
cmpsb
nop
mov
shll
cmpsl
cmp
mov
or
cmpsl
add
dec
jmp
lock
dec
movsl
stos
enter
popf
fldcw
or
jp
dec
mov
and
push
lret
test
adc
ficompl
jo
or
xor
inc
dec
je
inc
push
lods
int
cmpsl
fnstsw
pop
sub
imul
fsubrl
or
pop
cmp
cmp
shrl
pusha
and
testb
sub
cmc
jle
jbe
xchg
cmp
loop
push
nop
and
in
dec
xchg
add
xchg
sub
cmp
imul
into
sbb
popa
pusha
cmc
pop
xor
xchg
sbb
adc
rolb
mov
mov
xor
jle
sub
insb
dec
or
xchg
in
ss
shll
fdivr
inc
xchg
cld
das
mov
jl
add
adc
ds
test
imul
shrb
jnp
aam
and
insl
cmp
inc
pusha
or
add
movsb
int3
lret
push
in
mov
inc
cmp
imul
je
xchg
in
add
movsl
xchg
out
pushf
dec
jnp
out
mov
cmc
shlb
xlat
faddp
jle
es
sbb
mov
outsb
rcrl
int3
iret
and
adc
leave
or
loope
cmc
jbe
jne
es
pop
cmc
testl
in
negb
ficomps
sbb
cs
movsb
lcall
jp
xchg
mov
push
adcl
out
cmp
aas
pop
out
push
or
bound
popa
jno
decb
sub
leave
jb
mov
lock
xor
cmp
rcrb
add
jno,pn
pusha
cwtl
pop
sbb
popf
loop
nop
gs
push
xor
sbb
push
scas
mov
rorl
cmp
xor
push
pop
cmovl
xor
je
jo
xor
pop
push
jo
push
ret
xchg
jmp
movsb
mov
dec
je
repz
iret
jno
cltd
jo
mov
repnz
mov
lock
cmp
add
mov
outsb
cmpsl
push
push
bound
or
arpl
and
or
sahf
inc
mov
lahf
out
fwait
adcb
test
xchg
adc
sub
imull
mov
adc
jl
dec
mov
stc
and
push
mov
xchg
lock
xchg
inc
mov
xchg
xor
cmp
jge
mov
or
dec
sbb
xor
enter
dec
mov
mov
and
mov
das
shr
testb
push
rolb
je
xor
add
iret
mov
push
repz
data16
sub
mov
sub
scas
and
jp
adc
int
mov
push
xchg
stos
loopne
cmp
dec
rol
pop
mov
mov
pop
daa
divb
inc
jmp
fisttpl
fs
bnd
and
in
push
add
pop
pushf
sub
jnp
fisubrl
xor
imull
cmc
mov
sbb
push
mov
mov
lret
outsl
adc
jo
fsubs
lret
popf
jmp
jns
daa
aaa
mov
lock
lock
mov
pop
pop
cmp
aas
pusha
fidivrl
jge
cltd
xor
inc
rcrb
jmp
iret
xor
xchg
dec
call
jb
mov
aas
ret
jecxz
fmull
movsl
adc
imull
dec
xchg
mov
pop
sti
push
stc
fwait
dec
pop
mov
and
mov
xchg
andl
push
adcb
out
push
mov
rcl
lds
jno
push
rorl
arpl
push
adc
clc
jne
mov
or
mov
js
rorb
outsb
mov
xchg
loop
push
aas
cmp
int
and
mov
jmp
xchg
dec
in
call
outsb
push
addb
jo
push
pop
xchg
xchg
aam
pushf
inc
test
nop
in
addr16
dec
and
inc
rolb
ss
xchg
jge
fcomps
fs
cltd
faddl
sahf
rol
jp
int3
adc
test
mov
inc
xor
xchg
xor
lret
push
xor
cmp
bound
inc
cltd
fwait
loop
es
cmpsl
sub
rolb
dec
out
dec
jge
movsl
jb
mov
or
lret
mov
sar
stos
lret
add
dec
nop
es
jnp
add
add
push
inc
lods
push
dec
sbb
or
xchg
ss
aam
mov
cmc
adc
loopne
icebp
fcoml
dec
push
and
ret
lods
add
test
xchg
rorb
jmp
mov
adc
inc
push
jg
lret
mov
sarb
subl
mov
push
adc
push
dec
sbb
sahf
add
dec
fstps
lret
pop
stos
ja
fstpl
push
outsb
sar
dec
xchg
js
jg
insl
fldt
insl
mov
push
in
leave
xchg
fadd
inc
sub
cmp
fprem1
clc
std
jecxz
icebp
mov
xor
xchg
hlt
subb
std
lret
enter
aam
outsb
or
push
sub
sbb
cli
dec
loope
insb
int
mov
repnz
leave
mov
xor
iret
mov
adc
sub
loop
cmp
in
inc
iret
push
pop
mov
sbb
adc
movsb
cwtl
cmc
ficomps
es
in
cmp
mov
adc
sub
xor
insb
lcall
cwtl
push
push
push
je
mov
inc
xchg
frstor
insl
aad
inc
sbb
sub
jl
xor
mov
sbb
sbb
cltd
loop
push
xor
pop
pop
mov
shr
jns
mov
pop
mov
sbb
dec
gs
mov
xor
add
xor
inc
icebp
sbb
in
imul
sub
cmpsb
pop
inc
hlt
jns
test
sbb
cli
sub
mov
sti
adc
pop
pop
mov
movsl
mov
fwait
pop
aaa
push
icebp
mov
out
popa
adc
adc
leave
fadd
xchg
dec
repz
mov
and
jnp
ds
jnp
in
fsubrs
out
stc
hlt
mov
and
sbb
inc
or
pop
int3
push
fists
add
gs
xchg
mov
ds
sub
in
call
sub
lds
add
rorb
pop
xchg
lock
cmpsl
cld
in
shr
fs
xchg
bzhi
out
mov
rorl
mov
cmpb
inc
loopne
test
aam
rolb
aaa
bound
xchg
cmp
gs
fistpl
cld
pop
in
cmp
mov
imul
adc
pop
repz
loopne
pushf
ljmp
test
add
and
mov
pusha
subb
fs
mov
cwtl
push
xor
inc
fs
jge
xchg
fnstsw
repnz
mov
imul
cli
push
dec
mov
sti
das
xchg
push
or
ja
push
mov
and
inc
movb
cmp
scas
push
mov
jo
cltd
mov
mov
push
push
sbb
push
xchg
inc
std
sub
mov
mov
mov
inc
jge
jmp
icebp
adc
test
push
inc
jbe
cmpsb
mov
roll
jmp
ss
xor
jb
and
add
out
mov
inc
or
adc
lods
lahf
ret
xor
mov
push
push
fucomp
push
or
ficomps
leave
aaa
stos
rol
test
dec
loop
pop
out
mov
fdivrl
add
lods
mov
fbld
aas
mov
mov
scas
lret
add
mov
add
pop
test
adc
test
push
adc
sti
adc
arpl
out
mov
cmp
push
or
inc
mov
or
lds
xor
ds
xor
clc
ds
add
in
fnstcw
ljmp
fimull
adc
cld
ret
or
add
jne
lea
out
sub
pusha
cld
and
or
in
subl
or
inc
iret
dec
pop
cmp
arpl
mov
lods
pop
inc
mov
aam
mov
pop
xchg
iret
cltd
shll
xchg
push
or
fs
and
js
ficompl
int3
and
xchg
data16
xchg
inc
dec
mov
add
repnz
fdivrl
adc
add
dec
xchg
mov
push
orb
add
ret
xchg
sub
xorb
and
mov
adc
js
xchg
pop
negb
cmp
hlt
movsl
mov
and
cmp
fwait
pop
fdivrs
fildll
adc
mov
pop
mov
sub
push
test
adc
or
jecxz
and
pusha
push
mov
into
test
ficoml
repz
ret
decb
mov
cmp
std
jno
aaa
pop
ret
insl
data16
popf
js
shll
sti
or
jne
shl
dec
rcll
adc
add
mov
xchg
mov
in
iret
pop
xchg
or
or
out
push
andb
daa
and
xchg
xchg
ja
andb
inc
mov
mov
add
or
mov
daa
popf
mov
std
xchg
lret
inc
inc
sbb
xchg
stos
jns
mov
nop
add
rcrl
jl
jb
sub
pop
repnz
pop
daa
xorb
rclb
insb
mov
cmp
adc
cmc
jnp
rcr
lahf
or
jo
and
movsb
pop
adc
fldt
push
insl
and
push
dec
aas
ja
or
in
aas
outsl
xor
rcl
push
push
jmp
jae
je
cmp
fcomi
jo
sahf
lahf
mov
test
mov
aaa
cltd
scas
iret
call
inc
dec
les
pop
mov
cmpsb
and
pop
insb
shll
lods
es
aad
xor
in
push
xor
stc
xor
pop
sub
fs
call
stos
mov
fmul
lods
dec
fnstsw
jne
pop
lretw
pop
rclb
mov
outsl
xorb
mov
push
dec
add
out
popf
dec
scas
mov
cmp
ret
addps
loope
js
jl
jge
popa
leave
sub
adc
sbb
xchg
push
mov
cmp
push
cmc
in
ljmp
mov
sbb
and
inc
les
inc
jnp
or
lds
sub
mov
xor
nop
pop
iret
std
pop
mov
xchg
or
cmp
nop
adc
xchg
sub
ror
loope
xor
aas
fs
out
cmp
add
mov
mov
add
rolb
cltd
sbb
jp
jbe
js
jo
and
add
xor
in
xor
push
mov
movsb
xchg
aad
sar
cwtl
xor
jg
setb
clc
ds
out
and
lea
and
pop
jmp
cmpsl
jge
clc
pop
fdivp
es
test
std
int
in
fcomip
aaa
andb
rol
cmc
fnstcw
xor
or
imul
popa
push
push
add
jae
dec
dec
cmpsl
add
aam
add
add
ljmp
loop
pop
rcrl
mov
jb
loopne
push
pop
mov
xchg
xchg
sbb
insb
dec
xlat
dec
cli
push
adc
lahf
xchg
out
inc
xchg
in
rcl
xlat
stos
lahf
xor
inc
dec
cmp
mov
shll
mov
popa
repz
jns
mov
fistps
inc
push
shrl
dec
sub
cmp
xor
pop
loop
cmpsb
xor
push
mov
bound
movl
leave
fdiv
ss
fimuls
pop
cmpsb
mov
xchg
outsb
push
sbb
sbb
pusha
enter
cs
cmpb
push
ret
dec
movsb
out
enter
fdivs
shl
mov
push
mov
pop
aas
dec
test
mov
fldcw
rcrl
jae
mov
and
sbb
ret
fsts
mov
ljmp
dec
sbb
jge
enter
xor
nop
loop
add
adc
jecxz
enter
inc
cmp
leave
lahf
dec
push
imulb
ficoml
ljmp
mov
push
cmp
test
fisttpll
fstps
pop
jns
gs
mov
mov
incl
mov
jb
enter
jl
data16
pop
lret
std
mov
scas
jp
jno
rorb
adc
xchg
jb
dec
sbb
pushf
mov
js
out
outsb
dec
fstps
dec
adc
cmp
xchg
and
and
std
mov
mov
sbb
cmp
or
pop
mov
idivb
add
or
scas
jmp
cmp
xchg
fcompl
cwtl
cmp
das
mov
ret
rol
rorb
clc
cli
lea
jmp
cmc
or
inc
movsl
icebp
in
stc
out
mov
sbb
test
sahf
and
popf
std
sahf
mov
adc
add
inc
mov
loope
imul
inc
add
insl
adc
push
xor
fnstenv
lock
sub
inc
shll
dec
jbe
mov
fwait
or
pop
in
into
jmp
lock
cwtl
arpl
xchg
mov
pusha
pop
cli
jl
xor
inc
insl
or
mov
mov
test
pushf
sbb
pop
sub
ds
jo
cli
mov
mov
mov
setns
sar
cmp
jbe
xchg
mov
fisttpll
pop
xchg
dec
inc
dec
cmpsl
sbb
add
pop
xchg
in
in
out
jg
fsubs
out
je
jns
jns
sub
cmpsl
adc
fistl
leave
cmp
sti
lret
adc
push
test
pop
scas
push
mov
pop
addr16
ret
int
jns
call
jmp
and
mov
ja
insl
fcoml
ss
ror
mov
or
or
cld
loop
daa
adc
pop
jo
lea
jns
xlat
mov
xor
adc
jge
sbb
sahf
int
subb
push
sbb
pusha
std
shll
imul
xchg
add
add
loope
and
jns
pop
lock
ret
dec
mov
sub
movb
testl
fwait
xor
cs
ljmp
mov
sbb
cld
add
jae
std
inc
or
jb
mov
add
dec
adc
pop
jb
xor
cmp
ljmp
adc
push
adc
push
cmp
in
leave
out
cmp
inc
push
lahf
push
scas
push
push
push
mov
ror
ss
adc
mov
icebp
sub
inc
out
daa
mov
outsb
add
leave
in
sub
xchg
ret
test
cmpsb
jb
scas
add
sahf
mov
mov
xchg
sbb
fbstp
or
mov
mov
ljmp
adc
mov
fidivs
addr16
fidivl
cltd
jns
mov
stos
push
imul
lcall
sbb
in
out
jne
imul
adc
pop
jno
shl
adc
lea
pop
aas
out
das
and
mov
cld
pop
sbb
aad
loop
repnz
adc
cmc
int
xor
ja
out
add
sub
pop
mov
mov
push
push
jnp
pop
data16
enter
into
popl
xchg
sub
add
inc
or
or
mov
jno
pushf
pop
lea
gs
adc
in
jl
mov
push
hlt
sub
mov
jmp
push
sub
lahf
inc
popf
jle
stc
lcall
or
dec
mov
push
pop
jne
shlb
push
bound
dec
andl
cmpsl
push
popa
ret
push
jp
fdiv
or
add
lds
xor
jge
xchg
xor
mov
add
aas
test
mov
lods
add
and
pop
test
outsl
enter
push
mov
mov
push
xchg
xchg
inc
fimuls
cmc
pushf
xlat
pop
sub
mov
lds
add
ror
mov
ljmp
aas
fcoml
test
fildl
movsl
ljmp
and
rclb
dec
jmp
lock
and
push
lcall
stc
xor
sti
movsb
cwtl
std
enter
add
add
lods
loop
or
les
aad
add
xor
mov
nop
mov
sbbb
mov
mov
shll
out
push
js
or
andl
cli
imulb
imul
cmp
lock
inc
or
ret
bound
imul
mov
ljmp
xor
data16
pop
rol
and
inc
mov
pop
cmp
lock
leave
clc
sub
in
mov
jmp
cmpsb
stos
nop
mov
scas
data16
nop
iret
or
xor
repnz
pop
pop
test
outsl
cwtl
pop
push
cmp
sub
mov
in
xchg
or
call
lods
xchg
repnz
xor
and
mov
out
out
lahf
or
data16
unpckhps
fldenv
xor
cmp
test
iret
decb
lock
dec
jns
and
out
pusha
add
dec
jle
adc
cmp
dec
jl
cwtl
inc
mov
inc
out
or
nop
xor
ret
cmp
in
and
xlat
call
clc
out
sub
and
daa
push
rorl
inc
jl
sbb
lahf
jb
jne
int
in
mov
cmc
stos
ret
insb
lods
cli
int3
sub
or
cmp
add
pop
dec
fwait
jne
gs
mov
ss
int3
jno
aad
xor
dec
repnz
add
cmpsb
jp
xchg
push
dec
cmp
sub
mov
fistps
or
lock
pop
cmc
js
data16
addl
jo
or
iret
out
mov
mov
mov
jne
xor
sarb
mov
and
imul
sti
sbb
inc
push
imul
int3
add
es
fldcw
cltd
sbb
and
mov
xchg
mov
push
cmpl
jle
xor
cmp
ja
cld
mov
sbb
scas
adc
mov
gs
and
fs
scas
jae
jne
data16
pushf
push
ds
adc
push
sub
and
and
out
addr16
fwait
push
pop
xchg
cmp
sbb
das
mov
in
lret
fmuls
adc
out
test
jle
out
movsb
xor
mov
sub
inc
cmp
cmp
push
adc
in
sbb
dec
daa
movsl
fbstp
insl
push
sbb
jl
push
test
xchg
sahf
and
enter
lret
sbb
sbb
cld
or
or
test
pop
cli
lret
daa
andl
lea
pop
aas
jns
scas
xor
popf
xchg
jecxz
mov
and
lret
ljmp
jg
outsl
push
aad
jge
or
loopne
lock
sahf
stos
fwait
repz
cmpsb
xrelease
pop
mov
test
mov
xlat
fldenv
xor
pop
sarl
addr16
push
aam
rcl
lea
pop
or
or
jns
mov
sbb
sarl
jecxz
dec
xlat
into
or
and
stos
hlt
dec
jg
dec
dec
shl
inc
mov
ficoml
fistps
int
cwtl
lcall
dec
pop
inc
mov
xchg
jb
test
sarl
mov
sbbb
iret
flds
cmp
xor
xor
out
or
outsl
sbb
mov
test
rcll
addr16
adc
xorl
mov
mov
mov
ret
dec
frstor
pop
stos
push
call
mov
cmp
test
lret
out
test
test
test
dec
fwait
fwait
int3
rolb
push
std
mov
or
dec
int3
add
mov
idivl
mov
push
xchg
fcompl
mov
cmp
enter
or
sti
stos
lods
aaa
insl
repz
inc
add
xor
test
or
mov
cmpsb
loope
gs
mov
je
mov
and
negl
hlt
jno
sub
test
or
jae
adc
xorb
cld
add
sbb
sti
test
fdivrs
jge
fistps
enter
pop
inc
push
les
pusha
jl
jnp
push
inc
or
je
arpl
shll
or
jmp
or
pop
dec
test
out
inc
out
dec
loop
jae
daa
or
daa
mov
daa
xchg
cmp
je
mov
lock
loop
gs
or
and
xchg
mov
pushf
test
aas
mov
jecxz
icebp
add
or
add
fstpt
aam
add
and
mov
xchg
adc
and
or
inc
cld
int
pop
sahf
test
cmpsl
leave
in
jne
inc
in
xor
jno
hlt
dec
shll
mov
xchg
dec
cmc
sti
pop
sub
pop
call
fwait
aas
mov
sbb
and
jb
shll
xor
leave
and
fucomip
orb
xchg
mov
xchg
dec
es
out
or
and
daa
out
pushf
dec
stos
mov
imul
adc
test
push
ljmp
leave
xchg
lahf
dec
mov
mov
ds
lods
push
decl
je
push
loope
adc
fs
bound
mov
dec
pop
notl
sbb
push
xor
push
cltd
fcmovnu
and
lcall
adc
mov
add
cli
add
mov
rolb
xlat
dec
fisttpl
inc
pusha
dec
xor
add
pop
xor
lods
xor
fstps
clc
mov
mov
mov
in
rclb
inc
sub
pop
in
int
push
mov
adc
lock
aaa
mov
sbb
arpl
and
add
test
pusha
movsb
imulb
dec
test
daa
fisttpl
mov
adc
insl
jmp
dec
sub
push
fs
jg
aad
dec
cli
inc
insb
fstps
lods
ja
xor
shrb
and
inc
xchg
test
mov
lods
jae
dec
lds
lods
xchg
pop
iret
sbb
sub
ja
jp
loop
inc
mov
das
cmp
ret
gs
or
push
repnz
adc
cmpsl
nop
mov
xor
clc
insb
mov
cmp
and
xor
inc
mov
stos
and
mov
movsb
nop
push
jb
stc
mov
jae
in
loope
jmp
fwait
or
aad
inc
dec
xor
dec
pusha
mov
xchg
mov
pop
push
mov
adc
dec
adc
test
and
xchg
pop
jne
cli
and
inc
loope
jb
cmp
imul
push
sbb
push
lahf
sbb
sahf
adc
inc
mov
add
inc
pop
jge
mov
popf
repnz
das
mov
je
jb
sbb
xchg
stos
mov
fsub
daa
mov
jno
mov
push
jns
cmp
fwait
sub
pxor
ljmp
loop
repz
add
and
lea
in
jle
fdivs
adc
mov
pop
mov
movsb
xchg
cmc
js
jge
call
xchg
xor
cmp
dec
jb
les
adc
test
ss
out
test
xchg
into
nop
push
mov
xlat
xor
push
sub
stos
push
push
aas
pop
fstpt
inc
les
fcoms
pushl
adc
fistps
test
lahf
xor
cmc
mov
fwait
int3
push
xchg
jbe
mov
inc
push
or
sahf
push
dec
leave
pusha
push
xor
cmp
cli
push
inc
jns
mov
pusha
mov
out
add
psrlw
les
lcall
in
mov
ljmp
dec
sub
cmpsl
loope
pop
leave
cmp
into
jg
jle
lds
push
inc
inc
mov
cltd
mov
lods
mov
jbe
enter
xchg
packsswb
sbb
push
add
imul
inc
arpl
stos
jnp
divl
push
popa
xchg
mov
ja
jg
sti
dec
mov
das
jl
fs
cmc
sub
xchg
jnp
data16
mov
lods
push
push
lock
or
xchg
int
popa
or
lods
or
loopne
into
xor
lret
shlb
lods
stc
das
mov
pushf
push
cmpsl
mov
leave
jb
push
test
cmpb
ss
jge
outsb
dec
sbb
cmpsb
push
out
xor
cli
loope
mull
faddl
and
scas
ss
lods
repnz
les
cld
jle
ret
movsb
lock
or
lret
sbb
xchg
mov
inc
jns
in
icebp
and
in
icebp
jmp
pusha
and
cmp
aad
nop
add
shlb
pop
loop
inc
jecxz
stc
cltd
pop
and
add
jp
dec
pop
popf
jmp
insb
in
insl
cs
in
inc
xor
sbb
pop
mov
repnz
lret
push
scas
sbb
cld
lods
adc
sahf
imull
dec
out
pop
dec
stc
sbb
int3
ss
add
insl
add
decb
dec
sub
and
jge
inc
xchg
cltd
xchg
mov
mov
cmpb
sub
jnp
pop
fcomi
jmp
into
adc
dec
xchg
loop
mov
jno
shr
dec
inc
movsl
out
inc
out
out
mov
repz
push
inc
jae
xchg
inc
shr
sub
add
cmp
fimull
bswap
push
mov
movsb
das
push
cmpl
lahf
inc
in
adc
cmp
cli
mov
mov
scas
add
and
sbb
mov
jmp
andb
mov
push
lock
inc
movsb
iret
or
pop
out
xor
mov
in
lcall
cmpb
adc
lods
scas
adc
mov
adc
lahf
out
sbb
lret
rol
add
push
mov
sbb
jg
mov
loope
sub
daa
cmc
imul
ss
imul
and
aas
in
dec
enter
push
cwtl
sbb
loopne
xlat
idivl
mov
xor
repz
push
mov
lds
xchg
pop
xor
aas
lds
insb
repz
dec
aas
xchg
pop
add
jp
push
jg
insb
xchg
test
jg
test
push
addb
leave
fisttpl
orl
jecxz
and
adc
pop
add
scas
sub
jo
dec
addl
cmp
test
and
add
xchg
inc
mov
dec
xchg
jle
lock
adc
dec
cmp
sbb
ds
jnp
test
imul
test
das
test
popa
out
and
loope
xor
shl
xchg
fldt
incl
aam
jae
inc
cmp
mov
mov
and
cmpsl
out
or
sub
jnp
fnstsw
test
or
stc
dec
sbb
pop
jecxz
and
aad
push
mov
imul
fdivs
test
out
leave
jno
jg
sub
xchg
lods
scas
push
lahf
cld
adc
into
fisubs
arpl
pop
adc
sub
shll
sbb
mov
mov
pop
push
and
sbb
dec
sbb
mov
inc
xchg
xchg
mov
repnz
dec
imul
xchg
push
sahf
lret
cmp
pop
mov
insb
xchg
stos
shlb
test
adc
repnz
or
std
rol
fcmovnu
dec
rorl
pop
adc
dec
cmp
cli
lds
nop
mov
movsl
in
cmp
imul
jbe
cmpsb
cmpsl
adc
mov
mov
inc
xor
ret
cwtl
mov
aad
dec
sub
jge
in
mov
inc
outsl
test
idivl
sub
add
cmc
in
or
xchg
or
scas
mov
pushf
cwtl
sbb
mov
arpl
xorl
daa
mov
push
mov
xor
push
cltd
std
data16
repz
xchg
rcrb
lcall
mov
jge
push
xor
xor
add
dec
pop
mov
cwtl
jle
pop
pop
mov
test
aad
add
adc
gs
jle
fiadds
loopne
and
test
push
xchg
mov
xchg
sar
int3
fidivl
pop
lods
mov
hlt
sub
les
add
lret
incl
repnz
adc
roll
movsl
jo
cmpl
cltd
cltd
aam
pop
enter
inc
lret
cmp
xchg
xor
js
xchg
mov
mov
adc
fbld
lds
jnp
pop
clc
sbb
pushf
outsl
cmc
cmp
mov
inc
add
testb
out
pop
jb
or
xchg
out
mov
repnz
ljmp
pop
retw
fisubl
cwtl
gs
add
mov
add
xchg
fidivl
xchg
std
adc
pushf
mov
adcb
dec
jle
in
cmp
pop
fcmovu
or
arpl
sub
xor
imul
fidivrs
pusha
cmp
push
jmp
jecxz
add
fisttpll
fcomi
lds
mov
or
test
mov
jmp
jae
shrl
inc
push
int3
xchg
xchg
mov
and
dec
shr
es
xchg
int
cwtl
jne
jns
cmpl
pop
ret
in
das
jns
outsl
sub
pushf
or
sbb
pop
sbb
pop
cwtl
push
test
les
xor
pop
sub
lods
fnsave
addr16
repz
inc
pop
fldenv
dec
or
mov
add
std
push
mov
jae
push
sti
out
nop
lods
loopne
ljmp
pop
xor
mov
insb
add
cmp
sub
add
sarb
xor
fstl
mov
ficoms
out
scas
push
sbb
in
imulb
movsl
pop
xchg
movsb
dec
mov
and
outsl
push
add
dec
mov
rcr
mov
cmp
inc
sbb
aaa
lret
xchg
jmp
jae
cld
stos
aas
and
push
adcw
lcall
imul
jge
mov
mov
scas
pop
mov
rcll
mov
movsl
in
or
psrld
and
jno
int3
jmp
xchg
cmp
jno
dec
lds
in
stos
lds
loope
pushl
popfw
pminsw
je
sub
jle
fisubrl
inc
mov
shl
movsl
aas
or
mov
push
dec
fadds
jle
insl
clc
sub
lods
mov
mov
inc
ret
cmp
into
int3
lcall
je
pop
and
divb
daa
out
dec
lock
add
jmp
inc
je
std
cmpsb
arpl
scas
xchg
cltd
bound
arpl
xor
test
push
add
rorl
subb
or
adc
inc
bound
je
lret
pop
mov
outsb
fistl
fldenv
inc
js
push
rcrl
fmuls
and
scas
imull
xor
xchg
pop
and
sub
inc
stc
call
cld
fcoml
fcoml
imul
imul
rcrb
dec
mov
gs
test
cmp
sti
ret
push
addl
js
push
adc
lret
push
jmp
jns
cmp
pop
push
stc
aad
xchg
les
xchg
stc
cmp
mov
test
out
xchg
add
lea
cmc
daa
pushf
in
dec
arpl
add
in
add
lret
scas
outsb
xor
inc
jmp
faddl
xlat
mov
xor
xor
arpl
pop
dec
xor
cmp
fwait
jge
lret
jae
repz
inc
jbe
pushf
sbb
xchg
push
push
into
cltd
adc
push
xchg
cld
push
mov
stc
into
mov
in
test
mov
fsubl
push
cltd
shrl
rcl
cmp
nop
je
xor
int3
gs
jmp
cmpsl
std
mov
mov
sbb
jg
jb
dec
fsubrl
adc
inc
test
pop
pop
fildll
out
adc
pop
lret
inc
dec
pop
enter
rolb
mov
shr
rcrl
sbb
in
mov
notb
ss
push
shll
fistpl
das
inc
push
or
daa
loope
fdivs
mov
jne
aam
xor
xchg
xor
xchg
je
sbb
lret
sbb
xchg
xchg
add
mov
jnp
jne
int3
dec
mov
fcmovnb
push
sbb
ljmp
mov
test
cwtl
enter
ret
xor
add
inc
pop
je
stos
xchg
adc
and
mov
int
fistpl
xor
ja
scas
sub
dec
in
sahf
addr16
mov
and
sub
outsl
lds
push
stos
jge
cmpsl
xchg
jp
dec
pop
cld
fsubs
dec
push
imul
out
fimuls
jmp
pop
add
and
loope
jno
mov
jg
jnp
sti
dec
adc
mov
pop
xor
imul
pop
dec
rorb
shlb
pop
push
dec
add
jg
aam
inc
into
in
cmp
mov
sbb
push
gs
insl
test
and
add
lods
mov
in
xchg
xchg
leave
movl
or
lcall
push
mov
mov
insl
xchg
adc
xchg
lods
adc
pop
in
cwtl
adc
xor
dec
mov
adc
pop
mov
lahf
scas
lea
mov
inc
push
jmp
sbb
jns
popf
sub
divl
jg
fisubs
adc
lods
call
or
movsl
xchg
or
aad
push
rcr
pop
and
cvttps2pi
imul
mov
cmp
inc
js
aaa
bound
and
cmc
sti
and
xchg
cmp
push
cmc
gs
push
mov
push
cmpsb
lods
aaa
sbb
stos
mov
add
cltd
sbb
adc
mov
mov
sub
mov
out
es
xchg
aam
sbb
test
pop
cwtl
push
and
push
push
imull
jb
and
dec
ret
push
jge
shrb
icebp
xchg
xchg
lods
movsb
aam
push
push
mov
sahf
mov
mov
cli
cmp
and
push
rcrb
mov
push
shll
pusha
sub
push
cmc
out
inc
adc
push
or
fwait
imul
add
cmpsb
pop
mov
lds
inc
dec
pushf
add
sbb
leave
xchg
cmp
jle
or
sti
sub
fneni(8087
and
mov
and
insb
jg
inc
cmp
and
dec
mov
hlt
popf
inc
dec
jb
push
outsl
fistpll
sbb
test
mov
xlat
cmpsb
pop
sbb
xor
mov
test
xchg
mov
lahf
sub
ljmp
push
gs
in
in
movsb
in
data16
ret
fs
mov
out
sbb
inc
ja
cli
inc
push
cmp
mov
jbe
jns
icebp
je
js
push
xchg
mov
mov
lock
clc
jecxz
gs
xchg
fdivrl
mov
push
in
test
outsb
fstl
mov
and
addl
sub
pop
bound
xchg
mov
nop
and
mov
out
add
add
xchg
fs
mov
push
enter
clc
dec
and
lock
std
sahf
mov
pop
mov
dec
xor
xchg
push
inc
push
push
sub
sti
testb
xchg
xchg
nop
cs
pop
out
loope
sti
incl
testl
mov
idivl
mov
or
imul
add
pop
fildll
je
pop
popa
mov
jbe
shlb
push
mov
rol
cmpsl
mov
clc
leave
pop
inc
sarb
fcompl
subl
imul
lods
add
push
and
gs
sub
jnp
movsb
bound
push
ret
das
and
ja
jno
fnstenv
jb
int3
xlat
imul
fldl
adc
push
jmp
sub
stos
lea
fsubr
icebp
outsb
push
sarl
test
add
std
xchg
cmp
popa
xchg
pop
or
subl
cmc
push
and
imul
add
js
cld
dec
push
and
jmp
enter
pop
and
call
inc
xchg
jecxz
inc
add
stos
cmpsl
sbb
popf
jo
sarl
sbb
pusha
mov
in
fbld
xchg
xorl
fcoml
lea
xchg
sbb
iret
pop
or
lods
push
dec
push
push
es
icebp
pop
cwtl
xor
das
fmuls
jb
scas
sub
outsb
out
push
inc
lods
sbb
ljmp
xchg
pop
push
xchg
adc
sub
je
je
mov
push
inc
xchg
popf
xchg
es
fucomi
not
push
repz
sub
or
sbbb
xchg
jmp
clc
popa
add
push
jae
lods
js
and
jne
xchg
outsb
loope
cmp
adc
push
incl
enter
inc
push
lock
jns
push
out
jg
std
test
sbb
adc
sbb
push
out
in
bound
loop
mov
scas
sub
jne
mov
pop
orl
cwtl
pop
dec
jl
or
cs
imul
lea
sbb
imul
js
test
jle
popf
scas
jae
test
push
push
and
out
xchg
mov
sub
aas
repnz
test
inc
fcoml
mov
fwait
xchg
lods
data16
pop
jg
leave
std
and
mov
cmp
lds
outsb
inc
lds
jl
push
sbb
jecxz
push
mov
cmp
pop
add
nop
push
mov
add
add
fimull
gs
xor
push
mov
divl
mov
adc
sbb
jae
subl
and
dec
fisubrs
into
dec
movsb
jo
push
fcoml
push
lock
push
jp
ds
std
data16
dec
idivb
lds
insl
mov
into
push
fs
hlt
lods
sbb
fldl
pop
mov
and
cld
mov
xor
sub
ret
popa
xor
sbb
jg
adc
mov
aad
test
xchg
cwtl
push
mov
pusha
mov
testl
repz
out
shll
bound
jno
sub
lock
pop
out
adc
dec
lcall
add
mov
or
nop
xchg
jl
mov
ja
cwtl
pop
in
jl
lahf
dec
and
xchg
jl
shll
aam
mov
cmp
lods
pop
adc
adc
outsb
outsl
fdivrs
sbb
ret
mov
xchg
leave
mov
adc
adc
cli
scas
push
int
xchg
adc
pop
mov
ret
into
aad
cmpsl
std
divl
sbbl
int3
aas
rclb
cmp
mov
je
adc
cmp
lret
or
inc
adc
dec
fidivs
adc
idiv
out
push
mov
ja
ficomps
lods
or
pop
push
jmp
hlt
xchg
icebp
scas
sub
iret
xchg
add
sbb
xor
cmc
fwait
rep
call
dec
or
test
jae
fs
mov
or
dec
lahf
pop
rorl
rcr
cmp
or
lahf
nop
arpl
insl
mov
jo
imul
sub
push
pop
popa
adc
push
push
adc
in
incl
mov
mov
aad
cmpsl
ret
sti
ds
scas
push
mov
rol
fnstcw
and
aas
loop
and
into
orl
xlat
mov
push
cmp
add
sub
bound
pushf
jno
repnz
insl
int
cmpl
imul
cld
imul
popf
and
daa
xor
xchg
pushl
push
loop
mov
mov
out
mov
sbb
mov
jnp
out
ret
jo
pop
sub
imul
cmp
jle
cmp
jge
sbb
mov
inc
cmc
jp
dec
data16
jecxz
mov
pop
xor
mov
mov
call
adc
mov
adc
rcll
imul
mov
jmp
sbb
adc
mov
test
popa
jg
insb
cltd
out
xchg
fs
pop
mov
fldt
sub
mov
pop
cld
es
sub
pop
jecxz
out
jns
adc
rcl
push
aaa
mov
pop
dec
xor
xor
push
inc
outsb
int
leave
daa
outsb
data16
jg
das
push
shlb
movsb
inc
jbe
in
mov
inc
mov
dec
sbb
outsl
mov
mov
jg
inc
pop
cld
xchg
popa
sub
inc
ja
xchg
mov
sub
js
aaa
xchg
negl
js
ljmp
dec
cmp
push
xor
fidivs
mov
push
dec
sar
xor
stos
push
sti
add
int
mov
flds
cmp
xor
cmpsb
add
cmp
out
decb
xchg
loopne
push
notl
rclb
nop
xchg
and
lods
push
arpl
sahf
repnz
ret
stos
add
jmp
sub
inc
stos
mov
imul
call
roll
jl
cmpsb
mov
pop
insb
mov
xchg
pushf
inc
inc
push
mov
addr16
or
mov
sahf
cli
cld
inc
incb
inc
or
lahf
sbb
aad
push
loop
inc
mov
dec
sub
clc
and
ss
mov
pop
xor
dec
ret
push
cmp
in
ds
fsub
cli
cli
inc
movsl
jno
loopne
xor
shlb
and
data16
repnz
xchg
fs
mov
adc
inc
insl
cli
jno
cmp
mov
lock
mov
cmp
movsb
jp
push
cltd
ds
mov
sbb
jb
inc
popa
or
data16
les
mov
xor
xchg
int3
adcl
dec
fidivrl
cwtl
movsb
pushf
push
pop
js
sub
ret
xor
and
cmp
ss
ficompl
jb
test
or
ret
sti
outsb
mov
jl
push
enter
in
repz
cli
add
mov
xchg
popa
add
xchg
mov
insl
xchg
dec
jmp
inc
dec
adc
jecxz
iret
push
sbb
add
push
sahf
pop
lcall
lret
in
or
popa
push
scas
inc
aaa
movsl
xor
js
cmpsl
or
into
js
dec
mov
test
shr
push
dec
mov
mov
add
jbe
jno
xor
test
xor
mov
push
leave
leave
addl
into
fstpl
mov
and
mov
push
cmp
cs
pushl
jmp
notl
add
repz
push
je
movsl
insl
push
push
pop
ss
cmpb
icebp
mov
out
mov
push
loope
mov
jmp
mov
mov
xor
dec
pusha
push
icebp
jecxz
push
cmp
out
stos
clc
sbb
inc
xchg
ss
sub
call
cwtl
dec
in
jno
gs
xor
xchg
xlat
fstl
inc
push
pop
pop
sub
maxps
inc
jmp
mov
xchg
cmp
or
fstpl
xchg
cmp
xlat
sub
push
mov
lcall
or
mov
cmp
cli
jns
dec
sbb
ret
in
loopne
cmp
xchg
rclb
adc
std
lds
loop
sbb
adc
xchg
fwait
xor
mov
roll
rcrl
push
xchg
cltd
xchg
jo
xor
add
cltd
xchg
mov
out
out
aad
data16
pusha
sbb
inc
pop
test
add
add
lods
jle
sub
test
lods
jle
pop
ds
fdivrp
xorl
sbb
out
leave
xlat
shl
stos
scas
add
iret
cltd
push
or
outsl
inc
sub
out
outsb
add
in
push
fs
fs
mov
aad
mov
gs
push
xchg
sbb
mov
sbb
add
test
cmp
or
shll
sarb
xchg
popa
shl
into
dec
subl
out
outsb
push
push
pop
mov
pop
pop
or
mov
sub
or
jnp
adc
fdivs
pop
jae
mov
pop
mov
sub
stc
mov
shrb
stos
dec
roll
push
comiss
repz
add
imul
xchg
outsb
cltd
dec
pop
stos
ss
imul
outsb
sub
shlb
popf
xchg
add
pand
jecxz
fisubrs
mov
shrb
mov
sub
sbb
mov
or
xchg
mov
out
xchg
pop
or
mov
xchg
dec
mov
andb
negb
fstpl
loop
outsb
push
test
bound
cmpsb
mov
pop
pop
mov
push
pop
mov
push
cmp
pop
pusha
insl
add
daa
ds
in
add
incb
mov
and
fstpt
cmc
cltd
push
mov
jo
push
adc
sbb
rclb
sbb
pop
xchg
lea
out
inc
popa
mov
cmpb
ds
shlb
aad
push
xchg
scas
inc
mov
gs
jno
mov
dec
stos
pop
inc
sti
aaa
mov
in
push
add
out
push
mov
sti
repz
mov
cmpsl
pop
cmp
jo
in
dec
xor
push
mov
pop
jg
scas
mov
pop
xor
xchg
int
and
adc
push
jns
push
sbb
dec
sub
inc
xchg
cmpsl
or
ds
lods
repz
mov
cltd
lret
test
imul
aam
clc
mov
and
loope
call
in
inc
mov
push
insb
xlat
insl
fisubrs
mov
les
mov
and
mov
adc
hlt
ficoml
pop
mov
cs
mov
or
dec
cltd
movsb
and
cmp
hlt
out
sbb
loop
pop
sbb
rcl
sub
xchg
out
cmc
pushf
cs
sbb
imul
add
fbstp
or
stc
cli
pop
jbe
adc
andb
mov
cmpsl
ret
cmpsb
js
lcall
mov
scas
xor
lods
push
sbb
adc
cmp
add
loope
cli
pop
sub
ljmp
rol
inc
sarb
cmpsl
mov
sahf
cmp
rol
out
mov
and
xor
push
decb
or
stos
adc
push
insb
rcl
cmp
aam
or
nop
sub
mov
dec
add
xchg
jb
mov
in
push
insb
sub
cmpsb
cmpl
inc
rorb
roll
push
or
clc
sets
mov
add
mov
jbe
mov
dec
fstps
lret
pop
xor
inc
sahf
loopne
lods
jns
mov
xchg
scas
push
mov
or
notl
mov
mov
mov
adc
pop
mov
lods
xor
push
lods
leave
inc
pop
mov
xor
jmp
mov
dec
lcall
mov
pop
cltd
nop
mov
inc
lahf
pusha
punpckldq
push
dec
roll
insl
and
push
ja
out
and
addr16
xchg
jb
dec
jge
imull
test
jmp
lock
mov
hlt
imul
in
pop
jb
lret
xchg
mov
notb
pushf
mov
push
add
andb
jno
movsl
jg
fsub
lock
pushf
sub
fs
xor
ret
jle
test
dec
mov
in
aad
pop
outsl
mov
mov
cmp
inc
idiv
ljmp
pushf
and
sub
dec
aam
iret
mov
out
jnp
inc
xor
int3
cwtl
mov
iret
jmp
push
mov
test
mov
xor
mov
pusha
pop
scas
cmp
std
dec
lret
imul
lods
jne
lock
gs
sub
adc
push
mov
shrl
mov
adc
clc
jl
ret
repnz
cld
lahf
lods
inc
sub
jno
push
jae
jge
sub
pop
gs
cltd
icebp
repz
pop
in
pop
ja
mov
mov
lret
fisttpl
dec
adc
cli
shl
sahf
dec
pusha
mov
jecxz
or
lahf
cld
sub
sarb
cmpsb
cmp
iret
and
sbb
cli
movsb
fistps
movsl
imul
mov
cmp
and
sbb
mov
popa
xchg
mov
subb
std
sbb
and
dec
inc
sbb
xchg
adc
push
mov
pop
xor
add
popa
mov
adc
enter
xlat
les
and
lahf
adc
cld
cmp
push
push
mov
sub
fnstsw
cmp
psubsw
xchg
push
add
jo
sub
fnstenv
sub
lock
jl
movsb
dec
imul
cmpsl
xlat
add
fidivrl
mov
subb
sbb
sub
push
sarl
mov
clc
fildl
pusha
addr16
inc
push
xchg
lea
in
jns
mov
stos
pop
push
and
jne
fsubrl
in
jb
bound
pushf
popa
and
add
ret
cld
stos
mov
push
xor
xchg
loope
sbb
pop
cmp
mov
jmp
out
pop
pop
xchg
sbbb
int3
push
xor
rorl
lret
lods
pop
cmpsl
sti
ja
xor
iret
and
shlb
xorl
stos
xchg
in
adc
mov
add
aaa
iret
dec
je
lret
mov
cmp
add
jnp
shll
aas
mov
sub
out
fdivs
enter
mov
mov
repz
push
imul
loop
inc
jnp
jbe
xchg
jno
repz
adc
mov
cmp
mov
pop
jmp
test
popa
das
pop
es
fnstcw
fbstp
out
dec
mov
xor
sbb
jp
pop
and
pop
sbb
dec
sarb
sahf
sub
cs
sbb
lcall
ret
mov
sbb
cmp
and
sub
int
aaa
and
push
mov
insb
leave
loopne
inc
es
aaa
jge
pop
push
pop
mov
and
add
pushf
iret
rclb
mov
in
push
lock
mov
mov
ret
push
push
ljmp
into
repnz
jno
enter
add
jecxz
nop
xchg
lods
jge
jg
stc
mov
push
loopne
test
push
xchg
ljmp
xor
cmpsl
icebp
fistps
pop
xor
adcb
rcl
jmp
mov
or
movsl
push
out
bound
scas
mov
movsb
and
test
mov
rcr
sbb
lods
out
cmp
add
mov
mov
jo
leave
in
mov
out
leave
inc
xor
push
repz
outsb
ljmp
ljmp
test
push
or
addr16
fidivrs
dec
fs
jnp
cmp
or
push
inc
inc
sub
sub
fnstenv
mov
fmul
add
clc
aas
mov
mov
mov
lcall
pusha
and
mov
add
in
pop
sub
sahf
lea
xchg
mov
push
mov
out
adc
xor
test
xchg
inc
stos
imul
inc
aad
outsl
push
xchg
jle
mov
cmp
ss
inc
sub
xlat
mov
ret
dec
pop
mov
fisttps
sbb
and
xor
imul
into
ss
addr16
mov
leave
cld
ficoml
je
subb
xor
sbb
sub
movsb
xchg
imul
jne
or
or
dec
pop
test
ror
xor
or
xor
bound
nop
loopne
andb
jne
scas
les
sahf
cmp
pop
aaa
out
pop
mov
inc
mov
cli
or
jl
sarb
ficoml
mov
and
mov
push
lods
test
mov
and
push
jne
sbb
sbb
mov
mov
rcl
cwtl
sbb
sbb
loopne
aaa
push
jp
cmp
test
int
stos
in
jno
testb
imul
sbb
mov
in
pmulhw
outsl
out
jg
outsl
xorb
dec
jno
adc
test
jle
fildll
inc
insl
outsb
mov
and
sbb
cwtl
fistpl
call
dec
nop
cltd
pop
add
jo
sub
in
xchg
pusha
xor
sarl
fmuls
cmp
xchg
xchg
sub
xor
adc
lods
push
shlb
orb
stos
mov
clc
shrb
inc
leave
lret
xor
movsb
add
gs
aad
cmp
mov
jge
or
add
popa
rcrl
and
sbb
xor
fimuls
xchg
imul
jb
jb
call
mov
adc
and
loop
mov
dec
hlt
push
xor
mov
inc
mov
mov
stc
lds
adc
test
or
in
fldl
cld
or
ret
ret
sbb
jns
and
shll
xchg
in
aas
inc
ficoms
add
push
fldcw
int3
push
push
jle
loopne
jne
jle
mov
jg
pop
lcall
or
outsb
lea
sub
adc
dec
punpckhdq
sti
stos
shl
flds
pop
jae
cltd
subb
dec
and
mov
nop
jl
mov
cmp
fs
aad
test
das
xchg
sbb
fwait
loope
cmp
enter
mov
xchg
dec
jl
cmpsl
in
lea
and
shll
xor
lcall
pushf
xchg
test
add
sub
dec
push
and
xor
insl
jb
pop
out
xor
sub
aad
gs
add
cs
sub
sbb
fucomi
and
pop
insb
loopne
and
call
dec
xchg
dec
dec
shl
sub
lock
clc
loop
call
xchg
sub
mov
mov
cltd
imul
xchg
adc
loope
and
rorl
outsl
or
mov
fwait
mov
data16
mov
cmp
fmull
int
cmc
outsl
xor
aas
sub
scas
pop
and
add
inc
sbb
scas
fists
inc
std
dec
cmpsb
add
lds
push
inc
inc
and
rorl
gs
sbb
std
mov
mov
cmp
cmpsl
xchg
aam
inc
dec
or
es
lock
mov
stos
adc
xchg
jmp
stos
lahf
sbb
dec
outsl
pop
sub
and
loop
mov
mov
inc
mov
aad
mov
call
stos
pop
movsb
sub
add
or
decl
aaa
hlt
pop
jno
pop
ret
aaa
and
mov
into
dec
cwtl
mov
sub
sbb
sbb
shll
pop
scas
mov
sbb
lods
and
ss
ret
nop
jbe
and
mov
iret
call
rcl
mov
mov
sbbl
mov
into
sbb
pushf
es
jp
in
pusha
cmp
sbb
bnd
pop
ja
and
mov
xchg
test
jbe
mov
call
cli
clc
jo
inc
in
push
outsb
mov
nop
mov
pop
sbb
or
andb
cld
dec
xchg
cmp
or
aam
xchg
mov
cmp
das
mov
decl
jl
jne
icebp
scas
mov
ds
int3
mov
push
cs
into
pusha
inc
clc
adc
mov
push
xor
sbb
cwtl
sub
push
cmp
sar
mov
jbe
or
xchg
in
jae
jno
inc
dec
inc
mov
mov
test
les
and
scas
dec
loopne
aas
add
sbb
add
lcall
mov
jbe
push
fsubrs
add
push
les
imul
mov
jmp
add
dec
shrl
int3
cmp
mov
cmp
hlt
push
fcompl
ds
or
xchg
or
adc
add
add
fildll
push
add
popa
loope
cmpsl
inc
insb
mov
nop
mov
into
lods
or
xchg
ds
sub
jmpw
fincstp
sub
add
lret
sub
mov
lock
jge
mov
sbb
mov
enter
dec
leave
lock
out
sbb
adc
cltd
dec
cli
test
cli
push
outsl
and
mov
pushf
mov
adc
push
adc
push
cmp
loopne
fnstcw
jle
arpl
jnp
movsl
test
push
movb
xchg
leave
pop
outsl
pop
iret
pop
add
stos
push
xor
daa
pop
arpl
inc
es
outsb
in
cmp
xor
cmp
add
icebp
cmp
xor
inc
sahf
pop
sub
testb
dec
sbb
xor
sti
and
push
jge,pn
sub
or
jo
ret
outsb
xor
mov
jmp
sti
es
adc
insl
ret
push
pop
lahf
jno
cltd
dec
pop
inc
movsl
std
add
or
lahf
xchg
mov
mov
xor
lahf
mov
loopne
push
dec
lret
dec
or
mov
sub
cmpsb
outsb
xchg
pusha
mov
sub
mov
insb
xor
and
popf
sub
and
push
insl
por
mov
mov
cmp
jle
imul
repz
es
dec
rclb
mov
in
sub
xor
loope
cli
xchg
mov
stos
mov
in
cmp
push
mov
test
out
dec
or
sbb
mov
jle
ds
clc
cmp
repz
cmp
pop
jmp
ret
adc
dec
mov
jno
ror
or
fdivl
lock
inc
and
sbb
aad
mov
jle
inc
iret
or
lcall
and
iret
dec
out
dec
cmpsb
xchg
xchg
pop
push
fs
and
aam
pop
mov
jmp
adc
lea
or
out
lods
imul
loopne
mov
or
hlt
push
dec
push
fdivr
aad
cld
xor
inc
lcall
xchg
std
popf
lds
adc
int3
add
adc
and
or
mov
int3
addr16
fstpl
fcmovu
test
add
hlt
pop
xorb
cmpb
out
mov
push
and
xor
sbb
push
jmp
int3
mov
add
or
push
cmp
or
or
sub
inc
push
sub
cmp
leave
xchg
pop
outsl
fcompl
repnz
adc
fsub
mov
scas
xor
cmp
xchg
gs
jbe
sub
test
inc
repnz
and
adc
outsb
faddl
xchg
xor
repz
xor
sbb
dec
out
inc
adc
roll
mov
mov
stos
push
out
adc
xchg
mov
sub
ja
jns
mov
fisubrs
lods
sahf
and
sarl
lret
mov
lods
pop
mov
jo
jg
pusha
cltd
sbb
out
out
fcoms
in
fldt
lahf
ds
adc
or
rcrl
add
loopne
pusha
lahf
and
mov
cmp
xlat
pop
xchg
mov
sahf
andl
jecxz
aas
push
test
imul
cmc
adc
ret
outsb
out
adc
xchg
or
daa
dec
mov
dec
rcl
jns
enter
sahf
inc
pop
push
sub
rcll
shr
jge
jns
lahf
fistpll
push
decb
mov
psllw
out
mov
jp
dec
cltd
hlt
adc
push
xchg
inc
repnz
add
lods
pop
push
cs
outsl
fcoms
mov
mov
sbb
inc
jae
out
push
mov
enter
ljmp
dec
cmpsl
sub
test
addr16
test
or
bound
test
sbb
call
xchg
sub
idivb
fidivs
stc
add
mov
je
mov
pop
and
rcrl
and
or
inc
ja
das
mov
xor
jg
jns
sub
in
pop
test
dec
fcmove
in
cmp
dec
and
lods
jl
or
jne
add
repnz
in
lcall
pop
mov
shlb
insl
leave
loopew
mov
sbb
pop
lahf
adc
push
ret
xor
mov
push
add
stc
mov
inc
aas
das
enter
jne
stos
clc
dec
push
pop
sub
shll
js
sbb
xor
mov
scas
ret
cld
xchg
pop
inc
stc
or
cmp
test
out
mov
push
insl
push
rorb
push
push
rorl
ja
mov
rcll
jb
mov
mov
movsb
or
pop
jecxz
or
jb
dec
test
rcrl
lds
add
sbb
push
int3
out
sarl
rclb
dec
inc
loopne
ret
jmp
addr16
scas
test
push
or
imul
popl
gs
xchg
enter
xor
mov
and
inc
adc
shlb
push
movsb
jmp
outsl
add
insl
leave
cmp
mov
hlt
xchg
dec
es
push
std
out
push
or
ret
pop
pop
push
cltd
cmp
addr16
jno
bound
dec
fldcw
subb
inc
mov
outsl
leave
add
lret
xchg
adc
mov
ficoml
inc
push
syscall
jbe
jne
sub
imul
mov
sarl
out
imul
out
xchg
mov
mov
scas
dec
pop
jmp
ror
loop
add
rorl
push
leave
sbb
dec
into
enter
test
dec
jae
ret
add
add
and
xor
xchg
jl
dec
dec
mov
lods
mov
mov
enter
pop
jl
xchg
lret
or
inc
or
sub
push
into
cmpsb
sbb
sahf
pop
sti
jecxz
insb
and
pop
pop
or
xor
sbb
pop
push
or
sub
cmp
dec
sti
es
push
mov
shrl
or
insb
dec
jns
push
out
outsb
test
mov
sub
cmp
int3
cmp
push
jecxz
aaa
fisttps
push
aaa
mov
jp
notb
jmp
jae
adc
pop
lock
cmpsb
jl
in
data16
add
or
mov
test
pop
adc
mov
enter
sahf
repz
lret
jecxz
push
les
push
pandn
lods
add
repz
arpl
or
outsl
cmp
not
cltd
jmp
xchg
xor
out
jge
jg
out
stos
hlt
lret
mov
mov
emms
inc
pop
idivl
jge
sub
arpl
ljmp
fmul
repnz
sbb
mov
pusha
mov
xchg
adc
push
inc
js
push
dec
roll
xor
pop
and
sub
loop
vmread
mov
stc
aam
pop
movsb
dec
xchg
and
popf
lods
xor
jnp
imul
rorl
push
outsb
dec
mov
or
adc
daa
and
dec
inc
sbb
cmpsl
in
repnz
hlt
hlt
adc
rcr
pushf
popf
adc
daa
jmp
sbb
lods
jns
ds
addr16
xchg
loop
dec
jo
jg
dec
and
cmpsl
shlb
inc
cld
cmpsb
jo
mov
cli
daa
pop
inc
int
pop
lret
cltd
sbb
inc
stos
add
test
mov
ror
push
jg
rolb
arpl
push
les
mov
lods
add
shl
ds
xchg
and
push
pop
or
mov
push
scas
cs
xchg
je
mov
fsubrs
bound
or
mov
sub
ss
scas
into
repz
mov
incl
inc
cmp
jg
mov
aas
test
jecxz
or
fisubrl
pop
and
pop
dec
iret
jmp
iret
lea
addr16
imul
jge
push
sub
fisubl
xor
iret
outsl
fisttpll
fidivl
fstl
pop
lcall
popa
push
inc
add
xchg
out
mov
cs
add
incb
mov
stc
push
jnp
ds
lret
mov
cmp
stos
popa
aas
push
push
adc
fs
inc
int3
pop
jecxz
sbb
pop
pop
jae
pop
dec
sbb
adc
aam
stc
inc
in
cli
mov
aaa
shlb
cltd
jae
repz
pop
aad
inc
imul
aas
xor
imul
sub
lret
sahf
or
adc
cs
daa
sar
popf
sarl
jecxz
add
xchg
lcall
cmp
xor
out
sarl
mov
fldl
sahf
cmp
cmc
inc
mov
outsb
aas
xor
xchg
xchg
aad
ljmp
into
cmpsl
push
les
cmpl
es
jmp
rol
test
push
jbe
xchg
mov
inc
pop
sbb
pop
add
inc
push
add
scas
mov
fdivrs
add
sbb
call
ret
jl
popa
sbb
pop
cmp
fisttpl
cs
call
mov
nop
push
or
cmp
jg
fwait
xchg
pusha
mov
ds
jl
jmp
add
imul
sahf
push
call
jp
pop
mov
and
and
sub
push
roll
mov
sub
addr16
out
stos
push
pop
pop
ret
push
mov
pop
pop
loopne
icebp
pop
xor
mov
inc
jae
jae
fwait
adc
and
jno
sbb
cld
cs
push
cld
xchg
push
repnz
lcall
imul
mov
jns
pop
sub
popf
ficoml
xchg
fwait
or
push
popf
cli
popa
test
dec
mov
jl
or
and
addl
jne
xor
cld
xorl
pop
push
arpl
popf
xchg
jns
dec
mov
xchg
mov
mov
arpl
js
test
call
cmp
and
in
xor
daa
out
xchg
into
and
movsb
push
ds
clc
pop
mov
data16
test
push
stos
test
call
mov
clc
fcoms
into
mov
call
inc
loop
jno
lret
cmp
inc
daa
and
xor
fcompl
arpl
pushf
sbb
dec
mov
repz
fdivrl
mov
xor
push
sub
push
push
inc
js
shl
jmp
jno
xchg
out
cmp
pushf
mov
cmp
decl
rcl
cmp
testl
fcomp
mov
xchg
aad
and
test
push
mov
push
adc
jg
pop
dec
mov
fadds
sub
or
icebp
clc
mov
lods
adc
xlat
add
je
push
xchg
js
dec
fldenv
sbb
stos
stos
adc
add
stos
fistpll
ss
add
jnp
mov
jge
outsl
xlat
dec
lcall
and
aas
mov
into
cmpl
push
int3
push
test
cmp
mov
addr16
add
sbb
leave
sbb
pop
nop
cwtl
orl
lret
cmp
mov
sahf
pop
in
mov
ret
sbbb
jnp
fldenv
mov
mov
jb
nop
xlat
mov
xor
int
pop
jge
stc
ret
mov
lods
cmp
sbb
pop
sahf
ss
pop
pop
repnz
lock
in
dec
inc
gs
mov
cmpl
mov
jle
inc
loope
stc
jecxz
mov
rcll
xor
cmp
dec
pop
fbstp
cwtl
stos
stc
inc
xchg
pop
dec
mov
xchg
sbb
cmp
cld
xchg
pop
icebp
xchg
xchg
or
sub
xor
add
push
aaa
xor
jecxz
rcrb
std
mov
or
push
push
movsl
cmpsl
mov
jnp
lock
xor
dec
xlat
cltd
inc
add
hlt
sbb
cmp
lds
lock
add
ss
cmc
imul
mov
lods
inc
ljmp
xor
dec
xchg
jno
add
mov
ficompl
push
mov
and
jl
xchg
mov
outsl
xchg
cmpsl
fnstenv
push
rcrl
add
aam
cmp
sub
mov
sbb
int
idivb
adc
mov
adc
in
mov
jge
mov
aam
fs
cmc
xor
dec
rorb
add
shll
pushf
xchg
xchg
inc
cmp
cmpsl
jl
test
aad
lea
insl
fistpll
stos
xchg
jp,pt
xor
shl
jbe
pop
add
int3
sbb
xor
jle
jl
pop
sub
xor
mov
mov
sub
jns
jge
mov
mov
and
jnp
sti
aaa
cs
sub
out
mov
cltd
push
notb
call
push
xor
jns
xorl
xlat
je
or
movb
push
lret
mov
mov
sub
jae
cmpsb
test
negb
pop
mov
fidivrs
mov
mov
rcll
insb
pop
fisttpl
pushf
ss
dec
or
jl
fstsw
xor
and
dec
int
sbb
int
popf
xchg
mov
in
roll
test
cmp
inc
inc
loopne
clc
mov
sbb
fldl
inc
mov
sub
cmpsb
out
dec
insb
int3
xor
cmp
pop
clc
rorl
jo
sti
add
push
push
inc
or
xor
sub
out
je
popa
adc
add
cmc
adc
lret
insb
mov
push
sti
xor
lods
gs
pushf
push
test
mov
or
mov
leave
enter
daa
xchg
push
push
roll
xchg
jl
and
mulb
inc
mov
xchg
ret
mov
push
pop
pop
sbb
repz
jbe
test
loope
addr16
test
push
push
or
xchg
into
add
cmp
lcall
and
sbbb
ret
cmp
dec
jnp
xchg
xlat
xchg
shll
or
dec
incl
mov
fnstsw
add
test
xor
sbb
out
rcrb
add
fdivp
outsb
or
cltd
lods
lret
imul
les
xor
fists
scas
pop
mov
aad
mov
pop
fnsave
jle
out
add
dec
insl
cmp
cmp
jnp
out
mov
jle
cld
jecxz
pop
dec
and
fdivrl
sbb
in
subl
int3
or
mov
xor
icebp
xchg
rcrb
jnp
pop
push
mov
jle
cmp
mov
leave
mov
scas
testl
pop
mov
cmp
pop
jl
pop
loop
dec
lcall
pop
int3
std
inc
and
mov
test
cs
aas
scas
inc
push
loope
adc
aaa
das
dec
add
orl
ficomps
push
js
lds
adc
in
call
shrb
push
in
and
sub
dec
xchg
aas
jecxz
lock
mov
and
xor
cmpsl
jmp
sbb
sti
leave
insl
out
push
or
add
in
mov
fldcw
or
iret
int3
mov
xor
push
dec
push
jecxz
push
dec
sub
dec
sub
push
roll
fcmove
or
jo
pop
and
inc
lea
aas
push
xor
cwtl
cmp
jge
pop
jmp
lods
add
lret
dec
add
push
dec
and
mov
ds
imulb
loop
inc
mov
xchg
mov
cltd
fsubl
cmp
fs
or
lret
aaa
out
mov
es
xchg
mov
push
sahf
cli
fidivs
cmpsb
jbe
push
mov
and
pop
rorl
or
mov
dec
pop
addb
lods
or
sub
pop
mov
add
jle
mov
in
stc
adc
out
gs
mov
loop
jp
jae
decl
pusha
inc
or
pop
fcoml
mov
pop
push
sbb
clc
xchg
push
dec
jb
mov
mov
and
mov
mov
jnp
mov
fidivs
ljmp
mov
rcrb
cmp
out
shrb
out
rcr
divb
mov
cmc
outsb
mov
mov
sahf
lods
jo
sub
pop
lret
hlt
cmpsl
test
cmpsl
stc
rolb
loope
scas
mov
daa
scas
cmp
leave
int3
xchg
jg
mov
cwtl
stos
and
xor
jno
fstpt
fwait
xchg
xchg
xchg
movsl
test
int
cmpsb
sub
lea
scas
rorb
cs
mov
mov
ljmp
or
cmc
inc
cs
lods
pop
sbb
out
pusha
mov
adc
and
add
shrl
add
inc
aam
dec
stos
mov
gs
jle
pop
inc
outsl
and
mov
jmp
inc
nop
add
dec
stc
inc
jbe
movsl
sbb
aam
dec
mov
dec
lds
jnp
inc
jg
or
mov
loope
js
pusha
adc
mov
jle
out
mov
xor
dec
bound
adc
ljmp
adc
test
dec
bnd
and
push
push
mov
les
mov
repz
outsl
mov
aam
pushf
mov
jae
dec
xchg
sbb
jnp
mov
pop
and
cmpsb
int3
add
push
or
dec
popf
xchg
iret
enter
ficomps
cmp
in
mov
stos
jl
push
div
imulb
add
incb
cwtl
pop
lods
pop
mov
push
movsl
jge
or
aaa
sti
adc
mov
into
mov
fnstenv
or
mov
je
push
int
mov
mov
lret
or
test
stos
fs
dec
xor
iret
aam
xor
lret
out
ret
adc
test
dec
mov
mov
test
sbb
cmp
jo
sub
movsl
int
sub
pop
ljmp
jg
and
inc
push
cs
dec
adc
mov
pop
test
cli
or
xor
push
scas
loope
mov
jb
add
imul
clc
daa
mulb
pop
cmp
jbe
cmp
lds
add
xor
out
enter
or
pop
rcrb
sub
sub
xorb
cmp
js
iret
out
lock
cltd
dec
repz
dec
push
ja
jb
xor
mov
pop
jge
das
push
adc
call
popa
clc
xchg
and
dec
jns
leave
adc
add
sub
mov
inc
int
loope
out
cmpsl
fcoms
mov
xchg
sbb
movsl
mov
inc
popa
shrb
scas
repnz
insl
xlat
pop
add
decl
cld
inc
rorl
dec
loop
dec
fiadds
je
mov
mov
jo
ljmp
and
xchg
movsl
outsl
push
decb
fisttpl
xorb
xor
inc
cmp
fnstsw
cmp
pop
addr16
push
pop
pop
xchg
xlat
shll
xor
cs
lock
ret
lods
lret
jl
je
cmpl
hlt
dec
cmpsl
cwtl
inc
addr16
dec
loopne
lods
pop
je
in
inc
pop
or
lret
std
subb
or
pop
jne
add
push
jecxz
loop
sub
xchg
xchg
pop
cltd
pop
or
cld
dec
js
mov
ds
movsl
adc
roll
push
iret
push
out
or
das
cmpsb
mov
inc
pop
jo
pop
and
mov
mov
jecxz
sbb
cmp
sbb
fcomi
jl
push
sub
ljmp
mov
sbb
sub
scas
out
mov
jge
stos
jbe
insb
mov
adc
or
aam
dec
xchg
xor
cltd
enter
xor
sbb
sbb
stc
mov
arpl
mov
gs
repz
ss
xchg
mov
push
and
pop
mov
shlb
and
insl
and
out
fisttpll
jle
jmp
cmp
iret
jo
cli
mov
fwait
jl
sbb
xor
jmp
cs
xchg
mov
mov
scas
inc
xchg
imul
rorb
fisubrl
stos
jecxz
xchg
and
lret
mov
mov
fwait
nop
cmp
rep
lock
mov
xor
outsl
jne
push
mov
pop
ret
pop
rclb
add
mov
pop
les
lods
iret
cs
out
mov
insb
cmp
movswl
dec
dec
cmp
sub
movsl
pop
add
call
or
stos
addb
cmp
cmp
cmpsb
mov
sti
sub
mov
lock
jge
cmc
adc
repz
in
jb
inc
aaa
andb
pop
inc
mov
inc
gs
movsb
ret
xor
ja
cmp
adc
mov
shlb
in
mov
sarb
mov
fcoms
ja
rcl
hlt
jmp
mov
sbb
ja
xchg
cmp
xchg
push
sbb
icebp
sahf
aas
dec
pop
imul
push
mov
lcall
addl
dec
js
jge
lods
in
repnz
out
jnp
shll
sub
jl
pop
push
mov
imul
inc
mov
test
rcrb
sbbl
mov
push
xchg
adc
jecxz
cmpb
xlat
in
fldt
and
ss
mov
add
ljmp
xchg
mov
fisttpll
mov
ss
mov
or
pop
rorl
jecxz
inc
sub
int
cmp
inc
repz
out
hlt
pop
imul
out
mov
cmp
sbb
mov
jnp
cmp
add
lock
aad
or
sub
movsl
mov
xchg
cmp
std
in
gs
scas
lret
dec
stos
aaa
add
xchg
repnz
into
or
addl
mov
cmp
add
aaa
pushf
dec
stos
mov
insb
test
test
jmp
cmp
xchg
sbb
xlat
subl
cmp
mov
adc
mov
jp
test
cwtl
xchg
shll
mov
mov
rorb
or
test
dec
inc
adc
mov
ss
in
sbb
aaa
and
fiaddl
lods
mov
pop
xchg
addr16
sbb
out
or
addl
fiaddl
and
sub
push
push
or
notb
dec
mov
insl
imul
cs
dec
jae
das
aaa
xor
les
add
xor
test
loop
test
push
mov
pop
idivl
cmp
inc
and
mov
pop
mov
sbb
loop
jg
js
mov
mov
pusha
cmp
sbb
out
cmp
xor
sbb
pusha
push
jg
addr16
fcmovb
push
mov
jne
in
stc
sarb
lea
jle
push
mov
jle
fldt
lds
jnp
push
mov
loope
cmpsl
sub
mov
mov
enter
add
push
mov
or
fstl
loopne
jne
gs
sbb
ds
mov
mov
add
push
inc
jp
xchg
push
mov
mov
push
popa
dec
pushl
sbb
bound
inc
imul
sarb
fildl
push
in
xor
sub
xor
minps
adc
pop
stos
sbb
pop
and
cmpsb
mov
sub
push
test
lret
xchg
pop
pushf
push
and
lret
enter
addr16
fmull
push
iret
repz
es
divl
mov
adc
lds
les
loopne
and
add
dec
inc
mov
ret
and
adc
mov
dec
push
dec
pop
pusha
mov
lds
mov
pop
jno
adc
xchg
into
stos
dec
mov
sar
jb
add
push
jp
mov
jl
out
mov
push
arpl
std
and
daa
fnstsw
add
rol
push
or
inc
lods
test
and
and
mov
lods
or
ret
dec
inc
jnp
mov
shl
dec
in
stc
cmpsl
mov
pusha
imulb
jg
inc
cmp
jmp
int
ljmp
mov
add
sub
shlb
scas
mov
fmuls
test
pop
or
sub
cmp
stc
mov
ljmp
mov
inc
mov
xchg
hlt
dec
sti
scas
arpl
test
in
inc
cmp
scas
cld
xlat
jg
ror
loop
cmp
mov
cld
movsl
leave
mov
dec
cwtl
andl
xchg
pop
loopne
addr16
pushf
mov
inc
and
mov
loope
popaw
cmc
push
sti
movsl
repz
fisttpl
jbe
jl
inc
fs
pop
lock
inc
mov
into
adc
sarb
sti
cltd
push
xchg
lock
inc
adc
outsb
popa
pop
sbb
sbb
ss
pop
daa
ljmp
mov
add
pop
dec
xlat
fistps
ja
jbe
push
sub
mov
xlat
ret
cmp
mov
xchg
cmp
popa
mov
ret
push
rcl
xchg
cli
xlat
pop
lds
shlb
das
dec
pop
pop
adc
pop
rorl
repnz
stos
or
dec
es
mov
xor
push
out
sub
push
mov
jo
leave
rol
or
or
lods
adc
shll
sub
sub
push
int3
loop
test
outsb
dec
sbb
or
push
out
cwtl
sbb
adc
pop
xchg
xor
push
cwtl
int
out
inc
in
push
adc
xchg
add
ret
outsb
or
in
jecxz
inc
pop
mov
pop
or
add
mov
xor
iret
mov
xchg
ficoms
jae
nop
cmp
fld
or
pop
push
push
fwait
pop
xor
pop
sub
enter
pusha
mov
jge
pop
xchg
or
dec
mov
sub
das
inc
mov
fisttps
mov
lods
in
xor
push
jo
adc
sub
lods
lds
add
pop
inc
in
mov
xchg
out
mov
add
mov
insl
les
sub
mov
arpl
xor
aaa
or
insb
jo
push
or
push
mov
dec
inc
add
rep
sti
out
dec
mov
fs
sub
xchg
pop
je
cmp
and
in
divl
jmp
rolb
leave
push
pop
lcall
mov
cli
js
mov
or
shlb
lret
cmp
cmp
xchg
jge
imul
xor
aaa
fidivl
mov
xchg
jb
push
jp
dec
mov
mov
or
mov
mov
mov
rorl
pop
mov
xchg
lods
mov
mov
addr16
imul
call
sub
loope
cmpsb
lock
jb
mov
push
inc
test
sub
pop
sbb
ds
cmp
adc
sahf
jae
xlat
push
jmp
insb
push
outsl
and
into
mov
push
imul
mov
mov
call
ss
adc
in
push
xchg
aam
jmp
sub
lea
mov
lret
loop
loopne
cmp
fucomp
loopne
aas
mov
add
loopne
test
mov
cmp
lea
mov
mov
pop
sbb
push
adc
enter
jp
jg
add
pusha
pop
ljmp
out
sub
dec
in
ljmp
gs
adc
icebp
hlt
jg
lock
push
mov
xor
rolb
cmp
cld
push
cmp
out
add
cli
jge
pop
jp
lea
sbb
sub
insl
pop
les
sbb
mov
fistpl
and
mov
nop
add
movsl
push
sub
push
cmpsl
cmp
lods
dec
movsl
jg
adc
fsubs
bound
call
adc
mov
test
aaa
inc
pop
nop
add
outsb
inc
mov
xchg
mov
mov
imul
or
lods
sub
xor
in
pop
jl
adc
sub
lret
or
push
sbb
in
jae
add
cwtl
test
and
aad
fcomps
repz
dec
jns
popf
shrl
and
ja
fsubr
aaa
inc
sub
je
test
addr16
or
jb
and
fstps
add
jbe
lock
dec
insb
sub
fmul
inc
sub
inc
ret
push
jmp
shrl
mov
movsl
sub
sbbb
cltd
add
leave
rclb
sub
sbb
in
loopne
cmp
and
iret
jmp
pop
mov
out
add
mov
popa
test
xor
lods
fstl
rorb
lods
and
fsts
scas
ret
and
dec
popf
fdivr
or
xor
and
push
mov
inc
aas
mov
int3
mov
inc
andl
sbb
xor
notl
rorl
push
mov
addl
sub
loopne,pt
das
pop
cmp
push
cld
sbb
pop
jb
jecxz
jns
mov
inc
mov
notl
ret
in
loope
push
jno
lea
sbb
lahf
outsb
add
scas
sarb
push
frstor
sub
pusha
dec
adc
xchg
mov
jl
shrb
adc
pop
inc
js
enter
out
ljmp
jo
dec
rorl
lods
sub
lods
idivb
scas
outsl
enter
stc
pop
jg
outsb
mov
out
push
in
lret
stos
in
loope
xchg
test
xchg
ja
jo
dec
push
test
pop
sub
popf
lock
aaa
cli
push
or
mov
int3
pop
and
pop
inc
push
popf
xchg
mov
inc
inc
mov
or
sub
int
lret
cmpsl
in
frstor
ficomps
cwtl
inc
jmp
aam
shr
pop
cmpl
ret
pop
xchg
pop
aam
dec
cmpsl
fcoml
push
es
ss
dec
dec
adc
push
xchg
cmpb
movsl
inc
push
dec
ds
or
in
shl
icebp
jl
xor
stos
push
mov
fistps
lods
dec
mov
add
sbb
in
movsb
lahf
ret
ret
aaa
dec
xlat
out
rcll
pop
hlt
subb
out
cmpsl
out
push
push
aad
hlt
cmp
repz
into
pop
xchg
mov
sub
mov
push
std
shlb
and
sub
inc
push
testl
movl
aaa
mov
aas
add
pop
shl
and
sbb
das
mov
popf
xchg
cs
in
push
ja
push
sub
dec
xlat
pop
ss
cmp
jne
icebp
mov
pop
ja
and
cmp
pop
xlat
js
cwtl
mov
cmp
mov
out
orl
push
sbb
dec
cmp
daa
add
enter
adc
jne
fcmovne
repz
fwait
or
or
mov
or
mov
lods
xor
and
and
adc
mov
ja
sbb
adc
or
int3
test
pop
sbb
xchg
push
or
ja
or
cmp
lahf
aas
cmpsb
pop
data16
xor
into
mov
inc
test
jge
mov
sti
std
jge
movsl
sbb
orb
sub
bound
gs
cmp
sbbl
test
addb
aas
inc
sbb
cmp
push
cmc
nop
adc
out
loop
mov
stc
outsl
cmovae
daa
mov
das
dec
aad
outsl
scas
mov
push
loop
jp
mov
jb
fs
push
mov
insl
adc
add
and
xor
roll
jns
jnp
cmpsb
cmpsl
ljmp
adc
iret
jns
out
sahf
jmp
push
adc
lret
arpl
outsl
mov
push
out
mov
mov
jae
adc
sbb
adc
dec
and
dec
std
in
inc
mov
int
push
xor
mov
pop
stos
pop
insb
sub
push
sahf
push
inc
mov
ss
sbb
lds
inc
nop
pop
mov
pop
data16
add
mov
or
not
gs
lret
cs
mov
inc
stc
mov
adc
lahf
dec
add
mov
pop
jno
xor
dec
sahf
sbb
cs
sub
push
mov
clc
daa
mov
and
popf
jnp
pop
inc
mov
fwait
and
sbb
hlt
mov
sbb
out
pop
xchg
stc
lret
jp
jo
cmp
cld
jle
int3
je
mov
jbe
jp
sarl
mov
call
pop
mov
cmc
sti
aaa
shll
out
mov
fwait
add
mov
sbb
fwait
push
imul
and
xor
jle
xlat
orb
sub
sbb
dec
xchg
mov
jo
mov
inc
loop
dec
inc
inc
adc
pop
xchg
test
sti
cwtl
push
jbe
cld
xor
mov
inc
xor
xor
xchg
bound
push
mov
ss
mov
sbb
sbb
pop
push
addb
xor
push
adc
cs
lahf
dec
movsb
cltd
and
dec
mov
mov
mov
push
add
inc
jp
into
outsb
arpl
ret
xchg
cmp
xchg
push
mov
fimull
out
movsb
orl
xchg
cmc
fcomps
xor
icebp
xor
jns
mov
fadds
ss
stc
add
psubsb
jmp
loop
popa
adc
and
test
rclb
add
fnstcw
inc
pop
icebp
adc
insl
fwait
out
sbb
movsb
imulb
adc
lret
mov
arpl
or
stos
mov
adc
push
mov
movsl
pop
push
dec
sub
subb
xchg
pop
push
xchg
sub
dec
mov
sahf
rcr
xorb
dec
pop
and
xlat
icebp
sti
mov
fidivrs
inc
cs
rcrb
jo
scas
sarl
cmp
cli
mov
rcr
fisttps
xor
iret
fistl
xor
mov
cs
add
sti
pop
jnp
xchg
sahf
pop
xchg
sarb
dec
das
rorl
and
call
fldl
jo
cmpsb
jg
xor
push
and
mov
cli
inc
xchg
inc
aas
sub
jmp
pusha
mov
and
rorl
mov
add
mov
fcoml
divl
lods
jle
add
rcrl
dec
test
cmpsb
notb
xchg
or
pop
lret
push
stc
rclb
push
sarb
sub
mov
js
push
mov
cwtl
lahf
cmp
mov
dec
sub
dec
fwait
ds
ss
enter
or
nop
adc
ret
stos
sub
cmp
out
ljmp
in
stc
jne
in
cmp
cmp
outsb
xchg
rclb
mov
arpl
push
jno
repz
mov
test
lret
mov
xor
je
incb
shrl
lock
sbb
mov
std
out
int
loopne
dec
nop
pop
mov
outsl
repnz
addr16
jb
movsb
cli
sbb
jecxz
push
push
repz
pop
jge
call
sti
push
mov
in
scas
fmuls
fbld
mov
orb
pushl
shlb
mov
mov
xchg
dec
add
jmp
sub
pusha
gs
addr16
mov
jp
or
mov
inc
xor
es
xchg
rcl
and
or
movsl
mov
or
xchg
add
push
add
sbb
lds
es
xor
out
scas
insb
dec
cmc
push
push
pop
jle
adc
call
push
mov
jbe
sub
pop
push
jbe
mov
push
push
and
sub
imulb
int
fwait
cli
outsb
pop
lea
xchg
js
aam
xchg
stos
rclb
cli
dec
inc
cmp
test
dec
mov
bswap
lods
sub
inc
mov
adc
cmp
xchg
push
fs
jmp
xlat
add
inc
mov
dec
sub
mov
cmp
fsubrs
enter
and
inc
fildll
cmpsl
inc
and
mov
dec
pop
pop
das
cli
jge
sbbb
lcall
and
jns
push
add
and
loop
cmpsl
jnp
xor
lret
push
enter
sub
jo
fwait
subb
ret
xchg
lds
push
loope
jge
addb
mov
in
xor
movsb
loop
xchg
scas
mov
repnz
loopne
test
or
add
add
pop
mov
dec
mov
mov
outsl
mov
push
aas
lock
pop
push
frstor
ja
or
mov
aam
aaa
push
mov
dec
jae
mov
mov
dec
in
icebp
xor
mov
xlat
icebp
and
cmp
les
jns
jo
xchg
push
es
scas
mov
mov
cld
pop
fcomps
and
stos
loope
jmp
adc
push
cld
adc
aam
lcall
xchg
inc
fnstenv
aas
push
icebp
and
sub
cmp
xchg
pop
sahf
in
popa
push
dec
out
inc
out
hlt
scas
subb
pop
mov
dec
mov
enter
and
dec
and
pop
dec
xchg
or
out
or
ss
pop
push
rolb
ljmp
add
adc
pushf
push
nop
inc
subl
stc
in
sbb
cmp
cmc
push
fs
lock
cmp
std
mov
aas
or
or
shl
popa
mov
ss
sbb
adcb
mov
shrl
jns
inc
cmp
arpl
js
cwtl
push
or
clc
test
dec
cmp
repz
mov
sub
in
mov
xchg
lcall
mov
mov
pop
inc
in
sub
rcrl
test
jle
push
add
lock
add
subl
outsb
scas
mov
fstpl
add
ret
push
aad
mov
test
add
jecxz
in
xchg
leave
sbb
add
pop
mov
loope
jge
pavgb
jle
rcrl
dec
test
xchg
add
ret
sub
and
sti
sub
push
loopne
ljmp
xchg
dec
sub
mov
inc
icebp
enter
cld
sub
std
xchg
sahf
push
aam
inc
insb
imul
jle
mov
aaa
int3
movsl
inc
jmp
in
cmp
out
mov
movsb
fucomip
mov
push
ficoml
out
jl
in
ret
lcall
mov
ds
mov
jne
stc
jne
cwtl
int3
popa
inc
cmp
daa
js
and
lods
xchg
pop
sbb
not
mov
xchg
xchg
lods
stc
jmp
sbb
jecxz
pop
pop
fistl
xchg
mov
fistps
fisubrs
mov
stc
test
orps
mov
bnd
out
daa
std
push
fcoms
jmp
jecxz
cmc
repz
add
sysenter
sti
cmpsl
mov
cwtl
test
cs
dec
sbb
adc
sbb
jae
inc
lahf
mov
push
je
push
testb
push
and
repz
cli
nop
mov
and
mov
imul
pop
sbb
mov
je
call
loope
pushf
and
add
xlat
lods
mov
mov
sbb
xchg
mov
sbb
push
inc
out
push
add
pop
mov
pop
dec
and
adc
sub
xchg
mov
jecxz
mov
out
iret
rcrb
inc
int
jno
sarb
sbb
cs
movsb
decl
inc
jbe
int3
fisubrl
lahf
cli
push
xlat
adc
mov
mov
cmpsb
add
out
cs
out
insl
and
push
iret
or
add
mov
pop
pushf
ljmp
mov
cld
stos
repz
inc
push
sub
nopl
daa
pushf
pushf
icebp
add
sbb
insl
lret
sti
sbb
out
or
movsl
icebp
jno
es
push
mov
dec
into
mov
xor
and
mov
imul
cmp
adc
rcll
lods
cmp
shl
fwait
jb
nop
das
fsubrs
nop
cld
hlt
dec
push
jo
dec
sbb
mov
lret
ljmp
lretw
clc
aaa
mov
gs
insl
jbe
fucomp
mov
mov
inc
enter
mov
ja
xchg
shrl
iret
fwait
push
pushf
js
imul
cmovg
loope
pop
and
jl
mov
inc
test
aad
xchg
bound
cmp
pop
cmp
xchg
cld
pop
and
cmpsb
add
xchg
push
bnd
test
or
and
test
and
cmp
adc
xchg
or
inc
lock
ljmp
pop
pop
ficompl
hlt
lret
jge
add
add
leave
add
sub
testb
lret
mov
cwtl
lahf
loopne
push
lret
mov
stos
imul
jo
cltd
daa
shll
mov
inc
and
adc
es
jge
jl
dec
mov
jno
scas
enter
in
mov
mov
rcrb
mov
mov
lahf
dec
test
test
aaa
push
adc
mov
push
pop
sbb
push
das
mov
push
pop
in
stos
cwtl
mov
outsl
ret
push
imul
lea
fstpl
rcl
insl
bound
xchg
fldcw
test
call
pop
cmpsl
xor
cmp
dec
call
ror
push
fimuls
mov
jno
rclb
pusha
adc
stos
fistps
pop
ret
cs
mov
scas
insl
leave
insl
insl
loop
icebp
in
jne
xchg
jne
cwtl
incb
subl
inc
repz
out
sub
push
repz
mov
push
rcrl
or
cmpsb
sub
es
cmp
movsb
push
shl
arpl
popa
and
into
rorl
testb
sti
pop
movsb
and
jp
pop
sbb
int
jnp
jae
stos
xchg
fwait
cmp
xlat
inc
jo
add
cmp
xor
hlt
clc
stos
xchg
push
in
mov
fmul
add
sbb
xor
push
ss
lods
mov
pop
mov
out
adc
out
out
inc
in
xchg
lods
mov
add
out
xchg
cli
xor
out
test
cmpl
adc
or
or
push
xor
imul
sbb
call
xor
lcall
jmp
adc
call
das
daa
lock
xor
ret
mov
push
ja
mov
cs
rcr
mov
mov
jnp
xchg
mov
push
push
loopne
cmp
aam
out
mov
sub
inc
cmp
mov
push
xchg
ret
inc
and
div
in
sbb
mov
pop
cmpsl
push
bound
and
jg
cmpsb
mov
sbb
dec
ljmp
rolb
sahf
test
mov
test
xor
lcall
fwait
lds
fistpll
mov
inc
fcmovb
adc
dec
inc
pusha
clc
lods
mov
repz
sbb
stos
sbb
dec
mov
out
inc
pop
xor
je
jg
cmp
jl
mov
aad
jb
inc
rclb
pop
ss
call
cwtl
inc
xchg
adcl
outsl
adc
fldcw
stos
insl
and
and
loopne
mov
stos
test
aaa
fisttpl
stc
mov
ret
cmc
les
in
mov
imul
sbb
pop
popa
loopne
jp
sub
sub
cmpsb
or
dec
imul
push
popf
xchg
insl
nop
push
into
and
add
pop
dec
divl
jge
mov
jge
lret
jae
fildll
stos
sub
bound
fcmovnu
jo
and
adc
sub
and
lods
addr16
or
adc
push
mov
imul
js
out
inc
in
push
cmp
push
test
inc
pusha
xor
sub
and
loope
mov
lret
xor
mov
pop
or
mov
stc
mov
in
sbbl
xor
or
fmull
add
or
enter
jle
and
popa
movsb
sub
pop
lahf
xor
hlt
xchg
xor
js
add
rclb
xchg
and
and
stos
pop
loopne
mov
shl
fdivs
push
jmp
fadds
addr16
xor
enter
xor
aad
mull
or
sahf
adc
adc
insl
cwtl
sti
nop
xchg
lfs
loopne
aaa
xchg
jo
cmp
imul
xchg
lahf
loop
imul
cmp
mov
add
clc
inc
nop
inc
inc
add
dec
loop
test
mov
iret
mov
sahf
xchg
fwait
test
jmp
xchg
iret
out
pop
jl
push
int
fadds
xor
jp
cltd
outsb
cld
sub
cmp
or
rorb
pop
ljmp
mov
push
push
fimull
pop
fs
sbb
or
pop
lods
inc
je
nop
imul
xchg
scas
shrl
mov
cmp
or
mov
xor
jae
paddd
data16
dec
cmp
adc
sub
dec
jnp
jno
imul
xchg
pop
xchg
mov
jg
dec
xchg
sub
dec
push
mov
nop
add
aas
enter
das
out
cwtl
insl
mov
dec
pop
test
sub
in
scas
add
xchg
gs
fildl
fdivl
inc
and
ljmp
cwtl
sbb
rcrb
add
pop
sub
cmp
in
scas
xchg
xchg
push
mov
andl
cmc
cmp
lds
inc
xchg
pop
adc
fs
dec
jg
mov
fnstcw
push
mov
sti
adc
mov
aas
roll
or
ror
push
int3
jno
xor
ds
add
cmc
adc
incl
adc
es
jp
rcr
fsubl
sahf
ret
sub
lahf
mov
cs
sub
push
jg
inc
leave
ja
pop
scas
insl
xchg
fidivrl
lds
add
mov
dec
mov
jnp
xor
push
push
int
sbb
cmp
pop
outsb
lcall
adc
inc
sbb
pop
in
xor
nop
sub
shll
call
push
push
mov
sub
outsl
ret
jge
cltd
add
int
pop
fbstp
clc
or
scas
mov
xor
mov
or
jo
aam
lahf
rorb
inc
test
jmp
xor
test
mov
jbe
push
fmul
dec
push
mov
fwait
inc
fwait
iret
popa
in
in
sub
call
pushf
dec
fiaddl
je
scas
sbb
mov
push
push
mov
or
add
aaa
adcl
ret
aaa
je
movsl
push
or
jb
add
ret
pop
sarb
repz
cmp
sbb
es
jmp
cmp
jne
inc
scas
jno
xor
or
xor
scas
xchg
xor
xchg
movsb
push
pop
gs
in
inc
lods
dec
daa
mov
sti
xor
jmp
ja
ss
and
add
and
pop
jg
adc
cmc
pop
cmp
imul
mov
sbb
push
or
mov
cli
divl
add
mov
xchg
xchg
pop
mov
jo
popf
and
clc
andl
cmpsl
scas
pop
aas
notb
jp
jbe
xor
lahf
mov
xchg
mov
iret
fs
add
mov
outsl
rcl
xor
or
inc
jnp
js
pop
sti
lcall
xor
push
mov
adc
xor
cmp
adc
push
mov
xor
mov
aam
test
or
test
jne
icebp
lahf
sub
sub
adc
sbb
xor
mov
arpl
fdivl
adc
dec
inc
lcall
ja
leave
push
addb
mov
adc
out
push
dec
mov
add
ret
xlat
loope
mov
call
xchg
sbb
pop
idivb
in
dec
push
mov
enter
in
push
mov
fstpt
ss
adc
je
rep
lods
xchg
push
into
dec
cwtl
sub
test
fwait
jns
sar
imul
outsb
xor
hlt
jg
push
jb
inc
mov
add
mov
push
and
sub
xor
std
rcrl
popf
out
or
mov
sarl
xchg
xlat
mov
sbb
ret
rcrb
xchg
jg
inc
jb
adc
dec
adc
bound
jb
xlat
fnstenv
outsl
push
sahf
ficompl
arpl
loop
fstpt
aad
cmpsl
movsl
inc
inc
mov
jle
lds
loop
lds
pop
aas
out
jecxz
sub
ja
mov
xchg
insb
xor
pop
xchg
xor
pop
lret
pop
add
ss
das
test
mov
mov
rcrl
xchg
aaa
test
mov
das
nop
xor
xchg
mov
adcl
cs
fcmovu
popf
lods
xchg
and
test
push
push
cs
sub
lods
sbbl
dec
aaa
nop
jns
or
repnz
daa
dec
push
mov
xor
test
cmp
std
and
repz
xchg
sub
and
xchg
out
stc
push
pop
mov
or
inc
lds
xorl
or
cmp
popa
test
stos
ffree
sbb
rcr
cmpl
or
dec
addl
mov
dec
dec
pop
mov
push
fcoms
fbld
dec
or
mov
dec
dec
jecxz
pop
xchg
xlat
pop
pop
stc
popa
aad
fadds
dec
stc
add
addb
fcoms
cld
inc
iret
adc
cmp
lea
adc
adcl
push
aad
jno
pop
divl
fisubs
repz
out
dec
mov
push
hlt
push
mov
inc
repz
imul
popa
pop
cmp
add
addl
aad
adc
lret
add
ret
push
cld
mov
icebp
pop
jp
sbb
stos
cmpsb
inc
sbb
mov
cmp
xchg
push
cmp
es
popl
jecxz
add
lret
pushf
adc
push
call
mov
cwtl
fs
iret
xor
enter
ret
inc
pop
scas
out
add
out
xor
inc
cs
int
cld
lds
fwait
dec
cltd
push
mov
cwtl
lahf
not
loopne
lods
popa
shlb
arpl
test
adc
imul
adc
je
imul
adcl
or
add
andb
adc
sub
mov
pop
sahf
insb
negl
idivb
movsl
mov
cmp
dec
xor
or
jecxz
jo
insb
imul
nop
in
pushf
mov
sub
movsb
iret
or
push
sub
ret
mov
sub
sarl
pop
add
dec
js
mov
sub
out
xchg
fcmovne
mov
add
fistpll
jmp
pop
pop
mov
cmpsb
xor
inc
stos
std
test
adc
or
xchg
adc
adc
xchg
add
dec
cmc
jle
stos
and
scas
xor
sub
mov
xchg
dec
mov
push
mov
out
lods
pop
pop
sahf
in
dec
outsb
out
jmp
mov
lock
dec
pusha
movsb
or
rcr
adc
leave
jne
ss
loopne
cltd
pusha
loope
fadd
or
cli
imul
fcmovbe
movsb
mov
mov
std
and
scas
xchg
rorb
jge
add
and
jno
inc
and
sbb
in
push
cmp
movsb
pushf
pop
icebp
aaa
jbe
nop
xor
xchg
cltd
pop
in
ficoms
xorl
sub
jmp
aad
jno
fldenv
and
andl
pop
int
xor
enter
or
pop
scas
stos
xor
addb
dec
and
lea
pop
addb
mov
mov
adc
xor
mov
aam
sub
aas
xor
mov
loopne
push
popa
rorl
insb
inc
or
mov
sub
and
pushw
fwait
ret
cltd
xchg
lods
rclb
push
shl
push
sub
xchg
movsl
insb
sub
lcall
mov
repz
mov
lea
jge
hlt
adc
dec
out
or
bound
mov
push
mov
add
cwtl
push
ret
clc
or
dec
mov
outsb
adc
cmp
stc
roll
cltd
pop
inc
pop
sbb
sub
or
xlat
push
cmp
outsl
stos
sbb
int3
or
mov
or
hlt
lret
cmp
adc
mov
test
roll
mov
rolb
in
std
fdivrs
mov
xchg
cmp
ficoms
xor
ficoml
pop
mov
outsb
push
mov
sub
sti
jl
sub
fstpt
mov
or
mov
mov
sbb
and
pop
or
sbb
loope
test
push
add
aaa
xor
outsl
sub
adc
stc
les
stc
add
cmpsl
dec
fisubs
call
cmp
lods
dec
push
lods
mov
or
jmp
push
das
jno
call
jmp
insl
lea
and
dec
lcall
pop
adc
push
fstl
test
sbb
cmp
adc
js
icebp
push
and
fwait
test
xchg
dec
lock
in
fadds
aas
jmp
in
cmpsb
jb
movsl
shlb
jmp
stos
mov
jo
push
inc
cmp
repz
sbb
add
push
mov
push
lea
dec
stos
add
dec
pop
mov
lret
pop
push
and
es
or
mov
jecxz
lds
arpl
push
pop
push
cld
pop
push
push
movsl
and
pop
rcrb
or
das
push
pop
filds
push
adc
adc
ss
mov
adc
int
xchg
push
sub
jbe
push
jnp
add
xor
lods
and
sbb
xchg
mov
xchg
mov
jo
lods
outsb
hlt
mov
fyl2x
cs
fcompl
push
dec
or
cmp
sbb
inc
or
cmp
cs
aad
pop
sub
data16
xor
arpl
call
cld
mov
dec
in
cltd
push
andb
jge
push
testl
xor
xchg
pop
pop
mov
mov
and
cmp
arpl
dec
lret
sbb
insl
jge
std
and
or
mov
xchg
insl
int3
pop
out
adc
incl
xchg
and
int
jge
int
xchg
pop
lahf
fmull
mov
fistl
fdivrs
ds
popa
orl
push
insb
mov
addr16
std
cmp
stos
icebp
and
out
pop
int
int
inc
enter
push
jg
sbb
fucomip
subb
sub
call
hlt
loop
pop
imul
cmp
inc
push
aaa
cs
ljmp
mov
pop
inc
sub
xchg
test
scas
mov
xor
inc
jg
ret
sahf
xor
lds
sub
dec
adc
dec
movsb
dec
xchg
lock
jecxz
enter
jg
push
cltd
push
xor
in
inc
test
ja,pt
adc
mov
inc
pop
test
test
and
cltd
bound
jmp
mov
pop
cld
scas
insb
in
std
mov
in
xchg
jle
ret
lods
mov
loope
mov
cmp
fstl
ret
sti
inc
or
sti
inc
xchg
sbb
in
push
jg
cmpb
int3
mov
js
mov
mov
ja
pop
inc
xor
call
adcb
rcl
aas
sbb
outsl
or
jmp
std
roll
cmp
cmc
add
sub
sbb
scas
jl
loope
sub
or
mov
aad
decl
stos
xchg
mov
int
dec
aam
das
push
pushf
or
mov
jmp
loop
mov
jmp
dec
mov
mov
mov
test
shlb
ljmp
inc
xor
xchg
or
or
dec
bound
xor
inc
call
push
pop
pop
in
jmp
sbb
pop
and
sub
jl
aaa
shlb
pushf
add
jle
test
in
xchg
mov
mov
aaa
or
push
add
gs
popa
sbbl
test
xor
test
jp
cmp
add
mov
lcall
push
enter
insb
add
and
lods
shlb
push
push
xchg
dec
push
mov
js
outsb
cmpsl
xor
sub
and
loope
inc
test
jle
jnp
sahf
or
cli
xor
mov
mov
out
aad
sbbl
jo
mov
movlps
mov
cs
xchg
notl
mov
push
scas
or
jo
and
dec
lock
fimull
pop
mov
repz
cmp
orl
inc
fcomps
jmp
adc
xchg
sub
inc
adc
cmp
cmp
popf
or
sub
scas
cmc
mov
inc
cli
gs
dec
lods
and
cli
test
mov
dec
mov
mov
fldcw
ret
push
inc
dec
jp
stc
dec
int
popf
out
pop
jne
sub
icebp
xchg
aad
stos
xchg
lret
pushf
lcall
or
popf
mov
popa
cltd
aaa
adc
mov
sub
and
sbb
xor
xor
mov
cmp
xchg
push
mov
stc
push
pop
adc
dec
adc
je
fstpt
insl
les
loopne
jno
scas
push
rclb
ljmp
mov
loop
mov
push
rolb
in
popa
cmp
and
mov
xchg
sbb
jmp
test
pop
mov
jl
mov
int
mov
mov
fwait
add
stos
xchg
inc
sub
cmpsl
dec
fwait
iret
loop
mov
dec
leave
btr
cli
mov
jns
pop
fidivl
popa
leave
mov
enter
pop
and
nop
add
ret
call
test
push
xor
int
add
insl
stc
fsubrs
gs
out
out
cbtw
loop
pop
add
ret
inc
pop
lock
repz
sar
dec
divb
xor
fsubl
movsl
and
ret
or
inc
popf
cmp
lds
dec
and
std
fcomps
mov
add
lahf
and
dec
popa
cmp
es
pause
iret
inc
sar
icebp
stos
notl
jl
pop
jp
dec
inc
rorl
mov
mov
movsl
inc
push
repz
cli
sub
xchg
pop
mov
ficoml
xchg
adc
sub
in
sar
adc
aas
fdivrs
and
gs
mulb
pop
pop
gs
stc
sbb
rcr
xor
inc
insb
sti
nop
gs
push
dec
int3
mov
adc
cmp
inc
and
adc
adc
aad
jns
xchg
outsb
add
push
push
sbb
xchg
mov
add
mov
dec
rorb
out
dec
lahf
shrb
xor
dec
mov
pop
push
std
cmp
icebp
jg
mov
insb
leave
cmpsl
stos
sar
out
in
out
out
pop
or
sbb
mov
push
push
loope
clc
ds
jle
mov
shrl
mov
test
fildl
jmp
shr
or
enter
sbb
xchg
in
cmc
cmp
mov
or
adc
pop
add
cmpsb
add
pop
mov
rcl
jmp
movb
mov
movb
mov
adcl
std
call
arpl
sbbb
jecxz
pop
scas
out
xchg
int
mov
daa
xor
xchg
sub
jno
mov
sub
call
in
lods
pop
test
xchg
lods
aam
rclb
dec
out
mov
pop
orb
add
je
hlt
ficoms
xor
test
push
mov
in
loope
out
xor
mov
out
repz
testl
cmpsl
int3
es
xchg
or
push
xor
enter
int3
fs
mov
aam
sub
out
sub
xchg
into
insl
jns
fildl
std
inc
idivl
lcall
mov
lea
adc
push
dec
pop
dec
pop
adc
add
cwtl
sbb
add
xchg
sbb
adc
mov
jne
imul
xor
stos
out
lods
mov
push
jp
outsl
test
xor
inc
mov
outsl
jno
aas
sub
out
test
nop
xchg
bound
jnp
or
xor
loopne
incl
ficoml
rcl
inc
sbb
js
pop
add
jns
or
xchg
cld
sbb
in
push
pop
movsl
add
lret
sbb
mov
fistpl
es
imul
mov
imul
pushf
mov
mov
dec
and
ljmp
call
mov
ret
or
pushf
dec
add
xor
xchg
jae
xchg
and
xor
mov
push
loope
mov
aas
leavew
push
cwtl
adc
mov
mov
das
jg
sahf
xchg
inc
xchg
cs
lcall
js,pt
xor
push
cmp
pop
adc
mov
rorb
lock
fcom
out
loope
push
jge
jg
jmp
mov
pop
sbb
test
js
ljmp
sub
cmc
xor
mov
sub
data16
test
sub
addr16
add
stc
scas
xchg
mov
out
mov
pushf
lret
in
shlb
rclb
pop
imul
and
sbb
push
pop
test
enter
push
inc
leave
insl
js
cli
add
inc
mov
jge
lcall
sbb
push
mov
bound
sub
inc
int3
addb
stc
jnp
cmp
push
sbb
inc
idivb
push
mov
push
stc
hlt
add
adc
cld
andb
sbb
enter
cmp
push
or
and
or
xchg
mov
stc
test
in
jp
mov
lods
test
lcall
clc
sahf
insb
inc
fbstp
and
ret
mov
jecxz
sub
and
lret
sub
mov
mov
pop
sbb
mov
cmpsl
sub
mov
sub
inc
sarb
push
pop
mov
xchg
sub
push
sbb
fcomps
inc
pop
sub
fwait
imul
rcr
mov
xor
or
and
clc
lods
hlt
or
fs
mov
je
stos
pop
and
rcr
push
mov
adc
out
ret
push
sti
test
lock
lock
or
sub
push
lea
pop
test
scas
dec
dec
and
xchg
sub
jecxz
mov
lods
jge
xchg
push
popf
jmp
ss
in
ja
lret
pushf
cmp
lahf
pop
aas
xor
cltd
aas
mov
mov
ldmxcsr
xor
xchg
aam
and
loopne
jnp
sub
in
mov
data16
dec
mov
lahf
pop
cmp
test
sbb
loopne
repnz
out
imul
sbb
mov
insb
popa
sub
pop
sub
mov
adc
jg
clc
gs
fnop
icebp
bound
outsl
inc
fdiv
lcall
inc
xor
xchg
sbb
mov
outsb
bnd
mov
sub
adc
mov
sbb
mov
addr16
jg
jne
and
mov
lods
adc
mov
lahf
fnstsw
or
mov
push
mov
jo
pushf
jp
add
cltd
push
mov
push
dec
andb
adcl
cmp
leave
sbb
jg
cld
mov
push
and
push
rorl
add
out
notl
xor
xchg
bound
and
pop
test
and
xorl
pop
pop
lods
xchg
push
pop
je
jecxz
les
imul
mov
es
jae
push
mov
xchg
loopne
pop
pop
das
inc
mov
jae
rorb
daa
sbb
icebp
mov
push
call
pop
loope
or
or
push
ret
rorb
adc
xor
dec
add
subl
mov
repnz
mov
dec
inc
adc
sti
loope
clc
fsubrs
test
and
sbb
lahf
push
add
pushf
pushf
dec
mov
scas
in
add
cmpsl
pusha
rcrl
sbb
xor
dec
xlat
push
sbb
gs
loope
mov
nop
imul
dec
cli
or
cmpl
sub
aad
bound
ja
mulb
das
test
lods
jbe
fxch
inc
lock
cs
in
clc
sar
push
repnz
loop,pt
stos
add
mov
call
xlat
sar
push
push
mov
add
cmpsl
fnstenv
push
out
push
mov
test
scas
icebp
or
add
or
xchg
in
decl
sub
push
popf
fisubl
fisubl
pop
push
cmp
fwait
sbb
pop
cmp
call
jmp
mov
ret
pop
xor
xorl
cltd
imul
xor
bound
inc
add
mov
jg
aas
imull
add
pop
loopne
and
aaa
xchg
test
sbb
stos
sbb
cmpsl
icebp
mov
pop
loop
loop
mov
xor
sub
test
cltd
or
jne
aas
lret
mov
sahf
mov
insb
dec
add
sbb
pop
fwait
xor
mov
fiadds
cmp
out
cmp
jne
enter
std
fidivs
mov
scas
adc
cwtl
shl
iret
lret
test
pop
nopl
xchg
ljmp
mov
gs
pop
das
jae
test
outsl
or
pusha
xor
push
push
std
daa
fidivl
sub
iret
loope
shl
jge
mov
and
mov
stos
inc
lds
push
adc
stos
inc
rcll
inc
pop
out
movsl
test
cmc
push
cmpsl
daa
or
mov
mov
mov
stos
sub
pop
pop
dec
fnstsw
insl
in
or
hlt
insb
dec
and
add
repnz
lret
out
push
mov
add
ja
xchg
std
jnp
mov
push
pop
sub
xchg
das
jns
dec
in
lcall
sti
push
add
movsb
jno
in
sub
xchg
push
sbb
sbb
hlt
imul
push
sub
pop
and
add
xlat
push
icebp
adc
pop
das
push
mov
loope
scas
pop
imul
jle
sti
lea
test
test
jle
sbb
repz
out
xchg
imul
cmpsb
pop
push
ror
jmp
cli
cmpsl
or
mov
cmp
xchg
es
nop
jno
adc
adc
sbb
pop
es
pushf
add
fnstcw
inc
int3
jns
vandnps
cmpsb
ja
push
mov
repnz
rcll
out
fidivl
js
adc
mov
xchg
add
mov
iret
pusha
scas
jns
out
xor
ja
and
pop
sub
push
dec
mov
jmp
gs
mov
lret
ds
pop
ds
pop
iret
mov
int3
xchg
add
or
pop
addr16
or
lock
fdivrl
xchg
cmp
ret
inc
mov
movsb
dec
pop
adc
pop
ds
sbbb
xchg
xor
stos
sti
nop
and
test
fdivl
out
inc
lahf
pop
test
dec
int3
data16
sbb
push
repz
imul
push
jmp
sar
inc
test
into
adc
ja
lods
mov
sbb
scas
xchg
jne
push
incl
adc
inc
arpl
or
repz
out
jns
sbb
add
cmp
bound
dec
pop
xchg
into
pop
add
push
outsl
mov
fstl
cmp
pop
cmp
loop
jge
inc
fisubs
movsb
xor
add
nop
fisubl
inc
jb
pop
xchg
jnp
xchg
cmp
sbb
movsl
out
push
pop
ret
lea
cmp
mov
inc
das
xor
or
pop
sub
imul
mov
mov
xlat
lahf
in
pop
inc
jae
adc
rclb
push
loop
add
insb
inc
mov
dec
push
mov
cs
cmp
mov
enter
inc
mov
pop
fildll
popf
cmp
mov
add
in
sbb
jns
pop
dec
aas
sbb
ss
fwait
add
inc
pop
fstl
adc
test
dec
adc
sbb
mov
adc
sbb
xor
mov
stos
xlat
dec
mov
in
lahf
jnp
ret
nop
cmpsl
jb
mov
sbb
xor
adc
add
pushf
fistl
arpl
sahf
mov
dec
test
mov
test
adc
scas
mov
iret
ret
sbb
sbb
adc
or
push
jne
add
jns
cmp
and
push
mov
aas
inc
sub
outsb
xor
ss
addr16
add
cli
popa
test
push
daa
mov
mov
neg
iret
cmp
mov
pop
sbb
and
enter
and
push
sbb
pop
daa
in
mov
test
hlt
insb
add
jge
or
xor
dec
sbb
enter
mov
inc
ss
mov
mov
cmpl
es
mov
cmc
push
push
mov
mov
and
rorb
xor
fwait
addr16
jmp
mov
pop
push
jne
mov
sbb
pushf
nop
sarl
sbb
xchg
mov
jmp
add
mov
leave
xor
or
sbb
cmp
adc
xchg
int
push
dec
pop
dec
pop
scas
mov
ds
into
cmpsb
in
push
out
iret
adc
lcall
popa
ljmp
mov
cltd
add
cmp
xor
add
outsw
sbb
loope
outsl
orl
adc
and
fists
and
inc
push
les
xorb
and
xchg
or
and
xor
xor
test
cmp
ss
add
sbb
and
fcomps
ss
mov
mov
push
sub
xor
hlt
scas
dec
test
cmp
pop
insb
subl
out
je
cmpl
xchg
lea
pop
test
nop
lods
imul
push
fidivrl
pusha
repnz
xor
mov
pop
popf
push
clc
into
repz
gs
addb
jle
clc
fmuls
xor
jb
nop
or
jle
stos
das
or
lds
icebp
sub
add
adc
jl
mov
imul
das
pop
repnz
shr
pop
jmp
jne
sbb
jecxz
cmp
jo
add
f2xm1
inc
jae
dec
and
imull
out
dec
jg
add
aas
jo
ss
aas
fcmovu
in
jge
jecxz
ss
xchg
je
pop
dec
pushf
stc
jnp
cltd
xor
xor
sub
lds
push
nop
icebp
jae
inc
mov
movsl
mov
cltd
rcrb
insl
inc
sub
jle
dec
push
sub
sub
rorb
xor
dec
mov
mov
mov
shl
sahf
fwait
cmp
repnz
pop
insb
cmp
xchg
dec
jbe
push
cmpsb
pop
or
xor
jle
or
push
stos
jno
lea
cmpsl
mov
aaa
dec
orl
js
sti
or
jle
xchg
data16
int3
outsl
in
je
sub
sub
rcr
push
pop
andl
mov
jb
out
fwait
adc
aad
stos
je
xor
jp
jmp
jns
xchg
out
popa
pop
cli
movsl
sub
pop
mov
test
mov
stos
loop
inc
mov
es
jns
data16
out
out
jle
ret
mov
mov
std
push
cmc
lret
and
in
ss
out
xor
faddp
sbb
aas
mov
jp
sub
mov
imul
mov
imul
roll
mov
sar
test
inc
lret
mov
inc
mov
cli
mov
inc
repz
cmp
lds
in
adc
repz
arpl
sub
lea
sub
push
jle
mov
popf
jl
fdivrl
rclb
pop
lcall
mov
sahf
bound
lret
shlb
inc
jae
push
scas
pop
insl
push
cmp
push
lock
mov
or
xchg
xlat
subb
add
mov
xchg
and
fcmovne
sub
xor
fimuls
rcl
sti
jae
in
jbe
sbb
xor
push
fbld
xchg
xor
cld
pop
xchg
push
xchg
adc
in
testl
sbbl
pop
jns
mov
idiv
aad
stc
out
ja
insl
fs
fisubs
jl
into
sti
dec
push
repnz
rcrl
sub
pushf
aas
mov
xlat
lods
mov
or
iret
xor
jbe
movsb
sarb
cmp
cmp
lds
pop
jno
leave
sbb
aaa
dec
mov
jb
sbb
in
loopne
add
out
arpl
mov
fisubrl
sub
arpl
mov
xchg
push
ret
pushf
and
and
shll
lods
adcb
lds
mov
into
int3
or
push
xchg
popa
lcall
xchg
add
pop
js
out
mov
pop
bound
aam
cli
out
lods
ds
jp
movsl
lods
neg
test
jb
popa
cmpb
sti
cltd
adc
scas
add
xchg
hlt
push
add
push
push
mov
ficompl
cmp
jg
dec
lcall
enter
fists
ss
das
push
add
sbb
mov
xchg
adc
imul
xor
fldl
jle
jo
pop
daa
imul
cmpb
icebp
mov
lea
repnz
cmc
xchg
pop
pop
lods
push
in
xor
jne
scas
icebp
mov
or
push
cmp
popf
sub
adc
cmp
dec
loopne
lds
xchg
xor
push
fidivrl
inc
pushf
lods
sub
add
scas
inc
lahf
pusha
jno
pop
and
scas
jmp
lea
or
test
push
xchg
pop
fnstenv
in
jl
xor
and
call
sub
sarl
scas
add
mov
mov
gs
in
inc
mov
sbbb
clc
cmpsl
arpl
lahf
pop
in
add
out
stos
test
insb
pop
fadds
inc
mov
jge
or
xchg
mov
xor
push
add
lods
xchg
scas
cmp
jmp
movb
push
sub
jb
push
in
punpckhdq
insb
push
rcrl
jb
fmull
rolb
pop
mov
lret
push
js
xchg
andb
rol
dec
dec
dec
lds
paddusb
inc
dec
pop
in
clc
xlat
mov
mov
cmp
mov
push
mov
roll
fcmovbe
pop
jecxz
jle
xlat
stos
lahf
loopne
mov
dec
scas
mov
mov
sbb
movl
cmp
popa
pop
mov
gs
enter
clc
sbb
dec
ficomps
movsl
or
out
inc
push
push
xchg
pop
push
or
fisttps
test
std
mov
push
inc
cwtl
or
xor
shrl
mov
bound
xchg
adc
jno
jl
and
jno
shll
pop
test
cmp
xchg
ret
js
pop
scas
jle
jno
mov
mov
and
mov
mov
subl
das
xchg
inc
out
fldcw
dec
std
and
and
sub
ja
insl
and
rorb
xor
adc
dec
inc
loopne
add
shrb
mov
xor
adc
fsubl
loop
dec
sbb
dec
shl
pop
insb
or
pop
xchg
inc
dec
pop
cwtl
pop
ss
dec
loopne
mov
cld
mov
mov
pop
and
xor
repz
xor
inc
enter
call
push
in
rcrl
jp
hlt
dec
ja
cmpsl
ret
enter
sti
pop
xchg
test
mulb
xchg
jg
mov
push
jno
repz
fs
or
xchg
push
mov
in
outsb
enter
cmp
add
ds
push
xchg
idivl
int
cmp
dec
xor
sbb
push
imul
out
cmpsl
lock
inc
xor
jg
pop
mov
rcr
repnz
mov
add
imul
jle
xor
dec
push
rcrb
shr
sub
fwait
inc
pushl
js
call
mov
push
loop
call
xor
insb
xlat
xor
sub
cli
push
xchg
jecxz
jp
mov
mov
es
test
pop
stos
pop
pop
cli
inc
xor
addr16
repz
mov
pusha
xchg
in
es
xchg
inc
xchg
movsb
outsb
lcall
cmp
jo
lea
dec
mov
inc
sub
xchg
mov
lret
pop
popa
fcomps
sahf
jecxz
adc
and
repnz
sbb
lea
mov
sbb
ja
mov
repz
mov
jp
jge
dec
repnz
mov
aad
mov
stc
fmul
mov
adc
and
push
xor
mov
test
sbbl
and
leave
push
mov
xor
xchg
fisttpll
sti
pop
push
xchg
imul
sub
and
mov
dec
cli
inc
nop
ljmp
movl
push
adc
cmpl
lods
inc
xchg
push
in
push
loope
popa
test
les
in
inc
adc
xchg
insl
popa
add
xchg
shlb
add
xchg
and
les
pop
jl
fcomp
stos
ds
dec
inc
es
pop
and
inc
les
dec
arpl
or
cli
cmp
into
mov
rcl
jle
pop
cltd
dec
insl
pop
js
jg
inc
or
dec
jae
adc
adc
pop
sbb
nop
cs
mull
jle
sbb
sbb
imul
cld
pop
mov
inc
fcmovnu
in
xorl
loopne
insl
test
mov
sub
cmpsl
dec
push
daa
call
or
xchg
out
in
lcall
push
push
add
dec
xor
mov
jno
xlat
shrb
adcb
add
stos
pop
fnstenvs
hlt
cs
popf
je
or
push
pop
xchg
stc
sub
testb
sub
xchg
fwait
aaa
xor
push
xchg
stc
in
je
shlb
leave
xchg
inc
xor
scas
and
jb
sub
or
dec
leave
lods
jne
mov
dec
inc
out
orl
xchg
jle
inc
call
mulb
inc
add
addr16
stos
lods
cmp
inc
fmull
sbb
ljmp
sub
loope
xchg
dec
subb
shlb
daa
sub
adc
aaa
pop
mov
xor
xchg
mov
adcl
pusha
pop
mov
pop
xchg
cmp
mov
mov
and
push
sub
lahf
clc
imul
add
in
test
dec
mov
xchg
test
fsubr
popf
dec
mov
push
xchg
loope
shlb
sub
xlat
pusha
sbb
rcr
and
cmp
pop
mov
xor
lret
jp
imul
int
pop
fimull
add
or
mov
in
stos
pop
fadds
popa
lret
jl
daa
cmp
insb
shlb
mov
xor
fmull
je
push
cli
loop
aas
push
ljmp
aas
sub
xchg
sarb
mov
pop
push
dec
xchg
push
ret
lds
gs
aaa
loop
fcomps
ja
adc
das
jge
inc
int
fcmovb
adc
mov
int
mov
pop
leave
push
mov
cmp
inc
stos
ret
dec
aas
pop
aas
cli
xlat
cli
fwait
js
popl
pushf
std
pop
adc
aam
xchg
mov
pop
sbb
test
dec
push
xor
lret
mov
add
xchg
xchg
in
filds
int
adc
add
sbb
cltd
fmull
add
mov
pop
mov
pop
cmp
and
sub
pop
pusha
jnp
sub
fs
vandnpd
push
mov
adcb
leave
cmp
adc
mov
ljmp
mov
jg
mov
movl
repnz
xchg
cld
imul
jp
dec
sarb
std
sub
mov
out
les
fildll
ret
mov
fsubrl
mov
test
fbstp
jo
xor
jbe
dec
adc
mov
add
notl
adc
daa
mov
xchg
sbb
test
and
popa
xor
roll
test
lcall
xor
movsb
sub
cmp
ret
pop
ficomps
cmpsb
add
mull
push
bswap
xchg
setl
push
imul
sarb
pushf
std
cmc
mov
pop
out
test
push
cmp
add
ja
sbb
or
inc
lods
xchg
aam
sti
insl
leave
add
mov
jl
dec
and
sub
in
leave
out
and
sbb
pushf
xor
lods
shll
pop
out
push
sbb
out
mov
add
daa
sbb
les
data16
arpl
loope
xchg
cltd
into
or
jle
push
sub
jns
add
fwait
push
and
or
aaa
loop
pop
insl
jae
sub
rorl
cmpsb
sbb
mov
enter
ret
cmc
adc
test
sub
into
mov
out
ret
inc
shlb
dec
mov
mov
aad
inc
dec
pop
mov
mulb
mov
xchg
enter
mov
test
push
test
in
sbb
adcb
ds
inc
xchg
cmp
push
jl
cmp
push
pop
int
mov
push
testb
push
adc
add
add
pop
lret
mov
push
mov
test
or
outsl
pop
push
mov
push
loope
lcall
inc
push
imul
flds
and
xchg
xor
dec
push
push
or
and
push
gs
mov
jns
test
ds
sbb
inc
jae
movsb
dec
push
jle
or
jp
loop
sarl
adc
add
mov
ret
subl
fistl
ja
cld
fistps
push
mov
shlb
idivl
or
push
iret
test
data16
sub
lds
hlt
mov
xchg
dec
fs
divl
out
pop
jno
out
xchg
sbb
rorb
push
movl
mov
dec
pop
xor
repnz
xchg
adc
fidivrs
pop
jnp
shrb
bound
cmp
or
dec
ja
fdivs
mov
lods
in
sub
mov
sbb
xchg
jbe
fldcw
xchg
inc
aaa
arpl
test
lea
jo
push
pop
adc
jbe
cmc
popa
mov
repz
sbb
and
mov
icebp
imul
dec
out
shrb
call
xchg
lcall
mov
add
clc
gs
jns
in
jb
sbb
xchg
mov
rcrb
int
cmp
xchg
int
loope
mov
fld
not
cmp
test
mov
out
adc
or
sub
ret
pop
fwait
push
or
or
push
push
mov
push
int
and
das
pop
mov
subl
add
xor
clc
pop
push
inc
bound
out
mov
and
lds
std
rorl
pushf
mov
in
arpl
repz
mov
adc
jmp
xor
jbe
loop
inc
push
mov
test
pop
push
pop
pop
sbb
fisubrs
test
repnz
jl
das
push
jb
arpl
lods
dec
xchg
loopne
imul
cltd
xchg
mov
cmp
sub
adc
mov
fs
xor
fmuls
insl
or
adcb
push
aas
inc
mov
enter
popl
pop
movsl
imul
pop
cli
nop
and
dec
cmpsb
adc
add
mov
sti
lock
add
fstpt
pushf
pop
push
pop
std
lcall
ret
inc
addr16
das
ja
push
cmpsb
add
repz
fstps
movsb
lret
xchg
cmpsb
and
daa
inc
inc
loop
xchg
mov
lods
jnp
adc
xchg
iret
inc
lock
jb
inc
dec
cmc
fwait
movsl
mov
xor
aas
dec
mov
loope
scas
lcall
dec
and
inc
mov
and
sbb
push
pop
inc
fwait
add
aad
push
test
pop
cmpsb
dec
sbb
mov
sbb
lea
nop
pop
das
pop
sti
shlb
mov
push
sub
push
cltd
dec
and
mov
pop
in
ret
add
jns
xchg
push
in
mov
hlt
cmp
add
fwait
jae
in
cld
inc
or
nop
jb
shll
stc
cmp
mov
std
sti
aad
inc
add
ficomps
add
sub
loopne
lods
sahf
mov
xor
ljmp
out
jl
dec
jge
inc
sbb
aad
cmp
jno
ljmp
aas
push
movsb
sub
fwait
lods
cmp
dec
lods
jbe
adc
fisubrl
scas
mov
mov
sub
bound
mov
in
dec
jae
xor
imul
movb
aaa
mov
movsl
std
jecxz
nop
leave
lods
push
popf
in
and
nop
push
push
cli
push
sahf
xor
mov
mov
add
xlat
data16
adc
sbb
xchg
movsl
lods
leave
test
xor
push
xor
popf
cmpb
stos
sbb
rorl
push
xchg
mov
in
push
jne
sub
pop
stos
into
xor
leave
rolb
sbb
shlb
lret
lods
xor
loop
outsb
xchg
fdivl
add
inc
sbb
mov
sub
dec
outsb
cmp
rorl
mov
rcll
inc
add
xor
popf
sub
fsubs
jo
mov
mov
movb
and
adc
lock
mov
jmp
orl
xchg
lods
mov
jo
ret
ljmp
sub
imul
mov
lcall
dec
cmp
inc
lret
inc
mov
add
std
bound
push
hlt
mov
sbb
idiv
mov
sbb
mov
arpl
dec
pop
sbb
enter
add
jp
repnz
xchg
mov
sub
clc
inc
jne
popa
out
mov
mov
lods
arpl
jns
insb
loop
and
sbb
into
mov
jb
or
dec
in
xor
jo
push
loopne
xor
adc
or
les
out
iret
mov
addr16
cmc
sbb
adc
out
push
xor
movsl
out
cmp
lcall
test
pusha
sar
addl
shll
mov
sahf
sub
in
loopne
popa
sahf
ss
pop
fsts
xor
aad
ret
push
inc
jae
add
shll
lahf
add
xchg
into
ja
rcrl
orb
mov
pop
into
jl
bound
out
add
mov
cmc
mov
outsb
dec
add
sbb
jg
jmp
or
lret
ficompl
or
push
cwtl
in
data16
cmc
shr
adc
aad
setge
cwtl
shlb
or
mov
jl
rorl
shll
ret
xor
repnz
cltd
inc
xor
test
inc
les
jb
loopne
ds
lods
pop
pop
cs
fmuls
xor
or
cltd
inc
inc
je
jle
lods
in
xor
jl
icebp
dec
mov
mov
int3
adc
adc
jp
out
les
xlat
pop
pushf
mov
ja
adc
sub
or
ss
pop
pusha
cs
push
addr16
xor
inc
pop
and
add
rol
and
cwtl
inc
xchg
xor
imulb
xor
scas
cmc
rorl
xor
inc
les
mov
mov
push
leave
daa
adc
xchg
xchg
popf
jmp
leave
insb
shlb
cmp
push
xlat
jmp
inc
loope
int
sub
pusha
stos
xchg
in
mov
inc
repz
out
test
roll
and
mov
and
shlb
cli
inc
loope
test
xor
or
sti
adc
or
and
movsl
inc
push
sahf
push
aam
mov
mov
das
enter
addr16
lock
lods
sahf
sar
hlt
mov
dec
pop
mov
movsl
ret
inc
jge
lock
cltd
mov
or
push
cmp
xchg
sti
mov
push
xchg
dec
popa
sub
add
cmc
jae
enter
adc
movsl
pop
in
dec
mov
xchg
pop
cmp
imul
filds
cmp
and
mov
pop
adc
popf
popf
addl
les
sbb
xchg
pop
popf
xorb
fwait
sbb
jmp
and
aaa
cmpsb
or
stos
sbb
adc
repz
jae
clc
sub
sar
es
push
xchg
test
mulb
adc
xor
add
fwait
dec
dec
cmp
or
cmpsl
xor
inc
fst
adc
les
and
icebp
inc
adc
notb
cmpsl
cmpb
std
mov
and
and
leave
loope
xchg
push
int3
xor
mov
cld
loopne
or
sub
jl
test
cli
in
mov
pop
xchg
vcvttsd2si
stc
adc
orl
cmp
je
xor
dec
out
push
aam
in
jge
aad
xchg
loopne
push
push
mov
dec
jp
cmp
stos
in
adc
sbb
adc
push
push
jne
or
dec
loope
cmp
movsb
lcall
cld
into
push
cltd
jnp
jbe
out
cmp
add
xchg
mov
sub
mov
loope
jns
dec
insb
fdiv
ficompl
cwtl
jns
inc
cltd
movsb
pusha
inc
jmp
rcrb
xor
cmp
repz
gs
push
les
cmp
xlat
bound
or
adc
in
test
adc
sar
loope
stos
jge
sbb
mov
pushf
ret
and
ret
lss
outsb
cmc
movsl
cmp
and
test
or
mov
mov
pop
mov
xor
and
out
loopne
in
sahf
rcll
add
xor
inc
pop
cmp
ljmp
and
arpl
xor
sub
dec
addr16
cmp
int
mov
mov
xlat
mov
xchg
neg
es
inc
ret
ret
call
jae
mov
clc
aad
sarl
add
mov
jnp
dec
testl
inc
add
cs
dec
xor
dec
lods
pop
int3
rorb
pop
sub
outsb
in
shrb
mov
dec
rorl
pop
add
jecxz
xchg
add
xor
ljmp
les
notl
cli
in
imul
daa
lods
dec
std
add
lret
lods
mov
or
test
dec
and
mov
pop
cmpb
nop
adc
fs
bound
into
stc
pop
std
inc
icebp
iret
lods
dec
pushl
out
xor
sub
push
scas
pop
inc
je
repz
out
popa
out
fidivs
int3
iret
test
sub
jb
mov
pop
push
jns
leave
cmpsb
jp
push
ret
fsts
mov
push
xchg
jo
xor
mov
jbe
pop
popf
je
mov
push
movsb
shll
push
mov
or
repnz
cmp
pop
cmp
insl
inc
jle
stos
pop
adc
in
cwtl
inc
sbb
push
out
lods
mov
xor
addr16
jbe
adc
stos
pop
imulb
push
inc
int3
inc
sub
cmc
sahf
cltd
shlb
ret
lcall
xchg
ss
sub
xchg
fcmove
jns
stos
hlt
jo
mov
sub
addr16
jbe
scas
lret
sbb
mov
sub
dec
loopne
lahf
inc
call
rol
loopne
nop
lahf
mov
aad
imul
jae
int3
aam
test
add
jecxz
push
cmc
mov
dec
cmp
jmp
icebp
ffreep
stos
scas
arpl
or
rclb
adc
repnz
ljmp
mov
jge
mulb
fs
dec
aas
ret
int
dec
js
jo
call
repnz
dec
bound
idivb
mov
out
loopne
test
arpl
push
sarl
xor
mov
scas
jne
dec
jnp
xchg
nop
aam
adc
test
fiaddl
out
jmp
pop
mul
push
aam
mov
mov
scas
and
in
cwtl
js
mov
push
test
mov
call
sbb
out
movhps
adc
scas
push
lcall
sub
test
int3
or
cmc
adc
ljmp
push
mov
jo
repnz
adc
jge
pop
add
ja
add
dec
pop
mov
jae
popf
in
dec
ljmp
mov
lahf
mov
cwtl
js
xlat
clc
outsb
test
cmp
les
pop
int3
nop
mov
out
loope
mov
xlat
gs
lds
mov
repz
ja
inc
das
jl
fisttpl
js
jb
xchg
xchg
aas
into
adc
icebp
mov
jae
push
xlat
jp
ret
sub
jne
lret
xchg
add
jle
test
nop
jmp
negb
test
lock
and
xchg
xchg
in
ss
aas
cmp
mov
jae
daa
fdivl
mov
aaa
int3
push
xor
lcall
test
add
push
xchg
mov
jnp
xlat
xchg
fsts
push
mov
iret
cli
clc
dec
bound
les
out
ljmp
or
data16
mov
pop
into
fwait
mov
cmp
mov
scas
adc
popf
mov
int
sub
int
xchg
hlt
fs
pop
or
movsb
int3
outsb
inc
mov
inc
xchg
sub
sahf
and
mov
push
xor
inc
xchg
push
frstor
push
shl
enter
fists
xchg
inc
loopne
jge
pop
shrb
and
sbb
push
ret
mov
mov
gs
in
mov
lea
cmp
ret
sub
mov
mov
jmp
aam
out
ljmp
inc
push
cld
ljmp
fisttps
push
test
and
push
mov
mov
inc
pushf
out
xor
cmovs
sub
fwait
and
movsl
clc
mov
or
lods
std
stos
sub
bound
jnp
jnp
repz
push
add
cmpsl
sbb
push
lahf
sub
mov
clc
int
or
sti
shll
mov
pop
pop
jmp
pop
es
sarb
loopne
pop
hlt
inc
xor
adc
aaa
mov
adc
arpl
dec
mov
push
outsb
jecxz
jbe
or
lcall
decb
sub
add
cmc
outsl
loop
scas
push
jmp
and
pop
pop
xor
enter
pop
mov
mov
dec
out
cmp
jl
cmpsl
mov
mov
repnz
pop
fsubr
into
push
scas
mov
xchg
or
jl
outsb
or
push
pop
add
xchg
jns
mov
and
xor
xor
adc
push
cmp
jnp
int
mov
ds
mov
sti
jp
outsl
cmpsl
jno
mov
es
lret
pop
sub
cs
ds
test
lods
fisttpl
call
lret
or
xchg
xchg
mov
insl
xchg
cwtl
int3
dec
mov
mov
enter
out
sbb
xor
movsb
pop
ss
stc
loop
imulb
dec
jl
hlt
xchg
mov
cmc
xchg
les
mov
adc
pop
test
int3
and
and
lods
stos
mov
cmp
add
jno
mov
sbb
test
mov
adc
nop
xchg
jmp
cmp
shrb
clc
mov
xchg
arpl
push
clc
xlat
jecxz
jb
and
cmp
out
sub
push
ret
xor
enter
dec
inc
mov
cmp
imul
sti
mov
lret
push
mov
es
lret
push
jb
ret
iret
lods
ffreep
mov
out
mov
pop
mov
daa
cmpsl
mov
inc
jge
pop
jmp
mov
jmp
arpl
adc
inc
insb
or
adc
dec
insl
popa
ret
add
rclb
mov
jg
decb
cmp
insb
mov
jmp
popa
mov
movsl
or
popf
or
pop
in
adc
dec
pop
ss
mov
or
xlat
xor
or
or
in
call
mov
mov
pop
fistl
std
loopne
push
add
notb
test
jns
es
out
sarl
or
popf
andl
sub
test
stos
push
inc
shrl
add
mov
mov
dec
test
or
ret
gs
arpl
push
fstl
sub
nop
lea
and
inc
mov
mov
aas
mov
sub
cmp
bound
xchg
pusha
je
dec
pusha
cmpsb
imul
rcrb
rcl
fcomi
jbe
inc
xlat
pop
jne
out
aam
fwait
sub
mov
cwtl
sar
in
push
push
outsl
cltd
inc
scas
mov
and
aad
stos
xchg
cmp
adc
lods
outsb
sub
push
stos
xor
sbb
mov
pop
out
jge
call
shl
inc
int
mov
mov
pop
lods
inc
test
adc
pop
mov
jl
test
add
out
mov
pop
sub
cmpsb
das
push
inc
mov
jns
mov
sbb
ss
pop
jae
mov
mov
sbb
xchg
lods
pop
aas
aad
movsb
fdivrl
add
pop
mov
xchg
add
cmpsb
ja
cmc
mov
nop
popa
mov
dec
repz
inc
aas
dec
add
call
fdivp
push
pop
pop
mov
es
adcl
into
sbb
mov
int3
and
xor
mov
gs
lcall
jo
addr16
popf
pop
xchg
inc
push
cmc
dec
dec
into
adc
jns
roll
jne
dec
or
jnp
sbb
mov
or
pop
out
jl
sub
jmp
les
ja
mov
jle
inc
call
fadds
mov
or
test
pop
adc
rcll
repz
mov
loope
push
jmp
pop
inc
negb
fstpl
adc
cmp
sbb
pop
cld
or
mov
pop
test
xchg
iret
push
or
sub
jne
or
push
shrb
cmp
xabort
and
mov
inc
jae
push
fidivl
or
cli
mov
push
fstl
jmp
or
popa
ficoml
jnp
lods
push
fdivs
pop
les
mov
xchg
jo
xor
xor
sub
mov
imul
rcrl
mov
cmp
cmp
jmp
adcl
sahf
inc
sub
sbb
mov
cld
add
mov
stc
cmp
jge
mov
pop
test
imul
mov
mov
sub
sub
cmpsl
ja
or
outsb
movsb
mov
add
cltd
inc
mov
sbb
lahf
push
lret
mov
mov
push
fwait
aam
into
cmp
fiadds
cli
out
imul
stos
inc
daa
add
pop
dec
icebp
nop
jecxz
mov
in
loopne
insl
adc
sub
adc
sbb
jbe
das
clc
xor
sub
adc
fstpl
xor
loope
cmc
jg
mov
xchg
jmp
lock
sbb
loopne
int
xchg
jp
dec
cmp
enter
aas
fwait
jnp
dec
mov
popf
rclb
jg
adc
pop
cmc
add
xor
pop
int3
dec
dec
or
mov
loope
cltd
aad
loope
test
mov
andl
sbb
popa
mov
int3
leave
scas
sbb
aam
mov
xor
mov
mov
loopew
push
jmp
xchg
pop
dec
pop
jno
out
pop
dec
pop
push
mov
mov
pcmpgtb
inc
pop
dec
push
and
shl
dec
jne
inc
sbb
fwait
sub
inc
mov
dec
mov
push
sbb
in
mov
mov
xchg
stos
scas
pop
adc
sub
push
sbb
repnz
fdivl
sbb
push
daa
sub
cltd
dec
es
popf
lret
cwtl
jb
mov
jge
fsub
lea
andl
or
in
add
fmull
xchg
jecxz
mov
mov
inc
test
dec
nop
push
cwtl
jg
rorl
shll
push
adc
push
pop
mov
adc
out
sbb
out
cmp
shlb
jmp
cmp
arpl
xchg
mov
rcll
enter
jle
imul
cmp
inc
and
add
inc
cwtl
mov
xchg
in
xchg
divb
add
push
out
lods
sbb
leave
push
sub
pop
insl
jmp
cltd
scas
int
xor
cltd
or
mov
loope
inc
out
dec
sbb
repnz
mov
pop
xor
mull
int
adc
mov
fisubl
ret
pop
jo
orb
pop
inc
iret
imul
test
insl
repnz
cmp
pushf
mov
adc
and
jge
cs
sti
pusha
scas
mov
add
loopne
inc
aad
fdivrs
iret
loopnew
dec
jne
mov
push
cmp
and
pop
inc
icebp
sbb
sbb
ljmp
inc
mov
test
fcoml
movsl
stc
dec
fnstsw
lahf
outsb
mov
lret
sub
adc
cmpsl
mov
mov
roll
dec
mov
hlt
mov
ss
sbb
outsl
je
fcmovu
push
mov
fs
sahf
or
inc
cmp
push
or
mov
or
xor
xchg
imul
insb
out
popf
xchg
das
jbe
sbb
xor
jb
iret
inc
mov
das
xchg
jle
out
js
ja
sub
jno
test
rorb
and
loope
js
das
bound
sbb
and
pop
int3
push
push
out
xchg
sti
push
cli
outsb
int3
nop
adc
jb
mov
stos
adc
add
mov
mov
cmp
and
push
xor
icebp
loopne
es
lods
insl
std
arpl
dec
xchg
out
jb
out
pop
push
and
hlt
aad
xchg
mov
iret
lods
cmp
dec
pop
jns
jl
mov
sar
insl
push
aaa
in
lock
cli
pop
std
adc
sbb
cmpsl
insb
push
addr16
nop
xor
std
add
push
pop
aam
xlat
or
add
mov
call
lea
adc
mov
push
aaa
xchg
movsb
inc
fsubrs
inc
or
in
inc
mov
aam
dec
jmp
movsl
xchg
xchg
je
test
inc
xor
jns
push
mov
mov
testl
push
push
fadd
jb
rcll
xor
sbb
loop
imul
dec
in
mov
inc
sti
inc
mov
sub
mov
insb
inc
mov
ret
mov
push
ret
sbb
mov
ret
mov
push
ret
incl
push
mov
dec
int3
incb
mov
or
jg
call
mov
mov
addb
int
aam
add
lret
arpl
xor
arpl
call
dec
test
cmp
ljmp
mov
in
pop
push
movsl
cwtl
cli
jns
pusha
xchg
cmpsb
dec
cld
push
lret
call
add
inc
pusha
sahf
fs
jo
div
lods
movsb
cltd
push
adc
rcrb
mov
and
cli
in
pop
repz
xchg
xor
fildll
test
insl
lahf
stc
jecxz
sub
stos
add
pushf
adc
sub
popf
cmpsl
adc
cmp
jecxz
or
das
inc
lret
xchg
push
es
fs
inc
enter
dec
leave
daa
xchg
inc
in
lret
cmp
cmp
cmp
cmpsl
fstpl
sub
inc
lods
in
sub
inc
gs
add
xchg
or
je
les
inc
mov
dec
xchg
hlt
push
decl
pop
and
fcmovu
push
lcall
jg
mov
mov
mov
loopne
cmp
in
pop
mov
fdivs
xchg
decb
jns
dec
aam
pop
push
scas
add
sub
es
lcall
jmp
adc
adc
pop
mov
ljmp
jp
ds
es
pop
jae
lret
xchg
mov
sarl
inc
pop
pushf
sub
pusha
mov
mov
jbe
cmp
ret
ljmp
pop
lock
es
pop
push
xorb
lcall
cmp
ds
subb
sub
int
push
inc
sub
div
pop
in
sbb
xor
clc
jbe
sbb
aad
out
enter
cmp
mov
rcrb
push
xchg
ja
mov
dec
incb
push
adc
cmp
enter
push
lea
push
test
pop
push
into
xchg
mov
jecxz
pusha
inc
and
ss
and
cmp
adc
mov
dec
in
mov
mov
icebp
jb
jne
test
jno
xor
adc
insl
jo
push
loop
push
dec
mov
or
xchg
push
fidivs
xchg
and
je
add
cld
mov
aad
loopne
les
mov
jmp
sub
aam
scas
cmp
pop
cmc
xlat
movsl
sub
inc
sbb
cmp
loop
pop
movsl
jp
leave
insl
scas
pusha
ret
movsb
add
pop
mov
sub
movsb
dec
or
or
orb
or
orb
lods
inc
sbb
add
add
pop
sbb
inc
pop
push
filds
sub
and
pop
inc
xchg
out
and
add
int
adc
jp
iret
enter
dec
xor
xchg
inc
mov
and
add
stos
cmp
mov
jl
adc
lcall
adc
cmp
sub
ds
cltd
sbbb
stos
ds
cmpsl
jo
addl
pop
lea
pop
inc
pop
jmp
mov
call
subl
nop
inc
loopne
add
repnz
test
fsubl
mov
xor
arpl
subl
scas
jb
jge
push
mov
xchg
add
lds
leave
jbe
push
mov
add
dec
dec
ret
xor
xor
pop
jo
jo
daa
mov
dec
mov
in
stc
or
mov
leave
mov
lods
jl
xlat
lea
sub
mov
enter
mov
cli
xchg
add
pop
or
pushf
loopne
xchg
test
add
jecxz
push
call
test
je
cmpsb
mov
cli
repz
sbb
lahf
and
out
add
pop
dec
ljmp
push
inc
push
or
in
mov
pushl
pop
movsb
mov
inc
rcll
pop
cltd
cld
pop
and
dec
aam
cmp
cmp
out
push
loop
mov
adc
std
push
scas
es
xlat
lret
mov
dec
test
cmpb
and
cmpsl
xor
jmp
shrb
xlat
xor
mov
mov
js
insl
mov
push
sbb
jmp
or
gs
push
rcll
mov
outsl
in
movsb
cs
leave
adc
push
sub
xchg
mov
cmp
ret
data16
and
mov
mov
sub
and
lret
lods
mov
ja
leave
lret
xor
lcall
ljmp
pop
insl
and
pop
push
sbb
icebp
fnsave
push
stos
int
sti
popf
xchg
iret
jnp
and
dec
dec
outsb
imull
sahf
ret
fisttps
or
shl
lcall
arpl
or
ret
lods
pop
rcr
sub
jl
or
ds
mov
imull
pop
sbb
xlat
jmp
cmpl
sub
movsl
pop
dec
push
push
sbb
add
dec
cmp
pop
rcrb
call
add
sub
das
outsb
push
test
fsub
or
sub
iret
lods
inc
and
xchg
fdivrs
rcr
cmp
inc
push
sahf
mov
ljmp
mov
and
imul
cmc
jp
roll
daa
clc
pop
mov
scas
push
rorl
cmpsb
aad
xor
or
xchg
addb
aad
outsl
and
mov
sbb
int
lods
paddd
ret
outsl
fbstp
mov
add
xchg
dec
rol
je
imul
xchg
loopne
push
sub
pop
xchg
push
sbb
mov
xorl
cmp
xchg
dec
fwait
mov
arpl
mov
es
lcall
cli
dec
jge
add
cltd
sbb
test
push
test
nop
repz
mov
cmp
je
test
jae
mov
lea
ss
dec
mov
imul
aam
ret
insl
or
gs
push
cld
in
xor
and
xor
pop
push
cmp
xchg
adc
dec
jo
into
inc
dec
cmp
inc
mov
cmpsl
adc
movsb
sbb
adc
xchg
in
add
sbb
sbb
cmc
push
stos
jge
xor
or
jbe
lcall
and
gs
outsb
adc
xor
idivl
push
fwait
jmp
xor
cltd
into
cmp
fisubrl
loope
je
iret
pop
cmp
xchg
mov
mov
or
aad
pop
sub
mov
sub
or
push
inc
stos
out
mov
daa
push
mov
dec
jo
call
out
jle
mov
in
xchg
outsl
out
fsubrl
jl
aaa
scas
shll
xchg
aas
adcl
inc
insl
pop
popa
pop
xor
ss
adc
jnp
ret
mov
les
dec
aam
xchg
out
les
or
jns
or
pop
mov
jb
push
lcall
mov
adc
inc
mov
ljmp
adc
dec
xlat
xchg
and
jge
sbbl
cmpsb
adc
sbb
add
push
mov
mov
pop
test
adc
xlat
mov
push
inc
xor
popf
cs
fisttpll
lods
push
add
into
jae
jmp
dec
push
sbb
push
aad
pop
cmp
loope
cli
gs
xchg
fadds
imul
mov
test
lock
ss
in
or
pop
mov
cld
mov
adc
inc
int
jb
bound
or
push
rorb
push
sbb
pop
sub
sbb
int
add
pop
mov
push
testl
mov
out
pop
in
pop
jae
cmp
out
push
fwait
and
ds
jge
orb
mov
push
push
mov
xor
jp
lret
cmpsb
lahf
and
push
popf
divb
idiv
adc
mov
aaa
es
mov
xor
in
push
daa
push
jecxz
cmp
sub
fcompl
mov
adc
sub
pop
int3
addb
data16
stc
push
dec
jnp
into
les
gs
fcomip
clc
cs
sub
dec
cmpsl
mov
fstpt
add
jecxz
mov
cmp
sub
mov
push
insb
fcmovu
int3
repnz
pop
xchg
lea
sti
insb
dec
jp
push
xor
pop
adc
cmp
mov
aad
negl
jge
out
lahf
rcl
lock
stc
inc
mov
xor
or
ret
fidivs
leave
inc
negl
sarb
enter
xchg
xchg
or
gs
pop
push
push
sbb
lahf
lods
roll
pop
outsl
mov
xor
jae
sub
aad
pop
pop
jecxz
stc
xor
nop
mov
mov
pop
repnz
mov
dec
pop
popf
jl
int
test
push
sbb
jbe
movsl
repnz
or
addr16
or
push
popa
xchg
ljmp
aas
leave
mov
and
jecxz
cmp
dec
inc
in
mov
inc
fldt
push
popa
sahf
sbb
adc
out
pop
sub
xchg
jl
or
rcl
repnz
es
test
scas
movsb
or
and
sar
jnp
cmp
or
fs
loope
push
nop
mov
jge
adc
inc
call
cmc
and
pop
loope
jo
out
cmp
popa
jle
add
jae
inc
bound
push
stc
lods
pop
mov
push
in
jb
imul
loopne
aaa
lret
inc
in
test
or
ds
jne
push
filds
movsb
test
dec
jge
cmpsl
add
jle
push
push
add
aam
pop
sub
adc
and
loop
mov
sub
xor
cli
insl
sbb
psllw
out
divb
fmul
or
pop
dec
dec
adc
cmpsl
out
outsb
mov
cmp
xchg
repz
push
dec
cmc
in
in
sub
mov
or
sbb
sbb
test
lret
jle
jno
loopne
cltd
hlt
insb
add
mov
jle
outsb
pushf
push
and
mov
sahf
jl
arpl
ds
outsb
je
dec
enter
daa
popw
out
fistpll
aad
mul
iret
mov
push
add
cmp
xchg
shll
push
xchg
and
lret
cmp
jge,pt
call
or
mov
popf
pushf
pop
mov
repz
or
adc
stos
and
mov
xchg
mov
pop
and
insb
movsl
movsl
push
inc
sub
mov
test
lods
dec
xchg
in
movsb
loop
sahf
stos
loop
dec
movsl
lea
in
iret
dec
inc
gs
rcll
pop
push
push
jecxz
sub
xchg
xlat
adc
mov
or
sbb
cmpb
mov
push
repz
scas
cmp
mov
cli
cmp
movsb
scas
xor
mov
jecxz
mov
loope
mov
cmp
mov
pop
clc
lcall
pop
or
sub
es
xchg
pop
decb
jns
dec
subb
xchg
test
jl
jg
mov
jl
rorb
or
mov
dec
scas
sub
pop
out
cmpsb
lret
insl
popa
cld
jge
lods
sub
jecxz
and
lods
push
dec
pop
sub
xchg
xchg
sub
mov
je
orl
in
aas
in
daa
imul
aas
pop
test
pusha
iret
mov
in
fstps
inc
repz
hlt
or
xchg
dec
ljmp
mov
popa
mov
sbb
sarb
push
sbb
in
mov
nop
adc
stc
fisttpll
mov
jle
stos
or
sbb
mov
add
test
insb
inc
mov
adc
push
adc
pop
gs
rol
and
insl
pop
sub
sbb
lods
fdivr
jge
out
icebp
jae
sub
inc
mov
int
sbb
push
xchg
jo
sarb
rcl
aam
scas
push
insl
loopne
lret
adc
cmp
fdivl
call
add
mov
clc
push
adc
cmp
and
cwtl
mov
sub
xchg
mov
lds
push
sbb
fwait
movsb
dec
das
push
dec
es
sub
push
cmpsb
jbe
in
pop
dec
sub
lret
bswap
or
sub
std
mov
or
sub
jbe
xchg
push
pushf
into
leave
dec
mov
push
jno
or
sub
sbb
daa
sahf
dec
xlat
ficompl
xchg
aas
dec
scas
cmpsb
mov
movsb
pop
call
stc
inc
xor
cli
roll
dec
outsl
adc
loopne
pop
pop
mov
pop
fildl
pop
sahf
mov
stc
push
ffree
mov
and
out
mov
xor
xlat
push
scas
std
cwtl
pusha
aam
clc
and
ds
ljmp
repz
and
lds
idivb
imul
and
in
jae
inc
mov
xchg
sbb
out
outsb
hlt
addb
add
pusha
jns
jl
icebp
cmp
repz
jge
and
js
pop
pop
test
outsl
adc
ffree
std
bound
sbb
jb
mov
cmpsb
pusha
fs
and
mov
into
movsb
mov
add
and
loopne
mov
outsb
xor
jp
sub
pop
xchg
dec
cltd
push
dec
adc
mov
sti
jp
arpl
imul
pop
mov
jge
mov
in
xor
movsb
inc
cmp
mov
inc
dec
faddp
icebp
jae
and
enter
daa
xor
dec
test
push
rcrl
icebp
jl
cwtl
dec
scas
sub
enter
inc
mov
mov
je
insl
stc
mov
jne
int3
or
mov
les
mov
pop
push
fwait
jecxz
jo
cli
test
ljmp
xor
cmp
and
outsl
ret
push
pusha
testb
in
fldt
es
or
fdivrl
pop
dec
daa
inc
pop
cmpsb
jb
call
sarb
sub
sub
leave
dec
adc
mov
xchg
and
pusha
mov
das
xor
mov
repz
push
in
sbb
and
rorb
adc
hlt
data16
outsb
dec
mov
xchg
add
mov
scas
adc
mov
pop
sbb
in
add
adc
lock
mov
cmp
jae
out
out
adc
push
ret
cmp
xor
stos
sbb
mov
jno
orl
push
test
insb
xor
test
lods
sub
std
incb
daa
push
adc
pushf
sub
sbb
mov
mov
sub
cmp
push
pop
mov
cs
or
push
and
xchg
aam
add
xchg
repnz
out
cs
imul
fdivr
dec
xor
xchg
cmc
lods
dec
sbbb
sahf
jb
cli
xlat
jmp
inc
push
mov
inc
mov
dec
push
push
and
dec
lret
sti
pop
sbb
push
inc
xchg
repz
pop
mov
jno
rol
test
mov
push
mov
jno
inc
inc
sbb
iret
adc
push
lahf
lret
xor
pop
pop
aaa
dec
mov
stos
xor
sub
push
jle
cli
mov
fabs
mov
sub
lret
sub
imul
cmp
mov
adc
push
arpl
adc
lret
cwtl
jmp
inc
cmp
ljmp
xlat
fimull
xchg
mov
jae
push
cltd
add
add
push
mov
inc
movsl
pop
mov
mov
jnp
cmc
shrb
cltd
in
arpl
mov
fisubs
fsubrp
lea
rorl
push
push
lods
sub
ret
shl
ds
out
sarl
gs
mov
pop
mov
sub
sub
add
sbb
stos
jmp
mov
mov
rorl
shll
mov
fstps
inc
push
jb
fwait
xor
inc
mov
andb
jp
inc
imul
jbe
mov
test
enter
push
add
mov
adc
mov
cwtl
xchg
les
mov
adc
hlt
mov
push
mov
js
jns
pusha
pop
shll
cmpsl
jg
mov
mov
outsb
adc
mov
out
into
jmp
test
jbe
lods
cmp
and
or
mov
test
jns
mov
cld
inc
je
std
adcl
push
mov
mov
cmp
icebp
lret
test
xor
mov
xor
xor
test
das
test
aad
jg
shll
cmpsb
xor
test
scas
mov
imul
popf
cmpsl
adc
shll
imul
jecxz
and
mov
push
mov
mov
ljmp
mov
test
mov
adc
loope
test
xor
push
mov
into
or
imul
test
pop
jecxz
fldcw
jecxz
popa
stos
pop
mov
jle
std
insb
jae
sub
inc
scas
dec
out
mov
xor
fwait
dec
inc
inc
outsb
sbb
cs
and
enter
in
test
push
dec
mov
xchg
inc
ss
fnstcw
mov
jae
push
aas
xor
cmp
xchg
shlb
cmp
xchg
adc
daa
bound
xchg
mov
fwait
mov
jmp
mov
add
mov
in
pop
xor
repz
lret
dec
dec
out
ljmp
fsubs
add
inc
or
and
sbb
lret
and
or
shrl
mov
enter
jmp
inc
inc
mov
aad
jecxz
sub
xchg
mov
cmp
scas
rclb
add
ss
repnz
imul
aas
push
ljmp
add
into
filds
arpl
js
inc
repnz
mov
testl
imul
imul
push
mov
lods
mov
lret
repz
xlat
lods
loope
js
cltd
data16
clc
pop
cwtl
mov
push
jmp
dec
pop
dec
inc
sub
xorb
xchg
xchg
enter
inc
movsb
imul
xchg
icebp
test
outsl
fidivl
jnp
call
xor
inc
mov
xchg
mov
ljmp
repz
mov
fdivrl
jo
lods
sbb
adc
loope
mov
sub
dec
lcall
push
push
jbe
lret
in
cmp
jecxz
rorb
out
repz
adc
cmp
dec
adc
fnstsw
lock
jmp
sahf
jnp
test
xchg
mov
mov
pop
pusha
pop
negl
pop
cltd
dec
in
adc
pop
push
push
mov
push
mov
dec
xor
idivb
int3
sahf
test
icebp
loop
lret
repz
andl
scas
inc
dec
add
fcomps
mov
imul
jns
push
outsl
faddp
in
pop
mov
inc
ret
dec
inc
add
mov
lcall
adc
add
xor
push
out
push
ss
js
outsl
call
push
subb
ret
daa
arpl
add
pop
sbb
mov
ss
xor
sbb
data16
neg
movsb
sbb
mov
mov
hlt
inc
in
dec
sub
cmpsb
hlt
inc
adc
in
nop
clc
xchg
adc
pop
adc
leave
mov
pop
xlat
scas
aas
outsl
popf
lea
jb
movsl
mov
sbb
andb
dec
xor
pop
cmpsb
fs
je
test
xchg
into
or
sub
inc
gs
xchg
aam
dec
pop
aam
loopne
mov
sbb
cmpsb
sub
out
shrl
push
ss
or
loop
les
ficoms
cmpsl
int3
cmp
xor
jmp
and
jg
leave
fcmovnb
mov
or
xor
fsubs
mov
clc
ret
shrb
das
add
push
push
push
in
cmp
jo
das
mov
cmpsl
inc
cmpsl
mov
cmp
out
push
fnstcw
xor
pop
add
sub
addb
jecxz
jno
aam
adc
pusha
out
fcmove
lret
cmp
cmc
or
stos
je
arpl
decl
je
inc
sti
out
pop
add
xchg
push
lods
xchg
cs
fstpt
dec
sbbl
sbb
jmp
rcll
adc
ljmp
sub
imul
xor
mov
push
inc
daa
cmpsb
bound
mov
divb
pop
stos
stos
pop
mov
icebp
lods
dec
cmp
cmp
or
das
ficompl
and
stc
xchg
popf
push
sahf
lds
inc
or
dec
cli
hlt
or
mov
in
sub
in
test
pop
jmp
aaa
fidivs
mov
pop
mov
mov
jno
jmp
notl
dec
test
pop
xchg
fs
cmp
push
sub
add
bound
xor
nop
mov
xor
inc
out
mov
mov
ret
add
mov
dec
add
test
fdivl
sarb
jmp
sub
sub
dec
pop
inc
adc
lock
das
or
mov
cltd
imulb
xor
xchg
sbb
cmp
ljmp
adc
xor
mov
sahf
sarb
push
pop
push
push
or
cmp
mov
fisubs
in
daa
dec
imul
pop
sub
roll
insb
sub
push
and
add
fiadds
scas
aam
pop
pushf
shll
mov
gs
mov
movsl
repnz
repnz
push
cltd
addr16
sub
call
cmc
sbb
cmpl
xlat
scas
mov
sub
lahf
adc
icebp
xchg
and
popf
arpl
mov
out
ljmp
jp
dec
mov
and
add
xor
lret
xchg
push
rorl
clc
fmulp
lods
int3
in
stos
jne
bound
and
add
pop
ret
loope
out
sub
std
xchg
rcrl
xor
xchg
mov
or
xchg
add
call
add
loope
mov
dec
gs
sub
xchg
pop
xor
jne
stc
cwtl
cld
hlt
std
in
push
rorl
aad
andl
les
mov
jle
pop
roll
inc
mov
add
fnstsw
push
sbbb
jo
addr16
dec
imul
das
movsl
or
sbb
out
scas
jecxz
lahf
stos
out
repnz
mov
lret
xchg
sti
cmp
mov
out
pushf
inc
cmp
in
or
setg
jecxz
arpl
fistps
pop
in
inc
and
rorl
mov
push
insl
mov
lock
mov
test
mov
dec
jge
cmp
scas
cmpsb
fsts
sub
daa
or
lds
insl
sti
add
stc
xor
frstor
comiss
adc
xchg
icebp
push
js
in
jbe
test
jmp
adc
sbb
xor
sbb
enter
fldt
cmp
aam
add
inc
scas
mov
mov
cmp
test
test
pop
loopne
adc
pop
xor
ret
pop
xor
loopne
sbbl
push
sbb
out
mov
cmp
xor
push
sub
mov
cmp
mov
xlat
pop
cmc
sbb
mov
and
push
mov
inc
pop
mov
and
iret
and
repnz
sbb
inc
cmpsl
test
addr16
ds
mov
add
sbb
les
sbb
idivb
decb
mov
sar
mov
push
std
mov
push
iret
sbb
aam
rcll
clc
pop
xchg
fcomi
int
push
sar
jne
clc
adc
pop
cmp
push
imul
sbb
incb
push
popl
xor
xchg
mov
iret
iret
mov
sbb
sub
and
dec
nop
pop
shlb
mov
into
aam
xchg
scas
sub
fldcw
xchg
push
inc
and
sub
cltd
push
xor
pop
bound
add
popa
mov
mov
testl
pop
sarb
and
or
cs
dec
cmp
xchg
and
in
dec
ja
fcoml
cmc
add
and
les
mov
out
ret
and
inc
pop
jl
sub
sbb
xchg
mov
popa
sahf
push
outsb
nop
mov
pushf
push
sbb
shl
sub
inc
sbb
push
popa
fisttps
add
jns
outsb
andb
or
in
sub
push
fwait
mov
lahf
adc
dec
cmpsl
pop
mov
or
daa
hlt
addr16
add
lods
mov
lcall
or
mov
mov
dec
sub
pop
popf
xor
mov
dec
andl
roll
stos
pusha
outsl
cmpsb
outsl
arpl
mov
jbe
cmc
sub
ljmp
clc
imul
add
pop
jno
jno
mov
loop
cmp
push
clc
aam
cwtl
filds
rcr
jns
pop
and
stc
push
pop
inc
ss
cmp
xor
mov
sub
jb
pop
das
dec
addr16
stos
ret
pop
xchg
js
sub
mov
fstpt
or
sar
mov
lcall
aam
shlb
cmpsl
sbb
xchg
lea
xor
ja
test
push
nop
push
aad
add
add
das
xor
cltd
lock
mov
mov
in
subb
xor
mov
pop
dec
xor
push
fs
repz
adc
inc
sahf
fnsave
lret
xchg
std
pop
mov
ljmp
and
add
daa
xchg
movsb
xor
movl
jbe
cwtl
ficompl
out
pusha
and
xor
rep
xlat
test
sub
enter
ss
fwait
jae
xchg
jb
mov
mov
cmp
lock
leave
and
repnz
pop
jecxz
insl
cltd
xchg
mov
fwait
rcrb
cmp
adc
dec
pop
pop
movsb
xor
jo
int
mov
lds
mov
clc
test
pop
sub
jle
pop
mov
add
nop
adc
cld
ret
add
scas
imul
or
xor
icebp
std
int3
in
xor
movsb
jae
sbb
and
mov
movsl
add
push
jo
inc
sub
jne
out
jae
or
lock
mov
or
or
aas
mov
lock
pop
mov
in
inc
push
pop
lds
sub
int3
sbb
mov
insl
cmp
or
pop
cmp
jmp
filds
lods
cmp
cmpsl
mov
out
lds
jp
xor
pop
out
pop
in
imull
pop
cld
hlt
sub
roll
mov
mov
mov
xor
xchg
mov
mov
push
adcl
xchg
or
push
outsb
shrl
mov
pusha
xchg
je
dec
mov
lods
or
jne
lock
aas
lcall
jp
inc
rorb
mov
leave
clc
ljmp
aaa
xor
shlb
push
mov
mov
xchg
imul
and
repnz
and
mov
push
mov
mov
jmp
sbb
push
sub
add
sub
dec
sbb
stc
out
cld
ret
jl
cltd
mov
inc
adc
jbe
xchg
mov
loop
mov
dec
lahf
out
cmp
xor
mov
lods
adc
sub
fwait
imul
dec
mov
push
jb
rclb
cmp
stos
xor
call
jns
ljmp
and
and
dec
mov
popa
sub
xor
xor
xor
push
test
js
js
dec
cltd
sbb
xchg
out
gs
push
out
push
xchg
add
sub
mov
rcrl
push
mov
dec
sub
pusha
sub
push
cld
lea
mov
arpl
je
fwait
out
ljmp
mov
sub
js
pop
aaa
add
inc
scas
mov
aad
clc
mov
fwait
out
gs
mov
sar
sub
adc
cmpsl
cmc
repz
push
fwait
and
dec
pop
xchg
cmpsl
addr16
dec
sub
xor
repz
test
mov
vmovhps
scas
inc
in
adc
or
js
sarb
inc
pop
jns
divb
cli
add
sbb
imul
inc
and
mov
mov
insl
xor
mov
adc
pop
or
inc
pop
aam
call
mov
add
rcll
mov
mov
jae
mov
call
lea
aas
adc
inc
mov
xchg
mov
das
addb
cld
rcll
sub
cmp
pop
cmpsb
test
jecxz
ljmp
mov
xchg
outsb
pop
ljmp
or
stos
cmp
sar
add
push
pop
push
cmc
dec
bound
xor
mov
aam
aad
xchg
stos
std
das
scas
call
pop
xor
cltd
mov
ljmp
mov
outsb
pop
adc
jae
mov
es
pop
imul
ret
xor
jbe
lods
lcall
and
out
xor
pop
pusha
into
fmul
mov
repz
xor
push
jp
jae
pop
dec
sub
or
ja
xchg
in
jp
cmp
adc
call
or
in
test
in
add
jmp
ds
adc
adc
pop
xchg
or
test
sub
mov
popa
push
sbb
jmp
cwtl
jae
scas
adc
scas
ja
xchg
addr16
jo
mov
ds
daa
aas
lods
mov
mov
repnz
jge
rorb
or
and
inc
add
pop
jg
add
dec
pop
pop
push
lcall
bound
aaa
dec
data16
jl
fbld
dec
jns
add
lcall
lds
inc
sti
xchg
cltd
mov
test
lea
push
and
mov
loopne
and
cmp
mov
ds
or
xchg
jge
adc
sbb
dec
and
xor
pop
sub
add
icebp
jb
fsubrp
jle
jecxz
inc
enter
and
movsl
data16
mov
jbe
cmp
cmovs
push
xor
pop
mov
or
loop
es
ja
aad
and
mov
inc
daa
shrl
out
cwtl
mov
mov
pop
sub
xchg
rclb
in
fnstcw
cmpsl
xchg
jb
xor
sbb
pop
jmp
ret
sub
imul
cwtl
in
add
xor
sub
insb
sub
pop
jl
mov
mov
push
scas
stc
xchg
test
pop
inc
jno
lea
fistps
mov
mov
cmp
ds
icebp
jno
fwait
or
cmp
stos
cli
pushf
lret
push
or
sbb
loopne
in
lahf
insl
insb
inc
jae
imul
adc
mov
cmc
out
mov
mov
jnp
mov
mov
pop
xor
lods
scas
mov
adc
adc
dec
pop
gs
mov
xchg
xlat
jbe
hlt
pushf
rcrl
xor
pop
add
data16
enter
mov
cltd
in
mov
xlat
aas
addr16
adc
test
ret
scas
push
cld
shrl
mov
mov
nop
fstps
adc
shll
nop
fidivl
daa
cmp
imul
rorl
movsl
test
lods
mov
out
mov
ret
cld
aaa
push
sbb
pusha
adc
cs
loope
std
nop
dec
inc
aaa
test
xorb
loop
loop
sarl
or
cmp
jg
push
incl
cmp
adc
mov
and
mov
mov
ds
pop
mov
and
scas
push
fsubp
and
sarl
cmp
lahf
gs
inc
xor
pop
aad
cmp
xor
enter
sub
aas
cmc
ss
jbe
push
sbb
xchg
flds
enter
dec
add
hlt
inc
xchg
popa
lret
push
cmp
dec
xor
adc
outsb
pop
mov
lds
and
ja
daa
mov
imul
aaa
ds
loop
mov
adc
jo
cld
cld
icebp
push
dec
leave
pop
je
mov
fstpl
inc
aad
push
mov
testl
pop
xchg
test
sub
jo
testl
lock
sbb
xchg
std
mov
fsts
pop
cltd
dec
xchg
int
jmp
je
lahf
pop
jo
in
cmp
adc
or
and
inc
insl
mov
and
pushf
cmp
popa
dec
cs
pop
movl
movsl
cmp
pop
bound
xlat
and
jmp
sahf
aad
lea
ror
loop
shrb
sarl
in
pop
std
add
inc
push
cmp
push
sbb
xchg
or
pop
mov
imul
adc
shr
shl
xor
cmc
dec
dec
xchg
pop
lret
adc
mov
sub
addr16
scas
test
jp
mov
fcmovnb
mov
add
rclb
xchg
mov
mov
shlb
pop
gs
nop
lods
push
xchg
adc
push
movsb
sub
into
cmp
pop
jge
sbb
cmpsb
and
inc
neg
jg
sub
mov
ficompl
xchg
pop
sahf
xchg
mov
push
pop
testb
mov
xchg
lods
je
pushf
insb
and
mov
mov
xchg
adc
jmp
xlat
pop
aas
mov
fs
xchg
clc
xor
test
mov
in
xor
mov
imul
movsl
movsb
add
je
push
mov
push
enter
xor
sub
fwait
jge
dec
icebp
adcl
xor
divb
and
mov
mov
pop
push
loopne
cmp
cmp
fmul
sbb
ljmp
sahf
push
jno
aad
insb
mov
aas
adc
sbb
lock
mov
mov
sar
repz
sbb
stos
or
mov
dec
out
mov
mov
int
sahf
inc
in
lret
icebp
in
xor
jae
lcall
sub
pop
dec
test
insb
fs
mov
rorl
stos
scas
or
sarl
incl
jbe
xchg
xorl
stc
dec
cmp
add
cmc
sbb
xor
scas
xor
adc
cltd
ja
sarb
fmulp
leave
mov
sbb
movsl
mov
adc
xchg
gs
sub
and
aas
int
sub
pop
mov
cld
rclb
sub
sbb
lcall
push
and
pop
fstpt
mov
cwtl
jge
jp
popl
adc
dec
sub
xlat
mov
fldt
mov
mov
push
jmp
fsubrs
dec
mov
loopne
sar
dec
xchg
imul
scas
js
mov
xchg
cmpsl
fsts
out
adc
cltd
and
fs
dec
popa
push
hlt
mov
loop
in
push
imul
hlt
push
in
and
add
inc
into
ja
mov
orl
mov
movsb
xchg
dec
adc
loope
push
adc
les
mov
fcmove
inc
xor
sbbl
dec
outsl
loopne
mov
lea
mov
loope
push
ja
lds
sahf
shl
mov
adc
cmp
popf
adc
sbb
mov
sarl
jae
xlat
in
mov
lret
xchg
mov
jge
or
fdiv
hlt
rorb
sub
add
or
mov
jb
push
lds
mov
dec
lcall
mov
xchg
adc
rclb
xor
aad
mov
sub
push
pop
mov
pusha
std
shll
and
daa
dec
es
jp
imul
aam
inc
and
loope
aaa
xor
inc
xor
testb
les
pop
xchg
lret
loop
mov
dec
scas
ret
xor
mov
sub
dec
aas
stos
test
jmp
fsubr
sbb
add
mov
push
mov
or
mov
icebp
sub
pop
push
stc
cmp
xchg
push
pop
push
mov
jno
fisubs
int
testb
sbb
in
sub
mov
stos
jg
fisttpl
jmp
dec
push
into
lock
mov
sbb
adcb
cmp
lea
scas
test
mov
cwtl
repz
jl
or
xchg
fistl
mov
inc
outsb
sahf
movsb
push
repz
lret
neg
pushf
mov
jne
push
add
jnp
mov
stos
xchg
adc
lods
in
dec
xchg
aas
rorl
rcl
lods
cmp
dec
in
scas
loop
pop
fcmovb
pusha
mov
enter
jmp
frstor
sbb
fisttps
dec
aas
mov
and
add
jge
fcmovnb
xchg
int
or
pop
push
scas
popf
je
mov
inc
call
call
movsl
inc
stos
test
push
push
cld
cltd
lods
or
int
loopne
aas
fwait
call
int
sub
sbbl
je
sbb
in
mov
inc
jbe
mov
add
jne
mov
mov
or
mov
rcll
out
push
mov
les
idivl
sbb
enter
push
jno
test
mov
dec
dec
cmpsl
cmp
ret
ret
sahf
aad
adc
decl
mov
imul
adc
scas
negb
sbb
pop
inc
icebp
imul
je
icebp
iret
imul
pop
sub
inc
inc
pop
sub
xor
sbb
dec
adc
inc
scas
sbb
aad
push
fistpll
xor
pop
xchg
sbb
les
das
push
stc
jo
push
repz
repnz
call
mov
adc
lahf
insb
lock
std
arpl
lret
mov
clc
lcall
xchg
in
dec
fistpl
pop
pop
pop
push
push
and
leave
add
sbb
shlb
sbb
mov
mov
adcl
outsl
and
daa
subl
jecxz
and
mov
pop
xor
xchg
movq
cmpsb
int
fistpll
jb
jg
push
lcall
cltd
int
dec
cmp
pop
cltd
in
loopne
scas
popa
jo
or
fisttps
movsb
lret
mov
or
test
push
shlb
ror
pop
mov
icebp
dec
arpl
pop
and
cmp
stos
mov
jmp
xchg
mov
or
or
mov
pop
subb
xchg
inc
push
fidivrs
xor
xchg
add
ret
and
ds
into
clc
push
xlat
xor
or
rclb
xlat
push
fadds
fs
jne
in
dec
mov
add
into
mov
xor
imul
sahf
adc
andb
mov
sub
pop
loopne
test
push
inc
pop
adc
inc
and
and
leave
fildl
jecxz
iret
sbb
std
loopne
movsl
add
pop
insb
scas
divb
sarb
push
outsl
sti
mov
test
jp
jnp
mov
xchg
mov
lret
scas
aaa
mov
js
inc
or
add
mov
fs
shrl
and
jmp
int
xor
mov
xor
addr16
dec
xor
jae
inc
jecxz
push
mov
testb
push
sti
inc
push
push
addr16
jge
xchg
cmc
dec
popa
jl
cld
sub
jb
jge
popa
leave
xlat
lret
pop
mov
cmpsb
add
loope
cmp
adc
pop
mov
in
sub
sbb
sbb
js
sbb
jg
fwait
mov
cmp
mov
pop
loope
dec
or
sub
addl
daa
inc
lahf
and
gs
add
adc
insl
je
jbe
dec
inc
sub
mov
push
aas
outsb
and
xchg
dec
mov
stos
incl
cmp
sbb
scas
aaa
add
adcl
mov
cld
fs
sub
out
xchg
enter
lods
in
mov
icebp
fsub
jbe
pop
repz
rorb
jecxz
ds
cld
mov
cwtl
aam
aam
and
divl
jle
int
leave
sub
jnp
mov
mov
imul
je
out
ljmp
sub
jno
jo
jmp
xchg
add
mov
cld
in
push
je
test
sub
ljmp
mov
sti
push
rolb
and
cmp
test
out
rcl
nop
test
mov
pushf
mov
or
dec
adc
pop
push
inc
jbe
out
cmpsl
sbb
push
sbb
leave
imul
popf
mov
ret
cmp
mov
mov
push
shrb
rep
push
add
fdivr
jb
cmp
rclb
and
push
je
pop
push
cmpsb
sub
lods
pop
scas
add
es
movsl
movsl
int
jnp
xlat
and
imul
cmp
inc
mov
sub
mov
cmp
test
adc
arpl
bound
sbb
iret
subl
xchg
dec
push
push
xlat
sub
jp
push
cmp
lret
add
sub
xor
push
cmpb
adc
mov
jge
adc
pop
cmpsb
leave
in
outsb
xchg
mov
dec
incb
into
loop
in
mov
rcrb
je
xchg
push
inc
dec
inc
out
push
pop
dec
test
es
fbld
push
sbb
lret
sbb
jns
into
jae
xor
imul
or
mulb
sub
push
lret
dec
push
add
jnp
jo
inc
push
cmp
mov
ror
dec
push
lods
pop
iret
mov
push
mov
mov
pop
shrb
fdivs
ds
jns
sbb
in
in
shl
stos
xchg
notb
dec
cmpsl
xor
mov
arpl
push
push
cld
push
jg
sbbb
sbb
and
lock
decb
repz
ds
loopne
hlt
push
fs
dec
pop
mov
sbb
add
pop
xor
in
cli
movsb
test
mov
jle
jne
subl
sbb
out
repz
add
popl
inc
jg
arpl
mov
jns
je
add
and
psrlq
and
ljmp
inc
mov
jns
jp
push
lock
jnp
xor
test
pushf
jmp
jl
cmpsb
fwait
mull
dec
adc
and
mov
dec
and
lret
sbb
push
aad
lret
out
lods
cld
fwait
push
outsl
xchg
add
ja
add
fistpll
faddl
lock
sub
fstl
in
and
mov
inc
or
sarl
add
outsb
stc
gs
rorb
push
sub
ficompl
cmp
cli
mov
fldcw
arpl
xchg
int
xor
subl
adc
out
imul
mov
cltd
add
and
cwtl
add
xchg
int3
es
popf
push
jecxz
in
repz
sub
rol
popl
rcr
std
inc
or
adc
ret
lods
xor
mov
test
jl
jmp
lock
xchg
sahf
push
inc
mov
out
fs
push
cmpsb
aad
mov
inc
shlb
push
sub
mov
sbb
test
jbe
add
sub
imul
repz
mov
or
mov
scas
mov
fsubrp
call
stc
sub
mov
syscall
mov
adc
sbb
cld
scas
iret
jno
fucom
out
mov
pop
xor
ret
cmp
nop
cmp
daa
scas
inc
adc
leave
iret
jg
lret
inc
inc
addr16
xor
or
mov
loop
pop
add
aam
add
add
xor
mov
inc
dec
sub
shrb
mov
lret
jbe
fadds
aad
std
or
fists
lods
or
xor
fcomp
gs
shrb
sbb
clc
jb
ds
int3
pusha
xlat
jne
es
std
inc
lods
fbld
repnz
sub
push
mov
mov
push
jns
cmc
mov
dec
jl
add
cmc
mulb
enter
jge
mov
push
call
sub
hlt
sbb
sbb
ret
cmp
pop
jmp
cmp
sbb
scas
les
imul
mov
inc
sbb
stos
cmpsl
pusha
lods
mov
mov
sbb
adc
stc
inc
cmpsl
cwtl
xor
lcall
adc
cli
dec
adc
addr16
sub
loope
jbe
cmp
sbb
cmpsb
inc
shll
and
imulb
test
xor
int3
out
daa
repnz
and
ds
outsb
out
xlat
test
and
mov
std
mov
sub
fwait
xlat
mov
int
cmpsl
inc
dec
aad
pop
shlb
jno
sarl
mov
icebp
pop
push
or
jbe
in
dec
mov
xlat
mov
out
fwait
bound
inc
bound
mov
sub
sahf
mov
es
test
sbb
sub
jae
shll
icebp
sub
xchg
repz
pop
hlt
je
mov
sbb
pop
test
sahf
dec
fs
mov
push
push
out
sub
imul
adc
dec
in
jo
out
pop
adc
add
div
push
fdivrl
push
inc
mov
outsl
pop
ja
adc
xchg
pop
inc
insb
push
iret
mov
push
int3
lods
notb
fcompl
dec
inc
pop
inc
jle
pop
cmp
sbb
je
jmp
lods
icebp
call
loop
inc
in
mov
bound
test
data16
fs
or
mov
pop
jg
push
loope
enter
lock
mov
mov
stc
adc
jo
dec
cmp
lret
xlat
push
data16
mov
mov
lods
mov
jg
fildll
mov
or
popa
push
xchg
in
outsb
inc
imul
test
enter
addb
cltd
mov
icebp
in
push
cmp
arpl
lds
clc
fisubrl
out
jnp
movb
dec
pop
pop
in
aam
ds
js
push
test
jbe
push
sbb
fwait
lods
dec
stos
jecxz
jae
js
mov
inc
fidivrs
out
call
mov
dec
adc
pop
loope
lcall
or
aas
cmc
loope
mov
rclb
mov
mov
jecxz
push
lods
inc
or
mov
fdivp
jne
or
or
cmp
test
jp
test
push
xor
fdivp
jecxz
div
fcomp
inc
insb
aaa
xor
add
aam
out
pop
enter
cli
aam
adc
sub
outsl
and
fsubl
scas
xor
inc
out
cmp
mov
ja
enter
out
stos
fmulp
sbb
sahf
movsb
ljmp
lods
sub
test
add
xor
adc
std
cmp
jle
xchg
dec
imul
sbb
sbb
movnti
rolb
data16
test
fimull
adc
aam
xchg
and
mov
jb
movsb
aad
adc
pop
push
cmc
sbb
cmc
add
adc
xor
fwait
mov
dec
test
mov
hlt
add
push
mov
shlb
jne
sbb
push
mov
dec
sub
loopne
mov
jecxz
into
mov
mov
inc
test
mov
test
nop
fildl
in
popa
adc
shlb
push
shl
mov
sub
test
popf
out
enter
and
inc
in
inc
jge
add
iret
not
sub
stc
add
and
sbb
or
test
mov
inc
fwait
cwtl
mov
jecxz
mov
adc
cmc
cmp
shlb
dec
mov
cmp
sub
and
mov
sub
jo
adc
mov
stos
ds
sti
or
or
cmp
les
mov
adc
jae
es
dec
inc
ljmp
insl
ss
xor
popa
cli
push
outsb
outsl
sub
call
or
repz
call
push
and
mov
icebp
sarb
mov
dec
pop
cmp
mov
in
dec
movsl
lea
movsb
cmp
decb
inc
cmp
add
xchg
or
ret
iret
pop
mov
mov
xchg
call
sbb
and
out
nop
and
sub
cmp
fdivrl
out
or
lods
push
dec
cmp
fisubrs
les
rclb
xchg
xor
les
out
push
lret
inc
dec
jmp
insl
jb
mov
rclb
jb
jnp
xchg
ljmp
aaa
add
insb
lret
sub
xlat
rclb
mov
mov
stos
pop
ret
mov
push
cmp
jle
inc
dec
dec
xchg
and
shrb
fisubrl
xchg
fwait
in
cmp
add
out
lea
cmp
aad
mov
fidivrs
xor
push
in
mov
cmc
sbb
fs
rorl
cpuid
xor
xor
mov
xor
or
test
dec
add
push
pop
push
push
mov
sub
cld
adcb
cmp
fisubs
jae
and
sbb
mov
icebp
add
cmpsl
mov
and
imul
mov
adc
pop
jmp
add
mov
cmpsl
aad
jne
inc
jmp
mov
pop
inc
cmp
dec
pop
adc
pop
fs
out
leave
sub
add
out
pop
add
divl
xchg
and
cmpsb
sti
ljmp
push
andl
dec
dec
dec
adc
lods
pop
xchg
add
aaa
int3
arpl
jno
fildl
cmp
jo
adcb
jno
sbb
imull
aam
dec
in
into
gs
mov
mov
cwtl
arpl
jo
loopne
or
mov
out
lods
push
ds
ret
xor
test
xor
sbb
lock
mov
pop
addr16
aas
and
test
or
int
xchg
fnsave
outsl
add
mov
bound
or
outsl
js
xor
pop
sbb
mov
cltd
je
mov
shll
mov
mov
xorl
mov
pop
fcmovb
cmp
test
imul
out
repz
lods
sub
cmp
shll
lahf
or
outsb
pop
cli
cmp
mov
mov
xor
loope
hlt
mov
sub
adc
dec
mov
adc
iret
mov
nop
in
mov
pop
les
daa
mov
mov
adc
ret
pop
push
jle
xor
sbbl
xor
xor
jge
call
out
cmp
sub
fildll
lahf
stos
lcall
fxch
shrb
cwtl
rorl
mov
rcr
jo
in
pop
or
imul
loop
jae
test
fsubr
ds
pop
test
ds
popf
aam
add
scas
das
xor
jmp
mov
loop
pop
fs
mov
cmpsb
repz
mov
hlt
shl
mov
outsl
arpl
mov
out
push
jmp
jmp
int3
xchg
addr16
sbb
cmp
mov
fsub
mov
jnp
jae
out
mov
ds
bound
cmp
sbb
pop
dec
or
lahf
mov
mov
lret
addr16
mov
lea
jle
inc
in
adc
ficoml
xchg
loopew
adc
imul
addl
add
inc
iret
mov
pop
push
push
jmp
out
cmpsl
push
mov
push
xchg
and
inc
jo
and
inc
sbb
pop
in
inc
xlat
jns
push
mov
push
sbb
jg
daa
ret
xchg
test
push
mov
cs
push
xchg
mov
pop
popa
sub
repnz
jl
lahf
imul
jne
sub
dec
shlb
movsl
or
repnz
sbb
cmovge
pop
aam
xor
push
sti
jmp
in
pushf
push
and
fildll
xchg
lea
test
xchg
repz
loop
scas
inc
pop
stos
adc
out
xchg
cmpsl
sbb
xchg
mov
ret
and
repnz
xchg
in
dec
mov
and
rclb
dec
rorl
pushf
xor
cmp
popf
gs
or
push
add
mov
pushf
jmp
inc
xchg
adc
cs
push
jmp
adc
lret
dec
xchg
add
mov
lret
mov
arpl
add
sbb
jno
fwait
divl
jg
incl
push
dec
sti
xchg
cmp
ja
mov
and
pusha
cmp
movsl
pop
fadd
dec
jnp
enter
cltd
push
shll
adc
jp
ljmp
gs
test
cmpsb
jle
xor
mov
push
sub
ret
mov
mov
mov
or
out
popa
mov
rcrb
addr16
fs
cld
push
and
shl
push
outsb
xchg
mov
inc
xchg
push
data16
mov
xor
xchg
repnz
icebp
gs
sub
and
jl
in
loop
xchg
fwait
ret
pop
jns
mov
inc
test
jae
ds
rolb
mov
iret
test
sbb
cmp
icebp
fcomps
outsb
dec
rol
xchg
xor
push
aad
sub
mov
mov
fmul
push
int
sbb
xor
fistps
sub
mov
movsb
sbb
push
push
pop
xchg
dec
fistl
fmull
inc
jl
les
and
push
cli
xor
or
jle
insb
sbb
mov
mov
sbbb
add
popf
test
ret
notl
andb
int
outsb
cmp
in
jmp
lods
stos
shll
mov
std
mov
ficoml
jne
repz
stc
sbb
fdiv
ficoml
pop
sub
outsb
in
jbe
aaa
mov
or
inc
testb
gs
adc
xor
decb
mov
fimuls
stos
jo
je
lock
shlb
pushl
and
cmc
dec
dec
cltd
sahf
rcr
jne
fldenv
dec
and
push
jo
daa
inc
adc
and
fdivrs
mov
dec
cs
dec
insb
movq
les
cmp
cld
mov
inc
sbb
andps
call
cmpb
dec
out
orl
push
dec
add
pop
and
and
jge
dec
jns
sub
cmc
xor
lcall
aam
cmpsl
mov
outsl
das
and
xchg
scas
dec
sbb
add
movsl
shrb
push
rol
loopne
ds
dec
mov
lods
and
out
std
cmp
sbb
xchg
ljmp
cmp
ljmp
mov
push
bound
leave
in
inc
sbb
sub
aad
mov
fdivl
in
sbb
ss
arpl
mov
ljmp
mov
fisubrl
scas
idivl
mov
es
push
sar
lods
stos
lock
ss
mov
bnd
je
mov
popf
or
aas
pop
cmp
adc
sub
sbb
xor
xchg
call
push
adcl
push
jl
mov
xlat
fcmovnb
mov
test
mov
jo
fmul
fstl
push
orb
loop
test
xor
jae
not
idiv
shrl
iret
mov
dec
ds
sbb
inc
scas
lret
mov
cmp
aam
add
movsb
fcompl
push
test
jno
mov
sbb
mov
test
rolb
loop
mov
pop
into
xchg
fists
sub
push
cld
sbb
movsl
cltd
mov
addr16
jbe
sub
jae
addr16
adc
jnp
lods
adc
push
out
flds
subl
imul
neg
leave
mov
xchg
cmp
inc
cmp
push
in
and
cmpsb
or
xchg
mov
sti
jle
inc
push
loop
in
fists
inc
gs
lea
test
sub
xchg
divb
sti
fsubr
lds
div
lcall
jge
jno
lods
fisubrl
inc
sub
sub
add
movsb
mov
lret
repnz
sarb
test
rol
cmpsb
mov
cmp
adc
mov
inc
dec
jle
es
in
inc
incl
mov
arpl
aad
push
jp
mov
or
inc
dec
cs
ja
inc
add
or
loopne
adc
hlt
stc
std
lahf
popf
loope
cmp
add
cmc
push
call
xchg
sbb
push
es
or
sti
movsb
xor
fiaddl
dec
jmp
ficomps
aam
out
sti
fstl
sarl
ljmp
jle
push
sub
insl
fisubl
sub
mov
or
jne
sahf
jmp
push
lea
aad
and
pop
jb
sub
mov
jnp
dec
sbb
sbb
jle
dec
mov
mov
sbb
js
cmc
push
bound
imul
adc
mov
add
or
dec
push
mov
push
xchg
ljmp
xor
dec
add
push
cli
ja
lock
mov
fisubrs
aad
add
ja
sarl
pusha
imul
cmp
js
bound
mov
shlb
nop
hlt
inc
pop
ja
jg
mov
mov
dec
fldenv
sti
xor
push
pop
add
in
xchg
mov
in
pop
lods
and
mov
cmp
dec
mov
fcoms
sub
sbb
mov
fistpl
xchg
cmp
pushf
shlb
adc
sbb
jo
sbb
scas
push
dec
mov
sub
cs
lahf
testl
in
lahf
mov
add
push
adc
adcb
or
mov
xlat
retw
ret
jmp
adc
cmp
test
dec
pop
jne
outsb
bound
jbe
sub
mov
sbb
inc
popf
into
aaa
add
loope
push
repnz
dec
lock
xchg
jg
pop
aam
jns
ret
lcall
mov
ja
mov
ffreep
add
das
jae
aas
mov
add
add
adc
jb
insl
les
mov
repz
or
lret
enter
and
cmp
addl
adc
pop
push
jg
aam
rol
fwait
popf
jge
and
inc
sbb
jl
push
shll
mul
dec
hlt
pop
jmp
xchg
fbstp
insl
or
fldenv
imul
outsb
out
loope
scas
lcall
in
out
in
push
repnz
outsl
fidivrs
push
sbb
loopne
pop
sub
mov
fst
fisttpl
dec
frstor
ja
sbb
jmp
push
inc
push
xchg
push
iret
mov
cmc
sbb
in
es
push
sub
pop
lock
xchg
loop
stos
pop
inc
and
repz
loop
mov
iret
lret
fnsave
xor
call
loopne
sbb
imul
mov
rcll
dec
int3
repnz
mov
or
add
sbb
pop
ret
scas
cmpsl
pop
adc
lods
inc
subb
add
add
or
aaa
aaa
cmpl
jb
loopne
mov
pop
loope
jbe
rcrb
add
sub
decl
insb
pop
lret
pop
fs
mov
loope
dec
mov
addr16
pop
inc
das
loopne
dec
in
adc
orb
sbb
inc
pop
rcl
into
fbld
mov
cmc
outsl
pop
aad
sub
mov
jns
sub
cs
daa
pop
inc
fadds
or
testb
outsb
loopne
mov
repnz
ds
cmp
add
shlb
lods
in
dec
fcmovnbe
sbb
mov
xor
sbb
lods
jecxz
push
mov
sub
call
cmp
addb
and
or
mov
repz
push
insl
adc
sbb
jmp
pop
rolb
pop
dec
cmp
shlb
sti
jno
add
add
dec
orb
stos
xorl
inc
inc
xor
mov
push
push
pop
cs
fxch
push
or
jle
and
imul
stos
gs
jne
sbb
jae
fwait
jns
mov
push
bound
in
adc
scas
loopne
je
aad
push
dec
sbb
mov
cmp
lret
mov
imul
sub
divb
and
out
sbb
dec
dec
or
pop
xor
inc
adc
push
jno
dec
pop
pop
inc
fistpll
cmc
js
mov
sbb
jnp
mov
stos
pop
cltd
in
stos
push
jp
js
test
sbb
rcll
pushf
in
aas
mov
lds
jns
mov
ss
movsb
inc
cmp
fisubrl
out
inc
jg
pop
mov
pop
shlb
fsub
bswap
sub
repz
cmp
pop
jmp
xchg
icebp
sbbl
push
jns
add
or
adc
cmp
cmpsb
aad
ds
je
scas
pop
ret
fucomi
aam
jp
mov
movsb
data16
incl
adc
lret
pop
loope
sub
test
cmpsb
jnp
mov
in
mov
jo
xchg
nop
xor
fstp
xchg
and
movsb
in
sub
subl
xorb
stos
adc
data16
push
ds
insl
js
xchg
pop
insl
jb
das
xchg
ja
adc
cmp
ds
cld
lcall
shlb
jbe
cmp
dec
cmp
aas
loop
push
jb
cli
mov
mov
jnp
xchg
fldcw
lock
inc
mov
in
popf
cmp
or
loop
in
mov
push
xor
aas
and
jne
call
pop
jb
or
dec
xchg
addb
testb
dec
mov
sub
push
jl
out
call
imul
fisttpl
es
movsl
sbb
test
mov
push
push
loopne
mov
sbb
in
mov
jae
pop
xor
push
push
jg
mov
mov
sub
inc
lret
fsts
pop
cmp
lock
adc
loop
pop
mov
sahf
shrl
aad
push
loop
daa
orl
fs
and
mov
movsb
aad
lods
out
mov
outsl
cmp
aas
cli
daa
div
lahf
lods
test
xor
xchg
sbb
inc
sub
popa
cmp
out
jae
rcl
cli
verr
icebp
pop
sub
dec
sub
push
shl
movsb
cltd
sbb
or
jno
mov
pop
jnp
out
sub
jne
nop
psubsw
sub
ficoml
mov
outsb
mov
mov
pop
jno
push
or
bound
sbb
adc
and
fdivrs
inc
sbb
add
sbb
xchg
mov
out
loop
popf
mov
cmp
mov
add
dec
adc
mov
int
in
xchg
or
or
stos
int
and
aas
or
mov
push
xchg
xchg
mov
adc
shll
out
cld
mov
gs
jnp
test
mov
mov
loop
cltd
rcl
xlat
mov
bound
pop
push
xor
idivb
test
push
push
jp
adc
inc
xor
pop
jns
fimuls
cmp
sub
lods
jmp
and
jg
cmp
mov
enter
andb
fs
xor
fsubrs
cmp
mov
push
cmc
sahf
mov
inc
clc
rorb
out
ds
xchg
test
sarl
dec
mov
and
sbb
ds
es
sub
insb
adc
mov
dec
in
sbbb
in
stc
lcall
andl
and
cs
cmp
jne
aam
loopne
xchg
enter
orb
ss
sbb
add
xchg
fistpl
sarl
sbb
sbb
in
lcall
std
in
jmp
ret
xchg
mov
in
lcall
leave
inc
loope
int3
pop
fwait
or
ja
mov
cmp
pop
out
xchg
iret
mov
add
insb
dec
sub
popf
xchg
lahf
push
ljmp
push
addb
sub
imul
lret
leave
pop
cmp
cmc
xor
insl
pusha
test
xor
jo
add
enter
cwtl
in
jns
cmpsb
jb
pop
ficompl
xchg
int3
test
mov
cs
cld
and
lock
stos
mov
and
or
neg
xchg
and
lahf
test
orl
inc
test
mulb
sub
push
in
jnp
cwtl
das
cltd
nop
sti
inc
arpl
shrl
sub
jge
stos
in
out
fstpt
inc
aam
mov
ds
jnp
and
lds
repnz
dec
xchg
pop
fcmovu
invd
int3
jo
or
shlb
sub
lahf
aam
xchg
xchg
inc
fnstsw
and
out
call
or
xchg
pop
sbb
sahf
pop
test
ret
push
stos
test
popf
mov
dec
pop
addb
aam
icebp
push
jns
in
mov
adc
or
inc
out
inc
or
ljmp
jae
jne
push
iret
hlt
or
loopne
and
sahf
and
inc
ret
sub
ljmp
nop
mov
inc
hlt
mov
and
add
rorb
and
pop
mov
bound
mov
jae
cltd
fwait
dec
ret
mov
cmp
mov
dec
sbb
cmp
scas
jg
lret
ja
dec
jmp
xor
push
xor
cli
pop
int3
ret
xor
push
mov
jle
and
xchg
mov
loop
int3
xchg
adc
fbld
mov
mov
xor
scas
pop
push
outsl
jecxz
out
cwtl
push
test
into
add
fs
mov
jb
dec
out
push
pop
xchg
cmp
xchg
push
sub
inc
stos
ljmp
lahf
lods
add
fldenv
mov
mov
call
je
arpl
ja
hlt
pop
sub
add
sbb
std
jecxz
push
leave
sahf
je
xor
or
div
out
ss
lret
into
in
test
adc
mov
mov
and
cwtl
andl
inc
cmp
sub
fstpt
mov
shll
mov
mov
cmpsb
jle
shl
or
adc
adc
es
adc
jb
daa
ja
es
push
jp
fidivrl
mov
popa
adc
sarl
sar
add
aaa
imul
rorl
pop
adc
add
adc
popf
push
xchg
bound
movsl
sbb
movb
push
into
es
stos
insl
mov
and
stc
pop
pop
dec
in
mov
fcmovb
and
adc
or
push
or
repnz
movsl
icebp
mov
repnz
in
pushl
arpl
add
push
jae
push
xchg
mov
lret
push
mov
xor
add
xchg
inc
add
inc
cmp
adc
xor
gs
addl
push
cmpsb
stos
int3
gs
arpl
or
orl
sbb
mov
scas
dec
pop
mov
add
jge
mov
movsb
pop
addr16
mov
clc
lret
mov
stos
lea
faddp
mov
xorl
and
jg
mov
inc
xchg
fldt
inc
ja
push
lahf
movl
xchg
and
scas
sbb
inc
sub
cmp
sub
mov
cmp
mov
mov
fisttpll
insb
xor
repnz
xor
xchg
sahf
xchg
mov
fcmovbe
sti
dec
sub
movsl
cmp
movsl
inc
jns
sub
add
xor
mov
scas
push
xchg
jbe
sub
dec
pop
cld
outsb
ret
fiaddl
xlat
sub
mov
adc
and
hlt
push
add
insb
xchg
ljmp
scas
dec
je
mov
mov
popa
jb,pt
in
insl
mov
stos
xchg
dec
push
imul
sub
lahf
sub
lea
shrl
ret
repz
pop
xchg
sub
sahf
jge
mov
cmp
push
and
rcl
dec
fadds
sbb
lods
clc
stos
push
xchg
add
aaa
icebp
add
test
sbb
xchg
inc
cltd
xchg
and
or
mov
inc
mov
xchg
lds
fnstcw
stos
fcompl
pop
lods
jno
adc
dec
xchg
sbb
xchg
out
cmp
jl
icebp
enter
js
aad
orb
inc
xor
data16
push
int3
leave
xor
lods
cmp
imul
xor
pop
sub
add
or
ja
push
aaa
xchg
pop
call
cmp
icebp
mov
aad
jo
cmp
sti
adc
add
test
stc
stos
cmpsl
or
inc
cmp
out
adc
inc
les
push
jno
popf
mov
cmp
roll
cmp
call
ret
ss
sub
scas
jp
jb
mov
loop
dec
jbe
push
lret
call
xor
xchg
pop
jge
jae
mov
jmp
push
xchg
fdivs
sbb
test
mov
movsl
cmpsl
jmp
push
inc
hlt
outsl
lock
or
push
jge
enter
insl
fnsave
cmpsb
jbe
cltd
sbb
xchg
mov
dec
sbb
lcall
cld
pop
fadd
push
dec
daa
cmpsb
sbb
test
adc
add
mov
dec
int
and
jp
add
cmp
dec
lods
aam
movsl
shll
jle
xor
adcb
inc
and
leave
ljmp
mov
sarb
jecxz
inc
pop
movzwl
jle
in
mov
cmpps
rclb
addr16
add
je
fwait
hlt
cld
xchg
lods
and
mov
mov
test
out
push
scas
mov
andb
push
pop
dec
icebp
and
sbb
mov
and
and
sbb
mov
sub
jae
fcoms
push
dec
lretw
imul
xchg
in
and
ja
fstpt
stos
or
sub
rolb
push
mov
hlt
pop
xor
mov
jb
mov
lahf
mov
push
enter
xchg
les
jp
lea
cs
add
inc
sbb
push
xlat
sub
cmp
ffree
pop
mov
mov
xor
outsl
xchg
aad
es
fstps
lahf
cmpsl
mov
xor
push
adc
push
mov
jns
and
push
cmp
jnp
pop
cmp
xchg
rep
test
dec
not
iret
and
ds
push
cmp
lcall
or
mov
push
and
pop
pop
stos
fstl
jnp
int
mov
leave
out
out
fstpl
sahf
loop,pn
insb
xor
ret
imul
movb
mov
jp
inc
jg
xchg
daa
fidivrl
pop
push
nop
mov
cmp
pop
dec
jge
xchg
or
mov
add
sbb
xchg
adc
sub
arpl
dec
jg
jp
xchg
cmp
pop
fs
or
jns
push
xor
aad
data16
mov
ret
xchg
nop
div
push
or
mov
clc
dec
sbb
xchg
jp
pop
mov
add
outsb
repz
subb
mov
xchg
frstor
jp
add
sub
mov
into
pop
pop
in
movsb
mov
push
aad
dec
je
mov
aas
pop
call
jo
push
bound
cli
loope,pt
movsl
sahf
scas
loop
pop
in
in
mov
lahf
push
sbb
sbb
push
jle
mov
and
pop
cwtl
xchg
inc
pushf
xor
xchg
jne
ds
push
scas
dec
pop
adc
jl
filds
adc
in
fistpl
or
mov
std
adc
in
sub
jno
insl
jnp
add
sbbb
hlt
sub
nopl
cwtl
fidivl
jp
imul
insb
lods
lcall
sub
cmpl
cltd
out
push
inc
dec
sbb
push
in
sbb
push
pusha
cltd
push
lret
lea
jp
int3
dec
sbb
mov
popf
pop
sub
mov
popa
data16
mov
dec
xchg
cmp
xor
ja
add
and
ss
stc
mov
addr16
repnz
mov
js
mov
xchg
jae
jp
add
imul
repz
pop
aad
lods
push
xor
push
outsb
or
cli
dec
xchg
and
rcrb
cmp
jmp
push
mov
rcll
icebp
mov
in
fsubr
adc
cmp
mov
xor
flds
into
dec
push
cmp
sbb
adcb
out
andl
aad
inc
mov
aaa
mov
jae
ret
dec
add
fsts
push
es
mov
mov
ret
mov
cmovo
sub
add
sbb
xchg
push
dec
adc
cld
adc
mov
adc
cmp
pop
pop
jne
adc
cs
divb
movhlps
jno
inc
test
jge
lea
fstpl
and
iret
mov
push
test
push
mov
dec
lret
fidivrl
pop
mov
push
cli
jbe
loopne
clc
and
push
inc
ljmp
sarl
dec
push
ljmp
jne
push
pop
sub
call
push
outsl
dec
xlat
popa
je
movaps
sub
addl
pop
stos
ljmp
cmpsb
pop
push
push
and
lret
fsts
jp
je
ljmp
or
dec
cmp
xchg
lods
mul
mov
dec
btc
pop
push
inc
cmp
sub
sbb
je
je
cmp
or
in
in
push
loope
mov
xor
scas
fs
xchg
jbe
jecxz
ljmp
xor
in
dec
mov
xchg
mov
add
xchg
loop
or
lods
pusha
jae
fists
imul
jb
fnstenv
icebp
pop
mov
movmskps
push
out
in
testb
mov
xlat
clc
jo
sub
jbe
lods
pop
adc
icebp
imul
and
cmp
pop
mov
fs
ss
bound
add
pop
enter
fdiv
data16
cmp
stc
inc
add
cmpsl
in
lret
or
or
insb
mov
dec
in
mov
in
fwait
iret
rdmsr
push
jno
pop
shll
mov
adc
dec
mov
mov
sbb
add
add
fcoml
call
and
aas
mov
dec
fwait
mov
adc
cli
pop
movsl
inc
sbb
dec
jnp
cmp
popf
ja
add
dec
inc
out
aaa
js
sub
xchg
xlat
or
jecxz
and
inc
lods
xlat
fdivl
fdivl
and
mov
test
cmc
jo
data16
sub
inc
sub
inc
mov
mov
les
inc
in
movsl
outsb
lret
stc
push
add
cmp
inc
jo
dec
xor
data16
mov
mov
cltd
sbb
xchg
push
cltd
outsb
fnsave
jl
std
adc
or
mov
hlt
xchg
test
inc
inc
popf
or
push
jns
in
leave
inc
lock
sbb
and
push
cmpsb
pop
mov
lods
push
or
movsb
inc
mov
int3
push
jae
mov
adc
inc
lea
leave
sbb
and
paddusw
sbb
jb
imul
pop
scas
adc
jecxz
scas
mov
repz
add
xor
push
mov
adc
adc
mov
xchg
cltd
aaa
push
loop
iret
insb
xor
cmp
dec
dec
mov
add
push
test
mov
cmpl
cmp
jge
nop
push
push
sub
xchg
xor
dec
sarl
gs
dec
lcall
std
fwait
push
jp
push
sarl
pop
push
push
xchg
sbb
push
and
clc
enter
cmpsb
xchg
mov
aam
push
mov
mov
insb
xchg
push
or
imul
mov
jb
and
sbb
jl
lds
adc
cmpsb
sarb
mov
and
data16
scas
xchg
jecxz
mov
sbb
mov
into
fisubl
outsb
mov
stos
mov
and
add
push
or
int3
or
push
cli
arpl
bound
sbb
dec
inc
pop
shl
ja
cmpb
sbb
inc
add
mov
pop
mov
cmp
into
jnp
push
push
pusha
jno
or
in
and
add
daa
or
daa
xor
push
in
mov
js
addb
aad
ja
push
pushf
loope
mov
xchg
mov
mov
lds
ret
jp
sbb
mov
das
ds
or
push
cs
sbb
mov
cwtl
sti
or
pushf
repz
inc
sub
add
std
xchg
popa
cmp
xchg
add
jp
push
fnstenv
mov
sarb
adc
ljmp
cmp
idivl
out
lds
push
xchg
fistps
fistl
cmp
jmp
adc
repz
mov
stos
fldt
jg
jo
dec
mov
testb
stc
sbb
pushf
hlt
out
fadd
popf
mov
mov
xchg
loopne
ret
je
mov
movsb
dec
daa
idivb
nop
sbb
mov
dec
push
sub
ret
jae
pop
cwtl
and
insb
dec
inc
cwtl
cld
dec
out
mov
or
dec
sbb
pushf
cmpsb
sub
inc
mov
fisubl
inc
lahf
imul
lods
fs
js
inc
jo
in
fs
add
call
inc
and
fidivs
sbb
test
cmpb
xor
fldl2t
mov
jb
fdivl
add
dec
pop
repz
cmp
dec
shl
ss
lahf
aaa
lds
jl
mov
scas
dec
stc
mov
outsl
jmp
cmp
xor
sub
test
mov
jno
cli
push
xlat
xchg
arpl
imul
push
icebp
or
or
mov
cmp
inc
xor
jl
ljmp
dec
pop
xchg
lods
mov
fidivrs
scas
scas
xchg
add
imul
push
jnp
mov
fdivrs
dec
call
out
fnstcw
jae
jmp
jecxz
xorb
aas
lods
push
dec
popf
mov
xor
fcmovb
or
inc
push
clc
xor
xchg
sti
lods
dec
sub
mov
repnz
decl
push
sbb
add
push
call
leave
xor
xor
sahf
inc
xor
lret
int
jle
in
cs
cmp
xor
mov
add
lret
jmp
inc
lahf
and
cmpsl
dec
lahf
sub
and
es
imull
daa
and
jle
aas
cmp
sub
loope
repz
inc
or
inc
sub
jge
dec
xor
add
pusha
mov
jnp
pop
xor
or
stos
xchg
xor
adc
setb
xorl
lahf
mov
sbb
cmp
movsb
dec
out
ret
jecxz
xor
xchg
fwait
shll
js
mov
mov
pop
mov
mov
test
mov
mov
xchg
ds
or
sahf
addr16
and
push
push
popf
mov
into
fsubs
mov
loope
xchg
sub
xchg
sahf
imul
pushf
hlt
in
cwtl
mov
fwait
mov
pop
aaa
out
jmp
in
xor
and
out
mov
or
test
or
movsb
movsb
pop
sub
jp
push
outsl
or
outsl
andb
push
mov
std
stos
clc
rol
loopne
pop
inc
cmp
pop
mov
stos
adc
loopne
mov
push
out
arpl
mov
lcall
add
pop
dec
and
rcrl
sub
jmp
popf
rclb
outsl
loopne
ja
xchg
cmp
lock
adc
jecxz
outsl
sbb
lods
aam
fstpt
pop
and
test
jle
test
ljmp
popa
arpl
ja
mov
rcrl
add
lea
test
sti
pop
mull
cmc
shl
jno
mov
dec
sub
xchg
jg
test
popa
movsb
loop
mov
shlb
sti
adc
add
call
stos
or
xlat
int
and
fnsave
iret
pop
les
lods
loop
imul
mov
push
add
xchg
fldt
xchg
mov
or
xchg
jns
sbb
into
cmpsl
xor
push
adc
mov
mov
pop
inc
adcb
push
jge
js
int3
stc
orl
cmpsb
sbbb
icebp
stos
clc
and
ffreep
leave
and
sub
addb
fsubrs
nop
mov
rorb
cli
dec
jns
cmp
inc
jl
xchg
pop
push
fnstsw
mov
push
jl
push
mulb
adc
insl
pop
ficoml
fistpll
inc
divl
ret
adc
mov
out
pop
pop
adc
push
out
js
repnz
out
rcrb
push
pop
test
push
dec
filds
popf
mov
xlat
pop
int3
stos
fstl
daa
cmp
sahf
or
imul
inc
repnz
jmp
in
daa
xor
pushf
push
or
sbb
repz
aad
movl
and
cmpsl
jmp
aad
and
push
mov
fcoml
in
scas
sub
add
jo
or
and
or
mov
xor
xor
callw
stos
mov
fs
mov
popa
mov
addl
add
out
fnstcw
ficomps
cmpsl
jp
pop
adc
xchg
jg
loope
xchg
push
dec
pop
adc
mov
xor
insb
les
stc
jl
icebp
les
mov
jmp
inc
inc
andl
mov
add
movsb
mov
cmp
leave
jae
rorb
mov
or
mov
mov
mov
outsb
sarb
xor
push
sbb
inc
out
std
repnz
leave
jg
test
inc
ficomps
and
scas
std
repz
push
out
outsb
mov
jb
ret
push
xchg
in
stos
adc
cld
jno
or
das
sbb
jp
test
jge
jo
pop
sub
sti
cmp
enter
lods
xchg
sub
clc
mov
cmpsb
aad
cli
and
addr16
mov
or
mov
mov
mov
mov
aaa
cmp
icebp
sahf
mov
xor
test
lret
sbb
fnstcw
push
jmp
inc
scas
ja
repnz
andl
inc
lock
mov
lock
mov
cmp
xchg
sub
arpl
add
cmc
xchg
add
push
pop
pushf
jo
out
and
and
inc
das
or
jmp
jg
imul
rcl
or
lahf
jbe
loopne
ja
mov
rorl
aas
mov
lahf
mov
sti
sub
lods
mov
sbb
sbb
push
test
and
dec
cwtl
repnz
inc
scas
psadbw
push
pop
ljmp
in
mov
es
push
test
les
jge
outsb
cmp
pop
jmp
push
sub
and
mov
sbb
push
xlat
xchg
mov
in
loopne
js
ljmp
push
call
jp
mov
adc
push
lahf
mov
lds
and
movsb
jnp
addw
add
push
mov
cwtl
outsb
cmp
stos
test
mov
mov
jecxz
bound
fnstenv
adc
sbb
cwtl
test
push
nopl
cli
insb
mov
or
idivl
cmp
lahf
xchg
popa
inc
ds
lods
add
adc
adc
loop
mov
imul
insb
leave
ss
sbb
cld
fcompl
andb
xor
les
xor
dec
lods
movsb
jae
lock
ds
mov
rcrb
cli
sahf
sub
mov
icebp
pop
insl
xor
fnsave
pop
or
loope
lds
fidivl
sub
push
and
into
adcl
enter
in
cmp
xor
repz
ss
or
mov
hlt
xor
jmp
add
xor
lods
lahf
xchg
add
test
cmp
inc
adc
or
inc
xor
add
fisttpl
mov
je
xor
inc
sub
fsubp
push
push
addl
hlt
cltd
loope
fwait
in
jle
xchg
shrl
or
mov
loop
addr16
fstpt
lods
addr16
cli
and
jmp
es
je
push
pop
cmovbe
out
mov
and
repz
call
in
sbbb
scas
jecxz
jle
lock
push
int
sbb
dec
sub
hlt
xchg
lock
std
jp
lret
mov
ds
dec
aad
cmp
inc
add
and
arpl
cld
push
fildll
sub
inc
les
mov
sub
lea
pop
mov
lcall
movsl
and
std
adc
sub
xor
stos
inc
rolb
cli
hlt
lahf
mov
cmpsb
test
mov
popa
cmpl
cmp
mov
shlb
aas
xlat
sbb
iret
es
fdivl
and
enter
add
cmp
fs
and
jg
dec
cwtl
cmpsb
loop
cmc
pop
shl
xchg
xchg
push
movl
or
int
mov
mov
jno
dec
cmp
ljmp
hlt
mov
and
lods
jb
sti
hlt
mov
dec
push
call
addl
js
rol
pop
jmp
shr
clc
push
and
push
inc
jae
sar
push
mov
pop
ret
xchg
mov
push
xchg
ret
mov
adc
mov
mov
xchg
testl
int3
fdivr
sub
push
sub
insl
in
in
xor
sarb
repnz
in
add
shlb
mov
fwait
lods
sbb
addr16
jmp
xor
mov
ud1
icebp
sbb
jne
lret
inc
call
jae
hlt
push
mov
xchg
insb
ret
mov
xor
mov
xor
push
lods
cltd
cmp
out
mov
rcrl
add
ret
fstl
fadd
cmp
out
ror
pop
pop
fs
sbb
jno
pop
hlt
cmpl
lret
sub
fists
inc
out
push
push
mov
bound
xchg
pop
push
mov
mov
out
mov
push
cwtl
sub
lret
xchg
dec
out
lock
rcrl
sbb
sbb
dec
push
and
int3
int
sbb
push
mov
sub
pop
rcll
aaa
mov
mov
bound
push
pop
lret
dec
pop
cmpsb
shlb
inc
xor
loopne
xchg
pushf
or
jns
pop
push
dec
dec
loopne
dec
add
pop
daa
pop
cmc
dec
jge
sbb
sbb
add
xchg
fnop
fidivl
repnz
stos
inc
adc
sub
xchg
les
cmpb
outsb
clc
or
loop
cltd
jecxz
cli
leave
inc
push
pop
in
arpl
enter
push
jns
mov
stos
xor
fnstenv
lods
nop
add
loope
adc
stos
lret
pop
pand
cmp
adc
ret
push
add
jbe
mov
adc
repnz
loope
and
or
clc
sub
test
nopl
cmp
xor
sub
enter
jae
xor
sub
pop
mov
push
pop
les
mov
mov
lds
lret
cmpsl
addr16
inc
rcll
iret
lcall
pop
scas
sahf
jmp
fwait
xchg
xchg
scas
inc
xchg
push
or
push
jmp
mov
add
mov
mov
push
ds
mov
rorb
pop
xchg
pop
lods
stc
mov
mov
sub
sbb
call
xchg
pop
in
addr16
push
sub
xchg
xor
xor
lds
sub
pop
jl
inc
jp
cld
mov
stc
testb
adc
js
mov
add
adc
inc
sbb
aaa
movsl
movsl
ja
add
stc
jns
lret
xchg
sub
movsb
scas
mov
repnz
movl
jge
sbb
lds
cmp
aad
inc
pop
adcl
call
pop
icebp
mov
push
pop
and
xchg
popf
popa
out
inc
jne
das
ljmp
mov
jl
das
xchg
adc
mov
or
mov
jle
inc
push
xor
div
jae
insl
pushf
aas
jae
imull
into
pop
js
fnstcw
add
cmpsl
outsl
mov
xchg
imul
xchg
bound
xchg
mov
out
je
rcr
jnp
imul
adc
ss
inc
mov
mov
add
inc
xchg
mov
psubb
adc
lods
not
shlb
inc
sub
or
jo
push
add
pop
add
div
lret
sbb
or
iret
jmp
nop
sub
push
adc
adc
inc
dec
xor
xlat
xor
xorps
pop
push
sbb
inc
jl
and
div
pop
enter
inc
push
jns
jo
ja
xor
mov
js
mov
xor
stos
dec
cmp
cwtl
lock
dec
rorb
sti
icebp
mov
mov
inc
jg
pusha
adc
xchg
xor
rorb
sub
out
mov
ffreep
jno
lahf
lock
dec
stos
push
out
hlt
adc
and
les
sub
ja
sub
outsb
fcmovnu
scas
fs
outsb
je
inc
and
pop
aad
cmpsl
jp
adc
push
fistpll
mov
cmpsl
rcl
dec
xor
sbb
jb
and
fisttpll
stos
test
or
jbe
mov
cltd
sub
fidivrs
scas
or
pop
out
xchg
adc
add
pusha
mov
inc
enter
mov
jnp
shl
repz
pop
jle
ret
iret
push
push
push
sbb
xchg
add
shll
popa
push
mov
shl
jae
and
pusha
daa
test
jbe
rcrb
cmp
stos
scas
dec
mov
add
add
out
push
je
lcall
dec
insb
cld
outsb
pop
mov
sub
sub
addr16
mov
sub
popa
push
pusha
xchg
jo
mov
call
dec
fimuls
cmp
cmovp
pop
cmp
dec
sub
bound
or
cmpsl
adc
lea
push
clc
dec
xchg
push
inc
add
lret
adc
mov
or
fnstcw
dec
mov
roll
lods
mov
cmp
fcmovnu
movsl
sbb
pop
test
sub
dec
rorl
and
loopne
pop
inc
or
or
and
ret
dec
aam
in
lods
inc
and
lock
and
xor
std
int
jg
push
test
test
imul
push
mov
out
out
xchg
dec
adc
mov
inc
mov
test
jno
aas
jp
fidivrl
test
stos
loop
test
das
pop
push
aaa
je
mov
imul
icebp
sub
sbb
lds
mov
fwait
jno
aaa
sub
or
ret
loopne
mov
lods
loop
xlat
xchg
out
scas
cltd
dec
imul
cs
or
cmp
daa
insb
call
inc
or
push
insb
sahf
outsl
fs
aas
mov
mov
mov
mov
jo
rcrl
dec
push
aaa
loop
or
cmpsb
inc
mov
and
fidivs
push
fs
xor
hlt
push
inc
dec
or
lahf
push
and
xchg
fwait
xchg
les
mov
jp
adc
pop
pop
out
mov
add
ret
leave
jp
xchg
xchg
sbb
inc
sbb
subl
fisubrl
cmpsb
push
fwait
inc
mov
push
xchg
mov
pop
psrad
cmp
sti
sub
inc
aas
sbb
movsb
imul
jecxz
add
cwtl
mov
loop
fnsave
pop
call
cs
imul
in
jnp
cs
ljmp
sub
mov
mov
push
adc
int
movsb
dec
pop
aad
jecxz
mov
push
mov
ss
mov
pop
cmp
sbb
mov
ss
add
iret
mov
add
arpl
fstl
push
dec
stos
jns
cli
rclb
in
lea
imul
mov
add
shlb
cwtl
pop
addr16
sub
sbb
add
icebp
push
cmp
pop
data16
push
jp
out
xor
sub
mov
dec
jnp
aas
daa
or
aad
push
loop
sbb
fldenv
xchg
fadd
je
jo
cltd
psubsw
inc
sbb
ret
into
lahf
cmc
push
outsb
scas
nop
cmp
lods
jnp
jp
cwtl
in
and
mov
pop
adc
push
or
fcomps
add
sub
mov
sub
rorb
movsl
ljmp
inc
xor
mov
push
lock
mov
aam
movsb
outsb
icebp
pop
adc
cmc
lock
sub
in
movsl
in
cwtl
test
jbe
ret
test
cli
jecxz
fdivr
ficompl
inc
inc
cmpsb
scas
mov
loope
fsubp
sbb
loop
add
push
orb
push
sti
shr
add
pop
rcr
or
xlat
pop
mov
add
push
stos
pushf
addl
xchg
or
cmp
scas
inc
or
adc
call
jp
and
cld
repnz
push
push
decl
and
mov
lds
or
cmc
daa
ficoml
xor
ret
xchg
mov
mov
lcall
sub
sbb
gs
xor
out
icebp
cmp
add
shrb
mov
pop
pop
scas
mov
test
iret
inc
ret
adcl
mov
pop
insb
xchg
fnsave
pop
daa
sbb
dec
lahf
cmp
jl
xor
imull
cmp
das
popf
fwait
insl
imul
xor
aas
arpl
stos
inc
test
repz
and
scas
fstps
cmp
imul
scas
outsb
icebp
ret
jg
sbbl
in
adc
pop
test
hlt
cmp
fists
std
xchg
lods
inc
lcall
loopne
jmp
shlb
lret
cmpsl
dec
dec
push
jge
pop
stos
mov
test
addl
push
sub
dec
repz
inc
ja
bnd
cmpsb
daa
loopne
roll
mov
in
daa
lods
dec
in
aad
mov
out
call
mov
push
mov
stc
les
adc
mov
jmp
cs
sbb
mov
fiaddl
mov
mov
mov
pushf
jl
and
inc
jmp
gs
sbb
inc
pop
cwtl
and
mov
popf
dec
nop
mov
lahf
adc
pusha
dec
fdivrs
jae
lds
test
sahf
jnp
or
out
scas
inc
mov
pop
inc
mov
mov
loopne
in
pop
dec
arpl
mov
mov
daa
imul
aad
push
dec
mov
cmpl
inc
js
and
jns
fdivs
stos
lods
push
cmp
pop
nopl
jl
stc
out
mov
jo
stos
daa
mov
scas
mov
and
sbb
fstl
jo
lds
and
aaa
xchg
stos
sbb
and
xor
inc
adc
and
mov
mov
in
fs
mull
pop
out
sub
mov
inc
sub
push
dec
fidivl
jecxz
fiadds
and
ret
inc
xchg
sbbl
and
jb
imul
arpl
mov
cmp
and
int3
xchg
adc
sub
cmp
fwait
ds
leave
test
push
cmpsb
xchg
lock
rcll
addr16
xchg
push
mov
xchg
push
ret
test
je
daa
stos
out
out
les
inc
mov
aaa
aad
cs
pusha
push
mov
mov
xor
call
jge
mov
and
xor
mov
dec
cld
pop
leave
mov
movsl
inc
cmp
jb
ss
jbe
sub
notl
mov
fidivrs
int3
ds
adc
fnstenv
push
adc
xchg
inc
ds
fcomps
xchg
shr
sbb
xor
mov
and
mov
xor
jae
std
iret
pop
xchg
mov
repnz
add
push
sub
xor
xlat
rcll
sahf
test
push
mov
stc
test
or
into
outsl
sti
and
dec
aam
jmp
push
pop
ret
sbbl
icebp
call
mov
loop
xchg
jb
sub
fsubrs
loop
out
stc
xlat
xlat
dec
pop
mov
popa
push
inc
inc
popa
idiv
les
mov
jbe
push
mov
outsl
adc
test
cmp
ret
cmp
out
mov
scas
lods
arpl
pop
add
arpl
cmp
cmp
fmull
aam
mov
andb
xor
stc
pop
sub
pop
aad
cli
push
test
daa
push
subl
aad
addr16
push
push
jmp
neg
icebp
cmpsb
jbe
adc
roll
inc
push
adc
mov
add
fdivrs
movsl
js
aad
dec
int3
pslld
xor
lea
lcall
dec
in
ret
inc
out
hlt
sbb
iret
xchg
mov
sub
push
mov
insl
mov
add
mov
imul
insl
inc
stos
adc
push
dec
bound
xchg
mov
pop
jmp
in
jp
jl
ljmp
addr16
cltd
scas
ret
test
sbb
dec
sbb
mov
jge
push
and
mov
call
add
cli
outsl
lock
gs
add
jns
insb
sbb
lds
push
pop
pushl
dec
push
inc
bound
aam
shlb
in
mov
mov
push
imulb
push
mov
stos
nop
int
aad
icebp
out
mov
pop
dec
std
daa
hlt
fsts
mov
mov
add
iret
sub
inc
fcom
test
push
scas
ja
aad
cmp
adc
out
orl
sub
push
cmp
ljmp
jge
mov
ljmp
sarl
scas
xchg
leave
stc
mov
mov
fiaddl
sti
popf
das
adc
lock
xor
fsts
jno
pop
mov
int3
pop
jne
jge
xlat
xchg
insb
mov
cwtl
sahf
mov
sub
sbb
xchg
xchg
addr16
ret
cmp
pop
cltd
push
push
aam
sbb
lahf
cmpsl
out
or
je
cmp
jae
or
xorb
xlat
mov
lret
ljmp
xchg
xchg
and
pop
gs
sub
add
mov
imul
addr16
and
outsl
shr
js
test
fs
in
cmpsb
cltd
or
push
imul
mov
cltd
and
or
fmull
xchg
cmp
pop
xchg
cld
sbb
mov
popf
daa
xor
out
xchg
arpl
xchg
sahf
or
ljmp
test
fs
xor
jle
pop
shlb
hlt
dec
lods
xchg
inc
lds
pop
stc
mov
dec
lock
pop
xor
out
xor
jl
cmp
dec
in
mov
sbb
lock
jno
xor
insl
adc
push
mov
lods
xor
outsl
and
adcb
push
outsl
repnz
aaa
aad
aad
adc
or
aam
adcb
pop
and
mov
int
fdiv
or
sti
lret
test
std
or
repnz
mov
out
dec
push
pop
icebp
mov
cld
cmp
cli
xchg
fyl2x
sbb
add
lret
mov
mov
ss
lea
xor
fisttps
push
ds
jbe
mov
or
aaa
push
std
jae
mov
arpl
ret
insl
mov
jecxz
imull
leave
stos
mov
lods
push
lds
mov
lea
int3
std
xchg
test
movsb
fldl2t
in
cmpl
or
fwait
xor
xchg
add
testl
inc
cmp
test
adc
scas
out
dec
jno
scas
add
pop
inc
jecxz
cmp
lret
jmp
jmp
sbb
lods
push
fisubrl
jae
mov
jle
jecxz
mov
dec
repz
xchg
sub
and
inc
xor
pusha
pop
mulb
jo
insl
pop
pusha
pop
movsl
aas
rolb
pop
mov
mov
dec
adcb
ret
ss
pop
pop
adc
jp
push
sub
or
push
ljmp
cmc
adc
cs
dec
adc
iret
cltd
sbb
mov
fwait
or
divl
inc
xchg
insl
pop
outsb
stos
jno
call
adc
pushl
xchg
scas
adc
mov
push
sti
ja
enter
lea
ficoml
aas
leave
jno
fmuls
or
out
insb
xor
popa
aad
jecxz
or
or
gs
imul
jbe
scas
lcall
shrb
add
cmp
cmpsb
lock
stc
xchg
mov
shll
pop
pop
aad
dec
cli
rcrl
pop
mov
inc
xchg
xchg
insl
sub
nop
sbb
in
mov
pop
test
shlb
decb
mov
mov
lret
jns
push
mov
mov
fwait
mov
inc
push
inc
stos
rcll
shrb
imul
popf
sub
lods
enter
out
gs
sahf
pop
mov
in
loopne
imul
mov
or
inc
icebp
mov
clc
push
jp
popa
popa
js
pop
cwtl
lahf
xor
hlt
and
fisttpl
push
cmp
stc
xor
lods
and
lods
pop
leave
mov
shlb
cltd
fs
or
push
pop
cmc
out
fwait
push
or
or
jp
jmp
dec
sub
add
in
bound
mov
int
pop
adc
insl
dec
dec
popf
push
xchg
inc
daa
lods
push
push
sahf
ret
jne
aas
sbb
pop
movsb
add
push
in
cmp
ret
jns
or
lods
cmp
sbb
leave
jnp
popa
pushw
lock
push
pop
inc
or
sbb
sub
lahf
iret
xchg
or
popa
lea
mov
dec
mov
push
fs
pop
jns
pop
cmpsl
add
or
mov
push
jge
mov
in
aam
idivb
pop
stos
insb
out
jno
rolb
and
pop
inc
lcall
dec
lret
mov
xor
sbb
sbb
lcall
xorl
or
ds
mov
inc
loop
add
or
lods
jle
test
pop
dec
js
mov
and
pop
mov
xchg
lods
in
iret
add
ja
divl
fcomp
mov
mov
push
mov
sbb
sub
inc
popf
popa
push
and
movsb
ljmp
les
pop
xchg
push
jbe
pop
mov
mov
pop
and
lock
sub
xchg
fnstsw
sbb
xchg
imul
aad
and
mov
sub
leave
xorb
fld
or
xor
stos
cs
dec
mov
jl
pop
adc
dec
shll
dec
pop
or
and
sbb
dec
mulb
jnp
sti
adc
scas
mov
dec
out
mov
cli
aas
xor
hlt
cmc
add
negb
or
outsb
xchg
repnz
inc
aas
jnp
sarb
out
nop
dec
sbb
cmc
pop
adc
cmp
push
ja
leave
jmp
arpl
bound
cmp
dec
in
xor
pop
jbe
enter
mov
or
inc
mov
insb
jp
cmpl
push
and
cmp
sub
fnstcw
adc
popf
out
ret
repnz
sub
jl
leave
aaa
inc
addr16
pusha
mov
test
adc
das
mov
sbb
cmp
clc
fcoms
andb
bound
aad
ljmp
xchg
lods
pop
jo
icebp
pop
insb
sub
cltd
push
inc
out
ret
scas
jns
jne
adc
pusha
sub
dec
cmp
lret
xor
add
sbb
gs
xchg
pop
aas
mov
loop
mov
sbb
stos
mov
aaa
in
mov
push
adc
mov
pop
sahf
cli
mov
inc
sbb
js
or
or
ret
inc
ret
sub
arpl
xor
popf
test
and
push
push
sbb
cmp
ja
mov
cwtl
pushf
mov
cmc
pop
and
bound
fisubl
out
adc
or
jp
mov
add
mov
mov
jp
mov
mov
insb
mov
lret
in
or
loopne
cmpl
mov
shll
repz
lret
adcb
or
in
mov
or
jmp
push
mov
sub
dec
xlat
pop
punpckhdq
jg
mov
sbb
cmp
icebp
add
lahf
push
inc
lahf
sti
mov
mov
mov
inc
dec
daa
push
cli
dec
es
popf
sbb
inc
mov
mov
cs
sub
pushf
pop
ja
sub
pop
fisubrs
cltd
inc
fldl
dec
jmp
adc
les
out
mov
or
das
add
fdivrs
pop
pop
pop
adc
popf
xlat
sub
cmp
push
mov
cmpl
inc
lock
stos
and
xchg
mov
xchg
cli
xchg
adc
pop
movsb
cmp
xor
cmp
and
add
pop
mov
inc
dec
cmp
cmp
push
ret
lahf
inc
mov
mov
xchg
or
mov
pop
leave
pop
test
icebp
cwtl
jmp
loop
add
mov
mov
fnstenv
and
cmp
cmp
aam
adc
xor
out
inc
mov
cmp
and
and
mov
xor
in
mull
sbb
mov
or
cltd
lea
inc
xor
test
enter
xchg
ret
call
adc
daa
clc
jns
mov
mov
jl
push
xchg
imul
cwtl
jo
cmpsl
sarl
cmp
outsb
nop
fs
push
cmp
add
arpl
sbb
test
icebp
cmp
stos
jmp
cmp
jne
repz
divb
aad
push
xchg
sbb
add
repz
stos
movsb
fbld
cld
shrl
mull
pop
icebp
cs
or
cmpsl
jecxz
test
mov
enter
imul
lds
mov
pop
sub
enter
outsl
lods
inc
xchg
inc
movsl
cltd
test
inc
and
sbb
insl
test
lds
inc
test
in
pop
insb
clc
rcrl
or
add
sar
or
push
cmc
mov
push
push
cltd
cltd
mov
dec
enter
loop
cli
loop
testb
pushf
xor
sti
lahf
or
mov
fnstenv
pop
rcr
fbld
pop
jecxz
sub
ss
mov
sub
rclb
mov
mov
aad
push
inc
aas
jl
mov
dec
js
pmullw
dec
dec
add
inc
dec
dec
mov
shrb
push
xchg
in
xor
sub
mov
mov
fcoms
dec
repnz
mov
sub
aad
jecxz
jo
outsl
pushf
xchg
mov
mov
loopne
movzwl
and
das
test
mov
cmp
lret
ljmp
call
pushf
addr16
sbb
lods
lret
clc
imul
cli
xor
pop
jmp
mov
icebp
mov
daa
fs
jno
jle
out
mov
push
mov
ret
pop
jmp
or
out
cwtl
pop
dec
and
movsl
mov
xor
rorb
push
in
xchg
out
cmp
adc
fucomp
mov
lods
push
push
sarb
and
mov
loope
push
out
loopne
into
dec
jle
sub
das
movsl
movsb
outsl
cltd
push
sahf
jb
sbb
mov
fwait
out
or
mov
stos
nop
sub
int
sti
les
jmp
lret
push
pop
inc
xchg
shlb
mov
dec
addl
push
arpl
dec
outsl
jmp
je
xor
nop
mov
cs
cwtl
rcll
xor
lds
int3
cmpsb
imul
aaa
rcl
xchg
les
imul
fsts
pop
std
mov
out
pop
sub
and
or
leave
xor
movb
adcl
ljmp
dec
enter
inc
mov
cmp
cld
addr16
ret
jae
movsl
ss
popl
mov
xor
test
mov
pop
jecxz
push
dec
ret
mov
pushf
inc
test
adc
dec
aam
cmp
mov
mov
or
pop
aaa
sub
cmp
mov
or
mov
aaa
push
sbbb
out
fs
or
xchg
jg
scas
sbb
xchg
out
sub
push
inc
cmp
jno
cli
mov
adc
mov
stos
sub
loop
adc
call
popa
test
mov
movsl
cs
test
fwait
dec
xchg
leave
addr16
stos
fs
xchg
shlb
aam
aad
mov
adc
inc
mov
lock
lret
xor
adc
ss
inc
jne
movsl
mov
sbb
out
fcoms
loopne
ja
push
lcall
sub
or
loop
xchg
sar
daa
add
nop
xchg
mov
jp
cli
rolb
mov
cs
ljmp
mov
mov
scas
stos
mov
jmp
pop
push
into
xchg
xchg
jle
orl
imul
call
sbb
aas
adc
xor
les
arpl
lret
pop
mov
popa
push
jl
jo
or
mov
lahf
into
mov
adc
dec
stc
aas
add
decl
mov
stos
push
push
dec
mov
mov
and
pop
adc
xor
or
aaa
xchg
iret
inc
inc
mov
in
arpl
in
inc
movsb
jns
pop
icebp
push
or
mov
cmp
pop
xor
mov
outsl
inc
sbb
jge
push
add
ljmp
adc
hlt
mov
popf
mov
lret
cwtl
push
stc
xchg
mov
mov
push
mov
and
adc
jmp
mov
loopne
in
xor
mov
dec
les
mov
int
cmp
sbb
inc
mov
movsl
cmpsl
mov
andl
cld
sti
cltd
sbb
and
pushf
push
cmp
ss
cmp
and
notl
push
pushfw
fists
fidivs
inc
in
add
mov
cld
and
lods
iret
push
lcall
mov
and
repz
pop
pop
lret
idiv
es
data16
mov
cmp
xchg
test
or
lcall
lcall
je
push
lret
hlt
fsubrl
jmp
fcmovu
push
or
adcb
cmp
inc
mov
mov
add
in
mov
mov
dec
enter
iret
das
nop
pop
loopne
push
jno
stos
adc
js
imul
imulb
loop
movsl
in
dec
push
push
pop
mov
fildll
adc
mov
sti
sub
ficoml
shr
mov
js
dec
push
jb
or
jle
cmpsl
push
jnp
out
jge
sahf
cltd
sub
in
testl
outsb
out
jb
inc
add
mov
out
fmull
or
jns
aas
inc
shrl
inc
shrl
or
fstl
sub
pop
aad
aad
sub
mov
or
loop
jge
scas
scas
int3
xchg
popa
push
pop
lock
xor
pop
in
fwait
pop
ret
dec
or
xchg
push
xchg
ds
js
sub
sbb
or
aam
inc
add
dec
xor
adc
movsl
lea
je
in
mov
out
enter
add
xchg
imul
adc
xchg
mov
out
repnz
ss
out
or
xchg
mov
xor
lcall
push
lds
aam
daa
aam
call
jo
inc
inc
sti
pop
addb
shlb
or
xchg
mov
inc
movsb
movsl
ficomps
xor
nop
les
ret
cs
dec
pop
pop
loope
das
cltd
jmp
je
lods
push
sbb
cmpsb
cld
ret
and
push
call
mov
sbb
dec
jnp
dec
enter
imul
shll
stos
incb
xor
into
aam
into
hlt
lret
pop
mov
fisttpll
sti
adc
pushf
and
sahf
xor
mov
mov
notl
jns
out
insb
add
test
push
inc
mov
roll
xor
push
dec
lret
xchg
add
sbb
ss
xchg
or
ss
xchg
repnz
inc
cmpsb
lret
cltd
sti
inc
shlb
outsl
bound
outsl
pop
ljmp
push
sub
gs
dec
fisubl
les
ljmp
loopne
hlt
in
stos
mov
pop
mov
insb
xchg
jle
les
or
out
xchg
add
shll
sbb
sub
bound
gs
jg
adc
lea
sub
ja
cmp
lods
loop
jge
and
rcrb
shl
out
cltd
lea
xchg
clc
add
or
cld
repnz
lods
dec
mov
push
shrb
dec
dec
out
push
dec
fcompl
outsl
outsl
pusha
mov
testl
pop
push
andl
mov
sbb
dec
or
insb
js,pt
jg
out
dec
inc
mov
out
imulb
imul
cmp
test
fwait
enter
je
cmp
in
jp
ss
out
push
shlb
ljmp
pop
cmp
and
je
cs
pushf
cmpsb
sub
jge
pop
out
jl
sub
jo
and
in
cli
sbb
outsl
pop
cmpsb
hlt
ret
pop
mov
pop
fwait
movb
pop
xor
sahf
aad
or
scas
scas
cltd
testl
into
mov
gs
int
mov
jne
jle
dec
inc
pushw
xor
daa
aas
hlt
mov
sub
cmpsl
scas
push
sbb
jmp
std
cmp
xor
nop
mov
xor
mov
pop
iret
repnz
bound
movsl
mov
iret
pop
xor
loopne
fists
inc
pop
add
mov
push
fs
push
out
xor
adc
aaa
lahf
or
jnp
inc
adc
or
cld
aam
lahf
and
jae
cld
pop
popa
les
popa
stos
xor
dec
dec
loope
inc
aaa
movsl
mov
inc
and
in
popf
negl
pop
mov
inc
mov
xchg
clc
fs
mov
sbb
scas
sbb
das
and
out
jg
fs
or
ljmp
aaa
jmp
rcrb
jg
sbbl
inc
mov
fcoms
into
pop
jmp
mov
aam
xor
xchg
cli
pop
cmp
lahf
fldl
mov
popa
ljmp
mov
jb
cmc
inc
pop
inc
pop
mov
and
loopne
icebp
xor
shll
pop
int
jo
jp
xchg
js
pop
lahf
clc
dec
pusha
negl
sub
dec
sub
rcrb
jne
movsl
aaa
mov
pop
lds
out
stos
call
shrb
icebp
dec
imul
ret
mov
fstpl
fildll
into
cmp
data16
xchg
arpl
fsubrl
sub
aad
icebp
xor
ret
jnp
lods
jle
lea
mov
or
jl
int3
mul
and
and
push
push
push
mov
push
test
into
sbb
jno
jecxz
daa
add
mov
ljmp
ja
xor
mov
aad
pop
or
sbb
jmp
and
add
mov
fidivrl
std
or
les
mov
dec
adc
loop
lock
jl
mov
xor
xorb
push
pop
popf
mov
mov
mov
add
push
mov
push
mov
je
ficompl
or
sbb
and
fwait
add
pushf
and
adc
int3
sbb
push
loope
lds
sub
icebp
dec
mov
inc
cld
std
test
es
mov
dec
inc
pop
mov
out
roll
jnp
movsl
adc
or
cltd
bswap
lods
aad
mov
adc
mov
dec
out
sub
xor
bound
mov
cmpsb
fucomi
out
xchg
jne
repnz
cmp
scas
jns
into
pop
cmpsb
aad
mov
aam
xchg
les
jo
cmp
scas
dec
pop
cmp
scas
xor
fcmovnu
in
mov
pop
mov
or
rol
test
in
mov
sahf
mov
testl
fs
je
jmp
mov
jnp
jl
test
pop
mov
scas
mov
jns
add
inc
push
adc
push
jnp
fs
cmc
jno
add
and
jmp
cmp
sub
lds
outsb
cmp
sub
xchg
cmc
sti
pop
mov
mov
fsqrt
test
ja
ja
cmc
mov
jle
cmp
imulb
data16
lahf
enter
push
mov
jg
and
lret
sbb
loope
ja
jo
cmp
mov
or
push
sub
mov
cmpsb
mov
rcrb
je
jb
stos
pushf
es
mov
pop
pop
sbb
adc
push
js
int
dec
mov
mov
adc
jno
aad
add
or
sbb
outsl
notl
out
dec
fisttpl
jbe
int3
cld
movsb
xchg
and
adcb
mov
or
mov
iret
cmpsl
insb
sbb
out
xor
lock
xor
mov
test
leave
scas
pushl
xchg
and
mov
adc
mov
shrb
jbe
add
sub
jnp
subb
js
movsl
xor
adc
add
fmull
repnz
ss
mov
repnz
rcl
inc
inc
and
loopne
mov
xor
cltd
push
xchg
shll
fcmove
adc
and
nop
sti
adc
rorl
cli
call
sub
mov
and
add
in
lea
and
in
fsubl
int3
cmc
sub
xor
push
pop
shl
pop
mov
and
jnp
mov
in
mov
mov
ss
cmp
cmpsb
pushf
pop
mov
leave
xchg
xorl
mov
fs
mov
dec
pop
xchg
cmp
pop
pop
pop
rolb
mov
lret
mov
sub
shl
repz
lcall
pushf
lds
ljmp
ds
into
add
int3
lea
imul
jne
push
call
sbb
leave
lahf
pop
lahf
adc
jp
cmpl
mov
icebp
jne
jae
push
ss
add
xor
push
sbb
cmpsl
das
xchg
inc
mov
imull
xchg
inc
outsb
pushf
aam
xlat
ss
xchg
jle
ret
jle
xor
insb
outsb
das
mov
add
adc
sub
mov
mov
mov
mov
and
xlat
imul
aas
sub
flds
in
mov
and
stc
xor
fs
push
adc
mov
adc
in
rolb
loopne
adc
inc
jns
test
sahf
sbb
sub
mov
in
rorb
pop
sub
push
sub
out
fstpl
jno
xchg
mov
lock
leave
mov
frstor
shrl
xchg
test
sti
cli
hlt
imul
test
je
jns
jne
mov
xchg
push
or
cs
jle
inc
dec
lock
sbb
cmp
into
xor
movsl
cltd
dec
xchg
repz
addr16
ja
xchg
aad
scas
sti
jle
mov
mov
pop
or
jecxz
mov
inc
inc
outsb
push
sbbb
pop
mov
out
and
mov
mov
stos
or
or
adc
jb
add
adc
sub
into
cli
movsl
push
cmpsl
xchg
cmpsb
aaa
aad
cmp
push
mov
jbe
fwait
out
fwait
adc
cltd
dec
insl
add
xor
outsl
sub
and
cmp
ljmp
pop
loop
shl
pop
fistpll
xchg
xchg
andl
and
xor
and
imul
add
sbb
jl
jne
pop
fbstp
pop
insb
insl
rcrb
mov
adc
or
loope
push
popa
out
mov
lahf
repz
nop
push
xchg
enter
lods
inc
xor
xor
in
outsl
enter
cmc
pop
jno
pop
fs
jl
rcrl
in
cmp
out
xchg
xor
or
out
xor
stc
loopne
mov
popa
cmpl
in
mov
sbb
mov
sub
mov
fwait
test
shr
je
adc
sahf
sti
mov
jne
cmp
insb
jbe
outsb
sbb
push
sti
loop
lahf
std
xchg
push
clc
xchg
jb
cmpb
jno
in
cli
into
in
pop
push
xlat
mov
sub
mov
push
xchg
mov
int
imul
loopne
inc
push
movsl
and
xchg
pop
add
jo
sbb
xchg
inc
outsb
out
and
arpl
fmuls
sbb
mov
fmull
mov
xchg
repz
sub
insl
or
inc
clc
cmp
shll
daa
jecxz
mov
movsl
sarl
and
mov
test
adc
imul
rorl
mov
rclb
dec
jb
leave
imul
ljmp
push
jmp
push
lock
xor
fldcw
lods
xor
mov
ficomps
lret
and
lcall
and
mov
jae
push
addr16
sarl
xchg
mov
push
cld
xorl
sbb
or
or
cld
mov
or
cmp
xor
iretw
pop
out
lahf
mov
pop
ficomps
mov
xchg
lods
dec
popl
aam
jo
inc
push
and
imul
jo
imul
rorl
ret
push
rorl
jle
pop
or
int3
pushf
or
inc
fstps
cmp
inc
jns
sub
sahf
frstor
je
ds
jmp
dec
fistl
xor
push
xor
mov
cltd
inc
pop
add
mov
xor
rcrl
mov
dec
push
xor
xchg
hlt
cli
leave
cwtl
incl
addr16
or
xchg
mov
ret
cmpsb
std
xchg
push
inc
rclb
std
iret
xor
add
hlt
lret
enter
je
and
jne
dec
popa
mov
push
test
dec
push
dec
xor
mov
ljmp
mov
stos
mov
xchg
sub
jno
push
addr16
mull
adc
fucomi
dec
mov
pop
jl
aaa
pushf
lods
lea
add
aad
pusha
add
mov
push
add
adc
pop
cmp
mov
cmp
hlt
and
push
sub
cmpsb
pop
cmp
mov
gs
jbe
jle
mov
dec
add
jmp
xchg
pusha
cmp
and
out
aas
xchg
pop
ds
aad
sahf
push
push
test
rcrb
sub
mov
pop
pop
fnstenv
cmp
mov
push
data16
pop
out
mov
lods
fstpt
push
xchg
mov
test
push
in
call
xor
stos
mov
out
push
mov
aad
cmp
dec
daa
mov
mov
mov
mov
mov
loopne
xor
mov
inc
jns,pn
xchg
in
xchg
mov
mov
xorb
mov
dec
gs
add
into
dec
in
int
push
adcb
mov
push
int3
pusha
add
repz
fsubl
dec
int3
mov
sti
clc
shrb
andl
pop
adc
pusha
cmc
cmp
lret
lea
loopne
mov
jo
fxtract
mov
mov
mov
pusha
mov
fadds
ds
stos
scas
scas
push
cmp
ret
dec
mov
insl
js
sbb
dec
sbb
add
cmp
jb
leave
imull
mov
mov
pushf
cmpsb
mov
fisubrl
test
push
outsl
push
inc
add
jp
mov
sbb
xchg
push
cmp
pop
cmp
push
into
ds
icebp
push
mov
daa
rclb
sbb
add
mov
cmc
cwtl
mov
push
mov
rolb
test
inc
or
incb
push
xor
call
cltd
cmpsl
sbb
push
jae
adc
jmp
pop
mov
add
and
xchg
adc
and
pop
jae
mov
popa
jne
inc
sbb
sub
imul
adc
mov
outsb
mov
xlat
push
dec
lds
pop
pushf
push
sbb
push
int
jnp
xchg
xor
or
xchg
sbb
sub
jno
mov
xor
fnstsw
lahf
or
fmul
daa
and
lods
sub
movsb
icebp
stos
das
mov
test
adcb
fisttpll
call
iret
cmp
adc
pop
jbe
bswap
dec
psrlq
flds
out
popf
stos
mov
cld
mov
insl
scas
repnz
insb
insb
jp
lahf
aam
adc
addr16
sub
cmpsl
push
mov
pop
push
inc
aas
jo
fbld
out
add
push
sbb
insl
mov
rcrl
pop
or
add
dec
les
pop
aaa
sub
je
or
sbb
jg
imul
cld
fistl
gs
call
lods
mov
test
inc
mov
dec
fdivl
lods
lods
iret
mov
cwtl
aad
aad
inc
out
mov
push
fnstsw
ja
mov
or
lds
push
scas
xlat
mov
dec
or
xchg
cwtl
mov
pop
or
call
xchg
fldcw
nop
mov
push
xchg
bound
push
js
sbb
mov
pop
inc
lock
ret
jb
lcall
pop
out
int3
enter
pop
scas
or
cmp
xchg
out
std
sbb
xor
mov
and
dec
imul
push
jg
mov
sbb
jb
jbe
arpl
sub
mov
insb
mov
and
in
jbe
jbe
pop
loope
sar
push
inc
inc
mov
into
sbb
imul
mov
roll
cmc
addr16
xor
test
mov
pop
ror
data16
scas
cmp
dec
sbb
mov
adc
adc
mov
mov
pop
fisubrl
aas
pop
sarl
push
test
mov
jle
or
repnz
mov
or
call
dec
mov
and
subl
loopne
dec
mov
mov
jo
mov
mov
lret
dec
andl
pop
daa
mov
xchg
rclb
mov
loopne
mov
outsl
ljmp
das
cmp
aaa
push
mov
call
jb
mov
mov
dec
push
bound
add
adc
pop
call
xchg
pop
jns
sub
jns
je
sub
jp
mov
fwait
into
jecxz
das
cmp
sbb
xor
push
mov
add
mov
or
ss
jno
cwtl
call
sub
lods
aam
cmc
es
or
jmp
adc
adc
in
nop
push
inc
xor
aad
ss
xchg
jmp
cmpsl
sarl
inc
jmp
icebp
xchg
sti
jo
mov
cmc
jno
and
pop
adc
jg
into
adc
inc
pop
ret
movsb
mov
mov
jl
inc
stos
das
adc
xchg
jecxz
or
add
jle
insl
outsb
push
push
stc
adc
add
sub
sbb
ss
rorb
adc
out
inc
stc
outsl
dec
mov
outsb
push
mov
push
mov
dec
ret
pop
mov
into
aaa
xlat
mov
push
sub
mov
movzbl
xchg
dec
movsb
cmp
mov
xor
fcmovnb
or
cmp
cmpsb
clc
jmp
push
and
stc
fwait
jmp
jbe
jno
ja
out
jbe
mov
dec
xchg
sub
inc
jo
xor
mov
call
dec
push
ret
push
int3
push
aam
mov
idivl
add
jl
jo
sahf
push
xorb
mov
testl
mov
out
mov
sti
in
loopne
nop
push
aaa
ficompl
mov
adc
push
xorb
sub
xor
sbb
and
fucomp
add
mov
xchg
sahf
jge
push
pop
add
les
lods
adc
jg
inc
xor
nop
mov
aas
sub
rclb
inc
sub
push
insl
cmp
add
icebp
jmp
pop
mov
pop
addr16
and
clc
fadds
cmpb
mov
or
in
xor
cmpsl
repz
xor
fldt
push
roll
xor
mov
vpand
and
xchg
daa
out
daa
pop
ret
icebp
js
cmpsl
push
adc
rorb
mov
adc
dec
sbb
addr16
and
mov
cmpsl
cmp
or
mov
fnstenv
sub
mov
shll
dec
cmp
xor
mov
or
pop
out
sahf
rcrb
or
loop
sub
lea
adc
jbe
inc
call
in
xchg
push
xor
sbb
or
or
ljmp
mov
js
in
sbb
jns
sub
lret
jmp
mov
ja
cmp
sbb
jne
adc
or
mov
sbb
outsb
pop
xchg
scas
leave
mov
addr16
loopne
ljmp
ljmp
in
pop
mov
loop
pusha
addr16
cmc
adc
hlt
lret
adc
and
cmpsb
mov
int3
adc
popl
mov
add
jg
sub
mov
jp
push
inc
push
fisttpl
pusha
jmp
sub
sbb
addr16
xchg
add
mov
mov
adc
xchg
popa
int
pusha
sbb
cmp
pop
sbb
in
ljmp
mov
inc
and
subl
test
sbb
test
or
inc
test
stc
and
jbe
rorl
dec
add
test
or
es
pop
subb
mov
stos
xchg
sub
xor
xor
mov
cmp
leave
push
mov
rorb
outsl
ljmp
mov
icebp
push
ret
inc
cmp
sbb
ret
decl
jo
cmpsl
xor
push
or
adc
cmpsb
dec
enter
rolb
addr16
nop
sar
lcall
cmp
xor
jle
mov
in
jge
aaa
aam
outsb
ja
inc
xor
add
ret
mov
or
sti
dec
add
maxps
mov
in
xchg
es
pop
aad
es
hlt
xor
clc
cmpsl
lods
sub
popa
lret
not
sbb
or
adc
xchg
mov
in
pop
movsl
in
imul
jo
push
pop
and
mov
dec
inc
mov
add
data16
add
and
aas
fdivl
xchg
divb
push
mov
xchg
ljmp
mov
sub
rcrl
sbb
add
addl
outsb
sbb
pop
mov
out
sbb
or
or
lret
dec
dec
mov
push
mov
aas
adc
ret
add
frstor
inc
push
inc
iret
pop
jp
cld
push
rcrb
mov
fistpll
mov
adc
mov
and
xchg
in
and
dec
std
jle
mov
xor
shrb
push
popf
adc
dec
ja
test
cmpl
rclb
mov
cmpsb
pushf
daa
lds
sub
pop
out
mov
push
bound
mov
or
mov
out
lock
lret
and
aad
outsl
dec
rcll
jns
mov
sub
pop
sub
jg
pop
in
xchg
mov
imul
mov
pop
mov
nop
inc
mov
xchg
xchg
dec
testb
clc
rorl
repz
fstps
mov
sbb
out
cwtl
add
test
shll
pop
adc
push
aas
jno
push
sub
xchg
mov
addb
cmp
mov
mov
inc
leave
lods
xchg
repnz
push
fsubrl
push
xor
test
inc
xor
fistpll
movsl
sbb
push
adc
adcl
and
jp
daa
aaa
push
fldcw
inc
lret
cmp
outsb
dec
xchg
arpl
push
rclb
push
and
test
inc
cld
adc
call
jmp
or
jge
mov
test
mov
dec
mov
divl
pop
xor
stos
enter
fs
pop
dec
sub
add
xchg
add
popa
jl
push
fdivl
les
leave
into
cltd
pop
dec
lahf
sub
mov
loop
or
fwait
out
xor
test
push
scas
ljmp
mov
mov
or
aas
lea
int
cwtl
neg
mov
out
lahf
dec
enter
addr16
inc
lret
inc
or
ficoml
loope
inc
orl
xchg
mov
mov
mov
icebp
xchg
pop
lods
imul
adc
rorb
xchg
xchg
lods
cwtl
adc
fwait
lret
sbb
mov
mov
inc
hlt
not
cmc
xor
jo
mov
call
popf
cmpsl
cs
pop
mov
jle
cmp
pop
mov
mov
stc
mov
es
loope
cmpsb
dec
icebp
dec
adc
out
xchg
dec
mov
dec
xor
mov
in
fmuls
add
into
add
shl
mov
jno
push
pusha
rcr
xchg
daa
push
jmp
cmpsb
lea
das
mov
and
stos
out
popl
roll
mov
sub
cs
mov
xchg
in
lret
mov
fwait
sar
inc
cld
pusha
and
addr16
out
dec
ss
and
add
mov
sub
adc
enter
sub
fcmove
aas
stc
push
push
into
dec
and
leave
fidivrl
cmpsb
xor
xor
ret
jae
jo
insl
dec
psrlq
ret
ja
adc
inc
xchg
mov
mov
fcmovu
insb
out
or
mov
inc
imul
ret
mov
inc
scas
jbe
stos
mov
mov
push
aaa
mov
inc
rorb
mov
mov
daa
dec
sub
push
mov
mov
xchg
addl
push
mov
xor
pop
mov
pop
add
push
push
and
mov
scas
xchg
xchg
pop
pop
fstl
mov
inc
stos
stos
je
mov
xchg
inc
cld
mov
scas
adc
fs
outsb
jbe
cli
loop
xchg
rcrl
jmp
out
outsl
movsb
dec
adcl
sahf
sahf
push
psubusw
cmp
shll
dec
push
in
dec
ret
or
test
push
ror
add
bound
or
dec
mov
or
out
mov
out
adcb
and
dec
imul
iret
fsts
xor
ret
sbb
mov
jmp
or
push
jle
ret
fistpll
and
cwtl
and
enter
mov
inc
mov
mov
xor
and
push
add
dec
xchg
ret
jl
sub
jnp
adcb
mov
sbb
inc
lret
inc
scas
enter
stc
rcr
xor
test
imul
sub
mov
repz
xchg
jecxz
push
sbb
cmpsl
pop
push
loope
pop
push
test
imul
xor
inc
mov
or
aam
das
xchg
adc
inc
adc
xlat
jmp
jne
stc
add
push
mov
sub
cs
xchg
xchg
aas
popf
icebp
or
std
dec
cs
lcall
loopne
lods
adc
push
lock
repz
xchg
ja
or
push
fmuls
outsb
int3
dec
addb
adc
mov
loop
mov
cmpsl
dec
dec
fcoms
popa
adc
mov
fwait
mov
ja
xor
inc
inc
jb
fld
inc
repz
hlt
jns
inc
push
enter
add
cmp
xor
test
fcoml
aas
out
and
mov
test
jne
fmulp
mov
cld
push
mov
ret
inc
pop
dec
aaa
insl
dec
jo
mov
insb
add
pop
ljmp
xchg
add
aas
lods
jbe
xor
cmp
jmp
popf
aas
xor
repnz
roll
repnz
loop
test
or
push
pop
lods
adc
mov
dec
mov
orl
xor
mov
dec
dec
fcmovu
inc
sbb
mov
sub
and
push
pop
push
push
rcrb
push
mov
mov
mov
insl
dec
das
push
xchg
mov
push
cltd
push
cli
mov
cmp
shll
jp
inc
setbe
mov
cmp
sbb
int
loopne
js
iret
push
jns
iret
push
imul
pop
testl
sub
dec
pushf
loope
outsb
out
sub
jp
aas
pop
lret
push
xchg
push
cmp
stc
sub
cli
je
icebp
pop
repz
out
repnz
inc
adc
adc
xorb
xchg
lahf
mov
cmp
pop
lret
dec
cmp
int
cmpsl
aas
pop
xchg
adc
inc
dec
inc
test
mov
repnz
push
in
inc
cmp
stc
adc
xor
add
or
popf
aad
pop
jecxz
stos
dec
xchg
in
idivb
inc
movsl
adc
inc
fistl
mov
inc
xchg
and
or
outsb
sub
jecxz
sub
aas
inc
pop
mov
or
push
mov
mov
and
clc
out
cli
xor
cmp
xchg
fisubl
les
or
xchg
in
xor
cmpsb
cli
das
pop
add
cmp
mov
aas
or
cmp
jle
bound
shlb
inc
fldcw
dec
jb
popa
fwait
iret
fsubrl
mov
sbb
clc
outsb
jnp
mov
in
pop
or
or
sub
repnz
jl
imul
mov
adc
lea
fsubrl
mov
push
dec
mov
dec
nop
popf
mov
sub
xchg
test
pop
lahf
pop
into
pop
pusha
aas
test
pop
pop
loopne
jne
ja
das
dec
pop
lods
call
jo
jae
pop
mov
mov
xlat
out
adc
outsb
inc
cmp
push
imul
cmp
mov
pop
inc
mov
mov
insl
dec
mov
push
fisttpl
fstps
pop
ss
sbb
lock
pop
cltd
cmp
loop
xor
adc
test
xchg
rcrl
xchg
xchg
jmp
jbe
cmp
dec
mov
sub
lods
mov
nop
in
or
pushf
adc
inc
push
loop
push
inc
lods
cmp
pop
filds
cs
push
int
repnz
jnp
jae
int
and
mov
mov
inc
mov
pushf
jns
cmpb
add
add
cli
mov
mov
jg
add
faddl
pop
popa
push
xchg
adc
popa
imul
sub
or
orb
pop
cmc
push
pusha
sahf
shlb
xchg
out
jb
aas
loop
pop
adc
pusha
pop
or
loope
pop
xchg
insb
in
jp
xor
iret
mov
adc
lea
push
dec
add
mov
push
aas
scas
xchg
ja
int
loop
sub
cmp
push
clc
in
mov
pushf
xchg
dec
push
aam
xchg
xor
jo
rolb
cmp
and
aad
ja
pop
dec
mov
inc
out
sbb
iret
sub
repnz
add
stos
mov
loopne
mov
mov
scas
cmp
xchg
push
pop
stos
add
sahf
sti
ss
repnz
shl
dec
adc
ja
pop
mov
push
fstpl
mov
xchg
push
cmpl
mov
push
mov
pop
sub
sub
pop
into
mov
ljmp
nop
mov
jmp
in
nop
jo
adc
mov
fstpt
inc
xor
jp
jecxz
pop
jmp
filds
add
imul
xchg
repnz
and
pop
lock
repnz
cmp
movsl
rorl
add
sbb
mov
pop
mov
add
sbb
jns
inc
adc
push
inc
xchg
loope
xchg
fnstsw
aad
xchg
sbb
push
cltd
aad
hlt
inc
dec
shll
test
lcall
dec
sub
xchg
shll
adc
mov
sti
cmpsb
cmp
fcmovnu
push
sbb
lds
inc
jecxz
mov
call
inc
lea
in
dec
les
leave
xor
jmp
push
pusha
es
rolb
in
insb
ja
jns
adc
inc
adc
mov
inc
pop
idiv
lea
mov
jmp
js
dec
hlt
loope
dec
out
push
inc
jp
dec
repz
and
xor
lahf
adc
xchg
dec
push
sub
pop
call
mov
mov
addr16
cltd
pushf
and
in
mov
and
dec
clc
jecxz
dec
pop
push
test
xchg
and
sbb
cs
jbe
rcll
xchg
mov
enter
jg
jb
xor
sub
adc
xchg
leave
push
sub
mov
adc
test
push
daa
xor
div
push
pop
or
and
jge
daa
lret
sbb
add
outsb
int3
ss
sub
and
sahf
gs
push
xlat
xor
cmp
aam
sbb
sbb
add
push
push
lock
cmp
xor
adc
jle
or
mov
add
inc
jge
xchg
nop
roll
inc
fcomi
xchg
pushf
dec
inc
sub
enter
sub
fs
xor
scas
cld
movsb
in
or
xor
js
or
sbb
push
xor
das
in
sub
push
jnp
or
fnsave
push
test
cmp
mov
cmp
sbb
loop
test
xchg
inc
icebp
aad
lods
and
cmc
mov
loop
push
xor
ret
repnz
inc
in
ret
ljmp
xchg
sbb
adc
mov
xor
dec
dec
sub
insb
and
jge
sub
or
jge
in
popf
out
mov
rorb
sbb
leave
mov
addr16
hlt
scas
jns
mov
jb
dec
ja
jecxz
into
cmp
fldcw
add
mov
push
std
out
xorb
sbb
or
fcomps
push
insl
mov
cmp
adc
cwtl
into
push
sbb
xchg
mov
ja
push
sbb
mov
and
mov
inc
aad
fst
les
lds
mov
inc
dec
mov
push
mov
sbb
cmp
out
cmpl
ljmp
pop
daa
stos
dec
mov
aam
dec
daa
push
pop
inc
pop
roll
push
pop
dec
jns
rcrl
and
jl
and
cmp
in
mov
data16
shrl
lea
cmp
out
jnp
sub
adc
push
repz
inc
dec
dec
out
jne
sub
pop
daa
movl
outsb
fmuls
ret
stos
fdivl
dec
mov
and
insl
or
pushf
inc
mov
je
cltd
icebp
push
test
xor
jp
in
lods
loop
aaa
pop
sub
addr16
mov
ds
and
into
jno
fiadds
movsl
mov
sub
clc
aad
ret
xor
sahf
loope
ret
jmp
mov
mov
hlt
in
js
test
jae
outsl
in
push
xchg
mov
mov
push
insl
cmp
jg
xor
jae
fnstsw
ret
jmp
mov
pop
test
outsb
xchg
cmc
fimull
xlat
loope
adc
xchg
mov
sahf
daa
cltd
ficoml
in
mov
dec
push
jle
shl
hlt
push
adc
cld
stos
and
xchg
dec
xchg
xor
ss
pop
out
imulb
addr16
in
idivb
sub
les
mov
pop
mov
rclb
mov
pop
stos
sub
xorl
pop
adc
mov
mov
adc
add
mov
xchg
into
in
lea
ret
outsb
aas
sbb
push
dec
push
rcr
in
mov
daa
dec
xor
xor
ja
lret
jno
mov
in
adc
jbe
in
ja
pop
lock
push
add
popa
into
mov
xchg
jl
dec
pop
addl
outsl
xchg
and
fwait
push
push
fsubrp
sbbb
cli
test
scas
out
and
cmc
sbbb
mov
lret
mov
dec
lods
jo
mov
cli
sbb
and
lods
mov
rorl
arpl
fmull
cmp
mov
mov
imul
or
xchg
jno
dec
out
js
insb
jae
out
add
xchg
dec
and
movsl
movsl
jmp
movsb
xchg
sbb
add
mov
inc
dec
rcl
jle
into
inc
scas
mov
lret
mov
jmp
dec
mov
fiaddl
pop
inc
pop
adc
stos
xchg
jns
and
sub
or
fstpt
and
pop
push
pop
mov
inc
lret
mov
dec
push
icebp
lods
popa
mov
insl
cmp
out
lahf
insl
inc
rorb
fisubl
jae
mov
loope
xchg
sahf
aaa
sarl
call
movaps
push
cli
movb
mov
mov
lods
movb
inc
out
dec
cmpsl
int
sub
lods
pop
or
jl
stc
and
push
and
jnp
and
repz
lret
add
cmpsb
xor
in
sub
test
insl
mov
push
test
mov
jne
mov
jno
idivl
add
adc
jmp
mov
notl
dec
repnz
jp
rclb
lahf
and
stc
mov
mov
inc
cmp
push
shlb
mov
mov
out
mov
mov
push
add
cltd
and
or
jp
add
jg
dec
ljmp
out
push
fisubs
pop
ss
mov
xchg
sarb
mov
jbe
add
jmp
adc
sub
in
jb
pop
mov
sti
push
inc
mov
aas
jno
dec
mov
push
sbb
and
sub
stc
aam
sbb
sar
cs
out
inc
fbstp
call
test
ficomps
xlat
out
outsl
mov
leave
sub
push
xchg
test
shlb
arpl
inc
push
adc
cld
in
push
sti
bound
jb
inc
jp
xchg
adc
aad
mov
mov
clc
mov
pop
sub
jb
adc
mov
pushaw
and
lahf
jmp
add
pop
lahf
mov
hlt
adc
movsl
push
inc
aas
mov
add
xor
outsl
aam
cmpsb
dec
loopne
iret
aam
and
imul
das
dec
and
xorb
test
std
sbb
sbb
aad
pop
xor
jp
jle
xor
mov
jg
stos
sub
and
xchg
mov
pusha
cld
xchg
fcoml
inc
mov
rcrl
inc
fisubs
cmp
cld
push
ss
xor
out
arpl
icebp
rcrl
iret
out
into
xchg
ficoml
mov
cmpsb
or
push
orl
dec
addr16
mov
adcl
mov
xor
sti
repnz
clc
shlb
jns
xor
cli
pop
inc
mov
sbb
push
mov
mov
mov
test
call
int3
xor
xchg
xchg
cli
lret
decb
xchg
and
out
stos
int3
aas
xchg
or
inc
mov
lea
or
nop
test
loopne
pushf
cld
clc
xor
jmp
pop
add
fwait
stos
xchg
mov
xchg
mov
mov
add
and
push
mov
push
pop
int3
aaa
or
adc
xchg
imul
sbb
stos
dec
and
sub
inc
testb
cmp
outsb
mov
jo
stc
cmp
insl
xchg
push
mov
cmpb
mov
nop
mov
mov
int3
pop
ds
imul
cmpsl
xorl
jne
jns
cltd
je
stos
mov
sub
xchg
push
jne
outsl
push
std
out
adc
fsave
xlat
pop
xchg
sub
repnz
xchg
cmc
sbb
mov
inc
movsl
ss
jae
stc
mov
dec
mov
xor
sbb
fmull
mov
add
or
jae
push
sbb
sbb
add
push
push
je
adcb
fdivs
pop
lret
test
insl
movsl
add
xchg
fidivs
fs
dec
dec
push
mov
data16
pusha
mov
into
dec
jl
push
or
push
jmp
or
clc
sub
ds
jnp
je
aas
push
stos
stos
fmull
popa
cmp
dec
cmpb
stos
loope
outsb
ret
xchg
push
insb
add
pop
fnstenv
adc
iret
push
cld
add
movsl
cmp
in
inc
cmc
sbb
sbb
shll
popf
cmpb
ds
adc
fisttpl
cs
aaa
test
arpl
imul
fdivrl
inc
js
js
push
mov
js
push
jne
push
mov
int
icebp
sbb
sbb
sub
sub
jmp
imul
sbb
in
lea
andb
or
outsb
jge
jmp
pop
xchg
mov
lods
jo
push
push
test
xchg
or
sarb
dec
pop
repnz
lods
jbe
cmp
pop
imulb
les
ret
inc
and
inc
pop
shlb
push
insl
imul
jl
cmpsb
movsb
dec
gs
ss
pop
pop
sti
xchg
js
sbb
mov
rol
mov
mov
mov
stos
daa
movsl
rolb
jp
dec
push
mov
aad
add
icebp
cwtl
lret
mov
pop
pop
addr16
repnz
cwtl
lret
rorb
sbb
ss
sbb
xchg
inc
push
jmp
adc
sarb
paddsw
outsb
jae
imul
adc
mov
pop
hlt
hlt
sub
gs
pop
call
lret
repnz
ja
sub
nop
imul
jae
mov
cmpsl
dec
cmc
xchg
sub
mov
jl
jge
mov
rcr
cmp
jne
fdivr
push
fsubr
add
inc
cmp
lds
fisttpl
jge
andl
popf
xchg
lea
jp
rcll
add
push
fiaddl
adc
xchg
das
dec
test
xchg
lahf
or
dec
dec
inc
sub
jnp
and
xchg
adc
push
int3
xor
or
push
dec
dec
andl
mov
in
out
add
fldz
or
shlb
rcrl
cmp
shll
test
push
lret
or
pop
incb
sub
and
cld
outsl
insb
jbe
mov
lods
hlt
jns
inc
xchg
pop
shll
jle
into
stc
in
in
mov
xchg
adc
add
mov
hlt
xchg
aam
cmp
inc
fcomps
xor
sbb
jno
filds
addb
pop
fisubrl
mov
js
sti
ret
dec
stos
dec
mov
push
push
cwtl
popl
movsl
into
stos
mov
sbb
jbe
stos
int3
enter
test
inc
cmc
push
std
and
loop
mov
xchg
and
jp
leave
push
sub
or
mov
jg
rorb
jae
outsb
nop
aad
adc
fidivrl
lea
popa
rolb
cmp
adc
inc
leave
mov
add
shld
inc
push
xlat
mov
pop
lret
mov
jno
jecxz
xchg
mov
fs
imul
icebp
sbb
pop
fnsave
pop
mov
and
adc
push
data16
lret
pop
inc
adc
cmc
jp
inc
push
lds
out
push
shl
mov
inc
scas
jg
das
dec
imul
jb
sub
mov
sbb
mov
add
addr16
mov
popf
sub
and
scas
xchg
fwait
xor
movsl
enter
sti
mov
in
mov
lea
into
push
mov
mov
jne
and
ja
pop
cltd
push
test
dec
loope
mov
push
or
jne
mov
mov
dec
rcl
or
xor
and
jno
lods
icebp
sti
and
dec
add
scas
fisttpl
das
add
arpl
xlat
arpl
jne
int
cld
mov
add
xchg
adc
xchg
pop
xchg
icebp
sbb
fcoms
xchg
mov
fdivrl
in
or
incl
arpl
not
ror
xchg
jle
cmp
loope
pop
das
cs
in
ja
jp
fistpl
jb
sbb
loope
pop
pop
scas
and
dec
ret
rol
mov
mov
out
pop
add
outsl
shl
into
xlat
push
cli
imul
sbb
pop
or
push
pop
add
cmpl
movsl
lods
xor
aas
call
push
movsb
imul
cmp
jge
stos
push
mov
mov
fbstp
cli
test
jle
pop
pusha
shrl
popa
lahf
jae
outsb
les
cmp
and
loopne
movsl
repz
xor
mov
mov
mov
daa
jne
push
mov
lods
sub
sub
subb
add
pop
jl
mov
xorl
es
add
mov
loope
push
jbe
std
fidivl
arpl
popf
jns
leave
pop
test
adc
std
xorb
jl
pop
lret
data16
sbb
in
lods
xchg
adc
push
push
fwait
xchg
mov
out
pusha
pcmpgtb
das
and
cmp
data16
dec
clc
xchg
cmpb
inc
test
push
cmpsl
adc
sub
les
and
lock
adc
lret
lcall
bound
mov
pop
dec
clc
xchg
mov
scas
push
fdivs
mov
addr16
mov
enter
rcl
and
inc
push
sbb
or
xchg
sbb
ret
movsb
lahf
lcall
adc
jns
arpl
inc
rolb
out
clc
xor
mov
inc
rorl
mov
lahf
pop
outsb
ss
pushf
sbb
cli
outsb
lea
dec
adc
mov
mov
stos
mov
shl
xchg
dec
mov
adc
push
pop
notb
pop
cmp
shlb
pop
xorb
sbb
push
lds
clc
cmp
push
stc
loope
lods
jle
push
sahf
outsb
insl
xchg
fidivrl
test
scas
cmpl
je
dec
push
push
jno
dec
jg
test
mov
cmp
fnstsw
scas
lret
stos
std
inc
inc
sbb
imul
repz
jns
add
pusha
scas
pop
leave
sub
and
sti
lret
mov
mov
xor
sbbl
add
push
not
pop
mov
mov
imul
pop
ja
xor
test
movsb
shlb
fs
sub
inc
test
inc
mov
add
cmpsb
jmp
in
aad
push
pop
insl
dec
loop
add
mov
pop
lret
fists
sbb
xor
enter
pusha
jno
orl
and
adc
cmp
inc
push
pop
pop
aam
sbb
fsubr
cwtl
test
test
cmp
lds
cwtl
push
push
pusha
pusha
or
icebp
mov
adc
inc
outsb
lods
js
xor
push
fnstcw
test
arpl
outsb
mov
jecxz
mov
sbb
push
mov
out
push
into
ds
scas
fbstp
ficoml
inc
push
mov
jne
adc
adc
movsb
xchg
adc
mov
lahf
xor
fidivl
mov
cmp
mov
lret
mov
mov
xchg
mov
aam
sbb
xchg
push
inc
jbe
cmp
clc
pop
mov
inc
aaa
adc
or
inc
mov
shl
outsl
ror
push
mov
jae
popf
and
mov
movsb
insb
test
adc
xor
lds
mulb
mov
pop
xlat
lds
mov
cmc
scas
jge
adc
repz
jecxz
push
pop
jns
insl
xor
mov
icebp
add
inc
enter
dec
gs
push
push
lds
es
mov
ljmp
cmp
loope
imul
adc
ret
movsb
or
push
and
ljmp
out
repnz
inc
add
push
mov
pop
fldenv
ror
out
add
scas
jg
and
enter
sub
std
mov
mov
mov
add
sbb
jge
dec
push
inc
subb
push
aad
push
stc
fwait
ret
mov
xlat
push
sbb
dec
pop
ficoms
loope
push
ja
sbb
and
xchg
addr16
add
mov
aam
lock
mov
dec
pop
adc
mov
rcrl
mov
xor
aaa
push
cmc
outsb
das
leave
insl
or
or
cmp
jecxz
jnp
cs
mov
push
mov
dec
push
xlat
je
dec
in
add
mov
xchg
insl
lods
pop
lea
xchg
in
fadd
mov
call
imul
sbb
and
pop
into
or
ret
lds
outsl
xchg
pop
cmpsl
adc
push
aas
in
gs
sti
cmpsl
sahf
mov
adc
outsb
in
lret
jns
lahf
mov
push
pop
add
out
stos
mov
push
push
cmp
jno
test
or
imul
test
aam
mov
dec
jnp
or
iret
push
popfw
push
sbb
test
push
es
es
pushl
cli
mov
cmp
jnp
push
jl
and
test
fimuls
mov
dec
dec
push
mov
clc
inc
stc
fnstsw
jns
xchg
stos
lret
mov
aaa
pusha
mov
sbb
js
test
push
out
push
lcall
mov
push
ja
fucomp
xor
push
iret
and
ja
pop
int
lret
adc
sbb
call
mov
cmpsb
mov
pop
dec
jno
lret
adc
int3
jns
adc
cmpsb
pop
cmpb
jmp
imul
imul
xchg
or
adc
out
push
iret
fidivrl
lret
scas
or
pop
mov
les
or
cmp
rolb
push
xor
mov
jle
pop
add
gs
jecxz
cmp
js
add
dec
stc
adc
lods
lahf
out
insb
in
xchg
cwtl
add
add
xchg
add
mov
add
xchg
xchg
jg
cltd
shrl
loop
xor
lea
sbb
scas
push
and
fdivs
mov
lock
jae
inc
movsb
jle
mov
stos
movsb
pop
adc
adc
pop
mov
stos
into
or
mov
mov
and
pusha
aaa
test
ljmp
adc
pop
sbb
push
push
sbb
sub
mov
lods
and
pop
test
xchg
cmp
stos
push
cltd
fbstp
in
rcll
cmp
sub
std
ds
mov
xor
movsl
pop
fsts
ja
inc
inc
in
inc
arpl
fisubl
mov
mov
insl
mov
or
jmp
pop
cmc
jo
and
cmp
aad
ds
out
in
mov
lock
aad
unpcklps
jmp
in
stos
ss
xchg
dec
add
clc
in
mov
xor
xchg
sub
add
aad
cwtl
inc
dec
mov
pop
rorb
popf
mov
sbb
scas
inc
fwait
mov
inc
jb
and
mov
lods
mov
adc
rcrl
jg
xor
mov
push
jne
test
mov
jo
xor
das
mov
add
js
int
pop
dec
xor
sbb
sbb
inc
add
xor
into
mov
sub
sbb
pop
push
dec
cmp
ret
out
cmp
push
inc
ss
push
cwtl
mov
or
dec
daa
inc
add
and
jp
mov
push
aad
and
aas
dec
jnp
leave
jne
test
lret
mov
dec
pop
mov
pushw
inc
fcom
nop
popa
push
leave
or
xchg
inc
add
lods
dec
pop
pop
cmp
test
ret
adc
nop
js
jmp
mov
pop
fimuls
cmc
dec
ret
jbe
ret
pushf
mov
dec
pop
pushf
dec
xchg
inc
adc
and
cmp
stc
imull
pusha
insl
pop
mov
inc
cmp
jae
mov
jl
mov
adc
dec
jo
popa
daa
inc
into
sbb
int
push
in
push
pop
mov
mov
fisttpl
stos
mov
xchg
loope
xchg
jge
cmp
stos
fwait
pop
repnz
jl
scas
xor
dec
les
xor
test
je
mov
jo
insl
sahf
ret
pop
cld
sbb
fdivp
lock
dec
lods
sub
dec
jp
dec
movsb
imul
push
sub
in
fistpl
hlt
xchg
pop
sahf
jecxz
pop
sbb
cmpsl
xor
mov
les
sub
stos
push
shlb
out
dec
push
ja
outsb
mov
enter
sbb
mov
or
incb
xchg
sti
shrl
lods
xor
outsb
sub
ja
roll
mov
jo
loop
add
ljmp
mov
push
push
jmp
adc
jno
mov
xchg
es
xchg
clc
adc
dec
cmp
adc
rolb
cmp
lea
bound
jle
push
sbb
xor
lea
xchg
sti
or
add
incl
mov
pusha
push
popa
test
push
pushf
adc
and
cltd
xor
cltd
int3
movsl
mov
iret
jae
jge
mov
dec
addr16
ja
push
push
mov
mov
cmc
popa
mov
and
ss
ljmp
js
es
xor
loop
mov
adc
sub
pop
out
mov
mov
pop
mov
xorb
mov
fiadds
inc
pusha
push
js
repnz
lock
les
xchg
insb
rcrl
adc
adc
inc
loope
data16
loop
lock
cmp
adc
adc
pop
inc
sysexit
add
sub
addr16
dec
push
inc
push
sbb
mov
and
pushl
ss
movsb
out
push
roll
mov
lods
push
or
mov
mov
lds
inc
jge
add
or
dec
lea
sub
mov
ficoms
pop
xchg
adc
daa
pop
cmpsl
push
scas
mov
pop
inc
cmp
out
mov
les
jecxz
clc
and
xchg
leave
sub
jl
rep
cwtl
mov
fnsave
mov
sti
mov
xchg
inc
xor
pop
aaa
lods
std
add
femms
cltd
sub
js
mov
cltd
xor
jp
jge
out
cmpsl
loope
movsl
lret
ds
mov
sub
jp
jb
pop
icebp
dec
pusha
data16
lods
dec
mov
push
ret
dec
push
mov
lahf
jb
jl
lock
push
push
mov
push
fistl
push
xchg
iret
out
mov
and
or
push
adc
sub
jmp
cmp
push
adc
aaa
xor
xchg
stc
lds
lods
stos
sti
cwtl
and
stc
or
mov
test
mov
adc
and
inc
mov
push
andb
loopne
scas
test
sub
lock
ret
ja
pop
or
out
clc
je
cmp
mov
rcrb
icebp
fstl
mov
sbb
cmp
in
popa
dec
mov
enter
add
rorb
sub
mov
jg
pop
lods
int
jp
shr
xor
mov
pusha
lret
cmp
shll
mov
xor
je
mov
push
loop
inc
imul
cmpsl
adc
mov
in
sbb
cli
and
iret
outsb
mov
out
lcall
add
jb
shll
and
or
xchg
rcll
or
adc
scas
nop
push
je
iret
xchg
pop
push
repz
scas
adc
mov
or
add
push
jae
sub
inc
jmp
stc
rorl
shr
xchg
cmp
leave
dec
shrb
sub
push
loopne
int
cmpl
imul
out
and
call
or
cmp
repnz
inc
add
lea
or
push
call
mov
ds
jl
mov
inc
push
fwait
call
fnstcw
int3
push
jns
repnz
xchg
bound
stos
das
xor
or
adc
sub
cmpsl
jno
cli
insb
sub
mov
sbb
in
fsubs
pop
mov
sub
adc
jnp
xchg
xchg
ljmp
fldl
push
ds
xor
ret
jae
xor
in
daa
std
jae
adc
imul
ret
mov
adc
push
mov
mov
shll
pop
add
pop
dec
lds
push
add
out
jle
xchg
mov
mov
call
sbbb
out
push
or
adc
adc
outsb
dec
movsb
add
test
and
fcmovnu
push
hlt
push
mov
xorl
clc
mov
movsb
mov
scas
inc
jb
mov
push
sbb
push
push
sbb
cmpl
pop
orl
cmp
lret
addb
lahf
mov
hlt
mov
push
mov
js
repnz
sub
jo
push
hlt
pop
mov
xor
cmp
mov
int
lcall
sub
inc
retw
ds
scas
inc
inc
jbe
mov
rolb
cmp
lods
sbb
mov
pop
or
sbb
and
pop
ret
outsl
leave
xchg
bound
sub
inc
mov
out
push
cmp
addb
fwait
bound
and
jecxz
xor
lcall
hlt
aas
pop
dec
outsb
sbb
test
jnp
pusha
sbbl
xor
inc
xchg
in
mov
les
sub
sahf
pop
xchg
sub
jle
in
mov
sbb
ret
mov
cmp
call
mov
push
jae
clc
pop
test
xor
jg
mov
lret
inc
cli
push
xchg
jo
or
das
and
jbe
inc
mov
and
iret
ret
lahf
jno
xorl
stos
lods
hlt
push
cmp
pusha
fcoml
mov
or
rcrb
mov
add
js
pusha
addr16
inc
into
std
pop
pop
push
or
mov
cmp
test
int
sbb
pop
pop
or
ret
jge
xchg
loope
lea
out
mov
gs
int
or
int
lds
shl
std
test
jbe
xchg
jns
push
push
xor
enter
push
rorl
stc
cmc
pop
jb
fldl
nop
or
ljmp
repz
inc
imul
push
dec
hlt
std
fcmovb
loop
out
fsts
test
xchg
cli
cltd
and
mov
push
mov
movl
inc
stc
mov
aam
scas
popa
cmc
fldt
add
ficoml
inc
pop
das
cmp
bound
xchg
test
fcompl
das
shl
lret
outsb
pop
xchg
xchg
leave
mov
jmp
lret
and
mov
aaa
sarb
sbb
frstor
neg
sbb
lods
imul
mull
jbe
fwait
dec
push
je
jp
xor
mov
cmp
inc
dec
fnstsw
inc
mov
mov
cmp
pop
jne
icebp
popf
jo
test
lret
popa
test
push
outsl
sbb
mov
outsl
xchg
jne
jmp
out
inc
sbb
xchg
inc
inc
push
xchg
xor
sbb
lcall
icebp
xorb
mov
sti
mov
inc
popl
mov
and
xchg
inc
mov
mov
pop
ljmp
out
inc
es
test
sbb
xor
insl
or
xor
dec
rcl
jo
lods
cltd
stc
ficoml
inc
dec
pop
jecxz
cltd
outsl
test
add
sbb
fdivs
ret
adc
mov
xchg
cmp
xor
lea
pop
jecxz
fbld
adc
cli
loopne
xchg
ss
inc
roll
pop
mov
in
add
dec
imul
and
jae
fsubs
pusha
lods
icebp
mov
or
sbbl
stos
add
cmp
ds
or
push
mov
jnp
in
fidivl
shll
xor
or
cmpsb
xor
add
arpl
sbb
insb
jo
mov
push
add
jle
out
mov
or
add
jne
push
jecxz
inc
inc
push
or
aad
cs
je
add
popa
mov
dec
popf
push
loope
inc
pop
mov
xchg
push
out
aas
pop
xchg
or
push
repnz
cmp
xor
jg
pop
xor
xchg
lret
outsb
lods
test
mov
push
sarl
leave
aam
addr16
bound
dec
jne
andb
inc
test
fsubl
loop
pop
into
sbb
hlt
mov
sbb
dec
xchg
jo
pop
adc
push
adc
in
loopne
mov
and
xor
aam
xchg
addr16
loop
mov
insb
add
and
into
mov
adcb
pusha
push
int
gs
pop
pusha
push
out
rcl
push
daa
insb
lret
mov
mull
divl
out
push
mov
out
scas
shl
nop
iret
hlt
adc
jbe
divb
mov
add
fcoml
and
mov
lods
dec
mov
inc
test
lret
mov
dec
icebp
cs
dec
jne
sbb
inc
sbb
jmp
xor
inc
rcr
push
fildl
mov
jge
sbb
sub
fisttpl
inc
xor
push
shrl
add
xchg
int
int3
ja
xchg
mov
mov
jns
sub
inc
push
dec
add
inc
sub
std
or
xchg
cmpsl
pop
scas
aad
jbe
mov
in
xor
xchg
mov
lds
and
fwait
sbb
cmp
xchg
mov
jecxz
sub
inc
mov
andb
out
hlt
pop
enter
movsl
mov
aaa
popf
xor
sbb
jne
lea
cli
pushf
pusha
adc
pop
andl
xchg
and
loope
lret
mov
fsts
pop
sbb
je
mov
xchg
or
les
pop
or
je
fwait
push
out
sub
pop
and
jle
xor
inc
cmp
int3
push
mov
leave
cmpsb
aam
stc
ss
call
mov
stos
std
pop
push
mov
xor
je
ret
popa
xchg
xchg
sbb
mov
das
aaa
ja
imul
inc
insl
in
mov
pop
fsubrl
xor
clc
xchg
jmp
add
das
scas
pusha
xchg
movsl
bound
or
xchg
in
pop
out
popa
xchg
or
mov
mov
adc
stos
pop
push
testb
mov
mov
pop
xor
fisubrs
out
insl
cmpsl
cmc
jmp
jge
pop
out
aas
rcll
add
or
xchg
dec
mov
xor
sbb
and
test
mov
xor
add
lods
sar
and
aas
jle
mov
inc
inc
test
xor
leave
sub
xor
mov
ret
inc
enter
stc
arpl
mov
in
leave
mov
dec
inc
sbb
add
popa
inc
mov
ljmp
adc
mov
push
pusha
mov
xchg
mov
mov
js
jmp
pop
lea
mov
in
mov
dec
int3
add
sahf
fwait
scas
scas
xchg
mov
jae
push
push
sar
pusha
std
ret
aam
pop
mov
outsb
das
mov
sub
fs
outsb
xor
cwtl
or
add
icebp
sub
fstpt
pop
or
dec
ja
pop
jmp
std
enter
dec
divb
inc
pushf
das
mov
or
and
pushf
mov
les
stos
jae
push
repz
inc
adcb
xchg
das
fs
cmp
jle
dec
dec
loop
call
mov
mov
js
and
fisttpll
push
out
cwtl
and
xor
test
xchg
in
shlb
scas
in
jl
mov
arpl
nop
clc
repnz
rorl
dec
and
aas
cmp
jnp
pop
imul
mov
or
cwtl
out
cli
shl
pop
outsb
stos
icebp
and
push
nop
pop
aas
mov
mulb
and
in
push
sub
adc
sbb
jmp
or
add
mov
jmp
mov
add
test
dec
xor
jecxz
dec
jo
dec
scas
mov
cmp
add
cmpsb
sar
cmp
lea
xchg
cmp
testb
mov
cmpsl
xchg
push
repnz
xchg
in
push
shl
pop
xchg
into
das
ror
adc
adc
in
insb
test
mov
shll
add
xchg
dec
out
or
addr16
adc
sub
mov
sub
std
sbb
adc
fidivs
leave
incb
adc
pop
cli
xlat
push
outsl
fs
ret
jle
clc
stos
call
cmc
inc
cli
scas
push
dec
loop
insb
mov
and
fisttps
mov
or
repz
cwtl
dec
imul
adc
pop
test
pop
cmp
push
mov
in
mov
test
dec
mov
push
lea
jge
mov
mov
or
cmpsl
stc
test
add
inc
sti
aas
imul
cmp
adc
pusha
cmc
test
sar
outsl
pop
mov
test
cmpsb
lret
repnz
jl
fists
in
movsb
push
into
or
loop
push
dec
clc
fstpl
movsb
or
mov
shlb
popf
inc
xor
adc
push
les
jg
ljmp
cmp
push
cmp
dec
divb
push
mov
adc
insb
xor
scas
inc
cli
push
xchg
flds
ljmp
insb
push
push
pop
xor
sbb
in
xor
dec
sub
scas
sbb
aad
xchg
push
sub
arpl
fildll
dec
jae
push
nop
loopne
jge
test
rcrl
popa
cmp
cmp
push
dec
jns
lret
fdivl
mov
add
insb
xor
enter
dec
sbb
fsubrs
jg
mov
outsl
and
nop
or
xchg
dec
mov
pop
xor
cltd
loopne
inc
mov
adc
or
push
insb
loope
imul
aad
sub
sub
fsubl
mov
xchg
ficompl
mov
inc
sub
sbb
fs
aad
xor
and
add
sbb
pop
std
int
movsl
mov
push
decl
dec
aaa
xchg
sbb
movsl
lahf
cs
add
adc
movsl
in
das
les
xchg
cmc
push
xchg
lock
in
push
cli
loope
xchg
imul
mov
inc
cmp
dec
cmp
or
nop
adc
adc
sahf
or
cmp
adc
adc
hlt
mov
cmc
inc
xor
sbb
pop
stc
mul
enter
mov
cmpsb
ljmp
int
das
mov
pop
xlat
xchg
nop
jp
shrb
xor
cltd
emms
xlat
xchg
jmp
jnp
in
cmp
pop
loop
pop
xor
jbe
inc
cmpsl
pushf
jmp
das
adc
adc
xorl
hlt
movsl
xchg
push
inc
and
cli
insb
int3
movsl
fdivr
in
sbb
xor
fistpl
ror
pop
pusha
mov
xchg
ret
cmp
sub
stc
fyl2xp1
rorb
jmp
push
sub
xor
shlb
add
and
push
push
leave
xchg
mov
jb
into
or
xor
cli
orl
inc
pushf
int3
iret
cwtl
mov
lds
jns
and
movsl
call
cmp
lods
pop
push
rorb
scas
add
mov
test
jno
lret
sarl
outsl
and
mov
jle
mov
jae
push
arpl
mov
lret
fcoms
int
cmp
add
sbb
shlb
in
jbe
ja
movb
fisubl
into
cmc
push
out
popl
jne
cmc
insb
fidivl
or
xchg
mov
xchg
push
push
mov
dec
and
bound
fbld
dec
mov
adc
add
and
jns
push
data16
xchg
hlt
std
jb
fdivrs
cmpsb
mov
in
daa
pop
int3
jg
into
dec
mov
jbe
mov
adc
stc
jge
adc
ret
mov
lods
out
stc
outsl
inc
aad
mov
mov
pop
xor
outsl
push
inc
ret
repz
addr16
push
cmpsl
xchg
jp
mov
aaa
sub
sbb
sub
mov
cmp
mov
jl
cmc
mov
mov
into
jnp
add
aas
cli
in
pushf
sbb
lea
test
iret
loop
push
and
call
aas
mov
xchg
dec
fildll
xchg
pop
enter
shr
insb
xor
scas
xor
cltd
xor
xlat
outsl
pop
xor
jnp
jl
cmpsl
mov
lcall
sbbl
push
pop
rorb
sahf
loopne
push
popl
imul
xor
mov
and
mov
ljmp
xchg
stos
sbb
shlb
mov
mov
loope
mov
xor
fcmovbe
dec
add
pop
fsubl
adc
pop
adc
ret
sub
sub
xor
out
push
jnp
sub
cs
add
cmovb
mov
movsb
inc
dec
das
jp
add
addl
pop
xchg
lods
sbb
lock
daa
ficompl
bound
push
pusha
mov
push
ret
xchg
push
push
xor
dec
cmpsl
add
xchg
xor
pop
test
mov
in
leave
in
push
cmp
leave
jle
fimuls
pop
pop
aas
mull
pusha
push
inc
sub
jno
mov
or
pop
push
mov
xor
xchg
aam
es
pop
xchg
mov
adc
adc
gs
ret
push
mov
push
movsb
mov
adc
insb
cmp
or
imul
jg
mov
jne
or
mov
inc
pushf
push
jl
add
lcall
add
dec
lods
xlat
sub
mov
daa
gs
fistps
test
pop
jns
sar
ror
add
rcl
dec
pop
jl
xor
mov
adc
shlb
dec
xor
pop
leave
sbb
xchg
cmpsl
and
bound
xor
push
and
and
adc
loope
lea
jb
pushf
lahf
dec
sub
fs
imul
movsl
add
adc
arpl
mov
sbb
ljmp
xchg
jl
fdivp
lds
es
push
mov
xor
sti
loope
outsb
aas
xchg
aas
call
push
pop
aam
dec
scas
mov
js
shll
pop
and
jnp
fidivl
in
leave
inc
js
mov
adc
es
sub
or
adc
xor
sbb
outsb
aam
xor
loop
push
lock
out
sbb
adcl
addr16
add
cld
scas
pop
mov
cmp
sub
mov
cmp
fldt
shrb
jbe
push
call
mov
xor
or
sbb
jmp
xchg
test
dec
pushf
out
mov
mov
shrl
ja
dec
pop
adc
call
inc
lret
icebp
ljmp
pop
xchg
bound
sbb
in
inc
add
ror
inc
les
mov
add
out
stos
mov
mov
dec
pop
or
das
mov
cltd
aad
pop
push
out
xchg
mov
test
bound
sar
pop
mov
mov
lahf
xchg
decl
xchg
mov
add
push
add
cmp
xchg
icebp
aas
sbb
pop
insl
imul
les
push
cmovbe
pop
movsb
ficomps
mov
xchg
test
lock
outsb
je
adc
sub
outsl
aaa
push
inc
fildl
pop
jae
push
out
push
pop
push
pop
and
xchg
shrb
add
inc
mov
jge
shll
sbb
int3
enter
test
push
es
cmp
cmpsb
jl
ss
stos
inc
ja
pop
inc
call
popa
pop
lods
jmp
insl
jmp
pop
or
sbb
adc
add
sub
mov
rcll
popa
rclb
lret
cmp
adc
and
ja
sbb
jle
push
push
sub
inc
aas
pushf
adc
sbbl
mov
enter
mov
mov
popa
dec
cmpsb
jmp
xor
sub
loopne
int
rolb
mov
pop
jmp
pop
adc
push
ret
dec
dec
shrb
pushf
sbb
mov
lea
int
jg
adc
test
push
stc
or
inc
insl
aam
ja
dec
fsubrl
les
xor
sbb
jns
pop
out
mov
push
push
icebp
test
add
aaa
jle
or
cmpsl
push
shl
inc
cld
mov
push
cmp
mov
out
dec
pusha
adc
pop
xchg
js
sub
jl
sub
or
int3
dec
les
aam
mov
mov
mov
sub
xchg
mov
add
shrl
fdivl
inc
mov
out
xchg
sub
sbb
push
cmp
ljmp
mov
int3
sbb
nop
and
mov
fbld
lods
lods
sbb
inc
insb
shrb
or
shll
jae
cwtl
mov
inc
std
pop
mov
mov
xchg
xor
jnp
pusha
inc
loop
dec
push
sub
mov
xchg
mov
iret
hlt
adc
cmp
mov
aas
xchg
inc
scas
stos
cmp
xchg
jp
jg
into
add
jecxz
cs
push
int
lea
sti
cld
ljmp
and
icebp
ret
fs
add
xor
inc
or
loope
pop
cmp
and
outsl
cmpsb
es
sub
jb
shl
shll
fists
gs
sar
mov
int3
sub
and
call
faddl
pop
sbb
pop
pop
xchg
ja
jo
xchg
ja
gs
jae
cwtl
fwait
test
call
movsl
les
push
dec
sbb
sub
test
and
cltd
arpl
mov
mov
pusha
arpl
dec
andb
jno
and
int3
lcall
xchg
jb
mov
test
into
inc
test
or
daa
sbb
lea
imul
fwait
add
push
ja
sti
push
mov
lods
or
std
xor
push
xchg
ljmp
pushf
xchg
icebp
inc
push
enter
lds
loopne
push
test
or
push
and
sbb
call
mov
out
and
aad
lret
xchg
inc
test
ret
or
js
cltd
ja
repnz
js
in
mov
pop
cmpsb
inc
jecxz
and
cmpsb
icebp
leave
pop
and
imul
push
sub
or
push
xlat
sbb
fwait
and
sar
xchg
jp
call
xor
or
adc
mov
popf
or
dec
cld
lret
dec
xorl
push
and
scas
std
push
xchg
shr
adc
mov
dec
jecxz
add
sbb
push
pusha
arpl
or
sub
mov
xchg
lods
rolb
xchg
ret
sub
add
xchg
adc
inc
insb
cwtl
pop
push
mov
out
sub
test
pop
push
lea
div
add
and
pop
aas
lock
xor
in
xor
xor
loop
jbe
repz
sbb
sub
and
mov
int3
mov
adc
or
push
xchg
mov
push
pop
int3
mov
in
xchg
mov
inc
pop
mov
sbb
daa
insb
insb
mov
xor
jae
xchg
popf
xchg
aaa
mov
mov
push
pop
or
add
shlb
cmp
xor
js
inc
jnp
pop
fsubl
mov
xor
jbe
dec
sub
sbbb
push
sbb
pop
sub
test
or
je
loopne
inc
imul
cld
sbb
ret
scas
push
in
add
sub
imull
das
pusha
mov
ret
subb
inc
add
and
popf
pop
rcl
and
sbb
lcall
insb
fdivl
inc
xchg
sbb
imul
inc
movsb
mov
xchg
cld
pusha
filds
lahf
out
int
mov
mov
adc
jp
insb
xchg
out
es
ss
and
jmp
int3
nop
mov
jns
xchg
sbb
inc
or
add
push
and
notl
pop
pop
sti
cmpsl
ds
inc
fldenv
push
xor
loop
cmp
fld
lret
add
and
adc
pop
jne
jo
xchg
rcrl
ret
dec
in
mov
call
out
neg
xor
adc
xchg
addl
push
xchg
pop
cmp
fistpll
out
jno
dec
or
mov
aad
mov
sbb
add
sbb
aaa
cs
dec
mov
stos
out
mov
or
adc
sbb
pop
sarb
xor
loop
aas
mov
fnstsw
lret
mov
push
dec
insl
mov
pop
and
jmp
pop
xor
xchg
inc
pushf
in
pusha
fcoml
nop
add
out
jo
xor
mov
in
sub
repnz
loopne
push
pop
imul
fildl
divb
pop
and
cli
enter
mov
jge
adc
pop
adc
pop
lahf
pop
mov
fsincos
jle
aaa
rcll
das
dec
jns
scas
mov
pop
dec
pusha
lods
adc
mov
push
cmc
pop
xchg
jne
push
imul
xchg
jmp
imul
pop
rcl
int
outsb
stos
shll
insb
and
jg
pop
faddl
loopne
fistpl
loope
rclb
addr16
xor
mov
es
mov
mov
test
xor
mov
cs
out
xchg
push
xor
imul
cmp
out
cmpsb
andl
sub
push
mov
popa
xor
das
into
stos
xchg
loopne
or
test
iret
int3
lods
in
ss
andl
jmp
jg
fimull
rolb
outsl
mov
mov
std
sbb
dec
scas
out
and
inc
jnp
loope
jb
leave
sub
lret
out
mov
jbe
or
pop
push
lods
lods
jge
mov
pop
xchg
pusha
iret
fists
sbb
add
adc
stos
adc
imul
es
cmpsb
andb
fcom
insb
insl
or
sub
test
adc
inc
push
sbb
jne
push
stos
mov
call
lods
mov
dec
hlt
xchg
int3
fwait
outsl
repz
xchg
daa
imul
popf
scas
jnp
stos
stc
push
lcall
cld
in
pop
mov
mov
mov
cmpsl
cmp
leave
rolb
lret
mov
negl
test
cwtl
push
mov
mov
adc
inc
loop
xor
inc
mov
xchg
scas
jnp
sub
mov
xor
daa
shrl
jge
and
push
cmp
add
loope
dec
add
cmp
enter
mov
sub
pop
push
jne
lcall
iret
xorl
test
testl
add
sbb
push
mov
pusha
mov
inc
movsb
jnp
lret
jmp
adcl
inc
sbb
dec
lahf
mov
shlb
mov
ds
stos
repz
insb
sub
jbe
mov
add
insb
sub
andl
mov
mov
test
aaa
movsb
shl
fiadds
xchg
push
push
es
add
fidivl
out
imul
jno
lods
ror
pop
arpl
adc
cltd
xchg
xor
pop
push
test
frstor
iret
dec
idiv
mov
lds
iret
jne
in
mov
cmpsb
jo
test
lock
je
jg
push
dec
push
xor
jle
xor
orb
movsb
dec
hlt
pop
ljmp
aaa
cmp
sub
inc
stos
call
rcrb
dec
mov
xchg
imul
adc
dec
sub
mov
sbb
push
ss
aas
ror
fdivs
rol
cld
and
adc
cmp
pushf
xlat
mov
pop
cmpsb
push
mov
fnstsw
inc
mov
jae
jne
mov
in
ljmp
xor
cmp
mov
out
pop
int3
mov
hlt
dec
jns
lds
mov
adc
dec
push
mov
test
or
cmp
inc
fadd
xchg
adc
adc
les
mov
mov
sarb
adc
nop
test
cmpsl
daa
jl
movsl
xchg
fdivr
or
inc
and
cld
les
insb
in
cmp
cmp
mov
mov
out
push
xor
rcl
mov
stos
sbb
je
in
mov
pop
das
mov
pop
adc
fcoms
mov
and
call
aaa
mov
cmp
sbb
fdivp
lahf
sahf
xor
rcrb
je
popf
gs
lahf
cmpsb
mov
mov
dec
jns
pop
add
sbb
stos
das
sub
shrl
cmp
inc
mul
mov
adc
fxch
inc
int3
je
jns
jmp
sub
enter
xchg
or
sub
xor
inc
stos
ficompl
dec
adc
mov
pop
scas
push
jge
pop
add
ja
out
inc
dec
aam
push
mov
mov
std
imul
and
test
cmp
sti
call
jno
mov
repz
scas
icebp
sbb
jbe
rolb
popa
sub
push
xlat
movsb
in
stos
arpl
jp
pop
testl
faddp
mov
insl
popa
jmp
add
cwtl
jns
adc
ja
lret
sub
fstpl
pusha
pop
movsl
fwait
and
xor
insl
sub
jg
out
xor
ret
fdiv
adc
xor
and
mov
loope
cmpb
in
sbb
inc
push
jl
sarl
pop
jmp
rcrl
mov
mov
ja
aad
sbb
xor
pop
std
imul
jns
aas
push
mov
mov
inc
in
xchg
xchg
rcl
lods
xor
pop
adc
mov
jno
add
rcl
sub
xchg
mov
or
pusha
adc
imul
sbb
sbb
push
cmp
add
out
xor
pop
hlt
ret
inc
xor
dec
cltd
out
vpor
adc
dec
fmuls
mov
outsb
sub
mov
and
cmp
xchg
xor
in
cs
add
test
aad
aad
test
leave
pop
pop
imul
jb
sub
push
ret
ss
push
pusha
leave
sbb
xlat
adc
add
call
mov
sbb
mov
decl
mov
cmp
sbbl
popa
pushf
mov
xchg
inc
add
fildll
in
sub
add
pushf
adc
daa
push
mov
push
push
xchg
sbb
mov
rorb
cmp
jbe
dec
xor
push
lods
or
bound
clc
cmp
xchg
ljmp
test
imull
mov
mov
pop
push
mov
in
aaa
mov
daa
and
test
inc
gs
sbb
or
lret
mov
sbb
mov
test
push
dec
sbb
cmc
imul
pushf
sub
dec
cli
add
fdivs
pop
pop
es
xchg
fnstenv
jmp
inc
sub
gs
shrb
insl
adc
pop
xchg
lods
call
inc
dec
daa
popf
mov
jp
orl
outsb
or
mov
and
pop
into
inc
dec
mov
sbb
jno
mov
pop
adc
inc
popf
iret
mov
mov
mov
stos
jg
mov
or
dec
shll
mov
dec
lret
dec
fnstcw
lock
xor
negl
test
popf
lea
fwait
sub
mov
daa
aaa
imul
fdivs
xlat
mov
push
adc
loop
sbbb
scas
repz
push
imul
mov
pop
scas
inc
gs
ja
scas
testb
gs
xor
jnp
addr16
loop
dec
test
xor
mov
sti
push
nop
cli
iret
push
test
les
repz
pop
inc
test
dec
xchg
dec
test
jle
sbb
sub
bound
repnz
xchg
jnp
sbb
stos
nop
les
outsl
mulb
addr16
dec
loope
cltd
cmp
outsl
mov
mov
pop
or
cmpsb
pmaxsw
mov
inc
push
mov
xor
xorl
pop
mov
into
in
pop
cmp
sbb
out
int3
ds
lcall
and
mov
dec
mov
cmpsb
xor
daa
mov
mov
in
pop
movsl
mov
pop
lret
in
stos
xchg
jp
jmp
cmp
add
mov
dec
xchg
repz
andl
or
sbb
inc
imul
adcl
mov
cli
mov
aam
scas
push
push
fs
dec
sub
repz
gs
mov
or
inc
addl
hlt
int
mov
mov
push
or
sbb
jmp
lock
scas
push
sbb
decb
loop
adc
out
inc
push
add
out
push
or
dec
jle
inc
bound
in
inc
mov
enter
mov
sub
xchg
insb
in
jo
and
ficoms
les
xchg
sub
mov
jle
popf
mov
js
sub
dec
mov
sahf
les
arpl
mov
out
pop
or
cmpsl
adcl
test
jne
jns
popf
inc
outsl
add
fidivl
inc
leave
outsb
and
push
sub
xor
sub
je
mov
cmp
jmp
pop
push
inc
cpuid
int3
and
mov
lods
cmp
shll
std
inc
cli
pop
mov
mov
mov
xchg
out
mov
or
sub
fdivl
lods
sbb
xor
mov
inc
clc
cwtl
pushf
mov
insb
jne
mov
pop
stos
mov
mov
jo
aas
dec
mov
repnz
lea
cmc
add
jp
lret
aad
mov
fstps
xor
mov
imul
aas
xchg
bnd
ret
fistps
cmc
ja
pop
shll
test
std
lea
shrl
fists
lret
aam
lds
pop
sub
jo
bound
adc
test
push
lcall
iret
loope
test
mov
out
or
test
cmp
dec
mov
mov
sti
sub
pop
sbb
sub
in
movsb
ret
aaa
xor
sub
arpl
sbb
rorl
ds
mov
out
pop
mov
test
jmp
stc
push
gs
rcl
xchg
pop
or
iret
jmp
sahf
shlb
xor
repnz
cld
dec
les
and
mov
imul
xchg
inc
cwtl
jnp
mov
mov
adc
add
rclb
mov
sbb
xchg
cmpl
popa
das
xor
fcoml
stc
sbb
cmp
cmpsb
or
out
adc
mov
add
pop
pop
or
adc
addl
jge
ret
les
decl
clc
lret
outsl
push
loop
in
ja
leave
xchg
sti
jo
dec
adc
mov
pop
jbe
push
fiaddl
xchg
adc
outsb
or
cwtl
pop
mov
cmp
fisttps
or
cmpsb
mov
cs
ret
arpl
add
sbb
out
jecxz
jo
sbb
pusha
mov
mov
loop
leave
in
xor
in
sarl
jle
xchg
fnsave
out
js
sub
cli
cmp
and
adc
ss
lret
aaa
inc
cmc
out
int3
std
das
add
aaa
andl
push
sti
push
hlt
push
gs
cmp
and
mov
cmpsl
mov
cmc
inc
jns
stc
jmp
int
mov
jmp
insb
fmuls
cmp
lock
pop
addr16
cmp
cmpl
rep
inc
dec
test
xlat
sbb
xor
and
test
mov
imul
or
icebp
mov
and
test
popa
pop
xor
lahf
fdivl
or
in
je
add
in
or
fs
and
pushf
push
cmp
pop
out
pop
sbb
push
popa
mov
mov
dec
or
mov
repz
int
cs
ret
jns
pop
sub
and
mov
inc
cltd
sub
mov
mov
xchg
imul
inc
std
lock
ret
jne
sar
scas
sbb
mov
stos
xchg
push
push
call
jo
imul
movsb
es
punpckhwd
stos
mov
pop
push
arpl
mov
or
in
xor
mov
inc
adc
xlat
sbb
stos
dec
test
rcll
cmp
mov
js
mov
sbb
lea
mov
fidivrl
loope
pop
in
cmc
aas
xor
lahf
sub
xor
mov
ljmp
cmpsl
mov
ret
dec
mov
in
loop
push
insl
lods
aad
mov
aad
icebp
dec
lahf
mov
cmp
sbb
lods
push
lret
adc
adc
stc
xlat
cmpsl
lahf
lock
jmp
scas
push
jo
jno
xor
outsl
jl
mov
dec
popa
imul
jecxz
repz
xchg
int
xchg
movsl
add
ja
mov
xor
jbe
jmp
mov
and
insl
jbe
push
sbb
loopne
lcall
cmpsb
jnp
aad
fldenv
cld
iret
inc
xor
and
test
dec
mov
xchg
pop
out
xchg
mov
out
mov
sub
adc
cmp
lret
testl
data16
cmpsl
mov
ss
sbb
and
push
fisttpll
sbb
sbb
arpl
inc
xchg
pusha
outsb
add
jmp
pop
cmpsl
add
adc
decb
test
inc
fs
mov
rcll
scas
cmpsl
cmp
pop
fadd
cmpsb
cltd
aaa
pop
outsb
inc
pop
sar
sbb
sti
cmpsl
imul
cld
mov
pop
jl
jns
ja
aam
pop
sbb
mov
sbb
push
lea
mov
insb
fisubrs
addr16
xchg
pop
and
aaa
stos
cltd
push
mull
or
pop
ss
mov
mov
outsl
jnp
in
mov
and
add
mov
movsl
dec
lcall
repnz
scas
mov
in
mov
jecxz
and
pop
mov
mov
cmp
jae
push
rorl
rcll
sbb
dec
ljmp
push
shll
cmp
int3
mov
std
out
mov
push
test
fucomi
gs
aas
pop
js
adc
add
xchg
add
js
mov
iret
loopne
jb
xor
mov
out
scas
sti
mov
mov
push
mov
and
std
fisttps
das
add
pop
in
jmp
pop
outsl
push
in
pop
adc
inc
jb
clc
mov
outsb
lods
pusha
add
add
mov
aaa
cwtl
add
aaa
jns
adcl
std
movsl
dec
sub
into
mov
jnp
rol
inc
cmp
sbb
hlt
mov
fdivp
outsb
sub
pop
js
imul
add
fs
push
mov
or
mov
insb
add
push
bound
mov
inc
pop
movsb
ljmp
push
and
fistpll
jnp
pop
pop
stos
sub
sarl
pop
fstps
jle
dec
and
and
gs
pop
daa
clc
icebp
out
mov
notl
mov
sbb
push
xchg
pop
mov
xor
int3
pop
mov
xlat
jmp
inc
arpl
pextrw
dec
adc
das
inc
lahf
dec
out
dec
mov
out
mov
loop
mov
add
xchg
sbb
cmpsb
fwait
cmp
dec
sarl
push
sbb
jle
aas
jo
push
ret
dec
push
pusha
mov
mov
lcall
push
inc
sub
mull
pop
mov
cmp
dec
das
shl
mov
nop
leave
or
test
ret
popa
mov
push
lret
pop
jo
and
push
inc
adc
call
and
and
cli
stos
adc
cmc
ret
cmpsl
in
movsl
inc
cmc
mov
sub
xorl
inc
pop
lock
xor
imul
adc
push
mov
ja
and
mov
or
aaa
rorl
cli
ljmp
push
iret
and
jp
lock
shrb
pop
jecxz
into
punpckhbw
pop
mov
dec
jecxz
mov
inc
push
outsl
inc
cmp
cmpsb
sub
lock
scas
in
fwait
mov
sub
fsubrp
adc
test
pop
and
sbb
outsl
push
out
inc
es
mov
bnd
pushf
push
addb
mov
cmp
sbb
xor
rorb
lcall
imul
xchg
ss
in
and
push
fcompl
pop
xlat
add
into
shlb
out
or
aaa
xchg
jge
mov
popa
lods
imul
movsb
fstp
fcmovnb
mov
shr
jns
push
xor
je
mov
rcrl
call
mov
testb
ja
adc
insb
push
les
push
cmp
aam
lcall
mov
cmp
test
adc
lcall
sbb
mulb
pop
dec
mov
fldt
push
push
mov
js
jl
bound
push
pop
adc
mov
mov
pop
inc
dec
rcrb
ss
loope
push
imul
lahf
xchg
jmp
inc
or
adc
or
fucomip
cwtl
inc
push
add
jmp
movsb
rcll
std
aaa
popf
ret
or
call
out
xor
dec
mov
fdivrs
push
lcall
dec
adc
add
lcall
add
jge
xlat
xchg
jnp
and
add
jne
mov
inc
mov
adc
and
xchg
pop
adc
lret
stos
adc
arpl
jmp
insl
js
xchg
testl
lcall
cmp
lahf
mov
pushf
neg
stos
push
mov
pop
cmpsl
bound
or
lock
pop
negl
popf
push
lods
mov
jmp
pushf
adc
ds
cli
xor
or
loopne
sub
dec
fucomp
add
push
rcrl
dec
and
pusha
insl
jmp
stos
jo
and
bound
mov
mov
ret
outsl
and
xlat
mov
out
cmp
sbb
cmp
dec
or
hlt
pop
lret
push
mov
leave
lret
loope
ret
or
jecxz
std
xlat
repnz
inc
fsubrl
xchg
lahf
jg
sbb
gs
adc
push
insb
mov
jl
adc
and
incl
ret
loopne
pop
sbb
push
jmp
and
shr
notl
dec
adc
mov
pop
test
icebp
inc
cli
xchg
jne
mov
rclb
ret
pop
ffreep
imul
testl
cmpsb
test
xor
xor
or
pop
stc
mov
inc
cmp
jecxz
jle
lock
mov
imul
and
imul
push
out
xlat
push
lea
pop
pop
inc
pop
lods
scas
inc
cmp
lret
pop
mov
mov
out
inc
or
pop
es
dec
inc
rcl
and
jno
pushf
aaa
add
sbb
push
sbb
push
xlat
les
sarb
sahf
fistl
add
bound
sub
dec
stos
xor
lahf
adc
add
mov
lret
mov
insb
cmp
test
and
cmp
mov
jle
sbb
jmp
sub
or
cmpsb
lcall
or
jb
xor
je
gs
jbe
leave
xor
outsl
and
mov
ds
add
push
stc
scas
xchg
add
dec
in
leave
cld
cmpl
dec
sbb
std
in
testb
imull
cmp
lock
test
cltd
lods
pusha
les
rorb
pop
lea
repnz
and
sbb
mov
aaa
test
mov
lret
lea
adc
jp
cmp
mov
inc
ja
jle
idiv
out
jge
push
mov
int3
dec
std
insb
popf
mov
and
pop
jmp
mov
mov
dec
mov
mov
insl
inc
pop
adc
mov
fcoml
rol
addr16
xchg
adc
cmp
int3
in
xor
clc
pop
les
test
mov
lods
insl
fwait
mov
xchg
test
xchg
xor
push
stc
cmp
loope
jp
fldt
pop
movsl
fs
sti
or
ja
cmpsl
mov
add
dec
repz
mov
push
mov
cmc
mov
shrb
lahf
adc
jb
mov
mov
cmp
shr
mov
xor
pushf
mov
fiadds
out
pusha
sub
adc
call
jge
mov
and
int3
lock
dec
pop
nop
fwait
push
xchg
push
imul
inc
pushf
idivb
les
push
xchg
cwtl
push
adc
push
xchg
cld
cmp
sbb
cmc
icebp
cmp
icebp
xor
jb
push
or
xor
pusha
in
add
outsb
cmc
xlat
lds
sbb
dec
gs
mov
inc
gs
cmp
mov
dec
sub
push
mov
loopne
pop
stos
xchg
aas
leave
adc
push
lahf
mov
mov
dec
inc
push
cltd
fldcw
mov
lret
test
xchg
mov
lods
and
sub
cmpl
mov
xor
xor
dec
fisttps
in
jl
aas
adc
mov
arpl
dec
mov
sub
xchg
jl
mov
hlt
mov
xor
push
cmpl
das
stos
cmpb
mov
push
out
jmp
pop
lds
push
or
std
cld
mov
pop
pop
or
mov
pop
and
adc
orl
mov
lahf
and
leave
xor
int
xchg
jle
fsubs
daa
ja
bound
insl
gs
pop
mov
jg
mov
push
push
fisubrl
push
sub
mov
daa
stos
popf
push
push
jne
aaa
xchg
dec
cmp
mov
jl
in
mov
orl
daa
xchg
lods
roll
jnp
push
movsb
outsl
enter
pusha
mov
and
adc
jl
in
stc
and
xchg
mov
dec
adc
inc
mov
pop
cmpsb
xchg
push
pop
mov
jnp
mov
pop
iret
dec
or
sbb
add
mov
test
sbb
and
ds
ja
cmp
mov
stc
imul
fucompp
iret
or
push
mov
cmpsb
xchg
lret
push
shl
insl
add
rorb
fwait
cmpsl
dec
movsl
inc
xchg
rorw
xchg
cli
adc
ja
stc
mov
mov
or
lods
mov
mov
mov
call
mov
jmp
jns
push
inc
fldl
inc
out
xor
lock
mov
stc
mov
cmp
outsb
popa
in
inc
or
jg
mov
lds
sarl
fwait
xchg
cwtl
jo
cmpsb
jmp
jmp
add
xor
jg
push
fiaddl
je
mov
xchg
gs
fisttpll
and
adc
insb
bound
int
jb
inc
push
dec
lahf
jg
sbb
jb
lods
test
cmp
push
movsb
jns
hlt
jns
cmpb
mov
cmp
lcall
mov
stc
and
jo
xchg
in
xor
clc
out
mov
pop
popf
mov
fisubl
hlt
push
sahf
imul
mov
ss
lea
pop
lcall
or
xchg
lds
mov
lds
cmp
lcall
daa
and
ret
sbb
and
adc
lock
cmp
sub
jne
or
outsl
imul
jl
std
push
shr
mov
les
jae
xchg
push
mov
sbb
arpl
sub
sbb
mov
aam
sbb
pushf
popf
jb
daa
mov
jae
jl
dec
pop
in
test
and
mov
nop
jmp
dec
pop
sub
add
or
insl
pop
sub
xchg
push
xchg
xchg
and
and
fwait
push
aaa
dec
popf
adc
sbb
lods
xor
jp
xor
stos
fbstp
lods
or
pop
aaa
xchg
out
cli
mov
pop
sbb
and
ljmp
lea
mov
cs
imul
adcb
ja
or
mov
dec
loope
jge
int
inc
call
jecxz
mov
ror
rcl
mov
out
filds
mov
aaa
or
inc
sub
ja
xor
call
and
scas
mov
add
xor
and
cld
jo
push
jecxz
add
aam
jmp
pop
pop
popa
push
mov
xchg
lcall
rcrb
ljmp
stos
add
aam
adc
pop
or
imul
and
in
and
ret
cltd
jmp
pop
psubw
push
mov
mov
xchg
clc
rcr
pop
mov
imul
leave
repnz
jmp
jbe
sbb
xor
pop
xchg
sbb
or
jg
pop
lods
icebp
leave
fdiv
mov
in
mov
adc
and
mov
sbb
push
fidivs
insl
mov
inc
icebp
rcr
frstor
ds
pop
in
idiv
xchg
xchg
inc
jb
lret
inc
cmp
add
imul
loop
mov
dec
push
inc
shll
xchg
fistpll
jo
into
mov
dec
cmp
xchg
fsubrl
lret
fnstsw
jp
test
xchg
jo
or
jne
mov
lret
xlat
xchg
xor
xchg
push
mov
pop
rcrb
dec
cmc
jp
push
jne
xorb
xchg
and
xchg
dec
mov
movsb
cmp
fmull
sub
repnz
or
lahf
insb
sub
push
hlt
push
sbb
cmp
sarb
jge
sti
fs
in
adc
movsl
jmp
insb
sub
aad
les
cmp
ret
sub
jne
addl
push
addr16
pop
sbb
adc
mov
inc
inc
jp
aam
sbb
decb
gs
adcl
push
push
andb
bnd
addb
repz
imul
mov
aas
mov
outsl
sub
sub
or
xor
xchg
or
scas
sub
mov
out
out
sub
mov
xchg
mov
test
insl
loope
cmp
das
ljmp
xchg
inc
fwait
cmp
inc
imul
out
movsb
cli
and
jg
dec
sbb
xor
cltd
fistl
jne
nop
add
cmpb
repnz
pusha
rcrl
enter
jnp
stc
fstp
mov
mov
lret
lock
lock
adc
movsl
pop
xchg
movb
loop
jb
je
ja
mov
jecxz
pop
lods
pop
mov
addr16
stos
pop
out
sbb
rorl
out
add
test
adc
push
pusha
cwtl
pop
je
xchg
and
lahf
int3
test
adc
mov
nop
lds
mov
repz
sub
popf
push
orl
or
push
push
hlt
ja
pop
shll
sbb
mov
sub
call
jb
insb
sub
popf
out
mov
movsl
in
mov
and
gs
pop
mov
aas
in
dec
hlt
icebp
leave
shr
divl
sbb
les
bsf
sti
xor
mov
dec
xchg
test
fists
insb
pushf
iret
or
hlt
push
push
inc
pop
loope
or
add
jl
lahf
push
mov
sub
sub
jmp
jg
adc
adc
les
arpl
ficomps
pop
adc
scas
dec
out
fbld
movsb
repnz
xlat
push
mov
cmpsl
pop
ja
sub
cmp
and
out
sbb
dec
xor
pusha
mov
mov
jmp
dec
fcmove
gs
icebp
cmpsl
out
addr16
xchg
hlt
das
aaa
bound
pop
pop
push
and
nop
dec
ja
mov
lods
ficompl
cwtl
mul
mov
mov
mov
xchg
adc
ja
inc
sub
shl
xor
je
xor
cmp
sub
sub
inc
dec
in
xchg
dec
cs
sbb
imul
ret
insl
mov
pop
xchg
es
inc
insb
jb
and
inc
icebp
pop
lods
xchg
mov
xchg
lods
repz
cs
clc
mov
jns
addb
inc
les
cmpsb
add
daa
rclb
imul
movsb
fsubs
sub
jo
cld
sbb
add
mov
xor
cwtl
fbstp
mov
popa
test
pop
inc
icebp
das
sbb
adc
dec
pop
cmp
leave
std
cmp
ds
mov
ja
mov
mov
in
xchg
fidivrs
call
popa
push
and
jo
or
lock
mov
or
arpl
leave
test
jle
xor
push
xchg
xchg
iret
jno
mov
inc
mov
data16
sbb
jno
jle
imul
sbb
push
subl
jbe
cmpb
loopne
and
push
jecxz
mov
dec
jo
lahf
mov
add
and
pop
push
stos
xor
dec
xchg
sbb
fs
xchg
dec
out
bound
push
jae
outsl
sub
or
mov
loop
in
ret
push
ds
in
mov
jmp
ja
addr16
cmp
mov
sub
cmp
push
out
or
cld
mov
cld
addr16
ret
adcl
pop
popa
fistps
scas
insb
cwtl
insl
in
inc
int3
lret
or
mov
mov
leave
filds
lahf
pushf
jp
loope
pop
mov
cltd
inc
mov
mov
cltd
faddl
fsubs
ljmp
cmp
pushf
fwait
out
out
jle
dec
sbb
gs
adc
gs
lea
dec
hlt
mov
emms
inc
sub
sbb
dec
std
ja
test
sbb
mov
sbb
cld
mov
stc
sub
add
jle
sub
out
aaa
pop
xor
add
clc
or
imul
jns
push
or
and
sbb
sub
add
push
insl
jo
jecxz
lods
add
in
adc
jne
mov
es
cmc
dec
xor
subl
inc
adc
js
sahf
xchg
test
xchg
cmp
add
ret
repnz
mov
xor
shrl
es
jge
loope
rcrb
xlat
xchg
out
lcall
xlat
dec
and
fistps
dec
dec
popa
sarb
cmpsb
sbb
xchg
xchg
or
xlat
or
mov
call
shlb
out
adc
popa
push
fs
inc
leave
mov
outsb
sbb
mov
inc
sbb
push
cmp
and
sbb
es
imulb
aam
xchg
dec
xor
fsts
or
xchg
les
add
mov
add
cmp
dec
mov
mov
fcmovbe
aaa
clc
rorb
inc
ret
adc
sub
and
xor
repnz
leave
jo
or
adc
mov
pop
aas
aad
inc
movsl
jmp
loopne
and
loope
stos
repz
cmc
adc
inc
add
cwtl
pop
loope
xchg
mov
xchg
lock
dec
mov
cmp
xchg
leave
imul
outsb
call
pushf
dec
stos
push
in
scas
fiaddl
xchg
push
mov
fwait
jg
aas
addr16
inc
das
repnz
lret
inc
loopne
imull
cmp
mov
inc
das
mov
test
lods
loop
add
push
stos
inc
enter
pop
inc
xchg
lret
mov
js
lea
xor
es
or
loope
adc
sti
pop
xor
push
jge
daa
mov
and
outsl
push
jge
jb
jb
lock
mov
adc
out
lea
xor
sub
imul
pop
and
dec
inc
test
fcomps
mov
mov
test
xor
and
repnz
sbb
xchg
xor
outsb
sub
out
enter
int3
nop
or
cmpsb
into
std
ja
clc
mov
loopne
xchg
enter
pusha
mov
jg
and
rorl
pop
lea
xchg
or
jp
insb
fldenv
mov
sbb
ret
sbb
out
jle
add
das
mov
pop
xchg
out
insb
movsl
lds
sbb
clc
push
dec
or
pop
xchg
popa
pop
cmpl
xor
mov
or
push
cmp
mov
or
repnz
inc
or
fistl
push
add
out
sub
pop
or
lahf
stc
xchg
popa
mov
ss
mov
jo
sub
fstps
ljmp
or
and
daa
rolb
cmp
mov
add
test
ss
or
pop
sahf
in
jae
add
push
xor
adc
xlat
lods
insb
dec
dec
inc
pop
mov
push
cmc
aaa
pop
push
xlat
mov
add
rcrl
je
int
adc
mov
fcmovnb
sub
ret
push
mov
adc
push
lds
iret
shrb
mov
data16
mov
je
push
outsl
mov
aad
adc
add
cmp
jbe
int3
jnp
les
jo
lahf
ljmp
or
mov
push
mov
ljmp
loop
aad
inc
cltd
mov
ret
fcompl
repnz
jae
cmpsl
sbb
ds
fwait
dec
imul
mov
inc
xchg
pop
lret
push
mov
mov
mov
dec
cmpsl
test
push
les
lahf
sbbb
mov
add
test
int
adc
nop
xchg
bswap
icebp
sbb
inc
ret
loopne
adcl
lods
cmc
mov
mov
lret
mov
xchg
mov
fisttps
mov
sti
sbb
enter
mov
xchg
repnz
loopne
sbb
push
icebp
xchg
test
cmp
jae
add
mov
repz
popf
loope
push
pop
dec
ljmp
adc
jns
and
jne
in
insb
or
cmp
aaa
js
push
mov
outsb
mov
push
mov
cmp
mov
push
test
adc
cwtl
mov
stc
dec
loope
push
cmp
sub
adc
pusha
sti
inc
test
sbb
les
loop
pop
jbe
mov
and
dec
add
pop
lods
icebp
out
mov
das
dec
xor
arpl
jne
dec
xlat
int3
and
pop
orb
mov
rcrl
mov
addl
push
push
negl
xchg
jne
lret
data16
jno
cwtl
iret
adc
enter
jecxz
jg
or
sub
mov
repz
add
pop
mov
dec
leave
shlb
faddl
or
sub
adc
lret
sbb
lret
sub
adc
jecxz
pop
fxch
js
in
xor
gs
insl
mov
icebp
aad
or
push
jg
and
test
insl
cmpl
and
in
inc
insb
mov
out
je
adc
mov
mov
enter
cmp
scas
sbb
mov
mov
pop
out
xor
fiadds
es
push
cmp
fdiv
aam
and
bound
cmp
outsl
add
lahf
aad
pusha
inc
aas
pop
push
xor
pop
sbbb
test
pop
pop
inc
sti
cmp
scas
shrl
add
sbb
popf
dec
cmova
rorb
ss
shr
pusha
push
je
sub
or
or
cld
push
mov
add
mov
fidivrl
or
ret
push
cmp
jns
pop
out
ja
cli
xchg
pop
mov
dec
sub
testl
push
xor
adcb
clc
rclb
dec
fisubs
in
or
icebp
cmp
mov
lds
lret
dec
cmp
mov
fdivrl
xlat
push
and
lret
push
lcall
out
xor
mov
jge
sbb
push
mov
cmp
gs
mov
cmc
stos
push
jp
xchg
sahf
cmp
cmp
iret
insl
mov
mov
popa
sbb
sahf
rolb
shl
adc
xchg
addr16
mov
mov
nop
fidivrs
loop
test
xor
push
lcall
mov
rolb
mov
xchg
inc
lret
cmpsb
cmp
rcpps
insl
and
jmp
adc
movsb
lock
mov
ret
pop
push
sbb
dec
push
insl
test
jmp
repz
fwait
sub
sti
int3
jns
and
inc
filds
cmp
dec
jne
gs
jae
test
lods
mov
arpl
cmp
sub
ret
cltd
dec
push
test
daa
loopne
data16
sbb
ljmp
cmp
inc
fnsave
jecxz
pop
fstpt
incb
dec
pop
stos
inc
sti
ret
pop
sbb
out
pop
ljmp
popa
mov
movsl
cmpsb
sbb
xchg
movsb
dec
outsb
popf
ds
mov
mov
subb
xor
and
xchg
mov
adc
pop
and
jae
mov
data16
loopne
xchg
in
sbb
jmp
daa
out
push
sbb
jns
js
cmpb
je
push
test
aaa
mov
push
mov
xchg
andb
or
xchg
sbbb
andl
arpl
push
jg
leave
xor
mov
pop
aas
xlat
das
sub
sub
fildl
mov
sub
addl
sbb
ficoms
lods
xor
cmpsl
mov
dec
add
push
sub
pop
xor
xchg
xor
pop
or
call
repz
pop
jmp
sub
inc
inc
inc
call
popa
add
push
mov
mov
inc
loop
lds
je
pop
mov
frndint
jl
data16
test
lods
dec
mov
add
test
ret
insb
dec
inc
cmp
repz
aam
push
and
ljmp
sub
popf
adc
push
add
xchg
dec
in
inc
jmp
mov
inc
loopne
jle
cmp
xor
loopne
mov
jo
stos
xchg
mov
push
xchg
in
fcomps
mov
fadd
rcrb
xor
adc
les
out
rolb
dec
adc
pop
and
pusha
dec
ss
xchg
stos
add
push
stos
inc
ret
push
int
insb
sub
scas
lea
sbb
jbe
xor
cmp
fcomps
sbb
xlat
movsl
std
ret
mov
int3
inc
loopne
adc
xor
bound
cmp
push
pusha
sub
cld
add
je
or
sub
jle
mov
inc
gs
and
aam
sti
pop
in
repnz
ljmp
int3
outsb
int3
lods
push
jle
repnz
cwtl
scas
adc
xchg
incl
mov
cli
adc
lods
mov
loopne
sub
cmp
cs
inc
mov
push
shll
pop
and
xor
icebp
aaa
out
cmc
mov
mov
pop
and
ljmp
rorb
fcomi
das
stc
mov
mov
fistps
jl
repnz
xchg
xor
std
loope
popa
fnstcw
cs
push
dec
lret
mov
lahf
push
sub
add
cmpsl
inc
push
int
jb,pn
insl
mov
bswap
sbb
push
lods
push
popl
and
sub
imull
push
jge
imul
push
xchg
scas
add
dec
ds
mov
mov
lahf
popf
fimull
fisttpl
cmp
sub
cld
lret
mov
out
in
mov
imul
fisubrs
mov
cmp
mov
inc
in
and
sub
or
or
lcall
sahf
push
dec
movsb
inc
call
xor
push
xchg
jge
outsb
mov
ret
push
push
xrelease
int3
cld
dec
sti
jge
test
adc
lock
insl
jge
aaa
sub
sbbl
cmp
imul
pop
push
xor
lahf
xchg
aam
movsb
inc
arpl
mov
in
mov
pop
fstpl
dec
jno
loopne
sti
push
out
push
inc
add
push
scas
repnz
adc
mov
jmp
movq
fimuls
mov
push
inc
fmull
loop
add
mov
xchg
into
mov
andl
mov
add
jl
dec
outsb
sarl
in
cwtl
sub
cli
ret
out
cmpb
jb
bound
sub
and
mov
aad
aaa
mov
popa
dec
loop
ret
xor
xchg
inc
or
out
lahf
inc
imul
or
sub
in
test
cld
stos
cld
pop
ret
pop
je
mov
stos
pop
cmpb
xor
or
xor
push
int
xchg
cmp
jle
ret
pop
or
adc
xor
mov
subl
ret
movsb
jg
cld
adcl
sahf
repnz
ja
rcrl
leave
push
push
fwait
push
xchg
cli
push
inc
aaa
out
jbe
aad
jbe
jno
pop
shll
stc
push
pop
test
inc
sub
cmp
push
xchg
shrb
and
and
in
xchg
inc
mov
add
lods
dec
adc
jl
shr
nop
adc
or
jg
adc
cmc
jno
add
add
push
push
cmp
addb
cmpsl
dec
je
outsb
shll
push
add
sub
cmp
mov
xchg
les
cli
loope
sbb
push
jb
adc
loopne
push
scas
roll
out
orb
rorb
pop
fwait
mov
mov
inc
sub
xchg
loopne
xor
or
mov
sbb
pop
push
and
ret
xchg
mov
push
or
mov
mov
add
scas
ret
cmp
or
dec
push
push
popf
or
lret
dec
int
xchg
movsl
out
add
inc
xor
sahf
add
mov
jle
sub
sub
jbe
cmp
pop
shlb
jg
mov
adc
pusha
jns
and
adc
cltd
inc
sarb
testb
in
adc
xchg
fisttpll
repz
fnstcw
mov
lds
xchg
mov
jecxz
inc
pusha
adc
xchg
mov
and
sbbb
mov
shlb
mov
sahf
or
ret
fchs
xor
sbb
cmc
xlat
and
add
test
in
mov
popf
xchg
bound
sti
imul
cmpl
sbb
mov
push
ret
jg
add
pop
dec
sbb
sub
mov
dec
push
lcall
jb
stos
aas
pop
pop
sub
and
push
and
out
iret
sahf
pop
fsubrl
into
push
sbb
xor
add
mov
inc
popa
lods
leave
pop
mov
push
sti
add
mov
adc
mov
insl
add
jae
ja
cs
out
imul
in
sub
xchg
xchg
or
inc
sbb
or
cmc
xchg
test
push
xchg
mov
sahf
cmp
stos
popf
pop
sub
scas
xor
xor
lock
jnp
leave
cmpsb
pop
ljmp
and
aad
push
fsubrs
insb
sbb
mov
dec
push
loope
std
adc
cmp
sbbb
push
push
cwtl
sbb
push
movsb
mov
sub
in
scas
sti
lahf
clc
inc
fdivrs
hlt
insb
push
sahf
dec
cmp
movsb
push
pop
fwait
cmpsb
and
cmp
push
subb
push
sub
outsl
fs
insb
jns
xchg
loope
jnp
jmp
addr16
mov
dec
out
jp
jl
lods
inc
lret
imul
jns
ja
sub
pop
sbb
out
cmpsl
and
adc
cld
mov
loope
stos
mov
lods
pop
xchg
cli
test
jb
es
pop
test
adc
xor
movsl
sbb
inc
clc
int3
and
pop
or
shlb
cld
sti
mov
daa
inc
xor
xchg
stos
mov
inc
adc
mov
fwait
fwait
out
mov
aaa
xor
xor
mov
xor
sub
pop
push
hlt
fiaddl
dec
repz
test
sbb
daa
and
xchg
fdivrs
fs
inc
jmp
jp
sbbb
xchg
ljmp
popf
in
and
pop
push
aad
push
xchg
dec
jge
ss
lahf
enter
mov
icebp
jg
push
pop
test
add
adc
push
mov
mov
in
mov
jns
inc
adc
xchg
mov
or
enter
sbb
xlat
xchg
ds
cmp
jns
adc
into
pop
mov
mov
scas
mov
jne
fs
das
push
aas
lahf
movsl
es
cs
jmp
and
mov
out
sub
mov
int3
js
ds
xor
pop
iret
movsl
jno
xor
cmp
mov
imul
out
xchg
push
dec
sbb
mov
mov
and
fistpll
mov
fcmovne
lret
loop
pop
or
mov
fists
lcall
xchg
cmpsb
jmp
add
cmpb
insb
aad
lea
xor
adc
xor
shlb
push
and
adc
sbb
dec
ss
add
in
sbb
ret
sbb
stc
decl
jbe
shl
lcall
dec
adc
jbe
lcall
outsb
xchg
mov
lock
popa
sbb
or
cli
dec
cwtl
lahf
cwtl
rorb
sbb
push
and
lahf
add
or
pop
lret
repz
outsb
test
idivb
outsb
es
pushf
cmp
lods
push
xchg
sarl
scas
movsb
rcll
and
sbb
imull
mov
xor
shrb
mov
into
enter
add
in
popf
push
xor
movsl
leave
fwait
repz
add
scas
cmp
ds
mov
cmp
mov
mov
sub
xor
push
lods
sbb
and
push
xchg
cltd
pop
sbb
mov
cmc
mov
fs
or
sub
pop
test
xlat
outsl
inc
daa
pop
ret
jmp
sub
cmpsb
popf
sbbl
xchg
cmp
add
xchg
out
testb
lahf
add
inc
mov
or
dec
dec
mov
les
xchg
scas
inc
daa
sahf
adc
jne
dec
imul
mov
or
and
mov
cli
sahf
mov
cld
out
sub
fidivl
sahf
pop
hlt
mov
aad
mov
imul
stc
je
mov
push
cld
xor
cmp
dec
jnp
mov
mov
outsb
mov
dec
push
xchg
add
clc
adc
in
fs
test
cli
out
pop
mov
sub
mov
inc
jbe
add
jg
push
lods
pop
pusha
popa
out
out
jbe
jmp
shlb
jge
stos
stc
ret
das
popa
or
cmpsb
leave
mov
pop
push
dec
cmp
addr16
ficoms
mov
lds
ds
mov
jp
cmp
xor
adc
inc
mov
lods
fisttps
jne
leave
imul
lods
dec
clc
xchg
push
in
fdivrp
out
push
int
imul
sub
call
or
cmp
sub
neg
movsb
pop
sti
cwtl
sub
cmp
adc
mov
in
lea
cmp
pushf
repz
or
push
sub
mov
xchg
bound
mov
dec
pop
dec
out
iret
mov
adc
xor
mov
frstor
mov
and
cltd
sbb
int
jb
pop
adc
pop
xchg
imul
cld
ret
je
outsb
sbbb
daa
inc
sub
dec
cmpsb
arpl
out
nop
sahf
out
xchg
push
sub
out
rcrl
lea
shlb
out
fmull
loope
or
loope
lret
mov
pop
mov
icebp
xchg
push
lret
mov
cmp
sub
push
jp
and
push
notl
in
shll
mov
inc
jae
stos
je
push
loopne
inc
inc
int
cmp
js
outsb
cwtl
mov
inc
push
and
dec
and
insl
out
add
sarl
xchg
stos
sbb
sbb
cmpsl
sti
mov
adc
adc
push
loopne
xchg
mov
push
call
dec
or
popf
hlt
scas
enter
sbb
pushf
add
movsl
lds
add
jne
and
loope
adc
lods
lahf
xor
mov
ds
mov
pop
aad
hlt
mov
mov
jno
cmp
mov
mov
insb
cmpsb
jbe
fs
in
push
push
out
add
test
out
out
insl
cmp
pop
pop
in
inc
insl
test
ret
sbb
dec
xchg
mov
daa
xor
sub
pusha
jle
shrb
xor
pop
add
sbb
subl
inc
lods
mov
mov
add
in
pop
idiv
xor
xor
scas
cs
push
sbb
mov
leave
mov
out
xor
cmp
jp
pop
addr16
imul
xor
addl
cmp
aam
ret
fbstp
mov
test
std
iret
in
mov
cmpsb
in
out
mov
cs
add
ds
out
sarb
rcl
push
es
fbstp
cmp
xor
pop
inc
imul
sbbb
inc
ja
mov
fwait
adc
jns
jmp
iret
ljmp
cmc
jae
add
lcall
jae
jns
dec
add
lret
imul
xchg
mov
sub
pop
jp
les
mov
out
push
xchg
dec
pop
xor
inc
pop
subb
fadd
shr
bound
int
jg
push
push
andl
enter
cmp
mov
mov
and
lods
in
scas
int3
pop
lahf
pop
jg
push
cltd
pop
mov
std
stos
test
mov
xlat
add
leave
pop
push
xor
gs
repz
jl
out
or
adc
sub
cmc
jp
jl
into
xor
or
addr16
jb
or
leave
orb
mov
add
xchg
mov
stc
mov
push
cmp
mov
dec
inc
mov
and
pop
int
xor
xchg
push
lods
add
ljmp
jns
lahf
xchg
out
sbb
insl
shrl
stos
jg
ret
sbb
out
popa
repz
sahf
cmc
jne
or
sub
cmp
pusha
inc
test
lds
dec
adc
jge
fs
pop
cs
xor
or
lock
sbbb
xchg
jmp
xchg
sbb
pcmpgtd
sub
and
popl
inc
lods
pop
into
pushf
subl
push
mov
fwait
ljmp
push
loopne
push
test
es
xor
iret
fs
or
lock
jae
repnz
and
test
out
inc
push
cmp
mov
dec
stos
ret
or
lods
shlb
dec
cmc
dec
out
cmp
faddp
int3
mov
sub
sub
fcmovnb
mov
fsts
push
push
sbb
stos
int
xchg
pop
pushf
outsb
jno
mov
add
push
mov
dec
xchg
into
icebp
push
xor
rcll
jle
xchg
sarl
cs
sahf
lods
cwtl
lds
enter
shrb
test
outsb
dec
jecxz
and
mov
subl
or
cwtl
xorl
das
mov
cmpsb
mov
xchg
push
fisttps
lahf
fmul
in
addr16
inc
xchg
jnp,pt
adc
scas
movsl
scas
inc
cmp
rorl
jge
rorb
sbb
xchg
xor
dec
rcr
jnp
inc
or
mov
cmp
lahf
fs
into
and
xchg
imul
sub
xchg
inc
movsl
pusha
shr
dec
test
cmpsb
pop
pusha
cs
fsubs
mov
cld
pushf
mov
or
mov
and
jp
test
sub
mov
xor
adc
imul
mov
adc
js
repnz
aad
ret
inc
lret
loop
sub
sahf
push
mov
and
inc
and
repnz
jmp
pop
add
mov
mov
pop
out
cld
imul
lcall
mov
je
push
xor
sbb
add
or
sub
push
ljmp
or
pop
xchg
jno
mov
mov
sarl
aad
add
arpl
xchg
push
xchg
cs
jecxz
push
pop
outsb
jp
iret
outsl
jge
mov
test
addr16
mov
mov
pop
mov
testl
jns
add
jecxz
or
cmc
rorb
shl
sbb
sub
cmc
inc
push
test
jbe
int
adc
lds
sbb
xor
lods
jge
je
push
popa
inc
andl
add
jns
mov
inc
clc
mov
clc
repnz
sub
inc
dec
sbb
xchg
cltd
xchg
adc
mov
stc
lahf
push
out
mov
lea
jnp
ja
dec
sub
out
lea
lahf
add
enter
inc
inc
sti
push
mov
dec
adc
sub
inc
test
cmp
sbb
jne
and
test
clc
lods
scas
lods
movl
lods
jno
aad
movsl
push
rcll
mov
leavew
cmp
movsbl
out
adcb
fs
dec
sarl
mov
jp
jl
outsl
loope
int
pop
fnstcw
push
out
xor
js
and
push
jns
jb
dec
or
ljmp
inc
cmpsb
test
int3
lds
inc
sahf
jle
pop
push
outsb
loopne
push
movb
fmull
dec
ja
cmp
pushf
push
enter
mov
sbb
and
mov
bnd
repz
hlt
fmull
scas
inc
cmpsl
xor
mov
loopne
sbb
in
in
xchg
or
cmc
repnz
cmp
fisttpll
cmp
adc
mov
fbld
jne
clc
push
jne
aam
fbstp
inc
out
inc
stos
xchg
mov
fnstenv
icebp
sbb
or
adc
insl
popf
ret
and
ret
mov
cmpsb
sbb
cmp
cmp
in
mov
jge
pusha
dec
cmp
pop
loopne
add
movsl
fnstcw
pop
adc
xchg
or
orl
rorl
aam
fidivl
push
xor
add
mov
fmulp
mov
fs
xor
add
fimuls
jmp
push
sbbb
arpl
icebp
cmp
movsb
fidivs
data16
and
mov
jp
lock
ret
ja
jno
xlat
cmp
outsb
mov
pop
cmpsb
fs
jbe
popa
out
push
cmpsl
mov
ja
dec
das
std
push
aad
pop
insb
push
sbb
roll
cmp
imul
inc
pop
hlt
fmuls
jae
rcrl
and
loope
add
mov
mov
sub
lahf
cmp
xchg
pop
out
insl
rcrl
iret
sub
cmp
adc
ja
mov
int3
pop
sti
cs
xor
push
stos
pop
in
inc
jl
orb
sbb
cs
mov
out
and
mov
xchg
jno
add
xlat
lea
popa
ret
or
fmul
shlb
push
aaa
fs
sub
xchg
adc
prefetchw
adc
gs
pop
call
pop
aas
sbb
mov
cmpsb
loopne
mov
pop
aam
sub
push
movb
jne
xor
mov
aad
push
aad
jmp
movsl
out
jp
push
out
and
cmp
lds
ljmp
mov
dec
lods
lea
xchg
dec
hlt
and
data16
pop
popa
loope
lock
inc
test
pop
push
adc
fdivs
imul
mov
sbb
repz
dec
lds
or
mov
sub
push
cmp
mov
jnp
pop
lock
dec
int
or
add
decb
jo
es
xor
push
sahf
out
out
cltd
xchg
pop
add
push
jno
repnz
mov
or
jle
test
inc
hlt
sbb
jns
sbb
add
icebp
sbb
xorb
pop
pop
jns
stc
sub
nop
scas
lcall
sub
and
adc
mov
add
inc
mov
pop
mov
adc
imul
push
dec
and
loope
mov
aas
xchg
jnp
cli
jle
ljmp
in
mov
xchg
lahf
jmp
stos
ds
add
inc
int3
mov
sub
and
adc
sbb
mov
out
sbb
idivb
dec
xchg
repz
daa
inc
insb
aaa
orb
cli
ljmp
mov
sub
pusha
or
adc
lods
add
sahf
ret
xchg
sub
pop
lahf
ljmp
mov
mov
cwtl
js
mov
add
cmp
imul
sbb
cmp
rorl
fwait
jae
adc
and
ds
fdiv
negl
mov
movsb
mov
mov
div
sbb
mov
lea
je
jno
or
push
in
mull
lret
ds
mov
sti
jnp
pop
in
pop
vdivpd
in
add
mov
iret
jmp
mov
mov
aas
gs
lock
cmp
and
cmp
insb
pop
int
icebp
xor
enter
xchg
mov
decb
test
sub
pop
fs
call
jmp
testl
dec
pop
shlb
fistl
rclb
bound
das
dec
adc
nop
mov
movsb
cltd
icebp
push
lock
pushf
out
sbb
call
stos
sub
jmp
cmp
fisttpll
outsb
xor
stos
into
sar
in
mov
bound
lahf
cmp
jl
out
and
cmp
les
cmpsb
shrb
shl
repz
jmp
jl
add
outsb
add
mov
and
clc
out
and
dec
cmc
mov
insl
xchg
lods
mov
push
cmpsl
dec
pop
mov
jmp
call
ds
cltd
int3
pop
pop
xor
stos
cld
pop
repnz
jg
mov
outsl
cmp
fcomp
inc
out
in
jmp
ds
xchg
mov
xchg
mov
cmp
xor
cli
or
cmp
movsb
call
push
outsl
dec
std
add
out
rcr
sbb
in
pop
out
fnstsw
ficoml
cld
dec
mov
push
push
aas
mov
pop
inc
and
jle
cmp
enter
xlat
ret
xor
iret
ss
aam
cmp
lret
in
or
mov
lea
test
fbld
test
pop
push
pop
lea
cli
jb
dec
cmp
leave
stos
into
je
push
ja
out
jle
das
pushf
mov
push
insl
sub
subl
mov
ss
push
dec
ss
mov
push
clc
pop
movups
lock
je
pop
ljmp
nop
into
cli
sub
sub
sarb
iret
push
es
outsb
or
sub
out
jnp
aad
outsl
mov
mov
push
lret
push
fadd
xchg
cmp
pop
sbb
adc
cmpsl
iret
mov
rorb
and
push
popa
push
pushf
inc
jnp
push
js
adc
hlt
adc
xor
mov
jle
out
mov
dec
je
xchg
pop
push
sbb
push
jge
subb
and
jecxz
mov
bound
sbb
cmpb
dec
lods
cs
adc
xchg
loopne
push
insl
inc
cmp
adc
cli
push
dec
mov
fnstsw
fwait
lret
sub
int3
mov
push
mov
lahf
push
es
insl
movb
or
jae
push
inc
push
push
fcomps
pop
aad
loopne
mov
jp
sbb
mov
and
jno
adcl
jne
jne
cmp
sub
out
mov
nop
mov
add
icebp
xchg
stos
pop
cs
loop
insl
xchg
add
enter
or
and
jnp
aad
pop
lcall
ljmp
mov
or
insb
mov
popf
adc
mov
jecxz
nop
je
pop
addr16
xchg
ljmp
push
aas
out
or
mov
stos
push
lcall
inc
push
xor
jbe
adc
push
cmp
je
addr16
xchg
int
jbe
or
les
popa
hlt
mulb
add
pop
xchg
mov
dec
pop
xchg
push
arpl
mov
lods
out
jns
out
cmp
pop
lahf
push
sub
add
fcmovnbe
jno
sbb
lahf
dec
in
shrb
addr16
sbb
movsb
and
xchg
jmp
sarb
into
cmp
into
insb
mov
insb
xor
inc
mov
adc
ret
fs
xor
ret
repz
jmp
jg,pt
xchg
jmp
adc
push
and
insl
sar
outsb
cmp
jl
add
mov
push
and
push
dec
mov
popf
inc
xlat
test
lds
xchg
repz
lret
das
mov
pop
lahf
xchg
xor
out
scas
and
out
mov
cmp
test
inc
lcall
mov
jno
ret
and
inc
sbb
mov
pop
aas
fcmovne
and
and
std
lods
call
sub
cmp
xchg
push
xor
xor
movsl
pop
data16
into
cmp
cmpb
icebp
or
outsl
ret
add
mov
lods
roll
ret
loope
test
dec
push
jnp
sahf
fcoml
mov
push
insb
xor
push
sahf
xor
cmpsl
mov
mov
jno
xchg
into
aaa
xchg
fs
loopne
sub
loope
out
aam
mov
xchg
push
pushf
mov
lock
mov
nop
sbb
bnd
jne
xchg
mov
sbb
loopne
ss
or
js
jge
fstpt
xchg
int
stos
data16
testl
in
dec
sub
push
pop
mov
mov
aad
fs
movsb
outsl
loopne
in
movsb
adc
and
cmp
iret
ljmp
cld
mov
dec
jl
int
leave
inc
mov
xchg
iret
ss
sub
popf
movsl
mov
or
and
leave
aam
in
and
sbb
rclb
mov
das
dec
mov
stos
xchg
cs
inc
lods
sbbb
jo
sbb
imul
fcmovnb
inc
mov
push
incb
pushf
mov
shrl
mov
in
pop
dec
sbb
add
scas
push
pop
mov
testb
xchg
sub
popa
outsl
xor
inc
scas
mov
pop
xor
outsl
jg
dec
je
inc
ret
sbb
cmp
xchg
xor
inc
mov
dec
addr16
popf
sbb
adc
jmp
xlat
dec
pop
int3
and
idivw
push
leave
loop
subb
cwtl
shlb
aad
push
add
xor
push
sbb
bound
dec
dec
adc
inc
mov
test
jo
rorl
inc
xlat
adc
xor
cmpsb
pop
daa
pop
inc
outsb
mov
nop
dec
dec
jp,pt
lcall
test
xchg
jo
xchg
and
outsb
and
clc
scas
or
insb
sub
dec
mov
adc
ret
lahf
mov
pop
inc
scas
outsb
stc
dec
leave
inc
cmpsb
xchg
pop
in
bound
jbe
call
mov
aad
ret
adc
mov
sar
mov
jge
mov
jbe
sbb
pop
inc
mov
test
xchg
mov
add
into
addr16
jne
xor
inc
insl
jnp
test
inc
loope
imul
aad
pop
push
or
nop
mov
idiv
sbb
pop
shr
fldl
inc
cmp
inc
push
fwait
push
loopne
ljmp
mov
xor
mov
inc
cwtl
jl
test
inc
add
jp
test
add
sbb
push
or
or
inc
in
push
xchg
jno
int3
or
sbb
inc
jl
add
push
jns
js
insl
addl
mov
mov
shlb
jecxz
bound
scas
stos
cmp
pop
xor
into
outsl
es
fisubl
outsb
data16
xor
sub
lock
in
inc
and
dec
cltd
pop
shl
std
push
add
test
lock
stos
in
iret
aas
cld
adc
iret
int3
test
push
mov
imul
dec
lods
push
or
rcrb
repnz
mov
in
jns
iret
shlb
inc
insl
pop
cld
dec
push
add
clc
jle
pop
jl
mov
dec
mov
shrl
repz
mov
pushf
int
or
fwait
pop
hlt
lret
sbb
push
cmp
js
mov
adc
cmc
loopne
ret
jecxz
push
jae
mov
dec
mov
pop
mov
cmp
jne
xchg
ja
jno
notl
fldt
push
xchg
cmp
xchg
push
sub
sub
dec
out
cmp
out
cmp
loope
push
test
inc
repz
insl
push
jmp
clc
ljmp
divb
shl
pop
xchg
scas
ret
and
mov
lret
xor
into
loopne
jno
dec
jne
cs
dec
cmc
mov
push
add
jnp
pop
dec
inc
pop
add
shll
aaa
fs
jecxz
repnz
xchg
loopne
cmp
out
mov
scas
sub
stc
sahf
sbb
orb
xchg
xchg
test
lret
cltd
jae
pop
sub
pop
mov
pop
dec
in
or
in
xor
cltd
push
mov
cmp
inc
cli
sub
cmp
test
xchg
xor
fidivl
bound
adc
inc
add
orb
jo
mov
roll
ficoms
lods
testl
fistpl
adc
pop
out
push
push
push
fidivrl
push
push
sarl
mov
xor
dec
inc
mov
or
adc
test
imul
xor
and
push
cwtl
js
icebp
xor
fisttps
fs
dec
add
jp
adc
arpl
das
int
roll
cltd
fldpi
and
ret
fwait
jmp
xchg
fdivl
xor
mov
mov
icebp
pop
inc
mov
addb
push
sub
xchg
add
cld
leave
cmp
sbb
shl
ljmp
scas
dec
ret
or
push
xchg
jle
or
cmp
mov
pop
outsl
cmp
dec
enter
xor
mul
xchg
mov
mov
xlat
xchg
shlb
or
pop
cmp
scas
bound
lcall
xchg
cmp
in
lcall
cmc
dec
jp
ret
mov
add
sarl
inc
fdivrs
pop
imul
add
enter
mov
sub
or
mov
jge
aas
cwtl
xchg
scas
add
scas
mov
dec
rclb
lock
loopne
xchg
ffree
jns
loop
xchg
push
addr16
inc
add
jae
pop
mov
js
aaa
faddl
int3
and
xor
dec
mov
jge
mov
in
clc
inc
inc
or
xor
stos
icebp
clc
inc
fs
push
daa
js
cmp
or
dec
sbb
js
or
rclb
mov
clc
in
mov
cmp
scas
pop
sbb
aaa
jmp
cmp
pop
testb
sarb
push
sub
jmp
mov
jge
cmpsl
push
daa
ja
jnp
or
jge
jecxz
jno
xor
cmpsl
lret
mov
xchg
dec
jl
aas
loop
test
icebp
pop
sti
movsb
es
xchg
in
push
push
sub
shll
fcomps
inc
data16
sbb
pop
sbb
push
cwtl
int
or
dec
addr16
sbb
push
push
clc
adc
push
fmuls
test
shl
scas
sub
push
jo
test
bound
test
sub
and
xchg
mov
inc
cmp
addr16
mov
enter
pop
pop
imul
add
add
add
orb
and
mov
into
ret
lahf
and
test
outsb
divl
mov
stos
adc
adc
cwtl
inc
push
shll
sub
sub
xor
andl
mov
xchg
and
rorl
repz
fsubl
adc
dec
add
push
mov
cltd
mov
jp
pop
mov
xchg
jne
aas
jne
std
testl
mov
pushf
clc
cmp
hlt
je
jae
cli
sbb
jge
out
jb
mov
cld
dec
imul
lcall
pop
or
rcrl
js
cmp
addr16
dec
mov
fstpl
xor
in
mov
mov
ss
inc
test
fsubs
enter
out
cvtdq2ps
repz
sti
andb
das
adc
cmp
and
popa
rorb
scas
xchg
dec
in
cmp
out
out
lret
outsb
lock
and
fucomi
std
mov
in
inc
jge
jo
loop
scas
adc
stos
in
lea
xor
mov
jns
inc
cmp
repnz
add
outsl
adc
mov
sub
leave
lcall
cmp
jp
fidivrs
mov
les
pop
or
push
mov
sbb
xchg
mov
lahf
mov
sbb
add
popf
push
jle
fs
xchg
je
aas
ja
cmc
mov
das
mov
rolb
mov
inc
stc
pop
cltd
mov
adc
dec
cmpsl
in
dec
sub
and
enter
imul
dec
xchg
test
movsl
sbb
or
fdivp
outsl
rclb
or
sti
inc
add
fsubl
int
sbb
nop
cmp
xlat
jg
push
out
call
mov
icebp
mov
dec
mov
jmp
rolb
fcmovnu
or
movsb
cmp
add
mov
lahf
bswap
adc
cmp
pop
sbb
push
cmp
ds
xor
ja
fdivr
inc
sahf
rcrb
fbld
cmpsl
decb
imul
push
lret
xor
jmp
inc
and
insl
fimull
shr
cltd
sbb
sub
push
vshufpd
mov
xchg
in
jb
fiaddl
pop
nop
jp
sarb
push
notb
xor
sti
mov
inc
push
jns
insl
fcomps
jp
sbb
jo
pop
inc
mov
fcoms
push
add
ja
dec
cmc
mov
push
inc
jns
add
pop
cs
rcrb
push
dec
mov
aad
push
mov
add
inc
je
and
sub
test
shll
pop
xchg
popa
jge
ljmp
icebp
frstor
pop
sub
lds
fs
jmp
inc
cmc
sub
test
jmp
cld
jg
test
data16
fistpl
outsb
pop
dec
add
pushf
xchg
aas
bound
movl
decl
sarl
test
or
pop
add
pop
jecxz
push
mov
dec
and
cmpsl
test
popa
js
adc
mov
fsqrt
insl
dec
int3
into
sbb
lds
dec
jne
lods
aad
push
cld
xor
cmc
xchg
lods
and
ret
add
icebp
fcompl
mov
in
jp
mov
mov
shlb
outsl
cltd
xchg
ds
inc
out
jae
pop
xchg
xor
outsb
pop
mov
in
push
cmp
or
mov
xchg
out
jge
fstps
jo
test
js
fcmovnbe
pop
dec
or
jns
add
or
popa
loope
mov
adc
loope
jne
jb
mov
inc
mov
mov
xlat
enter
xor
xor
sub
jnp
adc
pop
jne
mov
or
xor
sarb
adc
and
adc
mov
mov
in
imul
sbb
add
mov
in
or
fdivrs
push
clc
lock
xchg
adc
aas
adc
sub
hlt
and
push
inc
sarb
push
adc
jecxz,pn
pop
enter
popa
add
cld
xorb
xor
cmpsb
jl
lcall
fsubrs
shl
mov
imul
pop
mov
jns
hlt
gs
nopl
jnp
movsl
mov
lcall
mov
sub
loopne
loop
mov
cmp
fs
lret
mov
sti
enter
decb
fnsave
cs
pushf
aad
inc
mov
addr16
nop
popa
scas
ljmp
movsl
iret
sahf
adc
in
and
jbe
loope
mov
repz
repnz
push
xlat
mov
test
jo
pop
lds
sbb
mov
mov
std
sub
rcrb
adc
sbb
push
xchg
fdivl
pop
push
push
test
mov
and
mov
xor
add
or
or
rcr
add
add
imul
jae
pop
popf
movsb
addb
punpckhbw
gs
fcoms
push
xor
jns
leave
mov
popa
jl
inc
xor
mov
fucomip
add
mov
daa
imul
cli
inc
jnp
lods
mov
sbb
mov
int
adc
dec
fisubrs
movsl
mov
dec
out
inc
cmp
push
pop
test
das
rclb
adc
lods
mov
mov
std
dec
mov
pushf
movsb
pop
call
dec
push
jno
outsl
sub
fistps
aaa
inc
mov
or
sbb
add
decl
das
ret
xchg
popa
cli
ret
or
cmp
jbe
roll
sub
or
stc
inc
fucompp
mov
push
insb
xchg
test
cld
pop
fisttps
imul
filds
pop
subl
sbb
jns
pop
out
iret
test
jo
sbb
dec
les
clc
out
dec
sub
hlt
ss
xor
push
out
mov
cmp
in
outsb
add
push
mov
mov
or
fcmovb
arpl
push
out
popf
mov
inc
js
cmpsb
mov
ja
mov
div
jbe
pop
negl
outsb
mov
hlt
add
adc
movsb
lret
mov
movsb
hlt
test
mov
xchg
push
and
dec
xor
add
mov
fwait
sub
inc
jge
xchg
mov
int
or
add
std
jns
imul
add
lahf
jnp
jle
pop
adc
mov
inc
dec
out
test
fwait
sahf
push
add
lret
hlt
out
and
pop
or
popa
iret
adc
jmp
daa
xchg
mov
pop
jmp
ficoms
inc
cmpsl
aaa
aas
jb
sbb
out
fucomip
fidivrl
pop
out
pop
fidivl
fcmovnb
add
mov
in
sub
cmp
mov
ret
sub
lods
leave
jnp
mov
jbe
xchg
sbb
ja
mov
data16
stos
jae
mov
xchg
jnp
jo
mov
or
sbb
fldl
jae
sbbb
out
rcrb
inc
pusha
enter
dec
outsb
notl
int3
in
and
sub
jb
in
sub
sbb
ja
mov
imul
jmp
call
popa
jge
dec
les
xchg
mov
lds
mov
int3
push
fidivs
mov
inc
xchg
cmp
mov
rorl
insb
test
rolb
and
sub
or
xor
pop
jecxz
cmp
loopne
or
ror
pop
push
mov
movsb
xorl
push
push
push
push
gs
push
mov
shlb
je
add
push
iret
imul
fwait
andb
gs
adc
lods
loopne
subb
mov
sub
ret
shrl
sbb
mov
jno
js
in
sbb
ja
jge
mov
adc
jae
mov
push
inc
push
push
push
xchg
pop
rcrb
aam
sar
mov
dec
push
or
inc
inc
mov
loop
lret
push
loop
mov
and
xchg
push
scas
jbe
sub
popa
testl
shl
movsl
xchg
jns
js
dec
sbb
cmp
and
out
adc
add
insl
arpl
sbbl
sbb
mov
mov
push
sub
hlt
mov
scas
xor
das
int3
lahf
push
and
and
cmpsb
scas
push
mov
icebp
pop
shl
fbstp
int
cmpsl
pop
rcl
scas
pop
mov
push
mov
jecxz
push
mov
dec
ljmp
pop
mov
xlat
adc
std
jnp
mov
add
jno
cs
inc
ret
test
cmp
push
ficoml
movsl
fs
sub
or
lock
inc
fnstcw
iret
nop
push
pop
push
insl
mov
xor
daa
adc
movsl
test
ja
inc
mov
test
cmp
gs
jnp
insb
mov
jne
push
nop
out
sub
sti
insb
imul
push
sbb
pop
imul
add
push
pop
mov
jmp
inc
pusha
test
paddq
sbb
mov
xchg
mov
or
repnz
dec
in
push
mov
rorl
jp
push
js
cmp
sub
mov
shrl
mov
rcll
lret
outsb
sbb
mov
cmp
and
cwtl
jo
pop
in
dec
sub
mov
and
mov
loop
int
cmp
mov
in
cmp
fadd
xor
lcall
mov
stc
scas
cmp
mov
enter
mov
cmpsl
xor
out
cmp
in
adcl
inc
dec
add
int3
sarb
fiadds
push
int3
pop
aaa
add
les
test
stos
lret
xchg
mov
sub
test
mov
test
xchg
xor
mov
fdivrp
inc
adc
mov
add
mov
scas
jnp
jge
insl
pop
dec
lahf
dec
ret
sub
test
sub
insl
jb
xchg
in
shl
sbb
inc
lods
in
out
inc
fcoms
fcmovb
sahf
fucomp
xor
cmp
sbb
push
xchg
js
dec
sti
aaa
push
dec
sub
js
or
push
es
jl
cld
and
push
mov
jno
mov
or
sub
dec
adc
pcmpeqd
mov
in
arpl
insl
int3
std
cmp
mov
or
in
xor
add
cmpl
movsl
add
mov
cmpb
or
in
js
pop
mov
xchg
negl
adc
leave
jecxz
ds
jle
ljmp
and
pop
pop
out
sub
xchg
cmp
sbb
xchg
inc
inc
pop
push
sbb
cmp
loop
add
iret
stos
pop
stos
insl
cmpsb
or
faddl
ljmp
xchg
hlt
mov
je
lret
stc
cmp
cmpsl
mov
jb
inc
jno
repz
data16
dec
xchg
dec
dec
sub
jno
xchg
jge
pop
rclb
cwtl
clc
lahf
lret
adc
inc
pop
adc
mov
popa
mov
shlb
ja
dec
test
mov
mov
mov
dec
in
shlb
sub
fisubrs
push
daa
xchg
adc
mov
add
incl
not
or
testl
xor
mov
inc
pop
add
hlt
jl
dec
or
hlt
pusha
rcrl
inc
add
fs
lock
movsl
es
push
test
testl
outsb
bound
push
iret
out
xchg
sbb
add
dec
xchg
cld
mov
subl
rorl
xor
fists
int
cmc
mov
pop
xchg
adc
cli
mov
adc
xchg
fsubl
adc
push
push
lock
pop
rcll
cmc
xor
imul
adc
adc
lret
mulb
loop
mov
inc
stos
ret
xchg
stos
adc
adc
cmp
loope
loopne
in
push
cmp
or
lret
inc
push
mov
out
ds
insl
mov
inc
pop
or
ja
pop
inc
and
lea
jl
fisubrl
aad
lock
xlat
cmpb
js
mov
mov
sbb
mov
sbb
jp
inc
cmc
out
cmp
or
outsb
cwtl
loopne
jnp
mov
and
pop
out
fadd
repz
dec
arpl
mov
mov
mov
jb
lea
adc
push
add
js
shrb
jle
cmp
test
pop
fldl
add
in
or
insl
dec
mov
add
cmp
xlat
scas
mov
jmp
jns
lds
xor
daa
in
jp
push
pop
outsb
xchg
jg
xor
xor
xor
cmp
mov
mov
into
enter
addb
scas
loope
xor
das
xor
das
add
and
mov
dec
dec
push
cltd
hlt
shrb
sub
inc
inc
jbe
std
hlt
ret
cld
popf
adc
jmp
inc
stc
pop
fmulp
sbb
outsb
push
push
cmp
aad
stos
scas
aaa
je
dec
repnz
jns
inc
pop
xlat
ds
or
jecxz
test
out
sbb
fiaddl
mov
push
mov
test
xor
std
xchg
jle
pop
inc
lret
mov
pop
roll
push
imul
mov
dec
fwait
mov
or
in
pop
mov
fwait
cwtl
jp
and
cmp
lret
scas
roll
loop
push
data16
das
sahf
shrl
dec
fwait
clc
jnp
icebp
or
cmpsl
pop
movsl
jp
dec
xchg
dec
cmpsl
inc
dec
xchg
jb
mov
mov
outsb
mov
cmc
jbe
lcall
and
xchg
mov
int
cmp
sbb
rorl
pop
push
inc
add
loopne
inc
aas
cmp
and
push
lock
lret
scas
mov
mov
mov
or
arpl
push
jb
mov
daa
pop
xor
cli
adcb
daa
cs
pop
data16
das
dec
cli
out
sub
ss
mov
adc
loop
xor
cwtl
jae
inc
sub
mov
mov
sub
dec
jnp
out
stos
jne
mov
mov
lea
pop
ret
rorb
hlt
pop
notl
fsubrl
lret
call
adc
call
stc
test
cmp
mov
mov
or
xor
cmpsl
test
sub
fisubs
test
loopne
int
iret
mov
and
incl
mov
mov
lock
mov
in
cmp
mov
popf
ficoml
adc
int3
jo
loope
insb
mov
sub
mov
or
insb
sub
add
in
fsub
mov
xor
clc
scas
dec
fsts
test
adc
dec
push
lods
cmp
repz
out
add
fcomps
xor
and
ja
push
sub
sub
pop
inc
insl
xor
pop
pusha
inc
jg
cmp
aaa
fs
mov
sbb
xchg
test
push
decb
mov
not
setge
imul
pusha
outsb
loop
leave
pop
gs
mov
sbb
addr16
dec
sbb
push
dec
sahf
xor
adc
mov
adc
jnp
xor
mov
pop
lods
push
clc
adcb
das
pop
fbstp
sahf
sti
inc
mov
dec
push
cmp
dec
pop
incb
in
inc
pop
rcll
mov
jnp
pop
dec
sbb
outsb
ret
inc
jb
jge
pop
insl
xchg
ret
mov
xor
dec
fstpl
lret
popf
shlb
pop
jg
jle
inc
fidivrs
cmpsl
xor
xchg
in
mov
in
push
dec
dec
jne
test
orb
and
mov
mov
cmpsl
lds
sti
or
fsubr
cmp
and
clc
aaa
rcrb
jl
cs
mov
cwtl
loopne
or
mov
clc
xor
test
dec
enter
outsl
sbb
icebp
xlat
sub
sub
cs
xor
imul
ljmp
mov
jbe
and
cmpsl
pop
out
repnz
inc
ret
mov
int
mov
dec
mov
jnp
pusha
pop
es
jo
adc
loop
pop
loop
cmp
je
and
xchg
dec
adc
shll
pop
inc
les
out
cs
add
movsb
sbb
mov
dec
add
sub
subl
fcmove
mov
jns
cld
xchg
jmp
sub
std
mov
aam
cmpsb
imul
notb
xchg
arpl
xchg
pop
push
adc
addr16
jecxz
ret
push
inc
sbb
and
cmc
push
xor
jb
dec
or
pop
jmp
stos
insb
mov
call
cmpb
push
sahf
lods
in
into
sbb
jl
js
pop
mov
jnp
lock
leave
xchg
lods
std
das
jl
sub
fwait
movsl
aad
pop
cmp
adc
jg
xchg
jge
and
scas
insb
mov
fiaddl
cmp
fcompl
jl
ret
dec
call
mov
out
lret
inc
adc
int3
dec
sub
jne
dec
cmp
bound
mov
dec
pop
icebp
cmp
hlt
xchg
inc
mov
outsl
js
jl
jecxz
sarb
xlat
dec
xchg
jo
push
jge
loope
lods
scas
fwait
or
or
xchg
lret
mov
leave
test
flds
jecxz
rclb
pop
cli
add
adc
repnz
mov
dec
andb
push
out
aas
dec
loopne
jne
jl
xchg
jmp
inc
xchg
mov
insb
push
mov
jne
mov
aaa
xor
mov
rcrb
adc
pop
push
sub
add
cmp
xchg
test
insb
or
mov
and
xor
push
out
xchg
jne
test
add
stc
mov
pop
sahf
cmp
mov
insl
out
mov
popf
hlt
mov
sub
repnz
sub
fnstcw
sub
repnz
push
inc
test
dec
dec
adc
pop
xor
sub
ljmp
leave
sub
sbb
mov
aas
cmp
mov
mov
out
aaa
pop
loopne
xchg
inc
push
jge
pop
sub
dec
outsb
or
mov
add
mov
ret
outsl
js
xlat
sbb
xchg
in
or
sbbb
shl
loop
scas
or
xchg
cwtl
mov
pop
in
inc
stos
shrl
sub
mov
imul
fidivrl
lcall
sbb
stos
js
test
cltd
sub
mov
xlat
cwtl
andb
dec
pop
pop
sub
mov
cld
test
sub
add
add
test
push
pop
incl
mov
pusha
jp
daa
int
add
adc
in
loope
stos
out
dec
out
push
in
inc
sub
mov
and
mov
sub
xchg
sti
jl
or
test
js
mov
addr16
add
in
cld
addr16
xchg
mov
mov
dec
mov
flds
pop
mov
sub
popf
sbb
cmpsl
bound
jmp
cs
push
push
fsubs
aad
and
int
push
in
xor
loop
and
or
push
mov
lret
loop
cld
adc
filds
enter
xchg
lods
mov
adc
aam
jno
push
scas
sti
icebp
rclb
inc
push
pop
shrb
mov
test
add
pop
inc
xchg
leave
xor
movsb
push
test
in
out
push
dec
shr
test
inc
out
nop
mov
sub
shlb
push
mov
pop
insb
push
ret
pop
fistpll
cmp
adc
pop
sar
jno
xor
inc
sti
and
xchg
mov
out
push
adc
mov
nop
fcomip
sub
jg
xorb
lods
lret
mov
das
push
inc
or
daa
jae
imul
jecxz
pop
cltd
jno
je
xor
in
add
mov
inc
les
pop
js
mov
push
jae
idiv
xchg
pop
push
clc
je
scas
add
test
loope
gs
xchg
add
push
mov
and
mov
sarb
in
dec
shrl
test
repz
js
ret
sbb
jb
movsb
roll
xchg
test
sbb
jo
ss
sub
fdivl
inc
pop
push
lods
pop
lret
xchg
add
fs
ds
xor
fwait
xor
fdivrp
roll
push
bound
insb
xchg
adc
aam
pop
adc
xor
cmc
jne
xor
mov
insl
push
cs
push
addr16
data16
in
mov
dec
pop
lock
cmp
aam
enter
out
inc
dec
mov
testl
cmpsb
lret
ja
movsl
dec
push
pop
cs
cmp
dec
idivl
rorl
fwait
dec
push
test
push
and
fstps
scas
imul
js
push
push
jb
shll
stos
add
mov
fistpll
add
sub
and
outsb
mov
lret
das
xchg
divl
into
shufps
and
movsl
enter
inc
push
jo
pop
pushf
mull
mov
loopne
jmp
stc
jmp
ss
xor
insb
ljmp
fstps
call
and
push
xor
mov
adc
or
fstpl
insl
je
pop
pop
fidivrl
je
mov
jmp
lods
add
xchg
insl
imul
dec
push
xor
push
pop
andl
add
sti
divb
or
mov
or
lods
xchg
iret
sub
xchg
push
xchg
mov
cmpsl
lcall
scas
lea
inc
std
adc
cmpsl
aam
dec
pop
mov
aaa
loopne
cltd
lea
imul
pop
aas
loop
scas
scas
dec
rcrl
cltd
pop
popa
lcall
test
push
arpl
int
mov
cmp
mov
push
movsl
push
sub
push
cmp
pop
ds
mov
lods
imul
jle
rcrl
das
pop
lcall
push
pop
mov
sub
jne
into
mov
in
repz
mov
cmp
mov
pushf
bound
iret
js
and
nop
add
lods
pop
and
push
sub
ljmp
stc
push
nop
push
dec
cmpsl
and
xchg
cmc
rep
gs
jnp
outsl
pop
sub
jmp
xlat
mov
mov
sub
push
mov
mov
and
subb
and
mov
dec
cmp
jmp
in
jmp
cmpsb
and
cmpsb
mov
je
hlt
and
sarl
out
stos
add
cli
add
iret
pop
idiv
daa
outsb
mov
cmp
inc
push
mov
loop
out
stc
and
or
lods
popa
mov
add
out
rorb
jo
add
int
add
sub
sbb
dec
mov
outsl
test
add
les
xor
pushf
leave
push
and
rclb
daa
int3
push
add
xor
or
jnp
xchg
test
negb
push
or
hlt
test
mov
push
in
or
xchg
sbb
inc
out
push
push
dec
outsl
in
test
sbb
sahf
out
popa
or
inc
mov
popf
sbb
ret
cld
mov
call
xchg
aaa
xlat
enter
ja
sub
nop
and
pop
inc
pop
enter
jmp
in
mov
cs
popf
popf
loopne
push
jnp
mov
adc
out
push
lods
inc
insb
jne
xchg
popa
cmp
in
push
cld
push
xchg
shrb
mov
add
pop
loopne
lret
out
mov
fsubs
shll
movl
jge
jo
addr16
daa
movsb
push
or
xchg
aas
push
mov
sbb
jp
stos
adc
mov
in
into
push
stc
cli
dec
jl
dec
mov
add
sub
fwait
sub
and
sarb
mov
lahf
jne
rolb
lods
imul
cmp
pushf
adc
sbb
mov
or
mov
in
in
lea
mov
pusha
ss
pop
or
pop
add
jp
cmp
test
mov
cmp
jnp
jmp
xchg
lods
and
xor
lret
and
mov
sub
mov
in
insl
cmpb
imul
cs
xchg
xor
fimull
and
mov
mulb
test
and
jmp
xor
or
push
loope
inc
cmp
outsl
mov
lret
insl
rcrl
fwait
scas
fcmovb
push
jns
shl
iret
xchg
sbb
nop
ret
stos
gs
sbb
mov
roll
lods
pop
gs
sbb
inc
addr16
xor
imulb
push
adc
dec
ljmp
popf
pop
mov
push
jg
rolb
cld
add
jmp
jmp
cmp
sub
inc
pop
hlt
daa
aas
imulb
enter
dec
jl
inc
or
xchg
cmp
pop
lods
aas
adc
push
and
push
imul
lods
sub
js
and
xor
fiadds
jp
scas
mov
daa
sarl
mov
pushf
mov
ds
cmpsb
imul
and
dec
or
mov
cmp
fidivrs
dec
adc
insb
cwtl
push
stos
mov
out
shll
cmpb
add
inc
sti
popf
mov
ret
or
int3
stos
gs
lcall
add
fcoml
jnp
xchg
or
dec
or
stos
adc
icebp
aas
xlat
and
dec
xor
loopne
push
sbb
sbb
ja
hlt
shrb
out
pop
push
jle
add
mov
adc
repnz
lods
sbb
test
inc
push
lahf
sub
stc
inc
rclb
outsb
push
jb
sub
jne
jg
test
mov
sub
lea
jnp
cmp
adc
sbb
into
mov
xor
mov
jnp
mov
movsl
mov
add
ret
mov
mov
push
ret
lret
je
xchg
fnsave
add
xor
rol
xchg
adc
mov
jne
les
cmp
int3
in
lret
in
enter
add
mov
cmp
jno
movsb
jae
xchg
fcomps
or
jp
adc
inc
jnp
movb
mov
sub
outsb
mov
imul
cltd
pop
xchg
mov
and
xor
ja
cwtl
mov
inc
add
adc
add
bound
mov
movsl
int3
sarl
and
cmp
and
xchg
and
pop
out
inc
fildll
dec
fcompl
cmp
jb
xor
mov
mov
cwtl
roll
mov
stos
pop
cmp
loop
cld
cmc
cmc
and
out
push
dec
shrb
ret
lods
cmpsb
pop
rcrb
dec
xchg
push
push
es
push
add
lret
mov
inc
pop
inc
nop
cli
pushf
clc
add
dec
aas
movsl
jmp
mov
xchg
or
mov
sub
scas
xchg
jecxz
mov
jns
pusha
into
push
testb
jns
sbb
add
inc
sti
clc
lods
mov
in
mov
adc
mov
shl
and
xor
dec
inc
mov
add
out
fidivrl
and
or
jb
arpl
xchg
xchg
inc
lret
lea
cmp
jb
pop
add
seta
pop
jmp
xchg
fdivrs
push
out
outsl
cld
inc
ljmp
fcompl
in
cmp
int3
sub
nop
mov
sub
dec
cmp
adc
jge,pn
mov
sti
enter
pop
inc
aaa
jg
pop
add
cld
mov
lods
xchg
push
hlt
mov
mov
aas
jb
insl
pop
push
imul
xchg
xchg
bound
std
sbb
xor
add
xor
push
cltd
mov
sti
inc
jae
pushl
outsb
fcoml
pop
aas
inc
js
insl
notl
pop
into
fildll
or
cmp
mov
push
jp
add
insb
daa
dec
mov
in
jecxz
cmp
or
adc
push
pop
dec
ja
cs
in
ja
or
enter
sbbb
xlat
jecxz
out
jno
mov
icebp
inc
mov
lods
loopne
dec
arpl
jno
xorl
shrl
mov
cwtl
rol
pop
push
dec
sbb
fdiv
popf
dec
push
js
dec
aaa
jnp
push
fsubrs
mov
xchg
jae
sub
inc
daa
push
jl
push
dec
ja
popa
fbld
cli
jae
xlat
add
dec
cmp
daa
lcall
outsl
jle
adc
xchg
insb
out
sub
cli
out
sub
or
out
int3
repz
dec
test
jae
mov
divb
bound
enter
sti
xor
mov
loop
jecxz
in
pop
insb
and
jb
jb
mov
fidivrs
aaa
aad
mov
and
loopne
inc
shl
mov
or
add
and
insb
adc
popf
mov
imul
sub
push
add
add
lds
loop
sti
out
pop
or
push
dec
push
mov
lock
out
lahf
or
test
cmc
xchg
lock
fs
out
cmp
cmc
in
sbbl
or
xlat
mul
scas
es
movsl
imul
add
add
fcoml
fdivr
decl
pop
mov
mov
in
inc
mov
xor
mov
in
insb
jmp
les
nop
jp
jo
pop
cld
push
cmp
cmpsl
popf
pop
add
cmp
sub
pop
pop
adcb
pushf
test
sub
inc
and
xor
ficompl
jo
ljmp
push
adc
stos
jbe
iret
mov
push
aas
and
mov
dec
adc
leave
dec
arpl
mov
adc
xor
jnp
inc
or
xor
stos
iret
fnstenv
mov
sbb
sarb
jno
mov
fs
call
add
or
push
adc
push
sbb
lock
test
jae
cmp
rcrb
es
dec
push
dec
enter
ja
inc
add
cmp
orl
xor
popa
mov
inc
xchg
pop
mov
dec
or
rep
cli
icebp
sbb
jnp
adc
jge
sbb
sbb
add
aam
into
jne
out
push
inc
and
out
dec
rorb
push
cmp
in
lea
ljmp
sub
and
aaa
mov
aad
loopne
cmp
fnstcw
jb
addr16
lds
shll
mov
les
push
pop
and
push
dec
push
mov
neg
shrb
cmp
arpl
mov
test
xor
filds
lock
mov
arpl
mov
fcoml
imul
sub
inc
out
jge
lcall
inc
and
or
ficoms
add
add
in
inc
push
jo
jmp
jecxz
repnz
mov
es
sub
daa
stos
cltd
pop
fmulp
cli
fidivs
shrl
cmpsb
jg
or
add
jo
lret
pop
jns
xchg
cmpl
fwait
cmp
xchg
cld
mov
and
pop
in
fldcw
das
imul
jmp
lret
mov
mov
and
push
adc
push
je
xlat
movsl
mov
inc
in
inc
jmp
pop
ljmp
lea
ja
push
push
or
bound
hlt
sbb
and
sub
xor
xorl
mov
cmp
bound
push
and
lods
xlat
push
or
mov
pop
or
shll
int
cli
jl
push
icebp
mov
push
mov
sub
push
push
orb
out
mov
mov
xor
push
pushl
lret
lods
fcoms
popa
lcall
movsl
testb
out
lea
mov
sub
dec
pop
add
fildll
cld
ljmp
enter
add
in
movsl
cmp
mov
push
out
into
popf
mov
push
add
xchg
js
jecxz
mov
int3
push
jns
lcall
enter
and
sub
lds
or
stc
pop
aaa
or
int3
stos
or
push
jle
daa
pop
jo
aam
xchg
int3
jmp
mov
icebp
nop
or
popf
ret
icebp
push
adc
leave
inc
adc
in
jp
jg
lcall
sub
popf
push
andb
and
icebp
inc
sbbl
and
sbb
loope
inc
push
and
adc
lea
sar
inc
jo
dec
in
mov
and
xchg
jns
or
inc
fwait
xchg
shrl
adc
into
imul
xor
mov
xlat
push
in
push
dec
lret
int3
cmpsb
jmp
ret
cld
mov
push
icebp
mov
jp
and
aad
pop
sub
in
test
jae
test
mov
fisubrl
mov
loop
popf
imul
adc
fstpt
pop
jae
push
dec
call
mov
xlat
mov
xlat
jl
cmpl
ds
jp
dec
fcmovnbe
rcrl
imul
daa
ficompl
out
mov
mov
js
test
and
dec
cmpsl
cmpl
push
xor
jmp
sub
mov
stos
add
jnp
aaa
xor
cmp
sub
aam
mov
cmp
aam
lds
mov
mov
push
in
fst
ja
ror
adc
fsubl
imul
mov
aaa
popf
push
cmp
and
imul
mov
in
or
lea
dec
and
xchg
and
icebp
in
test
imul
hlt
cmp
cmp
imul
xor
jae
and
jl
cmp
aam
incb
cli
test
popa
xchg
inc
fst
push
lcall
int
nop
fs
ficoml
rcl
jp
test
shrl
mov
mov
movsb
push
loope
nop
aaa
in
inc
inc
jno
xchg
mov
outsb
ret
stc
ss
pop
push
sbb
inc
orl
mov
add
add
fcmovnb
cs
and
pop
jnp
jne
push
gs
dec
add
cmpb
aas
out
nop
inc
ljmp
xor
pop
sub
adc
enter
inc
mov
arpl
or
xchg
cmp
adc
mov
adc
aam
mov
pushf
mov
cmp
popf
mov
push
aas
popf
push
add
subl
cmp
mov
rcrl
jge
mov
mov
mov
adc
or
inc
inc
ds
std
fwait
mov
mov
out
sti
fwait
push
and
and
mov
in
xchg
jecxz
mov
orb
int3
xchg
push
rolb
fistpll
adc
pop
push
cmpsb
mov
push
jge
inc
push
jno
ljmp
jns
std
shl
sub
push
ds
sub
add
adcl
pop
mov
xchg
scas
imul
cmp
nop
cmpsb
movsb
or
inc
test
mov
in
xlat
jl
dec
jl
das
testl
xchg
xor
jno
cmp
or
repz
add
add
sub
or
fdivl
icebp
mov
mov
popf
pop
inc
les
inc
sbb
cmp
scas
add
jnp
pop
xchg
mov
into
imul
adc
test
inc
mov
xor
out
fldcw
insl
mov
xchg
addl
lock
fucomp
mov
lret
xor
addr16
hlt
cmp
mov
dec
enter
gs
loope
or
push
ljmp
jge
lret
sub
in
or
sti
pop
inc
sbbl
loop
nop
hlt
sub
test
mov
dec
jne
arpl
int3
test
clc
cmp
pop
add
pop
push
mov
rcrl
adc
push
iret
bnd
shrl
xchg
in
xor
dec
bound
out
lcall
cltd
stos
pop
mov
cltd
mov
or
pop
aaa
xchg
pop
out
loopne
mov
sbb
dec
xchg
cltd
add
ss
jae
inc
js
int
add
xchg
dec
or
shrb
dec
daa
pushf
arpl
xorb
mov
icebp
jbe
mov
inc
xor
or
lahf
jg
lea
aaa
cmpb
sbb
cmp
sbb
jb
insb
fdivr
loop
mov
lcall
xor
mov
mov
add
into
push
mov
popa
cmp
and
pop
call
pop
fwait
mov
jno
into
cli
and
push
mov
pextrw
lret
mov
stos
arpl
adc
push
call
test
sub
lret
push
incb
fidivl
data16
mov
xor
movsb
insb
xor
add
cmp
fidivs
dec
test
jne
frstpm(287
movsb
insl
call
fisttps
in
push
xlat
and
sbb
mov
jmp
aad
rcll
out
popa
xchg
push
ss
cmp
pop
or
ja
sbb
ss
in
dec
add
xchg
outsl
lods
mov
stos
push
push
cmc
push
mov
int
aad
test
pop
outsl
jg
hlt
or
pop
adcl
aad
cltd
jl
clc
add
out
sti
pop
cmp
iret
out
xlat
in
aam
mov
lcall
add
adc
mov
aad
ds
popa
lock
sarl
fidivl
fists
movsb
push
std
mov
inc
or
xlat
mov
pop
cmp
push
sub
inc
mov
lods
lcall
and
lret
xchg
cmp
jno
lods
test
mov
roll
inc
pop
pop
xchg
inc
push
mov
pop
pop
out
xchg
loopne
movsl
icebp
xor
std
aam
inc
daa
call
xchg
or
shlb
or
decb
jg
mov
aas
test
shlb
xchg
test
adc
lods
pop
ds
xchg
mov
popa
sbb
lods
sub
pop
or
movsl
sub
jbe
xchg
lods
jmp
pop
iret
xchg
outsb
dec
sbb
out
or
sbbl
ficoms
mov
loope
cmp
xor
add
les
mov
inc
repz
pop
push
mov
imul
lea
push
iret
hlt
push
mov
inc
dec
rorb
adc
cmovle
outsl
outsl
sti
ja
mov
xchg
aam
push
inc
inc
mov
mov
inc
int
call
jno
xor
rorl
xchg
push
adc
repnz
sbb
out
pop
imul
out
ja
ficoml
lods
jmp
jo
imul
or
std
loope
push
divl
pop
in
je
or
mov
int
jbe
xor
mov
dec
mov
out
scas
les
lahf
std
push
paddb
inc
out
xor
pusha
arpl
jnp
sbb
dec
outsb
test
ja
or
inc
sub
in
scas
xchg
add
jecxz
inc
add
scas
fistpl
push
cli
rcrb
mov
sub
or
xor
mov
dec
inc
mov
mov
dec
mov
pop
inc
pop
aam
fadds
scas
js
mov
jo
pop
in
jl
loope
jle
or
fistps
dec
mov
lods
mov
jae
mov
dec
in
repz
es
rorb
mov
movsl
push
mov
test
or
or
jg
xlat
leave
test
test
jnp
dec
shrl
pop
cmp
outsl
and
push
sub
sbb
jge
cmp
dec
push
cwtl
js
addl
sub
xchg
jae
into
lret
mov
aas
outsb
push
cs
inc
in
mov
imul
cwtl
pop
int3
add
js
aad
jno
dec
lret
sub
push
lea
mov
sbb
xchg
cmp
mov
sahf
cmp
ficompl
and
test
arpl
sbb
cs
aad
inc
gs
or
stc
test
and
and
dec
test
clc
jl
mov
sbbb
push
cmp
jmp
in
mov
jmp
pop
imul
and
xchg
adc
adc
out
lods
sub
or
adc
jno
and
pop
sub
jl
mov
mov
push
int3
into
pop
sti
cmp
sbb
pop
ds
cmp
lahf
outsl
dec
or
or
cmp
xor
jg
popa
addr16
dec
mov
pop
xor
aas
call
mov
fnstcw
int3
inc
loop
sti
mov
jbe
loop
or
jle
push
jne
loop
add
je
dec
decl
icebp
les
stos
xchg
dec
out
sarl
push
cld
mov
add
xor
lahf
push
gs
xchg
xor
sbb
sbb
popf
insb
mov
lods
inc
sarl
push
mov
cmp
jns
add
ficompl
mov
nop
push
cmpb
xor
loop
int3
mov
xor
mov
bound
mov
sub
sbb
dec
inc
mov
sub
fnsave
cmp
cmp
cltd
or
jb
ss
gs
jae
sub
insb
cld
out
xor
or
popf
fisubs
mov
push
add
scas
fwait
dec
out
stos
push
shll
xor
andb
pop
push
sbb
inc
imul
inc
pusha
fnstsw
mov
push
pop
jnp
push
sbb
inc
push
or
push
adc
xor
or
in
and
aaa
push
mov
test
push
dec
or
jg
rorb
test
pop
jg
push
dec
mov
pop
mov
test
or
leave
int3
dec
imul
push
popf
push
in
ror
mov
push
jge
not
enter
jnp
or
stos
xchg
pop
inc
push
es
icebp
add
pop
push
int3
imul
arpl
pop
cmpsl
and
adc
sbb
mov
aas
pop
mov
aaa
movzbl
loope
push
pop
or
mov
stc
adc
ljmp
and
and
sub
repnz
sbb
push
mov
mov
nop
daa
cmp
and
scas
mov
and
push
pop
add
or
aas
dec
data16
inc
in
or
ds
mov
mov
imul
jo
sub
mov
clc
xlat
stos
lahf
adc
aam
sub
dec
jecxz
push
jae
inc
ljmp
sub
ja
fs
cmp
ret
mov
stos
lcall
push
subb
jo
push
out
inc
and
and
jge
fcomip
fisubrs
iret
or
ret
jns
and
fsubs
std
pushaw
jecxz
jno
push
jb
jl
cmp
cmp
ror
les
pop
data16
push
sbb
or
xchg
lcall
mov
xor
lock
lcall
xchg
cwtl
push
lds
sti
pop
out
dec
clc
lea
cli
push
jnp
jno
add
ds
cmp
test
xchg
mov
or
jns
aam
in
fmull
cmp
fsubrs
sbb
aad
sbb
mov
sar
loope
jl
int
and
sub
mov
stc
xlat
mov
leave
mov
push
sbb
sub
mov
xor
shrb
dec
cmp
rcl
cmp
loopne
jp
loope
mov
lea
mov
inc
test
adc
cmp
mov
cmp
int
sub
cmp
lods
shll
loope
mov
adc
dec
sub
adc
mov
and
sub
sub
outsb
inc
jb
adc
or
jnp
fnsave
cli
fistps
adc
dec
out
ss
sbbl
sub
ds
push
push
jecxz
or
or
push
add
movsb
lea
shll
dec
outsl
mov
stos
add
repz
adc
aaa
jle
mov
aas
xchg
add
adc
lcall
shl
sbb
ljmp
test
and
cmp
pop
sub
mov
or
mov
push
adc
shlb
cmpsb
push
cmc
mov
mov
and
push
pop
xchg
in
ja
int3
inc
cmp
mov
jg
and
pop
push
add
mov
popf
sub
pop
into
mov
lret
and
dec
test
inc
rcll
mov
dec
push
jg
sar
es
sub
mov
sbb
incb
stos
es
mov
fcoml
inc
and
xor
cmp
cmpsl
jmp
shr
mov
mov
adc
or
imul
adc
inc
lahf
lea
test
adc
ret
xchg
arpl
jnp
add
xor
gs
lock
cmpsl
fwait
push
roll
and
imul
inc
dec
sbb
outsb
jae
xor
lret
push
movsl
inc
ja
jle
adc
xor
or
rcl
stc
testl
mov
adcb
xchg
or
test
add
inc
lds
inc
pushf
push
mulb
adc
mov
sub
icebp
and
sub
pop
int
cli
mov
test
pusha
jae
and
daa
inc
sub
pop
mov
pop
xchg
mov
push
push
cmc
or
ret
pop
jns
lea
fidivrs
sbb
dec
movsl
fsubr
jl
test
adc
push
sbb
call
xor
xor
fucomp
add
je
sbb
push
test
dec
jecxz
xor
sti
pop
dec
scas
or
cmpsb
cli
ds
sbb
cmpsl
push
out
and
dec
fistps
adc
in
ficomps
fadd
in
imul
jae
sub
shlb
stc
pop
and
bound
push
in
push
or
lahf
pushf
and
cltd
dec
rep
stos
pop
stos
insb
dec
mov
hlt
cltd
mov
arpl
sub
loope
or
dec
leave
mov
dec
cli
xchg
insb
adc
addr16
stos
icebp
sub
push
xor
fs
push
decb
jbe
sub
fcoms
call
pop
push
or
lea
xchg
cltd
iret
xchg
test
sbb
mov
and
iret
push
aas
or
lret
jp
int3
pop
or
inc
lahf
movsb
push
fbstp
pop
stos
cmp
adc
and
imul
jp
push
and
out
lods
add
xchg
movsb
popf
popa
jb
add
fidivrl
cmpb
scas
mulb
dec
jle
pop
mov
scas
adcl
daa
movsb
xchg
mov
out
out
sub
xchg
sti
jno
hlt
xorl
cltd
pop
bound
in
pop
xor
or
mov
out
out
jle
xchg
xor
mov
jl
pop
xchg
outsl
cmc
fstpt
scas
mov
push
lods
lea
cltd
sbb
addr16
dec
hlt
jl
fisubrl
repz
fiadds
cmpsb
loop
cmp
mov
cmp
mov
ret
orb
fcomps
mov
or
lcall
lods
in
inc
aas
mov
rcll
inc
cld
into
out
inc
push
mov
dec
iret
mov
jecxz
aam
push
sub
lcall
iret
sbb
push
push
test
aam
xchg
and
sub
dec
ss
inc
fldl
cmp
cli
push
push
div
adc
and
fnsave
pop
incb
inc
mov
mov
adcb
test
daa
or
xor
fisubs
inc
sub
jecxz
in
mov
jno
xor
lods
shll
sarb
xchg
out
ret
incl
mov
aad
jge
pushf
outsb
cwtl
fisubrs
insl
dec
icebp
or
dec
fiadds
mov
test
test
lret
in
mov
sti
mov
mov
aad
mov
clc
xchg
notrack
or
sub
jno
xchg
inc
test
adc
rolb
dec
lods
outsb
mov
jnp
pop
push
sbb
push
cmpsb
icebp
or
ss
test
push
xchg
lods
fdivrl
leave
lods
fisttpl
pushl
insb
in
movsb
loop
adc
pushf
gs
ljmp
movsb
sbb
int
jo
or
popa
ret
jmp
and
mov
stos
mov
test
sub
orl
pop
clc
xor
repz
lock
imul
cmp
mov
std
jle
hlt
pop
jbe
dec
xor
ja
lds
mov
or
test
mov
adc
push
mov
pop
iret
pushf
pop
jns
lods
mov
mov
mov
enter
adc
int
arpl
pop
insl
jnp
push
dec
cmp
mov
push
iret
push
aad
nop
fists
sbbb
jl
inc
movsb
dec
xlat
xlat
notl
add
xor
jg
and
pop
adc
push
or
push
shrl
icebp
mov
insl
xlat
cmp
jmp
fmulp
dec
push
repz
gs
fsubl
cmp
scas
inc
mov
adc
pop
and
mov
outsb
pop
in
jbe
xor
shlb
mov
push
push
xchg
leave
dec
fcmovnu
loope
ljmp
ds
ficoms
lcall
jnp
aam
sub
rorb
xor
sub
xchg
jae
add
test
mov
pop
mov
jmp
push
fs
or
mov
mov
mov
int
out
push
mov
dec
mov
rcll
add
outsl
adc
pusha
xchg
jno
into
adc
cwtl
add
scas
pop
cltd
sbb
fxch
xchg
add
mov
daa
xor
rclb
jno
scas
sbb
pop
inc
xchg
mov
dec
and
cmp
notl
mov
nop
sbb
mov
in
push
mov
out
movsl
imul
mov
sbb
data16
and
sbb
push
imull
inc
in
rol
jl
push
cs
ja
test
repz
push
push
pop
mov
xchg
es
sbb
test
cmp
xor
popf
pop
push
inc
push
ret
test
arpl
sbb
mov
push
jecxz
notl
popf
mov
add
inc
dec
xchg
adc
jnp
jae
or
dec
lret
add
xchg
rcll
js
mov
adc
or
movsb
push
imul
xor
mov
inc
mov
adc
loop
add
mov
xchg
mov
xchg
sbb
mov
dec
sub
jmp
and
je
arpl
leave
divb
dec
dec
push
jle
ret
sahf
hlt
pop
xor
mov
mov
in
sub
pushf
shl
repz
pusha
aad
mov
dec
push
xor
sub
js
cmpsl
arpl
pop
or
mov
mov
inc
xor
jno
mov
mov
xchg
jae
push
loop
pop
pop
sbb
push
mov
cmp
clc
imul
daa
jg
out
divb
arpl
add
jmp
fmuls
int
int
test
rorl
and
mov
add
jmp
popa
in
xchg
push
dec
mov
cmp
shll
scas
jle
or
xchg
popa
dec
inc
std
cmpsl
sub
dec
inc
les
pop
andl
stc
add
outsl
mulb
pop
dec
mov
xchg
std
insb
icebp
sbb
pop
sti
xchg
lock
dec
subl
scas
or
xchg
rorb
mov
adc
push
gs
pop
mov
push
xor
mov
test
inc
stos
test
jl
or
ss
xchg
pop
lcall
sbb
add
daa
lret
mov
movsl
and
mov
xchg
push
addl
inc
push
mov
mov
pop
push
std
daa
push
aad
scas
fwait
push
dec
or
sub
jno
iret
mov
mov
stos
mov
in
testb
jl
js
testl
xor
in
inc
pop
arpl
stos
sbb
shrl
stc
cmp
aad
dec
adc
push
arpl
xlat
and
mov
out
jecxz
cmc
ret
cli
ds
pop
sub
jno
pusha
mov
cmc
fmulp
jne
add
repz
push
mov
jle
push
jge
push
out
pop
dec
mov
pop
sbb
dec
popf
mov
shll
insb
push
jge
pop
arpl
mov
ret
cmc
fstp
das
adc
pop
dec
ret
lret
xor
sbb
test
iret
js
lds
cmpsl
pop
push
outsl
arpl
pop
das
rorl
repz
add
pushf
js
cmpsb
inc
or
mov
mov
movsl
rorb
adc
in
push
insb
mov
dec
shll
jge
inc
es
cmpsb
in
decl
cmp
mov
lods
push
xor
popf
das
sub
std
jmp
add
in
xlat
dec
jns
mov
sub
xor
jle
or
adc
pop
into
mov
repnz
ret
iret
push
adc
sbb
jo
test
mov
or
pop
insb
iret
movsb
push
xor
or
outsl
push
mov
xor
mov
mov
pop
scas
pusha
addb
adc
pushf
aas
mov
cmp
hlt
fldl
inc
das
xlat
add
jl
sub
dec
xor
inc
icebp
stos
and
jns
popf
lds
ret
pop
loope
xchg
scas
mov
inc
dec
sbb
xchg
into
subb
leave
outsl
icebp
xor
leave
inc
xor
pop
mov
nop
push
inc
ret
or
cmp
and
addb
fimuls
js
xlat
enter
pop
push
pop
hlt
aas
mov
xchg
pop
out
inc
dec
jle
xor
mov
cmp
xlat
repnz
adc
sub
cmpsl
mov
push
hlt
roll
into
jbe
push
out
push
imul
mov
dec
enter
std
xchg
inc
cmpsb
pop
out
xchg
lret
into
aad
jb
insl
mov
cmp
mov
dec
xchg
mov
jbe
ret
insl
sarb
push
lock
mov
lahf
push
jae
jb
sbb
into
jnp
daa
cmpb
xchg
dec
popl
pusha
sbb
inc
jno
rcl
cmp
add
lea
lahf
lret
jecxz
jbe
mov
hlt
stos
xlat
mov
xchg
dec
jns
jo
jo
xor
js
mov
cmp
sbb
icebp
lds
sub
test
lock
fwait
sbb
leave
daa
push
fistl
push
sub
pop
add
or
lahf
adc
stc
jne
mov
test
add
cmp
js
sti
popa
inc
jne
imul
stos
sbb
jne
pop
les
inc
mov
mov
outsb
in
mov
subps
nop
inc
mov
xchg
ja
mov
pushf
rcl
dec
adc
mov
add
mov
es
sbb
int
inc
test
test
add
pop
int3
mov
ja
arpl
push
into
setae
push
adc
daa
sbb
and
push
sub
imul
daa
cmp
shlb
cmpsb
int3
jle
int
rcll
lret
cmpsl
insl
outsb
out
lret
mov
dec
push
lds
push
inc
jae
xchg
push
mov
xchg
ja
xor
sbb
or
icebp
fsub
push
push
push
push
adc
push
dec
fisttps
inc
clc
jge
div
in
jno
and
int
loope
cmpsl
cmpsl
call
xchg
xchg
pop
ret
pop
and
es
jecxz
int3
push
push
mov
or
push
std
jl
pop
mov
mov
adc
mov
enter
dec
add
push
loope
ret
repz
fidivrl
jl
cmpsl
jmp
jbe
mov
sub
rolb
inc
or
lahf
push
xchg
mov
daa
aas
aam
pop
adc
imul
add
stc
pop
lret
clc
cli
adc
out
in
add
ljmp
pushf
cmp
jecxz
loopne
adc
sbb
mov
xor
push
mov
and
lea
fidivrl
test
test
sti
or
mov
int3
sbb
stos
sarl
jp
lret
clc
das
mov
mov
ss
push
loopne
negl
inc
inc
prefetch
pop
rcrl
mov
push
inc
lret
icebp
dec
xor
repnz
add
adc
stc
leave
mov
ret
cmpl
mov
shll
jbe
adc
popf
shlb
rcll
loope
push
pop
in
mov
dec
dec
or
addr16
fs
rcrb
lods
mov
and
test
push
mov
data16
lret
sbb
imul
fld
ljmp
call
jae
scas
test
cmpsb
sub
push
pop
dec
loopne
adc
clc
fstps
imul
inc
fdivrp
xchg
flds
fidivl
pop
fadd
push
add
lcall
rorb
sbb
in
mov
mov
jnp,pt
xchg
mov
mov
sub
popf
aaa
into
push
push
movsl
adc
fsubp
notb
pop
outsl
fs
fnstenv
lods
pop
ljmp
xchg
and
jle
push
dec
inc
adc
push
loope
cmp
dec
add
mov
sub
sub
jbe
jnp
popf
sahf
dec
out
cwtl
and
out
jns
test
scas
fcomi
sbb
mov
outsb
rclb
sbb
sbb
daa
mov
nop
ds
enter
xchg
push
faddp
mov
mov
adc
cmpsl
vcomisd
mov
adc
xchg
insl
cmpsb
cmc
adcb
rcr
inc
outsb
out
in
cmp
and
dec
hlt
dec
mov
jnp
jge
loop
lock
jl,pt
xchg
aas
mov
add
scas
shll
add
movb
sub
xor
lahf
sub
push
imul
fistl
lods
cmp
add
mov
inc
popa
and
or
lods
sub
jns
and
jns
lcall
fwait
stos
or
jo
push
lahf
and
jns
and
mov
jbe
ficoml
add
push
pop
jno
cmpsb
fsubr
push
mov
inc
push
xchg
mov
adc
inc
ds
scas
pop
xor
push
scas
pop
or
shl
push
mov
out
mov
popa
insl
mov
negl
scas
xchg
sub
add
lret
insl
imul
jmp
mov
xchg
sub
fdiv
sbb
stos
outsb
mov
add
shll
push
adc
decb
and
rcl
add
pop
sbb
mov
ret
or
mov
lret
arpl
and
pop
xchg
cmc
mov
pop
jno
sbb
mov
xchg
aaa
adc
jecxz
cmpsb
xor
mov
cmpsb
jle
int3
ds
gs
lahf
aam
and
jecxz
pop
lea
aaa
and
add
loop
and
mov
inc
popa
out
ret
arpl
scas
mull
daa
mov
test
andl
pop
cmp
and
insl
scas
fldenv
test
ret
mov
jl
and
dec
mov
test
shr
pop
gs
outsb
push
negl
daa
ljmp
aas
enter
repz
fidivs
pop
add
xor
loope
mov
cltd
inc
mov
xchg
xchg
add
mov
aaa
mov
lods
lods
xor
and
jmp
jns
icebp
aad
sarb
jg
repz
push
adc
cmp
in
push
inc
shl
imul
test
std
popa
leave
call
xor
test
and
xor
shlb
push
mov
dec
jp
loopne
icebp
insl
lea
into
or
cmp
loopne
in
mov
inc
lret
div
gs
cmp
cs
push
mov
add
adc
add
out
pushf
jle
or
pop
sbb
lods
cmp
cmp
mov
repnz
out
in
subl
flds
xor
mov
ljmp
filds
mov
pop
fists
push
orb
sub
xchg
movsb
or
es
in
push
jecxz
inc
add
jmp
add
dec
pop
js
jb
fcomps
push
test
mov
adc
mov
pop
push
icebp
jae
add
sti
mov
dec
cli
loop
mov
xor
mov
lahf
pop
lods
sub
rcl
dec
icebp
out
inc
mov
push
xor
push
jbe
test
nop
aaa
push
jnp
xchg
in
inc
mov
bnd
int3
push
mov
dec
arpl
cltd
cs
sbb
dec
and
adcb
insl
lods
shlb
pop
std
pusha
push
xchg
sbb
fnsave
in
pop
inc
arpl
into
or
mov
sbb
sub
sbb
test
and
imul
out
push
test
cmp
or
iret
ljmp
movsl
mov
stos
and
add
mov
or
dec
sub
mov
xchg
xchg
cmp
ret
and
mulb
dec
mov
popf
xchg
or
popl
daa
cmpsb
inc
or
and
adc
and
popf
popf
sbb
sti
cmc
fcmovnbe
imul
addr16
testl
out
fs
mov
mov
add
inc
imul
mov
add
inc
lock
aas
rclb
cmp
mov
lret
xor
sti
sarl
push
pop
or
vpmovsxwd
int
loopne
mov
in
pusha
ja
mov
mov
add
clc
lea
aaa
jecxz
aad
xchg
inc
inc
and
pop
push
ljmp
aas
leave
enter
xlat
shll
mov
mov
outsl
jns
xor
adc
or
add
arpl
jnp
sbb
int3
or
js
add
xor
test
rcrl
data16
mov
push
sbb
ror
divl
mov
aad
movsl
out
repnz
xchg
inc
pop
inc
sbb
mov
pop
into
jb
ds
mov
jmp
mov
aad
in
into
insl
into
sar
pop
or
aaa
ss
mov
xchg
dec
xlat
test
movl
cmp
fisttpl
ret
push
mov
sub
fimull
icebp
sub
add
mov
iret
adc
xor
jb
test
mov
bound
in
and
jae
inc
mov
cld
jno
mov
sti
inc
or
sbb
out
sub
sbb
dec
lods
incb
adcl
sub
lock
dec
or
lea
ss
dec
xor
jne
insl
mov
test
les
shr
gs
aad
mov
jecxz
icebp
mov
clc
fsubs
stc
pop
stos
jmp
xor
outsl
xchg
and
push
mov
imul
jecxz
push
pop
mov
push
jg
add
mov
js
cld
ret
push
xchg
push
aas
jo
cwtl
mov
inc
sbb
xor
loopne
xorb
dec
jbe
arpl
xchg
or
pop
arpl
loope
push
in
jmp
andb
jno,pn
push
mov
ffree
dec
xor
rcrl
adc
int3
dec
in
and
or
lds
adc
mov
in
pusha
loopne
cmp
mov
shlb
xor
clc
call
push
jmp
add
mov
sub
enter
push
int3
pushf
mov
test
xor
insl
icebp
scas
roll
adc
cs
sbb
in
and
and
sbb
scas
scas
lods
mov
fs
add
pop
mov
push
shl
and
andb
dec
cmpsl
int3
fcoml
xor
test
int
sub
repnz
mov
sub
mov
fisubrl
push
jno
xor
jne
in
sbb
xor
xchg
in
in
sahf
pop
ja
testl
ficoms
mov
nop
push
sti
adc
cld
cwtl
pop
subl
out
add
addr16
out
jno
mov
xchg
sbb
lods
lds
xor
movl
hlt
push
shlb
cmpsb
fbld
pop
std
jl
pop
sbb
out
mov
jns
sahf
enter
aad
and
scas
jmp
inc
and
jge
inc
or
adc
pop
in
inc
loopne
sti
ljmp
jo
in
imul
xor
xchg
sbb
inc
inc
std
daa
fidivs
add
pop
push
xchg
or
shll
sub
cmp
sub
aas
loope
shll
mov
cmp
stc
xor
mov
jg
mov
out
test
cmove
jno
inc
sub
out
jns
jno
mov
pop
cld
ret
sbb
add
data16
cs
add
out
je
loopne
push
cmp
mov
movsb
mov
adc
imul
pop
mov
jo
div
std
fcoml
pop
stos
mov
xlat
xor
mov
pop
out
std
mov
xlat
jnp
mov
jae
arpl
lcall
stc
aaa
inc
jl
lret
mov
jl
les
dec
ds
jmp
pop
mov
inc
jle
lock
sub
pop
out
push
outsb
jmp
jl
sahf
fnstcw
fimuls
mull
shll
push
dec
push
cld
mov
lods
and
sbb
pop
sbb
mov
test
push
pop
ret
rcrb
orb
push
jmp
push
rcrb
pop
lods
mov
push
aad
xchg
rorl
cvttps2pi
cmpb
jno
add
jne
xchg
je
call
js
mov
scas
insb
dec
or
push
push
mov
sub
imul
or
xchg
push
int
scas
ret
test
lds
and
stos
out
aas
mov
inc
imul
pop
push
sub
jecxz
xor
outsl
loop
cmp
cwtl
jno
mov
xchg
aas
leave
adc
ds
mov
and
movsl
bound
sub
repnz
std
cmc
mov
out
out
je
lahf
mov
in
lret
pop
cwtl
inc
aas
aaa
dec
dec
cli
mov
sbb
int
in
gs
mov
ficoml
inc
cld
aad
ljmp
push
push
pop
out
jge
adc
push
mov
sbb
mov
mov
add
arpl
lods
or
rcl
xchg
out
sub
or
mov
xor
in
addb
pop
pop
andl
mov
jno
mov
ret
and
jecxz
add
movsb
shl
call
push
jo,pt
hlt
imul
insb
movsb
push
mov
sub
out
adc
and
insl
lahf
fcomip
dec
cmpps
push
pop
insb
xchg
or
cs
test
adc
das
ljmp
lcall
sub
mov
inc
cmp
cmp
jmp
repz
cli
cld
movsl
sarl
imull
pop
aad
and
cmp
dec
xor
push
rcr
inc
sti
cwtl
push
loope
stos
mov
inc
inc
fadds
loope
int
dec
and
fsubrs
or
test
and
repz
cmp
inc
jmp
sub
add
push
repnz
les
dec
inc
fdiv
or
testl
push
jmp
mov
jge
rolb
sub
js
xchg
lock
xchg
rcrb
movsl
popf
fwait
cmp
jg
sbb
add
mov
ljmp
xlat
jmp
pushf
push
or
insl
xor
int3
enter
cmp
scas
mov
dec
pop
xor
movb
mov
push
ret
xchg
push
movsl
ficoms
test
rolb
pop
push
into
lahf
into
or
sti
jmp
dec
pop
jle
and
mov
stc
mov
cmc
insl
add
jge
jb
and
pop
loop
insb
enter
and
das
xchg
iret
stos
xlat
leave
jge
stos
push
iret
sub
inc
mov
xlat
pop
xchg
dec
xor
mov
movsl
sub
push
xor
and
dec
ret
fldcw
stc
mov
pop
addl
dec
cmp
pusha
xchg
scas
push
pushf
test
std
daa
pusha
jge
out
mov
not
bound
mov
dec
xor
cwtl
mov
jns
jp
mov
mov
mov
xor
or
fsqrt
loop
je
les
mov
xorb
cltd
push
lods
or
std
inc
mov
dec
xchg
imul
dec
cmc
push
push
push
pusha
push
scas
nop
outsb
das
pushf
dec
shrb
adc
jle
subb
jle
add
nop
and
rcll
inc
adc
outsl
pop
mov
sbb
push
in
jle
mov
cmpsl
es
sbb
mov
cmp
cmp
and
outsb
addr16
sub
jecxz
sub
mov
mov
lahf
in
or
adc
arpl
xchg
dec
dec
lcall
dec
push
or
xchg
out
mov
pop
jbe
pop
and
xchg
sahf
jno
push
leave
add
jmp
cmpsl
lock
pop
inc
dec
lds
nop
popa
fisttpl
pop
in
pop
out
dec
sbb
dec
mov
push
into
out
or
leave
sub
mov
and
push
and
add
jne
jns
idivl
roll
push
xor
cltd
fisttpl
out
jle
push
sbb
jae
call
cmp
mov
nop
inc
cld
add
jnp
dec
push
mov
xchg
shll
cld
cmc
or
nop
movsb
push
cmp
out
in
mov
or
lods
iret
push
das
xorb
xor
addr16
inc
pop
inc
in
enter
jmp
inc
fstp
int3
adc
push
aam
mov
mov
push
leave
outsl
adc
mov
pop
ffree
adc
sbb
outsb
push
xor
out
jl
sbb
push
jne
ljmp
sbb
test
mull
jp
scas
fmull
xor
mov
ret
xor
mov
out
je
push
xor
jle
mov
ds
mov
dec
fsts
pusha
inc
shrl
sub
stos
dec
ja
jb
ds
sub
and
in
cmp
mov
jl
sbb
in
pop
jne
fsub
dec
stos
out
inc
pusha
inc
outsl
enter
pslld
dec
data16
mov
les
cltd
pop
mov
ja
push
sti
call
ret
pop
jae
aas
pop
mov
add
outsb
mov
push
movsb
sbb
mov
fs
mov
scas
mov
xor
movsl
ret
jbe
sub
popa
mov
cmpsl
mov
pop
rorb
add
daa
mov
insl
pop
ds
mov
jmp
xorb
in
mov
out
pop
fbld
xchg
icebp
mov
lds
sbb
std
adc
push
lds
js
js
pushl
pop
cmpl
jae
call
inc
into
push
mov
enter
mov
orl
xor
mov
mov
jmp
dec
pop
clc
sub
inc
and
test
push
dec
nop
pop
in
imul
xchg
pop
inc
out
xchg
inc
mov
mov
lods
insb
sahf
mov
or
ds
pop
ret
lret
push
or
or
mov
jmp
dec
insl
mov
jle
inc
pop
test
cmp
cmp
pop
inc
sub
sub
rorl
mov
iret
lcall
in
aas
test
push
mov
ja
jle
push
jns
bound
fs
mov
xchg
jecxz
lock
rcll
ss
sbb
inc
pop
dec
imul
cmp
shrb
jg
cltd
stos
adc
sahf
popa
loopne
test
cmp
cmp
jns
sub
mul
pop
imul
out
fldl
pop
rcl
xor
push
mov
test
inc
jns
cmp
dec
dec
mov
fwait
xchg
cmpsb
pop
sbb
add
xchg
out
jge
add
push
gs
mov
lahf
imulb
aam
dec
pushf
push
pop
mov
add
push
push
mov
fs
fcoml
call
sub
popf
xchg
in
aam
insb
mov
adc
repz
mov
pop
push
scas
inc
cmpsl
fsubs
or
testl
jle
stc
in
insl
enter
inc
and
sub
or
mov
fiaddl
loope
insb
cmp
outsb
pop
repnz
repz
imull
std
into
jae
fists
mov
ss
push
pop
sub
pop
sub
rcrb
and
hlt
mov
outsb
jg
fs
call
lea
stos
lcall
inc
sbb
jle
sti
ds
jo
lea
mov
test
mov
ret
jle
ret
inc
cmpb
rcrb
fstl
mov
int
sub
and
ret
icebp
push
rclb
mov
lahf
std
pop
xchg
loopne
mov
push
test
pop
push
je
loop
adc
xor
pop
sub
arpl
ds
mov
cmpsl
sbb
mov
cmc
jns
jnp
mov
insl
cmp
inc
mov
xor
cmp
mov
aas
enter
mov
les
xor
jns
cmp
jmp
cli
sub
arpl
push
mov
add
and
hlt
cmpsb
add
adc
int
movsb
andl
mov
aam
mov
sti
repnz
xor
xor
adc
cmp
aaa
xor
xor
scas
xor
mov
aas
call
cmpsb
add
inc
in
nop
into
xor
cwtl
dec
mov
fisttps
cli
xchg
mov
scas
icebp
xlat
in
cmpb
insb
out
mov
jne
test
xor
nop
mov
shll
push
lods
movl
cmpsb
test
ljmp
aam
jbe
inc
mov
pop
mov
xor
push
orl
cmp
mov
jge
ds
ja
jmp
mov
jne
ljmp
cmp
lea
adc
out
inc
fdiv
int3
pop
in
shr
xchg
int3
out
xor
je
test
or
mov
icebp
leave
int3
out
mov
mov
aaa
sub
inc
sbb
adc
fistpll
cld
cmc
lret
popf
out
data16
push
sarl
lods
aas
jnp
gs
pop
in
jae
pop
pop
or
sub
shlb
jne
inc
sub
nop
adc
push
jmp
fs
push
lods
xchg
mov
jle
mov
incb
xor
shrl
daa
aam
cld
cmp
aam
rcrl
jge
mov
sbb
inc
xor
arpl
repz
fsubrl
cltd
fucomi
dec
push
outsl
xchg
fisubl
pop
cmpsl
repnz
jnp
xchg
test
cld
cmpb
xchg
jmp
ret
adc
int
in
jbe
mov
or
inc
ret
pop
iret
jo
sarl
xor
mov
jecxz
xchg
jl
jno
and
int
pop
and
inc
stos
xor
xor
pop
push
mov
cmp
jecxz
jp
xor
add
repnz
daa
xor
aaa
adc
mov
mov
test
or
sarl
mov
subl
and
repz
shrl
sbb
out
jnp
icebp
mov
ss
inc
arpl
sbb
push
mov
arpl
mov
cmpsl
sub
push
sub
or
mov
out
mov
push
scas
push
jecxz
sub
jnp
aaa
mov
mov
pop
add
jbe
fadds
inc
das
imul
mov
jecxz
inc
lahf
dec
push
lret
dec
out
cs
ficoml
test
sahf
push
push
mov
lcall
jo
inc
mov
cltd
data16
testl
stos
es
insl
into
testb
sbb
in
sbb
movsl
xor
dec
mov
cmc
popa
cld
das
add
fcmovnb
loopne
popa
mov
cmp
movsb
jecxz
idivb
imul
bound
xchg
push
stc
pusha
jge
jmp
mov
cmpb
lret
aaa
or
aad
pop
push
mov
es
movsl
fdivr
cli
push
add
gs
cld
add
mov
movsb
cmp
cld
rol
shlb
fiadds
outsb
xor
stos
lods
or
outsb
push
push
mov
pop
xor
xchg
and
xchg
lret
cmp
pop
xchg
addr16
js
out
in
lods
mov
push
jecxz
pop
sub
jb
fisttps
cmp
mov
aaa
mov
or
outsb
scas
pop
pusha
pop
push
cmpsb
test
mov
mov
sti
ret
rcr
fs
dec
add
lret
insl
sbb
roll
imul
leave
xor
out
dec
in
in
fsubr
addr16
adc
mov
xchg
sti
inc
bound
xchg
out
cmp
in
lgs
rcrb
out
std
aam
pop
mul
jle
cwtl
adc
js
jb
mov
jg
xor
jo
in
adc
mov
repz
and
add
out
aas
mov
stos
xor
nop
lcall
cmp
adc
jno
xor
mov
mov
fmuls
pop
push
cwtl
lods
outsb
mov
enter
ficomps
cmp
push
in
clc
push
loopne
cwtl
inc
xchg
lock
outsl
outsl
lods
pop
enter
jge
jmp
push
sub
mov
mov
imul
int
xor
in
aaa
test
in
test
lahf
adc
fimull
cmp
pop
or
ss
iret
lcall
inc
cmp
mov
mov
mov
mov
leave
cmpsb
clc
add
popf
sbbb
cmp
cbtw
enter
mov
and
divl
out
div
pop
fcmovu
lahf
push
loopw
mov
cmpsl
inc
cmc
rol
xchg
stos
aaa
shll
cs
out
pop
inc
rolb
mov
mov
push
lcall
daa
mov
mov
sbb
in
or
adc
out
outsb
or
cltd
int3
mov
je
mov
pop
sub
xchg
fldt
fiadds
fimull
out
xor
or
loopne
mov
push
mov
jmp
mov
cmp
mov
dec
mov
push
lea
aad
mov
push
and
popa
mov
push
cmpsl
sti
inc
aam
cmpl
xor
inc
dec
push
dec
push
pop
add
adc
push
mov
pop
into
cli
stos
jmp
rolb
je
popa
mov
pop
test
lret
sub
popa
mov
sbb
sbb
or
adc
adc
dec
insl
out
in
mov
sub
out
push
sub
stos
out
push
ljmp
mov
cmp
bound
nop
out
push
and
sbb
cmp
bnd
sub
rcll
test
inc
inc
dec
inc
pop
inc
pop
addl
jo
jl
sti
inc
in
in
fadd
xchg
dec
xor
xor
sbb
push
fnstcw
test
repz
push
xchg
cmp
hlt
fld
dec
xor
or
stos
jecxz
push
rclb
es
loopne
cltd
mov
jne
jmp
cs
pop
ffree
adc
jmp
and
cld
or
outsb
or
ficomps
cli
popf
aad
cli
subb
js
xchg
sbbl
inc
push
sahf
lods
or
adcb
pop
adc
cmc
mov
inc
dec
inc
imul
push
mov
or
pop
push
lret
cs
push
scas
lods
mov
adc
push
test
mov
xchg
jecxz
mov
movsl
add
mov
ret
and
mov
aam
bound
adc
stos
or
sbb
cmp
fisubl
lods
sbb
adc
ljmp
divl
idivl
xchg
test
xchg
dec
lcall
jg
dec
xchg
sub
inc
mov
jo
std
jns
inc
out
jb
or
je
mov
movsl
ret
sub
popa
mov
sbb
or
test
fcmovbe
push
into
iret
push
xor
fcomps
js
jno
mov
movsb
and
jb
int3
cmp
adc
insl
hlt
dec
xchg
popf
jo
pop
or
lock
in
mov
cli
sub
pushf
xchg
or
pop
je
outsb
xor
add
mov
mov
mov
or
arpl
inc
repz
repz
lds
mov
jge
inc
mov
nop
repnz
shl
fdivrs
lcall
mov
loopne
mov
lcall
mov
aas
jecxz
pop
mov
shll
ret
lea
or
cmc
lock
pop
loopne
lahf
push
lahf
push
ret
adc
insb
mov
loop
loope
jp
sub
popf
stc
inc
popa
lahf
lods
dec
in
ljmp
js
push
dec
cs
sub
push
or
adc
sahf
xchg
jno
dec
push
mov
mov
ret
ss
pop
addr16
mov
push
aaa
sahf
data16
mov
out
jbe
lcall
ds
xchg
clc
sub
icebp
cmp
dec
jo
fcompl
or
gs
and
xchg
data16
test
push
pop
shl
xchg
jne
pushf
or
cmpsl
mov
add
lea
enter
adc
cmp
mov
pop
xorb
jge
movsb
push
push
push
or
out
hlt
inc
in
stos
and
add
stos
cwtl
aam
or
sbb
or
mov
dec
dec
sbb
add
or
jne
out
lcall
mov
xchg
decb
mov
adc
mov
pusha
jg
clc
loope
popa
mov
call
cmp
adc
mov
xchg
stos
cmp
xchg
push
push
lock
sub
out
negb
xlat
push
mov
mov
lahf
dec
sub
cli
int
fbld
cmp
rorb
mov
inc
sarb
xor
movsl
cmp
scas
dec
cs
xchg
push
jl
xchg
out
add
lret
loopne
scas
cmp
dec
pop
ret
outsb
xchg
in
adcl
inc
call
repnz
xchg
mov
pop
sbbb
clc
lahf
fidivrl
lret
aad
jne
and
jns
scas
mul
ljmp
push
cmp
cmp
sbb
insb
sti
push
xor
sub
fldl2e
cmc
icebp
inc
adc
cmp
out
xor
mov
pop
push
sahf
insb
jge
push
cli
cs
int3
pop
cld
iret
int
popa
and
push
cltd
or
or
pop
jbe
faddl
test
sub
scas
add
leave
dec
scas
jne
fistpll
jecxz
pusha
adc
ret
adc
es
jp
loope
jns
rcrb
sub
ds
loope
std
aad
in
xchg
int3
sbb
xchg
dec
xor
adc
dec
or
adc
lds
sbb
cmc
cmp
fdivrs
fwait
call
or
divb
mov
xchg
cli
pop
or
outsl
out
lret
test
cs
pop
xchg
popa
into
mov
sbb
adc
mov
ret
pop
or
jge
dec
repnz
xchg
adcl
cli
xchg
dec
jbe
adc
mov
fbstp
adc
adc
repz
mov
mov
fwait
dec
mov
mov
cmp
inc
lcall
pop
xor
insb
pop
mov
stos
in
xor
mov
sub
lret
loop
xor
in
outsl
xchg
push
shlb
leave
mov
jg
daa
out
and
and
fdecstp
xchg
dec
jl
jns
mov
int3
pop
cld
in
mov
mov
add
scas
dec
or
xorb
lret
shlb
dec
jbe
ss
insb
das
inc
mov
roll
shll
fistl
pop
jg
pop
push
call
pop
sti
xlat
cmpsl
testb
xchg
lea
mov
add
cmp
mov
cmpsl
xor
sbb
popf
lret
push
icebp
sbb
adc
adc
call
xor
mov
push
add
aas
xor
outsb
pop
mov
rcr
sbbl
sbb
mov
mov
adc
pushf
nop
cmc
int3
mov
sub
mov
jnp
mov
cmp
in
mov
divb
stos
test
out
add
xchg
test
push
bound
or
inc
aas
cmpl
cltd
fxtract
lock
fdivs
int
fldcw
outsb
adc
leave
das
mov
jle
jns
mov
mov
push
int
sbb
test
cmp
daa
fcmovne
mov
cmpb
xchg
popa
inc
pop
mov
cs
add
sub
or
stos
fnstenv
push
out
sbb
xchg
je
dec
icebp
jg
mov
sarl
add
sbb
mov
mov
shll
lahf
out
inc
lods
je
ja
or
movsl
test
pop
test
push
mov
mov
push
push
inc
sahf
push
fcmove
int
loopne
jmp
cmpsl
clc
mov
in
sbb
xlat
fwait
aas
cmp
mov
mov
dec
inc
or
cmp
fldl
dec
aas
and
sbb
lods
and
sarb
inc
hlt
mov
out
imulb
int
cmp
outsl
ret
imul
aas
push
inc
sti
dec
jecxz
adc
jg
lahf
push
inc
sbb
aam
in
inc
pushf
dec
mov
jp
in
pop
fcoml
jge
out
insb
fiadds
pop
pop
lods
icebp
lcall
pop
xchg
or
fstpt
pop
sub
xorl
mov
aas
push
xchg
test
jns
scas
mov
jns
out
or
or
popa
inc
test
mov
ss
lret
sbb
in
mov
mov
jae
mov
push
gs
cmc
arpl
in
ret
adc
and
call
out
mov
jmp
ficoms
pop
jno
push
xor
inc
das
dec
xor
xchg
dec
rcrl
xor
push
push
mov
das
fisubs
lea
addl
push
mov
ret
push
mov
das
bound
dec
adc
or
jbe
xor
loop
iret
add
add
ret
jno
fisubrl
dec
jne
divb
test
and
in
mov
pop
mov
lds
inc
dec
or
in
pop
les
add
fnstcw
xor
inc
mov
test
xchg
icebp
xor
notb
cmpsl
inc
adc
and
add
rcrb
adc
dec
ret
jmp
sbb
loop
aad
fwait
mov
mov
dec
int3
fcmovu
pusha
mov
mov
jg
xlat
and
ret
push
inc
push
pushf
jecxz
mov
pop
es
ret
jno
lds
mov
jne
pop
mov
lock
and
cld
and
mov
lret
stos
aam
dec
and
add
stos
mov
icebp
or
pusha
xor
xchg
add
sub
test
pop
stc
mov
mov
pop
add
sahf
je
xchg
lcall
and
dec
cli
lock
sbb
repz
sub
pushf
and
sbb
stos
or
inc
sar
fbld
shll
adc
imul
lds
xchg
testl
dec
or
or
ret
in
jns
insl
cltd
es
jno
xchg
push
mov
out
mov
rolb
sub
das
dec
inc
pop
pop
jo
jbe
jb
jmp
in
push
movsb
mov
es
loope
aad
xchg
inc
idivb
jge
rorb
js
jbe
dec
mov
pop
aas
jmp
push
mov
xchg
movsl
push
lock
es
lock
sbb
adc
clc
lret
pop
int
lret
daa
std
test
shlb
xchg
lahf
xchg
sbb
pop
stc
jge
pop
add
repz
aaa
push
mov
push
fistps
es
mov
cltd
in
pop
xorb
orb
push
push
add
lahf
add
out
rclb
sti
sub
sti
scas
add
fwait
inc
inc
pop
cmp
mov
adc
mov
rorl
mov
sti
incl
mov
daa
adc
jno
out
pop
xchg
scas
pop
dec
mov
shlb
sbb
jecxz
xchg
push
mov
mov
jecxz
cld
mov
ret
inc
aad
xchg
pop
push
sbb
scas
xlat
clc
sub
imul
mov
into
loopne
mov
xchg
idivl
call
cmp
clc
add
pushf
xor
imul
and
lcall
push
aas
int3
cwtl
movsl
repnz
jmp
ret
imul
pop
bswap
lock
lret
fsub
xchg
push
lds
mov
fstpt
add
jae
add
mov
lods
sbb
in
mov
or
inc
add
mov
mov
cmp
push
jne
pop
ljmp
pop
imul
inc
jnp
xchg
and
loopne
jbe
and
outsl
imul
cli
aad
aaa
les
jbe
cmc
jmp
adc
mov
lahf
pop
sub
aad
pop
imul
cmp
nop
sub
push
fimull
xchg
dec
sub
nop
arpl
add
jp
ret
dec
xor
arpl
push
jns
popl
jmp
loope
leave
jle
mov
sbb
mov
xorl
out
out
and
cmp
sub
int3
idivb
push
push
mov
or
repnz
dec
insl
rcrb
cmp
outsl
ficoml
mov
xor
adc
mov
jo
push
cwtl
adc
xchg
leave
in
subl
xorl
loop
call
cmc
loop
cs
ljmp
les
stc
cmpsb
cmp
cli
push
push
xor
or
xchg
jl
sbb
aam
sti
pusha
dec
mov
popa
pop
add
enter
shlb
dec
mov
xor
mov
and
in
daa
pop
icebp
add
sbb
ds
add
insl
jecxz
aas
mov
or
sbb
subl
in
gs
sbb
fcmovb
mov
fnstenv
mov
adc
lret
outsb
jns
cmc
add
sbb
push
scas
imul
mov
fnsave
lea
jecxz
inc
push
xchg
shl
repz
aam
movsb
insl
ret
arpl
insl
aas
cmp
jbe
jno
jb
inc
pop
inc
jg
bnd
push
cmp
lcall
pusha
sub
cmp
sbb
lods
fisubs
inc
mov
add
adc
or
xor
ret
sbb
mov
dec
das
inc
xorb
xor
inc
push
mov
das
push
ficompl
xor
pop
gs
imul
mov
cmpb
js
pop
mov
insl
jp
arpl
fistl
push
sbb
shl
xchg
imul
ret
mov
cmc
mov
bound
xchg
push
xchg
push
test
cmp
lret
push
sub
sahf
jo
sbb
ficompl
mov
cmp
mov
outsb
mov
mov
xchg
xor
cli
add
test
mulb
pop
pop
fwait
loopne,pt
pop
ljmp
dec
pop
adc
xchg
xchg
cmp
dec
in
lret
enter
push
and
addl
mov
dec
sbb
jno
push
push
shrl
aad
aam
push
push
jo
gs
idivb
fwait
add
arpl
pop
add
pop
repz
sarl
aas
or
inc
sbb
and
js
ljmp
psadbw
or
rcll
cmp
xchg
mov
push
pop
push
jecxz
jbe
mov
or
shrl
call
xor
sti
push
imul
xchg
push
sti
pushf
jmp
stos
cltd
or
test
dec
xchg
sbb
repnz
jge
add
and
stos
pop
pop
jle
pop
and
addl
lods
ret
jecxz
loopne
subb
push
dec
lcall
es
jecxz
jo
pop
insl
adc
xor
sub
add
inc
divl
das
movsl
setb
cli
xor
inc
icebp
push
out
ret
pusha
test
mov
dec
dec
add
setne
sarb
and
fdivl
mov
mov
out
mov
paddusw
imul
jle
ficoml
fiadds
mov
sub
sbb
sub
ds
inc
scas
push
fcmovnu
or
and
bound
mov
js
push
clc
loope
insl
lock
add
sub
outsb
std
sbb
xorl
aaa
cld
repz
lahf
icebp
test
into
neg
push
lds
repnz
daa
cltd
and
aam
mov
xor
mov
mov
and
fidivl
adc
pop
xchg
cmp
dec
xchg
lock
stos
push
sub
and
ret
mov
and
fs
fimuls
lds
out
push
push
jl
idivl
lods
outsl
enter
inc
repnz
mov
out
enter
sub
add
adc
cwtl
mov
dec
ret
addr16
xchg
xchg
fs
jns
add
sarb
cwtl
and
rcrb
rcrb
lret
push
iret
enter
push
add
jne
mov
xor
clc
outsb
flds
hlt
lret
mov
stos
mov
and
inc
and
pusha
in
stos
popa
inc
jle
pop
roll
js
sub
cmpb
cmc
push
pop
in
int
js
rcr
inc
je
pusha
gs
adc
dec
push
cmc
and
ret
ficomps
jbe
out
sbb
fsubs
xorb
cli
push
add
mov
mov
xor
pop
xor
pop
aas
add
nop
rcr
add
sbb
fucom
add
sbb
add
fnstsw
pushf
add
in
out
inc
rorb
sbb
pop
int3
xchg
shll
pop
adc
adc
add
adc
movsb
pop
pop
mov
cwtl
insl
jl
dec
dec
int
dec
int
inc
jg
into
fstpl
sbb
subl
dec
or
jo
lds
inc
inc
adc
xchg
mov
push
pop
push
dec
sub
mov
inc
outsb
lret
fwait
loope
scas
subb
in
mov
divl
pop
inc
ss
xor
pushf
shll
pop
fsubp
clc
mov
es
scas
cs
ret
popf
adc
les
loopne
cmp
and
adc
sarl
je
cld
stc
pop
sarb
jo
outsl
gs
mov
fwait
dec
cmp
push
mov
stc
imul
dec
loopne
jns
mov
repz
fnstenv
cmpsl
cli
aaa
test
mov
and
dec
pushf
mov
in
cmp
mov
inc
call
push
hlt
xlat
and
push
flds
adc
fwait
out
cmpsb
xchg
div
daa
gs
shll
imul
rclb
in
int
adc
push
push
es
mov
rclb
sbb
jo
push
scas
xchg
fcmovnu
sahf
jp
vmovdqa
adc
adc
push
add
or
sub
insl
ds
push
mov
lahf
mov
sub
pushf
cwtl
int3
xor
mov
or
push
mov
or
in
test
pop
clc
sub
nop
push
cmpsl
enter
mov
bound
cmp
aad
aad
add
mov
bound
scas
ret
repz
mov
inc
add
cmpsl
sub
mov
push
mov
sub
lahf
pop
jl
push
sbb
add
and
xor
pop
int3
or
sub
sbb
add
mov
add
aaa
fcomps
cmp
dec
int3
fwait
sti
cmc
sub
mov
mov
add
out
mov
ret
lahf
mov
ret
and
