sbb
add
mov
sbb
push
xor
cmc
mov
repnz
xchg
add
jne
popa
or
sbb
iret
mov
out
xchg
mov
sbb
push
out
fisttps
js
mov
jmp
jbe
xor
outsb
loope
lret
test
lock
rorb
sub
int
daa
jmp
lret
mov
sub
xchg
mov
nop
lods
inc
dec
fdivl
in
dec
jp
roll
push
enter
mov
sub
pop
or
sub
test
dec
mov
std
jnp
lods
jmp
push
data16
mov
dec
mov
subps
movsl
icebp
push
les
push
enter
lea
mov
mov
mov
inc
xorl
inc
mov
int3
aam
add
in
out
jns
outsb
nop
and
stos
fs
rolb
imul
out
cmp
adc
mov
mov
fsubr
nop
call
adc
xor
or
lahf
xchg
sar
cwtl
xor
pop
dec
inc
minps
fldcw
sbbb
xor
sarl
add
jl
js
insl
mov
in
addb
push
mov
clc
cmp
jecxz
imul
and
and
shrb
lods
adc
pop
adcl
sub
mov
pop
xor
sub
mov
mov
cld
jo
or
mov
mov
out
aas
cmp
scas
sbb
gs
mov
jle
lcall
xchg
or
dec
aaa
pop
sub
mov
add
cli
pop
and
mov
lret
push
loop
mov
sahf
or
push
jl
in
imul
out
xchg
shrb
pop
jg
xchg
xor
and
mov
or
cwtl
ja
mov
seta
mov
das
cmpsb
popf
faddl
fucompp
jmp
loop
push
mov
inc
in
test
movsl
and
fisubrs
jno
mov
mov
or
jmp
notl
ret
imul
xor
cli
outsl
jp
mov
and
sahf
movsb
xor
and
sbb
ljmp
jecxz
sbb
add
dec
jb
andl
leave
jp
pusha
xchg
mov
dec
subl
add
es
test
lret
push
cld
aam
jl
pop
pxor
mov
iret
jl
push
xchg
mov
loopne
mov
mov
imul
and
divb
fs
les
in
lret
jmp
lahf
repnz
xchg
cmp
xor
shl
mov
jb
cmp
lcall
push
xor
int
sub
push
add
add
insl
clc
stos
pusha
das
fstps
sub
cltd
nop
add
dec
xor
mov
add
mov
mov
pop
mov
jo
or
insb
and
sub
roll
pop
mov
mov
imul
and
jae
mov
outsb
adc
inc
and
mov
push
sbb
xor
outsb
inc
sti
adc
and
lock
js
ja
call
cmpsb
add
ljmp
lcall
or
push
mov
push
push
aam
jge
push
dec
inc
bound
inc
subps
cmp
cmpsb
cmp
cmpsl
int
in
mov
int3
mov
push
shr
fistpll
jge
jecxz
insl
cmp
adc
testl
push
adc
jecxz
aaa
mov
pop
inc
imul
cmp
push
sbb
push
or
aad
pusha
mov
sub
add
dec
cmpsb
mov
cmovp
inc
lcall
rorb
mov
pop
add
mov
jmp
xor
mov
mov
add
test
mov
clc
mov
mov
std
cmpsl
lret
xchg
cmp
push
clc
mov
xchg
xchg
jg
xchg
or
imul
dec
xchg
fsubrl
jecxz
or
mov
leave
mov
test
popf
sti
mov
rcrb
hlt
mov
leave
sbb
push
or
out
push
cmpl
mov
xchg
addr16
cld
push
sbb
adc
push
movsl
inc
pop
in
adc
and
jo
outsb
test
das
lahf
test
cmp
push
rorl
pop
popf
xlat
call
sbb
adcl
jb
pop
push
sahf
lods
movsl
pop
shll
fs
scas
iret
hlt
loop
mov
mulb
fstpl
js
repnz
lret
mov
nop
jae
sti
mov
into
xchg
adc
or
lahf
shlb
cld
mov
ja
jb
fcoms
mov
cmc
sbb
scas
not
ss
cltd
roll
and
xor
jo
into
je
negb
ret
rorb
dec
js
inc
stc
test
xor
jmp
and
push
push
or
lret
movsl
push
cli
sbb
xchg
add
pop
adc
pop
sub
mov
loope
or
lcall
fstpt
cs
jns
and
sahf
add
pop
cmpsl
rclb
out
mov
shll
pusha
mov
pop
jae
dec
adc
sti
jne
sub
fs
inc
jo
xor
xchg
and
scas
cmpb
iret
ss
sub
pop
fsts
xor
mov
add
scas
sub
push
sub
fisubl
inc
dec
sbb
dec
xorps
jp
loope
and
and
repnz
fs
jecxz
std
mov
inc
inc
imul
fnsave
sub
rolb
cld
std
dec
mov
rcr
rolb
fdivp
sub
fistpl
cs
addr16
pop
stos
jle
xchg
test
movsb
cmpsb
inc
inc
popa
or
insb
pop
or
in
dec
and
jno
cmp
mov
inc
test
rcrb
jmp
in
int3
or
dec
mov
cltd
call
adc
movsl
dec
popf
cwtl
or
iret
lods
lret
cwtl
jb
sti
xchg
fcmovbe
push
loop
or
pop
add
sbb
repz
cmp
jns
and
xor
add
cmpb
nop
mov
andb
or
fldl
cmp
push
jmp
jp
outsl
nop
mov
icebp
scas
cmp
jg
ret
lock
xchg
push
insb
movsl
cs
cmp
jne
pop
notb
js
int3
xor
or
pop
stos
xchg
into
or
bswap
lea
inc
sub
imul
mov
mov
xor
pop
call
mov
push
stc
jmp
orl
add
test
dec
cs
sti
pushf
or
jle
addr16
sub
loope
sbb
push
push
inc
adc
bound
rcll
xchg
leave
aam
popa
mov
imul
bound
insl
fwait
out
cmpsb
mov
push
fdivrs
in
xor
pop
cmp
addb
scas
cs
add
je
je
dec
loopne
sub
push
test
adc
sub
mov
or
inc
inc
icebp
mov
cwtl
mov
fisttps
mov
shlb
popa
xlat
cmpsb
mov
inc
push
push
inc
idivb
inc
movsb
fcomps
sub
inc
jge
cmpsb
inc
pop
fnstcw
mov
icebp
pop
aad
push
xchg
hlt
ficoms
mov
jmp
jno
lcall
jg
push
dec
mov
push
lcall
or
mov
clc
cmp
into
sub
pop
ret
mov
cmp
sbbl
mov
xchg
sbb
and
sbb
or
shll
repnz
adc
jp
movb
clc
adc
mov
dec
aam
in
ffree
mov
pop
pop
jnp
ret
lret
adc
mov
insb
push
and
lds
mov
insl
add
movsb
push
xchg
fnstenv
repz
pop
das
or
outsl
or
dec
xor
out
xchg
hlt
loopne
cmp
pop
ja
leave
ja
leave
cmp
imul
push
loope
ds
iret
add
sbb
mov
mov
and
inc
xor
in
and
mov
lret
mov
ficomps
les
movsl
sbb
les
icebp
push
fwait
push
hlt
add
inc
mov
jb
mov
sbb
shlb
cli
icebp
mov
aas
out
ret
add
and
fdivrp
insl
jae
loop
xor
jmp
out
mov
mov
sub
repz
adc
cmp
sub
jae
in
sub
cmpsl
les
jp
pop
xor
inc
push
add
mov
mov
or
leave
out
pop
adc
mov
dec
sbb
cmp
push
insl
xor
test
fnstcw
inc
and
mov
shrl
fimull
repnz
inc
adc
ss
cmc
cltd
mov
mov
out
negl
addr16
daa
std
push
nop
out
sub
arpl
test
je
andl
mov
scas
lcall
push
lds
pop
jbe
int3
and
aas
std
cmp
sub
mov
leave
sub
fcom
pop
inc
mov
cmpsb
mov
sbb
test
jecxz
add
push
cmp
lret
mov
fwait
mov
xchg
mov
and
dec
in
push
scas
lea
xchg
jae
inc
shlb
fs
fs
scas
mov
push
stos
sbb
pop
ror
or
xor
push
cltd
jmp
pop
popa
add
fildll
xchg
inc
mov
push
inc
rolb
aad
and
ret
dec
adc
pop
lcall
inc
pop
xlat
movsb
adc
data16
mov
test
lods
mov
pop
mov
test
aaa
mov
lods
call
xchg
int3
mov
out
inc
in
jno
lods
int
pop
jp
in
mov
mov
cs
repnz
scas
mov
mov
lds
dec
mov
repnz
and
ret
push
pop
cmpb
push
mulb
inc
xchg
or
mov
pop
fstpl
rcr
hlt
popa
or
fildll
ficomps
sar
in
and
aam
cmp
or
cmc
pop
inc
xchg
mov
fbld
xor
scas
jno
cmp
xor
sbb
or
add
xchg
lods
or
lret
in
mov
sbb
loope
sbb
leave
adc
ljmp
pop
dec
jnp
xchg
mov
sub
cmp
jge
dec
adc
inc
sub
dec
mov
sbbb
insb
prefetch
mov
subb
sbb
lcall
sahf
dec
inc
pop
lock
fs
add
cmpsb
dec
xor
nop
inc
ljmp
scas
loopne
aas
pop
loopne
lcall
dec
jno
test
addr16
stc
xor
aam
or
in
and
insb
dec
nop
inc
mov
stos
cmp
lock
lret
nop
jae
dec
sar
mov
pop
xor
mov
fcmovb
mov
sub
push
push
shrl
mov
push
imul
add
adc
je
andl
jmp
push
or
inc
lahf
dec
lahf
adc
sti
sti
mov
mov
mov
sub
loope
jge
or
dec
jmp
mov
incb
movl
or
cmpsb
insl
push
pop
jmp
jno
es
or
fisttpll
popa
or
cld
dec
push
and
push
ret
sub
pop
enter
xchg
sti
ret
dec
cmp
aam
and
xor
daa
sarb
out
mov
inc
jo
adc
in
addb
push
fucom
les
std
or
ds
pusha
popf
jbe
mov
push
sti
nop
mov
movsb
and
loopne
push
mov
mov
movsl
cmp
mov
cmp
inc
insb
pop
mov
fs
cwtl
jmp
icebp
ret
int3
inc
testb
in
and
and
adc
or
scas
sub
mov
cltd
xor
in
lcall
inc
pop
hlt
mov
jmp
mov
insl
push
jo
lods
scas
mov
mov
movsl
int3
sbb
fiadds
inc
lods
mov
out
mov
sbb
inc
enter
out
mov
push
sub
out
jecxz
dec
push
sub
scas
cwtl
mov
push
and
xor
xchg
fdivl
or
outsb
dec
cmp
push
and
in
jbe
jo
call
dec
int
repz
and
or
fsubp
mov
push
movsl
out
mov
and
pop
les
sub
fisttpll
icebp
out
cmp
fisttpl
fcmovb
adc
pop
push
pop
dec
ret
negl
ret
or
mov
mov
outsb
cli
test
or
js
mov
adc
es
dec
and
jb
xchg
fmulp
gs
pop
push
int3
ficoml
inc
adc
xor
mov
or
sub
enter
scas
inc
xchg
push
push
imul
mov
xor
mov
pop
and
scas
jbe
mov
out
andb
in
jns
movsb
inc
ficoms
adc
fbstp
pop
lds
pop
call
adc
cld
mov
jns,pn
out
xor
xor
loopne
sahf
orl
xchg
sar
push
repz
std
pusha
fs
push
xorb
xor
repz
push
mov
mov
xchg
cmp
sbb
add
jg
inc
mov
es
and
xchg
pop
insb
pop
adc
and
pop
enter
rorb
repnz
test
je
dec
aam
add
mov
jae
aad
cmp
mov
pop
sub
mov
out
xchg
pusha
mov
andl
lds
add
arpl
dec
inc
push
cwtl
ret
pop
aad
cmp
sahf
cmc
mov
xchg
enter
movsl
negb
jl
dec
mov
jp
or
je
xchg
lock
ficoms
push
dec
fidivrl
adc
test
leave
fidivl
push
stc
adc
jl
mov
ss
xchg
clc
pop
aaa
shrb
mulps
testl
inc
mov
stos
aam
fwait
test
pushf
xchg
or
push
inc
mov
xchg
xchg
js
add
ret
lahf
dec
jp
inc
and
lods
xchg
inc
add
mov
or
call
jl
push
cs
aam
cmp
ficoms
xchg
test
hlt
dec
push
inc
push
sub
in
aam
sub
or
clc
or
leave
mov
jnp
es
loope
jb
add
movsb
sub
in
fcomi
mov
cwtl
pop
xchg
adc
mov
xchg
pop
or
mov
sub
sbb
ljmp
cmp
into
xchg
neg
add
movsl
jp
inc
arpl
cmp
out
shlb
ljmp
enter
lcall
lea
in
add
pop
aas
xchg
add
out
in
mov
pop
adc
cmp
pop
in
push
xor
jg
stc
mov
icebp
lock
lock
pop
into
dec
ljmp
adc
stos
xor
dec
movsl
and
pushf
inc
push
popf
loope
push
push
clc
test
push
xchg
pop
scas
mov
idivl
andl
test
fnstenv
add
in
sbb
pop
insl
or
and
mov
stos
imul
stc
outsl
add
dec
imul
jle
fists
cmp
cwtl
inc
std
xor
mov
scas
out
in
dec
cmp
push
loop
mov
cld
arpl
and
mov
gs
jno
das
push
ds
les
icebp
fs
cmpsb
xchg
sub
xor
addr16
or
cmp
add
xchg
fidivrs
add
mov
mov
and
repz
mov
sub
fists
push
mov
test
cmp
mov
push
push
mov
xchg
sbb
sbb
decl
popf
ljmp
dec
insl
insl
push
xor
vcvtsi2sdl
mov
scas
enter
or
pop
jmp
push
adc
and
iret
imul
test
adc
jmp
cmp
nop
add
push
pop
and
and
cmp
or
or
and
nop
fidivl
sbb
ljmp
mov
repz
or
mov
add
push
add
push
mov
sub
shll
push
or
add
sub
cmp
cld
push
dec
and
and
fisubrs
xchg
lahf
rcr
sbb
movsl
mov
push
and
movsl
add
lods
hlt
sbb
pop
add
inc
popf
xor
add
push
pop
push
xchg
jmp
push
cmovg
jae
sbb
push
mov
jge
mov
mov
sub
int3
int3
and
mov
lret
xchg
lock
ror
test
leave
mov
xlat
nop
dec
mov
arpl
imul
cmp
push
push
test
mov
pop
scas
xchg
sub
repnz
jne
sub
inc
pop
sub
aam
fwait
mov
push
dec
push
pushf
hlt
filds
cs
xlat
int
sbb
jl
jno
out
je
mov
xlat
mov
lods
and
pop
int
sahf
das
mov
jge
pop
fcoms
imul
mov
mov
stos
or
push
adc
cs
stos
mov
out
lret
test
dec
test
out
xchg
add
xor
popl
cmp
shlb
sub
mov
push
cmp
jnp
pop
adc
jmp
imul
mov
shrl
or
inc
adc
nop
jbe
sub
mov
enter
dec
shlb
inc
mov
mov
enter
popa
cmpsb
stos
loope
adc
sahf
mov
cmp
add
jne
inc
and
call
xor
mov
inc
lret
sub
inc
and
data16
mov
ficompl
and
into
or
push
leave
outsl
fs
cmpsl
push
lods
mov
inc
lret
fbstp
mov
js
cmp
and
popa
in
and
dec
rep
push
stc
or
adc
mov
test
test
cwtl
or
push
int3
mov
stos
push
arpl
dec
inc
xor
mov
cmpl
adc
jecxz
sub
out
push
in
mov
mov
mov
ds
mov
test
jecxz
repnz
add
mov
xchg
pop
and
sbb
xchg
xchg
cmp
bound
ja
aaa
push
xor
jbe
mov
mov
fldcw
movsb
and
xchg
pushf
imul
stos
xor
ds
add
shlb
dec
test
xchg
sub
jo
icebp
je
leave
je
dec
xor
roll
inc
ljmp
jmp
mov
sti
mov
xchg
fneni(8087
shl
mov
pop
xchg
stc
dec
sub
xor
stos
jge
xchg
or
pop
xchg
sahf
jae
mov
add
in
bound
fs
sub
aas
push
daa
xchg
into
fs
jb
orb
test
xchg
fsubs
adc
out
xchg
data16
jge
arpl
aas
lds
stc
syscall
repnz
mov
mov
orb
sbb
das
out
mov
pop
lock
scas
out
mov
lea
stc
inc
inc
mov
ret
pop
inc
pop
popf
adc
mov
inc
scas
icebp
stos
imul
jno
sarl
lods
xor
ret
push
inc
shrb
mov
ficomps
fstpt
push
fldl
imul
sub
sub
sub
aam
fdiv
pusha
or
mov
mov
pop
mov
pop
add
and
call
fists
pop
subb
hlt
inc
stos
jbe
fldz
stos
mov
jge
cwtl
jnp
repz
out
scas
pop
fldt
mov
dec
cwtl
and
inc
ljmp
sub
push
loop
xchg
xor
dec
imul
int
lcall
push
gs
cld
cmc
jmp
das
xor
sbb
test
mov
repnz
sbb
inc
add
jbe
add
cmp
cmpsb
fsub
repnz
mov
std
cmpsb
mov
rorb
or
add
out
and
xchg
jno
push
and
sub
dec
dec
ror
pop
dec
rcll
dec
jo
and
popf
pop
enter
xchg
test
mov
mov
pusha
xchg
fiaddl
jmp
jne
in
jb
cmovl
adc
call
mov
or
mov
mov
lds
mov
rclb
and
and
data16
mov
adc
jg
and
xchg
jae
sbb
and
pop
fucomp
inc
bound
stos
jno
sbb
std
pop
std
sub
ss
fwait
inc
pushf
jg
jg
pushf
cmp
cmpsb
mov
ja
sbb
loopne
mov
sub
test
mov
sbb
leave
lcall
jmp
add
push
arpl
push
aas
lret
pop
out
xchg
dec
addr16
movsl
mov
cli
subl
mov
mov
repnz
test
in
ret
xchg
outsb
mov
stos
inc
add
jecxz
push
outsl
mov
mov
xlat
cmc
mov
and
imul
ret
sbb
mov
pop
pop
enter
adc
int3
mov
and
xorb
pop
jle
cmp
int3
adc
cmp
pop
xchg
iret
push
sbb
jae
stc
outsb
orb
xchg
inc
adc
dec
arpl
and
scas
inc
cmp
push
in
mov
sbb
loopne
shrb
sbb
hlt
xor
addb
aam
adc
push
cltd
xor
mov
icebp
mov
xchg
mov
sub
jg
dec
cmc
jns
je
insb
test
push
call
stos
mov
out
popf
jmp
xchg
cmpsl
aas
push
mov
stos
and
or
xor
jo
ret
sbb
out
jb
addb
cmp
mov
jge
mov
imul
add
dec
pop
test
push
cmp
je
outsl
mov
mov
jl
pop
mov
divb
push
add
cmp
fdivrs
push
dec
sub
fmul
cmp
cmp
enter
add
jae
fidivs
sahf
mov
push
test
sahf
cmc
add
jg
inc
imul
mov
enter
cmpsb
ret
enter
xor
cmp
xor
push
out
loopne
sti
repnz
inc
ljmp
icebp
les
shll
xchg
adc
ror
arpl
mov
loope
jge
lds
adc
fisttps
sbb
std
stc
clc
push
add
stc
mov
ljmp
call
lret
cli
mov
add
icebp
cmpsb
sub
adc
ret
loope
data16
lock
frstor
ret
jae
ret
sbb
and
mov
or
call
push
ja
repnz
fsubs
xorl
dec
pop
cmp
jne
mov
stos
cmpsl
adc
add
cmpb
std
sbb
sub
lahf
mov
cltd
and
cmp
lea
pop
je
xchg
ljmp
mov
cmp
shll
in
les
fisttps
mov
add
jns
mov
mov
sbb
ja
fnstsw
lock
jmp
call
xchg
add
mov
adc
ss
jmp
mov
mov
fimuls
psubusw
xchg
popa
inc
hlt
dec
icebp
adc
pop
pusha
and
lret
push
sahf
xchg
orl
les
add
sub
or
dec
jp
mov
dec
ret
mov
testb
fdivs
iret
push
sahf
andl
inc
das
mov
cwtl
shll
pop
repnz
divl
inc
fdivs
mov
sub
repz
push
mov
shll
mov
jl
fdivp
std
inc
or
sbb
xchg
mov
imul
in
loopne
cmp
mul
inc
jno
aaa
or
stos
into
mov
xor
rorb
cmp
or
push
out
mov
iret
pop
lret
out
sbb
adc
jp
lock
aad
pop
xor
movsb
into
mov
out
mov
pushf
fsts
cmp
ret
xor
pop
lcall
or
pop
or
pop
ror
jo
andb
andb
add
test
cwtl
sbb
push
sbb
push
movsb
into
daa
sbb
pop
cltd
pop
push
add
movsb
mov
adc
cmpsb
cmpsb
scas
fcoms
andl
out
push
cli
xor
sahf
sti
aaa
out
out
cli
mov
loopne
fsubrl
add
mov
stos
sub
lods
ds
pop
inc
das
stos
ret
stos
movsl
cltd
pushf
pop
arpl
addr16
std
in
das
lea
jb
jnp
adc
pop
cmc
push
pushf
mov
lods
aas
xor
fldt
fidivrs
lret
dec
adc
sbb
mov
jl
mov
add
mov
mov
mov
push
dec
xor
mov
in
out
sti
xor
xchg
in
and
dec
cmp
adc
xchg
out
pop
xchg
scas
pushf
jmp
out
mov
fimuls
icebp
sub
popa
inc
lret
fwait
cmp
cmp
out
roll
jno
xchg
xlat
int3
lret
cmp
sbb
loopne
mov
aaa
movl
pop
xorb
cmp
nop
xor
leave
cmc
lds
jne
xor
fnsave
bound
jb
aaa
shlb
pop
sub
imulb
xchg
mov
lret
cmpsb
popa
jns
ds
dec
jle
imul
add
inc
add
imul
inc
fstpl
push
out
adc
or
mov
jl
dec
xor
xor
and
adc
adc
and
or
sub
push
outsb
fsubs
pop
popf
jmp
dec
mov
out
mov
out
dec
pop
and
dec
jno
lods
imul
sub
push
aas
push
loope
popa
xchg
xchg
inc
adc
imul
cs
or
bound
sti
dec
lcall
cmpsb
or
jle
ljmp
push
cwtl
lods
jg
and
mul
jns
mov
out
xor
pop
or
pop
daa
adc
scas
les
cmp
mov
mov
call
call
dec
mov
adc
cmp
mov
sub
pusha
sti
jecxz
orl
and
orl
fld
push
or
sbb
repnz
testb
mov
or
fsubl
cltd
fs
nop
or
div
xchg
mov
jmp
cs
cld
mov
cmp
notb
dec
popa
sub
out
inc
inc
fimull
insl
sub
and
pop
in
cmp
jbe
sti
cmpsl
jnp
cmp
out
xchg
push
fadd
mov
mov
ja
das
sub
push
sti
dec
adc
scas
lcall
jne
mov
ret
pop
pushf
lea
out
cwtl
mov
push
pop
out
out
mov
scas
js
dec
add
cmp
call
adc
add
mov
inc
xchg
bound
mov
cld
int3
sbb
xchg
push
dec
inc
arpl
xchg
jecxz
push
iret
dec
roll
push
jnp
push
xchg
test
mov
cli
sti
pop
pop
mov
mov
xchg
in
test
in
add
dec
sub
call
mov
lods
dec
xchg
sbb
push
inc
les
insb
fstl
icebp
jns
sub
push
dec
dec
xor
push
jbe
mov
pop
xchg
enter
call
push
xor
insl
dec
add
xchg
mov
jbe
cmpsb
loope
push
scas
dec
xchg
jb
xlat
into
pop
xchg
mov
fildll
xor
sti
adc
sarl
push
inc
movsb
cmc
jge
rcrb
sti
inc
xchg
xchg
out
sub
mov
lret
add
lret
adc
xchg
xor
push
lcall
lret
jmp
int
test
jmp
jg
subl
mov
jecxz
jmp
insl
mov
sarl
fs
icebp
dec
gs
jge
xor
push
cmp
clc
repnz
pop
adc
add
movsl
mov
sub
sbb
es
rcrb
adc
repz
sub
in
mov
mov
fists
shl
cmp
rcll
ret
cmp
cmpsb
fnstenv
push
lret
add
shr
xor
mov
lret
jbe
sti
pop
mov
pop
mov
or
out
stc
xor
push
mov
xchg
js
dec
xor
repnz
ljmp
pop
data16
lds
in
dec
cwtl
push
xor
enter
push
cmp
inc
and
jge
mov
fwait
push
mov
test
mov
sahf
fisttpl
repnz
pop
jns
cmp
mov
aas
dec
pop
adc
push
pusha
and
cmp
mov
in
sbb
lods
rorl
xchg
inc
data16
stos
lock
xor
sbb
daa
mov
sbb
or
leave
push
ss
aad
sub
cmpb
shll
stc
mov
add
push
aaa
cmpsb
or
sbb
pop
mov
sub
addr16
leave
inc
ss
xchg
dec
push
adc
roll
mov
mov
push
loopne
jbe
pop
js
push
cmpsl
pop
mov
cmp
inc
out
pop
aam
jecxz
cli
pushf
jbe
inc
or
insl
xor
clc
sbb
cmc
mov
pop
jmp
std
sbbb
pop
das
xcrypt-cfb
cmpsl
in
ss
cld
adc
mov
fldenv
test
je
push
cmp
add
jmp
aaa
pop
in
push
add
inc
dec
or
leave
xchg
and
test
ja
jae
movsl
add
in
sbb
pop
pop
cs
pusha
fsubrl
mov
xchg
xor
cwtl
das
mov
shl
cli
or
fisttpll
das
adc
and
pop
push
jae
and
lea
push
cmpsb
hlt
push
icebp
fisubrs
mov
jns
dec
mull
push
clc
lods
mov
popa
addr16
fistpll
outsl
inc
call
stos
jg
movsl
ljmp
xor
fstp
clc
imul
jecxz
subb
and
dec
in
pusha
daa
stc
and
sub
ss
bound
sahf
cmpsb
pop
jnp
imulb
stc
mov
inc
mov
dec
push
inc
imul
pop
into
out
jmp
push
mov
loope
call
pop
sbb
fistl
aas
dec
stos
pushf
push
fstpl
push
fwait
inc
lahf
mov
ret
xchg
stos
inc
pop
out
inc
mov
icebp
nop
push
inc
dec
clc
out
adc
and
mov
inc
pop
pop
adc
pop
in
and
xor
dec
movsb
xchg
fldt
out
in
fstps
lds
gs
or
outsb
xchg
dec
cmpb
sub
mov
mov
fistpl
lods
aaa
cmp
arpl
js
inc
es
orl
and
ljmp
or
xlat
inc
lods
xchg
and
shrl
cmp
and
inc
or
jle
push
je
sbb
dec
mov
sbbl
sbb
mov
mov
rcrb
ja
and
stc
movsl
cmp
std
test
push
mov
xchg
fwait
mov
adc
out
sahf
cmc
inc
outsl
cltd
jne
xchg
push
cwtl
xchg
lcall
push
das
inc
mov
lods
jae
dec
mov
test
inc
pop
sub
ret
add
dec
or
imul
inc
push
fdivl
sub
je
dec
or
sbb
bound
js
ret
test
dec
fsubrs
cwtl
pop
loope
mov
out
add
std
cmp
sub
add
andb
sbb
icebp
mov
dec
lds
gs
adc
aad
subps
scas
dec
sbb
clc
dec
sub
push
cmp
mov
sub
xor
mov
pop
mov
xchg
nop
xor
adc
jns
adc
cmpb
dec
xor
cltd
mov
or
int3
add
sbb
sbb
icebp
std
inc
xor
fs
jb
and
inc
sbb
push
push
pusha
push
in
adc
rcl
ljmp
adc
imul
or
mov
inc
jne
sub
mov
fwait
or
push
int
adc
pop
or
icebp
inc
xor
dec
or
popf
push
mov
test
icebp
cmpsb
lea
push
dec
xlat
mov
push
push
xorb
push
or
dec
mov
xchg
cmp
fwait
mov
or
push
adc
xor
cmp
aam
jbe
movsb
ret
js
jge
jb
sbb
stc
stos
test
lcall
sbb
push
cmp
movsl
fdivrl
pop
jnp
or
mov
rcrl
adc
mov
xchg
ljmp
cmp
mov
xchg
inc
jmp
sub
mov
pop
jmp
cli
imul
mov
push
aad
ljmp
fcompl
sbb
jo
push
mov
mov
mov
sub
add
or
or
jge
xchg
imul
adc
das
adc
insl
xlat
je
mov
bound
pop
adc
pop
lcall
aad
aam
push
mov
sub
fmull
das
test
jns
fistpl
or
and
aas
xlat
inc
and
loopw
fsubr
int3
mov
or
popf
dec
inc
pushf
daa
les
aas
pop
cmp
pop
jnp
inc
out
loop
jo
xchg
pop
cmp
mov
popf
mov
lods
enter
cmp
jmp
push
nop
fidivrl
insb
inc
mov
je
mov
in
leave
cmp
fimuls
repz
test
maxps
in
pop
pushl
add
mov
jbe
sub
test
jle
mov
jo
sbb
mov
fs
fsubrs
adc
repz
jne
pusha
cli
roll
loopne
xchg
mov
outsl
mov
ret
enter
add
cli
and
jl
dec
fyl2x
adc
sbb
dec
mov
fildl
mov
dec
mov
int3
jae
scas
sub
bound
mov
pop
push
mov
and
aas
xorl
jne
pop
iret
fidivs
sub
mov
push
mov
mov
aad
pop
mov
xchg
inc
and
dec
jbe
push
push
xchg
rol
pop
daa
or
hlt
rcr
sbb
inc
gs
ss
imul
mov
loop
pop
addl
pushl
dec
cmp
aaa
lret
push
mov
loop
aas
aaa
lcall
mov
ljmp
hlt
mov
xlat
xchg
mov
gs
push
rcll
mov
add
jl
push
dec
scas
hlt
into
xchg
in
pop
incl
aam
mov
xlat
and
cwtl
aad
popf
inc
add
inc
les
sbb
adc
mov
sub
adc
push
jge
mov
cs
xchg
dec
or
faddl
dec
dec
mov
loope
and
xchg
pop
fdivl
insl
mov
xchg
scas
xor
decl
cld
clc
gs
fisubrl
and
sarl
pop
or
xchg
mov
sbb
lock
add
inc
int
dec
ljmp
adc
in
ficompl
dec
sarb
mov
pop
and
sub
bound
int
js
std
fstl
jg
jo
daa
inc
or
shrl
jg
scas
xchg
xchg
or
or
jo
fisubl
xorl
pushf
iret
pop
stos
enter
cmp
jmp
push
cmp
decb
outsb
cmp
push
add
cmp
mov
rcll
lret
dec
ljmp
pop
lods
lcall
mov
ret
xorl
andb
mov
icebp
testl
pop
arpl
mov
sbbb
push
dec
icebp
fmull
jae
adc
lea
sbb
popl
cli
and
sahf
arpl
loope
or
mov
jecxz
pop
stos
jmp
cmpsl
sub
inc
push
fidivl
pusha
in
mov
test
sub
and
pop
and
shlb
inc
cmp
xorb
mov
incl
push
in
pusha
mov
sub
sahf
cmovno
cmp
adcb
scas
call
pop
sbb
enter
cwtl
dec
adc
mov
sahf
pushf
addb
stos
xchg
dec
mov
cld
sub
imul
adc
rcr
pop
stos
mov
mov
aas
test
mov
mov
daa
inc
dec
inc
mov
enter
adc
call
in
shrl
loope
jge
lcall
sub
jb
lret
add
mov
cmpb
into
in
addr16
dec
dec
data16
repz
mov
mov
adc
ret
xchg
lds
out
jb
xor
mov
sbb
test
push
es
jo
inc
faddl
xchg
dec
push
ds
mov
icebp
adc
pushf
in
mov
push
test
repz
mov
xor
test
out
ret
mov
mov
push
adc
pop
cmp
push
stos
adc
addr16
test
push
add
rcrb
cld
mov
mov
add
sbb
fstpt
movsl
adc
out
adc
cmp
mov
in
neg
les
dec
mov
sbb
cmp
pop
push
and
rcr
add
pop
bound
aaa
pop
and
push
fs
call
and
add
dec
jl
insl
push
mov
lds
je
pushf
rol
jp
test
mov
iret
mov
loopne
cmp
aam
in
cmp
xchg
adc
push
pop
adc
and
and
sbb
in
xor
or
mov
sub
bound
mov
in
inc
inc
sahf
iret
mov
insb
bound
leave
mov
dec
push
mov
xchg
je
inc
xchg
xchg
dec
push
mov
xorb
push
mov
fwait
test
xchg
hlt
dec
inc
int
push
jnp,pn
pop
cld
sub
outsb
dec
or
aaa
lods
sub
int
mov
scas
inc
mov
iret
mov
dec
test
ds
fcomp
pop
add
jne
dec
lock
add
clc
cmpl
sbb
jnp
in
jle
xor
mov
cmpb
jb
imul
jnp
fisubs
clc
sbb
push
adc
daa
aad
dec
adc
sbb
add
jno
aam
pusha
sub
sarb
push
repnz
mov
cmpsb
jno
addb
sbb
test
aam
dec
pop
int
mov
hlt
enter
add
clc
push
or
rorb
xlat
fistpll
or
lods
cmp
mov
mov
cmc
int
lcallw
dec
inc
lock
push
push
es
add
jbe
sub
mov
js
xlat
in
sbb
pop
xchg
call
mov
xchg
adc
enter
xchg
stos
scas
cli
addb
mov
push
cld
or
js
jae
mov
inc
fwait
ud0
add
into
clc
pop
inc
xchg
sub
lock
cmp
testb
push
add
lahf
cmpsb
cmp
aad
notl
cmp
mov
xor
mov
pop
cld
or
xor
and
mov
rcll
xchg
sub
dec
cmp
shlb
xchg
faddl
je
cmc
ds
lods
lahf
dec
xchg
nop
movsb
xchg
jl
sbb
mov
movsl
mov
dec
rcrl
cmc
pop
and
adc
mov
push
ret
pop
stc
cmp
in
ret
push
xchg
fsubrs
mov
push
mov
dec
ds
lahf
rcrl
push
into
sti
pop
je
adc
test
inc
dec
adc
mov
xchg
enter
cmp
into
push
enter
add
int3
in
call
fistpl
lods
out
test
das
push
mov
fwait
imul
mov
xchg
sbbb
xchg
pop
repnz
repz
repz
mov
pop
out
aam
or
xchg
sarb
lds
shll
inc
pop
call
in
test
adc
or
inc
outsb
jno
ds
into
cmpsb
jp
push
or
imul
lods
push
cmp
fwait
rclb
jg
mov
adc
push
in
icebp
mov
out
idivb
push
pop
fwait
and
outsb
inc
aas
ficompl
xor
insb
cmp
loope
push
cmp
mov
aaa
int3
pop
cs
jae
jl
lahf
movups
ficomps
push
fldl2t
add
sbbl
sar
inc
icebp
xchg
lret
outsl
cmp
add
jb
mov
ja
jl
mov
adc
mov
or
lods
movsb
nop
inc
xlat
sbb
mov
loop
xor
adc
push
jg
lds
out
gs
adc
js
cmp
loop
scas
aam
imul
roll
add
test
cmp
pop
sbb
mov
or
adc
add
fwait
or
lods
dec
and
jp
cmp
stos
pop
iret
outsb
nop
push
clc
cmp
push
cmc
or
xchg
push
mov
add
mov
mov
or
rcll
push
jno
test
mov
lahf
push
xorl
scas
add
xlat
mov
adc
xchg
ror
xor
add
out
cli
add
adc
les
aam
and
lea
mov
pop
cwtl
mov
xchg
push
add
push
mov
inc
add
push
dec
jmp
and
jae
int3
xchg
cmp
popa
sub
xchg
xor
scas
pop
aad
mov
dec
cmp
test
lock
xchg
xor
push
push
pusha
sti
and
adc
mov
lahf
sbb
mov
test
aad
push
nop
cli
sti
cld
push
xchg
shlb
push
xchg
rorb
repnz
into
out
xchg
pop
mov
mov
push
mov
jmp
mov
sbb
mov
pop
mov
xor
in
inc
into
jp
movsl
lock
bound
jns
xchg
cmp
push
or
dec
or
xchg
sub
cmp
xchg
aam
repz
mov
mov
add
test
outsl
mov
inc
sbb
fnstcw
inc
sub
dec
or
and
xor
jge
fcompp
incb
jge
push
inc
xchg
call
sub
inc
sarb
add
cmc
outsl
jl
ds
pop
ret
lahf
bound
xor
in
arpl
scas
fisttpll
and
packsswb
movsl
lret
out
leave
dec
or
mov
out
mov
sub
test
mov
push
aam
jmp
lds
idivl
or
pop
pop
push
mov
xchg
ret
andl
sbb
nop
je
push
jg
dec
cmp
mov
cmp
jb
push
sub
adc
jno
loop
std
sub
iret
jmp
stos
dec
pushf
pop
aas
adc
pop
xchg
push
xor
mov
and
jmp
addr16
jbe
add
movsb
insb
sbb
andnps
dec
push
add
mov
cld
setae
add
jmp
sub
repz
cmp
cld
jp
idivl
mov
jl
push
ret
clc
jp
sub
fstps
xchg
decb
icebp
scas
lock
inc
cmp
jno
pusha
adc
les
mov
pop
add
imul
cli
jmp
sub
subl
roll
mov
pop
ljmp
fmuls
dec
or
pop
lret
jo
add
int3
cli
fadds
jb
jne
js
fs
data16
std
xchg
lods
loop
ds
int
dec
fbld
jge
out
sub
dec
mov
outsb
pop
sub
jg
sub
mov
mov
test
xor
fildl
nop
inc
add
mov
cltd
icebp
ss
adc
sub
or
divb
xchg
inc
daa
sbb
inc
out
ljmp
push
and
and
ret
cmpsb
jmp
jb
mov
pop
mov
movsw
mov
cmp
leave
pusha
cltd
adc
test
int
dec
xchg
fwait
inc
mov
movsb
mov
sti
cwtl
ret
fcomps
dec
inc
fmuls
push
clc
sub
lea
fldt
xor
inc
dec
cmp
mov
out
int
add
lods
nop
outsl
or
je
pop
xchg
int
jno
mov
dec
inc
pop
fbld
shr
ret
push
ds
mov
out
push
and
sub
daa
cmpsb
mov
xchg
loopne
fst
add
outsb
jecxz
stos
and
jg
xor
dec
bound
test
lods
pop
push
jle
mov
mov
pusha
mov
fs
push
mov
inc
mov
mov
sarl
lods
repz
add
fcomps
test
mov
rcr
or
xchg
cld
clc
xchg
out
push
mov
cld
in
add
int
add
or
mov
fxch
lock
mov
or
dec
frstor
push
mov
lods
rorl
aad
push
push
pop
mov
call
adc
push
mov
scas
in
adc
ret
cli
sbb
fs
jp
in
add
pop
pop
xor
out
mov
mov
xor
xor
dec
jmp
shrl
cmp
stos
adc
shr
rcrl
les
mov
jecxz
push
sbb
cmpsb
dec
mov
fs
test
cmpl
lods
and
frstor
outsb
inc
jmp
adc
fcoml
rol
jne
mov
xor
dec
add
leave
and
and
xchg
andb
or
jb
add
pop
push
stos
out
mov
es
pushf
add
add
jg
pop
cli
inc
and
xchg
outsl
push
sub
pop
inc
and
mov
stos
xchg
or
jbe
sub
mov
xor
rol
and
pop
inc
out
jne
dec
cmc
lods
jb
mov
test
jmp
add
call
dec
mov
add
cmpsl
out
jle
inc
sahf
ret
pop
adc
lods
loopne
rcll
scas
push
push
inc
mov
ja
std
js
lret
jne
dec
insl
pop
fstpl
mov
int
mov
and
xlat
cmp
pop
push
sbb
dec
cmp
repz
leave
scas
cmpsl
xchg
js
xlat
adc
mov
cltd
jl
popf
popf
imul
mov
push
subl
jo
lret
mov
scas
ret
cmpsb
sbb
xorb
adc
jg
pop
je
mov
dec
sub
xor
add
iret
mov
sbb
xor
or
inc
std
mov
mov
push
lea
fs
stos
inc
mov
lods
xchg
dec
xor
jnp
lock
sub
mov
inc
jle
or
jecxz
loope
ljmp
gs
sbb
dec
push
ret
jae
mov
ds
cwtl
jge
shlb
cmc
pop
mov
push
imul
mov
pop
push
xchg
push
lods
inc
xchg
jl
sub
lods
mov
sbb
xchg
mov
fstpl
ret
loopne
dec
std
out
daa
mov
ret
dec
pop
lds
dec
ret
fmul
or
mov
inc
sub
xchg
jle
hlt
out
mov
xor
xor
inc
les
jns
pop
sub
lcall
adc
ds
mov
js
inc
xchg
sbb
stos
pop
mov
outsl
and
cld
mov
mov
in
dec
sub
lds
dec
rcll
mov
aad
mov
sub
scas
ds
xchg
cmp
dec
fistps
xchg
jl
insl
mov
dec
mov
sub
sub
shlb
mov
inc
mov
icebp
mov
lret
call
jae
leave
lods
cmp
popl
fxch
adc
xchg
xor
aaa
adc
push
sbb
jge
int
loopne
clc
xchg
push
push
push
popa
repz
aaa
sarb
fldt
call
jge
cmc
ja
cwtl
outsb
out
gs
lret
sbb
pushw
aaa
mov
imul
dec
neg
stos
jmp
shl
movsb
int
xchg
imul
pusha
ret
inc
test
out
and
add
xchg
mov
mov
cs
sub
fwait
adc
xchg
jb
pop
mov
ret
out
sub
or
sub
lret
add
xchg
test
repz
ljmp
rcrl
sarb
xchg
popl
into
jbe
add
cmpsl
mov
xchg
and
mov
adc
loope
cmc
adc
push
pop
inc
fucomp
mov
iret
stos
mov
fldcw
cltd
shlb
xchg
inc
dec
mov
shll
ja
lea
and
sbb
or
cmpsb
mov
cmp
mov
dec
mov
sbb
insl
sti
loopne
mov
adc
popa
mov
pop
imul
jns
dec
and
imul
and
cmpb
xor
sbb
stos
insb
or
jno
xchg
push
aaa
test
xor
lock
loopne
stc
add
add
xor
repnz
jge
add
insb
jg
imul
pushf
pop
jae
add
movsb
pop
stc
sahf
cld
push
and
int3
mov
push
nop
dec
inc
xor
inc
pop
xchg
mov
repz
sbb
std
sti
fnstcw
or
pop
mov
insl
mov
xor
xor
aam
lahf
and
das
cmp
outsl
add
pusha
pop
int3
push
stc
add
mov
push
inc
outsl
es
mov
or
cmc
lds
push
outsb
or
ja
and
dec
shrl
sar
or
cmp
adc
and
in
cs
sub
sbb
int
push
push
add
ss
test
mov
fstps
pop
sub
mov
mov
scas
lret
test
jecxz
or
addr16
pop
and
aad
xor
rclb
std
jge
mov
mov
setae
jnp
push
and
inc
xor
inc
adc
scas
out
mov
mov
mov
cmpsl
es
adc
vpaddsw
mov
fucomi
loop
jp
jmp
and
call
les
mov
into
add
dec
test
jno
mov
xor
mov
mov
xchg
ljmp
data16
daa
sub
ret
lods
lds
loope
pop
sub
xor
mov
mov
loopne
push
cmp
sbb
push
mov
cld
repnz
adc
cmp
gs
cmp
es
jo
cs
sbb
and
push
cmp
xchg
xchg
iret
mov
jle
insb
dec
mov
xchg
and
std
dec
lods
mov
jno
pop
popa
enter
add
fisubrl
xchg
cld
mov
cmpsb
xchg
jo
icebp
shrb
pop
aas
inc
mov
xchg
xchg
sbb
stos
jmp
push
jp
gs
cmpsl
sub
cld
aad
in
adc
xor
arpl
mov
lcall
addr16
xor
push
xchg
ljmp
or
pop
enter
mov
add
mov
mov
xor
pop
cli
or
jg
shl
stos
sti
pop
inc
jecxz
fdivl
test
incl
lcall
sbb
jl
fistpll
outsl
aaa
push
dec
jmp
push
inc
adc
dec
mov
lds
frstor
nop
or
xchg
adc
jnp
cmc
ret
fwait
adc
mov
lods
imul
mov
loope
xchg
insl
lods
or
inc
sti
push
les
in
mov
push
push
subl
mov
mov
mov
lahf
orl
xchg
xchg
mov
mov
cmpsb
dec
int
or
sbb
xor
fldt
mov
loopew
pop
int
xchg
jp
adc
or
mov
cmc
mov
xor
das
xchg
inc
push
jae
rclb
aaa
fcoms
jp
adc
cmp
fs
fiaddl
popa
addr16
adc
mov
inc
sbb
out
repz
push
jb
inc
in
push
fs
jbe
popf
setl
add
cmpsl
pop
std
out
mov
stos
test
jne
jl
sbb
test
sub
je
loop
loope
inc
imul
repz
repz
ds
xlat
imul
xor
jmp
fcomi
add
insl
adc
push
xor
outsb
test
lcall
dec
loope
pop
or
and
cltd
fwait
iret
push
out
aaa
cmp
aaa
and
cld
cmpsl
push
fistl
test
add
push
daa
sub
outsl
or
das
mov
in
adcb
mov
andl
cmpsl
js
inc
fistps
mov
int
int
xchg
lahf
add
das
pop
adc
aad
int
push
adc
ret
js
mov
sub
mov
imul
popa
xor
jnp
push
lahf
adc
xor
cmp
sub
bound
dec
inc
call
mov
jae
push
push
movsb
stos
clc
sti
xor
hlt
inc
in
insb
cmp
sbb
push
repz
bound
dec
mov
pop
sbb
adc
sub
ds
orb
mov
pushf
dec
push
mov
pop
ret
clc
insb
mov
movsl
test
rcr
rolb
dec
jne
jmp
imull
mov
inc
jg
and
lock
mov
mov
fiadds
cltd
inc
lock
push
dec
cld
xchg
outsl
incb
inc
cwtl
shrl
xor
sub
popa
cmpsl
xor
push
jae
xchg
sbb
push
fldcw
loopne
lods
les
push
cmp
mov
aam
jg
je
repz
push
pop
inc
or
insb
int3
jg
out
push
xchg
and
cmp
dec
nop
ds
jb
mov
std
dec
iret
inc
cmp
push
rcll
in
mov
mov
mov
lahf
sbb
xor
and
int
jg
imul
or
popa
sbb
xchg
popf
jae
dec
mov
out
jne
sbb
cmp
jae
xchg
movlhps
mov
mov
shr
add
imul
add
add
loopne
jnp
lret
sub
dec
bound
push
mov
mov
popl
stos
xor
and
cmpl
pop
jbe
xor
adc
xorl
cltd
xor
shll
ret
loope
sub
xchg
into
andb
aad
lds
fdivs
test
jmp
xor
lahf
mov
sahf
sub
cmp
inc
pushf
rorl
lods
xchg
mov
jle
fidivl
adcl
and
jmp
add
xchg
daa
mov
stos
test
xor
movsl
stos
movsb
push
insb
jle
lods
in
out
or
xor
pop
inc
test
imul
push
add
jno
pusha
mov
push
sti
lahf
in
mov
push
cld
je
cli
sbb
adc
cmp
push
rorb
fisubl
mov
cmp
lea
in
shlb
add
adc
pushf
inc
add
inc
mov
repz
loopne
xchg
jmp
lods
rcr
pop
gs
mov
mov
mov
pusha
push
jno
or
lret
mov
sub
pop
jg
jbe
sub
push
fsubrp
dec
dec
push
xchg
mov
push
add
lock
arpl
or
mov
iret
xchg
mov
add
adc
fsubrs
sbb
push
fs
mov
loope
jge
dec
push
test
mulb
and
or
fiaddl
push
sbb
das
jne
inc
and
cmp
xchg
push
fdivs
push
jp
xchg
sbb
pop
iret
xchg
popa
pop
xchg
int
push
sarl
insb
or
aas
fsubs
adc
fnstsw
test
test
jbe
fsubrl
xor
aad
movsb
push
out
out
jg
out
rclb
mov
pop
jecxz
ret
jnp
lock
test
lcall
or
mov
push
fsubrs
inc
pop
bnd
cmp
pop
scas
jns
xchg
jg
add
pop
rcr
lods
cmpsb
and
xchg
pop
pushf
pop
in
popl
push
icebp
add
mov
ja
lret
cmp
adc
jb
outsl
jbe
lcall
xchg
loope
mov
xor
repz
xor
popf
lds
inc
bound
lret
js
pop
mov
in
pop
jle
jecxz
ss
jne
or
mov
xor
adc
push
push
dec
jnp
jge
mov
xchg
stos
push
mov
cmp
aas
xor
int3
dec
xchg
and
cmpsb
mov
push
int
push
push
sub
mov
push
and
paddd
push
data16
outsb
add
flds
jle
adc
add
mov
inc
fisubs
or
mov
fisttpl
and
adc
dec
jecxz
js
pop
sub
mov
mov
sub
stc
popa
mov
or
xchg
cmp
add
cli
mov
mov
mov
sub
cmc
mov
mov
scas
js
movsl
nop
add
loop
dec
nop
loop
inc
adc
adc
cltd
in
das
pop
dec
sarl
imul
push
add
inc
and
lret
or
xchg
sub
lret
jle
xchg
cmc
pop
sbb
xlat
js
pushl
rclb
pop
jmp
pop
dec
cmovne
sti
fwait
in
data16
call
jge
das
rol
movsb
shll
add
rorl
mov
inc
mov
mov
outsb
mov
push
mov
mov
add
fnop
sbb
sbb
mov
push
or
cltd
cs
and
pushw
jmp
jno
shrl
add
pop
sub
arpl
adc
jns
stc
ret
call
mov
mov
sub
cld
rcl
lds
rcll
shr
sbb
dec
cmp
dec
mov
movsl
jbe
out
dec
aas
inc
not
call
dec
and
les
cwtl
imul
fnstenv
mov
push
add
popa
add
stos
jbe
dec
push
sub
xchg
outsb
jbe
cmp
jmp
inc
mov
push
mov
adc
mov
sub
jecxz
jbe
push
inc
js
inc
daa
add
repnz
pushf
xorl
lea
daa
imul
repz
jg
in
adc
fisubl
jmp
movsl
cmp
sub
mov
arpl
sub
outsb
pop
xlat
or
mov
iret
out
jb
clc
das
cmp
test
pop
sbb
mov
push
dec
jae
outsl
insl
dec
add
add
mov
call
or
adc
lock
push
jo
push
mov
mov
or
lret
jp
jl
mov
add
out
jp
or
pop
enter
inc
dec
dec
xor
negb
cmp
mov
xor
out
cmp
add
jae
mov
and
cli
out
sbb
and
mov
out
push
pop
xchg
shlb
cmpb
sub
mov
lods
push
inc
cli
rclb
jge
or
mov
and
mov
mov
and
and
and
mov
lcall
xchg
add
daa
test
jmp
rcll
dec
out
das
stos
in
or
out
sub
dec
std
push
rolb
dec
adc
cmp
int
pop
test
nop
leave
pop
jae
inc
test
inc
add
scas
inc
frstor
xchg
cmc
or
fs
popa
mov
sub
pop
aad
enter
jno
xchg
data16
adc
lea
push
push
pop
int
clc
mov
aad
test
pop
push
cmp
call
ja
sbbb
lret
cmc
xor
sub
pop
dec
jnp
repz
adc
out
pop
hlt
pop
mov
xchg
popa
test
in
mov
lock
es
out
inc
mov
jbe
sub
sbb
jns
psrad
dec
popf
shll
mov
shrl
rcll
jmp
sub
test
fildl
mov
xchg
insl
js
stos
mov
jle
jno
insb
xchg
sub
push
push
aas
repz
ret
sbb
dec
popa
sbb
xchg
dec
js
out
out
push
mov
mov
and
out
clc
fnstsw
dec
push
inc
stos
xor
mov
enter
aaa
push
xor
and
out
outsb
sbb
jae
incl
vpcmpud
repnz
dec
out
adc
aam
and
mov
pop
inc
ja
call
lea
test
icebp
cmc
xlat
jae
dec
push
inc
or
mov
ds
dec
push
test
jge
lock
adcb
xor
sbb
test
mov
rcrl
dec
inc
jge
test
pop
scas
sub
or
inc
ljmp
dec
pop
push
cmp
fisttps
insl
hlt
adc
adc
cld
es
sbb
mov
mov
insb
out
test
lcall
adc
mov
ficompl
stos
mov
adc
rcrl
xor
lret
leave
int
cmp
rol
aad
cld
cmp
rorb
mov
movsb
insl
xchg
fistl
adc
fwait
push
mov
mov
sub
sbb
push
jg
mov
pop
push
push
push
push
outsl
hlt
and
adc
xchg
pop
jb
mov
sub
jg
sbb
mov
add
call
xor
lods
adc
stos
jg
hlt
mov
rolb
mov
stos
and
rcll
jmp
gs
mov
pusha
lret
icebp
stos
cs
scas
jecxz
mov
andl
movsb
add
adc
nop
jae
stos
xchg
jl
aas
cmpsl
push
cmp
push
neg
insb
fdivrs
loope
and
jno
add
xchg
rcrl
cmpsb
add
inc
pop
sub
sub
in
cli
xchg
cmpsl
sub
aas
je
cmp
rcll
movsl
fcomi
mov
mov
pushf
xor
adc
xor
push
pop
xor
pushf
movsl
mov
test
fnsave
lods
or
push
jae
add
mov
jbe
sbb
inc
jo
or
fstpl
das
mov
ljmp
xor
adc
and
inc
sub
mov
bound
movsb
lea
rep
mov
inc
jmp
jmp
shrb
inc
cld
ss
pop
sub
cmp
lahf
movsb
cmpsl
arpl
aad
out
clc
test
clc
jno
mov
repz
sbb
jle
out
jae
xchg
cmp
xor
mov
inc
and
popf
inc
pushf
cwtl
lahf
popl
fldt
mov
pop
jle
out
andb
jno
mov
adc
test
fwait
xchg
std
test
jae
loopne
ljmp
dec
filds
daa
imul
lods
mov
pop
adc
add
inc
dec
sbb
scas
pop
imul
push
adc
adc
mov
xchg
or
xchg
loop
outsb
testb
and
lds
pop
cmpsb
out
aam
cmpsl
scas
outsb
mov
call
iret
fmuls
aad
mov
cmp
sub
mov
sbb
jnp
lahf
daa
loop
or
xchg
xchg
enter
sahf
out
xchg
push
push
fs
nopl
lods
paddsb
cltd
mov
loop
cmp
hlt
mov
xchg
pop
adc
subb
test
add
cs
out
push
inc
movl
sub
mov
lods
mov
push
push
cmc
std
lods
jp
std
pop
out
stos
popa
aam
gs
push
dec
dec
je
bound
jmp
aaa
and
inc
pushf
and
xor
mov
loope
xor
mov
iret
gs
cwtl
cltd
xor
loopne
xchg
int
mov
push
int
outsl
data16
and
or
out
mov
in
aad
cltd
sbb
scas
add
push
add
in
mov
mov
and
repnz
incb
loopne
pop
les
xor
fmull
jmp
ja
mov
push
or
divb
sub
or
xor
xor
dec
out
xchg
das
xor
adc
xor
jno
add
mov
pusha
jecxz
mov
cltd
and
out
pop
mov
ret
dec
mov
test
int3
xor
ret
mov
out
sub
inc
adc
mov
mov
rorl
repnz
dec
out
push
negl
jg
add
je
ljmp
icebp
in
sbbb
add
sbb
pushf
push
xlat
ljmp
jmp
pop
jg
dec
in
or
mov
jns
cmp
mov
xchg
and
aam
test
out
mov
cmp
jne
and
sbb
data16
adc
lea
push
pop
int3
push
lea
stos
adc
cwtl
sbb
je
js
dec
adc
and
aam
outsl
push
stc
mov
scas
cmp
lods
cmp
inc
fbld
and
int3
or
clc
test
and
push
push
add
or
or
jg
sbb
sbb
or
movsl
push
std
ljmp
notb
jg
lret
inc
scas
dec
mov
sbb
and
inc
jno
aad
popa
adc
inc
mov
popa
mov
fldenv
push
mov
sub
add
imul
adc
inc
push
imul
lret
push
mov
and
jle
add
push
jae
push
or
mov
shr
add
mov
cmp
xor
adc
fbld
and
xchg
push
pop
dec
push
loopne
mov
jbe
mov
push
lods
test
add
les
aad
lods
shlb
insb
shll
push
xorl
pop
insl
push
loop
sub
jmp
mov
or
cmp
adc
lods
mov
push
outsl
leave
loopne
loope
push
inc
es
data16
xchg
push
lock
mov
adc
ficoml
pop
sbb
lcall
lea
or
sbb
call
popf
sti
and
std
lret
sbb
and
jno
sub
cli
jmp
cmp
mov
cld
adcb
cmp
stos
out
bound
adc
scas
push
sub
es
subb
add
sbb
mov
xchg
pop
dec
decb
imulb
mov
idivb
clc
jmp
lock
push
push
sub
stos
pop
mov
das
scas
stc
shll
jecxz
testb
icebp
lock
cwtl
or
lret
outsb
jae
aam
aam
push
inc
adc
or
adc
and
mov
mov
xor
jl
js
sub
cmc
pop
enter
xor
dec
insb
lret
sub
mov
mov
mov
xchg
push
mov
movsl
fistl
fists
test
mov
or
xor
fistl
mov
push
dec
divl
push
das
mov
mov
mov
mov
mov
sahf
enter
and
push
adc
xchg
sub
into
js
dec
cmc
test
cmpsl
mov
outsl
or
cmp
in
fistpll
and
out
aam
gs
rorl
push
imul
negb
test
rcrl
ret
push
lahf
movsl
push
xchg
sub
fs
cmp
adc
into
sahf
or
mov
inc
ja
xor
int
xlat
xchg
xchg
add
sar
dec
xchg
enter
or
stos
fdivrl
insl
pop
lds
outsb
or
cmc
clc
sbb
lea
or
cld
xchg
inc
push
xor
push
out
out
cmp
pop
or
js
xor
fstps
aad
insl
push
imul
add
insb
sbb
int3
inc
rep
fldt
push
mov
push
xchg
lock
es
jb
mov
and
pop
inc
pop
out
or
sub
inc
imul
call
xorl
int
in
fimuls
mov
cmpsl
xchg
repnz
cmp
mov
daa
out
shrb
nop
pop
bound
pop
mov
jecxz
scas
or
push
add
push
js
inc
fimuls
mov
mov
and
stc
call
in
sbb
xor
xor
popf
sub
add
pop
sbb
cltd
decl
or
and
mov
lds
sti
xor
lcall
cmp
inc
lcall
pop
in
cmp
movsl
dec
sub
push
ret
jnp
lcall
jecxz
xor
push
shll
sub
push
cmc
or
movsl
inc
js
stos
and
in
adc
xchg
dec
mov
or
inc
dec
filds
insb
subl
jg
pop
idivl
xor
dec
jo
repz
out
add
mov
or
cmp
in
insb
mov
xchg
insl
cmpb
add
ror
insb
cmp
mov
sbb
popf
movsl
xor
cmp
adc
int3
inc
cmp
add
fsubrl
push
xor
test
cmp
adc
mov
push
xor
enter
add
xchg
test
and
inc
cmpsl
push
or
shl
in
sbbl
or
sub
test
idivl
jmp
les
daa
jge
ljmp
ljmp
popf
jle
in
dec
loope
mov
and
imul
loop
push
sub
pop
gs
push
int3
dec
out
pop
cmpsb
cmpl
cmc
sbb
xor
fimuls
sbb
call
pusha
xlat
add
clc
and
sbb
int
adc
push
sbb
jge
std
xchg
dec
loop
data16
xchg
push
mov
call
push
pop
mov
xchg
scas
shlb
shrl
mov
xorb
pop
jle
jne
or
adc
push
mov
jp
push
cmpsl
mov
inc
sub
pop
add
cltd
inc
and
xchg
xchg
cmp
pop
dec
into
pop
and
jo
int
stos
xchg
or
jne
sbbb
cmp
xchg
inc
mov
or
xchg
dec
jle
dec
notl
pop
mov
test
adc
xor
cmp
das
dec
movsb
xor
xor
dec
popa
sbb
push
push
in
shlb
shll
push
idiv
inc
popa
call
shlb
mov
cmp
push
rolb
sub
jb
inc
sbbl
popf
inc
cmc
enter
xor
mov
or
or
imul
and
ret
lret
loop
cmpsb
shll
sarb
xor
popf
shll
mov
out
orl
notl
pop
sahf
cld
cmp
sbb
add
adc
mov
mov
lret
outsl
stos
sub
pop
jae
cmp
and
daa
cmp
stos
adc
jge
pop
mov
adc
repz
inc
mov
nop
xlat
das
fisubl
outsb
push
add
imul
adc
rol
jbe
loopne
sub
jmp
fidivrs
pop
fwait
jb
sarl
sbb
xchg
mulb
sahf
sbb
cmpsb
mov
sub
out
rclb
ret
sbb
fwait
cltd
push
xchg
mov
in
sbb
pusha
call
lret
xchg
bound
mov
js
cmp
add
daa
or
inc
pop
pop
ror
repnz
adc
xchg
sub
lods
push
imull
jo
outsb
jecxz
pushf
jbe
jp
loop
popf
xor
sti
mov
adc
test
into
mov
adc
insb
jl
stos
notl
push
daa
mov
stos
cs
mov
pushl
dec
jmp
andl
cltd
push
xor
pusha
lahf
pusha
outsl
xor
xchg
les
mov
add
cli
xchg
jecxz
or
adc
aaa
jecxz
pop
loopne
inc
adc
cmp
dec
inc
adc
fs
adc
lcall
pop
js
push
test
xchg
loope
xchg
or
icebp
cmp
repnz
mov
test
xor
js
xchg
test
add
inc
dec
cmp
je
cmp
jle
cmp
ret
xchg
add
jmp
add
aam
and
inc
push
pop
mov
push
les
in
loopne
stos
pushf
mov
dec
xor
in
pop
add
mov
xchg
push
add
insb
insb
jb
or
lcall
fidivs
daa
aaa
lret
aad
add
jp
ja
cmp
dec
pop
mov
out
test
lcall
test
insb
cmp
mov
stos
jl
dec
iret
push
xor
jl
nop
cmp
mov
fcmovnb
cli
xor
mov
push
jecxz
in
or
mov
andl
bound
push
jne
cmp
push
cmp
mov
mov
popa
mov
jo
aam
pop
dec
aaa
pop
cmc
xchg
ds
mov
call
icebp
movsb
push
lods
lret
sbb
loop
nop
rcrb
jb
mov
pusha
mov
push
or
jl
push
or
icebp
push
pushf
jne
jbe
andb
aad
jns
js
test
dec
out
les
mov
xor
out
adc
jbe
out
dec
test
fstps
mov
pcmpgtw
cltd
jae
add
orl
lea
out
push
or
inc
sub
adc
loope
fsubr
and
data16
loope
push
sahf
test
mov
lods
filds
mov
push
sbb
jne
aam
stos
ss
mov
icebp
fistl
jge
hlt
imull
out
loope
xor
sahf
sbb
out
in
xchg
xchg
lahf
jmp
dec
jl
push
iret
pusha
mov
or
outsb
imul
dec
lock
push
cmpsl
jne
mov
mov
cmp
mov
pop
xlat
mov
mov
sti
or
mov
xor
loope
xor
unpcklps
test
or
sbb
inc
add
inc
jae
mov
int
call
in
cmp
push
sub
xor
test
mov
movsl
ljmp
adc
cs
aaa
push
arpl
bound
xor
add
andl
lcall
scas
adc
add
popl
pop
lods
daa
and
sahf
mov
or
jno
lret
arpl
test
pop
xor
ds
jbe
mov
cld
cmp
in
popa
aas
jns
push
mov
push
jl
fldenv
lret
flds
test
jecxz
daa
mov
mov
pop
cli
adc
std
jb
sbb
and
or
sbb
pop
in
add
and
and
ret
movsl
aam
sbb
pop
pop
inc
dec
mov
out
push
movsb
iret
mov
xor
sbb
xchg
push
cmpsl
insl
shr
call
icebp
hlt
cltd
xchg
and
jo
jae
cli
fcomps
mov
and
fisttps
adc
jns
les
rcrl
sbbl
xchg
push
rclb
pop
fs
mov
mov
sub
out
adc
push
test
sbb
sbb
repz
popf
lahf
orl
jle,pt
stos
aas
mov
mov
jno
shlb
sbb
jle
xor
stc
and
jg
pop
add
jecxz
or
jmp
mov
sub
std
popf
cmp
sbb
push
sbb
hlt
sarl
mov
not
dec
inc
mov
lahf
out
stos
push
sub
test
xchg
cmp
sbb
jnp
clc
jo
inc
or
mov
cwtl
mov
adc
and
das
fdivrl
pop
or
cmpsb
ljmp
jo
daa
jl
lea
pop
and
pop
jge
dec
mov
cs
dec
lds
lahf
lret
xchg
out
ja
jo
push
fstpl
inc
lods
mov
inc
xor
cmp
leave
cmp
mov
fmul
leave
adc
ljmp
sti
lds
mov
clc
inc
jp
scas
xchg
sub
std
adc
jecxz
js
data16
outsl
ret
dec
inc
cmp
push
add
jp
push
in
and
sbb
ret
filds
mov
into
sbb
call
xor
aaa
lods
hlt
mov
push
scas
sbb
push
or
incl
scas
adc
emms
jne
mov
pop
std
add
jg
in
lods
popa
mov
push
pop
xchg
or
cs
lcall
xchg
dec
mov
js
cmc
fstl
add
dec
in
or
scas
std
pushf
or
xlat
cmc
fs
fistl
stc
pop
pushf
adc
jmp
jnp
add
pop
es
xchg
mov
cmp
jbe
orb
jle
cmp
jp
cld
cmpsl
data16
call
int3
gs
sbb
adc
jnp
mov
in
rolb
and
adc
not
out
addb
jg
ret
sbb
cs
jns
push
push
mov
test
dec
popa
push
in
mulb
and
xchg
sub
in
jns
fidivl
leave
jne
adcb
lock
mov
int3
insb
pop
xchg
sbb
jge
inc
mov
cmp
test
lahf
pop
cwtd
sarb
outsl
sbb
movsb
and
sub
std
pop
xchg
jno
or
mov
inc
aad
lcall
lcall
push
mov
pop
push
fs
fdivrs
pop
pop
or
mov
adcb
inc
stos
xchg
pop
xchg
in
jne
cmpsl
cmpsb
inc
pushf
test
push
mov
out
pop
mov
ljmp
dec
int
jle
mov
sub
aas
mov
out
xchg
adc
adc
inc
sarb
imul
push
into
stos
cmpl
arpl
jmp
fwait
adc
jo
jmp
push
inc
mov
pop
and
fs
xor
daa
cwtl
add
mov
aas
divl
and
adc
mov
cmp
and
sub
add
xchg
xor
jg
movsl
push
mov
xor
gs
or
scas
fmuls
cmp
sar
enter
icebp
jmp
dec
jno
movnti
movsl
lds
imul
daa
xor
idiv
xor
xchg
cwtl
sub
repz
daa
mov
fdivl
mov
cmp
jmp
xchg
lahf
sarl
push
stc
pop
jns
jle
lea
add
or
aad
addr16
dec
fisubrs
lahf
faddl
pop
push
pop
rolb
test
jae
dec
push
add
scas
inc
pusha
xchg
mov
aas
lds
dec
add
mov
sub
adc
leave
push
jecxz
xchg
mov
push
pop
push
loopne
pop
mov
xchg
lcall
sti
xor
mov
pop
in
lret
test
mov
push
in
aad
push
lret
xchg
push
imul
push
fdivs
push
aas
iret
cwtl
push
out
push
scas
adc
xor
mov
xor
cmp
xchg
in
data16
mov
mov
pop
or
ret
pop
stos
fwait
add
dec
dec
pop
and
xor
xchg
sub
jnp
pop
cld
push
in
inc
jle
xor
js
pop
and
jmp
inc
inc
lret
movsb
pop
xor
cwtl
sti
or
and
mov
xor
dec
sub
adc
inc
mov
sbb
roll
push
test
je
jmp
out
popa
les
loop
loop
dec
or
addr16
add
or
insl
mov
stos
fmuls
sbb
mov
mov
pop
sbb
in
and
push
das
bound
inc
testl
shr
dec
push
jbe
out
pop
in
imul
mov
mov
loop
push
pop
lods
inc
es
sub
sbb
fstl
paddusw
pushf
out
in
inc
js
lret
xor
cmp
in
xor
idivb
jmp
int3
add
into
push
xchg
cltd
mov
and
sbb
cli
stos
and
inc
sub
add
out
or
add
imul
insl
mov
and
xor
cli
outsl
pusha
mov
pop
popf
stc
in
out
jbe
cmpsb
test
cmpsb
aam
bnd
mov
dec
jbe
add
shll
testl
mov
mov
sbbl
jae
imul
add
sub
jbe
or
lahf
push
dec
gs
jp,pn
jb
loop
test
test
shlb
sub
inc
cmp
stos
mov
sub
jnp
mov
sub
jg
pop
fxch
test
adc
rorl
cs
pop
cmpsl
lret
cmp
cmp
xor
mov
jmp
xchg
inc
inc
xchg
rcrl
lock
sub
sbb
adc
popf
dec
leave
and
faddl
xor
iret
push
outsb
lods
push
stc
dec
notl
jp
or
stos
daa
ljmp
gs
js
jl
lret
inc
or
mov
add
lds
cwtl
gs
mov
stos
subl
inc
rolb
push
dec
pop
lcall
xchg
sarb
xorb
inc
push
jmp
mov
mov
sti
and
push
call
push
mov
lods
mov
stos
dec
mov
jne
cli
pop
sub
xchg
ror
ret
stc
pop
mov
sub
lahf
jbe
xor
orb
mov
sbb
and
add
test
cmp
mov
jp
test
test
adc
sbb
mov
clc
repz
xor
mov
adc
bound
sahf
out
jecxz
fsts
pushl
ja
cmp
jmp
hlt
and
inc
adc
loop
jae
enter
push
cmp
call
mov
or
cs
outsb
inc
xorl
xor
add
leave
lahf
adc
sbb
pop
icebp
sbb
aad
mov
int3
pop
inc
lods
cltd
pop
out
in
inc
lock
sub
popa
mov
inc
jle
sahf
loope
loop
lret
fwait
scas
dec
ret
sbb
jne
cmp
mov
push
or
inc
inc
ficompl
cmp
xor
cmpsb
and
lcall
stos
mov
dec
xchg
outsb
inc
or
ljmp
jne
inc
pop
std
jmp
dec
or
push
insb
add
xchg
sub
dec
or
mov
fimuls
ljmp
or
cmp
jbe
pop
ffree
out
xchg
aam
fbstp
inc
mov
add
loop
enter
and
mov
ds
leave
pop
movsl
mov
push
cli
cmp
scas
mov
dec
sbb
es
jns
cmpl
mov
movsl
mov
shl
je
jbe
sbbb
mov
adc
inc
sti
ret
jae
mov
mov
jle
push
in
xchg
and
gs
orl
mov
push
sbb
mov
sub
icebp
imul
or
push
dec
push
lods
pop
das
adc
sti
les
xor
stos
sbb
in
das
movsb
xchg
or
jp
adc
fsubs
gs
add
jns
xchg
cld
mov
iret
rcrl
fiadds
inc
mov
pop
ds
or
and
push
loop
cmp
pop
inc
sbb
xor
inc
push
imul
xor
cmp
lahf
pop
and
jmp
or
test
outsl
pushf
xor
popf
jno
notl
dec
xor
xchg
inc
packsswb
pop
sbb
mov
inc
test
imul
outsl
mov
dec
cmp
sub
out
inc
cmc
fiadds
xor
xchg
jno
xchg
fldt
fsubrp
aas
addr16
gs
cmpsb
pop
mov
push
jmp
jnp
inc
cmpsl
pop
and
pop
icebp
lret
add
scas
pop
xchg
icebp
sub
mov
push
imull
loop
test
inc
scas
jg
lcall
pop
lods
and
pop
dec
xor
jle
stc
adc
mov
pushf
inc
aaa
fwait
stc
lret
cltd
mov
out
pusha
ljmp
pop
add
push
sbb
ljmp
cmp
push
and
jbe
sub
out
popf
outsl
int3
mov
mov
sbb
sub
fcoms
leave
stos
cmp
es
cltd
addr16
or
mov
and
clc
out
sbb
xchg
gs
fwait
test
in
add
sub
fnstcw
std
pop
xchg
dec
xchg
fimull
inc
mul
fidivrs
enter
neg
xor
je
inc
or
pop
cmp
idivl
testl
sbbl
dec
sbb
ficompl
mov
add
jle
xlat
mov
sahf
and
jo
je
lret
dec
mov
dec
outsb
mov
dec
pop
sbb
pop
dec
rorb
pop
pop
icebp
pop
inc
mov
jb
dec
lret
adc
cwtl
or
or
xor
mov
ja
cmp
lds
xchg
rorl
push
rclb
in
jl
xor
pop
xchg
pusha
ficomps
ficoms
push
rep
shrb
jmp
inc
popf
test
mov
stos
icebp
arpl
sub
push
jne
mov
je
pop
or
imul
adc
mov
dec
push
lods
pop
aas
xchg
sarl
ret
mov
rolb
xchg
mov
adc
sbb
mov
out
jmp
imul
push
lcall
loop
pop
sbb
test
push
movb
add
mov
mov
popf
jae
adc
fdecstp
shlb
mov
andl
sub
cltd
repnz
pop
pop
dec
loopne
jae
push
outsl
fnstsw
js
and
pop
or
sbb
shlb
mov
fidivl
jle
sub
xchg
mov
dec
jns
ljmp
scas
add
dec
push
subb
or
fwait
sahf
pop
aad
rcrb
mov
mov
xchg
cs
adc
inc
dec
insb
jp
loop
inc
lcall
hlt
cmpsb
jecxz
mov
mov
sub
loop
lods
cwtl
inc
aas
pop
fbld
les
dec
push
fdivrs
fisubs
clc
xchg
in
mov
das
ficoml
sub
pop
dec
sbb
lods
pushf
pop
pop
push
inc
jns
jns
scas
xchg
lea
or
cli
xchg
mov
cmp
insl
and
or
sbb
push
jns
mov
int
stos
and
adc
lea
dec
sti
dec
test
pop
lret
mov
addb
ret
sbb
enter
and
sub
sbb
mov
repz
fldt
cmp
dec
jno
mov
in
mov
pop
btr
mov
std
adc
call
repnz
or
in
mov
inc
jmp
dec
sbb
shrl
mov
aaa
sbb
push
mov
std
in
sub
xchg
fcmove
mov
xchg
daa
jb
adc
dec
idivl
mov
test
fs
push
inc
daa
loop
in
push
ret
aad
jb
pop
inc
mov
sub
lahf
pop
mov
and
ss
imul
sbb
lcall
jmp
fistl
adc
sub
mov
ljmp
shrl
imul
mov
xchg
push
jns
lret
xor
mov
das
cmp
jle
in
push
imul
fisttps
cmpsl
dec
les
dec
sbb
ret
scas
pop
jno
jns
add
sub
push
outsl
push
imul
cmpl
mov
js
js
xor
adc
je
dec
movsl
xor
add
pop
sbb
cmp
or
mov
loop
int3
icebp
or
xchg
in
sub
setno
add
iret
test
cwtl
adc
clc
or
inc
mov
test
jns
fsubr
pop
test
pop
popf
sahf
mov
mov
mov
in
fs
insl
pop
pop
pop
negb
stc
push
xchg
inc
xor
aad
xchg
adc
xor
adc
dec
add
jge
or
stos
mov
dec
sti
push
lea
adc
jbe
cmpsb
dec
scas
dec
xchg
in
pop
add
lods
mov
outsl
fsubrp
sub
mov
cmp
jb
aas
cmp
xor
jns
push
iret
cltd
shr
mov
clc
shrl
cwtl
sbb
xchg
cmp
inc
loopne
xchg
cs
adc
mov
add
xchg
inc
dec
xchg
inc
pop
cmp
jmp
mov
mov
cwtl
popf
inc
and
popa
sbb
mov
repz
pop
push
inc
popa
mov
jg
cmp
inc
bound
in
or
clc
test
and
inc
inc
or
rol
sbbb
pop
stos
adc
ljmp
in
nop
add
sub
xor
imul
gs
fistl
orb
inc
add
in
mov
jne
mov
and
loope
jecxz
adc
test
jp
add
and
xchg
cmp
pop
sub
mov
jns
call
mov
lods
ret
pushw
push
mov
std
mov
xor
dec
sub
in
or
idivl
add
pop
ret
testb
cmpsb
hlt
or
data16
sbb
mov
loop,pt
pop
cmp
jnp
adc
mov
jle
mov
sarb
or
push
dec
cmpsb
popl
dec
and
aad
jno
cmp
cli
sahf
fidivs
repnz
cmpb
adc
inc
dec
mov
mov
fwait
adc
sbb
cmp
xor
add
push
push
dec
ret
sub
ficompl
jo
movsl
lds
sub
lcall
addr16
or
jmp
jmp
std
and
inc
push
lods
mov
fldt
or
std
inc
cmp
inc
ret
and
push
xlat
dec
sub
bound
xor
xor
mov
in
dec
mov
dec
adcl
lods
lock
xchg
pop
stc
mov
xor
hlt
xchg
xchg
or
pop
clc
aaa
pop
pusha
pop
insl
scas
scas
loope
repnz
mov
cmp
cmp
mov
stc
mov
shrl
scas
dec
sbb
push
decl
icebp
mov
jecxz
cmp
mov
fwait
and
mov
test
xlat
xchg
sub
daa
mov
cli
push
ljmp
jns
scas
inc
fmul
cld
sub
inc
inc
mov
movsb
xchg
aas
stc
push
in
inc
aas
xor
out
inc
pop
pop
mov
shrl
xlat
inc
mov
sbb
mov
pushf
cmp
xor
arpl
and
jmp
cmc
sbb
lret
and
push
fucom
mov
mov
pop
out
adc
out
mov
pop
gs
jmp
rorb
mov
cmpsb
push
imul
adcb
mov
dec
icebp
dec
mov
push
outsb
push
andl
in
cmp
sbb
xchg
leave
stos
das
mov
cld
xchg
xchg
fildl
insb
mov
pushf
adc
das
enter
mov
or
sbb
sub
adc
lods
jecxz
out
sbbl
xor
test
xorb
jge
adc
out
cmc
imul
mov
mov
or
dec
imul
out
xlat
sti
mov
test
xchg
xchg
sqrtps
push
call
in
pop
push
mov
dec
into
psubq
add
pushf
pop
scas
cmp
hlt
cwtl
xchg
js
jbe
jne
or
mov
and
adc
xchg
jae
inc
xorb
daa
popf
test
sahf
cli
sbb
add
cmp
mov
dec
in
lret
add
aad
icebp
lock
sub
lea
sbb
stos
mov
jg
daa
sbb
scas
fbld
daa
out
rcr
xor
test
mov
xchg
ss
or
sub
adc
movsl
and
xchg
loope
cmpsb
in
pop
sbb
sbb
jne
lcall
sub
xchg
pop
jmp
sbb
movsl
push
jecxz
hlt
sub
push
jge
sub
xchg
sbb
stos
out
fsubrp
cmpsb
cmpsb
ffree
jnp
dec
test
repz
insb
out
enter
push
mov
popa
push
sbb
aaa
pop
bound
cmpsl
cmp
hlt
ja
cltd
cltd
fiaddl
scas
or
lods
mov
loopne
fs
loop
int
xchg
mov
mov
js
pop
dec
arpl
inc
mov
loope
pop
std
into
inc
xor
icebp
imul
dec
dec
inc
cmp
xor
test
sub
int3
dec
cmpb
adc
add
mov
ret
sub
jnp
cmp
cwtl
xor
xchg
push
or
xchg
aam
shll
xchg
sub
inc
pop
dec
negl
in
outsb
cmp
mov
adc
fistps
fcoms
mov
push
mov
in
mov
mov
sbb
xchg
jecxz
jae
cld
aad
xchg
adc
push
xchg
mov
addr16
in
dec
gs
aad
mov
dec
cmc
xlat
iret
pop
inc
xor
push
jle
push
dec
or
aad
add
test
ja
mov
adc
mov
jmp
ficoms
inc
movsl
jecxz
addr16
jae
xlat
insb
imul
push
inc
call
mov
jmp
mov
popl
cmp
data16
xchg
xor
cmp
cmpsb
adc
in
dec
ljmp
into
imull
pop
jmp
pop
push
xor
xor
pushf
adc
repnz
dec
lods
enter
mov
add
stos
mov
jbe
add
lds
lret
sub
mov
push
imul
fsubs
imull
outsl
push
ss
push
fmull
or
mov
pop
xchg
fwait
mov
cmp
mov
jmp
jno
cmp
shrl
dec
cwtl
sbb
cmp
inc
fildll
popa
movsl
sub
mov
xor
dec
in
xchg
dec
ss
mov
test
das
mov
cmp
jecxz
mov
orps
ret
les
push
pop
add
or
lea
int3
jmp
call
pop
std
sarb
mov
mov
inc
shrl
add
xchg
jecxz
mov
scas
les
add
lods
fimull
lds
inc
scas
jo
adc
add
dec
push
or
jns
scas
loope
dec
add
mov
or
mov
cmp
adc
outsl
cwtl
jecxz
dec
push
add
adc
or
andl
scas
push
aas
add
pop
add
int3
insl
cmp
mov
jl
lock
call
mov
leave
stc
cld
inc
loopne
adcl
and
pop
std
mov
pop
adc
test
lds
es
data16
paddd
fs
dec
xor
pop
pop
nop
outsl
jl
loopne
pop
je
xor
dec
mov
aaa
and
jmp
lcall
ja
add
aaa
pop
stos
test
cwtl
mov
xchg
mov
pop
aad
xor
into
fisttpll
shr
call
movsb
xchg
mov
insb
cmp
test
inc
out
adc
stc
mov
pop
arpl
push
mov
cmp
mov
xchg
enter
adc
in
lret
lret
cs
jl
mov
sbb
dec
loope
and
mov
cmpb
arpl
sub
xor
js
mov
decl
addb
fsubrp
insb
xor
dec
into
mov
mov
data16
sub
test
fsubs
lds
rorl
sarl
push
lret
mov
pop
jae
mov
xchg
icebp
cltd
add
aas
xchg
scas
pop
push
in
xor
ret
mov
sarb
xor
imul
and
xchg
xchg
mov
rcr
mov
sbb
xchg
hlt
inc
inc
jle
lea
cmp
idiv
push
popa
jp
lods
lret
hlt
lret
mov
lcall
das
add
dec
pop
push
mov
push
stc
lret
mov
jb
sbb
test
in
push
pop
mov
jp
mov
js
add
jmp
push
dec
inc
mov
cmp
jle
push
out
sbb
jb
cmp
xor
push
mov
cmp
inc
je
pushfw
xchg
lcall
dec
cwtl
mov
lods
ss
fiaddl
lcall
jge
enter
pop
sbb
jo
pop
push
or
aam
test
push
loopne
xor
jmp
icebp
scas
pop
scas
jl
sbb
cltd
and
xor
dec
inc
jo
fiaddl
mov
es
popa
rolb
in
imul
stos
xchg
mul
icebp
nop
mov
jle
xchg
mov
out
and
andb
repz
test
cmp
jmp
push
and
popa
adc
xor
or
dec
fcompl
mov
xchg
inc
xor
arpl
or
pop
cmp
stc
rol
sbb
les
cmp
push
lock
cli
mov
repz
inc
ret
sub
and
mov
loope
loope
ja
test
std
jg
and
sbb
mov
out
cld
fsubrl
sbb
or
mov
inc
pop
ss
ret
int
ss
shll
stc
cmpsb
adc
out
mov
pushf
mov
mov
test
std
push
adc
sub
stos
mov
cmp
roll
push
fistpl
cltd
je
jmp
inc
dec
cmp
out
cmpsb
mov
mov
cmp
inc
ficoms
fs
imul
inc
pusha
std
mov
mov
add
mov
xchg
sbb
stos
push
int3
sbb
jg
mov
pop
nopl
ja
je
dec
addr16
jmp
shl
rcl
into
lcall
or
and
xor
pop
add
xor
dec
popf
aad
dec
sbb
xchg
dec
pop
pop
aaa
loope
jecxz
xor
dec
push
push
gs
jb
lea
icebp
cmp
mov
xor
into
nop
insb
xchg
lds
outsb
push
mov
loopne
clc
push
in
std
insl
sbb
mov
fstpt
inc
lds
lea
adc
push
and
push
cmp
dec
fisubrl
dec
dec
mov
xor
sub
loop
inc
ljmp
xor
sahf
sti
inc
loopne
and
sbb
lcall
push
jbe
xchg
lods
sbb
xchg
xor
sub
test
push
mov
jns
idiv
pop
mov
je
mov
xchg
xchg
call
adcb
adc
dec
xchg
aad
jo
inc
jge
out
xlat
rcrb
cs
data16
insl
pop
inc
ljmp
dec
mov
decl
filds
or
sar
movsb
scas
jne
push
xchg
shll
lds
or
push
test
mov
fldcw
push
pop
jno
popf
mov
pop
shrb
push
rorl
call
setbe
mov
rorb
insl
fwait
icebp
lahf
ficomps
jp
outsb
mov
mov
add
loopne
mov
xchg
mov
mov
das
test
jno
repz
je
cmp
shll
fucomi
out
pop
mov
dec
xor
sqrtps
loope
xor
sbb
jle
sub
imulb
insl
inc
js
xchg
dec
scas
int
insb
jl
mov
sub
cmp
stos
fbld
xchg
int
shll
lods
jae
cmp
push
push
jge
mov
push
inc
push
insb
push
lock
inc
gs
pop
or
in
out
sub
mov
pop
mov
sbb
mov
mov
jecxz
or
cmp
mov
mov
xor
cs
test
add
mov
jbe
pop
in
lock
int
mov
jg
mov
cltd
inc
push
rorb
xchg
out
push
dec
mov
add
in
cmc
jo
cmp
out
pusha
xchg
add
mov
mov
dec
inc
jnp
sbb
fcom
jmp
and
pusha
andl
mov
pop
pop
sbbl
add
shrb
lret
int
jp
add
pop
mull
jg
cmp
insl
popa
fisttps
dec
and
lret
clc
cmp
jle
call
jge
lcall
xor
inc
mov
aas
insb
arpl
xor
cmp
mov
jmp
hlt
push
daa
dec
jmp
cmp
mov
out
fistps
popa
sub
mov
sub
mov
adc
hlt
push
add
aas
pop
pop
add
and
sub
or
jg
popa
loope
mov
repz
mov
mov
xchg
mov
or
mov
clc
and
mov
ds
stc
fimull
test
xchg
cmpsb
pusha
cs
fs
add
in
mov
inc
stos
inc
les
pushf
jno
cmp
sti
test
data16
xchg
dec
mov
mov
mov
jns
push
pop
adc
mov
sub
add
adcb
push
jmp
mov
js
ljmp
add
movsb
arpl
testb
sbb
arpl
lock
jecxz
scas
jecxz
sub
inc
pusha
sub
jg
cs
call
int3
mov
sbb
pop
movsl
jnp
nop
jae
stc
xlat
jnp
outsb
rorl
mov
cmp
sarb
clc
xlat
and
mov
imulb
and
pop
call
pop
jg
mov
mov
cmp
insl
hlt
mov
sub
loope
imul
push
xor
out
and
iret
lea
in
jb
lret
fdivrl
pop
push
rcl
stos
cmp
pop
scas
jae
mov
xor
fidivrs
cmp
inc
push
mov
cli
jnp
jnp
or
add
dec
cltd
add
mov
mov
xchg
lret
cmpsb
call
lds
jno
stc
mov
mov
inc
or
mov
scas
cld
fldl
dec
out
cmp
mov
mov
lods
push
xchg
and
fst
push
adc
test
mov
cmpsb
jbe
cmp
jmp
notb
pop
decl
sub
insl
lea
mov
mov
mov
cmc
cs
cmpsb
lretw
out
into
push
mov
push
cmp
outsw
xlat
stos
orb
cmpsb
cmpsl
cltd
test
je
mov
mov
into
mov
sti
js
cltd
stc
lahf
inc
divl
fadd
stc
lods
mov
pop
mov
jecxz
push
sbb
aam
orb
cmpsb
movsl
rorb
into
push
inc
ret
stc
fiadds
pushf
aad
fcmovnbe
sbb
jo
gs
arpl
and
cmp
xorb
pop
dec
js
gs
jge
mov
xchg
imul
int3
cs
and
in
push
dec
daa
jb
sub
divb
cmp
push
jmp
dec
test
ljmp
sub
jbe
orl
mov
push
dec
lret
cmp
ret
add
pop
mov
mov
and
pushf
sbb
mov
jmp
dec
cmp
mov
filds
xchg
icebp
xchg
outsb
andb
nop
fs
sub
jle
push
sub
mov
xor
dec
and
add
or
rorl
jo
es
adc
je
insb
ret
pop
ret
test
jae
insl
test
push
add
xor
ret
jg
daa
cwtl
in
push
or
sbb
scas
or
xchg
or
jecxz
mov
iret
jl
mov
daa
shlb
inc
xchg
rorl
movl
fadd
cwtl
mov
fistpll
push
es
ret
scas
sbb
and
dec
aaa
dec
push
imul
adc
pop
repz
in
ss
lods
rcl
dec
dec
push
rcll
in
add
lds
or
fsubrl
inc
fcoms
pop
faddp
jbe
scas
sti
sbb
xchg
jmp
ljmp
inc
cmp
stos
pop
aad
std
daa
incl
mov
mov
andb
jnp
in
bound
dec
dec
mov
adc
xor
xlat
sahf
jno
mov
loop
pop
xchg
fists
andb
es
jae
jg
mov
mov
adc
inc
outsl
cmc
in
sahf
pushf
out
mov
movsb
and
outsb
pop
mov
pop
add
adc
pop
sub
inc
shll
mov
clc
inc
daa
loope
clc
pop
out
push
mov
fidivl
lcall
dec
sbb
or
fcomps
cmp
into
push
push
in
adc
hlt
lods
arpl
pop
push
dec
fcomps
mov
inc
int
jle
insb
xor
push
lock
pushl
pop
push
stc
lock
es
es
mov
stos
dec
insl
mov
add
pop
lret
fwait
std
mov
movsl
aam
imul
mov
sbbb
jge
pop
lds
int3
or
cmpsb
dec
out
ljmp
xchg
xlat
push
sbb
cwtl
int3
add
lahf
aad
or
sub
repz
popa
imul
cld
push
xchg
insl
sub
insb
test
mov
into
jmp
push
mov
jp
fmuls
clc
dec
rorl
adc
sub
pop
stc
in
jmp
sub
inc
nop
jne
xchg
xor
nop
jp
mov
xor
pop
and
in
cld
adc
mov
aaa
pop
call
sub
push
cwtl
inc
add
xorl
sub
lea
pop
movsl
mov
aad
das
push
lea
dec
cmp
mov
cmpsb
rclb
je
add
rolb
into
fsubrp
hlt
lret
jbe
lods
cmp
insl
add
sbb
sub
push
out
add
xchg
dec
cmp
adc
insl
mov
mov
jle
in
xor
mov
sub
hlt
leave
subb
clc
in
ret
jne
jnp
cli
xchg
cmp
inc
mov
insb
test
or
pop
jge
xor
aam
mov
in
push
add
mov
into
gs
sub
mov
pop
cltd
fidivrs
jg
out
sub
mov
and
repz
movl
xchg
lods
xchg
test
test
and
adc
les
mov
cmp
sbb
dec
fcom
xor
pop
jo
push
lret
jb
aad
or
les
pop
adc
xchg
call
mov
in
or
into
jmp
fs
cmp
push
cmp
fadds
aad
les
dec
mov
pop
sub
jns
or
repnz
push
call
stc
or
adc
mov
rorb
sbb
adc
cwtl
call
jno
push
aaa
mov
mov
fisubrl
movsl
jg
andb
sbb
rorl
mov
push
sti
das
dec
mov
int3
xor
dec
pop
mov
inc
orb
xchg
inc
pop
aad
ficomps
push
pop
sbb
add
mov
push
adc
xchg
mov
lahf
mov
jnp
pop
fidivrl
mov
cmp
xor
push
ljmp
or
mov
jg
xchg
mov
scas
jge
cmp
fs
push
call
cmp
xchg
jle
or
test
sbb
dec
aam
test
xlat
sbb
inc
xchg
es
into
mov
dec
and
bound
pop
jle
add
cmpsl
out
xchg
arpl
in
pop
pop
lock
pop
pop
or
call
clc
out
loopne
std
xchg
pop
es
std
jg
call
out
ja
popa
es
or
inc
int3
lret
add
or
stos
xchg
dec
dec
loop
pop
outsl
mov
lahf
js
ja
xorb
subl
ljmp
testb
je
pop
inc
push
mov
aaa
push
je
in
and
in
sti
xor
gs
stc
mov
jle
shll
je
xchg
cwtl
stos
xchg
or
mov
cmp
pusha
jno
das
aad
repnz
dec
mov
add
test
add
and
loopne
and
jecxz
mov
repnz
loopne
cmpsb
pop
pop
aas
test
adc
inc
sbb
pop
pop
sub
out
cwtl
fwait
sbb
jge
push
add
ja
dec
loop
jecxz
adc
push
add
sbb
test
pusha
push
cmp
daa
std
fcmovb
shll
push
lods
pop
xor
xchg
sahf
and
xor
dec
push
cmp
loope
xorb
ds
lods
jno
test
lock
mov
push
push
lcall
jbe
mov
aas
loopne
loopne
jmp
xchg
incb
loop
xor
sub
aas
shlb
dec
mov
inc
xchg
pop
stos
fs
xchg
or
adc
pusha
mov
flds
mov
push
ss
dec
mov
nop
test
pop
xchg
hlt
sbb
stc
jnp
and
arpl
test
pop
push
jl
cwtl
pop
mov
js
stos
fst
inc
lods
sahf
pop
push
mov
xor
jecxz
popa
pop
cmpsb
pop
mov
cli
movsb
mov
adc
cld
xlat
push
mov
js
jnp
imul
adc
cmpsb
filds
in
add
adc
and
or
sbb
test
pop
imul
faddl
xor
repz
or
xchg
and
xchg
pop
sub
sbb
out
je
xor
sbb
or
push
add
and
sbb
add
pushf
sbb
imul
cmp
sub
mov
xchg
xchg
rclb
add
pushf
out
adc
nop
out
sbb
insl
mov
push
sar
sub
aaa
push
rcrb
add
adc
pop
cmp
mov
test
test
mov
cmpsl
jmp
push
rorl
sahf
push
jno
jbe
daa
pop
mov
arpl
add
nop
cmp
outsl
insl
les
je
push
call
mov
mov
cmp
pushf
rcrl
ret
stos
adc
push
jne
pop
jmp
fnstenv
sub
push
xchg
inc
filds
mov
test
mov
jg
int3
and
xor
mov
jnp
add
imull
push
in
mov
into
test
mov
sbb
xor
pop
jae
adc
pop
cld
mov
loopne
add
inc
insl
fcmovbe
aad
mov
dec
call
lods
add
jecxz
ljmp
sarb
sbb
shlb
test
jg
sub
cmp
and
rcr
dec
andb
sub
push
xorb
cmc
cmc
pop
cld
stos
loopne
dec
push
mov
mov
mov
clc
jle
mull
cltd
repnz
out
xor
and
mov
jae
inc
mov
cwtl
pop
pushf
shl
cmp
jbe
inc
scas
bound
mull
js
es
lcall
jle
mov
and
add
inc
jbe
mov
test
jmp
loopne
pop
pop
orl
jg
test
rolb
nop
lcall
shll
mov
push
jl
adc
pop
frstor
inc
dec
cld
mov
and
lds
cmpsb
movsl
hlt
mov
cmpsl
and
int3
push
js
or
mov
adc
dec
or
cmpb
les
out
sbb
sub
xor
in
int
pop
mov
inc
add
dec
inc
bswap
sahf
fwait
enter
movsl
clc
mov
je
push
fsubs
mov
jbe
xchg
inc
ljmp
lods
or
cs
lret
push
lcall
aad
pusha
mov
test
lods
stos
call
push
add
jle
jle
dec
popf
loop
xchg
cs
imul
push
cmpsb
lahf
icebp
out
jecxz
push
pusha
cwtl
cmp
or
icebp
mov
add
cmp
je
out
leave
aas
stos
lahf
mov
inc
jge
je
jbe
out
rorb
insl
fidivl
jno
dec
add
loopne
sbb
xchg
iret
mov
xchg
mov
mov
dec
dec
in
mov
hlt
sub
inc
cmc
jno
or
mov
and
xchg
push
cs
ror
inc
movl
pushf
or
push
pop
sub
out
shll
cmc
stos
les
xchg
push
scas
jnp
outsl
lret
jmp
jge
outsl
jo
jle
or
adc
adcl
pushf
or
dec
mov
sbb
xor
enter
test
xchg
cld
arpl
mov
inc
into
dec
and
decl
test
mov
push
call
xor
je
jge
dec
test
fs
and
rcrl
or
push
adc
icebp
sbb
inc
js
fidivrs
aas
inc
subl
roll
jmp
and
mov
sub
fildl
xchg
xchg
test
and
adc
dec
mov
aam
and
cmp
add
dec
mov
mov
lret
sbb
xchg
adc
mov
and
aam
jo
int3
xor
sub
inc
fs
or
ljmp
dec
int
int3
lret
mov
mov
mov
insb
xor
stos
addb
pusha
dec
lods
imul
mov
adc
push
stos
and
je
stos
mov
add
xchg
add
in
push
sbb
pop
pop
sub
xchg
xchg
jo
je
mov
sar
inc
cmc
cmp
add
aam
mov
out
or
fsub
ret
fwait
int
xor
repz
stos
scas
cmp
mov
enter
jmp
adc
mov
rorl
std
sub
mov
or
scas
imul
rorl
flds
and
xchg
and
mov
out
cmp
les
jmp
mov
shlb
mov
sub
bound
dec
add
jbe
or
inc
inc
das
icebp
push
orl
jns
sbb
in
cs
neg
and
js
roll
xchg
gs
stc
dec
pushl
pop
cmc
fists
negl
subb
sbb
test
flds
not
or
xchg
popl
in
xor
xor
ror
nop
ror
clc
int
xchg
push
fwait
hlt
jmp
push
cmpsl
dec
mov
jnp
sub
adc
or
lret
mov
mov
add
out
add
aad
jle
mov
jbe
popa
in
jne
ret
and
jae
pop
and
cmp
rcll
fsts
or
mov
lahf
jb
aaa
sbb
mov
cs
or
sbbb
dec
rcr
xor
addr16
push
arpl
and
cmc
mov
dec
ret
mov
ficoml
inc
arpl
pop
psubsb
jnp
mov
lret
jmp
into
call
and
inc
in
gs
jl
push
das
push
mov
cmp
xor
int3
dec
jge
lods
jne
jnp,pt
cltd
fidivrl
in
pop
sbb
dec
mov
mov
rorb
jb
mov
out
push
test
sti
dec
and
int
lahf
ret
push
mov
ljmp
scas
sbb
push
dec
out
mov
clc
push
ret
xorb
cmpsb
ja
fnsave
ds
cs
ss
cwtl
cmp
mov
sbb
scas
ret
bound
lods
mov
btc
leave
and
in
cmc
sbb
dec
fistps
add
pop
out
cld
daa
inc
shll
inc
and
xchg
xor
sub
int3
mov
xchg
insb
pop
cwtl
das
inc
sbbl
cli
jne
call
cmpsb
jno
jp
cmp
dec
lret
cs
sub
test
sbb
jbe
jg
mov
push
lahf
push
mov
xor
fdivl
and
sarl
sub
xchg
enter
jg
pop
pop
mov
sub
les
std
std
add
subb
xor
out
in
fmull
xchg
push
insb
pop
ljmp
xor
and
inc
xlat
outsl
sub
inc
test
fs
repz
lret
pop
gs
loope
clc
ror
push
adc
andb
jb
sti
jbe
data16
subb
xor
or
repz
mov
mov
mov
mov
mov
pop
push
cmc
ljmp
in
and
mov
sub
cli
dec
out
movsb
inc
dec
xor
out
or
add
into
cltd
out
imul
and
insl
ds
inc
sub
and
out
test
test
mov
rorl
sbb
or
xor
mov
add
inc
scas
or
mov
adc
pop
cmp
dec
add
dec
movsb
jmp
cltd
cmp
ret
lahf
cmp
je
jne
lahf
sbb
lea
cmp
jb
ret
test
jbe
clc
mov
xorl
xchg
icebp
lds
idiv
out
test
jecxz
jg
and
pop
adc
jns
mov
loope
xchg
dec
fldl
scas
addr16
rorl
popa
sbb
inc
inc
movsl
jnp
add
mul
inc
ficomps
lcall
fwait
mov
aas
and
xor
add
sahf
lahf
cmp
mov
mov
pop
int3
ret
add
dec
mov
add
out
popa
orb
pop
jbe
mov
cs
adc
cmpl
mov
insb
shll
push
xrstors
mov
adcl
cmp
sarl
rolb
adc
dec
loop
inc
shlb
scas
jp
pop
sub
dec
mov
cltd
cli
or
adc
icebp
aad
cmp
cld
mov
iret
mov
rorb
push
xor
push
cmp
push
testb
popa
xor
fisubl
mov
rolb
stos
fcomps
xor
dec
test
imul
leave
mov
jge
adc
int3
ret
push
inc
cmc
or
jae
mov
enter
xor
xchg
jl
mov
xor
xchg
and
pop
or
xsha256
cmpsb
xchg
popf
dec
push
pop
cmp
inc
mov
movsb
jo
repnz
popf
inc
push
mov
popa
jb
mov
jg
repz
leave
inc
sbb
aam
test
sub
mov
xlat
mov
dec
add
push
and
add
and
pop
inc
sbb
push
cmp
sbb
pop
adc
gs
dec
shl
inc
mov
sbb
jb
stos
and
andb
sub
xchg
xchg
stc
adc
push
das
decl
inc
or
add
sbb
aas
fdivrl
and
cmp
cmp
jnp,pt
int
fcmovu
les
lds
mov
pop
insb
inc
adc
inc
pop
test
addb
cltd
add
lahf
and
sub
or
mov
inc
jecxz
push
aam
hlt
pop
xor
jg
fmuls
into
inc
out
cmp
xor
aaa
lea
xchg
xchg
fidivrl
or
mov
fildl
lock
fidivl
push
push
push
jle
popl
cld
shl
xchg
in
arpl
dec
rcll
mov
mov
cmpsl
sahf
xor
cld
loopne
pop
test
sarl
push
inc
scas
daa
stos
loope
cmp
and
iret
jp
sti
ja
mov
icebp
jo
mov
xor
jmp
incb
cmp
ret
mov
sbb
insw
loope
and
lds
and
outsl
aas
lahf
add
add
dec
cli
loop,pn
insb
aad
xchg
jnp
call
iret
ror
lods
fdivl
stos
in
sbbb
out
push
sti
push
mov
test
xchg
xchg
mov
ret
xchg
rol
jecxz
or
or
and
fldenv
bound
xchg
mov
mov
aam
aad
in
pop
cli
push
push
loopne
out
mov
jo
add
sbb
and
lret
stos
or
int3
pusha
xchg
ljmp
repnz
sbb
mov
cld
mov
pop
lods
ds
in
icebp
jecxz
divl
jg
cvtps2pi
xchg
and
imul
cmp
and
mov
lea
loope
jl
call
or
add
test
decb
mov
lea
pop
add
cli
dec
push
jbe
dec
push
cmp
imul
fmull
add
jl
sahf
xchg
adc
push
out
jae
ror
pop
xchg
or
mov
jl
xor
push
push
or
cltd
imul
inc
cmc
push
stos
and
mov
and
inc
scas
out
jge
push
xor
jge
stos
jg
dec
popf
data16
dec
mov
xchg
loopne
inc
hlt
out
mov
inc
es
cmp
and
push
aaa
out
mov
jg
inc
sub
xor
dec
push
test
aam
sub
or
fldcw
xor
sub
xor
fmull
add
pushl
cmp
pop
mov
in
insl
ss
popf
insl
xchg
inc
ss
push
outsb
jne
or
test
mov
shrb
arpl
jge
sub
add
cld
fimull
data16
negl
inc
xor
pop
test
sahf
or
mov
jae
jae
mov
daa
in
sbb
es
test
lock
mov
xor
pusha
jnp
in
mov
push
jnp
cmp
stc
sbb
mov
lcall
inc
add
jne
jmp
in
push
cld
mov
mov
jne
popf
or
cltd
in
lds
xchg
mov
and
js
mov
aas
mov
ficomps
mov
inc
dec
in
jmp
jp
lock
cmp
aaa
js
sbb
dec
into
adc
pop
or
jns
enter
in
pop
cltd
fcmovnbe
xor
pop
cmp
pop
aas
jmp
daa
add
decl
outsl
lock
nop
pop
dec
clc
popa
add
ret
leave
addl
add
fs
pop
and
sbb
in
fbstp
pushf
inc
mov
ds
xchg
jl
out
cs
ror
or
pop
scas
inc
cmpsl
int3
lret
lods
and
xor
mov
add
pop
xor
and
dec
xorb
sbb
pop
jle
fcmovnu
mov
or
pop
ror
jl
cltd
call
ret
scas
sbb
hlt
test
aam
orb
xchg
mov
mov
mov
xchg
hlt
dec
ja
lds
jbe
test
pop
cmp
cmc
adc
push
jno
jg
imul
lock
lahf
mov
pushf
sub
sbb
mov
inc
lods
pop
xor
pusha
lods
not
inc
pushf
pusha
inc
pop
or
out
jae
mov
mov
jp
and
iret
in
push
fimuls
dec
push
xor
lret
mov
xor
fs
popf
in
adc
sub
out
mov
xlat
into
ss
jle
xlat
cmc
and
cmc
and
mov
hlt
js
sti
push
sbb
adc
jg
push
jp
movsl
iret
popa
aas
gs
xlat
in
add
lret
sbbl
adc
sub
push
mov
adc
roll
daa
xchg
mov
in
fs
jae
jno
je
adc
add
testb
stos
sub
jge
jl
rcl
add
jns
lret
pop
das
je
sbb
mov
rorb
ss
cmpsl
jmp
ret
xorl
sbb
xchg
sbb
xchg
mov
adcb
jns
inc
cwtl
mov
loop
jne
lahf
lods
inc
push
sub
inc
push
cs
jo
cmc
cmc
mov
aam
fiaddl
jbe
sbb
aas
inc
push
inc
scas
inc
add
popf
js
inc
cmp
cmp
std
fcoms
insl
popa
fwait
dec
out
stc
lock
mov
mov
push
xor
repnz
ficoml
icebp
mov
je
xchg
xor
mov
cmc
repz
pop
inc
imul
xor
sbb
imul
jo
cmpsb
in
xchg
repz
test
jne
pop
rclb
sti
inc
ja
loop
pop
mov
jb
notl
push
ret
cmp
sub
inc
jmp
cmp
loop
mov
push
mov
in
stos
mov
jo
xchg
and
std
cmpsl
push
data16
lahf
icebp
mov
dec
sbb
iret
push
test
xchg
jno
ret
lock
shl
sbb
mov
dec
aad
jns
jae
je
pushf
dec
aaa
mov
mov
lret
mov
outsb
push
popf
dec
imul
push
sti
cmp
loop
scas
loop
test
ret
loope
sbb
pop
out
pusha
jb
xchg
sbb
into
scas
mov
inc
int
add
mov
or
out
out
clc
clc
push
stos
cmp
cmp
adc
in
es
cmp
push
push
lods
sahf
in
xchg
fsubl
cmp
fildl
mov
mov
pop
xchg
gs
sbb
dec
mov
cmp
int3
xchg
push
xor
sbb
ljmp
sub
jecxz
stos
cmp
xchg
mov
or
aad
les
aad
test
jo
mov
mov
mov
mov
or
cmp
mov
adc
mov
jae
inc
push
xchg
pusha
imul
fs
xor
mov
sbb
mov
sarb
js
fxch
ret
imulb
fwait
pop
out
push
xchg
addr16
ret
mov
adc
notl
stos
inc
out
xchg
jns
outsl
adcl
xor
jge
mov
push
push
jns
mov
ret
mov
jmp
sub
add
std
loop
pop
pop
adc
inc
lea
push
add
stc
andb
ret
in
add
xchg
sub
sbb
adc
ss
jae
cmp
shll
add
xor
les
and
xchg
add
daa
dec
insl
sbb
xor
push
push
push
mov
cmp
xor
ljmp
mulb
lcall
xchg
pusha
mov
addr16
or
aad
and
lea
sub
nop
xchg
push
xchg
fdivr
icebp
jbe
push
js
das
je
mov
sub
fcompp
fs
stos
rorl
roll
or
ds
adcb
fs
icebp
in
aam
test
push
and
scas
push
cmp
pop
sbb
pop
and
push
int
push
mov
addr16
out
cmc
and
daa
shr
arpl
or
insb
push
and
sub
repz
call
inc
inc
aam
rorb
and
push
jae
mov
fisttps
push
aas
inc
jmp
lahf
adc
cld
aam
dec
sub
pop
push
cltd
xchg
test
ljmp
adcb
add
add
leave
pop
inc
or
adc
cmpsl
adc
out
adc
int3
jo
sub
int3
insl
push
rcrl
dec
popa
mov
cmpsb
rol
arpl
shlb
scas
stos
iret
dec
cltd
lock
push
cs
scas
cmp
xchg
cmc
cltd
add
arpl
sub
insl
icebp
paddq
sbb
enter
lea
cmp
cmpsl
stos
xchg
xlat
jbe
clc
lcall
or
cmp
imulb
outsl
aas
push
add
filds
mov
jmp
scas
sbb
xor
add
jnp
sbb
int3
jmp
mov
sub
rol
xchg
adc
jae
xor
stc
mov
fisttpll
loope
std
sub
jecxz
push
into
sub
mov
fdivrp
jl
mov
scas
push
clc
push
add
pop
loopne
shr
mov
inc
or
outsb
pop
data16
int
fdivrp
stc
addl
sbb
lret
imul
xor
insl
das
cmp
cwtl
out
xchg
outsl
xchg
mov
pop
loope
mov
and
rcrb
fwait
lcall
jne
pop
jo
jae
mov
rorb
subl
lret
sti
insl
jmp
test
ret
pop
jl
test
xor
ds
jo
movsb
and
pop
cmp
insl
inc
sbb
imul
mov
add
inc
xor
xor
cmpsl
fcoms
dec
jl
sub
ret
and
pop
push
or
loop
rcr
sub
imul
push
test
je
fimuls
xor
and
push
mov
mov
lahf
rcl
inc
adc
ret
loop
cld
aas
jae
stc
in
xor
and
aad
jge
jb
push
fwait
call
or
pop
adc
sub
push
in
loope
and
sbb
mov
enter
push
mov
sub
inc
iret
and
cmp
insb
int
adc
outsb
fldcw
mov
pop
testl
pusha
sbb
out
xchg
xchg
and
shl
nop
scas
sub
cmp
xor
insb
mov
pop
testb
sarb
adc
orb
pop
sub
out
pop
push
lock
and
cwtl
dec
orl
dec
and
nop
decb
lods
sti
adc
lcall
lods
jmp
out
add
xchg
mov
jmp
inc
fwait
push
add
dec
stc
sbb
mov
repnz
dec
xchg
adc
mov
push
outsl
cmp
movsl
mov
or
lock
hlt
cwtl
push
mov
sub
sbb
addr16
push
or
jae
push
std
std
ljmp
cmpb
mov
mov
je
mov
ficompl
cmp
and
dec
out
arpl
push
jge
lods
jecxz
das
incl
int3
xor
pusha
data16
jp
out
cmpsb
or
leave
dec
rcrb
pop
out
mov
imul
push
adc
ret
jg
add
jns
test
push
sbb
xchg
jo
sub
dec
pop
bound
loope
rorb
daa
and
loopne
lock
ret
popa
in
jle
push
xor
jne
xor
xor
add
jmp
mov
sarb
test
and
pop
lds
insb
jne
inc
mov
and
insb
push
inc
hlt
das
mov
lret
sub
inc
cmp
ja
add
fistpl
addl
rcl
lods
addr16
mov
mov
inc
inc
lea
hlt
pop
sahf
bndstx
repz
push
movb
and
mov
bsf
mov
push
loop
aam
sub
loope
cmpsl
lods
cmpsb
add
out
inc
mov
ljmp
shrb
roll
add
nop
pop
imul
adc
test
lods
fucom
mov
cltd
add
mov
xchg
ret
stc
decb
push
gs
pop
mov
xor
cmp
xchg
sub
and
lcall
pop
mov
fisubrs
dec
loopne
and
cmp
pop
mov
and
shl
jnp
dec
test
adc
push
hlt
sub
lahf
mov
sub
fsubs
cwtl
movmskps
adcb
xchg
or
mov
gs
mov
push
mov
xor
std
cmpsl
mov
mov
mov
andb
cmpsb
jl
cwtl
je
rorl
movaps
push
cmp
gs
imul
sub
add
sahf
jp
push
cmp
mov
cltd
mov
mov
rolb
arpl
ret
mov
mov
push
and
subb
pusha
pushl
in
iret
push
orb
push
sub
inc
pop
push
add
push
ljmp
cli
repnz
push
leave
scas
inc
sbbb
mov
and
pop
jbe
inc
cld
pop
cltd
testb
cli
lock
lock
lret
gs
leave
std
inc
mov
pop
fcomps
jge
sti
push
jp
inc
jns
in
xor
xchg
mov
mov
mov
imul
fcoms
into
aad
movsb
pop
shl
lcall
rclb
int3
pop
jmp
incl
fwait
mov
and
scas
popf
fistps
add
repz
mov
insb
xchg
pop
inc
clc
or
push
jnp
pop
loop
pop
sbb
popa
repz
or
stc
xor
daa
adc
inc
mov
push
jg
repz
ror
lods
xlat
pop
mov
test
aaa
mov
popl
fwait
xor
jmp
test
xchg
sub
in
mov
ret
inc
and
fcoml
push
xor
jp
inc
pop
outsb
or
add
stc
jl
inc
or
mov
lahf
les
push
inc
dec
sbb
in
pushf
adc
test
and
cld
adc
fcmovnbe
pop
sub
lods
test
xor
stc
fwait
mov
insl
fabs
jbe
mov
mov
push
mov
add
xor
mov
aas
fidivs
xlat
push
iret
fidivrl
iret
js
jg
rcl
jle
adc
lahf
addr16
mov
stos
lcall
outsl
lods
mov
popf
mov
push
pusha
cs
test
cli
stc
movhps
mov
ljmp
in
dec
cli
cltd
cmp
lret
imul
adc
outsl
sub
and
es
pop
mov
lock
out
dec
sub
sbb
mov
lods
jae
jb
adc
jmp
mulb
gs
stos
jmp
xchg
and
mov
xchg
mov
outsl
imul
push
jmp
jp
out
addr16
outsb
xchg
pop
repnz
push
rcr
mov
mov
test
dec
xor
call
js
cwtl
outsl
popa
mov
fbstp
inc
xchg
or
sbb
in
hlt
popf
lsl
in
das
adc
fidivrs
idivl
add
cmp
in
test
hlt
jg
nop
mov
andb
pushf
out
adc
dec
test
mov
push
mov
rorl
dec
pandn
xor
dec
cmpsb
or
fidivl
or
mov
scas
fwait
sahf
scas
cmp
out
cmc
and
inc
add
mov
jae
hlt
dec
loope
mov
dec
rclb
icebp
inc
pop
add
adc
mov
pop
mov
push
push
pop
mov
mov
or
pusha
jmp
shll
xchg
xchg
loope
push
sbb
add
daa
cmp
push
stos
jbe
jge
jmp
add
xchg
in
xor
and
adc
data16
enter
dec
or
pop
nop
pop
mov
pop
ss
cmc
leave
not
push
fwait
mov
cmpsb
mov
ss
mov
int
out
xor
addr16
std
and
or
stc
sbbb
xchg
cmp
add
incl
sbb
das
popf
into
pop
stos
dec
mov
and
test
setbe
cmp
outsb
idivl
int3
enter
add
mov
stc
aam
mov
lock
loop
insb
jae
or
fldl2t
insl
or
dec
jmp
add
lret
xorl
and
adc
pusha
fcompl
mov
sub
shlb
out
movsl
lods
test
mov
dec
fwait
jecxz
loope
sub
scas
inc
jne
das
xchg
xor
imul
inc
dec
inc
inc
rcrb
mov
cmp
mov
cmp
jg
mov
pop
nop
loop
push
xchg
outsl
cmp
mov
xchg
and
aas
js
or
rcrl
mov
cmc
mov
pop
or
mov
jnp
pusha
add
adc
flds
sbb
fs
fwait
push
and
fsub
push
lret
inc
cs
mov
lock
push
xor
loop
push
pop
inc
lret
lods
outsb
and
jl
lret
movsb
fsubs
pop
dec
jmp
adc
mov
icebp
mov
pop
lods
inc
and
jl
insb
mov
fmuls
int3
dec
push
lods
sub
in
aas
inc
inc
pop
movsl
call
jbe
and
pusha
lods
pusha
popa
lahf
sub
adc
or
push
jge
mov
sub
pop
stc
inc
and
xchg
add
jle
outsb
sbb
aas
xor
cmp
outsl
add
cmp
cmp
sahf
mov
cltd
jb
in
mov
mov
mov
jecxz
push
data16
cmp
aad
or
xlat
pop
push
jmp
arpl
push
cmp
adc
fldenv
cmp
mov
repz
movsb
mov
pop
add
pop
mov
in
sub
es
lods
repz
popf
cmpsl
xchg
mov
add
jo
lods
sbb
jae
mov
sbb
shr
dec
mov
lods
adc
xchg
push
into
lock
arpl
mov
rcr
aad
fadds
and
or
jecxz
adc
pop
insl
mov
sub
mov
add
mov
push
mov
lock
aam
push
pop
stos
aas
fsubp
imulb
dec
mov
mov
mov
adc
ret
cmpsl
inc
xor
ljmp
push
popf
out
sbb
xor
ss
cmp
pop
stos
fisubrs
cmc
xor
js
or
decb
ljmp
jmp
addl
and
in
movsb
js
mov
shll
test
jecxz
jg
or
imul
icebp
scas
adc
and
clc
jbe
lods
xlat
push
mov
mov
sbb
addr16
push
enter
data16
or
jns
xchg
lret
pushf
les
or
movsb
pop
pop
mov
pop
push
push
mov
sbb
nop
jnp
adc
sbb
movsl
cs
xor
repnz
les
movsb
push
push
lahf
subl
cmc
ds
enter
cs
push
dec
out
mov
inc
pusha
and
nop
fcoms
jg
push
ficoms
pop
lret
shll
loope
les
xchg
daa
push
inc
movsl
int3
adc
cmpsb
lcall
inc
movsb
jne
push
shr
aam
push
inc
aaa
xlat
ficomps
xor
je
movsl
push
and
insb
fxch
mov
sub
jecxz
int
cmp
test
fnstcw
dec
shl
daa
dec
dec
addr16
rolb
cs
pop
in
cld
and
push
mov
cmc
mov
add
add
pop
out
sti
jmp
or
sub
xchg
into
jg
xor
xchg
dec
sarb
mov
pop
lret
mov
ret
jb
fstl
outsl
mov
cmp
inc
dec
or
stos
and
popa
out
loope
adc
leave
fadds
fistps
mov
shll
das
jl
push
mov
jne
dec
or
insl
jns
mov
inc
xor
sub
sar
ljmp
lea
adc
sub
mov
scas
cli
mov
add
pusha
sbb
mov
adc
das
or
mov
mov
fcompl
push
or
xlat
push
imul
xor
pushf
cmpl
mov
mov
mov
lods
insl
inc
xchg
push
js
int3
clc
out
jp
push
xchg
mov
addr16
dec
cwtl
mov
clc
or
mov
mov
insb
and
sbb
sbb
aad
ficoml
fwait
out
das
std
add
add
popf
xchg
inc
jnp
movsl
cmp
pop
add
out
pop
push
sahf
fidivs
mov
addb
ret
and
subl
es
and
jmp
loope
aaa
outsl
mov
movsl
pusha
inc
movsb
inc
inc
inc
nopl
dec
add
mov
sbb
into
dec
pop
pop
inc
inc
sbb
dec
dec
iret
add
orb
cmp
int3
and
pushf
sub
fs
inc
stc
jge
mov
mov
aas
je
pusha
pop
sbb
call
lea
dec
shll
xchg
inc
mov
fmul
int3
cli
jp
adc
mov
sub
mov
add
repnz
pushf
fcmovnb
sub
popf
mov
push
push
inc
mov
jecxz
xlat
fcompl
addr16
aaa
sahf
and
es
fs
inc
cmpsb
es
and
sbb
mov
mov
xchg
test
inc
scas
dec
jns
mov
fwait
scas
ss
push
cmp
and
nop
xchg
gs
mov
bound
addb
ficompl
lea
mov
in
jb
mov
sbb
pop
sbb
push
pop
inc
insb
sbb
cmp
mov
mov
jg
imul
add
mov
aaa
push
movsb
inc
adc
mov
add
ja
lcall
test
rcr
or
push
fstpl
xchg
sub
pop
inc
add
daa
push
jo
clc
ja
int
stc
addr16
pop
pop
sbb
push
pop
mov
or
es
std
shl
scas
ret
or
imul
mov
test
cmc
xchg
in
push
adc
jmp
cwtl
adc
jmp
jg
out
or
nop
hlt
push
jmp
cmpsl
hlt
add
out
std
int
fisubrl
sbb
ret
jl
fimuls
xor
adc
cmp
and
test
shll
adc
ret
mov
pop
adc
xchg
xchg
cmp
enter
mov
xchg
rclb
xor
fnsave
mov
or
lcall
jmp
int3
jle
mov
or
fneni(8087
mov
sub
sub
frstor
inc
pop
aam
dec
jne
jae
test
pop
lret
in
and
bound
lcall
shl
sbb
and
push
xchg
push
xor
sub
daa
cmp
mov
test
or
pushf
rorl
cli
jle
stos
jp
cmp
sar
or
mov
add
xchg
shll
xchg
sbb
loop
xor
mov
enter
sbb
push
fcmovne
sub
jmp
push
add
pusha
sahf
fwait
xchg
fldenv
movsb
mov
xchg
and
adc
inc
sub
hlt
leave
mov
pop
loopne
sti
orb
cld
mov
enter
mov
and
fcoml
insb
gs
push
test
cmp
das
inc
xchg
mov
jno
adc
mov
mov
pop
leave
mov
jnp
add
aad
adc
push
inc
imul
test
xlat
call
or
xchg
push
mov
ljmp
loop
rorl
add
mov
leave
es
in
dec
fisubrl
aaa
xchg
in
test
pop
xor
mov
icebp
xor
sub
cld
je
in
inc
cmpsb
sbb
add
cmp
popf
add
nop
rcl
ljmp
stos
in
mov
out
push
inc
push
inc
xchg
sub
mov
int3
loopne
arpl
sbb
mov
cltd
js
rcrb
dec
insb
add
mov
loope
jecxz
pop
flds
into
sbb
outsl
test
cmpsb
adc
leave
cmpsb
fs
xchg
push
cmp
dec
arpl
jbe
ficompl
das
lds
mov
inc
xchg
add
ss
test
dec
out
inc
or
mov
and
jp
xor
xchg
cli
mov
or
pop
setns
adc
mov
shl
into
hlt
or
fs
sahf
sub
pop
pop
pop
jmp
add
je
pop
dec
xor
xchg
sbb
xchg
std
fadd
mov
repnz
mov
nop
subb
mov
pcmpeqw
out
xchg
das
mov
and
rclb
sub
pop
xchg
lret
test
mov
pusha
or
adc
adc
mov
inc
and
hlt
decl
pop
xor
scas
jo
mov
mov
and
insl
out
sbb
movsb
fcompl
leave
lods
sub
lods
xlat
pop
mov
roll
les
jl
cmp
sbb
cwtl
jnp
out
push
mov
je
rorb
sbb
jecxz
aas
mov
out
inc
pminsw
cmp
dec
adc
addb
sub
mov
cmp
sbb
loop
stos
popa
aam
das
add
xchg
outsb
lcall
mov
out
fs
add
je
push
xchg
and
mov
cli
or
ficomps
lock
xor
fmuls
pop
mov
add
xchg
cmp
outsb
imul
xchg
std
dec
pop
jns
fdiv
cmp
aad
or
sbb
mov
cld
inc
dec
mov
mov
fildl
leave
mov
data16
loop
mov
clc
dec
mov
mov
scas
out
mov
xor
pop
mov
cmp
mov
sbb
sbbb
push
add
push
mov
mov
push
das
test
es
mov
jmp
and
cmpsb
stc
xor
data16
aas
pop
test
mov
or
mull
js
mov
jno
in
iret
shll
push
gs
cmp
leave
mov
mov
fwait
adc
mov
scas
repnz
outsl
add
jo
aad
fsubrs
mov
sbb
frstor
nop
cmc
dec
fstpt
imulb
pop
int3
mov
cmp
xor
rep
ja
rcll
push
cli
shlb
jae
push
inc
lret
movb
jecxz
iret
jo
jecxz
testb
xchg
mov
inc
adcl
ret
and
sbb
add
pop
std
iret
or
lcall
fsub
aas
iret
jp
xchg
inc
repz
subb
xchg
pushf
popf
inc
pop
push
xchg
outsb
and
cmp
clc
jmp
adc
ss
adc
int
xor
stc
jge
jo
dec
inc
cld
in
dec
mov
outsw
shll
mov
mov
and
jae
cmp
pushf
mov
push
pop
jns
jl
roll
shlb
mov
in
hlt
mov
pushf
jae
xchg
cmp
sub
popa
aaa
ja
out
push
or
lahf
sti
mov
cli
popa
sub
jecxz
mov
jo
pushf
pop
add
sbb
nop
scas
add
cs
shll
test
sbb
inc
adc
popf
pop
and
stos
push
shrb
adc
lods
rcll
ret
out
sub
pop
shrl
stc
dec
mov
mov
andl
daa
mov
imul
jg
into
popa
movsl
sbb
es
call
orb
xor
push
mov
imul
std
out
xchg
test
test
aas
lock
popa
lahf
jnp
cmp
xor
fnstsw
add
push
aaa
cmp
ja
sub
fdivrp
std
mov
mov
fimull
mov
rclb
sub
fcomps
mov
sbb
xchg
in
push
mov
adc
insl
push
cmpsb
aas
aas
movsb
stos
xchg
and
in
lret
int3
push
sahf
jbe
lcall
aam
clc
arpl
and
mov
push
pusha
pop
xchg
mulb
sbb
lcall
push
cmp
pop
mov
jle
mov
popl
add
xchg
mov
nop
push
loop
pop
lds
dec
mov
out
mov
fmuls
mov
mov
xor
les
cmp
lock
sub
or
xchg
imul
mov
mov
xchg
pop
inc
loope
mov
xor
mov
mov
jg
xor
rcrl
sbb
pop
divb
xchg
fidivs
notl
inc
leave
flds
ret
cmp
adc
lret
insb
xchg
loope
clc
mov
es
dec
jg
jg
aam
sarb
xchg
push
mov
enter
int
dec
ror
xor
pop
cmc
addl
clc
sub
hlt
fidivl
adc
cltd
out
xchg
mov
adc
xchg
jmp
or
sahf
mov
scas
and
lods
aad
rolb
iret
mov
adc
mov
push
xchg
cmp
rcl
pop
xchg
sbb
pop
pop
pop
adc
cmpsl
out
insb
mov
or
in
or
pop
and
adc
inc
inc
adc
jmp
push
fidivs
fwait
cmp
out
shl
adc
xor
cmp
xchg
imul
out
mov
cmpsl
mov
test
out
mov
push
outsl
leave
or
pop
sub
out
mov
xor
aas
xor
sbb
jns
jp
adc
bound
cmp
xchg
xchg
shlb
inc
icebp
in
push
fimuls
es
pop
gs
ds
ja
cmp
cmp
repnz
test
andl
imull
adcl
and
push
lea
fldcw
lea
icebp
lea
daa
test
jns
sub
test
mov
aas
jne
imul
jecxz
xchg
in
mov
mov
out
mov
adc
sbb
loope
scas
sub
cmpsb
ja
hlt
cmp
adc
daa
insl
mov
jmp
addr16
mov
jmp
cmp
jg
jno
and
mov
loop
pusha
out
and
inc
xchg
test
cmc
mov
loop
and
jmp
xchg
jae
or
cmp
out
add
loop
add
adc
adc
pop
pushf
repnz
dec
fnsetpm(287
lcall
mov
inc
adc
mov
inc
gs
inc
cmpb
insb
mov
inc
jmp
and
test
cltd
out
bts
cmp
test
push
faddl
sti
notl
mov
mov
lcall
pop
popf
lahf
sub
loope
rol
dec
shlb
popa
ja
dec
fmulp
rcrl
pop
or
jmp
push
jns
mov
repnz
insb
xor
jle
xchg
sbb
sbb
imulb
push
iret
sti
test
mov
mov
popf
imul
add
cli
xchg
int3
jmp
xchg
cmp
xchg
xor
lods
fwait
mov
xchg
je
lods
xchg
scas
shl
xor
xor
rcl
cltd
into
mov
jno
mov
dec
aaa
adc
sbbl
dec
push
xchg
fcoml
movsb
inc
jne
xchg
ja
out
imul
std
pop
and
xchg
fldenv
inc
cltd
scas
pop
cmp
popf
push
cmc
mov
push
pop
cwtl
xchg
xchg
xor
fisttpl
dec
repnz
dec
lahf
sub
out
popf
push
aam
jmp
add
repnz
pusha
insb
push
sbb
rcrl
mov
dec
iret
and
loope
push
stos
sub
sahf
mov
xor
dec
call
scas
mov
outsb
testb
sub
nop
jns
add
shll
sti
movsb
pushf
sbb
lret
dec
xchg
enter
outsb
sar
dec
pop
pop
lods
mov
pop
pop
mov
test
add
dec
xchg
test
cmp
xchg
cld
daa
imul
jne
pop
inc
fldcw
push
test
lret
ret
cmp
scas
cltd
cmp
lret
js
loopne
dec
or
sub
push
ret
mov
fisttpll
pop
movsb
dec
lahf
enter
movsl
push
or
jb
mov
ror
mov
xor
xchg
push
pop
test
cmp
xor
or
and
xchg
jl
popf
mov
dec
or
inc
jae
adc
addb
push
scas
xor
inc
test
xchg
es
dec
mov
lods
xor
fstpt
or
mov
push
mov
or
pop
jge
cltd
enter
ljmp
lds
leave
add
fidivl
jae
mov
in
lret
iret
test
xchg
int3
sarl
pop
ret
shlb
bnd
clc
xchg
lcall
jl
xchg
loop
dec
fisubl
inc
add
stos
sbb
rorl
fwait
or
dec
mov
jb
mov
lret
insl
lock
pop
sbb
outsl
lret
add
fs
insb
jl
test
imul
xor
xor
mov
sbb
pop
jo
aam
idivl
ficoms
clc
mov
xor
sub
push
cmp
sbb
jp
xor
imul
inc
or
aam
xor
imul
push
hlt
dec
xchg
mov
xchg
das
or
sbb
aad
xorl
jbe
ret
shrb
xor
and
sbb
or
test
jae
call
jno
xchg
ljmp
jne
and
push
das
ja
inc
bound
sbb
adc
out
and
xchg
push
mov
mov
les
mov
add
cmp
in
push
adc
imul
imul
push
fwait
stos
icebp
subl
cs
test
pop
dec
jbe
push
sub
cmc
mov
pop
mov
daa
bound
xor
aas
lret
jle
rolb
sub
dec
mov
cltd
mov
in
js
xor
inc
lea
mov
std
les
cld
sbb
enter
lcall
sub
add
arpl
lds
cwtl
xchg
stos
icebp
dec
jg
push
adc
mov
out
sahf
out
pop
push
mov
xchg
jns
lock
movsb
sahf
addr16
jp
jo
mull
mov
mov
xchg
xor
mov
cmp
fisubrs
jge
imul
rcll
in
and
jmp
and
jle
jns
sub
fs
push
add
xchg
test
insb
cli
ljmp
adc
cmp
or
sti
jmp
mov
rcr
lock
ja
xchg
loope
mov
outsb
int
xchg
add
cmp
ss
xor
or
ja
rorb
xchg
in
or
jp
lret
sbb
mov
sbb
jbe
dec
imul
cli
jecxz
das
xchg
pop
mov
or
stos
cmp
je
push
add
in
popl
mov
lea
inc
push
mov
push
jle
lret
mov
and
aas
adc
cmc
shrl
jbe
lds
lock
leave
bound
lds
shrb
in
divl
insb
pop
jge
cmp
arpl
outsl
int3
imul
mov
jo
repz
lds
insl
jecxz
pop
fdivs
pop
add
or
sub
cmpsb
jne
fdivs
lret
push
adc
push
in
faddl
dec
fxch
xor
data16
loopne
into
push
sbb
xchg
jne
ljmp
push
das
pushf
or
xchg
lret
cmp
mov
fcomi
daa
outsb
pushf
ja
xor
or
adcl
sub
out
xchg
or
rcrb
cltd
fiaddl
and
es
scas
sar
enter
mov
pop
add
cmpsb
ret
push
js
cmpsb
mov
push
push
xor
int
jbe
push
and
in
adc
je
jns
ficoml
jecxz
fsubr
mov
movsb
pushf
sub
cmp
jne
stc
out
enter
scas
test
into
jne
push
cld
roll
or
push
int3
xor
mov
adc
mov
jns
mov
es
imul
pop
cmp
jae
inc
xor
ja
imul
lahf
mov
dec
jle
jl
pop
xor
shll
fisubl
xor
xor
or
jmp
dec
sbb
pop
dec
filds
into
mov
push
adc
add
imul
pusha
jge
loope
inc
out
insl
push
jp
pop
mov
push
adcb
mov
test
inc
pushl
pop
xchg
insl
add
pop
outsl
xor
clc
scas
or
cmovo
sbb
jnp
mov
test
ljmp
cmpb
push
xor
in
push
stos
into
stc
dec
jns
or
inc
push
stc
ljmp
sub
push
mov
stos
ljmp
mov
jmp
sub
mov
add
addl
sbb
inc
sub
enter
pop
mov
sub
pop
lcall
leave
push
jns
stos
xchg
ret
faddl
adc
shl
lret
ret
rorb
rclb
scas
sahf
xrelease
data16
or
popl
pop
mov
xor
sbb
mov
test
cmp
mov
or
dec
xchg
lods
fstpl
loopne
pushf
sbb
and
mov
push
mov
mov
into
push
mov
adc
mov
add
push
inc
pop
popa
pop
or
repnz
mov
pop
cmp
rcr
mov
mov
and
dec
das
and
add
iret
sbb
outsl
ja
test
pusha
cmp
inc
jecxz
test
and
test
pop
push
jmp
push
xor
jne
pop
push
xlat
bound
pop
inc
xchg
sti
and
mov
or
arpl
sbb
jns
movsb
inc
insb
stc
inc
push
dec
inc
daa
push
ds
enter
pop
xchg
pop
pop
cwtl
into
inc
jmp
test
scas
stos
in
aad
sarb
sub
cmp
sbb
into
sbb
xchg
scas
insb
fistl
sbb
ficoml
cli
in
adc
xchg
cld
rol
or
xchg
in
cmpsl
and
fsubs
cmp
insb
add
out
pcmpgtw
cli
arpl
shlb
repnz
xchg
cmp
sub
xchg
inc
or
repnz
aad
call
loope
sbb
mov
or
insb
hlt
js
inc
xor
daa
lods
cmp
sti
repnz
outsb
mov
mov
xlat
push
sahf
mov
popf
pop
push
lods
add
aas
xchg
js
aaa
sub
xchg
test
aad
call
mov
mov
mov
rorb
ds
inc
jg
or
out
int
xchg
and
shll
into
xor
popa
adc
adc
mov
fstpl
test
aas
mov
rcrb
jge
push
sub
fcoms
movsb
imul
dec
das
cmp
mov
lcall
lcall
xchg
sbb
hlt
outsl
stos
out
outsl
push
fpatan
cmp
mov
adc
sbb
sti
add
aaa
ss
shrl
add
xor
mov
pushf
mov
ficompl
dec
push
mov
rcrb
xchg
mov
adc
cmp
and
sub
loop
cmp
loop
push
cmpsb
add
lahf
repz
fldcw
dec
mulb
adc
inc
aad
imul
pop
dec
loope
jae
outsb
mov
xor
push
pop
orb
xor
push
cmp
cmp
cltd
mov
xchg
mov
mov
mov
inc
mov
xor
aaa
cs
sbb
mov
notl
dec
js
pop
pop
fstps
adc
adc
fxtract
jnp
mov
lock
in
cltd
pop
push
popa
adc
imul
ja
mov
fnstcw
in
js
mov
push
push
pop
pop
adc
rclb
mov
pop
or
shll
mov
stos
mov
lcall
movsl
lds
mov
or
jb
inc
push
test
pop
loop
movsb
mov
stos
pop
jo
loopne
or
mov
cs
clc
push
hlt
aas
loopne
fdivl
jmp
mov
cmp
push
jbe
inc
dec
mov
scas
test
adc
test
repnz
adc
pop
out
xlat
lret
pop
shll
inc
mov
in
mov
fisttps
ljmp
push
pushf
xchg
xor
ja
daa
cmp
fistps
lock
lahf
into
cmp
lods
cmpsl
push
mov
or
pop
enter
jp
lock
in
mov
notl
sbb
loop
stos
cmp
mov
push
int3
sbb
adc
fldenv
in
xor
cmp
out
xor
pop
sbb
push
inc
mov
and
xchg
adc
cmp
clc
push
flds
push
mov
pop
stos
lock
push
lds
hlt
sub
bound
push
enter
or
aam
push
jae
and
jb
xchg
xchg
sub
jmp
jg
fnsave
push
fsubl
jne
mov
lret
jge
dec
fs
inc
rorb
jbe
rcr
push
test
loope
ljmp
mov
dec
imul
bound
lea
and
or
push
xor
sbbl
push
cmp
js
shl
outsb
or
lods
ja
andb
test
int
pushf
neg
loope
fs
inc
pop
test
adc
stos
or
push
mov
push
test
fldenv
add
pop
leave
test
out
push
mov
dec
fistpl
mov
fbstp
loopne
insb
fbld
decl
and
xchg
dec
ljmp
ret
aas
lahf
mov
stos
cmp
push
repz
data16
pusha
sbb
jle
mov
and
xchg
push
sbb
pop
out
jmp
test
aas
iret
popa
jns
and
add
lods
stc
out
jns
cmp
daa
clc
add
loope
xor
or
push
in
xor
pop
in
loope
jecxz
adc
notl
testl
in
mov
jbe
into
loopne
push
sub
adc
movsl
cmp
push
or
mov
rclb
dec
andl
nop
mov
mov
or
push
out
scas
pop
push
stc
je
dec
iret
pushf
das
jno
mov
aam
jnp
add
out
cmpsb
or
jp
xchg
shr
add
out
cmpsl
sub
mov
ja
xchg
dec
or
sub
pop
pop
mov
fcoms
push
push
cmp
flds
jge
mov
xchg
sbb
data16
out
push
jp
rcl
ret
mov
sbb
imul
sahf
cld
sbb
leave
adc
push
pusha
and
or
lret
les
push
enter
stos
inc
fdivrs
into
inc
push
int3
fldcw
rcl
dec
mov
fiaddl
push
gs
gs
cltd
sub
loopne
insb
test
mov
mov
inc
imul
fadd
push
scas
cltd
mov
shl
push
enter
negl
push
in
out
cld
popf
iret
sbb
aam
adc
xchg
cltd
sub
jmp
sbb
add
nop
pop
lods
pop
mov
nop
adc
shll
cmp
xchg
call
push
outsb
out
mov
add
sub
les
lret
dec
pop
xchg
xlat
push
fiaddl
cmp
xchg
inc
inc
lcall
inc
inc
push
xchg
jmp
push
add
insb
or
movsl
cmp
pusha
cmpsl
or
scas
push
lock
cltd
scas
cltd
outsb
dec
ffree
pop
aaa
jns
data16
dec
into
clc
stos
jbe
sub
sar
dec
je
inc
imulb
add
lcall
cmc
jae
es
jbe
mov
dec
xchg
aas
xor
adc
lods
into
loope
shll
enter
jl
adc
repz
enter
insl
out
or
sub
cmpsb
leave
adc
jmp
add
inc
inc
shr
loope
jmp
sbb
jp
and
clc
jne
cmp
and
and
inc
xchg
dec
xor
arpl
test
sti
mov
out
and
cltd
and
pusha
mov
test
rorb
ror
inc
sti
call
mov
or
pop
inc
jmp
ret
push
aaa
repz
lret
mov
adc
adc
inc
jg,pn
fs
xchg
rorl
push
pop
into
push
mov
pop
into
ret
push
mov
loop
inc
mov
rcl
jne
add
out
test
pop
xlat
outsb
adc
sbb
and
jo
cmpsl
cli
pop
lea
xor
out
scas
out
je
pop
add
test
cmp
cmpsb
pop
jge
sub
mov
dec
rcrl
aas
sbb
les
xchg
in
in
xchg
jb
sub
pushf
stos
push
insl
insl
in
jbe
dec
push
fldenv
xchg
inc
push
pusha
sbb
mov
inc
shll
sti
mov
or
fnstenv
data16
pop
sub
lods
test
jns
icebp
arpl
xchg
fdivrs
test
pop
xchg
movsl
scas
jg
aad
xchg
and
xor
test
jmp
mov
mov
dec
sbb
imul
jns
push
std
xadd
xchg
outsb
ficompl
inc
adc
aas
inc
pusha
fldcw
iret
loopne
das
test
sub
stos
in
loop
pop
mov
rep
adc
sub
sbb
lea
sub
sti
movsl
push
daa
add
testb
and
cmp
fists
stc
xchg
sarb
sbb
mov
fbstp
jecxz
loop
out
lock
push
movsl
push
repz
jno
cmpsb
jmp
loope
loop
mov
das
or
into
call
mov
out
fsubrl
rcr
mov
cs
fs
imul
loop
enter
inc
and
xchg
adc
pop
and
xlat
mov
fs
rolb
jno
pminub
cs
pop
inc
repz
sbb
xchg
mov
or
std
inc
cmc
outsb
sbb
fidivrs
mov
call
enter
push
lds
inc
cs
mov
jae
testb
or
ss
mov
adc
bound
shlb
xchg
popa
add
in
sub
test
fcoms
xchg
push
scas
sbb
hlt
adc
inc
fdiv
out
outsb
mov
testl
shl
mov
fistl
mov
lcall
pop
mov
and
addr16
les
ljmp
sbb
add
scas
fnsave
mov
sub
dec
and
in
inc
add
outsl
dec
test
pop
cmp
push
enter
call
push
mov
sub
pop
adc
mov
and
pop
stc
popf
cmc
cmp
daa
adc
shll
icebp
cmp
inc
and
in
out
mov
inc
or
sarb
pop
mov
in
cmpsb
adc
dec
call
xchg
dec
push
adc
sti
inc
lock
xchg
push
inc
sbb
es
pop
dec
in
xchg
clc
mov
push
sbb
leave
inc
pushf
xor
push
mov
in
cwtl
std
roll
inc
test
dec
fs
jl
jo
inc
pop
mov
imul
popf
icebp
shr
rdpmc
aad
xchg
scas
hlt
xchg
and
push
mov
fwait
out
push
movsl
lods
addr16
ret
test
push
lock
xchg
imul
test
pop
mov
cmp
popa
andb
adc
pop
inc
push
mov
cmp
sub
add
lret
ds
jmp
mov
cwtl
bswap
pop
dec
pop
cmp
lea
cwtl
call
sti
sub
mov
adc
es
push
cli
add
mov
les
mov
sub
push
inc
inc
ret
xorb
mov
imul
mov
pop
pusha
rcll
adc
popa
pop
sbb
les
adc
sub
push
mov
pusha
outsb
jb
sbb
inc
mov
xor
psrad
shll
add
cmpl
lahf
ret
out
xor
movsl
or
add
xor
inc
pusha
in
cs
push
arpl
nop
or
xchg
movsb
sub
and
dec
mov
adc
cwtl
ret
out
mov
shrb
psllw
loope
lock
ds
enter
ljmp
out
mov
je
push
xor
and
sub
jle
mov
mov
mov
insb
sub
and
xlat
rcll
pop
lods
or
mov
gs
push
cmp
inc
lods
mov
jne
sbb
fstpl
icebp
sbb
test
cmp
mov
scas
mov
scas
xor
inc
push
inc
push
ljmp
outsl
cmp
adc
scas
mov
xor
sbb
mov
aas
fisubrs
arpl
push
popf
dec
shl
int3
in
fwait
gs
sahf
jnp
sub
pop
mov
jbe
movl
imul
stos
jl
mov
rcrb
fcomps
inc
mov
pop
sub
fisubs
scas
cmp
mov
pop
mov
cmp
pop
jecxz
repnz
bound
cltd
sahf
cmp
push
mov
imul
xchg
push
imul
vpsubusb
in
pop
roll
addr16
call
dec
imul
in
test
push
and
mov
stos
jne
xchg
xchg
int3
popf
push
lcall
daa
stos
pop
sub
adc
out
negb
sub
mov
loopne
icebp
and
sub
push
out
adc
outsl
sub
jo
inc
cmpl
cmpsl
in
insb
stos
inc
insl
add
js
orl
jmp
mov
cld
pop
cmp
outsb
or
push
dec
cli
nop
adc
lcall
stos
push
mov
cmc
scas
cmp
insb
mov
loope
ljmp
jmp
data16
lock
xchg
push
or
dec
inc
pop
sub
xchg
loopne
addr16
aad
sarl
sbbb
jbe
mov
test
sbb
dec
pushf
xchg
dec
pop
rcll
jo
mov
push
lcall
inc
xchg
dec
enter
cmp
movsb
jge
add
xor
mov
sub
daa
push
mov
nop
bswap
into
push
dec
xchg
nop
pop
xor
repnz
adc
jmp
ljmp
push
xchg
mov
dec
lahf
inc
ja
aam
xchg
clc
outsl
or
add
mov
push
imul
dec
add
jge
mov
xchg
arpl
pop
dec
pop
out
xchg
in
cmp
jl
popf
loop
mov
decl
aad
js
lds
test
test
dec
pop
sahf
xor
ljmp
sub
dec
sti
mov
int
xor
and
push
sub
sub
mov
and
mov
cmp
das
pop
repnz
adc
sbb
and
push
stos
ljmp
dec
sbb
cmpsl
sbb
mov
push
pop
push
in
lahf
mov
xor
push
mov
cmpsl
imul
or
pop
xchg
xlat
cmp
outsb
int
outsb
std
jne
mov
outsl
or
adc
cmp
in
push
divb
mul
scas
rol
jne
movsb
push
or
loopne
orb
xchg
xchg
ret
aad
inc
ja
and
cmp
cmpsl
push
cmp
inc
je
bnd
xchg
or
mov
stos
aad
lcall
lahf
lahf
lds
jno
push
lret
lods
mov
mov
rcr
shll
movsl
or
mov
mov
xchg
adc
push
adc
orb
xchg
push
xor
xchg
inc
outsl
push
sub
jg
or
jne
xor
data16
xsavec
insb
or
sarb
or
insw
leave
inc
cmp
push
loopne
cmp
cld
sub
push
and
xchg
aas
and
add
int3
fsubl
ljmp
lahf
or
iret
add
cmp
mov
push
les
das
aad
stc
mov
jns
pop
sub
es
daa
sub
add
cwtl
xchg
adc
lds
inc
mov
sbb
repnz
mov
cwtl
xlat
lsl
sub
cmpsl
sahf
jmp
inc
jl
popa
lock
or
mov
push
mov
in
int3
out
sub
xchg
mov
jbe
push
inc
add
pop
addb
cltd
dec
sub
ret
inc
frstor
cmpsl
or
and
sbb
mov
jnp
dec
je
adc
data16
popf
xchg
or
outsl
cmp
pop
and
adc
mov
add
fsub
push
push
inc
xchg
cmpsb
mov
mov
push
ret
and
cmp
and
fsubrl
mov
ss
pushf
incl
xchg
inc
je
inc
sbb
lret
aaa
pop
aaa
push
jl
rcrl
jg
pop
xchg
push
fwait
sbb
sarb
adc
xchg
lret
xchg
pop
movsl
mov
pop
xchg
movsb
aad
add
pop
shl
orl
cmp
sbb
int3
add
adcb
push
std
cmp
cmp
jo
add
jl
sbb
sbb
cmp
in
mov
sti
sbb
jnp
std
andb
clc
xor
cmpsl
ficoml
lcall
inc
mov
in
mov
push
fsub
gs
aam
adc
push
fnstcw
jns
imul
loope
sbb
push
adc
sub
sub
out
push
pop
sbb
mov
dec
sahf
jnp
xor
roll
lods
clc
jno
push
iret
xor
lcall
aam
cwtl
out
xor
divl
in
in
jge
lea
and
sbb
imul
jl
popa
cmp
push
repz
add
mov
mov
cmp
mov
jg
shlb
jo
clc
in
test
ror
pop
adc
out
idivb
stos
mov
in
or
jns
fldcw
pushf
fadds
sbb
vmovd
or
sbb
pop
xor
mov
iret
mov
popf
xorl
mulb
push
xor
lock
fcoml
inc
faddl
dec
sub
pop
das
ja
ss
pop
pop
mov
fisubrl
js
inc
add
push
jns
or
call
mov
cmp
sbb
xchg
into
jge
pop
xchg
daa
sub
inc
add
repnz
cmp
push
pusha
jp
addr16
ret
dec
leave
repnz
mov
scas
sbb
pushf
imul
pop
push
or
pop
and
adc
mov
je
or
out
aad
aas
ja
arpl
rclb
lahf
icebp
jno
sub
lea
add
ja
cmp
cmp
bound
sub
rorb
rolb
imul
add
stc
add
mov
jmp
shll
pop
dec
inc
or
je
jae
push
sti
dec
inc
mov
adc
ss
pusha
mov
sub
mov
stos
mov
inc
loop
popf
js
xchg
add
lcall
dec
mov
pushf
arpl
jmp
add
mov
test
jb
hlt
inc
pop
adc
push
push
jp
pop
jge
adc
test
add
scas
push
out
and
lds
aaa
mov
rclb
pop
push
add
and
outsl
mov
and
lods
pop
push
cs
sbb
sbbl
imul
pop
and
add
aas
pop
sbb
test
sub
jbe
xchg
mov
dec
sub
loop
fsin
dec
pop
lret
enter
dec
jne
and
cli
mov
pop
jnp
jbe
mov
fimull
pop
sbb
sti
xor
pop
sub
jmp
hlt
mov
lock
add
movsb
insb
cmpsb
sub
mov
out
push
or
dec
mov
les
test
mov
jb
fnstenv
or
mov
inc
insb
dec
mov
and
pop
cs
lock
pop
cmp
adc
mov
hlt
jnp
fisttps
std
mov
lock
sbb
test
push
sub
pop
sub
subl
or
mov
in
mov
js
sub
and
jae
mov
push
aad
shl
pop
mov
mov
bound
mov
cli
cmp
xor
pusha
cltd
iret
test
mov
push
in
sbbb
inc
or
ss
pandn
push
das
adc
dec
iret
into
jns
xor
cmp
push
loopne
fs
les
ss
mov
fldcw
dec
sbb
scas
sbb
add
ss
and
lds
push
test
sbb
xchg
mov
mov
hlt
push
dec
xchg
aad
cmp
scas
add
cmp
nopl
mov
sbb
movsb
ret
adc
imul
sub
fisubrl
push
lea
cld
xchg
and
imul
push
add
jp
and
mov
adc
insb
dec
xor
out
imul
dec
mov
inc
mov
mov
aas
cmp
btr
popa
cmc
sub
xchg
out
mov
pop
xor
sarb
les
in
fiaddl
jecxz
inc
or
adc
mov
dec
xlat
inc
dec
pop
xor
mov
dec
addr16
shl
xchg
fldcw
cmp
adc
mov
lds
outsl
lods
fwait
nop
lcall
adc
push
jl
call
adcb
sub
jmp
inc
popf
push
add
mov
call
push
mov
addl
outsl
das
in
lcall
pop
enter
push
mov
aaa
icebp
adc
dec
and
fsubl
sbb
jecxz
dec
aaa
sub
adc
mov
pop
push
mov
mov
lret
cmc
pop
sbb
mov
mov
scas
jmp
xchg
sahf
nop
xor
aad
push
or
mov
jb
wbinvd
mov
leave
cltd
daa
add
test
cmp
movsb
popa
mov
mov
cmp
mov
add
sarb
stos
push
cmp
inc
push
testb
lret
add
sub
or
push
loop
ret
mov
inc
jmp
test
dec
iret
or
ret
pop
cmpsb
pop
dec
sub
shll
cld
test
pop
les
add
repz
adc
add
lret
push
jge
mov
scas
cmpsb
les
adc
cmp
dec
je
hlt
jb
sbb
sub
iret
and
int
or
inc
call
push
cwtl
std
adcl
push
ds
jmp
xchg
in
lret
cmovo
out
xor
push
loop
mov
jnp
sahf
ret
into
lods
mov
pop
stos
xor
pop
inc
mov
push
inc
mov
mov
adcl
ljmp
pop
popl
xchg
ds
or
add
std
imul
popf
inc
jbe
pop
dec
xor
insb
mov
clc
test
in
xchg
pop
int
fidivrs
dec
cmp
or
and
dec
int3
fadds
mov
or
inc
or
mov
les
and
and
out
in
mov
add
dec
ret
pop
les
leave
or
xchg
add
or
movsb
push
sub
mov
lahf
jmp
jae
test
sbb
sbb
and
out
int
sbb
call
andl
insl
sbbl
jb
orl
data16
imul
cmp
cmp
mov
xchg
mov
adcl
mov
push
or
push
push
fwait
xchg
dec
mov
lods
outsb
movsl
subb
icebp
jl
mov
xlat
cmp
jl
mov
scas
push
fstp
testb
insl
rol
stc
fstl
nop
ss
cmp
xchg
lret
cmp
lret
call
or
mov
std
cmc
insb
xchg
stc
loop
cli
xchg
sbb
inc
iret
lods
jnp
adc
push
jo
call
mov
imul
rcr
stos
repnz
push
lods
outsb
sub
pop
xchg
xchg
imulb
mov
ret
ljmp
mov
and
loope
jae
call
sbb
enter
mov
push
dec
push
cmp
mov
jb
adc
stos
adc
mov
in
and
or
cmpsl
adc
xchg
insb
or
dec
fistpll
nop
sbb
mov
hlt
fstpt
imul
jecxz
dec
sub
and
pop
xchg
push
pop
aad
shlb
mov
ja
repnz
sub
adc
jge
inc
adc
movsl
aam
aas
test
inc
sbb
cmp
push
add
fucomip
jmp
mov
dec
movntq
nop
dec
fcmovne
sbb
or
push
inc
mov
fistps
fadd
shl
movsb
cwtl
mov
in
jg
negb
sub
das
mov
sub
cmpsb
lds
aaa
sbb
jge
xor
in
dec
loope
jno
cwtl
push
aaa
cmpsb
jp
mov
pop
out
add
and
fnstsw
push
leave
test
mov
push
pop
mov
jecxz
push
cmp
adc
dec
jbe
imul
mov
sahf
jmp
out
sbb
xchg
inc
add
adc
popf
pop
out
lods
inc
push
stos
mov
jl
or
cmp
clc
je
btc
xchg
mov
icebp
inc
je
test
jg
lods
shll
loop
push
sub
cwtl
mov
test
push
mov
in
add
sub
pop
mov
cwtl
and
rcrb
mov
push
test
mov
bound
repnz
xor
rolb
lret
inc
xchg
push
je
lcall
test
imul
loope
mov
fsubrl
cmp
and
sbb
sahf
adc
adc
stos
xor
jmp
pop
inc
aaa
jle
out
jo
adcb
jbe
push
pop
or
arpl
fistps
inc
lea
pop
mov
push
inc
cltd
cmp
out
movsl
mov
xor
enter
js
test
pop
movsl
fstps
jg
clc
decb
mov
sti
int
xor
mov
sete
xlat
test
and
inc
cs
cmp
ret
and
loop
std
sub
xchg
pop
fcomp
jmp
or
jmp
mov
mov
js
pushl
pop
xchg
les
into
cld
orb
mov
mull
lods
jns
loopne
jecxz
inc
dec
mov
xchg
sub
je
aad
orb
in
rclb
gs
sbb
bound
out
cmpsb
pop
push
push
aaa
push
inc
pop
mov
pop
orb
sbb
lahf
push
mov
pop
dec
mov
fsubrl
out
push
movl
pop
add
pushf
data16
sub
loope
push
lods
add
push
lea
or
or
call
or
xor
sbb
inc
divl
movsl
test
popl
pop
jne
jns
mov
sbb
sub
mov
sub
sbb
std
cmp
jmp
lods
lret
sbb
sbbl
push
sub
mov
out
add
push
and
adc
adc
mov
ss
test
pop
enter
jno
sti
and
mov
adc
leave
stos
int
icebp
imul
pop
adc
inc
pop
mov
push
loop
lret
in
push
xchg
or
ficompl
imul
out
andb
enter
jmp
or
push
daa
pop
xchg
add
lea
daa
add
insl
add
adcl
sahf
jp
and
add
mov
mov
lock
ficompl
repnz
mov
repnz
pop
jae
mov
jmp
push
mov
push
iret
cmp
sub
mov
xchg
mov
adc
outsb
jno
call
lock
mov
movsb
lahf
movsb
xor
xor
loope
fdiv
adc
ret
dec
jb
and
push
aas
js
dec
cmp
dec
push
cmp
jle
repnz
mov
fs
aad
dec
xchg
add
movsl
xor
push
inc
shll
std
cmp
dec
leave
xchg
shll
push
pushf
pop
xor
dec
pop
lock
mov
and
fwait
ret
mov
sbb
mov
pop
push
push
jge
inc
jmp
test
sti
sbb
out
xchg
xor
jmp
fs
cmp
xchg
stos
addr16
cmpl
mov
inc
add
imul
lea
arpl
addb
in
mov
xlat
sub
push
dec
or
inc
mov
lock
adc
addr16
dec
and
add
sub
icebp
cwtl
mov
fdecstp
js
push
mov
cmp
push
jl
lds
lret
jg
cmpsl
pop
fdivl
sub
addb
mov
sahf
push
sti
call
sbb
pop
xchg
lea
sbb
cli
imul
cmc
push
inc
nop
and
loope
in
xchg
out
rcr
fstpt
js
jne
ffreep
das
push
add
add
ljmp
sbb
xchg
dec
mov
mov
adc
jns
leave
mov
idivl
mov
pop
cmp
popf
into
cwtl
sub
push
jg
lahf
mov
pop
int
arpl
sbb
cmpsl
mov
cmp
out
test
sbb
pop
in
and
xor
jecxz
inc
xchg
jecxz
cmp
xchg
fistpll
in
std
sub
pop
add
mov
dec
cmc
pop
lock
dec
cmp
mov
pop
cs
sub
sub
or
xor
lods
and
arpl
cld
into
iret
repz
push
fidivl
and
repz
divl
ja
dec
push
mov
sbb
mov
fucomip
pop
mov
cli
nop
xor
hlt
pop
mov
int
rcll
sub
cmpsb
gs
mov
mov
in
inc
mov
push
push
stc
shll
add
mov
mov
mov
cmp
or
pushf
xor
xchg
cmpsl
hlt
cmp
decb
pop
lret
push
cmpsl
add
dec
mov
push
scas
add
add
cmp
ficomps
out
adc
adc
jo
cmc
jb
mov
cwtl
out
test
std
xor
fcomp
xchg
push
mov
pop
jge
add
dec
imul
rclb
fiadds
mov
clc
mov
lea
mov
test
ds
test
add
fcoml
xor
push
movsl
cmpsb
add
mov
push
loop
or
xor
int
imul
sbb
mov
std
movsl
mov
cmc
fwait
or
daa
pop
repz
sahf
out
ret
fmuls
cmp
inc
fisubrs
fistpl
xor
jmp
fcoml
pop
loope
push
dec
enter
lods
jbe
sub
jl
jb
cmp
xchg
push
insb
jle
shrl
inc
pop
sbb
shrb
mov
es
xor
xchg
repnz
pop
mov
cmp
or
sbb
or
into
xchg
and
cmpsb
idiv
iret
imul
jmp
out
push
jnp
jmp
aad
mov
adc
sbb
cmc
rolb
hlt
or
in
in
shl
or
xchg
pop
mov
mov
and
add
mov
daa
adc
sbb
notb
inc
ret
out
mov
xorl
insb
or
imul
inc
ljmp
mov
loope
and
jne
shrb
enter
cmpsb
scas
fadds
and
pusha
mov
sbb
mov
dec
xor
or
scas
aad
sub
fstpl
mov
xchg
and
je
jl,pn
sub
push
divb
icebp
jne
out
pop
aad
outsb
pop
jnp
xchg
repz
jmp
jbe
or
xchg
push
dec
jl
mov
jge
adcb
pop
in
cs
scas
inc
fdiv
push
and
inc
ret
mov
lahf
jns
fistps
lock
fsubrl
or
dec
push
push
sbb
ss
sbb
sub
and
cltd
cmpsb
in
insl
mov
mov
mov
push
dec
int3
sub
lock
ds
fdivrl
push
rclb
pop
jno
jg
xchg
adc
call
insl
decb
adc
mov
mov
jb
pop
mov
ja
fwait
cwtl
adc
push
mov
adc
xlat
mov
lods
adc
and
push
fnsave
mov
push
dec
push
shl
std
js
and
in
or
jne
jnp
push
icebp
dec
sbb
jns
lods
cli
les
inc
jmp
mov
xor
adc
add
xor
scas
pop
xchg
repnz
ds
sbb
roll
mov
outsb
xchg
jmp
mov
clc
jge
incb
dec
stc
xchg
das
cli
inc
sbb
rol
pop
gs
mov
sti
adc
out
dec
dec
mov
ret
test
push
popa
mov
bound
hlt
bnd
jno
xchg
out
repnz
subl
pop
aas
pop
out
xor
pushf
lret
xor
movb
les
add
insb
jp
data16
ss
bound
xchg
fdiv
inc
pop
fidivs
stos
and
xor
clc
imul
outsl
mov
stos
pop
and
test
out
xchg
cmpsl
clc
xor
push
jmp
xor
adc
or
push
ror
inc
sub
mov
mov
pushf
mov
cltd
inc
leave
cltd
pop
xor
mov
outsb
ret
adc
cmpsl
push
out
mov
xchg
repnz
jecxz
adc
inc
adc
dec
loope
inc
negb
dec
jne
xchg
nop
dec
cmpsb
imul
icebp
fmuls
imul
stos
mov
movb
mov
mov
mov
cmp
sbb
rcll
mov
rolb
xor
dec
pop
dec
dec
xlat
inc
comiss
popa
push
inc
in
ret
jge
dec
mov
inc
xchg
fmuls
and
out
cld
lret
out
ss
popf
push
and
jne
jns
fcmovne
cmp
pop
shl
enter
shlb
les
into
dec
inc
and
inc
inc
and
mov
jge
fcmovbe
sarl
cs
pop
mov
sbb
lret
pop
xchg
push
out
cs
mov
cmc
xor
mov
in
loop
das
es
push
in
dec
js
into
adcl
insb
cli
mov
dec
jl
rorl
xlat
out
jge
pop
js
xchg
out
and
pop
cmpl
mov
lcall
mov
jno
std
leave
cmp
pushf
pop
lahf
add
mov
adc
inc
ja
stos
xchg
loopne
and
push
jno
push
scas
or
lahf
push
mov
mov
pusha
pop
jmp
sbb
push
inc
icebp
dec
clc
rcrb
out
imul
xor
sbb
in
xchg
pushf
xchg
adc
xor
daa
aaa
ljmp
test
loope
jge
push
push
leave
daa
inc
adc
mov
inc
cmp
push
add
insb
lret
fcomps
dec
pop
aaa
pop
dec
mov
or
jle
jno
ds
loop
lea
pop
mov
push
dec
jmp
nop
jb
fsubs
sub
inc
or
and
mov
xchg
mov
sub
xor
jp
sbb
sbb
lods
out
es
adc
xchg
ret
fidivrl
sbb
mov
roll
mov
add
pushf
pop
push
mov
mov
cltd
in
adc
inc
jg
jo
and
ja
xor
fidivrl
or
push
orl
dec
fsub
pop
decl
mov
mov
into
stos
pop
mov
fs
shl
pop
insb
aas
cmp
outsb
xchg
test
fcomps
pop
loope
loop
movsb
and
push
add
jecxz
xchg
adc
jecxz
out
out
lea
mov
add
mov
xor
les
insb
sbb
lea
pop
jmp
cld
mov
invlpg
sub
outsl
adc
outsb
lret
xchg
or
sub
ds
lret
mov
loopne
dec
fxch
mov
fsubrs
cmp
fbstp
idiv
inc
cmp
out
inc
inc
movsb
mov
fstl
sbb
outsl
mov
jp
loopne
mov
aas
jae
push
mov
int
lods
in
addb
ds
dec
inc
xchg
dec
xor
mov
out
jge
add
and
jg
stos
in
mov
lods
cmp
pop
bound
xchg
gs
add
ja
mov
imul
jle
rolb
pop
dec
and
jns
ret
cmpsl
arpl
lea
mov
repnz
inc
dec
stos
jbe
pop
dec
and
or
aaa
push
mov
xchg
mov
add
ljmp
adc
movl
xchg
insl
in
add
test
lret
cmp
lds
adcb
sbb
negb
movsb
or
jb
xor
rcrb
fninit
kmovb
adc
daa
mov
test
adc
sbb
lea
adc
ds
fistl
jno
xor
es
jnp
xchg
loope
cmp
push
xor
mov
mulb
push
clc
sbb
inc
pop
sbb
fisubs
repz
out
sub
loopne
push
mov
mov
mov
xchg
ret
movb
sub
paddq
and
mov
std
bound
xor
push
add
cmove
cmp
mov
cmp
gs
jnp
pop
sahf
sti
sub
cmc
mov
pushf
jns
or
fists
outsl
pop
scas
hlt
add
hlt
inc
stos
adc
leave
lret
mov
ds
xor
inc
cmp
sub
cmp
dec
inc
cmc
xchg
mov
dec
mov
add
outsb
repnz
sbb
add
push
nop
pop
bound
std
stos
repnz
pop
dec
shr
or
mov
or
loope
pop
mov
aaa
xor
jle
arpl
mov
push
mov
mov
xchg
aaa
xchg
in
ficomps
jmp
lcall
xor
and
pop
add
lods
and
scas
jae
das
mov
stos
test
add
jo
jbe
outsl
mov
mov
into
dec
movsl
dec
fcompl
mov
mov
repz
fistl
ljmp
mov
ja
jecxz,pt
inc
and
jns
rorl
rdmsr
adc
push
lahf
sbb
in
shll
mov
sub
push
rcrl
outsb
or
jae
pop
ds
xchg
pusha
jb
cmp
ret
leave
push
ds
js
sub
mov
iret
jae
inc
jecxz
cmc
iret
sbb
iret
popa
mov
arpl
sahf
aam
les
cmp
pop
hlt
inc
inc
out
xor
mov
lods
fidivs
mov
fs
push
xchg
mov
jp
dec
es
stos
movsb
dec
fsubrl
addr16
testl
mov
push
mov
daa
mov
sub
mov
mov
and
push
outsb
lcall
adc
mov
jmp
lock
outsb
mov
mul
push
cmp
mov
xchg
and
cld
add
adc
icebp
cmp
mov
pop
xchg
fidivrs
adc
inc
loope
inc
dec
cli
movsb
hlt
adcl
ret
and
mov
in
or
adc
sti
adc
push
loop
mov
das
lock
push
jae
cmp
mov
mov
incl
cmc
bound
lods
jae
sbb
or
loopne
rclb
test
sub
push
jmp
mov
flds
xchg
xchg
dec
sbb
icebp
pop
dec
popa
ret
aaa
fwait
jmp
adc
ret
inc
sub
scas
testb
daa
loopne
aam
inc
jp
mov
pop
out
in
mov
mov
test
dec
mov
aad
ja
js
sbb
jne
cmp
pop
lods
xorb
add
clc
sub
rorb
fdivp
mov
lea
popf
jbe
gs
outsl
sub
xchg
xor
sub
mov
adc
ljmp
sub
push
adc
pop
mov
nop
movsl
jg
fcmovnb
out
aas
jnp
stc
mov
es
jae
fistpl
adc
lahf
jmp
dec
mov
ret
push
dec
pop
or
in
xchg
sub
ja
pusha
cltd
mov
lods
fdiv
cli
fcoml
pop
outsl
fnsave
inc
push
pop
add
inc
inc
mov
shll
add
inc
sbb
or
inc
sub
outsl
xchg
int3
or
mov
shlb
adc
mov
insl
add
dec
aam
mov
push
lgs
leave
cmc
into
lods
cmp
jge
sub
ljmp
movsb
iret
bound
call
jo
add
inc
xor
leave
repz
ja
lods
js
jmp
xchg
cmp
repz
push
mov
ds
cmp
popf
xorb
outsb
in
cwtl
out
in
push
push
jp
xor
fs
or
imul
loope
add
test
adc
ljmp
push
test
fdivrl
incl
sbb
mov
aam
sbb
cmp
and
or
xchg
jg
mov
stos
shr
xlat
enter
lret
lret
outsb
lret
dec
adcb
pop
popf
cmp
sub
xor
enter
and
dec
or
cmc
and
mov
mov
pop
inc
repnz
xchg
sub
imul
js
jno
int3
adc
jmp
jg
pop
and
scas
insb
data16
and
or
mov
push
les
cmp
push
mov
mov
mov
jecxz
and
or
jl
loopne
fldl2t
push
cmp
sbb
and
and
into
mov
and
in
repz
xchg
insl
xchg
and
push
or
loopne
jmp
jp
call
adc
and
loopne
sbb
lea
std
mov
adc
fnstsw
test
dec
aas
adc
movsb
or
iret
sti
inc
sbb
dec
ljmp
fists
xor
push
sub
pop
pushf
lods
test
pop
pop
mov
sbb
pop
push
outsl
fisttpll
imul
ficoml
xchg
insl
dec
or
and
xchg
out
fisubl
movl
fisttpl
jge
movsbl
jl
push
loopne
into
pushf
inc
mov
push
clc
imul
dec
call
pop
pop
cmp
out
popa
popa
popf
add
jmp
movsl
mov
es
daa
popa
push
inc
add
sahf
push
popl
filds
nop
sbb
shlb
jb
pop
insb
and
jp
lea
bound
imul
push
dec
pop
test
push
stos
xchg
outsb
cmp
jg
mov
je
mov
cs
nop
data16
xchg
adc
push
out
sarl
sbb
cwtl
sub
inc
popl
pop
xchg
leave
lret
and
sub
rolb
jmp
xchg
push
stos
mov
fldcw
les
xchg
lods
sahf
dec
xchg
int
mov
insb
mov
mov
test
in
out
pop
addr16
push
inc
xchg
and
xor
movups
push
dec
cmp
enter
outsb
pushf
test
mov
dec
les
insb
pop
div
xchg
pop
adc
dec
adcb
inc
mov
lret
jg
mov
mov
jecxz
cmpb
inc
jne
ret
cmp
stos
testl
xchg
mov
jb
ss
sbb
outsl
xchg
sbb
push
add
es
stos
xor
and
bound
sub
cmpsb
jp
inc
xchg
pop
pop
add
test
sub
xchg
sub
cmp
sbb
hlt
or
jl
xchg
xor
xchg
adc
mov
xor
das
shr
add
sarb
loopne
loop
ja
pusha
lock
insl
sub
cmc
pop
aaa
xchg
mov
in
and
mov
shlb
inc
or
pop
mov
cmpl
xchg
gs
inc
jge
pop
mov
jmp
mov
fs
in
and
dec
enter
lock
cmpsb
fld
cmp
mov
sbb
mov
sbb
jg
or
inc
test
fidivs
cmp
xor
sub
and
jno
imul
xchg
fisttpll
ss
sbb
mov
or
loop
mov
jle
jecxz
je
and
test
pop
and
push
cmp
adc
inc
mov
xchg
jge
dec
jmp
hlt
inc
in
flds
mov
in
jnp
or
aaa
or
mov
cmp
and
lahf
push
mov
popf
add
or
xchg
hlt
mov
xor
add
call
mov
push
adcl
mov
aad
pop
sbb
orb
lcall
repnz
jns
sub
out
mov
jo
sbb
xor
push
or
ds
loopne
push
dec
inc
shlb
xchg
sbb
mov
sahf
lods
std
xchg
rcr
mov
call
divl
cmp
xlat
inc
mov
lret
addr16
push
sbb
fcoml
imull
xor
cmp
mov
inc
add
mov
mov
hlt
pop
repnz
pop
mov
aad
insb
add
test
adc
int3
xchg
xor
test
ss
divl
out
call
dec
cs
mov
dec
jnp
ds
jle
lods
cli
push
jg
into
aad
fstpt
jmp
cltd
shll
or
addr16
loope
outsb
in
sub
mov
into
sub
and
mov
subb
jge
pop
testb
jl
xor
and
ljmp
lret
in
sbb
cmp
adc
xor
adc
outsb
ds
mov
leave
mov
xor
sti
loopne
lea
add
movsl
into
cs
adc
jmp
icebp
fidivs
aaa
cmpsl
adc
xchg
stc
push
mov
clc
lods
hlt
imul
mov
or
pop
test
dec
xchg
imul
xor
pop
add
jnp
xor
je
jb
mov
xlat
out
mov
mov
addr16
aam
xchg
pop
mov
pop
jo
loope
xchg
and
inc
lahf
sub
dec
pop
dec
xchg
mov
int
dec
leave
jge
ret
es
mov
push
outsl
jg
pushf
imul
xor
mov
add
inc
inc
and
mov
in
in
lods
mov
cmp
jno
push
jp
sbb
punpcklwd
sti
lcall
pop
loope
out
push
jnp
jnp
add
mov
clc
push
dec
cmp
pop
sbb
test
ljmp
pop
mov
mov
mov
xchg
aam
pop
leave
sbb
hlt
dec
inc
aad
xor
jmp
or
mov
lret
mov
push
and
jg
loopne
sub
or
aad
cltd
sbbb
pushf
push
shlb
push
mov
or
xchg
imul
mov
addr16
sub
inc
sbb
daa
add
push
mov
push
sbb
push
pop
dec
les
sub
xchg
adc
sub
js
dec
add
or
inc
jmp
shlb
sahf
push
or
call
jns
mov
push
fistpl
mov
push
sub
aad
sub
sub
sarb
cwtl
cmp
cltd
lret
or
fildll
adc
rcl
repnz
sub
cmp
sbb
mov
fs
dec
cmpsb
jmp
push
pop
into
add
subb
pop
lahf
dec
aad
sub
out
or
dec
push
adc
add
inc
clc
les
shlb
insl
mov
flds
mov
daa
mov
fcomip
out
hlt
jb
sbb
imul
mov
sbb
rorb
inc
jl
dec
addl
in
pop
and
lods
or
imulb
or
and
fimull
test
lret
sub
js
cwtl
sub
and
pop
jle
out
cmp
stos
push
cmp
out
jl
dec
dec
adc
pushl
sbb
xchg
addr16
fsubr
mov
outsl
nop
daa
jne
fdivs
out
adc
and
movsl
data16
aad
lret
and
dec
in
jnp
ds
enter
aam
dec
mov
xor
push
das
ja
outsb
lcall
gs
sub
movsb
sub
ljmp
sbb
stos
rcl
movb
dec
cmp
lret
out
add
nop
movsb
pop
push
cmpsl
loope
leave
mov
mov
dec
inc
sbb
mov
sub
mov
inc
add
fistpl
or
jo
mov
pop
cmc
xor
jns
clc
jbe
lret
jg
pushw
out
cmpsl
imul
es
mov
xchg
enter
inc
sub
andb
es
fnstcw
jmp
cmp
aas
jo
dec
pop
outsl
sarb
mov
jns
xlat
mov
ror
pop
cmp
add
aaa
and
push
mov
xchg
adc
mov
aas
repnz
cmpl
pop
push
inc
pop
cwtl
enter
cmp
sub
xchg
fsubs
cmp
shrl
and
cs
jmp
gs
xor
pop
xchg
inc
push
cmp
cwtl
mov
xchg
ret
fwait
jle
pop
outsb
loope
cld
push
push
and
push
mov
xor
pop
test
add
pop
in
add
stos
xchg
jnp
movsl
lret
icebp
dec
push
jg
paddw
les
add
ljmp
lret
pop
mulb
cmp
cmp
in
sub
sbb
enter
dec
lret
aas
mov
mov
pop
ja
das
pop
jl
push
mov
xchg
nop
dec
mov
fcmovne
jg
shll
jnp
cmpsb
movsl
in
subb
loopne
ja
inc
mov
out
mov
jge
mov
jle
xor
popf
aaa
mov
add
pushl
or
mov
jno
jp
pop
fdivrs
mov
and
mov
and
mov
rcr
sbb
lods
cmpsb
fadds
fcom
add
ficoms
jg
xchg
mov
fildll
lahf
andl
xchg
cmp
stos
and
cmpsb
out
pop
lods
adc
insb
dec
std
and
stos
lcall
shll
or
sbb
jae
inc
pushf
arpl
cmc
lret
outsb
rcll
vpmadd52luq
addr16
pusha
ds
sub
sub
cltd
imul
les
inc
dec
jg
lahf
or
test
sti
cltd
push
mov
xchg
outsb
cld
loopne
stos
popf
xlat
sbb
xchg
jno
push
and
pop
aaa
rcpps
imul
imul
es
mov
pop
cwtl
xchg
jle
loopne
mov
dec
nop
jp
jnp
xchg
dec
cmpl
push
call
sub
loope
adc
js
cmp
inc
jns
rclb
mov
lret
leave
test
adc
test
iret
sbb
adc
push
push
dec
inc
or
jns
mov
test
lret
adc
aam
add
sub
add
mov
mov
cwtl
popa
dec
mov
push
mov
scas
scas
cld
mov
pop
sub
out
add
sub
mov
push
mov
fabs
out
inc
stos
icebp
in
outsl
push
pop
into
lcall
shlb
push
dec
rolb
hlt
rorb
icebp
pop
xor
stos
out
pop
xor
je
aas
addl
push
inc
push
mov
cwtl
popf
lahf
mov
bound
mov
out
push
int
adc
pop
aaa
ret
fmul
addr16
pop
lea
cli
add
out
cmp
jg
push
aaa
std
fldl
movsl
mov
iret
sub
cmp
loop
lret
inc
pop
std
movsb
adc
cmp
inc
mov
lret
xchg
idivl
lea
fwait
sbb
test
cmp
fstps
cmpb
fidivl
lea
dec
adc
imul
mulb
dec
inc
jge
jp
dec
push
xchg
lods
sbb
movsb
aaa
aaa
jb
mov
jae
incb
je
jmp
or
repz
in
lds
and
pop
or
pop
sub
cmp
repnz
jecxz
lock
fldenv
lds
icebp
adc
imul
inc
or
iret
cs
loope
jle
pop
jecxz
mov
mov
cmp
fs
cld
sub
push
jne
or
and
mov
mov
mov
xchg
mov
aad
push
aas
or
bound
arpl
push
cmpl
jb
enter
fucom
and
shll
je
lods
pushf
inc
js
pop
fmul
dec
repz
cltd
mov
pop
xor
fldt
and
push
xor
aam
inc
cld
fwait
mov
push
fldenv
dec
inc
jecxz
sub
ror
mov
sbb
sahf
int3
addr16
out
jno
push
pop
loopne
xor
in
xor
adc
jg
or
xchg
cltd
mov
dec
sub
insl
gs
icebp
cmp
mov
lret
test
dec
xor
mov
loope
ret
cmp
test
imul
push
in
and
out
add
or
sub
or
arpl
inc
or
push
adc
fucomi
dec
sbb
and
cmp
imul
daa
movsl
in
outsl
repz
mov
mov
mov
in
popa
mov
mov
or
arpl
in
jl
sub
mov
xchg
call
dec
ljmp
enter
stos
incb
xchg
popf
cmpsb
add
xchg
outsl
jns
js
adcb
test
dec
jmp
sbbb
and
sti
dec
shrb
xor
inc
mov
pushf
mov
mov
adc
scas
xchg
sub
jns
xor
push
sbb
cmp
fcoms
scas
push
addb
adcl
lods
cwtl
sub
out
movsl
jecxz
xchg
jge
inc
aad
popa
gs
cmp
push
add
dec
push
mov
lods
jmp
sub
xchg
pop
xchg
je
jl
adc
pop
cltd
cmp
inc
push
pusha
mov
shrl
push
sbb
mov
jp
loop
xchg
sub
pop
mov
mov
cmp
push
pop
cmpsl
pop
imul
stos
stc
pusha
inc
inc
mov
out
inc
outsb
xor
sub
iret
pop
mov
addr16
jnp
pop
lret
add
xchg
mov
push
xor
je
or
cli
shrb
pop
jne
jb
and
stc
fdivs
call
out
les
add
sbb
pop
sbb
dec
xchg
data16
push
pushf
sbb
dec
clc
fcoms
or
xchg
incl
push
mov
loop
pop
cmp
add
std
rolb
ret
les
bound
in
lret
add
test
in
fcoms
dec
lret
xor
adc
test
adc
andl
data16
test
popa
add
inc
sub
dec
in
mov
je
pop
push
mov
dec
leave
pop
push
jle
add
fucomi
xchg
shrb
clc
andl
mov
fstpl
xor
nop
scas
mov
mov
jge
rorb
ds
shlb
inc
popa
adc
dec
pop
push
hlt
push
and
inc
lahf
popf
sahf
stos
imul
xor
jno
test
incb
xor
cmp
addr16
inc
mov
push
je
mov
mov
fsts
xor
sti
dec
out
inc
mov
lods
popf
push
push
jg
in
or
inc
add
push
repz
nop
pop
out
and
mov
outsb
sub
cmpsl
rorl
iret
movsb
mov
out
test
mov
push
jae
jnp
fidivl
mov
int3
and
insl
or
lock
sub
adc
jl
lcall
xor
and
std
xchg
imul
xor
test
repz
rep
rep
sti
or
sub
jecxz
xchg
dec
pop
xchg
push
push
insb
mov
sbb
push
or
mov
or
rcrb
insb
in
imul
aad
mov
adc
jno
xchg
jmp
mov
pop
sti
xchg
xor
imul
test
pop
mov
jne
bound
xchg
repnz
lcall
test
loopne
lds
or
les
mov
mov
mov
pop
ss
mov
mov
test
adc
ret
push
in
pushf
jns
inc
dec
inc
xor
sbb
pusha
test
das
push
mov
jns
fs
xchg
push
vpcmpgtd
cmpsb
cltd
inc
dec
ret
arpl
in
push
imul
xor
sub
or
aaa
loopne
in
nop
in
imul
hlt
mov
add
cli
sti
into
fmul
add
and
ret
pop
iret
js
insb
dec
pop
out
dec
das
jecxz
ds
sbb
pop
xchg
test
aad
sbb
ss
das
inc
sub
andl
cmp
push
loopne
lea
jno
fdivrs
dec
push
es
pop
insb
fcomp
lret
and
subb
leave
test
dec
lret
push
inc
in
fs
sub
leave
jae
push
xchg
jo
cmp
insb
pop
mov
mov
test
pop
pop
sbb
sbbl
sub
pop
and
mov
sbb
cltd
popa
push
jge
cmc
jae
bound
cmp
fistpll
repz
adc
iret
mov
add
test
in
mov
out
xor
mov
add
jge
mov
cmp
into
mov
adc
popa
pushf
ret
test
shrl
jne
push
mov
std
jle
je
sti
mov
decb
loopne
add
push
nop
nop
gs
mov
and
mov
pop
outsb
push
iret
addr16
ss
aad
ss
pop
adc
and
rcr
cmp
or
sub
dec
fimull
dec
mov
sbb
xchg
jno
out
mov
sbb
in
out
sti
pop
cmp
xchg
mov
pop
pop
fiaddl
adc
mov
or
mov
xor
xchg
push
pop
stos
jge
jo
sbb
popf
push
sbb
call
nop
js
insb
sbb
xor
xor
mov
xor
pop
mov
pusha
stos
mov
xor
mov
lods
jmp
loope
sbb
or
bound
push
add
xor
jmp
jne
lret
mov
jnp
cmpps
push
or
mov
loope
mov
lock
pop
jmp
adc
in
pushf
cwtl
fldpi
popf
into
lcall
ss
adc
scas
testl
push
add
sub
movsl
into
lret
ljmp
sbb
mov
or
cli
test
or
xchg
xchg
testb
dec
loopne
jnp
xchg
dec
repnz
mov
jmp
pop
cmpsl
cmp
xchg
add
fsubp
pop
popf
xchg
cwtl
pavgb
adc
xchg
mov
mov
cmpsl
push
test
sbb
cmp
repnz
pop
lcall
push
or
decb
ret
cmp
lahf
push
xlat
shlb
pushf
cmp
cmc
mov
mov
pop
inc
repnz
adc
into
xchg
and
mov
xchg
adc
dec
mov
fucompp
mov
icebp
pop
jae
scas
push
push
mov
das
sub
ljmp
lods
dec
mov
pop
add
lret
sub
cmc
push
jge
pop
xor
mov
xor
push
lods
jmp
mulb
jge
sub
ljmp
daa
fistpl
mov
mov
sti
adc
test
sbb
mov
aas
fwait
sbb
das
push
imul
mov
pop
mov
sub
pop
cmpsb
cltd
sbb
lods
lds
xor
shll
jp,pn
sbb
push
jns
mov
pop
ljmp
outsl
adc
xchg
movsb
jbe
enter
push
fldenv
inc
insb
in
sub
and
inc
clc
push
test
mov
dec
in
mov
sti
stos
push
gs
dec
sbb
cld
xchg
add
into
jmp
popf
sbb
dec
lds
jnp
bound
and
cmpsb
sub
sar
lret
js
daa
das
cmp
hlt
movsb
enter
lret
mov
les
or
pusha
test
cmp
lods
std
iret
aas
nop
fwait
push
fistpl
pop
pop
into
cmp
adc
ja
loop
enter
sahf
xchg
mov
pop
jg
outsl
sbbl
mov
inc
sbb
loop
pop
shll
ss
orb
nop
fst
jmp
jg
adc
sahf
cwtl
add
jle
push
mov
add
iret
pop
ficompl
lret
lahf
std
dec
jmp
hlt
mov
xchg
ds
popa
push
je
push
mov
js
cld
jmp
inc
iret
pop
out
xor
sbb
enter
cmpsl
into
push
pop
jp
sub
sbb
mov
sub
je
ljmp
add
int
data16
pop
pop
arpl
push
adc
mov
testb
cmpsl
xor
jno
push
frndint
add
and
sbb
out
stos
mov
lret
cwtl
xchg
insl
pop
stos
jecxz
arpl
jp
sahf
cmpsl
js
cltd
lahf
or
scas
mov
in
fmull
mov
inc
add
inc
xchg
or
sarl
adc
xor
cmc
dec
ljmp
test
sub
xchg
mov
and
sbb
xchg
ja
cld
cmp
add
lahf
stos
not
pop
or
dec
dec
pop
loope
test
xor
xchg
cmc
int3
add
inc
inc
test
or
mov
out
push
jns
mov
in
adc
mov
out
pop
out
sahf
ret
pushf
scas
add
out
in
xor
sub
adc
cmpsb
add
lock
xor
cmpsl
fildl
jle
adc
movsl
outsl
nop
insb
xchg
mov
cs
or
mov
cmp
xor
jecxz
add
popf
sub
dec
sahf
aaa
repz
mov
test
lock
loop
je
insb
push
in
testb
mov
jne
xor
arpl
inc
frstor
xor
fstl
inc
xchg
fldl
rcrb
xchg
cmpsb
cmp
mov
jo
mov
dec
aaa
test
or
xchg
sbb
add
sub
gs
movsb
xor
inc
imul
jl
cmp
incb
mov
xchg
mov
jns
lahf
add
cmc
sub
fidivs
lahf
push
sar
addr16
test
ja
pop
dec
xor
mov
test
ljmp
add
insb
cmpsb
ljmp
rcrl
sub
pop
sub
dec
pop
sbb
int
pusha
nop
lods
pop
sbb
pop
lahf
fsubrs
mov
sbb
dec
or
inc
cltd
inc
sub
and
add
js
fstps
cld
shrl
pop
or
je
test
xor
mov
jp
cmp
sub
push
xchg
mov
or
int
dec
pushf
add
adc
push
jl
mov
push
lret
push
shll
subl
pop
div
jl
out
pop
outsl
sbbl
in
sarb
dec
mov
dec
ljmp
sbbb
jmp
inc
jb
mov
in
pop
mov
jne
pop
setp
aas
pop
mov
push
xchg
gs
adc
add
ljmp
imul
cmp
mov
sub
or
insl
icebp
xchg
sub
aam
aad
flds
ja
sub
mov
fwait
loopne
inc
pop
icebp
xor
or
sbb
lret
cli
cmp
aam
or
jp
sbb
jmp
jno
dec
js
fwait
or
jmp
cs
insl
mov
dec
mov
ret
sbb
mov
sub
hlt
cmp
fs
and
jl
xchg
sahf
dec
jno
mov
mov
xchg
mov
fdivrp
dec
in
test
push
dec
adcl
sar
addr16
sbb
out
add
clc
jne
je
push
sbb
aad
pop
sbb
xor
insl
int
mov
movsl
test
movb
sub
fs
pop
popf
mov
or
pusha
lock
push
inc
jmp
aaa
mov
or
nop
jb
and
push
subl
or
ja
jb
push
push
shrl
push
add
xor
push
jbe
inc
fdivl
mov
lahf
lret
lds
insb
cltd
xchg
daa
fcoml
mov
mov
dec
call
adc
test
movsb
lds
loope
adc
and
movsb
cli
shll
in
mov
out
pop
xorl
push
scas
data16
adc
push
clc
scas
mov
rol
and
scas
mov
lock
ja
out
xor
in
or
push
fcmovbe
xor
in
int
jne
mov
mov
xchg
push
cwtl
aam
jae
pop
flds
shlb
lds
sub
repnz
adcl
pop
or
leave
jmp
sub
xchg
mov
dec
push
adc
stos
nop
and
fcom
jns
mull
jmp
test
mov
pop
mov
cwtl
mov
sub
enter
inc
js
push
icebp
mov
inc
mov
movsb
popf
xchg
or
test
add
jecxz
stos
jbe
mov
and
or
insb
push
cltd
xlat
mov
shl
and
pop
subl
dec
dec
add
fidivrs
cmp
roll
xchg
mov
cmp
push
aam
add
aam
mov
sti
test
ss
aas
sub
mov
inc
push
push
mov
adc
pop
movsl
in
mov
mov
scas
js
inc
jmp
outsl
lods
dec
and
dec
inc
sub
xchg
inc
es
out
aam
popf
in
jg
cmp
aad
push
lods
rolb
inc
cld
les
fwait
cmpsb
repz
loope
rol
test
lahf
ret
pop
pop
in
xor
stos
imul
inc
jmp
pop
jbe
sti
mov
cld
push
lea
les
inc
pop
add
pop
add
arpl
xchg
arpl
pushf
aam
dec
jmp
adc
pop
xchg
dec
scas
inc
xchg
mov
loope
outsb
push
clc
add
inc
iret
scas
xchg
cltd
cmp
scas
into
mov
mov
out
call
std
in
bound
sub
push
adc
add
cmp
mov
mov
adc
and
mov
lods
jnp
dec
push
dec
push
cmp
xor
adc
ficomps
inc
lds
dec
xchg
addr16
and
sbb
popf
mov
pusha
adc
sub
sub
enter
xor
dec
aad
pop
or
pop
imul
les
insl
test
lds
add
push
les
mov
ds
out
pop
jo
lds
test
jo
shrb
aas
popf
inc
jno
stos
sub
jbe
push
inc
out
dec
adc
fdivrl
popf
iret
stos
jmp
push
repnz
in
mov
xlat
or
pusha
dec
mov
fildll
mov
sub
jae
cli
xorl
add
cmp
arpl
dec
lahf
lods
scas
sub
mov
jo
movsl
lods
mov
xchg
sbb
ficompl
rolb
test
rcr
mov
shll
mov
cmp
jo
cmpsb
cli
and
xchg
jg
sbb
orl
sti
xchg
dec
mov
and
pop
mov
xor
test
push
cmpsl
js
pop
mov
leave
cs
add
xchg
jl
adc
add
dec
push
dec
push
divl
sub
ret
repz
imul
and
inc
cmp
stc
bound
jge
cld
or
inc
dec
mov
addr16
push
or
add
js
push
inc
jge
ficoml
sub
das
jmp
lods
mov
push
out
insb
xor
jb
jo
stc
loop
push
add
add
popf
dec
jnp
sbb
push
cs
jmp
lahf
mov
xor
in
cmpsb
insb
in
sub
lds
sahf
jle
ss
jns
xor
add
xchg
andb
in
xor
ret
outsb
ja
jnp
cmp
sub
or
es
negl
push
pop
dec
gs
aaa
mov
mov
cltd
mov
imul
daa
xor
aam
loop
ss
shrb
gs
cmp
fs
push
imull
pusha
mov
movsb
pop
shrl
pop
jo
pop
cmc
or
imul
lods
push
mov
repz
pop
leave
mov
sbb
mov
jb
int
xlat
sub
inc
popf
fld
roll
inc
out
cli
cwtl
ljmp
out
jmp
adc
arpl
outsb
pop
mov
addr16
mov
jp
insl
fsubrl
xchg
inc
xchg
aaa
mov
jmp
je
push
js
scas
lret
inc
fmull
in
dec
sub
mov
xchg
in
xor
xor
lods
dec
xchg
xor
aaa
icebp
pop
sbb
push
ret
cmp
inc
pop
fdivr
popf
pop
jne
cmc
ds
sti
mov
mov
aad
movsb
xchg
ljmp
push
cmp
cmp
or
pop
mov
sahf
xchg
mov
daa
push
add
aam
in
mov
push
shlb
hlt
out
pop
mov
rol
call
cli
cmp
push
pop
pop
sub
aaa
dec
push
int
mov
loopne
notl
stos
dec
mov
mov
adc
lds
mov
ret
inc
dec
in
repnz
push
int
pop
sub
mov
ss
mov
jle
dec
jecxz
orb
jmp
mov
mov
pop
or
dec
push
cmpsb
xlat
push
inc
jo
push
mull
stc
shll
orb
clc
mov
repz
jbe
shlb
and
pop
dec
pop
jg
xor
pmaddwd
dec
push
aaa
popf
or
aas
xchg
popa
adcl
aaa
aas
cmc
fs
lea
jecxz
and
lret
cmp
jecxz
insl
cmpps
daa
cltd
aam
sahf
pop
and
loopne
jecxz
cmp
mov
xlat
jmp
ja
and
mov
jne
and
stos
inc
testb
xlat
outsb
jbe
lock
inc
jecxz
mov
in
das
roll
cmpsb
sub
jns
cmpsb
mov
sub
push
mov
pop
xor
rolb
pop
mov
subl
shr
dec
jno
inc
je
sbb
insl
icebp
sub
pop
jae
xchg
mov
lret
into
aad
andl
cmp
add
mov
cs
sbb
enter
push
jne
out
sbb
xor
cmp
out
sbb
sbbb
and
fistpll
js
mov
test
fsubrs
out
push
or
dec
test
rol
xor
xor
add
in
inc
pop
adc
sar
setne
jno
and
inc
mov
rcr
mov
fcom
push
pop
cmp
jmp
in
daa
data16
addr16
stos
push
adc
mov
out
add
and
and
in
sti
add
je
mov
andl
mov
sti
mov
or
out
hlt
popa
fs
sub
and
adc
std
sub
in
mov
add
mov
mov
dec
insl
push
mov
sbb
pop
test
add
scas
sub
fisubl
fs
mov
arpl
mov
or
idivb
jmp
insb
inc
xor
lock
pushf
test
stos
cmp
pushf
mov
rep
push
js
in
enter
std
xor
sbb
lret
imul
inc
mov
xorl
xchg
cmp
xchg
leave
scas
and
xchg
les
out
or
pop
adc
sub
daa
fbstp
and
es
jno
sub
mov
cmpsl
xchg
mov
test
nop
outsb
std
sarb
stos
xor
mov
pop
outsl
leave
data16
pusha
loop
mov
sub
hlt
push
push
or
inc
pop
jecxz
sarb
mov
and
ds
mov
setl
int3
roll
imul
out
sahf
jns
push
xchg
call
hlt
rcr
movsl
cmpsb
dec
and
enter
dec
dec
push
mov
push
adc
fcoml
mov
addl
and
mov
push
stos
das
lcall
inc
stos
testl
or
mov
stos
rcrl
mov
jp
and
in
xor
inc
sbb
mov
movlps
imul
xchg
test
dec
push
cmpl
lea
pop
cli
sub
xchg
nop
mov
inc
insl
aas
jae
icebp
adc
cmp
pop
sbb
rcrb
cmp
cwtl
jno
jg
movsl
xor
inc
shrb
jne
sub
shrb
push
or
dec
test
and
dec
xor
ss
sarl
push
mov
xlat
pop
mov
jne
ret
sbb
sub
in
nop
cmp
push
js
in
aad
int
fsub
imul
movsb
in
std
sub
test
adc
inc
cmp
ja
fnstsw
dec
push
out
adc
xor
adc
mov
mov
scas
dec
sbbb
or
sbb
shll
xor
push
sub
int3
adc
inc
es
rcl
jle
add
push
xor
dec
movsb
cmp
dec
lahf
adc
dec
push
pop
push
add
and
bndstx
mov
and
ljmp
ficoms
push
xor
mov
jge
pushw
lret
ret
and
push
dec
push
mov
addr16
in
mov
sbb
cwtl
push
mov
xchg
mov
cmp
arpl
pushl
mov
mov
lods
xchg
test
push
cmp
jp
dec
mov
inc
mov
lods
mov
in
mov
push
jmp
dec
rclb
adc
and
xor
arpl
pop
mov
pop
pop
push
add
jns
shrl
jo
cmp
mov
fs
push
lods
pop
push
lock
outsb
jle
adc
in
icebp
push
jb
mov
mov
add
into
fwait
popa
sbb
movsl
jmp
adc
int3
pop
jns
inc
adc
sbb
movsb
sbb
repz
mov
or
cmpl
repz
cli
outsl
adc
dec
out
pop
lcall
jne
fimull
leave
and
pop
bound
ret
push
adc
mov
mov
repz
mov
aas
bnd
jbe,pn
adc
jecxz
lret
xor
add
loop
pop
inc
je
pushf
lods
stos
and
mov
jae
cs
in
lret
adc
xchg
dec
incb
popa
inc
rolb
xchg
sbb
jg
clc
inc
mov
ror
xor
mul
stos
aas
lret
push
xchg
in
sbb
cmp
cmpsb
ret
pushf
mov
testl
subl
out
aad
sbb
sbb
mov
mov
int3
loopne
scas
mov
inc
push
add
ja
dec
push
ds
sbb
gs
in
adc
ja
ss
and
inc
sbb
sarl
sbb
dec
roll
das
test
and
mov
jge
shll
inc
call
enter
push
lds
push
ret
sbb
or
mov
xor
aas
ljmp
xchg
lcall
push
inc
je
sub
dec
mov
nop
and
xlat
in
and
aas
pop
fadd
gs
movsb
stos
mul
jecxz
xor
push
mov
int
xor
andl
push
stc
in
enter
jnp
inc
fcomps
repz
shrb
adc
into
mov
or
dec
dec
iret
add
je
push
cmpb
mov
cld
popa
fcoml
sbb
cmp
pop
adc
nop
movl
out
out
insl
in
xchg
lock
clc
pop
nop
ja
and
shlb
pushf
shl
and
dec
mov
sarl
movsb
dec
adc
xchg
inc
mov
rcll
ret
insl
pushf
push
fmull
fmul
or
in
cmpsl
push
push
push
push
pop
push
or
add
mov
mov
sti
add
cmovp
int3
rcr
and
cmp
xchg
jle
dec
jl
popf
fcmovb
outsl
mov
cmc
shr
cmc
add
fstps
xchg
jp
mov
loopne
test
cmp
cltd
xchg
cmp
cmp
hlt
aad
scas
fs
add
stc
xchg
ja
sbb
pop
aas
pusha
adc
in
xor
inc
imul
gs
mov
xchg
push
push
test
scas
out
out
sbb
xchg
rorb
jecxz
inc
stc
fdiv
cmp
mov
insb
dec
mov
sub
cli
popf
cmc
ja
or
dec
mov
loopne
aad
sub
xor
out
roll
mov
mov
dec
sbb
fildl
xor
pop
imul
jno
xchg
adc
out
jmp
inc
mov
adc
popa
jge
into
adc
dec
mov
mov
adc
push
test
fwait
in
icebp
add
inc
orb
imul
mov
adc
or
movsl
fwait
adc
inc
cmp
xchg
outsb
addb
fsubp
and
je
mov
dec
idivb
mov
mov
dec
stos
sub
es
push
cs
fists
shll
fisubrl
paddw
xor
push
dec
dec
dec
shll
adc
cmpsb
push
fwait
pushf
push
clc
jno
pop
add
rcrl
mov
inc
invd
stos
gs
jge
scas
xor
pop
out
mov
mov
lahf
sti
fninit
imul
movsl
push
mov
cmp
cmp
push
test
sbb
pop
les
mov
insb
add
pop
sub
inc
movsl
ds
mov
in
pop
arpl
std
outsb
stos
mov
adc
sar
je
pop
xor
inc
sub
fcmove
adc
lock
out
movsb
int
cmc
lods
or
cmc
out
mov
bnd
rolb
insb
pop
insl
mov
push
cmp
mov
and
outsl
sub
lock
mov
push
js
inc
dec
notb
dec
ljmp
jle,pn
cmp
fidivrl
nop
and
sahf
xchg
adc
inc
xor
or
or
xor
mov
jb
adc
mov
lods
in
mov
stc
aas
xchg
push
or
lods
leave
movsb
cli
add
sbb
add
enter
jo
lcall
mov
mov
iret
lea
mov
movsl
and
inc
xchg
clc
idivl
movsl
push
xchg
jae
or
push
ljmp
add
ror
jae
movsl
xchg
inc
pop
ffree
mov
clc
ljmp
lock
pop
mov
inc
sbb
test
cmpsl
push
movsl
adc
ret
shll
mov
cltd
push
pop
jge
lods
mov
dec
mov
out
orb
push
stos
testb
icebp
adc
dec
mov
std
xor
mov
adc
and
jno
outsl
and
push
outsl
pop
inc
movsl
clc
data16
jp
jne
xchg
outsl
loop
out
ret
cmc
cltd
jo
scas
sub
push
outsb
test
das
xchg
arpl
sub
sbb
dec
mov
sti
lahf
xchg
movsb
imul
mov
cmp
iret
or
sub
dec
dec
in
push
mov
jo
cmc
pushf
aas
ja
push
cmp
scas
lcall
jae
mov
xchg
jo
shrl
enter
dec
aas
aad
int3
inc
cmc
jb
fwait
arpl
fidivrs
rorl
loope
push
inc
rclb
pushf
dec
xchg
cmp
jno
mull
add
pop
icebp
xor
pushf
rclb
push
sti
nop
inc
sub
rcll
push
aad
mov
ret
push
mov
xor
mov
jno
jo
fcompl
insb
iret
scas
jecxz
adc
inc
repnz
insl
add
popf
inc
lea
addr16
push
daa
scas
ds
xchg
and
nop
xor
xchg
mov
lods
imul
add
cmp
jp
mov
andb
sbb
push
aas
insb
add
inc
repz
test
pop
imul
je
or
stc
xchg
filds
xchg
bnd
scas
sarb
xchg
insl
sbb
loopne
pop
int3
ret
loope
mov
adc
adc
int3
sbb
sub
inc
adc
in
or
lahf
xor
int3
push
push
xor
pop
and
xor
xchg
mov
or
jge
ljmp
mov
out
call
cli
movsl
out
fcmovb
call
int
push
adc
mov
push
jbe
xchg
call
jecxz
cmp
cmc
rorl
sub
or
decl
movsb
adc
sub
and
mov
addr16
dec
xchg
pop
inc
or
loop
ret
jmp
lcall
cmpsl
xor
sbb
fwait
jle
mov
add
cs
xchg
mov
push
outsl
push
lret
fsts
hlt
xor
xor
mov
pop
shlb
push
je
xchg
cmp
sbb
jecxz
dec
sub
jmp
shrl
inc
aas
divb
push
xchg
and
jmp
out
pop
lcall
inc
dec
push
dec
or
mov
shlb
adc
cmp
adc
dec
mov
jo
xor
push
sbb
lods
push
das
lahf
adcl
out
add
dec
cmpsb
adc
popa
xchg
hlt
mov
mov
adc
insb
inc
xchg
push
in
call
pop
fidivrl
fsubrs
inc
and
iret
inc
in
xchg
push
outsl
jecxz
mov
xor
dec
aaa
pop
jno
lret
lds
add
fisubs
icebp
cmp
imul
mov
ja
fcmovbe
cmp
cmpb
and
js
call
and
xchg
mov
and
xlat
xor
sbb
xchg
ret
cmpsl
test
mov
aad
ja
shlb
not
pop
mov
mov
jge
insb
adc
jge
cmp
inc
jae
lods
cmp
lret
outsl
mov
lods
out
loopne
orb
arpl
mov
xor
adc
aad
enter
addr16
pop
scas
and
popa
and
sbb
andnps
enter
or
jb
adc
loope
adc
into
mov
xchg
int
sahf
aad
lahf
xchg
clc
jmp
mov
add
fwait
cmp
lcall
sub
in
mov
sbb
shl
pop
add
fwait
xchg
xor
sub
jge
xor
fisubs
mov
test
push
dec
and
aaa
jno
sub
xor
test
cmpb
mov
push
push
push
sbb
rolb
repnz
mov
into
xlat
jmp
rcrb
in
xor
sub
or
add
shl
dec
pop
dec
mov
and
dec
add
mov
mov
push
dec
jecxz
xor
outsl
jb
jbe
inc
push
push
push
scas
mov
mov
adc
fistl
sbb
ja
xor
cmp
push
data16
pusha
cmp
fiadds
adc
in
adc
xchg
pop
and
adc
mov
mov
lods
and
pop
cmpsb
movsb
nop
fildl
xchg
movsl
dec
aad
push
xchg
stc
push
loope
pop
jmp
and
ret
cli
imul
xchg
out
shrb
je
mov
imul
incb
scas
stos
or
data16
pop
cwtl
add
push
in
ds
cmp
in
mov
icebp
push
and
lea
int
out
sub
mov
pop
imul
sti
push
pop
push
xchg
push
sub
xor
pop
aas
or
mov
inc
xchg
cmp
mov
sti
lcall
xchg
add
inc
pop
shll
addl
in
inc
dec
es
xchg
pop
cs
arpl
sub
ss
push
adc
and
sahf
loopne
data16
fcomps
adc
testb
add
mov
negl
repnz
jbe
and
imul
test
lret
repz
jp
sub
and
push
sarb
inc
jge
mov
nop
out
jecxz
bound
into
sti
inc
xchg
cli
and
fcoml
imul
cli
rorl
adc
test
nop
js
or
xchg
outsl
arpl
shll
or
bound
pop
sbb
subb
iret
sub
xchg
push
sbb
adc
imul
sub
test
mov
movsl
gs
int3
cmp
jo
push
test
fisubs
cmp
mov
jmp
into
dec
dec
call
push
loope
fs
popf
cmp
fldenv
mov
jo
sbb
outsb
xchg
push
cmpb
lahf
jnp
inc
sti
mov
jb
pop
js
call
repz
aam
loop
or
in
mov
mov
mov
xor
xlat
cld
adc
sahf
dec
mov
jae
stos
mov
xchg
mov
mov
inc
push
in
pushf
jecxz
or
adc
test
xchg
int
push
add
add
jno
aaa
test
dec
mov
fs
scas
add
lock
add
call
adc
jg
push
mov
jmp
or
cmp
pop
mov
sahf
pop
mov
scas
jl
jmp
pop
sbb
icebp
inc
mov
leave
popf
in
arpl
cmpb
and
cmp
dec
arpl
mov
cli
shlb
xchg
daa
ret
mov
fnstcw
daa
lods
pop
mov
xchg
xlat
cmp
lods
jl
mov
mov
pushf
sbb
je
rcll
filds
hlt
out
fisubrl
mov
jecxz
cmp
mov
rcrb
xchg
fimull
pop
std
xchg
or
or
xchg
mov
ljmp
inc
repz
mov
aad
sub
add
and
xor
inc
jns
cmpsl
cwtl
dec
decb
clc
adc
cmp
fxch
push
mov
in
fwait
inc
out
shrl
xchg
or
in
sbb
and
add
ret
xchg
imul
mov
lret
das
fidivrs
xchg
mov
js
clc
sub
negl
roll
out
xchg
push
jge
pusha
outsb
sub
popaw
mov
test
xor
test
add
aaa
ljmp
inc
cltd
jmp
push
bound
nop
mov
push
pop
sbb
mov
adc
aas
arpl
add
cmp
fsubrp
inc
mov
add
mov
idivl
or
mov
out
outsl
mov
ja
sub
xor
inc
ja
pop
sub
fld
lcall
rol
fucom
pushf
cmp
lods
dec
dec
cmpsl
mov
mov
cli
in
repz
lds
popf
icebp
das
sahf
push
lahf
bound
call
mov
xor
inc
mov
iret
jl
mov
lds
fcoml
movsb
dec
cmp
shrl
pusha
xchg
cmp
popf
sub
sbb
cmp
mov
lods
stos
xchg
mov
repnz
fcoml
mov
dec
add
xchg
xor
push
mov
sbb
test
scas
pop
xor
mov
lds
jbe
lret
jg
iret
mov
mov
jns
mov
fdivrp
mov
dec
xchg
pop
dec
adc
out
in
or
inc
add
shll
and
dec
inc
xchg
lcall
sub
test
mov
test
dec
leave
add
adc
fcompl
xchg
mov
cmpl
inc
pop
fcoml
or
sbb
fistps
loop
mov
out
sub
xchg
dec
adc
sti
jo
add
aas
rcrb
in
fidivs
sub
les
outsb
mov
lahf
push
test
fldenv
push
inc
sbb
divl
lret
xchg
ret
sarb
shl
sbb
mov
pop
pop
sbb
mov
push
fs
out
adc
pop
das
cmc
cmp
test
push
outsl
lahf
js
sarb
out
inc
arpl
xchg
sub
jmp
pop
push
and
fisttps
xor
imul
pop
dec
lock
fdivl
dec
sbb
jl
push
cltd
clc
push
mov
movsb
xchg
stc
and
jo
pop
rcrb
cmp
xlat
inc
aam
cmp
in
xor
ret
je
xchg
call
jnp
ja
rcll
xchg
add
fdivrp
push
pop
xchg
push
popf
fsubs
call
sbbl
pop
ss
out
sbb
insb
inc
mov
inc
or
addr16
pusha
lret
sub
xor
ret
loop
ret
insl
pop
sub
sahf
inc
and
xor
adc
insl
bound
rcrb
xchg
mov
push
enter
sub
stos
loope
pop
and
fsub
insb
outsl
es
data16
mov
ss
mov
lahf
fwait
mov
push
in
fimuls
fsubrp
pop
popa
sbb
insl
das
xchg
jns
xor
movsb
sub
inc
outsb
stos
pusha
pop
fisttpl
iret
shrl
xlat
dec
ret
fisubrl
sbb
mov
or
clc
scas
and
jb
sub
loop
cmp
jmp
jnp
push
pusha
inc
xor
aam
leave
cltd
and
test
jne
xor
dec
jnp
sub
sbb
lea
popf
sbb
and
add
xlat
int
loopne
push
imul
or
fsubp
cli
jbe
mov
mulb
sub
ja
jle
je
repz
pop
adc
adc
jg
cmpsw
pop
jns
cmp
jbe
jnp
ljmp
imul
repnz
add
dec
js
aas
jnp
icebp
into
mov
enter
inc
ljmp
jne
es
shlb
cli
or
fsub
jnp
mov
xor
push
mov
in
xchg
scas
add
or
into
out
popa
push
mov
ja
xor
xchg
shlb
push
mov
pop
xchg
mov
test
int3
data16
xchg
ficoml
sub
lds
cmp
sbb
sub
cld
cli
je
lahf
insl
nop
addr16
test
mov
in
and
lcall
jmp
stos
cmp
call
dec
adc
jg
pop
mov
and
xor
inc
loopne
shlb
je
push
mov
dec
fisttpl
imulb
sahf
fsubrs
pop
jb
lret
jno
shll
int
jo
aam
test
rcrb
out
lock
add
and
jg
adc
pop
int
mov
jl
cmp
aas
push
or
aaa
pop
and
je
jb
lock
mov
dec
mov
mov
mov
push
enter
add
scas
das
xchg
mov
sti
push
cltd
mov
aam
in
sub
pop
mov
mov
dec
cmpsl
stos
add
and
hlt
push
dec
cmp
and
mov
inc
mov
add
sub
jns
dec
pop
loope
test
inc
push
and
xor
sbb
adc
cmp
adc
int
rol
ljmp
insl
mov
les
outsl
mov
push
cmp
jg
adc
aad
enter
test
test
mov
das
leave
and
dec
ds
js
jecxz
or
gs
inc
test
fadds
push
jmp
lea
in
loop
dec
add
sbbb
les
and
ljmp
adc
xlat
xor
mov
cmp
pop
data16
sbb
and
lea
cmp
call
mov
sbb
sub
xor
lods
pop
mov
jp
inc
pop
xorl
mov
jle
dec
jb
dec
shrl
icebp
inc
pop
sub
out
push
sub
pop
cltd
inc
pop
int
push
add
or
xor
add
test
sbb
mov
and
mov
dec
mov
mul
outsl
or
push
ja
stos
and
pop
cmp
decl
inc
xchg
inc
dec
sub
mov
pusha
aas
and
fdiv
sbb
scas
stc
sbb
or
mov
aas
cmp
sub
insb
pop
xchg
adc
bound
nop
or
call
shlb
aad
lgs
stos
enter
lods
aad
sbb
jl
add
dec
dec
xchg
cmp
add
out
lods
and
dec
jbe
mov
jns
ret
dec
or
js
daa
adc
icebp
test
test
cmp
mov
stc
enter
outsl
and
arpl
rcrl
sarb
inc
adc
xchg
mov
iret
das
and
es
into
jecxz
cmpb
pusha
cmc
lods
jo
cmp
fmull
adc
cmp
repnz
push
test
movl
sbb
das
aad
stc
dec
push
cmpsl
stc
aad
cmpsb
xor
call
test
int
xchg
cmpsb
or
lds
adc
cmp
or
repnz
lea
inc
and
pushf
push
mov
push
sbb
adc
dec
mov
xchg
jbe
cmp
push
cld
push
pop
inc
pop
sub
sti
mov
icebp
sbb
push
movsb
test
jecxz
push
push
mov
xor
and
loope
adc
adc
push
mov
addr16
mov
pop
jmp
pop
xchg
cmp
popa
mov
cmp
enter
rclb
stc
push
fs
into
imul
add
push
adc
sbbb
mov
shrb
popf
xchg
inc
mov
arpl
xchg
inc
mov
mov
inc
cmpsl
flds
movl
lods
cmp
mov
dec
jmp
pop
in
cltd
imul
lods
cmc
pop
add
inc
mov
test
outsb
pop
les
adc
mov
jbe
pop
mulps
mov
mov
ret
cmp
out
mov
sbb
mov
jp
adc
dec
icebp
aas
cmp
jb
rcrb
dec
jg
rolb
adc
imul
and
push
mov
inc
push
pop
es
test
test
ljmp
cmp
mov
push
out
fisttpl
cwtl
inc
jmp
out
sub
mov
arpl
mov
jg
lcall
jg
lds
sbb
int
adc
xlat
mov
pushf
icebp
ret
pop
mov
in
and
pop
cmp
ja
xor
cs
jecxz
test
orl
inc
mov
dec
mov
push
fs
loope
lcall
mov
fisubl
mov
scas
mov
push
pop
push
xorl
ret
ljmp
mov
or
mov
mov
adc
adc
movsl
das
pusha
xchg
hlt
inc
mov
xchg
jmp
enter
dec
xchg
dec
lret
aaa
push
pop
sub
adc
cmc
cmp
push
jnp
cltd
aad
push
insl
mov
mov
in
mov
jmp
xchg
jb
test
mov
pop
addb
cltd
in
push
xor
aad
sub
cs
femms
xor
in
dec
gs
pop
sbb
pushf
mov
fcmovne
popa
pop
inc
inc
pop
scas
jl
stc
pop
mov
mov
sti
cld
mov
cltd
test
aas
iret
adc
mov
es
inc
aam
jmp
jbe
loope
ss
loop
sti
mov
mov
mov
push
loopne
mov
push
push
cmc
add
mov
or
add
pop
adc
bound
cmc
in
mov
sbb
xchg
cmpsb
stos
or
inc
mov
push
push
gs
xchg
mov
cmp
sub
mov
push
andb
enter
xlat
sub
push
loopne
test
pop
pop
popa
jns
cmp
or
mov
mov
mov
dec
xor
mov
mov
push
insl
outsb
cmp
jb
lock
xor
aas
mov
cmp
mov
mov
inc
int
cmp
mov
out
cmpsl
in
shlb
add
into
sahf
mov
add
sub
xchg
popa
sub
pop
inc
lret
cwtl
cltd
cmp
dec
lods
mov
cltd
sbb
adc
jp
cmc
mov
aam
inc
or
and
scas
jle
dec
in
idivb
insl
orb
push
mov
inc
in
push
mov
cmp
adc
and
popa
xchg
push
add
dec
or
push
shlb
iret
dec
mov
out
pop
mov
dec
inc
sti
cmpsl
fwait
pushf
sub
into
jge
add
arpl
mov
nop
aam
imul
movsl
push
leave
cmpsb
xor
mov
pushf
test
out
and
lret
lock
jno
rol
push
ljmp
push
mov
and
in
arpl
mov
xorb
ficoml
add
in
mov
shl
mov
jp
sti
dec
lods
jmp
jecxz,pt
xchg
fists
xchg
cmp
push
push
stos
shll
loop
xorb
mov
test
lods
adc
bound
ret
pushf
add
dec
add
fcmove
and
aad
addl
insb
cmpsl
cmp
cmpsl
push
jg
push
js
out
cmpsb
shlb
push
imul
loope
inc
js
test
ljmp
cli
je
das
mov
orb
shll
jnp
xor
out
sbb
loope
int
cmp
xchg
idivb
in
push
sub
cmpsb
test
jecxz
lods
repz
add
or
jmp
cmpsl
cs
add
sub
xchg
jle
call
and
mov
dec
jmp
je
ja
outsb
inc
sbb
int3
decb
int3
stos
mov
ja
sbb
mov
mov
aas
loope
ret
xchg
sahf
call
fidivl
ds
dec
pop
and
jne
jge
mov
loopne
lea
push
dec
sbb
jmpw
push
repz
xor
push
movsb
fst
sbb
lea
cmpsl
xor
inc
rorl
aad
std
aad
mov
imul
or
imul
fnstcw
stc
pop
lods
hlt
ljmp
mov
or
std
testb
sar
jl
in
inc
inc
sbb
add
xchg
sub
test
fistl
fsub
dec
out
mov
arpl
bound
cli
sub
add
in
in
lahf
or
inc
enter
mov
xchg
mov
dec
dec
dec
xchg
jb
fdivrp
mov
pusha
add
lds
scas
test
rolb
xchg
incb
xchg
mov
or
shr
clc
mov
dec
mov
ss
rcll
adc
lods
popl
inc
ja
divl
jnp
outsl
mov
push
jp
aad
ret
out
cmc
repz
mov
push
dec
test
mov
push
call
arpl
xchg
pushf
push
xchg
cmpsb
sarl
and
lds
in
push
jl
aas
add
dec
sbb
xor
stc
lret
mov
add
popa
ret
lret
pop
les
jae
inc
mov
cld
lret
inc
fidivrs
ret
mov
daa
mov
arpl
or
xlat
movsb
sub
mov
jae
or
out
push
test
cmpb
jns
popa
xchg
adc
aam
push
sbb
xor
dec
hlt
shrl
and
pop
dec
cmp
cmp
pop
cmpsl
jbe
int
out
mov
inc
jo
push
scas
or
cmp
ja
pop
stos
testb
xlat
es
dec
andb
andb
pop
rorl
addr16
pop
das
jbe
outsb
aam
cmp
scas
push
xchg
lret
dec
dec
push
pop
xor
mov
jge
pushf
aas
jo
movsl
int
jns
lods
int
movsl
or
mov
fs
iret
mov
cmp
ret
lea
mov
xchg
sbbl
pop
and
cmp
add
pop
xchg
in
sub
in
arpl
inc
mov
or
add
cltd
xchg
sbb
sub
lock
clc
sub
adc
nop
out
movsl
mov
mov
push
arpl
in
xor
cmpsb
mov
out
sub
jmp
aaa
popa
fbld
lea
shl
push
mov
stc
les
aas
int3
jb
cld
addr16
sub
jbe
clc
and
cmp
nop
or
fldcw
adc
mov
ret
xlat
adc
jge
inc
cmp
ds
sbbb
fbld
pop
test
and
aaa
fmull
and
fstl
cli
or
dec
lock
outsl
leave
pop
in
lea
mov
lock
xor
test
mov
or
ret
push
inc
adc
or
out
pushf
cwtl
fisttpll
loopne
sbb
dec
loopne
ret
int3
add
push
pop
dec
jo
add
lods
mov
sbb
fwait
into
cmp
in
adc
es
mov
inc
cmpsl
std
mov
stos
popf
repnz
mov
lret
je
popf
and
dec
pop
mov
or
out
jg
insb
push
jb
movsb
lahf
data16
aaa
fs
mov
dec
dec
movsb
aam
add
dec
inc
add
lds
xchg
or
lock
pop
std
out
aad
pusha
mov
cmpsl
stos
int3
std
dec
bswap
or
clc
out
adcb
adc
mov
lds
xchg
sbb
and
xor
stc
push
test
loope
fwait
out
sete
pop
or
mov
push
xor
inc
xor
in
xor
jb
pop
movsb
add
jp
mov
mov
roll
inc
sbb
fidivs
cs
jmp
ficoml
out
sub
lret
xchg
dec
xor
fists
push
test
cmp
movsl
dec
in
adc
jge
loopne
pop
mov
ds
pop
int
mov
dec
outsl
jnp
out
sub
mov
adc
rcr
push
pop
test
dec
lea
out
xchg
inc
xchg
inc
outsl
push
js
nop
mov
push
mov
orb
sub
adc
push
sub
imul
mov
in
sbb
cli
jo
mov
mov
shlb
xor
pop
mov
mov
push
lock
rolb
jl
push
aad
clc
and
cwtl
addr16
add
push
in
dec
cbtw
mov
push
sbb
arpl
int3
pop
fwait
jo
push
adc
or
mov
xchg
mov
in
dec
adcb
pop
enter
sahf
push
out
pop
ss
pavgb
cli
adcb
cmp
das
pusha
pushf
dec
stos
push
mov
sbb
lock
lret
inc
xor
into
adc
sub
push
add
push
dec
push
xchg
lods
or
or
cltd
push
xchg
pop
sub
sub
stos
cmp
cwtl
add
addr16
sbb
mov
push
loopne
xchg
cwtl
mov
rorl
aaa
insb
mov
loopne
test
xor
outsl
mov
orb
aaa
andb
xor
outsl
pop
lret
pop
xchg
adc
shll
sahf
fbstp
cmp
pushf
into
or
js
sub
dec
stos
jae
or
xchg
and
data16
cmp
rorb
cmpsb
xchg
push
cmp
inc
pushf
stc
test
mov
lret
call
pushf
cmpsb
outsl
notb
push
xor
test
cmp
xchg
outsl
lea
or
dec
ficomps
out
stos
sbb
pusha
sti
sbb
mov
loope
or
data16
push
pop
icebp
pop
dec
xchg
adc
sahf
fwait
pushf
pop
sbb
cmp
ja
leave
xchg
fisubl
add
test
add
and
cwtl
pop
in
loopne
xchg
out
sarb
rclb
mov
mov
fldcw
xor
in
iret
in
push
test
fbld
adc
out
and
cmp
arpl
icebp
shrl
fs
fstl
int
mov
into
cli
imul
fxch
ss
cmp
dec
daa
push
mov
scas
loope
cmp
pop
lret
xchg
call
dec
mov
icebp
in
loope
rol
jns
xor
sub
rol
adc
add
or
mov
push
sub
and
daa
inc
call
mov
jl
into
mov
xchg
in
lea
mov
out
mov
jo
xchg
cli
addr16
ret
lret
mov
sub
push
repnz
pop
pushf
xchg
mov
lret
or
mov
fst
and
xor
insl
cwtl
jnp
dec
out
jl
insb
movsl
mov
or
stos
mov
push
aaa
and
add
lea
scas
fs
sbb
xchg
adc
add
push
movsb
loope
xlat
arpl
daa
pushf
sub
icebp
mov
mov
ja
and
jo
jno
popf
mov
mov
push
adc
adc
insb
jg
mov
sbb
sbb
daa
insl
mov
les
dec
push
mov
movsl
jg
pop
data16
decb
sub
dec
scas
test
push
cmp
pop
andb
cmc
dec
aam
fld
rclb
mov
leave
dec
or
movsl
lock
lea
shlb
loope
js
xchg
xchg
mov
fcmovnb
test
je
cmp
pusha
es
adc
inc
dec
repnz
pop
sti
and
adc
aad
enter
cmp
lea
bound
xor
movsl
rorb
and
pop
xchg
sub
lcall
push
testb
inc
mov
dec
lods
pop
push
std
push
fldcw
inc
dec
push
inc
je
pop
outsl
test
enter
and
mov
in
aad
out
jmp
out
iret
pop
roll
mov
mov
mov
enter
adc
sub
inc
inc
insl
mov
jb
mov
cmpl
cmp
dec
inc
ja
mov
arpl
xchg
and
xor
aad
lcall
or
mov
aas
lret
repz
mov
sub
stc
mov
fisttps
jnp
dec
mov
cmc
mov
pop
test
bound
jne
sub
or
push
and
cltd
jb
fidivrl
mov
push
pop
jnp
jl
jno
xchg
fiadds
mov
inc
push
push
jecxz
or
jmp
fistpll
xchg
in
test
add
mov
lds
rcr
jl
icebp
scas
stos
pop
lea
cld
push
inc
shrl
nop
mov
mov
outsb
fincstp
jns
jne
push
gs
out
test
add
or
pushf
mov
push
pushf
xchg
push
xor
and
push
mov
outsl
jg
les
inc
mov
pop
sub
scas
imul
out
icebp
add
xor
sti
jo
pop
dec
push
imul
cmpb
jbe
stos
and
iret
icebp
xor
incl
mov
pop
xchg
push
sbb
test
dec
mov
jo
mov
ja
mov
mov
in
fidivrl
dec
scas
push
push
cmpsb
push
mov
adc
fcompp
ja
lock
mov
mov
test
xor
ret
add
pop
stos
lock
lahf
or
and
add
cmp
mov
and
mov
inc
inc
rorl
rolb
push
lret
adc
jb
js
pop
sbb
cmc
jnp
out
std
jle
xlat
sarl
div
xchg
dec
aam
loopne
mov
xchg
xchg
jnp
xchg
cmp
in
jae
aad
mov
mov
es
js
inc
repnz
cmovnp
lods
inc
xor
and
stos
sarb
outsl
or
daa
fst
clc
and
cmc
jg
repz
cs
aas
inc
ret
adc
xchg
outsb
sub
arpl
jno
mov
call
push
iret
loopne
jno
cmp
cmpsb
pop
sub
and
nop
inc
arpl
scas
push
push
popa
push
fistps
lcall
mov
adc
fmull
pop
out
push
mov
sub
push
add
jmp
and
sub
rorb
sbb
fldenv
repz
xor
lcall
ror
or
add
idivb
cltd
cmp
cmp
mov
ljmp
fnstsw
mov
icebp
pop
mov
popf
add
into
sub
mov
sbb
fldl
aam
jnp
mov
jmp
inc
movsl
mov
test
int3
dec
jb
push
jge
test
adc
jg
ror
dec
sub
sub
mov
or
mov
aad
outsb
pop
xchg
sub
nop
dec
inc
mov
add
sub
iret
dec
jecxz
dec
gs
fnstenv
icebp
xchg
xlat
cmpsl
mov
ss
adc
mov
jecxz
mov
and
cmp
pop
jbe
insb
cmc
sbb
push
ja
in
mov
cmp
push
push
adc
std
xor
fimull
es
rcrb
mov
inc
add
insl
or
dec
mov
and
outsl
xlat
add
insl
outsb
outsl
inc
testl
out
jecxz
pushf
js
push
fdiv
or
mov
lret
jle
cmp
js
lds
adc
fsts
stos
or
dec
jbe
movsb
or
push
mov
test
push
fstpl
fmuls
shll
and
xchg
push
fisttps
sbb
rclb
adc
mov
bound
lock
jg
into
imul
lret
mov
je
das
inc
inc
pop
stos
inc
rolb
ret
in
mov
test
or
jae
fstpt
mov
mov
fdivp
scas
mov
push
je
mov
lock
das
daa
cld
add
imul
ljmp
xor
pop
push
ja
popf
out
das
lock
adc
or
repnz
cmc
mull
in
and
inc
push
xor
out
mov
rcr
unpcklps
lock
cwtl
push
lcall
xlat
pushf
push
mov
lahf
lds
mov
pop
jae
rolb
add
icebp
cmp
aam
lahf
mov
imul
fstpt
daa
push
dec
cmp
pop
popf
shrl
xchg
scas
push
push
int
dec
xchg
cmpsb
pop
test
dec
inc
inc
stos
sbb
sub
push
cltd
jns
pop
fdivp
js
pop
outsl
mov
scas
in
icebp
mov
repz
xchg
sarb
sbbb
add
fsubrs
adc
mov
push
hlt
test
out
dec
test
sbb
inc
pop
sbb
or
mov
repnz
js
xor
loope
aaa
xor
aam
mov
and
std
loopne
addr16
out
sub
mov
pop
lret
sahf
in
jb
add
lock
rcll
mov
icebp
pop
and
int
rolb
push
mov
rcrb
dec
sbb
push
xchg
add
push
int
sub
and
icebp
inc
scas
inc
cwtl
pop
lret
pop
sbb
xchg
xor
jns
mov
jecxz
ja
xchg
sahf
jne
shrl
cmp
les
js
and
jl
mov
mov
cmp
mov
adc
adc
pop
add
jl
hlt
iret
cmpsl
or
mov
mov
or
das
jbe
cwtl
frstor
fdivs
inc
mov
mov
sbb
cmp
push
out
shlb
in
adc
dec
out
movsb
lods
outsl
lea
das
ret
jnp
call
inc
xor
or
or
into
insl
mov
lock
popf
imul
jns
xor
or
pop
pop
xor
loopne
dec
dec
mov
mov
enter
mov
push
push
lock
in
fistpll
aad
sub
fs
call
jne
in
aaa
mov
sbb
sub
jmp
mov
fisubrs
and
xchg
sub
insl
dec
dec
mov
in
and
cmpsb
xorl
mov
fidivrl
inc
cs
sub
scas
pop
movsb
xchg
call
call
pop
test
sub
dec
push
mov
inc
pop
fucom
test
or
and
aam
ficoms
push
lds
sub
pop
ja
leave
cmpsb
inc
add
mov
into
imul
pop
loopne
enter
ret
call
popa
mov
data16
and
and
pop
js
fbld
out
pop
fdivs
pop
int3
test
jnp
aaa
test
xor
in
imull
sahf
cmp
cmp
push
addr16
jb
je
ret
and
jmp
push
cmpsl
mov
xor
jmp
mov
xchg
aad
xor
imul
repnz
push
mov
aam
push
or
shll
inc
loopne
imul
pushf
mov
pusha
pop
inc
movsl
pop
xor
lock
inc
sub
mov
jae
sub
adc
in
es
adc
sub
add
lods
lcall
repz
add
cwtl
cli
test
push
adc
xchg
mov
gs
popa
rol
mov
push
add
insb
int
dec
inc
stos
loop
add
shlb
scas
testl
pop
xchg
lret
enter
and
cs
aad
mov
push
add
into
mov
adc
ret
mov
rorl
out
out
mov
shr
mov
sub
inc
movsl
imul
gs
pop
bound
jae
xchg
leave
or
popa
adc
stos
adc
push
outsl
adc
test
dec
fildll
sti
sbbb
call
jg
lcall
mov
push
sbb
mov
mov
scas
hlt
lods
or
mov
mov
subb
call
loopne
mov
jle
mov
sbb
insb
js
pop
inc
pop
fisubrl
cmp
pop
inc
sbb
and
add
xchg
sbb
sbb
mov
test
iret
cmp
lock
or
lods
sub
int3
cmpl
loop
in
add
movsl
sub
data16
xor
pop
pop
add
jno
and
ljmp
cwtl
mov
inc
dec
cld
dec
mov
sti
mov
in
sahf
push
frstor
mov
negb
es
mov
jnp
ffreep
cmc
adc
test
pop
push
adc
pop
pop
aaa
cmp
mov
xlat
addl
into
das
push
push
rclb
in
push
into
add
movsb
sbb
push
int
and
or
testl
int
insl
out
imul
icebp
fwait
xchg
movsb
lcall
push
rclb
push
jbe
loopne
or
ret
inc
add
lods
enter
bswap
lahf
repnz
test
sub
into
cmp
and
push
xchg
push
imul
lahf
mov
sub
lds
dec
inc
pause
loop
and
mov
in
mov
mov
div
jae
xor
adc
lcall
and
mov
lock
xchg
inc
in
js
aas
jno
mov
ret
fwait
xor
push
xlat
out
andb
adcl
pop
imul
test
mov
mov
out
insb
popa
std
xchg
push
ret
shll
adc
xchg
or
es
mov
inc
xchg
popfw
mov
rorl
inc
xchg
imull
pop
mov
fidivl
or
movsb
arpl
sahf
enter
add
jle
cld
jle
aam
xlat
jg
stos
jmp
enter
or
cmp
dec
lret
sub
jge
pop
cmp
sbb
pop
push
loopne
jno
mov
or
shrl
jmp
and
pop
loop
mov
sarl
pop
enter
cltd
pop
ficoms
push
insl
mov
imulb
dec
jmp
test
fsubrl
dec
and
lret
cmp
inc
lods
inc
pop
pop
lods
pop
gs
jle
std
in
cltd
jnp
dec
pop
sbbb
cli
inc
fmuls
cmpsb
jb
mov
and
pop
ret
and
jb
mov
xor
lcall
cmp
aaa
cltd
icebp
xor
mov
push
or
outsl
fnstsw
cmp
mov
mov
xchg
in
fldlg2
xchg
pop
adc
mov
into
gs
sub
jle
add
dec
xchg
jb
xor
fucomi
in
daa
jge
daa
pop
mov
xchg
push
lea
nop
cwtl
mov
pusha
out
dec
jmp
push
lret
xchg
cmpsb
adc
inc
lea
call
inc
out
fisttps
lahf
in
xchg
adc
fidivrl
sti
cli
xor
mov
sbbl
mov
out
ret
sub
mov
add
mov
adc
xchg
mov
lcall
dec
xchg
jns
sub
jl
repz
les
out
mov
mov
js
shrl
shrl
cmp
ljmp
inc
or
cmp
fstpl
mov
notb
push
sbb
enter
sbb
lock
icebp
mov
add
push
adc
lret
push
inc
sbb
dec
clc
fdivr
cmc
adcb
pop
dec
xor
inc
icebp
and
notl
jmp
test
xchg
dec
dec
mov
and
dec
icebp
icebp
jnp
xchg
jmp
push
or
adc
pop
rol
cwtl
ja
int3
out
out
shlb
or
mov
adc
in
jg,pn
bound
addl
jae
das
or
fmull
pop
ret
mov
lock
xor
in
xor
rclb
cltd
imul
hlt
jge
mov
pop
cli
or
lods
push
mov
push
adc
and
pop
sbbb
mov
inc
cli
sti
leave
imul
xor
sbb
sub
lret
xchg
mov
add
mov
lock
movsl
xchg
add
cmc
xor
push
xlat
jo
loopne
mov
jb
fidivl
and
xchg
push
xchg
bound
mov
dec
cltd
jmp
aam
jnp
shr
jno
sbbl
shll
insl
repnz
sti
incb
fdivrs
nop
mov
dec
bound
cmp
subb
dec
rcrb
dec
xchg
jo
cmpsl
add
cmpsb
xor
inc
dec
stos
lcall
add
cmp
test
inc
addb
lods
mov
or
or
cld
cmpsb
shrl
shlb
push
mov
test
dec
and
scas
cwtl
push
inc
aam
inc
fnstenv
dec
gs
cmp
inc
lcall
call
outsl
inc
fwait
scas
out
mov
ret
jne
sahf
sti
xlat
lods
pop
cmc
inc
and
pop
jne
lret
roll
fcmovnu
jp
mov
andb
mov
inc
sbb
or
push
dec
ljmp
sbb
or
add
jmp
repz
jbe
add
mov
sbb
adc
jo
and
xor
sub
lods
jns
rclb
adc
push
fcmovb
xlat
addb
mov
hlt
stc
sbb
cmp
insl
pop
out
sub
mov
je
ja
push
sbb
sub
jo
adcl
iret
mov
pushf
push
pop
sbb
push
mov
fucompp
pop
sbb
psrlq
jp
sub
repnz
dec
out
aas
out
sbb
or
sbb
ficomps
inc
or
dec
fisttpll
xor
adc
std
in
je
push
inc
cmpsl
xor
sbb
bound
and
std
and
sub
dec
mov
push
xor
mov
iret
stos
fnstenv
stc
or
jl
push
xor
sbb
fdivrl
outsb
out
das
push
cmpsb
sub
pop
outsl
push
mov
out
pushf
pusha
int
rcr
insl
in
jg
push
adc
imul
mov
mov
loop
xchg
jl
add
rolb
je
js
cmp
jge
push
fistpl
sub
or
loop
fisubl
imul
scas
mov
ljmp
dec
xorl
insl
rcrl
push
addr16
ret
clc
mov
out
out
js
mov
pop
stos
and
xor
test
pop
daa
inc
mov
sti
test
insb
xor
out
adc
test
insb
mov
cmp
xchg
out
fistl
mov
scas
push
add
cltd
push
jne
mov
jg
mov
push
movsl
pop
in
lods
bnd
xchg
movsb
mov
mov
pushf
jl
cmp
sti
je
fistps
jae
add
lds
daa
ss
push
ds
std
lahf
cmp
movsb
or
jg
jns
jno
imull
xchg
cmp
dec
xor
loope
mov
out
jo
lds
fmull
fidivrs
xchg
loopne
xchg
add
sub
mov
mov
dec
push
and
pop
dec
xor
pop
imul
jbe
out
pop
iret
cmpsw
scas
and
inc
mov
mov
mov
insb
enter
mov
push
jae
int
sub
and
test
or
sub
nop
sub
add
mov
jo
out
std
lea
pop
sbbl
inc
int3
fisttps
jne
push
test
dec
pop
jne
push
fcmovnb
les
mov
sub
mov
cmp
add
fs
xor
xchg
xor
int
sub
pop
inc
orl
addr16
fldl
jge
dec
loope
push
push
adc
sub
flds
jno
out
adc
xor
rol
cs
lods
les
cmp
test
mov
pop
pop
imull
push
call
add
inc
adc
int3
push
adc
xor
mov
mov
cmp
stos
mov
jmp
fistl
lahf
out
push
push
xchg
js
jbe
ljmp
add
inc
mov
dec
mov
or
pop
int3
mov
rcll
mov
jns
sub
lods
cmpsl
adc
addr16
cmp
roll
das
rolb
pop
cmc
and
xbegin
popf
dec
push
push
or
mov
inc
xor
fwait
jecxz
xorl
andl
xor
push
xor
dec
dec
add
ret
push
frstor
sub
inc
cs
xor
inc
ja
cmp
fwait
mov
jns
jo
add
pop
pop
stos
insl
cmovno
int3
ret
bound
cwtl
ja
pop
dec
roll
bswap
sahf
pop
arpl
xor
mov
inc
pop
add
cmc
pop
scas
mov
adc
clc
jecxz
hlt
sbbb
outsl
aaa
arpl
clc
mov
inc
lods
mov
mov
xor
loopne
jo
inc
mov
stc
sub
pop
xchg
cltd
adc
mov
xchg
adc
xchg
and
cltd
mov
sbb
into
mov
add
xor
dec
xchg
subb
xchg
jle
repz
inc
std
fbstp
fldenv
rolb
fs
push
jnp
scas
fnstcw
xchg
icebp
inc
push
mov
jecxz
sub
shll
rclb
adc
xor
mov
or
je
fisubl
cwtd
pushf
or
jnp
cmp
mov
lcall
bound
mov
sub
int3
in
jae
jnp
fcoms
les
push
ljmp
dec
xlat
fxch
adc
xor
in
les
rcrl
or
repnz
mov
or
testl
imul
insl
inc
mov
xor
lret
xchg
jo
inc
add
lds
fcom
out
cmp
push
ficoms
fsubrl
lods
test
sbb
data16
cmp
push
out
fsubr
mov
add
mov
mov
cmp
push
xlat
icebp
xor
push
xlat
addr16
imul
sub
lods
out
iret
call
dec
inc
sub
call
fistpl
adcb
mov
je
pop
imul
jnp
and
std
mov
sbb
stc
dec
mov
mov
push
dec
xor
add
outsb
leave
dec
int
pop
push
and
cmp
fwait
and
jb
adc
jns
cmpsl
dec
pop
mov
repnz
enter
xchg
sbb
dec
add
test
push
rorb
xchg
test
mov
jne
jmp
std
or
and
daa
das
mov
in
clc
sub
push
dec
inc
sub
fistpl
inc
add
rclb
mov
xchg
xor
popa
fistpl
scas
hlt
push
out
out
test
and
nop
movsl
cltd
outsl
mov
fs
out
xorb
clc
call
add
xchg
jbe
shrb
stos
and
or
shrl
subl
mov
cmp
enter
rclb
pushf
enter
cmp
dec
jo
jbe
mov
mov
sbb
test
outsb
or
out
repnz
mov
lock
push
mov
or
cltd
iret
jns
leave
adc
ljmp
mov
dec
mov
and
xor
push
pop
jb
push
sub
int
xlat
push
imul
mul
fs
push
mov
xchg
mov
sbb
lods
sub
ret
in
cld
cmpsb
dec
popa
xlat
and
gs
xor
xchg
sbb
repz
and
xor
mov
jne
arpl
push
push
xor
das
inc
clc
dec
xchg
xor
mov
mov
inc
loope
jge
int
or
out
pop
inc
and
inc
xchg
test
fildll
jecxz
ret
out
call
inc
push
in
lret
cltd
push
cmc
mov
sub
aam
pmullw
sub
test
sub
sti
jge
and
mov
call
cltd
pop
or
movsb
int
popf
push
push
adc
xor
imul
cmp
dec
mov
inc
aam
mov
mov
xchg
aam
add
int3
addr16
aad
and
mov
ror
fmuls
or
js,pn
mov
mov
les
lds
jmp
mov
jmp
jae
loope
cmpsb
pop
or
sti
adc
clc
dec
xchg
jg
filds
clc
cmp
and
xchg
and
arpl
outsb
dec
add
push
int3
ret
jge
push
mov
cmpsb
and
dec
mov
mov
xchg
enter
test
or
mov
dec
adc
jl
mov
cmp
psubsb
inc
pop
jns
push
mov
mov
stc
das
and
xchg
mov
cli
jb,pn
enter
ret
and
cwtl
test
notb
aas
inc
sbb
inc
test
or
push
imul
mov
hlt
mov
pop
lock
adc
adc
sbb
inc
push
mov
aas
lret
xchg
xchg
jg
insl
xchg
aam
daa
pop
loope
shl
cmp
loope
orps
iret
int
int
add
jge
sub
std
or
xchg
push
sti
jns
push
push
inc
mov
dec
or
mov
adc
rcl
jne
lock
jp
sub
mov
xchg
push
jno
sbb
cmp
mov
cmp
jp
sub
bound
sub
push
ljmp
xchg
aam
sar
jge
push
adc
fwait
mov
adc
out
adc
jp
rcll
adc
pushl
pop
inc
in
inc
pusha
sub
gs
mov
mov
xor
dec
lret
aaa
and
and
jno
movsb
xor
push
add
mov
or
fnsave
or
js
mov
dec
pop
dec
xor
push
jnp
lahf
fwait
std
pop
insb
and
pop
mov
xor
clc
test
sahf
adc
mov
lcall
pushf
sub
mov
cmpsl
push
rolb
enter
testl
mov
mov
pop
pop
in
pop
push
dec
mov
mov
xchg
int
in
mov
loope
jl
inc
insb
and
push
es
xchg
xchg
ror
stc
int3
aam
call
mov
xorl
loop
inc
ss
mov
inc
or
cltd
nop
arpl
mov
add
adcl
stos
stc
jg
mov
mov
repz
mov
inc
shl
push
cmpsb
sbb
enter
lods
sahf
pop
dec
cltd
mov
dec
or
dec
cmp
lock
out
sub
cwtl
inc
insl
mov
arpl
cmp
mov
dec
rcll
push
in
test
add
ja
sarb
cmpsl
inc
sbb
into
out
jb
mov
aad
iret
xor
loope
imul
mov
push
mov
sbb
push
xchg
scas
loop
adc
popf
insb
jmp
clc
cwtl
push
jno
scas
movsl
das
adc
cwtl
mov
xor
xor
gs
stc
je
mov
pop
fwait
sub
fdivl
adc
std
std
scas
insb
insl
adc
enter
repnz
inc
cwtl
dec
int
or
fisttpl
cmp
lret
leave
fimuls
jge
mov
negb
mov
ffree
jecxz
xchg
mov
push
scas
test
call
push
daa
adc
flds
add
insb
push
mov
loopne
or
mov
test
hlt
fisttpl
mov
into
fistpll
loope
push
ss
mov
fsub
jae
mov
in
xchg
aam
xchg
popa
pop
dec
out
adc
push
jmp
lds
fcomip
in
sub
in
xor
adc
mov
jbe
pop
rclb
addb
push
clc
pop
or
adcl
add
jbe
aad
arpl
or
fstps
loope
iret
add
daa
cmp
cmpsb
fsubs
out
push
sub
ffreep
xor
sub
movsl
fmull
dec
jecxz
inc
adc
xor
xor
jge
mov
loop
outsb
jne
jecxz
mov
xchg
decl
daa
cmp
icebp
inc
add
out
adc
inc
das
sti
and
scas
mov
push
scas
jg
jg
lock
mov
xchg
mov
jl
out
xchg
mov
xchg
xor
cltd
aam
inc
nop
cmp
repz
clc
in
test
and
jns
shrl
mov
pop
out
inc
jbe
stc
add
jmp
mov
dec
hlt
test
xchg
mov
aad
popf
int
gs
xor
jl
inc
push
cmp
fsubr
xchg
or
incl
ror
cmp
xor
jle
xchg
outsb
jl
cmpsl
shlb
push
pop
cltd
mov
rorl
adc
mov
and
xor
jmp
cmpsb
in
fisubrl
daa
into
dec
dec
and
push
pop
xor
xchg
cmp
xor
and
div
dec
push
stos
int
mov
and
jmp
inc
in
fbstp
outsb
mov
inc
adc
imul
push
sub
adc
aam
rcrb
pop
leave
mov
sub
pop
pop
aam
icebp
xchg
cmp
movsl
and
sbb
inc
aam
adc
sarl
xor
stc
xchg
jno
jnp
adc
loopne
dec
push
xchg
inc
bound
aaa
dec
cmp
jb
jo
jns
outsl
sbb
xorb
pop
push
and
push
sub
xchg
push
adc
les
jno
out
ret
hlt
and
inc
rcrl
mov
int3
ficomps
je
add
mov
loopne
shrl
xchg
inc
adc
lods
add
push
jg
insl
clc
or
jbe
out
aaa
out
inc
lods
loope
ret
push
jecxz
xchg
push
pop
dec
jbe
add
lcall
cmpsl
sub
idivl
or
mov
push
xor
les
movsb
jl
dec
imul
add
repnz
test
outsb
add
push
fstpl
mov
push
bound
mov
dec
and
pop
push
push
out
adc
outsb
loop
jbe
mov
testl
movsb
das
outsl
dec
dec
sti
lret
fnstenv
movsl
mov
ljmp
movsb
adc
push
loope
es
icebp
addr16
leave
addr16
dec
pop
je
cmc
std
cmp
pop
lods
cld
imul
cltd
fneni(8087
add
mov
daa
or
dec
ljmp
and
dec
pushf
dec
mov
jmp
and
jge
mov
or
hlt
mov
int
jle
inc
cmpsl
sahf
js
xchg
cwtl
cmpsl
push
and
adc
pop
ss
jns
shr
stc
xor
out
add
je
mov
xchg
jecxz
mov
add
pop
sbb
adc
ss
mov
cmp
push
cwtl
jb
sbb
rolb
adc
adc
sub
stos
movsl
fidivs
push
mov
inc
insl
stos
jno
push
add
jnp
adc
add
ss
add
std
jmp
leave
insb
xabort
inc
rorb
lret
dec
lret
lods
mov
mov
lea
orb
fimull
sti
cmpsb
dec
add
xchg
mov
mov
insl
dec
mov
sub
inc
roll
insb
subb
cmovp
incb
cmpsb
pushf
dec
aam
sbb
mov
and
adcl
and
mov
dec
or
stos
mov
out
movsb
mov
lods
test
and
dec
mov
push
iret
push
pop
test
out
call
mov
sbb
inc
test
or
into
test
mov
das
dec
dec
jl
adc
adc
cmp
test
test
mov
push
in
cmp
dec
add
jl
aad
sahf
cwtl
in
sbb
aam
cld
fistpll
pop
sbb
pop
into
pop
sub
rcrb
add
faddl
aad
mov
fdivrs
push
jle
les
clc
imul
sub
mov
lret
inc
mov
xor
xor
mov
mov
or
fdivp
inc
jns
outsl
js
mov
pop
add
fwait
imul
push
and
or
sub
xor
mull
test
jecxz
add
nop
into
push
lods
fnstsw
pusha
aam
sahf
push
into
fcoms
lea
inc
mov
sub
fstl
rolb
and
pushf
inc
cmpl
call
or
xchg
mov
pushf
add
fisubl
loopne
sarb
data16
mov
repz
push
jb
lock
mov
cmp
lods
iret
aaa
in
loope
push
push
mov
cs
pop
pop
mov
insl
fmull
dec
test
mov
sbb
push
xchg
pop
gs
push
sbb
mov
mov
mov
cltd
inc
mov
shll
or
shrb
aaa
cmpsl
lret
dec
jbe
add
and
rcrb
mov
fcomi
aaa
sbb
lods
or
icebp
inc
push
js
icebp
mov
and
cmp
mov
push
push
mov
mov
in
jecxz
insl
orb
sahf
icebp
adc
inc
hlt
mov
mov
and
mov
bsf
test
mov
or
or
add
xor
inc
gs
inc
jmp
ja
sbb
pop
out
in
sub
push
xchg
dec
cmp
mov
out
out
sbb
pop
push
pop
pop
cmpb
or
sahf
jno
cmp
push
dec
inc
sbb
cltd
lods
loope
jp
outsb
ss
push
rcll
icebp
dec
push
sbb
pop
xchg
enter
or
imul
pop
lahf
out
in
loop
xchg
pop
les
mov
pop
clc
pusha
mov
cmp
int
xor
ds
inc
out
test
jg
ja
test
mov
mov
mov
push
sub
lds
repz
lods
xor
xor
xor
dec
xchg
insb
and
hlt
xchg
mov
mov
cmp
shlb
in
push
mov
bound
lds
fimull
sbb
aaa
loop
push
out
gs
inc
or
add
or
xor
cli
push
shrb
out
push
xchg
mov
sbb
and
pop
repz
das
lods
mov
lahf
jb
inc
and
lret
cmp
mov
add
xchg
jae
xor
incl
mov
sbbl
push
bound
test
out
data16
lock
insl
sbb
push
out
adcb
lret
push
push
or
mov
pop
dec
push
es
in
fcoms
push
scas
lds
add
dec
jmp
cwtl
jle
fbstp
mov
iret
xchg
inc
mov
jl,pn
pusha
xorb
cld
push
mov
test
jbe
cmp
or
xchg
sub
mov
incb
outsl
test
leave
jbe
jne
add
push
int
sub
push
cmpsl
adc
shlb
jg
movsb
inc
jbe
jo
int3
ret
sub
sub
sbb
push
pop
push
or
shlb
lret
loope
mov
nop
sub
fisubrl
cmpsb
mov
push
xchg
cli
fs
mov
cli
aas
xor
pop
sbb
lahf
add
insb
les
mov
icebp
cmp
movsb
add
daa
repnz
sbb
lret
xchg
ss
sti
xchg
in
dec
sbb
pop
testb
or
mov
cmp
push
mov
pop
movsl
ficompl
cwtl
faddp
add
jecxz
jbe
cli
jne
rep
iret
out
push
jnp
pop
aam
cld
ljmp
jmp
andb
push
add
std
or
push
dec
sub
pop
cli
pop
mov
rorl
clc
lret
cmp
push
sub
shrb
ds
int3
jne
in
in
or
xor
lods
or
xor
xchg
sub
test
mov
fld
inc
push
adcb
jae
sti
ljmp
push
pop
movsl
test
repz
lret
xor
mov
mov
xchg
mov
nop
out
sbb
push
in
push
shlb
imul
test
pushf
shlb
js
shlb
mov
sbb
iret
cmp
push
xor
inc
mov
test
xor
mov
mov
fsubp
hlt
pop
push
dec
inc
add
and
nop
sub
sbb
jnp
sbb
cmpsl
and
or
movb
inc
jl
lods
faddl
sar
cmp
mov
push
and
push
push
shll
sub
je
test
add
xchg
inc
dec
idivb
int3
out
and
cmp
add
mov
lret
sarb
mov
scas
xchg
jnp
push
movsb
adc
js
cmovb
inc
js
fld
cmpsl
lret
mov
mov
and
dec
cmp
mov
mov
or
xchg
and
push
inc
ret
ljmp
xor
sub
jo
loope
adc
and
or
shll
icebp
shr
xchg
enter
and
adc
push
bound
lahf
mov
rolb
pop
lahf
sbb
int3
fsubrs
and
or
adc
popf
push
popa
xor
fsts
push
add
jmp
inc
mov
inc
out
push
inc
add
jb
call
out
movq
mov
push
and
into
dec
xor
xchg
pop
xor
inc
sub
cmp
jecxz
lahf
imul
add
sub
mov
jne
cmp
loope
sarl
std
xor
out
insb
cmp
xchg
jle
test
mov
imul
shlb
out
scas
xor
and
pop
in
sub
sbb
fsubrp
pop
xor
jge
lahf
aad
sub
pop
mov
mov
cmc
push
mov
sbb
dec
mov
fsubrp
incb
adc
out
or
sbb
cmp
outsb
cmp
push
outsb
aam
push
sub
xchg
mov
sub
aaa
inc
idivl
pusha
cmp
mov
nop
loopne
push
inc
inc
and
hlt
shl
outsb
ja
arpl
and
fs
lcall
shrl
mov
ror
inc
push
sub
cmp
fbstp
jge
fiadds
ds
out
lret
sub
fdivl
and
xchg
cwtl
mov
push
xchg
rcll
out
adc
mov
jo
nop
fcmovnbe
and
pop
xchg
je
add
movsl
jno
test
mov
add
push
adc
lods
stos
mov
test
arpl
loop
push
hlt
mov
cmc
pop
andl
jns
sbb
in
test
cwtl
xchg
mov
leave
lret
inc
inc
imul
stos
xor
filds
shlb
ljmp
xchg
pop
scas
scas
leave
enter
inc
fstl
stos
insb
outsl
int3
or
mov
mov
adc
ret
pushf
cmc
adcb
mov
lods
fisttpl
inc
add
jns
xchg
mov
js
adc
shlb
fwait
inc
lds
loopne
pop
pop
lret
jne
jbe
ljmp
sub
imul
notl
ljmp
cmp
clc
push
lcall
cmp
cltd
addr16
jg
add
loop
out
fidivrs
cmpsb
pushf
sbb
cltd
fdivp
jno
or
dec
test
mov
cmc
sbb
out
loopne
inc
jmp
aas
test
xchg
and
inc
dec
insl
jbe
jbe
inc
sbb
aad
sbb
test
sti
dec
mov
xor
or
and
inc
nop
pushf
xchg
sbb
and
aas
inc
xchg
nop
or
fistps
inc
xchg
fdivrl
xchg
mov
shll
sbb
idiv
xchg
leave
sbb
call
push
cmpsl
xchg
imul
xchg
fs
sbb
add
pop
repz
repz
imul
cmc
xchg
test
xor
sub
mov
xor
rcll
adc
jecxz
push
lock
push
filds
iret
jl
mov
xor
loope
shrb
pushf
sbb
fidivl
cmp
adc
sarl
cltd
cmp
mov
pop
mov
movsl
sbb
fs
dec
movsl
and
mov
or
jne
mov
pop
add
rcl
fs
ds
mov
aam
loop
pop
addb
aam
les
sbb
xchg
push
push
inc
or
and
xlat
out
sub
out
outsb
lock
stc
or
xchg
cs
cltd
xchg
clc
adc
in
pop
jne
fnstsw
outsl
addb
jo
movsb
xchg
add
pop
pop
cmp
scas
mov
rcrb
lahf
dec
and
inc
fmull
ficoml
fstpl
out
and
imul
das
icebp
stos
pop
sbb
jbe
lock
push
push
sub
mov
std
and
out
scas
push
cmpb
scas
nop
test
mov
dec
insl
movsl
lcall
scas
add
cmc
mov
mov
mov
imul
repz
ficompl
cmp
jbe
pop
mov
sti
xchg
sub
icebp
sahf
jle
sarb
popa
inc
shll
jle
mov
cmp
cmp
into
mov
xchg
movsl
aad
aaa
xor
cmp
or
xor
jae
mov
arpl
inc
pop
add
fcom
xlat
cmp
push
cmp
push
out
push
mov
xchg
push
in
xor
fstps
pop
mov
mov
jmp
out
xchg
fwait
popf
imulb
push
inc
in
xchg
mov
add
in
psubsw
jle
sub
roll
jmp
adc
cmp
pop
xchg
loope
inc
inc
push
insb
sahf
mov
test
out
jnp
jp
mov
xor
pop
xor
mov
in
inc
xor
xchg
negb
sbb
mov
add
mov
addl
dec
icebp
loopne
xor
xor
push
cmp
xchg
sub
sbb
test
leave
or
and
mov
out
cmp
or
aaa
inc
sbb
push
pusha
mov
dec
cmc
ficomps
push
mov
aam
clc
or
xor
inc
iret
or
lods
or
or
mul
ret
mov
cmpsl
divl
aaa
xchg
xor
inc
mov
dec
nop
add
gs
pop
inc
or
cmp
xchg
pushf
sub
shr
mov
cmpsl
subl
mov
jmp
sub
jo
dec
ret
insl
xorb
aad
add
and
sarl
ljmp
testl
fidivl
push
icebp
jb
xchg
ret
add
add
fists
pop
jb,pt
lret
leave
leave
mov
fsubs
add
mov
jb
push
in
shrl
mov
jle
xchg
push
sbb
mov
hlt
jae,pt
mov
pop
test
rclb
ss
dec
push
lret
lea
xchg
inc
ret
mov
lods
gs
adc
xchg
testb
mov
cmpsl
sahf
nop
stos
popf
stc
and
rclb
shl
hlt
sbb
leave
out
xchg
cld
movsl
push
roll
jns
mov
mov
in
ret
rorb
inc
retw
sbb
cmp
add
push
jnp
out
add
add
sar
sub
loope
and
out
shrl
or
loop
pop
and
mov
aas
stc
or
jnp
sarb
imul
push
ljmpw
sarl
or
mov
dec
lods
into
lods
repz
cmp
xchg
aad
dec
pmaxsw
mov
ret
pop
and
dec
cmc
std
jl
or
and
dec
leave
rorl
ljmp
dec
mov
icebp
jne
fstps
rcll
repnz
lret
add
mov
test
or
lcall
lret
ss
mov
cmp
sti
scas
or
adc
orb
xchg
lock
and
hlt
fmull
or
xlat
add
int3
inc
push
cmp
fsubrl
mov
arpl
mov
xchg
pop
sbb
adc
es
cmc
test
xchg
icebp
add
in
sbb
push
adc
ret
test
add
add
roll
jecxz
ss
fidivs
mov
std
pop
push
rorb
xchg
repz
or
and
aaa
ljmp
out
shll
stc
fwait
enter
jns
aam
sarl
lcall
push
adc
cmpsl
data16
dec
js
push
rolb
dec
mov
arpl
lret
mov
int
sub
push
lcall
test
es
out
mov
xor
out
sbb
push
insb
insl
xchg
mov
lods
inc
cmp
nop
add
xchg
popa
js
dec
imul
xchg
orb
sbb
fsub
cwtl
mov
xor
aas
data16
loopne
pop
or
call
mov
mov
fwait
ret
ds
popa
cmp
sub
out
cmp
ret
jns
popf
jno
add
dec
push
pop
out
je
aas
clc
insb
repnz
add
rcl
push
inc
das
sahf
mov
xchg
and
pushl
stos
sbb
push
adc
sub
mov
lret
gs
in
and
cmc
sub
inc
sub
and
and
pushf
mov
lret
fnstenv
addl
mov
sbb
add
out
sbb
loope
push
or
cwtl
jge
clc
xor
jae
lahf
setge
fdivs
xchg
call
es
mov
pop
shrb
jmp
add
lret
jns
outsl
addr16
ja
aad
dec
loopne
jle
xchg
and
push
mov
nop
xor
fstl
cmp
cmp
imul
push
jne
cmpsl
mov
xchg
pop
push
in
andb
adc
sbb
and
cmpb
pop
in
sbb
mov
pop
pushf
mov
lahf
cld
clc
pop
sbb
xchg
roll
push
in
inc
add
inc
cs
pop
fsubs
mov
xor
jge
stos
adc
test
mov
mov
or
aas
adc
mov
jmp
clc
inc
fcmove
jg
xchg
mov
jg
pop
sahf
jne
addb
push
jmp
hlt
int3
cld
int3
outsl
pop
add
fcmovb
repz
jmp
push
shll
mov
sub
inc
enter
test
xchg
cmp
cmp
add
push
mov
dec
or
sub
mov
adc
xlat
lods
shrb
jno
mov
negb
cmp
lahf
into
hlt
int3
outsl
mov
jmp
xchg
pop
popa
dec
add
std
add
scas
sbb
sbb
ljmp
cld
adc
aas
push
pushf
rorl
mov
or
jmp
or
loope
or
or
adc
xchg
xor
pop
pop
pushf
and
mov
shrb
arpl
inc
lret
sbb
loope
xchg
ljmp
or
popf
mov
les
jmp
or
xchg
shlb
xchg
adc
add
or
mov
adc
fcomps
dec
mov
into
iret
arpl
xchg
mov
loopne
in
mov
incb
arpl
push
mov
mov
jecxz
sub
cli
mov
or
cwtl
nop
add
pop
aad
mov
das
mov
adc
outsl
iret
cmpsl
sub
pop
out
sub
mov
mov
shrb
in
mov
jne
jl
mov
ss
dec
dec
sub
push
xchg
dec
call
xchg
test
jg,pt
das
ss
clc
fwait
sarl
mov
mov
xchg
or
rcrb
loopne
lret
sub
dec
pop
xor
fidivrs
sub
lret
push
xchg
adc
mov
pmullw
imul
push
pop
data16
out
push
std
cltd
rcrb
xchg
fbld
cmpsb
jo
add
cmp
test
xor
ret
cmpsb
ret
ret
push
aad
decl
push
movsl
rep
push
pop
xorl
dec
imul
fildll
clc
je
adc
jne
cmp
cmp
daa
iret
xlat
je
jno
fisttps
in
icebp
pop
mov
fs
xor
jae
add
mov
cmc
mov
leave
scas
lret
push
dec
pop
inc
je
in
cwtl
outsl
mov
repz
push
ss
pop
adc
arpl
mov
inc
cmp
adc
push
aad
xchg
imul
out
lods
lret
jmp
and
pusha
xchg
mov
addr16
aas
sub
pop
add
adc
and
jb
xchg
mov
pop
and
sub
or
dec
iret
in
cld
push
jbe
int
inc
mov
insb
hlt
ds
jle
insl
push
xchg
adc
mov
adc
test
push
bound
sub
jecxz
insl
xchg
andl
ret
pop
shl
adc
data16
int
outsb
push
xor
xor
sbb
ficomps
cmp
mov
dec
jbe
pop
aaa
loopne
testb
cld
pop
jmp
dec
sti
mov
ret
jge
cltd
inc
into
sbb
cmp
sbb
xor
pop
add
push
ja
adc
movsl
test
lret
stc
insb
repz
dec
lds
pop
inc
inc
dec
xor
dec
adc
pop
pop
js
jl
enter
aaa
insb
call
cmp
in
nop
adc
int
pop
loop
mov
clc
push
and
test
neg
arpl
cld
or
bound
aas
sub
mov
adc
cmpsb
icebp
add
mov
dec
inc
inc
xchg
nop
mov
xchg
pop
and
fs
sub
les
mul
xchg
lcallw
les
jg
sbb
jns
hlt
imul
sub
xor
mov
pushf
andb
jmp
cmp
es
mov
inc
adc
or
pop
jno
arpl
repnz
stc
xchg
loopne
or
vcvtsi2ssl
fildll
outsb
jmp
into
dec
mov
flds
pushf
pop
in
es
mov
fidivrs
out
insb
jl
scas
nop
pop
lret
fwait
adc
and
fisttps
clc
in
iret
cmp
cmp
push
enter
arpl
nop
mov
ljmp
iret
adc
mov
add
sarl
adc
sub
jnp
fwait
test
sub
loope
mov
or
fisubrs
add
and
mov
adc
int
mov
xchg
cld
gs
loope
or
mov
or
ret
xlat
cmc
mov
mov
mov
sbb
push
test
pop
xchg
loop
pop
jno
jg
jbe
leave
mulb
pushf
imul
inc
decb
adc
and
mov
stos
insb
and
push
and
mov
and
cmp
dec
mul
adcb
xchg
pop
push
imul
insb
das
push
es
lea
push
and
lcall
int3
fwait
mov
or
cmpsb
sahf
pop
imul
mov
mov
out
push
dec
out
or
cmp
mulb
xchg
je
jge
jae
or
gs
mov
sub
adc
inc
loopne
dec
jle
cmpsl
test
xor
std
inc
sbb
lock
and
lret
adc
les
mov
popa
jnp
pop
mov
in
imul
movsb
int
subb
out
pop
adc
psllw
js
or
mov
sti
sbb
and
jbe
pop
push
out
divl
mov
push
cmp
ret
cmpsl
jg
sti
cmpl
cmp
sbb
iret
add
lock
hlt
mov
xchg
ret
fstps
jle
aad
outsl
shr
lret
mov
xchg
dec
mov
std
push
adc
cli
cmpsl
xor
pusha
imul
jmp
dec
lcall
movsb
jecxz
mov
sub
cld
and
jno
in
xchg
int3
push
pop
orl
mov
and
popa
push
aas
cwtl
enter
pop
inc
cwtl
xchg
jnp
pop
push
xor
sub
xlat
mov
xor
mov
std
cmp
adc
loope
mov
leave
cmpsb
iret
or
jmp
sbb
jmp
inc
ljmp
js
push
in
mov
pop
dec
ffree
ljmp
or
sub
ja
xor
sub
add
jge
loope
enter
lahf
xlat
dec
lahf
call
test
mov
mov
mov
lret
mov
dec
fcomps
mov
xchg
lret
roll
push
inc
andb
out
enter
imul
push
sub
or
add
cmpb
scas
fildl
iret
sub
jnp
out
cli
cmp
out
testb
mov
xchg
in
ret
callw
jg
jns
loop
out
cmp
shll
inc
xchg
popf
pop
pop
loopne
adc
push
js
fcomps
push
jne
aad
or
cmpsb
or
add
cwtl
push
xor
sbb
stc
and
mov
add
scas
rcl
cld
mov
dec
test
push
push
ret
addr16
and
outsl
xchg
aas
fdivs
xchg
daa
jmp
adc
jg
jno
popa
and
enter
cltd
inc
adcl
js
cmp
mov
mov
fnstsw
inc
mov
xor
inc
cld
jecxz
jo
shll
xor
dec
insb
bound
sbb
fst
pop
scas
jle
xor
xor
lret
nop
dec
fwait
jbe
pop
xchg
xchg
xchg
pop
mov
jne
sahf
xor
mov
test
cmpsl
ret
xchg
xchg
dec
mov
and
sbb
lret
jg
shl
jo
gs
dec
addl
mov
arpl
sti
and
inc
sub
lods
pushf
adc
sbb
jae
jno
in
int
in
pushf
sub
lret
sbbl
mov
das
pop
cmpsb
data16
pop
mov
repz
xchg
sbb
mov
mov
int
cld
jo
adcl
pop
cmp
lock
cmp
add
in
jbe
int
fwait
and
lea
sahf
mov
sub
pusha
inc
fnstcw
imull
das
mov
rclb
add
push
je
lret
mov
xor
add
js
xchg
push
test
sub
sti
rolb
out
incl
jb
jge
imul
cmc
dec
sub
lahf
call
pushf
pushf
and
pop
out
add
mov
sbb
xchg
and
pushf
sarl
subl
imul
mov
xchg
or
xor
pop
adc
mov
movsb
or
xchg
addr16
adc
ret
pop
cmpb
mov
cmp
test
movsl
sbb
jmp
adcl
cmpsl
lods
pop
addr16
test
scas
hlt
scas
in
mov
cmp
addr16
lahf
mov
push
jno
cmp
jg
movsb
jb
pusha
mov
xchg
cltd
ret
pop
data16
mov
int
jno
xor
inc
fiaddl
cmp
aaa
add
stos
push
lock
pushf
push
sbb
pop
xor
pop
push
mov
inc
notl
dec
xchg
insb
adc
cmp
xor
cmp
mov
cwtl
pop
lcall
adc
sub
adc
xchg
add
and
mov
mov
aas
sub
test
mov
insl
ja
clc
loopne
jo
xchg
xchg
pop
aas
pop
mov
mov
xchg
ss
inc
popa
loop
les
add
loopne
inc
and
xor
cld
xor
push
and
sahf
mov
enter
psllw
or
add
lods
mov
mov
stos
leave
or
aad
push
out
imul
movsl
xchg
out
test
dec
mov
das
pop
add
push
test
sbb
jbe
or
fwait
fwait
sub
xor
jae
sub
xor
sbb
dec
lcall
loope
inc
or
mov
addb
setne
jno
jae
fwait
aam
clc
ret
cmp
fwait
and
jbe
inc
cld
data16
push
dec
pop
stc
fcompp
mov
jecxz
icebp
dec
rcrl
jns
xchg
cmp
push
push
xor
push
inc
outsb
hlt
stos
mov
je
cwtl
dec
xchg
jl
inc
mov
lahf
pusha
jns
popa
aam
jge
lods
push
fdiv
insb
sti
das
jecxz
cltd
jb
or
loop
pop
cmpsl
adc
mov
jl
pop
mov
mov
and
nop
ja
lea
dec
mov
scas
lea
aad
or
push
dec
cli
bound
loop
xor
loopne
add
inc
jnp
and
jl
mov
lcall
stc
push
pop
iret
imul
mov
mov
pop
or
push
jne
lea
nop
push
enter
sub
stos
fcomip
jns
in
or
mov
imull
in
and
inc
xchg
mov
pop
or
xchg
mov
nop
test
add
cli
mov
jl
mov
push
add
addr16
xchg
jae
shll
mov
out
mov
arpl
fnsave
sub
inc
xchg
idiv
sub
and
and
in
rcl
jle
cmpsb
sbb
loope
add
or
sbb
arpl
outsl
inc
and
jae
test
dec
cmpsb
testl
ret
insb
sub
push
sub
pop
mov
pusha
into
cld
cltd
and
add
aas
pop
int3
loope
movsb
inc
jne
pop
sub
pop
xchg
add
popf
faddl
xor
push
inc
push
iret
pushf
push
cs
pop
mov
lret
cmpb
mov
pop
or
movsb
aaa
pop
psrlq
loope
cmp
cmp
jno
loope
call
push
inc
ret
inc
and
jl
pop
ret
add
or
mov
xchg
fs
es
ss
jae
imull
pop
ds
pop
mov
adc
jae
mov
sub
dec
jns
repnz
ret
insl
lea
dec
fisubl
pop
inc
adc
ret
sub
movb
sbbl
cmp
xchg
cltd
cmpsb
pop
out
filds
xor
and
in
xor
cli
and
fdivl
addb
test
sarl
loopnew
test
je
data16
fisttpl
sub
xorb
push
pop
mov
sbb
xchg
cmpsb
pop
test
sti
fstl
inc
negb
xor
or
or
nop
insl
ret
test
mov
es
arpl
data16
and
mov
mov
stos
sbb
cld
ret
dec
adc
fldt
test
repz
aas
stc
mov
int
shlb
arpl
sub
xchg
not
sbb
xor
gs
sbb
cld
lcall
lock
and
dec
mov
pushf
das
nop
test
pop
lea
inc
push
add
scas
test
dec
push
cmpl
xchg
jns
loope
ljmp
shll
xor
vpsrad
sbb
dec
dec
jns
adc
lret
incb
cmp
xchg
popa
sbb
fdivr
cmpsb
mov
and
popa
stos
xchg
cmp
ja
lods
jmp
int3
sahf
inc
ss
pop
mov
push
lea
push
fisttps
inc
adc
dec
leave
call
dec
pop
subb
lret
bsf
dec
cmp
outsl
arpl
cltd
lahf
in
sbb
or
call
test
dec
nop
sub
xchg
mov
out
repz
dec
lea
clc
mov
mov
dec
ret
push
mov
mov
aaa
dec
loope
xor
push
dec
movsl
xor
pop
ss
scas
subl
ds
cwtl
mov
imul
in
cmp
sbb
pop
pop
cmp
dec
or
ja
icebp
test
lret
decl
arpl
fsubp
insl
es
popl
lcall
enter
movsb
lods
pop
in
lods
adc
test
hlt
jnp
repz
add
fstpl
add
mov
jle
sub
dec
add
adc
out
dec
mov
fsubr
loopne
jmp
add
mov
sbb
out
movsb
cmp
insb
punpcklwd
pop
dec
cwtl
pop
or
outsb
dec
fisubs
push
xlat
or
mov
les
ret
dec
xor
fcompl
mov
xlat
pop
mov
bound
sub
mov
mov
sub
lahf
inc
sbb
sub
push
pusha
out
ss
sub
insb
lahf
arpl
orl
repz
loope
insl
das
mov
xchg
inc
cmp
ret
fstpl
sub
mov
jmp
mov
stos
inc
sahf
or
push
sbb
push
and
scas
cmpb
adc
insl
test
mov
mov
inc
adc
xchg
mov
mov
enter
sub
les
sbb
les
jae
shll
pop
pop
movsb
cltd
lds
bound
mov
stos
mov
cltd
or
xor
lods
pusha
ucomiss
add
xor
ficoms
xlat
or
into
es
adc
insl
jge
lcall
aas
inc
dec
inc
loope
push
stc
mov
jb
push
xor
mov
sbb
xor
movsl
sbb
jmp
mov
fnstsw
test
sbb
leave
pop
popa
daa
jmp
icebp
out
popf
shrl
gs
jbe
movsb
xchg
jge
sahf
lahf
sbb
adc
lret
cli
xchg
or
lcall
ja
icebp
mov
jns
cmp
in
scas
lods
test
add
push
jp
push
fs
mov
push
ficoml
nop
xor
push
test
add
push
stc
cwtl
push
pop
mov
xchg
test
mov
push
and
lret
sbb
jle
mov
cmp
mov
mov
add
hlt
mov
dec
out
xchg
movsb
out
xchg
mov
sbb
loope
pop
jne
sub
int3
pop
jmp
divb
inc
push
and
xchg
xor
lret
lds
cld
cmpl
cmp
test
xlat
sbb
pop
jge
movsb
mov
ror
lods
jbe
push
adc
das
dec
push
dec
hlt
aas
pop
jg
xchg
xor
mov
jo
aam
cmpsl
faddl
test
aaa
popa
push
inc
mov
in
subb
adc
das
sbb
xchg
decb
sub
popf
in
in
cmp
stos
sbb
sbb
fistl
iret
rolb
sub
xor
push
rcrl
inc
repz
xlat
xchg
loop
imul
add
pop
movsb
jne
xchg
lods
dec
cltd
xor
or
outsl
mov
data16
pop
push
xor
inc
aad
popa
jnp
sti
notb
popf
xchg
xchg
mov
dec
pop
pop
out
call
and
les
bt
jmp
xor
test
or
pop
push
sti
inc
cmc
xor
mov
or
leave
adc
daa
cmpsb
mov
cmp
add
ficomps
mov
mov
gs
sets
call
js
jl
cwtl
orb
in
or
xor
xchg
dec
outsl
fninit
mov
pop
repz
dec
outsl
mov
sub
mov
xchg
or
mov
imul
mov
sbb
lock
imul
out
test
mov
xor
repz
lret
cmc
test
lcall
popf
jecxz
mov
shrl
xchg
ja
lea
pop
insb
mov
jnp
icebp
cmp
jle
xchg
in
pmaxub
cmp
lcall
pop
das
ja
loop
push
jb
jns
xchg
pop
cltd
jle
push
popf
out
rolb
pop
cltd
pusha
cmp
add
out
addb
jno
lods
mov
and
andb
in
insb
enter
push
mov
add
pop
inc
pop
lret
sbb
pop
or
in
dec
cmp
std
das
add
sbb
adc
xchg
mov
aad
mov
cmp
imul
imul
cmpsl
idiv
lods
addr16
pushf
or
jns
sbb
mov
push
stc
sub
push
fisubrs
adc
pop
int3
jb
nop
outsb
inc
popf
add
mov
shlb
add
add
sbb
insl
xchg
pop
out
adc
jecxz
lock
fwait
jne
xor
push
push
stos
dec
jnp
insb
insl
pop
movsl
lret
or
mov
dec
pushf
es
xor
testb
rcrb
or
mov
out
push
iret
stos
or
sbb
push
dec
lret
in
mov
decl
adc
fwait
lahf
sbb
or
test
push
roll
xchg
dec
jae
or
lcall
and
in
push
add
xor
pop
inc
not
adc
arpl
sbb
mov
repnz
jno
stc
mov
test
testb
xor
add
dec
adc
ja
lds
in
mov
push
testl
mov
ja
fs
xchg
adc
js
sbb
mov
push
popf
xchg
xchg
and
loope
push
mov
mov
out
adc
mov
aad
jo
mov
movsl
xor
or
pop
push
rol
out
and
fldl
pushf
lcall
fwait
shl
out
sbb
dec
xchg
repnz
add
inc
in
dec
pop
fsubrs
dec
push
adc
mov
lods
inc
divb
cli
andb
cmp
push
mov
add
sub
mov
fnstcw
mov
mov
in
addr16
sub
pop
mov
dec
lock
aad
sub
or
adc
sbb
jle
jae
add
cld
push
pop
mov
sbb
cmp
mov
testl
push
lahf
jl
std
lmsw
push
inc
mov
loop
rcr
cli
das
test
fists
cwtl
pop
mov
xchg
rol
or
add
call
push
xchg
jecxz
mov
clc
cmc
leave
test
mov
shr
mov
in
lcall
in
jne
push
sub
stos
icebp
mov
cmp
mov
outsb
push
mov
add
or
pop
sub
shl
into
ljmp
sbb
jecxz
es
into
fstpl
pop
dec
out
push
dec
addr16
fistps
mov
aad
lahf
pop
vshufpd
pusha
pop
mov
negb
push
mov
mov
ss
lfs
xchg
leave
ret
add
inc
inc
xchg
add
mov
push
push
sti
popf
lea
mov
in
mov
stc
jne
ljmp
inc
xlat
loopne
adc
scas
in
repnz
negl
or
mov
sbb
or
nop
fdiv
and
out
sahf
insl
pop
jns
jge
test
popa
fimull
aaa
cmp
push
xor
mov
inc
in
add
xchg
nop
into
int
push
popa
jo
dec
pusha
jmp
addr16
xor
rcll
mov
or
loopne
dec
mov
movsb
jp
inc
mov
sti
out
flds
fmull
int3
inc
bound
mov
mov
mov
jecxz
int
and
clc
mov
repnz
or
es
pop
add
jge,pt
pop
mov
rclb
stos
cltd
fnsave
cmp
adc
lea
mov
pop
ret
jb
popf
mov
and
int3
pop
push
cmp
rorb
test
jmp
or
mov
push
dec
pop
push
inc
push
aam
je
mov
sub
or
jbe
inc
jecxz
pop
fsubrp
and
aas
and
or
pop
xchg
pusha
add
hlt
xor
adc
cmpsl
fists
inc
cmp
test
dec
xchg
fcmove
mov
dec
cmp
addr16
ds
xlat
xor
aad
lods
pop
jnp
out
cwtl
leave
push
lea
lock
jecxz
adc
loopne
inc
sub
or
mov
push
insb
xor
or
clc
adcb
in
mov
inc
addr16
add
xchg
adc
ret
fldcw
adc
cmpsb
shrb
sbb
fwait
mov
lea
add
push
xchg
sbb
cld
cli
push
gs
pop
addb
sub
xor
incl
jecxz
sahf
xor
mov
xchg
cli
ljmp
decb
cmp
push
aas
adc
aam
inc
sahf
subb
xchg
pop
sbb
or
pop
in
ret
dec
cmpsl
test
and
movsb
fidivs
sbb
arpl
int3
cli
lret
add
rol
sub
xchg
dec
scas
xorl
test
popf
add
pushf
cwtl
xor
dec
cmp
gs
inc
add
mov
shll
fnstsw
icebp
mov
pop
es
mull
pushf
or
jmp
cltd
xchg
ljmp
push
stos
dec
xchg
sbb
mov
cwtl
rcrl
test
lahf
js
pop
sbb
pushf
sahf
jo
sarl
pusha
loope
pusha
mov
mov
mov
add
mov
in
jg
jg
cwtl
mov
je
popf
stc
mov
stos
push
cmp
push
sahf
mov
test
in
std
mov
cmp
push
pop
cmp
rcrl
ss
pushw
popa
xchg
dec
add
pop
sbb
and
cld
je
in
mov
sbb
cmp
mov
fidivl
jno
mov
fists
cmpsb
mov
out
rcrb
mov
enter
mov
mov
adc
mov
mov
in
adc
cli
sub
cmovb
ss
mov
in
xlat
fnstenv
dec
lods
xchg
imul
fcoms
outsb
nop
xor
pop
inc
into
idiv
loop
mov
sbb
lret
mov
cmp
xor
lods
cmpsl
ror
push
stc
dec
jns
out
sbb
sarb
mov
pushl
iret
inc
jecxz
sub
pushf
movsl
pop
and
xchg
xchg
imul
xchg
cwtl
fucomi
pop
mov
addr16
dec
lods
fwait
cmpsb
test
mov
fcmovnu
pop
pop
xchg
daa
push
lret
movsb
xor
pop
test
mov
push
je,pt
pop
pop
fwait
in
add
lods
in
sbb
dec
idiv
dec
insb
mov
fcomps
fcomip
dec
mov
shrl
ret
push
or
repz
ss
mov
mov
mov
jmp
adc
sbb
add
or
inc
das
mov
jecxz
mov
rcrb
or
out
add
lcall
push
push
mov
enter
ret
enter
arpl
push
push
and
add
mov
movsb
iret
fstl
xchg
add
and
imul
test
xchg
mov
das
cmp
and
jbe
lahf
mov
and
mov
cmp
lret
jge
sub
push
into
fdivs
fwait
inc
mov
xchg
jnp
call
jp
inc
or
ds
stc
mov
out
mov
loop
jmp
xchg
out
shr
xor
mov
pop
lock
mov
mov
ljmp
mov
jb
cs
add
cmp
jb
cwtl
adc
icebp
mov
adc
push
xor
inc
and
fcoms
mov
dec
mov
scas
jmp
daa
shll
mov
int
push
lret
vshufpd
xchg
enter
ja
mov
xlat
mov
enter
pop
inc
or
stos
cmp
push
xchg
repnz
add
jge
and
add
mov
leave
sbb
lahf
push
int
inc
sub
and
outsl
sub
and
lods
jge
dec
mov
ret
add
sbb
add
div
imul
adc
lds
mov
dec
pop
push
fdivrs
jecxz
call
cltd
shl
jae
push
sbbl
mov
or
sarb
xchg
jmp
repnz
shll
pusha
loop
and
dec
idivb
jl
pusha
int3
mov
pop
adc
into
sahf
pop
movsl
sahf
add
sti
inc
lods
push
cwtl
cmp
inc
gs
push
dec
notb
push
cmp
loope
loope
int3
orl
test
faddl
push
outsb
stos
insb
pop
cli
pop
aaa
pop
test
sbb
lret
test
sbb
push
jae
shrb
sub
lret
cmp
sbb
shl
in
scas
shrl
inc
pusha
ds
mov
dec
push
imull
xchg
repnz
adc
shrb
or
dec
je
inc
mov
lods
sbb
xchg
inc
mov
adc
pop
bound
insb
push
pop
ret
jp
adc
dec
fsts
inc
daa
xor
stc
movsb
repnz
or
mov
inc
bound
out
flds
lock
stc
dec
movsl
or
movsb
cmp
aaa
in
xchg
out
push
mov
sahf
fnstenv
push
sarb
push
adc
add
notl
adc
push
scas
popa
daa
lock
jo
es
xor
fucom
and
add
mov
and
mov
and
outsl
mov
dec
mov
aam
popa
int3
iret
stc
lret
xor
cmp
or
inc
movsl
test
cs
mov
popf
fwait
nop
outsl
or
sbb
adc
and
fcoms
lret
nop
lahf
fucomp
and
or
dec
ljmp
daa
mov
mov
in
rclb
insl
cmp
xchg
inc
leave
xchg
cmp
mov
pop
xor
fmull
lock
test
enter
sahf
jne
xchg
and
xor
sbb
in
push
sbb
out
pop
test
or
jecxz
ljmp
jg
push
mov
pop
lock
loope
mov
adc
imul
fisubs
pop
outsb
jnp
pusha
std
mov
cmp
insl
mov
pop
mov
xor
pop
je
popa
sub
jp
lea
mov
push
sarl
aad
dec
and
test
cwtl
es
mov
lcall
cmpsl
lret
test
add
push
inc
out
ret
jb
jp
rclb
adc
jne
rcrl
clc
out
jecxz
mov
jne
icebp
dec
lods
mov
fisubrl
cmpsb
and
mov
jl
gs
add
mov
mov
push
enter
dec
mov
lahf
dec
push
fiaddl
mov
cltd
movsb
leave
mov
jle
outsb
imul
fisttps
xor
sti
dec
add
jo
nop
and
cs
out
cmp
rol
inc
pushf
inc
hlt
and
mov
xchg
lcall
jbe
push
das
pusha
cli
xorb
push
sahf
or
xchg
mov
push
or
push
push
ret
push
out
mov
ret
pop
cli
daa
sarb
arpl
dec
fdivrl
ret
das
jecxz
sbb
xchg
sbb
pop
xor
adc
push
sub
cmp
xor
mov
std
call
sbb
cltd
push
xor
in
mov
fwait
push
ljmp
enter
repz
subl
int
mov
xchg
mov
push
mov
fsubl
inc
mov
ss
hlt
scas
jg
sub
insl
fisttpll
sub
mov
push
mov
sub
sbb
dec
adc
icebp
add
mov
cmp
cmp
lea
and
xor
cwtl
push
jecxz
nop
pop
cmpsb
adc
sub
scas
fldenv
xor
ljmp
pop
push
or
sub
dec
and
pop
rorl
cmpb
adc
dec
jae
aas
out
cltd
push
push
pushf
sarl
addr16
inc
jmp
shll
rol
sbb
or
and
lcall
fsubrp
leave
in
cli
int
dec
sub
cmp
mov
mov
xchg
lea
popa
inc
mov
cltd
mov
jbe
adc
xchg
push
mov
sbb
loope
ret
jns
mov
outsb
loope
xor
scas
add
lods
fcomp
aaa
clc
inc
lahf
push
inc
push
dec
dec
or
push
cmp
dec
xor
iret
and
jo
adc
mov
scas
sbb
ljmp
ds
mov
cmp
loopne
inc
cmp
xchg
call
frstor
scas
inc
leave
add
sahf
and
inc
mov
loop
out
push
and
fs
mov
jno
inc
insl
cmp
sbb
mov
movsl
les
jb
rcrl
and
arpl
pop
outsb
cmp
xor
out
dec
ljmp
sahf
mov
mov
adc
xchg
outsl
lret
cmp
jp
mov
pop
push
arpl
aaa
addr16
xor
adc
push
ljmp
xchg
pop
jmp
arpl
cmp
dec
subb
das
pop
cmp
cltd
mov
ljmp
jne
xchg
addr16
fwait
loop
cmp
push
cmpsl
enter
mov
jge
push
test
lods
lahf
jp
loopw
mov
rcrl
mov
pushf
jno
ss
sbb
fsts
cmc
shr
jae
xchg
jle
pop
adc
dec
xchg
adc
in
js
lods
or
inc
clc
inc
inc
jmp
rcrl
inc
and
xlat
pop
das
ja
lret
lret
in
enter
mov
add
gs
leave
pop
push
gs
iret
cwtl
test
and
negb
fnstcw
mov
inc
xchg
pop
xchg
dec
or
fldt
cld
push
rcll
dec
arpl
sub
hlt
sub
xlat
mov
lods
lds
fmul
scas
in
pusha
push
mov
dec
or
out
sub
jne
mov
test
and
inc
cwtl
iret
jne
lcall
mov
aas
xlat
sub
pop
xor
pop
lods
sahf
movsb
mov
insl
sbb
aam
push
cmp
movsb
cmpb
insl
jmp
divl
mov
push
push
les
mov
jge
imul
fwait
mov
fwait
test
and
inc
test
mov
xchg
lret
xchg
pop
xchg
lds
and
test
push
push
pop
xlat
loopne
pop
xlat
push
jmp
decb
inc
push
in
stc
faddp
lods
and
add
mov
rorl
cmp
cmpb
ret
test
jl
inc
mov
gs
mov
adc
jmp
stc
in
mov
jmp
or
out
adc
daa
imul
push
repz
xchg
sbb
inc
dec
cli
jne
xor
aad
jns
cli
jge
xchg
in
imul
or
jns
xchg
pop
jp
jb
imul
call
mov
mov
mov
sub
lret
mov
aas
imul
cmc
sub
inc
pusha
cmp
inc
insb
outsl
xor
inc
adc
sbb
dec
pop
out
dec
pop
popf
cmpsl
inc
lods
jne
repnz
ret
dec
mov
lahf
pop
lret
jp
je
sbb
fisubl
mov
lahf
je
aas
fwait
leave
or
pushf
sub
leave
pop
inc
mov
or
mov
mov
mov
cmp
push
into
adc
cmp
add
xor
mov
lock
inc
stc
jg
iret
jnp
inc
jb
mov
sbb
pop
popa
out
mov
cmp
lahf
sub
xor
inc
jo
dec
mov
dec
pop
dec
mov
add
cld
push
or
bound
cmp
test
push
mov
dec
and
lcall
or
lea
push
mov
jne
loop
dec
push
lret
dec
orl
mov
inc
movsl
xor
sub
push
outsb
inc
inc
insl
mov
je
popa
pop
sbbb
mov
inc
mov
lods
mov
cmp
cmc
dec
test
mov
cmp
es
xchg
cmp
aas
sub
movsl
xchg
ds
repz
loopne
xor
shlb
adc
add
out
rcrb
pusha
xor
xchg
cmc
out
leave
or
push
faddp
lahf
test
mov
mov
sbb
cwtl
pop
lahf
lods
dec
jne
mov
mov
sbb
inc
sbb
inc
idivb
pop
jo
jo
jl
dec
ret
in
ret
stos
push
mov
lret
in
or
call
cmpsb
xchg
jge
xchg
in
push
jnp
in
cmp
cmp
icebp
xchg
shl
dec
xor
imul
pop
inc
in
or
pop
mov
inc
xchg
cmp
fstl
icebp
pop
fcompl
movups
lret
xor
sahf
or
mov
das
imul
shll
fsubrl
in
pop
xor
notl
pop
test
xor
repz
push
add
mov
jp
jne
pop
js
cmc
adc
sub
in
dec
rorl
adc
loope
out
ret
cmpsl
xor
std
arpl
pop
xor
jb
popf
scas
arpl
inc
pop
mov
cmp
and
in
loope
adc
out
push
idivl
and
sub
xchg
cmp
mov
cwtl
dec
pop
lret
add
sahf
loopne
xchg
movsl
cmpsb
mov
inc
out
jbe
jbe
and
adc
scas
adc
add
dec
xor
or
mov
mov
aam
int3
inc
pop
inc
sub
out
mov
xchg
outsb
mov
sub
sub
push
cmp
xor
loope
fsub
adc
sahf
repz
ret
dec
in
shrl
adc
add
jo
push
shll
addr16
pusha
scas
push
xchg
mov
push
adc
push
sarb
in
loop
fcoms
aas
enter
movsb
inc
leave
inc
adc
jbe
lock
and
ret
stos
cli
xchg
repz
pop
cltd
aam
leave
xlat
inc
mov
mov
add
mov
into
incl
fdivs
cmp
icebp
lods
mov
xchg
push
jl
dec
cmp
loope
popa
cmp
inc
out
add
ds
leave
les
aas
sub
pushf
add
stos
inc
sub
push
movb
jmp
test
in
sub
popf
insl
sub
mov
out
std
mov
sub
and
mov
movsl
lods
fs
push
iret
loopne
js
mov
xchg
mov
and
clc
sbb
idivb
aam
pusha
and
cwtl
loopne
lods
daa
fcmovne
lock
in
push
mov
inc
out
cs
jno
jl
test
or
pop
sti
decl
gs
and
ljmp
ss
pop
pop
sarb
push
jl
cli
int3
jle
pop
test
add
in
sbb
clc
mov
push
cmp
stc
hlt
sahf
mov
sub
mov
les
insb
subb
mov
in
into
jmp
in
push
leave
mov
cmp
dec
gs
movsb
mov
jp
mov
cmp
fdivl
ffree
rclb
popf
aaa
dec
movb
push
or
out
and
sbb
or
daa
in
adc
mov
xchg
ljmp
shrl
sub
call
pop
jo
fwait
imul
push
int3
pop
dec
mov
and
pop
push
mov
imul
sbb
mov
ljmp
adc
add
outsl
sahf
mov
fstpt
aas
mov
test
stos
adc
js
sub
jmp
xor
inc
xchg
cld
aas
push
inc
in
dec
popa
pop
mov
jp
adc
mov
lods
out
jae
in
xor
mov
cmp
pop
adc
movsb
add
les
pusha
fdivrs
xchg
cld
lods
dec
scas
loopne
leave
sub
int
es
mov
in
xor
jp
push
rcll
stos
push
rcll
cmpl
xor
jecxz
inc
mov
fs
mov
and
mov
mov
shll
mov
ds
xor
cmp
pop
jno
clc
fs
lret
mov
aas
je
test
cmp
xor
mov
ds
pop
inc
jno
js
icebp
add
cwtl
jp
push
mov
lahf
push
das
rcl
and
mov
or
scas
mov
cltd
ljmp
xchg
add
cmc
sbb
mov
fwait
sbb
ljmp
mov
int3
out
stc
insb
push
imul
jmp
jmp
xor
xchg
cmp
syscall
imul
negb
movsl
and
or
mov
lea
cmp
xor
lret
ret
test
xchg
cmp
mov
cmc
xchg
int
mov
cld
mov
loopne
sti
and
add
sub
in
fadd
or
jns
xorl
or
test
js
adc
mov
test
hlt
mov
dec
scas
xchg
loopne
push
int
mov
int3
bound
or
mov
jp
lret
push
sub
and
mov
aad
out
in
pop
inc
xchg
ficompl
movsl
das
jp
jno
adc
mov
or
std
and
mov
lcall
loopne
mov
popa
rcll
cmp
in
mov
mov
jle
and
adc
sbb
lret
sub
lock
js
fcoms
push
clc
daa
sti
and
int
xchg
xchg
hlt
dec
jns
add
fists
inc
mov
test
xchg
sbb
sub
jb
out
jle
scas
push
stos
mov
fcmove
ja
mov
stc
lahf
testb
iret
das
testl
outsl
pop
pushf
popa
and
in
lods
dec
lcall
loope
das
cmp
nop
or
mov
push
push
repnz
mov
in
add
jmp
repz
or
stos
lock
mov
cmpsl
aas
mov
xchg
mov
loop
jecxz
or
ljmp
out
pop
enter
jl
fstl
repz
lcall
and
inc
mov
ret
sbb
push
mov
xchg
enter
and
test
mov
ret
paddusw
xchg
shr
das
mov
add
sahf
outsl
imul
je
cmp
xchg
pop
test
popa
icebp
es
nop
jmp
push
popf
inc
xchg
pop
add
jecxz
mov
pop
mov
movsl
xchg
mov
pop
pop
mov
xchg
push
scas
jg
mov
pop
shrb
aas
std
ret
test
out
lret
cltd
xor
insl
pop
jb
repz
addr16
sub
test
lea
lea
push
imul
inc
sub
jnp
cmp
and
xor
and
in
adc
sub
mov
inc
shll
popf
lcall
mov
xchg
cwtl
loopne
xor
loope
iret
js
ficomps
xchg
mov
push
aaa
out
das
dec
in
push
jecxz
fadd
sahf
sbb
mov
sbb
into
fs
push
or
push
dec
mov
imul
mov
or
imul
inc
div
push
push
jp
or
or
adc
cmc
xor
mov
mov
leave
loopne
daa
adc
pop
push
mov
lret
inc
add
push
dec
pop
pop
es
lods
shl
cmc
fisttpl
dec
mov
or
out
inc
sahf
jmp
outsb
mov
cmp
clc
out
xor
insb
add
jp
mov
addl
or
stc
push
sub
xchg
inc
clc
fimull
xor
lods
xchg
dec
inc
xchg
popf
popa
pop
and
adcl
test
push
xor
push
call
call
jnp
inc
fistpll
xor
rolb
inc
or
jmp
into
pop
pop
and
ffree
mov
pop
xor
clc
clc
arpl
mov
neg
fdivl
push
bound
and
push
pop
pop
adc
outsb
leave
sahf
movb
jae
rorl
add
pop
mov
movsl
adc
js
mov
xchg
pop
sbb
ja
out
pop
sbb
mov
pop
lret
mov
pop
popa
stos
movsl
sbb
fdivl
pop
adc
mov
bound
loop
test
pop
daa
sbb
jmp
cmp
dec
push
pop
std
pop
in
imul
mov
push
jb
or
stc
mov
cmp
mov
dec
les
mov
dec
aas
mov
rcrl
fsubp
in
stc
test
aam
adc
xchg
les
cmp
pusha
ret
outsb
or
pop
sbb
out
fstl
pop
jo
imul
fistpll
mov
negb
lea
shlb
mov
inc
add
mov
mov
mov
xchg
sub
and
stos
and
in
subb
call
outsl
adc
in
cmp
pop
popf
movsb
mov
cs
psllq
mov
dec
jno
je
dec
pusha
sub
fsubrl
out
push
cld
lret
and
aam
pop
arpl
es
cwtl
fstps
cmp
push
push
mov
fdivl
enter
sti
scas
imul
jmp
xor
mov
addr16
out
cmp
xor
std
cmp
mov
int
cwtl
addr16
sbb
sahf
lods
ljmp
test
jb
jns
xchg
sti
xchg
stc
cmp
sbb
adc
into
push
mov
mov
std
out
ljmp
pop
add
testl
jg
popa
push
ljmp
lahf
mov
outsl
je
test
xlat
xchg
add
xlat
repz
fdivs
mov
push
fistps
sti
sbb
pop
int
and
ds
mov
cmpsl
out
adc
dec
mov
in
fiadds
jns
cwtl
xchg
xlat
mov
shl
push
mov
jmp
sahf
cmpsl
into
pop
jecxz
insl
mov
cmc
cmp
sub
mov
or
mov
lea
mov
inc
adc
adc
or
popf
xchg
cmp
icebp
insb
test
pshufw
fwait
cmp
dec
loop
mov
jmp
adc
fwait
pop
cmp
push
outsl
movsb
mov
cli
sbb
lret
xorl
add
or
pushl
cld
mov
iret
jns
and
lahf
subl
push
or
sub
jecxz
je
addl
mov
mov
arpl
push
mov
cli
test
dec
mov
loopne
xlat
dec
mov
xor
mov
and
xor
aaa
daa
enter
mov
jle
fisubs
push
outsb
jb
xlat
aaa
push
pop
test
test
pop
rcl
aas
adcl
pop
mov
fwait
lds
mov
fnstcw
mov
movsb
outsl
out
mov
mov
push
add
pop
sub
sub
dec
xchg
push
mov
xor
out
mov
int
jno
sub
js
and
pop
in
and
jne
cltd
daa
mov
cmc
int
sub
shr
inc
lret
and
mov
fdivrl
mov
xchg
iret
and
shlb
or
rorl
outsb
jp
fmull
ret
out
aas
lret
dec
sbb
and
call
inc
into
imul
lret
lea
cmp
ljmp
add
sahf
nop
into
mov
dec
jb
xor
inc
outsb
sub
aas
xor
dec
sbb
xor
jmp
stos
repz
mov
test
test
shll
mov
sub
movsl
popa
lcall
xor
dec
xchg
icebp
mov
scas
daa
pop
icebp
shr
jb
addb
jl
mov
dec
mov
inc
jno
iret
fisttps
idivb
aad
fisubs
or
jg
cmc
das
stos
sar
jecxz
shll
dec
xor
movsl
outsb
hlt
xchg
mov
or
orb
xchg
je
fidivrl
sub
leave
movsb
cmp
mov
mov
mov
cld
xlat
dec
pop
dec
add
mov
in
dec
or
or
add
xor
push
push
mov
add
or
cmp
adc
xchg
push
inc
dec
arpl
movsb
std
inc
cmp
movsb
sbb
hlt
and
insb
test
xchg
xchg
push
jae
mov
pop
mov
fisubl
out
or
sub
jmp
aam
or
dec
mov
sbb
inc
icebp
addl
xor
xor
jle
inc
push
mov
pushf
adc
popa
fs
lds
mov
inc
les
pusha
std
push
imul
fistpll
inc
add
add
lods
rclb
pop
jl
sbb
mov
mov
cltd
int
aam
lahf
cld
lds
fdivs
mov
xchg
stos
inc
xchg
loop
dec
aaa
push
pop
pop
jns
insb
mov
mov
enter
inc
sbb
stos
jnp
daa
xchg
mov
adc
xchg
and
mov
lea
lahf
xlat
jo
xor
add
jnp
cmp
jno
into
mov
push
fcom
jb
cmpsb
arpl
fisttpl
mov
xchg
adc
sub
and
cmp
lahf
pop
mov
push
mov
dec
jp
lahf
popf
lret
jle
loop
les
mov
fwait
cmp
sahf
outsl
in
test
rcrb
cmp
je
ss
lods
dec
mov
pop
fwait
nop
push
xor
mov
jns
add
cmpsb
leave
dec
mov
inc
sub
dec
mov
xlat
or
cs
sbb
pop
bound
adc
xchg
push
xchg
das
out
imul
clc
cmp
iret
push
ret
mov
imul
sub
xchg
pop
flds
push
cmpsl
mov
mov
ds
ror
movsl
pop
nop
stos
cld
jno
insl
stos
dec
frstor
movsb
jo
scas
push
mov
adc
dec
scas
xor
adc
orb
cltd
inc
pushw
loop
inc
and
fwait
push
lock
sub
loope
adc
or
rolb
fucomi
sbb
push
insb
sbbl
xor
xchg
cmc
mov
enter
and
int
sbb
insb
pushf
pop
js
inc
mov
or
popf
outsb
xchg
jne
push
push
loopne
and
pop
lcall
mov
test
xlat
add
jp
ret
std
scas
jnp
addr16
fistps
arpl
int3
lret
mov
inc
mov
mov
loopne
mov
aaa
jmp
mov
push
xor
add
lock
cmc
gs
pop
add
jle
add
movsl
push
into
jb
lds
jbe
rorl
mov
fwait
jbe
outsl
mov
into
dec
xor
xchg
pop
dec
gs
in
aas
xor
jne
dec
mov
mov
pop
sbb
das
mov
andl
add
in
adc
xchg
call
dec
mov
testl
dec
lcall
das
push
inc
xchg
aaa
js
xchg
mov
dec
inc
sbb
insb
sbb
pop
scas
scas
xchg
lea
sub
mov
popa
inc
mov
pop
icebp
pushf
mov
mov
scas
imul
sub
jns
mov
xchg
add
sbb
sbb
push
add
mov
mov
and
mov
stc
pop
or
lds
stos
push
sub
mov
jne
inc
mov
aas
ret
fwait
or
mov
ds
bnd
inc
aas
sbb
mov
cmp
cmp
je
mov
cmpsb
in
fdivs
mov
lock
fbld
outsb
test
cs
test
mov
test
int
cmp
lods
out
add
push
pop
add
cs
ret
ljmp
mov
sbb
test
jle
jmp
popf
push
fistpll
mov
sbb
gs
dec
mov
add
jno
xchg
decl
jb
dec
mov
pop
popf
out
fstl
mov
lods
addr16
test
enter
jmp
pop
xchg
and
cli
mov
mov
jecxz
xor
stos
clc
and
dec
fwait
loopne
je
pop
lods
pop
scas
mov
xchg
out
fwait
mov
gs
fistpll
lock
mov
sbb
sti
mov
push
loop
sbb
in
subl
fbstp
sarl
inc
jmp
fiaddl
stc
push
push
xor
aad
xlat
cmp
data16
mov
cmc
and
lahf
pop
stos
out
ja
add
jl
push
cmp
pushf
xor
lock
loopne
dec
out
jo
push
mov
xor
mov
xor
sbb
daa
add
xchg
fisubl
pop
nop
push
test
dec
insl
icebp
mov
cmpsb
xchg
pop
adc
mov
xchg
cltd
xchg
cltd
test
or
sub
imul
into
lods
insl
push
dec
jmp
push
add
outsb
mov
das
push
push
outsl
dec
lret
or
pop
pop
popf
arpl
or
out
add
movsb
dec
xlat
mov
or
sbb
out
push
scas
add
mov
push
and
das
in
xor
mov
add
or
xorb
mov
inc
jmp
jp
nop
arpl
int
add
enter
and
gs
addr16
xchg
jmp
adcl
adc
mov
shr
xor
pop
dec
cmp
dec
xor
mov
aaa
ljmp
jge
imul
xchg
mov
or
pop
add
xor
mov
push
jae
movsb
in
inc
xchg
fs
add
hlt
inc
movsb
xchg
insl
xorl
imul
roll
repz
pop
mov
and
stos
movsl
mov
fmull
adc
mov
test
imul
dec
dec
cmp
push
push
fcoms
dec
shl
xchg
out
out
inc
jbe
xchg
cltd
adc
dec
or
jge
pop
pusha
dec
cmp
pop
cmp
cmc
cmc
push
pusha
fidivrl
xchg
addr16
mov
sbb
fsubr
sbb
mov
in
pushf
in
fmul
xchg
jl
cmpsl
mov
push
nop
ficoms
dec
rclb
and
call
mov
mov
xchg
push
xchg
xchg
ds
imul
and
mov
push
neg
cltd
mov
or
ljmp
and
mov
push
imull
aas
mov
test
and
dec
mov
xchg
je
mov
xchg
ret
push
sbb
mov
packsswb
add
jns
adc
sbb
aas
out
push
rclb
cli
mov
outsb
cmp
or
xor
sti
jg
dec
mov
sbb
imul
lcall
andl
and
adc
mov
jnp
pop
fmul
lods
outsb
insb
push
lahf
mov
mov
test
xlat
and
jbe
gs
scas
mov
jno
mov
mov
pushf
js
sbb
es
push
mov
mov
lret
arpl
sub
inc
in
push
mov
adc
sti
in
out
repz
pop
js
xlat
sub
popa
insl
mov
test
sbbb
sub
cmp
adc
icebp
in
out
mov
repnz
and
xlat
bound
call
or
cltd
sub
test
std
test
lret
cmp
xor
leave
inc
mov
popa
scas
js
push
sbb
xchg
in
jbe
sbb
mov
stc
in
or
pushf
ret
inc
fwait
shrl
and
inc
sub
mov
into
jle
mov
jmp
xor
js
test
and
inc
add
push
addr16
sub
or
mov
ret
mov
clc
mov
jp
dec
mov
shl
mov
or
xchg
inc
repz
test
sub
sbb
jecxz
fldenv
and
adc
shrb
cwtl
dec
test
aam
jb
or
sti
adc
mov
inc
jp
incl
and
shll
fcmovbe
dec
shlb
test
add
cmp
cmpsl
or
inc
aad
into
shrl
sbb
sbb
sbb
push
stos
or
fldl
jne
js
mov
dec
ljmp
dec
addr16
inc
shlb
mov
xchg
pusha
fs
cli
cmp
mov
jne
mov
fmull
mov
addr16
div
sub
mov
int3
mov
jo
mov
popf
mov
je
adcb
pop
push
xchg
in
mov
imul
xor
vpacksswb
or
dec
add
out
ljmp
test
out
dec
fbstp
mov
cli
mov
mov
les
adc
mov
popa
repz
push
pop
push
outsb
add
cmpsl
cmp
mov
xor
negl
popa
jge
loope
mov
sbb
lcall
sti
adc
inc
xor
mov
push
fwait
and
stos
xchg
push
xor
es
aaa
pop
and
jae
push
mov
add
lret
cmp
scas
pop
je
sub
mov
rclb
adc
sarl
loopne
cmp
inc
dec
insl
and
xchg
pusha
xor
fcompl
lret
jnp
scas
lahf
adc
ret
and
mov
jno
dec
mov
stos
popf
icebp
add
je
int3
jle
xchg
mov
add
pop
icebp
inc
mov
mov
adc
sahf
repnz
aad
cmp
add
imul
mov
ret
shrl
out
ret
addr16
std
xlat
out
jg
mov
sub
int3
cmpsl
or
fnstsw
jmp
jb
push
inc
mov
movsb
adc
insb
imul
call
mov
pop
inc
scas
outsb
nop
orb
jbe
pop
call
les
pusha
pop
mov
cmp
jg
lcall
movsl
adc
cltd
test
mov
pop
mov
daa
repz
mov
xor
rcll
outsb
lds
pop
xchg
fwait
xchg
mov
xor
test
sbbb
push
fldpi
adc
add
mov
mov
ja
mov
mov
sahf
ljmp
stc
push
fsubs
push
ljmp
das
cld
or
clc
lcall
mov
mov
mov
push
pop
pushf
popf
jnp
cmp
pop
movsl
sbb
dec
add
ss
jmp
push
push
popf
fcoml
jle
daa
stos
es
stc
adc
or
aam
out
mov
xor
sbb
popa
and
push
sub
adc
inc
sub
sub
cmp
sbb
test
test
testb
shlb
out
pop
add
push
inc
inc
adc
data16
ss
insb
rcrb
xor
scas
das
mov
clc
in
lret
mov
push
out
or
sub
ja
dec
arpl
repz
jg
popa
push
mov
aaa
in
psrlq
sub
pop
cmp
sub
mov
mov
addr16
and
fs
int3
inc
mov
mov
add
clc
ds
rorb
push
in
add
lcall
push
inc
bound
fldcw
andb
ss
in
sbb
fstpt
sub
adc
ss
repz
cmp
insb
cmp
fdiv
mov
icebp
push
mov
push
mov
mov
addr16
aaa
sub
pop
xchg
sar
mov
int3
mov
and
popf
or
cmp
insb
sbb
cmpsb
adc
pop
jmp
inc
pop
adc
fnstcw
mov
mov
decl
lcall
mov
cli
mov
pop
lret
xor
fdivl
mov
mov
mov
in
add
imul
into
sbb
fimuls
sbb
push
cmp
sti
call
notl
and
sbb
dec
ljmp
inc
xor
lcall
lretw
xor
out
xor
or
pop
test
or
adc
mov
adc
js
rolb
or
push
mov
lret
push
push
in
out
inc
lea
lea
cmp
push
call
sub
pop
mov
dec
ret
jecxz
jno
cmp
aas
xor
adc
aam
and
movsl
push
cmc
and
add
sub
orb
repnz
jnp
dec
and
dec
xchg
dec
fiaddl
stos
mov
shlb
in
fistl
xlat
jns
loop
xor
xor
pop
sbb
in
test
mov
push
add
ret
mov
mov
into
and
mov
or
andb
xlat
pop
xchg
addl
dec
xor
clc
fldcw
push
adc
and
lret
adc
addr16
or
xchg
shlb
mov
into
movsl
incl
cwtl
out
cmp
lahf
stos
aas
cmpsb
xchg
cwtl
int3
iret
popf
jns
push
mov
xchg
test
or
popf
or
inc
pop
rorl
and
dec
arpl
popf
mov
fwait
jae
insl
data16
pop
andl
and
and
add
inc
movsl
aas
aad
inc
je
xchg
pop
pop
cli
imul
cwtl
jb
loop
iret
dec
pop
iret
rolb
or
push
daa
mov
push
push
pop
mov
fsubrl
pusha
mov
sbb
xchg
and
addr16
cltd
jg
push
loop
xchg
loop
push
test
in
leave
sub
and
out
cmpsl
add
scas
jp
imul
movsb
fsubrl
shll
inc
cli
jb
push
adc
pop
and
or
movsb
in
cmpsl
jae
data16
jmp
lret
outsb
sti
ficomps
pop
adc
xchg
repz
xor
cmpsb
imul
mov
mov
pushf
notl
mov
inc
int
sbb
outsb
jge
ja
xlat
leave
loop
cs
aam
repz
cld
movsb
stc
lock
inc
xchg
stc
xchg
sti
rcll
std
cmp
xor
pop
cwtl
and
inc
add
into
int
dec
add
leave
jmp
addr16
lock
sarl
data16
ficoml
jle
mov
cmp
icebp
mov
out
test
or
pop
mov
lds
dec
es
ljmp
and
mov
insb
dec
popa
sub
loope
sub
add
mull
outsb
xchg
push
cmp
sub
gs
dec
test
into
jmp
adc
scas
and
scas
bound
pop
pusha
jns
adc
sub
iret
inc
mull
repz
push
int3
aaa
sbb
aam
dec
hlt
or
flds
fwait
int3
rolb
or
insb
loopne
pushf
mov
fisttpl
stos
outsl
adcl
push
xor
out
inc
clc
movsb
mov
dec
jg
cmc
push
arpl
push
out
inc
pop
loop
jo
ljmp
cmpsl
out
add
dec
scas
jge
mov
movsb
cmp
call
mov
inc
nop
xor
aaa
aam
jmp
fists
push
inc
sbb
sahf
cwtl
jae
push
pop
les
mov
popf
lcall
jnp
xchg
mov
lds
mov
int3
xor
pusha
outsl
add
sub
adc
call
xor
and
imull
or
pop
adc
mov
and
div
or
jecxz
sub
mov
rcl
imul
jns
xchg
mov
test
mov
movsl
scas
xor
popl
xchg
iret
inc
sarl
push
jae
dec
sbb
lock
jae
xchg
jno
dec
in
sub
cmp
push
and
cmpsl
inc
rorb
mov
mov
lcall
sub
push
push
arpl
loopne
and
decl
cmp
lea
push
xor
or
push
push
push
inc
mov
outsb
orb
and
repnz
pushf
mov
fmull
xchg
nop
or
dec
scas
in
sub
nop
repz
mov
mov
dec
mov
test
cld
mov
ljmp
mov
and
sbb
jle
dec
insb
decb
hlt
or
pop
add
cmp
repz
ja
stos
or
and
xchg
in
pop
xchg
and
movsl
orb
sbb
inc
cld
inc
into
std
stc
inc
rcrb
xor
and
cs
mov
out
sub
leave
cmp
dec
mov
mov
sbb
cmp
push
in
mov
add
mov
cmp
cli
add
cmp
push
sbb
pushf
inc
mov
mov
xor
xor
jb
push
jmp
fsubrl
jmp
popf
cli
mov
sarl
je
hlt
and
xor
xor
sti
test
cmp
inc
int3
shlb
pushf
cltd
clc
dec
in
lock
xchg
add
out
ficoms
in
ja
pushf
icebp
adc
aam
shld
mov
and
push
sub
aas
ror
sti
jl
sub
cmp
dec
pop
push
stos
loope
pop
dec
jo
xchg
cmp
xor
mov
enter
cmp
rolb
insb
call
mov
lahf
dec
ret
inc
es
stc
mulb
pop
lahf
cwtl
aad
repz
insl
sbb
ds
mov
or
xor
pop
insl
pop
jbe
test
icebp
lret
sub
fadds
mov
adc
pop
filds
lret
mov
dec
insl
ds
pop
sar
popa
sbb
jbe
mov
sbb
fs
or
lcall
cmp
xcrypt-ecb
cmpsl
lret
mov
sahf
sbb
sti
fsubl
pushf
jb
cmp
xchg
cmpb
xchg
cmp
not
js
or
jge
jae
inc
inc
sub
mov
icebp
fmuls
in
call
inc
pop
mov
jle
mov
in
popf
lods
sub
push
and
pop
push
outsb
cmp
jecxz
in
in
movsl
gs
pop
push
test
xlat
rep
push
outsl
dec
adc
mov
pop
lahf
cli
mov
mov
dec
in
rolb
push
inc
in
cmp
dec
movsb
fcom
jnp
bound
xchg
cmp
mov
sbb
xchg
adc
arpl
mov
xor
cmp
ss
shrb
xchg
mov
cmpsl
xchg
cli
push
or
jmp
jnp
push
out
pop
mov
sbb
bound
stos
dec
sbb
xor
push
pop
dec
and
pop
xor
cmpsl
and
rcll
xchg
and
test
fwait
sbb
jbe
dec
fistpl
xchg
notb
aam
push
icebp
in
inc
push
ret
cmp
les
hlt
push
and
in
or
cld
xor
in
aad
or
insb
xchg
lea
add
push
testl
pop
gs
dec
lock
cwtl
insl
rcrb
dec
mov
push
mov
stos
lods
mov
clc
or
dec
jle
pop
or
clc
pop
pop
repnz
and
jge
cmp
inc
shld
cmpsb
test
or
cmp
jmp
sub
mov
pop
jp
cltd
mov
fistl
xor
mov
lret
or
adc
iret
pusha
mov
mov
jg
aas
ljmp
or
lret
mov
sbb
mov
sub
sbb
movsl
pop
xor
adc
out
fisttpll
mov
test
adc
jno
call
fcoml
loope
mov
ficompl
pop
je
and
lea
lods
aas
adc
push
lret
or
cmp
out
push
add
test
xchg
insl
mov
add
stos
repz
cmp
jmp
test
ja
mov
and
push
jl
inc
or
add
fisttpll
sub
dec
aas
movsb
bound
int
inc
popl
adc
insb
mov
pusha
jnp
jbe
les
cmp
push
das
sbb
sub
mov
fcmovbe
sbb
fs
shlb
pop
or
mov
jno
jns
push
scas
sbb
xor
subl
arpl
cmp
jle
xchg
mov
cmp
jne
jne
aam
arpl
mov
mov
lods
les
std
dec
mov
add
mov
push
inc
xchg
fsubl
fisubrs
inc
mov
ficoml
pushf
or
pushf
sbbl
hlt
je
fwait
add
xchg
hlt
mov
xchg
lods
cmc
clc
adc
in
mov
sub
and
idivb
inc
cmc
mov
aaa
fxch
inc
repz
jge
movsl
arpl
or
cld
movsb
lea
aas
jg
mov
jmp
je
fimull
int
sbb
cmp
stos
movsl
cmp
imul
dec
rcrl
mov
sbb
mov
jne
mov
rcrl
sbb
lods
fwait
arpl
icebp
lret
imul
ja
adc
sarl
xor
xchg
push
dec
rcrl
std
iret
cmpsb
mov
std
in
fsubrl
hlt
cmpsl
scas
loop
jecxz
fisubs
inc
xor
pop
test
adc
mov
jmp
ds
out
push
jl
adc
pop
mov
push
xchg
and
push
rorl
sbb
push
lea
sti
shl
cld
ret
push
push
shrb
test
adc
call
xchg
es
cmc
lea
fsubs
sub
mov
add
fistps
jg
popa
dec
fmuls
stos
cs
in
dec
dec
jecxz
in
repnz
ss
inc
or
mov
xor
in
inc
fiadds
inc
jge
push
and
rcrl
imul
jb
je
jns
push
push
pop
ss
xor
sbb
inc
in
adc
std
aas
add
sbb
sbb
gs
es
mov
aam
movsb
push
cmp
loope
gs
iret
jmp
sbb
or
insl
mov
xchg
xor
and
dec
stos
inc
push
lret
scas
shll
insl
rcrl
mov
xchg
les
ja
pop
or
xchg
pop
arpl
adc
ret
dec
stos
jnp
jnp
mov
aad
mov
in
fldcw
out
ss
mov
push
pop
push
pop
mov
notrack
mov
arpl
fldl
mov
sub
xchg
adcb
insb
pop
pop
sahf
mov
popa
mov
adc
stc
ret
add
inc
xchg
lahf
push
push
int3
mov
into
xor
jae
or
fwait
xlat
push
lcall
jbe
dec
repz
daa
lret
mov
push
fiadds
xchg
push
icebp
jbe
popa
das
mov
or
adc
nop
pop
dec
mov
les
lcall
lods
pop
mov
push
outsl
jnp
and
cmp
dec
add
mov
rcrb
xor
dec
pop
cmp
or
pop
or
and
inc
sbb
scas
mov
jp
inc
bsr
jecxz
cli
lahf
fsubrs
repnz
mov
sub
outsb
or
xor
mov
xchg
std
sbb
stos
out
push
jle
xor
insb
inc
cmpsb
and
dec
and
cmc
hlt
outsl
pop
lds
adc
out
es
repnz
js
ret
in
inc
cmp
jnp
jecxz
shrl
push
adc
clc
and
or
jns
or
dec
push
jmp
xchg
popf
in
dec
adc
mov
sub
jno
inc
arpl
adc
mov
inc
stc
pushf
mov
cmp
rcr
idiv
jecxz
and
push
or
add
js
cwtl
or
aad
shrl
xchg
nop
inc
mov
mov
adc
pop
pop
in
inc
insb
nop
lret
ss
aad
pop
je
imul
stos
hlt
cmp
bound
inc
in
fldenv
mov
ret
repz
xchg
shrb
sbb
les
xchg
clc
fmul
hlt
xchg
fs
int
rcrl
push
arpl
cmp
loope
xchg
repz
mov
inc
xchg
pop
jecxz
mov
sub
add
push
adc
in
lahf
orl
pushf
jo
cmovle
out
sub
lea
call
or
jne
outsl
outsb
or
outsl
mov
sub
jnp
lahf
jle
inc
out
jmp
push
sub
and
mov
jo
lea
push
repnz
cltd
add
mov
lods
adc
pop
sbb
xchg
mov
loop
mov
mov
pop
in
mov
mov
xchg
cld
out
enter
pop
mov
pop
scas
mov
jecxz
ds
fildl
dec
xchg
cld
mov
xor
inc
sbb
sbb
ds
mov
xchg
and
mov
into
mov
mov
mov
sti
out
insl
popf
xor
mov
mov
movsb
das
imul
jns
or
jle
ret
xor
movsb
add
lock
jns
inc
dec
pusha
add
retw
mov
mov
jl
test
movsb
adc
jmp
jns
xchg
movsl
insb
cmp
sub
inc
sarb
ret
push
push
pop
decl
in
xorl
pop
adc
outsl
mov
xor
or
add
xchg
stc
js
add
dec
cmpsl
inc
int3
clc
pusha
call
pop
int
or
movsb
insb
out
or
pop
icebp
jbe
out
sub
insb
mov
adc
pop
mov
ds
adc
shll
notl
xor
test
scas
mov
or
gs
int
mov
cmp
popa
andl
ficoml
fisubs
cmp
js
dec
repnz
mov
and
and
aas
jecxz
testb
inc
scas
mov
in
outsl
xor
jnp
mov
dec
mov
or
icebp
sbb
push
or
mov
jae
lahf
es
js
and
dec
jle
jbe
jae
enter
icebp
insl
cmp
stos
notb
ret
fcoms
fsts
notb
xor
mov
push
or
sarl
roll
add
mov
xor
dec
sub
into
mov
adc
cmpsb
mov
cs
inc
popf
inc
mov
dec
jnp
ss
mov
cltd
fstp
ficompl
adc
mov
shrl
sbb
pop
mov
push
roll
cmp
adc
or
pop
loope
shll
inc
jecxz
add
into
out
pop
call
dec
cwtl
jb
mov
xlat
fsts
xor
pop
repz
lods
xchg
push
test
ret
cwtl
or
sbb
arpl
pop
lds
jmp
addr16
shrl
repz
mov
add
pusha
in
jecxz
sbbl
cmp
xor
lahf
adc
add
pop
lea
in
fcomps
mov
inc
add
loope
push
add
mov
rcr
outsl
add
std
or
jns
cmpsb
mov
xchg
adc
jmp
cwtl
test
lods
mov
cmpsl
lahf
xchg
das
ss
pop
or
lods
jl
outsl
rcrl
jne
sahf
jbe
adc
shlb
mov
adc
mov
lret
sub
lods
inc
and
lret
mov
cmovnp
add
sub
std
mov
test
xchg
clc
data16
je
push
std
dec
xor
xchg
int3
repz
push
imul
popf
gs
nop
movsl
sahf
jne
pop
sarl
jnp
test
xchg
cmp
inc
add
push
push
aaa
cmp
mov
and
adc
stos
clc
ret
pop
imul
enter
lcall
jmp
and
mov
sbbl
inc
cmp
jnp
sbb
lret
dec
stos
cmpsl
aad
mov
xchg
stos
inc
cmc
adc
bound
or
cmp
jecxz
xchg
mov
jmp
sub
inc
fldcw
xchg
lret
js
dec
inc
mov
arpl
push
and
mov
idivl
add
popa
or
loop
out
and
inc
test
ret
and
fs
lods
outsl
cmpsb
sbb
add
cmc
in
in
lret
pop
in
nop
test
jecxz
les
mov
mov
int
xor
insb
hlt
cmpsl
jnp
rclb
imul
sbb
out
imul
mov
xchg
and
or
je
stos
push
cmpsl
mov
in
fisttps
mov
or
push
push
fs
nop
sahf
aam
lahf
pop
mov
gs
xlat
xchg
in
je
std
push
clc
mov
push
or
jp
mov
dec
pop
mov
or
xor
or
mov
jge
jge
pop
inc
xchg
imul
push
cmp
push
test
jno
cmp
adc
push
xchg
mov
lods
pop
dec
sub
xchg
cmp
pop
imull
adc
enter
xchg
in
ja
inc
pusha
arpl
gs
cmp
xchg
adc
jae
mull
test
std
jno
xchg
mov
mov
sbb
cmpb
push
scas
sbb
inc
xorl
pshufw
mov
sub
push
xor
pop
add
add
dec
xchg
jg
sbb
jbe
add
add
jmp
cltd
jecxz
push
inc
test
jnp
sbb
ss
cwtl
arpl
cld
pop
pushf
cwtl
jo
inc
hlt
clc
mov
int
test
xor
ret
add
pop
fs
mov
mov
add
pop
xchg
push
pusha
cli
inc
hlt
ljmp
imul
cmp
mov
shrl
add
mov
rcll
gs
int3
adcl
or
mov
lock
add
rorl
xchg
sbb
icebp
shrb
inc
pop
ror
outsl
repz
inc
mov
lea
xchg
xchg
push
xor
gs
jg
or
in
popa
aam
mov
aas
fildl
bound
mov
mov
popf
cmp
imul
push
mov
pop
in
test
push
mov
lock
pop
shlb
js
leave
cmpsl
xchg
jmp
mov
jo
dec
aas
cmp
cs
stos
adc
shll
insb
mov
sbb
cmp
mov
xor
dec
popf
clc
mov
je
dec
scas
push
inc
loop
in
mov
enter
push
leave
mov
jno
cmp
push
mov
in
add
dec
out
push
sahf
scas
mov
lods
xchg
add
xor
lock
in
sahf
sub
sbb
dec
bound
ljmp
into
cmp
mov
lret
fcomps
and
jle
mov
inc
and
inc
ss
or
popa
sbb
cld
push
adc
iret
xor
ljmp
in
ljmp
imul
loopne
nop
sbbb
leave
or
lret
imul
jmp
lods
pop
negb
adc
jae
or
mov
mov
push
lret
dec
add
mov
out
push
gs
aad
xchg
arpl
jne
mov
gs
aad
xchg
pop
int3
sub
push
jle
sahf
cmp
push
gs
dec
scas
fldl2t
inc
ds
xor
push
out
adc
xchg
dec
scas
fs
mov
add
popf
mov
nop
sbb
mov
and
mov
fldenv
adc
xchg
inc
cmpl
shll
jecxz
pop
rcrl
popa
das
add
popa
nop
or
cmc
cmpsl
clc
loopne
xchg
mov
pop
dec
push
sbb
push
xor
xchg
sbb
addl
inc
imul
push
mov
imul
stc
inc
sbb
dec
xchg
stos
fadds
mov
incb
jmp
ja
mov
in
insl
cmpsl
icebp
xchg
push
jnp
sbb
sub
filds
inc
test
loop
stc
jge
push
sub
cld
or
cmp
and
sti
mov
or
mov
jnp
xchg
sbb
cld
and
xchg
scas
fdivp
mov
add
add
clc
test
sbb
fcompl
loope
fs
repnz
pop
sub
fnsave
xor
ja
jbe
loopne
cmpsl
dec
jg
add
and
aad
cld
loopne,pt
je
addr16
pop
nop
je
mov
testl
std
les
inc
arpl
xchg
mov
add
jns
aas
cmp
adc
push
gs
scas
mov
push
sahf
adc
negl
frstor
mov
mov
int
xchg
jp
std
cwtl
add
imul
and
sti
mov
in
mov
addb
cmc
lock
adc
cmp
sbb
push
dec
push
insb
jmp
pop
ds
or
js
stos
dec
shr
enter
mov
or
or
mov
ljmp
jecxz
notb
fs
ret
sarl
enter
pushf
dec
gs
mov
push
xor
lea
ds
movsl
sbb
jbe
mov
mov
push
lret
mov
repnz
dec
andl
jo
mov
es
fcoms
call
xlat
inc
mov
mov
mov
sbb
imul
daa
loope
ret
push
dec
cmp
jl
push
xor
mov
iret
sti
xchg
sbb
inc
fstpl
push
jb
and
aam
mov
ss
ror
mov
cmc
fstp
adc
and
out
jg
dec
sub
inc
pop
dec
pop
ret
aad
cmovae
loop
stc
int
aam
cwtl
nop
out
mov
push
rol
or
in
push
adc
ret
es
data16
cmp
into
jmp
add
movsb
int
sbb
adc
in
insl
cmc
out
out
push
hlt
cmp
inc
and
out
fdivrp
movsl
je
sub
sahf
sbb
push
jo
clc
cmp
mov
xchg
out
lret
cmp
jl
push
aas
les
mov
imul
push
sbb
les
jo
enter
negl
xchg
ljmp
shlb
jl
push
jns
xchg
les
sbb
adc
jne
dec
pop
outsb
cmp
mov
into
dec
out
lods
cmc
das
pop
jae
int3
call
rorl
mov
cld
or
fs
mov
sub
mov
in
insb
imul
or
loope
dec
mov
cltd
cld
jb
xchg
cmpsb
hlt
sub
lods
lcall
data16
mov
mov
lock
rcr
jg
lea
int
pop
popa
xchg
mov
lret
movsl
cmp
shl
icebp
ficomps
xor
mov
out
mov
mov
lret
sub
test
fwait
sub
or
sub
stos
pop
pop
test
xor
gs
or
and
inc
pop
inc
enter
insb
cmp
push
mov
ret
mov
sub
popf
aad
xchg
mov
sbb
loop
sub
repz
cmp
xchg
mov
shr
push
sbb
test
mov
iret
mov
pusha
sbb
or
push
or
cwtl
dec
out
jl
dec
jecxz
push
and
pop
sbb
leave
mov
cmp
pop
and
pop
pop
inc
stos
ss
loopne
and
gs
stos
loopne
sbb
je
insl
lock
scas
cmp
jmp
fcomp
cmpsb
cltd
stc
mov
and
in
mov
xchg
mov
cmp
rorb
mov
xchg
gs
fbld
mov
push
jnp
scas
push
jp
mov
dec
pop
jl
jecxz
dec
pop
xchg
mov
cli
jae
mov
xchg
int
push
jl
aas
cmpsl
inc
mov
push
filds
sub
repz
test
lea
and
mov
mov
ja
in
les
and
xchg
pop
add
inc
xor
mov
xor
push
movb
jbe
sbb
push
ds
jmp
loope
sarl
idivb
lock
xchg
push
cmp
sub
add
outsl
pop
jmp
cwtl
divb
outsl
es
mov
les
mov
leave
xchg
ss
sbb
sbb
add
loopne
loope
rclb
and
xor
push
sub
inc
cmpsb
cmpsl
jecxz
jo
stc
movsl
push
cmp
xchg
scas
addr16
sub
out
add
sahf
sarb
mov
xchg
mov
enter
push
or
jg
mov
add
lahf
cmpsb
mov
inc
mov
inc
inc
inc
test
iret
or
daa
enter
nop
sbb
pop
jmp
movsb
in
stos
jne
dec
test
fcmovu
jmp
or
sahf
es
int3
adc
cwtl
or
das
mov
jae
ret
je
push
add
lret
and
addl
mov
sub
cltd
cli
stos
add
cltd
into
outsb
stos
xor
sbb
pop
repnz
nop
mov
adc
xchg
dec
ret
push
cmovb
lcall
sbb
or
sub
fists
mov
lea
fwait
cmpsl
fldz
cmp
popl
leave
mov
xor
scas
aaa
cmova
dec
inc
mov
push
push
adc
mov
shlb
lahf
push
fstl
scas
cmp
call
adc
in
push
movsl
fwait
inc
jmp
xor
add
in
sub
mov
mov
scas
arpl
dec
dec
sbb
adc
mov
lds
fisttps
push
mov
jnp
add
sbb
and
sub
and
fwait
jl
icebp
insl
lahf
rcrb
cld
mov
pop
jl
push
enter
inc
lea
jns
dec
pop
pop
sbb
lods
adc
xor
rcrb
into
xor
xor
ret
divl
out
add
xor
cmp
push
cltd
sub
je
int
lods
subl
fdivrl
das
out
jge
movsb
fcmovne
hlt
rolb
adc
mov
int3
test
fcmovu
rol
jb
fnsave
icebp
pop
std
jecxz
rcrb
mov
sbb
and
cmpsb
repz
mov
rorb
aad
stc
add
in
jno
mov
add
dec
mov
stos
mov
out
inc
sub
push
psraw
sub
loope
ret
adc
testl
sbb
xchg
aaa
and
mov
adc
inc
inc
adc
mov
mov
and
add
ret
inc
popa
out
pop
sub
das
loope
in
jmp
ljmp
or
sbb
test
cmp
cmp
push
jmp
and
mov
inc
add
test
push
inc
arpl
insb
or
popa
lcall
pop
lret
jnp
mov
mov
scas
xchg
sar
dec
jecxz
cmpsl
sbb
gs
ss
jne
lods
add
js
sub
cmpsb
adc
adc
popa
xor
dec
lods
movsb
ss
dec
mov
pop
insl
and
mov
inc
mov
bnd
repz
mov
xchg
cmp
rclb
jp
or
addr16
sub
jg
mov
movsb
mov
jmp
mov
scas
xor
jmp
mulb
dec
xor
inc
adc
dec
repz
inc
sbb
add
aaa
in
mov
out
test
sub
aam
sub
wbinvd
jno
push
out
in
rcr
sbb
inc
adc
adc
lock
inc
pop
or
in
in
pop
lret
fs
push
fs
rcll
out
ret
jnp
andl
test
mov
or
nop
sub
pop
xor
scas
insb
mov
or
cwtl
shll
cmp
adc
and
addr16
out
in
or
inc
enter
std
imul
pop
movsl
frstor
std
cmp
in
cmpsb
pusha
inc
mov
cwtl
mov
ffree
lods
push
mov
test
ud2
mov
jne
aaa
int3
xchg
je
call
mov
es
cs
mov
icebp
xchg
loope
scas
ds
adc
sbb
cs
cmp
push
insb
adc
aaa
xchg
incb
mov
in
pop
in
or
mov
clc
or
cltd
sub
pushf
mov
lods
inc
outsl
lods
pop
jle
sub
ljmp
call
lret
fidivrl
imul
iret
std
imul
jae
popf
lret
aas
dec
sub
push
inc
jl
mov
sbb
and
insl
mov
dec
movsb
clc
test
sbb
leave
and
add
adc
outsb
in
lea
mov
jmp
arpl
ss
mov
repnz
jno
sti
lods
jle
mov
jecxz
mov
cmp
sbb
xor
cmp
sub
ret
xchg
mov
adc
pop
cmpl
jnp
lahf
sahf
repnz
dec
xor
cli
out
add
aas
dec
xorb
add
sbb
mov
add
sub
out
into
outsl
inc
test
stos
cmpsl
scas
jne
pop
ret
jl
mov
pop
jecxz
data16
mov
dec
mov
sub
mov
call
and
lods
jp
xchg
js
movsb
mov
xorl
mov
mov
mov
push
insl
dec
dec
in
es
popl
mov
repz
cld
imul
inc
push
cmpsb
mov
dec
mov
and
pop
jne
dec
mov
mov
and
push
sub
sbb
iret
dec
sub
xchg
int
in
dec
xor
add
stos
push
or
pop
xchg
icebp
les
pushf
and
jge
imul
sarl
fisubs
cmp
daa
push
mov
mov
repnz
mov
push
and
fnstenv
in
xchg
xor
or
ja
ja
imul
loop
insb
loope
stc
pop
cmpsb
lea
xchg
jo
or
sbb
lds
sbb
arpl
xchg
jo
outsl
mov
and
test
add
xchg
adc
and
xchg
xlat
inc
sarw
sbb
inc
ljmp
movsl
ss
xchg
jae
cltd
js
es
jnp
xchg
bound
push
jnp
xchg
cltd
cmp
jnp
es
sbb
push
loop
shr
aad
test
jmp
gs
inc
lcall
adc
mov
test
inc
inc
and
test
add
in
in
cmp
data16
inc
xchg
sbb
xor
xchg
xlat
jge
std
cwtl
fs
mov
popa
cwtl
popf
cmp
dec
stos
das
dec
pushf
mov
cmp
in
mov
in
aam
push
push
dec
sub
fidivl
test
lods
lret
sbb
fwait
or
mov
mov
mov
out
insl
pop
dec
cmp
fs
aas
or
test
sbb
sti
xor
fucom
add
mov
xchg
lret
decl
xchg
pop
xlat
sarl
arpl
enter
push
insl
inc
div
aad
jmp
sub
in
scas
sbb
sub
push
mov
std
adc
lcall
cmpsl
xchg
dec
sbb
pop
mov
mov
sbb
add
jb
xor
adc
dec
push
movq
std
lret
fs
and
rorl
jg
mov
dec
ret
adc
movsb
es
dec
test
popf
jmp
dec
and
sbb
jg
sarb
xor
test
cmp
add
xchg
mov
and
add
fs
imul
cld
xchg
scas
mov
ss
int
movsl
adc
fistps
jno
mov
test
cwtl
mov
lods
xor
mov
inc
inc
pop
jmp
out
jge
mov
push
lea
push
pop
lods
shl
and
cmp
mov
add
dec
xor
jnp
sub
out
push
loope
push
clc
fimuls
mov
or
adc
or
pop
sub
scas
or
mov
mov
scas
push
and
sbb
mov
loope
jb
mov
js
mov
movsb
les
sbbb
mov
dec
xchg
mov
addb
cmc
jbe
fdiv
imul
mov
push
test
push
xchg
loopne
lds
cmp
ljmp
sub
sbb
bound
int
mov
push
in
mov
mov
mov
int
test
dec
xchg
sub
sbb
cltd
imul
test
xchg
push
jge
out
int
inc
or
stos
dec
fldenv
mov
call
mov
sbb
cmp
jbe
loop
imul
test
cld
mov
jge
mov
lcall
jmp
add
out
pop
in
or
mov
push
ret
jle
data16
push
lock
cmp
call
js
popf
pop
daa
cld
movsb
xchg
jae
fistl
cmp
xlat
fwait
nop
repz
jno
jns
lret
pop
lret
mov
std
pushw
pusha
andl
cltd
mov
or
and
adc
jbe
mov
inc
sti
mov
addr16
mov
or
dec
xor
out
idiv
or
push
ss
xor
pop
loopne
xchg
enter
lock
lea
cs
push
stos
jb
xchg
push
dec
and
lds
mov
cmp
or
add
ss
je
mov
or
jns
xchg
jbe
dec
add
nop
fldenv
sub
cltd
jnp
pop
mov
push
cmp
stc
unpcklps
in
aaa
mov
sbb
pop
sbb
push
or
xor
shlb
or
ljmp
cltd
cmpsl
or
inc
adc
mov
addr16
inc
popa
sbb
mov
mov
imull
or
adc
dec
jbe
fidivs
idivb
test
aam
xor
inc
out
daa
cmp
popa
nop
mov
lahf
mov
ret
outsl
lret
push
push
mov
push
fucomip
mov
jbe
jmp
and
stos
push
and
addr16
mov
lcall
call
ret
fisubrl
lret
push
mov
lods
les
popa
aad
into
adc
sbb
push
adc
xchg
push
xchg
popa
dec
ljmp
outsl
cmp
fdivrp
xchg
add
fcompl
mov
lods
cmp
lret
sbb
insl
ret
sub
pop
loope
inc
push
sub
mov
xor
jg
outsb
into
cltd
lret
sbb
or
outsb
xchg
or
push
dec
aas
xchg
lock
dec
ret
xchg
cmpb
fs
stos
xchg
or
lds
sbb
jae
inc
cmp
arpl
and
aam
xor
lea
pop
cmp
insb
fistpll
xchg
push
js
mov
xchg
cli
mov
outsb
lods
shll
scas
jb
mov
scas
je
xor
movsb
cmpl
outsb
jmp
push
pop
test
adc
push
mov
and
xorb
sub
jmp
out
xor
jecxz
mov
push
jp
insl
fs
mov
sub
in
movsl
pop
sub
insb
xchg
psraw
fldenv
insb
sbb
xor
mov
sbb
inc
lret
inc
pop
ror
std
popf
dec
in
stc
cld
call
adc
pop
sub
aam
inc
sahf
and
les
and
fwait
cwtl
repz
sub
scas
pop
nop
mov
ret
loop
lods
fstl
es
mov
int3
ja
jae
je
pop
movsb
out
xlat
pop
mov
ja
std
dec
jge
push
xchg
addr16
jecxz
lods
inc
fstps
push
rorl
and
leave
xor
mov
jmp
fs
js
xchg
xchg
aas
cs
mov
mulb
jg
sbb
aaa
ret
jbe
xchg
pop
sub
test
or
aam
sbb
sahf
ret
sub
shlb
aas
mov
dec
mov
mov
cmc
fs
addr16
sbb
popf
cmpsb
mul
pop
push
movsb
sarl
or
cli
mov
sahf
sub
scas
adc
push
jno
sbb
data16
sbb
rolb
inc
sbb
movsl
lock
std
cmp
test
and
lahf
insb
je
in
add
xchg
lret
mov
clc
pushf
pop
and
jns
push
mov
aad
jns,pt
fcom
ja
lock
fiadds
xchg
shl
pushf
mov
sub
mov
aad
dec
dec
les
rorl
testb
push
lea
mov
fisubrs
xor
mov
out
xlat
jnp
dec
and
in
sub
jae
into
lcall
sub
jecxz
nop
negl
aam
lods
cmpl
xchg
jnp
xor
daa
jl
jb
jl
inc
cld
inc
pushf
pop
imul
add
pop
movsl
cmp
lahf
jb
out
xchg
adc
adc
push
add
fcmovu
icebp
cmp
insb
shrb
mov
ret
lcall
fnsave
push
lock
icebp
lods
mov
roll
fwait
mull
sub
scas
xor
add
or
stc
adc
push
or
out
adc
subb
fildll
ljmp
loopne
push
ret
movsl
mov
pushf
or
int
daa
movsb
pop
sarl
inc
add
std
xchg
movsl
pop
jp
add
xchg
adc
inc
pop
insl
add
ds
out
into
push
xchg
and
loope
add
dec
test
jnp
test
sbb
pusha
call
xchg
or
inc
test
jmp
pop
cmp
fisttps
xlat
xchg
test
sub
testl
aaa
aas
adc
or
aaa
add
jle
repz
inc
pop
mov
arpl
dec
xor
mov
adc
cmp
pop
add
jbe
movsl
mov
and
scas
mov
int
mov
movsl
mov
sub
loop
dec
stos
ret
into
aad
das
stos
cmp
les
outsb
orb
mov
outsb
jl
fnstcw
push
dec
daa
and
js
icebp
mov
out
das
xchg
add
pop
scas
dec
add
daa
fnsave
mov
lea
mov
sub
pushf
add
pop
testb
inc
mov
xor
pop
sbb
lods
shlb
pushf
addr16
shll
xor
jle
jns
popa
pop
push
or
insl
jp
pop
xchg
push
std
jle
js
and
xchg
std
mov
and
pusha
push
xchg
mov
and
ret
test
into
mov
popa
fucomip
push
insl
mov
push
mov
adc
mov
xor
mov
inc
in
ret
rcl
lods
or
lahf
les
add
adc
mov
xlat
int3
lret
add
ret
loopne
sbb
and
xorl
adc
loopne
sub
faddl
loop
sbb
repz
lcall
daa
dec
shll
out
pop
js
xor
and
jp
sbb
test
rcrb
jbe
mov
imul
pop
cwtl
sub
xor
xchg
xchg
push
ds
stc
mov
inc
cs
loopne
sahf
in
dec
adcb
flds
clc
jg
fistpll
mov
dec
std
in
std
cmp
dec
lock
dec
lret
pop
mov
fnstsw
lret
or
in
leave
icebp
icebp
adc
adc
xor
pop
sarb
sbb
or
adc
or
cld
daa
aaa
mov
pop
dec
loop
icebp
or
mov
dec
pop
lahf
jno
jo
pop
out
mov
pop
pop
and
int3
cmp
rclb
ret
in
xchg
mov
pop
xor
and
push
dec
pop
mov
push
sbb
sbb
sbbb
stos
mov
mov
sub
in
orl
jp
push
pop
jnp
sahf
sub
aam
icebp
ret
fwait
mov
ss
push
scas
mov
fmuls
cmpsb
and
outsl
pop
pusha
jle
sub
rcll
inc
sub
mulb
jb
mov
mov
out
clc
or
inc
mov
adc
loope
mov
mov
xor
lret
cmpsl
pop
mov
push
scas
push
add
ret
pop
movsl
lcall
aam
lcall
jno
aam
push
add
mov
das
inc
mov
pushf
add
cmp
loop
xchg
or
mov
dec
cld
je
add
cmpsl
les
add
jle
and
aad
push
data16
inc
bnd
dec
jp
push
inc
ds
mov
xchg
rclb
stc
aaa
or
adc
movsb
mov
dec
test
inc
jb
test
and
jne
int3
cmp
pop
pop
call
dec
mov
xor
dec
into
cmp
sub
imul
and
sbb
test
movsb
xchg
mov
add
sbb
pop
test
aam
cli
jle
fbstp
gs
dec
mov
inc
rcrb
jge
xchg
lea
jle
sbb
nop
cmp
pushf
mov
jl
aaa
addl
imul
dec
aas
cmp
pop
sbb
sub
scas
and
mov
shrl
cld
inc
testl
dec
ja
aaa
adc
and
jbe
mov
mov
add
jne
cmpsb
test
lock
cmpb
adc
outsl
mov
dec
in
ret
dec
add
and
pusha
std
enter
cltd
push
lods
dec
dec
iret
sbb
pop
repnz
stc
add
dec
pop
sub
in
imull
jbe
jo
and
lcall
pop
adc
jne
fimuls
sti
xchg
mov
cmpsb
sbb
pop
stos
movsb
xor
sbb
jo
lahf
cmp
lret
pop
pop
loop
jne
mov
out
aam
jmp
jge
das
iret
out
xor
add
push
movsl
fs
iret
repz
sbb
js
pusha
lock
pop
push
dec
mov
ljmp
dec
test
xlat
sbb
or
sarl
push
add
mov
scas
stc
jno
repnz
out
adc
xchg
inc
pop
stc
xor
pop
push
imul
out
ficompl
ja
jle
sub
aas
mov
pop
jns
pop
mov
dec
xor
shlb
inc
movlps
cltd
inc
sub
sub
jns
and
pop
jb
clts
add
imul
rclb
cmpsl
lahf
nop
ret
push
jp
dec
sub
cmp
test
cwtl
cmp
pop
fidivs
and
mov
jo
push
inc
sbb
ret
and
mov
pop
imul
push
test
nop
mov
jno
dec
test
je
jne
pushf
addr16
mov
flds
xlat
or
test
jo
dec
mov
mov
leave
test
push
sbb
mov
imul
push
dec
loope
cwtl
ja
js
adc
add
and
imul
roll
adc
lds
inc
sbb
mov
clc
jne
scas
movsb
mov
loope
mov
cld
inc
pop
sub
es
addr16
jbe
mov
dec
aaa
sti
mov
out
stos
push
pop
jge
xchg
xchg
pop
loopne
in
push
add
insl
scas
cmpsb
fcom
pop
mov
jb
into
pop
notb
in
fidivrs
subl
movsb
imul
pop
lcall
jp
cltd
xchg
jecxz
aam
ds
mov
xor
cmpsl
insl
iret
enter
push
sbb
pop
mov
pop
mov
add
cmp
scas
sbb
gs
inc
push
repz
ficompl
daa
dec
and
cmc
jp
stc
out
int
xor
pop
les
cmp
cmp
stos
jnp
push
pop
in
mov
mull
cmp
fidivrs
xor
push
mov
shrb
fcompl
popf
aam
out
inc
xor
jl
mov
mov
lcall
jge
and
push
push
sbb
stos
sbb
jae
mov
mov
mov
or
neg
xor
imul
dec
sbb
mov
jge
ljmp
sarl
push
ss
push
cmpb
lds
mov
test
and
mov
ljmp
mov
test
data16
mov
insb
push
psubb
scas
pop
addr16
or
inc
pop
dec
sbb
or
pop
imul
dec
jmp
pop
adcl
or
jmp
insb
adc
shr
js
aad
pop
aaa
push
dec
cmp
sbb
mov
xchg
loope
sub
scas
enter
mov
or
out
mov
jge
pop
loop
popf
dec
cmc
xor
imul
scas
repz
and
jmp
and
fdivrs
mov
adc
outsl
or
cmpsl
movsl
leave
adc
dec
sbb
dec
push
ret
js,pt
int3
sti
dec
xor
push
push
dec
in
dec
xchg
sahf
adc
aad
mov
loope
mov
cmp
mov
pop
mov
adc
pop
inc
in
in
pushw
jecxz
cli
xchg
cmp
jo
js
outsl
mov
sahf
xchg
dec
clc
aad
out
cmp
or
push
xor
addr16
fdivs
pop
insl
mov
cld
push
and
stc
loopne
sbbb
jb
clc
testl
shll
fidivl
loope
push
sbb
xlat
inc
lcall
scas
add
in
jno
inc
add
and
pop
jecxz
adc
out
sbb
xchg
loop
pop
in
mov
imul
imul
les
sbb
add
mov
jb
sub
pop
insb
mov
and
in
loopne
push
inc
gs
jp
femms
mov
xchg
pop
xor
shll
lds
test
and
jge
sbb
pop
sub
or
imul
repnz
xchg
lods
xor
out
adc
nop
pop
test
pushf
fistpl
or
pop
push
xchg
movsb
inc
jp
xor
dec
sbb
mov
sbb
icebp
or
mov
addb
ljmp
call
jg
jno
pop
jl
add
mov
hlt
xlat
icebp
push
jnp
lea
dec
push
rcll
mov
push
aad
mov
mov
jae
mov
scas
jb
bnd
dec
inc
mov
into
je
mov
scas
cmp
push
pop
dec
mov
add
cmpb
insb
mov
aas
jns
jecxz
popa
stc
push
pop
sar
dec
lahf
sub
movsb
push
sbb
imul
jp
call
ret
ficompl
in
ss
push
dec
cmp
dec
xchg
and
xor
scas
fcomip
mov
pop
jp
add
cmp
scas
test
mov
rep
and
orl
fmuls
shl
fistps
into
aam
dec
jecxz
jge
mov
mov
jnp
push
int
push
lahf
mov
not
xor
pop
out
cld
iret
mov
push
mov
xor
xchg
daa
flds
and
clc
sub
sbb
hlt
test
lret
sbb
jnp
mov
cltd
lcall
sub
add
fucomi
ja
movsb
ret
fdivr
push
repnz
pop
loope
push
or
and
xchg
addl
xchg
pusha
rclb
and
and
mov
lods
xchg
push
lret
cs
pop
inc
imul
jge
inc
in
jno
cmc
sub
shll
cmp
jge
pop
pushf
stc
jl
adc
jns
inc
leave
repz
rorl
jp
inc
imul
loope
mov
pusha
mov
lret
pusha
lcall
rclb
mov
or
int3
mov
xchg
dec
pop
mov
outsl
push
repnz
lds
js
lcall
dec
enter
mov
pop
shl
sarb
jmp
mov
xlat
outsl
dec
xor
and
push
xchg
jnp
xchg
repnz
adc
pop
pop
mov
cli
mulb
mov
iret
xlat
icebp
inc
aam
insl
je
and
jbe
and
sbb
in
pop
std
mov
cwtl
rolb
cmp
call
lods
subl
test
jo
outsb
cmpsl
data16
xchg
fsts
xchg
cmp
sbb
or
cmc
jne
push
jmp
shll
std
je
jno
pop
imulb
jl
add
or
lahf
mov
mov
mov
sarl
lds
int3
mov
dec
pop
iret
gs
mov
dec
xchg
fists
pop
pop
stos
or
jb
fsubl
aaa
xchg
fcoml
mov
loop
and
sbb
jae
lret
xor
dec
xor
dec
sub
push
mov
pusha
xchg
and
int3
dec
pop
rcrl
fmulp
loop
xor
add
aaa
es
sbb
jae
cwtl
pop
push
or
dec
imul
and
jno
jbe
push
lcall
jl
outsb
push
ret
fbld
and
stc
mov
stos
cmpsb
sub
sbb
popa
les
jb
jp
mov
or
fsubrs
mov
sbb
enter
daa
pop
cmp
mov
push
xchg
ljmp
push
xchg
fs
adc
adc
hlt
test
jne
out
dec
bnd
xchg
cmp
ret
sub
cmp
cmp
iret
sbb
push
pop
dec
subl
int
sahf
adc
and
js
lods
decl
adc
adc
ss
les
or
push
bound
stos
out
out
or
jno
pop
sbb
cmp
and
lahf
xorb
and
fs
cmp
aam
mov
popf
push
stos
sbb
lret
out
mov
leave
mov
dec
aam
lcall
lret
scas
jns
jns
mov
inc
pop
out
out
xor
ss
daa
cli
cltd
jae
aam
or
xchg
test
or
pop
dec
rcrb
or
and
cmpsl
mov
cmp
and
jg
scas
scas
sbb
scas
add
iret
pop
jecxz
lret
sub
cmpsl
adc
mov
pop
inc
inc
aad
cmp
jle
add
or
jge
xor
into
test
rolb
sub
gs
insb
inc
mov
sub
push
aaa
shl
mov
insl
pop
and
mov
testl
movsl
push
pop
test
dec
push
xchg
ss
xor
jecxz
fsubrs
fcompl
mov
mov
iret
fnsave
cltd
rcll
mov
fidivrs
pop
mov
outsl
mov
sub
mov
sbb
inc
movsl
cwtl
pop
sbb
fnstsw
in
ret
dec
mov
les
dec
test
push
cmp
mov
mov
push
add
movsl
mov
vpmacsdql
stc
divb
imul
enter
inc
shrb
push
jge
sti
rolb
push
aam
mov
mov
mov
jne
adc
popf
test
xchg
in
hlt
sti
mov
inc
push
add
mov
rolb
js
xlat
dec
int
fidivrs
and
cmp
cmp
push
mov
sub
addr16
mov
and
mov
in
pop
mov
pop
out
mov
pusha
xchg
ficompl
add
fsubl
fs
lods
movsl
xor
scas
aaa
cmp
fisubl
stos
push
cltd
add
and
in
aad
ja
cs
sbb
jo
fst
add
int
push
mov
xchg
scas
cmp
cs
inc
loop
and
mov
subl
xchg
pop
fldt
dec
add
les
xchg
mov
mov
push
fwait
in
adc
jge
lds
lcall
jp
and
or
mov
push
pop
hlt
subl
popf
lret
roll
add
mov
xchg
pop
int
arpl
lods
jns
mov
xor
sarl
push
shll
je
mov
mov
mov
popa
sub
inc
std
xchg
js
mov
sub
cmp
outsb
popf
roll
adc
push
inc
mov
enter
shlb
sbb
aad
leave
xchg
sti
pop
inc
adc
cmp
fs
test
fistpl
xorb
out
cli
mov
add
cli
jle
mov
pop
cli
xor
in
imul
xchg
or
or
jge
cmpsl
hlt
fisubl
pop
daa
mov
aas
mov
dec
das
js
inc
mov
pop
call
add
das
ret
ret
push
enter
or
aas
xchg
mov
das
iret
jbe
jo
cwtl
sub
jp
imul
pop
pop
inc
jns
lods
mov
xchg
dec
les
or
inc
sbb
filds
test
mov
rclb
add
push
cwtl
pop
ficoms
jnp
out
jecxz
jecxz
enter
fldenv
or
adc
pop
js
int3
orl
filds
cmp
xor
jmp
mov
mov
mov
shll
cmc
mov
xchg
mov
dec
hlt
mull
sbb
imul
addb
cltd
stc
inc
xor
iret
push
sub
push
cmc
lods
jmp
pop
int
aam
cmp
ret
ds
mov
adc
jne
inc
sbbb
daa
imul
pushf
jb
push
jo
int3
enter
mov
fistpl
cmp
ljmp
flds
int
fisubrl
inc
lds
xor
dec
xor
xchg
mov
clc
or
orb
adc
xchg
scas
cmp
dec
jbe
and
orb
push
and
push
dec
jne,pn
arpl
ret
or
push
test
js
and
cmp
pop
add
sarl
jmp
in
loope
or
ss
pop
outsl
add
pop
cmp
xchg
jae
fdivrs
cltd
cmp
gs
xchg
lods
sahf
in
push
xor
es
loop
lods
sti
imul
imul
mov
adc
cmp
in
notl
loop
fcoms
mov
xor
mov
sbb
jge
mov
inc
sbb
mov
dec
into
add
mov
ficoms
pop
add
mov
cmp
sub
stos
out
add
icebp
movsb
sbb
xchg
das
pop
push
pop
push
fcompl
cli
xor
es
adc
and
int3
sarl
add
pop
mov
arpl
popf
fwait
out
neg
cmp
loope
cwtl
mov
xorb
fmul
les
add
out
adc
inc
test
pop
call
imul
jmp
xchg
adc
or
das
add
push
lea
and
and
dec
outsb
jp
cli
lret
std
and
sbb
jge
xchg
mov
orb
insl
idivl
sub
pop
xor
sbb
cmp
pop
jb
testb
xchg
xchg
jns
or
call
and
fwait
xchg
mov
add
repz
leave
inc
mov
add
test
mov
cmp
jb
inc
pop
ficomps
sbb
mov
aad
jp
add
pop
lods
sub
mov
arpl
imul
and
dec
sub
mov
cltd
mov
outsl
idivb
rcrl
jae
jnp
xchg
jl
loope
sub
call
sbb
loope
fldenv
xchg
cmp
aad
pop
or
ret
cwtl
cmpsb
cmpsb
sub
jg
sub
adc
sbb
push
pop
push
xchg
sarl
icebp
loop
pop
aas
pop
loope
cmp
iret
adc
cmpsb
js
sub
and
lea
mov
dec
loopne
jp
jno
or
ret
push
hlt
sub
repnz
movsb
inc
cmp
push
adc
dec
shrl
cs
hlt
push
mov
addb
out
cld
sbb
out
divl
push
mov
int
pop
ss
mov
mov
adc
int
cs
stos
mov
pop
jl
cmc
jg
sarl
stos
pop
in
pop
nopl
push
lods
test
push
rclb
inc
jmp
into
pop
jbe
sbb
dec
jo
daa
sub
inc
sbb
andl
inc
pop
xor
inc
or
inc
or
lock
sub
jl
test
mov
push
bound
sti
insb
xchg
loop
dec
pop
cmpsl
and
push
sub
and
mov
aam
les
roll
pop
xchg
cmp
or
pushf
adc
mov
mov
dec
popa
pmaxub
push
js
xor
dec
push
shll
mov
mov
inc
fnstenv
and
lret
adc
cmc
aas
add
out
dec
int3
dec
push
testb
xlat
out
sub
ffreep
pop
add
sbb
xchg
pusha
push
popf
xchg
addr16
adc
mulb
in
icebp
frstor
cmp
add
sbb
popf
and
stos
pushf
or
push
lods
call
sub
fsubrl
stos
pop
lock
mov
dec
xchg
mov
pop
outsl
lods
gs
mov
std
imul
daa
das
mov
popa
outsl
cmpsl
jmp
inc
aaa
and
push
pop
mov
clc
adc
enter
ss
aaa
aad
mov
aas
mov
xchg
push
xor
mov
nop
xor
mov
adc
mov
jne
std
stos
xchg
and
fbld
and
lret
dec
out
or
lods
aas
add
adc
push
cltd
sbb
mov
or
test
mov
mov
movl
fidivl
or
ljmp
mov
fstl
int
mov
adc
lock
outsl
ficoms
fisubs
xchg
or
cmp
out
push
mov
mov
mov
dec
cmp
mov
or
jl
inc
mov
mov
call
sbb
cli
mov
mov
popf
cmp
imul
pop
imul
jle
sub
jecxz
int
out
loop
sarl
and
dec
mov
aaa
fwait
sub
sbb
add
push
push
jmp
jle
nop
cmc
push
pop
xchg
dec
jg
setno
aam
cwtl
loope
and
loopne
mov
aad
fs
sbb
insl
lods
xchg
cmp
jmp
int3
gs
jae
ds
push
jg
push
mov
stos
inc
mov
es
sti
inc
dec
dec
nop
loope
push
nop
xor
outsb
out
and
mov
test
mov
mov
lcall
push
ficompl
pushf
sbb
sub
stos
cmpsb
push
or
leave
and
pop
aas
lds
cwtl
sub
fimuls
jno
daa
clc
shll
cli
xor
lahf
sahf
mov
mov
fistl
outsb
lea
fidivrl
jnp
xchg
sub
cmp
jo
fwait
or
cltd
test
push
push
les
cmp
hlt
push
lret
cwtl
ds
pop
ja
dec
or
aaa
mov
int
fimuls
jno
sbb
and
fisttps
adc
xor
scas
fidivs
sub
xchg
inc
sub
inc
idivb
sbb
cltd
jle
cmpsb
rcrl
lds
sahf
jecxz
addl
movntss
or
in
and
ljmp
cmpsb
or
jmp
in
aam
add
fidivrl
mov
loopne
nop
mov
in
leave
jge
jno
jmp
pop
cmc
out
inc
test
mov
xlat
sbb
push
dec
and
sbb
loope
xor
repz
xor
sub
jmp
fs
ds
jmp
movsl
mov
inc
push
test
hlt
scas
mov
add
cmpsb
repnz
mov
ds
mov
call
and
popf
or
xor
or
and
clc
dec
subps
adc
jle
fwait
popf
pop
add
nop
pop
mov
xor
lods
jg
movsl
pop
sbb
jg
rolb
mov
fucomi
ficompl
jle
leave
dec
xchg
ljmp
sahf
lahf
mov
aaa
dec
lcall
call
cltd
mov
fstpl
add
fwait
jmp
pop
ret
sub
xchg
mov
add
in
xchg
ds
std
mov
mov
xor
mov
pop
pop
adc
pop
pop
push
aas
push
cld
lret
pop
cltd
push
int
iret
push
gs
xor
rcrb
cmp
adc
inc
aaa
dec
jle
sti
lret
int3
jge
loopne
ss
les
jno
lods
inc
xchg
pop
lods
scas
mov
pushf
sbb
sbb
adc
add
leave
inc
test
ljmp
out
push
mov
out
add
lock
jmp
mov
pusha
repnz
dec
or
xor
addl
mov
out
cs
insb
fdivrl
lret
aam
lretw
iret
out
xchg
stos
ljmp
cltd
ficomps
jnp
cmc
xor
add
lock
sub
jo
andl
repz
aaa
add
fdecstp
lret
mov
movsl
pusha
sarl
jge
mov
mov
movsb
lcall
repnz
inc
sub
xchg
push
push
add
test
jp
push
outsl
xchg
iret
push
aaa
shrl
pop
rorl
pop
out
push
mov
ret
cmpl
rcl
pop
sub
push
push
jb
popa
push
jbe
mov
xor
movsb
lcall
add
aaa
push
mov
cmp
xor
lcall
into
mov
nop
and
outsl
mov
xor
mov
add
jnp
call
test
dec
imul
fwait
pop
popa
div
push
lcall
dec
jp
fs
mov
adc
or
xor
andb
dec
cmc
in
pop
testl
outsl
jno
bound
pop
jp
dec
out
roll
mov
mov
fadds
test
insb
mov
addb
adc
iret
rclb
gs
mov
mov
clc
sub
loopne
jns
loopne
dec
repz
mov
repnz
cmc
int
fsubs
sub
inc
addl
in
xchg
dec
lock
hlt
xchg
je
stc
fbstp
fidivrs
ret
ds
xor
and
jb
pop
popf
mov
or
popf
stos
or
sub
dec
cmp
mulb
sti
leave
push
ds
sub
cmp
inc
push
enter
push
enter
ficoml
ljmp
dec
adc
test
cmpsl
xchg
push
jb
cmp
movsl
push
push
mov
lret
mov
test
push
and
out
fs
fsubrs
or
call
hlt
movsb
aad
xor
adc
cld
rcrl
xchg
push
dec
jge
inc
popa
ljmp
and
add
cmp
push
lret
andb
sbb
pop
sbb
and
repz
inc
jl
nop
icebp
out
sbb
or
pop
nop
mov
pop
imul
test
and
mov
fdivrl
xor
sarb
repz
neg
pop
loop
bound
or
inc
imul
out
test
pusha
hlt
addb
and
xor
push
and
adc
shlb
ficoms
lds
pushaw
fmuls
inc
int3
mov
xor
mov
and
addr16
scas
scas
sarb
loop
push
iret
push
mov
test
orl
cmp
shl
movsl
pop
push
frstor
or
add
out
fistpl
push
aam
mov
cmp
adc
mov
pop
inc
add
jmp
cmp
xlat
mov
incb
iret
das
jno
out
mov
not
aas
inc
popf
aad
pop
add
gs
fmull
lods
mov
sbbb
dec
sarb
ds
out
sbb
mov
loop
cltd
push
adc
iret
sub
adc
push
jle
lods
mov
pop
mov
mov
and
push
pop
mov
jae
sti
lcall
jmp
pop
stc
sub
sbb
adc
faddp
jmp
inc
pop
sub
gs
adc
xchg
sbb
rol
and
mov
lcall
sub
xlat
xchg
gs
jl
xor
sbb
std
pop
pop
push
and
mov
mov
sub
adc
clc
imul
mov
fcom
mov
hlt
dec
test
lea
and
js
imul
inc
mov
push
push
lret
lock
ja
dec
js
data16
inc
sub
mov
test
mov
fwait
cs
mov
repz
or
cmp
sbb
and
mov
jmp
jnp
xchg
enter
mov
sbb
mov
test
int3
or
fistps
test
jmp
dec
push
sub
movsl
mov
lretw
mov
add
mov
lock
mov
cmpsb
sub
xchg
push
sub
mov
sahf
insl
arpl
pushf
fwait
rcll
inc
dec
loopne
mov
mov
or
pop
xor
fdivs
aad
or
add
rorb
ja
ret
sbb
adc
shll
adc
mov
cs
es
and
in
and
fldcw
test
hlt
or
adc
dec
lods
push
lahf
or
data16
mov
push
stos
fcomi
cmp
addr16
stc
xchg
mov
xorl
xor
or
dec
fwait
jne
sub
insb
in
rorb
ja
in
sar
cmp
fucomip
ror
loope
cmp
outsb
and
roll
xor
fdivrl
adc
in
pop
jg
inc
or
or
sbb
cwtl
jmp
test
dec
cmc
inc
xorl
sbb
cmp
bound
jmp
lret
adc
xor
gs
xchg
ret
js
cld
rcrb
jmp
or
pop
in
out
jns
push
push
jo
movsl
dec
fiadds
icebp
dec
sub
xor
sub
into
push
xchg
pop
push
jae
push
add
out
mov
xlat
shll
test
mov
push
pop
pop
mov
mov
rcll
push
and
xchg
jnp
add
ljmp
icebp
popf
cltd
jle
dec
mov
data16
aas
test
inc
cmp
gs
or
ret
lods
xor
or
mov
jae
inc
fwait
push
xchg
cli
dec
xchg
lods
mov
gs
ss
ficoml
fstps
dec
dec
add
hlt
sbb
pop
mov
je
xlat
mov
xchg
das
jp
data16
push
sar
fiaddl
and
sbb
sarl
or
leave
mov
test
ds
mov
xchg
loop
mov
nop
adc
mov
xorl
cmp
cmp
mov
cmp
roll
nop
push
jecxz
pushf
push
push
mov
rcr
mov
cld
jb
pop
push
pop
mov
mov
mov
jbe
loop
jnp
xor
push
jp
jge
sti
cmp
mov
cmp
subb
cmpsb
lret
xchg
rorl
adc
stc
cmp
inc
cmpsl
push
dec
faddp
mov
jecxz
push
enter
fstl
adc
inc
sti
push
sbb
jp
xchg
jnp
fcomps
or
loop
pusha
cli
popf
nop
ss
xchg
jecxz
mov
mov
adc
fmul
xchg
dec
call
push
aas
mov
andl
pop
pop
aaa
aad
mov
icebp
bound
out
adc
xchg
stc
in
pop
out
inc
cmpsb
dec
jg
clc
xor
lret
or
and
arpl
inc
or
ret
gs
fbld
je
ret
aaa
cs
pop
dec
mov
xchg
push
repz
mov
lcall
hlt
mov
adc
mov
int
pop
stos
dec
aam
mov
jae
rcrb
push
mov
lds
mov
jle
mov
loope
fisttpll
ds
ja
xor
lods
or
rcrb
xchg
pop
dec
sub
data16
aaa
ljmp
xchg
xchg
lods
add
mov
mov
dec
aad
stos
dec
fwait
xlat
mov
stos
jg
cmp
testl
pop
es
sbb
xchg
sti
aas
and
add
mov
loop
pusha
les
flds
mov
or
mov
inc
insb
das
shlb
lret
cltd
xor
mov
lds
dec
shl
push
pushf
outsl
movsl
fimull
push
and
push
out
jmp
sbb
int3
and
lock
xor
sub
inc
stc
push
cltd
push
or
mov
stc
or
inc
inc
mov
outsb
test
aas
lret
xor
dec
loopne
jmp
jge
add
ljmp
mov
inc
xchg
push
std
pop
sub
xchg
xchg
adc
popa
sahf
out
fcomi
jne
push
xor
push
inc
inc
imul
cmp
loopne
bnd
outsb
lds
and
int3
xchg
stc
jp
xor
loopne
mov
xor
not
inc
outsl
out
lret
scas
mov
mov
pop
and
add
adc
push
add
ficompl
push
or
xchg
rclb
xorb
iret
xor
adc
adc
mov
lea
sbb
pmaxsw
arpl
pop
push
adc
jae
jae
test
pop
cli
shll
fistl
jns
fstpt
imul
ror
imulb
flds
mull
in
fucomip
mov
inc
je
mov
out
movsl
pop
sahf
or
test
sbb
aaa
or
dec
call
mov
xchg
mov
xlat
mov
aad
addr16
sub
out
stos
and
pop
es
jb
xchg
lret
jns
out
xorl
repnz
imul
push
outsb
popa
scas
jns
jmp
or
jno
shrl
cmpsb
adc
xchg
mov
sbb
stos
jb
mov
sub
adc
jmp
pop
ffree
icebp
mov
push
jg
adc
inc
orb
jno
add
arpl
stos
push
cmp
aam
mov
adc
bound
outsl
nop
loope
sahf
data16
imul
cld
int3
push
inc
aad
loopnew
mov
inc
repz
iret
adc
mov
mov
cld
movsb
lods
cli
es
pop
mov
jecxz
lahf
popf
or
rcrb
aam
inc
test
xorb
stc
rclb
pop
out
dec
mov
test
repz
mov
addb
sub
je
loopne
lret
addb
pop
cmpsl
xchg
inc
jns
jae
mov
sbb
cmp
mov
dec
mov
fdivs
movsl
add
stos
outsb
lds
lret
sbb
notb
mov
std
int3
cmc
mov
mov
jno
shl
sub
sbb
enter
movsl
pop
nop
jge
mov
ja
nop
bound
push
mov
mov
dec
cmpsl
sub
ret
cmpsl
arpl
enter
das
mov
mov
cli
ss
fs
test
and
cli
cmp
mov
testb
jecxz
mul
cmp
mov
iret
into
mov
mov
in
mov
xchg
mov
out
lea
xchg
hlt
fnstsw
adc
xor
or
lcall
out
inc
call
ljmp
out
pop
adc
mov
loop
jg
stos
pop
sub
xchg
popa
jl
fwait
cmpsb
push
loopne
movsb
movsb
stc
dec
and
mov
sbb
sub
or
adc
dec
add
std
loope
mov
push
jae
jo
in
xchg
jns
daa
cmpsb
cmp
mov
sbb
lea
pop
shrl
mov
cmp
imul
popa
inc
sub
jg
mov
jns
lock
ds
sbb
inc
cmp
add
push
sub
cmp
mov
jp
sbb
push
push
xor
sub
dec
dec
or
adc
adc
push
jno
fidivrs
into
pop
pop
inc
xor
movsl
cmp
or
das
pop
inc
sub
aas
sti
or
inc
outsb
pop
jnp
out
ficoms
jbe
inc
pop
leave
adc
testl
test
pop
fsubp
lcall
push
iret
jge
push
xchg
divl
pop
sub
pop
roll
pop
pop
push
xchg
popf
ret
js
xchg
icebp
fwait
adc
sbb
xlat
push
adc
sbb
and
xchg
aaa
imul
adc
lcall
add
js
out
cmpsl
pop
xchg
cld
pop
shrb
dec
xchg
rorb
popa
fsubrl
adc
xchg
imul
dec
cmc
jbe
mov
outsl
call
pushf
dec
mov
hlt
mov
sub
stos
test
xor
in
add
adc
fs
cmpsl
data16
sub
cmovg
push
pop
sbb
in
push
xchg
pop
mov
scas
mov
out
inc
mov
push
xchg
cmpsb
jne
push
jl
test
call
sbbb
orb
push
cltd
adcb
not
je
mov
hlt
jg
and
outsb
xchg
notb
and
cld
xchg
and
pop
or
mov
test
in
mov
mov
and
test
adc
jnp
fldt
lret
pop
cltd
addl
testl
push
inc
pop
cmp
outsb
mov
ret
popa
mov
lea
inc
mov
dec
ja
pop
pop
ja
dec
jmp
jmp
lahf
push
mov
outsl
push
inc
and
rcll
mov
cli
fiadds
xchg
iret
sub
mov
outsb
xor
xor
test
movsl
xor
jbe
lahf
push
or
xor
insb
inc
ds
scas
loopne
xchg
mov
push
negl
fnstsw
leave
mov
jmp
arpl
mov
xchg
or
pushf
fsubl
mov
xchg
les
jae
pop
movsb
jge
add
int3
jle
cli
out
xchg
fadds
ret
lods
xlat
mov
mov
mov
pop
jns
rol
add
mov
in
fmulp
add
rcrl
xchg
rolb
dec
push
fsub
hlt
stos
fldcw
mov
xchg
movsb
pop
mov
out
sbb
jle
pusha
push
inc
cwtl
into
fadds
xchg
pop
push
xchg
test
mov
mov
mov
mov
mov
lret
sbb
inc
leave
ds
inc
insb
pop
scas
inc
or
pop
xchg
scas
leave
cmp
and
add
xorb
pop
stc
lea
movsb
mov
in
lock
in
ret
sub
xor
loope
push
pop
mov
cmp
repnz
lret
push
adc
jnp
add
lods
cmp
or
mov
jge
lock
cmpsb
sbb
in
sub
insl
xchg
push
mov
xor
jl,pn
jbe
sub
or
rol
cltd
sub
cli
out
out
lds
adc
add
jge
inc
fimull
xor
bnd
mulb
adc
test
xchg
jmp
xor
sbb
and
mov
popa
adc
push
imul
loope
mov
or
cltd
mov
adc
push
andl
mov
sbb
push
add
lea
dec
insb
cmp
les
mov
pop
pushl
cmpsb
outsl
mov
or
cltd
jae
jne
lock
jb
push
outsl
push
mov
inc
imul
addr16
rcr
pop
enter
je
inc
push
cmp
aaa
cli
sub
mov
and
mov
xor
cmpsl
or
adc
push
ja
mov
out
shrb
fdivl
icebp
inc
push
mov
lcall
rorl
dec
cmp
xchg
pop
pop
mov
xchg
and
pop
insb
cmp
xor
test
push
sbb
iret
in
sbb
fcomi
sbb
mov
push
aad
add
mov
dec
jp
pushl
mov
lea
lods
mov
push
push
xchg
push
xor
ja
pop
add
pop
or
rcrl
pop
push
jg
xchg
int
xor
loope
clc
sbb
mov
lret
or
or
decb
pop
jb
fnstcw
or
mov
sti
add
stos
pop
cs
cmpsb
jmp
mov
dec
jnp
push
pop
hlt
in
pop
mov
jecxz
cmpsl
adc
mov
pop
or
ja
or
orb
insl
imul
xor
push
cli
insb
insb
scas
je
push
pop
xchg
bound
test
stos
push
mov
jo
mov
ljmp
loop
jl
repz
sbb
mov
data16
ljmp
mov
push
lock
jns
jle
imul
dec
push
div
mov
mov
mov
mov
fisubrl
jno
cmc
pop
sub
jo
or
jae
mov
mov
fistpll
cmp
je
dec
cld
sub
jge
mov
leave
dec
jmp
test
notb
mov
mov
jle
in
loop
cmc
mov
pop
or
fdivrl
cmc
popf
mov
gs
bound
jmp
repz
call
sub
fiadds
xor
ss
jae
or
popf
das
lret
sub
neg
pop
sarl
jno
sarb
mov
mov
ja
cmp
and
push
xor
test
inc
arpl
pop
pop
sub
xor
jg
or
add
std
jcxz
lahf
jae
ss
push
dec
nop
pop
mov
cs
inc
outsb
pop
out
mov
decb
cmp
push
data16
popf
in
inc
xchg
mov
sahf
lahf
cmpl
cmpsl
push
jp
imul
sub
sub
mov
test
pop
jecxz
popf
scas
add
pop
addb
sbb
push
sbb
int
xchg
loop
rclb
stos
fcoml
xchg
cmp
or
sub
cs
dec
push
daa
fwait
test
adc
fisubs
and
in
ror
test
and
cli
outsl
test
test
inc
inc
sub
test
loopne
xchg
out
inc
cs
sbb
or
dec
mov
lock
test
sbb
or
push
jmp
cld
or
push
in
inc
push
xchg
inc
xchg
jnp
xor
sbb
iret
pop
popf
std
cltd
pop
or
dec
jae
mov
loop
mov
ret
loopne
pop
jne
xchg
or
pop
xchg
jecxz
sub
mov
mov
vpunpckldq
sub
sub
jb
pop
mov
shll
sub
enter
fistps
popf
inc
insb
pop
rolb
cmp
fcmovbe
jle
sti
stc
push
mov
cmp
lret
stos
cmpl
outsb
xchg
fsubs
inc
push
aas
inc
inc
aaa
lock
into
mov
cmp
jle
into
push
jmp
pop
and
and
mov
daa
adc
outsb
fisubrs
popaw
jmp
mov
pop
pop
sarl
xor
xor
dec
adc
outsl
mov
pop
cmp
lret
mov
mov
adc
div
out
movsb
pop
popf
sahf
sub
insb
mov
aam
pop
xchg
rcrl
inc
cwtl
repz
jns
mov
stc
ds
adc
scas
fisttps
cld
xlat
sbb
jb
push
sub
movsl
out
lods
mov
pushf
mov
fs
lcall
mov
mov
xor
shrl
ss
push
loope
shlb
repz
cmp
cmovb
pop
icebp
arpl
js
dec
setl
and
fsubs
lods
inc
ds
mov
and
sti
cmpsl
fucomp
out
or
test
repz
aas
ja
adc
les
adc
inc
pop
es
fwait
add
add
loopne
in
out
mov
hlt
ljmp
js
movsl
clc
pop
out
jg
xchg
addb
in
aam
jmp
sbb
or
jmp
xor
aad
loopne
fwait
lock
mov
pop
and
xchg
cli
mov
push
inc
mov
cmc
sbb
cmp
xlat
sub
jae
loope
jmp
js
loope
sub
or
cmp
pop
inc
cmp
adc
pusha
out
mov
stos
nop
jae
push
xchg
or
mov
xor
cli
test
dec
scas
sub
iret
aam
dec
roll
fstpl
dec
push
mov
push
xor
orb
dec
mov
mov
imulb
xor
sub
add
pand
lea
inc
mov
es
mov
dec
pop
mov
iret
fs
daa
or
or
popa
xor
dec
cwtl
outsl
dec
adc
sti
test
pop
jmp
sub
loopne
pop
call
lea
cmp
mov
ss
push
leave
icebp
out
test
loopne
movsl
lret
lock
adc
sub
xor
pop
mov
outsb
mov
xchg
cmp
inc
addr16
push
cmp
jg
scas
push
ja
cmpsb
sub
sbb
mov
jo
fabs
out
loopne
pop
xor
cli
repnz
push
loop
xorl
ds
sub
cmp
add
lods
mov
or
subb
and
icebp
repz
scas
scas
test
adc
xor
clc
fcmovnb
mov
pop
add
or
out
aam
roll
movsl
sub
mov
sbb
push
push
dec
jge
cmp
jnp
add
test
shll
inc
adc
cs
fldcw
mov
mov
inc
lods
or
xchg
sahf
or
jb
bound
jp
jbe
sbb
xchg
adc
fdiv
mov
outsb
ss
xchg
rcrb
push
jge
lock
push
jg
loope
inc
loope
add
cmpsl
std
sbb
xchg
xchg
in
cmp
fucomp
mov
pusha
std
jl
xchg
mov
pop
xchg
loop
out
add
pop
xor
hlt
scas
and
sub
cmp
sub
ds
enter
mov
xchg
clc
fsts
fsubrl
lcall
hlt
std
and
sti
les
and
shl
cli
mov
adc
outsb
dec
cwtl
lcall
ss
imul
inc
in
mov
or
jbe
cltd
inc
nopl
ja
jmp
mov
push
stc
repnz
popa
push
mov
dec
inc
jb
fcmovbe
xchg
mov
xor
cmp
jp
ljmp
mov
push
dec
mov
dec
xchg
into
jne
sarb
into
lret
push
push
or
cmpsb
ja
push
cwtl
call
sbb
repz
fnsave
or
ljmp
sub
adc
rcll
mov
push
adc
cmc
cmpsl
cwtl
xor
lea
or
xchg
mov
jns
dec
ja
cmp
cs
nop
and
or
pop
cmp
jbe
in
push
nop
ficompl
je
aas
jns
cmp
ret
sub
fs
fwait
mov
push
stc
xchg
bound
mov
test
mov
mov
jno
sbb
push
xchg
into
in
scas
xor
sub
sbb
pop
out
addl
push
xchg
rclb
push
sbb
or
out
dec
push
or
xor
insb
adc
icebp
dec
sbb
xlat
fidivs
push
mov
sub
mov
hlt
out
xchg
add
in
int
cmp
jae
fwait
push
pop
jge
in
fdivrp
test
mov
aad
mov
cmc
flds
jecxz
sbb
subb
inc
ljmp
out
cmpsb
push
inc
mov
movsb
inc
shlb
mov
cmp
mov
inc
mov
mov
in
loope
and
loop
cli
pop
repz
enter
ja
adc
data16
pop
movsl
mov
and
xchg
mov
inc
jns
jno
cwtl
stos
ret
fsubs
int
push
pop
jmp
iret
mov
jl
cmp
sub
cmc
add
push
or
pop
mov
cmp
jno
cmpl
jno
mov
cltd
xchg
daa
inc
xchg
nop
popa
lods
lock
sbb
adc
adc
aaa
jo
sub
xor
mov
icebp
jmp
in
sarl
sahf
test
mov
jl
jle
and
mov
std
pop
shlb
clc
outsl
mov
mov
ret
inc
jb
pushf
mov
push
cmpsb
lea
fwait
mov
imul
sbb
cmp
push
sub
xchg
inc
lods
inc
aam
sbb
movsb
outsl
push
jae
mov
out
pand
fstpt
xlat
scas
loop
cld
or
and
pushf
mov
or
push
jl
pop
fadd
in
mov
or
insl
ja
jne
mov
rorb
popa
addr16
mov
sub
adc
pop
inc
push
sub
leave
call
mov
in
inc
pop
int
xchg
jge
pop
fimuls
lret
outsb
sub
add
push
jae
dec
mov
cmpsl
test
enter
enter
mov
sbb
sbb
aas
jp
stos
test
sbb
ret
mov
pop
xchg
loopne
clc
and
sub
ja
outsl
mov
je
xchg
sbb
jno
xchg
adc
xchg
cmp
sub
or
jbe
cli
push
shl
push
es
add
mov
sub
int3
mov
push
push
and
dec
adc
fisttps
mov
fs
cmpsl
imul
mov
cmp
cltd
repnz
add
add
push
sub
mov
jo
icebp
aas
cld
xchg
dec
sub
fidivrl
movsb
or
mov
pop
nop
push
mov
scas
rcrb
jle
out
or
cli
stos
mov
mov
jne
xchg
icebp
mov
mov
xor
test
insb
mov
xor
mov
inc
add
repz
repz
mov
pop
xor
andb
cmp
enter
mov
fmull
ret
add
pop
loope
lds
adc
sub
add
test
popaw
inc
repz
sarl
adc
les
loop
xchg
sub
and
lret
jae
and
clc
icebp
cmpsl
and
loop
cmpb
sbb
test
push
mov
test
dec
mov
roll
and
mov
cmp
push
push
add
xlat
adc
lret
push
cmp
insb
mov
js
and
hlt
lahf
xor
sub
pop
cli
mov
and
sub
lock
fnstenv
sbb
nop
in
and
and
mov
jnp
sub
sahf
adc
and
cltd
and
pop
inc
je
sahf
add
mov
jbe
xor
cmp
cwtl
push
xchg
pop
out
xchg
push
mov
xor
pop
and
xchg
add
imul
ficoml
inc
out
xchg
mov
mov
inc
aas
cmp
mov
cld
mov
fcoml
arpl
dec
add
sahf
stc
dec
sub
or
xor
inc
xchg
sar
or
ja
sbb
xchg
test
stos
xchg
aad
and
add
cltd
inc
sahf
sub
pop
movsl
daa
jmp
lock
mov
push
cmc
cmp
outsb
fs
dec
js
les
pop
loopne
adc
sub
out
repz
pushf
scas
stos
int
mov
add
popf
pop
movsl
movsb
jl
add
xorb
xor
cmp
dec
xor
pop
aam
xchg
add
imul
in
adc
xchg
xchg
mov
sbb
cltd
mov
xchg
div
fnsave
dec
aaa
push
inc
jl
push
or
mov
pop
xor
and
xchg
push
fldcw
jns
xchg
out
dec
incb
insl
sbb
or
push
js
fisubrs
enter
addb
mov
stc
push
push
cmp
aam
loopne
rolb
fs
xlat
out
xchg
mov
mov
in
stos
enter
outsb
pusha
xlat
cmp
and
jo
pop
pop
stos
lods
mov
xchg
pop
ljmp
leave
mov
inc
pop
mov
or
sbb
out
push
std
aaa
test
fst
jo
leave
inc
iret
sti
push
jmp
fistpll
pop
jecxz
iret
ja
mov
out
mov
dec
out
cltd
mov
sahf
popa
sti
lods
int3
shl
hlt
aas
inc
mov
pusha
ret
push
sub
dec
inc
xor
push
jmp
inc
inc
jne
mov
cwtl
in
repz
lods
sbb
sub
push
pop
lahf
lods
mov
pop
stos
js
loop
inc
dec
sub
fwait
popa
and
ficoml
dec
adcb
ljmp
aas
je
bound
repz
fdivr
dec
lea
jl
jb
sbb
lds
mov
and
test
cmp
adc
xor
mov
loope
enter
insb
bound
std
das
mov
add
add
divl
test
shll
call
repz
xchg
or
iret
jne
mov
cld
dec
mov
outsb
lds
incb
cli
dec
lea
mov
ss
pop
fcoml
xchg
adc
fiadds
mov
or
sti
sbb
pop
mov
in
pop
pusha
movsb
les
mov
push
dec
and
mov
mov
out
sti
push
dec
mov
pushw
cltd
adc
push
sub
gs
mov
popl
jbe
and
pushf
outsb
mov
lret
cmp
dec
repz
mov
jbe
test
cmp
jo
dec
pop
jb
push
push
xor
cs
stos
sti
repz
jns
mov
xor
sbb
testl
mov
lret
inc
ja
mov
sub
movsb
fiadds
add
das
xchg
arpl
orb
pushl
out
into
repnz
fisttps
push
call
outsb
les
fsts
int
test
mul
iret
and
adcb
or
dec
mov
test
jmp
sar
negl
mov
cwtl
push
mov
xor
clc
inc
lret
xor
xchg
mov
test
pop
push
add
cltd
inc
decb
popf
add
sbb
lret
pop
dec
cmp
lea
jo
xchg
or
pop
cmpsb
daa
cmp
nop
xor
mov
dec
lods
add
xchg
dec
shrb
xchg
dec
sbb
jge
rolb
push
and
jp
cmp
in
stc
repz
cmp
jno
cmc
pop
outsb
sbbl
ret
call
mov
ja
pushf
loopne
jbe
mov
sub
lea
push
jmp
sbb
test
xchg
aad
mov
incb
sahf
repnz
push
subb
pop
incb
aas
mov
lds
and
mov
imul
push
aam
push
test
loopne
jp
je
or
add
lds
pop
pop
test
neg
lret
xchg
pushf
popa
xchg
push
or
aas
adc
mov
enter
insl
ja
adc
inc
fsubp
data16
mov
add
xlat
adc
mov
mov
jno
stc
pop
jl
add
push
mov
test
call
gs
jle
pop
push
pop
int3
fwait
stc
cld
jl
push
repnz
cmc
jae
out
jne
push
arpl
lds
gs
dec
cmp
les
stos
adc
mulb
and
mov
push
push
jl
xchg
sbb
mov
cmp
ja
movsl
ljmp
lds
mov
clc
call
pop
sbb
lcall
cmpsb
push
mov
scas
loopne
xchg
jb
pop
in
fstpt
push
or
xor
add
cmc
cmp
and
in
mov
push
int3
and
sub
icebp
fdivrl
mov
mov
mov
in
mov
adc
jno
jbe
popf
ljmp
dec
mov
lods
sti
outsb
data16
in
insl
lret
outsb
pusha
out
fsubr
sub
lahf
lahf
bound
push
dec
pop
xor
add
sub
mov
jo
pop
push
cld
push
int3
mov
das
test
jne
je
push
leave
and
out
rcll
jp
add
sub
pop
cmpsb
outsb
pop
outsb
push
aaa
sub
lret
sub
add
ret
push
in
subb
pop
and
mov
push
repnz
jnp
inc
pop
lahf
jmp
jle
outsl
cltd
mov
icebp
inc
fisttpll
rcrb
mov
lcall
xchg
pop
frstor
mov
pop
xchg
mov
push
mov
dec
and
xor
mov
addr16
jg
mov
jae
and
jnp
xlat
sub
decl
pop
mov
xchg
insl
ret
ret
dec
cmpsb
fldl
push
push
xchg
add
inc
call
adc
int
sbb
dec
lea
sbb
aad
pop
ret
popa
mov
mov
out
test
shrb
pusha
addr16
pushf
pop
lahf
mov
jnp
int
pop
lahf
add
pusha
test
xor
rorl
cmpsl
cld
outsb
shl
xchg
mov
and
cmp
mov
sbb
jbe
ret
das
add
aas
inc
dec
cli
test
pop
leave
pop
nop
mov
add
stos
fnsave
out
iret
xchg
cmp
repz
nop
adc
mov
in
push
jle
sbb
jmp
add
sub
add
xor
into
mov
lret
movsl
sbb
dec
std
divb
mov
orb
pop
adc
stc
ficomps
xchg
lds
jle
ss
out
pop
xchg
lret
std
inc
shll
shlb
mov
add
aas
ret
popw
push
fld1
andb
bound
sbb
cwtl
adc
add
pop
mov
test
pop
je
mov
int3
inc
pop
sbb
scas
push
shll
xchg
je
mov
and
imul
mov
jno
dec
les
clc
loop
pop
or
les
cwtl
sarl
sub
scas
pop
jo
shl
stos
dec
cmc
lcall
fldcw
sbb
and
lea
scas
insl
cmpsb
mov
insb
and
dec
xlat
inc
aad
test
push
cmp
loope
ja
js
mov
jl
pop
or
and
sub
in
xchg
mov
push
loop
loopne
sub
mov
aad
xor
push
testl
test
cld
imul
dec
test
jnp
pop
mov
nop
lods
sbb
push
stos
mov
fadd
xchg
movsb
fisttps
ret
int
and
xlat
scas
loopne
lea
fwait
jecxz
mov
lods
rorb
scas
ficomps
inc
test
mov
push
mov
psubusw
in
inc
dec
je
lea
cmp
mov
not
ljmp
push
jecxz
sbb
sbb
and
in
lcall
mov
arpl
cwtl
fsubrs
push
out
lods
pop
mov
je
test
lds
mov
push
jl
mov
fs
dec
movsl
mov
das
dec
adc
xchg
mov
stos
push
filds
cmp
jecxz
or
loopne
mov
ljmp
jo
cmpsl
push
imul
sub
inc
or
ljmp
xor
inc
in
pop
mov
dec
int3
int
aas
ds
subl
inc
mov
mov
mov
push
mov
mov
in
out
push
adc
cmp
aad
inc
lret
ss
mov
fwait
in
popf
cmp
pop
jle
icebp
out
sti
cmp
iret
je
add
hlt
in
aam
or
rolb
imul
pop
sbb
xor
insb
jge
repz
xor
inc
imul
arpl
jbe
jg
dec
sti
lahf
xor
push
and
aas
loope
cli
lcall
add
mov
push
ret
cmp
or
into
inc
les
mov
clc
sbb
test
sub
into
fistpl
mov
and
xchg
jns
jmp
xorl
or
cwtl
ret
and
lea
jp
popf
push
or
clc
sub
jno
clc
jmp
xchg
or
push
or
popf
xchg
icebp
and
inc
sub
bound
sti
shlb
bound
subl
mov
mov
push
inc
shrl
arpl
xlat
push
daa
nop
adc
mov
push
mov
lods
fs
xchg
mov
push
push
push
push
lods
test
in
xchg
shrl
mov
insb
xor
mov
outsb
dec
andb
ja
inc
ret
lods
ss
jp
and
insl
pushf
mov
add
cwtl
sbb
jl
inc
push
mov
out
lods
inc
dec
jmp
pop
enter
pop
inc
cmpsb
inc
mov
push
push
xchg
hlt
fwait
jno
jle
adc
gs
sbb
data16
scas
cs
pop
fistl
mov
idivb
pop
push
pop
std
ficoms
sub
sbb
scas
dec
cmp
mov
add
mov
shl
add
arpl
call
clc
jge
xor
fsts
jp
in
out
decl
mov
out
mov
shll
mov
movb
jns
mov
adc
sbb
popl
jne
adc
inc
push
int
xchg
jnp
pushf
inc
add
sti
xchg
and
mov
cmpsb
sub
pusha
and
inc
xadd
mov
adc
dec
jnp
sbb
loope
adc
or
mov
adc
icebp
jno
cld
mov
xchg
repnz
cmpsl
mov
xor
lahf
mov
lcall
mov
xor
mov
xadd
push
leave
movb
sbb
scas
push
adc
sub
sbb
or
pop
inc
mov
insb
pop
std
sbb
add
pop
es
lcall
popa
fwait
nop
sub
hlt
push
loop
xor
inc
pop
lahf
ja
daa
cmp
xchg
jo
lret
jge
sbb
mov
dec
xchg
cmp
sub
pop
sbb
xor
je
xorb
gs
mov
stos
sub
mov
rcrb
into
popf
xchg
hlt
ret
mov
pop
lods
pop
std
or
int3
mov
dec
jnp
xchg
in
rol
hlt
mov
sub
inc
js
das
movsl
cmp
mov
cmpsb
into
adc
adc
jne,pn
and
sbb
subl
mov
rcrl
shl
cmpsb
ret
fwait
adc
outsl
insl
inc
inc
mov
add
cmp
push
sbb
daa
mov
jbe
pop
mov
int3
outsb
cli
jne
mov
cmp
gs
inc
or
cmp
pop
stc
ret
cld
fnsave
mov
mov
jbe
dec
xchg
add
popa
push
shr
fs
dec
rep
dec
inc
push
ss
icebp
lock
mov
mov
sbb
divl
sub
ja
lret
daa
adc
jg
mov
dec
or
sbb
movb
test
push
mov
jmp
xchg
pushf
rclb
mov
dec
aas
mov
or
loop
xchg
sub
notl
hlt
add
callw
ljmp
jae
push
fiaddl
xor
jle
push
dec
mov
and
dec
push
ret
pushf
jne
dec
add
sti
dec
pop
pop
mov
ja
aam
cmp
lret
cmp
jae
pop
leave
jae
mov
pop
in
or
adc
int3
insl
jnp
push
mov
fs
push
jg
mov
mov
and
cmp
fidivrs
xchg
sbb
shll
adc
jns
repz
sub
loope
pop
dec
mov
pop
sbb
mov
mov
xchg
rcr
jae
add
movsb
loope
stos
mov
hlt
cmp
dec
stos
dec
sub
jmp
dec
sbb
mov
fldcw
and
mov
es
test
push
add
mov
nop
jns
je
mov
xchg
inc
gs
dec
outsl
mov
mov
test
push
std
xor
out
pusha
push
leave
push
clc
xor
inc
push
shrl
xor
addr16
enter
xchg
aam
xlat
xchg
mov
mov
xor
rcl
aam
sbb
in
and
cmpsl
inc
scas
sbb
les
lods
mov
icebp
loop
inc
push
or
js
jae
mov
popa
jmp
sti
or
xchg
stc
lods
push
mov
faddl
ret
stc
xchg
mov
orb
leave
sbb
mov
movsl
sbb
xchg
mov
push
std
push
sti
xchg
adc
dec
fisubs
repz
pop
cmc
iret
ss
das
outsl
push
push
pop
or
inc
fcoms
pop
mov
dec
cmc
cmp
add
js
add
int3
ret
cmpsb
test
das
sub
mov
scas
xchg
add
mov
adc
aad
dec
inc
rcll
mov
mov
adcb
fcmovnb
int
pop
inc
loop
enter
or
sbbl
sbb
xor
mov
pop
loopne
jp
loopne
xor
pop
inc
jmp
xlat
push
mull
push
jmp
rorl
mov
adc
imul
jno
mov
push
dec
mov
into
iret
jae
sbb
lea
jmp
jne
lret
mov
and
xor
pushf
insl
or
sarb
xor
gs
clc
dec
notb
push
cmp
cmp
adc
stc
lahf
push
jmp
pop
repz
inc
cmp
add
fcmovne
inc
xchg
xor
inc
out
or
into
scas
icebp
outsb
adc
aam
add
and
xor
inc
inc
ljmp
out
fldl
movsb
in
and
pop
push
rclb
cld
rcll
repnz
mov
xchg
fiaddl
sbb
add
lods
pop
lock
add
ds
lock
jg
test
or
xor
outsl
inc
fdivrs
cld
or
mov
xorb
pop
xor
jle
testb
lret
test
cltd
dec
shrl
aas
jnp
test
lahf
test
jmp
push
xchg
cmp
cs
xor
leave
mov
pop
arpl
adc
or
sbb
shll
enter
mov
ja
sti
pop
xchg
js
xchg
repz
xor
mov
mov
movsb
lcall
sub
inc
fisubrs
mov
loope
les
das
bound
out
cmp
stos
les
sbb
shll
xchg
add
jae
gs
scas
std
pop
sbb
in
dec
je
add
andl
push
ja
dec
iret
xchg
cld
fiadds
es
mov
in
xchg
push
adc
mov
stos
pop
xor
or
mov
lea
sub
jb
or
int
pusha
cmp
out
xchg
lods
out
mov
cltd
lock
sti
sbb
aas
pop
sbb
scas
jmp
jp
mov
sti
out
pushf
hlt
jbe
addr16
dec
push
aaa
pop
shll
sbb
int3
jmp
add
nop
jae
stc
or
sbb
add
push
push
call
mov
or
cltd
ds
xor
lock
dec
pop
out
xchg
pusha
andl
mov
dec
xchg
push
loopne
jbe
xchg
arpl
scas
pop
jmp
movsl
pop
insb
push
cld
sbb
je
jo
movaps
daa
in
cwtl
add
xchg
mov
flds
cmp
inc
arpl
mov
cmp
stos
mov
jecxz
xchg
xchg
and
out
sarl
stos
mov
sbb
fwait
adc
sub
ret
jge
lods
xor
lahf
cmpsl
add
loopne
xchg
in
mov
roll
ss
or
stc
mov
mov
aam
ret
imul
rcr
mov
mov
sbbb
dec
dec
outsb
sysret
sti
daa
aas
insl
sub
add
call
xor
mov
ds
dec
and
shll
xor
mov
in
stc
add
inc
test
pop
cmpsb
adc
cmp
xor
mov
adc
cmc
mov
in
dec
je
icebp
and
pusha
xchg
push
setbe
xchg
imul
lahf
lahf
xor
inc
inc
test
mov
mov
add
adc
data16
sub
push
sbb
pop
pop
pop
cmp
sbb
inc
xor
divb
lcall
sbb
inc
test
jmp
shll
insl
xchg
lcall
bnd
push
lods
jbe
in
adc
repnz
popl
pop
pop
cmpl
xchg
ret
repnz
mov
aaa
inc
fildll
fstps
popl
mov
inc
movsl
popa
arpl
xor
fidivl
addr16
jbe
ret
lahf
mov
fmul
aad
push
xor
cltd
pusha
xchg
and
cltd
mov
lods
mov
fildll
add
aad
or
pop
shll
push
lea
arpl
or
nop
cmpsb
push
dec
cmpsl
inc
dec
jne
xchg
add
in
dec
rorl
pop
add
scas
ds
mov
out
cmpl
sbb
jbe
fs
jle
test
loope
push
addr16
push
mov
mov
leave
sbb
or
hlt
dec
push
sti
popa
add
mov
dec
mov
iret
insl
mov
icebp
xchg
and
sub
clc
add
insb
mov
mov
in
and
add
mov
mov
sti
stos
adc
js
jp
mov
roll
pop
andb
and
cmp
pop
fucomp
pop
lods
arpl
jmp
or
bound
testb
jbe
iret
aad
sbb
or
test
fs
dec
lock
hlt
fnstcw
cld
cmpsl
xchg
or
sbb
mov
cmp
push
xor
sbb
movsl
loopne
mov
dec
push
mov
loope
add
push
lds
addr16
and
sub
daa
add
jnp
and
pop
add
mov
inc
addb
mov
dec
xor
dec
outsl
notb
push
cmp
and
or
add
cld
in
popl
lods
data16
inc
jmp
shrl
lahf
int3
push
es
push
in
pop
inc
daa
cmp
imul
mov
push
cmp
dec
pop
fcom
cmpl
stos
xor
or
into
cwtl
sub
call
and
sub
sbb
inc
shlb
push
and
icebp
cmp
pushf
or
mov
mov
fmuls
sarl
xor
dec
fnstenv
fs
shrl
cmp
dec
jno
xchg
fstpl
out
adc
dec
sahf
mov
dec
mov
mov
fs
jmp
int3
int3
fwait
inc
xchg
inc
inc
repz
fstl
insl
push
inc
cld
xchg
test
cs
loop
mov
and
dec
mov
inc
cmp
mov
inc
dec
ja
leave
loope
adcl
lea
xchg
jecxz
sbb
or
sub
scas
xor
out
add
repz
inc
mov
dec
xor
mov
fs
cmpl
movsb
adc
add
push
xchg
sahf
inc
popa
sub
xchg
or
mov
adc
ret
mov
push
repz
movsb
cmp
mov
cmp
test
push
out
int
lods
scas
pop
stos
mov
fdivr
pop
push
outsb
push
lea
mov
in
and
lret
mov
xchg
mov
out
lret
pop
xor
mov
mov
cmp
lock
dec
sub
in
push
mov
xchg
or
jno
pop
jnp
int
ret
cs
mov
mov
outsb
mov
pop
rclb
lret
insb
jecxz
cmpsb
lods
mov
iret
sbb
mov
sbb
xor
rol
cmpsb
subl
or
jp
andb
sub
jle
mov
mov
shlb
adc
shlb
xor
addr16
rcr
cmp
aas
js
js
lods
sbb
divb
or
sub
push
es
xchg
fsubs
int3
mov
add
jb
fcoml
pop
fldpi
and
jp
pop
jl
pop
movsb
cmp
pop
lea
push
lods
filds
ficoml
xchg
sub
jne
lret
push
dec
aad
dec
xchg
pop
das
fisubrl
fucomp
push
dec
adc
mov
pop
or
adc
add
xor
dec
ja
push
insl
iret
and
xor
mov
cmp
shlb
movsl
inc
jns
sarl
inc
mov
dec
call
sub
add
lahf
orl
cmp
fildll
in
mov
add
jns
fiaddl
loop
jbe
mov
cmc
lods
and
jmp
sbbl
stos
js
mov
mov
lds
dec
daa
dec
inc
cmp
test
aam
andb
xchg
inc
and
xor
sbb
dec
aam
xor
jne
out
mov
aaa
stos
sub
jne
movsl
rcll
cmc
add
test
pop
or
sbbl
test
in
scas
leave
dec
dec
inc
push
push
push
and
iret
pop
lock
mov
dec
lahf
cmpsb
rcl
push
in
outsb
mov
mov
add
ss
sbb
movl
cmp
mov
push
call
out
js
inc
sbb
push
or
jb
subl
pusha
jo
jae
add
fdivs
aas
cmpsl
fs
fldenv
nop
jb
sub
pusha
xchg
enter
mov
pop
imul
popf
xchg
adc
sub
mov
rolb
xchg
mov
sbb
push
out
scas
scas
or
repz
cld
pop
popa
mov
pop
jae
pushf
cmc
inc
xor
xor
les
idivb
loope
mov
push
and
mov
std
fsubs
mov
jae
dec
lds
jl
cmp
test
dec
pop
clc
xchg
sti
popf
lds
dec
mov
adc
scas
fst
cmp
jp,pt
mov
push
in
stc
mov
lret
pop
xchg
mulb
sbb
mov
push
cli
aas
icebp
cmp
and
lret
cmp
and
loope
or
jae
cmp
push
mov
cmp
inc
pushf
movsl
js
in
jg
lret
and
pop
mov
add
or
xorb
pushf
in
cmpsl
test
pusha
fnstsw
push
mov
outsb
push
testl
sub
lret
iret
dec
or
push
cmpsb
cwtl
cmp
dec
pop
sub
movsb
jecxz
loope
pop
or
rcl
fs
inc
dec
mov
mov
sahf
and
lahf
sbb
pop
leave
pushfw
shlb
in
push
dec
ficompl
fldl
daa
rorb
fwait
popf
leave
movsb
mov
ja
ficomps
movsl
mov
add
rcrl
jmp
add
mov
xchg
ss
ljmp
xchg
cltd
incb
cli
insb
loopne
pop
in
and
lcall
dec
outsl
rcrb
pop
push
sahf
dec
xchg
loop
mov
insb
int3
testl
out
cmp
mov
or
fcoms
cmp
leave
xor
dec
clc
test
lds
cli
in
arpl
lea
sub
ss
lahf
and
jo
inc
pop
or
arpl
inc
jo
test
jns
les
inc
sbb
lret
movsl
adc
loope
fcoms
and
rclb
jnp
sbb
sub
cmp
cs
xor
dec
ljmp
aas
or
inc
adc
and
bound
ja
xor
inc
dec
inc
fabs
out
cmpsl
push
sub
cld
fldt
jge
insb
xor
jecxz
ja
push
and
mov
movsl
scas
roll
pop
test
mov
dec
stos
cmpsb
push
lods
add
into
loope
stos
ret
mov
mov
add
sbb
and
cwtl
test
lahf
jo
das
cmp
push
and
repz
adc
fmull
adc
fcoms
aam
clc
mov
cld
out
or
dec
inc
xchg
dec
push
in
jae
fsubs
xor
and
or
fstl
lret
push
adc
ret
mov
loop
inc
push
and
mov
fs
adc
xchg
test
sbb
ss
jnp
mov
pop
mov
mov
loope
ja
inc
xchg
cmp
adc
fwait
push
aam
pop
outsb
push
cmp
ds
and
sbb
adc
lcall
xchg
in
mov
jl
addr16
sti
dec
mull
push
xchg
mov
leave
dec
shlb
jns
stos
cmp
adc
pop
pop
push
lods
fnstcw
enter
jnp
and
clc
out
dec
and
int3
adc
pusha
fs
push
daa
lea
gs
adc
sub
xlat
stc
xchg
outsb
into
cmp
and
sbb
pushl
push
adc
or
fidivs
sub
test
pop
sub
in
xor
sbb
ja
xchg
lods
inc
xchg
xchg
jbe
daa
xchg
cmp
sbb
mov
jle
xchg
sub
lock
shll
into
inc
push
iret
fadds
movsb
cli
test
pop
mov
int3
and
push
mov
mov
xchg
inc
xlat
cmp
or
inc
pop
lea
repnz
mov
ja
adc
into
or
jae
mov
imul
mov
fildll
std
push
fistpll
adc
cmp
and
mov
xchg
xchg
pop
xchg
sub
push
push
inc
adc
rolb
sub
push
out
stc
add
adc
mov
jmp
jle
jge
into
cmp
pop
test
ds
lds
pop
xorb
lcall
and
mov
dec
enter
add
mov
sub
dec
std
cld
add
mov
pop
shrl
or
pop
mov
mov
ret
pop
inc
adc
fiaddl
xor
popf
mov
repnz
ficoml
cmp
dec
cmpsb
pop
sbb
mov
sub
cmp
lock
push
xlat
fwait
xorb
adc
mov
jae
cmpb
xchg
xbegin
fwait
add
push
jle
cmp
in
ja
pop
outsl
pop
push
cmpsl
mov
imul
push
jg
push
roll
clc
cmpsl
xor
or
roll
inc
cmp
dec
add
sbb
inc
pop
cwtl
xchg
sub
sub
push
pop
fs
popf
enter
push
ss
jg
cmpl
decl
test
std
lea
cltd
and
movsl
or
push
cmpsb
inc
inc
stos
inc
adc
pop
cmpb
loop
inc
fistpll
cmpsl
inc
cmp
pusha
sub
test
aas
and
jle
sub
cmp
test
jmp
enter
mov
xor
inc
iret
mov
add
sbb
xchg
popa
jge
add
js
push
ret
aam
mov
movsb
out
fsubr
arpl
imul
push
mul
adc
push
jecxz
or
nop
mov
int3
or
cmpsl
pop
fidivl
int
inc
mov
add
mul
dec
jge
test
sub
jp
ret
roll
int
pop
in
push
xor
in
jo
fwait
mov
mov
iret
inc
bound
pop
jecxz
enter
aas
mov
xchg
cmp
dec
sbb
dec
int
ret
cmpsb
leave
inc
push
sbb
sbb
mov
cmp
movsl
add
mov
xchg
aaa
orl
les
aam
lods
inc
in
cs
push
cmp
fdivr
daa
in
lock
adc
mov
in
add
insl
or
xchg
xchg
enter
dec
and
push
jge
mov
cwtl
mov
jbe
pusha
adc
sbb
sbb
mov
mov
in
iret
pop
inc
into
inc
jp
bound
movsl
stos
aad
sbb
mov
mov
dec
dec
in
dec
add
push
sub
sbb
out
dec
sbb
aaa
mov
daa
fwait
jl
scas
gs
xchg
popf
aad
test
sarl
and
stc
sbb
test
pop
or
in
pop
into
cmpl
pop
pop
insl
addr16
data16
notl
out
in
jb
mov
jl
inc
xchg
push
mov
js
push
repnz
iret
ret
pop
xor
or
mov
or
and
notb
shl
lret
popf
lret
inc
ror
sbb
xor
mov
inc
add
inc
fcoml
js
sub
in
and
xchg
hlt
shrl
rcll
mov
mov
push
pop
pop
fwait
push
movsb
cmc
mov
stos
call
imul
out
shll
and
les
fisubl
dec
movb
push
dec
mov
cs
pop
cmp
xchg
pop
divb
fmull
fucomip
xor
xor
jbe
inc
adc
aas
push
sarl
subb
or
iret
mov
sub
xchg
and
sbb
sub
sbb
pop
cld
out
lcall
cmp
data16
shrl
cwtl
mov
xchg
and
movsl
enter
add
add
icebp
xor
push
push
push
fwait
jno
cmp
lods
xchg
scas
sub
aas
xor
lods
dec
es
add
add
daa
adc
arpl
sbb
xchg
sbb
leave
jg
adc
mov
pop
andl
dec
mov
repz
fnstenv
icebp
push
sbb
jne
push
xchg
sti
stc
lock
push
jb
dec
insb
popa
dec
repz
adc
push
jns
ja
int3
mov
jle
es
enter
negl
mov
stc
iret
idivb
js
fbstp
aam
cmp
cmpb
push
cltd
imul
in
mov
aam
scas
shll
fidivrl
fldcw
loopne
sub
fwait
jp
out
mov
cmpsb
popf
hlt
or
cmpsl
adc
xchg
cmp
jo
mov
ror
lods
inc
data16
mov
push
movsb
inc
je
xor
mov
ror
mov
fs
gs
inc
stc
dec
xlat
in
sbb
hlt
out
cmp
xchg
mov
sub
lods
mov
jo
push
mov
dec
imul
sub
icebp
inc
jge
mov
mov
lock
cld
add
xchg
mov
cmpb
test
cmc
int3
inc
inc
sub
jg
ss
mov
mov
repnz
dec
xor
xchg
push
add
pop
addb
mov
add
adc
adc
mov
sti
cli
mov
and
or
dec
cmp
sub
pop
add
push
or
mov
xchg
sbb
xor
sbb
mov
dec
out
or
and
fs
sbb
icebp
ja
pushf
js
loopne
retw
sahf
loop
insb
hlt
inc
inc
lods
rcl
jne
xor
fnstcw
adc
sbb
mov
repz
and
cmp
aaa
and
in
and
out
ret
lahf
xor
mov
or
sbb
sub
mov
or
loope
cmpsl
daa
xor
mov
test
pusha
call
cmp
push
dec
stc
fldt
mov
sub
add
scas
lret
fstps
sub
sti
fstpt
push
popf
jmp
push
push
or
dec
cmp
adc
push
jecxz
mov
adc
cmp
pop
lods
and
addr16
pop
hlt
std
push
cld
movsl
xor
ficoml
xchg
and
sti
xor
mov
pop
xlat
out
les
repnz
arpl
xchg
lods
das
mov
sarb
fisubl
out
in
push
les
xchg
mov
sbb
mov
data16
fwait
sbb
xchg
int
gs
mov
pmuludq
cltd
hlt
sahf
lods
or
pop
xchg
jae
jo
test
push
xor
cwtl
aas
lea
sbb
push
add
or
pop
fisubs
dec
dec
push
mov
cli
test
ret
and
add
int3
popl
sti
jno
inc
jecxz
mov
jp
lret
aam
shll
movsb
enter
and
push
xchg
adc
sbb
jg
jle
mov
imul
add
ret
push
dec
insb
sub
xchg
nop
popf
ds
sbb
dec
bound
push
jne
xor
lds
adc
mov
sub
add
xchg
lock
and
xor
xchg
add
scas
adc
cmp
in
mov
dec
sbb
xchg
sub
fs
loope
xor
rcr
push
adc
out
cmp
xor
pop
jl
fldt
int
push
fldl
adc
dec
sub
iret
jecxz
or
dec
pop
add
inc
popf
loope
es
add
and
fisubl
xor
out
inc
out
arpl
fcmovne
test
pop
test
add
icebp
rorl
roll
pop
sbb
test
nop
cli
jb
mov
cmp
ljmp
add
pop
cmp
dec
pushf
jno
inc
in
loope
adc
mov
std
mov
dec
inc
cli
xor
sahf
lods
xor
push
fs
add
stos
aaa
incb
cmp
push
imul
shl
fsubs
repnz
in
pusha
rclb
lock
or
xchg
jo
xor
sub
rcl
das
cs
ficoml
jo
pop
lea
mov
push
fsubl
mov
and
cld
iret
cmpsl
mov
adc
jbe
loop
cmp
and
push
cmp
mulb
sarb
stc
in
xchg
sub
pushf
mov
jne
mov
or
xchg
pop
inc
call
xor
popf
aad
add
pop
repnz
mov
xorb
dec
pop
imul
mov
cmp
dec
iret
movsl
dec
stos
out
lahf
mov
jecxz
add
sub
or
adc
iret
jo
jmp
vpmacsww
push
xor
push
aad
jb
jb
sbbb
aad
daa
cmpsl
sub
pushf
adc
push
insb
xchg
ja
mov
fcmovnu
dec
stc
inc
cmp
ret
jmp
inc
cmp
cmp
lret
inc
jno
sub
fdivl
repz
xchg
cwtl
pop
cwtl
mov
ss
clc
mov
repz
mov
lret
cmp
lods
movsl
lock
out
int3
sbb
pop
dec
int
xor
outsl
cltd
out
movsb
or
les
push
negb
clc
in
mov
scas
adc
add
or
sahf
push
addb
inc
dec
loope
sub
jb
xlat
or
adc
fildl
dec
mov
shll
add
idivl
out
pop
mov
icebp
nop
pop
and
js
cmp
arpl
fnsave
int3
sub
or
mov
push
je
orb
insb
xchg
stc
and
sbb
dec
xor
pop
inc
aas
mov
ds
mov
ljmp
clc
xchg
inc
xor
or
sbb
fdivs
insb
mov
stc
mov
mov
pop
sbb
lret
mov
mov
loope
ffreep
or
nop
mov
pop
scas
out
cs
adc
call
mov
add
lret
shrl
dec
scas
push
adc
sbb
xchg
mov
adc
dec
ss
xchg
xor
outsl
dec
push
and
out
xor
xor
scas
loopne
or
jecxz,pn
xor
push
dec
gs
pop
int
jo
push
or
mov
pop
loope
cs
mov
push
cltd
push
test
push
mov
adc
mov
jp
les
fstpl
out
stos
cmp
push
icebp
dec
shrl
rcll
into
mov
add
ljmp
fsubrl
scas
sahf
popf
xor
clc
pop
adc
jmp
xchg
pop
js
cli
cli
jecxz
adc
push
xchg
stos
xor
jge
push
imul
pslld
sbb
adc
and
add
or
push
fwait
mov
or
or
and
push
cli
outsb
loop
jo
sbb
cmpl
int3
cltd
ret
xchg
adcb
inc
rclb
dec
pop
dec
stos
sub
mov
int3
andb
sub
test
lcall
push
inc
rolb
push
out
lea
xor
int3
xor
cmpsl
flds
sbb
scas
jns
sub
outsl
dec
lret
nop
sbb
andnps
leave
mov
xor
ss
jp
shr
stc
mov
dec
mov
xor
push
mov
mov
jmp
push
js
fidivrs
dec
mov
mov
lods
in
add
repz
leave
ja
sbb
pop
adc
jbe
mov
in
lea
inc
add
cmp
and
push
xorl
stc
xor
inc
add
jne
sbb
in
dec
inc
cmpsl
imul
push
cmp
jg
es
lea
jmp
add
fimuls
xchg
hlt
cmpsl
push
sbb
dec
enter
icebp
aaa
iret
in
imul
cmp
lret
xchg
and
add
xor
push
inc
scas
dec
jns
andb
scas
jo
xlat
loope
dec
enter
faddl
jno
push
adcl
and
stos
dec
xor
inc
lods
fmulp
sub
add
cmpsb
add
sub
in
push
cld
mov
and
lods
inc
test
push
into
pop
and
pop
aas
test
test
loopne
outsl
mov
repz
lahf
sbb
xlat
out
and
xchg
mov
ljmp
aad
mov
hlt
mov
fs
adc
sti
jno
add
pop
fsts
clc
add
push
dec
adc
loop
push
mov
adc
ljmp
jne
mov
pushf
sub
aaa
repnz
mov
sbb
mov
sub
adc
test
pop
mov
aam
enter
push
sub
mov
push
xor
aas
aas
fcomi
into
and
inc
movsl
out
mov
dec
test
sub
popa
jne
xchg
or
xor
sub
out
je
addl
lcall
cmpsl
and
jnp
repnz
add
jle
dec
mov
and
lds
xlat
mov
fistl
jb
add
repnz
mov
test
xor
xchg
jns
and
je
push
and
loopne
push
jmp
cmp
pusha
cmc
add
ja
pop
in
xor
add
inc
sbbl
push
xchg
mov
xchg
cld
jp
outsl
lea
mov
cmp
push
sbb
xlat
mov
push
loop
and
cs
movsb
cmpsb
pop
stc
mov
nop
das
pop
int
rclb
test
shll
imul
and
stos
or
mov
cmpsb
test
pop
push
test
stc
mov
or
push
hlt
aaa
inc
and
in
shlb
repz
lcall
push
push
mov
ss
mov
or
testb
pop
in
cmc
int
push
jmp
pop
in
lds
or
sti
outsl
out
sub
lods
not
aas
lods
clc
push
mov
inc
fs
xor
scas
fiadds
xchg
movsl
mov
mov
imul
dec
sub
push
jmp
stos
pop
dec
in
out
fldt
or
and
mov
sti
push
mov
pop
push
adc
push
mov
inc
or
repz
xlat
arpl
sbb
dec
xchg
pusha
fbld
hlt
jae
shlb
pop
sub
jno
test
adc
dec
add
sti
pop
arpl
fsubrs
and
xchg
xor
stos
cmp
sahf
and
cmp
mov
xchg
mov
dec
out
jecxz
out
adc
xor
pop
or
jecxz
repz
pop
mov
push
inc
das
cld
lcall
into
scas
inc
in
sbb
mov
rcrl
pop
xchg
rcrb
xchg
xchg
mov
fisttpll
shlb
and
hlt
add
imul
out
xchg
rcrb
adc
gs
push
test
pop
xor
out
or
xchg
lcall
sub
xor
and
jge
loope
push
mov
fmuls
shrl
push
repz
dec
sbb
or
dec
fnstenv
xor
mov
xor
cltd
xchg
out
lret
cld
cltd
and
rcl
jmp
xchg
hlt
sahf
enter
movsl
push
jbe
rolb
sub
xlat
fwait
pop
testl
cltd
rcr
jge
pop
lcall
dec
add
inc
loopne
out
dec
push
and
add
xor
add
popf
xchg
dec
test
dec
jmp
mov
loope
addr16
clc
cmpsl
insl
adc
dec
scas
popa
out
jg
in
mov
imul
sbb
lcall
test
ja
jl
and
leave
je
cmpsl
imul
lods
sbb
adc
add
adc
mov
cmc
add
sbbb
jl
xchg
aad
dec
outsl
fsubr
pop
push
add
add
or
or
sub
loope
push
mov
and
cmp
cmp
pop
outsl
bnd
sbb
leave
lea
test
das
cmpsl
stos
dec
jns
sub
jo
int
fdivp
adc
pusha
lods
adc
jecxz
add
lahf
iret
mov
shlb
jo
pop
into
mov
scas
sub
xor
push
add
push
sub
adc
scas
jp
inc
repz
add
sub
or
lds
es
popa
pop
xchg
movd
dec
daa
inc
xchg
lret
lods
les
cmpsb
ret
stos
testl
jg
decl
jge
cli
and
jb
loope
push
and
mov
sbb
and
or
mov
repz
or
in
dec
ficoms
insl
sub
in
mov
adc
jl
mov
aad
arpl
pop
push
dec
mov
mov
hlt
pushl
imul
mov
icebp
jl
jo
or
leave
cmp
jne
xorl
mov
add
lods
pop
inc
jbe
rcll
jl
sub
pop
mov
xor
mov
ja
pushf
push
addb
push
rcrl
push
loope
cs
add
jb
sbbl
cmc
loop
addr16
add
test
and
test
push
jno
cltd
mov
push
arpl
xchg
scas
sahf
fwait
mov
mov
push
dec
add
xor
xchg
dec
lods
out
cmp
repz
pop
inc
outsl
inc
iret
insl
scas
je
xor
leave
dec
mov
les
movsb
insl
dec
js
test
pop
in
inc
in
xchg
jb
mov
xor
dec
popa
xchg
push
addr16
add
mov
sti
rcr
xchg
and
out
jmp
in
lret
jl
jle
mov
inc
jo
and
dec
xor
fiadds
lods
xchg
mov
adc
iret
stc
lods
scas
add
in
adc
sbb
mov
adc
mov
adc
lods
cmp
or
or
test
outsl
out
outsl
pop
dec
pop
mov
and
std
icebp
jmp
jne
stos
in
cmp
in
ljmp
cld
or
hlt
lods
push
jno
cmp
push
std
sbb
xor
jl
and
cmp
in
insb
hlt
pop
dec
mov
addr16
cmp
hlt
push
jl
adc
ja
scas
addb
mov
js
aam
mov
mov
lahf
pusha
jl
js
adc
cwtl
sub
add
adc
pusha
leave
inc
arpl
sarb
push
mov
cmp
jge
add
mov
roll
sti
mov
ret
mov
mov
pop
loop
push
xor
push
or
push
mov
inc
leave
inc
cmp
mov
in
or
fcompl
popa
inc
xchg
dec
pop
cmp
adc
stc
and
scas
xchg
pop
scas
test
adc
jo
lret
rolb
pop
xor
mov
in
mov
cwtl
mov
sbb
dec
xor
into
mov
test
or
insl
leave
pop
adc
call
add
pop
loop
dec
popf
lcall
jl
pop
fwait
into
xchg
pop
cmp
and
gs
dec
mov
push
cmp
mov
daa
mov
bound
stc
sub
dec
xor
lahf
push
mov
adc
gs
and
es
stos
push
dec
mov
fsubl
xorb
xchg
or
out
arpl
xchg
fninit
negl
rolb
icebp
push
pop
or
lret
jle
out
iret
add
iret
imul
out
rolb
nop
dec
popa
xor
arpl
cwtl
pop
push
into
lret
push
mov
sarl
testb
add
and
inc
test
aaa
jae
dec
lds
mov
scas
or
jge
movsb
call
arpl
adc
xor
mov
xor
mov
cmp
loopne
mov
das
insl
insl
sbb
push
sub
sub
push
test
pop
les
sub
mov
sahf
imul
js
fiadds
inc
ja
push
adcb
lcall
inc
shr
decb
je
jmp
sarl
mov
fists
cld
loopne
cwtl
test
push
test
mov
icebp
push
sub
fwait
push
cmpsl
jl
cmp
pop
adc
insb
cmpsb
xor
cwtl
in
push
mov
aad
sahf
push
ja
out
std
aad
fsts
cli
lods
ss
shll
xchg
jns
stos
outsb
push
mov
cmc
je
incb
lret
and
jns
adc
mov
lods
mov
les
sbb
cld
mov
jb
xor
mov
mov
lods
xlat
jmp
testl
xor
jecxz
jo
adc
sbb
inc
and
enter
cwtl
mov
repz
mov
leave
out
mov
out
mov
ret
jns
sub
adc
lret
dec
push
xchg
arpl
jae
orl
mov
sub
fistpll
aam
xchg
and
cmp
fbld
push
jecxz
rcrl
sub
and
xor
mov
call
cmp
push
xchg
push
pop
insb
ljmp
inc
push
pop
stos
adc
fwait
mov
subl
rorb
dec
nop
xchg
mov
cs
xor
lods
jg
pop
pusha
arpl
mov
pusha
andl
xlat
test
outsl
xor
inc
jns
xchg
inc
mov
rcr
movsb
divb
pushf
loopne
pop
js
stc
or
push
std
sub
scas
sub
mov
mov
adc
mov
mov
dec
mov
mov
mov
push
jnp
das
cmpsb
out
cs
inc
popf
push
movsb
lods
fsubs
add
test
nop
icebp
imull
dec
pop
cli
jno
pusha
push
inc
add
xor
in
lret
jecxz
and
cmc
sti
and
loopne
inc
lcall
pop
add
push
subl
cmp
xor
dec
adc
inc
jmp
stos
sub
sahf
push
cmpsl
push
stc
jo
fmul
mov
cmp
pop
push
xchg
inc
mov
imul
int3
xor
stos
mov
sti
negl
into
cmp
aaa
test
xchg
lea
mov
push
sahf
jo
inc
out
sarl
and
in
fwait
or
inc
insb
jg
add
inc
in
mov
das
jl
xor
add
in
shl
stos
addb
inc
gs
test
cmpsb
pop
dec
pop
es
in
rcrb
add
cltd
mov
jno
aad
cmp
xchg
jbe
leave
adc
notl
into
shlb
jp
push
sahf
and
lods
lods
shll
ror
rorb
sub
test
jns
jno
ja
cmp
mov
sahf
add
popa
aaa
in
mov
ljmp
jmp
testb
or
iret
xor
xchg
add
or
ret
dec
push
dec
jmp
jp
lock
lods
adc
leave
int
jg
adc
enter
inc
sbb
xchg
inc
mov
lods
xchg
rcrl
and
mov
cmpb
imul
test
shll
xchg
cmp
and
cmc
jp
iret
jmp
gs
xchg
aad
repz
pushl
outsb
std
jle
js
ja
inc
dec
xor
lret
inc
ret
or
popa
call
and
push
jnp
decl
push
sbb
lods
ret
repz
cmpsb
cwtl
or
jp
fstpt
and
fldenv
mov
clc
xchg
ljmp
scas
inc
jnp
hlt
clc
pusha
fnsave
jbe
push
mov
sbb
movsl
loopne
ret
in
sub
jns
adc
rclb
dec
popf
xor
js
or
jl
aam
dec
sub
push
fwait
jg
dec
add
pop
pop
int
fstpl
or
or
push
mov
sahf
xchg
sbb
add
dec
xchg
mov
ljmp
daa
or
pop
pusha
lret
mov
lcall
dec
into
jle
cmp
repnz
jmp
aam
mov
negl
mov
icebp
test
jg
xor
sub
mov
inc
xchg
loopne
pop
popf
out
pop
push
mov
mov
sbb
std
cs
mov
rolb
sub
jo
mov
sbb
sub
or
jecxz
sub
mov
and
cli
sbb
out
lods
sarl
adc
das
dec
cltd
nop
sarl
clc
movsb
ss
inc
rorl
int
in
jnp
test
mov
push
dec
imul
mov
popf
lret
xchg
iret
cmp
add
lock
mov
sub
or
lahf
push
inc
dec
cmovne
pop
jbe
adc
daa
and
cltd
jo
cmp
lds
dec
fdivrl
loope
rcrb
call
out
push
inc
adc
stos
xchg
jle
testl
jo
rclb
inc
ficoml
jmp
inc
pop
inc
push
push
daa
in
stos
xchg
jmp
add
in
addr16
mov
jno
lret
in
pop
out
insb
les
test
mov
mov
xor
pop
outsb
sbb
inc
leave
inc
mov
dec
pop
enter
cmpsb
jnp
mov
lods
insl
call
aaa
sbb
jnp
cli
aaa
pop
jecxz
mov
movsb
incl
add
jg
xchg
xchg
hlt
and
outsl
sub
lahf
insl
stos
test
push
add
and
das
das
das
push
sub
sub
ss
aaa
jmp
mov
add
das
push
mov
lcall
pop
repnz
mov
movsl
fcoms
push
or
repz
sbb
inc
bound
mov
icebp
mov
sub
jbe
push
inc
inc
rol
cmp
rcrb
sub
imul
inc
loope
mov
push
mov
loopne
andb
jno
jle
jg
mov
add
pop
insb
lds
jae
enter
xchg
push
rcll
and
pop
adc
mov
jbe
loop
ljmp
aad
pop
test
xchg
std
cmp
mov
ret
push
jnp
test
or
mov
insb
inc
aam
sub
cld
insl
fwait
adc
jmp
dec
or
pop
ret
cmpsl
sub
xor
pop
or
je
scas
sub
push
and
adc
cmp
mov
iret
inc
pop
jb
adc
and
je
pop
cli
xor
adc
imul
pop
ffree
cmp
pop
out
mov
js
nop
adc
or
mov
mov
mov
jbe
mov
push
lret
std
lods
pop
lret
cmc
lods
xchg
add
fs
lods
jns
cmp
inc
xor
scas
cmc
clc
mov
and
jno
stc
and
out
pop
add
inc
jge
or
es
fsubr
cltd
sti
adc
adc
mov
fnstsw
das
cmpsl
fdivrl
inc
xchg
leave
cmp
adc
repz
cs
pop
bound
idivb
pop
gs
cmp
call
dec
mov
push
pop
mov
pop
inc
lea
das
cmpsl
and
jns
add
gs
es
iret
cmp
fbstp
fdivp
pop
or
jg
mov
rcl
cmp
and
nop
add
rclb
xor
push
aas
sub
sub
ficompl
mov
dec
and
scas
les
xlat
xchg
adcl
sbb
pop
sub
es
xchg
enter
mov
mov
je
push
sbbb
jae,pt
dec
sbb
add
inc
inc
adc
leave
mov
xor
fists
jle
jg
aad
xchg
cld
dec
jbe
push
add
sub
out
mov
in
cli
fwait
or
lret
mov
pop
sub
movsl
push
mov
rcll
push
or
adc
das
pop
movsb
fst
hlt
das
dec
cltd
test
jmp
jno
test
in
enter
enter
cmp
bound
mov
into
and
sub
xorb
push
xor
adc
fwait
xor
dec
daa
enter
mov
fsubrs
iret
xchg
pop
xor
in
mov
scas
mov
das
add
rolb
mov
out
mov
loopne
popf
bound
sub
sub
push
push
js
adc
jo
testl
dec
mov
cmp
roll
push
add
leave
jp
arpl
test
outsl
xor
ja
pop
je
mov
sar
mov
in
mov
mov
shll
hlt
loop
mov
ret
enter
ljmp
and
adcl
xabort
or
popf
jb
les
inc
or
sub
icebp
stos
cmp
jnp
mov
dec
cmpsl
adc
ljmp
pop
popa
insb
adc
push
scas
dec
test
inc
imul
or
ror
mov
mul
or
cld
rolb
fdivl
fsubs
lcall
aaa
sbb
mull
scas
add
les
push
movsl
clc
or
js
ret
xchg
mov
push
adc
mov
mov
sub
test
mov
cmp
in
adc
popa
xchg
cli
es
and
sbb
adc
pusha
cmp
rorb
lods
xchg
loopne
inc
test
popf
fmuls
jle
and
stc
pusha
xchg
cmp
jge
aaa
and
dec
and
add
cmp
in
es
xor
dec
into
push
mov
cmp
insl
push
lods
mov
test
orl
inc
cmp
outsl
xor
jg
inc
push
add
pop
repz
stos
inc
mov
add
std
cmp
outsb
ret
sbbl
inc
rcr
les
pusha
add
inc
inc
aas
les
pushf
int
dec
sbb
iret
out
insb
push
adc
imul
push
jmp
or
mov
push
repnz
fucomp
inc
les
jbe
jecxz
mov
jg
mov
cmp
in
sti
stos
sbb
in
adcl
rolb
imul
outsb
aas
lock
cmp
sub
sbb
movsl
and
xchg
xchg
add
jns
mov
pop
mov
mov
in
sbb
inc
xchg
pop
xchg
mov
fld
xchg
push
push
add
xor
dec
outsl
or
sub
push
outsb
testb
daa
out
dec
push
lcall
faddl
adc
gs
js
sub
dec
dec
add
int
vmread
mov
jb
or
jg
mov
jb
mov
add
js
inc
jp
cmp
cmp
cmp
cmc
pushf
jmp
mov
lahf
mov
into
push
push
imul
pushf
xchg
ss
xor
dec
or
jae
repz
adc
shlb
or
pusha
sbb
mov
and
sbb
jg
fs
filds
inc
jl
jmp
hlt
pusha
insl
outsb
push
stc
out
sti
mov
pop
clc
test
and
xchg
dec
sbb
and
jno
sub
int
cs
jp
es
mov
insb
xchg
cli
pop
push
outsb
mov
push
mov
jae
sub
cltd
testb
pop
stos
or
iret
xchg
ss
add
lds
js
lods
dec
movsb
pop
ficoms
pop
jge
pop
pop
dec
out
adc
mov
pop
sub
or
pop
xor
cs
mov
shll
int
lods
in
pop
xor
shl
stc
push
jno
cmp
lock
cmc
jo
data16
push
fcomps
pop
sahf
cltd
xlat
cwtl
xor
sbb
mov
adcl
lret
mov
jb
lods
lods
es
adc
rclb
jnp
mov
fcmovnu
das
cmp
dec
enter
dec
jns
push
or
xchg
insb
mov
push
mov
dec
mov
sub
bound
adc
imul
shrl
fldenv
stos
test
iret
push
sbb
adc
mov
sbb
fs
push
cmp
movsl
subb
mov
dec
xor
mov
jbe
sarl
jo
imul
or
inc
inc
mov
mov
mov
jge
and
psadbw
cmpsl
pop
mov
leave
movsl
inc
push
or
mov
int3
add
sbb
lcall
lahf
bound
cmp
test
mov
stc
sbb
sub
inc
push
insb
pop
pushf
push
lods
or
aad
cmp
icebp
jg
inc
and
pop
fimuls
rorl
mov
stos
sub
lods
test
xchg
loope
dec
xchg
xchg
in
cmp
add
leave
jno
fiaddl
fsubs
insl
jae
lret
adc
add
mov
mov
dec
test
sarl
std
dec
jo
adc
cltd
std
dec
dec
mov
xchg
dec
ss
push
inc
roll
loope
inc
dec
mov
lcall
jmp
mov
inc
call
push
and
test
and
mov
sbb
xor
push
add
pop
inc
mov
push
add
push
rclb
les
mov
es
mov
jnp
mov
cmc
cltd
ret
xchg
ret
pop
sarb
loop
ret
jae
xor
push
sbb
lret
cmp
leave
leave
ficoms
ljmp
inc
jle
test
add
cmp
test
mov
imull
iret
pop
popa
cmp
aas
pushf
xlat
hlt
rolb
dec
dec
inc
inc
dec
cmp
xchg
movsl
cmpsb
je
xchg
in
idivl
outsl
movsb
cmp
fdivrl
sti
or
lret
dec
mov
iret
pop
jmp
push
mov
mov
xor
dec
repnz
in
cmp
add
gs
jbe
mov
add
sbb
xlat
mov
mov
inc
out
add
or
rorl
pop
pop
scas
push
adc
sbb
lods
cmpsb
inc
shlb
mov
clc
fs
imull
add
and
xchg
cmp
ret
les
mov
push
lods
outsb
flds
clc
loop
inc
add
cli
mov
jp
nop
stos
inc
gs
mov
popa
adc
loop
inc
or
sysenter
inc
xchg
jns
adc
adc
outsb
mov
push
rorl
pop
bound
push
lock
cli
jl
scas
or
mov
clc
mov
lods
insb
movsb
pushf
lahf
pop
stc
push
adc
aam
mov
or
inc
inc
or
sub
push
clc
cmc
in
dec
xchg
xor
fimull
sub
xor
xchg
mov
vmwrite
lret
mov
sti
xchg
adc
cmp
sbb
xchg
pop
sbb
and
arpl
test
les
fists
xchg
pop
mov
out
mov
rolb
in
push
xchg
in
sub
cmpsl
enter
adc
rcl
xor
sbb
inc
sub
in
jno
addl
popf
int
gs
jecxz
pop
loop
xor
inc
sti
xchg
test
fadds
dec
pop
sbb
out
ret
imull
movaps
testl
incb
mov
push
in
jge
xor
int
mov
rcrl
repz
pop
in
fst
xor
jnp
outsl
daa
stos
dec
mov
adc
adc
mov
cs
stos
or
sub
mov
xor
dec
sbb
cwtl
scas
push
icebp
push
decl
dec
jmp
add
pop
shlb
xor
add
dec
push
out
cwtl
bound
sbb
pop
push
and
insl
jbe
pop
rcrl
sarb
mov
repz
xchg
inc
jne
inc
stos
sub
cs
subl
jl
shlb
jb
fnstcw
add
mov
xor
adc
xor
test
mov
movsb
cmp
xchg
call
adc
int3
xchg
pop
push
sahf
stos
in
or
data16
dec
in
lods
sub
cld
inc
sti
sub
out
fiaddl
imul
mov
adc
mull
add
in
fisubs
popa
shlb
push
and
mov
jae
adc
add
aaa
mov
sbb
push
lods
and
mov
pop
mov
jmp
mov
movsb
cmpsb
xor
xchg
movsl
sbb
ljmp
test
andl
mov
mov
and
les
cmp
shll
scas
shrb
cwtl
jmp
in
and
leave
aad
fs
hlt
mov
cmpsl
in
js
test
inc
xchg
push
mov
mulb
dec
mov
sbb
pop
daa
test
mov
adcl
lahf
pushf
jg
and
xchg
popa
xchg
cmpsb
dec
mov
sub
xor
xchg
addr16
ret
mov
jae
xlat
shll
cli
fstps
loope
pop
in
scas
mov
add
cmc
aaa
movsb
and
lahf
adc
sbb
inc
xor
add
jmp
shll
mov
jg
inc
test
inc
ljmp
mov
dec
cmc
mov
mov
pop
mov
mov
pop
cmc
cli
into
push
push
push
daa
nop
push
imul
sti
sub
pop
inc
sub
rorb
sub
icebp
and
out
xchg
daa
imul
adc
mov
popf
cmp
repz
aaa
cs
mov
in
xchg
dec
or
mov
cmp
add
adc
out
add
xor
xor
dec
mov
xchg
xlat
pop
and
out
adc
bound
push
or
mov
rcr
sub
enter
dec
movsl
in
fisubl
fldt
stos
dec
jno
in
out
sbb
or
andb
pushw
xchg
cwtl
add
pop
out
dec
or
push
out
push
xorl
arpl
dec
cmp
jns
mov
outsb
jg
subb
lods
sti
mov
xor
xchg
filds
out
sahf
cmpsl
outsl
mov
or
fmul
sub
mov
dec
in
jp
pushf
mov
cmpsl
ret
fistps
in
popa
jbe
inc
mov
out
cmpsb
jnp
jle
dec
xor
push
add
lcall
inc
arpl
and
xchg
mov
repz
es
icebp
hlt
scas
xor
pop
outsl
sbb
mov
jle
lods
add
mov
adc
mov
mov
jae
inc
frstor
fmuls
xor
jns
mov
jge
mov
incl
adc
icebp
inc
sbbl
sbb
int3
out
mov
pushf
hlt
add
jo
lods
in
sub
jne
orb
cmp
sti
outsl
xor
mov
add
push
adc
jmp
and
sbbb
mov
mov
scas
xchg
mov
sub
subb
push
mov
outsb
inc
iret
push
mov
fwait
aaa
xor
into
mov
fs
mov
adc
inc
ret
cmp
clc
out
push
adc
sub
xor
adc
or
dec
movb
int
add
decl
xchg
shlb
fsubrs
cmovg
orb
in
mov
pop
mov
mov
daa
out
popf
icebp
out
inc
aaa
pop
mov
jmp
dec
cli
jns
mov
adc
sub
dec
adc
xor
movsb
rorl
mov
fcomp
cltd
xor
adc
push
push
cmp
jns
xchg
mov
jecxz
cmp
xchg
add
mov
inc
cmp
repz
idivl
add
sti
mov
cltd
mov
and
sbb
lret
outsb
mov
xor
pop
jge
mov
pop
sar
cli
mov
ljmp
add
xor
add
mov
sub
mov
jae
mov
inc
out
out
jmp
scas
jb
pop
popf
xchg
xlat
xor
fmulp
push
inc
cltd
mov
sbb
push
and
daa
cmp
js
and
jb
sub
repz
pop
push
xor
lea
dec
mov
enter
and
data16
jmp
dec
add
jno
jg
enter
add
push
mov
outsl
nop
mov
outsl
mov
cmp
cwtl
out
imul
aad
push
xchg
loopne
fidivrs
ds
andl
mov
popa
es
in
inc
test
xor
add
xchg
fnstsw
sbb
or
push
and
cmp
and
mov
lds
xchg
xchg
aad
sarb
repz
fistpl
nop
dec
mov
push
movb
add
jle
ss
lods
pop
and
mov
and
cmp
imul
xchg
xchg
xor
jno
jmp
xchg
popf
negl
pushf
adc
scas
jb
loopne
inc
pop
and
cli
lret
fidivl
fadd
mov
inc
fs
fs
xor
xchg
pushw
add
fildl
jmp
mov
cmpsb
scas
sbbl
and
push
adc
hlt
out
dec
xor
in
fnsave
hlt
out
into
cmpsl
icebp
mov
ror
sbb
das
adc
jno
lea
imul
fnstsw
adc
call
adc
cmp
jecxz
pop
sub
loop
aad
xchg
stos
je
pop
mov
into
roll
fwait
mov
jp
shlb
xlat
pop
sub
ds
jge
dec
aad
outsl
add
call
std
and
mov
and
pop
out
pop
je
stos
pop
xor
push
dec
das
sti
inc
sti
fldcw
les
cli
xor
jbe
mov
out
test
pop
sbb
add
gs
sub
cmp
dec
stc
aaa
sbb
lods
push
dec
mov
dec
mov
inc
jp,pt
xchg
sub
or
xchg
jno
xchg
sbb
or
negl
fistpl
xchg
pop
jecxz
out
push
fldcw
lcall
ja
add
mov
repz
cmpsl
dec
lds
fidivl
pop
in
psubsw
scas
mov
adc
sbb
cs
rorb
push
lcall
sbb
and
dec
filds
pop
dec
jno
scas
inc
repnz
std
repz
mov
enter
pop
sub
and
ret
dec
xchg
addr16
aam
push
push
out
cltd
mov
sub
icebp
jg
in
cld
push
push
dec
or
das
adc
cmpsl
dec
subl
mov
push
xchg
push
inc
aad
pushf
jbe
mov
iret
and
pop
lahf
das
inc
in
and
ljmp
repz
test
and
fbld
lahf
sbb
jns
adc
mov
push
clc
pushf
xchg
add
xchg
pop
inc
jne
xchg
add
jmp
imul
xchg
bound
bound
sbb
scas
and
xor
test
mov
rorl
sub
push
imul
int
mov
inc
lret
push
inc
scas
addr16
mov
pushf
jae
push
push
ret
adc
inc
fwait
ljmp
sbb
in
outsl
jnp
jmp
sub
adc
sub
cmp
jo
jge
push
add
les
adc
into
fstpl
inc
jns
or
in
lock
and
sub
pop
fsubl
insl
xchg
and
pusha
sub
mov
jl
movsl
je
in
shl
push
or
lahf
mov
push
dec
inc
sti
cwtl
fs
xchg
insl
je
pop
les
popf
inc
cltd
test
jo
insl
aaa
or
sbb
mov
sbb
push
mov
shrl
mov
clc
xchg
pop
test
ficompl
cs
imul
or
xor
pop
or
sub
lret
cltd
push
jno
loope
ret
xchg
inc
fxch
push
xchg
icebp
xchg
fwait
addl
push
shrb
xor
xchg
mov
in
push
xor
add
add
imul
mov
cmpsl
inc
adc
movsl
or
lret
pop
negl
js
mov
jg
push
push
push
loop
xchg
rcrl
pop
sbb
sbb
and
dec
pop
int3
cs
jmp
adc
cli
ds
push
dec
add
inc
iret
push
rcrl
mov
push
aad
or
imul
gs
xor
out
aam
lock
js
ret
ret
mov
xchg
mov
xchg
leave
xchg
aaa
xorl
adc
fcoms
iret
fs
cmp
inc
lret
push
push
mov
outsb
jbe
outsb
adc
fnstenv
dec
out
insl
cmp
lds
jl
dec
mov
adc
dec
mov
add
loope
pop
in
icebp
pusha
cmp
sbb
cmp
cmpsl
fwait
out
adc
mov
stc
out
push
cld
iret
and
int
pushf
mov
sub
rclb
test
mov
jo
or
jge
sub
jl
std
ss
xchg
xchg
sbb
sahf
stos
sti
add
into
stc
test
xchg
cmp
mov
lahf
mov
mov
cli
mov
cmc
xor
ss
xchg
ret
mov
call
mov
dec
pop
js
in
paddusw
mov
cmpsb
sbb
xchg
cmp
mov
or
and
out
inc
into
cmp
cmp
cli
adc
and
dec
aad
or
sahf
cmp
mov
leavew
push
repnz
push
daa
xor
mov
test
add
sub
jmp
sub
lret
sbb
push
cmp
sahf
stos
insl
adc
mov
sysret
xchg
mov
push
cli
xchg
inc
cmp
mov
and
mov
lods
clc
mov
adc
jmp
fsubp
sbb
out
sub
mov
adc
std
loope
mov
fidivrs
lcall
pop
pop
and
insl
test
insb
xor
out
mov
xchg
repnz
xchg
mov
cmpsb
or
xchg
cmpsl
jg
sarl
sbb
fwait
or
add
push
push
mov
push
fwait
sub
jno
stc
sub
xor
paddb
jb
add
pop
push
movsb
xchg
sbb
xchg
or
test
test
jg
xchg
rcrl
jge
mov
pop
inc
in
sarl
or
repnz
sbb
loopne
int3
xchg
lods
mov
sub
shl
pop
and
ret
or
lock
mov
add
data16
fs
mov
inc
sbb
mov
insl
jns
cmp
sbb
lods
fidivrl
sti
mov
jns
cmpsb
and
sub
jnp
dec
lret
mov
push
inc
stos
push
push
jbe
and
addr16
imul
adc
xor
subb
inc
pop
ficomps
enter
pop
push
rolb
jo
mov
and
mov
jo
sbb
test
mov
or
jne
pop
insb
push
push
add
test
sbb
jg
cmp
adc
cmp
jge
lock
cmp
push
jp
aad
shrb
push
dec
mov
mov
jno
int
add
sub
das
mov
lret
sbb
cmp
push
push
jno
fchs
push
int3
xchg
xor
aad
std
xor
mov
mov
outsl
fadd
pop
xor
sbb
ret
lret
jo
pop
xor
dec
into
sbb
stos
and
mov
or
dec
sub
xchg
imul
out
inc
sbb
sti
inc
insl
rorb
push
movsb
dec
jne
xchg
fsubs
rcrb
xchg
or
movb
ds
lock
daa
sub
sub
lret
mul
dec
roll
out
sbb
adc
add
xor
mov
nop
es
stos
ds
add
jbe
cmpsb
sub
loop
pop
ss
std
pusha
add
jmp
jb
jecxz
andb
push
rcr
mov
xchg
sbb
aaa
pop
cmc
sub
std
fsubs
xchg
jno
cmp
out
stc
bound
jmp
daa
loope
sub
outsb
aad
filds
jns
cmpsl
aas
test
ss
in
mov
rcr
add
test
sub
stos
jo
mov
leave
xor
std
leave
cmp
enter
rolb
or
nop
xchg
xor
xchg
fwait
jo
and
cmp
mov
inc
insb
repz
sahf
xchg
sbb
push
movsb
lock
arpl
sbb
fdivl
xorl
popf
mov
lret
hlt
mov
lret
and
pop
lea
shrb
mov
lds
sbb
dec
adc
stos
daa
outsb
dec
xchg
mov
or
lret
xchg
out
or
loopne
inc
cmp
jo
sub
bound
cmp
idivl
loop
inc
ds
in
dec
sub
test
es
nop
sub
movsb
test
cmp
ljmp
sahf
mov
jb
lods
subl
xchg
es
push
lock
repz
fisttpl
pusha
stc
pop
popa
push
jbe
es
fimull
lods
dec
scas
and
addl
sbb
push
mov
add
or
sarb
push
lcall
frstor
lds
loop
iret
xlat
jbe
out
subl
stc
leave
fs
int3
lcall
sbb
lret
sub
ss
xor
insb
xor
lea
mov
fildll
lret
or
lea
adc
sahf
in
out
aad
insb
stc
movsl
loopne
mov
sbb
adc
sahf
shr
fbld
adc
mov
or
push
sbb
lods
pop
cmovle
push
mov
aad
add
sub
test
int3
ret
xchg
xchg
lea
pop
aam
jle
mov
pop
cmpl
sbb
add
pop
mov
mov
lock
cmp
shrb
inc
in
shr
fdivs
inc
gs
xchg
cld
addr16
jecxz
sub
inc
add
test
jb
dec
cmp
adc
rcl
cmpsb
aad
stc
mov
inc
insb
test
es
daa
pop
adc
jg
mov
and
adc
dec
inc
pushf
repz
repz
out
adc
test
movsb
fldenv
into
jnp
cmp
or
mov
mov
xor
das
mov
in
bound
movsb
inc
or
mov
cli
and
lods
movsl
bnd
addr16
dec
push
subl
jne
ja
jecxz
int
jno
add
and
sub
cmp
cs
push
in
jecxz
jo
mov
push
cmp
in
xlat
ret
push
push
lock
mov
jno
ljmp
ljmp
pop
jg
sub
int3
cmpb
and
addr16
sti
add
je
imul
aas
pop
mov
mov
jl
cld
inc
pop
or
pop
push
lret
es
in
pop
add
jbe
sbb
cmp
adc
jnp
mov
pop
cmp
push
pop
xchg
jns
imul
pop
cli
addr16
or
adc
push
push
cmpsb
test
xchg
fsts
adc
flds
and
mov
sbb
popf
leave
pushf
mov
inc
cmpsl
inc
sti
jo,pn
dec
mov
jns
pop
cwtl
or
imul
adc
mov
aam
jno
mov
and
jmp
adc
into
hlt
sub
andl
and
insb
push
lahf
xor
or
les
aaa
std
shl
pop
adc
dec
sbb
out
lock
and
call
adc
mov
push
jno
test
sub
and
or
fists
cmp
int
pop
mov
pop
mov
stos
test
cmc
shrl
fsts
sbb
mov
jo
pop
enter
ret
ret
add
lock
ret
lret
js
mov
xchg
insb
arpl
sub
mov
push
mov
sub
mov
jg
add
xor
fldenv
shll
cmp
or
push
jg
lcall
sub
test
xchg
aaa
lret
xchg
pop
fnstsw
mov
aaa
xor
mov
jmp
cmp
push
ja
lcall
xchg
repnz
aas
xchg
insl
mov
aam
iret
push
lods
push
sti
mov
cmp
in
in
aaa
shll
icebp
sbb
pop
je
sbb
movsb
mov
aad
mov
adc
and
pop
in
cmp
and
cwtl
loope
cmc
add
fistpll
jae
jge
idivb
pop
mov
adc
ret
bound
mov
popf
xor
int
sti
xor
repnz
js
aad
push
jp
arpl
or
imul
push
push
or
mov
add
sub
add
dec
ja
stc
jae
or
mov
ljmp
and
jb
into
xchg
bound
call
shll
lahf
jns
jne
inc
rorb
fstps
out
push
imul
mov
add
fwait
cld
sub
mov
loope
inc
mov
fwait
sbb
sub
cmc
xchg
dec
clc
xor
dec
movsb
fwait
adc
rcll
in
adc
pop
fiadds
sub
push
ret
jbe
jnp
test
push
std
aaa
fidivs
xchg
addr16
jns
mov
inc
lods
jle
outsb
jae
lods
stc
and
icebp
cltd
pop
loopne
mov
pusha
inc
lahf
xchg
das
pushf
cmp
or
pop
push
dec
add
mov
outsl
pop
data16
sbb
jbe
ss
sbb
push
add
addl
lahf
mov
imul
clc
jmp
or
pop
or
out
stos
mov
gs
jecxz
cli
cli
pop
dec
cmc
mov
loopne
cmp
std
mov
pop
repnz
popf
adc
cmp
stos
push
faddl
test
xlat
xchg
inc
sar
sbbl
mov
add
jno
sti
sbbb
pop
jp
inc
add
mov
movsb
mov
stos
add
and
push
mov
push
mov
lcallw
dec
push
fistl
lods
mov
je
sbb
repnz
add
out
inc
je
cs
outsl
mov
repz
jns
or
mov
sub
mov
mov
in
xor
in
cwtl
xlat
lods
pop
pop
jne
cmc
loopne
dec
xor
mov
cld
int3
xchg
mov
imul
and
sbb
ret
mov
test
add
pop
sar
mov
inc
mov
pop
or
push
jl
enter
outsb
xor
jmp
jle
mov
or
orl
cmp
sahf
sahf
out
insb
sarb
mov
or
and
es
xchg
pop
aas
mov
ret
popf
shlb
fistps
lods
data16
push
lods
adc
fldl
adc
push
push
mov
mov
insl
xchg
push
xchg
and
dec
adc
or
jg
fwait
out
cltd
sti
cmc
inc
pushl
jne
mov
js
aaa
or
lods
ljmp
mov
pop
fldl
mov
stc
xchg
adc
and
xor
cmc
mov
idivb
sub
xlat
test
ret
out
pusha
jo
fiadds
sub
mov
xor
sub
sub
subb
sarb
dec
xchg
mov
aam
shlb
lahf
jp
test
pop
xchg
cmpsb
sbb
pushf
xchg
and
lods
hlt
jno
dec
fdivs
pop
jbe
jne
stos
sub
xchg
adc
push
fmuls
xchg
push
scas
xchg
jecxz
movsl
bound
stc
int3
pop
cmpsb
cld
out
pop
push
or
mov
push
repnz
andb
push
ja
cli
icebp
mov
xchg
data16
mov
jns
rorl
pushf
xchg
loope
jae
pop
cmpsl
xor
mov
xor
jns
lds
fnstsw
inc
and
rorb
imul
xlat
lahf
insl
loopne
leave
outsb
mov
mov
pop
lds
fwait
jns
pop
push
cmp
push
inc
jnp
push
mov
sbb
sbb
mov
jns
inc
push
repz
push
dec
xchg
fildl
bswap
das
xchg
mov
int
pop
dec
orl
jns
adc
iret
fmuls
or
inc
mov
cmp
push
sub
sub
push
and
xchg
sub
sub
mov
cli
mov
xchg
rorb
xor
xchg
sti
sub
andb
adc
and
push
bound
sub
push
cmp
mov
sbb
cmc
lds
sti
dec
test
orb
clc
sbb
scas
pop
add
add
lcall
pop
leave
scas
fcmovne
les
push
mov
mov
inc
mov
outsl
cltd
cmp
inc
cld
jg
xorb
or
xor
mov
mov
lea
dec
inc
sbb
mov
push
mov
jo
shlb
and
push
sub
dec
mov
push
cmp
mov
pop
stc
adc
scas
cmp
cld
cmp
lahf
jno
outsl
xor
scas
stc
sahf
enter
or
inc
ret
add
or
dec
bound
xor
sub
jne
mov
mov
popa
into
adc
cwtl
daa
scas
shlb
into
mov
adc
popf
ljmp
int
addr16
or
mov
addr16
pop
mov
gs
pop
aaa
jp
ret
je
push
inc
call
xchg
andl
push
or
stc
xchg
jns
inc
cmpsb
test
out
stos
out
add
mov
dec
mov
test
or
jnp
pop
sub
or
sbb
scas
ret
fsubrp
fldl
stos
sbb
mov
dec
mov
jb
xor
xchg
cmp
jns
cmp
push
xor
xchg
mov
adc
aam
int3
jns
test
sub
and
fmulp
sarb
ja
fildll
cs
mov
xchg
stc
push
stc
movsb
aam
cwtl
add
pusha
in
dec
rolb
hlt
mov
jp
daa
xchg
add
push
out
jle
loopne
fcmovbe
orb
mov
movsl
stc
cmp
lret
shrl
outsb
xchg
mov
lods
mov
ror
mov
iret
push
jp
cmpsl
mov
or
daa
lods
test
in
leave
sub
cli
mov
in
push
jns
lds
xchg
sti
sbb
adc
jo
mov
lods
shl
cmp
pop
mov
loopne
add
push
inc
mov
stos
xchg
dec
xchg
rolb
mov
sbb
pop
cmc
pusha
jge
jns
das
pop
fnstenv
mov
ja
pop
call
out
repnz
and
mov
sbbb
lea
push
jbe
mov
mov
mov
imul
clc
push
sbb
adc
push
dec
xlat
cltd
or
and
addb
test
mov
jb
imul
push
insl
int3
xlat
outsl
pop
and
in
out
xor
je
mov
mov
and
fistpll
add
lret
pop
test
into
push
pushf
rol
adc
mov
bound
xchg
or
push
fs
cmp
outsl
sub
incl
mov
hlt
mov
or
xchg
outsl
dec
lret
inc
js
add
ljmp
and
and
push
and
or
xor
imul
jle
sub
repnz
push
inc
add
pop
popa
lahf
sbb
stos
dec
insl
push
cmpl
and
jl
out
inc
adc
push
incb
sbb
and
gs
jmp
and
cmp
xchg
and
orl
pushf
leave
mov
xchg
fstl
lret
stos
out
mov
push
fldl
add
lods
cmpsl
nop
jge
mov
and
jb
jle
push
fmulp
pop
jl
mov
movsb
xor
sub
icebp
add
or
mov
bound
push
repz
mov
cmp
sarb
imulb
test
test
push
lds
push
cmp
xor
xlat
adc
notb
adc
add
stc
leave
cwtl
loopne
ljmp
cmp
gs
mov
cmpsb
inc
in
cmp
sbb
jecxz
jmp
add
mov
or
das
mov
int
data16
lahf
xchg
jno
push
mov
xchg
pop
ficomps
cmp
sbbb
fcomps
mov
xchg
xlat
std
and
mov
mov
aam
xchg
js
lret
outsb
inc
adc
xlat
xor
fstpl
outsl
xor
lds
fdivrp
lods
icebp
ficompl
cmpsl
adc
push
push
call
sub
jecxz
add
popf
pop
jnp
and
popf
insb
outsl
jecxz
hlt
jnp
sbb
and
int3
insl
fwait
das
add
cmpl
pop
fsubs
scas
repz
stos
aaa
xor
cmp
mov
add
add
ss
sbbb
mov
push
sub
imul
jg
je
inc
cmpsl
cs
inc
inc
imul
jg
mov
fists
jecxz
cmpsl
in
arpl
mov
cmp
adc
inc
dec
lret
lods
jecxz
fisubrl
sbb
inc
and
cmc
jb
sub
js
jns
rolb
insb
sbb
or
mov
xchg
push
dec
test
out
outsl
jae
fcmovb
dec
push
popa
stos
jb
fidivrl
cmp
inc
repz
pop
adc
mov
sbb
dec
jno
sbbb
inc
in
lret
cltd
ljmp
inc
movsb
push
jae
jge
imul
push
les
jae
xlat
pop
push
cli
arpl
shll
fldt
mov
pop
fldt
inc
xlat
mov
xchg
and
in
cmp
icebp
punpckldq
pop
mov
push
push
dec
jl
dec
push
mov
jge
ds
and
jns
gs
dec
dec
fstps
or
lods
add
int
adc
xchg
cld
fistpl
xor
and
std
loope
inc
and
add
xor
stos
jo
repnz
bswap
jne
into
lds
mov
je
cltd
jp
icebp
push
clc
arpl
mov
xchg
inc
xor
insl
jmp
xchg
stos
or
call
jb
insb
nop
sub
add
and
in
dec
sbb
cs
mov
iret
mov
jae
or
in
pushf
je
cmc
aas
sbb
insl
cmp
cli
testb
daa
mov
inc
inc
mov
in
xchg
test
push
sahf
xchg
inc
mov
data16
daa
jmp
movsl
ja
scas
mov
test
xor
mov
fnsave
inc
out
rcr
aaa
push
stos
dec
push
icebp
xor
lea
lret
fists
inc
lahf
inc
xor
xchg
out
mov
mov
testl
dec
out
test
int3
out
mov
pop
push
xor
fs
fisubs
std
mov
aas
rcrb
mov
jae
int
and
std
andl
mov
cs
or
lods
and
mov
jns
push
rcl
cmp
xchg
jl
push
jmp
cmc
push
adc
sub
gs
jae
cmp
rcrl
aaa
sbb
jno
push
cmpsl
aas
dec
in
adc
call
nop
xor
inc
mov
in
and
int
js
das
xchg
mov
imul
mov
int
lahf
repnz
push
ds
pop
sub
repz
mov
adc
cli
mov
jl
pinsrw
stos
es
fsubl
dec
mov
xchg
int
pop
inc
stos
xchg
and
adc
aas
mov
lds
mov
jge
pop
pop
cmpsl
pop
pop
xor
outsb
adc
inc
and
xchg
cmp
or
push
dec
mov
std
jne
xorb
hlt
enter
push
ret
rcl
sub
stc
add
sar
mov
jo
mov
mov
pop
cmc
imul
jle
in
jne
xchg
and
fcoms
lods
lret
cmpsl
aam
lock
mov
mov
dec
inc
and
push
push
sti
lahf
aam
cmp
or
lret
cs
xorl
mov
and
cmp
testb
cmpsl
aas
aaa
pop
mov
sbb
add
enter
ror
vmread
gs
xor
inc
mov
jl
pop
jle
xchg
jbe
and
push
nop
int3
xlat
les
and
dec
push
les
jle
ss
xor
xor
lcall
pop
dec
push
out
cltd
lret
ljmp
int
test
arpl
lret
loop
std
or
cmp
jge
leave
loop
nop
xor
scas
add
xor
rcl
sti
pusha
mov
test
dec
inc
push
and
aaa
sti
mov
inc
sarl
scas
xchg
cmpsl
sbb
xor
add
icebp
sbb
and
jecxz
imulb
movsl
dec
ss
aaa
test
jp
repz
insl
push
hlt
pop
decb
xor
jge
pop
xor
lods
xor
or
out
ficoms
pusha
ret
neg
dec
loopne
jo
mov
out
sub
ds
pop
pop
clc
ja
movsl
mov
add
jecxz
inc
sbb
push
loop
sbb
test
sti
pop
ljmp
loope
cmp
jl
aaa
adc
aad
outsb
aad
or
push
lahf
icebp
cmpsl
mov
mov
cli
inc
scas
je
or
ret
cmp
and
add
cmp
sub
mov
scas
stos
cli
insb
movsb
sbb
cld
movsl
add
fildll
push
adc
adc
adcb
mov
cs
inc
insb
jp
addr16
push
jb
add
cltd
bswap
or
daa
xchg
sbb
adc
and
xor
cs
addl
std
sbb
and
pop
push
adc
imul
mov
cmc
pop
jmp
lahf
in
mov
and
jg
movl
push
shrb
dec
gs
inc
lcall
cmc
cmp
xor
push
mov
aad
add
add
hlt
dec
push
sets
jge
iret
pop
mov
sub
pop
mov
add
mov
push
sbb
xor
mov
aam
inc
pop
fisubs
inc
mov
add
addr16
pop
fildl
lds
xchg
jg
adcb
mov
fs
mov
mov
mov
inc
enter
mov
rcrl
inc
add
or
out
int3
or
push
push
mov
push
pop
dec
sbb
fnsave
loope
cmp
ds
imul
daa
mov
push
ret
adc
pop
rcrb
adc
cmp
testb
pop
fcomps
cld
cmp
mov
cmp
imul
sub
adcl
adc
adc
insl
push
sbb
cli
inc
cmp
les
xchg
adc
lds
adc
jne
jb
mov
xchg
mov
rcll
imul
pop
gs
jae
sub
popa
mov
inc
push
ret
in
pop
std
popf
shrl
xchg
pop
sub
mov
and
ret
add
mov
stc
sbb
sbb
xchg
es
xor
ja
dec
pop
test
in
pop
scas
add
mov
lahf
dec
repz
adc
mov
out
sbb
lret
cmpl
sub
mov
sub
jne
push
ljmp
jb
insl
adc
ss
int3
shll
mov
bound
shl
mov
mov
and
or
adc
cmpsl
sbb
in
pop
cmp
inc
lahf
popa
jge
js
xchg
hlt
lret
jmp
sbb
jae
aaa
test
int
cmp
lock
push
push
repz
ret
loope
loopne
xor
mov
cli
lret
rcr
sarb
aad
xchg
cmp
out
adc
mov
mov
add
or
mov
mov
shrb
inc
sbb
jae
xor
fwait
dec
imul
add
mull
mov
loopne
ss
mov
sub
dec
leave
movsl
rcrb
sahf
sahf
adc
and
call
pop
das
xchg
imul
jecxz
push
or
mov
cld
lcall
enter
les
or
out
sbb
clc
leave
iret
mov
xlat
imull
ret
dec
jmp
int
mov
mov
imul
push
jle
lret
aas
dec
rolb
lods
adc
adc
cmpsb
pop
jno
cltd
aaa
aad
pop
adc
lahf
push
push
mov
xchg
aas
or
cmp
add
pop
push
xchg
cmp
popf
mov
les
leave
mov
mov
dec
int
mov
fs
iret
enter
stos
adc
xchg
negl
xchg
and
scas
mov
out
lahf
mov
into
inc
fimull
mov
fucomi
repnz
ret
pop
push
cmpb
push
xchg
mov
js
cmpsb
lock
xlat
out
loop
xchg
sarl
push
jo
aam
xor
push
fcoms
out
ficoml
sbb
addr16
mov
fyl2x
scas
in
jp
adc
aas
ss
rclb
mov
loopne
cmp
push
sub
leave
fnstsw
cmpsl
nop
mov
push
jmp
dec
out
adc
jg
pusha
aas
sbb
fmull
dec
mov
fdivrs
sub
push
outsb
lret
xor
mov
loope
popf
decl
jbe
outsl
pop
dec
mov
sub
sub
jbe
mov
jb
pop
xor
aaa
dec
sub
pop
inc
sbb
add
mov
punpckhbw
outsl
insb
pop
add
sbb
or
inc
mov
mov
int3
mov
cli
repz
ret
ljmp
xor
mov
adc
repnz
xor
daa
lahf
xchg
test
and
mov
fists
movsb
fdivs
es
xor
test
xchg
inc
stc
adc
mov
cld
repnz
aas
fiaddl
pop
test
shr
aas
push
insb
mov
jle
mov
push
xchg
add
xor
mov
cmp
pop
push
dec
jp
shlb
cmc
shlb
lret
mov
add
ja
pop
adc
in
pop
in
cwtl
mov
push
mov
mov
xchg
mov
mov
jb
dec
sub
popa
pop
mov
fs
cltd
jecxz
mov
stc
std
pop
repnz
mov
bound
or
mov
std
test
iret
xchg
xchg
xchg
das
in
pop
test
aas
pop
cmp
ljmp
sub
xchg
in
pop
lcall
mov
mov
cmpsb
scas
rcll
sub
ficomps
add
rcrl
popa
adc
lods
es
pusha
inc
adc
cmp
mov
int3
or
scas
xchg
repnz
push
push
hlt
iret
leave
fiadds
mov
sti
push
pusha
arpl
mov
lahf
push
in
mov
dec
mov
xor
mov
sbb
push
outsl
pop
popa
cmc
ret
std
mov
sub
test
lcall
xor
xchg
iret
sbb
pusha
in
mov
clc
jnp
cmp
cltd
sub
inc
xchg
sbb
xchg
je
fs
out
xor
arpl
addl
adc
pop
dec
or
mov
sbbb
adc
add
sub
add
jmp
idiv
hlt
dec
mov
mov
iret
mov
dec
nop
mov
and
xor
daa
call
repnz
rorl
sbb
sbb
pushf
pop
fidivrl
iret
lahf
jmp
adc
inc
sub
push
and
xchg
mov
mov
stos
sarl
sahf
rorl
lahf
call
mov
mov
adcl
lret
mov
in
addb
jg
shr
lcall
fsts
pop
dec
mov
movsb
xor
cmp
mov
push
jae
rclb
fs
mov
xchg
ret
gs
mov
and
jns
cmpb
sub
lahf
mov
adc
insb
cmp
inc
loope
gs
jbe
rolb
jmp
das
es
cmp
add
dec
pop
aam
push
cld
cmp
sub
push
rorl
addb
xchg
or
mov
xchg
sub
add
lods
inc
dec
jne
dec
enter
popl
imul
les
cmp
jge
cltd
out
push
sub
out
mov
cld
xorb
add
and
jnp
iret
and
add
dec
inc
out
inc
in
rcll
out
in
popf
xchg
ret
jle
sahf
cwtl
add
adc
xchg
jno
out
cld
stos
jne
jns
gs
test
fisubs
xchg
adc
jmp
add
jmp
dec
jne
call
push
aad
scas
add
pop
add
stc
dec
inc
mov
sti
xor
leave
sbb
mov
fwait
inc
bound
sbbl
gs
dec
dec
out
pop
pop
movsl
lsl
jno
gs
mov
or
lahf
cmp
mov
movl
daa
mov
leave
sub
addr16
dec
lea
and
mov
dec
sbb
push
xor
popa
test
inc
int3
ror
test
mov
dec
cs
jmp
cli
aam
inc
addl
mov
je
mov
pop
cld
pushf
icebp
xor
xor
sbb
mov
int3
out
clc
call
dec
dec
idivl
lods
out
mov
sarb
fwait
jl
outsb
pop
pop
inc
lock
cmp
adc
bound
ss
jo
inc
push
pop
movsb
xchg
inc
mov
pop
stc
mov
pop
ljmp
sahf
mov
cltd
dec
lds
cmp
shl
cmpsl
jg
sbb
cmp
sbb
push
cmp
mov
cli
mov
das
jg
xchg
lret
fnstsw
lods
stos
push
jb
test
sarl
add
mov
jge
sub
xchg
mov
or
push
inc
fs
add
into
mov
mov
popf
outsb
mov
lods
push
pop
fbld
push
loop
test
and
mov
xchg
cmpb
test
jge
sub
mov
sbbb
push
xchg
pop
rep
data16
mov
lahf
xlat
test
push
mov
fcomps
push
push
or
xchg
call
inc
and
inc
call
jge
sti
adc
mov
jl
jno
add
loopne
test
imul
into
xor
imul
dec
lahf
pop
xchg
inc
cmc
dec
cmp
adc
sbb
insb
aad
sub
mov
or
loope
fsubrl
or
push
bound
lods
cs
cli
push
shl
inc
mov
adc
cld
xor
adc
movsl
mov
sti
push
add
stos
mov
shll
cmpsb
call
push
sahf
test
jecxz
rclb
xchg
enter
out
leave
mov
test
inc
out
gs
xor
push
incb
xlat
sub
mov
inc
jno
dec
mov
jg
mov
arpl
or
pop
subb
rcll
push
cmp
int3
mov
in
pop
pusha
or
adc
dec
addr16
out
sbb
and
mov
mov
fdivrl
mov
pop
add
mov
aaa
sbb
push
dec
pop
pop
fcmovu
test
int
jae
daa
outsl
out
xor
mov
mov
dec
inc
icebp
cmpsb
or
xchg
test
push
mov
lret
fdivrl
lea
movsl
xorb
icebp
cmc
cwtl
daa
xor
out
ljmp
fstpl
loop
dec
ss
push
pop
pop
lods
mov
or
xor
push
cmp
stos
out
adc
dec
bswap
jecxz
add
inc
mov
ljmp
lock
adc
mov
cltd
add
jmp
and
addr16
sub
loope
push
sbb
sub
add
inc
dec
dec
push
mull
mov
push
popa
jmp
jmp
enter
fwait
xchg
pop
movsl
stos
mov
push
jno
inc
lret
mov
cmp
ret
enter
jb
push
inc
in
repnz
mov
push
arpl
pop
add
rorb
lods
push
jge
movsl
loopne
imul
jp
cmp
pusha
ljmp
bound
scas
arpl
clc
leave
adc
out
and
test
mov
jae
cltd
add
add
push
mov
push
cmpsb
addr16
bound
shlb
leave
sbb
push
test
sbb
xchg
rep
bound
push
pop
mov
nop
inc
dec
je
rcll
std
and
shlb
mov
scas
sub
sti
push
pusha
xchg
add
push
hlt
xchg
das
fnstenv
mov
and
push
andb
xorb
aaa
rcl
fldt
add
and
xchg
ss
imul
xchg
pop
adc
mov
pop
jb
mov
popf
in
or
sbb
pop
mov
push
jno
inc
and
lock
xchg
pop
or
mov
cmp
jns
cmp
hlt
or
ficoml
mov
scas
lea
mov
mov
jae
int
repnz
cmp
jae
jae
sbb
jmp
push
ss
cmp
movsl
vrcpps
or
rclb
dec
hlt
aam
icebp
pop
sbb
ds
rol
into
push
cmp
pop
pop
iret
ret
lcall
stos
lcall
or
add
xlat
je
sub
repnz
insl
mov
mov
int3
mov
or
push
rorb
pop
dec
pop
test
sbb
jge
inc
xchg
repnz
inc
mov
insb
fistps
into
divl
dec
mov
out
mov
ljmp
cmp
pop
cli
lret
push
out
aad
enter
outsb
xchg
icebp
int
jl
loopne
mov
cmp
and
into
pop
fdivp
xchg
out
lods
xchg
fildl
mov
add
and
js
adc
fmulp
xor
mov
inc
clc
shr
call
xlat
cltd
in
pop
cmp
shlb
jb
gs
xlat
mov
mov
mov
or
cs
int
aam
sbb
lahf
divb
bound
xor
testb
dec
out
xor
cmc
dec
jg
inc
or
pop
sbb
iret
in
pop
out
cli
pusha
imul
xor
outsl
dec
outsb
pop
cmc
fcoms
lock
mov
jbe
inc
xlat
jb
mov
insl
adc
or
gs
data16
cmpsl
mov
mov
bound
xchg
add
loopne
js
sahf
into
js
and
ret
sub
stc
into
mov
enter
inc
fldt
lods
push
fisubrl
test
and
stc
std
scas
shrl
mov
and
in
repz
pop
mov
sti
mov
jo
add
aas
aad
test
sub
xchg
cs
call
into
lret
xlat
scas
out
out
dec
enter
idivl
aam
insl
mov
je
lock
push
stos
cltd
in
popf
in
call
pushf
sbb
adc
push
or
pop
out
std
lret
aas
push
aam
adc
sub
and
xlat
leave
fs
cwtl
nop
cmpsb
cli
xchg
xchg
lea
xor
aam
aas
ljmp
add
in
sbb
sti
xchg
imul
jle
and
adc
pop
popa
jg
lret
dec
faddl
aas
fistps
pop
add
fnstsw
mov
cwtl
dec
loope
fldt
inc
pop
mov
out
xchg
inc
xor
stos
rolb
and
lahf
lret
maxps
jne
pop
mov
rcr
lods
xor
push
add
fisubl
out
xlat
mov
sub
and
cmc
and
sti
sbb
mov
mov
hlt
lret
scas
jge
ret
xchg
leave
ja
adc
fcomps
add
mov
mov
clc
loope
xchg
push
rorb
mov
sti
fcoms
pop
ds
imul
imul
push
cltd
bound
mov
movsb
outsb
add
dec
jnp
aad
fs
std
sbb
paddw
int3
pushf
test
or
lods
mov
push
mov
push
js
jmp
mov
loope
arpl
stc
mov
dec
add
xor
ja
cwtl
push
xor
sub
dec
xor
popa
scas
std
inc
cltd
fwait
shl
movsb
pusha
dec
dec
gs
xlat
into
aaa
push
or
leave
sub
jge
mov
es
pop
scas
cmpsb
add
cmp
pop
jecxz
inc
push
int3
add
fdivs
test
and
loopne
ret
xchg
frndint
stc
in
enter
xchg
mov
loopne
jo
hlt
dec
hlt
pop
dec
pop
push
call
out
push
and
aas
sbb
pusha
loope
stos
loope
xchg
cmp
jge
mov
out
mov
inc
pop
iret
cwtl
dec
mov
dec
mov
jbe
jp
push
pop
mov
in
mov
arpl
jg
sub
into
pop
add
ret
or
push
adc
xchg
hlt
cmp
pop
inc
sti
mov
cwtl
ljmp
lods
stos
ss
sbb
or
mov
idivb
not
cmp
cwtl
iret
or
or
sbb
pop
cmp
xchg
imul
loopne
cmp
sub
shlb
addr16
clc
mov
pop
dec
in
pushf
push
add
add
repz
mov
cmp
push
pop
ret
shrb
rcrl
test
push
inc
sbb
or
pop
nop
sub
cmpsb
out
sbb
mov
sub
push
in
push
test
ljmp
xchg
shrl
cld
xchg
sub
jo
mov
in
xor
testb
js
test
ret
test
push
jmp
sub
das
push
ret
jnp
dec
mov
js
cmp
pop
adc
lock
out
inc
jbe
ficomps
es
jmp
mov
jge
jne
sub
fidivl
and
xchg
jl
pop
pop
loope
out
push
pop
lcall
push
leave
mov
daa
out
in
hlt
dec
movsb
jecxz
push
dec
mov
pop
sbb
aas
rcrb
cld
jb
jge
popa
dec
popf
pop
inc
std
sub
cmp
xchg
and
or
movsb
xor
sar
xchg
dec
pop
jmp
cmp
adc
sub
imul
pop
arpl
push
mov
and
repz
pop
leave
mov
lahf
jae
daa
xchg
stc
idivl
lahf
cmp
sti
sub
pop
pop
pop
mov
ret
and
insb
fwait
xchg
mov
scas
movsb
adc
imul
mov
push
stc
loope
sbb
lret
mov
xchg
stc
adc
pop
jmp
aaa
data16
aam
pop
pop
insl
mov
stos
xchg
dec
jno
and
fs
in
hlt
movsl
push
mov
stos
cli
push
nop
mov
pop
jns
cmpsl
mov
nop
cmp
sbb
jmp
leave
hlt
lret
push
in
clc
mov
xor
sahf
ret
cld
mov
scas
jne
mov
lock
xchg
cmp
movsl
jno
inc
jle
ja
jecxz
shr
xchg
xchg
xor
mov
push
xchg
xor
lods
mov
insb
daa
in
int3
mov
mov
mov
dec
push
push
xchg
in
ds
pop
rolb
fs
repnz
faddl
and
inc
lret
in
or
pop
sbbb
arpl
jl
push
aaa
pop
and
in
test
addr16
fbstp
sub
dec
mov
cli
inc
ds
idivb
sub
inc
push
adc
or
mov
dec
xor
inc
icebp
sbb
push
loope
adc
xchg
insb
dec
and
leave
sti
stos
aam
outsl
test
and
xchg
test
lods
xor
ret
ror
xor
adc
daa
sub
nop
pop
and
mulb
or
inc
ds
sbb
imul
xorl
sbb
add
jne
mov
outsl
push
sbb
pop
int
popf
sbb
fists
mov
fidivrl
sbb
repnz
call
or
cmp
aam
test
mov
es
arpl
jnp
mov
inc
stos
mov
lods
das
lcall
iret
lahf
fildll
cmp
mov
xchg
or
inc
and
mov
jbe
les
inc
push
jo
xchg
jae
sarl
sub
sub
xlat
mov
inc
enter
hlt
or
nop
lock
adc
inc
pop
inc
div
pop
mov
mov
aas
cltd
pop
mov
jns
sub
int3
cs
or
add
mov
push
push
pop
lea
cmc
ffreep
fdivrl
shlb
fimull
dec
mov
sbb
sub
push
scas
mov
adc
lret
aaa
cwtl
jp
in
jo
aam
daa
pop
loope
sub
mov
xor
aad
and
push
fcoms
fs
out
sub
add
ret
add
lods
xchg
fcomip
xor
ret
sub
mov
jo
dec
push
and
jp
mov
pushf
mov
mov
xchg
outsb
and
insl
and
adc
xor
cmp
aas
adc
sub
mov
mov
shll
cld
orb
mov
repz
call
mov
imul
cld
and
lahf
cmc
imul
add
das
pop
ficoms
push
lret
js
ficoml
xor
into
outsb
xor
and
imul
sbb
push
cli
andl
sti
or
sar
mov
mov
xor
xchg
jno
xchg
mov
mov
sti
int3
and
cmp
jns
or
mov
into
cmp
sbb
popf
add
cmp
popa
fsubl
lcall
mov
jmp
popa
outsl
fdivs
and
rorb
out
fldcw
jnp
cmp
mov
cmpsb
xor
int
les
ret
lahf
xchg
and
imulb
inc
std
pop
xorb
in
xchg
push
iret
push
loopne
lcall
stc
lods
loope
adc
sub
push
mov
mov
dec
pop
push
lcall
pop
gs
add
jmp
lods
sahf
lahf
xor
xchg
pop
jnp
test
popa
jp
mov
mov
addr16
test
xor
cmpsl
pop
rcrb
daa
aad
adc
inc
js
lea
in
push
out
mov
jge
loop
test
xchg
and
inc
ret
lock
repnz
sbb
loope
jno
rcrb
dec
sar
loopne
xchg
lods
or
xchg
mov
mov
xchg
popa
fiadds
cmp
add
push
sub
in
inc
arpl
cmp
add
inc
imul
lock
inc
jl
mov
das
test
cltd
cwtl
popa
sub
sub
xorl
mov
cmp
hlt
mov
icebp
jp
xor
add
inc
mov
ficomps
xlat
mov
das
xor
cmp
sbb
sub
int3
fisubs
iret
sub
mov
inc
stc
stos
inc
iret
push
sbb
xor
xor
rolb
push
pop
fwait
pop
push
add
mov
rcll
popa
pop
mov
mov
xchg
mov
stos
xchg
and
insl
mov
xor
cmpsl
or
mov
sbb
fldt
pusha
mov
mov
mov
test
inc
scas
jns
shlb
cwtl
ss
xchg
outsl
xor
inc
dec
push
js
mov
scas
pop
imul
sbbl
jbe
sub
jnp
sbb
ja
fxch
xor
push
aad
adc
js
add
dec
inc
xchg
xchg
mov
into
lods
jmp
fs
sbbb
xor
out
xchg
arpl
lcall
mov
push
mov
leave
cli
arpl
mov
push
pop
adc
scas
mov
outsl
decb
popa
lods
mov
hlt
clc
lea
stos
aas
sbb
fwait
pop
lds
and
fimull
xchg
mov
pop
sti
test
xchg
pop
fs
loop
shrl
test
lock
outsb
pop
cli
in
in
loop
jnp
aam
push
push
inc
xchg
mov
sub
or
fmulp
jnp
nop
dec
push
jo
adc
fisubrl
xchg
ljmp
in
sahf
cmp
arpl
xchg
shr
ret
in
les
shlb
mov
xor
or
gs
sub
pop
and
movsl
xor
push
dec
adc
in
ja
fcoms
jns
lret
cmp
leave
mov
stos
mov
and
ljmp
cmp
mov
and
loope
sbb
inc
and
mov
push
out
xor
push
repz
mov
sub
push
stos
push
or
jmp
xchg
xlat
jg
jo
mov
dec
xchg
push
leave
push
or
jle
inc
push
xchg
into
fstpt
mov
jbe
shll
clc
aas
and
sbb
stc
sti
mov
cwtl
push
xchg
cld
clc
xchg
aad
ljmp
mov
setl
or
lea
std
sbb
clc
mov
sub
inc
fwait
repnz
and
test
cli
in
cmc
aad
mov
call
sti
psubw
mov
rolb
adc
xchg
adc
push
push
test
out
adc
xlat
xchg
fmull
loope
fs
mov
test
dec
push
ja
lret
cmpsl
xchg
fimuls
and
mov
xlat
cmc
out
push
test
xor
cmpsl
movsb
outsl
sbb
cmc
sub
mov
pushf
iret
fstps
das
dec
std
inc
dec
nop
push
pop
xchg
sahf
or
cmp
insb
inc
and
sub
pop
mov
sub
leave
push
mov
mov
adc
push
andb
jl
cmp
mov
push
aaa
push
xchg
push
imul
inc
or
int
arpl
cmp
mov
rcrl
sbb
icebp
inc
mov
mov
test
loope
jle
cmpsl
sbb
jl
movsb
add
or
sbb
inc
hlt
pop
mov
jb
jle
pop
shr
xor
ret
rcrl
repz
adc
in
sbb
das
mov
pop
dec
cmpsl
push
loop
dec
int3
mov
call
mov
dec
jo
inc
stc
push
push
es
cmp
cmp
pop
inc
aam
jns
mov
es
xchg
sbb
jecxz
push
push
addb
pop
add
clc
and
push
nop
flds
sub
jns
loopne
mov
fwait
loop
lret
push
mov
xor
jp
fsubp
mov
aam
and
lret
lods
sarl
mov
xlat
out
fists
mov
cs
outsl
idivb
xor
popa
mov
pop
mov
xchg
xchg
xchg
sub
sbb
cmp
pop
fnstenv
jecxz
adc
bound
out
adc
inc
in
sbb
leave
repnz
inc
push
mov
ds
pop
push
push
push
xchg
pop
xchg
scas
sbb
push
cmp
int3
sbb
xchg
pop
mov
push
out
lret
sbb
mov
stc
insb
jge
pop
shl
loope
gs
pushf
xor
cltd
cmpsl
aam
aam
lods
ret
pop
dec
popf
pop
xchg
cld
addr16
xchg
popa
lock
mov
xchg
mov
mov
mov
pop
cmc
lea
scas
sub
pop
test
jl
inc
inc
push
mov
adc
add
cli
lahf
fnsave
cmp
out
nop
add
daa
mov
out
test
scas
mov
jp
fdivrl
sbb
repz
xchg
fistl
in
test
js
dec
inc
pop
adc
or
cmc
jecxz
aam
nop
mov
inc
fcomps
js,pn
push
mov
push
cmp
and
add
lods
pop
movsl
push
pop
adc
outsl
xchg
cmpsb
mov
test
push
ret
sarl
lds
and
jne
hlt
push
mov
std
adc
xor
rcll
int3
ret
fidivrs
fwait
inc
sbb
pop
sub
push
and
fiadds
in
fstpt
cmp
test
incl
jae
fcmovu
xchg
fidivs
push
xor
add
adc
xlat
pop
sbb
sub
xchg
inc
mov
adc
ret
in
aas
mov
dec
rorb
fwait
push
int3
pop
and
pop
bound
repz
jno
mov
test
sti
add
and
outsl
jl
aad
cli
sub
xchg
mov
mov
int
add
in
orb
mov
mov
mov
jns
push
aam
jmp
mov
enter
cs
mov
pop
xchg
mov
je
sub
adc
sub
scas
repz
ljmp
fistps
pop
ss
xchg
ret
cmpsl
adc
add
popf
or
into
sub
jae
mov
test
mov
mov
aas
jo
lock
aas
inc
push
out
stos
loope
inc
test
imul
dec
imul
mov
xlat
imul
loopne
push
dec
fidivrl
push
out
pop
loop
iret
out
out
inc
scas
andb
xorl
leave
mov
add
xchg
jbe
xchg
dec
lret
jno
leave
out
add
call
xorl
xchg
pop
cmpsl
cltd
jns
popl
repnz
shll
shlb
pop
idivb
adc
imul
add
rorl
test
and
mov
jmp
outsb
mov
jmp
ja
ret
enter
mov
pop
xor
adc
lods
test
ss
or
xlat
xchg
icebp
leave
cli
pusha
test
cwtl
push
cmp
ds
imulb
lods
test
fisubl
repnz
fsts
jbe
cmp
push
lods
mov
into
cltd
int
aaa
scas
or
mov
icebp
xor
xchg
or
lahf
dec
loop
int3
in
jge
pop
mov
push
sarb
cmpb
cmpsl
sbb
jb
push
mov
inc
imul
into
jg
cmpsb
sbb
ljmp
pop
mov
movsl
pop
adc
sbb
ss
lcall
mov
mov
ds
add
int3
sub
shll
lods
ret
out
sub
inc
jmp
jno
push
adc
push
cli
imul
jnp
mov
pop
dec
nop
inc
dec
or
xchg
inc
inc
sub
lcall
cwtl
xchg
mov
xlat
push
arpl
enter
scas
adc
or
sbb
push
mov
aam
pop
cli
and
loopne
loope
push
cmp
je
mov
sub
xchg
jbe
pop
xlat
movsl
mov
push
ljmp
pop
fnstsw
daa
dec
adc
push
pushf
mov
xchg
mov
mov
mov
mov
or
pop
pop
cmc
sub
sub
clc
add
test
push
mov
jbe
jns
xchg
and
mov
ds
and
sbb
arpl
in
lds
cmpb
loopne
jmp
jge
sbb
cmp
loope
pop
mov
push
pop
arpl
shrl
mov
mov
js
xor
cmc
xchg
mov
or
push
cmp
pop
jnp
aaa
mov
sub
mov
or
push
pop
push
xchg
fisttps
aam
and
outsl
jno
popa
push
es
xchg
sub
lahf
jo
hlt
sbb
sti
lods
out
jae
mov
push
pop
inc
pop
ss
mov
pop
fiaddl
out
xchg
mov
in
pop
sahf
out
sub
cmc
int3
bound
movb
push
or
into
inc
movb
std
adc
sub
dec
dec
push
push
addr16
jno
xor
add
mov
mov
mov
cmp
xchg
popa
jno
or
pop
add
sahf
ret
pop
dec
jge
leave
inc
imul
mov
sahf
mov
notl
lret
mov
add
cmp
mov
add
xchg
xlat
arpl
mov
or
sub
rcll
cmp
jns
cs
jne
bound
fildll
bound
popf
mov
jne
and
rorl
jae
pop
test
testb
mov
mov
roll
mov
lds
xchg
push
data16
addr16
out
repnz
enter
cwtl
jne
pop
cmp
jbe
add
xor
push
adc
pop
mov
push
jno
sub
test
mov
mov
sub
mov
mov
mov
or
mov
mov
jecxz
mul
mov
cli
sbb
push
shll
mov
fisubrs
mov
dec
add
push
and
fdecstp
movsb
mov
aam
jne
cmp
push
mov
fcoml
xchg
dec
jbe
jmp
int3
push
adc
out
cmp
mov
mov
jp
popl
cld
cmp
mov
icebp
js
add
cmp
aam
and
push
jns
or
add
stos
arpl
push
pop
pop
jl
sbb
cmc
add
sub
push
mov
push
int3
and
fadds
push
inc
aaa
xchg
or
scas
xchg
mov
adc
or
fistpll
jl
adc
cmpxchg
inc
mov
js
mov
aas
in
inc
aad
ficompl
pop
jo
std
xor
or
and
jp
imul
addr16
movsl
imul
xchg
or
push
movswl
shlb
movsl
in
mov
insb
and
out
aas
mov
adc
fdivs
jp
enter
mov
mov
cmp
repnz
xor
adc
add
or
xor
or
pop
fucomi
jmp
mov
pop
sbb
mov
mov
push
sbb
add
sbb
ret
mov
pop
insb
dec
dec
xor
push
cmp
imul
arpl
mov
inc
cwtl
xchg
js
iret
and
sar
xchg
mov
add
shrb
pop
lds
pop
rclb
or
mov
int
lret
xchg
inc
and
mov
dec
dec
sbb
push
and
daa
icebp
mov
imul
std
ljmp
pop
pop
sbbb
push
sub
inc
dec
cld
lret
push
popf
das
mov
loope
mov
xchg
sub
insl
aaa
ja
add
cld
mov
fwait
xlat
std
or
dec
mov
fimull
fmull
fwait
sbb
pop
insl
lcall
lahf
stc
cmp
test
bound
clc
clc
shlb
mov
mov
fcoms
pushf
popa
hlt
rorb
mov
ret
xor
divb
jle
dec
scas
and
rcrb
cmp
imul
mov
xchg
andb
xlat
pop
push
jp
lock
sbb
fld
sub
mov
mov
xchg
repnz
dec
dec
cmp
xchg
aad
fisttps
aaa
stos
pop
rcll
push
ds
ds
or
jmp
or
mov
add
sub
pop
pusha
iret
mov
outsl
and
test
insl
lcall
xor
into
push
roll
iret
pop
rclb
xchg
xchg
and
cmp
test
mov
cmp
pushf
push
push
lea
in
xlat
aaa
mov
and
addr16
jmp
xchg
xchg
xchg
xor
decl
sbb
inc
arpl
fs
sub
sub
dec
les
repnz
pop
mov
add
xchg
stos
subb
aam
stc
es
fmull
in
dec
jmp
sti
mov
outsl
or
cmpsl
mov
mov
mov
pop
dec
mov
imul
outsl
insl
pop
add
imul
lea
or
add
sbb
mov
jns
sbb
lret
mov
mov
cltd
out
mov
es
scas
inc
orb
das
aas
pusha
stos
pop
out
daa
rclb
pop
mov
jge
mov
jb
loope
xor
insb
int3
aaa
scas
or
mov
dec
and
and
or
add
dec
push
fmuls
out
das
addr16
fcoml
js
sbb
sub
cmp
pop
popa
jge
pop
cmp
sub
inc
inc
xor
imul
cli
test
mov
pop
outsb
scas
je
sbb
subl
shrl
ret
ljmp
out
fcoml
sub
scas
imul
call
lods
insb
mov
push
or
lds
in
inc
ret
ljmp
es
ret
pusha
fisubrl
mov
jbe
mov
ds
in
out
cmp
cli
dec
jecxz
and
pusha
xor
cli
clc
es
loope
ljmp
fcoms
in
clc
jecxz
and
xlat
out
ret
pop
ja
jle
ljmp
lret
arpl
and
nop
stc
cmp
push
push
rcrb
rolb
xlat
jno
imul
or
into
mov
es
lahf
rclb
inc
nop
jnp
inc
imul
push
jbe
mov
shlb
xor
ja
in
mov
into
mov
xchg
daa
popf
jg
addl
test
mov
gs
mov
stos
xchg
and
shlb
cmp
inc
test
or
loopne
icebp
aam
jecxz
in
add
loop
adc
fstpl
mov
sub
dec
shll
push
ljmp
loope
and
jle
push
push
mov
sub
sub
mov
push
lcall
push
jae
out
and
es
sbb
call
cmp
cmp
std
xor
movsb
and
repz
xor
jge
pop
sub
fwait
daa
push
fisttpll
cwtl
lret
out
sbb
push
into
call
loope
cli
test
pop
es
bound
jo
cmc
dec
fs
negl
adc
stc
push
std
leave
imul
xor
mov
jb
or
insb
test
mov
in
fldl
adc
popa
cwtl
sbb
jl
mov
cli
xchg
int
scas
pushf
clc
inc
sbb
mov
mov
adc
dec
push
mov
roll
or
sub
stos
mov
sbb
jmp
cmpsb
and
loopne
sub
test
sub
xor
cmp
ds
or
test
stos
jb
xchg
mov
cmpl
daa
add
cmp
inc
fdivrl
fldcw
stos
cmpsl
and
lcall
mov
or
cwtl
rorb
js
and
push
cmp
test
test
dec
lahf
ja
lock
mov
pop
movsl
mov
sbb
push
scas
xchg
jp
jns
push
out
cwtl
jb
mov
mov
mov
loope
sahf
test
rcll
and
addr16
pushl
jp
inc
jno
repz
cltd
dec
daa
xchg
imulb
or
xchg
mov
stos
dec
popf
or
shlb
xchg
loopne
loopne
adc
add
daa
es
mov
das
push
mov
push
lds
aad
cmp
pusha
fs
aas
subl
stc
jl
mov
inc
test
and
jecxz
ret
fisubrs
mov
lods
lds
xchg
jl
xor
xchg
stc
xchg
rdpmc
dec
out
mov
mov
fstl
dec
cmpsl
mov
add
add
mov
mov
sub
jg
dec
mov
bnd
fsubp
mov
mov
add
xor
xchg
jbe
lods
xchg
out
fdivs
xor
shl
js
int
lea
scas
mov
add
cmp
iret
mov
arpl
aaa
push
sbb
mov
cmpsb
jnp
adc
cmp
add
lods
dec
nop
out
inc
shrb
cmp
not
inc
add
push
mov
pop
ljmp
pop
shrb
pushl
xchg
and
jge
aaa
pop
sub
add
lret
cmp
imul
outsb
jge
ljmp
jmp
lret
cmc
nop
shrb
xor
insb
lods
inc
xor
jns
mov
out
pop
stc
push
filds
or
js
ret
fcmovne
ret
push
hlt
clc
mov
addl
outsb
xchg
inc
adc
addr16
mov
push
lea
inc
aaa
pop
test
stos
ljmp
sbbl
cmp
xor
scas
ss
and
adc
push
andb
idiv
fcomps
scas
add
aad
pushf
jb
fnstsw
inc
icebp
pop
xchg
fldl
cmp
mov
cmc
leave
cli
orb
dec
daa
call
and
cmpsb
dec
mov
mov
lcall
repz
in
jmp
imul
add
cmpb
rcrb
cmp
mov
mov
call
cmpsb
push
sub
jb
lods
pop
test
jmp
or
lret
popf
jno
pop
sub
pop
bound
loopne
fcomi
cmc
add
mov
lods
dec
ret
pop
add
iret
cltd
jmp
inc
stos
das
loope
mov
leave
or
or
cwtl
sarb
and
fsubs
dec
clc
jp
ret
mov
dec
mov
shr
mov
push
mov
hlt
push
sub
sahf
jae
stos
rclb
mov
xchg
test
cli
rcrl
cmp
inc
xchg
jo
pop
cmc
and
iret
inc
mov
push
repnz
xchg
dec
cmp
xlat
and
ds
push
pop
cltd
sbb
int
add
push
sti
mov
sub
sti
and
mov
cwtl
jge
cld
push
or
adc
push
add
xor
test
sbb
sbb
pop
ret
fwait
andb
cs
inc
jb
jmp
cmp
aaa
push
inc
mov
je
ja
dec
lahf
xchg
ds
jle
fld
mov
jns
jp
rcr
mov
fsubrl
mov
or
sub
jle
sbb
cmp
cmp
aaa
jl
imul
pop
stos
push
std
lds
jl
fldenv
lahf
nop
in
sub
inc
mov
stc
lahf
jl
push
inc
pop
inc
or
xlat
push
mov
xchg
test
or
sbb
pop
push
dec
dec
jns
adc
and
inc
popa
add
mov
xor
push
sub
idivb
add
inc
sbb
in
data16
iret
dec
pop
ret
negb
and
or
js
dec
mov
aaa
xor
xor
mov
jg
lods
stos
mov
lods
push
clc
fdivl
add
movsb
shrb
pop
test
mov
aas
shll
les
fsubl
and
xor
jno
xor
out
fsubs
loope
fisubs
lock
push
push
clc
rclb
aas
addb
in
arpl
xchg
or
std
xor
mov
jg
mov
inc
jl
inc
xchg
loope
xchg
mov
jne
mov
push
sbb
sub
or
and
imull
mov
cmpsb
repnz
adc
pop
cwtl
rolb
mov
or
push
xor
cmpsb
jmp
or
inc
lret
xor
pushf
mov
xor
mov
xor
jp
filds
shrb
sbbl
and
into
dec
aas
xor
push
sahf
icebp
jnp
jo
leave
sbb
loop
stos
xor
scas
out
rclb
imul
jg
ror
mov
pop
leave
pop
dec
loopne
inc
cmpsb
sub
xchg
jle
cmp
fwait
hlt
mov
je
mov
sti
cmc
lcall
outsl
subb
cs
inc
insl
mov
cli
xchg
pop
iret
jecxz
pop
fstpl
dec
xor
cs
pop
mov
call
xor
flds
xor
sbb
pop
sbb
mov
data16
fcmovnb
int
hlt
mov
inc
sbb
mov
scas
aas
mov
push
xor
cmp
push
and
fnstsw
cwtl
pop
xchg
nop
pop
stc
cmp
mov
clc
add
scas
test
dec
push
push
push
cmp
cmpsl
ja
imul
idiv
roll
xor
jb
jmp
or
and
in
cmp
popf
inc
push
fdivrl
jmp
add
inc
inc
sub
test
push
mov
jnp
ds
lret
outsb
ja
jnp
pushf
add
or
push
int3
xchg
mov
mov
in
pushf
inc
sahf
rolb
ret
add
sbb
mov
pop
stos
in
out
iret
fisttpll
pop
push
sub
jo
cli
push
loop
pop
or
popf
test
push
in
nop
stos
sbbb
mov
add
pop
push
jg
xor
js
in
mov
push
loope
aas
mov
fldl
insb
push
pop
aaa
xlat
jo
sbb
adc
sbb
xchg
pop
jle
xor
int
test
sbb
mov
inc
cmpsb
out
push
sub
bound
xchg
call
inc
pop
inc
inc
pop
pop
push
stos
filds
inc
scas
insb
mov
cs
jbe
jecxz
aad
pop
insb
popa
popa
sbb
sbb
mov
scas
pop
lret
or
pop
incb
hlt
add
shrl
repz
mov
dec
pushf
mov
cmp
mov
add
add
sbb
mov
mov
cmp
pop
aad
divb
js
es
xorb
paddusb
into
fwait
decl
dec
test
out
movsb
inc
xor
test
jge
adc
test
mov
adc
or
addb
arpl
fwait
in
sbb
xchg
cmpl
mov
sbb
jnp
mov
loop
mov
mov
movsl
arpl
sub
int3
jg
mov
ljmp
mov
das
popa
pop
ss
in
stc
in
aas
gs
or
sub
shlb
lock
adc
adc
cmp
sub
fists
sbb
lcall
mov
fwait
js
repnz
adc
add
mov
inc
mov
testl
dec
filds
cmp
dec
out
adc
cwtl
ret
push
sar
outsl
adc
dec
test
mov
jmp
daa
cmp
xor
fsubs
sbb
sbb
add
data16
cld
data16
outsl
shll
mov
cs
lds
ret
sub
jmp
ret
in
sarb
jge
ret
movsb
push
call
push
leave
push
insl
sub
mov
jb
mov
popf
out
call
outsl
inc
push
movsb
aad
pusha
add
loop
std
pop
jl
jmp
pop
mov
test
mov
add
mov
test
cs
call
jae
popa
bound
dec
push
jp
inc
jo
out
arpl
cmp
and
insl
js
into
cmpsb
xor
sub
sahf
orl
movsl
dec
sub
jae
lahf
mov
adc
gs
pop
sub
add
popa
dec
es
mov
icebp
xlat
push
mov
addr16
jne
testl
movsb
inc
movsb
cmp
xchg
packssdw
int
and
xlat
mov
in
jns
xchg
int3
daa
pop
sub
mov
and
push
nop
into
scas
mov
sub
push
ret
mov
movsb
jnp
aad
lods
ja
pop
lcall
orl
gs
adc
fcmovnu
pop
mov
movsl
xor
jns
and
scas
add
mov
fwait
imul
out
cmc
inc
lds
adc
mov
xorb
lcall
aad
and
insl
popa
shlb
das
dec
clc
pop
add
cli
add
int3
xor
testl
pop
or
mov
stos
jo
cmp
jecxz
inc
cmc
daa
inc
lods
and
lock
lahf
inc
jnp
ficomps
stos
out
xchg
ss
call
dec
sbb
xchg
dec
sbb
jl
shrl
mov
mov
sbb
jecxz
sub
push
adc
mov
paddd
xor
scas
mov
dec
sbb
pop
ja
cmp
js
inc
push
stc
sbb
mov
adcb
subb
test
loope
sbb
sub
jmp
pop
dec
mov
jb
pop
fmul
test
enter
xchg
outsl
push
lret
aas
mov
cmp
push
xor
in
xchg
dec
cmp
push
jp
mov
pop
and
push
jle
and
xlat
out
xlat
scas
in
aad
mov
out
sbb
dec
stos
int3
lods
ljmp
inc
jecxz
jno
mov
mov
call
popa
shr
xchg
hlt
mov
out
inc
dec
add
gs
cmpsb
mov
mov
jle
push
mov
leave
pop
xor
jge
lea
xor
mov
mov
inc
aam
movsl
add
push
pop
std
cld
mov
lds
ja
inc
lea
xor
dec
aad
cmp
push
dec
gs
cld
lods
push
pop
les
cmpsl
add
in
sub
xor
and
mov
dec
imul
lretw
aas
dec
icebp
bound
rorl
mov
push
dec
xor
xor
into
hlt
pop
push
dec
xchg
pop
jecxz
dec
pop
or
imull
ret
sbb
adc
call
out
int
pop
inc
ds
mov
xchg
and
jno
lock
inc
clc
fnsave
lea
orb
and
jl
mov
mov
or
jbe
jle,pt
mov
xchg
stos
xchg
arpl
pop
or
scas
fiadds
jg
mov
mov
jmp
fisubrl
or
sbb
pop
pop
xchg
adc
add
mov
sbbb
mov
adcl
movsl
xor
mov
test
xchg
add
mov
fistps
cwtl
and
cltd
or
clc
mov
lods
xchg
inc
in
iret
sbb
xor
shrl
mov
push
in
and
js
in
pushf
shlb
dec
daa
out
outsb
rol
out
mov
outsb
push
inc
das
sbb
popf
icebp
enter
jecxz
lcall
enter
test
hlt
mov
or
sti
shll
clc
push
or
adcb
pushf
cmp
subb
std
popa
repz
inc
mov
ja
sbb
ret
mov
and
sbb
dec
and
add
aam
push
xchg
mov
jae
xlat
and
std
or
sub
push
jp
push
hlt
mov
jae
pop
cmp
xchg
sbb
and
into
nop
and
in
xchg
nop
adc
or
mov
cmp
and
icebp
shlb
sub
dec
xor
jnp
arpl
pusha
stos
push
push
mov
scas
push
fisttpll
lret
inc
loope
and
sbb
push
inc
push
pop
mov
iret
mov
and
jg
xor
jno
ret
aas
dec
push
inc
scas
fld
xlat
push
fwait
mov
cmp
divl
pop
cld
mov
jbe
popa
pushf
mov
mov
cltd
fisttpll
pop
mov
push
insb
leave
mov
hlt
sbb
cmp
lret
dec
movsl
dec
pop
imul
movsb
ret
outsl
adc
mov
pop
mov
data16
sbb
out
out
call
sbb
mov
xor
adc
mov
and
xor
mov
pushf
in
jns
dec
dec
xlat
mov
popa
sarb
int
adc
add
out
push
mov
rcrb
jno
das
repnz
xor
mov
test
xor
mov
dec
jne
sbb
or
out
sub
xor
xor
sub
adc
push
pusha
insb
or
push
imul
dec
in
sub
test
pop
mov
inc
dec
cmp
mov
icebp
xchg
insb
xchg
mov
pop
mov
lret
clc
push
mov
xchg
test
cmp
fcoms
sbb
push
sbb
xchg
dec
les
cmp
dec
sub
cmp
add
adc
ret
lea
test
sti
movl
push
or
sbb
add
sbb
fiaddl
hlt
xor
or
mov
or
push
sti
pop
adc
movsb
pop
pop
dec
bnd
push
cld
push
mov
test
pop
outsb
lock
es
or
jge
addl
in
xor
popa
and
rcll
xor
jp
sub
and
jns
rcl
inc
jo
and
jo
add
jg
and
and
ja
imul
jge
pop
sbb
push
jecxz
daa
lret
stos
fwait
dec
lods
adc
push
dec
xor
add
shl
pop
ljmp
insl
rcr
inc
pop
pop
out
xchg
jne
jns
clc
test
into
sbb
cmpsl
jnp
sbb
call
hlt
mov
lods
and
loopne
out
dec
insl
test
jbe
xchg
mov
ret
pop
popf
cwtl
aas
mov
loope
lret
sarb
test
dec
sub
pop
mov
or
mov
pushf
call
cmp
pop
hlt
sbb
add
insb
test
cs
dec
cmp
jmp
mov
lods
and
sbb
xchg
jne
inc
push
xchg
aad
jl
and
adc
push
inc
push
xchg
fsubrs
cmp
lret
xorb
mov
jl
xchg
jae
adc
sbbb
jns
shll
int3
mov
jnp
lea
outsb
and
xchg
daa
pop
push
mov
ret
pop
inc
sub
out
add
pslld
test
fisubl
xor
or
mov
and
dec
xchg
cmpsb
xchg
fcoms
mov
sti
nop
lcall
ss
fadd
es
cmc
jnp
dec
xchg
adc
add
xor
add
dec
popa
int
rcrb
adc
out
jmp
cmpsb
outsl
adc
xlat
and
inc
and
jecxz
and
enter
ret
fdivrl
aaa
jb
je
or
xchg
add
fwait
inc
cmc
mov
adc
je
pop
aaa
pop
shll
adcb
push
pop
mov
aaa
sti
dec
or
jp
std
ror
mov
pop
dec
cmpsb
outsb
sub
ss
jb
cmpsl
or
and
mov
sub
jbe
and
push
xchg
cmp
icebp
xor
imul
outsl
sarb
pushf
mov
add
insl
leave
fisubs
mov
sbb
sbb
test
dec
clc
cmpsl
add
sub
hlt
xchg
mov
push
inc
jbe
jns
xor
inc
inc
mov
stc
ljmp
bound
xchg
and
aas
clc
pusha
rol
loope
bound
popf
js
push
push
mov
scas
lods
pop
push
stos
push
inc
loope
cld
test
mov
and
cmp
mov
jo
out
popf
pop
shll
add
testl
push
adc
pop
lods
jecxz
add
xchg
test
lahf
and
adc
fwait
mov
scas
icebp
hlt
jb
loop
pop
shl
stos
lock
mov
dec
xor
cmp
or
inc
cmpsl
or
hlt
lret
mov
stos
inc
imul
sub
lds
cli
ljmp
push
enter
add
push
cmpsl
roll
jns
adc
inc
cmp
les
imul
cld
add
dec
jmp
mov
or
push
mov
mov
cmpsl
cltd
lods
jmp
in
mov
push
fs
mov
mov
pop
cltd
cmp
sub
stos
xor
ficompl
int3
push
or
lock
outsb
js
sub
jno
gs
mov
and
cmp
cld
adc
mov
mov
fs
push
lret
lds
pushf
dec
insl
pop
out
push
sarl
lcall
dec
stos
fbstp
out
jne
fsubrl
rcll
in
inc
push
pop
jae
xor
mov
es
ja
jmp
popf
push
mov
dec
in
std
jle
pop
es
mov
lahf
dec
or
nop
jbe
rorl
test
addb
fisubrs
data16
dec
js
xchg
in
cmp
test
push
xchg
dec
or
shlb
loop
loope
push
sub
outsb
outsb
daa
dec
push
lret
add
jbe
push
fwait
out
out
push
push
popf
inc
in
test
gs
stos
mov
fdivl
jle
add
sub
js
sbb
pop
xchg
cmc
mov
adc
aaa
shll
popa
imul
cmp
jp
add
mov
js
dec
mov
into
mov
test
add
roll
call
les
sub
pop
adc
xor
rorl
insb
mov
popf
mov
ret
out
cmp
std
mov
popf
adc
test
mov
scas
std
out
add
pop
jge
jg
mov
fstp
nop
aaa
mov
mov
push
fcmovb
loop
jg
cmc
test
xchg
push
ror
sbb
jns
xchg
adc
enter
jbe
add
jbe
addb
dec
adc
insb
xchg
insb
shrb
sbb
xor
cli
sbb
ret
out
and
packsswb
aas
loopne
cmp
push
std
pop
fsub
mov
mov
mov
sbb
xchg
pop
arpl
jne
je
mov
xchg
jnp
jne
movsb
mov
jecxz
testl
pop
jnp
or
aad
out
shll
jns
dec
nop
adc
icebp
out
mov
xchg
fs
inc
jae
lret
push
dec
mulb
and
mov
iret
sar
or
add
mov
pusha
lods
add
gs
sbb
out
sbb
cltd
incb
int3
cli
movsl
aaa
mov
imul
push
cld
sub
imul
add
aas
aaa
mov
cmp
adc
popa
enter
and
mov
shll
xor
pop
sub
orb
cwtl
pushf
andb
mov
je
xor
cmc
mov
loop
stc
aas
outsb
es
mov
stos
adc
out
xor
dec
sub
in
lods
push
add
stc
les
xchg
cmpsb
mov
add
lds
dec
dec
mov
mov
push
jmp
mov
leave
jg
sub
adc
sbb
fnstcw
mov
jmp
mov
sub
jge
fsts
or
cmp
arpl
shlb
cmp
and
negb
cltd
popf
sub
ljmp
mov
push
sahf
ret
push
in
or
sbb
dec
stos
cmp
dec
mov
mov
jmp
cs
cld
popf
inc
push
ror
inc
or
inc
inc
fnsave
shll
test
inc
test
push
push
std
mov
sub
shlb
mov
xchg
test
loopne
adc
fistpll
pop
rcrb
push
mov
adcb
ret
sub
out
jno
iret
xchg
pop
loopne
xchg
sub
mov
fcmove
xchg
flds
mov
fisubs
add
inc
call
jnp
mov
jae
xchg
inc
or
ret
repz
sbb
add
fmull
or
loope
lcall
lods
insl
cmp
scas
sti
test
call
mov
ja
mov
pop
das
pop
push
pop
ficompl
push
jg
add
push
cmc
loop
adc
lea
sub
adc
fldl
jne
mov
int
aaa
inc
push
add
testb
xor
int
jbe
mov
mov
push
cmp
jbe
scas
addr16
pop
test
xchg
jge
inc
fcoml
aad
loop
mov
xchg
fidivrs
and
adcl
pop
adcl
out
sbb
imulb
sbb
out
push
pop
push
mov
sub
inc
inc
xor
mov
fstpl
pop
cmp
jno
insb
sub
xor
lret
cmp
dec
ror
loopne
lret
add
pop
push
inc
lcall
imul
push
mov
sbb
jns
int3
xchg
scas
pop
jp
inc
sub
idivl
push
scas
fldt
add
cmp
addr16
scas
xchg
adc
push
sub
cmp
and
lcall
fnsave
xor
pop
cmc
jle
jmp
in
out
push
dec
mov
sbb
bound
dec
pop
es
idivb
fdivs
stos
cmp
push
mov
or
jb
aad
nop
je
fistpll
mov
add
rorl
jne
mov
inc
add
negl
xchg
daa
lret
and
out
pop
push
aas
aaa
sti
push
or
mov
inc
adc
ret
cmc
jmp
lret
das
xchg
les
jmp
adc
push
fidivrl
and
push
lock
js
das
out
loopne
sbb
mov
in
pop
xchg
and
jmp
fwait
and
aad
cld
or
movb
dec
inc
fistps
js
hlt
push
adc
rorl
xlat
rolb
test
dec
jnp
mov
adc
nop
jmp
add
shl
inc
outsb
inc
sbb
mov
add
jno
dec
sbb
mov
cmpl
mov
movsb
pushf
mov
int3
testl
in
lret
mov
mov
popf
jns
enter
sahf
mov
and
sbb
lret
gs
add
insl
clc
inc
scas
dec
in
ja
lret
pop
dec
loop
out
leave
mov
inc
in
fmull
cmpl
out
push
int3
dec
cmp
sub
jmp
xchg
dec
daa
in
sub
in
sub
adc
jmp
pop
out
rclb
fwait
mov
push
fnstenvs
lock
pushf
and
or
popf
aas
or
out
out
inc
xor
lods
push
inc
dec
and
fildll
mov
add
mov
xor
inc
push
je
lea
sti
mov
pop
mov
pushf
sti
cmpsl
dec
pop
popf
pop
push
ja
jno
insl
jns
xor
cmp
and
ljmp
repnz
movsl
mov
sarl
xor
and
fcompl
xlat
js
and
fmull
cmp
je
rclb
mov
push
std
popa
daa
jne
sub
inc
xchg
inc
cltd
pavgw
leave
lret
sub
repz
mov
sub
daa
sbb
aam
sbb
scas
pop
cmp
xchg
pop
push
es
ljmp
mov
lcall
les
pop
inc
les
pop
pop
leave
dec
jecxz
add
mov
stos
cmp
es
pop
outsb
push
inc
mov
inc
fisttpl
and
cmpsb
inc
lds
xchg
pusha
addr16
in
in
xor
scas
lahf
cmpl
inc
stc
push
lret
lock
mov
sub
aas
xor
sbb
cltd
xchg
testb
jb
fs
minps
push
inc
mov
inc
hlt
inc
mov
mov
jge
clc
xor
cli
cmpb
pop
xor
sarl
sbb
mov
mov
inc
lret
mov
inc
push
in
xor
lret
pushf
in
push
jl
inc
inc
js
ljmp
sub
mov
adc
gs
pop
out
inc
push
adc
push
ja
aam
or
pop
sub
cmp
loopne
mov
ss
es
aam
xchg
pop
mov
jle
dec
push
repnz
or
enter
jg
cmp
cltd
dec
jg
jbe
adc
jbe
lret
or
les
mov
test
aaa
jp
push
mov
cs
out
mov
ret
mov
add
jbe
movsl
adc
jo
cmp
fwait
mov
fwait
mov
loope
pushf
sbb
loope
mov
push
jns
lcall
xor
xchg
lods
sbb
xchg
mov
xchg
push
mov
xchg
inc
jne
mov
int3
in
push
push
inc
aad
pop
lcall
push
fwait
xor
les
cmpsl
cmp
and
shrb
mov
fs
shll
stc
bound
jbe
dec
pop
sbb
xchg
dec
pusha
sub
mov
and
add
outsl
xchg
rcrl
dec
jae
test
lods
inc
insb
mov
popa
mov
fwait
popa
mov
clc
repnz
cwtl
int3
sub
outsb
dec
aaa
cltd
fisubrs
cltd
dec
cltd
lods
and
push
aas
cmpsb
jb
cmc
clc
lock
inc
pusha
jnp
and
mov
and
inc
lcall
xor
xlat
add
adc
push
nop
popa
push
dec
dec
out
lods
cli
mov
jns
pushw
ljmp
adc
fnstcw
inc
xchg
rcrl
lret
jmp
jle
push
scas
mov
fwait
mov
push
cltd
fs
adc
movl
iret
cmpsb
sar
cmp
mov
popf
mov
jp
xchg
test
dec
push
stc
sub
add
clc
add
addr16
push
push
loope
push
popf
cmp
rclb
mov
ret
rcr
mov
adc
movsl
movsb
mov
sub
int
into
pop
lret
repz
inc
push
inc
jns
dec
lea
out
mov
lcall
push
into
mov
fsubrl
int
jno
lcall
or
faddp
insl
xchg
sbbl
jns
add
add
jo
pop
dec
xor
sub
int3
and
jns
ret
jl
outsl
insb
inc
aad
sub
or
push
imul
mov
push
test
pop
loope
jp
sti
bound
pop
xchg
mov
ja
pop
mov
xchg
mov
popl
cmp
lret
and
sahf
fisubrs
in
adc
mov
stos
mov
fs
push
ficoml
je
pushf
int3
sub
aad
inc
out
and
push
cmpsl
ljmp
push
fmul
pop
repnz
adc
nop
jp
popa
sub
xor
jae
ret
cli
dec
popf
mov
dec
and
pop
in
pop
ret
lods
and
mov
sbb
adc
push
inc
data16
sub
add
inc
aad
lea
ljmp
shlb
mov
sbb
lods
dec
insb
stc
mov
rclb
jge
fstps
mov
fs
mov
add
lock
in
push
mov
jle
dec
mov
iret
fucomip
stos
popa
std
shll
addb
test
out
adc
repz
jge
rep
in
xchg
xchg
and
cmp
add
xor
inc
loope
mov
mov
mov
addb
in
das
sbb
mov
fadds
lea
cmp
out
and
xchg
jns
daa
dec
int3
xorb
and
sbb
adc
mov
std
sub
out
xor
pop
xchg
jb
sub
repz
dec
jno
cmpsl
fninit
cs
mov
sub
es
and
push
jg
push
mov
xor
daa
and
cmp
pop
or
fsubrs
hlt
pop
fisttps
or
out
jno
scas
movsb
hlt
push
sub
jbe
adc
pop
jo
inc
popf
add
mov
sub
or
xchg
cmc
es
mov
int
testb
pop
adcl
decb
subl
xor
fcompl
push
int
daa
add
adc
mov
add
mov
sub
mov
and
mov
mov
test
lret
es
imull
adc
leave
sbbl
cwtl
iret
std
std
and
mov
ret
aam
addr16
push
fstl
add
out
adc
std
xor
in
xor
mov
ficomps
dec
cld
movsl
mov
fwait
inc
mov
mov
data16
xor
in
mov
xchg
in
frstor
sbb
int3
lods
xor
arpl
std
or
jno
xor
ds
rcll
imul
cmp
xor
gs
lret
xor
and
sbbb
int
add
adc
jmp
outsl
sub
dec
and
stc
lock
fiaddl
faddl
push
pop
mov
adc
sub
pop
xchg
pop
cltd
pop
scas
mov
mov
ror
dec
push
mov
sbb
fiaddl
sbb
or
pop
dec
xor
xchg
adc
fsubrs
rclb
xchg
fnstenv
and
jle
pop
mov
addr16
pextrw
sub
bound
sbbb
dec
mov
pop
mov
in
std
addr16
test
out
mov
popa
lea
sbb
pop
fnstcw
jge
sbb
insb
mov
mov
or
out
mov
cld
in
pop
or
and
lcall
and
xor
stc
jp
push
sahf
sub
push
push
mov
add
insb
rcr
iret
shlb
mov
les
inc
inc
icebp
push
hlt
or
arpl
out
in
xor
test
jne
sahf
cmp
test
repz
mov
lods
xor
pop
cltd
push
std
lret
cmpsb
lcall
pop
cli
push
inc
ret
dec
push
cmp
cmovns
push
in
push
je
neg
sahf
in
xchg
mov
ja
ds
mov
fwait
rcl
in
push
mov
lea
lret
adc
or
add
addr16
test
mov
sub
lods
inc
sahf
jl
jnp
aad
inc
xchg
mov
sbbl
xor
sarl
and
xchg
xchg
cmpsl
in
sbb
mov
sbb
mul
mov
es
mov
sahf
in
fstpt
movsb
sbb
nop
enter
aaa
mov
test
xchg
adc
xor
popf
lock
push
jno
test
jmp
cmp
mov
mov
jp
in
sub
js
rcl
test
aaa
cmp
xchg
outsb
push
scas
mov
mov
adc
mov
add
out
adc
lds
fbstp
xchg
stos
les
or
cmp
and
adc
xlat
sbb
inc
sub
out
pop
outsb
in
insl
mov
cltd
scas
loopne
popf
fisttps
adc
mov
imul
mov
xchg
push
popf
push
imul
pshufw
pop
arpl
sub
scas
inc
sub
sahf
xlat
es
dec
xlat
and
sarl
add
pop
jb
mov
stos
and
dec
push
das
or
lock
and
imul
and
shll
cwtl
daa
or
test
xchg
lods
cwtl
mov
loopne
cmpsb
mov
lock
shlb
pop
push
inc
inc
xchg
das
jns
imulb
sbb
out
popf
or
sbb
jbe
mov
pop
imul
sbb
sub
xor
jnp
jg
das
test
and
mov
enter
or
pusha
int
andl
cwtl
jmp
nop
lds
or
dec
push
xchg
aaa
je
dec
test
loopne,pt
clc
mov
sti
repz
out
push
xchg
inc
adc
mov
sbb
cmc
mov
jnp
mov
xchg
add
push
or
xchg
sub
mov
clc
dec
mov
mov
adc
lret
dec
adc
push
push
call
mov
aad
jns
stos
rolb
test
mov
loope
fiaddl
rcll
dec
cmpsb
loopne
ficoml
pop
mov
add
stos
test
or
aam
fcoml
push
mov
popf
popf
pusha
popf
mov
sbb
insl
sbb
cmp
mov
lret
sbb
test
sbb
push
push
in
or
jle
les
into
loope
push
inc
fst
jecxz
icebp
popa
test
loopne
push
xchg
sbb
sub
xchg
adc
xchg
cmc
out
loope
cmp
gs
mov
sub
jae
sti
xchg
dec
fadd
enter
xor
scas
pushl
idivb
out
lds
push
movsb
inc
inc
shr
xchg
rcrl
dec
ficoml
mov
xor
sbb
jge
inc
test
xchg
xor
rol
movzbl
movsl
pop
pop
inc
push
inc
scas
xor
fwait
pop
lock
into
and
jl
xor
bound
sub
xor
ret
push
loope
fwait
mov
flds
inc
retw
aad
xlat
mov
sbbb
inc
sbb
jecxz
lock
pop
push
outsl
push
hlt
xor
nop
repz
inc
push
push
jecxz
outsb
or
roll
or
les
push
cmc
and
fwait
jecxz
add
repnz
xor
dec
push
dec
mov
stc
jge
call
mull
adc
cmc
loop
push
add
rclb
inc
inc
adc
das
xchg
push
inc
mov
fwait
in
push
xor
add
sbb
mov
xchg
mov
dec
cmp
and
and
jno
jns
shrb
cmc
mov
and
push
aad
adc
inc
fs
and
jl
mov
xchg
sahf
dec
lret
lahf
inc
outsl
sti
jnp
aas
jns
jp
add
and
sbb
loope
inc
js
in
loope
adc
add
rcl
sbb
cmp
pop
jge
das
mov
and
ret
and
leave
fisttps
in
mov
pop
insb
cmp
jl
adc
ror
repz
mov
fisubl
cmp
out
dec
push
enter
fdivrl
ljmp
push
mov
stos
add
lods
xchg
push
movsb
sti
inc
ds
jle
mov
mov
loope
push
add
xchg
mov
movl
jne
inc
mov
cltd
mov
pop
cmp
mov
xchg
cmpsb
add
subl
adc
call
fld1
lret
stos
fadds
add
inc
jecxz
rorb
mov
addb
mov
sahf
iret
popfw
sub
incb
or
jbe
out
pop
push
insl
mov
dec
mov
and
jnp
popl
sub
mov
call
xor
mov
lock
mov
cmp
cmpsl
les
xchg
rol
mov
sbb
jnp
das
mov
and
jbe
jae
xlat
iret
sub
sbbb
fidivl
lock
sar
subb
loop
stos
push
imul
test
and
adc
insb
sub
xchg
ret
cmpsb
sbb
adc
aam
cld
leave
and
jg
test
adc
cmc
bound
dec
sub
sti
cmp
aad
mov
mov
into
add
pop
fidivrs
repnz
jb
adc
and
mov
lds
mov
adc
divb
gs
aaa
lea
loope
imul
repnz
cli
pop
cld
jae
in
mov
sbb
icebp
mov
mov
std
fmulp
xchg
dec
in
test
loop
mov
xchg
pop
inc
out
lods
cmp
std
test
inc
sub
lds
sub
jle
out
inc
pushf
pop
xor
jmp
and
out
lahf
push
shll
sarl
shrb
jl
lock
repnz
sbb
pushf
xorb
sbb
rclb
rorl
addr16
stos
fldcw
add
cmp
nop
testb
sbb
pop
sub
or
sub
mov
outsb
mov
fdiv
hlt
out
addl
push
mov
or
sub
negb
sbb
ret
xchg
mov
movsl
mov
fdivp
or
dec
mov
mov
hlt
in
cli
xchg
and
inc
pop
xor
or
test
test
test
inc
sarl
jae
add
push
adc
or
pop
pusha
dec
fs
sahf
aaa
cmpsl
push
ds
jnp
or
xchg
jle
fsubrs
push
jno
fisttps
jge
adc
mov
lea
stc
fwait
push
pop
adc
lcall
test
inc
dec
lea
icebp
idivl
mov
aam
add
xorb
mov
cmp
sub
mov
push
std
pop
cld
dec
and
cmp
push
push
mov
imul
rcl
jmp
les
sub
mov
insb
dec
push
aas
repnz
jae
aad
fcomps
in
cmpsb
test
in
cltd
mov
or
lods
aas
aaa
mov
fwait
int
fstp
adc
jb
popf
cwtl
iret
mov
mov
rorl
add
pop
cmp
mov
pusha
movsb
fsubs
fmull
int3
out
inc
pop
mov
sbb
rol
sti
add
cmp
pusha
sbb
sub
add
xchg
out
test
in
pop
mov
lret
mov
mov
lahf
mov
or
pop
or
pop
js
cmp
cmc
lret
out
jmp
fdiv
pop
stos
jl
jae
sbbb
and
sub
stos
add
xor
in
clc
shrb
cmc
xor
cld
mov
nop
or
out
pop
cmp
cmp
das
xor
mov
ja
outsb
dec
loopne
jmp
lea
xlat
je,pt
adc
sub
xor
sahf
mov
rcrb
push
or
add
das
and
pop
mov
aad
stos
gs
jle
sarb
cmp
out
scas
jmp
mov
and
scas
xchg
dec
outsb
sbb
std
pusha
push
flds
lods
mov
add
lea
xlat
test
fmull
ret
mov
pop
lcall
mov
push
repnz
inc
mov
add
or
mov
outsb
adc
out
mov
call
fwait
jnp
fdivrp
inc
orb
xlat
mov
push
les
fildl
or
out
lret
cmpsb
cltd
or
imul
mull
daa
and
sbb
mov
jge
mov
inc
pop
push
popf
daa
xor
sub
mov
scas
xorl
cmp
call
div
pop
or
in
add
movsb
dec
loop
mov
out
bound
loop
ss
pop
pop
daa
xor
inc
or
xor
xor
mov
xor
mov
fnstsw
arpl
cld
mov
out
push
inc
mov
sub
mov
mov
sub
std
loopne
pop
jmp
and
in
faddl
or
sub
add
inc
lods
mov
ds
xor
shlb
cltd
xchg
fadds
mov
sub
enter
cmp
cmc
cld
pop
dec
sub
daa
xor
imul
inc
das
pop
push
clc
sbb
lock
in
sbb
fucomi
clc
pop
sbb
fwait
or
adc
mov
mov
call
xchg
and
mov
pop
call
es
push
dec
imul
lret
loopne
call
mov
mov
xchg
add
adc
daa
or
ficomps
stos
or
sub
dec
test
pop
dec
pusha
out
sub
fs
sub
test
subb
pop
lret
inc
scas
cmp
cmp
and
mov
jno
cmpsb
data16
dec
and
mov
or
ret
push
mov
add
out
je
or
scas
dec
inc
xchg
and
ret
ss
jmp
and
mov
push
imul
ljmp
pop
fistpl
repz
std
lahf
in
jnp
jge
mov
mov
ret
outsl
adc
cmp
mov
xor
std
cmp
ret
lds
leave
push
loopne
mov
shlb
in
xor
insb
inc
loopne
rolb
sbb
dec
imul
mov
ds
aas
inc
mov
push
dec
std
loop
int3
lcall
addr16
jmp
insl
jg
adc
cmpsl
pop
je
ljmp
mov
mov
jnp
cmp
loope
cmp
lock
lahf
xchg
xchg
sbb
cs
mov
fcoml
mov
movsb
xor
out
and
inc
pop
mov
loop
xor
push
ror
mov
cmp
add
mov
dec
mov
lods
jnp
cmp
inc
lahf
rclb
push
ljmp
nop
test
xchg
dec
lods
sub
out
dec
loopne
mov
inc
repnz
out
ja
jne
sbbb
fimull
pop
addr16
dec
mov
cmp
les
dec
shll
dec
mov
mov
ljmp
dec
add
je
fstpl
adc
shl
insb
jo
shr
push
rcrb
loop
sub
popf
gs
or
daa
push
mov
data16
and
lea
scas
pop
inc
push
repz
add
es
ret
lret
and
jp
call
aas
add
fs
hlt
jb
and
stc
dec
lods
addr16
dec
and
push
pop
lret
hlt
dec
test
mov
pop
aas
sbb
jne
and
jg
jbe
insl
mov
mov
and
imul
push
sub
push
aam
cmp
sub
test
aad
dec
inc
jle
dec
and
xchg
mov
mov
mov
mov
pop
adcl
mov
out
mov
adc
and
push
sub
push
adcb
mov
inc
rolb
sub
stos
inc
xor
xlat
dec
mov
mov
in
lret
xor
test
aas
iret
sub
mov
pop
outsb
fists
and
push
mov
and
lahf
adc
fnstenv
xchg
into
push
in
lret
outsb
jle
leave
adc
push
rorb
mov
fwait
inc
bound
inc
and
cmp
inc
mov
cs
ljmp
in
imul
xchg
rcr
mov
call
mov
xor
jbe
fimull
iret
fmuls
andl
mov
push
mov
leave
lods
mull
repz
push
movsb
outsb
addb
clc
add
xchg
lods
mov
jne
fwait
mov
xchg
pop
lret
push
das
mov
pop
pop
scas
sbb
cmp
dec
addb
jns
adc
inc
nop
pop
outsb
dec
stc
jae
popf
push
xchg
xchg
ffreep
mov
pop
sub
pop
jns
xchg
jb
cwtl
in
jecxz
push
fwait
mov
je
or
lret
lret
pcmpeqw
divb
lock
pushf
aad
inc
push
or
daa
inc
movsl
pop
ret
xor
adcl
sub
mov
scas
xor
loop
cli
xchg
pop
loope
lret
pop
mov
dec
push
push
pop
lea
ret
push
shufps
lahf
pop
movsl
sub
mov
and
scas
addr16
inc
sbb
js
lret
shl
sub
idivb
sub
cmpsb
lock
sbb
out
clc
jbe
add
pop
dec
jbe
jmp
sti
aaa
xchg
sarb
mov
and
pop
jnp
xchg
sbb
lds
and
xchg
outsl
das
mov
adc
call
jge
and
mov
xor
fstl
mov
cwtl
in
xchg
pop
adc
and
fdivl
xor
in
mov
mov
testb
cltd
fs
pop
xor
adc
fidivrl
mov
in
out
hlt
xchg
fisttpl
and
xor
movsl
xchg
cld
enter
or
roll
jbe
flds
sub
xlat
inc
cmp
and
jle
adc
mov
fmul
stos
cwtl
iret
and
jle
cmp
inc
sbb
ljmp
jp
mov
pop
pop
mov
bound
stos
pop
push
xchg
push
mov
mov
dec
sub
addr16
lcall
repnz
and
or
inc
sub
fmull
push
call
pop
push
push
cmpsl
push
mov
gs
roll
fucom
ljmp
pop
scas
mov
addb
or
fs
mov
pop
fistl
and
addl
add
xlat
inc
out
or
nop
mov
push
imul
cwtl
nopl
je
subl
push
xchg
ret
mov
jbe
mov
ljmp
push
xlat
jg
lds
and
ret
in
bound
xor
sub
xor
fwait
rorb
out
push
mov
xchg
ret
pusha
pop
cwtl
test
mov
push
xchg
fdivrs
lock
outsl
dec
jnp
xchg
push
cli
mov
mov
mov
andl
aaa
mov
rcll
inc
dec
cmp
in
dec
cmp
hlt
enter
daa
mov
pop
pop
cld
inc
pop
pop
jecxz
mov
mov
jmp
jmp
cld
out
jae
cmc
fstpt
cs
aad
out
dec
sbbb
das
mov
dec
ror
cmp
imul
dec
push
mov
and
icebp
or
push
out
cmp
jne
ret
js
mov
lret
jnp
adc
dec
insb
fdivrl
push
ret
mov
adc
int
sti
int3
orl
jne
mov
jns
dec
mov
and
xchg
rcll
add
movsl
push
ret
inc
cld
pop
int
cld
fldenv
int3
rcrl
mov
inc
mov
lds
jle
cmp
jae
mov
bnd
sub
inc
pop
cmp
cmp
fisubrl
mov
and
pop
jmp
rcll
mov
inc
cwtl
inc
nop
jmp
es
dec
xchg
push
push
mov
mov
xor
cmp
stos
mov
out
jecxz
sbb
nop
xlat
and
mov
xchg
xchg
fs
and
aam
out
push
push
or
adc
jmp
mov
fisubs
sub
push
jge
outsb
fiadds
sbb
adc
fwait
out
cld
aam
mov
jp
scas
shll
xor
or
push
jmp
loope
dec
jne
loope
xchg
mov
and
repz
mov
xchg
jbe
dec
shll
cmp
fidivrl
cwtl
dec
icebp
xlat
mov
inc
mov
scas
pop
mov
push
dec
arpl
push
mov
inc
inc
ds
or
pop
sub
cmovg
sbb
cmpl
inc
push
pop
fnstcw
add
bound
jmp
stc
cmp
test
or
hlt
and
out
bts
mov
pop
arpl
leave
pushf
sbb
fwait
push
shrb
movsb
mov
inc
xchg
loope
in
dec
stos
dec
adc
mov
adcb
ret
arpl
sub
jmp
xor
mov
pop
clc
loopne
notb
aas
sarl
imull
nop
sahf
mov
in
add
xchg
mov
mov
aam
push
add
mov
outsl
push
or
jno
jb
add
or
ljmp
repnz
mov
fwait
fwait
jecxz
out
mov
enter
ds
rcrl
dec
inc
test
lret
ljmp
xlat
jge
xchg
add
jns
inc
add
xor
repz
loopne
push
pop
rorb
cltd
dec
push
push
or
sbb
add
or
fwait
sti
dec
repnz
ljmp
hlt
cmp
ror
inc
leave
leave
imull
sub
add
pop
xor
test
mov
outsb
xor
lock
and
mov
adc
loope
outsb
fwait
js
jg
movsb
sar
cmpb
xor
mov
test
cmp
pop
lret
pop
mov
ffreep
fisubl
or
pop
rorl
push
mov
fs
mov
push
lcall
mov
popa
dec
dec
inc
insl
movl
pop
add
push
gs
pop
mov
xor
outsb
out
cmc
jmp
sub
mov
dec
cli
imul
xchg
imul
lcall
inc
sbb
shrl
mov
shrb
sbb
iret
and
aas
mov
jae
sti
sbb
filds
pop
mov
and
rol
or
insl
sub
stos
movsl
mov
pop
mov
jmp
jg
notl
jmp
mov
or
dec
es
pop
inc
adc
xor
jmp
xchg
sarl
mov
pop
call
pusha
aaa
or
pop
cmp
out
test
in
and
sahf
out
shrb
test
outsb
sub
adc
adc
lock
dec
shr
pop
in
call
repz
test
pusha
mov
loope
or
stos
lods
jnp
inc
stos
push
popf
mov
sub
stc
pop
pop
daa
insl
jbe
xchg
cld
decb
inc
mov
cmp
pop
and
mov
cld
aas
out
push
cs
mov
and
repnz
mov
jb
es
aam
repnz
fildl
lret
int
fcmovnb
pusha
xchg
inc
push
pop
sbb
lods
or
data16
pop
mov
push
aad
es
xchg
cwtl
rorl
mov
test
cmp
inc
dec
aas
or
fcmovnb
mov
push
sbb
cmp
clc
rorl
adcl
pop
jl
fs
mov
jecxz
adc
lea
outsl
je
dec
mov
call
mov
sub
add
mov
mov
cld
inc
out
push
push
sub
mov
clc
pushl
aam
xor
scas
das
jg
adc
insl
mov
mov
pop
movsb
fdivs
sub
movsb
inc
pop
imul
sbb
push
mov
cmp
in
bound
push
out
inc
add
dec
mov
je
aam
mov
addr16
in
jg
xchg
test
ret
cs
push
lds
scas
mov
add
xor
das
dec
pop
pop
aam
mov
test
lcall
leave
bound
shrl
jbe
lea
mov
mov
sub
push
lods
repz
sbb
sub
rolb
pop
stos
adc
or
adc
mov
jno
cmp
mov
jno
add
push
push
xchg
or
pop
fwait
ret
xor
inc
les
lods
insl
xchg
bound
push
cmpsb
jb
cs
popa
sub
insb
add
outsl
rcl
add
inc
imul
cmpsl
sub
lcall
xchg
push
xorl
mov
int
out
pop
ljmp
mov
std
push
js
add
inc
js
sbb
and
dec
jb
movsl
sub
sti
inc
push
sub
mov
jno
push
mov
mov
lock
xor
lods
jle
adc
roll
pop
sbb
xchg
ja
add
in
and
push
sbb
fstpl
scas
insb
test
jp
pop
cld
loope
mov
jb
xorl
dec
jne,pn
jge
mov
popl
test
inc
std
push
into
cmc
iret
add
shrl
cwtl
mov
push
xor
mov
dec
lods
pop
pop
das
mov
inc
iret
jecxz
lea
lret
out
push
sub
stc
adc
mov
daa
aam
das
in
bound
mov
or
test
cmp
mov
inc
sbb
inc
jmp
clc
add
or
sub
cmp
xchg
imul
cwtl
mov
mov
dec
insl
push
inc
shll
dec
xchg
rorl
push
stc
pop
xchg
jmp
int3
imull
push
setne
push
repz
dec
jl
inc
les
push
mov
idiv
movsl
std
aam
xchg
lcall
push
shll
mov
fisubs
aaa
stc
iret
xchg
lret
jp
jo
addb
or
adc
add
aam
ljmp
aad
cltd
dec
cltd
mov
das
adcb
jp
push
mov
test
cmpsb
gs
lcall
std
js
push
repz
repz
push
std
in
cmp
dec
and
cmpsb
out
pop
outsl
jns
std
add
scas
out
cli
cmpl
mov
mov
mov
fcoml
mov
push
inc
ffree
and
pop
and
pop
xor
push
inc
ja
imul
loopne
outsl
mov
scas
mov
fdivrl
push
pop
jne
leave
add
stos
iret
adc
enter
scas
imul
jg
loopne
daa
inc
adc
pop
jae
lret
mov
cld
enter
sub
es
sub
out
mov
fbld
and
out
faddp
movsl
fldenv
add
xchg
inc
andb
bt
insb
nop
xchg
mov
leave
pop
jns
leave
scas
ret
sbb
jns
xor
outsb
cwtl
or
shl
dec
jno
loope
bound
mov
jbe
addb
adc
jmp
aaa
fst
aaa
add
lahf
lods
sub
scas
call
inc
add
mov
mov
mov
sbb
lods
pop
inc
fwait
ret
stos
insl
mov
cld
sahf
mov
dec
jge
dec
fs
inc
cmpsl
pushf
std
cmpsb
cmp
push
ret
out
mov
out
sbb
lods
repz
fiaddl
test
pop
xchg
outsb
bound
out
or
sbb
popf
xor
mov
cmc
shll
stc
dec
jp
mov
fwait
movsb
mov
aad
lock
mov
pop
cltd
outsb
dec
sub
pop
dec
dec
add
adc
subb
pop
rcrb
xchg
in
mov
clc
in
stc
daa
movsl
mov
pop
dec
popl
cmp
rcrb
push
push
pop
aad
adc
sub
mov
or
push
pop
push
mov
daa
sbb
inc
nop
and
aad
dec
shlb
mov
jle
popf
mov
hlt
xor
and
les
and
dec
adc
fcompl
ja
mov
lret
jp
subl
cld
pop
ret
cmpsl
xor
push
jmp
push
popf
or
push
sahf
mov
ficomps
xchg
mov
or
adc
pop
into
cmp
popa
outsl
push
fbstp
aas
xchg
mov
add
repnz
push
mov
xchg
cmp
mov
repz
inc
mov
imul
lods
push
stc
pop
movsb
sub
in
dec
add
test
dec
in
jg
enter
add
dec
pop
mov
outsb
sub
inc
shr
jae
cli
sub
adc
push
mov
pop
nop
jg
xchg
popl
adc
neg
jo
test
int
pop
cmp
cmp
xchg
mov
imul
lret
fdivrs
orl
sbb
cs
testb
mov
cmp
hlt
pop
ss
lret
das
jle
cmp
mov
scas
sub
rorb
xchg
xchg
sub
addr16
fwait
sbb
cld
out
push
add
nop
shrb
ret
inc
jo
push
sarl
icebp
lds
push
inc
adc
cmp
push
fistpl
aad
cwtl
ret
je
pop
sarl
and
cmp
popa
fiadds
lcall
add
jnp
mul
dec
fld
adc
jo
mull
xchg
mov
movsb
lods
and
out
lods
mov
cmpsb
mov
cmp
push
lea
pushf
mov
push
add
add
mov
jle
pushl
leave
sub
adc
cmp
inc
out
mov
xchg
and
sbb
xor
jno
push
push
xchg
pushf
sub
ficoms
in
aaa
pop
lret
xchg
lea
mov
cld
pop
jg
mov
inc
and
jmp
popa
mov
gs
cld
aam
mov
sub
imul
dec
mov
cmp
jecxz
aad
or
mov
lds
pop
or
fadd
add
das
popa
subb
inc
pop
mov
imul
fidivl
iret
sub
jle
out
mov
push
notl
pusha
pusha
jl
aad
cli
xchg
lahf
sub
fisubl
xchg
xchg
mov
and
add
cmp
mov
idivl
shll
inc
hlt
mov
jns
fimull
movsl
int3
push
inc
hlt
gs
xchg
in
int
out
aad
stos
push
sbb
and
inc
mov
cmp
aam
ret
or
or
inc
and
jp
dec
xor
in
add
dec
rclb
popf
push
xor
gs
repnz
ficoml
pop
adc
shll
add
add
mov
repnz
dec
cltd
stc
fxtract
fnstsw
loope
es
pop
mov
fs
pushf
add
dec
test
jae
cmp
je
xchg
es
sub
ds
loope
imul
sub
inc
cltd
cmpsl
pop
dec
or
insl
insb
add
mov
fstps
out
or
mov
sbb
jb
and
fsubr
rolb
pop
mov
loop
xchg
imull
jge
fsubl
adc
xor
pop
inc
outsb
aas
mov
inc
ja
aam
or
push
add
cwtl
inc
test
push
or
and
sarl
sbb
push
mov
push
test
xor
mov
fisttps
sti
dec
lea
fsubl
mov
mov
lret
cmp
jns
jmp
mov
cmp
adc
test
sub
loope
dec
out
pop
cli
roll
das
insb
mulb
aam
push
add
push
nop
es
xor
inc
xchg
jo
sbb
call
jmp
and
cmp
jns
clc
sbb
jae
sub
pop
add
jae
cltd
dec
or
sub
outsl
xor
push
and
and
out
and
or
lds
pop
inc
sarl
mov
inc
arpl
repz
addl
lahf
and
shrb
push
sahf
cli
out
adc
mov
jmp
das
inc
in
aad
jp
cvtps2pd
popf
cmp
lods
add
mov
fbld
pop
sub
out
cmp
push
mov
pop
nop
and
aaa
or
jae
data16
push
xor
jecxz
push
xlat
loopne
dec
inc
xchg
push
push
sarb
test
addr16
cs
inc
dec
or
clc
js
mov
rcl
sarl
push
or
push
imul
fimuls
cwtl
aam
scas
sbb
cmc
pushf
bnd
shll
mov
stos
loope
pop
lret
sbb
jl
les
jmp
arpl
cmp
test
pop
adc
stos
je
sub
fsts
cmc
xchg
mov
xchg
cmp
nop
test
jb
out
test
test
pushl
rol
imul
jne
iret
jae
mov
inc
dec
dec
ljmp
pushf
inc
mov
jl
notb
repnz
ja
out
mov
in
sub
jmp
pop
outsb
and
lea
imul
push
clc
xor
repnz
pushf
lods
jbe
xor
jecxz
and
mov
insb
shll
mov
inc
cmpsb
sbb
cltd
rorb
daa
seta
mov
rcll
in
repnz
cmp
adc
test
jnp
sub
pop
lret
inc
pop
mov
in
mov
or
mov
stos
mov
cmc
roll
test
mov
lcall
pop
nop
adcl
and
hlt
xor
jmp
xorb
rcll
dec
and
cmp
cmp
aad
or
push
add
or
icebp
jp
xor
loop
push
xlat
xchg
lds
or
xchg
cli
sub
out
hlt
imul
xorb
push
xchg
incb
insb
and
inc
ret
jae
cmpsb
push
stos
imul
or
jbe
mov
add
jae
jb
in
insl
mov
movsb
dec
add
sbb
adc
pop
add
subb
fs
xlat
add
jge
dec
adc
orl
mov
ret
jmp
sbb
jl
xchg
scas
mov
call
lods
aaa
sbb
cmpsb
mov
jmp
popf
pop
cmpsl
pop
out
add
lcall
jmp
mov
xor
std
dec
call
mov
fcoms
jmp
stc
lock
lods
and
cmp
fwait
inc
addr16
sti
sub
or
mov
lcall
push
sbb
push
das
pop
enter
adc
adc
xchg
xchg
cli
mov
adc
and
xor
pop
mov
loope
sti
cs
push
dec
push
xchg
cmpsl
imul
inc
mov
adc
stc
and
xchg
adc
sub
out
jo
mov
mov
out
lahf
jbe
pop
je
mov
mov
addr16
inc
mov
adc
stos
cmp
stc
sbb
mov
lret
fs
mov
inc
lret
stos
mov
sub
mov
mov
movb
xor
test
add
cmp
jbe
daa
or
shrb
in
pop
inc
cltd
sarl
jno
lea
inc
pop
jo
pop
into
push
push
mov
inc
add
enter
mov
aaa
dec
and
fnstsw
outsl
nop
dec
mov
sub
leave
adc
icebp
in
sbb
jg
adc
mov
jl
out
dec
insb
xchg
dec
jb
add
stos
jg
xor
mov
dec
bound
mov
sub
mov
subl
repz
cmc
movsb
test
push
pop
mov
incl
loope
mov
xchg
mov
in
in
movsb
imul
clc
stos
addr16
mov
data16
jbe
jae
push
jbe
pop
aad
dec
adc
and
out
filds
pop
push
pop
jnp
test
pop
jne
popa
pop
cltd
lods
mov
jae
daa
or
gs
test
xor
pop
rorb
mov
push
shrl
or
cmpsl
lcall
movsb
cs
mov
pop
sbb
fdivp
push
ja
movsl
jmp
stc
ficomps
xchg
addr16
fst
push
jmp
fmuls
ds
cmp
xchg
sahf
dec
call
out
cld
enter
adc
inc
shlb
mov
sbb
js
in
cmp
cltd
xor
ret
xchg
call
sbb
js
push
adc
push
mov
fcmovne
test
dec
jge
sub
js
out
and
lods
sub
jns
mov
mov
rcll
mov
adc
sbb
xchg
jne
es
fists
fs
cmp
dec
and
push
cmpb
push
adc
roll
ljmp
in
cld
mov
and
shlb
sbb
push
sub
mov
jg
imul
pop
out
lods
out
mov
movsl
mov
rolb
call
push
xor
cltd
lcall
add
scas
xchg
sarb
das
mov
mov
mov
mov
inc
hlt
pop
loope
negl
loopne
xchg
leave
in
mov
cs
mov
cmp
add
out
dec
pop
data16
push
or
shlb
ds
xorb
pop
data16
sbb
sti
rcll
cmp
push
sbb
testb
out
lds
repz
push
movsl
arpl
pushf
pop
pop
xchg
sub
enter
pusha
out
dec
leave
lock
sbb
fisubrs
iret
mov
lea
lcall
push
jg,pn
cld
xchg
fbld
arpl
adc
cli
ficompl
clc
mov
daa
pop
jp
and
sub
clc
fwait
pop
jl
mov
inc
mov
cmp
pop
repz
shll
leave
xchg
or
cmp
or
in
xor
repz
push
push
fucomip
ret
jb
cmp
pushf
stos
notb
mov
mov
ficomps
fimuls
sti
mov
inc
pop
xor
add
xchg
nop
mov
adc
in
clc
mov
add
in
dec
cmp
ds
xlat
or
scas
and
inc
xchg
mov
push
sub
push
jp
test
jle
push
push
cmp
xchg
sub
fstpt
jmp
mov
xor
mov
fldcw
shl
daa
xor
or
push
fdivs
ror
jns
jl
adc
rcll
inc
sbb
arpl
cmp
sub
jecxz
test
adc
stos
int3
sbb
jne
jp
pop
pop
es
xorb
cmpsb
ss
mov
icebp
sub
fs
xchg
inc
ds
xchg
rcl
jo
dec
add
mov
adc
cli
xchg
sbb
stos
imul
push
mov
pop
cmp
arpl
jl
scas
cmpb
jnp
dec
inc
iret
dec
xor
pop
pop
xchg
lret
xor
mov
pop
fs
stos
mov
add
insb
or
aaa
ljmp
mov
pop
pop
loopne
dec
xor
mov
notb
inc
jecxz
add
jno
dec
jmp
ds
aad
int
lods
clc
pop
stos
lea
aam
rorb
fistl
inc
das
xor
arpl
mov
or
or
fsubl
xchg
xchg
xchg
inc
lods
cmp
js
jg
jnp
cmp
xchg
jp
push
jo
out
jg
fbld
inc
push
sub
int3
icebp
pop
in
xchg
lea
mov
adc
push
ja
mov
xchg
dec
fildl
arpl
pop
mov
inc
bound
adc
add
pop
arpl
inc
into
in
shll
mov
sbb
subl
popf
ljmp
jmp
xchg
xchg
mov
lret
and
jge,pn
jl
add
pop
jl
inc
js
or
sbb
fnstenv
push
ljmp
push
daa
ja
sub
addb
xchg
jmp
pop
mov
cli
shr
jmp
pop
jmp
movsb
xlat
scas
add
pop
adc
sbb
lret
movsb
mov
into
stos
insl
scas
cmp
pop
iret
imul
stos
mov
sub
add
nop
pop
and
dec
jp
pop
pop
cmp
es
add
sub
push
fwait
push
and
pop
push
and
inc
xchg
shrl
daa
scas
inc
cli
test
or
ss
add
inc
rolb
cmp
push
xor
in
pop
cmpsb
or
es
xchg
mov
cmp
and
popf
mov
leave
test
pop
cmp
mov
xchg
pop
mov
and
pop
shl
dec
push
jle
loopne
shlb
cmp
movsb
cmp
push
push
pop
dec
mov
cmp
xor
adc
popf
sub
iret
push
call
xor
mov
gs
pop
rorb
mov
enter
in
pushf
cmp
dec
dec
cmp
test
xchg
and
popf
jbe
push
pop
push
xchg
enter
int
xchg
mov
xchg
push
lea
jbe
mov
inc
shlb
mov
jno
lahf
outsl
jnp
stc
xchg
in
loopne
loop
inc
clc
in
pop
mov
jne
fwait
or
faddl
mov
shlb
sbb
jnp
push
loopne
cmpsl
jle
mov
leave
pop
jl
int
mov
ja
ljmp
ret
adc
cmp
dec
mov
mov
pusha
push
dec
push
subl
sub
ret
not
aaa
in
test
or
mov
cmpsl
push
cmc
cmp
mov
roll
and
pop
jae
ds
out
pop
gs
xor
sbb
xchg
dec
enter
dec
mov
mov
fstl
mov
js
cmp
xchg
leave
lods
adc
cmp
out
inc
mov
or
mov
jne
dec
jno
jb
add
sub
in
xchg
push
sbb
ret
push
sbb
and
cmpl
inc
and
pop
in
cld
jecxz
xor
pop
xor
push
je
or
add
sub
outsl
addb
xchg
fsubr
push
arpl
xchg
xchg
push
movsb
xchg
popf
lea
jae
mov
lret
dec
or
cs
add
sub
ja
data16
shll
stos
imul
mov
inc
jmp
sbb
call
or
dec
pop
test
jle
iret
pop
out
hlt
lods
fwait
mov
cmp
sarb
inc
sub
adc
cmc
daa
inc
dec
jg
ja
movsl
lock
cmpsb
add
jecxz
pop
adc
jmp
cmc
fcoml
jbe
inc
mov
or
pop
dec
ds
add
dec
pop
dec
sahf
xor
scas
dec
fldt
jb
cwtl
sub
pop
out
shlb
xchg
aad
or
ds
test
or
test
pop
in
inc
push
inc
data16
jo
push
push
inc
adc
div
push
mov
xchg
test
data16
cmpsb
cs
mov
sub
push
icebp
sub
iret
mov
in
daa
idivl
fcom
push
pop
and
mov
jl
pop
cld
mov
cmp
jmp
add
lret
mov
stos
mov
and
repz
pop
mov
test
imul
loop
cmp
clc
addb
lret
andb
mov
sbb
cltd
add
push
adc
xor
in
and
dec
int3
push
mov
imull
std
les
push
mov
in
jnp
xor
jecxz
jae
add
in
loop
pop
mov
lret
lcall
cmp
cmp
aas
xchg
loop
daa
or
cmp
push
je
inc
out
jbe
sbb
sub
cmpsl
mov
fmuls
fwait
jg
xchg
out
in
push
rorl
out
inc
and
inc
icebp
cmp
or
xor
inc
hlt
es
dec
add
xchg
and
fs
test
cmp
subb
mov
aad
hlt
cmp
push
sbb
shll
and
arpl
stos
xchg
cmp
adc
je
mov
dec
inc
add
mov
popf
add
lret
dec
sbb
mov
aad
jae
dec
cwtl
std
push
in
negb
mov
imul
imul
inc
scas
xchg
mov
inc
mov
dec
mov
adc
mov
cmpsl
adc
xchg
dec
cmp
sub
loop
ficompl
test
stos
mov
movsb
mov
xchg
dec
adc
pop
cmpl
jmp
push
dec
pop
arpl
adc
push
push
inc
std
xlat
call
aaa
iret
in
gs
push
out
and
lods
loop
jbe
popf
stos
ficoms
inc
cmp
insl
xchg
nop
pop
int3
call
adc
daa
dec
addb
sbb
mov
faddl
icebp
mov
repnz
mov
sbb
lods
sub
ret
jmp
aad
mov
mov
cltd
cmp
roll
push
hlt
fidivl
pop
scas
ficomps
mov
jae
lcall
jge
xchg
lods
xor
adcb
in
test
test
popf
stos
inc
lods
cmc
dec
jecxz
fisttpll
in
push
jge
pop
jbe
mov
cwtl
test
mov
xchg
gs
jle
leave
jle
fbld
loope
stos
scas
mov
or
xchg
int3
push
jno
fisttps
pop
popa
adc
repnz
sbb
mov
hlt
xor
push
mov
jge
xchg
add
jbe
gs
jnp
sub
pop
int3
cmc
lret
enter
push
or
outsb
or
repz
hlt
push
iret
aad
jae
cld
pop
addr16
push
adc
mov
mov
or
enter
sub
or
dec
ss
dec
sub
loopew
jge,pt
xor
stos
add
sbb
fcoml
mov
mov
iret
enter
pop
rol
mov
out
daa
mov
lahf
hlt
es
dec
icebp
push
int
popf
inc
icebp
or
jo
pop
insl
fsubs
pop
rcl
push
cmpsb
aam
jge
push
mov
in
sub
pushf
cli
push
fwait
xchg
push
and
imul
fprem
cwtl
fiaddl
test
xorb
cmp
cmc
test
xor
pop
or
scas
hlt
sarb
and
inc
call
adc
add
xorl
leave
aas
test
push
stos
xor
dec
leave
movsl
sub
mov
mov
dec
ds
mov
cmp
add
icebp
mov
dec
cmp
lret
sar
and
aam
xor
fisttps
or
decl
out
sbb
test
repnz
dec
xlat
ds
scas
xor
shr
adc
loope
insb
mov
mov
push
xor
test
jecxz
addl
inc
out
sub
jo
popf
push
cmc
arpl
add
jecxz
mov
jo
ljmp
mov
roll
mov
fldt
xor
testb
pop
dec
lcall
sbb
xchg
lods
clc
push
adc
inc
or
and
push
out
das
out
sub
out
cmp
and
imul
mov
jle
xchg
jl
pop
mov
ss
mov
fsubp
stos
or
mov
inc
test
jb
sub
sub
jmp
mov
das
testb
push
les
mov
mov
pop
sub
cmp
adc
mov
jmp
outsl
adc
or
mov
rorb
push
push
pop
jbe
in
test
lcall
pushf
inc
lret
sbb
fcompl
ret
jbe
popf
cmp
xchg
dec
or
xor
cmp
lret
imul
jo
hlt
dec
sbbl
lods
subl
iret
sahf
pop
into
adc
mov
push
fsubl
xor
inc
mov
mov
insb
jnp
inc
aam
aaa
addr16
push
sahf
fcmovbe
out
std
iret
inc
jecxz
lods
or
cmp
jle
scas
inc
outsl
outsl
popa
inc
mul
add
sbb
pop
cmpsb
sar
xchg
add
scas
add
mov
aas
mov
dec
lds
jl
mulb
pusha
cmp
mov
mov
or
sarl
mov
std
adc
jecxz
mov
inc
call
pop
sbb
adc
mov
mov
fwait
repz
mov
sub
jnp
inc
sub
frstor
mov
xchg
fs
pop
mov
lods
mov
pop
cmpsl
sbb
pop
dec
into
test
xchg
mov
in
push
inc
jge
pop
into
or
out
sbb
nop
sub
or
mov
movsb
mov
lds
outsl
cmp
shlb
push
add
lods
andl
and
adcl
mov
mov
shlb
push
repnz
sbb
cmpsl
outsl
pop
ret
iret
xor
hlt
dec
flds
mov
jns
data16
int
and
rcll
mov
xor
sbb
xchg
or
shl
or
adc
and
jle
idivl
repz
lea
cli
jno
sub
inc
dec
loop
sub
flds
mov
lods
push
adc
test
repnz
das
jne
movsl
dec
lods
aaa
and
daa
inc
jo
mov
cwtl
sbb
stos
or
jne
push
mov
and
icebp
xchg
cld
mov
pop
mov
lock
adc
out
iret
and
lods
dec
mov
mov
push
add
xchg
cmpsl
jae
es
xor
iret
mov
jne
push
adc
push
and
idiv
bnd
cs
out
push
add
and
aad
push
adc
jmp
hlt
xor
mov
mov
out
bound
pushf
pop
xor
adc
adc
lret
scas
lea
ret
dec
clc
push
mov
cltd
push
push
ja
dec
push
jge
or
ret
shl
cmpb
imul
add
lea
mov
iret
sbb
lock
dec
pusha
push
dec
xor
or
test
pop
nop
int3
and
scas
mov
sub
mov
rclb
xor
or
iret
xlat
test
xlat
out
imul
mov
inc
pop
mov
dec
stos
pop
loope
and
add
leave
fwait
mov
ret
inc
lret
aam
add
push
out
xor
add
pop
xor
addr16
mov
and
mov
xor
les
aaa
xlat
clc
in
xchg
mov
pop
js
in
dec
shlb
jp
cwtl
arpl
lcall
inc
push
xor
sbb
cld
gs
pop
xchg
sti
dec
sbb
jp
sub
push
lds
ss
les
neg
scas
and
rorb
seto
test
js
movl
mov
pop
loopne
push
xchg
cmpb
enter
xor
mov
mov
pop
push
loopne
cmp
sub
sub
loop
fsts
add
rorl
in
iret
jmp
jg
test
sar
repnz
shrb
ljmp
mov
inc
lock
jmp
nop
xor
mov
rcr
jne
aaa
out
jge
sbb
mov
ret
gs
nop
add
xor
stos
mov
cmpsl
dec
or
insl
lret
and
push
sub
dec
xchg
xchg
ficomps
sub
decl
jns
popa
sub
cltd
inc
inc
push
sub
in
lock
or
out
jbe
movsb
xor
clc
divb
mov
cld
es
sub
xor
or
divb
jecxz
aas
ds
pop
add
addl
xor
aam
fistps
mov
in
stc
enter
push
inc
das
and
mov
inc
jecxz
daa
inc
xlat
mov
scas
call
or
xor
add
jns
push
add
xchg
and
mov
mov
gs
mov
cs
mov
push
mov
movsb
jb
gs
jnp
or
cmp
test
out
test
adc
sbb
fsts
aam
cmpsb
mov
outsb
sub
outsb
inc
mov
sub
push
push
popf
popa
jge
or
aad
cld
mov
push
shrl
mov
or
push
inc
sar
les
adc
fildll
addb
cmpsl
mov
sub
lcall
pop
loope
cwtl
shll
mov
fs
fbld
jne
dec
frstor
mov
jmp
xor
ret
mov
or
push
add
dec
in
pop
sbb
xor
push
idivl
insb
aad
in
or
in
nop
stc
arpl
test
outsl
lcall
mov
xor
push
add
repnz
fldcw
ljmp
push
pop
jne
and
out
arpl
adc
mov
mov
adc
pop
ljmp
sbb
inc
mov
and
imul
jae
jbe
jecxz
cmpsb
cltd
es
mov
inc
mov
add
or
leave
pop
xorb
test
aad
jnp
popf
pop
cmc
cmpsl
and
and
std
jb
call
mov
or
out
inc
flds
fsubs
aas
xor
adc
cmp
ficompl
adc
adc
and
mov
ret
loopne
cmp
jmp
push
add
and
mov
inc
push
les
shll
and
pop
adc
push
cmp
rcl
mov
movsb
lcall
jge
sbb
ficoms
and
sbb
mov
sti
js
dec
jae
xlat
out
clc
jle
into
adc
stc
fstpt
cmp
faddl
jmp
jecxz
add
clc
in
dec
fs
cs
scas
data16
in
mov
push
xor
inc
cmc
mov
out
mov
mov
jg
rol
dec
dec
pop
push
xchg
xchg
aaa
or
cmpsl
ljmp
push
or
in
cmp
in
sahf
sub
cmp
enter
shll
add
push
mov
jmp
pop
dec
mov
scas
push
insl
int
lea
ja
sub
mov
dec
pop
aas
lea
pop
push
jecxz
push
xchg
das
mov
inc
enter
sbb
jne
repnz
adc
xchg
fs
popa
xchg
stos
cli
jb
jae
dec
shl
pop
inc
loope
add
shrb
les
jmp
aaa
mov
adc
fstl
sbbb
addr16
and
in
movsb
js
and
movsl
fsubr
loopne
jle
stc
inc
out
fildll
adc
aad
imul
sbb
sbb
loope
fiaddl
das
in
lock
mov
rclb
dec
in
push
movsl
int
mov
jae
idiv
rolb
pop
bound
mov
mov
xchg
mov
shrl
insl
lahf
push
xchg
cli
sti
sub
dec
cmp
push
mov
dec
jmp
push
in
pop
les
pop
sub
add
popl
jbe
pop
loopne
fcoms
jle
sub
out
jno
push
pop
das
popf
pushf
es
lea
and
xchg
std
sahf
lret
push
aad
xor
mov
stos
fidivrs
adc
loope
add
push
imul
int
xor
fs
mov
andb
movb
loopne
jo
dec
mov
mov
mov
dec
mov
mov
mov
int
push
and
push
out
enter
bnd
mov
inc
inc
jae
pusha
jle
dec
add
cmp
push
xchg
lret
lahf
mov
cs
push
sbb
mov
xchg
mov
leave
xor
sbb
jg
cwtl
or
nop
push
jb
test
push
add
js
xor
xchg
fcoms
xchg
out
sub
loop
aas
sub
lock
cli
inc
sub
ss
cli
mov
in
or
mull
cltd
or
aad
xorl
jbe
aam
cld
sub
outsl
inc
sahf
icebp
enter
dec
xor
mov
fwait
jae
data16
mov
ss
popf
lcall
cmp
xor
movsl
cmp
call
cmpsl
test
push
pushf
pop
in
jge
sub
insb
mov
call
xlat
push
dec
mov
cmp
sbb
adc
jp
and
inc
jne
subb
je
cmp
movsl
jmp
cmc
out
adc
mov
inc
dec
xlat
arpl
cld
add
add
hlt
clc
mov
data16
add
xor
roll
xchg
push
mov
xchg
fwait
je
inc
scas
mov
icebp
ja
or
xchg
fmull
sub
jmp
loope
xor
testb
push
adc
push
add
mov
sbb
or
movb
daa
aas
js
jg
lret
sbb
xchg
sub
xchg
dec
movsb
mov
lea
add
loope
cmp
lea
mov
sti
mov
call
push
xchg
push
and
sbb
inc
xor
divb
xchg
rclb
dec
andb
fldcw
push
mov
push
lret
shr
mov
daa
mov
iret
enter
je
fildll
adc
sbb
jmp
xchg
inc
sbb
ret
mov
int
lahf
pop
xor
sbb
add
mov
in
mov
xor
lret
loopne
fwait
xchg
xchg
cmpsl
xchg
lods
test
cmpsl
leave
dec
mov
mov
mov
lret
cmc
push
orb
sub
push
loopne
mov
popa
ret
addr16
outsb
lcall
xorl
js
or
fadds
leave
scas
lods
jne
xor
popf
push
shlb
mov
and
daa
and
jp
ret
lock
push
pop
je
push
xor
sbb
mov
jge
inc
stc
outsl
fsts
scas
mov
mov
sarb
cmpsb
mov
cmp
jl
push
loopne
sub
xchg
iret
jno
xchg
stos
and
jmp
ds
in
push
adc
ret
fsubs
mov
mov
pop
lahf
xlat
jns
push
outsl
mov
cmp
ds
shll
pop
dec
mov
pop
inc
push
inc
incl
pushf
cltd
bound
pop
jns
fsubr
in
mov
cwtl
icebp
and
adc
jne
mov
lret
out
es
daa
imul
cmp
sub
inc
pop
pusha
das
xchg
xor
enter
fcmovu
jno
fwait
sub
iret
add
push
fsubr
cmpsb
icebp
inc
rorl
leave
stc
push
orl
mov
in
adc
lea
and
hlt
mov
in
fnsave
pusha
push
xchg
ffree
and
ljmp
mov
pop
insb
outsb
xchg
imul
movsb
push
lock
inc
xchg
das
inc
cmpsl
hlt
push
mov
mov
popf
xor
mov
jl
fidivl
cld
ret
iret
sub
in
dec
loopne
sbb
xor
aad
inc
rol
pop
aaa
cltd
pop
adc
fld1
stos
xor
and
add
nop
mov
and
in
push
inc
pop
dec
loope
pushf
sub
mov
cs
fdivrs
imul
mov
jb
divb
lahf
inc
and
xor
add
adc
mov
and
test
mov
pop
sub
fucomip
stos
mov
mov
push
ljmp
stos
cwtl
and
gs
xor
out
shlb
enter
inc
clc
mov
aas
push
into
jns
loope
fmul
ds
sub
cmpb
test
cmp
and
pop
jnp
jmp
cwtl
lret
shrb
test
mov
inc
fsubs
or
mov
jne
adcb
or
pop
roll
test
mov
cmp
add
dec
jp
cmp
inc
fildll
data16
fs
popa
jecxz
jnp
add
add
lods
scas
push
loopne
enter
les
pop
jge
xor
sarl
xor
cs
shll
movsl
jo
enter
je
pop
adc
fsubrl
sbb
xor
faddl
cmp
mov
push
sarl
ds
lret
jle
outsl
subl
lock
out
xchg
and
mov
fcomps
adc
xlat
subb
loop
lret
mov
sub
jb
pusha
push
xchg
nop
enter
pushf
scas
lahf
and
ds
cmp
or
imul
cmpsl
mov
aaa
xchg
adc
fists
push
mov
mov
outsl
jno
cmp
pop
mov
mov
xor
sub
dec
dec
iret
sub
push
repz
inc
fs
and
lar
sti
or
cmp
ds
lahf
push
cld
ja
movsb
aas
and
rcll
movsl
roll
jnp
ss
mov
call
subb
xor
dec
pop
shll
shlb
and
adc
fbstp
outsl
inc
mov
xorl
mov
mov
jecxz,pt
pop
xchg
add
stos
insb
lcall
stc
mov
xor
or
add
xor
mov
lods
inc
sbb
cmp
pushf
adc
out
in
add
mov
pop
sbb
and
ret
mov
arpl
xor
xor
xchg
push
pop
jns
cld
pop
jge
and
insl
adc
mov
aam
adc
or
leave
inc
sub
and
mov
cmc
call
clc
in
cmp
inc
sub
jmp
or
js
mov
roll
push
ret
shr
fs
inc
imul
dec
sbb
jp
arpl
lea
cmp
int3
nop
loope
pop
inc
out
push
add
xor
and
cmp
outsl
or
sbb
cmp
sbb
push
popf
test
cmp
mov
sub
nop
and
jb
daa
mov
rcll
and
adc
dec
stc
xor
repz
in
les
inc
sbb
rol
sub
add
xchg
loopne
jecxz
xor
int3
jno
imul
nop
mov
lcall
clc
loope
les
in
repz
sub
bound
or
pop
rorl
adc
inc
sbb
orl
cmp
fsts
xlat
sub
add
push
rcrl
mov
fisttps
mov
aaa
testl
push
idivb
or
adc
arpl
mov
inc
ja
mov
xor
lods
sbb
or
aaa
sub
leave
xchg
fwait
sub
js
popa
movsl
js
notb
popa
movsl
cmp
xor
out
int3
pushf
mov
or
and
cwtl
jp
and
mov
inc
adc
in
das
jae
lcall
sahf
push
insb
fistpll
loop
rol
in
dec
inc
xor
xor
sbb
dec
xor
ret
push
stc
mov
lret
sbb
push
movsl
lahf
fucomp
iret
sub
sti
push
arpl
pop
es
sbb
mov
sub
xor
dec
ja
jno
sub
aad
jle
cmp
jae
xorb
and
add
push
movsb
xchg
outsb
enter
mov
dec
and
mov
push
mov
call
movsl
pushf
xchg
loopne
cmp
sbb
pusha
scas
adc
insl
popa
nop
xchg
adc
xor
xchg
add
je
popa
mov
inc
enter
inc
pop
mov
cmp
mov
popa
adc
imul
movsb
xor
inc
mov
fs
push
cmp
and
out
lds
lcall
pop
lahf
ljmp
cli
xchg
ficoml
mov
loop
cmovno
scas
rolb
adc
outsl
rclb
nop
clc
daa
jo
ret
pop
jbe
sub
sub
jl
rolb
mov
fdivrl
in
pop
imul
aas
lock
imul
test
mov
test
jmp
iret
xlat
mov
mov
mov
cmc
cmpxchg
mov
push
inc
popa
std
mov
hlt
cld
xchg
mov
movsb
pop
sbb
fisttpl
je
mov
pop
xchg
cmp
and
dec
mov
push
mov
mov
xchg
lds
or
popa
xor
clc
jle
nop
ret
lcall
mov
add
pop
fists
inc
out
aas
mov
sbb
mov
sbb
fisttpll
mov
cmp
adc
sbb
stos
mov
lret
aaa
adc
btc
adc
pop
adc
sbb
or
pop
push
xor
mov
mov
ret
pop
clc
add
aam
cwtl
cltd
fstl
push
fdivrl
sbb
or
es
sbb
mov
or
cltd
dec
insb
add
and
xchg
int3
cmp
xchg
dec
mov
sbb
std
aaa
fsub
and
in
bound
xchg
add
adc
out
lock
imul
jp
in
scas
rcll
add
jl
daa
sbb
pushf
adc
ss
mov
andb
push
sub
jnp
adc
cmovp
dec
mov
mov
push
ficompl
data16
jne
pcmpeqw
xor
mov
aad
pop
pop
fidivs
xchg
sbb
xchg
testl
dec
outsl
bound
or
mov
lret
fisubrs
adc
cltd
xchg
adc
push
in
and
jge
xchg
mov
mov
mov
mov
mov
mov
clc
fsubrs
mov
inc
adc
cmp
jae
inc
dec
mov
test
aad
fdivl
in
fldenv
or
pop
sub
push
sub
rorl
hlt
lds
cli
and
and
cmp
mov
fbstp
cmpsb
call
mov
pop
hlt
inc
pushf
imul
mov
leave
std
pop
int3
ror
dec
fisubl
mov
push
add
fwait
cmp
std
cmpl
mov
mov
adc
rcr
cmp
jg
dec
icebp
in
xchg
pop
xchg
sahf
fiaddl
ror
adc
inc
push
push
stos
imul
jne
aad
cltd
test
ss
jmp
jbe
xor
push
mov
lds
ss
in
mov
xchg
test
xchg
push
pop
and
sbb
mov
jl
jmp
jo
sbb
call
shrl
int3
mov
je
push
dec
mov
outsl
jge
mov
ljmp
daa
pop
and
sbb
inc
dec
sub
fmul
out
push
mov
test
cwtl
lea
scas
sbb
add
adc
push
out
enter
adcb
xchg
dec
fwait
daa
popf
dec
lock
psubd
pop
adc
mov
movsl
mov
xchg
incl
cmp
pop
lret
mov
aam
add
cmp
cmp
mov
addb
xchg
and
jl
cmc
pop
jmp
hlt
xor
jbe
pop
pop
orb
xchg
fcompl
gs
pop
rclb
sub
stos
imul
es
std
adc
out
jnp
mov
dec
and
inc
outsl
xor
mov
inc
fldcw
sbb
lret
ljmp
fwait
arpl
mov
or
shl
sarb
xchg
push
shlb
mov
xchg
xchg
repnz
jle
and
les
fisubs
cmp
call
rolb
in
div
lcall
sbb
out
pop
push
inc
fwait
enter
ds
or
jo
fwait
mov
inc
xor
xor
int
in
and
inc
sarb
pushf
adc
or
mov
outsb
pop
testl
lahf
xchg
sahf
ljmp
xchg
jae
push
arpl
ret
in
or
and
out
ret
jne
mov
cmp
scas
loop
pusha
mov
xor
mov
icebp
inc
cmc
fstps
jmp
fsubrs
rcr
in
roll
ljmp
push
cmp
pop
and
aam
mov
mov
mov
mov
xor
sub
dec
jg
insl
jae
out
jae
mov
in
fs
push
roll
add
pop
pushl
cmovo
jbe
outsl
mov
xchg
cmp
jge
or
movb
sub
add
cmp
dec
imul
nop
mul
outsb
or
gs
adc
scas
xor
fistpll
or
and
shll
sbb
fs
scas
push
out
sbb
xor
outsb
mov
sub
lea
mov
dec
ds
push
cmpsl
dec
cmpsl
repz
mov
insb
das
imul
pop
mov
add
add
das
mov
mov
test
lahf
sbb
push
jmp
mov
push
sbb
mov
ret
scas
lea
and
in
movsl
test
fcmovnb
aaa
and
jg
push
xlat
in
mov
inc
stos
jnp
xchg
outsb
xor
js
imul
adc
sub
mov
rclb
cld
xchg
xchg
sbb
ja
add
mov
pop
sub
mov
loop
inc
or
lds
lea
ficomps
test
or
insl
or
ja
jno
leave
fisubl
int
cmc
jb
aam
call
or
dec
sti
rorl
mov
fstpt
cld
mov
pop
cmpl
pop
push
shlb
lret
mov
scas
nop
into
push
movsl
cmc
or
pusha
mov
pop
sti
xchg
mov
mov
pop
xchg
mov
push
cmp
add
sbb
pop
jge
push
js
pop
imul
or
xchg
and
adc
nop
inc
jg
fidivrs
push
loopne
jo
hlt
inc
xchg
sarb
popf
xchg
xchg
xchg
push
daa
in
loop
mov
cmp
mov
sbb
inc
sbb
push
xor
ljmp
mov
xchg
mov
pop
in
shr
test
imul
ret
andl
and
in
nop
hlt
cmc
dec
sub
ja
insl
out
aaa
adc
ret
in
stos
aam
inc
gs
jmp
adc
cmp
cmpsb
cmc
insb
cmc
movups
call
push
scas
cmp
dec
cmp
js
mov
sub
mov
inc
and
int3
roll
jmp
lret
mov
int3
dec
or
xchg
int3
or
insl
insl
push
shr
ljmp
sub
movsb
jne
es
push
mov
add
andb
subb
mov
and
mov
fcmovnb
cmp
or
cmp
sbb
jb
insb
mov
out
ds
test
shl
cli
outsl
pop
jns
xchg
lds
mov
push
repz
sub
mov
mov
stos
iret
inc
loope
mov
push
or
mov
dec
ret
cltd
jbe
inc
mov
call
xchg
clc
data16
pusha
mov
outsb
insl
adc
sahf
pop
arpl
cmpb
adc
and
mov
stos
cmp
les
dec
or
mov
cli
mov
out
cs
jg
repz
mov
aas
push
cs
rcrl
movsb
test
jp
bound
test
lods
and
fwait
popf
test
fucomip
adc
popa
xchg
mov
cli
jl
test
push
and
pop
cli
fadds
push
cmc
lahf
jmp
inc
cmp
out
dec
or
adc
hlt
in
inc
in
sar
inc
add
cmpl
sub
cmp
mov
push
cmp
and
cmp
and
pop
cmp
mov
clc
cmp
mov
ja
mov
stos
inc
pop
icebp
mov
imul
dec
adc
jnp
stos
mov
pop
mov
faddl
icebp
int3
jl
cmp
adc
scas
sub
push
shrb
jecxz
xchg
cmp
cld
nop
popa
bound
out
dec
enter
jecxz
xor
xchg
jl
mov
into
lods
outsl
imul
or
jle
push
scas
and
shll
add
jp
mov
js
inc
shl
sub
pop
aas
jbe
push
push
iret
sahf
or
jp
std
clc
cmp
mov
shll
leave
jbe
cld
pop
jecxz
pop
add
bound
adc
mov
cwtl
jnp
mov
pop
adc
mov
pop
add
ret
sbbl
push
int
cvttps2pi
or
pop
icebp
addr16
xchg
push
push
jns
cld
dec
jo
inc
jo
aad
jl
mov
xchg
cwtl
mov
fwait
lcall
shlb
jns
loop
int
dec
lods
scas
pop
xor
fsubrl
or
mov
push
xor
xchg
movsl
cltd
in
push
adc
push
filds
dec
in
std
sub
push
xor
xor
sub
repnz
addl
test
xchg
addr16
push
and
jns
cltd
pop
or
mov
and
shll
xchg
push
das
inc
jno
xorl
iret
mov
push
push
jne
rolb
loop
js
adc
pop
daa
push
push
pushf
jle
jae
dec
aaa
subb
dec
das
les
adc
jg
add
sbbl
out
js
and
add
xchg
add
add
adc
push
jns
inc
jne
jnp
xor
and
xor
mov
add
outsl
loop
inc
ljmp
in
jne
movsb
mov
insb
mov
jmp
popa
pop
jmp
or
xor
cmovne
cmp
xor
clc
pop
in
mov
pop
cld
dec
xor
push
add
jecxz
cmpsb
mov
int3
int
sub
cs
inc
data16
in
psubq
push
or
enter
dec
add
cmp
jns
lcall
fst
mov
pop
sub
in
in
pop
add
mov
add
mov
call
pushf
repz
mov
enter
sbbl
pop
clc
shrl
clc
mov
jl
pop
icebp
cmp
stc
push
std
mov
mov
sbb
or
xor
das
test
dec
dec
mov
or
je
or
jb
lret
fisubs
scas
jecxz
sbb
scas
arpl
inc
shlb
mov
and
or
stos
xlat
cs
mov
mov
pop
adc
ja
dec
inc
scas
aaa
rcl
adc
xor
mov
cmp
repz
int
test
inc
out
aaa
jne
mov
push
xchg
stos
push
adc
adc
mov
mov
lahf
mov
or
push
sbb
xor
sbb
leave
in
sbb
push
jmp
dec
sub
mov
ficoms
mov
sti
sbb
les
mov
inc
xchg
and
pop
mov
hlt
out
push
js
jo
data16
xor
dec
aas
cwtl
sbb
or
adc
or
addr16
insl
outsl
pop
push
icebp
jnp
push
cmp
mov
cmpsl
aad
js
mov
dec
mov
fstl
out
popf
sub
dec
pop
xor
std
int3
stc
out
sbb
nop
mov
lret
jne
adc
insl
mov
out
pop
push
xor
mov
sub
sub
popa
jnp
lods
push
push
xor
jno
add
rolb
mov
and
fists
dec
mov
fucomip
test
add
jo
cld
out
adc
test
stos
es
jns
aas
add
or
hlt
cmp
mov
mov
cmp
lcall
je
dec
jb
pop
mov
mov
fidivs
cmpsl
into
movsl
rcrl
outsb
movsb
sbb
shl
adc
or
int
pop
pextrw
inc
pop
jg
cmpsl
popf
xchg
xchg
cmp
or
push
sbb
shrb
loope
mov
pusha
mov
xchg
hlt
inc
movsl
mov
push
addr16
push
loop
mov
outsl
add
lret
outsl
or
sbb
aam
adc
mov
add
jge
bound
cmp
jnp
cmp
into
in
push
out
dec
mov
dec
inc
inc
sub
xorb
mov
pop
cmp
sbb
dec
dec
cmp
scas
shlb
call
push
add
scas
mov
ja
and
imul
jmp
xor
lock
fdiv
or
loopne
sub
lock
pusha
ret
and
xor
jmp
adc
sub
jbe
sub
pop
ljmp
jne
mov
mov
push
les
adc
movsl
pop
pop
add
loopne
sahf
mov
cmpb
mov
and
dec
aam
mov
xor
xor
cmp
pop
stos
arpl
pcmpgtw
jns
jb
dec
addr16
xchg
and
pop
sub
std
jb
xchg
rcrb
inc
dec
xor
mov
popa
inc
adc
jp
fcmovb
sti
mov
dec
and
cld
jne
rcrl
sub
out
mov
jmp
jb
xchg
jbe
xchg
in
inc
mov
call
pop
fadds
mov
cmp
sti
ret
mov
sbb
sbb
push
ja
sbb
mov
jb
cmp
or
iret
inc
loope
daa
and
sti
xchg
inc
movb
out
push
and
mov
repz
mov
push
and
sub
sbb
or
enter
pop
dec
lcall
lcall
adcb
or
mov
into
lret
jp
cmp
sbb
xor
jmp
jo
xchg
mov
arpl
mov
mov
mov
cmp
popa
mov
and
push
pop
dec
stc
xchg
sub
push
dec
xor
lret
xchg
or
push
mov
xor
jno
stos
jnp
lock
insl
roll
sbb
cmp
scas
test
sub
lret
push
les
mov
pop
fcomip
jp
sbb
test
push
push
das
cvtps2pd
sar
mov
scas
inc
test
pop
aas
pop
push
jp
sbb
mov
xor
in
or
mov
sbb
push
pushf
xor
xchg
mov
xchg
xchg
jne
inc
mov
xchg
in
dec
sbb
and
addr16
mov
jo
mov
mov
dec
aad
and
fldcw
mov
pop
mov
or
dec
testb
pop
inc
dec
divb
adc
xchg
pop
jp
sub
daa
cmp
aas
inc
mov
es
fidivrl
push
ret
push
mov
inc
gs
gs
test
xchg
adc
mov
jecxz
sub
xchg
push
leave
cmpsl
in
mov
pop
test
das
jno
mov
xchg
stc
arpl
cld
insb
dec
mov
pusha
pop
aaa
jbe
mov
cld
aas
push
lods
popa
mov
sub
jecxz
fidivs
xchg
mov
and
es
lret
in
and
sub
pop
cmp
das
fsubl
into
adc
mov
push
add
push
aas
sti
and
jae
mov
push
ja
mov
mov
mov
mov
mov
and
addb
inc
mov
cmp
cmp
ret
push
test
addr16
lds
out
pop
xchg
outsb
std
mov
js,pn
sub
cmpsl
daa
dec
ret
dec
ja
inc
jb
rcl
ret
lea
xor
or
push
loop
push
pop
insb
pop
sbbl
pop
sub
pop
xchg
xor
sbb
fs
or
jbe
add
xchg
movsl
lods
cmp
movb
out
cs
inc
mov
and
fs
dec
fbstp
push
xor
or
cmp
loop
xchg
fiaddl
fcmovnbe
push
dec
in
aad
inc
rorl
push
int
or
push
xor
aam
jg
dec
loope
movsb
repnz
mov
xchg
xchg
fcomip
loope
cli
aaa
push
mov
sti
inc
and
sub
and
inc
icebp
cmc
fsubp
ljmp
shrb
clc
jp,pt
mov
push
call
inc
mov
test
les
mov
test
enter
mov
pop
jmp
pop
sub
cmpsb
scas
dec
pop
pop
push
clc
dec
lods
aad
divb
shlb
mov
push
or
aaa
cmp
int
push
arpl
ret
adc
fistpl
cs
jl
xor
or
imul
mov
fwait
sub
cmp
cmp
and
jmp
cli
in
cmp
ja
notl
jmp
lcall
xchg
inc
push
mov
dec
es
popf
iret
cmp
cmp
and
mov
loop
inc
mov
adc
fnsave
jmp
negb
cwtl
pop
shrb
lret
lea
mov
lcall
ljmp
dec
test
xor
iret
mov
jg
in
xchg
loopne
inc
rol
push
into
dec
jmp
jne
sub
insl
enter
pop
cwtl
cmc
shlb
addr16
sbbb
adc
jmp
xor
inc
push
lret
xchg
je
inc
and
sub
cmpsb
push
out
imul
sbb
xlat
fisubrs
mov
pusha
push
push
add
aas
stc
and
push
lods
mov
adc
jb
adc
xchg
clc
cmpsb
push
subb
dec
mov
es
sahf
xchg
ljmp
cmpsl
jp
imul
test
fsubrp
push
lods
imulb
xchg
outsb
and
xchg
jp
movsl
hlt
lock
pop
and
xor
inc
enter
sub
add
ret
nop
inc
in
sub
push
jo
mov
cmp
imul
jne
jmp
sub
mov
adc
in
sbb
sub
test
sti
ljmp
push
dec
popa
imul
in
or
sbb
lods
hlt
jae
stc
out
push
pop
and
dec
fcoms
pop
repz
pop
loope
push
inc
in
sarl
inc
inc
or
xchg
bound
sahf
ljmp
cmc
sub
cmp
push
jl
pop
test
push
lods
inc
adc
xchg
adc
xchg
testb
pushf
call
ret
mov
mov
ljmp
fistpll
pusha
jbe
and
mov
add
inc
xchg
cmp
mov
jle
insl
leave
insl
js
ja
dec
mov
inc
jge
and
add
enter
lcall
jg
xchg
xchg
jo,pt
mov
stc
cmpsl
ret
xchg
sbb
addr16
les
dec
nop
mov
pop
push
into
xchg
mov
in
repnz
sub
jns
push
push
jl
rcr
repnz
icebp
jp
mov
mov
mov
ss
ficomps
and
jecxz
xchg
adc
or
test
filds
loop
push
rorl
mov
mov
mov
sub
pop
and
into
mov
mov
pop
cmp
dec
add
or
or
aaa
out
jnp
adc
out
or
sub
ljmp
mov
mov
push
fldt
jmp
mov
mov
jne
adc
stos
push
adc
cmp
std
inc
fs
xor
test
inc
cmpb
in
pop
in
xor
ret
mov
adc
push
lods
movsl
arpl
das
call
xor
imul
mov
inc
jle
sbb
cmp
lods
loope
lahf
fiadds
stc
andl
push
outsl
jne
ret
dec
test
dec
test
mov
arpl
push
jecxz
sahf
fbld
mov
fidivl
mov
andl
ds
or
rcr
stos
xor
js
push
lcall
outsb
sahf
popf
pop
fucomp
insb
sub
xchg
mov
or
xchg
fstpl
mov
out
test
lock
mov
fidivrs
js
or
fs
jae
subb
or
push
fucom
stos
es
jo
push
and
cmp
insb
adc
imulb
xor
pushf
lahf
dec
insl
pop
xchg
daa
mov
xchg
fsubrp
fildll
cmp
sub
xor
rclb
jmp
ja
repz
shlb
push
cmp
dec
mov
test
adc
push
aaa
and
sti
push
pop
sbb
inc
ja
outsb
pop
scas
adc
loope
pop
mov
jb
pushf
ja
jae
les
lahf
dec
mov
fcomp
sub
mov
and
jnp
add
sub
ret
sahf
negb
pop
scas
xchg
adc
js
into
pop
push
inc
jl
icebp
ficompl
std
push
das
jae
mov
sbb
test
nop
dec
sbb
das
add
cltd
das
out
add
or
pop
and
adc
lods
das
mov
fsubrs
add
aaa
outsb
shrb
inc
fiadds
xor
sbb
call
sahf
ret
scas
in
jb
shrl
aaa
lea
sub
imul
dec
daa
stos
push
lods
push
rorb
subb
test
out
mov
push
out
mov
dec
mov
and
in
jecxz
cmc
cmc
ss
sarl
push
pop
push
outsl
mov
inc
movsl
shlb
and
cmp
and
jns
mov
mov
xchg
fistl
dec
inc
xor
mov
push
sbb
xor
sbb
cli
sarb
mov
jae
push
enter
jne
mov
outsb
cmc
push
push
mov
ss
add
jne
jmp
add
movsb
inc
fistps
jns
repz
xchg
inc
arpl
andl
cmpb
lods
pusha
enter
cmp
daa
mov
sbb
push
hlt
pop
push
pushf
push
xor
cltd
inc
aam
pushf
iret
fsubp
mov
push
fbld
rorb
sub
call
aas
mov
testl
in
arpl
mov
daa
in
inc
cmpsl
movsl
dec
mov
mov
mov
jg
push
cmp
in
sub
loope
push
xchg
cltd
rcl
nop
push
adc
pusha
mov
adc
push
xchg
sub
dec
lods
sbb
add
fildl
push
adc
jge
or
mov
cwtl
mov
or
test
push
lods
pop
test
adc
sub
push
out
mov
pop
adc
addb
test
sahf
cmpsl
in
pusha
outsb
test
or
lcall
dec
addb
push
xchg
mov
mov
scas
stos
orb
out
sarb
pop
dec
popf
dec
repnz
lret
fwait
imull
push
aam
fidivrl
and
jmp
mov
into
dec
push
push
fdecstp
pop
js
mov
dec
iret
imul
aas
mov
dec
dec
push
ja
ret
xchg
test
shrl
test
in
inc
fists
cli
mov
loop
stc
stos
out
cmp
add
pop
pop
daa
inc
mov
cmpsl
adc
or
mov
out
popf
ficomps
mov
loop
lods
lea
mov
loope
sbb
or
incb
push
and
out
popa
mov
ret
cwtl
inc
jl
xor
cld
xchg
xchg
add
sub
jp
ret
mov
xchg
decb
cmpsl
addr16
aad
loope
add
or
insb
test
inc
std
or
inc
pushf
push
sbb
cmpsb
popa
pop
fnsave
jmp
test
sub
cld
push
cmp
and
insl
out
loopne
add
stos
outsl
jb
push
movups
out
sub
mov
adc
fstps
add
push
xorl
andb
les
out
inc
xchg
fmuls
mov
jno
xor
dec
sti
adc
mov
fmuls
mov
dec
popf
xchg
sti
mov
insb
cs
mov
sbb
call
aaa
scas
shl
loop
cld
pushw
mov
aas
and
pop
pop
adc
subl
mov
cmpsl
aaa
adc
mov
fs
pop
mov
pop
cmpsl
sahf
arpl
loop
mov
sub
pop
sub
into
in
jecxz
loop
jl
mov
pop
jge
xor
mov
imull
mov
cmp
orb
insb
aaa
xchg
out
js
leave
ljmp
or
or
das
push
xchg
ljmp
pop
fisttps
push
ret
popa
fwait
sub
cs
mov
ljmp
cmp
data16
loopne
cwtl
clc
or
cmp
xchg
jp
cs
stos
xchg
lds
xor
sub
les
push
or
popa
lret
imulb
mov
mov
pxor
xchg
test
addr16
arpl
xchg
xchg
shrb
mov
lods
inc
popf
ret
fwait
es
cmp
pop
loope
mov
dec
cli
ds
xchg
roll
inc
movsb
and
out
icebp
clc
lock
scas
popl
int3
dec
mov
mov
lcall
jo
pop
aaa
outsb
jae
xorl
push
adcl
push
mov
int
cld
lret
push
mov
incl
in
adc
mull
adc
sub
and
test
popa
pop
enter
dec
in
mov
popf
mov
inc
adc
insl
mov
fldenv
cli
enter
test
hlt
add
push
or
filds
ror
test
gs
mov
cmp
add
inc
insb
mov
inc
out
push
cmp
addr16
jbe
pop
lcall
add
mov
pop
es
adc
mov
jne
and
std
add
push
enter
test
aad
push
cmp
repz
sbb
inc
xchg
test
iret
lahf
push
adc
test
or
push
mov
in
cmovbe
imul
aam
jb
ss
mov
lcall
pop
bound
in
lods
ret
adc
out
xor
mov
push
cwtl
mov
sahf
xchg
push
push
insl
loope
fsubr
enter
mov
jl
nop
xor
lea
or
inc
ffree
das
rorb
daa
xor
mov
cmp
xor
adc
testb
insl
inc
stc
das
pop
dec
test
ret
int3
mov
stos
push
enter
out
popf
jl
fdivs
xor
out
insl
mov
xchg
in
push
xor
xchg
dec
adc
jne
test
mov
fsubrl
inc
jnp
add
stos
and
dec
pop
scas
jbe
mov
insl
lock
test
inc
or
push
jns
in
nop
push
in
shl
fcmovnb
jp
icebp
adc
mov
insb
into
out
icebp
int3
loopne
pop
mov
push
sahf
imul
in
lods
mov
mov
sub
jmp
loop
in
insl
ja
clc
sub
xor
in
and
stc
xchg
push
and
test
mov
in
cmp
or
mov
xor
or
xor
jno
mov
lock
jno
and
aaa
cld
sub
sub
rclb
jmp
or
aaa
xor
xlat
add
sub
dec
adc
fisubl
test
frstor
and
pop
les
idivl
and
sbb
test
mov
jbe
enter
daa
push
mov
adc
ret
mov
push
push
mov
out
ret
sar
repnz
lds
andb
loop
gs
rcrl
iret
cmpb
repz
jae
aam
std
les
sbb
sbb
and
nop
jo
insb
out
imul
cmp
out
pop
movsb
pop
nop
cmc
pop
cmpsb
add
sahf
andb
loope
or
pusha
leave
mov
rcrb
cmc
pop
add
push
push
mov
dec
jo
fs
rcl
jno
js
aam
mov
pop
fdivs
xor
sbbb
adc
orb
xor
sub
adc
std
xchg
leave
imul
test
or
fmuls
lcall
cmp
mov
sbbb
dec
bound
scas
xor
lahf
lret
and
jp
push
fisubs
xlat
and
movsl
test
in
ja
lds
hlt
repz
stos
loop
js
outsl
les
dec
popf
popa
dec
sbb
pop
ret
sub
sub
lcall
xor
ss
xchg
sbb
nop
rcr
inc
cs
xchg
mov
xorl
orl
incl
push
ja
out
std
mov
push
and
add
les
push
ljmp
sub
iret
xor
cltd
ret
or
jnp
cld
sub
add
push
sahf
pushf
mov
cmp
jmp
jp
loope
bound
aaa
push
ljmp
insb
push
mov
mov
xor
lods
mov
loopne
pushf
rolb
icebp
data16
sub
and
pop
dec
xor
adc
sbb
jb
int
mov
lret
adc
cmp
test
jge
ja
jg,pn
mov
scas
pop
add
jo
fldl
cmp
flds
push
loop
push
adcl
fimull
or
push
push
pop
aas
je
test
jg
cmp
fs
imul
fldenv
loop
cltd
sbb
das
lock
cmp
mov
push
xchg
add
data16
mov
js
pop
jns
movsb
popa
dec
inc
mov
andl
dec
push
or
or
in
push
push
jo
fs
repnz
xchg
mov
loopne
mov
imul
sbb
xchg
clc
add
cmc
and
cmp
outsl
js
xor
fwait
lds
xor
daa
inc
gs
and
loop
in
dec
clc
sbb
lret
ljmp
sbb
xchg
cld
stos
jmp
inc
mov
dec
jle
test
jp
sti
mov
sub
mov
xchg
mov
sbbl
xor
bound
movsl
outsb
mov
andl
mov
push
inc
xor
call
push
movsl
cwtl
mov
outsl
mov
shll
fimuls
iret
jecxz
push
sub
call
scas
lock
mov
shll
loop
add
cmpsl
jne
cwtl
aas
mov
int3
xchg
sub
rorl
jns
scas
adcl
xor
add
xchg
bound
cmpsl
icebp
push
shll
mov
out
mov
or
ss
or
imul
adc
inc
shr
pushf
pop
push
icebp
pop
iret
pop
pop
aaa
pop
sarb
in
loop
fbstp
imul
cmp
inc
in
push
ret
out
ret
repnz
sub
xchg
out
xlat
je
scas
bound
pop
and
dec
stos
scas
in
jg
push
pop
movl
in
jns
stos
test
dec
mov
mov
ret
push
jmp
cmpsl
cmpb
xor
and
nop
or
lret
push
sbbb
add
enter
jmp
sarb
mov
inc
xor
rcll
scas
pusha
cmp
sub
test
pop
lock
les
dec
lret
or
mov
jb
filds
sub
mov
repz
or
jo
pop
sbb
push
inc
sti
in
ja
fidivl
hlt
mov
in
sub
pop
int3
pop
and
push
aas
mov
iret
std
out
jb
inc
test
jle
push
sbb
pop
jns
sbb
mov
fbld
cli
lahf
fidivrl
sbb
and
imul
push
inc
mov
into
dec
les
aas
jge
sub
xchg
adc
mov
push
imul
pop
sub
mov
and
xchg
pop
leave
mov
mov
sbb
outsb
lods
pop
xlat
lods
lret
scas
push
outsb
mov
mov
aam
sarl
and
ljmp
lret
fists
xor
cmpsb
nop
dec
jno
hlt
movsb
in
inc
movsb
fstpl
out
mov
out
add
fwait
sbb
push
mov
or
fs
insl
pop
addl
jmp
inc
shl
xchg
jle
insb
sub
ss
xlat
or
mov
aas
sub
ret
dec
out
in
xor
inc
mov
outsb
lret
push
push
xchg
cmp
and
lods
into
jge
pop
jmp
add
sub
dec
jl
mov
test
rclb
test
or
xlat
stos
or
inc
add
mov
in
das
lret
jno
sbb
adc
jp
orb
loopne
sub
cmpl
mull
ret
push
in
pushf
adc
mov
inc
dec
imul
cmpsl
insb
mov
inc
pushf
pop
cmp
hlt
lods
sbb
mov
mov
rcrb
xchg
push
adc
loope
js
inc
lods
and
mov
out
cmp
pop
aad
scas
pop
add
movsl
fstpt
pop
in
push
cmc
or
cmpsb
and
jae
pop
push
fwait
in
push
jle
loopne
xlat
inc
push
test
inc
rorb
pop
aad
out
shlb
test
cmp
movswl
pusha
dec
aam
push
sysenter
bound
and
fcmovnbe
pop
dec
femms
pop
cs
add
or
xchg
mov
or
fwait
and
aas
aam
arpl
and
js
sub
xor
xor
lods
inc
mov
daa
cmpsl
xorb
inc
clc
xor
arpl
sbb
loopne
add
jne
mov
sub
mov
fidivrl
pop
in
mov
pop
xchg
xchg
fwait
scas
xchg
insb
in
push
jle
mov
mov
into
lahf
aad
inc
mov
pop
or
jbe
lods
cmp
es
add
adc
out
imul
or
adc
lods
push
lock
cwtl
imul
mov
jp
cmp
pop
sbb
mov
orl
xor
aaa
push
rcrl
jae
js
mov
push
sbb
inc
sub
push
jae
mov
fbld
lods
insb
bound
call
imul
jg
xlat
xor
sbb
adc
jae
js
mov
fdivl
cmpb
in
sub
cmp
cltd
clc
xchg
push
lock
or
dec
test
sbb
enter
push
or
push
pop
nop
into
fcmove
mov
inc
pop
hlt
mov
inc
subb
lret
sub
or
popa
pushf
xchg
pop
sbb
mov
push
pushf
mov
pop
push
pop
xor
dec
lods
xchg
and
pushf
push
jo
jno
dec
mov
push
insb
mov
jo
and
push
jp
mov
std
adc
mov
add
scas
or
cmp
jae
lret
mov
push
cmpsb
pop
inc
pop
in
hlt
out
xor
dec
pop
sti
data16
adc
mov
pop
notl
test
pop
rolb
mov
push
jge
cmp
push
pop
shr
cmp
int3
test
sbb
inc
dec
rcrb
rcrb
mov
mov
inc
push
call
mov
ljmp
fcmovu
mov
xchg
add
std
mov
pop
dec
lods
and
pusha
daa
repz
enter
das
xor
sbb
outsl
cld
xchg
pop
inc
leave
push
cmp
sbb
inc
jo
pop
add
sub
cwtl
mov
mov
push
push
addr16
xchg
clc
call
out
sbb
and
clc
mov
or
xor
enter
repz
cmp
lcall
mov
insb
jns
imul
addr16
jecxz
sar
fwait
dec
in
or
repz
or
lods
xor
inc
xor
imul
inc
cmp
add
dec
icebp
clc
sub
rorb
call
cld
cs
in
aas
push
fcoml
gs
jo
mov
lods
fidivrl
push
sub
inc
arpl
mov
pop
mov
or
test
ljmp
clc
fmull
in
shl
or
inc
jo
aad
faddl
sbb
adc
pop
or
nop
inc
cs
xchg
dec
cli
fimuls
lods
or
dec
push
pop
push
cmpsl
or
pusha
sub
sti
push
in
addr16
dec
push
into
call
jae
mov
mov
jp
push
dec
ffreep
fs
fsubp
bound
mov
xlat
hlt
push
mov
jns
sub
cli
sub
out
jmp
xor
lret
mov
sub
inc
les
pop
sahf
adc
popa
pop
jl
pop
xchg
int
or
dec
rorb
gs
repnz
xor
fistpl
ljmp
mov
or
rolb
cmp
jmp
nop
jmp
add
mov
xor
push
add
adc
xchg
jb
out
jbe
jg
mov
repnz
or
xchg
aam
imul
stos
arpl
fxch
jbe
inc
jl
xor
mov
test
jg
and
subb
das
mov
xor
inc
sbb
xor
push
lret
ret
cltd
repz
dec
aaa
sub
mov
imul
ficomps
mov
sub
inc
inc
pop
xchg
or
int3
scas
jg
mov
fcoml
lret
es
and
inc
lods
pusha
mov
rcll
pop
xchg
imul
in
sub
cld
mov
push
pop
icebp
cmpsl
scas
repz
rcl
fchs
cmp
ret
test
stos
aam
inc
pop
push
or
push
push
and
jmp
cli
or
out
inc
shl
xor
dec
pop
dec
dec
xchg
jbe
push
jmp
test
lret
mov
jbe
bound
pop
mov
stos
scas
or
lcall
xor
ljmp
mov
xchg
mov
ljmp
shr
insb
ds
cs
push
mov
and
mov
das
adc
pop
lcall
mov
cmpsb
mov
and
insb
xchg
popf
sbb
cld
xchg
repz
mov
inc
insb
xor
out
pop
inc
and
xchg
cmp
icebp
mov
addl
enter
adc
jle
sbb
into
pop
subl
in
jne
pop
in
fidivrs
fnstsw
cmpb
inc
cmp
test
push
lea
sbb
ljmp
cli
cld
mov
dec
sbb
and
lret
cmpl
pop
xor
inc
jle
aas
pop
mov
pop
aam
aas
add
rorb
cmpsb
test
fistpl
insb
mov
fsub
xor
in
mov
sub
lock
iret
lcall
cmp
mov
push
imul
fbstp
adc
jb
mov
push
adc
lock
mov
mov
mov
shlb
and
and
adc
or
inc
popa
sub
es
dec
lods
sub
inc
add
mov
nop
daa
jnp
push
bound
scas
jl
nop
sub
push
mov
test
mov
cmp
push
scas
jecxz
nop
mov
mov
loopne
or
cmpsl
push
test
mov
call
fwait
pop
sbb
movl
sbb
or
js
out
or
cltd
movsb
and
jbe
jo
pop
shrb
mov
cltd
push
pop
fsubs
or
mov
jl
into
cmp
int3
mov
mov
lock
pop
outsl
in
aaa
loopne
pop
mov
pop
add
fldcw
mov
je
jmp
shlb
jle
inc
add
decb
repnz
les
lds
mov
ljmp
lret
push
push
aas
sub
xor
orb
jecxz
adc
pop
loope
mov
cmp
loopne
hlt
pop
fwait
popf
jl
sti
cmp
fdivrl
or
sbb
cmp
push
push
int
in
rcrl
add
mov
aam
mov
xor
into
jbe
fadds
clc
mov
xor
lds
jb
test
xor
loop
lds
int
lods
xchg
pop
out
orl
or
pusha
lret
dec
test
jne
cmp
ror
out
dec
arpl
ret
call
stc
sbb
sets
cwtl
or
mov
add
das
cld
pop
mov
sub
mov
outsb
jne
sub
not
dec
adc
xchg
adc
mov
xor
cmpsb
mov
mov
in
push
icebp
mov
fbstp
aam
mov
repnz
inc
je
and
andb
jge
inc
in
pop
lahf
fwait
and
sbb
xor
xorl
leave
imul
rcr
sub
into
gs
dec
out
sarb
sbb
mov
pop
outsb
lcall
adc
xchg
cmp
sub
dec
dec
pop
rcrb
dec
sub
inc
mov
push
test
dec
imul
test
xchg
fdivrl
cmpsb
aam
add
or
mov
sub
xor
insb
rolb
fdiv
scas
mov
adc
clc
pushf
adc
mov
in
icebp
push
mov
out
repz
enterw
pop
shlb
gs
sub
lret
or
mov
mov
cmp
test
push
cmpsl
and
jmp
cs
shll
pop
jae
push
mov
lcall
xchg
or
lods
sub
xchg
mov
mov
stos
pop
test
sbb
push
fstpl
mov
push
fsts
out
adc
cwtl
and
fiaddl
mov
mov
sbb
mul
fsubs
out
and
and
lcall
fadds
mov
push
jp
icebp
int
js
fcoms
adc
lods
sti
das
cli
sub
jp
cwtl
aaa
das
loopne
mov
hlt
js
jge
mov
lahf
push
add
mov
scas
sub
push
lahf
fsubrp
cmp
push
sbb
jb
mov
adc
int
jecxz
mov
aas
sbb
inc
mov
test
mov
loop
js
xor
push
mov
cmp
adc
mov
add
iret
adc
int
ljmp
pop
aaa
push
test
bound
push
int
mov
int
jmp
daa
mov
loopne
or
stc
fdivrs
inc
popa
jg
cmc
sub
pusha
in
mov
fidivs
pop
fsubrs
mov
fsubrl
insb
addr16
loop
inc
mov
and
test
pop
xchg
aad
jg
cltd
dec
and
cmp
pushf
notl
imul
push
inc
xchg
pop
test
pop
movsb
ja
jae
outsb
pop
xor
cmp
xchg
lea
inc
cld
xchg
jle
ret
mov
push
shlb
push
mov
inc
cmp
sub
mov
lret
hlt
push
lds
cmp
stc
out
ds
inc
cmp
test
stc
push
dec
inc
jne,pn
xchg
pop
rorb
lock
les
aad
pop
orl
pop
pop
push
or
mov
ret
pop
jl
sbb
inc
ljmp
out
dec
repz
add
mov
rcl
xchg
mov
jmp
push
pavgb
imul
and
ds
add
dec
xor
push
dec
scas
aam
insb
dec
test
insb
in
push
add
cmpsb
mov
jg
addr16
inc
mov
es
jo
scas
lods
popf
add
ret
xchg
repnz
aaa
sub
cwtl
lods
cltd
push
out
push
hlt
loope
cli
test
or
and
cmpsl
lock
jmp
mov
shll
lcall
cmpsl
lds
pop
aam
popf
xlat
mov
xchg
cmp
movsb
mov
sub
jne
stos
pop
fisubl
sarl
subl
inc
jo
jge
sbb
in
cmp
add
push
xchg
dec
out
xor
test
cmpsb
xchg
push
mov
fcompl
int3
fistpll
jp
sub
jle
pop
shl
leave
adc
sahf
xchg
add
movaps
xor
pushf
pop
sbb
cs
das
arpl
pop
dec
aas
pushf
pop
xchg
nop
out
js
adc
mov
sahf
mov
dec
or
rcrl
es
add
xchg
mov
sbb
daa
push
lret
arpl
repz
nop
add
add
aad
push
sub
mov
xor
cltd
test
xchg
clc
nop
bound
repz
sbb
in
jae
testl
inc
movsb
jl
mov
mov
or
out
sbb
mov
aaa
addr16
pop
mov
movsb
and
movl
sar
das
out
pusha
iret
or
lcall
sbb
xor
jmp
push
je
add
inc
shlb
mov
imul
mov
pop
mov
dec
sahf
int3
int3
push
xchg
pop
fscale
xchg
sti
push
push
mov
pusha
xchg
push
sub
or
and
mov
and
mov
pop
sarb
lret
pop
les
push
pop
in
test
mov
pop
icebp
sub
jnp
mov
xchg
xor
push
outsl
inc
mov
and
sahf
dec
jmp
jmp
xor
mov
or
dec
jl
jae
fiadds
lods
adc
dec
lcall
sbbb
movsb
jp
pop
or
or
xor
mov
xchg
pop
adc
sub
adc
inc
sbb
test
cmc
mov
jl
sbb
mov
stc
mov
add
test
jns
xor
sti
ss
nop
and
fdivs
adc
dec
jae
loop
add
cmp
push
fimuls
push
push
or
pop
cmpsl
fbld
pusha
add
push
test
shlb
hlt
sub
out
bound
pop
pop
sahf
mov
call
push
lcall
pop
push
fisubrs
adc
or
pmaddwd
fcomps
loop
cwtl
xor
divl
mov
xchg
mov
push
xor
insl
js
in
push
mov
mov
mov
or
fbstp
jecxz
shl
pop
sub
push
cmp
sub
adc
pusha
mov
mov
pop
test
dec
or
xchg
mov
pop
notb
push
lea
cmpsb
add
aam
jno
iret
notl
sub
jle
gs
mov
adc
ja
sahf
fmuls
clc
shr
sbb
xchg
and
mov
xor
je
cmp
negb
es
xor
xlat
xor
imul
sahf
push
jmp
aad
push
xor
test
jmp
cltd
fs
mov
jb
add
leave
sub
in
roll
xchg
into
and
sub
in
adcl
cmp
lods
leave
pusha
rcl
pop
cmp
in
cltd
pop
add
sub
mov
ljmp
shr
cmp
xchg
xchg
inc
pop
push
repz
push
sbb
mov
mov
cmp
fdivl
enter
leave
cli
mov
jnp
mov
cmp
mov
pop
push
out
daa
jg,pt
xchg
pop
lods
mov
pop
jae
push
or
movsl
aas
cmp
push
mov
xchg
and
or
pop
mov
scas
imul
in
test
add
wbinvd
push
add
pop
cmpsb
fcoms
jae
dec
outsl
add
sti
lret
and
add
jge
xchg
mov
xchg
lods
jp
sub
add
fwait
es
dec
out
hlt
jle
sbb
pop
xorb
daa
in
xchg
pop
movsb
pop
jbe
mov
push
adc
jl
mov
stc
push
adc
call
pushf
fnstenv
ja
xchg
pop
inc
or
push
xchg
out
sbb
mov
and
loopne
ljmp
push
dec
insl
scas
fcomps
data16
cli
xor
mov
cmp
adc
push
ja
stc
sti
dec
andl
dec
xchg
xor
jae
xchg
popa
aam
adc
repnz
xlat
dec
add
loop
cltd
ljmp
jne
push
pop
pop
test
out
call
popf
push
es
daa
dec
xchg
jnp
outsb
fs
add
xchg
pusha
popa
inc
pop
mov
data16
shrb
mov
test
mov
setl
cmp
mov
mov
loopne
dec
xorb
pop
jecxz
inc
ret
push
lods
and
jle
sarl
mov
dec
push
inc
push
cmc
jmp
jnp
inc
push
ds
cli
jnp
out
cmp
cmpb
mov
jle
outsb
and
in
std
xchg
adc
loop
testb
ljmp
enter
fiadds
loop
mov
out
test
in
sbb
mov
sbb
xchg
xor
push
or
adc
fldt
dec
imul
dec
xchg
push
pushf
jo
andl
dec
jp
sti
adc
jns
jns
inc
pop
fistpll
pop
mov
movsl
fmuls
sti
push
mov
sbb
cmp
xchg
adc
or
mov
movsl
into
push
mov
add
pop
aas
sub
add
imul
into
movl
jge
mov
mov
jae
inc
push
addb
clc
and
sbb
inc
dec
adc
test
mov
mov
arpl
mov
push
sbbl
hlt
lahf
aam
pop
mov
add
or
shl
ss
les
mov
arpl
in
dec
mov
ror
pop
jbe
fisttpll
sbb
rclb
xchg
sbb
fwait
xchg
dec
fwait
xchg
xchg
xor
push
adc
mov
insl
mov
int
mov
cmp
push
test
int3
popf
loopne
and
daa
daa
adc
push
push
imul
jb
push
nop
cmp
mov
add
packssdw
and
out
sub
pop
icebp
dec
jle
dec
lock
ret
sub
jecxz
sbbb
adc
sub
test
sub
mov
and
jne
mov
mov
jl
mov
es
cmp
add
inc
aad
jmp
ror
lock
out
ret
fdiv
cld
mov
xchg
scas
inc
insb
cmp
sub
data16
mov
push
repz
or
push
in
or
mov
cli
mov
inc
bound
ret
stos
cltd
adc
or
subl
int
das
sub
inc
sub
nop
inc
jbe
add
mov
insb
jg
int
test
loope
dec
and
cmp
fadds
sbb
sub
xchg
dec
outsb
cs
popf
enter
cmc
cmp
loop
mov
push
not
adc
insb
mov
mov
sub
push
scas
add
pushf
or
mov
dec
cmpsb
mov
cwtl
sbb
add
sbb
std
aam
inc
bound
jbe
mov
movsl
divl
cmp
adc
into
mov
sbb
adc
loop
pop
pop
inc
mov
loop
inc
pushf
ja
cltd
and
scas
popa
xchg
add
mov
or
in
push
or
sub
inc
or
ret
sub
xor
mov
shlb
push
pop
push
inc
mov
js
push
hlt
mov
out
sub
sbbl
es
psubusw
stos
add
inc
pop
mov
lcall
bound
xlat
jne
aaa
mov
dec
xchg
std
xlat
cmp
jae
rorb
in
inc
aam
arpl
aas
incl
mov
xor
iret
mov
sbb
gs
push
inc
stos
lods
xor
push
das
or
movsl
push
pop
dec
or
xor
adc
xor
add
push
test
cwtl
testl
sbb
sahf
cmp
push
push
mov
sahf
inc
iret
leave
xor
out
or
jmp
xor
push
dec
inc
imul
xor
dec
hlt
nop
pop
inc
shll
in
push
pop
push
mov
jae
call
push
fchs
stc
insb
enter
add
icebp
bound
xor
adc
pop
inc
push
gs
xchg
cmp
ficoml
dec
mov
mov
mov
loop
jle
js
add
inc
mov
daa
xchg
pop
cmp
imul
dec
loop
cmp
test
test
inc
mov
loopne
cmp
je
xchg
popf
and
dec
js
adcl
dec
cmpsb
pop
int3
cmp
mov
mov
js
mov
lret
adc
mov
cmc
push
gs
adc
mov
cmp
hlt
mov
imul
inc
lods
je
sub
sub
in
clc
or
pop
mov
iret
cltd
inc
sti
nop
idivb
or
cs
addr16
cmp
rol
mov
adc
cltd
subb
out
xchg
xor
js
ljmp
add
sub
cmp
jnp
cmp
mov
dec
ss
icebp
lret
cs
insl
mov
arpl
mov
fstps
lahf
cltd
mov
fnstcw
ret
fiaddl
jmp
cmp
and
lods
mov
fists
sub
fsub
gs
jl
rorl
sub
mov
push
shrl
sbb
outsl
enter
lds
test
cmp
push
push
pop
sbb
xor
cs
inc
leave
test
xorl
inc
jb
nop
pop
out
aad
pushf
jae
dec
mov
adc
clc
push
sub
arpl
shr
jge
xor
call
pop
shll
loope
test
lret
jne
pop
mov
xor
aaa
sbb
xchg
xor
jns
bound
or
or
enter
cmp
push
hlt
enter
lcall
std
sbb
jae
jno
mov
jp
add
rcll
fcoms
test
out
sbb
call
xchg
fistpll
into
dec
cltd
call
add
movsl
icebp
xchg
add
mov
aam
sbb
movsl
mov
adc
mov
outsb
dec
mov
orl
xor
push
test
pop
xor
or
xchg
fiadds
pop
sbb
pop
add
ljmp
mov
in
add
dec
das
sbbl
rcl
jg
outsl
adc
sub
jo
out
or
dec
enter
test
xor
mov
daa
xchg
and
cmp
sbb
sub
adc
std
stc
pop
xchg
lds
es
pop
lret
call
lcall
lods
mov
and
or
aad
sti
insb
or
movsl
clc
mov
pop
mov
xor
xor
clc
mov
enter
mov
push
xor
mov
lods
pop
push
aad
rcrb
jno
out
iret
mov
mov
xchg
subl
movsb
sti
int
jmp
cmpsl
adc
cld
xchg
dec
xchg
dec
xchg
add
stos
loop
aaa
ret
into
out
mov
jns
shrl
xor
cmpsb
data16
jle
iret
insl
cmp
jl
inc
adc
xor
sbb
mov
es
nop
mov
sub
mov
shlb
fcoms
inc
dec
jbe
add
outsl
sub
lods
pusha
sub
adc
cli
adc
cmpsb
test
and
cs
push
mov
loope
in
std
cli
les
add
icebp
add
xlat
pop
push
rclb
inc
mov
inc
jp
inc
push
dec
maskmovq
negl
mov
insl
sbb
mov
int
fists
or
pop
aas
push
push
mov
or
mov
or
iret
in
pop
in
inc
imul
lods
pop
sub
lret
jne
aad
jno
cmpsb
daa
xor
shll
add
arpl
cmp
or
push
inc
adc
ja
mov
das
shrl
adc
lcall
inc
in
add
xchg
int
inc
sbb
jmp
mov
sbb
call
cmp
repnz
jnp
pop
inc
loope
pop
xchg
shld
xchg
or
pop
ljmp
loope
enter
mov
aam
mov
mov
lret
push
enter
cmp
mov
out
int
mov
cld
je
lock
ljmp
lret
mov
cmp
pop
rcr
ss
xor
out
dec
sub
inc
pop
mov
pop
ja
lock
sbb
gs
dec
adc
cli
insl
push
push
or
inc
ja
pushf
mov
sahf
leave
jge
popf
movsb
scas
xor
xor
lahf
inc
cmp
sarb
sub
push
or
popl
inc
inc
jg
dec
or
add
jecxz
mov
push
or
and
jg
inc
imull
sbb
stos
jle
in
push
rcrl
fistpl
sti
add
inc
scas
in
sti
pop
pop
rcrb
mov
stc
xlat
lds
mov
adc
mov
mov
cltd
in
or
sub
cmc
gs
push
pop
mov
push
bound
lds
iret
das
movd
fisubs
int
les
and
int3
mov
push
add
enter
adc
mov
mov
mov
pop
clc
mov
xchg
std
adc
sbb
or
push
or
icebp
out
mov
and
ljmp
leave
and
mov
jg
clc
loope
fstpt
fiadds
xchg
mov
lods
sub
sbb
mov
addb
std
push
filds
mov
mov
inc
jnp
sbb
mov
fs
pop
fsts
push
dec
dec
dec
adc
out
xchg
sbb
fxch
imul
jno
mov
xchg
vcomiss
test
aas
pop
pop
and
mov
in
cmc
jne
xor
sbb
sahf
jbe
pusha
xchg
int
mov
xor
xor
push
push
jne
in
cmpsl
add
sub
clc
outsl
jo
sub
mov
in
or
stc
loope
add
add
movsl
les
sub
dec
inc
mov
jg
idivb
test
jns
out
mov
push
mov
lods
gs
movsb
sbb
es
lods
test
add
bound
or
push
mov
leave
xchg
out
inc
push
push
xorb
mov
dec
out
ja
jae
leave
lea
mov
js
ret
repnz
fsubrl
xor
xchg
pop
xchg
push
xor
ja
out
adc
xchg
fsubrs
sub
push
cmpsl
out
rclb
xor
movsb
pop
cmp
stc
scas
ror
inc
add
mov
pushf
push
pop
pop
mov
xor
out
mov
sub
or
xor
sbb
stos
push
xor
sub
add
cltd
pop
push
add
iret
popf
js
ljmp
aas
cmp
cmp
dec
stos
das
daa
push
ret
push
loop
inc
push
and
mov
insl
ss
test
jecxz
xchg
pop
gs
out
jae
inc
inc
push
pop
dec
out
sub
sbb
xor
mov
inc
jae
cmpsb
jmp
inc
decb
insb
in
sub
fnstcw
ret
mov
jmp
test
leave
add
fsubl
jno
adc
fidivrs
inc
cmp
mov
mov
iret
xchg
das
add
or
mov
imul
adc
sahf
mov
cs
stos
idivl
xchg
out
sahf
insb
ret
jg
and
test
push
sbb
test
xchg
sahf
cmp
inc
cmp
mov
inc
inc
dec
xchg
insb
cltd
mov
arpl
add
leave
mov
cmp
mov
and
jle
scas
adc
push
das
insl
fdivr
push
lahf
push
adc
in
and
mov
jo
popf
jno
xchg
lods
push
jne
rolb
jo
sbb
and
std
insl
call
iret
dec
insb
jmp
in
out
mov
fwait
adc
xchg
pop
movsl
int
ret
adc
jle
stos
sarb
insl
mov
fstpl
dec
add
int
and
test
adc
mov
rol
shlb
sbb
push
jl
clc
mov
mov
arpl
xor
mov
sahf
arpl
test
arpl
mov
or
pop
loopne
ljmp
fbstp
and
jmp
in
sbbb
mov
mov
xor
je
cmc
scas
xchg
xchg
xor
add
into
mov
push
xchg
pop
cld
mov
xchg
add
rorl
js
pop
inc
cli
lret
imul
pop
xor
scas
rol
lods
ret
jnp
scas
das
cmpsl
jmp
sub
and
or
aam
jns
test
lret
test
inc
test
mov
xchg
adc
mov
sahf
dec
mulb
test
fucomp
push
lret
cmp
push
xor
push
inc
sub
test
outsl
cltd
xchg
nop
xchg
push
inc
pushf
jp
lock
out
xchg
jb
pop
push
mov
mov
sub
test
xor
jnp
shll
add
enter
popf
in
mov
out
push
sbb
out
adc
gs
xchg
movsb
or
loopne
mov
imul
cmpsl
adc
push
popf
push
push
mov
push
das
dec
pop
outsb
lahf
stos
aaa
or
aas
inc
adc
xor
jle
pushf
jbe
or
mov
dec
ljmp
sub
adc
clc
pop
pop
arpl
pop
in
cmp
loopne
lds
mov
mov
mov
notl
inc
push
ja
xchg
xchg
or
inc
jns
and
adc
mov
lds
push
push
sub
mov
xchg
jno
testl
inc
or
and
xor
push
xor
pop
pop
sub
rclb
jecxz
and
mov
pushf
xchg
lcall
je
add
int3
int
add
pop
add
adc
popa
loopne
lods
repz
out
jo
shl
clc
arpl
inc
xchg
xchg
adc
movsb
icebp
sbb
mov
inc
adc
popf
mov
aas
rolb
inc
mov
cmp
loopne
daa
out
push
out
scas
xchg
data16
sub
mov
push
cli
sub
js
and
xor
ret
mov
jl
iret
inc
push
out
outsb
push
inc
fiadds
les
jbe
lds
mov
repz
pop
jb
dec
push
push
jecxz
fimuls
out
imul
or
inc
gs
repz
and
stos
cmp
add
addl
clc
sub
scas
or
dec
mov
push
pop
push
gs
cmp
inc
dec
jne
jne
sub
out
pop
pop
out
jmp
add
dec
push
push
mov
sub
mov
pop
pop
inc
fwait
rcrl
xlat
or
movsb
popf
dec
loopne
dec
sub
pop
test
into
imul
pop
and
fisttpll
mov
jo
test
or
jo,pn
xchg
and
sub
repnz
mov
xchg
pop
ljmp
push
jnp
jg
pop
push
ss
push
lods
jbe
das
mov
adc
loope
mov
mov
mov
cmp
enter
int
jge
test
inc
in
cld
mov
and
iret
push
sub
push
rolb
loop
xor
mov
sub
add
dec
or
sub
in
loope
mov
xor
stos
fmull
sub
ss
cmc
cwtl
dec
and
push
mov
push
arpl
mov
dec
into
jns
into
mov
hlt
sbb
cmpl
sub
push
mov
pop
cmc
jno
jne
stos
cmc
pop
jecxz
mov
fcmovne
push
pop
cmp
repnz
jo
xchg
rcrb
mov
cmp
repz
fstpt
mov
push
sbb
sub
pop
rolb
aad
jb
sbb
push
imul
xor
xchg
jge
xor
inc
das
push
jb
push
add
pusha
mov
hlt
mov
mov
ret
idivb
pop
sub
inc
lcall
and
insb
sub
xlat
add
jmp
jmp
fcomp
divb
hlt
out
mov
ja
xchg
mov
lret
mov
and
adcb
inc
xchg
ficoms
jbe
mov
jbe
sub
clc
or
adc
mov
mov
fwait
or
mov
pop
push
push
into
push
fldenv
cmc
movsl
mov
mov
ret
sbb
test
push
push
insl
roll
adc
dec
xchg
insb
ss
push
xor
cmp
gs
fistpl
and
sbb
mov
dec
insl
mov
sub
aam
ljmp
jae
adc
mov
add
test
xor
sub
pop
into
sti
out
mov
add
ret
pop
xchg
imul
movsb
mov
jo
imul
fdivr
sbb
ret
xchg
mov
xor
fsts
subb
or
dec
je
call
xchg
addl
pop
aad
stos
fbstp
xor
add
pop
call
sarb
fsubrp
imul
mov
jno
aas
mov
bound
test
in
ret
fisubl
pop
dec
jmp
loopne
jb
or
cld
testl
dec
xchg
or
adc
adc
movsl
shll
sub
outsb
push
jecxz
sbb
mov
icebp
lcall
adc
jle
jecxz
sbb
stos
aad
dec
mov
ret
out
mov
or
add
and
dec
sub
sub
adc
sub
push
and
dec
mov
push
arpl
dec
jne
dec
out
insb
ds
js
xchg
adc
addr16
mov
and
mov
in
xchg
repz
fcoms
fs
test
cmc
arpl
push
mov
inc
pop
sub
inc
pop
xor
dec
jo
sbb
jo
sti
lret
aaa
sbb
mov
aaa
push
or
repz
and
jo
mov
and
and
xor
mov
repnz
sbb
pusha
adc
sbb
loop
scas
jae
pop
cld
and
stc
int
lea
in
das
bound
cmp
test
mov
out
lds
jno
shrl
jb
movsl
adc
repz
cmpsl
outsb
push
adc
jle
int
push
data16
movsl
add
xor
out
ja
dec
pop
loope
test
call
push
test
mov
out
pop
dec
xor
out
std
cltd
lds
in
ja
add
imul
jnp
fbld
scas
in
test
hlt
in
cmp
std
inc
or
in
push
es
cltd
fcomps
loop
xchg
adc
sub
inc
out
js
or
pushf
cmc
mov
mov
icebp
push
mov
lret
or
pop
xchg
lea
and
xchg
mov
add
mov
fcmovnb
sub
pop
dec
or
loop
jecxz
cli
or
mov
lds
mov
ljmp
int
inc
jo
jb
int3
push
testl
sbb
stc
out
pop
push
adc
out
jbe
mov
mov
push
pop
mov
dec
push
pusha
insb
add
sti
popa
repz
mov
std
jae
in
add
cmp
or
cmp
ss
pop
jge
insb
adc
mov
cmovns
mov
xchg
push
xor
push
xchg
js
add
clc
mov
negl
stos
fstpt
and
rcrl
leave
pusha
out
and
cmp
ficoms
xor
bnd
xchg
xor
xor
pop
xchg
inc
lea
lahf
loope
sbb
lahf
orl
adc
jp
test
int
addr16
lea
mov
insb
lahf
out
dec
add
movsl
add
movsl
mov
popa
adc
je
or
xor
mov
mov
scas
in
ss
fcmovbe
stos
daa
mov
push
mov
adc
arpl
jp
push
lcall
mov
push
sub
stos
jb
add
int3
xor
movsl
jmp
xchg
push
pop
popf
fisttpll
mov
loop
mov
pop
mov
ret
popf
stos
mov
jne
insl
push
mov
add
mov
push
rolb
jne
or
sbb
sti
pop
xchg
rcrl
sbb
dec
push
dec
dec
sahf
pushf
std
inc
add
roll
fsubl
jecxz
mov
sub
jo
gs
sub
push
xlat
mov
in
or
repnz
testl
mov
and
or
es
scas
insl
dec
cli
shl
inc
idiv
cmpsl
mov
xor
fs
ljmp
cmp
pop
jl
pop
sbb
cwtl
mov
mov
enter
sub
pop
in
add
sti
iret
stos
shrb
or
fwait
pop
insb
stc
mov
into
and
adc
or
xchg
out
mov
movsb
movsb
mov
sub
mov
fistpll
shll
fucom
ret
push
pop
sti
jb
sbb
rcrb
sub
outsl
xchg
xchg
pop
inc
push
cmpsb
jge
inc
iret
das
je
sub
push
div
dec
dec
cmp
call
xchg
push
add
jle
out
ja
xchg
add
xor
lods
cmpl
sbb
data16
and
push
push
lea
push
sbb
imul
push
push
lcall
cmp
fistpll
sub
in
sub
jecxz
out
int3
js
inc
sbb
jl
jecxz
or
hlt
add
test
nop
pop
dec
jae
xor
dec
sbb
adc
xchg
lahf
adc
idivb
push
inc
push
jne
add
or
cmp
je
and
pop
dec
mov
incl
pop
mov
adc
fimuls
adc
adc
xlat
icebp
or
scas
and
dec
xchg
push
xor
bound
cmp
stc
lret
dec
inc
dec
loope
in
push
jecxz
test
pushf
sti
xor
ficoms
or
negl
rcl
mov
and
int
pop
sub
inc
inc
xor
sbb
popf
or
sbb
jecxz
test
ja
lret
sarl
adc
pushf
ret
jo
pop
cli
cltd
repnz
daa
dec
pushl
popa
sub
cmp
add
in
jmp
std
cmc
add
dec
mov
lock
leave
fistpl
mov
mov
out
rcll
bound
div
sub
icebp
nop
test
xlat
add
outsl
jb
subl
jmp
cwtl
push
ret
dec
push
cmpsl
mov
into
rcr
jge
out
add
and
and
sub
loope
movsb
ss
mov
aam
in
xchg
sub
mov
fsubrl
dec
xchg
jbe
inc
or
ret
or
repnz
mov
ja
jae
pop
mov
adc
mov
dec
in
mov
sub
push
mov
jb
push
jae
adc
adc
daa
sbb
movsb
das
arpl
push
mov
fstl
stos
test
mov
je
cltd
lods
ret
mov
test
push
test
or
stc
inc
add
in
ja
movsl
xor
dec
mov
jnp
mov
daa
movb
gs
aad
les
push
stc
mov
xor
fcmovnbe
push
incb
xor
push
out
ja
add
mov
dec
pop
sub
mov
mov
imul
stc
add
test
imul
or
repnz
pop
mov
shll
cmp
jmp
test
xchg
ss
jb
or
xchg
dec
lret
adc
in
or
sti
xchg
negl
mov
mov
lret
fs
scas
jae
aas
mov
pop
cmp
es
imul
pmulhuw
inc
orb
mov
je
leave
pop
mov
pop
test
cld
push
inc
das
addr16
lock
test
or
test
enter
cltd
sbb
pop
popa
pushf
sti
loope
insl
pop
xchg
inc
inc
lcall
insl
das
xchg
cmpsl
xlat
xor
jnp
and
data16
into
add
in
data16
fwait
int
add
filds
and
mov
cmp
outsl
scas
lea
popa
sub
test
inc
push
sub
outsb
lods
and
out
adc
mov
fwait
jae
gs
ret
ret
mov
aaa
call
jp
outsb
mov
or
dec
push
je
arpl
dec
shlb
pushf
sbb
test
pop
mov
outsb
movsl
xor
lret
lret
pop
js
insb
mov
xchg
xlat
or
xlat
mov
clc
out
sbb
push
push
pop
jns
les
scas
push
repz
xchg
out
lods
sbb
adc
mov
ljmp
sub
sbb
shrl
in
sub
in
fs
dec
fisubl
sub
loopne
mov
cmp
and
jl
cmp
jg
xor
or
movaps
lcall
jg
loope,pt
pop
mov
test
data16
insl
xlat
push
fcompl
or
js
adc
cmc
push
jg
insl
pushf
mov
sub
add
and
ss
xor
out
lock
adc
add
cmp
imul
mov
mov
popf
sbb
dec
int
mov
neg
adc
dec
or
dec
sbb
and
inc
mov
sbb
data16
clc
shrb
inc
daa
jg
cld
jge
push
and
popa
fadd
add
sbb
cmc
shll
andl
aaa
hlt
iret
movsb
jle
cmp
stc
mov
shrl
das
dec
cltd
in
mov
mov
int
xor
mov
or
inc
dec
les
test
sbb
mov
enter
jl
sub
gs
jno
add
call
push
xchg
xor
std
push
insl
inc
mov
add
push
ror
sti
ja
loope
sub
dec
jecxz
insl
es
sub
pushf
cmp
lock
fldt
shll
dec
sub
mov
push
mov
and
jb
add
fs
push
movsb
xchg
je
cs
add
rcr
xchg
rclb
lahf
mov
adc
inc
pop
push
add
ds
xor
xchg
pusha
pop
outsl
or
push
out
addr16
inc
sub
cmp
leave
mov
sub
mov
enter
fxch
jne
imul
rolb
pop
jp
mov
pop
and
mov
pop
push
jno
out
xor
xor
shrl
lock
fcompl
call
fldl
push
mov
je
sub
xchg
xchg
sahf
imul
pop
enter
and
jecxz
add
sub
loop
xchg
or
push
imull
lods
or
mov
or
clc
xchg
mov
dec
je
cmp
fwait
repnz
push
and
pop
mov
push
dec
rcl
pop
inc
dec
sbb
repnz
lods
push
leave
push
push
ret
adc
add
xchg
arpl
and
in
and
dec
fsubl
dec
xor
cmpsb
or
lret
add
stc
pushf
jmp
out
out
sahf
jmp
fmull
addr16
xor
test
cs
out
ret
leave
int
add
sbb
sub
fnstsw
insb
lods
into
mov
sbb
or
jecxz
mov
popa
stos
fwait
sub
rcll
fimull
xchg
lahf
movsb
negb
push
and
imul
mov
or
xor
xchg
push
nop
or
sub
aas
mov
mov
dec
inc
or
aam
mov
out
sarl
add
fisubl
rorl
lods
fimull
jb
rorb
lds
hlt
push
inc
pop
bound
insl
dec
jne
push
pop
test
sbb
ss
rclb
sbb
jge
mov
or
cmpsb
nop
jb
jge
add
sbb
lock
rcrb
jmp
out
adc
shl
fdiv
popa
mov
inc
cmp
mov
add
test
std
push
andb
mov
jnp
js
jns
mov
in
cmp
xor
add
shll
add
mov
pop
test
iret
out
adc
cmpsb
int3
jo
push
jp
and
or
mov
shlb
lds
sbb
dec
aaa
jge
mov
daa
outsb
sbb
ret
lods
pop
cli
lret
sbb
into
in
lods
adc
imul
push
pop
xor
mov
dec
mov
sbb
inc
xchg
sub
or
xor
je
dec
cmp
outsb
push
mov
mov
pop
popa
div
fimull
xchg
mov
in
in
jns
insb
sbb
lds
add
movsb
sub
mov
dec
jge
sbb
push
outsl
adc
jmp
out
leave
pop
loope
stc
pop
sarb
mov
mov
and
jge
cltd
sbb
dec
mov
aam
cmp
ja
xor
insb
jns
arpl
cmc
loopne
sti
mov
or
in
cltd
cmc
insb
mov
inc
xchg
aaa
dec
sbb
not
inc
scas
cmp
jb
cmp
mov
push
movsb
xchg
test
cmpsl
jmp
lods
cmpsb
icebp
daa
sti
jg
sar
test
push
mov
mov
mov
movsb
clc
call
enter
int3
cmp
push
pop
mov
lahf
dec
sti
or
shll
or
mov
push
rorl
pop
enter
xchg
lret
xchg
movsb
add
inc
cmc
mov
cltd
popf
pusha
jecxz
sbb
inc
xchg
jo
inc
sarb
jg
add
ljmp
fldt
cs
sahf
jp
push
jns,pn
xor
mov
add
in
imul
stos
movsl
jmp
xor
dec
inc
sbb
lret
bound
jae
loope
gs
xor
mov
add
std
ljmp
mov
mov
pushf
cmp
jno
movsl
dec
cmp
aaa
testl
cmpsb
cmp
outsb
sahf
in
push
mov
xlat
jle
adc
sbb
inc
in
bound
sahf
es
cmp
add
and
xor
and
movsl
pop
jp
enter
enter
xchg
add
jno
fucomi
or
mov
fs
lcall
ret
lds
xchg
nop
and
xor
pop
xchg
jno
sbb
fstpl
mov
sbb
adc
popa
call
lock
call
adc
jbe
cwtl
cmp
dec
sbb
movsl
or
daa
mov
cmp
or
mov
mov
ja
bound
test
fwait
rorl
mov
mov
sahf
dec
jo
enter
or
bound
ds
test
dec
out
and
add
es
cs
cmp
jg
in
in
aas
push
fmull
addr16
xor
iret
or
test
dec
push
out
cmp
adc
and
cmc
jmp
adcb
dec
xchg
insl
add
sarb
xor
xlat
dec
lods
add
sub
lods
mov
stos
cmp
xchg
dec
dec
dec
dec
push
cmc
into
add
cmp
inc
pop
adc
lcall
xchg
ret
fwait
jae
xchg
cmp
fs
cltd
sub
mov
jl
sbb
data16
in
mov
or
stos
mov
xchg
mov
enter
test
je
fiaddl
cmp
and
cmc
scas
xchg
lret
mov
ret
or
stos
out
shll
test
scas
xchg
mov
int
mov
lahf
sub
popf
movsb
jne
fidivrl
jp
and
dec
rdtsc
push
in
out
jmp
fwait
add
dec
scas
xchg
xor
aad
addr16
shrb
test
dec
mov
jmp
or
add
push
mov
ret
cwtl
add
fwait
bound
fwait
mov
gs
cmpsl
add
jnp
xchg
movsl
insl
cwtl
and
arpl
lret
and
cmpsl
dec
test
pop
or
fistps
fsubs
mov
popf
jnp
mov
imul
test
mov
cmp
and
xor
adc
negl
shl
dec
xorl
ret
repz
sbb
in
pop
shlb
mov
push
jecxz
inc
in
je
jge
out
arpl
xchg
inc
xor
insl
lretw
aaa
ret
test
xchg
and
add
lds
rorb
pusha
sub
sbb
incb
mov
xchg
mov
and
call
lods
mov
int
mov
jecxz
xlat
ret
lret
push
aas
xchg
daa
movsl
xor
pop
cmpsb
in
dec
adc
pop
and
xchg
xlat
jbe
gs
mov
xor
call
xor
imul
imul
jno
xor
push
out
std
xchg
out
push
stos
sub
sub
fidivrs
jmp
mov
mov
sub
mov
jmp
jnp,pn
inc
and
push
push
aam
xchg
lods
xchg
push
push
sahf
ret
add
add
pop
mov
mov
sbbb
jne
cmpb
jp
push
subl
xor
inc
fwait
add
out
lea
ljmp
lcall
divb
sbb
loop
scas
pop
jno
pop
push
jmp
and
call
mov
mov
adc
repz
jns
mov
jg
or
ds
mov
loopne
add
or
lea
cld
and
mov
out
mov
es
add
loop
fs
cs
lds
shrl
iret
jg
pop
cwtl
mov
test
nop
cmp
push
aaa
push
icebp
in
mov
sub
imul
in
or
outsb
jns
cmp
in
or
jbe
stc
cmc
into
test
and
ja
mov
orl
fistps
push
or
mov
dec
popa
mov
inc
cmp
sti
or
dec
jle
cmp
inc
adcb
js
pop
imul
ret
enter
outsb
imulb
jle,pt
shrl
divl
dec
add
pushf
out
push
movsb
repz
pop
arpl
xor
dec
inc
cld
push
lret
lcall
outsl
setnp
add
add
cwtl
pop
in
pushf
mov
pushw
sbb
out
xlat
add
sub
imul
sub
sbb
sahf
sub
out
and
loope
inc
pop
lock
scas
inc
mov
sub
mov
adc
xor
sub
test
test
xchg
inc
mov
test
mov
inc
lret
xchg
adc
pop
or
xor
or
mov
pop
js
ret
cmp
adc
loop
out
call
mov
xchg
xor
out
and
pop
and
adc
pushf
icebp
or
arpl
adc
ljmp
add
mov
and
cmp
adc
cwtl
in
cmp
or
cmp
sbb
mov
add
inc
jmp
cmpsb
imul
ds
mov
fmull
addr16
or
fs
pop
push
inc
mov
mov
mov
popa
xor
aaa
adc
popf
insb
mov
in
mov
fcomi
pop
or
sub
aas
ret
adc
sti
xchg
xor
jecxz
jno
jno
push
insb
pop
sub
in
enter
flds
cwtl
ss
mov
adc
add
mov
cmp
imul
mov
insl
inc
mov
cmp
pushf
cs
fwait
mov
loopne
arpl
sbb
int3
mov
loop
rcrb
mov
data16
jbe,pn
inc
in
xchg
js
cmc
imul
decl
and
dec
mov
imul
push
dec
aaa
or
sbb
je
mov
adc
pop
cmp
nop
pop
push
fs
sarl
iret
mov
sbb
push
repz
push
nop
push
add
clc
arpl
push
popf
xor
in
pop
sub
cld
mov
pop
or
addr16
push
sbb
aam
or
outsb
clc
adc
shrb
pop
inc
pop
sti
cmp
or
out
imulb
movsb
push
inc
and
aas
lods
dec
lret
or
rcrb
int3
cmp
cld
and
gs
cmpsl
push
in
movsb
pop
repz
mov
ficoml
fcmovb
outsl
push
imul
sub
ds
loopne
add
sub
cld
jge,pn
es
xchg
das
dec
dec
in
sbb
push
ljmp
addl
ljmp
lds
repnz
inc
outsb
mov
sbb
or
outsb
les
add
shll
lret
push
dec
scas
and
xorl
and
jl
js
xchg
cmp
mov
shrb
sbb
rclb
inc
xor
push
cmp
cltd
xchg
add
mov
xchg
lea
shll
pusha
cli
sub
enter
popf
cmpl
cmp
or
add
hlt
psraw
push
sub
cmp
testb
aaa
lret
xor
test
insb
cli
push
mov
fadds
xchg
cmc
lret
jle
sahf
jmp
jmp
mov
xor
lcall
pop
mov
sub
push
scas
not
jge
push
push
sbb
subb
popa
jmp
bndldx
inc
adc
test
jge
in
mov
jne
int
ja
loopne
int3
popa
imul
mov
das
dec
mov
int
adc
popa
aad
pop
mov
mov
pop
jno
mov
inc
add
sbb
stos
mov
add
push
or
sub
mov
push
pop
je
jb
vmwrite
pop
xlat
xchg
mov
jge
sub
mov
movsb
or
scas
outsl
test
ljmp
cmpsl
add
dec
ret
jmp
mov
inc
icebp
fucomp
movsl
loopne
stos
je
and
cmp
int3
and
dec
inc
xchg
sub
or
sbb
into
adc
mov
loopne
add
loopne
data16
push
push
imul
mov
lock
leave
ljmp
fimuls
or
aas
mov
ds
or
in
int
adc
mov
lret
pop
js
sbb
clc
jl
pop
jnp
jle
push
push
sti
aam
repnz
xor
insl
das
push
insb
xchg
sub
cs
aad
fstl
into
cli
ret
loopne
xor
hlt
cmp
pop
decb
mov
loope
movsb
loop
mov
sbb
imul
loope
mov
int3
clc
mov
iret
lahf
out
sub
lock
in
call
adc
hlt
dec
ljmp
cmp
mov
in
cmp
cmp
push
sbb
out
dec
mov
cmc
adc
in
je
fsts
push
stos
sub
out
inc
lds
add
dec
pop
in
out
je
mov
xor
cmp
pop
lea
mov
and
sarl
xchg
cmp
popf
cltd
aam
scas
movsl
inc
jnp
test
subb
rorl
movsb
mov
mov
sub
lock
sbb
sbb
xor
mov
or
loope
cld
sarb
fsubs
ds
adc
aam
jg
dec
sub
xchg
mov
or
dec
mov
mov
int3
mov
adc
clc
mov
xor
std
icebp
das
out
cltd
cli
sti
clc
jbe
push
xchg
push
data16
loope
push
iret
adc
inc
inc
mov
add
dec
int3
inc
mov
adc
jae
inc
movsb
popa
addr16
imul
xchg
scas
add
sub
dec
lods
in
sbb
jl
out
out
adc
mov
clc
gs
xchg
inc
inc
imul
fs
mov
repnz
cmp
cld
fildll
lods
out
pop
lock
sub
stos
aam
pusha
in
adc
shl
imulb
dec
push
icebp
es
mov
add
ficomps
push
loop
subb
es
sub
shll
movsb
cld
popa
mov
imul
sahf
and
cmp
test
xchg
pop
push
jae
cmp
fstps
push
lds
or
dec
xchg
ds
loop
cmp
sar
aam
inc
or
dec
sbb
dec
testl
popl
pop
out
or
mov
cmp
jmp
mov
scas
fistps
pop
insb
out
jl
cmpl
pop
clc
xchg
jle
adc
xchg
ss
cmp
mov
loope
lods
pop
cmp
dec
xor
pop
xlat
ret
add
daa
scas
test
adc
jmp
or
fs
shlb
aad
out
push
inc
rcl
test
sbb
adc
dec
lahf
dec
fisubs
push
mov
xor
sub
xchg
jne
mov
ss
out
dec
push
add
mov
cs
scas
fiaddl
mov
mov
mov
in
push
stos
aaa
xchg
or
shlb
sbbl
adc
add
jbe
dec
popf
jmp
cmpsl
sbb
orl
test
movsb
adc
out
sahf
or
push
push
fstp
xchg
xchg
ja
cmp
or
cmp
sbb
sbb
jne
aad
jb
add
adc
nop
jno
fdivrl
mov
sbbl
test
outsb
mov
adc
scas
sub
dec
and
pusha
testl
xor
out
xor
mov
or
push
mov
stc
mov
fdivl
add
out
cltd
mov
test
add
cmp
jp
testl
sbb
repnz
adc
xlat
in
sub
mov
add
fidivrl
pop
insl
add
push
jno
ja
push
dec
imul
jg
and
aas
insl
das
inc
jnp
pop
cld
fisttpll
cmp
or
pop
into
into
fcoms
pop
mov
int
jp
push
repz
scas
mov
dec
test
sbb
vmwrite
inc
push
lahf
pop
aad
inc
cli
pusha
jnp
ljmp
movsl
pop
inc
push
mov
cmpl
jae
lock
imul
add
cltd
mov
ret
cmp
push
and
cmpsb
pop
sbbb
lcall
mov
jmp
push
int3
das
inc
adc
cli
cmp
push
sub
mov
out
je
test
mov
sub
and
mov
and
repz
mov
popa
andl
jl
inc
lcall
pop
popf
mov
insl
jle
shr
and
notb
jg
or
hlt
into
mov
sti
into
push
mov
mov
fadds
aaa
sub
push
divl
xchg
xor
adcb
xor
xchg
call
jg
sub
in
inc
pop
and
out
arpl
mov
push
fcoms
sbb
sub
sarl
xchg
pop
cwtl
imul
daa
cmp
sub
mov
mov
xchg
outsb
int3
mov
jbe
lret
mov
cs
insl
mov
add
add
dec
dec
outsl
lret
cmp
cmp
jb
mov
sub
dec
dec
insl
out
sbb
inc
jge
mov
xchg
or
lcall
pusha
pop
mov
push
sub
insb
mul
icebp
lea
xchg
stc
stos
dec
sbb
sbb
ds
and
sub
mov
sbb
shll
xchg
ja
pop
sub
clc
adc
mov
jae
inc
jmp
add
xchg
add
scas
and
and
pop
pushf
das
sarl
movsb
mov
mov
testb
sbb
add
pop
push
jns
fdivrs
mov
inc
or
jno
mov
int
dec
mov
mov
fidivrl
imul
mov
repnz
or
pop
lret
dec
xchg
inc
mov
or
nop
jl
in
popf
or
test
pop
cmc
imul
clc
lcall
subb
xor
les
sub
jb
xor
loopne
mov
call
ds
mov
mov
mov
ja
pusha
pop
add
je
into
es
pop
ljmp
jg
xchg
sub
repnz
inc
xor
cli
inc
jecxz
or
loop
ds
jb
arpl
aam
int3
pop
xchg
pop
cmpsb
aaa
mov
sbb
inc
ds
adc
shrl
ret
popf
movsl
shrl
pop
int3
fidivl
imul
hlt
jbe
xchg
hlt
in
pop
stc
es
dec
push
das
push
mov
mov
jbe
movsl
mov
cli
fstps
inc
dec
add
in
cmp
test
add
or
push
push
xor
mov
subb
cmc
js
jno
xor
dec
sub
adc
push
loop
and
xchg
jle
inc
nop
lret
cs
cltd
sub
ret
xchg
cmpsb
lods
leave
mov
inc
dec
movsl
jle
or
push
cli
sbb
outsb
repnz
mov
lods
push
orl
inc
lret
pushf
fdivs
addr16
and
sub
insl
scas
and
leave
popa
sub
leave
or
sub
adc
push
popf
xor
mov
cld
stos
lods
sahf
jae
jns
ret
and
fdivs
scas
into
jecxz
push
loope
sbb
xchg
aas
push
lods
and
and
jbe
xor
xchg
dec
punpckhdq
pop
in
std
fisubs
mull
mov
repz
jecxz
pusha
fs
ret
sti
sbb
add
inc
push
cmp
lret
sbb
shll
xchg
push
inc
out
pcmpgtd
and
jg
in
dec
mov
not
scas
aaa
cli
outsb
inc
adc
dec
stos
or
pop
lea
or
sbb
orl
andl
inc
push
lret
cmp
fwait
inc
imul
cli
push
pop
addb
push
pop
cwtl
adc
scas
in
sbb
mov
arpl
dec
xchg
in
movsl
outsb
mov
mov
in
mov
pop
icebp
inc
je
insb
jns
repz
mov
mov
scas
xchg
nop
or
aaa
adc
or
aaa
adc
adc
or
cmpsl
or
sbb
jge
xchg
push
or
shlb
imul
jge
dec
add
stc
into
add
scas
sbb
jge
jo
mov
cltd
dec
cmp
fcomi
mov
loopne
leave
add
aaa
mov
adc
pop
lea
leave
arpl
call
fisubs
fldenv
popa
sti
or
push
aaa
sub
lock
mov
mov
xor
or
stos
dec
movsb
pusha
inc
out
mov
push
xchg
jo
pop
mov
lret
or
adc
data16
out
mov
int
ljmp
mov
ret
xchg
jbe
in
lods
sub
popf
rolb
enter
mov
xchg
cmp
adc
in
outsl
insl
mov
insl
jmp
jb
xor
jno
aas
es
and
cltd
mov
adc
and
addr16
add
dec
cs
std
dec
sub
pop
insl
lock
jmp
test
lock
push
insl
xor
jmp
cld
mov
ret
inc
xor
loope
js
cmp
lods
inc
xchg
and
or
sbb
fildll
imul
sti
gs
inc
mov
test
push
and
roll
add
test
sbb
jge
jl
pop
int3
xor
pop
movsl
test
sub
xchg
add
push
hlt
cld
pop
and
or
pop
stos
mov
and
pushf
ret
sub
cmpsb
cmpsb
in
xchg
mov
push
addl
sbb
ret
xchg
movsl
mov
into
push
inc
dec
sub
push
jne
fmull
or
nop
dec
je
add
jno
cli
out
jne
inc
cmp
sub
pop
add
int
mov
lea
daa
push
notb
out
cmp
add
cmp
xor
xchg
aad
cmp
in
jne
in
insl
jbe
mov
xorl
adc
or
mov
cmc
in
pop
stos
sbb
aad
or
and
out
data16
jg
in
leave
sub
mov
push
idiv
adc
push
in
ja
sarb
outsb
test
add
cmp
or
fsub
shr
icebp
xchg
mov
das
adc
mov
xlat
fcoml
push
pusha
int
movsl
push
ds
cmpsb
mov
inc
sub
push
test
add
push
roll
ljmp
cli
mov
mov
mov
int
sub
push
mov
orb
subb
in
nop
inc
int3
imul
jno
mov
add
out
inc
scas
xor
jg
cmpsb
cs
xor
nop
into
mov
scas
gs
and
add
add
cmp
movsb
in
insb
rolb
mov
arpl
data16
inc
ljmp
pop
xchg
test
add
fcmovb
ret
mov
faddp
sbb
jmp
add
jmp
std
mov
jmp
je
jle
dec
inc
je
fcomps
push
inc
sti
rcrb
jns
popf
ficoms
push
mov
mov
repnz
fcoml
adc
mov
jb
and
cmp
les
jo
fs
cmp
cvtpi2ps
mov
adc
pop
fistpl
and
dec
daa
fisubs
int
adc
jo
cs
popf
ss
fistl
push
xor
lock
xorl
mov
adc
jge
fidivs
out
jne
adc
sahf
mov
test
out
adc
das
cltd
jp
pop
faddl
stos
dec
fld
incb
fdivr
lea
xor
jns
push
cs
fwait
test
test
add
jb
roll
mov
adc
and
pop
leave
add
push
mov
mov
test
scas
pop
enter
mov
lahf
and
idivb
aad
add
punpckhwd
dec
clc
sub
sub
repz
add
pop
jae
arpl
sarb
insl
shl
test
push
fxch
fucomi
adc
std
dec
add
hlt
scas
addb
jmp
inc
lcall
dec
ss
outsl
sbb
enter
cmpsb
cwtl
pop
jae
test
lahf
cltd
xor
push
or
add
faddl
mov
mov
lcall
out
jns
mov
xchg
pop
dec
sub
or
daa
mov
sbb
mov
sbb
push
fadd
xor
adc
sub
dec
dec
mov
sbb
dec
sub
lahf
inc
insb
add
sbb
je
mov
cmp
cs
lods
dec
stc
call
icebp
ds
jg
ficoml
dec
fcom
dec
movsb
roll
jp
sbb
aaa
inc
jb
fs
jae
dec
and
pop
push
pop
mov
push
sahf
mov
cmpsl
and
rolb
cmp
cmpb
jecxz
push
clc
cmp
cmp
pop
sbb
es
pop
sti
js
cld
and
mov
cmp
and
sub
add
ret
inc
adc
imul
insb
cmp
test
clc
clc
lods
hlt
push
adc
std
cmc
adc
xchg
nop
cmp
lods
xor
out
data16
mov
cmp
jnp
aas
hlt
mov
mov
pop
lret
bsr
push
popa
jecxz
data16
pop
mov
and
mov
mov
std
jl
jns
sbb
push
jns
cmp
push
and
push
cmpsl
xchg
push
and
or
imul
dec
xor
xchg
adc
cmpsb
push
es
dec
je
shrl
cmp
push
icebp
test
aas
imul
push
lret
xchg
sar
xlat
and
and
jnp
std
pop
mov
push
push
xor
ja
and
je
mov
push
sub
sub
imul
jo
xchg
rcrl
and
daa
imul
ja
cmc
inc
in
mov
sbb
jmp
test
and
inc
sbb
js
faddl
adc
clc
repnz
lock
and
sbb
add
test
subb
or
jns
inc
iret
in
mov
jo
loopne
jmp
lods
mov
clc
push
mov
repnz
fcomp
mov
sub
cmp
dec
out
add
sbbl
add
jbe
into
jnp
push
test
push
cmp
iret
mov
stc
push
jg
addr16
mov
lods
add
scas
pop
mov
iret
mov
and
outsb
idivb
ret
xor
lea
or
push
add
push
pop
std
pop
dec
and
sub
dec
fbld
sbb
cs
push
sbb
mov
das
lea
rcr
adc
sbb
icebp
cmpl
mov
pushf
push
ss
addr16
pop
enter
imul
inc
and
push
or
mov
insl
mov
insb
decl
mov
imul
add
xchg
pop
stc
push
jo
xlat
in
dec
into
adc
in
cmpsl
or
sub
jmp
jge
pop
mov
daa
inc
pop
dec
imul
rol
add
mov
cmp
xchg
pop
roll
mov
inc
cli
xor
imulb
xchg
shll
popf
movsb
jg
jb
mov
mov
rcrb
add
fadds
fcmovnbe
cmp
adc
ret
push
inc
pop
shl
pop
xchg
jp
add
in
pcmpgtw
ljmp
out
dec
inc
sub
insb
mov
popf
dec
inc
push
inc
faddl
xchg
scas
shl
enter
jg
test
rcl
movsb
adc
sbb
fsubs
jo
or
js
xchg
mov
scas
ret
push
inc
cmpl
xchg
std
lea
pop
pop
xor
clc
push
inc
pop
add
jnp
and
lret
mov
push
scas
push
cmc
dec
sub
add
sub
fistpl
lea
jle
daa
icebp
fcmovnu
repnz
mov
in
sub
test
mov
fsubrl
mov
xchg
xchg
and
pop
inc
rolb
pop
fidivl
xor
daa
mov
cmpl
and
nop
xor
xchg
out
ffree
js
pop
test
pop
cltd
mov
or
psubsb
add
int3
mov
mov
push
jb
fsubs
nop
xchg
cmp
dec
cmp
inc
aad
add
ljmp
testb
jge
adc
push
inc
or
orl
insl
cmp
adc
loope
ja
add
lret
imul
int
sahf
stc
rcrb
mov
and
test
adc
fisttpll
stos
xor
pop
adc
mov
int3
inc
stc
aad
loope
xchg
stos
or
add
inc
adc
lods
aas
add
jp
stos
or
mov
aas
mov
lcall
mov
pop
push
sbb
adc
pushf
mov
pop
dec
ficomps
mov
jb
movsb
repnz
cmpsl
adc
sub
cmp
pop
mov
mov
push
or
stos
or
mov
mov
shrl
aam
lock
in
loope
nop
out
cltd
aam
dec
mov
rcll
sbb
mov
ds
stos
inc
aaa
loope
mov
mov
fwait
adc
sbb
add
aas
cmp
loopne
jecxz
ja
mov
pop
xchg
adc
pop
mov
dec
push
mov
add
pop
xchg
aam
into
and
insb
das
push
sub
frstor
push
jp
cs
addr16
mov
sub
das
sub
movsl
adc
cltd
cmpsl
fldcw
dec
push
test
xor
pop
or
loop
leave
loopne
lsl
icebp
imull
lcall
lods
mov
adc
pop
sti
push
ret
gs
pop
mov
ds
xchg
mov
sbb
and
pop
mov
in
or
and
pushf
leave
fdivrs
aas
add
outsb
sub
js
iret
rorl
cmp
mov
loope
test
inc
lcall
mov
mov
movsl
enter
ss
aad
xor
stos
jge
lcall
out
imul
pop
hlt
rorb
inc
repnz
iret
xchg
fnstsw
fsubrs
mov
dec
push
sub
aam
jl
mov
in
jg
mov
xor
push
ja
sbb
mov
jbe
pop
idiv
jae
push
cmp
add
dec
loopne
inc
sbb
xchg
ficompl
cmp
hlt
cmc
mov
out
cmp
xchg
flds
sbb
dec
mov
pop
cmpsb
outsl
xchg
fadd
outsl
mov
sub
dec
cmp
xor
xchg
push
imul
movsb
lea
repnz
dec
push
lds
loopne
test
in
js
mov
mov
or
dec
push
repnz
aas
movsb
dec
mov
and
or
push
dec
or
ret
push
test
add
xchg
add
leave
jae
cmp
xchg
pop
push
add
mov
stos
sub
dec
add
dec
mov
sub
sub
ror
push
dec
and
pop
and
mov
or
push
aaa
inc
stc
shlb
mov
pop
outsl
cmc
add
mov
rorb
sub
xchg
and
jnp
imul
stos
ljmp
cmp
xchg
sub
sub
popf
push
sub
push
mov
push
xor
inc
xor
pushf
fdivr
sbb
mov
adc
lcall
jbe
xor
xor
out
cmp
rcr
lcall
and
inc
fwait
pop
lahf
cmp
push
in
test
xor
imul
pop
ret
movsl
or
xor
int
add
out
jno
xor
jno
mov
adc
add
cmpsl
mov
sub
sub
iret
push
jge
fcompl
bound
xlat
mov
stos
sbb
shll
aaa
lds
push
and
xchg
scas
in
inc
xchg
pop
cltd
movd
mov
sarl
rcrb
mov
outsb
add
mov
ja
movsl
xchg
not
mov
insb
leave
iret
fs
leave
inc
inc
ljmp
inc
jnp
cld
and
adc
push
rorb
mov
sub
sti
xor
pop
in
in
sbb
addl
xchg
insb
in
or
aaa
insl
addr16
andl
cli
sbb
sbb
fs
pop
cmp
push
pop
rorb
roll
sub
inc
inc
mov
popa
cmp
mov
add
inc
sub
fmull
sbb
cs
sub
js
dec
out
loopne
outsl
aam
lahf
scas
cli
xchg
int3
or
aas
negb
sbb
mov
movb
jns
int3
rcl
jmp
and
mov
lods
cli
and
imul
add
inc
jno
dec
xchg
inc
dec
lock
test
or
outsb
and
rcl
jnp
or
sti
mov
dec
js
jmp
loopne
lds
mov
pop
mov
add
test
movsb
mov
or
fists
jbe
mov
insl
jg
movsb
nop
hlt
or
mov
dec
and
loopne
mov
mov
xor
adc
pop
lea
xchg
ret
and
insb
sub
push
ljmp
das
call
and
hlt
sbb
stos
pop
orl
lds
fld
stc
jno
js
mov
incl
int
ret
fistl
jmp
ja
push
jnp
jnp,pt
fwait
into
adc
hlt
xchg
lods
test
xor
push
xor
cmp
bound
cmp
rcrl
mov
jne
cli
mov
xchg
pop
inc
jl
sub
jb
push
push
xor
pop
push
cmp
arpl
jb
nop
cltd
xor
pop
pop
divl
lods
or
sahf
pop
dec
add
xor
popf
xchg
jbe,pn
daa
mov
sbb
xchg
std
mov
outsl
incb
in
jle
dec
ret
add
fldt
xor
sti
in
add
pop
mov
pushf
pop
les
scas
loop
lret
lret
adc
sbb
inc
ss
inc
mov
xchg
js
mov
in
inc
pop
scas
fidivrl
mov
add
jnp
test
add
adc
mov
xchg
loope
pushf
fdivrl
enter
mov
xchg
cwtl
or
mov
test
adc
mov
lret
outsb
repz
mov
test
sub
subl
adc
sbb
aas
mov
dec
push
cmp
pop
aam
int
outsl
or
stos
jecxz
cmpsl
sub
leave
mov
pop
pushf
jb
jp
andb
pop
mov
jo
pop
or
push
insb
es
lock
xor
std
xchg
testb
push
cmp
jp
jns
pop
notl
pop
enter
mov
mov
les
cli
pop
and
push
or
movsb
fisubl
imul
incb
mov
mov
pop
sbb
or
jnp
pop
add
jae
mov
jae
fwait
int
add
mov
adc
jg
push
jmp
fistpll
or
lea
push
out
and
sub
inc
mov
scas
lret
pop
xor
add
mov
lahf
sub
and
cmp
cmpsb
ss
outsl
jo
adc
ljmp
adc
adc
xorl
ljmp
pop
add
pop
pop
cmp
ret
cld
dec
inc
mov
scas
adc
jecxz
mov
cmp
loop
jns
enter
jae
xor
mov
stc
cmpsb
stos
dec
hlt
int3
push
dec
pop
sub
icebp
pop
add
lods
jno
mov
lcall
xlat
dec
cwtl
cmp
js
lods
and
arpl
popa
pop
fldl
test
data16
jbe
pop
sub
mov
ja
lea
pop
adc
mov
mov
pop
in
mov
jp
mov
push
mov
jns
add
mull
jl
lret
mov
pop
push
int
test
pop
mov
icebp
ret
dec
out
push
sub
and
jnp
xchg
inc
fidivrs
jmp
out
in
sbb
sub
mov
iret
pop
mov
pop
pusha
pop
push
add
mov
lcall
and
outsb
cltd
mov
push
inc
aam
push
xor
dec
xor
imul
dec
hlt
arpl
enter
pop
sub
xlat
bound
mov
fcoms
jl
jne
push
movsb
out
xchg
ret
push
xorb
dec
shll
jl
sub
rorb
bound
sti
mov
mov
sbb
out
stos
insl
inc
cmpsl
and
dec
adc
mov
xchg
adc
loop
jnp
sar
testb
fldenv
dec
subl
adc
pop
xchg
inc
or
pop
rolb
and
mull
sub
or
or
dec
in
insb
inc
fdiv
mov
sbb
nop
lds
ljmp
ret
out
stos
push
ds
mov
popa
out
or
movl
fs
push
sbb
mov
mov
sbb
adcb
push
mov
fistps
xorb
inc
out
mov
jno
pop
xchg
jae
pop
stos
inc
inc
mov
jb
loop
nop
adc
sub
sbb
test
push
mov
push
dec
adc
fisubrl
lock
and
mov
or
pop
pop
sbb
fiaddl
rcr
std
push
mov
imul
fisubrs
aaa
add
mov
inc
push
xchg
push
mov
and
stos
dec
push
sub
es
lods
mov
mov
push
and
dec
pop
sbb
fldcw
in
jp
mov
mov
pop
hlt
mov
inc
mov
fmuls
jg
mov
dec
dec
movsb
adc
loop
cmp
dec
and
push
fwait
cli
mov
cmp
xlat
ficoml
mov
dec
add
shr
mov
sarl
stc
addr16
aad
push
jmp
jl
and
loope
js
cmp
xor
pop
stos
jnp
add
mov
mov
xor
push
sub
mov
js
cwtl
mov
clc
add
jno
lock
cmp
test
xchg
push
xchg
xchg
and
mov
ds
push
xor
hlt
es
cmp
dec
xor
jmp
fidivs
cmp
mov
lcall
xchg
fisttpl
xchg
lods
imul
loop
leave
je
sub
xchg
es
jbe
jge
dec
arpl
push
outsb
jp
inc
pop
test
dec
scas
jecxz
mov
aas
test
jmp
jo
xchg
xlat
fwait
add
adc
out
inc
xchg
scas
enter
and
mov
dec
mov
sbb
xor
imul
int3
ret
cmp
sbb
dec
pop
aaa
lea
add
cltd
fs
bnd
jle
out
aam
loop
clc
mov
int3
scas
pop
in
inc
and
jno
loopne
and
inc
or
imul
ficoms
push
or
pop
cmc
int
pop
aad
xchg
lret
ret
pop
pop
pop
xor
push
imul
js
cwtl
mov
xchg
aaa
int3
jb
mov
iret
push
pop
mov
mov
jns
icebp
lods
aad
xchg
cld
ret
mov
ss
xchg
and
mov
dec
pop
inc
stos
mov
sbb
adc
repnz
testl
insb
dec
cs
xchg
addr16
mov
call
leave
fildll
adc
call
lds
push
sbb
mov
outsl
jg
mov
leave
movsb
dec
inc
outsb
push
adc
in
enter
hlt
inc
inc
inc
stos
subl
xlat
dec
mov
mov
lcall
adc
add
push
cmp
pop
dec
in
sarb
cmp
stc
ret
pop
mov
in
test
pop
sub
fldt
or
and
out
repz
dec
dec
mov
sbb
int
in
pop
scas
jg
and
ljmp
jmp
adc
aaa
lcall
pusha
push
gs
pop
xchg
cmp
repnz
mov
in
fcmovnb
or
cli
aas
das
scas
mov
inc
adc
ljmp
mov
bound
lret
mov
out
xchg
add
pop
clc
pop
hlt
loope
xchg
cld
divb
jnp
mov
jge
bound
cmpsl
pop
or
sub
cmp
jg
jae
mov
mov
pop
cltd
add
rolb
inc
pop
lahf
cs
jbe
cmp
ljmp
fldt
inc
sub
ffreep
dec
sti
push
lods
and
inc
or
pop
icebp
in
push
loop
shlb
jmp
inc
push
hlt
loope,pn
pop
or
out
add
and
and
icebp
adc
movsb
mov
imul
mov
sbb
dec
mov
call
iret
jle
jp
add
ljmp
xor
outsl
lods
jmp
in
pop
or
lods
jle
sub
stc
outsl
fisubl
inc
jp
dec
add
pop
sarl
lods
cs
jno
and
mov
sbb
lahf
es
sbb
mov
sahf
push
or
mov
and
jo
shlb
fstpt
inc
jns
arpl
aad
in
or
out
sbb
adc
push
mov
leave
mov
mov
dec
xchg
aad
xchg
in
call
mov
repz
pop
jl
sarb
xor
pushf
fsub
shl
mov
in
or
sbb
outsl
sti
cmp
xchg
jecxz
adc
jge
sub
jns
stos
xor
or
pop
imull
push
push
xorb
sahf
rcl
outsb
lods
test
negl
aad
imull
aam
jle
bound
bound
add
xchg
pop
mov
aad
mov
push
pop
pop
jae
fsin
inc
add
jne
inc
movsb
into
jns
pop
shlb
pop
call
jecxz
shlb
cmp
sub
shll
xchg
sbb
mov
scas
jmp
push
pop
hlt
xchg
test
shlb
addr16
sbb
lock
xchg
mov
inc
push
outsb
push
mov
jb
xorl
pop
pop
icebp
cltd
inc
dec
ja
xchg
mov
push
or
mov
dec
stc
mov
sub
sub
insl
fsts
outsl
push
xchg
sub
push
cwtl
stos
dec
loopne
and
sbb
cmc
jbe
aad
lcall
adc
add
cmc
inc
dec
push
loopne
mov
ret
movb
std
rcrb
and
dec
cmpsb
ret
fnsave
daa
xchg
jp
test
sub
cmp
les
jmp
mov
inc
mov
sub
inc
or
push
and
hlt
add
in
pushf
mov
pop
in
dec
int
mov
sbb
mov
ficoml
lret
mov
test
sbb
outsl
cmp
in
fisubl
jmp
lea
mov
cmp
stc
xchg
fsubrl
test
dec
enter
mov
xchg
out
dec
cs
sbb
ret
sub
or
inc
inc
push
icebp
pop
push
inc
aaa
sbb
pusha
mov
clc
cmpsl
imul
jge
or
jb
mov
xorl
sub
not
pusha
ret
sub
es
or
sti
sarl
jno
repnz
dec
psubusb
jnp
lret
adc
shrb
cmpsl
filds
mov
sbb
xchg
inc
loop
jge
push
adc
mov
mov
js
loopne
sbb
mov
mov
sbb
inc
std
add
out
lods
lea
xchg
push
mov
mov
push
xor
add
mov
inc
ljmp
outsb
jecxz
int
lahf
cmp
repz
mov
inc
cwtl
and
push
mov
xor
or
jmp
xor
cwtl
test
aam
lret
aaa
xchg
sbb
pop
pop
insl
mov
inc
sub
push
inc
or
leave
pop
xchg
xor
repnz
into
jnp
pushf
push
mov
arpl
stos
and
push
pop
jp
push
push
cmp
imul
nop
cmpsb
jbe
mov
push
outsb
sti
xor
xor
sub
insb
jg
xchg
and
repz
and
test
imul
sub
sti
fldcw
inc
push
sub
les
lahf
nop
and
repz
mov
js
dec
mov
add
mul
fcoml
rolb
scas
mov
and
jp
fcomi
fnsave
mov
dec
pushf
dec
sbb
push
pop
sub
rorb
mov
and
or
in
mov
fldt
push
movsb
pop
push
insl
aad
leave
add
testl
and
movsb
aad
and
repz
adc
xchg
enter
out
jmp
push
mov
loope
xchg
jge
cltd
jne
or
adc
jne
xchg
out
jns
add
jmp
inc
xchg
add
jg
aas
insl
push
loope
gs
cli
outsb
shl
mov
addr16
movsb
and
outsl
repnz
outsl
jnp
out
loope
cmp
mull
push
dec
inc
hlt
pop
aaa
dec
or
popa
lret
idivl
les
ficomps
push
pop
in
aas
cmp
jecxz
xor
jecxz
sbb
mov
leave
js
lds
imul
jbe
shll
dec
dec
mov
dec
les
pusha
jecxz
arpl
push
and
sahf
aam
and
not
scas
mov
and
xchg
add
ds
push
and
ret
xchg
jecxz
loopne
in
jns
in
gs
adc
sbb
movsb
sbb
rcrl
add
sahf
scas
sbb
fiaddl
xor
ljmp
ficomps
ret
push
add
xor
mov
mov
push
sub
adc
jnp
in
xchg
sub
int
popf
das
lcall
dec
jb
sbb
sub
mov
cli
sarl
ja
pusha
mov
stos
sub
rcll
fistps
mov
out
mov
sub
mov
pxor
add
shl
cmp
ret
sub
jae
jecxz
adcb
cld
push
gs
fwait
shll
add
xchg
test
sti
adc
cmp
sub
outsb
outsl
xor
push
iret
ljmp
js
pusha
fisubs
cmpsb
push
adc
sbb
and
cmpsl
cmp
push
cmp
jle
sub
adcb
pop
test
cmpsb
into
pop
dec
xchg
pop
test
sub
aad
pop
sbb
cmpsb
cmc
jbe
std
adc
in
xchg
scas
lds
dec
hlt
inc
mov
sub
mov
lret
inc
loopne
ds
pop
lahf
lcall
add
aad
mov
xchg
je
mov
mov
fnstsw
jmp
push
sub
ss
repz
es
mov
or
fistpl
fisubrs
subl
movsl
fdivp
pop
fildl
xor
xor
aas
std
sbb
push
outsl
dec
mov
sbb
sbb
decl
mov
loop
push
jl
mov
arpl
imul
pop
mov
adc
femms
lret
mov
test
dec
mov
pushf
aaa
lock
nop
pop
loop
adc
mov
cli
sub
pop
adc
rcll
inc
sti
idivb
inc
and
mov
out
mov
mov
add
loopne
push
shll
inc
push
push
and
sahf
cmp
frstor
adc
fs
jne
xchg
aaa
mov
loope
repnz
push
int3
inc
xor
int
xchg
into
mov
sub
lahf
push
push
call
test
inc
push
icebp
daa
lcall
mov
loopne
lret
lods
add
pop
cmpsb
cs
pop
test
roll
xor
popf
in
xchg
scas
testb
inc
in
jge
daa
jb
in
push
stos
pop
cmp
in
jns
test
pop
testb
stos
xlat
mov
clc
jo
stos
xchg
ret
mov
arpl
mov
pop
inc
cld
pop
or
in
xchg
mov
dec
sar
xchg
push
and
insl
sub
cmp
lahf
bound
or
dec
mov
and
adc
mov
dec
fistl
rclb
gs
push
je
push
les
jbe
les
dec
jb
pop
sbb
es
popf
sub
cltd
jne
es
push
int
add
mov
dec
lret
push
or
xor
mov
in
or
xchg
adc
xor
shlb
sbb
sbb
dec
movb
pop
f2xm1
cmc
adc
out
jae
pop
push
mov
pop
int
and
adcb
out
dec
mov
cltd
add
xor
xlat
sbb
jg
add
add
pusha
jbe
push
add
mov
cs
jle
nop
and
movsb
pop
pusha
adc
stos
jne
pop
adc
mov
jp
add
mov
clc
jg
fdivl
and
mov
mov
sbb
add
cwtl
dec
icebp
stos
lea
pop
jo
sub
lret
fidivs
aad
push
bound
mov
cmpsl
push
ljmp
arpl
mov
adcl
lcall
int3
sahf
shr
sbb
notl
pop
lret
inc
dec
jmp
pop
lret
jnp
xchg
sub
subl
sahf
loope
in
out
mov
sti
insb
xor
cmp
int3
pop
xchg
sahf
push
lods
repnz
jne
popa
popa
mov
mov
shrb
inc
xchg
jbe
out
or
jbe
jb
inc
jle
jmp
adc
lcall
push
es
icebp
mov
loopne
lahf
jg
push
push
icebp
cmpsl
xor
cli
add
movsl
rolb
bound
enter
dec
xchg
cmp
mov
test
arpl
dec
out
neg
mov
ss
inc
inc
mov
bswap
xor
shrb
aad
out
pop
sbb
fmull
iret
xor
popa
es
sbb
fiadds
dec
and
pop
add
filds
rorb
fcmovu
ds
fldt
sub
aam
imul
sahf
lret
jge
push
xchg
popa
subl
cs
in
in
mov
cmp
jecxz
cwtl
notl
ja
lahf
pop
stc
dec
mov
stos
push
lock
cld
mov
test
out
loop
stos
pop
add
rcrl
push
mov
push
mov
idivl
lods
andb
lcall
ret
or
gs
cmp
out
push
pop
mov
add
test
lret
stos
mov
xchg
imul
pop
xor
mov
movsb
sub
pop
inc
sbb
cmpsb
or
pop
testl
add
lret
popa
cmp
adc
aam
cmp
testl
add
dec
inc
dec
cmp
sti
push
push
mov
add
aad
adc
mov
or
or
mov
fistpll
out
adc
call
mov
adc
adc
test
inc
lret
fists
mov
mov
aad
hlt
mov
out
mov
pusha
xchg
push
cwtl
push
fcomp
push
out
bound
jno
iret
movsl
mov
push
xor
bnd
shrb
mov
rcr
out
sti
jae
notb
inc
scas
loope
pop
sub
sbb
orb
cmpsb
sbb
gs
cmp
or
call
imul
mov
stos
adc
inc
xorl
loopne
stos
push
sbb
mov
fistl
dec
jne
sub
add
dec
cmp
push
out
mov
cli
xchg
push
mov
jb
mov
mov
rolb
jnp
pop
out
insb
xor
or
fists
and
movl
je
arpl
push
cli
jne
add
adc
mov
insl
cli
push
arpl
out
arpl
ljmp
sub
shll
pop
pushf
mov
push
mov
mov
das
pop
dec
jnp
aad
inc
pop
mov
or
icebp
rcll
add
fists
test
xchg
jo
inc
rorw
cmp
popf
pop
mov
xchg
test
dec
push
hlt
xchg
in
in
pop
addr16
stos
jmp
xchg
cmp
lret
adc
daa
mov
inc
js
xchg
jle
in
jo
xlat
pop
rcrl
mov
test
addl
pop
ss
mov
jecxz
mov
mov
loop
outsl
xor
mov
aas
mov
cmp
dec
sbb
sbb
pop
lahf
das
adc
xor
clc
icebp
dec
cmp
add
xor
shr
jno
ficompl
and
daa
adc
nop
cltd
sbb
out
pop
int3
mov
inc
in
stos
stos
xor
jmp
sub
jns
in
lret
addl
mov
shll
jae
pop
dec
repnz
jl
sbb
sub
inc
sbb
mov
sub
cmp
push
pop
jnp
pop
das
hlt
fiaddl
loopne
mov
jl
cmp
data16
or
scas
mov
jmp
dec
loope
inc
aas
adc
pushf
xchg
aad
sub
loope
push
repz
insl
in
xchg
gs
aad
sarb
inc
and
xchg
ret
das
sahf
inc
leave
inc
lds
ljmp
xor
jge
xchg
pop
xlat
icebp
inc
idivb
inc
sbb
out
mov
and
mov
dec
xchg
mov
cwtl
mov
sti
xchg
outsb
pushf
sub
daa
fwait
inc
cmpsl
ror
gs
jecxz
xorl
mov
test
mov
rorb
dec
adc
test
lock
jp
adc
lret
add
nop
jp
adc
xchg
pop
stos
mov
stos
jno
sub
xor
mov
hlt
rcll
xor
push
das
rol
xchg
mov
test
cmpsb
es
hlt
psubusb
lds
pusha
sub
pop
xchg
push
mov
or
jb
ja
jno
hlt
loopne
clc
xchg
stos
es
jge
jne
and
xor
jno
sub
xor
leave
lcall
cmp
enter
mov
push
mov
jmp
jmp
lock
rcll
dec
or
jge
mov
mov
mov
push
adc
xchg
dec
scas
ja
sub
pop
das
mov
or
push
adc
scas
je
sahf
and
icebp
sbb
cmp
and
int3
and
enter
cmc
inc
sahf
or
push
mov
inc
aam
push
mov
scas
dec
xor
xchg
nopl
add
unpcklps
pop
mov
pop
inc
shll
movl
and
sbb
jne
aas
les
mov
loopne
into
fldenv
sub
pop
cwtl
xor
outsb
arpl
jb
ficoms
enter
inc
nop
adc
test
jl
cwtl
fs
mov
sub
sbbb
dec
orl
cmpsb
imul
enter
dec
sub
inc
in
and
orl
add
mov
sbb
iret
push
mov
icebp
loope
pop
dec
lret
jo
sub
cmpsl
in
ja
jp
je
mov
andb
sbb
inc
leave
inc
stos
cmp
mov
jns
push
aaa
push
xchg
hlt
in
inc
popf
cmp
and
cwtl
push
cwtl
imulb
mov
lds
cmc
jl
into
inc
cmp
xchg
cltd
mov
cmpsl
sub
iret
in
inc
mov
out
in
ret
fmuls
cmp
and
xchg
add
popf
clc
outsl
stc
xor
jne
jne
sub
mov
mov
push
lret
cmp
mov
mov
sbb
xchg
inc
push
sbb
cmp
inc
or
and
andb
xchg
xor
pop
push
xchg
fbld
add
dec
xchg
mov
test
sub
jno
aas
mov
inc
xor
or
mov
ja
pop
pop
cmp
test
sahf
add
push
daa
add
add
inc
ret
mov
inc
and
sbb
movl
xor
jne
out
fadds
push
and
movsl
mov
aad
loope
push
sbb
xchg
jnp
or
fs
mov
add
movsb
dec
mov
adc
dec
adc
add
mov
mov
mov
inc
mov
mov
cmp
loopne
lock
mov
mulb
push
ret
lds
mov
pushf
sub
pop
adcb
decl
inc
addb
jg
add
imul
mov
push
push
push
fcompl
daa
pop
addr16
lea
sbb
out
int
inc
adc
push
xchg
dec
push
test
and
clc
and
xchg
inc
cli
adc
push
outsb
fidivrl
xchg
jb
cwtl
add
push
jmp
xchg
jnp
push
shrb
enter
dec
rcl
ja
out
dec
mov
or
leave
push
sub
add
and
mov
jb
xor
jae
add
jmp
push
and
mov
xor
cmc
aam
mov
ret
shll
sub
ficoms
hlt
ficomps
aaa
nop
pushf
sbb
or
nop
or
enterw
push
xor
push
dec
lds
mov
pusha
fisubs
or
pinsrw
adc
xchg
lahf
add
je
dec
std
cmp
jecxz
sub
mov
fucomp
lods
push
push
or
lock
rcll
fs
fiaddl
bound
arpl
jb
insl
mov
sub
mov
jns
imulb
or
sub
rorl
pop
xor
xor
pushf
ja
pop
or
mov
int
jmp
iret
push
stc
xchg
lret
loopne
fimull
lret
dec
jl
xchg
fwait
bound
aaa
clc
ffree
mov
lahf
xor
stos
subb
mov
pop
sahf
popa
add
mov
repnz
lret
push
pop
std
inc
insb
push
dec
inc
cmovns
sub
out
lahf
mov
ficoml
enter
hlt
out
enter
mov
in
in
fadds
shlb
cltd
mov
mov
call
fldcw
cld
arpl
or
ret
add
inc
sbb
cmp
and
mov
addb
xor
rorb
clc
rcll
lcall
fwait
adc
stos
fwait
push
push
call
fwait
mov
pop
pop
test
enter
insl
fwait
inc
sbb
inc
push
scas
stos
cmpb
jno
and
pop
mov
mov
aad
pusha
pop
mov
incl
je
adc
pop
xlat
je
jp
adc
push
mov
and
sbb
std
or
push
mov
xchg
mov
xlat
repnz
divb
popa
in
ss
and
lock
int
aad
ljmp
sub
and
and
daa
push
add
cmp
icebp
stc
data16
or
sub
imul
fs
cmp
scas
inc
or
xchg
cli
inc
adc
imul
xor
add
mov
mov
outsb
imul
not
nop
dec
idivl
push
shll
popl
xor
pop
inc
pop
js
fildl
or
ffreep
mov
sub
jge
push
push
out
mov
xchg
out
mov
fdivrl
aaa
or
dec
inc
and
jl
rcrb
mov
rcr
or
cmp
fsubs
inc
lock
fxch
arpl
insb
sar
xchg
inc
pusha
mov
ljmp
xchg
mov
test
adc
ljmp
outsl
insl
jle
mov
sub
xor
repnz
outsb
out
dec
xor
lret
frstor
ficoms
mov
sbb
and
mull
push
js
ss
fidivrl
inc
pop
aam
icebp
xor
stos
aad
enter
fsubrl
mov
jmp
adc
ror
mov
add
pusha
mov
fs
lcall
mov
inc
adc
jbe
or
data16
jp
inc
xor
push
jae
testl
mov
and
xchg
popf
fs
pop
push
jecxz
sbb
js
fucomp
push
push
dec
jbe
add
lahf
repz
mov
loope
xchg
scas
mov
dec
pop
push
imul
inc
sub
adc
jns
ret
sar
or
aas
cmp
or
jb
dec
sbb
test
mov
dec
xchg
je
mov
pop
push
jno
xor
cmp
mov
stos
cmp
les
test
aas
mov
xchg
movsl
lods
xor
rcll
inc
popa
rcl
test
adc
or
adc
and
cmpsl
das
sbb
loope
adc
jns
push
mov
dec
ljmp
fwait
out
scas
lahf
aas
ss
es
push
imul
roll
les
xor
pop
call
dec
mov
pop
inc
cmp
int
insl
mov
pop
inc
andl
mov
mov
xor
repz
clc
xchg
in
es
mov
jp
pop
aad
push
sub
push
test
push
xchg
popa
cmp
hlt
mov
cmp
in
aaa
push
pop
lahf
popf
dec
adc
add
mov
imull
and
lcall
ss
daa
out
mov
insl
rclb
mov
mov
hlt
xchg
mov
into
mov
insb
fistl
ss
push
aam
stos
sbb
add
jecxz
or
push
insb
dec
mov
cmpsl
cmpsb
fs
icebp
enter
stos
push
jnp
out
mov
and
mov
sbb
inc
mov
add
push
pop
les
int3
cmp
iret
js
or
popa
push
std
pop
add
add
jnp
aad
xchg
xchg
or
push
jno
int
pushf
bound
add
mov
dec
insl
dec
leave
movsl
xchg
shll
aaa
insb
and
negb
pop
insl
and
pop
mov
je
rol
fiaddl
nop
jmp
pop
jl
cmp
mov
test
pop
add
mov
jp
xor
sub
mov
jb
fisttps
test
push
imul
cld
dec
push
in
dec
shlb
in
clflush
adc
or
repz
aas
fisttpll
mov
add
jmp
rorb
test
jno
lods
loope
call
sbb
adc
call
adc
test
into
wbinvd
cltd
test
adc
dec
iret
into
shll
idivl
cmp
lods
mov
jns
andl
jbe
mov
and
decl
inc
xchg
sahf
lea
sub
scas
pop
sub
xchg
fdivrl
xchg
jns
adcl
ljmp
jl
stos
cmp
es
stc
or
fnstenv
push
ret
adc
or
jmp
jp
mov
xor
fildll
out
lcall
jne
push
aas
dec
jne
sarl
inc
add
ficoms
pop
dec
int
push
nop
sub
ret
lcall
fstp
push
xor
fadd
adc
cmpb
cmp
mov
pop
in
pop
icebp
mov
push
sbb
push
push
js
inc
sub
popa
push
adc
xchg
add
bound
jmp
sub
out
bound
lret
cmp
out
sbb
movsb
je
je
pop
jnp
and
push
ja
movsl
sar
cwtl
inc
pop
adc
push
sub
in
mov
int3
jns
sub
cltd
cld
mov
adc
xchg
stc
shl
pop
dec
arpl
jo
and
sub
js
adc
mov
test
outsb
fisubrs
or
adc
outsb
jb
dec
or
scas
ljmp
cmpsb
sbb
roll
les
mov
fwait
and
mov
icebp
xor
ljmp
loopne
push
add
push
ret
subb
push
loop
and
lcall
adc
mov
out
clc
scas
mov
xchg
and
call
mov
stos
hlt
nop
js
push
add
mov
fs
xor
dec
hlt
inc
cmpsl
mov
xchg
out
xchg
fidivl
inc
mov
pop
xchg
bnd
cwtl
cmc
into
notl
call
jp
mov
add
or
mov
gs
int
dec
hlt
out
insb
cmc
add
xor
xchg
rep
xor
js
pop
mov
ljmp
adc
lods
out
repnz
dec
jbe
ja
dec
add
cld
les
leave
sarb
mov
inc
fadds
pusha
push
cwtl
sub
mov
add
jmp
mov
sbb
cmc
mov
xor
xor
jbe
pop
insb
movsb
in
fld1
mov
fildl
jp
xchg
lcall
fwait
popa
je
push
test
gs
pop
add
add
int3
pop
fistl
jmp
push
mov
repz
test
jb
jne
scas
add
sti
test
scas
int
sbb
push
push
in
jle
xchg
xchg
dec
mov
push
sub
xlat
mov
pop
dec
int
hlt
mov
pushl
loope
lock
xchg
dec
mov
push
xchg
cmpsb
adc
pop
and
leave
stc
mov
sbb
outsl
icebp
lods
lret
jmp
addr16
push
cltd
pop
inc
cmpsb
ja
adc
cmpsl
ds
dec
mov
rcr
iret
and
lods
enter
pop
mov
inc
inc
in
mov
xor
mov
or
loop
sub
sub
mov
push
imul
sub
stc
dec
lahf
xchg
lock
push
mov
add
fwait
lret
adc
les
inc
addr16
xchg
mov
imul
insb
fwait
mov
mov
pop
pop
iret
mov
mov
leave
js
cwtl
or
cltd
push
icebp
sbb
pop
out
cltd
cmpsb
xlat
xchg
sub
frstor
mov
sahf
pop
lods
je
pop
push
jbe
jbe
pop
outsb
icebp
add
jmp
adc
add
mov
cwtl
inc
repnz
scas
or
sbb
cmp
int3
in
pushf
popa
pop
adc
dec
movsl
fldt
insl
shl
mov
jge
jae
jle
add
mov
mov
adc
xor
inc
addr16
mov
push
sub
cmpsb
sub
fwait
add
jl
in
xchg
and
xchg
stc
daa
or
and
dec
mov
ljmp
xchg
pop
cmc
lret
push
push
fstps
nop
lods
inc
adc
loope
mov
ja
int
mov
sbb
mov
jmp
aaa
cmpsl
filds
mov
scas
callw
data16
int3
add
jnp
pop
push
push
adc
clc
imul
stos
adc
xchg
inc
fwait
pop
sbb
in
dec
out
inc
xchg
add
jbe
pop
das
pusha
and
les
sub
mov
out
mov
bound
inc
out
pusha
gs
and
mov
cmp
enter
inc
push
and
rorl
mov
loopne
lods
les
jnp
inc
enter
testl
add
pop
sbb
sbb
push
shrb
push
adc
mov
ss
sbb
in
sbb
out
lock
or
mov
adc
rcrb
xchg
jae
leave
sub
fcomps
insb
das
push
aam
stos
and
and
adc
mov
sub
and
xchg
sub
testl
xchg
sbb
divl
loop
aad
sub
outsb
adc
lods
and
sub
push
cltd
aad
test
scas
jp
sahf
push
repz
sarl
cmp
hlt
dec
std
in
sbb
mulb
pop
ds
das
pop
loope
icebp
xor
aas
fistps
faddl
js
cmpb
into
imul
and
shlb
add
stos
orb
jecxz
mov
ds
mov
mov
mov
pushf
xor
and
push
cld
jge
sahf
add
bound
in
lret
pop
xchg
xor
push
int3
scas
movsb
mov
mov
loopne
inc
add
mov
dec
sbbb
xchg
cwtl
xchg
stc
pop
dec
sbb
sub
nop
lds
pop
out
pop
add
in
inc
xor
pop
ret
shll
or
and
sbb
xor
add
cltd
mov
mov
sarl
sbb
cld
bound
and
lret
arpl
sub
roll
aad
imul
and
dec
dec
cld
xlat
mov
pop
call
sub
hlt
xor
dec
push
insl
push
cmpsl
popf
jmp
push
shll
mov
push
mov
arpl
sbb
sub
sbb
leave
aam
mov
shr
bound
xchg
hlt
ja
pop
leave
je
dec
cwtl
je
inc
mov
pop
jo
loope
jne
lods
mov
mov
iret
push
jg
mov
mov
int
push
xor
or
dec
sbb
data16
rorb
pop
push
ljmp
adc
push
xchg
repz
aad
les
rcll
push
cltd
popa
dec
and
out
fisttps
sub
cmp
aas
adc
dec
fdivrl
fisubrl
mov
mov
cmp
dec
hlt
push
jl
ljmp
addps
add
jne
mov
push
jns,pt
jle
in
sub
mov
mov
xor
cmp
dec
or
ljmp
push
adc
hlt
mov
idivb
sbb
add
mov
sbb
shll
loop
js
jne
push
or
mov
adc
mov
cli
aad
out
cmpsb
sub
mov
mov
std
into
sbb
pop
xor
jecxz
mov
rcr
sti
inc
mov
xchg
or
dec
mov
mov
iret
loopne
nop
push
mov
or
dec
lods
add
jmp
sahf
mov
int
mov
mov
mov
mov
pop
jns
push
stc
jnp
mov
fisubs
in
addr16
enter
cmp
lcall
cmp
das
hlt
pop
pop
imul
repz
pop
add
cld
jecxz
dec
mov
test
daa
ds
mov
sti
mov
stos
outsl
add
jb
mov
mov
aas
or
aas
sbb
cmovl
add
jno
mulb
mov
sbbb
fwait
mov
adc
dec
mov
es
stos
inc
push
popa
rcrb
rcrb
mov
or
and
aam
fwait
les
pop
jnp
and
mov
xor
subl
addr16
xchg
ja
mov
sbb
and
adc
cli
cld
cmpsb
xor
mov
cmc
sbb
jl
pop
adc
in
aaa
sub
int
notb
shll
pop
mov
dec
test
adc
jo
scas
aam
fisubrs
jb
or
mov
popa
xor
xor
cmpsl
cmp
jb
inc
mov
daa
sub
sbb
call
sbb
imul
enter
pop
std
jl
sub
mov
and
jmp
inc
push
iret
cmp
inc
push
leave
scas
jb
fdivs
addr16
imul
push
inc
les
ror
rcl
pop
dec
mov
dec
add
xorl
dec
dec
in
mov
test
and
scas
nop
cmpsb
mov
inc
mul
fbld
ljmp
jns
dec
pop
push
xor
sub
loopne
adc
icebp
addb
mov
icebp
roll
xchg
lods
and
mov
push
pop
xlat
push
dec
das
mov
mov
fsubrl
push
dec
mov
test
adc
fbstp
addr16
std
cmp
dec
adc
sbb
dec
dec
les
push
pop
mov
cltd
jnp
adc
mov
mov
data16
mov
pop
cmpsl
fcmovnbe
xchg
inc
and
jnp
mov
arpl
xchg
xor
rolb
jg
jle
lret
dec
call
decl
shlb
dec
add
add
add
out
add
pop
je
mul
cli
jp
imull
mov
test
inc
test
adc
dec
sbb
fidivrl
mov
gs
jl
pop
ja
out
mov
imul
mov
not
add
inc
fidivrs
enter
mov
lret
xchg
sub
sbb
mov
das
pop
outsb
add
movsl
jl
sub
dec
sub
lret
hlt
pop
addr16
fimuls
adc
test
or
mov
repz
mov
push
rclb
in
mov
clc
insl
xor
cmp
sbb
fnstcw
xor
pop
mov
lock
out
test
int
mov
push
jl
mov
loope
orl
ret
push
data16
sar
fwait
pop
push
add
mov
inc
mov
jp
ss
or
scas
add
jnp
push
or
mov
cs
and
or
mov
jo
xchg
push
sub
fisttps
and
out
int
sub
sub
lret
data16
pop
cmp
push
sbb
in
rcll
outsl
xchg
out
mov
push
insl
pop
mov
dec
mov
js
mov
fdivrl
movsl
mov
jne
out
sbbl
xchg
xor
push
push
sbb
pusha
jge
js
aad
sbb
lret
js
inc
sub
cmp
push
mov
bound
insl
jne
inc
inc
mov
orl
clc
shr
inc
sahf
in
cwtl
gs
cld
in
xchg
xor
push
sbb
aam
aas
dec
lea
stos
add
jg
adc
push
jmp
mov
adcl
xchg
dec
pop
fsubl
loop
mov
punpckhwd
hlt
mov
mov
jns
mov
or
add
push
sbb
push
in
add
and
shll
shrb
push
dec
mov
add
jp
dec
push
mov
xchg
xor
and
js
andb
pop
test
fdivrl
mov
out
dec
iret
mov
add
insl
out
shl
sbb
push
int
in
push
pop
jp
jmp
sbb
test
insb
and
scas
sub
enter
sub
cmpsb
and
push
and
cmp
lret
add
adcb
xchg
jp
inc
cmp
pop
imul
inc
mov
push
lret
or
dec
add
inc
push
rorl
lods
loope
lret
sbb
movsl
add
fwait
mov
mov
mov
movsl
xchg
xor
negl
jp
lret
mov
inc
arpl
sub
and
jae
ds
movsb
mov
mov
jl
cmp
cmp
aam
xchg
int3
sbb
xchg
mov
movsl
movsb
out
sbb
inc
mov
adc
test
jecxz
jecxz
or
pop
mov
clc
inc
pop
call
mov
std
mov
stos
mov
cmp
testb
test
movsl
fisttpl
paddsb
mov
dec
ret
xchg
xchg
enter
dec
sarb
push
mov
add
fadds
push
push
xorb
sub
sti
sahf
ret
and
lock
pop
mov
test
sar
fnstenv
inc
ret
insl
cmp
adc
shl
add
mov
mov
mov
xchg
enter
aam
xchg
xchg
int3
ret
fisubs
pushf
push
std
gs
aas
test
insb
jmp
pop
xchg
scas
rcl
add
mov
out
fsubl
test
push
xor
sahf
out
fwait
adc
jp
in
cli
xor
cmp
addb
aaa
aaa
ds
scas
jecxz
mov
mov
jmp
stc
lcall
iret
shll
cmp
cli
mov
pop
pop
cmpsl
push
mov
lret
scas
mov
or
sub
mov
jmp
aas
xchg
stc
fidivrs
xchg
push
andb
or
test
or
inc
scas
jge
mov
adcl
movsb
and
jp
mov
inc
aad
and
imul
cmp
dec
and
inc
or
out
bound
mov
jle
cmp
ret
xchg
xchg
inc
popf
ja
and
pop
xchg
pushf
mov
xchg
stc
cmp
iret
out
or
add
inc
pop
cmp
or
ss
xchg
pop
and
mov
daa
pop
in
sbb
out
xchg
mov
sbb
imul
fidivrl
scas
add
cmp
les
or
ss
ljmp
lret
inc
lock
cwtl
lret
jae
xchg
lods
je
enter
adc
call
and
into
ds
fwait
adc
cmp
pusha
xchg
dec
movsb
rcll
es
jecxz
cmp
push
or
rcl
mov
sub
inc
sub
mov
in
shr
dec
call
sbbl
xor
aas
hlt
mov
sbb
insb
xor
add
pop
dec
out
cmpsb
jno
add
das
jnp
inc
ret
insl
in
mov
shrb
adc
mov
in
xor
addr16
shrb
in
jmp
test
and
es
push
dec
mov
mov
roll
cmp
and
jle
icebp
cmp
data16
ljmp
mov
movzbl
adc
imul
and
sbb
push
jmp
mov
jbe
js
mov
pop
dec
mov
cld
jbe
mov
rclb
out
cmp
shlb
pop
lret
cmc
push
mov
into
je
mov
jbe
cwtl
testb
or
push
repz
call
pushl
es
pop
jae
stos
push
push
push
cmp
repz
shll
inc
mov
jae
addr16
fisttpll
sub
xchg
inc
xchg
dec
fildll
lock
cmpsb
icebp
xor
sub
inc
sub
rolb
leave
lcall
jmp
arpl
loopne
jb
int3
subl
mov
inc
push
iret
std
or
mov
outsb
mov
popa
in
lock
imul
inc
movsb
scas
cmp
lds
addb
push
xchg
mov
add
shlb
mov
clc
lods
and
cmpsl
sbb
outsl
mov
dec
dec
leave
xchg
ja
shlb
jbe
rcrb
outsb
inc
lret
or
jae
sbb
sbb
fisttpll
jae
pushf
or
and
dec
pop
mov
xlat
aam
xchg
fsubrs
push
sahf
pop
push
adc
fiaddl
inc
in
test
rorb
jg
popa
mov
or
xor
repz
xor
and
pop
adc
ljmp
cmp
pop
xchg
stos
lret
scas
and
xchg
loop
and
xchg
adc
sarb
jge
pop
jo
inc
inc
mov
aaa
mov
js
addb
scas
icebp
cmp
jp
lock
xchg
sbb
test
int
push
lods
sar
xchg
leave
dec
mov
repnz
lret
arpl
movsl
mov
xlat
mov
jbe
push
roll
xor
xchg
sarb
and
test
pop
or
sarb
xor
sbb
incb
call
out
in
xlat
jecxz
xor
cmp
lds
add
shr
mov
lods
insb
sar
pop
adc
test
xchg
jne
decb
cmp
jg
lods
ljmp
pushf
inc
dec
add
test
mov
xchg
lods
and
push
in
out
xor
int3
sub
sti
cld
or
jb
xchg
shrl
cli
push
xor
adc
cwtl
loope
or
lahf
std
aad
and
lods
inc
sub
push
mov
mov
dec
in
push
fnstsw
mov
cmp
mov
rclb
in
lock
aad
aam
repnz
hlt
or
lret
sbb
push
sbb
add
jp
pop
jae
sub
cmp
cmp
adc
fwait
jle
xchg
pop
mov
or
pop
mov
pop
mov
dec
inc
add
scas
in
fsubr
xchg
lcall
sub
xor
and
icebp
imul
incl
mov
inc
cwtl
repnz
jmp
push
loop
xchg
mov
sbb
repnz
jo
pop
or
or
dec
xor
cs
ss
and
xlat
push
adc
fldpi
adc
sti
in
mov
and
stc
cmp
jmp
sbb
jns
add
inc
mov
test
pop
mov
loope
mov
push
dec
fiadds
lds
pop
int
push
pop
dec
rclb
lcall
pop
dec
daa
clc
mov
cmc
into
cmp
loope
dec
fcmovnu
out
or
inc
dec
sbb
cmp
imul
adc
pop
lds
lretw
adc
outsl
lret
or
fmulp
sbb
add
push
outsb
aam
push
arpl
push
int
xlat
dec
and
sbb
xchg
roll
stos
push
pop
mov
fdivp
xchg
hlt
aas
mov
icebp
out
nop
loop
pop
push
or
fidivs
pushf
add
fs
imul
call
mov
cs
dec
xor
pop
jge
sub
dec
mov
xchg
shl
pushf
mov
pop
mov
stos
dec
les
cmc
fcmovbe
xchg
or
aaa
dec
popl
lcall
lcall
sbbb
rcll
xchg
divb
or
mov
pop
insl
cli
xchg
mov
mov
pop
data16
sbb
mov
divl
jmp
ja
cmp
aaa
xor
pop
mov
lds
sti
cld
inc
fcmovnbe
stos
or
aas
nop
lock
adc
out
mov
test
mov
stc
inc
or
rclb
jl
hlt
inc
or
or
adc
fcmovnb
ds
fisubl
rorl
movsb
in
and
imul
cld
dec
xor
callw
das
dec
adc
xor
inc
adc
add
push
out
shll
mov
sbb
fsubs
stos
jnp
adc
pop
inc
mov
jbe
aad
jecxz
in
and
movsl
pop
js
imul
adc
imul
mov
mov
push
iret
sbb
push
jne
cmp
fwait
out
fistl
stos
ja
xchg
arpl
shlb
rclb
lods
pop
jmp
dec
fstpl
mov
xchg
mov
icebp
loopne
pop
or
xchg
psrld
jb
mov
rcrb
test
sbb
leave
cmpsb
testb
test
push
xor
xchg
into
jbe
add
push
aad
mov
add
ljmp
pop
xlat
fildll
icebp
sub
or
int
mov
jnp
inc
ss
dec
push
stc
xor
and
cmp
mov
movsl
mov
lcall
mov
pop
mov
push
lods
aam
push
mov
sbb
fists
xor
insl
and
adc
mov
lds
ja
cmp
rep
stos
xchg
push
add
sub
jne
stc
push
sub
cli
dec
sub
aaa
push
adc
xchg
adc
loop
mov
rcrl
call
or
xor
sbb
push
adc
lahf
popa
lcall
out
ret
lock
dec
insl
sbb
xor
mov
sub
mov
pop
adc
sub
ret
push
jp
xchg
cli
inc
outsl
sub
ret
ret
sub
adc
lcall
lods
out
push
ljmp
lods
add
mov
dec
ret
add
sbb
andb
not
insb
add
lcall
sbb
adc
in
das
push
js
mov
test
xor
pop
lods
cmp
xchg
xchg
or
dec
shrb
jp
fs
jp
shll
insb
stc
lods
sbb
sub
sbbb
stc
xor
call
rcrl
bound
sub
mov
incl
mov
add
push
out
cmp
cmp
mov
xor
dec
and
dec
fsubp
aad
les
push
test
xchg
das
xchg
xlat
sti
jae
sub
arpl
in
add
xor
ss
scas
mov
cli
adc
loopne
das
xor
jge
dec
lret
sub
jnp
jge
hlt
mov
jb
shll
out
mov
mov
cmpsl
pop
xorl
mov
push
hlt
fistpll
and
pop
inc
or
test
xchg
lret
pusha
jae
cld
in
jnp
push
xchg
iret
add
xorb
fs
jle
daa
dec
adc
push
in
ljmp
cvttps2pi
insl
xchg
in
dec
arpl
inc
and
inc
out
ss
shrl
sbb
insl
scas
rol
cmp
cwtl
adc
call
lea
pop
sbb
js
jmp
fsubrs
xchg
or
add
or
mov
inc
jecxz
incl
rcr
movsb
frstor
pop
pop
push
xor
cmpsl
mov
shll
add
inc
lods
sahf
ror
ja
and
sub
mov
inc
inc
jl
xor
cmpsl
mov
sbb
pushf
push
pop
ljmp
sub
in
xor
jo
cmc
pop
cld
outsb
loop
pop
and
lods
clc
mov
cmpsl
pop
movsl
test
frstor
shrb
jnp
or
push
fcoms
pusha
jmp
or
xor
pop
stc
aas
pushf
cltd
jp
pop
outsb
arpl
sub
inc
cmp
and
sub
stc
in
pushf
std
test
addb
pop
lea
setne
les
cmpl
mov
pushf
xor
lcall
shll
ror
pusha
ds
jp
xor
push
je
rep
pusha
sub
out
mov
or
enter
mov
pop
in
xchg
pusha
sub
rcrl
cli
cmpsl
imul
in
call
int
xchg
cmp
dec
aam
push
inc
xchg
jg
mov
enter
rorb
xor
dec
cmpsb
and
jg
rorl
mov
insl
leave
aam
aam
xor
shlb
mov
pop
xorl
cld
rol
push
sub
push
xor
shr
push
inc
sbb
jg
das
iret
sahf
inc
and
or
cmc
andl
daa
frstor
icebp
sbb
add
lea
dec
xor
jns
lret
psadbw
cld
addr16
aas
jne
push
jmp
in
ret
adc
fwait
pop
fildl
pop
js
and
adc
sub
mov
roll
push
push
ficoms
fcompl
xor
jae
das
xor
std
aad
mov
aas
adc
lods
push
fwait
das
movsl
push
dec
jb
pop
mov
jecxz
andl
lods
xchg
jle
add
fnstenv
adc
inc
push
int3
dec
scas
out
xor
pop
fbstp
pop
xor
add
data16
jl
pushf
or
out
sbb
inc
sub
sbb
xor
mov
cmpsl
cli
movsl
js
cmpb
mov
or
into
dec
data16
adc
xor
mov
inc
mov
jmp
or
xor
inc
mov
arpl
cmp
jg
insb
lcall
mov
mov
fcoms
out
jns
adc
les
ret
idivb
dec
adc
pop
xchg
mov
inc
jl
ret
jge
cmpsb
sub
add
popl
jns
push
add
push
aas
test
call
jnp
inc
data16
int
mov
out
out
cs
cmp
pop
movsb
and
lds
lea
sub
mov
sub
dec
cmpsb
sbb
sbb
mov
dec
xchg
xor
ljmp
loopne
insl
jp
jo
xchg
jle
mov
sbb
sbb
dec
ficompl
or
ljmp
jno
jecxz
ja
cwtl
imul
sbb
sub
loop
pop
dec
icebp
or
xor
pushf
jg
push
sbb
idivl
mov
mov
adc
mov
cmp
and
xchg
xor
xchg
out
dec
addr16
dec
push
subl
cmpsb
movsl
aad
xor
push
xor
test
jbe
imul
mov
xlat
push
inc
fwait
jae
xchg
aas
mov
sub
out
ja
push
fstpt
fsubs
or
testb
sbb
dec
xchg
fldenv
std
mov
jecxz
push
andb
jle
xchg
pop
sbb
xor
lret
xor
test
fisttps
ds
adc
sarl
jmp
imul
jae
rclb
les
mov
into
in
sbb
shll
ja
xor
cltd
scas
and
out
push
lods
movsb
jg
mov
cmc
add
jg
iret
loopne
ficompl
sub
mov
test
icebp
ret
loop
mov
rclb
into
out
jns
cmp
mull
out
adc
pop
scas
arpl
mov
jo
cltd
cld
add
ja
in
and
daa
fdiv
pusha
aaa
mov
jge
scas
and
jl
daa
loop
bnd
lds
adcb
sti
or
out
frstor
xchg
scas
jg
outsb
call
out
imul
add
pushf
sbbb
inc
and
fisttps
push
aad
jle
mov
andl
sbb
ret
fiadds
cli
inc
sti
aad
aaa
jg
loope
or
movsb
das
push
push
cmc
out
aaa
int
rorl
rcr
stc
cs
mov
fs
stc
push
ljmp
out
inc
int
aad
jle
mov
inc
fwait
push
xchg
rclb
xchg
mov
and
imul
xchg
call
out
and
ret
hlt
sub
add
ja
mov
dec
push
mov
in
push
or
sub
rcll
in
xchg
sub
das
dec
lret
mov
pop
and
lahf
pushf
je
sub
mov
loopne
ss
aaa
data16
test
int
adc
cmp
xor
insl
cltd
inc
adc
leave
jmp
es
loopne
pop
or
push
ss
inc
push
lods
leave
aad
popf
and
xchg
jnp
aad
in
mov
xor
rol
adc
dec
mov
sbb
cwtl
xor
mov
xchg
mov
cli
ret
adc
out
ja
xchg
xor
inc
outsb
lcall
ss
lret
pop
loope
pushf
pop
pushf
xor
pop
sub
fs
int
js
push
aaa
adc
imul
faddp
in
icebp
fbstp
push
push
fldcw
xchg
stc
inc
mov
subl
inc
es
xor
std
pop
adc
and
pop
outsb
and
repz
out
in
cmp
cmp
dec
aad
inc
add
adc
cmp
shrl
jge,pn
stos
sub
ret
iret
ret
fs
sbb
lcall
inc
idiv
jo
sub
movzbl
cmpsb
pop
fdivrl
movl
fucomp
jo
int3
push
mov
ja
sbb
mov
nop
add
and
cmpb
xchg
jb
cld
mov
leave
lret
addr16
fimull
cld
mov
push
and
mov
repz
pop
test
dec
dec
push
and
out
cs
inc
shll
adc
mov
lods
std
mov
push
arpl
adc
cs
jo
loopne
push
sub
sbb
add
dec
mov
call
into
and
fistps
add
dec
pop
inc
xor
int3
and
inc
sub
pushf
stc
mov
xchg
xchg
addl
sbb
xchg
cmp
pusha
insb
gs
mov
adc
adc
push
das
xor
dec
pop
pop
fldt
push
mov
jmp
adc
or
lret
int
sub
xor
dec
jle
add
fidivrs
lods
enter
and
jmp
dec
icebp
cld
sub
mov
test
dec
push
xchg
daa
cmp
daa
adc
cmp
xor
xlat
mov
cmpsb
cli
jne
sti
dec
push
negl
or
insl
mov
cmp
les
mov
dec
dec
pop
fistpll
cmpsb
movsb
insl
vmread
sbbb
inc
and
cmp
inc
sti
dec
push
faddp
mov
mov
daa
or
sbb
sbb
jecxz
les
in
mov
mov
loop
add
xchg
test
push
push
mov
pop
xchg
dec
cmpsl
add
adcb
inc
icebp
adc
mov
dec
repz
push
lock
pushf
roll
shrb
popf
adc
cmp
pop
push
jmp
push
and
sbb
add
inc
sbb
cmp
dec
test
mov
and
or
add
xor
lds
loopne
cmp
dec
lahf
fwait
add
hlt
in
and
int
in
mov
cwtl
pop
sbb
stos
mov
jnp
iret
sbb
jmp
subb
in
fdivrs
jb
mov
loop
mov
pop
movsl
js
mov
mov
insb
push
loopne
push
dec
pop
sbb
add
and
pop
sub
pop
dec
pusha
and
shll
push
push
mov
out
mov
xchg
mov
gs
mov
push
push
jg
mov
and
add
cmp
pop
daa
sbb
jmp
and
add
add
mov
pop
pop
or
lahf
add
and
push
and
incl
ret
pop
ret
lret
mov
inc
test
loopne
mov
lea
mov
in
push
xor
test
lods
into
xchg
bound
push
and
addr16
sub
test
add
cltd
std
insb
fcmovbe
adc
or
add
mov
test
xor
enter
ret
mov
sbb
cwtl
pop
clc
scas
xchg
cmc
push
stos
sub
cmp
pop
xlat
xor
addl
aaa
sub
jno
and
push
es
lods
cld
push
ret
ffree
mov
push
xor
mov
ja
push
inc
rolb
push
or
dec
xchg
and
mov
icebp
mov
nop
out
xor
rcr
int3
mov
add
not
sbb
mov
pop
ret
in
jmp
fdivrs
hlt
push
mov
adcl
xlat
shll
xchg
mov
push
int
xor
sbb
cmp
pop
xor
ret
cs
jbe
mov
or
scas
test
add
push
and
div
lds
js
adcb
out
add
add
and
movsl
movsl
in
fisubrl
out
stos
and
and
sub
dec
push
cmp
ds
fdivs
and
xchg
mov
mov
add
xlat
scas
xor
push
movzwl
sub
call
sbb
jns
xchg
cmp
stos
insb
cmp
adc
hlt
ret
xchg
loop
into
mov
push
pop
loopne
aaa
pop
inc
aam
xor
repz
test
xchg
sbb
pop
aaa
popa
fdivrl
jge
test
push
xchg
cmp
ljmp
iret
lock
iret
ret
cld
stos
notb
adc
lock
fwait
movsb
mov
add
lds
pushf
pop
movsb
inc
fildl
ds
xchg
pop
xchg
or
xchg
lret
inc
push
dec
out
push
pop
xor
push
test
add
es
jnp
mov
jl
cmp
pop
push
cwtl
and
scas
pop
ret
xlat
sub
and
mov
aas
add
pop
xchg
cs
cltd
bound
int
lock
push
daa
jle
aam
jmp
add
mov
test
movsb
inc
cmpb
popf
rcrb
xor
cmpb
mov
push
push
xchg
out
hlt
lea
fisubl
adc
cs
mov
jo
leave
push
or
adc
scas
xchg
xchg
lods
leave
cltd
mov
popa
in
sbbl
jmp
mov
mov
rcrb
xor
mov
add
loopne
jno
jae
dec
or
mov
pushf
dec
lods
lret
jns
cmc
lcall
pop
mov
insl
icebp
sub
rclb
mov
jmp
inc
bound
xchg
sbb
jg
add
jbe
fildll
sub
hlt
mov
and
sar
sub
pop
mov
push
push
cmc
cwtl
andl
push
outsb
push
and
loop
pop
testl
sbb
hlt
push
jno
ds
std
adc
dec
inc
mov
popa
dec
xlat
test
fistpll
ljmp
mov
or
mov
pop
inc
fidivl
les
pushf
mov
jns
ret
ret
mov
dec
ret
xchg
je
mov
add
pusha
dec
add
movsl
mov
in
jge
pop
into
rcrl
xchg
imul
adc
fcomp
add
xor
into
inc
inc
cmp
dec
mov
daa
jns
mov
jle
int
das
and
adc
fyl2x
out
test
movsl
scas
gs
cmp
xor
adc
push
jae
popa
iret
xchg
and
ficomps
adc
inc
jns
push
inc
sub
fnstenv
add
cwtl
adc
sub
jl
mov
or
or
mov
jno
lods
aas
sbb
repnz
pop
adc
fcmovb
cmp
adc
pop
mov
adc
jecxz
cmp
mov
out
cs
in
out
xchg
jge
daa
xchg
ds
and
mov
dec
sbbl
repz
jo
jo
mov
or
lret
popa
mov
lret
popl
loop
cmp
gs
lret
adc
xchg
pop
loopne
dec
in
rolb
xor
imul
andl
pop
gs
or
xorl
jne
push
add
pop
add
push
scas
stc
jg
dec
pop
call
cmp
clc
mov
sub
aas
je
sbb
imul
jnp
push
outsb
mov
sub
add
aaa
and
inc
aaa
jns
xor
outsl
jp
xorl
cmp
iret
repz
mov
aam
mov
sub
mov
pop
or
and
loope
ret
iret
lds
scas
test
jns
push
cmp
adc
mov
sub
sub
pop
sahf
cmp
rcrb
pop
add
xchg
lret
fwait
imul
xor
mov
adc
das
adc
mov
pop
into
insb
jae
sub
stos
sub
push
sub
mov
cmp
xchg
insl
out
lahf
testl
add
pop
es
jae
xlat
iret
es
sub
cmp
clc
lret
cmpsb
roll
pop
fidivl
pop
aaa
ds
lods
add
cwtl
adc
addl
gs
in
xor
in
int3
in
sahf
aad
sub
xchg
sbb
and
ret
out
into
adc
icebp
xorl
lret
std
in
ret
pushf
push
lock
mov
sub
scas
js
push
call
sbb
pop
xchg
xor
push
mov
mov
mov
pop
out
mov
sahf
out
inc
popf
inc
push
hlt
pop
dec
fnstcw
adc
mov
in
mov
std
ficoms
push
movsl
and
xchg
and
or
lret
sub
nop
inc
adcb
dec
add
or
inc
xor
cmp
fnstcw
lcall
movsb
stos
mov
lea
push
or
in
aas
js
int
jmp
loope
xor
lock
data16
xor
or
nop
je
orb
xor
push
mov
dec
jecxz
iret
and
xchg
push
jae
mov
mov
inc
loope
cltd
adc
inc
gs
xchg
push
lods
lcall
and
jecxz
dec
popa
je
jbe
xchg
inc
sahf
je
push
clc
nop
jl
mov
push
jl
lcall
cli
adc
pop
dec
jne
sahf
iret
xchg
cltd
jecxz
or
mov
fnstsw
and
jge
into
push
sub
addl
or
add
fwait
lods
fdivp
adc
and
fimull
outsb
dec
inc
and
aad
cmp
adc
cmp
insb
jnp
sub
sub
sbb
push
push
cs
add
nop
pcmpgtd
cmc
imul
fimuls
cmpsl
adc
ss
jo
std
xchg
cmp
std
xor
mov
xchg
mov
xrelease
subb
mov
mov
sub
mov
sti
and
and
call
sub
ljmp
loope
out
sbb
ds
adc
ljmp
xor
call
or
mov
push
and
add
shll
mov
outsb
push
jmp
mov
in
in
mov
mov
fstpt
pop
cwtl
xor
xor
push
lods
lods
sbb
js
ljmp
sub
in
sarl
jo
pusha
mov
sub
cli
popa
nop
iret
lret
enter
or
dec
rorb
inc
aad
mov
es
add
cmp
lcall
mov
xchg
mov
push
mov
xchg
enter
fld
push
add
cmpsb
idivb
mov
ret
lret
mov
xchg
push
test
outsb
sbb
loope
lds
and
pop
pslld
cmpb
add
push
pop
xchg
shll
insb
fsubrp
push
outsl
or
xchg
jno
and
lcall
leave
fisubrl
std
ret
push
mov
push
xchg
cmp
push
xchg
pop
loop
mov
mov
jb,pt
and
insb
cmp
ja
xchg
cmpsl
out
adc
sub
adc
push
sub
cltd
or
pop
jge
sub
repz
or
push
test
and
xchg
inc
mov
xchg
jb
xor
pop
push
push
mov
push
pop
in
stos
pop
cwtl
cwtl
jbe
lcall
outsb
call
int
dec
out
mov
popf
mov
push
or
nop
or
and
outsb
data16
loope
sub
ss
jae
xor
imul
xchg
mov
popa
arpl
fstps
add
push
xchg
add
imul
ljmp
sbb
inc
fdivrs
add
and
cmp
mov
out
lea
mov
lret
push
ret
push
out
cwtl
jle
pop
adc
or
push
mov
aad
mov
jmp
xor
aam
cli
mov
movzwl
dec
cs
es
jge
rorl
cmpsb
xchg
das
or
dec
inc
xor
std
out
mov
aas
call
in
fsub
add
js
mulb
ljmp
pop
aam
les
ss
aas
int
mov
test
xorl
cmp
jno
jle
sub
lret
insl
push
or
xor
cs
inc
stc
jecxz
cmc
jmp
lret
into
outsl
or
cld
sbb
lcall
dec
in
cltd
scas
sbb
pop
push
out
cmp
jbe
and
mov
xchg
stos
pop
out
sub
movsb
mov
scas
sbb
adc
movsb
in
sub
sbb
pop
xchg
fwait
loopnew
nop
dec
ss
or
popa
xor
mov
pop
inc
sahf
pop
cwtl
clc
jbe
repz
mov
cmpsl
dec
push
sti
call
lret
shrb
bound
cmpsl
adc
jp
cmp
push
mov
pop
int3
jecxz
xor
ds
or
cld
fists
fisubs
jmp
push
push
ljmp
imul
fs
or
arpl
daa
test
repnz
push
negb
or
aam
inc
push
lret
cwtl
and
test
in
fdivp
and
jge
jmp
stos
jns
xor
xchg
dec
mov
outsl
pop
mov
in
sub
out
pop
xchg
dec
repz
sbb
mov
pusha
jp
jne
fbstp
mov
loopne
shll
icebp
push
add
sbb
out
jne
shlb
cmp
in
popf
ret
ss
je
xor
jle
loope
out
lock
xor
ret
in
pop
ret
in
push
popf
rol
xor
sub
jp
dec
mov
xchg
lahf
ror
cli
cwtl
mov
sbb
or
ds
inc
fdivrl
xlat
cs
fsubp
pop
pop
stos
jnp
rcr
ss
and
xor
jbe
popa
cmpsb
ds
stc
cltd
aas
or
cmpsl
fwait
test
xor
pop
scas
push
fidivl
loop
inc
pop
mov
repnz
movsb
sarl
pop
cmp
mov
jne
jne
push
and
mov
daa
ficoml
leave
lock
xchg
push
xchg
pusha
testl
mov
imul
decb
xlat
mov
mov
ret
imul
pop
outsl
fisubl
pop
aas
cmp
inc
ficoml
add
inc
jne
mov
add
mov
jmp
xchg
lock
ficoms
ljmp
cwtl
mov
mov
push
mov
out
adc
adc
mov
dec
inc
xchg
sub
test
roll
stos
xchg
xor
dec
mov
loopne
xchg
idivb
or
cmpsl
int3
fbld
sti
fnsave
scas
std
xor
pushf
ljmp
jl
push
out
lea
into
test
jle
inc
ret
push
nop
jg
faddl
mov
cmp
lret
dec
dec
cmp
fcmovbe
ret
ds
in
sub
ficompl
int3
movsl
pop
pop
dec
sti
int3
cmp
adc
xor
adc
imul
fs
dec
repnz
jnp
mov
lahf
fidivs
mulb
xchg
fs
push
or
and
xchg
push
sbb
push
inc
shll
push
or
jbe
dec
clc
push
add
push
stc
xchg
pop
inc
call
sbb
jp
jns
lock
mov
subb
cmp
loop
pusha
sbb
add
imull
fidivrl
mov
jbe
push
daa
cmpl
negb
cwtl
jp
lea
lock
ljmp
lods
xor
xchg
jmp
pop
popf
jl
mov
js
movsb
cmp
jo
mov
mov
fbstp
test
mov
inc
enter
push
daa
add
mov
insl
push
sar
jne
and
inc
mov
sbb
std
scas
sbb
fdivl
dec
sub
adc
das
inc
pop
mov
mov
daa
cmp
rolb
mov
mov
in
cli
test
mov
xor
jge
fmul
or
jbe
jnp
adc
add
fstpl
rcrl
les
xor
jnp
sub
fs
adc
sbb
adc
dec
cmp
pop
xchg
mov
lret
scas
pop
xlat
pop
dec
enter
dec
xor
xchg
mov
mov
mov
cmc
nop
sub
adc
cmp
test
aam
xchg
aaa
loopne
inc
or
xchg
enter
test
loop
cld
or
loope
jecxz
push
icebp
sbb
out
or
xchg
mov
into
jmp
sahf
in
push
mov
out
ljmp
cmpsl
loop
lahf
sub
mov
push
ficomps
imul
bound
sub
outsb
xchg
sbb
nop
mov
rorb
shr
dec
int
or
sbb
pushf
outsl
pushf
and
jmp
popf
aad
and
push
aad
in
pop
test
sbb
imull
gs
xor
sub
and
xlat
fsts
mov
jns
mov
sahf
call
inc
test
mov
mov
cmp
repnz
push
or
inc
sbb
popf
jne
pop
pop
xchg
int
ja
in
push
jle
ds
fwait
jmp
fldl
jo
into
mov
lahf
sub
lcall
mov
sti
sti
test
cmpsb
subb
aam
ret
repz
enter
add
int3
sahf
jmp
xor
in
xchg
inc
and
mov
rcrb
aad
out
ret
mov
adc
mov
es
hlt
mov
sub
pop
xchg
pop
add
fists
lea
insl
ud2
loope
adc
hlt
in
mov
push
cmp
sub
pushf
push
adc
cwtl
mov
fsts
jl
inc
insb
dec
cs
sbb
mov
fstps
je
mov
xchg
imul
xor
mov
push
xor
into
sbb
bnd
adc
inc
pop
subl
push
scas
and
xchg
sub
xor
rolb
enter
mov
fwait
scas
jnp
inc
lahf
clc
in
pop
adc
aam
push
mov
iret
mov
inc
cmc
shll
sub
pop
mov
std
cs
cmp
jg
mov
inc
dec
or
pop
jmp
pop
adc
call
gs
xchg
xchg
xor
ss
aaa
pop
ret
xor
fiadds
je
pop
jae
add
cmp
outsb
jnp
call
cmp
mov
mov
lret
xor
cwtl
dec
aam
out
or
mov
jnp
inc
scas
mov
in
fsubs
imul
mov
push
xor
out
adc
popf
inc
xchg
loopne
cs
arpl
scas
jg
xor
lea
mov
std
jmp
adc
fdivrl
scas
cwtl
imul
int
xchg
pop
mov
and
loopne
test
je
fstps
test
jmp
daa
sbb
jp
divl
iret
ret
or
sbb
dec
mov
nop
push
xchg
pushf
test
add
ret
jmp
mov
pushf
xchg
out
jbe
shr
lret
fwait
insb
mov
fsubs
leave
or
mov
fcoml
add
cs
pop
lock
adc
xchg
push
repnz
lock
imul
fstpl
arpl
lods
out
jo
push
leave
adc
aam
and
add
inc
sbb
cmp
dec
pop
xorl
mov
mov
pop
sub
lahf
sub
jg
js
wbinvd
cld
mov
daa
mov
stos
out
rcr
jge
xor
ret
pop
fisttpll
cld
mov
xchg
xorl
and
jno
movsl
fdivrs
popf
aaa
fadd
fildll
ja
mov
or
jle
test
and
lock
xchg
mov
or
cld
inc
bnd
repz
dec
inc
adc
in
dec
inc
push
jno
pusha
shl
scas
lods
into
jmp
mov
mov
xchg
imul
adc
mov
pop
pop
jbe
xor
sub
or
xchg
xchg
clc
push
add
lods
mov
jmp
xor
repnz
sub
lea
aaa
int3
xlat
add
mov
cs
pop
mov
jae
cmc
int3
rcll
out
ret
dec
in
mov
sbb
out
jo
xchg
test
pop
lea
mov
xor
daa
rolb
leave
insb
fistl
jle
push
testb
jb
xchg
mov
fwait
mov
xor
pop
movsb
fcoml
rcrl
mov
shl
fdivs
jp
shll
jns,pn
pop
insb
or
inc
xor
push
pop
cmp
add
mov
sbb
aam
in
cmp
mov
pusha
dec
scas
mov
dec
sar
dec
lret
inc
mov
arpl
jns
jecxz
adc
sbbb
test
push
adc
bound
out
mov
fmull
lea
jp
lret
dec
cmp
test
mov
sbb
add
in
cmc
sub
cmp
jecxz
push
lods
mov
sbbb
pop
cmp
test
xchg
mov
cmpsl
add
or
inc
sbb
lods
mov
jge
jb
aaa
outsb
xor
sub
ss
jb
cmpsb
std
stc
xchg
rcll
pop
rol
pop
fisubl
fiadds
add
cmp
clc
ffreep
and
sbb
pop
sbb
jecxz
pop
push
push
xchg
mov
mov
push
adc
cmp
inc
rcr
ja
nop
mov
mov
dec
movsl
fcoms
cmp
cmc
mov
add
lret
pop
push
cmp
jo
jge
adc
ret
daa
insb
xchg
cltd
rcl
fstpt
out
out
xchg
jecxz
shl
sbb
popf
jl
mov
adc
out
mov
inc
lret
int3
fcomps
aad
popf
jae
inc
scas
popa
adc
lret
pop
mov
sbbl
out
das
adc
inc
cmpsb
negl
mov
pop
ret
arpl
cld
jl
pop
test
popa
scas
aad
inc
jmp
iret
dec
and
sahf
or
push
pop
inc
push
add
pop
or
pop
sub
pop
ds
rcrb
sbb
or
hlt
jmp
adc
fstl
dec
in
stc
cmc
cmp
fwait
adc
mov
xchg
insl
ss
xchg
dec
in
push
dec
pop
icebp
inc
mov
in
ret
das
pop
popf
cld
xor
pushf
cmp
xor
fstp
test
std
int
push
imul
out
sti
add
mov
les
scas
mov
rclb
in
inc
dec
dec
push
add
pop
loopne
push
shrl
icebp
inc
pusha
mov
repz
cmpsl
pop
ret
cltd
mov
push
in
adc
sti
clc
int
dec
aas
rcll
movb
xor
loope
jbe
xchg
les
mov
lea
imul
push
pop
aaa
push
mov
mov
mov
addr16
call
icebp
in
dec
sarl
insl
push
hlt
aas
xchg
xlat
iret
cwtl
add
mov
test
add
pushf
or
dec
jecxz
add
sbb
or
aaa
pop
mov
pop
in
outsb
pop
mov
outsb
je
sub
push
fmuls
stc
push
xchg
out
xchg
mov
or
or
repnz
pop
jb
scas
adc
adcb
inc
cltd
mov
inc
in
xor
repnz
mov
addr16
jmp
shlb
movb
xor
in
mov
orb
sub
push
add
aad
pop
lahf
in
jmp
cld
mov
xchg
sub
add
pop
movb
enter
xchg
in
pop
and
xchg
or
dec
adc
mov
jne
jge
sbb
adc
adc
push
mov
aad
mov
cs
int
jecxz
icebp
out
xchg
pop
inc
insb
in
fldenv
add
in
stos
out
into
pop
cmpl
push
adc
fmulp
je
or
jno
push
xor
sahf
push
push
inc
and
pop
aam
cmpsl
fstps
xchg
dec
add
dec
rclb
lret
insl
inc
sahf
dec
insb
ss
inc
cwtl
dec
sbb
xchg
add
mov
or
fcom
roll
aad
ret
mov
sub
movsl
insb
mov
cs
jg
pop
sub
xor
cwtl
cmpsl
loop,pn
das
mov
aas
mov
jge
xor
inc
sub
orl
sub
dec
inc
pop
out
add
mov
scas
mov
aaa
test
and
mov
repnz
jbe
pop
loope
iret
js
cmc
dec
pop
test
dec
push
call
or
jg
jle
cmpsb
dec
push
mov
jnp
int
mov
and
sahf
lret
test
negl
add
cmp
arpl
je
fisubrs
mov
outsl
sbb
icebp
jo
xor
shrb
inc
push
and
pushf
mov
aad
dec
sub
cmpsb
sub
je
inc
test
shl
jp
and
repz
lds
mov
ret
pop
aam
adc
lret
or
dec
jle
roll
movsl
insl
gs
fwait
dec
out
aam
out
in
fs
xchg
dec
scas
mov
mov
cs
push
and
jmp
out
pop
stc
jmp
cmp
jbe
bound
int
mov
and
jmp
mov
arpl
inc
mov
pop
fldcw
inc
add
testl
mov
jmp
outsl
cmp
mov
movsl
gs
sti
leave
jae
aad
or
pop
insb
int
ds
jp
iret
cli
mov
out
out
scas
addr16
add
imul
cld
add
fprem1
mov
outsb
cmc
mov
lcall
or
and
xchg
dec
rcll
mov
mov
mov
xchg
dec
test
fmuls
adc
lcall
pop
add
jmp
pusha
jg
and
inc
xchg
xchg
daa
xchg
jno
mov
mov
imul
sbb
daa
lcall
stc
xchg
out
les
inc
push
pop
frstor
cmp
pop
out
jae
cmp
mov
xchg
enter
jg
test
ret
push
cmp
scas
jg
pop
das
cwtl
xlat
icebp
mov
dec
outsb
and
push
jp
stos
xor
sarb
and
xchg
inc
movsb
lock
jnp
dec
cmp
imul
rcrl
shlb
hlt
jns
jmp
sub
sbb
dec
mov
cmp
or
fwait
push
rorl
lea
call
sbb
fisubrs
sahf
cmc
fmull
sub
sbb
mov
lea
std
inc
pop
inc
and
dec
test
lahf
sub
jp
push
lret
push
mov
xchg
inc
pop
dec
idivb
inc
mov
add
out
xchg
inc
mov
add
sbb
mov
mov
mov
sbb
mov
std
xlat
fcomps
ds
clc
xchg
out
scas
outsl
repnz
les
mov
or
jne
movsb
and
push
rcrl
dec
pop
das
or
cmp
jle
jae
subl
lods
test
add
in
push
in
jb
dec
shlb
cmp
stc
push
mull
in
inc
les
push
cmp
sbbl
inc
sub
or
jge
xor
xor
jae
out
dec
mov
or
hlt
loopne
clc
mov
loop
out
mov
adc
inc
ss
stos
dec
sti
xor
iret
mov
ficomps
js
push
sahf
adc
lret
inc
adc
mov
idivl
es
inc
and
pop
push
or
mov
push
mov
testb
fidivs
movsl
cmp
pop
sahf
insb
shr
stc
pop
mov
mov
int3
jp
pmaxub
lea
lds
jo
and
cmpsl
mov
gs
add
mov
jmp
ja
cvttps2pi
jb
mov
and
jae
cltd
pop
dec
fisttpl
stc
and
jp
sbb
pop
mov
aas
inc
adc
inc
jecxz
jae
mov
call
push
push
dec
cwtl
es
xchg
mov
dec
lret
cltd
jp
je
shll
icebp
cld
repnz
xchg
mov
decb
sar
aaa
out
xchg
or
rolb
push
mov
lahf
testb
adc
cwtl
fmuls
xchg
cli
fdiv
inc
in
push
or
pop
cli
adc
inc
mov
je
movsl
in
sbb
xchg
mov
cs
aad
popf
inc
mov
cmp
push
fstpt
lret
ficomps
imul
add
xchg
mov
lcall
jne
out
sbb
lcall
repz
in
pusha
daa
arpl
inc
cmp
stos
cs
add
cmpsl
cmc
mov
push
dec
mov
pop
cld
push
xchg
sbb
adc
push
dec
cli
add
add
xchg
out
cmp
mov
stc
rcll
mov
cmpsb
sbb
fdiv
aaa
add
jle
stos
dec
jnp
adc
les
inc
push
rolb
jmp
jnp
xchg
call
cs
push
mov
test
push
cld
sub
hlt
outsb
in
pop
je
push
mov
imul
rclb
lea
sti
lret
pop
mov
sti
cmp
mov
fsubrs
adc
les
pop
lea
pop
pop
fsubr
out
xchg
jecxz
push
adc
mov
cmp
shlb
aas
fnstenv
dec
out
xchg
pop
enter
cwtl
or
jl
lea
cmp
fwait
cmpsl
and
je
or
adc
dec
add
stc
int3
or
jnp
pop
scas
notl
fs
inc
sbb
dec
cmp
cmp
inc
mov
pop
insl
push
xor
mov
push
stos
jecxz
cs
fwait
out
sbbb
or
dec
popf
clc
insl
jo
out
mov
or
arpl
andl
ss
test
mov
rorl
or
and
dec
pop
push
xor
lock
or
jno
and
mov
cmpsb
movsl
in
lock
mov
repnz
lret
lds
lds
pmulhw
sarl
cmp
push
inc
ljmp
jne
mov
mov
les
add
mov
mov
fisubs
dec
ficoml
leave
popa
sbb
mov
rcll
sahf
adc
lock
cmpsl
xor
sbb
rcr
mov
loop
or
jae
and
sbb
ljmp
push
jae
aas
loopne
push
mov
in
push
pop
imul
stc
sub
mov
adc
mov
mov
scas
jbe
jnp
shrl
cmp
orb
mov
ds
icebp
loope
iret
pop
adc
fucom
ret
or
xlat
test
dec
sahf
pop
pushf
dec
outsl
add
inc
dec
sahf
bound
pop
sub
push
pop
ret
add
push
jecxz
sbb
daa
arpl
outsb
add
adc
mov
loop
inc
pop
add
pop
push
jg
clc
add
mov
dec
pop
insl
push
dec
pushf
pop
xchg
pusha
aam
test
or
sbb
sbb
ror
xor
mov
ja
cs
mov
inc
mov
in
jae
mov
test
jns
push
add
mull
jge
sbb
and
mov
clc
xchg
test
movsb
cmp
mov
das
insl
in
into
pop
loope
testb
aas
cmpsb
mov
lahf
jmp
pop
in
and
mov
mov
push
and
push
dec
nop
xchg
lods
dec
sub
add
mov
inc
xor
fmuls
inc
fnstsw
in
ret
test
xchg
inc
jmp
sbbl
push
jbe
lock
xchg
sbb
test
out
mov
or
mov
inc
test
sbb
fildl
sbb
mov
xor
testb
mov
pushl
sub
dec
xor
inc
dec
jge
fldt
mov
std
and
fwait
jmp
rcl
loope
fsubl
dec
clc
fst
push
mov
cmp
push
aas
and
or
mov
sub
xchg
js
push
das
pop
xor
cmp
xchg
jmp
cwtl
ret
mov
mov
sbb
test
cli
jne
imul
fisubs
pop
mov
in
or
push
enter
xor
sarb
push
sbb
xchg
jge
loope
sahf
pop
scas
jb
test
cwtl
scas
jecxz
cmp
sub
pusha
xchg
clc
cld
xchg
aam
push
ds
scas
push
out
fsubs
dec
mov
inc
xchg
mov
loope
lahf
or
scas
mov
incl
jns
arpl
push
push
movsl
aaa
nop
sub
sbb
or
fsubrs
xchg
inc
test
dec
mov
pusha
insl
jno
iret
jmp
into
inc
and
sti
lock
mov
es
gs
lea
adc
add
and
sub
mov
pop
xchg
cli
cwtl
outsb
push
iret
sar
in
pop
sub
sub
cltd
mov
jecxz
add
lods
and
sbb
nop
and
inc
cmp
adc
sbb
dec
sahf
push
jbe
inc
mov
and
mov
xchg
and
mov
mov
mov
xchg
adc
jle
mov
inc
sbb
rorb
lret
xchg
pushf
lods
sti
adc
data16
lods
adc
jle
outsl
mov
les
sbb
push
ljmp
pop
push
jmp
fists
cwtl
inc
cmp
push
xchg
and
subl
mov
and
lea
dec
clc
mov
mov
lret
fbld
mov
mov
hlt
add
rorb
nop
jns
push
clc
insl
clc
sub
pop
ljmp
jl
int3
mov
roll
xchg
sub
call
pop
pop
addl
inc
scas
sbb
sbb
sub
loopne
dec
inc
sub
and
xor
gs
xchg
mov
std
pop
sub
fs
imul
lods
test
loop
push
icebp
add
lcall
mov
push
incb
push
movsl
scas
lret
dec
daa
stos
fiadds
pop
sbb
fidivs
lods
dec
push
bound
mov
mov
out
neg
push
fdivrl
ds
mov
xchg
mov
rdtsc
sub
pushf
xlat
xchg
ja
jg
lock
sbb
inc
leave
push
lds
sub
adc
xor
add
jo
lock
mov
xor
loopne
nop
xchg
sti
pop
xchg
leave
mov
out
lahf
call
cmp
push
arpl
fsubrs
or
inc
es
jl
xor
fidivrl
pop
jno
cmp
fists
ss
push
mov
xor
push
cmp
xchg
dec
jecxz
sbb
or
orl
insb
jno
out
je
and
push
insl
add
nop
inc
sar
mov
sbb
iret
add
pushl
mov
jo
lcall
push
jmp
or
xor
nop
pushf
call
stos
push
lds
fsubl
in
adc
xchg
idivl
test
inc
fwait
jb
outsl
xchg
mov
ljmp
mov
sub
xor
loop
inc
fisubl
fistl
sbb
push
lret
shr
jmp
adc
dec
in
inc
insb
pop
and
cmp
lock
inc
addr16
fstl
lds
adc
lret
ficoms
xorl
bnd
jns
xchg
mov
sub
add
xchg
dec
popa
push
test
bound
mov
imul
aam
jae
bound
movsb
jge
inc
cltd
sbb
out
sub
push
iret
jecxz
das
pop
jno
inc
mov
data16
fisubl
cmp
fs
jae
push
push
fidivrs
sub
ficompl
fdivrl
shll
mov
jp
inc
pop
ror
rcr
repnz
jae
push
idivb
testb
lock
pop
adc
add
dec
in
add
sub
stos
jae
push
imul
pop
mov
pop
lret
and
loope
add
xchg
ror
int3
imul
adc
fmulp
cld
lods
jnp
or
fldl
es
jb
test
out
imul
sub
rorl
ret
xchg
in
cmc
in
inc
les
insl
or
cmp
jb
pop
push
jne
ja
cwtl
lret
gs
jbe
nop
xorb
stos
ja
int
repnz
pop
cmp
jne
and
fiadds
mov
xor
mov
fsubl
mov
lods
js
inc
rorb
push
test
mov
add
xor
sysexit
arpl
and
popa
repnz
and
lock
pop
mov
adc
ss
test
inc
push
and
xor
hlt
lret
xor
cld
scas
jne
nop
scas
sbb
push
roll
sbb
dec
adc
push
inc
mov
or
jmp
lods
lods
add
pop
outsl
xchg
shrb
xchg
jnp
push
call
pop
es
jg
sub
sbbb
mov
test
jne
lea
mov
ret
push
add
ss
adc
xlat
je
inc
int
push
or
int
lods
popf
out
lahf
or
mov
mov
sbb
xchg
push
sbb
out
movsl
or
dec
jb
push
mov
fsubs
xlat
in
fnsave
sub
call
adc
int3
xchg
test
inc
je
cs
jnp
dec
mov
jno
loop
lret
les
xchg
jle
ret
pop
loop
pushf
fnsave
inc
xor
adcb
ror
fcmove
rolb
adc
pop
movsb
mov
add
xor
xchg
lahf
in
sub
xchg
call
add
cmpsl
out
lock
je
icebp
xchg
jp
test
jno
sti
arpl
cmp
out
mov
outsb
roll
insl
repz
cmp
xchg
rorb
cld
stos
outsl
std
sbb
test
pop
icebp
sbb
adc
add
stos
repz
out
dec
mov
in
mov
mov
pop
push
or
push
imul
in
lods
dec
mov
and
sub
es
ja
adc
inc
inc
test
inc
loop
ljmp
push
dec
cmp
inc
pusha
xchg
int
xor
test
adc
jmp
das
out
push
sub
adc
mov
into
xchg
cld
push
in
jle
cwtl
repnz
and
lea
je
or
icebp
inc
sub
dec
xchg
mov
sbb
or
ljmp
cmp
mov
imul
xorl
mov
or
push
test
xor
fistpl
out
pop
adc
hlt
roll
or
fwait
sub
sub
or
jle
inc
cltd
lds
lcall
dec
inc
jbe
push
mov
push
jbe
jle
cmpb
rclb
mov
fucomi
cmp
std
mov
xor
dec
mov
cmp
sbb
in
sti
fisubrs
xchg
enter
jp
shrd
sub
jmp
mov
fdivs
sub
ljmp
ja
sub
mov
add
mov
inc
cmpsb
xchg
faddl
cmp
aas
jecxz
add
pop
jecxz
and
aas
fcomp
xor
xor
add
divb
or
repnz
cmp
mov
mov
sub
or
inc
xchg
fwait
stos
lahf
adc
pop
xor
fisubrl
icebp
repz
subl
adc
adc
adc
enter
add
xchg
xor
cmp
aad
in
mov
add
sahf
fbld
mov
subl
cmp
sub
xchg
int3
add
dec
jg
lods
aaa
scas
shll
lret
push
or
and
xor
pop
lahf
add
in
cmpsl
cmp
pop
repz
outsb
push
jl
int3
and
mov
inc
or
inc
sub
es
pop
sbb
arpl
push
inc
in
adc
cmp
dec
cmpsb
dec
mov
xchg
mov
sbb
pushf
push
addr16
sahf
jb
sub
gs
adc
scas
les
adc
lods
xor
xor
daa
movb
inc
in
inc
data16
xchg
mov
gs
or
inc
sbbb
mov
mov
cmp
mov
es
mov
sti
ret
inc
aaa
sub
data16
stc
cmp
push
in
cmp
jno
lock
jbe
lcall
stc
mov
mov
mov
ljmp
int3
adc
js
xorl
inc
dec
loopne
popa
adc
jnp
cmp
scas
push
push
pop
mov
aad
or
arpl
adc
fwait
je
shrl
cmpsl
ja
pop
mov
cs
es
adc
lods
pop
ja
sub
jmp
inc
cmp
xchg
neg
mov
xchg
mov
lods
or
or
xor
push
jecxz
insl
pop
xchg
or
test
aaa
stc
lahf
loope
lea
jmp
jl
repnz
xchg
fcomps
mov
jg
push
xor
cltd
mov
mov
mov
lahf
mov
loope
fstpl
add
js
shll
das
cmpsb
xchg
insl
jp
cld
mov
push
repnz
insb
fwait
lods
aas
push
cmp
cmp
and
mov
pop
in
imul
incl
ja
daa
lods
cmp
mov
push
insb
add
out
adcb
dec
stos
aaa
push
test
dec
pop
int3
jge
daa
dec
inc
fistl
pop
aaa
cmp
aad
pop
clts
inc
lods
shll
pop
loopne
test
and
enter
mov
sub
and
xchg
push
std
movsl
sti
and
push
push
outsl
int
rorl
cli
pop
mov
lea
add
sub
cmp
pop
arpl
xor
adc
lods
cmp
mov
lock
stos
jp
daa
xchg
scas
aaa
push
shrl
pop
les
daa
sub
mov
add
pop
push
loope
pop
mov
jo
pop
jg
add
test
mov
orl
orl
cmc
cli
sub
mov
mov
jg
pop
xchg
sar
sbb
insl
in
ret
and
push
jl
faddl
inc
jmp
or
shrl
xor
ret
fs
fwait
aaa
sbb
cltd
mov
in
inc
mov
lret
dec
cmp
ds
and
mul
enter
sbb
xchg
mov
inc
add
cmpsl
xchg
scas
xchg
cmp
leave
cltd
fisubl
insb
pop
aas
les
out
mov
shrl
add
and
dec
daa
call
in
push
mov
jmp
fcomps
and
mov
mov
mov
popa
call
popf
data16
popa
cmp
cmpsb
inc
rorl
scas
ljmp
setbe
mov
ljmp
cltd
daa
add
out
push
in
jl
lret
pushf
fsubrp
repnz
sti
ja
cmpl
add
mov
push
out
lds
repnz
xor
sub
push
out
sarl
je
lods
adc
xor
cmp
mov
jae
pop
inc
and
lods
adc
cmpl
pushf
cmc
lcall
dec
jl
jge
rcl
jns
fistl
xlat
add
lea
loopne
iret
inc
int3
scas
in
dec
stc
cmp
xchg
aaa
imul
lods
sbbl
adc
add
sbb
scas
jno
insb
push
mov
jg
jae
cmp
stc
shll
sbb
and
out
in
mov
cmp
pop
dec
pop
jno
repnz
jp
add
jg
bound
jb
or
lahf
cmc
out
mov
mov
mov
lret
fiadds
sbb
cltd
loopne
xlat
je
pusha
test
adc
push
cld
test
imul
sbb
jns
xchg
inc
and
xor
jl
push
pop
jae
test
add
aad
fistps
xor
std
sahf
add
xchg
rep
ds
adc
mov
pop
mov
add
pop
dec
out
imul
leave
mov
xchg
int
lahf
ret
nop
jae
dec
repnz
mov
dec
jb
dec
arpl
xchg
mov
into
movsl
push
adc
arpl
mov
ds
fxch
outsl
sahf
not
aad
sbb
iret
pop
cwtl
hlt
addr16
pop
out
cltd
push
cs
push
aas
in
in
shrb
mov
adc
mov
bound
mov
pop
and
repnz
loop
fdivp
cmp
mov
push
fsubs
jmp
pop
movsb
leave
fdivs
dec
inc
cmp
push
into
in
insb
data16
push
pop
out
cmc
jp
popf
insb
mov
dec
mov
add
jecxz
add
sbb
jb
lock
mov
fimull
lods
ss
adc
insb
add
xchg
jnp
sub
mov
push
or
or
jno
enter
fadds
and
test
lahf
pop
xchg
rclb
or
mov
insl
cmp
out
test
pop
test
outsb
lods
cmpl
pushf
scas
mov
aad
or
cmc
iret
mov
sbb
jnp
shlb
lret
xor
stos
sub
outsb
push
loopne
and
add
out
cmp
cltd
mov
rcl
pop
arpl
push
dec
add
jp
cmpsb
pop
sbbb
or
sub
cltd
sub
xor
mov
inc
scas
xchg
inc
bound
dec
jns
add
jne
repz
fwait
xor
das
adc
cmpsb
sbb
jae
cmp
dec
adc
sahf
mov
jo
mov
inc
jp
push
mov
mov
cld
xor
inc
icebp
push
test
dec
rclb
fisubrl
repnz
inc
pop
push
cld
push
pop
outsl
inc
out
movsb
addl
fwait
stc
movsl
test
pop
fs
sbbb
ds
push
dec
jle
cmc
xchg
xchg
jl
lret
loop
outsl
enter
out
fsubl
adc
nop
mov
add
nop
jecxz
ret
fistps
cmp
pusha
mov
fsts
fdivl
dec
fst
xchg
repnz
push
jecxz
inc
aas
mov
and
xchg
xchg
cli
addb
cmpsb
aaa
pxor
or
inc
mov
test
cwtl
sub
mov
mov
pusha
jge
inc
cmpl
sub
jecxz
sub
scas
cmp
mov
sub
pop
bound
or
lcall
xchg
cmp
adc
sbb
adc
gs
loopne
iret
movsb
leave
enter
psrld
aas
push
les
call
lret
fcmovbe
xchg
or
cmp
inc
dec
fstpl
mov
dec
cmc
in
mov
clc
push
lcall
sbb
dec
fldenv
stc
leave
scas
flds
xor
setne
int3
jo
insb
mov
sub
push
out
ja
imul
cmp
stc
out
sarb
hlt
pop
and
lcall
mov
test
adc
test
jne
fstl
mov
in
lods
and
adc
lret
sub
decl
sub
jl
enter
call
and
pop
add
popl
add
push
push
mov
lcall
rorl
pop
jge
xchg
sub
lea
cltd
mov
aam
iret
dec
iret
add
cmpsl
push
xchg
lods
in
xor
inc
mov
mov
or
adc
data16
add
jmp
mov
xchg
xchg
jecxz
ret
sub
inc
aas
rorl
sbb
jae
iret
or
movsl
gs
push
cmp
push
sbb
das
enter
pushf
jbe
mov
fs
sbb
fidivrl
cs
adc
lret
pop
lret
mov
test
stos
mov
aam
loop
sahf
push
repnz
aad
cmp
leave
add
add
lret
and
mov
push
mov
into
or
xor
ds
aaa
mov
fstpt
cmp
aas
int3
std
xchg
fsubs
cmpsl
icebp
std
jne
pop
int
popa
fneni(8087
dec
pop
movsl
jl
repnz
xchg
ret
and
dec
imul
sbb
jp
add
pop
cld
add
push
adc
inc
or
ds
fstpl
loop
pop
cmp
into
icebp
adcl
cmpl
popa
mov
or
xchg
sub
sbb
cvtpi2ps
or
outsl
call
jo
dec
add
cmp
add
push
adc
mov
cmp
jecxz
insl
shll
ja
out
addr16
jne
subb
fbstp
punpcklbw
pause
lock
pop
cmp
pop
mov
iret
lods
fdivl
adc
int3
jo
adc
sbb
test
jb
xchg
push
mov
jnp
iret
sbb
out
adcl
test
jle
js
mov
es
push
dec
in
cwtl
ljmp
xor
pop
add
icebp
or
scas
stos
sub
jmp
sub
adcl
inc
out
andl
add
mov
inc
xchg
and
xchg
ret
ret
add
or
in
add
out
xchg
in
daa
or
aad
std
shlb
sub
lahf
arpl
scas
dec
and
hlt
pop
inc
mov
enter
jbe
aad
mov
jmp
sbb
incl
cmp
leave
xor
fwait
insb
imul
xchg
inc
mov
dec
pop
adc
sub
lret
ret
sbb
orl
xchg
push
xchg
bound
mov
insb
push
ret
imul
sahf
mov
or
adc
push
inc
and
push
insb
mov
cmp
jae
push
adc
push
adc
and
sti
ja
sub
adc
and
stc
mov
hlt
jecxz
fnsave
ss
stos
xor
inc
ljmp
push
fldpi
cmp
insl
cmp
lock
leave
mov
push
shll
out
and
xor
iret
push
jns
scas
lcall
xor
xchg
xor
mov
imul
xchg
loope
inc
push
out
cli
sbb
data16
aam
test
mov
arpl
orl
sbb
sub
xchg
pop
or
mov
xchg
jle
out
or
pop
sarl
sbb
xchg
dec
insl
into
push
xlat
inc
popf
imul
int3
into
sbb
xor
stc
aas
push
hlt
dec
jno
cli
push
insl
pop
repnz
ljmp
push
bound
sti
out
sub
pop
push
cmp
fdivrl
std
push
dec
pop
and
mov
jecxz
leave
sub
push
sti
jg
loope
adcl
movsb
aas
and
mov
cmpsl
ret
and
out
jecxz
movsb
std
std
stos
mov
in
push
dec
inc
mov
ljmp
cmp
lods
jl
jo
dec
loope
call
pop
add
mov
xor
inc
adc
out
ret
push
leave
jno,pn
push
in
jnp
lds
push
rorl
push
outsb
adc
mov
dec
mov
lcall
lret
test
mov
or
add
popf
cmp
xor
cwtl
ficomps
mov
jo
mov
icebp
pop
mov
aad
testb
cmc
call
aas
pop
outsl
mov
sbb
lret
popf
dec
adc
push
or
sti
in
push
and
inc
mov
mov
loope
push
loopne
dec
int
sbbl
xchg
rcrl
pusha
push
or
aaa
xchg
mov
outsl
mov
or
stos
js
push
cmp
scas
xor
xlat
ss
push
ret
aad
stc
subl
push
push
fadds
adc
xchg
int
jno
adc
and
jge
pop
cmp
js
pop
fildll
je
xor
or
call
das
push
push
js
mov
xor
lret
jg
xchg
stos
and
mov
mov
scas
pop
add
jmp
xor
test
push
sbb
jmp
mov
mov
addr16
push
jno
cmc
andl
lock
mov
pop
inc
xchg
inc
dec
pop
xlat
test
lea
imul
mov
rcrl
lods
adcl
cmpsb
cmp
in
ja
mov
jns
pop
fs
mull
in
mov
imul
ret
or
or
fcmovbe
cmpsl
sbb
cmpsb
or
add
daa
mov
jge
inc
fsub
add
xor
add
out
int
cmp
jmp
jg
lds
int
fsubs
movsb
mov
pushf
sub
cli
mov
cli
mov
cltd
std
push
jmp
or
aas
cmp
out
pop
fsubrl
or
sub
xchg
xor
stos
sahf
and
stos
repnz
adc
outsl
inc
or
std
in
dec
and
js
pop
loopne
mov
jbe
mov
roll
xlat
mov
gs
stos
and
xor
mov
outsl
test
mov
xchg
inc
sub
jb
inc
in
add
and
cwtl
pop
add
out
shll
orl
jg
rorb
adc
push
adc
cmp
push
repz
in
jge
lods
sahf
mov
sub
lds
and
mov
inc
or
dec
and
fwait
int3
fdivl
mov
mov
add
rcl
fucomi
dec
and
ds
xchg
cld
cs
adc
fstpt
inc
push
sti
aam
cmp
test
fcmovu
out
std
jl
ret
vcomiss
adc
mov
xlat
mov
mov
push
hlt
in
fcoml
mov
stc
push
add
xchg
das
lds
cmp
and
sbb
xchg
fisubl
mov
push
push
push
and
mov
out
iret
mov
mov
dec
pop
xor
loopne
xchg
adc
daa
sarb
xor
push
sub
js
inc
mov
aaa
std
inc
scas
mov
sub
mov
ljmp
iret
mov
std
mov
aaa
xor
push
sbb
movsl
ljmp
stos
test
filds
aas
fldlg2
ljmp
sbb
cld
mov
or
jns
cmpb
adc
sarb
mov
mov
dec
mov
int3
sub
cmpb
push
shll
movsb
xchg
lock
sbb
xor
pop
jle
pop
adc
xchg
mov
push
mov
lea
out
nop
mov
fidivl
cmp
jbe
adc
cmp
and
dec
stos
mov
xor
fistps
push
or
jae
cmpb
and
fcompl
add
sub
or
fcmovnb
add
repnz
and
add
jnp
mov
jg
mov
loope
xchg
dec
xor
imul
fisttpll
cmc
outsl
orb
xchg
push
jmp
lds
leave
and
icebp
faddl
mov
sub
jge
mov
stc
mov
or
out
xchg
mov
or
loope
std
fs
inc
jl
insl
jp
push
popa
pop
gs
out
idivb
mov
inc
pop
enter
popa
add
movsl
mov
js
dec
repnz
and
in
sbb
dec
fistl
shlb
rcr
testb
mov
sub
lcall
subb
jb
es
arpl
mov
inc
jle
pop
pop
jnp
mov
int3
inc
adc
loop
ret
or
dec
cmp
rcrl
ja
mov
xor
fs
xchg
push
sbb
aaa
add
mov
add
imul
nop
cmp
lea
mov
sub
or
add
out
and
ja
out
sub
ficoml
arpl
arpl
add
sub
sti
dec
or
pop
pop
inc
sub
xor
ret
outsl
dec
dec
scas
vunpcklps
aad
add
cmp
mov
ret
mov
xchg
and
sarl
pop
xchg
cmp
movsb
dec
xor
and
stos
inc
xchg
mov
mov
out
and
inc
mov
xchg
aas
sahf
ss
daa
mov
xchg
in
rcll
rolb
pop
sbb
insl
xchg
fwait
fwait
mov
std
in
cmpsl
lret
mov
push
lea
punpcklbw
lock
lds
pop
push
out
mov
xchg
jge
mov
dec
mov
inc
sbb
lods
shll
adcl
adc
lret
in
je
popf
cmp
sub
mov
lock
add
ljmp
fists
arpl
or
lret
clc
out
xchg
lea
out
rcl
pop
movsb
aad
pop
add
ss
dec
jecxz
fnstsw
and
nop
push
add
inc
aaa
in
or
cltd
mov
add
sub
ja
lcall
jno
test
imul
cmp
rorb
imul
pop
shr
and
js
mov
sti
cmpsl
aas
add
mov
js
pop
cmp
lret
mov
pushf
push
dec
test
add
and
repnz
add
cmpsb
neg
push
sub
loopne
adc
adc
xchg
pop
pop
inc
dec
cld
data16
xorb
nop
in
add
jmp
cmp
push
lods
rclb
divl
fldt
sahf
pop
pop
pop
pop
lahf
jae
adc
xchg
cltd
jg
adc
sbbb
mov
cltd
inc
lea
dec
pushf
cmc
repz
mov
iret
fadd
jecxz
add
mov
fs
jecxz
sub
add
jl
test
dec
insb
mov
inc
filds
push
dec
fwait
add
sub
inc
movsl
adc
test
dec
dec
cmpb
inc
popa
sub
lods
mov
ret
ds
clc
lret
in
push
cmp
ss
lods
mov
pop
xchg
mov
fcomps
lea
add
rcll
jmp
xchg
je
movsb
insb
adc
orb
mov
adc
lret
fcomps
mov
pop
push
cwtl
into
push
add
sub
push
and
lahf
push
mov
jl
sub
jno
adc
adc
mul
push
loopne
icebp
std
mov
arpl
sti
negb
push
dec
enter
divb
fidivrl
popl
loopne
sub
push
inc
mov
dec
xor
dec
lds
cmp
test
out
stc
cmp
mov
mov
inc
mov
ret
push
sub
push
mov
ja
xchg
xor
xchg
dec
aad
sbb
cs
mov
mov
sbb
sub
jge
out
pop
sti
push
cmp
cmpsl
jb
push
inc
xor
dec
mov
and
dec
lock
mov
pop
aam
nop
imul
dec
push
in
push
xchg
ss
cwtl
inc
dec
push
loopne
repz
and
mov
cmpsl
popf
das
shlb
in
movsb
add
mov
pop
scas
adc
add
cmp
and
sub
stos
fdivrl
sub
idivb
arpl
cmc
adc
in
cwtl
fildl
loope
cwtl
jg
ds
fs
jae
outsb
push
fucomi
decb
sub
dec
stos
scas
adc
push
lock
shll
mov
xchg
std
xchg
mov
inc
inc
movsl
bound
mov
add
xor
out
jle
xchg
inc
push
jmp
cmp
aaa
and
or
mov
fdivrl
cltd
push
add
add
cmpsl
lock
out
lret
into
mov
test
test
jbe
jge
pop
arpl
xor
std
mov
ret
popf
mov
or
add
in
inc
sub
fadds
and
inc
push
loope
gs
mov
xorl
jmp
aad
std
pop
pop
fsubrl
sti
ret
push
push
cmp
jns
test
jno
out
leave
shrb
inc
xor
test
mov
xor
mov
xchg
dec
out
lds
push
dec
lret
pop
xor
pop
or
push
jbe
imul
jb
adc
sub
xchg
cld
or
pop
test
data16
jl
mov
sahf
push
lea
pop
dec
shl
ds
jo
and
jmp
ror
lods
sub
jge
jne
lea
pop
rclb
lock
je
loope
rorl
mov
sti
pop
outsb
dec
shl
xchg
jmp
ret
adc
cltd
xchg
inc
mov
push
dec
jns
cmp
adc
rcll
scas
fwait
push
xor
sbb
push
sub
mov
jns
nop
pushl
mov
dec
arpl
jne
movsb
loopne
jne
popa
inc
sbb
add
mov
lods
clc
adcl
lock
cmp
jle
push
jle
jbe
or
adc
inc
into
mov
inc
sub
cmpsl
push
into
fst
sbb
testl
jb
adc
cltd
data16
push
daa
pop
sahf
stc
mov
or
leave
js
fcomip
test
sbb
movsb
jb
lcall
mov
cmp
inc
xor
ja
add
loop
add
inc
ljmp
nop
pop
test
mov
ret
std
jl
shrl
inc
loopne
mov
fistl
outsl
and
xchg
sbb
inc
adc
ja
sub
jle
xor
or
aam
ss
push
repnz
and
int3
pop
enter
rcll
push
orb
adc
jo
loop
jp
es
mov
adc
out
and
xchg
scas
fidivrl
enter
into
lret
out
mov
sbbb
insb
add
mov
jbe
imull
xchg
cmp
shl
les
and
mov
add
mov
inc
pop
pop
into
push
and
cwtl
mov
lret
stos
je
andb
adc
insb
lcall
jge
add
push
dec
cli
iret
insl
inc
inc
xlat
rcrl
fisttps
stos
stos
mov
sbb
repnz
ljmp
in
fisubrl
jns
bound
daa
xchg
idivl
sub
idivb
xchg
fstps
gs
repz
ret
mov
pusha
imul
loop
dec
jge
cmp
sub
inc
test
pop
sub
xchg
sbb
push
jg
jno
insl
or
jg
mov
fdivr
xor
pop
pop
mov
pusha
jb
ds
cli
ja
jl
out
cmc
add
add
pop
jo
mov
out
jo
xchg
add
shlb
mov
popf
sar
es
dec
rolb
cmp
push
shrb
mov
rorl
insl
jmp
daa
ret
cmpsl
and
inc
in
pop
cltd
sbb
mov
je
add
ss
inc
and
xchg
stc
mov
adc
imul
test
xchg
call
arpl
push
mov
stc
dec
fsincos
repnz
fldt
mov
dec
adc
movsl
fnsave
rcl
xchg
jge
shll
jp
mov
das
stos
inc
mov
cmp
cmpsb
cld
mov
mov
xor
testb
mov
cld
dec
xor
cmp
roll
call
js
ficomps
xor
std
int
insl
imulb
xor
js
xchg
sub
add
rcrb
xor
stc
inc
mov
popa
cmpsl
fwait
adc
mov
mov
out
cmp
sbb
mov
push
ret
inc
std
jae
test
sbb
test
fwait
sbb
lret
popf
fs
mov
out
sub
pop
or
ljmp
int
sbbl
in
push
gs
or
and
add
or
in
andl
or
xchg
hlt
inc
movb
push
add
or
aas
push
jae
jo
adc
ja
xchg
dec
mov
cltd
jne
sbb
movsb
int
les
push
test
pusha
dec
cmp
ja
cli
sub
scas
std
fisttpl
cli
push
lahf
jle
push
clc
xchg
into
inc
and
dec
mov
mov
adc
sub
mov
pop
lret
or
ficoms
cmp
push
xchg
jo
mov
xor
xor
cli
mov
sbb
jb
pop
shrb
in
or
xlat
sbb
faddl
out
mov
rol
call
shll
pushf
sti
cmp
and
lcall
dec
mov
ret
sbb
enter
hlt
cmp
out
dec
pop
jl
adc
mov
and
xlat
movsb
mov
mov
add
aas
add
lds
pop
push
js
add
pop
ret
add
sahf
dec
xchg
lea
sahf
or
pop
cld
cmp
and
xchg
cs
or
pop
pop
cmp
mov
rcll
cmpsb
and
fnsave
out
pop
shll
jecxz
int
pop
fstl
aas
hlt
imul
stos
cmp
jo
sbb
xor
data16
loop
jae
or
add
xor
push
test
ret
cmc
je
jl
adc
nop
mov
xchg
cmc
nop
int3
test
xchg
aaa
mov
jnp
cwtl
movsb
mov
mov
sbb
fildll
cs
or
mov
adc
dec
stos
aad
xchg
jb
clc
clc
clc
inc
pop
mov
mov
fs
pop
and
stos
adc
inc
int
jecxz
cmp
dec
push
mov
cltd
test
es
cmpsl
jbe
or
or
mov
adcl
ljmp
push
and
popf
rol
mov
and
testl
loopne
xor
je
adc
icebp
inc
push
inc
nop
push
outsl
loop
cwtl
pop
inc
pop
outsb
mov
push
push
pop
ss
aad
adc
nop
inc
shll
cs
mov
fwait
shll
jns
imull
inc
mov
inc
dec
sbb
cmp
lahf
cmp
jnp
add
jne
pop
popa
lock
lret
push
jno
test
scas
cmc
test
mov
push
push
mov
push
adc
stos
adc
lock
xchg
pop
aam
and
mov
addr16
push
in
in
mov
mov
jns
xlat
fidivl
jbe
mov
cmp
mov
push
xor
dec
pop
cld
sahf
mov
stc
xor
xchg
out
or
das
outsb
leave
xor
sbb
push
movsl
and
rcrl
adc
add
lds
out
adc
jno
push
dec
inc
cmp
push
xchg
repnz
and
sbb
sbb
cld
dec
jecxz
fldl
jge
adc
hlt
in
jo
mov
test
adc
cmpsl
rolb
hlt
mov
adc
inc
mov
je
push
aaa
lcall
xor
inc
adc
jmp
incl
cld
mov
xchg
add
fnstsw
jp
xchg
js
icebp
mul
mov
outsb
ja,pn
nop
int
lcall
ja
subl
orb
add
fiaddl
pop
xor
adc
fwait
cmc
fistpll
sub
inc
push
dec
fpatan
fmul
lea
dec
cld
rcrl
sub
pop
xchg
jnp
faddl
dec
mov
cmp
ss
lods
jbe
fmull
aam
out
bound
mov
push
incl
movsb
and
or
pop
cltd
jmp
daa
in
cmpsb
add
and
mov
mov
cmp
jae
mov
xchg
std
outsb
sub
nop
aam
dec
push
cmp
mov
outsl
cld
leave
ja
leave
and
pushf
inc
adc
cli
imul
fsubp
inc
insl
push
ficomps
inc
shrl
inc
inc
rclb
sti
mov
mov
mov
mov
mov
push
incl
inc
xchg
mov
cmpsl
xchg
push
into
lret
dec
pop
lret
mov
mov
andb
inc
ret
insb
add
imul
out
xor
xchg
repnz
mov
add
cwtl
ret
in
mov
mov
xchg
stc
call
lahf
andb
lcall
and
test
mov
xchg
nop
out
stos
mov
stc
cmp
pusha
or
sbb
nop
or
mov
das
pop
jmp
lret
mov
fnstcw
out
sahf
ja
movsl
outsl
cmpl
fucomip
insb
stos
lods
fwait
jge
mov
int3
imul
das
movb
leave
dec
cwtl
mov
out
js
nop
mov
fists
pop
push
push
fsubl
rcr
mov
inc
jmp
fwait
imul
and
mov
shll
or
rolb
aad
loopne
pusha
pop
inc
push
pop
pop
nop
stos
cmp
int3
shrb
fs
mov
aad
out
xor
fwait
or
stc
mov
repz
jmp
fs
sub
sbb
mov
mov
mov
xor
lods
cmp
jns
sub
xchg
imul
int3
mov
iret
bnd
jg
mov
push
mov
or
inc
inc
les
in
jp
push
stos
xor
mov
mov
fdivrl
lcall
aad
pop
scas
in
ja
inc
call
call
cmp
js
fs
mov
dec
and
mov
bnd
or
jmp
leave
rcrb
outsl
in
movsl
adc
mov
insb
push
imul
jo
jmp
test
push
shll
mov
xor
repz
mov
outsb
imulb
test
add
push
ljmp
push
lcall
cmp
adc
lret
icebp
pusha
cltd
popf
fstpt
push
inc
in
mov
cltd
xor
cmp
pop
movsl
add
xlat
sub
mov
aad
adc
movsl
mov
jmp
mov
xlat
and
mov
out
mov
pop
fmuls
push
out
test
jge
sub
adc
add
outsl
sahf
jns
xor
stos
sub
leave
xor
mov
push
sbb
xor
orl
add
aam
fwait
movsl
jp
cmp
jnp
xor
int
push
jle
adc
loop
out
fmulp
imul
pop
lds
push
xchg
push
pop
es
mov
push
fs
in
xchg
pop
cmc
mov
xor
rclb
cmc
vmread
test
ljmp
push
dec
mov
cmp
mov
insl
pusha
cmp
cmp
inc
sarl
imull
push
xor
lock
loop
addl
loopne
push
les
push
push
or
push
sub
pop
fwait
push
mov
fisttps
scas
cld
cmp
outsl
mov
sbb
pop
lock
sbb
mov
jmp
mov
and
adc
inc
sub
mov
mov
hlt
jle
inc
xor
adc
push
fildl
push
jg
out
mov
jnp
jno
lods
das
xor
xchg
push
push
cmp
movl
push
push
pop
jg
dec
pop
pop
je
out
mov
jb
fs
fiadds
fsubrs
xchg
repnz
cmp
push
or
fs
js
push
sahf
fsqrt
mov
xlat
adcl
and
mov
out
fwait
pop
cltd
icebp
dec
add
xor
xchg
rorl
rorb
sarb
mov
xchg
and
negb
pop
dec
bound
add
push
add
jnp
sbb
dec
cmc
lret
aas
xchg
repz
mov
shll
je
xchg
leave
mov
dec
mov
adc
mov
xchg
test
sbb
mov
sbb
mov
fldenv
bound
mov
xchg
xor
loop
jno
insb
aam
pop
lods
test
mov
add
jae
js
pop
inc
cmpsb
inc
dec
push
rcrl
fwait
hlt
fidivrl
push
xchg
sti
jge
jmp
adc
and
add
fs
jp
adc
lods
jae
fldcw
pop
in
pop
mov
jg
lret
mov
jle
jmp
sbb
cltd
or
fdivrp
dec
addl
mov
pop
sbb
jns
dec
push
or
das
ds
loopne
lcall
stos
and
enter
divl
pop
xchg
jne
cmp
lods
aam
aaa
cmp
mov
mov
inc
jp
xchg
jg
jecxz
mov
cwtl
lcall
stos
push
cmp
test
add
int
push
pop
dec
scas
add
int3
insb
jp
ret
stos
inc
mov
sub
jns
or
jle
xchg
cmpsl
mov
std
mov
cmpl
cmpsl
push
push
mov
inc
inc
xchg
or
or
cltd
sbb
fcomip
nop
ja
xchg
dec
cmp
mov
rcrb
imul
sub
mov
fldl
out
xchg
scas
mov
pop
pusha
push
jb
ja
jne
add
push
aas
fnsave
sbb
mov
sub
jmp
push
nop
fyl2xp1
test
flds
stc
push
pop
orb
mov
jbe
enter
mov
aad
push
repnz
cmp
into
lods
mov
movsb
add
movsl
pop
movsb
ficoml
mov
adc
mov
in
test
sbb
xchg
icebp
pop
inc
sarl
sub
adc
xor
push
and
fldt
push
sub
and
fimull
aad
push
addr16
push
adc
cmp
push
lcall
xlat
mov
adc
push
or
or
add
dec
xchg
ljmp
sbb
in
push
pop
or
cmpsb
and
lcall
sbb
xor
mov
es
in
addr16
js
jbe
fidivl
sbb
rcll
add
xor
jno
inc
xor
inc
and
mov
rorb
dec
pop
xchg
xor
out
leave
xor
mov
sarl
in
repnz
hlt
insb
test
push
push
jge
outsl
dec
xchg
repnz
xchg
test
xchg
iret
mov
and
mov
or
rorb
inc
jg
sbb
aaa
sub
adc
daa
xchg
pop
sahf
cld
sub
leave
int3
xlat
mov
mov
push
in
aam
xchg
enter
loop
mov
mov
jle
aad
js
lds
sub
cmpsb
mov
ss
sbb
adc
dec
cltd
push
cmp
loopne
imul
iret
shrb
fsubs
add
fs
stos
loop
mov
pop
mov
pushf
pop
loop
mov
pop
cmpb
nop
dec
fwait
cmp
xchg
nop
orb
sub
rcl
aad
xchg
lahf
mov
xchg
adc
mov
aas
jo
stos
pop
dec
in
stc
fisubl
lds
aas
aam
cmpb
jle
insl
mov
jmp
inc
xchg
jl
pushf
into
mov
ja
mov
into
cmp
lea
jns
push
cmpsb
mov
test
xchg
push
jmp
jp
adc
mov
xor
sub
inc
jg
cmc
fidivrl
or
cwtl
and
xchg
jg
test
sti
clc
imul
pop
cmpsl
mov
imulb
inc
mov
out
pushf
jne
or
mov
mov
repz
push
ret
out
pop
jmp
push
xchg
arpl
jne
cs
imul
shl
push
dec
shlb
cmpsl
test
mov
sub
add
rcl
mov
or
sahf
pushf
pushf
pop
fcoms
lea
mov
push
jmp
push
fistpl
mov
jp
ret
add
cmp
rorl
xlat
ljmp
imul
jb
mov
or
insb
test
cmp
and
pop
xor
mov
push
lcall
pusha
and
pop
loopne
add
mov
mov
outsb
xchg
mov
adc
push
inc
sbb
scas
ljmp
add
push
jecxz
call
std
iret
add
stc
out
rol
jbe
outsl
sbb
aam
int
add
icebp
fidivs
dec
cwtl
ja
stos
pop
adc
pop
lds
inc
jl
sub
incl
stc
jnp
inc
xchg
movsl
icebp
jecxz
ficomps
sbb
pop
mov
ja
xchg
xchg
std
imul
movsb
dec
push
iret
mov
inc
in
mov
popf
mov
iret
pop
into
pop
daa
xor
int3
jo
xchg
out
sarl
pop
bound
mov
in
sub
sti
pop
or
stos
mov
cwtl
in
xor
xlat
fs
js
xchg
cltd
mov
xchg
fbld
movsb
cmp
xchg
lahf
hlt
or
clc
cmp
int
jle
shl
jae
test
push
push
push
and
cmp
adcl
ficomps
clc
aaa
adc
lret
mov
es
in
std
mov
test
mov
fcomi
std
pushf
loope
and
std
pop
jnp
mov
ljmp
in
clc
fistpl
ds
dec
or
out
sub
cmp
push
xchg
test
mov
addr16
cmpsl
mov
mov
lret
loope
ja
pop
inc
push
shlb
inc
pushf
inc
filds
out
mov
imul
mov
jmp
andl
push
ror
pop
cmp
xor
sarb
push
mov
les
outsb
test
sbb
shrl
mov
add
in
jo
rclb
jbe
or
lahf
adc
inc
cltd
rep
sbb
sar
pop
shrb
add
inc
pop
fxtract
fisttpll
jp
ds
fcom
mov
lea
mov
push
shrl
mov
push
sub
jmp
cmp
mov
push
aad
lahf
fldl
inc
dec
pop
mov
sub
add
lcall
and
add
pop
adc
mov
inc
pop
inc
leave
xlat
sbbb
stos
stc
movsl
and
lock
dec
scas
lcall
mov
dec
mov
pop
or
cmp
repz
in
sbb
pop
test
mov
mov
xchg
xchg
insb
lret
jbe
je
inc
push
rcrb
nop
inc
outsl
dec
fcomi
add
jo
dec
lret
mov
inc
mov
inc
shlb
ror
adc
pop
adc
or
push
push
clc
xchg
cmp
sub
aaa
xchg
bound
push
mov
insl
adc
jnp
jg
loopne
push
add
lods
je
or
out
shl
ja
push
adc
push
loop
outsb
mov
test
sahf
lods
xor
push
xchg
add
and
pop
ss
stos
jg
int3
iret
ret
dec
cmp
test
lock
or
nop
pop
jb
loop
add
push
cltd
sarl
pop
filds
shlb
xor
aad
gs
insl
lahf
scas
pop
cmp
inc
lcall
cmp
fsubl
loope
sub
dec
jb
pop
iret
lcall
xchg
out
and
sub
inc
sub
int
sbb
stos
pop
out
xor
pop
xchg
ds
cmpsb
mov
jle
lret
mov
imul
mov
jmp
cs
leave
lock
xor
lods
xor
insl
mov
push
or
movsl
mov
mov
fsubrs
mov
mov
sti
test
aas
stos
or
xchg
inc
xorl
xor
les
xor
stos
adc
addr16
xlat
lea
cmpsb
scas
jb
in
bound
ja
repnz
or
and
sub
sub
or
mov
es
jbe
push
pop
mov
xor
or
jbe
add
jl
dec
out
cli
mov
mov
mov
cli
in
daa
push
mov
aas
jecxz
jg
jp
dec
add
sti
mov
add
mov
aad
data16
loop
xor
cmpb
xchg
je
ss
lods
inc
jge
ffreep
rcl
add
push
cli
dec
cmc
mov
cs
jns
dec
fs
sub
pop
outsb
mov
add
inc
push
pusha
pop
cmp
mov
inc
cltd
ss
pop
pop
xchg
les
mov
mov
ffree
mov
jecxz
dec
iret
push
mov
push
mov
xor
ss
outsb
push
scas
roll
xor
mov
movsl
mov
inc
cmp
and
rclb
jbe
jnp
imul
fiadds
dec
arpl
push
xor
lea
add
adc
bound
lcall
cmp
push
out
int3
pop
sub
popa
mov
dec
mov
aad
jge
fldcw
lahf
adcl
pop
stos
xchg
or
ret
push
lea
cmc
adc
lds
sarl
mov
sbb
ficoms
sub
mov
test
cmp
in
or
push
sub
outsl
mov
int3
pop
and
adc
sti
lcall
or
insb
addl
push
cmpsl
mov
sub
outsb
jno
or
mov
xor
fdivs
std
test
dec
dec
dec
inc
push
enter
nop
shr
shl
pop
inc
mov
pop
mov
add
popa
xchg
ret
cmp
test
sar
mov
ds
inc
lds
scas
cmpb
cmpsb
imul
cmc
fnsave
pusha
xchg
xchg
aad
ja
cli
mov
ret
imul
mov
int3
notb
imul
xor
dec
imul
push
scas
add
imul
dec
jnp
or
out
into
repnz
lea
pop
dec
xchg
sti
sbb
movb
xchg
jb
xor
dec
pop
xchg
mov
jno
xchg
push
subl
ret
jns
test
or
mov
insl
mov
mov
mov
rol
sahf
mov
xor
int3
adc
and
test
inc
insb
inc
mov
ss
arpl
je
xor
icebp
sub
inc
xchg
mov
das
mov
cmp
out
pop
lea
aad
movsb
mov
and
mov
inc
daa
daa
mov
mov
cmp
js
pop
xorl
enter
xor
rep
jl
cwtl
sbb
test
ja
xor
in
jge
pushf
inc
cmpb
imul
push
lods
pop
imul
add
lock
or
push
scas
xor
mov
jle
js
fwait
mov
xlat
test
in
outsl
mov
and
lret
fnsave
shll
test
scas
int3
jecxz
movsb
shl
stos
scas
dec
cmp
pop
ret
js
mov
mov
out
inc
sub
addb
pop
insb
loopne
movl
movb
ds
pop
or
push
push
icebp
push
leave
xchg
shll
add
lcall
pop
movsb
cmp
decb
pushf
pop
dec
pop
shl
lahf
repz
mov
faddl
outsl
lret
daa
fcoms
sbb
or
inc
into
push
inc
or
cmp
pop
mov
xor
xor
addl
xchg
loopne
les
shlb
inc
and
data16
pop
xor
imul
mov
jo
ja
mov
mov
and
aad
loop
cmp
into
ret
frstor
pop
dec
imul
push
cwtl
sbb
xchg
loopne
pop
ja
mov
hlt
jne
shlb
sbb
stos
bound
test
int3
or
lahf
fs
psraw
movsb
aaa
push
mov
push
dec
jge
sti
les
sahf
mov
xchg
es
dec
fstl
in
xlat
lret
addr16
loop
test
sarl
mov
mov
adcl
ss
lds
sub
mov
adc
lods
repnz
xchg
aam
mov
insl
data16
outsl
ss
pop
and
sub
xchg
sbb
cmp
pop
add
stos
and
add
popa
inc
in
push
pop
aad
jecxz
or
inc
dec
leave
nop
or
rorb
xchg
push
push
jae
out
sub
inc
cmp
sub
mov
ss
cmc
scas
mov
int
in
into
in
out
or
sti
xchg
shl
lea
pushf
mov
pop
fcomps
mov
nop
add
mulb
cli
jmp
push
dec
dec
addr16
cld
out
or
inc
stos
push
dec
jg
push
enter
gs
adc
mov
cld
das
int
ss
mov
push
xor
add
sbb
out
sub
cmp
arpl
adc
jl
sbb
adc
lock
mov
push
test
clc
pop
cmpsl
das
xorl
pop
or
cmpsl
ret
mov
cmc
stc
imul
inc
push
cmpsl
xchg
sub
std
and
mov
sbb
mov
fnsetpm(287
dec
jp
aaa
shrl
mov
out
mov
pop
mov
pop
lods
mov
out
sarb
and
adc
jl
mov
jl
add
dec
adc
outsl
addr16
jp
mov
sbb
dec
sbb
lock
imulb
out
or
sub
inc
out
sub
xchg
insb
out
and
aas
lcall
sub
arpl
sahf
repz
lock
xchg
je
outsl
mov
and
inc
mov
mov
pop
fs
adc
hlt
add
shll
xor
out
xchg
push
mov
jbe
enter
lret
jmp
nop
mov
xchg
or
leave
aas
fwait
in
cltd
lea
rclb
sub
inc
pusha
pushf
jmp
sbb
xor
nop
inc
and
mov
dec
xchg
ljmp
test
mov
out
mov
lret
aad
cmp
mov
in
cwtl
jl
adc
push
fwait
int
adc
lret
mov
lcall
jp
jg
push
sbbb
outsb
or
ja
add
insl
mov
fnstsw
mov
popf
xor
dec
mov
dec
subl
jae
ljmp
push
push
inc
jno
int
xchg
clc
sub
push
push
adc
lds
xchg
jle
mov
pop
mov
push
mov
xchg
dec
push
inc
pushf
inc
add
outsl
xorb
mov
or
cmpsl
xor
outsl
int
pop
xchg
sbb
repz
mov
subb
jmp
je
add
add
shlb
in
sbbb
cmpl
shrb
jl
lret
add
inc
shll
cmpsb
scas
hlt
ror
in
fsubrl
repz
and
cmp
aad
insl
adc
mov
sbbl
and
mov
iret
xor
popf
xlat
cmc
testb
sub
imul
popf
pop
add
mov
in
repz
test
cmc
mov
mov
or
inc
mov
inc
in
cli
sbb
outsb
and
int
cmc
push
into
stos
pop
mov
sbb
out
inc
inc
mov
imul
test
test
jae
or
andl
add
cmp
dec
cs
mov
leave
ja
xor
xor
push
or
sbb
dec
push
mov
push
jmp
scas
ljmp
pop
xor
fst
test
lock
xorl
out
sbb
pop
jns
loope
stos
cmc
mov
nop
push
add
cmpl
and
and
pop
inc
lret
fwait
sub
mov
mov
mov
xor
les
test
jno
out
les
adc
xchg
in
call
inc
ret
sbb
xor
pop
pop
jp
adc
xchg
xchg
fnsave
mov
arpl
aam
add
repnz
in
dec
xlat
in
push
cmp
stos
jo
pop
dec
popa
xchg
fldcw
in
rcll
push
pop
shlb
shll
add
mov
enter
popf
jecxz
cmp
lret
cs
adc
push
andl
ficoml
mov
bound
sbb
mov
cmp
xchg
pop
xchg
or
add
xchg
aad
cmp
jge
push
jp
cwtl
fsubrl
or
insb
adc
imul
xchg
dec
mov
addr16
sub
dec
xchg
add
mov
cmp
jnp
sub
sti
jb
mov
test
and
and
push
ja
dec
dec
jl
push
pop
std
cmp
pusha
add
push
jmp
ss
leave
push
popf
jge
mov
mov
scas
add
test
push
inc
and
push
call
cmp
adc
cmp
mov
aaa
movsb
addl
mov
decb
mov
stos
les
dec
stos
mov
dec
jle
xor
jbe
jp
fsubrs
sub
pop
inc
lret
out
mov
push
jae
add
cs
inc
cmpps
ja
adc
push
mov
or
mov
mov
dec
fs
sahf
inc
scas
jle
mov
fs
sarb
popa
aam
outsb
hlt
mov
inc
mov
sbb
ret
xchg
movsl
out
nop
add
imul
cwtl
addr16
and
mov
sbb
in
cmp
mov
in
cmp
ret
mov
ja
lahf
and
mov
mov
call
and
repnz
mov
cmp
fadds
xchg
inc
mov
out
stc
outsl
stos
daa
iret
xchg
movsl
leave
cltd
ja
or
das
scas
sub
sbb
cmp
pop
cld
cmp
out
push
out
xor
inc
das
xchg
fsubrl
iret
gs
test
leave
cmpsb
cmp
xlat
repnz
out
push
loopne
or
pop
sbb
iret
mov
pop
xchg
dec
leave
push
mov
jp
xor
cwtl
pop
repnz
jo
push
inc
lods
sbb
or
lock
pusha
imul
subb
xor
mov
aad
ja
mov
mov
decb
xor
sub
push
and
popf
pushf
cmp
adc
mov
push
xor
subb
pop
jnp
mov
adc
ret
mov
jg
sahf
imul
outsl
push
cmp
jns
dec
cmp
inc
xchg
mov
repnz
negl
pop
and
in
add
push
mov
pusha
dec
or
mov
xlat
bound
loop
jne
jae
es
add
iret
jae
mov
or
mov
sbb
mov
mov
aad
sbb
popf
mov
xor
cmp
push
adc
and
pushf
mov
inc
out
std
hlt
loopne
add
jl
in
add
and
cmp
xor
mov
daa
cmp
adc
push
clc
xchg
jbe
jge
shll
insl
inc
and
js
sbb
adc
int
mov
test
loopne
enter
cltd
jnp
mov
xor
outsl
jecxz
mov
in
cmp
hlt
sti
lds
and
dec
lock
adc
nop
push
xchg
or
pop
and
call
scas
xor
cs
pop
jl
dec
sbb
pusha
pop
and
je
stc
int3
jge
mov
lcall
mov
sti
push
add
adc
push
or
push
lods
push
hlt
fldenv
mov
push
mov
push
inc
imul
pop
popfw
cld
lret
mov
sar
jne
cld
dec
sbb
or
dec
mov
lret
mov
orb
cld
mov
out
mov
cmp
mov
nop
cmp
push
repnz
mov
into
jle
cmp
loop
pop
popa
mov
adc
pop
outsl
stos
cmpsb
les
pop
push
test
push
andl
addr16
arpl
add
or
hlt
xchg
cmp
arpl
or
jnp
sti
repz
cmp
data16
sbb
or
movsl
or
rolb
aas
aad
stos
mov
outsb
inc
push
shll
dec
xchg
adc
cwtl
jecxz
enter
iret
daa
icebp
cmp
jp
je
in
call
clc
fsub
mov
outsb
add
cmpsl
mov
xchg
hlt
stc
sbb
or
in
mov
push
mov
loopne
repz
cmpl
mov
bound
sbb
xor
movsb
xor
jae
xchg
aad
sub
std
aas
inc
loope
inc
lret
fistps
and
rcl
push
in
push
std
mov
mov
lcall
ja
sub
add
pop
and
pop
push
push
aas
push
in
addb
sbb
add
push
fiaddl
scas
lea
cmp
push
fwait
call
ljmp
stos
adc
ret
and
add
in
add
adc
lcall
jo
and
fdivrs
cmpsl
shlb
jno
shrb
shll
mov
jo
push
dec
ss
sbb
push
arpl
rcpps
cwtl
or
sbb
loop
insl
inc
adc
add
cmp
jb
aad
ljmp
js
clc
cmp
fidivrs
xor
xchg
pusha
cmpsb
pop
push
lods
jnp
add
stos
cmp
pop
mov
and
mov
mov
adc
adc
cmp
mov
inc
add
sete
sbb
xor
fldcw
fidivl
xor
mov
push
nop
push
es
stc
cmpl
sub
ja
adc
mov
push
dec
into
enter
sub
sub
lcall
rolb
jmp
push
dec
cltd
arpl
dec
or
xchg
dec
and
stc
cli
repnz
push
shll
push
xchg
movsl
sub
jl
sub
and
je
fisubl
in
cmpsl
js
jmp
test
fnstsw
lret
add
pushw
push
movsb
test
jnp
xchg
add
stc
pop
mov
rolb
out
mov
jb
inc
call
les
xchg
jno
pop
ficoml
std
leave
inc
ret
rclb
rcll
outsl
sub
jae
cmpsb
mov
mov
cltd
popa
out
movb
jecxz
popa
pop
adc
data16
mov
stos
ret
fbld
sub
int3
or
sbb
mov
push
mov
mov
iret
notl
out
inc
iret
pop
adc
add
das
cmp
ds
aad
mov
out
popf
sub
cmpsl
or
mov
repnz
push
inc
jecxz
loopne
xchg
cs
in
lea
pop
scas
rclb
mov
shlb
lock
jmp
arpl
cmp
ja
les
inc
pop
cwtl
je
aam
adc
enter
outsb
adc
scas
nop
aas
gs
sbb
inc
js
cs
enter
add
fistpll
rorl
mov
daa
pop
into
jne
inc
lea
stos
xchg
shr
addl
jmp
in
in
mov
dec
pop
fldt
mov
mov
push
push
adc
es
clc
sub
stos
mov
icebp
ret
inc
pop
and
sbb
repnz
icebp
in
mov
out
divl
mov
xorb
int
jo
lfs
arpl
ret
mov
push
das
dec
daa
lahf
rcll
dec
es
push
mov
std
cmc
pop
add
ja
adc
movsb
inc
shr
or
loop
daa
dec
imul
lret
jae
mov
stos
or
add
outsb
and
enter
xchg
movsb
mov
mov
sbb
adc
aad
push
lcall
in
addl
xchg
lea
sbb
repnz
push
divb
jge
movsl
push
pop
fidivrs
movsb
mov
in
sbb
mov
sbb
cmc
leave
pop
add
push
repz
dec
mov
into
insb
xlat
test
adc
cltd
and
inc
adc
jg
je
ljmp
cmp
mov
movsb
enter
jne
mov
cltd
lds
pop
and
adc
mov
mov
and
cltd
push
or
jb
xor
and
loope
inc
sarl
or
pop
mov
inc
jae
nop
inc
aaa
jne
add
mov
clc
xchg
sbb
int
cmpsb
mov
test
imul
cs
and
rcrb
jmp
mov
shrb
sar
push
xchg
das
cmpsb
jge
cmp
inc
cli
and
roll
pop
aam
xlat
push
cmp
out
sub
jge
cmp
mov
fiaddl
push
dec
bound
mov
ljmp
jnp
jecxz
sub
adc
test
adc
lds
mov
idivb
xchg
xor
lret
lcall
lds
out
arpl
xlat
mov
les
fisttpll
or
sahf
lret
jno
mov
xchg
sti
mov
fnstcw
mov
jae
negb
leave
lret
test
mov
les
sbb
or
arpl
xchg
fst
xchg
push
clc
int
cli
xlat
sub
dec
mov
ret
cmpsb
push
lock
dec
add
cmp
sub
fidivl
pop
pop
mov
pop
jnp
lea
or
ds
jbe
push
dec
sti
push
decl
pop
int
mov
loopne
sub
sub
idivb
test
cmpps
xlat
cmpsb
imul
nop
es
and
push
jecxz
test
out
ret
cmpsb
int
shrb
shrl
mov
popf
jno
mov
pushf
cs
xchg
push
mov
pop
nop
cmp
push
or
insl
insb
pop
xor
cs
jmp
and
das
enter
pop
or
push
lret
add
hlt
andl
stc
mov
sti
push
push
fsts
cmp
sbb
pop
lods
jb
mov
sahf
fdivrl
lds
sarb
loopne
lret
cmp
pop
les
repnz
jge
sbb
loopne
nop
jg
jmp
mov
xor
jle
cmc
xchg
push
xchg
adc
push
stc
mov
dec
out
add
xor
cmp
test
test
xchg
mov
mov
push
lret
push
orl
xchg
xchg
jg
adc
in
imul
pop
xor
cltd
jo
cli
jb
adc
mov
jne
xchg
xchg
sub
xor
or
ss
lock
addr16
out
sahf
jmp
fnstsw
dec
adc
sub
pop
test
cmpsb
add
dec
sbb
enter
lret
fwait
popa
hlt
mov
push
es
les
sbb
cld
test
adc
and
in
mov
popf
push
push
mov
jp
call
fwait
movsb
popf
sub
insb
cmp
xor
pop
mov
push
pusha
frstor
jae
gs
mov
jge
popa
test
inc
jg
inc
mov
or
xchg
inc
add
movsb
pop
cmpsl
dec
inc
or
and
push
cmp
ljmp
mov
aas
cwtl
bnd
ror
or
adcl
and
add
pop
jmp
pusha
pop
icebp
xor
add
mov
arpl
out
xchg
dec
mov
mov
pop
cltd
mov
ss
or
adc
pop
into
sub
fisubl
xor
add
xor
hlt
jge
inc
or
nop
push
dec
mov
mov
add
roll
sbbl
stos
sarl
sbb
mov
push
insb
cmp
add
clc
xchg
gs
jle
enter
nop
xchg
mov
push
cld
in
inc
sbb
and
rcl
insb
mov
cmpsb
add
jb
mov
dec
push
inc
je
loope
xchg
xor
xor
sub
cmp
xchg
jp
icebp
and
fcomps
pop
ret
ret
je
rcrl
sahf
data16
push
and
pusha
stc
lret
sbb
mov
ja
add
sub
dec
xor
leave
cmc
xchg
stos
sub
cli
push
aaa
lcall
add
pop
or
push
loopne
sbb
mov
xchg
add
out
addr16
stos
sub
mov
pop
daa
pop
sub
and
fsubrl
cmp
push
bound
cltd
jnp
fldl
lret
add
mov
fucomi
jo
push
jns
or
or
sti
pop
decl
popa
xchg
xchg
test
adc
mov
in
xchg
pop
cmp
mov
out
xor
movsb
hlt
addr16
cmp
shll
std
xchg
pop
inc
jne
pop
jge
cwtl
rcrl
xor
fistps
inc
push
xor
push
pop
repnz
les
xchg
mov
cld
decl
sub
psrlq
mov
sub
mov
xchg
add
xor
pop
or
sbb
mov
mov
roll
xchg
arpl
cld
dec
aad
insb
inc
jo
shrl
pop
adc
xchg
gs
push
repz
sub
inc
inc
cmp
pop
xor
dec
test
inc
jecxz
int
mov
jb
adc
dec
orb
xchg
push
adc
pop
stos
sbb
inc
int3
outsl
stos
dec
and
or
mov
adcb
jecxz
dec
jo
xchg
scas
or
sub
pop
cmp
in
jle
add
xchg
push
mov
fisttps
cli
xchg
push
push
mov
and
dec
insb
ret
sarl
sbb
insl
xchg
sbb
xchg
test
and
cmp
jb
iret
nop
jo
sub
inc
sbb
adc
pop
push
mov
ja
divb
es
test
xchg
inc
push
jl
dec
fucomip
push
jg
daa
mov
add
test
push
mov
adc
mov
loope
add
das
sub
hlt
sbb
push
or
into
fcmovbe
incb
aas
outsb
dec
xor
cs
cmc
aaa
mov
ds
push
xchg
sbb
dec
bound
lea
clc
mov
jp
pop
and
jae
jo
or
pop
int
add
out
jle
push
fnstsw
in
jne
jle
or
jge
lahf
addr16
popa
mov
ss
xchg
lods
not
mull
xor
dec
sbb
cmp
gs
fstpt
insl
icebp
xor
add
xchg
push
out
and
inc
jb
mov
or
fucomi
or
push
rcrb
mov
xorb
mov
sti
add
into
xchg
or
int
xor
ucomiss
mov
mov
push
test
imul
aas
lods
push
leave
mov
test
sar
xor
dec
jecxz
mov
std
rol
mov
xchg
xchg
pop
test
mov
ret
insb
sub
pusha
hlt
sbb
dec
insl
push
adc
xorb
mov
inc
xor
imul
sarl
enter
fcompp
jnp
pop
rcrb
jne
imul
cmp
mov
or
idivb
add
int3
imul
idivb
scas
jns
rep
xchg
arpl
bound
xchg
fmuls
insb
daa
xor
mov
mov
push
ss
out
lods
mov
and
adc
sti
pop
fdivrs
mov
loop
iret
xchg
or
clc
out
mov
or
lahf
ja
cmpb
mov
push
in
xchg
out
nop
test
shll
and
leave
mov
rolb
fsub
xor
mov
xchg
in
push
adc
xor
xor
shll
call
subb
popa
leave
fnstenv
mov
fisubl
aad
or
sub
cld
adc
push
push
arpl
jbe
in
push
mov
cwtl
mov
movsb
jo
jae
shlb
add
sbb
cli
pop
sbb
lods
nop
out
out
mov
xchg
pop
in
nop
xchg
cmp
insl
mov
pop
push
cmpsl
cmpsl
es
addr16
ret
stos
in
mov
std
mov
sub
or
sub
cwtl
rcll
and
data16
outsl
cmp
jecxz
or
dec
mov
cli
sbb
or
scas
jle
popa
cwtl
mov
inc
jl
js
inc
xor
decb
or
push
test
shrb
stos
imul
sub
aad
xor
add
repz
out
mov
push
lods
outsl
js
lock
add
push
nop
mov
mov
pop
int3
lds
sar
add
lock
lahf
adc
pop
sub
cmovp
mov
loopne
inc
fsubrs
out
lret
stos
inc
sub
mov
pop
xchg
and
dec
lock
shrb
push
imul
cli
mov
and
popa
out
ja
add
jno
dec
mov
fcoml
test
sbb
aam
divl
outsb
push
outsb
int
mov
nop
sbb
inc
add
xor
test
cltd
enter
and
or
fdivrl
subl
imul
jge
add
lahf
fstl
incb
jecxz
pop
loop
xor
jg
push
in
jge
or
arpl
sbbb
pop
jecxz
cmpl
pushf
cmpsl
pusha
scas
sbb
lock
mov
mov
inc
or
std
cmp
sub
out
test
stos
jl
jge
lret
adc
gs
ljmp
cmc
add
lahf
cli
imulb
inc
sbb
cmp
push
adc
pop
shll
mov
jge
sub
in
mov
movsl
js
nop
scas
arpl
jo
push
xchg
sbb
jmp
mov
out
fnsave
fwait
xlat
sub
xchg
sarl
daa
insl
sarl
or
nop
dec
inc
pop
das
jmp
aaa
fsub
imul
adcl
sub
scas
int3
dec
dec
dec
sbb
xchg
shrb
out
mov
enter
push
aam
cmp
mov
daa
xchg
dec
loopne
push
adc
outsb
adc
test
cmc
imul
iret
mov
add
paddusw
lret
gs
and
jae
cmp
xchg
sub
pop
sub
jae
dec
scas
lods
pop
cmpb
repnz
dec
ret
mov
lret
add
sahf
adc
je
and
repnz
in
stc
dec
ret
adc
into
and
ficoml
aad
xchg
out
xchg
pop
in
or
mov
adc
mov
xchg
sbb
sbb
pop
insl
in
cmp
das
push
or
push
rcrb
push
xchg
xchg
fisubrl
fisttps
aaa
mov
xor
dec
pop
test
or
inc
jb
aaa
leave
lahf
out
pop
stc
nop
iret
jmp
jno
push
inc
jmp
sbb
rclb
xor
pop
jecxz
inc
add
ret
scas
mov
les
sub
iret
and
sub
nop
mov
dec
fcom
dec
sbb
repnz
push
fisubl
andl
movsl
inc
mov
push
cli
push
jp
loop
jg
mov
imul
xchg
nop
out
aam
mov
xchg
jnp
inc
dec
or
or
mov
sahf
pushf
jb
push
jae
jle
push
dec
inc
loope
jle
aaa
out
and
test
je
push
jge
subl
outsb
test
jne
js
pop
inc
es
push
in
adc
add
icebp
inc
stc
xor
out
jg
xor
into
dec
ret
and
cmp
xchg
pushf
mov
xlat
lods
in
jmp
mov
mov
push
add
fwait
pop
and
and
mov
icebp
stos
cltd
out
sub
add
fwait
pop
lcall
pop
shrl
cwtl
inc
pop
push
inc
das
push
sbb
fildl
pop
sysret
in
add
hlt
xor
pop
fidivs
enter
popa
push
mov
sbb
mov
dec
movsb
or
sti
sbb
lea
sub
popa
int
jnp
sbb
xchg
adc
subl
xor
xchg
xchg
out
repz
ds
mov
popa
adc
mov
add
dec
jmp
xchg
testb
outsb
pop
outsl
jnp
pop
xchg
adc
repnz
xchg
push
dec
call
sbb
adc
xchg
outsb
add
rcll
add
inc
out
lret
xchg
and
ret
sub
imul
mov
xor
fs
outsb
jge
xchg
inc
nop
loopne
aad
icebp
jp
out
in
sub
sub
cli
jle
icebp
push
dec
push
mov
rorb
ljmp
fistps
mov
dec
dec
aad
and
mov
fwait
repz
outsb
ret
ja
lahf
fs
sub
xchg
int
rcrb
shlb
pop
imul
das
inc
cmpb
push
imul
push
imul
or
pop
push
mov
out
sbb
test
mov
pop
cmp
adc
cmp
inc
xlat
shlb
sub
lea
xchg
jp
hlt
fisttpl
fnstsw
cmpsl
insl
mov
mov
xchg
data16
sub
cmpsb
cs
iret
inc
xchg
stos
and
popf
push
xchg
mov
cmp
jns
lea
out
inc
xchg
sbb
in
sbb
mov
and
push
idivl
or
xchg
aas
mov
xor
pusha
pusha
je
in
sbb
stc
xlat
lods
push
lcall
call
mov
movsb
rorb
adc
sar
lock
or
sub
jle
rcrl
jmp
cmp
enter
push
xchg
mov
lods
lds
pop
mov
mov
or
xor
aad
sbb
getsec
mov
pop
daa
pop
sub
jmp
movsb
mov
cmp
andl
notb
fisubrs
push
xchg
in
lret
fsubrs
push
jae
pusha
cmp
mov
inc
xor
xchg
push
out
aad
outsb
addr16
sbb
push
push
outsb
dec
mov
pop
imul
and
stos
xchg
push
xor
lods
cmc
dec
sti
push
mov
cli
pop
add
mov
pop
cmp
movsb
int3
mov
imul
out
or
lahf
insb
lds
push
js
ds
je
shl
cli
sbb
clc
pop
pop
push
xor
mov
and
or
dec
pop
sbb
aaa
in
orl
cmpb
cmpsb
outsl
mov
adcl
stos
mov
inc
mov
lds
fdivrs
inc
push
lods
pop
mov
mov
pop
enter
movsl
aad
sbb
adc
ja
es
movq
xchg
ret
mov
loopne
insb
dec
add
add
out
cwtl
adc
xor
pop
dec
jno
pop
nop
mov
or
inc
adc
or
push
mov
stc
rorl
sbb
sub
popa
or
les
pop
sbbb
scas
stc
test
mov
lret
fnstenv
sarl
add
mov
mov
ficomps
inc
pop
test
inc
and
cmp
jmp
repnz
pusha
cmpsb
je
sub
adc
mov
xorl
or
popf
stos
int
adc
out
mov
or
aaa
cmp
pop
movsl
xor
sti
imul
sbb
scas
push
mov
add
das
loop
fwait
dec
xor
or
ljmp
nopl
xor
dec
test
jo
cwtl
inc
lds
lcall
xchg
mov
pop
mov
or
pop
ficoms
lret
cmp
enter
outsl
push
cmp
std
sbb
dec
dec
push
mov
sub
ja
aas
mov
notb
aas
pop
cmp
mov
sbb
or
bound
and
add
jb
mov
pop
pop
iret
xor
and
jo
roll
pop
and
inc
sbb
lea
add
jg
mov
push
push
leave
repnz
popa
xchg
sbb
mov
push
stos
mov
hlt
out
xchg
jge
push
jge
mov
fsubrs
imul
outsb
adc
or
inc
out
sbbl
testl
inc
cmc
add
and
push
bound
lods
cltd
sbb
xchg
scas
or
dec
cmp
sub
xor
lret
aaa
or
and
or
mov
shrl
cmovbe
mov
push
sbb
leave
push
icebp
loop
fs
hlt
repz
js
pop
add
sahf
jp
out
data16
aas
fcomip
add
adc
lea
push
pop
push
adc
lahf
mov
push
inc
cmp
jo
sti
arpl
in
or
adc
xor
repz
inc
outsb
ljmp
test
mov
inc
cmc
mov
lcall
add
movsb
cmp
roll
sub
sbb
or
stos
ret
shrb
imul
inc
std
and
jl
dec
ja
jae
pop
clc
fistpl
in
adc
das
and
cmpsl
sub
xchg
mov
or
and
inc
push
mov
loop
in
cmp
in
enter
adc
rorl
sub
pop
punpckldq
push
les
pop
add
lret
cmp
mov
dec
loope
insl
mov
jnp
pop
outsb
addl
add
nop
gs
dec
xchg
xchg
dec
xchg
ret
cmp
movsl
fdivrp
aam
movsl
add
aas
mov
hlt
je
push
int3
mov
outsb
and
jb
test
rorb
ds
fcompl
mov
dec
mov
cli
mov
mov
repnz
test
inc
pop
clc
xor
mov
in
dec
cli
jg
mov
sub
mov
int3
add
sub
arpl
scas
push
lret
cmc
aaa
or
out
pop
movsl
pop
push
pop
call
push
inc
and
and
xlat
jecxz
rol
decl
pop
mov
push
fdivl
jbe
pusha
cmpsb
push
push
loop
jg
mov
xchg
mov
sbb
push
shrb
mov
repz
inc
and
nop
xchg
xlat
mov
arpl
inc
sub
pushl
idivb
xor
pop
mov
shl
adcl
shlb
int
xchg
icebp
dec
cmc
mov
sbb
movsb
jmp
and
cmp
lret
inc
jno
aam
pop
dec
sti
push
popl
pop
les
inc
add
lods
out
jp
sub
mov
pop
adc
test
mov
test
cmp
out
subl
ja
lcall
add
arpl
loopne
loope
pop
js
fisubrl
mov
add
add
sahf
sbbb
add
xchg
clc
stos
ror
and
xor
xchg
adc
mov
xchg
add
lods
fmuls
xchg
imul
hlt
flds
lret
mov
addr16
in
orl
insb
sbbb
cmpsb
shl
es
insb
roll
mov
jno
std
jns
mov
aaa
lock
push
push
mov
mov
mov
mov
lock
push
xor
icebp
ret
outsb
inc
inc
dec
jge
insb
lret
mov
mov
out
les
gs
repz
push
out
add
sti
mov
push
xchg
jo
xlat
leave
fwait
popa
pop
lea
dec
xor
jle
out
mov
fld
sbb
imull
bswap
dec
adc
xor
mov
lock
adc
jl
dec
adc
dec
outsl
jnp
and
push
inc
push
es
dec
dec
subb
xor
aam
fildll
icebp
inc
or
push
xchg
and
nop
sar
aad
data16
in
movsl
and
push
rcrl
xchg
mov
outsl
fistl
arpl
sbb
outsb
insb
xchg
dec
mov
fwait
arpl
pop
jge
clc
mov
push
mov
stc
mov
mov
loop
push
and
enter
inc
lea
mov
inc
add
mov
xchg
std
mov
push
jle
push
and
sbb
push
pushf
jb
inc
andb
xor
aam
xchg
cmp
xor
cs
bound
sbb
adc
pop
jp
jp
or
in
clc
decl
adc
lret
push
cli
imul
inc
adc
add
aam
call
add
mov
or
and
dec
iret
std
movsb
jecxz
push
js
scas
jae
push
sti
scas
xlat
testl
add
cmp
stc
inc
lock
xchg
test
ja
insb
fstpl
inc
test
js
xor
lahf
push
mov
roll
jbe
and
fdivs
enter
stos
cli
adc
jno
inc
out
cmpsl
mov
push
js
int3
cmp
jne
movsb
int3
inc
xchg
es
shll
dec
and
arpl
mov
adc
rcl
scas
jnp
cmp
mov
nop
mov
or
mov
xorl
fistpl
jp
xchg
mov
mov
push
cmpsl
push
mov
or
mov
mov
cmpsb
push
push
lods
mov
test
xchg
and
mov
cltd
jmp
sbb
or
loopne
mulb
out
xchg
xlat
mov
loopne
add
mov
jmp
jb
inc
mov
aaa
xchg
push
bound
mov
lods
sub
mov
cld
dec
sub
xchg
mov
mov
pop
mov
adc
push
lods
sub
fisubrs
adc
cmp
mov
mov
xor
ljmp
jp
inc
xor
xchg
mov
xor
out
nop
cltd
mov
js
fistps
inc
or
push
jecxz
mov
hlt
test
dec
adc
xchg
or
in
mov
repz
mov
xchg
fwait
mov
insl
nopl
push
popf
aam
jb
or
pop
cmp
ds
pusha
push
pop
int3
xchg
movsl
push
xchg
dec
adc
fucomp
xor
lret
adc
dec
inc
fdivl
mov
sbb
mov
scas
sub
aad
xlat
xchg
ds
and
movsl
movsl
pop
shrl
das
cmp
lcall
sahf
pop
push
push
mov
int
stc
inc
cmp
jb
rcl
xor
roll
add
fpatan
push
stos
xor
mov
jnp
pop
pop
jne
mov
popa
loop
push
and
push
xchg
jae
insb
xlat
dec
cmpsb
adc
mov
leave
xchg
sbb
aad
cli
test
adc
push
movsl
sub
pop
jo
xchg
inc
sub
and
push
and
lods
cmp
movsb
sti
or
inc
test
jae
addb
paddq
xor
aaa
sub
push
dec
fmuls
sbb
jge
xchg
out
sbb
cli
push
in
jl
sbb
shlb
std
jp
or
mov
or
cmp
insl
mov
cs
pop
xor
add
lcall
adc
sbb
jle
mov
ret
xchg
dec
xor
arpl
jle
lods
gs
inc
push
jae
idivl
test
mov
shl
loope
cmc
mov
mov
pop
imul
sub
addr16
scas
inc
mov
push
dec
dec
test
in
pop
push
pusha
enter
fiadds
add
jle
push
into
es
std
mov
and
js
push
sbb
daa
insb
test
ljmp
jbe
xchg
ficoms
insb
jg
xchg
mov
sub
push
test
mov
cmpsb
mov
cmp
pop
mov
rclb
mov
test
les
mov
cmp
pop
adc
push
stos
test
ljmp
dec
cltd
inc
dec
popa
frstor
inc
mov
push
and
mov
fisubs
lds
jnp
or
inc
fnsave
inc
stos
mov
test
xchg
mov
jle
add
pop
aad
movl
pop
inc
aam
repz
out
mov
dec
push
mov
insb
sbb
aas
lock
shrl
cmp
mov
mov
pop
push
or
pop
stos
cmpsb
ret
mov
leave
pop
mov
enter
inc
pop
leave
sub
ds
adc
jmp
arpl
loop
pop
daa
inc
out
inc
fiaddl
push
sub
jo
notb
divl
ljmp
sahf
imul
cmovb
aad
lea
or
fsts
outsb
xor
icebp
insb
or
loopne
lahf
dec
loop
lods
adc
pusha
adcl
dec
add
addl
insl
jecxz
pop
mov
and
leave
hlt
test
shlb
cmpsb
movl
cmpsb
add
jbe
sqrtps
jns
scas
jge
testl
mov
and
or
pop
fstl
sub
mov
enter
out
cmp
xchg
imulb
push
imul
jg
adc
sbb
pusha
bound
pop
mov
sub
adc
pop
movsl
inc
jl
mov
arpl
clc
insb
lea
push
mov
lds
stos
mov
inc
inc
mov
or
mov
fwait
cmpsb
xchg
jmp
xor
addr16
imul
imul
ss
push
call
push
lahf
and
xchg
rcrl
shl
hlt
or
fmull
incl
pop
rcrl
fsubr
or
fcmove
sbb
sbb
jg
sub
push
jnp
mov
sbb
stos
lret
mov
into
xchg
push
loope
fimull
clc
sbb
xchg
dec
xchg
cmc
xlat
dec
hlt
push
scas
xchg
addr16
lret
inc
aaa
sub
aad
enter
lahf
jbe
and
push
dec
lods
rcrl
insb
loop
jle
dec
loopne
jae
xor
ret
testl
rol
and
std
shr
outsl
mov
jbe
ret
outsl
push
pop
xchg
int
rcr
push
or
sub
lcall
xchg
out
or
mov
stos
jl
gs
fs
dec
lcall
and
dec
pusha
add
les
das
push
imull
xchg
inc
pop
jmp
adc
mov
movsl
adc
inc
push
fs
bound
mov
jg
movsl
pop
or
or
seto
sub
pop
scas
aad
popa
and
ja
insl
insb
xchg
mov
xchg
insb
xchg
xchg
push
cmpsb
mov
faddp
rcrl
and
push
sbb
xchg
xchg
scas
and
cmp
and
mov
or
loopne
fildl
push
xchg
lea
mov
sbb
sbb
inc
aaa
popa
iret
dec
int
add
mov
gs
fidivrs
test
adc
in
mov
push
xchg
pop
sub
scas
jb
dec
add
fildl
inc
xchg
dec
pop
arpl
sub
outsl
call
sbbl
mov
rcr
adc
scas
add
ret
inc
sub
mov
lcall
push
xor
ret
adc
lds
mov
cmp
sub
xor
ja
sbb
cmp
es
into
in
push
ja
pusha
enter
popf
push
pop
sbbb
mov
push
fidivrs
push
cmpsb
add
push
sub
imul
sbb
ja
sub
inc
icebp
negl
cwtl
pushf
bnd
aaa
xchg
push
dec
push
pop
lods
jge
mov
sub
pop
lock
or
cltd
insb
test
shlb
mov
insl
push
mov
xchg
popl
xchg
iret
cmp
fwait
out
stc
js
mov
cmp
cwtl
pop
clc
sbb
lret
lcall
js
jg
ljmp
iret
add
fisttps
imul
add
jmp
cld
xor
or
jmp
sub
movsl
jl
xchg
xor
in
ljmp
mov
inc
aaa
mov
rcrl
sub
popa
or
loopne
sbb
lods
add
mov
push
in
xchg
dec
xchg
insb
jns
dec
hlt
xchg
push
sub
addr16
jno
ret
add
out
cmp
jns
mov
lcall
sub
ds
fwait
andb
sub
stos
iret
and
dec
andb
sub
xor
enter
fs
mov
iret
and
push
add
std
cltd
mov
jb
lret
sbb
or
cmpsl
bound
and
shll
mov
mov
adc
pop
cltd
pop
push
xchg
push
enter
fisubrs
nop
jbe
and
xor
mov
and
std
jo
cmc
ror
fbld
inc
sahf
push
out
cmp
cwtl
popf
or
repnz
push
pop
ficoml
data16
push
ret
sbb
into
test
dec
or
fisubs
mov
jle
add
adc
add
idivl
outsb
test
stos
sub
xchg
into
in
loop
and
pop
dec
xchg
bound
pushf
cli
loopne
adc
movb
sbb
adc
sub
mov
rorb
xor
aas
jp
dec
jne
dec
testl
sahf
daa
pop
sbb
and
mov
test
sbb
sub
sub
and
inc
repnz
mov
pushf
xabort
es
xchg
mov
subb
test
dec
inc
scas
pop
jo
sub
out
loop
sub
dec
sti
push
xor
test
popl
xor
cltd
iret
out
push
inc
lods
fdivrl
ja
cmp
mov
fmull
pop
xor
loop
les
repz
sti
pop
sbb
push
push
ficomps
ss
dec
cmp
mov
jbe
test
jmp
out
daa
jno
pop
xchg
pop
push
pop
add
pop
jnp
xchg
ja
mov
jbe
push
scas
sahf
inc
add
popf
lret
movsb
cwtl
pusha
add
fs
xchg
leave
lea
jl
outsb
lret
rorl
pop
lret
jmp
dec
lret
lods
imul
xchg
aad
pushf
fwait
jg
sub
repz
hlt
or
popf
mov
shr
popa
nop
out
iret
shrb
sbb
dec
or
filds
aas
icebp
sarl
mov
ret
or
orb
pop
xchg
jno
cmp
push
xchg
into
and
flds
ret
fisubl
in
push
pop
je
add
sbb
jb
dec
test
inc
xchg
mov
add
scas
or
mov
ret
loope
xor
cmp
scas
imul
xchg
and
inc
fldcw
faddl
xchg
fcoms
jb
shlb
pop
movsb
mov
scas
and
inc
faddl
xor
add
cmp
test
adc
popa
mov
shll
fbstp
mov
movsb
mov
mov
mov
movsl
fwait
cmp
xor
js
jg
xor
loopne
enter
and
jmp
mov
xor
or
dec
mov
xor
inc
lea
push
ja
das
dec
dec
mov
or
mov
adc
outsl
clc
idivb
and
lods
mov
jne
mov
and
mov
in
lods
push
mov
into
dec
mov
cmp
in
loop
or
jns
bound
dec
inc
xchg
xor
sti
imul
cmp
sbb
mov
xchg
jle
sbb
shlb
call
mov
pop
out
push
add
lret
ss
mov
in
daa
jmp
mov
xor
outsl
add
xor
add
and
jno
sub
add
je
pushf
mov
and
push
mov
insl
test
divps
push
dec
cld
adc
add
sbb
jg
dec
mov
jge
mulb
cmpsb
shrb
shrl
je
adcl
out
sub
jp
imul
lahf
mov
das
mov
lahf
adc
pop
mov
xor
sbb
scas
push
out
mov
fwait
pop
test
xchg
std
fcomp
cwtl
add
mov
jnp
pop
cltd
cmp
jo
enter
pop
push
mov
in
inc
fimuls
jb
test
xlat
call
dec
jb
ja
xor
loop
div
mov
inc
add
lock
je
jmp
das
pop
cmp
xor
xchg
out
cmc
daa
nop
mov
xchg
or
xor
dec
pusha
xor
mov
mov
push
dec
mov
in
pushf
xor
sbb
bound
or
push
sbb
pop
inc
jno
or
or
jle
mov
xchg
lahf
jnp
aam
lret
loope
cmp
xchg
fldenv
in
sub
daa
mov
mov
or
out
dec
dec
mov
pop
fidivrs
leave
jbe
and
lds
mov
cmpsl
test
cmp
jl
in
loop
outsl
xchg
cs
mov
push
out
adc
mov
or
xor
gs
push
ret
ret
outsb
pop
inc
fstpl
incl
mov
cmp
jg
scas
leave
mov
or
arpl
jbe
stos
cltd
add
movsl
out
lock
cmp
test
leave
sbb
leave
movb
add
imul
dec
xchg
ficoms
mov
xchg
and
stos
push
jmp
sub
scas
push
push
fs
sbb
adc
sub
outsl
lods
pushf
fnstenv
mov
std
das
and
jmp
movsb
pop
loope
cmp
in
jbe
icebp
stos
loopne,pt
shll
out
lds
mov
and
xchg
in
inc
insb
mov
aas
aad
iret
jp
out
leave
jbe
push
pop
lods
mov
sbb
ret
pop
push
aam
dec
insb
xchg
icebp
aam
aam
mull
add
notl
rcrl
mov
jle
jmp
insl
inc
mov
jg
xchg
or
inc
mov
inc
xor
xor
repz
aas
out
test
mov
lret
mov
dec
or
aam
imul
pop
xchg
cli
lea
sbb
ret
cmp
xor
aaa
sub
mov
jo
outsl
js
pop
nop
jno
out
mov
pop
fcom
aas
pop
aas
or
test
dec
and
and
xor
leave
mov
sbb
xor
and
pop
mov
push
inc
mov
fwait
inc
jmp
mov
or
and
inc
test
mov
mov
or
mov
cmp
inc
sbb
jbe
sti
inc
into
sub
inc
mov
enter
xchg
xchg
jns
cmpsb
and
and
jno
jae
sub
ret
scas
pushf
aaa
les
int
fimull
fidivrl
mov
jmp
jno
hlt
inc
hlt
dec
loopne
push
ret
mov
adc
lods
push
addr16
stos
sbb
inc
push
cwtl
xor
enter
jbe
addr16
outsb
xchg
loopne
inc
inc
int3
mov
adcb
aaa
jo
inc
or
leave
xchg
scas
inc
les
push
shrb
and
insb
cmp
popa
in
pop
aam
pushf
popl
dec
cmp
jne
aam
or
inc
mov
push
mov
mov
fwait
scas
jns
incb
mov
cmp
push
mov
push
arpl
leave
push
xor
mov
ret
add
xlat
std
in
js
lds
adcl
test
jo
cmc
add
pop
mov
adc
call
add
mov
dec
sarb
cmp
add
mov
scas
movsb
stc
jmp
movzbl
lea
jmp
and
fwait
arpl
rcr
fs
loop
mov
nop
int3
cwtl
push
mov
pop
pop
mov
sti
mov
ds
test
repz
je
cltd
push
mov
ret
fistps
push
xchg
das
popl
dec
hlt
mov
sahf
adc
ljmp
cltd
xchg
pop
adc
adc
lods
xor
data16
adc
rcrb
sbbb
shl
inc
push
xchg
test
push
jmp
cli
cld
cmpsl
rcll
push
repz
mov
inc
dec
cs
mov
in
dec
cmpsb
out
fisubrl
dec
mov
or
sti
call
mov
jge
pop
adc
stos
pop
mov
and
push
xlat
mov
sarb
mov
fldcw
pop
adcb
cmpsb
xchg
dec
push
pop
lock
loop
cmp
orl
imul
sub
icebp
jb,pt
mov
and
idivb
mov
sbb
aaa
pushf
bound
push
or
les
pusha
xchg
sbb
mov
pushl
cmc
jge
pop
mov
xlat
out
mov
cltd
scas
add
dec
je
cmpsb
lea
mov
push
rorb
push
insb
dec
inc
and
iret
cmp
dec
loopne
inc
pop
jne
mov
pop
sub
pop
test
xchg
push
jmp
fwait
fwait
xchg
loope
fistl
mov
stos
xor
dec
add
xchg
sub
in
insb
out
and
pop
xor
pop
mov
lret
push
das
inc
inc
imul
adc
mov
test
jbe
mov
cmp
orl
and
aad
dec
fwait
xor
pop
mov
inc
pop
adc
aaa
xor
push
jnp
scas
pop
orb
or
adc
xorb
shll
sbb
mov
popa
adc
js
int
mov
push
mov
jmp
xor
cltd
mov
dec
dec
loopne
hlt
sub
paddsw
jne
cwtl
les
fst
scas
cmp
xchg
out
pop
loop
dec
aad
in
daa
jecxz
repnz
or
jo
and
sub
mov
mov
pop
add
leave
or
xchg
std
pushf
xor
inc
xor
jae
adcl
les
test
mov
loope
lret
jmp
xlat
repz
cwtl
dec
pop
mov
jno
and
mov
push
mov
movsb
and
fwait
cmp
dec
repnz
addl
test
mov
aas
repz
cmc
repnz
sahf
cmp
mov
fisubl
rorb
mov
call
dec
add
jg
mov
mov
bound
jge
push
ja
cmp
sahf
dec
sahf
mov
push
fistpll
mov
mov
aaa
dec
in
icebp
rcl
and
push
aaa
stos
lods
inc
mov
clc
mov
push
mov
mov
scas
cld
cltd
add
cmp
clc
leave
dec
mov
adc
arpl
push
push
cmp
push
sub
lods
fmulp
jno
jg
and
movsb
sbb
fidivs
cmp
pop
cmp
lods
scas
jbe
and
push
gs
icebp
scas
sub
testb
adc
aas
add
lods
jnp
inc
cmp
sbb
or
or
int3
push
sub
and
and
inc
int3
js
mov
sub
dec
xchg
and
xchg
dec
sbb
stos
xchg
inc
lahf
idivl
adc
pop
add
hlt
test
cli
lfs
lahf
insl
fwait
xor
decb
incb
and
lods
add
pushf
mov
insl
or
inc
fimuls
in
mov
enter
ljmp
scas
hlt
andl
push
les
scas
ds
jge
les
sub
test
mov
mov
int
data16
test
pop
dec
sub
data16
pop
loop
xchg
mov
cmp
int3
mov
mov
and
insb
outsl
xchg
pop
push
and
filds
jmp
sub
in
stc
faddp
ds
aam
fbstp
mov
or
xor
jmp
mov
xchg
push
mov
cmp
outsl
push
xchg
push
jp
xor
jae
add
je
subb
adc
or
dec
sub
inc
sub
pop
ret
inc
or
jb
xchg
lock
or
shr
and
ret
aaa
in
xchg
shlb
add
jmp
mov
shlb
fwait
addr16
aad
adc
lahf
bound
loopne
pop
mov
jg
jecxz
and
call
int3
not
cmp
adc
add
pop
cmp
scas
mov
es
jo
pop
nop
add
flds
fwait
mov
adc
mov
pushf
cmpsb
je
test
aaa
dec
cmpb
add
aas
rolb
ret
mov
dec
add
xor
sbb
in
add
enter
mov
or
outsb
adcb
mov
stos
scas
cwtl
inc
inc
mov
xor
xor
aaa
fwait
rcrb
pop
shlb
shrb
xchg
enter
les
subl
imulb
push
into
imul
neg
lcall
lods
jg
inc
jns
rol
je
or
sbb
dec
cmc
cmpsl
mov
icebp
pop
es
jp
rclb
fldenv
js
lods
fisttpll
push
adc
jo
add
fidivl
in
jno
pop
cli
push
inc
push
in
shrl
sbb
ficompl
in
jp
enter
and
cltd
jge
stc
inc
dec
or
push
cmp
ljmp
cmc
test
sti
adc
jo
bound
andb
into
mov
or
pop
dec
sbb
sbb
repnz
xor
jl
je
daa
loopne
jbe
fs
fisubrs
cmc
pop
sub
movsl
xchg
and
ficoms
dec
sbb
loope
in
push
fisttps
pop
jp
movsl
dec
xor
sbb
popf
movsl
lret
insl
pop
pop
adcb
dec
test
stos
outsb
int3
push
add
push
pop
mov
loop
lret
iret
add
fxam
cmpsl
pop
adc
cmp
cmp
sub
andb
mov
adc
pop
stc
and
jno
sub
inc
dec
jecxz
pushf
pop
sahf
add
mov
mov
push
cmp
int3
sub
sbb
lret
mov
leave
sbb
push
dec
sti
cmpsl
sub
cs
pop
mov
mov
push
cs
loope
cmp
xor
es
adc
pusha
sub
push
in
mov
push
pop
out
lods
sbb
in
pop
cmc
in
adc
shl
mov
cmpsb
adc
or
sbb
xorl
inc
push
pop
movsl
push
in
mov
lcall
adc
mov
cmpsb
inc
pop
push
and
jge
in
sahf
cli
pop
push
adc
push
push
or
mov
outsl
je
adc
movsl
xorl
je
test
clc
lods
lds
pop
ret
push
inc
shlb
adc
inc
fs
in
ror
cmp
test
jbe
sbb
cmp
adcb
out
adc
sbb
and
out
stos
lea
dec
or
mov
into
aas
sub
idivb
insl
leave
iret
negl
fs
rol
stos
mov
inc
or
or
in
sbb
add
lahf
xor
dec
lret
shlb
push
dec
enter
inc
mov
cmpsb
sbb
jmp
js
and
jle
out
adc
fdivrs
pop
dec
inc
cmp
stc
fists
cmpsl
xor
pop
in
lds
inc
mov
pop
mov
arpl
js
cmp
subw
inc
fnstenv
cmpsb
aas
rcrb
shl
jmp
iret
cmp
imul
and
dec
mov
sbb
jno
cltd
mov
jbe
jae
xchg
sub
pop
adc
sbb
arpl
xchg
cmp
lcall
pop
push
orb
cld
push
mov
xchg
cwtl
add
lock
rolb
stc
and
mov
fnsave
jnp
and
lret
cmp
push
or
or
shlb
dec
mov
sbb
inc
mov
push
ss
outsb
rorb
add
add
or
cmp
sarb
enter
sub
jb
fimull
and
dec
xchg
mov
dec
cwtl
mov
jmp
dec
dec
pop
mov
mov
aaa
scas
cmc
sbbb
mov
xchg
cmpsb
xor
jge
and
xchg
adc
and
mov
repnz
shrl
int
mov
cmp
in
cmp
jb
dec
xchg
out
cmc
ss
mov
sbb
or
or
outsb
and
push
pop
cld
scas
mov
cmc
outsl
mov
lock
mov
jmp
xchg
jp
cmp
fs
mov
push
fimull
lret
jg
mov
xchg
mov
push
outsb
xchg
repnz
adc
sti
mov
or
mov
stos
ficomps
push
into
adc
add
into
outsl
stc
mov
xchg
sahf
hlt
sub
lahf
jle
fnstsw
adc
pop
push
mov
gs
cmp
scas
es
sub
pop
sahf
mov
xchg
out
test
dec
cmp
mov
jecxz
fs
loopne
dec
xor
lods
popa
cltd
or
dec
lcall
cmp
dec
fsubrp
push
decl
movsb
incl
or
fbstp
fwait
mov
jge
cmp
sbb
mov
cmc
insb
mov
fistps
dec
in
adc
jo
lahf
sub
pop
push
dec
sbb
jbe
icebp
iret
roll
ret
push
mov
fsubr
int3
popf
push
push
lahf
jmp
popf
dec
and
pop
or
add
push
clc
rcrb
and
jbe
mov
dec
fisttps
sub
pusha
mov
ficoms
fsubl
and
mov
xlat
add
or
and
add
cli
sub
jo
lods
loop
adc
sub
and
cmp
mov
subb
lods
cmp
xor
jo
jecxz
filds
scas
ret
lds
mov
imul
test
lcall
add
div
adc
aas
mov
inc
dec
ficompl
xchg
push
jecxz
gs
out
div
mov
cmp
sub
or
nop
inc
push
lea
std
mov
dec
adc
pusha
enter
xor
fcmovnb
jmp
push
push
fnsave
mov
mov
test
rcrb
scas
pop
nop
insl
dec
int
jge
lds
cmp
push
mov
lcall
int3
repnz
popf
leave
ret
in
push
jge
lock
mov
in
lret
icebp
sub
imul
jae
arpl
fcmovbe
call
pop
gs
popa
ds
icebp
mov
mov
iret
or
sub
hlt
movsb
iret
push
adc
mov
ja
mov
pop
in
movsb
movsl
ljmp
lock
arpl
rcr
jae
enter
std
popf
in
or
jae
outsl
ffreep
inc
dec
push
add
cmpsb
jae
cmp
inc
mov
mov
scas
ja
add
mov
cmp
sbb
push
fldt
adc
inc
jae
jmp
fimuls
dec
lret
lret
xor
add
scas
in
pop
stos
pop
jle
mov
in
cmp
jle,pn
sub
mov
xchg
mov
mov
jbe
push
sub
mov
fstcw
mov
inc
xor
cltd
pop
jle
clc
addr16
popl
inc
cwtl
fnstsw
lods
mov
xchg
push
inc
jecxz
pop
lahf
push
mov
xor
sbb
cltd
xor
scas
push
sbb
insb
out
into
sub
mov
and
adc
mov
aaa
pop
and
mov
cmpsb
sbb
jmp
mov
push
int
clc
push
inc
call
jb
adcl
fcmovnu
sub
out
jle
cmp
jge
lea
pop
fdivl
fistpll
mov
lds
pusha
mov
enter
push
mov
jl
push
xor
sub
lods
xor
clc
push
mov
xor
out
cli
test
adc
je
mov
mov
es
pop
jo
aas
mov
pop
popf
adc
add
xchg
pop
xor
and
scas
bswap
imul
cmp
or
fisubrs
sbb
jo
mov
and
sbb
je
insb
movsb
stc
punpckhwd
inc
dec
loopne
sub
dec
cmc
dec
mov
dec
repnz
int
clc
repnz
mov
movsl
dec
out
addr16
lods
pop
and
and
mov
cmp
test
inc
fisttps
dec
sbb
sbb
ss
dec
shl
in
push
ljmp
mov
mov
mov
das
and
out
or
dec
sti
insl
out
pop
shrl
testl
push
dec
cmpsl
daa
or
ret
aaa
jb
pop
lret
jne
mov
icebp
pop
mov
mov
incb
les
adc
scas
pop
mov
add
sbb
clc
jl
sub
es
pushf
add
mov
adc
mov
filds
outsb
pop
pop
mov
mov
mov
and
adc
add
xor
inc
or
les
neg
jbe
push
movsb
and
pop
mov
push
xchg
adc
push
fadds
cmp
call
sub
aam
jb
rcl
xor
in
dec
test
test
xor
mov
push
and
mov
stc
pusha
push
lcall
push
test
ljmp
outsl
xchg
jo
cwtl
push
jge
fmul
dec
sub
icebp
xchg
addl
lret
ficomps
shll
clc
into
test
outsl
addr16
call
mov
scas
push
add
mov
jne
jnp
mov
and
dec
bound
inc
mov
sub
jecxz
push
xor
pop
cltd
xchg
inc
mov
fbld
sub
in
clc
mov
adc
cmpsb
sbb
adc
jns
cmp
sarl
push
lods
loop
dec
divl
cli
push
out
outsl
inc
cltd
and
repz
aas
out
andw
outsl
pop
sbb
push
pop
aam
into
imul
movsl
sti
jmp
das
ljmp
dec
pop
test
jnp
lods
dec
in
les
fldl
jmp
lret
jnp
stc
fldenv
mov
js
push
aaa
inc
aad
jns
pop
mov
cltd
ds
cmp
mov
and
adcb
gs
bound
xchg
enter
dec
int
fwait
inc
daa
jle
cmpsb
and
mov
sbb
adc
stos
aas
aam
pop
push
lods
add
jp
dec
test
sbb
lods
rclb
std
mov
insb
fs
outsb
push
sub
scas
add
movl
inc
in
add
xor
mov
or
jg
into
xchg
jne
mov
xchg
in
fcoml
xchg
enter
pop
xchg
add
cltd
jno
xchg
dec
out
stc
adc
xchg
les
lahf
cmpl
inc
xor
sbb
dec
xchg
sti
sub
dec
jle
popa
xorb
xor
jne
fsubrs
mov
mov
sarb
jl
sbb
or
int
xchg
stc
mov
outsl
sbb
mov
sub
dec
negl
sti
sbb
add
dec
jbe
mov
push
xchg
test
dec
and
in
push
ret
xchg
les
fmulp
mov
test
dec
and
mov
pop
pop
pop
mov
bound
cwtl
test
sbb
faddl
push
sbb
mov
xchg
stos
sti
jne
mov
mov
mov
mov
jle
adc
mov
dec
fmull
scas
adc
jmp
jae
dec
lret
jns
nop
push
popa
mov
jbe
fstl
add
mov
pop
xchg
pusha
in
mov
loopne
rcrl
popa
shrl
hlt
stos
mov
test
and
jae
xor
sti
jecxz
in
inc
adc
mov
mov
stos
pop
add
mov
data16
adc
out
mov
call
cmc
inc
push
mov
outsb
xor
cmp
insl
pop
pop
xor
push
add
inc
sub
mov
mov
shrb
ljmp
mov
fildll
add
xchg
xlat
lret
jmp
push
js
push
test
imul
adc
shrb
stos
subb
fisttpl
cwtl
add
mov
lcall
xchg
cs
cs
dec
ja
mov
sbb
out
pushf
mov
inc
or
lods
inc
cmp
lock
lret
xchg
test
int
or
dec
loope
mov
mov
and
mov
lcall
in
int
ret
push
mov
ret
rclb
insb
stos
aaa
adc
inc
bound
push
sub
push
fwait
sbb
add
stos
dec
nop
outsl
cmp
cmp
bt
in
push
xchg
mov
inc
lock
lods
adc
sbb
mov
push
and
mov
ds
insb
je
pusha
hlt
fldcw
mov
je
mov
lret
stos
cld
push
mov
jb
xor
xor
jno
jb
jno
sbb
adc
sarb
jno
inc
ljmp
adc
adc
mov
data16
mov
aam
mov
mov
pmaxub
xchg
inc
addr16
mov
addr16
xor
mov
cmpsl
out
mov
xchg
inc
add
sub
xlat
jmp
mov
fisubs
into
pop
jae
push
xlat
jg
cmp
mov
dec
fildl
addl
adc
ret
into
pusha
loope
ja
les
inc
cltd
xlat
pushl
cmp
paddsb
sub
scas
jecxz
dec
pop
int3
xor
nop
push
mov
addr16
cld
inc
outsb
push
outsl
lock
in
xor
adc
dec
xor
div
nop
xor
sub
or
test
in
cs
sbb
jmp
fnstsw
jp
popl
and
lahf
jb
cltd
mov
stc
pop
pop
leave
or
push
push
test
fs
add
mov
cs
mov
mov
xchg
lret
lret
outsb
jmp
sahf
mov
pop
shrb
test
mov
dec
out
je
mov
mov
xchg
lahf
imull
lds
sbb
xchg
push
pop
neg
inc
inc
mov
or
nop
push
add
mov
loopne
jbe
xlat
dec
cmp
fnstenv
popa
push
test
in
ficomps
lahf
mov
das
mov
or
push
or
ficompl
in
in
mov
inc
cmpsb
adc
jae
repz
inc
sahf
xchg
sbb
enter
cmp
scas
cli
lds
stc
arpl
adc
sub
sub
insb
jo
jecxz
dec
push
rclb
mov
pop
xchg
mov
or
xchg
jge
mov
f2xm1
xlat
mov
movl
xlat
or
lods
popf
and
repnz
push
inc
rol
sub
or
jmp
fildll
loope
pop
jo
clc
cwtl
subb
scas
jmp
insl
fsubrl
mov
cmpsb
ja
scas
test
sarl
cmpsb
shrl
popf
xlat
int3
test
or
xchg
and
mov
mov
xor
imulb
jb
xchg
jnp
pop
add
insl
sahf
out
movsb
and
in
rcl
add
mov
sti
cmc
out
dec
in
xor
mov
or
enter
mov
fdivs
mov
dec
insl
push
and
rolb
sub
cmp
inc
push
rcrl
mov
aaa
mov
in
ret
out
leave
xchg
out
inc
gs
stos
jns
pop
mov
or
pop
adc
push
dec
test
je
pop
in
fiaddl
int
es
sub
popf
sbb
or
mov
jb
mov
jle
sbb
adc
and
inc
add
sub
fidivs
dec
mul
sbb
push
dec
je
add
cwtl
push
arpl
push
stc
in
cmp
xchg
xor
mov
adc
push
pop
jns
fcomi
scas
mov
mov
inc
or
mov
mov
or
cmp
dec
cmp
scas
sti
lods
push
pushf
push
jb
push
add
or
popa
fdivrs
mov
cmp
imull
aad
mov
pop
jne
cmp
xchg
or
add
mov
mov
adc
push
out
jl
add
mov
and
call
xor
mov
mov
cmp
inc
jb
stos
mov
pop
fldl
cmp
call
sti
repnz
add
aam
xchg
shlb
mov
into
inc
push
lret
jp
call
mov
adc
pop
sbb
mov
movsb
jmp
sti
mov
push
sub
inc
or
xchg
test
sbb
movsl
xchg
sbb
lret
jp
adc
sbb
fnstenv
add
pop
out
test
push
test
int
pop
mov
fisubrl
push
nop
sbb
mov
mov
cmc
shll
sub
push
pop
movsl
pop
sbb
add
inc
add
cmpsl
sub
icebp
cmp
daa
movsl
jns
lock
mov
cmp
xor
mov
sbb
mov
dec
lret
les
inc
xchg
lahf
dec
aaa
loop
icebp
ss
pushf
pusha
fpatan
add
in
and
mov
jecxz
leave
fistpl
push
xchg
sub
sarb
adc
jmp
aam
ja
ljmp
loope
les
and
es
cs
add
lds
jnp
sub
cmp
loope
cmp
mov
ror
hlt
mov
sarl
in
cmpsl
in
xchg
jae
sub
mov
cmp
jb
and
jo
dec
jnp
pusha
push
loop
xor
jle
popf
mov
fld
scas
scas
outsl
fnstenv
rcr
or
arpl
aaa
inc
jne
repz
pop
test
stos
cmp
xor
push
pop
cmp
stos
ret
movsl
pop
add
mov
stos
repz
pop
xchg
lret
pop
test
push
sub
or
and
daa
out
addr16
lods
mov
fcompl
sahf
fs
das
mov
iret
sub
mov
cmp
les
sbb
jo
aaa
xchg
leave
fsubl
stos
ficoms
mov
jg
sub
jg
daa
sti
negb
mov
dec
xchg
ds
xchg
push
inc
xor
add
pop
fidivs
sub
push
push
stc
cli
lods
lcall
mov
sub
pushf
daa
mov
inc
sbb
jle
aas
imul
test
loopne
xchg
int
lahf
push
pop
lcall
mov
xchg
ss
pop
add
imul
or
jo
clc
lcall
xor
cmpsl
js
mov
sbb
push
jmp
mov
test
cmp
cs
clc
cs
in
pop
ja
clc
pop
adc
and
stc
imul
sub
aad
jno
cwtl
sbb
je,pn
and
mov
inc
aam
lea
adc
repnz
jbe
dec
jg
fnsave
jns
mov
cmp
add
insb
test
sub
outsl
movsb
pop
fdivl
ret
mov
jl
jne
mov
outsb
in
rorl
adc
mov
mov
push
ljmp
or
pop
pop
dec
or
fistpl
call
arpl
dec
out
mov
xor
xchg
add
add
mov
mov
and
out
data16
shll
push
fsubrs
xchg
adc
jb
sub
or
lock
xlat
lods
fistpll
push
cmp
repnz
cs
jo
mov
sbb
scas
data16
cmp
sub
sbb
rcrb
les
nop
jg
enter
xchg
loopne
jp
inc
push
mov
xchg
in
or
jbe
xchg
pop
mov
xchg
lcall
ret
les
shrl
or
aas
mov
mov
fwait
lret
sub
xchg
mov
xor
jb
xor
xchg
inc
jecxz
push
out
pop
push
jae
loop
push
xor
movsl
inc
mov
or
cmp
jecxz
test
fwait
jmp
add
arpl
lea
sbb
dec
and
jp
test
sub
pop
push
stc
fisubs
add
or
mov
out
add
out
dec
mov
imul
add
or
pushf
add
sub
mov
add
hlt
je
sub
add
push
adc
arpl
addr16
dec
and
or
cmp
adc
cmpsb
loopne
test
int
xchg
push
mov
std
sti
xchg
ret
lods
addr16
or
out
add
cmpsl
jne
mov
lahf
imul
call
inc
in
jbe
add
addr16
mov
xchg
int
mov
jp
lea
sti
js
add
sbb
pop
mov
push
push
lea
test
jp
imul
ds
bsr
adc
fadds
sti
arpl
outsb
hlt
movsb
test
test
mov
sbb
or
jg
mov
cwtl
pop
out
and
push
dec
and
and
xchg
std
ja
cs
outsb
dec
int
addl
inc
dec
jle
sbb
cmpsl
cmc
xchg
imul
or
xlat
xchg
adc
jno
mov
cmp
sarl
mov
lock
rcrb
xor
mov
shll
jne
dec
divl
jo
push
aad
push
xlat
repz
andl
in
jo
psignd
out
into
ljmp
or
inc
push
add
loopne
fsubl
std
inc
sbb
stc
stc
jb
hlt
call
inc
lock
push
icebp
cltd
push
dec
lds
inc
push
xor
pop
shl
loop
js
and
sub
fldl
pop
ficomps
addr16
and
xor
sub
aad
xor
sbb
rclb
fs
mov
pushf
test
sbb
orb
xor
test
fwait
cs
roll
nop
xchg
aaa
cmp
cmp
in
mov
mov
insl
mov
fs
and
aaa
popa
pop
aaa
cs
sbb
das
fisttpll
jns
jmp
add
jge
stc
mov
mov
xchg
fcomps
das
pop
jae
pop
fs
and
push
orb
adc
mov
mov
int3
mov
mov
movb
adc
hlt
jp
imul
clc
push
std
movsl
sub
adc
cmp
jae
jb
lret
mov
adc
stos
push
or
clc
mov
mov
adc
fadds
lret
enter
das
fwait
out
jne
mov
ds
dec
aam
shlb
fcmovu
mov
inc
mov
fsubs
cmpsl
mov
cmc
mov
mov
xchg
mov
adc
neg
or
sbb
jg
sub
inc
pop
sbb
push
outsb
mov
jp
aad
sub
xchg
mov
mov
add
loop
mov
pop
popf
roll
shll
mov
pop
sbb
mov
xlat
cwtl
icebp
cli
in
push
sbb
cmp
subl
in
fs
popf
dec
scas
dec
enter
sbb
lods
adc
pushf
out
xchg
push
pop
inc
les
and
mov
insl
fstpl
aam
sub
mov
adc
jb
aas
xor
inc
mov
sbb
stos
pop
sub
and
xchg
cmp
inc
out
dec
xchg
in
insl
jp
mov
sarl
out
lcall
dec
inc
mov
jnp
aam
gs
jge
imul
xor
mov
inc
enter
in
orl
imul
shl
in
mov
insl
mov
jle
ja
les
pop
adc
out
int
add
fistpl
push
out
int
data16
pushf
sub
cli
lods
pop
jb
push
in
hlt
xchg
or
xrelease
or
sarl
jno
movsb
xchg
jl
cmpl
xor
or
push
je
or
outsb
nop
cld
outsb
lahf
or
test
push
xor
inc
sub
add
sti
xor
jno
or
jbe
pushf
sub
clc
mov
in
adc
scas
roll
xor
sbb
lods
xchg
or
pop
mov
loopne
pushf
sbb
inc
sbb
jo
inc
dec
incl
pop
sbb
les
push
ja
clc
stos
pop
loope
jle
push
in
insb
and
hlt
lds
rolb
xchg
lods
into
into
iret
push
inc
adc
cmp
leave
loop
lock
dec
loopne
pop
aas
fists
mull
xorb
scas
pop
add
ret
fdivs
xor
sarl
movlps
sub
mov
sub
cmc
into
pop
sub
ljmp
sbb
mov
notb
dec
jbe
sub
adcl
loopne
jb
jno
adc
fadds
xchg
sbb
call
lret
lret
inc
rcr
cli
ret
dec
testb
movsl
mov
and
mov
push
adc
rcrl
cmp
ss
aaa
dec
loopne
lcall
mov
mov
popa
call
test
mov
fwait
adc
mov
xchg
sbb
jp
inc
loope
sbb
in
lea
cmp
rcrb
push
orb
add
xchg
into
les
arpl
fucomp
xor
dec
add
fwait
mov
mov
loop
ds
sub
out
sbb
filds
cmp
mov
push
pop
mov
fidivl
lods
loopne
jbe
test
std
lahf
outsb
rcrb
fidivl
sbb
cmp
or
mov
xor
out
dec
bound
mov
lea
sub
xor
adcb
je
test
aas
push
sub
out
cmp
sub
dec
push
lock
lock
inc
dec
mov
xor
leave
int
out
shl
mov
pop
sbb
adc
ds
and
and
nop
cmpsb
and
push
lods
jne
cmpsl
clc
sbb
aam
call
popa
pop
xor
jno
add
ret
cld
dec
adc
lock
inc
sub
fdivr
dec
inc
mov
std
xlat
xor
mov
and
pop
adc
aaa
jno
xorb
hlt
rorb
inc
insl
and
dec
sub
add
addr16
cmpsb
jle
popf
pop
cmp
test
test
incl
inc
and
dec
sub
cmpsl
loop
sub
aaa
orb
or
out
mov
mov
movsb
das
xlat
lret
pop
mov
push
lea
mov
mov
lea
ss
jle
pop
jp
fcoml
add
imul
push
ljmp
aad
mov
xor
mov
lods
push
fdivl
adc
lret
fdiv
jle
add
xchg
cmp
mov
ljmp
in
sub
popf
jp
fwait
sub
out
aas
cmp
mov
inc
dec
jae
nop
sbbl
shrb
inc
add
cmpsb
jae
movsl
das
mov
xor
mov
and
mov
fs
gs
mov
inc
fsub
fisubs
test
jbe
xor
jbe
fcompl
rcll
xchg
pop
or
test
mov
lret
test
idivb
inc
lret
cmp
inc
inc
std
jp
push
repz
mov
shll
mov
cmp
inc
jno
push
sub
call
and
push
add
int
cmp
les
cli
pop
aaa
xor
das
or
roll
xor
or
push
int3
jmp
adc
pop
sbb
mov
je
xchg
push
mov
dec
mov
out
daa
outsl
imul
cmp
test
jno
pop
jbe
push
iret
or
stos
push
lcall
xor
cmpsl
sbb
inc
dec
mov
push
mov
repnz
mov
out
movsb
and
cmpsl
pushf
scas
inc
lea
lahf
adc
or
xchg
and
or
mov
scas
mov
cmp
sbb
scas
repz
adc
aaa
call
mov
rcrl
std
mov
movsl
int3
xlat
xchg
cmp
lods
adc
or
adc
ffree
push
sti
sbb
out
pop
dec
mov
mov
xor
mov
popf
sub
fldenv
mov
aam
arpl
adc
lret
xchg
adc
fcmovb
sbb
inc
jno
mov
xchg
xor
loope
int3
pop
imul
pop
hlt
cwtl
xchg
sbb
mov
push
pop
adc
jge
pushf
outsl
sbb
cltd
mov
xchg
mov
iret
sub
cs
or
adcb
cmc
pushf
dec
lods
stos
jo
pop
sahf
movsb
xchg
fnstenv
dec
adc
mov
sbb
jb
mov
sbb
ret
aas
mov
dec
mov
ss
inc
ret
add
mov
out
es
lret
cli
cmp
jmp
out
jne
mov
dec
cmpsb
mov
sahf
sbb
xchg
add
or
xor
dec
loop
xchg
loop
dec
shlb
pop
cmc
fdivp
dec
in
aas
addr16
fwait
mov
lds
ret
add
scas
pop
out
cmp
bound
popa
leave
cmc
push
push
imul
jmp
cmp
jl
scas
push
inc
js
outsb
mov
pop
pop
mov
data16
push
and
test
pop
adc
and
xchg
adc
popf
leave
imul
mov
dec
out
adc
xchg
adc
fwait
out
jmp
outsl
shl
xor
jp
test
or
push
lret
arpl
std
lds
dec
xchg
add
push
adc
mov
pop
add
xor
aas
inc
mov
push
pop
cmpsl
loopne
add
dec
popf
add
pop
cmc
jbe
cltd
test
lahf
lds
repz
jnp
shll
ja
dec
cmp
je
jo
add
adc
jle
inc
push
xor
adc
fwait
andb
js
dec
cmp
mov
sub
imul
insb
inc
daa
mov
lods
mov
xchg
pusha
js
fwait
pop
jg
mov
xor
add
inc
ds
notb
sub
stos
call
jno
daa
out
jle
lods
call
mov
shll
lods
add
leave
dec
ja
int
sar
into
ljmp
push
mov
loopne
mov
pop
movsl
shlb
jmp
das
js
adc
pop
test
inc
pop
loope
or
pop
das
enter
call
or
test
pop
pshufw
test
movd
jg
aam
std
push
cmp
jae
imul
add
lods
push
rorb
out
dec
lcall
add
out
and
imulb
mov
pop
scas
or
lcall
aaa
push
cmp
icebp
mov
or
ficoms
sub
cs
add
movsl
hlt
sub
repz
push
mov
scas
int3
sub
insb
andl
ret
mov
xchg
hlt
icebp
sbb
dec
pop
test
mov
imul
xor
add
in
pop
addb
adc
sub
xor
cli
int3
sub
rcll
mov
outsb
out
fcmovnbe
inc
movb
xor
and
mov
inc
xor
pop
xchg
jno
cmc
aas
mov
lret
imul
jl
cli
inc
push
push
adc
jecxz
daa
or
push
xor
jnp
inc
psraw
mov
sub
ljmp
repnz
into
aas
mov
jb
mov
mov
jmp
mov
or
xor
iret
cwtl
rclb
cmp
popf
int3
mov
fs
dec
mov
shrl
dec
ret
xchg
sub
roll
push
loope
test
add
and
adc
sti
push
sub
lret
push
test
in
sbb
push
push
lret
add
iret
jno
push
xor
jns
cmpsb
idivb
sub
sub
test
addr16
int
stc
outsb
loop
mov
jge
test
pop
fldt
outsl
push
inc
jp
jns
mov
pop
pop
int
mov
dec
fmuls
pop
shll
pop
mov
mov
cmp
int
adc
out
xor
add
and
dec
lret
imul
test
fnstenv
push
ret
in
shrb
out
cmp
rcrb
xchg
push
stos
movsl
icebp
hlt
pop
xor
jecxz
push
fisttps
adc
jo
sahf
pop
xor
push
mov
jne
jl
pop
aam
clc
xor
inc
adc
negl
sbb
mov
imul
pop
or
insl
jns
inc
dec
cmpsb
xor
mov
jo
jne
int
push
mov
loopne
cli
xchg
xchg
dec
repz
pusha
pop
cmpsb
pop
ds
das
mov
mov
push
push
sub
push
lahf
cltd
push
mov
push
jo
test
pop
rol
out
mov
dec
add
inc
int
pop
inc
popa
mov
mov
jbe
mov
mov
mov
repnz
jbe
aaa
xchg
imul
mov
lods
sahf
aad
sub
xchg
mov
dec
cmp
xchg
rcl
cwtl
inc
add
popf
imul
outsb
xchg
pop
xchg
out
sbb
ret
cwtl
mov
pop
shl
js
clc
int
pop
shlb
pushaw
into
in
pop
stos
lock
fwait
gs
imul
jo
shll
pop
mov
rcrl
popa
stos
push
dec
test
ljmp
inc
push
pop
addb
xor
mov
jns
push
shlb
cs
sbb
xor
popl
inc
add
sub
movsl
push
scas
push
filds
xchg
sbb
loopne
dec
insb
xor
je
sbb
pop
fwait
out
jns
imul
push
pop
pop
lds
push
xor
xchg
rcrl
pop
mov
mov
sbb
sub
pop
lods
jbe
loopne
test
xchg
movsl
pop
js
sub
pusha
push
jae
rorb
lret
fbstp
test
aas
and
and
push
sti
lret
ret
sub
in
sbb
addl
addb
insl
mov
outsl
inc
push
mov
testl
divb
int3
pop
add
inc
fucomip
test
mov
lahf
out
addr16
sub
popf
or
cltd
mov
pop
imul
sub
pop
and
int3
push
or
es
xor
aam
fwait
sub
adc
lret
push
sbb
pop
fistpll
aaa
jge
fbld
or
adc
inc
or
dec
push
or
mov
mov
pop
out
je
inc
add
adc
dec
test
push
iret
fimull
push
mov
lea
inc
fstpl
add
das
adc
outsl
rorl
cltd
sbb
les
cmp
push
mov
dec
out
jp
adcl
push
stos
or
mov
lods
stos
adc
orl
outsl
cmp
sub
mov
pusha
dec
cmp
jo
pop
mov
xor
adc
sub
mov
fisubrl
and
dec
mov
mov
mov
pop
xchg
clc
cmp
aad
xor
sbb
clc
sbb
push
dec
movsl
lea
cmpsb
outsb
into
lods
and
xor
lock
xchg
int
and
or
jmp
adc
cmpsb
je
incb
fmuls
mov
insl
pop
stos
jle
out
sub
adc
mov
aas
xor
and
repnz
dec
mov
inc
xlat
push
jecxz
sahf
fsub
cmp
aad
call
push
test
lahf
xchg
sti
addr16
lods
test
or
or
popf
and
shll
jmp
das
add
mov
add
scas
ret
test
lret
or
add
xorl
out
and
jmp
lock
cmp
lcall
aaa
xlat
daa
cs
insl
xchg
leave
sub
das
rorb
addr16
and
pop
mov
adc
ret
mov
shrl
jno
mov
daa
push
repnz
xchg
in
sahf
inc
inc
ret
sub
cmpsb
add
test
xchg
in
pop
or
xor
pop
insb
mov
jge
incl
sub
stos
ljmp
shlb
push
inc
jge
dec
xor
fdecstp
push
rcrb
mov
aaa
and
inc
outsl
insl
scas
sbb
sbb
out
or
lods
lahf
movsl
jnp
es
lret
cltd
mov
push
aaa
adc
pop
es
mov
adc
shrb
or
xor
push
mov
outsl
jno
push
out
adc
mov
cmpsl
push
xor
cmp
mov
mov
fildl
and
hlt
in
insl
rcll
in
mov
xlat
orps
dec
sti
data16
and
pop
mov
jge
dec
cs
sub
xor
mov
je
lock
cmp
or
push
cmp
pop
std
sarb
repz
nop
or
push
test
lods
sahf
mov
fsubl
rep
cmpsl
es
push
shlb
add
repz
mov
test
hlt
pop
outsb
adc
aas
test
cmc
lahf
push
cmp
negb
test
pop
cmp
adc
shll
int
xchg
clc
inc
xchg
push
loop
or
movb
sti
jl
cmp
pop
jl
xor
inc
or
push
sbb
paddq
pop
mov
sub
dec
xchg
out
adc
lret
test
xchg
aam
add
ja
loopne
cld
sbb
mov
pop
int3
les
push
testb
jp
dec
fisubs
adc
jge
enter
neg
orl
pop
imull
pop
ljmp
jl
cli
movsb
test
adc
lret
inc
ficompl
mov
ljmp
movsb
cmp
xchg
dec
and
test
or
xchg
lods
ss
stos
cmpb
jl
mov
adc
and
rcr
lods
push
mov
push
call
and
pop
adc
scas
int3
pop
jno
cli
adc
push
or
jbe
cmp
shrd
outsl
sar
and
aad
mov
repnz
or
mov
mov
lods
aad
jecxz
push
into
ret
adc
je
movl
mov
jae
dec
xor
xor
lods
popf
nop
in
lahf
push
jmp
cs
pop
jecxz
shl
cwtl
arpl
inc
mov
and
pop
push
add
xchg
sub
dec
dec
add
push
imul
dec
sub
inc
or
xor
decl
mov
cld
in
mov
scas
out
rcr
dec
cmpsl
rolb
pusha
outsl
cmpsb
out
push
in
pop
mov
sbb
cmpsl
jp
mov
sub
shl
push
add
push
pop
lock
dec
fcomps
push
popa
xor
mov
call
outsl
iret
mov
inc
fdivs
popa
sbb
jle
pop
push
inc
dec
js
std
pusha
xchg
mov
xor
jnp
or
repz
dec
stos
add
jbe
into
cli
jmp
sub
movsb
repnz
cs
call
jo
xchg
dec
sub
and
sub
pop
cmpsl
test
xchg
sbb
cltd
xchg
int
xor
leave
mov
dec
adc
cltd
fchs
cltd
mov
push
dec
sub
cld
fs
outsb
inc
mov
jb
orl
adc
push
fisubrs
es
lods
dec
push
sbb
xchg
xor
into
sarb
cli
outsb
dec
stos
fstpl
pop
out
das
lahf
jnp
cmp
jecxz
aad
stos
mov
mov
les
mov
and
inc
fwait
push
jae
mov
push
push
xchg
pushf
data16
add
push
and
push
jne
mov
xor
test
mov
add
push
fsubr
bound
or
movsl
sbb
xor
lock
adc
int
leave
bound
jae
mov
ljmp
pop
cmp
repnz
scas
mov
ret
dec
push
stos
xchg
jne
cmpsl
add
popl
cmpsb
icebp
lahf
xchg
jle
jo
mov
into
mov
adc
lds
pop
gs
sbb
or
or
rorb
push
aad
push
rcr
push
push
ljmp
scas
jecxz
out
mov
dec
pop
mov
aas
int
mov
ret
dec
xor
mov
shll
sbb
sti
inc
pop
sbb
gs
mov
cmpsl
mov
in
cmp
hlt
cmp
mov
dec
pushf
jne
add
test
loope
pushf
xchg
sub
loope
jp
call
sub
std
jae
pusha
xor
dec
mov
popa
pop
cld
lret
sbb
loop
fsubrl
pop
sbbl
push
lahf
fidivrs
cmc
scas
or
clc
mov
jbe
or
and
addl
inc
pop
fstpt
aam
pop
sarb
mov
sbb
arpl
icebp
xorb
scas
mov
mov
je
mov
call
mov
and
jnp
fcom
jg
popf
daa
imul
jne
les
mov
mov
hlt
mov
xchg
aas
ret
aaa
pop
add
clc
adc
sub
ljmp
jae
clc
js
rcrb
jge
push
arpl
cmp
lcall
xchg
pop
add
mov
fwait
rol
clc
jecxz
pop
xchg
lahf
leave
pop
push
fcomps
lcall
adc
out
js
jae
outsb
dec
imul
mov
jmp
mov
sbb
jns
in
outsl
pop
sub
push
je
or
xor
jnp
pop
sbb
ret
cmp
mov
int
and
cmpsb
lds
inc
std
aas
js
fdivp
jle
xor
mov
mov
push
xchg
jge
push
je
sbb
scas
mov
outsb
dec
inc
insb
dec
jge
repnz
in
jl
fs
lds
cltd
insl
dec
cltd
nop
ss
repnz
and
lcall
push
and
in
cmp
fstpl
movsl
xor
in
bound
inc
lock
dec
mov
mov
xor
scas
xchg
out
dec
xor
push
imul
test
incl
xchg
xchg
fldl
in
pop
cld
out
jle
inc
pusha
jg
mov
xlat
pop
add
repnz
shll
testl
cmp
jo
daa
mov
gs
push
cmp
fucomip
push
lret
fdivrl
fs
add
insl
es
movsb
aad
add
dec
imul
mov
leave
mov
adc
shlb
sahf
mov
pop
cltd
sub
les
ljmp
xchg
popf
or
mov
fistpll
and
jno
out
sbb
rclb
fisttps
ret
ret
and
inc
pop
inc
iret
ds
sub
mov
xchg
push
les
mov
jae
adc
cmp
mov
repz
lds
orb
mov
jnp
and
xor
lea
mov
jae
test
dec
lahf
pop
js
push
jns
xchg
icebp
pop
jo
xchg
lea
mov
jne
mov
lds
add
mov
hlt
jbe
test
inc
and
sahf
cmp
aaa
mov
cli
daa
mov
pop
lret
xchg
popa
aad
mov
jge
pop
std
insb
clc
and
hlt
inc
add
pop
and
push
sbb
rcll
jecxz
pop
lret
ret
cmpsl
rcl
adc
or
outsb
xor
test
pop
pop
jbe
imul
repz
push
mov
fisubs
cltd
lods
sub
scas
pop
rcll
into
sub
mov
jae
push
cwtl
out
out
iret
xor
loopne
xchg
pop
jae
dec
into
fiadds
push
jmp
jge
push
adc
xlat
push
jns
loopne
cmp
leave
mov
mov
sub
pop
rcrl
add
inc
repnz
add
push
add
pop
outsl
add
cmpsl
cmp
rorb
loopne
aad
sbbb
push
pop
ds
cmp
aam
or
xchg
jle
sahf
inc
in
jo
pop
mov
pop
decl
or
insb
popa
mov
push
scas
out
loopne
xchg
lock
jmp
leave
push
out
cld
mov
into
dec
test
sbb
lret
mov
scas
jp
mull
dec
ret
cwtl
xorl
adc
enter
aaa
push
push
jge
lcall
dec
jmp
mov
push
sbb
mov
test
xlat
jnp
jp
stc
xor
out
in
insl
mov
test
popf
int3
mov
fistl
sbbl
cmpsb
dec
mov
into
cli
ja
inc
sub
out
add
test
test
stos
addr16
fildll
push
push
mov
jns
or
sub
sub
adc
sbb
pusha
or
lds
cmp
inc
inc
adc
jp
orb
mov
mov
mov
pop
das
in
je
rcll
sahf
and
jg
scas
mov
mov
shrl
xchg
pop
pushf
into
jle
cmc
aaa
hlt
loop
add
mov
in
cld
pop
popf
xchg
jnp
dec
mov
dec
dec
aam
in
dec
ljmp
sub
sbb
dec
jnp
sub
mov
and
mov
sbb
mov
cmp
pop
shrl
cmp
or
mov
xchg
imul
cs
xchg
hlt
xchg
add
jo
das
repz
cmp
push
pop
es
mov
lods
rcll
fdivrl
inc
clc
jecxz
mov
inc
or
pushf
rcrb
dec
and
cmc
pop
mov
cmp
repz
sar
xlat
inc
cmp
sub
enter
pop
inc
cmp
int3
pop
ja
xchg
in
push
in
ja
xchg
and
sub
sbb
ret
fwait
call
in
imul
mov
aam
lds
ret
aam
jmp
push
xchg
jo
or
loop
push
jle
rcrb
adc
testl
inc
lret
pushf
push
inc
repz
xor
pop
shll
or
mov
sub
mov
test
fnstcw
add
mov
pop
adc
mulb
mov
push
mov
fsubs
jg
sbb
jg
fwait
jle
mov
mov
iret
xor
sbb
xor
int3
je
js
push
dec
rorl
ret
push
xchg
bound
cmp
push
std
push
sti
leave
lock
mov
mov
xor
lock
jle
sub
pushf
cwtl
xor
in
pop
push
scas
or
jge
jb
mov
xchg
pushf
jns
cmp
jl
shll
jne
jmp
or
test
xor
add
sti
jle
mov
mov
inc
mov
dec
or
mov
adc
add
fnstsw
test
leave
js
cltd
xlat
addr16
xchg
jmp
movsb
adc
add
cmc
aas
pusha
jae
scas
jns
dec
nop
dec
xchg
repz
xchg
xchg
mov
mov
sbb
cmc
arpl
dec
mov
push
enter
and
mov
adc
decb
insb
fs
xor
or
lods
cltd
pop
dec
sarl
mov
and
out
sbb
in
ja
dec
stos
enter
dec
aaa
add
jp
int3
jp
cmc
pushf
orb
inc
mov
int3
dec
cmp
push
int3
fs
fildl
fwait
inc
adcl
xchg
adc
xor
lods
int
cltd
mov
je
ret
addr16
test
sbb
call
ljmp
lea
jp
jl
xchg
xor
mov
push
jnp
push
pop
inc
jns
sahf
mov
pushf
lret
inc
push
call
stos
stc
cmp
jge
mov
cmc
jnp
sbb
fs
sub
inc
dec
mov
adc
std
jb
fisubl
jmp
jnp
fldt
adcl
adc
mov
lret
dec
aaa
pop
push
add
jne
mov
clc
or
test
out
pop
mov
je
dec
cltd
mov
pop
mov
rcll
das
imul
je
sub
cwtl
mov
pop
fisubs
pusha
shll
inc
push
add
lock
xorl
inc
or
iret
push
pop
loope
outsb
fnstenv
jnp
pop
outsb
xchg
repz
es
cmp
subb
sbb
fwait
rcrl
nop
arpl
out
mov
xchg
out
lds
add
lds
xor
pop
sti
adc
or
leave
pop
inc
sub
xchg
sahf
add
and
push
clc
xchg
mov
ja
dec
rorb
inc
rorl
aas
repnz
into
cmp
xchg
sti
inc
test
or
add
sub
push
pop
lcall
jg
nop
fwait
cwtl
test
xchg
adc
xor
and
adc
rcr
incl
mov
enter
xor
insb
lods
nop
insb
sbbb
dec
stc
int
inc
outsl
and
jns
sti
popf
sbb
int
push
cmp
leave
notb
negl
or
xor
ss
scas
shll
mov
stos
pop
leave
idivl
add
std
and
fs
enter
push
sub
mov
jbe
dec
pop
test
mov
fnstsw
or
leave
and
iret
dec
sub
xlat
fwait
aaa
out
push
nop
call
sub
xchg
scas
in
fdivl
inc
or
lods
iret
cld
mov
push
lea
iret
sub
xchg
ds
mov
xchg
leave
ficoms
das
push
or
add
pop
mov
and
or
push
scas
xor
test
pusha
out
mov
arpl
pop
aaa
pop
out
mov
push
mov
pushl
or
xlat
or
push
lods
lcall
dec
pop
mov
sub
jne
lret
in
sarl
shrl
dec
inc
cwtl
fdivrl
fdivrs
cltd
icebp
in
push
shll
or
mov
jbe
pop
in
dec
pop
in
lahf
push
add
cmc
mov
fldl2t
sbb
stc
xor
lret
jl
push
testl
imul
je
cltd
popf
sub
punpcklwd
cmpsb
int
inc
lret
adc
xadd
push
loop
cmp
mov
push
push
std
cld
sub
hlt
aas
aaa
cwtl
enter
pop
outsb
adc
lret
pop
lahf
sti
loopne
test
pusha
mov
aaa
adc
ds
call
pop
popf
int3
inc
lahf
loopne
jp
xchg
xchg
call
or
shrl
adc
and
jecxz
mov
mov
mov
pop
sbb
mov
stos
jne
test
add
push
in
sarb
cld
lock
pop
lcall
add
sbb
std
fsubr
stos
mov
rolb
adc
mov
cmpsb
cmp
push
jecxz
mov
push
inc
dec
outsb
out
ds
rcrb
out
mov
popa
sub
rcrl
loopne
into
xchg
mov
inc
add
dec
in
xchg
or
pop
and
xchg
xchg
and
pop
xchg
jns
mov
xchg
mulb
jo
mov
ds
out
jp
fisubl
push
mov
stc
adc
lds
dec
insb
gs
das
ljmp
mov
cmp
ss
ss
sbb
lret
add
mov
or
xor
pusha
ret
jne
cmpsl
mov
clc
pop
movsl
push
xchg
fsubs
pushf
bound
mov
int3
out
or
sub
cmpl
rclb
ficomps
mov
cmp
lods
jecxz
jno
vpsllw
mov
push
cmp
dec
xchg
aaa
jl
jo
lahf
jo
mov
mov
inc
push
pop
cmp
in
jp
xchg
out
cli
stc
sub
adc
or
xor
add
popa
jo
cwtl
mov
mov
movsb
je
fstpt
daa
xor
and
lcall
dec
lcall
jae
pusha
lods
push
cmp
and
sbb
adc
add
push
into
les
std
xchg
xchg
xor
jne
aad
repz
xchg
sbb
mov
mov
sbb
mov
ljmp
jb
sarb
add
loopne
jae
sub
inc
fmul
adcb
jle
loop
iret
imul
loope
stos
out
mov
stc
xor
dec
ret
imul
int
mov
push
add
push
dec
jb
lods
divl
loope
divb
test
call
xorb
dec
roll
imulb
mov
push
xchg
fstpt
into
out
lods
out
fwait
jns
or
cmp
cmpsb
aad
pop
in
insl
fs
sub
popa
xchg
dec
jp
scas
cmc
fsubrp
lods
loope
xorl
xlat
sbb
arpl
and
ret
jb
add
mov
push
jno
cmp
stos
cwtl
mov
outsb
push
clc
push
int3
outsb
inc
mov
mov
lret
adc
or
dec
cmp
jp
sub
clc
icebp
aam
out
cmpl
jnp
ret
jo
mov
daa
mov
pop
xchg
fidivrs
into
repz
nop
insw
sub
inc
aam
mov
cmp
lods
hlt
daa
shlb
pusha
lods
or
and
pop
add
lahf
aaa
inc
xchg
js
movsb
mov
repnz
mov
pop
or
incl
inc
test
stc
adc
fistps
imul
lds
push
stos
jnp
sbb
mov
jnp
xchg
imul
mov
jns
xlat
cltd
push
inc
sahf
clc
and
and
push
clc
shlb
mov
mov
addr16
xchg
xor
rcr
xchg
and
sahf
adc
scas
loop
jnp
mov
loopne
xchg
bound
repz
push
xor
in
or
cmpsl
inc
mulb
xchg
ret
push
icebp
dec
adc
or
imul
xchg
jl
repz
or
idivl
call
dec
sahf
mov
mov
fidivl
imul
pop
or
sub
sbb
imul
rcrb
enter
shlb
roll
add
jae
daa
pop
or
mov
xlat
std
add
jp
add
out
or
stc
jg
cmp
rcrb
in
mov
aaa
je
pop
ret
aaa
pop
or
insl
stos
fisubrl
mov
cld
orb
adc
push
mov
xchg
pop
xorl
lea
sub
mov
faddl
loopne
aaa
mov
lahf
mov
ds
mov
int
sub
and
orb
dec
test
or
mov
sahf
lods
loope
in
in
outsl
repz
nop
adc
sbb
pop
mov
cmp
sub
xchg
scas
dec
mov
jge
fs
sbb
daa
cmc
sbb
int
fcmovnbe
xchg
xchg
rol
inc
sbb
jo
leave
arpl
andb
nop
movsl
cmpsl
imul
jbe
dec
jne
lahf
jl
mov
xchg
cld
repz
mov
pushf
mov
into
outsl
and
pushf
mov
test
cmc
sub
mov
mov
cmp
sbbl
push
ror
jne
adc
fdivr
iret
scas
aaa
pop
ljmp
in
aam
fdiv
aas
insl
push
jle
mov
popa
inc
fnsave
in
jl
leave
cmpsl
mov
mov
and
jne
cmpsl
inc
add
jle
bound
add
push
or
pop
bound
and
ss
cwtl
ret
cwtl
out
mov
inc
xor
jae
jbe
int3
push
dec
dec
int3
mov
mov
nop
inc
aas
dec
incb
aas
sbb
adc
mov
jmp
lahf
je
or
in
mov
dec
and
mov
lods
xchg
call
stc
push
push
mov
sub
out
cmc
push
sbb
sarl
push
pop
add
ja
push
adc
roll
movsb
inc
push
mov
sub
jns
mov
sbb
aad
sahf
lock
rcrl
les
ret
enter
and
dec
xorb
iret
xchg
or
sub
cmc
push
and
fisubl
jecxz
push
cmp
mov
mov
cmp
and
int3
out
in
add
lods
outsb
movsl
push
ljmp
cmp
inc
mov
in
or
mov
dec
divl
dec
mov
or
gs
xchg
sub
dec
xchg
test
mov
lret
or
lret
movsl
adc
push
pop
add
mov
inc
aaa
jo
cmp
mov
stos
das
sbb
mov
sarb
mov
sub
iret
shrb
out
push
jo
cmp
jp
lock
in
jg
pop
fwait
mov
xchg
ja
sahf
jl
fmul
xchg
lds
sbb
jo
sbb
ds
ret
mov
push
enter
pop
mov
in
out
sarb
aad
lds
xor
dec
xchg
xchg
ds
cmp
orl
or
rcrl
inc
mov
es
ret
adc
inc
cwtl
out
sbb
push
jae
pop
movsb
jne
mov
and
hlt
imulb
ja
mov
gs
inc
jne
rcl
push
jb
push
clc
lahf
scas
pop
add
xor
dec
mov
call
call
daa
popa
shl
popa
add
inc
scas
mov
dec
das
cs
mov
out
in
xor
inc
popf
jmp
sbb
push
lahf
push
mov
mov
ret
je
and
sbb
mov
mov
loopne
mov
rorb
loope
sub
sbb
push
inc
or
mov
and
popf
int
shr
pusha
xchg
cmpsl
imul
sbb
inc
push
pushf
and
or
lods
mov
inc
mov
adc
mov
addl
loope
js
adc
jno
lods
imul
stos
shlb
addl
fisubrs
cs
das
push
or
and
ljmp
or
cli
cltd
dec
aam
pop
or
xor
add
sahf
bound
fs
imulb
mov
out
dec
fmull
or
pop
add
je
dec
jecxz
imul
shrb
xor
mov
xor
daa
cmp
in
or
cmp
pop
jb
ror
xor
xchg
inc
dec
lods
pop
cmp
push
dec
jns
ret
xor
mov
adc
dec
aas
rol
sub
aad
mov
daa
clc
in
jl
sub
mov
stos
cmp
mov
sbb
inc
insb
sbb
cltd
fidivl
cld
arpl
add
or
mov
loope
jne
xchg
out
mov
mov
out
pop
push
daa
pusha
cmp
imul
jle
fimull
push
popa
sahf
sub
or
loope
jecxz
fadds
dec
mov
dec
stos
notl
js
cs
jecxz
popa
sbb
mov
push
or
xchg
adc
iret
shl
push
jle
cmc
inc
xor
add
in
lds
push
cmp
movsl
push
lds
add
dec
iret
flds
pop
mov
xor
inc
sub
jne
add
aaa
sub
lods
inc
in
jl
cmpsl
inc
rcl
jl
dec
outsl
xchg
inc
mov
enter
jl
stos
mov
xchg
mov
xlat
inc
lret
xchg
pusha
lret
jle
les
and
mov
dec
xor
lods
and
insb
lock
pop
into
cmpsb
xchg
cltd
sbb
sub
aad
add
mov
push
call
int
mov
aam
jae
sar
mov
xchg
add
adc
push
pop
ficoms
push
ds
pop
nop
cmp
jae
sbb
sub
sub
jo
xchg
loopne
stos
and
ret
aam
xchg
inc
cmp
and
movsl
xor
cmpb
adc
insl
sti
dec
shlb
mov
adc
gs
mov
gs
mov
xchg
in
xor
loope
loop
fistpl
outsb
push
cmp
data16
loope
mov
xor
fcmovbe
push
sahf
rcrb
mov
dec
push
jb
mov
jge
or
jge
stos
loop
jbe
pop
add
add
dec
js
or
das
imul
sub
xchg
add
shr
movb
add
dec
cmp
movzwl
jmp
fbld
fcmovnu
mov
imul
jge
out
cmp
cmpb
icebp
int3
mov
dec
mov
jbe
push
push
dec
daa
xor
push
popa
xchg
mov
int
lret
cmpsl
dec
loopne
jnp
cmc
adc
push
jne
int3
inc
jmp
inc
movsb
push
push
or
in
mov
jl
mov
sbb
adc
mov
pusha
int3
test
mov
out
xchg
bound
jae
jecxz
jo
bound
fisttpl
lea
cmp
adc
in
gs
jnp
inc
jl
jmp
stc
jb
jl
iret
sub
jle
adc
loope
imul
mov
push
jo
movsl
imul
repz
negb
aam
xchg
shlb
mov
cmpsl
fldcw
xor
and
mov
mov
sbb
leave
cld
out
mov
or
stos
xchg
jbe
jne
mov
cmp
and
mov
pop
repz
jo
clc
sub
cmp
cld
rorl
sub
cld
pop
leave
inc
xchg
jb
aaa
insl
mov
xor
or
aam
cltd
jmp
shlb
pop
sbb
push
hlt
mov
inc
int3
popa
leave
enter
mov
hlt
or
lods
pop
ret
add
fcmovnb
fwait
addr16
je
popa
or
out
shlb
mov
sub
dec
rcrb
shlb
loop
fwait
xchg
cmc
and
xlat
mov
pop
push
lods
cmp
adc
cmp
add
not
dec
sbb
idivl
push
bnd
push
test
mov
jns
mov
ds
lock
inc
adc
xchg
mov
add
loope
xchg
cmpl
mov
cmp
cli
hlt
or
pushf
lods
push
bound
inc
in
add
adc
and
sub
clc
popf
push
jno
ljmp
int
sbb
push
sahf
jne
mov
sub
cwtl
dec
in
fimuls
add
movsl
sub
cmp
jl
arpl
aaa
xchg
push
movsl
outsb
jae
jo
dec
movsl
jnp
addr16
lods
mov
mov
xchg
xchg
pusha
mov
iret
outsl
cli
sbb
mov
dec
jbe
mov
cmp
jecxz
loopne
es
xchg
sti
lret
lea
xchg
xchg
sbb
ljmp
faddl
and
jae
add
sub
dec
addr16
add
test
and
insl
cli
mov
mov
push
lret
mov
lcall
and
sbbl
out
and
adc
jp
fucomi
adcl
sbb
lea
inc
pop
add
cmp
push
cmp
and
pop
rorb
mov
mov
sti
aad
scas
dec
in
pop
cmp
addr16
pop
dec
test
cmp
mov
dec
ss
gs
cmp
lret
push
sub
aam
inc
stos
xchg
fs
mov
dec
push
sub
push
dec
mov
rclb
push
xor
xchg
fdivl
cmpsl
leave
jo
add
fimull
or
cmp
pop
inc
pop
push
fldcw
out
scas
sti
push
fdivrl
fiaddl
es
mov
push
cmp
or
sbb
lahf
inc
add
and
adc
and
cwtl
faddl
push
inc
dec
or
stos
test
mov
sub
lahf
or
xchg
cmpsl
and
stos
int
rol
pop
insb
in
and
fldl
push
or
ss
scas
xchg
push
mov
leave
jmp
and
dec
jae
cwtl
loop
cmp
fldt
cltd
jmp
mov
cmp
dec
imul
sbb
shrl
jns
outsb
inc
push
hlt
sbb
nop
xlat
stos
xchg
pop
add
adc
cltd
in
adc
inc
loop
dec
cmc
fsubl
add
lahf
cli
outsl
lods
xor
in
das
add
xchg
loop
pop
lods
shl
add
sbb
jo
xlat
mov
movsb
inc
xchg
in
jmp
mov
and
cmp
pop
add
ds
jge
loope
mov
out
xor
xor
je
ja
mov
loope
stos
cmp
repnz
xlat
mov
mov
push
dec
imul
addr16
out
fldenv
imul
adc
and
call
ja
cltd
cmpsb
lret
fldz
mul
test
xor
test
inc
mov
inc
dec
and
and
cmp
lods
es
and
arpl
loopne
lock
pop
xchg
mov
mov
xchg
cmp
cmp
int3
jecxz
pop
out
cmp
stc
jp
jp,pt
stos
scas
testl
lret
or
bound
push
sahf
mov
insl
leave
cmp
dec
loopnew
add
stos
xor
and
mov
popf
dec
inc
and
aam
pop
inc
xlat
push
outsl
popf
ljmp
ds
adc
inc
nop
pop
bound
xor
leave
cmpsl
jmp
jle
and
inc
adc
mov
mov
pop
adc
jns
and
sbb
sub
cmp
fiaddl
mov
shrl
cwtl
js
jle
lock
push
call
bound
jl
movsb
adc
pop
cmc
test
test
fwait
jmp
lock
mov
outsb
xchg
nop
xchg
inc
into
xchg
mov
pop
into
cwtl
inc
mov
mov
inc
cmp
addr16
dec
gs
sbb
mov
sub
xorb
cmpsl
repz
cmp
rcl
insl
jo
les
mov
cld
mov
push
lods
add
push
iret
lcall
pop
cmp
loopne
and
cwtl
lahf
cmpsl
adc
std
mov
xchg
and
out
call
dec
push
mov
push
jb
js
insb
hlt
mov
cmc
fwait
aaa
std
xchg
bound
sub
and
pusha
mov
adcb
xchg
test
call
push
lcall
sub
ffree
inc
xor
sbb
aas
inc
stc
push
adc
inc
and
add
ds
jle
ja
push
cli
fstps
call
subl
jle
cmp
and
ds
jb
push
push
mov
inc
into
pop
cmp
adc
xchg
fwait
push
inc
shrl
sub
jg
dec
and
and
push
repnz
jecxz,pn
loop
mov
andl
into
cmpsl
lcall
les
imul
lretw
xchg
mov
addr16
ret
out
aas
pop
mov
imul
xor
test
jp
test
loopne
sub
shrb
xor
cmpsb
mov
add
movsl
insl
mov
pop
jg
test
sahf
ljmp
xchg
out
fmulp
mov
cmp
inc
bound
sbb
mov
or
ja
dec
mov
cmp
xor
or
pop
sar
popf
add
subps
push
out
adc
mov
adc
dec
add
stos
jae
dec
stos
cltd
test
pop
inc
mov
sarb
in
scas
loop
xchg
cmp
mov
ljmp
addr16
pop
pop
cld
or
sarl
call
loop
cs
in
mov
adc
scas
ficomps
sahf
pop
xor
rcrb
int3
push
fwait
mov
add
pop
mov
add
cmp
fsts
cmp
out
popa
jns
stos
fdivrl
popa
jl
test
jae
inc
pop
cli
pop
push
loope
sbb
add
arpl
sti
mov
and
shll
jg
dec
sarl
cltd
mov
bound
inc
pop
out
ds
ficomps
jns
imul
xor
scas
popa
push
mov
push
call
cmp
xchg
in
fstps
and
sahf
mov
jne
mov
mov
out
ljmp
push
push
dec
fcomps
faddl
aad
pop
jne
into
nop
aas
xchg
enter
out
push
cld
leave
in
push
mov
xor
pop
into
jb
shrb
inc
xor
add
and
cmc
lock
sub
push
xchg
and
mov
je
cmpl
lahf
pop
jnp
inc
ss
dec
jge
push
push
mov
jae
fsubrl
pop
and
xor
pusha
rorb
jb
ljmp
dec
sbb
xor
sbb
nop
jmp
mov
ficoms
jo
test
mov
jne
jecxz
loope
sbb
fucompp
sahf
pop
pop
jo
mov
push
fiadds
xor
mov
pop
cmp
add
mov
mov
pop
pop
sbb
cmpl
cmc
mov
cs
mov
testl
push
hlt
xor
jbe
push
movsb
sbb
and
add
jne
rclb
fs
daa
or
xchg
sti
sbb
cld
adc
pop
jno
sbb
jbe
mov
fsubrl
les
pushf
icebp
fidivrl
push
dec
mov
sti
lods
sarb
and
pusha
cltd
rolb
xchg
sbb
jg
adc
shll
xchg
xor
into
xor
adc
mov
test
insb
inc
and
inc
and
scas
mov
push
mov
pop
into
sarl
cmpsl
cmc
xchg
dec
cmp
jecxz
aas
cmp
sbb
popf
out
jmp
sti
xchg
push
jecxz
xchg
sarl
lret
add
loopne
test
and
call
hlt
push
pusha
aam
shll
and
adc
push
adc
mov
insl
jg
lea
popf
cld
xchg
rolb
xor
das
cmc
mov
pop
or
outsb
cmp
popf
mov
sub
es
mov
in
pop
loop
inc
repnz
or
add
in
jo
movsb
jmp
into
xlat
pop
or
out
xchg
inc
fildl
mov
xchg
push
fcoms
xchg
sahf
repnz
loop
loope
std
pushf
jge
repnz
mov
ljmp
cs
clc
push
mov
cld
shll
and
call
stos
adc
scas
mov
mov
stc
movsl
pop
cs
test
mov
test
sbb
out
popf
das
aad
aad
and
cmp
sbb
fistl
inc
or
cmp
addr16
or
mov
cmp
mov
dec
sti
ja
fiaddl
push
xchg
in
sbb
inc
cmp
bswap
mov
xchg
addb
add
adc
add
sub
or
cmc
sbb
push
jb
sub
jne
inc
cwtl
lods
mov
inc
mov
loope
push
cmc
cmc
jle
mov
movsl
cmp
add
je
jne
hlt
sbb
ret
lea
fsubs
adc
cmp
inc
xor
adc
jmp
xlat
out
fmull
cli
test
and
movsl
ret
push
mov
fisttpl
xor
pop
push
dec
xchg
testb
sub
out
adc
arpl
daa
pusha
jns
xchg
roll
fldl
rcrb
bound
enter
push
ljmp
adc
test
mov
imul
orb
aam
jmp
inc
add
jne
sar
mov
pop
mov
lea
sbb
add
adc
cld
xchg
cmp
fcmovnb
cmpsb
ret
sub
mov
push
mov
jns
and
sbb
jl
lret
jne
mov
fwait
inc
repnz
push
push
std
cmpsl
dec
xlat
je
and
xlat
out
jo
notl
pop
test
push
fxch
push
xchg
rol
sbb
push
psrld
jbe
std
inc
mov
add
ljmp
std
sub
mov
xor
push
imul
pop
mov
gs
lds
ja
lahf
inc
adc
js
mov
fiadds
xchg
jne
push
push
in
sar
xlat
shll
or
lret
cmc
and
gs
jge
push
mov
in
dec
add
pop
pop
bound
aaa
out
add
xchg
ffree
inc
and
aam
pop
lds
movsb
mov
xchg
stos
adc
inc
imul
adc
cmp
mov
fcomip
and
lods
mov
dec
cli
ficompl
jno
pop
das
jo
movsb
jge
push
xchg
movsl
ja
fcomps
in
je
ljmp
adc
push
adc
and
cld
pop
push
into
mov
push
pop
pop
jns
loop
and
mov
jle
jp
sbb
mov
loope
ret
push
mov
flds
sbb
adc
sbbb
lods
jecxz
inc
lcall
cmp
xchg
rolb
mov
ds
shlb
in
cmp
xchg
and
xlat
cwtl
pop
dec
into
data16
clc
ret
cli
and
rcrb
inc
or
lock
mov
and
push
test
ss
pop
dec
jl
jl
lods
mov
roll
sub
cmp
sub
nop
in
mov
cmpsb
addl
or
sub
cmp
lea
push
and
lcall
fmull
inc
jecxz
add
add
xor
mov
in
int3
push
dec
mov
cmp
fcoml
loop
lcall
mov
pushf
lret
outsl
rcll
lret
cmp
or
test
loope
sub
sbb
jecxz
pop
mov
mov
imul
xor
lcall
aas
jno
in
push
popf
mov
std
je
shll
fidivs
iret
call
jbe
out
loop
adc
pushf
dec
jae
inc
arpl
lret
xchg
dec
push
jp
dec
popa
subl
loope
inc
in
xchg
cmp
mov
rorl
iret
fstl
in
pop
jne
cmp
push
mov
xchg
sarb
fucomip
xor
xchg
cld
rcll
out
xor
mov
dec
in
test
icebp
pop
stos
rcrl
adc
aam
xor
jle
mov
je
xor
and
sub
loopne
push
sub
xchg
mov
neg
pop
fwait
inc
lret
out
or
fimuls
inc
xor
sbb
cld
xchg
lret
iret
dec
lea
jmp
fwait
jmp
jg
mov
pop
loope
mov
pop
mov
cmc
or
repz
or
jne
mov
call
and
mov
sub
or
movsb
jecxz
adc
ffreep
scas
movsb
cmp
pop
pop
shll
ljmp
iret
fdivs
pop
inc
bound
mov
test
dec
jmp
pop
jl
dec
loop
dec
mov
repnz
insl
in
out
daa
xchg
add
inc
inc
sbb
xor
testb
push
daa
xor
xchg
popa
jg
sub
hlt
jb
sub
cwtl
outsb
push
loop
xchg
stc
mov
or
iret
pop
lods
ds
pop
cli
popa
ja
in
int
sub
pop
cmp
sub
enter
sub
stos
ret
outsl
sbb
mov
mov
and
loope
adc
es
sbb
push
add
jge
mov
sbb
int
xchg
add
in
jno
sbb
jae
xchg
sbb
or
cmp
scas
xchg
adc
insb
dec
fstl
inc
xor
mov
xlat
jnp
jbe
leave
out
fucomip
decb
fwait
dec
in
sbb
ficoms
inc
lret
sbb
js
ret
inc
inc
mov
mov
xorl
in
dec
aad
cmp
xor
cmc
and
outsl
pop
adc
lods
shl
lds
test
into
inc
jae,pt
stc
es
dec
cmp
pop
stc
and
fnsave
sub
orl
dec
and
mov
sbb
popa
imulb
push
lret
xor
nop
push
pop
jl
mov
iret
fimuls
insb
xchg
stos
and
jmp
test
push
dec
aas
lds
lahf
cmpsl
cmp
and
or
jmp
out
dec
imul
pop
sahf
mov
sbb
hlt
lea
mov
inc
jno
insl
ret
sub
std
push
mov
fnstenv
mov
xchg
loopne
mov
inc
mov
aaa
cwtl
fstpt
outsl
es
sarl
hlt
dec
pop
mov
and
sub
test
std
inc
imul
inc
sahf
cmp
pushf
jl
cmp
test
aas
sti
fwait
jae
jb
pop
jg
test
mov
hlt
nop
andb
les
pop
sub
fiadds
mov
nop
shrl
adc
jmp
int
fucom
js
cwtl
lds
lcall
aad
call
mov
dec
dec
dec
push
jp
pop
adc
dec
sbb
addl
adc
dec
out
insb
inc
imul
popf
push
jg
and
popa
rcll
orl
xor
leave
int
xchg
xchg
jge
aam
push
xchg
imul
jb
jno
xor
mov
cmp
movsl
fnstsw
push
enter
cltd
mov
jnp
test
dec
push
or
mov
aas
inc
dec
int
ds
icebp
xchg
lods
out
les
cmc
movsb
or
pop
mov
adc
fsubp
lret
push
xchg
inc
xchg
int
sub
imul
jge
mov
in
js
mov
insl
out
and
pop
sbb
mov
xchg
mov
mov
pop
mov
cld
std
ret
es
lfs
mov
pop
mov
out
clc
push
repz
cltd
inc
loope
lcall
pop
mov
jbe
push
pop
mov
mov
roll
popf
sub
adc
es
loopne
xor
clc
sbb
es
es
jnp
addb
scas
cmc
mov
cmp
mov
outsb
insb
std
into
cwtl
adc
aas
sbb
xor
pop
dec
mov
nop
mov
xor
xchg
fsubr
xchg
nop
xlat
arpl
add
or
push
mov
pop
sbb
sub
cmc
or
pop
push
out
mov
in
ret
pop
xchg
inc
xchg
cmc
loope
jo
jge
sub
inc
hlt
adc
and
pop
test
sub
leave
inc
add
ficomps
int3
gs
xor
repz
dec
lods
lret
rsqrtps
push
xchg
add
jl
arpl
int
inc
vmovlpd
pusha
xor
adc
mov
je
fstpt
int
test
mov
outsb
in
fwait
ljmp
mov
jge
test
jnp
inc
pop
test
nop
push
cmpsb
pop
push
xor
sbb
dec
cmpsb
jae
pusha
fidivl
and
xor
pop
adc
xlat
xchg
add
xor
lods
jnp
addr16
mov
out
xchg
test
lock
dec
ret
jae
jle
and
jo
mov
lock
jp
lock
mov
daa
xchg
das
in
or
imul
sbb
loopne
ret
dec
mov
int3
test
sub
xchg
cmp
push
or
xor
add
push
rclb
xor
add
mov
cmp
sbb
out
mov
test
xchg
ljmp
loop
push
add
cmp
imull
adc
inc
scas
sbb
loop
aam
mov
incb
and
sbb
pop
mov
mov
js
sub
pop
adc
cmc
lret
inc
pop
xor
adc
xor
imul
lods
push
aam
rorb
push
adc
movsl
xchg
adc
mov
pop
pop
fmul
inc
lods
fsts
testb
test
insl
scas
sti
mov
leave
xor
inc
popa
push
cmp
mov
add
pop
xchg
adc
mov
in
das
js
aam
out
dec
mov
adc
loopne
cmp
loopne
pop
jo
icebp
stos
xchg
push
mov
mov
and
mov
mov
loop
imul
pop
shrb
dec
mov
xchg
arpl
lcall
mov
into
jae
add
fdivrl
jecxz
mov
loopne
rcll
push
sti
pop
out
lcall
cmp
subb
dec
pop
out
adc
jge
mov
mov
dec
dec
clc
cmp
outsl
xchg
mov
cmc
sar
jo
dec
aad
adc
pop
push
jg
pusha
loop
setge
scas
loopne
dec
nop
aam
in
outsl
mov
cmpw
fs
outsl
adc
push
add
mov
xchg
xor
out
lods
rol
xor
inc
test
fisubl
rorl
adc
add
jge
push
test
roll
testb
xor
test
ds
sbb
jecxz
clc
lret
fsin
jbe
inc
mov
repz
scas
repz
nop
ret
xor
push
fcompl
es
movsl
mov
je,pn
push
pop
xchg
ss
mov
repz
fisttpll
add
inc
jecxz
loop
mov
lea
aaa
lret
jne
mov
fstpl
dec
aam
dec
inc
aas
sub
out
fwait
das
rol
stc
leave
cmpsb
jns
inc
fs
lods
stos
scas
popf
sub
mov
push
add
pusha
adc
aam
pop
mov
lahf
icebp
and
or
dec
adcl
cwtl
rcrl
lcall
shrb
dec
cltd
mov
pop
popa
lcall
lds
push
mov
push
inc
mov
cltd
js
sub
std
int3
dec
push
into
loopne
flds
xor
xor
mov
mov
bswap
push
dec
scas
mov
out
cs
dec
jmp
std
xchg
fstpt
pop
aam
cmpsb
mov
push
xor
adc
cli
fistpl
movsb
adc
and
mov
gs
inc
mov
loopne
loope
bound
sbb
pop
rcll
daa
or
js
out
xlat
test
enter
mov
push
add
divl
ds
and
fadd
fstps
data16
scas
cli
je
cs
arpl
out
fs
dec
and
lahf
inc
enter
pop
push
pop
cmp
fldl
or
in
repnz
inc
xor
test
push
iret
push
jge
add
sub
xchg
jmp
loope
cmpsb
jmp
mov
lock
jno
mov
fisttpl
mov
icebp
in
loopne
mov
fists
lcall
and
dec
mov
jecxz
sbb
jns
nop
xchg
fisttpl
jmp
add
pop
sub
fsubl
mov
insb
les
ficoml
push
or
or
mov
jbe
les
xchg
stos
dec
cmpsb
lock
and
xchg
jg
mov
mov
push
pop
mov
sahf
dec
pop
imul
push
add
jecxz
loopne
stos
cli
aaa
cmp
mov
cmpsl
inc
xor
stc
xor
pop
xchg
lcall
mov
xchg
and
sub
fwait
mov
xor
scas
mov
into
repnz
inc
xor
dec
push
xlat
pop
dec
push
outsb
jae
cmp
insl
sub
jo
js
lahf
jnp
or
dec
jl
lret
pop
xchg
jns
xor
jns
jge
lock
int
and
xchg
mov
je
mov
shrb
notl
aad
out
dec
xchg
or
inc
xor
push
dec
test
js
xchg
add
xchg
cmp
sbb
or
jmp
mov
push
subl
call
or
push
and
pushf
lock
fwait
mov
push
pushf
push
jp
lcall
sub
push
pop
sbb
ret
iret
test
dec
push
ljmp
lods
cmp
mov
or
push
cmc
add
in
xchg
adc
movsl
fistl
cmc
cmp
or
sub
cmp
sub
jge
sub
pop
pop
or
fprem1
rcll
into
cs
jg
or
fnstenv
jmp
mov
cmp
cltd
dec
cmpsl
xor
arpl
rcrl
jg
sbb
mov
lret
cld
mov
push
frstor
and
out
adcb
sbb
sub
test
setle
sbb
mov
stc
xor
lret
inc
leave
movsb
sbb
in
or
lahf
stos
pop
adc
push
shl
mov
vunpckhps
arpl
adc
add
xor
xchg
testl
test
sub
outsb
and
sub
push
add
flds
mov
mov
pop
test
outsb
xor
xlat
push
ret
push
xchg
imul
into
inc
and
fdiv
jle
cmp
adc
mov
je
jecxz
mov
adc
mov
sub
jns
cmc
sbb
xchg
pushf
cld
fcmovb
loop
leave
in
pop
es
lret
add
ja
jecxz
inc
mov
cmp
sahf
test
enter
mov
dec
adc
adc
xor
cmpsl
mov
adc
imul
push
mov
repz
mov
mov
fdivs
add
sbb
pop
repnz
dec
fisubrs
and
es
mov
cwtl
cs
out
xchg
aas
mov
jns
je
mov
loop,pt
inc
jge
dec
pushf
inc
movsb
fidivrl
jecxz
adc
addr16
jg
jge
ss
out
flds
je
inc
inc
dec
mov
cmp
xor
imul
pop
aas
rorb
test
lea
mov
les
loop,pn
lea
sti
jnp
push
test
subl
push
out
xchg
fs
dec
and
adc
jecxz
or
aad
or
or
pop
push
sbb
inc
and
rorl
stc
adc
inc
dec
call
enter
loopne
leave
jns
mov
and
xor
call
sbb
dec
dec
fcmove
arpl
jge
or
sti
fsub
std
loope
cmpsb
sbb
or
inc
pop
mov
push
ljmp
cs
mov
sahf
mov
sub
cmp
lds
add
push
xor
jg
push
pop
sarb
add
outsb
dec
dec
push
sbb
rolb
dec
fldenv
mov
popf
push
inc
repz
imul
add
cmp
mov
mov
inc
jns
pop
mov
mov
in
adc
xchg
pop
push
push
mov
add
je
jns
mov
fmull
xchg
iret
jp
iret
xlat
movsl
fsubrl
push
push
leave
nop
ret
shlb
push
cmc
xor
cmp
sbb
and
mov
mov
adc
push
pop
sarl
sbb
cmp
mov
insl
icebp
xchg
outsb
sti
mov
mov
mov
sub
push
fimull
je
pop
sub
popf
pusha
pop
scas
sub
pusha
jbe
sbb
pop
clc
mov
cld
fwait
adc
mov
push
mov
jmp
cmp
int3
mov
mov
dec
lock
in
arpl
popf
jbe
addr16
mov
fs
movsl
xchg
pop
add
inc
outsl
pusha
mov
aam
sub
cmp
cltd
jecxz
sbb
sub
mov
stos
sub
subb
dec
loop
arpl
sarl
arpl
sbb
and
sti
or
jae
dec
sbb
sbb
ret
jo
sub
clc
xchg
push
fadds
adc
arpl
notb
int3
lahf
mov
jle
fisubl
ss
ficoml
mov
push
sbb
dec
adc
sbb
or
xchg
add
cmpsb
imul
lods
dec
pop
dec
xor
adc
arpl
std
push
jno
popf
aas
das
mov
rolb
js
mov
jns
mov
add
mov
out
adc
xor
mov
push
push
jns
pop
jae
sub
loopne
fimull
mov
jmp
add
in
sbb
xchg
push
pop
in
jl
loopne
cs
lods
inc
stos
mov
out
add
mov
push
hlt
add
xchg
mov
cld
mov
test
push
js
in
push
testb
outsl
xchg
cmpsb
out
das
and
aad
sub
sahf
sub
add
inc
add
iret
dec
scas
cmp
cld
cltd
mov
mov
rorl
repnz
in
popa
inc
xchg
cmp
jnp
icebp
lret
jo
cmp
repnz
sub
icebp
pop
inc
push
mov
addl
test
imul
test
scas
das
dec
cwtl
aad
shrb
ret
jg
add
ljmp
pop
dec
mov
leave
lock
addl
mov
incl
cmp
hlt
cmc
pop
mov
hlt
mov
shrl
loope
jmp
adc
mov
jmp
int
fidivrs
scas
out
inc
mov
pop
mov
mov
xchg
lods
sub
mov
inc
daa
mov
dec
loope
lds
mov
mov
add
sub
mov
lret
rcll
mov
jmp
sub
inc
fucomp
jge
in
jg
test
popf
mov
loop
leave
fcmove
in
xor
loopne
add
jno
mov
test
lods
popf
fisubrl
add
jae
xchg
and
out
push
ds
fwait
or
out
lock
loop
mov
gs
and
cmp
jp
inc
das
dec
or
aam
fidivs
stos
sub
cs
sub
mov
pop
sbb
testl
push
pop
out
jae
dec
mov
lea
pop
inc
loop
add
mov
push
test
loopne
fs
pop
inc
rclb
xchg
mov
cli
aad
pop
cmpsl
daa
add
xor
fstps
outsl
pop
xchg
mov
repnz
xlat
dec
sbb
mov
jmp
inc
pusha
in
cli
call
cltd
sub
popf
fucomp
cmp
pop
and
repz
inc
dec
or
testl
inc
cmp
and
jle
nop
dec
and
out
repnz
adc
sti
aas
push
inc
idivb
int3
rolb
test
inc
int3
addr16
jle
sub
sbb
cmp
mov
add
andb
fucomip
rolb
and
mov
jo
add
fwait
push
popf
stos
sub
push
adc
and
loop,pt
jb
fildll
mul
into
rcrb
dec
jb
xor
inc
mov
jp
add
out
pop
das
sbb
and
pop
dec
push
jno
sahf
add
sub
das
dec
ficoml
jb
test
cltd
jl
push
mov
dec
pop
lea
js
jl
mov
adc
jo
sbb
sbb
popf
dec
or
mov
cld
xor
or
cmp
pop
movsl
mov
adcl
sub
adc
jmp
cmpsl
lret
out
movsb
rcr
std
popa
aad
cmp
jecxz
decb
test
jp
pusha
test
popf
mov
pusha
cmp
sbb
cmp
pop
and
mov
loop
stos
cmc
or
jb
lock
inc
jle
rclb
out
lods
or
ljmp
xor
inc
jb
sub
out
sub
insl
mov
dec
push
int3
hlt
add
daa
cs
leave
xchg
insl
aad
mov
cmc
add
loopne
hlt
adc
mov
push
stos
mov
subl
xlat
aas
aad
mov
mov
cli
fsubl
stc
rol
and
mov
sbb
sub
xchg
push
aam
fnsave
dec
xor
jne
addps
xchg
ret
cmp
mov
xchg
inc
lods
jns
xor
mov
inc
mov
enter
incb
lds
cmc
dec
inc
loop
mov
repnz
add
sbb
lods
shr
xchg
leave
jmp
pop
sub
cli
or
ss
test
mov
imul
dec
pop
add
nop
pop
push
and
sbb
cmpsl
lret
jmp
rolb
add
in
pop
jne
cmc
repz
insl
lcall
mov
xchg
adcl
test
clc
cmp
lods
scas
decb
arpl
loope
or
push
cltd
pop
push
hlt
fstp
je
ss
stc
xchg
lds
inc
call
das
ret
pop
aad
pop
lock
sub
leave
inc
or
mov
xchg
cli
adc
xchg
into
mov
cmp
test
cmp
jmp
add
test
push
sub
xor
push
icebp
ljmp
xchg
es
mov
ret
in
xor
lods
insb
loopne
ret
sahf
fsubrl
xor
adc
test
push
add
loopne
adc
lret
mov
lods
clc
out
sub
lods
icebp
mov
mov
jmp
cmp
mov
inc
loope
sahf
inc
popf
and
in
cs
insb
or
push
xor
scas
inc
xchg
mov
fs
cwtl
iret
hlt
jo
les
xor
outsl
mov
dec
and
xlat
call
sub
dec
push
lods
and
rcrb
cmp
inc
fdivl
hlt
pop
jne
xchg
daa
sbb
insb
arpl
or
call
lret
xor
dec
repnz
cwtl
pop
cwtl
xor
cwtl
lret
in
sysret
dec
out
mov
jo
rolb
jno
into
mov
xor
push
lods
stos
icebp
sbb
in
and
outsb
mov
add
and
pop
jge
mov
and
inc
add
bnd
gs
in
pop
pop
out
push
notl
and
int
pop
mov
pop
enter
fs
jae
inc
cltd
sub
lret
mov
punpckhbw
call
xchg
outsl
fidivrs
or
mov
cmp
mov
aas
orb
sarb
test
clc
mov
jp
pop
mov
pusha
jmp
sbb
inc
push
and
loop
inc
jnp
mov
int3
sti
xchg
std
xchg
cmp
adc
dec
inc
icebp
out
or
pusha
in
movsb
mov
adc
add
mov
xlat
mov
and
pop
outsb
xor
in
outsb
fs
push
jge
jo
or
aas
cmp
push
mov
sbb
ficoml
mov
pop
mov
cmpsl
fcomps
ja
pop
aaa
lods
int
loope
lock
xor
xchg
out
sub
dec
mov
jne
xlat
jbe
daa
test
fisubl
push
inc
cmpsl
fimull
pop
mov
stos
push
jge
scas
mov
pop
int
cltd
jle
push
push
cmp
rorl
sub
repnz
sub
aam
cmp
push
sbb
xor
cmpsl
dec
daa
mov
xchg
jae
inc
sbb
mov
inc
loop
xlat
inc
pop
loopne
xchg
jne
pusha
xor
leave
fdivrs
cmpl
insb
popl
cmp
shll
push
push
mov
inc
and
sub
bound
in
fisttpll
push
sarb
xor
pop
cld
sub
imul
and
xchg
shl
push
and
jbe
mov
ljmp
leave
or
iret
rcll
rorb
arpl
sahf
push
pop
sahf
ds
fwait
adc
xchg
xor
out
outsb
and
cmp
int
into
add
or
rcr
cmp
sub
sbb
add
aam
push
and
sahf
enter
mov
mov
and
shl
gs
cmp
xor
pushf
jbe
imull
out
xchg
dec
push
mov
das
jns
add
cmc
or
scas
std
xchg
sbb
fwait
mov
xlat
cmp
dec
jb
inc
es
dec
scas
rorb
sbb
or
scas
fistps
jecxz
scas
adc
inc
mov
daa
pop
push
aad
leave
mov
mov
imul
stos
es
fiadds
pop
push
pop
pop
popa
add
pop
pop
aad
pop
inc
inc
bound
lretw
lret
sub
clc
insb
testl
xor
mov
mov
stos
adc
cli
xchg
imul
mov
xchg
aam
push
push
cs
shl
xchg
fnsave
xchg
data16
or
ljmp
inc
test
out
orl
movsl
jae
dec
dec
inc
dec
sbb
jb
pop
fldenv
test
or
out
icebp
aad
fmul
out
mov
rol
repnz
fldl
mov
or
scas
enter
aad
dec
pusha
vprotd
das
popa
cltd
pop
push
mov
sub
stos
pop
sub
push
nop
es
cmp
sub
xchg
dec
sahf
fcoms
xchg
jecxz
sub
nop
in
lods
shll
cwtl
adc
jo
fimull
les
inc
mov
push
lock
pop
test
xchg
cltd
mov
in
orb
add
addr16
lea
xchg
jb
mov
sub
mov
mov
mov
andl
and
popf
test
inc
pop
daa
roll
pop
shlb
and
test
movsl
bound
sahf
mov
pop
in
out
subl
in
out
out
jecxz
jnp
fdivs
inc
add
mov
fcomip
shlb
sti
xchg
sub
lock
in
iret
and
cmp
outsb
insb
ret
je
sti
mov
cmp
movsl
jge
div
xor
mov
jp
imul
pop
dec
push
movsl
add
shrl
int
jl
jb
std
mov
mov
out
mov
push
in
and
popa
push
loope
lahf
sarb
push
cmpb
aam
jb
or
dec
fucomip
pushf
inc
and
lret
xor
dec
arpl
fwait
lret
xchg
pop
je
add
data16
mov
daa
test
je
push
pop
gs
push
mov
fimull
cs
dec
xchg
cmpsl
mov
call
sbb
sbb
mov
adc
or
and
push
jl
inc
mov
push
outsl
fbstp
jmp
outsb
nop
xchg
scas
and
addl
cmp
dec
sub
inc
popf
stc
jmp
sti
stc
cmovle
fimuls
or
int
popa
lret
out
in
movsb
dec
pop
adc
filds
and
lahf
xchg
mov
repz
insb
bswap
or
jns
dec
sahf
jmp
dec
nop
mov
fists
cwtl
fists
cmp
in
insl
cltd
adc
outsl
aaa
shrb
push
ja
ds
and
mov
aam
xor
or
mov
cs
pop
stos
xlat
idivl
xchg
outsl
xor
fldcw
or
sbb
fdivrs
pop
out
jo
addr16
es
push
out
mov
test
loopew
clc
test
push
inc
mov
aas
dec
add
jae
jae,pt
adc
idiv
push
jge
lret
mov
cmpsb
daa
cmp
sub
add
scas
jge
adc
outsb
data16
mov
je
mov
or
mov
es
mov
dec
mull
sbb
and
add
testl
cmp
test
rorb
stos
cmp
negb
xlat
mov
shrb
add
mov
pop
or
xor
cltd
out
out
imul
arpl
mov
jo
jne
shlb
jle
xchg
loop
int
fs
pop
jle
and
jge
aad
ljmp
pop
mov
push
xor
pop
mov
sbb
mov
sub
add
mov
mov
outsl
nop
adc
lahf
jp
xor
adc
push
push
iretw
push
rcrb
enter
cmp
popf
movsb
add
inc
mov
xchg
jecxz
sbb
inc
int
pusha
and
pop
rcll
or
cli
clc
fisubrs
jns
lcall
jb
mov
pop
inc
rep
shlb
mov
sbb
sub
sub
or
pop
gs
cmpl
nop
repnz
out
or
mov
in
ret
dec
pushf
xchg
test
in
mov
aaa
stos
jg
xor
or
or
ret
pop
cld
ret
dec
fwait
pop
xchg
js
icebp
lods
mov
cmpsb
sbb
hlt
adc
mov
iret
sub
sbb
xchg
push
mov
cwtl
add
pusha
add
dec
mov
adc
insl
inc
hlt
add
cmp
dec
mov
ret
out
movzwl
xchg
sbb
sub
xor
pop
sub
sarb
mov
mov
jns
dec
les
dec
mov
mov
fmull
mov
ret
call
mov
push
aad
lret
std
ss
cmp
mov
push
xchg
or
aam
dec
xchg
inc
movsb
mov
and
lret
lret
cltd
push
repz
push
rolb
inc
mov
xchg
lds
mov
insb
sti
stc
inc
rcll
test
pop
lock
and
mov
fldt
add
and
aam
add
sarb
push
aad
je
xchg
les
stos
test
fisubl
sub
and
sbb
adc
addr16
inc
lahf
mov
inc
mov
mov
push
repz
jae
adc
out
insl
sub
mov
arpl
jb
pop
sbbl
movb
adc
jmp
cld
dec
lds
sub
repz
ds
xchg
jnp
add
sbb
push
dec
lret
lods
xor
test
add
leave
inc
adc
daa
and
mov
rcrl
cmp
movsl
jl
jns
dec
xor
xchg
adc
pop
nop
inc
xchg
pushf
leave
mov
inc
add
outsl
into
fcompl
test
outsl
jne
or
ss
sarl
mov
and
xlat
push
fistpl
push
sub
cltd
lods
gs
loopne
call
nop
or
lret
push
mov
test
cld
push
fimuls
xchg
xlat
in
pop
inc
sub
dec
fstpl
scas
cwtl
rol
and
sbb
rcll
dec
xchg
jno
movsb
and
adc
pop
fnstenv
js
mov
pop
cli
push
cmp
push
push
sbb
pmaddwd
in
jbe
test
shr
rcll
xchg
cwtl
jge
inc
test
pop
loope
lods
stos
sub
push
xchg
insb
jmp
xchg
mov
jno
movsl
or
inc
mov
sbb
mov
mov
mov
adc
cmp
inc
dec
pushf
lods
jmp
or
add
cli
add
or
repnz
inc
sti
mov
in
in
fwait
xor
or
aaa
fwait
dec
ja
push
xchg
icebp
popf
pop
or
jo
sub
pushf
icebp
cld
adc
mov
fimuls
scas
dec
clc
sub
mov
cmp
push
cmp
paddusb
cmpsl
repnz
or
cs
add
sbb
push
mov
sbbb
add
ja
xor
inc
mov
pop
fwait
psubb
cmp
fcmovu
das
clc
adc
testl
push
ljmp
adc
mov
out
or
push
xchg
leave
push
movntps
inc
sarl
jmp
imul
scas
stos
push
push
mov
fisubs
sbb
push
mov
fistl
xlat
lret
dec
dec
mov
enter
sbb
arpl
xor
jg
out
xchg
jecxz
mov
xchg
xor
adc
push
dec
sbb
sbb
adc
out
in
loope
and
into
xchg
dec
jbe
movsb
arpl
ret
aad
sbb
mov
out
lds
hlt
lret
in
mov
sub
cmpl
push
pop
mov
cmp
push
cld
sub
divb
jmp
mov
arpl
pop
push
or
jb
roll
out
mov
dec
jl
sbb
sub
xchg
or
lret
add
outsl
dec
sar
andb
out
dec
data16
push
cmp
dec
inc
cmp
sub
clc
xor
fbstp
adc
or
lahf
cmp
inc
jb
imul
jmp
aad
mov
lcall
pop
xchg
or
sbb
sub
mov
cmp
xchg
inc
jnp
or
mov
xchg
insl
push
pushf
cmp
popf
mov
pop
stos
and
pop
mov
and
jmp
ficomps
cwtl
mov
outsb
mov
outsl
sti
xlat
cmc
lock
stc
push
push
add
mov
incb
add
lahf
jmp
fsubrl
fnsave
sub
arpl
pop
jecxz
cwtl
loopne
xchg
stc
daa
and
sbb
jbe
mov
mov
sbb
dec
pop
xor
add
adc
or
lock
aas
adc
pusha
les
ret
repz
sar
or
rolb
mov
shll
mov
pop
pop
push
js
out
fisttpl
loope
cld
or
mov
push
sbbl
aas
xchg
lret
negb
mov
sbb
cmp
scas
dec
sahf
jnp
pop
xchg
xchg
inc
jb
in
xlat
out
push
push
int
test
xor
lods
aad
pop
pop
dec
mov
or
and
pusha
sub
push
ret
push
adc
mov
sbb
push
xor
and
xor
jb
pop
pop
inc
add
lods
xor
mov
mov
lds
adc
sub
xorl
pop
lds
test
inc
pop
xor
xor
test
popf
popf
shlb
call
orb
pushf
sahf
cmc
pop
popa
or
dec
sar
into
xor
insb
and
push
sbb
cld
add
scas
xor
xor
lcall
gs
loopne
imul
cltd
mov
mov
jmp
hlt
pop
push
push
sbb
lret
je
inc
xor
lods
fs
mov
or
imul
int
pop
fildll
enter
imul
fists
je
push
push
sti
xlat
sub
pop
out
addr16
stos
sub
dec
cmp
or
pop
push
inc
push
xchg
lret
push
push
jle
stos
inc
push
cwtl
and
pushl
or
loop
rol
movsb
mov
add
or
inc
mov
xchg
nop
pop
scas
xlat
subl
fs
sub
cmp
mov
sbb
cltd
dec
aam
inc
xor
gs
jp
push
pop
leave
sub
push
hlt
ret
ja
out
and
pop
or
sbb
mov
inc
cmpsb
lea
mov
insb
adc
push
jne
and
or
lcall
push
cmp
push
shlb
cmp
cmpl
jmp
icebp
jns
mov
lock
ret
jl
pusha
lcall
cli
add
fs
cmc
test
cmp
xchg
mov
cmpsb
xchg
push
loopne
int
sbb
and
loop
xor
pop
mov
mov
test
out
ja
lds
arpl
xchg
rol
int
cmovl
fsubrs
lods
jl
stos
lods
mov
or
dec
loopne
xchg
mov
dec
fsubp
shrb
lret
dec
cwtl
in
lds
ret
cmp
aas
aaa
cmp
push
fstl
jg
cmp
andl
clc
dec
cmp
add
and
cmpsb
and
pusha
pop
jno
sub
cmp
testl
adc
jmp
mov
xchg
xlat
test
imul
call
xlat
lret
push
mov
jb
fs
sbb
xor
das
jno
inc
mov
xchg
mov
out
aaa
movsl
xchg
cmp
xor
add
add
jmp
ja
sbb
lods
cli
pop
into
inc
mov
ret
jecxz
cmp
aas
jecxz
jae
insl
scas
int3
mov
out
mov
ret
lds
pop
or
ret
jo
ds
cmp
push
jb
pop
adc
enter
in
mov
ret
jb
mov
fs
pop
add
mov
mov
aaa
cmpsl
jno
popf
pop
jno
aam
mov
mov
adc
jmp
xor
sbbb
mov
mul
jae
jnp
add
jle
jmp
adc
cltd
mov
fdivrs
aam
and
sub
std
inc
jns
adc
inc
cmp
pushf
repz
pop
sub
mov
and
pop
into
stos
cs
adc
mov
pushf
es
or
cmp
xchg
pusha
inc
mov
mov
lret
adc
stos
les
inc
push
cmpsl
and
add
push
xor
and
popf
cltd
inc
pop
cmp
lock
lock
in
in
xchg
ljmp
sub
adc
lea
or
fs
xchg
adc
outsb
test
adc
or
jle
adc
scas
xor
loopne
jns
mov
sub
inc
cmc
scas
sub
mov
dec
cmp
pop
and
dec
jle
dec
adc
mov
xchg
lahf
icebp
xchg
pop
test
stc
adc
roll
inc
pusha
pusha
scas
stos
std
cmp
iret
call
lock
xchg
int3
das
dec
js
push
xor
call
sub
pop
push
mov
sub
leave
aam
add
or
inc
mov
sbb
cli
cs
adc
mov
push
pop
mov
cmp
xor
mov
stos
jae
and
scas
orb
gs
xorl
test
movsb
inc
cmp
leave
jnp
jl
pusha
and
sbb
mov
cmc
sbb
mov
call
fwait
divb
push
cmpl
orl
mov
sub
jl
xchg
int3
jl
mov
sbb
sbb
cmp
xor
scas
mov
test
push
pop
sbb
mov
fst
xor
testl
stos
ss
gs
loope
int
in
inc
dec
je
idivl
into
iret
and
mov
xor
cld
mov
fcmovb
loope
push
mov
lods
inc
inc
in
jg
rorw
jmp
inc
push
adc
or
push
dec
hlt
dec
mov
or
idivb
shrb
xchg
xor
addr16
push
pop
lods
invd
mov
dec
hlt
sub
push
cmpsl
ja
ja
inc
add
rcl
inc
andl
addr16
push
idivb
testb
aam
fisubrl
xlat
fiadds
rcr
daa
push
icebp
nop
push
xor
mov
pop
addr16
inc
mov
je
int3
mov
int3
pop
or
jmp
daa
addr16
and
jg
scas
sbb
sti
subl
push
addl
cmp
pop
or
movsb
push
cld
dec
in
jmp
mov
xchg
add
mov
adc
cmp
push
cltd
addl
mov
repz
cmpsb
mov
arpl
ja
jle
mov
xor
mov
scas
ds
mov
test
ret
ret
xlat
jg
in
daa
testb
daa
aad
lret
fldl
pop
pop
mov
sub
sbb
jmp
sub
pop
lcall
test
enter
insb
mov
cs
mov
lods
lahf
mov
clc
imul
jmp
or
shll
mov
rcrb
dec
into
addl
jg
enter
stos
dec
pop
mov
pop
sbb
mov
les
xor
pop
sbb
outsb
and
sbb
arpl
and
xor
or
adc
movl
mov
mov
or
repnz
sarl
rclb
pop
sti
adc
mov
orb
loop
imul
adc
xlat
ds
clc
adc
xchg
jge
jg
mov
fcmovu
sub
dec
pavgb
or
xchg
jp
lods
dec
dec
jns
and
mov
incl
or
push
jbe
add
and
mov
notl
in
je
adc
cmp
xchg
add
std
outsl
jge
cmp
lods
inc
cltd
js
jp
cld
fidivs
mov
add
test
sub
or
sbb
out
shl
loopne
es
push
pop
mov
jmp
push
sbb
inc
aam
xor
mov
xor
or
or
mov
outsl
loop
xchg
dec
lret
outsl
add
push
xchg
lods
mov
mov
or
or
test
rolb
insl
aam
sbb
add
dec
aam
and
inc
cmpb
or
scas
xchg
push
aam
loope
xchg
jp
inc
repnz
sbb
sub
idivl
std
ret
jbe,pt
add
das
fidivrs
mov
xchg
icebp
in
lea
lret
ljmp
jnp
adc
push
in
aaa
xor
mov
loop
sbbb
and
push
add
fistpll
sbb
jmp
cmp
adc
mov
mov
dec
aas
inc
popa
mov
xchg
int
test
out
sbb
push
mov
jp
pop
mov
lods
inc
sahf
dec
pop
rclb
cmp
sbb
dec
fnstcw
fcmove
mov
cmp
loope
or
popf
int
test
jg
xchg
cmpsb
mov
mov
aaa
xchg
jno
ljmp
sahf
pop
mov
xor
stc
insb
push
jbe
mov
sbb
rclb
mov
or
fidivrl
or
push
es
xor
call
xchg
call
cmp
pop
jge
adc
aam
push
dec
jmp
xchg
dec
mov
push
mov
out
lret
iret
jecxz
andl
fistpll
or
add
test
pop
iret
cmp
rcr
lcall
out
mov
xchg
and
sbb
sub
dec
movsb
or
cltd
sti
jmp
bound
xchg
out
cwtl
jmp
lahf
xorb
fwait
pop
lods
sub
push
pop
adc
xor
ret
out
xor
dec
jmp
addl
or
je
repz
in
roll
cmp
ljmp
enter
pusha
dec
jo
and
nop
scas
mov
adc
jns
fistpl
or
imul
bound
cli
push
jns
pop
pop
push
in
idiv
repnz
repnz
hlt
fwait
jle
lods
dec
lods
or
add
lods
dec
insl
sbb
jae
jp
mov
mov
push
push
subb
mov
cltd
pop
mov
push
jo
pop
jle
loopne
mov
jl
rclb
cmp
inc
lcall
jb
push
cmp
pop
jne
inc
rclb
addr16
popa
loope
in
mov
mov
cwtl
cwtl
dec
xchg
addr16
dec
punpckldq
jo
sub
addl
sbb
pop
aas
outsb
mov
inc
jo
add
add
lods
gs
icebp
inc
sub
lds
fcmovu
lods
mov
cmpsl
cli
push
inc
add
sbb
or
and
jne
adcb
pop
or
les
xchg
xchg
pop
icebp
fisubs
in
test
repz
popf
iret
in
sbb
mov
mov
imul
fiadds
xor
mov
sub
aam
repz
sbbb
add
pop
dec
les
sbb
and
xor
push
inc
jne
daa
cmp
inc
lret
xchg
ja
imul
cmp
ret
lret
fmull
das
jns
in
xor
or
mov
pop
xor
inc
fsts
movsl
outsb
bound
adc
add
lret
fidivrs
xchg
xor
jle
pop
add
fnsave
adc
and
xor
mov
fwait
jmp
repz
jo
dec
xchg
shrb
lods
pop
pop
aaa
xchg
xchg
test
adc
push
sbb
pop
jno
mov
nop
lret
xor
pop
subb
xor
call
data16
lods
mov
and
adc
cmp
add
inc
push
inc
lahf
pop
dec
in
cmpsb
dec
int3
jecxz
mov
cmpsl
leave
and
and
sub
lods
out
fcompl
hlt
stc
jg
in
cmpsl
cld
test
inc
push
mov
mov
sbb
cmp
pusha
pop
xor
das
aaa
aam
out
push
cmpl
or
insb
adc
int
xchg
loopnew
lcall
popf
idivl
lock
inc
test
xor
adc
cwtl
nop
xor
mov
out
dec
sarl
daa
aad
movsb
add
xchg
dec
adc
adc
fnsave
mov
outsb
push
insb
lcall
dec
iret
bnd
stc
cmp
rcl
outsb
fidivrl
add
mov
jne
and
or
shl
or
pop
bound
mov
jns
cmp
loopne
sbb
leave
sub
jmp
mov
sub
ret
pop
dec
stc
pop
sbb
scas
adc
xor
add
pusha
mov
pop
mov
and
movsl
pop
and
test
mov
push
push
inc
jne
mov
aad
add
imul
and
xor
xchg
shr
mov
inc
arpl
repnz
movsl
push
pusha
and
cs
mov
aam
call
add
pop
xchg
xchg
and
dec
in
ds
xchg
mov
popa
mov
add
or
popf
test
cmp
dec
sub
lret
xlat
mov
nop
iret
inc
sub
repz
jge
je
mov
jle
or
std
scas
icebp
insb
sub
jns
push
sub
sub
sbb
xchg
dec
addl
mov
dec
pop
push
push
mov
xor
mov
dec
test
cmpsb
lcall
icebp
mov
daa
sub
lcall
pop
add
in
cld
es
icebp
pop
test
fldcw
xor
mov
paddd
cmpsl
nop
and
adc
xchg
pop
add
xchg
mov
dec
xlat
sub
jg
es
push
adc
xchg
ds
std
jb
sbb
or
ja
lea
adc
inc
sbb
adc
repz
xchg
cmp
popf
mov
mov
int
outsb
cmp
adc
cmp
pop
xor
pop
jmp
or
inc
mov
adc
mov
out
and
jp
shlb
dec
pop
out
adc
sbb
aad
add
or
test
das
cs
mov
adc
out
cmp
popa
push
sub
mov
push
mov
test
jg
xchg
mov
push
out
fildll
outsl
inc
push
xchg
loop
mov
adc
sahf
mov
das
ret
inc
ret
sub
out
xchg
fadds
nop
lcall
or
loopne
mov
addr16
cmp
fidivrl
shlb
jo
test
jbe
enter
ficompl
rorb
sub
sahf
xchg
imul
push
dec
add
dec
arpl
fs
ret
mov
mov
sub
xchg
test
ja
in
rcrl
lret
int
aaa
shl
pop
mov
add
pop
jge
cmp
in
sub
cmp
dec
xchg
cmp
dec
aam
arpl
sbb
les
test
and
ret
or
push
fs
popf
mov
and
test
mov
mov
loop
adc
addr16
negl
mov
and
fidivrl
xor
movsl
mov
dec
inc
aam
sbb
loopne
sbb
add
pop
and
or
and
pop
std
sub
lret
sbb
add
sahf
es
js
in
insb
cmc
sub
or
mov
or
sub
xchg
add
lahf
pop
jecxz
aam
jle
clc
push
stos
push
in
sar
xchg
mov
mov
inc
inc
rorb
jno
enter
push
fucom
and
xor
test
mov
xchg
jecxz
in
adc
aad
lods
lds
lret
loope
mov
push
jo
xchg
mov
dec
out
jne
mov
sahf
lea
xchg
addr16
mov
in
push
or
sti
xor
dec
jle
inc
jae
mov
add
cli
pop
cmp
and
xchg
jbe
xor
mov
scas
and
sub
lcall
mov
sahf
ret
mov
sbb
push
insb
lods
cmpsl
decb
mov
mov
pushf
scas
adc
xor
mov
xor
inc
mov
xchg
shlb
cld
mov
cltd
ret
add
lret
divb
add
mov
daa
test
or
les
int3
push
fistpll
pop
pop
mov
imul
jnp
xor
packsswb
add
push
cmp
int3
jnp
imul
add
mov
or
and
push
imul
fmuls
sbb
cmpsb
into
neg
inc
call
pop
arpl
mov
xchg
push
int3
dec
cmpsb
mov
cmc
insb
clc
and
xchg
jge
mov
ds
or
lret
sbb
mov
mov
arpl
add
jle
mov
cwtl
add
icebp
and
push
not
popf
jmp
or
sub
push
fdiv
scas
xchg
xchg
inc
xchg
inc
popf
mov
out
out
push
lret
fcomps
frstor
add
xchg
cmp
ret
dec
inc
pusha
gs
fcmovnu
or
jns
daa
add
push
leave
adc
rclb
mov
sub
or
mov
push
mov
mov
sub
divl
js
mov
inc
roll
jle
out
ss
add
ds
arpl
mov
outsl
add
jecxz
push
bound
popf
sub
mov
xchg
xchg
adc
lcall
adcb
daa
mov
mov
hlt
mov
lahf
adc
sub
stc
jo
test
gs
add
jne
pop
jns
cli
jo
push
daa
subb
lock
sbb
sbb
pop
add
shrb
fdivrl
sub
cld
mov
mov
mov
push
jae
pop
outsl
push
dec
sbbl
leave
sbb
mov
int3
movsb
jp
mov
cmp
js
cmp
pop
sar
cld
stos
ret
popa
cmpl
xchg
mov
sbb
aam
lock
out
and
jle
sub
mov
dec
pop
sub
or
xor
xchg
stc
pop
dec
sbb
xor
mov
push
inc
aas
xchg
add
popa
bnd
jecxz
insl
ret
mov
push
sub
dec
stos
cli
std
mov
in
pushf
and
stos
xchg
push
inc
ds
jns
mov
xor
lods
jg
data16
sbb
lock
xor
ret
fwait
rclb
push
ret
mov
lods
inc
adc
fisubrl
cltd
xchg
repz
jmp
mov
lods
adc
subb
rorl
test
jl
jp
pop
xchg
mov
xchg
cmpl
adc
mov
xor
je
gs
das
pop
dec
sar
fistl
stos
movsb
sbb
in
sahf
jo
or
push
sub
push
xchg
mov
or
xchg
mov
sbb
xchg
orl
lcall
mov
fcmovb
or
add
ss
cmp
lahf
scas
in
xchg
or
nop
jbe
data16
and
out
inc
pop
xchg
pop
int
adc
jg
mov
lret
xchg
repz
push
xor
out
movsb
mov
shlb
loopne
mov
and
dec
fbstp
into
push
aad
rolb
stos
and
sbb
lods
outsl
cwtl
cmp
fnsave
std
test
pop
in
imul
jge
sub
leave
mov
and
popf
mov
inc
add
xchg
jp
rclb
xchg
insb
testb
inc
test
arpl
cmp
mov
sbb
arpl
mov
out
scas
push
jne
pushf
inc
lods
pop
ret
jl
sub
mov
test
jae
sbb
jne
pop
pop
mov
repnz
popa
cmc
sbb
shl
jae
mov
aam
fabs
jnp
loopne
outsl
fyl2xp1
insb
mov
sbb
cmc
sbb
inc
call
les
xchg
mov
xchg
cmpsl
xor
insb
adc
arpl
dec
adcl
aaa
in
rcrb
das
lcall
adc
xor
ja
sub
out
mov
addr16
push
lock
std
sub
mov
fs
daa
xchg
in
js
xor
add
jle
mov
jl
sbbl
lods
cli
sub
adc
mov
in
les
mov
and
ret
jae
cld
inc
mov
int
inc
aad
cmp
int
xchg
test
negl
mov
and
test
ljmp
adc
imul
mov
arpl
push
clc
mov
orb
loopne
fidivrl
cld
push
sbb
adc
ja
adc
sbb
mov
mov
push
icebp
and
idivb
mov
rcrl
pop
dec
cwtl
sbb
cmp
mov
adc
pop
test
dec
stc
xchg
clc
mov
dec
adc
sub
and
pop
or
dec
std
mov
nop
jp
jbe
outsl
mov
xor
add
in
pop
cmc
dec
and
or
jge
hlt
es
sub
addb
mov
mov
aam
jg
inc
cmpsl
cs
pop
testl
fisubrs
cmpsl
fnstcw
shll
and
mov
inc
sahf
mull
push
jg
cmpsl
js
mov
inc
push
cld
outsb
add
adc
ror
movsl
fidivrs
int
push
gs
aam
stc
lods
or
cmp
ret
int3
int3
fstpl
mov
das
adc
pop
jge
scas
add
push
pop
imul
repnz
xchg
loope
shlb
sbb
lods
ja
scas
jp
xor
loopne
aaa
xor
cmp
ret
and
pop
rcrb
dec
into
cld
pop
cmp
fldt
sub
test
je
xchg
out
mov
divl
sbb
stos
ss
cmpsl
bound
jg
movsl
out
lret
mov
out
xchg
lea
push
cwtl
xchg
push
je
pusha
lret
dec
add
jne
or
jno
call
xor
jae
aas
xchg
in
xor
add
dec
dec
fld
subps
inc
mov
cmp
cs
ljmp
xor
cwtl
sbb
iret
cld
add
movsl
mov
cmpsl
test
pop
outsb
mov
mov
arpl
jmp
pop
mov
adc
mov
iret
notb
js
push
push
into
inc
call
mov
sbb
shrl
xchg
mov
mov
mov
xor
mov
mov
cmp
cmp
iret
int3
and
pop
xchg
into
and
mov
jb
lock
mov
sbbl
daa
sbb
scas
call
fnsave
pop
pop
sub
ficomps
inc
push
in
loopne
dec
popf
cmp
into
lahf
sbb
push
dec
dec
ja
xor
stos
popf
cmpsl
insb
sub
into
adc
sub
mov
sbb
mov
xchg
divl
sbb
repz
je
dec
aaa
pop
int3
add
out
push
jne
lcall
negb
adc
dec
mov
nop
ds
jmp
cmp
adc
int3
push
add
push
in
and
pop
dec
mov
sub
pusha
popf
push
pop
xor
out
adc
inc
xor
ret
or
xchg
test
xor
cltd
in
aam
ret
lds
cmp
adc
incl
jg
roll
in
mov
fldt
jns
adc
adc
pushf
imul
out
xchg
imul
pop
cmp
mov
push
sbb
xor
xchg
sti
test
je
stc
pop
mov
sub
shrb
pusha
sub
inc
imul
clc
into
or
cli
cmc
sbb
bound
imul
cmp
lahf
jae
insb
aam
pop
cltd
in
dec
iret
sbb
pop
str
stos
cmp
jl
adc
and
push
xchg
mov
adc
insl
cs
inc
dec
inc
int3
mov
cltd
bound
or
jbe
andb
add
cmp
cmpsb
sub
aad
inc
sbb
fsubl
cmpsl
rorl
xchg
xor
ret
xchg
bound
repz
add
out
dec
arpl
xchg
flds
cld
js
setae
fidivrl
mov
push
ret
out
sub
insb
stos
ror
and
das
test
jp
sbb
dec
xchg
les
aas
push
mov
imulb
inc
sub
sahf
shl
ret
pop
out
jnp
loopne
ficomps
and
into
cld
aaa
and
mov
mov
sub
adc
std
jb
cmp
addr16
jb
pop
mov
push
cmp
outsb
fdivr
mov
ljmp
stos
and
add
out
pop
cmc
nop
xchg
test
test
jb
cmp
cmp
ret
lock
arpl
mov
repnz
pop
jo
inc
ficoml
sub
and
xchg
jno
xchg
adc
cmp
sub
add
ds
rorl
pop
das
pop
fsubr
push
or
ds
dec
loopne
adc
lahf
cmc
jp
adc
add
jecxz
push
pop
hlt
push
cld
sahf
xor
push
or
sub
test
ss
dec
test
mov
mov
mov
rorb
iret
popa
mov
dec
jns
inc
mov
insb
imul
js
sub
inc
fcoml
fsubp
xchg
mov
pop
fdivr
adc
cmp
or
stc
xchg
arpl
dec
neg
insl
shlb
cmp
pop
in
jmp
icebp
outsb
fs
jns
pop
dec
iret
movsl
scas
xor
je
xchg
push
mov
int
out
mov
adc
mov
push
add
xor
pop
js
xchg
jnp
inc
mov
xchg
inc
pop
scas
mov
insl
int
xor
sbb
shll
daa
jl
sbb
dec
data16
rorb
and
popf
add
sub
lea
das
xor
add
dec
inc
pop
aam
fdiv
dec
and
or
aas
and
lahf
mov
mov
inc
inc
push
mov
mov
pop
sbb
sub
nop
ljmp
xor
cmp
xchg
aad
push
loopne
icebp
xchg
dec
sbb
aad
jnp
push
mov
test
add
inc
cs
fsubs
xor
or
pop
push
inc
out
aaa
lea
xorl
or
scas
aas
ret
inc
lods
inc
mov
leave
add
std
shlb
adc
sarb
jmp
mov
sbb
das
inc
sbb
and
pop
testl
jno
jge
leave
fmull
adc
aaa
scas
sbb
iret
xor
sub
in
jo
mov
loopne
sbb
xor
sub
sub
push
xchg
sub
xchg
insb
sub
or
push
mov
das
test
ss
mov
push
movsl
and
loopne
stos
adc
mov
and
inc
cmp
push
adc
out
fcmovnb
popf
add
sbb
aad
aam
cmpl
adc
push
add
jb
lcall
cld
dec
pop
in
xchg
mov
pop
cli
mov
mov
dec
dec
sub
xchg
fildl
test
push
pop
add
mov
cmpsl
movsl
add
pop
pop
test
dec
dec
lds
and
lds
rolb
cmpb
cwtl
cltd
mov
scas
jnp
inc
pusha
cmp
test
cltd
sbb
mov
cmp
add
shll
cmpsl
or
mov
shl
std
push
xchg
xor
jns
xor
insb
sub
and
ds
lock
gs
cmp
pop
inc
stos
dec
incl
fists
aad
mov
inc
jp
sub
and
std
addr16
sarb
dec
leave
jg
xor
adc
aad
dec
add
imul
fs
aad
cmpxchg
pushf
mov
dec
xchg
mov
or
push
shlb
jo
sbb
add
addr16
fwait
sarb
push
mov
dec
test
testl
xor
iret
daa
sbb
in
out
mov
daa
adc
sbb
js
enter
pop
rorl
or
mov
push
and
mov
cmp
xchg
leave
push
int3
adc
and
push
cli
jbe
arpl
jle
dec
test
popa
dec
dec
fwait
push
cwtl
adc
jle
jae
out
inc
mov
mov
push
sbb
cltd
es
cld
jg
xchg
xchg
mov
dec
jg
xchg
sbb
out
xchg
sub
repnz
and
mov
rclb
mov
mov
inc
mov
test
or
fisubs
sahf
jmp
mov
test
xchg
sahf
add
add
mov
lds
movsl
jo
mov
or
or
iret
ret
imul
hlt
aam
cs
cmp
clc
inc
dec
negb
cwtl
cli
pop
or
in
movsl
inc
sbb
jecxz
xchg
push
pop
daa
stos
int3
jecxz
aad
inc
out
mov
gs
repnz
xchg
xchg
jl
aas
jae
pop
mov
stos
mov
cmp
fwait
pusha
mov
cmp
hlt
adc
mov
mov
ret
jg
xchg
stos
aas
lds
out
mov
dec
cltd
daa
scas
int
pop
and
adc
pop
fldenv
mov
inc
xchg
xchg
adcl
sub
mov
jne
inc
lret
dec
jp
adc
ja
cmp
ljmp
push
aas
mov
popa
sbb
pop
sbb
insl
daa
jne
mov
ds
dec
or
dec
mov
inc
addr16
mov
mov
push
fdivrl
and
int3
xor
jnp
mov
push
in
mov
add
sbb
add
aaa
cmp
sub
mov
xchg
lret
push
fdivl
call
mov
sbb
loope
jne
sbb
aad
roll
xor
loopne
sub
ljmp
xchg
and
unpcklps
and
icebp
imul
mov
insb
jmp
xchg
xor
pop
arpl
jo
push
cltd
mov
mov
sti
test
jbe
push
xchg
nop
outsb
lds
jg
fwait
gs
loop
jl
xlat
in
aam
jae
inc
iret
pusha
ficoms
loopne
or
jno
hlt
xchg
mov
ret
aam
scas
push
nop
imul
mov
pop
fcomp
jns
rcr
pop
mov
scas
popl
add
jmp
insl
adc
imul
or
mov
sub
adc
mov
xchg
push
lods
fcmovne
jecxz
fsub
in
mov
mov
xchg
push
shlb
xor
jb
and
lret
daa
xlat
push
pop
test
sub
das
jb
pop
mov
cmp
mov
fimuls
test
in
add
insl
bound
icebp
xor
dec
sbb
pop
dec
popa
outsl
in
lahf
addr16
ss
and
mov
fstpl
add
xchg
mov
cli
mov
jns
xchg
mov
dec
push
jne
and
out
sbb
pusha
roll
in
lret
push
aam
mov
frstor
loop
dec
cmp
dec
jp
push
xchg
ror
add
xor
cmp
movsb
inc
inc
addr16
mov
adc
jge
inc
xor
push
es
or
mov
or
aam
lds
and
cmpsb
pmaddwd
or
adc
fcomps
dec
rcll
xchg
jmp
and
outsb
insb
jnp
fiadds
sti
mov
and
les
or
mov
and
jp
inc
xchg
and
data16
adc
push
jne
es
dec
lahf
jno
jae
mov
add
bound
sub
call
inc
jae
fidivs
shl
mov
or
fwait
or
dec
sarl
xor
stos
pop
out
inc
sbb
dec
add
enter
pop
test
mov
pop
iret
pop
cmpsb
and
push
setae
jmp
mov
cmpsb
jbe
xchg
and
lcall
sti
xchg
imul
aam
sbb
shrl
xchg
push
push
add
rcl
jne
addb
jb
mov
push
pop
inc
xor
cmp
wrmsr
inc
es
jbe
jae
ja
mov
cltd
push
lret
xchg
jae
or
cld
xchg
loopne
les
repnz
gs
test
jg
adc
inc
orb
mov
sti
jb
inc
xor
adc
mov
or
mov
cld
popl
cwtl
cmp
mov
fcmovbe
sahf
cltd
jns
jnp
mov
repnz
cli
sbb
aad
dec
in
xchg
dec
sti
pop
int
add
fwait
xchg
mov
lcall
cmpl
sub
js
push
push
mov
outsb
xor
fdivs
xor
jmp
aam
into
sbb
hlt
sbb
add
mov
dec
test
sbb
xor
in
cmp
pop
lea
xchg
dec
add
adc
push
dec
fsub
je
push
sahf
lcall
in
out
rcll
mov
stc
inc
scas
cmc
dec
pop
or
fsubs
insl
mov
pop
inc
fisttpl
hlt
in
push
xor
stos
mov
mov
jmp
mov
push
pop
out
adc
add
in
mov
xor
adc
ds
xchg
mov
in
ljmp
pop
or
adc
cwtl
fwait
mov
aam
jno
jo
jg
insb
push
fstl
shl
xchg
jae
shl
lods
xor
mov
and
insb
dec
test
jae
stos
mov
xchg
shl
sub
add
pusha
pop
jbe
pop
xchg
mov
jno
push
lahf
mov
loope
stos
adc
dec
aam
mov
cmp
js
pop
adc
jne
dec
pop
cld
xor
push
es
jg
and
loop
jb
pop
dec
and
stos
fstl
mov
shlb
enter
sti
into
pop
xchg
mov
and
pop
sub
mov
mov
stos
jle
mov
lret
xchg
fs
dec
ja
lret
dec
push
mov
les
or
decl
loope
cltd
outsb
xor
mov
je
popf
sub
lahf
jae
filds
or
mov
negl
sbb
mov
sub
push
dec
lea
inc
hlt
cmpsl
and
mul
dec
dec
inc
mov
push
or
sub
int3
adc
lock
or
inc
adc
adc
hlt
fstpt
add
aaa
xor
cmp
ds
jb
dec
cmc
std
data16
mov
push
sbb
in
xor
out
dec
mov
pop
cmp
sbb
mov
ret
inc
aaa
or
cld
dec
adc
out
sbb
outsl
rolb
int
xor
dec
add
push
lahf
arpl
cmp
jge
stos
popa
fs
out
loop
aam
sub
cmp
pop
rolb
sti
fnstenv
loop
jae
dec
ljmp
fistl
or
leave
jno
cmp
mov
lret
mov
cmp
dec
mov
cld
mov
sbb
mov
stos
and
mov
loop
and
inc
lahf
mov
dec
adc
adc
xor
scas
mov
out
fcmovbe
pop
test
or
or
rcrl
orl
out
mov
gs
pop
inc
xchg
xchg
pushf
out
sub
and
push
movsb
lock
cwtl
mov
clc
bound
or
sbb
adc
sbb
push
pusha
adc
fwait
push
sbbl
cmc
lret
sti
pop
stos
fimuls
insl
push
push
cmc
mov
mov
insb
das
push
jmp
mov
mov
cwtl
fs
cmp
syscall
das
inc
inc
xor
ljmp
add
sti
inc
jge
mov
test
in
xor
jnp
ja
or
in
add
sub
fdivl
ljmp
lcall
sbbb
mov
adc
inc
lods
xor
sub
arpl
repz
jnp
shlb
das
mov
mov
das
inc
loope
pop
dec
enter
xor
insl
mov
in
ja
ds
testb
aas
imul
mov
gs
cs
push
xchg
in
das
loopne
insb
in
lret
cli
out
inc
insb
jae
dec
sub
movsb
mov
or
nop
ret
bswap
xchg
fidivl
adc
cmp
xor
sub
jns
and
sub
jge
push
jp
mov
sbb
out
jl
frstor
daa
cmp
jno
jecxz
adc
push
sub
rcrb
iret
and
stos
dec
pop
mov
xchg
sub
lds
ja
xor
mov
xor
xor
pop
mov
dec
fnstsw
sbb
mov
lahf
xchg
sbb
add
add
shrb
jmp
lea
clc
xor
mov
enter
fs
in
adc
cmpsl
push
xor
jb
hlt
sarl
push
cmc
ret
and
es
xchg
adc
imul
inc
and
jl
stos
push
adc
in
je
addr16
jmp
test
aas
dec
push
roll
loope
push
sub
push
sbb
popf
mov
xor
iret
loop
mov
cli
mov
data16
pop
xchg
neg
push
test
inc
cmp
imull
dec
push
add
dec
jae
jnp
mov
sti
sbb
sbb
and
jl
lahf
outsb
cmc
inc
les
xor
push
xor
push
mov
stos
adc
cwtl
push
jmp
cltd
leave
jge
movsb
test
into
fdivs
cmc
clc
add
in
ret
or
es
sahf
ljmp
cmpsl
clc
or
cmp
out
xchg
ds
pop
adc
mov
sbb
inc
mov
mov
push
test
mov
in
repnz
iretw
lods
adc
push
ss
aad
sbb
push
into
add
push
jbe
popa
push
je
movb
add
int
aam
adc
fsubl
mov
out
call
xor
and
cwtl
ret
sbbb
and
mov
lods
xor
xchg
dec
cmc
adc
jb
jle
test
add
cltd
mov
sbb
inc
cli
pop
push
mov
dec
cmp
xchg
test
std
test
scas
or
jle
mov
jo
aad
mov
repz
sti
lcall
popa
pop
push
out
inc
imul
cwtl
add
add
cmpsl
push
ficomps
jo
int
xchg
das
xchg
repnz
frstor
ds
inc
and
scas
xor
sbb
pop
in
out
movsb
add
loope
cmp
mov
xchg
pop
lcall
clc
aam
mov
xor
loop
add
jecxz
cmc
push
scas
ljmp
lock
cmp
jno
xor
xor
adc
push
mov
fcoml
jno
lds
stc
mov
cmp
or
push
popf
shl
je
movsl
pop
mov
xchg
repnz
fisttpl
sti
dec
and
ljmp
sub
push
cmpsb
mov
mov
stos
adc
ds
push
scas
pop
loopne
roll
fstl
ret
or
pop
faddl
jo
lahf
int3
cmp
xor
inc
aas
lret
jecxz
in
rcrb
push
push
cwtl
mov
cltd
roll
push
in
shr
sub
imul
cmp
jb
or
dec
add
lea
je
sbb
jle
mov
adc
shl
jb
push
out
hlt
les
ljmp
test
xchg
sub
sub
in
mov
mov
roll
add
scas
cmp
sbb
jmp
lock
rclb
adc
cmp
gs
insb
mov
scas
sbb
je
pop
dec
xchg
inc
fwait
ds
imul
adc
scas
mov
test
lcall
popf
sub
outsl
nop
movsb
mov
stos
sbb
xor
and
cmc
mov
and
or
xlat
mov
pop
es
addr16
cmpsl
adc
hlt
mov
or
sub
fstpl
cmp
add
pop
push
fistpll
sbb
mov
ljmp
shl
adc
icebp
adcb
pop
imul
lahf
hlt
aad
or
lea
lds
xor
sub
inc
clc
xor
ljmp
jp
add
popf
in
push
add
lahf
out
fwait
xor
and
cmp
mov
jns
es
je
adc
std
push
imul
mov
sbb
lea
hlt
or
add
clc
push
or
mov
fistl
xorb
sbbl
loop
shrb
inc
pop
lods
adc
pop
rolb
inc
add
lods
or
or
ljmp
lahf
push
std
ret
push
dec
dec
addb
mov
add
loope
push
clc
insb
push
sub
js
pop
insl
pop
xchg
int
or
nop
out
outsb
dec
push
out
mov
adc
jnp
rcrl
sbb
sbb
sub
jno
aad
sbb
sarl
xor
lds
fnstenv
mov
cmpsl
jns
mov
xchg
xchg
imul
lods
sti
sub
psllq
cwtl
xchg
lcall
mov
push
mov
movsb
mov
push
std
movsl
repnz
mov
add
add
xchg
xor
mov
fneni(8087
sbb
sub
pop
test
clc
sub
and
ljmp
gs
fldcw
lds
lea
cmp
xchg
stc
jo
mov
mov
dec
sub
jecxz
sub
pop
and
sub
xchg
loope
push
push
and
sbbl
sub
cmp
lcall
iret
cmpsb
xchg
cmpsl
xchg
dec
ret
inc
shrb
pop
add
arpl
or
push
push
xchg
mov
pop
popa
fmuls
xchg
sbb
aad
adc
fdivs
ja
pop
pop
fistps
cltd
push
or
mov
test
jge
int3
jmp
mov
test
or
insl
stos
mov
or
clc
mov
popf
insl
xchg
cmp
mov
push
movsl
ret
loop
mov
push
fs
sti
sysret
scas
lock
out
sub
or
std
adc
cmc
or
lods
int3
in
jo
mov
aas
add
ret
dec
jns
int
mov
xchg
cmp
fadd
sti
mov
jnp
sahf
stos
sbb
mov
cmp
stc
imul
lcall
xchg
lods
xor
sub
fisttps
sub
repz
jbe
jl
push
lahf
cmp
or
lods
gs
mov
nop
push
out
dec
push
dec
fildl
adc
or
in
cmp
movsb
add
push
mov
push
nop
xchg
sahf
inc
test
into
insl
gs
std
push
adc
xor
push
cmpsl
fstpt
out
bswap
mov
std
mov
push
mov
ret
dec
sarb
outsb
addl
mov
mov
xchg
mov
test
and
clc
dec
loopne
mov
loope
iret
test
inc
loopne
xor
loopne
stos
add
push
jnp
cwtl
cmpsb
push
adcb
pop
add
mov
mov
cld
ret
cmp
mov
inc
jmp
jl
sbb
cmp
xlat
mov
push
jne
jecxz
mov
mov
scas
jne
gs
mov
mov
xor
mov
or
or
mov
jmp
fisubs
and
les
cmp
or
jge
jl
push
cmc
test
mov
add
pop
rorl
sub
aad
addr16
out
mov
cld
enter
in
les
insb
or
loop
iret
pop
daa
mov
enter
cmpsb
and
imul
data16
jnp
or
inc
dec
push
xchg
into
lret
xor
dec
mov
in
clc
or
cmp
scas
loop
cwtl
mov
andl
mov
movsb
xor
in
cmp
jb
lods
in
add
cs
push
sub
mov
jl
repz
pop
adc
das
dec
dec
gs
sub
jl
stos
popa
push
lret
mov
stos
mov
xchg
jge
idivl
mov
xor
dec
sbb
in
dec
sti
xchg
and
inc
stc
cltd
cmp
mov
jmp
popl
nop
aaa
frstor
int
push
rcll
cmp
push
mov
je
fsubrs
outsl
in
jnp
addr16
fcmovne
in
cmp
in
adc
dec
lods
pusha
arpl
inc
jnp
or
mov
rorl
scas
xchg
pop
xor
pop
stos
jp
pshufw
fadds
adc
cmc
pop
cld
jb
jae
add
fstpl
push
imul
je
insb
cld
add
add
adc
inc
ret
push
pop
sti
mov
jns
cmp
shl
lock
in
sahf
mov
push
lcall
imul
jmp
jno
ljmp
mov
rcll
repz
out
inc
gs
dec
push
out
adc
mov
out
movsl
or
xor
enter
in
adc
mov
pop
repnz
inc
and
popa
xchg
lret
dec
andl
enter
fsubrl
fcoms
jp
lret
ljmp
jne
dec
test
fwait
lcall
imul
insb
out
cmpsb
mov
xchg
out
shl
fs
mov
pushf
rcrb
repnz
insl
mov
pop
outsb
mov
aaa
mov
mov
pop
cmpsl
scas
enter
inc
lahf
add
push
inc
das
mov
addr16
nop
aaa
sti
jle
cmp
jl
add
mov
shl
repz
add
dec
jmp
scas
push
add
cmpsb
pop
mov
mov
push
rclb
dec
adc
jecxz
loop
mov
loop
in
dec
xchg
out
int
sub
pop
dec
in
pop
sbb
and
push
mov
loope
mov
insb
xchg
mov
pop
dec
rorl
sbbl
or
sbb
pop
clc
mov
jbe
xor
sbbl
inc
cmp
ja
rorl
or
divb
into
pop
cmp
sbb
int
pop
inc
sti
int
or
pop
icebp
pusha
sub
or
push
ja
fisttps
mov
xchg
adc
mov
aas
repnz
or
and
shl
lods
nop
fidivs
lret
mov
jb
mov
int3
arpl
stos
xchg
xchg
std
xchg
mov
stc
mov
xchg
mov
shlb
jle
pop
pop
movsb
rorl
xchg
shll
and
sbb
inc
ljmp
out
mov
mov
pop
mov
mov
xor
or
in
xor
fcomp
push
dec
fsubs
cmc
jbe
cld
or
jno
cmp
xchg
cmp
daa
lret
rolb
mov
je
out
test
in
pop
shl
xor
sub
jne
loope
test
xor
imul
aaa
cld
mov
jecxz
jge
mov
das
dec
ljmp
rolb
jl
std
loopne
scas
out
pop
or
push
fildl
pop
jmp
cmpsl
pop
mov
sbb
sub
nop
or
stos
cmpsl
adc
lea
das
mov
xor
jne
or
jge
or
stos
dec
xchg
dec
popf
pop
mov
in
cmp
add
push
loop
enter
es
cmp
imul
add
mov
sub
mov
daa
xchg
and
lock
jle
enter
in
clc
and
mov
repz
adcl
daa
and
and
cli
rorl
jns
mov
imul
inc
notb
scas
int
xchg
test
lahf
adc
out
cmp
and
inc
pushf
or
sbb
sbb
int
add
mov
jne
adc
mov
or
push
in
scas
lds
xor
stos
and
rorb
pop
xor
mov
push
push
jne
mov
push
mov
std
add
ror
iret
sbb
cmpsb
mov
add
add
jne
dec
sbb
xor
push
pusha
xchg
pop
and
xchg
inc
mov
or
imul
mov
jb
cmpsl
hlt
shr
adc
aaa
enter
fprem
inc
and
mov
test
loopne
addr16
clc
jge
mov
loope
sahf
jg
jecxz
and
pop
int
mov
lods
or
pop
mov
rcrl
dec
in
movsb
or
negb
addr16
push
leave
mov
cmpsb
mov
adc
jge
pop
or
jne
adc
cld
inc
add
ja
mov
pop
and
sub
out
stos
dec
xchg
pop
mov
cmpb
sbb
aas
push
and
mov
dec
insl
jae
inc
test
cmp
xor
add
enter
out
loop
cmp
je
adc
icebp
cmpsl
xchg
xchg
push
lret
add
cmpsl
pusha
in
sbb
out
and
pusha
fldl
sub
sarl
call
ret
xor
pushf
adc
outsb
cltd
mov
stos
push
movsl
dec
out
fmuls
fsubrs
ljmp
mov
nop
ljmp
inc
imul
insl
xor
imul
fstps
xor
xchg
pusha
sub
xor
pop
cmp
insl
dec
xchg
loope
xorb
xchg
jb
test
xchg
scas
inc
push
inc
js
fs
xor
mov
add
int
jecxz
sub
lret
popf
aam
call
clc
movsl
adc
mov
jp
mov
aam
and
jge
roll
arpl
mov
xor
and
repnz
call
xor
jb
rcll
xchg
lea
adc
mov
sub
stos
mulb
std
stc
push
loope
call
aas
aas
aam
jb
sub
in
jg
inc
data16
push
dec
adc
and
mov
js
sbb
loope
sbb
fwait
div
les
js
mov
sbb
pop
addl
jle
pop
jno
imul
mov
adc
jmp
jo
mov
out
repnz
ret
out
cmp
mov
add
inc
movsb
xchg
out
jle
pusha
cli
cli
rol
mov
fmul
or
movsl
aam
xlat
add
adc
cmpl
or
cmp
aas
mov
inc
and
lret
rclb
adc
insb
js
mov
cs
push
imul
push
add
jne
sub
cmp
push
inc
inc
outsb
mov
push
jnp
data16
mov
or
xchg
decl
pop
jl
inc
mov
lret
xor
push
sbb
push
mov
arpl
push
cmp
xchg
jb
ja
inc
push
or
in
pop
cltd
sbb
cs
ljmp
mov
pop
push
cmp
std
cmp
inc
daa
cmp
pop
test
repz
shrb
push
mov
arpl
ds
pop
loopne
adc
xchg
push
push
test
pushl
shll
jno
sbb
int3
sub
int
jge
andl
cmp
pop
mov
and
push
mov
pushf
cmpsl
xchg
sub
xchg
sbb
mov
xlat
fwait
push
rorl
and
mov
xchg
push
mov
push
sub
push
pop
pop
jle
add
xor
arpl
fldenv
inc
sbb
dec
and
lock
or
and
scas
xchg
push
les
nop
loope
inc
xor
xor
add
mov
or
iret
scas
stos
or
jp
push
jns
jl
xchg
inc
sarl
popf
out
and
aas
jns
pop
mov
into
sub
ljmp
in
pusha
pop
rolb
pop
cmpsl
jge
mov
mov
mov
or
into
fisubrs
arpl
mov
dec
into
enter
popa
mov
sti
stos
xchg
data16
mov
mov
insb
add
lret
xchg
rcrl
dec
inc
adc
pop
stos
imul
dec
push
adc
lods
or
xor
pop
pop
adc
sahf
hlt
or
scas
cmp
adc
decb
repz
and
cmp
mov
scas
adc
mov
mov
loop
jecxz
cmpsb
and
fcomp
dec
jl
shlb
jle
clc
mov
in
adc
pop
sbb
fisubrl
dec
out
cmp
negb
hlt
fistpl
shr
jbe
cmpsl
les
fsubp
push
and
mov
orl
aas
imul
scas
pop
mov
mov
pop
push
lcall
ljmp
fmull
mov
add
push
pushf
push
mov
push
repnz
jmp
or
lcall
push
iret
hlt
bound
mov
sbb
or
xchg
and
adc
xchg
push
or
and
dec
cmc
adc
push
dec
ss
pop
enter
cmc
push
pop
aad
sti
insb
mov
popf
aas
in
xchg
pusha
sbb
loopne
in
aaa
cmpsb
sub
fstps
scas
dec
in
xchg
adcl
sti
mov
fwait
arpl
push
inc
cltd
xchg
ret
add
daa
jne
bound
adc
rclb
imul
pop
inc
insb
sbb
jge
pop
test
push
scas
pop
das
clc
into
adcl
and
adc
pop
inc
cmp
sub
lahf
mov
popf
dec
std
sub
or
dec
xor
les
jle
push
or
mov
shrb
pop
scas
sbb
dec
call
add
mov
jle
pop
fsubrl
fdivrl
pop
hlt
xchg
das
vfnmadd132sd
jns
sbb
into
jno
into
test
push
sub
jge
icebp
add
pop
cli
adc
sbb
sti
outsb
inc
shlb
adc
jmp
jl
cwtl
or
imulb
ret
popa
jb
int3
dec
and
mov
ret
ljmp
mov
bound
scas
pop
lret
xor
jae
lods
inc
jg
push
xchg
outsl
fisttpl
xor
mov
cs
add
xor
mov
mov
repz
fwait
test
mov
movsb
pushf
fsts
mov
pop
adc
insl
lahf
push
movsb
mov
xor
test
es
cmp
dec
pop
test
cwtl
adc
ss
sbb
mov
mov
mov
add
or
push
aad
pop
inc
add
test
es
test
test
mov
test
mov
xlat
cmp
test
lret
ror
jbe
not
jmp
outsb
insb
add
icebp
xchg
push
add
insl
std
add
add
lods
rcrl
lahf
or
scas
mov
andb
ss
pop
mov
loop
and
and
pusha
xchg
lock
or
inc
inc
out
stc
xchg
dec
popa
imul
shrl
fisubs
scas
sub
stos
scas
push
sub
mov
call
scas
out
mov
mov
adc
dec
hlt
jns
and
mov
inc
or
push
and
sbb
xchg
out
jno
xchg
idiv
shl
ljmp
jo
push
shll
and
dec
cmp
dec
jo
lds
cwtl
insl
bound
aas
imul
adc
sbb
mov
push
setns
inc
loope
ja
jg
jns
xor
bound
insb
inc
fildl
mov
cmpsb
sub
push
xchg
mov
aas
shl
or
jns
cmc
xchg
loop
cwtl
test
sahf
push
add
sbb
push
movsl
push
icebp
pop
in
sbb
ss
mov
aas
sub
mov
rclb
pop
fucomp
cld
imul
ret
and
mov
sbb
movsb
pop
ljmp
xlat
outsb
sbb
sub
adcb
icebp
test
pop
dec
mov
xor
adc
adc
ds
enter
mov
mov
or
ljmp
xchg
pop
mov
mov
scas
dec
loope
test
fbstp
data16
in
jle
pop
std
push
mov
out
jo
pop
pop
ljmp
iret
add
jne
inc
test
or
mov
shl
icebp
jecxz
jmp
xchg
lods
fdivs
sub
loope
xchg
test
daa
adcb
fiaddl
add
or
les
out
add
js
in
repz
push
adc
out
leave
sahf
pop
in
xor
sbb
mov
aad
aad
or
es
decb
inc
out
ljmp
push
das
cli
mov
movsl
fdivrs
sub
jnp
and
bound
adc
pop
ds
cmpsl
adc
dec
xchg
mov
pushw
pop
loop
and
push
inc
sub
inc
push
dec
cmp
jb
inc
into
fiadds
test
in
or
out
xlat
rep
aam
jp
inc
mov
jmp
xor
inc
adc
in
shlb
jg
rep
call
mov
jmp
cmp
repz
sbb
or
inc
and
scas
and
imul
loopne,pt
je
mov
cmp
jnp
movsl
jns
fidivrs
sub
ds
lcall
or
sub
test
mov
fdivrl
push
out
das
lods
outsl
push
scas
imul
xchg
push
fcomps
sub
sub
enter
cmp
cwtl
adc
nop
push
inc
pop
mov
pusha
test
push
aam
or
and
cmpl
sbb
or
iret
pop
sarb
inc
lret
out
sti
pushf
add
mov
sub
gs
aaa
mov
loope
loope
add
dec
adc
imul
push
mov
sti
cltd
cmpsl
jge
clc
adc
rcl
xchg
jns
inc
mov
jle
roll
mov
idiv
xchg
push
jae
dec
adc
rol
dec
dec
mov
testl
or
cmpsl
mov
stc
sahf
jns
loopne
xchg
jns
idiv
pop
je
loopne
psrad
xchg
cmp
or
repz
test
xchg
jne
shll
cmp
sarb
nop
xor
aam
test
test
jl
jns
iret
lahf
je
lret
subl
pminsw
aas
int3
loope
cltd
cwtl
mov
pop
lea
jmp
in
xchg
mov
cmp
cmp
shrl
aaa
imul
in
xchg
push
dec
mov
in
repz
pop
sub
or
dec
out
stos
adc
xchg
stos
lock
jl
push
sbb
pcmpeqw
int3
xor
fdivl
pop
dec
sbb
mov
push
sbb
mov
cmpsl
es
test
insb
test
mov
push
mov
adc
pop
push
adc
call
mov
lea
ds
mov
push
fldcw
aas
inc
rcr
test
sahf
cs
sub
lea
mov
pop
xchg
inc
jne
cltd
sbb
pop
jle
sbb
repz
xor
cmpsb
sub
insl
pop
add
dec
icebp
lock
test
mov
mov
fistpll
and
inc
mov
push
hlt
in
push
je
sbb
test
pop
push
fiaddl
and
jl
jnp
addr16
or
pop
jnp
inc
mov
fcomp
into
movsb
dec
fistpl
ficoms
int3
mov
jbe
insb
push
mov
and
icebp
out
cmp
push
dec
pop
cmc
push
sbb
inc
push
inc
push
jne
in
and
sbb
pop
push
cltd
scas
daa
out
mov
sbb
pop
sub
test
cmpsl
push
xchg
jecxz
pushf
into
add
loopne
jbe
fmull
and
mov
jmp
jb
iret
and
mov
adc
out
adc
xor
add
dec
pop
test
or
stos
push
dec
sbb
scas
xchg
nop
adc
rcrl
nop
jno
mov
adc
push
adc
push
test
cld
lret
and
pop
or
outsb
stc
pop
rcrb
xor
sub
push
sbb
adc
pushf
fnstsw
mov
xchg
xchg
pushl
stos
push
std
inc
outsb
divb
loop
outsl
sub
call
add
pop
lods
inc
or
in
push
push
fisubl
js
xchg
insl
fwait
int3
add
out
rcr
test
fbld
pop
adc
inc
jmp
int3
loop
cli
or
ret
fsubs
jle
jb
lock
xchg
mov
nopl
mov
scas
dec
xor
mov
xor
movsb
imul
insl
mov
in
dec
jge
ficompl
outsl
fidivs
inc
aas
lods
fidivl
mov
dec
loopne
int3
in
lods
mov
lret
push
vmulps
mov
cmpsl
push
cmp
into
push
out
push
xorb
push
add
mov
add
dec
mov
in
jns
add
and
rcr
mov
fucomp
aam
mov
mov
pop
lea
pusha
js
repnz
das
xor
dec
fld
cmovne
add
out
push
inc
xchg
loopne
movsb
das
mov
push
cli
and
mov
dec
mov
pop
push
lret
xorb
lret
enter
pop
daa
insb
lds
stos
imul
cmpsb
xchg
call
fidivrl
testb
mov
mov
pop
add
cmc
mov
cmp
popf
lds
push
mov
push
lock
adc
insb
or
out
cwtl
lock
adc
mov
jmp
cmp
insl
lock
mov
in
sarb
pop
xor
mov
mov
dec
loope
pop
cmpsl
dec
mov
xchg
xor
mov
loope
inc
int
push
mov
add
out
inc
and
adc
leave
fldcw
inc
mov
int
adc
insb
add
sub
add
rorl
pop
test
mov
inc
sub
loop
xor
imul
jns
dec
lods
pop
sbb
stos
inc
scas
dec
inc
iret
xor
repz
das
push
add
adc
push
loope
out
out
cmp
jmp
outsb
or
dec
pop
add
pop
sub
mov
push
stc
dec
pushf
bound
mov
add
insl
xchg
repz
add
jge
sbb
lahf
scas
adc
ja
jbe
out
scas
push
sbb
dec
test
push
ja
jp
cmp
icebp
adc
stos
in
bswap
inc
mov
push
sbb
add
cmp
add
and
xchg
jno
push
out
cltd
js
add
shrl
push
push
rep
pop
jb
xchg
in
cmpsl
adc
inc
cmp
push
popa
leave
and
nop
inc
pop
xchg
fsubr
pop
or
jl
mov
add
out
inc
imul
and
sbb
lea
sbb
push
call
jmp
mov
arpl
pmovmskb
sbb
les
dec
cs
out
das
inc
jge
dec
pushf
fs
push
jb
stc
push
icebp
jmp
pusha
mov
push
daa
xlat
push
and
int3
push
mov
jae
xchg
sub
mov
lret
sub
test
pop
adc
popa
mov
in
and
xchg
push
mov
dec
sub
sar
mov
pop
popl
iret
xor
xchg
cmpsl
call
cmp
adc
pop
mov
or
pop
pop
cs
pusha
mov
enter
mov
mov
push
jmp
add
fmuls
ja
push
fmul
sarb
push
clc
sbb
sub
jb
add
and
lds
repnz
icebp
outsl
xor
and
call
lahf
jecxz
sarl
pop
iret
rclb
lret
imul
adc
add
sbb
adc
imul
mov
out
popf
mov
xchg
push
popa
cld
pop
xchg
inc
xor
in
sbb
xchg
jno
adc
mov
jb
bound
orb
jmp
xlat
ret
arpl
out
fimuls
mov
dec
mov
cwtl
fmuls
mov
xor
imul
ficompl
ljmp
ret
rclb
xchg
xchg
sbb
or
inc
dec
mov
shll
mov
push
aas
notl
bnd
jae
adc
dec
idivl
cmpsb
out
imul
fldenv
cmp
xor
ja
sbb
mov
scas
ja
test
xlat
in
mov
idiv
adc
fwait
lds
jp
js
mov
movsb
shlb
sbb
fisttpll
mov
gs
int
sti
lock
and
pop
ficompl
or
gs
xor
xor
ror
lret
pop
mov
das
cwtl
add
pop
outsl
in
pushf
pop
in
lret
push
jno
je
test
cwtl
push
cltd
lahf
test
int
lcall
repnz
dec
fimull
loope
psubsb
pop
test
sbb
xor
fiaddl
add
mov
lea
aad
jno
ss
xchg
add
sahf
mov
adc
cltd
sub
movsl
inc
aad
lods
sbb
jp
imul
push
adc
movsl
push
and
les
leave
mov
xor
ss
pop
icebp
pop
je
cs
jg
std
jo
sti
push
out
arpl
jo
enter
jmp
je
add
cli
shl
mov
sub
mov
fucom
int3
jg
rorb
mov
add
push
outsl
sub
out
inc
sbb
mov
jg
filds
lcall
lock
add
or
cltd
lret
xchg
or
mov
dec
test
ficomps
dec
inc
mov
and
add
jmp
or
and
xor
xor
pop
movsb
xchg
cmp
sub
jo
test
add
cmc
add
jg
inc
mov
dec
test
lret
lods
leave
sbb
out
lea
xchg
orb
data16
mov
mov
rorb
adc
adc
shl
pop
in
jae
inc
test
sti
or
or
mov
ret
push
je
mov
xor
pop
sub
aad
inc
jl
pop
das
xor
xor
scas
es
xor
mov
sub
loop
sbb
outsl
aaa
pop
fidivl
and
mov
lahf
scas
out
push
cld
ljmp
in
fcomps
inc
lods
jle
xorl
cmp
rorb
mov
jnp
cwtl
cmp
hlt
pop
pop
adc
pop
add
repnz
rorb
jno
mov
ret
adc
cmp
sbb
movsl
movsl
jns
cmp
in
mov
cmpb
mov
pop
or
xchg
cltd
add
test
imull
fimull
out
sub
jl
insb
adc
xchg
imul
xor
je
data16
or
add
sbb
xor
xchg
and
insb
scas
movsb
pop
dec
fisubrl
lcall
xchg
in
out
mov
fidivrl
inc
mov
add
mov
jne
test
jae
scas
push
mov
out
test
push
sbb
add
data16
stc
dec
jecxz
leave
lock
jmp
out
ret
shr
sub
icebp
sbb
icebp
in
inc
push
sbb
or
loop
mov
sbb
mov
rorb
jno
icebp
out
xchg
dec
adc
mov
fldl
rorb
ffree
or
cmp
sbb
scas
lahf
loop
imul
adc
mov
cmp
test
and
and
dec
push
shrb
push
jle
test
addr16
test
push
jns
mov
stc
rolb
lea
xorl
adc
or
inc
jge
add
xchg
inc
jp
shr
clc
or
mov
xchg
adc
arpl
jp
out
xor
mov
enter
pop
sbb
test
aam
mov
adc
aam
fsubrl
inc
outsl
insb
bound
mov
xchg
clc
or
pop
mov
add
sti
lods
sbb
ss
popa
icebp
jo
mov
push
jge
or
insb
stos
enter
dec
pop
xor
cltd
mov
and
jnp
add
inc
enter
iret
clc
cmp
mov
jp
ret
lret
outsl
pusha
movsl
xchg
rcr
divb
push
mov
sarl
dec
outsb
pusha
mov
pop
je
in
sub
xchg
xchg
cmpsl
xor
sub
mulb
push
pushf
das
adc
inc
jb
xchg
fisubrs
shll
xchg
aam
mov
xor
cmp
xchg
mov
fwait
push
gs
push
add
pop
out
xor
mov
sub
mov
cmpsl
jmp
inc
enter
or
or
pop
test
nop
cld
sbb
outsl
mov
or
push
jbe
fucomp
add
mov
outsl
adc
xor
ljmp
out
add
xor
sub
fistpll
or
out
xor
mov
add
movsb
cmp
cmp
in
outsb
movsb
hlt
xchg
cmpsl
mov
sub
pop
or
mov
lahf
push
push
cmp
push
into
add
daa
fs
xchg
bound
push
insb
and
push
popf
xor
gs
test
lods
lock
ror
ss
fildl
adc
imul
jg
insl
out
insl
arpl
mov
fimuls
cmp
and
mov
mov
cmpsl
dec
cmc
jb
loopne
mov
stos
or
mov
clc
clc
adc
cmp
loopne
stos
push
pop
sub
fimull
lahf
mov
sbb
mov
lahf
in
and
sti
cs
ffree
out
sub
xor
cmp
sub
jae
xchg
insl
cwtl
pop
pop
ss
sub
notb
rolb
jo
movb
pop
pop
fs
loopne
push
das
mov
decb
dec
andb
xorb
xor
repnz
icebp
xchg
xchg
inc
mov
shrl
into
xor
jbe
jecxz
mov
gs
pusha
out
push
mov
dec
frstor
loop
xor
mov
lcall
lock
lods
aaa
pop
addr16
orl
lea
mov
sub
test
push
sbb
jmp
xchg
xchg
test
sub
fsts
mov
cmpsl
enter
negb
or
popf
pusha
mov
sbb
and
std
aas
shr
std
cmp
test
pusha
jl
xor
inc
fisttpl
xchg
or
inc
push
cmp
adc
cs
enter
pop
sbb
sbb
pop
sub
fmul
xchg
imul
fdivrp
add
mov
out
sub
mov
popf
jo
js
movsl
xlat
push
enter
pop
sub
mov
or
mov
sbb
dec
bound
aad
cli
dec
mov
fs
cltd
add
mov
mov
push
aas
inc
xchg
mov
adc
pop
mov
imul
sbb
mov
rorl
test
push
and
inc
idivb
pop
adc
aam
inc
jae
mov
mov
jmp
imulb
pop
inc
jmp
repnz
mov
add
mov
adc
into
insb
fimull
and
popl
adc
push
mov
fdivs
out
sbb
lds
mov
mov
mov
outsl
jb
shlb
pop
pop
dec
scas
pop
or
and
jns
psubw
push
icebp
pop
and
rclb
imul
dec
mov
mov
scas
add
xchg
cmp
ret
adc
fildll
add
sarb
pop
push
cmc
sub
add
repz
jae
xchg
rclb
in
jg
sbb
adcb
xlat
jmp
cmp
push
cmpsl
add
insl
jb
mov
roll
gs
inc
sti
dec
push
lret
mov
or
repnz
push
pop
or
shrb
ljmp
add
lds
aas
cmpsl
cld
shrl
lret
in
mov
fistps
xchg
fldl
xchg
dec
sub
mov
push
inc
mov
push
jnp
mov
inc
dec
roll
cmpsb
mov
int3
cmp
dec
jbe
jle
leave
or
xchg
imul
or
lea
dec
test
sti
int
jae
jle
cmp
xchg
popf
jbe
dec
int
movsb
jecxz
and
mov
fucomi
in
mov
lret
out
pop
in
inc
subl
sti
in
push
adc
leave
lret
dec
lea
dec
push
and
pop
repnz
bsr
sub
push
sbb
add
fldenv
aaa
lock
shll
add
movsl
pop
lds
mov
mov
push
int3
shl
pop
iret
push
mov
lock
fdivrs
pop
xlat
or
xchg
rcll
dec
popf
jae
cmp
xchg
insb
add
dec
sbb
xor
mov
jecxz
mov
cld
rol
sbb
or
xchg
outsl
and
add
xchg
enter
mov
mov
sbb
ret
add
mov
inc
push
in
dec
add
dec
jle
pop
psubb
daa
adc
scas
and
subl
mov
mov
cs
xor
xchg
pop
jbe
test
mov
cmp
lret
sbb
addr16
adc
mov
xchg
jle
out
movsl
mov
sti
jle
and
mov
pop
and
movsb
imul
xchg
call
push
mov
or
xchg
mov
idivl
jmp
pushf
jecxz
inc
gs
shlb
dec
xchg
or
cmp
rcrl
popa
xchg
outsl
enter
fmul
sub
icebp
lods
lea
xor
add
divl
xor
dec
decl
xor
loope
stos
fnsave
sbb
int3
and
fldl
test
xchg
jb
repnz
outsb
insb
adc
sbb
sti
jle
xor
fs
xorl
ja
cli
pushf
roll
adc
popa
inc
add
mov
lret
mov
enter
add
mov
xor
sti
in
sbb
cmp
xchg
add
lret
in
pop
pusha
sub
jmp
inc
loope
push
and
or
sub
pop
dec
insb
out
xor
leave
in
mov
dec
clc
loopne
mov
fwait
mov
insl
aaa
insb
bound
addr16
jo
add
fnstsw
xor
push
xchg
out
sub
jno
das
jno
out
adc
in
dec
mov
jg
push
addr16
pop
cld
popf
out
movsl
stos
test
leave
jmp
mov
and
data16
mov
pop
cmp
push
push
cld
movsb
sahf
pusha
cld
inc
rcrb
daa
mov
add
add
jl
cmp
mov
repz
push
rclb
cli
mov
or
out
or
pop
cmpsb
fiaddl
cmp
push
push
lea
outsl
jp
mov
ret
insb
pusha
and
inc
push
jb
xchg
je
loopne
scas
cmp
mov
jge
push
leave
mov
jecxz
cmp
mov
mov
test
sahf
loope
inc
rclb
or
mov
pop
fwait
data16
out
mov
and
jb
call
test
cmpsb
mov
xchg
sbb
mov
decl
dec
scas
inc
ja
arpl
jo
fmul
ret
jge
testl
xchg
cmpsl
into
jbe
and
mov
clc
inc
je
sbb
int
lods
dec
jae
inc
icebp
xor
pop
sub
or
popa
pusha
into
je
jnp
sub
dec
dec
xchg
add
ds
or
icebp
mov
popf
pop
sub
imul
leave
pusha
adc
loop
inc
push
mov
enter
outsl
fimull
dec
ficomps
and
or
addl
jge
test
pusha
arpl
call
push
cmp
pushf
fs
sti
or
xor
popa
adc
jno
cmpsl
adc
aam
pop
cmp
lods
fcoms
les
jnp
test
jb
push
repnz
xchg
ds
xor
fimull
out
mov
int3
pop
adc
adc
cld
mov
in
mov
xchg
jnp
ds
lods
sub
xchg
dec
jp
scas
clc
xchg
and
fcmovb
mov
pushf
jb
enter
sbb
jb
mov
inc
repnz
mov
lock
pop
dec
xor
inc
cs
lret
cmpsl
sbb
mov
pop
push
gs
xor
test
mov
shl
cmpsl
jno
pop
lods
mov
lods
jnp
sti
cli
dec
pusha
add
in
cmp
xchg
arpl
xor
pushf
in
mov
out
add
jno
shll
movsb
ljmp
inc
add
inc
jno
jns
mov
sbb
jo
in
add
les
daa
or
push
inc
je
dec
inc
pop
xor
sbb
cld
mov
xor
sub
cmp
lods
inc
jno
or
outsl
test
dec
outsb
xchg
enter
mov
push
in
add
int3
je
push
jmp
mov
orb
ljmp
push
outsl
cmpsb
sub
xchg
mov
arpl
jo
outsb
addr16
fsubp
jl
jno
sbb
mov
iret
inc
enter
sbb
xor
jle
call
add
lret
insl
pop
mov
cltd
sbb
xor
sub
or
cmp
ret
push
getsec
fsubrs
mov
xchg
mov
ljmp
mov
and
icebp
cltd
mov
mov
mov
sub
hlt
jmp
xchg
xchg
xlat
lock
pop
lahf
mov
dec
out
sbb
iret
inc
mov
jne
mov
fcoms
inc
jle
mov
jg
incb
add
cmp
out
mov
cltd
xor
clc
mov
mov
int
das
xchg
aad
loopne
pop
dec
lock
or
jp
in
jno
fisttps
cs
mov
das
fs
mov
dec
popf
nop
fimuls
idiv
mov
lcall
pop
lcall
pop
stos
inc
cmp
cmp
adc
stos
push
mov
nop
jmp
mov
sub
pop
xchg
popf
add
rcrl
inc
push
orl
mov
adcb
cmpsl
pop
jb
call
push
ds
cmc
insl
inc
push
lret
mov
jae
mov
jne
mov
ds
adcl
xorb
sbb
dec
xchg
xchg
mov
jle
lcall
repnz
loopne
add
enter
cltd
andl
xorb
dec
sbbb
out
cmp
mov
push
or
je
test
ret
call
bnd
lea
inc
ds
test
ja
jecxz
and
int3
dec
sbb
jb
inc
ljmp
push
dec
shll
das
fistl
insl
sbb
popf
ret
pop
xchg
xchg
in
pop
jg
jge
cli
adc
add
xchg
pop
orl
jo
adc
outsl
xchg
lret
mov
push
fcoml
mov
fnsave
rorl
lret
je
sti
xor
cmp
loop
xchg
jne
loopne
mov
fcomps
scas
outsl
add
or
scas
shl
sbb
out
aaa
mov
jp
sub
and
jne
and
cmp
test
das
jbe
ret
fadds
fmul
inc
test
xchg
ficoml
xchg
mov
mov
insb
es
iret
lcall
mov
cld
daa
insb
sarb
gs
pop
cmp
mov
daa
stos
mov
je
enter
push
inc
jge
mov
lods
mov
mov
mov
jp
jb
sbb
jge
sbbb
jmp
aad
lret
ljmp
cmp
sbb
jno
cmp
fidivrl
jmp
sti
iret
mov
jecxz
xchg
xchg
pop
loopne
nop
jge
pop
or
pop
call
push
mov
call
loop
mov
mov
dec
movsb
pop
mov
cmpsb
pop
sub
lods
mov
ficoml
pop
pusha
jae
push
in
cmp
movsl
cmp
loope
test
pop
xor
mov
loop
jns
or
xor
add
inc
aas
jo
xor
jae
lds
daa
sbb
xor
pop
cld
mov
ret
and
mov
movl
or
fcomps
insl
scas
repz
insl
into
lods
dec
bound
mov
inc
pop
xlat
jnp
mov
inc
imul
fst
xchg
push
fadd
stos
jns
mov
test
icebp
ljmp
bound
sbb
test
or
xchg
add
lahf
sti
fcmovnu
and
push
lds
ja
adc
add
out
nop
sti
pop
adc
es
or
sub
jecxz
idiv
jbe
out
xchg
or
movsb
xor
jbe
popa
and
jecxz
cmp
sub
adc
cmp
int3
out
dec
cltd
pop
push
je
popa
aaa
test
inc
mov
xchg
inc
ret
cmpsl
xor
pop
jbe
mov
sub
in
sub
push
sub
sti
out
push
xchg
movsb
push
push
mov
or
mov
daa
push
adc
test
and
rolb
das
in
xchg
push
faddl
rep
mov
pop
inc
add
push
and
and
inc
lods
mov
adc
adc
add
mov
pushf
popa
popa
icebp
fadd
push
or
sub
adc
arpl
rsm
jl
inc
outsl
ljmp
imul
xor
pusha
lahf
test
xchg
mov
jg
popf
cmc
adc
jge
or
cmp
pop
or
stos
xor
pusha
mov
xchg
hlt
sub
in
sbb
inc
xor
add
xor
xchg
and
in
mov
xchg
push
icebp
in
or
dec
fbstp
dec
xchg
popf
sbb
jg
outsb
or
je
xor
push
mov
out
rclb
and
xlat
fnstenv
inc
pop
cmpsb
xor
dec
mov
xchg
in
jp
outsl
push
ljmp
fwait
scas
je
cmp
enter
sbb
cmp
imul
cltd
stos
adc
adc
or
mov
scas
ljmp
add
popa
push
inc
mov
sub
movsl
xor
xchg
jb
pusha
cs
jae
movsb
cmp
out
xor
and
or
mov
pushf
aam
lcall
outsb
fwait
inc
ss
call
or
repz
shl
push
outsb
xor
jecxz
in
adc
pop
cmpb
adc
sbb
xor
xchg
xor
lcall
or
inc
lret
xor
lcall
mov
push
iret
inc
ret
fdivrs
sbb
pop
push
cli
popf
adc
inc
je
fwait
mov
dec
mov
shll
stos
aas
mov
movswl
sarl
adc
or
rolb
shlb
fldl
and
adc
pop
ret
mov
jge
or
subl
imul
jg
sbb
stc
mov
push
div
sub
clc
pop
dec
js
pop
pop
fwait
pop
jge
bound
and
mov
add
jo
sahf
push
sbb
add
jbe
inc
jle
sbb
xchg
push
jp
xchg
push
call
xchg
cwtl
test
repnz
pop
adc
and
sub
xor
std
jbe
roll
or
add
aad
call
cmp
xchg
pusha
mov
movsb
enter
lock
jo
pop
mov
cmp
push
sub
in
imul
add
lds
jl
cmp
cltd
lret
inc
mov
out
adc
loop
out
jne
test
cmp
je
push
push
adc
mov
jne
stos
imul
inc
mov
js
inc
xor
or
mov
jmp
in
adc
or
or
fbld
xchg
ror
jno
push
pop
mov
idivb
out
mov
pop
inc
cmp
rcrb
push
sbb
dec
jmp
imul
jae
jp
push
push
shrl
loope
dec
cld
cli
mov
jns
jmp
addr16
std
inc
je
imul
bound
and
shr
jmp
lahf
and
fstpt
stc
push
push
incl
mov
insb
nop
dec
cmp
push
cmp
inc
int
xchg
xchg
repnz
pop
fsubl
mov
in
das
adc
mov
add
fisttps
sahf
inc
pop
js
addl
movsl
push
jge,pn
or
add
mov
stc
js
decl
cwtl
sub
jl
mov
ret
add
movsl
pop
jecxz
jg
addl
cmpsl
mov
pop
insl
ds
shlb
test
dec
js
sarl
lret
add
fdivr
cli
cltd
adc
push
les
dec
mov
cmp
gs
and
ds
sub
cmpb
inc
dec
mov
les
mov
jp
fldz
push
pop
and
pushf
movl
cwtl
aas
fwait
jns
bound
pop
and
cltd
xchg
dec
popl
pop
lret
lahf
pop
push
cmc
xor
cmp
cmp
jg
fisubs
stos
dec
shr
jns
js
cmpsb
fninit
shll
sti
and
hlt
push
xor
mov
lahf
nop
sbb
push
sbb
inc
rclb
mov
mov
enter
mov
dec
sbb
sbb
ss
cld
repz
cmp
xor
out
orb
pop
xchg
jnp
push
adc
jg
push
inc
add
mull
push
in
insb
lods
pop
xchg
adc
scas
jmp
jb
incl
xor
movsb
cwtl
push
out
dec
inc
pop
mov
xchg
flds
or
pop
dec
movsl
test
shll
loope
push
sub
loope
push
fisubl
out
pop
mov
pop
sahf
sar
cld
pusha
add
fwait
ja
lahf
cmp
dec
xchg
pop
mov
out
enter
es
outsb
arpl
cmp
xchg
ret
and
cld
xchg
outsl
ss
push
jae
scas
xchg
jb
ret
add
sub
cmp
push
aas
scas
lods
mov
push
mov
bound
je
mov
scas
jg
in
bound
dec
les
push
jp
mov
mov
cli
push
xor
mov
in
les
add
push
je
inc
inc
mov
sarl
xchg
push
mov
nop
leave
add
jnp
out
fimuls
or
out
pop
jne
sti
pop
pop
sub
jbe
xchg
bound
inc
jnp
cli
aaa
sbb
subb
insb
mov
jb
dec
ret
inc
in
into
add
push
lret
xor
pop
mov
in
inc
idivb
pop
mov
cmp
dec
xor
lret
arpl
aas
test
cmc
aas
inc
pop
pop
cmpsw
cmp
pop
sub
shl
and
mov
ret
xor
inc
and
pop
pop
aad
mov
fs
lret
sub
mov
mov
pushf
ds
xor
pushf
cwtl
or
jg
loop
daa
dec
jmp
test
push
mov
xchg
pushl
inc
cld
bswap
and
lahf
xchg
faddl
xchg
jo
pusha
movsb
jg
pop
cmpsl
mov
mov
daa
stos
aaa
dec
nop
xchg
add
mov
mov
ret
push
cmp
popf
sti
pop
mov
mov
xchg
fs
bound
addl
fsts
xchg
scas
xchg
dec
rcl
lds
inc
mov
mov
fisubs
jo
jle
scas
mov
push
cmp
mov
lcall
inc
jae
mov
rorl
xchg
test
stc
pop
daa
insb
sub
dec
shll
test
push
xor
push
mov
test
lods
rol
xchg
push
xchg
popa
cmpsb
pusha
sub
dec
fucomp
cmp
insb
cmp
or
fadds
out
inc
ret
je
lcall
mov
xchg
pop
arpl
adc
subb
in
xchg
push
rcl
lea
enter
sti
and
xchg
test
and
push
je
fs
ficoml
mov
push
pop
push
xor
sub
fldcw
cltd
inc
adc
adc
mov
cli
and
scas
cmp
les
or
mov
mov
int3
xchg
cwtl
loope
push
outsl
mov
or
xor
out
ret
jno
stos
adc
mov
add
dec
xor
je
fdivs
dec
sti
inc
mov
or
aaa
fstl
dec
rclb
imull
leave
dec
imul
je
into
xchg
mov
add
fld1
fimuls
jmp
sub
cwtl
lea
and
test
jl
mov
cs
pop
or
or
enter
inc
pop
mov
lock
mov
lock
inc
mov
sub
mov
sbb
mov
scas
add
decb
in
jne
jnp
repnz
cmc
lock
fbstp
cmpsb
dec
pop
jecxz
idiv
mov
xchg
sbbl
mov
and
mov
cmp
add
jb
pop
imul
jno
cltd
mov
push
inc
lahf
sub
and
iret
ljmp
push
aam
ljmp
movsb
add
movsb
add
fucom
mov
cmp
add
mov
imulb
in
xchg
mov
cmpsl
in
cmc
jecxz
hlt
pop
fnstsw
mov
adc
xchg
icebp
mov
jmp
in
push
mov
enter
jne
mov
mov
nop
repnz
mov
inc
es
push
cmp
out
rcr
std
in
lcall
mull
lret
arpl
lea
push
inc
or
pop
or
leave
insl
notb
movsl
out
lea
sahf
and
gs
push
loope
mov
and
dec
loopne
sbb
out
pop
mov
aaa
inc
jmp
fidivs
fcoms
addr16
jp
popf
pushf
hlt
insl
pushf
sbb
scas
fiaddl
loopne
lods
in
int
sub
sbbl
mov
mov
idivl
dec
jp
pop
cwtl
push
push
dec
rcll
mov
jmp
mov
add
or
hlt
lahf
cltd
add
fucom
loop
cmpsl
xchg
daa
jp
je
and
or
push
mull
loopne
inc
ljmp
test
push
aas
xchg
add
stos
movsb
xchg
hlt
call
xor
lret
stos
popa
pop
repnz
mov
mov
mov
mov
ja
adc
in
push
push
dec
xor
add
push
test
adc
int
dec
jne
rcll
shlb
aam
cmp
pop
push
pushf
and
and
pop
inc
aas
adc
mov
in
lcall
dec
cmp
xor
outsl
aam
dec
shrl
daa
sub
test
or
icebp
das
cld
scas
add
sti
hlt
xor
insl
lahf
std
push
sbb
cmp
mov
xor
ret
mov
aam
dec
cld
sarl
std
sub
push
mov
lods
out
pop
inc
sbb
adc
xchg
shr
lret
lret
fucomp
cmp
imul
xchg
out
int3
cmp
repz
aad
mov
ds
faddl
loop
mov
cmp
cmp
inc
dec
fadds
cmpl
lds
pop
xlat
in
lock
sub
shll
push
mov
and
pushl
stc
stos
jp
adcb
sbb
mov
sub
cmpsb
sahf
cli
fdivl
add
xchg
cmc
imul
das
adc
push
fisubs
mov
or
dec
int
cltd
push
mov
mov
mov
shl
lock
pusha
daa
lret
inc
xchg
ucomiss
jae
and
mov
stc
in
add
cltd
inc
push
adc
stc
icebp
inc
lcall
shr
xor
or
and
cli
lods
sti
sbb
add
divl
pusha
dec
mov
inc
sbb
sbb
pmovmskb
es
sbb
inc
sbb
lret
jecxz
sbbl
sub
or
mov
out
pop
push
jne
lods
nopl
sahf
sbb
in
mov
inc
dec
mov
jns
adc
sub
fprem1
je
insl
es
aad
mov
fcomps
jmp
pop
fldcw
jae
aad
fs
xor
mov
jmp
and
in
mov
jnp
add
jge
sub
movb
out
lret
jb
jmp
jmp
cltd
push
idivb
stc
adc
ficompl
mov
jecxz,pn
or
enter
lret
sti
cmovae
je
lcall
outsb
sti
pop
repnz
and
scas
inc
cmpsb
aas
int
movsb
arpl
in
mov
int3
scas
mov
mov
jae
xlat
inc
xor
ds
andl
sbb
roll
pop
aad
lahf
cli
ret
cmp
inc
jbe
rcr
adc
in
mov
or
jecxz
popa
dec
ja
dec
mov
adc
incb
jmp
push
cli
lahf
mov
inc
xchg
mov
sbb
bound
sub
jae
fnstcw
scas
jne
ret
roll
jnp
push
push
mov
fdivr
fxch
xchg
fwait
xchg
jl
arpl
cmpsl
shlb
jecxz
aam
cmpsl
stos
push
or
pop
xchg
jo
cwtl
mov
xor
data16
mov
jo
or
stos
jno
out
int3
lret
jbe
xor
add
test
shlb
ss
adc
dec
or
xchg
fcmovne
sbb
aas
movl
mov
mov
mov
or
shlb
mov
mov
xor
cld
popf
adc
lcall
arpl
dec
or
lcallw
stos
adc
insb
inc
addl
js
xor
push
in
addr16
movl
dec
lret
sbb
pushf
jecxz
cmp
mov
clc
cmpsb
ret
and
sbb
jb
xchg
scas
adc
into
add
mov
dec
pop
xchg
push
push
jg
sub
add
sbb
cld
add
rorl
fisubl
xor
test
ss
repnz
push
sbb
fsubp
mov
cwtl
xchg
aaa
scas
test
mov
mov
or
loopne
add
and
and
aaa
mov
loope
mov
jnp
scas
pop
test
je
pop
nop
mov
dec
dec
pop
jo
jno
jge
icebp
out
pop
loop
and
sub
sub
sbb
cmp
cmc
ficompl
cmp
movsb
rcl
adc
cltd
call
inc
clc
push
ja
pusha
sub
cmp
xlat
in
dec
je
or
subb
in
sbb
xor
shll
repnz
pop
mov
xchg
add
lock
mov
cmp
mov
scas
adc
aaa
bound
jecxz
adc
jmp
bsr
cmp
orl
stc
mov
les
sbb
inc
jle
icebp
push
push
lods
add
aas
mov
ds
shll
xlat
jbe
sub
xchg
out
stos
sbb
adc
jl
int
jmp
cmp
lds
adc
outsl
sbb
sbb
cld
mulb
push
lcall
cmc
inc
rcr
sub
in
xchg
lds
rclb
xchg
lret
pop
test
dec
xchg
sti
fcomps
in
fwait
imul
mov
mov
lods
scas
xor
or
cld
stos
jbe
cld
xchg
push
jecxz
push
mov
call
insb
cld
push
insb
fs
or
das
in
mov
les
into
mov
mov
mov
xchg
enter
mov
mov
fistl
repnz
dec
movsl
sub
and
out
xor
mov
jg
mov
dec
and
iret
ret
add
mov
sbb
add
cmc
in
ja
stos
inc
dec
loop
or
mov
imul
inc
jb
movsl
shrb
addb
lds
push
dec
mov
inc
jp
loope
and
cli
fnstcw
jb
rcll
insl
or
enter
call
fsubrl
jl
xchg
jbe
sbb
dec
fiadds
jne
lods
outsl
fdivrl
mov
jp
sub
or
dec
loopne
leave
adc
push
or
fadd
and
pop
sti
dec
lcall
mov
pop
mulb
stc
inc
jbe
cmp
out
int3
clc
fmulp
fwait
mov
inc
arpl
mov
movsb
pop
xchg
mov
call
popf
fists
ret
mov
sarl
inc
xchg
popa
adc
sub
out
cmc
adc
mov
push
sub
mov
popa
jo
sub
test
push
push
xchg
add
scas
xchg
or
ja
jmp
stos
imul
cmp
ss
sub
dec
jecxz
add
pop
lock
cmp
push
push
in
push
add
clc
nop
adc
ret
inc
into
pop
jno
adc
mov
mov
pushw
call
into
sub
sbb
sub
xor
mov
cmp
xchg
fnsave
je
js
roll
testb
cmc
jae
cmpsl
stos
sti
daa
mov
fidivs
dec
daa
jbe
jne
stos
pmuludq
mov
sti
inc
inc
mov
pop
pusha
adc
mov
inc
xchg
rol
push
or
pop
cmp
push
xor
xchg
shrb
test
xor
les
lods
add
pop
outsl
push
jnp
mov
das
stos
jno
push
mov
mov
sbb
shlb
adcl
insl
es
std
bound
out
dec
iret
xchg
stos
test
repnz
lock
sub
push
aas
dec
add
mov
sbb
jb
cwtl
sti
push
pop
out
test
add
imul
jno
push
inc
into
and
mov
inc
ljmp
dec
pop
mov
jbe
dec
bound
inc
xor
and
or
pop
je
push
cmpsl
arpl
mov
lcall
test
cmp
and
xor
data16
adc
pushf
xchg
sbb
xchg
je
mov
mov
push
ret
js
or
mov
dec
popa
push
xorl
cmpsl
mov
push
das
dec
call
sti
inc
sarl
loop
or
rorl
stc
and
ljmp
xor
jecxz
and
dec
outsl
xchg
fcmove
stc
mov
inc
dec
int
inc
ds
lret
lods
jl
in
mov
jle
dec
and
xchg
mov
in
lea
push
lock
xchg
cld
jmp
inc
cmp
or
jmp
fisubs
outsl
pop
cli
out
loop
cmpsb
push
push
and
dec
xchg
aad
sub
out
test
push
outsb
xchg
aas
jp
fildl
cmp
add
pop
push
xchg
loope
imul
ds
into
mull
push
cmp
insl
in
jns
xchg
daa
ja
lds
ja
mov
std
mov
mov
orl
fmulp
lods
pop
jg
popf
add
cmp
je
cmp
sub
inc
adc
xor
cmc
and
xchg
mov
inc
mov
in
cmp
call
jns
mov
mov
test
cmpsb
inc
dec
out
sbb
mov
fwait
in
push
movsb
xchg
pop
xor
movsl
iret
divl
mov
xor
xchg
jbe
mov
sar
and
js
lock
mov
dec
jp
jmp
ds
in
adc
sar
cmpl
push
mov
mov
sbb
fdivrs
mov
mov
pushf
push
data16
imul
call
push
dec
mov
loopne
push
pop
fists
push
inc
push
inc
sahf
sub
jp
jns
loop
hlt
pushf
int3
out
outsb
and
jmp
adc
inc
pusha
inc
fimuls
pop
or
iret
pop
lods
mov
add
adc
adc
xchg
mov
rol
aam
add
or
dec
aad
nop
or
mov
iret
scas
mov
outsl
mov
int3
sub
stos
xchg
and
add
adc
arpl
ds
cli
fscale
out
aas
cmp
fisubrs
jbe
sub
push
popf
pop
ficomps
adc
cmp
jae
dec
je
sub
add
into
shll
push
and
fstl
lcall
mov
loope
mov
xchg
jmp
cmpb
adc
sub
mov
pop
mov
arpl
loope
xor
lret
dec
test
xor
mov
xlat
std
sub
mov
dec
xchg
mov
es
fiaddl
cmp
test
aam
out
stc
out
add
fisubs
rcrl
repz
pop
outsl
inc
inc
sub
ds
ja
or
outsl
dec
out
jo
cmpsb
dec
add
jae
sbbl
into
cld
push
jns
sbb
cwtl
xor
mov
push
ret
add
add
and
mov
dec
push
mov
ss
mov
mov
mov
mov
in
and
mov
or
test
pop
bnd
cli
sbb
cmp
xor
or
aad
adc
fmul
out
icebp
mov
inc
pop
pop
jb
sub
xchg
fstp
sbb
test
xor
mov
data16
shr
icebp
mov
cmp
add
pop
and
push
pushf
and
popa
sub
iret
dec
daa
push
fwait
jns
lea
jp
pop
imul
xor
mov
cld
xor
je
jns
aaa
mov
dec
xor
test
pop
lret
mov
push
jnp
xor
jge
jge
jbe
push
mov
adc
xor
pop
das
sbb
sub
xor
test
push
cmpsb
es
js
es
sti
jne
inc
jmp
xchg
mov
nop
xor
aad
fistl
js
cmp
sub
fs
in
xchg
lcall
mov
bound
test
in
inc
or
test
adc
sbb
out
mov
xchg
cmc
je
lcall
popf
mov
sbb
push
adc
sbb
std
mov
push
into
xor
cmp
xchg
mov
popl
dec
mov
nop
mov
jl
add
adc
mov
inc
or
shl
pop
dec
imul
or
pop
mov
dec
and
mov
dec
inc
lea
dec
cli
daa
pop
je
ljmp
fs
mov
mov
sbb
jp
cli
adc
push
fldl
stc
add
pop
jb
xchg
sbb
call
add
es
xorl
loop
insb
outsb
arpl
inc
xchg
sbb
ror
ja
addb
push
sbb
ds
insb
subl
test
push
stos
lcall
xor
push
movl
paddusb
lods
addr16
or
sbb
je
xchg
lds
rcrb
jno
sahf
les
ljmp
mov
insb
loopne
sub
aad
jl
ss
jl
push
pop
cmp
and
mov
sub
pusha
add
cld
dec
add
repnz
add
or
lods
sub
sbb
dec
das
stos
mov
lretw
pop
call
mov
and
xor
pushf
inc
ficompl
out
push
mov
filds
call
repz
push
cwtl
push
cmpl
xchg
outsl
add
shll
pusha
sbb
pop
pop
fadds
mov
testb
xor
sbb
lds
dec
ret
popf
xchg
inc
jp
cli
sbb
lcall
ficompl
mov
pop
inc
orb
pop
or
or
inc
mov
into
add
push
push
je
mov
shr
std
outsb
fimull
fsubrl
call
hlt
cmp
inc
repnz
pusha
or
ficompl
popa
iret
sbb
mov
jb
mov
ds
xor
cli
jle
sub
frstor
pusha
shrb
add
pop
mov
push
adc
and
stos
xorb
or
push
cmp
ljmp
add
add
sbb
cmp
daa
push
fcompl
cltd
mov
or
stos
fistps
int3
cwtl
lahf
push
sbb
push
push
cmp
push
roll
fisttps
in
jmp
out
filds
cmpsb
mov
xor
stos
int
pop
push
inc
add
rcrl
popf
pop
lcall
push
insl
das
andb
pushl
out
in
shll
xchg
in
dec
dec
sub
jnp
adc
cltd
xor
jne
js
fldcw
aad
push
lahf
xor
inc
jno
scas
cmp
mov
test
or
aaa
xor
add
loope
int3
mov
add
lock
lret
pop
std
cmc
pop
ja
mov
push
mov
testl
mov
out
shlb
call
aas
mov
sub
int
jbe
mov
inc
outsl
mov
dec
and
cmpsb
push
jl
imul
out
mov
dec
add
outsl
ss
fwait
loop
ficompl
mov
mov
mul
nop
movsl
fisubrl
outsl
adc
dec
sub
shlb
add
xlat
push
lock
mov
or
add
mov
insb
push
les
dec
ss
frstor
orb
cmp
adc
test
or
fists
xor
push
shl
and
dec
xor
inc
push
mulb
mov
cmp
cmpsl
push
sbbb
pop
xchg
xchg
pop
ljmp
repz
mov
dec
jmp
data16
sbb
push
ljmp
xor
shrl
add
or
cmp
jmp
sub
xor
inc
add
mov
lods
mov
test
mov
cmp
inc
addr16
popa
push
pushf
pop
in
lods
sbb
mov
dec
adc
pop
test
insl
xor
iret
mov
fdivrp
xchg
sbb
inc
push
sub
or
cwtl
and
xchg
sub
mov
std
jge
arpl
je
movsb
movsl
adc
add
into
add
xchg
out
mov
jp
and
pusha
sub
adc
push
xchg
push
mov
or
sbb
push
or
cmp
pop
jne
not
gs
jl
outsb
pop
cmp
push
fidivl
in
cmp
lcall
scas
pop
sbb
imul
sahf
outsl
mov
and
pop
leave
cmp
cld
mov
dec
test
fdivrs
add
mov
leave
cwtl
notl
imul
mov
add
xchg
andb
loop
test
dec
xor
nop
push
sar
and
fcoml
xchg
push
mov
test
xchg
xlat
xchg
add
dec
mov
jbe
sub
xlat
fists
into
in
dec
add
jo
jbe
in
mov
sbb
or
out
aaa
scas
jp
aas
cmp
cli
jb
mov
mov
mov
mov
push
or
mov
test
movsl
test
xorb
mov
xchg
pop
pop
or
pop
loopne
xor
pop
mov
jo
sahf
xchg
cmp
xor
add
divb
clc
and
test
jb
mov
cmc
cmp
pushl
ret
movsb
mov
dec
scas
fyl2xp1
jle
outsl
push
inc
sti
jns
mov
xor
cltd
and
inc
mov
add
addr16
movsl
fimull
test
jae
enter
pop
xchg
adc
imulb
push
call
and
push
xor
das
mov
shll
push
aad
les
ret
sub
aaa
xor
mov
mov
adc
cmp
jle
cmp
cmp
scas
iret
fsubs
mov
sbbb
mov
push
hlt
jl
popf
jno
jg
mov
inc
jnp
jnp
pusha
iret
push
inc
insl
add
loop
xchg
stos
cmp
and
repnz
es
cmp
cwtl
pop
into
adc
sahf
mov
out
repnz
push
mov
ret
add
inc
inc
test
nop
mov
dec
mov
jnp
xor
stos
fistps
movsl
push
cmp
adc
mov
arpl
das
push
mov
sbb
test
enter
fcomp
jae
cmc
int
sbb
data16
scas
test
jns
ja
pop
popf
sub
push
mov
cwtl
arpl
nop
addl
inc
or
loop
sub
out
scas
sbb
lret
mov
lea
cmp
outsb
pop
daa
std
loope
add
sbb
mov
and
setg
and
cltd
pop
popa
add
and
pop
cmpsb
lods
nop
adcb
add
lret
in
mov
pop
cmp
cmovnp
cltd
jne
cmp
push
pop
inc
les
sub
mov
js
mov
cmpsw
das
int
xchg
lods
shr
orl
mov
xor
inc
push
inc
test
pushf
movsb
push
pop
popf
sub
xchg
xor
inc
repz
negl
pop
fbstp
mov
aas
ljmp
mov
pushw
or
clc
sahf
movl
jne
and
cmp
push
fadd
inc
ja
and
out
inc
es
jmp
addr16
push
adc
adc
sub
seta
xor
imul
imul
out
into
movsb
faddl
and
insb
push
ret
add
cld
xor
adc
lcall
enter
or
mov
test
ja
xchg
mov
jmpw
xchg
lods
xchg
sahf
lods
enter
xchg
je
lahf
sub
dec
jae
add
pop
in
push
xchg
jo
idivb
push
in
pop
lcall
test
adc
loopne
xchg
stos
je
enter
push
subb
xor
aas
loopne
les
imulb
enter
jmp
xor
push
jbe
lcall
aas
out
lods
call
mov
arpl
movsb
dec
cmc
mov
pusha
cld
mov
xchg
or
dec
mov
cwtl
sbb
aaa
sbb
cmp
jecxz
div
aaa
mov
inc
cmc
mov
push
insl
call
dec
sbb
pop
adc
les
jle
push
mov
jno
int
out
es
fidivs
cmp
nop
adc
inc
fsubrl
ror
jmp
imul
pop
call
pusha
rcr
xchg
addl
fisubl
and
lcall
repnz
aad
jnp
push
sbb
int3
xchg
fcomip
or
shrb
incb
aaa
push
scas
test
cmpsl
xchg
ret
mov
sahf
mov
imul
leave
mov
das
sub
mov
mov
xchg
lahf
mov
sub
sbb
stos
and
pop
ljmp
mov
adc
in
int3
in
jge
cwtl
cs
add
mov
push
cli
fidivrl
fidivl
insl
loope
inc
fistl
jb
rcl
jbe
or
rcll
dec
push
imul
sbb
pusha
push
aas
or
je
roll
iret
scas
leave
pop
lret
mov
pusha
sub
outsb
stos
hlt
aam
inc
and
push
lahf
adc
loope
mov
or
andnps
fistpll
mov
shl
pushf
dec
movsl
or
dec
and
adc
test
ds
mov
adc
mov
dec
lcall
loop
dec
dec
pusha
xor
pop
shll
sbb
pop
mov
rcrb
mov
jo
movsb
cmp
mov
pop
push
js
jmp
hlt
inc
and
inc
adc
xor
mov
repnz
jne
int3
add
and
jnp
popf
xor
ja
dec
testl
lock
lods
jecxz
push
push
les
mov
cli
ret
cs
add
lea
dec
add
pop
push
and
and
outsb
pop
xor
fs
aaa
push
mov
out
enter
lret
divl
and
cmp
hlt
insl
pop
dec
sbb
enter
push
in
push
das
adc
in
mov
stos
push
stc
mov
pop
sub
pop
idivl
add
xchg
mov
mov
cmp
or
pop
lods
inc
call
loopne
sub
sub
xor
incb
pop
mov
mov
hlt
not
push
xchg
ss
pop
sahf
sahf
call
lock
or
test
iret
add
out
lret
in
jns
inc
inc
clc
out
jle
sbb
movsb
mov
mov
lcall
nop
mov
xchg
shll
loopne
or
add
cmp
fs
push
scas
xor
sub
pop
push
cmp
scas
lea
mov
aas
mov
dec
and
mov
cmp
inc
ret
jb
arpl
jns
or
in
andb
mov
jne
popf
xor
loop
mov
imul
pop
xchg
sub
mov
push
mov
inc
xchg
inc
or
pop
in
shll
lods
pop
fucomi
xchg
ficoml
xchg
fchs
xchg
scas
xor
mov
xchg
daa
inc
sahf
jge
xchg
stos
mov
and
andl
out
and
push
lods
lea
xchg
pushf
mov
add
inc
adc
ficoms
jecxz
adc
in
aaa
sbb
bound
fbstp
jle
fmull
sbb
and
mov
pop
inc
call
push
fistps
xor
addb
xchg
inc
adc
sub
sub
mov
stc
jl
and
pop
or
push
hlt
dec
and
inc
xor
cmc
mov
adc
add
orl
mov
sbb
ret
mov
pop
icebp
in
loope
cmc
sub
subb
dec
outsb
sbb
jmp
or
push
mov
stos
sbb
jl
xchg
jmp
into
imul
notb
faddl
jmp
adc
fcomps
ljmp
jp
out
pop
mov
shlb
sbb
xchg
enter
push
das
jbe
ret
mov
pop
aas
mov
in
and
outsl
pop
jo
pop
lret
mov
jnp
add
test
subl
pop
cmpsl
inc
call
lahf
mov
cmc
jmp
sub
sub
in
inc
xchg
push
sbb
mov
gs
mov
repz
xor
push
clc
inc
shrb
dec
movsl
jns
cld
inc
mov
jo
xor
ss
mov
loope
icebp
push
jmp
xchg
jp
mov
mov
insb
aam
js
leave
inc
ret
and
insl
push
xchg
stos
mov
sbb
cwtl
test
lock
fwait
jnp
int3
mov
xchg
insb
xor
aam
lea
xchg
pop
pushf
cmpsb
sti
dec
jbe
push
xchg
cli
pop
mov
xchg
push
sbb
mov
mov
jmp
and
fists
jno
in
les
stos
in
mov
lock
lret
outsl
mov
popa
test
xor
mov
mov
popf
cmp
sbb
mov
ficoms
adc
fdivrs
frndint
ret
sbb
ret
cmp
repnz
mov
stos
xor
mov
repnz
sbb
jge
mov
aas
cmp
pop
xchg
fdivl
adc
js
out
inc
out
dec
test
outsb
jp
jg
inc
jo
sti
xchg
das
jecxz
xchg
movsb
rcr
ret
insb
leave
test
pop
inc
dec
adc
jl
push
xchg
repnz
mov
cwtl
mov
js
push
rcl
ds
out
push
dec
inc
icebp
lret
mov
cmpsl
cmpsb
pop
int
sbb
mov
jecxz
ss
push
movsl
dec
rorl
add
mov
pop
or
loope
fs
fldl
cltd
push
xchg
push
out
iret
xchg
data16
das
push
outsl
mov
mov
dec
mov
ja
rclb
pop
cmp
sti
in
adc
loope
orl
xor
cmp
mov
mov
fisttps
push
mov
mov
xchg
mov
dec
in
in
stos
mov
add
pop
pop
mov
and
xlat
xchg
mov
cmp
mov
mov
js
mov
sub
sub
mov
sbb
mov
loope
dec
or
push
jno
mov
mov
nop
lea
jno
testb
jge
jo
xchg
jne
loope
pop
push
cmp
mov
orb
das
inc
rorb
shrb
cmp
mov
jmp
and
jae
lock
bound
or
sarl
dec
jnp
push
xchg
add
adc
in
xchg
xchg
jne
dec
jbe
stos
lods
repz
cld
movsl
inc
jno
ret
jno
mov
loop
fldl
cmp
cltd
cmp
dec
push
push
negl
in
and
adc
jae
ljmp
pop
cwtl
into
stos
xchg
adc
mov
add
and
mov
addb
movq
cmp
adc
inc
add
mov
inc
and
sub
shr
pop
xchg
mov
sub
sub
pop
nop
scas
sub
mov
or
adc
ret
mov
shl
xor
ss
push
jb
xchg
jo
mov
jmp
push
lret
shlb
std
push
jbe
xchg
inc
push
xchg
pusha
xor
sbb
loope
shlb
int3
iret
cwtl
enter
std
dec
jge
aaa
int3
and
xchg
and
fsubrp
jle
mov
jno
fsubp
aad
jg
dec
sbb
mov
lret
stos
mov
mov
das
inc
dec
push
iret
ret
arpl
xor
dec
out
xchg
outsl
push
inc
mov
push
lahf
fimuls
fucomi
testl
aad
jbe
jno
add
mov
out
sbb
sahf
mov
popa
push
lock
xchg
or
mov
adc
and
xchg
sub
dec
pushf
roll
or
out
stc
shr
inc
pop
fucomp
orb
fisttpl
adc
out
mov
popa
lods
lret
jge
bound
into
or
pop
sti
ja
lahf
and
ljmp
fcom
and
rclb
lods
in
jne
mov
into
loopne
pop
dec
xchg
in
rclb
and
cmpsb
push
mov
ja
sbb
push
cmc
sbb
mov
xchg
xchg
fistpl
test
mov
popa
mov
mov
and
test
adc
mov
xchg
jns
or
insl
jb
int3
sahf
jo
dec
jne
pop
mov
imul
notb
jge
popf
sti
xchg
mull
mov
xchg
lds
jbe
ret
shrd
pop
xchg
pop
scas
inc
fwait
mov
mov
mov
jmp
stc
mov
xor
cwtl
daa
pop
aaa
sub
rcr
out
pop
fmulp
es
inc
jnp
cmp
push
mov
cs
sub
and
icebp
jns
sbb
cld
xchg
ret
aad
xlat
bound
shlb
or
jl
push
sub
jge
ljmp
in
in
add
jbe
mov
fwait
add
push
fldcw
mov
testl
fistpll
pop
xchg
leave
pusha
sub
jmp
jno
jne
sbb
add
xorl
stos
lds
mov
addr16
sbb
inc
pushw
fdiv
push
addr16
mov
push
jp
stos
incl
add
jg
jl
jno
aaa
xor
jmp
fidivrs
jo
es
mov
repnz
add
cmp
rorb
xchg
pop
lcall
pop
js
out
test
jle
pop
pop
fcoms
lret
sub
daa
je
daa
nop
mov
orl
sbb
cmc
dec
mov
test
fldl
push
dec
mov
mov
repnz
imul
adc
daa
or
sub
mov
push
fwait
push
sbb
jo
stc
shlb
xchg
notb
ds
icebp
adc
mov
cld
test
nop
fisttps
pop
rorl
push
int
out
lea
pop
test
nop
push
jb
rcr
and
pop
subb
xchg
dec
fildll
inc
outsb
andb
into
les
xor
xlat
out
mov
aas
out
js
xchg
adc
sbb
pop
xor
pusha
std
xor
iret
xlat
andb
jae
mov
rclb
push
fsqrt
in
xchg
or
jo
mov
shlb
fs
xor
int
and
jno
xchg
mov
mov
push
cmc
imul
jecxz
sub
ja
dec
dec
add
xor
jo
sub
mov
lret
dec
mov
sbb
mov
inc
jnp
jno
mov
pop
or
cmp
pop
dec
insb
fimuls
sbb
ret
insl
pop
rorl
leave
jle
mov
ss
mov
test
and
lret
xchg
into
cmp
cmp
pop
int
mov
inc
imul
pusha
mov
pop
xchg
adc
test
cmp
andl
pop
add
movq
adc
xor
lret
enter
das
dec
xchg
push
lahf
add
sbb
cltd
out
dec
mov
aaa
mov
inc
and
lods
jno
stos
das
notb
test
pop
int3
and
lahf
ljmp
pop
imul
loopne
mov
pop
jns
xlat
lods
inc
insl
inc
fistpll
roll
adc
scas
int
cmpsl
push
mov
mov
jg
mov
adc
cwtl
daa
cmp
or
add
incb
push
das
sbb
aaa
cmp
cmp
pusha
scas
lahf
into
je
sub
jmp
jo
mov
lds
jl
mov
addr16
scas
lods
pop
mov
mov
iret
int3
jne
out
rcrl
sub
sub
je
dec
loop
ds
jecxz
or
push
xor
pop
pop
dec
xchg
add
cmpsl
add
and
sub
jg
xchg
push
xchg
jns
add
or
adc
pushl
shlb
movsl
pop
or
dec
cmp
lea
lret
jno
push
adc
xlat
lcall
xchg
jmp
or
or
mov
add
and
ss
ret
bound
sub
lret
add
mov
sub
loop
sub
int3
fistl
je
nop
sub
in
lret
push
mov
cmp
mov
fmul
pop
jne
push
mov
mov
sahf
repnz
test
or
adc
xchg
repz
adc
jne
jae
je
jl
es
dec
mov
fstps
push
call
sbb
jl
pushl
ret
sbb
push
inc
test
mov
iret
dec
pusha
mov
gs
add
les
lea
popf
test
les
in
pusha
pop
add
xchg
in
sti
mov
icebp
icebp
or
lds
xchg
out
frstor
lcall
inc
add
mov
popa
lods
adc
cmpsl
in
sub
push
jno
mov
iret
sub
sbb
mov
xor
subl
aaa
sahf
pop
pop
outsb
pop
mov
xor
pop
pusha
jbe
pop
sbb
movsl
fwait
imul
xchg
imul
enter
cmp
pop
sbb
mov
ja
stc
sbb
ljmp
sbb
aas
fwait
add
dec
and
loope
std
jecxz
fidivs
test
shll
mov
jne
test
lret
insb
mov
test
loopne
stc
sub
sub
dec
sub
pop
mov
xlat
cld
or
cmp
repnz
ffreep
ret
add
or
popf
xchg
jmp
nop
adc
and
mov
push
pop
lahf
fimuls
out
pop
sti
sbb
mov
push
stos
sub
aad
push
bound
in
adc
adc
into
push
add
sbb
popf
push
pushf
in
xchg
pusha
in
in
xor
cwtl
es
icebp
jge
add
xchg
pop
std
stc
int3
test
subb
dec
push
js
loope
popa
xor
or
out
jo
data16
mov
aaa
jge
addr16
in
sbb
insb
dec
jp
lea
xchg
xchg
outsl
in
adc
adc
jmp
pop
adc
or
cmpsl
adc
popf
adc
inc
and
cld
pop
lods
jecxz
pop
sahf
orb
xchg
sub
loop
test
lret
mov
cwtl
fnstsw
pusha
or
push
dec
or
les
loope
inc
lods
xsave
shrb
shlb
push
clc
inc
xchg
testb
xchg
add
mov
mov
mov
aad
movsl
jmp
adc
sub
fildll
out
mov
adc
aad
sub
fisubrl
lcall
jnp
xchg
pop
push
dec
mov
jbe
push
and
inc
jns
insl
out
inc
pop
add
xchg
mov
jmp
or
xlat
jae
mov
ret
test
jbe
into
rol
cmpsb
xor
dec
push
xlat
dec
jl
popa
cmp
mov
add
pop
imul
cmc
imul
andb
xchg
dec
gs
and
fidivrl
hlt
pop
lret
out
in
sti
cli
imul
into
mov
sub
add
sbb
sub
rcrb
push
jl
stos
dec
mov
aas
jnp
gs
into
push
inc
xchg
inc
pop
lret
shl
pushf
xchg
lcall
jne
int
jae
inc
push
fwait
out
push
es
jle
push
ror
xor
out
jmp
sar
or
adc
jns
mov
jb
pop
pusha
aam
popa
stos
imul
js
enter
sti
cmc
loop
sbb
add
xlat
iret
js
or
outsb
sbb
add
push
fwait
popa
jno
testb
cmp
jb
sub
mull
mov
jg
push
shlb
rclb
aas
inc
pop
and
out
sbb
leave
jecxz
xor
pop
adc
decb
sub
xchg
dec
call
loopne
cmpl
loope
in
fwait
cld
mov
push
or
or
lcall
sub
inc
dec
xchg
jnp
cmp
push
push
mov
push
cmp
mov
pop
imul
addl
dec
nop
daa
adc
pop
adc
clc
ljmp
jge
adc
mov
dec
imul
cs
adc
lret
aad
push
test
mov
and
sub
jl
repnz
popa
mov
lret
mov
sbb
lret
push
stos
icebp
mov
jne
lcall
and
mov
movsb
dec
lahf
mov
out
out
test
xchg
adc
orb
sub
inc
mov
sub
xor
adc
pop
xchg
les
xlat
xchg
pop
into
dec
dec
int3
lods
jge
jo
mov
mov
mov
insb
ss
outsl
cmp
loope
fsubl
push
outsb
xchg
cmp
inc
leave
loop
add
sbb
stos
mov
iret
push
mov
scas
popa
jecxz
ds
mov
pop
dec
scas
dec
sbb
rclb
fidivs
loopne
or
or
out
lods
cltd
mov
pusha
or
hlt
pushf
aad
divl
arpl
push
mov
pop
and
lods
iret
lret
loope
cli
dec
sub
rcrl
shl
pop
jbe
mov
and
leave
xor
sub
das
iret
jo
xorl
cmpb
pop
imul
scas
stos
mov
inc
lret
das
in
cmp
pop
in
pop
dec
addb
call
xchg
push
inc
stc
mov
rcrb
add
or
repnz
jmp
dec
in
dec
insl
add
andb
call
xchg
xchg
dec
inc
push
test
add
xor
pop
fmuls
cmp
inc
mov
outsl
cmp
inc
pop
sbb
aad
imul
push
adc
jg
sbb
push
inc
jne
push
xchg
sti
in
outsb
dec
mov
mov
xor
ret
jl
cmp
cmc
test
cmp
cs
hlt
pop
inc
cwtl
popa
std
mov
xor
sub
in
jl
push
fbstp
mov
int3
leave
xchg
loopne
add
jl
adc
rolb
dec
and
out
push
int3
bnd
push
mov
xchg
mov
dec
mov
mov
std
incl
cmpsl
enter
testl
jmp
sub
fstpt
mov
shlb
xchg
or
cmp
and
in
andl
cltd
mov
pop
stos
sti
pop
push
adc
mov
ljmp
outsb
cld
inc
mov
in
adc
test
sub
callw
filds
cmpsb
cli
bswap
inc
mov
aas
push
push
rclb
test
mov
test
mov
scas
mov
ljmp
packsswb
movb
test
addr16
mov
mov
sub
xor
xchg
leave
pushf
stos
xor
les
fmul
dec
or
gs
std
push
in
mov
sbbl
or
sub
pop
inc
push
mov
sbb
adc
xchg
pushl
test
les
mov
pop
mov
ljmp
mov
jl
push
add
lret
ljmp
mov
cmpsl
xchg
and
adc
dec
and
ror
mov
int3
cmp
dec
ret
xor
mov
mov
mov
pop
push
std
cmpsl
jnp
pop
xor
pop
data16
mov
mov
dec
out
adc
mov
pop
mov
shl
push
xor
fisubs
insl
pop
jae
aaa
sbb
imul
icebp
pop
sbb
int
mov
mov
mov
cmp
jbe
push
and
inc
push
rcr
js
sub
mov
in
gs
fimuls
pop
xorl
out
rcll
and
cmpb
fstpt
cld
xchg
mov
scas
jne
hlt
gs
push
add
cmc
push
cmp
mov
pop
jle
mov
stos
lds
pop
leave
pop
outsb
stos
push
ja
sbb
out
sbb
inc
pop
sbb
scas
and
test
fdivrl
repnz
dec
push
addr16
scas
or
aad
mov
in
cli
daa
push
ss
je
loope
mov
adc
jb
lock
ret
and
jl
jae,pn
enter
pop
jmp
fs
mov
dec
push
sbb
aam
nop
xor
push
dec
mov
icebp
ss
push
notb
mov
faddp
push
and
andb
jns
std
ljmp
cmc
sub
xor
clc
sub
fs
sub
push
adc
mov
pop
insb
orb
mov
dec
pop
cmovnp
dec
sub
int
sahf
adc
push
fs
push
jle
dec
fcomi
fcomp
minps
xchg
dec
cmp
pop
adcb
incl
je
popa
sub
add
jne
cmp
ds
fs
enter
cld
inc
pop
rol
add
dec
insl
xchg
popf
and
or
sbb
lahf
ftst
inc
sub
sarl
aad
push
xlat
mov
jne
sbb
mov
and
inc
pop
les
ss
pop
xchg
inc
das
inc
dec
xor
add
andb
loope
cmpl
cmc
sub
shrl
jp
or
mov
sarl
jno
bswap
mov
add
cmp
mov
inc
mov
mov
or
mov
int3
jb
iret
jle
ss
pop
pusha
inc
inc
loop
push
repnz
ljmp
mov
hlt
rcr
mov
arpl
jne
dec
mov
int
iret
jnp
jnp
mov
add
adc
insl
stos
adc
jns
mov
mov
fisubrs
leave
pop
push
sbb
mov
dec
out
aam
ss
push
sub
sbb
cmpsb
inc
mov
sub
xchg
dec
aad
mov
mov
pop
push
mov
daa
call
pop
jp
fldcw
xchg
test
icebp
addr16
mov
inc
xlat
sti
shrl
jp
sub
xor
outsl
adc
loopne
test
jecxz
jne
repz
xchg
xchg
xor
loope
aas
and
test
lahf
aas
xorb
out
aam
pop
or
fidivl
icebp
aaa
rcrl
cmp
call
lret
mov
and
sti
jecxz
popf
sub
jmp
mov
xchg
sub
mov
fbstp
jo
and
nop
pushf
fs
and
pop
sbb
dec
fmul
ljmp
ret
repnz
lods
adc
stos
movl
pusha
test
or
pop
push
xchg
loop
inc
dec
pop
popf
loope
rorl
cmpsb
xor
push
in
in
inc
push
pop
out
add
jb
pop
and
add
xor
add
sbb
lods
push
sub
sub
jns
fxch
dec
repnz
addb
mov
adc
inc
adcl
jae
stos
sub
add
sti
lods
push
and
xchg
in
test
inc
jl
jb
jge
pop
add
mov
inc
insl
push
mov
xor
es
and
adc
add
addr16
mov
aad
mov
imul
or
pop
push
sbbb
call
pop
pop
outsl
lret
or
dec
pop
lods
dec
jp
into
testl
push
insl
mov
iret
fs
in
insb
xchg
aad
pushf
sub
jecxz
jns
fs
dec
rolb
push
and
lcall
or
andl
pushf
or
lock
lds
xchg
out
fisubrs
idivl
mov
std
leave
sbb
adcl
dec
sub
shr
mov
xchg
mov
mov
std
icebp
pop
sbb
js
xchg
mov
xor
ja
es
or
fidivs
or
nop
fcmovnbe
sub
lahf
lea
mov
bnd
xchg
aas
cmpsb
aaa
mov
sub
sub
ss
and
xor
ljmp
cmp
xchg
sbb
outsb
fisubrl
xchg
fistpl
xor
cmpsb
fisubrs
mov
mov
xor
jecxz
jecxz
pop
out
mov
jl
mov
inc
mov
test
pop
or
fstl
xchg
mov
fistps
sub
stc
ret
test
add
fcmovu
das
push
ss
dec
pop
insb
and
gs
sbb
mov
inc
sbb
ret
add
subl
das
cmpsb
inc
xor
in
sbb
jmp
xchg
and
sbb
cld
lods
andb
lods
mov
cmp
or
imull
and
negb
notl
ds
std
repnz
mov
fs
xorl
pop
push
dec
lds
inc
nop
loope
cmp
sahf
jns
mov
lods
pop
in
je
pop
cli
pop
mov
ss
fs
loop
push
lods
pop
aas
sbbl
hlt
std
mov
dec
and
mov
ljmp
les
pop
and
fwait
inc
jecxz
pushl
popf
int3
inc
add
mov
xchg
mov
xorl
xor
out
mov
push
mov
mov
lods
stc
bound
imul
test
adc
rcrl
or
mov
pop
mov
hlt
dec
das
inc
mov
daa
sbb
push
icebp
pop
and
and
mov
test
inc
icebp
sub
in
inc
nop
lods
mov
and
adc
pushf
fldl
mov
sahf
psraw
push
aas
popa
mov
repz
fstps
dec
mov
shrl
jmp
adc
lds
cmpl
popa
jle
xor
add
xor
pop
sbb
cmpsl
jg
jb
push
pop
sarl
lea
in
inc
xchg
cmpsb
push
inc
mov
mov
dec
pop
ret
mov
sti
repnz
popa
xchg
mov
sbb
fsubrp
sub
hlt
lea
mov
hlt
cmp
and
inc
xchg
mov
adc
xor
in
mov
cs
scas
xlat
push
push
loope
sub
outsb
orl
dec
add
std
enter
add
cli
outsb
xchg
sti
add
mov
mov
jmp
mov
test
and
hlt
icebp
jmp
lods
dec
inc
or
movsl
jl
pushf
fildl
movsb
sub
shl
add
leave
movsl
xchg
jl
imul
push
ja
test
sbb
cmp
sbb
hlt
jg
inc
bound
jl
fs
or
pop
fstl
fldenv
inc
sbb
mov
je
push
outsl
nop
enter
leave
pavgb
mov
dec
jmp
dec
int
roll
mov
leave
fisttpll
inc
jecxz
outsb
psubusw
xlat
aam
mov
in
adc
mov
sbb
imul
pop
mov
shlb
mov
aad
mov
mov
repnz
push
xor
cmpsb
pop
jmp
repnz
es
inc
jnp
fadd
mov
xchg
rolb
sahf
xor
push
iret
lea
enter
mov
xor
pop
in
dec
push
sbb
jg
nop
sbb
sub
into
jne
inc
jo
jae
in
repz
jle
out
jb
mov
sub
ret
xchg
js
movsl
pushf
daa
out
dec
stos
xchg
into
or
or
push
and
adc
push
pop
cli
ds
cwtl
xor
mov
lods
jecxz
push
dec
push
push
sbb
push
aaa
jb
in
and
in
flds
aad
loope
insl
sub
imul
clc
aam
add
pop
dec
jb
outsb
mull
fstps
scas
rorl
lea
push
outsl
shrb
push
ss
fldcw
mov
in
or
stos
inc
or
xchg
adc
and
dec
push
loopne
xchg
push
ret
fildll
iret
add
andl
cmp
adc
cmp
pusha
je
fs
add
sbb
pop
xlat
aam
and
imul
lahf
stos
dec
sub
xchg
mov
pop
cmc
test
pop
cmp
push
inc
mov
xor
imul
subl
adc
stos
xchg
fnstsw
add
sub
int
shrl
mov
addl
xchg
andb
iret
cld
shlb
mov
xor
popf
mov
pop
lea
xchg
dec
cmpsl
xchg
call
cmp
jae
cmpsl
fsubs
cld
jns
leave
jg
or
dec
test
push
mov
cmc
insb
loopne
add
inc
lea
sub
icebp
fdivl
sub
push
sbb
lock
test
inc
mov
fcmovnu
subb
adc
pusha
push
fmuls
push
icebp
inc
lahf
mov
pop
icebp
adc
gs
sahf
inc
add
popf
in
faddl
sti
adc
out
or
xor
call
mov
sti
das
repnz
cs
movsl
sub
ret
loope
dec
and
sub
ja
rolb
push
mov
mov
aaa
push
popf
lret
push
and
nop
ss
lahf
jbe
and
shl
js
mov
push
xor
mov
mov
in
out
jnp
repnz
rol
sbb
push
imul
mov
jg
gs
stos
es
fdiv
dec
outsl
sahf
sbb
dec
popf
xor
scas
loopne
inc
lcall
in
lods
out
aam
push
jl
cmp
bsr
xor
xchg
xlat
mov
int
mov
xchg
int3
mov
and
mov
scas
sahf
jecxz
fisubl
xchg
push
pop
stos
adc
nop
cmpsl
shll
inc
shrb
aad
in
int
vpsubsb
sub
out
scas
outsl
mov
movsb
test
fdivrl
sbb
dec
shll
jb
push
mov
jmp
andl
lahf
mov
scas
xor
stos
push
iret
imul
xchg
jmp
imul
pushl
mov
cli
enter
dec
lret
int3
sahf
jmp
pop
sub
stc
shll
push
scas
cmp
sbb
rolb
push
int
les
ret
in
push
mov
rcll
dec
cwtl
ja
add
imull
lahf
jb
jo
mov
fwait
imulb
xchg
cmpsb
mov
imul
stos
in
aas
mov
cmc
mov
sub
je
dec
jns
aad
mov
mov
sbb
jg
lea
ret
jae
mov
cs
pop
ss
pushf
mov
sti
dec
and
mov
test
mov
pop
pop
dec
test
icebp
mov
int3
ret
movsl
fld
jmp
jbe
lock
jmp
pop
out
cmp
jne
dec
rorb
lcall
neg
fwait
ss
inc
pop
shll
jmp
pop
arpl
and
pop
cltd
je
sbb
jo
cmp
jecxz
push
mov
dec
ss
in
int
daa
xchg
jb
das
mov
mov
ss
lods
cmp
decl
or
sbb
sbb
enterw
hlt
sbb
shll
xchg
mov
popf
mov
test
and
push
fisubrs
xor
xor
popa
stos
sub
lds
xchg
dec
imul
out
negl
dec
nop
pop
push
aam
lret
dec
arpl
shlb
pop
insl
mov
add
test
scas
mov
pop
lcall
inc
mov
jecxz
pop
in
pop
mov
push
js
and
add
shlb
movsl
sbb
add
or
sub
inc
stos
jle
mov
mov
cltd
ret
mov
mov
dec
imul
int
add
popa
mov
push
cmp
lahf
jge
popa
mov
add
lock
push
push
cmp
sub
push
adc
mov
and
cmp
movsb
mov
fucompp
stos
push
pop
jg
or
sub
xchg
jg
aas
loope
jnp
sahf
outsl
aas
stc
add
aad
scas
lahf
dec
pop
pop
into
mov
icebp
sub
popa
dec
fmull
and
mov
inc
setne
ret
lahf
mov
jmp
out
xchg
xchg
mov
add
dec
inc
xor
into
lods
imul
mov
scas
in
add
mov
imul
or
insb
cld
push
mov
add
mov
imul
cmc
mov
sarb
pop
notb
jecxz
dec
mov
jo
dec
aam
inc
mov
add
and
jecxz
sub
ss
add
mov
lods
inc
jecxz
pop
jo
fyl2xp1
mov
lock
pushf
or
icebp
lea
jno
cs
in
cli
outsb
pop
call
arpl
jbe
scas
push
cmp
cwtl
ret
sub
ror
push
out
push
sbb
lahf
or
shrl
cmp
jb
mov
stc
dec
cwtl
jae
xchg
pop
aas
repz
mov
xchg
int3
jbe
stos
mov
cmpsl
sahf
pop
popf
stos
gs
call
adc
andps
cmpsb
popf
stos
sbb
xchg
mov
xchg
jo,pn
mov
sarl
rcll
mov
pusha
xchg
or
es
xchg
leave
nop
mov
imul
decb
xchg
add
and
stc
jo
adc
xchg
lcall
push
push
xor
mov
cld
pop
test
or
inc
push
cmpsl
sbb
loopew
pop
cmp
notl
push
dec
adc
icebp
push
testb
fdivrp
xor
pop
popa
sub
outsb
push
push
mov
jg
jmp
call
jge
fsubr
popa
xor
jnp
repz
insl
sbb
sub
pusha
std
pushf
xchg
and
lods
insl
cmp
shll
push
fists
stos
loope
in
cwtl
leave
pop
int3
mov
cmp
lods
cmp
div
sub
popa
and
inc
mov
jbe
lods
jb
std
xchg
jnp
xchg
inc
xor
inc
push
cli
xchg
push
add
enter
outsl
and
imul
lret
orb
mov
xchg
adc
jns
mov
sbb
fcompl
faddl
repz
sbb
mov
push
inc
cmp
stc
call
aam
push
cmp
mov
mov
hlt
xchg
cmc
mov
lret
cmp
pop
aaa
pop
xor
std
mov
pop
fisttps
xchg
jmp
enter
aam
push
jle
push
inc
fwait
push
sub
rclb
inc
jg
and
xchg
dec
and
mov
cmc
jae
push
iret
call
mov
lds
adc
ss
fnstenv
movsb
rol
aaa
mov
xchg
and
and
fwait
inc
shlb
dec
xor
sub
add
imul
add
lds
jecxz
jo
mov
xchg
adc
shl
jge
push
cltd
scas
jno
cmpsl
push
xchg
je
jmp
inc
push
jno
and
es
mov
test
jecxz
sbb
ljmp
repz
sarb
mov
loop
sahf
enter
push
push
mov
ret
sub
les
hlt
jmp
lret
jo
je
std
std
xchg
jb
cli
aam
xchg
cmp
sbb
add
mov
mov
mov
mov
fistpll
dec
pop
push
int3
call
pop
add
cmp
pop
stc
mov
jecxz
test
xchg
mov
ss
pop
out
or
xchg
xchg
add
dec
sub
ja
loop
mov
cmp
rol
pop
cmp
sub
or
jmp
cmp
mov
icebp
mov
addr16
mov
pop
or
lea
pop
movb
repz
cmpsl
pop
cmpsb
ret
sbb
test
inc
arpl
int
jmp
scas
xchg
push
xor
xchg
and
scas
std
das
andnps
sbb
jne
mov
add
lea
mov
inc
or
add
mov
ss
jno,pt
ret
mov
xor
adc
test
stos
pop
mov
in
aas
ss
scas
sbb
mov
cmp
popf
adc
out
lods
test
arpl
mov
gs
xor
or
imul
or
push
push
and
jecxz
stos
lret
push
js
aad
xor
jle
inc
dec
aad
pop
add
add
dec
jae
std
in
adc
mov
int3
fnstsw
jge
fcomps
push
cmpsb
sub
addr16
test
xlat
and
gs
movsb
cli
stc
pop
mulb
clc
cmpsb
rclb
mov
fnstenv
bound
mov
fnsave
lahf
test
loop
add
roll
shll
push
jmp
sbb
jne
jo
arpl
aaa
hlt
mov
std
dec
and
xchg
pop
mov
add
mov
push
aad
push
ret
mov
jb
repnz
ja
aaa
testb
sbb
sti
pushl
xor
adc
cmp
push
dec
or
xchg
mov
sub
cltd
pop
push
sub
inc
dec
push
or
lahf
add
and
fwait
and
inc
aas
mov
xchg
filds
aad
into
jp
fidivrl
xor
sarb
add
xor
mov
mov
loopne
cmp
je
in
jae
sbb
out
xchg
arpl
mov
add
adc
orl
and
xchg
or
ret
sub
test
daa
adc
sub
and
rol
or
shll
xor
push
mov
hlt
and
insb
mov
aaa
jbe
in
cmp
xlat
scas
add
test
jge
pop
sub
mov
or
sub
dec
idivb
dec
loop
iret
out
pop
outsb
or
repz
push
mov
adc
in
fdivrs
cmpsb
mov
sahf
jnp
push
mov
cmc
or
sbb
sbb
cmp
icebp
cmp
cltd
adc
jecxz
fildl
cmpsb
mov
jmp
inc
mov
mov
push
in
mov
cwtl
mov
andl
cmp
sahf
lods
rcrl
iret
fildl
por
add
xchg
ds
mov
test
dec
push
ret
adc
inc
pusha
jo
xabort
xchg
push
lcall
mov
int3
or
lahf
push
jp
jle
sbb
sahf
je
cmpsb
test
imul
push
shrb
push
mov
dec
xchg
push
xor
lds
lcall
xor
imul
push
xchg
inc
cld
lcall
jle
fwait
cmpsb
mov
mov
scas
scas
aaa
push
mov
pop
lret
pop
adc
sarl
pop
xor
test
aam
addb
cltd
jle
and
push
mov
cli
pop
fists
shlb
add
adc
cltd
or
call
jg
in
enter
inc
or
jnp
shl
lcall
in
xor
jns
clc
sbb
insl
cmp
aad
loope
pop
cmp
push
ret
xchg
xor
cmpl
mov
push
in
mov
fwait
clc
notb
push
addr16
enter
pop
cmpsl
dec
test
in
add
repnz
fmuls
shrb
adc
push
xorl
je
pop
xchg
jmp
cli
pop
shll
pminub
pushf
insb
sarl
rorl
stos
push
jg
and
das
pop
jns
xchg
or
fsubrl
dec
mov
push
sti
mov
adc
xchg
jg
jmp
rorb
ror
cmp
pop
pusha
push
roll
mov
out
test
test
push
stc
stos
in
push
popf
int
mov
popa
ret
xchg
pop
bound
inc
push
pop
and
xor
mov
adc
cmp
dec
mov
rorl
mov
shll
lods
dec
mov
popf
push
neg
je
inc
inc
out
cmpsl
mov
add
stos
xor
mov
iret
sarb
popa
shll
idivl
mov
outsl
sahf
mov
movsb
adc
jmp
rol
xor
jno
or
repnz
test
dec
pushf
push
adc
shll
pop
stos
lahf
int3
iret
push
in
cld
sarl
add
mov
pop
cwtl
xor
rcl
mov
int3
nop
and
test
das
mov
lods
inc
iret
rol
fwait
je
mov
mov
xor
stos
and
xor
mov
pop
inc
dec
xor
int3
mov
push
fists
stos
outsb
or
imul
dec
push
push
mov
inc
mov
aad
sarl
adc
or
pop
das
ss
inc
mov
outsl
mov
dec
outsl
dec
ret
dec
add
mov
aaa
aad
push
lcall
pop
or
lea
fcomps
es
sub
sbb
mov
loope
xchg
mov
test
inc
xor
xor
cltd
push
adc
lret
flds
pop
mov
pop
cmpsb
mov
pop
imul
push
mov
sub
daa
or
stos
xchg
arpl
xor
fsts
mov
rorb
sub
jecxz
fmull
dec
jnp
inc
outsl
mov
jge
sub
lds
xor
out
push
int
es
sti
xchg
adc
cmp
and
sbbl
outsb
fistl
enter
je
scas
lods
imul
lret
mov
add
fidivrs
push
cwtl
ss
fdivl
lcall
aad
mov
scas
sub
in
stc
sbb
xor
sub
pop
enter
test
mov
or
pop
clc
cwtl
leave
add
pop
and
cli
cli
mov
outsb
fistpl
adc
roll
iret
mov
js
mov
push
jne
jns
add
das
es
int3
xchg
pop
mov
xchg
int3
xlat
and
rol
mov
outsl
mov
lahf
mov
insb
ret
mov
test
dec
shll
decb
pop
hlt
daa
das
mov
jmp
test
in
cmpl
js
cli
xorb
xchg
and
test
dec
mov
mov
dec
lock
cmp
mul
xchg
inc
call
adc
jne
dec
std
mov
cmp
repz
fmul
andl
cs
int3
xchg
icebp
pusha
repz
cmpsb
loop
mov
movsl
clc
jnp
pop
mov
xchg
sbb
pop
les
push
dec
jg
iret
pop
outsb
sahf
xchg
adc
sahf
orb
and
outsl
scas
xchg
push
mov
xor
mov
es
fwait
aaa
cmp
push
stos
test
mov
cmp
aaa
mov
test
test
icebp
std
add
aad
push
jmp
cli
mov
xor
dec
out
or
jne
jmp
into
fsubl
fcmovnb
adc
shrl
mov
mov
out
in
push
add
add
cmp
mov
mov
sub
push
nop
xor
les
pop
xchg
hlt
je
jp
iret
sub
cli
inc
mov
imul
rolb
popf
sbb
lcall
pop
cltd
movzbl
mov
mov
xor
sti
inc
aas
push
xchg
ss
rol
in
jp
push
test
jns
fnstcw
adc
or
pusha
sti
dec
cmp
ds
jecxz
cmc
mov
mov
xchg
in
xchg
in
mov
xor
insl
ror
push
push
and
xor
in
push
mov
sub
aad
sahf
ret
pushf
fisubl
subl
xchg
inc
adc
xor
out
jge
jmp
dec
outsb
push
shlb
lret
pop
mov
rol
lea
sar
cld
xchg
cli
pushf
push
jl
and
push
add
pop
and
and
dec
cltd
add
push
sub
jle
lock
popf
outsb
add
lds
in
movsl
aaa
repnz
je
add
addr16
mov
adcl
adc
or
cld
mov
jle
mov
les
cs
lock
sub
rcll
fimuls
adc
pusha
jge
fs
jmp
xchg
push
ljmp
cld
mov
sar
xor
ret
mov
adc
inc
lret
push
dec
loopne
ficoml
mov
or
int
pop
outsb
aaa
notl
xchg
test
ror
aaa
insb
mov
adc
dec
shlb
sbb
cltd
scas
adc
int3
test
pop
inc
jo
jne
or
jmp
js
addr16
loope
or
cli
xchg
loopne
roll
loopne
scas
gs
adc
sbb
lret
stc
push
stos
and
add
mov
pop
push
lret
push
bound
lock
es
sbb
sbb
jno
cmp
adc
testb
add
xchg
cli
fdivs
ret
inc
test
mov
stos
mov
sbb
js
pop
inc
fucomi
pop
addr16
jmp
enter
pusha
insl
xchg
sub
jg
sbb
sarl
sbb
es
into
imul
out
imul
inc
les
mov
inc
ljmp
mov
mov
lret
cwtl
sub
mul
ljmp
sti
and
or
leave
push
arpl
pop
stos
mov
push
mov
xchg
mov
sbb
or
loop
xor
fsubrs
xchg
and
fidivl
adc
xchg
push
push
aas
pushf
inc
fiaddl
push
ljmp
sbb
sti
sti
lret
lret
cmp
mov
xorb
cltd
dec
into
xor
pop
jg
xor
cmpsl
xor
dec
sahf
pop
cmp
and
push
int3
adc
mov
sub
test
stos
jns
add
xchg
and
movsb
pop
mov
adcb
jge
aam
sub
push
add
jno
or
jmp
fcomps
xchg
cmp
lds
out
fbld
shll
fcmovbe
lods
xchg
fdivrl
out
in
xchg
adc
mov
push
pusha
dec
jl
fsubrl
clc
cmp
and
dec
mov
lds
test
or
inc
push
sbb
mov
stc
push
mov
pop
push
inc
push
sbb
dec
and
cmp
and
add
xlat
mov
pop
jbe
sub
cli
pop
pusha
popa
pop
out
jl
pop
pop
cmp
xchg
aam
adc
mov
sahf
outsl
push
icebp
pop
or
dec
jmp
cmp
mov
nop
push
mov
or
lea
je
cmp
outsl
push
aam
arpl
xchg
fsubl
xor
test
lods
fs
testl
jecxz
cmp
outsl
inc
push
fwait
mov
pop
pop
inc
movsl
xor
repz
xchg
test
stos
dec
push
outsl
jmp
scas
mov
fisubrl
cmp
jg
or
push
ljmp
fstp
enter
cltd
mov
icebp
aaa
hlt
es
sti
push
xchg
ret
xchg
insb
pop
push
jle
das
movb
dec
mov
push
popa
in
sub
outsb
xor
xor
push
fs
pusha
add
pop
je
mov
cwtl
inc
cltd
stos
mov
dec
loop
push
ret
and
push
and
mov
loop
push
fcom
dec
and
push
lcall
sbb
inc
test
ja
jne
pusha
or
andb
jns
xor
dec
dec
xchg
mov
xor
sarl
sub
mov
mov
notl
jno
lahf
sbb
cmc
insb
dec
inc
repz
xor
js
or
in
insb
xchg
jmp
bound
xchg
movsb
adc
cmpsl
std
sbb
insl
pop
cmp
lea
cmpsb
mov
sbb
cmp
xor
sbb
dec
cmpsb
lods
subb
sahf
push
pop
movsl
xor
jnp
fnsave
popf
inc
mov
mov
push
xor
dec
sbb
sti
aaa
push
cmovg
test
stos
pop
xchg
xchg
fidivl
arpl
cmpsb
leave
lock
push
cli
add
mov
stos
fistpl
iret
aad
mov
xchg
jle
adc
fisubrl
test
mov
inc
inc
mov
loope
in
pop
sbb
mov
sub
xchg
mov
push
loop
sbb
push
dec
mov
cltd
inc
insl
push
aas
xor
dec
mov
movsb
jbe
xchg
sbbl
push
mov
or
addr16
jp
push
mov
lea
or
mov
je
test
jecxz
lods
cmp
xor
jo
pushf
push
loopne
sbb
pop
outsl
andb
xor
sub
enter
cmp
popa
jb
jp
shll
addb
xabort
std
test
movsb
dec
sub
cmc
shlb
fsubrl
jg
jmp
loope
pop
pop
mov
push
xchg
push
outsb
xor
or
ds
scas
lahf
sbb
mov
mov
sub
add
mov
cmpl
mov
popa
ljmp
aas
sub
sub
mov
sbb
inc
stos
mov
in
inc
ret
int3
mov
dec
adc
push
jb
das
or
outsb
sti
mov
xor
into
imul
jge
adc
sbb
mov
and
push
lret
andl
push
mov
movb
inc
mov
xor
les
enter
mov
fldpi
lret
add
outsb
mov
mov
adc
stc
adc
sahf
repnz
inc
xor
loope
out
jne
lahf
pop
mov
call
jne
sbb
movsl
daa
xor
iret
scas
sub
pop
pushf
nop
repz
mov
and
and
and
rolb
or
push
jl
je
lret
inc
je
adc
jno
inc
push
aaa
xchg
mov
add
xor
loopne
ljmp
dec
xchg
insl
pop
and
adc
rcll
cli
sbb
mov
sbb
idivl
and
inc
and
aam
mov
fs
mov
mov
and
dec
push
jns,pn
pusha
jo
adc
or
mov
fimuls
int
loopne,pn
testl
mov
punpcklwd
in
inc
mov
mov
scas
push
sbb
icebp
insb
xchg
adc
xchg
pop
jl
ss
mov
enter
and
das
xor
filds
jo
inc
in
jbe
mov
cmp
adc
fdivrs
jge
inc
pop
fmuls
bound
push
cmp
mov
int3
push
es
cmpsb
call
hlt
xchg
adc
xor
mov
aas
jmp
sbb
data16
and
std
inc
arpl
push
int3
popl
negl
pop
repz
les
xchg
in
cmpsl
popa
cmp
out
sbbl
movsb
mov
mov
add
or
inc
mov
jae
fnstenv
das
push
aam
and
sub
testb
stos
bnd
adc
psrld
stc
and
rcrl
push
lahf
pop
push
je
inc
les
sub
loop
daa
or
std
jno
sbb
pop
adc
popf
das
or
cld
push
mov
das
push
add
mov
dec
fs
ret
data16
xchg
mov
fists
int
xchg
push
scas
inc
repnz
push
adc
cmp
xor
sub
fsubl
xor
cwtl
push
es
pop
lret
pop
lods
pop
fcompl
lret
xchg
ja
mov
lcall
xchg
push
mov
sbb
adc
data16
notb
enter
mov
adc
or
or
es
push
cmp
call
or
lea
loop
jle
sbb
pushf
rcr
repz
adc
adc
in
xchg
mov
dec
mov
loopne
cmc
negl
xor
mov
insb
jns
hlt
sti
cmc
enter
adc
xchg
pop
lret
popf
test
aam
inc
sub
nop
mov
jae
and
sbb
lods
mov
and
inc
stos
xchg
bound
mov
lods
ss
loope
pop
imul
pop
fisubs
xor
push
add
lret
pop
insl
movsb
fldl
cli
pop
dec
cmpsl
and
mov
ret
imul
jbe
cltd
repnz
mov
adc
outsb
lea
xchg
fs
shlb
stos
vpsubsw
insl
pop
push
push
inc
inc
mov
add
std
push
mov
mov
pop
gs
loop
ret
scas
xor
ss
loope
lock
or
add
fnstenv
add
lret
mov
addr16
add
dec
sahf
insb
stos
jg
cmpsl
out
xorl
enter
jecxz
loopne
in
test
pop
repnz
in
jno
adc
jne
jae
xor
cmpsl
cmp
stos
mov
aad
mov
xchg
add
push
in
pop
mov
test
rcll
loop
js
sub
in
sub
push
dec
sub
enter
lret
xor
mov
xchg
cmp
in
pushf
dec
arpl
nop
add
push
aam
cmpsl
jnp
inc
xchg
sahf
imul
sbb
fisubrl
lcall
in
nop
test
outsb
bound
pusha
cmp
iret
jg
mov
adc
push
adc
or
pop
lods
xor
pusha
push
add
pusha
sub
out
loopne
lret
js
subb
mov
ljmp
arpl
cmp
das
iret
dec
pop
cmp
aam
cs
add
movsl
xor
jle
in
pop
pusha
xor
aaa
inc
xor
mov
loopne
fmul
sarb
in
xchg
xchg
and
mov
js
mov
call
imul
enter
jmp
movsl
into
cmpsb
ja
dec
inc
mov
sub
adc
addr16
out
cmp
jb
rcll
cmp
jecxz
out
gs
and
or
imul
ffree
insl
out
mov
or
pop
push
sub
xchg
das
call
cmc
faddl
adc
movsb
lds
sub
xor
fmulp
push
jo
fsubr
dec
cld
xor
fnstenv
mov
imul
imul
data16
clc
push
mov
loop
xchg
adc
jb
cmp
sbb
xor
dec
push
sbb
xor
push
xor
mov
js
subb
mov
and
sub
cmpsb
inc
pop
mov
jne
pop
cmpb
jmp
test
fildll
repz
push
mov
sti
jmp
inc
or
shl
enter
shlb
insl
int
mov
repz
mov
call
xor
jae
add
call
js
jmp
xchg
aas
or
lret
sbb
jno
popa
adc
ljmp
shlb
loop
leave
icebp
pop
adc
mov
push
pushf
sub
or
inc
negb
pop
loop
mov
clc
call
inc
dec
xor
mov
sbb
stos
xor
pushl
push
addb
stos
scas
test
test
cwtl
arpl
cld
lret
sbb
push
cli
movsl
add
in
push
mov
xor
push
push
out
pop
js
cltd
and
sbb
out
ljmp
push
movsb
loopne
mov
andl
mov
lods
lahf
and
testl
leave
jb
pop
fpatan
mov
notb
ret
sub
ret
out
fdiv
es
mov
jb
cmp
sub
data16
adc
into
shl
cmp
push
or
or
imul
inc
and
cmp
arpl
lock
mov
testl
push
ret
les
int
mov
rclb
call
xor
lea
jmp
vpshufd
popf
sub
cwtl
jbe
pop
mov
aas
adc
cmp
shlb
nop
js
mov
cmp
fisttpll
sbb
or
mov
jae
test
push
aad
lea
dec
cli
pop
mov
sbb
mov
inc
cmp
and
lock
xchg
cmp
and
adc
mov
jmp
aam
mov
push
pop
mov
loop
pop
std
add
repz
imul
pop
xchg
bound
icebp
jmp
lods
inc
aam
inc
lods
popl
sub
cwtl
push
lds
adc
es
stc
sub
dec
into
out
imul
xchg
incl
or
and
cmp
jno
push
mov
testb
and
and
clc
ds
andl
inc
repz
adc
adc
out
in
lds
cmpsl
push
cwtl
add
add
in
mov
sbb
in
scas
fidivrl
xor
xabort
pop
lcall
xor
jp
outsb
negl
push
sbb
inc
inc
iret
mov
ret
jl
ja
subb
xor
inc
cmp
sbb
add
xchg
mov
out
sarb
add
sub
leave
ret
lock
xchg
out
pop
xchg
stos
shlb
cmpsl
popf
mov
inc
es
jmp
out
or
lcall
in
mov
mov
jg
xor
pop
mov
jmp
mov
test
adc
js
cmp
mov
lahf
shlb
scas
and
ret
std
addr16
cmp
sbb
sub
cli
test
add
fs
out
addr16
pusha
sarb
dec
fimuls
jae
mov
nop
js
cmp
mov
insl
sbb
or
mov
ja
arpl
scas
addl
out
lahf
add
jnp
xlat
sbb
jmp
dec
andl
out
dec
aad
stc
ficompl
int3
or
jecxz
jl
loope
jmp
cltd
and
mov
push
sbb
mov
inc
or
filds
cmp
int
scas
push
push
imul
sbbl
or
mov
dec
lcall
xor
nop
rep
pop
lods
out
ret
pop
xlat
sub
loopne
push
rcll
push
shlb
pop
fisubs
xchg
pop
mov
enter
dec
sub
sbb
push
into
lret
xor
lcall
inc
add
or
lret
cwtl
sub
enter
dec
sub
add
pop
dec
insb
cld
ljmp
adc
imul
leave
je
loope
push
xor
cmp
jae
out
adc
loope
cmp
icebp
cmp
aam
pop
or
movsb
mov
push
mov
jg
dec
dec
int
call
repz
cmp
pusha
rorb
es
jmp
rcl
pop
adc
adc
aad
or
mov
in
aad
mov
leave
cmpsb
xlat
icebp
dec
arpl
stos
aaa
or
inc
xchg
push
loopne
pop
pusha
mov
fbld
pop
imul
rcrb
lahf
mov
lret
pop
and
pop
add
rcrl
mov
loope
dec
rcrl
and
in
jmp
jp
outsl
in
fidivrs
mov
test
mov
cmp
hlt
pop
iret
pop
sub
jb
fcomps
push
inc
loope
pusha
testb
unpcklps
cmp
cwtl
loopne
and
mov
testl
pop
shlb
roll
test
cwtl
les
pop
stc
mov
in
xlat
add
in
mov
daa
les
cwtl
in
pop
mov
sub
sbb
popf
inc
xchg
lret
jo
xchg
lcall
push
test
imul
mov
data16
push
add
sub
mov
unpckhps
loop
scas
insb
add
dec
mov
xchg
out
sbb
pop
jns
add
sub
aad
ss
fisubrl
xlat
aaa
jae
je
clc
aam
data16
ret
mov
adcb
and
loope
fdivp
adc
gs
icebp
push
dec
pushf
xchg
pop
movsl
loopne
subl
mov
mov
hlt
add
out
jno
negb
test
and
xchg
test
push
mov
aaa
roll
xor
mov
cs
daa
xor
leave
ret
mov
iret
in
and
push
or
lea
mov
pop
pop
inc
pusha
outsl
and
xchg
mov
jb
je
shlb
shrb
jmp
ljmp
jnp
lods
fldt
sbb
faddl
clc
clc
xlat
or
jge
push
mov
inc
cltd
mov
popl
jno
inc
adc
adc
movsb
fisttpl
or
mov
fdiv
xchg
push
and
out
fs
dec
sub
sub
hlt
adc
jne
mov
jl
ljmp
loope
fwait
insb
dec
or
lcall
testb
and
outsl
mov
jo
mov
dec
gs
test
filds
call
cmp
test
pop
into
imul
into
vmovdqa
adc
adc
scas
push
das
push
loope
cmp
popf
push
jae
pop
mov
push
and
pop
das
pop
fs
ret
and
test
rol
call
push
mov
xchg
daa
lods
js
and
push
and
sbb
vmread
cmpsb
aam
adc
inc
xchg
xchg
mov
pushf
push
movsl
mov
and
rcrl
xchg
outsl
dec
push
xchg
mov
mov
insb
stos
lds
cli
pop
mov
sub
loopne
mov
sub
jle
mov
jge
xchg
pop
mov
les
jo
fucomp
pop
add
pop
out
sub
outsb
dec
xchg
loopne
stc
pop
mov
popf
dec
movsl
and
xchg
in
mov
push
in
lock
xor
fisttpll
pop
adc
dec
stos
add
and
dec
mov
lock
movsb
sub
ja
dec
aas
aad
xchg
in
sarb
in
add
or
dec
mov
pop
sub
cwtl
leave
and
sub
hlt
push
xchg
js
sbbl
and
cwtl
test
popa
jp
inc
pop
jae
pop
mov
testb
jle
dec
aaa
push
out
xchg
fistpl
fs
mov
scas
ja
mov
iret
aad
mov
cmp
popa
jge
stos
inc
pusha
rolb
lock
movsb
dec
and
addl
xchg
scas
imul
addb
out
adc
dec
mov
pop
cwtl
mov
inc
fiadds
jle
dec
mov
sbb
pop
cs
jbe
jno
pushf
pop
pop
into
mov
xor
add
xchg
push
or
fsubs
rolb
mov
test
ljmp
push
pop
xor
js
fdivp
outsb
mov
xchg
mov
outsl
dec
cmp
mov
or
test
xchg
popa
std
mov
in
push
mov
aaa
sub
sub
cmp
nop
data16
mov
stc
push
mov
lods
jae
movsl
inc
iret
inc
pop
push
or
ljmp
add
jmp
mov
mul
and
std
lret
int
xchg
shr
fadds
in
inc
bound
fcoms
pop
jns
daa
cmp
cmpsl
and
add
testl
ficomps
or
and
not
gs
test
fisttps
jns
sahf
test
test
lret
mov
outsl
and
pop
and
add
jmp
pusha
imul
push
and
add
int3
jo
int3
add
or
pop
fiadds
adc
popf
pusha
movsb
popf
pop
jle
inc
xchg
jb
mov
sub
jl
cli
push
mov
sbb
mov
popa
add
inc
ljmp
les
insl
xor
mov
sbb
cmp
popa
in
jno
aas
push
jae
fistpl
adc
sbb
push
mov
andb
daa
jp
mov
sbb
nop
mov
neg
push
push
pushf
cs
mov
xor
mov
test
jecxz
inc
sub
xor
inc
dec
adc
lds
adc
cs
add
fnstenv
imul
cmpsb
dec
pushf
add
daa
pop
push
cltd
dec
or
cmc
aaa
aad
movsl
mov
xor
lcall
mov
fdivs
mov
jbe,pn
xor
push
dec
fildl
sub
nop
out
pop
dec
push
xor
and
inc
pop
and
dec
inc
pop
les
fsts
cmp
sub
ret
sahf
sub
cmpl
dec
mov
jle
aaa
lahf
mov
repnz
and
jle
push
push
icebp
into
in
push
xlat
in
sub
pop
fld
pop
dec
jl
roll
jne
adc
mov
push
jbe
in
mov
faddl
cwtl
dec
clc
test
push
pop
xchg
pop
mov
push
scas
inc
movsb
add
mov
or
fdivp
mov
xor
das
aam
pop
inc
dec
fists
jnp
icebp
test
mov
xlat
push
mull
adc
sbb
inc
leave
mov
shr
sar
data16
bound
and
into
arpl
rcrl
loop
divl
xchg
mov
mov
dec
rol
test
add
xor
xchg
push
sub
mov
dec
add
mov
sbb
xor
in
sub
push
fwait
pop
test
loope
or
mov
int
push
pop
iret
mov
aam
mov
mov
pop
push
push
pop
sbb
icebp
xchg
out
nop
lds
mov
mov
daa
fcomps
cmpsl
mov
sub
jae
mov
push
add
dec
xor
call
add
popf
mov
fwait
insl
lea
xchg
stos
push
cs
pop
rcrb
inc
cmp
jns
and
push
push
inc
or
repnz
std
and
jae
or
mov
jne
jno
mov
cmc
mov
jns
test
add
cli
mov
xchg
mov
cwtl
rcrb
lock
out
dec
push
ljmp
mov
push
jle
lahf
cmc
jae
inc
sbb
movb
data16
sbb
nop
pop
add
jmp
lds
repnz
inc
insb
xchg
jecxz
push
sub
rcrl
out
aad
ja
arpl
data16
push
mov
push
cmpsb
jno
add
lods
test
push
mov
mov
cmp
lret
jp
pop
inc
pop
subb
mov
scas
ficoml
add
or
pusha
fs
sbb
bound
popf
adcl
stos
xchg
std
dec
inc
xchg
push
cmpsl
sti
pop
mov
leave
xchg
das
cwtl
adc
push
and
mov
lds
popa
cmp
jo
xchg
addl
xor
pop
scas
sbb
cwtl
xchg
movsb
aaa
fdivrs
jbe
incb
push
push
insl
mov
mov
scas
xchg
shlb
stc
out
jo
adc
in
cmp
xchg
mov
std
jp
inc
mov
mov
ds
lret
int3
cmp
jle
stc
icebp
ret
sub
mov
std
mov
or
sbb
in
or
movsb
nop
mov
dec
ljmp
xor
shll
jl
sub
push
ds
push
xor
stos
cmp
lods
mov
pop
out
mov
adc
mov
mov
lret
pop
mov
push
fs
pushf
imul
push
pop
je
test
jb
adc
fisubrl
and
mov
frstor
push
rolb
xlat
js
mov
into
cmc
sbb
sti
fsubs
pop
aam
movsl
xchg
jne
hlt
xchg
in
idivl
mov
mov
jbe
rcrb
dec
jns
das
push
mov
push
repz
fs
scas
ja
jp
adc
je
out
mov
or
xchg
push
in
lods
out
push
in
xor
and
scas
fldt
cld
in
imul
jmp
mov
sub
mov
gs
sub
pop
lock
in
orb
pop
aam
and
int
push
jl
push
fdivr
push
pushf
aas
add
dec
ss
data16
repz
fcmovnbe
cmc
pop
sbb
ret
add
mov
insl
inc
jp
outsl
jge
insl
out
inc
inc
call
and
cmp
sbbb
adc
scas
fisubrl
xlat
rorl
lahf
test
and
in
testl
adc
sarl
insl
xor
or
imul
lcall
push
pop
bound
mov
or
push
iret
cmp
add
push
shr
mov
icebp
into
or
jne
inc
cmp
xor
pop
clc
pop
pop
rorb
mov
xlat
ret
ja
in
fstl
or
inc
mov
shll
adc
xchg
add
push
cmp
xchg
test
mov
pop
js
das
dec
jb
int3
aam
jg
sub
pop
gs
lret
js
lret
jae
sahf
inc
sti
xchg
push
pop
inc
jle
pusha
scas
out
push
cwtl
testl
enter
mov
loopne
xchg
nop
mov
loope
shl
clc
xchg
and
mov
jl
xor
rcrb
mov
mov
dec
lcall
mov
stos
aam
xchg
push
mov
in
pusha
repz
outsb
lret
inc
sub
pop
push
mov
xor
mov
fdivl
xchg
dec
iret
fcomps
int
push
mov
iret
adc
cmpsb
mov
cmp
shll
loop
mov
mov
cmpsl
sub
add
in
lods
roll
xor
jae
xchg
jae
outsb
addl
in
jp
dec
data16
in
mov
bound
pop
xchg
push
adcl
popf
pextrw
roll
out
xchg
nop
push
hlt
push
fs
push
fwait
sbb
pushl
pop
inc
pop
in
jecxz
jecxz
int
add
sti
mov
cmp
pop
push
jl
sahf
std
enter
fs
roll
jle
sbb
inc
pop
push
add
rclb
test
xchg
insl
cmp
mov
adcl
insl
cmp
repnz
xor
mov
dec
cmp
push
jge
pop
movsl
xchg
pop
js
adc
pushf
shlb
imul
jle
mov
sarb
loop
pop
lahf
jge
cld
rcrl
fsubs
mov
mov
push
sbb
or
ffreep
dec
ljmp
add
cmpsb
sahf
jle
and
and
in
mov
and
ljmp
movsl
add
sub
ljmp
inc
pop
jp
emms
out
ljmp
sysenter
and
mov
lods
xor
or
sahf
shl
cmpsb
adc
clc
mov
aam
aas
jbe
into
sbb
out
loope
sub
add
xor
sub
dec
pop
jne
mov
imul
mov
push
mov
sar
sbb
lea
sub
rcrb
insl
pop
fnsave
shl
adc
push
add
and
data16
in
jle
or
loopne
mov
xchg
and
les
jmp
add
push
clc
mov
jle
inc
or
mov
mov
lahf
fwait
lds
add
call
xor
ljmp
jle
cltd
sti
and
mov
push
xor
popa
xor
leave
lds
jle
sub
mov
and
jle
mov
and
inc
mull
push
enter
sub
sahf
xor
ds
popf
lea
lock
xor
xor
test
lret
inc
aas
mov
cmc
jo
inc
cmp
fists
popl
push
add
js
cmp
pop
repz
iret
adc
jno
xchg
daa
rorb
add
daa
push
lret
push
std
movsb
cs
daa
jl
mov
mov
cmpsb
aad
push
xchg
jecxz
cmc
gs
dec
mov
jnp
sub
das
pop
add
or
or
jb
sbb
jl
jp
push
xchg
clc
out
jns
pusha
lahf
out
sub
insl
push
inc
pusha
dec
add
hlt
cmpsl
in
or
jb
dec
ja
imul
and
shll
sub
sbb
into
loopne
and
stos
or
gs
pop
add
fiaddl
mov
pop
pop
jno
adc
push
adc
mov
mov
stos
ret
rorb
sbbl
loop
hlt
popf
pop
mov
xchg
stc
setp
cmc
mov
pusha
jb
cmp
ja
xchg
sub
lds
scas
insl
aaa
adc
xchg
dec
idivb
mov
and
imul
roll
jg
mov
leave
xor
dec
aam
pop
popf
adc
sbb
pop
aad
mov
psubusw
ljmp
mov
and
mov
scas
aas
xor
ss
inc
clc
sub
pop
outsl
or
push
ficomps
jno
ja
and
loopne
mov
inc
into
add
add
pop
xchg
push
rorb
adc
and
rcrl
push
nop
leave
test
cli
in
inc
pop
lret
ds
adc
mov
push
neg
cmp
pop
sbb
out
stos
dec
jnp
scas
lock
dec
std
lods
scas
pop
cltd
out
aad
xor
dec
pop
roll
std
dec
jl
shrb
ret
or
and
std
les
or
insb
mov
fsubrl
xchg
fs
cmp
test
rolw
jmp
ficomps
adc
jge
cmp
ficoml
mov
cltd
test
mov
imul
jmp
adc
insl
bndldx
pop
out
testl
cld
sbb
lret
and
in
mov
adc
cmpsb
pop
stos
in
ret
or
inc
call
into
test
sbb
fs
and
and
mov
pop
insl
add
movsb
pop
mov
sti
sbb
adc
loopne
addb
fwait
push
push
dec
inc
adc
leave
cmp
mov
pop
loop
add
push
aam
pop
inc
sub
pop
sbb
ret
lcall
inc
out
enter
xor
push
inc
repz
sti
cld
push
addr16
int
mov
decl
pop
mov
inc
push
jmp
push
out
rolb
and
adc
push
or
leave
mov
ja
push
fnstcw
jecxz
loop
negl
mov
jno
enter
or
pop
sbb
cld
sub
or
in
insb
dec
pop
je
mov
adc
lret
popl
push
add
cmpsl
jb
jb
sub
and
jne
push
xor
or
pop
rcrl
pop
push
inc
inc
js
push
call
sub
push
dec
adc
inc
int3
insl
sub
add
je
pop
pop
in
dec
add
sahf
lret
outsb
into
ss
push
aam
mov
inc
pusha
daa
rorb
and
stos
outsl
movsl
jae
test
sub
inc
adc
jbe
push
fists
gs
cmc
sbb
gs
aad
ljmp
sbb
mov
jl
sar
insl
adc
int3
add
es
pop
lock
jecxz
add
stc
jne
sub
mov
daa
imul
jb
mov
ret
add
jbe
xchg
mov
jg
sbb
cmpsl
jle
in
fld
mov
addr16
lea
lahf
sbb
popa
adc
fs
jecxz
lcall
jo
scas
push
bound
mov
mov
adc
xchg
leave
inc
test
sbb
int3
inc
jl
jp
mov
das
or
cmp
or
add
push
mov
xchg
xchg
movsb
lods
outsb
incb
lea
jbe
xlat
fwait
push
inc
sub
push
mov
adc
pop
mov
rcl
xor
iret
lock
pop
and
cmc
inc
addr16
dec
jmp
in
push
sub
nop
test
pop
aam
adc
mov
iret
fcom
sbb
fs
xor
pop
movsb
stos
in
lret
jge
out
out
daa
outsl
ds
jle
adc
je
add
aad
jae
sbb
push
xor
mov
pop
ret
testb
enter
popf
cli
mov
cwtl
xor
gs
cmpsl
jno
jne
mov
je
sub
enter
aam
and
int3
dec
xor
ljmp
mov
enter
cwtl
jecxz
aaa
movsb
dec
xchg
and
int
dec
fdivs
push
int
loope
xchg
cmp
xchg
or
adc
sub
xchg
rcrb
sahf
xor
ret
mov
pushf
insl
mov
adc
lea
pop
lds
cld
mov
insl
xor
and
mov
and
call
mov
add
inc
xchg
insb
or
jb
pop
mov
dec
cmpsb
xchg
mov
cs
addr16
pop
mov
pusha
mov
fldcw
dec
iret
icebp
sub
add
pop
push
fisubrs
sub
mov
pop
and
call
mov
sub
popf
stc
jb
push
gs
cmp
fildll
fmuls
xchg
hlt
jge
and
jge
fldcw
ret
stos
jo
ret
mov
outsl
nop
mov
cmp
sbb
xlat
and
pop
mov
bound
mov
mov
gs
mov
xor
fnstcw
in
and
cmp
lock
aam
shlb
icebp
icebp
lods
sub
aas
ja
lea
add
mov
sarb
mov
inc
mov
aam
mov
jp
jnp
cwtl
rcrl
gs
movsl
push
orb
push
mov
inc
mov
xchg
jb
jl
hlt
imul
imul
lret
je
xchg
xor
out
out
cld
testl
les
mov
mov
mov
sbb
push
rolb
mov
cs
mov
xorb
jns
aas
and
mov
aam
dec
sbb
push
mov
mov
sahf
mov
mov
mov
adc
cltd
mov
out
push
mov
mov
or
dec
mov
and
pop
in
xchg
repz
jmp
scas
jmp
cmp
ds
mov
sahf
ror
mov
imul
inc
rcrl
jo
hlt
imul
jle
clc
mov
ja
dec
ret
cld
enter
sbb
jecxz
xchg
imul
or
add
popl
hlt
shll
mov
add
sarl
call
jl
test
pop
into
pop
outsl
in
popa
mov
jmp
pusha
lret
add
adc
inc
push
mov
xchg
mov
or
outsb
sar
jns
cmp
notl
enter
cs
rorl
sub
jb
movhps
push
lock
cmp
mov
pop
dec
bound
or
pop
fcompl
add
lret
mov
sub
leave
jb,pt
shrb
fwait
fs
and
clc
loope
and
sub
jbe
lds
clc
mov
sub
xor
dec
lret
jo
mov
push
ljmp
rcrl
jecxz
iret
aaa
loopne
xchg
in
mov
xor
or
push
cld
or
sbb
add
movsb
std
sub
sbb
fwait
rcll
lret
cmp
stos
ja
rcll
sti
loopne
int3
jae
adc
mov
mov
mov
aad
add
int3
or
enter
add
aas
push
adc
mov
stc
je
mov
mov
aaa
ds
scas
jmp
sbb
push
pop
dec
aas
dec
out
setge
dec
inc
mov
movsb
addb
mov
lds
sahf
xchg
dec
mov
xchg
jne
jbe
int3
xchg
fbstp
xor
or
add
dec
mov
outsb
lock
fwait
ret
imul
adc
call
jge
add
loop
jmp
or
jge
xchg
ljmp
dec
lods
jae
pop
xorl
adc
outsl
mov
insb
test
jl
sub
cmpb
and
jbe
shlb
mov
aas
decb
push
push
push
loop
pop
fwait
push
sub
and
addr16
inc
inc
or
jno
sub
cwtl
adc
ss
les
lret
adc
xchg
scas
outsl
nop
and
mov
mov
pop
cmpsl
push
mov
dec
inc
add
or
push
sbb
int3
inc
add
hlt
sub
cmp
mov
xorl
jae
mov
xchg
cmp
in
sbb
xchg
pop
add
sbb
sbb
mov
adc
xor
cmpsb
dec
aad
data16
mov
sbb
sarl
out
and
jp
mov
mov
sub
fs
sub
arpl
jl
pop
leave
inc
fistpl
scas
daa
jno
nop
sbb
jnp
mov
aam
movsb
mov
mov
mov
push
cwtl
sbb
in
out
je
push
outsb
ja
add
pop
or
rorl
adc
xchg
xchg
cmp
xlat
fstpl
mov
mov
test
dec
or
inc
stos
jns
movsb
dec
xchg
fucomp
es
and
es
movl
mov
bound
loopne
adc
outsb
lcall
xchg
popf
or
icebp
mov
cmp
lods
sub
sub
test
out
lods
dec
push
mov
cltd
leave
das
lock
mov
dec
fistl
sbb
fistpl
and
bound
xor
dec
jmp
out
jmp
pop
ljmp
mov
dec
pop
sub
and
stos
outsl
push
mov
xor
cmp
cmp
fs
or
stos
xchg
sbb
or
test
jne
xor
jp
fmul
jne
arpl
push
cli
jns
mov
xlat
pop
rorl
js
jo
popa
addb
mov
add
int3
je
or
sahf
in
xchg
movsl
cwtl
xchg
ljmp
in
in
lret
fcoml
fs
cld
mov
dec
and
and
out
js
mov
inc
mov
je
adc
test
xor
popf
int
fnstcw
adc
xchg
fisubrs
inc
push
hlt
lea
add
jnp
fsts
mov
mov
adc
rcl
rorl
or
faddl
hlt
xor
xchg
fsubrs
mov
jns
xchg
cld
mov
add
mov
les
or
shll
jne
dec
ret
xchg
dec
stc
mov
push
sahf
shr
adc
cli
cwtl
mov
mov
fsubp
mov
addr16
push
jo
ja
cwtl
lods
mov
arpl
movb
cmp
inc
aas
in
mov
icebp
das
ja
sahf
das
aaa
jg
imul
dec
sbb
cmp
push
mov
add
mov
sbb
sbb
mov
pusha
test
mov
sti
aad
repnz
jbe
pop
dec
mov
jmp
mov
into
jmp
fiaddl
hlt
les
mov
dec
ror
lock
cmp
mov
cmpsl
pop
es
sbb
xor
lods
mov
fistpll
in
dec
cmp
jl
mov
jmp
cmp
jb
cmp
ds
ror
dec
scas
cmp
test
add
loopne
rcl
dec
cmc
inc
jo
in
xchg
pushf
insb
adc
jge
shrl
in
xor
aam
cmp
mov
outsl
push
jno
ret
enter
sti
repz
imul
xor
dec
mov
outsb
leave
push
sbb
loop
xchg
xchg
shrl
rolb
ret
pop
sbbb
clc
mov
test
arpl
dec
std
scas
lods
mov
imulb
or
pop
lds
rol
movsb
and
cmc
fcomps
mov
ret
stos
mov
jp
sub
cmp
stos
orl
andl
ljmp
mov
dec
ret
enter
in
nop
and
sub
pop
mov
sub
in
jne
push
mov
lods
inc
sbb
sbb
xchg
or
adc
xor
sub
mov
jp
xor
cmp
mov
or
in
dec
xor
inc
xor
add
repnz
add
out
outsl
imul
dec
js
pop
call
stos
sub
add
mov
mov
mov
xor
push
addl
jecxz
xchg
mov
push
inc
jne
pop
mov
sarl
sbb
movsl
clc
shl
sub
cmpsl
mov
lretw
xchg
push
bound
sahf
loopne
jne
adc
mov
stc
pusha
test
and
sub
stc
dec
dec
or
and
lcall
push
push
js
jl
pop
mov
andb
xchg
in
push
or
mov
push
mov
push
sbb
std
ret
xchg
out
cs
jp
xchg
out
inc
aam
dec
es
mov
dec
ror
stc
push
mov
push
xor
rep
xchg
sub
mov
movsb
xor
in
adc
roll
rcll
je
inc
pop
fcomp
repnz
daa
nop
adc
or
mov
xlat
mov
out
dec
push
sub
dec
push
subl
popa
fyl2xp1
push
mov
sahf
push
adc
dec
cmc
imul
pop
shll
imul
int3
cld
pushf
push
push
sbb
and
out
je
push
xchg
xchg
test
insl
mov
mov
in
repz
push
pop
popl
xor
fwait
sub
fiaddl
xchg
sbb
lahf
pop
sbb
dec
popf
inc
clc
add
test
mov
push
popl
pop
xchg
in
sbb
cltd
sbb
sub
mov
and
faddl
negb
pushf
jnp
cli
inc
sahf
jge
daa
jns
push
push
fcoms
testb
sub
andb
sbb
sbb
loope
out
pop
sub
outsb
test
cmp
fbstp
and
testb
and
sbb
mov
stos
adc
cmpsb
hlt
jb
hlt
fwait
push
icebp
push
xchg
loopne
insl
pop
dec
ret
movsb
scas
imull
loope
ret
mov
jmp
sti
xlat
inc
test
inc
adc
jmp
jns
and
add
cltd
jnp
cwtl
jns
lds
mov
nop
sbb
jns
gs
cmpsb
outsb
or
and
add
mov
jns
lock
sub
outsl
cwtl
lods
inc
push
push
popf
lcall
xchg
cmpsl
push
lret
cmp
enter
mov
popf
xchg
cld
ja
lea
dec
addr16
jg
popa
out
shl
div
movnti
rcrb
inc
ss
mov
pop
call
cmp
xor
jbe
inc
dec
adc
subb
mov
push
mov
pop
xor
dec
adc
push
faddl
fmuls
dec
and
inc
pop
xor
inc
jecxz
add
xchg
sbbb
lods
mov
sbb
loopne
mov
mov
xor
out
rorl
mov
dec
xor
or
push
cs
add
adc
fists
test
sarl
mov
stc
jbe
cld
xchg
shlb
sub
xchg
into
mov
dec
enter
sahf
orl
sbb
xor
nop
ret
fstl
je
mov
mov
mov
cmc
sub
out
xor
add
add
and
push
popf
cmp
lret
xor
fwait
popa
xchg
lods
mov
aaa
repz
pop
rcl
mov
and
pop
data16
xor
lock
call
jbe
mov
pop
xchg
xchg
insb
stos
sahf
clc
loopne
aad
lock
dec
stos
mov
stos
dec
add
cli
xor
adc
sbb
arpl
push
jne
mov
test
xor
push
mov
jmp
dec
xor
clc
or
push
sub
nop
ljmp
mov
lea
jb,pt
stos
cmp
xchg
sbb
dec
cli
and
mov
mov
push
std
inc
mov
push
fs
adc
mov
jecxz
cmpsb
mov
mov
and
inc
mov
gs
sub
sub
leave
loop
xchg
dec
test
loopne
js
xchg
popl
mov
jecxz
xchg
lcall
sbb
jno
mov
clc
mov
adc
cltd
push
in
js
mov
inc
or
je
pop
cltd
mov
insl
cmp
fucomi
mov
pop
sbb
js
clc
mov
daa
imul
outsb
adc
xor
repz
ljmp
pop
jne
sub
or
int3
adc
dec
mov
std
dec
inc
out
adc
fcmovne
mov
ljmp
push
xor
in
xor
push
sub
mov
sbb
cmp
or
aad
mov
pop
aam
cld
push
pushf
mov
ficoml
out
adc
xchg
xchg
fisttpll
sbbb
dec
movsl
insb
faddp
add
cmp
or
sarb
adc
push
jae
arpl
mov
sub
xchg
leave
movsb
js
fdivrs
cmp
iret
add
cwtl
jo
sbb
addl
int3
cmp
into
cli
adc
mov
cmp
pop
dec
fists
stos
xchg
out
xor
fidivrl
outsl
loopne
test
jo
lret
pop
loopne
dec
adcb
push
repz
sti
mov
cmpsb
in
pop
lds
dec
push
cmpsl
rclb
pop
pop
and
add
popa
ret
xchg
sub
push
in
loopne
mov
loop
mov
imul
pop
test
inc
push
das
in
push
xor
insl
mov
std
xchg
sbb
push
daa
aam
jno
xchg
dec
adc
jae
aas
sahf
sbb
or
jl
adc
subb
mov
es
mov
dec
or
pop
mov
out
lds
decb
add
xchg
jae
pop
push
xlat
inc
mov
pop
mov
inc
test
sub
jo
add
adc
pop
mov
sub
inc
jp
ficomps
cwtl
and
es
out
sub
scas
loope
mov
sbb
add
sub
fsubrp
mov
xor
adc
nop
lock
push
mov
adc
into
gs
push
pusha
mov
scas
jmp
in
mov
push
pop
aaa
push
push
call
lret
cltd
addr16
pop
inc
jmp
hlt
fxtract
cmp
imul
jae
out
shll
fcomps
add
sti
dec
mov
mov
clc
sub
movsl
in
nop
shrb
aam
add
pop
and
mov
insb
mov
push
pop
sub
ret
stos
in
mull
xor
sub
pusha
lods
pusha
lods
cld
sub
loopne
cltd
mov
sub
inc
cs
add
in
fidivl
scas
inc
inc
pop
stos
xchg
rcl
adc
int
push
push
nop
mov
jle
vmread
ljmp
std
hlt
fstp
push
push
mov
inc
dec
sbb
cmp
xchg
sub
push
dec
ret
pusha
icebp
ret
fldl
lods
popa
sbb
rorl
xor
in
lock
lcall
cmp
ja
repz
mov
in
lods
dec
dec
leave
dec
cltd
out
xchg
jo
inc
adc
inc
arpl
sbb
es
sbb
fcompl
jno
lret
sub
xchg
sbb
inc
fsubrs
push
fucomi
loopne
rcll
xorb
pop
mov
bound
push
cli
mov
push
fisttpl
cmp
aas
push
pop
jae
fistpll
jl
movsl
adc
rolb
xchg
mov
mov
out
inc
jne
cmc
inc
fildll
out
mov
add
int3
sbb
ljmp
sub
mov
push
mov
icebp
lock
mov
out
add
pop
sub
adcb
mov
sub
arpl
shrl
pop
int
add
pop
cmp
sub
leave
jbe
cmp
mov
aam
mov
pusha
lock
stc
movsl
sub
bound
mov
mov
mov
lods
dec
imul
imul
fs
xchg
sbb
adc
cmpsb
into
ret
adc
clts
xchg
jp
xchg
cli
dec
inc
daa
in
push
push
mov
sub
cmp
push
mov
imul
movsb
test
push
push
push
and
pop
nopl
push
adc
adc
imulb
jne
wbinvd
xor
pop
fmull
lods
fst
xchg
into
mulb
filds
and
jmp
call
je
call
xchg
hlt
repz
inc
ffreep
jmp
stos
shrl
push
pop
ror
inc
jnp
insb
sbb
sti
jnp
xor
sub
lret
or
and
mov
mov
and
fistpl
push
aam
or
imul
lds
sarl
cmp
sub
insb
pop
mov
jnp
lahf
scas
test
arpl
xor
jle
mov
push
popf
mov
or
xor
pop
mov
imul
lret
cmpsb
adc
push
push
add
inc
dec
jno
daa
sbb
jmp
jmp
test
lahf
outsl
or
nop
sarb
xlat
imul
mov
jle
aad
cmp
test
fsubp
jl,pn
scas
test
mov
adc
pop
icebp
and
cmp
shrl
or
fucomp
out
fld
adc
mov
cmc
insb
dec
inc
imul
add
lret
and
jl
stos
push
je
pop
xchg
dec
or
pop
cltd
ds
mov
mov
mov
pop
aaa
ret
push
or
mov
or
aad
fisubl
es
mov
jnp
mov
bnd
push
cmp
xor
popa
sbb
sti
bound
sarb
aaa
ja
jno
xor
add
push
fisubrs
out
mov
push
sub
fadds
movsl
cmp
lret
jmp
mov
mov
lcall
jbe
jnp
mov
mov
xchg
hlt
xor
adc
fdivs
in
xor
cmpsb
inc
xor
or
mov
insl
sarl
mov
ds
jmp
cmp
dec
daa
mov
mov
es
and
iret
mov
pop
xor
sbb
push
push
loop
mov
ljmp
inc
mov
pop
out
repz
mov
xchg
adc
mov
fwait
outsl
les
movsl
adc
sbb
icebp
in
cld
aam
int3
push
addr16
pop
or
cmpsb
dec
jecxz
in
lock
jbe
ss
iret
xchg
stos
cmc
or
std
leave
mov
jge
mov
pop
mov
cli
inc
xchg
fxch
out
into
inc
popf
enter
loope
adc
push
stc
xchg
enter
inc
inc
repz
andb
div
inc
add
test
add
cmp
jle
lds
lret
jno
sub
mov
repz
mov
inc
icebp
loopne
hlt
int
mov
pop
adc
shlb
jge
and
pextrw
scas
mov
jns
cmpsb
and
fildl
in
jb
inc
in
xchg
repnz
cmp
call
cmp
int
jbe
sub
pop
ljmp
pop
jge
mov
mov
enter
fimuls
or
mov
shrb
push
push
fists
mov
cmp
jnp
arpl
lahf
das
ret
cmpsb
inc
push
icebp
ljmp
popa
js
jp
out
jmp
mov
push
adc
clc
fcoml
push
push
cmp
lods
aaa
popf
bound
dec
loopne
pop
xor
xor
jmp
cltd
push
inc
xchg
cwtl
mov
xor
enter
cld
pop
addl
roll
mov
sub
movsl
into
mov
cmpsl
pop
js
sub
lret
sub
xchg
cli
add
ja
mov
lea
bound
push
xlat
orb
repz
pop
push
xor
mov
mov
stc
push
in
push
jl
sbb
test
add
xchg
and
aas
test
pop
dec
cwtl
xchg
gs
andb
cmp
ret
mov
pop
jmp
xor
cmpsb
mov
lock
push
das
js
loopne
mov
shrb
jne
roll
push
mov
xchg
repz
cwtl
jne
outsl
mov
outsl
out
test
ret
in
mov
sbb
adc
jg
push
jo
jb
int3
or
out
mov
movsl
idiv
mov
push
and
mov
lea
arpl
jmp
cmp
cmp
cltd
imul
outsb
xchg
cmc
dec
js
add
arpl
mov
push
xor
adc
xor
xchg
jecxz
hlt
add
sarb
pop
or
test
je
mov
push
cmpsb
mov
xor
pop
rcll
pop
mov
pop
ret
rorb
les
adc
ds
inc
bound
sbb
pop
inc
das
sbb
jp
jp
leave
xchg
adc
xchg
inc
out
xchg
pop
repz
adc
out
nop
jp
pop
inc
xor
xchg
mov
mov
mov
jle
jl
pop
adc
inc
mov
sarb
rorb
outsl
fidivrs
inc
xchg
push
xchg
mov
pop
dec
mov
mov
scas
cmp
inc
push
push
jae
xor
pop
jp
jo
or
push
in
lret
mov
xlat
mov
push
mov
xchg
jmp
in
ljmp
aas
enter
sbb
adc
shll
repz
push
iret
ds
push
mov
shl
xchg
in
sub
or
push
andl
mov
cmp
ljmp
aam
jle
test
daa
shll
mov
pop
cmp
ja
push
push
adc
and
outsl
mov
mov
in
sti
xchg
jge
xchg
lods
dec
in
popa
xchg
mov
imul
cld
cwtl
add
inc
mov
not
pop
inc
add
mov
jo
fmul
sub
aad
popl
push
and
and
sub
fdivrl
fidivs
lods
cmp
ret
or
popl
dec
sub
inc
mov
popa
cwtl
popf
andl
inc
fsts
adc
ficoms
inc
das
fs
cmc
lret
andl
mov
push
dec
push
mov
nop
push
inc
mov
aam
mov
in
sub
dec
loopne
push
pop
mov
pop
mov
std
jnp
int
pop
jp
mov
in
incb
or
xchg
pop
adc
int
out
dec
scas
pop
inc
push
pop
inc
stos
imul
frstor
and
stc
test
adc
dec
pop
mov
jmp
aaa
jecxz
pop
jmp
push
mov
rcll
mov
xchg
mov
es
sub
aam
jl
pop
into
sub
fiaddl
mov
scas
or
pop
jl
sub
xor
arpl
mov
mov
push
flds
push
jle
inc
dec
cs
mov
mov
xor
cmp
mov
mov
jmp
bound
or
fidivs
sub
jo
inc
dec
pop
ret
and
xor
jmp
dec
mov
inc
lds
jp
push
mov
icebp
hlt
in
push
xchg
mov
xchg
mov
jbe
cwtl
xchg
imul
inc
rorb
sbbl
adcl
adc
mov
mov
jno
mov
jno
jbe
lea
cmp
mov
pop
andb
dec
ficoms
xor
into
das
sbb
aad
pop
icebp
jg
mov
mov
dec
push
aas
pop
push
dec
mov
leave
pop
fists
mov
jns
push
pop
mov
shll
das
mov
ja
outsl
ss
push
and
ja
hlt
sbb
add
push
jge
sub
push
into
es
ficompl
lret
fwait
xor
sbb
xor
mov
out
stos
lret
push
sub
ret
pushf
int3
movsl
jno
pop
enter
cwtl
lahf
xchg
lods
stos
lods
and
inc
ds
push
aaa
inc
nop
dec
push
out
and
mov
sbbl
mov
loope
xchg
bound
pop
out
test
outsl
stos
jl
gs
ja
jmp
incl
sbb
rcl
jecxz
xor
sahf
fldcw
lea
xor
les
push
pop
dec
dec
bound
aas
jecxz
imul
inc
mov
mov
movsb
mov
imul
cld
cmp
lcall
filds
dec
loop
dec
loopne
inc
pusha
in
pop
jo
push
push
cmp
roll
xor
xchg
sub
xor
mov
mov
pop
xchg
in
dec
cmp
shl
pop
pmuludq
xchg
sbb
add
out
dec
rorl
pusha
iret
sbb
ja
lock
and
mov
cmp
push
xchg
out
jmp
mov
pop
cmp
cwtl
roll
xor
and
sbb
mov
inc
mov
sub
mov
test
movsb
aaa
jle
push
adc
push
xor
xorb
arpl
clc
push
das
jo
lock
loop
jbe
mov
cmp
dec
mov
ds
and
push
jge
jl
ret
ss
push
cmp
inc
jbe
and
mov
call
mov
jp
pusha
xor
mov
loope
outsb
scas
aas
push
push
cli
outsl
push
scas
aam
jnp
sbb
sub
jo
out
orb
jle
pop
rcrl
push
xorb
jno
int3
pop
outsl
or
mov
cmpsl
aas
mov
insl
bound
jbe
cmpsl
jno
jmp
fwait
jne
movsl
int3
insb
jge
push
std
orb
xlat
mov
movsb
or
xor
add
cmc
lds
jae
aam
cmp
mov
andb
cmpsb
fmull
inc
pop
mov
cmp
andl
jl
dec
jne
dec
inc
adc
cld
outsl
push
lret
lds
jne
mov
cmpsb
repnz
mov
xor
dec
mov
enter
mov
mov
xchg
dec
outsl
out
inc
stos
mov
pop
pop
fsubr
lea
xchg
fsubp
add
int3
dec
mov
inc
insl
mov
push
je
jne
sbb
add
dec
add
arpl
and
xchg
xchg
inc
iret
repnz
jmp
adc
fwait
inc
shrb
rcll
jb
scas
test
push
or
mov
pop
sub
jle
loopne
in
ret
xchg
add
das
mov
add
add
inc
lahf
lods
stos
faddl
xor
pop
insl
push
stos
js
mov
add
mov
pop
aam
out
mov
rorb
mov
push
ds
aam
shl
pusha
in
mov
mov
flds
dec
inc
enter
inc
mov
and
mov
adcb
mov
dec
mov
inc
popf
mov
mov
int
mov
call
add
scas
xorb
popf
jl
ret
jnp
push
mov
popf
pop
cmp
mov
mov
cmc
rcrb
xchg
test
and
or
pop
fsts
jmp
cmp
jo
jl
and
or
sub
ljmp
mov
fs
inc
out
pop
sub
add
lret
ficoms
ja
pop
pusha
jp
pusha
inc
call
inc
and
inc
push
neg
and
mov
or
aam
xchg
jmp
jns
mov
rclb
loope
mov
mov
clc
or
and
imul
pop
orl
mov
and
imul
cli
inc
dec
mov
or
add
enter
xchg
addr16
pop
xchg
and
int
sub
dec
ja
enter
fmulp
pop
mov
push
inc
jge
scas
addr16
je
scas
lea
mov
filds
inc
mov
jp
fmul
pushl
ret
or
test
adc
jno
out
push
pop
pop
dec
jg
js
jl
sbb
cmp
rorb
dec
or
inc
pop
mov
flds
fst
push
lods
call
xlat
mov
adc
xlat
fcomi
or
dec
aaa
imul
test
sbb
dec
bound
xlat
addr16
aam
sbb
loop
sbb
ljmp
sbb
lret
and
sub
push
insb
mov
rclb
mov
popl
aam
mov
data16
mov
add
jp
scas
pop
imul
fistpll
push
or
mov
and
test
cmp
xlat
mov
leave
mov
in
stc
in
cmp
addb
mov
pop
inc
lea
ds
or
imul
jno
pushf
push
cmc
sbb
sub
jbe
mov
out
or
imul
shlb
sbb
pop
pop
loop
pop
sbb
repnz
and
test
out
aad
jge
repz
jp
lods
mov
js
push
or
stc
push
fwait
out
inc
sub
sbb
lods
lods
bound
addr16
push
fisubrl
mov
jmp
jl
and
repz
xor
inc
daa
lret
jb
int
test
sti
imul
ret
in
push
sbb
and
sbb
push
lods
jp
mov
fsubrl
lea
aam
xchg
cmpsl
fidivs
jns
inc
mov
shll
push
addr16
loopne
cmp
sbb
push
hlt
popa
inc
push
loope
aam
outsb
push
les
out
pop
and
aam
sbb
jnp
mov
mov
out
dec
scas
mov
stc
xchg
inc
xor
cmc
xchg
insl
push
addr16
cmp
dec
dec
push
nop
adc
jmp
push
ds
fucom
in
push
sub
ljmp
ljmp
pop
add
bound
rcrl
int3
mov
inc
sbb
test
insb
fdivrl
enter
loopne
pop
lea
je
jns
js
adc
push
pusha
mov
pusha
enter
dec
movsl
inc
jp
add
jb
cmpsb
stos
adc
and
mov
sub
cmp
les
pop
repz
lret
jnp
and
mov
cwtl
mov
pop
fisubs
pop
dec
push
inc
bound
sarl
mov
sbb
push
ljmp
xchg
imul
in
sbb
and
jle
test
or
sub
push
movsl
push
jbe
arpl
lock
inc
aas
xchg
pop
dec
push
test
inc
mov
dec
push
xchg
mov
inc
and
mov
jmp
jecxz
push
repnz
das
sub
mov
sub
dec
daa
rol
fstl
xchg
sub
jne
cmp
stos
call
mov
push
aad
stos
cmp
mov
ja
mov
cli
movsb
dec
in
xchg
xorl
xchg
cmpsb
mov
into
testb
mov
das
fdivl
push
inc
popa
add
loope
jnp
cld
sbb
adcb
mov
out
pop
xchg
rorl
mov
dec
lahf
add
shrb
push
pop
sub
mov
mov
cwtl
out
fcmovbe
in
cmp
push
nop
icebp
push
sbb
sti
and
push
push
fisubs
push
mov
bnd
jecxz
outsl
test
jle
ds
nop
jo
cmpsb
adc
mov
add
js
push
pop
in
hlt
push
jp
maxps
pop
sub
pop
xor
ds
adcl
lret
nop
outsl
or
jo
sub
dec
mov
pop
sub
fdivrs
sub
or
jne
out
lret
nop
cmpsl
cs
out
push
in
adc
repnz
push
adc
dec
outsb
or
mov
aas
jae
popa
cmp
fildl
inc
xchg
imul
cmpsl
ss
cmp
or
adc
jno
or
imul
jnp
cmp
loopne
dec
and
aam
mov
test
dec
or
lcall
xor
dec
nop
outsl
shll
int3
jmp
xchg
out
sub
inc
push
and
sti
lods
ds
cwtl
lock
call
les
sub
sbb
jge
and
push
stos
mov
lds
mov
jg
test
dec
cmp
add
in
sub
xor
sub
jl
xor
popl
push
les
xchg
xorb
dec
pushl
lcall
mov
jp
xor
nop
cmp
lcall
andl
cmc
lahf
cld
not
idivl
ss
es
in
push
in
dec
mov
sub
clc
pand
cmpsl
mov
sbb
add
dec
mov
out
push
lret
dec
fsubrs
cmp
std
cmp
and
pop
jne
adc
in
adc
xchg
lods
xor
sbb
in
push
data16
testb
lock
les
dec
xchg
mov
xorb
cwtl
cli
pop
gs
out
xchg
pop
enter
mov
mov
imul
data16
mov
add
loopne
mov
bnd
xorl
test
pop
xchg
pop
jne
jns
cs
or
inc
in
push
jg
daa
push
cli
add
repnz
loop
pushf
jl
and
inc
pop
inc
push
add
ss
test
mov
mov
lahf
jo
hlt
pushf
jno
test
testl
call
add
pop
jp
notl
push
lods
add
cwtl
mov
dec
ja,pn
andb
cmp
test
int
jb
inc
xlat
push
fsubp
cmp
mov
xchg
add
out
lret
movsl
data16
in
sub
pop
iret
bnd
dec
push
es
sti
shlb
xor
and
mov
cltd
cmp
out
std
repnz
pusha
outsb
sbb
inc
xchg
inc
decb
pop
test
adc
int3
pop
xor
insl
jl
std
inc
pop
je
mulb
ret
mov
sbb
js
and
das
sub
mov
and
push
pop
push
xor
loop
cmp
sub
cmp
and
push
es
ds
stos
lret
das
lahf
xchg
mov
mov
push
cs
fs
sbb
inc
and
gs
fsubrl
push
shlb
push
push
add
in
inc
jae
add
es
loop
insl
sbb
idivl
and
clc
sub
test
cltd
adc
cs
jne
dec
or
and
loop
ficompl
jbe
or
loope
out
cmp
xchg
data16
lsl
push
inc
sub
fwait
inc
jnp
ds
jg
inc
outsb
cmpl
enter
adc
mov
daa
inc
punpckhbw
or
push
sub
mov
imul
mov
nop
test
cmp
andl
pop
pop
cmp
jns
and
jge
xorb
bound
xor
out
in
outsb
test
mov
sbb
pop
mov
inc
test
insl
stos
loop
sti
cmc
fcomps
sub
push
cli
inc
mov
xor
jo
rorb
test
xchg
ljmp
mov
lahf
pop
xor
inc
jge
sbbl
cltd
mov
dec
sbb
jecxz
das
icebp
xchg
addr16
inc
xchg
test
push
push
xchg
movsb
mov
les
xor
ds
lea
mov
sbb
jo
and
pop
push
sub
push
dec
mov
pop
movsl
jae
loope
aaa
test
lahf
cmp
inc
jl
and
inc
xchg
data16
outsb
lods
jecxz
leave
ja
rcrl
das
inc
mov
mov
shlb
jae
test
rorl
cmpsl
xchg
lods
pop
sbb
test
outsb
dec
mov
out
lods
xchg
add
dec
sub
sbb
pop
or
add
addr16
mov
add
mulb
and
mov
push
inc
mov
ss
cmp
sub
loope
nop
xchg
popf
outsl
xchg
sbb
movsl
lret
aad
ret
or
or
mov
int3
add
mov
inc
or
nop
xchg
jecxz
lds
sbb
cmp
insb
pop
pop
iret
mov
pop
data16
jmp
inc
cs
push
xor
add
mov
call
push
imul
lds
ss
pop
inc
test
jg
subl
in
outsl
jae
mov
pop
rcr
add
mov
mov
pop
std
rorb
jne
inc
sti
add
outsl
inc
xor
jno
jnp
mov
lea
dec
test
sub
into
xor
push
enter
xchg
cmp
mov
xchg
out
fstps
pop
sub
cwtl
in
push
std
mov
push
ja
pop
and
test
in
xlat
or
cmp
popa
mov
push
add
adc
adc
xchg
adc
sub
int3
cmpsb
jg
pop
ror
leave
sbb
add
lea
add
xor
xchg
hlt
mov
pushf
jmp
imul
inc
daa
xorb
xchg
hlt
clc
icebp
push
adc
xchg
cwtl
std
push
and
jbe
sub
lret
fisubl
std
mov
aad
sahf
call
loopnew
and
cmp
inc
push
call
aas
lahf
sub
adc
addr16
add
dec
js
push
cld
out
enter
dec
inc
cwtl
nop
out
sbb
std
nop
fsts
repnz
sub
mov
int3
gs
mov
das
lcall
add
cltd
xchg
fs
cltd
push
pop
mov
insb
mov
enter
pop
imul
cmc
jnp
lds
cld
roll
push
push
mov
jl
int3
shl
and
jns
sbb
and
out
test
test
sub
pop
xchg
jp
aaa
out
and
xchg
dec
adc
mull
fadds
xchg
lods
cmpsb
pop
mov
fsubr
sahf
movsb
stos
push
sbb
xchg
sbb
inc
ljmp
mov
xchg
add
ffree
xor
mov
xor
mov
cmp
cli
dec
jl
into
lds
sarl
mov
inc
xchg
iret
lods
xchg
jmp
sbb
jp
xor
mov
hlt
ret
lret
sub
sub
imul
dec
outsb
inc
add
xchg
out
scas
cmp
mov
subb
subl
or
lods
xor
and
xor
int3
sub
lock
negb
cmp
dec
insb
int
imul
mov
add
push
dec
lret
jnp
mov
xchg
cwtl
ds
add
cmp
and
shr
mov
pop
pop
arpl
shrb
mov
mov
out
mov
ja
out
ret
fiaddl
daa
aaa
push
inc
jmp
push
jo
lods
jne
loopne
inc
sub
insl
xchg
pop
je
aam
stos
push
cmp
xchg
dec
or
movsb
cmp
sahf
pop
push
jecxz
outsb
lea
fsts
dec
in
out
xchg
xor
cmp
mov
or
sar
test
insl
fucomp
outsl
jge,pn
cltd
shll
pop
and
dec
dec
outsl
jg
sbb
fistps
rcl
or
xchg
scas
cmp
jns
cmc
nop
inc
mov
jne
jne
iret
mov
cwtl
lret
pop
fs
adc
out
popa
in
es
xchg
xor
cmp
daa
shll
cld
xchg
lods
mov
push
pop
cmp
cmp
pop
mov
dec
pop
adc
in
jnp
insb
pop
mov
into
cwtl
push
leave
insb
pop
cmp
data16
add
sahf
mov
mov
xor
loope
or
adc
add
pushf
arpl
shll
mov
fstl
or
inc
xor
movsl
cmc
ss
sbb
xchg
inc
cmp
sub
jl
fidivl
sub
sti
lds
ja
sbb
mov
fiaddl
clc
pop
inc
jmp
xor
and
inc
jge
mov
imul
or
icebp
cld
mov
mov
jmp
mov
gs
lods
iret
arpl
and
add
out
mov
les
sub
mov
push
cmp
je
ljmp
and
fldl
test
in
bound
pusha
out
sub
and
out
leave
mov
pusha
add
pop
xlat
fimull
xor
aam
push
aad
xchg
pop
add
push
inc
push
dec
jne
xor
iret
syscall
pop
xchg
imul
sbb
add
js
pop
jno
add
inc
dec
jnp
mov
js
das
mov
and
pop
pop
mov
jg
out
push
rorb
mov
xchg
mov
sbb
popf
push
push
xor
pop
orl
adc
lcall
arpl
ret
add
fcomi
ror
popa
inc
jno
in
cmpb
cmp
stos
fstps
cmpsl
daa
repnz
mov
test
fs
scas
push
ljmp
outsl
mov
das
sub
or
nop
push
xchg
aam
subl
imull
jmp
ret
rcr
fadd
repz
adc
adcl
lahf
in
inc
inc
lock
pop
pop
icebp
mov
pop
jbe
stos
or
add
cli
xor
notb
adc
jbe
leave
pushf
cmp
jb
push
mov
shll
xchg
sub
mov
or
ja
jle
add
pop
mov
fs
push
add
xor
aaa
push
outsl
push
mov
push
pop
xchg
dec
and
fldl
mov
jecxz
cmpsb
add
adc
cmp
imull
sbb
pop
cmpsb
lret
xchg
outsb
inc
test
sti
jnp
or
adc
fimuls
sub
int
mov
sub
mov
sahf
icebp
in
sti
push
fwait
daa
adc
sub
pop
inc
inc
xchg
adc
orb
mov
dec
ret
push
out
mov
jnp
mov
dec
test
dec
jo
repz
lahf
jmp
push
test
ja
pop
sahf
loopne
shlb
pop
es
push
arpl
movl
mov
xchg
cmp
pop
sbb
dec
insl
dec
mov
aaa
pop
sar
subl
arpl
clc
and
scas
mov
enter
pusha
fcmovne
xchg
adc
add
je
jecxz
lods
andb
cmpsb
inc
pop
mov
in
insb
negl
sub
xchg
adc
lock
in
mov
pop
xor
test
or
call
jmp
jne
insb
adc
xchg
nop
add
ficoms
divb
sbb
mov
jge
rcr
mov
pop
mov
mov
cmc
arpl
les
inc
loop
pop
bound
in
subl
and
loop
daa
std
push
lea
xor
adc
adc
jl
mov
xchg
mov
dec
sahf
push
sbb
adc
movsb
mov
jp
test
jns
in
push
xor
xor
mov
xchg
pop
mov
leave
outsb
push
xchg
pop
push
repz
shl
xchg
dec
insl
rolb
fidivrl
call
pop
rolb
cltd
clc
jmp
sbb
xchg
pop
add
daa
mov
fnstsw
mov
mov
and
aaa
mov
mov
xchg
insl
inc
push
push
xor
dec
shlb
int
xor
rcr
xchg
mov
mov
cmp
ja
xor
and
sbb
ds
mov
in
sub
and
leave
dec
adc
cmp
dec
pushf
cmp
or
cmpsl
inc
cmp
add
cmp
hlt
push
clc
pop
xor
mov
notb
out
cmp
push
aas
pop
cwtl
out
dec
jae
sti
mov
mov
and
cmovb
cltd
je
xor
inc
sub
jg
loope
stos
fiadds
ret
and
jnp
xchg
cmpl
mov
mov
and
push
rorl
pop
das
jo
aas
xor
and
aaa
push
icebp
in
cmp
xchg
sbbb
add
dec
add
mov
lea
into
xchg
inc
xchg
daa
sbb
arpl
in
addr16
xor
mov
int
leave
sub
gs
les
mov
lods
popa
ror
pop
sbb
mov
fwait
scas
inc
ljmp
popf
jne
dec
xlat
lahf
xor
xchg
jne
mov
push
push
adc
ss
je
cltd
loope
or
and
iret
imul
xorb
outsl
negb
pop
mov
data16
inc
push
scas
or
lret
dec
mov
lahf
popf
cmpsb
dec
adc
loopne
mov
subl
mov
cmp
xchg
sub
push
and
hlt
stos
cli
arpl
call
mov
test
add
mov
pop
xchg
lods
push
adc
shl
mov
or
dec
xor
int
push
ret
arpl
or
xor
int
scas
xchg
cltd
add
out
cmpsl
push
mov
dec
sbb
push
lahf
push
pop
aaa
push
inc
fwait
xchg
shr
jnp
das
jnp
inc
outsl
mov
xor
pushf
or
inc
sub
xor
test
leave
pop
mov
out
xor
mov
jge
add
insb
add
negl
mov
mov
rorb
mov
adc
arpl
sbb
shr
and
cld
cmp
xlat
push
movsl
pop
lret
mov
negb
push
out
enter
adc
ret
popf
movsl
pop
mov
pop
sbb
inc
dec
popf
cmp
push
test
add
ljmp
pushf
push
mov
or
lret
cli
fists
cltd
pop
jle
ret
gs
and
movsb
pushf
adc
sbbb
loop
sbb
scas
imul
push
adc
adc
cmpsb
test
push
rorb
inc
hlt
mov
repnz
push
outsb
and
push
scas
repz
cld
test
and
js
pop
mov
pop
inc
inc
ffree
in
jo
inc
cmp
xchg
outsl
sbb
in
push
rorl
jge
sub
dec
iret
std
mov
sub
lcall
mov
or
loope
xor
cmpl
push
fadd
jo
out
lods
repz
sub
mov
cli
aam
sub
negl
imul
shrl
or
jge
jne
xchg
dec
divb
sbb
pop
lds
ja
push
icebp
fimull
bound
sti
mov
in
dec
xlat
xor
stos
stos
imul
mov
push
push
lret
dec
mov
xchg
mov
mov
subb
aaa
iret
xor
push
iret
xchg
mov
pushf
fidivrs
mov
gs
leave
jg
push
mov
sbb
lahf
adc
dec
adc
cwtl
mov
fcoms
lret
out
and
inc
jecxz
icebp
js
mov
xchg
dec
dec
jo
push
cmpsb
testb
xchg
xchg
pop
pop
fistl
insl
jge
adc
jecxz
bnd
dec
adc
lods
jne
fs
or
rolb
push
call
shll
cwtl
sbb
or
mov
outsl
loope
jecxz
xlat
lcall
inc
pop
in
jnp
jmp
mov
arpl
xchg
sub
sub
sub
and
jae
sarb
rcl
xchg
xor
mov
push
scas
arpl
out
cmp
xorl
ret
out
cmc
std
rcrb
outsl
and
lds
mov
in
es
xor
cli
jns
push
mov
push
mov
cmp
in
sbb
pusha
iret
loopne
pop
sbb
fldl
xor
insb
mov
dec
cmp
xchg
lret
dec
jb
arpl
pop
cli
sarb
pop
ret
pushf
jne
jb
pandn
stc
lea
jbe
xor
xor
lcall
mov
inc
mov
mov
sbb
lods
or
cwtl
popf
xchg
cmpsl
movsb
jns
popf
adc
loop
jne
inc
lods
lods
movsb
xor
mov
pop
or
int3
cmp
adc
pop
mov
loop
test
movsl
pop
sbb
dec
nop
mov
or
mov
jg
in
insl
jae
stc
add
loop
sbb
cmp
sub
pop
mov
inc
dec
rcl
shlb
mov
aad
xchg
iret
rcr
pop
insl
lods
popf
and
ret
xor
cmpsl
mov
adc
das
je
test
lcall
movsb
out
push
adc
sub
dec
outsb
xor
pop
stc
dec
rorl
inc
sarl
nop
xor
sbb
sub
sbb
push
jnp
jg
xor
insl
nop
or
imul
int3
or
pop
jno
pop
sub
mov
cs
cmp
pop
add
cmp
push
mov
iret
ret
mov
mov
test
inc
pop
jge
sti
hlt
dec
rorl
inc
push
mov
ljmp
lret
push
add
lods
pop
mov
and
popf
pop
mov
push
sti
sub
xor
pop
dec
pop
or
insb
cmp
ret
arpl
aas
mov
mov
ss
jno
out
shlb
popf
cmp
addr16
xchg
pushf
sub
push
mov
mov
lock
leave
xchg
stos
xchg
insl
cmp
int3
movsl
scas
mov
les
or
mulb
shrl
cwtl
and
repz
gs
mov
gs
inc
inc
call
sbb
call
outsb
mov
lods
xchg
mov
inc
ljmp
sbb
inc
mov
and
jb
and
and
mov
cmp
aaa
pushf
cld
push
pop
fiadds
or
dec
inc
movsb
in
ret
adc
test
outsb
ret
icebp
cmp
and
nop
out
mov
imul
mov
cmovne
data16
shlb
outsl
dec
dec
jmp
pusha
mov
in
sub
das
adc
pop
mov
out
inc
lock
xchg
adc
add
adc
popf
or
andb
popa
sbb
sub
insb
inc
lods
stc
adc
cmc
les
fcoml
push
lea
pusha
movsb
out
sub
bound
dec
orb
mov
int
jno
mov
jg
popf
ds
aam
cmpsb
mov
cltd
data16
ret
daa
dec
adcb
out
popa
ja
shrl
jno,pn
fldcw
lcall
jp
jge
rcrb
pop
sbb
pop
shll
lods
push
mov
fisttps
jecxz
decb
in
dec
aam
mov
xchg
sbb
js
mov
lea
inc
arpl
sbb
jnp
push
mov
fsubrl
pushf
aaa
cmp
add
je
pop
xchg
cmp
jae
mov
jo
add
xchg
andb
imul
jl
loop
insb
sbb
es
out
mov
out
out
jmp
int
sbb
pop
loopne
loopne
push
jno
inc
cmpl
fs
xorb
push
cmp
xor
mov
shrl
or
xchg
or
fbstp
lcall
xor
scas
cmpsb
mov
fsubrs
lock
stos
fsubl
push
mov
dec
cmpsl
sahf
jmp
xchg
leave
in
sub
mov
jmp
dec
cmc
out
dec
shll
mov
cld
dec
test
fsave
inc
push
jmp
in
fsubrs
jmp
fs
jge
loop
push
sbb
sub
rorb
test
dec
int
ss
lock
pop
xor
fsubrl
ljmp
add
sub
sub
pop
icebp
insb
jle
pop
loopne
cmp
loop
dec
mov
pop
rcrb
fisubrl
dec
std
sub
sbb
sbb
add
push
dec
jb
push
sarl
cmp
cmc
jb
and
push
shlb
mov
lods
ret
xor
or
out
stos
out
push
xchg
cwtl
fstps
lahf
repz
cld
dec
bswap
rorb
scas
xchg
push
imul
mov
fidivl
daa
sahf
pop
gs
lds
sbb
icebp
mov
rol
pop
inc
sahf
insl
enter
xor
xchg
mov
repz
sbb
mov
outsb
inc
fisubrs
idivb
sbb
in
mov
sub
out
cmp
int
lock
cmp
cld
rcrl
or
mov
mov
cltd
and
flds
xor
out
addb
push
or
add
or
mov
arpl
loopne
repz
or
dec
cmpsb
test
stc
fdivrs
sub
sti
call
rorl
cmp
lods
adc
ret
stc
jnp
notl
inc
enter
cmp
je
lods
jb
in
adc
jne
pusha
xlat
sbb
add
ret
scas
mov
fsubrl
adc
push
insb
cld
inc
pusha
test
mov
aas
xor
outsl
fstpt
pop
or
pushf
cs
fs
lret
jg
das
cs
movsl
or
jbe
push
push
lea
mov
pusha
aam
push
ja
add
add
jecxz
imul
sbb
mov
adc
inc
cmp
push
data16
pop
scas
test
daa
inc
fcmovnu
call
mov
jmp
lcall
aad
pop
in
bound
imul
inc
stos
sbb
in
test
cmpl
inc
popf
fldcw
mov
popf
add
sbb
jo
dec
lret
loope
push
sti
xchg
es
shll
repnz
sub
fidivrs
xchg
sub
jmp
mov
clc
push
inc
mov
xchg
movsl
stos
test
shl
das
lret
cmp
add
stos
cmp
push
xchg
test
shl
add
mov
jb
xchg
testl
push
and
push
sbb
cli
or
pop
xchg
int
pop
lock
jmp
jmp
icebp
cwtl
pop
cld
fwait
call
filds
fsubl
mov
leave
ss
cmpsb
lret
push
pop
loop
mov
out
cmc
pusha
shlb
mov
jne
cld
aam
cmc
outsb
scas
in
pop
xlat
je
inc
mov
imul
xorb
fsubl
fmul
stc
rcrb
scas
aas
jmp
jae
rclb
jno
mov
inc
inc
and
pop
mov
loope
ljmp
add
lods
inc
sub
scas
cmp
add
fcoms
xchg
or
xchg
aas
stos
dec
push
loopne
js
pop
lahf
out
dec
sbb
mov
cmpsl
pop
cmpl
pop
lahf
dec
int3
or
stc
call
stc
in
icebp
imul
mov
jo
xchg
jne
adc
dec
int
xlat
mov
sbb
push
loop
cs
push
add
pop
and
pop
fnstenv
push
mov
sbb
cmpsb
push
repnz
and
cltd
les
cld
insl
jl
inc
xor
cmp
sbb
push
inc
scas
sti
rcll
dec
xor
xchg
fsubrs
cmp
or
push
or
dec
sub
sub
loop
push
lods
jle
movsl
aas
jmp
filds
movsb
les
das
mov
or
sub
lahf
aam
inc
add
sbb
mov
daa
nop
movsl
call
mov
outsl
insl
mov
push
std
out
popw
scas
gs
loope
and
cmc
shl
pop
sbb
cwtl
mov
pushl
add
inc
fldt
or
and
leave
clc
test
data16
lea
ficompl
inc
jo
icebp
in
cltd
clc
push
adc
adc
into
cs
jle
clc
pop
lret
pop
pop
mov
xchg
ss
mov
or
pop
leave
jmp
mov
and
out
sub
lods
movsb
enter
cmpsb
xor
mov
sbb
ds
je
push
pop
xor
rclb
xorb
and
xor
pop
mov
stos
xchg
test
pushfw
pushf
test
push
push
out
pusha
idivb
xchg
fsubrl
fildl
mov
jne
loop
cmp
or
es
adc
adc
in
test
xchg
jo
movsb
dec
std
mov
xor
pop
mov
pop
or
std
inc
insl
inc
mov
mov
pop
pop
and
aad
pop
lahf
repz
cs
sbb
into
stos
dec
mov
out
pop
and
imull
test
insb
fstps
jecxz
out
inc
jg
rolb
mov
insl
mov
scas
and
inc
notl
sti
loop
test
adc
sub
test
push
sbbb
out
out
ss
negl
ret
mov
mov
loop
push
ds
or
inc
jmp
adc
pop
jge
int
loopne
cmp
mov
popf
fcmovnb
adc
xchg
addb
mov
mov
fsubrs
popf
mov
pusha
sbb
and
cli
xchg
inc
fwait
xchg
outsl
jo
imulb
jne
pushf
dec
rcll
addr16
pop
or
jecxz
sbb
andb
mov
add
fidivrl
pop
hlt
pop
sub
mov
push
and
jecxz
push
sub
adc
mov
xchg
movsb
and
inc
xor
arpl
mov
adc
cmp
dec
shrb
aam
sbb
add
lcall
ja
sub
lods
pushf
or
jmp
ds
ror
cltd
lea
test
stos
out
movsl
lahf
or
pushf
xchg
jecxz
sbb
push
lahf
test
dec
rcl
iret
adc
js
loope
xchg
stos
adc
pop
pop
xor
lods
div
lods
and
sbb
xor
gs
jne
sub
push
or
decb
faddl
inc
scas
adc
in
inc
movsl
add
fdivrp
inc
push
push
nop
dec
arpl
clc
pop
addb
and
mov
xchg
mov
adc
jne
fsubs
sub
mov
cmp
lods
dec
sbb
repz
add
mov
pop
in
xchg
mov
cmpb
mov
xor
or
outsl
add
push
xchg
icebp
test
and
mov
outsl
out
cmp
cmp
imul
adc
int
inc
pop
movsb
fmull
scas
int3
les
ja
call
or
sbb
push
xor
lock
cli
lock
mov
scas
mov
mov
call
xor
dec
mov
lods
cwtl
and
push
sahf
movsl
jp
mov
dec
divb
pop
adc
mov
or
stc
pop
shll
mov
fwait
add
jno
jle
orb
jo
mov
cmp
cmpsl
cmp
inc
repz
stc
in
jo
loop
testl
lds
decl
mov
pop
stc
add
fiadds
xchg
dec
cmp
mov
pushf
popa
add
xlat
arpl
sbb
scas
mov
mov
outsl
mov
mov
stc
insl
in
daa
mov
fwait
lahf
cs
aad
jp
inc
mov
ss
add
or
xorl
aas
mov
not
stos
sub
jp
repnz
jl
aad
iret
in
out
add
push
push
fldl
cli
mov
lock
jns
cmp
insb
lahf
xchg
xlat
push
cwtl
inc
jl
jno
mov
das
lret
mov
mov
cmp
jb
cmc
js
xor
aas
cmp
jle
xor
test
pushf
add
mov
mov
fcoms
dec
aas
shrl
ss
mov
xor
test
in
mov
dec
sbb
mov
cmc
dec
xlat
lahf
cmp
repz
jg
dec
mov
xchg
mov
inc
jo
dec
ds
adcb
jae
sti
lret
pop
mov
fisubrl
arpl
fcomps
xor
stos
sti
inc
sarb
xchg
mov
mov
pop
in
shrl
add
push
rorl
imul
xchg
mov
and
pop
pop
and
nop
push
int
adc
jmp
mov
mov
mov
into
pop
jl
out
lahf
jecxz
xor
xchg
fsubrs
jle
mov
dec
and
jns
push
hlt
mov
xchg
repz
popf
dec
decl
inc
add
jnp
je
add
imul
les
bound
ss
pop
inc
call
adc
xchg
sbb
cwtl
xor
lea
sar
adc
test
and
adc
mov
or
cli
shl
xlat
test
clc
lods
jne
outsb
sahf
cmp
or
pop
lods
inc
mov
and
xor
jne
xlat
mov
js
fdivrs
shlb
jle
xlat
loope
lret
into
daa
sub
lret
jg
dec
stos
arpl
or
push
mov
fildl
in
lahf
in
sbb
outsl
xchg
repz
das
push
popf
inc
or
cmp
mov
pop
inc
outsb
fdivl
add
inc
lods
pop
stos
xchg
cli
mov
add
mov
mov
es
sbb
add
fldt
dec
mov
push
frstor
ds
pop
cmpsb
push
dec
jb
nop
lods
jnp
xchg
outsb
push
int
ja
mov
stos
lahf
out
push
mov
sbb
xlat
mov
cmp
push
push
pop
mov
loopne
dec
mov
inc
mov
mov
push
enter
lret
stos
gs
jnp
nop
pushl
aad
retw
sbb
dec
inc
pusha
sub
data16
xchg
dec
or
sbb
in
dec
nop
and
or
mov
mov
mov
cmovs
mov
addr16
test
xchg
loope
cmpsb
inc
add
push
push
movsl
mov
jbe
mov
cld
jmp
xorl
test
out
xchg
jne
jmp
scas
xor
int3
sbb
pop
mov
out
jmp
popa
jg
add
mov
dec
ret
shrl
sbb
xor
push
icebp
sub
shl
bound
xor
push
call
and
pop
dec
mov
cmp
pop
dec
in
inc
ljmp
cltd
shlb
out
fstpl
cmp
aas
fadds
mov
jg
push
jle
stos
mov
jle
pop
push
xor
movsl
fnstenv
repz
push
scas
xchg
mov
sahf
or
or
cmp
add
sbbb
mov
fsub
fsubr
test
and
stos
lods
mov
xor
bound
out
jns
idivb
fld1
mov
ds
sar
lock
imul
insb
pop
idivb
icebp
mov
enter
jecxz
cmc
push
and
sti
xlat
pop
insl
or
shl
pop
inc
das
mov
fwait
pushf
cmp
xchg
adc
pop
sti
scas
out
icebp
mov
mov
pop
aad
pop
sub
xor
adc
or
sub
mov
inc
sahf
jae
ja
or
mov
shll
and
adc
lods
xor
jb
lret
add
inc
movsb
mov
ret
lcall
push
imul
jg
mov
push
dec
out
sub
movsl
jnp
push
pop
test
mov
inc
loope
jno
test
mov
nop
sbb
jmp
scas
cmpsb
iret
sub
test
jp
cmp
and
daa
push
mov
rol
jns
and
sbb
hlt
stc
clc
mov
xor
imul
popa
fwait
lahf
cmc
arpl
mov
inc
jp
cs
sub
dec
sbbb
mov
lock
mov
mov
test
outsl
pop
test
jnp
clc
dec
movsl
push
hlt
jge
mov
mov
jmp
cs
sbb
cmpsl
push
xchg
cltd
je
xor
push
fistpll
or
and
sbb
imul
add
mov
out
stos
and
out
mov
mov
or
leave
jp
mov
xchg
inc
push
ficompl
gs
push
out
sub
hlt
mov
pop
in
test
mov
push
cwtl
hlt
loopne
mov
xchg
adc
inc
ss
mul
fidivrl
loope
or
jnp
push
lods
mov
ret
add
xchg
dec
xchg
loope
mov
mov
inc
ret
sub
cmp
cwtl
or
popa
loopne
mov
xor
dec
lea
cmc
test
cltd
cmp
ret
pop
xchg
sub
mov
dec
mov
add
or
scas
psubb
jge
dec
leave
in
insl
lahf
pusha
pop
mov
lods
fisttps
loop
mov
fdivl
xchg
out
sbb
call
rcr
cmp
adc
xor
ds
pop
or
rcll
cmpsl
ret
ds
pop
mov
push
orb
mov
stos
mov
subb
push
outsl
push
dec
stos
push
sbb
jno
or
cmp
daa
cmp
jae
jmp
cmpsl
jp
invlpg
mov
and
jecxz
mov
rol
jmp
out
mov
imul
cmp
inc
push
loopne
or
or
clc
mov
xchg
sbb
jge
insl
inc
lds
call
sti
aaa
dec
ja
or
add
cmp
lretw
ret
xchg
fs
imul
and
cmpsl
mov
dec
mov
mov
xchg
ret
data16
icebp
xor
xor
lods
mov
push
xchg
filds
ja
lea
pop
jp
lcall
je
repnz
xchg
jb
mov
test
in
sbb
push
lcall
sub
jno
fldt
int
adc
dec
out
cs
ss
das
push
loopne
in
ljmp
cmc
push
int3
push
stos
pop
mov
pop
xchg
frstor
xchg
loopne
add
addr16
and
pop
pop
dec
jge
fisttps
jp
inc
ret
inc
inc
mov
ljmp
add
test
movsb
sbb
xchg
xor
mov
adc
adc
mov
mov
popa
rcrb
outsb
sbb
fdivs
repnz
jnp
cltd
pushf
dec
fdivr
out
jle
imul
mull
insb
push
inc
out
imul
ja
dec
add
or
int
inc
iret
push
test
movl
lret
sbb
mov
jbe
lahf
sub
inc
mov
mov
xchg
cmp
or
outsb
pop
and
jl
aas
or
sub
orb
cmp
enter
pop
fbld
adc
dec
sbb
daa
pop
subb
or
jo
mov
sub
das
into
fldt
pop
sti
repz
repz
test
mov
xchg
mov
mov
push
scas
scas
adc
mov
out
inc
push
mov
inc
sbb
adc
inc
jecxz
cs
xchg
inc
fistps
movsb
adc
mov
pop
mull
into
int
repz
and
mov
dec
in
pushf
loopne
cmp
fnstcw
push
push
inc
std
jb
push
mov
mov
insb
jbe
ljmp
fmul
dec
cld
adc
mov
xchg
adc
mov
loop
pop
cmp
jmp
movsl
ljmp
shrl
hlt
push
pop
xor
leave
xchg
cld
xchg
xchg
lret
add
jb
insl
popf
xchg
les
or
pop
aaa
pop
mov
pop
sbb
bound
or
xchg
push
push
not
std
cltd
push
lret
or
cltd
push
lcall
cmp
mov
pop
fdivr
int
fistl
jae
jecxz
xchg
into
or
decl
push
sbb
fbstp
ret
das
cltd
xchg
push
mov
js
pop
outsl
cwtl
pop
insl
adc
lods
stos
sub
clc
push
mov
jae
clc
lds
nop
lods
push
fimuls
jg
or
sub
popw
xor
cvtps2pi
inc
mov
dec
xchg
pop
push
mov
je
into
push
mov
add
pop
pusha
fidivs
mov
jle
mov
push
xchg
mov
sub
jo
imul
scas
jne
cmp
and
mov
inc
sub
jle
gs
scas
pusha
xchg
inc
mov
popa
sub
sbb
add
jb
sarb
sub
ja
add
mov
sub
sbb
sti
out
lcall
mov
loopne
xor
push
sbb
call
inc
fs
lds
cmpsb
ss
repz
or
mov
mov
sub
add
movsb
mov
mov
into
sub
sbb
add
call
push
jmp
icebp
ljmp
mov
shll
and
ss
push
jae
cmpsb
test
mov
mov
push
cmc
mov
mov
dec
mov
jae
jne
jbe
mov
mov
sub
imul
testb
shlb
push
in
adcb
mov
bound
lds
std
fcoms
repnz
jno
repnz
mov
push
xor
push
dec
inc
pop
pop
inc
mov
cmc
leave
lods
popf
and
je
xchg
mov
jnp
filds
sbb
add
pop
sbb
mov
push
mov
into
pop
push
imulb
inc
cmp
pop
fcomps
xchg
sub
testl
cmp
dec
jne
lock
dec
iret
rorb
jp
jb
mov
int
add
sbb
and
aaa
jne
mov
ja
aas
push
cmpsb
rcrb
inc
mov
sbb
mov
jae
ss
push
mul
push
inc
data16
xor
cmp
aam
cmp
stos
nop
mov
stc
jle
clc
pop
cmp
add
cs
ret
adc
inc
popf
stos
fists
repz
dec
mov
mov
je
fnstsw
jno
and
mov
out
cmp
inc
and
ret
fsubr
ja
pop
xchg
std
shrb
mov
es
int
popa
sti
push
pop
int3
mov
in
jle
mov
mov
nop
lahf
pop
push
cmpsb
pushf
cmp
jb
insl
pop
push
nop
mov
cmp
push
mov
inc
lret
lock
xchg
push
jae
icebp
lahf
xchg
add
loope
nop
cmp
out
arpl
enter
les
adc
shrl
leave
ljmp
sub
xor
xchg
cmpsl
jecxz
and
push
in
sub
adc
xchg
shrb
stos
push
imul
shlb
mov
jae
xchg
inc
stos
outsb
cmpsb
movsl
iret
dec
pop
movsb
loope
mov
inc
inc
add
mov
jns
mov
push
sbb
add
sbb
or
gs
test
leave
pop
rorl
or
aam
add
or
insl
loop
mov
xchg
pop
cmp
pop
f2xm1
pop
push
push
shlb
das
xchg
pop
adc
pop
lds
pushf
xor
flds
inc
adc
mov
xchg
rcrl
jl
dec
je
out
push
ja
nop
push
cmpl
push
inc
fst
sarl
repnz
aad
loop
add
or
scas
add
push
jo
mov
mov
or
repz
xchg
aam
jg
repz
jne
das
test
pop
jne
add
jbe
and
gs
gs
mov
adc
xor
addr16
mov
lds
sub
or
fsubs
inc
cmp
icebp
out
mov
xchg
pop
shll
stc
xchg
testl
testl
into
cld
dec
or
iret
es
hlt
inc
xor
shl
arpl
cwtl
paddusb
sbb
cmpsb
imul
sbb
repnz
push
pop
jns
fsubs
cmp
stc
rorb
or
cmp
cmp
jmp
test
or
rcll
aam
mov
cwtl
inc
cmp
xchg
pushf
movsb
js
ss
lret
jg
neg
mov
mov
dec
out
imul
pop
dec
scas
mov
jbe
pop
repnz
pop
pop
in
out
sub
xchg
dec
aam
and
aad
gs
mov
pop
dec
mov
fimuls
push
push
mov
lret
mov
mov
jnp
mov
xchg
or
mov
sbb
jp
ds
and
es
xor
sbb
sbb
shlb
cmp
jmp
push
lds
cli
shr
movl
xor
jns
xchg
sti
fcom
jl
and
ds
inc
mov
in
jo
adc
rcr
dec
jge
lret
shrl
sbb
sbb
loopne
sub
pop
jl
cmp
orl
out
pop
test
push
adc
dec
mov
mov
or
xor
xchg
and
dec
adcl
jecxz
push
mov
add
jl
ret
ss
enter
lahf
cmp
add
mov
adc
fdivs
mov
push
ret
mov
mov
inc
icebp
shr
cmp
mov
mov
cwtl
cli
adc
inc
inc
adc
mov
sbb
mov
in
xor
and
out
jge
adc
outsb
xor
mov
outsl
mov
cmpsb
dec
cltd
cwtl
jecxz
push
sub
mov
ficomps
or
and
jne
insb
out
xchg
test
and
icebp
and
outsb
and
jle
xor
push
mov
ss
mov
shlb
and
pop
loopne
xchg
insl
cmp
test
xlat
mov
adc
jnp
push
outsb
cli
sub
ror
push
xchg
fcoml
out
insl
dec
and
ds
test
lahf
movsl
cmpsb
jb
test
leave
mov
dec
subb
scas
xchg
inc
mov
push
ss
jo
roll
pop
fcmovnu
push
or
mov
roll
rclb
push
xorl
das
ljmp
sbb
int
dec
lds
inc
xchg
mov
fmull
adc
pop
pop
lret
std
cli
cmp
insb
pop
push
daa
sub
out
pop
mov
cmpsb
push
jno
nop
jo
icebp
outsb
sbb
cmpsb
push
xchg
push
insl
adc
jnp
cmp
mov
imul
stc
lret
rcrb
cvtdq2ps
mov
lret
mov
add
xchg
fadds
jne
or
mov
aaa
bound
ret
ficoml
into
jnp
lcall
test
rcpps
add
inc
adcl
outsb
push
ljmp
push
push
ret
cwtl
jge
imul
cmpsl
jl
xchg
std
sbb
mov
lret
or
fmuls
jecxz
arpl
xor
cmp
jae
adc
push
mov
in
or
leave
sub
pop
ret
cltd
pop
push
repz
jnp
pop
test
sub
xchg
sbbb
shrd
daa
sahf
loopne
sub
push
inc
jbe
popf
cli
xor
jg
push
repz
inc
mov
add
out
cld
les
fcompl
sbb
fisubrl
pop
arpl
mov
or
lret
adc
dec
add
repnz
test
jg
lret
sbb
negl
clc
push
lcall
adc
rcrl
int
push
xchg
pushf
rorl
out
cltd
cmp
push
andb
xor
mov
clc
push
popf
movsl
sti
ljmp
mov
dec
je
scas
and
stos
adc
or
mov
int3
fldcw
unpckhps
adc
movsl
stos
sub
aaa
inc
aam
sbb
lcall
xchg
subb
iret
push
and
data16
mov
fildll
adc
lock
xchg
dec
mov
pop
ja
xchg
imulb
push
in
pop
jb
dec
push
add
sbb
mov
jno
je
fsubrl
push
daa
add
ret
arpl
out
cli
scas
ljmp
mov
cli
sti
push
icebp
loop
and
xorb
popf
mov
cmp
stos
jecxz
pop
mov
insb
sub
and
jbe
add
fstpt
lock
data16
test
lret
mov
xor
xchg
lcall
mov
fnsave
sub
pop
es
arpl
and
fwait
push
popa
mov
dec
xchg
rorl
fcom
leave
fnstsw
sbb
push
repnz
adc
stos
lods
jnp
mov
mov
imul
pusha
jo
rcl
xor
insb
push
or
push
dec
sahf
popf
sti
sbb
sub
pop
inc
pop
pop
popa
ret
das
in
xor
enter
clc
xor
repnz
inc
cwtl
mov
scas
jle
xchg
xchg
loopne
or
es
xchg
adc
es
movsb
in
lock
add
add
xchg
outsb
pop
lahf
incl
les
sbb
and
das
inc
fidivrs
js
inc
jae
cmp
push
popf
sbb
insb
xchg
dec
out
cli
jo
sti
sarl
dec
flds
pop
and
adc
xor
inc
sbb
sub
add
add
jo
inc
lods
and
jg
pop
out
incb
jge
mov
loope
out
je
xchg
add
mov
inc
dec
xor
out
popf
andl
test
jp
mov
jp
push
add
lcall
outsb
lret
arpl
add
out
into
or
and
and
gs
or
repz
mov
int3
call
mov
neg
and
jno
repz
testl
pop
inc
jno
add
cs
pop
push
test
jbe
push
mov
orb
cld
clc
mov
sub
scas
sub
sub
scas
mov
sub
test
into
adc
notb
inc
jne
push
or
enter
inc
lret
hlt
jb
out
jecxz
xchg
dec
dec
stc
ret
pop
xor
dec
mov
sub
bound
xor
dec
dec
mov
js
adc
leave
cmp
dec
sbb
cli
adcl
and
les
aad
xchg
sub
insl
arpl
cli
mov
aaa
cmpsl
inc
mov
push
fisubrs
js
adc
les
add
lods
xor
popf
test
cmc
test
dec
inc
icebp
stc
add
lahf
pop
sbb
enter
idivl
push
mov
pop
mov
xchg
lods
or
sti
cmpsl
mov
iret
sbb
cmp
divl
push
mov
std
add
add
mov
jno
insb
pop
mov
lods
rolb
ss
call
fwait
mov
sahf
sub
mov
adc
daa
adc
imul
pop
inc
sub
scas
adc
adc
adc
scas
das
cmp
jae
inc
push
xchg
enter
or
mov
jb,pn
loope
stos
and
dec
mov
repz
jns
mov
jg
cld
push
pop
lahf
mov
cmp
clc
inc
add
or
jbe
pop
push
or
pop
ss
pop
mov
pop
and
and
aad
inc
dec
das
mov
push
jbe
mov
iret
jb
lret
imul
mov
es
cmp
ss
pop
mov
lahf
out
js
iret
aaa
adc
loop
popf
and
pop
outsl
enter
and
sarl
push
fcompl
cmc
sbb
sub
adc
lahf
in
add
dec
cmp
aam
rcrl
outsl
dec
out
and
jl
adc
mov
stc
fwait
add
faddl
pop
js
shlb
cmpsl
xchg
insl
jecxz
loopne
ja
mov
and
cmp
mov
ja
or
xor
dec
test
loop
jp
jp
fildll
arpl
leave
cmp
xchg
jno
gs
xor
push
scas
mov
inc
pop
arpl
jns
mov
test
insb
movsl
loopne
inc
repz
loop
loope
addr16
sub
lea
insb
xchg
push
and
lds
lds
shl
out
inc
aas
scas
adc
cvtps2pd
or
roll
inc
push
xchg
popf
push
in
inc
push
pop
mov
jecxz
movsb
xchg
or
je
cmp
lds
push
pop
iret
ror
push
loope
push
mov
shlb
test
dec
sub
je
jb
xchg
popa
call
lahf
and
ds
aad
nop
aam
xchg
insb
mov
loopne
pop
enter
icebp
cmp
fwait
push
sbb
pop
push
aaa
jl
or
mov
jl
pusha
cmp
aad
xchg
loope
sbb
mov
into
inc
cltd
lods
mov
fdiv
jae
pusha
or
lcall
sbbl
scas
dec
je
dec
outsb
dec
or
aad
repnz
sub
not
das
lea
sbb
aam
add
pop
mov
lock
loop
dec
das
out
stc
pop
xor
loopne
mov
es
push
pop
jns
ljmp
outsb
in
outsb
lds
cmp
pushf
shlb
out
rolb
clc
xchg
jecxz
sbb
sbb
sbb
mov
out
and
adc
and
repnz
push
movb
xchg
rcrb
shlb
jle
cmpsl
arpl
pop
iret
or
test
sti
sbb
sub
or
ja
cld
add
mov
xchg
cwtl
sub
mov
inc
mov
mov
xor
test
adc
loopne
test
lahf
pusha
movsb
push
stos
push
mov
js
dec
inc
inc
fstpl
xchg
mov
push
inc
jno
push
mov
jl
rorb
inc
clc
test
sub
mov
sbb
cmp
xchg
inc
mov
hlt
fdivs
leave
bound
mov
ja
imulb
mov
movsl
jecxz
cmp
mov
mull
xchg
xlat
jmp
dec
pop
fistpl
aam
adc
push
imul
aam
leave
movsl
ror
inc
cmp
dec
and
lds
adcl
xchg
js
iret
out
xlat
sbb
pushl
jno
cli
mov
roll
sbb
ficompl
pushf
insb
lret
or
cmp
sbb
ljmp
and
pop
mov
inc
in
mov
int
lods
roll
or
jb
fwait
je
adc
push
mov
rcl
mov
std
mov
add
pop
jbe
pop
inc
scas
rolb
insl
pusha
cwtl
fcmovbe
stos
inc
in
xlat
test
imul
ret
insb
mov
lret
xchg
insb
pushf
fwait
mov
lods
adc
das
hlt
push
shlb
push
je
adc
scas
mov
call
mov
int
out
sbb
cwtl
pop
bound
call
out
cmp
loopne
sub
push
dec
xchg
push
adc
mov
mull
fcompl
jecxz
rcll
nop
mov
out
lods
fisubrs
and
popf
pop
adc
inc
and
or
push
push
mov
out
xchg
mov
in
das
or
ret
lock
mov
push
or
lea
pop
in
inc
sub
lret
pop
outsl
repz
clc
push
in
xorb
ja
lahf
xchg
xor
sub
cmp
cmp
stos
xor
cltd
xchg
jae
push
ds
aad
jmp
sub
popa
push
scas
cmpsb
inc
push
push
dec
mov
xor
out
in
or
inc
jnp
jl
or
out
std
mov
inc
insb
dec
es
sbb
adc
xchg
pop
ss
cmpsb
stos
gs
hlt
fldl
in
xchg
popa
cmp
mov
inc
aad
xor
sub
insb
lock
stos
lods
or
mov
pop
push
cli
js
mov
xchg
shlb
mov
sbb
xor
in
imul
std
aas
es
mov
icebp
fs
jmp
movsb
cmp
dec
xchg
gs
sti
in
push
stc
lgs
into
jno
lods
inc
mov
aaa
pop
jmp
repnz
push
add
stos
xchg
and
jns
inc
mov
sub
pushf
xor
jb
pusha
aaa
sub
or
movsb
insl
jl
push
pop
ja
ret
cmpsl
sarb
mov
outsl
nop
je
mov
xchg
fldcw
lods
push
rcr
sub
sbb
inc
sbb
xor
imul
jg,pn
inc
sub
jl
out
cmc
faddl
lds
daa
dec
out
and
fidivrs
mov
ret
mov
fadds
adc
out
imul
in
jg
clc
cmp
repnz
jge
cmp
mov
les
push
or
inc
sub
jb
leave
out
shll
iret
or
je
es
inc
ret
dec
add
addr16
sbb
xchg
jge
jge
add
jns
hlt
stos
mov
ss
scas
sbb
je
aad
lcall
das
fsubs
mov
fs
repz
push
mov
inc
lahf
fwait
add
aad
fiadds
shlb
or
clc
pop
mov
adc
in
decb
cmp
fsubrl
add
hlt
popa
sbb
jp
mov
fsin
test
mov
pop
add
cmp
pushf
add
dec
lea
dec
cs
push
fisubrs
mov
mov
movsb
hlt
das
dec
call
hlt
aaa
mov
js
imul
outsb
mov
jne
xor
add
sbb
dec
call
aam
les
cmp
add
jmp
xchg
out
popa
sub
cwtl
sti
xor
cld
jne
enter
subb
xor
adc
dec
dec
imul
xor
mov
adc
sub
sbbl
mov
pop
push
add
test
movsw
inc
inc
popa
cmp
movb
and
mov
outsl
lods
test
or
roll
sarb
outsl
shr
inc
adc
pop
or
dec
call
jle
pop
mov
rorb
loope
mov
mov
repnz
xchg
push
int3
jnp
into
aam
xchg
dec
popfw
in
lds
push
fimull
jo
cmp
and
jp
sar
loope
imul
in
inc
push
push
test
jle
loopne
xchg
subb
adc
mov
xor
mov
sub
push
mov
fildl
jp
pop
xor
xor
inc
int
push
mov
push
sbb
jecxz
ja
mov
push
cwtl
add
fldenv
push
push
add
dec
or
or
adc
push
lret
dec
fwait
out
xchg
push
imul
insb
clc
lock
or
adc
fiaddl
mov
push
mov
jo,pn
out
inc
int3
imul
and
test
mov
xor
enter
jns
or
or
push
jmp
sbb
inc
adc
pop
mov
adc
lock
insb
cli
ret
icebp
mov
imul
mov
xor
aad
mov
mov
nop
push
jmp
cmp
test
jmp
lcall
lods
jnp
mov
push
jae
fwait
outsl
mov
cmp
or
rorl
ljmp
call
xchg
js
adc
jp
test
sub
daa
insb
iret
push
or
or
clc
mov
out
bound
add
fbstp
xchg
data16
roll
and
arpl
xor
dec
jl
jge
pop
jnp
je
or
mov
shll
push
pop
movsb
xlat
leave
push
lret
adc
iret
jb
movsl
mov
pop
cmp
mov
mov
popf
cmp
xor
and
std
mov
loopne
pop
jno
dec
mov
sub
sarb
loope
outsb
mov
mov
and
int3
xchg
fsubp
or
add
dec
xchg
sub
int
pop
in
mov
test
test
dec
in
addr16
in
in
sub
inc
push
outsb
inc
enter
sti
jae
out
jg
adc
or
call
cltd
mov
negl
pop
sbb
sbb
das
and
xchg
arpl
mov
clc
xchg
in
adc
cmc
add
dec
pop
frstor
push
xor
stos
dec
out
mov
mov
dec
fsubs
rolb
pop
adc
cld
xor
fnstsw
push
bound
xchg
mov
push
bound
jle
cwtl
mov
lds
xchg
cmp
mov
dec
add
add
stc
mov
out
or
xor
in
add
mov
jo
push
scas
repnz
dec
sub
into
cmp
add
adc
movb
mov
mov
mov
lods
outsl
les
push
mov
push
fldenv
out
adc
sub
mov
idivl
clc
movsb
fisubrs
add
lret
mov
push
pushf
sbb
sub
adc
pop
int3
popl
repz
call
ret
movsb
repnz
popa
xchg
xchg
in
int
rcl
push
shrl
or
mov
mov
or
loop
mov
je
int3
bound
sbb
pop
dec
out
and
push
mov
cmpsb
jae
and
inc
sub
pop
sbb
pop
mov
pushf
loop
cmp
lret
or
sbbb
bound
ror
lods
jmp
cmovl
inc
jp
arpl
adc
mov
mov
lock
push
mov
push
ret
arpl
int3
mov
rolb
int3
in
jge
pop
out
inc
fwait
cs
add
call
xor
cs
mov
xchg
xchg
repz
lahf
or
add
push
idivb
cmp
sub
jno
xchg
sarl
popa
mov
add
outsb
test
xor
ret
loopne
adc
out
inc
cmc
cmp
xchg
jnp
sub
daa
js
les
bswap
outsl
sbb
icebp
call
enter
jl
aad
lods
xchg
lahf
add
mov
roll
loope
sbb
in
hlt
insb
out
jmp
cmp
jae
push
cwtl
add
sub
lret
arpl
push
dec
dec
jns
dec
or
sub
icebp
sbb
leave
xor
jo
jmp
sub
aas
jmp
leave
pop
cmp
inc
sub
pushf
xchg
pop
adc
pusha
push
mov
scas
stc
adc
jo
fdivrp
pop
sub
mov
jns
and
mov
cli
sbb
scas
adc
cld
sbb
xchg
inc
mov
jp
push
lods
in
in
sbb
jno
mov
fisubrs
in
add
adcb
repz
mov
dec
pusha
adc
inc
xchg
dec
aaa
or
push
repz
ja
and
imul
mov
out
or
aas
gs
push
xor
punpcklbw
jo
hlt
push
or
sbb
and
roll
out
cmp
ljmp
mul
data16
andl
add
adc
dec
mov
roll
mov
ss
add
add
xor
mov
push
loopne
dec
bnd
loope
sbb
pop
pusha
add
pop
pop
pop
arpl
pop
cmp
in
sahf
jne
cmc
adc
iret
xor
orb
jmp
mov
xchg
scas
and
test
ljmp
cmp
shrl
mov
lret
adc
push
in
sub
pop
mov
movsl
jmp
mov
je
lret
cmp
cltd
push
cmpsl
dec
mov
insb
jmp
xchg
data16
jl
lret
dec
in
sbb
adc
mov
nop
dec
scas
xor
push
fcomps
icebp
sbb
sub
loop
pop
hlt
jg
xchg
xchg
ret
loopne
and
bound
adc
arpl
in
or
cwtl
pop
mov
in
mov
inc
imull
add
repz
into
clc
or
aam
add
lock
adc
add
dec
pop
jmp
movl
leave
xor
sub
jg
mov
mov
stos
mov
xor
shl
jge
mov
sbb
mov
push
fiadds
mov
push
out
shll
sahf
xor
dec
les
and
xchg
jl
inc
insb
mov
adc
rcr
sub
movsb
ljmp
push
inc
ret
sub
insb
insl
xor
cs
cmp
call
xchg
test
lret
je
lock
mov
xchg
enter
sbb
or
jmp
loope
jnp
ret
push
pop
sbb
jg
dec
movsb
sub
mov
mov
pop
cmp
nop
pop
in
pop
push
mov
rclb
das
hlt
popf
sub
js
ljmp
ret
sub
mov
imul
xchg
or
xchg
add
test
imul
sti
cli
push
mov
xor
sbb
adc
mov
out
pminub
nop
pop
dec
movsb
jae
mov
or
xchg
mov
jge
inc
inc
loop,pn
enter
mov
and
mov
jbe
out
sbb
xchg
push
pusha
stos
jbe
pop
sbb
rcrb
or
ffree
in
inc
inc
pop
add
in
mov
push
add
mov
cmp
xlat
cmp
jnp
add
sti
jecxz
test
loop
push
mov
lea
cmp
xchg
push
test
mov
iret
inc
rolb
jno
mov
sub
jbe
mov
sarb
ficoms
nop
out
out
and
jl
std
dec
daa
jmp
inc
cli
xor
aas
je
pop
mov
sbb
addr16
leave
inc
js
push
push
sub
lret
loop
and
add
cltd
pop
push
out
sarb
lcall
xor
inc
pop
inc
sbb
xor
xchg
add
js
pop
scas
aad
mov
xchg
xlat
jne
outsb
mov
in
or
lock
or
inc
clc
sbb
add
xor
rolb
push
nop
les
test
push
loope
rcrl
add
icebp
dec
adc
jo
pop
mov
cmpsl
inc
in
inc
push
insb
jg
and
jmp
sub
add
add
inc
insb
int3
dec
jno
ret
jae
xor
ds
and
push
sbb
and
adc
add
push
pop
fisubs
sub
outsb
push
push
add
sbb
mov
gs
jecxz
and
cmpsb
arpl
scas
mov
leave
mov
hlt
test
aas
or
test
clc
pop
movsl
lcall
xchg
xlat
es
lahf
int3
arpl
test
dec
in
push
outsb
mov
push
jge
out
add
sub
dec
pop
push
mov
push
dec
jecxz
shrl
cmp
notl
xchg
xchg
cwtl
push
jmp
es
test
int
fdivrl
hlt
pop
rcrb
pusha
xchg
repz
mov
dec
cwtl
imul
out
jg
add
sbb
lea
jmp
lcall
cmp
daa
das
xchg
xchg
and
and
xchg
bound
ljmp
adc
add
imulw
sbb
into
fisttpl
loop
mov
cmp
inc
jmp
movsl
dec
lods
push
lret
mov
cltd
imul
xor
repnz
negl
or
repnz
fwait
mov
addb
ret
jle
push
insl
test
mov
hlt
pop
test
aad
int
inc
stos
pusha
push
sub
cltd
out
mov
sbb
pop
cmpsl
adc
fidivs
nop
movsb
jo
xchg
push
pop
mov
jns
pop
push
sub
leave
adc
stos
push
repz
adc
cmpl
lds
xchg
add
pop
jle
cli
sub
dec
adc
out
mov
pop
xchg
inc
ret
inc
push
or
mov
int3
dec
add
movb
inc
fisttpll
mov
dec
test
arpl
xor
push
or
ret
in
in
jb
cmp
dec
leave
dec
lods
ret
cmp
adc
pop
mov
incl
mov
sar
and
push
les
enter
add
inc
cmpsb
cmp
aaa
movsb
hlt
dec
inc
bound
sub
call
xchg
sbb
inc
dec
pop
and
add
add
nop
pop
mov
mov
push
mov
jg
hlt
push
repz
imul
out
cmp
les
inc
add
and
pop
adc
xor
xchg
into
mov
ret
imul
and
jno
out
xchg
mov
dec
rcrb
idivl
sub
out
adc
mov
out
cmpsl
xor
enter
push
cmp
jns
in
imul
xorb
cmpsl
out
xchg
les
xchg
fcmovne
inc
mov
stc
inc
int
xlat
inc
mov
ja
gs
adc
repz
popa
out
test
insb
into
mov
cmp
jecxz
inc
inc
loop
cld
or
fcomi
repnz
mov
sub
cmp
or
mov
jmp
clc
adc
mov
fisubrl
jmp
and
sahf
jp
scas
fs
out
pusha
inc
loopne
les
push
mov
jl
stc
mov
pop
xchg
rcrl
dec
jmp
test
pop
iret
leave
movsl
jb
adcb
int3
xchg
pushf
mov
pop
ja
xor
push
sbb
adc
cmp
dec
cli
or
stos
cmpsb
movsb
mov
adc
pop
fstl
sahf
loop
stos
jp
and
aaa
inc
xchg
cld
aad
inc
cmp
cmpsl
fidivs
dec
je
sbb
lds
push
or
cmc
lea
xor
push
sahf
cmc
movsb
fs
adc
das
aad
push
dec
add
sbbb
lahf
sti
or
cmp
rcrl
cwtl
out
push
ds
je
jmp
iret
adc
arpl
stos
and
cli
scas
incb
dec
push
ss
jbe,pt
xor
jns
xor
cmc
xchg
inc
sti
rcrb
arpl
into
or
es
aas
jno
icebp
js
and
ret
in
idiv
mov
cmpsl
sub
push
mov
repz
fistps
adc
mov
sbb
add
fidivrl
incl
js
or
insl
inc
cmp
popf
jle
or
jecxz
cmp
inc
aam
out
cwtl
mov
bound
xorl
bound
bound
rclb
ficoml
cmpsb
xchg
test
mov
outsl
fldt
stc
nop
sub
pushf
loop
sbb
lds
xor
inc
rcr
in
mov
mov
fiaddl
jne
push
movsb
cmp
sbb
movsl
sub
out
sub
pop
outsl
and
or
xor
mov
inc
add
pop
nop
pop
mov
inc
mov
imul
subb
shll
mul
stos
push
lcall
xchg
cmp
push
out
pop
fsubl
jnp
add
rcrl
jmp
mov
sahf
les
cltd
adc
mov
push
inc
enter
mov
mov
push
dec
das
add
mov
adc
sub
adc
sub
mov
jmp
cmc
es
sahf
adcb
xchg
cli
je
enter
in
mov
xor
sbb
aaa
and
push
inc
lahf
in
push
popf
mov
mov
cmp
mov
out
ret
addr16
dec
mov
inc
es
sub
mov
fsubp
pop
jle
push
or
arpl
or
mov
dec
call
pusha
fwait
cmp
insb
rcrl
dec
das
dec
inc
popf
adc
xor
xchg
cs
loop
clc
push
push
jecxz
push
aam
push
push
out
daa
imul
lock
fisttpll
sub
ret
jl
stc
scas
mov
push
scas
fldenv
orb
jae
pop
adc
sub
xor
sub
cmp
pusha
and
cmpsl
mov
sub
xchg
add
fcom
cmp
sub
jle
mov
sub
xchg
fisttpl
jb
add
mov
bound
adc
aad
xlat
xchg
movsl
cmpsl
mov
fistpl
pushf
dec
xorb
shrb
cmp
movb
mov
jae
stos
xor
xlat
xor
mov
or
jb
and
mov
in
jb
xchg
test
push
sub
jle
test
loope
dec
movsl
loop
or
ret
jno
insl
xor
addr16
or
cmpsb
test
jno
gs
cmp
popa
ficoms
adc
jo
ret
cmp
and
enter
stos
popf
sar
pop
pop
mov
mov
add
orl
or
mov
pop
addr16
adc
cli
leave
sub
sub
push
daa
clc
dec
ds
pop
incl
scas
shl
mov
push
popa
ds
cs
testb
shlb
cltd
cmp
lcall
push
sbb
data16
fdivrl
add
pop
arpl
sti
and
jecxz
prefetcht2
cmp
jl
push
test
or
pop
aaa
aas
lret
dec
fldt
mov
cwtl
mov
cli
imul
jno
hlt
or
or
sarl
jb
add
xor
and
jge
xabort
add
fwait
push
mov
add
pop
ret
test
ficoms
loope
jnp
mov
push
inc
mov
js,pn
divb
mov
out
add
lds
cmc
ud0
sbb
adc
insb
rcrb
sbb
fs
inc
shl
xor
and
mov
sbb
and
ljmp
add
dec
mov
jp
and
or
inc
mov
fs
pop
jo
pop
pop
pop
jp
pusha
fists
loop
sti
or
mov
pop
nop
insl
jnp
mov
std
test
lret
rcl
pop
daa
mov
sti
push
add
or
dec
nop
dec
in
rorb
ljmp
push
je
les
popf
shr
xlat
sub
sub
aaa
jecxz
sbb
ret
mov
xchg
xlat
adc
or
movsl
dec
mov
out
xchg
pushf
jo
sub
scas
push
sbb
xchg
and
pop
mov
mov
mov
fwait
pop
aas
dec
shrb
ficompl
fimull
pop
movsb
lcall
rcl
dec
push
ret
push
shll
movsb
in
cmpsb
ret
jmp
stos
insl
adc
popf
mov
push
sub
mov
jb
mov
mov
sbb
fcmovb
mov
mov
nop
push
sbb
test
inc
cmpb
inc
into
ret
push
lea
cld
inc
mov
popf
addr16
aad
xor
mov
fdivl
cwtl
mov
jne
mov
push
or
mov
enter
stos
jbe
cmp
pop
adc
inc
or
or
fistpll
cmp
push
adc
xchg
cwtl
or
inc
pop
add
testl
imulb
ret
divl
mov
inc
pop
decl
jb
xchg
mov
pop
mov
xor
mov
mov
cltd
ss
add
xchg
outsl
adc
fldt
xchg
xchg
push
arpl
les
push
mov
sub
and
push
sub
sub
sbb
sub
lea
aad
jb
mov
push
pushf
mov
icebp
loope
sub
mov
xchg
das
js
push
push
jns
jge
gs
xchg
lret
cmp
push
stos
std
xchg
xor
jp
cmc
mov
aam
xor
aam
xchg
je
sub
leave
cmc
mov
out
pop
out
sub
xor
lret
jl
mov
or
push
xchg
clc
jle
outsl
lods
movsl
shll
int
lock
jge
or
scas
cmpsl
push
mov
mov
bound
inc
loopne
or
popa
es
js
mov
addr16
mov
ja
shrb
loope
in
pop
xlat
lahf
leave
cld
es
or
sbb
or
ja
out
jae
xor
das
pop
and
sub
adc
xchg
cltd
pushw
xchg
xchg
cmp
add
pop
aas
notl
cmp
movl
jge
pop
fdivl
aaa
dec
xor
pop
mov
inc
fisubl
int3
inc
mov
sub
mov
repz
dec
aad
sahf
or
jecxz
aas
popa
xor
add
jne
adc
mov
mov
mov
rclb
mov
ficompl
mov
lahf
std
lea
ds
aaa
ret
lahf
jns
adc
pushf
repnz
adc
mov
add
ja
push
decl
mov
arpl
cmp
ljmp
lods
mov
ja
cmp
or
push
dec
push
lcall
lret
imul
pop
cmp
insl
sbb
in
das
mov
mov
cmp
negb
daa
mov
dec
aad
sahf
lcall
push
mov
inc
xlat
lods
pop
fimuls
jecxz
into
jne
push
daa
xor
das
addl
pop
lcall
inc
and
jmp
fwait
dec
xor
aad
out
imulb
cmp
fdivr
adc
mov
sub
aam
mov
and
mov
testl
or
int
and
push
divl
push
sub
out
dec
lock
orl
fdivrs
je
push
fbstp
and
fisttps
mov
repz
clc
loop
cmp
loope
ds
cmc
fisubrl
outsb
loopne
jnp
adc
push
add
xchg
minps
fidivl
mov
and
mov
and
and
std
int
rclb
mov
mov
mov
imul
mov
cmpsl
stc
fbld
in
popf
pop
ljmp
adc
inc
mov
addr16
ja
sbbl
jge
inc
out
mov
repz
jmp
je
sub
arpl
imul
xor
ja
push
ds
in
jg
popa
and
sbb
mov
pusha
and
mov
enter
cmp
and
jg
dec
pop
inc
push
mov
jne
jo
inc
loop
rorb
xor
sub
mov
push
ret
and
adc
xchg
pop
mov
dec
xor
inc
adc
movsb
sbb
scas
lds
jge
inc
imul
mov
cmp
data16
lods
sbb
adc
lea
stos
pop
fimuls
cmp
xchg
push
arpl
inc
jg
cltd
push
adc
push
adc
add
aad
test
push
insl
ret
jp
sub
cmp
and
ja
mov
mov
pop
outsl
daa
jle
add
neg
aam
jb
std
inc
stc
xchg
push
push
gs
imul
push
fcoms
adc
adc
sub
cmc
repz
lcall
mov
cwtl
pushf
jmp
mov
pop
cmp
ret
sub
inc
insb
pop
cmpsb
jno
push
dec
clc
add
adc
push
lds
aas
sub
xchg
push
pop
mov
neg
cmp
fwait
stc
xor
pop
pop
pop
mov
xor
jg
and
sub
sbb
dec
shlb
mov
pop
jae
repnz
xchg
push
test
clc
jle
push
push
mov
jo
add
aaa
sub
cmp
bound
imulb
scas
orb
mov
enter
out
mov
scas
dec
and
inc
loopne
xor
add
xchg
fdivrs
jno
mov
pop
xchg
adc
sbb
inc
lcall
or
push
aaa
repnz
pop
or
add
jns
jle
jge
inc
inc
fmull
mov
add
xor
popf
jmp
add
lcall
js
push
sub
and
std
pop
clc
inc
xchg
aam
gs
ret
add
aas
popf
out
mov
jle
jb
rcr
in
lsl
push
popa
inc
ficomps
lock
adc
outsb
push
shr
popa
rcrl
pop
inc
xor
lahf
add
push
fiadds
popf
imul
bound
jno
fcmovnbe
pop
mov
mov
fmuls
dec
out
mov
and
mov
sub
sbb
jae
dec
in
nop
stos
or
xor
inc
mov
inc
or
cmp
sahf
jle
subl
imul
push
lcall
push
sbbb
test
dec
mov
dec
clc
test
icebp
sbb
add
lea
pop
push
sbb
repnz
dec
mov
dec
push
mov
sbb
cs
pop
mov
movsl
cmp
popl
xor
repz
movsb
test
jecxz
push
xchg
loopne
xchg
cwtl
push
icebp
mov
mov
movsl
lods
out
fidivl
jbe
push
adc
gs
cwtl
xchg
sub
mov
pusha
mov
call
rorb
mov
cmp
daa
jae
call
xor
push
fnstcw
adc
and
loopne
in
gs
adc
outsb
idivb
xchg
inc
dec
fwait
ja
pop
out
dec
sarl
inc
dec
test
dec
mov
or
dec
in
push
std
dec
fwait
push
xchg
push
fcoms
inc
lods
ja
add
xlat
or
cmpsb
jne
push
lods
mov
push
data16
cmpsl
loopne
aam
xorl
fwait
repz
ret
out
xchg
push
or
call
dec
lret
push
cmp
pop
inc
leave
fidivl
lock
adc
loop
or
dec
push
add
cmp
lds
inc
inc
in
outsl
test
push
push
dec
mov
cmp
fldl
add
imul
pop
jnp
call
push
cmpb
dec
iret
imul
das
mov
daa
das
xchg
mov
loop
sbb
jge
loop
test
lods
icebp
xchg
mov
pop
mov
xchg
mov
out
jmp
fwait
jbe,pn
or
mov
ret
gs
xor
adcb
and
mov
xchg
jecxz
dec
dec
dec
inc
pushf
dec
push
aad
mov
cli
mov
mov
cli
sub
sbb
add
lods
mov
push
cmpsl
pop
cli
int3
cmpsb
negl
push
insl
pusha
pop
sbb
or
test
pop
js
addl
sub
movsb
xorl
and
aaa
or
hlt
sahf
in
xor
inc
sub
in
rclb
push
jne
sar
xchg
cwtl
ficompl
sub
insl
mov
popa
push
add
inc
xchg
mov
sub
mov
test
popa
jp
out
mov
or
insb
pop
test
inc
ret
cmp
mov
add
mov
imul
ret
mov
inc
and
movl
cmc
call
sbb
frstor
push
cmp
fadds
adc
fimull
xchg
cltd
jo
and
sti
and
out
mov
mov
cwtl
pop
or
lcall
js
adc
push
xor
or
jle
jmp
inc
push
cmp
pop
adc
sub
dec
and
cli
mov
cmp
push
int3
cld
in
or
jl
hlt
cmp
xor
icebp
inc
stos
xor
lods
mov
pop
xchg
xchg
outsb
cmp
das
arpl
fcoms
inc
xchg
mov
popa
xchg
icebp
pop
inc
jl
mov
push
and
push
sbb
ds
aaa
xchg
mov
cmp
push
jo
or
push
push
daa
and
fld
cmpsl
mov
mov
cld
mov
push
xchg
or
cltd
mov
imul
clc
pop
shrb
ficoms
sub
stos
dec
daa
repnz
dec
jae
pop
or
mov
adc
mov
outsb
mov
out
jecxz
and
and
sbb
imul
or
push
xor
and
jbe
pop
add
mov
push
cwtl
cmp
mov
pop
push
or
mov
outsb
fsubl
icebp
mov
data16
subl
add
mov
pop
lods
jmp
mov
mov
cmp
inc
daa
xchg
add
xor
enter
sub
inc
and
jns
lret
out
ficomps
and
dec
pop
sub
xor
add
sub
sbb
sbb
inc
xor
xor
jge
or
sub
ljmp
in
mov
mov
pushf
jno
aad
divb
cmp
ret
sub
sbb
test
cld
adc
ss
mov
aas
lahf
pop
popa
loope
call
dec
dec
iret
stos
mov
in
mov
gs
bound
das
leave
ljmp
js
pop
cwtl
pop
lcall
pop
dec
sbb
jg
std
repnz
lret
xchg
std
cmpsl
mov
fisubrl
mov
xchg
dec
js
push
std
mov
push
inc
adc
add
xor
test
push
xlat
or
mov
cmc
sub
imul
pushf
adc
mov
insb
sbb
dec
dec
mov
notb
xchg
xlat
xchg
and
jno
aaa
leave
into
mov
cltd
or
push
cmpsb
popf
gs
xchg
gs
stc
hlt
cwtl
arpl
sti
inc
adc
ret
inc
stos
jl
push
andb
pop
xlat
push
cmp
std
popf
adc
or
shll
out
jl
xchg
pop
ret
cld
inc
xor
lcall
mov
aam
push
push
lea
xor
pushf
mov
decl
mov
jns
in
test
and
out
stos
adc
iret
push
xor
data16
ret
test
ljmp
rcr
daa
arpl
adc
scas
mov
xlat
iret
rcrl
ja
popa
test
cs
out
and
xor
lcall
pop
xchg
fnstenv
add
jp
or
jns
push
mov
in
mov
out
adc
xchg
test
add
add
mov
cmc
sub
and
pop
jle
idiv
fs
hlt
sub
ja
mov
out
sbb
add
clc
sahf
xchg
push
bnd
fnstsw
dec
and
addl
test
leave
jae
sub
dec
mov
sbb
sub
fnstsw
arpl
cmp
lods
push
sbb
jo
les
mov
test
fldt
cmp
dec
out
incl
addr16
mov
cmp
add
stos
mov
inc
into
sbb
dec
xor
lods
mov
jnp
test
bound
fildl
mov
mov
cmpsl
imull
test
ja
mov
or
xchg
sub
mov
into
movsl
imul
aam
adc
cltd
das
orb
push
imul
adc
fsubl
ss
push
push
jne
add
insb
outsb
add
xchg
cmp
mov
fistps
movsl
jnp
add
daa
inc
jmp
xchg
adc
imul
mov
popl
and
mov
lahf
pop
int
pop
mov
leave
jp
popa
test
xchg
adc
enter
js
std
pop
xor
jns
cmovae
cmp
jmp
inc
sub
mov
jl
cmp
cli
movsb
fistl
pusha
mov
aaa
mov
sub
stos
xor
loopne
imul
jne
xchg
mov
dec
mov
xor
fldcw
xor
dec
pop
iret
arpl
add
xchg
push
jecxz
mov
lcall
in
jl
idivl
sbb
es
mov
cmp
std
in
out
ljmp
jle
and
rorl
cmp
hlt
lcall
jg
out
icebp
sti
lock
fdiv
add
fst
aaa
es
lahf
int3
and
add
out
cmp
in
jno
cmp
mov
inc
test
push
mov
test
dec
and
lret
adcb
movsl
pop
sbb
push
jecxz
mov
mov
andl
dec
sub
shll
movsb
das
dec
dec
int
pop
ja
mov
stc
andb
dec
dec
adc
inc
pop
cmp
jmp
mov
clc
xchg
cmpl
test
das
mov
pop
pushf
pop
cmp
cltd
inc
mov
cmp
subl
mov
xor
push
jns
lods
in
fcmovnu
xchg
cmpsl
xchg
loop
in
lock
call
daa
pop
pop
mov
hlt
mov
in
dec
jbe
popa
out
filds
cs
data16
sbb
jge
mov
add
push
sbb
lret
inc
mov
sbb
push
sbb
sbb
xor
mov
mov
and
add
sti
je
test
mov
subl
mov
jne
aad
lret
xchg
pushf
sub
push
xor
fidivs
push
jp
cs
into
mull
imulb
aam
movsb
add
enter
cmp
push
bound
mov
and
jae
addr16
dec
cmpsl
push
mov
and
xor
mov
mov
les
adc
lods
mov
mov
sahf
rcrl
out
insb
dec
push
lds
cmp
push
xor
mov
enter
mov
out
cwtl
xchg
test
adc
and
sub
stos
inc
sbb
leave
pushl
cmpl
rorl
sbb
scas
jg
jb
inc
dec
insl
or
adc
in
xchg
ret
pop
dec
shrl
lret
xchg
jl
adc
je
shrl
pop
push
rcrl
sub
lret
cli
cmc
cmp
and
arpl
sbb
mov
popa
mov
sub
cmp
stc
sub
ret
dec
sarb
pusha
adc
stos
mov
mov
bt
xlat
add
das
and
imul
in
test
and
pop
stos
and
addr16
outsb
push
leave
mov
sbb
loop
fcomp
add
add
idivl
cmp
sub
insb
jg
jne
lahf
xchg
fs
daa
adc
cli
cmpb
push
lcall
sub
pop
dec
adc
and
sub
or
pop
jge
sub
loop
aaa
or
outsb
aad
lds
mov
test
stos
es
add
nop
loope
mov
jo
jae
and
jbe
xor
outsl
cmp
push
mov
cltd
dec
jp
xchg
pop
mov
and
ljmp
xchg
add
mov
popa
das
mov
int3
in
in
jmp
sub
pop
out
call
jbe
add
scas
add
out
lcall
push
loope
pop
int3
fucomi
hlt
out
in
cmpsb
xor
incl
lds
mov
les
stos
add
movsb
sbb
xchg
test
mov
dec
lock
cltd
jmp
or
les
mov
jl
ljmp
jo
or
ret
je
dec
jge
dec
mov
arpl
hlt
mov
dec
xorl
and
inc
jg
in
mov
test
adc
jo
cld
shrl
enter
mov
out
and
adc
cmpsl
test
addr16
jmp
mov
clc
jb
scas
mov
sti
fcoml
test
not
mov
mov
adc
cltd
lea
and
je
and
add
lret
pop
daa
cmpsb
nop
push
inc
cli
inc
mov
adc
ja
push
clc
adc
xchg
aas
mov
rclb
shlb
shlb
jle
mov
mov
mov
mov
adcb
ljmp
hlt
add
fldcw
jns
inc
fdivrs
out
cltd
rcrl
addr16
test
bound
and
fstpl
sbb
mov
or
fisubrl
test
dec
imul
js
xrelease
test
out
and
add
sbb
clc
xorb
dec
lods
jg
inc
in
aas
lods
aaa
loop
pop
and
or
xchg
xchg
xchg
mov
push
jnp
adc
or
pushf
add
popa
mov
lret
push
loop
in
daa
sarl
jne
xchg
subl
push
push
in
jp
cmp
mov
aam
ftst
dec
and
popa
pop
sub
inc
and
rclb
addr16
jae
sbb
pop
push
cli
data16
dec
imul
cli
lahf
jmp
xor
jp
jno
lcall
push
loopne
lods
sub
xchg
and
aad
and
dec
ljmp
arpl
mov
ficoml
or
int3
sbb
imul
xchg
jl
ljmp
jecxz
pop
push
adc
mov
push
cwtl
lods
xchg
lret
xor
inc
dec
sbb
cld
push
addr16
out
ficomps
jne
out
or
iret
pop
jnp
popa
inc
loope
js
test
enter
iret
ret
xchg
addl
cld
stos
divl
mov
push
loop
cmp
lods
sub
nop
ljmp
add
xchg
jns
in
daa
rcr
inc
sarb
push
out
push
jae
jmp
jmp
mov
loope
sbb
or
add
in
mov
dec
mov
inc
mov
and
and
jns
mov
outsb
push
repz
pop
repz
rcrl
lock
mov
mov
inc
mov
aaa
lahf
add
dec
lds
movsl
ds
mov
loopne
mov
and
sub
inc
or
loope
xorb
xor
pop
ret
add
sbb
jbe
lea
leave
mov
das
addr16
adc
sahf
loopne
xor
lret
into
shlb
dec
mov
imulb
sarb
fstpt
loop
mov
cmp
add
lock
add
add
dec
test
mov
rcll
sbb
xor
push
push
xchg
sarb
mov
jge
pop
test
mov
jmp
mov
pop
adc
mov
jp
mov
aam
mov
sbb
ds
inc
int
ret
dec
inc
addr16
pop
movsl
lcall
push
movb
lock
mov
jmp
cmp
cs
mov
sti
test
das
sub
push
dec
cmpsb
movsl
testb
fcmovnb
push
or
inc
pop
mov
cmc
insb
push
lcall
jb
jecxz
into
adc
movsl
dec
ficoms
ja
push
es
dec
dec
cmp
dec
subl
adc
xor
or
jmp
cmp
sub
dec
mov
imul
push
xchg
cmpsl
into
xchg
add
or
jl
cmp
and
fs
out
add
xchg
jno
mov
cltd
inc
cmpb
xchg
int
or
sbb
fadds
cld
mov
and
ja
jle
in
loopne
cmp
sbb
into
cmp
mov
or
mov
xchg
cmpsl
mov
es
mov
cmp
das
jmp
push
inc
sti
out
bound
gs
push
sub
add
push
push
std
mov
movsl
mov
arpl
and
cmpsb
inc
imul
add
jmp
imull
jo
or
and
fnstsw
shlb
inc
dec
test
push
outsl
inc
add
loope
xor
mov
ret
cmp
push
pop
and
popf
cmp
mov
inc
push
jge
cs
sub
cs
mov
in
cli
bnd
mov
daa
pusha
xchg
leave
orb
jbe
jle
in
xchg
lret
push
aaa
jae
outsl
xchg
xor
flds
push
sti
outsb
aas
and
mov
scas
jne
fcmovne
xchg
jae
mov
mov
cmp
mov
fisubrs
push
shl
loop
sub
enter
jl
bound
mov
es
fildll
stos
mov
or
icebp
mov
pop
xchg
lcall
mov
fidivrl
jp
fsts
mov
vpsubsw
ja
test
push
dec
fstpt
push
mov
mull
int3
insl
mov
xchg
cmp
mov
sahf
adc
xchg
sbb
sub
adc
cwtl
sti
movsb
push
test
filds
out
inc
jo
repz
loope
outsb
sub
lea
fistps
jae
lods
xchg
mov
movsb
mov
pop
inc
mov
inc
sbb
xlat
addl
andb
jecxz
pop
push
xor
fsts
loope
mov
push
dec
pop
lds
inc
push
cli
sbb
lds
cmp
daa
stc
push
sub
les
test
cmpsb
test
js
stos
mov
in
lock
clc
sti
jo
scas
mov
cli
mov
xchg
icebp
adc
add
je
aas
lods
fidivrs
jns
jmp
ja
xor
std
dec
movsl
ret
or
inc
nop
xlat
sbb
xlat
pop
lods
jl
outsb
xor
mov
js
ret
int
or
jmp
mov
clc
dec
orl
adc
xor
fidivrs
fcmovnb
in
je
sahf
mov
inc
imul
bsf
mov
sahf
mov
cmc
push
testl
cmpsb
push
int
cmpsb
cmp
and
sahf
lock
sub
insl
pop
repnz
in
lahf
sarb
pop
cmpsb
push
leave
inc
inc
gs
cwtl
pop
shr
mov
cltd
dec
outsl
push
xchg
cmpb
outsl
mov
cli
leave
push
pop
ja
mov
add
lods
out
cmp
lcall
fsubr
jbe
or
inc
fnsave
inc
loope
xchg
pop
aas
into
push
mov
jo
fnop
or
stc
or
sub
insl
xchg
sarb
icebp
scas
add
movsl
add
fisubrl
mov
sbb
movsb
enter
in
popa
shl
and
cwtl
mov
pop
push
push
xor
icebp
repnz
imul
push
hlt
and
adc
shl
jecxz
mov
aam
pop
mov
jbe
jno
test
cli
popf
ret
jp
scas
mov
cmp
outsl
mov
dec
mov
jl
out
push
jmp
movsb
xor
inc
push
inc
adc
mov
aaa
adc
mov
adc
repnz
test
popf
xor
or
jne
out
xor
cltd
mov
int3
pop
mov
adc
or
xchg
add
sub
push
dec
cmp
pop
adc
push
ds
add
sub
add
shrb
sti
push
aad
sbb
in
cmp
xchg
ret
sub
iret
or
test
xor
lods
hlt
fimull
popf
bound
lea
xchg
adc
pop
mov
aas
call
fsubs
aad
and
xchg
scas
divb
sub
and
cli
push
outsb
push
loope
xor
push
xchg
imul
adc
aad
sub
mov
mov
mov
cwtl
in
in
mov
inc
jae
xor
add
fwait
sti
out
dec
outsb
sbb
inc
lcall
ss
jle
cmp
xchg
inc
cltd
xchg
xor
ret
jno
dec
lcall
bound
xchg
inc
and
push
cmp
scas
fwait
into
daa
xchg
adc
test
daa
or
sti
xor
bnd
jge
fadds
imul
int
cmp
dec
sbb
sub
inc
in
xchg
jns
xchg
cmp
cmp
lock
and
pop
mov
and
stos
sub
mov
inc
scas
ja
popa
pop
inc
outsb
dec
call
jnp
fnstcw
xor
cmp
xchg
insb
inc
jg
and
cmp
inc
enter
cmp
jns
mov
insb
incl
repz
cmp
and
in
in
shlb
out
movsb
inc
and
and
mov
jle
mov
push
and
dec
ror
mov
out
and
lds
ret
xor
jno
sbb
pop
mov
lods
lret
jl
insl
lds
pop
pop
cmp
push
leave
xchg
test
xchg
pop
add
mov
mov
mov
rorb
mov
out
test
insl
clc
mov
nop
clc
lcall
jmp
popa
mov
xchg
push
loopne
jae
and
movsl
adc
sbb
lahf
shlb
arpl
sbb
scas
sbb
notb
pusha
gs
push
xchg
inc
cmp
inc
scas
fidivrl
jmp
xchg
out
jb
das
jae
jae
cmp
shl
or
test
cs
les
fbld
or
fidivs
and
lock
pushf
dec
mov
jnp
icebp
and
iret
movsl
fistpl
pop
pop
out
dec
rolb
push
lea
sbb
xchg
test
jo
lcall
or
ljmp
cltd
jl
sub
out
dec
sbb
clc
les
lods
dec
gs
int3
xor
test
int3
popa
jg
xlat
iret
push
in
cmp
dec
pushf
mov
push
pop
jp
cld
test
and
xor
mov
sub
mov
dec
xor
add
cmc
or
or
jb
imul
int
adc
fdivrl
out
scas
mov
inc
test
lock
sub
jne
scas
dec
sbb
push
jp
push
andb
mov
call
ds
adc
cmp
sub
mov
xor
adc
mov
cmc
jne
mov
insb
mov
mov
and
push
lods
stos
jl
clc
ret
jg
fisubrs
loop
ljmp
jmp
mov
lcall
push
xlat
jb
dec
test
mov
mulb
mov
aad
in
rcrb
inc
pop
add
dec
insb
inc
or
adc
mov
xchg
imul
lret
cmp
je
mov
nop
and
fdivl
push
xchg
out
scas
arpl
push
add
mov
pop
inc
test
xlat
ret
ja
adc
push
data16
insl
cltd
pop
and
xor
jmp
mov
cmc
outsb
add
fnstcw
or
sub
add
jo
fxch
loop
stos
adc
test
loop
inc
sbb
jo
lods
push
lret
dec
xor
leave
jnp
sbb
xchg
xor
or
push
mov
sbb
sbb
call
and
rcl
jno
gs
xor
fnstsw
jb
adc
aaa
unpckhps
adcb
call
xor
adc
lods
xchg
xchg
dec
shrl
or
dec
jmp
or
lret
pop
je
mov
lods
push
mov
fucomip
mov
pop
and
adc
cmp
nop
jne
lretw
ljmp
mov
cmpsl
out
inc
ljmp
lahf
out
mov
push
xchg
repnz
or
dec
es
and
inc
mov
stc
and
arpl
pop
cmp
cmpsb
mov
in
mov
aaa
aaa
cld
mov
mov
cmpsl
jecxz
lcall
notb
dec
popf
scas
or
sub
or
out
mov
rcr
rorb
iret
in
pop
inc
pushf
lods
rcl
and
jmp
xor
shll
jge
mov
jnp
jmp
pop
xchg
cmpb
add
stos
and
cli
jbe
inc
pop
sub
and
mov
daa
jb
cltd
fmull
xchg
inc
inc
sti
fcmovne
popf
xchg
rclb
dec
fwait
movsl
fcomi
xchg
adc
xchg
mov
pop
ret
sub
rcrb
imul
inc
jae
stos
pop
inc
test
pop
or
call
inc
shlb
dec
inc
or
push
inc
mov
ret
jb
xchg
pushf
cmp
pushf
aad
xorl
sbb
stos
ret
mov
mov
inc
shl
pop
add
data16
icebp
push
in
shlb
fstpl
add
hlt
mov
movsb
xchg
sbb
mov
xchg
orl
data16
pop
mov
ja
ljmp
mov
mov
or
fstl
aam
shl
add
inc
notl
xor
or
lret
pop
and
dec
adc
sub
push
fwait
xchg
std
xchg
pop
fnstcw
addb
or
ret
inc
es
mov
lahf
xchg
pop
pop
data16
jge
mov
xchg
into
adc
cld
ret
popf
mov
xlat
cmp
sub
mov
mov
lock
hlt
lcall
mov
enter
gs
inc
or
mov
jae
jo
sbb
ja
data16
ds
xlat
push
sbb
jp
push
sahf
xchg
jecxz
inc
mov
and
xchg
mov
inc
repz
aaa
add
shrl
mov
sbb
insl
sub
inc
dec
pop
icebp
lret
clc
out
jle
push
or
lods
cmpsl
mov
fcomp
push
push
adc
pop
imul
or
sti
fwait
mov
lods
push
jle
insb
mov
cmp
mov
mov
mov
dec
add
movsl
dec
add
mov
dec
push
loopne
out
push
or
scas
aad
and
test
es
push
push
xor
sbb
stc
lods
loop
and
xor
out
fstps
ds
adc
ljmp
repnz
enter
or
add
add
ljmp
es
jmp
loope
push
clc
fcoms
or
jp
add
daa
lret
movsl
jae
and
aad
adc
or
mov
sbb
inc
xchg
inc
movsb
rclb
popf
mov
xchg
cmpsl
push
js
xchg
pop
lret
repz
sub
lret
inc
ffree
add
add
pop
cli
fstpt
scas
leave
and
pop
xchg
lods
cmpsb
in
jle
pop
adc
sbb
test
pop
push
sub
ljmp
push
lcall
fcmove
addr16
outsb
cmc
xchg
sti
jle
cmp
lea
cs
out
cmpsl
pop
dec
cmp
mov
add
mov
mov
jbe
lahf
stc
dec
aad
and
cwtl
cmp
cld
sub
push
scas
pop
pop
gs
adc
inc
cs
dec
mov
mov
in
in
cmp
cltd
mov
dec
into
dec
scas
lea
sub
inc
sar
div
dec
sub
dec
imul
movaps
psubw
stos
in
pop
mov
inc
rorb
xor
into
iret
out
inc
and
mov
mov
fwait
in
js
outsl
fxch
shlb
sub
fwait
and
mov
and
bound
push
ret
shrl
cmp
mov
sahf
fst
xchg
dec
ss
mov
scas
push
sbb
in
or
aam
add
jo
jae
lods
ja
xor
test
push
test
call
loop
jns
or
jne
xor
mov
test
orb
addr16
sarb
std
icebp
or
pop
cmc
scas
xchg
call
adcb
loop
addr16
lret
dec
dec
loop
cmp
cmp
jno
leave
icebp
or
push
inc
addl
repnz
inc
loope
aad
ret
movsb
mov
in
shll
call
ja
pop
dec
push
mov
mov
sbb
fs
sahf
pop
cltd
xorb
sti
push
arpl
and
push
mov
or
inc
mov
xor
add
sbb
lds
mov
sbb
inc
bound
xor
mov
xchg
jp
sub
fs
or
insl
in
ficoml
lret
aas
movsl
in
add
or
xchg
insl
sbb
loop
pop
jmp
leave
dec
cld
mov
sub
popf
adc
mov
pop
int
sbb
mov
sub
push
rclb
ret
mov
push
sbb
ret
test
add
jge
pushf
lret
jno
mov
pop
ja
xor
mov
daa
add
bound
shlb
int
in
or
sbb
jmp
fisubrl
xchg
adc
push
add
icebp
test
dec
mov
xor
lods
testb
sbb
je
cltd
push
pop
imul
lock
or
les
fsub
into
stos
pusha
dec
rorl
push
mov
jg
fmulp
xchg
pop
repnz
pop
xlat
rorl
into
xchg
loopne
sub
mov
pop
sbb
mov
outsl
mov
das
mov
popf
subb
cmpsl
std
adc
sbb
xchg
pop
pusha
inc
outsl
sub
scas
inc
inc
cmp
fdivr
leave
mov
jp
pop
mov
jecxz
push
mov
mov
in
cltd
sbb
shll
shll
int
adcb
jo
cmpsb
xchg
or
pop
jo
jo
push
cmp
and
pop
jmp
pop
sub
adc
sahf
sbb
dec
dec
push
xchg
mov
das
inc
or
xor
mov
aad
test
stc
inc
and
loopne
mov
sahf
xorb
inc
push
jmp
in
or
dec
aad
es
lds
mov
jg
in
test
sti
add
sbb
push
mull
and
aam
loope
test
lds
pop
pop
add
jb
xlat
outsb
cmp
push
push
xchg
aam
sbb
jl
adcl
insb
sub
aam
sbb
enter
pop
jne
push
incl
xor
add
mov
jbe
add
ss
sub
sbbl
or
push
test
mov
push
jecxz
xchg
fsubrl
orl
stc
sbb
pop
mov
shll
mov
or
jge
inc
add
mov
aaa
shl
pushf
xor
fistpl
rorb
in
pop
jg
pop
pop
add
test
movb
jo
fisttpll
aam
dec
fldt
test
cmp
sub
imul
adc
adc
mov
pop
sti
repnz
aad
fs
lods
xor
int
fucomi
rclb
arpl
lods
jne
cwtl
in
enter
leave
out
hlt
bound
mov
test
or
xchg
push
xor
sbb
push
dec
call
push
js
xchg
jbe
xor
imul
cwtl
add
in
pop
jbe
sub
xor
fldt
pop
push
fwait
jl
push
mov
jne
adc
notl
insb
in
movsl
popf
js
in
popf
sbb
inc
mov
roll
xchg
sub
out
loope
mov
in
xor
jnp
aad
pop
ljmp
in
dec
xchg
push
mov
js
xor
sbb
xchg
fs
aas
fisttpll
sub
push
fistps
daa
std
enter
inc
ret
xor
call
push
xchg
dec
mov
pop
cmp
sbb
sub
push
jns
scas
sbb
mov
imul
dec
divb
mov
stos
mov
cmp
scas
insl
xchg
out
fmull
sub
iret
in
adc
movsl
shr
mov
mov
cli
lods
jae
sbb
aad
fdivr
jmp
mov
pop
xor
std
mov
push
pop
jb
emms
ja
aas
mov
ljmp
adc
enter
mov
ret
sti
mov
test
adc
pusha
es
add
sti
jb
outsl
jne
mov
jo
fmuls
inc
sbb
lahf
fucomip
cld
rcrb
pop
arpl
jmp
pop
aam
mov
aam
fldl
and
xor
lret
adc
cli
ljmp
pop
mull
or
sbbl
jnp
xchg
push
cs
adc
xchg
in
mov
mov
roll
ret
cwtl
popf
notb
pop
rolb
mov
push
insl
jae
int3
mov
cld
dec
sbb
jnp
add
sub
adc
push
and
xchg
or
icebp
lds
repnz
mov
dec
lea
mov
mov
outsl
lret
insb
cmp
pusha
addl
or
pop
and
popf
js
push
push
mov
jmp
mov
aam
mov
adc
sub
add
mov
xor
lret
shlb
in
inc
lods
lahf
push
dec
movb
xor
or
push
cmc
xchg
pushf
xor
mov
shr
sub
mov
lods
jo
sub
mov
pop
inc
mov
cmp
adc
ja
jle
inc
ljmp
pop
push
mov
push
in
and
mov
or
mov
outsl
add
and
add
or
mov
inc
enter
mov
push
popa
xor
rcr
das
push
jg
subl
iret
stos
aam
sub
pusha
mov
jge
lret
hlt
loope
push
fiaddl
add
testl
pop
mov
jo
cmp
jp
sbb
adc
call
or
inc
inc
inc
pushf
sub
inc
pusha
cmp
mov
sub
mov
jmp
nop
arpl
in
pop
adc
lods
repnz
pop
jae
push
sbbl
in
and
idivb
cltd
shll
ljmp
mov
mov
insb
arpl
in
cmp
repnz
fidivrs
shrl
xchg
xchg
aaa
aaa
mov
je
cwtl
flds
xlat
lods
inc
js
cmp
lcall
and
pushf
push
sub
adc
lcall
addr16
sub
xchg
sti
in
or
xchg
dec
insl
fidivs
ret
pop
mov
or
pushf
add
test
setno
popf
ja
cmp
jmp
popf
xor
dec
stos
das
mov
mov
imul
adc
fiadds
xor
fistpll
icebp
jae
cld
int3
loop
sbb
adc
cmpsl
xchg
add
in
pop
aas
scas
lea
adc
dec
cmpsl
adc
out
cmc
mov
sbb
mov
rol
inc
adc
subb
mov
rol
and
pop
dec
sub
test
pop
outsb
testb
adc
rcrb
xchg
inc
xchg
aaa
and
js
fsubr
xchg
adc
pop
inc
in
jns
pop
mov
into
cmpsb
or
mov
fs
fcoms
add
mov
inc
call
mov
inc
push
mov
dec
jns
sub
or
js
add
xchg
pop
inc
and
inc
push
rep
imul
push
pop
xlat
or
mov
lahf
test
bound
inc
in
aad
int3
cmpsl
mov
clc
aad
xor
lea
xor
dec
arpl
lret
lock
or
and
dec
stc
cmp
mov
in
xchg
ss
lahf
cmpsb
xchg
popf
inc
sahf
fsubp
xor
sbb
dec
pop
mov
int3
aad
cmp
mov
mov
iret
and
mov
and
dec
int3
add
xchg
jg
inc
popa
and
jns
lods
pop
add
hlt
push
aam
clc
pop
mov
out
pop
pushf
pop
adc
dec
pop
shlb
lock
push
or
xchg
leave
adc
dec
dec
imul
jbe
fwait
mov
test
stc
lods
xchg
xchg
xor
pop
or
add
inc
lods
cmp
xchg
mov
cmp
repnz
mov
sbbl
add
jecxz
pop
dec
jns
mov
sub
fcoms
xor
ljmp
sbb
adc
inc
pop
mov
mov
inc
xor
je
add
jbe
inc
pusha
and
aad
gs
push
ja
ljmp
cmp
das
sub
fsub
mov
pop
add
cmpsl
repnz
push
jne
iret
arpl
clc
inc
shrl
cmp
mov
xlat
adc
sti
scas
aaa
dec
aaa
in
mov
dec
shrb
mov
mov
pushf
dec
sub
jg
idivl
cmp
xchg
loop
inc
sbbl
cmc
xchg
stc
dec
and
adc
sub
ret
inc
out
xor
adc
cmp
and
jb
inc
xor
hlt
push
fucomp
enter
cmpsl
dec
loopne
idiv
jns
add
mov
xor
popa
push
mov
icebp
outsl
jo
insb
push
repnz
jecxz
dec
jl
dec
shlb
jb
icebp
xchg
inc
adc
not
je
push
pop
jl
xor
or
jle
into
mov
out
mov
test
dec
enter
into
out
gs
mov
nop
mov
dec
mov
cmp
lods
ja
fldcw
subb
xor
in
cmp
loop
stc
les
sbb
incl
test
in
in
mov
fxch
and
pop
jb
in
xchg
jne
sahf
pop
out
push
lds
cltd
imull
xchg
lret
les
ret
xorl
jo
sbb
repnz
shl
or
pushf
xchg
call
jo
pop
decb
scas
and
movsl
lcall
jae
adc
jle
fmuls
ret
rol
shr
pushf
xlat
mov
jg
jecxz
adc
inc
pop
lcall
inc
sahf
push
aad
cld
lcall
loope
cltd
sub
inc
mov
fs
add
cmc
hlt
pop
pop
push
jnp
sub
lret
cmp
xor
cltd
add
je
cmpsl
mov
aad
jle
push
loope
outsb
stos
lods
mov
mov
mov
cmpl
push
rol
lcall
out
xchg
xchg
pop
int3
cmpsl
xor
scas
mov
xlat
xchg
pop
into
mov
cld
imul
out
xchg
insl
dec
pop
fpatan
hlt
jle
daa
push
repz
xor
mov
dec
ret
idivb
adc
jb
and
jnp
dec
mov
inc
mov
stos
cmp
leave
popf
mov
mov
into
push
jg
pop
jno
mov
insb
push
outsl
dec
into
lock
cmp
out
bound
add
outsl
testl
aam
mov
lock
shlb
and
jb
int
mov
push
mov
loope
or
xlat
inc
xlat
sub
xchg
dec
ss
pop
cmpsl
sub
fisttpll
aas
in
jl
call
ret
out
movsl
stc
stos
cmp
add
loope
aas
jo
sbb
xchg
mov
xor
mov
pop
fcoml
mov
fistpll
add
fmuls
das
pop
inc
aam
add
in
popa
out
mov
fxch
add
jp
dec
call
bound
push
pushl
test
xchg
hlt
sarl
or
mov
icebp
push
push
outsl
in
mov
stc
gs
fnstenv
arpl
add
dec
inc
mov
rorb
xchg
loop
stos
xchg
stos
div
mov
negb
ret
in
repz
xchg
cwtl
mov
xchg
out
or
mov
test
shll
fistpll
shrb
mov
xchg
test
movsl
or
cmp
inc
mov
enter
push
xchg
add
mov
or
push
pop
popa
push
outsl
fsubl
std
loop
add
jnp
push
lret
mov
jno
jnp
shrl
test
adc
pop
fildll
cmp
out
je
mov
fs
in
sbb
aad
out
mov
mov
inc
inc
cli
jg
scas
xchg
push
lret
test
or
faddp
imull
sbb
xchg
jmp
insb
lcall
and
add
mov
scas
inc
ficoml
cwtl
and
mov
mov
data16
push
sti
push
or
xor
push
xorb
sub
inc
fisubs
sbb
movsl
adc
idiv
and
out
mov
in
adc
push
fcmovu
int3
outsb
sbb
push
mov
jmp
movl
enter
xchg
push
sti
into
mov
int
stc
jmp
add
setbe
loopne
or
jnp
cmpsl
lea
ljmp
pop
cmc
cmp
push
add
fwait
cmc
ret
stos
sbb
out
pop
jge
push
fstl
fmul
pop
and
adc
icebp
xchg
push
int3
loopne
adc
stos
and
mov
enter
movsl
mov
fsubs
insl
push
mov
repz
adc
das
sub
xor
mov
dec
fcmovne
imul
xor
mov
jno
jo
mov
push
stos
adc
lahf
aam
pop
xchg
or
pop
incl
mov
sti
xchg
int
loope
jo
xchg
loop
adc
push
inc
xchg
lahf
push
add
cwtl
add
cmp
mov
mov
and
jp
popa
lret
xor
adc
adc
pop
shl
popa
adc
inc
cwtl
jge
scas
daa
add
mov
jnp
push
push
test
xor
test
pop
fwait
std
mov
cmp
cmpsl
pusha
cmovge
add
push
xchg
cmp
movsb
enter
lret
adc
cwtl
mov
or
or
sbb
ret
movsl
push
lret
js
cmpsb
sbb
in
inc
jmp
scas
cli
in
xor
lahf
adc
cwtl
fcompl
pop
pop
aad
dec
or
pop
push
std
dec
repz
test
mov
out
and
adc
or
shrb
cmp
cmpsb
in
sahf
or
dec
out
sbb
jns
cs
adc
nop
inc
daa
orb
lcall
xchg
div
imul
rclb
lcall
sub
mov
xlat
xchg
dec
les
out
jnp
pop
arpl
mov
ljmp
cwtl
mov
sub
push
fisttpll
mov
push
inc
daa
stc
sub
in
out
decb
push
repnz
sti
xor
pop
jecxz
outsl
add
mov
xchg
data16
sti
jl
loop
inc
test
call
adc
sbb
inc
mov
and
mov
loope
inc
les
lahf
xchg
insb
jns
inc
pop
gs
push
out
xchg
shrb
fisubrs
bound
rclb
out
inc
and
insl
jg
adc
jecxz
shl
cmp
lods
xchg
pop
repnz
stos
sub
xchg
xchg
sbb
cmpsl
jns
pop
fnsave
push
pusha
xchg
shl
js
aas
pop
std
mov
xchg
inc
test
mov
add
mov
aas
pop
mov
popa
out
daa
cmc
cmp
scas
popf
out
dec
push
push
inc
add
pop
addl
inc
push
mov
push
std
icebp
lcall
adc
les
adc
xchg
popf
dec
pop
adc
push
mov
push
in
lds
icebp
jle
cmp
mul
adc
mov
mov
je
dec
sub
and
xor
lahf
ljmp
sti
pop
sbb
inc
pop
xchg
sub
xor
pop
mov
out
push
lret
jb
push
add
push
fisttps
arpl
mov
add
cmp
fistpl
imul
cli
fwait
insb
repz
aas
mov
add
mov
jno
ds
xor
rorl
adc
lods
jmp
addr16
subl
sub
out
and
pop
pop
pop
imull
gs
popa
pop
cltd
add
cmpsl
jbe
mov
sbb
pop
dec
xor
into
inc
in
int
leave
pop
js
sbb
jl
rcrb
or
cmpsb
add
cmpsb
jle
jnp
or
test
mov
push
dec
movb
shrb
cltd
jecxz
mov
mov
push
sbb
loop
and
push
pop
popf
xchg
jmp
mov
or
fnstsw
out
add
shl
inc
lds
enter
adc
insb
fsubrl
mov
stos
xchg
ret
mov
mov
dec
push
mov
pop
outsb
in
cmpsb
scas
push
push
aam
fsts
ret
aaa
xor
sub
fs
pop
int3
xor
mov
sub
fwait
imull
push
pop
dec
pop
inc
outsb
adc
fstl
imul
push
arpl
and
sbb
fidivrs
xchg
xchg
in
dec
scas
pop
push
and
cs
mov
xor
inc
xor
add
sbb
xchg
sub
jge
xor
ss
in
test
xchg
pusha
mov
inc
push
mov
jo
fnstcw
lcall
sarb
sbb
jo
adc
dec
sbb
pop
sbb
mov
stos
jb
ret
xchg
add
dec
mov
push
push
mov
ja
sub
cmpsb
lret
or
pop
sti
pop
xor
enter
enter
dec
and
fnsave
out
pop
movsl
sbb
and
ja
fldenv
mov
jl
into
sub
imul
inc
ret
mov
mov
push
sbb
add
push
ss
mov
pusha
mov
xchg
inc
sbb
xor
lret
xchg
cmp
jg
sub
or
fwait
push
push
data16
mov
adc
insl
fsubrs
add
fs
shlb
sub
cmp
inc
sub
cmp
push
pop
aas
iret
popa
adc
mov
push
mov
add
mov
addl
mov
cmp
arpl
sub
xchg
sub
fwait
mov
jo
int3
push
js
mov
aas
xor
es
xchg
iret
dec
scas
int3
xchg
js
add
pop
jo
pop
inc
adc
xchg
or
pop
sti
std
xchg
sub
decb
fistps
into
popf
or
fcompl
mov
cltd
sub
in
push
insb
jg
xchg
add
push
xchg
iret
popa
test
jae
xchg
aaa
ss
pop
lret
xlat
cmp
push
xlat
inc
adc
fldcw
lret
add
jno
add
push
xchg
stc
xchg
out
movsl
mov
xchg
cmpps
cmp
adc
fwait
mov
jl
xchg
stos
fwait
sbb
mov
mov
xor
push
and
xchg
iret
sub
push
lods
int3
cmpsb
cmp
aam
mov
xor
loop
sbb
sub
fcompl
add
negl
enter
test
lock
into
cmpsl
or
mov
popf
adc
orb
xor
pop
cwtl
cmp
cmp
aam
xchg
mov
andb
or
sbb
stc
insb
add
xchg
loop
pop
out
or
xchg
sbb
popa
lds
dec
dec
movsl
pusha
loope
push
mov
cmp
pop
or
mov
ljmp
mov
cld
aas
sbb
xor
daa
xor
lds
sti
imul
cltd
loope
repz
adc
psubusb
mov
mov
fnstsw
pop
mov
dec
pop
sarl
push
jnp
cli
mov
pop
lock
push
ja
jmp
pop
test
cmpb
scas
push
int3
add
pushf
mov
imul
sbb
movsb
add
cmp
cmp
ret
aam
mov
dec
inc
cmp
mov
adc
pop
fstps
sbb
popl
push
movsl
mov
xor
mov
xchg
sub
fsub
dec
imul
pop
imul
jne
adc
mov
sbb
gs
and
add
inc
adc
fildl
lock
sub
adc
cmp
cwtl
inc
adcb
repz
push
xchg
lods
mov
jl
mov
push
mov
mov
pop
jnp
jno
adc
xchg
unpcklps
aam
cmp
stc
rolb
and
jae
pop
pop
xchg
adc
jb
mov
add
xchg
jo
xor
fiaddl
insb
jl
fs
negl
sub
outsb
out
jle
pop
adc
pop
push
loope
insl
js
rol
cmp
and
xor
or
mov
add
scas
shll
cmp
dec
push
push
addl
inc
aad
bound
stos
jb
in
js
les
lock
shll
icebp
lds
decl
adc
jge
push
sbb
jnp
out
imul
or
mov
mov
mov
jg
cli
inc
lea
or
dec
xchg
jl
lcall
pop
push
push
mov
dec
adc
add
dec
jecxz
cs
pop
mull
fwait
pushf
push
test
cwtl
rcrb
aam
mov
outsl
lahf
pop
xchg
jb
das
mov
push
icebp
dec
es
or
xor
mov
push
jbe
pop
pop
sub
inc
pop
loope
in
ret
inc
std
call
jmp
movsb
mov
mov
add
mov
mov
sub
push
cmp
call
xchg
cltd
mov
mov
and
mov
addr16
or
addr16
mov
sub
lea
or
mov
mov
imul
cmp
bound
stos
adcl
in
mov
mov
inc
scas
pop
push
mov
jg
jns
outsl
adc
fsub
inc
sti
xchg
mov
inc
pop
pop
shlb
inc
mov
pop
fs
shlb
jmp
cmpl
arpl
mov
ret
sbb
fildl
dec
xor
mov
xchg
adc
in
das
outsl
lods
cwtl
fisttpll
loopne
fwait
push
lcall
out
cmpsb
sub
cmp
xchg
jbe
mov
in
add
jno
adc
and
call
divb
sub
dec
sub
pop
xchg
insl
sbb
jne
push
push
loop
dec
out
jns
jno
jbe
pushf
mov
mov
test
or
sub
shl
inc
or
mov
movsb
dec
flds
sbb
mov
ljmp
ss
and
inc
ja
fiaddl
and
push
mov
cmc
icebp
rorb
sbb
out
inc
call
sbb
cmc
das
rcrl
adcl
add
or
mov
leave
and
sbb
mov
cmp
mov
mov
dec
xor
aad
mov
xor
xor
stc
cmpsb
lock
jno
inc
mov
adc
fwait
or
jp
je
push
sbb
adc
pop
inc
xchg
and
xchg
pop
dec
cmpsl
inc
mov
sub
jno
cltd
clc
fbld
arpl
jbe
hlt
lods
and
popl
dec
clc
xchg
stos
xor
ret
cmpsl
mov
push
jno
mov
cmp
mov
add
push
cmp
xchg
push
mov
cs
xchg
stc
mov
movsl
test
test
rcrl
pushf
scas
xor
add
inc
hlt
sub
loope
shlb
fdivrs
mov
repnz
insb
sbb
jo
jo
lahf
stc
mov
cmp
or
nop
dec
xchg
pop
int
scas
jbe
aad
and
push
mov
dec
push
out
jmp
xchg
jb
mov
inc
mov
fidivrs
std
inc
outsl
inc
mov
fsubl
je
dec
out
pop
cli
cmp
inc
lods
out
cmc
sahf
push
fs
sub
sub
adc
dec
xchg
sbb
aad
outsl
enter
movb
outsl
leave
popa
int
enter
test
mov
mov
cmp
fwait
mov
shl
scas
add
or
add
dec
test
movsb
icebp
loope
mov
stos
pop
scas
cmp
loopne
cwtl
cwtl
pop
test
subb
mov
outsb
loopne
sub
or
mov
call
jns
xchg
aas
mov
pop
push
ds
rorl
jno
xorb
cmp
arpl
fsubs
iret
daa
mov
add
icebp
push
mov
add
popa
in
adc
pop
repnz
mov
inc
test
add
psllq
aas
das
add
inc
sbb
leave
mov
das
xchg
push
pop
xchg
and
ja
pop
cmpsl
inc
mov
addb
xor
sbb
pop
mov
test
adc
pop
jb
repz
and
and
mov
jne
cs
in
popf
mov
jne
insl
mov
pop
or
push
pop
mov
imul
icebp
stos
add
insl
jge
dec
xor
std
add
testb
mov
pop
xor
mov
xchg
int
mov
mov
hlt
or
add
xor
or
or
ljmp
adc
imul
movsb
push
xor
adc
shr
loopne
iret
popa
inc
aad
jg
out
sub
testl
or
jbe
lds
xchg
xlat
xchg
faddl
rorb
jmp
lret
pop
push
mov
push
mov
and
cmp
arpl
push
outsb
or
add
mov
push
gs
lahf
sbb
fldenv
in
lahf
ret
out
bound
pusha
cmp
cmp
adc
cmp
rorb
movsb
jg
cmp
add
add
shl
das
lahf
jmp
cmp
mov
in
mov
push
dec
divl
sbb
scas
stos
fnstenv
pop
jp
fisttpl
pushf
outsl
jns
jae
sub
aad
xorl
scas
iret
repz
add
push
sbb
es
mov
add
xchg
jle
sbb
gs
in
dec
sarb
xor
mov
mov
and
adc
mov
in
aaa
repz
into
fldenvs
popf
or
add
cmpsb
jb
jo
add
and
or
cmp
popf
and
in
in
jge
addr16
xchg
push
mov
les
mov
sub
rclb
or
jle
pop
jno
imul
sub
imul
shll
int
jl
or
mul
call
jecxz
adc
mov
jnp
sbb
aad
sub
mov
mov
cmp
movb
bound
ss
mov
insl
mov
push
mov
mov
sub
data16
and
out
movsl
lds
gs
pop
push
cmp
hlt
sbb
in
xchg
cmp
add
push
mov
jnp
lret
adcb
cmpsb
or
jnp
subl
imul
xchg
enter
flds
xor
or
push
faddl
xchg
lahf
and
sbb
mov
xchg
jnp
pop
int3
jbe
loopne
repz
xchg
lds
cld
cs
mov
sbb
jnp
roll
push
adc
cmp
repnz
jle
pop
cmp
lcall
xchg
into
push
mov
xchg
xlat
imul
xchg
fstpt
sbbl
sub
aad
in
cltd
inc
push
out
push
push
ds
inc
inc
test
sub
mov
pusha
add
addr16
pop
insb
aaa
or
movsl
pop
pop
shrl
push
sbb
ret
insb
pop
cli
and
test
sub
push
lods
xchg
lods
pop
loop
fildll
imul
dec
jle
lds
daa
mov
test
movsl
ret
mov
jecxz
pop
mov
pop
xchg
mov
loop
sub
sub
fistl
sub
xchg
loope
test
mov
inc
lahf
push
mov
bound
add
lahf
xor
or
je
cmpb
dec
add
into
dec
push
in
xor
stos
mov
push
mov
test
push
lahf
test
aas
jnp
outsb
xor
push
and
xor
jne
js
jnp
imul
jns
sub
pop
and
cmp
push
adc
mov
stos
sar
insb
sub
add
stc
push
fistpl
lcall
push
ret
mov
xor
lea
pushf
cmc
adc
in
sarb
mov
hlt
bound
mov
out
loopne
pop
es
cmpsb
dec
sbb
ljmp
push
aas
pop
icebp
pop
inc
dec
mov
and
add
dec
pop
out
cmp
dec
push
mov
jmp
aas
das
pop
pushf
pop
and
xchg
les
push
ds
pop
lea
ficompl
sub
fldenv
jg
dec
push
mov
out
cmp
and
and
xchg
mov
push
jecxz
mov
xor
pop
xchg
xchg
xchg
lcall
ret
pop
and
jecxz
jle
mov
lods
jmp
mov
daa
jmp
cld
gs
inc
push
mov
aam
lcall
pop
xor
jecxz
sbb
adc
in
scas
xchg
push
mov
in
mov
loope
cld
ljmp
or
pop
je
loopne
pop
xchg
dec
sbb
xchg
aad
lahf
mov
mov
mov
dec
in
sti
or
lcall
adc
out
cmp
cmp
gs
dec
push
ds
inc
hlt
lea
rcll
mov
loope
cmp
loope
idivl
ss
sub
mov
add
fs
xor
in
pop
push
loopne
mov
adc
addr16
aam
faddl
adc
add
lahf
and
out
imul
jecxz,pn
cmpsb
sti
mov
cmp
push
repz
mov
push
scas
ds
call
xchg
fidivrl
lds
push
int
jae
cli
testl
call
add
xchg
xor
and
sbb
cmp
jns
aaa
sahf
out
push
xor
xor
fldl
outsl
repz
ficoms
rorl
mov
lahf
cmpsl
push
cmp
nop
cs
ds
mov
sbb
mov
mov
std
cli
rorb
push
roll
dec
inc
sarb
push
mov
or
mov
js
mov
out
dec
mov
out
shll
adc
popl
shl
mov
lret
add
ja
es
in
or
pop
xor
xor
cmp
lret
fcoms
xorb
mov
stos
and
insb
int
sub
enter
cmp
pusha
jae
xchg
inc
sbb
push
dec
mov
jmp
sbb
dec
fcoml
ror
cli
pop
xchg
xor
lahf
sbb
dec
xchg
jle
xchg
mov
jno
cli
lret
fidivrl
shlb
mov
jp
movsb
sbb
iret
mov
cmp
icebp
loopne
gs
pusha
dec
pop
testl
cmc
inc
inc
or
stc
push
sub
cs
sub
in
int3
or
das
pushf
hlt
inc
cmp
xor
sub
jecxz
rol
adc
adc
movsl
nop
out
mov
and
pusha
mov
pop
or
push
and
out
outsl
lock
lock
es
psadbw
cmovp
in
add
push
xchg
mov
in
fs
popa
sbb
pop
dec
lds
js
mov
xor
push
jnp
jle
bound
jmp
call
mov
lret
nop
pop
int3
fisubl
fs
loopne
stc
testb
push
push
fs
cs
fadds
test
jle
pop
inc
loopne
push
xchg
shrb
pop
push
cmpsl
shlb
idiv
sahf
push
xor
mov
in
jb
and
pop
adc
rorb
cmp
add
jle
mov
dec
shrl
imul
ficomps
clc
xor
imul
jmp
cmpsl
mov
cmp
pop
jmp
or
push
push
xchg
fldt
movsl
and
dec
movsb
push
sbb
dec
stc
lods
out
cmp
mov
cwtl
notb
xor
push
xor
bndstx
outsl
pop
pop
fisubrl
xor
mov
sbb
insb
push
or
dec
sbb
std
adc
and
lds
sub
xchg
mov
xorb
pop
dec
push
cmp
mov
test
fsubr
call
jb
lret
fisttpl
std
std
dec
inc
repnz
mov
push
pop
xor
dec
jle
or
arpl
mov
jecxz
or
nop
hlt
popa
pusha
sbb
lret
imul
mov
in
mov
mov
pop
jp
movb
loop
jbe
cwtl
jo
test
sarb
add
psubsb
lods
lea
fwait
iret
roll
dec
icebp
sbb
call
add
push
lcall
jne
popa
mov
mov
mov
in
adc
in
cmp
jp
insl
cld
sbb
scas
shl
rorb
mov
cmpsl
cmp
aas
arpl
imul
fistl
ljmp
pop
sub
jnp
xor
ret
lret
mov
adc
cmp
dec
rcl
xchg
lcall
fisttpl
adc
xor
adc
mov
nop
pop
pop
movsb
leave
mov
xchg
mov
jae
test
mov
mov
das
popl
inc
int
movsl
fcoml
push
jle
loopne
pop
sub
sbb
clc
adc
sarb
sub
call
rol
aad
flds
xchg
mov
push
adc
sub
add
pop
pop
stc
in
xor
cli
adc
popa
fisttpl
rclb
or
jae
out
and
ret
rorb
push
arpl
aaa
sti
xor
outsb
int3
lret
mov
mov
mov
adc
fildl
daa
mov
mov
hlt
cmp
xor
lret
jnp
and
out
sahf
mov
cmpsb
mov
fdivs
orl
das
mov
xchg
fbstp
stos
xchg
arpl
sbb
push
sub
jne
and
fldt
adc
mov
pop
jle
stos
fnstsw
loop
pop
call
pop
enter
or
incb
or
jae
out
les
push
or
sbb
and
iret
inc
push
lahf
sub
bound
push
add
xchg
addr16
pop
jb
dec
sahf
cli
pusha
aam
orb
call
lods
andl
pop
xchg
mov
xchg
in
add
dec
sub
mov
jo
pop
sub
lods
sbb
and
pop
je
aaa
pop
repnz
lods
loope
mov
mov
sbbl
or
add
mov
test
adcb
nop
out
or
lcall
xchg
andb
fists
lret
addr16
inc
shrl
in
ss
loope
shl
xchg
leave
fildl
and
rcpps
push
test
addr16
pop
and
lock
test
scas
rorl
push
loope
cmp
jmp
push
aam
orl
out
jecxz
pop
cmp
je
rcll
jmp
push
or
pusha
loope
sbb
sbbb
push
fdivrl
add
call
test
daa
sbb
popa
adc
push
cli
or
int
popf
ret
jae
sub
mov
adc
push
daa
pop
fwait
mov
inc
sbb
int3
iret
clc
mov
cmpsl
test
nop
mov
icebp
jnp
cmp
jbe
aas
cmp
lret
cmc
aad
popa
adc
adcb
xor
jne
inc
cld
les
sbb
xchg
sbb
mov
daa
xor
pop
push
pop
jne
xchg
inc
jae
xor
push
mov
and
icebp
xchg
push
mov
add
sub
cmp
mov
arpl
pop
add
fdivl
jnp
cmp
xor
lea
aaa
jae
fstpl
add
loopne
lahf
shrb
mov
xchg
jb
jne
pop
int3
push
pop
xchg
lea
into
addb
test
data16
js
sub
aam
mov
jae
test
add
lcall
push
insl
out
aas
movl
idivb
sub
mov
ffree
cmp
dec
jg
mov
aad
pop
out
or
cmp
and
repz
in
inc
dec
xor
subl
jl
out
stos
negl
pop
xor
xchg
jmp
outsl
insb
ffree
scas
es
sub
mov
cmpsb
pusha
adc
iret
add
jnp
aam
sbb
out
aas
insw
sahf
dec
movsb
lods
pop
popa
sbb
arpl
lret
mov
or
jp
andl
mov
and
sub
cmpsb
mov
pop
stos
pop
sbb
enter
sub
inc
loope
jle
jl
popa
xor
idivl
rcrb
in
int3
jl
adc
cmc
sti
outsb
xchg
mov
mov
mov
std
sbb
fwait
cld
mov
fsub
lret
lret
out
test
stos
stos
sub
les
add
inc
cmp
in
cld
and
pop
cld
add
insl
or
ds
and
or
add
jmp
xchg
in
fcmovnbe
jne
push
adc
push
inc
clc
jg
in
ja
imul
test
adc
insl
cwtl
or
jb
sub
clc
xor
pop
aaa
push
mov
xchg
adcb
fsubrs
mov
fsubrs
dec
cmp
jne
mov
and
dec
jae
mov
scas
mov
icebp
inc
sbb
mov
sub
std
xchg
pusha
fisubrs
shll
and
pop
push
movsb
sub
jb
sbb
es
cltd
into
enter
add
loopne
rol
adc
or
mov
sbb
push
inc
fnsave
cld
in
subb
add
nop
leave
pop
jns
lock
add
pop
pop
jb
ds
rclb
decb
dec
andl
movsl
in
sub
or
outsl
cld
test
icebp
mov
jno
jmp
fwait
cmp
mov
lahf
push
sbb
notl
xorl
fistpl
and
add
mov
mov
sahf
call
imul
inc
cmovno
das
cld
test
cld
dec
and
out
adc
ret
mov
inc
ficompl
mov
popa
outsl
and
stos
sub
enter
leave
cmp
pop
fsubrs
cmpsl
in
subb
push
mov
inc
adc
pop
ret
xor
push
xchg
mov
lcall
lcall
pop
jbe
jg
xchg
mov
and
mov
insl
sbb
add
or
cmp
popa
mov
popf
pop
mov
testb
daa
stc
lret
add
repz
ret
shll
stc
gs
jg
les
mov
popa
dec
adc
dec
mov
aam
sbb
inc
out
mov
mov
mov
mov
adc
mov
insb
mov
xchg
or
inc
and
add
aad
ja
lcall
mov
fldt
scas
mov
dec
out
ret
pushw
push
push
leave
mov
jg
push
mov
mov
sbb
adc
lret
incb
and
inc
add
test
mov
iret
cli
lret
lea
movsl
jnp
inc
iret
stos
sub
mov
in
popf
rcrl
jns
imul
les
cli
pop
mov
movsl
cmp
dec
subl
gs
jne
scas
dec
pushf
jmp
cwtl
mov
lea
sub
insb
push
cmpsl
or
cmpsb
mov
inc
jae
loope
jge
jno
cmp
mov
xchg
xor
mov
fbld
daa
push
or
jbe
mov
pop
mov
int3
xor
hlt
pop
insl
loopne
fdivrs
jmp
cwtl
idivb
pop
shrb
adc
push
lods
push
mov
cltd
add
les
loop
add
pop
and
lods
pusha
lods
mov
mov
shrb
repz
jecxz
das
mov
mov
adc
mov
repz
call
data16
sti
mov
ror
and
cli
mov
sbbl
dec
ret
or
cmp
cmp
xor
jp
add
mov
stos
pop
and
je
clc
mov
xor
inc
aaa
test
push
ret
jle
push
and
cmpsl
pop
aaa
aas
sbb
leave
xchg
mov
jecxz
fcomps
mov
adc
lahf
mov
movsl
jmp
sbb
xchg
call
iret
jo
lods
push
gs
xorl
xor
or
negl
sbb
pop
pop
pop
sarl
les
cmpsb
sbb
sbb
fildl
dec
in
mov
cwtd
iret
mov
gs
lcall
jno
xchg
cli
cmpsb
mov
jo
sti
pop
push
xchg
mov
add
pop
lret
xor
repnz
repz
mov
adc
mov
shlb
repz
xchg
cmp
jns
cmpsb
nop
inc
xchg
mov
aas
push
pop
cs
jle
dec
in
aad
or
or
jp
and
dec
sbb
cmp
push
add
repz
repnz
sub
xor
inc
sahf
int3
stc
scas
mov
sub
in
gs
leave
add
pop
mov
sbb
enter
and
gs
or
bound
adc
jmp
and
jg
mov
lds
shlb
hlt
out
or
insb
outsl
jmp
out
cli
jno
cmp
dec
mov
imul
jae
call
xchg
dec
mov
stc
xchg
movsl
scas
dec
push
mov
cmp
pop
and
dec
push
jb
stc
sbbl
scas
xor
dec
jbe
or
xor
xchg
pop
adc
movsb
loopne
and
in
cmpsb
test
cmp
pop
inc
inc
fidivrl
rolb
xchg
push
push
mov
sub
outsb
ret
shr
and
test
je
and
and
pop
aam
cld
mov
ljmp
js
jne
add
les
ret
outsw
cli
dec
movl
clc
popf
cli
out
lahf
xchg
fucomi
pop
testl
lcall
sahf
jo
aaa
jmp
cmpsb
xchg
dec
ds
fisubrl
or
or
ds
stos
mov
fldenv
sub
sub
sub
cltd
ret
sbb
push
mov
mov
xchg
in
cmp
push
cli
clc
mov
outsb
stos
subl
dec
int
insl
and
mov
in
pop
jno
xchg
sub
movsl
inc
jno
push
mov
and
mov
iret
les
test
rolb
adc
push
sarb
sbb
loopne
xchg
sub
push
out
cmp
pop
fisubl
xchg
mov
mov
xchg
xchg
mov
or
xchg
sbb
in
jg
scas
rorl
jb
mov
sbb
sub
xchg
cli
imul
and
movsl
popf
push
adc
xor
js
xchg
add
dec
cmc
pop
mov
lcall
mov
gs
mov
mov
in
or
pop
flds
jne
adc
cmp
inc
adc
or
xor
in
xchg
fldl
add
dec
cld
into
rolb
stos
adc
fucomp
divb
jmp
push
ss
sbb
xlat
push
cmp
lods
addr16
std
mov
insb
xchg
xor
shrl
and
pop
jno
inc
push
push
mov
fldl
mov
mov
in
sbb
jecxz
adc
iret
and
xor
and
xchg
cmpsl
pop
int
mov
add
push
or
popf
push
mov
inc
mov
mov
repz
adc
int
ret
jbe
int3
xor
imul
push
hlt
in
dec
iret
add
ljmp
lods
sar
mov
stc
adc
enter
es
sbb
loopne
cltd
sub
adc
dec
aad
das
adc
mov
mov
fsub
or
fdiv
lea
cmp
arpl
dec
test
int
repnz
shr
jl
and
push
fwait
popa
sahf
inc
lds
cmp
push
fisttpl
cmp
jae
mov
pop
xchg
mov
imul
aas
push
mov
jge
icebp
sub
cmp
and
push
icebp
outsb
mov
aad
push
loope
adc
pop
ds
add
not
fildll
enter
jmp
aam
and
or
cli
jne
pusha
mov
pop
lcall
dec
pop
call
int3
jg
hlt
jno
pop
std
dec
dec
xchg
mov
ljmp
adc
jmp
scas
or
adc
scas
movsl
adc
sbb
arpl
loop
cmp
ja
iret
push
xchg
out
int3
sbb
scas
imul
arpl
call
fs
push
adc
dec
xchg
push
and
outsb
std
jg
iret
jg
and
imul
loope
push
sub
xlat
daa
lahf
into
imul
xor
jecxz
xchg
mov
jp
jae
cmp
cmp
push
and
cmp
cltd
or
add
push
dec
pop
or
cltd
jb
add
cmp
dec
or
jp
into
int
push
dec
cmpsb
pop
divl
mov
pinsrw
mov
in
jmp
xchg
in
fisubrs
mov
dec
jg
mov
push
decb
or
sarl
pusha
enter
push
adc
in
sbb
add
push
inc
jge
loope
inc
mov
jb
out
push
push
mov
in
push
in
cmpsl
sbb
xchg
pop
add
inc
dec
mov
scas
mov
push
addr16
testb
scas
push
out
pop
mov
daa
mov
pop
divl
jo
inc
cwtl
lcall
icebp
and
cmp
pop
shlb
and
movsb
test
push
inc
cli
push
insb
inc
scas
xor
cmp
add
inc
daa
arpl
xchg
aaa
dec
adc
jge
sub
lcall
in
outsl
in
popf
inc
pusha
js
adcl
cmc
inc
out
adc
inc
xor
leave
adc
add
pusha
xchg
nop
mov
xor
stos
aad
xchg
pop
push
clc
push
mov
lahf
pusha
cmp
sub
and
jle
push
jecxz
loope
push
lea
adc
cmp
or
cmp
pop
xchg
out
insb
xor
pusha
fisttps
mov
jl
enter
pop
imul
repnz
jne
popa
addb
movsl
add
mov
gs
mov
mov
xchg
lds
and
mov
jae
shrb
stc
mov
sub
lods
mov
lahf
or
out
inc
in
ret
xchg
sahf
insl
test
scas
fsubs
adc
js
jne
icebp
ljmp
ljmp
add
sbb
inc
lea
mov
xor
lds
push
add
imul
ss
or
pop
jmp
adc
sbb
jp
xchg
enter
fmul
add
add
aas
ficoms
cli
repnz
movsl
int3
loop
and
leave
shld
cmp
adc
and
and
pop
jne
out
mov
lahf
lahf
inc
mov
pusha
xchg
pusha
inc
insb
jge
add
mov
stos
pop
pop
jmp
jns
scas
in
leave
adc
dec
or
and
cmp
pop
mov
aas
sbb
xchg
push
jae
pop
out
or
or
out
sbbl
mov
jnp
pop
pop
mov
ljmp
or
mov
pop
les
xchg
rcl
fs
andl
inc
into
fnstenv
ficoml
mov
push
nop
leave
push
ret
sbb
jae
cmp
fs
mov
xchg
imul
and
testl
add
cmp
add
shll
cs
mov
or
xchg
mov
mov
pop
dec
jbe
test
xor
subb
push
cmp
iret
pop
jae
call
xchg
push
mov
movsb
sbb
sub
xor
addl
test
fs
addr16
cmp
jbe
lahf
mov
xor
out
dec
push
mov
and
pop
inc
mov
and
pusha
js
int
mov
cmpsb
sbb
mov
adc
lahf
push
and
sub
sub
nop
daa
cmp
insl
pop
stc
xlat
jl
stos
out
stc
in
mov
pop
jp
sub
xchg
rolb
push
out
cmp
jbe
xchg
mov
into
jne
fists
cmp
ljmp
cwtl
scas
jmp
aaa
test
mov
adc
sahf
pop
scas
int3
push
jno
mov
test
sbb
lret
loopne
xchg
cwtl
add
dec
test
dec
shlb
ficompl
xor
ja
mulb
sahf
pop
jne
out
sub
jo
repnz
loopne
inc
es
roll
xchg
jp
or
or
mov
into
call
mov
sbb
add
adc
xor
negb
xor
xchg
mov
test
pop
movsb
rcl
les
lahf
fwait
das
pop
ficompl
pop
xchg
sbb
orb
lcall
icebp
dec
iret
sub
test
data16
push
and
icebp
stos
push
in
mov
dec
movsl
int
inc
push
lcall
jle
sub
or
sbb
mov
lahf
lahf
cs
pop
std
cmpsl
aam
fimuls
fisttpl
cmp
mov
data16
push
dec
negb
gs
jp
or
adc
clc
decb
cmp
mov
rclb
lahf
das
pop
mov
fsubrs
cltd
xchg
ds
ror
adc
jge
fwait
sbb
add
jmp
test
inc
push
pop
mov
cld
pop
dec
loop
sub
add
jl
jo
push
or
adc
add
jbe
fidivrs
add
jnp
mov
outsl
inc
cltd
push
cmc
jnp
inc
mov
lds
dec
sub
imul
addb
inc
lds
and
sahf
cmp
mov
out
pop
xor
and
cmp
push
sub
cmp
ja
ret
push
test
lock
nop
push
jb
xor
dec
ret
push
fmul
jo
xor
jae
stos
cli
jecxz
jle
jbe
cmpsb
mov
pop
notb
mov
stos
rolb
dec
lds
hlt
or
push
cmp
jbe
inc
mov
cmp
add
pop
vandnps
mov
xor
scas
movsb
sbb
aaa
mov
iret
cli
cs
adc
push
mov
ljmp
xor
lods
ret
sahf
es
iret
repz
lret
adc
aam
outsl
inc
inc
mov
movsb
xor
seta
add
mov
dec
sahf
inc
mov
das
push
jg
jno
fimull
xchg
mul
sub
xchg
or
xchg
icebp
push
xor
mov
pop
sub
cli
pop
and
lret
repnz
sti
cmpsb
add
dec
jl
in
adc
test
pop
inc
adc
mov
mov
jnp
adc
add
pop
pop
ss
mov
fidivl
push
in
fbstp
out
inc
inc
nop
ds
arpl
sti
and
or
mov
sub
mov
add
cmp
add
mov
popa
and
xor
adc
adc
push
jp
insl
in
cwtl
mov
mov
xchg
mov
ds
mov
mov
ret
and
xchg
jmp
pop
clc
xchg
inc
jbe
test
inc
pop
fwait
inc
adc
fistl
inc
mov
or
mov
or
sbb
add
sahf
imul
pop
mov
divb
mov
xor
mov
nop
das
dec
movsb
pop
push
lret
push
aaa
cmc
faddl
add
lock
aas
cmp
movsb
stos
xchg
or
into
daa
ds
ja
and
cmp
test
das
outsb
loope
dec
jp
xchg
lahf
mov
bound
xor
stos
shrl
fstl
adc
out
vmread
add
push
es
mov
je
fmull
xchg
and
mov
outsl
pop
sub
jp
iret
lahf
hlt
mov
jo
psubusw
add
fsubrs
out
cmpsl
cmp
jno
cmpsb
jno
cmp
leave
or
imul
xor
jge
cwtl
inc
xor
inc
jge
pusha
stos
fnstenv
sbb
cmc
cs
mov
push
sahf
and
jp
inc
mov
adc
xchg
cmp
jmp
vpcmpgtb
aad
fwait
push
sub
xchg
filds
mov
enter
and
arpl
iret
xchg
mov
jne
int3
outsb
mov
movsb
xchg
jo
cmpsb
and
sbbb
dec
fstps
cmpsb
outsb
xor
and
sahf
movsb
xchg
or
jae
mov
and
xchg
and
jle
call
sub
test
jge
repz
outsb
enter
cmp
sbb
repz
lahf
mov
flds
xchg
cmp
mov
dec
movsl
push
mov
pop
sub
and
sub
add
mov
xchg
cmp
jecxz
out
hlt
popf
pop
sub
adc
jne
mov
int3
lods
aaa
fldcw
push
nop
dec
lret
or
cmp
sub
mov
test
call
imul
inc
xchg
push
lds
inc
jp
test
sub
cmpsw
ret
sub
sti
jnp
negw
pop
mov
sub
mov
loop
fwait
mov
adc
mov
je
cmp
andb
int
cmp
into
loopne
cmp
imul
xchg
int3
int3
addr16
addr16
ret
pop
mov
insl
fbld
sbb
sbb
sub
fucompp
fsubp
sbb
jg
and
jp
dec
mulb
jecxz
xchg
lahf
sahf
jl
lods
dec
jg
jns
jnp
sbb
dec
lods
sbb
xor
xchg
dec
out
adc
aad
cmp
test
cld
popa
mov
insl
sbb
imul
scas
sarl
pop
push
mov
mov
jg
in
mov
mov
out
insl
dec
addl
pop
xchg
cmp
lock
mov
ds
sarl
sbb
pop
aaa
inc
shll
mov
andl
sub
in
pop
movb
std
add
xchg
rorl
loop
jmp
clc
pop
sbbb
loop
cmp
cmp
pop
rolb
jae
in
add
xchg
pop
imul
sbb
or
dec
sub
movsb
cmp
and
and
mov
pop
sbb
dec
mov
outsl
push
pop
fistl
mov
pop
ret
jecxz
and
stos
aas
outsb
jbe
xor
rcll
xchg
sti
cmp
mov
sbb
sub
in
les
inc
test
shll
sbb
jl
scas
mov
shll
iret
pop
xchg
cltd
push
lret
fcmovne
dec
loopne
ret
mov
cmp
test
jg
icebp
adc
repz
subb
push
inc
call
cmp
ja
daa
faddl
mov
push
push
jb
adc
pop
ret
pop
cmp
jne
imul
lret
les
int3
loopne
jp
dec
iret
push
and
sub
sbb
pop
out
xor
xchg
pop
dec
pop
ljmp
inc
jp
jge
adc
sahf
subb
ljmp
ljmp
add
dec
cmpl
movhlps
xor
or
in
xor
sub
add
mov
int3
sbb
dec
sti
cmp
call
sub
fwait
xor
out
out
mov
test
inc
mov
out
sub
mov
dec
push
lea
jle
or
dec
iret
cmp
fildl
pop
sahf
fldcw
arpl
dec
and
lds
add
fldl
imul
cmc
push
push
jl
sub
mov
ljmp
adc
mov
nop
ror
sub
fildll
cmpsl
jmp
mov
mov
xchg
sbb
in
inc
mov
stc
xchg
in
bound
ljmp
pop
in
insb
jne
movsb
dec
xchg
sub
xlat
popf
push
imul
or
call
jbe
jo
dec
in
stos
pop
jmp
adc
loopne
mov
loope
jns
insb
sbb
lods
mov
jl
mov
popa
mov
add
fdivr
mov
dec
and
les
or
mov
fiaddl
adc
pshufw
pop
jg
sbbb
xor
xchg
das
mov
jo
xchg
lock
mov
aad
xor
lods
sub
out
xlat
add
inc
jno
outsl
cld
adc
iret
adc
sbb
nop
push
outsb
imul
data16
cmpsl
das
mov
loope
and
ds
iret
cltd
and
les
or
in
push
in
jne
jb
jae
adc
bound
mov
mov
inc
xor
xchg
and
push
mov
cmp
stos
sar
mov
pop
sbb
cmp
lahf
mov
cmp
aam
or
add
push
inc
ret
mov
jb
cmpsl
rcrb
in
cmpsl
push
mov
jmp
lds
lret
in
dec
adc
add
add
pop
jae
cmp
fimuls
cltd
and
test
lret
xorb
mov
add
push
mov
movsl
push
mov
fdivs
cmp
insl
popf
jge
repnz
mov
icebp
and
loopne
fcomp
add
adc
jmp
stc
divl
dec
aaa
out
enter
rcrb
mov
idiv
jb
lret
pop
out
adc
enter
sarl
push
mov
cli
ja
call
mov
mov
js
cmpsb
and
into
pushf
pop
sub
bound
sub
jp,pn
dec
stos
push
xchg
hlt
out
xchg
repz
outsb
mov
xor
lods
hlt
lcall
int
mov
outsb
cld
xchg
sub
idivb
daa
into
jp
inc
addl
ljmp
jl
mov
add
movsb
jno
out
rolb
dec
fistpll
jp
and
jnp
into
aaa
subb
cmp
mov
mov
add
and
leave
inc
cmc
je
xchg
iret
orl
push
pop
out
mov
imul
inc
pop
ljmp
or
pusha
mov
pop
add
lret
mov
pop
out
xchg
adc
push
sbb
cmp
cmp
inc
mov
je
out
cmpsb
fwait
iret
mov
daa
insb
rol
mov
repnz
iret
mov
filds
mov
add
push
or
mov
xlat
imul
aad
rcrl
xor
inc
adc
push
mov
mov
daa
mov
ret
pop
jne
add
cmp
adc
nop
je
inc
clc
mov
mov
aaa
aad
sbbb
dec
add
das
push
fildl
mov
bound
and
xchg
adc
or
jg
insb
je
xchg
add
aaa
or
repz
dec
add
mov
mov
push
sahf
out
jo
adc
nop
pop
push
fildl
or
mov
sbb
adc
les
sbb
roll
adc
xchg
out
test
adc
cli
mov
xor
iret
sbb
ficompl
gs
clc
rorl
scas
jnp
jnp
pop
jno
popf
add
test
cmp
adc
lahf
or
mov
xor
stos
loopne
xchg
ret
gs
mov
xor
push
xor
xchg
aad
clc
jmp
cwtl
cmpsl
push
xor
jns
sbb
dec
cwtl
mul
scas
xor
ds
xor
mov
mov
fisubrs
rolb
push
jg
les
mov
sub
cltd
mov
popl
lahf
pop
mov
fcompl
mov
daa
scas
xor
jne
icebp
enter
dec
xchg
sbb
ss
ds
iret
movsb
pop
aaa
icebp
sbb
fnsave
fisttpl
xor
aad
subb
fs
mov
xchg
popa
sbb
lret
pop
or
inc
xor
cmpsb
cmp
mov
mov
es
and
aaa
into
roll
and
dec
jmp
subb
incl
jae
dec
imulb
shlb
gs
add
mov
or
xchg
xchg
jo
mov
xlat
ret
or
inc
xor
fldt
popf
push
mov
adc
jne
dec
lret
adc
and
jle
shll
fwait
cmc
int
scas
adc
add
lods
lods
mov
sahf
inc
jne
and
imul
pushf
xor
in
jae
push
xor
pusha
push
sub
or
mov
aam
inc
clc
jge
mov
cld
shlb
mov
fcoml
mov
lea
or
and
call
mov
idivl
ret
cltd
jmp
pop
or
popa
stos
xchg
cmpsl
sbb
aaa
mov
push
pop
icebp
jne
shlb
inc
cwtl
push
std
dec
addl
shll
scas
or
cmp
mov
mov
pop
inc
rolb
les
sub
hlt
popf
nop
std
sbb
pop
pop
mov
jmp
sbb
jmp
iret
dec
popf
xchg
inc
cltd
aaa
jg
into
inc
lahf
movl
mov
jecxz
sub
cmp
sub
lock
pop
jne
pop
cmc
lcall
mov
jg
add
mov
add
sbb
cli
faddl
xchg
and
mov
gs
fwait
imul
dec
pop
cmp
inc
cwtl
repz
dec
repnz
jne
aas
mov
arpl
fsubrl
out
sbb
mov
push
sub
jp
xlat
xchg
test
pop
lahf
sbb
enter
mov
sub
sahf
xchg
mov
sub
ja
sub
jge
test
push
mov
faddp
or
dec
and
cmpsl
enter
pop
ret
cwtl
mov
jecxz
or
push
push
fs
push
pushf
or
adc
mov
mov
add
mov
cmpsl
mov
and
shr
in
imul
pop
push
out
int
sti
dec
or
mov
xor
or
cmp
cmc
pushf
mov
mov
and
xor
test
mov
and
js
fsubl
test
inc
fcoms
push
cltd
add
stos
enter
or
and
iret
xchg
movl
jmp
pop
and
push
xor
out
add
out
pop
cli
push
cs
std
ds
out
sbb
out
jp
lods
loop
xchg
cltd
int
test
xor
insb
and
and
add
push
inc
jae
xchg
mov
lret
imull
rclb
mov
out
hlt
sub
mov
je
shll
push
ret
mov
xor
add
outsl
outsl
xor
stos
fldl
lods
xchg
stc
cld
mov
mov
pushf
test
cmp
in
lods
fmuls
es
idivl
xor
dec
stos
leave
out
or
fs
addr16
cli
arpl
out
or
jle
data16
jb
jbe
xor
push
les
sarl
lret
or
rorb
push
xor
fmuls
jle
movsb
and
xchg
dec
rcll
push
mov
addl
lea
mov
sub
mov
bound
cli
les
jmp
cli
jb
mov
jae
insb
pop
stos
pushf
xor
das
xchg
mov
sbb
push
fucom
xor
fs
pop
and
xchg
outsb
es
dec
mov
outsb
add
mov
std
jle
adc
push
aam
dec
cmc
cmp
adc
pusha
sahf
inc
adc
push
jo
shlb
pushf
ds
adc
ror
and
mov
pop
lds
push
rol
pop
cmpsb
dec
das
in
sbb
scas
aad
addr16
mov
in
dec
mov
jmp
imul
push
je
mov
push
mov
das
loope
mov
and
rorb
fs
jg
and
ficompl
inc
jbe
jb
outsl
fs
lods
add
jnp
fxch
fmull
push
sub
lcall
testb
fmuls
aam
mov
inc
popa
lods
xchg
jl
mov
or
or
sub
stos
pop
mov
mov
or
scas
cmp
js
mov
lcall
mov
in
xchg
insb
jbe
adc
and
out
pusha
add
inc
lcall
jl
in
mov
mov
imul
test
or
iret
cvtpi2ps
ds
es
in
iret
push
outsl
push
pop
mov
int3
imul
mov
into
add
lahf
xor
lret
and
fsin
push
mov
lret
mov
xchg
sti
in
fldcw
fwait
adc
ret
pop
jo
fwait
andl
xor
aam
jecxz
mov
sub
lds
gs
sbb
ss
jg
or
cmpsl
mov
jne
mov
and
imul
add
ds
lahf
xchg
xchg
fsub
fisubrl
cmp
xorb
fcompl
ret
sub
aaa
and
cmp
jb
movsl
nop
mov
xchg
mov
cmp
mov
repz
inc
xor
orb
and
scas
imul
inc
adc
testl
add
mov
dec
out
sub
movsb
cmp
xchg
add
movsb
xchg
or
inc
jne
mov
fmuls
cltd
add
sub
imul
jl
hlt
es
inc
xchg
lret
jle
js
mov
cli
mov
sub
push
ss
aam
adc
adc
nop
jnp
popl
push
mov
call
insb
cmp
jle
cmp
stos
fwait
call
mov
dec
cli
jge
sbb
xchg
popl
shl
rcrl
lret
jmp
jnp
je
insb
jl
add
pushf
insl
stc
inc
lds
imul
cmp
xchg
repz
add
inc
or
addb
cmc
je
scas
cmc
test
mov
cmpsb
mov
mov
jmp
sarb
pop
mov
lcall
push
jnp
and
outsl
movsb
daa
shlb
cli
pop
stos
adc
dec
xlat
mov
inc
sub
scas
imul
or
pop
sahf
jne
jle
popf
xor
fidivrs
mov
mov
lret
jo
pop
inc
mov
pop
cmp
push
pushf
dec
scas
and
jl
cli
shr
pop
adc
addl
pop
mov
mov
inc
xchg
dec
mov
xor
dec
pop
mov
insb
andl
add
sbbl
sti
addr16
enter
int3
xchg
inc
push
cli
lcall
sbb
daa
leave
cltd
arpl
pop
adc
and
jae
xor
mov
mov
lahf
test
fiadds
sti
ret
lock
fildl
push
fwait
sbb
adc
mov
push
in
aad
out
jbe
adc
es
xor
les
add
and
aaa
stos
push
ficompl
xor
scas
cmp
pusha
notl
orb
inc
nop
mov
lds
cli
sub
jge
aaa
outsl
jb
pop
push
xchg
aaa
push
ja
out
xor
push
ret
jae
popf
imul
shl
rorb
mov
push
jb
loope
ds
add
popl
fcmovbe
mov
dec
push
outsl
mov
inc
popa
push
push
outsb
test
push
and
mov
mov
insb
xor
xchg
jns
inc
test
rclb
mov
cmp
xchg
xorl
jae
xorl
add
cmp
mov
push
sub
pusha
scas
fs
loopne
pop
sahf
push
loope
andb
loope
int
dec
addr16
in
rorb
sbb
pop
mov
xchg
add
or
xchg
xlat
inc
sbb
pop
cld
adc
inc
icebp
sub
stc
pop
out
pop
sti
popa
mov
and
mov
add
lahf
sub
jl
mov
fnstsw
inc
out
push
dec
mov
xchg
sbb
push
fs
gs
push
cs
pop
inc
and
push
test
xor
scas
xchg
pushf
push
push
sbbl
xor
sub
ret
pop
in
jecxz
cli
pop
and
push
pusha
adc
outsb
imul
cs
sbb
adcl
pop
movsl
daa
inc
sbb
push
imulb
lret
dec
push
repnz
mov
js
mov
ficompl
add
loopne
mov
mov
mov
cmpsb
jmp
sbb
sbb
push
mov
fld
jmp
fdivrs
push
lahf
dec
mov
fldenv
je
pop
xchg
push
xchg
xchg
dec
ljmp
fcompl
xlat
mov
mov
loope
xor
in
imul
arpl
std
fstpl
adc
pop
cli
dec
push
out
cmp
or
fcmovnbe
out
shr
adc
js
fstl
mov
iret
enter
pop
sahf
repz
je
mov
les
dec
out
mov
in
shl
inc
lcall
outsl
out
jne
mov
loopne
fwait
cld
xchg
push
pusha
xor
mov
sar
das
xchg
movsb
push
fs
shrb
shll
xchg
cmp
mov
add
andl
loop
aam
imul
inc
cli
sti
xchg
lcall
into
mov
ret
push
insl
jl
xchg
ret
pop
mov
cmpsb
sub
mov
push
fisubrl
fistpl
in
scas
dec
vpshaw
dec
add
push
mov
shlb
ljmp
mov
ljmp
push
sub
lahf
mov
push
or
jge
jecxz
sbb
dec
lret
or
dec
test
xchg
mov
cmp
pop
loopne
dec
ja
and
mov
jo
jmp
lret
or
lock
enter
js
push
inc
imul
arpl
xchg
sbb
xor
cli
loopne,pn
fcmovne
adc
mov
je
inc
mov
mov
mov
xor
stos
fisubs
daa
idiv
and
outsl
adc
inc
mov
xorb
add
and
pop
pop
in
stc
sbb
inc
mov
jnp
lock
and
mov
push
mov
adc
sub
lcall
adc
xchg
fisubrs
xor
inc
mov
out
xchg
lock
pop
ljmp
xchg
bound
sbb
clc
push
xchg
jnp
mov
inc
outsb
into
mov
lret
pop
int
mov
je
xlat
inc
clc
aaa
test
push
xchg
hlt
pushf
xchg
cbtw
stc
cmp
loopne
repz
cltd
dec
je
daa
arpl
inc
push
push
mov
ljmp
push
cmpb
jle
sub
sbb
stc
push
loop
shl
imul
ret
mov
ljmp
std
loope
nop
repz
or
iret
jl
orl
dec
icebp
repz
sbb
mov
lahf
imul
and
fcmovnbe
add
sub
add
ljmp
test
ds
sub
and
sub
xor
sub
jno
xor
push
shrb
and
cmp
mov
push
xor
test
aad
adc
pop
stos
mov
fcmovnu
jo
add
xchg
or
adc
pop
sub
sarl
in
and
fwait
aad
push
lret
fistl
dec
pushf
into
xchg
jo
or
mov
and
fildll
jmp
adc
aaa
lret
in
cmpsb
adcl
out
ss
inc
cmc
inc
loope
aad
push
sub
fadds
out
sub
jns
ljmp
jge
push
pop
outsb
lahf
addr16
lds
test
jmp
pop
mov
mov
movsl
mov
push
fisubl
das
sub
mov
xor
sub
pop
dec
jb
inc
ss
and
mov
loope
mov
inc
dec
xchg
cmpsl
sbb
adc
je
shr
mov
fsts
push
mov
arpl
mov
or
popa
push
mov
lret
ja
lock
mov
mov
loop
call
or
popa
adcl
dec
ja
cli
sub
mul
mov
xchg
cwtl
jno
sbb
loopne
aam
inc
push
xchg
jl
repnz
stos
add
fidivrs
pop
in
clc
sub
fs
popf
xchg
cli
lcall
cmp
sbb
addr16
push
jno
push
imulb
dec
aaa
cld
mov
repnz
xchg
xor
clc
cmpsl
push
jge
inc
jno
popf
and
inc
gs
jno
xchg
outsl
clc
xlat
lret
out
pop
pop
fldenv
inc
adc
aad
push
bound
mov
mov
jp
jnp
pusha
inc
ds
dec
cmc
stos
xor
cltd
fcoml
adc
pop
lods
sub
ret
mov
or
mov
dec
ror
imul
movsb
data16
fs
lahf
or
repnz
clc
lods
push
jl
dec
cmc
test
fdivrl
aad
idiv
outsl
mov
xor
and
call
fdivl
xchg
adc
mov
iret
repnz
and
mov
or
repz
aas
mov
sti
cmpsl
jbe
ja
mov
add
adc
add
cmp
adc
fldt
and
add
aaa
jg
pushf
stos
test
aas
clc
xchg
dec
lret
loope
nop
push
out
sub
inc
pcmpeqd
cmc
or
fiadds
int3
hlt
loope
test
cli
insb
jb
pop
negl
aas
dec
ret
mov
ss
push
mov
das
es
or
pusha
mov
testb
pop
sbb
fwait
jle
and
or
push
je
or
popa
shlb
int
ss
jbe
jbe
test
lea
and
jg
in
scas
mov
out
or
jge
popf
ds
fimull
subl
dec
cmp
ss
and
mov
cmc
test
popa
or
cltd
xchg
cmpsl
in
rolb
arpl
mov
adc
add
dec
push
lods
rorb
cmc
push
fisubs
out
das
mov
pop
mov
js
les
imul
xlat
sbb
hlt
in
mov
xchg
xchg
sub
push
subb
loope
cmp
fstpt
mov
xchg
sbb
sub
ss
cmpsl
cmp
jns
cltd
sti
fisubrl
bound
into
or
push
dec
icebp
icebp
inc
mov
mov
addb
je
aad
testb
and
mov
out
push
int
pop
jb
in
sarb
sub
inc
push
mov
fs
cmc
and
ljmp
jo
mov
in
inc
sti
sub
call
rcl
out
sbb
out
xor
jg
test
imul
xlat
xchg
adc
jmp
add
and
push
repnz
jg
negb
daa
mov
leave
push
xor
lock
add
nop
mov
dec
xor
cs
es
in
add
ss
sub
lcall
movsl
pop
fnstsw
mull
pop
incl
sbb
push
jecxz
mov
push
mov
mov
push
dec
repz
jmp
jmp
mov
push
jne
iret
insb
dec
or
std
es
iret
jo
xchg
cmp
sbb
pusha
int
out
out
out
fldt
xchg
popf
push
lahf
sub
add
fldcw
xchg
fst
pop
stos
add
jmp
xchg
push
sbbl
cmp
inc
ljmp
out
cmpps
push
in
pop
enter
mov
mov
sub
jmp
nop
push
pushf
lea
das
int3
stos
jge
adc
push
xchg
sahf
pushf
cmc
and
mov
inc
push
mov
iret
ja
sti
movsl
jg
or
jb
mov
lock
sbbl
xor
movsl
fmull
push
mov
shlb
push
mov
xor
js
es
icebp
or
adc
mov
std
push
jne
iret
mov
int3
push
xchg
or
mov
cmp
lcall
pop
shll
inc
out
idivb
cmp
jo
adc
jns
leave
pop
and
xorl
and
es
and
lods
mov
or
pop
shll
fbstp
or
pop
fdivrl
inc
sahf
mov
insl
sbb
and
hlt
addr16
add
push
lods
sub
sbb
and
xchg
hlt
push
mov
sub
cli
adc
pop
pop
mov
mov
push
pop
fidivl
cmp
je
movsl
dec
add
aam
out
ja
push
mov
cwtl
xlat
cmp
fwait
dec
mov
dec
jp
fistl
cmpsl
dec
notb
sbb
in
dec
daa
pop
push
add
sub
lea
jne
cmp
ds
insl
pushf
xchg
lahf
mov
mov
xchg
xchg
sub
xor
mov
inc
sub
mov
arpl
xor
xlat
cmpsb
js
pop
ret
jg
push
sub
sbb
imul
mov
inc
push
gs
add
jne
imul
divl
xchg
mov
mov
cmpsl
test
add
jg
push
push
ror
in
jns
mov
and
mov
insb
pop
mov
and
push
or
lea
fstps
repz
stos
push
jnp
dec
in
push
and
or
add
into
add
mull
push
scas
cmp
jb
jp
aaa
or
nop
fisttpl
xchg
mov
xchg
mulb
xor
stc
addl
out
pushf
sti
jbe
mov
das
aad
sbb
movsb
into
push
sbb
inc
movb
jl
sar
push
ja
and
sub
and
fists
xor
call
sbb
stc
jne
fsubs
xorb
pop
and
outsl
add
test
xor
sbb
pop
pop
push
pop
cmpsb
or
sahf
inc
sbb
push
clc
dec
sub
and
inc
mov
fildl
fstpl
ret
loop
dec
xchg
inc
or
shll
adc
or
out
push
xchg
dec
push
or
popf
gs
and
add
push
neg
push
arpl
repnz
andb
dec
cmpsb
add
mov
xor
dec
cmpsb
pop
mov
int3
lods
cli
add
rcl
and
and
push
cmpsb
js
push
out
dec
xor
popfw
lock
mov
ret
lods
imul
into
mov
jbe
test
jbe
and
jl
xchg
xchg
rcrb
push
imull
push
mov
mov
sbb
cltd
je
mov
sti
cld
lods
cld
cltd
scas
or
rcrl
aaa
mov
arpl
mov
lds
jecxz
sarl
inc
push
or
les
inc
jge
ds
insb
popf
cmc
nop
lea
dec
dec
or
mov
repnz
aaa
inc
dec
pop
and
loopne
pop
xchg
movsl
sti
push
sub
push
aad
mov
lock
subb
mov
sbb
jecxz
enter
insl
out
xchg
xchg
mov
and
cmp
enter
jo
xchg
cmp
bound
dec
jb
push
jae
int
sbb
stos
mov
shl
sbb
add
mov
and
imul
nop
mov
sarb
sub
sahf
sub
sbb
ret
fs
sub
cmp
and
xchg
sub
sbb
sub
adc
repnz
out
imul
fcomp
push
jno
mov
scas
mov
daa
or
sbb
dec
sub
or
dec
sbbl
movsl
push
test
adc
inc
jl
aam
lret
daa
pop
push
push
and
cmp
add
daa
cmp
cltd
bound
iret
push
jp
sbbl
ds
xchg
sbb
rcrl
pop
inc
push
cmpsb
imul
out
test
out
sub
xor
and
into
test
sub
es
push
mov
mov
repnz
mov
imul
xchg
mov
mov
aam
jge
ljmp
dec
xchg
xchg
push
nop
xchg
xor
jnp
lods
mov
ficoms
cmpsb
pop
jmp
jbe,pt
enter
mov
mov
or
cmp
push
shll
arpl
add
sbb
lret
lcall
scas
add
add
mov
js
and
mov
cmp
notb
pop
cld
cli
dec
push
xchg
push
pop
mov
ljmp
adc
add
jge
js
lods
clc
xchg
insb
lahf
mov
iret
mov
xchg
aad
sub
jle
mov
andl
mov
dec
mov
orl
jmp
mov
lret
ret
lahf
and
sub
sbb
dec
and
cld
cmpsl
jbe
push
loop
fnstenv
inc
ja
sub
rorl
out
call
or
mov
pop
fidivs
sarl
ja
sarl
gs
xor
stos
test
rclb
mov
pop
pop
movsl
movsb
rorb
mov
jae
pop
pop
or
xor
cmpb
jp
pop
pop
xchg
and
xchg
leave
push
outsl
jnp
and
mov
push
rorl
mov
je
jb
outsb
mov
or
jbe
jmp
push
sbb
lds
or
repz
inc
xchg
jne
outsb
xchg
mov
jo
jne
shrl
jae
ja
cmp
je
push
sbb
xchg
notb
in
mov
sbb
dec
push
inc
xor
sbb
inc
mov
stos
aad
ja
sub
push
push
jae
adc
pusha
mov
jnp
xchg
mov
cmc
mov
adc
jge
pop
andl
lret
dec
lea
jne
push
add
scas
pop
jp
test
xor
sbb
sub
inc
xchg
inc
push
sbb
ss
sti
jp
mov
cmp
pop
dec
std
ficoml
xor
imul
test
mov
mov
mov
push
dec
mul
add
rcll
push
xchg
mov
fs
ret
jbe
bound
jl
fwait
inc
xorl
lds
pop
xchg
lcall
push
popf
xchg
cs
dec
movsb
call
scas
shrl
stos
xchg
mov
insl
roll
shrl
cld
inc
mov
ds
inc
adc
sub
insb
fnstenv
or
and
icebp
imul
jae
xor
sahf
test
xchg
inc
mov
mov
fstp
shrl
cmc
mov
iret
sub
mov
outsb
cmpsl
mov
dec
dec
out
mov
pop
sbb
and
mov
shlb
dec
mull
fcomps
adc
lds
aam
repz
and
adc
mov
movsl
mov
mov
cltd
shlb
pop
les
out
jle
push
rclb
fnstsw
adc
daa
jp
dec
mov
xor
insl
lret
idivl
aaa
add
imul
or
xlat
lock
add
push
and
pop
movsl
enter
add
jl
jns
add
imul
out
sub
sahf
and
rclb
cmpsl
lods
xbegin
sti
xor
xor
mov
inc
cmpsl
mov
cwtl
pop
xor
int3
add
jp
enter
xchg
loop
stos
stos
ljmp
scas
in
fstps
jns
and
fcompl
jge
aas
fildl
mov
pushf
push
int
xor
mov
jbe
ljmp
popa
add
icebp
iret
stos
sarl
ljmp
push
clc
push
out
je
mov
mov
popa
outsb
dec
insl
sbb
push
iret
nop
sbb
scas
fs
and
pop
faddl
movsb
dec
jle
or
decl
lahf
pop
sub
out
testl
mov
jmp
das
inc
mov
dec
push
movsb
xor
xchg
push
insl
sub
not
jnp
inc
and
dec
stos
or
fstpt
out
adc
sbb
scas
push
pusha
jp
lret
negl
push
add
push
jmp
bound
js
push
fsub
cmp
push
lds
sbb
inc
cmpsb
std
xchg
je
mov
add
sub
dec
pop
or
xchg
jle
icebp
mov
je
push
and
jg
mov
jne
lds
cmp
lcall
pusha
inc
sub
fisubs
movl
pop
cli
pop
rcrl
push
mov
pusha
decl
push
inc
dec
dec
cmc
std
xchg
inc
push
sbb
je
fldl2t
xchg
sahf
lea
out
inc
xchg
lret
bound
push
and
pop
or
cmp
lcall
iret
dec
inc
scas
xorl
cmc
sbb
jl
and
incl
mov
icebp
xchg
cld
incl
out
filds
mov
rcrl
push
fs
jg
inc
in
orb
mov
ret
mov
fmuls
lret
pop
push
xor
xchg
xor
and
out
cmp
cld
test
jl
cltd
fistl
and
es
pop
pop
shl
ficompl
and
mov
xor
and
fcoml
and
addr16
sar
mov
shl
mov
jns
push
pop
mov
pop
fwait
enter
sub
xor
loopne
stos
add
adc
mov
jmp
sub
cwtl
push
decl
mov
mov
push
movl
push
out
adc
pop
and
cli
adc
dec
js
daa
jbe
jg
adc
and
or
inc
rorb
cwtl
jg
es
jl
lea
pop
lea
mov
fwait
jns
add
mov
inc
cmpsb
insb
lcall
pop
fwait
call
push
push
movl
sbb
cmp
scas
dec
ret
out
ret
incb
ret
iret
pop
jmp
sub
xor
aam
and
repnz
dec
add
mov
pop
xchg
push
xchg
mov
in
sahf
xchg
dec
jno
scas
lea
and
aaa
and
sub
xlat
mov
popa
cltd
ret
mov
inc
push
mov
roll
inc
sub
push
les
les
incl
mov
dec
pop
inc
lret
pop
cmp
mov
jae
sbb
aaa
sbb
xchg
dec
pop
adcb
ja
movups
cmc
pop
pop
add
push
jbe
orb
push
mov
cli
mov
lock
jno
pop
or
jge
jns
adc
pusha
hlt
scas
mov
or
pop
inc
lret
out
or
outsl
fs
popf
sub
orb
xchg
sub
push
jne
or
and
dec
xlat
push
fwait
jnp
mov
pop
cltd
and
pop
iret
into
mov
cmpsl
pop
adc
je
xchg
ds
arpl
jp
adc
in
xchg
jne
daa
aaa
pop
lods
sbb
push
mov
lods
lods
inc
repz
sbb
mov
scas
cmpb
mov
xchg
pop
push
sbb
daa
xor
mov
sti
mov
pop
inc
or
mov
xchg
cmc
sub
and
sub
outsl
push
dec
mov
pusha
sub
or
or
in
jo
and
ja
lea
pop
jmp
fbstp
sarb
jmp
cwtl
sti
mov
ret
adc
pop
insl
pop
and
bnd
lock
and
insl
inc
mov
jle
push
loopne
sbb
rcrb
shr
dec
mov
sbb
addr16
pop
lods
out
xor
mov
loop
xchg
pop
pusha
mov
daa
sarl
ror
sbb
xor
popa
dec
mov
les
roll
lcall
push
and
je
mov
jmp
xor
shlb
cmp
in
dec
std
stos
pop
cltd
pop
adc
stc
cmp
mov
jl
repnz
repnz
nop
std
jle
sbb
test
cwtl
aam
pop
sub
lret
inc
mov
cmc
jmp
sbb
inc
jo,pn
inc
or
cmpsb
xchg
pop
dec
aaa
jo
adc
and
mov
adc
adc
pop
push
jb
nop
mov
inc
movsb
fidivrs
icebp
rclb
push
sbb
ret
gs
dec
dec
add
and
stos
popf
aad
jb
jg
add
gs
arpl
ret
test
pushf
ret
mov
adcl
sbb
cmc
push
mov
mov
xor
fildl
mov
jge
dec
xor
mov
mov
dec
xchg
call
lods
fidivrs
or
ret
xor
push
lret
out
mov
mov
aas
inc
xchg
popfw
stos
pop
inc
sbb
js
adc
imul
mov
lret
pop
fdivrl
mov
insb
rcll
jbe
cld
addr16
sub
cmp
fwait
lcall
push
or
push
xor
aas
mov
jne
sbb
dec
or
mov
sub
dec
dec
or
repnz
mov
jle
lret
xor
mov
cld
pop
mov
sbb
sub
ret
addr16
jp
lret
mov
in
sarl
loopne
int3
pop
stc
out
dec
jl
or
mov
mov
sbb
popa
jb
add
dec
fstl
mov
std
jle
xchg
or
jecxz
scas
cmpsb
cmp
shrl
lds
into
jne
xacquire
mov
mov
clc
aam
fisubrs
cmpsb
inc
dec
adc
enter
insb
sarl
fsubs
add
mov
mov
mov
rcrb
movsl
mov
arpl
movsb
mov
stc
ret
or
in
flds
mov
test
mov
push
addb
push
xchg
lret
sub
popf
dec
mov
jne
iret
das
mov
scas
sti
test
cmp
inc
dec
pushf
js
adc
lret
push
jno
iret
jae
pop
fs
stos
in
inc
push
or
cmp
cmpb
lods
js
in
js
repz
lcall
orb
xor
add
add
pop
in
fcoml
out
xchg
lods
jecxz
ret
sbb
insl
xchg
cmp
push
testl
fists
mov
icebp
push
icebp
pop
mov
out
adc
dec
or
je
fdivs
push
sti
ss
pop
movsb
push
mov
outsl
jmp
mov
push
pop
lods
jle
sub
vmovapd
push
mov
cld
jno
cli
out
daa
test
cltd
sbb
fwait
cmp
inc
mov
mov
and
insl
xchg
mov
fcoml
mov
daa
in
pop
jle
mov
jo
popf
jecxz
mov
gs
mov
test
popa
pop
in
pop
mov
mov
and
sub
mov
mov
and
mov
aaa
jns
cmpsb
mov
movsl
cmpb
xchg
and
and
pop
sub
in
popa
xor
and
add
dec
aaa
mov
cltd
lret
mov
push
sti
decb
jp
sbb
leave
jge
mov
inc
jle
dec
mov
inc
add
lods
repz
imul
loopne
mov
clc
pushl
mov
dec
pop
fnstsw
pop
and
dec
or
push
xchg
jbe
test
dec
mov
es
push
adc
dec
pusha
scas
fs
js
push
inc
enter
mov
fildl
mov
fildl
dec
adc
aam
mov
mov
mov
xor
loop
mov
enter
ja
pusha
sbb
js
popf
jp
or
stos
mov
and
out
push
add
bound
sub
sub
js
inc
bound
push
sbb
sbb
aaa
cmpsl
daa
mov
lret
push
lret
inc
scas
xchg
leave
jnp
adcb
mov
sbb
dec
cmp
inc
popf
imul
idivb
and
sub
jne
fisttpl
sub
sub
mov
sub
cltd
push
ret
jle
xchg
mov
xor
xlat
mov
lods
jno
iret
cmp
adc
out
inc
xchg
sbb
shll
xchg
jne
cmp
nop
xchg
push
icebp
lods
jo
mov
or
movsl
jecxz
fcoms
fisttpll
xchg
adc
cmp
aas
sub
ds
sbb
dec
xor
neg
sbb
push
aas
xor
inc
hlt
sahf
movsb
repz
es
cmp
stc
push
cmp
aad
pop
dec
aam
push
inc
xchg
jecxz
imull
dec
aaa
les
pop
imul
iret
and
add
adc
arpl
mov
insl
mov
lds
call
out
or
imul
fxch
adc
or
jmp
add
xor
ja
shl
adc
std
mov
push
pop
add
push
sbb
ficompl
cmp
add
jl
sti
orl
xlat
jp
ret
scas
push
lret
or
stc
sbb
cltd
and
aam
test
pop
cmpsl
mov
cltd
icebp
scas
push
lods
xchg
aas
push
sahf
xor
sub
mov
js
pushf
xchg
in
test
sub
scas
lret
and
and
lret
fimuls
flds
xchg
adc
jl
sub
cwtl
sub
adc
ljmp
std
mov
shr
jb
pop
test
push
into
pop
and
mov
lret
je
testb
lret
mov
cld
and
push
pop
mov
outsb
das
adc
ret
imul
lea
cs
cltd
dec
popa
stos
cltd
hlt
sbb
lret
dec
add
cmpsb
inc
dec
ja
or
cmp
movsl
shlb
testl
cli
daa
add
cmp
adc
or
ljmp
shl
sahf
icebp
push
sub
mov
sbb
push
adc
pushf
fwait
pusha
mov
jb
or
jp
jmp
xor
in
cmp
push
jp
jno
xchg
add
jle
dec
jb
dec
out
rclb
and
cmp
pop
push
mov
cwtl
xchg
stos
pop
addb
std
push
inc
sahf
stos
sub
or
fbstp
out
push
inc
shlb
sahf
fcoms
add
jae
cmp
add
shl
stos
out
xorl
inc
movsl
cmp
inc
cmp
add
cmp
shr
pop
sbb
inc
pop
stc
jmp
mov
outsl
mov
dec
imul
jle
cmp
sub
pop
sub
orl
push
cltd
test
cmpsb
int3
add
pop
xor
jmp
cmp
adc
pop
cltd
std
inc
pushf
outsb
cmp
mov
or
fsubr
mov
fisubrl
insl
inc
shl
fidivl
stc
inc
add
addr16
ja
mov
aas
xor
push
pop
mov
das
mulb
inc
cmp
mov
cmp
fucom
push
js
inc
orb
int3
pop
push
dec
fwait
ljmp
aam
into
mov
push
pop
clc
inc
dec
xor
lock
sub
test
inc
leave
cltd
icebp
ret
popf
addr16
push
xchg
loope
xor
adc
adc
cmp
jge
and
jmp
ja
xchg
divl
mov
dec
cmp
inc
fsubrs
mov
xchg
call
xor
cmp
xchg
jmp
push
pop
xlat
pop
xor
iret
jge
xchg
ret
dec
mov
jae
rolb
mov
sti
loop
nop
out
push
lds
xor
lahf
decl
lahf
stos
mov
loopne
cs
mov
sub
mov
sub
pop
aam
mov
iret
inc
in
lods
sub
popf
stos
pop
ljmp
sbbb
cmp
jmp
lds
aaa
cli
movsb
ret
aad
rol
pop
scas
mov
imul
lea
sti
movsb
push
dec
push
cmpsl
jg
lcall
sub
cmp
cs
fmull
push
xchg
inc
andl
mov
sub
ror
frstor
lods
xchg
or
push
pop
test
xchg
push
lds
aaa
sub
cmpsb
inc
or
mov
pop
xor
push
adcb
ficoml
jl
inc
addl
sti
movsb
push
and
lret
mov
movsb
ss
sbb
push
or
sub
call
jae
mov
orb
fsub
js
mov
mov
cli
test
fadds
test
scas
mov
rcr
icebp
mov
jns
sub
and
lock
cmc
int3
dec
lods
add
pop
jle
adc
cmp
sub
gs
cmp
pop
or
lock
fs
inc
ss
inc
pop
sub
dec
cmp
adc
cld
insl
leave
xchg
ja
addr16
pushf
push
cli
test
adc
mov
nop
mov
jp
mov
outsb
mov
test
jb
les
shlb
stos
jmp
shll
fucomi
pop
mov
out
sub
imul
cmpsb
xchg
jns
movsb
or
daa
add
jle
push
inc
xchg
mov
push
movsl
and
mov
leave
gs
cmc
pop
mov
mov
dec
clc
mov
xchg
shrl
icebp
jmp
jl
xor
call
mov
cmp
jb
insl
fidivs
dec
jo
jne
fistps
in
mov
push
fimull
call
or
test
mov
cmp
icebp
sub
jns
popf
mov
test
addb
lret
les
inc
clc
add
pop
stc
lods
test
js
test
addl
lret
inc
cmp
inc
ret
mov
repnz
dec
cltd
lret
xchg
sub
and
neg
es
mov
pop
adc
jl
data16
lods
inc
mov
int
ret
jne
cmp
rcrl
mov
mov
rcll
iret
cmp
mov
jb
cmp
stos
out
mov
push
push
cltd
dec
pusha
jbe
ret
sti
jb
dec
shlb
xor
cmpsl
adc
cld
fcoms
xor
xchg
daa
push
pop
fists
add
pusha
xor
xor
xlat
mov
or
out
test
lea
sub
mov
cmpsl
xor
mov
pop
add
imul
imul
sbb
bound
not
cmpsl
jb
push
lock
out
inc
add
mov
add
mov
mov
pop
inc
cmp
mov
into
fucom
popf
adc
out
push
pop
fs
jo
clc
pop
out
nop
xor
sbb
pop
jne
aas
add
push
andb
lock
imul
shrl
pop
test
dec
repz
fsubrl
xor
push
ret
popa
xor
into
jae
sarl
movsb
and
subb
xor
mov
xchg
ljmp
cli
mov
jecxz
sarl
dec
dec
push
scas
cmc
rcrl
cmp
sub
pop
mov
into
dec
pop
cmc
jae
mov
dec
hlt
cs
cld
inc
rcrb
stos
imul
xlat
in
stos
mov
ss
mov
stos
xchg
aas
std
dec
leave
inc
xchg
imulb
jecxz
or
not
xchg
pop
push
lods
scas
and
and
lret
sbb
hlt
inc
out
lret
xor
push
int3
nop
fadds
adc
ds
jne
out
cmp
cmp
and
and
cmpsb
xchg
ret
lret
popf
xor
cwtl
fnstcw
dec
out
mov
repz
pop
in
sti
push
sahf
inc
mov
sub
mov
mov
add
sahf
out
xchg
sarb
frstor
ret
into
sub
mov
imul
push
lcall
lret
out
stc
cs
test
and
adc
insb
fwait
rcll
out
inc
jne
push
pop
pavgw
mov
push
lock
and
data16
xchg
or
cltd
mov
push
les
mov
shl
adc
repz
cs
mov
or
fidivl
popf
fmul
mov
xor
in
inc
push
inc
inc
ss
call
ljmp
add
scas
mov
mov
or
mov
mov
add
xor
aas
mov
out
in
and
adc
std
xor
dec
lcall
bound
aas
push
in
mov
mov
ja
test
add
dec
jecxz
xchg
dec
stos
loopne
dec
or
aaa
adc
int3
stc
mov
sti
dec
inc
pop
inc
dec
adc
call
std
movl
repz
jle
push
aas
push
mov
lret
cld
cltd
into
ds
mov
das
ret
mov
fldenv
mov
push
cmp
cmpsb
push
adc
aam
popa
sub
daa
dec
bound
pop
ret
icebp
mov
faddp
inc
icebp
or
adc
jmp
movsb
jg
pop
pop
sub
push
icebp
add
sub
adc
pop
popa
adc
and
mulb
int
mov
out
mov
push
jl
and
cmp
imul
outsb
pop
sahf
xor
add
xor
mov
push
dec
xchg
sub
inc
inc
dec
in
cld
scas
push
jp
sbbb
cmp
jae
sti
clc
sbb
out
jo
dec
xlat
or
mov
or
sbb
pop
push
mov
and
mov
imul
sub
pop
add
xor
test
cld
mov
call
into
ss
cmp
mov
cli
rolb
call
lret
aas
cld
and
lea
mov
jg
popa
in
adcb
out
push
mov
inc
leave
repnz
jmp
adc
insb
shll
cmc
push
sub
sub
xchg
adc
lods
add
ds
mov
test
int3
sbb
stos
xchg
in
test
scas
int
hlt
pop
daa
or
ret
sub
in
test
mov
mov
mov
outsb
push
lods
cwtl
cld
sub
dec
ficomps
shr
push
cld
add
jl
sub
loopne
stos
sub
push
test
lds
add
nop
jmp
inc
addr16
in
or
xchg
dec
mov
inc
push
mov
stc
arpl
adcl
xchg
jge
sbb
in
xchg
mov
je
stc
fdivl
pop
mov
sub
aas
add
mov
mov
mov
adc
add
mov
repz
andl
jb
lret
divl
les
mov
jmp
adc
shl
ja
hlt
mov
cmp
add
inc
push
mov
push
stc
jae
pop
cltd
pop
jge
in
shl
fistpl
shlb
imul
dec
fwait
xor
ret
arpl
imul
or
push
out
mov
jmp
cmp
lret
je
mov
lcall
shr
in
test
les
fldl
dec
inc
or
cmp
call
loopne
cld
dec
fsubl
jp
xlat
aam
gs
xor
mov
and
pushw
adc
mov
cltd
inc
popa
push
ja
rcll
mov
or
xor
xchg
xchg
fsubp
mov
in
dec
or
inc
mov
xchg
cmpb
popf
fnstenv
pusha
pusha
push
xchg
test
aad
add
cli
xchg
pusha
push
xchg
enter
hlt
xlat
mov
jns
ret
stc
and
and
ljmp
or
cltd
dec
lods
and
pusha
cmp
mov
add
enter
jle
pop
mov
lahf
xchg
int
pop
ljmp
loop
sbb
aad
jmp
pop
test
test
push
xor
mov
push
lret
ss
cmp
in
push
sub
dec
cmp
or
fmuls
jo
dec
jns
ja
sub
lods
jmp
lds
fucomp
int3
ret
mov
pop
xlat
outsb
and
pop
pop
cmp
fisubrs
ret
mov
fisttpll
sbbl
xchg
and
jmp
ret
inc
push
fmull
insb
sahf
js
sbb
inc
je
cmp
push
or
jge
fistpl
sbb
je
dec
xor
pop
mov
jo
pop
out
scas
xchg
hlt
mov
mov
loopne
in
ss
cmp
pop
cmp
insb
mov
inc
or
aaa
inc
in
xchg
add
sub
in
lea
loope
enter
test
fsub
lods
or
mov
cld
push
push
inc
cmp
push
lea
jle
and
jmp
arpl
stc
jo
popa
push
ds
ret
push
loop
push
popf
or
mov
fwait
insl
jnp
arpl
pushf
lret
cmp
incb
add
lret
out
lods
lcall
into
xor
cmp
int3
and
dec
or
or
mov
jmp
cmp
jg
jge
xchg
popf
pop
cld
add
lods
daa
mov
mov
in
divl
inc
sbb
maxps
dec
icebp
cmc
das
xor
cmp
lahf
bound
push
bound
inc
in
xorl
add
xchg
xchg
mov
aaa
push
sub
and
sbbb
push
ret
mov
call
xlat
cmp
mov
pop
xchg
or
ss
aam
mov
ljmp
out
out
rclb
sbb
or
faddp
xchg
inc
enter
mov
lods
mov
pusha
or
mov
les
pusha
push
dec
jecxz
cmp
and
jns
std
das
add
xchg
fcoms
dec
test
pop
pop
inc
fs
jne
jnp
push
call
idivl
cmp
pop
rclb
inc
ss
pusha
add
or
sub
fmuls
mov
fwait
std
pop
fistpll
lahf
leave
pop
mov
mov
or
adc
mov
push
inc
add
xor
xlat
push
dec
popf
push
add
dec
adc
out
inc
mov
push
ss
jno
das
mov
push
mov
hlt
aad
outsl
adc
adc
mov
pop
test
je
dec
es
rcl
mov
cmp
pop
mov
mov
test
mov
aam
ret
push
shr
aam
sbb
mov
testl
xor
lahf
stos
push
dec
jg
hlt
xchg
or
pusha
push
aam
cli
pusha
mov
sbb
idivb
movsl
sub
aas
mov
push
shrl
mov
push
fcomip
jo
outsl
mov
xorb
jl
imul
and
inc
rorl
ret
loope
iretw
shl
int3
mov
xchg
dec
pop
jmp
jmp
xor
push
mov
mov
mov
jo
xlat
mov
sub
inc
pop
lcall
mov
xor
aad
fsubs
xor
sti
mov
mov
sub
jno
push
adc
pop
test
or
and
pop
lcall
pop
pop
adc
pusha
xchg
mov
inc
push
mov
dec
dec
in
xchg
cmp
movsl
and
fs
and
adc
cltd
mov
jnp
xor
push
and
fs
les
popf
xor
clc
pop
pop
hlt
adc
pop
mov
inc
loopne
rcrb
lock
mov
pop
outsl
add
mov
les
rcll
mov
pop
jg
aad
gs
ds
aad
out
push
sbb
and
dec
cltd
popa
shr
in
out
insb
sub
cmpsb
mov
sub
mov
pop
sub
push
mov
and
shl
rcll
cmpl
xchg
rcl
mov
push
das
add
pop
dec
push
pop
dec
add
xchg
push
lods
push
es
dec
lods
pop
mov
shrb
mov
stos
mov
dec
pop
xorl
and
xchg
dec
lods
test
xchg
xor
mov
jge
aas
push
repnz
fucomi
stos
xor
popf
in
add
add
and
push
popa
pop
lock
shr
decl
mov
xchg
loopne
cmc
cmp
and
mov
arpl
xchg
adc
fyl2x
jl
repnz
push
scas
aaa
mov
mov
scas
in
cli
jbe
mov
cmpsb
in
jb
or
inc
loop
stos
push
jae
inc
push
xor
aaa
sarl
in
sbb
pop
outsl
pop
data16
rorl
cwtl
mov
pushf
fwait
test
jnp
sub
jl
mov
and
lds
dec
sub
orb
cli
adc
insl
xchg
aaa
add
cmc
lcall
sarb
lcall
and
lea
dec
fs
jg
sub
mov
mov
xchg
lret
xor
stos
mov
push
cmpsb
dec
repnz
mov
movsl
in
roll
mov
inc
xchg
and
ljmp
es
lea
and
pop
mov
fadd
mov
adc
dec
les
pop
sarb
and
js
or
xchg
js
cmp
aad
pop
inc
sbb
stos
cmpsl
sbb
jnp
pop
or
fcmovnb
mov
jge
out
jne
stos
mov
and
dec
sub
pop
sbb
rclb
gs
popa
adc
mov
jne
jmp
push
in
xor
push
and
mov
pop
lock
test
aaa
jmp
mov
cwtl
lret
lods
mov
dec
xchg
aad
xchg
or
aad
mov
call
idivb
mov
cld
push
movsb
sub
adcb
mov
adc
mov
mov
dec
pusha
pop
out
xor
dec
mov
lock
into
pop
inc
mov
pop
test
cltd
test
mov
mov
repz
mov
push
jl
xchg
ja
ret
push
repz
scas
jne
mov
aam
dec
push
push
es
pushf
orb
xchg
es
add
sub
jmp
mov
sbb
test
cmpsl
inc
or
out
test
popa
or
push
jb
or
int3
sbb
lods
mov
mov
xor
and
xorb
imul
and
cmpsl
icebp
adc
and
inc
mov
xor
movsb
lcall
or
pop
add
xchg
shrl
inc
fnstsw
mov
enter
mov
fs
cmpsl
test
jbe
sbb
mov
jnp
jae
mov
mov
insb
jp
push
orb
testl
mov
pop
loope
xchg
jo
xchg
stos
fisubrs
in
loopne
sbb
lret
mov
mov
cmp
sar
cmp
dec
ljmp
out
in
shr
adc
hlt
jbe
ja
mov
movsl
push
pushf
or
repz
sbb
scas
out
test
adc
divb
inc
dec
pop
cmp
out
push
pop
add
incb
ljmp
xchg
aaa
call
push
pop
repz
enter
aaa
adc
aad
ret
jmp
movsb
or
mov
mull
mov
mov
clc
push
insl
test
mov
ret
stc
insb
imul
sti
jg
pusha
cs
cs
add
add
xor
adc
stos
negl
inc
mov
push
mov
scas
and
cmp
rcll
inc
push
gs
sub
dec
daa
pop
or
imul
mov
ljmp
mov
jl
mov
cmp
popl
cmp
adc
not
inc
push
and
test
inc
pop
pushf
in
pop
sub
sub
cltd
cli
sub
fcoms
xorb
out
sub
aad
push
ret
mov
out
lret
pop
or
arpl
xchg
test
in
inc
inc
add
js
pushf
sub
repnz
shll
push
add
xor
inc
loopne
sbb
xchg
fs
mulps
lods
je
ljmp
cmpsb
pop
int
and
xchg
xchg
pop
jge
cmpsb
outsb
insl
jns
sbb
inc
pop
adc
sti
arpl
testb
adc
push
test
cltd
mov
ja
aas
mov
cs
dec
sub
fstpl
pop
cmp
mov
sbb
aam
test
push
jb
stos
adc
push
lods
imul
mov
mov
pop
jae
mov
push
inc
mov
adc
mov
xor
add
adc
lret
loopne
sub
and
cmp
sbb
je
mov
insb
pop
dec
sub
out
push
pusha
testb
lcall
add
sbb
andb
sbb
movsb
mov
cli
out
in
inc
and
shl
popa
pop
or
pop
in
scas
aam
jecxz
cmpsb
shrb
and
mov
sahf
ljmp
cmp
bound
ror
test
mov
adc
ss
movsb
inc
inc
adc
test
mov
and
xchg
mov
add
ja
repnz
dec
pop
dec
dec
loop
loopne
jnp
movl
xor
adc
mov
in
mov
fldt
xor
mov
dec
push
xchg
aad
and
aaa
rcr
movsb
lret
aad
scas
ret
sbb
out
pop
sbb
xchg
dec
flds
fs
je
adc
push
enter
call
shrl
mov
pushf
test
lds
and
dec
movsl
xor
adc
mov
jmp
rcll
enter
mov
fwait
jge
and
push
mov
and
and
mov
ret
sahf
jae
out
idivb
jbe
or
test
xor
cmp
int3
and
pop
insb
mov
add
jmp
outsl
jle
mov
cli
and
push
iret
jmp
jae
repnz
rcr
movsb
push
add
testb
dec
add
mov
add
scas
or
stc
gs
lret
jecxz
inc
or
jnp
xor
push
das
inc
iret
incl
xchg
stos
pop
inc
pop
adc
jp
shlb
in
pusha
adc
in
xor
into
or
cmp
inc
push
or
cmpsb
dec
cmpsb
mov
and
pop
xchg
xlat
sbb
dec
iret
jnp
or
popa
dec
shrl
pop
sti
mov
mov
cwtl
mull
aad
jecxz
sbb
or
sub
add
sub
jne
in
call
push
loopne
aas
dec
das
pop
movsb
fsubrl
jmp
lcall
sub
dec
js
andl
mov
data16
mov
pop
jb
add
sbbl
lods
jns
mov
sub
mov
sub
pop
mov
or
loopne
movsb
xor
fsts
jnp
inc
xchg
pop
pop
pop
out
movsl
cmp
in
fisubl
popa
cli
pop
les
add
lret
cltd
in
push
outsl
std
outsl
adc
jmp
lods
stos
out
imul
int
pop
pop
xor
dec
jns
sti
pusha
add
js
decl
xchg
out
mov
jmpw
lds
mov
xchg
test
f2xm1
adc
mov
inc
jg
aas
adc
out
adc
movsb
pop
aaa
je
in
fwait
mov
jne
fstpt
push
pop
mov
test
andps
sbbl
or
mov
jle
aam
or
xor
dec
dec
push
pmulhw
dec
lahf
mov
fcomps
pop
jecxz
jnp
dec
inc
adc
lds
inc
test
pop
pop
jmp
adc
fcomp
ljmp
inc
dec
in
mov
scas
call
out
inc
ds
dec
xor
lret
out
sbb
rclb
sbb
imul
out
lret
es
and
fcmove
mov
add
daa
dec
in
sti
inc
jg
jg
insl
inc
xor
jb
fnsetpm(287
push
in
mov
repz
call
jo
adc
push
dec
cmpsb
leave
mov
imul
xchg
ret
int
pop
mov
filds
mov
stos
loope
daa
shl
jno
mov
insl
xchg
shll
push
in
shlb
shrl
mov
cld
mov
sarl
lea
stc
jg
mov
aad
jmp
mov
cmp
sti
pop
sbb
fimull
hlt
jne
into
lahf
or
pop
and
adc
inc
test
testl
popf
sti
cmp
inc
outsl
lahf
jp
loop
cld
xchg
cmp
sub
mov
dec
mov
and
xorb
sub
in
rcrl
insl
mov
out
pop
jae
mov
mov
aam
pushf
icebp
adcl
push
adc
cmpl
jmp
jg
and
fbstp
daa
pop
or
xchg
fnsave
push
inc
addr16
or
xchg
rorb
xchg
int
jnp
mov
or
mov
and
outsl
cmc
mov
addb
out
shlb
push
pusha
cs
mov
je
and
sbb
fildll
and
or
jno
fdivl
es
xchg
xor
dec
pop
add
leave
test
jp
adc
inc
cltd
sbb
xor
pop
add
pop
lock
data16
add
or
push
pusha
ss
and
and
js
test
fbstp
out
shr
and
mov
mov
hlt
pusha
popa
andl
and
ja
xor
or
cmp
jae
or
mov
out
dec
mov
sbb
pop
mov
adc
jns
lock
adc
aaa
cmpsl
clc
test
roll
fimuls
xor
cli
push
test
popf
iret
scas
jbe
std
or
mov
bound
push
clc
push
pop
sub
popa
iret
repnz
sbb
pop
es
inc
and
xlat
adc
pop
add
scas
icebp
push
les
jb
and
inc
mov
addl
and
inc
sbb
or
inc
dec
sbb
xchg
jge
jp
out
ret
and
out
dec
xchg
inc
mov
jns
fs
mov
or
xchg
add
jbe
xchg
scas
xor
pop
sub
inc
das
add
lret
out
or
and
into
cmc
cli
adc
sub
es
cmp
into
arpl
clc
jo
sub
xlat
mov
lock
push
lock
outsl
adc
movsl
mov
jnp
mov
cli
mov
jno
push
mov
push
and
cs
dec
lds
mov
scas
mov
call
push
insb
lods
cmpsb
jecxz
push
mov
in
fmuls
cs
pop
std
aaa
or
outsb
ljmp
int3
js
push
or
imul
rcrl
ret
pop
push
add
bound
or
imul
inc
ss
add
outsl
sbb
mov
mov
or
aad
mov
fists
push
jecxz
in
adc
popf
mov
shr
adc
out
outsl
dec
in
lds
sarl
sbb
mov
lcall
aas
inc
sbb
nop
ret
test
insl
push
push
push
aad
pop
dec
pop
xchg
pcmpeqb
cwtl
sbb
jecxz
aad
gs
mov
adc
adc
mov
in
jae
orb
jmp
adc
enter
js
pop
xor
loope
or
fadd
test
mov
cmpsl
loopne
out
iret
rcll
in
int
es
sbb
rcrl
sbb
xor
jno
or
sbb
cmc
in
xchg
iret
dec
test
ljmp
sbb
shlb
cwtl
in
out
sbb
mov
sbb
pop
pop
and
xchg
jnp
mov
or
ja
push
roll
sahf
in
or
fs
fwait
pop
or
bound
mov
lcall
mov
jno
sbb
dec
rclb
mov
je
sub
and
xchg
arpl
bound
jge
pop
jmp
mov
or
cltd
sbb
mov
int
fisubrl
clc
iret
outsl
jp
and
inc
mov
inc
inc
repnz
pushf
pop
or
push
insl
sbb
mov
packssdw
insl
ds
mov
sar
pop
into
mov
cmp
mov
popa
inc
jl
aad
mov
scas
sbb
jge
mov
mov
mov
negl
es
out
in
jnp
xor
cmp
cmp
ds
ficomps
cwtl
cltd
mov
sub
adcl
scas
out
mov
dec
pop
jo
xor
mov
xlat
mov
mov
ds
insl
sbb
test
ret
adc
push
iret
mov
les
or
fcom
or
pop
divb
in
sbb
in
test
cmp
fs
sbb
sub
imul
sbb
xor
xlat
mov
push
clc
testl
push
call
cli
notw
sti
xchg
jb
aam
inc
sub
pop
push
lds
pop
sahf
xchg
jno
leave
inc
mov
je
dec
adc
lock
pop
rcrl
jge
pop
popa
push
fnstenv
movlps
bound
xchg
shl
fs
sub
mov
sbb
pop
rcrb
insl
and
add
test
mov
inc
nop
dec
and
movsb
inc
and
pop
xor
and
fcmovu
dec
mov
or
dec
arpl
fwait
jo
or
sub
mov
sbb
sbb
sbb
and
mov
push
xor
test
out
dec
sahf
inc
mov
cmp
and
sub
imulb
mov
mov
sbb
pop
cmpsl
push
imul
or
dec
cwtl
pop
aad
imul
pop
adc
sbb
test
pop
xor
inc
ret
cmp
and
cltd
push
jne
sub
rcpps
aam
in
pop
adc
in
and
cli
mov
push
repz
movsl
mov
lea
push
dec
jl
sub
iret
xchg
xchg
jge
jne
adc
pop
sar
adc
shrl
fimull
mov
les
xor
aas
outsl
sub
test
mov
jl
add
and
xor
mov
fs
imul
dec
das
cltd
dec
mov
imul
pop
test
jbe
jp
sbb
xor
lret
outsl
mov
fisttps
cs
ljmp
call
adc
divb
mov
dec
insb
dec
dec
cmp
dec
cmp
daa
int
xor
lahf
xchg
loope
and
sbb
adc
loopne
loopne
out
xor
fucomp
dec
adc
push
push
mov
pusha
subl
add
inc
lcall
xchg
jae
mov
mov
xchg
imulb
jns
dec
arpl
mov
xchg
xchg
loop
jmp
add
gs
mov
mov
aam
cwtl
nop
mov
mov
leave
leave
dec
or
dec
gs
adc
sti
adc
or
jp
jp
arpl
add
dec
jmp
jge
dec
mov
in
insl
jo
jmp
mov
movsl
outsl
jbe
xlat
repz
ds
in
das
fnstenv
or
gs
sub
stos
xor
pop
push
shll
insl
movsb
inc
mov
xlat
push
hlt
icebp
das
es
push
cmp
dec
aas
push
dec
in
scas
das
xor
sbb
jnp
cmpsl
iret
mov
test
jne
in
sub
push
or
mov
shll
dec
cmpb
sub
pop
xchg
pop
mov
inc
pushf
shlb
xchg
sub
cmpsl
cmpsb
inc
push
stos
mov
sub
cmp
and
sbb
cmpsl
and
je
xor
cmp
sub
out
pop
in
cmp
daa
adc
sahf
pop
add
xchg
imulb
inc
cltd
test
jmp
and
mov
and
xorb
std
mov
leave
inc
mov
insb
pushf
clc
in
sub
ja
xor
inc
jl
fiaddl
ds
std
std
inc
jnp
mov
xor
clc
xchg
insl
add
adc
call
rcrb
xchg
call
sbb
xchg
mov
out
out
add
xchg
jbe
data16
sbbl
mov
add
or
cmpsb
or
fcomp
popa
mov
inc
jg
dec
xor
rcrl
mov
aad
out
insl
lret
xchg
xor
jbe
stos
std
mov
shlb
nop
faddl
jnp
jnp
loopne
movsl
mov
pop
int
bound
ss
or
push
dec
push
xchg
inc
and
push
mov
fsubs
das
or
mov
repz
dec
mov
jae
and
lret
dec
int
mov
aas
fidivrs
mov
out
fsubrl
sti
push
insb
loope
aaa
test
mov
pandn
cmp
and
xchg
lcall
jle
fsubr
idivb
or
mov
mov
fldenv
pop
add
loopne
daa
push
into
mov
cmp
mov
leave
pop
enter
mov
dec
iret
push
jne
int
rorb
sbb
add
mov
mov
add
fsub
daa
je
mov
nop
jp
fs
add
sbb
jp
jle
call
lahf
pop
nop
lret
test
lds
in
leave
addl
jle
or
repz
call
lea
xchg
adc
jne
repnz
clc
cwtl
inc
test
jne
aad
xor
dec
xchg
adc
stc
arpl
jbe
sbb
into
mov
mov
mov
sub
jne
dec
push
ret
sub
push
mov
ret
movsl
in
adc
sti
clc
test
fwait
insl
mov
pusha
xlat
jne
call
dec
sbb
sub
mov
fcmovne
mov
negl
daa
incl
push
cmpsb
push
xor
gs
pop
je
daa
jmp
repz
mov
aaa
dec
jne
or
and
repnz
cltd
stc
mov
and
imul
cwtl
pop
sub
add
inc
push
adc
pop
xchg
add
push
dec
cli
push
out
notl
orl
mov
roll
cmp
ss
shll
cmc
imul
jb
jo
mov
dec
mov
hlt
dec
or
fwait
sub
pop
xor
push
cmp
and
flds
sahf
fadd
mov
sbb
mov
cli
jge
xor
mov
test
jne
adc
fistpll
iret
ret
lea
insl
push
notl
movsl
xchg
sub
jl
call
push
inc
jno
dec
lahf
imul
cmp
jbe
in
sti
repnz
adc
sub
push
mov
mov
add
stos
hlt
data16
sub
or
xchg
or
lahf
dec
aad
pop
outsl
mov
aaa
sbb
loop
imulb
in
xor
add
hlt
jnp
in
mov
or
and
mov
add
sub
inc
stos
pop
inc
icebp
sbb
mov
push
sbb
popf
leave
xchg
mov
inc
mov
jnp
rcrb
mov
adc
mov
xchg
dec
mov
mov
and
jle
jb
mov
shlb
outsl
arpl
test
jo
jb
sub
loopne
mov
dec
vmovntpd
gs
inc
lods
mov
fdivl
stos
xchg
ss
and
push
daa
mov
adc
sti
push
add
dec
add
jae
out
mov
je
dec
adc
jmp
add
mov
add
hlt
out
cld
jno
sub
sub
fisubrs
push
xchg
sub
xor
dec
cmp
pop
and
orl
and
sahf
cmpsb
sub
xchg
xchg
xlat
aam
and
fwait
jecxz
pop
inc
push
int3
mov
mov
xor
sub
mov
xchg
lcall
shrl
adc
subb
jp
sbb
mov
cmovl
and
cmpsb
cmp
sbb
ret
xor
lods
fisubl
add
cmpsb
testb
subb
subl
data16
aam
test
out
into
js
add
jne
aas
sbb
out
add
add
test
lcall
fnstcw
scas
shr
int3
fbstp
cmp
outsl
inc
xchg
lahf
cwtl
aam
and
xor
and
push
mov
movsb
sarb
sbb
sarb
push
or
lea
pop
cmp
enter
mov
scas
adc
rcrb
mov
loope
pop
cmp
push
jb
push
adc
loope
dec
mov
adc
add
or
fidivrs
adc
mov
xor
arpl
data16
ret
rorb
mov
imul
ds
subb
pop
nop
pop
jns
pushf
jmp
mov
icebp
or
pusha
or
mov
test
das
sub
stos
popa
push
cmp
push
lock
push
lods
cmp
push
test
mov
stos
out
test
pop
pop
adc
mov
popa
pop
int
dec
inc
cmc
xchg
int3
adc
out
lods
or
or
imul
dec
dec
ja
int3
lods
inc
jmp
orb
int
jbe
and
xor
dec
dec
push
lcall
ficomps
sbb
fmull
sub
pop
xchg
adc
sahf
addr16
xor
test
xchg
or
cmp
cmp
loopne
push
mov
fidivl
test
jl
arpl
xor
sbbl
icebp
adc
fcomps
daa
fistps
lods
inc
push
or
jg
xchg
lret
stos
mov
add
jns
xor
lret
sahf
popa
and
add
push
inc
lods
inc
xchg
sub
mov
mov
outsb
popf
push
cmp
push
push
out
mov
icebp
sbb
cli
out
mov
data16
out
jecxz
mov
adc
in
pushl
sarl
mov
xchg
in
ds
in
inc
ret
add
sti
cmp
or
out
movsb
out
adc
or
rcrl
js
js
inc
dec
and
cmpsl
inc
leave
xchg
mov
addl
add
imull
sbb
roll
cmp
xchg
pusha
stos
imul
pop
adc
jb
adc
adc
rcrb
cmp
loop
push
popa
mov
ds
into
es
mov
add
mov
mov
shll
in
outsb
mov
out
jo
push
movsl
xorl
adc
mov
jecxz
inc
dec
ljmp
add
mov
add
and
mov
push
jecxz
js
and
xor
adc
cmp
sub
pop
mov
jb
pcmpgtw
stos
lahf
cld
mov
add
cli
aas
test
daa
das
jno
push
addl
popf
pop
lret
imul
sbb
repz
adc
xchg
mov
imul
push
adc
int
push
and
imul
fidivrs
xchg
divl
in
mov
lahf
pop
lret
fimuls
cli
jbe
test
cmp
lock
add
jecxz
jmp
divl
mov
pusha
cmp
lahf
push
push
push
das
int
iret
fadd
push
test
sub
jmp
xchg
lret
test
and
xor
cmp
mov
in
or
cmp
mov
add
arpl
or
cmc
jo
jmp
mov
xlat
pop
insl
andl
movsb
ds
xor
imul
fsubrl
scas
enter
andl
jae
cmp
xchg
ljmp
lahf
and
fld
sub
ficoml
sub
xchg
or
movsb
test
cmc
inc
stos
movsb
jae
lds
rorb
sub
stos
and
pop
jae
sti
inc
mov
dec
xchg
sub
icebp
push
lea
add
mov
xchg
popf
lret
inc
mov
dec
mov
and
lret
pop
xor
jle
sub
lods
mov
sbb
dec
insb
inc
fadd
mov
mov
push
jge
pop
pop
je
sub
es
pop
mov
jmp
popf
lods
shrb
pop
mov
mov
push
jb
int3
fs
cmp
pop
xchg
dec
scas
cmc
into
fs
cmp
mov
sbb
lcall
fwait
psrld
pop
ret
addr16
add
icebp
lcall
lods
lcall
cs
in
cmp
xchg
shl
push
leave
mov
xchg
sbb
cmp
lahf
and
xor
jae
dec
insl
nop
jmp
add
xchg
lds
out
jno
outsb
pcmpeqb
adcb
inc
sub
mov
inc
mov
jecxz
cli
push
out
insl
sub
xor
xchg
mov
enter
aam
jle
dec
xor
shlb
mov
loope
mov
in
mov
or
sti
cwtl
mov
pusha
outsb
scas
ret
pop
in
clc
sub
jp
hlt
sbb
add
mov
imul
lcall
add
push
ret
adc
add
repnz
xor
fidivl
jmpw
sbb
repnz
cs
add
fisubrs
icebp
xchg
stos
dec
data16
pop
sbb
adc
sub
in
jnp
mov
ss
mov
loop
add
mov
sbb
lret
cwtl
dec
test
mov
xchg
sbbb
inc
push
jne
pop
and
or
and
popa
idivl
les
inc
subb
cmp
push
cmovl
sbb
jl
xor
dec
dec
clc
pop
rcl
or
test
mov
cmc
inc
loopne
inc
std
mov
call
adc
xor
mov
mov
xchg
lahf
adc
push
sbbl
and
dec
add
push
push
sub
pop
int
mov
mov
xchg
ljmp
ret
or
xor
cmpsl
cld
mov
mov
and
sub
xor
dec
mov
in
or
insb
inc
repnz
inc
mov
lds
adc
xchg
in
lods
mov
hlt
push
mov
and
pop
dec
movsl
loop
add
stos
sbb
scas
push
stos
xchg
in
push
pop
outsb
call
scas
mov
repnz
xchg
adc
decl
dec
scas
push
pop
and
inc
add
pop
lds
movsb
mov
insb
aas
stc
mov
jns
sbb
sbb
mov
dec
fnstsw
cli
dec
movsb
add
adc
sub
cmc
cmp
adc
jl
ja
cmp
rcl
adc
and
mov
scas
pop
test
jmp
mov
loop
imulb
inc
cmp
mov
mov
insl
mov
out
lods
jbe
xor
outsb
fnstcw
cmp
int3
cld
fistpll
shl
mov
shll
mov
aaa
cltd
pop
fldt
push
negl
sbb
dec
xor
add
pop
jle
filds
lods
mov
inc
push
or
push
ss
repnz
addr16
int
mov
and
scas
and
mov
xchg
and
pop
ret
push
inc
dec
mov
jne
and
jo
stos
xchg
out
lahf
push
xchg
fstl
xchg
mov
push
or
popf
sbb
mov
xor
cmpsb
in
xor
insb
mov
notb
outsl
push
mov
sti
and
xchg
mov
xorl
mov
jae
jno
or
lahf
scas
pop
pop
pop
inc
test
lods
imul
lea
mov
into
push
les
sub
ret
push
xor
subl
jecxz
adc
enter
dec
sub
cmpsb
out
leave
fwait
arpl
shrb
movd
jbe
cmc
mov
add
inc
sbb
popf
push
cmpsl
insl
pop
jle
xchg
icebp
xor
or
xchg
sub
or
shlb
subl
xchg
dec
mov
in
sub
push
aas
cld
pop
ss
jp
xorl
mov
inc
out
sub
loopne
jge
icebp
xchg
inc
das
lods
or
dec
sub
xchg
imul
push
call
sbb
stos
xchg
mov
lea
mov
inc
mov
addr16
loope
adc
or
aaa
push
jle
xor
aaa
inc
cmp
push
mov
push
mov
shrb
adc
insb
scas
push
inc
fidivrl
jl
loope
loop
testb
fcompl
cmpsl
clc
or
push
xor
adc
cmp
jbe
pushf
cld
push
push
jp
mov
outsb
mov
subb
movsb
jo
into
lds
mov
cs
sub
add
inc
loop
inc
repz
test
xor
int3
jae
fisubs
push
out
xor
push
data16
int3
ret
push
shl
vphsubbw
movsb
stos
xchg
mov
repz
cli
cmpsl
jnp
jns
pop
aas
adc
lret
adc
mov
inc
mov
out
lock
lods
aaa
aaa
aad
out
fcomps
jns
mov
sbb
jp
imul
mov
mov
lods
fnstsw
lock
mov
test
mov
in
es
pop
ss
push
in
addl
filds
or
sub
pop
cmp
test
sbb
and
loop
pop
inc
roll
into
mov
cmp
insb
outsb
ret
and
and
shll
movsl
inc
getsec
stos
mov
test
pushl
dec
push
sbb
iret
jnp
adc
mov
adcb
repz
and
jnp
and
dec
test
dec
in
fdivs
xchg
leave
bound
push
push
pusha
repz
stc
xlat
decl
mov
pop
dec
pop
js
cmpsl
popa
cli
pop
add
add
push
dec
sub
pop
fcompl
pop
sbb
adc
fists
pusha
out
shlb
js
sub
push
addb
and
dec
add
and
inc
out
shlb
mov
cli
aad
dec
or
jae
iret
outsl
xchg
push
adc
mov
jo
push
lretw
lret
in
jp
or
fisttpll
orl
stos
pop
stc
in
sbb
int3
mov
push
sahf
mov
mov
ret
dec
inc
cltd
imul
mov
dec
lret
movsb
push
dec
rcrb
xchg
sub
mov
inc
lock
out
and
push
xlat
mov
loope
dec
mov
inc
scas
xchg
lahf
into
xchg
pusha
addr16
add
cmp
aas
pushf
and
xchg
adc
out
mov
mov
je
mov
stos
push
sub
xchg
iret
mov
and
mull
cld
jmp
repnz
enter
lret
and
xlat
fisttpll
jge
mov
push
arpl
sub
rolb
mov
jp
lret
mov
into
popf
xlat
aam
addr16
adc
fidivrs
imul
xor
outsl
pop
fildl
idivl
inc
sub
xchg
lret
data16
lods
fdivrs
sbb
and
mov
out
sub
nop
pop
js
scas
push
cmp
sti
cmp
stc
adc
inc
inc
jl
scas
fcomi
int3
clc
lcall
popa
fldlg2
lret
repz
cmp
jl
nop
loope
nop
push
movsl
add
mov
pop
in
cwtl
in
rcl
shll
xchg
insb
or
inc
aaa
outsl
adc
xlat
sbb
cmp
int
adc
aam
mov
adc
mov
lret
test
popf
repz
rolb
dec
sub
nop
xchg
js
sbb
xor
cmp
push
sub
lahf
out
js
int3
push
jbe
push
test
mov
sub
sub
mov
push
out
fdivl
lcall
adcb
sbb
lods
or
clc
stos
xor
sub
sbb
mov
or
and
cmp
out
out
loop
cmpsl
rep
inc
popf
aam
arpl
xor
int3
repnz
mov
lcall
popf
cld
xor
jecxz
or
adc
lahf
mov
mov
aam
out
fwait
mull
call
js
inc
jl
lds
pop
int3
in
les
pop
sub
xor
repnz
xor
or
push
adc
dec
inc
sbb
xor
xchg
mov
or
jmp
mov
mov
sbb
mov
stos
mov
inc
xor
cmp
sbb
inc
xor
fcom
sub
or
out
shll
test
xchg
cmp
loop
pop
cld
mov
adc
push
pop
stos
subb
in
dec
pop
cmp
in
rcll
call
sbb
insb
aam
cwtl
fimull
mov
fstpt
fmul
mov
or
xor
mov
and
or
rcrl
inc
repz
shl
mov
inc
out
rcl
add
std
push
dec
in
pop
xor
jno
push
and
cmpsl
arpl
or
cwtl
mov
imul
cld
cltd
mov
mov
mov
int
adc
sti
or
xor
jo
add
push
stc
dec
roll
data16
je
xchg
test
cmp
ds
leave
leave
out
addb
mov
jge
cmpsb
das
jb
sub
adc
cmp
jae,pn
fsubrs
lock
xchg
in
dec
leave
push
push
pop
mov
push
xchg
or
mov
adc
jns
lahf
push
add
mov
mov
jmp
or
or
popf
mov
adc
inc
cmpsl
add
add
iret
cmpsl
dec
adc
cmp
mov
pop
repz
dec
sub
push
lock
mov
shlb
je
or
fs
mov
addr16
sub
and
mov
in
cmp
xchg
sub
cmp
push
jnp
xchg
inc
push
into
pop
push
inc
add
mov
jb
aam
lock
data16
pop
scas
push
cmp
adc
inc
orl
les
inc
aad
sbb
loope
fimuls
xchg
dec
xchg
mov
jmp
outsl
call
leave
scas
push
push
push
fsts
hlt
aaa
cmp
jae
pop
dec
inc
cmc
xor
jbe
xor
lcall
pop
lahf
sbb
xchg
dec
inc
inc
cmp
ret
sub
stc
push
mov
cld
pop
int3
sub
sbb
adc
jns
outsl
adc
lods
sub
adc
rcrl
mov
mov
pop
xor
jne
sahf
insl
pop
cli
iret
outsl
and
clc
xor
and
push
enter
stc
inc
jne
bts
cltd
push
add
rcl
push
adc
or
mov
jno
push
lcall
mov
xor
shl
jp
jns
dec
adc
xchg
mov
stc
pop
jo
inc
inc
jo
sbb
and
ja
sbb
fistpl
repnz
or
into
sbb
insl
add
push
ret
in
fistpl
js
sub
jnp
xchg
sub
cwtl
orb
xchg
out
jo
add
mov
adcb
mov
push
cli
pusha
test
push
int
mov
dec
cli
es
push
in
xor
notb
icebp
in
push
sbb
testb
xchg
shrl
jp
orb
pop
mov
and
pusha
shrb
jo
xlat
or
rolb
pop
in
lret
ficoml
inc
test
pop
push
inc
add
xchg
push
or
cmc
aam
jne
nop
jbe
aam
inc
push
dec
sub
arpl
mov
mov
cld
dec
push
inc
xor
bound
jb
lods
aam
xor
dec
dec
insl
and
adc
rclb
int3
pop
test
pop
cld
push
xor
lret
fcmove
fsts
fcoml
mov
sti
mov
scas
xor
and
and
out
cmp
repnz
jb
sbb
mov
pushw
sub
sti
mov
jge
stc
and
dec
pushf
dec
stos
sahf
mov
mov
xor
jae
mov
je
jmp
cmpsl
jge
test
out
xchg
iret
test
inc
jne
cmp
cwtl
and
cwtl
sbb
ja
outsl
sbb
fists
inc
cmp
aam
insb
rol
push
stos
lea
stos
int3
pop
mov
lcall
pushf
inc
test
dec
call
mov
hlt
in
idiv
add
imul
fisubrs
push
jecxz
dec
shlb
int3
sbb
mov
push
es
pop
lods
pop
inc
push
sbb
xchg
pushf
js
sahf
push
adc
aas
mov
fcoms
pop
or
pop
adc
cmpsb
int3
mov
out
dec
pop
ss
mov
pop
rcrb
pop
stc
push
jmp
popa
pop
inc
xchg
les
push
subl
icebp
testl
cld
ficoml
mov
test
inc
outsl
cld
lretw
dec
ret
or
or
push
daa
push
mov
insl
jg
mov
jae
js
mov
mov
xchg
out
ja
roll
stos
xor
scas
xor
outsb
mov
sbb
leave
stc
jae
popa
sbb
pop
push
sub
lds
int3
sub
lcall
cmp
mov
or
xor
jecxz
inc
push
stc
mov
je,pt
xor
pop
lock
and
fwait
addr16
imul
jno
mov
adc
dec
fidivrs
out
aad
push
fldenv
sbb
movsl
and
scas
and
lret
mov
cwtl
add
inc
dec
and
roll
push
mov
adc
jno
and
andb
pop
repnz
lock
mov
test
mov
sbb
bound
xor
cmpsl
xorb
nop
and
inc
inc
int3
xor
xor
test
in
adc
push
adc
stos
dec
xchg
mov
inc
adc
ret
push
addr16
sbb
movsb
mov
lods
stc
adc
sub
push
lret
ljmp
std
hlt
push
jmp
cmp
popl
and
push
dec
imul
inc
or
sti
repnz
in
ret
gs
dec
pop
mov
inc
lret
lock
dec
hlt
into
das
ja
add
add
stc
jae
pslld
sbb
lea
inc
les
sub
out
cmp
insl
xchg
sbb
jge
push
iret
dec
testb
inc
pop
js
lods
ljmp
cmp
push
xor
xchg
jmp
into
dec
adc
aam
xchg
dec
notl
dec
fs
dec
je
repnz
fistpl
pop
les
in
mov
push
pushl
mov
shll
cli
xchg
xchg
mov
mov
popf
clc
jnp
out
ret
cmp
push
sbb
js
sti
std
gs
stos
add
mov
cmp
test
sub
in
sub
mull
pop
adc
lcall
fcomip
mov
cli
js
ljmp
rol
inc
inc
push
hlt
imul
adc
loope
repz
out
push
mov
jge
das
pop
insl
ja
pop
loope
aam
push
xchg
movb
xchg
jbe
out
rol
dec
adc
mov
rcr
and
jecxz
adc
dec
scas
jno
adc
cmpsl
mov
pop
dec
sbb
pop
popa
fisubs
cmc
fdiv
enter
gs
arpl
xor
inc
stc
mov
adc
adcb
sahf
dec
pop
repz
mov
or
mov
in
ljmp
int3
mov
xchg
sarb
sbb
pusha
lcall
fmuls
sub
push
dec
rol
pop
xchg
fnstcw
cmp
jno
sub
ds
ret
mov
or
push
popa
mov
scas
sbb
mov
or
cmp
xchg
mov
lds
cmc
repnz
lock
dec
int3
xor
test
in
sub
pop
stos
xlat
lea
dec
rclb
insl
push
fidivs
cld
inc
lahf
daa
push
fstpt
out
in
add
push
cmp
dec
add
and
jl
sahf
ror
rclb
mov
sub
push
sub
je
pop
xchg
adc
test
dec
jp
mov
sarl
xor
xchg
dec
adc
stos
andb
sbb
repz
cltd
int3
mov
insb
mov
icebp
and
sub
aam
dec
xchg
push
push
mov
mov
pop
aad
fiadds
js
pop
lret
dec
mov
dec
and
mov
test
adc
inc
gs
and
shlb
jle
int3
pop
mov
cltd
jb
lahf
in
dec
in
in
in
std
pop
add
stc
movsb
cmp
pushf
cmc
jmp
push
cwtl
pop
push
movsb
out
sub
ja
sub
scas
popa
inc
pop
mov
pushf
xchg
aam
lods
icebp
adc
pusha
out
andl
shrl
jnp
dec
jae
and
lret
mov
fstl
outsb
cmp
adc
mov
popf
imul
mov
mov
f2xm1
jmp
sti
movb
dec
out
ljmp
jae
or
js
shll
pop
inc
lret
push
mov
dec
push
pop
fwait
sub
aaa
call
sti
jmp
sahf
sub
dec
in
scas
fdivl
mov
dec
lods
or
and
ffree
notb
mov
leave
inc
add
aad
pushf
xchg
dec
mov
sarb
or
je
add
sub
bound
mov
pop
stos
imull
mov
outsl
cmpsb
ret
xchg
jae
call
je
xchg
int
data16
mov
fs
push
movsl
mov
cltd
scas
inc
mov
add
repnz
pop
sahf
sub
pop
es
jmp
mov
jecxz
mov
xchg
mov
xchg
inc
cmp
sub
sub
insl
or
sbb
inc
out
ret
test
cmp
pop
push
lods
hlt
xor
mov
cmp
in
into
jecxz
gs
xchg
pop
shrl
cmpsb
popa
inc
icebp
dec
outsl
fcoml
inc
push
xchg
mov
leave
mov
ficompl
mov
imul
pop
inc
and
and
push
popa
mov
sbb
fbstp
out
push
adc
and
int3
and
pushf
mov
test
or
leave
movsl
xchg
push
out
clc
push
icebp
dec
xchg
inc
das
cli
mov
xchg
call
jge
push
jmp
xor
mov
jno
xchg
pusha
push
pop
mov
inc
cmp
pop
in
and
fwait
pop
int3
jo
femms
xchg
enter
cmp
test
inc
mov
xchg
sub
adc
jns
or
inc
jl
and
dec
mov
dec
ljmp
push
icebp
fwait
sbb
push
rorl
iret
insb
les
gs
or
out
cs
es
mov
push
inc
pop
movsl
and
lea
nop
cmp
test
lods
inc
jne
inc
adc
xorl
push
les
sbb
inc
sbb
mov
mov
ds
popf
imul
xchg
fidivl
into
fisttpl
sahf
ret
jmp
test
pop
lods
repnz
push
js
addr16
movsb
xor
dec
outsb
fstpl
mov
push
lods
cmpsb
pop
lea
or
jnp
cmpsl
pop
mov
mov
outsl
jmp
in
xchg
cmp
sbb
and
outsl
aam
outsl
repnz
adc
push
cmpsl
xor
in
dec
xchg
xor
pop
loop
jo
daa
sub
sub
adc
pop
mov
adc
fnsave
cmpsl
popa
loop
or
xor
icebp
sub
out
sbb
inc
je
cmp
shlb
push
jmp
jl
mov
xor
sub
clc
push
jne
ja
insl
jns
mov
push
xchg
lret
es
lds
adc
test
mov
pop
and
sbb
das
and
clc
outsl
lea
or
sub
in
jo
jne
aas
xchg
lea
imul
inc
xchg
fimull
push
ss
scas
push
sbb
lods
xor
cmp
dec
movsl
dec
sbb
cwtl
dec
push
fwait
icebp
dec
or
pushf
hlt
push
add
in
and
iret
out
lret
mov
pop
das
inc
jae
sbb
mov
rorl
adc
in
lock
loop
jb
hlt
aam
adc
mov
xor
jns
notb
adcb
movsl
xor
push
mov
inc
mov
das
cmp
subl
loop
dec
inc
sti
je
imul
mov
addr16
inc
cltd
scas
xor
repz
fildl
mov
sub
lods
stos
sub
and
into
xchg
pop
lret
jo
jns
xchg
cmpsl
adc
pop
mov
push
nop
jnp
jge
mov
negl
xor
dec
pop
cmp
mov
insb
xor
pop
jle
roll
dec
fwait
push
loopne
sbb
add
mov
notl
inc
inc
xor
loop
pop
fiaddl
mov
sub
xor
pop
rol
js
fisttpl
cmp
loope
fwait
mov
clc
sub
and
jns
test
mov
mov
and
lds
iret
or
push
rcr
sub
aas
cmpl
dec
jnp
pop
testb
mov
imul
inc
fucomp
loop
mull
shlb
popa
add
in
sub
xchg
fistpll
imul
mov
call
incb
aam
pushf
xor
bound
repnz
dec
in
inc
sbb
in
scas
jmp
bound
push
repnz
mov
ss
add
loopne
add
mull
dec
out
add
push
xor
add
lods
lock
cmc
loop
mov
sahf
test
gs
mov
mov
or
ljmp
hlt
pushf
lcall
xchg
hlt
and
pop
into
pop
inc
or
push
mov
push
arpl
stos
xchg
addr16
xchg
shl
cltd
and
pusha
les
pop
out
sub
popf
cmp
lret
out
outsl
mul
inc
mov
and
dec
or
mov
mov
roll
push
adc
mov
cmp
lods
test
push
jmp
lods
repnz
stos
adc
xor
in
into
pop
sysret
mov
ficompl
into
xchg
jnp
ret
inc
jno
out
mov
mov
sbb
fcmovnb
call
fisubrl
adc
movsl
cmp
pop
push
and
add
mov
inc
out
xchg
pop
insb
mov
dec
inc
sub
jbe
cs
fbstp
dec
or
scas
push
mov
xchg
xchg
adc
js
xlat
xor
dec
mov
mov
mov
push
mov
cwtl
xchg
ss
adc
pop
je
pop
push
scas
jnp
mov
fnstsw
sbb
lahf
push
jb
jae
jmp
clc
mov
cmp
mov
scas
sbb
test
lret
jns
push
sub
pop
out
fs
ret
sti
push
mov
pusha
ja
subl
pop
sbb
lahf
mov
xchg
jecxz
pop
inc
pusha
mov
into
bound
push
out
fisttpll
mov
sub
pop
movsb
push
jl
mov
in
pushf
push
mov
mov
inc
xlat
clc
pop
cmp
pushf
add
pop
sub
add
cmp
hlt
test
mov
jge
add
es
or
cmpsb
sbb
fwait
xlat
xchg
cmp
dec
mov
or
pop
popa
int3
lea
jmp
sub
jge
xchg
stos
push
or
mov
clc
cmp
add
stos
cltd
sub
inc
xor
iret
or
push
jge
fs
inc
pop
pop
lret
sbb
daa
dec
in
xchg
sub
outsb
aaa
aaa
pop
andl
repnz
jl
jmp
ljmp
in
adc
clc
xchg
gs
cltd
push
push
dec
out
clc
aas
outsl
lret
in
or
mov
xlat
mov
psubb
jbe
push
jp
test
out
andb
jle
shrb
iret
fcoms
push
enter
cs
mov
mov
jg
pop
or
inc
mov
movsl
inc
es
adc
jbe
inc
adc
cltd
lods
out
mov
mov
push
dec
subl
fs
stc
pop
mov
pop
loop
jmp
inc
in
and
gs
or
or
cwtl
adc
fistpl
xor
xchg
vmovdqa
lahf
sub
jne
jns
nop
ret
xchg
mov
cs
xchg
or
aad
jo
push
xchg
xchg
xchg
push
mov
pop
or
ret
push
add
mov
mov
xor
out
inc
nop
sbb
cmp
mov
repz
in
push
ret
loopne
sahf
neg
data16
pop
enter
cli
outsb
repnz
inc
lret
ret
test
cmp
outsl
add
aas
mov
pop
or
sub
dec
shrl
mov
sub
ja
leave
mov
lcall
fisubs
xlat
in
in
daa
push
mov
add
imul
push
clc
sub
int3
dec
inc
sbb
in
sbb
add
adc
and
lea
imul
adc
lcall
xbegin
mov
out
fimuls
mov
test
out
mov
testb
mov
sbb
adc
pushf
movsl
sbb
outsb
test
scas
not
dec
sbb
push
gs
xchg
pop
mov
jbe
jno
insb
mov
outsb
pop
shlb
add
scas
and
push
fildll
iret
mov
sti
fsubrl
insb
cli
les
ret
stos
push
add
sbb
scas
add
dec
push
loope
or
out
mov
xchg
into
mov
or
sti
test
cmpsb
gs
popf
mov
lret
faddp
imul
inc
icebp
mov
push
or
inc
ja
ficomps
xor
pop
add
mov
xchg
jle
mov
imul
loope
jecxz
adcl
and
testl
mov
hlt
push
sub
xchg
and
xchg
inc
out
scas
stos
sub
fcomip
fbstp
cmp
pop
notb
sarb
or
jg
adc
adc
loope
pop
inc
or
xor
sbb
pusha
hlt
cmp
pushf
test
xchg
inc
jae
xor
sub
add
mov
sti
add
das
mov
push
pop
ret
je
cld
jmp
cs
mov
repz
pop
sub
mov
mov
inc
out
nop
sub
int3
add
jne
test
repz
iret
jmp
and
xor
leave
sahf
int
xchg
fs
mov
aad
pop
jne
pop
or
mov
mov
mov
out
jmp
movsb
ljmp
daa
jle
pop
jnp
je
xor
adc
mov
ffreep
mov
das
or
lret
ret
or
in
nop
mov
jmp
mov
in
outsb
mov
test
stos
or
dec
shrl
mov
clc
mov
test
pusha
mov
push
test
ret
or
xchg
mov
mov
push
push
loopne
or
jbe
cld
xlat
stos
stos
pusha
lcall
insl
aad
xchg
mov
call
scas
icebp
call
movsl
in
push
pop
xchg
xchg
cmp
jo
icebp
sub
shlb
mov
clc
mov
movl
clc
cmp
lret
outsb
shr
add
adc
cmp
popf
aad
sbb
jg
daa
dec
es
int
stc
sbb
or
mov
dec
mov
loope
add
xchg
cmp
adcb
jb
lods
test
cs
push
sarl
mov
or
mov
out
sbb
insb
pusha
xchg
ljmp
fdiv
std
fimuls
mov
jbe
test
inc
cmp
mov
xchg
jmp
dec
or
outsb
inc
fs
fists
sbb
outsb
jo
dec
sbb
insl
mov
into
out
rclb
dec
sub
cmp
pop
lock
out
int
jle
mov
dec
daa
xlat
dec
lea
dec
test
push
adc
sub
stc
dec
sbb
xchg
fbstp
cmc
xchg
in
jnp
test
sbb
inc
jns
popa
cmp
mov
repnz
add
pop
flds
pop
ja
add
mov
xchg
add
push
sbbl
sub
mov
jo
and
stc
inc
dec
shlb
bound
repz
loope
pop
sub
adc
loope
cs
jne
pop
push
mov
mov
nop
dec
repz
mov
inc
xlat
inc
jg
sbb
and
fs
psubusb
orl
sub
sbb
pop
in
xchg
mov
push
leave
and
out
jle
imul
push
cmpsl
enter
dec
jbe
int
mov
mov
xlat
bound
jo
sub
int
dec
xor
int
in
cld
stos
pusha
push
or
dec
test
dec
sub
sarb
in
push
aam
push
test
popf
cmpb
push
jnp
mov
pusha
jnp
xchg
sub
pop
fyl2xp1
ret
sub
outsl
fsts
pop
mov
or
scas
hlt
repnz
xor
and
mov
and
inc
cmc
shll
jne
lods
shlb
test
enter
and
push
ljmp
fldt
sahf
push
mov
test
repnz
std
pop
bound
outsl
imul
jb
sbbl
popf
insb
daa
fidivl
das
and
outsb
mov
cmp
push
pop
mov
les
hlt
outsb
sbb
popf
adc
leave
push
fnstenv
dec
xchg
fadds
lahf
popf
push
push
sub
inc
pop
and
xchg
adcb
shrb
mov
push
sub
ds
jnp
pop
lret
cmpsb
das
test
fists
dec
mov
out
xlat
xor
and
mov
inc
scas
dec
jl
mov
mov
sub
mov
mov
inc
or
fiaddl
xor
cmp
sti
mov
sub
iret
xchg
cmp
leave
and
cmp
jae
stos
cmpsb
sbb
or
ds
fdivrs
pushf
xchg
pop
and
insl
mov
arpl
popf
scas
lea
enter
jnp
loope
sub
clc
xor
rcl
adc
stos
ror
mov
cwtl
in
stos
mov
adc
test
iret
lock
xor
push
jae
sbb
sbb
mov
xchg
daa
dec
adc
lods
or
pop
in
cwtl
int
xor
sub
and
push
xchg
into
in
push
cmp
lock
outsb
xchg
sub
add
dec
cmc
or
mov
dec
jg
xor
lcall
xor
test
jae
push
clc
les
push
jp
inc
call
push
mov
xchg
pop
xchg
ret
push
add
mov
or
clc
pop
div
mov
loope
cmp
shlb
add
adc
shrl
scas
or
adc
and
mov
movsb
push
cmpsl
fucomip
mov
xor
repz
test
inc
inc
dec
and
ja
xor
out
call
clc
cs
fdivrs
jmp
push
xor
pop
sub
or
push
nopl
lock
inc
arpl
mov
cltd
cs
test
mov
sub
push
fcoms
inc
mov
lret
inc
adc
cmp
iret
dec
add
xor
dec
jbe
imul
out
sub
js
xchg
sbb
dec
popf
arpl
ret
mov
sbb
xor
add
jno
cmp
dec
pusha
add
mov
loope
xlat
inc
jle
cmpsb
xchg
cltd
insl
aaa
sarl
idivb
imul
add
and
mov
jno
out
sbb
bnd
out
loope
pop
sbb
adc
icebp
clc
subb
scas
inc
lahf
and
mov
sbb
inc
cmpsb
mov
lods
add
ret
hlt
sbb
xor
sub
cltd
outsl
cmpsl
jmp
jle
jns
mov
mov
push
jo
fs
jo
sub
aad
fcmovu
aas
lods
aam
ja
jge
cmpsb
ret
outsb
scas
test
adc
pop
add
lock
mov
jg
push
adc
cmp
leave
xchg
or
cs
out
fcom
cmp
xor
mov
loop
xchg
out
lock
xchg
sub
sti
adc
test
push
cmpb
sarb
in
call
pop
test
stos
ficoml
pop
loopne
xchg
in
xchg
jbe
mov
mov
mov
ss
movsb
popa
out
xor
lret
sbb
jns
sbb
lods
cli
push
std
mov
out
add
test
pop
shrb
jmp
ja
inc
ret
jmp
push
xchg
in
dec
cmpsl
aas
loop
stos
lret
hlt
scas
push
adc
add
add
test
xchg
jl
outsl
inc
jle
je
or
fdivrl
fwait
sahf
xor
sbb
and
adc
pop
rclb
stos
inc
test
popf
data16
imul
and
jecxz
ja
xchg
jecxz
xchg
dec
ja
cmpsb
aas
cmpsl
cld
lcall
or
push
add
rcr
jns
inc
aaa
push
mov
ds
sbb
mov
repz
or
leave
in
add
jecxz
arpl
shll
xchg
jmp
xlat
xor
jo
and
sbb
mov
mov
outsb
loope
xchg
jo
aaa
push
inc
mov
pop
lahf
push
and
mov
rcrb
inc
repz
outsl
popa
or
loop
setae
sarl
mov
pop
lock
sbb
addl
lahf
out
fidivrs
mov
dec
cmp
fcoml
sbb
fstp
inc
jbe
xchg
insb
lods
mov
adc
bound
xor
aaa
adc
nop
adc
and
jmp
fnstsw
xor
jle
xor
xchg
into
xchg
mov
xcrypt-ecb
cmpsl
mov
out
jp
mov
add
fidivs
xor
incb
jns
test
xchg
and
cmp
movsb
add
mov
mov
movsl
inc
mov
mov
ret
sti
sbb
xchg
iret
ret
ret
push
stc
das
popf
fcomp
adc
pop
push
dec
mov
mov
mov
lret
dec
pop
adc
inc
into
ljmp
xchg
mov
iret
aas
xor
jg
and
es
mov
inc
nop
mov
fiadds
push
push
pop
lahf
bnd
gs
and
clc
rclb
inc
stos
nop
jne
out
mov
imul
xchg
dec
sbb
add
xor
push
adc
adc
sarl
popf
jbe
lahf
xor
sbb
mov
lock
jo
movl
movsl
outsb
cld
jecxz
xchg
sub
pop
fwait
les
sbb
push
push
push
stos
aaa
cmp
jge
mov
nop
fcmovb
test
icebp
ret
arpl
dec
clc
mov
or
mov
mov
lahf
sbb
mov
lea
stos
cwtl
cmpsb
out
pusha
dec
sbb
into
mov
or
jmp
inc
outsl
xor
call
in
bound
lods
xchg
xlat
xor
adc
cmp
adc
mov
sbb
imul
orl
jmp
test
imul
repz
jl
ss
ss
inc
push
jne
cmp
lea
lods
popa
imul
mov
add
jle
cld
dec
inc
jns
xor
testl
xor
lods
push
xor
shlb
fwait
push
fwait
sbb
jl
jecxz
subb
rolb
sbb
lds
xchg
out
and
orl
inc
xor
mov
es
add
mov
dec
ljmp
dec
dec
lcall
negl
dec
mov
ss
jb
xchg
mov
and
cli
push
in
jns
fnstcw
xchg
pop
jg
in
cmpsb
leave
mov
aad
add
fcomps
pop
pop
loope
test
std
cmpsl
das
mov
cmp
imul
packsswb
mov
jns
pop
dec
jbe
aad
mov
or
mov
jns
sbb
nop
xorl
ds
sahf
insb
mov
icebp
adc
push
dec
dec
in
inc
sub
sub
mov
sub
pop
cmp
push
clc
mov
aad
and
xchg
add
or
adc
aaa
xchg
add
pusha
sbb
cmp
es
insl
leave
cmp
mov
cmp
leave
test
loope
sbb
stos
add
mov
popf
je
mov
xor
cmpsl
aas
in
inc
sti
mov
in
data16
pop
rcrb
mov
push
outsb
lahf
and
repz
pop
cmp
jp
xchg
push
rcrb
sarb
aas
push
push
add
xor
int
test
mov
dec
sbb
pop
addr16
mov
adc
stc
pop
divl
arpl
or
decb
imul
clc
sub
dec
cmpsb
add
push
push
scas
mov
jge
cmp
ljmp
pop
scas
loopne
imul
lea
inc
and
or
or
and
in
push
mov
test
mov
mov
repz
fadds
mov
je
mov
mov
xchg
rcr
bound
mov
push
xor
ljmp
dec
mov
or
mov
icebp
jecxz
dec
ret
mov
or
test
fdivrp
ljmp
add
inc
sbbb
out
mov
mov
mov
scas
hlt
dec
push
mov
xor
mov
cli
jecxz
adc
inc
mov
push
sbb
pop
addr16
pop
fadds
sub
jmp
sbb
stos
cmc
xchg
filds
mov
adc
repz
leave
out
and
inc
sbb
jne
andl
sbb
popf
or
mov
inc
inc
and
test
cmc
add
jnp
in
jp
cltd
mov
push
jb
cmpsb
pop
inc
inc
sbb
push
jns
mov
adc
add
sti
adc
sahf
mov
loopne
int
int
mov
mov
stos
and
mov
push
sub
cltd
je
xchg
je
ja
adc
das
push
lret
sbb
test
mov
xor
hlt
popf
sbb
roll
mov
adc
xchg
cli
sub
sub
imul
pop
lods
xor
into
mov
mov
mov
pop
xchg
sub
add
and
stos
lods
clc
jmp
cmc
dec
mov
push
notb
test
xor
xchg
insb
inc
adc
xchg
sbb
mov
mov
fmuls
hlt
aad
cs
imul
xchg
mov
rclb
jae
jne
or
outsl
out
outsb
lret
fcmovu
addr16
scas
push
aam
and
fnstsw
cwtl
subl
jecxz
mov
or
adc
imul
push
jo
dec
jo
xchg
adc
loopne
or
add
movsl
or
aad
daa
xchg
jge
push
adc
rolb
push
cld
push
push
mov
pop
stc
adc
pop
into
int3
insl
addr16
cmp
add
and
dec
inc
xlat
js
out
fbstp
and
pop
scas
jbe
xchg
iret
and
rcrb
aam
adc
xchg
mov
fdivrs
cwtl
xchg
loop
push
gs
xchg
mov
dec
xchg
fisttps
add
popa
sbb
std
cmp
hlt
nop
arpl
popa
jo
sub
inc
xlat
aad
in
movsb
cwtl
xchg
xchg
sub
stos
or
fidivl
fwait
call
add
fistl
dec
aas
ret
mov
add
rorl
xchg
cmpsl
lds
mov
xchg
iret
sarb
mov
sub
mov
sbb
pop
mov
int
js
inc
push
ja
nop
loopne
dec
insb
push
cmpl
and
pop
xchg
push
pop
sub
aad
sar
and
mov
mov
and
dec
sbb
or
adc
test
lea
mov
mov
andl
mov
bound
dec
lods
cmpsb
jl
das
add
dec
sub
rcr
mov
push
lea
out
xor
cmpsl
and
in
out
add
repnz
fisttpll
jp
fdivl
psadbw
push
push
daa
add
insl
mov
cmpsl
test
pop
fstpl
push
inc
push
jne
mov
xor
sbb
lahf
or
and
dec
cmp
jnp
mov
sub
fwait
add
icebp
std
mov
xor
add
pop
in
inc
int
pop
test
test
js
pop
sub
mov
jp
mov
pusha
jo
mov
call
and
cmpsb
jp
sbb
xchg
arpl
ja
adc
adc
jno
push
ret
test
adc
mov
pushf
ficompl
and
mov
sub
cmpsl
cmpsb
cmp
mov
pop
inc
sub
jo
add
xor
clc
psubsw
icebp
int3
inc
aaa
dec
xor
pop
jle
cmpsb
or
push
stos
fidivrs
and
mov
jne
aas
and
xchg
arpl
mov
adc
push
and
adcb
mov
sub
pop
lods
jmp
sub
push
adc
loop
jg
add
add
inc
lods
insb
inc
fdiv
and
mov
mov
orl
mov
cltd
inc
add
aas
xor
jg
jbe
sub
fcomp
pop
inc
push
xchg
divl
out
dec
les
stos
cmp
inc
movsb
enter
in
scas
fs
aaa
data16
cmpsl
ret
sub
jns
add
sub
mov
mov
in
movsb
mov
push
enter
pop
les
das
js
pop
rol
imul
std
fwait
insl
push
cmpsl
cmp
pop
fbld
sub
xchg
int
jo
in
or
scas
cmp
inc
adc
push
sahf
push
lahf
rcr
imul
cli
divl
mov
pop
lea
je
mov
pop
xchg
sub
shl
pusha
lds
add
sbb
ds
fiadds
mov
cmp
lods
test
outsl
gs
push
lret
rorl
mov
pop
add
jecxz
sahf
sarl
fwait
push
mov
dec
cmp
push
lret
sahf
dec
xchg
out
mov
sub
mov
sbb
lret
ds
nop
cmp
sub
push
mov
imul
xchg
cltd
mov
xchg
cmp
movsl
arpl
mov
std
xor
mov
out
lcall
stos
dec
out
mov
ja
js
fisttps
xor
leave
sub
pop
push
scas
cmc
sti
dec
sbb
repz
push
mov
imul
fistl
xchg
cmp
cmpsb
je
stc
mov
xchg
in
push
mov
test
jae
push
int
ret
xchg
jo
loopne
sub
rsm
mov
push
jnp
inc
mov
mov
xchg
push
ret
je
fimull
inc
cmpsb
cmpsb
cmpsl
fidivl
cmp
sbb
inc
fcmovnu
mov
inc
jmp
bnd
cmp
dec
fists
inc
idivb
ret
pushf
push
das
out
outsl
sub
push
push
loop
es
jge
mov
fnstcw
adc
xor
int
or
loope
icebp
cmp
fucom
cmp
inc
cmp
ret
outsl
in
sbb
mov
scas
or
lods
jno
arpl
inc
lods
adc
lods
je
insl
out
xchg
cwtl
fldt
pop
mov
lret
jnp
sub
decb
mov
push
into
push
cmp
rol
sub
in
stos
aaa
xchg
pop
test
movsb
fucomi
xor
cmp
xchg
add
and
test
cs
je
lret
mov
sbb
or
stos
js
lret
push
repnz
jnp
xor
js
push
dec
je
xor
pusha
fdivr
xchg
ret
pop
adc
jo
test
cmpsl
pop
shlb
out
stc
pusha
cltd
mov
lds
je
add
outsb
lods
stos
fildl
inc
jecxz
dec
pusha
movsb
push
pop
inc
and
add
adc
into
lock
aam
clc
jg
jmp
mov
xchg
xor
and
ja
adc
test
mov
cmpsb
inc
inc
pop
pop
int3
je
shrl
add
mov
stos
mov
pop
xchg
lea
lahf
ret
inc
push
jne
xlat
pop
in
xor
rorb
rolb
pop
adc
sub
add
mov
scas
or
sub
adc
mov
jno
cld
lods
out
movsb
loopne
shll
push
pusha
sbb
ds
aam
or
sbb
out
hlt
clc
mov
sub
adc
xchg
push
rclb
jne
dec
loop
faddl
push
imul
fsubs
out
mov
popa
ja
loopne
ljmp
es
cmpsb
push
jnp
mov
in
ret
and
filds
iret
into
pop
les
lods
xor
mov
dec
mov
sub
mov
sbbb
popf
xchg
jnp
pop
rcrl
mov
jg
inc
xchg
pusha
sub
sbb
ljmp
rolb
mov
xor
and
in
in
xchg
xchg
lcall
push
add
orl
loope
adc
inc
push
adc
inc
cld
jns
scas
mov
fwait
loopne
sub
mov
add
mov
sub
repnz
xlat
das
mov
and
cli
fistpll
pushf
fbstp
ror
jnp
sahf
mov
out
xchg
daa
and
xorb
mov
out
xlat
jo
pusha
push
or
sbb
imul
sbb
addl
jp
cmpsb
push
scas
mov
pop
outsl
data16
ljmp
push
dec
ss
sub
divb
fwait
push
mov
cltd
fwait
loop
inc
adc
mov
scas
cmp
jo
movsb
cmp
imul
jp
fsubrl
in
aad
jp
jl
jle
xchg
mov
mov
shlb
test
jp
fcomps
push
mov
cmp
pop
sbb
xchg
sbb
js
cmc
lret
xor
cmp
adc
or
xor
pop
shlb
fcmovne
mov
ds
sbb
jl
sahf
fucomip
inc
pop
ja
mov
call
jno
ficoml
mov
mov
stos
lds
adc
dec
test
test
or
sbb
lds
in
popa
xchg
add
cmp
rcrb
in
xchg
inc
out
push
roll
ljmp
mov
bound
or
or
cltd
repnz
outsb
repz
movl
xchg
mov
and
jbe
inc
push
or
push
js
pop
cmp
ret
gs
repnz
das
jp
adc
mov
cmpsb
mov
xor
movsb
gs
xchg
lods
fldt
or
cmpsl
add
dec
push
fcmovne
mov
inc
orb
cwtl
std
cmp
fnstenv
aas
fcmovnbe
leave
or
jg
add
aaa
adc
jbe
jl
aam
out
and
sub
call
xlat
push
sti
mov
or
pop
lods
sbb
dec
and
into
fcomps
jecxz
in
or
push
out
jl
mull
fucomip
or
mov
dec
clts
insb
repz
mov
or
dec
or
jne
pushl
leave
or
scas
in
lods
sbb
out
mov
pop
insl
lret
outsb
stc
xor
xor
aam
dec
int3
clc
dec
lcall
xchg
mov
cmp
sub
test
pop
js
mov
sub
push
dec
popf
xor
popf
out
pop
mov
sbb
cmpsl
inc
sbb
orb
lea
or
cmp
and
mov
ljmp
jle
add
cli
negb
sub
cwtl
shr
mov
xchg
pop
jp
cmp
xor
insl
mov
scas
loopne
jbe
mull
or
cwtl
add
movsb
loop
and
xchg
xor
das
fnstenv
mov
divl
dec
cvttps2pi
mov
cli
dec
push
scas
repz
xor
js
xor
lcall
and
adc
cld
mov
jg
xor
into
in
mov
jae
aam
loope
lret
insl
push
testb
pop
mov
push
inc
stos
gs
xchg
add
mov
pop
sahf
in
stos
cmpl
je
jecxz
in
push
push
push
mov
jb
popf
mov
insl
xor
xorl
bound
dec
icebp
dec
fs
adcl
int3
xchg
xor
adc
dec
dec
inc
cmp
cli
ja
xor
out
je
pop
cmc
jmp
dec
mov
in
xchg
mov
mov
jmp
lret
xchg
call
test
imul
fisttpll
fcompl
xchg
push
cmp
mov
divb
sbb
rcrl
push
lcall
fildl
dec
xor
mov
loop
rclb
pusha
mov
or
adc
jle
mov
lahf
cmpsl
in
pop
dec
xchg
mov
pop
mov
testl
incb
mov
jl
leave
in
out
aas
jmp
jno
pop
roll
pop
popf
inc
inc
push
lret
push
xlat
mov
or
and
pop
xchg
mov
jo
cmp
call
icebp
mov
sbb
fsubrl
dec
jmp
dec
ret
xchg
sub
les
and
mov
or
movsb
or
cmpsb
mov
inc
test
aad
outsb
mov
sbb
cmpsl
mov
icebp
pop
js
pop
jbe
pop
mov
lods
rcr
pop
flds
out
sbb
adc
xlat
add
mov
sbb
lcall
clc
vpsrad
test
and
sbb
fiadds
test
out
fwait
ja
mov
fisttps
bnd
sbb
outsl
and
icebp
outsl
mov
sub
mov
inc
scas
ja
daa
bound
push
add
bound
push
adc
rcll
lds
cltd
ja
aad
xor
cmpsb
inc
mov
mov
loope
mov
jne
jg
test
lock
out
pop
inc
aam
leave
es
pop
in
insl
jmp
jge
jo
ret
fsubp
adc
adc
sbb
dec
push
inc
insb
xor
jg
and
jl
xor
cli
sarb
add
data16
push
sbb
cmp
cmc
mov
iret
add
sub
xor
int
push
jmp
cli
dec
xchg
stos
jo
push
movsb
mov
sarl
pop
lea
add
xor
pop
push
je
xchg
sub
icebp
fisubrs
mov
cmpsb
cmpsb
inc
nop
repz
daa
inc
add
popf
add
in
push
mov
bound
xor
push
dec
test
adc
mov
fst
mov
or
std
mov
mov
or
enter
sub
lods
sti
js
sub
fbld
jo
cmp
and
filds
or
pavgb
jp
daa
cmp
fsubrl
sbbl
out
aam
repnz
inc
jae
leave
dec
or
adc
push
shrb
mov
insb
adc
fwait
cltd
adc
cmc
inc
cltd
lds
out
stos
js
lret
pusha
sub
push
fisttps
mov
or
js
incb
lock
xchg
pop
in
cmc
xor
je
shll
dec
loopne
push
mov
sub
lret
cmp
ret
gs
pop
fcompp
xchg
jmp
test
orl
sbb
data16
pop
dec
pop
leave
adc
mov
jmp
mov
loope
jb
jne
xor
mov
jecxz
les
and
in
jb
xor
pushf
cmp
ret
enter
inc
test
push
cld
push
into
jg
dec
insl
outsb
ss
shll
in
cmpsb
lret
sub
mov
pop
sbb
mov
lods
daa
ss
add
mov
mov
pushf
sub
mov
push
push
mov
mov
mov
es
mov
leave
lret
inc
rcr
add
inc
test
jns
ss
or
add
adc
in
shrb
cmp
push
fldl
mov
pop
fcomps
push
xor
imul
test
adc
cmp
sahf
mov
out
xor
jp
sub
inc
pop
outsb
jge
jp
jle
out
fiaddl
mov
push
fwait
inc
test
mov
out
add
adc
out
fmuls
fcoml
mov
pop
jo
leave
out
std
mov
les
rcrb
xchg
into
xchg
scas
add
fisttpll
sti
inc
and
lock
lods
pop
pusha
orl
rcll
sub
push
pop
js
dec
shll
jp
jg
test
add
jno
mov
ss
mov
or
cli
xchg
cmp
repz
mov
notb
push
mov
addr16
mov
cwtl
psraw
and
fisttps
flds
pushf
pop
cmp
push
and
daa
pusha
int
mov
sbb
jns
movsl
popf
dec
arpl
lds
push
mov
push
add
or
mov
xor
jnp
notl
shl
pusha
cld
inc
shl
or
xlat
in
imul
in
push
mov
or
mov
jmp
lods
lret
mov
pushf
xor
xchg
insb
and
mov
dec
bound
iret
push
mov
repnz
inc
outsb
push
mov
and
fsubrl
or
sbb
mov
inc
cs
adc
xchg
xchg
xor
push
mov
pop
xchg
mov
or
sbb
jns
mov
xchg
pop
xor
loope
out
push
xchg
insl
push
icebp
cmp
js
les
mov
ret
sarl
and
xor
sub
hlt
sub
aas
jno
jge
sbb
add
inc
push
in
inc
pop
movl
cmpsb
xchg
mov
and
jle
outsb
ret
dec
lods
inc
push
icebp
mov
and
repz
sub
add
adc
pop
sbb
add
mov
mov
cmpsb
jp
je
sbb
push
add
mov
xor
popf
cmpsb
js
xor
clc
pushf
aaa
fs
cltd
std
mov
je
cwtl
push
mov
subl
jmp
sub
shr
jecxz
cld
addl
test
push
mov
jmp
jp
mov
adc
icebp
cmp
ja
popf
pushf
aam
or
jb
je
outsl
dec
mov
xor
or
popa
inc
shr
or
mov
insb
sarb
dec
pop
rcrb
fiaddl
fisttpll
cwtl
inc
lock
pop
test
add
mov
in
cmpsl
dec
ljmp
cmpsb
lret
push
push
xchg
xchg
aad
xchg
lret
push
in
lods
mov
int3
cmc
push
movsb
pop
mov
cld
xchg
ljmp
sbb
xor
mov
aaa
sbb
jmp
mov
std
sbb
mov
addr16
push
push
jl
sbb
mov
cli
mov
mov
push
sbb
in
loop
pop
adc
jo
jnp
mov
xchg
cwtl
or
addr16
ret
aad
and
popf
and
int3
add
dec
sbb
push
or
scas
imul
pop
lcall
inc
subl
stc
rcrl
outsl
mov
sbb
cmp
mov
xchg
or
iret
out
xorl
test
cmp
mov
loope
xchg
jle
pop
add
mov
repz
xor
jbe
add
pop
icebp
push
jecxz
fidivrl
fidivl
inc
add
xchg
ret
xchg
push
jg
cmp
out
loope
and
xchg
scas
mov
pop
ds
dec
adc
outsb
xchg
adc
dec
cmc
xchg
js
icebp
push
inc
loop
mov
aad
and
int
shl
repnz
pop
xadd
lcall
movsb
mov
ljmp
xlat
sbb
rcll
pop
movsl
xlat
dec
loop
sub
das
jl
inc
test
adc
jge
std
cld
je
daa
mov
test
movsl
rcll
out
sub
cmp
ja
mov
sub
sbb
in
out
mov
xorl
cltd
lret
into
xchg
mov
repnz
jg
pop
sub
mov
push
pusha
push
mov
stos
outsl
push
movzbl
aam
lods
paddsb
scas
in
jecxz
scas
call
xchg
movsl
lds
pop
mov
jle
mov
xor
xchg
in
pop
out
outsl
mov
or
jp
dec
popf
jecxz
adc
xor
aaa
add
pop
or
mov
xchg
xor
xchg
pop
mov
mov
movsb
push
push
xchg
pop
sbb
insl
cwtl
or
jnp
hlt
adc
inc
mov
int3
scas
cmp
jne
mov
loopne
sbb
imul
pop
fisubs
roll
les
cmpsb
pop
movsl
xor
push
cmpsb
add
or
push
cmp
ss
and
ds
aaa
in
cwtl
in
scas
lods
dec
push
mov
sub
shlb
hlt
mov
scas
xlat
ljmp
cltd
cmpsl
mov
or
cmpsl
loope
loop
insb
clc
xor
pop
adc
fcomi
or
pusha
lock
call
shrl
mov
repz
dec
jno
add
cmp
shrl
pushf
xchg
or
push
and
and
jae
jae
adc
rcl
mov
inc
lock
inc
cmpsl
rorl
mov
js
push
test
xchg
or
sub
lret
mov
adc
mov
fcomps
sbb
jne
adc
and
dec
add
loope
add
in
sub
sub
aaa
push
cli
or
lret
add
jae
add
push
and
ret
cwtl
inc
sub
xchg
jp
dec
loop
pop
call
jmp
aaa
inc
add
jns
mov
movsb
and
and
xor
in
xlat
mov
and
push
std
in
mov
dec
int3
subl
imul
cmp
scas
xchg
mov
data16
sarb
into
movsl
mulb
or
out
inc
xchg
cwtl
lds
inc
mov
xchg
idivl
loop
cmpl
test
mov
jnp
add
cvttps2pi
mov
mov
iret
cwtl
inc
pop
xor
das
sbb
fidivrl
ret
fistl
mov
mov
mov
cmpsb
mov
sahf
flds
and
ficoms
call
mov
inc
fstl
stos
in
pshufw
ja
cwtl
jo
fwait
test
rcrl
and
lahf
lret
ss
mov
inc
ds
scas
fcoms
testb
adc
mov
cmp
lret
test
es
adc
mov
adc
cmp
add
inc
push
sub
jb
fwait
sarl
mov
fldl
xchg
mov
push
push
jnp
rorl
add
jl
loope
out
out
mov
addl
mov
incl
dec
das
sbb
pop
inc
fistps
stos
sub
clc
cli
mov
neg
inc
mov
outsl
repnz
push
stc
mov
cmp
mov
sub
shll
push
cmp
inc
cmpl
arpl
std
push
fisubs
fdivs
dec
lods
jmp
out
or
rcrl
or
pop
stc
dec
push
test
icebp
cmp
stos
adc
jno
aad
mov
lahf
out
leave
out
pop
sti
stc
das
sub
insl
inc
add
scas
or
sub
mov
fucomi
xor
mov
mov
mov
sbb
push
xor
push
lret
das
insl
testb
repnz
test
enter
lock
add
fldcw
dec
data16
in
adc
jno
pop
mov
or
pop
loop
imul
test
lea
fidivs
inc
lret
in
lea
jg
lea
adc
inc
bound
mov
jle
mov
dec
xchg
popf
jno
sbb
pop
out
dec
or
mov
jo
xor
sbb
add
orb
int3
mov
push
test
sarl
pop
dec
sbb
shr
mov
mov
xor
fisttpll
xchg
dec
sub
xlat
cmc
xchg
jmp
mov
mov
movsl
addr16
xlat
sbb
xor
fnsave
lds
scas
push
xchg
mov
fldl
adc
insb
push
or
xor
pop
hlt
fadd
cld
dec
fiadds
xchg
xlat
mov
fidivl
test
popa
imul
loop
insl
insb
add
jle
lret
call
inc
pushf
mov
push
or
sbb
xchg
loop
dec
lods
arpl
or
je
jp
xor
enter
scas
or
hlt
insl
jle
sarb
cmp
jnp
pushf
outsb
pop
xor
les
pop
mov
jns
push
fsubrl
imul
adc
pop
dec
mov
add
ret
fwait
dec
push
int
jb
xor
and
imul
rcl
fimuls
mov
lods
jmp
jle
pop
je
outsb
fisubl
cwtl
xor
or
sbb
repz
ret
jno
leave
add
pop
push
jge
xchg
pop
and
rorb
pushf
mov
inc
cmp
sbb
jl
mov
adc
in
movsb
jbe
mov
scas
push
mov
xor
sbb
mov
inc
into
and
pushf
mov
cmc
fistl
sub
sahf
sub
xor
push
bound
dec
jns
pop
jb
xor
jne
push
stos
mov
xor
popf
js
notl
cld
sub
jne
lret
adc
and
pop
push
lret
out
in
popf
jg
mov
add
outsl
cmpsl
dec
scas
xor
shrl
add
rclb
add
and
mov
subb
stc
xchg
int
adcb
jmp
push
xor
xchg
arpl
sbb
cmpps
addr16
xchg
outsl
add
in
dec
sarl
jmp
dec
xchg
or
insl
outsb
hlt
inc
adcb
cltd
and
popf
ret
sbb
rol
cltd
je
lret
aad
inc
push
dec
jns
pop
xchg
cwtl
push
pusha
in
dec
outsl
clc
pop
shrl
lret
mov
push
das
popf
jae
or
lcall
inc
ljmp
and
mov
jo
inc
sub
movsl
or
sub
lods
rcrl
xchg
cltd
push
mov
adc
in
aad
push
inc
xchg
add
pushf
inc
in
jg
and
push
sub
mov
add
pushf
loope
add
in
daa
sub
out
mov
mov
int3
fdivr
dec
push
and
cmp
hlt
and
out
lds
pop
popf
cmpsb
lea
ja
add
test
and
jo
add
jmp
or
xorl
cmp
jge
mov
stos
inc
mov
pop
adc
push
stc
mov
loop
pop
shll
push
jecxz
mov
cli
mov
mov
lahf
jne
divps
or
js
sbb
repz
orl
icebp
mov
das
add
cwtl
adc
mov
cmp
xchg
sub
mov
xor
push
jmp
sbb
shr
dec
or
dec
insl
loope
dec
push
mov
xor
jnp
out
repnz
outsb
fs
jae
jnp
jae
rcrb
xchg
or
mov
inc
jmp
aam
pop
dec
inc
scas
and
mov
mov
sbb
and
daa
push
stos
push
inc
jo
enter
ficomps
xchg
sbb
xor
inc
lods
in
test
sbb
xchg
lret
jb
jae
cmpl
arpl
outsl
inc
imul
inc
pop
mov
adc
xor
imul
jb
arpl
pop
arpl
fsubp
loopne
mov
adc
pushf
leave
adc
repz
jle
add
sar
sbb
mov
movsb
mov
fsub
leave
rorb
popa
mov
decl
loope
pusha
push
test
lea
insl
ljmp
mov
shll
pop
movsl
jmp
mov
mov
adc
push
cmp
jns
mov
dec
loop
stos
insb
shrl
push
lcall
xchg
dec
add
push
and
inc
sti
arpl
push
or
mov
xlat
sbb
bound
xor
add
adc
mov
adcl
loopne
sub
inc
lock
in
mov
jmp
xchg
or
adc
mov
mov
inc
mov
mov
clc
mov
into
push
pop
ret
jmp
gs
dec
pop
out
lret
jns
in
inc
ret
fs
dec
cmc
dec
sarl
cltd
movsb
mov
dec
jle
cmp
daa
pop
cli
pop
daa
xchg
jge
pop
pop
inc
out
jne
std
sub
push
lcall
lahf
fs
fdivrs
sub
add
insl
shll
fists
or
jnp
mov
lcall
data16
les
push
lds
xor
mov
or
or
inc
adc
jne,pn
jmp
inc
xchg
push
out
dec
inc
dec
sbb
das
mov
outsb
lock
mov
fimull
jp
iret
mov
fiadds
adc
stos
push
dec
movsl
test
sub
xchg
repnz
dec
pushf
jg
jge
add
arpl
out
sbbl
lods
mov
push
and
cld
push
icebp
or
rcrl
cmp
test
leave
pop
xor
mov
xchg
inc
into
or
gs
fdecstp
mov
movl
ret
in
sub
test
cmpsb
stos
adc
push
mov
mov
jnp
data16
jbe
in
pop
movsl
mov
add
mov
mov
and
push
icebp
push
adc
int3
push
pop
mov
lret
in
addr16
movsl
fldt
cs
xor
add
in
jp
push
xchg
int3
push
aam
fdivrs
lock
jmp
inc
jg
fisubrl
mov
imul
cmc
enter
mov
or
jo
loope
or
cmc
push
inc
sahf
lock
lea
cmp
loope
subl
into
call
xchg
insl
mov
pop
xor
mov
cmp
repz
and
mov
nop
inc
dec
das
adc
bound
sub
fsubrs
mov
jmp
add
ret
insb
outsl
pop
mov
pop
mov
lret
ret
lods
dec
out
lahf
lods
into
out
imul
aam
arpl
add
push
fwait
and
adcl
push
inc
lret
dec
sbb
pop
sbb
ja
rcr
and
lods
mov
mov
sub
int3
add
incl
sub
cmp
jbe
add
jg
push
sbb
adc
popf
shr
mov
cmpsl
cmp
sbb
das
lret
jle
orb
test
dec
pop
cmpsb
mov
gs
dec
push
cmpsb
jle
ss
jae
push
shr
adc
fs
movb
xchg
jbe
sub
lods
roll
arpl
sub
stc
fs
pop
sub
add
mov
rcrb
jle
xchg
aam
adc
jp
insl
fistl
out
mov
shll
popa
push
scas
add
sbb
mov
out
shrb
hlt
adc
mov
mov
mov
sub
scas
push
movsb
add
xchg
add
imul
jge
lahf
popf
cltd
sbb
mov
lcall
jnp
cmpsl
xchg
cmc
clc
cmove
pop
lahf
mov
xor
cmp
rcl
and
sbb
mov
sub
and
adc
jno
mov
push
in
sbb
insl
rcrb
pop
xchg
leave
mov
es
push
inc
mov
jmp
xchg
and
xchg
pusha
popa
aam
out
das
scas
inc
fildll
sbb
add
push
cmp
jns
mov
in
stc
loopne
into
addr16
ficoms
mov
xchg
xlat
call
xor
add
push
insl
outsl
jge
in
push
pop
pop
sahf
pop
cmpsl
xchg
pop
xchg
adc
icebp
sti
loop
and
push
in
add
inc
leave
andb
cmp
xor
decl
dec
mov
test
xchg
pop
adc
das
std
mov
aas
outsb
or
stos
cmp
les
pop
repz
or
mov
or
sbb
jecxz
mov
inc
test
add
and
ja
es
test
push
mov
mov
aaa
cmpsw
push
dec
enter
mov
fs
out
or
jp
pop
and
xchg
loopne
push
aam
lahf
je
or
dec
jl,pn
mov
and
ret
sarb
test
or
sbb
push
xchg
shll
ljmp
test
sbb
lretw
and
jmp
lock
addl
lds
rcl
pop
xchg
xor
fs
sar
or
loopne
stc
mov
dec
std
xor
dec
xchg
fnstsw
mov
add
nop
lret
xor
icebp
cmp
popf
call
fildll
lret
divl
dec
xchg
mov
push
jmp
int
push
fcoms
xchg
sbb
pop
jo
stc
sub
orl
aad
xlat
mov
sub
mov
dec
mov
cmpb
sub
or
push
sub
xchg
mov
int3
out
mov
push
jg
cmpsl
popa
cmp
xchg
lds
es
push
pop
dec
inc
mov
and
nop
sahf
fsubs
sub
lahf
inc
inc
shlb
mov
aas
movsl
jge
mov
adc
ret
jge
adc
jbe
and
cld
fnsetpm(287
ja
xchg
xchg
idivb
mov
push
sub
and
scas
push
cld
adc
or
shll
daa
ljmp
mov
jbe
xchg
mov
int3
push
fisubrs
mov
je
cwtl
pop
pop
mov
adc
loop
test
lret
ja
and
pop
out
and
les
fprem
cli
push
dec
jmp
shlb
push
pop
test
cwtl
scas
or
mov
mov
xchg
lds
and
aaa
bound
add
xchg
dec
or
xchg
mov
mov
mov
cmp
lods
iret
imul
vpaddsw
mov
lcall
mull
lods
push
sbb
sub
fcoml
and
xor
adc
and
movsb
enter
xor
sbb
outsl
push
std
data16
les
add
and
cmp
fimuls
push
pop
and
xchg
cmp
xorl
lahf
push
xor
ret
jp
ja
inc
jmp
add
clc
mov
lods
call
sbb
or
lods
mov
xor
mov
leave
xor
cltd
xor
cmp
or
mov
cmpb
and
popf
mov
fsubrl
xor
stos
adc
out
std
inc
inc
fisttps
mov
ja
test
in
pop
cmp
enter
cmp
lock
pushf
mov
test
add
pop
call
pop
or
adc
pop
repz
out
ret
scas
dec
pop
mov
lock
cmp
jo,pn
sub
dec
out
lock
aaa
movsl
inc
cmpl
cltd
and
sub
xchg
cs
ljmp
xchg
jg
adc
and
test
or
mov
out
lcall
mov
cmp
lret
sub
popf
pop
fcmovb
stos
test
ja
cmp
out
sbb
mov
pop
xor
bound
xorb
std
jmp
mov
sbb
scas
jae
test
mov
mov
inc
subl
jo
fadds
inc
mov
mov
lds
mov
divb
in
sbb
jl
in
push
out
in
dec
test
lds
jmp
std
sbb
mov
in
xchg
jbe
iret
mov
filds
sub
popf
fnstenv
sub
dec
add
and
sbb
or
hlt
dec
xor
push
sub
cwtl
popa
pop
addb
fmull
add
and
lods
pop
mov
add
push
jecxz
xor
push
cmp
rcrl
bound
or
push
xchg
jl
cmp
adc
hlt
xchg
adc
sbb
inc
movsb
or
jge
pop
cmp
and
mov
pushf
shll
fldt
into
lcall
stc
add
loope
jl
pop
push
or
rcrl
xchg
dec
pop
xchg
stos
outsl
enter
insb
imul
mov
cmp
pop
and
mov
inc
jnp
xor
cmp
sub
fildl
or
dec
add
scas
dec
into
lods
movsl
movsl
lods
in
dec
cs
jnp
pop
xchg
dec
sbb
inc
push
xor
shrb
xor
and
mov
sub
lahf
andb
popa
sbb
lea
cmp
pop
push
fadd
inc
mov
insb
push
hlt
rol
imul
add
push
mov
out
push
test
mov
cmp
je
pop
or
cwtl
mov
fstl
mov
pop
aas
xor
xchg
push
roll
pop
dec
push
mov
xchg
mov
in
cwtl
out
arpl
shrl
mov
lock
ret
mov
add
shrb
cmp
add
stc
js
addb
sbb
hlt
int
daa
add
pop
iret
or
xor
pop
fcoms
lahf
test
or
inc
lret
movsl
wbinvd
iret
inc
sub
test
pop
dec
dec
mov
add
test
sub
std
test
fistl
lret
sub
pop
or
fbstp
pop
push
pop
push
or
mov
int3
adc
insb
popf
fsubrl
arpl
jmp
jmp
push
test
cli
push
xchg
mov
pop
int3
pop
fsubrs
leave
mov
push
scas
sbb
mov
std
or
xchg
shlb
pop
out
jnp
jg
daa
cmpsb
xchg
or
cmpl
sar
and
std
iret
pop
outsb
adc
cmpsb
adcl
je
mov
add
dec
shl
imulb
lcall
mov
not
xor
sbb
sub
add
lcall
in
dec
xchg
mov
into
pop
mov
ss
push
fisubrl
mov
pop
mov
movsl
adc
mov
popf
ss
arpl
cmp
pop
inc
xchg
mov
mov
or
loope
out
xor
pop
sbb
cmp
dec
stc
les
mov
in
push
scas
adc
andb
outsb
sub
sub
sbbb
fwait
pop
push
jge
fwait
cmp
test
sbb
jl
scas
nop
and
or
stc
sub
cmpsb
sub
pop
fistl
mov
and
mov
push
dec
jle
xchg
repz
push
shrb
add
add
test
sbb
lock
sub
adc
push
cs
cmp
xchg
sbb
scas
push
outsl
stos
pop
shr
push
pop
mov
add
jbe
add
lods
icebp
jecxz
mov
cmp
mov
repz
aam
ret
cwtl
adcl
imul
stos
inc
out
cld
repnz
cmp
insb
cmp
push
dec
imul
jl
cmp
jl
or
decb
lahf
mov
add
mov
add
or
aas
dec
test
adc
dec
xchg
popa
faddl
loope
hlt
roll
cwtl
or
out
mov
cs
or
xchg
mov
or
nop
repnz
xchg
adc
jl
les
pop
lods
ret
data16
imul
mov
xor
add
pop
add
clc
inc
ljmp
loope
jmp
mov
scas
iret
push
dec
pop
mov
mov
push
shl
int3
rcrb
inc
in
js
ds
mov
jne
cmp
sbb
and
cmc
ljmp
inc
cmp
orl
sbb
sbb
adc
lahf
repnz
mov
pop
adc
mov
cmp
xlat
cld
call
daa
insb
inc
xchg
es
aad
xor
jo
je
lods
mov
push
rcrl
mov
std
push
jp
add
inc
push
rorb
lret
pop
in
jg
lock
push
icebp
es
mov
cld
jnp
lahf
fmuls
sbb
jl
jns
adc
adc
pop
add
mov
and
scas
add
pop
pop
inc
stos
mov
or
fbstp
pop
xor
shlb
popa
out
mov
dec
ficompl
lcall
sub
lock
push
mov
ljmp
jecxz
and
fld1
mov
xchg
xor
push
inc
test
jecxz
hlt
mov
sbb
sbb
lret
mov
cmp
aam
xchg
sarb
mov
push
cmp
loope
jg
dec
mov
and
pop
sub
xchg
scas
push
dec
iret
inc
xor
or
int3
js
jae
jl
lcall
mov
pop
aam
dec
std
xchg
push
inc
out
mov
loop
inc
adc
dec
xchg
push
xor
loop
pop
dec
popf
sbb
sub
ret
pop
lret
xchg
enter
pop
cmp
or
cmc
js
iret
adc
lock
push
and
adc
lock
scas
addr16
jo
jle
push
pop
pop
neg
fildl
xor
je
aas
sub
sbb
call
mov
mov
fwait
dec
aas
pop
cmc
test
fildl
aam
push
imul
hlt
inc
in
cwtl
fmull
fiaddl
mov
call
lret
jne
jg
or
jbe
mov
sub
or
inc
mov
mov
in
std
or
aas
pop
dec
dec
hlt
loopne
sbb
aam
scas
icebp
fistl
cltd
je
in
sarb
xor
test
xchg
ja
out
push
cmp
jmp
or
scas
or
cld
jmp
jne
enter
cmp
lea
mov
cmp
nop
mov
and
or
es
in
sub
cli
xchg
adc
mov
repz
xor
pop
movb
inc
or
and
inc
cmpsl
sarb
push
enter
fs
lcall
bswap
loop
aad
or
fisubs
bound
mov
notl
repnz
push
jl
xor
sub
popa
ret
sub
pop
add
scas
and
lods
xchg
add
or
mov
ds
dec
imulb
adc
push
xor
out
dec
stos
stos
mov
xor
bound
pop
inc
les
cmp
ret
movsb
or
pop
sub
sub
arpl
test
cmp
std
cld
movsb
push
movsb
add
pop
dec
and
mov
or
fdiv
add
imul
sbb
loope
cltd
xchg
lea
cmpsb
scas
repz
pop
and
mov
stos
mov
leave
pop
fildll
push
lock
cmp
jg
ja
icebp
mov
pop
addr16
jge
mov
sahf
pop
push
mov
add
jo
adc
mov
in
and
int
fiaddl
adc
jle
dec
mov
imul
loopne
xor
push
aad
sbb
insb
inc
scas
pop
jmp
bound
push
add
jl
outsl
and
mov
test
sbb
xor
aad
mov
xchg
stos
inc
inc
mov
push
jge
clc
sbb
or
push
push
mov
xor
rcrl
rolb
data16
sbbb
inc
enter
xchg
dec
and
imul
and
dec
sub
jle
add
fwait
test
and
in
inc
arpl
shrl
out
mov
enter
test
test
jl
push
sub
leave
sub
js
cmpsl
pop
and
and
shll
fimuls
jg
xchg
fcmovnu
lods
push
ret
enter
mov
lahf
clc
loopne
mov
xor
hlt
fs
and
test
push
xchg
pop
pop
div
outsb
jns
xor
mov
scas
or
jnp
cmc
inc
adc
lcall
jge
and
out
fwait
ret
int
jmp
loope
adc
dec
loopne
and
repz
testl
fs
push
ffree
imul
or
fldl
test
fdiv
cwtl
scas
jp
pop
repnz
sahf
push
xor
aam
cmpsl
dec
fstpl
and
iret
sbb
and
and
or
jle
scas
lcallw
adc
shlb
adc
mov
loope
dec
mov
gs
xchg
jmp
ss
and
inc
pop
adc
mov
dec
clc
aad
addr16
jo
sub
loop
and
ret
push
add
dec
push
int3
mov
or
lret
mov
in
mov
in
cwtl
cmp
or
sti
mov
adc
sub
adc
fcmove
inc
or
jbe
and
fnstenv
test
pop
xorb
lret
jecxz
fidivrl
out
adc
idiv
mov
in
lcall
inc
xor
dec
subl
sbb
mov
idivb
push
add
dec
pop
loopne
ret
jbe
loopne
or
xchg
xor
adc
dec
sub
jno
push
call
dec
jne
mov
jo
xchg
and
popa
pushf
test
iret
das
mov
xor
inc
insb
rolb
aam
dec
xchg
es
xchg
mov
pop
push
hlt
pop
and
ss
sbb
pop
xor
push
adc
adc
repnz
push
lcall
jo
pop
mov
mov
mov
aad
out
adc
sub
jle
push
notb
mov
push
enter
jbe
or
mov
in
xchg
and
loop
fwait
popf
and
fcoms
mov
cmp
outsl
loopne
jp
out
int3
loopne
out
mov
aad
sub
adc
sbb
mov
mov
or
sbb
mov
jae
sub
or
or
insb
xchg
xor
aas
push
sbb
add
in
rolb
mov
fwait
hlt
aaa
in
inc
mov
xchg
in
inc
fdivp
mov
aad
and
dec
push
xor
mov
push
sub
nop
out
movsl
xchg
popa
ljmp
and
sub
movsb
orb
jmp
fnsave
out
push
inc
lret
fwait
mov
push
aaa
ret
mov
jl
adc
loope
orl
out
pusha
xor
call
ljmp
sbb
and
movsb
bound
mov
adc
adc
mov
add
xor
inc
fidivl
out
add
scas
mov
and
shrl
iret
mov
jg
push
fldl
jmp
int
cmpsl
out
or
inc
mov
or
in
test
pusha
adc
mov
es
or
out
xor
bound
and
je
sbb
mov
fucomi
aad
cmp
test
dec
lods
test
cmpsl
arpl
arpl
mov
mov
fwait
add
add
js
je
mov
sahf
mov
dec
rolb
push
mov
inc
jne
int
fstpt
scas
pop
andb
pop
pop
ret
in
imull
lret
pop
push
cmp
ljmp
mov
sarb
push
scas
cmc
js
inc
jecxz
pop
pop
pop
mov
loope
dec
and
jae
leave
or
mov
lcall
push
sbb
mull
adc
dec
std
add
por
jae
das
out
pop
push
pop
sbb
push
sub
xlat
push
mov
xchg
pop
insl
scas
push
dec
arpl
inc
mov
and
std
mov
in
outsl
scas
push
push
cmc
sbb
push
jmp
cmp
fnstenv
mov
lcall
xor
dec
mov
xor
movsb
adc
lea
xlat
mov
cmp
aam
imul
ret
in
pushf
out
std
sub
cwtl
ljmp
adc
inc
mov
sub
int3
mov
mov
mov
insb
loop
es
cmp
mov
sarb
xor
dec
push
ds
out
sbb
pop
or
xor
jg
mov
dec
iret
add
out
add
lcall
or
scas
add
sbb
mov
mov
mov
aas
into
mov
scas
push
aaa
popa
stos
imull
aam
stos
fwait
cli
mov
push
cmp
sahf
repz
je
iret
dec
dec
pop
or
mov
mov
pop
and
xor
lahf
insl
jbe
jp
out
lcall
mov
sub
insb
mov
test
jg
int
mov
mov
scas
orb
push
outsb
call
add
push
inc
add
addl
call
shll
arpl
add
loope,pt
and
fimuls
iret
cmp
sbb
dec
and
mov
or
jo
adc
dec
out
lea
sub
cld
fwait
mov
push
int3
dec
hlt
pop
adc
mov
in
mov
adc
lret
or
jns
ret
fidivrs
daa
xchg
fwait
xchg
push
jmp
mov
loope
mov
push
push
mov
xchg
pushl
adc
jno
pop
or
push
push
ret
movsl
pop
push
adc
imul
dec
pop
pop
jle
xchg
shl
lock
mov
fidivs
inc
push
pop
mov
call
pop
adc
jns
stc
ja
jo
movsb
sti
jle
cmp
movsb
int
xor
repnz
cmp
pop
enter
dec
incl
repnz
mov
int3
mov
or
jp
inc
add
jle
aam
arpl
mov
add
and
pushf
daa
int
cmc
dec
rorl
push
repz
adc
lods
xor
mov
mov
mov
test
mov
adc
cmp
adc
inc
enter
cld
std
out
in
dec
or
outsb
push
pop
imul
pop
push
dec
sbb
call
rclb
xchg
cmc
inc
sahf
fiadds
fnstcw
lods
add
popf
nop
cmp
loop
sbb
mov
push
mov
movsl
in
and
je
add
mov
jge
mov
sub
nop
repz
push
jl
push
lcall
fldcw
xor
jb
movsb
bnd
and
mov
iret
sub
cmpsb
je
sub
das
js
pop
add
jg
imul
cmpsb
mov
outsl
dec
xor
roll
lcall
dec
dec
jbe
sub
sub
fcomi
push
lret
mov
shl
dec
jo
mov
lods
inc
popf
mov
pop
rcll
lock
lods
es
cmpsb
aaa
mov
mov
mov
in
sub
lahf
test
nop
faddl
mov
push
mov
mov
or
jecxz
mov
addr16
push
lods
or
push
subb
icebp
xchg
and
pop
lock
ja
iret
add
xchg
arpl
ret
sbbb
dec
in
test
pop
cli
std
sti
lods
subl
cmp
xchg
sahf
leave
ljmp
inc
je
movb
sub
je
pop
push
sub
outsl
cwtl
addb
push
lret
pop
aas
dec
and
fs
xchg
fisttpll
sarl
iret
cmp
outsl
mov
inc
add
clc
cmp
jae
pop
add
addr16
dec
inc
cld
and
add
xor
mov
mov
mov
hlt
test
xchg
xchg
jnp
adc
xor
pop
shrl
stos
xchg
pop
jb
pop
sbb
out
mov
xchg
in
sbb
mov
loop
ret
dec
fimull
add
out
inc
sub
shrl
jnp
mov
fwait
mov
test
xchg
and
stos
ds
movd
inc
psllw
xchg
shlb
ficomps
notb
stos
jp
xor
cmpsl
sub
jp
stos
out
ret
fcmovne
pop
movsb
inc
int3
lret
arpl
divb
mov
cmpl
imul
and
testb
pop
movsb
fbstp
sub
xchg
loope
lret
cmp
and
xchg
aas
popf
mov
mov
call
shrb
push
pop
divl
xchg
jl
ds
push
and
dec
lock
int
mov
pushf
imul
sbb
lods
and
into
mov
arpl
insl
orb
lods
iret
mov
es
in
sti
cwtl
fistl
add
cwtl
adc
push
dec
mov
cmpsb
mov
xor
es
jo
shrb
jae
int
cmp
jge
sub
repnz
inc
jmp
xlat
into
mov
push
xchg
dec
sbb
test
fcmovnb
out
inc
ja
addr16
int3
imul
or
push
cld
xlat
shlb
jecxz
pop
jmp
add
jne
scas
mov
jecxz
hlt
js
ret
add
lds
adc
subb
pop
push
add
cmp
movsl
xchg
mov
frstor
ss
dec
call
into
ret
pop
mov
in
sub
out
repz
aam
aad
sbb
xchg
clc
mov
xorl
leave
ljmp
cld
mov
mov
push
stos
ss
cs
or
fdivl
sub
jge
mov
cwtl
xchg
cmp
imul
int
clc
inc
push
cmc
enter
jmp
js
jb
mov
xor
cmc
pop
stos
insl
cmp
stos
mov
repz
cmpsl
mov
mov
scas
cmp
scas
repz
cmc
stos
cld
bound
jo
xor
mov
movsb
int
sub
cmpsl
je
jmp
sbb
jns
or
or
cli
adc
mov
aas
mov
add
jecxz
pop
mov
mov
int3
push
loopne
sbb
loopne
cmc
and
mov
fwait
jmp
pop
nop
xor
xor
jae
sti
pusha
sbb
decb
xchg
das
fimull
ret
dec
icebp
cli
add
hlt
int3
jns
int
or
fisttpl
xor
repz
push
adc
sub
pop
jge
jo
inc
cmp
dec
stos
out
sub
inc
mov
not
subl
inc
xchg
stc
xor
push
fmuls
and
lcall
pop
add
push
and
imul
pop
sub
repz
scas
sti
dec
dec
add
or
cmp
ret
dec
mov
insl
cmpsb
and
fs
pop
nop
lock
fldt
push
jbe
add
testb
scas
xor
push
jno
and
adc
jmp
xchg
xor
xchg
fstl
sbb
outsl
adcl
mov
xchg
fisubl
xchg
mov
pop
adc
mov
jno
push
aas
stc
repz
arpl
jns
mov
ret
sbb
adc
inc
or
adc
cmpsl
js
mov
cmpsb
stc
aad
mov
icebp
xchg
ret
sub
jae,pt
nop
dec
push
mov
pop
or
pusha
dec
mov
mov
xor
push
pop
jg
push
jmp
sbb
fs
sub
dec
mov
mov
pop
roll
inc
sbb
out
scas
int
mov
mov
jg
sbb
ret
sbb
dec
daa
imul
mov
jns
cmpsb
out
mov
into
pop
inc
loop
sub
lock
sub
xchg
sar
push
mov
hlt
and
enter
cld
jmp
shufps
jecxz
gs
pop
in
push
cld
nop
inc
add
mov
jmp
outsb
push
adc
adc
lret
std
leavew
andb
jl
or
inc
stos
bound
dec
into
fadd
mov
stos
enter
mov
inc
in
ret
or
and
cmp
add
test
xor
mov
aad
ljmp
fisttpll
inc
fisttps
jg
cli
out
loop
mov
jno
pop
inc
push
rcrb
out
mov
cmp
add
inc
cs
jmp
pop
adc
mov
jae
lcall
scas
flds
mov
mov
cmp
cmpl
lods
mov
mov
adc
push
sbb
cwtl
jge
inc
out
and
sbb
dec
mov
popf
es
xchg
cwtl
scas
int3
lea
std
sbb
je
push
jno
mov
or
popf
sub
mov
pavgb
inc
in
fbstp
or
cmp
mov
shrl
xchg
push
mov
mov
call
and
jecxz
mov
cwtl
iret
scas
push
xor
test
ljmp
xor
not
add
push
and
fnop
lahf
lods
cs
inc
pop
xchg
sub
shll
popf
sub
pop
clc
enter
mov
mov
push
push
pop
or
add
cmpsb
push
sbb
mov
rorl
cmp
shl
ja
and
cmpsb
jo
sbb
fwait
scas
add
jmp
lods
out
mov
lods
sbb
sbb
les
es
mov
jnp
daa
pop
sarb
dec
sub
sub
adc
or
mov
in
sub
cld
clc
mov
mov
mov
sbb
inc
push
sub
jns
jne
dec
loope
jno
fsubrl
jecxz
add
loopne
adc
imul
xchg
jge
jecxz
gs
stos
popa
daa
push
sbb
stos
pop
leave
cwtl
aam
xor
xor
pushf
scas
xlat
add
and
aas
push
pop
popf
or
mov
or
pop
stos
lock
test
fisttps
out
mov
xchg
outsb
loope
scas
stos
shr
insb
xchg
out
data16
and
lods
call
adc
cmp
mov
adc
aam
push
xchg
pop
lahf
cwtl
push
sub
test
dec
xor
sbb
lret
scas
and
mov
adc
push
xchg
movsb
jne
adc
std
adc
cld
std
jmp
in
orl
fnsave
inc
jecxz
xchg
in
fsts
fwait
mov
pop
xchg
cmc
adc
idivb
pop
lock
mov
mov
enter
mov
lods
mov
or
xlat
repnz
loop
icebp
lea
jnp
jp
sub
lahf
pop
fcomps
dec
testl
sbb
or
sbb
xor
or
lcall
lcall
mov
jge
stos
add
out
and
xchg
ljmp
and
push
cmp
sub
xor
mov
in
xchg
mov
scas
sub
insl
fildl
inc
push
lds
xor
xchg
out
mov
inc
call
xchg
testb
cld
dec
ljmp
scas
pop
popa
fucomp
lret
sub
sti
mov
mov
jae
adc
sahf
xchg
add
mov
jo
in
pop
and
out
cmpsl
mov
sub
lock
into
xorl
loop
stos
xchg
cld
jae
test
negl
xchg
fsubs
adc
arpl
dec
push
lods
xchg
sbb
xor
movsb
inc
mov
out
cmp
pop
or
cmpsl
jae
mov
scas
inc
push
test
inc
adc
xchg
push
je
ret
aam
and
loope
inc
insb
cmp
jecxz
jns
cmp
cmpl
mov
sbb
call
xchg
aam
js
bound
pop
test
sbb
aas
out
xchg
jae
xor
test
jl
cli
jnp
dec
sub
cli
sbb
ds
lcall
mov
push
jno
bound
lea
add
jb
push
jge
inc
mov
je
je
cmpsb
pop
in
adc
dec
imul
mov
lret
sub
cs
lds
xchg
shll
dec
push
or
cmp
je
popf
addr16
pop
sub
cli
jae
mov
jmp
mov
xor
rclb
xor
out
jb
lea
push
mov
inc
mov
add
loope
mov
cmovp
adc
adc
mov
and
into
lret
jbe
pop
stc
or
sbb
push
jnp
push
out
inc
lods
jbe
sub
enter
xchg
icebp
ljmp
mov
jne
pushf
shl
and
sub
fnsave
or
fmuls
mov
enter
add
sbb
fistpll
pop
aam
sub
sbb
adc
fdivrs
mov
mov
pop
add
fwait
add
push
pop
out
adc
mov
pop
aas
and
jo
pop
adc
fadds
push
mov
in
jno
cmp
js
fidivl
mov
bound
not
shlb
cmp
incb
xor
mov
arpl
mov
icebp
icebp
mov
addr16
outsl
test
js
add
cld
cmp
outsl
dec
je
or
scas
orps
fistl
popa
push
and
decl
addr16
and
gs
sub
mov
pop
or
daa
jg
push
xor
sub
lret
cwtl
les
loope
jl
rorb
test
add
inc
and
lahf
mov
inc
test
sub
call
pushf
loop
leave
sar
in
sti
popa
mov
xchg
shrb
cmp
fsts
cmpsl
insl
shrb
inc
cli
rol
inc
xor
rorl
and
xchg
sub
lcall
xchg
cmp
ljmp
xor
inc
andl
add
mov
popw
dec
jecxz
aaa
fdivr
repnz
sub
sub
ret
js
and
sub
pop
jns
jp
sbb
and
cmpsb
movsb
lret
test
cmp
ljmp
and
les
mov
cli
pop
mov
filds
push
stos
mov
and
cmp
lock
pop
insl
imul
gs
lods
rcll
clc
adc
aas
lds
repz
pop
int3
dec
push
mov
clc
push
subl
pop
pop
pop
mov
sbb
in
pop
iret
push
mov
std
psllw
push
xchg
test
roll
fimuls
faddl
jb
nop
into
xchg
mov
mov
mov
pop
je
enter
jle
mov
cld
rolb
mov
xor
mov
mov
pop
cmp
pop
cmp
stos
jb
test
mov
lahf
jo
push
fs
pop
in
cwtl
cs
outsb
cli
mov
mov
push
mov
rclb
test
les
out
or
jb
call
and
test
push
scas
arpl
push
test
in
sub
jp
ss
imul
lds
cltd
fstpt
or
ret
add
mov
mov
int3
dec
or
push
pop
mov
jbe
pusha
mov
arpl
and
fmul
dec
mov
cmp
fistps
fwait
test
sub
jecxz
push
inc
or
sub
xor
dec
dec
fcoms
jnp
iret
in
pop
clc
sbb
push
push
mov
xchg
xchg
lcall
stos
mov
mov
call
or
pop
stos
cmp
sub
xchg
push
ss
mov
bound
pop
scas
inc
jmp
pop
and
adc
adc
cmp
in
mov
pop
sti
or
sbb
sub
pop
cmp
xchg
cmp
mov
shrb
inc
sub
popa
add
mov
cld
push
xor
lods
stc
ficompl
pop
cltd
mov
vphsubdq
or
push
shlb
push
mov
loopne
or
push
or
roll
sub
mov
ds
xor
scas
arpl
or
push
movsb
clc
es
loope
or
inc
lods
out
ja
lock
clc
push
mov
mov
add
nop
mov
dec
nop
out
lea
leave
insb
jo
jno
sbb
mov
lods
rcl
jbe
cmp
cmpsb
lea
into
out
arpl
xor
adc
add
pusha
int3
xor
mov
mov
inc
jge
lock
xor
push
nop
adc
jnp
sarb
in
shlb
jmp
xchg
xor
arpl
mov
jl
inc
and
xchg
cmc
sti
lcall
adc
ss
sbb
jmp
xchg
mov
addr16
aas
mov
push
addr16
jmp
xor
ss
ficoml
lcall
nop
in
into
fwait
leave
sbb
sbb
xor
movsb
and
pusha
push
mov
xor
mov
cli
xchg
mov
cmp
and
push
xchg
adc
adc
xchg
icebp
dec
and
es
inc
xor
jae
outsb
andb
push
sub
or
or
lret
xor
in
mov
jmp
scas
inc
aad
cld
sbb
test
mov
push
ds
clc
mov
in
adc
jecxz
or
xor
ds
lods
lds
adc
stc
xor
in
adc
dec
cmp
pop
jae
cmp
fwait
pop
cmp
add
pusha
mov
push
repz
daa
inc
scas
mov
or
push
jmp
sti
dec
lods
pop
addr16
test
xor
jnp
popa
dec
sub
inc
fcomps
lods
dec
push
jp
fs
inc
lret
nop
cs
mov
jb
dec
adc
jge
mov
lahf
mov
inc
call
sarl
lcall
or
ficoms
adcl
and
addr16
adc
or
adc
sbb
test
sub
add
sbb
dec
ds
loop
adc
pop
add
in
jno
ret
pop
loopne
stos
xchg
int
xor
pop
xor
xchg
adc
sub
fmull
mov
test
mov
jl
dec
jae
loop
pop
pop
lret
sub
jb
or
mov
dec
orb
jl
sub
jo
sub
pop
pusha
aas
pop
adc
imul
lret
add
cmc
push
pop
mov
push
cmp
sbb
mov
jl
jno
mov
push
add
fnstenv
insl
xchg
xchg
movb
clc
mov
xchg
push
push
cmpsb
mov
es
hlt
aam
rolb
jno
mov
add
mov
add
es
pop
stos
xlat
xchg
cmp
mov
enterw
faddl
ret
lods
sarb
ljmp
fimull
sub
xchg
cmp
mov
xchg
stos
pop
icebp
mov
push
cmp
sub
ret
popa
sub
mov
or
mov
movl
ja
xor
add
pop
loop
in
and
xor
or
xor
outsb
jbe
push
int3
arpl
mov
cmpsb
jg
cltd
and
negb
mov
push
mov
push
inc
inc
daa
jne
lret
push
adc
cs
inc
sub
into
sub
cld
mov
xchg
iret
lret
jge
int3
mov
xlat
mov
mov
sub
and
aam
inc
or
mov
fsubs
fcmovb
sbb
outsl
mov
loop
imul
xor
or
pop
cs
pop
aaa
sub
out
mov
sub
bound
adc
fildll
popa
lods
mov
push
cwtl
rclb
call
outsb
or
cwtl
mov
inc
cmp
cltd
adc
test
add
jmp
or
sbbl
inc
hlt
cmpsb
repz
mov
mov
mov
sbb
pop
cld
cmp
xchg
lret
pusha
xor
inc
ljmp
xor
lret
in
loopne
fdivp
cmp
int
sub
push
in
sbb
jbe
test
and
sub
push
xchg
aaa
mov
shl
sbb
mulb
xchg
test
sub
xorl
cmp
nop
pop
fiadds
sub
clc
fsub
jno
filds
nop
pop
aas
das
adc
repz
pushl
ljmp
cmp
dec
add
cmp
jge
dec
cmpsb
jle
stos
xorl
pusha
dec
out
insb
lea
sub
push
nop
pop
pushf
add
dec
das
cmp
cld
gs
mov
negb
lds
repz
jp
mov
jb
mov
insb
call
pop
aaa
jl
fcoms
pop
incl
jle
aaa
sub
jp
sti
imul
inc
stos
lret
cmp
and
or
scas
mov
jecxz
gs
cwtl
mov
push
mov
clc
pop
insb
jecxz
popf
pop
jno
mov
and
in
repz
fadd
sti
pop
pop
sbb
xlat
es
xchg
add
je
add
jge
jo
adc
xor
push
and
xchg
cmc
fistps
or
aas
iret
cs
lods
es
in
fucomip
sub
shlb
aas
xchg
sbb
cmp
mov
xor
ds
popf
loope
leave
movsl
pop
inc
mov
mov
sub
mov
cmp
or
mov
pop
lock
ja
scas
push
xor
fisubs
jo
push
pop
jecxz
outsl
cli
out
jo
mulb
xchg
fdivs
sub
xchg
mov
outsl
jg
lock
dec
cli
xor
dec
mov
fs
xor
pop
test
int
push
add
aas
mulb
cmpsb
jb
clc
push
cs
or
or
adc
inc
jmp
sti
outsl
cwtl
mov
dec
inc
jle
loop
mov
xor
cs
xorl
and
dec
add
inc
ljmp
jne
or
inc
mov
outsb
push
add
xchg
leave
shll
dec
movsb
js
xchg
pop
stos
sbb
mov
js
jbe
push
inc
sbb
loopne
cmpsl
adc
mov
xor
dec
xlat
xor
dec
lcall
test
ss
mov
sub
push
xchg
pop
shrl
addr16
jmp
lock
pop
out
out
jp
inc
scas
mov
sub
xchg
enter
aaa
pop
jb
loopne
push
push
jbe
in
stc
or
call
flds
sub
je
cmpl
pop
add
mov
popf
outsb
div
xor
sbb
nop
ds
mov
xor
pop
xlat
push
mov
scas
lods
sbb
test
lock
incl
ss
pop
fiaddl
cmp
or
mov
fwait
arpl
and
jecxz
pop
jl
push
cmpsb
mov
imul
cld
jb
cmp
mul
insb
cld
xorl
movsl
ret
xchg
mov
push
or
insl
pop
sub
into
dec
arpl
inc
ss
movsb
es
push
pusha
fnsave
mov
add
leave
aam
xchg
xchg
enter
test
out
gs
jo
mov
mov
inc
loop
add
imull
popf
lock
jle
mov
cmp
add
fldl
loope
lods
jl
jecxz
test
ds
addr16
xor
and
mov
imul
or
jmp
pop
outsl
popa
xchg
xchg
movsl
mov
dec
pop
cmp
in
ds
je
push
pop
sbb
fdivl
xchg
cmpl
scas
lods
int
xchg
ret
sbb
mov
call
fs
mov
push
lcall
in
nop
mov
mov
push
jnp
aas
xchg
add
push
push
lcall
loope
or
fcmovb
rclb
jle
out
cmp
xlat
add
mov
xchg
sahf
cs
mov
pusha
jg
fwait
sbb
out
imul
idivb
and
dec
hlt
sbb
mov
sarb
mov
cltd
ret
sbb
aam
ds
cli
aaa
push
add
sub
mov
fs
inc
or
xor
sub
push
xchg
subl
loopne
xlat
loop
pop
pop
pop
cmp
icebp
mov
push
inc
movsb
lret
ret
jl
and
jo
repz
jnp
mov
cli
enter
insb
mov
fsubs
adc
xorl
pop
stc
dec
mov
push
mov
pop
mov
xor
fidivrs
cmp
sub
or
xchg
imul
arpl
inc
jecxz
mov
mov
rorb
pop
gs
popa
iret
add
jg
sbb
inc
fidivrs
lods
es
push
add
push
mov
dec
adc
mov
out
cmp
cmp
xchg
sub
push
xor
test
hlt
lock
mov
xor
ss
sbb
test
lods
or
or
insb
int3
loopne
jp
addb
sub
push
inc
and
dec
jmp
add
jne
mov
fbstp
pushf
or
outsb
push
inc
push
icebp
pop
rolb
push
mov
sub
xor
xchg
add
add
shrl
inc
jg
and
or
mov
fdivrl
add
es
mov
xor
repnz
and
int3
rorb
pop
sub
adc
or
fs
fucom
push
insl
out
cmc
rol
xor
fists
inc
lods
test
rorl
xor
loope
punpckhdq
je
inc
push
aam
add
lret
imul
pop
jb
mov
jmp
push
ja
bound
aas
aas
xor
call
lret
mov
pop
out
jg
repz
jl
pop
dec
mov
add
and
push
ret
scas
lahf
push
stos
jl
test
inc
int
mov
jns
jo
movsl
push
lods
cltd
mov
mov
mov
mov
inc
push
jmp
pop
rclb
mov
imul
call
movsl
and
aaa
arpl
pop
cmp
sbb
push
int3
inc
out
loop
inc
or
aas
inc
aad
rorb
sti
xor
dec
cmc
out
sub
icebp
add
lret
pop
aaa
mov
cmp
data16
xchg
xchg
cwtl
and
dec
movsb
xchg
dec
dec
testb
or
fadds
mov
ds
mov
dec
out
and
jge
dec
jg
lds
inc
mov
mov
mov
dec
add
adc
notl
mov
adc
sbb
jb
out
decb
stos
or
jmp
roll
adc
sbb
push
test
jp
daa
jnp
repz
fidivrl
or
ss
xor
or
dec
jle
lea
nop
rcl
mov
dec
adcb
nop
or
in
lret
ss
xchg
add
repnz
add
inc
test
cmp
in
andl
sub
into
jge
jbe
arpl
and
mov
xchg
ret
mov
ret
sub
cli
iret
push
push
pop
mov
jp
int
fdiv
fsubs
dec
mov
jne
adc
fwait
in
dec
cmp
push
pop
jge
mov
lcall
adc
imul
mov
inc
cmc
push
arpl
jne
out
test
or
xor
stos
pushf
cmp
mov
xor
jns
xor
mov
js
jb
fwait
loop
lods
lods
xchg
pop
std
orl
mov
shlb
dec
mov
adc
pusha
xchg
and
add
xchg
xchg
xor
ja
mov
movsb
lds
mov
pop
cmp
fdivrs
lods
sarl
lahf
loop
jnp
adc
mov
jne
in
stc
mov
outsl
sti
mov
outsl
call
sbb
mov
dec
jl
leave
xchg
icebp
inc
in
push
mov
movsl
repz
ret
insb
out
jne
scas
cltd
lds
jnp
movsb
rol
mov
bound
mov
mov
jge
xor
cmp
mov
cmpsb
insl
push
add
stos
nop
dec
dec
mov
int
sti
cmp
mov
inc
movsl
ds
push
pop
mov
dec
xor
lahf
add
stc
cmp
mov
cli
ljmp
mov
push
lret
ja
pop
lahf
cld
fildl
fisttps
jp
sbb
push
cmp
je
rcll
xchg
loopne
cld
fwait
arpl
cld
adc
decb
mov
and
cmp
pop
xchg
adc
mov
mov
mov
fisubl
in
in
pop
adc
push
jb
mov
push
sar
sti
push
int3
adc
cmp
iret
add
xchg
lahf
stos
test
leave
popa
lods
in
in
xchg
jp
xor
or
aad
sub
push
push
imul
inc
jp
daa
int3
out
les
aaa
xor
mov
jo
jl
inc
mov
jo
lods
push
inc
mov
fists
ret
xlat
jns
sub
mov
mov
push
jmp
sbb
and
lods
lods
rcl
pusha
cltd
pop
movsb
clc
pushf
inc
pop
js
sub
andb
gs
imul
sub
stc
addr16
lahf
pop
dec
jns
sarb
sbb
icebp
sub
ror
les
sub
or
push
cli
mov
outsl
jae
int
arpl
mov
sbb
and
pop
mov
fsubl
in
stos
clc
out
mov
je
div
and
push
test
mull
je
and
ds
pop
and
ror
xchg
jl
push
dec
xor
jnp
sbb
sbb
aad
push
aaa
or
shl
loopne
lcall
mov
ds
jo
jg
add
lods
lods
and
sti
sbb
ss
push
mov
call
cli
mulb
fucomp
sub
sub
sbbb
sti
cmp
adc
push
xor
mov
cltd
mov
in
dec
cmp
shll
xchg
jnp
jge
fldenv
fs
popf
mov
xor
cli
and
test
mov
mov
jbe
adc
stos
mov
mov
fs
mov
jl
test
adc
xor
decb
and
sti
cltd
mov
das
lar
pop
dec
sub
shlb
aad
pop
sbb
test
cld
mov
out
or
or
cli
jo
adc
lcall
inc
int3
ja
adc
scas
jg
dec
repnz
stc
lret
mov
fstl
outsb
push
push
movsl
ret
movsb
lahf
xor
dec
insl
int
cmp
add
mov
push
mov
dec
aam
test
packssdw
out
add
or
pop
pop
xor
xor
xchg
push
outsb
mov
sbb
leave
xchg
dec
inc
adc
in
and
add
mov
lcall
daa
add
data16
sbb
dec
mov
cmp
in
imul
nop
xchg
sub
mov
add
in
shll
jecxz
mov
xlat
in
cmc
mov
aad
roll
mov
pop
fwait
dec
das
and
adcb
aam
dec
ret
sbb
int3
int
gs
push
add
mov
enter
mov
cmp
add
outsb
imul
push
out
adc
dec
out
imul
insl
push
push
cmp
lcall
xchg
dec
in
out
adc
lea
lock
bound
xor
xor
dec
cmc
int3
mov
push
cwtl
jae
push
pusha
scas
in
pop
enter
repnz
push
scas
dec
pop
scas
add
stc
fmuls
sbb
sbb
xchg
cmp
lcall
stc
jg
fnsave
mov
xor
pop
dec
cmp
add
mov
mov
push
jl
imul
xor
imull
lsl
dec
jmp
popf
pop
out
cmp
gs
rcrl
push
sub
sub
hlt
or
repz
jg
dec
mov
mul
sbb
dec
fiaddl
mov
pop
cmp
fmull
loop
add
xchg
cmp
data16
or
or
and
push
pop
or
shlb
ljmp
cmpsb
adc
pop
jae
pushf
pop
sbb
xor
xor
movsl
imul
popf
pop
dec
xchg
pop
pop
push
mov
lea
and
and
add
push
mov
adc
call
push
pop
pop
xchg
pop
fcompp
mov
add
scas
rcrb
outsb
push
inc
out
dec
mov
push
jmp
xor
test
loope
mov
jl
stos
xor
in
ret
pop
inc
lret
pop
and
push
or
pop
imul
repnz
shl
js
jns
mov
cmp
subl
sbb
outsb
mov
push
pop
fnstcw
push
push
and
inc
push
mov
push
push
enter
je
shr
sub
sbb
jo
inc
dec
test
push
mov
xchg
fnstenv
xchg
jne
sahf
jno
cmp
jo
xchg
ss
pop
insl
jbe
fistpll
cld
push
imul
aaa
lret
outsb
out
add
dec
fldl
jmp
repnz
mov
mov
popf
sbb
mov
fadds
add
push
mov
nop
and
add
inc
popf
in
adc
pop
push
sub
shlb
jl
jae
push
add
jecxz
and
in
xlat
xchg
adc
imul
inc
xchg
add
dec
stos
pop
imul
repnz
movsl
xchg
mov
and
sbb
insb
mov
mov
shlb
and
btc
push
or
pushf
dec
icebp
jecxz
mov
xor
movsb
and
pop
jge
pop
imul
jl
das
enter
pop
sbb
fcmovb
lahf
insb
mov
pop
inc
dec
outsl
out
jl
adc
out
gs
xlat
jmp
iret
popl
cmp
sub
ds
sbb
int
push
add
inc
out
stc
sub
adc
adc
mul
repz
rclb
or
sbb
dec
movsb
lret
mov
xor
filds
cmp
bound
mov
push
cmp
mov
jle
pushf
push
shlb
data16
fdivp
out
sti
inc
push
jbe
jecxz
push
mov
out
movsb
sahf
imul
push
push
mov
cmp
add
into
clc
xor
out
add
scas
or
adc
xchg
idivl
sbb
mov
dec
jbe
cmp
sub
push
jns
jg
mov
imul
add
lea
pop
stos
mov
jge
adc
gs
adc
mov
imul
jbe
fsubs
mov
cltd
adc
jle
xlat
pop
push
cli
mov
fstpl
icebp
sti
jne
js
fnstenv
cs
insl
jns
cmpsl
fildll
jae
sub
in
mov
and
arpl
mov
shll
add
push
and
or
cmpsb
adc
rolb
xchg
pop
aaa
xchg
xor
cmp
pop
mov
adc
repz
mov
xor
insb
adc
ss
mov
sub
mov
mov
inc
rolb
xor
and
push
xor
push
add
mov
out
lea
or
lds
scas
mov
and
dec
push
dec
sub
xchg
mov
aam
pop
jmp
shlb
cli
sbb
lcall
inc
xlat
ja
mov
mov
mov
popf
mov
lcall
lock
rclb
cltd
or
push
or
cltd
jnp
push
xor
lods
aas
popa
dec
lods
adc
jl
sbb
jge
les
push
xor
idivl
xchg
push
mov
inc
fwait
mov
inc
data16
push
or
jmp
loop
daa
sahf
and
cmp
jmp
xchg
lds
or
xchg
out
sbb
pop
add
frstor
jp
test
and
fst
add
dec
lahf
in
xor
popa
std
add
sbb
iret
sub
xchg
mov
cli
xorl
pop
sub
leave
dec
test
mov
flds
lds
jb
cld
imul
popa
mov
leave
or
stc
dec
dec
orb
xor
loopne
rcrl
in
xor
or
mov
mov
in
fstpt
aas
push
adcb
or
gs
mov
or
mov
subl
ljmp
jno
mov
das
cmp
mov
sti
sarl
das
in
jp
dec
push
add
mov
sbb
insb
out
fcmovu
add
push
lcall
imul
pop
int3
xorb
inc
fwait
xchg
xor
loopne
pop
stc
mov
sbbl
mov
mov
scas
jge
ljmp
xchg
adc
lret
icebp
popf
lret
das
pop
xchg
jg
or
shl
inc
add
out
xor
xchg
je
cmp
int3
jl
in
adc
inc
cltd
lcall
std
xchg
xchg
or
out
shll
mov
and
and
or
jbe
leave
int
shl
push
in
in
inc
inc
dec
out
xchg
mov
mov
mov
arpl
xchg
jmp
mov
daa
mov
shll
mov
push
inc
cmp
cmpsb
stos
jns
xchg
push
add
aad
mov
lods
push
lock
call
pusha
xchg
roll
dec
testb
cmp
sbb
pop
sbb
das
jne
sbb
and
sti
dec
lret
or
lds
ret
adc
adcb
add
arpl
cmp
inc
test
jg
int3
imul
outsb
fcoms
or
push
xchg
repz
jecxz
xchg
and
and
jb
pop
imul
mov
mov
retw
sub
xchg
mov
stc
push
push
add
lret
jp
jb
dec
outsb
add
lret
pop
ret
and
push
mov
ret
xchg
hlt
addr16
push
in
xor
imul
pop
std
or
dec
lahf
sbb
decb
and
inc
or
inc
cmpsb
fldl
repz
add
mov
pop
jno
out
jbe
push
pop
fidivs
das
jne
inc
xorb
int3
add
mov
outsl
aas
inc
popa
mov
stc
xchg
ficompl
call
push
inc
stc
cmp
push
push
jns
clc
in
lock
mov
jns
mov
orb
negl
or
jo
cltd
adc
or
int
les
push
adc
icebp
dec
ds
xchg
stos
bound
clc
lcall
dec
mov
lahf
mov
dec
addr16
lock
gs
idivl
push
daa
cmp
xorl
fidivs
pop
xchg
ds
lock
out
mov
jmp
popa
fwait
mov
pop
iret
ss
imul
push
add
xor
loop
loope
or
adc
pop
and
mov
out
pop
loop
rol
fildl
sbb
cs
jne
mov
das
dec
mov
int3
mov
adc
dec
pop
mov
xchg
int3
inc
jmp
mov
pop
inc
jne
lods
cmc
and
mov
cmpsb
insl
jb
sub
or
in
xchg
lock
out
ds
sti
pop
sub
insl
loop
shrl
frstor
dec
cmp
push
adc
aam
jbe
fs
jecxz
icebp
push
sbb
in
fwait
sub
sub
pop
in
loop
ljmp
lods
jmp
mov
and
inc
mov
insl
das
xor
test
adc
push
sub
and
mov
jb
inc
imul
add
das
or
int3
sbb
mov
fs
inc
out
mov
fwait
dec
xor
pop
shrl
iret
stc
pop
jmp
cwtl
mov
pop
test
stc
push
les
int
add
jle
push
jnp
jecxz
jecxz
jl
cld
nop
sub
call
movsb
insl
loopne
adc
jle
sbb
rcll
mov
test
shl
movsb
sbb
xlat
cmpsb
mov
imul
xor
push
in
jmp
add
sub
mov
xor
ss
or
sbb
sbb
mov
or
ja
mov
iret
or
push
shlb
popa
mov
neg
inc
xor
or
mov
or
fcoms
shl
popf
je
inc
mov
fisttpl
frstor
outsl
dec
xor
lods
cmpsl
jb
int
clc
adc
add
add
insl
pop
movsb
xor
shlb
out
and
mov
call
push
pop
push
dec
mov
lahf
and
insl
mov
and
shlb
add
pop
and
stos
shr
xchg
dec
rcr
push
cltd
pushf
adc
stc
xchg
in
adc
and
jmp
jp
jg
and
inc
mov
bound
dec
pop
js
xor
out
stos
test
les
sbb
inc
popf
xor
pop
xchg
mov
or
push
pushl
scas
mov
je
movsb
andl
in
pop
imul
test
imul
push
scas
and
gs
cs
lret
in
int
pop
popf
pop
mov
push
cmp
lock
push
addl
test
jp
repnz
mov
adc
xchg
push
dec
lock
and
inc
js
push
mov
xchg
adc
loopne
ret
cmpsb
dec
push
cld
sub
pushf
mov
cmp
fdivr
push
sub
pop
jb
leave
or
int3
pop
clc
jg
push
sub
stos
imul
mov
dec
ds
sub
pop
shlb
jns
movsb
mov
jmp
xchg
jl
xchg
push
mov
xlat
mov
sub
call
mov
inc
adc
gs
loopne
sbb
mov
pop
cmc
jne
jle
ret
inc
xchg
movsb
mov
outsl
push
outsl
orb
jb
or
aas
pop
js
mov
aaa
xor
jle
xchg
loop
iret
xor
nop
push
mov
rorl
ret
rcll
adc
clc
push
xor
mov
sub
dec
cmp
mov
subb
arpl
lock
bound
jle
push
xchg
icebp
test
mov
sub
cmp
sub
rorl
push
dec
mov
sub
psubq
dec
cmp
ss
dec
mov
jnp
andl
jle
jb
in
rol
sbb
sarl
xchg
popf
mov
mov
movsl
or
mov
add
outsb
fwait
xchg
jne
push
sti
data16
hlt
sbb
xlat
stos
daa
pop
enter
mov
xchg
test
mov
test
mov
sbb
mov
adc
adc
call
std
les
shrl
dec
mov
dec
push
es
sub
addb
jbe
iret
jle
mov
jns
pop
std
jle
push
pop
or
ds
pop
in
mov
xor
mov
mov
lcall
dec
mov
dec
mov
call
push
add
out
es
xchg
das
adcl
sbb
jl
lret
sub
mov
in
dec
ljmp
and
jl
loop
pop
push
jmp
fimull
push
cs
lods
and
out
mov
pop
ret
mov
xor
mov
adc
dec
cmp
push
push
lods
dec
cs
movsl
test
test
arpl
rcr
sahf
dec
pushf
mov
xchg
cmp
popf
lea
in
jae
mov
aad
xchg
mov
call
cmpsb
add
xchg
add
int3
jge
dec
out
pop
repz
jno
mov
rdmsr
mov
mov
outsb
lods
push
mov
test
inc
pop
ja
mov
mov
inc
mov
cmp
jp
sets
ss
scas
vmwrite
int
push
lock
mov
dec
inc
sub
xor
aas
rep
lods
outsl
push
cltd
ja,pn
enter
sub
shlb
je
lds
repz
leave
push
add
mov
jb
jbe
mov
test
movsb
test
ss
inc
aad
testb
lods
andl
adc
out
lock
xor
cs
push
mov
lock
or
lock
data16
movsl
adc
dec
sbb
or
mov
loop
cs
push
adc
push
test
jg
mov
stos
cmpsb
sub
data16
mov
int3
aam
mov
dec
insb
aad
xor
test
movb
sbbl
loopne
dec
add
pop
add
aas
into
cld
imul
outsl
adc
sahf
inc
and
dec
js
adc
xor
loopne
int3
xchg
xchg
mov
sub
mov
push
nop
lea
neg
fcompl
stos
enter
cmpb
dec
sub
loope
cs
movsl
jle
xchg
in
cmp
jp
and
jae
icebp
pop
mov
outsb
adc
fucomip
push
pop
popl
fcmove
xchg
adc
xchg
or
push
ss
xchg
sbb
fistpl
dec
inc
sub
stc
xchg
cmpsl
divl
sbb
pop
add
jns
or
pushf
arpl
xlat
sbb
dec
arpl
push
mov
iret
and
push
nop
jo
add
repz
inc
ror
ficoml
add
jno
push
out
sub
inc
jecxz
das
movsl
mov
stos
mov
fstp
and
daa
insl
lahf
mov
push
insb
mov
xor
xchg
mov
sahf
adc
adc
push
xorl
inc
insb
push
ss
pop
lods
dec
lcall
in
inc
mov
mov
sub
and
and
xchg
jg
arpl
add
sub
cmc
pop
ret
dec
jbe
iret
lahf
mov
xchg
call
cmp
mov
and
jp
int
cmp
xor
push
in
enter
jns
test
pop
pushf
mov
mov
les
ljmp
gs
loopne
scas
addr16
jp
or
dec
cmpsb
aad
imul
stos
mov
pusha
mov
jns
stos
adc
js
aam
fisubrs
inc
pusha
stc
in
ja
hlt
fs
mov
hlt
icebp
xlat
and
adc
pop
mov
test
lods
gs
and
iret
sub
add
mov
fneni(8087
imul
or
loop
in
shrl
sub
xor
mov
repnz
lea
andb
mov
repz
xchg
push
ret
and
test
mov
out
divb
or
mov
adcl
jne
sti
mov
or
jns
rorb
sbb
jmp
insl
repz
pop
mov
push
int
shll
push
repz
leave
decb
mov
cmc
and
stc
ficompl
sub
cmp
call
xchg
ja
in
mov
lahf
pop
push
or
scas
nop
or
test
inc
out
jae
xchg
inc
leave
add
adc
aam
aaa
loopne
add
xor
lret
ffree
and
xchg
shrl
fcomip
add
xlat
out
loopne
xchg
icebp
mov
gs
mov
sub
sbb
mov
test
mov
lcall
mov
daa
movsl
mov
and
ds
imul
stos
aam
add
pop
dec
or
xor
pop
loope
sub
scas
mov
mov
pop
js
cmp
daa
mov
gs
test
idivl
sub
push
and
orl
mov
sbb
imul
imul
push
jmp
sub
mov
cmp
das
cli
jl
fisttpl
dec
xor
add
aaa
mov
ss
cmp
in
in
xchg
cmc
lock
push
mov
ffreep
lods
and
adc
dec
jne
out
jecxz
std
cld
lcall
loopne
idivb
test
push
inc
and
inc
bound
das
mov
mov
xchg
pop
xor
imul
cmp
scas
inc
and
test
dec
popa
inc
dec
lods
pop
arpl
add
sti
cmpsb
fidivrl
rclb
mov
dec
mov
mov
jbe
xchg
or
xor
push
pop
js
gs
adc
jge
jl
fldl
push
xchg
icebp
lret
pop
sbb
out
lret
and
add
jl
dec
xchg
and
xchg
inc
push
stos
pop
sahf
lahf
lret
aas
testb
jle
inc
pop
xchg
pop
iret
rcrw
xor
int
movsb
into
pusha
mov
insl
sarl
fisttps
mov
test
xchg
cmp
lret
or
xor
lret
jo
jle
das
jle
push
scas
xor
movsb
arpl
push
mov
in
lods
outsl
repz
clc
nop
iret
xchg
inc
xchg
mov
cltd
test
jae
jle
mov
das
inc
lret
xor
dec
push
aam
popa
add
or
imul
iret
xlat
stc
mov
dec
hlt
movsl
lock
mov
mov
push
xchg
sbbb
hlt
add
imul
in
mov
mov
loopne
xor
mov
arpl
and
cld
sub
les
mov
cmpl
fistl
in
hlt
loope
sub
out
lret
cmp
mov
adc
push
push
dec
adc
mov
test
push
popa
das
or
ret
mov
push
testb
sub
fsubrl
mov
inc
popl
mov
shrb
push
scas
outsb
inc
ficomps
icebp
mov
mov
sub
xchg
pusha
fisubrl
cmp
shrl
sub
ljmp
movsb
push
inc
pop
cmp
fisubrs
mov
lea
imul
pop
sbb
inc
mov
mov
push
mov
inc
mov
cmp
cmp
int3
iret
rclb
pop
and
mov
jmp
push
mov
ret
or
lret
nop
addl
xor
mov
sarb
fsubs
insb
jb
std
cmp
out
inc
sbb
jle
lds
jecxz
daa
fisttpl
xor
xor
daa
leave
iret
and
add
mov
push
sahf
sahf
addb
push
addr16
inc
sub
pop
aad
cmp
xor
das
mov
aaa
jo
inc
notb
inc
adc
jmp
adc
mov
ljmp
iret
dec
ret
push
or
outsb
stos
lods
inc
jg
ftst
push
loope
lock
xor
fidivrs
iret
dec
sarb
pop
or
std
xchg
imul
inc
xorl
inc
sahf
jmp
loopne
jnp
xchg
divb
test
cmp
ss
dec
mov
push
push
inc
rcll
hlt
mov
stc
adc
cmc
pushf
insl
lea
jecxz
adc
popa
test
mov
sub
icebp
pop
lret
daa
push
jge
jecxz
out
jp
pop
xor
loopne
lds
dec
out
sub
dec
xor
loopne
jle
mov
or
or
lods
rolb
es
fcmovu
lahf
fisttps
lret
stc
icebp
popf
cld
inc
loopne
add
subb
push
jecxz
or
sbb
cmpl
mov
movsb
xor
push
inc
sahf
jnp
mov
mov
rcrb
jb
mov
pop
push
out
lret
sahf
iret
imul
push
into
pop
push
clc
pop
mov
jp
loopne
bnd
jmp
lods
mov
sahf
push
scas
inc
fsubs
sub
iret
in
and
mov
imul
mov
mov
cmpsl
jbe
loope
xchg
insl
xchg
bound
loopne
movsl
add
xchg
iret
inc
mov
movsb
aaa
jne
cmp
outsl
call
gs
icebp
mov
push
and
movsl
xor
mov
mov
movsb
clc
pop
aam
add
in
clc
ffree
or
addr16
jmp
aaa
cmpsb
dec
push
jg
shrb
inc
inc
sbb
xchg
das
mov
jmp
fwait
sbb
popa
pusha
mov
jp
jg
cmc
push
pop
mov
stos
loop
cmpsb
cmp
iret
hlt
push
cmp
mov
aam
insb
push
sbb
or
sub
scas
out
dec
cmc
pop
stos
out
jle
insb
nop
sub
jg
add
sbb
mov
add
jg
rclb
jp
jp
add
push
rolb
cmp
in
and
mov
mov
repnz
les
cmp
xlat
fdivrs
sbb
mov
mov
mov
adc
gs
push
enter
inc
bswap
shrl
cs
inc
test
dec
movsb
mov
lods
jbe
push
in
and
stc
movl
fstpt
add
in
dec
movsb
push
xor
pop
pop
push
fiadds
lods
mov
or
pop
push
push
jo
xchg
fcmovnbe
jb
push
mov
aam
mov
orl
xlat
lahf
adcl
insb
and
adc
adc
push
xchg
pop
mov
or
inc
lret
inc
lods
pushf
pop
mov
jns
out
repz
lock
mov
dec
add
pop
loope
inc
xchg
insb
jae
data16
movsb
arpl
in
inc
std
jbe
bound
into
inc
jge,pt
orb
shlb
xor
aas
aas
add
ret
mov
cmp
xor
xchg
icebp
test
in
mov
fsubl
sbb
lcall
sbb
int3
ret
inc
fldcw
cmp
cld
dec
stc
test
push
add
sbb
ror
mov
shll
inc
loop
push
sub
or
lods
mov
add
push
push
and
sub
lahf
icebp
pusha
sbb
jmp
mov
cmp
jno
pop
jbe
ss
xchg
shrb
repz
xchg
das
daa
lds
int3
test
mov
push
out
dec
pop
lcall
add
or
fimull
into
lea
mov
cmp
mov
mov
sbb
hlt
push
loopne
lret
shl
xlat
sbb
mov
mov
cmpsl
fdivl
sbb
lods
out
and
data16
jb
clc
cmpsl
lock
add
xchg
rcrb
dec
pop
mov
sbb
imul
rcr
dec
mov
mov
call
mov
add
dec
jl
inc
hlt
pop
cmc
cli
cld
pop
hlt
or
nop
lahf
push
clc
das
push
mov
mov
cs
or
cmp
cmpl
repz
fisttpll
push
xchg
sub
mov
ja
pop
sbb
pop
pop
jle
js
push
leave
stos
arpl
pop
icebp
push
pop
mov
lahf
add
dec
cmp
pop
push
mov
sbb
mov
mov
in
xor
call
aas
dec
stc
stos
js
pop
pop
pop
sbb
jo
push
mov
cmp
mov
fs
lcall
lock
or
repnz
in
sbb
xlat
mov
jae
pushf
push
pop
dec
jle
in
ds
sti
xchg
cwtl
jl
adc
add
pop
xor
mov
das
icebp
add
je
call
xchg
js
jle
mov
mov
push
mov
ss
std
outsb
pop
cmp
push
and
adc
lahf
push
xchg
sbb
xorl
jmp
daa
fistpll
loopne
push
mov
dec
xchg
sti
loopne
outsb
int
xchg
fstp
ret
lods
sbb
les
out
nop
dec
mulb
add
push
jb
add
jl
push
or
or
and
push
or
jg
divb
mov
fucomp
xchg
pop
jecxz
add
dec
sub
repz
and
adc
test
pop
add
jp
mov
scas
iret
pop
adc
lds
stc
lret
mov
mov
mov
cmp
lahf
xchg
and
loop
adc
cmp
shr
fistl
outsl
or
pop
arpl
jno
cmpsb
scas
pushf
or
das
insb
fsubl
outsb
rolb
mov
add
or
mov
cmp
movsb
fdivr
mov
data16
inc
or
mov
and
pop
push
cmc
push
lock
pop
repnz
scas
jbe
test
daa
sub
push
jns
dec
xchg
sub
sbb
das
shl
dec
push
fsin
repz
mov
jne
out
dec
je
inc
out
xchg
fs
enter
add
cmp
adcl
ss
popf
mov
adc
xor
jl
pop
addb
dec
add
mov
enter
push
mov
xchg
dec
push
xchg
lods
mov
scas
mov
cmp
cs
je
rcrl
aam
and
adc
inc
cld
jbe
test
mov
aas
mov
ret
cmc
mov
pop
in
inc
test
xor
sarb
inc
add
pop
outsl
cs
mov
cmp
push
out
loopne
test
jl
jle
xrelease
into
mov
testb
or
lea
repz
je
dec
pop
push
cli
push
adc
iret
out
jecxz
ds
mov
sbb
jg
mov
ret
jge
xor
or
pop
stos
fnsave
roll
mov
outsb
mov
sti
inc
cmp
ljmp
add
arpl
xchg
mov
fadd
popf
jns
sbb
aas
sub
pop
repz
test
cmp
in
scas
leave
ljmp
addb
pop
sbb
aas
xchg
ljmp
adc
lods
mov
lret
push
stc
fld
inc
xchg
jno
mov
nop
jo
add
xchg
xchg
stos
adc
ficoms
mov
adc
arpl
push
stos
push
cs
dec
jnp
push
int
hlt
outsl
iret
mov
dec
in
adc
xor
and
sbb
dec
jbe
sbb
mov
inc
movsl
push
mov
data16
lds
push
mov
cmp
pop
in
jns
lret
dec
js
cltd
adc
fmull
jl
das
iret
add
stos
adc
lods
xlat
icebp
sub
rorl
and
mov
repz
xchg
lods
insl
aas
orl
out
mov
jecxz
cli
xor
shrl
mov
js
in
jge
xor
jecxz
arpl
rorl
cs
int
popf
add
imul
ja
push
cmpsb
lret
push
in
inc
sbb
xchg
shlb
loopne
inc
sbb
dec
push
and
ror
add
jle
and
sbb
enter
pop
dec
adc
shrl
fstpt
mov
arpl
ljmp
aam
ret
cmpsb
push
sub
ljmp
repnz
andl
fadds
or
pusha
jge
sub
add
mov
pop
popa
movsl
inc
jno
adc
mov
inc
xchg
pushf
popa
daa
int3
fidivrs
ficompl
inc
lret
test
or
fsubrs
jnp
fs
push
lret
push
pushl
lock
pop
and
ljmp
xchg
mov
popf
andl
dec
dec
call
fistpl
je
scas
sahf
fimull
clc
pop
mov
pop
insl
xor
cmp
xor
xor
test
stc
sti
out
or
inc
pushf
lods
or
xor
mov
sahf
call
dec
xchg
adc
leave
sub
push
aaa
mov
mov
stos
adc
cmp
mov
in
rcl
rclb
stos
pop
jo
pop
jle
fmull
sbb
mov
in
mov
jns
push
sbb
mov
mov
out
outsl
add
stc
or
mov
mov
lret
leave
jl
cmpsb
ja
cmp
lock
adc
push
das
pop
push
lahf
lods
test
push
cmp
jmp
push
push
mull
or
gs
shll
cmc
mov
push
dec
mov
add
das
sbb
iret
sub
pusha
and
push
sbb
sub
xchg
cli
cmpsl
xchg
xchg
jle
sub
sub
xor
cmc
xchg
inc
pop
push
fsubs
ret
daa
inc
push
in
and
pop
push
loope
into
mov
jne
mov
enter
pusha
pop
xorb
int
jb
pop
push
ljmp
dec
in
sbb
in
mov
adc
add
push
pop
mov
add
scas
out
jns
xchg
mov
nop
imul
mov
test
sub
fsubs
cmpsl
addb
mov
ljmp
lret
pop
test
data16
ret
xor
in
in
and
mov
test
test
ds
js
xor
shld
push
fisubl
mov
enter
or
adc
mov
bound
mov
adc
mov
xchg
push
mov
push
sub
pusha
dec
sub
das
sarb
outsl
push
pop
test
jecxz
dec
and
lds
and
mov
outsb
add
and
push
sbb
in
fwait
push
inc
popa
xor
scas
mov
mov
sub
adc
jecxz
jmp
mov
adc
addr16
mov
mov
mov
incl
cmp
mov
das
jb
dec
sub
or
sub
ret
dec
cmc
in
mov
mov
jge
sbb
out
scas
addr16
cmpsb
mov
pusha
imul
imul
aaa
xchg
xchg
rdmsr
testb
int
xlat
fstps
jmp
lcall
pop
iret
mov
lahf
shrl
popf
push
sub
mov
in
xor
jg
and
pop
mov
jmp
stos
lret
into
test
pop
inc
sbb
mov
adc
mov
push
and
sbb
jecxz
or
cmp
push
sub
movsb
mov
shl
xchg
pop
push
mov
mov
push
mov
popa
shrb
mov
test
jge
notb
lods
jg
enter
pop
sub
mov
dec
mov
pop
out
and
and
adc
or
lea
je
mov
jle
xchg
mov
sbb
hlt
mov
adc
dec
mov
xchg
es
or
negb
cmpsl
sub
rep
push
rcl
or
dec
push
inc
inc
adcl
mov
sar
aam
cmp
push
cmp
aad
pop
loop
loop
dec
insb
push
or
adc
ss
jo
in
sbb
mov
out
and
ljmp
mov
or
xor
rol
cmp
cmpsl
mov
dec
or
lea
out
stc
mov
es
sub
push
jge
push
adc
cmp
or
or
jmp
jecxz
mov
and
pop
scas
test
mov
stos
leave
sahf
xor
lahf
in
add
xor
and
js
mov
test
movsl
pop
sub
fsubp
xchg
jmp
imul
cmp
add
es
sub
int
aaa
xlat
fwait
add
mov
mov
dec
dec
adc
mov
aaa
popf
add
and
leave
or
mov
xchg
and
jl
invd
mov
inc
in
and
xchg
stos
out
mov
jg
push
mov
lret
pushf
xor
das
in
cmp
adc
int3
sbb
jle
mov
add
fcomi
push
push
cltd
sti
ljmp
push
out
dec
dec
mov
and
jnp
cli
mov
je
xchg
push
jp
adcb
mov
aam
sarl
iret
rorl
mov
dec
cld
arpl
daa
ljmp
lcall
cld
fisttpll
mov
adc
jb
call
add
mov
sub
jo
and
cmp
mov
mov
cmp
clc
or
test
and
shrl
test
or
push
sbb
roll
out
xor
ss
dec
lret
loope
sbb
lret
push
pushf
xchg
xchg
pop
cmp
hlt
push
cmp
pop
mov
dec
pusha
jle
xchg
push
and
vcvtph2ps
popa
cmp
jle
xchg
jns
pop
and
inc
cmpsl
cmc
xchg
push
in
jo
cs
cmc
sub
adc
inc
aam
fneni(8087
sbb
mov
or
ds
js
mov
scas
and
iret
push
mov
or
bound
cwtl
fucomp
jae
mov
dec
fdivr
sbb
leave
jg
out
and
stos
addb
inc
push
fbld
dec
inc
xchg
test
dec
or
fnstsw
dec
push
dec
andb
fcoml
xor
jne
stc
inc
mov
je
adc
jecxz
jl
ret
dec
push
mov
sbb
or
out
insb
out
dec
and
loop
fs
jmp
stos
stc
les
leave
daa
lock
leave
iret
je,pt
movsl
cs
mul
sbb
push
or
mov
xor
push
cmp
arpl
xor
clc
hlt
jb,pt
loopne
stos
out
xor
in
adc
nop
ficoms
lmsw
cmp
xchg
sbb
mov
idivb
dec
add
mov
sbb
push
mov
jmp
fs
cmp
push
cmp
gs
jbe
inc
std
jnp
push
cmp
cmp
popa
mov
leave
rorb
adc
dec
xchg
fs
jb
dec
mov
jl
push
and
setl
mov
mov
pop
inc
xchg
jge
push
push
lock
outsl
dec
mov
push
sar
mov
hlt
out
test
lods
ja
mov
sub
mov
add
test
xchg
inc
rcl
and
cli
sub
adcb
aad
dec
sahf
stc
mov
into
xchg
sbb
inc
adc
jl
add
jne
fcoms
or
pop
clc
xchg
arpl
in
out
push
iret
and
pop
aad
mov
stc
xchg
xor
dec
fs
out
pop
imul
jne
mov
imull
jb
imul
cli
mov
movsb
ret
sbb
aaa
ret
mov
push
inc
rcll
out
push
or
lods
imul
and
test
sub
js
mull
add
inc
test
add
adc
leave
mov
jb
mov
sub
loope
jae
mov
aam
cmc
insb
pop
jg
aam
mov
push
push
mov
nop
jo
push
mov
pop
mov
add
out
dec
xchg
sbbb
mov
ja
and
adc
add
popa
cmp
in
pop
add
fnsave
shl
rcpps
test
cwtl
stos
rcl
jle
add
pop
jge
cmpl
ss
rol
stc
xor
gs
test
or
outsl
fdivrl
dec
lea
mov
mov
add
xlat
out
xchg
out
decl
dec
into
std
push
mov
push
jnp
and
fidivl
lcall
dec
idivl
int3
mov
xchg
movsb
lea
das
pushf
cld
filds
xor
or
sbb
outsb
push
cmp
repz
mov
pop
sbb
inc
rcrb
add
repz
pop
and
xchg
xchg
outsb
pop
push
outsb
enter
movsl
push
push
clc
xchg
shrb
mov
test
inc
mov
pop
gs
out
add
jno
or
or
dec
out
pushf
lea
or
cmp
cmp
lret
push
ret
jge
enter
icebp
and
cmp
pop
aaa
cmp
shl
mov
in
jmp
or
int
cmp
sub
jnp
sub
dec
or
lahf
daa
arpl
or
xchg
mov
xor
fwait
shlb
jae
jmp
fistpll
in
int3
sbb
in
mov
xor
dec
mov
sarb
sti
fbld
cld
insb
ret
movsb
mov
or
stos
inc
xchg
lods
cmpsb
data16
push
popf
fimuls
in
test
sub
cmp
mov
int3
lcall
jmp
add
lods
push
jge
loope
sbb
pop
jecxz
scas
cmp
mov
adc
outsb
ret
cmpl
std
clc
or
adc
sti
movsl
xchg
xchg
pop
cmpsl
sbb
push
xor
mov
sbb
push
jne
repnz
mov
out
cmp
in
or
adc
xchg
aaa
mov
and
std
mov
pop
xor
inc
rolb
mov
and
push
dec
lcall
push
mov
adc
sbb
imul
pop
dec
pusha
lock
lret
lahf
sub
cld
lds
out
in
mov
mov
mov
popa
lea
mov
push
inc
data16
fs
jns
xchg
test
cmp
cmp
imull
jne
test
inc
das
pop
jp
sub
push
sti
subl
push
or
shlb
lock
test
stc
mov
cs
dec
adc
mov
mov
sbb
nop
jnp
mov
cltd
aad
sbb
adcl
jl
push
cmp
cs
sarb
push
nop
gs
sub
and
pop
ljmpw
aas
add
xchg
cld
sub
push
dec
je
cmpb
ficomps
inc
and
in
sbb
shrb
aam
adc
cs
cmpsl
or
push
push
mov
cmp
mov
or
or
mov
icebp
xchg
mov
inc
lcall
and
cmpsl
push
sbb
cmp
es
mov
mov
repz
test
mov
loop
and
insl
inc
ret
insb
dec
or
inc
sub
fstps
and
mov
imul
or
jp
rorl
xor
stos
dec
aas
cmp
cmp
xor
cs
lret
push
es
jbe
aam
add
pop
cmp
fadds
mov
xchg
repz
mov
add
aad
jmp
stos
cmp
lret
jo
fldt
jge
data16
adc
in
fsubl
sub
pop
ret
add
pop
lret
xor
cmp
daa
dec
dec
sub
push
aas
xchg
into
xor
insb
pop
adcb
out
xchg
cmp
scas
stc
rcr
dec
dec
push
or
mov
mov
ficompl
frstor
lret
and
mov
mov
arpl
xchg
cmp
rolb
stos
je
push
pop
xor
push
addr16
dec
fisubl
stos
loopne
lods
mov
mov
or
in
aam
movsl
adc
inc
mov
xor
cli
outsb
repnz
fstps
out
or
clc
add
in
xchg
and
or
cmp
out
xchg
push
push
mov
mov
jns
in
jg
xor
testl
int3
xor
sarb
push
in
test
int3
mov
lods
call
add
or
cmp
mov
cld
pushf
mov
hlt
hlt
xor
xchg
jae
pop
iret
rcrb
and
into
daa
orl
add
push
sarl
jb
push
mov
cmp
into
xchg
jle
test
movsb
fincstp
repnz
xchg
xor
scas
ja
int
push
mov
insb
aam
ljmp
sub
out
adc
sbb
enter
loop
mov
imul
or
pop
ja
call
sahf
xchg
jbe
and
adc
xchg
xchg
in
push
fdivrp
xor
fistpl
ret
mov
mov
jno
add
mov
bound
lock
mov
aad
pop
and
push
in
outsb
cmp
repnz
xor
jne
xchg
sti
pop
and
fcomps
dec
out
push
jg
data16
push
mov
jmp
stos
dec
mov
stc
jecxz
addr16
jle
imul
cmp
test
xor
clc
xchg
popa
int
adc
jae
lock
mov
aad
clc
and
pop
wbinvd
cltd
mov
add
mov
ds
xorl
push
cmp
push
cld
or
jo
pop
push
popf
add
imul
sbb
das
jbe
jmp
dec
adc
imull
inc
mov
sbb
rcl
mov
cld
movsl
mov
xchg
xchg
pop
loopne
push
es
pop
and
insl
xchg
sbb
cmp
into
in
add
fdivrl
jge
and
mov
scas
addr16
mov
popf
test
or
mov
lcall
jmp
xor
ja
fs
in
flds
lcall
dec
mov
mov
mov
jb
mov
inc
adc
int
cmp
lret
leave
xchg
insl
push
popa
push
or
mov
inc
jge
pop
pop
xchg
dec
cmc
mov
sub
je
hlt
mov
fcoms
and
xchg
pop
rorl
stos
out
dec
dec
pop
push
and
dec
cmp
xchg
jne
cld
xchg
adc
stos
sub
loope
shlb
lahf
push
adc
fldenv
lea
push
testb
inc
cmp
pop
mov
sbb
lahf
call
sbb
mov
aas
outsl
dec
jo
add
lock
cmp
inc
fmuls
insl
jge
pop
es
ds
pop
xor
adc
pop
inc
addr16
loopne
in
mov
aaa
mov
es
sub
push
push
sub
xor
enter
inc
jl
fsubl
push
enter
stc
mov
adc
cltd
inc
xor
out
call
stos
cmp
pop
loopne
push
ficompl
push
and
movsb
aas
outsl
test
cmc
mov
stc
xchg
lods
adc
mov
add
inc
mov
cmpsb
shrb
add
loope
test
jmp
pop
insb
rolb
jl
xchg
push
outsl
cs
aad
xchg
outsb
xorl
dec
mov
shlb
test
loop
mov
lods
or
cmp
push
adc
inc
div
jb
fs
mov
fisubrs
sbb
pop
fcmovbe
aam
and
dec
cwtl
addl
nop
push
xchg
insb
mov
mov
add
daa
jbe
mov
fisubrs
sbb
push
test
in
add
or
and
insb
leave
movsl
pop
pop
mov
xor
rorl
lods
addl
aam
pop
mov
mov
sbb
jb
imul
fistpll
stos
iret
mov
xchg
jle
int
push
mov
dec
jecxz
dec
js
xchg
lret
add
cmp
sbb
xchg
mov
add
xor
pop
add
pop
sbb
mov
cmp
xor
mov
or
or
ds
add
fiaddl
pop
test
outsl
aas
sahf
sbb
inc
dec
or
cmp
lret
movsl
std
inc
fwait
ds
insl
push
loop
aaa
mov
jb
ljmp
mov
popf
outsl
xor
adc
fistl
outsb
add
add
mov
aad
leave
jbe
aam
sub
lods
aaa
addb
ret
scas
xchg
arpl
mov
ret
fdivrp
xchg
mov
shll
push
or
dec
mov
call
lea
rcrl
adc
pop
dec
loope
ret
icebp
and
int3
dec
push
stos
sub
jno
adc
push
icebp
dec
cmc
lret
jl
push
xor
mov
sbb
mov
test
mov
scas
mov
adc
xchg
or
push
jp
pop
roll
popa
insb
push
sar
xchg
dec
test
xchg
das
pop
dec
xchg
cmp
fidivs
mov
popf
out
sub
data16
mov
mov
inc
adc
and
hlt
cmpsl
push
into
sub
sahf
inc
sub
mov
dec
push
pop
ss
imul
xchg
push
and
dec
lret
xor
push
sahf
cmpl
pop
push
das
sti
repnz
adc
mov
rorl
ds
pop
sarb
pop
lret
mov
mov
push
xchg
xchg
shll
mov
les
xchg
icebp
hlt
xchg
stc
fistps
dec
mov
nop
mov
xor
aam
jb
fs
mov
cmpsb
mov
mov
push
rclb
movsb
push
repnz
mov
inc
insl
icebp
adc
insb
sub
xchg
jo
inc
jmp
xor
outsb
mov
mov
mov
jae
dec
loop
je
out
sbb
data16
dec
and
pop
push
xchg
sub
push
push
mov
push
mov
inc
int
je
pushf
test
jno
cmp
xor
aas
int3
loopne
sub
xor
cltd
repnz
mov
mov
gs
loopne
cmp
lods
add
push
pusha
pop
dec
insb
mov
lahf
sarl
adc
mov
fldenv
xor
ja
mov
out
inc
shlb
pop
push
sbb
stos
mov
lea
inc
push
repnz
adc
push
mov
sahf
movsb
lea
movsl
xor
js
or
shll
sbb
mov
mov
ds
and
push
jp
orb
hlt
sbb
daa
pushf
xchg
sti
or
mov
cmpsl
mov
push
rorb
xchg
mov
cli
ljmp
and
push
shll
xorl
xchg
divl
jo
mov
mov
mov
hlt
ffree
and
test
es
mov
pop
cltd
push
inc
push
jmp
jb
orl
jl
scas
ret
adc
das
xchg
jns
lcall
mov
outsb
inc
shrb
xchg
push
aad
inc
push
sub
add
je
leave
push
in
imul
fistpl
int3
xor
xor
test
in
jbe
adc
arpl
bound
push
pop
cltd
mov
add
xor
je
sub
xchg
aaa
sub
or
mov
dec
test
dec
push
test
mov
stos
add
shlb
mov
fstps
mov
je
out
xchg
stos
pop
dec
das
dec
xchg
cmp
cwtl
fildl
std
mov
xor
pop
inc
adc
gs
xchg
mov
int3
adc
or
add
mov
nop
lahf
test
lret
jnp
inc
push
mov
sbb
std
xchg
adc
loop
lea
stc
mov
cmp
cld
andb
jne
lock
push
xor
stos
ret
testb
mov
and
jne
aam
popa
aad
scas
lea
clc
xchg
and
inc
xchg
repz
arpl
hlt
mov
shl
pop
push
or
jne
push
sbb
jo
sbb
movsl
and
dec
or
mov
das
and
mov
movsl
jb
add
in
rcrb
dec
pusha
xchg
sarb
in
ds
negl
out
movsl
xchg
fsubp
jge
sub
xchg
popa
outsl
iret
shrl
out
jle
mov
andb
push
cmp
pop
sahf
mov
pop
pop
ds
rorl
inc
or
flds
cli
stc
push
fisttpll
adc
cld
dec
movsl
les
inc
mov
lds
int
repnz
fcomi
stos
jmp
mov
mov
push
cmpsb
adc
popa
push
jo
sub
pop
sbb
push
xchg
xor
cwtl
cltd
xor
pop
dec
mov
jno
cmc
adc
push
pusha
sub
and
clc
jb
dec
insb
addr16
cltd
push
and
fidivs
jl
xchg
sub
dec
out
dec
mov
stos
xor
rorb
notb
sahf
inc
mov
xor
jne
ror
clc
cmpsl
mov
outsl
pusha
xchg
aaa
add
pop
add
sub
daa
movsb
mov
scas
or
pop
aaa
push
pop
mov
decb
lret
sbb
dec
inc
pushf
mov
push
mov
loopne
das
out
aas
lahf
cmp
call
fdivrl
jno
xchg
xchg
inc
je
cld
lahf
push
iret
cmc
sbbl
hlt
je
jne
mov
sub
hlt
loop
jecxz
lret
sub
lret
or
out
repnz
sbb
mov
xchg
lods
inc
sbb
lods
xchg
pop
dec
sbb
shlb
xor
arpl
dec
dec
and
fwait
add
sub
leave
xor
add
hlt
sub
sbb
mov
dec
pop
lods
mov
sub
and
test
dec
push
arpl
rclb
hlt
cmpsl
mov
jge
pop
sbb
dec
add
call
push
test
iret
dec
test
shl
aas
sti
push
inc
xorps
xor
vmaskmovdqu
xor
and
roll
out
insl
movsb
les
inc
es
lahf
cs
sub
or
adc
ja
sub
mov
aaa
aad
sbb
jo
imul
inc
pop
das
aaa
leave
cmp
sbb
xor
jge
cmp
xchg
mov
test
addr16
add
or
outsb
xlat
popa
jge
call
lds
sub
push
call
adc
jb
pop
add
lods
cmpsl
int3
lds
fisubrs
xchg
adc
popf
fwait
cld
fstp
sbb
push
fcompl
mov
or
movsl
cmp
sbb
out
dec
jnp
sub
mov
or
loope
pop
rorb
call
jg
imull
shrl
jmp
sbbl
add
ret
xchg
popf
rorb
and
out
or
stos
sti
fs
int3
push
mov
mov
imul
jg
and
xor
bnd
cmpsl
gs
add
inc
and
ret
fst
pop
ret
fsubrl
insb
insb
sbb
jb
hlt
mov
mov
imul
lcall
out
mov
add
xchg
cmp
faddl
mov
xchg
pop
cmp
ret
enter
mov
sti
loope
push
popf
idiv
movsb
mov
push
mov
adc
cmp
dec
sbb
xor
aaa
out
je
mov
mov
push
cmpsl
dec
into
popa
lret
xor
cmp
ret
ljmp
loope
inc
xor
push
jno
repnz
ret
xchg
mov
lods
or
adc
ja
xor
and
sub
dec
fnstcw
xor
test
movsb
call
jns
in
mov
mov
cmpl
adc
xchg
ljmp
mov
in
cmp
xchg
lock
dec
repz
inc
sub
sahf
aad
daa
dec
test
popa
and
inc
mov
cmpsl
sarl
lahf
repz
popl
movsb
aad
mov
inc
inc
mov
inc
mov
dec
push
sbb
into
sahf
mov
inc
call
fldt
cmp
adc
push
into
push
popa
negl
in
bound
xchg
push
insb
inc
ds
into
dec
gs
push
fs
nop
packssdw
pop
sbb
inc
loope
sub
bsf
sub
aam
push
sti
jmp
scas
je
jae
int3
pushf
inc
sbb
cmp
dec
scas
cmpb
ja
and
syscall
jno
jns
cmp
adc
outsl
mov
adc
xorb
mov
cld
sub
mov
data16
sub
mov
bound
js
mov
add
mov
icebp
in
push
scas
imul
loop
das
xchg
lock
pop
sub
mov
je
fisttps
pushaw
cmc
shr
xor
dec
xor
ja
pop
pop
fstpl
cmp
out
jmp
push
mov
mov
jl
add
ja
jge
push
or
sbb
mov
mov
daa
inc
add
xor
sub
mov
jae
push
mov
nop
fbstp
mov
cmpb
lret
shrb
lret
jae
jl
dec
pushf
movsl
or
sahf
inc
movsb
push
mov
jmp
adc
hlt
fisttps
adc
jae
lret
ret
mov
sahf
pop
imul
pop
das
push
sbb
mov
mov
dec
cmp
jae
jg
sbb
inc
or
and
pop
mov
xor
mov
or
divb
sti
sarl
add
mov
push
lock
push
push
dec
cmp
insb
inc
inc
mov
inc
jno
inc
and
xor
sti
or
outsl
in
sarl
push
jg
pop
mov
fldt
cs
pop
pop
imul
rclb
loop
aad
adc
bnd
in
push
push
pop
subl
add
and
ljmp
adc
cmp
pop
inc
stos
stos
mov
sbbl
add
inc
insb
xchg
loop
cmc
push
pushf
add
cmpsb
std
fsubp
int3
mov
popa
cmpsl
out
dec
sar
pop
sub
in
jbe
cld
ljmp
scas
clc
push
push
cmp
pop
mov
je
fisubs
sub
mov
pushf
subb
and
lds
mov
sbb
push
cmpsb
xor
sbbb
cmp
jns
push
xlat
and
jne
dec
les
test
ss
mov
mov
sti
sbb
addl
pop
jl
jmp
inc
dec
mov
mov
pop
rolb
loop
jbe
sub
cmovp
or
inc
mov
dec
daa
or
adc
xchg
aaa
sub
or
emms
mov
adc
clc
adc
push
sub
lods
mov
adc
sub
imul
add
mov
inc
mov
dec
bound
cmp
dec
mov
shll
push
xchg
into
insl
jb
sahf
loopne
cmp
jge
sbb
mov
sbb
cli
setno
test
inc
fisubrl
lret
outsl
xor
shr
and
adc
push
push
clc
or
cmpsb
mov
adc
cmp
adc
lret
pop
cli
push
xorb
xchg
cmp
mov
arpl
stos
scas
lock
in
pop
adcb
dec
int3
adc
les
sub
fldl
nop
shll
xchg
ds
out
jecxz
xor
scas
fmull
xchg
add
gs
or
cmpsl
push
adc
push
push
xchg
xchg
cmp
sub
divl
scas
push
ja
push
mov
faddp
ror
shl
mov
les
inc
xchg
icebp
xorl
bound
adc
or
fisubrs
dec
mov
gs
inc
stos
setle
jl
out
dec
xchg
dec
push
adc
cmp
lods
dec
jno
rcr
daa
inc
es
dec
dec
mov
adc
or
ficoms
push
in
aaa
sbb
cmp
dec
out
inc
jne
fs
mov
inc
mov
xchg
jno
and
sti
daa
popa
movsb
cmp
shl
pop
and
jo
mov
jb
jp
pop
ret
xor
popf
es
adc
sub
mov
nop
inc
insb
sbb
jb
xchg
cmpb
into
push
repnz
nop
fs
sarb
inc
inc
xor
or
inc
std
mov
mov
inc
push
adc
mov
add
mov
scas
pop
xlat
or
arpl
xor
in
scas
sbb
mov
cmc
loopne
xchg
movsl
lret
gs
mov
cmpsb
sti
mov
sub
test
mov
adc
loopne
cmp
pushw
inc
inc
movsl
adc
repz
jno
push
cld
inc
int3
jne
aam
pop
mov
dec
ret
pushl
jbe
mov
xchg
rcr
or
pop
cli
jb
push
in
addl
mov
push
sub
fsubrs
seta
dec
es
inc
mov
decb
push
xor
clc
mov
mov
mov
sbb
add
mov
xor
loopne
and
add
jo
test
pushf
pushf
rorb
mov
cwtl
call
js
in
scas
lahf
inc
jl
and
shll
push
test
pop
loopne
orl
bound
jmp
mov
add
dec
xor
mov
sti
outsb
test
pop
in
mov
icebp
jae
adc
fsubrp
jbe
into
xchg
pop
sub
mov
and
mov
xchg
inc
mov
jge
into
adc
cltd
nop
or
cltd
test
test
jl
cmp
outsb
inc
pushf
out
cmp
scas
shrl
dec
jmp
decb
ror
push
lock
inc
in
push
cmp
pusha
imull
inc
mov
out
xor
enter
daa
ror
add
and
mov
cmpb
aad
std
adc
cwtl
inc
out
das
fisttpll
std
mov
shl
fcompl
int
loope
sahf
mov
testl
outsb
cmp
leave
rcl
addl
andl
sub
loope
push
push
in
push
cld
cmp
stos
addr16
mov
xor
aas
xor
cs
lods
ja
pop
addr16
mov
dec
jg
jbe
inc
jbe
mov
mov
adc
push
and
mov
hlt
loop
sub
lds
arpl
sub
inc
mov
stos
cwtl
cmp
mov
pusha
rcrl
dec
mov
xchg
repnz
incb
in
in
xor
test
ljmp
add
divb
ja
div
adcl
aaa
mov
mov
adc
lret
add
cli
test
sub
jmp
ret
cmp
and
xchg
dec
arpl
loopne
cli
in
sbb
push
xchg
out
loopne
mov
loopne
mov
aad
and
dec
test
call
movsb
jl
adc
mov
leave
roll
inc
push
inc
adc
jmp
add
arpl
adc
inc
mulb
stos
outsb
mov
add
mov
push
jne
scas
inc
adc
adc
mov
pop
xchg
mov
adc
mov
add
xchg
mov
int3
pop
mov
or
hlt
push
xchg
or
ja
jno
popa
mov
xlat
mov
int3
mov
or
mov
cmp
jns,pt
inc
jne
jl
enter
lret
aas
cmp
xchg
and
ret
lret
or
dec
push
add
push
sbb
mov
aaa
pop
sbb
fwait
jle,pn
xchg
jg
sub
and
mov
adc
pop
popf
mov
xor
push
push
enter
pushf
cmpsb
lret
mov
xchg
lods
push
mov
loope
jl
or
cmpsb
jno
push
sbb
leave
sti
stc
xchg
cmp
pop
daa
pop
inc
xchg
xchg
sub
jle
xchg
lcall
or
fsubrl
adc
imul
ret
sub
mov
pop
jle
jo
xchg
ret
lret
out
adc
sub
mov
jp
aas
and
iret
or
shrb
ret
fnstenv
cmp
cmp
inc
push
mov
fdivr
fisubs
insl
jne
push
mov
xchg
inc
xchg
out
fistl
adc
loope
push
jae
cmpsb
idivb
mov
outsl
sbb
std
out
call
fstpt
andl
xor
adc
cmpsb
data16
inc
or
add
out
insb
mov
adc
sbb
and
xchg
jne
iret
repnz
and
xor
pop
dec
push
fiadds
ret
lahf
rolb
cmp
pop
cmp
lods
sbb
sub
cmp
test
ret
fnstcw
stos
into
xchg
sbb
push
psubd
cmp
xchg
sbb
and
add
dec
stos
je
int3
test
sahf
leave
xadd
mov
mov
cmp
pop
je
fnstenv
out
loopne
testb
loope
jge
or
xor
fs
in
sbb
fucomp
pop
je
ja
xor
ja
xor
jbe
repz
mov
pusha
shlb
mov
in
cmp
push
mov
sbb
sbb
cltd
jo
dec
repz
jle
push
imul
cmp
mov
fildl
jge
cmp
scas
js
fistpll
pop
mov
adcl
cmp
test
cli
movsl
aam
or
mov
pusha
stc
pop
out
dec
mov
or
jnp
enter
aam
icebp
call
mov
out
arpl
mov
and
jl
scas
test
and
shlb
sti
out
sbb
adc
jp
fisubl
icebp
repnz
mov
aam
jne
xor
jae
ficomps
scas
sub
mov
sub
mov
jnp
inc
js
mov
fstpt
stc
pop
call
push
jp
inc
adc
inc
pop
rclb
cmp
cmp
andl
push
fdivrp
cmp
cmp
push
aaa
js
pusha
sub
add
dec
lods
push
sbb
imul
rcl
sub
out
xchg
jae
popa
cmp
mov
jnp
mov
xor
iret
stos
mov
es
sbb
inc
icebp
dec
xchg
testl
imul
sbb
inc
out
dec
jl
adc
jecxz
pop
adc
dec
jmp
jnp
pushl
xor
call
xchg
in
es
push
jne
mov
mov
test
leave
dec
ljmp
aas
push
loop
stc
push
in
into
les
xchg
and
push
int3
cmpsb
and
pop
pop
jne
out
dec
loope
adc
out
cwtl
jge
or
jg
hlt
dec
mov
inc
mov
aas
and
out
sbb
xorb
push
mov
leave
sub
nop
mov
xchg
jb
pop
lods
bound
std
xchg
pop
xor
in
pushf
pop
mov
sahf
sbb
nop
xchg
les
and
test
sub
lret
in
call
cld
cmpsl
jp
push
pop
scas
int3
push
sub
test
mov
popa
inc
shlb
out
adc
adc
mov
shrl
xor
dec
add
sbb
icebp
sbbl
or
pop
call
pop
je
lcall
test
pop
idivl
mov
pusha
clc
aam
in
jmp
xchg
pop
popa
fsts
xchg
scas
or
test
pop
xchg
or
out
lcall
mov
mov
xor
jae
int3
push
out
aas
xor
dec
and
adc
mov
std
imulb
pop
sarl
xchg
mov
inc
sbb
xchg
jb
xchg
imul
inc
jo
adc
cmc
int
xchg
xchg
sbb
push
ja
mov
aaa
test
bound
inc
daa
lods
movsb
and
xor
jnp
jno
iret
or
dec
sbb
xchg
mov
clc
add
pop
pop
mov
cs
push
xor
int3
pop
pop
lock
imul
mov
mov
rep
addr16
add
fcmovnb
aad
sub
sbb
inc
jge
dec
loopne
mov
mov
xchg
mov
xor
cltd
sbb
or
std
cltd
out
jae
jl
leave
std
lret
or
fnsave
lods
sub
pop
clc
xor
mov
push
add
xor
fdivs
pop
sub
shl
inc
sbb
sub
stos
push
arpl
pop
fwait
out
mov
mov
ret
outsb
outsl
jo
jns
add
cltd
dec
dec
nop
fisubrl
xlat
insl
xchg
sbb
add
xchg
int
mov
dec
int
stos
sub
fisttpll
sbb
aad
outsl
pop
sarb
mov
add
xchg
xchg
adc
mov
pop
pusha
inc
cmp
lcall
test
out
push
shlb
sbb
in
jmp
mov
data16
xor
xor
cld
ret
lret
jle
jns
xor
data16
shl
xlat
dec
lret
lcall
push
adc
shll
aam
fisubrl
arpl
adc
jno
ja
inc
sbb
xchg
pushf
scas
push
lock
push
jno
xor
movsb
push
ljmp
mov
mov
movsl
cld
loopne
loopne
add
push
or
imul
popf
lret
call
es
add
gs
int
loop
stos
sbb
out
ljmp
cmpsb
sub
push
sbb
sub
xor
and
jp
push
arpl
cld
ret
lret
ret
aam
dec
jo
fs
jo
mov
inc
and
addb
cld
xor
cltd
out
icebp
or
inc
xor
cmp
mov
add
jle
movsl
xchg
gs
je
lahf
shll
sub
aam
leave
xlat
inc
ror
call
les
xor
jb
int3
repz
push
inc
mov
into
hlt
fisttps
dec
jge
adc
mov
addr16
into
les
dec
mov
iret
xchg
inc
popa
jl
dec
push
inc
pusha
inc
into
ss
pop
pop
in
mov
adc
outsb
add
popa
ret
dec
in
aaa
inc
sti
jp
dec
fbstp
add
mov
lret
sbb
jmp
sub
fucomi
sbb
adc
sub
cmp
lret
out
jbe
and
or
lock
jae
cmpl
dec
mov
addr16
repnz
jno
adc
cmp
adc
lods
xchg
jae
push
imul
cmp
loopne
xchg
js
inc
mov
cmp
lahf
pop
cmp
cmp
mov
and
movsl
push
dec
pop
adc
jb
das
dec
stc
and
dec
xor
aas
rol
add
lods
dec
dec
cmp
mov
sub
sbb
lods
cmpl
fldt
jo
xor
adc
and
popf
pop
ret
jbe
add
xchg
add
test
mov
inc
xchg
jl
cmp
stc
stc
or
mov
pop
inc
dec
adc
lret
je
loopne
sub
out
stos
or
jl
mov
fs
fdivs
sbb
sarl
leave
sub
dec
cs
hlt
xor
xor
jo
push
sbb
push
loop
dec
mov
stos
mov
sahf
mov
xchg
mov
mov
setle
clc
cmp
xor
loop
lret
xchg
cmpl
lret
enter
push
inc
xchg
pop
data16
adc
in
mov
add
imul
jbe
dec
and
lahf
cmp
movsl
xor
mov
cmp
lods
xlat
mov
fbld
jle
push
lds
sub
cmp
jbe
mov
out
sbb
xchg
push
sbb
in
gs
in
or
add
es
jl
ficomps
mov
inc
icebp
xor
inc
add
mov
jge
rclb
xor
adc
mov
add
push
es
sub
add
imull
mov
push
out
in
dec
cmp
aas
mov
fldenv
addr16
mov
dec
pop
mov
sbbb
sub
pop
pushf
sub
cmc
mov
sub
addb
mulb
cmp
mov
push
inc
fwait
sub
xchg
adc
mov
andb
jo
lahf
nop
push
sarl
je
pop
mov
add
and
stc
sbb
loope
xlat
scas
insb
pop
dec
bound
push
mov
push
js
push
ljmp
vcvtdq2ps
aam
or
dec
jnp
and
cmp
ja
jle
xor
pop
xchg
addr16
sub
mov
test
mov
cmp
xchg
cmp
fldl
push
insb
xchg
add
call
or
mov
mov
rcrl
lock
pop
pop
rorb
cmp
xor
popf
push
and
dec
dec
out
pushf
lods
stos
mov
cmc
pop
lods
adc
inc
orb
sub
cmpb
jl
movsb
fwait
xor
inc
or
jmp
jmp
popa
xchg
mov
jbe
les
loop
jle
jmp
out
add
inc
lock
es
inc
repz
or
mov
jne
cmp
xchg
add
into
inc
ret
sub
popa
adc
cwtl
pop
fstpl
xchg
pop
or
xlat
jg
popf
pop
lock
mov
jbe
fidivs
dec
into
inc
adc
pop
jecxz
inc
jecxz
outsb
mov
jbe
mov
or
sbb
jnp
loopne
cmp
repnz
pop
fcoml
lods
sarb
add
pop
test
clc
inc
jmp
jmp
mov
cmp
pop
dec
repnz
test
loopne
xchg
fs
ljmp
orl
pmaxsw
rcrl
cmpb
cwtl
push
xor
xlat
movsb
lea
mov
jmp
dec
cli
mov
rorb
inc
push
ficoml
mov
sub
push
push
gs
aam
das
dec
inc
push
insb
es
push
jmp
fwait
cmpsl
and
and
adc
mov
cli
sub
xchg
xor
sub
loop
sbb
enter
mov
dec
push
outsl
pop
inc
int3
out
mov
js
mov
adc
mov
daa
pop
out
fisttpll
out
lock
xor
sbb
out
sub
adc
jno
ret
addl
movsl
add
rcrb
or
call
lods
dec
shlb
jbe
mov
inc
js
lea
or
loope
daa
pop
dec
push
loop
loope
jle
mov
popf
fisubrs
arpl
insl
add
jae
loopne
pop
jbe
xchg
mov
sub
lea
mov
arpl
sti
jp
dec
in
and
inc
sti
sbb
in
sahf
clc
xor
push
je
fs
cltd
xchg
xchg
pop
pop
lock
inc
sbb
mov
and
mov
clc
daa
enter
rorb
cmpl
sti
loopne
mov
and
je
sub
jb
add
lock
adc
dec
aam
bnd
push
adc
and
cmp
out
add
fildl
xchg
push
nop
iret
mov
hlt
out
lea
xchg
fsubl
dec
adc
or
pop
xchg
sub
fldenv
outsl
inc
pushf
inc
inc
dec
jae
ds
mov
and
dec
das
lret
mov
incb
adc
data16
or
mov
jb
push
shlb
push
adc
incb
clc
mov
shll
fisubs
test
jp
cmpl
das
fcmove
rcrb
das
adc
fistl
test
in
mov
gs
shlb
add
dec
mov
jns
cmc
int3
jns
jae
nop
mov
mov
scas
pusha
inc
dec
pusha
xchg
cmc
pop
loop
mov
fsubl
hlt
or
out
or
mov
jbe
scas
rolb
sahf
mov
cmp
cmp
arpl
lock
mov
xchg
xor
fstps
repnz
out
int
mov
sbb
aad
mov
dec
cmp
fistl
jae
mov
fistpl
mov
xor
inc
push
loopne
mov
bound
mov
aad
push
add
pusha
and
arpl
call
cmp
mov
ret
mov
jle
dec
xor
inc
jno
lea
icebp
xor
pop
sub
movsl
out
inc
and
mov
lcall
arpl
cmpsb
xchg
ret
fcoml
insb
push
mov
cmp
pop
pop
pop
push
shrl
inc
test
push
xchg
adc
aam
out
test
or
in
aaa
stos
or
loopne,pt
xlat
push
notl
cmp
sub
sub
or
sbb
mov
xor
mov
dec
lret
pop
sub
ror
cs
ljmp
out
and
dec
sysenter
sub
sub
pop
lcall
mov
ficoms
pop
sbb
jecxz
inc
test
push
std
jae
xlat
xlat
push
xchg
inc
mov
dec
pop
xchg
or
test
mov
xchg
sahf
adcb
mov
addr16
sbb
jo
add
rcll
or
mov
std
les
xor
sbb
mov
ljmp
out
bound
icebp
ljmp
jmp
push
mov
jle
push
and
cmp
xchg
jns
jmp
push
mov
test
pop
lea
ret
ret
sub
mov
cmc
xchg
dec
call
pop
xchg
pop
push
xchg
sub
pop
and
mov
push
fimull
mov
scas
addl
pop
adc
adc
push
adc
int3
push
mov
jg
dec
push
in
jb
jno
lret
loopne
sti
jecxz
dec
dec
ds
sub
pop
jecxz
out
lds
or
push
jecxz
outsl
dec
push
sbb
sahf
arpl
mov
xchg
push
mov
movsl
jne
add
mov
add
sbb
push
scas
fimuls
mov
sahf
push
test
stos
out
test
jae
lret
imul
mov
push
mov
mov
aam
iret
sub
ljmp
adc
push
mov
dec
xor
or
lods
mov
jnp
inc
sbbb
into
shlb
fists
sahf
mulb
es
sub
xor
push
cmp
rclb
das
dec
xchg
cmp
cmpsl
scas
ss
in
pop
pop
setle
adc
jg
out
and
and
rcll
test
aad
loopne
sub
in
cwtl
mov
add
leave
sbbl
loope
rol
icebp
xor
outsb
xor
xor
lahf
icebp
sub
les
push
stos
add
into
shll
imul
jmp
xor
cwtl
mov
lcall
fbstp
or
mov
push
sbb
mov
sub
and
sub
stos
leave
jae
aaa
pop
jg
leave
cmp
cmpb
movsl
mov
inc
sahf
mov
das
and
push
out
dec
or
movsl
dec
and
aaa
mov
repz
push
pushfw
test
fcmovne
pop
pop
dec
push
inc
popl
add
mov
fldt
in
fldcw
fdivl
xchg
fnstcw
in
lcall
shlb
lods
xor
je
xor
iret
mov
mov
fdivs
push
add
stos
sub
and
mov
xchg
jo
gs
out
lock
pop
rclb
fisttpl
adc
stos
jb
mov
xlat
add
xchg
lret
mov
into
xchg
adcb
mov
cmp
push
add
jmp
dec
outsl
pop
or
dec
cltd
add
fldlg2
icebp
or
add
mov
addr16
and
cmp
xchg
xor
test
pusha
sbb
jge
cmpsb
hlt
dec
mov
cmpsl
in
jp
in
mov
or
mov
xor
leave
mov
insl
cmpsl
jnp
pop
or
stos
cmp
sbb
fmuls
push
jo
pop
cwtl
loop
out
sbb
jg
pop
inc
daa
arpl
stos
insb
movsl
dec
sahf
and
shrb
std
std
shlb
sti
cmpsb
jnp
jge
stc
sub
pusha
out
xor
xchg
lea
jnp
jle
push
fcom
push
jne
gs
loope
mov
mov
fstpt
loopne
repnz
inc
pop
sbb
fs
xor
jmp
mov
outsl
inc
repz
jecxz
push
enter
pop
hlt
addr16
push
push
jl
sub
jp
cmp
inc
sub
jo
test
sub
mov
cmpsl
dec
cli
sbb
push
in
adc
outsb
inc
scas
sbb
sbb
jmp
fimull
mov
outsl
std
outsl
dec
adc
jns
or
out
int
add
add
rolb
nop
lcall
jnp
dec
xchg
mov
js
mov
inc
sub
lods
mov
loope
pop
sarb
nop
xchg
mov
test
add
je
stos
enter
daa
sub
imul
sarb
addl
imul
inc
inc
add
jle
dec
inc
sbb
bts
mov
cmp
mulb
mov
pop
into
vpcmpgtb
outsb
cmpsb
cmp
dec
jp
add
scas
sbb
sbb
inc
aas
ds
ljmp
lcall
mov
push
jle
outsl
or
iret
add
cwtl
pop
cwtl
jb
enter
fcmovb
fmuls
in
icebp
push
pop
cmp
addb
fistps
add
pushf
xchg
sub
in
add
jno
push
cmpsl
test
aam
dec
cmpsb
ljmp
pop
xlat
push
icebp
jmp
lcall
pop
pop
cmpsl
pop
add
arpl
or
ficompl
add
lret
push
inc
xchg
and
mov
mov
mov
mov
ja
das
mov
adc
test
sub
into
xor
sub
cmp
xlat
or
sarb
and
pop
clc
mov
xor
pop
inc
mov
pushf
xchg
and
xchg
sti
lock
jle
out
sub
fisttpl
jg
pop
mov
dec
dec
andl
mov
dec
sar
fwait
movsb
int
add
fwait
push
hlt
fbld
lock
cmpsb
adc
sub
aaa
fwait
push
jl
sbb
xchg
xchg
and
sub
test
cmp
fstpt
add
jecxz
adc
repz
fidivrl
and
int
and
mov
cmp
and
push
add
sbb
push
xchg
or
mov
cmp
push
mov
fimull
jnp
dec
lret
dec
cltd
cmp
push
loop
xlat
push
ret
fst
fildll
and
pushf
popf
mov
xlat
or
pushf
cmp
lods
out
mul
call
outsl
shll
pop
or
je
cmpsl
adc
sbb
jl
out
mov
jg
inc
xor
repnz
stc
cmpb
aam
add
int
mov
mov
sbb
fs
add
test
addb
cmp
cmp
inc
icebp
leave
pop
pop
mov
pop
es
inc
addr16
and
lret
call
jecxz
jmp
sbb
fadds
lods
fsubrl
cmpsb
loope
shr
xchg
clc
push
mov
or
jae,pn
push
push
sbb
cmp
mov
or
and
in
pusha
loopne
jnp
jg
cwtl
in
lcall
dec
add
test
lods
stos
je
lds
dec
mov
cmp
loopne
cmpsl
jp
orl
and
cld
push
sahf
xchg
jl
push
sub
mov
push
lds
iret
lods
jmp
andb
push
adc
adc
mov
push
repnz
jmp
mov
sub
jb
and
and
xchg
add
inc
enter
imul
pushl
adc
insb
mov
adc
nop
fadds
adc
add
js
sbb
xchg
jnp
xchg
in
adc
mov
add
push
ret
mov
out
sbb
inc
and
and
stc
push
iret
cmp
fs
pop
lea
lods
jmp
jae
rcr
incb
cli
leave
aaa
imul
or
dec
xchg
fucom
sub
movsb
inc
les
xor
or
ljmp
int3
push
fs
test
inc
xchg
mov
loope
sti
mov
xor
das
xchg
scas
pop
jecxz
and
pop
fadd
pop
arpl
mov
mov
push
arpl
fidivrs
sahf
gs
movhps
js
inc
xchg
jne
cmp
cmp
bound
movsl
mov
sahf
jle
sub
sbb
jae
sub
jae
fldt
jno
dec
push
cmp
insl
fdivl
cmpsb
sbb
ds
cmp
iret
leave
inc
pop
cmp
loop
xor
push
bound
cwtl
scas
xlat
out
cltd
dec
fwait
mov
push
jne
stos
xchg
testb
or
jbe
sbb
mov
mov
out
pushf
ficoms
ljmp
push
pop
mov
scas
mov
loop
cli
adc
jnp
sub
mov
ficomps
faddp
pop
test
sub
mov
js
loope
push
popf
jb
bound
fstpl
add
fistl
loope
loope
out
sub
and
clc
dec
cmpsb
dec
xchg
dec
and
push
scas
jb
movsl
lea
inc
and
data16
adc
mov
repnz
pop
jle
fs
sahf
into
pop
clc
cmp
das
pop
mov
cmc
lret
adc
enter
jecxz
addb
mov
ret
rcr
pop
test
and
imul
xchg
pop
ret
inc
xor
stc
ds
dec
and
fldt
xchg
test
adc
rclb
enter
sahf
into
xor
inc
push
icebp
push
and
cmpsl
aas
mov
jl
or
jp
jg
xchg
mov
sbb
arpl
sbb
shrb
or
pop
movsl
push
jecxz
pop
jae
adc
sub
insb
inc
jmp
mov
scas
inc
dec
push
shrb
lret
loopne
push
sbb
shlb
jne
sub
dec
scas
loop
jle
pop
mov
cs
and
je
dec
fwait
enter
pop
jno
add
push
mov
push
add
mov
fildl
xor
call
lods
fcoml
pusha
sbb
test
xor
shll
movsb
scas
adc
int
testb
lods
sbb
stos
xor
fwait
std
fadd
shlb
sbb
or
xchg
mov
and
int
or
mov
add
loope
inc
push
cmp
stos
dec
mov
scas
int
andb
pop
mov
adc
cwtl
out
data16
dec
sahf
adc
hlt
and
sbb
adc
add
cmc
mov
addb
popa
loope
and
repnz
xchg
sbb
mov
stos
fcomps
sbb
ljmp
fwait
cmp
lret
pop
push
and
mov
xchg
mov
cld
cli
jecxz
pop
or
cwtl
jl
or
pop
cmp
cltd
sub
mov
add
push
mov
pusha
cmp
pop
add
fwait
dec
push
gs
icebp
add
cwtl
test
test
das
into
sti
dec
testl
and
jl
push
cmc
sti
std
pop
fs
jecxz
adc
or
ror
mov
fwait
mov
mov
pop
jbe
sbb
cmp
xchg
shll
repnz
ja
rorb
icebp
mov
imul
subb
dec
dec
lods
inc
test
xchg
out
mov
xchg
aaa
adc
imul
mov
mov
repnz
push
sbb
mov
sub
dec
ret
into
fdecstp
cli
push
cmp
inc
shl
xchg
mov
cs
cwtl
xchg
pop
mov
inc
insb
icebp
fisubs
hlt
insb
cmc
lahf
test
insl
shrb
or
xchg
fiadds
scas
cld
hlt
or
sbb
daa
sbb
mov
xchg
fisubrs
sub
jae
popa
xchg
int3
mov
inc
addb
repz
call
call
and
cmp
fldt
cmpsb
lret
aas
push
in
aad
cmp
xchg
mull
lcall
adc
lret
sub
mov
lea
iret
jbe
cltd
jecxz
icebp
sti
rclb
mov
mov
xchg
js
sbb
mov
push
insb
lahf
mov
aam
sbb
push
fistl
pusha
testb
xchg
fisubs
cmp
jnp
shll
sub
mov
fadds
pop
sahf
push
test
mov
dec
jge
mov
add
int
pop
sub
testl
xor
inc
xchg
cmp
ja
jbe
imul
xchg
pop
lea
shl
adc
out
push
test
mov
mov
push
and
cmpsb
ss
rorb
sbb
lods
inc
negl
test
fbstp
sti
cmc
xlat
push
or
enter
mov
cltd
idivl
add
mov
and
mov
push
push
in
inc
adc
dec
cld
mov
shlb
pop
stos
sbb
mov
test
pop
xor
repnz
sbb
out
xchg
push
test
fstpt
jbe
fwait
stc
add
mov
ret
cli
cltd
jnp
lods
and
jg
jl
pop
sub
push
es
loop
pop
fcom
dec
inc
in
xchg
cmpl
js
xor
mov
or
cmp
insb
ret
arpl
outsb
fs
in
test
xchg
into
movsb
cltd
jne
mov
add
mov
iret
aaa
aam
pop
leave
mov
aas
add
adc
jl
xor
pop
mov
push
cmp
hlt
push
movsl
daa
ss
je
and
xchg
out
cmp
popf
shlb
aas
inc
in
movsb
cltd
lock
daa
jp
cmp
cld
test
je
aad
dec
rolb
negl
push
dec
fwait
or
ret
mov
aam
stos
dec
shrb
fstpt
repz
or
push
and
out
cmpb
add
clc
lods
lret
cmp
das
inc
pop
mov
fwait
int3
lods
or
push
jbe
dec
pop
stos
push
pop
push
data16
inc
or
int
and
sub
shlb
adcb
and
xor
mov
lea
sbb
jg
cmp
sub
mov
pop
push
jmp
pop
enter
jnp
data16
jo
cmpb
out
push
mov
ja
push
std
adc
test
push
aam
call
add
cmpsb
gs
inc
out
mulb
imul
add
cs
cltd
mov
mov
fsubrs
push
and
pop
mov
pop
call
sbb
mov
movl
mov
adc
cltd
cmp
and
fisubrs
add
fsubl
and
add
add
test
xor
cwtl
push
pop
decl
adc
outsb
call
or
adc
sbb
pop
insl
push
sar
push
mov
call
stos
mov
faddl
or
pop
mov
sub
adc
sub
arpl
lods
out
sbb
mov
pushf
in
add
pop
and
xor
cmp
push
push
mov
movb
fnstcw
popf
pop
jno
in
mov
test
cmp
xchg
hlt
lcall
lcall
bound
fcmovu
add
stos
loop
addb
scas
in
fistpl
in
mov
popa
cmp
ds
mov
pusha
lock
pop
jns
ret
pop
xchg
popa
xor
leave
bound
imul
cmpsb
clc
and
push
lahf
push
jns
inc
cmpsl
inc
insl
scas
cmpsb
jp
dec
jbe
xchg
mov
inc
jno
or
dec
push
xchg
cmp
faddl
ret
mov
add
jno
lret
test
loop
add
ss
adc
push
mov
cmp
xchg
fsts
cmp
pop
xor
iret
adc
stos
mov
jns
jmp
sub
popf
lahf
fdivl
ret
xor
std
or
mov
cwtl
ds
sub
daa
inc
mov
push
pop
out
push
dec
shl
push
push
ret
aad
pop
xchg
mov
push
dec
js
in
or
dec
or
in
shll
and
scas
lods
add
jg
and
decl
xchg
sti
and
and
push
sbb
push
cmp
in
int
inc
jb
shll
out
add
sbb
xchg
movsb
dec
or
mov
add
data16
mov
add
loope
push
fbld
and
xchg
xchg
leave
push
jg
mov
and
mov
rcll
insb
arpl
xchg
scas
insl
adc
out
push
cmp
leave
and
icebp
inc
iret
xchg
ret
negb
xor
pusha
imul
mov
or
in
or
and
rcll
and
cs
ljmp
jno
int
out
xor
push
xchg
pop
inc
daa
popf
repnz
xlat
divl
jp
xchg
xor
and
inc
cwtl
inc
shl
aas
fcmovne
xor
cmpsb
push
jp
dec
push
mov
inc
inc
add
cmp
cs
mov
dec
pop
mov
adc
ljmp
cmc
inc
rorb
mov
push
repz
add
mov
mov
jbe
scas
pushf
ja
mov
cmpsb
testl
mov
dec
push
movsl
es
mov
movsb
cltd
and
inc
bound
jle
mov
jnp
push
mov
icebp
and
es
pushf
into
sbb
movsb
nop
leave
loope
nop
jp
fiaddl
jno
subb
mov
jmp
lods
sbb
push
sbb
push
insl
xchg
adc
inc
imul
negb
cmp
jmp
lds
xchg
and
daa
fnstcw
adc
mov
mov
mov
in
stc
and
push
dec
xchg
subb
add
test
xchg
call
fistpl
das
aad
pop
aaa
les
fwait
aaa
mov
push
adc
nop
stos
andb
ret
iret
or
xchg
cmp
clc
popa
es
and
pop
test
pop
push
push
push
int3
out
cmp
and
xchg
or
add
loop
in
xor
mov
jl
mov
jnp
es
mov
jmp
jle
mov
fsubrl
sbb
xor
movsl
out
xor
mulb
nop
test
push
mov
and
and
jns
outsl
jno
enter
sbb
scas
jp
daa
xor
mov
pop
pop
dec
and
lahf
data16
push
mov
fdivs
or
ljmp
lret
cmpsl
xor
mov
ret
jnp
cmpsb
ds
aam
xor
adc
xor
xlat
jle
cmp
jbe
outsb
sbb
push
cmp
out
mov
mov
testb
cmp
xchg
jno
fistl
sub
xor
jmp
inc
out
je
push
out
sub
icebp
mov
mov
xchg
push
cmc
mov
adc
xor
xor
in
sub
adc
lahf
out
fiaddl
push
call
lock
dec
inc
xchg
dec
push
jle
dec
bound
loop
xchg
dec
pusha
lods
enter
int3
hlt
sbb
rolb
jle
xor
rcrb
jle
pop
ds
jmp
call
xchg
sbb
mov
lods
xchg
or
sbb
add
cmovae
arpl
sti
mov
inc
dec
js
sub
pop
fwait
push
sbb
mov
mov
dec
cmc
shl
ljmp
dec
pop
arpl
sbb
push
add
mov
add
test
push
and
sub
int3
incl
xchg
inc
push
add
cmpsl
in
xchg
or
and
mov
aam
push
push
push
xchg
cmp
sbb
inc
inc
iret
or
xchg
out
mov
std
push
hlt
xchg
add
sbb
xchg
subb
pop
mov
push
xchg
and
adc
fistps
pop
push
mov
aad
data16
mov
xor
xor
arpl
mov
jg
movsb
or
test
mov
dec
dec
stos
ret
jne
ret
insl
lea
add
in
cmpsb
es
notb
pop
mov
movsl
subl
mov
inc
xor
and
mov
movl
mov
push
popf
xor
xorb
in
sub
js
mov
lahf
es
jg
testb
inc
fsubs
loope,pn
jb
push
push
test
pushf
mov
imul
stos
frstor
stos
movsb
jge
jno
fnsave
addr16
inc
fs
push
outsb
cmp
sbb
ret
jne
into
xchg
imul
inc
mov
dec
cmc
fcos
xchg
pop
je
sbb
ss
insl
fimull
mov
fnstsw
sti
lock
adc
lret
repz
dec
rcl
inc
into
popf
mov
add
push
arpl
adc
dec
push
sub
push
and
nop
iret
and
and
and
xor
xchg
jne
sarl
in
push
xchg
sbbb
aas
jne
jns
xchg
mov
or
icebp
fdivr
shl
dec
inc
shlb
into
rcll
mov
adc
pop
por
dec
cmp
sar
mov
stc
filds
or
jo
idivl
mov
test
lds
pop
pop
insb
or
xchg
gs
mov
jmp
pop
mov
or
mov
rcll
or
into
cmp
jecxz
pop
mov
test
stc
adc
cltd
jle
inc
fs
xor
shll
out
sbb
dec
dec
ret
xor
loop
inc
rorl
adcb
add
cmpsl
mov
adc
inc
xchg
cmpsb
mov
push
loope
scas
aad
pop
enter
loope
mov
ret
repnz
push
jecxz
rcrl
inc
adc
test
inc
jl
imul
xor
and
mov
push
popa
dec
out
or
xor
jecxz
pop
push
add
pop
sbb
fs
ror
mov
jbe
outsb
sti
xchg
imul
stc
jb
mov
push
out
test
fwait
sbb
repnz
inc
and
pop
jb
rol
ficoml
inc
aas
adc
sbb
dec
lock
mov
jmp
jns
out
lahf
es
int3
adc
das
mov
mov
mov
fisttps
sub
mov
cmp
aad
push
mov
mov
or
into
adc
outsl
pop
ja
mov
scas
mov
lds
xchg
std
xchg
add
add
imul
add
dec
les
and
movsl
movsl
cmp
sbb
outsl
rclb
cmp
cmpl
xor
in
pop
adc
jbe
scas
into
ret
inc
filds
xchg
and
imul
mov
test
xchg
lods
sbb
push
fsubrs
xor
mov
shrb
mov
repnz
insb
and
mov
adc
scas
dec
cmpsb
pop
setle
dec
xchg
repz
into
lahf
jg
sbb
or
in
xchg
int
adc
push
and
stos
xchg
mov
outsl
test
loope
or
icebp
jne
sbb
lahf
inc
movsb
and
sub
mov
pushf
sbb
hlt
je
cltd
mov
repz
pop
mov
xor
sub
adc
cmp
dec
push
mov
mov
bound
add
insl
and
nop
sarl
sbb
sbb
js
pushf
cli
jge
bound
inc
cmp
pushf
fisttpll
cmpsl
pusha
jecxz
sbb
mov
lret
pop
stos
aaa
push
das
jge
icebp
mov
dec
addl
mov
test
jnp
mov
xchg
divl
inc
xchg
cltd
cs
push
xchg
and
add
mov
cltd
or
lret
mov
dec
das
addr16
stc
cld
push
cmp
je
sub
inc
fdivrl
aas
fmul
push
and
xor
cmp
inc
add
sub
push
push
call
loope
jmp
and
call
pop
inc
xor
mov
mov
into
xor
adc
rolb
outsb
pop
jecxz
pop
scas
loop
mov
xchg
mov
xlat
jp
sbb
mov
popa
ljmp
mul
mov
pop
out
pop
mov
ljmp
fisubs
mov
popf
in
mov
add
in
fldt
in
mov
ret
inc
jno
or
idivl
cmp
pushf
pop
cmp
cmp
in
inc
das
mov
mov
je
mov
pop
xor
loop
subl
jmp
ljmp
lds
mov
dec
push
xchg
inc
inc
mov
insb
jmp
push
jmp
add
test
dec
jb
mov
sub
push
shlb
add
lahf
cmp
xor
insl
and
jecxz
pop
xchg
mov
cmp
clc
movl
and
xchg
fistps
lds
pusha
inc
and
add
test
les
mov
icebp
es
mov
mov
jmp
xchg
inc
pop
je
xor
inc
mov
push
lret
xchg
fmull
shlb
pop
outsl
cmp
andl
xor
xor
jo
test
mov
das
inc
pop
lds
je
xchg
inc
and
jl
jl
inc
out
xlat
cmp
sub
push
sub
dec
adc
and
xchg
aad
cs
xor
lods
lock
sbb
pop
int
cmp
dec
outsb
stc
inc
outsb
divl
xchg
cs
or
mov
test
leave
add
insl
in
xor
repnz
add
lret
jb
mov
add
and
repz
inc
inc
xor
out
mov
cli
js
cmpsl
cmp
adc
shll
pusha
lret
cmp
pusha
jge
stos
rorl
push
shl
adc
js
shll
push
and
je
mov
loope
sbb
test
cltd
insb
filds
shlb
fisubrs
or
sbb
ret
jbe
in
push
xor
and
xchg
ljmp
pop
jp
cltd
lret
xchg
cmp
sahf
mov
xchg
mov
stc
sbb
jb
xchg
stc
jo
std
push
scas
mov
cmp
mov
lea
jo
jg
fnstenv
add
bound
andl
xor
add
aaa
fadds
xchg
pop
repz
dec
insb
lock
sub
sbb
xor
xor
icebp
add
lock
mov
out
mov
xorb
sbb
cmpb
cmpl
and
inc
les
push
sbb
push
push
int
movsl
cwtl
ss
inc
xor
sub
insl
sbb
scas
and
lahf
inc
fisttps
icebp
cmp
popa
fdivl
mov
test
fwait
xor
inc
jnp
rclb
fwait
push
push
and
jg
int3
outsb
sbb
ficoms
pop
lock
adc
jo
push
nop
or
jbe
jge
test
addr16
out
stos
loop
jg
ret
adc
movsl
cmp
or
out
and
test
pop
sarl
dec
adc
cmp
jb
dec
dec
adc
mov
into
test
xor
ficomps
in
shll
push
xor
mov
addr16
mov
mov
mov
dec
sub
shll
adc
je
shll
aas
add
int3
push
call
rorb
adc
int
loope
fs
sub
adc
setnp
sub
jecxz
push
leave
add
xchg
sbb
pushf
aas
cmp
mov
shlb
outsb
cmp
cmc
lods
add
sub
or
pop
inc
jle
push
outsl
sbb
mov
and
push
frstor
xchg
mov
cs
xchg
addl
sbb
mov
xchg
sub
fs
and
push
and
add
push
jae
repnz
mov
fnstsw
dec
adcl
xchg
rorl
scas
pop
lcall
mov
imul
pop
cmc
std
push
call
shrb
mov
out
inc
mov
inc
ja
jns
or
mov
push
mov
stc
inc
addr16
dec
push
es
mov
add
mov
push
adc
sub
jecxz
std
lahf
inc
js,pt
cmp
out
jle
jns
xor
pop
pop
in
dec
sahf
jmp
outsb
pop
dec
mov
xchg
addb
dec
es
jmp
mulb
insl
iret
in
push
subl
jge
mov
cmpb
xchg
mov
mov
fs
xchg
mov
into
mov
xchg
xchg
movsb
jns
ss
in
lret
loop
repz
cld
dec
cmc
xchg
mov
je
xchg
cmp
sbb
xor
adc
fsts
mov
mov
xor
push
stos
scas
mov
pop
test
lret
imul
sub
rclb
mov
in
jge
or
repz
lods
xchg
adc
sub
xchg
inc
or
inc
cmp
sub
xchg
in
cld
adc
add
inc
sub
negb
into
out
pop
inc
repz
dec
push
sbb
insl
inc
dec
js
and
test
xor
sbb
sbb
stos
shlb
adc
cwtl
cmp
adc
add
mov
dec
jp
fs
mov
aam
adc
fldl2t
repz
push
mov
aaa
sbb
pusha
and
mov
mov
mov
add
pcmpeqw
pusha
ss
punpcklbw
roll
dec
inc
test
pop
mov
cmpsb
pop
cmp
mov
xlat
jae
mov
decb
lock
mov
scas
shll
sarl
push
sub
pop
mov
xchg
das
icebp
ret
fst
or
mov
push
mov
test
das
dec
inc
pusha
and
test
stos
xchg
mov
fistpll
mov
jne
jne
lods
xchg
push
int
arpl
ds
daa
loope
jl
lea
push
push
stos
outsb
loopne
push
push
add
inc
cbtw
xchg
iret
sub
cmp
xchg
cmpsb
daa
aam
dec
push
and
icebp
gs
lret
out
aaa
int3
dec
dec
push
pop
push
test
out
or
cmpsb
xlat
add
jp
xchg
shrb
aam
sbb
iret
dec
pop
mov
add
mov
mov
xchg
aad
lahf
adc
sahf
add
push
int3
inc
out
jmp
cmp
cli
icebp
arpl
bound
loope
or
mov
testl
push
lcall
ret
out
gs
pop
sub
ljmp
dec
imul
inc
mov
jne
or
push
mov
sahf
sub
scas
loop
ret
or
je
addr16
add
inc
or
mov
mov
test
loopne
fwait
pusha
cmp
inc
or
inc
clc
xor
cmpsb
insl
add
sbb
lret
pop
mov
push
enter
lock
in
xor
sahf
in
and
dec
popa
daa
in
xchg
jo
dec
add
pusha
add
add
pop
icebp
ret
stc
sahf
adcb
sbbb
adcl
jl
cmp
lock
mov
mov
in
inc
rcrl
xor
rcrb
lahf
into
orl
imul
repnz
stc
ficoml
loopne
jne
addr16
mov
sbb
repnz
daa
cmp
fnstcw
pop
and
push
sub
push
dec
jae
repnz
xor
cwtl
lcall
cmp
div
mov
push
dec
jo
sahf
loope
push
fdivr
js
scas
sbb
daa
jl
aaa
outsl
mov
add
push
xor
inc
pop
push
push
cmp
push
fisubrs
adc
data16
iret
roll
sbbl
dec
and
pop
jle
fstp
outsl
in
bound
or
mov
adc
insb
push
pop
pop
xor
lea
mov
jmp
push
addb
sahf
cmp
push
sahf
mov
dec
jge
les
push
add
decl
movsl
in
push
dec
push
add
bnd
sarl
add
jne
pop
adc
imul
dec
xor
nop
dec
in
popf
mov
jb
mov
movsb
mov
jb
andl
int3
repnz
cltd
or
xchg
lods
and
decl
scas
stos
jge
lock
stos
out
add
int3
push
lret
sbb
mov
adc
push
loope
jb
push
sub
pop
mov
jno
add
clc
or
or
inc
jle
lea
ficompl
add
cmpsl
mov
pop
movsl
pop
mov
jae
or
in
mov
daa
mov
dec
ret
cmp
or
jne
popa
mov
lea
jge
gs
ret
sub
xor
cmp
xchg
icebp
adc
out
and
nop
inc
cmp
addr16
mov
fidivs
gs
xchg
add
imul
into
sarb
aaa
xor
jge
sub
repnz
inc
les
out
cmpsl
dec
add
pushw
les
cmpsl
mov
lret
aaa
out
add
loop
mov
lds
clc
xchg
cmpsl
and
dec
neg
daa
orl
fildll
inc
sbb
pushf
jo
mov
sarb
dec
lret
lret
pushf
loopne
and
and
mov
jg
orl
adc
out
and
mov
mov
in
jbe
lock
dec
jg
ja
inc
adc
pop
or
mov
xor
mov
outsl
ds
cmp
mov
outsl
inc
stos
lods
dec
jge
add
push
mov
fst
pop
fdivr
imul
push
cmpsl
nop
sub
call
inc
pop
xchg
addr16
scas
out
dec
and
rcll
mov
inc
cmp
arpl
nop
or
mov
or
adc
loope
pop
adc
lahf
inc
movsl
out
repz
sub
dec
jge
mov
repz
shl
pop
idivl
cltd
sarl
inc
pop
addr16
push
in
lret
push
jle
add
arpl
scas
dec
mov
adc
daa
hlt
pop
outsl
or
loopne
push
fs
cmp
bnd
loop
dec
popa
pop
jne
pop
addl
xchg
push
push
ret
movsb
push
push
push
mov
iret
jmp
call
pop
jbe
sbb
adc
shr
std
cld
orb
mov
stc
adc
pushf
mov
lods
mov
iret
sbb
dec
push
inc
lea
in
sbb
push
jbe
inc
pop
pusha
popf
xchg
pop
ret
fdivr
xor
sub
hlt
xor
xchg
clc
or
cmpsb
mov
cmpsb
pop
out
decb
xchg
jns
stos
adcb
cmp
rol
call
mov
add
jl
inc
xor
sbb
and
fiaddl
dec
aad
repnz
sub
jo
mov
push
inc
mov
xor
es
pop
pop
xor
sub
pop
inc
push
mul
push
fistps
pusha
ss
cmp
fucomi
mov
rcrl
mov
mov
inc
ds
mov
or
xchg
and
inc
and
push
cld
adc
inc
sub
push
fwait
cmp
or
add
dec
call
aam
push
mov
mov
cmp
dec
and
xchg
sub
mov
mov
mov
push
divl
stos
shll
rcrb
xor
enter
jge
xchg
fs
or
push
lret
iret
lret
dec
and
int
out
lds
das
pushf
fwait
mov
gs
insl
lds
mov
or
adc
dec
pushf
aad
test
mov
dec
int
jmp
push
aas
fidivrl
sarb
pop
or
pop
scas
and
sub
stos
shll
mov
inc
jmp
jbe
xor
cmp
dec
js
push
fisubs
pop
push
pop
jno
in
sub
inc
out
dec
xchg
xchg
arpl
jne
jg
push
int3
or
shrl
add
mov
shrb
xor
subb
pop
ficoml
fidivrs
or
pop
cmp
jo
das
fmulp
mov
jmp
sbbl
mov
xlat
pushf
sbb
jecxz
outsl
clc
dec
add
jnp
pop
ja
adc
dec
pop
lods
dec
jns
sbb
cld
mov
xor
popa
imul
in
xchg
jmp
xor
lds
imul
push
or
lods
cmpsb
fbstp
xchg
ss
mov
fcomps
popa
cli
repnz
mov
cmp
dec
push
dec
dec
mov
out
imulb
jo
xor
mov
jl
or
subl
lcall
and
pop
lcall
outsl
lods
lahf
add
es
cmc
or
mov
xchg
mov
cmpl
push
cmp
movsl
push
inc
dec
adc
test
pop
jnp
pop
cmc
xlat
sar
sti
test
outsb
gs
xor
popa
pop
jb
cltd
xor
sbb
xor
gs
lods
dec
jb
mov
and
jp
test
dec
movsb
or
jle
sbb
dec
pop
dec
mov
pop
dec
mov
jne
ret
cli
sub
pop
xlat
loop
xchg
push
hlt
pop
or
pop
enter
jbe
lods
loope
popa
data16
adc
mov
inc
dec
sbb
xor
push
call
cmp
inc
pop
leave
int3
push
imul
mov
daa
sarb
addr16
outsl
pop
dec
and
adc
jmp
divl
jl
add
fs
out
shl
xor
cltd
xor
repnz
mov
mov
inc
mov
jmp
aaa
loop
cmp
mov
mov
push
cmp
jge
mov
int3
or
xor
jl
add
dec
pop
and
cmp
push
dec
xchg
push
negb
fwait
add
mov
mov
loopne
in
mov
stc
xchg
inc
mov
mov
xchg
shl
jno
push
adc
ja
pop
pop
enter
mov
push
xchg
inc
mov
lods
lods
test
sub
mov
sub
push
pop
lahf
jmp
cmp
adc
add
bound
rorb
dec
dec
std
jne
lds
xchg
push
andl
std
dec
mov
jmp
in
dec
into
into
xchg
pop
imul
js
enter
sub
or
add
dec
or
mov
repnz
mov
popa
sub
push
dec
mov
gs
lcall
push
jp
sahf
clc
jp
test
xchg
sbb
in
imul
jg
popa
iret
mov
adc
mov
lods
scas
xchg
dec
add
jecxz
adc
aas
mov
shrl
add
inc
sarb
xor
add
mov
rorb
mov
lds
add
cmc
lods
add
adc
leave
sbb
pop
jmp
adc
in
fsub
pop
push
lcall
or
stos
sarl
scas
ljmp
rclb
xor
call
iret
or
or
sbb
jb
adc
xchg
mov
jns
aam
je
jbe
cmp
bnd
dec
lcall
pop
dec
daa
inc
adc
push
jae
inc
pop
mov
inc
jns
ljmp
jns
or
xchg
in
inc
sbb
inc
mov
jns
out
cld
push
int
fxch
test
sbb
or
or
xchg
imull
cmp
sub
pop
je
cli
test
lock
mov
stos
inc
fs
push
in
fisttpll
xchg
push
and
test
in
jle
adc
mov
cmpps
in
mov
or
cmpsl
add
ja
mov
pop
ss
std
pop
inc
add
call
int3
rorb
test
inc
dec
shr
dec
repnz
pop
rcrb
xor
rol
push
sub
mov
out
push
mov
jge
xchg
add
out
xlat
fdivp
in
sbb
rolb
mov
cltd
and
cltd
sub
out
mov
and
push
js
xchg
das
shll
mov
lea
adcl
cld
cmp
jno
mov
xor
icebp
pop
add
lock
daa
mov
dec
jecxz
or
push
popl
sub
sub
arpl
sbb
mov
xorb
xor
cmp
ret
gs
lods
fnop
jno
aas
push
push
jno
pop
cmp
xor
lods
test
push
inc
insl
xor
repnz
int
sti
fcomi
shrb
adc
push
fsubp
loop
call
lcall
sbb
ds
negl
addr16
cmpsb
dec
stc
xchg
xor
std
fisttpl
inc
xlat
cs
add
mov
repz
push
mov
xor
jmp
push
sbb
loop
lret
or
fidivl
dec
push
mov
inc
cvtdq2ps
lock
movsl
add
aas
sub
jp
and
test
dec
bound
divb
icebp
add
inc
movb
imul
cmp
lods
mov
jecxz
xor
aam
push
jae
mov
or
adc
rorb
xor
iret
test
popf
fdivp
leave
stc
addr16
in
iret
mov
mov
cmpsb
jbe
jno
scas
ficompl
test
nop
and
int
cmp
inc
in
xor
shll
pop
aad
mov
stos
push
jbe
sub
pop
cli
mov
sahf
ret
and
sbb
sub
ds
xchg
notb
aam
mov
mov
push
rol
repnz
stc
push
in
shll
push
cltd
shll
jbe
out
and
add
jae
ss
iret
xchg
push
das
push
pop
mov
push
int3
adc
sub
push
sub
cmc
lods
mov
cltd
sbb
add
jnp
pop
pop
sbb
fidivrl
mov
xor
or
stc
cwtl
sub
in
xchg
mov
push
jle
jmp
or
xchg
and
or
jae
bound
and
pop
inc
ljmp
orl
push
push
and
in
sub
pop
lret
scas
cmp
dec
sbb
mov
sbbb
add
es
stc
jle
sbb
movsb
mov
icebp
push
jle
mov
aad
js
xlat
jnp
fldl
mov
cs
mov
or
inc
cmp
ficoms
cli
orl
cmp
cmc
dec
lea
xor
fldenv
lret
inc
pop
rcll
jae
into
inc
sub
cld
lock
or
or
movb
data16
lods
xor
push
bnd
pop
in
dec
adc
repz
xchg
aam
jge
loop
mov
sar
mov
jmp
icebp
in
sbb
mov
shrl
jnp
inc
enter
bound
mov
shr
addb
rep
repz
xor
jmp
mov
mov
mov
xor
test
xchg
cltd
outsl
push
sbb
pop
add
iret
in
pop
in
and
mov
int
icebp
test
cwtl
sub
outsb
mov
cmpsl
cmp
mov
out
sbb
dec
add
mov
dec
test
mov
scas
mov
ret
sbb
sub
enter
sbb
mov
adc
outsb
lcall
out
fildll
fsubr
movsl
pop
js
push
aam
jns
and
jno
lea
and
mov
xchg
ret
test
jae
xchg
dec
arpl
mov
sub
sbb
test
pop
movsb
fsubr
ss
and
jmp
or
lahf
loop
popf
enter
add
aas
lods
popa
shl
xor
sbb
push
xor
or
push
test
jae
cltd
and
in
shl
stos
jb
cli
fwait
pop
les
mov
mov
xchg
les
xor
test
or
sbb
pop
pop
xor
xor
inc
ret
jb
xor
xchg
xor
sbb
ja
pop
mov
pop
mov
int
dec
sub
inc
or
mov
cld
add
xlat
inc
pop
ljmp
movsb
fadds
sub
pop
cmpsl
cmp
ret
clc
das
sbb
aad
xor
push
or
stos
xor
inc
icebp
xchg
test
jg
repnz
iret
leave
or
xor
add
push
mov
adcb
jno
leave
pop
mov
or
outsb
lods
addl
les
ret
jbe
fadds
jnp
fdivp
xor
data16
aas
xchg
mov
imul
je
in
sub
popa
xor
stc
sub
fnsave
xorl
scas
out
inc
leave
jae
std
popa
mov
pushf
pop
mov
sbb
add
xor
jnp
ficoml
fbld
into
cmp
movsl
movsb
dec
or
mov
mov
xor
ljmp
mov
and
xchg
lret
jo
dec
imul
mov
or
mov
cwtl
test
mov
call
test
mov
pushf
movsl
lds
adc
mov
push
xchg
xchg
xchg
sbb
push
push
add
pop
dec
mov
and
data16
repz
push
add
daa
push
xchg
leave
cltd
xchg
sbb
push
sbb
ficomps
repz
sub
sbb
out
aaa
fwait
and
je
sarl
movsb
ss
xor
adc
icebp
push
add
push
push
imul
mov
out
dec
xor
jp
jb
inc
lret
aam
nop
mov
add
mov
xlat
arpl
push
cmp
jmp
jbe
adc
pop
cmp
push
clc
mov
aam
fisttpl
or
fcmovne
fwait
movb
movsb
pushf
mov
xchg
ja
or
ficomps
repz
xor
jl
cli
lea
jge
mov
stos
loop
mov
or
adc
outsb
mull
neg
push
imul
xchg
and
and
pop
adc
rorb
or
add
cli
dec
mov
in
mov
dec
movsl
xchg
ljmp
push
xchg
test
xor
in
cli
cwtl
negb
imul
jne
push
stos
lea
cmpsl
add
out
es
jmp
adc
xor
jo
sbb
fsubs
adc
mov
outsb
in
andl
jo
outsb
sbbl
mov
addl
sti
adcl
fstl
stc
test
sbb
pop
push
sub
push
lret
aad
jne
rorl
movd
or
cmpsl
arpl
pop
xchg
xchg
je
ficomps
inc
je
add
lock
loope
sbb
test
ja
or
add
out
jl
sub
mov
jbe
mov
ja
inc
shlb
push
xchg
hlt
les
jb
inc
cmp
push
dec
pop
push
inc
aaa
cwtl
mov
or
mov
mov
jae
js
outsl
insb
aam
fiaddl
inc
jle
mov
jnp
int
push
ss
dec
or
loope
pop
push
or
xchg
repz
fildll
add
popf
sbb
inc
mov
testb
push
lret
or
sahf
sbb
lods
pcmpgtd
or
pop
test
pop
mov
jp
cmp
sti
testb
pushf
iret
xor
sarb
lods
xchg
xlat
call
in
outsb
or
add
popa
pop
cld
fcmovbe
xchg
jnp
xor
mov
insb
popa
cli
push
ret
fnstenv
aaa
cs
pushf
jecxz
sbb
add
loopne
test
mov
mov
rol
shll
filds
fisttpl
test
pop
and
ret
push
mov
dec
adc
mov
and
loop
or
test
mov
and
lcall
mov
jns
add
sti
mov
repz
lahf
stc
sub
add
add
sahf
mov
pop
sub
scas
push
xlat
jge
push
xlat
cmpsl
ja
sub
cmc
mov
cmpsl
adc
iret
inc
loope
push
insl
mov
sar
pop
imul
dec
insb
push
in
xor
outsb
shlb
push
fs
fwait
mov
imul
pushf
dec
mov
loopne
lret
xchg
sub
jecxz
rorb
pop
fiaddl
cmc
and
pop
pop
inc
aam
dec
jle
sbb
mov
add
stos
mov
dec
hlt
push
inc
jae
and
loop
jne
cmpsl
dec
dec
fsubs
adc
xor
repz
xor
test
in
or
repnz
xchg
mov
ret
cmp
inc
mov
or
iret
mov
pop
fprem
dec
mov
xor
pop
pushf
popf
pop
xor
in
pop
rcr
test
sub
fdivrs
mov
jne
jp
sub
xor
push
call
push
subb
jno
cmp
sub
orb
xchg
inc
test
pop
loope
in
xor
mov
sub
xor
fprem1
and
cli
aad
dec
mov
dec
xlat
clc
xor
add
xchg
in
push
xchg
lahf
fildll
shll
mov
fwait
sbb
leave
loop
push
mov
or
mov
push
inc
xor
filds
inc
aas
fiaddl
jge
aam
xchg
stc
and
xchg
outsl
or
adc
mov
xorl
fildll
add
lods
mov
bound
jno
cmp
mov
pusha
shlb
test
iret
pusha
sbb
inc
push
and
out
xor
cli
stc
outsl
sub
dec
add
aaa
sbb
pop
and
or
nop
je
sub
sarb
mov
xchg
into
loopne
jle
cmp
outsl
pop
push
nop
pop
je
sub
xor
mov
xchg
in
pop
cmpsb
sbb
sbb
and
xor
adc
jno
scas
out
dec
scas
sbb
mov
les
cmpsl
or
or
test
jmp
scas
mov
std
mov
mov
jge
dec
cmpl
in
fs
ret
xchg
fldcw
adc
daa
outsl
lds
push
jmp
xchg
jge
dec
mov
fbld
sbb
sub
pop
or
aam
pop
icebp
insb
xchg
mov
mov
stc
mov
es
push
shrb
xchg
into
dec
sub
jg
sbb
push
shl
in
xacquire
lea
add
mov
icebp
aaa
shlb
mov
xor
xchg
dec
jmp
mov
fwait
icebp
rol
jns
cmpsb
into
and
sbb
xor
push
fdivs
int3
aaa
mov
jo
pop
sbb
inc
dec
scas
out
xor
addr16
push
sbb
sahf
dec
bound
negb
push
in
xor
fcomps
daa
cli
pop
adc
push
jbe
sbb
loopne
mov
scas
sbb
pop
imul
out
cs
js
cmp
jle
hlt
pop
int3
flds
or
mov
push
inc
xchg
in
or
pop
mov
xorb
out
in
into
iret
inc
push
rcrb
mov
rorl
cltd
lods
pop
xchg
and
mov
dec
cli
inc
aas
into
popa
jb
xor
push
inc
test
sarb
inc
shlb
iret
lods
lods
hlt
dec
adc
sbb
repz
pusha
dec
dec
hlt
nop
cli
push
push
aad
shll
rolb
mov
ret
fwait
scas
lret
dec
aad
inc
mov
pop
scas
fadds
call
mov
lods
sub
aas
xor
nop
movsb
xchg
pop
mov
and
es
iret
rcll
jge
push
push
and
xlat
sub
pop
stos
rclb
fs
outsl
faddl
inc
aad
jg
out
loope
and
pop
scas
jmp
lcall
xor
push
icebp
test
jbe
dec
cs
inc
decb
jno
insb
scas
lds
dec
testl
int
jmp
adc
xchg
mov
cmp
fmulp
sarl
jno
sub
and
mov
mov
pop
in
in
xor
pop
js
addl
les
pop
xor
test
push
rcrb
mov
push
insb
pop
insl
xor
mov
shrl
jecxz
pop
imul
fnsave
shrl
icebp
mov
popa
les
push
ds
shll
lock
and
lahf
push
fsubrl
mov
push
aam
shlb
xorb
cmc
mov
out
out
sbb
fs
xchg
data16
inc
jns
dec
inc
dec
xchg
fstps
cmp
popa
daa
push
xor
jnp
cmpsb
sub
andl
xor
mov
xchg
shll
cs
loop
sub
jg
ret
sbb
push
xor
ja
popa
jno
ficomps
sbb
sbb
aaa
or
andb
fisubl
push
test
jp
stos
cmp
pop
cmp
aad
push
insl
movsb
mov
xchg
andb
jnp
lcall
leave
in
and
ljmp
sbb
movsb
stos
scas
pop
cmp
cs
adc
sub
fwait
outsl
fs
cmp
fdivrl
adc
add
mov
aas
int3
jb
or
ds
dec
movsl
out
out
pusha
addr16
leave
std
mov
sbbb
frstor
mov
xchg
lcall
inc
pop
xchg
inc
mov
ljmp
mov
and
mov
adc
sbb
sahf
and
ret
fistps
out
fistpl
pop
scas
js
enter
test
dec
insb
adcl
insb
jg
ret
cmp
mov
xchg
push
push
add
mov
sub
pop
xchg
and
sbb
jne
arpl
inc
pop
pop
sbb
push
xor
sbb
hlt
cmp
out
xchg
insl
jae
mov
and
push
xchg
lds
push
mov
jp
pushf
mov
popf
nop
xchg
push
or
ret
dec
lret
cs
movsl
repz
sub
add
movsb
addr16
sbb
xchg
sbb
push
popf
pop
out
cmpsl
jnp
mov
push
fiadds
pop
mov
sbb
push
orl
pusha
fwait
icebp
cmp
xchg
int
dec
pop
mov
bound
out
in
dec
rorl
mov
repnz
inc
jns
popa
in
insb
dec
fdivrs
rolb
sbb
jge
out
std
sbb
and
inc
outsl
xor
xor
ss
mov
test
push
jae
xchg
movsl
js
cltd
fs
mulb
outsl
fisttpl
out
aaa
sub
mov
xchg
inc
dec
jmp
loopne
cmc
mov
xchg
jp
mov
les
fs
jecxz
loope
mov
lods
cld
push
in
adc
pop
rorb
mov
stos
inc
out
stc
outsb
add
push
cmpsl
sub
push
leave
sbb
sbb
and
int3
insb
dec
std
mov
outsb
push
jle
or
fucomip
sub
daa
enter
push
jmp
mov
push
xchg
lds
pushf
out
mov
mov
cmc
fwait
push
ja
jle
stc
adc
lea
es
maxps
xchg
or
stos
sbb
nop
xchg
test
pop
or
xor
dec
and
cltd
pop
inc
lods
sub
mov
lds
mov
or
cmpsb
cs
je
cld
add
cmp
sub
orl
jp
fwait
cmpsl
movsl
int
and
call
lock
pop
fistps
xchg
ja
arpl
call
add
das
inc
adcb
cmp
sbb
cmc
imul
dec
hlt
push
cmp
cmp
mov
push
outsb
test
leave
jp
dec
inc
mov
cli
pushf
lods
dec
in
xchg
enter
or
pop
lock
mov
jg
xchg
dec
adc
push
xchg
test
push
mov
xchg
sbb
std
out
jne
adc
pop
fadd
movsb
andl
xor
imul
adc
inc
jo
mov
inc
test
fsubs
out
push
fcoms
add
mov
sub
inc
iret
leave
push
pop
jmp
add
sbb
adc
push
or
cli
sub
stc
xchg
sbb
outsb
je
mov
jne
cld
add
jns
scas
mov
or
jne
shlb
adc
push
lret
jmp
mov
mov
inc
ret
push
fsubrs
shrl
mov
sub
or
cld
outsl
push
xorb
and
add
cmp
fsubp
xorl
out
add
shll
rclb
mov
inc
dec
inc
fwait
pop
in
cmp
inc
fwait
cmp
adc
sbb
sub
repz
adc
test
mov
xor
andl
push
xor
aad
push
js
push
inc
cs
add
shrl
inc
rcrb
dec
imulb
xor
sarl
out
push
dec
fsubrs
data16
jge
call
cmp
aad
daa
ja
and
mov
es
js
fidivs
sbb
or
sub
int3
cmpsl
ljmp
push
movsl
mov
mov
add
pop
adc
das
jae
sub
popf
add
cmp
xchg
sahf
daa
es
adc
cmp
test
sub
add
or
mov
pop
sbb
les
sahf
sub
inc
jne
and
sbb
and
in
arpl
inc
icebp
stos
lds
add
mov
add
out
inc
sub
jb
cmp
cmp
into
pop
push
lahf
les
jnp
mov
fistps
bound
xchg
lahf
ja
loop
jl
push
test
cli
pop
pop
rcll
imull
sahf
lcall
or
cmp
lahf
mov
push
mov
iret
push
or
ret
mov
add
lock
clc
es
sti
push
dec
js
jle
rorb
mov
in
xchg
fdivrs
mov
loopne
add
lahf
sahf
add
hlt
test
adcl
push
ret
fsubrs
es
pop
mov
hlt
dec
cmp
pop
sbb
pop
jmp
in
inc
int3
lcall
lret
psubusb
push
dec
arpl
pop
out
fwait
loopne
sbb
scas
adc
pop
xor
mov
jge
aas
sub
pop
jg
cs
dec
pop
jecxz
add
imul
cltd
out
stos
push
shrl
mov
adc
shll
sub
cld
inc
fwait
in
jmp
and
sbb
xorl
mov
mov
ds
jbe
inc
push
sub
mov
xor
push
int
fnstsw
movsb
jge
nop
mov
les
jg
mov
pop
adc
sub
adc
inc
scas
lock
cli
lods
sbb
cmpsl
jp
popa
pop
xchg
push
mov
ljmp
sub
ficompl
dec
in
shlb
jb
testb
sbb
lret
lret
ds
pop
lea
dec
sbb
insl
cmp
xor
divb
leave
mov
ficomps
mov
mov
lods
int
push
dec
jo
cmp
mov
stc
add
scas
gs
and
int3
adcb
push
gs
imull
sbb
mov
adc
repnz
mov
mov
mov
js
sbb
in
test
rcll
adc
adc
mov
cs
outsb
mov
cltd
test
aad
adc
arpl
sub
fldenv
sahf
sub
mov
adc
fimuls
inc
inc
or
repz
in
fadds
iret
sbb
xchg
dec
pop
mov
pop
inc
test
lret
dec
cmp
mov
stos
mov
leave
fiaddl
test
push
inc
mov
sti
push
mov
jle
push
inc
negb
imul
sub
ds
ss
adc
repz
sbb
pop
jmp
std
inc
ja
lods
add
ljmp
ss
or
cmpsb
dec
jns
jg
xchg
insb
ret
cmp
dec
fs
in
outsl
add
imul
js
das
add
or
inc
push
in
jno
mov
mov
lods
jecxz
mov
push
pop
cmp
in
call
mov
add
push
sbb
and
xor
shr
push
imul
lods
adc
adc
cmc
fs
in
fs
int3
adc
dec
int3
dec
outsb
andl
jle
and
pop
movsl
rcl
lret
test
xor
mov
mov
lds
mov
add
xlat
sbb
push
insb
inc
push
sti
jae,pn
daa
xor
repz
fistpl
inc
sub
jl
and
daa
imul
filds
pop
ficompl
lret
enter
inc
jg
sub
xchg
ds
lods
fdivrl
stc
fcoms
push
mov
jg
pushf
sub
or
sbb
aad
jle
pop
and
shlb
fisubs
es
xchg
int3
lret
and
jp
or
imul
sub
xor
dec
into
jmp
lret
ja
mov
add
pop
bound
mov
shrl
icebp
sahf
clc
jge
std
imul
mov
push
mov
aaa
sub
aam
fdivr
out
or
fwait
test
scas
pushl
adc
jne
mov
cmp
xor
daa
repz
xor
lods
lahf
jno
mov
loopne
cmpsb
and
sbb
hlt
cmp
cmpsl
pop
stos
clc
adc
and
push
daa
cwtl
or
stos
lea
shr
shrl
jmp
and
clc
inc
mov
xchg
insl
call
jbe
push
daa
sbb
mov
fnstsw
xor
pop
fistl
daa
push
sub
nopl
mov
add
stos
mov
aam
loop
sbb
mov
mov
mov
test
add
loopne
out
push
lods
xor
adc
sbbl
push
cmpsl
nop
sbb
aaa
or
inc
mov
into
enter
mov
sbb
or
jmp
pop
imul
pop
iret
addl
jns
jp
mov
mov
adc
mov
jle
stc
inc
adc
mov
mov
push
add
cmpsl
test
fdivr
adc
inc
or
xchg
add
dec
jg
fstp
out
sbb
sub
xor
mov
pop
xor
ja
test
jle
lret
pop
ret
inc
pop
jge
and
int3
xchg
sub
ja
or
push
add
repz
cmpsl
dec
js
insb
sbb
insb
adc
sahf
jecxz
arpl
xchg
inc
fucomi
sbb
movsb
sbb
cs
add
pop
sbb
add
pop
imul
xor
mov
xor
xor
lock
adc
repz
mov
lds
daa
push
ret
test
inc
aad
mov
mov
or
cmpsl
push
jbe
or
leave
test
adc
add
jno
daa
popf
addl
inc
mov
jmp
xor
loopne
cmpsb
cmp
popf
ja
sub
enter
add
ret
and
iret
rcl
add
cmpsl
movsb
data16
ret
fldl
jle
push
jecxz
push
stos
mov
loope
jg
lahf
xchg
pop
xchg
addr16
mov
andl
xchg
shr
jo
ljmp
adc
icebp
sbb
push
aaa
add
pop
jp
sub
mov
mov
mov
ret
lods
das
push
and
pop
or
arpl
pop
sub
cmp
xchg
imul
fwait
test
popa
mov
mov
mov
sub
mov
pop
sbb
clc
cld
push
loop
mov
mov
pop
sbb
sbb
lods
dec
xchg
cld
mov
xchg
testb
jne
jo
dec
cmp
test
je
rcr
pop
loope
pusha
rorb
sub
mov
test
dec
int3
icebp
adc
fwait
aam
rol
cli
leave
fdivl
movsb
data16
repz
inc
imul
or
mov
pop
mov
js
adc
sahf
cmp
add
ret
jle
cwtl
adc
adc
mov
sub
cmp
sub
lock
int
sahf
push
cmp
and
in
add
js
fcomip
adc
bound
dec
sub
cwtl
fnstsw
mov
out
cld
inc
adc
adc
jecxz
orl
rolb
add
xor
sub
mov
xor
leave
xor
sbbl
mov
popl
fwait
je
in
dec
xor
xchg
aas
mov
add
dec
jge
call
addr16
mov
xchg
mov
in
sbb
inc
jp
xor
jl
cmp
push
ljmp
rorl
xor
jnp
inc
out
cmp
test
add
and
out
sbb
fs
push
cwtl
xor
jns
mov
xchg
adc
mov
dec
out
pop
ja
repz
loope
enter
das
mov
rcrb
fists
jo
push
push
fstpt
pop
rep
stc
lcall
js
sub
or
dec
mov
bound
fdivrl
cld
addb
pop
jge
cld
or
xchg
imulb
add
das
sarb
mov
std
ja
xor
in
bound
jecxz
jo
inc
mov
in
mov
xor
xchg
mov
lods
push
pop
ds
jle
mov
xchg
push
std
add
inc
andb
xchg
and
and
lret
out
stos
das
push
int
xchg
dec
scas
jmp
cmp
or
or
aaa
fnsave
mov
jg
jne
dec
fs
adcb
inc
test
xlat
pop
jo
iret
aam
dec
adcl
int3
dec
mov
jne
inc
and
pusha
sbb
and
rcl
sbb
test
std
sarb
dec
dec
jp
cmp
inc
pop
rol
test
adc
scas
mov
jae
aaa
popf
or
push
repnz
fnstcw
cmp
sbb
jo
pop
ds
xchg
int
pop
cmp
sub
mov
cs
cmpsl
mov
jmp
jno
enter
pop
sub
push
out
mov
pop
mov
mov
stos
les
repz
shrl
ljmp
push
cmp
push
test
sahf
dec
adc
lret
xorb
xchg
xor
imul
call
xchg
pop
notb
jg,pt
iret
mov
ljmp
and
fcomps
jns
std
inc
mov
mov
cmc
std
add
jmp
aas
rorb
hlt
inc
testl
mov
nop
lods
mov
test
xchg
jge
outsl
popa
mov
jle
mov
es
in
popf
push
insb
mov
fwait
jnp
out
xlat
mov
jp
ss
repz
push
pop
stos
je
jl
push
in
rdmsr
sbb
inc
jecxz
insb
cmc
sbb
mov
ja
mov
dec
xchg
enter
ret
outsl
push
and
jbe
xchg
cs
or
mov
loopne
mov
pop
dec
cmp
lds
push
lahf
add
outsl
aam
mov
subb
xchg
imul
jl
std
dec
aaa
lret
sub
imul
fdivrs
out
mov
inc
pop
lock
mov
gs
das
xchg
daa
pop
insb
js
pop
lret
iret
adc
imul
mov
out
cmc
cmp
and
orl
xchg
xor
leavew
cwtl
jns
dec
sub
aad
cmpsb
mov
ljmp
test
fwait
out
push
add
scas
pop
jl
xchg
xchg
xor
popf
loopne
lds
inc
sub
and
mov
in
mov
test
mov
repz
xor
xor
sbb
fdivrs
adc
lock
adc
arpl
mov
jmp
mov
outsl
ret
pop
jl
fsubs
sbb
hlt
std
inc
sub
bound
mov
lahf
dec
dec
test
sbb
or
push
scas
xchg
jmp
imul
mov
push
pop
jl
mov
add
mov
xlat
incb
dec
dec
xchg
pop
xchg
in
ja
ja
in
rorb
insl
push
mov
jge
ret
push
sub
iret
out
aaa
jne
movsb
daa
inc
cmp
xchg
std
and
push
pop
sub
adc
popa
add
jo
bound
pop
xorb
ret
cmc
loopne
in
cmp
dec
xor
aad
sub
dec
int
sbb
xor
lret
test
minps
lods
aas
sub
mov
pushf
cli
push
dec
cmp
ss
xor
push
orl
je
insl
jl
or
pop
pushf
cltd
push
es
stos
mov
mov
adc
jae
mov
test
mov
sbb
add
inc
xchg
cltd
out
test
aas
aam
aas
popf
xor
filds
cmc
inc
inc
sub
dec
imul
test
mov
hlt
hlt
ficomps
addr16
cs
lds
adc
jo
add
xchg
dec
mov
mov
imul
cli
icebp
int3
pop
sbb
jmp
cmp
loopne
jae
rcl
push
pusha
arpl
xor
cld
push
adc
and
sbb
sub
mov
pop
mov
loopne
scas
mov
dec
nop
push
sub
and
inc
jmp
sbb
sbb
fxch
sub
sbb
mov
mov
mov
rcll
clc
jmp
or
mov
jmp
cmpsl
test
jg
dec
adc
sub
cmp
cmp
sub
push
xchg
repnz
ds
leave
jae
stos
mov
jmp
sahf
ljmp
loop
dec
mov
xchg
fldl
fimull
cmc
sbb
inc
rorl
fstl
stc
push
xchg
add
cld
pop
cs
nop
inc
mov
lock
addr16
popf
mov
dec
and
jge
test
mov
sarb
adc
lret
jno
fs
stos
pop
stos
into
mov
mov
je
push
sub
popf
aas
enter
repz
sti
outsb
add
out
mov
inc
dec
out
add
stc
loope
fcoms
call
sbb
inc
and
and
mov
mov
xchg
add
inc
jmp
push
ja
leave
or
test
dec
push
inc
frstor
aad
or
pop
push
pusha
rclb
ror
cli
je
dec
inc
xor
aaa
arpl
dec
inc
mov
xor
mov
xor
hlt
sub
shlb
sbb
xor
stos
jl
std
daa
mov
jl
push
out
mov
pop
bnd
and
cmp
hlt
and
cmp
ficomps
push
sahf
into
jecxz
loopne
in
jle
dec
sub
loopne
cs
hlt
jbe
int3
nop
or
pop
dec
xchg
mov
shl
sbb
mov
mov
jo
or
adc
dec
mov
mov
sbb
xchg
lods
xor
xor
xchg
add
divl
dec
iret
cmpsb
or
sub
js
dec
lods
incb
addl
mov
push
mov
lods
push
and
dec
mov
in
or
fiadds
out
add
xor
bound
lret
inc
and
fcompl
test
mov
sbb
push
mov
lds
jecxz
in
cwtl
lcall
inc
insl
cmp
dec
pop
lcall
and
sub
lock
inc
mov
lahf
mov
mov
mov
adc
xor
mov
sub
push
mov
and
or
cltd
mov
addl
lea
out
or
orb
mov
mov
sbb
divb
ret
loopne
fidivrs
xchg
orl
sbb
loop
xchg
cmp
sub
adc
imul
add
mov
sub
out
cmc
xor
dec
cmc
in
jecxz
mov
lcall
js
aad
dec
add
movsb
arpl
jecxz
mov
mov
rorb
call
xor
inc
sub
cld
dec
push
cmpb
into
adc
sub
adc
insl
inc
out
loope
and
insb
aaa
leave
sbb
test
adc
hlt
inc
sbb
xor
adc
jo
inc
cmp
mov
ud2
jns
shll
iret
cwtl
cmpsb
cld
ljmp
jecxz
lret
and
fisubrl
adcl
in
rol
popa
dec
push
mov
das
je
mov
rcl
orl
adc
test
pop
push
in
inc
incb
adc
cmp
das
pop
push
cmp
push
gs
rcll
sbb
cli
rclb
lahf
inc
fisttpl
xor
mov
rorl
xchg
jp
jae
je
call
test
jmp
icebp
push
bound
sub
or
push
ret
and
xchg
hlt
imulb
mov
or
cmp
mov
repnz
iret
inc
outsb
movsb
mov
mov
shl
push
or
movsb
pop
cltd
push
push
cltd
sub
cmpb
dec
mov
inc
sub
xchg
ret
repz
push
repz
out
xchg
outsl
pushf
test
imul
xchg
mov
aas
dec
mov
leave
sbb
push
push
sarl
icebp
inc
into
xchg
mov
or
mov
sub
in
pop
lahf
ror
add
xchg
rcr
hlt
shrl
stos
xchg
pop
outsb
divb
pop
jg
mov
mov
stc
cs
movsl
xorb
rorl
pop
xchg
sbb
fisubl
sahf
jae
adc
out
dec
xor
mov
shlb
bound
xor
mov
jbe
and
imul
lds
outsl
push
mov
shl
mov
pop
push
and
or
fadds
jg
mov
sub
push
adc
jmp
mov
les
enter
inc
sub
cmp
jno
and
adc
xor
adc
sbb
andl
loopne
sahf
adc
mov
dec
fstl
jecxz
fs
xchg
stc
jmp
cmpsb
cld
lcall
xor
pop
sub
mov
aam
imul
xchg
cmp
fstps
std
fildl
or
pusha
insl
rsqrtps
push
data16
inc
scas
mov
mov
mov
out
test
add
addl
cwtl
insb
jbe
jecxz
test
jge
dec
popl
jb
add
mov
xchg
add
push
and
mov
add
test
dec
adc
sbb
adc
hlt
jb
mov
adc
inc
dec
lds
mov
xchg
mov
out
pop
mov
jge
sbb
jp
mov
jecxz
push
mov
cld
jno
jae
mov
push
jmp
push
movsl
mov
fs
in
sub
xor
mov
jg
mov
add
mov
loope
dec
dec
rcr
mov
dec
sub
lds
push
cmpsb
repnz
jp
pop
arpl
daa
xchg
leave
sub
popa
aaa
mov
mov
jle
push
mov
xor
mov
add
adc
mov
scas
fnstsw
data16
sub
in
or
sbb
jge
xor
or
hlt
xor
imul
adc
sbb
in
lahf
ret
fnstcw
xor
jb
push
jnp
lods
ss
xor
cmp
cmp
fdivrs
sbb
dec
cmp
pop
scas
sbb
repnz
rclb
mov
mov
add
imul
test
pusha
movsl
push
sbb
add
sarl
adc
mov
jl
loop
mov
icebp
mov
mov
or
cli
cltd
or
xor
ljmp
or
outsb
lret
test
fld
inc
fs
mov
jns
pop
fwait
jbe
cltd
mov
and
fsubrs
mov
cmp
sbbb
shll
inc
popa
int
cltd
pop
pop
lea
jp
xchg
sub
jae
lds
fs
fwait
mov
jmp
dec
lret
nop
xor
push
push
inc
fwait
inc
mov
pop
sub
jb
enter
cmp
mov
ret
divb
jns
repnz
addr16
ss
pop
xor
mov
xor
push
cmp
movl
ror
or
insl
inc
enter
mov
arpl
fsubp
jne
sti
cs
jne
scas
pop
pop
push
sub
mov
dec
sub
jmp
andb
push
ljmp
mov
sti
add
and
xchg
mov
imul
pop
ja
jne
inc
or
sub
adc
sub
inc
in
jge
or
arpl
in
inc
out
dec
push
loopne
test
cmp
movsl
aas
movsb
xchg
das
lret
add
out
pop
sub
or
je
xchg
and
push
inc
rorl
xchg
stos
fistl
push
dec
aad
icebp
test
push
popf
rcrl
enter
shl
or
lret
sub
xorb
sahf
pop
pop
mov
xchg
jmp
cmpsb
scas
pop
ficompl
loope
leave
dec
xor
shlb
clc
push
out
jne
mov
mov
push
in
inc
cmpsb
sbb
inc
xor
scas
inc
push
and
push
mov
andl
inc
ds
jb
inc
lds
mov
mov
lcall
xchg
sub
clc
nop
int
push
data16
adc
push
add
dec
add
or
fmull
pop
aad
mov
sbb
addl
or
cmp
je
and
inc
xchg
sub
fcmovb
test
int
or
sti
popa
xchg
push
adc
je
pop
and
loopne
inc
movl
jne
jo
pop
arpl
imul
call
xor
lds
test
xor
add
mov
or
gs
cld
std
sub
inc
inc
dec
cmp
push
stc
push
out
out
loopne
adc
jle
aam
aad
pusha
mov
lret
es
fldt
aas
xor
clc
sub
mov
sti
subl
popf
repnz
insl
bound
mov
imul
ja
int
jno
lea
mov
jmp
pop
test
aas
inc
leave
mov
ret
rcll
repz
test
push
adc
outsb
test
fcomi
xchg
popa
in
dec
add
push
jbe
add
ljmp
dec
mov
int3
cld
pop
cltd
push
lcall
push
stc
call
movsb
jns
data16
or
mov
mov
sub
sarb
lcall
pushf
lods
daa
sti
negl
aas
mov
imul
jnp
push
dec
mov
ds
sub
in
jle
xor
cmc
and
add
sbbb
movsl
mov
imul
mov
jbe
mov
pop
scas
xorl
add
test
mov
xchg
cmp
xchg
jae
add
mov
jmp
jb
cld
dec
xchg
rolb
mov
jl
rclb
ret
push
push
sarb
inc
in
icebp
das
ret
cmpsl
ss
fcompl
fsubrs
and
fbstp
test
sub
sub
stos
hlt
mov
adc
sbb
sbb
push
add
in
xchg
mov
sahf
and
addr16
jo
xchg
jle
pop
movsb
in
mull
sti
pushf
fistps
int
adc
and
out
cmp
push
aam
adc
hlt
cmp
mov
xor
test
rcr
inc
push
lret
imul
jp
pop
mov
nop
addr16
loope
adc
cld
pop
loope
lret
iret
and
dec
hlt
imul
pop
sub
fst
loopne
mov
mov
mov
or
xchg
loope
rcl
jp
lods
mov
fstl
and
adc
repz
pop
dec
sti
scas
mov
push
mov
adc
sbb
int3
push
xor
ja
xor
mov
lret
jmp
aaa
and
stos
fcoml
push
lcall
nop
mov
dec
mov
lret
fwait
or
mov
xchg
push
jle
mov
iret
and
rcrl
cmpsl
jl
loopne
jo
sbb
pop
imul
shrb
nop
adc
mov
inc
fcoml
sahf
xchg
push
add
and
cmp
mov
test
pop
imul
rolb
in
dec
push
mov
pushf
test
adc
add
or
push
jb
inc
scas
loopne
sti
shll
xchg
jno
jo
sub
inc
cmp
out
out
out
lock
pop
dec
outsb
xchg
xor
adc
xor
inc
out
icebp
sbb
testl
mov
lock
sbb
xchg
mov
cmpsb
pop
jecxz
inc
mov
fldenv
clc
cli
bound
sbb
psubsw
mov
js
cmc
fs
mov
mov
testb
fs
bound
mov
mov
movsl
lock
ss
add
mov
mov
xor
add
imul
stc
cltd
enter
scas
inc
xchg
popa
jae
cmp
xchg
out
test
shll
out
inc
mov
pop
jns
adc
in
lcall
cs
data16
inc
insl
orb
jmp
inc
lret
and
orb
dec
jge
mov
mov
sub
in
out
dec
mov
mov
loopne
cmp
in
cmc
jbe
in
inc
clc
and
stos
mov
mov
inc
fisttpl
or
jns
ljmp
mov
repnz
cmp
stos
lods
pop
mov
mov
into
dec
inc
xchg
push
or
mov
movsl
push
idivb
mov
test
mov
mov
ja
test
lret
addb
sub
or
and
jp
or
lock
rclb
roll
push
mov
push
add
add
fldcw
into
movsb
fcomps
clc
pop
in
shll
pop
movsl
lds
lahf
sarb
mov
sbb
mov
inc
jle
xchg
mov
sub
in
and
mov
rclb
sbb
and
jmp
dec
ljmp
jns
into
sbb
mov
sub
nop
xlat
mov
lret
adc
xor
roll
aad
mov
fidivrl
scas
push
or
test
sti
sub
cmp
push
jge
sahf
fwait
iret
mov
lret
xchg
hlt
movsl
shrb
rorl
les
movsl
sbb
or
sub
cmpsl
mull
lahf
dec
sti
lret
ss
sbb
fistpll
push
and
sub
cmp
ret
es
not
es
jnp
cmpsb
jbe
in
int
jne
rcrl
testb
gs
xchg
xor
lret
jle
test
mov
sbb
btr
xlat
or
xchg
mov
mov
inc
inc
mov
bnd
adc
sub
push
and
pop
push
mov
push
and
mov
pop
or
fdivr
fs
mov
les
pop
sub
push
sub
testl
jne
and
icebp
fcompl
aaa
in
stos
or
mov
inc
pop
mov
pop
daa
adc
pop
ds
mov
sub
out
loope
or
pop
loop
cli
and
hlt
adc
ret
sub
je
das
add
out
je
cld
push
jle
add
pop
dec
aam
inc
addr16
fsub
add
lret
dec
imul
call
dec
fisubs
gs
iret
scas
xchg
shr
pushf
pop
adc
mov
inc
xor
negl
fdecstp
arpl
andb
dec
aam
sub
sub
xor
outsl
sbb
sub
xor
adcl
or
loop
xchg
sub
addr16
cld
jbe
jo
mov
xor
mov
and
mov
push
xchg
dec
arpl
mov
xor
mov
push
mov
lods
inc
xor
add
mov
sub
das
movsb
clc
bound
mov
and
mov
shr
jbe
adc
ficoml
rolb
inc
xchg
xrelease
sbb
sbb
inc
jne
out
sub
sbb
jae
jno
test
in
mov
aad
mov
andb
push
arpl
sub
loop
dec
dec
out
xchg
jmp
add
ret
outsl
or
lret
push
add
mov
or
adc
loopne
add
popa
or
inc
mov
test
lret
mov
push
loopne
daa
in
lods
cmp
cmpsl
mov
sbb
ror
test
dec
inc
or
fcmovu
jmp
sbb
jp
cmp
ffreep
das
jne
pop
nopl
dec
ljmp
jns
push
ja
add
push
cld
push
call
and
rcrl
lods
mov
mov
dec
xlat
inc
sub
dec
loop
daa
out
std
cmpsb
cwtl
in
push
or
movsb
js
call
jecxz
aas
pushf
mov
lahf
ret
movl
cmp
sbb
pop
and
std
pop
stc
mov
out
ja
testl
xor
jl
clc
jno
cmp
hlt
pop
jae
clc
fidivl
cld
mov
aam
jne
push
inc
add
sbb
jmp
bound
das
push
out
in
daa
push
mov
mov
mov
call
imull
mov
out
out
in
leave
add
jb
insl
enter
popf
js
jns
xor
pushf
std
pusha
repnz
sti
add
sub
xlat
aam
lcall
bound
mov
pop
push
xchg
cmpsl
push
pusha
add
aam
mov
adcb
and
mov
dec
jl
xor
loopne
aam
sahf
cmp
mov
jp
gs
sub
xor
pop
fdivs
mov
or
mov
rcll
pop
cmpsl
fs
push
jl
mov
inc
push
es
loope
xor
jge
jge
lods
jp
into
or
pop
repz
loopne
cmp
mov
loopne
mov
fistl
pop
lock
cld
outsb
test
loope
faddl
mov
cld
mov
dec
mov
sub
sarl
and
mov
std
inc
pop
insb
lods
mov
add
jo
js
cli
pop
loopne
in
ret
clc
cmovb
test
fmuls
loop
mov
sub
sbb
lods
jnp
sub
popf
sbb
bound
fld
sbb
pop
jbe
outsl
dec
and
xchg
pushf
push
aam
jg
lcall
pop
aaa
mov
sbb
cmpsb
adc
mull
add
stos
or
out
push
sub
js
pop
iret
fisubl
fs
push
mov
mov
leave
cltd
test
sbb
xchg
add
xchg
sbb
rcll
outsl
and
stos
in
pop
fsub
xchg
ja
or
push
adc
cmpl
ret
shll
push
into
jno
push
xchg
je
dec
neg
push
xor
hlt
rorl
inc
pop
dec
push
jecxz
lods
jl
dec
jg
adc
gs
lahf
cmp
jp
mov
cmp
orb
push
outsb
in
rcrb
xor
int3
pop
jns
or
mov
xor
xor
cmp
nop
sub
pop
ficompl
sub
inc
adc
pusha
popa
xchg
out
adc
xchg
adc
cmc
in
stos
sub
adc
or
mov
shrb
push
dec
cs
sti
arpl
call
std
mov
in
outsb
jp
jno
lret
mov
mov
es
mov
xchg
cmpsb
pop
stos
std
outsb
cld
lret
cmp
aas
pop
fldcw
adc
cli
push
dec
lock
jecxz
aas
mov
cmpsl
sbb
lods
inc
test
push
sbb
inc
ja
ds
int
fidivrl
insb
aaa
shll
mov
cmp
leave
lret
pop
fsub
test
sub
imul
add
pushf
mov
dec
cmpb
xor
and
imul
fxch
pop
movsl
sbb
sub
mov
flds
test
xlat
mov
fs
pop
jecxz
rcrl
test
ljmp
mov
loopne
in
or
std
add
mov
jne
jno
das
and
adc
and
add
sahf
fs
outsw
rolb
ret
test
int3
xchg
psubq
aam
test
mov
push
bnd
cmpsb
xchg
inc
push
dec
push
loope
popa
loop
or
dec
or
out
aam
xchg
mov
pop
std
insl
inc
test
movsl
dec
cmc
cmp
icebp
push
add
cmpsl
mov
push
insb
int
cmp
fmuls
dec
jecxz
sbb
lcall
decb
dec
in
pop
es
sbbl
leave
adc
push
mov
mov
pop
mov
lods
xchg
xchg
jnp
shll
pop
push
xor
lds
push
inc
jnp
cmp
stc
shrl
cmp
inc
mov
ljmp
scas
enter
stos
mov
xchg
int
or
xorb
jmp
fs
mov
call
mov
adc
inc
inc
adc
xor
xchg
mov
mov
repnz
push
add
sub
movsl
scas
push
gs
aad
outsl
dec
jns
mov
pop
inc
aam
jae
inc
mov
aas
leave
je
fsubrs
add
pop
mov
mov
shlb
test
xor
idivb
xor
xchg
add
jmp
pop
subb
lods
lea
enter
lcall
xchg
xor
out
mov
xor
xchg
inc
and
add
cs
imul
and
add
add
jns
test
jne
mov
push
call
mov
decl
add
lock
es
ret
xchg
push
cmp
sub
xor
ss
cmc
in
call
out
stos
sub
xor
lcall
roll
xchg
mov
repnz
xchg
es
pop
aad
xchg
bound
cltd
dec
les
mov
icebp
adc
mov
push
repnz
xor
orb
xchg
movb
pop
jo
mov
push
pop
inc
xor
add
mov
dec
lret
mov
xorps
fnstenv
cmp
repz
cmp
xlat
jmp
cmp
cmp
xor
fstps
jb
into
jmp
or
jecxz
push
subl
pusha
rorb
mov
stos
ret
sarl
sbb
and
mov
insb
data16
ror
bound
fcom
pop
jnp
push
cmpb
sub
sahf
pop
jbe
cmp
iret
or
sbb
mov
ss
aad
sbb
or
pusha
and
lods
push
sbbl
lahf
rolb
and
int
fstpl
push
sub
cmpsl
xchg
xor
stos
cltd
mov
outsl
icebp
das
cwtl
arpl
test
mov
pop
xchg
into
push
outsb
cmp
jecxz
imul
rorl
rorl
jecxz
and
mov
in
lret
enter
xchg
mov
and
out
mov
sbb
pushf
mov
pop
sub
push
test
and
jo
lahf
sbb
imul
test
jne
cmp
nop
shlb
jns
push
in
in
mov
sarl
sti
inc
jg
xchg
jg
nop
in
fsubs
adc
inc
push
insb
data16
hlt
aaa
fs
stc
mov
push
xor
mov
mov
push
push
shll
sub
or
sub
inc
jb
dec
icebp
test
mov
mov
pop
ret
sub
mov
mov
xabort
jnp
shlb
adc
pop
fiaddl
ds
test
mov
cli
pop
call
out
sbb
jge
int3
pop
adc
rorb
or
dec
mov
lods
repz
mov
insl
sbbb
xchg
adc
or
mov
push
jmp
gs
xor
jo
adc
and
jbe
push
push
pop
mov
or
inc
pop
hlt
nop
inc
add
and
mov
mov
pusha
cmp
mov
mov
jnp
cmpsl
cwtl
stos
mov
data16
lahf
imul
and
add
in
adc
fdivr
or
mov
mov
push
frstor
mov
pop
fisubs
jp
pop
cmp
and
xlat
imul
push
and
lahf
pop
pop
pop
aad
or
lea
inc
gs
inc
mov
aas
in
test
adc
in
movsl
adc
aas
dec
and
mov
or
xchg
add
les
mov
sub
test
test
jge
and
dec
aad
stos
add
xchg
push
aaa
inc
jb
leave
mov
mov
sub
imul
fbld
mov
scas
sti
cmp
pop
es
xchg
cs
ss
imul
lahf
lock
fcmovne
cwtl
cmc
daa
lock
lods
adcl
into
adc
adc
orb
xchg
loope
cmc
aam
add
push
mov
nop
data16
adc
mov
fcoml
test
shrl
fisubl
nop
cwtl
mov
pop
out
xorb
mov
lock
and
aam
and
ljmp
insb
ljmp
aam
jl
push
cmpsl
es
jle
mov
fsubl
orb
add
das
jge
inc
adc
test
push
rcll
push
push
dec
pusha
dec
sarb
fwait
jno
xor
push
jecxz
loop
pop
fwait
add
inc
xor
xor
mov
aaa
ret
inc
mov
es
data16
movsb
in
pop
adc
push
mov
mov
push
mov
subb
test
jmp
enter
push
scas
mov
inc
push
sbb
rolb
mov
jp
push
cmp
outsl
jge
mov
aam
adc
rol
cmp
fcmovnb
sbb
cmp
or
iret
insl
mov
or
lcall
mov
in
add
and
xchg
or
test
xor
pop
mov
mov
add
dec
out
xchg
push
adc
and
insb
js
hlt
test
mov
adc
dec
ds
adc
jp
xlat
and
mov
sbb
arpl
lea
dec
aam
lds
aaa
push
mov
sahf
aas
mov
lea
lock
mov
jle
add
aam
sbb
jg
mov
test
xor
mov
movhps
jle
push
cmc
shll
xor
cld
dec
adcb
mov
pushf
testb
repnz
cmp
clc
lods
jbe
cs
adc
lcall
js
dec
pop
jb
sbb
movsb
xor
dec
pop
nop
lret
xor
mov
cmpsb
rorb
mov
clc
outsb
mov
sbb
push
jp
xchg
xchg
and
loop
stos
ficompl
nop
mov
xor
sub
jo
xchg
jae
fs
push
das
cmp
inc
repnz
nop
mov
mov
mov
fucomp
sub
xchg
and
out
movsl
cli
xchg
xlat
push
inc
pop
xor
xor
jbe
push
rcll
js
mov
stc
cld
mov
pop
out
dec
pop
cmpsl
addb
jecxz
inc
scas
call
sti
sub
ror
daa
ljmp
call
mov
xchg
scas
mov
aad
add
test
data16
sub
dec
jmp
cmp
jbe
call
push
or
mov
or
stc
lea
aam
pushl
jle
xlat
push
loopne
ljmp
call
arpl
jno
mov
aad
dec
push
movsb
pop
sub
adc
in
push
loop
lods
lahf
jge
es
cmp
cwtl
dec
xchg
mov
lcall
xchg
cmpsl
add
fistpll
ds
push
repnz
cld
enter
mov
loop
lahf
mov
dec
or
xchg
jg
xor
arpl
stos
mov
movsb
mov
pop
sub
imul
cmp
into
ja
in
jl
movsb
imul
push
fstpt
repnz
mov
clc
mov
in
cmpsl
push
dec
data16
lret
ret
out
mov
push
lcall
repz
jge
ja
out
ljmp
pop
add
inc
pop
xor
idivl
cmc
das
xor
sub
xor
out
cltd
test
in
rorb
mov
xchg
mov
cltd
mov
cld
xchg
pushf
ss
mov
cmp
mov
inc
lock
sub
mov
idiv
xor
leave
inc
xchg
fstpt
outsb
dec
jb
outsl
inc
mov
inc
repnz
push
in
sub
lods
cli
ds
clc
sbb
push
inc
cwtl
or
dec
sbb
pusha
sub
xchg
dec
or
iret
dec
pop
rorl
pusha
outsl
repnz
lds
pop
je
in
sub
pop
scas
jo
in
push
xchg
add
repnz
and
repz
pop
orl
jmp
sahf
int
xchg
std
std
int3
aam
lahf
incb
dec
mov
inc
mov
pop
in
ret
sub
dec
cmpl
push
jae
mov
xchg
cmc
add
mov
into
mov
push
push
leave
fildl
lea
mov
jg
or
pop
subl
sub
push
pop
mov
xlat
cld
push
sbb
roll
movsl
add
dec
int3
test
and
push
clc
adcl
cs
js
lahf
in
mov
mov
mov
psrld
add
mov
jo
add
lcall
xlat
pand
and
xchg
pop
int
sti
cmpsb
add
test
rcrb
inc
shlb
rcrl
fwait
out
mov
es
jmp
loop
push
imul
pop
into
adc
push
js
ret
cmpsb
lret
iret
pop
insb
shr
out
xor
pop
mov
pop
rolb
push
out
cmp
aam
mov
xchg
and
add
add
sub
jne
add
jecxz
out
outsl
mov
arpl
push
into
jnp
icebp
aaa
test
mov
stos
mov
dec
xor
lcall
test
mov
or
test
in
add
fwait
shll
rol
push
cmpl
lahf
mov
ljmp
mul
mov
dec
fld
mov
enter
pop
xchg
sub
sbb
xchg
sbb
or
xor
stos
cmpsl
pop
jbe
fsubs
roll
enter
add
daa
xlat
lcall
rorl
incl
adc
pop
cmp
adc
sbb
lcall
ret
jp
fs
aas
jmp
push
add
sub
push
push
popa
and
fnstenv
sbb
test
xlat
xchg
sbb
lock
cmpb
inc
push
mov
movsb
mov
shll
imul
aad
icebp
and
push
cmp
pop
xchg
imul
and
movsl
lahf
lahf
and
test
push
sbbl
imul
ret
in
das
cmpb
sub
fisttps
mov
sbb
lods
sbb
call
addr16
cmp
mov
xor
jge
arpl
cmp
out
dec
fistps
test
js
lea
xchg
pop
cltd
sarl
pop
enter
inc
mov
sub
add
cli
dec
pop
mov
or
mov
lret
push
pop
xchg
fbstp
mov
jno
scas
outsb
mov
std
dec
adc
add
xchg
arpl
addr16
jnp
jns
cs
mov
xor
ljmp
jb
shll
imul
jge
fcmovb
xchg
ret
loopne
arpl
mov
roll
or
or
nop
test
cmp
inc
add
jge
inc
pop
push
or
dec
or
pop
popa
pop
push
dec
cmpsb
mov
dec
push
stos
add
and
sbb
or
ret
lods
mov
test
hlt
notb
ret
jnp
bound
outsl
enter
pushf
jg
mov
das
xchg
mov
jns
jmp
mov
orl
sahf
sub
xchg
imul
jmp
dec
frstor
insb
shl
outsb
mov
scas
jae
sub
adc
pop
lods
mov
push
or
dec
mov
xchg
cmc
adc
les
fstpl
insl
cmp
cmp
shl
cmpsb
int
enter
sbb
loopne
movsb
scas
jno
mov
push
add
int
push
lods
mov
inc
test
pop
xchg
iret
adc
daa
mov
and
sub
inc
mov
gs
into
cltd
stc
clc
nop
je
sbb
rol
adc
out
shrb
mov
push
sbb
pop
les
push
cmp
push
lret
dec
add
pop
or
push
sahf
xor
mov
lods
out
cltd
ja
cld
add
mov
es
push
push
jo
mov
lods
shrl
out
loopne
arpl
cmp
mov
sbb
je
push
push
inc
mov
jp
mov
mov
dec
sub
and
fwait
inc
xor
adc
or
sub
nop
pop
ss
sub
cmp
jp
lret
aam
inc
jo
inc
mov
out
enter
push
pop
daa
int
sti
or
subb
imul
push
test
inc
lds
arpl
es
sub
mov
xor
inc
jo
cmc
jo
inc
mov
aas
loop
mov
or
subl
ret
pop
inc
je
cmp
cmpsl
hlt
outsb
ficomps
xchg
cmp
dec
daa
jge,pn
out
jbe
mov
mov
mov
ds
mov
pop
lods
int
cmc
mov
push
mov
insl
lods
ficompl
pop
pop
fcompl
xchg
pop
pop
out
add
mov
aad
push
inc
mov
mov
test
cltd
xor
lds
addr16
iret
and
mov
sub
adc
fildl
jle
lret
push
mov
push
mov
push
dec
loop
out
pop
mov
and
int3
aam
pop
in
popa
jmp
movsb
test
jle
mov
enter
push
fwait
sbb
or
loop
pop
out
mov
sbb
dec
enter
in
call
adc
pop
jnp
sbb
mov
cmpsl
sti
mov
lahf
xor
mov
stc
mov
lret
pusha
adc
shll
add
or
hlt
and
cmp
loope
add
loope
push
push
seto
ja
call
pop
cmp
inc
aad
cmc
aas
lret
jnp
sti
jg
push
cmp
hlt
sub
pop
and
pop
push
mov
lcall
aaa
mov
xchg
rorb
cmpsb
jmp
sahf
imul
pop
stos
cltd
out
test
and
sub
cmc
rcll
push
movsl
or
jns
test
daa
sbb
iret
mov
sbb
xchg
xchg
push
xchg
fists
outsb
xlat
push
fistps
sbb
shrl
test
dec
push
inc
or
lret
pushf
lds
mov
je,pn
and
and
clc
fisubl
push
imul
adc
mov
out
pop
ret
lahf
scas
cltd
fs
xorb
push
xchg
adc
jl
bound
popf
int
adc
repz
int3
call
ja
cmpsl
mov
jmp
xor
inc
and
out
push
flds
psraw
pop
repz
pop
adc
js
sbb
adc
sub
movnti
leave
pop
mov
ja
push
pop
fs
sub
pop
mov
inc
jo
lock
pop
sbb
mov
lods
mov
sub
lods
hlt
mov
jg
shll
inc
rcrl
mov
or
addr16
inc
pop
sbb
mov
pop
pop
in
mov
mov
hlt
sub
sbb
insb
adcb
repnz
sbb
inc
mov
fucomp
sbb
inc
pop
push
movsl
inc
ret
xor
sub
aad
inc
pop
push
push
lds
aam
dec
pop
add
call
adc
aas
and
pop
pop
lock
data16
sbb
xchg
mov
push
fnstenv
or
fs
test
pop
cmp
pop
sub
jmp
cmp
scas
movaps
push
cmp
push
mov
movsl
sbbb
imul
test
fs
push
ficompl
sbb
mov
out
jb
scas
js
lods
aaa
adc
inc
icebp
dec
xor
xchg
ljmp
jecxz
sub
je
in
xchg
xor
xchg
sbb
jge
cmp
sub
hlt
inc
dec
cmp
loope
xor
out
pop
inc
js
sbbl
sbb
xchg
mov
mov
cmp
adc
and
jo
stc
pop
je
scas
push
xor
mov
jg
aad
scas
sbb
sbb
sbb
notb
sbb
jo
or
stc
loop
je
ret
inc
sbb
xchg
lret
fwait
gs
push
stos
fstps
sbb
xor
cli
inc
lock
mov
in
leave
out
mov
scas
push
std
negb
lods
je
out
push
xchg
cmp
push
out
sub
and
xor
xor
lock
sbb
push
push
xor
lock
das
push
icebp
add
lahf
and
jg
popa
cmp
enter
ret
add
rorl
cmpsl
cmpsl
mov
cmc
test
lret
loop
testb
mov
pop
loope
stos
xchg
imul
mov
xor
or
push
insb
scas
test
xchg
adcl
pop
or
imul
pop
mov
into
and
fidivrs
inc
std
jae
fbld
inc
adcb
jno
cmp
nop
pop
pop
jg
xor
mov
popf
int3
jecxz
movl
mov
loopne
add
rcll
enter
inc
xor
cmpsl
push
pop
dec
outsl
fdivrl
shrl
nop
or
or
dec
or
loopne
mov
popf
cmp
vrsqrtss
cmp
mov
add
mov
xor
fildll
adc
lcall
repz
mov
or
inc
fdivs
out
jbe
pop
rclb
push
mov
in
mov
test
add
sub
push
dec
fsubrp
or
lcall
pop
mov
sub
mov
cmp
fdivs
jbe
pop
mov
enter
push
jecxz
jg
rol
insl
aam
mov
lahf
ja
xchg
cmp
in
mov
sub
push
sbb
ss
and
mov
minps
dec
add
pop
sub
inc
add
js
cmc
and
push
fmuls
xchg
fisubrl
sarb
std
js
mov
stos
daa
les
fsubr
xlat
ret
dec
es
xchg
xchg
mov
sub
and
cmpsl
out
adc
or
outsl
stos
cltd
movsl
jbe
fs
adc
push
pop
stos
sbb
xchg
add
movsl
push
inc
fisubrs
fcomps
mov
cmpsl
arpl
mov
push
rol
pop
cmc
pushf
in
mov
mov
pop
and
jecxz
add
sub
pop
out
aam
pop
jecxz
filds
shrl
lds
sub
stos
or
shrb
adc
outsl
xchg
dec
out
pop
outsl
stos
icebp
repz
mov
mov
mov
fdivs
or
clc
xor
push
and
insl
jae
iret
addr16
mov
les
loop
out
scas
pop
repz
andl
movsb
jmp
adc
mov
mov
scas
jo
insl
mov
push
add
addr16
mov
nop
sbb
mov
mov
push
aam
jle
xor
or
addr16
je
mov
fwait
aam
jg
inc
aas
cmp
aad
pop
push
fs
mov
sbb
ja
lock
repz
push
imul
mov
std
in
cmp
mov
fistps
clc
inc
cmc
mov
push
testl
cltd
xlat
pusha
mov
fsubs
mov
mov
lods
cmp
cmp
daa
lea
addps
addl
jge
out
fistl
movsl
pop
push
mov
xchg
sub
sbb
inc
mov
call
ljmp
mov
cmp
jne
test
pop
repnz
loope
test
sti
lds
jb
in
imul
jecxz
scas
xchg
xchg
stos
jge
inc
repz
jae
mov
and
cli
add
fwait
jecxz
dec
aaa
arpl
aas
dec
inc
rol
cmp
inc
les
add
std
push
pop
add
test
inc
shrl
mov
insb
jno
lret
lods
xor
call
loopne
je
rclb
lock
ds
ds
or
aas
fld
outsl
lock
pushf
cmp
loop
icebp
lods
stos
push
mov
movb
lock
adc
leave
push
aaa
notl
cmp
and
jmp
js
popf
xor
ds
cld
iret
imul
es
xchg
aas
fwait
test
fcomip
fistl
xorb
xchg
push
out
iret
lret
ljmp
popa
in
push
jbe
jbe
aam
bound
dec
lahf
pop
cmpsl
add
jno
sbb
jmp
mov
ret
dec
popf
cmp
repnz
or
cld
xchg
loop
ljmp
loop
loopne
mov
push
sub
ret
hlt
outsl
xchg
or
mov
xor
cmp
in
sub
jge
addr16
pop
dec
mov
imul
cwtl
adc
sbb
add
das
aaa
bnd
mov
das
lcall
jno
cmpsl
jecxz
js
adc
and
push
mov
and
fsubr
aaa
mov
fdivrs
rorl
das
pusha
pop
cld
mov
sub
imul
sbb
daa
or
adc
imul
mov
pop
adc
ret
insl
mov
inc
dec
pop
xor
push
dec
and
or
pop
test
cmp
cmp
cmpsb
gs
mov
jo
int3
loope
mov
insb
jmp
pop
jo
dec
stos
loopne
pop
jp
cmc
popa
xchg
filds
cmc
mov
sti
xor
sarl
ret
jae
mov
mov
xchg
into
jecxz
adc
aas
movsl
adc
mov
testl
and
xor
out
into
jge
pop
fbstp
arpl
sahf
xlat
xchg
dec
pushf
pop
mov
and
push
or
imul
jl
lcall
xchg
mov
push
repz
mov
sub
inc
repnz
sahf
gs
xor
xor
sub
or
jb
adc
and
test
out
sahf
das
test
sbb
scas
push
mov
jae
pop
scas
jmp
stos
jbe
pop
dec
rcrb
mov
add
cmp
js
in
shrb
andb
nopl
rcll
adc
lret
int3
es
xchg
mov
or
in
rolb
or
adc
cs
mov
pop
adc
std
fldenv
mov
sub
inc
mov
or
mov
jle
push
push
mov
pop
or
push
sub
jecxz
dec
ret
into
sbb
jae
cmp
fcmovne
xchg
popf
leave
jbe
ss
fcompl
imul
xor
roll
jmp
jecxz
or
mov
aad
cld
cmp
pushf
fcompl
push
js
out
lea
fcomi
bts
dec
movsb
inc
bound
stos
js
push
mov
into
and
into
popa
aas
lods
cmp
daa
xchg
jno
add
push
fcmovu
loopne
mov
insl
sub
adc
mov
rcrb
xor
jecxz
mov
lcall
add
js
int3
js
lds
jmp
les
loop
mov
xchg
cmpsl
call
fcmovu
pop
jnp
mov
mov
fsubp
mov
jle
mov
cli
pop
enter
aaa
xlat
sbb
mov
cmc
inc
sbb
call
ror
mov
lds
fcoms
inc
mov
lcall
shll
sbb
dec
sub
jp
and
adc
or
xchg
pop
sub
cs
jb
in
or
cmpsb
adc
fsubrs
push
jmp
cwtl
add
add
in
fistl
imul
shlb
notb
imul
outsl
mov
cmpsb
and
aam
sahf
arpl
push
out
mov
push
mov
dec
std
or
dec
cs
cmp
ret
outsb
nop
jg
mov
xor
pusha
inc
das
sahf
mov
jle
or
jo
mov
mov
xchg
lods
clc
or
cmc
jnp
lds
mov
fsubrl
adc
push
data16
fidivrs
dec
arpl
and
les
subl
add
jb
or
push
inc
call
mov
sub
push
cmc
jmp
into
dec
test
push
mov
pop
addb
inc
push
cmp
aas
inc
das
cmp
cmpsb
inc
aaa
daa
mov
mov
xor
mov
lahf
movsl
mov
out
xor
cs
in
loope
test
hlt
lods
adc
adc
xor
add
sbb
push
adc
xchg
push
pop
or
push
loope
imul
in
jnp
push
push
fmull
stc
push
or
aaa
je
int
and
dec
or
addr16
cli
pop
iret
and
jl
sar
je
adc
jno
leave
aam
icebp
pop
cmc
out
sbb
xor
push
pop
hlt
xchg
lcall
xchg
outsb
or
iret
jbe
cmp
bound
push
lods
push
add
lahf
jbe
gs
push
mov
sub
xchg
pop
pop
arpl
xchg
xor
sbbb
imul
std
sti
or
pop
je
fsubrs
hlt
mov
jb
cmp
into
pop
std
ds
rcl
xchg
jnp
cmp
movsb
pop
cmp
fisubrs
rol
out
dec
mov
jbe
adc
cmp
cmp
or
sbb
movsb
xorl
lods
or
mov
pop
ficoms
mov
mov
fidivrl
adc
push
test
xchg
rcrb
enter
imul
fldz
test
push
movsl
ret
pop
arpl
cld
fsub
arpl
pop
sbb
and
bound
add
addl
cmp
add
leave
xchg
xchg
mov
push
and
cmp
push
out
jp
stos
test
push
arpl
jno
dec
mov
jl
fcmovnu
adc
inc
repnz
cs
jg
fadds
loope
fs
in
push
scas
sbb
sbb
fists
jl
mov
sbb
mov
xor
push
or
push
cmp
rol
int
adc
ss
pop
inc
push
mov
xchg
hlt
call
sti
add
xor
dec
mov
dec
push
rolb
ret
movsb
xchg
rorl
adc
cmp
pop
sahf
or
outsb
bound
or
aas
into
jae
cmp
lret
sbb
push
xchg
fsubrl
les
enter
gs
lret
lret
cmp
js
push
pop
test
xlat
imul
in
inc
sub
jge
arpl
xchg
daa
and
dec
sti
cmc
add
jo
test
jp
in
mov
out
adc
xchg
or
jg
test
adc
add
push
insl
imul
or
addr16
iret
ret
jb
mov
xor
arpl
movsb
test
popa
xor
pop
enter
push
add
lods
nop
outsl
sbb
adc
mov
fimuls
jne
in
fs
jae
test
mov
enter
mov
lds
dec
imul
inc
mov
mov
fdivrl
mov
push
mov
scas
repz
stos
ret
clc
je
dec
or
mov
mov
sub
pop
push
ret
inc
mov
push
aas
mov
xchg
cmp
cmpl
inc
mov
negl
aas
jae
jb
out
enter
sbb
push
divb
mov
xchg
or
pop
test
out
and
add
adc
jns
dec
or
loopne
popf
js
fidivs
popa
push
cmp
or
rcll
out
mov
repz
adc
jl
mov
mov
test
or
ret
movsl
les
mov
loopne
and
jge
pop
bound
and
dec
lea
xor
rcrl
cmp
int
inc
add
dec
xor
push
in
aam
jle
mov
xor
push
add
sub
test
jnp
jmp
int3
cwtl
xchg
int3
pusha
push
adc
mov
in
xor
mov
rclb
fistps
mov
scas
sbb
out
scas
lret
mov
jns
pusha
mov
jl
cli
lea
sahf
leave
mov
sahf
and
or
fs
enter
mov
jo
jns
enter
sub
dec
stc
mov
push
mov
out
adc
fwait
dec
loope
push
out
sub
inc
ret
imul
pop
push
adcb
or
jmp
adcl
mov
or
in
fiaddl
js
neg
jae
popa
mov
or
sahf
sbb
inc
mov
pop
mov
push
int
jns
bound
fcmovu
adc
push
call
add
or
sarl
jge
pop
sub
mov
sub
outsb
xchg
sbb
aaa
dec
fdivp
loop
loop
loope
jns
out
pop
ss
outsl
push
cmpsl
cmp
xor
xchg
xor
mov
jb
inc
cmp
jle
scas
ja
mov
mov
test
mov
and
lods
and
push
jae
mov
inc
jae
mov
gs
add
sub
push
out
icebp
lods
adc
cmp
jmp
clc
movsl
test
incl
sti
push
inc
mov
lock
pop
inc
loopne
nop
test
pop
cltd
lods
leave
jg
and
sbb
inc
loopne
or
mov
jmp
jne
ljmp
and
cmpsb
ss
mov
and
mov
add
mov
xchg
pusha
jmp
xor
xlat
mov
cmp
movsb
mov
cmc
vmwrite
orb
push
jge
imul
pop
aad
in
jb
fdivl
sub
and
inc
aad
push
fisttps
cld
add
out
pop
mov
shll
icebp
cmp
test
insl
ret
movsl
ja
add
lods
pop
lahf
outsl
mov
xor
jecxz
in
stos
imul
test
stos
dec
insb
fiadds
test
or
or
mov
outsb
sbbl
push
es
sub
sbb
icebp
and
rclb
sub
mov
ret
xchg
cli
test
scas
fs
xor
mov
sub
dec
adc
shlb
push
pushf
mov
outsl
pop
roll
fwait
int3
pop
jbe
sub
cmp
cli
testb
mov
loope
repz
xor
lahf
stc
mov
idivl
adc
hlt
cmp
inc
cli
xor
jmp
sbb
cli
clc
cli
pop
fsubrs
xlat
scas
sub
sub
push
loop
push
xchg
hlt
js
xchg
push
arpl
sub
sti
mov
lds
repnz
lret
pop
sub
and
jp
out
mov
sarl
adc
cmp
addr16
or
and
aaa
movsb
dec
loop
sub
leave
cmp
insl
push
sub
and
sbb
fscale
mov
test
lret
sub
cmpsl
sub
cwtl
cmp
adc
lds
hlt
int3
lods
jnp
jmp
scas
and
sub
mov
shrb
jo
es
adc
leave
test
aad
dec
andb
push
push
push
inc
loope
mov
cltd
rorb
push
pusha
mov
sub
and
push
push
fnsave
mov
add
cmp
and
dec
cmp
mov
outsb
xchg
or
and
jae
pop
mov
or
xchg
push
xlat
sbb
lahf
imul
push
sbb
fwait
aad
fwait
mov
pushf
popf
mov
push
or
jg
inc
cwtl
sbb
mov
movsl
fwait
shlb
dec
add
fxch
add
push
cmp
inc
out
ss
cli
sub
and
mov
jecxz
popa
push
aaa
cmpsb
cmp
outsl
push
mov
jge
xchg
stos
in
lea
dec
sbb
imul
pushf
jb
mov
xorl
adc
dec
cwtl
loope
jo
or
ror
pop
push
cld
cmp
test
fcomi
call
inc
add
jo
xor
jnp
pusha
mov
bnd
cmp
ja
out
mov
lahf
subl
fsubl
negl
xchg
add
or
cwtl
dec
add
pop
inc
call
fdivrl
andb
sub
mov
inc
cmp
xchg
js
xor
negl
xlat
xor
cmc
ja
mov
stos
cmp
inc
shl
lods
and
jg
pop
mov
push
loope
insb
scas
mov
test
push
pop
push
loopne
enter
std
out
inc
mov
mov
mov
mov
pop
jo
stos
dec
jge
dec
pop
sbb
arpl
mov
call
jle
pop
rol
cld
outsb
aaa
leave
or
pop
sub
push
filds
ret
aas
fwait
xlat
xor
push
sbb
popa
enter
popa
clc
mov
xchg
fldenv
dec
stos
xchg
fnstcw
pop
imulb
dec
mov
mov
mov
add
cmp
adc
popf
aam
add
push
mov
lret
jg
jg
leave
push
xchg
mov
cs
sub
popf
sar
mov
imul
inc
aam
stos
jl
lcall
adc
lods
mov
imul
aam
cmpsl
or
popf
out
movsl
mov
adc
pusha
push
pushf
mov
sti
cltd
imul
lea
xchg
push
push
clc
scas
add
push
dec
inc
push
rorl
sub
scas
add
out
pop
loopne
push
adc
int3
push
cmp
lahf
push
mov
xchg
adc
insb
imul
stos
sbb
xchg
xor
xlat
insb
mov
jg
mov
xchg
sbb
jmp
or
roll
cmp
and
ret
jbe
movaps
sbb
xor
test
cmp
and
pop
inc
imul
push
insl
push
mov
daa
addr16
jbe
add
push
nop
hlt
lret
sbb
sbb
mov
pop
test
fstl
sub
out
nop
cwtl
inc
xchg
test
pop
push
push
aad
sahf
daa
mov
cmp
dec
rcll
sbb
push
lock
xchg
leave
dec
push
push
push
inc
sub
push
cmp
or
mov
aam
xor
les
test
push
imul
push
out
or
out
aas
fistpll
jnp
cli
das
sarb
test
sbb
cltd
movsl
dec
sets
fwait
push
int
out
lahf
sub
cli
mov
jb
imul
jae
inc
lea
sbb
adc
fbld
out
in
lret
cmp
mov
and
xchg
pusha
test
hlt
xchg
add
mov
dec
fbld
fsubp
mov
movsl
jecxz
shrl
cmp
pusha
lahf
scas
cmpsb
pop
add
fldenv
cmc
lods
add
pop
inc
mov
sub
push
fisubrs
std
push
push
xchg
popa
mov
add
testl
push
loope
mov
sub
or
stos
adc
jo
or
in
lods
push
jecxz
lcall
cmpsl
add
adc
sar
add
data16
hlt
jo
cmpsb
adc
popf
and
ficompl
xchg
adc
dec
sub
arpl
je
jb
sub
scas
movsl
mov
and
xor
cmp
xchg
cwtl
or
sahf
sti
adc
sbb
outsb
test
pop
stc
loope
ljmp
lcall
nop
roll
jge
aaa
cmp
pop
sub
daa
push
das
mov
push
push
cmp
inc
sbb
movb
cmp
repz
push
in
adc
adc
loope
lock
sub
and
xchg
push
adcb
push
mov
or
dec
aaa
arpl
subb
push
pusha
mov
incl
cmpb
aaa
das
into
inc
lcall
add
lock
jp
and
lret
sbb
and
mov
stc
cmp
fstp
sbb
inc
nop
int3
jo
clc
stos
and
ret
ja
mov
add
loop
ror
cli
popa
popa
pop
add
or
aaa
daa
add
sbb
mov
insl
jno
andl
jl
stc
out
cmp
adc
pop
fstps
cmp
stos
inc
or
aam
inc
dec
xor
fidivrs
push
cmp
push
mov
jecxz
ja
mov
popa
dec
and
cmp
mov
mov
lret
push
cmp
push
inc
repz
movl
sahf
enter
test
rol
mov
jl
fdivrp
jmp
add
gs
xor
mov
dec
jmp
cmp
xchg
xchg
or
cmc
ljmp
outsb
std
sarl
repnz
push
cmp
es
sar
notl
test
sub
xor
movsl
sub
popf
enter
scas
adc
jge
std
add
and
add
repz
or
jae
loope
stc
mov
idivb
adc
fnstsw
mov
popa
sbb
arpl
aad
mov
les
in
or
orb
push
stc
enter
cmp
in
pusha
in
out
jae
ret
dec
cli
inc
mov
xchg
insb
xchg
scas
push
adc
jae
cmp
addr16
cs
or
mov
shlb
add
mov
pop
mov
test
sbb
aam
out
outsb
into
test
sub
addr16
xchg
jge
adc
adc
cwtl
mov
inc
xor
xchg
mov
scas
js
mov
in
fbstp
jne
jne
cmp
mov
repz
leave
popf
mov
fimull
shrb
in
into
jnp
repnz
xor
xchg
push
adc
stos
sbb
mov
sbb
mov
movsb
mov
push
dec
push
or
stos
pop
and
stos
pop
pop
fwait
lcall
sbb
push
out
leave
mov
lahf
xchg
add
sysenter
in
jp
cmp
mov
fst
or
gs
and
adc
and
sub
scas
loopne
fcmovnbe
inc
pop
loope
push
movsb
int
fs
sub
jnp
xchg
add
imull
mov
inc
jb,pn
or
bound
ds
lea
sub
cmpsb
fmull
add
mov
xor
or
rcrl
push
lods
xlat
push
repz
inc
dec
add
in
cmc
or
push
pcmpeqd
dec
xor
das
mov
stc
xchg
push
stos
sti
xor
call
push
adcl
nop
mov
dec
insb
jae
adc
imul
mov
xor
mov
ret
pop
shl
push
in
mov
inc
jne
fisubl
lahf
and
negl
cli
lahf
jecxz
push
loop
imul
mov
out
jecxz
and
add
subl
icebp
out
mov
nop
out
out
pop
mov
addr16
mov
insb
inc
nop
xor
jl
pop
mov
fsubr
leave
mov
sub
mov
in
add
sbb
ret
pop
pop
mov
repnz
or
fldt
ja
pusha
mov
push
ret
out
cld
fisttpl
insb
xchg
jns
or
jae
jns
add
or
or
popf
mov
jne
std
ja,pn
lret
test
stos
mov
and
mov
or
sbb
insl
xrelease
cmp
dec
push
cmp
dec
ss
xor
mov
pop
addb
mov
mov
pop
rcrb
sub
shrl
dec
push
lods
xor
jl
insl
push
sub
mov
jo
inc
and
inc
sbb
pop
mov
add
cs
das
ds
mov
push
dec
pop
xchg
adc
bound
cli
fimull
jl
cmpl
cmc
in
scas
xchg
adc
outsb
adc
loopne
add
jg
sbb
sub
mov
cmp
pop
ljmp
call
mov
into
cltd
clc
cmp
xchg
mov
lahf
xor
jmp
pop
inc
xchg
and
fildll
rol
ret
ljmp
jg
cmp
mov
xchg
inc
cmp
leave
ficoml
mov
mov
push
js
push
and
scas
aaa
test
push
rcll
les
aam
cld
inc
sarl
jbe
inc
mov
and
jg
cmpl
addb
mov
repz
pop
push
movsb
dec
or
fnop
and
mov
push
dec
lahf
jl
cmp
add
dec
and
dec
jmp
cld
into
cmc
xchg
cmp
pushf
outsl
cld
and
or
sbb
arpl
je
jb,pt
test
ret
dec
lea
jb
or
sub
dec
lods
sub
out
mov
popf
jo
jmp
scas
scas
xlat
ljmp
jo
xchg
push
push
nop
icebp
xchg
mov
icebp
sbbb
lret
inc
rorl
ffreep
push
pop
jp
mov
out
push
jae
adc
cmp
bound
stos
xor
lret
jg
inc
cmp
mov
scas
into
dec
xor
imul
push
jno
jg
adc
pop
adc
fdivs
lods
and
es
mov
mull
push
cmpsl
lea
in
mov
imul
dec
push
loope
jae
jno
cld
xor
leave
in
push
sbb
jns
and
mov
mov
inc
sub
ja
test
pop
sti
in
test
scas
or
cmp
xor
xor
jae
test
hlt
test
daa
jp
out
lret
aaa
clc
scas
add
or
jbe
xor
ljmp
cmpsl
mov
mov
out
clc
and
ficoms
mov
sbb
cmp
or
jae
test
ss
xchg
sub
aad
xor
jmp
imul
test
or
push
sbb
je
xchg
imul
xor
xchg
std
mov
add
enter
fsubs
sub
je
adc
adc
xor
jnp
insl
test
xlat
xor
movsl
inc
or
testl
mov
push
cs
fbstp
fiadds
xchg
mov
out
aad
xor
repz
cmp
aas
shll
rcrl
push
xchg
pop
aam
mov
xor
xlat
aam
popa
jge
cli
and
ret
jecxz
aam
sbb
or
rol
inc
into
sti
or
jmp
sub
sbb
clc
sub
pop
push
lahf
xor
adc
test
loopne
sahf
ljmp
dec
pusha
shlb
and
int
test
or
adc
bound
mov
push
xor
cli
mov
movsb
es
mov
pusha
add
in
fidivrs
movsb
mov
mov
pop
jp
cmc
fwait
push
mov
xor
js
nop
lods
iret
shll
cmp
pusha
push
mov
pop
outsb
sub
test
je
cmp
int3
push
cmp
adc
ja
pop
in
std
pusha
lahf
sbb
aaa
aad
ret
lcall
pop
shl
mov
add
pop
add
notb
push
cli
push
add
jo
loope
in
sti
insl
dec
mov
push
inc
push
mov
sarb
push
cmpsl
lds
repz
mov
lock
orb
xchg
inc
es
mov
xor
popf
test
in
dec
jle
addr16
ljmp
repnz
shlb
fwait
rorl
repnz
movsb
fs
js
sub
test
outsb
adc
fadds
pop
pop
psrld
xchg
mov
mov
pop
stc
or
jle
lret
js
bound
xchg
or
jo
sub
cwtl
adc
pop
js
ret
ja
inc
fwait
ret
push
testl
fstpt
pop
outsb
mov
fwait
jge
out
adc
adc
inc
mov
pop
shrb
or
push
das
das
mov
cltd
mov
repnz
xchg
xchg
fbstp
mov
dec
lea
lea
pop
add
mov
ds
jge
pusha
adc
adc
push
dec
pop
fnstcw
pop
or
insb
sbb
test
fs
popl
pop
sbb
ja
mov
push
or
insb
inc
movsb
sbb
in
mov
or
sbb
push
push
dec
dec
push
push
mov
cwtl
dec
mov
repnz
sahf
cltd
mov
or
div
ja
stos
imul
cmp
loope
jnp
pop
jmp
xchg
pop
jp
loope
add
pop
lret
push
adc
gs
jecxz
xor
scas
mov
mov
mov
outsb
psubsb
lds
jl
test
pop
push
mov
xor
mov
or
imul
add
ja
jecxz
xchg
pop
push
cmp
dec
xchg
xchg
jg
dec
mov
lahf
mov
test
inc
jo
adc
in
mov
aaa
mov
and
dec
out
bound
cmp
xor
adc
dec
jg
xor
fisttps
jno
ljmp
jl
stos
sub
xchg
jmp
mov
add
pop
lods
inc
rorb
stos
dec
movsb
sahf
ljmp
or
dec
pop
movsl
outsb
enter
repz
outsb
push
sub
test
cs
xor
push
cmpsl
imul
aad
cmp
outsl
js
sub
or
push
add
mov
fisttpl
xchg
icebp
sub
pushl
pop
sub
dec
dec
pusha
xor
stos
pop
inc
jno
pop
adc
bound
scas
mul
dec
pushf
arpl
mov
mov
adcl
and
pop
jle
jae
sbb
out
aad
jo
fs
pop
js
repz
jmp
and
movsb
xchg
pop
hlt
lods
push
or
addr16
call
pop
movsl
adc
mov
jl
clc
data16
ljmp
int
adc
push
sub
ljmp
adc
ljmp
les
into
ret
pop
sub
xchg
das
scas
mov
jle
les
sub
out
mov
pop
pop
in
jmp
inc
in
jns
fs
add
inc
ret
jo
clc
jno
sub
int3
daa
scas
dec
scas
pop
fidivs
movb
and
test
icebp
jecxz
dec
jns
in
fldenv
or
sbb
mov
fmul
lahf
jbe
pop
inc
enter
jne
imul
pop
dec
jns
subl
add
jbe
xchg
insb
jb
pop
insb
jno
xor
daa
jbe
jo
xchg
xlat
lret
cmp
sbb
lods
jmp
or
xor
xchg
adc
mov
sbb
test
mov
mov
and
jge
mov
cmp
jne
ljmp
lahf
jo
scas
imul
sbb
div
orb
dec
int
add
shll
int3
aaa
or
xchg
out
inc
out
pop
xchg
in
imull
out
cmpb
test
mov
cwtl
in
test
dec
mov
mov
inc
xor
push
cmpsl
push
fnstenv
add
cmc
xor
mov
and
pop
lcall
into
inc
sub
cmpsl
repnz
stos
fldt
and
push
outsl
rolb
outsb
and
fadds
dec
arpl
cs
pop
mov
negb
sub
pop
fcom
xor
fisubrs
push
ret
mov
sbb
inc
push
adc
das
out
inc
xor
xchg
mov
jle
pop
xor
adc
pop
xchg
popf
mov
in
fisubl
rorb
xchg
movsb
push
lea
mov
sub
pop
add
add
int
lock
addb
adc
push
roll
xchg
jge
cwtl
mov
jp
mov
fstl
xorl
jmp
sub
inc
mov
out
cmc
inc
push
xchg
movsl
push
xlat
and
sbb
int
lret
ljmp
pop
cmp
cmp
inc
sti
add
push
loope
jmp
xor
push
jle
xchg
lods
xor
cmp
rorb
xor
sub
stc
out
out
jl
adcl
pop
repz
xor
add
or
push
add
inc
xchg
aaa
xchg
pop
sub
push
sbb
push
out
ja
loope
in
push
fstps
xor
lods
out
or
adc
rcr
pop
lock
outsb
dec
cmp
cmp
push
push
pop
pop
and
jno
jae
das
jmp
fistps
inc
pop
and
insl
paddsb
cs
out
fwait
lahf
jp
mov
mov
adc
adc
stos
jge
and
movsl
adc
mov
cmpsb
mov
xor
or
mov
ds
push
loop
or
push
push
sub
xchg
pusha
xor
xor
cmc
sti
adc
jecxz
clc
and
ffreep
cmp
shlb
call
fsubs
fists
shlb
nop
and
hlt
mov
cmpsb
shll
add
xchg
ret
mov
movsbl
pop
call
push
inc
push
lret
mov
repnz
sbb
mov
sahf
outsb
ljmp
hlt
cmp
pop
jge
aad
cmp
lret
nop
lods
xchg
arpl
dec
scas
aad
aad
jecxz
pop
rcr
addr16
fwait
mov
mov
push
dec
pusha
movsb
ljmp
int
leave
popf
dec
dec
lea
pop
fmul
cmpsb
cmpsb
mov
sub
ficoms
or
insb
push
xchg
and
jbe
insl
divb
pop
cmp
movsb
push
dec
leave
pop
cmp
aaa
daa
xchg
xor
mov
or
lock
mov
jmp
je
and
mov
mov
fdivs
jo
loope
xor
aaa
lcall
rclb
movsb
cmp
xor
lea
push
out
test
lret
mov
out
inc
rorb
iret
imul
or
int3
enter
ficomps
mov
cmp
sbb
sub
insl
pop
popf
mov
imul
xchg
mov
pop
jno
pop
outsl
fistl
or
adc
rolb
int3
mov
in
or
clc
or
jmp
push
push
sbb
sub
add
pop
jmp
lcall
adc
sub
or
test
jg
inc
pop
jmp
enter
sub
daa
push
sbb
incb
add
adc
lds
jnp
dec
or
lcall
jl
lret
stc
xlat
dec
xor
mov
int
lahf
mov
jnp
leave
dec
mov
lea
pop
outsb
lds
jns
into
imul
fldt
cld
dec
mov
lgs
pop
imul
loop
cmpsl
adc
xchg
xor
test
push
movsl
cmp
rol
pcmpeqb
or
testl
sbb
push
stos
xor
inc
xchg
cmp
sahf
movsl
jo
add
adc
in
daa
mov
add
mov
sub
cld
xchg
mov
push
ja
sbb
inc
dec
out
mov
xchg
jmp
orb
sbb
mov
jmp
cltd
jb
mov
jp
xchg
and
mov
jg
fs
mov
popf
xor
sahf
test
and
imul
dec
and
divb
push
push
lret
lret
push
je
aad
or
out
mov
lods
ret
dec
cli
xchg
cmp
or
pushf
xchg
jmp
xchg
rolb
dec
add
loope
mov
out
aam
and
sbb
ficomps
inc
out
push
icebp
jo
push
push
in
aad
push
nop
fcmovnbe
adc
subl
hlt
xchg
dec
xchg
out
sbb
inc
mov
mov
out
lea
addr16
sbb
pop
fsubrs
push
sti
je
xchg
push
dec
enter
push
jg
sub
loope
stos
ljmp
or
arpl
mov
sarl
jp
sbb
lcall
push
pop
mov
xor
xchg
mov
inc
outsb
jecxz
xchg
insb
push
movsb
inc
sbb
mov
pushf
inc
push
rclb
out
adc
or
dec
nop
xor
insl
cwtl
dec
rcrl
insl
add
mov
aad
xor
iret
pop
shlb
pushf
movsl
subb
and
mov
aaa
mov
xchg
mov
push
pop
inc
and
mov
stos
sbb
imul
add
pop
cli
add
mov
push
out
xor
dec
lea
dec
nop
hlt
sbb
jbe
sub
inc
mov
push
cwtl
xchg
repnz
ss
mov
rcr
test
std
mov
jge
push
arpl
adc
insb
test
or
out
or
sub
sub
addb
pop
push
outsl
pop
jg
push
add
mov
sti
lods
add
aas
sarl
push
jge
repnz
pop
sahf
icebp
int3
push
xchg
or
in
out
mov
daa
pop
mov
xlat
repnz
loop
push
aaa
pop
int3
xchg
out
sbb
fldt
mov
sahf
cmc
repnz
shlb
adcl
or
push
test
or
push
stos
mov
jp
cltd
xor
insb
cmp
lret
or
lds
mov
adc
ja
aam
push
hlt
and
sahf
in
pop
pop
jp
push
mov
cwtl
or
ljmp
dec
dec
ljmp
fsub
cmp
cmp
js
pop
leave
imul
adc
jne
les
jno
xchg
add
mov
mov
test
call
addr16
les
jbe
jo
sub
popf
test
push
mov
scas
shll
loop
dec
push
add
mov
mov
rol
cmc
int3
subb
fistps
mov
adc
rolb
sub
or
jmp
push
fwait
push
mov
imul
andl
pop
and
push
fisttpll
fldcw
lods
or
dec
outsb
add
xorl
lock
in
pop
dec
pop
nop
xchg
movsl
or
sahf
inc
bound
mov
orps
cmp
lahf
inc
mov
adc
cli
inc
cwtl
dec
faddl
jb,pn
orl
dec
rcl
les
or
push
mov
out
mov
jae
mov
in
cmp
pop
das
cmp
pop
insb
jno
add
dec
faddl
and
iret
jp
add
xorb
lcall
shll
daa
or
test
cld
pop
mov
jmp
shrl
and
ja
dec
mov
imul
mov
test
das
lock
cmp
mov
mov
popa
push
xchg
xchg
lret
or
in
pop
pushf
int3
mov
sti
adc
cmp
push
mov
inc
jne
ficoml
ss
mov
dec
test
insb
xchg
and
add
pop
xchg
imul
lock
jle
cltd
ret
lea
dec
fidivl
andb
sub
ds
lret
loop
in
test
jp
in
mov
push
push
push
cmp
int
cs
adc
data16
lock
adc
add
push
xor
loopne
addl
lods
pop
cmp
pop
fs
icebp
mov
sub
push
jo
cs
adc
mov
mov
push
lcall
ds
or
mov
or
cmc
mov
sarl
sbb
les
xor
or
pop
xchg
mov
out
pop
ss
jl
in
dec
int3
or
jecxz
dec
pop
out
hlt
mov
jg
adcb
pop
aaa
stc
stos
int
in
cmp
mov
je
lock
xor
sahf
sbb
jae
add
iret
movb
push
mov
addb
jg
rorb
jp
xor
xor
clc
fldcw
jp
jne
pop
ljmp
xor
lods
jns
pop
or
fsubs
sbb
andl
dec
or
shrb
push
int3
shll
adc
inc
daa
cmp
jo
mov
dec
sub
pop
xlat
adc
mov
push
jecxz
jbe
and
cmovle
gs
js
cmpsl
add
jmp
jnp
xrstors
inc
cmp
cmc
int
popf
mov
push
inc
outsb
jmp
dec
xchg
daa
mov
mov
das
sbb
adc
xor
pop
jge
scas
mov
pop
xor
add
int
and
sahf
sbb
aam
mov
imul
and
xor
inc
pop
pop
idivb
cmpb
lret
insl
decl
repnz
push
xor
push
test
pop
test
mov
addb
sub
add
adc
cmpsl
push
shr
daa
xchg
repnz
rcll
lds
fisttpll
mov
lret
cmpsl
add
add
xor
movsl
mov
aaa
imul
fistpll
loopne
inc
pop
iret
icebp
aas
push
add
jns
ljmp
sbb
mov
mov
jg
add
stos
lret
adc
inc
mov
jbe
or
imul
out
hlt
push
scas
scas
inc
mov
sbb
mov
inc
cmp
les
mov
movsl
jb
lcall
pop
adc
dec
mov
dec
jno
jge
mov
and
pop
stos
scas
scas
out
mov
sbb
in
cli
out
out
pop
cmp
cmp
mov
insb
push
les
pop
les
dec
mov
push
adc
jmp
cmc
stc
rolb
mov
sbb
sub
lock
lahf
lret
hlt
shl
cli
movsb
outsb
push
out
in
cld
adc
jp
sub
jnp
sahf
xor
es
ds
xchg
xor
test
mov
or
sbb
ret
aam
movsb
push
lahf
add
cmp
xor
test
cmpsl
or
xchg
iret
loopne
dec
mov
xlat
loop
dec
out
nop
mov
adc
aam
jmp
mov
imul
jns
inc
xor
inc
gs
andl
hlt
les
jnp
enter
subl
mov
xor
and
xchg
or
fmul
aas
push
aaa
pop
cmp
fcompl
and
sar
pop
test
mov
sbb
or
fdivr
into
adc
cltd
mov
shll
cmp
add
push
sbb
in
fisttpl
sub
pop
jle
adc
out
jl
push
shlb
ret
aad
rorb
repz
inc
imul
dec
pop
jbe
adc
or
ror
pop
xchg
movzbl
xchg
adc
sub
mov
cltd
test
aas
jbe
clc
jnp
in
mov
xlat
jecxz
push
lahf
cmpl
mov
dec
cmpsl
push
fisttpl
cmpl
mov
inc
clc
jns
dec
xlat
push
mov
outsb
clc
ljmp
adc
mov
inc
jge
xchg
mov
pushf
xchg
jne,pt
in
fadd
and
hlt
dec
shl
cmp
mov
daa
mov
xor
js
mov
gs
mov
jo
movsb
in
add
push
pop
sub
and
and
xchg
mov
popa
sbb
insb
sbb
adc
and
jbe
mov
hlt
mov
or
popa
jno
stos
fisubrl
fwait
add
test
xchg
mov
call
dec
mov
jne
insl
inc
cmp
and
stos
sub
stc
inc
push
rcl
push
or
test
repz
fucomi
push
dec
rcll
adc
inc
cltd
jnp
cmp
xchg
pop
adc
stos
das
outsb
and
les
push
xchg
push
je
adc
rol
jo
dec
mov
mov
lock
pop
mull
mov
ret
push
push
dec
push
pushf
pop
mov
inc
lods
ss
daa
mov
xchg
or
test
sbb
nop
mov
push
clc
cmp
xor
shlb
aam
jge
dec
xlat
xchg
xchg
mov
notb
xor
xorl
xor
repnz
pop
sbb
xor
dec
mov
aad
aas
in
into
sub
out
stc
in
pop
mov
jg
outsl
or
push
pop
or
and
push
fbld
or
loope
mov
xor
pushf
lea
or
call
jge
xor
cld
inc
or
xlat
push
ret
data16
mov
or
push
push
rol
push
rcrb
cmp
jecxz
mov
outsb
adc
adc
out
pop
add
push
mov
fs
inc
adc
mov
stc
cmpsl
shlb
jno
cmp
push
seto
fimull
cmp
jle
cs
mov
mov
loop
fldt
or
jne
mov
lea
and
movsb
inc
fimuls
in
mov
pushf
mov
jo
xlat
inc
ret
xor
sub
push
sub
sub
cmp
ja
or
scas
sbb
daa
xor
int
sahf
dec
jbe
pop
xchg
inc
out
nop
push
mov
psubsb
pop
aas
gs
cli
std
push
fcoms
call
mov
and
jb
es
repz
fadd
cs
or
push
jmp
inc
sar
fisttps
addr16
jecxz
push
xor
pop
subb
push
sub
push
cltd
shrl
push
add
mov
loopne
mov
jp
cmpb
cmp
inc
sbb
fldenv
dec
jge
testb
jb
push
mov
dec
inc
sub
jmp
and
cltd
outsb
fistpl
dec
cmp
movsb
cs
fucomi
dec
movw
inc
aad
inc
xor
mov
repz
adc
lods
movsl
lock
and
pop
mov
js
hlt
sti
push
sub
out
mov
xchg
enter
js
in
lods
pop
rcrb
add
inc
aaa
shll
insb
mov
mov
mov
pop
cld
aas
fucomip
lret
push
cli
ljmp
int3
mov
lahf
mov
lods
das
pop
sti
inc
sbb
addl
js
lds
push
xor
and
mov
inc
faddl
push
sbb
adc
loope
xor
xchg
std
mov
dec
iret
jo
in
pop
hlt
aam
sub
lcall
imul
aam
nop
subb
leave
xor
loop
arpl
loop
mov
push
and
lock
sub
and
lods
jecxz
scas
ret
xchg
pop
test
lahf
mov
pushf
mov
or
in
sbb
jge
inc
xchg
cmpb
mov
test
aaa
sbb
cmpsb
adc
dec
add
xchg
int
rcrl
rcrl
stc
xchg
adc
sbb
jno
and
lea
test
rclb
test
add
mov
loop
xor
xchg
add
jp
imul
dec
cmc
jmp
sbb
hlt
ja
rcrb
xchg
ret
out
push
adc
sbb
repnz
lods
jge
ret
stos
or
cmpsb
mov
push
sti
lcall
shr
jae
cmp
dec
jecxz
in
ret
jecxz
cmp
lods
push
sub
jmp
push
mov
lret
jmp
nop
or
xor
sub
outsb
sub
jns
push
dec
cld
mov
xchg
jge
lcall
sub
push
leave
adcb
clc
mov
jnp
add
sbb
int3
sbb
inc
xchg
jbe
addb
mov
or
sbb
sarb
jae
pop
inc
cmp
sahf
popa
out
mov
and
daa
cmpsb
push
mov
jmp
in
popf
or
push
paddb
out
nop
aam
push
pusha
and
xlat
cmpsb
hlt
shl
dec
or
sbb
add
stos
dec
std
xchg
and
mov
loope
lret
mov
insb
xlat
xor
and
out
xorl
xor
xor
ljmp
adcl
test
cltd
mov
je
sbb
inc
les
pushf
mov
sub
in
cmp
pop
stos
add
pop
cmp
je
fdivrs
push
fwait
mov
mov
stc
jecxz
imul
lods
rorb
inc
xchg
push
cmpb
test
push
les
mov
pop
adc
ficompl
adc
mov
fwait
or
add
ret
cwtl
jnp
ficomps
adc
adc
lahf
dec
lret
mov
adc
jmp
into
lahf
jbe
mov
sbb
inc
dec
aas
pop
pop
jecxz,pt
mov
cld
mov
sarb
nop
insl
jg
dec
push
xor
cmp
imul
xor
jmp
inc
leave
dec
aas
lea
mov
into
test
xchg
xchg
loopne
loop
in
repnz
push
push
add
fwait
pop
outsl
scas
push
sbbl
and
mov
sbb
cmpl
std
addl
pop
mov
scas
jns
mov
aam
or
jnp
inc
ja
fwait
jg
push
cmp
sbb
xchg
fisubrl
cmpsl
and
add
cmp
loopne
imul
mov
inc
dec
arpl
rcrl
add
lock
lock
loop
ljmp
push
rol
xor
rol
addr16
push
inc
in
or
mov
dec
addl
add
sbb
cmpsb
loope
test
xor
push
or
in
push
mov
loope
jle
jnp
and
jp
mov
xchg
jbe
cwtl
xor
cmp
mov
jne
lret
jo
test
mov
cld
scas
shlb
lret
fists
aam
aas
scas
jne
dec
xlat
cmpsb
daa
dec
cmp
sbb
cs
and
cmp
in
push
sbb
imul
js
outsl
mov
pop
push
int3
sar
jg
js
and
adc
mov
adc
iret
mov
mov
movsl
jecxz
pop
cmc
pop
pushf
fucomip
pop
or
xor
hlt
adc
mov
push
cmovg
mov
cli
xchg
and
std
mov
sub
inc
pop
xor
out
push
jmp
mov
pushf
nop
popa
cmp
loopne
aam
js
outsb
aas
pop
jmp
inc
pushf
and
mov
jne
mov
pop
mov
mov
mov
fldenv
call
orl
es
sbb
xor
adc
xor
cmpsb
dec
mov
xchg
dec
jmp
xlat
dec
fidivs
pminsw
mov
jne
sbb
jecxz
mov
cmpl
pop
out
enter
cmp
repz
sbb
mov
cmpsl
cmc
push
mov
jge
cmp
jno
lcall
and
lods
aaa
pushl
pop
fdivl
jnp
inc
push
and
sbb
addr16
in
jae
lea
ret
jg
jp
xor
sbb
lret
sahf
test
iret
push
push
test
mov
insl
cmpl
mov
data16
sar
adc
dec
shl
stos
mov
mov
cmc
outsl
repnz
sbb
shll
aas
dec
inc
or
pop
jnp
mov
jne
add
ljmp
stos
lahf
jecxz
sbb
je
mov
sbb
imul
pop
pop
cli
scas
push
test
ud2
test
aam
das
inc
mov
sbb
les
mov
ja
incl
mov
dec
xor
andl
sbbl
call
and
insl
dec
mov
lcall
out
sti
out
mov
testb
jne
or
scas
ficoms
loopne
dec
outsl
mov
outsl
or
cmp
ret
jmp
and
nop
sub
xchg
xor
pusha
mov
cld
pop
imull
fadds
les
pushf
into
mov
xchg
fcompl
and
push
adcb
std
push
out
test
and
push
dec
fwait
sahf
rclb
and
push
or
sar
enter
mov
sbb
cmpsb
sbb
ljmp
sbb
test
push
push
and
add
cwtl
xor
xor
test
fdivl
test
pop
lret
stos
mov
out
test
lret
insb
mov
push
out
push
xchg
mov
xchg
push
add
mov
mov
mov
insl
ret
dec
sbb
loopne
insl
xchg
jno
jp
push
pop
xor
aam
subb
push
and
ror
imulb
push
out
and
inc
dec
rcl
and
std
adc
clc
out
pop
outsb
mov
cmpsb
fiadds
in
pop
dec
push
gs
mov
jno
mov
and
or
test
jl
inc
add
ja
hlt
mov
pop
xlat
outsb
jns
mov
cli
lods
or
and
mov
inc
cmpsl
daa
add
push
dec
sarl
push
fwait
dec
shll
push
pop
sub
dec
lds
xor
adc
mov
call
icebp
mov
out
dec
inc
leave
cld
fnstsw
sbb
inc
inc
inc
xchg
minss
pop
mov
pop
xchg
fisubl
enter
ds
pop
cmpb
sbb
adcl
add
rcrl
jne
sahf
xchg
stos
mov
lods
fwait
push
cmc
push
dec
sbb
pop
mov
enter
xchg
es
push
and
jmp
in
aam
dec
mov
sbb
in
mov
loop
xchg
ss
call
gs
mov
into
shll
pop
int
add
push
fsubl
mov
pop
sub
jno
xchg
push
mov
mov
hlt
loope
stc
fistpll
or
ret
pushf
test
lea
jb
fcompl
mov
add
ds
mov
mov
xchg
sbbb
push
int3
sti
mov
jns
fwait
cwtl
xor
inc
push
mov
or
ret
fidivrs
fsubl
xlat
repnz
xchg
scas
mov
add
inc
addl
jae
lods
daa
mov
lds
push
cmc
stos
mov
inc
sbb
scas
test
negl
insb
aaa
fs
jmp
pop
gs
ret
dec
sub
orl
push
sbb
call
or
imul
jnp
mov
int
clc
add
arpl
int
mov
arpl
sub
test
push
inc
sub
and
ds
jno
ja
mov
cwtl
add
pushf
add
xlat
sahf
inc
sahf
setl
lret
adc
aaa
ja
jmp
test
ss
in
ljmp
js
sbb
lcall
sub
dec
outsb
mov
push
push
mov
lds
or
mov
pop
icebp
leave
push
adc
sub
push
or
jg
cmp
jge
mov
out
lock
pop
addr16
inc
jno
pop
pop
sti
inc
hlt
add
mov
cmp
jnp
cmp
enter
sarl
sbb
push
outsb
push
sub
dec
inc
mov
dec
mov
rcll
or
popf
xchg
xchg
xchg
arpl
dec
into
outsl
pop
call
loopne
xchg
outsl
outsb
mov
pop
inc
insb
mov
fdivp
ret
test
mov
mov
aaa
ljmp
mov
xchg
sbb
pop
data16
xchg
sbb
inc
scas
in
ret
popf
lcall
std
cmc
loopne
cmpsb
push
mov
lret
push
or
loop
push
out
jp
scas
movsl
xchg
xor
ds
xchg
leave
lods
push
pop
jo
pushl
lock
xlat
xor
ret
sub
adc
xchg
test
das
fs
subl
xchg
jle
movsl
cld
clc
xchg
pop
mov
out
imul
xor
daa
outsl
adc
xor
insb
sub
pop
dec
data16
pop
ljmp
aas
jae
mov
mov
loope
sub
daa
push
scas
outsl
int3
in
push
pop
dec
loopne
loop
dec
or
les
dec
cli
cltd
shrb
mov
lahf
pushf
xor
sbbb
sbb
les
mov
push
jl
cld
fisubl
lock
lods
loope
scas
fadds
idivl
out
sub
leave
jns
test
in
aaa
aaa
nop
out
fldl
add
mov
outsl
sub
stc
pop
into
sbb
pop
inc
nop
in
or
push
imul
les
sub
imulb
jb
jecxz
cmp
aas
repnz
push
js
orb
inc
jo
add
je
adc
pop
push
or
mov
inc
fs
scas
cltd
sarl
inc
ljmp
xchg
bound
in
and
ror
sub
lods
cmc
sbb
pushf
pop
ret
fs
and
add
jg
insb
mov
jno
jae
movsl
cs
jmp
bound
xor
sbb
pop
inc
jbe
repnz
xor
or
sub
fidivrs
aam
mov
pop
xchg
pop
xlat
mov
addb
fldt
mov
mov
add
add
mov
imulb
insl
cmp
into
inc
pop
loop
insl
pop
and
jp
mov
fwait
sub
cmc
jge
adc
push
xchg
sti
mov
sbbb
aaa
mov
inc
sub
repz
loopne
xor
aaa
and
add
pusha
sub
daa
clc
mov
push
test
pop
lcall
fsubrs
outsb
lret
mov
or
cmpsb
cmp
inc
js
push
stc
sub
dec
push
ret
nop
nop
cmp
inc
pushf
dec
daa
adc
test
push
rolb
out
add
pushf
insb
pop
push
or
movl
sbb
shr
push
pop
outsl
pop
addb
adc
or
lods
lahf
push
rorb
mov
stos
lea
or
repz
push
xchg
jge
stc
addr16
shrl
loopne
and
push
mov
pop
pop
test
sbb
inc
cwtl
and
cld
imul
jns
fcoms
xchg
mov
sbb
shlb
pop
mov
shlb
cmp
aam
adc
dec
loope
jmp
out
shrl
fisttpl
inc
sub
out
cmpb
in
xchg
push
xor
aad
mov
mov
sti
in
cmpsb
push
sbb
mov
or
out
xchg
dec
mov
or
scas
mov
xchg
lea
outsl
in
sbb
nop
jbe
lock
xlat
bound
addr16
inc
nop
pop
sub
fiaddl
jne
dec
xor
int
fdivl
cmp
inc
mov
clc
and
xor
xchg
inc
sahf
fldl2e
popa
in
jo
aaa
stos
nopl
adc
jmp
inc
push
ljmp
neg
mov
push
lods
flds
loop
push
mov
sti
or
cmp
push
mov
ret
je
push
jne
add
dec
mov
or
push
pop
sub
and
mov
pop
imul
lods
sbb
sub
mov
data16
mov
imul
mov
icebp
xor
jae
sub
pusha
aam
cmp
push
scas
rcl
mov
add
jb
popl
sbb
es
in
lods
sbb
dec
or
mov
pop
stc
popf
test
out
mov
and
jle
loop
mov
xor
xor
jae
sub
jp
ret
stc
movsb
push
cmpsl
sub
xor
pop
cmp
mov
subl
orb
sub
imul
fists
mov
cmpsb
xchg
mov
enter
or
xchg
insl
mov
fidivrl
cmpsl
lret
jne
sbb
add
fistpl
fdivl
into
mov
daa
cmp
cltd
adc
sbb
push
mov
int3
adc
in
xchg
les
pop
mov
xchg
cmp
and
xchg
sbb
mov
call
xchg
cmp
push
imul
jmp
or
sbb
loop
out
icebp
jg
lds
inc
xchg
or
in
push
in
adc
and
pop
outsb
mov
jmp
pushf
aam
or
dec
fcmovnu
dec
lock
scas
loopne
int3
frstor
sbb
dec
inc
sub
test
pop
out
jg
enter
movsb
xlat
sahf
pusha
cmp
or
into
xor
test
push
testb
ljmp
es
cmp
adc
data16
xchg
aam
add
movsb
sbb
jnp
aam
jge
pop
mov
adc
jae
push
fsubr
push
dec
cld
dec
and
lock
imul
shlb
jb
xchg
sbbb
cmpsb
ljmp
aam
xchg
inc
xchg
dec
add
es
mov
sub
pop
pushf
fs
repnz
inc
icebp
xor
mov
out
imul
dec
shlb
jne
jno
add
sbb
sub
fsubrs
dec
push
or
inc
jo
popf
mov
mov
xchg
xchg
pop
pop
cmp
sub
add
ds
xchg
lret
in
int
sbb
mov
ret
iret
cwtl
lods
das
or
xor
push
mov
popa
faddl
pop
inc
enter
js
push
cmp
jmp
adc
in
hlt
stc
dec
push
mov
popf
mov
ret
cmp
dec
cmpsb
dec
push
dec
das
call
lret
add
enter
sub
outsl
mov
mov
stos
push
sub
sbb
out
popa
mov
ret
cmp
mov
mov
or
mov
rol
cli
xor
add
cmp
mov
lock
clc
xor
mov
out
loope
inc
sbb
loope
dec
in
mov
push
nop
stc
pop
xchg
adc
push
ds
mov
push
dec
inc
popf
mov
xchg
out
pusha
lods
inc
xchg
mov
pushf
adc
push
fs
loop
cmc
push
nop
pop
xchg
je
js
push
mov
bound
sub
fstl
dec
cwtl
insb
or
push
mov
movsb
cmp
mov
inc
mov
shrl
loope
mov
pushf
mov
loopne
jbe
cs
ss
cld
and
sub
adc
jg
in
lahf
insl
push
xor
inc
fwait
ja
sub
push
fistpll
xor
xor
dec
gs
loopne
aas
dec
mov
push
adcl
inc
xor
dec
jecxz
in
mov
inc
push
mov
addb
cmpsl
ret
lods
test
jle
fsubrs
sbb
xor
vmovss
cmpsl
push
sbb
mov
mov
lcall
xor
dec
add
scas
loope
sub
dec
push
mov
insl
mov
dec
les
push
add
stos
rcrl
push
out
pop
push
pop
push
loope
push
lods
filds
push
cmp
xor
cmpsl
popa
push
pop
pop
jl
repnz
dec
hlt
das
fmull
test
adc
dec
aas
test
inc
adc
and
cmp
cmp
mov
xor
stos
mov
nop
in
push
pop
pop
cmc
test
dec
mov
aad
push
jb
repz
cmpsl
add
loope
mov
mov
mov
inc
lods
mov
or
loope
sub
scas
xor
adc
xchg
clc
cmpsl
cmp
sub
outsl
pop
sub
sub
or
mov
popl
pop
stc
repz
mov
insl
js
into
push
cmp
push
xchg
dec
xchg
jmp
sub
out
jo
test
pop
orb
mov
sbb
testb
into
add
fstp
inc
mov
int
cmp
imul
ja
xchg
fsts
out
inc
sub
scas
ds
cs
lahf
test
stc
sbb
push
and
arpl
int
insl
or
shl
mov
outsb
add
das
adc
cmp
cltd
std
cmp
pop
jp
xchg
bound
xor
sub
dec
imul
xor
mov
inc
push
add
in
loop
lcall
push
xor
xor
cld
loop
stos
ja
inc
jmp
clc
je
enter
sbb
add
push
addr16
je
into
lret
cmp
cltd
jno
xchg
repnz
push
divw
xor
and
imul
fstps
cmp
repnz
jmp
jl
icebp
mov
inc
xor
rcrb
ljmp
inc
cmpsb
mov
je
lahf
fildll
dec
lods
inc
sbb
hlt
loope
shl
in
or
mov
repnz
out
aam
sar
sbb
shlb
xor
adc
test
mov
mov
mov
js
sub
arpl
imul
aam
fsubl
int
aaa
addr16
xchg
pop
jl
inc
sbb
sub
pop
addr16
jo
insl
cli
or
push
xor
fstpt
sbb
add
jo
jp
in
mov
es
push
sti
add
cmp
inc
add
xchg
inc
cmc
jmp
data16
or
gs
pop
pop
xor
lcall
in
dec
or
adc
icebp
outsb
mov
mov
pusha
ficomps
sub
mov
cmp
xor
dec
sub
push
cwtl
into
ror
fwait
mov
test
inc
sbb
lods
or
xor
jp
sub
xlat
icebp
push
dec
dec
jb
sub
xchg
call
sub
inc
out
pushf
sbb
repnz
out
xchg
repz
movsl
xchg
nop
cmp
sbb
xor
jo
clc
xchg
ljmp
xor
fdivl
hlt
roll
mov
cmp
mov
stos
ja
scas
add
insl
movsb
mov
push
cmp
cld
jbe
or
movsb
movsb
cli
push
inc
ljmp
xor
aaa
imul
cmp
in
fwait
addr16
xchg
icebp
loope
mov
loopne
and
jbe
hlt
add
scas
dec
ret
repz
xlat
dec
lods
and
xor
les
sub
cmp
movsl
lcall
pop
sub
jl
inc
cmp
mov
movsl
loop
jmp
jno
mov
xor
fsubrl
loope
xlat
and
mov
sbb
inc
aaa
stos
sub
xor
shlb
sbb
push
add
inc
decb
xor
pop
ljmp
cmpsb
jno
call
shr
jl
jmp
push
xchg
clc
and
inc
xchg
loop
imul
icebp
add
mov
mov
sub
inc
mov
sub
sub
xchg
out
movsl
das
mov
xchg
mov
int3
std
jae
lods
and
sbb
xor
xchg
push
ds
push
iret
fsub
iret
lcall
dec
xchg
mov
lods
in
jnp
xor
cmc
imul
mov
mov
mov
pop
mov
xor
insb
cmpsl
test
cmp
scas
pop
ja
lods
mov
jae
jg
mov
fnstcw
jg
xor
push
ret
addl
adc
pop
jl
adc
xchg
dec
or
lcall
inc
inc
enter
loope
adc
and
or
icebp
or
fwait
sbb
adc
sbb
inc
sbb
push
inc
jb
jbe
mov
aad
ljmp
iret
aam
jecxz
nop
jae
into
jno
je
push
insl
loope
sbb
sub
mov
mov
xor
lea
add
and
lock
sub
xor
testl
and
jg
adc
cwtl
and
popf
push
repnz
roll
jmp
dec
out
aam
icebp
mov
pushf
push
and
inc
dec
mov
incb
fstpl
mov
sub
lret
adc
or
cmpsb
or
pop
test
lcall
cs
xchg
call
sahf
repz
mov
xor
icebp
add
cmp
xchg
scas
jmp
mov
inc
inc
add
push
sarb
cs
das
rorb
test
cmpsb
repz
and
gs
mov
cltd
adc
push
int3
or
mov
sbb
mov
fbld
sbb
lods
push
and
and
rcll
cmp
or
mulb
lods
inc
push
arpl
xchg
xor
lcall
and
sub
cwtl
out
sbb
or
popf
data16
imul
mov
fdivp
jns,pn
lret
cmp
mov
fimull
adc
xor
adc
mov
scas
or
pop
scas
pop
sti
je
or
adc
xor
sbb
mov
jb
in
pop
cmp
lods
adc
sub
xchg
sbb
sbb
fisttpll
dec
aad
sti
xor
jns
popf
xchg
dec
or
jmp
mov
mov
sbb
adc
mov
and
es
mov
pop
insl
inc
mov
rcl
xor
sub
insb
aas
adc
enter
sub
add
mov
jecxz
inc
xchg
jae
sub
adc
movsb
xchg
pop
arpl
push
loop
inc
cmpsl
not
mov
sbb
sbb
jecxz
pusha
xchg
cs
mov
sti
rcrb
rcrl
push
mov
add
cmpsl
push
inc
pop
movsb
ds
or
data16
ds
push
fsubl
addr16
add
cld
and
pop
insb
shll
add
dec
lock
cmpsl
shll
aam
dec
lcall
push
push
dec
stos
xchg
jae
sti
loope
push
adcl
inc
outsb
adc
mov
mov
test
push
jl
bound
pop
mov
mov
clc
sub
jnp
jae
cmp
dec
or
movsb
outsb
sbb
insl
pop
adc
push
out
xchg
call
add
test
mov
and
lahf
pop
int
adc
cmc
adc
mov
iret
xor
stos
inc
adc
or
push
cmp
adc
lock
rorb
test
std
or
ret
inc
sbb
adc
enter
jle
sbb
inc
add
shll
je
xchg
aaa
rdpmc
insl
filds
repz
cmp
jmp
pop
push
jbe
mov
stc
aam
test
push
mov
negl
nop
pop
std
pop
or
insl
mov
test
pop
fwait
add
faddl
and
scas
mov
outsb
negb
dec
cltd
sub
sbb
int3
pop
inc
xchg
push
jmp
dec
mov
cmp
cwtl
jb
jg
lcall
push
sbb
dec
jno
or
jmp
push
add
and
dec
test
mov
mov
jnp
push
xor
or
loop
jne
lock
adc
popf
mov
cmp
decb
push
imul
or
cs
aam
dec
xlat
pop
and
push
xor
ficomps
jae
xchg
pop
cmc
insb
dec
mov
stos
pusha
flds
jae
fs
incb
jl
gs
clc
testb
push
xchg
cld
cltd
xor
mov
clc
sub
adc
int
xor
and
jle
sub
not
imulb
push
pop
xchg
sti
xor
pop
insl
pop
or
test
ja
push
scas
push
sub
jg
dec
mov
mov
mov
arpl
sub
lock
movsl
cmp
in
dec
xor
pop
adc
aaa
xor
aaa
push
cmp
xor
jl
pop
pushf
inc
lret
pusha
xor
pop
ja
inc
dec
hlt
popf
in
repz
fs
fucom
push
fcomip
add
mov
cli
sbb
das
je
sbb
sub
cmpsl
vxorps
pop
loopne
mov
fs
ret
cmpsl
sbb
stos
adc
movsb
or
mov
xchg
stc
cmp
lret
cmp
addr16
mov
inc
sbb
or
and
dec
jnp
in
jae
pushf
cs
loopne
sub
cmp
inc
sarl
inc
inc
ljmp
cmpsl
jnp
adc
xchg
pop
pop
xlat
push
int3
icebp
mov
aad
cwtl
shll
ja
cmp
mov
loop
in
ljmp
inc
sub
mov
cmp
pop
aas
stc
add
mul
hlt
out
jo
xchg
mov
and
loop
mov
lret
xchg
ja
fdivs
sub
loope
shll
int3
jno
clc
or
icebp
andl
shl
mov
fsubp
jb
call
sbb
inc
adc
aaa
lds
sub
add
repz
and
test
sti
out
cmc
pop
jbe
push
cwtl
mov
pop
lret
lret
test
lret
sahf
xor
pop
jnp
out
pop
movsb
mov
sbb
mov
add
mov
pop
vsqrtsd
inc
in
mov
jg
push
push
adc
jnp
mov
mov
mov
xor
cmp
or
cmp
mov
les
add
xchg
lods
add
xchg
js
push
push
or
sub
pop
icebp
daa
cmpsb
arpl
mov
lret
cmp
mov
leave
sub
cltd
xor
and
clc
add
mov
pusha
in
in
dec
inc
fiaddl
call
cmp
or
mov
in
mov
mov
pop
cs
jbe
xchg
ja
loope
mov
pop
jae
mov
lcall
mov
test
pcmpeqd
push
xchg
sbb
mov
loopne
mov
pop
add
stos
ljmp
mov
jb
xchg
ficoml
call
pop
sbbl
add
sbb
lahf
mov
xchg
add
push
pop
leave
push
les
mov
aad
dec
cmp
cli
inc
mov
jg
loope
imulb
mov
xchg
mov
jp
and
lods
xchg
nop
iret
lcall
push
jns
mov
hlt
add
mov
jns
xchg
mov
ret
dec
daa
push
pusha
sbb
mov
aam
inc
sub
iret
sbb
pop
repz
jle
inc
lahf
fs
add
into
jecxz
dec
data16
ret
sub
ret
addl
gs
jp
add
mov
cwtl
movsb
sbb
loop
push
loope
call
and
aad
pop
lcall
pop
imul
fimull
out
imul
out
frstor
imul
push
mov
scas
neg
cmp
cwtl
scas
add
test
cmpsb
mov
shr
cltd
cmp
xchg
pop
mov
jg
xchg
daa
jp
jne
sbbb
push
sub
mov
hlt
loope
jns
popa
sub
adc
jg
scas
or
das
bound
push
shl
lods
ss
stc
rorl
mov
les
add
test
pusha
shrl
sbb
dec
add
xchg
outsb
cwtl
push
cld
pop
and
popf
mov
jg
xor
arpl
inc
stos
or
xor
negl
jo
scas
enter
rcrb
cltd
and
repz
into
pop
dec
enter
cmc
rcrb
test
inc
jbe
cmc
fldenv
cmp
cmc
jg
mov
insb
cmp
mov
jnp
insl
push
jne
lret
int
push
in
and
popa
xchg
call
push
fwait
push
jnp
and
push
pop
dec
popf
jne
cmpl
xor
dec
mov
repnz
cli
fdivrs
xor
xor
leave
mov
scas
adc
test
mov
jns
jecxz
push
sub
into
xchg
lahf
xchg
cmp
lods
test
lret
popf
out
lods
cmp
arpl
addb
lcall
dec
fcompl
clc
dec
ljmp
out
cmp
xchg
adc
popf
popf
idivb
cmc
shl
inc
pop
adc
iret
movl
pop
pusha
scas
cltd
mov
adc
dec
in
leave
mov
lea
lea
push
xor
sub
mov
xchg
lea
pop
jg
stc
mov
divb
cmpsb
dec
fwait
lds
xor
pop
mov
mov
adc
jl
lret
mov
xchg
mov
in
js
xchg
push
pop
repnz
mov
or
divb
fadds
mov
jae
push
mov
sub
xor
add
cmp
inc
xchg
addr16
mov
push
mov
fwait
sub
mov
data16
mov
mov
stos
lock
mov
aam
push
mov
lods
sbb
mov
sbb
movsl
fisubs
outsl
in
sbb
nop
adc
mulb
add
sub
fisubs
fwait
dec
mov
dec
lahf
jns
repz
popa
adc
inc
paddd
out
pop
in
lret
dec
movsl
mov
mov
mov
jle
inc
lods
daa
rolb
push
ljmp
jmp
mov
jl
js
fisubrs
icebp
xor
cmpsl
repz
inc
xor
push
std
push
push
dec
aaa
dec
iret
int3
and
lods
sub
sub
xchg
cli
dec
fimull
out
adc
mov
push
lock
out
pusha
fsts
sbb
adc
clc
push
dec
or
int3
pop
fsubl
out
int3
jae
pusha
xchg
jno
lret
pop
fiadds
cwtl
clc
and
jle
test
add
sub
xchg
or
mov
mov
scas
cmp
xor
jmp
scas
shll
mov
sbb
sub
sub
data16
gs
imul
mov
bound
dec
adc
mov
sub
cmp
sub
test
adc
mov
push
jo
sbb
pop
inc
aad
insb
test
add
aaa
sub
mov
out
call
cmp
lods
imul
bound
mov
lea
push
xchg
mov
sbbb
addr16
imul
mov
clc
lahf
xor
adc
int
add
sub
adc
in
mov
xchg
push
push
xor
mov
or
repnz
mov
mov
jg
adc
sbb
in
decb
scas
inc
out
push
outsl
mov
inc
addl
mov
adc
shr
pop
and
bound
inc
jge
into
clc
sub
jp
jno
in
nop
sbb
nop
hlt
scas
and
mov
jmp
in
push
mov
lret
push
pop
fstps
sbb
sysret
mov
sub
pop
rorl
cmp
or
std
sub
mov
sbb
lea
fdecstp
daa
xor
or
emms
pushf
jle
jo
call
mov
xchg
cmp
lock
stos
int
ret
jp
mov
add
adc
jp
aad
daa
xor
dec
pop
pop
pop
fucomip
nop
jo
pop
jg
cltd
fsubr
mov
and
xor
jne
bnd
add
mov
push
push
mov
in
cmpsl
mov
outsb
jle
or
js
push
and
flds
lods
popl
fmuls
sbb
jp
mov
aas
lret
sub
jecxz
mov
cwtl
ret
cmp
mov
gs
std
imul
push
jl
mov
mov
ljmp
ljmp
sub
mov
addb
mov
jmp
shl
xor
cmp
mov
aad
lock
xchg
pop
mov
mov
nop
mov
xchg
pop
shrl
fistpl
pop
fwait
es
mov
jmp
xor
jb
rclb
arpl
add
das
hlt
push
xchg
jp
xchg
and
jmp
adc
rcll
cmp
adc
xorb
add
xchg
sbb
mov
xor
mov
jne
pushf
mov
lret
dec
sbb
adc
arpl
rcr
repnz
cmpsl
sbb
cli
jno
fdiv
xchg
jge
in
adc
adc
stos
movsl
or
push
popw
jnp
sbb
and
add
dec
dec
stos
inc
nop
int3
mov
or
lret
fimull
es
imul
ret
xlat
push
icebp
xor
sbb
push
cltd
call
imul
pop
es
mov
lea
cmp
pop
aam
add
in
xchg
movsl
mov
orb
in
es
sbb
cmp
rcll
arpl
push
or
popf
nop
lcall
mov
test
push
mov
cld
add
out
lcall
into
insb
xor
dec
xchg
mov
jp
sbb
xchg
mov
lds
ja
mov
mov
mov
push
push
mov
mov
xor
pusha
or
pusha
leave
inc
add
mov
jmp
mov
or
in
sub
pop
mov
sahf
sti
pushf
cmc
dec
mov
jbe
xchg
pop
push
ss
cmp
enter
or
negl
fisttpl
cmc
lods
insb
test
lret
or
jge
mov
cmpsb
jl
je
mov
mov
cli
mov
or
je
adc
cmp
pop
fwait
add
je
sub
push
mov
test
adc
inc
ficomps
shll
loop
lret
fsubl
lea
add
and
imul
roll
or
sbb
popf
pop
out
mulb
lcall
pop
gs
and
xchg
pop
cld
or
cmp
mov
push
mov
popa
dec
push
mov
add
mov
dec
or
in
or
sub
std
stos
pause
or
cld
push
pextrw
jmp
imul
dec
cmp
push
cwtl
push
sbb
stc
pop
mov
dec
aas
inc
mov
lret
inc
aad
fistpl
jnp
and
mov
mov
mov
ja
rep
mov
ds
outsb
mov
add
pusha
test
insl
mov
das
push
iret
scas
mov
xlat
sub
mov
mov
push
pop
daa
jecxz
gs
xorb
repnz
jp
xor
loop
call
mov
addr16
push
inc
push
fwait
mov
mov
dec
ljmp
je
jl
clc
into
jle
out
and
lds
add
mov
pop
inc
add
cmp
jne
arpl
cmp
rorl
enter
bound
pop
jl
bound
in
dec
or
xlat
xchg
cmp
add
xchg
jg
imul
loope
outsb
xor
ret
popf
inc
mov
iret
inc
sub
lods
imul
ret
push
mov
hlt
mov
iret
or
push
adc
stc
shll
add
andb
or
cmp
mov
cmpsl
rorl
push
std
cmp
mov
ss
stos
mov
push
in
int
jne
pop
dec
ret
and
rorb
cld
lods
pop
sbb
sbb
inc
cmc
repnz
cmp
cmp
es
jnp
mov
stc
mov
sbb
pop
adc
js
add
mov
mov
jp
or
test
stos
fs
fistpll
inc
dec
loopne
dec
inc
add
xor
jo
ret
xor
dec
sub
pusha
push
cmp
int3
stos
stos
xor
rcrb
sbb
mov
add
mov
cli
adc
imul
js
in
fiadds
pop
cmp
inc
jge
or
ja
aad
lods
lods
pop
jmp
lret
sar
psrlq
fbstp
cmp
lcall
or
xchg
mov
gs
add
sti
aaa
subb
sarb
ficoms
add
ret
fnstenv
not
pop
jecxz
hlt
add
and
push
push
jecxz
jns
outsl
push
aad
and
in
dec
int
outsb
mov
ss
mov
dec
sbb
lret
shl
lods
mov
jns
fistpl
sub
mov
cmp
xorl
popf
inc
xchg
xchg
mov
clc
cmp
sbb
addl
nop
dec
outsl
sbb
push
clc
and
not
lahf
les
mov
pop
ja
pop
adc
mov
jno
mov
dec
sahf
lahf
fcmovbe
dec
jge
mov
outsl
jns
out
fbld
adc
testb
aad
rcrl
aas
and
cs
cmpsb
jno
shr
aam
mov
fwait
jb
pop
jmp
insl
mov
aam
push
imul
jns
ljmp
je
adc
mov
cmc
cmpl
push
insb
ficoml
and
push
mov
int
push
mov
dec
mov
cwtl
pop
jnp
or
add
xor
aam
sbb
mov
jl
cmp
sarb
pushf
jmp
add
sub
pop
es
mov
movsb
notl
or
jge
ror
mov
mov
pusha
gs
cwtl
pop
leave
jnp
mov
mov
pop
mov
shrb
and
pop
icebp
cmpsb
push
std
cmp
jbe
push
les
popa
xor
add
xor
add
xor
pop
xor
gs
or
push
adc
add
sub
add
push
out
push
imul
mov
jl
inc
mov
rolb
adc
stos
jns
mov
pop
jne
push
out
add
xchg
into
fildll
out
loop
mov
cmp
into
inc
xchg
adc
in
aam
mov
filds
nop
leave
es
hlt
push
iret
cmpsl
adc
push
idivb
push
sbb
das
and
lret
enter
and
xchg
and
fnstenv
lods
cs
outsb
addr16
pop
stos
pop
mov
adc
jne
repnz
and
jns
test
stos
movsb
push
ret
pop
jp
pusha
sti
push
stos
repz
mov
idivl
dec
negb
inc
cmpl
frstor
mov
mov
dec
mov
loope
fidivrs
sbb
xor
xchg
add
ss
rclb
dec
popf
sub
sahf
loopne
aad
jb
pop
and
ljmp
adc
sar
push
jbe
fs
outsl
push
cmc
mov
loope
call
or
stc
mov
movsb
mov
push
jl
das
cmp
outsl
arpl
test
inc
xchg
mov
xchg
fwait
inc
push
push
mov
xlat
cmp
das
test
pop
call
fnsave
cmpsb
fsubrl
lret
loop
mov
test
stc
xchg
xchg
in
pop
out
sub
push
scas
movsl
in
lret
and
push
cwtl
test
cmpsb
aaa
aaa
clc
sbb
mov
add
cli
scas
in
into
mov
imul
outsl
inc
shrl
pop
sub
push
and
imul
sti
add
shlb
add
fdivrs
testl
imul
lock
pop
call
mov
push
das
mov
in
jns
je
jno
jl
cmp
jmp
nop
jne
cmp
mov
shlb
and
cmpsb
addb
mov
pop
sub
aas
sbb
outsb
scas
adcl
cmp
or
imul
xchg
push
jmp
cmp
pop
das
lock
xlat
sbbb
lea
and
idivb
sbb
push
outsl
popa
int3
scas
xor
push
sbb
mov
js
jae
pop
loope
js
xchg
dec
aaa
clc
dec
popa
scas
ret
les
pop
adc
outsl
mov
out
stos
into
lret
jb
sbb
orb
loop
bound
icebp
dec
sub
xor
aas
flds
mov
dec
call
sbb
les
in
stc
push
or
dec
add
mov
sub
adc
aad
mov
or
or
adc
push
icebp
ss
rcrl
fsubr
cmp
cld
jae
jns
addl
out
pusha
cmp
sbb
dec
push
sbb
xchg
sbb
je
jl
xor
cmpsl
and
pop
jo
repnz
je
in
mov
rorb
scas
test
enter
fstl
inc
fmuls
xor
movsl
pop
mov
sub
push
xor
int
xor
outsb
out
and
mov
mov
and
fadd
cmp
jecxz
ret
dec
scas
adc
jbe
mov
bound
lcall
clc
or
cmp
mov
jp
pop
jmp
leave
mov
pop
jno
and
mov
ret
bound
add
mov
pop
outsl
inc
inc
pop
push
out
adc
fldenv
xchg
push
fldcw
add
or
jmp
std
inc
test
inc
mov
in
dec
loop
scas
es
movsb
enter
rcrb
sub
mov
sarl
mov
imul
mov
clc
or
sahf
mov
mov
shl
repnz
loop
push
je
int3
andb
sub
pop
loope
inc
cmpsl
stos
pop
mov
jmp
push
in
jge
test
ja
or
pusha
fisubs
nop
lahf
or
xchg
pop
mov
nop
dec
jno
sub
mov
iret
pop
call
lea
cs
sub
and
jnp
pop
mov
fwait
test
iret
mov
insl
aad
les
std
pop
pusha
daa
or
pusha
lods
fmuls
add
pop
mov
iret
pop
and
lret
fwait
jo
out
ret
rcll
jl
insb
mov
imull
and
cmp
adc
les
mov
fmull
les
icebp
sub
inc
in
mov
adc
pop
sub
lcall
xchg
mov
mov
mov
mov
shrb
clc
inc
or
dec
aam
mov
incb
xchg
cwtl
in
jle
push
lods
pop
jp
jb
mov
mov
mov
inc
and
mov
andl
pusha
dec
push
mov
rcll
adc
xor
mov
imul
dec
movsl
dec
roll
cmp
add
aas
mov
pop
lea
sbb
mov
shr
aam
sub
data16
pop
popa
jne
inc
into
pop
insl
ljmp
push
mov
in
call
repz
and
sbb
add
cli
faddl
adc
ljmp
mov
pop
sub
pop
push
mov
cmp
adc
lret
jnp
xlat
add
dec
scas
test
mov
call
push
xor
xor
rolb
push
or
faddl
cmp
mov
cmp
shr
insl
shll
cmp
cmp
sub
sub
sub
test
mov
fnstenv
loopne
add
pushf
stos
cmp
pop
sub
fadds
add
adc
sbb
push
cmp
popf
jle
in
push
jmp
or
xchg
and
orb
insl
popa
jns
popl
sahf
sarl
imul
pop
pop
cmp
mov
loope
repnz
add
fcmove
jnp
adcb
mov
mov
cwtl
push
jp
adc
inc
inc
push
scas
popf
inc
xor
or
sbb
add
in
mov
addb
mov
pusha
push
push
push
insl
call
aad
ret
jbe
rcrb
dec
das
mov
pusha
pop
and
adc
cmp
adcl
jle
lock
nop
xchg
adc
es
push
cmpsl
and
out
popa
add
sub
shl
xor
pop
push
sti
rorb
std
cltd
xor
xchg
dec
mov
push
insb
in
data16
ret
cmc
inc
fs
ljmp
rcll
push
fwait
movsl
push
push
sub
lods
test
or
jl
pop
stos
dec
inc
mov
add
inc
and
jmp
jnp
aam
ret
cld
fcmovnbe
aas
stos
xlat
and
mov
call
sarl
cmp
in
je
fld
add
and
jno
cli
add
roll
sbb
xchg
stc
lods
xor
popf
dec
sub
jnp
shlb
daa
pushf
aas
lock
repz
xor
stos
or
mov
mov
ja
mov
push
data16
adc
ljmp
in
std
sub
cli
push
push
or
mov
dec
push
sub
nop
test
push
mov
jbe
fisttps
adc
jge
call
or
cmp
mov
aaa
lret
pop
movsb
xchg
sub
fmuls
cmpsl
shrl
jne
sub
mov
xchg
clc
loopne
push
outsb
sub
jae
je
call
cmp
cmc
fmuls
pop
mov
addb
fwait
popa
jle
jae
and
popa
lret
push
sub
enter
mov
inc
adc
mov
push
cltd
add
cwtl
enter
imul
or
imul
out
mov
jnp
pop
push
xchg
push
pop
add
rcrb
lcall
mulb
je
int
out
fwait
xchg
je
out
xchg
movsb
jae
add
or
aam
cld
add
bound
xchg
inc
popa
fptan
arpl
stos
in
dec
pop
pop
insl
fwait
or
jae
mov
das
dec
xchg
das
push
das
pushf
xor
jle
fistps
mov
and
mov
imul
mulb
push
xor
int
sub
into
das
les
jl
daa
out
xchg
int3
push
movsl
jnp
out
cmp
sub
mov
scas
xchg
fcoml
lcall
sub
testl
dec
cmp
ss
cmpsb
inc
dec
mov
mov
inc
sbb
adc
lahf
sub
call
dec
fisttpl
xchg
push
add
sbb
dec
push
loopne
or
inc
sahf
sbb
push
ret
addl
jns
fwait
xchg
and
xchg
stos
inc
loop
inc
and
lds
sub
jns
shr
stos
sub
pushf
out
mov
push
bound
pop
mov
fisttps
xlat
push
in
mov
loop
jae
in
gs
push
sub
pop
xchg
pop
ss
negl
xor
push
outsl
xor
gs
aad
push
imul
xchg
rolb
lret
mov
int
frstor
xor
stc
test
fdivp
ja
fs
leave
dec
lea
out
test
mov
psubsb
movsl
and
fdivp
inc
push
mov
outsb
outsb
or
xor
fucom
mov
xchg
insl
in
imul
rcr
out
pop
xchg
add
mov
fstps
mulb
mov
fs
add
loopne
xchg
cmpsl
js
mov
jne
sbb
mov
fwait
iret
xor
test
roll
enter
ret
pop
aas
sti
pop
insl
mov
aam
xchg
push
push
dec
push
shrb
and
sbb
aad
sub
sbb
and
lock
cs
push
test
enter
inc
or
and
repnz
fbld
data16
mov
cmc
in
dec
dec
int
outsl
xchg
push
xor
insb
ja
iret
aas
add
xchg
and
jns
iret
sbb
mov
mov
fisubl
push
add
push
mov
sahf
fnstenv
fcompl
je
cmp
xor
inc
adc
addr16
out
cmpsb
jg
orl
or
mov
ret
pop
ret
mov
xor
mov
mov
dec
mov
cld
loop
nop
dec
flds
int3
jbe
je
adc
dec
add
lods
in
sub
xor
arpl
xchg
cltd
add
dec
fucomip
js
pop
data16
xchg
inc
sarb
jge
lret
cmpsb
push
xchg
loop
test
jle
ja
insb
shll
loop
push
jnp
pop
cmpsb
movsb
sub
cs
out
out
out
rcll
sub
jl
faddl
jmp
pop
push
fistps
xchg
dec
ret
or
jb
inc
repnz
jle
add
adcb
int
mov
and
xlat
in
call
add
jno
inc
xor
xchg
int
xlat
dec
test
pop
orb
test
xlat
cli
xchg
or
inc
mov
gs
testl
cli
dec
sti
or
inc
aaa
lret
ret
adc
fsubrl
xchg
test
mov
jae
pop
add
pop
aad
and
lods
sub
aad
xorb
shll
xor
and
dec
sbb
cld
jmp
jl
push
sbb
orb
popf
test
pop
sbb
daa
dec
andb
add
cmpsl
negl
mov
shll
mov
sub
ret
mov
inc
pop
jae
aaa
in
xchg
pop
stos
adc
outsb
jp
push
bound
decb
mov
mov
adc
xor
outsb
mov
ss
mov
xlat
push
repnz
or
mov
xor
mov
ss
push
jbe
push
scas
fldl
push
inc
in
cmp
push
push
add
mov
stc
mov
in
xor
cmp
or
mov
push
dec
jne
nop
cwtl
das
sub
das
or
jno
ja
xchg
sub
jle
sub
jo
pop
mov
insb
xorb
push
andl
ss
mov
aaa
rclb
stc
aad
mov
xchg
jb
ljmp
mov
sub
mov
mov
adc
adc
and
dec
movsb
push
pop
in
mov
push
cmp
sbb
mov
inc
shrl
jmp
cmpl
xcrypt-ecb
cmpsl
dec
and
push
push
cmp
mov
push
int3
dec
mov
mov
pop
shrb
ljmp
inc
movb
out
pop
jno
fisubl
push
jg
xchg
cmpsb
stc
imul
jns
pop
leave
arpl
int3
pusha
xor
mov
dec
add
or
cmp
pushf
adc
js
aad
mov
or
xlat
faddl
adc
es
xor
and
out
dec
push
add
jo
ss
sbb
lea
xchg
adc
cmc
sbb
cmc
dec
xchg
ret
outsb
insl
or
nop
and
mov
xchg
ja
add
lcall
sbb
sub
or
es
nop
sub
xor
test
push
ds
orb
fbstp
mov
fs
jg
shll
dec
mov
adc
cmc
cmpsl
cmp
test
sbb
sbb
clc
inc
lock
mov
iret
jp
js
xor
mov
outsb
test
inc
sbb
fprem1
aaa
inc
repz
and
push
inc
je
arpl
push
arpl
fwait
in
sub
cmp
xchg
mov
sbb
je
push
sti
push
ret
xchg
test
and
or
lahf
pop
decl
cmp
out
xchg
pushl
scas
add
shlb
sti
sub
popa
jmp
inc
jae
xchg
push
sbbl
push
push
xchg
adc
xor
cmp
imul
pop
je
rcll
ror
sbb
adc
sub
out
mov
ss
lret
add
lret
mov
cli
imul
movsl
add
cmpsb
shll
pop
pushf
lods
in
dec
ret
pop
mov
jle
mov
adc
hlt
pushf
in
sti
push
mov
push
data16
xchg
adc
imul
cmpsb
stc
mov
mov
jae
sbbb
fsubp
mov
aam
in
pushf
lods
xor
loope
sub
int
xor
aaa
nop
inc
xlat
push
push
dec
push
adc
lret
push
mov
mov
out
sbb
mov
push
rclb
out
fsubp
lods
mov
idiv
insl
push
mov
jb
add
das
adc
out
jg
cmpsl
jmp
mov
mov
push
add
jmp
outsb
popf
adc
andl
or
frstor
in
mov
scas
jl
in
inc
push
or
pop
daa
sti
xor
push
xor
mov
add
adc
add
cmp
push
lahf
lods
loopne
shll
cld
inc
es
push
mov
in
scas
pop
mov
push
test
lea
mov
fs
adc
and
pop
xchg
daa
sti
fldt
mov
jmp
ret
xchg
jle
mov
js
test
push
add
or
nop
add
loop
arpl
cmp
insl
iret
roll
mov
push
xor
ss
stos
int
pop
mov
cmpb
adc
push
adc
fstpl
add
add
lods
sbb
pop
mov
xor
je
xrelease
and
int3
pop
sub
lcall
mov
jle
pop
cmp
pop
inc
test
call
out
mov
jp
jne
mov
aas
xchg
push
insl
les
cmp
mov
sub
cwtl
popa
xchg
bound
aas
add
rcrb
lcall
mov
int
xchg
xchg
aas
or
or
adc
xchg
mov
int
in
test
rcl
jmp
mov
jo
hlt
cmp
daa
push
mov
je
mov
xor
lods
sahf
adcl
push
mov
sub
pop
or
pop
push
mov
pop
mov
lret
adc
ret
stos
pop
or
nop
pop
add
sbb
nop
cmp
icebp
rolb
xchg
in
cmp
mov
out
and
shlb
add
sbb
pop
out
mov
repnz
fstl
shlb
dec
adc
cmp
push
push
adc
add
pop
movb
dec
fwait
icebp
sub
and
xor
sti
stos
mov
arpl
dec
jae
outsb
in
push
push
xchg
pop
jbe
jge
mov
out
push
arpl
popf
pop
dec
or
in
push
push
mov
in
dec
xlat
lret
in
dec
loopne
out
add
test
aad
aam
repnz
cs
or
or
gs
rcr
rorb
adcl
pop
xor
pusha
mov
ss
pop
mov
jg
out
xorb
popf
adc
adc
xor
fdivr
pop
push
aam
insb
lds
xchg
sarb
cmp
xor
mov
mov
filds
loop
cmpsl
js
push
fcoms
inc
cltd
sahf
and
cmpsb
ret
in
mov
dec
mov
and
out
jnp
mov
cmpsl
push
cwtl
mov
xlat
or
jnp
mov
mov
cwtl
rorl
cld
xchg
add
scas
js
loopne
add
xchg
shll
dec
mov
cwtl
scas
jnp
in
xor
mov
fisubs
test
iret
and
push
aam
jne
sub
adc
inc
out
cmp
aas
jno
push
adc
add
hlt
int3
popa
jl
inc
adc
pop
repz
es
arpl
sub
adc
and
jge
sub
adc
pop
or
lock
add
call
loopne
sti
or
shll
sbb
mov
loop
and
adc
outsl
adc
repnz
jb
mov
adc
into
cli
fstpl
test
nop
or
pop
sarl
jge
daa
mov
ss
test
sub
loope
jae
pop
lods
push
or
pop
push
test
mov
and
adc
cli
sahf
mov
fldt
call
xor
rolb
pushf
jle
test
xor
cmp
pop
inc
pop
mov
jne
add
push
std
add
stc
cmc
clc
mov
icebp
outsb
xor
shlb
inc
insl
sbb
mov
imull
out
and
sbbl
sbb
mov
lock
mov
imul
jbe
rol
push
call
cmp
icebp
sti
pop
call
cmp
addps
movsb
setns
gs
movl
jmp
pushf
lods
dec
movsl
sub
cli
outsl
adc
lods
pop
xchg
sahf
adc
mov
pushf
sti
nop
mov
mov
sub
mov
mov
shll
dec
or
jne
icebp
scas
mov
adc
or
imul
adc
pop
pop
jb
sti
pop
adc
mov
loope
cmpl
push
cs
inc
xchg
sbb
jmp
sub
shl
pop
ljmp
xor
inc
jns
fs
data16
sarb
sahf
add
xchg
mov
rcrb
sbb
ljmp
push
push
cmp
mov
mov
inc
mov
mov
movsb
into
cmp
or
xchg
fs
push
jmp
mov
adc
leave
insl
push
adc
mov
pop
mov
outsl
stos
ss
add
shll
addr16
dec
inc
rcll
outsb
outsb
je
icebp
mov
xchg
lret
ljmp
testb
lret
and
jb
leave
cmp
mov
call
iret
mov
scas
dec
mov
loopne
insl
mov
sarl
lods
pop
and
mov
in
frstor
addr16
xor
pop
push
ret
enter
sbb
fs
fbstp
or
into
das
in
jno
jge
sub
inc
or
in
subl
cmp
nop
cli
pop
xor
vpmullw
negl
sbb
push
aaa
jl
cmp
stc
into
fsubs
cmpsb
scas
call
jg
sbb
pusha
sar
lcall
fdivp
fsubrl
dec
ss
aaa
enter
clc
lcall
sbb
loop
mov
dec
pop
imulb
lock
mov
push
adc
lods
repz
jae
fcompl
jno
stos
inc
push
jle
dec
lods
sub
jo
add
inc
repnz
add
ficomps
movsl
mov
xchg
sub
mov
jae
mov
out
pop
cmp
cmp
les
sub
std
mov
adc
push
test
xchg
leave
jmp
std
sbb
mov
mov
dec
popl
inc
mov
andb
xchg
scas
fadds
or
jb
mov
aaa
and
fwait
ja
movsb
mov
or
jne
dec
mov
iret
push
and
in
mov
pop
inc
jnp
test
ss
sbb
imul
inc
jge
jmp
dec
cmp
inc
dec
aas
std
push
stos
ds
fldenv
xor
scas
and
addr16
sbb
xlat
fisubrs
andb
aaa
subl
das
fidivrs
xor
pop
dec
mov
sub
into
in
push
xchg
mov
test
xor
xlat
dec
pop
add
bound
scas
push
dec
fists
aam
mov
fcompl
mov
pusha
rcll
mov
and
nop
test
mov
imul
jae
adc
dec
insb
stos
ror
jbe
out
dec
int3
mov
xchg
clc
mov
sub
xchg
bound
sbb
inc
and
jp
push
mov
push
iret
aas
sbb
or
inc
fwait
pushf
cmp
movsl
test
fimull
push
in
jo
sbbb
out
insl
ja
mov
pop
inc
inc
loop
jg
fwait
je
je
cmp
movl
rorb
xchg
repnz
adc
std
mov
push
mov
xchg
pop
lods
xor
cld
aam
mov
xor
mov
mov
insb
add
jl
lcall
mov
ret
mov
mov
jnp
xor
dec
adc
aad
daa
loope
push
les
ja
dec
lcall
push
inc
in
shrl
mov
pop
cmc
inc
xchg
repz
lret
loop
mov
and
sarb
call
rol
aad
imul
xor
lret
sti
sbb
cmpsl
inc
shrl
inc
cmp
cmpsl
arpl
mov
xlat
aaa
mov
in
std
push
jbe
inc
stc
cmp
or
dec
pop
int
xor
movsl
scas
je
dec
fdivs
dec
add
push
xchg
rcrl
or
dec
cmp
adc
mov
ljmp
aam
mov
inc
inc
ja
dec
test
mov
sahf
jg
loope
add
fcomp
fcoms
mov
outsb
pop
add
and
cwtl
inc
and
inc
mov
imul
jne
addr16
mov
xchg
data16
repz
data16
pusha
repnz
mov
xchg
push
mov
stos
xor
cmp
sbb
cmp
inc
shll
scas
xchg
lock
inc
jmp
stos
and
or
gs
sbb
dec
mov
add
popa
push
mov
push
insb
mov
push
and
and
xchg
mov
lds
push
leave
jecxz
jp
mov
pop
dec
jbe
jl,pn
insl
sub
adc
into
mov
rol
pop
mulb
dec
aam
outsl
mov
aaa
lcall
loope
insl
popf
fldl
mov
lods
mov
lret
mov
inc
movl
aad
pop
js
incl
sbb
ret
jb
xchg
and
push
stc
dec
inc
cmp
mov
or
xchg
xchg
add
inc
rcl
xor
testl
rol
mov
inc
dec
add
inc
aaa
iret
fistl
or
in
fcomip
js
jo
push
or
test
lock
rcrb
insb
into
aas
insb
push
adc
aam
andb
scas
outsl
ljmp
sarl
lcall
fwait
test
mov
dec
lods
mov
xor
pop
dec
pop
mov
and
test
jno
dec
adc
pop
in
arpl
or
mov
enter
dec
out
push
pushf
les
mov
xor
and
sub
dec
faddl
jecxz
push
fldenv
loope
pop
sbb
xor
outsl
lods
cs
bound
push
test
enter
sub
mov
adc
loope
xor
shrl
mov
insl
pop
fs
pop
aaa
and
or
dec
fmuls
cmp
cmp
nop
lods
imul
inc
cmpsb
dec
in
clc
adc
sbb
aad
aad
lds
loopne
jns
mov
or
movsb
xor
fcoml
xor
flds
stos
in
in
or
in
test
cmc
mov
lret
cmc
loop
stc
shl
xor
jns
fistpl
push
push
ja
nop
cmc
adc
mov
in
xor
push
shlb
and
out
scas
or
into
jb
adc
push
jge
push
and
outsl
jne
outsb
cmp
loope
cmp
pop
into
pop
jp
aas
lods
sbb
lcall
jp
mov
cmp
dec
aad
dec
mov
or
and
jmp
xor
cmpsb
xor
lcall
mov
adc
sbb
push
mov
ret
jo
inc
mov
dec
data16
cltd
jg
rolb
push
xor
fldcw
loop
notb
inc
arpl
arpl
xor
mov
repnz
inc
sahf
xor
add
mov
inc
bound
in
ljmp
fdivrs
sti
imul
out
and
out
xor
mov
jne
mov
mov
cmpsb
daa
imul
mov
andl
js
ret
pop
fbld
in
fnstsw
loop
fsts
fcmovne
imul
dec
mov
jecxz
arpl
inc
mov
lcall
ret
das
mov
mov
aam
pop
xchg
add
sub
in
mov
and
sub
mov
push
xchg
dec
xlat
fs
pop
inc
pop
shlb
inc
psrad
add
inc
and
lock
inc
lret
xchg
xor
imul
and
inc
dec
stos
fisubl
jl
mov
xlat
rorl
mov
push
addr16
inc
sub
push
test
mov
test
mov
clc
adc
xchg
sbb
pop
ss
lds
and
dec
add
cmpsb
push
lods
pop
int
xlat
pop
orps
mov
shll
xchg
mov
mov
or
mov
adc
jge
and
mov
sbb
fidivrs
in
mov
incb
inc
mov
pop
rclb
repnz
pop
mov
dec
lret
jae
xor
push
adc
mov
xor
movb
pop
inc
sti
outsb
nop
push
ja
add
movsl
cmp
dec
sti
push
mov
loope
mov
popf
leave
repz
or
loop
dec
bound
and
pop
mov
pop
push
adc
lock
leave
fs
lock
cli
cmp
push
mov
rorb
xchg
lret
out
lret
push
pop
ror
adc
jmp
push
mov
jge
js
mov
es
subl
inc
cwtl
sub
cltd
cmp
ds
pushfw
or
lock
sub
sbb
nop
rorb
inc
scas
mov
mov
out
and
sti
jnp
cmp
sbbl
push
gs
mov
aam
sbb
shlb
xchg
or
xor
bound
repnz
xchg
push
sbbl
inc
js
sub
stos
and
roll
inc
adc
push
pushf
and
jmp
out
jg
mov
int3
sub
push
mov
scas
lods
pop
sbb
inc
adc
xor
jb
mov
daa
mov
loope
mov
arpl
scas
repz
cwtl
pop
pop
into
ja
dec
adc
test
cmp
fld
mov
pop
xor
loope
cmp
mov
fbstp
mov
cli
dec
ret
mov
insl
fs
xchg
out
arpl
sub
or
fisttpll
xor
xor
or
or
xchg
cmpsl
xchg
inc
push
andb
test
sti
add
add
popf
cli
jo
mov
enter
mov
gs
shlb
pop
fmull
xlat
cs
mov
jbe
clts
xchg
sahf
in
add
xor
adc
sub
push
repz
int
pop
addb
mov
mov
mov
call
push
push
dec
inc
js
nop
movsl
inc
xchg
jle
loop
int3
dec
icebp
sbb
or
sbb
mov
push
les
or
inc
pusha
pop
dec
ret
xchg
pop
pop
sti
cmp
mov
je
cmp
and
mov
fmuls
inc
xchg
das
mov
in
leave
loopne
mov
adc
icebp
jae
add
lea
jnp
arpl
xchg
iret
ret
inc
ret
dec
in
xor
hlt
push
dec
shll
and
aaa
in
jl
in
cmp
bound
or
push
adc
mov
jnp
xor
inc
fwait
mov
jmp
mov
xor
movhps
lcall
push
sub
cwtl
push
and
aam
rep
clc
cmp
inc
or
xor
popf
xorb
xchg
mov
int3
in
jbe
dec
push
fstps
pusha
mov
fcmovu
dec
lret
es
add
xchg
aad
lock
je
int
addr16
lcall
sub
pop
fwait
sti
cltd
xchg
push
sub
adc
jnp
lds
stos
xor
adc
test
mov
mov
hlt
in
dec
ffree
ja
xchg
jo
inc
cmp
push
bextr
ret
rcl
mov
inc
mov
mov
aad
push
daa
sbb
stos
daa
and
mov
inc
int3
sbb
push
add
sbb
out
jo
pop
in
jmp
fwait
inc
jno
int
pop
cmp
sub
cmp
aaa
in
imul
mov
int3
popa
inc
into
cmpsl
pop
pop
mov
es
pop
pushf
cli
adc
loope
sub
xlat
sub
mov
sub
fsubrl
outsl
jle
mov
test
lock
sahf
adc
push
leave
push
push
jmp
jo
jp
cli
jb
addr16
jecxz
aam
in
mov
mov
daa
xor
gs
cmp
sub
xchg
mov
or
fwait
pop
lock
jnp
ror
xor
sub
inc
test
das
into
pop
ret
cpuid
in
mov
jae
imul
inc
bound
repnz
lock
dec
lds
and
mov
or
test
cmpsl
cmp
daa
xchg
call
movsl
je
pop
and
sbb
movsl
mov
test
outsl
adc
push
cmp
xlat
sbb
gs
push
jae
pop
outsb
jmp
in
push
xchg
push
fdiv
cld
inc
jb
loop
mov
and
ss
mov
adc
and
int3
movl
bound
insb
push
jb
ljmp
sub
pop
fiaddl
adc
test
outsb
into
out
adcl
mov
jmp
mov
jae
and
clc
fstl
das
mov
cmp
push
push
cmp
lods
inc
test
test
jp
cwtl
mov
or
frstpm(287
mov
mov
dec
nop
mov
aam
mov
imul
xchg
cmp
mov
mov
mov
into
adc
mov
sub
cmp
xchg
pop
scas
mov
cltd
mov
inc
add
and
push
mov
mov
xchg
mov
dec
xchg
scas
mov
js
or
repz
les
cmpsb
mul
xchg
adc
jge
out
xchg
negl
or
mov
loope
push
sbb
decb
xlat
pop
cmpsb
cs
cli
outsl
andl
sar
push
out
lds
sub
fs
ljmp
add
roll
xchg
cmp
xchg
mov
aam
mov
lret
inc
adc
shrl
and
xchg
lea
ficoml
aad
loop
lods
xor
bnd
sub
and
add
jmp
lds
bound
mov
xchg
push
mov
and
lahf
jae
sahf
push
outsb
jo
lock
cmp
lahf
popa
stos
loope
in
clc
imul
inc
fwait
sahf
aam
popa
jb
decl
inc
xchg
pop
pop
inc
sub
sub
push
xchg
and
mov
aad
and
out
test
lea
mov
pop
fisubrl
sbb
imul
jbe
test
xor
push
je
std
push
or
pop
adc
mov
pushl
imull
int3
dec
sbb
xor
inc
fnsave
test
and
push
xchg
in
or
cmp
or
ljmp
mov
jbe
iret
sub
xchg
aam
push
iret
repz
div
mov
in
xor
pop
add
cmp
loopne
cmp
lds
js
sub
popa
dec
call
daa
aaa
fisubl
mov
mov
cmp
arpl
pop
aam
fwait
cmpsb
imull
nop
or
push
mov
pop
addr16
stos
mov
xor
cmpl
test
movsb
idivb
lea
or
sti
int3
sub
mov
mov
mov
adc
std
sub
mov
shll
loopne
inc
dec
jecxz
pop
ds
jp
mov
ss
test
cltd
pop
xor
pop
mov
or
out
aam
popf
xor
imul
ja
repnz
sbb
mov
neg
jne
mov
add
or
mov
rcll
and
hlt
xchg
sbb
jmp
popf
pminub
aas
mov
mov
xor
movsl
outsb
inc
scas
mov
cmp
addr16
mov
jbe
mov
call
pop
cmpsb
ljmp
negb
add
adc
subb
fcomps
aaa
movsl
push
pusha
in
cmp
pop
gs
xchg
stos
xchg
jb
cmp
xor
or
adc
fistpll
push
mov
movsb
outsl
mov
andl
push
call
xorl
sbb
cmp
aaa
pop
into
out
jmp
jl
mov
inc
pop
fildl
lock
cs
adc
mov
dec
cli
jnp
sbb
xlat
int3
fxch
jno
in
in
cli
test
hlt
push
sbb
jmp
mov
mov
xor
mov
xchg
outsl
xor
mov
push
test
sti
jae
cmc
dec
cmp
in
lcall
push
pop
lock
outsl
cmp
lcall
adc
jno
ficoml
xchg
call
frstor
mov
cmpsl
pop
pusha
xchg
dec
jmp
mov
mov
dec
daa
mov
popf
pop
imul
push
inc
daa
addb
cmc
mov
jg
jne
jecxz
sahf
pop
mov
and
mov
gs
cmpl
cltd
mov
adc
outsb
aad
pop
cmc
loope
aam
sub
divb
cmp
inc
lods
imul
push
push
filds
or
mov
cld
ja
inc
jge
fcoms
ret
aas
add
leave
and
clc
rcl
xchg
jae
cmc
sbb
add
test
scas
roll
sahf
sarb
insl
popa
sarl
and
mov
imul
out
repz
test
pop
bswap
inc
scas
sub
push
push
add
into
jmp
fistl
sub
nop
in
in
and
or
repnz
fdivrl
adc
cld
adcb
xlat
push
xchg
mov
xchg
imul
cmp
outsl
sbb
fnclex
stos
lcall
lret
push
jmp
mull
dec
cmpsl
sub
out
xchg
push
mov
lea
pop
and
jmp
mov
in
xlat
dec
dec
mov
dec
mov
fsubs
scas
rcr
aas
jo
lods
add
pop
cmp
jb
in
cmp
repnz
ds
dec
mov
sub
xor
mov
bound
scas
aas
test
jae
add
cmc
test
ja
mov
movsb
lds
add
jae
or
shlb
sbb
pop
inc
fs
fiaddl
imul
fidivl
and
pop
insl
rcrb
icebp
push
bound
jle
jae
int3
cmp
and
and
mov
aas
outsb
in
pop
dec
xchg
jecxz
inc
xor
push
adc
cmp
nop
bound
push
sti
outsb
js
xchg
and
inc
and
clc
lods
cmp
sub
cltd
mov
ret
sbb
test
sbb
negl
nop
ffree
shll
push
lds
sub
or
fisubl
sbb
mov
insl
stos
push
mov
inc
ds
adc
imul
xchg
lods
pop
popa
aad
cmp
push
iret
and
push
adcl
jle
nop
insb
sub
jnp
sti
movsl
or
push
pop
xorb
pop
xchg
popa
lea
xchg
or
sbbb
dec
imul
in
sub
notb
cli
cmpsb
rcrl
mov
lds
fmul
sub
push
jae
inc
call
mov
pop
jbe
push
cmp
stos
sbb
push
aaa
pusha
hlt
sbb
loopne
xchg
es
cmpsl
jae
cmpsb
les
dec
dec
jnp
out
iret
push
xchg
outsb
mov
in
aas
jo
mov
mov
sub
js
inc
lret
in
aas
jbe
dec
sbb
cmp
in
dec
cltd
lea
xchg
in
test
mov
mov
adc
fs
ss
shlb
pop
mov
push
mov
pop
dec
in
jne
mov
sub
jnp
mov
push
push
or
and
cmp
dec
or
jecxz
shlb
mov
mov
or
ds
pop
out
jl
and
test
inc
sub
and
add
mov
add
or
push
insl
sbb
sub
pop
mov
jb
in
sub
in
sti
sete
inc
and
push
and
fcoms
fwait
pop
shl
xor
in
inc
inc
xchg
lea
sbb
nop
xchg
mov
int
out
adc
inc
sbb
cwtl
jno
and
lcall
inc
loop
xor
pop
adc
scas
lods
xor
lcall
les
dec
hlt
xorl
sbb
mov
mul
xchg
adc
loop
shll
sbb
add
inc
mov
ja
sahf
into
outsl
mov
jno
jb
mov
jnp
pop
rorb
xlat
fwait
js
ret
mov
push
js
repz
test
rclb
test
sarl
je
jp
or
sbb
shrl
mov
adc
push
outsb
pop
mov
sbb
inc
mov
mov
mov
push
mov
jnp
dec
cmp
lret
cmc
lock
push
sbb
jl
mov
test
imul
scas
mov
rcrl
add
mov
inc
or
mov
hlt
bound
add
repz
fstpt
jnp
in
sahf
ret
cmp
iret
push
in
adc
add
or
out
xchg
xchg
int3
mov
dec
test
cs
outsb
adc
stos
addr16
mov
push
mov
into
jg
cli
sub
mov
xchg
clc
mov
push
mov
cmp
mov
iret
in
and
cld
jle
cmp
cmp
shlb
push
adc
xchg
dec
push
iret
lods
mov
lahf
mov
cli
pushf
add
daa
mov
es
lods
cmp
pop
sub
xchg
lea
pop
arpl
insb
xlat
and
and
jle
leave
es
add
mov
movsl
mov
js
imul
jmp
pusha
dec
jae
mov
inc
pop
outsb
adc
jg
js
push
in
xor
mov
mov
pushw
push
sbb
ds
push
cltd
pop
jne
mov
jp
dec
mov
aad
xor
imul
and
rcrl
std
dec
mov
fimull
xchg
jae
shll
cmpsl
pcmpgtd
out
frstor
mov
cmp
xlat
fsub
rol
push
mov
pop
pushf
lret
xchg
shlb
shrl
das
and
dec
jp
fwait
outsl
xchg
stc
lcall
add
or
hlt
es
or
stos
and
loope
sbb
cwtl
popa
fs
sub
dec
fnsave
mov
rorb
data16
pusha
ret
fs
fisttpl
dec
xchg
outsl
std
js
add
les
cmpsl
cs
lods
sbb
mov
xor
mov
out
bound
out
jmp
fs
mov
out
jmp
data16
push
push
xlat
mov
nop
stos
cmpsl
dec
iret
iret
sbb
or
xchg
sub
jecxz
adc
lret
mov
pop
cmpsb
or
lret
movsl
xor
std
mov
insb
std
mov
or
cwtl
das
jnp
clc
push
cli
pop
test
cwtl
dec
enter
push
mov
push
leave
jge
xor
jnp
xor
dec
pop
cld
mov
rcrl
adc
add
imul
loopne
jp
xlat
loopne
xchg
xchg
stos
xlat
mov
cmpsl
cmp
add
stos
mov
push
outsw
mov
repnz
or
jns
ret
adc
int3
cltd
cld
dec
mov
call
mov
addr16
push
push
orb
lods
adc
imul
fcmovnu
or
ret
pop
push
push
aam
xchg
dec
inc
add
mov
imul
sub
hlt
imul
jg
faddl
fs
jnp
xchg
jge
xor
push
imul
popa
jns
sbb
lcall
outsb
adc
shll
adc
sbb
inc
fildl
ret
mov
mov
int
and
pop
xchg
repnz
xchg
and
push
popf
test
scas
test
movsl
inc
cli
jge
scas
push
and
adc
out
test
cld
adc
mov
lods
movsb
fildll
cltd
imul
jne
dec
push
scas
call
js
cmpsb
stc
std
mov
mov
inc
push
hlt
push
sbb
xchg
fidivrs
inc
push
adc
movsb
push
stc
arpl
mov
dec
mov
movsl
sbb
jl
push
nop
xor
popf
aaa
test
ljmp
sub
xor
mov
dec
lahf
add
shl
insl
push
test
cltd
cmpsb
or
mov
push
pop
push
jmp
dec
push
mov
cwtl
adc
mov
das
push
stos
xchg
jnp
out
pop
mov
ret
inc
les
repz
inc
or
push
aas
push
mov
jg
lahf
aaa
ja
mov
mov
add
mov
or
jmp
mov
xchg
dec
sub
cld
mov
add
pop
xchg
lods
stos
in
sbb
shll
jo
jg
sbb
cli
mov
sbb
pushf
mov
aad
movsl
jg
ljmp
mov
lock
push
xchg
dec
cmp
ljmp
add
shrb
sahf
mov
daa
popf
xor
push
xchg
shrl
stc
gs
or
cs
insb
data16
or
lcall
fisubl
sbb
mov
mov
js
sbb
push
popf
push
aaa
xchg
lods
adc
mov
add
sub
push
pop
in
jne
push
add
out
aaa
fisttpll
mov
clc
popf
xchg
rep
xchg
bound
or
xor
cmp
jno
sti
out
sbb
and
xor
push
pop
xlat
push
or
and
adc
pop
fs
sub
cld
andb
adc
pop
xchg
jmp
jo
or
xchg
les
mov
adc
shrl
jecxz
std
cmpsb
sub
xchg
addr16
cmp
sbb
bound
push
fcompl
sub
stos
mov
mov
mov
aad
jmp
mov
lret
or
mov
pop
dec
xor
lea
in
shr
scas
inc
push
lds
mov
sub
add
pop
popf
sub
data16
pop
pop
mov
sbb
push
subb
or
dec
ror
mov
in
cltd
adc
mov
dec
xor
in
pop
ss
ret
mov
jnp
andl
sbbb
lds
test
jle
xchg
out
out
push
arpl
arpl
pop
outsb
stos
nop
sub
les
pop
sbb
sbb
imul
nop
jmp
arpl
xchg
xor
ljmp
mov
push
pop
sub
and
testb
lret
lods
loop
or
lods
fstps
mov
in
inc
and
and
push
loope
inc
and
sub
rcl
pop
roll
cmp
mov
push
aas
in
fdivrl
inc
or
dec
pop
sub
or
push
push
adc
adc
mov
fldt
sbb
mov
sub
xchg
stc
adc
or
data16
inc
and
pop
sub
lods
push
inc
or
push
fsubrl
xor
mov
popa
adc
aam
jle
into
dec
mov
sbb
clc
pop
cmpsl
xchg
ds
xchg
repz
out
and
outsb
adc
mov
cmp
fimull
iret
sub
in
pop
in
cmp
aaa
inc
stc
push
adc
test
in
data16
and
gs
lea
xor
add
je
test
push
push
das
add
mov
and
ljmp
fidivrs
or
out
cwtl
xor
insb
into
inc
cmpsl
jge
push
mov
jbe
jp
shl
movsl
arpl
inc
sub
les
sub
arpl
cmp
push
push
cmp
mov
sbb
adc
popf
lock
lcall
popa
inc
push
mov
in
lods
push
xchg
push
mov
jns
stos
xor
sti
call
rolb
stos
mov
jmp
icebp
ret
jmp
fwait
icebp
test
aas
and
or
jb
mov
cmpsl
cld
mov
mov
aad
test
sbb
fiadds
mov
dec
fimuls
jecxz
push
outsb
xor
in
jno
push
ffree
mov
leave
popf
or
or
push
dec
xchg
inc
out
rorl
xchg
jge
push
dec
js
add
mov
adc
xchg
dec
mov
jp
sbbb
enter
dec
mov
jge
or
inc
popf
mov
xchg
lock
insb
je
push
insl
jnp
pop
aad
mov
cmp
xor
call
outsb
call
mov
lods
sti
mov
in
mov
inc
int3
push
add
pop
rcll
cld
into
test
pop
aas
add
lods
mov
mov
xchg
inc
fwait
iret
test
sbb
mov
lods
in
jnp
leave
out
dec
add
rorl
mov
cmc
sub
aam
fisttpll
lret
mov
fwait
cltd
push
cmpsb
out
dec
pop
daa
pop
sub
jmp
xor
add
sti
sub
popf
jmp
cmp
cmpsl
lds
jmp
and
and
cmc
pop
aad
jbe
pop
insb
leave
xor
imul
lret
hlt
and
mov
out
insb
or
and
outsl
sbb
call
lods
clc
mov
or
sti
ret
mov
inc
push
fsubrs
stos
sbbb
bound
ja
arpl
jae
push
pusha
dec
fildl
cmp
mov
sbb
stos
add
adc
mov
outsl
pop
aad
jmp
pushf
and
dec
rol
sub
jb
je
daa
into
data16
daa
sub
fwait
mov
call
stc
add
ret
leave
mov
fdivs
add
jns
lds
pop
cld
shlb
shl
xor
xchg
push
ljmp
movsl
out
dec
xchg
fwait
sbb
pop
nop
clc
xchg
popf
ret
dec
dec
xchg
in
mov
cmovb
xchg
mov
mov
jno
dec
xchg
add
xchg
fidivl
mov
add
sub
xor
jno
lods
out
cmp
ja
mov
xchg
cmpsb
mov
xchg
data16
pop
test
out
jns
mov
daa
xchg
xor
jge
xchg
sub
jle
fwait
cmpsl
xchg
andb
out
cli
aam
loopne
cwtl
fnstsw
lods
add
stc
lret
dec
mov
les
fiadds
dec
xor
std
xchg
inc
mov
out
das
cmc
sub
fisubrs
sbb
cmp
push
call
sub
aas
mov
xor
or
popa
stos
adc
mov
cmp
lock
les
addr16
jmp
ss
sbb
push
hlt
outsl
or
adc
xlat
inc
in
out
inc
inc
imull
stos
mov
outsb
cmp
addr16
mov
stos
enter
pop
jp
scas
popf
push
or
out
xor
cmc
xchg
or
push
bound
jp
jnp
dec
cli
sti
mov
xchg
call
lcall
pop
inc
add
mov
out
pop
lods
movsb
adc
pop
mov
lods
js
in
orb
call
lcall
xchg
jp
ss
cld
xchg
sub
sbb
outsb
adc
dec
jmp
lea
sub
loop
xor
jecxz
push
mov
btc
inc
and
lcall
inc
or
xchg
and
mov
jg
or
mov
jae
push
les
inc
pop
sar
js
movsl
jne
in
jne
inc
push
pop
lcall
lret
mov
pop
int
les
stos
or
aas
or
push
lods
inc
add
ret
inc
inc
inc
pop
push
stc
cmp
xchg
pop
fnstcw
cmp
xor
cmc
mov
lods
testl
sbb
test
push
or
jg
packsswb
xlat
movsl
stc
sub
jle,pn
push
xchg
add
add
lea
mov
cmp
inc
jle
ss
xchg
xchg
jmp
sbb
xchg
lret
into
popa
dec
adc
es
rorl
stos
in
scas
aam
je
and
xchg
adc
popf
dec
daa
orb
mov
mov
insl
fsubrl
ja
jnp
and
adc
cmc
out
testl
test
ds
fstps
add
push
out
mov
and
test
lods
pop
out
jbe
pop
das
popa
das
in
fldl
aam
les
xchg
xchg
push
add
add
popa
pop
cwtl
inc
mov
dec
sub
pop
out
shll
inc
mov
add
inc
mov
pop
repz
mov
in
mov
mov
sbb
ss
gs
sub
scas
lahf
out
mov
scas
imul
pop
mov
and
push
push
out
and
and
sti
enter
pusha
xor
addr16
xchg
cmp
test
and
sbb
loop
arpl
and
out
dec
mov
push
push
mov
xor
ja
jae
jge
leave
mov
mov
pop
cmpb
arpl
adc
sti
xchg
mov
cld
call
pop
fstl
in
jge
lods
push
lds
push
lret
xchg
cld
mov
icebp
mov
jge
aad
xor
xchg
stos
rorl
and
jb
jo
rcll
stos
pusha
imul
fs
dec
movsl
mov
out
add
lcall
fnstenv
cltd
inc
jl
mov
pop
inc
imul
push
and
subb
push
rorb
adc
or
cld
enter
mov
test
sarl
insl
dec
fs
lods
mov
and
jmp
sbb
gs
mov
test
mov
xor
gs
into
popf
outsb
inc
ss
xlat
sti
std
cld
pop
int
pop
js
dec
push
loopne
sbb
mov
xchg
inc
mov
scas
xchg
in
lods
fisubrs
xchg
popa
pop
dec
stos
jl
aam
jge
ss
leave
push
xchg
loope
in
pop
jge
popa
or
sbb
inc
mov
sbb
pop
shl
adc
insl
push
iret
insl
or
fsub
mov
sti
cmp
adc
cmp
jo
push
aad
add
jecxz
js
rcrb
jnp
ret
into
and
push
loop
fsts
adc
adc
xor
pop
js
jle
lds
mov
dec
sbb
xlat
gs
pop
or
add
je
xchg
xor
sbb
mov
cmpb
or
mov
not
fwait
js
xchg
incb
movsb
mov
sbb
outsb
outsl
mov
in
cmp
mov
ds
rcrb
cmp
dec
push
hlt
mov
xor
in
cwtl
shl
mov
jns
jmp
dec
and
sub
shll
fisttps
push
stos
push
mov
arpl
mov
gs
xor
adc
loopne
lods
data16
insl
sub
cmp
cltd
fsubl
mov
mov
sbb
stos
scas
int3
adc
jne
je
imull
ja
sub
lock
mov
sub
sub
fistl
repz
jmp
cmp
fldcw
aam
jl
sub
sbb
outsl
jno
sti
cvtdq2ps
jl
mov
inc
add
addr16
dec
fs
xchg
int3
in
xchg
add
xchg
mov
sbb
out
in
cmpsl
inc
int3
dec
ja
inc
sub
test
mov
push
int
das
pop
scas
dec
scas
or
inc
jg
rorb
xchg
lcall
daa
cmp
jbe
add
jns
int3
mov
in
test
jle
daa
mov
sbb
or
inc
cmp
adc
stc
daa
cltd
into
xchg
pop
mov
adc
jbe
xor
fimuls
in
xor
test
pop
xchg
cmp
adc
adc
jne
gs
stos
in
inc
xchg
xor
mov
adc
pop
arpl
rolb
cmpsl
imul
out
enter
pop
mov
ljmp
pop
mov
test
jnp
xor
dec
dec
xchg
fisttpll
jns
push
fs
mov
ret
shll
or
xlat
add
pop
popa
imul
jne
xchg
mov
addl
test
pop
mull
add
ja
aam
sub
lea
mov
rcll
call
imul
out
je
mov
sbb
cmp
test
inc
bnd
and
dec
popf
into
sbb
loopne
enter
push
scas
push
pop
mov
mov
out
add
loop
jbe
jle
cmp
or
les
xor
ljmp
fdivr
in
mov
pushf
out
add
pop
or
movsl
xchg
inc
lods
pop
dec
ret
push
xor
xor
xor
sub
and
adcl
int
popa
fadds
jmp
add
dec
or
addb
test
mov
mov
jne
fldenv
xor
dec
fs
push
inc
outsb
lcall
mov
ret
mulb
push
fnstsw
sti
sub
mov
or
ljmp
mov
dec
rcr
sub
clc
repz
push
test
ds
mov
mov
cmp
sti
sti
push
pop
mov
jnp
cltd
mov
cltd
xchg
stc
lcall
lods
adc
sbb
cmp
lods
divl
cld
mov
push
mov
dec
pop
jl
ljmp
je
cmpsl
mov
sbb
dec
or
insl
sbb
fsubr
mov
xchg
xor
cs
sub
jns
popf
pop
xor
negb
adc
xchg
xor
std
inc
stos
je
mov
push
stc
outsb
sti
ds
cli
inc
rcrl
add
stos
rcl
sarb
ja
out
mov
setg
sbbl
into
push
push
addr16
mov
mov
xchg
push
incb
dec
dec
add
sbb
test
sub
inc
mov
sbb
out
mov
jns
adc
mov
aam
pop
sub
xlat
mov
cmpsb
das
ja
ss
ret
mov
inc
cltd
iret
mov
iret
cli
cwtl
and
xchg
cmp
mov
adc
jle
loopne,pt
pop
push
jmp
data16
popf
and
fldt
shrb
mov
sti
lret
add
or
jno
pop
movsb
das
lods
movsl
jbe
cwtl
inc
aam
test
mov
or
add
out
or
jbe
push
pop
inc
push
lahf
pop
xor
mov
loop
rcll
fiaddl
aad
pop
jl
movsb
icebp
popf
enter
xchg
add
xor
cmp
aad
sub
jnp
mov
std
aas
or
dec
adc
dec
or
pusha
cmp
insl
sbb
mov
mov
pop
xor
mov
int
xchg
inc
mov
sub
das
inc
dec
pop
lret
sub
es
cmp
or
and
adc
xchg
mov
jbe
mov
adc
add
push
add
mov
mov
add
data16
movsb
scas
adc
aad
pop
and
push
js
or
pop
mov
lret
xor
icebp
clc
inc
lods
out
cld
push
aaa
xor
imul
aam
mov
pop
repz
jmp
mov
dec
rcrb
insb
fcmovnbe
sub
das
cmpsb
cmp
jne
out
call
dec
call
sbb
dec
sub
out
lea
jecxz
arpl
jp
cwtl
cltd
insl
push
mov
sub
inc
xor
call
cmp
push
clc
pop
int3
pushf
fwait
cmpsb
jnp
inc
aas
fstl
stos
fcmove
jo
sbb
loopne
movsl
movsb
xor
jg
repz
fdivrl
les
aas
push
mov
jnp
shrl
jns
adc
cmpsb
mov
cmp
das
in
call
push
shr
in
insl
xchg
add
xchg
gs
jge
add
test
insl
adcl
xchg
cmc
add
mov
aam
pusha
mull
fidivl
mov
sbb
aas
aam
sbb
add
pop
scas
xlat
leave
dec
fistpll
add
movsb
mov
dec
cwtl
xorb
jl
xor
pop
dec
push
leave
in
mov
notb
cli
cmpsl
popa
xor
fcmovbe
push
push
clc
xchg
dec
imul
dec
lahf
sbb
lods
mov
mov
mov
shl
test
add
and
shrb
mov
std
into
ja
jg
pushf
cld
mov
std
loope
xor
negl
or
mov
adc
mov
xor
xchg
and
dec
or
adc
mov
iret
sbb
cmp
jecxz
cmc
and
pusha
js
hlt
ds
pop
cs
cmpsl
mov
pop
dec
xchg
hlt
mov
xlat
inc
push
or
add
dec
xlat
stos
ss
add
lret
pop
insb
mov
add
inc
adc
nop
cmc
js
rclb
lods
push
add
popf
inc
sbb
xor
aas
pusha
jns
push
mov
repnz
cltd
adc
jae
addr16
out
ds
mov
insb
out
xchg
mov
ja
jb
out
orb
push
sbb
sbb
les
pop
xchg
xchg
sub
cwtl
sarl
jbe
insl
lods
in
popa
aas
popa
test
xchg
and
mov
jmp
gs
xchg
mov
cmpb
mov
mov
adc
mov
lds
ds
dec
cmp
sbb
and
xchg
and
adc
sbb
shlb
xor
dec
xlat
adc
cltd
or
shrb
jnp
je
mov
and
mov
icebp
add
xor
xchg
xlat
insl
sti
test
cld
mov
cmp
add
pop
aas
mov
jno
jge
cs
out
iret
lahf
xor
in
pusha
nop
xchg
pop
jne
add
stos
dec
ljmp
movsb
inc
xchg
mov
movsb
dec
sahf
ljmp
push
sub
inc
sub
mov
sub
push
insl
test
pop
test
lret
fldt
push
out
dec
leave
pop
hlt
test
into
sarl
outsb
jbe
aas
insb
jo
jae
pushf
dec
add
pop
je
push
lods
shlb
out
or
popa
dec
aaa
clc
and
insb
ret
pop
mov
sti
sti
aam
or
adc
rcrb
push
js
lret
ret
je
cmp
cmp
cmp
decl
mov
mov
insl
mov
xchg
xor
das
or
jp
loopne
mov
sbb
adc
mov
push
xchg
ret
test
dec
jl,pn
hlt
jns
jae
rclb
cmp
stos
stos
sub
nop
fwait
movsb
scas
mov
je
and
sub
jbe
push
mov
sub
mov
lea
gs
xchg
mov
andl
in
mov
cmp
sub
mov
cli
push
inc
pop
int3
vpmacssww
negl
or
add
lret
jge
jp
sub
push
adc
sarl
daa
movsb
fistpll
ja
mov
je
mov
fmull
loopne
stc
push
pop
addl
pop
sbb
jo
mov
ds
lock
out
mov
in
pop
xchg
les
push
sbb
scas
mov
data16
fcmove
popf
and
lret
aas
push
push
les
mov
mov
and
dec
inc
mov
mov
into
mov
lds
mov
lcall
inc
inc
sub
push
xor
push
push
int
addr16
daa
int
fsubs
mov
std
inc
fidivl
cmp
adc
jmp
pop
adc
push
mov
mov
add
dec
cmpsb
inc
push
fists
and
ficoml
ret
out
out
xor
in
popa
pop
or
adc
mov
sub
xor
xchg
imul
movsb
rorl
aaa
andl
loop
loopne
faddl
sbb
test
cmp
orb
mov
inc
repnz
icebp
dec
mov
dec
in
decl
dec
in
mov
mov
lcall
xchg
rcrb
xchg
adc
out
imul
mov
lea
cmp
adc
cmp
das
mov
sub
int
cwtl
lds
pop
cmp
aas
adc
or
add
shll
mov
cwtl
pop
stc
cwtl
insb
in
outsl
cmpl
mov
xor
xchg
cmp
and
mov
out
push
fsubs
dec
mov
je
sub
pop
dec
adc
mov
jo
movsl
mov
jl
dec
ret
push
xlat
iret
cmc
add
cmp
jno
adc
mov
sub
pop
mov
lret
inc
call
test
dec
push
jmp
jge
enter
test
ljmp
mov
sub
inc
adc
sahf
mov
dec
pop
movsb
cmp
fs
add
dec
inc
aad
insl
call
xchg
icebp
mov
pop
mov
xor
jecxz
mov
aam
adc
nop
pop
shl
int3
push
jns
and
jb
adc
dec
and
stos
lret
cmp
jno
lret
lock
clc
ja
mov
jl
paddsb
gs
sub
daa
ja
dec
xlat
jg
movsl
daa
lret
cmc
in
push
sahf
jae
dec
sbb
mov
cmc
jmp
adc
sub
mov
mov
lahf
mov
in
mov
xchg
stc
shl
xlat
jno
pop
add
insl
xor
sub
jnp
cmp
das
out
add
jne
adc
xor
mov
dec
fstps
push
out
rol
fwait
das
aas
add
inc
lret
sub
jl
test
xlat
sub
ds
iret
jge
les
adc
xor
add
dec
mov
sub
sti
fdivs
add
hlt
sbb
das
dec
cmp
fucomip
jns
fiadds
pop
cli
push
aaa
jbe
test
movl
push
or
lret
les
lock
cltd
out
fwait
insl
insl
push
xor
xlat
add
iret
daa
test
pop
xchg
push
lock
mov
pop
sub
mov
add
fidivrs
fdiv
lea
data16
cmp
push
push
and
pop
xor
in
pop
cmpsl
lcall
in
xor
jle
dec
out
fbld
mov
mov
aam
jbe
jo
push
repz
cltd
mov
mov
cli
ljmp
add
add
loopne
mov
adc
xchg
outsl
out
sub
int
fwait
inc
pop
mov
gs
push
ja
inc
xchg
stos
dec
inc
lahf
lret
neg
push
adc
jne
repnz
in
je
adc
pop
and
loope
lcall
mov
ds
pop
xlat
pop
xor
dec
sub
bound
push
jnp
cmp
jne
mov
mov
aaa
xor
pop
fadds
sub
dec
push
incl
sub
subb
leave
sbb
or
inc
shll
imul
scas
sub
clc
adc
movsl
add
lods
push
push
fsubr
clc
sahf
jae
add
xchg
cld
nop
lds
icebp
call
jae
imul
jnp
repnz
mov
or
hlt
scas
insl
in
out
insb
and
mov
adc
pop
int
daa
lret
insl
mov
or
xor
or
xor
or
and
xor
imul
lret
iret
push
adc
pop
jns
jl
dec
stc
movsb
dec
push
add
nop
jnp
pop
es
cltd
mov
mov
pop
jbe
inc
shlb
adc
dec
fwait
ret
js
fs
hlt
dec
shlb
pop
ret
out
add
and
cli
mov
insl
dec
es
mov
cmp
out
push
and
xchg
int3
mov
jmp
aam
dec
test
clc
jmp
mov
add
pop
push
in
loopne
jge
inc
mov
mov
imul
add
sti
stos
push
xor
xor
negl
pop
jp
stos
icebp
cmp
push
out
push
outsl
movsb
fs
sbb
das
hlt
daa
xchg
in
sbbl
inc
rorb
add
mov
clc
fidivs
mov
xchg
mov
pop
fs
pop
push
xor
mov
jge
popf
mov
flds
cmp
aas
ds
add
fcomps
push
mov
adc
imul
push
sub
or
lret
pop
aam
sti
popa
outsl
sarl
imul
cltd
cmp
fs
std
xor
test
xor
dec
mov
sahf
push
loop
cltd
mov
cmpsl
aad
cmp
lcall
pop
test
sbb
jg
and
in
add
mov
sub
adcb
push
cmp
sbb
shrb
sbb
jg
gs
xor
ficoms
pushf
dec
mov
mov
shl
push
or
jb
test
stos
ljmp
jmp
inc
mov
movsb
daa
cmp
subl
cmpb
rcl
inc
sbb
xchg
sbb
dec
jno
imul
jl
arpl
and
pop
rorl
mov
arpl
push
push
pusha
sbb
dec
mulb
dec
dec
jb
mov
mov
mov
in
cwtl
inc
movsl
push
push
push
or
rorl
stos
adc
adc
clc
pop
sbb
mov
and
xor
into
stc
std
sub
js
bound
mov
pop
or
sub
repz
shlb
mov
sub
push
sbb
das
arpl
movsb
mov
sahf
popa
push
cmp
sub
cltd
cmpl
pop
js
cli
in
aaa
aad
pop
sbb
mov
sti
fmuls
stos
insb
mov
or
loopne
sub
addl
mov
pushf
int
loop
aam
movl
cmc
out
shr
addr16
push
and
inc
sub
sbbl
shufps
testb
mov
mov
sub
outsl
inc
pop
ljmp
fistpl
out
rol
push
mov
cmp
aad
cmp
stc
inc
ss
mov
pop
xor
outsb
xchg
jmp
push
movsb
mov
sti
mov
nop
sbb
lcall
sbbb
add
rorb
xor
test
jnp
or
fstpl
mov
pop
jbe
jmp
sbb
test
fstps
cltd
stos
jnp
fisttpl
cld
adc
icebp
sahf
and
fidivrl
idivl
push
sub
out
loopne
sbb
cmp
sub
sbbl
cmp
cltd
or
iret
and
shr
outsl
popa
xorb
sahf
mov
mov
add
popl
mov
ficomps
sub
ds
push
mov
jg
adc
sub
out
mov
sbb
std
xchg
sub
jbe
jg
xchg
xor
out
js
sub
jno
mov
xchg
xchg
out
inc
int3
inc
rcr
inc
mov
decb
hlt
sar
out
mov
fisubl
sti
pushf
lods
clc
push
jbe
jnp
lock
cmc
subb
stos
mov
sbb
hlt
pop
pop
fmuls
movsl
aaa
jmp
dec
push
lea
xlat
pop
dec
push
and
adc
inc
sbb
and
sahf
xchg
adc
mov
jp
lcall
xchg
pop
adc
lcall
mull
inc
mov
sarl
inc
sbb
out
mov
pop
push
call
cltd
mov
jecxz
lock
popa
popf
xchg
jmp
add
lret
mov
fldl
nop
and
lcall
xlat
xchg
jae
lods
dec
cmp
push
push
cmp
mov
call
jecxz
xor
popa
push
call
dec
dec
adc
push
movsb
dec
into
mov
xchg
test
adc
jle
pop
mov
aaa
out
inc
sti
out
or
and
mov
and
inc
icebp
xlat
test
mov
scas
in
gs
mov
daa
lret
jne
scas
stos
movsl
sti
push
push
ret
cmp
arpl
lods
pop
sub
xchg
sbb
nop
andb
cmp
sub
cmpsb
inc
sahf
or
js
in
and
adcb
sub
fbstp
sbb
enter
les
fidivs
mov
push
sti
add
xor
shr
imul
fwait
jns
push
dec
call
pop
int
mov
and
sbb
sub
or
dec
in
in
and
stos
shr
cmpsl
shll
in
jge
adc
int3
xor
mov
inc
lret
xchg
xor
sbb
adcb
xchg
mov
lods
or
lods
dec
ret
ljmp
push
lahf
dec
loopne
dec
cmp
cmp
push
ss
sbb
sbb
ss
mov
mov
mov
andl
jae
xchg
in
in
pop
jo
ja
imul
mov
push
insb
rcr
imul
nop
leave
gs
call
fsubs
mov
and
test
orl
or
push
or
test
push
pusha
cmc
in
ficoml
outsl
ja
cmp
mov
insl
cmp
aaa
push
sub
xor
mov
xchg
cs
xchg
and
dec
ds
inc
pop
adc
aad
fs
mov
leave
fldt
and
push
xor
mov
mov
idivl
cld
adc
out
sub
in
inc
adc
out
imul
popa
fmull
cli
subl
sahf
inc
mov
sbb
xchg
mov
xor
xchg
lds
lret
xchg
ljmp
jne
fmull
mov
push
mov
cmpsl
sahf
xor
jbe
pop
addr16
push
out
stos
cs
ret
mov
cmc
sahf
or
mov
jae
jle
test
fsubr
pusha
mov
push
xchg
fprem
or
mov
cmp
aam
insl
lds
push
mov
push
dec
andl
mov
es
je
rcll
mov
dec
xchg
xchg
jmp
les
popa
lcall
inc
xor
loopne
lea
adc
fucomip
inc
xor
inc
ret
sbb
loopne
sub
fistpl
lods
std
push
arpl
sbb
pop
pop
int
mov
fidivrl
mov
mov
push
lahf
and
cwtl
data16
jp
or
popa
sti
or
test
jno
jmp
cmpsl
or
sub
jl
pop
incl
data16
add
mov
push
movsb
loopne
xor
push
cmp
movsl
jnp
das
mov
data16
mov
enter
cmpb
fisttps
arpl
pusha
mov
sbb
mov
stos
and
outsb
push
mov
outsb
ss
ffree
jmp
push
inc
call
jns
xor
push
sti
lds
out
or
dec
mov
pop
outsl
mov
lock
mov
repnz
pop
cmp
shll
into
mov
lret
call
test
jp
mov
hlt
clc
lods
cmpl
or
loop
sbb
xchg
pop
bound
cmp
jmp
movsl
xchg
scas
rolb
arpl
jmp
mov
insl
dec
cmpsl
sbb
pop
inc
aam
test
push
sti
loop
divl
xchg
cmpsl
ret
mov
bound
sahf
mov
movsl
sbb
inc
in
xor
fisubrl
push
mov
scas
mov
pop
push
and
fidivl
dec
xchg
addl
not
lret
cs
adc
fucomi
inc
pop
mov
jns
std
sub
je
pusha
or
imul
loop
iret
cmpsb
dec
imul
les
repnz
ja
pop
xor
sub
jnp
mov
xchg
loopne
mov
shl
mov
push
fdivrs
aas
sbb
outsb
test
fdivl
dec
mov
xor
xchg
into
aad
scas
dec
mov
or
push
jns
mov
adc
data16
xor
cmc
xchg
xorl
movsb
insl
loop
mul
inc
out
adc
xchg
dec
sahf
cmp
mov
pop
outsl
rcl
pop
divb
idivb
in
call
ret
mov
stos
sub
fcmovbe
mov
hlt
test
je
inc
add
cld
inc
adc
imul
xor
imul
popf
mov
scas
cmp
mov
daa
aaa
mov
pop
xchg
mov
sbb
cmp
pop
fsts
loopne
jp
mov
ds
adc
dec
mov
cmp
jns
jo
rcr
cmp
xor
xchg
ljmp
jl
scas
insl
adc
cld
popa
push
je
out
loope
adc
mov
loopne
imul
cmp
mov
xchg
das
jno
xchg
mov
inc
add
xor
dec
mov
xor
scas
stos
jmp
ds
addr16
js
daa
jbe
sub
inc
adc
adc
cli
jecxz
aaa
sbb
xchg
scas
mov
sbb
sbb
lahf
cmp
ret
fnsave
sti
xchg
icebp
sub
daa
mov
add
nop
pop
and
adc
call
outsb
cmpsb
out
push
popa
sub
test
mov
xchg
push
jl
sub
sarb
inc
fistpll
xor
sbb
das
arpl
outsb
imul
push
mov
test
cmc
sub
xor
dec
sub
sahf
lcall
pushf
call
mov
call
ja
xor
outsb
fs
sti
fistpl
mov
sbb
xor
dec
shrb
sbb
rorb
xchg
jns
fstpt
push
aam
pop
pop
jg
or
lods
or
cli
add
iret
orl
inc
lods
cmc
shlb
mov
and
les
jl
movsb
and
or
jge
xor
lds
xchg
push
xchg
inc
push
movsb
jge
add
push
clc
arpl
nopl
ss
push
adc
cld
lods
js
outsb
mov
or
mov
fiaddl
xor
dec
sub
jecxz
sub
enter
stos
popf
std
xchg
xor
test
inc
xor
mov
in
mov
or
fisubrl
icebp
test
dec
xor
and
ret
sbb
in
out
xor
dec
or
xchg
mov
dec
push
fcomp
test
lock
or
dec
lcall
lret
sub
cmpsl
dec
icebp
push
cmp
sub
test
mov
inc
push
xor
pop
aad
push
adc
cmp
fdivrl
xor
adc
mov
pop
movsl
push
mov
xchg
adc
inc
cmpl
cmp
cmp
lea
andl
mov
int
adc
xchg
dec
lret
stos
mov
dec
add
lds
cs
push
daa
inc
inc
inc
bound
xchg
les
lret
or
out
mov
lock
sar
jmp
adc
mov
ja
xchg
movsb
lods
fisttpl
push
adc
dec
or
gs
in
cmp
mov
cmp
dec
inc
out
push
test
jno
in
or
or
xchg
ficoml
pop
mov
add
rclb
pushf
adc
dec
dec
sbb
mov
aas
ss
test
pushf
test
mov
push
jo
adc
lea
int
pushf
cmp
fstps
inc
cmp
aad
imull
movsb
loop
imul
rorl
dec
mov
dec
push
shrl
jnp
outsl
jle
in
addr16
mov
sbb
or
xchg
mov
inc
pop
fbstp
mov
jns
dec
add
cld
jb
ret
or
and
sbb
cmp
push
ret
sahf
es
cmpsl
jb
ret
rcll
cmp
jns
lahf
in
pop
xchg
xor
mov
jnp
pop
xor
pop
sbb
sbb
popa
ret
mov
ja
adc
movsb
sahf
push
or
loopne
test
sub
enter
xchg
std
ja
sbb
sub
xchg
rcl
repnz
add
sub
ds
loope,pn
jno
mov
insl
sub
test
scas
dec
cmc
cmp
fiaddl
jl
sub
sbb
cltd
mov
pop
xlat
sbb
mov
jns
mov
cld
add
mov
inc
push
ljmp
test
jo
sbb
mov
out
inc
or
mov
shll
fsubr
fiaddl
loope
mov
or
dec
out
mov
xor
adc
stos
adc
int
sahf
xchg
jmp
iret
rorl
test
jbe
mov
sub
mov
fcomip
es
jl
sar
dec
cvtps2pd
imul
mov
push
rorb
pop
pushf
mov
cmpsb
rclb
lahf
xor
scas
out
mov
test
lret
mov
scas
ljmp
popa
ret
loop
sub
adc
in
xchg
aas
outsl
cltd
cld
call
imul
push
and
fidivs
push
push
sbb
sub
stc
lods
cmp
test
dec
jae
outsb
jb
mov
aas
mov
sbb
rorl
test
jno
sub
mov
test
pop
mov
inc
cmp
mov
lahf
das
xchg
mov
hlt
add
imulb
ljmp
or
nop
xor
mov
out
jmp
xor
jmp
lds
jge
jae
pop
add
cmpsb
xchg
push
insl
jge
pop
sahf
iret
push
fcmovnb
xchg
adc
popf
pop
jb
add
xchg
inc
jbe
sbb
cmpsb
adc
cmp
pop
push
mov
and
inc
sti
data16
ficoms
cmc
sbb
and
and
fistps
sahf
aas
sub
jge
adc
sbb
or
lret
leave
jae
pop
negb
mov
mov
test
stos
push
iret
mov
inc
add
in
jle
mov
add
and
xlat
out
push
sub
and
dec
idivl
dec
xor
in
aas
fildl
jbe
adc
nop
ljmp
fcompl
in
test
dec
jns
test
in
fimull
cmp
push
jb
jns
and
push
mov
fwait
sbb
clc
inc
nop
sbb
rcr
inc
lahf
iret
loop
aam
sahf
stos
js
sbb
movsb
cmp
or
imul
loopne
sbb
jle
adc
enter
xor
dec
movsb
js
jmp
cwtl
mov
inc
pushf
xor
cli
jnp
inc
add
ffree
int
mov
jns
cli
addr16
sbbl
push
or
mov
sarb
pop
lods
subl
in
movsl
in
cld
rcrb
or
push
std
mov
adc
add
loopne
cmpsl
cmpsl
int
lret
lds
inc
pop
sbb
dec
test
insl
cmp
xchg
repnz
jns
add
pop
adc
and
mov
jp
cmp
jp
and
push
sub
cltd
inc
cmp
dec
mov
sub
sarb
adc
sub
inc
or
stos
mov
mov
enter
les
pop
pushf
mov
mov
pop
mov
ficoml
rcl
adc
jmp
mov
pmullw
dec
es
icebp
inc
testb
packsswb
fwait
jge
sub
aas
fs
jmp
xor
xchg
xor
or
movsl
gs
xchg
jns
sarb
lret
cmpsl
sbbb
xchg
sbb
iret
jne
mov
push
mov
push
ja
ret
lock
mov
lea
inc
jo
sbb
les
iret
adc
push
pushf
aas
shl
sub
sub
fnstsw
xor
inc
dec
addr16
pop
test
repz
test
sub
popa
clc
jmp
fwait
pop
hlt
aam
loop
out
scas
out
pop
sbb
inc
push
add
sub
pusha
mov
sbb
cli
and
mov
inc
ja
decb
xchg
inc
sub
out
and
addr16
cmp
mov
les
in
or
xor
xchg
cmpsl
iret
sbb
push
test
add
fwait
int3
cmc
wbinvd
fprem1
cld
sbb
outsl
insb
jne
xchg
push
push
jge
lahf
pop
inc
lret
je
mov
outsl
or
call
and
out
jge
xchg
loop
mov
dec
mov
fiaddl
push
pop
xor
mov
push
and
pushf
xchg
ds
movsb
jnp
or
adc
movsb
mov
inc
sbb
xchg
inc
xchg
xchg
stos
pop
out
arpl
xchg
ss
mov
pusha
fisubs
cmp
pop
mov
scas
shl
mov
fdivs
inc
iret
pop
ja
jb
cmp
daa
loopew
das
mov
scas
adc
imul
and
mov
jmp
sbb
jl
into
push
xchg
inc
cmp
sub
mov
stos
push
mov
mov
test
sbb
std
push
addr16
loopne
push
or
cmp
sbb
pop
xor
adc
pop
insl
inc
cmp
dec
lret
mov
inc
test
movsb
or
int
ja
cmp
xlat
cltd
rol
xchg
pop
nop
test
data16
xchg
cwtl
jge
mov
insl
sbb
xchg
shr
xchg
out
mov
dec
enter
repz
out
adc
iret
pop
das
das
loopne
mov
sbb
call
sar
les
leave
mov
es
fiadds
fstl
ret
std
mov
arpl
pusha
outsb
inc
jmp
mov
test
movsl
or
pop
adc
movsb
pop
inc
or
aas
cmc
cwtl
js
ja
add
pusha
xor
rorl
shrl
pop
lcall
aad
and
xchg
jnp
test
sbb
pop
int
scas
insb
stos
test
inc
adc
and
fisubrs
aas
outsl
lods
jg
sub
push
notb
push
int
mov
rorl
or
pop
jecxz
dec
adcl
push
imul
fimull
testb
push
insl
inc
pop
add
pop
push
adc
or
scas
aam
sbb
aaa
sub
push
mov
sub
lret
aad
pushf
mov
mov
add
negb
jle
dec
jmp
aas
std
xchg
jmp
jo
jb
es
daa
cs
or
mov
cmp
scas
imul
ret
cmpsl
out
pop
mov
dec
fldenv
lret
dec
mov
leave
dec
pop
sets
fstl
mov
fsubrp
push
sahf
or
orb
std
cmp
inc
ror
and
jmp
and
rcll
lahf
add
lods
out
lds
ds
mov
aam
or
sbb
ds
cmpb
js
leave
pop
pop
loope
or
stc
or
cmp
xor
jl
lea
scas
lahf
aaa
push
mov
mov
movsb
mov
dec
or
data16
ja
pusha
mov
jmp
test
jle
sbb
pop
xchg
jmp
inc
cli
sub
fisubrs
pop
call
jl
rcr
sub
inc
aam
sub
jnp
mov
xor
jmp
movsb
ret
gs
push
sub
push
dec
xchg
add
test
push
test
int3
ffree
adc
out
cmpsb
xlat
out
add
cwtl
pop
jmp
xchg
out
mov
clc
xchg
xchg
jge
dec
insl
mov
push
xor
int3
sub
sub
sbb
xor
enter
inc
mov
iret
sbb
iret
mov
mov
in
movsl
daa
pop
dec
iret
mov
fistpll
notb
or
ljmp
arpl
rclb
daa
add
adc
stos
mov
jmp
mov
pop
mov
xlat
into
popa
cmc
clc
movsl
test
push
fcmovb
mov
ss
addr16
loopne
in
sti
adc
clc
lock
lods
sbb
mov
sub
adc
ljmp
xchg
xchg
and
sub
stos
xor
dec
pop
dec
fsts
incl
add
test
movsl
cltd
cltd
pop
cmp
or
fisubs
ficoml
pusha
test
push
sub
cmp
push
in
pop
daa
es
dec
sub
push
push
pop
je
adc
loopne
adc
and
ret
cmc
xor
cmc
or
adc
cmp
andl
lods
push
loop
xlat
push
xor
les
mov
and
lock
jecxz
sbb
mov
ss
mov
and
divl
jae
mov
cmp
or
push
push
out
mov
push
adc
jecxz
mov
adc
aad
daa
inc
out
repnz
and
imull
add
push
push
jb
int
rorl
mov
fidivs
lea
adc
mov
and
sbb
aam
addl
cmp
out
cli
mov
mov
inc
push
out
jmp
add
push
mov
inc
and
lds
sub
mov
jmp
adc
push
jne
jg
push
clc
lcall
pop
pop
jmp
cmp
cli
out
gs
out
push
xchg
jns
lret
repnz
dec
mov
out
popa
dec
cmc
cmp
push
sub
jg
sub
xor
ror
and
cmpsl
cmp
xlat
cs
push
hlt
push
inc
push
xchg
cs
into
jb
jmp
fldenv
xchg
out
rolb
xor
repz
pop
cmp
jp
pop
gs
popf
inc
dec
mov
idiv
push
dec
xchg
dec
cmpsl
pop
fs
sarb
push
sub
iret
pusha
mov
stos
rorb
inc
and
sub
outsl
pop
pop
fwait
rorb
mov
into
pop
arpl
cmp
insb
imul
add
pop
sub
jb
mov
sub
jle
cwtl
fisubl
add
mov
out
or
mov
frndint
jg
add
jg
inc
mov
dec
inc
push
mov
pop
push
rolb
fldl
scas
xchg
inc
in
std
out
adc
dec
or
mov
mov
inc
imul
sub
and
clc
loop
xchg
sbb
fs
cmc
rorb
insb
xorb
loope
imul
dec
sub
xor
cltd
mov
add
cwtl
loope
mov
adcl
in
dec
sbbb
rorb
rorl
xchg
lahf
test
inc
dec
repz
jge
push
sahf
cmpsl
xchg
andl
mov
pop
int3
mov
xor
mov
add
gs
dec
scas
pop
fnstcw
popf
outsl
sub
cltd
shlb
or
adc
or
mulb
push
dec
jb
mov
add
scas
daa
jne
add
loop
rclb
adcl
es
and
pop
pop
push
dec
nop
xchg
mov
xor
xor
push
xchg
rorl
pop
nop
pop
push
cmc
add
in
pop
loopne
into
pop
daa
push
arpl
flds
jnp
mov
je
pushf
ret
leave
cmp
jmp
pop
int3
andb
js
add
pop
neg
sub
imul
jnp
out
add
rcrb
stos
test
iret
test
lock
push
pop
popa
sub
js
mov
nop
ds
mov
in
loop
jg
nop
or
icebp
les
jno
test
lret
and
jle
pop
cmpsb
sub
cmp
fcmovu
clc
push
stc
inc
mov
icebp
mov
xchg
mov
jae
bound
xchg
insb
sbb
out
cmpsl
cmp
mov
xor
sub
shll
dec
movsl
sub
cmp
and
xchg
adc
dec
and
adc
stos
push
lock
and
push
dec
cmp
subb
nop
jns
insl
mov
ss
rcll
mov
subl
daa
adc
xchg
xor
push
data16
cli
sub
fiaddl
inc
lcall
inc
in
das
loop
shr
lahf
popf
in
adc
pop
or
xor
push
pushf
int3
test
rol
push
inc
sub
dec
fbld
xor
cs
push
ljmp
mov
mov
mov
imul
pop
lea
imul
out
fsub
or
and
mov
sbb
repnz
subl
xchg
add
aaa
adc
lahf
int3
xor
mov
xor
pop
xor
mov
or
cltd
stc
ret
roll
or
add
inc
popa
das
xorl
mov
mov
arpl
fmulp
cs
insl
cltd
add
push
push
ficompl
mov
sbb
mov
lods
or
xor
xchg
jno
inc
popf
pop
popf
fistps
cli
testl
nop
fsub
gs
mov
pushf
push
mov
fisubl
xlat
sbb
dec
ss
mov
jnp
and
sahf
cmpsl
xchg
cmpsb
loop
cmc
push
push
sub
mov
frstor
ljmp
das
imul
mov
aaa
jmp
lds
int3
jmp
bound
fs
sti
cmp
shl
xlat
and
lret
data16
xchg
andb
lods
inc
lock
add
mov
or
sub
stos
add
mov
sbb
cmp
push
adc
cmc
cmpb
xlat
xchg
cld
mov
in
test
movl
int3
stos
inc
pushf
xor
inc
cld
add
cwtl
sahf
inc
push
pop
iret
test
mov
daa
bound
jg
jnp
and
xor
lret
adc
daa
mov
stos
xchg
popf
adc
or
add
les
ret
or
mov
call
sbb
mov
inc
hlt
xchg
lret
out
out
dec
xsave
adc
mov
sub
andb
mov
push
pusha
mov
sbb
push
enter
jae
and
adc
out
outsb
fcoms
out
insb
ss
lds
jmp
sahf
cmp
mull
repnz
in
cmp
adc
push
inc
push
jecxz
in
fisubs
fdivr
lods
clc
stos
or
pop
or
sub
inc
cli
pop
mov
and
push
push
mov
jg
aaa
rolb
int
bound
xchg
lret
je
add
add
movsb
in
scas
aas
add
dec
adc
adcl
xchg
outsb
cmp
rcr
aas
loop
push
push
xchg
movl
hlt
das
dec
scas
subb
adc
push
lcall
arpl
sbb
mov
xchg
out
pop
dec
call
xor
sub
inc
push
pop
jp
divb
adc
sub
push
jns
popa
push
dec
jg
testl
fsubp
dec
lods
std
cld
mov
outsb
sbb
test
js
jns
sbb
inc
pop
loope
arpl
cltd
cs
xor
xchg
iret
cmpsl
cmp
cli
in
aad
in
fimull
repz
lret
and
and
stc
mov
shl
sub
mov
mov
clc
mov
mov
rcrl
adc
icebp
jne
out
aaa
inc
cmp
aaa
lods
orb
xchg
sbb
xchg
stos
mov
aad
enter
shlb
jg
test
or
flds
out
popf
call
push
push
jne
adc
push
fsubrs
ret
jl,pt
lcall
sti
xchg
fcomip
or
xchg
jae
cwtd
dec
jb
mov
test
add
pop
lds
xor
and
jmp
pop
ds
out
mov
xor
mov
incb
jae
mov
sub
mov
sub
add
inc
bnd
and
cmc
adc
aas
sbb
sbb
aaa
pop
adc
xchg
shrl
or
loopew
pop
in
jnp
mov
inc
dec
jb
fidivrs
xchg
pop
dec
sub
xor
fcompl
popf
mov
arpl
ljmp
dec
insl
pusha
test
pop
aaa
das
shlb
lahf
jae
mov
jp
rorb
insl
lds
mov
shr
mov
mov
es
sub
daa
fistpl
jle
push
leave
mov
adc
sub
lret
mov
xor
push
push
jne
add
aad
scas
sbbl
shll
and
push
add
mov
out
mov
push
cli
inc
sbb
pushf
jae
mov
je
lret
push
test
jg
pusha
dec
dec
loop
mov
push
add
and
pushf
sbb
push
int
sub
sub
push
les
and
ja
xor
xor
xchg
insl
outsb
lret
ljmp
mov
dec
mov
in
int
mov
and
cmp
mov
xor
clc
jmp
sbb
mov
popa
or
mov
iret
push
add
sbb
and
or
pop
pop
incl
adc
bound
dec
rclb
sbb
adc
loope
idivb
jae
outsb
imul
push
jle
pop
ds
xchg
add
roll
adc
sub
cmp
stos
pushw
adc
cmc
call
es
push
out
clc
dec
test
lahf
adc
repz
loope
data16
mov
push
cmp
or
add
sub
xchg
xchg
cmp
dec
adc
sub
mov
dec
sub
pop
pop
mov
add
xchg
cmp
pop
ja
iret
pop
xor
rcll
xchg
orb
push
cmp
movsb
xor
out
insb
loop
inc
jge
mov
loope
push
enter
adc
mov
pop
xchg
or
pop
iret
or
lock
mov
test
mov
test
aaa
and
add
sbb
inc
dec
imul
fildll
mov
mov
mov
fst
insl
aad
in
pop
dec
cli
xor
pop
xchg
clc
mov
mov
sahf
test
je
cs
aad
fmul
jle
jae
jp
es
test
sub
push
push
addr16
sbbl
dec
outsl
mov
roll
sub
leave
mov
ljmp
jns
and
sub
or
jns
ret
mov
sub
or
aad
sbb
jns
test
mov
jg
mov
je
cltd
addr16
inc
and
jge
cli
hlt
jl
inc
pop
inc
loope
in
fcompl
imul
std
xor
push
push
fnstsw
rcrb
adc
adc
int3
xchg
insl
fcoml
scas
xorl
and
adc
xchg
xchg
mov
mov
mov
shl
push
mov
add
jecxz
dec
ljmp
nop
mov
mov
pushf
lods
push
push
push
jle
pop
sahf
mov
imul
imull
xchg
dec
adc
inc
jnp
cld
xor
outsb
outsl
cmp
inc
out
das
xor
dec
and
cld
ja
inc
and
mov
out
sub
mov
mov
bound
adc
push
nop
sub
les
cs
call
testb
sbb
pop
loopne
leave
push
dec
xchg
repnz
sub
mov
adc
jbe
das
rcll
jns
loopne
clc
sub
mov
popa
rcl
jg
dec
rcl
daa
call
popf
sbb
cltd
data16
inc
in
or
mov
mov
arpl
cmp
hlt
push
push
je
je
dec
lock
sbbb
rcr
movsl
leave
cwtl
adcb
or
push
xchg
and
rorl
mov
xor
jne
and
aas
lods
add
or
das
loopne
adc
mov
shlb
jle
lds
mov
arpl
bound
jmp
das
jge
adc
xchg
sbb
pop
test
dec
mov
xchg
repnz
in
xchg
ljmp
lock
mov
dec
aam
das
int3
daa
mov
mov
movsb
xor
cmp
mov
xor
fnstsw
int
jnp
outsl
mov
sbb
push
add
gs
push
rolb
mov
xlat
jge
cmp
push
cld
or
mov
dec
movsl
mov
dec
push
inc
push
inc
cli
imul
lea
push
sbb
dec
mov
mov
fsubrl
loop
cmp
cli
xor
push
cli
mov
ficompl
popa
imul
das
faddp
push
pop
shlb
sbb
xlat
push
jg
push
ja
pop
inc
mov
pusha
add
mov
sub
cmpsl
loop
ud1
test
icebp
pop
es
add
test
rorl
add
js
cs
push
pushf
dec
pop
xchg
cmp
sub
adc
xor
fldl
das
cld
mov
popa
insb
inc
cltd
pop
cmp
pop
ss
daa
and
sbb
out
pop
cmpsl
inc
or
mov
mov
and
xor
leave
das
fimuls
mov
icebp
cwtl
push
dec
xchg
stc
xor
mov
mull
out
jne
negl
aam
push
xor
ret
inc
cmc
cmp
ss
loopne
lahf
fbstp
popl
into
lds
cmpsb
mov
insb
sbb
pop
cmc
jnp
stc
push
cmp
push
enter
pop
xchg
xor
lds
insl
leave
add
in
inc
bound
rorl
xchg
inc
lock
bound
mov
flds
sub
jo
or
add
jmp
cmp
fcoms
add
dec
imul
mov
jno
fstl
dec
cmp
outsb
cs
fucom
fmull
add
in
and
pop
popf
add
lock
sbb
scas
cmp
pop
sbb
rclb
pop
jecxz
jle
xchg
roll
cmp
and
pop
cmp
les
test
dec
fwait
adc
mov
add
xlat
add
inc
jmp
inc
data16
gs
sbb
sbb
mov
pop
shrl
inc
cmp
or
cmp
lret
dec
jmp
push
sub
hlt
cmp
push
ret
sbb
outsl
mov
adc
inc
jl
enter
xchg
nop
inc
in
hlt
adc
ss
ret
ret
mov
outsl
mov
fistps
stos
push
inc
in
and
mov
or
popa
xor
or
repnz
inc
push
cmp
push
push
bound
mov
sub
int3
fstp
outsb
jbe
loop
mov
jne
and
popa
jp
adc
call
xchg
jbe
mov
mov
sub
movsb
mov
jmp
jb
int3
arpl
stc
insb
flds
adc
or
jp
or
lods
aas
movsl
adc
dec
inc
dec
scas
adc
add
mov
lahf
and
aam
test
ret
dec
add
iret
mov
mov
or
hlt
sbb
dec
scas
xchg
rol
notb
mov
xchg
add
push
xor
hlt
dec
pop
adc
xchg
loop
cmpsb
lds
cmp
mov
rcrl
lcall
lock
iret
fists
jge
inc
jbe
mov
xchg
clc
lods
stos
test
outsl
mov
cmp
lock
aaa
or
xchg
xor
ret
loop
dec
je
inc
dec
xchg
cltd
arpl
ret
mov
stos
dec
enter
call
js
push
repnz
ss
ss
adc
xor
inc
dec
popa
xchg
pop
sbb
loopne
faddl
jecxz
pop
add
pop
pop
or
clc
xchg
jo
mov
insl
enter
in
ret
xchg
mov
jge
movsb
popa
mov
stc
mov
adc
call
outsl
not
aas
imul
or
xchg
mov
sub
xchg
addr16
jb
aad
pop
stos
roll
pop
aam
lcall
test
add
fimuls
and
stos
push
stc
push
add
lcall
test
notl
ret
mov
stos
xor
mov
sbb
dec
mov
adc
fsin
mov
out
sub
inc
ja
and
sub
mov
jae
pop
imul
pop
notl
test
lret
or
mov
inc
lret
jno
jg
dec
sbb
sub
inc
push
adc
adc
outsl
inc
gs
sub
cmp
movsb
fildll
xchg
fcompl
pushf
ficompl
sarb
inc
lahf
jne
push
icebp
pop
fldt
sub
add
mov
icebp
push
stos
jno
adc
push
xchg
jl
sbb
out
ds
pusha
repz
and
in
gs
mov
adc
push
xchg
pop
bound
scas
xchg
xor
aas
inc
cmp
mov
shr
and
xor
jbe
xor
cmc
xchg
dec
push
mov
mov
adc
or
out
dec
cmp
and
sbb
test
loopne
cmp
notl
arpl
dec
mov
rorl
adc
loope
insl
cmp
push
imul
pushf
inc
dec
push
add
movsb
xlat
mov
xor
pop
pop
cld
cmp
test
pop
and
rorl
insb
movsb
push
pmullw
popf
mov
push
mov
aam
iret
test
sbb
js
in
mov
jb
xchg
mov
dec
push
add
dec
pop
or
shlb
pop
mov
jmp
pushf
addr16
out
imull
pop
mov
aas
dec
cmp
and
je
nop
pop
lcall
addr16
lret
mov
mov
xor
int3
rcr
jb
out
fisubrs
ja
popf
adc
and
mov
push
pop
pop
mov
addr16
lahf
or
stos
repnz
mov
cmp
inc
mov
xchg
insb
xlat
test
adc
cmp
iret
enter
es
aad
mov
cmp
push
arpl
cs
outsb
ret
loope
push
je
xor
jge
mull
jle
adc
adc
mov
or
gs
and
fstps
cmpsl
cmp
mov
push
jbe
cld
iret
js
int
dec
lcall
stc
cmp
jae
mov
mov
cltd
or
push
inc
sub
cmp
ret
and
mov
aaa
hlt
jmp
rorl
scas
js
arpl
ss
inc
mov
repz
stos
sarl
mov
mov
pop
sbb
mov
mov
outsl
mov
jne
jae
cmpsb
adc
cld
xchg
pop
lock
and
arpl
jb
adc
imul
dec
jb
and
jl
push
cmpxchg8b
leave
mov
adc
xchg
out
mov
fcom
clc
test
pop
mov
cwtl
push
push
cltd
inc
mov
adc
subb
pop
mov
test
popa
and
cmc
sub
daa
ret
cmp
sub
incb
push
xchg
enter
stos
sub
or
adc
sbb
icebp
scas
mov
jno
leave
sbb
ret
cmpsb
sbb
int3
lret
jae
mov
inc
or
sub
mov
out
dec
mov
push
mov
jns
inc
inc
xor
push
dec
aam
ja
lods
mov
in
push
xor
mov
xor
mov
ljmp
das
or
out
and
out
gs
in
into
fstl
sbb
inc
cmp
stos
mov
pop
mov
negb
sbb
mov
loopne
or
daa
ja
xchg
xchg
sbb
mov
in
rcrl
in
std
mov
xchg
in
repnz
aam
mov
and
int
fstps
lds
xor
xor
mov
jl
adc
aas
sbb
mov
daa
mov
into
ja
mov
stc
insb
xchg
jge
inc
cltd
fidivl
rolb
sub
stos
pusha
xor
push
push
insb
and
jecxz
xor
jge
pusha
pop
ljmp
cmpsb
inc
jp
int3
adc
mov
xor
into
pop
subl
mov
mov
or
int3
sub
es
mov
call
jecxz
lods
dec
lock
nop
pop
add
jecxz
movsb
notl
jo
add
xchg
cmp
jle
mov
fsubl
and
out
sub
fstl
mov
imul
push
in
jae
data16
pop
insb
jbe
xchg
or
out
addr16
aad
jns
or
push
sub
push
insb
mov
loope
xor
icebp
inc
push
jmp
jp
push
addr16
adcb
dec
cmc
out
jp
jp
fisttpl
stc
xchg
insl
lods
xor
cmpl
and
dec
mov
mov
arpl
cmp
cltd
in
cmp
adc
mov
stc
inc
or
sar
lods
push
add
pushf
lcall
lahf
setle
shrl
mov
add
sahf
repnz
lods
inc
out
mov
in
dec
sahf
cld
lods
rorl
lock
out
sti
fidivrs
cmp
pop
push
or
aaa
dec
xlat
cmpsb
cs
xchg
ret
jl
jecxz
nop
adc
xchg
sbb
stos
lods
mov
dec
add
xchg
inc
sub
pop
ds
insl
mov
cmp
inc
sbb
in
push
scas
pop
pop
jns
clc
loope
sub
inc
cmp
jg
jle
xor
fmul
insb
push
ret
mov
cmp
int3
xchg
gs
pop
cld
out
mov
sub
sbbl
cmc
jns
sbb
loop
push
stos
add
in
inc
or
cli
jge
sub
movsb
xchg
test
sbb
xor
movsl
out
and
sub
inc
out
inc
les
mov
decb
retw
xor
xlat
or
les
pop
push
or
cmp
push
mov
xor
subb
adc
sti
insb
mov
movsl
cmc
rcl
aad
xchg
or
adc
enter
movsb
xor
leave
sbb
lods
js
cmp
cwtl
jecxz
into
nop
push
fs
mov
ja
gs
and
cmp
cltd
jp
sub
subb
lods
pop
mov
nop
push
jle
cmp
xchg
imul
sbb
or
popf
imulb
add
mov
mov
les
pop
test
adc
orl
pop
mov
in
sub
stos
loope
lret
inc
iret
push
cmpsb
mov
jg
pop
jmp
ljmp
add
and
insl
leave
fstpt
scas
lahf
dec
sbb
sbbb
jb
xchg
dec
mov
add
sub
ljmp
mov
scas
loopne
loop
sbb
mov
mov
cmp
loop
pop
loope
lock
pushf
int
lret
je
lds
out
pop
sub
or
mov
sub
loopne
cmpsb
fnsave
lret
rolb
lret
out
int
xor
loop
mov
jg
rcl
scas
xor
push
sahf
stos
fdivl
and
dec
xor
adc
je
les
insb
jno
push
stc
lds
insl
add
add
inc
ljmp
movsb
pop
jg
add
cmp
cs
aad
add
inc
cwtl
pushf
inc
nop
ficoml
pop
lret
fildl
test
es
pop
rclb
loopne
jb
outsl
and
inc
cmp
movsb
dec
pop
sbbl
xor
inc
jo
pop
xor
mov
fsubl
jge
or
xchg
in
adc
ja
rclb
movsb
xor
mov
sub
out
sub
add
push
icebp
jmp
int3
sbb
add
cwtl
fwait
rolb
aad
cwtl
xlat
hlt
push
out
lret
xor
cmp
insb
incl
ret
sbbb
sbb
mov
jmp
out
dec
mov
jno
lods
jmp
jno
in
mov
mov
mov
xor
xor
std
or
test
negb
test
bound
ret
mov
xchg
icebp
push
mov
dec
cltd
std
xor
pop
jg
lret
lahf
jl
mov
xchg
jg
jge
pop
andb
xor
inc
scas
ds
xchg
fildl
pop
mov
ljmp
loopne
aad
lret
hlt
inc
ficoms
pop
aad
flds
push
sub
cs
pop
mov
fwait
scas
bound
repnz
inc
push
fidivl
lcall
loop
and
pop
sbb
sub
mov
ss
gs
mov
ffree
sbbb
adc
pop
dec
into
mov
mov
out
jae
and
mov
jo
icebp
jo
pop
imul
or
jl
sub
sbbl
scas
std
cmp
cltd
or
pop
call
insb
outsb
inc
pop
cmp
jge
xchg
pop
push
stos
lcall
loope
clc
jno
jge
mov
cli
push
into
pop
cmpsb
xor
sar
pushf
outsb
cmp
adc
mov
xor
es
push
dec
outsb
aaa
movsb
adc
ss
insl
es
cld
push
and
stc
lret
push
shll
test
push
sbb
inc
flds
pop
loope
test
or
push
inc
addr16
xor
pop
xlat
push
jge
mov
push
adc
inc
ja
xchg
lret
add
push
sahf
cmpsb
and
adc
loop
fstpt
dec
pop
cmpsl
rcrl
js
add
cmpsl
dec
adc
xor
js
repz
stos
fisttps
pushf
dec
dec
cltd
lods
mov
lods
loop
lods
mov
enter
mulb
test
push
xlat
fwait
dec
sbb
xchg
dec
fwait
aad
fnstenv
pop
or
ljmp
cmp
mov
pushl
cmp
pop
insl
pop
rorl
mov
pusha
mov
sub
or
mov
jmp
pop
or
bound
ss
je
jo
xchg
dec
xchg
cld
fsub
mov
int3
push
jl
xchg
out
mov
inc
fstpl
pop
xchg
in
push
insb
shll
cmc
popa
dec
inc
lret
mov
push
inc
jecxz
movsb
mov
shufps
inc
popf
bound
repz
cmc
mov
test
or
adc
jnp
bound
or
movsl
repnz
imul
xchg
aaa
jo
and
loope
mov
or
and
mov
fmuls
push
stc
test
xor
aaa
lcall
or
sbb
sbb
sbb
ss
adc
popf
fs
add
in
shlb
mov
outsl
sbb
fucomip
cli
cwtl
jnp
pop
and
adc
xlat
loop
jp
push
fstps
mov
pop
push
cmp
xor
addl
nop
mov
push
in
fcom
mov
or
push
xor
inc
and
push
mov
xor
mov
loope
les
lret
ljmp
outsl
jp
hlt
xchg
dec
movb
cld
test
mov
fisubs
mov
xor
cmp
dec
imul
dec
push
jge
cwtl
cmp
push
add
into
je
fnstenv
scas
jns
pop
cmp
mov
cmp
addl
rorb
push
cmpsl
adc
cmpsl
call
pop
clc
fs
cmp
adc
sub
stos
dec
outsb
ret
cmp
insw
mov
imul
inc
pop
cmp
jo
lea
test
arpl
lea
test
jb
nop
movsb
repz
adc
xor
scas
xchg
xor
sbb
jecxz
or
inc
cmp
or
lret
es
inc
addl
xchg
sahf
add
out
sub
fcoml
dec
imul
dec
and
inc
fstp
cs
xchg
xor
cmp
repz
mov
adc
fcoms
lock
mov
sbb
mov
dec
aaa
fists
out
ja
mov
push
mov
out
sub
cmp
xor
scas
pop
mov
sbb
pop
xchg
dec
mov
push
cmp
test
sbb
je
pop
cltd
test
adc
jne
push
rcl
lods
jne
jmp
push
lock
adc
inc
insl
xchg
mov
mov
cmpsl
fwait
and
sbb
push
xor
xorl
jnp
fwait
sbb
jg
jp
outsl
loope
popa
sub
dec
inc
mov
push
outsl
test
shrl
clc
pop
out
pop
or
adc
fidivs
lcall
ja
imul
adc
xor
sarb
cmpsl
ja
pop
loop
ljmp
sbb
js
push
addb
cld
rcrb
mov
mov
adc
sub
mov
fidivrl
jbe
gs
insb
xchg
push
aas
pop
mov
xor
cli
out
in
lcall
pop
jmp
mov
loop
dec
les
les
xor
or
dec
clc
add
fldl
pop
pop
mov
mov
fsubl
xchg
arpl
cs
pop
sbb
push
andb
push
inc
jge
mov
dec
mov
cltd
popa
sbbb
inc
push
add
jnp
lock
in
push
pusha
sarl
cmp
pop
mov
mov
stos
stos
in
or
mov
ret
mov
es
or
xlat
int
lods
mov
add
test
cli
sbb
adc
mov
jno
xchg
mov
popa
adc
out
arpl
mov
mov
dec
loope
cld
mov
jb
das
sbb
test
jge
jno
lods
popa
fucomp
aaa
stc
jle
inc
mov
and
push
fisubs
movsl
cmp
lret
fsubrs
fildl
pop
pop
push
scas
push
add
scas
cmc
jge
cli
mov
lahf
and
or
iret
test
pop
or
cmc
fldenv
sbb
lret
lea
cli
cli
xchg
arpl
fwait
xor
scas
cmp
xchg
pop
add
int3
push
loop
aas
mov
mov
mov
int3
sbb
pop
cmp
mov
out
mov
mov
int
out
loopne
sbb
jmp
xchg
pop
and
cwtl
mov
std
daa
sub
cli
hlt
mov
repz
jmp
push
jmp
int3
cwtl
aas
push
lods
movsl
add
push
cld
xchg
addr16
jb
adc
adc
iret
test
inc
add
test
test
dec
sub
mov
ljmp
pop
xchg
inc
pop
add
adc
rorl
fwait
je
aam
and
inc
or
xchg
je
enter
dec
test
sbb
mov
lods
ljmp
inc
test
mov
push
cmpb
stos
rcrb
je
cli
insl
mov
rcr
dec
push
test
enter
xchg
popa
hlt
test
das
enter
push
push
push
repz
gs
mov
stos
arpl
test
cmp
fcmovne
cmp
or
jnp
push
fsubr
sbb
jle
cld
push
incl
jl
xchg
mov
rclb
cltd
test
je
dec
adc
popf
inc
xor
fwait
stc
jno
pop
scas
mov
sub
cmp
adc
fidivrs
lahf
mov
mov
xchg
sbb
das
into
pop
xor
xchg
inc
dec
mov
sti
dec
pop
loope
ret
fdivl
popa
mov
jmp
cmp
into
push
popa
sbb
cli
das
int3
push
into
lret
cltd
mov
dec
sub
in
cmp
add
dec
mov
sti
sub
in
cmp
mov
xchg
loop
nop
xlat
outsb
mov
and
mov
and
inc
push
xchg
xlat
stos
leave
mov
and
push
notl
shrb
inc
or
pop
xchg
inc
je
and
repnz
dec
jecxz
hlt
cmp
fstps
push
fnsave
test
dec
out
test
jl
in
push
mov
jne
ret
lods
int
adc
pop
pop
pop
push
pop
insb
push
add
dec
cs
sub
dec
mov
test
roll
call
add
and
mov
pop
or
test
pop
iret
popa
int3
cmpsb
mov
add
test
sub
test
jnp
fs
xor
mov
push
pop
dec
icebp
jle
push
lcall
enter
cmp
stos
inc
leave
lds
inc
test
or
call
sub
jmp
fs
cmc
testl
mov
pushf
xor
hlt
inc
pushl
int3
pop
jb
imul
pusha
mov
and
dec
xchg
sbb
es
mov
rcl
xchg
loopne
movsl
in
insl
loop
push
cli
cmp
pop
scas
js
mov
movsb
sti
lret
xchg
ret
stos
les
cltd
mov
lret
adc
mov
or
xor
ffree
ljmp
cmp
aas
adc
or
rcrb
and
jp
hlt
sub
xchg
pop
jbe
pusha
mov
or
jae
dec
inc
push
out
testl
mov
adc
test
lcall
lret
lods
notb
mov
pop
out
fiadds
fs
ss
insb
stos
shl
insl
and
data16
aas
stc
mov
das
pop
inc
fs
mov
pusha
lret
test
fcmovu
or
jne
lock
insb
mov
dec
fwait
add
or
cmp
adc
cmc
push
pop
sarl
jnp
cmpsl
lods
xorl
inc
notb
adc
mov
or
fwait
sar
aaa
jno
pop
lock
pop
mov
cmp
push
and
adc
jp
ljmp
stos
pop
lcall
out
daa
xchg
iret
aad
xor
incl
pop
pop
call
push
aam
push
pop
dec
and
push
mov
adc
rolb
fs
xor
ficoms
mov
xchg
sub
xchg
leave
jne
xor
loop
adc
je
mov
dec
pusha
int
jmp
ret
jo
subb
lret
cld
cmp
mov
scas
xor
cwtl
in
mov
mov
sub
cmpsb
sub
and
mov
icebp
fs
popf
sub
lods
xor
flds
inc
test
movsl
scas
aas
inc
shr
lock
xorb
inc
out
and
push
and
daa
lods
repz
in
xchg
pop
or
mov
cmp
jg
out
nop
fstpt
scas
mov
push
jl
je
sub
addb
xor
iret
mov
mov
loopne
jge
sbb
and
mov
cmpsb
imul
sbb
cmc
inc
xor
movb
sar
or
sbb
jnp
pop
shll
sahf
js
xchg
adc
cmpsl
addr16
outsb
shlb
dec
xor
mov
shrb
jnp
inc
push
enter
es
pop
lea
insl
xchg
fwait
adc
xchg
dec
and
cmc
imul
inc
repnz
pop
ss
xchg
mov
test
dec
flds
mov
cmp
dec
hlt
loope
pop
cmp
aam
mov
pop
push
pop
ss
cmp
cld
push
xor
mov
sbb
stc
icebp
icebp
pop
repnz
cwtl
adc
rcrb
jge
inc
and
xor
or
mov
mov
push
into
mov
popa
jmp
mov
ret
add
fwait
pop
into
push
decb
mov
inc
fdivs
out
xlat
pop
pop
dec
out
leave
inc
test
shrl
icebp
dec
pushf
cmp
nop
adc
repnz
andl
mov
push
inc
push
xchg
shrb
sbb
or
mov
scas
scas
mov
movsb
into
and
rcrl
movsb
fsts
dec
jg
push
fs
xchg
mov
cs
push
add
addl
inc
cli
iret
scas
lods
aas
lods
in
xor
stos
push
icebp
fnsave
jecxz
cmp
jnp
or
mov
fs
stc
out
hlt
vmread
out
hlt
sbb
push
pop
adcl
ret
push
rcll
dec
dec
lret
ljmp
or
add
push
addr16
lgdtl
das
arpl
lret
jnp
lcall
pushf
in
add
dec
push
scas
jae
callw
jne
outsb
inc
xor
or
nop
bound
jno
add
iret
gs
lret
add
cld
xor
jb
jmp
jge
std
push
pop
pop
sub
fsubp
dec
mov
push
outsb
lret
lods
rcrl
cwtl
lds
adc
dec
cli
gs
sbb
or
mov
aad
dec
test
aad
stos
out
pop
lea
shl
out
jle
hlt
fwait
mov
cmp
xor
loop
jg
out
push
inc
clc
sub
xchg
fidivrs
test
push
cmove
insb
sbb
cwtl
push
jmp
enter
push
inc
out
mov
jg
jge
cmpl
or
inc
imul
cltd
xchg
lock
daa
pop
fisttpl
and
fnstsw
cmp
cwtl
or
sbb
jns
loopne
and
pop
aad
sbb
loopne
loop
in
repnz
cltd
jecxz
push
sub
das
outsb
inc
test
pop
aas
pop
mov
stos
mov
iret
mov
mov
dec
sub
sbb
addb
lcall
fldenv
addl
xchg
out
sti
push
pop
fwait
sbb
filds
mov
mov
jno
and
cwtl
sub
xlat
pusha
mov
dec
fldt
xchg
outsb
clc
dec
daa
outsb
xor
les
dec
push
lret
adc
rcrl
repnz
fwait
mov
fsubs
add
lods
mov
push
xchg
fnstcw
cmp
push
rcrb
aas
lahf
bound
lods
sub
mov
cmpsb
cmc
scas
lahf
mov
add
in
pop
js
jbe
xchg
js
adc
shld
push
ss
jl
mov
sub
inc
inc
dec
jmp
mov
xlat
pop
dec
push
mov
cmpl
jg
aaa
dec
aaa
hlt
inc
cmp
fbld
jp
and
sub
loopne
aaa
lret
mov
je
into
in
dec
add
or
out
fisttpl
ret
jle
rorb
adc
inc
jl
psrld
dec
stos
jle
fldl
pop
pushf
out
pop
jne
jg
xor
sti
sub
jle
jecxz
ja
loop
scas
dec
xchg
and
cmp
imul
repnz
psrlq
mov
call
sbb
pusha
je
mov
shl
stos
dec
adc
mov
out
push
out
push
pop
cltd
push
fstps
roll
in
mov
lea
rcrb
cltd
movsb
inc
mov
push
sti
mov
mov
sbb
push
adcl
xchg
test
popa
insl
add
stc
lahf
sub
dec
stos
and
mov
push
dec
mov
mov
pop
stc
ret
pop
sbb
rcr
pushf
popa
sahf
fldl2e
xor
mov
in
fld
xchg
decl
insl
loopne
sahf
add
out
mov
test
cwtl
test
subl
mov
ss
jb
push
in
out
rorb
fbstp
ror
cmp
push
enter
mov
fldenv
jecxz
dec
xor
in
adc
mov
lea
xchg
daa
mov
int3
mov
push
iret
faddl
jmp
ja
lea
cmpsb
jl
mov
cmpl
idivb
jl
cmpsl
sbb
scas
adc
sub
shll
push
adc
mov
movsb
ret
test
test
ds
inc
repz
shll
add
add
push
xor
inc
shlb
jb
xchg
inc
aad
fsts
inc
mov
xchg
jne
rorb
mov
dec
stc
xlat
cld
sar
aaa
inc
fisubs
push
mov
mov
call
mov
push
sbb
daa
pop
dec
cmp
bound
push
shlb
lret
hlt
hlt
jg
cmpb
mov
adc
idiv
inc
jecxz
xchg
cmc
ret
jbe
xor
mull
pop
adc
fidivrs
sub
pop
rcll
jge
mov
mov
sti
pop
insl
cmp
cli
pop
sub
add
es
in
mov
mov
jecxz
ds
nop
jp
push
add
cmp
mov
popf
ja
fisubrl
adc
adc
fsubrs
jb
add
push
xchg
xchg
bound
sub
sbb
push
dec
cld
out
fwait
mov
repz
cwtl
out
mov
sbb
cmpsb
shrl
sarl
sbb
or
or
ja
imul
xchg
sbb
nop
push
fbstp
das
into
ret
adc
mov
pop
add
scas
mov
dec
or
xor
mov
mov
faddl
mov
fisubs
push
and
addr16
je
rorl
inc
xorb
orb
dec
xor
sub
cmp
out
mov
rcrl
jle
xchg
xor
inc
arpl
adc
ret
xchg
aaa
pop
sbb
sbbl
dec
aaa
aas
cmpsl
xor
clc
ja
sub
cmc
or
sub
and
mov
add
mov
cmpsl
icebp
lcall
test
pop
pop
inc
inc
insl
xor
fnstsw
jg
mov
add
in
inc
mov
inc
clc
xor
xchg
cmp
pop
int3
jge
sbb
cmpsb
mov
inc
mov
sbb
iret
cmpsl
jo
int
add
lods
fsubs
lcall
daa
out
pop
xlat
jo
scas
push
loopne
lret
addl
push
in
gs
lret
divl
int
dec
mov
or
fsubp
ffree
ss
icebp
icebp
and
rcl
repnz
lods
adc
gs
sbb
pop
pop
lods
shl
mov
jmp
inc
in
into
push
sub
pop
jg
std
inc
lcall
movsb
loope
leave
iret
sbb
popa
adc
sbb
mov
addr16
fimuls
pop
icebp
jp
fists
mov
ja
cmp
aaa
nop
mov
sub
stos
fisttps
out
sub
das
jnp
sahf
inc
sbb
dec
rcrb
push
mov
pop
xchg
push
adc
xor
and
lods
mov
xor
test
jnp
orl
pop
dec
adc
outsb
lds
out
shlb
loope
mov
pop
xor
mov
loopne
mov
in
std
icebp
fs
fsubl
adc
loopne
popf
rorl
lds
or
push
in
test
fsincos
lods
nop
cltd
rol
movsl
adc
mov
mov
mov
repz
cwtl
ffreep
push
push
lock
sub
xor
mov
stc
jge
idivl
test
ret
pop
sbb
pushf
push
xlat
push
lds
orb
in
in
ljmp
lods
xor
and
sahf
pop
ljmp
out
jl
stos
fsubrs
mov
push
out
mov
std
or
cli
lods
add
fisubrl
xchg
sbb
pusha
lods
fdivs
mov
sahf
mov
sub
cmp
sbb
sub
cld
js
in
add
popf
adc
iret
ffree
icebp
addl
add
bound
shll
in
adc
pop
iret
cmp
scas
movsl
test
pop
fistl
adc
pop
popa
cmpsl
xorl
ja
fs
mov
mov
int3
sbb
jnp
aam
test
mov
andl
js
xor
lods
std
inc
insb
mov
and
xchg
lcall
xor
inc
lods
push
out
xchg
cmp
lock
ret
jno
dec
xor
icebp
loopne
xchg
inc
and
sub
hlt
nop
or
xchg
fistl
test
cmp
jmp
fnsave
xor
fbld
xchg
sub
xchg
xor
pop
out
cmp
jno
into
add
mov
sub
mov
push
shll
sub
lods
mov
dec
out
dec
push
aam
push
cmpsl
nop
add
push
mov
dec
ficompl
pop
xchg
out
jns
fcmovnu
sbb
or
pop
rcll
sub
stc
mov
clc
mov
mov
rcrl
xlat
dec
dec
mov
or
iret
adc
xchg
ljmp
stos
in
fbstp
pushf
mov
fidivs
mov
xchg
aad
neg
jo
xchg
scas
lret
movsl
pop
pop
lahf
out
jp
lret
fsubs
jle
cltd
imul
adc
dec
and
xchg
or
cmp
bound
sbb
inc
inc
adcl
mov
mull
aad
mov
pop
mov
or
sbb
push
and
mov
ja
mov
sub
lahf
or
imul
mov
lds
scas
ljmp
mov
inc
push
rorl
out
mov
push
fisubrl
jae
icebp
pop
sbb
mov
inc
adcl
loopne
fnclex
jle
cmp
push
ja
sar
sbbl
shrl
pushf
cmp
sub
sub
jecxz
or
dec
movsl
adc
sub
sub
rorl
fildl
cmp
cltd
jg
or
pop
mov
push
daa
adc
imull
int3
pop
outsl
adc
daa
push
xor
or
out
mov
into
andb
push
mov
xchg
sub
jge
inc
mov
sbb
mov
jae
pop
cmc
or
out
daa
adc
mov
test
jnp
adc
lret
push
mov
and
sbb
ss
fsub
dec
cmp
rorl
mov
xlat
loope
add
mov
mov
sarb
aad
or
jecxz
adc
lea
jbe
aas
clc
jg
out
mov
testl
out
rcrb
fisttps
mov
in
ds
dec
mov
icebp
mov
stos
ss
add
std
imull
inc
pop
pop
lcall
ret
in
push
int
xlat
lea
es
push
les
dec
xchg
out
jnp
rorb
ljmp
mov
call
add
cmpsb
sub
sbbb
sub
stc
bound
arpl
test
imul
sbb
rol
pushf
sahf
gs
lcall
imul
jle
fcoml
add
push
mov
pop
ret
sbb
enter
jmp
xor
test
xchg
mov
call
shld
sub
inc
sahf
push
cmp
sub
xchg
test
pop
movsl
sbb
and
mov
add
sbb
bound
into
cmp
js
es
mov
enter
push
in
mov
clc
mov
push
dec
enter
enter
or
fstpt
or
pushf
lods
cltd
fisttps
cmc
xchg
shll
test
jne
pop
es
mov
scas
push
push
js
sahf
push
jne
in
ret
inc
punpcklbw
je
dec
xchg
xor
cld
test
and
xor
test
xor
fdivrl
pop
icebp
push
pop
in
sub
mov
mov
movsb
cmp
mov
divl
pop
mov
xor
and
mov
inc
cld
xchg
and
push
lret
jmp
out
xchg
int3
test
mov
pop
pop
push
xchg
mov
sbb
add
fstl
cltd
push
push
or
stos
andb
or
add
pushf
and
cmpsl
cmp
nop
mov
shll
sub
rcl
pop
dec
inc
sub
test
mov
gs
add
pop
nop
sub
cmc
and
insb
out
dec
js
sub
xor
adc
movsl
fsub
in
aaa
sbb
and
jp
rcl
mov
push
xchg
fsubrl
jnp
out
mov
push
xchg
pop
jl
stc
rcr
sub
sbb
lea
repz
inc
add
sub
repnz
jle
out
sbb
and
push
fstps
mov
mov
jl
movsl
mov
inc
or
lahf
push
sbb
aaa
fnstsw
es
dec
xchg
lds
jne
imul
pop
cmp
add
pop
lret
imul
clc
jmp
pop
mov
dec
pusha
xchg
aad
jg
stc
push
and
jno
inc
jo
jp
scas
call
sbbb
out
xor
idivb
or
jmp
cli
cltd
stos
mov
pop
cmp
cmp
mov
in
and
lret
movsb
stos
pop
mov
cltd
dec
inc
sbb
jle
xchg
icebp
sub
inc
xor
in
and
jle
inc
in
fsts
ficoml
mov
gs
sti
mov
sbb
clc
std
jge
mov
mov
and
push
and
pop
mov
jns
cmp
jae
push
std
cld
mov
arpl
icebp
bound
and
cwtl
and
fldenv
sbb
test
int
movsb
psraw
scas
arpl
mov
aaa
mov
adc
pop
sahf
push
pop
add
sbb
mov
xchg
rcrl
sub
xorb
pop
inc
cli
inc
wbinvd
aas
jle
cmp
aam
pop
insb
hlt
add
into
cltd
jp
lcall
fldl2t
inc
jmp
and
xchg
mov
mov
fimuls
sbb
shrl
jle
fwait
shll
sbb
mov
test
rcrl
or
mov
imul
inc
hlt
inc
inc
mov
cs
jl
sbb
cltd
pop
adc
inc
fdivs
enter
sbb
daa
pop
fisubrs
sbb
xchg
pusha
dec
dec
pop
mov
js
pop
decb
xor
and
int
lcall
leave
adc
lds
adc
pop
xor
call
fbstp
sub
lock
mov
pop
adc
popa
shll
sbb
sti
pop
mov
test
in
sub
mov
pop
dec
movb
xchg
into
inc
popf
mov
cmp
pop
ds
repnz
outsl
xor
lret
lcall
stos
push
cmp
jbe
or
mov
sub
sbbl
pop
adc
pop
incl
dec
aas
inc
cmp
stos
lret
xchg
mov
enter
fcoms
jae
xchg
pop
std
sbb
daa
in
scas
and
dec
stos
add
mov
mov
insb
cmp
ljmp
stos
mov
into
in
fistps
std
rcrb
cmpsb
pop
pop
cli
mov
xor
and
mov
aas
push
mov
xor
or
mov
mov
or
out
data16
pop
mov
push
push
rcll
dec
and
sbb
mov
in
lret
xor
cmpsl
and
out
mov
pop
mov
movsl
mov
je
repnz
add
mov
popf
shr
ljmp
leave
sub
jmp
aaa
and
ja
mov
loop
sbb
in
loop
movsw
xor
pop
xor
scas
test
call
mov
or
push
jge
adc
ljmp
cmpsl
mov
fdivl
mov
push
pop
cld
test
loope
inc
lods
into
str
or
call
and
jno
gs
push
stos
fcmovu
xchg
xchg
bound
cltd
pop
mov
iret
xor
add
mov
jle
push
xlat
mov
dec
push
test
je
adcl
push
cld
sub
add
lods
xchg
gs
test
shll
cmpsb
jae
mov
jnp
test
mov
lcall
inc
imul
xchg
pop
xor
add
push
mov
sbb
int
sbb
sbb
mov
jbe
sarb
mov
sub
add
gs
call
mov
flds
ds
xchg
inc
fucompp
fcos
sarl
lahf
ljmp
xor
xor
jns
jae
test
movsb
or
xchg
sbb
sub
inc
repnz
inc
fwait
notl
nop
inc
pop
sub
lods
jo
inc
or
cmp
or
mov
repz
ss
cli
xor
push
ret
insl
out
mov
mov
out
mov
dec
and
sahf
repz
jl
sbb
popa
ss
fwait
pushf
pop
mov
jb
inc
or
sub
in
daa
xorl
pop
mov
xor
xor
push
dec
enter
push
jg
jbe
inc
aad
and
jle
movsl
cmpsb
mov
repnz
inc
xchg
notl
adc
jmp
pop
shll
aas
mov
dec
and
movsl
lcall
outsl
xor
loop
and
cmc
dec
mov
sbb
mov
mov
cmp
jo
popa
addr16
repz
mov
lea
cwtl
and
pop
pop
addb
les
push
xchg
adc
fldenv
cli
jbe
jecxz
cli
mov
xchg
fwait
inc
movsl
orl
xchg
stos
mov
pop
lods
outsb
bound
dec
xor
ror
push
clc
fistpll
int
xor
mov
jo
fnsave
fdivr
ljmp
cmp
jl
adc
mov
mov
pushf
inc
iret
sub
mov
arpl
push
iret
jne
aam
mov
push
sub
lahf
es
mov
mov
sbb
and
xor
mov
jno
ja
cmpsb
pushf
hlt
inc
das
and
cmp
mov
mov
pop
push
pop
mov
or
pusha
mov
mov
jl
sbb
mov
xchg
or
sub
lret
cmc
jbe
jb
pop
sarl
push
sahf
iret
leave
add
call
rcrb
mov
sbb
mov
push
push
int3
in
cs
out
xor
out
clc
sbb
ret
mov
adc
gs
push
outsl
or
cli
psubq
cmpsl
sub
or
mov
mov
jmp
dec
icebp
inc
pop
pushf
cltd
inc
add
push
xor
push
mov
imul
push
test
ret
aam
xchg
inc
sti
rcl
int3
cmp
cld
dec
xchg
loopne
cmp
mov
orb
inc
jl
mov
inc
and
adcb
scas
into
sti
sub
jb
das
inc
xor
emms
xchg
cmp
movsl
ret
adc
test
and
jbe
inc
pop
xor
loop
decl
add
mov
pop
push
pop
xchg
or
pop
sbb
sub
lock
cmpsl
sub
fs
xchg
out
xchg
loop
sbb
and
cmp
test
add
jbe
insl
es
iret
out
jecxz,pn
mov
or
pop
lret
lret
inc
aas
in
xlat
stos
push
outsb
mov
push
lahf
std
push
sub
push
in
scas
cmc
enter
scas
cmpsl
pop
sub
inc
inc
mov
add
jnp
cmpsl
sti
mov
hlt
or
mov
adc
sub
mov
mov
adc
in
lods
loopne
pop
popf
or
mov
inc
pop
xchg
or
mov
ljmp
ficompl
jl
jge
les
insl
fstl
and
sbb
lret
daa
rcr
into
mov
pop
fwait
outsl
je
mov
xor
jns
je
iret
jbe
fdiv
push
mov
dec
mov
mov
mov
sub
push
stc
mov
push
xor
loop
mov
movsb
fcmovnu
sbbl
xchg
imul
les
or
std
mov
pop
or
push
sahf
out
xor
adc
fs
sub
idiv
ficoml
jmp
out
push
mov
sbb
ret
test
js
jnp
jp
jnp
mov
ret
sub
vpminsw
sbb
sub
arpl
popf
leave
insl
mov
cmp
scas
adc
cld
stos
call
jns
in
dec
into
inc
sub
push
pushf
popa
ljmp
mov
leave
rorb
fldcw
jmp
dec
or
inc
into
pop
test
xchg
cmp
ljmp
jmp
push
sub
lcall
iret
repz
sti
rcll
sub
pushf
dec
mov
sub
dec
cmpsb
aam
xchg
jl
jg
data16
cmp
addb
popf
rorl
mov
outsl
jno
daa
mov
xlat
pushf
inc
sbb
outsl
and
adcb
mov
cmpsb
insb
sti
inc
cmp
pop
mov
mov
jle
lods
int
mov
les
lods
or
mov
sbb
js
adc
cwtl
sub
iret
iret
mov
cmpsl
hlt
jmp
mov
popf
dec
mov
cmc
shrb
and
in
gs
aam
cltd
sbb
fwait
or
cmp
imul
subb
cmp
mov
movsl
shrl
dec
popf
mov
insl
dec
adc
ret
lret
ret
xchg
mov
jg
cmpsl
test
adc
stc
nop
fbld
xor
sbb
loopne
popf
aaa
adc
push
ret
pop
pushf
das
faddl
cwtl
fdecstp
sarb
sub
movsl
inc
sub
cltd
in
mov
inc
xchg
lret
hlt
pop
xchg
add
xchg
inc
fldt
jle
out
cmp
jb
jne
bound
mov
jmp
mov
lock
mov
jecxz
loopne
clc
inc
xchg
addb
shll
cltd
fldl
in
adc
out
loope
mov
cli
scas
lea
ss
jo
jp
adc
dec
fwait
jle
scas
sbb
cmc
and
push
xor
xor
out
inc
adc
pop
in
or
pop
insl
or
mov
or
nop
loop,pn
adc
std
mov
movsl
and
ret
ds
add
add
test
jo
push
xor
xchg
maxps
icebp
jns
mov
loopne
call
movsb
push
push
mov
lea
stos
add
xor
push
inc
pop
pop
xchg
xchg
push
sahf
testl
inc
adc
push
cltd
fdivs
arpl
mov
in
sub
mov
ds
cmpb
pushf
mov
cmp
leave
or
inc
add
nop
loopne
js
popa
push
aaa
stos
push
and
adc
lock
inc
and
scas
les
mov
iret
lds
and
mov
dec
inc
ror
clc
loope
cmc
sbb
andb
mov
xor
mov
sbb
mov
push
inc
xchg
ds
adc
dec
inc
fiaddl
xchg
sbb
out
dec
dec
and
pop
in
js
andb
mov
movsl
dec
ret
test
inc
push
sub
jle
mov
orl
mov
push
mov
and
stos
arpl
fldenv
xchg
rcrl
ret
out
mov
inc
daa
sub
sarl
movsl
insl
jno
mov
int3
mov
cltd
movsb
xor
cwtl
mov
push
fcoms
ja
xchg
movsb
mov
js
cwtl
cltd
inc
pushf
mov
imul
jge
inc
dec
ret
loop
jecxz
imul
icebp
sub
push
cmp
fcompl
ds
outsb
ret
cwtl
call
cmp
add
fcoms
mov
pushf
in
loop
pop
dec
mov
or
xchg
stos
pop
inc
jge
mov
adc
jnp
data16
fisubl
ljmp
push
mov
or
pop
sub
test
into
ds
movl
aas
lahf
cmp
push
shll
ja
pusha
jnp
in
cltd
int
loop
not
mov
stos
mov
or
aad
mov
popa
cmpl
jo
ja
nop
shll
dec
addr16
mov
cwtl
sub
pusha
sti
cmpsl
xlat
push
mov
shlb
iret
int
or
and
mov
xchg
mov
adc
pop
cvtps2pi
mov
test
pop
fdivp
loopne
or
pop
add
call
lahf
sub
addl
int
sbb
jp
xchg
adc
xor
push
fcomps
fstpt
jp
push
xchg
pushf
mov
rorl
fmull
rorl
negb
jne
mov
das
fidivrl
jecxz
stos
sti
repz
loop
jl
sub
mov
punpckhdq
fldt
mov
frstor
cwtl
cli
jbe
rcl
xchg
cs
and
or
inc
mov
rcrb
into
cmc
push
jb
out
into
arpl
push
xchg
push
in
cmp
or
push
ja
inc
call
mov
lret
scas
jno
push
lret
testl
scas
xlat
nop
ret
xchg
addr16
arpl
mull
fbstp
mov
add
xchg
inc
or
popf
sar
arpl
pop
call
sbb
ljmp
sub
jnp
add
pop
push
adc
push
mov
das
or
add
aaa
mov
jge
mov
test
pop
inc
lcall
or
and
dec
shlb
dec
cld
and
cld
jmp
add
mov
inc
dec
xlat
or
cmpl
insb
mov
and
in
pop
fisubrs
xor
mov
gs
es
mov
inc
inc
std
scas
icebp
ret
pushf
and
add
je
and
mov
fidivrs
inc
adc
fisubs
jp
xchg
aas
or
mov
int3
mov
push
inc
cmp
mov
ds
cld
std
repz
nop
cmc
loope
inc
pop
fs
in
ret
mov
data16
cs
cmpb
lcall
insl
pop
jbe
xchg
jns
mov
cmp
and
mov
push
xchg
or
in
scas
ficompl
and
jbe
sub
loop
pop
hlt
mov
les
imul
cwtl
sti
dec
xor
aas
or
dec
dec
incb
mov
movsb
scas
jle
pop
and
shrb
ret
jl
sbbl
mov
orb
and
mov
ds
in
mov
or
sub
iret
xchg
or
mov
sub
push
ljmp
mov
inc
lock
sub
xlat
pop
pusha
and
and
sbb
adc
and
or
dec
cmp
mov
sahf
in
sbb
test
adc
daa
jp
pop
test
mulb
jns
jne
hlt
testl
push
ret
leave
lahf
js
push
sarb
sub
mov
cmp
cmp
in
hlt
or
and
call
jmp
icebp
push
add
std
rcrl
and
cmp
mov
adc
movsb
in
cmp
jne
rcll
mov
push
fbld
mov
xchg
pop
jae
push
adc
lock
xor
push
das
ljmp
inc
mov
enter
sub
lret
dec
mov
jno
mov
jge
pop
icebp
pop
xchg
int3
xor
enter
pusha
xor
or
pop
push
mov
mov
pop
outsb
push
adc
lea
pop
lods
shlb
pop
push
loope
mov
push
out
push
rorb
mov
jg
cmc
int
or
sub
aaa
jb
imul
rorb
mov
fwait
arpl
stc
scas
mov
adc
arpl
stc
pop
mov
mov
call
movsl
pop
cmp
jmp
sub
mov
test
ret
out
inc
inc
sti
in
xor
lahf
xchg
hlt
push
mov
or
scas
pop
shlb
mov
push
and
sti
and
fcoml
sbb
jns
sub
lcall
mov
push
cmc
pop
push
rcll
jle
mov
push
lods
xchg
sub
or
nop
std
ss
add
fiadds
scas
mov
jmp
pop
cli
mov
jg
repnz
mov
inc
sahf
cmpsb
cmp
stc
sub
cli
xchg
push
shrl
jno
imul
imul
lock
in
jae
inc
pop
add
test
dec
jb
leave
rorl
lea
mov
clc
int
les
sbb
lock
sbb
jb
ljmp
mov
inc
fadd
out
inc
repz
jp
fildl
push
push
add
lock
fistpll
leave
xor
fldt
cmpsb
pop
jg
aad
xor
push
cld
lock
addr16
dec
push
imul
sbb
sbb
dec
dec
lea
movsl
push
xchg
sbb
add
ja
jp
mov
push
xchg
sub
sub
push
push
mov
pop
fstpt
xchg
xchg
push
inc
cmpsb
push
cli
iret
popf
jno
fldenv
push
xchg
cmpsb
iret
xor
ret
insl
out
mov
mov
add
outsb
fbld
cmp
sahf
xchg
xchg
xchg
iret
call
cmovle
jo
dec
leave
inc
inc
sub
rolb
aaa
daa
sbb
lods
mov
cmp
shlb
cwtl
pop
pusha
xor
adc
jecxz
xor
sub
pop
and
pop
adc
dec
shl
jo
mov
jb
fisubrl
fnstenv
sub
lods
push
sub
cwtl
popa
cmpsb
add
and
push
cmp
mov
cmpsb
jmp
mov
fs
movsl
aad
fidivrl
nop
inc
add
cmp
lea
insl
cwtl
pop
lret
add
mov
cmp
sbbb
cmp
jmp
lahf
mov
mov
add
aam
sub
dec
push
pop
cmp
dec
mov
cld
scas
mov
adc
lret
xchg
in
ret
dec
std
cmc
cli
dec
sub
mov
and
sub
lea
cs
aaa
push
scas
xchg
jp
mov
inc
jns
pop
psubsb
xchg
popa
imul
push
mov
test
repz
addr16
push
shr
xchg
xchg
mov
sbb
fisttpll
nop
cwtl
mov
pop
movsl
inc
loope
mov
xchg
lret
pop
or
cmp
fcmovbe
mov
mov
xchg
stc
pusha
scas
popf
mov
push
xor
icebp
mov
das
ror
pusha
xor
mov
iret
imul
push
and
insl
out
fsubrl
and
pop
pop
cltd
addr16
sub
and
add
add
ret
push
fadd
push
xor
ss
aam
iret
cmp
jle
fs
inc
xor
sahf
adc
lods
scas
mov
leave
inc
push
mov
fidivrl
fnstenv
add
push
js
mov
mov
adc
xor
xor
insl
lcall
je
imul
andb
aam
and
nop
xchg
lods
in
add
jnp
cmpsl
leave
jbe
outsl
jl
push
popf
fwait
inc
outsl
sarb
mov
sub
pop
ja
pusha
add
sbb
cmp
mov
insb
or
xchg
nop
jno
inc
add
ror
cmp
mov
jo
add
dec
fildll
dec
push
sahf
ret
sub
aad
daa
xchg
and
idivl
jnp
adc
int
mov
mov
or
mov
std
mov
jns
rorl
lods
mov
add
mov
mov
mov
push
lods
cmp
jo
rcll
cmp
xor
std
or
int3
std
xor
andb
fstl
pop
xchg
inc
cmp
jno
pop
pop
stc
in
mov
mov
xchg
dec
dec
or
mov
jg
ja
cli
rorb
adc
out
xor
lret
inc
push
cmp
repnz
or
pop
push
adcl
mov
and
je
stos
out
lahf
dec
mov
xor
adc
sbb
push
es
insb
ljmp
jecxz
mov
int
mov
into
jae
outsb
or
sub
inc
and
jecxz
mov
outsb
ds
fnsave
mov
in
rclb
cld
ror
or
into
ds
xor
xor
add
mov
imull
mulb
mov
inc
or
push
lahf
fldenv
shrb
mov
xchg
outsl
mul
jnp
cmc
mov
add
icebp
jo
lods
inc
pushf
mulb
packsswb
push
rol
and
loope
or
jbe
dec
pop
push
mov
ljmp
cltd
push
mov
add
std
daa
cmpsb
inc
fwait
js
aam
aaa
and
push
push
pop
dec
fimuls
adc
adc
cmp
ljmp
mov
mov
jne
rcr
mov
sub
and
mov
dec
xchg
or
push
pop
gs
es
cmp
sub
ljmp
push
rcr
mov
stc
out
imul
xor
icebp
inc
shlb
mov
repnz
jne
enter
jmp
xor
das
sbb
dec
jae
lods
and
pop
adc
out
cwtl
sarl
ja
inc
jno
test
and
jl
lret
dec
mov
insb
pop
arpl
push
dec
lods
sub
jo
mov
movsl
and
out
dec
add
hlt
mov
jbe
fisubs
xchg
cmp
lret
int3
xchg
das
stos
mov
andb
fisubrl
popa
cmc
hlt
mov
hlt
mov
nop
jne
and
pushf
aam
mov
daa
ja
push
int3
lods
shl
rorb
inc
jb
mov
and
mov
and
into
sub
addr16
inc
lods
mov
push
push
outsb
mov
sbb
pop
lahf
mov
xchg
notl
fistpll
xchg
or
mov
pop
fldt
xchg
out
jo
jnp
or
popa
mov
popf
repz
inc
leave
and
imul
jnp
sbb
sti
pop
jo
jl
inc
push
stc
adc
nop
lret
lcall
xchg
pop
leave
insl
push
js
mov
mov
pop
mov
in
iret
fwait
movsb
data16
and
dec
add
std
out
out
subb
movsb
in
lahf
push
rorl
loope
dec
adc
mov
dec
aam
jecxz
repz
jbe
sub
or
aad
mov
or
lahf
mov
cmpsb
nop
pop
inc
mov
outsb
insb
dec
lds
pop
push
xor
mov
cli
int3
adc
cld
js
mov
dec
in
fsub
mov
sbb
xchg
mov
sub
push
je
out
adc
fldl
mov
mov
jmp
pop
fbstp
or
cs
loope
pop
out
mov
adc
testb
inc
loopne
jmp
pop
pop
insb
inc
sbb
sti
mov
cmovge
and
push
or
inc
push
mov
int3
lods
outsb
mov
cltd
pop
push
pop
adc
les
int3
xor
inc
mov
mov
push
cmc
jns
sbb
dec
pop
scas
dec
fists
out
xchg
jl
jmp
mov
mov
mov
xchg
pop
push
imul
xchg
nop
mov
or
lret
fmuls
inc
cli
and
into
es
mov
cmc
xor
jge
imul
test
orb
frstor
inc
out
add
push
adc
push
es
xor
pop
cmc
xor
cmp
jne
and
adc
jne
int
inc
popf
imull
mov
dec
faddp
pushf
jge
add
pusha
dec
and
imul
cld
pop
mov
xchg
push
or
xchg
mov
lret
out
popf
das
and
fists
enter
xor
xor
mov
push
jmp
sbb
or
in
outsb
es
orb
rcll
add
ja
nop
ds
loopne
inc
insb
sub
push
sbb
lahf
cmp
xchg
xchg
mov
shlb
andb
outsb
jmp
xor
xor
mov
push
cmp
and
jmp
push
xchg
das
sti
sub
das
jle
test
adc
popa
or
roll
sbb
cwtl
dec
sbb
bound
cmpsl
sbb
inc
jge
mov
dec
mov
ret
dec
mov
iret
xor
ss
jo
push
fimuls
ljmp
and
dec
sub
test
pop
mov
xchg
fmull
enter
movsl
pop
jno
push
into
pop
xor
jb
std
jmp
inc
inc
xchg
mov
div
jp
adc
and
cltd
loop
xchg
enter
enter
fmuls
aam
test
cwtl
jno
jecxz
jmp
mov
adc
or
xor
or
and
sarb
gs
cmpb
stos
xor
sbb
push
xchg
scas
cmpsb
rclb
fdivrl
imul
xor
andb
mov
dec
lea
insl
cmc
mov
dec
mov
je
mov
xchg
in
push
inc
jge
jnp
sbb
sub
adc
pop
imul
push
lods
jb
imul
mov
flds
sub
jb
leave
pusha
lcall
lea
xor
dec
shl
sbb
inc
loope
push
insb
cwtl
inc
xchg
sub
cmp
mov
bound
xchg
sbb
sub
pop
adc
inc
popf
cld
add
xchg
mov
clc
add
scas
mov
daa
fidivrl
ret
or
es
or
jnp
bound
adcl
inc
scas
jns
add
inc
dec
clc
insb
and
ret
push
xchg
cld
add
cmp
and
mov
cmpsl
test
stos
shll
or
pop
cmp
repnz
pop
mov
inc
cs
pop
outsb
adc
test
pop
push
ds
scas
adc
lahf
shr
jle
aad
ds
lret
pop
jns
mov
rcl
jne
adc
ja
hlt
aaa
out
enter
cmp
xlat
add
sbb
dec
pop
sub
add
loop
int3
int3
gs
jg
or
aam
lods
xor
insl
les
outsb
loope
bound
imul
sarl
imull
mov
cld
or
and
push
cmpsl
imul
shld
dec
std
dec
scas
fcoml
mov
push
rcrb
test
pop
xor
pop
sbb
dec
mov
cwtl
lret
xchg
jge
mov
incb
adc
and
xchg
je
xor
ds
or
mov
arpl
hlt
or
testl
repnz
inc
xchg
inc
sbb
js
jno
mov
adcl
rorl
lret
mov
push
fndisi(8087
stos
into
in
sbb
adc
mov
ret
fidivrs
push
sub
jp
js
aad
cmc
hlt
xchg
pop
mov
ret
mov
mov
scas
adc
int
aam
je
add
lret
mov
js
add
fcmovnb
jecxz
sti
imul
push
push
rolb
pusha
add
inc
xchg
and
mov
adc
mov
sub
add
dec
sub
inc
mov
jae
cmp
in
sahf
test
js
aam
dec
jb
pushf
fisttpl
out
in
cmp
inc
mov
gs
int3
aaa
loope
mov
ret
mov
imul
andb
jns
fs
movsl
jge
pusha
cmp
enter
rcll
xchg
divps
xor
add
out
gs
movsb
jle
sub
adc
leave
sub
sbbb
es
insb
out
cmp
pushf
cwtl
cmc
cmp
sbb
sbb
cmp
fstpl
je
xchg
pop
loopne
mov
stc
xchg
add
jle
push
movl
in
mov
mov
mov
jnp
push
add
stos
das
loopne
inc
dec
cmpsb
imul
dec
push
push
xor
fildll
jno
cmc
xor
xchg
std
ret
jb
cmp
adc
cmp
lods
int3
and
ds
sub
sbb
sti
sub
mov
out
or
test
lahf
pop
xlat
shr
fisttpll
rcrb
sbb
in
adc
mov
lods
ret
arpl
mov
rcrb
lods
push
sahf
in
aas
lock
push
negb
rcrb
sahf
xchg
xchg
daa
jge
add
in
sub
mov
sub
ljmp
jb
push
ficompl
dec
sub
faddl
popa
xor
mov
cld
fdecstp
lock
frndint
out
sub
add
inc
xor
push
jne
mov
iret
xchg
inc
push
mov
aam
mov
outsl
push
daa
popf
stos
test
push
sbb
dec
push
hlt
fcoms
outsb
adc
setle
add
popa
hlt
stos
pop
or
and
xchg
ljmp
xchg
push
lahf
popa
push
mov
add
dec
clc
or
mov
mov
pushl
xchg
jmp
das
xchg
jp
icebp
outsl
iret
repnz
inc
mov
and
xchg
mov
push
ss
cmp
popf
roll
mov
adc
test
pushf
cmc
sbb
push
cmpsl
jmp
out
and
sbb
dec
scas
xchg
jae
dec
inc
and
and
inc
mov
inc
mull
adc
cmpsl
scas
ret
test
stos
popa
pop
mov
iret
xchg
xor
xlat
or
daa
push
bound
into
faddl
loop
or
ds
jne
cld
mov
mov
popf
sub
push
sub
test
adc
or
push
out
sbb
arpl
push
inc
std
dec
sub
ja
xchg
mov
dec
push
scas
sbb
aas
movsl
bound
fildl
mov
decl
nop
outsb
cmpsb
jle
popa
inc
je
mov
test
push
mov
jo
aam
jno
xor
shrb
adc
mov
mov
xor
jl
iret
adc
fldenv
pop
lea
jns
mov
dec
pop
adc
jbe
jecxz
inc
aaa
xchg
jo
addr16
or
pxor
pusha
mov
mov
scas
xchg
jmp
xor
out
mov
cmpsb
in
outsl
lods
pop
mov
adc
or
jbe
mov
mov
sub
and
mov
push
mov
push
in
jns
insb
push
mov
rclb
sbb
fsubrl
das
pop
sbb
adc
les
sbb
and
fldt
les
fwait
cmc
mov
add
cmpsl
mov
imul
add
cmp
mov
dec
je
jg
lods
mov
movsl
adc
movsl
jb
push
pusha
mov
push
mov
jecxz
jb
repnz
dec
loopne
insb
mov
loope
repnz
mov
in
les
das
decl
stos
cld
mov
mov
testb
imul
lret
mov
sub
inc
mov
pusha
fsubs
in
xchg
loope
add
jb
mov
ficomps
pop
adc
popa
inc
ficompl
jnp
mov
cmpsl
and
jecxz
adc
sbb
push
cmp
daa
aad
mov
xor
out
sar
sbb
pop
and
ja
nop
lock
pop
rcrl
and
in
fcoms
xlat
lret
cmp
mov
sbb
cmovp
push
inc
or
push
jbe
ficoml
arpl
test
outsl
sub
loope
xchg
rcr
dec
adc
mov
test
cmp
mov
leave
and
dec
fdivp
dec
jge
lret
int3
jns
cmp
icebp
jle
xchg
call
mov
xor
int
fsubl
mov
jb
sbb
xor
inc
sbb
pop
mov
or
sub
adc
aas
dec
loope
mov
mov
or
enter
add
adc
aad
xchg
add
adcl
adc
icebp
pusha
push
ss
xlat
dec
test
mov
mov
xchg
aas
ss
insl
jg
repz
add
lods
sbb
lea
fnsave
or
pop
dec
jmp
pop
jg
dec
adc
sbb
inc
aam
lret
andl
sbb
dec
xchg
fldcw
push
sbb
imul
movsb
mov
je
mov
fldenv
cmpsb
shrb
das
adc
popa
mov
lods
and
adc
aam
icebp
loopne
icebp
ror
ja
stos
add
pop
adc
icebp
addps
loopne
pop
fmuls
sbb
dec
jo
lods
xchg
cmpsb
push
jbe
or
je
push
cmp
aaa
push
test
push
pop
xor
popf
dec
stos
out
xor
xor
in
rclb
fstl
and
xor
mov
in
and
pop
aaa
sbb
pop
mov
stos
dec
inc
and
push
repnz
push
push
push
test
test
xchg
stc
mov
ret
sub
stos
les
lret
into
cmp
xor
stos
xlat
mov
mov
je
adc
sbbb
int3
in
push
mov
popf
mov
orb
dec
push
ds
shll
xchg
setae
mov
sbb
cmp
mov
es
aas
xchg
ror
popa
cmp
inc
cmc
add
aaa
push
test
mov
adc
mov
add
mov
in
popf
insb
mov
cwtl
pop
loop
mov
and
addr16
leave
cmp
into
es
jne
mov
jo
dec
pop
cmp
xorl
push
lret
xor
inc
repnz
sbb
push
and
imul
outsb
cltd
aaa
insb
popa
int
push
cmp
mov
xchg
mov
shrl
jno
in
add
int3
mov
or
sub
inc
jb
mov
int
dec
cmp
dec
dec
pop
lock
mov
test
icebp
xchg
xor
cli
mov
das
sbb
inc
push
add
popa
insb
lods
push
test
lahf
mov
push
mov
shrb
js
negb
push
stos
jne
scas
jp
fs
jno
dec
pop
adc
in
mov
rcrl
jne
sbb
pop
jge
mov
mov
fildl
mov
roll
mov
lcall
and
testb
mov
add
fists
stos
call
pushf
roll
gs
into
dec
xor
sub
push
into
cmpsl
dec
jl
mull
sbb
loopne
jo
add
subb
movsb
pop
lcall
repnz
inc
adc
mov
lods
out
test
mov
hlt
sub
icebp
rorb
jmp
in
push
mov
scas
or
lcall
aam
and
imul
xchg
dec
sub
mov
mov
pusha
insl
mov
out
dec
sbbl
xchg
dec
jne
cmp
or
xchg
mov
push
xchg
fnstsw
add
xor
loope
inc
dec
jmp
sbb
int
adc
cmpsl
cwtl
lea
push
push
cmp
scas
imul
imul
xor
jbe
out
nop
ja
cmpsl
in
iret
icebp
in
outsb
sahf
rcr
adc
push
aad
xchg
inc
mov
test
sub
push
push
sbb
xchg
mov
movl
push
dec
pusha
sbb
push
pop
push
ja
shl
mov
fstpl
cltd
stos
imul
pop
sub
pop
imul
sub
push
cwtl
jae
hlt
jge
movb
imul
adc
orl
fcmovb
aam
jmp
dec
aas
dec
xor
mov
mov
repnz
pop
movsb
cli
mov
push
roll
adc
mov
sbb
mov
loope
rclb
test
and
jg
rep
push
add
xchg
sbb
dec
xor
push
out
adcb
push
js
mov
adc
add
jmp
sbb
inc
fiadds
and
sub
movsl
pop
cli
pop
std
sbbl
jbe
xchg
lea
rolb
call
adc
dec
pop
mov
jmp
mov
fdivrl
dec
lret
jge
sub
pop
clc
mov
inc
out
and
loop
testb
lret
imul
cmp
adc
inc
popf
xchg
aam
insb
pushf
rol
add
sbb
lcall
push
xor
aaa
in
popl
push
jp
les
jg
iret
xor
and
push
or
scas
rcll
loope
in
xlat
orb
xor
push
push
in
rolb
xchg
cmc
add
movsl
cli
pop
sub
std
cmpsl
and
and
aam
sar
js
xchg
lret
fisubrl
xor
test
stos
xchg
jno
sub
cmp
and
pushf
dec
cmp
stc
cmp
xchg
jnp
enter
je
mov
rcrb
cmc
mov
sbb
sub
dec
std
xchg
ret
shll
fiaddl
and
out
movsb
mov
pop
cld
xor
call
jl
cmp
and
cmp
fwait
into
or
js
aam
ljmp
outsl
mov
mov
inc
xchg
lcall
mov
test
fbld
fidivl
adc
push
inc
mov
or
push
and
xor
mov
or
pop
decb
ljmp
movsb
cmp
add
or
ss
mov
mov
fistl
mov
stos
mov
movsb
mov
mov
sbb
lock
add
push
pop
fistpll
rcrl
xor
add
jb
outsl
sub
push
addr16
jo
and
pop
push
aam
incb
mov
pop
jmp
das
add
cmp
lods
mov
xchg
xor
pop
mov
xor
cmp
mov
addb
pop
stos
cmc
jle
push
cwtl
xchg
push
and
or
xchg
jle
jp
xor
inc
hlt
imul
repnz
xchg
loope
test
movnti
imul
test
mov
pop
fiadds
jb
jns
cld
push
out
imul
add
xor
xchg
xchg
into
scas
int3
pop
mov
inc
icebp
mov
popf
adc
lahf
test
lea
add
push
pop
jp
xchg
inc
xchg
xlat
icebp
pop
add
cwtl
daa
sti
setnp
ret
sub
sub
mov
ljmp
add
and
scas
out
in
test
pop
ljmp
div
xchg
out
pop
xor
adc
inc
aad
push
xchg
sbb
add
xchg
fdivs
test
cs
test
xorl
and
jle
aam
cmpsl
mov
pop
mov
movsb
cs
push
push
call
nop
into
add
inc
add
pop
data16
adc
jno
fisttpll
add
sti
rolb
or
dec
in
sti
repz
pop
enter
lret
jp
popl
xchg
cmp
lcall
xchg
inc
mov
pushl
fstps
test
ja
jg
sub
fcoms
xor
sub
push
in
test
mov
loop
jmp
pop
mov
mov
add
ret
rcrl
sub
jl
std
ljmp
lea
fidivrl
or
sbb
cmc
pop
adc
push
xlat
dec
fsubrs
orb
adc
fistl
cli
ja
push
xchg
repnz
outsl
jnp
mov
cld
xchg
xor
and
imul
les
aam
xchg
mov
sub
gs
bound
or
jg
or
jns
ds
mov
adc
ss
call
lcall
jns
imul
shl
iret
mov
lahf
sub
in
loopne
adc
pushf
repnz
stos
mov
mov
das
mov
data16
inc
jo
adc
hlt
cmp
aaa
sar
pop
adc
ss
cs
sbb
adc
mulps
mov
xor
cmp
mov
push
dec
out
lret
xchg
mov
adc
push
out
xchg
lea
inc
pusha
lock
inc
xchg
enter
lret
imul
sub
shlb
jg
xchg
fldt
scas
inc
and
jnp
sub
push
mov
nop
or
push
sub
mov
mov
movsb
icebp
out
das
push
push
lret
ret
pop
les
jo
push
adc
lret
cmp
dec
add
test
push
mov
imul
pushf
pop
bound
mov
mov
pop
adcl
arpl
pop
lcall
outsl
mov
in
test
dec
jo
xchg
sbb
fidivl
stos
jae
pop
cli
in
inc
cmc
out
sti
in
leave
add
inc
test
and
add
cs
dec
in
sub
and
xchg
push
daa
xchg
test
ds
imulb
pop
mov
add
cs
xor
test
jb
lods
bound
adc
sbb
cmp
clc
sub
mov
xchg
repz
cmp
cmc
jns
jp
call
inc
repnz
and
call
jnp
enter
mov
ret
cmp
push
seto
mov
out
popf
fcmovnbe
inc
pop
xchg
xor
call
adc
dec
std
jo
or
jno
cmp
cmpsl
dec
adc
jl
loop
cmp
and
andb
sbbl
or
in
imul
push
mov
and
jp
jo
sbb
mov
scas
adc
cmp
mov
negl
push
fsubrs
pop
inc
jge
mov
leave
and
fsubs
sbb
inc
inc
push
decl
dec
inc
insl
xchg
enter
cwtl
test
dec
movsb
lods
xchg
cmp
push
in
jne
inc
dec
mov
pop
add
push
inc
lods
lcall
pop
popf
cwtl
insb
jns
out
add
sub
push
call
ss
testl
mov
scas
xchg
arpl
inc
es
sbb
mov
push
test
shrb
xchg
mov
call
daa
mov
insl
stos
sub
je
hlt
inc
xor
mov
stc
jl
xor
cmp
mov
test
fcoml
test
add
and
or
int3
push
dec
mov
sbb
push
mov
mov
jae
mov
or
sub
sbbl
xor
mov
out
scas
and
cmp
mov
movsl
adc
ret
xchg
mov
cmpsb
out
xchg
cmp
push
and
and
sbb
jae
movsb
mov
mov
call
andb
pop
out
dec
xchg
sbb
xchg
ret
dec
push
push
and
pop
sub
push
or
mov
cs
mov
xchg
test
xchg
imul
scas
adc
dec
in
int3
xchg
push
ret
xchg
insl
adc
mov
adc
pop
out
adc
into
hlt
mov
add
test
and
and
into
and
xlat
mov
jmp
mov
jmp
outsb
dec
inc
test
cmp
jb
ljmp
pop
mov
cs
mov
mov
cmpsl
mov
mov
jmp
push
xchg
repz
sbb
mov
daa
inc
mov
xchg
cmp
fdivrl
add
adc
ret
ss
mov
arpl
fldcw
icebp
out
minps
mov
imul
cmc
xchg
xchg
push
pop
lods
xchg
out
ret
xor
jno
cld
dec
lret
mov
jmp
mov
dec
mov
push
in
sbb
fistpll
ficompl
loope
shlb
inc
adc
pop
add
and
push
jo
out
adc
fdivrl
scas
js
or
xor
mov
jns
ret
adc
repz
xor
xchg
jge
jle
inc
outsb
jb
cmpsl
add
sbb
ucomiss
or
jns
mov
add
cmp
pop
or
std
xor
dec
inc
aaa
push
arpl
xor
lea
clc
rorb
xchg
mov
stc
xor
mov
sub
push
inc
cmc
testb
lock
cwtl
cmp
jo
push
dec
mov
inc
jecxz
pop
xor
std
and
cli
jno
add
or
mov
add
cmp
adc
mov
lahf
cltd
insb
sbb
lahf
sbbl
xor
bswap
push
sahf
inc
push
sahf
inc
sbb
dec
lods
loopne
stc
stc
or
pop
insl
push
shll
jbe
jo
hlt
add
pop
fistl
cs
scas
push
lcall
popa
dec
cli
mov
scas
inc
mov
mov
and
in
inc
test
pop
lds
mov
scas
dec
mov
jmp
leave
cmpsl
lock
jmp
mov
popa
and
jo
pop
push
jns
jmp
mov
mov
jns
xchg
std
jnp
std
sbb
xchg
or
or
out
inc
and
fdivs
cmc
jb
push
mov
push
jl
pop
scas
inc
push
lods
xor
dec
pop
xchg
mov
mov
cmpl
ret
insb
jmp
loop
and
jne
int
or
xor
inc
inc
mov
lds
into
aam
sahf
adc
test
ret
fld
mov
pusha
mov
sub
jl
insb
sti
push
testl
lret
jns
lahf
fs
adc
adc
notb
xor
das
cld
dec
and
xchg
ret
aaa
jno
sub
xchg
fst
outsb
cmp
bound
cwtl
cmp
push
pop
add
shlb
mov
push
mov
outsl
in
mov
inc
repz
xor
push
testb
or
ret
das
push
pop
pushf
outsl
xchg
fiadds
xor
enter
xor
js
mov
push
insb
add
mov
sub
mov
stos
out
xchg
rorb
push
push
sbb
pop
stos
or
jg
pusha
mov
les
xchg
jnp
in
dec
repnz
lcall
dec
pop
xchg
icebp
fldcw
sahf
clc
lock
cli
push
arpl
repz
mov
mov
mov
xor
dec
adc
rolb
or
sbb
sbb
mov
sbb
cmpsl
into
pop
push
mov
icebp
cs
push
xor
int3
repz
ret
ja
clc
or
jmp
pusha
test
cltd
sub
shll
jle
aam
mov
movsl
inc
loopne
shll
loope
xchg
loopne
sub
ds
outsl
loop
dec
cmpsl
jmp
add
jecxz
ret
loope
push
insl
lahf
iret
lods
mov
cld
cwtl
sbb
dec
dec
jg
adc
dec
out
bound
pop
shr
cli
sti
xchg
inc
repz
mov
push
inc
jg
mov
pop
mov
push
orb
inc
dec
stos
mov
or
scas
lret
pushf
mov
mov
mov
leave
pop
xorl
cmpsb
add
dec
scas
cmp
int
jno
jmp
xor
fs
push
xchg
add
xchg
or
fildl
loop
xchg
pop
push
in
jne
cmp
aaa
popa
pop
out
or
test
sub
jmp
push
shr
xchg
data16
mov
cld
xor
leave
daa
aaa
test
cmc
jmp
int
in
outsb
or
sub
popa
or
fisttpll
cmpsl
sbb
push
xor
stc
dec
add
xor
add
lods
ljmp
fstp
adc
xchg
mov
cwtl
or
mov
add
add
loop
xor
js
mov
xor
sbb
stos
mov
daa
cmc
pop
movsb
mov
sbbb
lock
fsubs
push
negl
jae
xor
int3
in
int3
dec
or
mov
jge
lock
iret
sbb
xchg
add
imul
pop
stc
and
dec
inc
sbb
stc
pushf
mov
and
lcall
mov
inc
jmp
sbb
lods
stc
test
stos
mov
sti
and
inc
dec
mov
sbb
daa
pop
sbb
into
adc
or
test
mov
insl
mov
in
inc
es
out
mov
xlat
push
test
loope
mov
call
mov
xchg
jns
out
dec
push
xor
movsb
or
jns
scas
cli
jae
push
int3
cmp
je
subb
in
les
hlt
mov
mov
adc
decl
je
ljmp
mov
mov
incl
xlat
jno
pop
mov
out
sub
out
es
lret
lds
and
lcall
loop
leave
pop
shl
imul
loop
decl
pop
ret
repnz
mov
cmpsb
jecxz
or
add
inc
push
inc
xor
jb
outsl
dec
mov
cmp
int3
sbb
jp
cmp
aaa
sbb
std
pop
jnp
add
jns
gs
or
dec
pop
jge
xor
mov
mov
pop
lock
in
and
push
ds
in
and
mov
ss
xor
rcrb
in
mov
push
inc
jl
sbb
ljmp
inc
shlb
mov
dec
or
sub
test
add
incb
ss
cmp
cmp
shl
lods
dec
sub
pop
sbb
inc
daa
or
sub
in
sbb
out
pop
into
mov
mov
sbb
add
insb
adc
es
cmpsb
add
push
sub
in
cli
mov
mov
jmp
subb
xchg
xorl
dec
or
jle
mov
movsb
dec
dec
lret
ret
test
frstor
sahf
je
and
push
or
aas
adc
int3
jmp
test
imul
outsl
aam
aam
inc
fwait
xor
jle
or
sub
or
sbb
cld
mov
inc
movsl
lock
or
int
fisttpll
lret
adc
pop
inc
jbe
out
mov
or
xorl
push
push
arpl
xchg
aam
cli
sub
ds
imul
xor
pusha
mov
jp
dec
into
lar
push
repz
xor
xchg
jecxz
jecxz
jns
imul
movsb
je
clc
cli
lds
push
push
scas
addl
pop
int
lds
pop
into
mov
lret
mov
lret
pop
out
aas
fdivs
fsubrl
pop
sarb
scas
test
xchg
lods
jecxz
dec
xlat
push
js
call
xchg
mov
push
cmp
jne
clc
dec
cmpsl
mov
pushf
sti
mov
and
cmp
pusha
ljmp
call
xor
add
imul
test
sub
dec
psadbw
xchg
add
jecxz
cmp
popf
stc
or
cmpsl
fadd
fildl
sarb
cmc
mov
adc
adc
inc
scas
push
loope
sub
jmp
test
rorb
mov
dec
mov
imul
in
cmp
pop
mov
xor
in
pushf
xchg
in
popa
xor
in
rorl
sub
sti
out
jle
adc
adc
iret
test
inc
mov
stos
sarb
pop
roll
daa
imul
mov
bound
push
aad
inc
add
loope
inc
jg
lret
insl
jmp
out
mov
push
mov
xor
data16
sub
and
pop
jnp
test
leave
sahf
test
or
repnz
mov
lds
add
and
xor
sub
insb
leave
hlt
adc
inc
lods
jecxz
out
sbb
lcall
mov
sbb
xchg
test
imul
aam
iret
sbb
mov
mov
inc
lock
fimuls
pop
inc
mov
xor
in
fmul
push
inc
or
jecxz
insl
fdiv
bound
pop
lret
cld
jo
rcl
xchg
aam
push
adc
adc
cmpl
dec
lods
scas
mov
fs
cmpsb
push
clc
bound
fsts
sbb
jno
push
lea
dec
mov
dec
jno
xchg
adc
in
sbb
cmc
pop
jecxz
pushf
dec
and
aam
pop
mov
or
js
ret
ja
shlb
stos
leave
mov
jnp
or
fidivl
mov
xchg
loope
xchg
bound
xor
sbb
cmp
pop
xchg
fwait
int
and
jb
push
mul
push
add
adc
fucomp
mov
push
les
test
lods
out
pusha
je
call
mov
xchg
or
cs
cs
ret
lret
sbb
stc
mov
and
lret
hlt
lahf
dec
stos
or
cmpsl
xor
pop
adc
dec
fmul
and
add
psubd
adc
icebp
lahf
iret
inc
mov
push
psubw
lret
sbb
lcall
inc
mov
gs
in
mov
push
mov
mov
mov
mov
ja
pop
xchg
js
cmp
lods
mov
fnstcw
push
jno
lahf
cltd
movsb
imul
mov
in
std
je
mov
or
mov
dec
sub
fwait
dec
popf
clc
mov
call
pop
push
mov
xor
mov
jl
loope
jne
arpl
roll
sbb
inc
mov
mov
imul
inc
jcxz
xchg
pusha
lcall
nop
loope
xchg
into
lods
sub
pop
in
pop
cwtl
sbb
or
adc
or
stc
xchg
ja
push
int3
and
sar
or
jnp
xor
aad
sub
mov
test
jle
or
mov
fwait
rorb
ds
jg
mov
push
aas
xor
insl
pop
int3
div
jge
mov
sahf
clc
in
popa
xchg
sub
popf
inc
adc
divl
push
push
and
push
fwait
insl
xchg
push
arpl
icebp
adcb
int
mov
cwtl
pop
fwait
std
fucomp
aas
push
test
push
add
lret
arpl
mov
js
add
cmpsl
aaa
sti
xchg
fnsave
jge
mov
jbe
pop
imul
popf
push
mov
xchg
icebp
cmpsb
and
iret
outsb
add
sahf
iret
pop
insb
jne
cmpsb
mov
roll
orl
pushf
xor
cltd
daa
stos
mov
insb
push
jnp
into
shl
and
jne
adc
jns
out
push
shll
roll
mov
loope
insb
add
loop
int
rcll
pop
jnp
push
xchg
es
xor
popf
insb
or
cmp
and
cmp
or
out
repnz
mov
insl
sbb
bound
xor
mov
call
dec
sub
test
inc
loop
sbb
fimuls
lret
mov
dec
jns
push
cmc
ljmp
fdivl
flds
adc
pop
xor
test
shlb
or
js
ja
mov
mov
pop
mov
dec
add
lret
scas
adc
cmp
and
stos
pop
hlt
xor
mov
push
mov
call
cmova
aam
dec
gs
push
lret
jmp
mov
add
int
fisttpl
outsl
inc
pop
xchg
sbb
mov
pop
dec
dec
mov
ret
sarb
in
idivb
adc
dec
cmp
adc
mov
dec
xchg
in
push
je
into
add
pop
and
mov
pop
cwtl
insl
fsubrs
out
push
inc
or
xchg
lock
and
stos
mov
fisttps
xor
sub
mov
ds
insb
scas
pop
hlt
test
or
call
sub
imul
or
loopne
mov
loop
cmpsb
mov
mov
addb
or
pop
sbb
jo
xchg
ret
in
cld
je
jge
negl
out
int3
insl
bound
aad
pop
sub
loope
mov
pop
xchg
rol
popa
incl
xor
xchg
jmp
stos
mov
test
ljmp
sti
cmp
mov
push
lahf
clc
stc
push
movsb
xlat
and
push
out
add
je
push
daa
pshufw
xor
outsl
jmp
nop
cmp
sbbb
cmc
movsl
xchg
imul
xor
test
imul
pop
pop
pop
xchg
mov
inc
in
or
fldenv
cmp
je
pop
out
test
out
push
push
jp
mov
fs
inc
xor
or
stos
mov
or
data16
mov
in
data16
jo
xor
adc
mov
sub
pop
or
cmp
loope
out
mov
bound
mov
add
jp
add
inc
movsb
ds
pusha
mov
xchg
mov
mov
push
leave
mov
jae
pushf
call
or
shld
adcl
jp
scas
cmp
jl
jno
dec
and
inc
and
mov
push
dec
inc
stos
dec
inc
push
or
loop
push
dec
loop
jb
pusha
jns
push
cmp
or
add
mulb
lds
push
mov
inc
cmpsl
pop
out
imul
std
stos
aaa
and
leave
into
lods
xchg
mov
mov
lock
xor
pop
pop
js
leave
xchg
insb
xor
cmp
test
jbe
and
xorb
mov
sar
mov
and
cmpsb
cmp
cmp
xor
loope
xor
pop
shlb
test
pop
mov
addr16
popf
mov
lea
xchg
andb
mov
insl
and
std
xchg
mov
inc
inc
lea
pushf
mov
cmp
scas
inc
adc
stos
adcb
cmp
add
adc
sub
xor
dec
pop
push
xchg
jno
movsb
cmpsb
and
sbb
push
push
das
out
idiv
sbb
xor
stc
or
loopne
or
in
pusha
and
stos
bound
xchg
dec
and
jl
ja
addl
sbb
in
mov
push
xlat
and
lcall
addl
rolb
int3
stos
lret
dec
mov
movsb
mov
movsb
bound
ss
ljmp
jmp
pop
in
int
and
movsb
ja
push
push
cli
lds
xor
das
pop
stos
out
les
popf
and
mov
xor
xor
inc
lsl
xor
out
jmp
cmc
mov
mov
lcall
sub
sbb
mov
dec
xchg
mov
shl
push
cmpsb
icebp
push
cmp
rcrb
xchg
lds
popa
rorb
adc
pop
add
sarl
and
mull
test
insl
inc
and
lret
pop
mov
jne
pop
or
packssdw
sub
gs
cwtl
vpaddusw
stos
aad
or
shll
sub
lds
xlat
jmp
xor
insb
mov
fst
mov
in
shrb
sub
cmpb
mov
xchg
add
xchg
pop
out
cmc
or
xlat
cmp
mov
push
push
lahf
lret
mov
dec
lret
xor
xchg
test
sahf
pop
gs
dec
pop
arpl
dec
jl
cmp
adc
sbb
dec
xchg
rcr
jle
mov
sub
push
jg
test
hlt
out
es
mov
lea
addr16
shrb
scas
pop
roll
dec
push
sub
fwait
or
xchg
push
jo
xor
cmp
jbe
cmp
add
jae
mov
xchg
decl
sbb
loopne
cmp
in
pop
cmp
ja
enter
adc
lds
mov
rcr
imul
push
xchg
enter
mov
jmp
sub
jne
push
lret
xor
adc
dec
cld
sbb
sbbl
pop
xchg
in
stc
ds
xor
stos
mull
push
pop
or
cmc
test
add
stos
dec
or
push
sub
sbb
and
xchg
dec
or
repnz
mov
xchg
les
jae
cmpb
repz
jb
test
push
sbb
push
inc
jno
push
xchg
pop
test
in
sub
mov
sub
test
cmp
fcmove
scas
shlb
fists
mov
sar
movsb
rcll
mov
testl
lret
jns
mov
adc
and
mov
sahf
jne
sarl
leave
scas
adc
xor
sbb
cmp
xchg
sub
lds
inc
outsl
jp
rep
imul
mov
insl
xchg
aam
in
xlat
jb
pop
push
int
and
pop
jmp
cmp
adc
incb
outsb
fwait
imul
scas
movd
jg
or
mov
dec
adc
out
stc
sbb
daa
ja
lcall
mov
ror
inc
aas
bound
outsl
imul
inc
cli
dec
sbb
test
add
dec
fiaddl
mov
lea
cmpsb
lret
xchg
mov
xor
andl
sub
mov
and
repnz
jno
mov
out
aam
pop
sub
out
xor
add
inc
cmpsl
push
jmp
ror
xchg
inc
ljmp
dec
and
shl
jecxz
cmc
pop
adc
cmpsl
in
pop
or
pop
loopne
lea
vunpcklpd
in
adc
bound
cmp
or
cld
lahf
or
iret
and
dec
mov
and
and
popf
dec
cmp
movsl
pop
cs
xor
les
out
movsl
pop
cwtl
test
aaa
imul
dec
stos
cltd
mov
mov
cmpsb
lahf
fsubrl
inc
test
or
mov
lods
sbbl
das
inc
or
test
dec
xchg
das
mov
jge
jo
mov
sahf
mov
out
fstps
addb
in
movb
mov
cmp
out
mov
sbb
fildl
add
stos
mov
push
ret
enter
mov
and
adc
ret
xlat
fbstp
pandn
in
testl
push
sbbl
ds
iret
test
inc
mov
sbb
inc
dec
xchg
sbb
pop
out
mov
leave
jne
mov
inc
xchg
xor
and
sub
jo
jecxz
adc
jecxz
sub
sub
repnz
cmp
outsb
push
stc
popf
push
add
fisubl
mov
popl
das
jmp
lcall
fldl
insl
outsb
pop
out
add
xor
add
mov
xorb
dec
std
cltd
cmc
mov
mov
jnp
data16
xor
aad
aas
inc
dec
and
push
mov
stos
popa
ficoml
pop
inc
mov
lcall
popf
mov
repz
loop
pop
ss
stc
sbb
mov
movsb
push
imul
lea
pusha
sub
test
pop
and
mov
stc
inc
push
pop
stc
ret
sub
pop
stc
lahf
xchg
mov
ja
orb
pusha
or
inc
xlat
into
fcomps
pop
cli
jbe
and
cmp
out
xorl
mov
arpl
jo
sub
push
mov
and
imul
or
pop
cmp
pushf
and
out
shr
in
jno
inc
rcll
out
mov
addr16
inc
sub
test
leave
inc
inc
kmovw
sbb
jno
xor
jbe
hlt
in
std
gs
loope
push
test
or
push
mov
out
sbb
xor
fstps
data16
iret
inc
lret
imul
cmp
cld
add
dec
ja
int
or
movsb
std
sub
mov
cmc
movhps
mov
ljmp
out
cmp
int3
sarl
jns
jns
cwtl
test
lahf
das
push
cmp
mov
stos
jns
sahf
ja
mov
std
in
add
subl
imul
out
test
fisttps
inc
cltd
fcomip
or
divl
ja
pop
mov
bound
xor
movsl
push
dec
std
shlb
cld
jbe
or
xchg
and
pop
or
in
or
lea
cwtl
dec
repnz
mov
sti
fwait
add
ret
lods
mov
adc
iret
pop
std
int
inc
cmpsl
aad
aaa
pop
xor
out
inc
inc
stos
and
add
aad
xchg
sub
push
jge
lea
insb
jns
mov
into
stc
xor
sbb
xor
or
xor
inc
mov
and
mov
lahf
mov
sbb
aas
mov
pop
pop
outsb
dec
dec
leave
sub
dec
mov
fnstenv
test
jb
xchg
mov
jno
inc
data16
aam
xchg
pop
test
insb
push
inc
lret
pop
pusha
sub
mov
daa
adc
mov
lods
mov
cwtl
push
pushf
test
push
push
adc
mov
sti
push
cli
sbb
std
mov
imul
pusha
mov
dec
repnz
andl
jl
outsl
lret
inc
cmc
and
or
pop
jbe
mov
xchg
adc
add
dec
loope
xor
int3
xchg
mov
test
inc
jp
lods
test
pop
push
sub
sti
or
orb
lods
mov
dec
gs
in
mov
add
sub
aaa
jecxz
inc
flds
xchg
and
sub
outsb
xor
cmp
xchg
aam
jo
xor
int3
icebp
push
and
aam
xchg
xchg
std
out
loopne
pop
movsl
leave
sar
inc
test
movq
popf
test
xor
pushf
inc
sbb
pop
jge
ja
nop
movsb
stos
arpl
dec
sbb
or
fisttpl
mov
addr16
inc
popf
sub
cld
test
add
add
call
push
in
imul
sbb
pop
pop
lcall
and
bound
dec
and
adc
add
pop
push
add
lea
cmp
sti
jbe
xrelease
pop
insb
or
pusha
jnp
out
sub
or
jb
test
xor
push
lahf
gs
fisttpl
aad
dec
insb
ret
mov
dec
adc
lcall
mov
or
mov
std
pop
mov
push
sub
bound
jb
addr16
dec
xor
stos
push
in
ret
subl
and
mov
push
and
leave
mov
and
jnp
xchg
mov
sub
mov
cmpsl
scas
scas
cld
sub
mov
pop
out
sbb
dec
les
or
cld
adc
in
mov
dec
and
cmp
in
and
bound
add
lret
iret
dec
sar
outsl
jg
xor
jp
repnz
push
nop
push
shl
inc
inc
iret
jnp
sub
xlat
and
lret
mov
pop
xlat
push
push
push
fiadds
stos
lea
jmp
mov
jbe
in
dec
bnd
jge
add
cmp
push
inc
jecxz
xchg
pushf
ficoms
xor
outsl
sbb
pop
or
out
dec
shll
mov
inc
repz
add
sti
pop
jae
sbb
es
outsl
cltd
xchg
inc
jnp
adc
push
popf
popf
divl
outsl
sub
call
fmuls
inc
out
stos
sbb
call
jnp
aad
aam
adcl
mov
pop
cmp
add
add
in
mov
nop
and
push
out
jnp
add
mov
cmp
add
mov
or
fsubs
mov
nop
push
jnp
mov
add
pop
xchg
std
cli
dec
fsubr
fdivrs
outsb
add
idivb
xor
into
adc
rcrl
cmpsl
or
mov
inc
sub
add
shll
pop
and
imull
mov
stos
adc
or
sbb
jle
inc
sub
inc
hlt
lea
out
mov
test
xchg
insl
add
mov
xchg
outsb
sub
push
cmpsb
imul
adc
mov
fwait
jns
add
push
js
add
jns
fstps
negb
lret
insb
mov
lods
xchg
out
in
popa
insl
aas
pusha
fnstsw
jmp
fdivl
scas
mov
push
inc
jnp
sarl
mov
jo
or
xlat
scas
pop
mov
inc
xor
inc
jnp
aad
lods
inc
nop
adc
out
jo
rcrl
adc
fimuls
and
fs
dec
scas
daa
pushf
pushf
sub
dec
es
repnz
pop
jne
in
outsb
inc
popf
cld
jg
jo
js
sub
mov
jo
in
mov
fists
dec
mov
mov
fstl
pop
jp
sub
push
cmp
cs
jg
das
adc
sarb
int
jle
fidivl
pop
mov
mov
jp
sbb
cmp
popf
xor
push
pushf
das
xor
loopne
sbb
push
shrb
cs
les
dec
lods
ficoml
pop
push
xchg
shl
mov
test
sbb
outsl
cmp
cld
idivb
push
push
cmpsl
inc
mov
push
into
iret
or
mov
xchg
or
dec
aaa
inc
and
mov
outsb
lahf
lahf
test
and
pop
icebp
jl
xor
inc
add
test
xor
xlat
push
icebp
jns
inc
mov
arpl
mov
and
mov
and
frstor
and
std
cwtl
or
push
cmc
rorb
in
insl
push
jbe
pop
pop
fs
sbb
mov
dec
ret
pusha
pop
imul
out
mov
and
mov
pop
sbb
pop
adc
push
addr16
push
jg
cmp
loope
jne
jo
cmp
out
leave
adc
les
adc
xor
aaa
sbb
outsb
es
adc
mov
in
das
mov
sub
inc
and
and
cmpsl
sbb
int
lret
fbld
in
mov
xchg
adc
in
xchg
jno
adc
cmp
jp
idivl
jo
outsb
lds
loop
mov
lods
sbb
loope
sahf
aas
imul
sti
sbb
aam
push
xor
scas
adc
aam
mov
rorb
jmp
mov
sbb
xchg
repz
cmp
in
lret
mov
add
mov
jnp
ret
mov
and
les
mov
dec
xchg
mov
aam
ljmp
aaa
enter
ret
js
cmp
hlt
jecxz
cmc
popf
es
ds
js
sahf
cmp
mov
out
mov
jnp
decb
movsb
cmp
lcall
add
iret
push
sub
ja
jae
pop
mov
xchg
dec
lahf
ss
push
out
sahf
insb
repz
fiadds
gs
ret
add
or
call
gs
and
sub
fucom
inc
out
push
mov
dec
pop
inc
and
jb
mov
push
xchg
fisttpll
ficomps
inc
ret
push
dec
fmulp
sub
lock
jo
add
mov
adc
mull
and
xor
push
hlt
out
pop
or
imul
mov
or
je
push
lea
imul
and
xchg
cmp
sub
cmp
add
fistl
nop
xchg
adc
xchg
push
aaa
out
fsts
push
add
adcl
pop
test
loope
lret
lds
xor
jb
sub
icebp
lods
out
xor
jnp
fstpt
jbe
pushf
jb
in
pop
leave
xchg
adc
jp
xor
loop
call
lock
jbe
cmc
or
stos
adc
ret
pop
ffreep
pushf
mov
pusha
adc
sub
fstpt
xchg
cmp
test
or
cmpsb
add
rolb
lcall
hlt
push
and
sbb
mov
test
lret
fisubl
pop
popa
jae
mov
xor
xor
mov
les
lcall
xchg
jae
insl
cs
leave
icebp
adcl
add
xchg
andb
or
int
cld
add
mov
mov
mov
test
xor
pop
xchg
xchg
push
andb
std
dec
pusha
mov
xchg
js
and
cmc
cs
mov
fdivrp
mov
push
jo
ss
xchg
ljmp
push
mov
xorl
movsb
sub
clc
test
mov
movb
pushf
mov
scas
loop
jp
vcomiss
cli
xchg
cld
inc
repnz
push
sub
cmpsb
out
call
or
gs
push
add
ret
mov
jno
enter
and
imul
andb
push
aaa
sbb
je
aad
adc
scas
ret
std
in
int3
subb
js
and
popf
xor
pop
out
popf
insl
iret
jb
inc
aas
and
push
jbe
movsl
in
out
mov
dec
lahf
out
repnz
and
cmp
mov
add
xor
adc
push
cmp
cli
std
in
into
mul
lds
pop
leave
into
cs
mov
xchg
aas
xchg
cmp
insl
insl
gs
aaa
bound
test
jb
add
push
outsb
jbe
xlat
sbb
adc
cmp
sbb
jmp
inc
les
adc
sbb
movsb
cmp
mov
xor
addr16
xor
mov
push
subb
push
imul
lret
pop
mov
fcomp
insb
in
sub
shrl
adc
outsb
in
sbb
inc
daa
mov
stos
jmp
leave
cmp
mov
int
enter
jle
push
dec
sub
mov
and
mov
adc
fistpl
out
adc
lea
ret
aad
sahf
cwtl
push
mov
push
xor
mov
jle
pop
jl
add
jae
pop
in
dec
xor
aaa
jg
or
stos
jae
daa
mov
sub
and
notl
cli
fstps
jecxz
stos
mov
je
fsub
outsl
nop
scas
pushf
or
push
xchg
test
enter
xchg
sbb
in
jmp
cmp
movsl
push
cmp
in
daa
sbb
outsl
lock
push
flds
jbe
add
movsl
push
repnz
imull
imulb
ficoms
or
xchg
or
mov
mov
mov
fsubr
add
jl
jmp
sub
cmp
sub
mov
cmc
dec
and
jb
sbb
enter
mov
sub
and
ja
test
dec
sub
jae
mov
out
xor
inc
fidivl
subb
xchg
std
jle
insb
mov
mov
stos
cwtl
and
mov
and
loopne
fidivrl
sahf
sahf
and
sub
jno
inc
xchg
mov
dec
mov
mov
cmp
cli
push
xchg
inc
pop
dec
inc
xor
xor
pop
mov
adc
fsubr
cmp
adc
in
ffreep
or
push
dec
cmpsl
es
out
adc
push
push
fsubrs
arpl
cltd
lods
jo
loop
ret
popa
mov
ret
inc
or
out
movsl
and
adc
pop
in
mov
xchg
inc
pmuludq
jmp
scas
in
je
cmpsl
xchg
dec
xchg
pop
lret
adc
push
stos
dec
js
daa
sub
push
dec
cltd
scas
in
clc
mov
push
dec
mov
movups
inc
cld
enter
mov
sbb
mov
imul
scas
pop
xorl
mov
pop
or
or
mov
iret
or
in
iret
lahf
es
lahf
mov
mov
cltd
repz
fists
jl
or
push
std
ljmp
rcrl
out
push
jge
push
mov
fsts
sub
pop
and
dec
sbb
mov
jle
fwait
cmp
mov
lahf
pop
push
mov
pop
and
aam
outsl
push
mov
dec
jo
add
jbe
push
sub
pop
inc
ret
imul
scas
jno
xchg
nop
popa
outsl
dec
push
insl
xor
push
mov
push
fdivl
and
xor
daa
or
stos
das
xchg
outsb
cmp
mov
cmp
call
jp
xchg
xor
fldcw
sbb
rcrb
jno
push
pop
cwtl
push
sub
icebp
stc
orl
test
or
pop
sub
or
sbb
ret
fisubrl
jp
mov
fdivrs
dec
bound
outsl
pusha
mov
sub
inc
int3
dec
insl
mov
enter
xchg
shll
mov
lea
adc
std
nop
mov
cli
push
push
add
jno
mov
cs
mov
fcmovne
pop
xor
mov
arpl
add
sbb
aad
add
pop
jbe
repz
mov
sahf
sbb
jle
pop
dec
xlat
ss
pushf
fsts
out
push
add
push
inc
cmc
xor
out
cmp
mov
mov
jl
pop
or
mov
lret
sbb
ss
imul
xchg
iret
fidivrl
sbb
jecxz
clc
lahf
pop
flds
jnp
aad
es
push
fimull
gs
addr16
jmp
jae
insb
and
push
mov
test
pop
jmp
mov
ror
dec
push
jbe
dec
push
or
addr16
push
test
mov
sub
xor
dec
xchg
pop
les
ret
and
fistps
jg
adc
xchg
mov
addr16
adc
pusha
fadd
mov
push
mov
js
mov
mov
std
jmp
mov
push
pop
in
push
jb
sahf
incb
rorb
xchg
lea
sbb
pop
jle
pushf
lahf
push
adc
fildll
cmp
jnp
loope
adc
cmc
ss
or
out
push
ret
push
pop
ljmp
pop
mov
mov
jg
add
inc
sub
cmp
lock
jo
cli
outsb
fs
push
movsb
dec
icebp
or
pop
push
mov
mov
and
mov
inc
mov
xchg
or
sub
xor
std
inc
leave
add
mov
jl
shlb
cmpl
sbb
pusha
daa
add
mov
sbb
int
sti
xchg
sbb
push
jle,pt
pop
insb
fs
ret
push
jmp
fnop
out
fisttpl
cmpl
pop
push
and
adc
pop
add
aaa
inc
int
js
push
inc
cmp
das
push
imul
push
or
xchg
fwait
out
lock
faddl
adc
inc
push
pop
push
jl
rcl
cld
sbb
add
jp
jmp
cmc
lea
push
sbb
sub
fbld
hlt
iret
xor
pop
jle
cmc
jbe
out
in
sbb
enter
cmp
xchg
mov
push
adc
xchg
jg
pop
adc
jno
cmp
mov
ja
sub
inc
test
inc
push
cmpsb
in
mov
shlb
cltd
lcall
aam
mov
sbb
arpl
sub
lahf
psllq
imul
pop
cmp
inc
in
mov
lcall
test
or
roll
cmp
jne
sub
inc
gs
push
out
pop
shlb
push
fcmovu
mov
test
icebp
fnsave
mov
lock
imulb
test
stos
addr16
je
adc
xchg
ss
ljmp
pop
and
xchg
dec
cmp
pop
xchg
scas
add
cmp
shlb
mov
xor
adc
rorl
mov
and
push
xor
cmpsl
pop
sub
gs
clc
sub
xchg
mov
clc
dec
xchg
out
and
pop
lock
dec
test
iret
in
repnz
dec
and
rolb
popf
testb
ret
outsb
jne
jg
rcrl
jnp
jmp
xor
push
fidivl
pop
daa
repz
pop
data16
xlat
mov
cmc
lea
xchg
fisubs
add
loopne
fisubs
jne
jl
xor
jge
and
cld
lret
pop
jge
cmp
cwtl
pusha
adc
sbb
repz
popa
nop
mov
or
dec
jno
jnp
mov
push
mov
mov
dec
inc
add
push
fwait
out
popa
inc
jo
or
pop
xchg
popw
dec
int
lahf
jecxz
or
cs
push
fsubl
sub
xor
lods
loopne
aaa
nop
mov
or
hlt
lds
jmp
mov
loopne
jns
in
insl
int
sbb
and
stos
push
add
xchg
and
jp
adc
dec
arpl
push
mov
ret
sub
inc
mov
and
fstp
loope
lret
lea
cmp
adc
stc
pop
ret
inc
popa
or
cs
test
mov
xchg
push
in
movsl
out
sbb
xor
or
add
js
sub
insb
cwtl
scas
mov
leave
dec
negl
push
scas
pop
or
mov
ret
and
mov
sub
jl
add
test
push
dec
bound
cmp
sbb
popa
jae
inc
cmp
pop
mov
mov
jge
add
sbb
add
add
or
test
leave
cmpsb
or
inc
add
mov
mov
xor
sahf
sub
or
ss
loop
std
jg
mov
mov
ja
arpl
lahf
aad
call
xor
lods
cld
rol
jnp
push
outsl
insl
pop
pop
push
cmc
xchg
stc
andb
pushf
clts
xor
ret
xor
jo
in
ljmp
es
pop
out
std
and
pop
xchg
jo
inc
das
aad
add
jmp
int3
and
mov
xor
jge
mov
inc
popf
orb
sbb
pop
pushf
pushf
push
sbb
inc
imul
jecxz
ja
add
ds
loope
shlb
adc
pop
out
std
dec
int
imul
das
enter
out
shlb
stos
mov
jae
jae
pop
rcrb
dec
mov
and
sub
sub
sarb
outsl
addb
es
inc
pusha
pop
stc
add
ljmp
and
into
jmp
push
in
jbe
push
aad
movsb
fwait
sbb
gs
rorl
cmp
push
and
mov
inc
bound
stc
mov
push
loope
rorb
xchg
cltd
inc
mov
add
pop
jg
in
sub
shrb
dec
push
das
or
inc
sub
sahf
call
inc
cs
push
pop
push
cmc
xchg
js
cltd
repnz
cmp
divb
lcall
fstp
lcall
or
sahf
xchg
sub
pushf
cmp
loopne
movsb
mov
shlb
aad
push
xchg
int
inc
in
mov
pop
mov
dec
test
mov
sahf
xor
jecxz
push
or
std
push
sbb
popf
lods
xchg
cltd
shll
xor
fwait
in
add
enter
sbb
lcall
xchg
std
jns
and
arpl
add
cmp
mov
test
fwait
pop
inc
mov
and
push
fcompl
loope
xlat
arpl
or
xor
pushf
loop
jp
mov
add
or
xchg
xchg
lods
push
std
jle
mov
dec
push
mov
cmp
aad
push
pop
sbb
mov
cli
lods
xchg
outsl
pop
mov
xor
scas
daa
pop
jge
orb
cld
out
sbb
inc
sahf
scas
in
fcoms
pop
and
jmp
into
lret
lods
scas
or
ss
fstpl
andw
shl
jne
cmp
pop
add
jbe
rcrl
fmuls
sbb
mov
mov
ljmp
imulb
add
mov
mov
cmp
cli
jnp
insl
dec
lods
jae
js
jge
fldt
ss
mov
in
and
movsl
shr
nop
sbb
out
scas
jae
cmp
sar
cmp
in
cmp
test
and
test
dec
dec
repz
mov
lret
pushf
mov
dec
nop
cmp
lret
jmp
adc
dec
inc
sti
cmp
hlt
push
push
idivb
aaa
jo
add
jmp
or
mov
sub
fcmovnbe
pop
pop
stc
push
xor
sahf
xchg
jecxz
pop
mov
repz
pop
or
hlt
cwtl
mov
xchg
adc
xor
fsubrl
roll
data16
mov
cmp
mov
ret
aas
cmp
sub
and
mov
pop
je
vmovq
cmp
clc
je
lock
jns
hlt
mov
cmc
add
into
aas
in
pop
int
gs
xor
add
retw
xchg
movsl
xchg
mov
adc
add
xor
xor
add
jg
mov
sbb
pop
ret
jns
cmp
pop
ja
imul
rolb
cmp
sub
sub
sti
cltd
ds
adc
pop
fidivl
ficompl
adc
imul
das
js
xchg
push
orl
sub
mov
sbb
xchg
xlat
call
pop
sbb
repz
mov
push
cmp
xchg
movsb
into
sub
jns
enter
test
je
insl
ret
ret
jge
dec
push
cs
roll
sbb
std
cmp
sbb
pop
in
hlt
add
in
jecxz
mov
subl
lahf
icebp
popf
pop
fistpl
jmp
jecxz
xor
dec
outsb
and
adc
daa
xor
movsl
sub
icebp
shll
inc
shlb
or
mov
add
shll
push
test
ss
xor
mov
pop
pop
shrb
lock
fs
mov
cmpsb
clc
add
xchg
cli
inc
fisubl
jne
sub
lods
pop
pop
sbb
and
stos
pop
test
daa
add
push
xchg
push
bound
arpl
mov
in
int3
or
add
in
sti
test
popa
push
bound
sbb
js
or
aad
dec
inc
jmp
add
mov
jo
mov
test
cld
xchg
jno
loop
inc
add
shl
sahf
pop
xor
dec
jns
xchg
repz
jge
cmp
mov
adc
rorb
fsubs
inc
adc
loope
sbb
fisttpl
ret
pusha
or
cmc
out
outsl
sub
enter
popa
mov
in
sub
lods
movsb
mov
cs
pushf
mov
cmc
jecxz
cmp
dec
mov
mov
dec
pop
sbb
ss
push
mov
pop
cmp
jae
aam
cli
sbbb
push
test
ret
inc
or
divb
xchg
lods
lret
push
adcb
mov
inc
lret
mov
push
lds
adc
lcall
nop
xchg
mov
add
mov
jbe
mov
jne
mov
aas
sub
cltd
cld
inc
mov
push
pop
cmp
xor
pop
jl
add
sub
orl
sbb
pop
sub
das
inc
scas
in
daa
hlt
insl
in
imulb
and
mov
sbb
data16
xchg
insl
jae
mov
imul
ljmp
cmp
insl
cmpb
dec
mov
mov
push
add
xchg
les
jge
mov
test
mov
mov
cmp
pop
mov
in
cmc
cmc
push
shlb
addb
out
sbb
and
cmp
sub
or
outsl
and
mov
dec
jg
push
lods
xchg
cmp
pop
dec
hlt
and
jle
lret
fs
cmc
xor
pop
pop
test
iret
cmp
inc
out
push
jno
inc
push
out
frstor
movsb
xor
push
xor
lds
jp
iret
jecxz
sbbl
add
jl
mov
test
push
insl
fstpl
sub
loop
sbb
rcrl
dec
and
pop
int
mov
xorb
xchg
sub
cmp
or
push
jns
mov
pusha
push
out
or
mov
mov
scas
imul
ds
test
sbb
shr
std
xchg
movsl
jge
lods
mov
cld
test
xor
test
xlat
cmp
pusha
fisttpl
movsl
movsl
jecxz
cwtl
cwtl
xchg
cmp
ds
xchg
pop
cmp
mov
out
jae
and
sbb
fistl
pop
rorb
dec
imul
popa
jbe
xchg
dec
adc
sbb
dec
stos
divb
add
lahf
sahf
mov
push
and
mulps
or
inc
dec
inc
and
adc
dec
repnz
scas
jmp
dec
sub
cmp
inc
repz
xchg
shrb
repz
outsl
into
out
mov
iret
or
sub
add
jae
push
push
adc
sbb
fldlg2
jl
push
xchg
scas
adc
pop
cmp
lret
mov
stos
cli
test
sub
out
sub
pop
inc
imul
xchg
mov
movsb
out
loop
push
sub
out
test
loopne
jp
mov
and
cmp
sbb
aaa
adc
pop
dec
push
in
xchg
mov
jg
and
stos
ds
movsb
ret
cltd
test
test
cmpsl
faddp
push
add
or
push
in
pop
test
adc
cmpsl
sbb
testb
stos
outsl
inc
add
stos
in
hlt
jecxz
pop
lret
push
out
cli
xor
xor
and
lret
sbb
fiaddl
lahf
add
xchg
inc
xchg
mov
out
loope
std
add
jbe
orl
enter
outsb
mov
sbb
sbb
mov
mov
pop
push
insl
cwtl
jle
jge
and
push
pusha
ret
sbb
popf
push
xchg
out
repnz
jbe
int
push
mov
adc
hlt
in
arpl
outsb
pop
repnz
and
jge
fstpl
sub
jne
dec
lea
inc
lea
ds
push
sbb
jns
add
movsb
jo
imul
les
dec
orb
out
ror
xchg
aas
sub
adc
sub
outsl
lahf
inc
mov
dec
inc
ret
repnz
je
scas
clc
jl
testl
jmp
in
sbb
nop
or
add
adc
rorl
in
adc
les
sub
mov
mov
push
enter
adc
pop
jae
xor
jnp
jo
cmp
jno
and
sbb
cmc
adc
jmp
cmp
lahf
imul
pop
fiadds
ret
nop
push
out
adc
adc
adc
lcall
jns
lds
fildll
xchg
repz
xchg
fcoms
sub
xchg
cmp
cmp
push
xchg
pop
inc
clc
dec
push
je
or
lock
mov
out
je
cmp
shrl
sti
cmpsb
into
xchg
jle
in
or
cmp
mov
sarb
push
sub
lods
inc
fisubs
fnstsw
cmpsb
lcall
xchg
rol
sub
inc
inc
cltd
jbe
ljmp
fists
push
lret
int3
cmpsl
enter
enter
add
fdivs
lahf
shlb
pop
dec
imul
sub
lock
cld
cwtl
push
cmp
and
iret
mov
mov
in
mov
xlat
call
divl
loope
hlt
aas
push
cltd
aam
jl
xchg
stos
fisttpl
test
leave
test
mov
mov
mul
adc
mov
test
mov
test
jmp
in
call
cltd
movsl
lcall
icebp
add
and
push
rclb
pop
lcall
in
in
adc
sbb
gs
push
cli
dec
test
or
xlat
out
xchg
push
mov
jbe
jecxz
push
and
mov
insb
cwtd
ret
fisubrl
adc
int3
and
inc
lock
scas
out
push
icebp
fnstenv
cmpsl
es
cmp
shrl
addr16
push
mov
push
xor
lock
pop
jmp
mov
mov
sub
std
stc
outsl
iret
pop
pop
xchg
push
fstpt
xor
arpl
or
addb
ss
or
je
les
jne
push
sbb
mov
pop
aad
flds
inc
push
and
sub
cltd
ds
inc
bnd
iret
cmpsl
rolb
les
test
outsb
mov
or
adcl
aas
fistpl
int
xor
cmp
shrb
lock
lcall
shlb
mov
out
sbb
rcl
cmpsb
push
in
je
arpl
or
mov
or
test
pop
lods
out
lahf
add
out
std
or
int
jl
cmp
mov
add
cwtl
pop
push
cld
fs
sub
cmp
fildl
imul
adc
lcall
shrl
xchg
call
sub
mov
and
pop
dec
nop
and
and
sbb
push
jns
xchg
sti
dec
xchg
out
pop
filds
leave
mov
pushl
pop
ja
neg
xchg
into
push
xor
sbb
cmpsb
mov
cli
mov
dec
and
push
iret
out
out
loopne
pusha
addr16
les
cmpsl
scas
jo
repnz
xor
mov
sarb
cmp
loop
cltd
cmp
repz
in
mov
push
ret
cmp
out
jle
jecxz
adc
leave
sub
jo
arpl
jno
add
and
xchg
idivb
push
pop
ljmp
outsb
xchg
imul
add
lods
les
mov
jmp
or
aaa
rcrl
adc
jp
adc
mov
jl
mov
cmp
pop
jmp
mov
cmpsl
clc
popa
lds
add
mov
cs
sbb
cmp
daa
rcrl
jg
in
pushf
ja
lret
xor
je
mov
test
sti
lahf
mov
stos
mov
imull
mov
xchg
inc
pushf
fwait
push
insb
jns
pop
cmpsl
popa
cmp
mov
cmpsb
mov
xor
test
test
jge
inc
cli
fdivs
xchg
fstps
inc
fildl
dec
addr16
lods
test
xchg
inc
test
mov
inc
push
fmull
jmp
pop
fwait
clc
mov
inc
mov
cmp
sarb
movsl
cs
ds
movsl
cltd
ljmp
jp
aaa
adc
neg
scas
inc
adc
test
js
xchg
xchg
push
mov
cld
mulb
ds
mov
frstor
cmp
out
mov
call
xchg
inc
cmc
ja
hlt
aam
stos
adc
and
loop
lds
ret
mov
fidivrs
add
ds
adc
xor
cltd
or
pop
inc
dec
adc
das
mov
dec
pop
les
xchg
pop
xchg
inc
out
mov
test
lret
mov
mov
mov
out
mov
nop
jmp
inc
aam
pusha
movsl
test
xlat
dec
ljmp
jno
push
outsb
mov
or
subl
into
sbb
mov
into
push
adc
pop
clc
adc
rcrl
or
mov
stc
sbb
cs
aaa
notb
je
clc
xor
and
loop
xor
fildl
call
loopne
in
push
int3
aam
jns
push
jb
sub
cmpsl
xchg
mov
push
dec
xor
movsl
lcall
loope
jg
aad
jo
cmc
jg
arpl
xchg
and
iret
js
repnz
enter
mov
fistps
and
sbb
ja
sbb
add
roll
mov
and
jle
push
adc
inc
movsb
adc
sbb
jmp
aas
xchg
sbb
mov
mov
out
rcr
xchg
shll
test
or
stos
rolb
cmp
loopne
gs
pop
push
xchg
repz
mov
shr
out
cwtl
push
stc
pop
jmp
test
adc
push
rorb
dec
sahf
jae
stc
aam
test
hlt
mov
xchg
cmpsb
out
icebp
mov
xor
pushf
inc
call
mov
out
flds
movsl
sbb
ret
rcrb
push
das
mov
xor
dec
test
push
adc
cmp
add
shl
fisubl
adc
jb
mov
cmp
in
and
sti
mov
push
adc
imul
das
inc
scas
call
add
callw
scas
ret
adc
jb
nop
adc
filds
inc
add
stos
push
or
jmp
pop
arpl
scas
movsb
lret
sbb
lods
jne
lea
mov
rcll
mov
push
lods
pusha
pushf
jmp
and
out
scas
push
psadbw
dec
jg
daa
cmc
loope
sti
repz
mov
popf
push
mov
inc
push
sbb
mov
cmc
xchg
cmp
popf
in
inc
inc
adc
mov
cld
mov
add
lret
out
aas
frstor
mov
sub
or
and
jge
testb
rorb
pop
cmc
sbb
out
mov
add
xchg
adc
pop
mov
mov
or
pop
or
mov
pop
stc
mov
lcall
popa
roll
mov
leave
and
insl
mov
mov
aam
add
repnz
jnp
add
push
jle
push
mov
loop
mov
sub
ja
or
shrl
out
mov
push
and
mov
jnp
sti
add
xchg
repz
pop
cli
orb
shlb
xchg
mov
in
inc
dec
aas
or
ficoms
popf
js
fcmovnb
sahf
inc
shlb
jns
js
jl
mov
test
fiadds
ficompl
inc
mov
dec
leave
pusha
and
loope
lahf
hlt
cmp
pushf
sub
data16
cmp
cltd
add
push
jbe
sbb
xor
call
cmp
and
orl
cmp
mov
imul
cmp
push
inc
movsl
jbe
arpl
scas
dec
inc
jecxz
add
cltd
movsb
inc
add
lods
pop
mov
lret
fdivrl
jns
movsb
std
ret
mov
jne
pop
jns
xor
inc
sarl
fs
jno
ss
fisttpl
pop
lods
fstl
cmc
push
arpl
test
cmp
lds
or
sbb
ror
icebp
lret
xchg
push
popa
push
push
pushf
push
jl
xor
adc
sbb
sub
push
pop
dec
addr16
test
fmulp
test
sub
fstps
or
xchg
rolb
lahf
inc
jmp
cmpsb
nop
jbe
aam
sahf
out
loop
out
mov
xor
fs
jo
ret
mov
mov
xor
inc
push
mov
jg
mov
or
pop
and
pop
jecxz
mov
sub
pop
imul
stc
sub
mul
mov
cmpsl
testl
adc
xor
pop
mov
mov
leave
roll
pusha
mov
out
mov
sar
cmp
in
scas
pop
mov
cs
in
call
repz
mov
inc
add
insl
es
pop
adc
xchg
push
lea
cli
sub
leave
mov
insb
sbb
push
xchg
imul
movsb
movsb
lahf
cmp
stc
pushf
add
xor
les
push
jns
andb
aaa
cli
bound
mov
push
movsl
mov
ljmp
xchg
lods
stos
adc
pusha
and
cltd
sub
cld
or
subl
out
dec
mov
movsb
lahf
mov
xchg
lods
and
sub
mull
jle
mov
push
cmp
sbb
xchg
push
fnstenv
xchg
sbb
enter
pop
pop
fwait
jecxz
or
leavew
cwtl
insb
adc
pushf
add
xchg
fs
sbb
sub
xor
push
mov
dec
mov
jp
pop
push
outsb
push
cmp
xchg
dec
mov
inc
dec
dec
pop
add
mov
fadd
inc
out
ja
pop
rclb
scas
pop
sub
mov
pop
lret
sbb
xor
xchg
xor
xor
xor
add
insl
aas
add
pushf
sbb
out
push
mov
inc
sets
inc
xchg
insl
lods
adc
cmp
mov
add
fdivl
push
popf
xchg
dec
mov
fnstenv
jg
cmp
cld
insb
into
mov
jae
ret
pop
iret
jl
fdivrl
js
out
int
gs
add
sub
jns
orl
inc
mull
mov
filds
adc
popa
mov
sub
mov
push
pop
into
test
dec
insb
sub
lret
popf
aas
mov
jbe
inc
js
sahf
loopne
push
int
loop
je
fnstenv
mov
mov
in
xor
mov
mov
adc
pop
add
push
dec
scas
push
push
iret
outsl
adc
cmpb
popa
push
aaa
mov
xabort
jno
lret
xor
scas
cmp
add
insb
jmp
cmp
mov
cmp
enter
or
pop
inc
dec
sbb
test
sub
dec
push
lret
lret
cmp
sbbl
scas
pop
xchg
push
mov
sbbl
mov
loop
xlat
xchg
aad
push
pop
jl
pop
lret
inc
shll
daa
inc
inc
js
js
mov
xchg
push
sbb
das
sub
sbb
fcoml
cwtl
arpl
divb
aas
xor
cmp
mov
mov
sbb
shl
jns
dec
fldcw
lret
xchg
cmc
in
mov
call
mov
neg
xchg
nop
mov
js
inc
xchg
outsb
cmc
cli
mov
in
mov
cmp
shrb
mov
ja
mov
stos
fdivl
mov
adc
mov
or
mov
mov
incb
or
insb
clc
jno
aam
push
inc
shlb
cmp
rol
mov
cwtl
pop
push
pop
add
pop
fbld
mov
movsl
pusha
xchg
sbb
inc
mov
cmp
insb
cmp
jecxz
faddl
sbb
jb
stos
push
bound
test
leave
aad
sbb
jge
jmp
xor
and
or
xchg
mov
xor
or
fs
cmp
xor
int3
int
adc
cmp
out
ret
push
in
inc
xchg
popa
loope
loopne
xor
sahf
and
cmp
pushaw
mov
scas
xor
and
jp
or
stc
xor
dec
pop
sub
mov
xchg
mov
lods
mov
add
pop
mov
or
push
add
ficoms
ds
fcmovne
fs
push
bound
pop
movsb
test
jp
mov
fidivrs
scas
cmpsl
mov
insb
pop
pop
mov
xchg
inc
ds
enter
ret
cmp
adc
jmp
push
jns
cmp
fldt
jmp
dec
jp,pn
jecxz
and
mov
push
jb
sub
xor
mov
lods
cmp
cmp
inc
imul
aad
pop
ss
push
rcrb
repz
pop
in
inc
out
push
int3
mov
cltd
sbb
mov
push
inc
sarb
xchg
add
sub
add
pop
and
or
mov
dec
adc
lods
xchg
mov
and
jp
loop
mov
mov
jmp
rcrb
ja
aas
or
sbb
lret
push
andb
add
int
movsb
aaa
ss
push
iret
jne
sub
ret
push
lock
cld
out
mov
pop
cmp
xor
pop
or
lds
mov
cs
jmp
mov
sub
dec
cmpsl
sub
movsl
std
daa
lret
out
mov
icebp
or
clc
cwtl
in
dec
fmull
test
lret
sti
cmp
xor
jg
xchg
into
adc
mov
jle
xchg
add
mov
call
lea
lcall
sbb
push
imul
ds
in
xor
jle
std
insl
xor
std
andb
arpl
ja
sbb
pop
or
mov
push
pushf
add
outsb
cmp
pop
sbb
vpsubusw
mov
int3
imul
jb
sarb
aad
jns
call
mov
xor
sbb
sub
pusha
mov
mov
push
inc
mov
pop
pop
daa
or
mov
cmp
or
and
aaa
mov
xchg
mov
sub
mov
cmp
or
daa
outsl
inc
ret
scas
mov
mov
fdivr
loop
fisttpl
push
bound
scas
es
add
and
xchg
lahf
adc
repz
in
push
jmp
lret
mov
sbb
mov
std
mov
push
movb
rclb
pop
push
loope
imul
push
ret
test
sbbl
out
lcall
dec
mov
test
insb
psrad
jo
iret
sbb
and
dec
inc
push
lret
aad
xchg
int
jno
fdivrs
push
aaa
pushf
in
mov
cmc
and
cwtl
cmpsb
adc
enter
pop
jb
adc
insb
push
jecxz
sahf
out
inc
popa
cmp
cmp
fcom
dec
mov
sbb
nop
nop
xchg
fiaddl
xor
sbb
mov
and
mov
jb
lock
dec
mov
adc
loope
das
fptan
in
addr16
adc
aas
or
mov
cmpsl
dec
inc
sbb
sbb
movsl
stos
mov
xor
sub
pop
xchg
push
pushf
jmp
mov
xchg
jl
push
adc
add
jl
push
jle
mov
or
std
cmpxchg
mov
xchg
pop
xor
insb
push
mov
sbb
testb
orl
das
stc
dec
jmp
rorb
jmp
outsb
mov
or
daa
cmc
inc
lret
jne
or
imul
push
sub
loope
in
jae
mov
xor
xchg
jl
inc
ret
cmpsb
sub
movsb
mov
push
imul
clc
jns
imul
dec
scas
mov
mov
je
mov
jge
insl
outsl
push
mov
xchg
mov
mov
fs
imul
adc
jp
test
lock
and
sbb
and
bound
loope
sbb
sbb
pop
add
mov
pop
sub
cltd
jp
loopne
test
jecxz
fmuls
jo
mov
xor
jae
je
movsb
inc
out
hlt
xchg
push
sub
cmp
repz
pop
scas
jbe
aam
fadd
mov
fistps
sub
jnp
pusha
adc
adc
mov
xchg
fwait
mov
shlb
lock
adc
mov
fnsave
fcompl
mov
or
in
cli
fcompl
out
aaa
adc
lds
jge
incl
push
fcoms
out
popf
es
call
push
mov
les
cltd
or
sub
push
bound
and
fs
mov
dec
ds
stc
or
cmpsb
jo
mov
pop
mov
push
jnp
fcmovnb
ja
mov
stos
nop
pop
cld
fadds
imul
ficomps
dec
aad
or
loop
call
inc
xor
push
push
in
dec
push
dec
mov
sbb
adc
adc
jns
out
je
dec
sub
inc
cs
std
cmc
clc
lock
inc
cli
leave
adc
sub
leave
pop
popf
mov
pop
jns
inc
pop
testl
fwait
test
and
jnp
mov
inc
stos
mov
mov
mov
and
cli
pop
dec
add
xchg
les
sub
pop
and
ljmp
rcrb
repnz
or
pop
dec
repnz
jecxz
xchg
or
cmp
jmp
out
mov
gs
push
jmp
xchg
mov
sub
inc
adc
stos
cmp
pushf
rorl
rcrl
inc
loopne
inc
xchg
cmp
or
cli
hlt
in
cmp
mov
in
mov
mov
jbe
in
ljmp
adc
sub
mov
pusha
sub
cwtl
jbe
pop
js
push
mov
xor
movb
dec
fsubs
pop
js
insb
hlt
push
addl
dec
test
cmp
xlat
popa
scas
jmp
jl
call
clc
shrb
lods
xor
loopne
mov
sub
cmp
push
pusha
xchg
mov
push
pop
stos
add
out
loope
mov
xchg
xchg
sub
jecxz
or
add
loop
mov
jge
inc
dec
clc
test
jns
call
test
mov
dec
and
sub
xchg
sahf
sbb
push
mov
fisubrs
icebp
mov
xor
repz
lods
sub
push
stos
cmpsb
pop
cmpsl
mov
fs
mov
sub
lea
imul
inc
shl
int3
dec
popf
stos
std
dec
cmp
pusha
ret
imull
or
int
xor
call
and
out
push
xchg
ja
cmp
in
xchg
xchg
mov
adc
or
mov
int
stos
adc
stos
and
aad
push
lret
sub
andb
incb
int3
mov
movsb
sbb
scas
dec
dec
out
clc
xchg
loopne
adc
jne
repnz
outsb
push
test
mov
stos
addr16
xchg
rorb
mov
mov
scas
cwtl
testl
sbb
mov
push
ljmp
lods
jmp
pop
cmp
hlt
push
push
add
sub
dec
sbb
mov
push
push
in
cs
fldl
jle
mov
pop
sbbb
push
jmp
ss
cmp
xchg
pop
jno
lea
mov
adc
arpl
jo
push
push
lods
jmp
js
testb
fs
push
push
dec
jmp
stos
and
rcll
or
lahf
jbe
fiaddl
insl
and
filds
mov
sbbb
filds
inc
out
enter
mov
mov
pop
inc
xchg
in
push
sbb
aas
test
fbld
add
shll
int3
mov
sub
dec
push
adcl
jns
pop
push
inc
pop
mov
pop
mov
cmp
jns
aad
adc
inc
push
nop
cmp
dec
shlb
scas
jg
push
sbb
movsb
add
xchg
pushf
nop
js
mov
and
mov
repz
and
pop
dec
loope
jecxz
adc
and
sar
fstp
adc
loope
movsb
jmp
xor
fistpl
cltd
imul
xchg
enter
movsl
pop
lcall
insl
test
adc
add
sbb
adc
mov
mov
push
fisttps
mov
mov
push
pop
fistpl
cmp
aam
or
dec
cltd
pushf
lea
sbb
bound
cwtl
sbb
jno
add
push
ja
and
stos
call
inc
and
jne
jns
shl
xor
int3
lods
xor
lret
mov
insb
dec
jge
pop
lret
inc
cmpsb
out
push
mov
pop
xor
add
nop
inc
dec
push
cmp
inc
adc
mov
scas
in
mov
jg
pop
clc
mov
mov
push
and
pop
std
lods
pop
popf
out
lahf
add
pop
enter
hlt
lock
pop
mov
push
adc
adc
jne
mov
aad
add
stos
mov
sahf
mov
mov
or
or
xchg
xchg
sub
sub
in
in
sbb
mov
cmp
outsl
jae
adc
stos
xchg
or
jno
shll
das
cmp
es
xchg
enter
inc
jg
jmp
test
mov
andb
jns
sub
mov
out
xor
xor
and
or
add
mov
lea
aaa
sub
jne
add
test
in
jb
rolb
rorb
out
xor
jns
pop
push
test
xchg
cmp
sahf
das
add
pop
movsl
inc
outsl
xchg
addr16
mov
inc
jmp
arpl
jle
fs
inc
imul
push
push
cs
sbb
pusha
mov
sti
sbb
dec
mov
dec
xor
fwait
loop
fucomip
enter
mov
sbb
cs
lods
push
sub
xlat
pop
imul
popf
and
inc
sahf
rcl
insl
insl
mov
cmpsb
dec
fnstenv
sbb
mov
cld
loopne
fst
loop
in
or
push
fs
jb
leave
stos
and
pushf
cmp
fadds
std
dec
inc
add
mov
in
xor
cmp
and
clc
or
and
or
jbe
cmc
lret
pop
js
notl
pop
nop
fldt
xchg
addb
add
inc
pop
arpl
lock
in
ljmp
cmp
mov
add
and
fistpll
lods
jno
sub
fwait
cmp
and
xchg
push
or
sbb
push
push
inc
shlb
sub
test
jns
dec
in
cld
popa
les
lock
inc
jl
lods
mov
ljmp
jns
fsubrl
ret
sbb
sub
mov
aaa
ror
gs
imul
cmp
inc
pop
dec
xor
leave
mov
mov
es
push
sbb
push
loopne
adcb
dec
lea
xchg
lret
push
test
mov
fs
or
cmpsl
inc
mov
cmp
mov
inc
inc
xchg
loop
xchg
std
or
mov
mov
dec
push
jne
inc
enter
inc
pop
fcoms
sbb
ja
pop
aam
cwtl
bound
in
mov
aam
add
mov
leave
pop
ret
jecxz
pop
push
push
cmpl
and
cmp
les
outsb
xchg
xor
out
test
lret
arpl
cmp
xchg
jmp
hlt
outsl
mov
inc
inc
add
pop
mov
adc
pop
xor
fwait
ds
mov
jbe
icebp
shlb
xchg
fcmovnu
pop
mov
sti
aas
jne
add
out
int3
in
js
or
cmpsb
or
mov
jo
xor
push
fwait
sbb
push
test
push
aam
mov
mov
lods
sbb
pop
lea
mov
mov
mov
add
into
sub
negb
and
scas
or
and
push
sbb
test
add
push
jno
gs
shlb
sahf
jmp
fwait
sbb
mov
mov
pop
repz
fstpt
sahf
imul
aam
jge
pop
jmp
jmp
add
jmp
add
ljmp
mov
pop
and
iret
mov
sbb
fnstenv
sub
xchg
jb
mov
ret
xor
std
lret
adc
push
inc
cmpsb
decb
push
mov
xor
inc
dec
push
dec
mov
pop
enter
push
inc
and
out
roll
mov
dec
xchg
jnp
xor
popa
imul
cmpxchg
xchg
mov
scas
pop
in
pop
lock
mov
cmp
in
je
pop
ljmp
and
repnz
add
repz
fildl
pusha
mov
outsb
sub
int
pop
aas
ret
aam
bound
out
int3
sub
mov
and
xchg
repnz
cltd
adc
xchg
xchg
scas
inc
sbb
inc
pop
jle
nop/reserved
inc
inc
add
dec
pop
cld
inc
shrb
fistl
add
testl
sub
inc
scas
adc
int3
xor
data16
cmpsb
or
mov
add
jecxz
pop
pop
dec
mov
cmpsl
into
sbb
dec
inc
jno
movsb
xchg
mov
push
ret
adc
fwait
shll
pop
sahf
es
inc
sub
lret
lahf
popa
sbb
dec
or
sub
sub
push
mov
dec
adc
push
dec
mov
in
jl
shl
in
outsb
xlat
inc
aas
or
insl
cltd
lcall
mov
cltd
fists
push
jnp
jno
sub
xor
cli
orl
adc
sbb
insl
inc
jmp
lods
inc
or
sub
jo
std
sub
int
rcll
aas
xchg
or
fs
xchg
pop
adc
sbb
sbb
enter
jle
fldenv
lock
adc
lcall
mov
roll
mov
test
aad
fistps
xor
jge
push
push
cmpsb
xor
sbb
xor
dec
test
and
sahf
adc
cmp
and
out
jp
and
cltd
sbb
hlt
fnsave
aas
pushf
outsb
test
popa
and
scas
and
inc
add
cli
mov
inc
jmp
stc
fwait
iret
cltd
mov
jecxz
fmuls
push
inc
adc
loop
and
lock
aam
gs
mov
and
jno
lret
sbb
imul
movsb
les
cmp
xchg
popa
int3
jbe
idivl
push
jle
scas
movsl
fcmovnbe
pop
outsl
ljmp
orb
lret
negl
xor
outsl
sub
mov
mov
ljmp
add
es
les
insl
addr16
insl
add
push
xor
js
repz
mov
xor
ljmp
lcall
mov
lret
xor
sbb
loope
xchg
xchg
scas
inc
in
sub
dec
mov
into
jge
shll
xor
out
aad
inc
mov
pop
inc
loop
loopne
lds
mov
jbe
add
mov
or
adc
adc
es
scas
arpl
fisttps
outsb
sbb
push
rolb
and
sub
lret
outsb
jmp
test
insl
pushf
pop
adc
dec
push
cltd
cwtl
fadds
clc
fiaddl
out
rolb
add
xor
loop
loopne
and
in
adc
jge
scas
and
mov
inc
mov
mov
cmpsl
jle
mov
mov
fs
insl
rolb
mov
enter
jne
fistpl
sub
xchg
jbe
js
push
insl
push
sub
push
enter
mov
add
outsl
jbe
sti
mov
sub
xchg
lods
lock
lahf
lahf
insl
sti
dec
inc
movsb
int3
cli
mov
sarl
test
loope
dec
lcall
xchg
cmp
lcall
dec
loop
out
out
iret
push
mov
xor
mov
xchg
sbb
push
jmp
pop
adc
and
sti
pop
inc
insb
push
mov
enter
lret
insl
leave
out
cmp
xchg
jae
int3
dec
jg
xor
lods
mov
xchg
fisttps
mov
loop
outsl
icebp
ljmp
sub
mov
xchg
cmp
inc
adc
mov
sti
sub
sub
popa
iret
add
das
clc
or
test
into
cmc
repnz
or
pop
adc
dec
push
pop
data16
or
mov
push
or
sbb
pushf
lret
pop
ror
jbe
adc
mov
and
shrl
sub
add
mov
out
jb
jnp
cmp
cmp
js
out
lods
idivl
jae
or
push
push
cmp
mov
push
cmp
nop
test
sub
jbe
mov
decb
xor
xor
lds
mov
or
idivl
cmpsb
sub
inc
mov
dec
cs
mov
data16
push
pop
xchg
repnz
rcrl
mov
jmp
loope
inc
xor
aas
nop
adc
ffree
or
adc
sub
push
mov
and
sub
mov
ljmp
movsb
shl
xchg
std
mov
cmp
nop
popa
aam
iret
jnp
stc
dec
jmp
data16
sub
fld
mov
enter
js
test
xchg
pop
std
dec
or
ds
sti
xor
push
icebp
push
outsb
fistps
mov
mov
js
dec
lods
or
sbbl
pop
bound
int
and
imul
inc
daa
cld
out
es
addr16
mull
mov
fucom
dec
lret
add
sbb
dec
daa
mov
std
pop
decb
push
mov
sbb
mov
stos
jl
imul
pop
and
rcl
lods
loop
lcall
hlt
push
shrl
pop
mov
cli
jnp
push
pushf
or
lods
cmp
mov
ja
cmp
insb
add
jle
jne
sti
dec
sub
dec
out
inc
cmp
arpl
jbe
dec
les
je
inc
cmpsl
gs
nop
mov
xchg
adc
add
xor
or
mov
xor
push
scas
push
mov
cltd
jo
iret
scas
xchg
lds
rcr
and
imul
filds
cld
dec
sbb
fdivrs
mov
stos
mov
stos
mov
inc
adc
push
xor
mov
ljmp
xchg
sub
xor
sbb
mov
xchg
inc
movsl
pop
mov
dec
pop
and
push
xchg
and
sbb
movsl
sbb
movsl
jne
push
aas
sbb
xor
nop
test
fisubs
int3
inc
add
stc
mov
into
mov
sarb
jae
aam
jp
das
lcall
arpl
pop
pop
sub
gs
and
xchg
mov
lock
jne
lock
out
xor
cmp
xchg
sub
nop
out
imul
push
pushf
push
sti
push
cmp
pop
mov
mov
mov
jle
lahf
in
sub
loope
pop
dec
dec
xlat
pop
sub
mov
ret
ljmp
pop
loope
inc
push
and
nop
cli
push
lret
fistps
inc
adc
jno
cmp
mov
mov
push
loop
int3
and
imul
cld
cwtl
pop
lods
adc
xchg
jmp
jnp
xchg
mov
jmp
push
aam
pop
test
leave
sub
leave
inc
hlt
or
mov
cmp
jmp
pop
push
ret
pop
int3
and
add
xchg
sbb
adc
cmp
es
cmp
stos
sub
rcrl
mov
mov
mov
stos
sbb
data16
add
pop
lahf
xor
dec
adc
mov
int3
xchg
ffree
or
cmp
push
sbb
in
fisubs
sar
enter
push
je
cmpsb
jge
push
loopne
cmc
stos
int3
sbb
enter
mov
jb
and
jae
xchg
sbb
xchg
cmpl
sbb
aad
mov
clc
lahf
mov
push
and
push
stc
cmp
in
push
inc
daa
repz
mov
mov
fnstenv
jl
inc
in
inc
fsubrs
fisubrs
nop
notl
mov
jbe
je
cmp
fldt
mov
xor
stos
imul
rol
inc
pop
mov
mov
outsl
int
ret
fs
mov
imul
sbb
jecxz
mov
and
sub
stos
adcl
cld
cmp
push
mov
push
jno
pushf
dec
mov
push
push
jg
xchg
adc
pop
pop
es
sub
inc
mov
xchg
cmp
arpl
cmp
std
xor
xchg
mov
xor
inc
aas
in
movsl
dec
lods
xchg
je
adc
cs
pop
push
jb
dec
pop
ja
dec
insl
push
imul
dec
xor
sbb
and
lods
test
sbb
jle
push
out
cltd
mov
and
xchg
sub
inc
mov
ret
popf
and
les
push
paddw
jnp
dec
push
mov
notb
mov
xor
sub
jo
icebp
push
sub
repnz
cmp
or
and
je
pop
and
add
sub
dec
push
fwait
loope
mov
popa
xchg
je
jb
cmpsl
icebp
sbb
pop
dec
xor
movl
sub
push
outsl
insl
sbb
cld
pop
inc
xchg
lds
or
cmp
stos
xchg
push
sahf
aam
pop
xchg
mov
sub
add
push
pop
out
sub
push
push
out
mov
addr16
mov
nop
mov
sahf
push
mov
scas
pop
mov
testl
xchg
dec
mov
xor
sub
cmovg
lret
dec
push
dec
fwait
xchg
push
adc
icebp
sbb
das
jb
and
aas
je
bound
stos
cmp
insl
mov
insl
je
or
std
ret
pop
out
xchg
and
and
cmc
fbld
mov
dec
jnp
fwait
push
loope
enter
pop
xor
ret
cmpsb
push
mov
call
ds
mov
push
mov
xlat
xchg
fstl
sti
and
xchg
mov
cld
add
mov
jno
dec
mov
sbb
test
xchg
aam
outsb
dec
adc
mov
fidivl
fidivrs
pop
aam
das
jl
sarb
cmp
bound
mov
lcall
dec
cmc
pop
addr16
and
es
jecxz
cltd
and
xchg
push
xor
push
es
aas
jae
fwait
sub
arpl
pop
lcall
lret
inc
test
pop
dec
lds
orb
push
incl
add
push
sbb
adc
imul
aad
jmp
icebp
push
clc
int
cli
stos
outsb
int
outsb
jnp
sub
orl
scas
jae
cmc
push
mov
daa
adc
adc
insb
sbb
and
cmp
sbb
icebp
mov
arpl
push
testb
mov
dec
lods
dec
push
or
pop
cwtl
repz
imul
call
iret
push
aam
mov
and
ja
pop
pushf
sub
mov
rcrl
fwait
in
inc
sub
jp
bound
xor
outsl
pushf
adc
and
push
rcrb
mov
rcrb
add
ja
mov
sub
pushf
test
sbb
testb
clc
sbb
mov
mov
lret
pop
in
add
and
jae
stos
jbe
outsb
outsb
inc
xchg
test
mov
cmp
pop
xor
outsb
jecxz
movsb
sti
jne
push
cltd
shll
push
out
xor
imul
add
pop
push
jge
or
es
leave
sub
enter
sub
inc
fnstsw
mov
mov
stc
or
lea
sub
stos
mov
dec
sbb
add
js
jnp
cld
or
lret
dec
test
cwtl
repnz
add
bound
bound
gs
repnz
adc
mov
push
fildl
xchg
sbb
xor
jge
movsb
out
fcompl
repnz
xchg
mov
decb
mov
and
imulb
iret
and
add
filds
pcmpeqw
inc
cltd
imul
dec
fsubrs
push
inc
xor
sbb
pop
ret
mov
jecxz
mov
sbb
sti
xor
xchg
arpl
pop
stos
movb
jno
ss
aaa
push
mov
fstl
es
cld
lock
xchg
arpl
or
hlt
jmp
sub
add
adc
hlt
pop
shll
and
jecxz
in
hlt
inc
lods
mov
pop
jno
ja
pop
add
and
ret
scas
inc
call
in
mov
je
mov
in
mov
dec
xchg
test
sar
and
lret
orl
and
push
or
lcall
cmpsb
in
or
lock
fwait
pop
mov
mov
push
mov
iret
dec
jns
add
pop
adc
shl
aam
sbb
mov
inc
sbb
sbb
jae
test
in
pushf
loopne
mov
push
mov
dec
mov
sub
dec
jmp
and
pop
jle
scas
pop
insl
jns
xchg
and
insl
xor
test
pop
pop
out
xor
jb
or
nop
rcrl
into
stos
inc
push
inc
sub
mov
mov
ret
or
mov
std
nop
pop
adc
cs
mov
lock
sbb
mov
cltd
mov
lcall
lods
out
pop
jne
push
inc
push
data16
aad
roll
pop
xchg
sub
out
in
xchg
popf
inc
sub
push
sub
sub
xchg
movsl
outsb
fstpt
loopne
stos
pop
mov
outsl
addr16
mov
xchg
pop
lds
xor
in
cmpl
xor
int3
mov
mov
test
cmp
in
add
jae
filds
xchg
fldcw
or
hlt
mov
xor
xchg
lahf
jo
mov
sub
clc
aam
cmp
push
add
xlat
out
and
lods
sbbl
mov
push
cltd
rcll
mov
nop
test
adc
adc
repnz
push
cmp
fwait
push
fistpll
mov
mov
push
add
test
cli
mov
loopne
push
pop
test
and
pop
in
adcl
cmp
inc
enter
jecxz
mov
push
call
jg
repnz
sub
add
cld
jge
negl
lods
call
cmpsb
sub
cmp
fs
mov
sbb
pop
xor
fcmovne
repz
adc
or
add
xchg
nop
inc
test
jae
mov
fdivl
rorb
xor
or
mov
aaa
cwtl
mov
daa
inc
push
mov
mov
test
out
jo
adc
add
xor
mov
mov
and
in
xchg
dec
xchg
lret
add
cwtl
xorl
jbe
xchg
sub
shll
mov
imul
cmp
fldl
xchg
mov
jns
std
fstpl
fdivr
lods
push
fs
ja
jno
les
outsb
mov
out
ja
sbb
mov
sub
in
ss
and
fidivrl
orl
dec
testb
and
xor
mov
arpl
push
or
adc
or
jno
push
dec
mov
push
ret
adc
pop
adc
mov
mov
bound
mov
add
mov
fsubl
jmp
loope
mov
dec
cmpsl
loop
jnp
xor
enter
mov
rorl
pushw
jbe
push
ret
es
in
mov
and
movhps
sbb
popa
and
sub
aaa
out
mov
int
aam
jno
mov
cld
lret
jg
shl
insb
adc
inc
fsubl
lods
fsubs
scas
rcrl
dec
lds
push
push
cmp
xchg
jg
xchg
and
fsub
adc
sbb
jo
rorl
jge
mov
dec
imul
mov
inc
js
scas
dec
mov
xchg
cs
xor
in
mov
loope
and
je
js
push
scas
sbb
out
and
stos
add
add
or
xchg
dec
lock
dec
cmp
inc
test
aas
iret
aam
sub
jge
sub
push
or
dec
repz
sub
xchg
in
xchg
xchg
in
mov
jle
push
xor
add
ss
mov
subl
xchg
xchg
mov
hlt
pop
loope
lods
xchg
shl
inc
dec
filds
rclb
jge
sbb
aad
daa
daa
fimull
addr16
mov
inc
std
je
push
faddp
dec
or
ljmp
sub
mov
push
or
sbb
inc
push
scas
aad
sub
shl
loop
sub
cwtl
jo
fcoms
and
loopne
aas
mov
call
push
mov
cli
cmovno
rcrb
loope
lea
fwait
push
mov
cli
dec
aaa
push
stc
adc
and
outsb
divl
push
sbb
sub
shl
das
mov
lret
dec
mov
xlat
cwtl
push
imul
repnz
xchg
out
add
in
leave
inc
jb
loopne
pop
mov
sbb
cmp
loopne
outsl
xchg
cs
insl
std
jns
out
in
mulb
movsb
dec
or
xchg
lea
test
sub
jmp
lahf
cmpsl
addl
lahf
inc
push
and
jno
mov
aam
cmovns
jecxz
roll
mov
test
loope
and
jns
jns
jl
push
lods
cmp
loop
fidivl
mov
jno
ret
add
sub
test
fmull
insb
push
jmp
scas
cli
aaa
xchg
inc
adc
add
inc
ljmp
inc
sahf
mov
mov
xchg
sbb
aaa
repnz
sbb
ret
fsubs
jge
jl
in
ficoms
pop
sbb
pop
cs
into
add
adc
ds
push
popa
negl
push
jle
leave
mov
rcrb
mov
mov
lods
push
in
or
mov
das
inc
mov
shlb
outsb
xchg
xchg
jo
sub
shl
cmp
sub
fstpt
jg
subl
mov
cltd
add
xchg
jmp
lahf
adc
bsr
stos
dec
pop
jo
xchg
inc
je
out
push
jnp
dec
mov
push
and
clc
mov
mov
insl
xor
xchg
popa
mov
and
fldt
fs
jbe
fwait
or
xlat
int3
js
cli
rolb
inc
in
jbe
sarl
out
adc
jnp
sub
jge
loop
fsubs
sbb
inc
mov
mov
ret
xchg
scas
inc
cmovno
mov
jmp
out
or
dec
sbb
ja
mov
sti
movsl
mov
mulb
sub
not
mov
in
cmc
sbb
cli
dec
scas
jp
out
dec
mov
cli
gs
call
dec
pop
fwait
xor
loope
jae
andb
fdivs
push
imul
test
push
mov
dec
std
jmp
and
jno
cmp
in
lock
sbb
adc
and
ret
add
and
add
or
mov
xor
in
fnclex
inc
ret
cli
add
dec
add
adc
sbb
stos
idivl
fs
out
adc
add
dec
pop
mov
or
cmc
in
mov
dec
jge
pop
lods
je
and
jo
sub
dec
insb
push
mov
jg
sbb
scas
lcall
in
xlat
cmpl
mov
inc
jbe
das
movsl
loop
push
adc
icebp
test
add
xchg
fiaddl
enter
addr16
push
mov
cmp
jo
jle
jmp
in
pop
or
jecxz
jp
xlat
push
sbb
inc
jg
cmp
jg
mov
xchg
aam
push
push
xchg
js
adc
cli
js
mov
outsb
inc
jecxz
test
pop
push
pushf
rclb
inc
sub
cmp
pushf
mov
push
or
pop
adc
lret
xor
mov
hlt
lods
dec
rdmsr
mov
enter
cmp
xchg
push
int
dec
jae
hlt
lret
loope
ja
pop
xor
and
test
push
jae
mov
inc
inc
cltd
xor
pop
mov
pop
les
cmc
cmp
lods
movsl
sbb
mov
or
pop
push
mov
push
loope
cmp
inc
xchg
mov
dec
mov
in
xchg
lret
push
in
pop
xchg
push
push
mov
or
mov
push
sbb
cmp
jmp
test
lds
mov
push
jo
out
push
pop
lods
dec
lcall
test
loope,pt
ret
test
jmp
push
jns
push
pop
int3
pop
enter
jecxz
fstpt
pushf
repz
mov
mov
pop
adc
enter
xlat
dec
aaa
lea
dec
nop
test
popf
mov
add
push
imul
sbb
lock
test
push
movsl
in
lahf
out
mov
ds
xchg
jmp
push
or
sbb
inc
leave
or
sbb
xor
in
sbb
cmovle
pop
jmp
cwtl
mov
imul
jb,pn
movsl
mov
arpl
call
test
addb
ror
mov
inc
not
sbb
jb
push
les
ss
insl
mov
scas
jno
das
xor
fdivs
jne
in
test
scas
xor
movsb
loop
xor
cli
sbbb
adc
addr16
mov
es
and
std
js
ffree
flds
mov
add
add
or
pop
js
pop
cli
roll
sbb
push
dec
fsubl
dec
mov
fbstp
lods
xchg
mov
leave
int3
mov
stos
sub
int3
adc
lods
dec
popf
mov
int
cmp
pop
int
adc
addr16
out
pop
mov
jle
mov
or
aas
pop
adc
inc
pop
aaa
mov
sub
data16
inc
mov
je
jb
pop
adc
xorb
out
sbb
xor
inc
mov
insl
jmp
adc
cld
cmp
stc
mov
sub
xor
test
out
ror
mov
push
push
mov
mov
jmp
fs
xchg
lcall
pop
sbb
pop
mov
mov
cmp
ret
and
adc
jo
mov
fisubrl
jbe
fcompl
cmp
cmpsl
ret
icebp
mov
fstps
repz
push
fistpll
jns
pop
sahf
notb
xor
jmp
fsubrs
sbb
jle
add
aad
mov
mov
leave
icebp
fistpl
imul
incb
sub
xchg
xchg
stc
pop
pop
sub
or
inc
mov
mov
push
leave
bound
add
sub
mov
cmpb
and
push
xor
filds
and
adc
pop
loop
bswap
std
ficompl
out
adc
lahf
inc
adc
mov
jns
push
sbb
dec
cwtl
ja
ret
cmp
loop
inc
stos
inc
shll
xor
pop
pop
mov
lds
xchg
mov
sub
das
jge
add
sub
adc
inc
outsl
ret
sbbl
cmc
rcl
inc
pop
fs
test
sar
and
pop
jle
cmp
mov
push
sub
cwtl
inc
outsl
push
sbb
mov
stc
dec
mov
mov
mov
inc
jmp
test
pop
call
or
rorl
sbbb
mov
or
xor
adc
adc
pop
xchg
shlb
das
lds
add
lock
dec
imul
mov
and
bound
inc
repz
pusha
into
pop
sbb
push
sbb
xorb
add
gs
and
or
mov
inc
outsb
je
cmp
mov
mov
sub
shrb
mov
cmp
lds
cmp
add
call
jl
out
cltd
popa
lcall
hlt
fidivrl
pushf
je
mov
int3
cmc
loopne
push
lcall
std
in
mov
lret
cmp
dec
movsl
into
sub
mov
cld
sti
mov
inc
xchg
push
or
mov
mov
shll
int
fwait
int
mov
sarl
mov
mov
stos
xor
mov
jl
ret
data16
sbb
push
pop
and
xor
jb
out
adc
insb
nop
push
xchg
cwtl
inc
aas
arpl
or
jp
enter
mov
iret
mov
jmp
lods
sub
xlat
popa
mov
insb
push
call
pop
dec
xor
mov
mov
hlt
fmull
jmp
int
push
sub
or
dec
sbb
out
xor
sub
jp
jg
pop
pop
xor
push
scas
stos
out
mov
mov
mov
xchg
adc
sub
faddl
popf
iret
lea
inc
jae
jg
shll
out
xor
pop
push
iret
addb
in
xor
push
and
shrl
popf
jg
xchg
enter
push
in
popa
clc
scas
jg
dec
mov
adc
fwait
cmp
into
stc
adcl
stos
nop
ret
xor
insl
aas
data16
cmpsb
or
fwait
lret
pop
outsb
mov
aad
dec
and
mov
mov
cmp
and
cmc
push
in
stc
pop
pop
mov
dec
out
insl
push
mov
pushf
cld
xor
cmp
cmpsl
xor
lret
push
mov
cmpsl
aas
push
ss
lret
cmp
inc
lret
enter
add
xchg
jnp
pushf
data16
inc
jo
xor
inc
mov
push
mov
jl
sbb
gs
or
jl
enter
pop
pop
lret
lea
push
lods
xor
leave
std
adc
dec
loop
mov
xchg
loopne
shrd
jg
in
pusha
and
jns
push
aad
or
or
push
hlt
imul
incb
mov
jp
sbb
xchg
xor
xchg
mov
dec
fidivl
stc
mov
sbb
test
sbbb
fmuls
inc
xchg
hlt
pop
test
mov
addr16
adc
pop
jb
int3
lods
ja
addb
mov
sub
ret
jb
mov
xor
add
jp
xchg
xchg
jle
pop
aad
jns
cmp
xchg
add
jb
push
sbb
xor
cltd
les
lret
cwtl
pop
pop
fidivs
inc
pop
dec
repz
cli
pop
popf
ljmp
and
cmp
cld
insb
shl
idivb
mov
add
lcall
fmuls
addr16
xchg
cmp
dec
dec
outsl
xchg
push
fcomi
jge
jmp
addl
mov
lods
adc
mov
testl
add
pop
sub
xchg
pop
xlat
and
sub
xor
cwtl
movsl
out
rcrb
sbb
int
xlat
jl
pop
movsl
popa
xchg
test
mov
push
inc
loope
aas
std
js
add
mov
cmp
in
jb
adc
dec
mov
xchg
inc
adc
xlat
std
mov
lock
loopne
and
push
xchg
insb
sbbl
pop
cmp
sti
and
divl
xchg
lcall
dec
ret
test
mov
cli
push
add
cli
outsl
int3
repnz
xchg
repnz
cli
int3
incb
push
stc
add
lds
sti
push
lea
jg
sub
inc
test
adc
mov
pushf
pop
shll
int3
adc
dec
aaa
pushf
out
clc
dec
jle
int3
invd
mov
mov
jle
repz
test
push
sbb
xor
cmc
and
push
or
cltd
xor
add
xor
mov
inc
iret
clc
mov
arpl
cmp
mov
mov
push
adc
mov
aaa
jmp
test
shlb
aaa
mov
cmp
std
cmp
lret
pop
adc
scas
push
call
mov
mov
sti
sub
pop
push
mov
dec
add
out
dec
jmp
std
jmp
mov
push
jge
into
lret
int3
push
and
xor
cmpsl
lret
jbe
inc
adc
jbe
mov
push
repz
das
xor
add
jg
fs
mov
cmp
inc
rcll
pop
insb
add
xlat
or
and
xchg
rorb
xorl
or
ja
cli
mov
out
mov
push
inc
add
out
mov
xchg
cmpsb
jne
cmp
xor
sbb
aas
xchg
movsl
adc
enter
mov
sub
push
leave
sbb
or
faddl
gs
push
add
mov
mov
das
cli
test
xchg
xchg
mov
loopne
test
lods
lods
cs
repz
push
insb
xor
or
sub
xor
xchg
insb
mov
fsubrl
mov
sub
lds
push
pop
jl
mov
cmpsb
test
mov
pop
out
mov
inc
addl
xchg
leave
dec
out
into
shlb
arpl
push
aad
mov
std
outsb
push
push
daa
notb
add
cltd
sbb
xor
adc
daa
jnp
cld
lods
add
into
sub
or
mov
ja
les
mull
iret
mov
adc
les
ss
inc
add
and
xor
inc
in
sub
cld
lret
push
push
and
idivl
ret
push
adc
push
xchg
add
mov
cmc
leave
mov
mov
adc
xchg
out
jg
cltd
lds
dec
xchg
mov
sbb
or
scas
cmc
aad
push
fidivl
dec
call
sbb
push
push
push
loope
mov
int3
iret
sub
arpl
call
sahf
jp
outsl
std
into
cmp
gs
dec
inc
ja
adc
push
xor
add
xchg
movsb
cli
fwait
lcall
cmpsl
and
mov
mov
mov
and
fnsave
lods
repnz
movsl
dec
adc
sti
inc
cmc
or
pop
xchg
mov
rolb
outsl
sub
mov
lahf
sbb
stos
xchg
das
add
mov
mov
and
pop
insl
out
or
clc
orb
mov
andb
cwtl
mov
mov
jge
inc
mov
mov
and
cmp
jle
aad
lds
mov
outsl
xlat
pushf
sbb
sub
stc
xor
xchg
aam
int
aad
xchg
cmp
pop
and
pop
push
pushf
inc
sbbl
or
out
lcall
push
push
in
push
mov
push
aam
dec
push
aam
sahf
or
add
push
cwtl
and
call
scas
jg
add
fcoml
das
test
in
mov
sbb
cmc
xor
pop
mov
repnz
jne
mov
out
pop
enter
negl
pop
lret
mov
pop
add
mov
sbbb
jg
xorl
call
inc
lret
pusha
ds
push
mov
pop
sarb
leave
xor
ret
push
add
das
mov
fildll
inc
or
jnp
mov
jle
mov
mov
or
sub
dec
out
ficompl
testl
popf
scas
push
rol
popf
ret
or
mov
adc
sbb
mov
or
idivb
push
jecxz
movsb
mov
fcoml
aas
decl
faddl
rcl
adc
cmovge
sbb
or
jno
and
push
es
mov
push
fwait
lods
xchg
movsb
pusha
lretw
sub
sbb
lock
popa
loop
mov
mov
add
jl
fdivl
and
rcll
sub
mov
sbb
mov
pop
or
jecxz
mov
add
popf
pop
dec
repz
pusha
mov
jno
push
inc
sub
sub
xchg
mov
sub
hlt
pop
xor
xlat
pushf
scas
xchg
scas
mov
call
ljmp
sub
dec
add
out
call
add
popf
lods
je
popa
rorb
lds
hlt
ret
in
andb
outsb
mov
sub
repnz
and
push
pop
mov
pop
adc
push
cs
data16
pop
mov
imul
pop
jl
push
sub
cmp
jne
fidivrs
or
sub
dec
or
cmc
mov
sbb
xchg
sub
js
mov
push
and
adc
and
fists
sbb
in
or
les
lret
add
mov
mov
out
jno
pop
pop
xor
sbb
pop
jle
arpl
inc
es
pop
xchg
pop
cmp
int3
mov
jb
sub
xchg
ret
pop
sub
dec
nop
push
cmpsb
lds
lret
dec
adc
pop
mov
jp
jno
daa
mov
lret
add
sbb
paddq
mov
inc
cmp
movsb
mov
pop
xchg
mov
shrl
jnp
jae
ret
mov
lods
dec
dec
add
loope
test
out
data16
in
push
push
ss
scas
stos
decl
push
adc
pop
dec
stos
mov
cmp
or
and
lret
inc
jae
nop
rorl
jno
fisubrl
fucomip
cld
mov
inc
je
jecxz
in
or
mov
push
dec
cmp
pop
dec
and
cmpsb
mov
mov
sbb
scas
jbe
or
mov
mov
int
clc
cmpsb
adc
fisttpll
xor
add
fidivs
mov
pop
sbbb
jno
in
xchg
dec
fcmovnb
lds
xchg
mov
inc
sbb
inc
popf
inc
mov
je
test
leave
subl
stc
lahf
inc
stc
shlb
test
cli
in
and
in
sbb
and
jbe
loopne
dec
pop
in
rcrb
rcrl
push
pop
lcall
iret
jae
shl
insb
stos
mov
gs
inc
stc
xlat
test
clc
rcll
mov
scas
push
fcom
mov
sbbl
mov
add
imul
cmc
stos
xor
xor
sub
test
add
lock
clc
mov
mov
cmpsl
xor
adc
jp
xor
ficoms
call
pop
fldenv
push
pop
xchg
jae
cli
jne
xchg
sarl
jae
xor
es
outsl
sbb
lret
iret
insb
loop
in
fsts
jo
push
sti
inc
pop
call
jecxz
cmc
dec
xchg
int
adc
fimuls
outsb
pop
pop
aad
icebp
pop
mov
fsts
sbb
aam
and
out
dec
ds
loope
lds
rol
in
sbbl
nop
mov
leave
inc
cmp
incl
mov
pushw
sub
movsb
mov
xchg
mov
sub
push
dec
pushf
jp
stos
repz
test
lods
in
jb
ja
pop
mov
inc
lock
lahf
aam
daa
xchg
xlat
ss
in
scas
or
mov
dec
decl
bnd
mov
push
jmp
inc
add
xor
dec
or
jno
pop
push
dec
imul
xor
sahf
mov
in
jg
jle
sahf
pushf
mov
daa
insl
and
les
sti
mov
fucomip
cmp
mov
mov
imul
push
aas
ss
sbb
cmp
scas
jno
mulb
fwait
and
push
push
pavgb
lods
jns
push
shr
xchg
lea
push
jmp
inc
and
mov
jmp
sbbl
inc
pop
or
mov
push
idivl
xchg
lret
fwait
ljmp
add
addl
hlt
pushf
repz
std
push
rclb
push
mov
sbb
sar
inc
in
aaa
cli
xchg
xchg
data16
and
add
push
jbe
push
xlat
mov
xor
hlt
add
pop
jo
aas
setne
push
sbb
push
xchg
push
sbb
xor
pop
lods
into
jae
sub
into
adc
xchg
out
adc
dec
fsubl
add
fimuls
stos
lds
inc
gs
or
jo
mov
and
mov
push
outsl
or
dec
mov
nop
enter
pop
cmp
sti
adc
scas
xor
div
sub
js
mov
cmpsb
scas
dec
enter
mov
sbb
pop
lods
cmp
bound
lret
test
jae
mov
int3
pop
insb
jge
sub
loop
lret
scas
mov
jb
loope
mov
popf
pop
insb
xor
mov
cmp
and
lcall
and
call
je
es
outsb
fwait
scas
xlat
xchg
cmp
ret
add
das
ja
inc
mov
xor
mov
call
pop
arpl
aad
cs
mov
out
cmc
mov
jnp
rolb
ja
scas
fwait
mov
add
mov
lds
test
xchg
jae
xchg
mov
sub
cld
sbb
addb
outsb
mov
mov
out
xlat
or
fadd
mov
mov
push
and
js
add
scas
out
lahf
int
jle
popf
jecxz
adc
int
pop
adc
sub
cmc
imul
push
div
daa
sbb
fsubl
mov
ja
sub
push
outsl
sub
or
pop
cmp
into
xor
sbb
neg
out
cmp
lods
fidivrs
pop
and
mov
sarl
das
cmc
sub
daa
sub
cmc
sbb
lahf
pop
and
jmp
inc
mov
push
sub
mov
addr16
mov
jae
sbb
cmp
jbe
dec
mov
rcrb
cwtl
in
fdivp
lahf
or
mov
xor
add
rorl
push
dec
sbb
int3
ret
jmp
push
push
lret
int3
and
scas
sub
inc
dec
test
push
adc
push
and
aas
cli
pop
rcr
cli
test
test
mov
add
push
into
pop
cmp
jnp
ljmp
mov
dec
or
mov
shll
mov
out
test
sub
xlat
pop
dec
adc
push
lahf
mov
shrl
mov
inc
pusha
int
pop
mov
add
out
push
ljmp
inc
ret
scas
mov
call
out
lock
pusha
pushf
mov
fs
test
fadd
inc
add
adc
adc
dec
inc
sub
jle
xchg
out
xchg
mov
subl
inc
scas
jnp
push
aam
dec
sub
add
in
inc
lods
or
add
pop
in
les
mov
sarb
mov
sub
or
rorl
fstl
into
mov
sbb
xlat
stc
in
or
cltd
ja
aas
lods
sub
adc
inc
xor
add
ljmp
sub
cs
xchg
push
cmc
mov
xor
mov
dec
mov
mov
lds
sub
xchg
mov
cs
in
shll
mov
mov
cs
es
push
cmpsb
and
call
xor
ja
pop
lods
jmp
je
or
nop
sbb
dec
repz
outsl
sub
fisubl
fdivrs
fstl
mov
loope
lods
dec
pop
mov
call
sbb
popa
sbb
repnz
or
mov
sbb
dec
xchg
or
ret
comiss
lret
je
sbb
stc
daa
mov
data16
xor
sub
inc
int
mov
into
xchg
push
lods
jne
jl
jne
xor
mov
rcll
push
cmp
push
jbe
fsubr
fidivl
dec
les
mov
or
int3
dec
xchg
sahf
lret
adc
test
jge
scas
jns
sub
repnz
push
jns
or
outsb
mov
pop
cmp
inc
sbb
movsb
mov
xor
stos
bound
out
sub
in
mov
mov
pop
add
outsl
dec
push
lds
xchg
fisttps
imul
mov
fidivrl
daa
inc
xor
sub
push
ja
std
xchg
enter
subl
cmp
xchg
sti
movsb
sub
ds
inc
roll
jns
fwait
addb
jg,pn
jne
mov
paddw
add
pop
sbb
test
xor
nop
jl
test
pop
xorb
mov
clc
sbb
jp
and
mov
rclb
ret
test
icebp
daa
cltd
and
sahf
sarb
popf
scas
xor
cmpsl
movsl
sbb
inc
outsl
outsb
cmpsb
sbb
jmp
or
sti
mov
dec
adc
addb
fidivl
jae
dec
sbb
cmc
xchg
repnz
mov
insl
repz
shlb
iret
and
xchg
or
lahf
addb
push
xchg
scas
or
jl
lock
sti
push
xchg
fdiv
pop
inc
mov
dec
add
add
sbb
aam
jbe
aam
out
mov
pop
jnp
mov
decb
aad
xchg
fcomps
sbb
outsb
notl
fnsave
divl
jno
movsb
cmc
test
mov
int3
aaa
dec
mov
roll
jbe
arpl
mov
mov
xlat
mov
int3
loopne
mov
test
ret
addr16
nop
loope
push
loop
jmp
fists
xor
ror
daa
pop
js
cs
cmp
inc
movsl
test
rclb
test
sub
rorl
push
sub
adc
adc
jne
test
movsb
push
dec
mov
in
mov
xchg
shll
fwait
sahf
pop
lret
in
in
inc
dec
cld
sbb
add
fldcw
loopne
inc
push
mov
jl
inc
add
mov
cmp
popa
inc
cmpsl
jl
mov
lods
mov
je
cs
test
push
inc
push
lds
daa
xchg
jne
xor
call
mov
cmc
leave
in
cmp
xchg
add
and
sbb
jecxz
pop
or
dec
stc
dec
mov
inc
cltd
xchg
cmp
sbb
add
ss
into
and
mov
adc
cld
loope
xor
xchg
mov
and
sahf
sub
repz
pop
mov
test
sub
add
in
push
mov
cmpsl
mov
xchg
add
rorl
mov
sarl
mov
pop
enter
ret
roll
jbe
insb
xchg
sub
fcompl
repz
xor
daa
test
shll
imul
ljmp
xchg
test
idivb
lock
out
outsb
test
mov
jo
inc
std
pop
cld
outsb
leave
sbb
mov
cmpsb
jnp
xchg
dec
insb
inc
cmpsb
push
cmp
lds
sbb
push
fstl
into
mov
add
lods
cmp
cmp
subb
push
incb
ss
lret
in
xchg
daa
inc
fcomps
xchg
mov
hlt
add
mov
into
fcoml
xor
inc
sub
sub
sbb
cmp
xchg
jb
sbb
fs
pop
je
clc
insl
xor
mov
sbb
lret
sbb
bound
cmp
fnsave
arpl
mov
iret
jae
jo
or
fs
dec
mov
dec
dec
jo
stos
xchg
mov
and
adc
jne
and
mov
fsubl
and
xchg
mov
mov
movsb
popf
rolb
dec
lods
jbe
mov
out
sbb
ss
lds
add
shlb
cld
push
adc
cmp
addr16
inc
cmp
inc
jno
push
adc
xchg
pop
or
dec
dec
pop
mov
dec
call
rorb
xchg
int
cli
movsl
mov
idivl
mov
cmp
lock
mov
insb
mov
loope
and
jo
cmp
std
xor
jno
and
push
jp
test
mov
loopne
repnz
xor
lea
movsb
add
cmpsl
mov
repnz
loop
imul
insl
gs
or
enter
cmp
push
adcl
or
iret
sbb
outsl
scas
stos
or
push
inc
jne
movsb
add
push
loopne
fnstenv
xchg
mov
sub
aaa
push
stos
jae
test
mov
inc
sbb
mov
mov
inc
insb
inc
xor
or
sbb
xor
push
jp
cltd
lock
cltd
lds
add
push
or
inc
lock
dec
fmulp
xchg
cmc
mov
mov
aaa
mov
aad
push
hlt
and
fidivrs
mov
mov
sub
shlb
into
pop
shll
movsb
fsubs
test
xlat
std
cmp
push
sti
arpl
imull
pop
cmp
lcall
mov
inc
mov
orb
mov
jle
scas
add
inc
mov
sub
mov
mov
adc
adc
dec
scas
ljmp
jle
roll
rol
sub
aas
inc
ret
or
pop
gs
in
pusha
pushf
push
and
adc
cmp
pusha
adc
xor
jb
cli
lahf
mov
out
mov
push
mov
adc
mov
inc
sub
es
pop
push
outsl
dec
lods
inc
xchg
dec
in
test
push
and
aaa
jno
sbb
dec
test
iret
xchg
mov
stos
push
adc
test
mov
les
sbb
cmp
cmp
adc
mov
pop
push
mov
inc
mov
ret
scas
jno
popa
cmc
add
mov
pop
jne
daa
lcall
xchg
xchg
xor
in
fistpll
cwtl
push
push
mov
push
jmp
push
cltd
in
xor
fidivs
repz
shll
xor
arpl
fldenv
mov
mov
pushf
outsl
int
jb
xor
mov
mov
xor
jbe
les
ret
sbb
test
and
es
ds
fistpll
sub
sub
cli
add
cld
push
sti
or
scas
add
ja
cwtl
leave
or
inc
mov
loop
aas
leave
pop
scas
lahf
sbb
repnz
addr16
sbb
push
push
mov
jo
mov
mov
or
sbb
bound
cs
push
mov
lds
scas
mov
xchg
jbe
dec
les
inc
and
jnp
add
inc
jmp
pop
out
sub
fnsave
jns
sbb
and
push
and
or
add
fildll
jbe
bound
pop
or
in
push
mov
lds
dec
mov
les
imul
xchg
xlat
jmp
and
mov
iret
xchg
orl
iret
add
mov
sbb
push
aas
enter
clc
and
mov
dec
icebp
xchg
xor
in
repnz
mov
nop
push
sahf
mov
pop
dec
ja
loop
fxch
or
inc
sbb
pop
mov
int
jno
in
mov
aad
adc
jbe
cmp
mov
xchg
js
mov
aas
mov
fld
jmp
mov
sahf
loope
sbb
mov
out
xchg
cmp
pusha
inc
fimull
std
aaa
aas
adc
ja
movsl
mov
mov
add
stos
push
cmp
lret
and
and
mov
adc
out
addb
fldt
cmpsl
jmp
xchg
cld
add
jmp
xlat
pop
test
std
stc
xchg
iret
pop
and
aaa
lock
add
int3
push
sub
cli
outsb
lret
pop
out
mov
mov
ret
leave
or
or
lret
xchg
sbb
lea
and
int3
cmp
inc
jg
push
jnp
js
inc
fistps
inc
push
pop
sti
repz
add
into
in
call
dec
xlat
pop
lcall
lcall
mov
mov
loop
or
sbb
inc
jl
push
aad
mov
std
push
loope
jnp
mov
mov
inc
xchg
enter
je
mov
filds
mov
inc
add
push
add
movsb
movsb
add
arpl
and
push
stos
out
sub
dec
mov
mov
scas
outsl
ss
repnz
sti
shr
add
stc
inc
cmpb
xchg
and
movsl
ja
pop
notb
mov
rorb
popf
rcll
push
leave
stc
mov
push
fildl
into
pop
inc
and
adc
xchg
rcll
inc
std
loop
mov
cmp
sbb
dec
and
leave
xor
stos
lret
sbb
out
add
std
rcl
sub
xchg
cmp
stos
loope
lds
mov
mov
mov
ret
inc
jp
xchg
inc
inc
xchg
lahf
hlt
insl
cmp
sti
pop
cs
nop
repnz
lea
clc
mov
mov
jb
jae
push
jnp
faddp
and
cmp
mov
xchg
fsubp
lods
or
dec
out
jge
test
test
xchg
xchg
test
cmpsl
mov
insl
aad
in
or
hlt
lcall
shlb
pop
stc
pop
jmp
push
insb
jne
sub
mov
ret
mov
iret
leave
shl
lods
shll
sub
pop
enter
shll
mov
xchg
loop
loop
ds
sahf
inc
xor
xchg
scas
cmp
xlat
leave
dec
or
imul
sbb
cmpsb
pusha
xor
repz
or
jmp
mov
lret
sbb
cli
xchg
xchg
push
xor
icebp
cmpb
stos
lods
dec
add
nop
daa
leave
sbb
dec
pop
sub
fwait
push
mov
dec
ja
out
add
inc
adc
sbb
mov
test
cmp
or
je
insl
or
mov
inc
push
jg
adc
and
jp
push
mov
inc
into
or
sub
and
jo
js
test
testl
jecxz
cmp
orl
shll
insl
push
jnp
ror
repnz
jmp
lods
or
sti
jne
bound
movsb
cmpsb
ficomps
in
mov
push
cmc
repnz
ljmp
adc
ljmp
inc
push
test
or
mov
clc
lea
add
push
sbb
imul
insb
cmpl
enter
lock
shrb
push
add
and
push
aaa
cltd
aaa
jg
incl
mov
idiv
das
fdivl
out
inc
jle
scas
sbb
cltd
sti
sbb
les
je
enter
pop
jp
or
sbb
push
jp
inc
and
popa
mov
roll
push
lcall
test
arpl
insb
jae
stos
adc
dec
sub
jne
imul
dec
lret
or
push
aad
imul
ret
repz
xchg
sbb
aam
mov
adc
rcrb
push
fucomip
push
jnp
loope
sub
pop
gs
outsb
out
in
mov
inc
sbb
jge
repnz
xor
jg
mov
dec
mov
or
dec
dec
xchg
dec
loopne
loope
add
adc
lahf
sbb
je
subl
push
pop
loopne
shrl
stos
sbb
stc
push
cld
dec
fdivr
scas
mov
and
cld
lods
dec
push
sbb
mov
xchg
xor
fdivr
loope
sub
testb
leave
push
stos
stc
dec
push
jo
pop
aas
push
push
nop
fidivrl
push
mov
sbb
jnp
inc
sub
adc
enter
mov
repnz
loopne
cmp
mov
dec
loope
jl
dec
ret
jg
inc
xchg
and
and
jmp
pop
imul
inc
lods
ss
pop
cmc
xor
loope
jb
cmp
sbbl
add
and
in
nop
outsl
push
shl
les
iret
loopne
mov
jg
pushf
aad
popa
movsb
ss
xor
lret
popa
jno
dec
ds
cmc
sub
inc
or
subl
imul
jae
mov
or
mov
in
add
and
push
push
xchg
xor
jmp
adc
cmp
cmp
add
out
hlt
daa
testl
sbb
jle
lods
cli
push
adc
repnz
into
adc
mov
jp
sbb
dec
lcall
ja
jo
jmp
leave
jae
clc
or
jno
movb
push
stc
jmp
arpl
daa
inc
and
aam
inc
push
lods
outsb
js
add
mov
ror
mov
lds
shlb
pop
ret
mov
shlb
push
mov
and
sub
rorb
enter
sbb
loop
push
ss
xor
enter
jb
dec
push
insl
nop
sbb
adc
add
test
daa
xchg
addr16
enter
add
and
cmc
cmp
popa
lahf
ja
xor
jmp
pop
sbb
sbb
jns
xchg
jg
xor
adc
stos
fmuls
test
sub
fildl
inc
push
rcrb
cmpsl
sbb
cmp
dec
push
and
in
sbb
pusha
pushf
cmp
out
dec
ror
out
sbb
cwtl
jmp
test
inc
sbb
mov
add
sub
sarb
out
add
pop
out
xchg
sbb
int3
sub
cwtl
and
lret
lds
ds
inc
loop
lcall
or
xchg
aam
jle
and
and
fwait
mov
xor
sbb
jecxz
test
cmc
subl
cli
lock
je
out
cmp
pop
mov
imul
pop
loopne
or
inc
roll
xlat
xorps
ja
jno
dec
out
cmpsl
dec
fmulp
cmp
add
aaa
sbb
icebp
call
and
lods
inc
insl
mov
xchg
stc
mov
xchg
das
sarl
fidivl
inc
in
out
mov
outsl
mul
adc
adc
call
out
stos
call
and
popa
test
push
xor
fstps
mov
aad
xchg
sbb
mov
push
dec
or
mov
dec
mov
out
adc
das
movsl
mov
subl
pop
imul
das
out
or
jge
loope
rorb
lock
fs
idivb
xor
and
jne
pop
es
jecxz
mov
sub
adc
dec
jnp
ret
jl
testb
lea
hlt
clc
les
cmp
dec
inc
loopne
push
xchg
mov
add
mov
push
mov
or
cmp
dec
jge
adc
adc
jmp
popf
push
inc
pusha
push
in
jno
mov
xchg
sarl
mov
icebp
push
jne
sub
shrl
in
or
mov
sbb
pushf
outsl
icebp
ds
sti
arpl
cmp
jl
jnp
data16
fistps
mov
addl
addr16
test
dec
sbb
sub
jae
add
jno
test
pop
cmp
pusha
and
aaa
movsl
js
xlat
pop
adc
cltd
push
push
mov
js
dec
adc
xchg
mov
and
out
cmp
aas
jo
fisubs
data16
pop
ret
pop
xlat
pop
das
or
xor
mov
repz
inc
es
dec
pushf
add
mov
xchg
mov
rcll
jmp
int
pushw
xchg
xchg
mov
pop
inc
movsb
xchg
in
loopne
sbb
es
in
mov
adc
sbb
dec
loope
out
mov
inc
mov
xlat
bound
sub
push
xchg
inc
xchg
outsl
arpl
inc
cld
or
sub
and
jbe
dec
push
aad
popl
arpl
adc
adc
sbb
fisttpl
sub
les
push
inc
dec
mov
mov
mov
bound
sahf
lock
es
cmp
and
mov
or
jns
jg
and
cmp
rclb
in
inc
fstpl
ljmp
push
arpl
mov
cwtl
xor
fcoms
mov
push
repz
jmp
xor
push
cmp
ljmp
loopw
push
xlat
ret
lahf
je
mov
and
stos
lcall
inc
jecxz
jmp
out
faddp
or
jnp
sbbb
xchg
hlt
mov
cs
pop
push
testb
add
xor
test
inc
clc
jp
out
aas
in
scas
or
push
jo
scas
int3
cmp
loope
xchg
adc
ds
negl
inc
test
cmp
call
jp
pop
icebp
fstps
aam
es
cltd
add
scas
outsb
adc
sub
add
xor
jmp
stc
mov
in
pop
ret
cmc
ja
sbb
dec
fldenv
test
leave
lcall
mov
aad
jbe
mov
stc
aam
mov
lea
mov
call
cmp
sub
fcompl
out
testl
test
mov
scas
testb
pushf
adc
pop
mov
ss
xor
lods
pop
mov
fs
shrb
int
push
rcl
pop
mov
jo
cmc
add
stos
fcompl
cltd
fildl
mov
adc
fidivs
cmp
mov
push
leave
cmpsb
pop
test
mov
in
xchg
jge
ss
xbegin
dec
inc
adc
rolb
and
imul
and
xor
sahf
aam
and
push
sbb
insl
jge
cmpsb
xchg
jle
andl
inc
xor
orl
xor
dec
lods
inc
xor
sti
xor
dec
mov
fistpll
pop
adc
adc
insb
mov
jle
clc
cmpsb
mov
movsl
push
ret
cmp
sarb
int
nop
ss
xchg
das
and
shlb
lods
mov
xchg
and
xchg
out
lds
clc
push
mov
data16
scas
aam
leave
lret
jnp
mov
pop
mov
scas
inc
fisubl
or
and
adc
pop
fsts
xor
cmp
jb
addl
fnsave
xor
push
cmpsb
or
mov
and
aaa
jbe
push
sbb
inc
or
sbb
pop
xchg
les
lods
pop
addr16
mov
adc
aas
rol
dec
add
jo
xchg
or
ds
fbstp
mov
mov
in
imul
or
push
inc
jp
punpckhdq
call
or
sub
dec
pop
fucomi
push
mov
dec
mov
ljmp
pushf
pop
fdivrp
adc
push
pop
sbb
cmp
mov
lahf
mov
mov
and
push
scas
sub
jnp
sbb
aam
add
loop
icebp
cltd
iret
ret
inc
dec
test
es
lock
fnsave
mov
and
pusha
sbb
testl
push
fldenv
xor
rep
push
sbb
or
sbb
and
aad
add
xchg
lock
ds
rclb
add
cli
inc
les
or
aaa
pop
jno
mov
and
nop
mov
inc
xor
mov
in
stos
fnstenv
add
rcrb
push
sbb
inc
mov
mov
clc
mov
jae
dec
pusha
les
pop
test
lods
sub
pop
pop
mov
dec
push
in
in
lods
mov
fiaddl
jne
ret
xlat
or
orl
aad
test
mov
adc
add
sub
sub
test
in
shrb
notl
test
add
sub
aam
insl
push
scas
mov
lods
sbb
xlat
xchg
push
loopne
xlat
sbb
xchg
cmp
jae
jl
xor
ret
in
push
add
sahf
imul
sbb
mov
pusha
repnz
movsb
or
xchg
imul
cwtl
dec
vdivsd
cwtl
mov
cmpsb
icebp
mov
data16
jg
xchg
sbb
push
cwtl
and
rorb
push
adc
inc
lods
scas
ficoms
mov
jle
mov
idivb
rclb
roll
sti
or
lods
push
mov
lahf
testb
or
mov
stos
outsl
lods
xor
push
xchg
and
int
add
cmc
sbbl
ss
movsb
lret
ljmp
jmp
bound
and
xchg
arpl
fistps
xchg
and
cmc
inc
pop
jno
mov
pushf
dec
mov
into
jmp
inc
enter
or
and
psrad
add
ja
cli
rcrb
and
inc
sbb
pusha
inc
pop
bound
outsl
mov
int3
fcmovu
sub
dec
and
repz
or
sbb
in
pop
js
shlb
jl
andl
push
mov
fld
jb
inc
mov
mov
aam
out
mov
push
ret
xchg
cli
push
push
les
into
addr16
sbb
adc
lcall
aam
int
inc
sbb
mov
adc
pusha
aam
sbb
outsl
xor
or
repnz
or
test
das
dec
in
or
sub
cmp
out
add
mov
sub
fdivrs
ljmp
adc
pop
imul
rolb
pop
adc
dec
rolb
push
dec
out
or
ss
outsb
jmp
push
jne
add
xor
jne
negl
xor
inc
mov
inc
lahf
push
divl
aam
xchg
aas
fmull
inc
add
sub
dec
jecxz
xor
pop
cmc
add
push
push
cld
shrb
subl
xorl
insb
xchg
cmp
lret
imul
mov
push
sub
es
test
pop
cmp
jecxz
adc
sub
dec
ljmp
mov
adc
mov
mov
push
cmp
add
dec
xchg
mov
xchg
inc
ds
mov
lds
ljmp
sub
ds
mov
pop
neg
xchg
add
in
mov
in
ret
cwtl
lcall
scas
pushf
movsb
aam
pusha
jbe
push
fsubrs
mov
loop
inc
dec
repz
lods
das
mov
gs
or
or
leave
or
jae
xor
js
push
mov
add
ror
cli
and
pop
mov
orl
add
aas
and
or
inc
sarb
mov
int
shrl
testb
jns
xor
push
in
cli
sub
adc
not
fdivp
xlat
insb
fimuls
mov
mov
lds
and
popf
sti
mov
push
and
pop
cmp
xchg
test
out
adc
jne
gs
stc
fmull
mov
push
xchg
jl
gs
das
push
jns
dec
adc
movsb
push
push
lock
pop
dec
sarl
xchg
and
push
les
cli
push
fisttps
cmp
adc
jns
pop
mov
add
insl
loope,pt
mov
fcoml
xchg
ret
jns
test
cmp
add
stos
xchg
adc
and
imul
jne
je
push
fs
pop
test
ret
xlat
xchg
pushf
movsb
in
mov
jmp
mov
jns
inc
gs
ss
and
ficompl
inc
js
sahf
mov
inc
addr16
lods
test
dec
rcll
mov
ret
movsb
ficomps
pusha
movsb
sti
fcomip
mov
test
push
xchg
jnp
dec
in
adc
push
mov
add
sub
add
or
push
dec
nop
cmc
dec
aas
sbb
mov
shrb
sub
pop
daa
lcall
repnz
shll
jnp
adc
pop
xchg
loop
rolb
les
pop
sub
leave
dec
js
out
adc
pop
loop
sbb
dec
iret
sahf
rorb
imul
lcall
mov
sbb
cmp
pop
not
mov
popf
xor
into
inc
flds
adc
lods
in
xchg
imul
xor
cmp
or
arpl
sub
stos
stos
insl
cmp
fsubrs
push
or
ss
jnp
and
mov
sub
je
movsb
mov
repnz
insb
das
pusha
clc
xor
and
jne
scas
loop
imul
mov
pop
and
and
or
cmp
mov
push
into
mov
adc
bound
or
daa
mov
xchg
shlb
rcrb
or
add
push
sbb
stos
int
cmp
sbb
popf
ret
mov
sahf
xchg
push
orb
jmp
stc
mov
or
call
fisubs
dec
cmpsl
mov
adc
push
fs
and
sub
sbb
and
mov
or
jns
cmc
hlt
negb
std
push
shll
lods
ss
push
or
stc
test
mov
stos
xchg
imul
jl
push
lcall
dec
fidivl
jecxz
xchg
mov
cmp
int3
addr16
pusha
lret
std
ds
stc
movsb
aad
fmull
pmaxub
adc
xor
enter
inc
adc
cmp
or
dec
pop
pop
push
int3
pop
in
hlt
jb
adc
xor
in
xchg
and
es
out
sub
fdiv
ret
sub
into
testb
pop
aad
push
jnp
jae
pusha
jno
aam
add
xchg
jmp
fldt
adc
in
fstpt
paddb
or
mov
lret
sub
scas
stos
cmc
sub
leave
test
dec
sub
mov
push
xor
ja
jnp
adc
sbb
lods
mov
jne
into
cli
add
pop
xlat
js
das
push
jbe
mov
xor
sbb
mov
jp
mov
dec
and
and
ror
jnp
adc
cli
loop
adc
jb
cmpsb
push
lods
ss
data16
pushf
xchg
jp
pop
and
adc
movsl
sbb
xor
add
insl
out
loop
pop
cltd
fstpt
cmp
dec
xchg
jmp
insl
je
sbb
or
outsl
lods
cmp
xor
push
push
cmpl
fimull
and
add
sub
sub
xchg
mov
inc
jbe
dec
jns
outsb
mov
js
push
icebp
ret
and
push
mov
scas
rorb
jno
cld
aas
ret
imul
mov
insb
imul
jns
mov
fidivrs
or
dec
arpl
sarl
movsb
and
aas
pop
mov
mov
mov
push
xlat
and
push
push
sbb
mov
push
orps
add
or
sbb
push
push
sbb
in
fisttpll
mov
and
in
push
xchg
xchg
sti
add
lods
mov
mov
ss
ret
adc
popf
inc
lock
lahf
data16
mov
push
push
cmp
rolb
jle
sub
push
xchg
sub
iret
xor
rcrb
scas
sbb
rolb
nop
jecxz
out
jbe
pushf
sbb
test
mov
adc
ja
xchg
sub
orl
pop
pop
push
std
ret
xchg
mov
xchg
mov
insb
push
cltd
lret
jae
iret
stc
loop
rcll
imul
add
and
mov
xchg
and
dec
push
dec
out
data16
xchg
push
and
std
pop
push
bound
pop
out
cs
sti
ror
push
or
lret
xchg
loope
test
fnstcw
stc
ret
xor
add
loopne
mov
dec
jo
pushf
jp
dec
mov
sti
cli
mov
out
stos
jo
xor
xor
mov
xlat
sub
xchg
cmp
mov
and
cmp
nop
das
adc
fwait
clc
arpl
mov
jmp
aas
out
push
popf
mov
push
iret
gs
adc
pop
jne
xor
sub
push
imul
pop
xor
mov
bound
popf
scas
adc
loope
stos
jg
xor
icebp
mov
outsl
lock
sub
inc
cmpsl
mov
mov
sbb
add
cmpsl
stos
xlat
mov
xor
dec
jne
sbb
repnz
in
in
jmp
push
dec
mov
scas
add
notb
and
or
fs
dec
jae
jp
xlat
andl
cli
fdivrl
divb
dec
ret
iret
push
enter
pusha
out
jne
les
and
jno
push
das
push
shl
pop
adc
scas
dec
insb
or
and
lahf
adc
mov
push
sub
sti
fsubs
sbb
dec
sub
in
shl
scas
sub
cmp
push
push
stos
loop
cmp
and
mov
cmpsb
push
sti
outsl
dec
stc
popa
jmp
addr16
cs
add
leave
jmp
push
pop
jnp
pop
or
negb
push
sti
jb
fldenv
xlat
sbb
adc
je
imul
fwait
loop
pop
pop
add
push
insb
call
inc
dec
xchg
push
leave
enter
cmpsl
dec
stos
inc
cmp
lods
adc
lcall
rorl
out
je
adc
push
sti
and
cs
pop
mov
sbb
inc
jle
xor
mov
pusha
or
lret
inc
por
fnsave
shlb
mov
mov
add
mov
ficompl
aas
push
int3
inc
mov
or
nop
rcll
aas
out
mov
jle
mov
out
mov
cmp
and
aas
push
lahf
xlat
jno
addr16
mov
loopne
push
push
rcrb
cmc
fadds
hlt
pop
repnz
loope
dec
xchg
ret
shr
andl
pusha
adc
ljmp
cmp
lcall
enter
mov
cmp
out
jo
inc
or
test
addb
inc
add
pusha
jbe
into
and
lcall
loopne
mov
mov
mov
cmp
iret
xchg
ss
popf
mov
aad
cmc
or
shrl
jmp
pop
dec
call
idivl
cmp
xor
mov
mov
dec
cmp
cmp
inc
cmp
pop
fdivrl
hlt
inc
loopne
icebp
xchg
jo
push
in
sub
mov
fs
and
scas
add
xor
cmp
in
add
jno
add
or
and
ds
popa
adc
inc
ret
xchg
hlt
inc
pop
push
insb
clc
fadd
jno
jne
jp
pop
pop
sbb
icebp
push
cld
push
ficompl
mov
inc
mov
fisubl
movsb
xchg
arpl
mov
notl
ja
rorl
out
cmp
jmp
shll
stos
adc
or
mov
push
cli
add
mov
adc
jecxz
pushf
in
ret
aam
push
xor
pop
dec
inc
stos
lahf
lcall
fadds
xchg
cmp
jmp
sahf
and
xor
in
repz
cmpsl
push
popl
out
push
or
dec
cmpsb
push
push
stc
int3
repnz
sahf
push
push
repz
fmull
out
mov
or
rcrb
xchg
push
hlt
jecxz
data16
in
xor
mov
push
leave
inc
xchg
sti
sub
cmp
inc
and
dec
andl
xor
arpl
loope
jno
push
mov
pop
adc
dec
jp
test
dec
adc
ror
rcrb
adc
adc
cmp
out
stos
movsl
cltd
and
pushf
loop
loopne
imul
fidivrl
pop
xor
inc
pusha
mov
or
js
inc
ss
push
jecxz
pushf
leave
sub
ret
and
xchg
fistl
loop
rolb
aam
mov
dec
mov
loope
les
pop
in
je
jno
mov
and
int3
xlat
test
andl
std
cmc
adc
xchg
mov
sahf
lcall
cmpsb
jmp
repz
imul
movsl
add
sbb
test
lcall
and
fidivs
add
mov
mov
push
std
push
sahf
in
mov
add
jno
loope
stos
mov
pop
mov
icebp
sbb
pop
int
scas
aam
push
nop
flds
aam
sub
addr16
cmp
add
pop
or
push
daa
jns
push
cmp
imul
scas
outsb
enter
add
loope
jae
rcrl
sbb
pop
jnp
xchg
sbb
mov
js
es
sub
mov
dec
or
inc
ss
jne
mov
bound
mov
add
jecxz
aad
cltd
inc
repz
pop
mov
jp
ret
cmp
xor
xor
out
fimuls
inc
jecxz
sbb
xor
dec
outsl
pusha
ret
insl
xlat
mov
xchg
jmp
call
jns
adc
sahf
add
xchg
aaa
arpl
dec
inc
inc
pusha
call
ficomps
adc
pusha
pop
mov
and
push
popf
out
pusha
add
loop
push
mov
push
loop
sub
pop
add
push
jb
pop
adc
jbe
xchg
sub
or
mov
or
lret
mov
sub
popa
shr
mov
enter
mov
mov
cmpsl
inc
sub
ds
icebp
scas
iret
rcrl
and
or
xlat
inc
xchg
xor
adc
test
test
dec
movsl
mov
add
nop
jno
insl
xor
pop
sbb
sbb
ljmp
xchg
ss
call
dec
mov
adc
pop
in
or
mov
fwait
loopne
arpl
hlt
pop
fldenv
pop
mov
cmp
dec
cltd
sahf
or
fs
sbb
rcrb
and
sbb
out
aam
fimull
push
push
pop
pop
inc
and
inc
and
jns
mov
lcall
jg
jae
dec
add
jo
imul
test
push
xor
and
gs
and
sub
or
lcall
inc
imul
rolb
cmp
in
jnp
adc
xchg
sub
cs
stos
inc
addr16
sub
xchg
les
hlt
push
fxch
mov
clc
mov
jae
pushf
dec
call
cmpsb
dec
mov
push
sti
rclb
sub
popa
dec
dec
ljmp
dec
sub
dec
out
jl
jg
lock
push
fisttps
es
shll
fwait
addr16
dec
mov
fs
bound
fbstp
movsb
push
shlb
cltd
fwait
jle
and
ret
jns
popf
mov
andl
mov
lret
cld
cmp
scas
call
xchg
lea
and
xor
out
fdiv
int3
movsbl
js
push
dec
clc
scas
mov
scas
sbb
xor
out
mov
pmulhuw
popf
pop
push
sub
fwait
sub
movsl
call
jnp
movsb
das
sub
in
mov
push
clc
cwtl
add
pop
xor
idivb
popa
jno
xchg
and
lods
sub
dec
outsl
jnp
imul
out
ret
add
div
jb
insl
push
lcall
pop
fdiv
je
mov
fsubl
scas
rcrl
into
imul
xchg
out
stc
xchg
xor
jb
sbbb
cmp
dec
test
mov
rol
clc
leave
outsl
outsb
cmp
pop
add
push
adc
enter
ja
mov
push
sbb
sub
ljmp
adc
jp
push
push
or
cwtl
loopne
sbb
je
xor
add
dec
and
push
sub
out
sarb
and
jecxz
pop
inc
mov
add
xor
pop
dec
sbb
jno
push
inc
xor
fsubl
faddl
adc
std
lock
aas
jle
or
outsb
mov
hlt
shlb
adc
adc
int3
and
lret
jb
xor
fisubs
push
insb
or
repnz
push
call
pop
shl
pop
dec
fildl
or
pop
orl
pop
adc
mov
int3
add
out
sbb
adc
arpl
icebp
mov
mov
sbb
orl
inc
inc
fisubrl
dec
inc
pop
mov
out
sub
xor
add
shll
lret
int
daa
xor
cmc
je
loopne
gs
pop
mov
inc
mov
sbb
sbb
cmp
push
adc
pop
cmp
into
out
jg
sub
mov
xchg
lret
leave
repz
jne
cmpsl
dec
pop
cmp
loope
lods
es
movsb
cld
subb
sbb
cltd
add
mov
fcoml
lods
push
movb
mov
xchg
jns
insb
pop
or
lahf
mov
mov
movsb
push
aas
dec
scas
ljmp
dec
icebp
xchg
xor
ds
insb
push
cmpsl
cltd
adc
sahf
cmp
sbb
inc
mov
call
xor
xchg
enter
xchg
insl
xor
xchg
xchg
movsb
bound
xchg
enter
leave
stc
dec
push
rcll
je
cmpsb
outsb
es
pop
xor
sub
mov
int3
mov
ljmp
fs
ficoms
stos
dec
out
fsub
xor
int
bnd
call
xor
mov
sbb
dec
bound
and
adc
mov
inc
pop
sbb
aad
mov
mov
std
push
clc
ret
test
icebp
push
sub
test
mov
pop
mov
add
stos
or
aas
negl
mov
imul
mov
pusha
add
mov
in
cmpsb
lods
cwtl
xchg
ret
pop
mov
imul
dec
lcall
loop
cs
insl
lret
lret
jb
dec
cltd
jne
xor
daa
or
popa
mov
push
fsts
mov
int3
fidivrl
cmp
mov
ja
push
cmp
mov
rclb
je
add
pop
sbb
and
push
xchg
insl
inc
call
andb
cmpsl
fstpl
divl
enter
ss
pop
lods
xchg
jl
xchg
xchg
jge
jbe
xchg
ja
addr16
int3
fistpll
xor
adc
lds
bound
mov
and
lahf
add
push
xchg
mov
lahf
insb
and
or
xchg
xchg
in
pop
push
pushf
or
out
and
fcomi
bound
sbb
sbb
pop
iret
repz
bound
inc
dec
xor
cld
arpl
dec
ret
pop
stc
adc
ljmp
mov
les
ret
push
dec
movsl
cmp
cmp
adc
mov
cmp
stc
mov
fsubp
sahf
and
xchg
mov
and
into
jp
or
shl
test
xor
jl
sti
nop
sbb
out
movl
jo
out
or
mov
movsb
xor
in
add
imul
fucomi
xor
lds
aaa
mov
fs
in
popf
xor
bound
sub
push
inc
test
lods
dec
add
insl
iret
orl
std
push
mov
addr16
adc
std
mov
test
out
outsl
cmp
ljmp
and
out
xchg
fldenv
adc
sub
std
fwait
pop
mov
mov
sub
out
xchg
mov
and
daa
mov
jae
jns
shld
jb
ds
call
push
add
aaa
mov
in
cmp
aas
ljmpw
push
inc
cmp
pop
pop
sub
stc
shlb
outsb
lahf
pop
adc
sbb
lret
shrb
xor
adc
add
int
insl
push
mov
fiaddl
mov
loopne
push
jecxz
std
pop
mov
ja
lods
loopne
inc
lahf
mov
jnp
cmp
sbb
add
sub
lock
inc
jbe
mov
out
mov
jne
add
ljmp
je
lods
and
sbb
jo
cmp
and
mov
outsb
add
jno
ret
sub
pop
bound
jmp
cld
mov
mov
ljmp
popf
out
cmp
and
dec
xor
xchg
push
jmp
incl
pop
iret
mov
dec
into
mov
fcomps
sahf
popa
jmp
push
into
gs
adc
xor
mov
push
sarl
daa
lods
dec
lret
clc
in
jecxz
adc
sbb
scas
or
sub
sbb
cmp
inc
sub
mov
test
fwait
cmpsb
mov
fildl
jecxz
imul
and
sbb
inc
xchg
xchg
dec
pop
cmp
and
fsubrs
jnp
mov
adc
xchg
movsb
sbb
test
rcll
cltd
mov
dec
cmp
dec
ljmp
test
sub
loopne
fstl
and
js
pop
xor
call
mov
sbb
movsl
sbb
je
sbb
or
stos
call
pop
mov
xor
arpl
call
test
movsb
or
cmp
es
repz
adc
mov
das
roll
xor
cld
dec
mov
pop
xchg
sbb
out
rcrl
mov
cmp
sub
xor
sbb
andb
or
lods
xor
je
push
sbb
sub
arpl
push
or
pop
cmp
test
mov
rcr
jne
mov
lahf
mov
je
mov
testl
in
mov
sbb
leave
jmp
dec
scas
popf
rcll
sub
stc
sti
xorl
lahf
std
dec
xlat
lea
in
inc
js
in
stos
fists
xchg
add
iret
xor
mov
fsubl
popa
push
std
jp
sbb
icebp
inc
aas
lea
sbb
mov
jnp
adc
dec
fstps
into
arpl
cmp
setb
fsubs
inc
in
dec
cltd
pop
and
xchg
outsb
lahf
out
pop
ja
or
sbb
inc
loopne
stos
fdivrl
in
rcl
dec
sub
jne
cmp
mov
or
pop
int
jae
push
xchg
jo
or
sub
insb
and
gs
mov
or
or
push
mov
mov
sahf
sbb
fldenv
mov
sbb
jns
aas
lahf
ret
enter
and
rcr
mov
movsb
push
hlt
lahf
xchg
roll
mov
xorb
sti
test
aas
push
in
into
pop
stos
pop
xor
add
cs
sete
int3
push
xlat
adc
jecxz
pop
stc
mov
lret
push
enter
lock
idivl
repnz
pop
jno
loopne
sahf
push
mov
es
or
testb
and
shll
ljmp
inc
std
cli
int
or
xchg
add
push
das
lcall
repnz
iret
mov
in
call
mov
not
inc
fwait
mov
jp
dec
inc
es
enter
in
pop
mov
scas
out
xchg
mov
cmc
int
in
ljmp
test
or
adc
rcrl
loop
pop
jns
vmovaps
push
movsl
lods
movsl
sub
lret
xchg
out
push
loop
inc
ficoms
cmp
lea
into
jns
jmp
adcl
stos
scas
outsb
pop
lods
outsl
or
outsb
adc
inc
stos
cli
enter
push
lret
adcb
pop
or
pop
mov
or
cmp
jmp
fwait
andl
xor
mov
addr16
js
mov
out
enter
addr16
mov
aas
sbb
pop
sbb
mov
es
js
sbb
mov
inc
cs
push
mov
push
mov
in
cld
sahf
int
test
adc
out
push
dec
outsb
lods
jmp
lock
push
leave
mov
pop
mov
sbb
cli
aad
jno
arpl
stos
adc
fistps
push
pop
mov
mov
sar
hlt
fdivrp
je
jno
push
xor
mov
into
xchg
cmp
jmp
fildl
sbb
in
jnp
pop
inc
dec
jl
std
mov
jae
test
push
pop
ds
fnsave
pop
or
sbb
jg
addr16
sbb
xchg
or
outsl
mov
pop
sarb
jge
and
jno
xor
out
test
into
dec
xchg
xor
and
dec
and
jge
mov
retw
add
mov
sbb
rcrb
push
shr
hlt
or
inc
mov
cmp
and
sub
mov
sarl
pop
and
and
jbe
mov
push
arpl
cmp
into
mov
mov
idivb
aaa
jle
rcrb
lds
bound
pop
sub
daa
arpl
xor
call
pusha
inc
js
in
add
mov
xchg
rol
je
outsb
mov
jg
sub
jb
outsb
incl
lds
push
sbb
iret
std
mov
mov
xchg
mov
or
jg
jl
xchg
movsl
sbb
fidivrl
enter
xchg
aas
cwtl
int3
lahf
call
out
movsl
das
scas
mov
fcmovnu
adc
pop
sub
dec
xor
sub
mov
xchg
aas
out
inc
rorl
out
push
or
repnz
jecxz
sarb
adc
xorb
sbb
add
aas
test
pop
jne
pop
div
lods
icebp
fidivrl
jae
scas
shlb
inc
add
icebp
pop
popf
enter
lcall
dec
sbb
mov
imul
scas
mov
ffreep
add
popa
enter
icebp
or
jg
ss
call
jg
cs
das
cltd
push
cmp
cmp
out
mov
incl
scas
add
ret
push
inc
sbb
out
sub
sarb
mov
fisttpll
movsl
jnp
and
xchg
xlat
in
xchg
cmp
and
repnz
rcl
add
stc
rcrl
mov
leave
data16
stos
push
in
and
xor
jl
test
es
mov
sti
push
pop
mov
test
fxch
insb
imul
icebp
cmpsb
rcrb
xor
loopne
dec
jnp
push
sbb
add
in
fs
ja
mov
pop
fucomi
jecxz
ja
int
mov
jl
add
fstl
sbb
cltd
andl
imul
dec
push
mov
fisubl
out
jb,pn
adc
loopne
xorb
xchg
aad
cs
out
lock
aad
push
mov
test
sub
inc
inc
xchg
jp
dec
xor
mov
repz
pop
test
mov
stos
mov
fstps
out
inc
and
add
mov
dec
movsb
sub
xor
xchg
xchg
stc
mov
imul
cltd
shrl
and
cmp
cmp
out
ret
adc
test
adc
push
push
stc
inc
xor
and
inc
mov
dec
and
rcr
sbb
scas
sbb
out
ja
mov
pushf
ds
pop
mov
jmp
push
sti
in
push
stos
and
add
add
cltd
pusha
jnp
pushf
and
adc
popa
pop
mov
sub
inc
fistpl
cmp
mov
mov
xor
into
jg
aas
jl
push
test
cmp
xor
mov
pop
pop
in
repz
mov
jecxz
mov
into
sbb
push
insl
cmp
sub
dec
loope
or
repz
xorl
iret
sub
icebp
mov
stos
jp
shl
push
cwtl
mov
scas
clc
mov
out
mov
repz
scas
mov
notl
subl
adc
addl
mov
add
mov
loope,pn
or
out
xor
and
and
jmp
mov
mov
and
jmp
aas
out
in
dec
shlb
pop
push
mov
stos
insb
stos
xchg
fistpl
fwait
jl
outsb
cmpsl
fisttpll
jmp
add
mov
xorl
ficoml
adc
fildl
jnp
xor
rcrl
sbb
push
bound
in
cmp
nop
mov
pop
xchg
arpl
jecxz
mov
cmpsb
push
lahf
popa
ljmp
sub
shrl
into
sbb
fldt
cmpb
adc
lods
roll
or
dec
sti
mov
out
test
add
leave
ja
pushf
lock
sub
pop
sbb
bound
pop
pop
add
std
mov
inc
out
pop
in
pop
jge
nop
and
push
das
dec
lds
int3
icebp
enter
daa
fstp
cmp
jns
stos
ret
add
mov
add
and
mov
sub
rorb
shr
cmpl
lds
xchg
mov
cmp
mov
add
cmp
and
adc
add
xor
stos
lsl
test
mov
int3
mov
pop
ja
pop
inc
pop
sub
aad
les
push
and
xor
lods
cmp
dec
mov
and
xor
push
hlt
fcomps
push
test
mov
xor
add
popa
jne
mov
fs
sbb
pop
cmp
jp
cmc
dec
xchg
es
jns
je
leave
in
mull
xor
and
push
dec
sbb
ret
dec
mov
in
divl
push
filds
adc
or
loope
cmc
push
out
push
xchg
xchg
mov
adc
and
or
and
inc
push
and
add
and
jecxz
fnstsw
call
enter
jne
pop
xrelease
adc
dec
cmp
sbb
loop
dec
call
add
xchg
sbb
xor
fwait
ja
js
and
jmp
pop
xor
sti
out
add
dec
and
insl
das
xchg
repnz
jecxz
bound
cmpsb
add
lock
ja
pop
cmp
mov
pop
cmp
xchg
inc
lret
scas
add
dec
out
mov
sub
popa
lds
push
mov
mov
test
jo
push
repz
sbb
dec
push
rolb
stos
push
dec
movsb
insl
cli
mov
movsl
scas
xor
out
xchg
push
inc
jecxz
pop
cltd
sub
xor
pop
in
ret
int
je
and
cld
cmc
loopne
test
xor
jo
adc
ret
in
sbb
mov
push
jle
cmc
mov
jae
aad
pop
out
lret
ds
mov
data16
xlat
cs
add
fidivs
cmp
pushf
pop
sbb
outsl
jge
sbb
rol
pop
jbe
iret
out
ror
cli
cld
lods
cmp
fadds
leave
fcmovne
sub
scas
sbb
sbb
test
daa
adc
enter
cs
clc
mov
fstpl
fwait
mov
out
andb
cwtl
lock
dec
xchg
nop
jg
addl
shll
dec
mov
int
push
mov
ret
pop
mov
hlt
mov
jge
push
jnp
orl
adc
insb
arpl
nop
inc
xor
sti
fs
pop
mov
mov
mov
xchg
mov
ds
ss
out
pop
pop
mov
or
add
data16
add
push
jle
and
cmp
sbb
and
adc
adc
pop
test
loopne
lgs
push
adc
mov
aad
sti
adc
sub
stos
mov
dec
lock
push
jg
sbb
loopne
pop
popf
out
push
cmp
xchg
subl
adc
repz
mov
mov
pop
and
mov
xchg
in
mov
enter
into
cmp
lret
hlt
adc
in
in
repz
and
and
pusha
outsb
and
dec
es
ds
sub
jo
mov
cld
push
movsb
jecxz
sahf
pop
inc
je
insb
dec
xchg
dec
jmp
subl
ja
add
cmc
and
mov
mov
mov
ds
push
arpl
adc
pop
sbb
xchg
dec
xchg
out
stos
dec
pop
loop
xor
mov
call
test
lahf
call
int3
fs
mov
inc
mov
in
es
andl
pop
aam
adc
movsl
pop
push
dec
nop
aam
sub
movsl
sbb
imul
mov
add
fstpt
fldcw
pop
addr16
xchg
test
mov
xor
aad
xor
pusha
popa
mov
out
inc
xchg
cld
out
inc
jmp
ja
mov
nop
gs
push
adc
dec
ja
inc
clc
inc
push
outsl
jbe
out
out
dec
lcall
leave
push
push
scas
sbb
xchg
dec
cld
jl
les
and
push
mov
das
gs
shlb
dec
push
scas
lcall
movsl
popf
cs
sbb
sbb
jns
movsl
out
inc
push
leave
stc
jle
cmc
xor
stos
fbld
ret
cmpsb
imul
mov
push
pop
push
ljmp
dec
inc
rcll
fiadds
mov
inc
or
mov
pop
jae
push
sti
int
scas
lods
scas
xchg
jl
out
mov
insl
sahf
push
mov
push
mov
leave
push
push
mov
inc
out
adc
sub
sub
in
fidivrl
shlb
inc
aas
aaa
inc
mov
fwait
dec
fadds
arpl
or
std
sub
arpl
loopne
adc
push
pop
mov
xor
jno
lock
jb
jp
jecxz
dec
xchg
lods
popf
or
in
cmp
data16
in
lea
xchg
in
adc
cmp
lds
ret
hlt
sti
push
subb
sbb
das
pop
push
imul
je
js
add
add
leave
cli
xor
shlb
inc
mov
sbb
jne
xlat
push
pop
fsubrl
xchg
sbb
push
fs
sbb
sbb
fabs
ja
mov
jb
js
mov
and
lcall
orb
xchg
fimuls
jl
mov
pop
sti
jmp
fbstp
dec
adc
lcall
mov
xchg
fidivrl
mov
jge
sub
mov
loopne
arpl
jae
cltd
fcoms
xor
loope
sub
testl
daa
and
xor
mov
lods
mov
seta
sub
repnz
testb
nop
out
int
xor
sub
xor
out
xor
push
add
mov
imul
push
adc
fs
insl
insl
divl
inc
push
data16
pop
ret
xchg
repnz
fwait
out
or
sahf
xchg
inc
imul
jno
imul
pushf
iret
arpl
add
xor
mov
mov
les
or
inc
pop
sti
pop
test
cwtl
adc
adc
xchg
outsb
sub
ja
div
sbb
fnstsw
pop
xchg
emms
mov
subb
xchg
js
and
dec
mov
incl
pop
imul
mov
or
mov
or
in
dec
repnz
aaa
sbb
or
lcall
sbb
push
inc
fdivrs
push
xchg
and
mov
faddl
push
jp
xlat
mov
cmpl
int3
inc
push
or
cmp
jle
jo
push
cmpsb
leave
sbb
hlt
xchg
lds
push
jae
imul
cld
push
enter
je
xchg
pop
sub
inc
std
in
iret
or
push
fcoms
mov
leave
sti
push
push
inc
jge
cmp
movl
xor
jecxz
test
push
push
into
ljmp
aam
push
orb
xchg
popf
push
subl
lret
test
sarl
dec
xor
inc
into
leave
int3
popa
idivl
or
in
decb
in
mov
mov
cltd
add
mov
movb
xor
add
inc
xor
pusha
and
dec
or
pop
clc
testb
mov
addr16
cmovle
punpckhwd
sub
pop
ret
inc
dec
sbb
fisttps
dec
dec
jno
inc
dec
mov
shll
mov
sub
rorl
pop
sbb
push
out
loopne
push
outsl
jg
mov
pushl
mov
mov
in
push
pusha
add
jg
mov
adc
popf
subb
sbb
pop
in
push
adc
rclb
jbe
push
mov
test
cmc
mov
mulb
add
or
pop
and
es
xor
sub
ret
dec
xor
xor
adc
jle
icebp
push
mov
imulb
inc
subb
test
lahf
sbb
sahf
xchg
clc
mov
addl
pop
scas
cltd
inc
and
arpl
adc
cld
mov
push
test
ja
add
cmpb
push
add
insb
int
cmp
xrelease
add
cmpsl
jbe
push
and
call
ret
outsb
daa
cmp
or
repz
mov
xchg
das
and
fwait
mov
test
shl
inc
fnstsw
int3
xchg
cmpsb
inc
stos
fisttps
adc
xlat
mov
push
and
jg
and
je
ffreep
sbb
fistpl
stc
rcl
insl
inc
insb
out
push
fnstenv
mov
xor
and
inc
fsubrs
icebp
nop
and
add
push
adc
dec
fdivl
fidivs
pop
jl
mov
rolb
adc
dec
lods
imul
repnz
pop
aam
outsb
push
repz
stos
sub
jbe
incb
inc
rcll
unpcklps
addr16
or
xchg
mov
in
xchg
jb
dec
pop
lea
cli
dec
aad
sahf
stc
popf
testl
lock
int
inc
add
or
add
cmc
pushf
inc
movsl
das
rolb
flds
das
cmp
jl
ja
jo
cmp
sbb
stc
add
test
daa
mov
xchg
pop
rolb
sbb
and
daa
dec
xchg
in
negl
notb
xor
mov
jo
mov
pop
sahf
stc
xorb
inc
jne
sbbl
pop
divb
pop
adc
shll
adc
in
mov
fs
push
aam
or
out
cmp
fcomi
cli
pop
fimull
fnstenv
xchg
int
pop
in
hlt
testl
data16
call
ss
call
xor
insb
int
scas
push
outsl
adc
xor
push
jb
test
dec
dec
mov
sar
dec
jecxz
xchg
xchg
lret
out
lds
xor
xor
xchg
ss
cmpsb
jmp
test
jo
out
stos
fcomp
rcrl
push
inc
lds
mov
les
call
push
sbb
push
push
adc
mov
jae
jge
sub
jno
jb
sahf
ficoml
jnp
pop
rolb
and
loope
xor
dec
add
int
iret
rcl
mov
daa
adc
loopne
cmpsb
push
dec
xor
aaa
jo
dec
jb
adc
xor
pusha
loope
mov
test
xchg
mov
and
and
jmp
cmpl
stc
int
out
inc
rcrb
and
ret
je
and
mov
sahf
arpl
pop
lahf
cmp
pop
or
hlt
inc
cmp
ja
push
pop
jle
pop
or
push
sub
adcl
adc
repz
fdivrl
push
add
clc
cmp
dec
jo
aaa
push
dec
movsb
stc
into
das
pop
xor
call
icebp
pop
xchg
mov
into
pusha
into
mov
stos
sub
pop
add
dec
jns
stos
add
inc
xchg
fsubl
fildll
loope
aaa
push
push
fisubl
les
scas
fistpll
dec
bound
lret
fisttps
xlat
sti
ficomps
sbb
pop
lcall
cmp
leave
mov
mov
test
shrb
dec
sub
mov
jae
dec
lahf
mov
std
fs
in
cld
cmpsl
loop
mov
jae
jecxz
and
arpl
push
int3
ds
lahf
mov
push
push
cs
push
push
mov
pop
adc
arpl
out
inc
push
sbb
sub
inc
push
pop
ret
dec
roll
fwait
cmpsb
push
and
mov
pop
movsl
dec
and
bound
aam
adc
dec
popa
subl
mul
iret
inc
jnp
xchg
or
int3
pop
mov
mov
std
mov
mov
push
and
aam
rol
aam
ss
jo
or
mov
idivl
ret
test
or
dec
jecxz
add
adc
fsubr
cld
xchg
fdivrl
das
insl
cmp
mov
iret
push
jnp
aaa
aas
mov
loopne
and
xchg
lods
xor
test
sbb
fwait
cmp
int3
mov
aam
insl
xchg
pop
pushf
out
mov
xchg
rcll
cmp
xor
add
aam
pop
stc
push
push
mov
xchg
int
out
lea
pop
and
xchg
cmp
and
clc
dec
fistpll
insl
xor
incb
into
and
jge
xchg
out
dec
inc
pop
cwtl
jnp
cmp
jo
sbb
fs
inc
aas
push
loopne
or
bound
mov
mov
out
imul
xor
loop
roll
push
sarl
aas
icebp
add
pop
cmp
mov
jmp
lea
cmp
dec
add
mov
mov
mov
jnp
mov
loopne
es
mov
mov
in
or
idivb
popa
fsubs
enter
sub
add
jns
imul
loope
pop
sbb
jl
lds
mov
mov
popa
mov
inc
push
popf
shr
mov
sub
out
rcl
fidivs
lock
xchg
jae
lods
jg
in
sub
in
mov
in
aaa
and
mov
js
test
aam
pop
idivl
xchg
xchg
push
sbb
fisubs
push
outsb
mov
cld
andb
mov
popa
and
xchg
js
ds
sub
call
xchg
sbb
mov
mov
int
das
int
cs
dec
dec
cli
clc
mov
lds
adc
mov
mov
aad
fs
fbld
js
repnz
ret
jle
mov
subl
testl
cwtl
jle,pn
and
scas
hlt
pop
in
add
push
decl
mov
arpl
mov
xor
jge
lds
sub
in
adc
inc
push
cmpsb
mov
dec
je
out
lret
xchg
dec
repz
inc
push
jmp
jbe
adc
iret
mov
jns
cmp
push
scas
pusha
lock
imull
es
out
lahf
push
cmpsb
xchg
sbb
mov
ret
loope
xchg
lcall
jmp
ss
mov
ss
push
scas
xchg
ljmp
test
pop
mov
sahf
daa
dec
insb
sarl
cmp
inc
mov
cld
or
adc
inc
mov
insb
cmp
pop
sub
sub
std
cmp
jno
mov
mov
movsb
mov
xor
jle
xor
and
lds
adc
mov
xchg
push
sahf
push
mov
ret
xor
ret
mov
sbb
dec
pushf
sbb
mov
add
dec
push
test
mov
or
ret
and
std
daa
or
bound
aas
pushf
lea
cli
and
lods
stos
fisttps
jbe
mov
mov
and
leave
mov
cmp
jge
inc
repz
xchg
or
stos
loope
inc
test
or
push
ds
push
inc
dec
mov
add
aad
sar
std
adc
cli
call
cs
jo
mov
mov
iret
cmc
add
into
popa
fcmovnu
jp
mov
push
push
jge
mov
repz
inc
xchg
test
movzbl
or
adc
dec
rorl
dec
cs
aas
inc
in
mov
lock
sbb
push
into
mov
pop
mov
mov
xchg
sub
sbb
aaa
lret
jmp
dec
in
inc
popa
mov
sub
aad
clc
int3
cmp
mov
loope
inc
js
xchg
and
mov
out
inc
imul
mov
cmp
push
adc
shlb
icebp
push
xlat
pop
push
es
sub
inc
add
mov
inc
test
or
adc
je
dec
cmp
leave
js
and
sbb
nop
pop
jno
ret
xchg
pop
xor
sub
rcrl
xchg
mov
mov
mov
mov
test
cld
jp
xor
repz
jne
cmp
mov
mov
sub
ja
add
cmc
cmp
mov
je
fmul
rcr
movsb
ja
cmp
mov
outsb
fbld
out
jo
push
and
enter
adc
les
or
cmp
pop
mov
mov
shrb
inc
dec
cltd
xchg
and
das
cmp
or
test
lahf
push
lods
mov
bound
lahf
and
iret
xchg
and
push
enter
jg
fldcw
test
nop
xor
faddl
cmp
push
fmull
adc
mov
pop
aaa
push
dec
stc
push
ljmp
push
orb
std
ljmp
sub
lods
jb
inc
xchg
mov
rcrb
cld
fs
std
inc
rcr
push
repz
sti
dec
movsb
mov
xor
ret
inc
sub
out
and
dec
fs
xlat
repnz
aad
push
scas
pushf
daa
mov
xor
repz
jb
fisubs
addr16
popf
sbb
add
in
aad
inc
cmp
ja
jl
divb
add
sub
dec
sbb
xor
int3
outsl
je
cs
popf
pop
push
loopne
jno
lahf
inc
xchg
insl
popa
adc
out
mov
add
push
leave
insl
cmc
inc
das
inc
out
in
scas
sti
mov
add
in
imull
xchg
jp
enter
neg
les
out
test
or
push
xor
bound
add
sbb
in
dec
subl
js
cmpsb
xor
xor
sub
inc
xchg
pop
je
push
xchg
adc
mov
and
dec
push
mov
and
fbld
sarb
cmpsb
jnp
popa
mov
test
je
hlt
fwait
in
fwait
mov
and
inc
sub
aas
pop
aad
cmc
sub
psrld
pop
add
sbb
and
sbb
insb
mov
popa
push
inc
xchg
mov
adc
xor
lret
sbb
or
and
push
shrb
pop
gs
mov
popf
cwtl
jl
jg
int3
enter
mov
cmpsl
push
pop
bound
cmpsl
sbb
or
mov
jle
int
mov
ljmp
sti
lds
dec
jmp
pushf
xchg
sbb
inc
aam
sti
imul
mov
aad
sbb
dec
cmc
mov
jne
xchg
std
inc
xlat
inc
mov
ret
pop
and
imul
dec
or
mov
std
mov
fcmovne
fwait
cmp
dec
sahf
adc
mov
mov
cmpsb
xchg
dec
sub
lods
pusha
xor
ret
pop
inc
mov
arpl
xchg
jo
ret
in
pop
cmp
lods
pop
push
mov
cmp
cmp
lock
fcmovnb
push
test
fwait
dec
adc
pop
je
cld
mov
dec
add
fisubrs
push
push
test
cmpsb
mov
or
daa
xchg
inc
mov
dec
data16
pop
inc
cmp
out
jmp
push
clc
mov
std
adc
fpatan
sbb
xor
clc
cmp
or
pop
incl
scas
inc
mov
mov
pop
cmpsb
clc
clc
in
fidivrl
in
xchg
movsl
pop
sbb
mov
lret
or
stc
iret
rcll
fistps
movsl
addr16
roll
sahf
outsb
sbb
stos
adc
shlb
push
inc
mov
rcrb
fwait
icebp
and
jno
pop
mov
add
pop
jno
in
cmp
sub
and
cmpsl
mov
mov
and
jae,pn
jo
push
lds
pop
sub
pop
fyl2x
or
lods
xlat
icebp
xchg
scas
xchg
xchg
leave
aam
cmp
dec
pusha
hlt
push
mov
mov
inc
jl
cmpsb
aas
out
jo
adc
mov
cld
sbb
rcl
stos
insb
xchg
lret
into
decb
pop
scas
insb
roll
xor
jge,pt
mov
outsb
in
push
nop
jbe
adc
adc
shll
mov
xchg
rcll
jb
or
sub
das
out
push
add
fs
js
enter
push
js
fsubrl
cmpsb
loopne
or
stos
js
cmp
in
das
fs
adc
mov
cmpsb
xlat
call
add
int
ljmp
lret
imul
push
lret
push
xchg
mov
andl
push
outsb
testb
ret
ficompl
push
xchg
mov
pop
cmp
scas
mov
fisubrs
pop
push
cltd
jbe
daa
pop
sub
dec
mov
pmaddwd
push
inc
cmp
push
notb
ljmp
cmp
sub
inc
arpl
inc
mov
aad
sarl
xchg
mov
stos
dec
mov
insl
jnp
or
popf
popf
test
mov
mov
movsl
movsl
dec
js
loope
mov
sti
in
mov
sbb
repz
sub
out
les
mov
call
cmp
aad
pop
dec
ds
xchg
inc
fs
push
inc
xchg
sbb
push
xchg
push
xchg
add
ffreep
cmp
dec
fsubrs
push
out
loop
jbe
les
daa
call
add
or
repz
stos
daa
push
movsb
sub
js
divb
fistl
ret
popa
hlt
jno
xor
push
xchg
out
pop
xor
cmpsl
fs
scas
sbb
js
mov
pop
daa
pop
out
lret
sarb
lret
and
xlat
cmp
jmp
pop
movsb
imul
sub
push
jp
pop
pop
scas
jno
dec
inc
xor
push
movsb
lcall
add
test
jns
mov
adc
pop
jp
fadd
sub
and
mov
and
lcall
xchg
stc
call
xor
push
jbe
mulb
int3
in
aaa
aaa
push
mov
repnz
inc
fcoms
ret
jae
pop
push
cltd
in
psrlw
sbb
jnp
fidivrl
push
sahf
insl
jnp
leave
popa
or
lahf
jmp
repz
jmp
push
stc
cltd
dec
lret
xchg
pushf
es
adc
je
cmc
push
mov
add
mov
scas
push
sbb
pop
dec
mov
inc
mov
andb
or
mov
nop
in
mov
mov
jb
mov
sbb
sub
pushf
mov
and
jmp
sbbl
sbb
lcall
push
rcll
ss
enter
jecxz
push
pop
dec
inc
aaa
jae
inc
push
addr16
lods
dec
icebp
movsl
cmp
repz
adc
test
inc
call
outsl
dec
xchg
lods
mov
scas
push
xor
cs
pop
jl
loopne
sbb
jmp
cmp
sbb
mov
pop
ret
cli
adc
movsb
xchg
lret
cld
ljmp
andb
out
mov
cld
dec
pop
fisubrl
imul
repnz
jecxz
or
in
icebp
movsb
fadds
outsb
std
out
call
rorb
ret
inc
push
fmuls
jp
iret
dec
and
movsb
pop
xchg
dec
popf
jg
mov
adc
push
dec
xchg
sub
mov
lods
shrd
inc
rclb
lods
or
daa
cmp
imul
xorl
js
call
stos
or
mov
mov
movsb
add
in
and
fldcw
push
addr16
inc
test
data16
add
sbb
or
ret
jbe
adc
leave
sahf
xor
mov
or
adc
insl
or
jbe
xor
pop
in
mov
inc
mov
out
mov
scas
sub
dec
test
xor
fbld
push
pop
mov
rcll
add
lea
lret
nop
inc
das
push
mov
fmul
pusha
imul
push
adcl
inc
cld
lods
das
cltd
add
pusha
cwtl
lea
pop
fbld
or
push
inc
sahf
les
or
or
add
int
or
dec
cmp
pop
shlb
xchg
push
imul
mov
icebp
jae
dec
pop
pop
and
outsb
test
ljmp
push
lods
or
adc
roll
xor
cmc
jle
pop
int3
cmpsl
xor
pop
lods
xchg
out
add
nop
or
fstps
jno
sub
outsb
mov
sahf
add
cltd
loopne
xor
xchg
stc
jb
cmp
loop
push
mov
popa
pop
mov
test
mov
andl
pop
pop
mov
mov
adc
sub
into
mov
vandnps
cli
enter
cmpsl
out
cmpsb
lods
mov
bound
mov
lahf
push
push
test
mov
inc
xor
out
out
lock
inc
leave
mov
dec
pop
mov
or
xchg
dec
jno
xchg
inc
aaa
push
sub
mov
int3
xor
pop
lock
xchg
stos
sub
ss
xchg
or
mov
mov
pop
bound
dec
pop
mov
cs
stos
xor
repnz
inc
push
sub
or
pop
mov
cli
bound
push
sti
and
icebp
jne
popf
iret
mov
mov
adc
sbb
filds
xchg
ret
jns
mov
dec
ret
cmp
push
out
mov
mov
ret
cltd
pop
pop
stc
jecxz
cmpsl
inc
inc
out
xor
in
jnp,pt
xchg
ja
and
and
lcall
sbb
sub
leave
scas
sub
cmp
in
ret
sub
jae
push
mov
test
xchg
sbb
adc
fwait
insl
xor
adc
dec
lea
adc
dec
push
cmpsl
call
mov
adc
sub
sub
out
cli
and
cmp
lcall
sub
xor
xor
inc
aaa
add
push
pop
daa
xchg
fstl
hlt
pushf
push
pop
lds
mov
pushf
mov
add
push
ret
shll
scas
sti
mov
test
xor
lret
and
mov
or
add
notl
fisubs
mov
jae
or
fs
dec
add
stc
add
xor
push
and
nop
ss
js
push
dec
mov
adc
push
dec
mov
cli
jecxz
cmpsl
fninit
sub
gs
out
lea
lock
jne
pop
in
jnp
lock
loopne
adc
mov
lea
push
test
adc
ds
dec
addb
mull
das
pushf
jle
sbb
add
jno
pusha
xor
in
stc
testl
roll
cmc
jle
xor
popf
bound
into
ja
lret
sbb
mov
jle
jne
adc
pop
cltd
dec
loopne
mov
add
sti
addr16
fwait
cmc
dec
add
movsb
inc
mov
lods
mov
mov
add
pop
int
mov
push
sub
sub
inc
imul
dec
rcll
mov
cmp
push
imul
test
inc
mov
mov
adc
add
mov
bound
sbb
cmp
sbb
in
pushf
lods
out
and
mov
adc
mov
pop
lret
in
and
xchg
arpl
mov
mov
pop
clc
push
stc
dec
mov
aam
inc
pop
ret
cmpb
movups
cmp
dec
push
mov
jne
divl
xorl
inc
cmp
jge
pusha
inc
popf
push
cmc
xor
dec
orb
pusha
lcall
outsl
lods
or
push
xchg
out
pop
rorb
nop
mov
pop
dec
iret
add
pop
test
popa
mov
addr16
movsb
mov
pusha
nop
jmp
sbbl
ret
iret
inc
xchg
jmp
lods
mov
add
mov
mov
inc
fadds
outsb
int3
stos
push
mov
fmuls
out
lock
xchg
sub
or
outsb
inc
and
mov
push
and
mov
sub
aam
addr16
lret
je
outsb
mov
sub
stos
adc
jl
mov
sbb
inc
pop
idivl
inc
clc
aas
pop
pop
dec
jne
adc
shll
add
lods
jge
pop
cli
rcrl
lock
lret
sbb
scas
push
dec
mov
pop
mov
sub
jmp
add
push
or
jno
imul
mov
arpl
and
mov
ficompl
or
dec
dec
lea
xor
xor
scas
clc
xchg
lock
mov
or
push
sbb
pop
lods
adc
popa
lods
add
pop
cltd
aas
sub
inc
jecxz
add
or
fs
pop
jbe
negl
sahf
pop
notb
lret
icebp
jb
dec
leave
xchg
hlt
cmp
pop
fs
pop
dec
cmp
mov
inc
into
dec
and
ds
mov
mov
sbb
fmul
cmp
mov
inc
rep
mov
xchg
insb
and
inc
mov
fsubrp
inc
xchg
arpl
or
imul
inc
mov
adc
loope
mov
hlt
mov
dec
and
inc
and
fidivrs
push
cs
fwait
xchg
mov
jle
sbb
imul
cmp
xor
mov
outsb
dec
lds
mov
push
mov
shrl
mov
add
xchg
mov
out
scas
pop
ret
xor
or
fdivr
jg
jnp
push
or
aaa
lods
rol
mov
xor
sarl
shr
jmp
leave
jmp
jle
pop
inc
jns
inc
inc
pop
pop
movsl
push
testb
cld
xchg
or
mov
fsubrs
mov
cmc
adc
inc
adc
xor
mov
in
mov
pop
fistl
xchg
xchg
mov
inc
adc
arpl
add
mov
rolb
icebp
mov
pop
loopne
mov
cmpsb
dec
repz
test
fistpll
loop
jle
jl
call
gs
sbb
inc
sub
jge
cmp
int3
cs
adc
cmp
xor
scas
cmp
adc
sub
gs
es
adc
jae
xor
dec
in
gs
mov
mov
xlat
mov
lock
mov
and
jle
dec
or
mov
inc
adcl
jg
hlt
mov
pop
dec
addr16
ljmp
repz
adc
add
ss
fdivrs
fxch
stos
nop
fistpll
xchg
or
pop
pop
lods
sbb
fstpl
shrl
out
adc
xor
cmp
adc
sbb
lea
stos
stc
ja
sahf
testl
jg,pt
or
adc
lret
pop
mov
xchg
fmull
xchg
or
jno
pusha
xchg
ss
inc
push
sub
arpl
jbe
data16
cmp
lret
inc
and
sub
xor
push
dec
adc
add
std
push
dec
jbe
lcall
dec
cmc
lods
push
stc
inc
es
lods
hlt
jg
arpl
je
pop
scas
lret
mov
bound
cmc
aas
stc
dec
mov
jp
xor
push
xchg
scas
sbb
or
cvtpi2ps
rorb
mul
cmpsb
imul
scas
mov
mov
rclb
lea
pusha
movsl
neg
xor
in
cmpsl
sub
xchg
dec
push
sti
hlt
jmp
pop
test
mov
daa
sub
ljmp
ds
out
bound
xchg
add
cmc
out
data16
bound
icebp
push
mov
les
xor
rcl
cmp
loopne
jb
imul
mov
mov
push
pop
mov
mov
out
es
sub
or
xlat
push
xor
cli
movsb
pop
jnp
xor
fidivs
aad
ficoms
out
xchg
mov
imul
cmp
jle
test
in
jne
dec
jg
cwtl
mov
shll
mov
imul
in
int3
pop
dec
or
adc
orb
jne
repnz
test
aam
cmpb
shl
cmp
cmp
add
push
ret
and
inc
incl
mov
daa
inc
dec
fs
cmp
cmp
pop
sub
pop
jb
bound
call
jecxz
xchg
adc
mov
loop
test
div
repnz
sub
xchg
test
xlat
scas
cmp
divl
scas
push
imul
lret
pop
cmp
inc
aas
push
push
out
mov
cmp
fstpt
mov
aam
ss
roll
mov
shlb
adc
stos
in
test
adc
repnz
dec
jge
int
sbb
mov
or
lret
lahf
aam
loopne
outsl
pusha
stc
lahf
jbe
sub
push
outsl
mov
ja
xor
sbb
push
nop
push
outsl
stos
dec
sub
add
in
mov
filds
pop
pop
outsb
xchg
fildll
push
xchg
sbb
test
push
pushf
sub
push
test
sub
dec
or
xchg
fsubs
or
push
inc
ret
shlb
test
push
pop
inc
jb
mov
and
insl
out
mov
push
jl
ror
jb
push
push
mov
jmp
gs
outsb
ja
sbb
loope
pop
ja
adc
inc
das
push
and
sbb
data16
mov
dec
dec
mov
addr16
rolb
sbbb
push
hlt
mov
jns
inc
cmpsw
imul
outsl
repz
dec
xchg
call
inc
iret
std
lea
xor
idivl
lret
das
sbb
dec
pop
mov
inc
jg
xor
ret
cwtl
and
sbb
jp
aaa
adcl
stos
lret
loopne
cmpsl
fs
lods
xchg
push
inc
aaa
mov
push
sub
add
daa
psadbw
int
fwait
pusha
xchg
sub
lods
or
sub
loopne
andb
xchg
bound
arpl
inc
add
inc
stos
sub
sarl
xchg
out
push
add
lret
mov
add
pop
cmp
icebp
mov
aam
inc
jg
subl
jne
mov
sete
fistl
mov
sub
cmpsl
push
in
fxtract
push
jnp
push
lret
test
sub
push
fmul
pop
mov
mov
xchg
or
int
lock
xor
dec
add
out
lahf
mov
mov
cmpsl
sbb
cmp
lea
pop
xchg
jmp
movsb
cmp
jne
shlb
enter
sbb
pop
push
shll
sti
push
xchg
xchg
add
cmc
inc
cmpsl
and
rcrb
mov
cmc
or
popw
mov
in
pop
cwtl
xchg
into
rorb
inc
fdiv
lock
nop
and
dec
xchg
outsl
xchg
mov
in
mov
scas
push
adc
je
loope
cmp
sti
cmpl
jmp
sbb
xchg
movsb
fistpll
mov
sbb
jae
xorl
js
xchg
enter
test
jle
leave
aad
sbb
data16
sub
jno
and
movsb
cmp
sbb
pusha
or
push
ljmp
int3
sub
pushf
cld
dec
out
xchg
inc
pop
mov
and
test
mov
mov
out
daa
in
jae
nop
sbb
dec
xchg
into
je
clc
in
xchg
jns
lods
insl
mov
clc
sbb
xchg
mov
rclb
sub
in
fcomi
pop
push
inc
or
out
push
xor
int
lds
add
mov
lea
or
and
pop
mov
inc
lcall
jno
xor
or
aad
adc
adc
rcr
imull
das
or
mov
mov
data16
je
push
xchg
les
xchg
je
push
and
mov
mov
mov
test
jnp
movsl
xor
movsb
pop
push
inc
shrb
jecxz
arpl
enter
and
ss
or
push
pop
push
or
rcll
xorb
daa
lock
dec
fsubrs
xlat
das
cmc
pop
sbb
mov
insb
pop
call
mov
sbb
push
shll
andb
movsl
std
pop
mov
xor
aad
pop
sub
dec
xor
hlt
and
testl
sub
fwait
mov
loopne
imul
sbb
cld
jbe
aad
sub
insl
mov
push
lret
fs
or
push
mov
test
out
push
enter
ljmp
nop
lcall
ret
loopne
pushf
leave
ja
iret
popf
xorb
jmp
dec
cmp
enter
jp
lds
iret
sub
dec
sbb
sbb
sub
xchg
lods
jg
fwait
dec
sarl
fnstcw
or
fdiv
mov
mov
push
cmpsl
mov
fisubrl
mov
xchg
fxch
pop
lret
adc
pop
andl
addr16
hlt
ljmp
cltd
adc
add
xorl
clc
cmpsl
addr16
jle
sbb
insl
cmp
push
add
gs
out
lret
or
and
pop
inc
repz
jp
test
mov
je
out
and
insl
shl
pop
inc
xchg
mov
or
lods
add
sub
inc
pop
push
xchg
xor
out
xor
fidivrl
ljmp
mov
fbld
rcrb
mov
cmp
and
cmp
insl
xchg
repnz
sarl
cmp
mov
loope
bound
lods
mov
push
icebp
xchg
add
fimuls
cmpsl
addl
and
pop
push
test
dec
sub
jo
int
repz
xlat
dec
push
mov
mov
xchg
pop
mov
mov
pop
and
scas
xchg
pop
mov
lahf
loop
mov
xchg
mov
mov
inc
fdivl
repnz
xchg
adc
les
mov
add
fwait
mov
mov
xchg
pop
add
xchg
inc
mov
outsl
jno
xchg
pushf
neg
mov
insb
adc
mov
aad
push
lods
aam
aam
sbb
lahf
mov
mov
popf
pop
iret
mov
cmpsb
and
xchg
gs
movsb
and
mov
jl
jbe
loopne
hlt
sub
in
pop
test
push
jo
jns
sub
jne
jp
pop
fbstp
leave
xor
loopne
out
sub
mov
adc
popf
rcrl
inc
aam
mov
xlat
in
das
lods
dec
mov
cmp
addr16
or
loopne
lods
popf
insl
push
mov
lcall
mov
or
sbb
or
jp
stos
xchg
enterw
les
push
jle
inc
pop
bound
add
or
xor
pop
incb
lcall
push
fstl
mov
mov
jne
cs
cmp
inc
mov
cmp
pusha
add
push
xchg
xchg
jns
inc
mov
fcmovnb
popa
ljmp
arpl
xor
pushl
enter
inc
and
call
clc
push
or
sub
test
lds
cmp
pop
sub
jmp
sbb
pop
pushf
jno
and
adc
stos
sbb
xchg
cmpsb
pop
and
xor
sbb
or
pop
push
mov
mull
xor
cwtl
and
dec
mov
push
jnp
jge
fscale
mov
gs
sarl
cmpl
xlat
xchg
or
adcl
sbb
inc
jmp
mov
push
pushf
dec
mov
mov
push
fcoml
ds
adc
mov
repnz
outsb
pop
or
movsb
sti
sub
test
or
mov
xchg
iret
xor
xchg
lods
imul
dec
fsubr
icebp
sbb
lea
push
arpl
mov
mov
pushf
xor
int
sub
lcall
jmp
lods
movsl
jne
call
scas
xor
aam
dec
data16
sub
lea
nop
dec
inc
adc
ss
mov
sub
ss
fldenv
sub
push
cmp
dec
jmp
ja
or
adc
enter
cmpsb
dec
push
pop
inc
mov
data16
jl
fistl
cmp
in
and
jmp
adc
xchg
je
lret
mov
pop
les
push
and
subl
imul
jg
dec
gs
jno
inc
inc
scas
subl
ret
rol
mov
insb
sbb
rolb
push
lods
ret
add
xor
je
mov
and
lods
out
sbb
mov
mov
inc
xchg
das
cmpsb
mov
out
jae
call
lods
ja
mov
mov
pusha
dec
cli
iret
push
mov
sub
fistpl
dec
arpl
xchg
jle
mov
mov
lcall
call
das
or
mov
test
sub
push
loop
lock
js
packuswb
cwtl
cmpsl
xor
or
call
in
ret
sub
cmp
cmp
inc
stos
cmp
test
mov
mov
and
imul
loop
scas
add
lcall
lret
pop
loope
nop
aam
xchg
loope
jae
scas
stos
roll
inc
movsl
jo
imul
fidivrs
cld
push
mov
mulb
dec
loopne
add
cmp
mov
or
sbb
scas
jge
dec
fstps
and
mov
jp
enter
movsl
mov
out
xor
jo
mov
mov
shr
xchg
xor
jl
cmp
lcall
sub
std
es
mov
loopne
sbb
add
fs
sbb
test
jns
popf
rolb
inc
jg
addr16
push
fnstcw
mov
std
jmp
inc
in
pop
sub
or
clc
cli
xor
imul
sarl
inc
pop
stos
xchg
cltd
loop
pop
fsubrs
or
xor
add
jmp
mov
and
popf
lds
inc
out
into
lock
outsl
cmc
ljmp
loop
cmp
lea
mov
lcall
xor
addb
aaa
add
inc
adc
loopne
lods
mov
mov
sub
xor
sub
out
mov
dec
inc
ss
mov
pushf
out
push
pop
mov
mov
mov
popf
pop
inc
pop
jo
sti
pop
shll
xchg
cmovbe
fcmovnbe
cmp
insb
mov
pop
packsswb
jle
imul
sahf
mov
ret
push
xchg
out
mov
into
jle
enter
xor
sbb
popf
loope
jb
imul
decl
mov
arpl
stos
mov
sub
ret
and
mov
push
out
mov
fwait
push
sti
xchg
mov
loop
pop
pop
cmp
and
and
iret
iret
add
bnd
fbld
outsl
test
add
adc
lahf
mov
mov
add
lahf
pop
sbb
push
ja
incb
gs
subl
mov
daa
dec
push
mov
xchg
cmp
arpl
push
jo
fiaddl
jmp
pop
stc
pop
in
xchg
dec
iret
les
jno
leave
lea
out
mov
imul
pop
cli
mov
iret
mov
adc
aaa
sbbl
push
jo
and
adc
pop
dec
insl
dec
ljmp
jb
xchg
sub
les
push
jbe
push
dec
add
add
pop
insl
inc
push
clc
adc
sbb
je
jmp
sbb
daa
aad
fsub
cltd
pop
cmpsb
sbb
ret
dec
or
or
clc
sub
cmp
in
pop
stos
mov
call
int
mov
sub
ljmp
adc
sti
inc
stc
xchg
adc
push
sbb
into
arpl
add
lahf
add
xor
movsl
cmp
in
lods
ja
jg
xor
dec
in
loop
les
or
xchg
dec
dec
jae
push
into
test
sbb
push
iret
insl
mov
push
dec
dec
push
daa
inc
movsb
sub
push
je
and
mov
sub
test
repz
xchg
imul
pusha
push
pop
sub
push
insl
sbb
test
out
mov
mov
insb
aad
jo
sbb
cld
out
adc
lret
and
sub
addr16
mov
ds
lcall
lods
pop
mov
pop
icebp
lea
loopne
pop
jg
in
mov
and
jnp
out
movl
jle
xchg
mulb
aam
pop
cwtl
movsl
addr16
sub
ret
testb
fcom
mov
xchg
and
movsb
rcrb
fs
mov
rorl
out
push
ljmp
sub
fsubs
in
out
mov
jmp
movsl
arpl
xlat
push
mov
outsl
movsl
sbb
bound
daa
sub
mov
or
xchg
add
sahf
roll
cmp
jle
dec
insb
and
mov
dec
fiaddl
and
and
cli
mov
shl
or
sbb
jecxz
lret
cmp
lret
jmp
push
aam
fwait
push
push
loope
or
mov
xor
icebp
sbb
lahf
mov
xor
arpl
ja
aaa
and
push
lret
test
mov
in
xor
daa
insl
test
jle
mov
and
jg
xor
and
loopne
xchg
sti
aas
ja
jle
xor
into
nop
push
sub
lds
testb
loopne
ds
or
mov
div
push
mov
pop
cmp
mov
push
cmp
inc
or
fisubs
lock
imul
inc
inc
mov
das
outsb
aas
sti
xchg
aad
mov
push
mov
notl
int
dec
jecxz
jp
add
and
sti
jo
fistps
movsl
ret
imul
dec
jmp
xchg
or
xchg
xchg
data16
data16
sbb
inc
movsl
mov
push
add
or
icebp
sbb
rcrl
cmp
sbb
xchg
insb
out
pushaw
daa
push
jne
xor
push
inc
lods
into
test
or
inc
stc
xchg
or
subb
mov
outsb
mov
xor
jnp
jmp
adc
out
mov
js
add
mov
jle
adc
subb
imulb
icebp
mov
mov
sub
sub
jne
and
scas
ds
mov
push
mov
pop
dec
idivb
ret
cmpl
inc
sbb
mov
dec
outsl
ljmp
sti
movsl
int
mov
add
push
das
aam
fadds
pop
popf
int3
loopne
mov
xchg
nop
dec
mov
stos
aad
jle
ja,pt
xchg
stc
and
xor
pop
test
clc
push
aas
bound
mov
outsb
fisubrl
pop
push
dec
cmc
fstpl
cltd
sbb
cs
iret
pop
dec
fisubrl
jmp
aaa
scas
rorl
std
add
mov
jno
sbb
enter
push
add
out
lock
sbbl
aas
jo
xchg
lds
cmp
jne
mov
sub
sub
inc
xchg
ret
push
nop
jnp
cli
and
popa
mov
sub
arpl
adc
dec
dec
out
mov
push
add
fsubr
outsl
ds
add
xchg
popa
iret
outsl
ret
test
cmp
jl
inc
push
sahf
scas
sub
mov
lret
mov
pushf
imul
call
fiadds
ss
test
sub
daa
jecxz
sti
push
push
idiv
movsl
cli
aam
loopne
int
popf
imul
add
cvtpi2ps
and
mov
xchg
push
mov
repnz
adc
sub
mov
addr16
inc
jle
nop
jo
test
or
rclb
aam
fisubs
bound
push
jecxz
ret
sub
jb
xchg
mov
rcrb
jo
icebp
pop
pop
aas
lret
mov
mov
call
in
divl
sti
mov
sub
mov
add
les
sub
notb
push
jl
or
jno
push
std
mov
add
ret
pop
jmp
sbb
or
pop
testl
stos
jbe
xor
cmp
outsl
fcmovne
xchg
dec
adc
xchg
cmpsb
cmp
arpl
push
mov
icebp
je
sahf
or
dec
aad
sahf
push
push
stc
loopne
pop
dec
pusha
jmp
mov
mov
jg
mov
je
cmp
push
popa
out
sub
dec
mov
inc
shll
and
inc
fadds
repnz
fstl
popa
mov
sub
add
test
mov
fbstp
inc
xchg
insl
mov
xchg
test
adc
es
cli
cmp
cmpl
pop
inc
mov
lcall
fnstenv
and
aas
sbb
add
push
jl
insl
in
fdivs
mov
push
add
repz
bound
icebp
sarl
cld
push
mov
cmpsl
movsl
adc
aas
inc
fs
insl
mov
jbe
hlt
ret
jbe
inc
insb
inc
insb
jle
pushf
lret
insl
xor
mov
cmp
arpl
repz
into
int3
mov
test
sbb
aas
addr16
xchg
sub
sub
lret
outsl
mov
jmp
mov
sti
cmp
jo
popa
mov
push
mov
scas
sbb
cmp
sub
pop
add
je
pushf
cwtl
pop
jno
jns
mov
aam
cmp
push
cmp
and
and
mov
push
test
cmp
ret
loope
mov
hlt
add
repz
dec
cwtl
pop
inc
or
sti
inc
mov
pop
pop
enter
je
inc
rcrl
fcmovnb
adc
cmp
jecxz
jp
xchg
pop
movsl
adc
mov
jecxz
dec
std
pop
iret
pop
xor
repnz
cmp
pushf
dec
sub
push
cli
mov
adc
jp
mov
outsb
in
inc
subl
fs
or
leave
int3
test
pop
lahf
out
mov
repnz
mov
push
imul
mov
mov
pop
cmp
add
sarb
and
je,pt
jecxz
or
lods
cmp
cmp
ret
add
mov
adc
inc
mov
add
in
push
insb
cmp
arpl
movsb
loop
mov
adcb
adc
lret
inc
call
mov
jb
dec
movb
mov
inc
andl
mov
sti
ret
mov
test
loopne
sti
jl
and
ret
or
data16
xor
lret
aad
sub
mov
add
lahf
loop
popf
cmpxchg
inc
movsl
popa
mov
inc
dec
inc
cltd
in
push
jae
notl
and
xchg
pop
xor
cmc
out
dec
cmp
sahf
add
fwait
adc
pop
xchg
imul
ror
shll
xlat
adc
fs
mov
cs
andl
push
mov
jb
jnp
push
fnstsw
add
adc
adc
push
pushf
xlat
daa
scas
xor
fisubs
inc
pop
adc
adc
push
aam
jnp
outsb
cmpsl
mov
cmpsb
jnp
cwtl
les
dec
movhps
cmpsl
push
mov
das
scas
stos
sbbb
push
cmp
enter
push
shlb
ret
aaa
lret
shll
filds
inc
pushf
fmull
sbb
jl
xchg
cltd
or
sbb
cmpsb
dec
icebp
sub
nop
xor
cmp
xchg
adc
push
pop
cmp
aaa
cmc
outsb
mov
jne
out
or
inc
xor
es
sti
pusha
or
inc
mov
pushl
fstl
jo
xor
mov
mov
test
inc
add
inc
mov
aam
jne
cmp
sbb
decb
ror
sub
push
push
ljmp
imul
pop
push
mov
xchg
push
cmc
or
fimuls
clc
cmpb
inc
mov
pop
inc
jb
dec
movsb
jg
add
jl
stos
lods
shl
out
orl
jle
jmp
pop
shlb
imul
dec
movsl
pop
mov
mov
data16
push
je
mov
ja
push
out
cmp
mov
rorb
sti
inc
xor
int
dec
scas
test
xlat
aam
fiadds
ljmp
xlat
fwait
das
push
sti
inc
add
scas
jg
pop
push
mov
sbb
jmp
mov
or
pop
add
js
inc
lods
jno
pop
pop
push
lcall
mov
test
in
shr
shrb
loop
stos
int3
jle
shl
jp
mov
data16
mov
icebp
push
pop
data16
stos
inc
cli
pop
stc
pop
popa
mov
push
cmp
xchg
mov
stc
ss
mov
dec
sub
arpl
jae
cmp
enter
sub
cld
popa
cmpsl
cmp
vaddsubps
sbb
push
mov
ret
leave
add
dec
pop
repz
inc
push
jb,pt
dec
addl
sub
rorb
inc
sub
dec
cmc
incb
outsb
arpl
mov
daa
ljmp
mov
fisubrl
arpl
sahf
xchg
mov
stos
sbb
cmpsl
test
sub
mov
xor
js
jbe
xor
push
xchg
and
xor
cmp
pop
inc
ret
mov
mov
ficomps
outsl
add
or
fmuls
push
out
inc
repz
xchg
cmc
scas
dec
adc
insl
dec
lds
jmp
and
notb
sbb
lcall
roll
sti
push
xor
jno
lock
adc
dec
push
xchg
mov
mov
hlt
ja
les
push
and
pop
hlt
sub
push
in
push
loope
iret
popa
or
mov
lret
and
xorb
mov
int
leave
adc
xchg
mov
sub
mov
sub
pop
cld
dec
inc
loopne
aas
addr16
mov
push
movsb
cmp
je
out
xchg
sub
loope
adc
inc
adc
mov
lea
iret
notl
fnstcw
pop
mov
xor
push
jne
mov
and
scas
leave
jmp
or
or
add
dec
clc
dec
xchg
dec
scas
pop
sbb
lret
repz
jns
jae
call
scas
rcrl
inc
mov
nop
movsb
ret
int
adc
pushf
pop
inc
and
sbb
or
mov
jb
in
adc
clc
xor
sbb
daa
xor
xabort
inc
dec
pop
addr16
pop
adc
or
cmp
add
jl
mov
repz
add
loop
out
repnz
sub
cmp
test
push
not
stc
stc
in
push
nop
pusha
mov
pop
jno
ret
push
jb
add
sub
imul
rcll
imul
es
les
ja
mov
fcmovbe
out
insl
jo
ja
sbb
jl
inc
out
add
mov
in
xor
out
loope
cltd
lahf
popa
push
daa
jp
nop
mov
add
je
ljmp
inc
push
xor
mov
jl
push
sbb
mov
sarb
add
jno
insl
loope
or
pop
out
add
xlat
in
mov
rclb
mov
xorb
mov
mov
adc
fnstsw
std
gs
not
mov
loopne
dec
loopne
sub
mov
sub
inc
out
stos
sub
es
mov
out
jmp
mov
bound
cmovb
fnstcw
adc
mov
add
fnstsw
mov
push
mov
dec
in
aad
mov
outsl
push
or
ja
ret
das
loope
outsb
xor
popf
jne
and
mov
fldl
jbe
cwtl
xor
movsb
sbb
je
mov
cmpb
out
xchg
sbb
sbb
movsl
pop
push
jmp
ret
popf
or
mov
and
jle
imul
lahf
and
int
sbb
or
xor
sbb
cmp
mov
and
mov
and
xchg
neg
addr16
sbb
inc
push
inc
pop
sbbl
rcl
cli
jg
xor
pushf
dec
mov
mov
xor
add
mov
outsl
or
popf
pop
sbb
call
mov
fldcw
invd
nop
xor
std
dec
adc
movsl
insb
sahf
or
aaa
cmp
into
inc
sub
inc
jb
sbb
sub
jae
das
test
pop
call
mov
mov
jmp
clc
mov
out
stos
xchg
fnstsw
jbe
daa
add
inc
pop
inc
push
sub
add
arpl
testb
lcall
sbb
sbb
int
and
pop
mov
mov
call
pop
add
sbb
fcos
add
int3
pushf
sbb
lret
repz
pushl
xchg
sahf
popf
sbb
push
arpl
repz
cmp
out
pop
inc
pusha
and
jp
add
rcr
int3
cli
add
mov
scas
sahf
cmp
mul
and
jmp
inc
push
sbb
mov
and
sbb
push
pop
jl
jecxz
sbb
and
xchg
std
cmp
mov
xor
fistl
imul
int
imul
xchg
jmp
out
add
dec
insl
clc
test
sbb
sbbl
dec
sbb
sub
add
decl
or
push
stos
mov
add
addr16
jecxz
daa
out
sub
xor
jp
mov
mov
mov
inc
pop
orb
lds
cmp
inc
movsl
sar
mov
fnstenv
dec
mov
pop
sub
xchg
adc
jle
mov
jge
inc
dec
mov
decl
lock
inc
lock
aaa
mov
sub
dec
lcall
adc
adc
cmpsl
fsubl
repnz
xorb
adc
xor
mov
sbb
xor
xor
aas
pop
ja
push
lcall
cld
jbe
push
push
fs
add
and
das
jne
xchg
mov
add
dec
sub
xor
mov
inc
and
cltd
fs
ror
sahf
insb
xchg
outsb
push
test
int3
mov
adc
roll
pop
mov
std
mov
dec
and
or
dec
xchg
add
sti
pop
pusha
jle
inc
addr16
cmp
or
aam
push
xchg
xchg
xor
push
push
out
or
stos
add
insb
jno
mov
mov
push
mov
jns
push
not
sub
push
xor
lahf
movl
jno
testb
pop
aam
pop
shlb
lcall
lcall
js
je
cmp
xor
rcrl
push
sbb
popa
dec
int3
or
clc
sbb
mov
xchg
daa
xor
pop
cld
frstor
mov
lret
daa
cmpsl
xor
repz
stos
push
inc
mov
out
jle
nop
inc
pusha
daa
repnz
pusha
xchg
cltd
repnz
lcall
repz
mov
cwtl
xchg
and
adc
mov
sbb
inc
lock
lods
and
lds
fdivrl
loop
fildl
dec
pop
neg
test
inc
addr16
loopne
or
fisubl
xor
ret
je
add
nop
ret
div
out
sar
jns
cmpsl
lcall
adc
test
cmovo
pusha
pop
mov
ror
adc
je
hlt
mov
xchg
mov
outsl
jmp
enter
cmpsb
xchg
pop
xchg
inc
cmpb
mov
xchg
stos
add
push
es
test
jae
lcall
jl
nop
mov
test
imul
cltd
or
jno
stos
jb
inc
xchg
mov
cwtl
and
or
xlat
push
fs
fildll
iret
mov
sbb
mov
out
mov
nop
push
test
xchg
call
clc
fbld
dec
xor
sbb
mov
sub
push
mov
cmpsb
icebp
fidivs
pushf
aad
movsl
mov
jg
push
in
jg
repz
and
ds
push
inc
stos
shl
cli
ret
dec
mov
jae
imul
dec
pop
insb
roll
mov
repz
jne
ret
orb
stos
and
in
fs
add
mov
mov
js
rol
adc
fnsave
and
insb
test
addr16
xlat
xor
int3
ret
sbb
or
inc
repz
hlt
jmp
mov
aam
gs
pop
cmp
xchg
sbb
ret
jp
push
dec
pop
sbb
add
outsl
leave
dec
cmp
mov
xchg
shl
shl
mov
mov
mov
xor
shll
or
dec
pop
pop
jb
mov
addr16
pop
gs
sub
roll
pop
pop
mov
call
pushf
cwtl
sub
inc
hlt
lcall
or
adc
sub
and
inc
imul
enter
aad
push
mov
dec
sbb
shlb
je
fyl2x
sub
daa
cli
xchg
movsl
xor
sub
mov
ficompl
addr16
loop
push
or
mov
sub
popf
xchg
ficomps
adc
mov
push
fisubrl
addr16
and
mov
mov
lds
dec
in
out
imul
data16
repz
lcall
push
loopne
push
outsl
mov
xor
js
mov
popf
add
imul
lcall
fidivrs
ss
and
std
stos
xchg
xor
rorb
adc
fwait
mov
jmp
pop
cli
xchg
fcmovnu
sti
mov
cmp
aad
or
out
mov
outsl
add
mov
pop
test
push
sbb
mov
jge
add
mov
add
cmc
test
push
sbb
and
pop
loop
jno
jmp
cmpl
cmpsb
mov
pop
into
out
pop
jbe
fsubs
mov
inc
xchg
lods
mov
ss
bound
stos
lret
and
xchg
dec
xchg
mov
pop
cmc
call
jb
leave
jp
ja
sub
loope
cmpsl
dec
jns
aad
dec
push
jbe
scas
sbb
mov
inc
insl
push
xchg
jno
xlat
dec
out
and
mov
adc
mov
ja
mov
repnz
xchg
mov
mov
dec
adc
sub
pop
jecxz
mov
inc
sahf
nop
loop
loopne
xchg
cmpsl
call
ret
scas
or
xchg
aad
imul
jmp
xchg
pop
pushf
test
xor
push
std
mov
in
pushf
inc
pop
cmp
xchg
aad
std
adc
mov
stos
jl
mov
psubusw
jnp
push
rcrl
pop
loope
rorl
les
cld
dec
mov
insl
dec
mov
icebp
jle
outsl
rcrb
loop
repnz
mov
lods
out
adc
inc
push
cmp
lock
rolb
xor
sub
loop
add
dec
out
add
cltd
aas
lahf
hlt
sbb
test
jle
sbb
cmp
xor
add
ret
xchg
test
jnp
decl
rcrb
fcmovb
lea
stos
inc
lret
popa
fldt
sar
sub
xchg
jmp
mov
incb
sbb
movsl
jnp
add
jnp
jb
int3
outsb
mov
cli
cs
mull
xchg
adc
inc
jb
dec
fdivr
loope
data16
pop
dec
movsl
push
mov
ds
test
push
scas
mov
adc
out
ficoml
into
jg
dec
sub
jbe
mov
sahf
and
add
mov
cmp
pop
adc
aad
insb
outsb
loopne
adc
fs
popl
cmpsb
sub
push
mov
add
in
cltd
ljmp
test
gs
fnstsw
push
xlat
sarb
ret
dec
std
cmp
cmp
stos
sbb
jl
sbb
push
out
and
fidivrs
ljmp
adc
and
sub
das
pop
lret
push
mov
insb
dec
push
cmc
cltd
test
fistpl
outsl
pop
in
push
cmc
jle
sbb
push
shl
fiadds
pop
scas
lret
sub
inc
fbld
and
push
jmp
stos
xchg
mov
sahf
ja
jo
add
pop
gs
call
sub
adc
jno
aas
and
xchg
jecxz
xchg
lahf
std
leave
inc
mov
sbb
mov
xlat
xchg
xor
jno
inc
sub
push
mov
stos
jmp
cmc
lds
mov
lock
loopne
add
xchg
in
jle
iret
rcrl
mov
outsb
aaa
shlb
fcom
or
fsubr
cmpsl
arpl
inc
or
push
pushf
add
mov
mov
inc
cltd
repnz
or
sub
scas
xor
movsb
xchg
jmp
test
in
cmpsl
push
dec
int3
fidivl
repnz
dec
sbb
outsb
dec
xor
insb
ja
xor
or
pop
cmp
push
mov
cs
sbb
push
daa
sbb
dec
test
addr16
sub
inc
jno
xlat
testl
pop
push
iret
sub
insl
ljmp
rolb
mov
dec
insb
dec
negl
iret
sar
push
xchg
jne
xchg
xor
je
fisubrs
iret
mov
enter
aad
jno
add
in
pop
mov
dec
dec
js
or
add
mov
out
pop
cmp
shlb
add
jnp
aam
sbb
push
push
int3
stos
sbb
xor
aaa
push
loop
sbb
subb
push
push
pop
jmp
sub
inc
sbb
xchg
iret
push
jb
lcall
ret
nop
inc
loop
mov
dec
push
jb
stos
push
ja
jmp
pop
cwtl
jno
sbb
pop
movl
sahf
mov
lds
bound
repz
or
or
cltd
mov
or
adc
fiaddl
mov
add
leave
stc
mov
pop
adcl
add
outsl
inc
inc
or
fucomip
rorb
pushf
je
add
xchg
dec
or
inc
cmpsl
jmp
mov
leave
inc
mov
mov
mov
in
sub
lock
ret
inc
dec
or
dec
xlat
mov
push
xor
mov
mov
repnz
mov
add
pop
dec
adc
gs
jl
jmp
fs
xchg
or
loopne
jno
mov
js
scas
sbb
icebp
mov
adc
add
jno
arpl
sbb
ds
cmp
mov
sbb
rol
push
pop
repz
or
mov
repz
sbb
xor
stos
push
out
scas
bound
stos
orl
test
fsubl
adc
mov
xor
and
sub
jle
xchg
js
daa
inc
pop
jl
add
dec
les
dec
ret
jno
mov
xor
rol
shl
xchg
cltd
cmp
jno
outsl
push
jmp
pop
in
in
cli
adc
inc
mov
jns
adc
and
push
jp
jle
stos
jnp
cwtl
ds
movsb
jge
or
out
punpckldq
fiadds
pcmpeqw
scas
inc
jnp
testl
in
mov
int
cmp
test
lods
leave
in
xchg
ret
outsl
cmc
int3
mov
loope
mov
pop
adc
repnz
cs
int3
inc
mov
cli
dec
adc
testl
push
clc
adc
fmull
fs
xor
jp
hlt
stos
shrl
pop
push
jge
pop
push
movsb
nop
loopne
stc
ja
or
aam
aad
jl
pop
clc
inc
cmpl
and
out
cmp
out
aad
cmc
cmp
mov
cmp
jb
dec
pop
sub
into
imul
fmul
inc
dec
xchg
insl
jmp
fdivrp
cwtl
and
xor
clc
jecxz
js
mov
mov
sub
lock
jo
les
add
std
inc
mov
pusha
rdmsr
leave
stos
mov
jnp
iret
repz
int
mov
push
aaa
sub
sub
loope
pusha
aaa
dec
dec
data16
call
push
dec
push
jne
xchg
and
dec
arpl
mov
jmp
lock
pop
jmp
and
jle
add
xchg
js
in
sbbl
jne
adc
sub
test
and
ljmp
adc
sbb
and
sub
test
insl
lea
mov
xchg
mov
push
mov
clc
mov
or
nop
cld
loop
aaa
mov
sub
fstpl
adc
add
aad
cltd
inc
xor
sarb
js
sub
inc
ror
xor
movsb
leave
enter
enter
jg
in
sub
mov
cli
sahf
jae
or
int3
adc
xor
hlt
dec
jl
scas
mov
jae
fnstcw
out
cmp
test
nop
and
mov
ljmp
jg
dec
mov
push
xchg
das
pop
ret
cmp
data16
out
cmc
adc
pop
call
push
xchg
jnp
mov
mov
aad
std
notb
inc
mov
icebp
pusha
in
xchg
sub
lds
mov
iret
ret
out
mov
jle
repnz
and
cmp
cwtl
jns
mov
clc
sub
mov
pusha
ds
fstpt
pop
popa
cs
imul
addr16
mov
xchg
mov
lea
sbb
mov
lcall
mov
jl
cmpsb
jno
mov
and
stos
shll
out
add
sub
pop
inc
cli
mov
inc
xlat
pop
std
test
push
push
mov
pop
fstps
lea
fwait
subb
test
jae
inc
jno
lcall
jecxz
add
addr16
dec
jns
adc
sub
jbe
lods
cmp
xor
popa
ficomps
push
push
out
mov
bound
sub
test
nop
jne
sbb
mov
inc
clc
jae
dec
sbb
mov
mov
out
sub
ja
test
push
dec
out
push
fpatan
pop
cwtl
jb
ja
out
pop
mov
iret
adc
into
mov
lret
notl
mov
div
cli
out
sub
ds
cmp
js
cmp
add
xchg
mov
sbb
xor
mov
cmc
cld
inc
test
add
and
cltd
cld
pop
stc
xchg
lahf
mov
pop
js
nop
jae
inc
and
test
lea
nop
stos
insb
adc
xchg
mov
stos
sub
sbb
jo
repnz
mov
add
push
out
mov
stos
cmp
rolb
push
rorl
addr16
inc
adc
nop
or
lcall
das
jns
rol
es
mov
xorb
les
ret
ds
adc
dec
arpl
adc
adc
stos
mov
sub
clc
rcrl
pop
sahf
jno
xor
pop
or
out
scas
mov
mov
mov
lods
gs
imul
cmp
cli
roll
repz
roll
xchg
xor
mov
stc
subl
aad
icebp
dec
ljmp
or
mov
aas
aaa
vcvtdq2ps
pop
xor
addr16
neg
enter
imul
ficoml
lea
push
sbb
fmulp
mov
aas
jmp
scas
icebp
xchg
xchg
lods
movb
adc
add
out
jmp
jmp
incb
shll
mov
pushf
lcall
mov
std
ss
sbb
bnd
fdivrp
lahf
and
cmp
mov
pusha
push
lods
and
lds
xchg
xchg
subb
sbb
xor
jae
popw
dec
jae
inc
inc
or
add
xchg
cwtl
cli
shll
jecxz
ret
dec
cmp
or
ficoms
jnp
ss
or
repz
clc
mov
std
cmp
cmp
fistl
push
aas
push
dec
jp
pop
mov
jb
jg
mov
vprotd
sbb
aam
sbb
push
loopne
cltd
dec
jge
fldl2t
push
push
mov
cmp
idivb
lds
popw
jmp
mov
pop
pushf
adc
xchg
xchg
push
scas
das
xorb
mov
stos
out
jb
mov
insl
rorl
out
movsl
sub
cmp
adc
mov
popf
add
and
std
and
stos
shl
adc
xor
mov
lds
call
rol
leave
push
shll
scas
xchg
aad
insl
mov
sbb
loope
leave
out
mov
fistps
pop
adc
daa
mov
xor
into
xchg
fs
lret
jmp
pusha
cmpsl
xchg
adcb
aad
cmpsl
xchg
mov
incb
cs
adc
lret
std
mov
dec
sub
add
addr16
cltd
cmp
cmp
sbb
fsubrl
loope
outsl
sahf
adc
add
sbb
jae
addb
mov
mov
ret
mov
cld
push
xor
cmpsb
lods
fdivl
cmp
sbb
inc
mov
mov
in
inc
popf
in
inc
enter
stos
inc
xor
test
sub
cmp
xchg
pop
fiaddl
jno
repz
push
dec
mov
cmpsl
out
xchg
insl
sti
adc
lret
mov
cmp
xchg
out
push
adc
mov
leave
inc
or
pop
lock
scas
das
pop
ss
sub
out
cmp
xchg
popa
adc
and
int3
out
pushf
fdiv
pop
loopne
sbb
dec
adc
sub
loope
inc
sarl
js
das
mov
inc
leave
sahf
mov
adc
rcrb
setbe
mov
outsb
add
add
and
xor
mov
push
iret
xor
sbb
sbb
sub
movsb
fbstp
fldenv
mov
divl
es
repz
mov
jge
sbb
cwtl
das
mov
rorl
lar
mov
mov
pop
popa
cmpsl
and
sbb
fsubr
mov
and
mov
shrb
clc
sbb
test
push
mov
inc
xor
pop
jle
out
out
repnz
or
imul
cmp
movsb
data16
aaa
xchg
fs
add
jbe
call
dec
mov
mov
loope
adc
sub
arpl
jp
outsl
xchg
mov
mov
xor
sub
cmpsl
mov
sbb
mov
in
mov
addr16
dec
out
jno
das
xchg
gs
sub
pusha
out
and
imul
inc
out
popa
push
movsl
fs
into
out
leave
inc
cmp
imul
mov
or
popa
inc
mov
outsl
and
mov
insb
clc
xchg
push
xchg
loopne
loope
push
mov
or
faddl
das
mov
pop
cltd
xchg
xor
insb
sub
push
arpl
or
sbb
fdiv
les
test
pushf
push
inc
mov
ret
stos
pop
rcl
dec
in
dec
adc
int
sbb
cli
or
scas
nopl
sbb
jge
jg
mov
insb
bound
in
jnp
imul
pusha
lcall
pop
cltd
sbb
cli
mov
jg
inc
jb
fisubrs
dec
xchg
inc
inc
mov
cmpsb
xor
std
push
cs
adc
inc
lds
lret
jns
or
punpckhwd
fisubrs
sar
cmp
sti
pusha
jno
push
roll
je
push
out
add
leave
int3
mov
pop
pop
loopne
mov
mov
and
mov
jb
sbb
push
movsb
inc
pop
sbb
jp
adc
scas
imul
lods
mov
cmp
xchg
aam
fmull
cmc
pop
sarl
jae
mov
jmp
add
enter
sarb
lahf
hlt
jnp
outsl
sbb
int
icebp
lahf
dec
faddl
dec
fabs
push
mov
pop
sahf
jge
pop
mov
sub
out
or
mov
insl
lea
inc
and
out
sbb
pushl
jl
sub
xor
scas
pushf
scas
es
inc
push
pop
lods
adc
daa
sarl
mov
subl
mov
test
pop
push
push
xchg
hlt
sbb
push
iret
and
mov
mov
iret
lods
sbb
or
jno
popa
lahf
sbb
sub
sbb
sbb
test
cld
add
jmp
aas
movsb
sbb
imul
mov
clc
fsts
ret
out
mov
mov
lds
pop
jle
fs
add
xchg
sbb
cmp
adc
fldl
aaa
jl
pop
iret
dec
outsb
popa
aaa
sub
ljmp
sbb
push
push
andb
xor
cmp
cmp
lcall
movsb
dec
cmc
adcb
push
cmpsl
fwait
pop
clc
jnp
mov
popa
push
xchg
dec
pop
insb
adc
jl
jl
and
mov
lods
imul
loope
bound
cltd
out
inc
cmpsb
mov
lea
repz
stos
sub
inc
int
mov
mov
cmpl
jnp
loope
pop
ds
mov
je
adc
or
jmp
in
add
or
inc
cmp
jno
mov
and
mov
hlt
mov
leave
ret
jp
daa
cli
jp
inc
loopne
push
js
add
aaa
scas
outsb
pop
push
leave
jle
lahf
add
fs
mov
jge
jbe
push
aaa
stc
add
clc
lods
xor
mov
jbe
xchg
outsl
clc
xor
ja
ret
cmp
adc
xchg
icebp
adc
cmp
adc
inc
push
mov
scas
push
dec
out
lods
sbb
test
mov
clc
push
mov
sbb
push
nop
push
xchg
or
test
sbb
dec
xor
cmp
mov
movsb
cmp
sub
mov
scas
jg
push
in
mov
cmp
pop
shrb
add
fwait
inc
xor
add
or
add
ficoms
mov
fldt
jb
ss
cld
mov
int3
shlb
dec
pop
xchg
cmpsl
mov
jnp
and
sbb
int3
ss
jb
lcall
xchg
jmp
jo
data16
shl
dec
push
insb
lds
out
cmpsb
shl
sbb
outsl
outsl
in
inc
mov
xchg
daa
xor
ja
xchg
test
fmulp
leave
loopne
fists
sub
push
into
adc
pop
jns
add
dec
test
outsl
bound
ja
mov
js
mov
dec
adc
sbb
jb
shll
xor
jl
lret
outsb
inc
mov
xchg
sbb
mov
subl
jg
in
push
mov
in
or
inc
xchg
rorb
fdivs
repnz
and
jp
dec
inc
ja
push
ud1
stos
pop
rcll
sets
push
add
xchg
cs
sub
sbb
div
adc
dec
rcrb
imul
xor
fldcw
inc
sbb
xchg
aas
jp
into
in
js
pop
rcrl
icebp
pop
sub
int3
mov
sub
dec
push
mov
xor
dec
decb
cmpsb
dec
aam
dec
cli
cmpb
mov
mov
xlat
decb
sub
mov
ja
dec
ja
dec
icebp
enter
push
scas
and
mov
mov
mov
add
pop
enter
or
sbb
xlat
jg
xchg
outsl
rcll
xchg
mov
fcmove
out
sbb
pop
out
insl
and
xchg
std
and
leave
lds
mov
lahf
iret
hlt
inc
dec
pop
mov
cltd
mov
bound
sub
movsl
outsl
pop
xchg
sbb
fldz
jg
into
ja
mov
aaa
sarl
adc
cmpsl
xor
inc
sbb
call
hlt
xor
fcompl
push
and
int3
mov
push
mov
pop
ret
int
rcrb
push
popa
mov
mov
jg
push
jne
pop
mov
out
std
rcll
jge
lods
jbe
sbb
mov
addr16
fidivs
arpl
cmpsb
icebp
mov
insb
dec
ljmp
pushl
js
lret
or
enter
aas
das
mov
outsl
dec
sbb
jb
add
into
add
cs
dec
call
jge
dec
mov
pop
lods
add
cmp
cmp
pop
and
cli
inc
stos
in
clc
add
sbb
xchg
push
lds
push
sub
gs
sahf
xchg
cmp
movsw
ja
mov
fsin
outsl
cmp
movsb
push
in
jl
addr16
es
push
and
pop
xchg
xchg
cmc
and
sub
push
sarb
mov
lcall
mov
adc
dec
and
repnz
into
mov
mov
inc
rclb
out
dec
inc
push
jnp
pushf
shlb
ds
inc
in
test
dec
adc
adc
out
cmpsb
lahf
in
xchg
and
std
lcall
daa
xchg
xchg
fimuls
in
cmp
mov
xor
ljmp
dec
cs
xor
and
loop
xor
mov
iret
or
ret
fildll
addr16
nop
xchg
pop
fdivrs
mov
xlat
sub
dec
fucomi
cmpsl
mov
daa
mov
or
and
clc
pushl
push
mov
mov
cmp
lret
out
fs
jae
adc
fldt
xchg
daa
fcomip
jmp
add
cmp
mov
aas
icebp
fnstenv
push
inc
sbb
add
shl
cmp
jbe
sub
movsb
insl
xchg
stc
dec
inc
test
mov
pop
dec
outsb
add
mov
sbb
add
mulb
sti
test
push
outsb
iret
dec
mov
sub
out
xor
mov
pop
fists
popf
fidivs
idivl
sbb
jl
jbe
lds
jg
nop
sahf
jmp
fimull
sub
mov
inc
and
jb
adc
push
test
imul
shlb
fwait
inc
mov
stc
xchg
cmp
insl
xor
shlb
push
jmp
cmpsb
mov
xchg
inc
das
out
dec
addr16
jno
inc
stc
sub
addl
push
jae
test
push
add
cld
sahf
jne
xor
mov
inc
push
mov
pop
xchg
mov
cli
sub
pop
repnz
test
and
adc
inc
add
cmp
fmuls
inc
mov
mov
push
adc
scas
mov
popl
aaa
xchg
test
gs
popa
mov
mov
cmp
daa
inc
and
dec
es
gs
out
push
out
mov
lods
test
test
or
sub
add
push
js
loope
ljmp
xor
mov
cmc
and
push
shl
mulb
enter
inc
jmp
pop
sbb
inc
jne
pop
jbe
sbb
cmp
add
and
rcll
adc
dec
shrl
imul
bound
nop
add
jmp
cmp
lret
imull
pop
mov
and
inc
mov
jnp
stos
and
ret
loope
add
jp
pop
sub
int
imul
inc
sub
pop
pop
and
sub
das
pop
lods
mov
mov
cli
lret
std
mov
adc
mov
negb
sti
inc
adc
mov
cmp
movsl
test
es
xchg
out
leave
ret
pop
lcall
mov
out
imul
sbb
or
push
loop
jbe
pop
fnstcw
pop
sbb
nop
cmp
sbb
mov
sbb
outsl
push
in
xchg
cwtl
fisubrs
xorl
add
icebp
shrl
and
xor
shll
mov
xor
inc
jb
loopne
xchg
xor
or
mov
cld
mov
sub
testl
xchg
dec
movsl
mov
fcomps
and
inc
sub
jns
mov
stos
shl
mov
push
icebp
inc
cmp
nop
cmpsl
or
lahf
scas
and
pushf
xchg
dec
fwait
popf
cmc
and
sti
insl
outsb
jne
lods
push
sbb
scas
mov
jle
xchg
lock
xchg
fwait
or
sahf
or
jne
shrl
js
mov
loope
add
rol
enter
add
or
sub
outsb
out
mov
out
loop
std
dec
aaa
mov
xor
add
jg
clc
or
imul
jae
sbb
bound
mov
js
out
in
xchg
pop
mov
and
adc
xor
int
decb
cmp
aaa
ret
mov
insb
jbe
movsb
les
jp
mov
stos
add
scas
push
sub
imul
xchg
jl
stos
stos
loop
push
movsb
loop
insl
test
je
pop
mov
fidivrl
shlb
fildl
mov
daa
mov
outsl
mov
iret
clc
fs
rcr
iret
sbb
add
pop
lods
data16
pushf
inc
mov
inc
pop
subb
stos
cmp
xchg
jecxz,pn
push
imul
loope
and
pop
ss
mov
icebp
jb
es
lret
fsts
ss
ficoms
adc
inc
pushf
adc
icebp
dec
mov
mov
inc
into
test
jle
push
dec
clc
lcall
rcr
xchg
repz
pusha
jmp
outsb
stos
in
cltd
add
pop
cmp
xlat
sub
push
aas
xchg
outsb
mov
rorl
and
inc
push
les
sub
das
rcrb
movsl
outsl
sbb
lock
or
add
mov
dec
sub
or
push
loope
xchg
pop
call
sbb
add
inc
mov
movsb
xchg
adcl
push
lds
jne
xlat
dec
sarl
repz
psrlq
iret
and
or
insl
fisubrs
add
test
jg
popw
cmp
addr16
jecxz
jge
cmp
js
cmp
mov
mov
mov
jl
push
dec
jno
sahf
mov
mov
std
insl
add
test
jne
mov
jns
mov
cmc
dec
cltd
repz
mov
pop
pop
cmc
iret
ds
fdiv
cmp
jae
add
ljmp
push
inc
jb
and
sbb
inc
sbb
ja
loop
mov
mov
pop
cmpsl
jo
lock
sub
jbe
sbb
or
shr
sbb
fdivl
daa
inc
and
jg
mov
out
sub
mov
mov
andb
sbb
hlt
aad
or
lret
in
adcb
xchg
iret
cmp
je
sub
fildll
out
dec
mov
das
out
sbb
jne
sub
xchg
xchg
ljmp
xchg
bound
dec
cld
es
int
arpl
adc
test
push
xchg
lock
call
mov
sub
dec
ss
mov
lea
loope
out
in
cmp
jne
add
xchg
shlb
or
iret
adc
mov
add
inc
mov
jbe
adc
scas
movl
fcompl
aam
data16
arpl
out
pop
bound
je,pn
call
push
lods
loope
jae
dec
jbe
mov
lods
inc
lea
mov
mov
stos
mov
dec
mov
data16
loope
scas
fdivs
push
aam
mulb
xor
jbe
cmp
xchg
mov
test
rcll
lret
les
mov
inc
push
pop
gs
insl
xor
stos
sbb
das
mov
mov
xor
sub
sub
ror
mov
and
add
adc
out
push
jnp
stos
push
imull
add
mov
test
lods
cmp
push
adc
mov
int3
outsb
fs
stos
and
test
sub
pop
cmp
mov
jl
pop
and
jno
fists
mov
jge
pop
pop
cmc
enter
jecxz
jge
into
add
stc
inc
das
xor
mov
cmp
xchg
inc
or
cmp
movsl
dec
gs
in
sarl
or
bound
fbstp
adc
dec
pop
cmp
mov
shl
lods
xor
jp
popa
mov
scas
sbb
xor
or
add
xchg
jl
sbbl
adc
mov
xchg
jne
daa
sub
xchg
jg
mov
push
loop
push
push
lahf
push
incl
cmp
mov
pusha
inc
pop
das
aaa
push
adc
into
xchg
pop
fmull
repnz
adc
and
add
cmp
push
jge
adcb
ss
mov
mov
inc
dec
xchg
mov
cwtl
cmc
dec
and
sbb
pop
lods
shrb
dec
lds
push
hlt
or
push
leave
xchg
dec
ficomps
rcrb
pop
mov
ss
test
lret
dec
loopne
fsubrl
test
pushf
aad
push
and
or
xchg
cmpsl
push
in
imul
nop
push
in
dec
mov
adc
mov
daa
mov
das
gs
rcl
cmpsl
xor
push
pop
adc
movsl
xchg
fisubrl
rorl
adc
xor
sti
and
ds
lcall
punpckhbw
int
xor
pop
cmp
fnop
repnz
repnz
mov
movsl
rcrb
sbb
orb
add
out
in
repnz
jecxz
dec
notrack
push
addr16
loop
movb
fsincos
pop
daa
add
xchg
sahf
mov
dec
adc
das
jb
mov
jecxz
insb
dec
popf
xchg
sub
inc
push
cmp
xchg
xor
clc
ret
pop
push
jnp
mov
popf
push
pop
xor
fisttpll
dec
dec
mov
sahf
xor
sbb
sarl
subl
bound
clc
mov
into
insb
outsl
stos
mov
jns
mov
fildl
jb
dec
jo,pn
mov
dec
data16
xchg
ja
jne
pop
fisubl
mov
inc
pop
fstps
inc
jae
jne
push
dec
mov
aaa
dec
jecxz
inc
xchg
mov
jge
testl
and
dec
jns
sub
rcrl
ljmp
lea
mov
fwait
std
test
pop
sbb
pop
pusha
push
cmp
xchg
pop
shlb
imul
cmp
inc
or
dec
popl
sbb
test
xchg
xor
xchg
bound
lahf
push
pop
in
cmp
adcl
addr16
mov
mov
mov
or
dec
fbld
movsb
or
adc
jg
out
cs
jg
ljmp
jmp
dec
mov
imul
mov
ret
pop
insb
sub
jnp
leave
mov
lea
lds
rolb
scas
into
jmp
loop
cmp
and
out
mov
ljmp
mov
jo
dec
leave
or
enter
aaa
push
lea
dec
repz
xchg
mov
into
xor
daa
outsl
dec
pop
dec
lret
out
imul
sub
repz
scas
jne
sub
mov
xor
notb
lret
push
roll
mov
fs
or
mov
pop
lahf
sub
mov
pop
or
jmp
popa
std
dec
negl
aam
outsl
sahf
loopne
lret
cwtl
nop
jbe
sbb
pushf
lods
jnp
mov
xchg
insl
movsl
push
int3
sub
jne
sbb
lods
adc
nop
cmp
imul
test
xchg
inc
mov
cli
andl
and
pop
push
xchg
jmp
jb
adc
mov
bound
popf
mov
incl
push
shlb
mov
test
mov
movsl
iret
and
pop
pop
imul
cmp
orl
lods
bound
or
inc
pop
xchg
ffreep
xchg
cmpsb
movsb
jmp
mov
das
jnp
addr16
ja
pushf
loop
sbb
jno
sahf
jge
add
sti
fcompl
mov
pop
or
or
fcmovne
sbb
inc
je
addr16
mov
aas
test
shrb
movsl
pop
and
popa
mov
ja
daa
cmp
stc
inc
cmp
dec
lock
in
in
add
xchg
or
rcll
ds
jge
cmp
mov
push
movsb
xor
inc
or
arpl
icebp
xchg
popa
xor
push
out
sbb
mov
sub
ljmp
dec
cmp
jge
outsb
iret
sub
pop
mov
hlt
js
mov
add
loop
insl
scas
pop
jle
jae
mov
mov
pop
add
mov
imull
mov
lods
pop
lret
push
sti
sbb
jns
push
sbb
sarl
in
test
rolb
xor
andl
jg
and
stos
dec
xchg
and
jecxz
scas
aad
inc
js
mov
stos
test
cmp
insb
add
adc
je
jae
fucomp
xchg
sti
inc
popa
int3
lret
adc
je
lret
inc
in
lret
sub
sbb
and
into
aad
popf
mov
addb
cmpsl
call
fwait
insl
cmc
pop
sbb
adc
mov
leave
daa
mov
xlat
dec
imul
lahf
sahf
dec
aam
and
dec
call
xchg
fldl
aam
repnz
xor
lods
xlat
fcoms
mov
in
xchg
mov
cmpsl
mov
sub
insl
fwait
and
out
inc
imul
ror
push
xor
mov
test
loop
push
sti
xchg
lret
or
cli
sub
stos
orb
sub
mulb
addr16
sub
outsb
dec
call
imul
mov
shll
inc
scas
or
mov
jo
jl
jbe
pop
iret
jnp
fistpl
in
scas
mov
add
sbb
js
rcrb
mov
aad
dec
ficomps
dec
push
adc
mov
hlt
jp
push
push
leave
fildll
pushf
jo
mov
sub
out
dec
inc
aad
pop
lea
jmp
stos
int3
jg
mov
out
jge
fsubrs
mov
dec
les
fldl
mov
je
inc
push
mov
cmp
loope
ja
xor
mov
jno
xor
sub
shlb
cwtl
fistl
lods
dec
out
repnz
cmpsb
dec
sub
addr16
dec
popf
test
or
cmp
mov
inc
inc
lret
cmp
jg
jnp
push
mov
xchg
repz
push
orl
test
cld
pusha
jmp
jne
lcall
or
pop
cmp
cmp
lods
xchg
add
xor
aad
cmc
cs
dec
in
lret
jo
test
jg
push
subl
mov
pop
ds
inc
mov
push
mov
or
data16
sbb
std
test
lods
xor
push
sarl
and
inc
out
dec
add
shrb
rorl
jmp
cltd
leave
je
shl
mov
mov
loope
pop
rcrl
ret
sbb
sub
jbe
adc
inc
jns
repz
push
sub
bound
xor
or
mov
push
pop
aam
xchg
fists
jle
adc
int3
push
ds
xor
adc
insl
fldt
scas
and
xchg
je
dec
negl
dec
lret
xchg
cmpl
ljmp
or
movsb
sti
cmp
cmpsb
xchg
popf
sbb
mov
pop
ja
stos
add
outsb
jns
mov
push
sbbb
dec
dec
lea
scas
adc
adcb
dec
cmp
jmp
jmp
daa
add
mov
jno
ror
add
cmp
jl
or
push
xor
adc
leave
fnstenv
add
pushf
jnp
cmpsl
mov
in
fisubl
rorb
mov
cmp
and
mov
push
or
out
fildl
popa
xor
rorl
pop
iret
aam
fstpt
test
js
jb
cmp
sub
sub
test
jmp
mov
inc
ljmp
imul
mov
pop
cmp
pop
movsb
pushf
or
sbb
xchg
mov
mov
loope
mov
sub
gs
xor
push
fcom
jnp
mov
pop
mov
stc
cwtl
ds
or
xchg
dec
outsb
push
imul
ds
xchg
scas
pop
or
aam
and
sub
std
xchg
ja
or
xchg
cs
fs
jp
or
pop
mov
dec
or
test
ljmp
in
mov
xchg
mov
stc
cmp
mov
int3
xchg
mov
pop
mov
pop
lret
push
sbb
out
lds
jecxz
xchg
mov
xchg
jg
js
jp
or
mov
pop
and
in
int3
cmp
sub
lcall
dec
add
mov
push
pop
nop
add
je
cmpsb
mov
mov
push
jg
fisubrs
sbb
cmpsl
or
dec
cmc
mulb
sub
out
pusha
inc
clc
mov
jno
push
cltd
es
push
test
jnp
lea
cmc
cld
jnp
mov
ds
sbb
aad
jbe
mov
aas
sub
sti
or
pop
shlb
mov
and
push
lods
jae
push
ljmp
mov
movsb
sti
jmp
inc
jmp
push
push
adc
xchg
fmul
push
xor
mov
adc
push
jo
repnz
adc
push
adc
xor
cwtl
lret
orb
push
int
cwtl
movsb
jmp
rclb
sub
test
icebp
pop
sub
mov
das
jnp
por
neg
mov
imul
mov
and
rorb
and
incl
fistpll
inc
pop
xchg
push
ficoml
xchg
cli
adc
jo
stos
and
push
in
lret
fadd
fcmovnbe
les
out
call
mov
addr16
test
add
rol
cmp
andb
jl
or
mov
inc
mov
sub
sbb
sub
mov
callw
jl
and
sbb
adcb
iret
push
call
xchg
inc
cmpl
lcall
shll
mov
push
sub
mov
cwtl
adc
or
fsubrl
loope
xchg
jmp
mov
mov
cltd
mov
std
cmp
fcomps
push
xchg
data16
fildl
inc
mov
inc
mov
xor
inc
int3
mov
je
inc
leave
jp
adc
sbb
xchg
jmp
or
mov
mov
imul
fwait
jbe
mov
add
mov
mov
cmp
testb
stc
cmc
mov
fwait
movsb
ficoms
jne
mov
ss
test
call
jg
mov
xchg
rorl
or
or
in
xchg
aaa
roll
mov
sbb
inc
cmp
lcall
add
loope
add
sarb
xor
add
push
pushf
je
and
cs
push
xchg
int
xor
mov
xor
cmc
les
mov
mov
xor
into
mov
mov
sbb
or
cmc
inc
sub
jbe
cwtl
imul
mov
lahf
and
xor
popf
and
test
dec
pop
out
xor
bound
cwtl
pop
out
mov
and
mov
jg
mov
fidivs
mov
call
add
fs
dec
insl
add
add
adc
mov
dec
fstl
mov
cmpb
jo
repnz
mov
pop
jae
add
push
xor
fs
pop
lret
inc
sti
movsb
mov
dec
stos
lcall
dec
pop
sbb
xor
sar
mov
sub
js
out
and
pop
cmpsl
cmp
sbb
sbb
jno,pt
xor
xor
test
andl
sarb
js
and
sbb
shr
mov
stc
add
and
push
insl
push
daa
xor
cmp
mov
orb
lds
jae
jns
sbb
fsubrl
outsb
adc
aad
mov
test
out
xchg
fs
mov
lcall
fidivs
dec
mov
leave
stos
mov
push
mov
pop
and
dec
out
inc
sbb
ljmp
imul
pop
jecxz
iret
dec
mov
jg
gs
xlat
pop
cli
leave
mov
hlt
ret
pushf
add
sbb
lahf
cmp
mov
in
mov
adc
mov
sub
xchg
dec
dec
and
lock
cmpsb
call
push
inc
test
sub
mov
jnp
in
popl
jb
mov
aas
add
cmc
insb
sti
scas
gs
cmp
mov
gs
and
pop
in
xchg
xchg
test
outsb
jo
lahf
icebp
in
out
cmp
rol
adc
or
scas
jecxz
and
test
out
mov
sub
mov
adcb
xchg
jb
or
and
repnz
pop
jp
xor
std
aaa
in
stc
pop
mov
mov
and
sbb
rorb
in
pop
cmp
mov
arpl
nop
jnp
fs
loopne
movsb
inc
int
mov
scas
fidivl
ret
adc
pusha
jl
sbb
cmp
mov
and
xor
sahf
sbb
not
xchg
push
dec
adc
or
rcrb
sbb
lea
adc
sub
andb
mov
je
sub
xlat
adc
mov
pop
push
inc
and
jno
bound
adc
je
decl
dec
or
jno
fisttpll
or
mov
clc
sarb
movsb
sbb
out
mov
jns
add
jl
shlb
in
scas
pop
imul
dec
imulb
shl
fs
sbb
enter
or
mov
ret
cli
fcmovnbe
pop
mov
sub
push
fsub
loopne
mov
mov
sbb
xor
sub
sub
dec
mov
repz
inc
lods
mov
mov
push
aam
sbb
ret
inc
faddl
mov
mov
lods
sbb
jbe
out
stos
push
inc
imul
aas
sbb
push
or
push
pop
sbb
xchg
and
cmpb
lcall
sub
call
ljmp
jb
arpl
xor
cwtl
das
cmpsl
hlt
fcompl
imul
mov
mov
fisubs
mov
xor
adcb
mov
outsb
adc
gs
mov
mov
stos
lea
or
pop
add
pop
mov
jae
pop
popf
shr
push
mov
addb
jp
mov
std
movsb
cmp
sub
sub
and
and
dec
aam
pop
ficomps
inc
fsub
cmp
movsl
mov
cmpsb
roll
mov
cli
push
xchg
aas
sar
aam
adc
leave
popf
inc
mov
fnsave
mov
dec
fs
jle
iret
and
mov
fsubrs
cmpsl
bound
xor
int3
mov
adc
lds
lahf
inc
ds
popa
and
and
dec
jmp
sbb
inc
mov
dec
mov
mov
sarb
jmp
pop
cmp
push
mov
sbb
pop
push
push
sbb
add
jo
int3
loopne
call
mov
int
inc
pop
mov
xor
ret
xchg
sub
and
sbb
lea
imull
pop
or
cwtl
xlat
into
out
sbb
xchg
inc
mov
xlat
mov
scas
mov
jge
push
add
xchg
jae
add
pop
mov
fmulp
pop
xor
add
jmp
pop
cmp
lds
cmp
icebp
outsl
dec
lcall
test
test
sbb
pop
sbbl
inc
sbb
pop
dec
jle
jp
mov
leave
test
in
and
xchg
inc
xchg
dec
pop
filds
push
sbb
and
xor
sub
or
adc
push
daa
jecxz
imul
add
icebp
mov
jmp
hlt
mov
sbb
jle
push
dec
nop
jne
mov
lock
icebp
xor
add
push
add
lcall
or
mov
in
imul
test
push
jp
push
sub
or
aad
les
jmp
and
int
and
xchg
leave
gs
mov
sub
mov
and
pusha
push
push
mov
cs
iret
inc
xlat
pop
mov
hlt
or
push
push
jecxz
sti
pop
add
push
pop
subb
stos
and
or
ret
sbb
test
add
mov
lret
sbb
or
scas
adc
cmp
pop
orb
cmpsl
imul
pop
out
cmc
fiadds
pop
jb
leave
or
inc
mov
and
out
xchg
loopne
ret
lahf
push
insl
pop
sbbl
cs
ds
fmuls
mov
or
add
xchg
lret
jp
popa
divb
insl
fbstp
jae
push
jbe
jne
mov
mov
or
and
mov
cltd
inc
jne
popf
loopne
out
jl
inc
pop
sbb
sbb
les
pop
pop
push
enter
mov
inc
inc
ds
or
push
mov
pop
cmp
scas
jge
stos
add
mov
out
sarl
xchg
dec
in
test
je
mov
inc
mov
cmp
outsb
push
pusha
xorb
sbb
cmc
stos
jo
add
call
daa
mov
imul
add
imul
pop
push
jle
pop
addr16
inc
push
sbb
popf
rol
mov
test
out
mov
push
pop
nop
adc
ss
stos
adc
mov
mov
fildl
sbb
in
jno
fs
xchg
test
pop
push
sub
xor
mov
add
mov
rcl
lahf
ljmp
jg
push
std
inc
arpl
gs
dec
clc
fsubrl
out
int
pop
pop
inc
jp
and
xchg
jge
mov
rclb
mov
js
mov
xor
mov
lods
dec
xchg
cmpsl
push
imul
lods
sbb
fimuls
add
push
in
adc
insl
pop
mov
pop
or
sub
cmpl
addl
jp
add
add
aaa
rcrl
sar
cld
push
arpl
and
fdivp
repnz
adc
in
cmpsb
mov
sbb
sahf
adc
je
cltd
mov
push
xor
push
std
mov
inc
adc
ja
call
xlat
sti
or
test
sbbl
out
lock
mov
dec
aaa
push
imul
ror
mov
push
and
sbb
push
xor
mov
jbe
sub
mov
arpl
out
push
jns
adc
cld
stos
leave
in
gs
dec
pop
mov
andb
jnp
pop
push
fadd
sbb
iret
xchg
js
mov
dec
pop
xchg
jae
iret
mov
xchg
cli
stc
add
mov
cmp
jecxz
scas
xchg
aaa
stos
cmp
and
xchg
mov
je
push
add
jbe
enter
cs
inc
mov
dec
sbb
fstpt
cmpsl
add
add
in
scas
push
gs
into
movl
scas
int3
add
inc
lods
lahf
lock
clc
daa
jl
divb
xchg
jo
ret
inc
inc
test
adc
inc
inc
cmp
int3
shll
insb
mov
ss
or
mov
jmp
sbb
mov
sbb
aaa
flds
xor
mov
push
mov
push
inc
hlt
xor
out
cld
nop
int3
cmp
nopl
mov
push
loope
and
and
xchg
xor
mov
push
test
mov
mov
and
pop
cmp
and
mov
daa
mov
clc
add
mov
popa
test
dec
fmull
stos
int3
push
aad
hlt
test
mov
pop
dec
addr16
inc
adc
ljmp
mov
les
loopne
cmp
rclb
jge
mov
fwait
xor
sbb
add
outsl
test
pop
lods
mov
icebp
cli
mov
ljmp
aas
insb
loope
jnp
jns
pushf
mov
das
or
xor
push
adc
xchg
stc
in
nop
out
xchg
mov
push
adc
out
inc
inc
add
jp
pop
repz
ljmp
cmp
hlt
xlat
mov
cwtl
enter
stos
in
cmc
xchg
scas
fcomps
push
enter
xchg
loop
and
dec
hlt
xlat
lds
xchg
ret
cmp
xor
imul
out
addb
outsl
dec
adc
cld
jmp
out
cld
mov
mov
jge
dec
lret
js
push
stc
jne
or
inc
imul
xor
lock
cld
push
push
cli
ss
into
add
dec
cmp
and
fdivrs
js
push
out
mov
pop
mov
gs
cmp
push
mov
xorl
push
sbb
sub
push
mov
shrl
cmp
test
xchg
dec
mov
jb
xor
fwait
hlt
xchg
cmp
sbb
test
push
je
movsl
sub
and
in
pop
sbb
stos
mov
int
dec
cmp
push
stos
inc
test
rcrb
sti
iret
jmp
insl
xchg
and
lods
out
lret
xchg
mov
push
icebp
mov
test
xor
insb
jge
frstor
jecxz
xchg
jmp
je
and
sti
lahf
into
mov
adc
repz
stos
inc
inc
push
mov
fnstcw
xchg
adc
sbb
lahf
pop
or
mov
and
fistl
and
rcrb
xchg
push
xlat
addr16
repnz
mov
aad
subl
dec
lcall
cmp
dec
add
sub
lcall
mov
inc
je
add
loopne
xchg
repnz
or
mov
adc
mov
imul
fsubl
daa
or
loop
movsb
insb
mov
adc
fidivs
js
aad
adc
xchg
mov
das
cmp
mov
xor
gs
or
rorb
loopne
popl
jmp
jecxz
dec
or
in
movsl
fldl
cmp
sbb
popa
shl
fstpl
cs
lcall
push
sbb
int3
data16
popa
fdiv
dec
outsl
lcall
mov
orb
outsl
mov
jp
das
outsl
aaa
sbb
push
ja
in
daa
cmpsl
movsb
cs
test
aaa
xor
mov
sub
outsb
nop
scas
sub
xorl
mov
insb
adc
vphsubbw
mov
sbb
push
mov
inc
test
mov
jmp
mov
sbb
in
aam
inc
jle
rcr
lods
xchg
data16
dec
das
cmp
cli
icebp
jmp
or
push
xor
test
xchg
pop
cmp
xor
mov
xchg
sub
mov
inc
pop
enter
aas
es
les
fwait
adc
cld
or
lahf
lds
adc
xor
repnz
pop
push
test
icebp
jns
stc
bnd
insl
es
shll
lret
mov
cli
pop
xchg
sub
adc
and
inc
lea
pop
dec
das
dec
fwait
mov
and
push
add
cmpsb
inc
out
jo
ja
test
sbb
jbe
push
add
sbb
pop
add
inc
outsl
or
arpl
cmp
add
sarl
mov
lea
adc
lret
stos
xchg
mov
shlb
inc
dec
push
aaa
xchg
cmc
xchg
mov
sub
mov
mov
aas
addr16
and
add
lahf
mov
sub
fcmove
sbb
in
lods
inc
add
subl
pop
popa
push
stos
xor
pop
test
gs
test
inc
ljmp
daa
xchg
fimull
xchg
adc
inc
inc
mov
lds
dec
lret
scas
adc
cs
gs
mov
popa
es
jo
push
or
out
fwait
es
and
std
in
sub
or
cmp
dec
stos
aam
add
sub
add
xor
aaa
arpl
pop
test
and
and
and
sbb
xchg
sbb
in
loope
dec
xor
mov
in
test
sbb
das
push
xor
sti
inc
repz
das
aam
pop
adc
test
ljmp
xlat
shll
shr
sub
int
xor
cmpsl
mov
fwait
shlb
inc
gs
and
mov
sbb
xchg
cmc
mov
xchg
push
cltd
lahf
cs
dec
fsubs
xchg
ror
mov
inc
adc
push
mov
or
aad
icebp
mov
cltd
fs
js
xor
icebp
das
fmulp
into
jmp
add
lahf
das
data16
loopne
mov
pop
adc
jge
sub
call
or
sahf
pop
inc
rclb
sarb
movsb
jge
scas
mov
or
xchg
bnd
in
cmp
fildll
push
pop
add
pop
ja
push
push
sbb
jnp
cmp
mov
icebp
mov
xor
in
in
mov
dec
clc
mov
sub
icebp
jp
jo
mov
call
insl
xor
outsl
filds
mov
sbb
movl
daa
adc
cltd
mov
imul
jb
lea
mov
inc
mov
stc
sub
cmp
orb
push
int3
lods
mov
push
sbb
mov
adc
cmp
adc
push
lret
loope
xchg
cld
in
dec
jno
aas
ffreep
aas
lcall
cltd
xchg
add
inc
dec
xchg
and
imul
ja
mov
mov
mov
jmp
in
adc
and
mov
jle
xor
sub
imul
popa
scas
dec
mov
push
push
hlt
mulb
push
mov
and
jnp
cld
sbb
or
dec
pop
loope
sahf
or
inc
stc
movb
dec
cmp
loopne
push
dec
enter
lcall
enter
bound
loop
xchg
aad
dec
cmc
insb
and
mov
and
loop
mov
push
mov
push
fildl
push
and
xchg
jns
mov
jae
jmp
add
pop
notb
sub
sar
lret
push
add
gs
inc
mov
dec
xchg
out
mov
test
imul
test
push
fmull
fadds
aad
insl
clc
nop
je
xchg
lret
or
pop
push
push
arpl
lret
fscale
push
adc
daa
aam
lods
cltd
push
xchg
es
int
lods
add
mov
lret
enter
scas
and
sub
xchg
add
ja
mov
add
fstps
mov
movsb
leave
bound
daa
adc
dec
popa
rclb
adc
out
pop
pop
lock
push
add
lods
ljmp
dec
sbb
or
lret
cmp
jne
faddl
or
inc
cwtl
test
ficoms
loop
pushf
fwait
cli
call
sbb
push
stos
ja
jo
add
lcall
mov
push
push
stos
jbe
sahf
movl
dec
mov
mov
jno
and
dec
addr16
push
in
xor
ljmp
and
push
mov
testl
mov
xchg
dec
je
in
add
shrb
xor
lret
shl
mov
jmp
ret
pop
and
mov
leave
enter
inc
mov
clc
adc
cmc
repnz
dec
mov
fistpll
ja
pop
jge
pop
adc
jmp
sbb
jmp
jl
pop
jb
lock
aad
lea
xchg
mov
aad
rcrb
fnsave
lret
insb
inc
and
mov
jecxz
cmp
adcb
push
jb
test
pop
dec
xchg
pop
filds
push
jl
pop
insb
adc
xor
add
mov
cs
repz
jge
sbb
xor
cmp
inc
pop
decl
push
in
fistpl
mov
push
iret
ljmp
mov
dec
insb
xrelease
sbb
jle
sbb
sti
sbb
data16
popa
repz
cmpsl
pop
loop
add
dec
xchg
cmp
push
or
repnz
jge
jmp
lahf
insb
sub
cmpsl
lds
mov
mov
in
pop
xor
dec
out
pop
fstpl
pop
adc
cmpb
cmc
sub
sbb
adc
cltd
fistps
inc
mov
gs
adc
lret
or
loopne
fmuls
mov
xchg
aaa
cmp
adc
adc
cwtl
test
push
xor
sbb
out
xlat
jnp
mov
xor
iretw
gs
aam
adc
in
jns
andb
pop
pop
add
out
icebp
cmp
xchg
sti
test
mov
cltd
and
push
pop
mov
fildl
mov
ss
aad
in
int
jg
in
and
mov
xchg
repnz
and
sbb
loope
cmp
push
outsl
leave
xchg
outsl
push
xor
dec
push
arpl
pop
int
std
mov
out
aas
rol
adc
icebp
or
fwait
or
repnz
jmp
and
ret
push
ret
dec
mov
add
pop
push
cmp
stos
ss
test
les
pop
out
and
cld
jle
aad
xchg
mov
lock
mov
xor
cmp
inc
lods
adc
adc
out
fnstcw
cmp
xorb
sub
jg
pop
fisttps
jnp
cpuid
pop
mov
pop
daa
mov
sti
xor
test
aaa
dec
mov
adc
jne
cmpsb
add
jl
incb
dec
ljmp
shrb
xor
xchg
mov
mov
adc
mov
or
push
sarl
fists
fiadds
testl
push
or
loop
lock
push
ss
jle
repz
mov
mov
rol
test
arpl
lds
xchg
mov
cs
or
cmp
dec
add
fs
fstpl
push
sub
mov
stos
adc
mov
push
das
ret
xchg
ds
mov
xchg
rorl
js
dec
inc
or
mov
jne
pop
pusha
cmp
push
and
iret
inc
int
lds
jmp
lods
xchg
mov
pop
xchg
cmpsb
inc
cmpsb
ljmp
aas
cwtl
dec
sbb
popa
in
cs
and
mov
dec
rorb
add
fsubl
add
outsl
shl
or
loope
cmp
cmp
push
sub
mov
addr16
jns
xchg
push
jmp
out
adc
cmp
dec
xorl
fcoms
lds
mov
mov
mov
jmp
or
push
cli
dec
mulb
sub
cmpsl
and
jmp
aam
stos
sbb
inc
insl
clc
adc
and
lods
adc
mov
cmc
or
je
inc
fisttps
divb
pushf
nop
aad
stos
adc
in
mov
add
jb
dec
and
stos
cmp
dec
xchg
stos
pop
sub
sbbb
popa
inc
push
ja
xor
jb
adc
iret
mov
and
out
push
sbb
cmp
xchg
leave
stc
out
push
inc
cmp
push
lret
inc
cmp
mov
sub
fwait
es
xor
cs
lret
add
into
xchg
mov
pop
mov
sbb
aam
fisubrs
cwtl
lcall
xor
fistl
adc
lock
scas
lret
stc
or
pop
and
fidivl
xor
je
cmp
xor
popa
enter
aas
sbb
jo
arpl
lods
adc
mov
cld
jne
enter
int
sub
inc
pop
jo
pop
xor
dec
xor
cmpl
hlt
out
pushf
adcl
sbb
pop
dec
movl
pop
ret
mov
lahf
sub
sbb
lea
inc
adc
add
movsb
sub
add
adc
sub
aam
or
push
stc
pop
push
mov
mov
scas
cmp
and
test
pop
or
rolb
or
jge
in
or
out
insb
xor
or
cmp
xor
inc
sbb
jns
sbb
mov
sarl
sub
mov
sub
xchg
fsubl
mov
jmp
push
sbb
mov
test
ja
pop
jp
mov
mov
dec
sbb
gs
jl
scas
jno
mov
push
push
xchg
aam
dec
adc
scas
sub
mov
cmp
jmp
in
rolb
aas
xor
cmpsl
mov
in
fisubs
push
fs
mov
xchg
cmp
adc
in
nop
pop
jmp
xchg
popa
and
mov
sub
dec
sub
mov
popa
push
cltd
neg
fwait
push
data16
jo
fwait
push
push
sub
pop
push
cmp
dec
lock
mov
pop
push
dec
xchg
jnp
fbstp
fwait
ja
or
and
jo,pn
je
call
add
andl
xchg
sbb
push
pusha
and
lods
push
push
pop
inc
xchg
or
ds
cmp
and
int
push
out
mov
mov
xor
mull
xor
cld
adc
jle
cmpsl
cwtl
and
shl
lret
movsl
inc
or
dec
inc
xchg
fst
jl
nop
ret
mov
rcll
in
sub
xor
ficoms
mov
adc
dec
jmp
fiaddl
push
notb
xor
xor
dec
mov
aad
popf
xor
data16
push
outsb
out
push
movsl
pusha
mov
mov
jmp
sbb
cmc
out
add
mov
cld
and
shrb
fnstsw
pop
mov
out
rorl
dec
xor
jg
cmpsl
arpl
mov
mov
adc
sti
sbb
inc
mov
adcl
nop
andl
sti
fldenv
cmp
leave
rorb
adc
or
hlt
xchg
sbb
out
cmc
lret
push
test
movsl
dec
jb
push
or
dec
pop
mov
pop
mov
cwtl
adc
clc
dec
nop
mov
fidivs
fcomip
adc
cmp
xor
sub
dec
lock
cs
mov
stc
repnz
sbb
mov
jb
test
popf
push
loop
in
fs
repnz
cmp
jne
out
lods
xchg
pop
lret
repnz
jb
lds
xchg
adc
or
or
pop
outsl
and
cli
sub
dec
sarb
dec
mov
dec
repnz
adc
fnstenv
xor
fstp
xor
mov
es
pusha
aam
test
aas
xor
inc
inc
sbb
mov
enter
mov
rolb
cmp
lcall
les
icebp
shrb
mov
aas
pushf
xor
pop
orl
dec
int
jb
mov
sub
mov
adc
mov
lock
inc
and
xchg
cli
dec
out
add
dec
scas
repz
enter
pop
push
ds
adc
movsl
loopne
jle
inc
mov
cmp
mov
inc
in
sub
xchg
xor
cmp
loop
mov
dec
jmp
cmpsb
cmpsl
je
clc
fdivl
or
mov
push
dec
pop
or
jbe
movsl
xchg
xor
out
outsl
int3
inc
gs
inc
nop
icebp
push
xor
imul
sbb
imul
add
mov
test
fcmovnbe
xchg
mov
push
add
or
mov
insb
mov
rol
add
add
add
mov
sub
incb
enter
add
and
jnp
jecxz
mov
aad
repnz
xchg
mov
inc
sahf
push
or
push
jg
bound
dec
inc
add
mov
jecxz
push
mov
or
lock
imull
ret
test
subb
loopne
xor
leave
sub
jge
adc
adc
push
add
repz
sti
pop
sbb
jp
mov
cmc
sub
cmpsl
shlb
mov
push
jmp
push
movl
mov
add
xlat
mov
lods
mov
jg
rol
mov
cmc
enter
not
fucomp
popf
xor
adc
mov
gs
std
mulb
stc
pusha
dec
fmuls
je
adc
and
pushf
movsb
inc
out
push
sarl
into
dec
sub
jle
std
xor
mov
pop
push
and
jg
pop
sub
ret
inc
fldt
lcall
mov
orl
add
scas
inc
sarb
mov
scas
loope
in
inc
dec
jb
jmp
sti
jge
mov
loope
out
icebp
mov
cmp
lea
nop
mov
pop
repz
cli
sbb
xor
js
out
sbb
jns
stos
lods
xlat
bound
jge
cmp
notl
cmp
lock
shll
or
stos
jecxz
push
shrl
mov
xorl
dec
sub
test
jb
xor
xor
lock
push
mov
dec
cmp
pop
jmp
add
les
jmp
inc
scas
adc
pop
stc
call
or
into
lret
lcall
fnstcw
pop
sub
mov
adc
fisttpll
push
bound
add
xor
mov
fdiv
cmp
cmp
pop
fwait
int3
cmc
ja
jp
xchg
jmp
fcmovu
add
inc
aam
in
mov
cmpsb
popf
icebp
inc
xchg
jns
int3
or
enter
nop
pop
xchg
out
xlat
out
xchg
cld
popa
xchg
pop
icebp
inc
dec
loopne
dec
jo
into
pop
push
mov
in
es
sbb
inc
lds
test
jns
or
dec
lods
imul
imul
mov
adc
out
lock
aaa
sbb
add
jg
mov
sahf
cmp
fnstcw
je
nop
mov
mov
aas
mov
mov
test
ja
in
xlat
push
out
repnz
jb
dec
pop
and
jnp
inc
nop
ret
sbb
or
add
cmp
lods
mov
lds
mov
outsb
xor
ds
test
or
pop
xor
xor
gs
push
inc
sub
pop
int3
in
sub
sbb
popf
pop
lret
add
jbe
jge
add
sbb
cld
lods
aaa
cmp
cmp
mov
sub
cmp
ja
mov
mov
add
lods
mov
arpl
addr16
pop
sahf
inc
cmp
test
inc
xchg
lahf
lods
xor
in
adc
stos
push
mov
push
sbb
in
mov
je
imul
xor
inc
rcll
les
push
addb
adc
test
mov
enter
adc
pop
dec
fcoms
lock
jbe
sub
aaa
dec
jmp
ret
call
and
test
inc
jge
push
outsb
nop
xchg
jns
leave
push
sbb
inc
jo
cli
add
add
ja
or
movsb
pop
jnp
test
mov
adc
xor
rcl
stc
sbb
jg
add
push
aas
sbb
arpl
dec
dec
in
sub
cmp
aas
push
mov
les
jmp
sahf
clc
lret
mov
hlt
fisttpl
mov
mov
jnp
xor
xchg
cld
icebp
jmp
out
pop
fcompl
cmc
pop
jl
es
ftst
jno
test
pop
lea
push
mov
sub
leave
std
xor
in
dec
sti
shrb
push
les
mov
dec
mov
das
inc
addr16
clc
ja
lret
stos
dec
ss
mov
das
cmp
pusha
sbb
ja
fimull
popl
pop
xchg
inc
sub
ret
ja
iret
out
jns
nop
xlat
cmc
gs
cld
sub
adc
loopne
dec
sub
loop
fwait
ss
xor
mov
pop
jns
test
jns
jg
xor
int3
out
mov
push
mov
pop
dec
outsb
jnp
mov
cs
ret
push
sbb
fistpll
lods
sahf
sub
movsl
std
cmc
or
je
inc
dec
in
dec
and
nop
cmp
int3
shll
into
out
or
idivb
mov
xchg
and
cmp
push
lcall
xchg
push
push
xor
sub
or
aas
pusha
jl
popf
dec
ljmp
das
ret
xchg
dec
fs
xor
jmp
sbb
loop
mov
mov
jb
movsl
ret
leave
jne
xchg
add
xchg
xchg
repnz
and
cs
lcall
sub
mov
lret
mov
repz
in
outsb
jge
ljmp
mov
cmc
insb
cld
mov
js
ljmp
sub
sub
fcomps
mov
pop
jo
or
mov
sbb
fsubrp
add
xor
loopne
add
std
rclb
ljmp
add
add
fs
pop
push
in
repnz
fstpl
sbb
cmc
lds
xchg
add
ret
xor
pop
cli
jns
or
mov
hlt
and
mov
test
dec
xchg
cwtl
imul
cmc
js
cwtl
dec
mov
mov
sbb
call
lcall
fidivl
xchg
das
xor
sub
in
fcmove
xchg
xchg
ret
imul
mov
mov
outsl
xor
in
pop
outsb
bound
jmp
test
ljmp
push
imul
je
js
test
sub
popf
test
and
pusha
pop
fucomip
sbb
add
std
shrl
push
jecxz
mov
das
mov
ficoms
lcall
faddl
idiv
int
lea
in
mov
out
jmp
sbbb
sub
mov
lahf
dec
pop
mov
sti
or
lods
adc
add
aam
call
push
mov
xchg
sbb
loopne
mov
xchg
jmp
and
xor
es
scas
push
xchg
mov
mov
or
mov
out
add
push
arpl
adc
mov
lock
stos
sbb
cmp
mov
in
imul
shlb
or
jns
inc
push
loopne
ss
das
fidivrs
aad
mov
inc
in
popf
jecxz
in
lock
cmp
sub
js
add
jae
fs
shll
push
pop
mov
mov
imul
aam
lahf
enter
adc
adc
ds
cmc
adc
lods
mov
stc
stos
pop
dec
pop
add
mov
icebp
fstps
repnz
sub
into
xor
cmp
cmp
push
jmp
add
repnz
or
add
mov
sbb
js
cmp
xchg
and
adc
in
outsb
adc
xchg
mov
rolb
mov
aad
aad
mov
add
icebp
adcb
dec
shr
xor
xchg
pop
loope
cmc
push
gs
push
or
and
neg
movzwl
push
mov
mov
mov
stos
stos
pop
jns
pop
popf
and
enter
or
pop
sbb
call
mov
std
jg
shlb
push
xor
mov
stos
in
mov
leave
cmpsl
add
int3
mov
outsl
rol
dec
test
mov
fadds
test
sub
dec
cmp
lcall
xchg
pop
shlb
fwait
push
sahf
repnz
xchg
inc
push
sub
ret
cli
jnp
aam
adc
outsl
mov
jbe
scas
into
xor
push
cmc
xchg
popw
xchg
sub
push
cmp
in
cld
mov
adc
push
daa
jb
xchg
mov
mov
mov
rorb
lock
or
pop
lock
inc
sbb
jg
mov
adc
jb
pop
xor
cmp
dec
push
hlt
in
stc
or
jmp
dec
dec
pop
pop
sti
mov
cmpl
lret
mov
aad
pop
stos
and
out
pop
fisttpll
sahf
rcll
and
les
sbb
inc
mov
or
out
insb
out
or
and
and
push
or
push
lahf
sbb
outsb
shrb
sub
test
aam
test
imul
push
add
jl
jo
pop
push
daa
faddl
insl
pop
fldenv
jno
push
lcall
inc
mov
into
xchg
pusha
ja
dec
addr16
out
or
lods
mov
test
sbb
mov
xor
dec
scas
mov
push
pop
lret
in
and
sbb
mov
ss
jns
adc
xor
sub
or
mov
ret
mov
addr16
xchg
push
ret
in
sarl
jae
in
mov
push
daa
loopne
xchg
pop
stc
mov
dec
adc
mov
mov
cmp
and
adc
stc
xchg
pop
xor
cltd
pop
sub
jnp
aas
out
test
insb
mov
lds
xchg
cltd
mov
xlat
js
push
xor
inc
and
pop
cmp
cmp
les
adcb
jnp
mov
add
in
and
sbb
stos
shll
scas
imul
mov
sarl
mov
nop
pop
mov
sub
stc
in
test
jno
mov
lret
sahf
negl
dec
and
pop
scas
jb
dec
inc
adc
aaa
lea
testb
addr16
cmpsb
xchg
stc
in
push
adc
fadds
in
insb
les
ret
fistl
popf
jmp
jae
dec
rcr
pop
or
es
out
lahf
mov
add
jo
push
popa
jnp
cli
loop
adc
arpl
outsl
push
and
out
and
iret
dec
scas
imul
stos
subl
ja
mov
xchg
adc
stc
inc
add
dec
xchg
in
sub
sti
inc
and
cmp
lahf
jp
xchg
xchg
add
movsb
and
cmp
sub
push
popf
jb
out
fsubrs
jg
out
mov
lods
pusha
stos
aas
incl
adc
or
adc
mov
pop
lret
lret
or
adc
push
jg
sub
push
cmp
jnp
mov
pop
outsl
mov
out
sbb
pop
mov
sahf
adc
lock
ds
add
mov
lret
push
arpl
fisttpl
stos
cmp
or
bound
sahf
loop
push
mov
data16
movsl
hlt
jno
push
add
clc
sbb
pop
cwtl
test
imul
scas
ds
sbb
and
nop
or
das
pushl
pop
enter
gs
test
mov
adc
mov
dec
cmpsb
movsl
sbb
push
imul
pop
in
sub
xor
fdivs
jmp
lret
int3
jnp
xor
inc
shll
adc
rcll
push
jno
push
test
xor
adc
aad
mov
pop
mov
lcall
sbb
outsb
cwtl
sbb
movsb
fldenv
bnd
adc
in
data16
xchg
add
ss
pop
dec
pop
lret
out
les
push
dec
and
and
iret
dec
mov
addb
rcll
sub
bound
and
inc
add
and
push
rorb
jns
mov
push
adc
dec
mov
xor
hlt
jg
loope
ja
or
ret
je
adc
in
mov
outsb
mov
sarb
stos
push
pop
mov
out
dec
jbe
mov
out
xor
mov
hlt
or
add
add
neg
movsb
dec
dec
movl
mov
daa
cmp
jae
jg
push
xor
cli
jb
mov
aad
cmp
arpl
pop
jno
mov
mov
inc
mov
lret
jo
mov
mov
pop
xchg
jns
mov
out
mov
clc
adc
mov
push
popa
mov
mov
fcmovnbe
pusha
repz
mov
repnz
call
outsl
hlt
cmpsl
leave
cmp
xor
dec
mov
jmp
mov
bound
enter
pop
cmp
js
fwait
cmpsl
pop
add
and
add
jo
das
shll
sub
leave
cwtl
cltd
or
xor
push
data16
repnz
mov
jecxz
push
fsubs
ret
mov
pusha
bnd
out
in
repz
pop
mov
mov
fadds
mov
popa
insl
dec
pushl
mov
and
jne
inc
jle
sbb
aad
in
or
adc
mov
popf
sub
mov
test
into
shlb
cmp
push
imul
mov
aam
test
dec
das
imul
imul
inc
sbb
inc
sti
push
into
jno
popa
bound
push
pop
pop
mov
sub
std
pop
or
dec
insl
push
ss
test
jge
aas
ret
ljmp
push
insl
jnp
sub
cmp
adc
ficompl
mov
add
adc
sbb
test
jns
enter
mov
dec
lret
jl
dec
daa
dec
pop
pop
pop
insb
mov
xor
repnz
add
jg
cmp
stos
jo
push
repz
das
cmp
nop
mov
mov
pop
jge
xor
fadds
fldl
jmp
test
jl
fcompl
call
dec
bound
fcomp
pop
pop
inc
jg
mov
in
mov
fldenv
cmpsl
gs
jno
xor
pop
fnsetpm(287
pop
xchg
adc
inc
cs
mov
push
andl
xchg
push
mov
packuswb
push
std
cmp
aam
leave
push
cmp
das
mov
xor
xchg
pop
jge
pop
dec
push
repz
inc
loope
nop
inc
popf
shlb
cmpsl
mov
pop
sahf
dec
fcompl
push
xchg
push
dec
movl
xchg
jle
or
ja
mov
in
iret
cld
jne
cmp
cmp
add
push
cwtl
jmp
mov
daa
test
mov
cmpsl
mov
ret
movsl
xlat
mov
popa
and
clc
xchg
lret
mov
aam
leave
dec
cld
sub
dec
repz
lret
fdivrl
sbb
in
pop
cmp
lods
cmpsl
enter
pusha
mov
movsb
mov
pop
sarl
sub
mov
movsl
or
scas
ss
xchg
xchg
xchg
clc
inc
fnstsw
and
repnz
fucomp
mov
adc
lret
sub
sti
xchg
cs
adc
mov
pusha
xchg
sbb
push
test
xor
or
cmp
pop
das
xlat
ljmp
dec
call
stc
mov
fimull
push
insb
into
dec
jg
cmpsb
mov
dec
fldt
xchg
fistpl
int
fs
aaa
into
aam
sti
mov
in
lahf
pusha
inc
je
into
out
ret
jne
clc
subl
jp
xchg
mov
or
mov
push
pop
repz
hlt
aas
and
sbb
leave
cmpsb
pushf
cmp
push
or
push
inc
mov
fdecstp
push
cmp
repz
ds
popf
mov
js
cmp
push
pop
mov
push
mov
push
and
adc
mov
dec
outsl
inc
push
pop
movsl
test
int
mov
or
mov
push
mov
sbb
push
out
xor
lds
rcll
aad
inc
mov
lea
test
stos
cmp
mov
repnz
in
dec
push
lahf
out
popf
xchg
mov
sub
mov
fists
das
adc
out
jp
push
mov
mov
and
adcb
aam
adc
pop
loopne
mov
inc
push
cs
call
jl
dec
mov
jno
add
mov
fistl
and
xchg
ror
repz
adc
pop
sub
aas
sbb
or
sbb
mov
dec
xchg
imul
lret
cmp
mov
dec
lret
cmc
loop
out
sbb
push
cwtl
rcrb
fcoml
push
inc
pop
sbb
jecxz
test
sub
lcall
stc
push
flds
div
jb
push
and
cmp
mov
xchg
loope
pop
xor
jmp
mov
push
mov
cmp
popa
sub
mov
lods
inc
add
arpl
orl
xchg
fldl
fwait
inc
roll
sbb
lods
clc
pop
push
lock
inc
pop
or
jbe
rcr
cli
cld
push
mov
mov
sub
enter
rorl
mov
inc
cld
hlt
adc
test
inc
enter
iret
push
xchg
cltd
outsl
inc
jne
hlt
popa
ss
sub
sub
jl
repnz
xchg
in
mov
dec
fidivrl
lahf
mov
imulb
jp
pop
xchg
decb
lahf
jno
or
push
lret
mov
fldt
xlat
ja
mov
or
cmp
rcr
sbb
mov
shll
and
fucomip
push
pushf
sub
stc
std
add
push
pop
fldenv
dec
dec
jbe
sbb
or
fldenv
jne
xor
testl
divb
sub
push
lds
stos
fwait
push
nop
sbb
adc
sbb
xchg
test
jnp
ds
sahf
repnz
enter
out
pop
mov
jl
out
adc
cmpsl
mov
sub
push
mov
mov
imul
xlat
arpl
or
enter
cvtps2pd
in
xchg
enter
inc
imulb
jb
adc
push
sub
fwait
iret
daa
jns
sbb
fmuls
lret
lret
mov
sub
sarl
push
cmp
stos
in
daa
jmp
in
lods
mov
jno
push
push
or
cmp
out
xchg
cmp
mov
leave
xor
fstpl
adc
jb
or
inc
adc
mov
popf
xchg
out
fwait
mov
xor
icebp
pop
shlb
rol
andl
jge
jno
or
call
into
adc
out
lods
add
sbb
icebp
jge
add
mov
xor
cwtl
stc
jns
iret
push
sarb
test
lods
sub
aas
hlt
mov
mov
mov
icebp
dec
add
jmp
mov
mov
clc
jno
sub
sub
and
iret
jp
mov
add
lock
inc
in
dec
lahf
mov
out
aaa
push
push
repz
aad
adcl
popf
xchg
mov
sbb
and
xchg
add
jp
hlt
inc
sbb
stc
fcmove
xor
ja
or
mov
and
jecxz
push
dec
sti
loopne
mov
in
jnp
ds
jno
dec
shll
lock
dec
bound
sbb
mov
loope
sbb
mov
push
mov
mov
inc
push
add
popf
mov
test
xchg
mov
out
mov
jge
and
filds
mov
jne
cmpsl
fisubl
shl
mov
inc
in
pop
pop
jae
push
rorb
adc
cmp
lret
adc
insb
inc
mov
jae
cmp
push
jae
sbb
sar
call
fs
ret
scas
mov
mov
cmpsl
les
dec
daa
fdivrp
push
sti
sbb
js
test
xchg
cwtl
push
adc
sub
subb
orl
lea
pushf
pop
and
mov
add
inc
xchg
lret
push
outsb
cmp
js
arpl
mov
test
mov
pop
inc
xchg
imul
movsb
rorl
or
push
aaa
adc
xchg
les
test
jno
cltd
pop
or
cmp
sbb
and
hlt
lret
lahf
lret
jl
hlt
push
xchg
divl
adc
adc
mov
std
scas
jmp
sbb
out
notl
sbb
int3
push
cmp
push
jbe
mov
mov
or
mov
rcrl
mov
out
rcl
push
ljmpw
loope
lock
mov
neg
cwtl
rol
mov
sti
push
adc
xor
int3
out
insb
pop
dec
adc
out
bound
pop
insl
xchg
outsb
in
dec
jb
jl
add
push
push
mul
ljmp
jmp
scas
mov
bound
dec
hlt
cmp
cmp
xor
out
icebp
mov
sub
cmc
dec
pop
push
jg
sbb
insl
fstps
pop
sub
or
outsb
shr
stc
push
push
ss
std
popa
jns
scas
cmp
add
or
fidivrl
test
xchg
outsl
jge
jg
cli
insb
shlb
out
leave
jg
int3
fstp
hlt
imul
xchg
cmp
or
sub
sub
sub
jmp
jecxz
add
popf
xchg
flds
inc
shll
inc
shrl
std
mov
out
das
leave
mov
lret
lret
nop
xor
sbb
xchg
push
xchg
enter
cmpb
pop
je
shlb
cli
cwtl
mov
dec
xchg
hlt
outsl
andb
inc
inc
sarb
inc
fstpt
push
jnp
scas
sub
sub
popa
call
rorb
lds
ret
or
jae
mov
xlat
pop
mov
mov
and
push
addb
pop
sahf
incl
mov
sbb
mov
cmpsb
xchg
push
stc
xor
int3
cmp
add
xchg
and
aaa
jbe
jo
mov
and
hlt
aad
or
cmp
push
cwtl
test
sahf
cltd
out
fidivl
dec
in
cs
add
dec
in
add
scas
aad
mov
es
mov
pop
lcall
or
pushf
filds
mov
xchg
mov
inc
int
push
jecxz
movsb
ja
sbb
sbb
jle
ret
lahf
inc
outsl
fwait
xor
cmp
xlat
mov
pop
jp
dec
int3
bound
sbb
mov
inc
jecxz
popf
into
sbb
stos
push
dec
and
or
pusha
out
fnstcw
cmp
xor
subb
enter
lods
hlt
cmp
sbb
adc
push
mov
data16
loope
js
inc
loop
dec
sbb
adc
stos
movsb
mov
push
mov
mov
xchg
mov
movsb
mov
lret
sarb
insb
cld
lret
jo
sbb
fwait
xchg
bnd
mov
and
cs
out
cmpsl
mov
jae
pop
sub
mov
push
jle
xchg
adc
int
pop
and
aas
dec
mov
push
fdivs
js
adc
dec
movsb
int3
repnz
or
sbb
adc
push
lods
xor
xsave
movsb
aaa
test
inc
mov
pop
add
lret
dec
test
jmp
ds
and
fmull
mov
add
sub
jp
or
sbb
jae
jns
ds
mov
jne
mov
sub
mov
cmp
pop
dec
stc
lret
fdivr
je
add
sti
mov
mov
call
mov
xchg
or
loopne
push
push
decl
push
mov
jno
dec
xchg
sbb
sub
pop
cwtl
leave
pop
add
pop
fadd
xor
xchg
or
pop
repz
sti
ucomiss
push
sbb
cmpl
mov
mov
sarl
push
lods
jno
adc
in
adc
cmp
mov
adc
push
mov
pop
shr
test
pop
add
inc
mov
xor
dec
mov
pop
pushf
jg
test
or
out
lea
popf
dec
outsb
idivb
out
je
inc
idiv
xchg
lods
dec
test
aad
inc
sub
jmp
mov
jno
jl
jl
sbb
sbb
aas
inc
xlat
push
insb
xchg
cmpsl
jb
push
or
sub
inc
test
dec
arpl
and
fimull
mov
push
push
pushf
das
in
idivb
aad
std
jge
push
xchg
xlat
fs
in
fscale
sbb
je
mov
clc
pop
cmpb
and
pop
enter
arpl
mov
xor
cmpsb
mov
fstps
push
pop
jp
or
jb
arpl
test
xor
xor
cmp
mov
dec
cmp
lods
sbb
gs
sti
repnz
dec
daa
ret
cmc
movsl
lock
outsb
dec
adc
cmp
lahf
mov
fldcw
cld
divb
and
pop
loopne
out
out
sbb
movsl
test
mov
std
xchg
mov
out
xchg
push
push
lret
jmp
cmp
xor
or
icebp
dec
mov
lock
or
adc
fcompl
push
out
lret
push
stos
clc
and
sbb
pop
inc
lahf
push
add
mov
mov
out
lahf
mov
sarb
scas
and
push
hlt
and
mov
out
fsubrl
adc
shll
xor
into
fsubr
dec
and
push
and
cwtl
stos
ret
jno
cmpsb
jmp
sub
roll
push
push
enter
sbb
cltd
cltd
pop
sub
or
pop
stos
mov
pop
int3
sub
pop
pop
pop
dec
push
cmpsb
icebp
ret
popf
jae
lods
sbb
aaa
dec
fs
add
and
das
test
xor
aaa
fcomps
xchg
mov
adc
pushf
pop
ret
xchg
outsl
mov
mov
sub
ret
bnd
push
push
or
sub
cmp
mov
or
xchg
pop
sub
sbb
or
in
fdivrl
sub
in
mov
incl
into
rcr
push
imul
cmpb
inc
and
pop
pop
int3
ljmp
clc
xchg
out
call
jmp
mov
add
mov
insb
mov
adc
xchg
cmp
and
fcomps
sub
pop
push
mov
pop
popf
arpl
ror
imul
cmp
je
shrb
in
mov
add
inc
mov
sub
sbb
sub
stc
sbb
adc
sbb
pop
or
jmp
inc
icebp
out
sbb
mov
popf
inc
ret
sbb
jg
lahf
ljmp
xor
sti
fdivrl
test
cld
lock
or
inc
das
hlt
loope
faddl
clc
ss
jns
dec
push
call
in
inc
in
jp
pop
sar
jl
xor
push
sub
xlat
call
adc
xchg
bound
mov
push
xchg
movsl
push
shlb
in
leave
test
inc
cmpsb
pusha
mov
dec
mov
pop
aad
fsubrl
push
decl
push
jns
stos
out
adc
imul
mov
pusha
test
arpl
mov
pop
mov
cmpsl
bound
sub
aad
adcb
add
and
adc
shrl
shll
jl
add
inc
repz
push
mov
cmp
mov
dec
dec
flds
sub
lock
outsb
mov
xor
push
out
lods
mov
inc
mov
pop
or
add
shlb
test
inc
jg
icebp
hlt
es
cld
cmp
inc
inc
stos
pop
adc
jb
ret
push
xchg
pop
xchg
repz
cwtl
sub
insl
ror
mov
sbb
sbb
loop
int
bound
sti
cwtl
pop
xchg
sub
pop
adc
xor
leave
jne
mov
push
rolb
jl
ret
dec
insb
adc
mov
jbe
mov
fwait
psubd
jle
and
dec
out
pop
jl
aam
fnsave
jmp
jb
dec
jg
enter
idivl
data16
call
addr16
fidivl
pop
dec
movl
fimull
ret
sbb
or
inc
mov
fnstenv
push
sbb
hlt
mov
adc
xor
shrl
fs
shrl
xchg
mov
add
out
inc
and
hlt
lcall
frstpm(287
xchg
addb
push
jae
dec
hlt
cmpsl
xchg
sti
shrb
push
in
jnp
leave
mov
inc
repz
fmull
pop
cwtl
push
popf
stc
cltd
ljmp
mov
or
adc
fmull
xchg
xor
mov
xor
std
dec
int
or
addl
pop
addl
scas
sub
pop
fisttpll
ficoms
fsubrl
hlt
call
aaa
sub
xchg
leave
mov
sub
leave
sahf
or
enter
lret
outsb
xchg
lds
lret
add
mov
xor
lods
xor
iret
aad
xor
cmp
cld
aaa
insb
inc
jne
sub
lahf
mov
lcall
mov
sarl
add
out
es
mov
out
xchg
daa
jno
mov
das
jl
mov
cmc
popa
popf
mov
pop
or
push
push
int
pop
inc
cld
loopne
jbe
push
mov
cmp
jmp
notb
push
cmp
or
sbb
fcmovnbe
sbb
popf
inc
and
lcall
outsb
push
dec
and
pop
adc
fmull
pop
subb
clc
push
cmp
cmp
dec
push
pop
imul
fimuls
cmp
sahf
ss
jns
rclb
loope
out
loope
adc
daa
neg
fcoml
push
mov
aaa
test
sbb
shll
push
js
std
mov
push
or
int3
inc
add
sar
xlat
jbe
mov
cli
and
dec
ds
lcall
outsl
mov
aad
insl
call
pop
jne
mov
xchg
sub
dec
dec
sbb
mov
orb
std
xor
imul
lods
fsubs
sarb
push
mov
test
mov
jmp
dec
inc
or
pop
xchg
addl
mov
sahf
ficomps
fcom
jne
mov
js
cmc
mov
mov
pushf
test
outsl
xchg
sahf
es
pop
pop
loop
add
idivb
xor
mov
insl
rorl
pop
scas
and
decl
dec
popa
adc
push
data16
insb
cmp
loopne
out
les
jmp
xchg
ret
xor
pop
popa
xor
sub
cs
jg
jae
cmp
mov
xor
in
scas
jne
ja
adc
lcall
mov
jo
sub
xchg
mov
add
xor
iret
pop
mov
xor
xchg
mov
pop
jle
push
push
sbb
push
out
xchg
ja
sbb
mov
mov
test
push
shlb
ds
ss
call
shrl
daa
std
subl
rorb
loopne
data16
imul
pop
fdivrl
push
and
add
nop
fnstcw
mov
pop
cmp
dec
and
int3
call
call
or
mov
in
pop
mov
mov
movsl
cmp
faddl
lahf
mov
mov
nop
jmp
lret
xorb
adc
add
push
add
sbb
sub
xor
mov
mov
mov
dec
jnp
inc
popf
xor
lcall
ficompl
lahf
test
sti
cmp
pop
cwtl
sub
stos
stos
sbb
xor
ss
ds
adc
sub
mov
sbbl
push
lock
rcll
fisubl
and
out
mov
pop
loopne
push
sub
push
jmp
cmp
in
inc
sbb
mov
jge
or
add
mov
push
adc
lock
pop
xchg
pop
iret
sbb
push
xchg
push
cltd
jge
ret
mov
inc
in
mov
sbb
jle
pop
call
cmp
daa
dec
mov
jle
xor
cmp
jmp
imul
and
lret
jp
movsb
shl
aaa
mov
mul
pusha
and
stc
jb
xor
adc
jmp
ja
push
jg
adc
xchg
aad
xchg
out
mov
dec
mov
pop
mov
pop
xchg
pusha
jno
pop
mov
orl
pushf
mov
sbb
addr16
aas
fadds
aam
xchg
and
inc
data16
imul
arpl
sbb
sub
push
sahf
xor
push
addr16
les
addb
or
push
mov
mov
inc
or
jp
enter
jg
xlat
rcrl
cmp
sub
lods
fdivrp
dec
das
jecxz
ljmp
push
or
lret
sub
mov
and
ja
mov
out
lds
in
sub
pop
push
out
outsb
jns
lret
jp
xchg
xor
shrl
loopne,pt
xchg
imul
in
sub
stos
push
xchg
lods
cwtl
inc
xchg
inc
out
scas
mov
jmp
cmp
mov
aaa
push
arpl
js
mov
pusha
jle
adc
jae
mov
adc
inc
sti
pop
sub
pop
adc
mov
pop
push
popa
loope
xchg
leave
lret
jmp
or
xchg
insl
stos
das
notl
jne
mov
int3
cli
push
and
int
jmp
inc
es
in
leave
dec
lahf
push
and
inc
cwtl
test
int
hlt
inc
sub
push
mov
ss
lahf
clc
cs
repnz
setnp
push
je
jb
lods
xor
clc
ftst
ds
jmp
inc
push
xchg
hlt
sub
test
push
sub
cmpsb
sub
mov
shrb
movsl
xchg
faddp
xchg
lods
push
fidivl
push
mov
out
icebp
cmp
mov
sub
out
jo
stos
dec
inc
xchg
xchg
push
add
adc
scas
push
sbb
loop
int3
mov
orb
in
lcall
xor
dec
dec
jne
or
stos
test
jbe
push
insl
sbb
std
nop
sbb
cmc
inc
cwtl
adc
das
dec
xchg
xchg
adc
je
mov
inc
cld
jb
and
dec
jl
sbb
lea
mov
sbb
xor
fwait
mov
cwtl
sub
outsb
out
cmp
and
push
inc
jbe
test
mov
bound
fmuls
lret
cmp
push
int3
test
loop
push
xchg
psubq
xorb
sub
addr16
push
mov
lods
movsl
rclb
test
mov
xor
sub
mov
popa
js
sbb
sbb
jae
mov
daa
dec
jo
fisttpll
insb
subb
test
outsb
or
and
push
add
mov
repz
and
jbe
je
mov
out
test
fisttpll
mov
sub
mov
cmp
xchg
in
and
cld
push
cmp
subb
outsl
dec
push
push
fwait
inc
std
pop
fwait
push
adc
fmuls
pop
xlat
adc
xchg
out
idivl
inc
pop
jg
out
cli
imull
mov
push
outsl
mov
fadds
pminsw
sbb
arpl
adc
mov
test
divl
mov
mov
push
jle
test
push
outsb
aas
imul
jb
sbbb
cmp
popa
inc
ljmp
dec
inc
lahf
mov
pushf
lret
jmp
jo
xor
lds
adc
mov
fwait
rolb
pop
push
cmpsb
push
insb
fstpt
int3
lods
divb
hlt
loopne
fyl2xp1
and
jnp
xchg
mov
push
shlb
push
clc
sub
rolb
clc
mov
shll
jbe
aaa
and
insl
mov
xchg
xchg
xlat
frstor
jge
sub
mov
mov
popf
adc
popa
sub
jecxz
jbe
test
aas
shll
xorb
or
inc
test
fildll
sarb
xchg
and
ror
outsb
dec
mov
add
mov
shrb
jp
push
push
out
or
lcall
jae
mov
xchg
imul
mov
cmpsl
out
push
add
imul
push
mov
mov
dec
xor
call
mov
outsl
repnz
jne
jecxz
je
dec
sbb
add
jne
stc
cmpl
xchg
addr16
mov
add
push
pmullw
push
insb
aad
pop
lret
incl
scas
xor
call
pop
jae
push
flds
pop
pop
fistpl
inc
movsl
or
mov
add
stos
insb
std
clc
jmp
cmp
dec
add
rcrl
sbb
mov
fsub
jo
dec
outsb
push
add
shrl
jno
cmpsb
inc
mul
lods
or
mov
nop
inc
or
inc
das
sub
pop
mov
mov
mov
sub
in
cmc
shl
push
mov
sbb
lcall
inc
jbe
lock
lds
cmp
lret
sub
push
sbb
jecxz
test
int3
pushf
push
dec
into
ret
sbb
loopne
xchg
daa
and
repz
xchg
test
loope
test
xor
adc
mov
daa
inc
sub
jp
inc
fdivr
jae
pop
lods
out
add
repnz
cs
dec
rorl
push
jmp
js
dec
adcl
in
clc
xor
lret
xchg
mov
jnp
pop
fstl
leave
xor
roll
push
mov
inc
lret
push
sub
pop
cli
add
add
jecxz
mov
cmp
ss
sbb
ret
mov
mov
sbb
sahf
cmpsl
leave
inc
jne
outsl
mov
xor
dec
out
scas
or
shrl
xchg
mov
adc
repz
loopne
outsb
shlb
sbb
lret
xor
ljmp
addr16
cwtl
dec
push
cmp
xor
jbe
xchg
cmpsl
or
jno
aas
pop
fisubrl
nop
fsubr
push
ljmp
es
sbb
mov
mov
jg
lods
xchg
sahf
mov
dec
pop
xchg
jne
mov
inc
popa
rcll
xor
pop
mov
dec
ss
inc
cmp
and
mov
aad
dec
popa
push
mov
les
gs
adc
bound
pop
push
mov
inc
in
mov
in
xor
mov
out
cmpsb
xchg
add
dec
ja
mov
pop
mov
or
inc
in
adc
xchg
daa
das
push
std
ja
xchg
or
pop
xchg
bound
loopne
mov
aaa
mov
cs
and
sbb
cmp
adc
pop
xchg
push
cmpsb
es
add
ljmp
fwait
ds
int
jle
lods
push
or
mov
mov
ret
xchg
fists
adc
xor
cwtl
pushf
push
mov
sub
ret
fldenv
repnz
push
jge
shll
push
enter
inc
mov
add
push
lock
jnp
xlat
xlat
fnstcw
ret
xchg
sahf
rorl
inc
stos
xchg
outsb
jmp
pop
sub
jg
jp
or
pushf
pop
stos
dec
push
cmp
fidivs
lods
out
mov
mov
aad
mov
pop
mov
xlat
lcall
cmpsl
fidivrl
std
mov
stos
xor
fstl
dec
test
cltd
test
rorb
mov
sbb
cmc
or
popa
lods
pop
cmp
pushf
ja
std
fcoms
jge
or
stos
jno
jle
hlt
jp
mov
mov
xchg
fmuls
inc
and
cmp
mov
sub
mov
outsl
mov
push
rcrb
gs
jle
pop
pop
adc
test
pop
aad
mov
push
dec
stos
or
scas
add
cwtl
sbb
pop
mov
add
in
add
lret
lods
mov
xorb
dec
stc
xchg
push
in
jmp
inc
cmpl
inc
mov
sbb
ret
inc
mov
dec
cmp
shr
xchg
mov
xchg
xchg
jle
mov
or
lds
in
sbb
clc
repz
stc
add
ja
daa
push
pop
shll
sbb
push
jns
sub
push
pop
push
and
fcmovnb
repnz
adc
jns
cmp
push
or
aas
mov
jp
and
push
dec
and
ficompl
jge
sahf
pop
movsb
add
and
sub
scas
push
inc
fwait
push
jg
shrl
addr16
cmp
inc
xor
nop
mov
push
loope
imulb
sbb
stos
insb
fstpl
dec
loope
test
in
lods
gs
jo
dec
sti
push
mov
add
bswap
xchg
mov
into
mov
sbb
cmp
fisttpl
or
inc
sub
aas
test
dec
fwait
cwtl
xchg
pop
push
fiaddl
movsl
cmp
gs
add
sbb
imul
imul
jno
aas
sarl
or
adc
ret
gs
inc
sbb
test
das
or
mov
push
sub
mov
jge
push
call
inc
loopne
fldcw
insb
dec
lods
testl
mov
ret
mov
hlt
rol
dec
lock
xor
push
in
cmpsl
fldcw
add
popa
xchg
mov
sub
jns
mov
sub
fidivrl
in
sbb
dec
inc
outsb
sar
ret
insl
scas
mov
or
or
dec
inc
xor
cmovnp
dec
and
hlt
push
rorb
out
mov
bound
dec
icebp
jnp
test
sahf
sub
shlb
cmpsl
stos
mov
cs
bound
pop
mov
pushf
ret
loopne
push
jo
adc
lcall
insl
lods
xlat
outsb
sbb
mov
xor
stos
int3
sub
repnz
lcall
or
addl
add
pop
pop
mov
sbb
mov
int
jle
out
hlt
sub
ffree
fcom
movsb
and
pop
popa
mov
outsb
mov
push
xor
mulb
cmc
jne
or
jnp
lock
xchg
andl
sbb
das
xchg
xor
gs
xlat
hlt
js
dec
popa
fldenv
lret
testl
cmp
pop
jmp
pop
jp
enter
iret
sbb
fs
fwait
mov
insl
imul
sub
test
pop
mov
inc
jl
adc
daa
daa
out
xor
dec
mov
leave
shll
ret
add
push
data16
loopne
mov
lds
andb
mov
imul
pop
sbb
out
push
add
je
fdivs
fcoms
cmp
mov
mov
jmp
sbb
fcomps
fstps
subl
lods
push
dec
js
adc
push
push
sub
xor
mov
fucomip
mov
pop
jae
aad
cli
repnz
inc
mov
mov
fs
add
mov
ret
mov
lock
or
adc
cmp
mov
mov
into
pop
add
sub
cmp
pop
aas
mov
pop
daa
and
push
pop
imul
mov
jbe
cmpsb
push
adc
pop
cmp
cltd
int3
jl
and
add
jo
xchg
mov
mov
mov
jne
repnz
mov
adc
aad
loopne
sub
pop
xchg
imul
jne
push
fbstp
out
lret
mov
fxch
xlat
adc
js
and
arpl
lcall
sbb
cmpsl
dec
stos
or
and
mov
mov
pop
push
jb
sbb
dec
lods
jmp
dec
sub
outsl
sbb
cmp
mov
jne
dec
inc
stc
int3
xchg
inc
out
in
es
incb
mov
ss
stos
sbb
sbb
mov
sub
add
mov
jns
xor
out
out
mov
jecxz
pushf
xchg
bound
dec
in
sar
or
and
or
adc
push
je
xchg
or
jmp
test
xor
push
out
idivb
adc
aad
ss
jl
aaa
out
testl
out
into
daa
push
pop
clc
or
mulb
push
notb
outsb
leave
push
lret
out
movsb
push
stos
cmp
out
pop
jns
and
scas
pop
pop
stc
shll
xchg
or
or
lea
out
add
iret
jne
insl
cld
push
jp
iret
sub
outsl
sbb
dec
cli
sbb
sbb
lcall
inc
dec
aaa
decl
sahf
insb
push
mov
in
cmp
cld
es
add
mov
test
dec
xchg
sbb
mov
xchg
and
sub
mov
pop
std
in
dec
mov
hlt
insb
pop
pop
out
inc
jne
mov
imul
pop
lods
int3
add
loopne
cmp
loopne
dec
sahf
xor
mov
imul
sub
into
loopne
shlb
jl
sub
sbb
cmpsb
jmp
lds
je
aad
imulb
cmp
lods
stos
mov
test
cli
jmp
xchg
repnz
repz
test
mov
clc
fadd
loopne
loope
cmc
mov
frstor
data16
mov
mov
cwtl
in
pop
fisubl
andb
mov
sbb
daa
pop
mov
mov
push
lret
popfw
mov
mov
xchg
jns
push
rcrb
pop
cld
or
mov
ffreep
jl
ja
mov
or
lock
pop
cwtl
adc
and
out
into
mov
fisttpl
push
movsl
push
adc
xchg
hlt
ss
inc
leave
int
ret
fs
mov
cltd
xorl
in
shll
mov
in
fisttpll
jns
inc
jle
lret
cmp
or
out
sub
jge
jl
bound
inc
add
xchg
push
in
cwtl
lock
jl
sub
out
es
aam
xchg
rcrb
pop
jne
gs
jnp
gs
xchg
out
cmpsl
jmp
pusha
jg
sub
pop
sub
dec
mov
or
stos
in
aas
dec
mov
addr16
pop
pop
push
adc
lock
addr16
mov
scas
cld
and
pushf
out
in
mov
shr
push
mov
mov
lcall
pushf
mov
jno
xchg
lcall
or
movsl
and
gs
popa
bound
loop
fldenv
popf
hlt
iret
cmp
out
add
std
cmp
enter
loope
or
mov
cmpsb
mov
sbb
lods
sahf
aad
shrd
xchg
rcrb
sub
fwait
movsb
ss
pop
daa
pop
stos
popa
pusha
mov
mov
ret
or
out
sbb
jo
mov
inc
push
insl
fwait
pop
push
jbe
push
cmp
and
jb
ret
mov
enter
lea
idivb
pop
lret
xchg
inc
scas
jae
incb
lds
and
cltd
mov
in
mov
or
and
mov
cld
xchg
dec
jo
dec
cmpsb
jle
xor
xchg
sbb
cmp
cmp
sbb
iret
dec
mov
data16
dec
sub
cmp
xor
sbb
in
imul
mov
sub
js
cli
sbb
mov
lods
sti
cs
jb
ljmp
lods
mov
clc
mov
fwait
push
pop
jg
stos
sbb
in
ret
xor
sbb
add
sti
dec
subl
jb
sub
xor
push
loopne
inc
jge
leave
fldpi
adc
ljmp
xor
iret
testl
sbbb
push
loope
pop
mov
push
pushf
call
decb
mov
cwtl
in
in
popf
mov
xor
movl
fsub
pop
int
daa
mov
in
mov
lods
std
jno
ret
test
push
xchg
fs
aam
ficomps
pop
int3
jns
or
lahf
nop
enter
ds
lahf
sti
add
rorl
out
jnp
cmpsb
mov
seta
mov
push
das
mov
pop
dec
lea
xchg
lret
jge
dec
jbe
cmpsb
push
or
andb
jge
int3
or
cmp
subb
sub
mov
int3
pop
mov
dec
iret
cmp
cmpsb
pop
add
cmp
jns
lea
sub
sub
and
arpl
inc
dec
sbb
lock
outsl
popf
xchg
repnz
nop
lcall
and
adc
test
or
fmulp
gs
les
leave
sub
push
int3
pop
dec
jns
bound
push
push
cld
dec
je
test
fidivrs
nop
mov
iret
out
cwtl
xchg
inc
mov
pushf
lcall
lods
cs
insl
mov
mov
cld
aas
inc
lods
adc
lods
push
xchg
insl
xchg
iret
xchg
repnz
arpl
dec
jne
pop
out
mov
xchg
xorb
call
sti
cwtl
popa
push
pop
dec
in
mov
mov
cmpsb
cli
sbb
and
cltd
ss
jecxz
dec
sub
jecxz
jbe
or
mov
imul
orl
or
sbb
shl
xchg
adc
pop
jle
adc
fnstenv
xchg
pushl
xchg
pushl
mov
ljmp
daa
outsb
in
cmpsb
popf
adc
or
xchg
sbb
jae
xorl
or
cmc
ret
negl
inc
mov
imul
pop
cmp
unpckhps
mov
pop
divb
fwait
int
cmp
in
cmc
jo
movsl
xchg
mov
jle
lods
pusha
jl
andb
ljmp
test
xchg
push
mov
in
cld
mov
or
or
sub
dec
enter
push
shrb
or
sub
adc
sub
cmpsb
pop
adc
scas
inc
and
adc
loop
test
movsl
call
stos
adc
aad
mov
dec
fisubrs
jmp
adc
jle
jns
and
aas
loop
fstp
jnp
enter
xor
pop
push
xlat
xor
aaa
dec
nop
ja
and
fistpll
jge
pop
cmp
call
ss
test
jo
mulb
loope
jecxz
icebp
stc
jmp
jnp
test
fdivr
or
das
lretw
imul
fldl
aad
call
sti
sbb
into
fiaddl
or
inc
push
daa
mov
xchg
call
and
inc
inc
enter
ret
jg
xchg
nop
push
pusha
in
push
es
lea
mov
icebp
mov
lret
adcb
sbb
lods
push
lahf
xor
imul
repnz
neg
cmpsb
pop
in
je
and
pop
push
fst
jle
push
xor
xor
mov
cmp
daa
push
mov
or
inc
rclb
inc
sub
jb
lds
ljmp
sbb
insl
aad
add
cmpsb
fmull
jns
cwtl
push
lods
jbe
xor
test
test
or
cmp
fbstp
jno
rcrb
jge
and
les
dec
adc
xchg
xchg
push
out
push
mov
fcmovnu
mov
int3
ret
xlat
push
xchg
hlt
ret
push
mov
data16
mov
adc
insb
jo
push
mov
imul
pushf
pop
xor
cmpsb
xor
push
jne
cmpsb
jge
repz
sbb
xchg
imul
mov
icebp
cld
in
add
roll
dec
andb
fnstsw
xor
push
mov
shlb
mulb
insb
mov
mov
mov
fnstenv
ljmp
xchg
push
aas
and
decb
sub
cmp
pop
dec
fldcw
xchg
cwtl
jp
jmp
int
adcl
pop
mov
xchg
push
sub
test
jge
xchg
jmp
dec
mov
das
ret
xorl
xor
inc
pop
daa
sub
inc
imul
test
in
mov
add
pop
lcall
pop
and
les
xor
mov
or
fsubrl
xchg
ljmp
sbb
addl
sbb
lahf
mov
movsb
jae
fwait
shlb
push
icebp
xchg
lock
pop
mov
rcrl
dec
adc
imul
inc
push
into
add
imul
dec
in
ficoms
or
testb
sub
jg
in
jno
lret
push
fwait
sti
jmp
stc
mov
test
pusha
and
in
addr16
or
ljmp
inc
fs
aad
out
les
stc
jge
push
popa
lock
je
inc
hlt
adc
imul
adc
jp
stos
push
push
decl
or
jg
insb
or
xchg
sub
cld
xchg
dec
inc
xor
int
add
mov
ret
mov
aas
clc
inc
xchg
pop
popa
sbb
push
int3
push
mov
add
jge
jnp
xchg
fmull
mov
aaa
out
pop
dec
sub
testb
cmp
mov
jmp
lea
adc
mov
pop
pop
inc
je
sbb
xor
popa
add
iret
dec
cwtl
fistl
fs
or
add
mov
andb
enter
jnp
xor
loop
fcompl
out
repnz
mov
pcmpeqb
out
insb
inc
int3
xchg
xchg
xchg
ret
lret
cwtl
adc
pop
sbb
jmp
mov
scas
cmp
ret
pop
pop
add
popf
leave
flds
sbb
pop
lret
add
sbb
inc
xor
out
xchg
adc
mov
inc
les
aaa
xor
jns
in
ficompl
inc
push
xchg
sbb
fwait
rol
dec
aad
pop
mov
and
jg
cmp
pop
nop
mov
sahf
inc
xor
and
xchg
push
fidivrl
ffree
dec
lret
inc
and
lcall
add
inc
lret
popa
xor
ret
push
fwait
jne
and
loope
pop
test
mov
adc
fbstp
jo
adc
cmp
and
and
test
mov
in
dec
push
add
mov
xchg
test
jg
jne
xor
xchg
cmpsb
or
lret
clc
pop
xor
hlt
stc
int
int3
jae
mov
sub
dec
push
pop
imulw
into
out
dec
xchg
jo
inc
fldl2t
cltd
je
rorl
je
std
jl
test
mov
inc
push
sub
push
rol
mov
push
lds
mov
int
and
sbb
scas
movsb
leave
rcrl
add
fimull
pop
ja
ss
sbb
dec
arpl
pop
dec
push
push
xor
pop
sbb
fwait
mov
adc
pop
repz
dec
jmp
xorl
repz
or
lods
mov
and
int3
xlat
fidivl
jnp
push
imulb
cmpsb
cmp
fld
mov
or
mov
addb
xchg
mov
cmp
cmpsb
fsubs
sub
sub
clc
push
shlb
incl
xor
jg
push
addr16
cmpsl
mov
repz
pop
fisubs
pop
icebp
in
inc
xchg
cmp
outsb
les
xor
cltd
mov
xchg
push
test
or
jae
sub
cmp
shlb
fsubr
out
dec
lock
push
mov
mov
lods
pusha
cltd
mov
mov
lock
push
cmc
pop
mov
cli
pop
dec
out
or
clc
call
jbe
dec
loop
jl
call
mov
imul
mov
flds
xchg
mov
cmpsl
imul
mov
sub
mov
arpl
jnp
dec
jg
mov
push
cmp
cltd
adc
rol
sbb
int3
cmp
push
jge
mov
sbb
inc
dec
loop
sbb
aad
aaa
adc
nop
pop
cmp
out
lea
mov
cltd
decb
push
adc
cmp
or
mov
cmp
movsb
outsl
call
movsl
mov
adc
and
scas
lods
pop
mov
pop
loop
scas
sub
push
scas
mov
sbb
fidivrl
or
lahf
cs
sbb
ret
jmp
test
mov
mov
pop
outsl
popa
jecxz
push
repz
js
cs
mov
pushf
popa
inc
in
ljmp
adc
push
ss
roll
scas
add
mov
rcl
mov
test
mov
push
xchg
push
xchg
mov
int3
and
cld
cmp
sbb
cmp
mov
pusha
mov
pop
addl
movsb
pop
in
sbb
insl
adc
nop
jns
arpl
mov
subl
pop
push
pop
sbb
add
jo
test
add
sbb
rorl
sbbl
stos
adc
dec
adc
mov
xchg
mov
roll
add
mov
out
test
jmp
mov
inc
and
sub
ds
jbe
jecxz
push
push
dec
jle
lods
jo
fcmovbe
pop
lcall
outsl
mov
xchg
cld
aaa
add
mov
int
into
jnp
mov
mov
pop
std
fnstsw
subb
mov
out
jg
jge
das
push
cmc
add
xchg
ja
adc
scas
sbb
xchg
add
sub
ja
aad
mov
lods
or
aas
fisubl
sub
in
xchg
ljmp
loop
fcompl
sti
daa
dec
out
and
add
xor
and
out
out
popa
jo
in
pop
sub
out
std
pop
in
xor
xchg
cmpsl
leave
xchg
leave
xchg
in
test
add
sarl
fcmovnu
push
popa
rclb
shlb
and
dec
aas
add
cmp
sbbb
mov
test
dec
pop
xchg
jp
aam
add
stos
sub
or
xchg
repz
notl
mov
jb
arpl
imul
imul
flds
xchg
adc
js
jne
fdivrs
out
cmpsl
insl
sarl
push
dec
xchg
aad
sbb
jb
mov
mov
testb
test
ds
dec
pushf
or
insl
xchg
lcall
sub
push
sub
inc
pop
mov
pusha
inc
push
pushf
mov
stos
wbinvd
mov
leave
fldcw
xlat
dec
or
in
and
out
in
push
loop
jo
pop
cmp
jo
aaa
dec
and
jg
cmp
jg
push
mov
pop
push
fwait
imul
pop
or
jb
mov
adc
stos
shlb
leave
into
dec
mov
gs
into
ret
cmpsb
ja
pop
ds
das
lret
xor
imul
movsl
push
dec
push
sbb
pop
push
xor
adc
lods
mov
push
mov
xorl
mov
xor
test
pushf
inc
adc
dec
sbb
and
cmc
flds
in
inc
push
and
jb
sub
jp
rcrl
repnz
stos
seto
or
push
into
in
popa
orl
aaa
ret
and
data16
jbe
in
add
in
jmp
xchg
xchg
inc
in
aad
dec
stos
add
mov
inc
xchg
push
jno
aad
push
fs
shll
push
into
popw
jbe
sbb
int3
lock
fwait
and
lcall
adc
jmp
jb,pt
adc
inc
xchg
mov
mov
jp
jne
pop
xor
lret
movsb
xorb
fs
in
and
lods
mov
sahf
int
and
pop
pushf
cmp
jno
sarl
xchg
inc
push
inc
lret
mov
mov
repnz
xor
cmc
or
push
mov
in
aad
fisttps
js
push
push
mov
cmpsb
add
mov
mov
aaa
pushf
call
add
mov
pop
adcl
xorl
adc
dec
mov
xlat
jl
fiadds
out
inc
sub
adc
addr16
insb
and
imulb
fsubp
pop
mov
mov
sub
sti
rorb
fdivr
call
xor
dec
mov
lcall
bound
movsl
cmp
xchg
sbb
std
mov
or
push
mov
xor
dec
sbb
test
jne
xlat
dec
std
mov
mov
sub
mov
mov
jns
movsb
inc
pusha
es
lcall
mov
cld
adc
fimull
aam
mov
int
inc
arpl
ds
lea
incb
out
stos
pop
and
pop
fdivrl
mov
sbb
shl
xor
gs
stc
fwait
mov
in
je
arpl
jne
addr16
inc
jmp
push
or
push
movsb
lds
das
add
pusha
outsl
ret
dec
mov
imul
xor
imul
pop
inc
fdivs
out
mov
test
xorl
addr16
mov
or
dec
add
loop
inc
sbb
cmp
push
enter
xor
xchg
cmp
and
lea
inc
and
inc
cmp
jge
fst
or
mov
jne
les
pop
cmpsb
fsubrs
cmp
or
pop
popa
lods
js
fisubrl
insl
add
mov
push
shl
push
test
jle
pop
pop
push
xchg
xor
dec
outsl
lds
push
in
dec
movsl
jae
lds
and
mov
jnp
jge
pop
pop
sti
lds
jl
mov
movl
fistps
inc
fs
sti
adc
sub
cld
xor
mov
out
int
xchg
stc
ffreep
jb
xor
jo
mov
sub
rcrb
mov
sahf
clc
in
and
push
cmpsl
fisubrl
adc
lcall
jbe
fists
and
mov
dec
cld
andl
lock
shll
or
in
bound
push
lea
stc
xlat
movsb
pop
mov
adc
adc
push
jecxz
mov
xor
mov
push
test
faddl
movsb
repz
pop
pop
dec
sahf
jns
pushf
xor
lret
adc
mov
push
movsb
scas
jne
push
fs
mov
mov
imul
jmp
outsb
scas
inc
or
xor
lcall
outsl
sub
mov
cltd
mov
xor
int
inc
jle
mov
inc
pusha
lcall
stos
sub
adc
out
outsb
xchg
divl
jno
mov
mov
hlt
test
cmpsb
aam
loopne
cmp
xlat
pusha
xor
dec
fdivrs
test
imul
nop
xchg
xor
testl
incb
inc
lds
fs
scas
mov
adc
sub
insl
cld
aaa
lahf
rclb
mov
jmp
rcrb
adc
cmp
sti
stos
xchg
xchg
dec
and
push
ficomps
and
outsb
cmpsl
popa
sub
and
in
hlt
dec
dec
mov
jae
jle
mov
and
dec
pop
div
jo
mov
xor
adc
fisttpll
inc
add
je
adc
int3
rorb
subl
pop
sbb
outsl
inc
adc
stc
icebp
std
popf
jns
jns
aad
lahf
pusha
dec
cmpsb
push
fnstenv
lds
divl
lcall
sar
jno
orl
adcb
lcall
and
fiadds
jae
xor
fs
lret
pushf
push
jne
add
pop
int
jnp
sub
loop
xchg
sub
fs
cs
mov
rcll
add
rorb
push
push
push
cmpsl
leave
cmp
into
or
mov
pusha
push
jbe
cmpsl
pop
cld
sbb
shll
icebp
insb
movsb
outsb
push
fldcw
es
out
push
rorl
add
test
cmc
bound
arpl
adc
adc
pop
xchg
inc
aas
clc
leave
mov
icebp
arpl
jns
movsb
cmpsl
add
adc
jge
ds
imul
push
into
mov
clc
addr16
cmpsl
xchg
outsb
mov
mov
outsl
add
xor
mov
rclb
pop
xor
adc
pop
sarl
fwait
adcl
sbb
or
inc
inc
lock
jnp
stc
stos
pop
jno
loopne
push
loope
outsb
or
lret
sbb
or
cltd
mov
test
in
xchg
loope
mov
adcl
push
mov
jg
cmp
cld
pop
sahf
inc
and
fisubs
mov
xchg
fidivrs
and
scas
into
nop
jnp
bound
dec
imul
mov
jmp
push
inc
sahf
out
es
mull
sbb
test
jbe
dec
out
scas
insb
into
push
ljmp
sbb
ret
mov
out
sub
out
rcl
shrb
mov
or
je
bound
daa
jl
dec
pushf
in
xor
lret
in
mov
insl
cmp
ljmp
bt
push
push
xchg
mov
ds
dec
mov
cmp
mov
push
adc
fisubrl
cli
jne
cs
or
lahf
popf
test
xor
mov
pop
int
flds
je
dec
mull
bound
add
stc
sub
jbe
rcll
mov
mov
add
push
aad
scas
mov
jmp
into
inc
add
aas
sbb
xor
sti
scas
sub
mov
js
ja
aaa
and
fnstsw
add
mov
dec
and
or
pop
int
mov
leave
sbb
icebp
mov
sahf
xchg
xchg
xchg
movsb
push
xor
jno
into
add
fcoms
sbb
adc
xchg
mov
jb
cmp
xlat
imul
rorb
jno
cmpsl
dec
inc
lds
iret
add
shlb
push
jne
inc
jle
push
mov
and
imul
push
cmp
push
test
lahf
shrl
add
jg
push
fcom
cmc
push
push
sahf
mov
pop
cld
idivb
cmp
pusha
pop
jge
aam
icebp
inc
out
mov
aaa
xor
aas
jmp
aas
mov
dec
in
jae,pn
sub
dec
ret
xor
pop
jecxz
mov
or
xchg
pop
lret
mov
dec
dec
fdiv
mov
cltd
push
hlt
stc
stc
xchg
js
jge
push
xchg
hlt
xchg
push
mov
hlt
cli
jb
inc
fists
adc
jo
jnp
sti
xchg
rol
dec
mov
inc
mov
leave
clc
out
dec
xchg
push
jg
jae
data16
fabs
add
imul
push
jmp
scas
sti
pop
in
imul
adc
cwtl
pop
popf
imul
or
mov
popa
jo
ret
mov
jbe
subl
int3
adc
aam
data16
std
pushf
ljmp
and
lock
mov
xor
pop
aad
xchg
dec
jno
xlat
jmp
mov
sbb
and
ss
mov
xchg
rclb
xchg
call
cwtl
test
repnz
popf
out
lret
aaa
push
lea
mov
push
aas
pushf
lret
sub
and
push
in
push
push
test
loope
lcall
test
xlat
lods
adc
add
inc
or
inc
add
je
jge
adc
mov
and
dec
mov
xchg
stos
inc
sbbb
lret
lock
idivb
cltd
dec
mov
rcrb
add
fimull
iret
dec
sub
jns
dec
pop
mov
ret
shll
push
inc
xchg
in
add
daa
bound
adc
jae
out
in
xor
adc
push
ret
xchg
loopne
or
jae
hlt
xchg
sub
xchg
add
mov
xchg
movsb
jo
dec
es
nop
icebp
jb
xchg
stos
mov
mov
popf
add
jl
pop
mov
sti
pop
mov
xchg
inc
push
sti
or
mov
jns
addr16
insl
ja
shll
arpl
fstpt
cmp
pop
xchg
sbb
cld
jp
sub
outsb
out
mov
movsb
test
out
xchg
jne
popf
push
pop
repnz
xchg
mov
test
xchg
faddl
leave
jle
lods
outsb
adc
lcall
sbb
xchg
leave
sahf
pop
aad
push
movsl
movsb
xchg
das
cmp
cmp
mov
or
sub
inc
and
add
pop
mov
clc
aad
cmp
xchg
fisttpll
push
pop
shll
fmul
int3
inc
lcall
cmp
enter
test
lds
mov
jge
in
fs
push
mov
sub
xor
into
js
xchg
dec
cmpsl
stos
adc
rcrb
add
test
cmp
fs
add
jge
inc
sub
mov
jge
xchg
popa
hlt
out
mov
mov
xchg
cld
adc
xchg
cmpsl
or
xor
lcall
and
mov
daa
add
test
pop
jg
insb
jp
das
mov
scas
push
pop
arpl
ja
fmull
dec
or
dec
jns
sub
pop
test
inc
lock
jnp
int
ret
mov
mov
add
pop
or
push
movsl
in
sbb
mov
inc
insb
push
loopne
aas
fdivs
and
fisubl
mov
sti
xchg
jp
stc
test
adc
ret
adc
fisubrl
enter
push
daa
sub
fiadds
sub
pop
and
mov
lds
mov
mov
mov
xchg
jnp
push
insl
in
add
push
push
out
mov
out
ret
dec
loopne
mov
sarb
mov
out
je
ret
dec
mov
xor
jl
repz
testb
push
adc
insl
sti
sub
fdivl
andb
add
out
js
and
ljmp
enter
icebp
pop
std
loopne
xchg
imul
nop
add
rorb
dec
mov
xchg
pop
jmp
add
sar
mov
inc
popf
cmpsb
stos
push
iret
add
sub
sub
or
loopne
sbb
fsubs
js
out
dec
dec
adc
push
xchg
adc
inc
pop
pop
xchg
mov
sub
dec
cmpsl
outsb
fisubl
in
cmpsl
push
mov
add
mov
jns
ja
aad
scas
cld
rcr
sbb
out
cmp
pusha
sub
loopne
and
push
hlt
push
call
jp
xchg
mov
adc
inc
imul
imul
test
imul
jno
cmp
icebp
xor
test
scas
pop
cmpb
sbb
pop
lahf
fs
add
movsl
or
ljmp
scas
insb
xchg
push
divb
mov
test
and
ret
and
xchg
jecxz
std
int3
pop
dec
nop
and
push
adc
xor
inc
sbbb
imul
push
js
shrb
mov
loopne
nop
inc
mov
add
pop
out
lods
cmpsl
jp
test
rorl
mov
in
adc
repz
pop
jno
in
fsts
in
xor
rcrb
inc
push
je
ljmp
gs
dec
les
xchg
adc
push
dec
mov
das
dec
into
movsb
call
out
mov
in
and
adc
shrb
xchg
and
int
sahf
pop
or
sti
test
mov
sub
outsb
icebp
sub
in
in
scas
adc
lret
mov
push
mov
and
addr16
or
ja
cmp
mov
push
inc
xchg
jmp
xor
rclb
shlb
pop
push
sbb
add
idivl
push
or
or
frndint
test
imul
inc
sbb
mov
pop
mov
pop
dec
and
cwtl
stos
stc
add
adc
mov
and
pusha
push
aas
inc
mov
enter
xor
repz
dec
es
fiaddl
push
xchg
adc
cld
adc
push
jnp
push
imul
leave
mov
xchg
pop
cmp
jl
test
and
aas
mov
cltd
cmp
lds
or
pop
out
add
ret
popf
pop
jg
mov
cld
shrb
jmp
in
cmp
jne
and
dec
pushf
movsb
pop
sbbb
push
xchg
pop
jecxz
dec
or
inc
pop
in
xchg
mov
ror
gs
sub
es
dec
pushf
adc
mov
add
out
bt
movsb
pop
and
aad
ds
cmpsb
cmp
xor
push
mov
xor
lret
cmp
jnp
mov
repnz
mov
add
or
and
cmp
aam
insb
mov
jl
in
in
ja
adc
sarb
sbb
jnp
aas
jo
jne
aad
insl
push
jb
xchg
and
mov
sub
jae
xchg
adc
rorl
cmp
xorl
andl
sbb
or
movsl
repz
sbb
in
call
ljmp
ret
jne
fwait
add
inc
in
fsubrs
mov
in
dec
mov
imul
jecxz
add
decl
cmp
xchg
inc
push
sahf
mov
inc
ja
pop
addr16
cwtl
xchg
push
push
add
sub
daa
or
sbb
cmp
jl
xor
int
mov
loope
push
mov
mov
insl
sbb
xchg
mov
hlt
sub
mov
mov
insl
mov
cmpsb
test
jae
cltd
add
lds
push
insb
clc
aad
mov
mov
rclb
insb
inc
lods
orb
lea
cmpsb
mov
sbb
frstor
jmp
xor
push
mov
jb
cmc
add
mov
fsubl
fcomps
and
and
ret
pop
jnp
int3
fildl
or
hlt
mov
dec
mov
mov
cmp
and
shll
inc
pop
sbb
xor
jb
or
test
fldt
and
cmp
xor
sub
xor
mov
mov
lds
or
popa
mov
data16
icebp
out
or
out
sbb
shll
sub
mov
pop
icebp
mov
sub
mov
mov
jmp
or
out
rcr
mov
mov
dec
mov
pop
inc
sbb
jns
jo
les
jge
xor
pop
out
or
xor
lcall
and
sbb
and
pop
mov
inc
fidivs
mov
cwtl
clc
jecxz
pop
dec
push
mov
ja
fwait
dec
std
cltd
jns
shll
push
ret
lock
mov
pop
mov
mov
shlb
sub
in
divl
push
ret
hlt
lods
js
inc
pop
pop
mov
jnp
xchg
dec
pop
mov
dec
and
nop
sahf
mov
shrb
or
lret
aad
push
jne
push
pop
add
pop
push
dec
hlt
mov
xlat
jecxz
xor
add
jae
or
inc
add
lcall
and
and
inc
pop
decl
repz
rcrb
ret
cwtl
or
addl
lret
cmp
cmc
inc
insb
or
outsb
adc
jns
jp
fst
mov
testl
pop
fdivrp
sub
or
sbb
repnz
mov
mov
lods
stos
shrl
mov
int
in
push
inc
push
adc
repnz
pop
inc
hlt
xchg
pop
dec
xor
xor
add
and
dec
stos
mov
das
cld
inc
loop
jns
clc
pop
les
stos
scas
lcall
jmp
push
aaa
sarb
lea
mov
in
ret
lea
test
push
xchg
and
xchg
fistpl
adc
test
rclb
dec
stos
es
ror
xchg
out
sbb
and
pop
jp
jbe
or
fstpt
lahf
rol
lods
icebp
pop
in
cmp
cmp
test
loopne
mov
push
sti
ss
pop
in
cmp
repz
in
leave
cld
inc
push
aad
addl
jae
or
inc
lahf
inc
add
adc
jae
jg
dec
int3
sti
and
int3
cmp
and
jo
inc
std
repz
rorb
pop
ljmp
enter
subl
jns
xlat
imul
lret
or
pop
ljmp
cmp
cmp
add
adc
xor
sti
aam
cmp
jg
push
jle
insl
and
shl
jg
lock
in
adc
xchg
adc
popa
sub
xrelease
sbb
mov
and
or
sub
cmp
cmc
out
jo
out
testl
sub
aas
ja
cltd
aas
inc
leave
into
jns
jae
and
testl
loope
test
xlat
daa
int3
and
dec
rcrb
inc
stc
test
and
in
xchg
js
mov
mov
out
clc
push
pop
mov
adcb
pushf
in
dec
iret
sbb
insb
not
push
and
inc
pop
add
rorb
je
fstl
jo
idivl
push
popf
or
dec
cmpb
push
daa
daa
das
bound
sub
jl
mov
sub
mov
testb
lahf
xchg
popa
hlt
in
mov
ss
jbe
cmc
cmp
xchg
inc
adc
fsubs
push
movsb
jnp
xchg
in
push
movsl
mov
mov
push
add
icebp
mov
mov
adcl
iret
adc
movsl
mov
test
ss
dec
pop
nop
mov
movsb
inc
dec
adcb
mov
cld
mov
sbb
daa
pop
and
pop
xor
cli
icebp
xchg
sbb
or
into
push
sub
mov
and
lea
dec
lds
push
lock
mov
dec
inc
rcl
test
scas
inc
js
sarb
adc
sbb
insb
mov
jge,pn
jge
jmp
int3
push
push
fnclex
mov
jl
test
xchg
test
cmp
and
or
lret
test
mov
shll
out
popf
dec
and
xchg
pop
sarb
fs
or
and
adc
or
adc
stos
adc
push
or
test
outsl
test
or
mul
xor
mull
mov
enter
mov
in
popf
mov
inc
dec
jns
mov
dec
jae
lea
rcrb
jmp
mov
sbb
fiadds
sbb
ljmp
dec
or
sbb
dec
or
jl
xor
out
cmp
lret
ja
sub
adc
hlt
test
or
iret
mov
jg
cwtl
and
inc
pop
push
cmp
pop
fidivrl
pop
push
mov
pop
sub
data16
scas
and
add
sbb
pop
mov
xchg
cld
aas
gs
sub
mov
mov
inc
push
xlat
fdiv
enter
fistpll
xchg
jne
jmp
mov
xor
mov
mov
xchg
mov
hlt
mov
push
ss
rcrl
mov
test
int
push
sbb
or
bound
xor
fbstp
imul
jle
cmp
xchg
out
or
and
inc
popf
dec
mov
cmp
mov
xchg
outsl
mov
inc
test
and
popa
jno
pop
adc
dec
xchg
adc
adc
fisubrs
test
sub
clc
outsb
sbb
pop
xor
mov
scas
mov
insl
sbb
shlb
sub
mov
aam
mov
sub
test
popf
imulb
aad
xor
or
mov
xchg
icebp
into
mov
jmp
xor
add
push
fsubrl
aas
push
pop
and
loope
and
sbb
or
andl
cmp
dec
sbb
lock
mov
stos
xor
popf
mov
mov
and
pop
inc
pop
ja
jmp
inc
and
sbb
sub
in
pushf
mov
jo
cmp
adc
stos
and
or
shll
inc
xor
lret
arpl
hlt
xor
scas
mov
daa
aam
repz
bound
in
xchg
xor
inc
jecxz
roll
inc
inc
insb
inc
repnz
push
jae
sub
cs
ljmp
inc
mov
and
enter
pop
ret
sbb
push
jg
aaa
add
add
inc
mov
ret
jno
jmp
into
arpl
mov
sub
icebp
cmp
and
inc
push
jg
xchg
cwtl
cmpsl
cmp
int3
inc
and
xor
add
mov
sbb
aaa
jns
lahf
ljmp
inc
push
ds
sbb
jmp
fsubs
imul
dec
xor
clc
scas
dec
ja
in
faddl
mov
in
call
scas
daa
pop
sbb
adc
mov
sbb
cli
mov
pop
xchg
and
andl
movsl
and
cli
add
mov
mov
out
add
aaa
and
and
jp
jb
js
adc
mov
aaa
nop
fsincos
add
outsl
in
pop
orb
push
xor
lcall
mov
xor
addb
arpl
push
sub
adc
inc
cmp
test
mov
pop
cmp
sarb
xor
jbe
icebp
jns
call
lret
dec
push
shrd
push
adc
out
sarl
jecxz
negl
pop
pop
pop
sbb
in
cmp
inc
xchg
shlb
outsb
sbb
adc
sub
inc
or
adc
push
xchg
cmpsb
bound
clc
xchg
arpl
xor
push
jb
inc
xchg
lods
repz
aaa
push
out
int3
sbb
sbb
xchg
test
and
push
test
mov
jmp
call
hlt
mov
dec
ljmp
loope
fcmovbe
cmp
shlb
cmpsb
jb
jb
aas
sahf
fs
icebp
push
dec
xchg
pop
adc
lret
cmp
mov
enter
aad
leave
movsb
mov
icebp
mov
pop
orb
pop
repnz
inc
out
jo
xchg
mov
push
aas
cmp
leave
jb
out
jns
inc
test
stos
in
xor
adc
rcrb
mov
pop
mov
add
es
sub
sub
mov
fdivrl
imul
pusha
repz
mov
iret
scas
and
inc
in
jecxz
push
add
xorb
aaa
dec
int3
mov
sub
and
imul
pop
mov
dec
xor
icebp
in
and
ds
xor
ljmp
rcrb
sbbl
mov
cmpsb
jl
dec
inc
mov
insw
in
les
call
pop
jl
mov
arpl
ret
mov
pop
stos
mov
jnp
leave
in
inc
or
movsl
outsb
out
leave
jbe
cltd
dec
xor
das
dec
in
cmpl
cmc
in
adc
mov
or
xlat
sub
inc
sub
stc
cmpl
mov
sub
cwtl
adc
fsubl
repnz
test
inc
js
xlat
inc
and
cmp
aaa
cli
sarl
decl
popa
mov
data16
push
arpl
xor
jge
mov
aad
pusha
imul
or
xchg
add
shr
jp
lcall
xchg
repz
push
mov
cwtl
adc
leave
mov
out
stos
mov
jnp
or
cmp
push
xchg
mov
iret
popa
das
inc
imul
popa
loopne
in
xchg
test
push
xchg
dec
into
dec
mov
xlat
xorl
ja
dec
lret
out
mov
mov
inc
in
jne
mov
push
cmp
int
cmpsb
jb
repnz
mov
or
push
jle
sahf
adcl
clc
cmp
mov
adc
jg
push
push
push
shlb
mov
sub
mov
push
push
dec
mov
jae
out
push
imulb
adc
inc
incl
outsl
xchg
sub
xchg
jae
sub
pop
mov
in
ja
jp
sbb
ja
shl
push
jmp
mov
stc
outsb
std
cltd
inc
add
push
push
push
adc
xor
and
push
sub
push
cmp
mov
pop
mov
xchg
sub
into
adc
push
das
ror
out
push
pop
mov
adc
mov
xor
adc
or
jb
int3
jbe
test
dec
fisubl
in
cld
loopne
js
mov
ret
sarb
pop
mov
ljmp
mov
stos
lea
shlb
push
mov
jmp
clc
fcmovbe
and
pop
es
into
cmc
movsl
shlb
sub
aas
mov
mov
loopne
sub
ds
ss
adc
sbb
sub
test
pop
push
inc
mov
jg
scas
cmp
mov
dec
cmp
std
sub
xchg
lcall
mov
rorb
lcall
mov
mov
sub
call
enter
or
enter
mov
lods
sti
inc
dec
aad
loope
mov
roll
loope
fwait
outsl
mov
jmp
and
movsl
jl
out
sub
xor
push
out
sbb
inc
orb
mov
add
sub
in
xchg
sbb
jp
gs
and
sbb
test
ljmp
mov
jl
mov
push
icebp
adc
ss
fnstcw
pop
or
mov
mov
cs
leave
test
clc
fidivrl
scas
push
cli
scas
jp
in
jp
cmp
xchg
aad
adc
jl
xchg
sbb
adc
lret
cmp
xor
je
in
test
sbb
xor
dec
ss
stc
addl
mov
ds
xchg
les
scas
movsb
add
daa
pop
sub
and
sub
xchg
add
outsb
loope,pt
add
test
or
pop
call
pop
sbb
pop
mov
outsb
xlat
ret
sbb
xchg
ds
stos
cld
dec
cltd
arpl
pop
inc
cmp
jnp
clc
adc
psubw
shll
push
jl
xlat
out
dec
enter
daa
push
inc
faddp
cwtl
loope
xchg
out
fldl
jp
outsl
xor
sbbl
lcall
or
dec
movsb
pushf
xor
shlb
mulb
fldcw
inc
in
addl
sarb
sbb
inc
adc
push
add
push
inc
mov
xor
sbb
jl
imulb
in
xor
jmp
call
loop
and
loopne
scas
or
sub
neg
outsl
enter
divb
mov
mov
jno
and
mov
icebp
xchg
je
rcrb
repz
sub
sbb
xchg
clc
imul
cmp
jb
js
mov
fsubrp
les
jb
das
jbe
mov
sbb
add
aad
pop
ja
push
cmpsb
stc
pushf
and
call
dec
test
pop
push
je
cmp
das
mov
adc
jp
out
mov
and
pop
js
sbb
xor
rorl
and
in
jl
inc
mov
sub
or
or
pop
out
sub
xor
mov
push
mov
sub
push
jmp
mov
add
leave
fwait
sbb
and
nop
xchg
cwtl
lret
shr
add
jge
in
gs
pop
out
jmp
cmp
test
dec
xor
fistpl
adc
cmp
fstpl
mov
rcrb
jle
add
add
insb
add
mov
xlat
push
cmp
push
cmp
iret
jmp
push
or
pop
js
scas
jno
loope
andb
es
push
adc
aad
pop
ret
jbe
cmp
push
xchg
fdivr
rol
lahf
nop
or
out
xchg
pop
add
hlt
jno
lock
add
pop
fs
jp
push
popf
bound
rcll
in
cmpsl
mov
xor
jae
mov
fsts
orl
jecxz
jmp
repz
or
and
rclb
xchg
cmp
mov
xchg
sbb
mov
in
lahf
pop
inc
repz
jmp
mov
lahf
mov
jns
cmc
sub
fdiv
fcoml
imul
or
xchg
incb
jno
lods
mov
sub
in
cmpsl
leave
sahf
pop
mov
cmp
lds
inc
inc
push
stc
sub
out
outsl
cmp
pop
cmp
out
ds
scas
adc
pop
mov
call
imul
movsb
mov
xor
rol
inc
outsb
call
push
jnp
in
stc
cli
in
cmpsb
daa
xchg
hlt
arpl
xlat
int
sbb
sub
rcrb
into
cmp
ja
push
out
lds
andb
sbb
jg
push
std
scas
inc
daa
negb
push
repz
rcrl
sub
addb
lods
mov
sbb
push
mov
lods
push
insl
imul
push
xchg
sub
shrl
mov
lds
fidivrs
sbb
pop
loope
lahf
outsl
data16
clc
ficoml
jnp
jl
or
sahf
sahf
add
and
inc
lahf
xlat
jae
mov
ja
xchg
or
xlat
lock
xor
pop
fcmovnbe
lret
dec
nop
les
std
mov
jns
stos
int3
daa
and
pop
cmpsl
pop
aam
test
movsb
pop
sbb
xor
hlt
ds
ljmp
clc
jl
xchg
clc
in
js
pop
pushf
mov
xchg
cld
addl
pushf
push
sub
mov
test
mov
mov
cmp
jbe
out
mov
out
les
loop
fisubrl
sub
inc
lea
mov
nop
mov
pop
jl
or
out
hlt
fadd
dec
movsl
mov
mov
mov
out
insl
in
mov
lods
or
fldl
dec
aad
mov
in
inc
in
mov
scas
aas
sbb
and
addr16
dec
mov
mov
lds
push
lret
test
sub
pop
inc
add
dec
xor
xchg
push
push
movsl
jecxz
mov
pop
xchg
add
inc
adc
fs
sbb
out
rcr
stos
adc
cld
fidivrs
sub
inc
lcall
jb
clc
loopne
imulb
out
add
pop
dec
ljmp
xor
jp
or
xor
mov
mov
pop
je
push
cwtl
mov
pop
add
dec
dec
sub
decl
imul
ficoml
lahf
mov
movb
pop
and
fsubl
out
lret
inc
popa
sub
push
les
pop
inc
mov
mov
mov
xchg
fildll
sbb
fsubr
mov
xchg
sub
faddl
fdivp
xchg
cld
out
push
frstor
lods
cmp
sbbl
inc
mov
xchg
lods
pop
enter
jp
push
mov
ds
mov
or
call
mov
scas
pop
xor
xchg
or
fildll
ret
xor
dec
mov
les
cmc
in
jns
das
stos
sbb
shrb
sbb
cmp
cmp
xchg
push
ss
cmpsl
lods
add
pop
int3
cmpsl
mov
jmp
xchg
lods
aam
loop
sub
sub
pop
xchg
imul
pop
test
inc
mov
loop
sub
adc
and
mov
loope
add
cmp
in
and
push
ss
mov
stos
sti
movsb
dec
icebp
mov
sbb
and
imul
mov
add
fcoms
popf
arpl
xor
cmp
nop
sub
sub
sbb
cmp
icebp
add
push
pusha
mov
icebp
lret
je
or
xor
jmp
sbb
mov
adc
push
jne
subl
jbe
mov
and
xchg
roll
push
imul
sub
out
cmp
dec
jbe
insb
sbb
xchg
pop
mov
shrl
xor
imul
aaa
and
imul
bound
mov
out
cmp
inc
or
jecxz
and
and
pop
lods
push
push
or
sub
cli
sti
addr16
push
adc
movsb
cli
lds
call
or
std
iret
jmp
fsubl
sub
repnz
dec
mov
xor
insl
loopne
bound
and
orb
cltd
movsb
rcll
jmp
in
subb
push
movsb
movsb
jns
and
cmp
lea
xchg
stc
add
mov
rolb
fmul
sub
cld
fxch
repz
pop
shr
push
adc
mov
and
xchg
in
cmp
int3
mov
popa
pushf
adc
leave
icebp
dec
jae
sbb
orb
push
mov
add
cmp
xor
cli
and
mov
mov
adc
and
adcl
pop
and
mov
ret
andl
ja
add
idivl
cs
cmpsb
cmpsb
pop
sub
adc
jbe
lret
lock
lret
push
pop
pop
push
or
xor
nop
lcall
aam
stos
stos
movsb
jl
outsb
push
ljmp
pop
mov
jbe
mov
mul
in
fnstsw
push
sahf
daa
aas
ss
imul
test
call
cmp
inc
pop
fdiv
cmp
adc
test
popf
sub
out
imul
loopne
jo,pt
mov
scas
out
dec
pop
mov
inc
inc
mov
mov
pop
inc
mov
rcrl
test
mov
icebp
fnsave
sbb
shlb
sar
push
adc
or
and
mov
cmc
mov
clc
insl
push
xchg
shrl
out
cmpl
dec
sub
mov
lret
in
and
mov
ss
or
fistpl
lahf
std
dec
outsb
push
jmp
jp
and
pop
pop
adc
xchg
subl
or
clc
mov
clc
addr16
pop
stc
xchg
into
push
xor
xchg
out
or
sub
lret
pop
test
mov
or
pop
test
addr16
sbb
dec
sbb
dec
adc
in
cs
push
pop
stos
pop
push
bound
sbb
je
andb
jo
jmp
or
add
stos
enter
in
cmc
cmp
sub
push
sub
mov
push
outsb
in
es
mov
test
mov
pop
in
jle
add
mov
mov
jae
cmpsb
inc
or
adc
push
call
das
cmc
mov
sub
push
sbb
subps
scas
gs
in
out
bnd
repz
cmp
cmp
lret
cmc
jg
aam
ja
adc
lret
incb
popaw
cmpsl
popa
mov
inc
mov
mov
stos
jmp
hlt
xchg
in
jge
movsb
mov
aam
shll
and
and
mov
sub
inc
jle
jb
or
rorb
xor
shrb
pop
call
sub
arpl
subl
pop
inc
dec
mull
popf
adc
cmp
push
sti
pop
dec
mov
repz
insl
insb
push
or
shlb
and
je
lods
jp
cltd
imul
or
and
dec
cmova
out
repnz
cmp
fidivrl
xor
mov
push
cmp
aad
int3
nop
mov
or
lret
sub
mov
jge
mov
jo
decb
mov
inc
mov
or
dec
mov
jae
mov
sub
and
xor
ljmp
push
push
mov
in
into
add
push
inc
cmpb
or
add
xor
repz
imul
jmp
dec
push
pop
inc
adc
jb
cmp
movsb
leave
add
push
and
je
repnz
xchg
pop
repnz
mov
jnp
pop
loopne
leave
ficoml
xchg
sbb
dec
xor
pusha
fisttpll
pushf
repnz
mov
fstl
fnstcw
mov
dec
xor
shll
mov
lret
pop
jbe
push
push
scas
sub
rol
push
in
stc
cmpsl
clc
sub
pop
out
pop
ret
test
mov
dec
mov
js
test
and
inc
es
mov
rcr
test
and
insl
jb
jo
mov
cmpsb
cmpsl
or
jbe
shr
jo
movsb
pop
shlb
pop
push
pop
lea
sub
mov
adc
test
call
adc
test
xor
push
mov
das
js
jp
pop
dec
stos
jp
loop
ja
dec
pop
and
jbe
test
adc
adc
out
stc
xchg
outsb
mov
arpl
arpl
lods
movsb
into
xorl
fwait
xor
mov
lds
and
ljmp
fnstenv
jae
mov
and
mov
jmp
rcrb
mov
sbb
xchg
inc
gs
outsb
sbbl
adc
imul
sub
pop
pop
fs
mov
out
repz
push
dec
mov
inc
pop
jnp
inc
sbb
cmpsl
or
pop
stos
hlt
in
ret
mov
cmpsl
lret
aad
movsb
push
lahf
stos
inc
or
and
sahf
pusha
push
dec
pop
lods
adc
add
in
pop
out
popf
cmp
inc
xor
aas
push
popf
adcb
arpl
enter
jl
stc
notb
stc
dec
jle
sbb
jne
out
sub
outsl
push
lock
sahf
imul
aas
xchg
mov
ja
jle
mov
adc
and
pop
call
gs
sbb
fldl
test
sbb
rcll
mov
insb
mov
mov
add
inc
sub
out
enter
mov
loopne
xor
mov
mov
mov
sub
int3
mov
adc
movl
sub
adc
pop
inc
cmpsl
jo
sahf
pop
adc
pop
or
cmp
ror
push
mov
in
arpl
lahf
jmp
push
push
fwait
dec
sahf
mov
movsl
in
dec
or
mov
mov
cltd
ret
sbb
mov
mov
call
stos
inc
enter
negb
or
out
xchg
xor
mov
push
scas
cmp
out
popa
adc
add
cmp
sbb
dec
jmp
daa
in
repnz
out
mov
insl
movl
ror
xchg
movsl
xor
fadd
jns
jo
scas
xchg
fldl
push
xor
mov
rcl
dec
loop
fwait
mov
imul
shrb
clc
ds
in
cltd
push
push
bound
scas
push
mov
sbb
int3
and
enter
push
jmp
jmp
out
and
cmp
cmovge
cmp
sbb
loope
xchg
push
jno
push
jp
ficoml
out
imul
les
jo
in
fdivs
mov
xchg
fdivrs
insl
xor
icebp
inc
sub
outsb
dec
pop
xchg
out
inc
push
and
adc
dec
adc
and
test
xchg
inc
lods
fcompl
in
stos
push
aas
push
mov
rorl
sahf
lret
arpl
lret
loope
inc
ficoms
jns
cmpsb
iret
sbb
scas
mov
adc
dec
dec
lretw
inc
es
sbb
in
or
lcall
push
pop
lock
pop
adc
inc
mov
xchg
xor
int3
movsb
outsb
xor
je
xchg
arpl
jno
sbbb
std
andb
std
xchg
push
push
jb
add
stos
jns
aam
mov
pushf
rclb
in
hlt
cmpsl
shrb
das
popa
xchg
dec
gs
lret
mov
cs
jp
jnp
push
sub
cld
sub
jg
or
mov
jne
inc
inc
imull
adc
lea
pop
cmp
mov
jns
dec
arpl
jge
add
mov
jp
jns
sub
sti
jae
shl
add
rcll
leave
mov
pop
adc
push
mov
pop
adc
fdivrp
cmpsb
imul
les
add
lock
sub
xlat
ljmp
test
imul
lcall
push
mov
test
jmp
mov
inc
sbb
ret
out
mov
xchg
mov
dec
pop
into
cmp
faddl
stos
out
nop
dec
out
hlt
and
sbb
and
pop
xchg
jmp
mov
cld
xchg
push
stc
int3
dec
add
push
mov
jnp
push
mov
cmp
inc
in
aaa
sbb
insl
mov
cmp
pop
cmc
lds
xchg
loopne
outsl
jbe
dec
lock
out
out
xor
mov
movsl
cltd
dec
dec
mov
push
out
jnp
mov
xchg
mov
out
out
repz
mov
and
xor
or
lret
push
inc
pop
daa
push
aaa
je
out
xchg
sub
dec
xorl
test
popa
aam
lcall
push
jnp
mov
jae
lods
dec
mov
jle
ss
mov
inc
ret
mov
mov
lahf
popa
jle
xchg
inc
add
in
aas
daa
lea
sbb
das
and
xor
lcall
mov
loopne
cltd
mov
test
dec
aad
lret
dec
dec
rorb
push
cmp
nop
leave
stos
jo
add
aaa
cmp
ja
push
xor
and
out
cltd
or
cmpsl
cmp
ja
pop
adc
or
insb
sbb
xlat
mov
dec
sub
test
add
and
sti
lock
adc
into
sbb
jo
inc
movsl
pop
xchg
push
jmp
jo
fwait
imul
ljmp
loopne
call
jle
sub
test
jle
fmulp
pop
sub
pop
loopne
or
xorb
push
xchg
scas
aaa
mov
leave
popf
fucomi
pop
pop
mov
lret
xchg
xchg
mov
aaa
nop
loop
mov
jbe
adc
cmpsl
sti
arpl
roll
sub
popa
mov
mov
cmpsl
mov
lcall
dec
sub
cmp
mov
daa
push
int
inc
mov
xorb
pop
dec
push
add
popa
loop
push
push
adc
xchg
pusha
cmp
cmpsl
rol
insl
add
outsb
xchg
shll
push
movsl
inc
and
xor
sub
aam
sbb
leave
dec
pop
sub
xor
jmp
fld
dec
or
adc
mov
loopne
jl
xchg
xor
lods
int3
xorl
fld
inc
daa
shll
jnp
xorb
int
mov
call
jns
mov
fsubp
inc
jecxz
scas
or
stos
mov
jge
push
sti
inc
testb
lods
jnp
push
adc
dec
dec
mov
push
repnz
xorb
add
insl
mov
mov
test
sbb
into
pop
idivl
inc
aaa
cmp
aam
ja
push
fiadds
adc
sbb
mov
pop
stos
insb
test
int
pushf
or
jne
dec
fsave
ljmp
jmp
ss
mov
fcmove
mov
ljmp
xchg
adcb
daa
xchg
jnp
sahf
jns
jge
int3
add
stc
or
add
cwtl
repnz
lcall
xor
mov
test
jnp
dec
xor
mov
das
mov
jbe
ds
jmp
and
mov
call
inc
jnp
fs
cli
sub
mov
sbb
mov
jne
or
mov
adc
mov
roll
jecxz
dec
xchg
int
jge
inc
movsl
adc
sarb
adc
jge
addr16
fs
jnp
mov
and
push
xchg
das
push
add
pop
adc
fwait
add
stos
pop
dec
mov
dec
clc
or
jge
sub
pop
roll
ret
idiv
pop
inc
mov
add
push
iret
xchg
sbbb
add
inc
roll
xorb
int
inc
or
lahf
or
cmpb
je
outsb
cmp
xor
inc
jo
test
fists
fcmovne
leave
jbe
and
pop
std
adc
movsl
push
dec
inc
test
pop
or
int3
and
daa
or
lret
add
mov
test
inc
push
mov
dec
jle
fildl
shrl
test
nop
mov
push
xlat
sahf
mov
pop
jbe
ror
inc
leave
ds
ljmp
imull
or
shll
mov
lods
loopne
cmp
lret
fwait
ss
jbe
xor
iret
nop
dec
lods
stos
xchg
and
cmp
cmpsl
mov
leave
outsb
push
sub
out
loope
and
add
repnz
cmp
adc
insb
test
shll
xchg
pop
adc
pop
jae
stos
pop
and
pop
pop
test
jnp
jp
push
xchg
insb
pushf
jmp
mov
cli
inc
sbb
jmp
cmpsl
mov
and
jae
cmpsb
mov
mov
pop
js
ficoms
sbb
push
mov
jmp
adc
imulb
loope
loopne
add
icebp
mov
pushf
or
mov
and
fs
inc
sahf
ds
je
push
push
insl
icebp
mov
jg
and
jae
push
call
pop
pop
xchg
scas
add
jge
insb
xchg
lcall
ret
sub
jl
pop
xor
xor
ret
loopne
xchg
das
sub
cmp
movsb
fisttps
mov
popf
mov
jb
mov
hlt
mov
mov
push
xor
pop
fdivrl
pop
xor
loop
mov
pusha
aaa
jne
xor
jnp
shrb
xorl
or
xchg
xchg
pop
inc
pop
jg
mov
frstor
adc
pop
mov
insb
std
sub
popl
mov
adc
ds
pop
imul
add
jle
es
rorl
push
lds
fisubl
sub
in
imul
push
sub
int3
out
jp
popf
insl
push
and
jmp
xchg
loopne
sub
ret
jmpw
jmp
push
dec
hlt
mov
dec
ljmp
das
mov
mov
sub
push
jecxz
in
loope
loope
stc
jns
mov
xchg
mov
out
or
je
xchg
sbb
rclb
je
jae
decl
mov
imul
ds
jmp
subl
enter
jmp
mov
or
and
fists
rcr
push
in
enter
jo
xor
ja
cli
in
mov
cmc
push
mov
in
push
jmp
or
xlat
outsb
mov
movsl
rol
bound
xor
mov
rclb
imul
test
push
sub
leave
adc
or
out
inc
fs
xor
inc
out
pushf
call
popf
nop
fcomps
push
jb
call
lea
jbe
aaa
cltd
aas
pop
mov
fadds
add
cwtl
scas
and
mov
push
sahf
pop
mov
imul
mov
mov
scas
aas
and
cwtl
push
aaa
fistpl
inc
sar
cmpsb
daa
or
movb
subb
pop
cmpb
cld
jno
jmp
pop
adc
pop
gs
cld
xor
lcall
sbb
inc
roll
dec
pop
loop
pop
mov
adc
lock
cmp
mov
sti
or
sub
push
xchg
aad
hlt
mov
call
dec
mov
shr
adc
pop
fiaddl
aaa
cmp
pushf
mov
dec
and
fdiv
mov
and
bound
mov
mov
sbb
ficomps
pop
sub
adc
xchg
sti
subl
adc
mov
inc
loopne
ret
popf
stos
mov
sub
mov
lret
dec
xor
or
in
mov
jne
in
je
into
cmc
bound
sub
sbb
or
mov
lea
aaa
out
in
enter
pop
addr16
std
pop
testl
lods
mov
push
sti
mov
daa
xchg
pop
shlb
test
jecxz
insb
sub
mov
xchg
outsb
adc
or
push
lahf
insl
iret
pusha
mov
je
adc
pop
xchg
inc
xchg
fs
sahf
inc
adc
jno
btc
cs
and
mov
roll
xchg
xchg
and
jp
clc
xor
jmp
fwait
mov
pop
cmp
pop
pop
jmp
inc
dec
test
inc
mov
sarl
or
cli
das
fwait
jmp
and
sub
mov
jg
adc
jge
pusha
push
ljmp
pop
fs
jecxz
mov
test
lods
xor
fdiv
pop
icebp
ret
fnsave
mov
adc
add
fadds
and
push
aam
jmp
cmp
das
shrl
xor
mov
cmp
mov
fnstcw
push
lods
popf
dec
adc
lds
nopl
clc
rcrl
mov
cmp
or
hlt
mov
inc
int3
orl
andl
lret
pop
xchg
into
insl
hlt
push
push
cs
cld
mov
push
dec
inc
lods
mov
stos
mov
jne
ret
push
sarb
nop
in
xlat
add
shrl
inc
xchg
loope
mull
into
rolb
in
sub
fs
adc
jmp
clc
xchg
or
pop
adc
push
mov
je
sub
pop
pop
adc
pop
mov
cmp
mov
lea
xlat
orb
or
pop
push
clc
inc
stos
aaa
sub
add
insl
push
daa
sub
mov
sub
into
and
sub
xor
roll
inc
loopne
push
pop
clc
fs
lret
jecxz
mov
add
inc
popa
pusha
add
sarl
and
mov
mov
jmp
ljmp
test
dec
cmp
addr16
xchg
lret
or
inc
cwtl
gs
add
lods
jns
sub
in
in
cwtl
sbb
push
adc
cmp
cmp
insb
sti
sbb
cli
jmp
push
es
push
push
dec
fcoml
adc
jnp
js
das
jbe
sbb
orl
lds
push
fcmovbe
lcall
jae
imul
fisubrl
add
dec
stos
out
jge
arpl
ss
ja
stc
sub
into
jmp
pop
cld
add
dec
leave
xor
ja
aaa
in
pusha
int3
out
dec
test
in
jmp
jmp
xor
mov
clc
ret
popa
add
mov
mov
daa
jnp
add
es
inc
outsb
jmp
xorl
cmp
dec
loopne
out
mov
mov
ret
lds
pop
mov
aam
push
int
adc
aam
inc
data16
imul
shrb
test
fwait
pop
scas
sub
mov
push
pop
sbb
sub
xchg
out
xor
in
clc
dec
mov
or
jecxz
mov
insb
mov
scas
lret
pop
rorl
cwtl
rorb
cmp
lods
addl
mulb
cwtl
orl
ljmp
push
xchg
mov
cmp
xchg
in
push
or
roll
xor
jmp
scas
mov
pushf
pop
or
jp
and
adc
aaa
xchg
mov
mov
mov
cli
ja
jb
mov
ret
mov
imul
ja
pop
movsl
pushf
dec
pushf
inc
add
cltd
js
mov
mov
shr
int
test
inc
lcall
push
cmp
pushf
andb
popf
sub
cmp
scas
add
dec
cltd
push
popf
push
popf
dec
aam
loope
shll
pop
pop
inc
xchg
jno
addr16
mov
cmp
call
cmp
jbe
fmull
push
adc
fnstenv
lods
lcall
popa
les
xchg
sub
inc
mov
dec
push
jp
lret
loope
sbb
jmp
mov
and
lahf
out
mov
fildll
and
sbb
dec
shll
sub
mov
lea
fadd
and
sub
and
add
insl
outsl
mov
or
hlt
adc
imul
lahf
scas
mov
dec
je
and
lret
mov
lock
fnstenv
fldcw
sbb
adcb
clc
dec
jle
jg
jecxz
cmp
mov
sbb
and
cs
push
movsb
inc
inc
repz
fiadds
jb
mov
pop
inc
push
push
push
mov
push
cmp
ja
shrb
xor
pop
outsl
sarl
mov
jns
movsb
lock
push
sub
mov
test
xor
out
and
xor
in
movsb
roll
loop
fwait
xor
mov
cmpsl
jge
rorb
jnp
xor
xchg
or
adc
jnp
lods
mov
jns
lock
xor
cmc
adc
cmc
pusha
loope
xchg
js
dec
cwtl
jg
xchg
jno
xorb
lret
mov
imull
lret
out
mov
dec
sub
and
xchg
mov
orl
push
stos
imul
out
rcl
aad
push
xor
ja
divps
sahf
das
fisubrs
pop
divl
ret
pop
push
lcall
xchg
mov
les
test
in
mov
and
fwait
cmp
mov
out
add
cltd
outsb
jle
fs
fcmovbe
adc
cmp
data16
movl
xchg
insb
inc
sub
ss
cmpsl
dec
andb
movb
movsl
sahf
push
movsb
je
pop
je
push
or
ja
dec
mov
imull
push
into
fsubrl
xchg
mov
mov
sub
and
adc
pop
mov
addr16
repnz
mov
fcmovb
and
add
inc
sti
or
arpl
out
es
cmp
cmpsl
sbb
adc
fidivl
ss
jb
jb
push
sub
push
mov
push
cmp
lcall
out
jnp
out
jne
int
lea
rcl
repz
rep
xchg
das
in
ss
fildll
inc
pop
flds
es
push
in
dec
jne
sbb
aas
in
lcall
cmpsb
xchg
sar
rorl
jnp
push
test
lahf
lret
lods
imul
and
xchg
sarb
or
cmpsb
xchg
xchg
dec
xchg
xor
aad
or
lret
imul
xor
out
jnp
jnp
enter
adc
jl
mov
iret
lahf
lods
xor
push
pop
mov
jno
sti
orb
insb
cmp
push
mov
mov
jecxz
movsl
leave
add
push
fwait
std
xor
je
sbb
incb
mov
inc
das
insb
sahf
lods
or
mov
out
bound
lcall
test
mov
fcoml
enter
xor
cld
icebp
mov
sub
outsb
fs
int3
cmpsb
and
loop
mov
enter
or
dec
xchg
dec
pop
mov
insb
mov
pop
or
rcr
fs
fcmovnb
test
mov
xor
xor
int
into
dec
fnstsw
mov
je
jae
xchg
inc
lahf
jo
jp
push
out
push
sub
add
loop
fldenv
sub
rcl
lds
aad
std
lods
adc
cmp
mov
inc
adc
xor
jg
sub
fnstcw
scas
mov
cmp
mov
push
cs
jo
sbb
adcl
cmp
sub
out
and
xor
filds
cmp
outsl
nop
dec
cltd
fs
xor
lea
mov
fcoml
dec
adc
dec
mov
push
and
std
xchg
popa
xchg
std
leave
or
push
cmp
es
inc
es
xor
mov
mov
shll
or
push
mov
xchg
outsl
cld
jne
jnp
pop
rcl
mov
aam
lret
insb
cmp
in
or
and
loopne
cmp
mov
add
or
add
mov
sbb
stos
push
mov
lahf
gs
je
cmp
dec
sub
pop
ljmp
jge
fs
movsb
push
loope
mov
xchg
sar
aaa
stos
add
lcall
inc
aam
xchg
xchg
adc
fidivrl
sbb
lcall
loopne
xchg
popa
cmpsl
push
push
jnp
dec
push
insb
mov
xchg
adc
cmp
sub
cmc
cld
out
sbb
xchg
into
shlb
orb
adc
xor
jp
mov
ficompl
into
sub
roll
dec
mov
mov
lret
clc
add
test
movsl
cmpsb
jp
rolb
cmpsb
popf
fidivrl
pushl
stos
jg
push
push
psubd
loopne
jmp
mov
or
rorb
jle
xchg
je
rcrl
das
jnp
mov
xor
cmpsb
sbb
or
inc
aam
push
gs
sbb
jge
mov
jno
pop
jne
push
jge
dec
add
mov
mov
push
inc
cwtl
add
imul
push
xchg
aam
pop
es
mov
lods
mov
mov
fscale
inc
jp
xchg
outsl
je
adc
outsl
or
add
adc
pop
enter
add
lods
outsl
mov
cmp
jp
insb
scas
push
lret
cmp
hlt
mov
jo
add
mov
mov
ret
fucomp
cwtl
pop
push
pop
mov
pop
dec
gs
insb
pop
add
inc
mov
mov
gs
add
xor
js
mov
mov
and
ljmp
cmp
test
dec
lods
push
out
ds
and
xor
leave
adc
xor
push
test
mov
mov
dec
sbb
pusha
ret
inc
addr16
inc
cwtl
in
int
ds
lcall
lret
movsb
test
outsl
mov
gs
lcall
inc
push
js
arpl
cmpsl
cli
cmc
stos
adc
ja
cmp
sub
dec
cltd
repz
sub
addr16
dec
mov
sbb
pop
jbe
push
xchg
decl
aaa
mov
cmp
loope
pop
cmp
sbb
ret
mov
loopne
sub
movl
cld
jecxz
mull
into
sub
das
fisubs
out
ds
stc
leave
out
push
ror
insb
fwait
mov
push
xchg
mov
inc
or
jl
test
test
fsubl
inc
call
add
add
xchg
sbb
pmaxsw
sub
mov
and
adc
lahf
sbb
adc
pop
fmuls
mov
and
add
stos
cmp
push
lret
mov
inc
sub
cmpsl
sbb
xor
js
push
aam
jo
sub
ja
dec
mov
add
into
push
adc
aaa
test
cmp
inc
push
in
cli
out
stc
add
push
and
cmc
xchg
jns
les
mov
sbb
and
inc
add
jb
mov
out
sub
stos
mov
and
jecxz
add
xor
shll
outsb
jp
xchg
and
cwtl
ljmp
or
adc
inc
pop
cld
es
add
push
mov
dec
lods
dec
mov
paddb
repnz
cmp
adc
push
jno
adcl
and
mov
out
scas
enter
and
aam
js
inc
push
cmpsb
sti
dec
and
pop
jmp
js
xorl
fldl
cwtl
test
fsubrl
xor
sub
sub
pop
and
mov
xorl
roll
jo
push
arpl
fldl
adc
sbb
xor
sub
lds
mov
stos
stos
mov
repz
ficoml
loope
and
outsb
push
outsl
mov
adc
insl
shl
mov
es
xchg
leave
cmp
and
dec
or
movsb
out
push
sbb
fistps
xchg
mov
jo
popf
faddp
les
mov
sbb
and
ljmp
dec
js
xor
mov
cmp
daa
xchg
add
ret
rclb
enter
pop
pushf
mov
ficoms
std
push
aaa
test
cmpsl
or
pop
inc
aam
ja
les
addl
and
popf
push
lock
cld
sub
fwait
testl
popa
fdivr
insl
pop
push
insb
xor
mov
mov
pop
lret
lds
lret
inc
mov
sub
push
aas
jg
xchg
adc
mov
push
mov
lds
xor
imul
ror
xor
lods
subl
fiadds
xchg
ffreep
fisubrs
xchg
and
push
pusha
pop
cmp
test
ljmp
mov
adc
cmpsb
mov
cmp
lahf
cmp
jae
mov
xor
andl
and
lret
sbb
aaa
inc
push
jo
popl
call
jmp
int3
sbb
cmp
add
cmp
xchg
mov
loope
mov
sbb
loope
lea
ljmp
pop
pop
and
mov
jp
add
push
popf
jmp
pop
xlat
cmp
gs
push
dec
fnsave
leave
xor
pop
mov
repnz
aaa
push
out
and
ja
cmp
test
je
aaa
inc
insl
ret
int
sub
sub
add
repz
mov
in
pop
loopne
sbb
movsl
pusha
push
jo
aaa
add
pop
movsl
orb
mov
jbe
pop
xor
sub
fisubs
lock
arpl
cmc
outsb
mov
inc
jg
out
imul
xchg
dec
xchg
sbb
mov
push
push
insl
sbb
inc
dec
mov
xor
lods
cmp
sbb
adc
inc
and
pop
js
or
jne
jge
jns
leave
adc
cld
sbb
jns
es
loopne
shlb
mov
mov
xor
notb
pop
sbb
out
fadds
loopne
jmp
test
mov
mov
xchg
pop
inc
cmc
cmpsl
into
addb
dec
fwait
cmp
mov
scas
in
cld
jg
jecxz
scas
lea
orb
adc
or
popa
or
dec
aaa
fdivl
addb
pop
test
cltd
outsb
sbb
cwtl
call
outsl
cmp
inc
adc
fstpl
out
jmp
and
loope
fucomip
xchg
push
push
ficompl
jns
jb
divl
sub
loop
addr16
xor
icebp
or
mov
scas
fcoml
ret
sahf
pop
pop
dec
inc
in
fcmovbe
push
dec
pop
in
jb
or
cmp
sub
xor
mov
add
adc
add
sub
cli
mov
pop
jnp
cmp
mov
jg
iret
cmp
jae
mov
adc
pusha
addr16
popf
rol
mov
xchg
nop
push
rep
dec
aad
xor
push
insb
or
jno
test
push
inc
xchg
clc
xchg
pop
rolb
sbb
add
mov
inc
mov
mov
insl
daa
aam
pop
cmp
inc
mov
mov
add
cmpsl
sti
or
sub
cmpsb
add
out
pop
std
iret
ret
mov
xor
lret
mov
in
stc
cmp
subl
xor
mov
lods
js
lea
cli
xor
cmp
sub
xor
decl
pushf
in
in
out
or
test
xlat
and
stc
push
push
shr
push
and
pop
or
imul
pop
movsl
mov
xor
lods
jecxz
fcoms
jnp
popf
xchg
and
jmp
dec
fcmovnb
sbb
and
lret
fimuls
cld
pop
lods
jp
or
es
idivb
sub
push
jns
xor
jp
mov
pop
sbb
lods
pop
cmp
xor
push
mov
movsb
in
add
dec
and
xchg
orl
jmp
pop
mov
push
gs
pop
xor
sub
mov
bound
pop
sub
mov
in
cmpsb
aam
xor
dec
fmull
mov
push
cmp
loop
pop
mov
scas
cmp
fisttpll
into
lret
adc
incb
cmp
psubb
test
xor
xor
js
and
icebp
push
adc
push
ljmp
subl
sbb
ror
insl
cli
push
fcomps
lcall
jno
push
icebp
sub
dec
or
insb
addl
stos
stos
fisubrs
loop
shll
xor
std
inc
pop
rcll
das
roll
or
inc
lcall
lods
aaa
fildl
daa
test
push
repnz
mov
shrl
sbb
sub
out
fistl
andl
xchg
pop
cmp
lahf
sub
test
clc
repz
movl
or
xchg
cmp
jae
cli
add
xchg
push
movsb
mov
insl
cmp
jge
push
imulb
push
jge
int
mov
push
test
insl
add
mov
mov
call
sbb
pushf
adc
mov
mov
ja
adc
notl
aam
cli
and
pop
fidivrs
lret
mov
adc
cmp
mov
cmp
insb
mov
movsb
pushf
pop
shll
or
dec
or
cli
jecxz
fwait
jno
adc
push
outsl
scas
pushf
push
jp
or
adc
jecxz
mov
jae
cmp
int3
xchg
aam
ljmp
imul
pop
gs
lret
lods
ss
push
movsb
xor
xchg
push
push
mov
xchg
cli
sbb
jge
test
jo
push
cwtl
inc
jge
test
mov
pop
aas
fidivrl
dec
test
incl
je
aad
sub
sbb
les
subb
cltd
jo
loope
incb
test
xchg
pop
in
faddl
mov
cmp
scas
mov
sahf
lea
addr16
scas
in
cmpsl
inc
js
inc
pop
add
mov
push
es
push
test
xor
xchg
outsl
pushl
shl
aas
xor
std
jmp
push
in
dec
test
andl
pop
dec
stos
out
fisubl
mov
in
aam
and
insl
sti
fisubrs
stc
repz
imul
aaa
insb
cmp
or
test
call
repnz
push
decb
xor
out
jo
mov
cli
inc
adcl
mov
mov
push
xchg
in
ljmp
pop
xor
repnz
out
sbb
mov
add
das
pop
and
and
jo
test
cmpsb
out
add
aas
pop
insb
push
add
fnstcw
ja
jne
cwtl
arpl
jo
mov
ljmp
dec
fldenv
push
xorb
pushl
sub
sub
cmp
and
repnz
xor
xor
and
popa
les
jmp
jb
aas
test
fidivrl
imul
sub
inc
adc
rclb
aam
jbe
pop
mov
dec
lret
aas
mov
cmp
mov
movsb
sub
mov
jmp
fnstenv
pop
sub
xorl
pop
xor
and
jb
jno
pusha
dec
xchg
insl
mov
test
lret
xor
scas
roll
test
mov
and
repnz
bound
mov
scas
lds
insl
sub
dec
in
ret
mov
shll
aad
xor
push
cmpsl
dec
fdivr
addr16
and
inc
jnp
dec
add
xchg
in
mov
insl
xchg
insl
mov
nop
test
jp
stos
push
cmp
cmpsl
and
cmp
jmp
xchg
sub
orl
int3
out
sub
loop
iret
mov
test
push
out
lcall
rclb
fildll
xchg
inc
xchg
mov
shrb
aas
mov
mov
out
adcl
jo
pop
sub
mov
clc
out
imul
xchg
sub
jge
adc
pop
mov
mov
jbe
je
pop
add
and
sbb
add
repnz
mov
pop
subb
cmovne
int
pushf
call
rorl
jbe
sub
mov
mov
cmpsl
rcr
sub
rcrb
sub
or
iret
loop
in
call
mov
cld
mov
iret
in
mov
mov
pop
pop
pop
daa
and
dec
xor
add
ret
cmp
sub
cli
push
dec
sbb
dec
xchg
mov
data16
adc
and
mov
and
sti
adc
add
lock
aam
mov
xchg
test
sbb
ja
or
adc
in
push
jl
add
xor
out
mov
pop
arpl
jnp
hlt
and
add
mov
into
pop
add
mov
or
repnz
sub
aam
je
fstp
inc
fcmovbe
mov
add
mov
cmpsl
pushf
or
icebp
mov
fs
out
and
sub
jo
roll
mov
xchg
fbstp
into
fmull
sub
jne
lcall
mov
sbb
movsb
xchg
gs
cmp
push
sbb
inc
mov
hlt
test
icebp
adc
mov
xchg
pop
pop
dec
arpl
loope
fstl
mov
mov
ljmp
and
push
ja
sbb
jae
ss
orb
jo
pop
inc
loope
ljmp
pop
dec
inc
mov
cmpsb
push
test
loop
push
sbb
xchg
adc
cmpb
leave
and
cmp
dec
fdivrs
mov
shll
jae
out
mov
pop
iret
nop
sbbl
insl
bound
or
xchg
popf
xchg
in
xchg
aas
push
cli
cltd
push
push
aad
jecxz
shr
cmp
xchg
adc
push
add
in
sahf
ja
xor
iret
imul
arpl
sub
jo
fs
scas
and
xor
outsb
rcl
inc
xor
mov
test
insb
jno
rcrb
push
inc
mov
cmp
wbinvd
push
inc
outsl
xor
popf
mov
mov
ret
jbe
xor
push
mov
or
mov
sub
mov
stc
cmpsl
repz
dec
jg
xchg
aaa
out
not
repz
lahf
mov
movsl
push
jne
shll
addr16
and
jge
pop
inc
lea
add
mov
xchg
les
pop
je
or
lods
repnz
out
incl
ja
cmp
or
mov
movsb
mov
xchg
xor
cmp
lahf
sbb
sbb
sti
movntq
negb
shll
mov
sahf
and
and
hlt
ja
jecxz
jge
mov
int3
xor
lcall
cmpsl
rcl
sub
xchg
cmp
enter
sub
and
aaa
xorb
cli
xchg
jbe
pop
ret
xchg
fisubl
stos
icebp
mov
push
fstpl
or
lods
clc
xor
jo
mov
jmp
lods
jecxz
daa
mov
mov
or
cld
cmc
daa
mov
movsb
fstps
sbb
sub
out
cwtl
jl
mov
inc
pop
in
inc
clc
pusha
repz
and
mov
cmp
ret
std
pop
pop
movsl
jmp
and
sbbb
cld
stc
arpl
out
ds
push
adc
sbb
scas
sbb
jle
pop
pop
mulb
daa
mov
test
sbbb
xchg
shll
mov
imul
punpcklbw
xor
pop
sar
and
andl
les
sub
inc
mov
mov
sub
sub
inc
outsb
nop
ljmp
push
pop
mov
cmp
leave
pop
jnp
xor
clc
es
out
sub
adc
push
cmpsl
ret
xchg
scas
sbb
push
add
subl
iret
jae
add
cmpsl
cs
jno
ss
out
xlat
xchg
mov
cmp
push
jae
push
rcll
pop
test
imul
loope
bswap
leave
loop
mov
decl
sbb
pusha
ret
mov
icebp
imul
std
fists
fnstsw
add
pusha
dec
pusha
push
dec
mov
jns
sbbl
mov
adc
loopne
rclb
lret
movsl
pushf
xchg
stos
add
pusha
mov
mov
js
mov
mov
jg
pop
fwait
cmp
inc
mov
pop
sarl
xor
rorb
lods
popa
lcall
lods
mov
inc
lret
cmovs
and
push
jae
lret
mov
lds
cmp
lahf
iret
inc
dec
jno
gs
pop
pop
and
cmpsb
xor
sbb
out
lock
xlat
ficompl
stos
mov
cltd
aas
jmp
or
fwait
and
sub
adc
sub
stos
inc
adc
fistpl
dec
push
sti
aas
fndisi(8087
cld
adc
sbb
imul
outsb
mov
sub
icebp
les
test
out
rcl
int3
pushf
pop
test
out
adcb
out
jnp
test
push
dec
pop
and
jg
cld
test
sbb
shlb
mov
jb
in
pop
and
push
aaa
sbb
sarb
rorl
aas
jge
adc
sub
inc
fmuls
push
sbb
pop
mov
fsubrs
aas
xor
cmp
xor
mov
std
add
cmc
cmp
imul
loope
push
cmp
mov
jge
les
addr16
push
mov
aam
mov
mov
jno
mulb
or
xor
movsl
sbb
pop
pop
into
mov
push
mov
cltd
xchg
fistpll
pop
pop
pop
push
in
xlat
dec
lea
xor
dec
dec
push
mov
xchg
push
pop
add
iret
adc
push
iret
sbb
cmp
push
jle
jae
pop
lds
pop
mov
mov
mov
popa
mov
sti
mov
push
pusha
xchg
xor
or
icebp
icebp
lret
ss
mov
dec
or
jle
mov
jle
inc
xchg
pop
loope
sbb
int3
fmuls
cmp
ja
mov
cmc
cmp
push
mov
les
sbb
adc
ret
jae
or
mov
iretw
fbld
pop
push
xchg
xlat
pop
ss
or
test
or
cmc
rclb
test
mov
fadds
fildl
mov
jae
pop
push
repnz
lods
xor
add
adc
les
test
jle
cmp
push
mov
out
loope
pop
loopne
sbb
faddl
inc
test
cld
sub
pusha
mov
js
push
fcoml
sub
or
or
roll
mov
mov
cs
add
push
popf
adc
adc
cmc
ljmp
lock
lods
lret
imul
in
mov
xchg
insl
inc
cmpsl
jmp
mov
jns
das
scas
pop
and
mov
jp
dec
clc
dec
inc
xchg
cmp
movsb
dec
leave
mov
push
xor
lahf
jmp
fmulp
add
jl
xor
mov
pop
jg
movb
int3
and
shl
pop
lods
inc
icebp
cmp
arpl
push
std
les
mov
cmp
xchg
std
arpl
push
add
sbb
cld
inc
test
mov
outsb
sbb
das
ljmp
pop
ss
pop
int
cld
pop
fcompl
mov
and
std
mov
in
add
daa
repz
aam
and
pop
xchg
jnp
mov
push
jne
out
ss
jno
popa
cmpsb
push
adc
inc
in
loope
mov
inc
adc
fcom
inc
xchg
push
and
sub
mov
cmpsb
mov
mov
out
lods
or
mov
dec
popa
insb
jnp
outsb
add
dec
mov
loope
insb
shll
cmpsb
dec
clc
xchg
fstl
push
cltd
adc
jp
fadds
mov
test
mov
iret
adc
fdivl
test
in
popf
aas
jnp
sti
int
jo
enter
int3
les
cli
push
inc
fidivrs
and
ret
jbe
out
outsl
push
clc
lret
fidivrl
out
xor
fisubrs
jnp
xlat
scas
cmpb
in
adc
repnz
or
cmpsl
data16
dec
sub
dec
jns
dec
imul
sbb
inc
or
mov
lods
mov
mov
outsb
ret
js
test
lret
ss
or
imul
hlt
loop
push
cltd
push
test
lock
mov
jle
mov
push
mov
sub
repz
fcoml
fisubs
shlb
fs
mov
je
sbb
xchg
inc
ljmp
mov
gs
sub
xchg
inc
mov
cmp
sbb
mov
enter
clc
sbb
xrstors
fsts
mov
add
iret
fnstcw
test
cmp
jbe
mov
or
xor
adc
mov
scas
xchg
cmc
into
mov
aad
in
push
lret
rcr
push
shlb
outsl
in
pop
sub
movl
dec
movsb
cmp
adc
and
imul
std
aaa
addr16
push
xorl
lcall
mov
push
inc
ror
imul
sti
dec
bound
dec
jg
out
xor
jmp
adc
in
and
test
sahf
sahf
inc
inc
paddd
loop
add
std
sbb
stc
mov
ss
insb
lret
push
int
add
dec
mov
mov
mov
add
mov
or
rcll
xchg
popa
add
cli
mov
pop
push
lret
hlt
insl
sbb
rclb
xchg
jo
int
scas
adc
mov
in
mov
les
ljmp
mov
sahf
add
inc
insl
outsb
jbe
fnstenv
jmp
rol
out
push
cmp
out
cld
ja
out
fldt
sbbb
ret
sbb
mov
xchg
lods
std
pop
adc
lods
push
mov
pop
xchg
std
aaa
jbe
push
pop
stc
insb
jne
mov
out
mulb
push
inc
loop
jmp
push
aaa
gs
inc
cltd
add
scas
push
cmp
lcall
aam
push
aad
loop
and
cmp
push
lcall
es
dec
xlat
mov
jecxz
and
sub
mov
lods
mov
mov
aam
int
xor
push
je
jae
xchg
dec
test
dec
jg
fisttps
push
push
and
cmp
xchg
imul
stos
jg
dec
cmp
hlt
jne
cwtl
or
jno
jns
bound
insb
int3
xchg
inc
jo
xchg
sub
jp
into
jno
js
imull
mov
shr
add
mov
mov
stos
jle
push
xchg
outsl
jle
call
notl
inc
inc
leave
pop
inc
sub
loope
push
sub
fdivrp
into
mov
ss
bound
ljmp
cmp
dec
popl
jge
fs
sub
adc
mov
cld
dec
lods
imul
jmp
iret
lods
int3
outsl
ret
mov
loop
aas
rorl
scas
mov
sbb
mov
xchg
jnp,pt
pop
pop
pop
mov
or
dec
shl
es
in
mov
sbb
cmc
fiaddl
inc
sbb
push
dec
xchg
data16
mov
jbe
push
lret
push
inc
push
ljmp
lds
scas
mov
lods
dec
sub
add
pop
jle
inc
dec
imul
repnz
pop
dec
or
push
out
push
or
adc
sti
xchg
aad
sbb
clc
int
mov
push
jno
sub
mov
repnz
mov
icebp
xchg
icebp
pop
cmp
ret
or
fs
punpcklbw
cld
sbb
push
orl
push
push
jo
cs
nop
in
mov
in
in
cltd
enter
adc
aas
xlat
ds
mov
sub
fistl
je
push
add
push
xchg
aas
sbb
out
imul
testb
pop
fsubrs
add
xchg
jnp
ljmp
mov
scas
lcall
adc
xor
push
add
xchg
fsubrs
outsl
mov
fstpt
lods
or
test
xchg
testl
push
add
scas
sbb
ss
in
mov
push
mov
push
js
fxch
lahf
je
loop
mov
jl
push
mov
scas
dec
adc
inc
cltd
cld
lock
mov
les
inc
dec
loopne
sti
jne
dec
shr
and
dec
rcl
outsl
sub
mov
mov
jle
jb
in
xor
adc
mov
sti
scas
sbb
hlt
test
stc
lahf
fdivl
pop
shll
dec
jne
sub
test
push
push
sbb
cmp
xor
loope
scas
inc
push
pop
jne
cmp
scas
dec
add
or
into
or
movl
imul
lods
pop
enter
test
jmp
adc
lret
in
push
enter
adc
popa
enter
cmp
sub
jb
xchg
inc
jns
adc
xchg
mov
iret
cltd
cmc
push
out
sbb
adc
es
jl,pt
push
xchg
bound
push
clc
test
cmp
movsl
outsl
les
jnp
inc
das
sub
push
stc
push
xor
mov
cmp
pop
mov
pop
push
dec
sar
filds
rorl
adc
std
jns
insb
stc
mov
push
mov
popa
sub
jnp
loope
inc
cmp
sub
and
addr16
pop
push
sarl
push
mov
push
movsl
cmc
mov
cld
sbb
xchg
xor
jnp
and
ja
insl
and
inc
and
mov
dec
add
fistps
rorb
lea
iret
scas
cli
pushl
mov
int
push
pop
jae
insl
jle
mov
enter
jb
loopne
add
xlat
adc
cltd
sbb
sub
shl
jae
xor
addl
push
mov
or
lcall
xchg
scas
decb
pop
sub
jg
cmp
push
mov
imul
sub
in
jge
loopne
jae
adc
shll
pop
add
mov
xlat
nop
popa
cmp
inc
mov
lods
jge
fcmovnb
xchg
push
in
push
mov
xor
fnstsw
inc
lret
sub
mov
bound
pop
lahf
loope
daa
arpl
sbb
xlat
add
inc
pushf
dec
push
cwtl
and
mov
fidivrl
aaa
dec
daa
insl
xchg
aas
das
inc
outsb
inc
or
cmp
add
shll
sub
xchg
aaa
imul
sub
pop
dec
stos
push
add
das
add
cmp
sub
int
lock
cmc
imul
lea
pop
mov
sti
push
mov
imul
iret
sbb
and
push
mov
insb
rcrb
scas
cmpsl
xchg
aas
in
shll
cmp
mov
inc
dec
mov
pop
scas
ror
mov
es
mov
sahf
rorl
lret
add
jnp
fisubl
out
scas
push
das
mov
dec
add
adc
lods
add
sub
stos
scas
imulb
cmc
push
repnz
push
dec
stc
pop
fnstcw
push
sub
in
std
inc
xchg
jmp
mov
popa
push
pop
cmp
pop
sbbl
in
cmp
lahf
jno
xor
inc
push
push
xor
cmp
pop
and
or
aad
mov
dec
xor
andb
fldcw
lock
mov
out
xor
jle
pop
idiv
shl
dec
lods
mov
mov
test
pop
adc
std
dec
pop
in
sbb
es
int
les
xor
cmp
mov
leave
mov
xlat
xor
mov
cwtl
sub
scas
sbb
pop
xlat
mov
lcall
mov
mov
adc
cmovg
dec
fnsave
push
rol
jne
xor
lea
cld
nop
mov
pop
outsb
or
mov
and
dec
popa
loope
dec
cmp
inc
mov
rclb
push
and
mov
and
lock
les
divb
imul
push
in
mov
pushf
cmp
inc
xor
mov
lret
out
jno
pop
cli
pop
sub
test
call
in
push
mov
adc
iret
jb
ds
test
outsl
push
sbb
sub
push
and
lds
pop
dec
or
mov
pop
adc
sbbb
stos
fwait
icebp
jp
jl
in
subl
loop
outsb
out
inc
or
ds
sbb
adc
sbb
mov
or
hlt
repnz
fisttpll
mov
mov
dec
jecxz
cmpsb
std
repnz
add
enter
mov
ja
loopne
jle
out
sub
out
test
mov
mov
icebp
push
sti
xor
cmp
test
adc
or
mov
xchg
or
cmpsl
in
add
push
adc
xchg
push
ret
inc
ja
gs
scas
shr
and
movsb
push
cwtl
xor
pop
js
sub
inc
testb
enter
pop
in
sbb
push
sub
inc
aam
push
testl
lods
orb
mov
xchg
clc
roll
sub
je
inc
pusha
iret
imul
in
sub
cmp
mov
in
and
faddl
push
in
inc
push
out
xchg
cmp
and
icebp
out
sbb
icebp
adc
mov
out
lahf
stc
enter
daa
adc
mov
jbe
call
aaa
jg
jno
jmp
inc
push
ja
ja
rcrl
adc
dec
aam
sub
fbstp
mov
xor
mov
mov
arpl
movb
mov
push
cmp
lods
imul
sbb
mov
lret
jne
gs
xchg
ja
mov
into
push
mov
imul
imul
hlt
mov
add
pop
sti
xorl
dec
jo
jge
sbb
ds
xorl
cmp
jb
test
sub
mov
or
xlat
fildl
adcl
in
sub
mov
sub
es
ja
push
popa
add
pop
pop
fildl
out
in
mov
xchg
mov
aaa
mov
sbb
xor
push
test
cmp
insb
jne
inc
mov
outsb
jne
dec
pop
sbb
xlat
incb
aaa
sbb
pushf
mov
push
in
sti
mov
test
mov
mov
dec
push
idiv
cwtl
dec
sub
adc
push
push
subl
push
fisubs
les
rcl
std
inc
jl
cld
fidivs
cld
push
scas
mov
jb
in
pop
jnp
je
jmp
rcl
xchg
out
call
jge
push
and
enter
xchg
xor
enter
and
pop
or
loop
xchg
das
in
cmp
mov
push
in
jno
mov
mov
xchg
imul
jnp
mov
push
mov
mov
inc
pop
pushl
dec
or
mov
fdivl
pop
mov
push
mov
rolb
sahf
cmpsl
push
fmuls
mov
xor
xor
jecxz
lcall
fwait
scas
cmp
jle
cmpsb
sarb
ficompl
shrb
arpl
xchg
sub
mov
dec
jbe
incb
fdivs
roll
rolb
test
inc
xor
and
inc
push
mov
push
out
sbb
mov
inc
fsubs
loop
mov
push
mov
jne,pn
add
fldl
mov
or
shr
fidivl
aam
jge
inc
pop
lret
pop
push
test
mov
pop
notb
out
sbb
fsubrs
or
clc
jne,pn
mov
push
mov
push
mov
mov
jae
test
add
mov
adc
mov
pop
stos
sub
imul
push
xor
mov
mov
mov
cltd
jg
mov
out
mov
add
push
test
iret
dec
nop
adc
jp
pop
dec
hlt
and
dec
les
jmp
cmpsb
xchg
mov
addr16
sbb
out
xchg
test
mov
leave
jg
or
xchg
outsb
ret
or
mov
mov
push
pop
mov
xchg
add
sub
xor
dec
push
push
bound
in
adc
jne
or
mov
subl
sbb
les
mov
rclb
cmp
test
xchg
sti
push
cmp
jge
ljmp
loopne
stos
ds
enter
or
pop
ljmp
movsb
stc
mov
mov
imul
cli
mov
imull
push
ds
and
cli
inc
lcall
das
mov
test
roll
cmpsb
inc
push
imul
mov
pop
sub
stos
xchg
lock
pop
imul
mov
out
dec
adc
sub
sub
mov
sub
inc
aaa
fsubr
xor
or
insl
fidivl
ret
mov
xchg
or
into
dec
mov
stc
insl
sti
daa
xor
mov
aad
jbe
rcrb
sar
repz
adc
xchg
fistpl
adc
ds
hlt
sub
fistps
pop
xlat
cwtl
paddusb
jl
sbb
mov
je
push
inc
xchg
mov
push
pusha
and
inc
dec
dec
and
insb
pop
jp
test
lock
push
fnstsw
ja
imul
jmp
sub
jle
in
xchg
add
mov
cmp
add
lods
ficompl
dec
jg
inc
fsubrl
push
jnp
gs
jnp
lock
in
pop
inc
add
fs
push
pop
jecxz
in
aad
sbb
pusha
or
and
mov
loop
mov
nop
jp
adc
pop
es
or
adc
cmp
lock
and
push
and
inc
ret
test
inc
fldl
push
jecxz
rol
fidivl
sub
test
lahf
mov
hlt
cltd
add
popf
push
or
xchg
clc
adc
iret
insb
cltd
test
mov
sbb
shrl
push
fstpl
lret
movsl
divl
ljmp
push
insb
sub
js
pop
add
jp
hlt
cmp
scas
and
push
and
arpl
test
sub
movsb
mov
hlt
loopne
jb
notl
pop
es
xchg
cmpsb
push
push
lcall
scas
sub
ja
lock
call
imul
loope
push
lock
mov
out
jl
clc
and
aaa
repz
dec
xchg
lahf
sar
cmp
sti
mov
jbe
pop
imul
cmp
fmuls
fdivrl
sahf
lcall
std
jmp
inc
sub
sarl
mov
jecxz
cmp
fnstsw
adc
shr
cmpsl
int
arpl
pushf
jae
cmp
insl
mov
prefetch
add
int
mov
in
int3
and
or
push
movsb
shl
call
jl
jge
xchg
mov
add
adc
pop
mov
movsl
xor
clc
cs
pop
fwait
movsb
pop
scas
insl
andb
add
fsubr
js
pop
pop
fbstp
lea
shrl
rclb
flds
aam
adc
enter
fdivrs
xor
xor
ja
or
js
inc
pop
out
xchg
mov
push
xchg
inc
pop
cmc
push
cmpl
adc
push
rcrl
pop
mov
jmp
adc
icebp
pop
pop
jbe
push
popa
std
xchg
mov
mov
popa
adc
push
sar
repz
or
sbb
aad
jns
dec
mov
lods
rcrl
lret
pop
push
xor
xchg
ds
pop
jnp
stos
xor
add
sub
test
xlat
jae
iret
sbb
aam
movsl
or
push
nop
jbe
sbb
inc
pusha
xchg
jno
pusha
imul
ljmp
pop
ds
sub
mov
push
jnp
mov
subl
xchg
icebp
cmp
les
cmp
adc
fisubrl
push
daa
add
mov
inc
aaa
out
mov
daa
xchg
xorb
push
call
cmp
jbe
fst
in
sub
sub
xorb
pop
inc
ret
movsl
ljmp
mov
jne
and
xchg
push
add
sbb
int3
pop
cwtl
jns,pt
push
out
cmp
shlb
out
in
adc
inc
ljmp
imul
cmp
xchg
ja
xchg
push
rclb
jns
cltd
cmpsl
ljmp
out
mov
and
push
xlat
mov
leave
ud1
jmp
cmp
jne
adc
lcall
test
leave
repz
notb
fsubrl
and
pusha
popl
rcll
xor
mov
sarb
pop
pop
mov
and
cs
pop
lds
or
mov
mov
push
loope
dec
out
pop
rorl
xor
clc
mov
icebp
xor
dec
cmp
and
sub
pushf
or
sbb
inc
pop
aas
test
xchg
loop
mov
mov
mov
cmpsb
imul
jne
fcomi
insl
jmp
pushw
inc
add
movsl
add
push
dec
mov
roll
jae
xchg
shrb
mov
cmpb
scas
or
les
test
xchg
sbb
mov
dec
mov
out
xchg
pop
adc
out
xor
adc
sahf
pop
cmp
pop
push
jl
pop
test
mov
insb
insl
sbb
sub
pop
pop
xor
push
fldcw
mov
inc
movsl
sub
pop
push
dec
inc
aaa
inc
fstpt
fs
jl
sbb
movsl
mov
mov
pop
pop
mov
repnz
icebp
cmp
dec
imul
pop
inc
mov
fnstenv
movsl
dec
jl
cmc
sbbl
popa
sub
sbb
jg
repnz
cmc
and
test
xchg
in
jge
test
mov
insb
push
fs
pop
mov
enter
sahf
fdivrs
mov
loopne
add
out
dec
xor
xchg
and
cs
cmc
data16
push
shlb
mov
xorb
outsb
adc
xchg
mov
push
mov
loope
aas
pop
mov
mov
jo
mov
int
shlb
cmp
pop
test
pop
test
adc
and
rorb
movsl
cmp
add
adc
aaa
inc
scas
inc
decl
push
gs
jmp
dec
shr
lret
insl
jne
pop
stos
jb
mov
into
outsl
jne
xor
add
aas
xlat
dec
mov
add
jecxz
fwait
loop,pn
dec
lea
leave
push
std
mov
cmp
dec
into
pop
call
lret
mov
cmp
icebp
enter
aad
in
mov
push
fs
mov
popf
pop
stos
lds
aaa
jbe
stc
jle
sbb
je
orb
pop
push
mov
out
push
fisubrl
fldcw
nop
negl
popf
sbb
cmc
sbb
mov
je
jbe
cmc
jp
mov
mov
fiaddl
cmp
sub
adc
cmp
out
pavgw
rol
sbb
inc
out
lret
pop
push
cmp
jg
fcoms
test
or
push
pop
xchg
ss
pop
lock
call
or
aad
xor
imul
lea
fs
mov
mov
addl
stos
mov
push
sbb
inc
pushf
cmc
or
inc
cwtl
aad
loop
pop
inc
jge
jne
jp
pop
lods
rorb
dec
fsub
pop
arpl
mov
scas
cli
ja
leave
pop
imul
sub
leave
push
testl
xchg
jo
pop
fs
jecxz
divb
jae
sbb
add
sub
pop
jbe
sbb
ja
fxam
ds
fnstsw
cmp
sub
ljmp
lcall
fstpt
adc
xchg
sub
int
xor
jb
gs
sar
jp
rcr
add
mov
mov
mov
add
push
inc
mov
add
stc
cmpl
xor
scas
jae
jae
mov
insl
ss
xor
gs
mov
xchg
ds
jge
repz
popf
push
xor
mov
cmp
add
movsl
lods
aad
test
jp
add
stos
jb
mov
jmp
inc
in
bound
sub
push
mov
arpl
xchg
inc
frstor
ret
data16
push
daa
mov
lret
add
popf
mov
xchg
leave
ja
call
das
pop
cltd
fs
inc
stc
cmp
lahf
rcrb
and
and
ljmp
lock
push
aas
cmp
cli
dec
mov
std
mov
mov
push
in
mov
mov
cmpsl
fistpl
aaa
sub
fcoms
sub
in
and
sbb
jle
int
sub
mov
aaa
aas
cld
and
jne
pop
repz
les
dec
xor
push
inc
lock
lret
mov
sbb
sahf
push
xchg
add
dec
repz
jge
and
sbb
idiv
mov
add
stos
pop
movsl
or
add
repz
and
cmp
cmp
aam
dec
mov
xchg
jl
push
mov
cli
inc
xor
xlat
imul
cmp
push
cmp
jb
mov
rcrb
jle
stos
cltd
rorb
and
or
sbb
sub
jg
cmpsb
cs
push
dec
fdivrl
xor
xor
rclb
inc
pop
lods
mov
sbb
lods
cmp
sub
test
mov
adc
repnz
add
mov
inc
nop
sbb
fistl
repnz
ljmp
pop
loope
lret
pop
mov
lcall
mov
addps
mov
inc
shrb
dec
rcll
and
ds
xor
or
cmpsb
jo
dec
push
aaa
in
popf
inc
jno
ret
pop
pusha
cmpsl
sub
popa
adc
mov
add
push
xchg
idivb
rorb
test
test
insl
mov
xchg
mov
push
pop
sub
jp
sbb
cmpsl
cltd
test
push
es
arpl
push
cmp
repnz
sub
cmc
adc
mov
dec
lods
inc
mov
pop
sbb
cltd
ds
sbbl
mov
nop
roll
fadd
cmpsl
fiaddl
fwait
xchg
xor
imul
ds
or
fdivrs
out
or
jnp
inc
inc
fadds
ljmp
hlt
bound
fs
mov
or
push
sub
and
sbb
mov
insl
mov
jg
std
mov
sahf
sub
sbb
jne
sahf
orb
jge
int3
imul
mov
mov
add
repz
xchg
sub
js
and
out
les
fwait
jp
jl
insl
ja
ret
pop
in
and
xchg
jge
mov
mov
lahf
push
mov
lods
cmp
cmp
cmpl
lret
shll
loop
mov
fisubrl
leave
mov
jmp
xchg
dec
imul
fstpl
imul
cmp
or
scas
pop
imul
sbb
stc
mov
mov
lods
xchg
fdivrp
mov
aaa
xor
lock
stc
mov
or
add
adc
push
movsb
addr16
xchg
cmp
cmp
push
push
xchg
negb
mov
leave
mov
dec
xor
pop
cmp
loop
or
repz
ja
xlat
mov
cli
mov
or
mov
cld
test
mov
lds
sub
and
xchg
sub
jnp
dec
xor
dec
loop
fldlg2
sbb
xor
out
in
jae
dec
mov
pop
mov
aas
push
mov
rolb
mov
add
push
mov
or
mov
and
cmp
jns
divl
aad
xchg
shl
or
dec
add
into
mov
jnp
scas
js
or
test
sub
popa
xchg
mov
mov
mov
lret
outsb
lcall
xchg
inc
pop
push
js
sbb
sbb
inc
push
lock
stos
data16
mov
xchg
push
pop
push
fwait
adc
adc
sub
shlb
fwait
mov
push
inc
lea
push
outsb
inc
push
out
aas
bound
divb
dec
jg
pushf
idivb
pop
sbb
inc
rcr
mov
sbb
push
dec
pop
dec
xor
lods
pushf
andl
adc
lds
pop
adc
les
jmp
sbb
push
jge
mov
sub
or
inc
dec
iret
clc
push
stc
inc
gs
push
fimuls
lret
push
and
push
inc
push
outsl
push
je
jle
stos
in
jmp
inc
scas
push
sub
xchg
enter
test
mov
xorl
pop
shll
loop
push
into
and
xorb
adc
cmp
mov
fdivl
cmp
add
ret
cwtl
inc
add
shlb
in
adcb
fmuls
push
daa
mov
sbb
shrb
sub
xor
jnp
sbb
adc
loope
dec
jno
cli
adc
mov
and
fsubrl
inc
test
imul
call
nop
xor
jp
mov
pushf
pop
or
jns
dec
das
outsl
vshufps
or
xchg
dec
sub
ja
rorl
pusha
inc
fcomp
adc
push
hlt
and
xor
movsb
sbb
mov
pop
int3
mov
or
das
xor
idivl
fwait
cmc
aad
pop
dec
stc
mov
in
jge
or
lods
cs
lret
cs
movb
scas
jmp
jo
dec
bnd
cvtps2pd
mov
xchg
add
fcoms
sbb
fdivs
push
sub
es
dec
ret
push
insl
pop
dec
hlt
and
mov
mov
pop
jne
rorl
repz
dec
jge
insb
aad
dec
cmp
fisubrs
jl
adc
shl
dec
fildl
inc
pop
jge
sub
xchg
inc
add
cltd
cs
hlt
pusha
sub
clc
scas
xor
shrb
test
ja
xor
pop
add
mov
or
lret
loopne
jmp
xor
sub
rcrb
add
jp
xor
and
iret
popa
andl
in
loopne
xchg
lret
sete
loope
pop
stos
xchg
mov
dec
mov
iret
inc
sub
scas
sub
test
popa
imul
mov
pop
jle
sahf
xchg
call
cmpsl
mov
adc
push
int
jne,pt
ss
pop
mov
jl
daa
push
mov
cmp
ret
push
mov
push
jnp
cmp
mov
in
testb
push
xor
mov
mov
jae
mov
out
jg
sbb
add
into
pop
adcl
mov
neg
pop
xchg
push
jns
std
mov
push
ss
fistps
rorb
jae
scas
mov
in
inc
lahf
xchg
adc
inc
push
sbb
xchg
jo
enter
in
sub
xchg
dec
div
and
add
stc
adc
orl
scas
pushf
jge
cmp
sbb
push
nop
sub
mov
cmovl
cld
pop
jbe
and
jns
push
mov
in
pushf
push
jg
lret
insb
cmp
out
std
icebp
jge
js
in
jb
pop
and
int
xor
in
jnp
sbb
mov
pop
add
mov
pop
dec
cli
cld
test
lods
test
or
fisubl
inc
jne
mov
push
xchg
ret
ja
mov
mov
and
jp
pusha
pop
sub
iret
in
and
leave
push
add
int
sahf
test
inc
cmp
jnp
mov
je
shlb
out
inc
mov
in
xorl
cmpsb
mov
dec
xchg
jnp
pop
js
sbb
ja
jb
mov
rol
stos
xchg
cwtl
fnstcw
inc
out
repnz
movsl
lcall
push
lea
jge
lret
sub
imul
imul
sub
add
sbb
add
dec
and
nop
xchg
outsl
push
push
pop
aad
test
pop
aad
test
xchg
mov
xchg
shl
fucomi
repnz
jl
adc
mov
call
lea
je
popf
test
mov
dec
enter
mov
pop
or
lret
pop
mov
xchg
leave
inc
bound
sub
xor
mov
xor
aam
mov
mov
ficomps
mov
aaa
fwait
mov
dec
lcall
sbb
pop
jmp
jb
sub
mov
bound
push
and
popa
xor
pop
cmc
xchg
orl
adc
stos
cmpl
sub
inc
std
xorb
xor
ficoml
mov
sahf
movl
sbb
xlat
add
push
jno
sub
push
mov
mov
daa
dec
adc
pop
add
dec
js
mov
sbb
jl
and
mov
inc
adcb
shl
bound
mov
adc
dec
out
xchg
fwait
push
xlat
mov
es
push
in
and
xchg
pop
xchg
sbb
push
mov
sbb
sub
stc
mov
or
outsl
push
pop
loopne
mov
mov
cmp
and
add
adc
push
xchg
push
inc
mov
incb
dec
mov
pop
outsl
int3
ret
ss
sub
and
xor
jp
cs
xor
aas
xor
fmuls
or
out
lret
pop
inc
mov
lock
les
push
insb
push
mov
jb
stc
mov
mov
pop
sbb
push
jecxz
adc
repz
imul
ds
mov
push
pop
je
and
xor
jge
jg
add
dec
ret
fldcw
pop
jae
je
lret
sbb
pop
pop
cld
mov
pop
cs
pusha
outsb
adc
mov
mov
fstpt
into
jmp
inc
add
mov
jge
xor
pop
and
movsl
daa
xchg
les
into
daa
pop
subl
inc
sahf
jle
arpl
stos
stc
in
icebp
pushf
dec
mov
push
stos
push
fdivs
pop
mov
cltd
or
xor
sti
test
out
xor
mov
ret
inc
xchg
pop
mov
cmp
aam
js
or
pushf
cli
jns
lret
dec
aad
cmpb
push
sahf
mulb
popf
gs
mov
xchg
mov
xor
push
pop
sub
fwait
jmp
or
mov
test
les
jp
or
lods
aam
jecxz
lods
movsb
movsb
aas
adc
jecxz
pusha
jae
js
faddl
mov
cmpsb
scas
bound
xchg
pop
mov
inc
xor
mov
jns
lock
arpl
dec
cmpsl
jmp
rcrl
lea
xchg
lods
add
jb
fs
adc
mov
push
mov
push
mov
test
mov
iret
jle
andl
inc
mov
mov
sbb
and
or
inc
sbb
inc
cmp
inc
out
mov
int
lret
ds
into
adc
add
add
popl
lea
push
addr16
sbb
sub
pop
ja
mov
adc
xchg
adc
loope
push
loop
dec
insl
xchg
into
std
xor
inc
repnz
or
daa
xor
or
fdivrl
and
mov
xchg
lret
shll
repz
or
push
pushf
xorb
push
repz
cwtl
cmp
mov
lea
icebp
lret
push
sub
mov
sbb
add
sarl
shrb
ret
out
pop
shrl
mov
ds
es
hlt
outsb
cltd
dec
lahf
daa
int
ret
ss
mov
ja
mov
mov
in
shrw
inc
fwait
outsl
cmp
cmp
hlt
jg
out
out
mov
divb
enter
lcall
fnstsw
ficoms
sbb
push
loope
adc
pop
jne
or
push
jge
std
inc
in
xor
gs
cmpl
sub
jl
repnz
sahf
cltd
sbb
movb
xor
fidivrl
xchg
push
mov
dec
cmp
ljmp
daa
mov
cli
int3
adc
and
and
cmp
inc
inc
fnstsw
push
push
push
pop
jbe
stos
out
fldcw
aas
bound
pop
push
rcrl
and
jge
or
ss
cmp
adc
pop
sti
sbb
fs
mov
rcl
add
sbb
mov
mov
inc
mov
dec
imul
les
add
aam
or
test
daa
out
add
cltd
jecxz
insb
sbb
mov
inc
jg
call
jge
xor
int3
stos
ljmp
inc
das
in
shll
out
or
and
notl
cmp
shl
push
aad
dec
mov
or
jge
jns
inc
xlat
sbb
jae
lcall
and
aaa
pop
test
inc
scas
jp
pop
jns
xchg
and
fwait
or
lret
divl
dec
mov
dec
fidivs
mov
cmpxchg
xorl
iret
cltd
or
xor
arpl
mov
and
sarl
into
mov
push
push
jle
add
xlat
jmp
or
xchg
pusha
sub
idiv
rolb
out
fsubrl
mov
out
arpl
aad
cmp
jae
scas
das
push
push
lea
jg
das
push
outsl
popf
push
cmp
enter
mov
xor
jmp
adc
insl
mov
cmp
lea
gs
es
adc
sbb
insl
fmul
xor
aas
dec
mov
sub
cmc
lret
cmpsl
xchg
and
notb
xchg
popa
mov
pop
mov
inc
inc
fcmovnbe
lret
jge
dec
mov
fdivl
fwait
mov
out
fcoml
mov
ficoms
fidivs
pop
add
mov
dec
movl
xchg
jo
pushf
ja
mov
sub
nop
add
daa
out
imul
dec
sbb
jo
sahf
jnp
sbb
stos
test
pop
rorb
lea
fadd
sbb
sbb
push
dec
lods
aaa
jns
xlat
cmp
out
cli
stos
inc
and
bound
inc
dec
aam
stos
cmp
pop
push
incl
xor
add
ds
dec
pop
lahf
cmp
fmul
icebp
dec
mov
or
bnd
movsb
pop
mov
mov
in
mov
out
xor
fnstsw
pop
ss
or
add
js
addr16
inc
mov
push
add
xchg
es
cltd
sub
movsl
lcall
add
mov
xchg
mov
cmpsl
add
cli
mov
pop
jno
or
mov
fstps
or
xor
notl
push
movsb
sbb
roll
push
cmpsl
shr
clc
xor
push
lods
xchg
jge
cmpsb
jns
jg
loope
xor
mov
mov
cs
mov
add
add
xor
jb
adc
dec
mov
jne
adc
sbb
push
xchg
mov
data16
mov
rorl
lret
sub
xlat
pop
repz
cmpsb
call
aaa
out
imul
push
pop
outsb
sub
insl
popa
leave
lea
mov
fcomps
mov
cmp
xor
dec
mov
cltd
test
sub
pop
cltd
das
rcll
add
and
subl
cmpb
test
jns
jle
pop
nop
shl
jbe
mov
cmp
jp
std
mov
inc
xlat
out
cmpb
xlat
lods
mov
rcll
outsl
pop
pop
jge
cmp
cmp
mov
or
test
test
test
and
aas
mov
or
mov
cmpsl
and
adc
imul
cmpsb
push
push
cli
jno
stos
jns
xor
int3
insl
pop
push
rcll
hlt
pop
mov
push
enter
clc
push
or
out
mov
shlb
and
ja
adc
ss
sarb
jbe
and
in
rolb
hlt
or
sbbl
inc
pop
popf
push
push
pop
push
xchg
loop
jl
adc
pop
and
xor
add
jge
cmp
packuswb
fdivrs
mov
and
pop
sti
dec
mov
cmpsl
sahf
and
mov
ja
dec
popa
movsb
pop
jns
ss
lret
les
std
movsb
adc
pop
mov
bound
xchg
fidivs
sub
or
inc
es
sarb
out
dec
pop
dec
pop
std
nop
adc
cli
or
jp
inc
push
and
idivl
lret
and
ret
int
push
push
imul
pop
stc
popf
lods
push
xchg
cmc
sbb
cmp
lret
xor
cwtd
sbb
pop
jno
rorb
lret
cmp
insb
cltd
dec
popf
mov
push
aaa
cmp
into
aam
leave
cltd
cmp
push
push
cmp
adc
stc
bound
xchg
mov
xchg
stos
sbb
cmpsb
push
push
add
flds
in
shlb
inc
je
sbb
lret
or
repnz
dec
and
cmp
inc
in
push
scas
jno
mov
jns
dec
jp
pop
in
int
xor
fwait
in
push
ss
adc
std
cltd
mov
xlat
aas
ja
mov
cmp
xchg
xlat
jecxz
push
shll
dec
insb
cmp
pop
rcrb
xor
push
push
jno
fidivs
mov
cld
push
pop
sub
imul
test
push
in
fistl
mov
inc
mov
in
pop
xchg
jp
xchg
sbb
fdivrs
fucomp
sarb
jle
jle
into
sahf
shll
pop
cli
aad
cltd
cltd
xor
pusha
aas
fchs
mov
pop
repnz
and
push
dec
or
insl
sti
sub
shll
or
popa
jl
fcomps
push
fimuls
std
inc
ds
or
xor
or
mov
push
movsl
in
cmp
shr
push
test
out
in
gs
or
adc
arpl
inc
jne
mov
in
call
xorb
and
mov
mov
sahf
idiv
push
jmp
xchg
push
movsb
jecxz
iret
mov
imul
pop
jae
inc
stos
fmull
pop
stc
lds
mov
movsl
inc
insb
lods
inc
addl
leave
in
sub
and
adc
imul
shll
pop
outsb
pop
jmp
mov
cmpsl
xlat
fistpl
movb
jp
dec
fisttps
les
push
pop
jnp
cmp
xor
fwait
jno
mov
cltd
mov
jecxz
pop
jo
dec
push
xlat
or
pop
xchg
or
push
jle
xor
test
scas
rorl
jo
pop
xor
insl
push
arpl
in
xor
add
iret
push
sbb
jle
xchg
add
lret
stos
daa
daa
fs
jmp
xlat
add
and
mov
xchg
add
daa
in
sub
mov
xor
inc
mov
ret
xchg
adc
je
movsl
mov
mov
xor
aas
xor
xor
sub
push
cmp
sti
jg
xchg
jno
outsl
sbbb
rcll
sub
dec
pop
push
jne
xor
lcall
dec
inc
push
cmpsb
add
adc
adcb
ficomps
stos
push
nop
or
mov
mov
mov
push
sarl
out
movsl
jecxz
inc
inc
into
shl
xchg
lods
scas
enter
gs
sub
inc
sub
xchg
sub
mov
out
pop
daa
sub
jb
ja
lock
fcoms
jne
sbb
and
in
pop
mov
aam
dec
inc
adc
ret
cmp
or
fisubl
addr16
stc
mov
fists
pop
jns
add
adc
sbb
push
xor
mov
enter
sub
push
mov
xchg
and
sahf
mov
mov
mov
gs
sub
pop
sbb
push
insl
or
or
orl
and
inc
test
jmp
ret
fwait
push
fcmovnbe
popf
rorb
inc
setle
enter
out
enter
insb
mov
pop
rcrl
flds
nop
ret
je
aas
cmc
jno
cmp
adc
jl
rorb
jae
push
lods
inc
mov
xchg
out
cs
mov
loope
jg
lock
cmp
push
adc
push
cs
popa
rcrl
loopne
fisubrl
daa
xchg
add
mov
mov
andb
mov
rol
and
mov
xor
nop
roll
or
and
xchg
and
in
dec
jo
push
cwtl
stos
imul
or
xor
into
cmp
test
mov
adc
jae
sbb
addr16
loopne
push
rcrb
xlat
pop
xor
push
pushf
cmp
ret
pop
mov
fsts
cmpl
jg
clc
jp
jmp
jbe
mov
jo
push
jge
gs
cltd
mov
add
repnz
push
mov
popa
and
mov
push
stos
sub
sbbl
fs
enter
pcmpgtb
mov
lgs
and
andb
cmpl
push
es
rcrl
add
rolb
ret
pop
xchg
lds
test
clc
pop
cwtl
mov
sbb
cwtl
push
std
xchg
lods
fcomp
in
add
pop
aaa
ror
xor
xor
jecxz
jle
outsb
inc
xorl
repz
insl
out
pop
mov
callw
sub
js
adc
xchg
das
add
mov
shrb
or
cltd
push
dec
insl
add
xchg
cld
xchg
jl
pop
movsb
sbb
into
fidivrl
cmp
leave
dec
bound
hlt
sarl
add
sub
aas
add
push
popl
lret
ljmp
sbb
popa
mov
fstl
sub
subb
cld
sbb
and
popa
call
lcall
call
adc
ret
inc
jne
xorb
sbbb
paddw
add
mov
push
test
dec
push
fsubl
jp
xorb
cmp
adc
or
inc
mov
pop
or
inc
faddl
mov
push
push
sub
aad
lret
cmp
outsb
data16
sub
out
inc
pusha
dec
push
mov
cwtl
mov
cmp
add
jbe
popa
jne
shrb
jo
mov
pop
add
cld
pop
loop
push
or
ljmp
dec
dec
add
and
ja
sub
sub
stos
addb
xchg
sub
in
shr
rorl
cmpsb
xor
push
enter
xchg
sub
sub
test
mov
pop
mov
call
jno
xchg
sub
cwtl
icebp
xchg
test
frstpm(287
push
adc
sti
jl
mov
out
call
xlat
int
imul
hlt
push
cmp
mov
dec
cwtl
sub
or
jle
pop
and
add
out
aaa
pop
dec
test
xchg
cs
cwtl
sub
jle
push
cmpsb
pop
movsb
leave
call
aas
fsubrl
aam
mov
push
jge
popf
roll
in
cmp
pop
mov
mov
popa
shl
out
roll
jl
fcomps
add
addb
clts
aaa
jl
insb
dec
mov
adc
jnp
sub
cwtl
and
lods
fmuls
out
rolb
fdivr
cmp
or
mov
xchg
jmp
jnp
pop
dec
int
push
in
xchg
ljmp
sahf
push
push
mov
mov
fcompl
xor
hlt
fwait
cmp
mov
cmp
jecxz
push
xchg
movsb
inc
adc
cmpsl
sub
dec
mov
addr16
push
or
int3
jnp
mov
call
xchg
cmpsb
loopne
pop
pop
mov
je
int
mov
pushf
test
adc
popa
std
ja
aad
xchg
push
pop
inc
sbb
stos
loopne
jle
call
movsl
int3
popa
fs
inc
xor
add
fs
dec
ljmp
call
add
mov
ja
fists
mov
sub
add
out
mov
cwtl
pop
xchg
pop
xchg
push
adc
xor
or
jge
xchg
jmp
jns
or
fisubs
fcomip
ret
inc
xchg
inc
pusha
out
and
lahf
sub
dec
test
push
mov
loopne
and
repnz
or
jmp
mov
decb
stos
aam
int
outsb
adc
popa
enter
jo
or
loop
adc
and
fldt
jg
pop
aam
xor
hlt
adc
aam
jno
xlat
je
stos
adc
je
push
push
movsb
imul
adc
sahf
rorl
or
mov
dec
push
mov
js
adc
ffree
pop
push
in
ljmp
cs
ret
sbbl
cmp
sti
jmp
repnz
loope
lods
pop
popa
fdivrl
mov
rcrl
jp
leave
jecxz
mov
pusha
mov
stc
call
adc
and
orl
out
push
xchg
xor
push
xchg
addr16
out
ja
out
dec
push
mov
and
nop
in
xchg
frstor
add
aad
sub
adc
xor
mov
add
adc
mov
lock
sub
subl
ret
fwait
sub
icebp
gs
mov
sub
push
mov
dec
jo
lods
pushf
inc
xor
cmpsb
push
push
lret
cmc
cld
imul
cmc
aaa
inc
fwait
in
scas
mov
popa
pop
cli
rcrl
mov
pop
adc
insl
jo
test
ljmp
and
std
std
int
adc
mov
pop
hlt
aaa
jbe
mov
test
or
das
fwait
cwtl
stos
orb
fnstsw
test
mov
es
pushf
or
dec
hlt
push
in
pop
and
or
adc
into
add
les
xor
fnstsw
sbb
inc
jbe
andl
ret
mov
cmp
lret
mov
cmp
repnz
bound
movsb
cmpsl
xor
push
or
and
ret
add
test
xchg
push
xor
mov
sub
stos
loop
inc
lcall
fs
iret
pop
fbstp
int
pushf
addr16
das
sbb
adc
xor
pop
xchg
mov
dec
popf
outsb
jo
insl
inc
xchg
and
out
fsubl
pop
sub
clc
cld
pop
pushf
iret
filds
push
pop
incl
add
dec
js
push
lahf
fnstcw
xor
xor
inc
out
call
jb
adc
mov
bound
cmc
lock
fcoml
cmp
je
stos
scas
ffree
ss
andl
mov
insb
adc
cwtl
sub
in
and
add
divb
cltd
xor
mov
mov
pop
sahf
xchg
mov
pop
int3
rolb
pop
fbstp
push
dec
jnp
int3
dec
jne
shrb
jle
pop
fwait
out
iret
xorb
mov
cwtl
mov
pop
sbb
push
roll
adc
jle
push
cs
test
push
sti
push
jne
addr16
inc
and
cmp
and
test
pop
adcb
push
jecxz
add
pop
xchg
aaa
adcl
or
sub
in
fstl
xlat
inc
and
int
mov
fimull
loope
lea
or
movsl
or
in
in
js
repz
cmp
adc
and
decb
push
fcoml
les
in
ss
es
jge
lock
cmp
cs
dec
cmc
mov
inc
inc
and
in
mov
inc
push
inc
fidivrl
adcl
push
pop
jecxz
lods
jmp
jns
aad
xor
cmp
lahf
adc
insl
xlat
cmpsl
shll
cmp
xor
or
and
in
add
movsb
cmp
mov
cli
lret
push
mov
pop
lcall
jmp
push
add
cmpsb
pop
lea
call
and
shlb
cmp
out
loop
dec
adc
addr16
movsb
mov
mov
popa
cmp
repz
xlat
icebp
xlat
out
and
jge
insb
or
outsl
enter
fbld
in
call
dec
mov
and
mov
or
pushl
inc
into
insb
je
stos
iret
cli
adc
jnp
or
cmpsb
fildll
addr16
popf
in
jnp
decb
mov
mov
imul
dec
scas
jbe
loope
pusha
rorl
nop
xchg
test
add
adc
pop
jo
jae
test
push
mov
fnsave
fwait
cmp
repnz
stos
fnstsw
adc
cmp
lods
sahf
adc
push
mov
fistpll
mov
push
dec
orb
xchg
popf
je
mov
and
outsb
out
sub
hlt
insb
les
arpl
inc
orb
adc
jne
imul
cmp
dec
inc
push
bswap
or
dec
hlt
addr16
out
cmp
mov
mov
mov
lret
popl
js
pop
ljmp
lret
push
cwtl
mov
dec
push
xchg
jmp
dec
imul
imul
aam
mov
jns
int3
dec
push
cmp
icebp
hlt
dec
push
ds
xor
out
xchg
std
mov
xchg
sbb
sbb
inc
mov
std
pop
cmp
js
mov
lock
loopne
and
popa
imul
imul
mov
push
test
repnz
imul
out
ret
pop
adc
fsubrl
add
cmp
dec
mov
pop
scas
andl
sub
out
pop
xchg
nop
movl
fstps
out
insl
xor
fxch
dec
aad
shlb
outsl
loopne
loope
xchg
mov
call
mov
mov
cltd
cmc
and
nop
or
sahf
inc
sub
clc
ss
xchg
hlt
cmp
inc
outsl
ror
sub
jge
add
fstps
loopne
sbb
mov
aad
xchg
xor
jle
das
push
dec
or
testl
inc
mov
aas
stc
cli
leave
push
jne
cwtl
iret
sub
les
lcall
popf
inc
jmp
ljmp
out
repnz
pop
loopne
jg
repz
dec
ljmp
mov
adc
xchg
xchg
push
sahf
or
inc
inc
add
mov
stos
clc
rcl
push
mov
jne
bound
stos
sarl
cmpsb
push
imul
sub
pop
lods
cwtl
xor
jo
inc
lcall
pop
xchg
lock
mov
sub
in
jno
cmp
push
pop
push
std
sbb
loopne
cmp
aam
int
std
outsl
add
add
movsb
sahf
cmp
mov
pop
mov
inc
inc
lods
lea
in
mov
popa
cmp
add
jecxz
sub
icebp
call
pusha
mov
loop
lods
out
pop
pop
enter
jne
mov
xor
mov
cmp
ljmp
cmc
xor
mov
test
pop
jl
mov
mov
and
stos
paddsb
xor
push
sbb
ljmp
jnp
test
sbb
cwtl
mov
pushl
push
ret
mov
sbb
pop
add
xchg
imul
dec
xchg
jmp
decl
push
jns
rolb
mov
fisttpl
pop
dec
test
jp
in
addb
loope
push
test
pop
rcrl
or
out
jb
and
ret
test
mov
push
and
pushf
pop
shll
ds
and
xchg
outsl
data16
xchg
in
leave
jge
pusha
jp
xlat
ljmp
xchg
cmp
mov
divps
bound
pop
mov
addl
mov
pop
data16
add
sbb
orb
bound
rorl
jns
add
or
add
in
xchg
cmp
pop
lahf
inc
xlat
pop
cmp
mov
mov
pop
ds
pop
lds
sahf
push
bound
imul
rolb
jmp
lds
les
xor
cmp
push
inc
mov
test
lods
mov
sub
insb
dec
pushl
sar
iret
fisttpll
pop
setle
push
or
inc
xor
rorb
push
sahf
pop
imul
lods
mov
pop
shl
mov
fbld
cmc
ds
int
iret
mov
push
test
ljmp
mov
fstl
mov
lock
orb
cmp
outsl
fldl
pushw
or
inc
je
aaa
call
jns
imul
lods
or
cmpsl
mov
add
ja
cld
dec
sub
aad
mov
push
orl
push
mov
cmp
adcl
xchg
sbb
and
aam
shl
fs
gs
pop
repnz
mov
rol
inc
and
fwait
hlt
inc
lds
out
lea
in
cmp
shrb
imul
outsb
incb
sub
ds
sbb
inc
mov
jns
pop
and
into
mov
sbb
out
imul
cli
mov
scas
inc
adc
fstps
dec
mov
popa
subb
fidivl
mov
fs
mov
std
push
push
rorl
scas
sbb
jle
mov
shrb
out
lea
popf
push
imul
cmp
sub
daa
jmp
mov
jge
shlb
push
adc
fsubrs
inc
insl
enter
mov
aam
cmpsb
inc
xchg
or
rcrl
add
aad
iret
movsl
cmpsl
dec
out
push
and
mov
push
or
mov
push
sbb
fstps
cmp
sbb
xchg
lds
pushf
xchg
lret
push
mov
adc
mov
decb
xchg
pop
cmpsb
movsl
cmp
inc
mov
xchg
fadds
adc
cmpsl
cmp
xor
xchg
push
and
push
add
in
mov
xor
push
mov
lret
add
cmp
jb
shrb
adc
push
jae
jae
cmc
lock
inc
xchg
push
outsb
adc
sub
mov
mov
pop
leave
into
pop
inc
in
push
sahf
out
xchg
dec
repz
pushf
repz
stos
mov
cmp
xchg
subb
notl
dec
jl
loop
push
xor
aad
and
pusha
rcrb
je
dec
jl
leave
daa
mov
mov
adcb
and
mov
fwait
push
and
loopne
and
test
cmp
dec
ret
fwait
lcall
and
bound
mov
jbe
cmpsb
dec
cmp
test
cld
mov
jb
insb
dec
mov
xor
std
je
in
iret
fucomp
push
push
sub
mov
mov
mov
sbb
mov
pop
adc
incl
sbb
pop
add
jae
pop
sbb
int3
cmpsl
vpsubsb
jnp
inc
xchg
hlt
and
xlat
nop
cmpsl
inc
test
mov
mov
xlat
inc
loopne
out
dec
out
bound
les
adc
pop
jbe
jg
cmp
sahf
push
jg
add
cmc
ja
and
enter
aad
scas
outsl
sti
mov
imul
mov
add
mov
dec
mov
fildll
shrb
cmp
in
rcrl
inc
add
add
insb
dec
movsl
sahf
push
loop
popf
add
loope
xchg
adc
and
jg
nop
std
shl
or
pop
notb
jns
test
jae
mov
xchg
and
outsb
sbb
int3
sahf
jle
mov
cld
popa
sbb
xor
pop
fs
ret
jno
mov
inc
sbb
loope
cmc
dec
ds
add
sub
sub
push
inc
push
ja
clc
inc
xlat
test
cmp
mov
gs
xchg
aad
cmpsb
stc
pcmpeqb
imul
pop
inc
gs
cmp
push
out
std
xchg
cmp
jb
sbb
lds
jmp
push
jb
outsb
repz
ror
addl
pop
hlt
cld
out
pop
stos
dec
movsb
jb
stc
loop
orl
pop
fnsave
jge
sbb
daa
xchg
in
loope
aas
lds
mov
pusha
rclb
mov
cwtl
aam
adcl
sbb
pop
arpl
push
add
jnp
or
xchg
xchg
cmpl
push
add
rcl
or
push
xchg
sti
mov
lds
pop
adcl
sub
mov
outsl
jp
shl
pop
jge
xor
ret
push
xchg
inc
arpl
sbb
dec
and
icebp
js
adc
xchg
cmp
stos
ret
mov
add
rcrl
and
xor
xchg
rclb
mov
add
add
jae
xchg
dec
xor
out
mov
xchg
imul
loopne
stos
jns
push
mov
inc
push
arpl
sub
fiaddl
ds
xchg
sub
sbb
mov
stc
adc
xchg
xchg
fsubrl
fildl
pop
loopne
pushf
sbb
xlat
movsl
pusha
mov
jo
cmp
add
pop
cmp
jecxz
push
adc
cltd
roll
decl
dec
ret
popa
inc
lods
xchg
pop
ficompl
xorb
in
arpl
je
fsubrl
mov
pop
int
aam
insl
add
scas
pop
daa
and
adc
sbb
xchg
aaa
sti
jns
cmp
lahf
scas
aas
jae
or
rcrb
movsb
jno
fstl
jg
cmpsb
xor
in
stos
mov
adc
sub
push
test
mov
xchg
mov
fwait
lods
and
in
adc
test
and
pop
xor
fcoms
pop
and
adc
pop
idiv
and
pop
sbb
jno
sbb
mov
or
out
cmp
inc
mov
dec
fidivl
sbb
aaa
push
decl
lcall
sahf
shlb
daa
repz
sbb
scas
or
inc
add
inc
call
mov
test
lods
out
leave
xor
lock
andl
and
or
scas
lods
xchg
sbb
stc
inc
repnz
aam
jle
jnp
adc
mov
sbb
xor
pop
cmpsl
lds
add
out
jbe
and
scas
insb
cmc
push
sub
mov
mov
sub
mov
mov
lret
leave
adc
mov
inc
pusha
pusha
movsb
dec
out
or
cld
addr16
je
add
add
adc
ss
bound
cmpsl
sbb
cli
fildl
paddb
mov
loope
std
ja
sbb
lods
sbb
sbb
aam
clc
clc
lahf
mov
fs
and
sbb
pop
or
cmp
frstor
std
sub
inc
mov
test
fwait
not
or
mov
adcl
stc
lahf
sbb
adc
or
leave
jns
dec
xchg
xchg
cmp
dec
dec
cmpsb
aad
repz
sbb
xor
cmp
cmc
xchg
mov
cmc
mov
xchg
jmp
jbe
stc
scas
int
leave
cmp
dec
pushf
mov
dec
push
inc
ds
and
jo
mov
ud1
ja
jge
movaps
push
ljmp
dec
cmp
inc
seto
mov
iret
in
jg
iret
mov
cmc
inc
pop
add
jle
je
add
test
cmp
jne
cmc
loopne
jle
shll
sbb
lret
in
jmp
sub
sbb
jns
aam
sahf
push
outsb
or
std
shll
cltd
jno
push
push
movzwl
push
ret
fidivl
adc
loope
lret
jmp
fcmovu
repnz
pop
scas
js
push
rol
pop
cwtl
xchg
rolb
mov
sub
lds
aaa
in
push
test
push
aad
cltd
or
mov
call
dec
push
pushf
or
push
pop
out
add
push
int
xchg
cwtl
sti
mov
dec
dec
pusha
sbb
pop
sbb
dec
mov
int
ret
sti
rcll
xor
push
add
or
mov
shr
jge
sub
jbe
scas
or
loopne
jg
mov
adc
mov
js
jge
sti
jns
inc
xchg
and
sub
imul
xchg
mov
sbb
pop
add
jns
mov
out
je
mov
cmp
push
push
pop
repz
cmp
sahf
mov
les
add
leave
cli
or
jbe
cmp
movsl
shl
fcom
leave
cltd
inc
pop
mov
dec
loopne
jne
or
rcr
jns
mov
adc
fsubs
ja
movsb
fisubl
or
cs
scas
xchg
pop
and
jecxz
in
xchg
cmp
fcoms
jae
cmp
aaa
fistpll
repz
pop
lret
sub
aaa
ret
rorl
or
fxch
das
inc
jnp
push
mov
loopne
mov
xchg
sbb
mov
push
in
leave
cmc
xor
adc
sbb
cvtps2pi
test
in
movsl
xchg
popa
inc
jne
and
pop
sub
xor
dec
push
gs
nop
and
hlt
xchg
mov
int
push
push
mov
pop
fnsave
adc
sbb
push
fldt
cld
mulb
out
fidivrl
mov
xchg
jbe
and
into
add
rcrb
js
cmc
push
in
pop
mov
sub
fs
enter
icebp
xor
outsb
xchg
in
push
movsl
andb
and
ss
mov
push
addl
fmull
or
jb
cmpsb
jno
fwait
cmp
out
cmp
movsl
mov
jne
rorb
insb
xor
jge
add
inc
and
imul
lahf
xlat
mov
add
iret
mov
inc
dec
out
jbe
out
ja
jle
sub
inc
rcl
dec
mov
adc
ds
pop
pop
sbb
pop
stos
scas
scas
adc
loopne
cmp
xor
sbb
lret
aam
pushf
movsl
mov
inc
jae
fs
pop
cs
lret
pop
test
jb
jp
mov
mov
fsqrt
std
fwait
mov
out
ret
sti
mov
xlat
ret
xchg
notb
fsub
cmp
xor
jb
mov
push
ret
in
push
mov
add
sbb
fucomip
add
rcl
cwtl
adcb
testb
inc
sahf
lahf
xchg
arpl
pop
mov
jl
lock
ret
in
add
dec
jle
mov
mov
fildl
repz
ret
inc
movsb
push
ja
or
inc
lods
mov
cmpl
xchg
adc
pusha
mov
mov
jp
mov
cltd
repnz
mov
and
roll
adc
push
pop
loop
sub
mov
imul
and
jl
sub
rcll
cli
jl
pop
xchg
ljmp
cli
sub
mov
mov
fmull
ret
xchg
leave
or
sbb
out
out
mov
arpl
daa
xchg
stos
out
mov
cmp
jecxz
cmp
rcrl
aaa
insl
dec
stc
fs
push
aad
push
movsl
vpshaw
mov
ds
ds
xchg
mov
jecxz
in
sahf
js
insl
push
xor
inc
mov
incb
int3
cs
push
pusha
fdivl
icebp
push
cmp
xor
jnp
faddl
test
mov
sub
dec
xor
cltd
ret
jo
push
xchg
mov
push
inc
push
ror
cmpsl
xor
mov
push
arpl
fldt
push
sbb
sbb
fnsave
cwtl
add
adc
pop
or
add
stos
xchg
jecxz
or
sub
or
outsb
arpl
push
es
jbe
jg
test
sub
aaa
sub
push
pushf
aam
lahf
jecxz
dec
rcrb
ror
pop
test
push
or
imul
or
sub
leave
adc
mov
mov
mov
and
jecxz
add
mov
das
enter
in
lea
iret
lea
cmpsl
loop
aas
fsts
xchg
cmpsl
imul
stos
int
dec
push
push
cmp
rcl
adc
mov
mov
pop
mov
dec
mov
icebp
scas
lock
jl
hlt
jno
sti
pop
dec
push
lds
mov
loopne
push
adc
add
xor
pop
dec
out
jecxz
in
rorb
jae
outsb
or
jge
xchg
jbe
mov
fcmovnb
bound
cltd
test
aam
cmp
sbb
dec
jg
xchg
stc
ljmp
in
pop
cld
mov
scas
lea
inc
dec
mov
mov
cmpsl
out
popa
lret
sub
cltd
test
push
push
add
pop
sbb
in
push
or
sub
cltd
gs
push
dec
mov
cmp
or
xchg
insl
jge
or
add
loope
nop
mov
cs
sub
push
fwait
hlt
cld
dec
fwait
mov
pop
or
inc
pop
sub
aaa
jecxz
jne
fisubl
cmpsl
and
mov
or
nop
pop
mov
bound
int3
adc
adc
xor
inc
mov
dec
dec
push
cmpl
pmullw
mov
rclb
push
dec
inc
lcall
pop
test
sbb
dec
push
repz
push
cmp
je
xchg
enter
adc
stc
insl
cld
push
fmuls
les
sbb
fidivs
mov
mov
pop
sahf
push
mov
fiaddl
call
lea
mov
push
mov
mov
jecxz
mov
pmulhuw
adc
and
jne
xor
cmp
fdivs
negl
jecxz
in
jmp
or
stos
adc
mov
mov
out
pop
push
adc
fadds
jle
adc
xor
xor
pushf
add
sub
loope
xor
fisttpll
jmp
mov
push
push
push
std
iret
sti
fldt
fs
pop
xchg
pop
imul
pop
aaa
in
lds
adc
dec
test
push
sub
add
or
add
ljmp
std
push
inc
mov
movsl
out
push
mov
xor
out
pushf
aam
xor
pop
scas
ja
andl
mov
mov
ja
push
cmp
ret
jg
data16
rcll
or
push
es
jne
add
data16
ja
dec
inc
repz
jne
scas
mov
sbb
push
data16
fisubs
outsl
dec
inc
sub
push
sub
loope
push
xor
mov
jns
movsl
pusha
cmpsl
ljmp
jbe
dec
outsb
es
out
cltd
sbb
xchg
ffreep
lret
or
int3
cmp
sbb
adc
or
lock
sbb
inc
jle
push
inc
loope
push
in
fdivl
mov
mov
sbb
fldl
std
adc
dec
fisttpl
pop
pop
mov
pop
pop
in
stos
mov
sbb
movsb
and
mov
into
into
andl
sub
movsl
push
lea
out
mov
jmp
int
test
es
hlt
iret
jge
fsubr
push
xchg
xchg
test
subl
movsl
or
daa
imul
out
fidivrs
test
sarb
inc
ds
sbbb
je
sbb
dec
cmpl
inc
push
and
mov
and
imul
ss
mov
fdivrl
jnp
sub
insb
pushf
sbb
dec
inc
mov
fidivrs
test
xchg
mov
ljmp
mov
repnz
mov
hlt
cmpsl
fiaddl
dec
mov
cmp
dec
fcoml
xor
and
add
aam
imul
nop
mov
insb
sbb
paddsw
or
cmpsl
jae
dec
sub
mov
pop
mov
bound
mov
xchg
shll
outsl
movhps
ds
adc
fwait
push
arpl
outsb
lods
jg
push
adc
jno
pop
jle
and
popf
mov
addr16
ljmp
leave
lret
fmulp
pop
xchg
xor
test
pushf
push
sub
mov
into
dec
cmpsl
ret
mov
and
test
add
mov
insb
cmpsl
and
scas
add
or
sub
outsl
out
push
push
xchg
andb
or
int3
mov
push
push
lcall
xchg
sub
sbb
sub
decb
lods
popa
xor
or
push
add
subl
jns
int
in
bound
sbb
imull
sbb
stos
ja
scas
aaa
fisttps
ljmp
xchg
jbe
fldlg2
xor
insl
xchg
cmc
cmp
and
mov
rcl
clc
mov
inc
jne
call
mov
mov
sub
cmp
fmuls
sbb
in
in
shrl
or
inc
mov
cld
cmc
dec
dec
pop
mov
mov
mov
stc
int
pop
icebp
aaa
push
xchg
push
adc
popf
add
inc
mov
aaa
mov
pop
push
jne
in
xchg
inc
xchg
push
lret
sti
das
push
mov
js
push
adc
mov
and
adcb
xchg
addr16
dec
loop
sbb
adc
dec
imul
repnz
lea
fwait
movsb
push
into
sbb
vcvtps2dq
in
and
into
jns
outsb
mov
jp
aaa
cmp
lret
test
lods
add
add
sbb
pop
clc
sub
sbbb
jg
xchg
cmp
cmp
pushf
shl
mov
lahf
xchg
insl
mov
mov
sub
push
mov
push
add
mov
sub
addr16
sbb
lea
xlat
fimull
test
ss
xor
mov
add
cmp
dec
inc
loopne
imul
cmpsb
out
or
out
pop
bound
dec
stc
inc
xchg
inc
jge
and
mov
sbb
aaa
enter
jno
sbb
ds
mov
hlt
or
mov
mov
out
pop
lret
imul
hlt
or
mov
inc
push
inc
cmp
fisubrl
repz
in
in
add
pextrw
mov
inc
jb
test
iret
in
sbb
sub
test
outsb
repnz
sub
or
pusha
lret
scas
mov
lret
cmc
cmpl
testb
add
or
jne
in
and
ss
jle
adc
inc
pusha
xchg
cmpsl
bound
push
sarb
cmp
xchg
loopne
mov
dec
mov
push
dec
jl
jmp
cmp
test
fnstcw
lds
mov
adc
fisubl
loope
insb
pop
mov
andl
push
aad
mov
mov
jmp
jg
push
fwait
movsl
sub
or
jl
push
fildl
xchg
pop
mov
insl
push
or
mov
enter
sbb
fwait
test
jl
cmpsb
rorb
imul
pop
fld1
jg
negl
orb
inc
push
cs
lret
sub
push
jne
hlt
pop
cmp
cmp
es
cli
inc
jl
leave
sub
or
mov
push
ljmp
add
jno
xor
sahf
fnstcw
pop
sbb
dec
loope
pop
fisubrl
xchg
incb
push
xchg
mov
push
movsl
mov
and
or
popa
add
jnp
dec
xchg
es
sbb
cmp
out
xchg
jns
out
sub
jmp
push
out
fdiv
push
pop
mov
ror
xor
in
jmp
pop
out
addr16
mov
fistpl
pushf
shrb
xchg
cmp
subb
pcmpeqw
xchg
fcompl
clc
movsl
std
sbb
loop
push
test
cs
mov
repz
jl
xor
jecxz
stc
leave
dec
setbe
xor
leave
rcll
repnz
jle
ds
jnp
hlt
lea
and
mov
cmp
add
mov
inc
dec
movl
ret
test
call
movl
cmp
ja
dec
mov
adc
xor
jp
jg
dec
jae
jo
lcall
mov
sub
sub
mov
orl
mov
sub
sti
mov
add
cmpsl
adc
into
rorb
aam
xchg
xchg
ja
cmpsb
lock
mov
lahf
movsl
loop
jae
in
sbb
idivb
int
cwtl
fsts
cli
repnz
lret
lcall
dec
repnz
ret
cli
add
add
or
sahf
ret
int
push
popa
rorl
cmc
xor
test
aaa
lcall
xor
or
aad
dec
int
push
push
mov
mov
fistpl
jecxz
dec
fidivrs
imul
adc
inc
and
jne
sub
and
mov
adc
popa
cwtl
out
lea
add
ret
pop
insb
fdivrs
cmp
mov
hlt
and
mov
insb
mov
inc
cld
and
bound
stos
or
cli
mov
xor
mov
cmp
xchg
pop
push
xorl
or
addb
xchg
push
dec
int3
or
jo
mov
pop
xor
je
lock
jmp
into
mov
jo
outsb
rol
lods
daa
inc
test
sbb
js
aas
cli
adc
dec
xorl
pop
ror
lods
xor
or
and
in
xlat
and
in
es
xor
lea
repnz
jno
or
inc
loop
int
cld
stos
sbb
in
pop
or
fnstenv
pop
stos
sti
and
nop
out
adcb
adc
add
xchg
mov
and
cwtl
add
test
sar
mov
push
add
lcall
cwtl
mov
cmp
and
vpsllq
test
jns
cmpsl
popl
loope
call
push
aas
xor
cli
push
es
or
xchg
xor
sarl
xchg
or
inc
insb
mov
addl
sbb
inc
imull
cmp
or
mov
inc
fcmovnu
and
xchg
sti
mov
push
jae
and
imul
ret
lret
adc
in
push
or
mov
mov
das
stos
mov
pop
in
lock
push
sbb
and
cld
stos
sbb
cmp
sbbb
xor
xor
lods
and
cs
fsub
popa
jo
fistpl
mov
and
inc
gs
or
mov
int
pop
loop
loop
add
sti
xlat
xchg
ret
imul
mov
icebp
shll
mov
in
stc
sahf
adc
mov
jl
ret
pop
pop
sahf
lods
fisubrl
stos
cmp
push
cmp
daa
movsb
jbe
lcall
mov
jns
xor
mov
cmc
outsl
out
scas
int
aam
push
or
jg
cmp
enter
mov
mov
push
or
cmc
jecxz
pop
and
inc
push
xchg
adc
pop
inc
xchg
dec
mov
dec
sbb
cld
push
ljmp
inc
rcrl
sbb
stc
in
lods
inc
loopne
fsubs
xorb
add
cld
in
jb
insl
pop
insb
mov
and
repz
fmuls
xor
pusha
pop
dec
in
arpl
mov
fistpl
cmp
pop
pop
stos
pushf
jae
out
ror
scas
cltd
jno
xor
sub
shl
add
inc
mov
adc
fstpt
pop
push
sub
stos
inc
mov
imul
mov
sub
loopne
es
lcall
push
out
or
out
dec
pop
push
lcall
jmp
jg
movsb
loop
push
adcl
lods
and
sub
cwtl
xor
js
xlat
cmpsl
popf
in
or
mov
mov
hlt
lret
in
cmp
jge
addb
fistpll
lret
dec
xchg
mov
cwtl
and
loopnew
push
inc
jo
sbb
rcrl
ss
cmpsl
rolb
cli
pop
repnz
push
fisttps
pop
cmp
leave
fsubr
dec
popa
fsubrp
fcomps
or
pop
mov
ds
cmp
and
out
add
and
out
loop
jo
call
ffree
sub
and
inc
test
lock
iret
call
xchg
jns
mov
ljmp
mov
cmp
inc
sbb
ret
inc
imul
xor
adc
ret
addr16
pop
popa
push
dec
push
mov
xchg
add
pop
mov
pushf
fucomi
dec
addb
stos
aas
jno
xlat
lods
les
mov
jae
popa
clc
out
daa
xorb
mov
or
sbb
or
sbb
dec
adc
mov
aas
xchg
cmc
add
nop
and
push
xor
loop
or
push
cli
lahf
insb
imull
pop
sub
dec
sbb
clc
shl
cwtl
inc
pop
mov
cmc
jmp
sub
dec
xchg
jnp
in
mov
popa
pop
mov
ret
inc
jae
push
cwtl
aad
or
push
mov
pop
jp
xchg
sub
jge
cmp
cmp
shll
cwtl
pop
mov
icebp
daa
adc
mov
add
fcomps
mov
cmpsl
xor
ss
out
aad
adcl
push
xchg
ret
ret
das
stc
jecxz
push
ljmp
jg
shlb
pop
pop
inc
hlt
or
push
cmp
fwait
jmp
xchg
mov
outsb
pop
ficomps
cmpb
in
and
iret
push
jns
fbld
sub
mov
pop
mov
push
clc
stos
sbb
xchg
or
lods
aad
outsl
es
cs
popa
dec
andl
jmp
jmp
outsb
mov
in
adcl
push
add
mov
cmp
dec
mov
test
mov
add
pop
call
xlat
pcmpeqd
mov
add
xor
stos
cmc
fwait
cmpsb
movsb
iret
in
cmp
jp
iret
ja
pushf
pop
fs
add
outsb
icebp
mov
sahf
push
fwait
mov
mov
movsl
xor
cmp
jge
test
cmpb
gs
inc
mov
jbe
and
push
mov
inc
imul
jnp
mov
lock
or
push
push
xchg
ret
push
movsb
nop
enter
cmpsl
xor
xlat
sbb
adc
jmp
ret
xchg
adc
mov
xor
aad
inc
sti
or
add
dec
push
mov
cmp
mov
fidivrl
and
jae
sbb
mov
fidivrs
insl
mov
rolb
rolb
push
lea
bound
ljmp
dec
push
insb
stc
or
notb
fwait
rcrb
insl
or
fistpll
xchg
adc
mov
xchg
int
lret
cmp
int3
push
les
nop
cmpsb
fyl2x
stc
pop
repz
int
rorb
out
ljmp
or
jae
insl
sahf
mov
dec
and
adc
inc
scas
fwait
push
imul
leave
rol
movsl
aam
mov
push
lret
cmp
mov
push
xchg
dec
pop
fildll
dec
inc
mov
icebp
insl
pop
ss
aad
sbb
mov
adc
daa
jbe
cmp
cld
data16
arpl
xlat
jb
dec
das
mov
xorb
popa
cmp
jp
and
add
dec
inc
and
not
ficoml
or
dec
xchg
outsl
xor
xor
outsb
mov
idivl
cmp
lods
jl
leave
fxch
jns
mov
aaa
jo
ja
mov
mov
sbb
lcall
cmp
leave
jecxz
push
lock
xor
push
ss
and
adc
jmp
add
cltd
pop
xor
pushl
mov
adc
mov
mov
jmp
ret
push
or
stos
inc
out
xchg
and
je
inc
mov
jp
out
sahf
enter
or
mov
xor
mov
or
loope
stos
aad
sar
pop
jne
jb
es
js
popl
mov
push
add
orl
bound
loope
sbb
cmp
push
lret
ja
cmc
sub
fisubrs
push
xchg
xchg
jne
push
es
sub
xor
cmp
dec
bound
fldenv
leave
push
outsl
js
cwtl
push
aam
xchg
notl
roll
xor
pop
outsl
xor
mov
mov
outsl
fadds
inc
mov
mov
inc
cmpsb
or
inc
fisubrl
adc
mov
push
pop
push
pop
stos
jp
into
call
sub
and
dec
inc
push
add
lock
divb
in
inc
addr16
stos
inc
inc
arpl
imul
mov
sbb
cs
cltd
dec
mov
jle
or
pop
inc
mov
xchg
shlb
outsb
pop
incb
shrb
pop
pop
inc
loopne
xchg
add
push
push
sahf
sbb
inc
mov
mov
test
lods
mov
sbb
adc
push
insl
imul
xchg
inc
gs
cmp
insb
dec
cmc
pop
jp
cmpsb
es
cmc
sub
ja
mov
mov
movb
mov
in
jno
adc
jbe
lds
cmp
cwtl
push
and
or
push
cmovae
imul
push
sub
leave
comiss
sbb
ss
push
xchg
mov
push
idivb
sahf
loop
in
scas
cmp
ret
mov
aam
loop
bound
pop
xchg
mov
lea
arpl
jo
test
aad
rorb
sbb
or
enter
subb
pop
push
movsl
add
pushl
loop
jo
sti
int3
test
pop
fidivrl
fisttpl
push
xor
push
scas
sbb
cs
pushf
mov
fnop
pop
cli
add
lea
xchg
mov
push
or
mov
addr16
mov
adc
xchg
xor
outsb
in
shl
std
cmp
imul
ds
in
ja
xor
sarb
pushf
or
sbb
adc
mov
jbe
bound
lods
aam
call
or
fcomi
dec
cs
addr16
je
ds
in
jno
mov
dec
cwtl
or
jns
cmpsl
xor
mov
cwtl
xchg
insl
retw
adc
clc
sbb
gs
sub
aad
das
mov
push
sbb
jns
mov
int
cmpsl
or
lcall
test
popf
mov
jmp
sbb
inc
jb
jb
jmp
mov
hlt
ljmp
test
mov
cmp
loopne
push
xchg
inc
es
andl
or
inc
dec
int3
pop
xchg
and
mov
xchg
and
dec
adc
mov
or
jae
sbb
outsl
or
dec
or
cmp
pop
adc
and
je
pop
add
loop
pop
push
mov
test
adc
mov
mov
outsl
out
sbb
pop
test
gs
movsb
adc
mov
sbb
jae
dec
stos
sub
stc
mov
cmp
sub
mov
inc
je
and
sti
xlat
adcl
pop
mov
shlb
sub
fstl
xor
insb
lcall
int3
add
dec
into
inc
mov
and
mov
jne
sub
sub
sbb
add
push
cltd
loop
add
movsb
das
sub
push
repnz
outsl
pop
hlt
cld
out
std
outsb
into
or
scas
or
cmc
dec
cli
mov
repnz
out
sbb
dec
xchg
dec
pop
les
adcl
mov
pop
xor
bound
loope
fbld
cld
je
repnz
dec
repz
in
jnp
stos
mov
mov
pop
mov
cltd
call
mov
sub
inc
lret
sarl
mov
inc
push
gs
add
sub
jbe
ret
sub
sbb
gs
sbb
loope
mov
sbb
inc
push
dec
xchg
sahf
pop
out
sbb
adc
cld
push
into
xchg
cmpsl
sbb
in
pop
aaa
lds
xlat
int
shlb
outsl
inc
ret
subl
rcl
loopne
das
jno
or
mov
bsf
out
and
bound
test
mov
lcall
dec
mov
aas
pop
mov
pop
lret
mov
mov
cli
popa
lods
popf
push
test
int3
fs
mov
loop
sbb
pop
pop
push
sahf
movsl
inc
or
mov
scas
mov
scas
imul
xchg
jl
je
sub
ljmp
pop
std
aam
xchg
ja
nop
xchg
pop
mov
xchg
cltd
dec
push
scas
xchg
loopne
popfw
jg
gs
int
pop
xlat
sbb
adc
stc
jl
adc
pop
out
repnz
push
pcmpgtd
mov
pop
mov
loope
iret
and
and
jb
sub
daa
pop
shl
mov
jg
pop
push
mov
pushf
fs
sub
inc
enter
pop
into
push
push
mov
in
out
lahf
pop
mov
fistpl
loop
xchg
fists
aam
cmp
outsl
jne
push
jb
add
jecxz
test
outsb
adc
hlt
pop
cmp
int3
jl
and
cltd
pop
or
shrl
gs
mov
mov
into
vcvtss2si
sub
jo
jno
xlat
roll
out
or
jno
lcall
xchg
jmp
loop
or
jnp
imul
bnd
cli
cmp
fiaddl
jle
aam
pop
mov
mov
jae
pop
mov
in
cmp
cwtl
dec
fsubs
in
sar
or
pushf
mov
sbb
xchg
les
in
cmp
jb
fwait
sub
rorl
push
cmpsb
mov
popa
nop
lahf
in
shll
loop
sub
inc
ss
jle,pn
ljmp
ja
or
cmpb
repz
push
jl
add
cmp
inc
stos
mov
and
lock
cwtl
mov
mov
arpl
sbb
cmp
dec
add
mov
jg
out
mov
bound
mov
outsl
fs
xchg
mov
and
lret
pop
sub
nop
dec
stc
jne
xchg
or
jmp
jbe
mov
movsl
fcmovnb
push
loope,pn
xchg
leave
adc
jecxz
dec
push
push
inc
push
push
dec
pop
mov
frstor
mov
inc
scas
mov
or
sub
adc
mov
push
mov
jb
mov
push
jb
das
mov
jbe
insl
push
dec
rcll
js
fimuls
int
mov
xor
jecxz
clc
add
push
mov
adc
xchg
jo
inc
fistpll
mov
out
lahf
mov
dec
pop
out
out
xchg
or
cmovle
lds
mov
jp
lret
das
out
loop
push
lods
pop
push
push
dec
xchg
push
movsl
or
push
inc
stos
int3
fldcw
pop
test
fwait
clc
mov
mov
mov
sbb
or
push
lret
push
rcr
sub
orl
lret
rcr
fstl
in
int
movb
ja
pop
push
pop
in
jmp
jbe
sub
adc
cltd
ret
shl
lret
daa
call
add
loope
xchg
inc
jg
add
out
into
mov
push
or
loop
pop
daa
sub
xor
cld
xchg
jb
dec
cmp
fs
neg
sub
popf
jp
fistps
loope
mov
push
iret
shlb
sub
ret
cmp
imul
cmpsl
mov
leave
int3
jg
rorl
lret
rcll
mov
xchg
imul
ss
clc
repnz
pop
aaa
adc
and
cmp
jl
mov
push
scas
sbbl
sub
inc
jnp
xchg
cltd
dec
xor
push
arpl
pop
test
mov
lcall
movsb
adc
pop
imul
push
test
bound
cmp
lods
lds
mov
pop
push
add
lret
insl
xchg
insb
in
pop
inc
bound
out
inc
shlb
sub
scas
mov
add
jl
fwait
mov
inc
out
dec
lock
movsb
sub
ret
inc
call
mov
mov
ret
test
imul
ds
iret
add
lods
cs
add
dec
test
jnp
pop
mov
sub
pop
outsl
outsb
and
lahf
xor
out
mov
cmp
scas
mov
mov
aam
xchg
dec
ljmp
ljmp
jno
jno
mov
pop
test
xor
dec
aam
lods
mov
pop
xchg
lret
dec
jmp
mov
jo
mov
inc
ds
sahf
aaa
push
cmp
nop
ds
push
leave
jge
mov
in
das
push
pop
inc
scas
aad
jmp
stos
pusha
jo
jmp
mov
outsb
test
push
adc
rcrl
aad
mov
fistpll
shll
mov
enter
call
hlt
call
icebp
shlb
inc
out
and
test
adc
or
pop
loopne
mov
sub
je
icebp
inc
mov
or
ror
mov
sbb
xchg
or
mov
enter
cwtl
fmul
scas
adc
mov
lret
sti
aaa
loopne
and
in
jno
daa
add
popf
xchg
mov
inc
clc
add
xchg
mov
je
mov
mov
test
push
push
xchg
push
mov
in
aad
mov
in
xchg
sub
lahf
mov
leave
rclb
ss
test
repz
xchg
cmp
insl
mov
push
and
push
pusha
outsb
call
out
ja
jb
mov
rorb
pop
xor
pusha
hlt
jae
in
add
fldl
cmc
pop
scas
iret
push
mov
pop
cmpl
sbb
outsl
addr16
test
mov
sbbb
xor
cwtl
push
jbe
sbb
sbb
das
jg
mov
hlt
sahf
adc
adc
push
dec
dec
mov
add
inc
mov
in
sub
sahf
push
lods
dec
sti
pushf
mov
cmpsl
lods
inc
push
shrl
pop
xor
je
xchg
adc
add
adc
scas
adc
lahf
filds
aaa
fucomp
lds
pop
pop
inc
push
xchg
ja
mov
xchg
cmpsl
stc
and
test
sbb
ret
pop
cmpsl
test
mov
push
or
nop
push
mov
rcrl
mov
xor
xchg
out
mov
hlt
jno
pop
arpl
ret
cltd
test
pop
das
ja
imul
and
inc
adc
outsl
sbb
inc
clc
out
lock
imul
xchg
in
dec
test
and
xor
dec
and
dec
fcom
pop
fcomps
inc
outsb
dec
dec
outsl
shlb
out
adc
test
iret
jnp
pop
mov
mov
push
lods
iret
call
mov
dec
xchg
les
mov
mov
imul
xchg
jg
xchg
ss
stc
sbb
wrmsr
repz
jg
scas
mov
out
in
in
movsb
nop
jl
jg
pop
cmp
imul
inc
cmp
test
neg
adc
sbb
adc
mov
rcpps
pop
fmull
shll
loop
push
repz
and
push
adc
mov
and
add
pusha
xor
arpl
leave
je
jl
fisttpll
push
mov
push
insl
addr16
mov
lock
cld
and
ror
push
or
mov
je
fldl
dec
xor
xchg
sbb
icebp
mov
pop
mov
lcall
gs
jo
xchg
jne
xlat
mov
fistpll
pop
sbb
push
test
gs
xorps
xchg
iret
xchg
int
inc
jmp
push
sbb
mov
adc
xor
lea
pop
imul
pop
jp
in
push
imul
insb
cwtl
cmpsl
cmp
pop
inc
and
push
pop
cmp
mov
out
int
fs
jno
nop
cmp
test
jnp
lret
out
orb
es
stc
das
push
mov
and
inc
inc
or
or
pop
pushf
xchg
cli
lret
mov
dec
dec
xor
repnz
jns
orb
bound
fnstsw
pop
jne
cmp
sbb
fnstcw
and
or
sbb
lods
cmpb
int
dec
mov
popf
aas
sub
push
xchg
orl
and
out
cmp
test
cli
stos
pop
loope
ret
xchg
or
sbb
gs
outsl
rolb
pop
out
add
rol
int3
pop
sbb
mov
push
xchg
mov
add
jl
inc
mov
xchg
pop
fmulp
loop
jmp
or
jns
bound
pop
xlat
cli
cmp
or
add
dec
inc
jmp
les
xchg
or
pushl
push
int
lods
aam
and
test
dec
push
cltd
inc
mov
adc
pop
pop
inc
pop
and
ljmp
push
mov
sub
pushf
call
inc
sub
dec
dec
sub
mov
insl
lods
jle
xor
mov
call
mov
mov
pop
push
sub
imul
mov
adc
stos
pusha
shl
js
iret
adc
jecxz
je
mov
mov
dec
mov
sbb
jae
je
xor
out
loop
or
cmpsl
xchg
jg
lret
aad
mov
and
sbb
push
sbb
and
sub
mov
cltd
mov
cmp
sbb
mov
push
inc
or
sub
pusha
sub
mov
push
ret
test
icebp
test
push
xor
cmp
test
in
lcall
or
repz
adc
pop
inc
pop
adc
push
jno
out
in
push
xor
push
fwait
jae
incb
dec
mov
out
mov
push
inc
add
je
clc
ret
and
into
inc
test
xchg
mov
xlat
out
xor
add
mov
and
pop
xor
or
xchg
and
aam
mov
pushf
sub
pop
sbb
aas
addr16
mov
push
into
or
pop
lahf
movsb
rorl
leave
out
xor
or
mov
pushf
addb
data16
cmp
ret
aad
pop
mov
vmptrst
test
mov
fldl
loopne
and
daa
insb
out
push
loopne
sub
push
adc
jle
int3
das
pop
xchg
roll
dec
push
mov
shll
and
nop
lret
and
jns
in
in
xchg
aad
out
jbe
fsubrs
sub
cmp
ret
push
call
in
movsb
add
fmulp
arpl
mov
pushl
lahf
cmp
and
mov
cmp
cmpsb
cmp
jl
xor
xchg
xchg
insb
xor
inc
inc
and
bnd
mov
ds
cltd
inc
jae
lods
mov
xor
add
movsb
icebp
ss
inc
int
or
insb
dec
dec
xor
das
cmp
and
jle
loopne
arpl
lds
popa
sahf
int
cmc
push
mov
push
jp
fstl
jge
pop
mov
out
mov
sub
fwait
xor
push
jp
aam
jno
mov
inc
int3
jne
icebp
push
pop
leave
or
add
mov
push
xchg
inc
mov
dec
fwait
mov
ss
adc
cmpsb
nop
mov
and
mov
xlat
xchg
or
cmpsl
adc
out
lods
fwait
lods
cmp
imul
dec
cltd
dec
outsl
sub
add
dec
jecxz
lret
inc
sbb
push
test
mov
dec
mov
je
lock
xchg
fdivrs
cmpsb
xor
test
mov
roll
jns
add
pop
jl
push
or
test
xlat
test
leave
adc
fnstenv
sti
mov
fsubrp
jle
addr16
push
mov
insl
mov
mov
fdivp
scas
in
cmp
lds
sbb
orb
int
imul
sub
cmpl
pusha
jecxz
movsb
mov
pop
jle
sbbb
pop
mov
cmp
fwait
lds
jbe
mov
in
inc
test
ljmp
sub
xchg
addb
mov
repz
mov
lods
cmp
cltd
gs
fsubp
jmp
fnstsw
imul
lock
sbb
std
iret
mov
lahf
leave
call
shr
fdivp
mov
fcomip
xor
and
sbb
or
repz
adc
cld
testl
iret
push
inc
push
adc
fcmovu
in
cs
mov
xchg
lds
and
loop
cmp
pop
lock
pop
inc
pop
aaa
pop
or
jb
adc
ljmp
push
jg
sub
xor
loope
xchg
sub
mov
mov
adc
jg
mov
insb
aaa
or
pop
push
cmp
xchg
stos
jmp
fucomi
shlb
fdivrs
mov
ror
add
jle
in
lods
pushf
in
pop
push
pop
addb
divl
push
xchg
lahf
and
xchg
cwtl
int
lock
xchg
std
das
sub
sti
push
and
and
cmp
xor
and
test
mov
jle
stos
shrl
js
or
mov
jbe
mov
cmp
add
and
jae
in
aaa
push
fwait
xchg
cmp
sbb
aam
jge
ret
push
notl
pushf
pop
ret
mov
test
mov
popa
add
mov
insb
push
cmp
push
pop
in
idivb
xchg
pop
sahf
pop
mov
xabort
mov
cmp
fnstsw
shlb
or
test
adc
ljmp
jp
xchg
addb
mov
int3
popf
in
pop
push
rcrl
xchg
cltd
inc
rep
popa
and
sar
or
test
bound
stos
mov
add
push
test
rcr
jne
fwait
mov
scas
mov
sbb
lret
ja
xor
jne
push
cwtl
data16
inc
popl
xchg
mov
and
sbb
fcomi
mov
jl
fidivrs
fidivrl
je
clc
inc
sub
test
cmpsl
sti
lret
fs
insl
add
orb
neg
lcall
mov
push
fidivrs
les
ljmp
push
mov
adc
push
jo
cld
stos
pop
imul
test
inc
inc
out
xchg
pop
ja
fidivl
xchg
cmp
scas
adcl
inc
iret
cmp
cmp
dec
cmpsb
or
imul
fdivrp
mov
mov
sbb
or
pop
leave
mov
xchg
sbb
fwait
rcr
or
xlat
sarb
pusha
xchg
jl
push
mov
mov
cmc
mov
mov
in
cmp
scas
movsl
in
inc
bndldx
cmp
cwtl
lret
lret
call
add
es
or
jg
sbb
fisttpl
lea
int3
sbbl
mov
add
out
pop
out
jnp
lahf
shrb
xchg
dec
sub
add
rcl
sbb
lret
sub
jno
iret
jmp
aas
fdivrl
xchg
sbb
cmp
jnp
mov
xchg
pushf
xchg
popaw
sub
lods
jmp
xchg
jbe
mov
ljmp
sarl
pop
push
lods
in
dec
add
leave
mov
xchg
icebp
mov
or
popf
pusha
push
mov
ss
xchg
rol
repz
jne
les
mov
loope
scas
or
add
sbbb
xchg
test
pop
cmp
push
icebp
xlat
sub
movsb
aaa
cmp
int
in
lret
or
fmuls
xchg
shrl
pop
leave
jo
notb
addr16
xchg
repnz
push
or
jmp
push
mov
xor
pop
pop
or
or
or
repz
sub
int
push
dec
sbbl
mov
ds
clc
fwait
sbb
jp
cli
lret
je
adc
cli
aam
ss
pop
insb
or
jecxz
lret
push
sbb
ror
pop
arpl
int3
sbb
clc
cmp
aaa
cmp
imul
inc
rcrb
pop
shl
pop
arpl
xchg
jo
jmp
jge
jge
inc
stos
jns
push
ss
dec
lods
xchg
cmp
dec
inc
sbb
test
add
cwtl
idivb
hlt
xor
ss
adc
push
sbb
popl
lret
xor
add
stc
sbb
leave
cmpl
cmp
dec
insl
fistps
shlb
pop
push
cmp
or
xor
lea
cmpsl
mov
mov
mov
orb
test
push
jmp
daa
lods
in
mov
pop
jmp
pop
test
daa
or
js
subb
in
jbe
mov
xchg
jns
ret
movsb
cmp
popf
push
mov
shlb
out
mov
or
or
shlb
inc
xchg
sub
pusha
orl
mov
xchg
cwtl
cmp
in
ret
loop
subb
mov
fdivs
inc
jnp
mov
mov
xchg
push
jg
bound
call
movsl
bound
in
fsubrl
push
js
mov
mov
pop
pushf
fiaddl
xchg
and
mov
push
push
iret
mov
daa
xchg
lock
adc
arpl
jl
cmpb
xor
sub
icebp
pop
add
cmp
mov
aas
push
and
xor
fistps
adc
pop
adc
movsl
das
je
jbe
inc
mov
dec
test
push
jg
cmpb
das
mov
aaa
inc
std
ljmp
decb
push
std
mov
leave
pop
adcb
mov
imul
mov
or
xor
sbb
and
movsl
cmp
ss
pop
xchg
insb
cltd
pushf
jmp
push
xor
pop
subl
push
jae
test
jg
aad
jae
and
sarb
mov
xor
jle
inc
test
adc
outsl
js
xchg
lret
push
sub
cmp
jle
inc
inc
addl
add
bound
in
movsl
inc
loop
not
je
cmp
dec
push
pop
mov
and
cli
popa
inc
mov
gs
push
das
mov
test
and
mov
cmp
jle
sbb
imul
inc
xlat
mov
jno
mov
jle
shll
mov
lcall
test
mov
xchg
jae
loop
fisubl
and
push
std
sbb
loopne
pop
imul
mov
mov
dec
cmp
lods
out
fcmovnbe
mov
mov
hlt
inc
inc
mov
std
in
adc
in
sahf
sbb
mov
adc
dec
bound
lock
aam
inc
dec
dec
cli
int3
mov
sbb
pop
xchg
popa
repz
nop
mov
std
cld
mov
adcl
or
sti
sahf
mov
sbb
jb
push
ret
add
test
in
mov
fldln2
mov
les
shlb
ljmp
in
enter
or
in
std
js
mov
or
stc
scas
lret
push
sub
cmp
loope
mov
dec
sbb
dec
ss
adc
out
lcall
dec
pop
adc
imul
mov
pop
mov
jnp
mov
popa
cmpsl
inc
and
sti
mov
and
cmpsb
lret
xor
popa
insb
mov
or
scas
mov
idivl
outsb
cs
adc
sub
mov
inc
jmp
adc
scas
xchg
add
mov
xchg
sub
lcall
jg
ljmp
xor
js
push
push
mov
mov
les
subb
jmp
mov
add
std
jae
mov
inc
les
and
xchg
pusha
call
or
xchg
mov
sbb
movsl
es
xor
lock
cmp
jae
mov
cltd
not
daa
jnp
pop
sahf
or
test
push
mov
inc
push
jns
mov
adc
nop
or
jo
pusha
sbb
jne
jb
test
jmp
insb
xchg
bound
dec
pusha
mov
adc
dec
xchg
jno
stos
sub
aas
arpl
and
xor
jae
mov
mov
dec
push
daa
inc
popf
inc
mov
push
push
sub
or
flds
das
popf
push
test
aas
jl
lds
push
lret
ja
mov
sub
dec
mov
sahf
lock
and
sub
pop
dec
mov
loop
inc
and
test
insl
pop
leave
jl
add
mov
sahf
xor
daa
and
stos
sarb
push
add
add
mov
aaa
jle
and
xchg
pop
xor
leave
push
inc
jmp
jge
jns
xchg
repnz
pushf
cld
xor
xchg
inc
inc
mov
and
mov
clc
in
test
and
dec
dec
mov
push
aas
mov
mov
or
lea
add
scas
or
push
andb
je
das
fcmovbe
pop
and
pushf
mov
xchg
rcrl
fst
pop
or
cmc
xchg
dec
xchg
sub
push
sbb
stos
cltd
pusha
fisubl
lods
cmp
jbe
aam
xor
movsb
mov
lret
push
mov
mov
mov
jb
adc
jmp
add
lea
ss
bound
aad
push
insb
jl
jb
push
mov
add
xlat
outsl
sbb
jl
pop
sub
jb
ret
adc
repz
loop
sub
outsb
ss
add
mov
aad
xor
adc
sub
orb
out
jae
pop
mov
inc
or
fistps
je
add
shlb
sbb
test
movsl
gs
cli
sub
fcoms
mov
sbb
out
mov
add
cli
shll
cmp
sahf
push
lret
pop
ljmp
add
nop
and
shrb
dec
pop
cmpsb
pop
or
jge
pusha
sbb
fstl
jns
push
push
pop
adc
mov
cltd
daa
push
xorb
dec
fs
pop
adc
pusha
imul
cmpsb
push
enter
addr16
mov
or
add
int
cmp
pop
in
enter
mov
mov
loope
popa
mov
jl
pop
xor
and
andl
inc
enter
pop
fimuls
mov
adc
out
inc
ljmp
es
pop
int
out
pusha
mov
cli
jg
mov
addl
sti
inc
gs
and
adc
xchg
mov
aam
test
shlb
sub
xor
dec
js
jne
push
outsb
insb
insb
in
adc
adc
add
xchg
out
cli
xchg
inc
mov
mov
gs
xor
cs
faddl
dec
bnd
push
xor
cmp
mulb
loope
outsl
in
sbb
push
flds
mov
mov
cwtl
aas
scas
insb
out
sti
pop
cmp
rcll
xchg
icebp
mov
roll
push
mov
in
into
or
std
or
inc
dec
sub
mov
faddl
xorb
push
inc
clc
cmp
xlat
mov
jl
addr16
dec
fcmovu
sti
lahf
mov
test
js
adcb
test
push
aad
jne
jae
sub
adc
jmp
xchg
mov
scas
inc
es
jb
addr16
mov
in
push
decl
xchg
stos
mov
push
jo
or
pop
jle
sub
mov
or
insl
and
sbbl
lahf
and
les
out
imul
pop
inc
arpl
dec
dec
jg
mov
cmp
adc
gs
fbld
iret
or
inc
int
repz
push
mov
rclb
insl
inc
jbe
sbb
in
pop
lahf
test
sbb
jp
xchg
lods
scas
lock
push
mov
rclb
xor
into
push
and
aaa
outsl
pop
jns
xor
ffreep
pop
jle
push
sti
mov
jl
int
push
sbbb
sub
lcall
cli
xor
pushw
lret
sar
icebp
lock
add
gs
out
and
cmp
std
inc
pop
std
push
aam
inc
and
mov
push
ljmp
sub
call
out
inc
ret
xchg
sbb
dec
and
repz
in
adc
cwtl
mov
pop
test
aas
xchg
adc
push
push
push
cwtl
idivb
rcl
jmp
mov
inc
out
lods
lcall
loop
sbb
inc
mov
jg
fdivs
push
inc
in
inc
mov
push
ss
fcoms
lea
mov
pop
std
mov
and
lcall
jmp
xor
addb
add
sbb
mov
cmp
push
or
xchg
icebp
add
mov
lock
cmpsb
pop
rolb
les
jo
jge
mov
lret
mov
sbbl
std
outsb
push
mov
sbb
bound
je
imulb
mov
jbe
mov
inc
ss
and
lds
pop
add
pop
dec
loopne
xor
fsubl
sub
xchg
rclb
and
add
int3
fdivr
lods
mov
push
adc
pop
lar
push
fldenv
fldenv
lea
jo
cmpsb
roll
mov
push
leave
push
sahf
shrl
adc
int
jae
dec
lcall
dec
mov
or
popf
and
add
sarb
ret
xchg
pusha
call
mov
mov
je
dec
loope
aas
pop
adc
cmp
mov
ljmp
pop
push
add
gs
jbe
push
rorl
sub
popf
inc
inc
inc
add
imul
mov
xor
or
xchg
fistps
cwtl
fsubs
in
mov
xor
mov
rcl
push
test
scas
jno
pop
cs
hlt
aam
cmpsl
pushf
push
in
push
icebp
imul
rclb
fisubl
sbb
add
ds
sbb
lock
scas
sbb
jns
bound
mov
adc
pop
int3
jb
pop
ss
and
inc
push
arpl
popa
cltd
out
popf
add
pop
or
addr16
mov
and
icebp
xor
push
nop
pop
sub
mov
aam
xorb
push
fcmove
pop
jg
xchg
mov
inc
cmpsb
pop
arpl
outsb
fmuls
ret
pop
add
repnz
repnz
jo
notl
in
push
dec
mov
cmove
fistl
push
aam
adc
jae
iret
insb
mov
add
loop
sahf
adc
mov
push
inc
mov
add
test
cmpl
icebp
mov
ror
sbb
xchg
xor
pop
mov
aad
mov
pop
or
sbb
pusha
sub
jae
les
or
and
test
stc
xorb
cltd
sub
lret
jmp
jp
jno
and
push
das
dec
sub
or
popa
inc
mov
sbb
push
cmp
push
inc
stos
cli
lods
test
test
mov
popf
sbb
scas
mov
push
pop
daa
cmp
push
mov
push
popf
iret
mov
imul
movsl
std
loopne
cmp
dec
sub
out
dec
and
mov
mov
jno
repz
pop
adc
push
jnp
repnz
pop
imul
fdivrs
mov
cmp
ror
cs
dec
js
pop
cs
lea
mov
mov
scas
mov
jno
test
mov
cmp
mov
mov
das
jge
ja
cmpsl
aaa
or
sbb
sub
fistpl
cmpsl
pop
lock
add
sti
aas
rorb
std
pop
pop
idivl
out
push
stos
cmp
jecxz
aad
mov
mov
enter
mov
mov
out
lret
lds
pop
jne
sbb
cmp
xor
inc
inc
enter
cmp
fsubs
jl
fcomps
pop
insl
push
xor
aaa
fisttps
ret
sbb
push
pop
or
addr16
dec
ljmp
mov
fcompl
ja
mov
repz
stc
bound
push
ljmp
sbbl
shlb
mov
adc
cmp
sbb
aas
imul
push
add
dec
in
je
out
add
mov
inc
mov
xchg
jo
fsubrp
adc
lret
hlt
or
stos
push
test
cmp
add
test
ds
out
jnp
bound
push
movsl
jle
std
add
cmp
std
push
sbb
pop
out
mov
insb
mov
add
xor
dec
lods
jecxz
pop
add
pop
xchg
popf
fmul
pop
mov
jl
test
lods
test
inc
cs
sub
pusha
cmp
dec
call
lcall
pop
push
repz
and
push
cmp
fdivl
movsb
stos
mov
sar
stc
addr16
mov
cmp
pop
or
rol
aaa
sbb
cwtl
bound
lea
xchg
lds
int3
push
shl
das
pop
popf
test
sub
adc
xchg
inc
dec
addl
fwait
loope
iret
mov
rcl
xchg
xchg
mov
jl
sub
aaa
pop
clc
push
pop
loop
lods
or
or
sub
je
mov
inc
in
pop
enter
add
pop
hlt
rcl
in
ss
push
testl
push
lea
test
add
pushf
repnz
cli
adc
dec
iret
jo
cmp
fmuls
jne
ret
vmaxsd
jae
scas
sbb
xor
negb
inc
mov
mov
nop
push
sbb
ret
call
daa
loopne
dec
xchg
fcmovnb
pop
or
ret
adc
jecxz
push
sub
xchg
or
adc
jbe
xchg
cld
cld
xchg
mov
mov
jl
fdivr
xor
jl
jnp
push
adc
mov
dec
cmpsl
mov
aas
pop
punpckhwd
mov
jl
test
jge
punpckhwd
div
jno
sub
push
and
inc
iret
lahf
jbe
mov
sbb
stos
fucomp
incb
push
cmpsl
cs
scas
sbb
fld
outsl
cmpsl
xchg
cmpsb
add
scas
and
movl
imul
and
and
sub
pusha
xor
jmp
fstps
clc
pop
adc
xor
xchg
in
cwtl
fstpt
das
in
lcall
aas
xor
mov
mov
imul
jmp
jnp
and
push
das
stos
push
jbe
cmp
ljmp
add
inc
int3
ja
jb
jg
adc
or
rorb
sarl
pop
mov
out
sub
sbb
lods
loope
int
repnz
pop
ret
and
jg
push
mov
fwait
pop
outsb
ljmp
cmp
adc
rcl
je
mov
cmp
fcompl
xor
and
adc
icebp
ja
mov
les
mov
add
jecxz
dec
mov
lcall
push
mov
adc
push
std
repz
lea
ret
add
push
pushw
add
and
sbb
push
jl
pop
popf
out
and
arpl
mov
aad
jbe
cmpsb
adc
xor
leave
ljmp
mov
pop
adc
pusha
ret
hlt
fildl
push
cmp
mov
aas
rclb
xor
es
scas
xor
scas
mov
fildl
dec
mov
faddl
arpl
xor
and
jae
add
js
cmp
popa
mov
xchg
adc
stos
sbb
xor
sub
or
cltd
mov
pop
sub
mov
lds
mov
pushf
rcrb
and
fisubs
mov
daa
sub
outsb
xchg
loopne
jl
out
dec
adc
lods
popa
push
fisttpll
inc
add
bound
mov
popa
and
lret
adc
sbb
in
mov
jg
scas
out
lahf
jb
shl
mov
sub
in
rolb
gs
jp
lahf
shlb
test
je
push
xor
mov
ficoml
fistpl
xchg
push
and
int
adc
sub
pop
lods
sbb
mov
cld
adc
out
test
sbb
jle
mov
js
jp
dec
adc
adc
dec
icebp
mov
xor
pop
jb
mov
xchg
and
aaa
and
inc
mov
push
push
sub
in
xorl
add
jmp
lea
push
push
mov
push
jno
pushf
fisttpl
add
xlat
pop
jnp
cmc
cmp
add
mov
repz
cmpsb
push
enter
xchg
call
fisubrs
jb
jg
jp
jns
roll
mov
cmc
or
imul
aaa
jns
or
inc
pop
jmp
aam
or
lds
ljmp
cltd
or
in
fnstenv
jle
imul
push
mov
les
jmp
sbb
adc
xor
mov
add
mov
data16
loop
push
adc
iret
in
cmpsl
stos
add
faddp
xchg
vaddps
orl
xchg
push
shrb
arpl
inc
xchg
cmp
sub
add
stos
sbb
das
mov
enter
out
mov
insb
addl
loope
sbb
adc
test
push
stos
daa
popf
ds
xor
jbe
rclb
and
scas
jmp
inc
popf
mov
xchg
cmc
jp
xor
leave
lcall
gs
mov
lea
xchg
push
and
jo
stos
std
dec
dec
adc
popa
xor
mov
pusha
sarb
cmp
test
jb
mov
mov
mov
dec
fs
or
add
jmp
outsb
adc
popa
cmpsb
dec
cmp
lret
xor
loope
and
jge
repnz
stos
cmp
nop
pop
ret
sti
sub
mov
pop
into
dec
call
aaa
push
inc
fcompl
int3
mov
or
movsl
mov
imul
imull
pop
xchg
lret
inc
shl
or
inc
cmp
lcall
mov
push
pusha
xor
or
cld
cli
pop
mov
mov
data16
rclb
mov
inc
cmp
xor
sub
ficoml
pusha
pop
aaa
das
sub
pop
pop
mov
pop
imul
xlat
pop
dec
je
mov
data16
lret
test
mov
mov
int
push
xchg
popa
xchg
jle
jo
add
sub
cmp
inc
jg
add
dec
add
sahf
jmp
pop
inc
enter
xchg
pop
and
mov
add
push
sub
push
sbb
sub
cmp
movsb
cmp
xchg
icebp
push
add
sahf
mov
fists
xchg
shll
lods
jmp
jbe
jmp
xchg
addr16
sahf
call
xchg
bound
mov
out
cmp
aam
mov
cmp
cmpsb
dec
fisubrs
adc
mov
xchg
add
in
leave
leave
stos
je
rolb
bound
xor
fwait
add
testb
pop
test
arpl
aad
fnstsw
ficoms
inc
imulb
mov
hlt
cmpsl
out
std
das
jl
cmc
xor
mov
and
lahf
ret
outsb
lods
je
sub
je
ret
pop
pop
aaa
sbb
jl
mov
dec
lods
xor
mov
rcrl
adc
es
adcl
mov
ds
sub
inc
push
jo
je
mov
adc
pop
ss
xor
xor
inc
mov
pop
dec
xchg
out
into
or
inc
cmp
aaa
or
repnz
push
test
and
xor
mov
stos
xchg
scas
in
aad
ret
loop
sub
out
daa
xorb
lds
pop
xor
addr16
or
mov
scas
int
sub
aas
xchg
xchg
push
test
das
mov
lds
or
pop
shl
push
lret
pushf
outsb
mov
add
adc
adc
pop
push
in
fildl
pop
mov
xchg
leave
xchg
cltd
adc
push
pushf
out
and
not
mov
dec
ja
and
je
or
fs
in
adc
dec
mov
fisubrs
xchg
fimuls
shll
adc
cltd
cmp
mov
cmp
pop
xchg
xor
out
shrl
movsl
xor
cmp
cmpsb
cld
sub
or
add
in
in
lds
or
mov
enter
pusha
push
xchg
sbb
repnz
mov
push
es
cmp
fiaddl
dec
in
stos
xlat
push
popa
mov
or
gs
xchg
xchg
pop
fcmovu
mov
out
scas
test
inc
cli
cmpsl
nop
add
in
pop
sbbl
popl
fistpl
mov
std
orb
mul
iret
mov
jno
test
jae
aaa
inc
jno
mov
in
add
push
jmp
fwait
pop
sub
out
mov
enterw
hlt
sub
mov
pushf
mov
adc
jge
pushf
adc
pop
divl
push
xchg
aam
sub
cltd
jmp
pop
out
outsb
addr16
ret
clc
lret
pop
int3
clc
adc
mov
lret
cmc
stos
xor
dec
data16
pop
adc
shrl
add
mov
fldenv
mov
mov
or
sub
andl
cmc
or
xor
ret
out
pop
pop
jge
pop
xor
lods
loop
pop
or
pop
mov
mov
into
or
jl
test
repz
jnp
adc
adcl
shrb
or
jmp
lods
dec
ds
and
lahf
and
mov
inc
jo
sbb
fiadds
enter
les
sub
popf
movl
fiadds
sbb
cmp
and
xchg
mov
cmp
jg
test
jnp
sbb
nop
adcl
xor
push
insb
cmp
adc
inc
and
lret
push
jns
int
fidivrl
jmp
xor
les
dec
mov
aam
out
jns
cld
js
std
mov
insl
pusha
addr16
xchg
adc
pop
mov
xor
pushf
pop
xchg
pop
imul
jo
xor
cld
scas
xchg
je
adc
mov
test
iret
and
pushf
int
test
and
inc
or
adc
inc
or
mov
xor
out
jg
call
mov
sti
cmp
and
adc
xor
idivb
cmp
ret
enter
pop
jo
cmp
mov
dec
jae
mov
gs
fisubrs
leave
add
xchg
mov
jmp
push
xchg
sbb
xchg
mov
cmp
mov
xchg
mov
pop
sarl
lcall
mov
jne
sbb
shll
and
mov
lock
cmp
daa
sub
cld
aam
imul
xchg
inc
xchg
movsl
out
inc
xchg
dec
xchg
movsl
popa
inc
icebp
adc
stos
sbb
adc
hlt
xor
into
mov
insb
xchg
xor
cmpsl
pop
jns
mov
out
xor
inc
mov
jo
outsl
mov
inc
xchg
nop
bound
sbb
mov
mov
add
jnp
imul
ja
mov
inc
mov
mov
in
cwtl
add
fs
jp
into
sub
jmp
clc
sub
cld
inc
push
fcomps
clc
aam
out
fcoms
test
mov
mov
insb
lods
in
fimull
daa
es
andl
add
aad
idivl
adc
mov
lret
out
push
in
mov
jae
jne
mov
mov
xlat
push
cmp
loopne
sub
repnz
dec
stos
mov
mov
sbb
stos
mov
outsl
fidivl
iret
pop
sbb
inc
sub
mov
mov
test
out
dec
mov
in
lods
movsl
pop
int3
push
test
pop
xchg
xor
sub
add
sub
xchg
mov
cmp
mov
loope
and
outsl
push
fucom
xchg
daa
xor
rol
repz
sbb
xor
stos
in
mov
mov
xchg
subl
xchg
jo
xor
pop
pop
cmc
js
pusha
and
adc
and
ja
xor
add
mov
lcall
xor
jecxz
dec
mov
lock
jg
mov
add
sbb
andl
jae
insb
push
pop
sbb
rcrb
adc
pop
cmpsl
xchg
adc
adc
ljmp
mov
mov
mov
sbb
dec
pop
adc
gs
cld
mov
sbb
adc
rorl
cmp
and
cmp
push
movsb
add
pop
addr16
jmp
out
xor
mov
inc
repz
mov
jl
adcb
lock
sub
mov
cmpsb
push
decl
loope
jle
mov
cmc
insl
scas
test
jge
std
mov
ret
inc
cmpsb
test
pop
push
fisttpl
sbbl
mov
jp
insl
xor
push
inc
jae
inc
adc
pop
je
xchg
loop
fsubs
lcall
ds
cmp
sbb
fcmove
mov
jo
push
jmp
pop
mov
bound
dec
pop
sbb
pop
mov
push
cmpsl
scas
inc
fs
pop
subl
push
pop
rorb
cli
pop
aas
roll
repnz
dec
lea
in
xor
sub
inc
cmp
or
sbb
ror
and
test
std
shll
xchg
shlb
xchg
loopne
rclb
jbe
ret
sbb
jno
ljmp
cmp
insl
mov
dec
test
mov
xor
arpl
dec
xor
push
sub
data16
and
push
out
popf
sbb
inc
dec
or
ljmp
mov
decb
lret
into
idiv
push
jno
xchg
sub
mov
shrl
xor
jo
lcall
in
mov
shrb
shlb
pop
in
mov
mov
xor
ret
cmp
enter
insb
mov
insl
pop
mov
inc
je
mov
stos
mov
movsb
cmp
mov
cltd
clc
daa
ss
jae
int3
addr16
mov
push
or
out
mov
or
loopne
cmp
xor
xchg
sub
orl
mov
nop
es
and
xchg
pop
cmp
dec
adc
mov
push
pop
mov
mov
fadds
jb
stc
out
das
loopne
adc
xchg
out
pop
lods
and
xor
js
and
jne
lcall
test
inc
and
xor
mov
test
lcall
lods
cmp
addr16
push
dec
mov
nop
pop
push
cmpsl
cmp
cmpsl
addr16
mov
xchg
and
pushf
xor
adc
add
xor
dec
pushf
jbe
lret
aas
clc
mov
insl
push
add
leave
ljmp
sub
cmpsb
loopne
testb
daa
jg
jp
insb
adc
mov
pop
clc
pop
cmp
inc
sbbl
fs
or
jge
or
fsub
xor
sbb
pop
icebp
gs
shll
adc
jp
sarl
inc
aaa
inc
jp
push
xchg
add
add
and
mov
shll
push
lret
sahf
inc
lahf
bound
aad
and
xchg
sub
out
xchg
mov
mov
adc
adc
jb
fists
mov
xchg
dec
hlt
sub
pop
xor
fbld
dec
mov
dec
xor
arpl
add
mov
xchg
push
mov
and
call
mov
push
dec
les
das
cmp
adc
fs
js
mov
test
inc
into
arpl
jbe
in
cmpl
lods
xor
repnz
in
sub
repz
insb
jne
loopne
pop
pop
or
xlat
or
pop
pop
adc
or
add
inc
scas
inc
loopne
ds
imul
mov
xor
push
cmpsl
or
inc
fadd
add
test
xor
xchg
popf
adc
lret
dec
jle
lret
shll
inc
sti
fildl
mov
stos
sahf
and
cwtl
push
daa
adc
jle
lret
sub
or
mov
xchg
sbb
div
jp
inc
lods
mov
mov
cmp
mov
xor
imul
andb
jle,pn
push
lods
pop
push
mov
xor
inc
sbb
jl
pop
loopne
rorl
inc
jns
imul
testb
scas
and
xchg
popf
cltd
pop
jbe
push
std
mov
mov
sbb
movd
test
mov
xlat
pushf
push
add
cwtl
mov
inc
mov
in
popa
incb
in
jge
and
mov
lock
and
clc
xchg
mov
dec
dec
or
ljmp
sub
jle
std
mov
movsl
fwait
cmp
scas
lcall
jmp
out
cmpb
add
iret
scas
mov
addr16
imul
mov
mov
push
sbb
jmp
push
out
repz
aas
int3
ret
jle
scas
ret
icebp
dec
mov
adc
jg
xchg
lret
pop
jae
loopne
nop
fwait
dec
arpl
popf
push
adc
or
or
repz
mov
pop
cmp
ljmp
decl
sbb
mov
jge
inc
cmovns
divb
aam
ljmp
sub
jmp
fsubrs
aas
scas
pop
bnd
cmp
pop
sub
inc
scas
xchg
sub
push
test
add
shlb
loop
aam
mov
mov
int
mov
push
mov
fwait
jno
inc
cli
ss
mov
push
mov
fildll
arpl
mov
outsl
mov
leave
in
clc
mov
mov
xor
or
pop
test
add
lret
adc
sub
dec
inc
popa
sbb
out
lcall
push
fisubrs
jg
add
cmp
imul
imul
mov
mov
sub
gs
call
cs
rorb
add
aaa
jno
imul
dec
data16
shr
jle
mov
xchg
cmpsb
sbb
fs
into
inc
add
aaa
ret
pop
insl
xchg
jne
mov
out
xor
ffreep
ljmpw
pop
mov
imul
je
addr16
lods
aad
and
push
sub
adc
mov
ljmp
stos
stc
das
popa
fists
cltd
in
lock
sbb
adcl
mov
out
jle
lea
or
mov
xchg
inc
sarl
xchg
push
adc
sub
xor
adc
add
imul
xor
and
or
rolb
push
push
rcl
rclb
stc
lret
dec
lods
repz
push
icebp
lods
push
scas
pop
aad
ret
sarb
lods
std
push
inc
push
add
mov
scas
fnstsw
dec
loopne
add
clc
sub
popa
and
mov
xchg
jmp
pushf
int
cmp
or
ja
xorl
mulb
cmpsb
fsubl
loopne
lcall
fcoms
mov
cmp
shrb
adc
pop
push
mov
push
mov
test
ds
mov
test
sbbl
push
jg
add
jns
dec
xor
pop
adc
sub
fisttpll
rclb
pop
mov
dec
sub
pop
adc
faddp
arpl
jecxz
xchg
mov
outsw
les
mov
mov
cmpsl
cmpsb
cmp
icebp
mov
rcrl
sbb
loop
lods
leave
repnz
mov
scas
je
shl
mov
pop
pop
cmpxchg
jae
or
push
lea
sub
cld
into
loope
push
lea
fistpl
or
stc
push
in
mov
ss
sarb
mov
or
xchg
in
jno
add
adc
sub
and
nop
sahf
enter
inc
into
out
jbe
xchg
mov
fisubs
jno
sub
inc
mov
adc
inc
mov
sbb
subl
test
imul
push
loope
cltd
psraw
pushl
xchg
adc
ficoms
popa
adc
adc
push
rcrb
rcrl
push
fcmove
adc
push
add
and
call
xchg
mov
pop
outsl
data16
or
outsb
insl
mov
adc
fisubrl
lock
stos
jge
pop
pop
xor
jae
pop
dec
push
ss
outsl
fdivs
jno
fisttps
pop
sti
stc
and
xchg
out
std
or
ljmp
jle
adc
cmpsb
pusha
lods
scas
inc
jb
jle
xchg
fdiv
ljmp
xlat
rcr
movsb
pop
loop
xchg
ficoms
adc
sbb
loop
sbb
repz
mov
add
mov
adc
cmc
xchg
ljmp
out
stc
iret
sub
mov
mov
cmp
aam
inc
fstl
xchg
mov
stc
aad
inc
je
dec
xlat
mov
shlb
inc
mov
xor
lret
fisttpl
repnz
add
mov
arpl
loopne
cmpsb
dec
shll
imul
aaa
loopne
dec
push
addr16
sbb
scas
mov
aam
cmp
xchg
ficoml
jo,pn
mov
xchg
jmp
pop
fcmovnu
pop
cmc
inc
inc
cmp
mov
xor
jl
pop
push
stos
movsl
outsl
xchg
test
sub
mov
mov
jle
jno
insl
or
or
aas
add
mov
sbb
pop
xchg
jge
lea
jge
inc
adc
push
movsb
lods
xchg
push
decl
and
dec
inc
out
dec
mov
jl,pn
cmp
stos
and
dec
fisubl
imul
repz
lcall
imul
push
out
push
mov
push
or
dec
add
es
movsl
inc
sbb
mov
pop
loop
xchg
push
aad
sub
xor
ds
loop
xchg
cmp
push
pop
adc
mov
mov
decl
jmp
js
orl
cmpsl
mov
insb
dec
cld
into
mov
fcoml
test
imull
jbe
adc
add
sarb
pop
into
sub
andl
out
xchg
in
je
lret
repnz
cld
mov
scas
pop
outsb
sahf
in
mov
mov
inc
fidivs
mov
out
mov
cmpsb
inc
popl
mov
aad
inc
imul
adc
sbb
lahf
xor
ja
inc
sbb
or
aas
mov
and
cmp
jmp
dec
je
pop
movb
lahf
pop
push
cmc
stos
or
lea
daa
int3
mov
fs
leave
xchg
js
cli
or
push
mov
cmpsb
aam
dec
out
clc
ljmp
sub
cmpsl
jne
das
in
rcrl
mov
add
sub
pop
sub
and
jne
adc
mov
lretw
xchg
sub
dec
jp
mov
test
cmpsl
in
test
ja
sbb
or
in
jl
adc
movaps
iret
stos
roll
jmp
push
pop
cld
xrelease
jns
inc
ret
jae
mov
test
nop
sub
int3
xchg
mov
push
mov
xchg
int3
aam
addr16
icebp
fmul
xchg
loope
es
outsb
mov
inc
cld
cmp
lcall
and
mov
int
repnz
int3
cmp
in
push
dec
mov
outsb
or
push
jecxz
dec
sub
jbe
inc
out
clc
popf
orl
das
call
mov
push
push
dec
xchg
inc
sub
ds
ja
xlat
popa
xchg
lahf
nop
lods
cmp
stos
mov
xor
or
lahf
js
fisubs
nop
push
mov
xor
ss
les
pop
and
xor
dec
cmc
into
sti
cmp
scas
in
movsb
lock
stos
out
int
pop
popf
aaa
cmp
int3
dec
fisttpl
xor
push
jno
push
into
nop
and
lea
icebp
mov
dec
idivb
xchg
sub
mov
jb
mov
mov
sub
xor
xchg
and
cmp
push
pop
cmp
fildl
push
jb
lret
xlat
cli
aad
inc
inc
add
pushf
pop
lods
push
inc
or
xchg
lock
nopl
shrl
mov
mov
cmpsl
adc
mov
sub
sbb
mov
out
mov
out
addb
lret
mov
repz
inc
adc
sbb
aad
jecxz
cs
adc
test
jmp
and
or
xchg
sarl
add
sti
pop
pop
pop
sbb
fsubs
jo
mov
rorb
popa
jg
into
pop
inc
int
mov
aam
sub
cli
roll
lods
mov
add
aam
pop
sub
and
lock
aaa
les
xor
or
lods
sbb
ss
scas
jnp
aaa
pusha
mov
out
lock
fldcw
cmp
or
sub
inc
xchg
cmp
add
adc
xchg
enter
cmp
sub
adc
push
nop
xor
sbb
sarl
add
dec
pop
xchg
adc
mov
nop
les
dec
pop
push
jb
pop
adc
pop
mov
lea
jecxz
bound
jmp
inc
scas
or
mov
popa
orl
flds
lods
ljmp
push
dec
lods
jae
mov
push
movsb
sub
inc
or
jns
into
lret
cs
ljmp
push
add
and
int
inc
mov
xor
xor
jne
out
jo
mov
aam
mov
push
inc
add
mov
popa
roll
push
les
aad
pusha
enter
lods
sub
ficompl
mov
ja
jns
ljmp
xchg
and
imul
jno
stos
js
xchg
cmp
int3
adc
jg
repz
mov
fadds
cltd
jmp
xchg
cwtl
dec
out
sub
leave
inc
es
cltd
lahf
inc
cli
cltd
cli
leave
inc
and
das
cmpsl
inc
adc
in
mov
xchg
mov
cmc
xor
aas
loop
mov
addl
push
cmpsl
jne
lret
pop
push
mov
lock
or
cmp
push
cmp
sbb
pop
xchg
inc
test
and
pop
imul
addr16
push
dec
push
popa
int3
fdivs
jle
pop
lret
mov
mov
je
lods
int3
dec
dec
xchg
push
pop
mov
push
mov
scas
inc
loopne
inc
nop
fwait
ja
fnstcw
add
inc
dec
jge
push
cwtl
push
imul
test
jbe,pt
frstor
loope
inc
insb
enter
xor
les
hlt
jl
xchg
and
jno
daa
and
push
xlat
fwait
pushw
std
mov
pop
mov
hlt
xor
inc
sub
xchg
idiv
mov
mov
mov
xchg
ret
pusha
mov
sti
idiv
mov
mov
or
clc
int
into
xchg
outsb
out
jns
sbb
jne
cmp
push
lcall
call
jle
test
fldenv
rol
or
popa
aaa
or
jbe
inc
adc
xchg
sbb
neg
add
jmp
stc
push
inc
cmp
hlt
por
popf
pop
xchg
loop
xchg
andb
and
mov
loop
cmpsb
push
xor
cmc
jp
pop
ret
mov
push
mov
imul
or
loope
cwtl
fsubs
sub
cmp
jg
xchg
les
imul
imul
xor
mov
sbbb
xchg
pop
cmp
fistps
push
mov
out
insl
xor
and
insb
lahf
ljmp
andl
jecxz
js
insb
lahf
add
add
loopne
repnz
sbb
fisttpl
xchg
sub
add
jle
cwtl
mov
lcall
xor
test
xor
dec
mov
pop
jge
aaa
xchg
mov
jae
lds
cltd
pop
sub
pop
pop
push
fsubrs
repz
stos
push
sub
sbb
sbb
jl
ja
push
dec
dec
cmp
jno
mov
mov
insl
addb
and
push
mov
fsubr
mov
sbb
cmc
sbb
test
pusha
icebp
fs
push
addr16
popf
ret
xor
and
aas
fistps
or
adc
adc
and
ret
or
ljmp
scas
pop
mov
cmpsl
add
movsl
movsl
add
jg
xchg
daa
loope
inc
sbb
mov
inc
adc
movsb
mov
in
icebp
outsl
dec
pop
rorl
loop
ds
inc
repz
lock
inc
repz
jecxz
mov
xor
mov
in
and
and
loopne
mov
xchg
aaa
push
iret
enter
je
scas
add
jnp
out
cmp
jmp
mov
insl
mov
int
call
dec
xlat
scas
mov
cmp
inc
xor
and
jl
and
fadds
cs
sub
xchg
jg
repnz
adc
stc
xor
fstpt
dec
sub
pop
sub
rolb
pop
inc
jg
adc
in
mov
pushf
jne
push
mov
fldt
sarb
xor
mov
outsl
adc
pop
pop
cmpl
loop
es
insl
repz
movl
jnp
mov
sahf
loop
mov
and
fdivl
and
loopne
add
nopl
lea
mov
xchg
cmpsb
adc
xchg
jo
jns
add
subl
andl
imull
sbb
icebp
sti
jg
sub
mov
mov
enter
dec
repnz
std
leave
pop
test
sti
in
out
pop
fmull
outsl
pop
cmpsl
loopne
dec
mov
cmp
mov
or
outsl
mov
pop
mov
jb
sbb
mov
xchg
clc
inc
pop
sti
inc
cld
xor
xchg
or
clc
jb
jo
jns
fstpt
fistpl
cmp
mov
cmp
push
inc
mov
loope
jmp
push
shlb
cmp
cld
mov
mov
and
and
cmp
mov
or
nop
xor
int3
xor
outsb
fnsave
cmp
cmp
jle
sub
loopne
sbb
les
pop
std
cmp
sub
push
leave
pop
or
cmpsb
test
mov
add
ljmp
sar
in
divb
jno
add
out
jae
dec
add
push
jbe
xchg
in
jle
pop
sbb
lret
cmp
fldenv
mov
fs
adcl
scas
or
arpl
mov
dec
sub
cmp
idivb
dec
cmp
frstor
insl
sbb
dec
cmpb
pop
or
mov
fs
sbb
shll
in
lea
std
xchg
mov
lcall
cwtl
cmpl
aad
or
gs
jo
adc
test
sub
adcb
test
jb
cmp
clc
add
les
lcall
notb
ficomps
pop
inc
and
mov
pusha
push
cld
loopne
jecxz
cmpsb
xchg
movsb
or
stc
xchg
dec
add
movsl
pop
cmc
add
pop
add
add
adc
cmp
pop
sub
iret
bound
push
je
out
mul
mov
leave
and
jae
dec
adc
dec
mov
test
pop
sahf
imulb
bound
fwait
push
jecxz
lahf
mulb
clc
and
in
mov
inc
jne
dec
mov
xchg
mov
push
cs
mov
lret
xorb
mov
cltd
pushf
mov
push
adc
pop
movsl
pop
dec
jp
xchg
test
sbb
fnstenv
adc
sti
out
movsl
lea
jo
xchg
mov
cli
cmp
icebp
repnz
xchg
fisubl
cmc
sbb
or
std
jnp
aaa
std
add
xor
mov
bound
daa
and
xor
cwtl
inc
xchg
dec
pop
add
inc
mov
lea
stc
mov
xor
push
scas
mov
shr
inc
adc
sbb
mov
or
or
mov
cmp
mov
xchg
sti
jns
sub
fsts
bound
enter
movsb
dec
mov
mov
add
insb
int3
std
sub
fbld
in
fldcw
sar
mov
stc
addl
jg
enter
and
jno
dec
sub
jae
mov
add
mov
popa
adc
enter
jmp
push
in
push
adc
dec
fiadds
out
sub
rep
sub
xchg
inc
push
or
shll
shl
dec
push
push
fidivs
mov
in
push
cli
inc
inc
inc
mov
cmp
pop
hlt
scas
push
or
cmp
and
mov
dec
stos
adc
push
insb
out
sub
les
in
popa
xor
out
lds
mov
jns
sbb
outsb
push
mov
call
adc
out
push
pop
pushf
jb
in
xchg
mov
es
daa
mov
gs
loopne
movsl
sub
push
nop
mov
movsb
repnz
sub
hlt
push
add
mov
pop
insb
sar
je
loopne
je
add
icebp
test
mov
or
loop
ss
mov
mov
xchg
mov
data16
in
xor
xchg
orb
jnp
out
fwait
xchg
mov
mov
mov
and
jbe
add
adc
push
and
movsb
andb
aad
push
xchg
out
jne
sahf
data16
jmp
fidivrl
pop
or
call
add
into
sahf
add
clc
sub
loope
pop
stc
ret
cmp
and
mov
cmp
jns
loopne
jo
adc
sbb
xor
lret
fwait
jecxz
lahf
xchg
xor
push
shrl
test
cmp
mov
pop
pop
rclw
inc
test
loopw
inc
mov
outsl
jno
xchg
push
lea
cmp
jno
iret
cmp
popa
sbb
mov
xchg
add
negl
std
xor
add
add
aas
aad
jb
fidivs
imul
andl
mov
popa
arpl
sbb
insl
rcrl
pusha
aas
bnd
cltd
cmpsb
mov
adc
bound
push
data16
xchg
aaa
sarl
shll
popf
mov
mov
addr16
adc
xchg
lock
loope
movsb
dec
enter
xor
xchg
jp
xor
arpl
xor
stc
mov
icebp
sub
pop
xor
mov
fs
push
push
fdivrp
cli
leave
icebp
and
adc
cmpsb
inc
shrl
je
pop
arpl
stos
add
lea
ja
std
sbb
rorl
popa
aas
inc
cmp
lock
mov
pop
lret
mov
scas
jmp
insl
push
test
and
xlat
cmpsb
mov
mov
inc
mov
lahf
mov
in
shrl
stos
insb
jb
mov
xorl
add
sub
les
cmp
jo
into
pop
pusha
nop
sbb
in
outsl
or
push
dec
adc
popa
push
lods
imul
pop
mov
adc
cs
dec
fwait
loopne
add
sbb
pop
mov
int
mov
rcll
loope
dec
gs
data16
outsl
pop
push
out
stos
movsb
leave
out
jnp
fadds
mov
out
sbb
jmp
pop
xchg
or
les
dec
in
xchg
jmp
int3
sti
cmp
pop
xor
xchg
mov
adc
sub
sar
adc
or
xor
xor
mov
imul
dec
dec
dec
push
lds
out
mov
das
jno
or
cmpsl
pusha
fstpl
add
xchg
adc
and
xor
sub
les
int3
popa
cmpb
or
mov
add
out
shll
cs
out
idivb
test
cmp
mov
es
or
ss
jbe
ljmp
scas
aam
inc
cmp
pop
stos
cmp
or
lea
scas
iret
mulb
insl
xor
mov
out
hlt
imul
push
inc
dec
loop
mov
mov
add
pop
jle
dec
iret
nop
test
test
mov
cltd
fstpl
push
cld
mov
test
imul
lcall
fucomip
pusha
movups
repz
aam
gs
sbb
adc
jge
jno
popf
mov
roll
or
sub
adc
std
es
adc
jo
mov
jmp
pushl
adc
jp
sub
or
ror
pop
pop
lret
out
sbb
sti
mov
push
repz
pop
lods
and
outsl
pusha
pop
aas
fstpl
aad
and
xchg
loopne
je
shl
inc
xlat
mov
pop
dec
push
idivl
sub
test
stos
mov
sbb
pop
loopne
into
fs
cmc
mov
push
sarb
rcll
mov
mov
add
std
jbe
add
pushf
push
sbb
cs
mov
cltd
xor
ss
cmp
out
pop
lods
mov
addr16
das
and
idivl
pop
push
pop
mov
cmpsb
ljmp
inc
rol
inc
je
jecxz
lods
sub
and
rcr
add
sets
dec
fisttpll
dec
lds
std
mov
fisttps
call
lret
jmp
and
fistpll
je
xchg
push
scas
in
inc
add
lods
mov
test
pushf
mov
mov
mov
sbb
repnz
inc
in
addr16
cwtl
sbb
sub
push
ljmp
js
icebp
fwait
adc
sti
movsl
mov
loopne
bound
add
adc
sub
mov
in
mov
inc
gs
out
faddp
jo
mov
push
insl
fildl
pop
arpl
cmpsb
rcl
inc
mov
fwait
jno
sbb
sbb
inc
sub
push
insl
inc
repz
stos
or
outsb
xchg
dec
push
lret
xchg
mov
mov
xor
jo
sbb
cmp
inc
mov
test
mov
test
into
push
lods
sbb
sub
int
xchg
xor
and
jl
outsb
rcrb
fimuls
ja
sti
push
lods
inc
cmc
inc
fwait
out
lods
scas
fimuls
into
xchg
pop
mov
mov
lcall
adc
mov
inc
out
xor
and
dec
loop
jno
mov
lret
mov
lahf
mov
aad
mov
adc
fcmovnbe
mov
jno
push
sti
int3
pop
dec
stos
xlat
push
pop
in
gs
fs
int
and
add
jp
or
clc
imul
add
dec
cmpl
repz
adc
adc
jg
lret
pop
je
mov
lods
loop
addr16
leave
adc
cmp
je
xchg
iret
lret
pushf
xorb
pushf
out
je
in
mov
das
data16
push
inc
cmc
cmp
pop
in
cmp
repz
or
adc
sbb
xchg
fwait
data16
xchg
fistl
adc
sbb
test
dec
imul
mov
test
ljmp
mov
scas
and
inc
jnp
lods
loopne
mov
mov
jge
ficoml
out
daa
cld
mov
or
popa
daa
jne
in
and
hlt
jle
movsb
jge
inc
or
mov
cmp
jg
jnp
aas
dec
xor
jle
ljmp
pop
arpl
insl
mov
icebp
int
or
pop
icebp
adc
or
jne
in
and
int3
or
fidivl
js
fs
pop
jle
andl
test
inc
pushf
pop
mov
mov
xor
xlat
add
aad
andb
jne
push
dec
mov
adc
inc
js
jle
enter
lret
fstpt
mov
mov
mov
cmc
enter
orb
das
cmp
stc
int
lahf
xor
loop
jecxz
loop
inc
inc
jno
mov
or
hlt
test
mov
rorb
notb
sbb
pusha
subb
repnz
sbb
imul
ljmp
loopne
cltd
in
adc
bound
push
popw
inc
add
jbe
lods
inc
jg
mov
push
repz
pop
ja
je
in
jecxz
sbb
add
xchg
and
in
jno
cmp
daa
sahf
lcall
ss
aam
scas
sub
movsl
mov
test
mov
mov
pop
js
insl
gs
jo
int
das
adcb
fwait
mov
dec
jb
fs
sarb
sbb
add
add
mov
mov
mov
mov
push
xor
aam
nop
cmp
push
addb
out
push
inc
loope
or
imul
mov
imul
js
gs
mov
ss
not
mov
pop
pop
or
cmp
jle
inc
mov
jns
lods
scas
sbb
dec
mov
loopne
jae
mov
loopne
mov
push
push
adc
faddl
fs
jo
or
fldl
mov
iret
or
stc
mov
subb
pop
out
jg
sbb
push
out
adc
test
lods
xchg
mov
pop
adc
into
daa
cmpsb
fisttpll
jecxz
bound
in
pop
push
mov
cmp
inc
ja
or
mov
jb
xchg
push
inc
jmp
pusha
push
ror
sar
jae
pop
cmpsb
adc
pop
leave
das
push
dec
jge
or
mov
mov
xchg
push
cmp
xor
ss
push
cmp
sbb
dec
lock
fbld
xchg
fs
push
cltd
shrl
js
push
sbb
fld
add
mov
insb
std
rorb
push
test
stc
mov
repz
mov
nop
cmp
dec
cld
pop
lds
icebp
mov
ret
outsl
cmc
fsts
inc
or
and
pop
lret
loope
or
jge
div
mov
jg
pop
icebp
addr16
mov
stc
bnd
mov
ja
int
push
pop
mov
dec
scas
ja
xor
cli
out
ja
loope
ror
js
dec
ja
inc
or
or
enter
mov
fidivrs
lea
pop
int
mov
jno
pop
scas
sub
jbe
loope
ljmp
rolb
into
imul
mov
insl
and
or
jmp
mov
dec
std
fs
dec
sub
loop
in
mov
lock
xor
cltd
push
dec
test
loopne
mov
hlt
test
or
xchg
xchg
pop
mov
je
adc
add
mov
gs
stc
push
test
sbb
in
std
dec
xchg
adc
or
arpl
rcrl
inc
cltd
fldl
push
inc
pop
cmp
push
sbbb
imul
cmc
push
scas
pusha
int
fsubl
xor
mov
and
popa
or
sahf
pop
or
cmp
in
dec
pop
xchg
push
xchg
lea
inc
xchg
xor
xchg
gs
mov
lret
push
lds
push
push
es
pop
jl
lret
xchg
inc
popa
jge
insb
xchg
jnp
inc
mov
sub
or
andl
pop
fdivs
push
inc
jne
mov
dec
inc
loop
xlat
mov
mov
cmp
addr16
sub
xor
add
xor
adc
fwait
test
outsb
xchg
in
push
mov
pop
jbe
mov
push
mov
mov
add
sbb
test
xchg
xor
js
test
or
xchg
push
cmp
mov
fxch
pop
pop
in
xchg
inc
push
lods
frstor
push
sbb
dec
pop
icebp
dec
fistps
out
stos
xor
fcoml
into
add
lods
push
mov
ljmp
and
imul
scas
dec
mov
call
hlt
sbb
mul
push
xchg
jp
and
xor
out
or
sbb
daa
je
in
fs
dec
and
mov
pushf
cmp
jecxz
mov
data16
dec
jbe
jbe
cmp
jge
jns
call
xchg
insl
xor
pop
dec
mov
mov
lret
aad
mov
jbe
addr16
push
pushf
leave
out
dec
xchg
push
jae
xchg
mov
jmp
xchg
xor
sarl
jno
clc
cli
add
repz
daa
jnp
cmp
mov
popl
fisttpl
inc
add
sahf
pop
clc
lods
scas
adc
rcl
xchg
cwtl
pop
dec
xchg
daa
les
test
pusha
and
pop
cmovae
test
cmp
arpl
sbb
or
push
add
sub
mov
pusha
mov
daa
and
pop
stos
decl
shrl
cltd
lds
push
faddl
scas
xchg
jns
and
push
adc
jl
pop
pushf
lcall
mov
lea
push
xchg
sbb
mov
ja
pop
pop
jecxz
idivl
sub
sub
mov
sarl
arpl
movsb
popf
sub
lret
xchg
jnp
inc
jecxz
add
dec
sbb
pop
mov
pop
mov
adc
dec
cltd
into
xchg
ret
pop
dec
les
mov
cmpsb
push
cli
cmp
jae
subl
fdivr
stos
mov
inc
sets
cmp
adc
aaa
fcmovne
and
sub
add
in
xor
in
jb
stos
inc
push
leave
push
pop
rorb
test
or
jle
test
and
std
std
jp
addr16
jp
gs
nop
pop
sub
int
xor
xchg
jge
leave
and
inc
xchg
mov
mul
dec
js
sub
mov
cmp
dec
adc
clc
jmp
int3
addr16
or
jo
or
stc
movsl
mov
jmp
mov
stc
repnz
dec
insb
hlt
shll
adc
jmp
lret
fwait
out
sbb
xor
clc
shlb
ljmp
push
aaa
cmp
gs
aaa
cli
sub
pusha
add
sbb
divl
cwtl
aad
orl
jns
push
push
mov
shrl
jl
sub
dec
test
stos
negb
pop
jbe
sar
jbe
xor
xchg
mov
sti
sahf
pop
clc
inc
mov
pop
rorl
mov
pop
test
sbb
loopne
xchg
fbstp
dec
gs
sub
loop
sbb
test
pop
enter
push
movsb
fnstsw
rorl
dec
cmc
add
push
jge
push
xor
cld
jns
push
sbb
push
pop
inc
movsl
add
inc
dec
nop
or
mov
mov
clc
cmp
and
mov
push
xor
call
fmul
cld
push
push
insl
or
inc
stc
xlat
clc
ja
fidivrl
pop
loopne
fistpl
or
sub
in
mul
lods
push
lds
inc
les
rolb
sti
movsb
sub
popf
cmpl
cltd
fadds
scas
and
movsb
rclb
inc
inc
jne
into
movsb
adc
sti
data16
lock
fnsave
sub
inc
call
mov
add
leave
or
dec
jbe
sbb
rcrl
mov
xchg
leave
ss
pop
repnz
bound
mov
daa
test
mov
push
outsb
inc
xchg
xor
fcoml
les
imul
push
mov
push
and
adc
adc
out
scas
mov
aad
out
andl
push
int
push
push
inc
fcomps
clc
dec
inc
dec
fisttps
mov
cmpl
stc
cmp
xchg
pusha
sbb
push
inc
xchg
xor
xchg
mov
fwait
mov
mov
inc
enter
or
push
mov
leave
int3
mov
int
jecxz
jnp
dec
test
push
in
popf
jmp
push
cmp
je
dec
fs
mov
sub
aaa
and
rorl
inc
dec
cmp
repnz
loop
xor
dec
fwait
iret
cmpsl
jb
adc
cmp
aad
cli
leave
lods
icebp
stos
aas
dec
punpckhbw
insl
mov
mov
cmp
or
dec
push
inc
dec
sub
adc
sbb
mov
arpl
sub
aam
lds
movsl
push
dec
testb
out
jmp
loope
push
mov
orb
call
cmpsb
or
out
dec
in
bound
and
pop
adc
pop
jne
xlat
jp
xor
stc
jnp
inc
and
bound
cs
lret
out
sbb
xor
test
push
lret
mov
xor
mov
addl
mov
xchg
pop
adc
mov
in
enter
stos
jo
dec
scas
jne
and
std
outsl
lret
push
mov
mov
or
add
mov
mov
xlat
adc
xor
pop
pop
jae
mov
mov
xor
xor
std
adc
icebp
mov
xor
dec
xadd
add
out
pusha
mov
push
push
mov
pushf
rolb
arpl
add
xor
scas
cmp
sub
std
xchg
push
mov
test
cmp
cli
cmp
lods
fisttpl
push
jo
inc
or
or
fcmovbe
push
xchg
pop
jmp
decl
fadds
sbb
sub
pop
lock
popf
add
aas
repnz
shll
sub
roll
fcompl
adc
cld
add
sahf
sub
mov
lret
js
rcll
lret
loopne
cmp
call
in
mov
repnz
out
push
cmpsb
insb
xor
mov
clc
call
mov
xor
xchg
cmpsb
mov
test
add
jne
addl
xchg
clc
jg
xchg
in
lock
xchg
dec
dec
add
lret
push
mov
push
jb
push
clc
sbb
xlat
cmp
push
ror
sbb
mov
cmpsl
ds
jbe
lret
mov
add
cmp
fisubrs
shlb
test
cmp
enter
cmpb
push
jmp
push
mov
insl
leave
lret
fs
pusha
daa
dec
xchg
jmp
movsl
ficomps
cmp
xchg
xor
or
imul
adc
mov
ljmp
lds
inc
cli
cltd
add
push
adc
pop
add
into
hlt
mov
inc
cwtl
dec
mov
shrb
dec
call
repnz
insl
jecxz
gs
fsubl
xchg
ret
and
mov
add
dec
adc
mov
pop
jae
fstpt
sbb
scas
push
addr16
xchg
fdivrs
js
and
fs
mov
mov
pop
lods
popa
dec
sbb
jecxz
mov
loope
push
inc
out
test
jns
xlat
scas
mov
cmpl
jp
je
dec
add
lret
jmp
fnstsw
cmc
add
arpl
shll
xor
inc
andb
jb
pop
je
cltd
sbb
das
lahf
mov
lea
in
mov
aad
pop
pop
aam
adc
aaa
sbb
xlat
loopne
into
mov
cmp
movl
mov
inc
arpl
sahf
pop
testb
mov
mov
ds
xor
fistpll
cmp
push
mov
add
call
int
xor
js
test
xorl
in
mov
push
mov
xchg
or
jp
call
dec
push
test
aaa
sub
icebp
cmp
inc
pop
bound
jmp
push
pop
cltd
inc
data16
in
imul
jecxz
mov
movl
and
push
jne
mov
imul
add
xchg
mov
jp
sbb
jle
divl
test
pop
leave
pop
xor
jg
jne
pop
xor
mov
xor
fldenv
xchg
push
int
testl
nop
cmp
xchg
daa
sub
pusha
fwait
cmp
xchg
push
cmp
mov
lock
jo
cmpsl
ds
jp
adc
imul
cmp
popf
cs
mov
in
pop
je
loope
pusha
mov
outsb
incb
sbb
push
sar
xor
mov
xlat
mov
push
sti
adc
lea
pop
sub
dec
loopne
sub
mov
xor
mov
sbb
test
loope
or
pop
clc
adc
repz
sbb
and
shl
cmpsb
arpl
dec
sbb
lods
aas
jle
adc
and
push
jmp
pushf
cmp
int3
mov
mov
lcall
pop
pop
push
adc
push
rorb
mov
push
repnz
mov
in
and
aaa
jp
loopne
xor
jg
movsb
inc
aad
xor
ret
add
mov
xchg
mov
jle
aam
mov
leave
pop
pop
pop
jmp
or
push
fbstp
cmpsb
inc
cld
sub
xor
mov
inc
or
cmp
ror
je
adc
push
xor
cmp
iret
xor
outsb
inc
and
jp
cmpsb
pop
cwtl
mov
jmp
outsl
mov
sbb
popa
xor
sub
and
fmuls
push
and
adc
mov
push
pop
xor
mov
pop
fstps
jmp
into
sarb
aas
cltd
cmpsl
lock
pop
push
test
insb
pop
sbb
or
adc
into
leave
dec
adc
mov
pop
lea
repnz
lods
dec
fsubs
xchg
mov
dec
imul
jge
cmpsl
adc
clc
jp
out
sti
sbb
loopne
push
push
cmp
jb
push
xchg
ljmp
loop
and
push
fstpt
cmpsb
jnp
push
add
and
dec
inc
mov
mov
fldt
lods
ret
in
je
add
jb
fidivrs
in
mov
es
in
aas
jns
sbb
sub
ret
xlat
popf
lods
or
hlt
lods
loopne
xchg
and
xor
sbbl
pop
pop
mov
xor
pop
inc
pop
add
sbbl
leave
xchg
bound
cmp
inc
int
xchg
jne
and
adc
sbb
fs
out
sti
aam
cwtl
shll
dec
clc
mov
aam
fwait
cltd
sbb
pushf
add
clc
mov
push
dec
addr16
movsb
mov
fistpll
daa
xlat
push
shlb
mov
cli
xorl
adcb
in
mov
outsb
cmp
inc
stc
adc
pushf
arpl
pop
fcoml
test
push
loopne
inc
mov
mov
fmuls
cmp
mov
fmull
test
insb
clc
jg
xchg
mov
inc
test
mov
xchg
pop
push
and
xchg
cmc
jb
fwait
cmc
mov
pop
mov
mov
mov
push
jmp
mov
lret
enter
sbb
arpl
mov
repz
popl
jns
jnp
cmpsl
adc
test
mov
lock
push
xor
or
push
or
pop
jb
mov
push
and
ret
add
mov
ds
iret
or
stos
adc
xor
pop
cmp
pop
dec
sbb
xchg
aas
xor
pop
xchg
into
pop
nop
rcll
jbe
les
sub
xor
jmp
or
out
jne
cli
or
or
xchg
inc
lock
fisttpll
xchg
add
shrb
scas
loope
xchg
sub
mov
xchg
pop
jns
int3
jecxz
int
dec
pop
popf
add
les
pop
cltd
pop
std
cmc
adc
cmp
repz
popa
push
ficomps
lahf
pop
push
xchg
scas
dec
pop
movsl
mov
mov
mov
into
in
add
adc
mov
sbb
fdivr
dec
movsb
cwtl
test
sbb
pop
movb
adc
je
movsl
dec
mov
inc
pusha
push
or
fcoms
xchg
test
cmp
push
lods
arpl
rol
cwtl
inc
cmp
jb
lods
pop
lds
sarb
pop
add
push
mov
pop
or
adc
jns
test
cmp
ret
adc
xchg
mov
jno
xchg
fsubrs
cmp
je
or
adc
es
sub
rorb
or
xchg
or
mov
inc
out
pop
dec
stos
fsubr
xchg
and
xchg
push
sub
cwtl
insb
shr
testl
mov
je
out
icebp
mov
aas
pop
xchg
push
xchg
dec
sbb
inc
adcl
adc
les
sbb
out
or
into
mov
or
dec
mov
inc
test
pop
or
mov
rclb
jns
addr16
mov
and
divb
xchg
fisubrs
arpl
adc
push
push
mov
push
frstor
leave
jg
jle
and
nop
stos
adcb
pop
divl
add
adc
sbb
cmp
jne
shlb
adc
xor
repnz
jae
add
cmpb
cmc
xor
add
cmp
cli
sub
stos
scas
cmpsb
fnsave
add
push
jae
push
pop
adc
jbe
outsb
aaa
fbstp
push
inc
pop
scas
cmp
es
lret
cmp
adc
mov
dec
pop
stc
push
and
mov
dec
test
lods
fwait
cwtl
lds
adc
ret
cmp
mov
aam
in
jbe
inc
pop
cltd
lds
jno
pop
pop
test
inc
clc
in
out
std
jbe
sbb
cmp
and
adc
scas
adc
outsb
notb
leave
cwtl
aaa
daa
das
add
pop
scas
sbb
xchg
pop
cli
or
dec
cmpsb
sub
xor
sti
mov
cmp
mov
rcrl
mov
imull
add
adc
adc
aam
mov
xor
aam
mov
scas
daa
jae
xchg
je
cmp
jg
mov
pop
in
add
mov
dec
xchg
cmp
inc
xchg
and
dec
inc
sub
ljmp
ss
jne
jmp
mov
pop
loope
sbb
mov
rclb
xchg
pushf
jmp
push
cmpsl
push
adc
mov
adc
lods
push
aam
andb
inc
pop
and
mov
test
xchg
test
lock
fxch
xchg
stos
jns
cmc
sbb
lds
outsb
and
cmp
test
movl
out
lcall
inc
push
jecxz
inc
dec
jbe
ss
inc
adc
push
dec
jmp
or
jnp
inc
dec
lods
aas
jne
loope
lret
loope
orl
aaa
pop
cmp
in
jae
push
fstpl
mov
pop
shlb
jmp
sub
pop
pop
rol
cmp
mov
add
idivl
dec
pushf
push
mov
or
jbe
push
fisttps
int3
lock
cmp
pop
cli
nop
popf
decb
test
cmp
movsl
mov
divb
loop
fdivrs
xchg
cmp
push
cld
push
stc
cmp
pmulhw
xchg
sarb
mov
sarl
repz
cwtl
jg
nop
inc
pop
call
lret
into
adc
inc
icebp
mov
andl
das
std
adc
jecxz
pop
je
xchg
stos
lret
gs
or
or
sub
push
jecxz
insb
arpl
mov
sbb
iret
or
mov
lock
or
fstpl
jge
in
add
pop
into
mov
xor
neg
out
cmp
and
lahf
xchg
lods
sarl
sbb
ud1
jns
in
inc
fbld
or
lea
sbb
sbb
ja
scas
jmp
and
adc
aam
add
adc
jg
push
jl
dec
loop
sti
cmp
std
inc
adcl
and
push
mov
lea
ljmp
adc
sbb
jmp
xchg
inc
imul
mov
lret
jnp
pop
aas
loopne
push
mov
jo
nop
cmpsl
arpl
jmp
jle
mov
mov
mov
aaa
jle
out
lea
test
rclb
jbe
out
cmp
jmp
mov
sub
cmc
jo
mov
enter
ss
imul
gs
cmp
cmp
push
repnz
mov
out
jg
negb
sub
mov
jae
xor
jbe
adcb
out
xor
in
push
cmpsl
clc
pop
jo
dec
cmc
ffreep
push
add
mov
lods
in
xorl
stc
inc
into
or
jae
in
mov
inc
xchg
mov
ljmp
jg
int3
repnz
aam
mov
xor
cmp
cmc
cmp
dec
ret
jmp
adc
mov
sub
lcall
in
clc
add
adcl
lcall
dec
mov
dec
ror
and
or
push
fmul
sbb
or
cmpsb
jo
mov
jmp
or
or
mov
push
push
cltd
pushf
sbb
and
jmp
loope
mov
push
sbb
pusha
ret
in
rcrb
cli
mov
mov
jge
push
inc
adc
sub
nop
addr16
xchg
dec
adc
mov
sbb
lea
outsb
out
jp
addb
mov
pushf
negl
jl
add
out
jo
data16
je
jmp
int
out
push
xchg
ljmp
mov
adc
xchg
pop
andb
outsl
js
mov
shl
mov
int
je
test
popa
jo
stos
xor
rorl
cltd
mov
dec
movsl
enter
ret
pop
jns
jp
sbb
xchg
cwtl
jns
and
nop
gs
jle,pt
jmp
fstl
cwtl
and
sub
pushf
push
xor
pop
inc
jge
pop
jp
out
aam
and
dec
fwait
xchg
jg
sbb
mov
pushf
mov
mov
inc
pop
xchg
cmp
loop
dec
leave
ss
mov
sbb
mov
popl
int
mov
cltd
imul
mov
and
sub
loopne
pop
cmpsl
sub
fiadds
in
je
nop
call
shll
sti
mov
ficomps
pop
jp
aaa
jle
cmp
aam
adc
rclb
lods
in
mov
dec
mov
inc
inc
je
loopne
sti
insl
mov
or
jmp
pushf
push
dec
mov
test
addb
lods
into
push
pop
stc
fidivrl
push
push
inc
imul
dec
das
sbb
gs
cmp
nop
sar
mov
arpl
fs
popa
lcall
add
cltd
sbbl
push
outsl
xor
shl
scas
das
out
fdivrs
push
call
cs
inc
push
pop
sub
pop
test
aad
sub
xchg
mov
xchg
in
pop
jmp
jge
push
or
mov
adcl
gs
push
cmpsb
shlb
fmulp
cmc
jp
xchg
cmc
add
js
pusha
stc
stos
in
add
cmpsl
sti
adc
mov
cmp
fsub
xchg
mov
movsl
mov
in
push
inc
bound
xlat
test
push
adc
cmp
leave
scas
movsl
gs
mov
push
imul
fdivl
adc
inc
xlat
pop
cld
lret
inc
xchg
fs
jno
add
push
movsl
sbb
or
jb
fisubs
sbb
dec
mov
dec
out
fiaddl
cli
inc
cmp
adc
jl
cmp
sub
pop
pusha
mov
mov
inc
mov
loopne
sub
or
popa
mov
aam
shrb
and
shll
jae
jge
add
arpl
inc
lcall
in
scas
imul
sbb
in
aad
jp
into
fcmovu
xchg
xor
enter
xchg
mov
inc
adc
or
mov
jge
push
in
sbb
dec
clc
aas
mov
inc
jl
loope
push
call
adc
mov
cs
xlat
ds
aaa
inc
xor
mov
adc
fidivrs
stos
or
xor
jb
inc
jbe
mov
inc
int
push
or
mov
loope
xlat
mov
pop
xchg
jmp
xor
aam
cmpsb
aam
mov
andl
or
push
push
pop
sub
out
pop
filds
imul
in
out
loopne
dec
xchg
pop
cld
or
mov
and
sti
xchg
loop
sub
xor
rorb
cmp
sbb
and
jnp
mov
jns
shrl
push
fwait
je
adc
push
pop
fcoml
inc
loopne
jns
dec
jno
adc
xchg
and
mov
cwtl
jns
aas
pop
mov
stc
jno
xchg
or
jae
hlt
push
mov
sarl
test
mov
out
popa
mov
add
jnp
pop
lds
xchg
test
out
jbe
clc
cs
or
jl
mov
lahf
leave
mov
sbb
adc
cmp
sbb
shl
pop
mov
popa
xchg
sahf
vmovups
jnp
and
sbb
cmp
adcl
mov
sub
dec
stos
sbb
pop
xlat
xchg
loopne
dec
dec
xchg
ss
add
scas
sarb
stc
mov
sub
jnp
icebp
mov
pop
repz
repnz
jno
cmc
out
ret
lahf
cmp
add
aad
adc
aam
and
icebp
add
dec
enter
dec
mov
fiaddl
add
arpl
mov
into
scas
add
aam
push
mov
cs
test
in
int3
jns
int3
fcomi
mov
jg
outsb
xchg
push
xlat
cs
enter
inc
push
adc
cmp
push
mov
ss
sub
push
dec
fcmovne
gs
js
cmpsl
mov
js
xor
mov
arpl
aad
xchg
and
push
mov
inc
sbbl
addr16
xor
push
mov
push
lods
push
stos
or
js
jmp
dec
xchg
jno
fmull
mov
and
add
sub
xchg
add
stc
jl
pop
in
and
sti
fsubrs
cmp
mov
mov
xor
lret
jmp
jo
das
jge
and
or
inc
mov
daa
in
loope
ss
ds
push
aas
repnz
push
sbb
notl
cmc
push
aam
pop
or
ret
icebp
xchg
push
popf
scas
xchg
mov
inc
push
pushf
cmpsl
loope
mov
jecxz
add
lods
ficoms
decb
pushf
pshufw
shr
pop
inc
and
aaa
mov
dec
mov
or
add
lock
xor
test
jg
repz
shrl
and
push
scas
loop
xorb
mov
inc
jl
dec
xchg
add
pop
rcl
mov
popf
or
icebp
leave
cmp
xchg
push
mov
xor
in
into
popa
adc
divb
xchg
xchg
and
push
mov
sbb
ss
das
xchg
bound
dec
jbe
dec
xchg
mov
add
sub
mov
test
mov
mov
cmp
std
or
cmp
repz
mov
add
inc
in
xor
add
stos
mov
push
dec
sub
mov
les
and
push
push
dec
jne
popa
in
xor
mov
jns
cltd
cmp
int3
and
cli
int
cmpsb
xchg
jecxz
pop
nop
cmp
inc
inc
hlt
xchg
inc
daa
popf
jg
xchg
jmp
outsl
enter
sub
jne
adc
mov
ljmp
insb
pop
dec
in
or
out
hlt
cmp
ja
sub
add
lahf
movsb
push
jp
imul
inc
sbb
filds
or
fs
mov
stos
iret
leave
gs
jb
out
sub
iret
stos
jnp
shll
jns
fnstcw
inc
xlat
mov
stos
jno
inc
cmp
cmp
inc
dec
jno
in
sub
mov
mov
insb
enter
lock
loop
adc
mov
rep
cld
mov
enter
mov
cmp
fucom
fidivrl
insb
movsl
test
sbb
xchg
rorl
dec
mov
cmp
jo
lds
loopne
iret
cli
test
add
sbb
pop
push
mov
test
mov
mov
mov
jo
xchg
xchg
sbb
jle
push
pop
cmpsb
fisubs
mov
xchg
cmpsb
jg
dec
mov
in
push
in
rcll
sbb
shll
xor
movl
dec
cwtl
lods
jl,pn
xchg
fildll
dec
shlb
mov
sahf
push
enter
pop
pop
les
sub
mov
les
jmp
or
mov
add
cli
in
jp
gs
pop
sub
xchg
and
xchg
cli
fs
xchg
adc
push
inc
sub
push
mov
int
fsts
fs
fwait
mov
jne
adc
stos
dec
mov
lods
pop
mov
jbe
cmp
xor
cmp
cmp
hlt
add
fcomi
scas
xchg
int
in
push
sbb
lds
data16
cli
push
push
push
in
call
push
mov
dec
mov
inc
test
fs
jp
add
pop
cmpsl
and
jle
les
out
xor
mov
xchg
pop
jb
mov
pop
xchg
rorl
mov
xchg
add
xor
mov
call
push
loopne
mov
inc
outsl
into
cmp
mov
scas
add
pop
mov
inc
inc
add
cmpsb
mov
test
jl
mov
lcall
imul
out
ficompl
cmc
sbb
stos
mov
add
pop
cs
dec
imul
inc
and
push
or
fimull
inc
stos
stos
popa
lcall
jno
hlt
jb
sub
inc
loopne
adc
jecxz
push
mov
push
mov
cmp
dec
xchg
arpl
push
sub
pop
popf
bnd
sub
pcmpeqw
xor
or
xchg
jmp
adc
cmp
inc
fs
sar
push
mov
stos
jno
leave
cs
and
pop
and
mov
mov
rorb
mov
xchg
lret
add
hlt
dec
in
lds
jmp
movb
sbb
shrl
push
mov
test
stos
adc
outsb
push
xor
rclb
cmp
jl
adc
inc
cli
aad
clc
and
aad
test
fldl2e
adc
xor
jns
inc
mov
inc
gs
sub
imull
test
pop
imul
andb
mov
std
sahf
add
mov
pop
ret
pop
sub
dec
sub
stos
mov
and
xor
push
lahf
jge
adc
out
aad
cld
fldl
inc
or
cmp
mov
lret
adc
jno
cld
pop
fdivp
jge
push
es
fildl
inc
push
jnp
jnp
mov
pop
insb
jg
sub
js
dec
jle
pop
sbb
ljmp
jmp
stos
hlt
arpl
ljmp
mov
push
xchg
inc
mov
faddl
movsb
jmp
jl
aam
pop
aaa
out
les
mov
call
aam
data16
inc
xchg
test
mov
shrl
movsl
addr16
movsb
pushf
fs
and
adc
push
lods
or
fldt
popa
dec
cmp
xor
loope
jecxz
xchg
push
out
cmp
das
int
enter
add
lahf
mov
movsl
stos
and
xor
jl
cmp
inc
gs
mov
push
push
inc
inc
nop
and
dec
mov
shll
jl
inc
mov
out
and
les
xorb
imul
cltd
rep
dec
pushaw
pop
insl
iret
push
sbbl
sub
in
push
mov
pop
in
sub
xchg
and
add
gs
repz
pop
testl
ss
jge
aaa
leave
fistpl
shrl
xor
push
xor
jmp
dec
push
pop
popa
pushf
push
inc
or
mov
dec
jns
cmp
push
jecxz
sahf
adc
repz
jnp
ljmp
jle
push
sar
xchg
clc
or
cmc
xchg
mov
into
mov
mov
jmp
xchg
out
dec
inc
push
mov
adcb
lcall
xor
mov
mov
mov
xchg
stos
out
pop
xchg
jne
xchg
cli
jg
or
cli
mov
out
mov
in
lcall
scas
push
loope
jmp
daa
and
into
jge
inc
push
xor
add
int
lret
cmp
in
mov
fnstenv
mov
gs
repnz
ret
bnd
ja
fwait
je
mul
jne
insb
cmp
fldl2t
mov
rcrb
ss
jge
mov
add
jge
pushf
jmp
jmp
xor
jmp
inc
mov
xchg
mov
out
xor
aas
fildl
aam
inc
cmpsb
xor
cmp
xchg
movsl
fs
or
push
sub
cmp
nop
mov
and
out
aam
data16
ret
scas
fcomi
mov
lret
rclb
std
xor
dec
insl
call
cmp
pop
cli
rorb
inc
loopne
cmc
loope
push
mov
aam
clc
sarb
cmp
pop
jne
psrld
add
jnp
jns
out
jno
repz
sbb
mov
jae
aas
call
insb
inc
movsb
lea
sbb
pop
sub
loope
insl
addr16
sub
xchg
in
mov
push
mov
jbe
std
ljmp
jnp
lods
repz
mov
mov
jns
sbb
int
shll
mov
mov
sbb
inc
out
mov
das
ret
mov
or
aas
rcrl
sub
jne
les
loop
aaa
jmp
enter
ss
mov
push
fistpl
and
pop
outsb
sub
fwait
xchg
cli
xchg
pop
test
jbe
rolb
out
out
push
je
popa
int
ljmp
xlat
lret
iret
cmp
dec
pushf
test
xor
mov
in
fs
jo
ljmp
std
nop
div
bound
pop
mov
lahf
in
in
and
imul
pop
push
push
out
xchg
pop
mov
data16
mov
neg
inc
bound
insb
sub
xchg
and
ljmp
loop
rolb
pop
xor
sti
mov
dec
or
sahf
sbb
cmp
mov
mov
mov
xchg
cmp
cli
addr16
fadd
mov
xor
cs
adc
outsb
inc
adc
or
xor
mov
jmp
inc
sub
stos
pop
xchg
call
je
mov
dec
cli
dec
fcomps
mov
inc
ljmp
lock
aad
adc
pop
mov
lret
sub
aam
pop
arpl
add
popf
fwait
jne
jl
jle
popa
outsl
notl
pop
xchg
cmp
iret
pop
fiadds
ds
stc
imul
and
fimull
mov
xchg
fstl
ss
psubd
jp
aam
sbb
dec
aad
xchg
mov
mov
push
mov
fpatan
lret
ficompl
sub
xor
idiv
mov
movsl
pop
adc
sub
jg
cwtl
rolb
out
scas
mov
call
insl
dec
rcl
xor
mov
in
cmp
loope
mov
xchg
jmp
outsl
inc
add
ret
pop
in
and
or
stc
leave
aas
jg
mov
adc
mov
fsub
xchg
data16
aas
sub
mov
sbbb
mov
or
sub
xchg
or
dec
stc
rcrl
jecxz
sub
xchg
add
xor
or
test
insl
jb
iret
aaa
xchg
mov
dec
inc
into
adcl
xor
mov
ficoms
push
mov
jo,pt
aas
and
sub
add
cmc
xor
jne
pop
fsub
in
cmc
pop
ss
jbe
sub
mov
jge
aad
sti
sahf
or
scas
fmuls
scas
ja
repnz
daa
and
jecxz
xor
xchg
scas
mov
aad
mov
mov
imul
push
popa
inc
rcrl
scas
orps
out
roll
inc
clc
in
aas
mov
mov
add
test
mov
addr16
sub
or
mov
pop
cli
icebp
sbb
jge
nop
jecxz
cwtl
add
repz
pop
cmpsl
loopne
cmp
popf
mov
enter
scas
incl
adc
jnp
addl
sub
sbb
push
scas
mov
jl
ja
xchg
jge
mov
idivl
aaa
inc
pop
sbb
insl
mov
inc
mov
hlt
lahf
fstl
scas
mov
sti
ss
or
out
or
pop
out
loopne
addl
push
mov
mov
in
lds
outsb
lea
movsb
mov
mov
out
and
pop
push
sub
dec
add
addl
outsl
aas
push
imul
push
xchg
sub
jnp
xchg
loopne
jecxz
jge
push
push
stos
por
ss
fisttpll
mov
fst
call
arpl
add
pushf
dec
sti
pop
out
out
xor
adc
fucomp
into
clc
inc
inc
lods
jnp
mov
sub
imul
addb
adc
jno
mov
shll
test
xchg
rorb
and
and
jle
and
mov
enter
loopne
jg
test
aam
clc
jl
jmp
bound
jmp
and
sbb
mov
xchg
sub
cmp
xchg
popa
shll
ret
and
pusha
jmp
inc
popa
ret
xchg
int3
mov
push
pusha
xor
jns
test
test
cmp
in
and
jnp
add
mov
pop
mov
repnz
loop
stc
push
dec
aas
fistl
mov
pop
lods
rcll
push
or
out
and
jnp
pop
ds
inc
push
jae
jne
in
jo
and
pop
ret
pop
add
je
daa
push
insl
cmpsl
or
mov
push
aas
inc
repz
pop
into
das
pop
adc
push
adc
rorl
cmp
add
jle
mov
or
add
mov
jp
xchg
xor
pop
push
mov
jmp
jp
into
push
idiv
int3
jle
ret
loopne
push
xlat
test
dec
sbb
hlt
pop
lock
dec
adc
pop
dec
jae
sbb
andb
loopne
jecxz
push
jno
bnd
loope
daa
pusha
push
mov
mov
adc
push
mov
loop
test
mov
lcall
call
cltd
push
and
sti
push
lods
testl
jg
dec
out
dec
push
push
lock
add
xchg
inc
imul
jp
clc
lret
scas
hlt
xchg
jne
jnp
sub
pop
outsl
lods
cltd
add
into
add
mov
lret
call
xor
cmpsl
or
sahf
loopne
mov
mov
jge
pop
cmp
sbb
jle
aaa
outsl
das
mov
and
fimuls
shl
ss
add
mov
dec
pop
push
aaa
dec
int
adc
mov
loopne
and
pushf
mov
or
nop
movsb
fwait
jnp,pt
mov
imulb
add
test
cmc
xor
jnp
aas
popa
mov
sbb
xlat
jb
xchg
sti
adcl
push
push
mov
pop
sarl
leave
cld
jnp
mov
shrl
addr16
fisubs
fdivrl
adc
xchg
int
fs
mov
xchg
lcall
jb
mov
and
adc
mov
lock
test
inc
js
imul
xor
mov
jns
add
mov
cmc
mov
inc
cs
and
push
cmpsl
data16
pop
nop
xor
test
jno
pop
sbb
cltd
sahf
outsb
inc
and
incb
xor
repz
mov
sub
jns
inc
mov
cltd
lret
das
mov
mov
pop
mov
inc
and
jmp
hlt
mov
pop
lcall
js
lods
decb
xor
push
or
pop
ret
lar
rolb
pushf
xchg
int3
pop
arpl
mov
cmpsb
sub
mov
pop
xor
lcall
jecxz
rol
adc
jnp
das
inc
xor
popa
insb
jecxz
and
push
dec
push
rcl
push
xor
insb
loopne
and
lds
jo
lcall
or
dec
fdivr
nop
mov
push
jle
adc
cli
push
push
iret
pop
cwtl
shlb
pop
bound
mov
jl
sbb
ds
push
xchg
jns
xchg
xorb
xor
popf
sbb
negb
and
dec
and
dec
mov
push
xorb
adc
mov
sahf
lahf
ret
cwtl
add
cmp
pop
movsb
fld
xchg
jp
jns
mov
mov
leave
adc
les
xor
mov
pop
sti
xchg
dec
jmp
add
sbb
xlat
shr
aas
ret
ds
mov
pop
push
lods
mov
dec
xchg
test
add
jp
jbe
push
jno
lods
xchg
mov
mov
pusha
cli
and
movsb
and
and
fcomp
inc
mov
fdivs
sar
xchg
movsb
scas
subl
push
xor
inc
xor
dec
pushf
add
xor
nop
xor
enter
mov
addb
nop
mov
imul
out
dec
cmpsb
aad
ret
outsb
cs
push
sbb
ret
pop
sub
ss
pop
ret
test
stos
imulb
and
jne
mov
cltd
xchg
add
mov
lcall
xchg
mov
mov
filds
mov
pop
stos
ret
push
cmp
fdivrs
add
ds
cmp
in
stos
testl
popf
inc
inc
leave
mov
das
mov
add
add
mov
xchg
pop
cwtl
ljmp
push
mov
pop
aaa
test
cs
jp
cmpsb
jnp
xor
or
push
xor
shlb
icebp
mov
iret
add
push
call
xchg
fstp
inc
add
jne
lock
sbb
movsb
mov
sbb
xor
int
and
inc
push
add
mov
mov
stos
scas
inc
mov
pop
sbbb
mov
jae
add
xchg
sbb
dec
imul
xor
stc
adc
add
loop
and
dec
pop
push
mov
and
inc
lds
cmc
inc
xchg
pop
and
in
xchg
push
add
andl
mov
push
call
xlat
pushl
das
push
nop
mov
xor
daa
aad
dec
push
xchg
xchg
cvtdq2ps
inc
xor
mov
push
je
jne
pop
lahf
mov
rcrl
in
mov
pushf
sahf
bnd
ljmp
fisttpll
xor
ds
cltd
cli
insb
mov
dec
cmpsb
xlat
pop
push
xor
popa
pop
cld
les
cmp
jo
rorb
scas
cmp
xchg
adc
and
pop
or
mov
sbb
and
and
loopne
lret
mov
jne
push
sarl
xchg
rolb
mov
cmp
bound
cmpsb
pop
xchg
mov
inc
stos
aam
lods
sarb
sarb
xor
sbb
or
mov
mov
fdivs
jge
mov
into
jno
fidivrs
sbb
fdiv
and
nop
inc
dec
mov
out
les
jnp
sub
or
push
jle
mov
sarl
repz
call
in
sbbb
mov
pop
jmp
and
and
mov
pop
aam
sbb
es
incb
adc
jno
stos
mov
call
js
fcmovne
arpl
jne
dec
jl
jle
test
mov
push
pop
or
mov
cs
ja
adc
mov
jecxz
out
add
pusha
mov
mov
pop
insb
fldl
inc
and
pusha
cmpsl
loope
inc
je
push
in
cwtl
lret
push
mov
pop
sub
dec
sub
aam
dec
sahf
jg
frstor
test
pop
scas
and
lods
test
adc
sarl
jb
xchg
xor
mov
jle
mov
adc
push
mov
mov
xchg
pop
loope
inc
mov
jmp
jle
shl
cmp
sub
or
adc
scas
leave
pop
movsl
out
addr16
popf
cltd
jge
addb
icebp
xchg
pop
and
jns
movl
or
int3
jmp
xor
test
mov
arpl
sahf
jb
and
push
sub
sub
mov
and
stos
mov
pop
sbb
mov
pushf
xor
xor
int
push
adc
push
dec
mov
cld
or
push
lods
fstps
lret
mov
int3
sbb
inc
mov
add
out
and
add
inc
gs
fildll
scas
rcrl
aas
mov
fdivs
fmull
ja
sbb
mov
xchg
cmp
pop
add
and
sub
aaa
in
dec
jle
mov
pop
mov
xor
nop
xlat
pop
cld
push
fsubr
inc
and
fxch
mov
hlt
enter
subb
xor
xor
push
in
mov
fcoml
jno
and
subb
mov
cmc
sbb
out
stc
loop
pop
movsl
arpl
xor
mov
or
pop
mov
add
rorb
rorl
mov
popl
xchg
imul
inc
mov
sbb
out
shll
pop
or
dec
mov
mov
repnz
mov
aad
xchg
mov
and
cmc
flds
rcpps
mov
pop
adc
cli
adc
mov
sbb
sbb
push
pminub
mov
mov
stos
xor
shl
push
cmp
push
insb
mov
sub
dec
incb
mov
or
or
imul
lods
adc
sub
pop
xor
out
gs
insl
pop
notb
jne
scas
testl
imul
jne
and
loop
mov
and
add
out
lea
cld
aad
sub
sub
into
flds
and
xor
mov
inc
mov
pop
and
imull
fnsave
inc
jns
cmpsb
mov
and
push
nop
and
mov
sahf
and
inc
cmp
add
or
cwtl
dec
fcomi
insl
aaa
fcmovb
scas
sbb
xor
lret
mov
sbb
loop
mov
mov
scas
and
lahf
pop
jle
enter
jne
daa
push
cmp
rolb
ficompl
ret
jne
js
pop
imul
or
hlt
sub
and
out
outsb
pop
outsb
gs
ja
loop
inc
mov
cmp
jns
scas
ja
cmpb
dec
insb
inc
push
mov
inc
pop
orl
shlb
cs
test
mov
scas
mov
lock
pushf
push
imul
pop
adc
xor
addr16
adc
gs
shll
in
inc
daa
jns
cltd
push
xchg
push
fwait
insl
jb
out
sarb
fsubrl
mov
fnstcw
cmp
addr16
loopne
jne
popf
pop
fnsave
mov
jne
xor
call
inc
orb
addr16
push
popf
adc
out
xor
mov
fs
lods
ja
sub
shll
lret
aad
hlt
dec
rcl
mov
je
fisubrs
pop
sbb
pop
jmp
cmpsb
nop
insb
dec
inc
ja
mov
rorb
jmp
iret
jmp
mov
fdivrl
arpl
mov
sub
ljmp
inc
mov
push
shr
xchg
inc
fwait
subl
adc
inc
dec
xchg
push
int3
test
mov
inc
lock
adc
or
xchg
xchg
scas
push
xchg
je
and
andl
pusha
mov
sub
xor
pop
xchg
mov
mov
cmp
int3
mov
sub
aam
push
mov
stos
out
test
add
cmp
and
xor
and
ljmp
mov
stos
es
outsb
dec
inc
cmp
dec
fnstsw
lret
mov
insl
mov
divb
pop
cwtl
jno
xorb
sub
push
jne
mov
add
xor
add
jbe
fs
jmp
sub
or
cmpsb
lret
xlat
inc
push
jno
fs
cld
pop
shlb
inc
pop
and
nop
push
or
sbb
pop
ret
hlt
sub
push
fwait
test
jp
out
adc
jecxz
mov
js
fidivl
cld
lret
dec
leave
outsl
daa
repnz
ds
lret
bswap
inc
mov
xor
hlt
scas
or
sbb
fmul
sub
cmc
fisttpll
popf
clc
repnz
mov
arpl
dec
push
into
imul
out
in
lea
fcomip
push
pop
xchg
mov
lods
mov
cmp
dec
fdivl
fildl
push
imul
in
lods
int3
in
data16
inc
dec
dec
das
icebp
repnz
mov
mov
std
mov
call
mov
adc
insb
rorl
cmpsb
and
out
mov
add
test
xor
push
jns
and
in
fdivs
or
loopne
loop
mov
jl
sbb
mov
and
mov
and
push
xchg
cld
xor
or
xchg
push
pop
test
clc
aaa
add
fisubrs
mov
add
lahf
int
jo
dec
xor
and
sti
and
jle
xlat
lahf
sarb
clc
testl
lret
jmp
outsb
dec
mov
sbb
xor
push
pop
mov
push
call
and
xor
mov
jg
mov
push
mov
inc
dec
pop
and
out
loopne
cmpsl
ret
mov
mov
mov
popa
mov
lock
in
imul
mov
inc
cmp
xchg
or
sub
mov
daa
notl
mov
lock
divb
cmp
orl
ds
jno
ljmp
mov
lret
cmpsl
mov
lock
lock
fimull
xor
mov
jmp
cmp
xchg
test
mov
xor
leave
cmc
adc
setbe
xor
subb
xor
or
stos
cmp
leave
outsb
cltd
jnp
xchg
pop
dec
pushf
sahf
dec
in
sub
flds
jmp
cwtl
jmp
mov
and
sub
mov
jo
jge
call
xchg
andb
push
push
sbb
fidivs
das
jnp
insb
jb
stos
mov
cwtl
sub
cmp
test
scas
lret
shll
out
pusha
test
pop
adc
frstor
mov
scas
xchg
mul
ret
dec
repz
cmp
or
add
xor
sbb
or
outsl
push
and
dec
enter
xlat
fwait
xor
mov
loop
and
stos
inc
push
inc
mov
fsubr
mov
fwait
mov
pop
xchg
je
bound
mov
xor
hlt
xor
cmp
cld
fcmove
into
jbe
xchg
leave
arpl
dec
mov
and
pusha
arpl
nop
outsl
push
pop
mulb
fwait
and
in
dec
imul
cmp
fwait
push
and
cwtl
sbb
aad
cld
adc
add
out
xchg
lahf
scas
inc
lahf
cmpsb
and
daa
adc
sub
idiv
push
adc
xchg
xlat
in
push
add
mov
rcl
fmull
lods
popf
push
enter
jecxz
popf
adc
jp
sbb
cmp
cli
test
add
push
mov
mov
hlt
xor
or
jp
dec
xchg
and
xor
out
sbb
xchg
aad
lret
dec
inc
push
and
mov
mov
xor
lock
mov
and
xchg
outsl
jnp
std
sti
popa
add
les
fwait
lea
xor
stc
dec
dec
dec
and
fcomps
out
cmpl
mov
movsb
push
inc
push
sbb
cmpsb
add
pop
mov
inc
shrl
iret
ss
imull
fcmovnb
fdivr
mov
xchg
cs
xchg
push
jnp
add
mov
add
sti
mov
xchg
mov
mov
or
sbb
aas
rorl
lods
and
cs
sub
mov
dec
sub
mov
test
xchg
mov
jnp
jmp
loop
xchg
sub
lcall
dec
cwtl
imul
push
inc
jns
je
add
sbb
jne
push
js
fs
je
lock
bnd
and
pop
mov
lods
sarb
insl
jmp
mov
pop
sbb
cmp
sub
mov
mov
repnz
inc
repz
mov
aam
addr16
adc
addr16
xchg
jg
mov
stc
movsb
mov
push
or
sbb
xchg
outsb
jnp
xchg
mov
jge
cmpsl
int
lahf
loopne
into
lds
lret
call
notb
sbbl
inc
sub
imul
out
int
iret
push
pop
mov
fisubs
insb
mov
cli
aad
movsb
mov
cmp
jae
rolb
lock
xchg
pusha
shl
mov
lahf
or
jnp
jno
ljmp
fwait
sbb
adc
sub
lods
cmp
popa
fisubrs
dec
sub
dec
hlt
js
or
adc
jae
scas
outsb
mov
mov
sbb
xchg
add
jmp
add
push
add
lahf
jge
and
inc
xchg
nop
adc
push
sub
gs
push
iret
jns
dec
and
or
stc
add
stos
inc
pop
adc
testl
call
jbe
pop
mov
stos
and
xchg
mov
mov
divl
mov
push
loopne
xchg
sbb
inc
scas
fldcw
xor
mov
std
ret
xor
out
fiadds
pop
scas
pusha
sbb
in
cmp
icebp
pop
pop
lahf
shl
js
jl
call
jns
jg
in
lds
mov
sub
pop
cmpl
out
pop
in
mov
xchg
cwtl
mov
dec
in
push
push
fldt
out
cli
jecxz
mov
mov
cmpsl
les
jecxz
call
outsb
loopne
inc
pop
dec
into
sub
push
mov
sbb
inc
in
push
mov
mov
aam
in
ds
lds
mov
push
lea
pop
sub
enter
iret
mov
or
insb
sahf
jb
pop
popf
arpl
dec
push
hlt
and
sbb
xchg
popf
mov
dec
outsl
inc
adcl
xchg
push
xchg
stos
fstpt
sub
out
sub
sub
pop
nop
mov
xchg
ds
jg
sub
adc
sub
imul
daa
or
lods
inc
sub
mov
mov
fcmovnb
sub
xchg
xchg
mov
js
jecxz
out
dec
stos
push
adc
add
aad
pop
cmp
daa
pop
data16
jmp
test
into
adc
iret
pushf
cmp
rol
mov
bound
out
in
fst
bound
mov
stos
sbb
movb
test
lret
add
stc
jp
cmpsl
stc
mov
lods
rolb
repnz
les
bound
jbe
xor
nop
call
and
daa
inc
sub
xchg
lcall
adc
popa
jae
ret
xor
sbb
test
int
mov
pop
loopne
les
cmpsb
orb
cmpl
mov
cmp
mov
daa
mov
pushf
mov
arpl
dec
inc
movsl
xchg
lods
and
loop
cmp
cmc
gs
js
iret
addl
aaa
std
int
fnsave
inc
lret
inc
jbe
mov
or
imul
sub
popf
roll
addl
sbb
sbb
mov
pop
mov
fidivl
mov
cli
rcrl
xchg
sahf
mov
jle
inc
dec
leave
push
call
jno
jl
icebp
adc
aam
mov
pushf
and
xor
pop
in
idiv
jmp
lock
sbb
push
mov
jno
and
mov
and
mov
divl
mov
aaa
mov
call
cmp
sub
mov
push
push
scas
std
mov
inc
jns
enter
and
and
mov
xor
pop
lods
sub
xchg
lret
push
push
scas
mov
dec
sub
sbb
sar
sub
les
movsl
iret
add
jg
lcall
dec
stc
sbb
outsb
out
mov
push
mov
mov
lods
adc
or
jecxz
jns
aaa
arpl
mov
ds
jno
lods
xor
jb
mov
loope
push
push
push
mov
mov
testl
pop
loope
fwait
repnz
jmp
arpl
mov
inc
fcmovnbe
ja
push
or
stos
mov
arpl
mov
daa
scas
dec
inc
fimuls
add
jno
push
mull
je
orl
stos
push
je
cmpsb
sbb
jecxz
popa
mov
lahf
mov
loope
cmpl
adc
xchg
dec
hlt
enter
jae
divb
iret
ja
mov
push
fstpl
std
sbb
aaa
sub
and
push
mov
jnp
jae
es
test
sbb
dec
sbb
notl
and
mov
jl
sbb
std
lds
jns
sub
fcomps
insl
cli
mov
jl
push
pushf
mov
ficoms
subb
mov
je
jno
fwait
das
or
mull
es
test
mov
xchg
dec
push
pop
aas
lods
push
jp
push
inc
mov
pop
cmp
in
mov
scas
imul
inc
mov
repnz
sahf
and
xor
int3
pusha
addr16
cmpb
xchg
xor
or
cmp
mov
xchg
iret
lret
les
in
imul
aam
int
imul
push
out
int3
je
xlat
icebp
dec
sbb
push
xchg
dec
sahf
jo
mov
xor
cmpsb
ret
inc
mov
addr16
xchg
mov
cwtl
test
movsb
bound
cmp
es
adc
inc
sub
cltd
outsl
jne
cwtl
push
bound
jbe
push
and
mul
and
xor
loope
popa
das
pop
xlat
outsb
lea
cmp
mov
xor
jo
scas
stos
inc
cmpsl
sub
jl
push
adc
das
ret
ss
and
movsl
js
xchg
popf
xorl
lcall
je
mov
inc
dec
cld
loope
mov
mov
mov
push
pop
xchg
sub
add
add
xchg
ficoml
cmp
mov
mov
inc
pop
out
stos
push
mov
fldenv
cmp
cmc
test
andb
pop
jge
mov
push
ss
popa
xchg
mov
pop
stos
test
cmp
stc
fs
pushf
mov
xchg
and
adc
dec
std
popl
cmp
pop
jmp
fs
or
je
repnz
pop
cld
jle
jnp
mov
mov
push
popa
dec
hlt
nop
stc
sub
xor
int3
outsb
int3
or
test
jp
fmull
inc
arpl
pop
insb
adc
jle
aam
xchg
shrl
es
scas
fadds
in
add
nop
pop
aam
aam
test
test
aam
fsub
inc
jl
lds
or
cmc
es
and
and
sub
jnp
cmp
out
sbb
xor
cmp
jb
repnz
pop
test
lahf
and
mov
inc
or
mov
and
std
ja
lods
cmp
pop
cmc
dec
sub
cmpsb
cwtl
enter
mov
rorl
imul
sahf
fisubrl
mov
lcall
adc
inc
dec
fldl
mov
movsb
scas
ds
inc
int
sbb
outsb
pusha
aad
test
out
xlat
or
out
repnz
jl
cld
push
push
imull
fiaddl
notl
icebp
faddl
push
sbbb
sahf
cmpsl
xor
inc
push
xchg
inc
mov
pop
add
pop
sub
adc
fistpll
fdivrs
xlat
pop
repnz
push
mov
loop
adc
mov
lcall
push
sbb
push
add
adc
xchg
mov
icebp
outsb
sub
jge
ficoms
out
test
fadds
faddl
outsb
xchg
into
push
pop
inc
aas
aas
rolb
and
shlb
adc
in
fists
adc
mov
mov
pushf
and
sub
mov
sahf
xor
sahf
clc
sub
mov
and
mov
cmpl
push
or
negb
pop
cmpsl
pop
sub
pop
sti
mov
out
sbb
mov
xor
pop
ss
loop
test
and
cmp
das
fs
sbb
xor
jne
lds
ds
dec
push
jne
pop
push
fistl
sub
lea
fldenv
jae
jecxz
enter
addl
sub
flds
out
sbb
push
int3
add
mov
fists
push
shll
mov
cltd
nop
fstps
mov
pusha
popl
fadds
imul
ds
xor
sbb
push
dec
xor
adc
xchg
sbb
or
popf
arpl
ret
int
mov
push
insl
mov
xchg
xor
add
nop
dec
xor
in
add
lods
and
mov
cmp
mov
std
mov
sbb
push
outsb
imul
enter
in
jge
mov
test
fstl
sub
jb
or
mov
adc
in
mov
notb
bound
mov
sbb
cmpl
loop
mov
jb
popa
fcmovnb
into
dec
fucom
xor
mov
stos
jno
push
xor
or
cli
stos
cmp
inc
sbb
push
cli
adc
lds
inc
xchg
sub
sarl
cwtl
or
jne
xor
lahf
enter
pop
lds
sbb
mov
insb
sub
and
adc
mov
push
lcall
jne
outsb
cld
mov
cld
test
and
maxps
aas
adc
push
and
jbe
dec
daa
mov
sub
mov
leave
loope
in
jmp
dec
pop
xlat
out
mov
pop
and
clc
out
push
fs
xor
lods
push
dec
and
mov
sub
adc
and
mov
add
adc
insl
push
pop
dec
pop
xchg
int3
xchg
mov
mov
insl
scas
test
pop
cmpsb
pop
jbe
add
xchg
xor
inc
in
aas
push
orl
ss
lret
xchg
inc
jp
js
jo
xchg
test
int
jle
push
inc
iret
enter
movb
ret
fcmovnu
sbb
cmp
or
cmp
xchg
mov
in
and
pop
shrb
sub
adc
xor
push
pop
mov
dec
pop
jle
push
filds
mov
dec
push
out
cs
test
ret
sub
mov
pop
cmpsb
rorl
mov
out
loope
jmp
loopne
add
iret
cs
pop
add
dec
movsb
mov
sbb
lahf
jno
xlat
cmp
imul
cwtl
pushf
in
mov
nop
loopne
dec
cmp
cmp
cmc
arpl
lds
jle
out
cmp
sti
aaa
mov
out
push
pop
loope
les
lret
xchg
xor
mov
pop
sbb
ss
jg
adc
call
decb
jo
movsb
lcall
aad
arpl
repnz
fdivrl
in
lcall
push
add
and
in
xchg
stos
bound
es
xchg
add
jle
fwait
mov
sub
xor
push
insb
and
sti
into
mov
sub
sub
jne
insl
mov
test
inc
movsl
inc
xchg
roll
dec
leave
cmp
inc
sbb
pop
and
xor
out
out
pop
daa
fcmovb
sti
xchg
pop
sbb
lods
dec
out
ljmp
movsb
in
cmpsb
mov
inc
cmc
and
dec
jp
adc
shll
mov
wrmsr
or
xchg
mov
xor
stc
out
or
add
pop
aaa
ss
mov
jns
cmpsb
lods
lea
jg
js
ret
push
shlb
jl
xor
je
dec
push
lods
dec
xchg
gs
fadds
mov
rorl
and
add
xor
sbb
mov
div
imul
sbb
pop
xor
mov
lahf
test
rcll
pop
xchg
pop
in
hlt
cmpsl
test
arpl
jmp
lahf
cmp
or
xor
xor
push
xchg
mul
or
movsb
pusha
cltd
leave
icebp
sub
xorl
out
test
jmp
clc
cmp
xchg
mov
xor
test
int3
movsl
lds
call
andl
mov
or
mov
and
int3
stc
dec
pop
mov
or
movsb
adc
pop
or
sub
mov
xchg
fs
and
push
fdivl
js
mov
sub
jmp
popf
ret
jb
icebp
pusha
adc
lock
loopne
mov
pop
sar
jl
cld
inc
mov
fcom
hlt
adc
sub
das
repnz
dec
aas
lods
add
jmp
pop
jl
pop
add
out
add
outsb
cmpsb
out
mov
lret
mov
lds
int3
xchg
fstpt
dec
and
jbe
ret
ljmp
adc
inc
mov
scas
hlt
popf
insb
mulb
dec
negb
jne
mov
pop
sub
fwait
xchg
outsb
add
mov
int3
gs
sbb
mov
lock
sbb
test
cs
cmp
ss
inc
adc
sub
push
test
mov
daa
add
xchg
add
in
mov
pushf
outsb
cmp
aaa
int
icebp
mov
ljmp
testb
mov
jnp
lret
add
fisttpll
jg
and
lods
ja
fsubl
cmp
sti
cmpsb
fldl
cmp
bound
mov
repnz
out
push
in
in
xchg
jb
push
cld
cmpb
add
lds
mov
aas
add
arpl
lea
inc
outsl
in
gs
cmp
mov
jbe
mov
leave
sub
sub
add
rorl
out
ds
mov
das
sub
sbb
jno
mov
repnz
push
lods
mov
popf
je
push
mov
lahf
shll
or
ret
rolb
jge
pop
xchg
push
adc
int
push
hlt
lret
sbb
lds
imul
xchg
sub
pop
xor
xchg
fdivrs
add
and
call
leave
add
imul
cmp
cmc
aad
fwait
mov
sub
out
mov
fisubrl
jmp
inc
sub
scas
imul
push
xchg
outsl
in
lds
scas
inc
movsb
or
leave
xor
aas
test
mov
data16
ja
mov
sbb
insl
xor
je
fstl
jne
jmp
sub
test
rcll
repz
sub
xchg
in
in
mov
dec
imul
cmp
xchg
push
xor
jnp
test
mov
nop
cmpsl
iret
ljmp
mov
sub
insb
neg
nop
test
insl
fimull
jno
ljmp
jb
cmp
rcll
cwtl
sub
fildll
xchg
pushf
loop
push
cmc
popf
scas
out
xor
stos
lret
out
fld
aaa
in
mov
loopne
mov
dec
jns
arpl
repnz
cmpl
outsl
shrb
ret
pop
gs
push
sbb
xchg
lock
and
mov
add
std
pop
js
aam
pop
aas
mov
fwait
pop
mov
imul
inc
lods
int3
cld
add
lea
scas
fisubrs
enter
fsts
test
int3
or
push
mov
cmc
mov
inc
cmpsl
mov
aas
imul
adc
jne
mov
pop
leave
jo
xchg
sub
jp
xchg
outsb
pop
repz
aad
andl
pop
movsb
call
in
leave
fdivl
insl
xor
arpl
fdivr
scas
int3
inc
mov
mov
xlat
aaa
adc
mov
xchg
mov
dec
test
xchg
ret
jno
popf
cmp
insb
xchg
sub
icebp
mov
and
cmp
repz
inc
ds
mov
add
pop
jb
cld
mov
lret
cmpb
mov
sub
mov
mov
mov
xchg
mov
push
or
dec
inc
mov
or
add
sbb
enter
addr16
scas
sub
repz
das
sub
ret
jecxz
lds
mov
scas
hlt
push
cltd
xchg
shll
push
cmp
cmp
das
pop
mov
jbe
insl
jne
mov
insl
jns
ret
pop
inc
outsl
out
subb
ljmp
xor
clc
jmp
xchg
pushf
inc
xor
add
test
insl
xchg
cli
pusha
lcall
push
jp
push
lea
sbb
jae
fs
fisttpll
cli
and
push
icebp
ja
inc
ds
dec
mov
mov
pop
pop
cmc
or
or
xchg
jp
ljmp
pop
into
mov
xor
aas
dec
movsl
sarl
loopne
push
mov
mov
insl
adc
sub
je
adc
lret
loopne
test
fsubl
mov
sub
jg
fmull
cmp
lock
and
fstpt
ret
mov
dec
or
ja
mov
nop
popa
repz
aam
pop
xchg
and
xlat
cmp
cmc
dec
push
leave
inc
int3
rclb
fldt
inc
inc
lea
jb
sbb
push
das
jecxz
icebp
pop
into
sbb
inc
shll
stos
std
xchg
sub
mov
cmc
fxch
pop
cmp
and
and
inc
push
push
mov
mov
adc
stos
sbb
and
push
xor
lret
dec
mov
je
sti
xlat
cmpsl
mov
xchg
dec
dec
test
mov
xor
hlt
and
mov
adc
ljmp
mov
push
sbb
popa
or
lret
in
je
outsb
imul
cmp
das
push
sub
pop
outsb
outsb
clc
or
xchg
sub
xchg
mov
arpl
rclb
shll
pop
xchg
mov
and
mov
fmulp
sar
mov
lret
or
imul
push
lret
in
aad
jns
and
jns
pop
push
rclb
xor
jmp
es
lds
jae
loope
mov
mov
mov
mov
enter
cmpsl
aad
push
jl
pop
cmpsb
add
sub
add
shlb
jb
insb
fucom
pop
jmp
imul
jl
loop
insb
dec
out
dec
sbb
pusha
repz
daa
dec
aad
adc
push
flds
mov
sub
orl
popa
decb
ss
je
mov
push
or
outsb
xchg
in
add
pop
rol
add
jno
or
mov
push
loop
xor
dec
scas
in
insl
imul
repz
popa
mov
out
cld
xor
mov
es
dec
lcall
ds
push
ss
dec
lret
test
clc
inc
outsl
aas
rcll
jg
cmp
and
pop
xchg
ret
adc
cmpsb
mov
in
ret
jnp
add
inc
or
jmp
cld
xchg
inc
dec
sbb
out
sbb
mov
lret
push
sub
divb
dec
adcl
sbbb
insl
leave
inc
shrb
fisubs
ret
adc
or
and
or
mov
push
jmp
stos
dec
fdivrs
add
sbb
aaa
dec
sbbb
pop
mov
jecxz
mov
lret
ds
out
inc
test
mov
add
xor
bound
cmp
mov
call
pushf
ds
xor
arpl
loope
dec
or
cli
pop
out
push
push
mov
in
sbb
iret
adc
cld
xor
dec
icebp
test
add
je
sbb
mov
mov
ficomps
outsl
pop
fidivrs
insb
shll
mov
or
jo
jp
stos
fsubs
cmp
jle
iret
sbb
adc
add
sbb
push
das
inc
or
or
add
adc
scas
sbb
mov
jecxz
jae
or
pusha
and
loope
stc
dec
or
mov
dec
or
mov
imul
sbb
mov
jecxz
jecxz
pop
mov
jno
mov
xor
dec
test
add
imul
arpl
push
adc
push
mov
sbb
jge
jge
out
push
fsubr
cmp
add
mov
cmp
mov
je
stos
cmp
and
inc
dec
aas
xchg
mov
dec
mov
sbbl
pop
movsb
or
xor
add
insb
fs
jg
mov
lock
inc
popa
sbb
int
mov
lods
ss
sub
or
iret
adc
push
push
pop
test
nop
loope
cmp
pop
out
leave
push
clc
push
rolb
mov
and
pop
lods
rcrb
inc
shrb
test
push
mov
divb
jae
nop
sbb
cli
out
and
and
ss
outsb
xchg
imul
aas
inc
stc
push
xchg
push
pop
iret
fwait
dec
mov
dec
shl
mov
andb
pushf
lret
out
jns
xor
push
adc
and
jae
fs
imul
aaa
push
notb
faddl
or
add
push
es
dec
das
js
mov
push
bound
fsubl
jp
xchg
aad
loop
jl
pop
stos
xchg
cmp
fs
push
sbb
jmp
xchg
insl
adc
mov
into
fcmovbe
fidivs
in
sub
insl
mov
mov
test
fdivrp
ds
into
jmp
jecxz
and
popa
push
loopne
movsl
ret
in
xor
sbb
shrd
sub
shr
add
adc
pop
je
mov
inc
out
mov
repz
ljmp
ljmp
in
cs
pop
nop
push
jg
add
jb
mov
push
fmuls
dec
gs
push
dec
in
in
mov
sbb
fdivrl
int
ret
test
and
frstor
or
adc
nop
std
or
in
jnp
scas
sbb
jno
repz
lcall
loope
xchg
xor
arpl
outsb
push
rolb
pop
cmp
mov
pop
add
xchg
insl
cmc
mov
cmpsb
in
add
dec
mov
in
or
pop
push
sti
iret
and
cmc
xchg
fsubs
push
push
or
jmp
xor
cmp
sbb
and
xchg
loopne
jg
push
outsb
rol
xchg
mov
inc
nop
aas
or
std
jnp
out
push
sarl
push
jle
call
lea
movsb
pusha
or
lret
dec
sbb
add
pop
dec
dec
push
shr
fimull
push
ret
shll
lret
fcomps
outsb
inc
push
sbb
mov
std
test
pop
mov
imul
jle
inc
adc
mov
add
xchg
aam
lods
add
xchg
out
adc
lods
xchg
fldl
adc
mov
shll
xchg
scas
scas
cmp
jge
push
in
call
xor
repz
cli
out
inc
dec
sbb
jo
dec
add
mov
imul
out
jns
sub
inc
ror
xchg
xchg
dec
sub
repz
pop
mov
xlat
inc
repz
mov
cmc
rcll
pop
jns
mov
roll
je
pop
xlat
popa
or
inc
sbb
and
and
mov
push
shrl
jmp
cmp
push
mov
xorl
lods
stos
lea
cmpsb
jbe
mov
rcrb
jp
inc
loope
or
addb
shrw
lods
or
mov
or
shrl
subb
mov
fmul
fisubrl
insl
xchg
test
and
xchg
imul
or
arpl
jmp
add
sub
fs
mov
push
mov
xor
cmp
repz
or
add
jmp
xchg
inc
sbb
push
aaa
sarl
or
iret
int
push
cli
mov
addl
dec
sub
xchg
or
inc
cmc
or
pop
xlat
arpl
outsb
fnstenv
out
les
xlat
rcr
rclb
pop
in
dec
out
sbb
xchg
xchg
inc
xchg
cmp
test
dec
push
lods
jb
dec
xchg
or
ss
testl
mov
mov
cmpsl
out
mov
cld
gs
incl
cmpsl
lcall
sbb
cmp
in
xchg
inc
scas
dec
xchg
push
inc
std
out
cmp
js
pop
jae
lea
mov
mov
pop
popf
pusha
inc
mov
es
ljmp
loope
pusha
inc
push
clc
jge
arpl
or
testb
aas
xor
nop
in
jmp
sbb
cmp
pop
lods
mov
mov
rcrl
push
ljmp
addl
ds
fists
loopne
ficompl
mov
dec
xchg
cmpsl
outsl
adc
mov
adc
add
psubq
addr16
out
or
push
xchg
imul
jnp
pop
ja
insl
push
cld
data16
movsl
mov
and
pop
fsts
push
jbe
ljmp
rcrb
out
fldenv
outsb
jge
sbbb
pushf
sbb
repnz
sbb
inc
notb
sbbb
aas
adc
arpl
sub
mov
inc
push
inc
xorb
mov
sub
mov
mov
push
or
sbb
or
and
push
xchg
cmp
cli
shl
addb
sbb
mov
adc
test
sbb
cmp
in
pushl
je
jb
outsb
lret
stos
xchg
sbb
cltd
inc
aas
sub
jle
or
xor
rcrb
imul
shrb
jecxz
lcall
call
shrb
mov
lds
stos
movsb
aad
leave
fwait
sub
jb
or
push
push
lods
push
dec
inc
cmpsb
jnp
push
in
mov
jle
pop
jmp
cmp
das
push
sub
dec
and
icebp
xor
add
mov
das
fldcw
fdivrs
push
adc
jmp
lret
dec
fnstenv
std
jno
xor
imul
dec
lds
xchg
push
clc
stos
xor
int
jo
or
je
insl
pop
repnz
xchg
and
xchg
pop
inc
jge
mov
aas
jmp
xchg
repz
push
fimuls
mov
add
test
negb
cltd
adc
mul
fisttpll
gs
jp
nop
in
addr16
test
dec
cwtl
or
add
and
int
and
aam
jl
subl
xor
clc
out
pop
mov
jbe
or
push
push
stos
fstps
out
fbstp
in
pop
inc
lahf
insb
sub
test
sub
pop
aas
adc
test
push
inc
push
aam
adc
push
jg
movsb
inc
mull
cwtl
outsl
mov
sub
ret
push
sub
hlt
push
cli
popf
cmp
jl
and
ret
push
inc
jge
lds
and
push
enter
popa
cmp
bound
ds
dec
dec
test
sahf
cs
in
mov
pop
inc
int
sub
aas
das
fsub
dec
and
rclb
jmp
dec
popf
shrb
rcrl
mov
inc
insl
push
mov
outsb
or
cld
mov
js
push
pop
lea
dec
leave
or
lret
jle
dec
sbb
ja
mov
cmp
dec
adc
in
jno
push
in
jmp
cmp
fsubr
jne
inc
outsl
ljmp
pop
pop
inc
movl
rcll
inc
or
pop
pop
xor
xchg
push
cmc
loope
mov
fisttpll
push
les
sub
test
jb
les
push
pop
ret
ror
lahf
fdivp
pop
sub
inc
cmp
and
aad
xchg
mov
add
inc
dec
mov
addr16
int
mov
adc
add
or
lcall
repnz
sub
or
mov
outsb
push
cmp
mov
push
dec
jo
fsubrs
fs
mov
aas
mov
cltd
lahf
pop
hlt
or
push
ja
pop
inc
push
iret
mov
stc
jne
leave
lret
cmpsb
push
sbb
cmp
fidivs
and
sti
jl
lods
imul
mov
into
je
dec
sub
adc
inc
dec
stos
dec
and
inc
out
out
fsubl
mov
xor
mov
xlat
add
jbe
and
push
ret
inc
fidivrl
ljmp
mov
sub
enter
mov
jbe
arpl
fwait
pop
dec
add
xchg
push
sbb
mov
dec
sub
push
cmpsl
popa
dec
ret
mov
push
push
mov
sbb
push
aaa
mov
in
push
std
push
push
xchg
insl
inc
jmp
jl
cmp
mov
mov
pop
out
push
rcll
negb
in
jp
push
das
inc
lods
aad
dec
int3
into
fsubrs
cmp
mov
mov
adc
stos
push
pop
loop
lods
push
test
out
mov
xchg
or
sub
cli
adc
push
xlat
movsb
mov
pop
mov
cmp
pop
push
cmp
shlb
test
jp
inc
popa
and
test
imul
jmp
mov
inc
mov
pop
adcb
and
movsl
push
mov
jg
cmp
mov
xor
add
jle
aas
mov
inc
pop
hlt
imul
dec
movsl
mov
mov
out
aad
add
clc
jbe
cmp
or
repnz
scas
dec
dec
mov
hlt
jle
ret
push
ret
mov
pushf
pop
test
roll
mov
sbbl
mov
es
insl
pusha
lods
mov
jnp
pop
lods
aad
mov
adc
das
cmpsb
gs
sbb
in
adc
psrad
lret
adc
add
fsubrl
mov
fdivp
jmp
xchg
or
sbb
in
js
jge
bnd
repz
vmovsldup
iret
sub
push
jo
insb
push
jb
fstpt
ret
jmp
incb
push
cmp
cmp
outsl
mov
cmp
int
push
mov
test
sbb
stos
cs
pop
js
mov
imul
fcoms
jg
mov
mov
stos
mov
loopne
movsb
aaa
data16
test
addb
dec
and
sub
jl
fs
leave
push
into
sub
cmp
push
mov
sbb
adc
lds
xchg
adc
mov
fld1
sub
fistpl
sub
sbb
stos
int
test
cli
cli
imul
mov
pushf
call
std
ret
fstpt
lret
sub
neg
out
dec
jg
jp
or
push
lock
add
xchg
fs
mov
inc
mov
pop
jg
push
mov
int3
mov
mov
scas
sub
inc
std
lahf
cmpsb
insb
push
and
add
fidivrl
test
pushf
sbb
aaa
and
dec
jle
xchg
pop
cmp
mov
test
sbb
fdiv
mov
nop
cmp
fistpl
pusha
loopne
fidivrl
dec
mov
mov
mov
mov
sbb
cmpsb
xor
jne
mov
dec
aam
pushf
pushf
les
loop
jg
push
icebp
and
fsubl
std
mov
mov
mov
mov
mov
sub
js
jbe
mov
dec
pop
sbb
mov
pop
dec
movsb
fchs
insl
fldt
iret
jne
sbb
popa
pop
sti
gs
pop
shrl
mov
movsl
sahf
or
imull
aam
sub
out
fucomip
pushf
in
dec
push
adc
mov
push
repnz
jg
pop
dec
repz
int3
loope
les
movl
gs
addr16
pusha
fs
mov
inc
lods
outsl
xchg
or
pop
mov
daa
lcall
push
out
cwtl
pop
hlt
mov
dec
inc
out
add
imull
fwait
jl
loope
xchg
mov
out
xchg
sbb
or
xor
add
jo
push
ret
pop
push
or
dec
iret
clc
inc
sbb
push
jo
pushf
repnz
sarl
xlat
mov
mov
dec
in
cwtl
incl
add
cmc
mov
scas
aas
popf
pop
jle
mov
shl
or
mov
jae
cld
out
int3
data16
xlat
or
fildll
jb
inc
xlat
loopne
cwtl
lods
enter
inc
xchg
cltd
lods
add
sarl
inc
aam
lods
rcrb
scas
les
cmp
mov
lods
push
mov
pop
dec
jg
sub
fwait
push
push
sub
push
add
dec
jns
and
mov
mov
std
cmp
mov
test
shr
scas
popa
shll
dec
add
addr16
mov
inc
gs
das
les
sub
inc
popf
or
ds
fdivr
push
es
lret
adc
jecxz
lcall
enter
insb
stos
xchg
xchg
imulb
mov
mov
gs
out
jb
mov
adc
pop
loop
insb
movsb
inc
lods
in
lret
enter
lods
shrb
clc
jecxz
test
movsb
imull
push
cmc
inc
pushf
outsl
push
inc
xor
cmp
mov
stos
ret
andb
push
mov
push
fwait
or
sub
mov
mov
mov
add
adc
into
imul
pop
mov
std
sbb
pop
pop
scas
sbb
and
cmp
decl
shlb
add
sub
cmp
roll
lock
mov
stos
out
enter
mov
jge
adc
xchg
int3
jle
inc
jl
loope
cmp
fs
fcomp
in
hlt
das
xchg
inc
pop
mov
and
outsb
les
mov
mov
pushf
das
cltd
rcrl
sbb
push
movsl
stos
aaa
out
push
sti
lock
add
sub
outsl
std
mov
and
lahf
out
inc
xor
scas
pop
inc
shll
iret
fdiv
pop
orb
incb
in
push
shl
jg
jg
ljmp
movsb
adc
out
je
repnz
dec
pushf
pop
sahf
ds
fists
cmpsb
jb
mov
movl
fwait
push
mov
jno
imul
int3
push
sarb
repz
and
lret
pop
cmp
cmc
add
cmp
les
sbb
pusha
lahf
fwait
and
inc
pop
icebp
notl
pop
fidivs
or
int
xor
inc
push
dec
xchg
xchg
outsl
les
xor
stc
pop
cmp
in
gs
mov
insl
xchg
cwtl
xor
jo
mov
lds
jmp
aad
pop
dec
inc
sub
setp
aas
clc
adc
sub
out
imul
inc
popa
scas
cs
jo
mov
js
cmp
jo
es
lds
xor
add
lock
add
out
xchg
adc
cmp
orb
pop
xor
out
imul
out
adc
imul
push
jecxz
sbbb
mov
and
test
sbb
jb
mov
fdivrl
pop
add
xor
stos
xchg
mov
jne
pushf
cwtl
jnp
nop
dec
js
in
sbb
sbb
jl
aas
push
jo
pop
cmp
imul
fcmovu
sahf
nop
xor
movsl
shr
dec
jbe
popf
jle
pusha
movl
xchg
and
in
jns
jnp
imul
sahf
out
or
jbe
jge
push
xor
popa
jmp
outsb
cmp
inc
cli
cmp
adc
adc
test
xlat
push
dec
jle
addr16
mov
mov
mov
xor
dec
sub
sbb
cld
mov
mov
mov
lret
jno
mov
enter
cmc
es
push
aaa
sti
neg
test
daa
cltd
nop
jo
jne
in
mov
cmp
test
bound
fisubrl
lret
lret
jo
leave
inc
shrb
jle
mov
jle
outsl
das
jb
pop
and
inc
dec
test
fadds
mov
inc
in
ret
dec
sahf
inc
jp
fsubr
pop
xchg
mov
mov
dec
mov
popf
cmp
jnp
insl
lmsw
imul
pop
adc
shr
cmpsb
adc
stos
sub
inc
stos
stos
nop
shll
and
inc
sbb
pop
movsl
roll
fld
data16
cmp
mov
movsl
scas
or
lods
cmpsb
stc
mov
stos
dec
sub
jecxz
sbb
mov
and
or
add
insl
add
mov
daa
stc
push
sub
sbb
or
adc
pop
inc
or
sub
mov
or
shrl
or
int
push
sbb
mull
fsubrs
push
sbb
sub
push
and
xor
data16
gs
repnz
add
mov
in
leave
pop
mov
insl
sub
icebp
dec
inc
mov
lds
icebp
xorb
dec
mov
jb
lea
cmp
les
ds
mov
sbb
adc
fisttpll
stc
inc
int3
xchg
lret
mov
add
insl
iret
movsb
push
sub
inc
pop
mov
ds
es
fxch
xchg
sti
dec
mov
outsb
orl
lahf
lahf
inc
sarl
cmpsl
inc
jbe
sub
xlat
inc
mov
lods
push
xchg
insl
mov
inc
aas
ret
rcl
mov
xor
mov
cmp
mov
dec
jp
mov
fiadds
idiv
je
cmpsl
xchg
leave
enter
call
inc
and
insl
sbb
add
add
pop
mov
jne
cli
xor
fstl
cltd
clc
xor
data16
sub
mov
add
mov
fsubrs
xorl
rol
cmp
pushf
aaa
push
lret
jb
fs
xor
dec
push
inc
pushf
out
int
inc
jbe
ljmp
cmpsl
cwtl
mov
call
xor
lcall
mov
and
in
or
mov
mov
dec
xchg
jecxz
xchg
out
ljmp
repnz
sbb
fwait
adc
cmovp
callw
cmpsl
mov
jmp
outsb
inc
and
mov
js
pop
aad
test
insb
jge
add
or
test
and
lods
setle
mov
aaa
jg
cld
push
push
negl
push
xor
mov
pop
sub
fmul
enter
xchg
lods
mov
push
insb
popf
push
insb
mov
roll
mov
in
shrl
nop
in
fstl
add
fstps
clc
push
jecxz
sub
add
loopne
test
or
xchg
test
adc
jmp
mov
xchg
lcall
xchg
cmp
xchg
hlt
pop
fsubl
cmp
mov
cmp
pop
pusha
xor
cmp
jo
out
repnz
dec
ljmp
rcr
add
iret
out
mov
mov
push
mov
les
fs
jecxz
jmp
dec
and
pusha
mov
test
lcall
or
pop
popw
push
inc
pushf
pop
or
into
test
adc
lds
ja
and
push
aam
icebp
or
lods
ss
mov
xor
imul
insb
sahf
js
insb
pusha
jmp
jge
jae
mov
adc
ja
dec
das
cmp
mov
mov
xchg
xor
hlt
es
ss
cmpl
dec
pop
pop
mov
cmp
push
or
mov
pop
xchg
inc
sub
push
in
xor
imulb
sbb
sub
inc
add
xchg
lea
cs
and
test
pop
dec
popa
mov
scas
pop
cmp
dec
lock
push
and
xchg
daa
sub
int3
fld
inc
jl
jge
es
mov
push
rorb
stc
sbb
rcll
cli
jb
pop
in
popf
push
push
imul
pop
jnp
icebp
lcall
fidivrl
sbb
movsl
aas
jg
icebp
lcall
hlt
scas
push
pop
aam
push
xor
mulb
fisttpl
imul
in
mov
je
test
arpl
outsb
daa
fcoml
sar
pop
leave
or
adc
test
sbb
xchg
lea
pusha
ja
popa
fadd
sub
call
data16
fdivrs
mov
inc
clc
movsl
jp
shlb
int
sub
pop
and
mov
xchg
ret
mov
push
lret
mov
push
int
push
in
ss
or
sbb
push
jbe
xor
jl
xchg
inc
mov
mov
cld
aam
jge,pt
in
xchg
inc
fdivr
inc
adc
in
mov
sub
jmp
das
or
rorb
fs
sub
pusha
adcl
int
pop
xor
or
add
cmpsb
jmp
bound
rcll
test
shll
addl
inc
and
lret
test
cld
repnz
mov
in
lods
std
inc
pop
pop
mov
aaa
aad
add
hlt
sbbl
loope
dec
add
ds
adc
mov
cwtl
popf
imul
lock
movsb
mov
rcrb
xchg
mov
sbb
xor
ret
pop
aas
adc
cmpsb
out
pop
or
xchg
dec
jae
xchg
and
pop
subb
jl
and
fmul
jnp
push
fbld
jmp
ss
stos
js
and
rol
mov
cwtl
pop
movb
add
iret
loop
mov
jmp
fistpl
xor
sub
lea
mov
fisttpl
cli
mov
repnz
sub
add
orl
cmp
es
jp
jle
test
mov
and
cltd
pop
fdivr
pop
xor
xchg
ret
shlb
int3
xor
sbb
insl
fsubs
jmp
jg
xchg
jl
sub
cmp
pop
sub
pop
sahf
mov
lds
movsb
int
cmp
arpl
clc
cwtl
adc
pop
pop
mov
scas
pop
push
into
movsb
sbb
xchg
add
sahf
loope
sbb
push
mov
mov
das
push
ret
and
pop
es
insl
outsb
cpuid
fisubrs
or
mov
jae
jl
ss
ljmp
arpl
xlat
sbb
sbb
loope,pt
cmp
loop
enter
lret
cmp
xor
aaa
rcr
das
popf
fnstenv
cmp
ss
inc
faddp
lods
push
dec
add
add
insb
mov
cmp
imul
lgs
stos
arpl
sub
out
cmp
jo
inc
mov
pop
mov
sub
cmp
adc
jp
adc
es
pop
dec
push
push
cmpsb
aaa
mov
xchg
push
push
insl
jnp
les
jo
sub
js
dec
push
cmp
pop
mov
sbb
test
or
cld
cmpb
lods
leave
lock
pop
or
mov
cmp
test
into
push
lahf
cmpsb
fst
jl
ds
mov
loop
cmp
in
pop
jl
xor
in
push
push
dec
pop
jecxz
inc
outsb
data16
arpl
jecxz
movsl
data16
movsl
and
cmp
jp
dec
out
push
xor
test
test
loop
test
lcall
sahf
xchg
lret
jnp
enter
or
inc
jb
scas
cmc
mov
aas
xchg
sahf
mov
jno
mov
bound
inc
pop
dec
pop
cmpsb
xor
ja
test
shrl
dec
pop
js
sbb
push
mov
das
or
cmp
mov
lret
push
insl
dec
add
mov
test
jge
pop
scas
sub
or
stc
ds
sub
addr16
push
mov
mov
xor
lds
pop
mov
lret
inc
or
xor
xchg
or
rcrb
jp
cmpsl
movsb
and
xor
mov
mov
clc
fisubrl
sbb
mov
push
or
xchg
mov
jno
lods
gs
push
mov
cltd
fisubrl
add
mov
mov
push
jmp
sub
sbb
add
xchg
nop
fldenv
stos
and
jmp
mov
sub
pop
in
stos
out
adc
cs
rolb
sbb
cmp
fcomps
popf
repnz
mov
js
dec
jmp
add
adc
push
mov
push
sbb
aaa
xorb
add
ja
sub
shll
lds
int
jp
adc
push
fs
pop
std
inc
test
or
filds
repnz
in
push
sbbl
fs
xchg
inc
rcl
add
push
push
adc
repz
jmp
and
insl
pop
cmp
push
add
aas
repnz
jb
inc
insb
jmp
and
jecxz
cmc
cmpsb
jmp
cmpsl
xchg
xchg
mov
xlat
ret
dec
cmpsl
sbb
add
inc
int
test
cltd
push
int
aaa
outsb
dec
xchg
mov
sahf
repnz
das
xchg
or
aam
add
into
inc
dec
lods
int3
cltd
iret
adc
cwtl
cmp
pop
mov
mov
adc
out
mov
push
call
mov
push
ja
and
inc
pop
push
jge
movsl
and
es
divl
ret
ss
xchg
jb
pop
in
mov
movsb
fidivrs
mov
stos
repnz
rcrl
je
dec
pushf
out
mov
outsb
cmpsl
xlat
cmpsb
aaa
in
ljmp
gs
xchg
xor
dec
lahf
jnp
andl
outsl
lea
add
and
lods
nop
jmp
stos
pushl
jo
shll
lahf
lods
jl
pusha
mov
mov
aad
adc
dec
mov
out
leave
fmul
sarb
fs
push
mov
mov
pop
nop
enter
adc
or
roll
iret
add
popf
sbb
sub
xor
scas
and
mov
jno
adc
dec
sahf
add
nop
dec
mov
jnp
pop
outsb
test
test
cmpsb
fadd
add
push
push
test
stos
dec
cmp
add
mov
lock
jb
mov
mov
aad
add
jmp
cmp
rcll
xchg
out
adc
iret
jns
je
div
mov
repnz
in
iret
mov
scas
cmp
arpl
out
xor
rcrl
cmp
fistps
push
aad
mov
xor
lods
adc
cli
xor
xchg
mov
jmp
daa
gs
xchg
fs
sbb
int
fcoms
lcall
decl
in
cmp
arpl
xchg
push
cmp
fcoms
aas
mov
push
daa
xchg
cmp
sub
jp
jbe
lcall
out
imul
xor
stos
jae
sbb
add
cmp
mov
test
pop
call
fwait
call
xchg
jne
xchg
mov
popf
jae
mov
insb
clc
popf
loop
stc
dec
rorl
out
jnp
fs
mov
scas
loopne
mov
shl
lahf
mov
mov
pop
mulb
cmpsl
cmp
mov
out
int
xor
stc
mov
lret
mov
repz
outsb
xor
std
out
mov
xor
sub
xchg
mov
cld
mov
je
sbb
stos
outsb
mov
cmp
and
nop
jmp
mov
inc
bound
aam
cmp
into
cltd
jns
jecxz
xor
mov
into
push
lret
pop
dec
inc
setge
jge
outsl
add
out
cmpsb
pop
out
dec
adc
mov
clc
movsl
aam
leave
aad
ud0
mov
pusha
mov
jne
incl
push
test
lods
sbb
xor
shrl
adc
push
dec
xchg
and
cmp
in
mov
shrb
pop
test
xchg
sbb
inc
cmp
jmp
lods
inc
out
jmp
addl
addr16
xchg
incl
sub
dec
jae
les
inc
lods
dec
xor
sti
aad
dec
pop
xor
and
xchg
xchg
in
pop
es
mov
pop
mov
orb
mov
ds
mov
mov
pop
repnz
fidivrs
or
sti
jg
sub
test
sti
jp
shrl
mov
fcoms
push
xor
outsl
mov
pushf
outsb
push
push
mov
outsb
and
imul
ljmp
push
push
outsl
sub
add
popf
shlb
js
lods
pop
dec
ds
pop
mov
jge
adc
lahf
imul
cmpsl
fsts
bound
es
imul
test
adc
jle
sbbl
push
adcl
js
or
nop
push
stos
lods
imul
imul
aam
or
cmp
xchg
sbb
inc
inc
xchg
sbb
ljmp
inc
mov
add
es
mov
cmp
push
pop
in
mov
mov
iret
rcrl
mov
gs
clc
rclb
adc
gs
mov
mov
pop
fistpl
push
aas
mov
cld
inc
sbb
xchg
pop
sub
xchg
scas
xchg
das
sbbb
push
imul
aaa
xchg
inc
nop
test
cmp
cmp
and
fstpl
jnp
dec
std
cld
ss
cmp
das
sub
insl
and
inc
nop
jg
shll
jno
fsubl
jecxz
lea
push
pop
and
xor
jp
repnz
gs
lcall
xor
xchg
and
aaa
in
xor
imul
and
xchg
popf
mov
test
mov
xchg
loopne
pop
fiaddl
add
sbb
std
adc
dec
lods
int3
mov
or
sar
jo
lcall
test
push
sbb
xchg
popa
mov
mov
mov
int
xchg
mov
test
lods
mov
div
mov
push
mov
bound
sbb
sar
mov
adc
push
ss
pop
add
jae
cld
daa
scas
pushf
fsubrl
sub
mov
jge
into
jle,pt
es
push
xchg
dec
fwait
mov
lods
outsb
jecxz
pop
push
js
fsubl
push
pop
int
jb
movsl
cli
add
in
les
inc
xchg
outsl
or
inc
and
jns
jnp
out
in
push
dec
nop
adc
xchg
lahf
out
daa
mov
ficoms
rcrl
cmpsl
lret
cmp
sti
mov
adc
push
in
cmp
cs
mov
nop
cmp
mov
cs
pusha
out
cli
pop
mov
add
int
sbb
into
rcl
jmp
mov
xchg
lock
sbb
cmp
daa
int
shrl
push
daa
out
lock
inc
sbb
cmc
push
aaa
fstl
mov
sub
mov
jl
sub
jno
loopne
cmp
mov
mov
xchg
adc
add
js
ss
pop
fldt
inc
scas
mov
cld
neg
jle
dec
gs
mov
sahf
mov
loopne
dec
aam
not
mov
and
nop
mov
aas
movsl
jb
or
in
push
push
imul
jns
or
or
bnd
cmp
nop
adc
dec
xchg
test
mov
inc
add
fcmovu
cmp
imul
movsl
xchg
loopne
adc
dec
dec
les
arpl
and
or
push
insb
mov
leave
lcall
inc
imul
and
mov
sahf
enter
cs
sbb
imul
xchg
mul
add
cmp
nop
push
pop
lds
add
ret
gs
shrl
cmc
xchg
ds
sbb
fcmovu
out
cwtl
xor
pop
jbe
push
adc
addb
pop
call
shll
mov
std
or
mov
mov
lret
mov
mov
mov
rorl
sub
pop
lahf
pop
mov
inc
int
leave
ret
push
aam
inc
xchg
xlat
dec
cmpsb
shll
mov
jl
jo
xchg
aam
jns
lods
jo
insl
xlat
adc
pop
inc
jnp
cltd
xorb
outsb
fwait
call
fincstp
push
pusha
ja
xor
addr16
push
sub
or
mov
push
cmp
or
ja
dec
pop
nop
addl
add
fisttps
mov
shlb
repnz
xchg
add
add
pushf
or
popw
lods
mov
inc
cltd
mov
pop
jle
inc
call
xor
jo
std
pop
cs
mov
arpl
les
sub
sub
add
bswap
pop
cmp
div
in
xchg
jmp
jecxz
add
add
mov
dec
in
fdivrl
daa
lea
imul
sub
int
int3
dec
out
mov
xchg
sbb
pop
fisttpl
cmpsl
push
cld
in
js
aad
cmp
mov
fdivr
and
in
add
lock
lods
jbe
dec
dec
cmp
arpl
add
push
rcl
es
loope
pop
mov
shll
sbb
adc
jbe
push
fwait
xchg
pop
mov
je
fpatan
dec
and
cli
push
sub
sahf
sub
jns
mov
mov
xor
cmpsl
test
popf
push
mov
jge
in
les
dec
inc
lods
xor
xor
sahf
flds
in
inc
in
sbb
sbb
jns
fcoml
cmpl
int3
pop
xorl
lcall
add
or
cmp
mov
dec
fisttps
push
js
mov
fdivs
jp
das
cmp
aad
test
or
test
mov
ret
mov
daa
lret
nop
sbb
inc
inc
aaa
pop
ss
or
sbb
aas
in
sub
inc
shlb
into
dec
sbb
jo
xor
jbe
lahf
stos
and
pop
and
js
cmp
jb
push
mov
hlt
lock
xchg
scas
xor
and
push
and
lahf
push
mov
loopne
jle
mov
mov
lcall
ss
add
cmpsl
imul
sub
xor
cwtl
enter
into
xchg
fxch
xchg
insb
lods
adc
pushf
cli
xchg
daa
leave
mov
sub
loop
sbb
push
or
cltd
aas
mov
jmp
stos
mov
dec
out
xchg
push
pop
push
and
clc
mov
push
sub
subb
push
and
and
jl
mov
dec
and
je
cmpsb
sbb
xchg
stos
mov
sub
fdivrl
das
inc
xor
cmp
sub
sbbb
clc
xlat
cmp
and
adc
out
bound
push
shll
dec
dec
pop
cmpsb
jne
lock
dec
arpl
inc
fsubrs
imul
sbb
insb
adc
mov
and
das
mov
out
jg
scas
mov
popa
por
ja
adc
push
mov
sub
pop
push
repnz
imul
dec
jge
repz
sub
sahf
sbb
divl
cltd
inc
cmp
movl
pop
and
xor
testb
rorl
fisubrl
mov
add
sti
mov
xor
mov
gs
jmp
movl
shll
ret
push
pop
inc
push
jg
pop
and
and
sbb
xchg
dec
pop
sbb
int3
aam
icebp
mov
dec
in
sarb
sub
add
sub
dec
cmpsb
pusha
xor
mov
adc
push
mov
jnp
xor
mov
lret
mov
mov
scas
repnz
push
or
and
push
inc
popa
pop
add
sarl
faddl
adc
int
xchg
jg
mov
mov
movsl
push
fildl
and
mov
jecxz
in
test
push
and
je
jo
jb
aaa
pop
out
mov
mov
rcrl
sahf
jne
stc
popf
jo
cmp
loope
pop
sbb
psadbw
jne
xlat
sbb
fwait
popl
shll
lods
mov
jg
push
jp
popf
cwtl
xchg
jbe
test
adc
mov
sti
adc
fiaddl
cmp
pop
frstor
mov
mov
xor
jecxz
pop
mov
cwtl
lods
addr16
ret
adc
cmp
pop
adc
test
rcr
call
imulb
jo
dec
jl
jbe
xor
mov
xchg
mov
in
hlt
pop
js
loope
cs
cld
je
lahf
out
mov
inc
cli
dec
scas
lods
into
shlb
push
lea
and
mov
fistl
sub
sarl
cmp
repz
mov
push
mov
stc
pop
pop
jb
or
shll
out
mov
xchg
mov
std
repnz
mov
or
imul
daa
push
in
fadds
sbb
aad
add
sub
lods
loopne
pop
hlt
scas
repz
cs
mov
sub
jle
mov
insb
mov
imul
int3
xchg
ror
inc
xor
jns
sub
in
out
outsl
push
jmp
sub
mov
inc
jle
mov
pop
lcall
inc
aas
cmp
inc
mov
cld
shll
andl
xchg
add
shlb
push
cmp
or
lret
fiaddl
jo
jno
pop
pop
or
pop
dec
call
in
sarb
insl
sub
in
in
fldt
xor
mov
xchg
jl
gs
jge
sub
ljmp
mov
lret
lret
dec
jbe
adc
adc
ds
push
add
mov
xlat
data16
pushf
mov
push
in
loop
rcrb
enter
roll
cs
addb
das
pusha
fsubrp
ret
ja
xor
fs
xchg
xchg
or
icebp
xchg
jge
das
add
fcomps
rorl
mov
mov
or
stc
filds
jmp
jo
add
enter
out
test
lds
push
mov
jl
and
jb
sbb
lds
or
jns
dec
ss
xchg
add
shlb
cld
nop
lods
mov
and
sub
test
ljmp
dec
push
jae
mov
popf
xchg
lcall
fsubrl
push
and
imul
jo
les
in
dec
pop
adc
push
mov
xchg
ds
push
das
call
imul
pop
int3
xorb
or
dec
mov
fiaddl
mov
test
pusha
test
cmp
xchg
jae
stc
and
fldl
test
ljmp
inc
sub
pushf
xchg
in
std
aam
cwtl
test
insb
or
add
ja
pop
shll
mov
in
cli
mov
cmp
rcr
dec
je
cmc
scas
inc
pop
cmpsb
std
data16
xchg
add
mov
outsb
jb
data16
adc
pop
cmp
js
decl
sarl
cmp
jns
add
xchg
sti
mov
pop
or
xchg
push
mov
shl
callw
lret
subl
rcll
addl
pop
repz
jmp
inc
mov
stc
out
push
mov
movsl
icebp
mov
sub
push
cmp
std
sbb
lret
xchg
inc
jne
dec
jmp
fidivrs
lods
cld
test
lret
dec
in
insb
insl
mov
sbb
add
push
push
mov
pop
xor
jbe
dec
std
ret
inc
jo
arpl
or
shrl
fadds
aam
out
subb
je
mov
imul
dec
cmpb
mov
test
cmpsb
test
mov
inc
sub
enter
push
mov
sbb
and
push
aam
push
cmpsl
iret
rcll
das
call
ljmp
aas
les
inc
nop
ss
push
pop
add
repnz
sub
stos
das
or
mov
stc
add
cli
leave
idivl
or
mov
push
ljmp
jbe
out
hlt
pop
mov
add
fsub
pop
lock
fadd
or
mov
hlt
push
xor
push
mov
sbb
icebp
in
lds
iret
loope
call
stos
push
pop
inc
fadds
popa
hlt
mov
cmpsb
mov
xchg
mov
sbb
mov
dec
sbb
xchg
mov
xchg
lds
test
jg
scas
adc
xchg
lret
xor
sub
leave
inc
cmp
stos
je
inc
fmuls
lods
dec
sbb
pop
pop
pop
data16
add
jnp
xchg
mov
push
dec
mov
into
push
sub
adc
inc
jmp
leave
push
shl
push
insb
pop
mov
mov
pop
sub
es
sbb
xchg
or
inc
test
xlat
mov
stos
push
aas
cmpsl
rcrl
sahf
cmpsb
adc
mov
pop
fcmovbe
sub
ljmp
shlb
xchg
cmpb
jl
es
enter
daa
inc
cmpsl
jb
mov
insl
shrb
hlt
cltd
xchg
stos
mov
sub
xchg
xor
push
pop
mov
dec
inc
pop
inc
xchg
jg
or
mov
jae
es
inc
lcall
pop
mov
xor
push
lahf
jle
icebp
mov
mov
fcmovb
nop
mul
dec
mov
pop
ret
loopne
sub
adc
sbb
stos
jns
aad
cs
out
mov
cmp
xchg
push
iret
jo
jb
jno
push
mov
filds
jmp
inc
cmp
xchg
cld
inc
clc
push
out
cmpsb
cmpsl
test
mov
outsl
outsb
fldcw
xor
xchg
movsl
imull
xor
popf
jnp
mov
mov
dec
jl
push
jnp
sub
mov
loope
jle
stc
or
cmp
push
std
cli
popa
testb
daa
add
push
xlat
jns
dec
mov
cmp
jne
imul
pushf
idiv
jge
mov
ja
cmp
mov
aas
repnz
push
outsl
push
lcall
std
mov
addb
xlat
sti
mov
jl
sub
push
or
or
xchg
dec
adc
sbb
xchg
xchg
out
push
pop
sarl
dec
sbbb
fisubrs
cli
jge
fnsave
jae
jp
fldl
jns
xor
inc
adc
scas
push
sbb
dec
in
pop
jb
addr16
data16
ljmp
mov
adc
fadd
jno
scas
insl
out
sbb
mov
jne
aad
jmp
mov
iret
mov
xchg
push
add
movsl
mov
inc
outsl
push
ret
add
in
add
notl
pop
ret
push
mov
adc
leave
fstp
jmp
or
mov
adc
xlat
jg
clc
adc
dec
add
mov
mov
es
std
jp
ror
fs
insl
dec
cli
push
sub
mov
ret
inc
fldenv
repnz
nop
nop
sbbl
dec
rorl
int3
xchg
aam
dec
cmp
shll
fucom
dec
popf
scas
mov
addr16
repz
mov
std
or
test
xor
das
push
push
push
pushf
xchg
stos
or
cmp
lds
jmp
shll
popf
inc
sub
jbe
sbb
das
scas
sbb
mov
and
mov
testl
mov
mov
dec
inc
pop
and
inc
cwtl
jle
pop
xchg
add
dec
dec
adcl
pop
pop
adc
divb
mov
fmuls
push
ret
xchg
pop
pop
sub
sub
addr16
test
xor
xor
in
pop
add
push
movsl
mov
shrl
mov
push
inc
dec
lds
push
xchg
push
add
sub
push
adcb
repz
andl
mov
inc
hlt
xchg
xor
xchg
and
sbb
xor
dec
nop
push
cmp
jmp
out
loope
dec
and
push
sub
hlt
cmpsl
movsl
mov
outsl
fbld
xor
inc
jbe
sbb
hlt
mov
and
xchg
rdmsr
xor
and
adc
mov
ja
pop
push
mov
pop
fisttpll
es
nop
jle
loope
ds
mov
jo
or
or
push
movsl
cltd
xchg
mov
push
decl
int3
loopne
push
xor
sub
ss
add
mov
lahf
and
ss
xchg
inc
or
jno
sub
jecxz
mov
push
call
repz
xchg
xchg
mov
aaa
movsl
sti
jle
ja
add
call
addr16
bnd
cld
or
data16
cmp
enter
dec
xor
inc
xchg
mov
loop
inc
pop
loopne
cmc
jl
fistl
push
fwait
xchg
jo
inc
or
movl
imul
pushf
inc
call
xchg
jns
lcallw
repz
outsl
pop
pop
addr16
sbb
xor
aad
fmuls
push
pusha
fsubs
mov
rcr
mov
iret
and
call
testb
call
xchg
inc
jnp
inc
cmp
rcr
pop
jecxz
mov
mov
stc
aas
push
fsts
pop
cmp
in
xchg
pop
rorb
sub
pop
lret
add
cs
stos
dec
pusha
aam
lods
mov
arpl
lahf
in
push
mov
inc
loop
movsb
cld
cmp
jmp
pop
out
and
int3
sbb
mov
sarl
push
xchg
and
inc
and
and
xor
and
mov
cwtl
nop
mov
or
bound
ds
lea
push
addb
or
inc
repz
cmp
and
in
mov
mov
inc
nop
test
out
jo
xchg
popf
add
or
arpl
pop
push
popa
pop
inc
mov
dec
or
pop
out
xor
mov
stos
jne
jbe
xchg
jg
mov
cmpsb
shrb
pminsw
pop
shlb
pop
adc
fidivrl
mov
xchg
mov
clc
pop
push
dec
pop
push
fidivrs
cli
jecxz
push
mov
fwait
adc
inc
xchg
or
mov
adc
loopne
push
mov
sbb
roll
or
shll
movsl
out
add
sbb
aas
xchg
dec
shll
add
adc
pop
mov
jmp
out
mov
mov
cltd
mov
loope
inc
clc
cmp
daa
int
or
cltd
div
into
sbb
mov
pop
aam
or
push
das
sbb
cmc
mov
insl
shll
mov
fwait
xor
iret
cmc
jne
xor
sub
sbb
test
inc
jns
je
enter
pop
mov
push
cwtl
pop
add
or
xchg
shll
fwait
lcall
jne
aam
mov
call
sub
out
rorl
shll
scas
inc
testb
mov
imul
pop
jp
pop
mov
cmc
pop
and
adc
mov
pop
in
xchg
fcomp
shlb
sub
stos
imul
mov
or
push
dec
divl
js
lahf
pop
jno
or
adc
cmp
out
rolb
inc
cli
xor
scas
sub
ret
movsb
inc
lock
inc
stos
hlt
rcrl
adc
in
enter
inc
cld
mov
xlat
jle
cs
cmp
jecxz
ret
sbb
pop
sbb
cmpsl
sub
jns
cltd
mov
jle
addr16
movsl
int3
push
inc
xchg
pop
dec
or
popf
data16
xor
addr16
int3
mov
mov
jns
pop
fs
les
mov
mov
stc
cmpsb
ljmp
jo
xchg
jne
and
dec
dec
sbb
ljmp
ret
inc
cmp
dec
pop
mov
call
mov
push
xor
push
inc
cwtl
ret
inc
mov
add
ret
cld
roll
inc
adc
jmp
rcll
fisttpl
jbe
dec
ljmp
lock
pushf
xor
dec
sbb
orl
jmp
dec
xchg
push
xchg
cli
pop
pop
iret
dec
xchg
pop
sar
mov
ror
jmp
and
in
jp
sub
and
addr16
pop
xorb
jmp
scas
inc
pop
push
aas
test
or
aas
js
shl
out
aad
and
and
repz
pop
fiaddl
xchg
mov
dec
enter
lds
or
fidivl
xchg
lcall
imul
mov
loope
imul
lcall
int
enter
test
test
ss
clc
mov
jne
idiv
outsl
add
int3
orl
dec
jmp
fstps
mov
dec
les
adc
dec
sbbb
cltd
mov
xchg
mov
pop
lds
mov
sbb
cwtl
icebp
movsb
sub
pop
mov
lea
adc
rcrl
xchg
mov
mov
aas
adc
bound
cmpl
cmp
je
inc
sub
fdiv
push
outsl
pop
test
inc
jp
fstpl
loopne
leave
flds
or
pusha
jbe
clc
ds
mov
cmp
lods
cmp
in
push
pop
addr16
push
push
jmp
sub
call
mov
mov
jnp
hlt
inc
pop
jne
sub
fs
cld
sahf
inc
scas
sbb
push
inc
out
jmp
test
pop
adc
pop
shlb
adc
in
add
sub
cmpsb
into
jne
sbb
push
push
pusha
pushf
push
lds
loope
fidivrs
cmp
add
pop
pop
daa
in
xchg
xchg
addr16
rclb
jl
or
push
call
dec
cs
popf
je
cmp
inc
mov
or
cmp
out
or
inc
or
mov
push
lods
mov
into
dec
mov
mov
mov
lcall
push
sub
aaa
and
aad
jno
pusha
mov
xor
outsb
out
sti
shll
lcall
jmp
insl
arpl
aam
ret
or
adc
mov
xchg
stos
enter
xchg
xor
xchg
repz
rcl
lcall
lret
and
dec
pop
mov
and
addr16
xorb
cmpsb
xorb
pop
aas
data16
jg
movsb
mov
sub
add
sub
inc
fstl
aam
das
cltd
fs
imul
push
loope
push
pop
imul
aad
mov
outsb
adcl
add
push
dec
lcall
jl
enter
dec
pop
sub
test
aam
test
rcrl
or
mov
mov
mov
cld
dec
and
std
push
sub
adc
hlt
jl
xchg
sahf
roll
bound
mov
sahf
mov
sub
test
shlb
xor
inc
and
js
popf
inc
sub
out
loopne
out
cmpsb
add
dec
adc
shlb
stos
ds
stos
dec
xchg
jbe
mov
xlat
fnstcw
jb
push
std
jbe
xchg
addl
mov
mov
mov
mov
dec
and
push
cltd
sti
dec
popa
mov
sub
sbb
in
shll
stc
mov
ret
or
arpl
mov
push
inc
out
xchg
sbb
xchg
xlat
pop
mov
les
pushf
and
aad
fsubs
sub
sahf
mov
repz
cmc
sbb
aam
xchg
dec
into
repnz
lahf
sbb
inc
cltd
xor
or
dec
inc
push
int
adc
dec
xchg
push
ds
mov
lahf
add
out
dec
adc
daa
sti
sbb
imul
push
stc
or
push
cltd
inc
addr16
mov
sahf
mov
mov
pop
or
xchg
add
jmp
and
jb
and
xchg
in
iret
insb
add
or
dec
adc
scas
jnp
leave
push
mov
or
or
cld
cmpsb
dec
jnp
fnstcw
inc
or
pop
pop
push
repz
or
mov
dec
mov
ss
dec
cltd
xor
mov
sbb
fcomp
ret
push
push
jb
js
jmp
rolb
and
mov
xor
outsl
xchg
sahf
xor
push
lret
loopne
xor
mov
mov
jl
xor
out
pop
jle
cmpsb
lock
mov
sbb
cwtl
gs
cs
das
and
negb
mov
mov
insl
sbb
lret
pusha
add
pop
cltd
lods
dec
sbb
xor
pushf
mul
movsb
pop
sahf
add
out
scas
popf
pop
loop
stos
dec
sub
cmc
movsl
pop
or
cmp
inc
repnz
enter
scas
mov
or
icebp
sub
and
mov
popa
jae
pop
push
loopne
int3
mov
cmpsl
mov
enter
jge
movsb
cmp
inc
ret
cmp
ret
or
ret
dec
outsb
and
add
xor
mov
mov
ror
subl
pop
dec
and
xchg
inc
mov
movsb
sbb
mov
xor
in
push
bound
pushf
outsb
push
add
jmp
loopne
jae
push
mov
enter
jb
mov
dec
repnz
cmp
xlat
js
xchg
mov
pop
xlat
or
xor
loope
mov
or
lods
into
jmp
jge
cmp
outsl
outsl
cmp
lea
insl
pop
ret
adc
cmpsl
mov
jecxz
lahf
cmp
gs
dec
xor
ljmp
icebp
sub
out
xchg
das
pop
cmp
insl
out
rorl
notl
sbb
push
fs
aad
jg
aam
add
inc
jmp
mov
inc
nop
mov
dec
loopne
jnp
imul
sbb
rcll
cmpsb
clc
add
inc
mov
test
lcall
inc
adc
adc
jb
dec
stc
xor
xor
jge
cwtl
ret
movsb
or
fstpt
pushf
push
xchg
out
test
jno
mov
sub
push
sbb
mov
and
add
and
xchg
divl
mov
fucomp
adc
aaa
sbb
int
mov
xchg
add
xchg
xchg
lods
cmp
push
aam
pop
pop
jnp
push
xorb
mov
out
push
xchg
sahf
mov
insb
std
pop
mov
lods
mov
push
lea
jle
xor
mov
sbb
sub
fldcw
cmp
das
push
fsubs
popa
and
aam
push
cmp
cmpsl
jp
std
mov
arpl
lahf
fwait
mov
push
adcb
aaa
lock
add
xor
ret
push
xorl
outsl
and
adc
fmull
popf
cmp
clc
cmc
jb
decl
push
dec
test
inc
fnstsw
shlb
addr16
jmp
sub
cmpsb
roll
bound
mov
aam
rcrl
sbb
fcoms
test
xchg
mov
sbb
lods
iret
add
shll
xor
pop
movsb
icebp
lock
icebp
std
sti
xor
testl
and
xor
daa
xlat
lahf
je
inc
xchg
leave
sbb
inc
push
or
aam
xlat
pop
mov
xor
sub
push
aad
sub
inc
arpl
sbb
xor
dec
inc
inc
dec
cmp
repz
lea
cmp
imul
inc
in
xchg
stos
push
pop
or
jnp
imul
aas
mov
pop
sub
movsl
mov
stc
jmp
sbb
sbb
icebp
xor
push
fistpll
icebp
adcb
mov
jbe
or
in
dec
push
pavgw
xor
lret
test
or
shlb
mov
movsl
shl
aam
outsl
out
ja
mov
mov
jnp
std
or
dec
sub
inc
jnp
push
in
sbb
popf
repz
mov
sbbl
orb
or
and
xor
inc
js
cs
in
pop
add
dec
add
nop
pop
jp
loop
pop
popf
push
pushf
test
push
mov
enter
push
mov
fmul
xchg
and
or
pop
jp
xor
aam
int
push
insb
and
jne
mov
into
pop
aaa
dec
mov
mov
testl
adc
pop
loop
fmul
popa
shrl
enter
in
fdivrp
pop
mov
fistl
inc
testl
sub
cmpsl
mov
jge
scas
mov
out
mov
pop
stos
and
repz
adc
and
pop
jp
mov
dec
jp
stos
pop
loopne
pop
push
mov
mov
sbb
hlt
mov
aas
loop
and
lock
jne
or
aad
cltd
mov
xor
out
fsubrs
push
mov
adc
fistps
mov
inc
ret
ljmp
mov
cs
fdivl
push
xchg
aad
mov
movsb
mov
mov
add
cmp
cmpsb
data16
pop
bound
insl
aam
xchg
mov
adc
mov
push
loope
or
cld
or
jmp
stos
in
inc
mov
mov
cmp
fildll
loopne
adc
lock
add
inc
int
sub
add
cmp
jmp
loopne
mov
out
cmc
aam
mov
into
xor
lds
jg
push
or
mul
hlt
orl
and
das
adc
or
add
mov
xchg
sbb
fisubrl
push
outsb
xchg
ds
push
xchg
insb
shrl
fists
fdiv
inc
adc
ss
mov
ret
flds
idivl
lret
shrb
jl
xchg
leave
jne
ss
inc
push
push
xor
nop
int
out
xor
or
or
dec
into
mov
stc
test
mov
cmp
mov
adc
int
jno
test
fldt
cmp
ljmp
jnp
movsb
sbb
insb
adc
shlb
imul
mov
mov
cmp
mov
mov
mov
add
jb
jnp
rorb
adc
push
xchg
test
sub
jbe
fidivl
cmp
or
imulb
jg
pop
mov
dec
cmp
sbb
roll
loopne
into
or
shrb
imul
lods
push
mov
enter
mov
xchg
mov
or
insb
mov
xchg
sahf
fisubs
jae
cwtl
inc
je
cmpsb
cmpsl
xchg
sbb
cli
ror
xchg
scas
cmc
jbe
ss
xor
sbb
mov
cmp
mov
enter
jmp
fs
out
xor
aaa
jns
int3
aam
jns
or
fimuls
lahf
inc
push
lods
int3
hlt
push
cmpsb
push
jecxz
sbb
add
repz
and
xchg
insl
and
cmpsb
fsubr
push
shrb
dec
jle
xor
add
push
inc
mov
insl
push
dec
dec
dec
jno
mov
mov
sub
xchg
adc
sub
je
lods
nop
and
cmpsl
xor
mov
es
je
movsl
inc
ficoms
push
pop
push
adc
mov
mov
dec
lahf
sub
loopne
dec
ss
lahf
xchg
push
add
pop
dec
outsl
andl
dec
cmp
aaa
dec
or
mov
pusha
daa
daa
iret
in
cmp
xchg
popf
sbb
in
cmc
dec
mov
inc
lahf
add
cli
aam
mov
test
ja
dec
repnz
insb
mov
or
sahf
or
mov
mov
and
mov
leave
push
sub
pavgw
je
xchg
loop
lahf
out
scas
adc
push
mov
push
iret
adc
scas
lods
inc
nop
sti
loope
subb
lahf
cmp
cmpl
aaa
cmp
pop
add
jo
mov
test
adc
nop
or
stos
test
sti
mov
xchg
sahf
xor
hlt
xchg
mov
sarb
daa
mov
sahf
jb
test
mov
sbb
inc
js
mov
add
mov
pop
or
sbb
stos
les
aam
and
push
lds
xor
jle
cmp
mov
or
clc
cmp
mov
dec
clc
jmp
mov
xor
lret
sbb
add
sti
test
arpl
subb
test
push
cmpsl
push
xchg
cmpsb
gs
mov
call
cmp
push
inc
push
iret
sub
dec
mov
xor
in
adc
sahf
decb
xchg
lret
test
jg
adc
fdivs
add
movsb
cmc
daa
adc
cmp
mov
inc
imul
mov
mov
testb
cmpb
sbb
add
out
out
mov
and
scas
adc
xor
stc
xchg
mov
adc
or
mov
or
or
imul
std
jmp
jae
pop
test
xor
scas
pop
in
xchg
mov
subl
pop
out
jecxz
jnp
mov
pop
pusha
scas
xor
cmp
add
insb
push
push
fsts
aaa
mov
lret
lcall
fnstsw
sub
xor
jg
push
jp,pt
insl
loopne
push
mov
mull
mov
xchg
fistpl
mov
inc
inc
in
sub
and
icebp
xchg
fsubs
pop
sub
ret
dec
shll
push
or
push
mov
inc
cwtl
mov
mov
sbb
mov
rcrb
sbb
or
lret
shl
jnp
adc
movsl
or
dec
test
dec
xchg
outsb
or
call
inc
jmp
push
sbb
adc
xor
xchg
mov
add
sub
lcall
adc
bound
outsb
or
inc
insl
jecxz
cmp
xor
les
rorb
push
inc
add
scas
mov
push
adc
pop
stos
inc
ss
out
outsb
push
and
std
pop
adc
ret
lea
xchg
jl
dec
sub
insl
mov
cmp
out
lret
pop
pop
add
mov
outsb
ficomps
movsb
cmp
inc
jge
xchg
xor
inc
add
int3
inc
push
push
test
lahf
cmpsl
fisttpll
and
cs
sbb
pop
mov
sbb
rolb
mov
scas
push
imul
jle
push
das
or
and
mov
sub
mov
popa
pop
adc
xor
push
push
out
cmc
stc
jle
adc
mov
mov
rorb
sbb
inc
xor
out
add
cmp
lods
adc
sub
add
and
fldenv
stc
adc
orl
jae
sub
adc
sbb
test
xor
push
movsb
enter
in
mov
mov
outsl
adc
dec
outsb
mov
sbb
cwtl
lock
mov
mov
out
mull
dec
rorl
je
dec
popf
test
mov
push
xlat
or
enter
inc
jecxz
js
mov
sbbl
xchg
pop
and
xchg
adc
ficompl
mov
ret
jp
out
test
dec
movsl
shlb
dec
sbb
loop
xchg
sub
imul
inc
lret
push
inc
or
mov
loop
in
fs
addl
out
xchg
mov
lcall
sbb
fwait
jg
bound
js
xchg
jnp
and
cmpl
pop
pop
mov
lods
lds
pop
outsb
adc
les
pop
icebp
enter
xchg
xor
pop
inc
mov
js
aam
idivb
lea
hlt
cmp
inc
push
adc
loopne
cmp
addb
aas
push
out
loopne
fnstenv
cltd
int
and
add
xchg
push
nop
out
sti
scas
add
aam
inc
adc
dec
lret
and
aaa
aad
andl
sub
out
jmpw
mov
out
add
fucompp
jno
push
mov
es
xchg
push
clc
out
ret
or
push
out
fnstsw
in
shlb
adc
std
add
mov
repnz
mov
fiaddl
xor
hlt
cmp
int
adc
lock
into
pop
in
int3
bound
mov
push
dec
push
fcmovnb
lret
lods
adc
dec
or
ja
push
incb
xor
mov
sti
pop
add
cli
imul
sbb
fwait
addr16
loope
adc
lds
or
xor
dec
sub
xor
xor
jge
xchg
js
hlt
push
andl
cmp
cmp
mov
jle
dec
push
daa
xchg
lock
lcall
dec
int3
int3
jl
push
mov
stos
jne
mov
outsl
jo
inc
sbb
stc
scas
gs
aad
test
jmp
jmp
ficomps
cwtl
pop
pop
adc
jnp
out
sbb
mov
dec
mov
nop
vucomiss
or
cmp
jge
insb
mul
xchg
mov
in
iret
push
push
jb
aam
mov
dec
sti
jb
addr16
sbb
sub
jnp
fistpll
or
mov
les
loope
cmpb
mov
push
cmp
je
and
add
outsl
lahf
insb
jg
repnz
sub
shll
fwait
loop
or
pushf
arpl
pop
lcall
push
cmpsb
sub
int3
or
inc
mov
pop
fstl
sbb
mov
cwtl
gs
div
sarl
push
andb
popf
dec
push
test
in
lea
lret
into
add
jne
lahf
loope
inc
push
cld
jno
add
mov
xor
mov
xor
push
addr16
dec
aam
inc
movsl
dec
sahf
mov
pop
movsl
adc
pop
pop
call
insb
cltd
pop
push
data16
jne
pusha
pop
adc
add
je
inc
in
scas
sub
mov
pop
adc
inc
aaa
in
pop
out
xchg
or
and
lods
out
dec
out
pop
jno
js
clc
or
inc
push
pop
shl
inc
xor
dec
sahf
lret
dec
fucomp
aam
push
sbb
imul
adc
cmpsb
in
stos
imul
mov
aaa
push
in
xchg
sahf
mov
ret
fisubrl
sbb
in
out
pop
clc
daa
inc
cmpsl
inc
cmp
in
outsl
popa
iret
mov
add
enter
divl
mov
xor
push
lock
stc
mov
jg
not
test
dec
into
inc
sahf
add
insb
inc
stos
movsb
jle
insl
int3
add
lcall
insb
ja
jnp
cwtl
mov
sbb
mov
cltd
mov
and
inc
sbbb
pop
popa
dec
mov
push
xchg
int3
push
fstp
jge
push
setne
xchg
out
int3
cmp
inc
out
int3
mov
jno
movsl
pop
stc
out
in
sbb
mov
rclb
xchg
loop
scas
in
adc
xor
jg
inc
rcrb
mov
adc
lcall
loope
mov
sbb
lods
lea
push
cs
and
pop
xchg
pop
cld
sub
pop
cmp
fbstp
and
push
stc
jb
cmp
iret
fdivrl
jecxz
or
test
sbbl
imul
adc
lahf
push
and
cmp
les
adc
leave
ds
fsubl
mov
cmp
sahf
stos
lods
sahf
dec
cld
lods
jg
scas
cmp
fsubp
mov
sti
cmpsb
out
mov
and
js
and
movsl
popa
and
mov
aas
mov
out
int
pop
mov
lcall
jle
cmc
pop
js
jb
popf
jmp
mov
stos
repz
fs
jnp
gs
and
mov
or
divb
movsb
pusha
popf
fdivl
cwtl
out
in
push
push
ret
outsb
jo
ljmp
mov
ret
or
inc
pop
dec
xor
pop
arpl
mov
int
add
clc
inc
test
aaa
xchg
icebp
inc
aaa
push
or
shrl
fcoml
into
pop
mov
jnp
mov
add
adc
cmpsb
add
test
aad
inc
xor
shlb
and
pop
mov
jmp
add
gs
xor
hlt
cli
inc
pcmpeqw
scas
fldl
and
cld
xor
sbb
sbb
movsb
in
call
pop
test
aad
rolb
mov
xor
xchg
lea
imul
popf
into
out
sub
cltd
dec
add
mov
sbb
jns
xor
aas
iret
lret
mov
sub
movsb
sbb
stc
rcll
xchg
popl
out
jl
cmp
int3
loopne
jbe
add
icebp
push
scas
pop
jge
xor
add
int3
aad
ljmp
dec
lds
idivb
filds
mov
cmpsl
dec
jnp
sbb
dec
sbbl
xchg
sbb
dec
jp
push
scas
jg
mov
xchg
xchg
aaa
nop
mov
xlat
ljmp
lret
push
incb
mov
xchg
repnz
xor
ret
push
mov
inc
jecxz
fdiv
cmpsl
push
cwtl
js
sub
inc
sub
mov
inc
imul
adc
std
imul
lds
hlt
xor
movsb
test
outsb
fcomip
mov
and
jno
or
lds
loop
adc
pop
push
or
add
xchg
in
sub
ds
das
clc
mov
or
int
sbb
inc
ror
loop
jo
paddusb
push
cmp
scas
mov
or
scas
out
ret
lret
cltd
cmp
dec
sbb
dec
imulb
push
fs
adcl
idiv
fldenv
pop
jns
fadd
sbb
add
fdivr
mov
dec
mov
cmp
rolb
cld
cmpsl
and
push
iret
jo
xor
hlt
xor
and
pusha
jbe
mov
lock
not
and
inc
pop
pusha
int3
mov
jne
pop
push
ljmp
jg
jb
out
stc
or
pop
xorl
push
sbb
mov
lods
stc
fsubl
push
or
int3
cwtl
add
loop
lcall
sub
inc
sub
jecxz
daa
adc
dec
sub
cmpsl
jae
fwait
jb
mov
mov
cmp
mov
into
test
ljmp
in
lock
mov
aaa
inc
push
fsubr
or
divb
sbb
mov
mov
pop
mov
or
xor
out
repz
insl
mov
test
jge
ret
or
push
mov
ds
xchg
xor
xchg
jge
cmp
inc
cld
scas
inc
fisubrs
jno
dec
push
xor
aad
clc
cmp
and
pop
push
jl
arpl
lock
das
ret
loop
pop
loop
notl
xor
adc
adc
push
lods
mov
stos
ss
sub
and
xor
mov
or
ljmp
mov
cltd
repz
jecxz
push
daa
pop
ficomps
pusha
and
sbb
sub
fiaddl
lea
jb
lea
sbb
add
mov
mov
inc
js
mov
dec
lods
paddsb
in
pushf
mov
out
cmc
jo
mov
push
xor
cli
or
xchg
push
sbbl
cmc
lcall
adc
mov
or
sub
ds
adc
pop
jno
dec
adc
and
xchg
pop
add
xor
aad
cmpl
cmp
out
mov
xor
push
imul
cmpsb
bound
sub
sbb
daa
arpl
jns
pop
bound
mov
or
int3
das
or
xlat
and
movsl
sarl
adc
mov
or
add
les
aas
push
fcomps
fisttpll
dec
cmp
stos
push
jnp
dec
mov
dec
sub
hlt
aad
xorl
lods
in
aam
repz
mov
mov
push
je
or
insl
loopne
stos
inc
sub
mov
shlb
filds
xor
imul
pop
and
dec
mov
leave
daa
mov
dec
xor
dec
mov
pop
sub
lds
call
ret
adc
out
outsb
popa
ljmp
adc
aaa
loope
xor
lret
dec
es
std
faddl
adc
mov
jecxz
outsl
out
jmp
or
add
mov
xchg
js
adc
inc
pop
cmc
jmp
mov
das
add
stos
jl
xlat
leave
add
push
pop
mov
subb
adcb
push
pusha
xor
xchg
mov
cmp
mov
pop
sub
push
xor
lea
repnz
fdivs
add
orl
push
mov
cld
xchg
mov
lds
push
cmp
repz
in
sbb
mov
es
rcrl
xchg
daa
jg
leave
sar
cmp
out
clc
popa
push
rorl
xor
push
xchg
jnp
addr16
or
xor
push
shrl
sbb
lahf
loopne
xchg
std
jne
dec
cmp
in
or
pusha
rcrb
sbb
repz
cmp
imul
outsb
add
ss
lods
push
jnp
cli
and
loopne
xor
clc
call
sbb
xchg
test
add
pop
dec
cmp
loope
xor
call
rcrb
fimuls
aam
xor
mov
pop
cli
pop
xor
lea
mov
mov
jmp
mov
mov
imul
push
adc
testl
aas
sub
or
int3
ror
pop
popa
es
adcl
mov
insl
jmp
iret
jbe
dec
dec
fisubl
es
pop
dec
mov
lods
add
pop
xchg
push
adc
xchg
xlat
daa
iret
mov
cltd
call
mov
mov
pop
dec
pop
fimull
loope
scas
lret
add
cltd
xchg
ret
dec
xor
dec
fdivrl
ss
cmpl
pop
clc
stos
cmp
xor
pop
out
inc
push
jo
jae
adc
sbb
clc
push
out
nop
fwait
or
hlt
stos
mov
add
xchg
sbb
push
test
jne
push
dec
scas
push
push
call
loope
out
cltd
sub
or
and
sarl
subl
aad
inc
inc
xchg
test
and
stos
test
pop
pusha
out
dec
mov
pop
in
clc
push
daa
icebp
bound
outsb
pusha
or
jmp
mov
cmp
fidivs
inc
lret
and
leave
mov
nop
push
test
into
pop
cmc
add
idivb
jbe
or
push
push
add
fcompl
rorl
subl
lea
pop
push
add
testl
and
fstps
mov
dec
sbb
adc
mov
orb
clc
adc
dec
loopne
pusha
mov
mov
jo
jb
pushf
xor
xchg
les
imul
and
lods
sub
xor
leave
sahf
testl
sar
lcall
stc
test
cmp
sub
pop
jp
das
orl
sbb
rorb
rdtsc
add
cmpsl
imul
inc
cwtl
add
repnz
xchg
mov
adc
dec
inc
add
sub
push
stos
lods
outsl
std
inc
lock
mov
pop
mov
jmp
adc
push
ss
push
in
lock
xchg
jmp
sbb
movsb
mov
xor
push
dec
inc
outsl
dec
daa
sbb
mov
gs
xchg
jns
test
repz
push
sub
add
scas
loope
daa
sub
or
aas
push
fld
and
mov
inc
add
sbb
adc
or
iret
push
push
cmp
dec
mov
sahf
inc
inc
mov
xor
sbb
jle
ljmp
aam
mov
cmpsb
dec
mov
add
movsl
loopne
mov
mov
mov
int
out
adc
sarb
push
pushl
iret
and
mov
icebp
incb
test
bound
or
lret
xchg
add
inc
aaa
jae
pop
sti
cltd
dec
mov
xchg
loopne
xchg
push
data16
loope
push
ds
jno
adc
es
into
lret
les
inc
cmp
lock
xchg
loope
adc
jnp
lahf
fisubl
inc
in
pop
outsl
xchg
push
pusha
cmc
in
push
and
imull
xor
cmpsl
inc
insl
aam
movsl
mov
sbb
sbb
add
mov
in
pop
or
imul
or
or
pop
int
cmpsl
mov
xchg
adc
cmp
rolb
clc
mov
xlat
ds
sbb
hlt
mov
fistpll
ss
cli
into
fisubrs
and
dec
adc
adc
out
add
in
lahf
lret
call
sti
inc
aas
loopne
mov
and
cmp
mov
or
stos
jge
pop
les
cwtl
lods
push
dec
mov
dec
fnstenv
jle
jg
push
mov
mov
mov
mov
adcl
xchg
aaa
and
loop
or
and
and
pop
adc
dec
jp
sub
test
lcall
shr
in
and
pop
inc
mov
lods
in
or
call
out
sub
and
nop
adc
das
cmp
push
fwait
out
pushl
add
das
fiaddl
fimull
mov
fnstsw
out
les
lea
ljmp
adc
sbbb
push
pop
cli
jg
nop
outsl
jecxz
les
outsb
cmp
lret
int3
mov
mov
jmp
inc
inc
js
hlt
xchg
xchg
in
loop
rsqrtps
add
adc
adc
cmp
movsl
xchg
xor
out
insl
push
rcl
shll
pcmpgtd
ljmp
mov
pop
dec
dec
js
sbb
dec
xchg
aad
adc
lods
mov
popa
inc
lds
and
add
scas
scas
lds
add
hlt
add
push
in
lea
scas
cmpsb
stc
pop
push
or
inc
js
ret
aad
insl
in
sbb
daa
and
lret
mov
add
nop
jns
or
out
push
jmp
movsb
fwait
cmp
pop
push
xchg
adc
push
sub
pop
cmpsb
sub
cmp
mov
mov
leave
aad
decl
test
add
sub
xor
xchg
lds
jo
adcb
push
test
aas
shll
repz
mov
xchg
call
mov
sbb
std
dec
fisubrl
inc
pop
mov
xor
das
mov
test
ljmp
jmp
jne
xor
adc
sarb
cwtl
sbb
cmc
add
mov
and
jne
cs
sbb
js
and
jecxz
adc
daa
dec
lahf
push
xchg
clc
push
pop
sbb
int3
push
inc
out
adc
mov
shll
test
sub
in
inc
xchg
cmp
xchg
std
jl
sbb
out
mov
out
aam
hlt
sbb
push
in
shl
insl
int3
ffreep
ficompl
ret
imul
jg
test
xlat
jb
pop
in
fmuls
mov
out
pop
ds
test
popf
lds
jne
int
data16
xor
clc
xor
pop
jmp
push
mov
stos
xor
pop
les
gs
negb
pop
pop
xor
out
rcll
push
and
mov
adc
mov
add
popf
jne
sub
in
dec
and
jg
repz
cmp
push
ja
mov
lds
frstor
in
lock
in
sti
mov
clc
xchg
push
arpl
fistpl
lret
pcmpeqb
adc
lret
in
jb
push
shll
negb
xor
fldl
imul
mov
arpl
mov
gs
test
insb
stos
clc
inc
in
add
addr16
movb
fcomip
push
mov
and
push
insb
je
rcl
sub
jecxz
or
pop
jo
imull
fsubr
push
xchg
fisttps
inc
inc
xchg
int
pop
aam
fdivs
pop
hlt
xchg
ja
fcoms
aas
mov
push
xchg
mov
mov
icebp
mov
push
xlat
jns
cmc
xchg
lahf
jo
leave
fnstenv
cmp
add
outsb
add
stos
and
outsl
or
out
fwait
test
rcl
push
push
mov
aaa
ljmp
mov
call
outsl
push
aas
lahf
in
les
mov
or
daa
dec
fdivr
inc
ret
outsl
scas
enter
fidivl
popa
add
lods
xor
mov
or
push
imul
sahf
xchg
ja
add
pusha
leave
mov
out
jmp
mov
add
push
jmp
scas
pop
call
pop
push
arpl
mov
icebp
fwait
popf
xor
mov
fs
lock
out
lret
ds
rol
extrq
jns
adc
jmp
xor
pusha
hlt
xchg
xchg
das
aas
mov
and
mov
mov
or
push
mov
pop
cs
scas
adc
das
pop
xor
mov
adc
pop
aaa
pop
inc
mov
adc
scas
xchg
dec
xchg
jno
insl
icebp
stos
cmp
mov
pop
pop
fdivrs
mov
lds
out
adc
push
sbbb
outsl
jmp
jns
xchg
cmp
or
push
push
mov
mov
test
pop
int
jne
lret
xlat
and
jb
dec
testb
andl
dec
xchg
push
cmp
inc
adc
aaa
addr16
popa
packuswb
test
jl
jp
xor
jge
inc
pushf
inc
psubq
movsb
mov
aaa
aam
add
stc
push
sub
shrb
aaa
idiv
aaa
adc
cwtl
xchg
pop
and
popa
leave
mov
fwait
sti
inc
les
addr16
jae
xchg
push
push
es
push
xor
pop
lcall
push
pop
pop
jecxz
and
jge
adc
clc
loope
xor
ret
out
inc
sbbb
sbb
dec
movsl
inc
ds
mov
pop
xor
adcl
cli
mov
std
xchg
pop
jb
adc
gs
pop
int
iret
mov
in
xchg
push
inc
lcall
inc
cmp
lret
jbe
pop
je
fucomip
and
xchg
push
mov
push
mov
push
jp
cwtl
sbb
sahf
pusha
cwtl
popf
push
jbe
mov
shll
cmp
mov
lahf
outsl
aas
scas
xchg
sbb
inc
xchg
xlat
jne
xchg
jne
test
xor
loopne
lods
int3
rcr
or
xchg
lcall
push
ret
push
mov
mov
jbe
cmp
das
sbb
mov
xor
enter
mov
jmp
mov
mov
loop
insl
sbb
inc
scas
xchg
xchg
jp
jae
mov
jp
aam
cmpsl
pushf
test
std
and
insl
inc
mov
arpl
push
mulb
or
sbb
call
and
xchg
jg
mov
jne
fisubs
xchg
jbe
mov
cs
cwtl
fimuls
jmp
xor
xlat
hlt
xchg
call
andb
adc
lods
enter
push
divl
inc
adc
cmc
xchg
add
popf
loopne
test
pop
adc
nop
mov
push
fiadds
xor
mov
sub
into
dec
mov
sub
mov
push
in
icebp
pop
or
rcll
lret
insl
or
scas
jle
aad
fistps
aas
xchg
cmpl
lock
adc
test
ret
xchg
pop
imul
xchg
or
cmpsb
pop
dec
mov
lretw
add
stos
cld
xchg
and
fs
stos
jecxz
ss
push
aam
mov
lds
cli
xchg
push
mov
sub
cmc
adc
pop
addb
ret
sarl
mov
movsl
push
push
repnz
ljmp
sub
repnz
sub
or
pushf
push
jle
and
dec
cmc
sbb
test
in
jmp
lretw
sbbb
pop
push
cltd
add
cmp
mov
aaa
sbb
adc
push
into
into
sub
loopne
lret
jmp
mov
mov
xor
pop
jle
push
popf
rcrb
cmp
movsb
popa
push
fmul
mov
dec
mov
ss
push
push
movsl
add
sub
jmp
add
cmp
mov
xchg
mov
sarl
inc
repz
cwtl
sub
mov
sti
imul
dec
inc
clc
xchg
fdivr
push
clc
jnp
jne
inc
bound
sbb
pop
fldt
xor
jecxz
out
and
loope
ss
out
arpl
inc
sbb
mov
pop
push
dec
inc
clc
lcall
std
in
pop
clc
in
or
mov
sub
push
mov
hlt
xchg
or
je
mov
mov
dec
repz
xor
imul
cld
stos
pushf
adc
in
int3
sbb
push
mov
cmpsb
xor
iret
or
add
movzbl
adc
mov
adc
or
mov
cmp
jne
sbb
cli
pop
iret
pusha
xor
lret
cmpsl
fs
insb
sub
shr
cmc
mov
fisubrs
lds
pop
xchg
inc
lahf
sbb
add
cmpl
rcrb
inc
in
cltd
ret
push
popf
xchg
lea
shl
xchg
xor
aas
das
adc
test
xchg
xor
xchg
xor
lret
sub
addr16
sarb
mov
popf
imul
and
mov
pop
ret
pop
loop
jno
loope
jno
or
mov
roll
pop
aaa
add
nop
push
or
sub
lret
mov
cli
inc
fmull
imul
push
dec
test
mov
and
jbe
or
pop
sbb
repz
lret
in
fwait
mov
jg
bound
rorb
pop
xchg
cmpsl
xlat
mov
gs
mov
stc
out
jns
fmulp
xorb
aaa
xchg
mov
push
icebp
mov
adc
cmpsl
sub
ljmp
pop
mov
es
or
imul
or
xchg
mov
je
jl
rcrb
iret
fmul
mov
xor
setb
push
loopne
outsl
or
iret
add
ficoml
cmp
test
sbb
cmp
inc
in
les
jl
popf
adc
cmp
push
nop
or
sbb
pop
mov
shll
xor
sar
sahf
repz
or
shl
daa
add
lods
jno
cmp
mov
mov
sbb
jmp
inc
adc
cmp
xlat
or
shll
repnz
push
add
pushf
subl
mov
popl
mov
stc
push
jbe
push
mov
fidivrs
cmpsb
sahf
cwtl
xchg
xor
push
out
out
or
xchg
dec
repz
ljmp
insl
test
cmpsb
sbb
cmp
xchg
cmp
test
add
imul
es
mov
movsb
sub
mov
sub
adc
jnp
mov
and
sub
js
in
lods
int
adc
test
push
dec
cs
dec
xchg
stc
inc
sbb
push
fmul
outsl
negb
xor
aas
into
dec
xor
sahf
xor
push
mov
cli
push
subb
sbb
fistpll
and
cmp
xchg
pop
scas
xlat
and
in
shlb
sub
mov
cli
push
sbbl
daa
inc
pop
mov
les
pop
nop
mov
jae
and
mov
ss
rorl
fisubs
out
xor
adc
test
pop
mov
test
ficompl
pushf
lcall
pop
outsb
mov
dec
pushf
xchg
aas
cmpsb
push
xchg
sub
or
sub
pop
sub
out
mov
mov
xlat
or
gs
fmuls
outsb
fisubrs
lock
pusha
inc
push
ss
push
mov
inc
pop
loopne
pop
test
mov
lea
mov
scas
in
xor
sbb
shrl
mov
fucomp
out
repnz
mov
pop
mov
repz
jg
dec
jecxz
insl
sbb
ljmp
xchg
inc
mov
neg
shll
mov
ret
lock
inc
inc
lahf
test
les
fwait
in
mov
fstpl
mov
cmp
and
jmp
jne
sbb
sub
dec
data16
cmp
lods
inc
and
sub
xchg
into
xchg
ret
xchg
lods
jne
jle
in
movsl
or
and
sbb
adc
iret
xchg
test
test
iret
cmc
ret
jp
push
xchg
adc
sbb
and
jle
xchg
mov
test
and
imul
cmp
das
jnp
aam
call
cmpsl
inc
stos
mov
stos
test
pop
shl
outsl
int
adcb
loopne
mov
sahf
pop
push
push
or
jg
lods
das
das
fsubrp
mov
insb
cli
adc
sub
dec
mov
or
xchg
cli
test
dec
fucomi
dec
adc
in
sub
mov
int
lcall
test
cmp
mov
scas
mov
insb
sti
mov
pop
xor
push
hlt
adc
jo
mov
and
push
mov
cmp
xchg
insb
shufps
dec
ss
mov
lea
fisubl
mov
sti
push
daa
cmp
pop
mov
jl
push
test
js
mov
loope
mov
jae
movl
mov
cwtl
cmp
jge
mov
sub
cmp
insb
jne
pushl
mov
call
stos
sub
or
cmp
stos
loop
out
pop
lds
lcall
jmp
movsb
mov
xchg
in
notb
pop
addr16
jp
sbb
test
leave
les
mov
rcrb
clc
push
dec
aam
cmc
and
jl
lods
mov
adc
push
dec
movsl
xchg
sub
sub
rcll
or
push
aaa
pusha
xchg
subb
cmp
pop
stc
dec
loop
testb
daa
call
mov
fdivs
fsubr
sub
push
mov
pop
jmp
jmp
xchg
inc
clc
xor
das
mov
jge
mov
adc
mov
xor
in
and
jmp
pop
loop
adc
add
jmp
enter
mov
dec
fbstp
mov
mov
mov
mov
dec
rcrl
push
jge
insl
fwait
adc
sbb
aas
push
xchg
rcrl
and
sub
push
loop
ret
mov
movsb
sbb
fcmovnbe
js
mov
inc
push
push
mov
mov
xor
mov
mov
push
xchg
pop
cmp
add
sbb
add
adc
jge
in
mov
hlt
sbb
sub
inc
and
fisubs
adc
aam
ret
xchg
pop
insl
mov
dec
sbb
shlb
cli
mov
imul
dec
push
fstpl
xor
jp
out
xlat
out
push
push
pop
jbe
test
push
rorl
pop
cmpl
std
mov
mov
lock
mov
pop
push
dec
mov
inc
adc
sbb
add
xlat
das
in
add
das
in
sub
push
ss
sbb
cmp
push
cmc
add
and
jge
jp
jl
adc
scas
cmp
lods
bsf
and
or
pop
sbb
aaa
and
push
mov
call
xchg
add
adc
call
jae
sub
or
pop
push
or
push
mov
in
inc
mov
mov
mov
hlt
decb
dec
push
xchg
fisubs
in
pop
out
mov
movsl
mov
filds
add
pop
nop
add
test
flds
mov
dec
addr16
mov
jnp
je
xchg
in
mov
pusha
dec
or
and
mov
sbb
push
xor
js
cmp
add
iret
cmc
sub
xor
cmp
subb
pop
jbe
stos
ret
add
repz
fdivrl
push
push
xchg
cmpb
jns
inc
mov
mov
mull
push
jecxz
push
mov
jle
sbb
mov
movsb
mov
jb
movl
cs
fwait
inc
inc
rorb
sti
xchg
cmp
scas
dec
inc
xor
dec
jns
cmp
roll
roll
cmp
mov
adcl
scas
shll
outsb
jbe
add
in
lods
shll
ds
fwait
sbb
dec
mov
mov
xchg
pop
fwait
jno
in
xchg
roll
incl
push
mov
jp
hlt
imull
xor
and
fsubl
fwait
mov
out
and
push
jbe
mov
push
inc
outsb
rorl
lret
loopne
test
and
jne
push
sub
jmp
xchg
and
push
rcll
and
mov
push
gs
dec
dec
cmp
sahf
test
pop
pop
pop
sub
push
dec
push
push
cmp
pop
lea
add
test
xchg
mov
cmpsb
ss
and
shrl
fwait
sahf
mov
push
sbb
and
mov
xchg
imul
in
xchg
adc
dec
adc
sti
sti
rolb
inc
insb
imull
xchg
mov
sub
flds
lret
out
data16
mov
fdivrs
lret
cmp
test
lea
loope
out
sbb
mov
inc
ror
je
notl
stc
mov
push
orl
inc
sub
movsb
push
gs
add
or
lcall
lea
adc
jle
jle
setge
dec
mov
repnz
push
fmulp
movsl
movsb
jge
adc
movl
xor
faddl
insb
ret
nop
add
and
test
iret
or
and
push
mov
enter
fsts
xchg
push
adc
lret
jnp
xchg
stos
jl
iret
jle
jb
ja
ds
xor
fldcw
mov
fucomp
xchg
jge
pusha
xchg
mov
cmp
sahf
icebp
inc
or
xlat
mov
add
adc
sub
cmp
movsb
inc
mov
pop
daa
pop
jnp
pop
repz
mov
or
inc
cmp
xor
mov
dec
neg
or
cmc
pop
in
ret
dec
cmp
dec
test
push
popf
scas
pop
mov
movb
cli
pop
lret
daa
loopne
imul
movsb
rol
push
or
cmpsl
js
inc
sbb
or
cmp
cmc
xor
daa
iret
clc
jp
pop
jne
inc
xor
mov
insb
push
pop
lcall
iret
xor
mov
add
inc
xchg
pop
cmp
xor
xchg
xchg
clc
out
pushl
push
adc
mov
mov
ss
cmpsl
orb
sub
inc
jecxz
stos
add
nop
cmpsl
bound
scas
dec
loop
jl
aad
cmpsl
mov
outsb
xchg
mov
and
movsb
push
push
lods
loopne
cli
ss
icebp
imul
into
imul
mov
add
in
test
mov
cmpsl
pop
sbb
divb
es
add
lret
iret
mov
test
sbb
mov
mov
fcmovb
and
inc
add
fxch
iret
bound
jo
sbbb
pop
jno,pt
sbb
pop
jecxz
mov
xor
lcall
xor
or
movsb
pop
cmp
sub
or
lret
loop
fstpt
jns
popa
push
jg
mov
inc
gs
pop
js
fsubrl
add
or
clc
cmp
push
or
mov
sub
xor
aas
stos
scas
jmp
fxch
aaa
lret
incb
inc
fadd
into
push
add
arpl
push
test
cmp
mov
lods
jo
sbb
shrl
iret
cmp
arpl
mov
pop
mov
movsl
mov
xor
nop
mov
adc
jo
and
mov
sub
mov
push
adc
pop
call
mov
cli
xchg
scas
mov
imul
and
xchg
stos
int
daa
sub
xchg
mov
xor
hlt
cmpsb
cmp
jge
or
scas
das
aad
pop
dec
jge
aas
rcll
pop
lret
test
ret
mov
or
ficomps
loope
scas
dec
jle
push
add
ret
inc
ja
orb
pop
adc
pop
mov
shlb
ss
jl
dec
push
xchg
aas
pop
not
adc
fisttpll
push
call
cmp
popf
ror
orl
iret
and
pop
mov
jno
inc
nop
loope
scas
mov
or
pushf
popa
scas
movsl
sub
jg
js
outsl
push
and
lahf
add
idivl
mov
pop
nop
test
or
pop
jne
mov
fidivrs
fidivl
inc
mov
ljmp
and
repz
pop
dec
inc
sbb
mov
ret
fwait
adc
stos
adc
rolb
scas
xchg
cld
ds
mov
fisttpll
xlat
out
jmp
adcb
stos
cmp
xor
mov
daa
push
movl
dec
ss
loopne
imulb
sub
iret
adc
dec
ret
xchg
iret
jae
and
adc
adc
cmpsl
jnp
lahf
jnp
fwait
cltd
movsl
test
in
add
icebp
inc
lret
xchg
addr16
lock
in
dec
mov
cmp
andl
mov
ja
lea
arpl
jmp
shl
inc
frstor
xor
js
dec
push
push
pushf
push
cld
insb
rcrl
xchg
dec
dec
in
outsl
sbb
aam
fdivl
fisubrl
mov
or
xor
mov
pop
insb
mov
inc
add
sbb
pop
adc
lds
pop
in
mov
subb
fld
sub
outsb
test
mov
mov
ret
ss
shrd
mov
repnz
les
xchg
mov
insl
imul
add
int
mov
out
xor
outsb
inc
inc
out
imul
lds
test
shl
pop
lea
stc
in
sbb
push
pop
sub
testl
stos
std
xchg
scas
inc
loop
lahf
scas
or
fsts
test
mov
jecxz
lods
loopne
jecxz
sub
or
pop
outsb
idivb
adc
jno
cld
cwtl
cmp
clc
dec
or
inc
fistl
adc
dec
sub
ret
jl
mull
popa
aad
mov
pop
lds
sti
inc
mov
adc
dec
data16
adc
sub
addl
mov
pop
in
adc
or
or
outsl
mov
sbb
popa
pop
fstpt
jns
pop
in
xchg
jnp
mov
shll
sbbl
adc
push
sbb
xchg
ret
repz
pusha
packssdw
or
js
pushf
imul
nop
adc
push
mov
andl
aad
xchg
add
ds
xchg
mov
jmp
pop
pushf
dec
mov
addr16
dec
fnsave
subl
adc
repz
adc
or
jmp
jp
nop
mov
movsb
lods
test
and
testb
in
in
enter
lcall
sbb
rcll
inc
mov
sbb
shl
and
cmp
push
scas
jb
pop
inc
ljmp
adcl
xchg
push
into
negl
es
inc
sbb
mov
popa
ret
mov
and
jg
or
and
and
sti
out
mov
into
or
jae
mov
scas
jmp
addb
imul
out
repnz
fdivrs
xcrypt-ctr
cmpsl
fwait
int
pop
xchg
test
mov
jg
adc
fiaddl
jecxz
xor
pop
or
fnstcw
dec
cld
jle
add
repnz
mov
dec
daa
adc
mov
imul
iret
jb
aad
in
and
loope
sbb
lods
mov
push
clc
in
pop
mov
pop
pushf
test
xchg
fmulp
and
in
rcll
mov
hlt
add
adc
idivb
cmp
test
jns
lods
mov
and
data16
add
sub
jge
sbb
rcrl
fcomps
mov
sub
shrb
int3
or
fldcw
fldcw
sbb
rcll
dec
in
adc
pop
push
and
inc
aad
adcb
dec
daa
inc
sub
mulb
jg
pop
mov
mov
clc
fdivrp
ljmp
lahf
jl
mov
insb
in
repz
in
test
and
xchg
loop
xchg
or
pushf
out
cmp
lea
inc
pop
sbb
ja
sub
inc
mov
aad
scas
push
mov
jge
loop
lcall
adc
xchg
out
xchg
icebp
inc
cmpsl
mov
mov
js
dec
js
or
jno
sub
pop
xchg
mov
jmp
outsb
in
test
jne
add
mov
xor
xchg
inc
lret
outsl
iret
rorb
outsb
shrb
inc
inc
arpl
sbb
fisubs
jns
leave
push
rol
push
aad
iret
cmp
adc
sbb
negl
insl
mov
std
jno
or
sub
xchg
xchg
mov
inc
stos
scas
gs
mov
cs
jg
movsl
mov
adc
aad
out
loopne
jae
mov
mov
xor
mov
xchg
shlb
dec
iret
cmc
pusha
insb
xchg
nop
and
mov
mov
push
repz
lret
lds
pushf
stos
mov
rol
jnp
and
xchg
in
into
jmp
or
or
sti
iret
mov
fwait
sub
and
xchg
nop
movsl
mov
cmc
push
adc
or
cmp
and
imulb
pop
xchg
aad
int3
popf
imul
adc
adc
lret
clc
sub
mov
push
jnp
adc
push
and
push
es
popf
pop
xchg
cmp
jae
cltd
lahf
nop
out
adc
inc
mov
in
mov
dec
add
add
test
sub
mov
mov
inc
cmp
mov
pop
shrl
xchg
test
inc
jmp
rcll
mov
aas
outsl
or
adc
sti
mov
add
dec
pop
sbb
jno
pop
inc
icebp
test
jecxz
mov
dec
cmpsl
or
xchg
jp
scas
push
pop
sar
xchg
ja
sbb
jns
dec
ss
stos
pop
cltd
faddl
rclb
sbb
inc
or
jne
and
dec
test
dec
ds
mov
cmpl
cmpsb
xchg
xchg
out
adc
inc
jle
add
stos
loopne
push
cmpsb
mov
mov
pop
lea
iret
add
andl
stos
mov
add
fucom
xor
inc
fldz
push
pop
dec
push
stos
sahf
aad
mov
push
scas
movsl
push
divb
mov
test
movsl
lds
sub
or
iret
lock
cmp
inc
test
cltd
aam
mov
aas
push
out
mov
call
dec
outsb
cmc
cmp
xchg
movsl
xchg
and
pop
sub
lock
mov
mov
hlt
add
inc
ljmp
xorb
push
test
ljmp
popa
push
push
aaa
mov
je
pop
aam
lods
inc
aad
movsl
xchg
xchg
aaa
testl
xchg
addr16
inc
inc
sbbl
aas
xor
bound
xchg
push
int3
sub
out
dec
push
andb
lods
add
imul
ss
jge
gs
mov
rcr
sub
jp
mov
sarb
lock
in
xchg
sbb
test
ljmp
jo
xchg
or
jecxz
inc
xchg
add
insb
cwtl
jns
into
mov
mov
add
outsb
es
sub
jae
inc
mov
pop
das
dec
test
xchg
fs
int3
and
pop
push
aam
sbb
sub
iret
sub
sub
out
fs
pop
andb
nop
push
inc
dec
xor
push
loopne
dec
loope
ss
mov
cmp
gs
iret
or
push
xchg
jbe
pop
pop
mov
xorb
jo
and
out
pop
loope
out
repnz
or
push
jo
pop
shl
js
iret
jb
imull
cmp
int
decl
data16
in
stc
int
jne
add
sbb
mov
pop
xchg
cs
shll
xor
xchg
push
out
xor
lret
repnz
fidivrs
imul
shll
loopne
xor
xor
aad
ds
sbbb
clc
jbe
negl
or
jo
dec
mov
or
push
mov
add
jno
add
push
jg
push
mov
ss
and
xor
jno
sub
xorps
lret
xchg
aaa
cmpsl
or
xchg
dec
cs
out
es
lret
out
fs
inc
push
sahf
push
scas
pop
cmp
adc
jl
inc
sub
aas
mov
mov
mov
aaa
testl
lods
lods
and
mov
and
push
inc
pusha
mov
cwtl
xchg
daa
jnp
dec
fisubs
popa
jb
cld
jae
push
into
ja
shrl
mov
dec
pop
inc
xchg
dec
mov
data16
rcrl
jns
xor
jb
ss
in
or
inc
test
addb
mov
dec
and
stos
fdiv
bound
mov
leave
xchg
imul
sbb
fmuls
iret
add
jp
and
jmp
fistpll
pop
emms
dec
push
adc
pop
lods
and
pop
sbb
inc
and
cmpsl
clc
push
aaa
div
fs
adc
jne
xor
inc
fbld
adcl
adc
push
push
mov
lea
lods
fimull
dec
sbb
sbb
xchg
sub
imul
push
xlat
rcl
sub
lea
inc
iret
data16
sar
mov
add
or
mov
xchg
lock
pop
cmp
dec
and
pop
fmull
std
xor
add
mov
aas
pop
mov
and
xlat
mov
inc
sub
insb
jge
lret
mov
lods
dec
cmp
ret
in
inc
sub
lret
rcrl
out
jp
jmp
jnp
cmp
cwtl
sub
fwait
lahf
adc
in
push
subl
loopne
movsl
add
mov
mov
cbtw
mov
mov
testl
jg
sbbb
cmp
out
int
out
jle
jns
xor
outsb
xchg
mov
cli
in
js
es
ljmp
fsubs
cmp
test
jmp
or
xlat
mov
or
sub
ret
nop
xor
pop
fcmovu
and
jge
push
dec
xchg
and
roll
cld
stos
dec
cmp
shlb
xor
mov
imulb
mov
das
enter
jp
push
outsl
mov
push
xor
sub
mov
xchg
ja
cmc
in
mov
mov
jne
lret
cmp
outsb
push
mov
or
lahf
scas
dec
mov
mov
imul
test
into
mov
sub
das
pop
jp
fwait
rcl
nop
lahf
push
pop
mov
lret
mov
add
or
jmp
aad
sbb
bound
mov
fisubrs
add
popf
loope
lea
lock
inc
mov
jl
inc
es
xor
jg
out
xor
and
lret
imul
in
push
pop
test
insb
xlat
mov
jbe
test
aad
lret
subl
add
xor
add
cld
mov
test
icebp
in
add
push
sub
mov
adc
and
rclb
std
out
test
or
add
sub
sbb
je
jp
scas
fistpll
pop
adc
push
pop
dec
stos
add
cli
push
std
iret
jmp
imul
rcrl
push
lods
pop
mov
mov
push
xor
and
lea
enter
test
push
dec
pusha
cltd
xchg
xchg
sbb
cld
lods
mov
mov
ja
fisttps
cmpb
push
and
jb
add
frstor
iret
shl
cmp
scas
fldcw
test
or
adc
push
mov
push
test
in
xchg
push
flds
pop
clc
push
xchg
push
and
mov
cmpb
pop
dec
push
incl
inc
jmp
fs
push
mov
loop
or
popf
es
mov
loope
lock
xchg
loop
popa
out
push
xchg
call
sbb
mov
adc
xchg
lret
cmovp
inc
adc
xchg
movsl
in
sub
jle
jno
imul
xchg
popf
add
out
pop
xchg
push
out
mov
in
add
daa
jmp
sbb
int
fcoms
mov
into
xchg
stos
test
jb
xchg
cli
adc
push
lret
sbb
jp
fcoms
xchg
rolb
test
data16
out
insb
sbb
push
out
das
xlat
mov
sbb
imul
pop
andb
dec
cli
and
sub
mov
push
mov
imul
inc
les
loopne
fmul
cmpsl
repz
xor
adc
xchg
arpl
push
add
imul
mov
pushf
insb
and
or
add
sbb
ljmp
cli
out
inc
and
jg
jb
cs
xlat
and
in
xchg
inc
add
lock
xchg
nop
adc
mov
loope
xchg
test
xchg
outsb
xchg
fnsave
dec
mov
rcrl
aas
cmp
addr16
rorl
fwait
dec
dec
sub
imul
inc
shrl
xorl
xchg
lods
mov
pop
xor
mov
les
sub
shlb
ja
jg
shlb
xor
pop
inc
inc
add
inc
xchg
mov
inc
cmc
div
loopne
xchg
ret
outsb
xchg
and
repz
stos
cmp
pushf
out
ljmp
push
gs
push
int3
int
xor
stc
mov
xor
inc
or
lahf
and
fsubr
filds
xlat
scas
mov
das
inc
xlat
xchg
push
inc
jl
xchg
ss
sbb
push
or
data16
or
mov
gs
inc
mov
or
ror
test
inc
call
daa
pop
addr16
ret
insl
lahf
ds
jnp
add
repnz
movsl
out
mov
icebp
push
push
dec
dec
lahf
jg
or
sarl
scas
fwait
sub
movsl
xchg
aam
cwtl
test
adc
std
xchg
and
cmc
xor
mov
rclb
daa
fcmovnu
sahf
xchg
fwait
stos
inc
push
add
nopl
outsl
push
aaa
clc
jge
cld
dec
sbb
sub
enter
mov
inc
jo
stos
mov
jl
outsl
int3
shl
pop
rcll
or
mov
jle
pusha
jle
add
mov
push
lahf
cmp
in
adc
test
stc
test
xor
ret
rorl
movsb
push
insl
cmp
repz
imul
inc
mov
push
pop
cmpsb
mov
inc
in
out
dec
cwtl
and
sbb
std
repz
in
fwait
xchg
addr16
adc
sbb
ret
std
adc
pop
jg
pop
jno
mov
ds
pop
and
mov
jge
mov
jle
loop
je
mov
inc
into
xchg
and
negb
cmp
cmpsl
mov
dec
scas
push
arpl
loop
mov
and
fcom
inc
push
test
out
in
arpl
sbb
mov
movsb
push
ret
xchg
adc
out
sub
inc
xor
push
popa
stc
aad
bound
push
scas
dec
xchg
push
repnz
sub
in
outsl
cli
cmp
jo
add
scas
sbb
lea
pop
fisubrs
and
sub
loope
jbe
adc
push
test
enter
mov
and
inc
inc
jle
push
cmpsb
sbbl
outsl
sti
add
insl
cmp
test
nop
insb
lcall
iret
in
movsl
pop
popf
cmp
scas
lods
and
and
mov
lahf
aaa
out
xchg
inc
adc
sarb
or
gs
and
cmp
push
notl
adc
jbe
or
sub
dec
push
fcmovne
pop
flds
mov
mov
in
push
stos
flds
push
es
imul
adc
cmpsl
notb
pop
pop
xchg
shr
mov
das
mov
xlat
mov
mov
mov
mov
mov
test
je
dec
rolb
ja
ljmp
push
add
push
lock
popf
lahf
cwtl
pop
arpl
jae
sahf
or
lock
cli
fisubl
lret
lea
subb
outsb
sub
in
ja
ljmp
fs
adc
pop
ds
pushf
js
clc
test
addr16
je
sbb
icebp
sbb
std
push
inc
and
push
orl
mov
xor
push
cmpsb
sbb
push
out
mov
jno
jg
xor
jno
ret
mov
cmp
imul
xor
push
fs
hlt
popf
enter
dec
dec
movsl
lods
aad
into
cmc
subb
pop
xchg
xor
push
push
pusha
enter
mov
fs
in
aas
mov
cmp
dec
aaa
fs
lods
push
cmovbe
ss
ret
mov
xor
mov
push
clc
in
adc
loopne
adc
mov
xchg
mov
xchg
sbbb
call
lret
jmp
fcoml
push
movsl
pop
sub
ljmp
add
hlt
shl
or
cmp
mov
out
or
into
sahf
imul
xchg
and
lcall
nop
jno
mov
mov
mov
repnz
sub
fs
call
push
in
or
jg
push
cmpsl
outsl
push
movsl
jb
inc
mov
dec
ffree
xchg
lods
sub
mov
sti
jne
xor
sub
ja
jle
add
out
icebp
movb
mov
or
sub
and
addr16
lods
inc
adc
dec
out
shl
sub
mov
dec
ficompl
xor
incb
arpl
jecxz
push
and
int3
and
loopne
adc
and
fsubrp
call
icebp
lods
xchg
popa
and
pop
mov
add
lock
lods
in
cmp
sub
sub
adc
das
add
inc
iret
sub
or
and
xchg
adc
call
pop
push
inc
lahf
fistpll
ret
ret
inc
mov
pop
sub
cld
ret
ret
mov
sub
push
cmp
push
sbb
sar
sti
stos
and
orl
fidivl
adc
inc
sbb
lea
sbb
aam
out
jne
pop
imul
fwait
roll
pop
cli
dec
add
ret
xchg
je
mov
adc
inc
scas
fstl
je
and
dec
cmp
xchg
mov
cltd
inc
out
fisubrl
xchg
and
add
jnp
mov
jg
mov
cmc
inc
mov
daa
ret
sbb
stos
dec
out
jo
or
int
adc
ss
pop
mov
inc
bound
ret
jns
inc
pop
repnz
cmp
pop
xor
pop
mov
push
cmp
fs
sbbb
jmp
in
add
dec
in
cmp
dec
clc
data16
ret
cmp
sub
or
rcll
addr16
or
jmp
test
hlt
idivl
cmp
cmc
sub
shll
ss
sub
insb
mov
sbb
lahf
fadds
push
cwtl
mov
pop
rcr
xchg
push
scas
mov
mov
mov
xor
add
adc
sub
push
add
rolb
or
out
iret
mov
in
xorl
clc
pushf
inc
sahf
fcmovne
dec
cmp
jno
mov
jle
pop
dec
jecxz
pushl
arpl
mov
test
cs
mov
sub
dec
lods
push
mov
xor
aam
pop
or
jbe
ret
test
add
xor
mov
jbe
push
sub
dec
cltd
orb
scas
mov
xchg
in
mov
or
movsl
aam
fistps
repnz
into
add
mov
dec
or
inc
xchg
xor
cltd
or
fstpl
cltd
pop
pop
push
push
out
mov
pushf
mov
insb
or
adc
stos
adc
les
push
fsts
leave
int
jae
dec
arpl
jno
adc
fbstp
out
mov
cmc
sub
add
inc
push
test
dec
popa
ljmp
shrb
mov
lret
add
dec
repz
fcomps
popa
stc
fistpl
or
int3
push
fdivp
imul
rcrl
dec
sbb
mov
adc
and
xor
mov
adc
or
or
loop
mov
imul
and
daa
test
cmpsb
pop
fildl
lds
outsl
push
pop
mov
clc
push
cmp
cmpb
stc
rcrl
jle
add
cmp
dec
xor
out
fnstcw
roll
inc
ss
loop
push
mov
aaa
and
repz
repnz
lret
pop
rorb
repz
inc
push
and
lret
xchg
or
out
ret
sarl
ret
jno
xchg
js
mov
xchg
cmp
test
adc
mov
lods
dec
push
adc
test
popa
popa
mulb
nop
cmpb
mov
icebp
sbb
inc
add
mov
ret
xlat
and
push
sbb
inc
sarb
fcomi
fildl
dec
ror
mov
pop
xchg
add
xor
dec
cmc
ss
cmp
mov
sbbb
push
addb
pop
xlat
xor
addr16
mov
sbb
test
jb
out
xchg
inc
jl
cmp
push
sbbb
js
stos
dec
int3
daa
lcall
sbb
xchg
inc
mov
fs
sub
push
cmp
rorl
repz
add
cmp
data16
sbbb
push
add
mov
fsubp
adc
mov
ja
sarb
jg
sbb
dec
cs
test
popf
fmulp
inc
outsb
dec
inc
add
xlat
and
mov
adc
add
enter
ss
pusha
in
xchg
push
and
xchg
in
cwtl
inc
xor
out
sbb
in
sub
out
shll
test
mov
inc
shll
xchg
cmp
xchg
daa
mov
sub
mov
subl
and
dec
cltd
fdivrl
lds
loop
out
icebp
jnp
movsl
sbb
dec
xor
icebp
loopne
jecxz
in
mov
les
fists
mov
loop
cmp
popa
repz
jbe
orw
xor
int3
jge
mov
mull
pop
sub
push
or
mov
lods
xchg
lahf
inc
lods
and
outsl
inc
xchg
xor
in
inc
push
push
mov
mov
sub
mov
cltd
dec
jle
adc
mov
mov
cmp
xor
xchg
cld
fidivl
enter
sub
scas
sub
push
push
ret
jb
sti
ljmp
int3
mov
std
adc
outsl
push
neg
imul
arpl
int3
jnp
lret
into
enter
mov
lret
push
es
fsubrl
mov
loopne
jl
movsl
mov
out
jae
sbb
jmp
lds
pop
jl
mov
stc
add
in
outsb
loope
fmuls
xor
inc
mov
fdivl
xor
sbb
pop
lock
cwtl
sbb
enter
pop
jge
push
popa
sbb
push
push
xchg
and
jo
sub
cmp
pop
push
arpl
inc
add
mov
and
push
fs
inc
repz
mov
mov
cmpsl
sub
les
inc
jmp
xchg
or
mov
inc
popl
push
std
xchg
mov
dec
ret
push
mov
ss
in
cmp
mul
xor
repz
sub
add
or
lds
test
pop
fisubrs
aam
mov
cld
das
shrl
push
in
cmpsb
mov
xor
dec
sbb
shl
push
mov
adcl
pop
sbb
jno
mov
loopne
xchg
notl
push
mov
push
subl
into
cmc
pop
addb
lock
jbe
lods
loope
pop
lds
cmp
out
mov
push
sbb
iret
adc
push
cmp
sbb
rcll
or
outsb
or
mov
dec
add
cmp
xchg
daa
push
and
mov
mov
mov
or
push
lret
in
push
in
out
fsubs
push
cld
jge
int3
dec
out
jp
popa
cmp
loope
loopne
jae
rcrb
pop
stc
adc
lock
in
cmpsl
push
mov
push
mov
rolb
sbb
cli
iret
mov
enter
push
sbb
jnp
lret
xchg
cwtl
ret
adc
adc
xor
cmp
jge
jle
xor
test
dec
in
and
adc
popa
scas
cmpsl
jp
iret
and
test
insb
aaa
and
in
mov
fsub
test
mov
clc
jo
sbb
sub
xchg
loopne
sbb
ss
mov
sbb
mov
test
pop
xor
inc
xchg
fiaddl
in
inc
cli
pop
inc
mov
stos
or
push
loopne
cmpsl
sub
inc
push
jo
lahf
and
xchg
mov
mov
dec
lea
jo
or
xchg
mov
xor
repnz
sbb
dec
and
pop
sub
stos
into
or
rclb
mov
push
push
xchg
inc
pop
pop
jle
mov
mov
iretw
pop
mov
mov
iret
cmpsb
xor
js
mov
repz
cmp
sub
xor
mov
pop
lcall
xor
in
pusha
cmp
pop
shr
leave
mov
dec
pop
pop
push
in
cmpsb
or
lahf
push
iret
stos
call
jno
jmp
leave
dec
or
jmp
mov
stos
jnp
ljmp
sub
jg
and
push
mov
inc
pop
fcompl
into
push
paddq
ss
sbb
cmp
xor
adc
push
adc
jns
mov
arpl
jb
ret
jge
mov
rorb
icebp
stos
or
mov
lret
add
sahf
adc
sahf
fistl
jne
sti
ja
xchg
shl
das
test
push
gs
mov
aas
ret
push
jge
ss
stos
mov
fbld
xchg
jge
aam
jg
in
and
and
sbb
lea
and
push
sub
mov
dec
xor
loopne
lock
ss
push
xchg
xor
and
test
push
dec
clc
lcall
cltd
lret
mov
fistl
aad
mov
inc
xchg
or
xchg
mov
or
inc
shrb
fimull
outsb
movsb
sahf
lret
push
sbb
loopne
cmc
test
in
mov
mov
push
fistl
pusha
cld
and
pusha
push
shlb
rolb
or
stc
dec
sbb
sbb
push
inc
es
cli
xchg
xor
or
ficomps
mov
out
xchg
lods
dec
cltd
popa
insl
cmpsb
fistpl
cli
enter
lods
popf
in
icebp
push
out
aad
cmp
lds
in
mov
mov
push
aas
ds
in
in
mov
jae
lret
icebp
imul
imul
js
ficoml
and
add
fldt
cmp
stos
sbb
inc
push
push
ds
idivb
arpl
cmpsb
push
test
vpaddsb
or
inc
ds
into
popf
mov
sahf
stc
test
push
mov
lds
adc
add
cmp
xchg
out
jecxz
test
lds
cmc
dec
dec
aas
or
negb
fidivs
js
movsl
sub
mov
inc
insl
xor
push
push
ss
xchg
dec
lods
divb
cmp
sbb
out
and
out
jae
jmp
mov
out
and
addr16
out
inc
mov
lret
sbbb
es
shll
and
test
mov
out
mov
ljmp
pushf
push
daa
es
and
daa
push
cli
adc
or
push
xor
mov
mov
xlat
je
xchg
cmc
dec
ja
movsl
xchg
arpl
xchg
xor
adc
andb
lahf
inc
inc
cmpsl
nop
sub
ret
add
cmp
cmpsl
mov
hlt
dec
rorl
fsts
cs
lods
andb
into
mov
mull
cs
sahf
insl
and
stc
xorb
and
subl
xchg
push
mov
mov
filds
push
sub
push
and
cli
dec
push
pop
push
daa
inc
call
or
std
xor
div
xchg
or
mov
xchg
repnz
cli
mov
leave
rcl
stos
or
push
fcomip
mov
lods
pop
and
inc
push
mov
add
pop
loop
or
mov
sub
fcoms
adc
dec
aas
fcmovnu
test
les
push
pop
mov
in
adc
fidivs
dec
int3
mov
adc
pop
lods
call
mov
lock
inc
jmp
rcrl
daa
rcll
movsl
cs
fildl
std
sub
lcall
or
or
xor
push
mov
dec
repz
inc
or
insl
jae
iret
mov
adc
mov
mov
loope
xchg
stos
adc
pop
jmp
jecxz
in
rorb
pop
ret
push
push
mov
xor
insl
ffreep
inc
lock
lcall
push
xchg
hlt
cmp
jge
or
inc
cli
insl
mov
mov
out
push
scas
inc
loop
adc
out
add
mov
out
mov
pop
leave
mov
inc
mov
outsb
xchg
mov
jmp
sbbl
dec
fwait
sbb
out
adc
jecxz
incl
stos
std
xchg
stos
pop
leave
mov
mov
hlt
mov
xorl
inc
push
jmp
test
add
jle
dec
in
je
aaa
negl
pop
sub
je
jne
in
mov
sahf
or
xor
jecxz
es
insl
cmc
loopne
jmp
push
orl
inc
dec
dec
jmp
ret
push
cmc
mov
lock
xor
sub
stc
jbe
mov
push
jns
les
xchg
icebp
fidivrl
xchg
jle
inc
dec
push
in
out
or
movb
or
imul
add
je
and
sarl
ret
inc
mov
stos
frstor
lds
jbe
pop
cmc
and
fwait
shll
sbb
pop
sbb
inc
fs
lods
push
lea
dec
les
sbb
icebp
add
cli
fimuls
aaa
and
sbb
xor
xor
lds
lock
clc
mov
std
cmp
or
movsb
lods
xor
std
or
das
or
ljmp
sbb
mov
sbb
dec
pop
addr16
cli
xchg
xchg
push
aas
fiadds
dec
push
mov
and
xchg
mov
cmp
ror
dec
mov
lds
dec
or
and
fwait
and
sub
in
insl
outsl
cmpsl
hlt
mov
jo
and
mov
jl
jnp
data16
cmp
es
gs
cmpsb
cmpsb
adc
in
xor
fs
out
and
jecxz
add
push
mov
insl
scas
repnz
popf
shl
iret
imul
mov
lock
sub
arpl
outsl
sub
clc
imul
aad
cmc
mov
cwtl
stc
push
je
or
subb
fiaddl
sbb
outsl
sbb
int3
imul
pop
xor
push
mov
loop
inc
fnsave
stc
and
insl
push
jge
hlt
add
lods
mov
imul
addr16
fistpll
xor
je
ljmp
mov
aaa
pop
test
lahf
adc
push
pusha
iret
fdivrl
nop
push
fwait
sbb
dec
fisttpl
adc
adc
pop
call
nop
adc
inc
inc
cwtl
in
jns
mov
jne
pop
iret
cmp
inc
dec
mov
cmp
test
enter
idivl
pop
add
es
cmpsb
shlb
sbb
loop
cmpsl
push
scas
inc
popf
cmp
xlat
cmp
aaa
jg
shrl
xchg
int3
daa
in
sub
push
sub
sahf
and
lret
outsb
inc
sti
xchg
jno
imul
push
in
aam
js
sbb
mov
xor
clc
xchg
jbe
mov
aaa
pushf
xor
int
fnstsw
and
sub
push
lret
movsl
lahf
iret
cmp
xor
scas
xor
and
bnd
aad
in
imul
clc
sub
sbb
bound
jecxz
or
scas
fdivr
rorb
aad
mov
stos
mull
int3
lret
mov
adc
fisubrl
add
sub
sub
loope
xlat
es
andb
pop
addr16
mov
push
mov
in
scas
les
cli
mov
vmaxps
fistps
ljmp
fbstp
pop
mov
fistl
movsb
cld
and
lods
mov
push
push
popf
jecxz
mov
loopne
jne
mov
cmpsb
mov
stos
std
movsl
movsb
add
in
mov
sub
xchg
mov
cli
add
in
and
sbb
cmpsb
dec
jge
mov
push
jne
lahf
or
jp
dec
add
xchg
pop
addl
out
or
out
in
aad
add
push
inc
jmp
dec
jnp
insb
inc
pmuludq
pop
sbb
jne
adc
pusha
add
mov
sub
lahf
xor
add
flds
and
movsb
dec
cmpsl
cwtl
fs
add
jb
and
shlb
in
enter
adc
cli
nop
sti
test
mov
mov
push
ret
dec
push
jl
cmpsb
jae
stc
mov
arpl
gs
lret
or
push
aam
popf
jb
les
and
lods
jbe
xorb
repnz
data16
add
and
nop
stos
adc
aaa
mov
mov
int3
and
mov
mov
imul
in
jmp
push
movsl
daa
fdivrl
lahf
repz
pop
jns
movsb
outsb
cmpsl
inc
in
add
int3
rcll
sub
push
mov
inc
mov
mov
repnz
out
add
mov
add
pop
fstpt
push
ret
mov
aas
inc
lret
cmpsb
pop
lahf
and
repnz
push
xor
lds
stos
cmp
adc
sub
std
pop
ret
mov
or
rolb
iret
shll
sub
enter
cmc
xchg
lea
sahf
addr16
stc
pop
insl
js
cmp
andl
test
dec
and
mov
add
mov
cmp
mov
jo
xor
push
jb
xor
xor
cmp
mov
popa
jle
icebp
mov
aam
sbb
int3
test
in
sub
push
jecxz
rcll
mov
pop
jmp
sbb
xchg
push
push
jae
shrb
dec
jo
sbb
lahf
mov
bound
repnz
or
add
adc
aas
and
es
sub
push
mov
jbe
push
cmpsb
xchg
sub
in
in
xchg
fwait
mov
inc
mov
pop
loopne
sub
add
adc
push
loop
loope
jmp
pop
pop
andb
cld
repnz
push
cmp
pop
push
xorb
push
andb
mov
push
inc
daa
movswl
outsb
adc
push
rolb
aaa
mov
shll
das
jg
adc
ret
repz
fs
push
stos
sbb
dec
pop
ffreep
shlb
xchg
mov
pusha
and
push
add
cwtl
xchg
cld
jl
mov
call
lods
mov
push
cld
xchg
dec
cmp
inc
fadds
jl
int
dec
inc
mov
cmp
leave
cmp
test
stos
xchg
cmc
repz
cmpsl
repz
inc
jb
xor
xchg
pop
insl
je
mov
or
cmp
xor
cmpsl
xchg
xor
lods
jg
shll
push
pop
sub
xorb
mov
cmp
inc
jnp
lea
jge
jmp
into
sub
mov
jle
les
pop
movsl
insb
fmuls
aaa
xchg
stos
stos
sbb
fisubrl
inc
insb
sbb
mov
xchg
push
test
fildl
mov
ss
xor
xchg
movsl
and
rcll
cltd
sub
mov
ret
jecxz
movsb
mov
js
loope
cli
mov
jmp
fiadds
xrelease
adcb
popf
add
mov
je
fxch
mov
fsubl
mov
rcll
mov
iret
sbb
jg
cltd
push
pop
out
adc
push
test
mov
push
mov
jns
pop
in
shll
jne
add
rcll
sbb
lods
icebp
inc
jecxz
adc
and
adc
lock
or
mov
andl
stos
shlb
xlat
push
loop
int3
into
push
push
jmp
push
xchg
jecxz
jecxz
cwtl
mov
xor
int
pop
and
icebp
mov
jbe
popf
and
rclb
jbe
push
test
cwtl
popl
pmuludq
imull
cmpsl
outsb
test
xor
and
call
sbb
sbb
xor
std
cmpb
sbb
outsb
dec
push
lret
sbbb
pop
sbb
jnp
xchg
push
xchg
imul
jo
xor
gs
push
adc
xor
in
imul
pop
shll
inc
out
enter
pusha
or
imul
jecxz
xchg
xchg
pusha
or
outsb
les
pusha
scas
mov
inc
popa
pop
xor
sbb
xchg
scas
bound
outsl
insb
adc
pop
js
fiadds
andnps
sbb
lea
sbb
adc
loope
push
push
mov
sbbb
call
mov
jl
stos
cld
xor
stos
sti
sahf
sub
aaa
fwait
mov
sbb
inc
ficomps
adc
dec
or
nop
je
push
cmc
ret
push
xchg
std
scas
fbstp
sub
int
mov
or
adcl
inc
negl
push
enter
and
pop
paddsw
fidivs
nop
xor
test
push
jecxz
push
sti
mov
xor
test
cmc
sarb
dec
mov
popa
add
or
scas
and
mov
fsubs
push
test
lods
ret
ss
dec
dec
cmp
cmp
in
dec
addl
lcall
mov
jge
fxtract
movsb
popf
sub
push
mov
xchg
lds
xor
mov
inc
scas
ret
out
adc
or
into
or
jno
push
push
hlt
iret
mov
movsb
sbb
fucomip
add
xor
xor
in
push
dec
pushf
xchg
out
lahf
add
adc
sahf
mov
jmp
mov
push
xor
jnp
fisubs
int
cmpb
test
sub
enter
loop
sti
mov
and
ja
out
shr
mov
data16
inc
xor
clc
jl
aaa
dec
push
fdivrl
popa
ljmp
inc
xor
adc
pop
jo
dec
lret
jmp
mov
cmp
xchg
push
pop
fwait
sbb
ficoms
inc
ror
shrl
ret
and
xor
xchg
push
inc
imul
mov
xor
das
mov
jecxz
lret
scas
push
in
in
pop
imul
dec
pop
nop
jg
sub
sbb
fldl
push
call
lea
dec
mov
inc
ffreep
and
aad
jns
arpl
pop
scas
or
mov
pushf
mov
lock
daa
fld
in
push
sub
test
or
cmp
xchg
sahf
in
cld
test
test
fsub
iret
jecxz
ds
fdivs
scas
jecxz
cmpb
adc
mov
sbb
orb
out
jp
lahf
shrl
daa
pop
jmp
pop
repz
sub
inc
je
lret
push
adc
bound
out
repnz
aas
mov
jg
dec
mov
leave
inc
dec
sub
xor
mov
pop
aaa
ficoms
int
in
sub
sar
push
xchg
xacquire
or
xsave
pop
mov
les
xchg
adc
nop
adc
nop
xchg
adc
das
pusha
push
fcoml
xor
loope
dec
clc
mov
push
cmp
out
inc
fucom
outsb
add
pop
jne
movsl
shrl
push
adc
std
jns
flds
aaa
sub
inc
dec
cmp
sar
mov
and
in
in
shl
pop
xor
sub
addr16
add
xchg
xor
ds
xor
stos
movsl
lret
in
xor
cmpsl
fsubs
push
pop
pop
push
sbb
scas
pop
in
inc
mov
int
data16
dec
movsb
jmp
lea
fiadds
lock
out
insb
outsb
sub
outsl
nop
shrl
fldln2
je
shlb
push
sti
push
iret
inc
mov
fdivr
jbe
mov
push
or
push
enter
movsb
inc
add
jb
dec
inc
sbb
cwtl
xor
push
cmp
in
mov
add
jbe
xchg
add
push
inc
jg
mov
inc
push
xor
push
lcall
scas
or
mov
icebp
add
xchg
or
arpl
mov
xor
cmp
aad
cmc
outsb
mov
scas
ret
loopne
ljmp
pop
or
loop
jg
int
pop
js
stos
scas
imul
test
iret
adc
dec
loopne
pop
push
fisubrl
mov
inc
sbb
mov
mov
cwtl
in
enter
icebp
sub
das
daa
mov
clc
rcll
das
inc
repnz
inc
mov
enter
shll
loop
sub
repnz
add
mov
pushl
jb
aam
addr16
stos
popa
push
adc
jb
insb
mov
xor
or
daa
xor
xchg
mov
int3
inc
xorb
push
mov
dec
inc
mov
testw
lahf
orl
jmp
sub
fsubl
pop
lods
fucom
mov
cwtl
andl
pushf
std
dec
mov
sub
shrl
fdivl
mov
mov
mov
inc
jg
sbb
sub
lods
aaa
jp
cmpsl
rol
mov
and
mov
andl
decb
jp
jg
imul
inc
mov
call
mov
hlt
in
mov
cltd
out
sbb
jns
xchg
xor
add
orb
lods
loope
pop
loop
fisttpl
or
ss
fs
jge
push
mov
movl
jmp
jno
or
ds
movsb
xor
mov
cmp
out
jnp
jg
sahf
cmp
sbb
imul
movl
xlat
jmp
adc
in
popa
insl
fsts
cmp
mov
cmpsl
jge
inc
repz
push
loop
push
nop
movsb
pushf
push
xchg
xor
shll
dec
add
shrl
push
jae
xlat
jl
cmp
and
sub
mov
mov
data16
in
xlat
lods
xor
mov
pop
cwtl
pop
fadd
loop
mov
aaa
mov
rcll
pop
jns
test
addr16
pop
mov
popa
pop
cmp
xchg
add
jno
mov
imul
push
push
insl
test
mov
inc
aad
aam
push
and
repnz
pop
outsb
out
mov
pusha
xchg
out
sub
dec
hlt
insl
jb
mov
cli
and
inc
imul
dec
roll
outsl
sti
and
pop
pop
or
and
ret
add
movups
popa
loope
sbb
in
fimuls
adc
in
push
add
push
mov
mov
sbb
cmc
push
clc
and
xchg
sub
adcl
jle
in
lods
idiv
add
jae
xor
outsb
mov
ljmp
sub
sub
pop
adc
mov
or
sbb
jl
mov
push
fsubrp
ret
icebp
mov
sub
dec
sbb
enter
push
xchg
pop
xor
fbld
fistl
call
adc
lahf
jbe
sbb
or
nop
pop
cltd
out
mov
push
je
lret
ret
inc
in
sti
or
in
data16
pop
pop
ljmp
les
mov
mov
push
adcb
lock
or
sarb
pop
enter
adc
mov
adc
fwait
ret
stos
cmp
push
rolb
cmp
jp
mov
mov
scas
stos
pop
mov
mov
daa
xorb
std
xorb
inc
mov
rorl
outsl
mov
inc
insl
es
fcomip
fidivrl
sbb
pop
xchg
stc
add
add
pop
mov
lahf
lret
lds
fdivrl
addr16
jns
inc
mov
mov
dec
sub
sbb
ret
pop
out
mov
out
sbb
lea
and
mov
lock
fs
push
filds
ljmp
pop
jmp
nop
popa
out
hlt
cmp
mov
fnstcw
cmp
mov
push
push
imulb
mov
cli
jno
xchg
andl
inc
mov
adc
repnz
mov
xor
xchg
jne
xchg
sub
mov
sub
popa
jl
int3
jl
or
push
dec
pop
xlat
rolb
adc
jbe
xor
adc
adc
or
imul
mov
jne
enter
loopne
testl
mov
xor
stos
and
adc
or
xor
shrb
push
enter
hlt
jl
cmp
clc
xchg
icebp
jns
cmp
dec
mov
rol
mov
imul
pop
add
xor
sahf
add
arpl
inc
sub
cmc
call
mov
orb
jnp
int3
xchg
mov
xchg
add
insl
dec
daa
inc
sbb
mull
cmpsl
dec
xor
dec
and
mov
or
sub
popa
loope
inc
or
pusha
or
or
inc
pusha
inc
nop
scas
adc
enter
cmp
popa
test
mov
or
push
out
pushf
repnz
sbb
add
inc
mov
rolb
out
jmp
in
jmp
mov
push
andb
test
es
and
es
adc
scas
inc
repnz
push
mov
push
out
xor
xchg
andl
dec
mov
les
fsts
adc
xor
xor
adc
notb
gs
inc
mov
sbb
push
cmc
orb
outsb
iret
fsincos
xchg
stos
ja
ss
int
xchg
jmp
mov
idivl
sub
outsl
test
sbb
fldt
jge
mov
sbb
sub
add
jmp
mov
inc
aaa
in
mov
cmc
aad
dec
sub
out
mov
aas
push
and
nop
ret
outsl
jo
scas
fdiv
cwtl
add
fsubrp
fsts
push
in
jp
lds
hlt
mov
xor
bsr
aaa
stc
lods
fdivrl
insl
icebp
in
lods
in
loope
sub
fwait
pop
inc
lods
ficomps
aaa
mov
cmpsl
xor
xchg
test
cltd
imul
clc
mov
stos
movsl
adc
loop
movsb
pop
adc
jge
xchg
cli
sub
fstpt
jg
jno
in
enter
jo
xlat
insl
xchg
ja
xchg
or
push
or
pop
xchg
mov
xchg
loope
fwait
jnp
push
je
xor
lock
lea
push
cmp
mov
mov
mov
xor
ljmp
jne
in
aad
lret
and
push
and
or
ss
mov
mov
sub
adc
ret
dec
dec
pop
inc
rclb
test
enter
ss
add
stos
inc
fiadds
sbb
or
loopne
outsl
sarl
pop
jl
mov
dec
pop
push
jno
ss
dec
sbb
or
push
mov
sub
sbb
scas
jecxz
sahf
jmp
sti
mov
and
adc
xlat
jb
and
xor
and
cltd
xchg
iret
push
xchg
mov
daa
cmp
pop
push
dec
jl
fdivrs
addr16
dec
dec
jge
jg
cmc
js
and
and
lods
inc
js
mov
cwtl
dec
imul
cli
inc
mov
adc
push
adc
imul
cmp
xor
dec
out
fbstp
xor
pop
ds
movsb
pop
bound
adc
sbb
mov
adc
imul
ret
int3
adc
inc
inc
ljmp
cmpsb
pop
sbb
xlat
nop
pushf
xchg
test
mov
mov
test
shr
fldt
icebp
mov
xor
repnz
lods
jge
xor
xor
jmp
push
add
loope
adc
xchg
mov
sub
repnz
daa
pop
into
lret
popa
lea
test
jge
jae
aad
ds
adc
mov
daa
lds
fwait
pusha
inc
add
push
xor
test
pop
sbbl
not
or
dec
cmp
sub
lods
hlt
jg
mov
sub
and
dec
hlt
shlb
pushf
add
int3
mov
xchg
sub
sbb
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
ret
lret
cld
xor
inc
rolb
cmp
add
inc
push
inc
repnz
pop
pop
insb
jo
arpl
mov
pop
cmp
fsubrl
cmpsl
jle
je
mov
dec
add
inc
cli
ret
cmp
loopne
subl
cltd
mov
insl
mov
lea
negl
mov
jb
pop
test
jb
sbbb
addb
sbb
in
fdiv
and
dec
jo
and
pop
dec
fwait
jbe
leave
not
les
test
in
sbb
lret
fbstp
in
push
fimull
fnstcw
adc
outsb
sbb
lock
add
rol
mov
imul
sbb
sarl
jo
mov
hlt
stos
fmull
dec
inc
push
mov
in
mov
push
outsb
add
test
sub
aam
fwait
in
and
pop
dec
jno
adc
adc
pop
jg
adc
shll
lds
pushf
sti
and
adc
cmc
enter
xchg
out
mov
and
mov
add
jmp
sbb
insl
pop
push
jae
xchg
imul
push
pop
add
adc
jp
add
das
jmp
pop
scas
jb
cmpb
pop
cwtl
xchg
cmp
jbe
rolb
enter
in
mov
jg
lds
aad
cmp
xchg
mov
out
pop
mov
inc
lods
mov
inc
adc
adc
xor
addb
cwtl
sahf
add
xor
fstpl
sbb
leave
cmc
pop
mov
imul
cmpsl
fstps
into
inc
iret
ljmp
add
icebp
inc
cmovbe
push
pop
test
das
sbb
and
push
orl
mov
mov
push
inc
mov
cld
adcl
push
ret
mov
lods
sbb
jnp
sbbb
test
testb
clc
repz
loope
xchg
lds
xor
jge
outsl
ret
int
or
push
out
arpl
jge
mov
cltd
imull
and
in
and
iret
mov
pushf
ljmp
or
jmp
packssdw
leave
xchg
xor
push
dec
stos
sbb
xchg
pushf
sub
sbb
in
es
dec
repnz
ss
inc
sbb
mov
xchg
into
mov
or
nop
push
sbb
decb
push
popf
loop
lahf
xchg
enter
cmp
jl
xorb
sub
push
add
adc
fcoms
lret
fsqrt
lods
sbb
xchg
in
sti
sarb
pushf
cmp
insl
or
mov
mov
jg
sti
push
or
adc
push
push
in
cmp
pop
add
inc
xchg
movsb
test
leave
mov
add
or
cmp
xchg
test
mov
dec
jl
jnp
repnz
fldcw
adc
pusha
jmp
in
test
rolb
sbb
insl
rorl
icebp
out
mov
ret
add
sbb
call
ljmp
or
cmpsl
inc
int3
hlt
adc
dec
test
mov
outsb
addr16
jne
mov
ss
mov
or
mov
sarb
testl
push
enter
push
ret
xor
or
andb
jb
cmp
test
insl
into
nop
mov
dec
lock
xlat
mov
push
push
push
test
cwtl
xor
aam
clc
in
xchg
add
jae
jno
pop
lods
jg
out
je
je
xor
inc
add
mov
cli
jp
push
inc
rclb
push
imul
addr16
jecxz
scas
loopne
sbb
cs
mov
cmp
cli
mov
out
pop
or
push
les
lods
cmp
inc
cmc
pop
loopne
aaa
ret
fwait
insl
and
xor
jl
gs
cwtl
push
hlt
lods
inc
sahf
push
js
cmc
pop
repz
lcall
int
and
or
stos
leave
std
repz
popa
or
and
cmp
mov
aad
push
xchg
push
pop
test
sbb
fldt
cli
pop
pmulhuw
fadd
sub
dec
push
rclb
jl
scas
popa
jb
aad
repnz
mov
mov
mov
xchg
inc
xor
rol
inc
lods
rol
shll
push
sbbb
stc
inc
int3
out
gs
fadd
int
popa
mov
or
int3
leave
or
jb
cld
lcall
mov
leave
flds
int
int
mov
sti
lret
call
xchg
into
inc
inc
and
loope
les
incl
sbbb
test
jmp
cmp
mov
jnp
pop
lcall
pop
pop
shrl
sbb
repz
adc
push
aam
sub
nop
insb
imull
or
mov
sbb
int3
lods
aas
jne
jbe
std
cld
xor
mov
mov
xchg
rcrl
jp
xchg
push
orb
sbb
adc
fldcw
sbb
sbb
test
pusha
lds
mov
ds
dec
in
aas
sahf
inc
mov
flds
ret
ljmp
call
sbb
int3
push
mov
cwtl
add
js
push
jge
push
add
push
push
push
mov
or
test
mov
int3
paddw
push
cmp
mov
cmp
xor
mov
shlb
je
je
test
mov
mov
out
dec
pop
and
sub
xchg
fistl
sbb
cmp
out
std
scas
sahf
mov
cmp
aam
cmp
aad
mov
mov
loop
or
mov
xchg
jge
cmpsb
cmp
push
cmpsb
and
inc
movsl
mov
das
and
popa
pop
enter
inc
shlb
insl
mov
xrelease
fcoml
push
jns
pop
cmp
push
push
test
push
jl
arpl
lret
imul
and
jae
adc
stos
mov
test
sbb
jmp
pop
cmp
xor
lock
or
fcoml
notb
jo
int
pop
mov
pop
add
pop
add
insb
mov
mov
cmp
pop
fadds
stos
cwtl
out
movsl
xchg
inc
aad
mov
add
aas
mov
adc
rorb
testb
movl
dec
pop
mov
cmp
jp
mov
sti
fwait
add
loopne
push
movntps
cltd
sub
loope
mov
ljmp
pop
jne
inc
xchg
mov
lret
dec
adc
mov
lock
rolb
add
adc
push
mov
out
mov
test
loop
push
imul
movsb
addr16
testl
add
xor
movsl
pop
xchg
aad
test
xor
dec
int3
push
and
xor
fldcw
xchg
std
or
jno
jl
jns
xor
fsubs
adc
and
cmpsl
xchg
mov
adc
pop
sbb
int
movsb
pop
ljmp
sbb
out
aas
rcr
sbbb
testl
push
and
loop
mov
sub
dec
jle
push
out
ficompl
scas
mov
jle
sahf
jg
pop
adc
or
push
xor
dec
mov
cmp
lcall
cmp
or
icebp
adc
xchg
in
fisubs
cmp
and
std
sub
pop
pop
imul
or
xor
mov
push
addr16
test
dec
fistpl
cli
test
std
aas
inc
inc
and
aam
mov
jae
lcall
xchg
xchg
js
imul
lds
popa
pop
inc
cld
xor
xor
cmp
outsl
sbb
push
stc
cmp
test
sbb
jo
xor
xor
repz
fisttps
jle
or
pop
nop
pop
pop
xor
xchg
mov
loop
aad
in
push
repz
stos
dec
aas
imul
xchg
xor
xor
lds
out
outsb
ljmp
ja
scas
mov
addr16
pusha
into
xor
and
or
insl
fadd
divb
adc
and
xchg
xchg
jmp
fs
pop
cwtl
mov
adc
inc
xchg
int3
pop
notb
subl
aaa
fs
jle
adc
push
ret
int
sbb
cli
jp
lahf
xor
add
jno
mov
sbb
testb
cmp
das
mov
add
je
jge
cmp
push
push
test
enter
or
out
or
out
into
add
sbb
and
std
mov
imul
pop
stos
scas
pop
mov
shlb
or
test
rcrl
add
jnp
in
pop
mov
sbb
xchg
into
xchg
stc
or
push
fwait
add
inc
ljmp
mov
xchg
xor
cs
adcl
sti
adc
addb
movl
mov
outsb
or
adc
adc
int
std
xor
lea
sbb
mov
push
cs
outsb
ja
les
sbb
out
adc
lahf
jle
daa
inc
fsubrl
test
pop
aaa
mov
enter
cmp
add
icebp
inc
fdiv
jp
sub
dec
sub
pop
ds
push
xorb
fiadds
pushl
sub
fdivs
jae
xchg
pop
jnp
jo
adc
push
push
test
addr16
lea
in
push
xchg
push
jnp
mov
idivl
testl
pop
pushf
push
sbb
xchg
ror
mov
in
cmp
fsubrp
xchg
or
jne
icebp
popa
loope
sbb
shrb
addr16
xor
sbb
and
rep
andb
dec
ret
imul
cmc
loope
sarl
dec
sbb
mov
into
pop
dec
xlat
js
adc
sub
in
jecxz
add
lea
dec
lods
jnp
jns
xchg
pop
jp
les
int3
sub
mov
dec
pop
inc
je
xorb
add
stos
inc
fwait
mov
subl
pop
sbb
xor
leave
pop
int
fsubr
insl
pop
dec
scas
mov
test
insb
leave
arpl
mov
inc
mov
in
leave
adc
std
xor
mov
mov
adc
push
insb
test
addr16
stc
sub
enter
test
gs
roll
mov
cmp
pop
jecxz
add
push
adc
notl
dec
lahf
mov
fwait
es
test
leave
sarl
cli
leave
inc
loopne
xor
and
ret
or
sub
stc
cmp
daa
pusha
jmp
cmp
inc
cwtl
leave
adc
or
negb
and
lock
ret
jne
mov
or
sbb
xor
mov
test
imul
arpl
jb
push
shrl
push
add
jl
adc
jg
test
test
push
bound
pop
fnstsw
or
xchg
rcrl
mov
loop
dec
out
repz
jecxz
mov
daa
xchg
in
arpl
jp
mov
aam
dec
fwait
outsl
xchg
loope
sbb
jo
mov
inc
mov
cli
xchg
cmp
sbb
mov
pop
adc
outsl
and
xchg
ja
leave
int
sbb
xor
push
add
sbb
push
and
xchg
daa
pop
rcrl
xchg
pushf
ret
push
gs
cmp
pop
xor
jns
cmp
adc
jle
loop
das
adc
pop
lahf
lods
jl
cmp
mov
cmp
test
nop
data16
addr16
xlat
pop
add
cmpb
ljmp
xor
into
mov
inc
pop
or
fwait
fs
mov
lock
mov
mov
cmpsb
test
adc
push
mov
aad
loope
out
jnp
dec
js
and
lret
jp
mov
jge
in
and
mov
hlt
push
insb
dec
jecxz
dec
pop
or
adc
xor
jbe
jl
mov
xchg
jns
inc
pop
sbb
pop
dec
subl
xor
push
cld
imul
pop
int3
fistpl
pop
sbb
imul
xchg
push
in
jns
xchg
jmp
dec
xor
leave
dec
insb
sub
add
add
add
inc
xchg
mov
add
fcoml
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
repnz
jne
cmpb
jne
mov
shr
rol
xchg
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
lds
