add
add
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
add
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
in
sub
decl
decl
test
mov
cmp
lahf
cmp
jne
mov
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
add
mov
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
add
adc
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
add
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
add
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
add
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
stc
push
inc
add
push
push
push
call
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
sbb
sub
cmp
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
outsl
and
add
add
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
sub
add
testb
je
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
add
lds
or
push
mov
add
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
add
push
or
adc
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
add
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
add
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
dec
inc
inc
add
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
cmp
leave
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
add
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
jge
inc
add
add
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
outsl
cmp
adc
insb
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
add
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
add
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
add
or
test
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
add
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
inc
add
push
push
push
add
push
call
and
jne
inc
add
test
cld
lea
call
mov
cmp
je
inc
add
push
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
add
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
adc
or
mov
push
call
pop
mov
call
inc
add
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
add
pushl
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
inc
add
add
jne
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
inc
add
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
daa
inc
add
mov
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
jno
inc
add
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
add
mov
dec
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
add
push
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
add
add
add
clc
ss
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
int
inc
add
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
inc
add
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
inc
add
call
lea
call
lea
call
cmp
jne
inc
add
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
aaa
inc
add
inc
add
or
add
or
add
lea
xor
add
test
inc
js
shlb
adc
pop
mov
mov
push
call
lea
add
movl
xor
add
add
add
and
mov
str
add
sbb
mov
add
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
add
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
add
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
inc
add
pop
mov
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
push
je
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
inc
ret
push
mov
cmpl
jne
xor
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
fldl
push
fstl
push
fldl
push
fstl
lea
fldl
mov
faddl
fldl
faddl
lea
fxch
push
mov
fstpl
fxch
push
fstl
push
fstpl
fxch
fstl
fstpl
fstpl
call
fldl
add
fstpl
xor
fldl
fstpl
jmp
fstp
fstp
fstp
fstp
mov
mov
lea
push
lea
push
push
call
fldl
fldl
add
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
fldl
fldl
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
add
cmp
jl
mov
fxch
fstl
pop
fxch
pop
fstl
pop
fxch
fsubp
fstpl
fsubrp
fstpl
mov
pop
ret
fstp
fldl
fstl
jmp
fstp
fldl
fstl
jmp
cmpl
jne
mov
test
je
incl
mov
test
mov
jne
ret
pushl
mov
movb
call
ret
push
mov
push
mov
test
jne
leave
ret
push
mov
mov
push
xor
cmp
movl
jne
mov
cmp
jne
push
push
add
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
pop
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
push
push
call
test
jne
mov
xor
mov
push
lea
mov
call
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
mov
push
push
push
call
test
js
mov
mov
mov
add
call
push
push
push
push
call
push
push
push
pushl
call
test
js
mov
mov
lea
push
push
call
test
lea
js
mov
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
jne
lea
call
lea
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
push
mov
mov
call
add
cmp
jl
jg
mov
cmp
jbe
mov
mov
mov
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
mov
call
add
je
sub
inc
and
pushl
pushl
pushl
pushl
pushl
push
lea
push
push
call
test
je
jmp
lea
call
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
push
xor
cmp
push
je
pushl
pushl
call
pushl
mov
pushl
call
mov
add
push
mov
call
pop
xor
pop
pop
pop
ret
mov
push
call
test
je
mov
push
call
test
je
mov
orl
jmp
push
mov
mov
test
je
mov
push
push
call
mov
test
je
andl
pushl
mov
call
pop
ret
push
lea
sub
mov
xor
mov
cmpl
mov
jge
test
push
push
je
andl
push
pop
mov
pop
sub
dec
xor
dec
sbb
dec
sub
or
inc
and
add
add
xor
call
test
js
mov
andl
test
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
andl
lea
push
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
testb
jne
testb
jne
lea
call
testb
jne
testb
jne
xor
pop
pop
mov
xor
call
add
leave
ret
pushl
lea
call
pushl
mov
lods
xor
add
add
call
pop
pop
lea
call
pushl
pushl
call
pop
xor
pop
inc
jmp
mov
add
call
ret
mov
test
je
mov
dec
push
mov
lea
mov
add
rorb
add
push
mov
mov
push
push
mov
call
test
pop
pop
jne
mov
andl
and
xor
or
jne
mov
pop
pop
ret
push
push
mov
test
je
cmp
jne
mov
and
or
jne
cmpl
jne
cmpl
je
pushl
mov
pushl
push
call
test
je
mov
pop
pop
ret
xor
jmp
mov
and
or
jne
mov
call
mov
jmp
mov
add
mov
call
mov
jmp
xor
jmp
push
mov
push
mov
push
push
push
lea
call
test
jne
mov
test
jne
mov
test
jne
mov
mov
mov
mov
lea
call
test
jne
test
jne
mov
mov
push
pushl
push
call
test
je
pop
pop
pop
pop
pop
ret
xor
jmp
pushl
mov
mov
call
mov
jmp
incl
jmp
pushl
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
xor
cmp
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
jne
mov
test
je
test
js
test
jne
add
cmpl
jne
test
mov
mov
mov
mov
jne
mov
mov
mov
pop
pop
xor
pop
ret
mov
test
lea
je
test
js
xor
jmp
mov
test
je
test
js
xor
jmp
mov
jmp
mov
jmp
push
mov
call
cmp
jne
mov
xor
jmp
mov
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
call
mov
mov
jmp
mov
test
je
mov
jmp
push
mov
mov
call
cmpl
je
mov
jmp
mov
mov
lea
push
push
call
mov
pop
movl
mov
pop
xor
pop
ret
mov
mov
lea
push
push
call
cmpl
jne
jmp
mov
cmp
jne
mov
cmp
je
xor
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
xor
push
mov
push
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
test
je
test
jne
mov
js
inc
add
jne
mov
call
mov
mov
mov
cmp
movb
mov
mov
mov
jne
mov
into
sbb
lea
call
test
je
xor
cmp
mov
xchg
inc
add
cmp
jne
lea
push
lea
push
sub
cmp
mov
mov
mov
jne
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
mov
mov
cmpb
jne
mov
mov
mov
mov
pushf
pop
inc
add
add
mov
and
cmp
jne
mov
mov
fs
inc
add
lea
push
push
call
cmp
mov
mov
jne
jmp
mov
mov
mov
mov
and
or
movl
jne
mov
call
mov
mov
push
mov
mov
mov
call
mov
push
push
call
mov
mov
add
push
lea
mov
mov
call
mov
add
cmp
mov
jne
mov
call
mov
aaa
inc
inc
add
mov
jmp
mov
push
mov
mov
call
mov
lahf
pop
inc
add
mov
mov
jmp
mov
mov
mov
push
call
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
mov
lea
call
mov
pop
leave
ret
int3
push
mov
mov
test
je
call
testb
movl
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
mov
mov
test
mov
jne
test
jne
movl
mov
test
jne
testb
je
push
call
add
mov
pop
pop
ret
lea
push
call
add
test
jne
push
call
add
jmp
push
mov
push
push
push
mov
mov
cmpl
jge
mov
andl
mov
push
call
mov
test
pop
jne
test
mov
jne
testb
jne
lea
mov
lea
call
xor
mov
call
andl
push
call
mov
test
pop
pop
pop
je
mov
push
push
call
lea
call
leave
ret
push
mov
push
mov
push
lea
push
lea
push
xor
push
pushl
mov
call
cmp
je
cmp
push
jne
xor
testb
je
mov
mov
mov
cmp
je
mov
mov
cmp
repz
add
jne
cmp
jne
cmp
jne
mov
pop
pop
leave
ret
lea
cmp
add
mov
test
jns
push
mov
call
cmp
je
mov
jmp
mov
mov
mov
call
cmp
jbe
pushl
mov
pushl
mov
pushl
call
xor
jmp
xor
jmp
xor
inc
jmp
mov
cmpb
jne
push
call
test
je
pushl
mov
pushl
push
call
ret
mov
cmpb
jne
mov
push
lea
call
test
je
mov
lea
call
xor
ret
push
mov
lea
call
mov
test
mov
je
add
push
call
test
pop
jne
push
call
pop
pop
ret
push
mov
sub
pushl
andl
mov
lea
movl
call
mov
test
jne
push
push
mov
lea
cmpl
push
je
xor
call
lea
mov
test
je
mov
lea
pushl
push
call
xor
mov
call
xor
mov
call
mov
test
mov
je
mov
push
call
test
jne
mov
mov
call
mov
test
jne
lea
mov
test
je
mov
mov
orl
mov
mov
and
jne
orl
cmpl
je
test
jne
call
add
mov
andl
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
mov
jne
and
neg
sbb
and
push
call
call
mov
jmp
mov
mov
lea
call
pop
pop
xor
pop
leave
ret
push
mov
push
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
andl
push
mov
push
mov
test
mov
je
push
call
pop
movl
mov
call
test
je
xor
cmp
jne
cmp
je
mov
cmp
je
cmp
je
push
call
pop
xor
pop
pop
leave
ret
test
je
movzwl
mov
mov
mov
incw
movzwl
cmp
je
test
je
cmpl
je
push
call
pop
xor
inc
jmp
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
lea
call
mov
lea
call
mov
call
mov
test
jne
mov
xor
cmp
mov
mov
je
push
call
pop
movl
push
lea
call
lea
push
push
mov
call
test
jne
call
pushl
mov
call
cmpl
pop
jne
cmpl
mov
jne
cmp
je
inc
mov
mov
movl
cmpl
jne
mov
sub
add
push
pushl
call
pop
pop
xor
cmp
je
cmp
je
pushl
call
pop
mov
cmp
je
mov
push
call
lea
call
cmp
je
mov
test
jne
cmpl
jne
lea
call
lea
call
pop
pop
xor
pop
mov
pop
ret
cmpl
je
andl
decl
jmp
movl
cmpl
je
decl
pushl
lea
call
mov
jmp
push
mov
sub
push
mov
push
push
mov
call
test
mov
je
mov
sub
mov
mov
mov
sub
pop
pop
mov
mov
pop
leave
ret
testl
je
mov
push
pushl
pushl
call
xor
ret
movl
jmp
push
mov
and
sub
push
push
push
lea
call
mov
lea
mov
mov
xor
mov
add
mov
push
mov
lea
push
mov
call
mov
test
jne
mov
cmp
jge
mov
xor
mov
and
inc
shl
mov
shr
shl
not
and
and
cmpl
je
lea
call
lea
push
mov
call
cmp
je
xor
inc
push
push
push
pushl
call
mov
andl
test
jne
mov
andl
test
jne
push
push
lea
push
call
lea
push
call
pop
pop
pop
mov
pop
ret
push
mov
push
mov
push
mov
call
test
je
push
mov
mov
mov
call
test
mov
je
mov
push
call
mov
test
je
mov
push
call
call
pushl
mov
push
call
mov
push
mov
call
mov
test
mov
je
mov
push
call
add
call
mov
pop
leave
ret
xor
jmp
push
mov
push
push
mov
cmpl
mov
mov
jne
call
mov
push
pushl
lea
push
mov
call
mov
test
mov
je
cmpl
push
push
jne
mov
mov
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
andl
push
lea
call
mov
mov
lea
push
push
call
test
js
mov
test
je
xor
cmp
jne
inc
mov
push
push
push
push
call
lea
call
xor
leave
ret
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
xor
cmp
mov
je
lea
call
mov
mov
call
push
push
push
push
push
pushl
mov
call
mov
lea
call
pop
mov
pop
leave
ret
push
andl
test
mov
je
mov
push
call
mov
test
je
mov
push
call
cmpl
jne
mov
pop
ret
push
mov
and
sub
cmpl
push
push
jne
pop
pop
mov
pop
ret
andl
lea
add
push
push
mov
movl
call
mov
mov
test
jbe
push
pop
mov
mov
mov
push
call
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
shlb
or
je
mov
test
jne
mov
test
jne
pop
mov
pop
ret
mov
push
push
call
jmp
mov
call
cmpl
jne
xor
inc
cmp
jne
cmpb
jne
ret
xor
ret
push
mov
push
mov
push
push
mov
call
test
jne
cmp
jne
mov
call
mov
call
test
je
mov
call
cmpb
jne
xor
jmp
mov
push
push
push
call
mov
add
in
add
ret
fldcw
lock
pusha
lock
les
lock
add
stos
add
mov
rclb
add
jle
fwait
mov
jns
add
cli
xchg
jnp
add
add
mov
fs
add
jns
mov
xchg
add
popf
roll
aam
stos
idivl
add
in
add
push
push
push
push
push
push
push
push
push
push
call
aam
cltd
add
lods
mov
add
ja
ret
add
add
pop
jl
clc
add
outsl
orb
lods
add
add
add
add
cmc
js
add
mov
pop
mov
fldl
mov
mov
lea
pop
popl
push
push
push
push
push
push
call
add
add
stos
incb
data16
loopne
add
mov
insb
xchg
add
add
add
les
mov
jne
add
pop
scas
icebp
test
in
lods
lahf
add
jmp
add
ror
test
add
xchg
lret
add
add
add
mov
add
add
movl
add
add
pop
push
push
lea
push
push
push
push
push
push
lea
push
call
shrb
add
add
cmc
test
add
jl
add
test
mov
add
add
add
lahf
mov
add
mov
test
pop
in
stc
add
int3
add
shrl
add
jp
jl
xchg
pop
mov
lea
pop
push
push
push
push
push
lea
push
push
push
push
call
add
add
xchg
mov
add
add
int3
add
rcl
add
sti
out
add
pop
push
ljmp
xchg
mov
jp
add
aad
add
mov
mov
movsl
add
add
add
jo
fldl
mov
add
lret
stc
add
mov
lea
pop
push
push
push
lea
push
push
push
push
push
call
push
add
add
add
pop
add
add
add
roll
add
notb
ret
scas
mov
out
add
jae
lea
add
xchg
add
lods
test
lock
imul
add
add
add
std
add
iret
insb
loope
mov
cli
in
lcall
testl
popa
sbb
push
push
push
push
push
call
add
add
add
stos
add
std
jo
into
in
nop
jno
scas
add
add
add
add
add
stc
insb
add
mov
add
jne
data16
add
add
push
stos
addb
cli
xchg
adc
mov
push
call
add
enter
add
in
mov
add
add
test
or
add
add
out
mov
arpl
push
add
add
add
popf
sahf
lcall
pop
call
push
push
push
push
push
push
lea
push
push
call
pop
mov
cmpsl
outsl
add
les
mov
lds
add
sbb
loopne
add
push
pop
fadds
jb
add
gs
add
push
jmp
add
je
lcall
mov
lea
pop
push
push
push
push
call
mov
add
ret
add
add
add
add
xchg
mov
fcmovu
int
sarb
mov
lods
xchg
js
add
add
add
fwait
in
add
std
mov
xchg
into
mov
fwait
mov
add
cmpsl
movb
scas
aam
add
fadds
test
xchg
movb
add
imul
pusha
or
call
push
lea
push
lea
push
push
push
push
push
push
call
jo
mov
addb
push
loope
rorb
mov
jge
faddl
jge
cltd
add
pop
add
mov
fidivs
add
add
aam
add
push
cld
jmp
jge
sahf
jmp
jl
popl
add
in
push
mov
mov
lea
pop
jmp
push
push
push
push
push
lea
push
push
lea
push
push
push
call
add
add
mov
cmpsb
add
stos
fadds
mov
js
jl
rcrl
xchg
arpl
pop
insb
add
mov
in
add
clc
pop
add
imul
test
in
test
mov
add
popa
add
rorb
addb
push
push
pop
add
pop
ret
mov
push
push
push
push
call
pop
fbld
lcall
imul
add
fsubs
add
lret
add
leave
aad
pushf
mov
add
add
add
lock
mov
jbe
jnp
add
jbe
add
loopne
mov
add
add
pop
mov
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
add
popf
jle
add
lahf
add
add
int3
icebp
rolb
add
jecxz
push
add
mov
mov
add
jmp
push
add
mov
add
testb
jns
add
out
shrb
add
scas
add
add
ja
mov
mov
rcr
gs
lea
pop
add
push
push
lea
push
call
add
jnp
add
mov
jno
iret
add
jae
mov
lods
pop
add
fiadds
add
add
xlat
fwait
jl
add
stos
mov
ja
push
add
push
mov
pop
int3
test
arpl
add
imul
fldl
add
add
icebp
imul
ret
add
add
add
push
lea
push
call
addb
addl
mov
add
add
pop
popa
outsl
sti
les
add
loopne
add
cmpsb
add
xchg
add
aad
add
sarl
jle
rcrb
xchg
add
mov
mov
popf
add
in
fnstsw
pop
jmp
std
add
add
add
jecxz
add
add
mov
loopne
lret
mov
cld
mov
fildl
add
push
push
jae
hlt
lea
pop
mov
push
push
push
push
push
lea
push
call
jnp
push
add
jno
add
shll
add
add
add
rclb
fld
pop
mov
scas
add
add
push
jecxz
add
pop
movsl
jmp
aam
in
in
add
add
in
lcall
leave
add
scas
jnp
rcrb
add
stos
scas
in
add
add
add
add
pop
xor
push
push
push
push
push
lea
push
push
push
call
jmp
add
fildl
add
std
add
fstps
pop
add
popfw
cmpsl
in
add
ljmp
add
add
aad
lcall
int
mov
add
divl
push
mov
mov
mov
mov
lea
pop
add
push
push
inc
push
sub
add
rol
add
sub
shl
pop
sub
sub
xor
add
pop
push
push
push
push
push
lea
push
call
in
rcr
fsub
push
xchg
add
push
stc
add
add
stc
loopne
movl
stos
nop
out
int3
test
add
xchg
adcb
stc
mov
lea
pop
pushl
push
lea
push
push
push
push
push
call
pushf
add
mov
js
add
add
add
test
add
idivl
loop
cld
jne
xchg
push
lods
xchg
jl
flds
hlt
out
add
scas
add
add
add
add
xchg
mov
pop
xchg
jnp
mov
imul
add
push
lea
push
push
push
push
push
lea
push
lea
push
push
push
call
enter
cmpsl
into
int3
add
fcmovbe
mov
mov
pushf
lds
add
js
add
xchg
mov
cltd
jns
add
add
cltd
std
fldl
loop
add
mov
xchg
js
xchg
roll
icebp
jl
jno
add
mov
sarl
lahf
mov
lea
pop
mov
push
lea
push
push
push
push
push
push
lea
push
call
add
xchg
stc
push
jo
add
mov
add
loopne
faddp
add
add
add
mov
pop
loopne
imul
addl
add
add
mov
lea
pop
movl
push
lea
push
lea
push
call
sub
add
nop
add
rorb
add
addl
add
push
mov
out
cmc
ljmp
cwtl
pop
movsb
mov
cltd
add
fildl
insb
push
stc
sti
add
loope
add
mov
lea
pop
lea
push
push
lea
push
push
call
roll
xchg
addb
mov
stos
out
mov
xchg
add
in
addb
add
add
pop
cltd
add
add
add
in
bound
cmc
imull
add
xchg
push
mov
add
add
stos
lods
arpl
mov
shl
add
testl
add
add
lds
pop
pushl
pushl
push
push
lea
push
push
call
inc
add
add
add
fwait
out
imul
enter
pop
mov
gs
mov
add
testb
movb
jns
add
add
adc
jae
add
cld
lea
pop
call
push
lea
push
push
call
lret
add
rcl
fidivl
cld
orl
push
jp
stos
add
add
add
lret
jge
push
fistpl
cmpsl
ret
mov
clc
lea
mov
pop
repnz
xor
add
hlt
lea
pop
pushl
push
push
push
push
call
fildll
add
push
jp
mov
add
add
xchg
jae
pusha
jno
rorb
mov
in
add
add
test
enter
pusha
rorb
pop
pushl
push
push
lea
push
push
push
push
call
mov
lods
mov
shl
mov
xchg
in
add
lods
jae
not
add
stos
loopne
in
in
add
add
fiaddl
add
mov
add
add
scas
add
add
iret
xchg
add
xchg
jl
mov
add
add
fcmovne
lret
xchg
add
incb
add
pop
lret
test
mov
fstpl
add
mov
lea
pop
call
push
push
shl
sub
push
sub
add
add
sub
sub
pop
shr
pop
push
push
push
push
call
cmpsl
add
add
pusha
in
add
add
in
add
add
pop
push
add
xlat
jae
cld
notb
add
add
lahf
bound
add
add
repnz
pop
pushl
push
push
push
push
push
lea
push
call
add
add
nop
xchg
out
test
in
out
add
shrb
mov
pop
push
add
jle
add
fnstcw
lret
cltd
add
add
xchg
add
xchg
jo
fs
loope
cld
jo
add
enter
add
add
add
pop
mov
mov
add
add
add
insb
mov
lea
pop
call
push
push
push
push
push
push
push
call
sti
add
pop
add
mov
add
in
roll
lcall
hlt
push
addr16
roll
add
fcoml
push
add
add
add
je
int
push
mov
jae
mov
add
fstps
jne
mov
test
hlt
iret
lea
add
mov
lea
pop
push
push
push
add
push
or
inc
add
rol
dec
sub
add
inc
sub
pop
lea
pop
push
push
lea
push
push
call
add
cmc
push
imul
add
push
stc
rcl
push
add
sbbl
push
add
stc
jge
add
pop
lds
clc
loope
push
add
add
add
mov
mov
lods
jle
mov
mov
add
lods
pop
mov
mov
add
popa
add
add
shrl
lea
pop
push
push
lea
push
push
push
push
lea
push
push
push
push
push
call
add
in
iret
add
add
add
add
add
test
ja
add
add
jl
popf
loopne
add
nop
outsl
mov
les
gs
out
test
add
xchg
hlt
movl
int3
lea
pop
push
call
push
push
push
call
xchg
add
pushf
add
xchg
xchg
enter
loopne
call
add
stos
test
cltd
push
add
nop
shr
int
mov
outsl
add
mov
add
add
jecxz
add
jo
mov
sahf
xchg
add
cld
lea
pop
mov
push
push
push
push
lea
push
push
lea
push
call
add
loopne
stc
les
add
jns
xchg
movb
add
test
add
int
loopne
add
xchg
add
pop
sahf
mov
mov
push
add
outsl
fiaddl
add
add
aad
jnp
mov
push
add
mov
mov
lea
pop
push
push
push
push
lea
push
push
push
push
push
call
add
jnp
je
add
add
add
add
jne
add
add
cmpsb
data16
mov
add
add
xchg
add
add
movsb
add
mov
add
xchg
arpl
add
sahf
add
int3
popa
add
add
sarl
mov
lea
pop
push
push
push
lea
push
push
call
icebp
add
xchg
add
mov
add
cmpsl
add
fs
mov
idivl
jmp
les
bound
add
xchg
xchg
add
jno
xchg
xchg
xchg
popf
movsl
add
add
cmc
cli
pop
scas
add
add
fildl
int
push
lods
addb
add
add
lds
out
add
pop
mov
add
push
push
push
lea
push
call
mov
movl
add
xchg
push
mov
add
push
mov
icebp
add
add
add
in
les
xlat
push
shl
popa
mov
std
mov
lahf
lahf
push
mov
add
mov
arpl
mov
add
mov
pop
mov
imul
jecxz
int3
ljmp
lea
pop
add
push
push
push
lea
push
push
call
push
add
outsl
add
xchg
out
add
clc
add
imul
add
mov
idivl
pushf
je
add
add
lods
pop
lret
rolb
push
pop
popf
add
sahf
mov
mov
mov
js
jl
jge
imull
lds
add
add
lods
mov
lea
pop
add
push
push
push
push
lea
push
lea
push
call
add
lea
les
shrl
jb
push
add
clc
les
jecxz
sti
add
sti
aad
jge
xchg
in
xchg
mov
push
sti
mov
jmp
add
lock
mov
lea
pop
mov
push
push
lea
push
push
lea
push
lea
push
push
call
out
add
andb
add
add
add
cmpsb
add
add
pop
fcompl
cmpsl
add
add
jnp
push
outsl
pop
add
mov
add
mov
jno
add
in
add
add
add
jae
add
lea
jne
andl
jl
mov
push
out
hlt
add
jl
mov
lea
pop
xor
push
lea
push
push
push
push
push
call
out
mov
lret
jns
cmc
lret
mov
test
cli
add
add
xchg
clc
add
test
in
imul
adcl
out
push
cwtl
fimuls
pop
add
push
lea
push
push
push
push
lea
push
push
push
push
call
pop
add
cmpsb
mov
xchg
mov
repnz
add
faddl
push
icebp
clc
lds
loop
add
in
test
cmc
add
imul
movsb
add
into
enter
jge
add
add
add
jo
add
addr16
push
stos
lods
add
jp
pop
xchg
mov
lea
pop
add
push
lea
push
push
lea
push
push
lea
push
lea
push
push
push
call
push
add
add
loop
mov
pop
sarb
arpl
push
add
test
loope
mov
add
rcl
aad
xchg
fistps
ficoms
jnp
jl
add
scas
add
ljmp
lea
test
test
add
mov
icebp
add
add
add
and
push
push
push
push
push
push
push
lea
push
lea
push
call
arpl
ljmp
fiaddl
cmpsb
xchg
add
push
std
add
clc
add
add
pop
mov
pop
mov
cwtl
add
add
push
mov
pop
pop
pop
add
add
mov
popf
lret
mov
add
lea
movsb
add
les
inc
or
pop
jae
push
lea
push
call
in
pusha
add
add
xchg
imul
sbbb
add
add
call
push
int3
loopne
add
xlat
add
add
int3
jmp
adcl
fcomps
cld
lea
pop
xor
push
push
push
call
push
push
pushf
ljmp
add
add
pop
popa
out
add
xchg
hlt
cld
ja
add
add
add
pop
push
fiaddl
add
jp
sahf
push
loope
nop
fisttpll
jge
add
push
add
jb
add
lahf
out
cmpsb
jbe
pushf
add
enter
add
popa
aam
add
mov
add
pop
add
push
lea
push
push
call
lods
nop
add
mov
push
jo
out
icebp
aam
xlat
xchg
add
popf
add
add
mov
je
jne
add
jo
push
aam
sti
add
add
lret
cwtl
add
mov
pusha
data16
jnp
ja
add
clc
add
add
add
loope
add
lea
pop
add
push
push
lea
push
push
call
repnz
add
mov
jbe
loop
add
clc
scas
jns
rolb
lea
push
mov
popl
fxam
sti
add
push
lea
pop
popa
jo
aam
add
sti
add
jno
cmpsl
mov
xchg
out
sar
movsb
mov
jecxz
arpl
mov
hlt
lea
pop
pop
mov
xor
push
lea
push
push
lea
push
push
push
push
call
fwait
lcall
mov
insb
jmp
jae
add
xchg
add
mov
add
add
add
lret
jnp
add
jae
scas
pop
jmp
xorl
add
shrb
add
mov
mov
sahf
cmc
mov
lea
pop
push
push
push
lea
push
push
call
add
pop
fsubs
out
add
in
outsl
add
lret
in
lods
filds
jl
mov
add
insb
imul
add
cli
leave
add
jecxz
mov
mov
lret
mov
lea
pop
mov
xor
push
push
lea
push
call
add
iret
mov
mov
add
mov
cmpsl
add
fdiv
pop
ror
lock
out
scas
add
mov
add
add
iret
push
mov
notl
xchg
stos
fildl
add
jb
mov
cld
lea
pop
sub
pop
push
ror
add
shl
pop
rep
push
lea
push
push
lea
push
lea
push
push
call
js
clc
jb
shll
andl
xchg
push
add
cli
add
jmp
add
fs
add
add
add
add
add
mov
sarb
movsb
xchg
movl
movsb
xchg
add
pop
add
inc
push
add
add
mov
sbb
mov
push
inc
pop
add
push
push
push
push
push
push
push
push
lea
push
call
pushf
add
int3
test
fwait
add
test
pop
xchg
stos
add
lcall
mov
cmc
iret
add
repnz
xchg
cmc
ret
jmp
jo
pop
add
mov
lea
pop
add
add
push
push
push
lea
push
call
mov
add
xchg
mov
cli
jne
lcall
aad
mov
clc
add
stos
xchg
mov
movsl
mov
mov
rolb
add
int3
ja
add
fstp
add
add
mov
hlt
jmp
insb
out
push
xorl
xchg
mov
add
mov
lea
pop
mov
xor
push
lea
add
sub
pop
mov
xor
push
add
sub
pop
mov
xor
push
lea
push
lea
push
push
lea
push
lea
push
call
lods
add
jnp
add
push
mov
adc
addl
add
test
add
mov
add
mov
add
add
add
addl
fcomps
sbb
ret
ljmp
ja
lret
inc
lea
push
lea
push
push
push
push
push
call
rcr
add
add
cltd
js
add
out
add
add
movb
add
pop
xchg
ljmp
sahf
sarl
add
shrl
xchg
cmc
ja
add
sti
add
call
push
xlat
out
jge
int3
add
into
xlat
pushf
push
cmc
add
les
pop
mov
push
push
sub
xor
push
xor
add
sub
add
pop
xor
shr
inc
add
pop
push
add
pop
pushl
call
push
push
push
push
push
push
push
lea
push
push
push
call
add
add
add
jge
lock
cld
repnz
add
pop
pusha
lods
push
mov
addb
stc
int
out
mov
fistl
mov
mov
add
add
insb
add
add
rolb
add
mov
add
scas
add
add
mov
lea
pop
push
push
push
add
rol
push
sub
add
add
shl
rol
sub
add
add
dec
pop
dec
pop
push
push
call
popf
jno
aad
add
stos
leave
add
arpl
pop
add
add
add
add
mov
cwtl
in
push
push
ja
in
fldl
add
add
test
add
mov
add
jo
out
scas
add
add
jae
add
add
add
mov
xchg
mov
mov
lea
pop
push
push
inc
ror
lea
rol
pop
push
call
push
push
push
lea
push
push
call
add
lods
add
mov
xchg
jle
mov
loope
add
pop
mov
add
int3
add
add
call
movb
add
add
scas
push
mov
pop
cmpsl
imul
mov
hlt
lea
pop
mov
push
push
push
push
call
mov
notl
add
mov
add
flds
add
scas
lods
loopne
xorb
xchg
jecxz
add
ja
xorl
add
fcmove
mov
xchg
add
xchg
in
out
stc
push
jle
jecxz
add
aad
jmp
add
add
stc
add
pop
push
push
ror
sub
pop
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
jmp
push
lcall
faddl
int3
scas
add
xchg
mov
sahf
jno
jecxz
xlat
add
add
movsl
imul
lea
jl
addr16
stos
cltd
mov
lea
pop
mov
push
lea
push
push
lea
push
call
add
mov
ja
add
add
add
add
push
mov
xchg
cmpsl
xchg
sahf
ja
add
cmpsl
stos
mov
add
push
pop
out
add
mov
mov
pop
add
fadds
mov
lea
pop
add
push
lea
push
lea
push
push
call
mov
mov
lods
add
div
jecxz
add
add
add
pop
pop
add
add
mov
js
test
add
in
mov
stos
add
pusha
jnp
in
add
xchg
lret
mov
roll
mov
lea
pop
add
add
push
shl
pop
mov
push
push
push
push
lea
push
push
push
push
call
int3
out
add
loope
mov
add
addl
push
fidivrl
rcrl
fiadds
leave
aad
test
add
add
jae
mov
cmpsb
mov
xchg
add
mov
jmp
cli
add
int3
mov
kmovb
add
add
roll
std
mov
pop
add
mov
shll
jno
mov
lea
pop
xor
push
lea
push
push
push
lea
push
push
push
push
push
push
call
mov
add
lock
xchg
shl
push
mov
lcall
jle
add
add
adcb
mov
scas
lds
lods
in
lret
lret
jno
add
lods
faddl
add
add
lock
fwait
add
fs
lea
pop
add
push
push
push
push
lea
push
push
call
xchg
add
jle
add
add
mov
mov
in
add
add
loopne
xchg
leave
jbe
pop
arpl
add
add
pop
jle
gs
add
test
add
push
negl
popf
popl
sahf
ret
add
jo
out
mov
pushf
add
int3
mov
sbb
jne
push
push
push
push
push
push
push
lea
push
push
call
xchg
xchg
rol
stos
repnz
add
add
testb
addb
movsb
lret
add
add
add
xchg
add
add
add
add
lock
test
ja
mov
lea
pop
push
push
not
lea
pop
mov
xor
push
shl
ror
pop
add
push
push
lea
push
push
call
xchg
add
faddl
in
add
in
add
mov
jle
mov
int
add
xchg
xorl
lods
xchg
add
aam
stc
mov
mov
ja
add
add
js
add
shlb
imul
add
mov
add
add
mov
lea
pop
pop
push
rol
not
pop
mov
push
push
push
push
push
push
push
push
push
call
add
insb
stos
cmpb
test
pop
fldt
add
add
cmpsl
icebp
jge
add
jo
ret
mov
push
loopne
mov
add
add
add
addr16
jl
scas
pop
orl
data16
add
icebp
test
mov
add
pop
xor
push
push
push
push
lea
push
push
push
push
call
xchg
add
add
mov
jne
add
mov
loope
cmpsw
xchg
add
add
scas
into
mov
fsubs
add
jle
pop
add
add
push
sahf
repnz
or
les
les
shl
pop
rep
push
pop
mov
xor
push
ror
sub
add
pop
or
je
push
inc
pop
mov
xor
push
lea
pop
mov
xor
push
dec
dec
pop
add
add
push
lea
pop
push
mov
xor
push
push
push
push
lea
push
call
push
xchg
outsl
icebp
pushf
lahf
je
add
loope
scas
add
add
cli
out
mov
lods
add
jns
cmpsb
add
xchg
add
rclb
push
test
add
cwtl
mov
stos
add
mov
lea
pop
add
push
lea
push
lea
push
lea
push
call
sti
fadd
pop
mov
jecxz
lods
add
mov
clc
add
fbld
push
arpl
cmc
mov
call
add
mov
add
add
pop
add
int3
lea
pop
pop
push
lea
push
push
push
push
call
rolb
repnz
add
mov
xchg
push
xchg
pop
add
add
call
add
add
jae
sahf
jmp
add
fiaddl
movb
add
xchg
add
add
jp
mov
lea
pop
rep
mov
xor
push
sub
not
xor
pop
or
je
mov
push
ror
add
pop
add
add
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
mov
adc
mov
add
mov
mov
test
jo
popa
ja
fsts
add
call
add
movl
gs
add
mov
fisubs
repnz
fcmovne
int3
add
mov
push
popa
ja
add
mov
lea
pop
rep
push
lea
push
push
call
fucom
mov
pop
add
push
jnp
add
add
add
leave
xchg
jl
loope
mov
xlat
add
mov
lock
stos
hlt
add
ret
pop
pop
push
add
mov
jle
xchg
int
jp
push
add
mov
movsl
add
fcmove
push
addr16
pop
push
push
ror
not
lea
push
and
add
dec
sub
shl
pop
pop
push
push
push
push
push
call
push
mov
addr16
add
push
add
add
mov
add
imul
add
push
out
jl
add
rolb
mov
mov
je
mov
add
jle
fmull
mov
push
lea
shr
xor
pop
mov
mov
push
push
push
push
push
call
test
add
add
rolb
add
jl
test
add
out
jmp
add
add
neg
sahf
jno
add
add
add
add
jnp
add
add
push
mov
add
add
add
add
arpl
mov
lea
pop
jmp
push
shl
pop
push
push
shl
not
pop
mov
push
dec
add
shl
pop
add
push
push
push
push
lea
push
push
call
jle
add
leave
add
add
fadds
iret
jecxz
xchg
imul
jecxz
out
add
stc
add
clc
add
hlt
add
cli
add
add
mov
in
mov
cwtl
mov
xchg
in
aad
frstor
pusha
mov
add
push
pusha
les
add
leave
js
add
mov
lea
pop
push
push
push
push
call
filds
mov
add
and
mov
add
faddl
mov
add
nop
add
jno
cli
mov
add
popf
xchg
lret
add
add
les
push
sub
shl
pop
push
push
xor
add
pop
mov
push
add
pop
pop
push
rol
sub
pop
pop
push
push
push
push
push
lea
push
push
push
call
roll
pop
mov
fadds
add
pop
cmpsb
sti
mov
fidivl
add
push
into
pop
cmc
add
stos
add
ret
mov
ficoms
add
xchg
nop
add
fldl
je
add
jbe
mov
add
add
hlt
add
add
imul
jbe
push
fwait
leave
mov
lea
pop
pop
push
lea
push
push
push
push
push
push
push
push
lea
push
call
add
jbe
in
push
sti
add
cmc
pop
in
add
xchg
ret
fiaddl
lret
add
add
cmpsl
lcall
add
stos
aam
add
add
fdivrp
clc
push
call
add
out
add
loopne
stos
mov
sti
call
mov
fmull
push
not
shl
rol
pop
leave
push
lea
pop
ret
push
rol
rol
sub
pop
push
push
push
push
push
call
rcr
bnd
xchg
add
mov
add
test
lret
add
int
out
std
mov
lds
mov
movsb
add
xchg
roll
decb
jmp
add
faddl
mov
jnp
mov
lea
pop
mov
add
push
xor
sub
pop
push
push
push
push
push
lea
push
lea
push
push
push
call
add
xlat
mov
roll
add
jae
mov
add
lock
add
js
xchg
roll
icebp
push
jle
add
push
sahf
add
iret
fdivrs
add
insb
xchg
out
add
add
cmpsb
pop
mov
sbb
add
mov
jecxz
shll
stos
jne
test
add
std
mov
lea
pop
push
push
lea
push
push
lea
push
push
push
call
mov
jns
into
jle
push
xchg
arpl
mov
add
add
add
flds
add
sar
add
add
leave
roll
lds
icebp
mov
add
test
add
pop
push
push
inc
pop
movl
addl
push
shl
pop
test
je
push
add
pop
mov
push
push
push
lea
push
call
pusha
in
test
pop
add
add
pop
test
jnp
jnp
popa
add
jecxz
xchg
mov
xchg
jne
call
add
mov
add
mov
xchg
mov
les
push
push
push
push
call
mov
imul
scas
icebp
in
pop
add
scas
mov
pop
add
add
scas
stos
mov
stos
fdivrs
jb
sahf
add
popf
add
add
pop
mov
add
cmpsb
test
jo
mov
lea
pop
pop
pop
push
push
push
lea
push
push
push
push
call
aad
mov
mov
add
add
fisubs
pop
fwait
arpl
shlb
mov
stc
je
mov
add
add
add
add
cli
push
add
mov
ficoml
add
hlt
push
clc
orb
fwait
add
push
pusha
lret
push
test
int3
lea
pop
pop
push
push
push
push
push
push
lea
push
push
call
xlat
push
jl
xchg
pop
add
data16
xchg
add
pusha
arpl
add
jmp
icebp
rolb
test
mov
add
fwait
imul
jo
add
in
push
pusha
add
mov
lea
pop
leave
push
push
call
lock
add
nop
aam
call
add
jae
jl
mov
add
add
add
add
fldl
mov
add
addb
jmp
pop
add
add
push
cmpl
pop
ret
push
push
not
pop
mov
add
push
shl
ror
inc
dec
pop
push
push
pop
push
push
ror
shl
pop
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
push
call
in
jecxz
jo
mov
push
jne
enter
mov
addl
fsts
add
add
add
mov
ja
mov
add
add
add
stos
add
add
int3
mov
test
xchg
lcall
pop
enter
int3
add
add
mov
lea
pop
push
push
pop
testl
addl
push
inc
sub
sub
pop
push
push
shl
pop
call
push
add
pop
mov
push
xor
lea
inc
pop
pushl
push
not
shr
pop
push
push
push
add
pop
call
cmpl
jne
push
push
push
call
mov
add
xchg
add
add
add
mov
fstp
add
in
add
add
xchg
mov
add
xchg
add
xchg
add
gs
icebp
xchg
cmpsl
add
mov
lods
add
add
xchg
add
faddl
add
popa
or
pop
push
shl
rol
lea
pop
pop
push
lea
xor
pop
pop
push
pop
pop
leave
push
push
push
push
push
push
push
push
call
add
add
mov
out
add
lock
add
leave
add
loope
je
add
jl
test
movsl
add
add
mov
add
arpl
enter
push
xchg
mov
add
add
add
lcall
add
fildl
add
popa
and
add
push
push
sub
pop
mov
add
push
sub
pop
push
push
push
push
call
xchg
push
mov
in
mov
add
push
movsb
ljmp
push
add
flds
add
mov
add
fdivp
jmp
mov
mov
loope
add
pushf
add
add
add
add
add
fsts
add
test
add
add
roll
mov
lea
pop
push
push
ror
shr
shl
pop
push
push
xor
rol
not
shl
pop
push
push
push
lea
push
push
call
bound
pop
movl
fistpll
xor
gs
pop
in
add
add
mov
add
add
mov
add
add
jno
out
xchg
insb
add
stos
roll
mov
add
add
mov
lea
pop
movl
push
push
rol
add
rol
pop
call
push
add
sub
lea
pop
push
push
push
push
push
push
push
push
lea
push
call
pop
add
xchg
add
add
mov
mov
mov
xchg
jbe
add
in
ljmp
add
add
mov
mov
pop
add
add
jle
push
add
push
lahf
add
add
je
mull
add
mov
lea
pop
call
push
shl
rol
pop
subl
cmpl
jne
push
add
add
pop
pop
push
dec
xor
pop
pop
push
push
push
call
add
push
add
push
sti
jl
insb
add
mov
scas
lods
fstpt
std
in
add
imul
add
sahf
cli
jno
mov
add
cli
add
out
addl
add
std
add
add
scas
add
cld
add
std
ljmp
out
jle
mov
lea
pop
pop
push
push
lea
push
lea
push
push
push
call
push
jno
mov
add
imul
loopne
add
add
scas
std
add
je
pop
mov
add
lock
lock
lea
pop
pop
push
push
push
call
data16
xchg
pop
add
add
add
add
push
push
add
leave
mov
add
pushf
imul
mov
add
cmc
add
pop
pop
mov
push
std
add
add
mov
add
add
scas
imul
add
xchg
arpl
addr16
mov
outsl
mov
lea
pop
leave
ret
push
add
shr
pop
push
mov
push
ror
rol
xor
ror
pop
add
push
push
push
lea
push
push
lea
push
push
call
add
add
stc
out
ja
add
add
lret
add
les
add
add
mov
movl
lcall
mov
aad
add
mov
fmull
push
dec
lea
pop
push
push
push
push
push
lea
push
call
add
add
cltd
xchg
add
push
add
push
add
std
std
add
xchg
test
aam
pop
add
xlat
mov
mov
test
add
add
sbbl
add
pop
add
add
in
imul
gs
imul
mov
mov
mov
lea
pop
push
mov
push
push
push
push
push
call
add
lods
push
jp
add
clc
fisubrs
fnstenv
xlat
jge
add
xchg
js
aad
add
add
xchg
pusha
mov
xchg
add
add
add
int3
jno
add
add
cltd
out
in
mov
mov
iret
add
mov
add
pushf
add
lea
pop
lea
push
lea
pop
sub
push
shr
sub
pop
mov
push
sub
sub
lea
shr
pop
shr
add
push
ror
xor
inc
dec
pop
mov
mov
push
add
xor
pop
add
add
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
mov
loopne
add
add
jne
add
call
sti
in
add
pop
mov
sahf
loopne
in
add
ja
mov
pop
faddl
cmpsb
mov
add
shl
jne
ljmp
xchg
add
lea
pop
mov
mov
push
push
call
add
pop
adcl
mov
mov
add
add
mov
mov
out
fadds
lds
cltd
add
push
out
lahf
ficompl
leave
aad
lret
add
pop
cmp
jne
cmp
jne
push
lea
push
push
call
jno
jae
in
jge
sti
add
pop
test
add
ljmp
add
add
gs
mov
ficoml
mov
jp
jl
cltd
clc
lock
fs
or
add
stc
jbe
test
add
add
push
add
bound
hlt
les
sahf
aad
data16
pop
mov
add
fildll
lea
pop
mov
push
push
push
push
call
add
add
rcrb
pusha
xchg
add
mov
add
scas
in
fldcw
mov
mov
add
fildl
add
iret
lahf
add
add
in
shll
cli
add
add
add
jno
add
mov
pop
add
pop
movl
push
dec
xor
not
pop
jmp
push
lea
push
push
call
add
jae
add
add
in
add
test
ja
shrb
fstpt
leave
add
enter
push
addb
add
add
push
subb
lea
pop
mov
mov
push
sub
inc
dec
pop
sub
jne
mov
push
ror
pop
movl
push
sub
sub
pop
jmp
mov
push
shr
pop
mov
push
push
push
lea
push
push
push
lea
push
push
push
push
call
roll
imul
add
add
jns
mov
add
lods
add
lahf
add
imul
roll
lahf
stos
add
add
out
add
popa
movsb
add
add
add
mov
lea
pop
cmp
jne
mov
push
push
lea
push
lea
push
push
call
add
add
add
adcl
add
stc
les
pop
push
push
scas
int3
add
mov
add
aam
add
add
stos
mov
add
mov
aad
pusha
pop
pop
add
std
add
add
lods
add
add
pusha
clc
popf
mov
lea
pop
movl
push
push
push
push
call
mov
scas
add
add
pusha
add
add
repnz
add
add
mov
movsl
xchg
add
mov
add
into
add
ja
pushf
fiadds
add
add
mov
add
nop
add
sti
add
addl
sti
mov
lea
pop
jmp
push
not
inc
sub
pop
mov
cmpw
jne
push
sub
not
pop
mov
push
shr
not
add
dec
pop
movl
jmp
push
sub
rol
dec
pop
pushl
pop
push
push
lea
push
push
push
push
push
call
fadds
pop
test
cld
push
add
add
mov
add
jp
xchg
icebp
mov
add
add
mov
clc
popf
test
les
je
lock
les
mov
cmpsl
test
add
rcr
std
add
lea
stos
add
add
add
mov
lea
pop
mov
push
push
push
lea
push
push
push
lea
push
push
push
call
mov
add
stos
cmc
cltd
imul
add
add
sti
add
add
loop
sahf
cltd
aam
add
mov
in
in
add
jecxz
add
mov
outsl
mov
add
idivl
mov
ret
lea
pop
mov
mov
push
push
shr
sub
sub
not
push
sub
add
dec
sub
shr
sub
pop
lea
add
pop
push
shl
add
add
add
pop
push
call
push
push
call
push
out
fmulp
movsb
popf
leave
jl
hlt
add
add
outsl
add
pusha
loope
add
faddl
mov
test
push
push
ret
shlb
mov
in
xchg
test
pop
xchg
add
add
lcall
ror
jbe
mov
add
xchg
lahf
in
add
out
mov
xchg
mov
jo
loope
int3
lea
pop
cmpl
je
push
push
shr
push
push
pop
add
not
shr
sub
shr
sub
add
pop
sub
not
shl
pop
push
push
push
push
lea
push
push
push
push
push
push
call
add
mov
lods
add
cwtl
mov
aam
insb
mov
clc
add
les
pushf
jnp
mov
add
jle
js
mov
pusha
add
mov
add
jae
cltd
in
mov
fisubl
add
hlt
mov
add
rcrb
add
add
neg
mov
lea
pop
push
push
push
push
push
push
lea
push
push
call
add
js
loopne
add
add
lcall
mov
negl
add
loope
add
clc
ljmp
mov
fwait
push
mov
lods
mov
aad
scas
pop
out
add
jmp
loop
xor
idivb
out
xchg
icebp
add
shl
xchg
add
add
mov
lea
pop
call
cmpl
je
push
push
push
sub
add
not
sub
sub
add
ror
pop
sub
shr
sub
pop
push
pop
push
call
push
push
push
lea
push
push
push
push
push
push
push
call
push
cmc
aad
add
lret
enter
push
add
clc
fsubrl
mov
jns
add
add
sti
add
popf
add
push
mov
popa
aam
add
add
add
add
mov
mov
jbe
pop
add
aad
mov
mov
add
addr16
cltd
add
add
jne
out
in
aam
bound
pop
cmpl
je
push
push
lea
push
push
pop
add
rol
sub
sub
pop
inc
sub
pop
push
push
lea
push
push
call
add
cmpsl
in
add
add
incb
mov
add
lcall
xchg
mov
ja
xchg
jl
push
add
out
in
andl
cld
add
lret
add
add
data16
xchg
add
pop
push
push
add
add
pop
call
cmpl
je
push
push
sub
push
and
add
sub
ror
sub
sub
dec
ror
shl
pop
inc
ror
dec
pop
push
rol
pop
push
call
push
add
not
pop
cmpl
je
push
push
rol
sub
inc
lea
push
push
pop
add
shr
sub
xor
shl
add
pop
dec
not
pop
push
ror
add
pop
push
call
push
add
shl
dec
pop
cmpl
je
push
push
add
sub
not
push
xor
add
ror
xor
sub
shl
lea
shr
xor
pop
dec
inc
pop
push
push
lea
push
push
call
add
popf
stos
add
outsl
stos
add
fldl
add
add
add
shlb
loopne
add
clc
aam
jne
repnz
add
data16
sahf
mov
lea
pop
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
fadds
add
jge
cwtl
arpl
add
push
roll
rolb
add
add
add
add
add
jb
mov
data16
leave
add
movsb
mov
add
push
add
pop
stos
mov
jo
addb
movb
add
arpl
add
add
add
mov
jl
mov
lea
pop
call
push
shr
lea
shr
pop
cmpl
je
push
push
xor
add
shl
shr
push
or
not
add
lea
sub
shl
not
lea
pop
inc
shl
pop
push
sub
rol
xor
ror
pop
push
call
push
push
push
lea
push
push
push
lea
push
push
call
add
xchg
movsl
shll
mov
pop
mov
push
clc
insb
add
push
mov
test
hlt
jbe
mov
add
jnp
add
test
jbe
pusha
cmpsb
mov
add
add
add
add
add
pop
add
jnp
mov
pop
incb
add
add
push
pusha
cli
add
add
mov
and
cmp
or
int3
je
push
push
sub
shl
push
xor
add
sub
dec
sub
shl
pop
inc
shl
xor
sub
pop
push
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
push
call
fs
add
sahf
gs
push
add
iret
outsl
add
add
mov
add
iret
mov
scas
ret
push
movb
add
xchg
jmp
mov
flds
add
add
add
add
jns
out
cmc
add
fbstp
add
add
sub
jnp
add
push
push
push
call
add
add
add
hlt
add
xlat
flds
jmpw
aad
cmc
pop
add
add
sti
je
add
add
lret
aam
mov
incb
int3
add
xchg
jno
cli
lea
lea
pop
cmpl
je
push
push
ror
push
or
inc
add
add
sub
shr
inc
sub
shl
add
shr
rol
pop
xor
not
pop
push
push
push
push
push
push
push
push
push
push
call
jp
mov
add
clc
lea
lea
push
add
stos
testb
enter
pop
xchg
add
mov
add
pop
stos
cwtl
add
mov
fwait
pop
loopne
clc
push
add
add
mov
out
add
mov
les
call
push
lea
inc
ror
pop
cmpl
je
push
push
push
push
pop
add
rol
sub
add
pop
pop
push
push
push
lea
push
push
push
push
push
push
push
call
lods
loopne
pop
test
xchg
add
mov
aad
add
sar
add
lcall
pop
add
add
mov
roll
push
movsb
jmp
addr16
mov
add
ja
xchg
pop
out
add
pusha
repnz
test
add
pop
push
push
not
pop
call
cmpl
je
push
push
inc
xor
shl
rol
push
push
pop
add
add
ror
add
ror
sub
lea
pop
inc
lea
pop
push
push
push
lea
push
call
add
jge
pop
int
pop
popa
cld
mov
ljmp
out
add
in
mov
push
xchg
neg
mov
enter
add
add
test
into
add
mov
xchg
push
std
je
push
leave
ja
lds
addb
mov
xchg
pusha
add
in
lods
stos
lods
xchg
lods
bound
jnp
hlt
add
int3
lea
pop
push
push
sub
inc
add
shr
pop
call
cmpl
je
push
push
sub
dec
push
or
not
add
add
sub
not
inc
dec
pop
sub
pop
push
inc
add
rol
lea
pop
push
call
push
dec
shl
shl
ror
pop
cmpl
jne
push
dec
pop
mov
push
lea
shl
pop
movl
push
push
lea
push
push
call
mov
enter
add
bound
push
add
add
lds
fs
fildll
arpl
loopne
gs
xchg
lock
mov
add
add
pusha
add
add
xchg
addb
int3
fwait
add
jo
jge
ljmp
pop
jmp
push
lea
inc
not
sub
pop
xor
pop
push
push
push
push
call
push
add
add
je
cmpsb
sub
add
mov
jle
add
mov
orb
nop
push
arpl
ja
nop
xchg
iret
mov
je
mov
add
add
mov
bnd
add
fstpl
int3
add
fiadds
add
leave
add
add
jbe
jle
add
add
add
cmc
add
jmp
add
fstpl
jne
mov
add
jp
fmull
push
push
push
lea
push
push
lea
push
push
push
call
aam
pop
int3
mov
add
stos
add
add
add
add
jne
add
fsubr
push
add
add
add
test
pop
nop
mov
ficomps
bound
pop
pop
pop
push
lea
push
push
call
stos
push
test
lret
add
mov
mov
xchg
add
add
or
pop
jecxz
add
loop
iret
rolb
icebp
add
add
popf
fs
push
mov
push
insb
lods
flds
add
out
xchg
out
add
cmc
jno
pushf
add
out
popl
mov
lea
pop
leave
push
sub
pop
ret
push
lea
push
push
push
push
lea
push
push
push
push
call
add
add
push
add
mov
add
add
ret
ljmp
stos
cltd
in
add
add
add
xchg
add
lds
mov
add
pop
mov
push
je
into
push
lods
pop
pop
pushf
shrb
ja
fildl
add
add
pop
jae
mov
lea
pop
push
push
push
push
push
push
push
push
lea
push
push
call
pop
add
lds
add
xchg
fld1
add
je
jns
add
add
test
out
cwtl
xchg
test
add
add
popl
add
mov
add
xchg
mov
fdivp
add
jmp
lcall
int3
lea
pop
mov
add
push
push
push
push
push
push
call
repnz
in
imul
pushf
ljmp
add
add
add
mov
add
sahf
rcl
bound
jl
stc
jp
popf
add
add
fs
jmp
push
add
cmc
add
roll
add
add
enter
insb
add
add
scas
add
mov
les
jge
add
test
add
add
push
into
xlat
push
add
sub
push
or
inc
add
dec
lea
shl
sub
lea
inc
rol
rol
pop
pop
push
inc
pop
pushl
push
xor
shl
shl
pop
call
push
shl
dec
pop
push
call
push
pop
jmp
push
push
lea
push
push
push
call
bound
jns
add
add
add
add
add
scas
xlat
pop
scas
mov
mov
add
add
pop
loopne
add
add
xchg
mov
add
add
pop
add
stc
add
mov
add
ret
push
ret
add
push
mov
mov
int3
add
jbe
mov
int
add
aam
add
fdivs
test
insb
test
add
ret
add
add
popa
adc
cmpl
je
cmpl
jne
push
add
ror
shr
pop
leave
push
ror
lea
pop
add
push
push
call
les
repnz
add
int
scas
cwtl
add
lds
add
ret
jge
add
add
add
repnz
xchg
pop
imul
add
mov
lods
insb
test
add
out
into
add
add
add
xlat
pop
add
pop
pop
push
push
push
lea
push
push
lea
push
call
testl
add
add
add
add
call
orb
add
jecxz
xchg
add
out
add
add
add
add
add
data16
pusha
pop
add
add
add
add
addr16
mov
lods
add
stc
jb
int
js
ljmp
pop
pop
push
ror
pop
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
push
add
jne
hlt
push
add
sar
stos
add
cltd
add
add
push
add
add
imul
add
test
movsb
pop
scas
add
fistpll
ja
jmp
repnz
add
data16
imul
add
add
mov
subl
add
add
pop
pop
leave
push
push
push
lea
push
push
push
push
lea
push
call
add
mov
arpl
add
add
mov
add
cmpsb
in
push
add
vaddsubps
add
add
lods
out
in
add
push
gs
incb
mov
into
icebp
mov
mov
lea
pop
add
ret
push
push
lea
push
call
lret
lcall
outsl
movl
add
aam
in
movsb
add
nop
pop
push
loop
rorl
add
add
ret
cmc
rolb
mov
popl
add
sti
mov
icebp
add
mov
lahf
enter
add
xchg
out
mov
lea
pop
jmp
push
inc
pop
cmpl
jne
push
push
xor
inc
rol
rol
push
sub
add
rol
lea
add
rol
sub
not
pop
add
add
shr
pop
push
push
push
push
push
lea
push
call
xchg
fldl
add
add
repnz
scas
sti
fildl
in
cltd
ja
push
popl
mov
add
add
xchg
push
add
jb
add
add
add
mov
lea
pop
pushl
push
inc
lea
sub
pop
call
push
push
sub
pop
call
push
not
not
add
pop
jmp
push
push
push
lea
push
push
push
push
lea
push
call
in
push
add
add
add
mov
xchg
int3
jne
add
lods
xbegin
mov
mov
imul
add
add
add
jbe
cld
lea
add
arpl
add
add
add
add
pop
cmpl
jne
mov
push
push
call
add
push
push
add
scas
mov
test
mov
outsl
mov
add
jno
out
add
nop
rolb
xchg
loopne
out
addr16
add
add
add
add
add
in
popl
in
add
push
add
add
lea
pop
mov
push
push
push
sub
push
and
add
ror
add
xor
add
sub
sub
dec
shl
pop
ror
shl
dec
pop
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
add
lret
add
add
mov
add
add
addb
in
add
test
cmc
int
in
ret
out
stc
int
cmc
cltd
add
cli
addl
and
pushl
call
push
push
dec
dec
sub
push
xor
add
ror
sub
shr
add
sub
lea
rol
pop
sub
pop
push
push
call
add
cmc
rolb
add
test
add
movsb
faddl
add
add
add
pusha
mov
add
push
idivb
loope
add
call
lcall
mov
add
add
add
pop
lock
pushf
add
add
add
pop
pushl
call
push
push
push
lea
push
push
push
push
call
mov
cli
insb
mov
add
add
bound
filds
incb
cmpsl
add
mov
fadds
lret
add
enter
add
pop
add
call
add
add
jne
add
add
add
out
add
loopne
add
jl
mov
lea
pop
call
push
push
add
sub
ror
push
xor
add
dec
ror
not
sub
ror
shr
pop
sub
dec
rol
pop
push
push
lea
push
push
push
push
push
push
push
push
call
sbb
add
pop
mov
fisttpll
add
add
add
clc
mov
add
fdiv
add
mov
stc
jle
aad
add
movsl
add
stc
fcoms
imul
iret
pop
repnz
out
shl
add
out
int
add
stos
mov
jle
ja
lret
pusha
add
push
rorb
add
cli
les
loopne
add
mov
lea
pop
pushl
call
push
xor
pop
call
push
push
shl
not
rol
rol
push
push
pop
add
lea
sub
pop
shl
dec
add
lea
pop
push
sub
pop
pushl
push
push
call
add
les
add
push
scas
sti
add
pop
mov
add
add
push
cwtl
lods
cltd
add
out
adc
sbb
add
add
fcompl
add
mov
mov
stos
ljmp
add
fdivrs
add
movl
pusha
or
sub
add
mov
cmp
add
nop
sarl
add
jns
pop
add
add
fs
fistl
cli
mov
add
add
pop
gs
push
call
mov
int3
loope
add
add
add
add
pop
call
push
push
rol
shl
push
push
pop
add
add
not
sub
ror
pop
sub
ror
pop
push
shl
inc
shl
pop
pushl
push
inc
xor
pop
call
push
rol
inc
sub
pop
call
push
push
add
ror
push
push
pop
add
xor
inc
not
sub
sub
shl
shl
rol
not
pop
lea
pop
push
rol
shl
pop
pushl
push
shl
shr
add
pop
call
push
lea
push
lea
push
push
push
push
lea
push
call
add
popl
add
add
add
xchg
add
rolb
jecxz
pop
xchg
add
add
loope
rolb
xchg
loop
mov
add
js
rolb
out
in
clc
add
fstpl
lds
outsl
add
add
add
cld
arpl
mov
filds
sahf
add
add
test
sbb
call
push
push
inc
push
xor
add
ror
not
sub
xor
pop
not
lea
ror
pop
push
lea
push
lea
push
call
imul
shl
add
add
je
add
pop
add
and
add
fildl
enter
rolb
adc
xchg
mov
int3
add
add
loope
leave
out
jl
loope
xchg
lahf
push
mov
add
mov
lea
pop
pushl
call
push
push
lea
push
push
lea
push
push
push
call
std
add
mov
add
out
lret
imul
pop
lea
mov
mov
add
mov
js
aam
add
add
add
int3
add
mov
add
xchg
add
add
fiaddl
add
js
add
test
mov
add
xchg
push
cltd
jo
movsl
xchg
nop
lods
idivb
add
mov
lea
pop
call
push
push
push
call
add
lds
add
add
xorl
arpl
mov
aad
ror
add
jne
add
add
xlat
stos
add
jns
jle
xchg
lret
add
ficompl
add
pop
call
push
push
push
push
call
mov
xchg
mov
push
cltd
add
clc
popl
popl
add
mov
scas
arpl
xchg
out
lret
cltd
cmpb
loope
loop
add
add
add
out
add
hlt
add
mov
lea
pop
lea
push
push
lea
push
xor
add
shl
lea
sub
inc
shl
sub
pop
not
ror
pop
push
push
call
add
add
jecxz
add
add
pop
pop
xchg
add
add
test
in
fs
mov
add
add
pop
outsl
push
rolb
jns
add
rcrl
add
test
pop
add
add
add
add
xchg
add
enter
add
add
add
pop
pushl
push
push
push
call
call
int
add
push
in
scas
js
add
pop
pop
add
lock
add
fadds
cltd
filds
add
lret
repnz
mov
test
add
lods
mov
les
subl
add
inc
shl
sub
add
pop
call
push
push
add
push
sub
add
xor
shl
sub
add
rol
add
pop
not
add
pop
push
dec
dec
pop
pushl
call
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
jle
add
mov
pop
std
cli
ljmp
add
mov
add
add
add
cli
add
add
mov
add
data16
jmp
add
push
mov
lds
pusha
add
add
mov
rorl
pop
call
mov
push
push
not
sub
push
and
add
lea
sub
shl
inc
shl
pop
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
testb
ja
add
out
loop
add
add
add
cli
add
add
rcr
lods
ja
add
hlt
add
loopne
jb
addl
fiadds
add
fildl
imull
add
pop
pushl
push
push
push
push
push
lea
push
push
push
push
lea
push
call
jl
mov
jmp
outsl
jbe
xchg
test
add
xchg
xlat
je
add
cld
add
jl
add
cli
jecxz
pop
add
pop
add
add
add
movsl
mov
mov
imul
clc
jmp
jbe
pop
test
call
jae
out
add
icebp
cld
mov
add
shl
ljmp
add
add
data16
push
add
les
pusha
mov
lea
pop
call
push
xor
pop
push
push
sub
pop
pushl
push
push
push
call
jp
add
adcb
lahf
mov
addb
add
jl
pop
mov
mov
mov
mov
add
addb
add
mov
add
popa
add
in
add
movl
pusha
add
jo
sahf
addl
stos
les
push
push
arpl
in
jae
mov
imul
fmull
shrb
push
rcrl
cs
push
or
inc
add
sub
sub
pop
dec
ror
add
pop
push
push
lea
push
push
lea
push
push
lea
push
call
mov
jmp
iret
nop
and
add
mov
pop
filds
add
jp
test
add
flds
add
loop
jns
add
add
add
test
jne
xchg
imul
aam
bound
pushl
call
push
push
shr
push
xor
add
dec
sub
sub
dec
xor
rol
pop
shl
pop
push
push
push
push
pop
add
shl
ror
sub
inc
pop
ror
add
shr
pop
push
push
push
push
push
push
push
push
push
call
jbe
bound
popa
add
add
mov
pop
in
add
fdivrl
add
push
jb
add
cltd
iret
scas
scas
pop
add
pop
repnz
in
add
add
popa
mov
add
mov
lea
pop
call
push
push
shl
add
push
xor
add
rol
shr
lea
shr
sub
lea
pop
lea
not
pop
push
push
push
push
call
add
mov
or
pop
mov
add
add
loope
aam
addb
js
add
sarb
cwtl
add
add
pop
lea
rcl
iret
add
movl
push
add
mov
cmpsb
ja
add
mov
movsb
mov
bound
push
filds
add
push
add
add
test
mov
jbe
orl
pushl
call
push
push
lea
push
push
lea
push
push
push
push
call
lods
cwtl
filds
add
jae
add
mov
lahf
xchg
stos
mov
shlb
add
add
add
add
stos
add
in
test
faddl
int
jbe
add
les
xchg
add
ret
out
xchg
mov
lea
pop
mov
lea
push
lea
push
push
call
add
rorl
pop
lcall
add
add
ficomps
add
add
js
mov
mov
jl
pop
add
lcall
add
clc
test
jbe
cmc
add
add
popa
add
mov
incb
stos
add
cltd
add
add
incb
add
pop
add
mov
mov
lea
pop
lea
push
push
add
lea
pop
push
push
inc
rol
lea
sub
pop
push
push
push
dec
dec
pop
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
push
call
movb
iret
push
shll
add
faddl
jns
push
add
add
mov
ret
cmpsb
mov
mov
add
test
mov
xchg
jmp
shlb
hlt
std
mov
out
mov
add
push
out
add
lcall
mov
lea
pop
push
push
push
push
push
push
push
lea
push
push
push
push
call
add
mov
outsl
out
xchg
add
jns
popa
mov
add
call
add
roll
cltd
add
out
add
add
pop
push
push
push
add
pop
pushl
push
push
push
push
call
add
add
mov
lods
lock
scas
jle
push
filds
filds
add
add
lahf
pop
add
push
add
add
lcall
push
add
add
add
in
pop
jp
add
out
add
add
jns
add
add
add
les
lds
xchg
negl
jp
out
mov
rcll
push
lea
jns
jmp
pop
fs
lea
pop
push
push
lea
push
push
call
add
add
outsl
sarl
add
popf
add
add
scas
mov
testl
mov
mov
add
mov
add
addl
movb
mov
test
lret
mov
add
fcom
mov
add
in
add
add
add
lea
pop
call
push
push
add
lea
push
push
pop
add
lea
lea
sub
sub
shl
ror
pop
ror
pop
push
sub
pop
pushl
push
dec
dec
pop
call
call
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
jo
or
flds
out
add
xlat
add
jl
aam
add
pop
mov
add
xchg
add
add
add
add
fucomi
fwait
add
add
incb
add
add
add
add
imul
add
insb
outsl
jl
add
mov
lea
pop
mov
pop
push
lea
push
lea
push
lea
push
push
push
lea
push
lea
push
call
imul
add
add
add
test
sti
jno
add
addb
lods
mov
jns
push
add
add
jp
fldl
into
add
popf
jnp
stos
call
rclb
popf
mov
add
enter
jge
popa
add
leave
xlat
xchg
pop
test
mov
lea
pop
dec
jne
jmp
push
push
push
lea
push
push
push
push
push
push
call
fidivl
add
pop
add
mov
add
add
add
popf
push
add
movsb
lock
xchg
rcrl
mov
cli
mov
add
add
sar
xchg
mov
add
cltd
lock
mov
add
clc
jno
add
add
enter
add
loopne
add
push
mov
lea
pop
call
push
push
sub
push
or
not
add
dec
sub
shl
pop
lea
xor
pop
push
push
call
mov
scas
add
neg
mov
test
fiaddl
add
ljmp
push
add
add
lds
add
ljmp
add
filds
add
jns
add
subl
mov
mov
add
popa
add
mov
add
movsb
xchg
fcmovnb
add
add
add
pop
add
mov
aam
bound
pop
pushl
push
lea
shl
pop
call
push
push
lea
push
push
push
push
push
push
push
call
loop
add
add
mov
add
add
jl
add
aad
pop
add
add
add
xchg
cld
add
add
popa
popa
pop
add
add
jne
add
add
imul
add
fildl
push
mov
faddl
ja
addr16
push
out
in
clc
push
cltd
mov
loopne
push
push
jo
mov
lea
pop
push
call
push
sub
rol
pop
mov
push
lea
lea
pop
lea
push
push
shl
shr
shr
push
or
inc
add
rol
inc
sub
rol
add
rol
pop
sub
sub
pop
push
lea
push
push
push
push
lea
push
call
clc
hlt
out
add
add
iret
subl
add
lock
push
in
xchg
popf
push
add
add
enter
add
add
add
add
mov
mov
mov
add
add
mov
iret
hlt
popl
lea
mov
lea
pop
pushl
push
push
push
push
push
push
lea
push
call
shlb
push
add
push
loopne
outsl
add
add
add
add
add
mov
add
add
mov
push
add
mov
outsl
add
shr
mov
add
pop
xchg
add
jl
pop
in
jae
cld
add
mov
lea
pop
call
push
xor
pop
push
push
not
add
add
pop
call
push
push
ror
xor
push
push
pop
add
rol
sub
add
lea
pop
inc
ror
ror
xor
pop
push
add
xor
pop
pushl
call
push
push
push
push
lea
push
push
call
push
add
add
add
pop
push
lret
add
add
enter
insb
lret
jp
add
test
icebp
jecxz
out
push
test
add
add
add
add
roll
je
adc
jae
mov
out
flds
stos
add
add
push
flds
add
add
add
ja
cld
lea
pop
call
push
push
push
push
push
push
push
push
push
lea
push
call
rclb
lods
ret
mov
xchg
add
add
leave
add
add
add
add
add
add
jmp
add
push
add
jecxz
stos
add
jmp
sti
add
fsub
fmull
mov
lea
pop
mov
lea
push
push
lea
push
sub
add
add
xor
add
shl
sub
not
rol
pop
inc
add
inc
dec
pop
push
ror
shl
pop
pushl
call
push
inc
add
pop
lea
push
shr
not
pop
push
push
push
dec
xor
sub
pop
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
add
mov
mov
add
add
add
add
push
jno
add
add
pusha
add
out
sahf
add
add
icebp
add
add
mov
add
andl
cwtl
cltd
bound
mov
stos
add
in
add
add
nop
add
add
add
fidivrs
add
int
add
mov
mov
lea
pop
pushl
push
push
sub
add
push
or
inc
add
shr
sub
sub
sub
pop
add
lea
shl
pop
push
not
shl
add
pop
push
push
lea
push
push
push
push
push
push
push
push
call
rcrl
arpl
jecxz
in
add
scas
add
loopne
bound
int
xchg
add
jno
mov
mov
add
mov
jmp
xchg
add
lea
les
shrb
mov
in
push
not
add
add
push
or
inc
add
sub
shl
add
rol
sub
xor
ror
pop
sub
xor
inc
not
pop
push
shl
xor
pop
pushl
push
push
push
lea
push
push
push
call
mov
mov
aad
mov
add
loope
lcall
jne
out
jmp
xchg
flds
add
add
add
pop
int
repnz
add
jo
mov
push
popf
jo
cld
add
lret
push
jmp
fimull
pop
add
out
shrl
div
add
push
sbb
xor
add
push
push
call
cwtl
pop
negl
jae
mov
clc
clc
add
mov
fs
call
gs
movb
add
test
xchg
std
add
pop
scas
push
addr16
add
ja
mov
add
lea
orl
add
add
imul
test
mov
add
pop
shlb
mov
lea
pop
push
push
dec
pop
call
push
push
shr
not
not
push
push
pop
add
add
shl
sub
add
shr
rol
pop
add
sub
ror
pop
push
add
sub
add
pop
pushl
push
not
shl
shl
pop
call
call
push
lea
push
lea
push
call
pop
add
les
andl
add
pop
add
add
js
add
add
js
in
iret
add
xlat
mov
lds
add
call
std
mov
add
mov
push
add
addb
xchg
mov
add
cmpsb
loop
add
lock
add
xchg
pushf
add
jmp
add
push
clc
add
pop
jmp
pushl
push
push
push
push
lea
push
lea
push
push
push
push
call
xchg
jae
cli
add
add
aam
iret
iret
enter
push
nop
jo
add
add
jne
add
add
test
mov
jecxz
test
add
add
shl
add
jae
popa
mov
add
mov
lea
pop
mov
jmp
push
push
rol
shr
sub
push
and
add
shl
sub
pop
lea
pop
push
lea
sub
not
rol
pop
pushl
call
push
rol
shr
pop
push
push
dec
add
xor
xor
pop
call
push
push
ror
shr
push
and
add
lea
dec
sub
not
sub
shl
add
pop
sub
xor
lea
shr
pop
push
push
push
push
push
lea
push
push
push
push
push
call
int3
cmpsb
add
add
pop
iret
ret
push
add
rolb
add
arpl
add
add
add
add
test
call
in
imul
add
jnp
push
add
cli
insb
add
add
add
mov
test
bound
pop
pushl
push
push
lea
push
push
push
lea
push
call
je
mov
in
aam
push
out
add
push
js
push
add
negl
addl
jp
add
into
fildl
add
mov
scas
add
add
push
scas
xchg
add
aam
mov
lea
pop
call
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
rolb
fxch
jb
movsb
add
add
stc
add
insb
rolb
add
scas
mov
cltd
nop
add
add
lods
jmp
faddl
lods
jbe
pop
pushf
faddl
fldl
push
testb
add
in
add
lods
jmp
add
sarl
fsubrp
push
lret
imul
add
fdivs
shrb
lea
pop
push
call
push
push
push
lea
push
push
push
push
push
push
call
in
jb
add
test
add
fwait
test
add
add
mov
lret
add
cmpsb
add
push
addl
add
pop
add
add
jge
add
mov
rcrl
add
jne
xlat
test
xchg
add
xchg
faddp
mov
std
mov
pop
in
mov
add
add
add
pop
out
add
mov
lea
pop
leave
push
xor
not
shr
pop
add
push
add
pop
pop
push
rol
add
pop
pop
push
push
push
push
call
in
mov
add
cmpsb
std
add
add
pop
add
add
add
add
mov
pusha
sahf
testb
lcall
pop
mov
push
call
jnp
add
sarl
sti
add
mov
xchg
add
xchg
add
add
pop
pop
push
lea
push
push
call
add
add
lea
add
bound
imul
test
repnz
int3
add
xchg
mov
mov
lock
add
mov
lea
pop
pop
leave
push
sub
pop
add
ret
push
sub
shr
pop
leave
push
sub
rol
xor
pop
ret
push
push
inc
pop
mov
push
shr
lea
add
sub
pop
cmpl
jne
mov
push
sub
sub
xor
pop
jmp
push
xor
dec
pop
mov
push
push
push
lea
push
push
push
call
add
add
add
cmpsl
add
push
add
fmuls
add
cmpl
xchg
nop
mov
add
jb
cltd
cmc
add
add
add
add
jno
pop
xchg
add
add
fucomp
popl
add
test
lea
pop
and
push
push
push
lea
push
push
lea
push
push
push
push
call
add
aad
enter
in
add
add
test
add
add
add
in
add
add
fadds
add
in
xchg
cld
or
xlat
add
add
insb
lea
int
add
add
pushf
push
xchg
mov
pop
iret
arpl
lock
mov
xchg
mov
movsl
popf
add
jmp
push
add
pop
xor
xor
push
lea
push
lea
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
shlb
add
add
add
add
xchg
sti
add
add
jo
out
add
cli
sahf
mov
int
add
mov
add
push
lods
xchg
add
mov
push
add
add
xchg
mov
add
in
add
jp
add
call
push
add
add
add
fstps
mov
lea
pop
add
push
shl
pop
xor
push
push
push
push
push
call
les
in
jae
add
lcall
pop
addb
scas
add
add
scas
add
sarl
loopne
add
pop
add
add
in
sahf
scas
fldl
add
add
add
push
mov
lea
pop
dec
sub
push
push
push
push
push
call
jmp
repnz
imul
add
add
in
test
add
add
pop
lret
in
add
mov
mov
outsl
jge
lcall
add
add
jbe
add
add
mov
sbbl
arpl
add
scas
add
mov
lea
pop
jmp
sub
push
push
lea
push
push
lea
push
push
push
push
push
push
call
push
add
add
sti
repnz
in
xlat
mov
xchg
fnstcw
in
out
arpl
add
push
add
xchg
add
add
xchg
add
add
xchg
add
ficoms
add
je
orb
mov
std
popa
rol
aad
add
hlt
add
lea
pop
pushl
pop
push
xor
rol
add
pop
sub
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
pop
iret
pop
mov
add
jb
add
add
add
add
clc
pop
ret
test
mov
in
add
cld
xchg
out
imul
cmc
addl
add
add
stos
call
add
add
jmp
add
mov
add
add
mov
out
mov
lea
pop
cmp
jne
push
add
inc
pop
mov
push
sub
sub
add
pop
lea
push
push
lea
push
lea
push
push
push
push
push
call
add
jb
sahf
add
add
int
add
test
arpl
push
rorl
add
fsts
mov
add
jb
bound
add
jle
jne
add
sahf
add
mov
add
jbe
in
mov
add
add
mov
addr16
pop
add
pusha
add
ja
mov
and
jmp
pop
mov
push
push
push
call
mov
icebp
bound
popa
fiadds
xchg
mov
push
push
add
mov
xchg
in
jmp
add
add
push
jecxz
add
jecxz
pushf
jnp
call
lock
jae
aad
add
xchg
lcall
mov
add
fildl
add
ja
jae
add
pop
add
icebp
mov
stos
mov
lea
pop
shr
push
dec
inc
pop
add
push
sub
sub
shr
pop
sub
push
shl
xor
pop
pushl
push
push
push
push
push
push
push
push
push
call
add
add
add
pop
add
add
xchg
fisubrl
ret
jae
jge
movsl
add
in
jmp
loop
jns
cwtl
jae
stos
mov
add
lods
test
add
jle
imul
add
add
add
push
pushf
mov
fwait
movb
add
mov
aad
lret
je
add
ret
add
and
pop
push
ror
shl
ror
sub
pop
shr
and
push
add
pop
sub
cmp
jne
push
push
lea
push
call
cwtl
add
add
add
pop
push
fmuls
mov
lods
add
add
pop
add
movsb
mov
mov
aad
add
add
sahf
lcall
add
xorl
add
sahf
in
cwtl
popf
xchg
xchg
add
movsb
ja
add
add
fs
fwait
mov
lea
pop
leave
ret
push
shl
dec
pop
push
push
sub
shr
pop
mov
push
ror
rol
pop
add
push
push
push
push
push
push
push
lea
push
push
push
call
xchg
stc
mov
cwtl
jle
cli
mov
roll
mov
pop
add
add
out
add
add
mov
add
add
out
add
xchg
fiaddl
mov
lods
les
mov
lea
pop
push
push
push
add
pop
push
push
not
not
pop
push
mov
push
sub
shl
sub
pop
lea
sub
push
push
push
push
push
lea
push
push
push
call
xchg
mov
add
mov
add
jbe
leave
fsts
fwait
xchg
roll
mov
lcall
add
in
xchg
push
loop
std
popf
push
stos
add
sti
add
popf
sarl
cltd
jno
filds
add
push
lea
pop
mov
push
push
push
call
pusha
stc
push
add
jne
mov
fwait
js
scas
add
push
add
movsl
fidivs
jmp
add
xchg
pushf
add
add
add
lcall
push
out
pop
nop
jne
add
outsl
mov
add
test
push
add
fsubrp
test
mov
push
jno
add
add
pop
shr
push
sub
lea
dec
pop
add
mov
push
push
push
push
lea
push
push
lea
push
call
pop
add
jnp
add
addb
add
fcomps
add
add
add
xchg
fsubl
jecxz
add
ret
fdiv
lret
jno
add
add
sahf
xchg
add
movl
add
add
js
jnp
jle
mov
add
add
cmpb
add
push
icebp
add
mov
lea
pop
add
push
push
push
call
add
push
add
testl
add
add
insb
add
add
add
popa
add
in
pop
jl
in
mov
pop
add
add
add
add
cwtl
loopne
push
push
jo
mov
imul
mov
aam
push
roll
add
mov
data16
mov
push
push
call
add
aam
add
outsl
add
jp
fists
add
xchg
add
add
add
add
add
stos
push
push
add
rclb
mov
or
jge
xor
push
push
push
push
lea
push
call
mov
iret
add
in
in
mov
mov
add
add
ja
jp
jne
shrl
add
mov
add
insb
add
iret
add
add
jcxz
cltd
clc
mov
add
add
add
xchg
std
js
mov
add
add
add
pop
mov
push
ror
lea
pop
and
rol
push
shl
pop
rol
xor
push
rol
dec
shl
add
pop
inc
push
lea
push
push
push
push
lea
push
push
push
call
add
shrl
xlat
add
ret
enter
mov
add
popf
lcall
add
shr
roll
mov
pop
add
clc
add
add
add
insb
add
push
filds
aam
xchg
lret
xchg
pusha
loop
add
pop
cmpb
jne
push
push
push
push
push
push
call
mov
test
add
rcr
flds
add
xchg
add
add
aad
add
enter
push
lret
add
add
scas
add
mov
mov
jmp
in
pop
rcrl
sti
mov
add
ror
add
jne
rorb
add
hlt
lea
pop
add
push
push
push
push
push
lea
push
push
call
add
icebp
add
push
add
add
xlat
add
mov
add
add
xor
add
pop
add
pop
stos
add
jae
jecxz
enter
mov
addb
out
mov
lea
pop
cmp
je
add
push
lea
push
push
push
push
push
lea
push
call
addr16
add
icebp
outsl
bound
icebp
clc
add
shrb
in
pop
ja
jb
mov
mov
add
add
stos
std
add
pop
add
lods
aad
pop
add
testb
sahf
lahf
arpl
mov
int
insb
add
pop
cmpl
jne
push
pop
xor
pop
push
shr
pop
pop
push
shr
not
add
add
pop
pop
push
push
push
push
push
push
push
push
push
call
pop
add
pop
add
push
add
add
push
lods
mov
mov
in
add
xchg
popl
add
jnp
icebp
gs
js
loopne
popa
out
add
push
add
add
add
add
pusha
mov
add
leave
fldenv
jne
jmp
add
int3
lea
pop
pop
push
dec
ror
add
pop
pop
push
rol
pop
leave
push
push
push
lea
push
push
push
lea
push
push
push
call
xchg
mov
arpl
xchg
add
adc
sarl
iretw
arpl
add
push
pop
xchg
add
add
add
rclb
mov
add
jne
mov
add
enter
add
and
ret
push
sub
dec
pop
mov
push
push
push
push
call
in
sti
add
jmp
add
mov
pop
push
pop
add
add
data16
jge
roll
add
mov
jle
out
add
mov
jns
push
push
add
pop
lahf
add
add
mov
add
std
sti
movl
cld
lea
pop
add
push
lea
push
push
push
push
lea
push
call
add
rolb
push
test
push
repnz
jmp
jns
cli
lahf
jecxz
lock
mov
add
mov
subl
data16
out
data16
movsb
add
pop
push
push
sub
xor
pop
push
push
lea
push
lea
push
push
call
in
lds
mov
jp
add
fldl
mov
jmp
push
mov
add
mov
push
iret
cmc
jno
pop
xchg
add
clc
lods
popf
mov
jns
pop
jecxz
add
lahf
popl
add
add
loop
pushf
mov
pop
add
movsl
aad
mov
add
add
add
xlat
pop
data16
mov
add
aam
bound
pop
add
mov
push
push
push
push
push
push
push
push
push
call
shl
add
push
aam
in
lds
mov
mov
mov
sarb
mov
ljmp
add
into
testb
iret
addl
add
add
fwait
aam
mov
push
add
add
jno
imul
add
mov
lea
pop
cmpw
pop
push
shr
shl
xor
pop
pop
push
push
push
push
push
lea
push
call
add
mov
jne
add
mov
xchg
les
pop
add
mov
add
add
add
push
imul
push
push
push
add
andb
lret
xlat
out
leave
test
jno
add
flds
std
mov
add
add
pusha
sbb
add
dec
fisubs
push
lea
push
call
shll
pop
add
add
lds
scas
mov
pushf
mov
add
out
mov
add
add
repnz
add
push
outsl
add
ficoml
repnz
faddl
add
mov
lea
pop
push
call
push
push
lea
push
push
push
call
jae
jbe
ror
push
ljmp
cld
add
mov
add
lds
test
lds
rolb
mov
add
push
in
in
add
out
add
fcoml
shll
add
pop
add
jmp
add
add
aad
mov
lea
pop
xor
pop
push
push
push
lea
push
call
incb
add
add
icebp
fwait
add
add
repnz
imul
add
xchg
add
push
add
add
ret
push
jbe
add
jp
mov
rcrb
iret
test
rclb
sti
jno
pushf
outsl
mov
mov
icebp
add
hlt
adcl
int3
lea
pop
pop
push
shr
shl
pop
pop
push
lea
push
push
push
lea
push
push
call
lret
cmpsl
fiadds
lret
mov
pusha
push
pop
movsl
movsb
xchg
add
shl
rcl
push
andb
cmc
push
add
mov
jo
test
bound
add
test
xchg
add
add
lahf
icebp
in
add
mov
lea
pop
pop
push
push
push
push
push
push
push
push
push
lea
push
call
jecxz
add
push
jl
ja
add
jmp
push
mov
roll
fadds
leave
add
lret
hlt
imul
add
add
cltd
lret
fwait
jae
add
jnp
jne
push
in
bound
jbe
mov
add
add
jo
add
sar
jge
clc
stc
add
aam
bound
pop
pop
leave
push
lea
push
push
push
push
push
push
push
call
add
add
add
add
add
ja
add
add
rolb
nop
shll
arpl
hlt
jnp
push
add
add
add
mov
push
push
add
je
add
leave
nop
int3
mov
faddl
add
stos
add
push
pop
les
mov
lea
pop
ret
push
push
push
push
push
lea
push
call
roll
jecxz
mov
add
jns
stc
mov
testl
add
mov
xchg
mov
cltd
add
jo
mov
lea
pop
push
push
dec
pop
mov
add
push
shl
not
pop
push
push
push
call
add
mov
add
fs
lods
add
add
add
lods
add
add
lds
add
loopne
out
popf
cwtl
frstor
cld
mov
add
test
testb
clc
icebp
add
roll
clc
mov
add
add
or
push
push
push
push
push
push
push
push
call
and
add
add
mov
ret
mov
scas
je
add
add
sahf
add
add
add
arpl
add
imul
int3
mov
add
fimuls
jmp
out
jo
test
imul
push
lea
pop
push
mov
push
add
sub
pop
push
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
mov
add
pop
fwait
add
neg
pop
add
add
add
add
imul
add
add
add
add
popf
xchg
add
xchg
jnp
add
pop
outsl
mov
lea
pop
pop
push
inc
pop
lea
push
push
push
lea
push
push
push
lea
push
call
std
mov
xchg
add
add
add
std
mov
add
movb
pop
repnz
lret
add
mov
les
mov
mov
aam
jo
add
pop
sub
push
sub
not
dec
pop
mov
push
inc
pop
shr
push
push
push
lea
push
call
je
addl
sti
add
add
sahf
mov
pop
jecxz
push
pop
add
aad
test
test
add
mov
lods
pop
add
add
test
incb
xchg
add
add
loope
insb
add
mov
movsb
js
add
ja
mov
lea
pop
add
mov
push
push
lea
push
push
push
push
push
call
gs
mov
add
add
call
out
call
add
gs
add
scas
add
add
fucomi
push
arpl
add
add
mov
stos
shlb
mov
add
add
pop
push
add
data16
rolb
fwait
decb
addl
fcomp
add
jmp
mov
lea
pop
add
pushl
push
push
lea
push
push
call
lcall
jmp
fstp
add
out
movb
xlat
pop
mov
fnstsw
mov
arpl
fldl
add
add
jbe
push
add
mov
mov
adc
inc
clc
push
lea
push
push
lea
push
call
aam
ja
repnz
test
add
outsl
add
int
jne
add
mov
jbe
jns
jle
mov
mov
xchg
add
add
add
add
enter
add
push
add
fwait
in
mov
add
scas
add
addb
clc
testl
jnp
push
sub
add
sub
pop
add
push
not
shr
pop
xor
push
push
lea
push
push
push
push
call
js
add
mov
add
add
scas
add
test
add
add
mov
jo
fwait
add
xacquire
add
add
fwait
mov
add
add
lret
out
add
add
jae
leave
cmc
out
clc
push
arpl
sbb
adc
push
inc
pop
mov
push
shl
rol
pop
add
xor
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
jbe
add
add
mov
add
add
add
jnp
push
add
test
mov
add
out
lea
add
mov
cmpl
add
leave
pop
mov
jmp
add
add
leave
sahf
mov
movb
add
pop
rol
nop
push
push
lea
push
push
call
loope
stos
divl
insb
arpl
add
add
push
jae
imul
jmp
xchg
into
int3
mov
add
sahf
addr16
xchg
addb
add
add
add
hlt
add
adc
xor
push
push
push
push
call
jecxz
xchg
add
int
add
add
icebp
out
add
mov
add
mov
add
fiadds
add
fs
addr16
jecxz
push
add
mov
scas
stos
add
xchg
push
lret
add
ja
outsl
out
test
push
add
add
add
pop
nop
nop
push
lea
push
lea
push
lea
push
lea
push
push
call
fildl
lock
push
test
jp
arpl
movsb
add
mov
imul
js
xchg
test
add
xchg
add
fidivrs
xchg
fldl
add
pop
push
flds
add
roll
add
mov
out
jmp
add
add
add
into
add
add
add
add
jmp
fmull
nop
push
push
lea
push
call
add
add
movl
add
cli
xlat
add
add
xchg
iret
in
mov
test
data16
jns
add
add
add
add
mov
mov
lea
pop
nop
push
add
pop
cmpb
jne
push
push
lea
push
push
call
mov
push
pop
ja
push
add
hlt
push
add
add
push
loopne
add
add
mov
movl
add
idivl
call
rolb
add
add
xchg
add
push
in
xchg
mov
add
lods
add
mov
add
rolb
jbe
lahf
add
add
lahf
add
lea
pop
add
nop
push
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
pop
mov
add
add
jp
fwait
xchg
add
lea
add
incb
add
add
mov
mov
icebp
add
std
add
data16
add
mov
cld
add
add
jns
add
mov
add
mov
lea
pop
nop
cmp
je
push
shr
pop
nop
nop
push
shr
pop
inc
push
ror
rol
not
pop
nop
push
lea
pop
nop
push
shl
ror
shr
inc
pop
cmp
jb
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
add
add
xchg
push
js
popf
add
mov
add
xchg
fiaddl
jo
rolb
add
pop
add
add
pop
mov
call
int
jl
in
add
mov
mov
add
fildl
add
out
lea
add
loope
fmull
shr
add
add
and
push
push
push
push
call
in
lea
insb
mov
aam
fisubrl
mov
add
mov
movsl
add
ljmp
mov
ficoms
add
xchg
add
add
std
movsl
add
pusha
cmpsb
xchg
jp
xchg
add
add
jnp
les
insb
jno
leave
out
add
mov
add
mov
data16
mov
push
push
lea
push
push
lea
push
push
push
call
add
push
jb
add
add
leave
jne
add
testl
add
add
popa
hlt
int
loop
mov
jb
add
pop
mov
add
fnstsw
lods
popa
popl
pop
add
shlb
test
mov
ljmp
test
pop
add
push
sub
shr
add
pop
movzwl
mov
push
ror
rol
pop
add
push
inc
sub
sub
rol
pop
mov
push
xor
add
sub
add
pop
xor
xor
push
push
call
mov
add
push
add
orb
add
add
js
xchg
pop
add
jle
imul
mov
xchg
add
pop
in
jmp
orb
roll
add
xchg
jmp
add
cli
mov
add
sti
add
shr
xlat
add
push
outsl
add
push
jecxz
mov
lcall
shl
push
lea
push
push
lea
push
lea
push
push
push
call
mov
fmull
add
mov
xchg
movsb
add
add
fildl
arpl
jo
mov
mov
cmc
add
xorl
in
add
stc
add
in
add
mov
int3
add
adcb
pop
fcoms
jns
add
gs
fildll
mov
add
stc
pop
ror
jmp
jno
mov
lea
pop
xor
push
lea
push
push
push
push
push
call
mov
fistl
add
add
jnp
mov
pop
iret
add
add
mov
pop
add
add
js
lock
pop
xchg
icebp
shlb
pop
shl
xor
push
push
push
push
push
push
call
cmpsl
pop
clc
test
xchg
lds
lods
add
xlat
add
add
add
pop
lock
mov
add
xlat
add
jnp
add
add
adc
mov
popa
icebp
add
add
js
add
incb
mov
lea
pop
shl
push
lea
push
push
push
push
push
push
push
lea
push
push
call
add
add
shlb
add
add
out
test
add
add
xchg
out
add
into
incb
out
fcmovnbe
mov
int
add
add
add
fucomp
outsl
xchg
loop
pushf
movsb
mov
xchg
push
int3
imul
mov
xor
mov
lea
pop
xor
push
lea
pop
mov
add
push
sub
pop
pop
push
inc
pop
pop
pop
push
sub
pop
pop
leave
push
push
lea
push
push
push
push
push
push
push
call
pusha
ja
lret
add
add
mov
push
std
negl
add
mov
mov
push
add
pop
imul
mov
fildl
add
mov
movsl
add
jns
mov
out
add
add
jge
push
add
push
mov
add
add
shlb
outsl
loopne
jbe
or
imulb
call
lea
pop
ret
push
shr
sub
pop
push
push
ror
sub
not
pop
mov
push
push
rol
shr
shl
shl
pop
push
push
push
rol
shl
sub
pop
push
push
push
push
push
push
lea
push
push
push
call
add
jb
mov
mov
add
add
add
add
add
add
rolb
enter
jge
mov
fsubr
add
add
add
mov
add
add
add
lock
add
push
int
add
add
xchg
stos
add
mov
mov
add
cld
lea
pop
mov
mov
push
push
push
push
push
lea
push
call
add
int3
fidivrs
cmc
add
in
cmpsl
add
testl
xchg
mov
add
push
add
push
add
mov
popf
ljmp
mov
cmpsl
movsl
add
xlat
add
jle
js
add
lcall
lea
pop
mov
push
sub
sub
not
pop
test
je
push
push
push
lea
push
call
aad
xlat
add
add
call
hlt
add
sahf
add
push
in
add
add
pop
add
xchg
add
add
stos
jb
add
mov
in
call
add
add
popf
xchg
jl
add
fisubrl
cli
aam
les
jno
push
sub
pop
test
je
push
push
push
push
push
push
push
push
push
push
call
movsl
int
add
insb
lds
roll
pusha
cltd
rcrb
in
mov
push
mov
add
add
into
add
jo
int
add
fiadds
outsl
xchg
jmp
int3
pop
lea
lods
or
repnz
add
add
add
push
int
push
faddl
mov
mov
loop
fldl
pop
roll
add
sti
ljmp
lea
pop
mov
push
push
push
push
push
lea
push
push
push
call
add
arpl
jnp
clc
mov
fcmovnbe
add
add
flds
icebp
add
add
add
mov
js
add
add
add
add
mov
lods
add
sti
add
lret
outsl
mov
mov
hlt
add
add
imul
add
stos
out
add
mov
rcl
add
pop
mov
push
shl
add
inc
pop
mov
push
push
push
push
push
push
push
push
call
push
add
add
sti
outsl
lock
lea
ljmp
test
cmpsl
add
mov
add
xchg
xchg
mov
aam
jp
jo
cld
add
jbe
int3
in
mov
lea
pop
inc
push
pop
cmp
je
test
je
push
push
push
push
lea
push
push
push
call
add
add
gs
add
test
add
mov
xchg
add
mov
mov
addl
add
mov
push
out
mov
mov
add
testl
add
mov
sbb
mov
push
push
push
call
popa
fistpll
add
add
xchg
jnp
cmc
add
xchg
add
add
imulb
add
jp
popa
add
lret
add
add
add
sub
mov
bound
inc
push
add
pop
cmp
je
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
imul
add
addl
ret
sti
jb
incb
add
jae
cli
add
add
addr16
mov
mov
add
mov
add
xchg
mov
int3
loop
jo
mov
test
add
les
rorb
adc
call
ffree
lret
in
xor
pop
xor
push
sub
not
pop
pop
pop
push
lea
push
lea
push
call
add
add
push
push
add
lret
jecxz
scas
mov
mov
jae
ret
les
jne
add
add
add
add
pushf
test
lods
add
add
xchg
in
pop
sahf
add
out
rolb
pop
add
out
add
out
ja
add
ficoml
les
pop
push
lea
push
push
push
push
lea
push
lea
push
push
push
push
call
fdivr
cmc
add
loope
mov
imul
clc
add
add
cmpsb
jne
add
add
mov
xchg
movsb
add
filds
add
call
fucom
sub
add
add
cmc
data16
lods
lcall
bound
pop
leave
push
ror
sub
pop
ret
push
push
lea
push
lea
push
call
add
push
fiadds
mov
add
add
add
add
add
add
add
fwait
test
pop
out
popf
add
add
add
jns
add
pop
mov
push
sub
shl
pop
inc
cmp
jne
push
ror
inc
pop
lea
push
push
call
add
mov
out
int
jl
xchg
mov
mov
add
test
mov
cmpsl
lcall
hlt
push
add
icebp
jns
roll
add
add
sar
add
hlt
lea
pop
mov
push
push
push
push
lea
push
lea
push
lea
push
push
call
scas
add
add
xchg
lahf
mov
add
xchg
add
add
pop
aad
sahf
add
jl
fadds
add
mov
out
xchg
insb
loope
mov
mov
add
loop
lods
add
add
fildl
add
push
add
pop
js
xchg
nop
je
sarl
lea
pop
test
je
push
not
pop
mov
add
push
shl
dec
add
pop
cmp
jne
push
pop
mov
push
push
push
lea
push
push
lea
push
push
push
push
call
add
push
mov
cmc
add
mov
push
jne
push
xchg
mov
pushf
movb
lret
jo
in
mov
add
jnp
sti
add
mov
add
add
push
int3
lea
pop
test
je
push
shl
sub
xor
pop
mov
add
push
shr
xor
pop
cmp
je
push
pop
jmp
push
push
push
push
lea
push
push
call
add
fadds
fdivs
outsl
cwtl
mov
lret
add
jns
jns
add
jbe
add
cmpsb
add
aam
add
enter
add
mov
lea
pop
xor
pop
push
lea
push
push
push
push
push
push
lea
push
push
call
add
ljmp
lret
add
iret
shlb
rolb
xchg
out
cli
int
je
pop
add
add
fwait
fs
loopne
add
add
add
push
add
add
addl
add
iret
mov
lea
pop
pop
push
push
push
push
call
je
addl
std
pop
into
add
add
lret
lea
mov
cltd
insb
gs
repnz
mov
add
fldcw
add
sahf
int
mov
clc
add
mov
xchg
add
pop
push
fldl
mov
test
ficomps
lea
pop
pop
pop
push
push
push
call
add
popa
testl
cmpsl
add
add
add
ror
jecxz
push
add
in
add
testl
jbe
fcmovu
jge
push
push
shlb
add
add
pop
add
faddl
pop
in
vcmppd
fists
add
add
js
movsb
fsubl
add
xlat
add
popa
or
leave
push
sub
sub
rol
shr
pop
ret
lea
push
push
push
push
push
call
in
aam
add
roll
mov
addl
popl
mov
cmpsl
mov
into
add
add
add
add
xchg
add
add
mov
push
xchg
sahf
fmull
pop
pop
pop
push
push
push
push
push
lea
push
push
call
rol
xchg
loopne
add
add
mov
faddl
addb
fiaddl
add
into
add
xlat
pushf
fucom
jle
add
stos
add
push
incb
lds
lcall
add
out
xchg
andb
popa
jecxz
stos
iret
lds
mov
add
out
test
add
enter
mov
lea
pop
pop
pop
push
xor
sub
shl
pop
leave
push
push
push
lea
push
push
lea
push
push
call
push
lahf
jns
jmp
test
add
add
xchg
add
mov
add
jo
push
fistpl
add
add
in
out
jp
add
arpl
mov
push
push
jne
hlt
iret
add
repnz
add
arpl
cmc
mov
mov
lea
pop
ret
mov
push
push
lea
push
push
lea
push
call
je
ljmp
in
cld
add
cmpsb
stos
add
add
add
xchg
add
add
mov
add
popa
add
outsl
add
mov
cmpsb
add
xorl
mov
lea
pop
pop
push
ror
shl
dec
shr
pop
pop
push
push
push
push
push
push
push
push
push
call
add
add
fiadds
add
add
js
cltd
cmpsl
add
mov
add
jge
rolb
scas
add
sahf
stos
pusha
mov
jno
add
add
nop
faddl
popf
add
lcall
add
shr
add
add
js
add
ficoms
sti
add
mov
mov
lret
hlt
mov
fmull
pop
push
add
pop
leave
push
push
push
push
lea
push
call
pushf
stos
cmpsl
pusha
push
add
pop
std
add
mov
mov
les
add
addb
insb
add
ljmp
push
add
aad
mov
aad
add
mov
pop
movl
pop
xchg
add
leave
incb
mov
add
mov
roll
out
cld
add
cmpsb
jno
add
jl
mov
lea
pop
ret
test
push
test
jae
test
jb
push
jae
daa
xchg
leave
jae
test
jae
int3
mov
add
mov
xchg
inc
sub
mov
fidivrl
dec
add
jo
aas
shll
cmpsb
pop
mov
inc
cmpl
jge
and
lock
mov
cmpsl
jp
std
out
push
mov
add
les
adc
pop
adc
mov
fdivp
inc
xchg
into
inc
pop
sub
dec
sti
jmp
mov
jecxz
adc
outsl
loope
xlat
stos
movsb
jb
push
gs
jo
rcrb
leave
add
pop
push
lock
lds
adcb
mov
in
xor
sbb
add
lea
jge
and
push
repz
push
pop
adc
outsl
cld
es
fldl
jle
pushf
outsl
mov
ljmp
outsb
aad
dec
dec
test
and
rclb
sub
sbbl
lds
lcall
rolb
push
sub
loop
mov
dec
mov
loopne
pushf
jp
pop
fadd
jbe
mov
stc
cltd
repz
nop
pop
loop
imul
or
cmp
xchg
loope
cld
insb
insl
jecxz
das
fsubrl
andl
enter
stc
lods
sti
or
mov
lret
push
sbb
mov
jbe
cmp
sbb
fistps
imul
jnp
pusha
dec
add
cli
dec
sarl
push
jmp
xor
xor
pop
mov
daa
push
rcrl
stos
ja
shlb
sahf
xor
mov
xor
aaa
lea
lods
inc
lret
push
dec
push
inc
mov
bound
lret
stos
leave
loopne
pop
mov
loope
and
pop
add
ds
push
cmc
sbb
fldcw
mov
mov
or
sbb
fbstp
xchg
fistl
out
shl
mov
push
pop
mov
test
or
xchg
xor
call
subb
xor
pop
sub
mov
push
cmpsb
scas
and
inc
sahf
sarl
mov
pop
dec
pop
lock
sub
testb
sub
mov
fsub
lea
xchg
dec
popa
mov
fucomip
dec
out
push
push
popa
inc
ljmp
jge
mov
jl
clc
sbb
and
jp
sbb
in
push
sbb
and
jl
dec
in
cs
lret
xor
add
cmp
stc
mov
idiv
mov
loopne
mov
fld
popf
and
std
jb
fsts
xor
popa
mov
pushf
inc
fisubs
pop
clc
sub
push
sub
mov
push
xchg
sub
aas
adc
outsl
js
inc
mov
lds
gs
and
and
dec
je
mov
inc
add
and
push
inc
lret
fcmovnb
mov
cmpsb
mov
cltd
fstpl
push
lock
and
stos
jns
das
mov
fs
jo
mov
lods
clc
xor
cmp
dec
mov
mov
xchg
jmp
fsubr
push
and
aaa
jmp
decb
pop
dec
sti
or
dec
mov
popf
jnp
sub
out
inc
jnp
in
jmp
mov
and
aas
xor
inc
loopne
push
dec
and
shlw
std
sbb
pushf
nop
mov
push
inc
js
pop
daa
sub
dec
adc
mov
jge
in
clc
pop
lock
dec
cmpsb
out
sub
add
lret
mov
pop
insb
mov
dec
shll
pop
enter
adc
popa
pushf
push
cmp
imul
stos
cmpsl
push
mov
and
je
pushf
dec
lock
sbb
les
push
inc
lret
negl
cld
int
dec
lods
aaa
ss
push
adc
inc
mov
xchg
push
imul
cmc
xchg
jge
inc
jae
ret
pop
sub
pop
cmp
mov
pop
add
mov
push
and
dec
fstpt
mov
leave
jmp
mov
sbb
shrb
jnp
add
cmp
scas
mov
push
popf
xchg
test
dec
mov
lret
jno
clc
jae
sbb
gs
out
jg
enter
test
pop
xchg
add
dec
push
sti
rcrb
fsubl
sbb
xchg
mov
push
sub
pusha
movsl
and
fs
push
aas
or
imul
mov
mov
fs
jno
lea
gs
jle
mov
xor
pop
push
xor
cld
inc
pop
int3
int
push
aas
adc
xor
iret
lahf
mov
std
push
ret
pop
insl
incb
push
dec
jmp
jmp
daa
push
inc
push
xor
and
xchg
aam
mov
push
addr16
lock
adc
popf
sahf
fbld
jle
imul
sbb
dec
iret
inc
les
pop
in
jg,pn
mov
push
pop
sbb
add
cmp
cld
lcall
movsb
lret
out
xchg
out
pop
ret
insb
rclb
repz
add
in
repz
mov
jbe
outsb
pushl
jno
data16
inc
push
jmp
sbb
fnsave
cmp
aam
mov
mov
adc
inc
push
js
or
bound
rclb
lahf
mov
pop
mov
lret
jmp
jmp
pop
xchg
or
pop
mov
push
icebp
pusha
sbb
pushf
leave
mov
mov
pop
scas
pop
pop
jns
daa
and
jo
pushf
mov
jne
add
int
jno
in
mov
ret
mov
fimull
mov
sub
test
mov
loope
imul
lea
pop
int3
xor
xchg
lret
adc
mov
or
mov
mulb
mov
push
pop
insb
push
sub
fstp
mov
mov
ja
sub
test
int3
ja
test
fildl
into
icebp
jle
out
push
psubb
ja
shr
js
mov
jne
test
movsl
movsb
add
lods
push
mov
jge
push
dec
sub
mov
inc
jg
mov
cmpsb
push
dec
xchg
xchg
adc
fadds
pop
in
pop
sbb
test
xchg
popa
cmpsb
pop
out
ror
mov
fisubrs
lret
movsl
jp
ds
sbb
pop
lahf
test
jle
iret
ficomps
insl
insb
mov
sarb
cmpsl
mov
ret
popf
jp
adc
inc
or
and
cwtl
ret
sbb
adc
aas
inc
mov
xchg
sbb
rcr
cmpsl
inc
mov
ret
addb
fisubrs
and
jb
adc
lods
daa
stos
push
push
mov
or
xor
imul
shrb
xchg
mov
mov
fidivrs
xlat
jg
xor
push
mov
pop
aad
test
pop
stc
jbe
jl
les
in
xor
movsl
xor
mov
sbb
adc
imul
add
pop
inc
and
sbb
test
std
adc
push
ds
sub
cmp
xchg
xchg
stc
daa
cmp
or
arpl
sbb
mov
imul
or
xor
pop
lret
adc
bound
sub
test
adc
inc
add
dec
pop
aam
jmp
jmp
pop
mov
outsl
push
sbb
test
jp
xor
pop
push
mov
or
and
xor
jmp
mov
xchg
scas
xchg
mov
mov
leave
je
int
stc
shl
xor
in
cmp
fwait
movsl
and
jb
sahf
aad
xchg
int
shr
jecxz
jle
push
mov
test
imul
push
pop
xchg
stos
inc
mov
test
pop
fwait
out
clc
xchg
aas
xchg
xor
test
fimull
sbb
ds
iret
in
push
inc
cmpsb
in
push
ret
lahf
cwtl
push
dec
jg
sub
test
and
mov
push
rcrb
leave
lods
cld
push
cmp
ret
xchg
inc
adc
out
rorb
iret
xchg
cmp
dec
dec
flds
filds
test
test
andb
fistl
pop
xchg
sbb
loope
sub
cli
xsaveopt
pop
push
enter
adc
xorl
sbb
inc
add
mov
daa
jb
roll
lods
js
sub
insb
mov
mov
ror
loope
pop
push
call
mov
sbb
push
lret
add
inc
jnp
lea
loop
and
add
mov
and
and
jne
xchg
aaa
cmc
add
cmpsl
dec
push
enter
push
push
sahf
dec
aad
push
xchg
xchg
mov
idivb
and
fdivrl
jns
fldl
daa
stc
mov
pushl
ret
lods
sbb
mov
xorl
dec
fcoms
int3
jg
in
mov
mov
int3
insb
idivl
test
ja
sbb
cmpb
imul
xor
out
or
jae
ds
js
inc
and
xchg
test
iret
andb
scas
mov
cltd
mov
loope
lcall
inc
fimuls
enter
xorb
jle
je
inc
adc
or
inc
int3
out
rcl
sbb
adc
mov
shrl
ret
icebp
sti
in
ret
addr16
xchg
mov
push
pop
movsl
adc
or
pop
movsl
stc
les
sub
lods
repz
cli
imul
aad
push
repnz
iret
or
ret
movsb
aad
jbe
es
mov
stos
mov
push
fbld
push
inc
push
mov
sarb
mov
sub
pusha
ss
or
std
mov
xor
ret
dec
stos
lea
xchg
mov
lock
cmpsb
pushf
xchg
pop
sub
lea
jge
loop
xchg
pusha
pop
aaa
inc
push
in
sbb
push
push
lods
lods
xor
ja
sbb
xchg
jo
insl
xor
hlt
mov
xor
stos
mov
sbb
out
in
or
movsb
aas
subl
sub
xchg
int
fsubp
inc
cmp
icebp
cltd
add
sti
pop
mov
and
cltd
mov
into
dec
push
sub
dec
xor
enter
popf
push
xchg
lock
lds
shrb
loop
xchg
call
fisubrl
xchg
ret
or
in
test
adc
lret
xchg
mov
sub
xchg
fwait
stc
mov
xchg
jmp
or
jmp
mov
in
mov
das
and
fmuls
mov
adc
scas
push
xchg
xchg
inc
push
int
pushf
pop
shrl
imul
dec
cmc
in
adc
aas
mov
fcmovu
dec
dec
popa
test
icebp
pop
or
sub
sbb
cmp
jmp
js
ja
repz
and
jecxz
pop
mov
adc
ljmp
shll
jb
sub
pop
push
or
push
js
mov
xchg
fwait
cmovbe
inc
sub
daa
rcrb
test
shl
sub
repnz
inc
xchg
shll
adc
das
sub
cmp
fistpl
dec
sbb
fdivr
lock
jmp
jp
rcll
or
jmp
aaa
inc
jb
jb
cmc
das
cs
inc
mov
xchg
rcr
sub
xor
push
stos
into
ret
sub
daa
pop
adc
mov
mov
sarl
sbb
cmp
mov
mov
ret
or
add
frstor
shll
pop
add
aas
pop
add
xor
repnz
adc
stos
cmpsb
fstl
push
rcl
fists
lea
imul
jg
pop
movsb
aas
xchg
dec
lds
and
xchg
push
pop
sub
in
imul
aaa
sub
icebp
jo,pn
les
jbe
movsb
out
adcl
mov
nop
inc
pop
jmp
repnz
lods
cmpsl
shl
dec
jb
xor
add
dec
sub
arpl
jp
cmp
xchg
enter
jbe
test
rolb
or
dec
sahf
in
cmp
aam
or
mov
and
shlb
and
mov
add
in
loopne
jge
jmp
jle
push
jl
mov
nop
pop
xor
and
xchg
fistpl
cltd
clc
ret
lahf
dec
scas
pop
jge
pushf
lock
and
call
cmc
adc
ss
out
scas
jns
ret
cmp
loopne
cmp
adc
dec
xchg
push
pop
sub
jne
cmp
or
ret
leave
and
mov
inc
push
fmul
in
movsl
xor
adc
inc
idivl
push
xchg
jns
shlb
adcb
lahf
out
sbb
and
or
loop
jg
insb
mov
dec
cmp
jp
xlat
push
mov
mov
ljmp
push
clc
stos
xchg
or
movsb
loopne
pusha
fwait
jae
movsl
das
xor
mulb
out
and
sub
js
shrl
and
mov
pushf
mov
or
adc
jge
dec
pushf
test
int3
xchg
pop
mov
push
fcomps
add
adc
jl
fildll
lds
and
imul
movsb
inc
ret
lea
mov
push
jecxz
inc
mov
mov
mov
pusha
mov
pusha
mov
xor
push
push
and
in
add
rorb
dec
or
ja
cmc
xorb
mov
mov
rcll
lods
cltd
sbb
and
es
mov
int
popa
mov
cmpl
cmp
cld
cmp
add
fs
into
ss
stos
dec
setge
cli
mov
cld
shll
dec
orl
in
mov
xchg
cmc
pop
mov
add
pop
shrb
jb
push
mov
jne
inc
xlat
and
jge
std
push
imul
es
in
int3
lds
jae
jnp
xchg
add
lods
cmpsb
std
movsl
pop
icebp
adc
push
iret
repnz
inc
xor
dec
or
mov
xor
jbe
cltd
and
neg
stos
fcomip
add
aaa
popa
xor
icebp
sub
popf
mov
cmp
bound
push
fnstcw
xchg
test
jnp
dec
mov
jo
jno
mov
je
sub
and
dec
in
das
insb
das
in
loop
mov
sbb
xchg
lods
pop
adc
sti
into
or
xchg
orb
sti
and
mov
dec
jg
xor
rclb
push
sub
shlb
cld
xor
mov
ficoml
data16
jo
push
div
mov
dec
shll
and
xor
call
out
xor
clc
sbb
mov
aam
leave
insl
fs
inc
lcall
mov
test
lods
push
xchg
adc
jbe
and
and
jb
gs
add
sbb
lret
int
add
push
push
cwtl
das
imul
inc
cmp
cs
sub
call
lret
push
outsb
dec
lahf
or
cmpsl
jb
int3
pop
icebp
incb
repnz
mov
push
loopne
inc
sub
shl
inc
or
push
fwait
pop
pop
cmp
repz
sbb
cmc
cmpsl
jbe
dec
loopne
imulb
lods
or
push
adc
lret
mov
add
jne
insb
clc
imul
pushf
push
sahf
in
mov
aam
fsubrl
lods
aas
sub
cmpsb
xrelease
vcvtsi2sdl
loopne
jge
cmp
xor
or
js
mov
sub
jbe
xchg
xor
sti
sub
inc
dec
xchg
fsubl
push
js
xor
sbb
inc
loop
aaa
jp
imul
inc
popf
outsb
imul
out
or
cmp
push
int
sbb
push
ret
adc
cmp
xchg
test
adc
add
push
xchg
sbb
xor
xchg
xorb
sbb
add
pop
push
jg
repnz
in
cmp
or
mov
subb
or
jp
iret
sbb
or
fldenv
inc
xor
lods
dec
jbe
daa
rcll
adc
push
idiv
sub
push
imul
scas
dec
lahf
lret
icebp
xor
out
es
lods
int3
push
add
insl
rcr
jmp
pop
fnstsw
jl
fiadds
fstl
lret
inc
mov
das
push
mov
xchg
jmp
jp
mov
xchg
or
fwait
adc
sbb
xor
inc
pushf
arpl
inc
cmp
int
pop
mov
push
add
mov
xchg
sub
or
call
add
pop
cld
sti
mov
out
pop
shr
call
push
xchg
shr
loop
stos
pop
push
jecxz
out
mov
push
or
jno
mov
push
outsl
jbe
or
jno
rorb
dec
push
ljmp
inc
jno
sub
ret
lret
and
jmp
pusha
xor
int3
cmp
test
or
incl
push
and
test
jmp
push
pop
and
repnz
mov
mov
sub
jno
jle
fisubs
jno
inc
mov
push
jmp
and
cwtl
add
add
cmpb
jp
xlat
shll
cmpb
icebp
dec
push
shrl
std
or
lea
push
fcoml
dec
sub
cmp
jl
xorl
test
shll
int3
and
subl
adc
dec
mov
repz
or
es
js
mov
roll
push
jb
lret
sbb
adc
mov
dec
out
inc
and
or
pusha
push
cs
adc
jbe
xor
cltd
sar
fmuls
jecxz
test
out
out
inc
aas
or
mov
push
in
xchg
imul
lock
iret
or
test
out
in
and
cmp
and
and
jb
pop
inc
ja
js
imul
out
in
nop
push
jg
gs
subb
rdpmc
stos
sbb
sbb
and
or
test
fisttpl
aad
inc
or
sub
iret
test
hlt
pop
cmp
xlat
add
ret
jmp
push
mov
pusha
idiv
push
jo
add
adc
stos
push
gs
pop
in
aad
iret
insl
push
addr16
xchg
call
sub
rol
sub
xor
fiaddl
shufps
dec
into
popa
mov
sub
repz
lret
sarb
stc
or
nop
mov
xchg
sub
into
call
scas
clc
and
pop
sub
push
push
in
sbb
inc
pop
mov
xor
pop
addb
bound
nop
pop
icebp
mov
aaa
mov
lcall
dec
rcrl
repnz
mov
movsl
sbb
mov
fidivl
dec
push
mov
pop
mov
pop
push
cmp
fstpt
jle
or
jbe
out
call
in
ficomps
test
idivl
xchg
xlat
ret
mov
xchg
push
int3
ja
imul
xchg
push
int3
repz
push
inc
outsl
jp
repz
cmp
leave
mov
movsl
add
sbb
bound
jecxz
xchg
int3
leave
or
push
cmp
xor
or
xchg
pop
mov
or
iret
dec
je
push
inc
adc
adc
mov
stc
sub
jg
push
adc
jae
cmp
xor
sti
push
repnz
push
sbb
pop
jne
add
dec
adc
orl
add
lea
call
orb
push
insb
imul
test
xor
push
imul
push
and
into
test
sub
fldl
clc
insl
out
imul
out
and
arpl
adc
pop
jp
push
mov
aam
and
jmp
mov
dec
shr
or
aad
call
xor
dec
xor
sbb
movsl
dec
add
fnstcw
and
gs
cmp
ljmp
movsl
and
into
out
sti
xor
pop
adc
and
jne
ss
mov
enter
scas
and
pop
inc
addr16
shl
gs
xor
call
ja
sar
jl
roll
adc
jp
push
cmp
mov
hlt
and
pop
pop
ja
ds
inc
inc
out
sub
outsb
jge
in
cmpsl
insl
add
popa
sbbb
or
push
pusha
or
aam
xor
jmp
cld
sbb
loope
movsb
test
sub
call
push
mov
jo
cmp
jge
mul
fidivrl
pop
or
shrl
loope
push
jg
mov
mov
pop
adc
mov
or
movsb
repnz
push
stos
push
int
icebp
in
mov
ja
sbb
xchg
das
test
js
fstl
push
int3
in
movsb
mul
sub
add
sbb
or
or
and
fdivrl
sub
cmpsb
stos
inc
popf
and
dec
loop
mov
add
xor
sub
cmpl
sub
outsl
aam
cld
adc
ror
jg
pop
iret
cmp
lcall
adc
movsb
dec
pop
cmp
lret
jl
lods
hlt
lds
mov
rorb
dec
sbbl
dec
lods
jecxz
xorl
xchg
aam
scas
mov
mov
test
mov
test
xchg
aas
jg
cmc
xor
stos
mov
mov
mov
or
sub
xchg
rclb
jge
mov
je
ret
in
in
cmpsb
mov
jb
push
cmp
mov
mov
out
out
xor
xor
outsl
push
ljmp
into
pop
out
sbb
das
jno
fmul
adc
insl
jne
lock
xchg
shll
pusha
cmp
out
js
sub
mov
aaa
and
mov
pop
fcmovnb
cwtl
in
imul
fdivl
imul
mov
outsb
rcrb
xchg
xchg
dec
test
cmpb
mov
fisubl
push
adc
pop
jnp
mov
gs
add
pop
orb
jae
cmp
sbbl
mov
mov
inc
mov
push
jbe
pushf
dec
movsb
insl
mov
mov
xchg
lock
push
cmp
mov
adc
adc
mov
fsubs
jbe
jne
call
cmp
pop
xchg
out
jne
aad
fmuls
push
fnstcw
loop
push
test
std
fstpl
leave
arpl
add
sar
imul
jp
sbb
add
inc
pop
mov
rcl
or
mov
sub
xor
xchg
loop
or
add
jb
andl
scas
daa
adc
push
or
jnp
xchg
xlat
cmp
sub
xor
leave
sbb
divl
std
xchg
jl
call
push
inc
popa
dec
xchg
mov
inc
or
cltd
pop
hlt
jge
sti
movsl
jae
test
inc
clc
or
adc
push
sbb
shll
rcr
lods
dec
orl
fmul
adc
cmp
jns
pusha
fsubrs
cmp
dec
add
sbbb
data16
rol
cmp
gs
into
pop
mov
mov
lods
popa
push
pop
out
jnp
xchg
inc
push
out
lret
lds
xor
cmp
cmp
stos
add
shl
and
mov
icebp
icebp
loop
xor
test
xchg
shlb
sub
jl
mov
jle
mov
sti
aam
mov
xor
pop
sub
int3
cmp
mov
pop
test
andl
arpl
jp
loopne
lcall
sbb
mov
jne
inc
mov
push
inc
dec
outsb
out
sub
out
mov
jl
ljmp
adc
and
xchg
and
push
das
hlt
adc
ds
xchg
mov
dec
ja
ret
pop
add
sbb
sbb
pushf
mov
int3
dec
push
sbbb
fdivl
jle
dec
jg
loope
jae
xchg
mov
pop
and
lahf
ds
add
or
adc
xchg
jle
faddl
and
popa
and
lds
pop
xchg
mov
mov
mov
fidivrl
xchg
pushf
and
divl
sub
cmpb
mov
std
add
out
or
sti
ftst
mov
ficomps
outsl
pop
fsubs
loope
mov
adc
mov
pop
xor
inc
test
and
insl
test
dec
cmc
nop
pop
mov
sub
mov
sbb
jmp
mov
popf
mul
imul
gs
dec
sub
lret
repz
xchg
notl
xchg
lahf
push
push
adc
call
xchg
xchg
mov
pop
imul
or
addr16
push
nop
lea
shlb
leave
dec
and
sbb
mov
inc
mov
ljmp
mov
pop
push
dec
jl
jle
mov
pusha
dec
xchg
fstl
pop
cmc
pop
add
sbb
enter
pop
repz
cmp
xchg
int
icebp
stos
lea
inc
jmp
mov
xor
ljmp
inc
es
pop
hlt
xchg
std
add
and
jb
xor
std
addr16
lds
mov
adc
das
aad
shll
xor
subps
pop
xor
cmc
out
xor
jmp
add
push
imul
mov
roll
aas
test
fcmove
insl
jns
mov
mov
insl
fcompl
xchg
fmulp
push
fnsave
stos
sub
adc
xor
jbe
mov
call
mov
movsb
inc
mov
push
xor
ficoms
in
cwtl
and
xor
mov
cmp
fiadds
dec
jecxz
mov
ret
or
push
adcl
push
movsb
add
mov
jmp
inc
jle
xor
jns
inc
and
cwtl
and
stos
fimuls
orb
test
cmp
pop
pop
pop
jecxz
nop
lahf
dec
adc
or
out
cmp
sbb
dec
pusha
push
leave
mov
xor
push
dec
sub
pop
mov
or
lods
mull
pop
ret
movsb
loope
xchg
data16
dec
mov
mov
push
lahf
ret
jg
push
clc
cmp
cwtl
pop
cmp
test
pop
xchg
and
pop
fs
mov
cld
cmp
imulb
pop
flds
adc
nop
fidivl
jne
sub
inc
mov
imul
scas
pushl
xor
fidivrs
push
es
addl
sbb
outsb
sbb
cld
je
mov
xchg
mov
xchg
cmp
ss
push
jge
jnp
into
mov
mov
fscale
loop,pt
pop
jbe
jg
les
out
mov
sbb
mov
stc
out
inc
loop
push
js
pop
sbb
mov
sbb
fisttps
outsl
add
sbb
scas
inc
bound
pop
sbb
sbb
hlt
mov
shlb
mov
cmp
mov
jo
adc
sub
arpl
repz
adc
sub
xor
xchg
push
in
cs
adc
xor
mov
insb
inc
inc
iret
jo
out
sub
dec
xlat
mov
xchg
cmp
mov
pop
xchg
fldcw
rcll
aaa
aas
outsl
and
xchg
stos
jle
push
hlt
repnz
test
adc
cs
fmuls
repz
push
test
int3
mov
inc
pop
test
ds
imul
popa
inc
out
dec
and
sub
dec
inc
xorl
jnp
mov
out
iret
sahf
fisttps
inc
push
stos
cmp
push
inc
pop
data16
adcb
dec
inc
xchg
dec
daa
repz
jle
iret
fisttps
inc
int
or
lds
out
fwait
cld
xor
xchg
scas
mov
in
pop
bound
neg
and
mov
push
test
mov
movsb
push
pop
enter
xchg
inc
roll
mov
mov
xor
xor
adc
jb
cld
or
inc
nop
xor
cmp
inc
and
idivb
inc
mov
mov
je
clc
fildl
or
xchg
inc
js
movsl
jg
fwait
mov
sbb
cltd
jnp
stc
std
out
mull
xor
xchg
jb
pop
add
hlt
push
mov
fistl
jmp
cld
lods
xchg
push
pop
sub
inc
stc
xchg
cwtl
aam
negl
and
xchg
movsb
test
arpl
sti
jp
nop
gs
xor
jecxz
fstpt
mov
inc
and
fiadds
jno,pt
cmp
or
and
aas
es
cltd
and
loopne
sbbl
test
jo
or
jle
mov
dec
scas
enter
mov
lahf
jo
imul
pop
sub
lds
pop
sub
xor
mov
cltd
mov
repz
mov
ljmp
negl
mov
cmp
outsl
pop
adc
push
xor
jge
in
inc
xchg
inc
add
arpl
fmull
mov
xchg
dec
adc
dec
jno
cs
insl
pop
xor
pop
mov
push
pop
leave
lret
insl
lock
sbb
fldenv
in
and
xchg
scas
lret
xchg
add
daa
push
sbb
sub
out
out
jae
fistps
mov
daa
rol
cmpsb
jae
pop
xchg
insb
push
push
mov
imul
mov
jmp
cli
add
call
xor
adc
data16
mov
jp
sbb
stos
int3
pusha
sub
pop
or
mov
pop
stc
fstl
bound
xchg
jno
mov
daa
mov
in
stos
push
into
and
fwait
repz
rcr
inc
xor
fisttpll
dec
test
test
mov
mov
pushf
xchg
xchg
xchg
movsl
lods
in
adc
jl
mov
cmpsb
add
das
dec
mov
js
pop
lock
add
cmp
dec
iret
push
std
dec
fdivl
movsl
jo
or
xchg
out
cmovns
sbb
cmp
inc
in
adc
leave
mov
fdivrs
or
in
cmp
jbe
packsswb
cli
inc
sub
xorl
xor
aaa
aaa
jns
sbb
jbe
cmpsb
push
cld
jg
int3
jns
sti
sub
add
or
mov
lods
mov
jae
inc
mov
cmp
int3
and
aaa
xor
mov
pusha
in
dec
xchg
pop
test
sahf
jno
test
jl
jp
loope
mov
jle
das
cmpsl
cmp
push
das
sbb
xchg
inc
sbb
int
and
or
mov
xchg
push
mov
pop
mov
dec
pop
or
sbb
jnp
cmp
add
add
xor
ret
and
cwtd
aas
cltd
in
pop
xchg
inc
ret
pop
inc
xlat
and
and
insb
shrl
push
outsl
mov
mov
mov
lods
leave
jg
ret
push
pop
ss
cmp
cs
shr
ret
xor
mov
sub
insb
fadds
inc
call
or
cmp
add
inc
inc
jg
cmpsl
imul
sti
xchg
and
pop
not
call
or
pop
adc
sub
sbb
xchg
mov
and
jge
pop
ja
dec
pop
xor
lods
in
ret
lods
test
cld
push
adc
sbb
test
mov
jb
add
out
insb
jg
dec
mov
mov
xchg
mov
and
pop
mov
loop
lcall
lahf
inc
ficompl
push
xlat
test
imulb
jp
cmpsl
movsb
rolb
or
call
andl
imul
cld
iret
call
ja
int3
add
test
insl
xchg
gs
xchg
jmp
call
push
lods
xchg
cmc
movsb
sbb
cmp
test
mov
lret
in
movsl
out
cli
test
adc
mov
shll
loopne
mov
gs
movsb
loope
sbb
add
ljmp
out
lret
jmp
adc
lods
xor
xchg
mov
adc
cmp
mov
pop
sbb
lcall
or
cwtl
sarl
in
fisubrs
fdivs
xor
call
jae
and
jecxz
fs
xchg
add
inc
or
adc
aaa
fwait
mov
insb
and
test
push
and
insl
pop
mov
push
sarl
icebp
in
fwait
enter
pop
loope
fcomps
enter
ret
sub
jle
mov
pop
push
and
clc
ficoms
push
bswap
pop
imul
dec
pop
dec
and
jnp
mov
push
add
rorl
lret
movsl
icebp
movsl
in
mov
rcl
stos
mov
bound
lea
xor
in
and
mov
xor
mov
inc
scas
andb
sub
xor
jae,pn
push
enter
shr
pushf
or
scas
popa
adc
out
popa
sahf
and
loope
inc
std
push
shl
popf
aam
rclb
icebp
lds
adc
and
mov
jecxz
sub
ss
and
pop
inc
loop
shrb
push
jnp
je
pop
pop
lret
addb
bt
int3
inc
pop
leave
dec
jno
outsb
jae
jle
flds
fbstp
xchg
call
out
dec
je
movsb
inc
iret
lods
insl
push
out
fwait
or
mov
idivl
ja
and
jge
sbb
mov
aam
in
adc
inc
pop
out
imul
xor
or
iret
xor
inc
inc
loopne
aas
insb
ljmp
cmp
imul
mov
jns
fwait
xchg
push
or
push
sti
sbb
inc
push
xchg
mov
stos
movsl
xchg
pop
aas
mov
or
jb
lods
loopne
pop
or
jns
mov
and
cli
fistpll
and
rorb
cltd
in
push
jl
insl
movsb
sbb
fwait
sarb
jb
sub
mov
jb
sub
outsb
sti
rcrl
mov
jnp
test
push
rorb
mov
repnz
imul
xor
and
cmp
addl
test
enter
fisttps
mov
push
jge
outsb
adc
leave
sbb
test
push
mov
sbb
dec
mov
cltd
push
sbb
fldcw
das
sbb
inc
mov
bound
fildll
in
adc
fstpt
scas
mov
int3
testl
xchg
in
jle
das
xchg
and
arpl
lret
test
nop
js
push
mov
xchg
aam
add
add
push
fs
arpl
mov
mov
xor
xor
sbb
in
dec
cli
rcrb
or
jp
lods
mov
fwait
add
inc
in
test
sbb
sbb
inc
insl
cmpsl
jno,pt
sbb
jo
cs
mov
scas
movsl
adc
dec
sarb
arpl
lods
lcall
es
cs
cwtl
pop
dec
jno
decl
clc
insl
rcrl
and
aaa
jl
push
sti
fimull
xchg
mov
pop
lock
add
pushf
jl
test
inc
adc
jae
cmpl
in
call
adc
cli
push
adcl
jns,pn
xor
xchg
xchg
xor
pop
pop
in
sahf
roll
inc
jge
sub
test
jns
roll
lods
pop
in
mov
jns
xchg
leave
data16
mov
dec
jmp
into
lds
das
mov
xchg
xchg
shll
push
nop
mov
aad
xchg
in
out
call
mov
add
pop
sbb
stos
clc
add
mov
popa
fcmovu
lcall
pushl
daa
ds
xlat
lahf
mov
cmp
mov
rcrb
ficomps
sahf
test
movsl
mov
pop
add
jb
and
lahf
jb
cmovno
mov
add
sub
out
lock
cs
inc
fstps
and
xchg
jle,pn
stc
loope
les
mov
leave
xchg
cli
ja
in
adc
xor
out
pop
addr16
aas
jae
pop
loop
push
and
faddl
inc
inc
insb
cltd
push
mov
pop
imul
push
lock
push
adc
push
fmull
testb
test
sahf
jbe,pt
into
mov
inc
fisttps
test
push
sarl
push
jo
push
sbb
mov
push
mov
sbb
dec
sbb
pop
inc
inc
mov
test
mov
inc
dec
xor
outsl
mov
inc
pushf
mov
loop
idiv
dec
pop
cmp
xchg
mov
enter
nop
add
insl
lods
add
cltd
in
js
adc
iret
jmp
push
push
dec
fwait
push
je
les
jge
jo
jne
jae
mov
xchg
cmp
inc
jl
loopne
loope
dec
mov
pop
lret
jmp
scas
and
fcmovb
cmpsb
inc
in
aas
mov
lea
mov
bound
fsubrl
adc
ret
rorb
cmp
jecxz
adc
push
xchg
scas
sti
mov
hlt
lods
jle
clc
movsl
cli
xor
sbb
dec
stc
mov
dec
cmpsb
shl
lea
stos
pop
loopne
fidivl
sbb
lcall
jo
loop
cmp
jecxz
xchg
pop
lcall
cmp
jne
int3
lock
mov
lahf
mov
sub
sbb
jnp
cmp
lods
mov
mov
std
repnz
sbb
xchg
adc
repz
and
pop
repz
iret
or
xchg
xchg
lea
das
push
add
lret
xchg
out
in
jp
jg
xchg
repz
rorl
mov
xor
inc
sbb
notl
out
gs
jmp
jge
xor
inc
xchg
imul
jle
enter
iret
dec
xchg
jg
pop
aas
pusha
lods
sub
lods
cmp
sub
mov
inc
sbb
or
lock
mov
pop
out
ljmp
mov
aaa
mov
mov
std
lret
adcl
mov
cmp
or
push
push
mov
push
xchg
mov
lret
testl
das
ret
pop
out
dec
xlat
push
ss
hlt
fwait
cmpsb
sbbl
shll
push
sub
test
xchg
jp
ror
xchg
push
dec
mov
jmp
xor
fmull
cmpsb
jns
cld
rcrb
stos
test
xor
mov
pop
mov
fs
fdiv
or
and
add
cmp
sub
mov
jge
out
mov
loop
or
test
cmpsb
add
fwait
je
jmp
add
dec
jge
subl
and
pop
and
iret
mov
mov
aam
mov
sub
adc
fwait
pusha
pop
addb
insl
mov
shll
mov
cld
pop
hlt
sbb
inc
xchg
mov
cltd
es
pop
aas
aaa
inc
adc
ss
lea
dec
cmp
xchg
imulb
xchg
fwait
lods
lfs
or
popf
sbb
bound
lods
insl
jne
mov
popa
dec
loope
cmp
mov
lcall
and
sub
xor
xchg
mov
lcall
dec
push
arpl
das
aad
mov
test
cmp
cli
mov
lds
jno
xchg
mov
pop
jnp
cwtl
stos
movl
pusha
pop
test
cmpsl
insb
nop
cmp
mov
xchg
adc
cmpsb
or
daa
notl
adc
addr16
jmp
das
cmp
stos
dec
clc
mov
mov
push
js
push
addb
jmp
mov
cmc
call
or
push
mov
push
xor
sub
xchg
lcall
push
jl
mov
jne
out
lret
adc
lahf
nop
jp
mov
adc
sub
cmp
rclb
ss
cwtl
dec
or
mov
js
xlat
xlat
push
stos
push
and
mov
sub
pusha
fcompl
add
push
push
outsb
inc
fimull
pop
into
subb
xor
loope
adc
sub
shrb
lea
insb
test
jle
push
pxor
pop
ret
je
movl
loope
xor
and
adc
cmp
fwait
repz
push
mov
repz
in
jo
mov
pop
push
shlb
jge
lret
leave
jmp
fdivp
jecxz
fisubrl
mov
sahf
pusha
lods
mov
xchg
out
int
adc
mov
mov
push
mov
xchg
loop
sub
adc
in
mov
sarl
les
mov
dec
adc
inc
push
aaa
cs
dec
or
std
inc
sub
aaa
shl
lcall
dec
in
inc
aad
dec
sub
mov
adc
shll
dec
aam
cmc
mov
stos
out
sar
inc
mov
sbb
stos
ret
test
adc
jl
inc
mov
or
inc
lods
decb
jne
orl
jo
cmp
nop
adc
rcrl
sub
sbb
push
dec
adc
xchg
loopne
push
dec
movsb
push
adc
inc
push
or
or
int3
xchg
inc
shlb
jg
sub
int3
mov
jns
icebp
mov
gs
call
cmp
in
mov
stc
inc
or
jmp
sti
pop
mov
aad
push
fwait
insb
adc
leave
mov
mov
mov
mov
inc
mov
int3
jo
rcrl
xchg
mull
pop
jb
dec
stos
pop
cmp
xchg
stc
and
cmp
in
orb
pop
xor
cmp
shrl
testb
xor
sub
aam
fdivr
or
jnp
xchg
fildll
jae
inc
cmp
fisttps
ljmp
lods
pop
sub
js
or
idivb
mull
add
push
sbb
pop
subl
or
mov
out
xchg
sbb
mov
adc
stc
and
or
aas
adc
sub
notl
adc
lods
and
test
xchg
dec
cmp
outsb
sub
or
sti
mov
jne
clc
pushf
imul
addb
insl
jae
scas
rcr
inc
or
inc
mov
pop
test
mov
sbb
jbe
jmp
stos
and
in
leave
push
or
sti
jbe
xor
jo
dec
or
xor
rcr
inc
cmp
neg
cli
insb
xor
scas
mov
push
mov
sti
jne
dec
mov
sub
loope
add
mov
xchg
mov
push
push
adc
jmp
jle
mov
jae
sahf
sub
in
lret
dec
push
inc
popf
insb
sub
ret
cltd
pop
push
lcall
mov
inc
jb
push
outsb
repz
rol
outsb
and
adc
push
lds
mov
das
adc
pop
jge
cli
pop
pop
aaa
imul
mov
cltd
pop
mov
sbb
mov
fidivs
jmp
push
inc
cmpsl
sub
cltd
std
cmpsb
outsb
jmp
pop
sbb
dec
jbe
and
and
les
popa
push
and
pop
dec
arpl
in
lds
pop
sbb
xchg
hlt
fsub
adc
and
sub
testl
fisttps
push
xchg
push
roll
dec
je
xchg
sti
shrl
movsb
out
push
xor
call
scas
test
jmp
xchg
mov
pop
sbb
cmpsb
push
gs
cmpsb
push
pop
push
xor
cmp
xchg
inc
or
fst
push
daa
addb
mov
jo
mov
mov
std
push
out
jp
das
mov
loopne
mov
sbb
shlb
loop
test
dec
addb
clc
jl
inc
and
mov
icebp
sbb
mov
cs
fs
inc
push
es
xor
arpl
adc
fwait
jns
sub
int3
inc
mov
bound
rol
lock
jge
loope
push
lea
fisttpll
xor
cwtl
jge
clc
xchg
add
imul
and
or
sahf
fcoml
cmp
cltd
in
decb
notl
sbb
mull
bound
into
mov
jns
cmp
xlat
xor
sarb
cmpsl
pop
fdivr
mov
add
aam
jno
sbb
outsl
mov
bound
push
orl
lock
add
jne
fcoms
push
add
addr16
loopne
imul
mov
mov
cmp
cmp
or
mov
scas
sti
adc
push
add
sahf
mov
jge
mov
jle
popa
xlat
aad
jns
gs
loopne
mov
mov
fwait
push
add
mov
or
les
adc
xor
mov
sub
and
in
xchg
mov
fildll
ret
mov
test
cmp
and
aam
into
pop
les
jne
lods
aad
inc
cltd
push
adc
sub
and
aaa
mov
addr16
add
pmulhuw
out
cmp
mov
in
inc
fsubr
cltd
jo
inc
jmp
jecxz
sahf
stos
movsl
add
push
sbb
adc
imul
xchg
in
add
xlat
pop
std
jo
sarl
int3
jp
dec
sti
das
push
adc
insb
pop
dec
pop
xor
cmpsb
mov
js
ret
mov
mov
push
int
push
dec
or
sbb
xor
adc
xchg
movsb
sub
stos
and
adc
gs
and
ds
mov
push
mov
pop
dec
mov
pop
sub
or
inc
cwtl
cli
pop
jns
sbb
dec
cli
je
jne
jge
roll
or
mov
aad
mov
sbb
lea
push
int3
into
aas
dec
and
push
scas
push
notl
cmp
inc
iret
aad
cmp
cmp
ficomps
nop
xchg
cmpsb
push
xchg
adc
mov
cmp
mov
int
sub
adc
in
mulb
inc
movb
call
push
arpl
mov
movsl
stos
insl
insb
testb
adc
mov
dec
add
addr16
cmp
js
lds
inc
aas
adc
xorb
or
cmp
out
pop
sbb
push
daa
cmc
sub
test
mov
rcl
popf
lods
inc
fisubl
mov
or
jge
icebp
push
test
cld
lret
fmuls
mov
rclb
out
cmp
jecxz
mov
inc
xor
mov
imul
pushl
int
pop
inc
xlat
in
loop
insl
mov
dec
dec
stos
jle
lcall
in
jp
fwait
and
sti
add
dec
repnz
fwait
ss
and
cld
leave
into
clc
push
jae
pop
push
xchg
data16
adc
int
push
push
out
rclb
rol
data16
call
icebp
int
dec
pushf
cmpsb
je
subl
lods
jb
fdivrl
lcall
inc
addr16
fsubl
mov
mov
push
cmc
ljmp
push
mov
mov
xchg
movsb
pop
xor
push
adc
pop
pop
jne
xchg
fsub
push
clc
pusha
lea
arpl
dec
fdivrs
jle
jb
add
or
dec
push
arpl
ds
out
xor
sbb
ficoms
fucomip
jge
mov
popa
dec
je
lods
les
imul
lods
adc
je
adc
frstor
clc
stos
stos
cmp
jb
or
dec
std
mov
pop
stos
out
cld
insl
data16
jae
fwait
int3
or
jnp
test
in
out
sti
cli
pop
unpcklps
jg
popa
xchg
lcall
in
inc
in
jg
out
xor
fstpt
in
out
sbb
insb
ret
push
inc
aas
mov
pop
jne
aas
pop
push
mov
adc
cmpsl
push
mov
sti
mov
or
fstpt
sahf
test
dec
sub
dec
fldcw
xchg
adc
mov
int
adc
mov
cltd
dec
jne
rcll
popa
aad
pop
sbbb
push
mov
sub
sbb
imul
lcall
dec
mov
sub
pop
int
mov
adc
arpl
lea
add
dec
add
gs
idivb
idivb
mov
and
scas
sbbb
pop
cwtl
cmpsl
mov
sbb
daa
adc
cmpsb
fldl
std
mov
repnz
sbb
aas
stos
push
push
mov
in
shll
and
push
andb
out
cmpsl
inc
repnz
mov
dec
leave
push
repnz
es
push
jo
mov
or
rcl
into
in
jnp
push
mov
and
xchg
movsl
mov
cltd
dec
movsl
cmp
push
scas
jg
cmc
js
insl
fistpll
lcall
in
cmp
sbb
push
loope
gs
jg
sub
adc
das
mov
jnp
dec
sbb
and
add
xchg
stc
rcl
scas
sahf
iret
adc
dec
pop
ficoml
mov
add
sub
idivb
mov
pop
filds
xchg
std
stos
mov
xor
pop
decl
addb
std
fdivrl
loope
lock
and
cs
lahf
pop
sbb
pop
mov
xchg
sbb
push
rorb
or
xchg
sub
frstor
in
clc
sub
add
xchg
cltd
xor
xchg
mov
pop
mov
call
sti
push
xchg
jns
cs
xchg
fisubrl
fistl
hlt
add
jmp
lcall
mov
dec
mov
addr16
or
mov
and
lds
adc
popf
call
and
sbb
clc
sbb
into
icebp
das
cld
lock
insl
xor
pop
ds
test
dec
or
cwtl
rclb
jmp
dec
mov
repnz
pop
in
or
xor
add
jecxz
lret
jnp
push
sub
adc
lea
lods
lret
into
xchg
test
mov
pusha
sub
shll
push
fxch
orb
jge
push
cs
aam
and
or
xor
inc
pop
mov
push
test
mov
leave
fs
jmp
inc
call
mov
pushf
inc
popa
rcrl
cli
jbe
push
gs
clc
mov
outsb
fldt
add
ret
leave
adc
sbb
mov
sub
dec
mov
mov
negl
lcall
loope
lret
test
out
and
mov
test
sbb
xor
sbb
mov
xlat
dec
lcall
sti
mov
cld
jmp
fwait
push
lods
cmp
sub
ljmp
push
adc
xor
int3
pop
pop
or
push
xchg
imul
icebp
jecxz
mov
lea
or
push
cmpsb
or
dec
or
or
sbb
adc
mov
leave
push
roll
inc
jmp
xor
sub
fisttpll
lea
add
int
pushf
mov
adc
enter
dec
add
icebp
or
fbstp
enter
in
push
mov
mov
aam
addr16
mov
and
cld
imul
push
cvtps2pd
dec
push
mov
shll
mov
clc
pushl
mov
es
cmpsb
out
sahf
cmp
icebp
sti
test
pop
rol
xchg
xchg
pop
mov
insb
cmc
popa
cmp
adc
sbb
gs
add
imul
stc
jecxz
add
pop
and
sub
jb
arpl
call
shlb
daa
cmp
mov
push
clc
repz
sbb
fnstcw
das
stos
mov
lock
sbb
jno
out
lcall
imul
push
push
inc
push
mov
xchg
mov
xchg
xor
dec
xchg
or
mov
pop
mov
add
enter
sub
or
sahf
mov
xor
repnz
in
cmpsl
lods
pop
mov
adc
in
in
pop
sub
stos
mov
fcmove
mov
mov
flds
les
lahf
add
dec
pop
js
fwait
push
out
shlb
inc
rolb
sub
pop
aas
mov
jo
adc
mov
mov
mov
outsb
dec
fdivs
xchg
rdmsr
in
xor
pop
test
inc
movsb
and
adc
data16
out
push
imul
and
adc
leave
scas
scas
lods
ficompl
push
hlt
push
call
mov
in
ja
pop
sti
mov
lret
and
testb
adc
adc
or
enter
adc
aam
test
and
sub
jmp
xor
cmp
jb
pop
jmp
or
and
mov
push
mov
clc
jecxz
add
mov
jns
int
cmpsl
cmp
mov
inc
pop
mov
cwtl
in
test
xor
push
jp
inc
lea
stos
sbb
out
inc
mov
mov
icebp
dec
es
leave
pop
mov
jmp
out
cld
dec
icebp
sub
xchg
push
add
sbb
pop
cs
out
out
jb
cmp
mov
enter
imul
pop
lds
pushf
je
dec
pop
adc
jae
pop
repz
push
jmp
mov
xor
adc
mov
insb
icebp
mov
pop
jle
and
push
out
lahf
jno
scas
jns
ret
hlt
xchg
or
add
pop
mov
aad
mov
xchg
xchg
mov
shrb
repnz
or
jmp
and
insl
push
scas
add
outsb
inc
mov
cmc
xor
xchg
pop
iret
sbb
sbb
cmp
into
mov
pop
sarl
mov
lahf
inc
sub
cmp
cltd
notl
adc
add
sub
fistpl
in
loope
iret
dec
xlat
mov
dec
mov
cli
imul
stc
inc
mov
test
or
ss
mov
ljmp
div
in
icebp
iret
jb
cwtl
iret
jnp
xchg
xchg
lahf
push
pop
cmpsb
push
mov
pop
adc
add
subl
mov
xchg
hlt
mov
cmp
cmpsb
lahf
dec
mov
movb
mov
or
int3
dec
mov
mov
lods
cmp
rorl
fsubrs
push
add
mov
rolb
cwtl
mov
mov
inc
sbb
scas
lods
add
jnp
mov
dec
loop
int3
shl
lock
std
inc
push
lcall
arpl
lds
jge
pop
jg
xchg
lcall
addr16
and
iret
cmp
movsl
push
fsubrs
adc
dec
lds
test
jno
cmpsl
dec
pop
push
lahf
inc
jns
orl
xchg
lret
cmp
aaa
mov
outsb
iret
insl
jno
xor
andl
xor
cmpsb
dec
xor
push
push
and
insb
movsl
mov
adc
xchg
push
fimull
enter
fisubl
cmp
pop
jno
add
jno
or
mov
clc
mov
xor
xchg
cmp
into
loop
cmp
lret
adc
and
bound
add
push
mov
jge
outsl
pop
dec
sub
orl
jo
pushf
dec
aam
dec
inc
fldcw
sahf
cli
ljmp
mov
sub
mov
adc
or
insb
cltd
add
fwait
push
xchg
sbb
je
insb
adc
pop
movl
jl
mov
lahf
movsl
jb
lds
pop
popa
xchg
xor
push
loope
iret
sarb
adc
daa
inc
mov
add
lret
push
aam
xchg
mov
xchg
repz
pop
repnz
mov
and
mov
cmpsb
out
aaa
mov
xor
out
xor
xor
iret
inc
pusha
jp
pop
icebp
ljmp
cmp
jbe
sahf
int3
aam
mov
mov
imul
hlt
sti
aad
call
pop
jp
ret
mov
out
push
push
push
sub
jl
jne
mov
lcall
xchg
sbb
add
cmp
and
ficoms
xor
sbbl
push
test
cmp
fmul
pop
push
ds
cwtl
int3
pop
andb
fld
jns
loop
cltd
cmpsl
xchg
push
sahf
nop
pop
xor
jnp
or
stc
sbb
sub
or
std
data16
push
jle
xchg
sbb
jns
jo
hlt
cmp
push
sti
push
add
leave
push
mov
fisubs
sbb
dec
push
push
insl
adc
xorb
dec
int
lods
adc
arpl
sbb
out
or
pop
stos
jb
jmp
lcall
adcb
stos
test
mov
push
mov
cmp
fs
fidivl
and
push
icebp
pusha
mov
xor
out
call
loop
inc
out
jae
push
or
popf
xchg
push
jne
out
in
or
pop
in
sbb
cs
xchg
les
dec
loope
xchg
xchg
or
mov
ficomps
xchg
data16
or
int3
add
xor
mov
int
jnp
push
test
ficoms
cmp
das
ss
or
js
out
les
int3
mov
inc
pop
mov
aas
mov
fisubl
cli
cmp
lods
dec
xchg
pop
pop
nop
and
enter
or
cli
add
rorb
icebp
ds
enter
imul
popa
jmp
jp
gs
popf
xor
mov
imull
xchg
scas
bound
sahf
test
idivl
push
sub
imul
fiadds
mov
dec
idivl
decb
pop
aad
sub
out
popf
mov
dec
or
jecxz
adc
mov
dec
xor
dec
pop
xchg
enter
add
dec
nop
mov
test
add
in
ljmp
out
movsb
test
dec
mov
sub
cmp
xchg
fwait
lock
sbb
std
jle
movsb
repnz
cmp
ds
cmp
pop
addl
jnp
in
jmp
mov
cli
stos
and
push
mov
push
push
fwait
repz
mov
movl
fadd
rorl
ficoms
movsb
push
mov
lahf
mov
and
and
xor
cli
rorb
shlb
add
daa
rcrl
inc
sub
shrb
pop
test
adc
xchg
in
jo
or
mov
mov
jg
enter
push
lahf
add
sar
and
in
or
loope
lea
cmc
cli
in
fidivs
ret
inc
push
test
cmp
inc
in
roll
or
inc
mov
aad
stos
sete
hlt
sbb
xchg
int3
gs
adc
nop
rolb
lcall
adc
jp
fwait
cmp
ljmp
lods
lret
cmp
cmc
in
xchg
adc
repz
pop
mov
sbb
or
les
push
fmuls
push
das
mov
mov
and
ds
mov
xor
pop
pop
push
aad
sbb
inc
and
rcrl
loopne
lahf
outsb
and
pop
push
fcomip
jge
xchg
leave
pop
ret
xor
mov
iret
mov
arpl
pop
mov
rcl
pop
mov
xor
push
pop
outsb
fsts
and
popa
outsl
inc
cmpsb
and
and
and
dec
aam
and
mov
xchg
fdivrl
sbb
cmp
std
pop
ret
mov
jns
fs
xchg
pop
mov
sbb
or
mov
mov
pop
cmp
mov
shl
movb
xchg
mov
inc
and
dec
ljmp
push
idivl
ret
pop
cmpsl
cmp
mov
iret
cmp
in
mov
mov
testb
dec
icebp
adc
daa
imull
outsl
cmp
xchg
mov
aam
pop
inc
mov
or
pop
push
pop
inc
movsb
rol
xchg
cli
or
lock
das
test
fs
xor
pop
mov
xor
test
pop
jae
int
leave
jo
out
mov
std
cli
mov
in
or
pop
cs
inc
data16
push
insl
lods
mov
shrb
test
mull
pop
out
ja
shrl
mov
mov
ljmp
mov
mov
add
idivb
add
jae
or
jmp
fsubl
popa
movsl
mov
repz
inc
cmp
pop
stc
stos
loopew
mov
popl
dec
insl
mov
xchg
cwtl
cltd
inc
stc
popf
mov
in
int3
cmp
stos
pop
mov
test
mov
jecxz
xlat
movsl
add
loope
xchg
pop
inc
and
jmp
cmp
inc
jae
das
in
push
add
push
lods
sub
cmpsl
and
inc
inc
testb
dec
cmp
cli
and
shll
xorb
push
xchg
int3
cmp
cmpsb
mov
or
mov
pop
in
jecxz
jno
lahf
mov
fadd
aad
xor
into
rclb
pop
sub
mov
lret
sub
int
aam
gs
nop
adc
mov
pop
mov
leave
js
into
push
imul
cltd
pusha
pushl
test
cs
adc
rorb
test
xor
mov
ss
mov
movsl
cmp
add
mov
push
enter
xor
mov
inc
lock
xchg
das
inc
outsb
or
lret
or
std
pusha
into
xor
pop
sub
andb
out
cwtl
gs
lock
xor
mov
out
mov
adc
pop
mov
aaa
js
pop
add
psrad
das
arpl
add
dec
shlb
and
rolb
xor
pop
jecxz
cmp
push
outsb
xor
outsb
mov
add
lea
bound
mov
sub
sub
je
movsl
adc
mov
iret
clc
and
push
and
xor
dec
scas
iret
scas
bound
clc
sbb
cld
mov
stc
xchg
push
jle
les
inc
movhps
jecxz
jnp
lret
xor
fisubrl
in
out
fsubs
inc
fwait
mov
mov
pop
push
jnp
jnp
jle
lret
ss
dec
push
lods
inc
mov
imul
push
jl
pop
xor
mov
xor
ljmp
dec
mov
add
cli
ds
rcr
xchg
dec
or
imul
roll
xor
jecxz
jp
int
push
xor
and
mov
in
mov
add
push
idivl
lahf
add
lods
fistps
popa
loopne
or
xchg
inc
sbb
subb
cmpsl
mov
jmp
icebp
hlt
push
dec
sbb
cmp
fiaddl
scas
sub
or
gs
aam
rcrb
movsl
sub
icebp
pop
test
inc
andb
jne
shlb
push
lods
out
outsl
add
ss
inc
fs
sbb
dec
fcomip
ljmp
mov
das
mov
inc
in
insb
xchg
aam
lods
adc
inc
or
fnstsw
orb
mov
mov
lret
sbb
pop
pop
sbb
adc
mov
lods
sti
mov
pop
pop
mov
xor
aas
rclb
sbb
rcrl
dec
bound
cmp
jbe
ja
jae
mov
das
jne
je
pop
mov
mov
pop
scas
ja
in
cli
inc
dec
mov
push
sahf
push
cli
push
addr16
test
push
movsb
aaa
lahf
and
inc
push
mov
lahf
repz
out
mov
fdivrl
aad
out
fisubs
push
pushf
fwait
cmp
cmp
push
ret
jbe
cmpsb
scas
pop
mov
inc
das
cli
pusha
imulb
lds
pop
in
cmp
std
lock
imulb
mov
int
jg
inc
lret
and
lret
popa
pop
out
push
xlat
lea
sbbl
fisttps
bound
xor
ss
sub
pop
fs
enter
test
dec
cmp
mov
ja
bound
out
cld
fidivrs
sub
add
bound
test
push
or
push
jno
sbb
jg
daa
jo
mov
xor
cli
xchg
dec
js
sti
pop
ja
xchg
loope
into
cs
popf
aaa
xchg
sbb
outsl
ds
and
imul
fwait
subl
dec
jo
gs
ja
inc
packssdw
aaa
xchg
push
repnz
jne
jno
mov
test
pop
fstl
mov
lahf
jns
pusha
roll
cmp
cmc
dec
stos
out
push
cltd
icebp
mov
pushf
icebp
cmp
cltd
sub
shll
data16
pop
ss
or
scas
xchg
or
dec
and
xor
xor
pop
add
and
mov
pop
in
addr16
cld
fwait
jmp
pop
pop
and
aam
loop
sub
scas
dec
or
fiadds
sarb
sti
or
jns
mov
jle
imul
or
sub
xor
shrw
arpl
and
jns,pt
and
or
mov
fucomip
mov
nop
cmc
and
mov
hlt
imul
dec
sub
scas
push
mov
cld
ret
mov
inc
mov
cmp
loopne
pop
lret
xchg
insb
jl
inc
add
repnz
push
mov
repz
dec
jmp
cmp
fcompl
add
jno
mov
imul
ja
repnz
dec
insl
pop
out
rcr
jmp
ja
out
pop
insl
or
push
scas
jmp
scas
adc
mov
and
jo
imul
sbb
div
sti
adc
pop
lea
in
pop
adc
cmp
ja
mov
jecxz
mov
pop
fs
fwait
push
and
jno
das
lds
rcrb
xor
cs
lret
data16
divb
fdivp
iret
outsl
clc
scas
fistpl
lock
popa
pop
and
pusha
jnp
aas
cmpsl
ret
sbbl
test
aas
test
orl
ret
fwait
movsl
arpl
sbb
dec
sub
mov
jge
xchg
stos
icebp
xchg
push
lahf
test
mov
mov
fbld
sti
pop
lcall
cmp
scas
push
xor
jmp
mov
and
js
data16
sbbl
adc
sti
jle
aaa
inc
adc
adc
dec
xor
repz
sub
mov
cmp
xor
mov
mov
cmp
and
fnstcw
fmull
mov
jne
lret
data16
faddp
lds
mov
sbb
jmp
mov
jb
xchg
sbbl
sti
pusha
sub
imul
sub
sarb
jnp
fwait
hlt
xor
push
scas
insl
xorl
frstor
stos
mov
aas
loop
aaa
sub
mov
outsb
lcall
das
and
dec
clc
add
xor
loopne
fwait
cmc
fdivl
mov
es
sub
mov
pushf
jbe
mov
mov
sbb
and
sti
aas
add
and
jns
daa
inc
loope
andl
idivb
daa
or
jp
icebp
stc
jl
sbb
add
icebp
mov
inc
xchg
popl
shrb
in
cmpsb
mov
mov
dec
xchg
xor
roll
repnz
cli
inc
stos
jb
dec
add
mov
test
mull
cmp
movsb
mov
add
mov
sbb
sahf
imul
push
xor
mov
add
test
fcom
dec
in
fldenv
dec
addr16
fs
sub
es
xor
subl
mov
imul
mov
sub
push
mov
cmc
pop
stc
mov
lods
dec
add
int
cld
loop
nop
xor
lret
enter
push
lret
push
jb
imul
dec
push
jo
ljmp
adc
pushf
rcl
scas
and
push
xchg
int
mov
mov
jg
or
pop
adc
lods
pop
or
mov
rcrl
imul
dec
leave
cli
aas
push
mov
lcall
fs
sahf
xchg
mov
aas
xchg
xor
mov
jnp
pop
and
mov
push
ret
test
add
out
add
mov
sbb
scas
scas
dec
or
cmp
dec
ret
fdivl
inc
into
ud0
sbb
rcll
lret
cld
jmp
ds
mov
dec
dec
jnp
jl
mov
mov
negl
add
sbb
lret
jl
adc
inc
inc
fcompl
call
sub
scas
cld
cmp
mov
pop
add
pop
ljmp
xchg
mov
dec
mov
mov
in
jg
test
adc
xlat
sbb
outsb
or
inc
and
lcall
or
iret
fdivrl
xchg
into
dec
imul
icebp
mov
jno
or
xor
sbb
orl
ja
xchg
cmp
stos
scas
add
push
es
adc
adc
cmp
stc
stc
and
repz
shrl
and
test
stos
in
dec
outsl
dec
addr16
cmp
push
pop
xor
lock
mov
sub
pop
sbb
jo
movsl
es
inc
in
daa
imul
pop
in
addr16
mov
mov
rcrl
loopne
sub
dec
lret
repnz
sbb
stc
out
imul
fdivrs
dec
and
out
std
add
ss
xchg
mov
arpl
cmpsl
and
pop
cltd
xchg
dec
xchg
mov
mov
and
pusha
mov
sbb
repz
jle
enter
dec
mov
sahf
cmp
pop
sbb
mov
cmpl
adc
inc
adc
fists
sbb
mov
fisubrl
pop
ficompl
ja
cwtl
and
rclb
pop
into
xor
daa
push
dec
dec
arpl
leave
sub
mov
shlb
in
lods
sub
pushf
push
push
mov
mov
xchg
bound
push
pop
inc
es
cs
xor
imul
pop
xchg
inc
sbb
pop
lret
jg
insb
push
jne
out
and
jns
mov
stc
hlt
inc
push
fdivrl
jp
adc
sub
dec
lods
rcll
into
mov
dec
pop
xor
hlt
mov
push
loop
dec
repz
mov
nop
cmc
scas
push
cmp
sbb
lock
jmp
push
add
xor
out
lea
sub
repz
add
imul
add
jb
scas
je
popf
mov
ss
call
sub
cmp
or
inc
idiv
pop
xchg
or
xchg
cmp
dec
jns
mov
and
les
or
test
cmp
cmp
jle
inc
fucomi
push
add
or
add
stc
push
daa
push
and
js
xchg
cmpb
add
insl
xchg
sarb
lods
xchg
andb
adc
dec
lds
add
in
mov
jg
fldenv
xchg
pop
or
incl
or
or
xor
lret
sti
xor
mov
enter
pop
out
push
or
mov
les
jl
pop
jnp
dec
gs
mov
pop
pop
icebp
xchg
xor
andb
adc
int3
shrb
xlat
xchg
rcr
push
sbb
add
sbb
lds
add
ss
lcall
loope
adc
icebp
sti
lahf
cmpsb
mov
mov
add
fiadds
push
cwtl
int
mov
push
adc
stos
pop
cmc
stos
in
insl
xor
imul
lcall
in
mov
sahf
imul
call
and
scas
mov
jnp
or
jno
mov
dec
inc
mov
std
mov
cmovg
mov
aad
mov
pop
jnp
ljmp
rorb
data16
sub
mov
sbb
lret
lock
or
and
dec
cmpsl
movsl
into
jbe
push
or
out
xor
push
ret
std
push
andl
lahf
cwtl
mov
test
pop
stc
imul
mov
cmc
sub
or
bound
daa
dec
scas
push
call
pop
out
mov
sub
in
xchg
xchg
in
cmp
sbb
pop
sub
pop
test
lock
push
cmpsl
lcall
xor
and
jl
mov
cmp
or
testb
and
mov
pop
pushf
push
imul
cmp
push
stos
int3
jns
mov
sbb
out
pop
mov
mov
aaa
imul
pcmpgtb
pop
cmpsl
pop
and
mov
dec
cli
sub
stos
leave
ss
jg
mov
loope
xlat
pop
mov
movsb
sub
mov
sub
pop
adc
push
aam
and
notb
lods
insb
insb
dec
sbb
int3
test
mov
loopne
jns,pt
jp
call
mov
cld
dec
test
notb
cli
in
xchg
sti
jl
pop
sub
roll
mov
and
ret
sti
scas
cwtl
pop
dec
fnstsw
mov
rolb
dec
xor
jnp
in
aaa
inc
pop
scas
push
xchg
or
sti
push
imul
pop
jg
push
mov
imul
js
aam
jmp
dec
in
or
push
rolb
ss
sbb
fnstenv
insb
jle
sub
je
inc
xor
lods
daa
std
in
into
inc
mov
mov
or
outsb
incl
jae
movsb
dec
rorb
lret
cmp
xlat
or
aaa
pop
daa
pop
xchg
mov
iret
sbb
push
mov
mov
imul
and
jecxz
aas
add
cs
aas
and
and
adc
cmp
mov
in
pop
xchg
fucom
lret
push
daa
aaa
dec
pop
sbb
inc
nop
mov
push
fisttpll
push
cltd
jle
mov
in
sub
mov
mov
call
pop
pop
mulb
aas
xor
xchg
or
clc
sub
xchg
inc
jne
add
test
cmp
dec
dec
in
rolb
pop
lea
leave
pop
mov
mov
jbe
dec
scas
jbe
cs
notb
mov
pop
popf
movsl
les
fldl
xchg
lea
stos
repz
xchg
out
jne
out
cmpsb
and
jmp
bound
ret
loope
xchg
mov
in
in
pushw
stc
and
gs
jns
dec
pop
or
mov
pop
subl
ds
sbb
es
mov
stos
sub
out
enter
pop
sbb
cmpb
xlat
sub
aam
inc
call
push
sub
rcll
add
iret
push
outsl
mov
int
call
insb
sub
or
loope
ds
push
ficoms
fucomi
dec
dec
mov
xchg
fdivp
mov
ror
stos
aad
xorl
pop
lret
sub
mov
add
jne
orb
into
xchg
xor
cmp
je
pop
jmp
psubb
add
mov
add
stos
dec
ja
sbb
mov
dec
or
and
sar
sbb
pop
lea
push
jp
or
cmpsb
stos
and
dec
mov
mov
jge
cmp
pop
dec
jo
mov
mov
xor
sub
xchg
dec
push
pop
sbb
pop
xlat
jno
or
jp
enter
aas
xor
sub
cmpl
cmpsb
movsb
push
mov
sub
cmp
cmp
inc
add
dec
daa
xchg
push
dec
fistl
mov
cmp
outsb
aam
or
push
js
imul
pop
das
inc
cli
jo
adc
test
xchg
mov
cmp
dec
fildll
outsb
fwait
cmp
mov
pop
xchg
addps
lock
cltd
ret
mov
outsl
cld
sbb
xchg
fs
clc
test
stc
and
ss
and
insb
ret
sbb
mov
jmp
aad
imul
orl
out
xchg
scas
and
cmpsl
aam
rol
lock
jo
mov
outsl
loopne
cmp
pop
jmp
test
xchg
dec
gs
lock
mov
int
icebp
fstps
cmc
adc
shl
mov
mov
jg
push
imul
sbb
rcrb
adc
shlb
inc
subb
dec
or
arpl
jmp
cli
mov
and
call
sub
mov
push
je
mov
pop
mov
jae
mov
repz
sbbl
xchg
inc
lds
int
jo
aaa
fldenv
xchg
mov
icebp
xchg
nop
adcl
je
add
mov
hlt
scas
ja
adc
lock
push
roll
test
cvtdq2ps
loope
adc
inc
pop
xchg
inc
cmp
jns
leave
mov
push
add
inc
daa
cmc
cli
ss
les
push
dec
je
fldt
mov
add
mov
mov
out
or
jbe
inc
or
dec
xchg
out
xchg
lods
dec
push
push
aas
jo
loope
dec
aas
cmp
xorl
fucomp
inc
push
xchg
fsubp
dec
cmp
add
adc
std
mov
jl
out
sbbb
inc
adc
nop
mov
xchg
xchg
jnp
mov
pop
or
gs
int3
prefetchw
pop
cmp
outsb
and
rorb
or
mov
jae
rol
scas
dec
cs
jo
xor
popa
push
push
mov
mov
and
jp
and
das
pop
and
jg
lahf
xchg
and
or
add
das
add
shrl
xor
aad
out
sbb
push
insb
pop
mov
lcall
cmp
jmp
inc
push
xlat
jl
xchg
mov
int
and
test
and
ds
mov
sub
outsl
rcll
aad
push
sbb
xchg
icebp
es
sbb
repz
flds
dec
or
or
jl
out
and
pop
lcall
dec
cmp
imul
jbe
mov
in
mov
or
push
mov
int3
stos
adc
push
xchg
js
dec
push
mov
and
adc
or
adc
pusha
add
lret
push
cmpsl
bound
cmpsb
aad
pop
adc
xor
sbbb
sub
aas
ja
jge
call
shl
ret
jb
decb
jg
int3
xchg
lret
pop
and
sbb
sbb
xor
push
imul
dec
sbb
dec
roll
aas
jp
pop
mov
je
addr16
das
mov
jns
shll
xchg
add
daa
push
ret
aaa
mov
hlt
les
lret
pop
mov
je
adc
cmp
adc
testl
sbb
add
movsl
insl
lret
decb
mov
push
aad
and
pushl
fwait
mov
pop
iret
cld
sti
iret
pop
pop
outsb
xchg
mov
dec
icebp
imul
mov
rclb
add
cs
insl
stos
mov
mov
ja
mov
xlat
pop
sahf
push
adc
mov
add
test
aam
inc
adc
mov
enter
push
popf
inc
adc
add
in
sub
push
cmc
ror
mov
cli
pop
mov
out
icebp
push
cmp
cld
movsb
dec
cmp
repz
add
ja
and
push
ret
jl
jne
mov
loop
out
loope
fs
adc
shr
imul
pop
sub
or
and
dec
js
push
frstor
sbb
xchg
pop
fisubl
popf
and
aaa
outsb
icebp
fdivs
jne
ret
jb
aaa
dec
mov
adc
push
adc
int3
orl
jl
xchg
adc
popa
jge
icebp
scas
movsb
js
leave
push
cmpsl
jne
cmp
sbb
push
js
mov
dec
daa
pushl
push
pushf
cld
dec
dec
push
dec
cmp
dec
imul
jge
push
adc
mov
sub
stos
imul
add
in
sub
stos
aas
jbe
jp
xchg
and
jle
into
push
sti
xchg
ret
pop
dec
popf
ljmp
out
js
pop
push
mov
pop
pop
mov
and
aam
repz
fdivp
cmp
pusha
out
mov
jmp
dec
imul
push
aam
insl
mov
push
push
adc
jecxz
xor
adc
cmp
mov
jns
loope
xchg
jle
das
jmp
jecxz
pop
adc
idivb
push
mov
adc
pop
dec
out
push
sar
jno
mov
jns
inc
mov
jge
sub
sub
notl
stc
stc
or
imul
push
lods
enter
pop
ficomps
outsb
lods
sbb
sbb
ja
hlt
pop
outsl
adc
adc
inc
adc
hlt
pop
jp
and
in
daa
dec
shll
in
lea
loope
sub
lret
mov
dec
shrb
testl
das
or
xor
and
pop
inc
inc
lahf
pop
mov
sub
cld
xor
outsb
idivb
mov
mov
inc
push
shll
jmp
mov
hlt
or
pop
push
adc
or
push
icebp
in
inc
dec
and
cmp
jp
xchg
push
jae
cmp
ret
add
xor
push
pop
notb
movsb
aas
pop
jg
lahf
fwait
repz
jns
dec
cmp
popf
dec
inc
rcll
adc
jmp
mov
push
jg
in
cmc
int
int
mov
xchg
out
pop
and
loope
shl
pop
adc
dec
inc
into
mov
sahf
cmc
cmp
xchg
outsb
mov
pop
pushf
or
mov
pop
shr
add
addr16
pop
popa
insl
xchg
in
test
cmp
push
int
dec
aad
enter
push
ljmp
pop
icebp
scas
xchg
lret
arpl
mov
imul
lds
adc
outsb
jle
mov
nop
insb
dec
sbb
pop
and
mov
xchg
daa
xor
sbb
jo
jnp
mov
jno
fldt
nop
add
mov
ror
cs
sub
sbb
repz
cmp
mov
in
mov
test
xlat
call
cs
mov
jecxz
fistl
test
mov
push
xor
mov
dec
xchg
inc
mov
mov
mov
scas
mov
mov
call
pushf
fstpt
jno
test
outsl
fildl
push
shlb
jae
push
mov
jmp
fists
nop
bound
call
mov
clc
sbb
mov
xchg
xchg
int3
inc
ret
mov
es
lods
or
push
lret
or
lahf
movsl
add
xchg
add
icebp
divl
mov
and
shll
xchg
rorb
leave
xchg
cmp
in
lret
mov
fistps
adc
xor
out
xchg
cmpsl
cmc
mov
add
cmp
pop
lds
or
scas
jne
jno
daa
dec
xchg
push
dec
jge
push
mov
lea
xor
lods
pop
mov
pop
dec
or
lahf
rolb
or
mov
jnp
jo
incb
cmpsb
clc
mov
jle
in
mov
mov
mov
cmovns
clc
jg
stos
imul
sub
cltd
insb
cmp
cmp
and
insl
lcall
adc
push
imul
leave
or
xor
into
out
jne
aam
push
cmp
mov
sbb
xor
mov
sub
sbb
out
sbb
adc
adc
and
aaa
jb
outsb
jno
fucomip
inc
jns
pusha
inc
arpl
dec
out
ficomps
push
imul
mov
outsb
mov
nop
push
fistps
iret
mov
sub
mov
lcall
mov
pop
pop
in
jno
mov
dec
push
push
pop
pop
fsubrl
cmp
jle
mov
add
or
jbe
int
jmp
cltd
pushw
sar
lret
jns
test
and
sub
xor
sbb
xchg
aam
imul
cltd
movl
cmp
pop
jnp
adc
jecxz
aam
out
sbb
inc
push
jl
xor
fxtract
lret
inc
xchg
and
in
pop
outsl
sbb
and
in
das
mov
jns
jge
cmp
stos
in
mov
stc
cltd
inc
inc
sahf
jmp
insl
mov
out
sub
out
jns
ja
dec
push
xchg
inc
mov
xchg
lods
and
pop
push
push
jmp
movsl
push
sti
int3
mov
lods
xlat
and
jb
enter
pop
fdivp
mov
dec
sar
xchg
and
sub
xor
aas
std
mov
push
xchg
cld
addb
pop
popf
popa
lcall
add
sbb
imul
mov
stos
sub
pop
fstpt
in
out
or
xlat
fs
ret
clc
divl
scas
outsl
les
mov
test
ja
imul
add
in
pusha
jns
pop
divl
jmp
xchg
fwait
lret
sub
cld
mov
jle
or
sti
enter
fsubs
mov
mov
ror
xchg
es
add
cmp
xor
test
pop
cmp
fcomps
mov
das
push
pop
push
daa
pop
cmc
jmp
or
lods
jle
lods
xchg
dec
mov
sbb
aas
jno
movsl
loope
pusha
aad
adc
xchg
aad
popf
cmp
inc
fmul
gs
negb
test
cld
sub
inc
out
inc
sti
das
pop
sbb
mov
xchg
mov
and
fchs
mov
les
pop
and
mov
jno
push
pop
or
sbb
fdivrl
mov
dec
xchg
imul
jmp
sbb
xor
cmp
inc
in
sub
flds
mov
push
fbld
sub
mov
js
in
mov
int
ret
scas
mov
shrl
mov
in
or
mov
pop
or
out
mov
enter
fiadds
mov
iret
pop
mov
push
mov
loop
std
iret
lods
incl
aas
jbe
jae
inc
adc
stos
cmpsl
in
decb
push
and
mov
jge
lret
inc
iret
repnz
jae
dec
mov
incl
into
dec
mov
push
lods
mov
mov
mov
mov
hlt
jg
inc
and
fdiv
jne
mov
aaa
aaa
mov
jne
loope
fiaddl
gs
add
mov
cmp
enter
cmp
jmp
add
inc
insb
jb
xchg
nop
shll
js
out
and
lcall
ja
in
xlat
int
mov
out
or
imul
cmc
call
dec
mov
mov
nop
outsl
cmp
sub
cmp
int3
leave
dec
scas
enter
xor
adc
repnz
or
or
adc
fcomps
mov
rclb
pop
in
adcb
mov
rol
mov
jno
mov
xor
push
sbb
adc
sub
xchg
mull
jne
std
dec
adc
mov
xor
aaa
sbb
pop
dec
jp
rolb
neg
cmp
sbbb
das
mov
fs
pop
pop
mov
adc
pusha
mov
push
jo
in
and
mov
mov
xchg
and
out
push
roll
scas
pop
test
cmc
test
jno
cmp
fstpl
push
and
mov
sbb
sub
movsb
push
and
xchg
dec
xchg
out
adc
lea
adc
stos
dec
bound
or
xchg
loopne
jge
rcll
adc
nop
mov
loop
nop
jl
cmpsb
cmpb
and
inc
jnp
jg
xchg
cmpsl
rcrb
lahf
sbb
push
movsl
jp
fincstp
mov
or
jp
push
stc
inc
sbb
ret
out
add
faddl
and
mov
data16
inc
push
xor
mov
add
inc
jg
in
adc
out
movsb
push
mov
test
mov
or
adc
out
sbb
data16
sbbl
inc
jne
or
in
sahf
lock
leave
loope
aad
pop
push
dec
fsubl
sbb
xchg
jp
leave
jns
hlt
sar
pop
fs
pop
std
mov
and
dec
adc
mov
sub
aas
int
xchg
ljmp
jle
scas
jecxz
mov
je
enter
fimuls
pop
test
mov
mov
inc
sbb
lea
pop
aaa
mov
jno
and
adcl
or
test
adc
pop
sbb
push
out
lcall
rcrb
jbe
push
and
add
mov
loop
sarl
fstl
adc
ds
add
nop
xchg
add
inc
push
jecxz
inc
cltd
pop
aam
aaa
mov
or
push
mov
jmp
or
xor
dec
sub
das
dec
ljmp
hlt
lods
loope
adc
mov
mov
jae
lret
mov
fisubs
out
and
leave
xor
mov
outsl
add
mov
add
pop
call
mov
add
rcrl
ficoms
add
dec
es
cs
push
std
mov
scas
xor
push
mov
xor
movb
mov
adc
adc
lcall
cmp
push
enter
cli
inc
ret
dec
xor
fs
mov
cmp
mov
jecxz
xchg
insb
push
sbb
rcr
inc
lret
jg
nop
lock
addr16
int3
in
cmp
sbb
shll
fs
mov
xor
inc
aam
xor
out
inc
out
nop
lcall
stc
or
stos
or
or
rol
sbb
test
cmp
sub
push
rcrl
xchg
gs
fs
orl
mov
aam
jge
loope
leave
dec
daa
data16
and
inc
xchg
mov
jo
fsubrs
jns
inc
mov
and
stos
dec
push
mov
stc
fbld
inc
int3
and
dec
std
lock
call
cmp
test
fwait
ss
push
mov
push
dec
or
pop
mov
fwait
fwait
insb
mov
dec
xchg
pop
and
pop
jmp
xchg
mov
xchg
in
test
lret
mov
jl
addl
push
dec
jb
int3
adc
xor
xchg
pop
mov
sub
inc
aaa
cmc
lret
xorb
mov
inc
insl
sbb
pusha
push
cli
cmp
jmp
jge
sub
xchg
stc
push
cmp
or
and
add
xchg
xor
cmp
xchg
cli
push
push
mov
scas
mov
adc
mov
out
aam
insb
inc
dec
jne
cmp
inc
jg
jecxz
test
xor
xchg
pushf
out
jns
mov
push
shlb
cmp
inc
mov
es
pop
movsb
dec
cwtl
xchg
add
cmpsb
int3
lods
add
mov
lods
inc
lea
int3
int
das
cmp
mov
jecxz
sub
leave
nop
iret
je
sbb
out
flds
jl
cmp
lret
out
lcall
xor
xor
fbstp
or
into
arpl
pushf
ret
cmp
in
sbb
out
fs
pushf
es
jp
or
xchg
outsl
xchg
inc
cmp
sub
mov
xor
ds
push
rolb
or
and
push
or
stc
push
call
shlb
mov
cmp
cmp
test
push
mov
sub
mov
jae
gs
sub
xchg
inc
mov
add
movsb
mov
roll
pop
int3
movsl
add
jp
mov
mov
push
push
xlat
pop
pusha
xabort
mov
loope
pop
scas
lret
or
dec
cmc
xchg
in
cwtl
daa
add
inc
popa
xchg
aaa
mov
mov
std
inc
jg
insb
push
imul
fnsave
fs
add
pusha
std
lret
jb
leave
pop
jge
in
fstpt
push
and
inc
mov
nop
test
xchg
jnp
rorl
stos
fcom
pop
imul
sahf
cmc
ja
fstps
and
push
jge
xlat
les
sbb
roll
jae
decb
mov
shufps
or
addr16
xchg
sbb
mov
and
popf
and
in
xchg
mov
imul
negl
mov
mov
out
adc
add
cltd
enter
and
aas
cmc
clc
xchg
and
mov
jne
xchg
cwtl
out
pusha
daa
incl
xchg
cmp
pop
je
imul
sub
cmp
lods
jnp
outsb
outsb
mov
aad
into
xchg
into
pop
lcall
xchg
sub
sbb
mov
mov
xor
out
int3
add
loopne
mov
aam
je
push
xor
add
clc
adc
arpl
push
cmp
jbe
int3
jno
shrb
xor
push
xorb
cmc
std
iret
dec
iret
inc
jecxz
mov
push
sbb
aas
and
mov
scas
push
imul
lahf
jle
xlat
outsb
imul
push
out
je,pn
mov
jb
mov
xchg
insl
pop
jno
jbe
je
imulb
cmc
xor
cmp
addl
or
pusha
sub
inc
inc
mov
or
cli
bound
dec
xchg
lds
repz
xchg
jl
xor
out
xchg
enter
or
mov
out
xor
and
sub
dec
lret
sub
aam
pusha
aaa
sti
xchg
imul
dec
js
test
xchg
mov
mov
xchg
call
mov
test
arpl
lea
jmp
jno
or
inc
ret
rorb
jg
jae
popa
jb
cmp
out
inc
push
sub
out
add
bswap
push
mov
adc
cmp
in
pop
imul
inc
or
lods
call
loope
sarl
pushf
popl
cmp
cmp
cmp
movsl
adc
xor
push
mov
add
jnp
es
adc
cld
test
cwtl
push
or
psllw
out
dec
int3
sub
sub
loop
idivb
mov
mov
in
push
aas
pop
or
or
insb
add
push
inc
sahf
mov
sbb
mov
pop
int3
stc
insb
test
or
mov
mov
jg
xchg
mov
and
imul
shr
inc
push
stos
out
pop
stos
xchg
mov
inc
xor
jo
jmp
mov
or
sub
xorb
mov
fdivs
out
std
push
mov
es
adc
xchg
jno
enter
adc
and
test
xchg
mull
arpl
jl
enter
loope
xor
adc
jp
fs
cmp
out
mov
roll
mov
xlat
int
std
adc
adc
clc
sbb
mov
mov
pop
iret
push
call
imul
cmpsl
sbb
frstor
push
mov
pushf
pop
or
dec
lret
adc
icebp
sbb
mov
dec
fldt
xchg
call
xchg
inc
ss
push
xchg
inc
or
dec
xchg
pop
test
hlt
jmp
int3
mov
xor
mov
mov
xchg
pop
inc
mov
lock
adc
int
mov
push
mov
stc
lcall
xchg
mov
aas
shll
push
pop
js
xlat
pop
xlat
test
sahf
mov
dec
mov
cmp
fwait
pop
roll
inc
adc
gs
push
out
in
adc
stc
mov
xor
inc
fucomp
pushf
add
test
cmp
push
in
jb
aaa
insb
cmp
mov
mov
sub
add
and
sub
dec
out
mov
adc
jno
rorb
shrd
icebp
xchg
mov
or
pusha
filds
mov
adc
pop
or
pop
arpl
push
adc
fwait
inc
fmull
mov
out
push
sbb
decb
sub
adc
mov
in
lret
or
les
ljmp
add
xor
fisttps
or
sbb
sub
xor
pop
fwait
mov
or
out
mov
cmpsb
cmp
sub
push
scas
add
and
test
push
popf
jg
cld
fstpt
pop
inc
ret
jns
ror
stos
sub
clc
stc
jle
lcall
mov
popl
insb
cmpsb
and
mov
in
push
test
or
rcr
movsb
cmp
dec
and
sub
dec
je
test
lahf
adc
popf
cmp
cmpsb
cmp
jge
rcrl
stc
jbe
add
push
ud1
push
sti
lds
sti
xchg
sub
mov
in
xchg
adc
sarb
inc
xchg
cltd
xchg
std
addr16
dec
xor
xchg
sbb
push
sbb
orl
stc
lods
cs
es
mull
das
and
out
and
rcll
cs
sbb
inc
lods
push
push
mov
jno
adc
imul
inc
daa
aad
inc
je
jns,pn
or
push
in
pop
rcll
mov
mov
jnp
cltd
sbb
loope
nop
push
sbb
addr16
push
in
lret
jge
inc
rcrb
push
jno
jge
sub
stos
push
or
pop
xchg
inc
pop
pop
test
outsl
fadd
gs
xor
fwait
in
push
lahf
and
scas
push
xchg
mov
mov
add
mov
lods
ficoms
test
or
call
inc
lcall
add
inc
xchg
sub
outsb
jmp
pop
inc
lds
push
cmpsl
mov
jno
cwtl
dec
dec
inc
pop
xchg
rolb
lock
sahf
iret
dec
jle
movups
push
pop
imull
outsl
out
pop
pushl
test
adc
mov
xor
xchg
and
shrl
lods
sbb
mov
icebp
pop
add
ss
fimull
jp
adc
lea
jbe
and
jo
cli
dec
ljmp
push
inc
sbb
stos
jb
scas
jecxz
xor
jp
mov
out
dec
mov
fldcw
pop
jns
arpl
test
xor
xor
push
mov
mov
xor
lret
repz
xchg
push
and
pusha
jnp
add
scas
xchg
mov
ja
mov
aad
cmp
adc
mov
adcb
cmp
rorl
push
in
inc
bound
or
outsl
mov
mov
push
adc
cli
push
ljmp
cltd
shrl
mov
mov
add
cmp
push
test
icebp
dec
call
lds
into
cmp
insl
xchg
outsl
jl
push
imul
mov
hlt
push
int3
cmc
test
sbb
adc
add
push
cs
push
add
gs
rcr
lret
mov
mulb
sub
popf
sub
mov
mov
dec
jp
orb
les
jmp
mov
test
push
fmuls
mov
pop
fcomps
daa
mov
dec
testl
imul
adc
xor
pop
sbb
pop
jns
pop
xor
lods
je
and
clc
jo
cmp
push
popf
cmpsl
mov
dec
xchg
lds
js
xor
jmp
pop
ret
notl
and
xchg
dec
mov
sbb
cmpsb
pop
shll
movsl
hlt
cltd
mov
movsb
loopne
ja
pop
xor
xchg
insl
pop
xchg
rcrl
lcall
push
mov
mov
stos
out
push
pushf
in
xchg
cmp
repnz
or
lock
iret
xor
stos
and
lret
stos
jecxz
sbb
adcl
xchg
inc
sub
dec
xchg
pop
cmpsl
adc
sbb
pop
jle
loop
jns
outsl
add
push
pop
fnstsw
mov
and
mov
pop
mov
xchg
dec
push
inc
iret
inc
or
push
push
pop
pop
mov
dec
int
dec
add
sbb
iret
loope
ret
repz
lock
xchg
or
inc
leave
nop
or
pop
es
mov
mov
out
aaa
pop
dec
mov
je
arpl
ss
les
jl,pn
adc
push
sub
jbe
call
and
add
adcl
pop
jbe
add
and
add
icebp
jle
lods
dec
pop
test
sbb
push
lods
sbb
mov
ret
xchg
adc
xchg
push
cli
pop
push
test
je
rcrb
jbe
mov
out
or
pop
xor
dec
ss
inc
lds
push
cmpsb
mov
mov
jno
push
adc
sub
out
and
or
xchg
hlt
shlb
fnstenv
push
add
lods
mov
add
int
stos
aad
fstpt
pop
push
pop
jo
xor
mov
sbb
lods
int
out
adc
insb
icebp
std
mov
stc
mov
movsl
mov
rol
rorb
and
xchg
push
fsubs
repnz
xchg
cmp
leave
arpl
xchg
dec
and
xchg
mov
sbb
mov
shrl
jno
xchg
and
cs
clc
and
sub
test
xlat
enter
dec
jns
and
lods
int
out
or
in
jae
or
lods
pop
lret
outsb
dec
sar
stos
xchg
xchg
outsb
rcl
cltd
xchg
dec
jecxz
fnstcw
ficompl
pop
dec
jno
cmpsb
pushl
clc
adc
sets
cmpsb
xor
and
push
jmp
mov
ret
sbb
add
jmp
jbe
add
xchg
dec
xchg
jns
jl
lds
mov
test
mov
ss
jle
mov
sbb
dec
cmp
jb
mov
jmp
mov
xor
jp
xor
popa
jp
xor
sbb
andl
mov
aad
pop
jne
arpl
cltd
mov
outsb
and
int
xor
sbb
sbb
fiadds
sbb
jnp
xchg
scas
pop
out
adc
jge
mov
dec
dec
add
in
mov
pop
jo
dec
dec
aam
inc
lds
sti
jbe
insl
dec
pop
sub
sbbb
push
cld
mov
out
das
mov
aas
mov
int3
adc
jns
cld
in
sysenter
icebp
negl
popf
stos
scas
jns
stos
or
xchg
cmpsb
test
xchg
out
ret
aas
add
sahf
in
push
clc
inc
imul
jmp
scas
call
cmp
mov
pusha
iret
dec
repnz
push
or
mov
es
and
mov
jo
rcr
loopne
imul
loope
fs
push
icebp
es
in
icebp
test
mov
lahf
dec
fs
sub
adc
sti
bnd
mov
repz
imul
rorb
cmp
inc
in
add
in
push
push
mov
fs
lret
jp
inc
push
sub
das
pop
insl
cmp
test
push
push
stos
mov
movsb
jns
xchg
dec
out
pop
or
push
cmp
inc
out
jae
add
sbb
sub
pop
cmpsb
mov
inc
xchg
add
ds
scas
scas
adc
in
in
fcmovb
pop
fwait
lahf
add
pop
mov
roll
jb
cs
push
mov
cwtl
xchg
cwtl
or
sbb
sbb
icebp
push
lahf
sub
imul
aas
data16
in
adc
mov
xchg
les
bound
add
mov
pop
mov
or
pop
orb
mov
add
xchg
movaps
mov
in
or
push
add
test
ja
sbb
and
push
push
in
cmp
ljmp
jb
nop
dec
sub
or
fucomi
inc
sub
leave
dec
xchg
mov
in
lea
pop
pop
sub
add
adc
hlt
mov
rep
pop
in
icebp
xchg
cmpb
jae
and
stos
pushf
jge
lret
aam
test
mov
mov
andl
cmpsl
mov
das
xchg
cmp
loope
jae
dec
pop
jp
subl
fsubrl
sbb
xchg
xchg
xor
adc
jns
and
push
or
push
lret
shl
rclb
mov
pop
stc
jp
les
inc
aaa
les
add
aam
mov
loopne
and
xlat
daa
xchg
addr16
int
in
xor
imul
ds
cmp
cmc
sub
test
cmpsb
mov
out
popf
filds
and
mov
fisttpl
rorl
push
push
lods
push
mov
cld
int
pop
xchg
cmp
jmp
push
add
push
mov
insb
dec
mov
jo
sub
add
and
iret
sbb
jg
outsb
dec
jle
jg
int
in
mov
mov
mov
iret
sbb
mov
xchg
xor
movsb
adc
sbb
out
fwait
js
sub
add
add
lcall
out
fistpl
ds
push
in
and
mov
mov
push
and
iret
or
cwtl
daa
mov
pop
inc
jne
lock
clc
lods
fidivs
pop
xchg
in
sub
stos
push
mov
push
data16
mov
negl
imul
cmp
movq
xchg
push
mov
jb
push
xlat
fcmovnb
gs
cli
nop
fdivrl
jp
test
inc
dec
mov
push
scas
inc
pop
andb
xchg
mov
fdivrs
insl
and
outsb
sbb
pop
jno
mov
sbb
mov
scas
mov
xor
dec
push
dec
stos
inc
jne
test
das
jns
dec
inc
movsl
lods
mov
mov
lcall
rorl
sbb
fcoml
cmpsl
adc
or
call
inc
xorl
enter
dec
add
jge
mov
das
out
inc
pop
popa
mov
inc
push
imul
das
jb
sub
movsb
push
xor
and
cwtl
cmp
scas
xchg
cmp
leave
pop
lea
mov
bound
lcall
jns
mov
sub
roll
mov
jbe
int
inc
adc
clc
movsl
pop
inc
popf
not
adc
jb
mov
xor
iret
mov
gs
int
fs
mov
xchg
sbb
gs
loope
jae
xor
rcr
xchg
xor
jae
jo
push
and
jo
inc
mov
mov
mov
mov
xchg
push
ljmp
push
fidivl
popa
jecxz
or
out
pop
mov
push
dec
insb
dec
psraw
pushf
jo
loope
push
jns
cmc
clc
jmp
mov
ret
div
jg
add
lds
aam
loop
mov
xor
add
pop
or
xchg
cmp
xchg
jbe
sub
aaa
imul
lock
jp
cmpsb
jno
jo
outsb
rcr
dec
adc
ret
cmpsb
xlat
sbb
push
lock
lock
sbb
out
cmpb
pop
push
push
stc
mov
push
fcom
jg
push
dec
pop
shll
int3
jle
fcoms
cmpsb
lret
or
addb
and
xchg
mov
push
cmc
add
inc
call
or
pusha
mov
sub
or
repnz
test
push
data16
pusha
stc
push
push
mov
jg
mov
xchg
orw
pop
cld
fistps
test
sub
and
testb
loope
mov
fsubrs
fadds
adc
add
or
jns
dec
mov
mov
cmp
pop
movsl
jb
jne
popa
mov
jmp
cld
jecxz
inc
cmp
and
mov
imul
xor
ja
jne
aas
fsubrl
jo
xchg
mov
or
or
dec
clc
pop
mov
insb
sub
stc
push
dec
push
pop
rorl
aad
inc
mov
cmp
icebp
int3
jne
imul
imul
imul
inc
ret
inc
imul
and
dec
pusha
icebp
or
outsl
dec
or
and
call
inc
std
cwtl
pop
and
out
xor
add
add
orb
xor
rcr
pop
std
gs
test
in
add
in
mov
int
cs
int3
push
popf
and
repz
jle
fs
inc
mov
jne
sar
cmp
into
xchg
ljmp
adc
lcall
fdivrl
movsl
pop
inc
cmp
mov
push
xor
sbb
loop
aaa
jo
stos
jg
sub
xor
push
movsb
jae
mov
lret
test
lcall
mov
push
mov
stos
mov
daa
pushf
ljmp
add
test
push
and
pop
dec
push
jb
add
lret
lret
mov
popa
test
push
sbb
cmp
add
or
das
or
mov
pop
dec
mov
stos
push
fldl
js
dec
nop
xchg
aad
fidivrl
popf
int
test
jae
sti
inc
out
push
dec
divb
in
enter
cmp
cmp
fst
xor
jge
call
jbe
xchg
push
jb
sub
aad
test
cmpsb
mov
rcrb
and
outsb
lock
xlat
add
movsb
aas
je
jo
push
and
push
test
xchg
jmp
xlat
mov
and
mov
dec
cmp
std
subl
push
or
stos
out
push
lea
popw
das
std
imul
adc
mov
pop
sar
jmp
adc
inc
add
loope
scas
mov
mov
mov
jecxz
stos
repz
nop
lcall
mov
int3
pop
ljmp
fisubrl
adc
daa
or
add
pop
jnp
popf
xor
cmpsb
ljmp
inc
movsb
lea
jo
mov
push
fcoml
push
mov
loopne
fsts
xchg
adc
add
leave
mov
jb
loope
xor
jle
pop
mov
or
rcl
cli
jmp
pop
xor
scas
movsl
ds
out
add
xchg
push
rorl
xor
push
pop
sbb
xorl
addr16
cmpsl
int3
xor
setno
dec
xchg
decb
cmpsb
aas
test
mov
shrl
xchg
push
cmp
inc
stos
push
mov
mov
dec
insl
xchg
or
cmp
cmpsl
xor
or
xor
aam
bnd
jns
pusha
fnsave
shll
push
scas
popf
cltd
mov
cltd
pop
mov
push
lods
cli
cs
pop
xchg
sub
inc
push
inc
dec
add
int
je
add
adc
xchg
mov
add
addr16
lret
aad
add
pop
add
lea
je
xchg
cmp
lds
test
sub
sarl
jl
imul
sbb
cmpxchg
ret
cwtl
pop
jns
mov
enter
sub
jnp
push
data16
push
mov
loope
outsl
ret
or
xor
push
cltd
mov
jns
nop
bound
inc
dec
add
js
mov
inc
out
leave
push
xchg
xchg
pop
and
movsb
jmp
inc
movsb
mov
xor
cmpsb
dec
arpl
out
cmp
iret
movsl
push
dec
and
jnp
fbld
cld
je
dec
or
add
adcl
pop
mov
cmp
fstps
add
xor
in
int
inc
stc
mov
stos
or
pushl
aam
sti
mov
jg
sub
fwait
js
fs
repz
das
mov
dec
xchg
and
sbb
lret
enter
shl
push
test
or
int
fbstp
imull
xlat
jp
xchg
iret
andl
aad
shlb
testb
mov
mov
inc
rolb
push
scas
cli
mov
outsb
sahf
jmp
sbb
notb
loopne
aas
scas
inc
mov
pusha
mov
loop
add
outsl
inc
sub
enter
mov
adc
flds
gs
push
out
xchg
mov
into
jbe
adc
mov
xor
stc
or
push
or
jne
and
or
into
js
xchg
in
imul
xor
repnz
xchg
ljmp
ds
sub
inc
push
fmull
sti
and
jae
sti
xor
add
popf
in
pop
mov
out
inc
jne
add
jne
outsb
jl
xchg
lcall
xchg
or
out
inc
das
mov
scas
repz
or
xlat
pop
push
pop
lret
xchg
cmp
inc
js
pop
cld
loop
fs
dec
adc
jmp
jb
adc
mov
adc
adc
mov
ss
xor
pop
hlt
loop
mov
je
mov
add
jl
pop
mov
pop
xchg
sarb
outsl
lods
add
leave
inc
pop
or
and
xchg
test
adc
sbb
or
sub
mov
std
cmp
call
or
jo
xchg
fisubs
add
jmp
inc
rcr
cmp
add
ss
cmc
mov
rclb
and
xlat
ja
xchg
ja
in
aas
mov
popf
sub
fstps
dec
sbb
movsb
loopne
pop
xchg
pop
mov
mov
lods
xor
mov
movsb
shll
iret
movsb
rcll
jmp
je
sti
sti
and
adcb
popf
leave
and
inc
and
mov
mov
or
fs
xor
jg
call
jg
fistl
out
sbb
addr16
out
nop
lock
sbb
mov
push
out
rclb
inc
and
cmp
stos
or
aad
add
in
mov
and
adc
shl
into
jl
dec
jg
cs
cmpb
out
imul
mov
mov
test
xor
xchg
jle
cmp
push
or
mov
dec
cmp
xchg
mov
inc
push
and
cs
outsb
mov
mov
lods
insl
es
jae
test
adc
cmp
les
xor
adc
iret
std
sub
inc
pop
movsb
in
shlb
loope
mov
xchg
cmp
pop
loop
subb
adc
cmc
cmp
mov
fwait
lcall
sub
mov
push
mov
test
lods
mov
pop
adc
das
add
inc
cmp
cwtl
push
sbb
xchg
xchg
adc
and
cmp
pop
arpl
push
negb
cmpsb
ret
push
jns
xor
sbbl
dec
mov
cmp
jae
mov
in
mov
fildl
mov
mov
lods
dec
scas
aas
mov
xor
in
out
inc
jnp
sub
scas
cmp
jbe
xchg
jbe
pop
push
push
mov
jae
sbb
xchg
lret
imul
ss
xor
divl
push
outsl
xchg
cltd
xor
call
mov
cli
mov
mov
rorl
ljmp
ds
sub
xchg
or
loope
popf
pop
xchg
cli
adc
inc
pop
pop
add
add
cld
das
lahf
or
xor
stos
cmp
loopne
xchg
stos
mov
xchg
ret
mov
mov
jno
mov
push
fs
ja
xchg
int3
dec
push
mov
add
cmpsl
int
xor
push
aas
jmp
ja
xchg
xor
mov
adc
mov
shrb
mov
nop
fnstsw
ficoms
sub
and
outsb
repz
mov
call
jmp
push
fisttpl
sti
loope
xchg
xchg
push
add
and
jno
inc
pusha
imul
pushf
inc
stos
adc
into
push
and
loopne
sub
inc
mov
insb
jae
loopne
test
mov
mov
stos
cmp
inc
in
jmp
jnp
sbb
cmp
xchg
jmp
icebp
testb
je
sub
cmp
test
sub
pop
and
rorl
mov
cmp
push
push
pop
inc
jno
adc
cmp
dec
ss
and
je
mov
xchg
int
and
sub
test
ret
inc
movsb
in
or
inc
pop
xchg
jbe
xchg
xchg
pop
cmp
push
fildl
mov
mov
lret
shll
mov
xor
pop
mov
inc
sub
icebp
mov
pop
jns
xchg
daa
mov
pop
mov
push
pop
jmp
sbb
fisubl
jno
mov
dec
mov
pop
cli
push
dec
outsl
cli
mov
test
jecxz
stos
adcl
dec
add
and
dec
jmp
and
pop
loopne
mov
dec
and
jle
fdivr
sahf
jbe
pop
push
cmpsl
sbb
or
stc
repnz
mov
mov
ror
rol
and
mov
out
push
out
push
mov
mov
jbe
int
mov
jb
imul
xor
loop
ret
mull
inc
sub
xor
adc
push
pop
or
mov
rcl
mov
mov
ret
fs
xor
roll
cld
ss
mov
out
mov
test
xchg
push
fstl
and
or
xchg
clc
cwtl
out
cmp
mov
fnstsw
cltd
fsubs
dec
dec
lcall
push
push
fwait
rolb
xor
enter
or
fidivrl
imul
in
mov
imul
cwtl
xor
cmp
ss
mov
fmuls
mov
jge
in
sti
int3
aad
loope
or
sbbl
pop
sbb
sti
sbb
xchg
test
orl
jecxz
cmpsl
lcall
xchg
jle
mov
mov
add
push
xchg
mov
jg
jno
inc
ljmp
outsb
push
ffree
lock
pop
test
nop
inc
dec
or
lahf
out
fwait
add
or
mov
jecxz
push
lock
fnstcw
or
fists
dec
push
sbb
cmpsl
inc
jo
mov
xchg
outsl
jnp
jns
dec
jecxz
mov
pop
nop
cmpb
lret
jecxz
lret
push
ss
lds
jne
adc
xor
pop
pop
inc
push
incb
mov
repz
enter
mov
xlat
inc
dec
sub
cmp
cmp
rclb
dec
aad
add
notb
sub
add
pop
or
dec
fistpl
mov
scas
mov
xor
push
add
push
pop
aaa
or
shrb
xor
push
pop
push
loope
push
push
mov
out
push
push
jnp
ss
jl
je
xlat
cmpsl
sbb
sbb
mov
outsl
pop
imul
xor
push
lret
mulb
add
adc
dec
sbbl
nop
mov
jbe
xchg
sbb
inc
es
xchg
push
repz
mov
fdiv
or
adc
sbb
jbe
test
push
push
dec
test
stc
movsb
addr16
fcmovnu
mull
pop
dec
push
mov
dec
cmp
push
sbb
inc
movsb
push
fiadds
lea
mov
pop
scas
pop
gs
xchg
test
and
jb
repnz
push
call
ljmp
arpl
jp
xchg
mov
xchg
sub
hlt
int3
shlb
outsl
cmp
in
mov
mov
negl
xchg
in
push
insb
sub
out
insb
stos
mov
cmp
xchg
sahf
mov
jae
loope
ret
roll
popa
js
inc
ljmp
aam
dec
aaa
xor
dec
add
inc
add
cmc
loopne
fldl
pop
jp
cli
xor
sahf
enter
sub
adc
push
add
dec
stc
sub
inc
dec
xor
xchg
mov
ret
scas
jb
mov
std
dec
cmp
inc
mov
dec
outsb
or
pop
clc
dec
loop
or
dec
inc
je
inc
mov
xchg
and
add
mov
leave
push
xor
jle
pushf
sub
stos
push
addl
fnstcw
lods
sub
push
adcl
popf
inc
les
add
mov
push
or
test
dec
shrd
in
pop
sarl
cmp
gs
cwtl
stos
hlt
imul
or
stos
mov
inc
std
and
inc
add
stc
mov
mov
pop
rcr
stos
sub
xor
sbb
dec
push
push
pop
sbb
sahf
jns
stos
and
xor
pop
pop
mov
cmp
sub
mov
xchg
dec
lods
sub
lods
sub
in
inc
hlt
mov
sbb
stc
push
cmc
enter
xlat
push
cld
add
jne
jae
and
sbb
out
jo
aaa
outsb
push
xor
hlt
push
mov
mov
orl
mov
fcoms
aas
lcall
inc
mov
lcall
mov
jl
lock
test
adc
add
das
pop
cmovge
popa
dec
sbb
test
mov
xchg
or
jmp
inc
mov
in
mov
ret
sub
xor
das
pop
push
je
fstp
repz
cmc
lock
xor
jmp
mov
in
orl
jno
pusha
je
jne
mov
or
mov
stc
sbb
dec
dec
mov
push
cmp
xchg
ficompl
pop
sbbb
fs
or
repz
rcll
mov
loopne
jp
sarb
je
je
xchg
xchg
xor
insl
cmp
and
ja
fs
test
xlat
jo
pop
mov
clc
inc
jecxz
dec
sub
cli
adc
adc
jmp
dec
insl
push
add
or
or
xchg
fwait
test
call
pushf
push
pop
mov
xor
mov
outsl
jo
jmp
cmc
mov
insl
lret
add
or
lcall
movsl
push
mov
mov
fcmovnu
pop
sub
push
sbb
cltd
iret
push
mov
inc
daa
xor
mov
dec
lcall
inc
icebp
add
sbb
jle
test
xchg
mov
cld
mov
and
les
dec
cmp
ja
outsl
jns
int
or
jp
fldt
cs
inc
leave
adc
mov
push
pop
cltd
pop
push
push
mov
push
out
out
jl
fs
loope
daa
std
fidivs
mov
imull
daa
sbb
xchg
popf
arpl
mov
cmp
dec
pop
cli
jge
jno
xorb
mov
cmp
jno
je
ja
out
test
pop
lods
push
pusha
mov
jmp
or
arpl
cmp
aaa
or
inc
sbb
popa
inc
fstps
sbb
push
cmp
or
insb
or
mov
outsl
adc
add
sbb
push
scas
pop
out
xor
std
aas
mov
pop
add
xchg
dec
xor
insb
dec
sub
lahf
arpl
jne
aas
loop
frstor
stos
and
shr
in
push
cli
xchg
cmp
sahf
fisubrl
stc
lret
cmpsb
lds
std
jg
stos
adc
push
or
sbb
and
jg
jae
push
lods
dec
fwait
mov
jo
test
ja
dec
mov
mov
popa
sub
xor
pop
insl
adcl
xchg
add
pop
popa
pop
adc
aad
push
adc
xchg
sbb
inc
std
fwait
cs
adcb
jmp
test
mov
mov
lcall
xchg
push
mov
xor
les
adc
adc
push
lea
pop
inc
mov
dec
sti
mov
fisttps
add
mov
pop
jmp
xor
stos
pop
frstor
cmp
ljmp
xor
pop
scas
pop
lret
mov
orb
cld
in
stc
in
pop
dec
insl
aas
jecxz
inc
adc
push
cmp
jge,pt
imul
leave
aad
dec
or
dec
sbb
cltd
xchg
or
jnp
adc
ss
sti
imul
adc
sbb
inc
cmp
cli
push
out
in
outsb
loop
popa
or
imul
mov
jmp
inc
in
pop
dec
out
pop
inc
cmpsl
mov
call
mov
mov
fsubl
iret
mov
lods
lret
ret
sub
or
and
mov
in
jmp
jnp
out
jbe
dec
pusha
xor
repnz
lret
pop
cmp
shll
dec
sub
pop
lcall
repz
push
or
lock
xchg
outsl
pop
ret
push
and
jne
cmp
inc
scas
nop
subl
push
ja
mov
addr16
sub
scas
divb
mov
repnz
outsb
in
je
adc
dec
xor
jnp
iret
sbb
jg
fldenv
roll
push
movsl
aaa
pop
lret
pop
add
sti
jmp
xor
jb
bound
out
xor
xor
lods
ss
sbb
xchg
aam
ja
jo
into
negl
push
stos
sbb
je
fs
fnstsw
outsb
je
mov
insl
or
pop
dec
push
fninit
arpl
std
and
push
sub
std
jne
jecxz
stc
outsb
xor
loope
sbb
movsb
aas
sbb
xor
cltd
mov
test
lret
shlb
add
cmp
or
and
mov
lock
icebp
cmp
pop
iret
test
aaa
push
or
push
insb
loopne
loop
or
xchg
jnp
jbe
sub
enter
es
pop
pop
pop
fwait
fs
cmp
fwait
lea
out
lods
sbb
stos
aaa
test
fwait
das
test
pop
into
lea
mov
cmp
loope
mov
int
or
aas
mov
into
jne
add
fidivs
sbb
mov
pop
adc
int3
sub
outsl
ret
mov
not
das
outsb
jp
lds
push
loope
jae
xchg
push
cmp
mov
imul
and
push
jnp
cltd
dec
stos
int
jmp
add
add
dec
or
or
in
mov
shll
xor
mov
aaa
sbb
xor
or
andb
int3
jae
imul
cs
in
std
adc
and
adc
nop
stos
add
stos
jge
cmpsb
dec
cmp
ds
inc
leave
pop
out
push
pop
arpl
add
orb
or
ret
push
aad
out
dec
cwtl
sub
adc
add
pop
jb
xor
cld
aas
lcall
gs
inc
push
sub
rcll
adc
in
inc
lds
in
rorl
je
shll
loope
ret
inc
mov
addr16
dec
std
je
add
sub
int3
dec
scas
ja
cmpl
nop
and
pop
sub
mov
stos
pop
mov
inc
sub
xor
stc
xchg
jae
ret
sub
pop
mov
aaa
or
sub
mov
packsswb
fldln2
lcall
jne
dec
imul
repz
xlat
cmp
rorb
dec
out
std
jmp
in
fimull
cmc
mov
aad
or
aad
xchg
imul
pop
std
stos
repnz
inc
inc
add
mov
rcrl
jbe
stos
lea
in
xor
sub
movsl
pop
sub
xor
fistpll
mov
popa
mov
pop
in
sbb
pop
dec
stc
and
xor
loope
sbb
add
mov
jmp
add
cmp
shr
jle
inc
mov
xor
inc
lods
push
pop
pop
shlb
sub
mov
in
pop
jg
add
mov
sbb
jg
and
and
mov
mov
sub
add
inc
mov
pop
fstp
mov
or
jae
movsl
or
jno
and
mov
inc
dec
data16
cwtl
loopne
loop
inc
push
pop
negb
stos
inc
mov
lret
or
xor
fsubs
xchg
jbe
and
insl
into
insb
add
jbe
xor
dec
pop
sub
jns
aas
and
xchg
and
aaa
je
adcl
mov
aaa
xorl
rep
je
cld
cltd
sub
cs
pop
dec
mov
mov
jl
inc
cmpsl
pop
xor
cwtl
cmp
or
lret
add
jle
lock
push
adc
cmpsl
adc
and
aaa
push
out
aaa
ds
inc
stos
je
testl
cmp
jbe
cmp
xlat
or
dec
aad
fcoml
cmc
sbb
jo
insl
jge
mov
out
outsl
iret
pop
std
or
cwtl
pop
or
xor
lret
dec
data16
cli
sub
pop
test
cmpsl
paddsb
lretw
addr16
cs
adc
movsb
adc
cmpsl
or
cmp
xchg
ljmp
mov
pop
movsb
fsubrs
mov
mov
std
lock
push
idivb
push
dec
gs
add
out
sbb
inc
adc
mov
in
ret
xor
sub
mov
addr16
and
insl
rclb
mov
pop
adc
mov
rcrb
or
and
jecxz
popl
popa
inc
popf
inc
sbb
ja
and
into
das
jnp
sbbl
cmp
push
pop
or
adcb
mov
pushf
sbb
incl
lret
jno
clc
or
and
cs
repz
lcall
dec
inc
lods
push
adc
xor
dec
out
nop
dec
rcll
adc
add
xor
pop
cmp
insb
iret
in
mov
ror
push
cmpsl
mov
push
ljmp
cmp
clc
out
push
dec
lods
add
xor
out
stos
pop
enter
out
mov
mov
jo
in
movsb
jmp
stos
jb
mov
fcmovnb
jle
mov
insl
rcll
iret
out
push
jo
mov
jle
divl
sbb
inc
add
dec
stc
loop
int
iret
in
adc
pop
push
dec
pop
mov
xchg
inc
push
pop
fidivs
cmpsb
xor
ret
add
js
cmpsb
pop
sub
stos
or
orb
sub
cld
jp
jecxz
mov
movsl
outsl
add
or
popa
sti
mov
jno
int3
push
addr16
ret
adc
dec
fsub
sbb
lret
adc
icebp
xlat
push
insb
pop
and
sub
pop
dec
int
mov
imul
mov
es
xor
xchg
out
or
add
cmpb
adc
outsb
mov
xor
jecxz
sbb
shl
lahf
test
cmpb
mov
subl
stc
bswap
fdivl
scas
pop
mov
mov
sub
movsl
test
push
addr16
jo
jge
les
xlat
popf
mov
mov
pop
inc
xchg
adc
add
sbb
ljmp
push
pop
jno
lds
cmp
aam
push
ret
ret
mov
push
lahf
xchg
dec
imul
gs
outsl
jns
dec
std
mov
int3
cld
popl
shrl
out
mov
sbb
dec
cwtd
outsl
mov
ss
xor
xchg
push
adc
pop
mov
or
stos
pop
push
cmp
adc
mov
push
sbb
or
and
and
ss
lods
push
mov
or
test
mov
add
pop
pusha
std
add
leave
fidivs
cltd
sub
and
into
mov
push
xchg
pushf
cmp
mov
fldcw
sub
inc
lds
in
test
mov
push
mov
xlat
stc
ret
or
mov
js
lock
std
outsl
je
xchg
enter
jg
test
imul
outsl
pop
mov
cwtl
sbb
mull
mov
mov
mov
daa
mov
popf
push
xchg
outsl
sub
cltd
xorl
stc
scas
inc
andl
adc
stos
inc
cmp
xor
mov
push
and
mov
add
pop
in
push
int3
jne
jns
mov
pop
sahf
dec
in
sub
div
das
fbstp
sub
mov
and
sbb
and
rcr
mov
out
inc
push
add
add
filds
jne
and
jp
scas
push
cmp
or
pop
pop
push
icebp
repz
mov
xchg
adc
inc
xor
insl
loop
loope
or
push
shlb
inc
adc
sbb
decb
cltd
add
xchg
je
into
lods
jg
pop
cmp
out
push
in
sbb
mov
roll
ret
pop
cmovnp
and
mov
les
lret
adc
fsub
adc
cmp
lahf
es
dec
jae
in
mov
mov
inc
icebp
inc
mov
mov
adc
add
lock
jmp
mov
pusha
gs
idivb
xlat
cwtl
data16
mov
push
push
and
mov
inc
or
lods
clc
push
shrb
and
ja
and
repnz
stos
sti
push
pop
jns
jne
into
imul
inc
jecxz
orl
hlt
mov
popf
mov
xorb
add
loop
jo
add
adc
or
xlat
sbb
stos
and
cmp
push
movsb
sbb
xlat
mov
insl
sbb
sbb
sahf
ljmp
rcrl
push
icebp
clc
out
lret
inc
cmpsl
sbb
cltd
sbb
push
shll
test
psrlw
push
add
cwtl
mov
xchg
xor
cmp
inc
cmpsl
jmp
dec
jo
lcall
ds
mov
loopne
aad
and
xor
add
pop
fcoml
or
xor
iret
jp
icebp
inc
movsl
jecxz
xor
pop
xor
fidivl
sbb
rcrl
mov
or
andb
outsb
sub
pop
hlt
and
inc
icebp
pop
pop
pop
insb
adc
pushf
cmpsl
aas
push
rcl
mov
pop
vmwrite
push
jae
xchg
mov
mov
dec
xor
lcall
fsubrp
jge
sub
scas
jo
jo
adc
testl
testl
outsb
xlat
je
test
jecxz
cmc
fcmovb
cs
add
test
xor
jmp
push
mov
imul
test
cmp
cmpsl
push
into
jo
sbb
mov
push
cmpb
dec
cmp
inc
or
push
inc
mov
jno
sarb
inc
enter
dec
jb
cmovo
sahf
data16
or
cmpsl
bnd
insl
jne
pop
lods
aaa
pop
or
mov
mov
wbinvd
jne
xchg
aaa
fwait
jae
pushf
test
ret
sbb
cli
jb
sbb
clc
mov
push
inc
jp
nop
shll
test
mov
shl
dec
jne
jno
adc
mov
push
out
dec
or
and
jae
das
and
fmuls
jnp
xor
cwtl
in
jecxz
xor
add
or
in
inc
push
outsb
loope
push
or
outsb
mov
mov
lahf
inc
stc
je
fidivs
mov
push
jge
fisttps
xchg
sbb
scas
pslld
inc
rclb
jge
sbb
add
rcl
mov
inc
lods
shr
insb
adc
add
jle
ss
movsl
and
test
sub
xchg
test
sub
mov
xchg
pop
xchg
dec
test
lods
daa
push
push
das
pop
pusha
testb
inc
adc
outsl
rorb
int3
pop
xchg
pusha
lcall
cwtl
push
sbb
loope
cmc
mov
or
int
pusha
add
daa
addl
mov
and
sub
iret
jg
rclb
or
icebp
jnp
dec
stos
sbb
dec
pop
xchg
in
sub
or
push
test
repz
jecxz
mov
mov
push
xor
cmp
dec
jge
dec
add
or
jbe
leave
mov
jb
fnstsw
mov
lcall
lret
mov
test
int3
push
xchg
and
arpl
jb
sti
sbb
iret
xchg
in
add
mov
mov
push
mov
mov
dec
repz
fldl
jg
jg
cli
stos
push
insl
fcmovnbe
clc
mov
inc
ljmp
mov
lods
repz
popf
mov
in
sbb
mov
aaa
clc
call
lahf
mov
adc
sub
ret
in
add
cmp
mov
add
dec
inc
mov
cmp
push
stc
ja
add
movsl
jo
hlt
and
ljmp
adc
jmp
or
jnp
nop
xor
imul
add
pop
adc
inc
and
mov
fldt
fs
loope
cmp
fs
ja
loopne
popa
out
dec
pushf
enter
out
jecxz
mov
mov
push
or
or
adcb
jno
lret
bound
fldl
or
mov
repnz
xchg
sub
cld
dec
lock
outsl
or
inc
add
addr16
xor
pop
or
clc
lods
aaa
mov
mov
push
jl
push
clc
fsubrs
push
and
xchg
fidivs
cmp
dec
add
int3
scas
sbb
mov
test
push
mov
mov
call
xchg
es
or
jnp
nop
popa
cs
dec
stos
imul
pop
cmp
ss
lcall
xchg
mov
pusha
inc
out
imul
inc
scas
sbb
icebp
push
ret
xchg
mov
pop
push
pop
mov
pop
loopne
out
int3
push
addr16
inc
in
cwtl
loopne
xchg
mov
push
cmp
aad
aad
cmp
pop
stos
push
sbb
inc
addr16
repz
adc
enter
out
in
imul
xchg
mov
mov
lock
sub
pmaddwd
out
dec
xchg
stc
dec
mov
outsl
sub
push
out
sbb
lods
and
mov
xchg
cli
loope
mov
push
and
fists
cld
stos
mov
mov
sub
cmp
lock
bound
xorb
outsl
sarb
pop
or
cmp
sub
mov
scas
mov
cmc
pop
push
mov
sti
lea
rcl
pop
cmp
and
iret
inc
lahf
loope
leave
sub
mov
cmp
frstor
push
es
rcrb
mov
cmpsl
arpl
xchg
add
or
push
mov
add
hlt
fcmovnbe
cwtl
and
pushf
adcl
shld
or
repnz
cs
shlb
pop
test
sbbl
dec
dec
ret
xchg
dec
mov
sbb
cmc
dec
mov
xchg
pop
out
lret
jl
cmp
pop
sub
mov
inc
mov
js
sbb
lret
pusha
lock
mov
cmp
dec
fbstp
ret
xchg
stos
cltd
icebp
cmp
ret
sub
inc
mov
stc
adc
daa
loop
arpl
frstor
mov
nop
xchg
mov
sarl
pop
pop
dec
imul
arpl
pop
dec
sti
xchg
xchg
or
pop
cmpsl
fmull
out
inc
or
cmp
ret
je
pop
mov
fwait
out
cmp
mov
fildll
aam
xor
mov
aam
inc
mov
decl
pop
scas
lods
xchg
popa
push
dec
aas
cmc
dec
sbb
arpl
add
es
pusha
jge
adc
fistpll
rcrb
mov
adcl
xor
ss
cmp
jae
and
and
dec
insb
mov
in
outsb
push
adc
mov
jmp
jae
pop
sarb
ss
and
sub
jno
fiaddl
scas
and
es
cld
jl
mov
fisubl
aam
dec
inc
ljmp
rorb
mov
push
iret
cmpb
mov
mov
rolb
jb
sub
add
leave
pop
repnz
movsb
in
cld
fs
jo
cld
xor
ret
test
push
in
or
cmpsl
mov
adc
mov
cmpsl
mov
cmp
outsb
xor
shrb
and
mov
stc
mov
xorl
jge
sbb
mov
mov
sub
jns
mov
int3
lea
int3
inc
cld
loopne
and
or
xrelease
mov
push
sti
cmc
cmc
loop
push
call
mov
sub
dec
scas
mov
or
shlb
xor
mov
mov
popa
or
mov
lods
adc
aad
repnz
jl
les
mov
bound
sub
inc
sub
fdivp
xor
mov
gs
rsm
add
inc
inc
subps
and
pop
xchg
dec
aas
cli
cld
or
mov
mov
shrb
aad
mov
sbb
mov
xor
or
rcr
popf
xchg
or
xor
push
scas
pop
mov
and
push
fwait
clc
sub
adc
and
cmpsl
mov
add
and
sub
add
mov
or
pop
ss
and
daa
lahf
aad
xchg
xor
pop
mov
mov
loop
ss
inc
mov
addr16
mov
or
je
fwait
cwtl
fcompl
lcall
pop
enter
gs
inc
lret
push
inc
xor
adc
daa
aaa
push
lret
pop
cmp
addr16
ljmpw
jae
push
xchg
stos
push
int3
sub
mov
aam
dec
test
xlat
push
outsb
or
pop
or
mov
dec
mov
js
fcomps
lret
test
push
xchg
or
pop
inc
sbb
movsb
sbb
add
jl
in
shlb
adc
outsb
push
xor
lods
lds
cmpl
add
ss
cli
out
jmp
in
popa
sub
mov
jle
pop
testb
popa
lret
mov
pop
aas
arpl
pop
and
mov
and
pop
mov
dec
aas
sti
inc
mov
inc
ss
xchg
cmpl
dec
sub
in
ss
mov
pop
mov
fadds
mov
xor
lcall
and
clc
mov
or
leave
movsl
mov
and
cmc
cmp
cmp
mov
xchg
cmp
aaa
inc
popf
shl
mov
popa
pop
pop
jo
iret
mov
adc
or
popf
es
xchg
cmp
pxor
aad
xor
cld
fsubrs
fwait
pop
add
fsubrl
adc
pusha
pop
add
mov
dec
insl
dec
cmp
mov
mov
out
pop
jmp
sbb
xor
jmp
mov
mov
and
xor
mov
js
stos
daa
xchg
outsl
test
or
dec
add
dec
lret
aaa
repnz
push
pop
lock
add
movsl
push
inc
sbb
out
dec
add
and
jne
pop
sbb
fwait
mov
lds
popa
adc
aad
push
shrl
jbe,pt
or
and
and
lds
add
pop
add
test
cld
insl
mov
push
adc
jge
mov
int
imul
fisubl
mov
cmpsl
pop
add
mov
push
cmpsb
cmp
in
mov
mov
aad
fiaddl
repz
xor
mov
pop
nop
ret
dec
cmp
cs
fiadds
push
clc
nop
jle
cmp
cmp
xor
add
aam
fisubl
insl
out
fcmovne
xlat
incl
aam
jb
mov
movsl
das
cmp
push
aam
cmp
insl
xor
adc
mov
mov
movsb
test
sub
xchg
je,pn
or
xchg
add
outsl
icebp
sbb
ds
aam
mov
xchg
mov
sbb
cmp
hlt
arpl
cmp
iret
mov
pusha
xor
in
inc
rcr
push
in
push
fsubrs
lcall
push
fistpl
push
stc
gs
daa
xor
inc
popa
dec
lock
mov
std
out
pop
inc
jecxz
imul
fwait
aaa
add
js
pop
les
push
mov
mov
lods
jecxz
cmpsb
fisubl
imul
sti
fucom
jo
gs
mov
xchg
in
fdivrl
call
bound
fistps
push
push
loopne
or
ret
push
or
cmc
xchg
outsb
sbb
jl
adc
xchg
lcall
or
loop
and
dec
push
push
mov
std
mov
sub
jp
ds
test
mov
subb
xchg
sub
push
mov
dec
mov
cli
je
dec
stos
add
or
mov
sbb
sub
fcoms
cmpsb
fnstenv
shlb
inc
xor
or
inc
aaa
jno
adc
pop
mov
daa
outsl
pop
sub
inc
sti
jmp
pusha
cmpsl
cmp
ret
adc
mov
aad
mov
sub
pop
pusha
movl
push
pop
loope
xor
notb
cmc
sub
aad
call
cmp
rolb
fsubr
jae
push
cmp
imulb
or
pop
hlt
loopne
pop
mov
shl
jl
sub
push
cmp
addl
adc
jg
pop
xchg
mov
psrlw
xor
test
pop
aaa
fidivrs
fisubrs
adc
and
pusha
call
jne
jae
and
std
stos
pop
push
movsl
out
add
sub
pop
push
pop
push
mov
out
push
filds
or
outsb
jp
cmc
dec
cmp
mov
xchg
mov
sub
cwtl
pop
sbb
scas
xor
faddp
orb
add
movsl
pop
sbb
cmp
xchg
call
or
inc
add
adc
cs
lds
mov
adc
mov
xor
les
gs
mov
pop
and
dec
nop
dec
mov
jl
daa
pop
and
push
pop
add
mov
push
imul
sbbl
aas
mul
sbb
push
cltd
es
sbb
cli
ja
faddp
scas
push
xchg
fildl
je
hlt
popf
dec
mov
and
lret
ljmp
inc
popf
in
pop
mov
cmp
shr
sti
pop
add
mov
fbstp
sbb
cmc
mov
add
or
repnz
filds
scas
dec
stos
cmp
imul
pop
add
cmpsb
mul
mov
xchg
jnp
pop
adc
cmp
ds
push
sbb
dec
cltd
lret
sub
jmp
push
push
hlt
xchg
adc
pop
aad
in
xchg
in
mov
xor
stc
push
push
iret
and
jmp
int3
mov
sahf
nop
xlat
mov
nop
cli
xor
dec
push
movsl
jle
imul
jae
into
icebp
inc
push
or
fnstenv
cmp
aaa
mov
xor
jbe
jo
pusha
add
inc
mov
aaa
mov
mov
adc
mov
cmovno
sti
mov
insb
movsb
popf
sbb
add
in
dec
xchg
cmp
or
test
mov
es
shl
movsl
call
pop
push
xor
fsubs
repz
test
pop
sub
dec
je
in
pop
fists
jb
mov
adc
enter
fiaddl
jge
test
cmp
stos
ss
std
mov
repz
lret
dec
dec
jns
bound
add
adc
mov
xor
and
movsb
adc
and
add
outsl
data16
add
repz
pushf
sub
fsubrs
stos
cltd
jo
mov
lcall
xor
xchg
pop
popf
shr
xchg
lcall
into
outsb
test
sub
add
xor
adc
xor
push
inc
sbb
scas
mov
add
scas
jb
mov
aaa
sub
mov
lods
dec
aad
divb
scas
add
jmp
sbb
repnz
or
xor
or
daa
lock
xorl
jns
jbe
mov
mov
xabort
mov
dec
xchg
in
inc
push
je
aaa
jne
and
dec
mov
xchg
fs
add
pushf
movsl
xchg
imul
mov
mov
jne
stc
add
jb
ja
adc
out
addl
frstor
push
seta
std
cmp
dec
int3
lock
repz
ret
sub
dec
mov
imul
testb
daa
jne
mov
jmp
sbb
stos
inc
mov
ds
add
rcll
xor
push
enter
push
mov
shlb
pushf
aas
cmp
jmp
gs
adc
bound
mov
daa
popf
call
lahf
and
inc
jns
andl
in
pushf
jl
hlt
jae
aad
test
fs
sbb
jmp
mov
shlb
mov
in
fldt
xchg
push
addr16
inc
push
sbb
sbbl
sti
repnz
pop
es
dec
mov
pop
push
or
push
mov
scas
xchg
test
leave
and
pushf
test
jae
cmpsb
cwtl
pop
in
sti
pop
lahf
mov
scas
into
mov
ljmp
pusha
xor
bswap
ret
inc
dec
cmp
insb
std
push
int3
out
pop
rcrl
in
loopne
jnp
les
leave
fwait
or
jge
cmp
fildl
test
call
push
jl
orl
push
jmp
and
push
stos
sbb
sbb
or
inc
daa
push
scas
cmp
shrb
sar
out
out
jno
addr16
mov
iret
sti
xchg
pushf
out
into
in
push
fcmovnbe
divb
lds
loopne
push
inc
sbb
cs
or
pusha
mov
dec
lods
mov
push
mov
pop
cs
jb
out
lret
adc
cld
pop
lret
add
xchg
mov
push
aaa
sbb
arpl
popa
lds
add
scas
pop
aad
in
outsb
fsts
push
dec
in
jo
adc
pushf
jae
jnp
inc
adc
xor
jae
mov
mov
push
in
lcall
jmp
mov
and
pop
aas
mov
inc
xor
mov
lods
movsb
jnp
xor
in
adc
xchg
mov
cmpsb
jno
xchg
mov
outsb
shll
roll
dec
repnz
lahf
aas
in
scas
mov
fdivrl
out
loop
sbb
dec
lahf
pop
bound
pop
push
ja
sub
sbb
mov
push
push
nop
loope
lock
pop
sti
mov
or
in
add
hlt
vcvttsd2si
aam
and
mov
nop
fstps
in
jae
pop
xor
mov
out
or
mov
push
icebp
lahf
add
pusha
mov
mov
shrb
aad
sub
cmp
pop
xor
aas
loope
mov
rcrb
repnz
aas
add
clc
mov
push
xor
ffree
lds
inc
ss
stc
sub
jnp
dec
sub
xor
mov
imul
pop
outsl
stos
fcmovnbe
mov
pop
xchg
xor
or
out
mov
xor
inc
mov
mov
jg
xor
adc
mov
mov
cmp
clc
jbe
aam
sbb
add
test
idivl
dec
push
andl
and
mov
psrlw
jo
dec
adc
in
adc
mov
cmc
lods
sub
dec
addl
xchg
jge
mov
ficomps
repnz
xor
sti
mov
or
negl
sub
push
addb
push
jnp
dec
aas
jmp
pop
mov
cmpl
daa
rclb
pop
cltd
loopne
dec
push
sti
iret
inc
int3
pop
fcmove
adc
les
test
adc
arpl
and
sub
mov
setg
movsb
ret
push
sbb
mov
mov
loopne
jmp
xchg
out
sub
mov
int3
ljmp
mov
xchg
lcall
ret
fidivl
lret
mov
gs
data16
out
xchg
insb
fcoml
and
loope
outsl
mov
std
orl
gs
ljmp
adc
test
arpl
addr16
and
lahf
js
cwtl
xchg
pop
lock
sub
lock
int
pop
jl
cmp
jo
iret
loope
call
and
mov
aad
mov
je
sbb
les
pop
lret
ret
iret
les
out
add
add
sbbl
cli
jae
mov
mov
mov
into
jg
push
icebp
pop
and
mov
adcl
flds
pop
pop
add
es
push
das
arpl
out
into
pop
push
sbb
movsb
cmp
int3
adc
push
inc
jle
movsl
sub
or
imul
and
sarb
jmp
xchg
lcall
cs
test
scas
shrl
xchg
xchg
fsubl
es
and
mov
sub
cwtl
ror
push
adc
jb
sub
adc
sub
push
aad
clc
rorb
mov
in
push
ljmp
and
fsub
rclb
mov
adc
lret
xchg
ds
popf
xor
adc
fwait
add
mov
jg
hlt
xchg
in
xchg
je
aam
int
xor
dec
idiv
ret
outsb
jo
xor
cmp
or
fsubrs
xchg
rorl
sbb
lahf
repz
aas
and
inc
test
das
outsb
icebp
fcmove
aaa
mov
das
nop
xchg
in
stc
aad
fists
jae
movl
mov
repnz
incl
fwait
add
push
push
and
into
cli
mov
mov
adc
jmp
xor
inc
sbb
cs
sub
inc
fisttpll
or
add
mov
cli
insb
ret
js
mov
movsb
mov
repnz
inc
cwtl
mov
mov
jmp
mov
cli
ucomiss
cs
xchg
mov
or
cmp
push
lods
push
mov
mov
sbb
push
rclb
cmp
test
rolb
call
adc
cmp
pop
jecxz
cmpb
mov
lcall
inc
mov
rcrb
fnsave
insb
push
push
imul
mov
sub
or
mov
add
cmp
adc
mov
ror
in
icebp
inc
ret
in
cld
jns
stos
inc
cmpsb
rcrl
push
in
jb
mov
cmp
inc
mov
icebp
test
jbe
mov
movsl
nop
inc
pop
add
or
mov
mov
pop
movsl
mov
out
inc
outsl
imull
or
jo
lcall
in
jge
popf
jecxz
dec
sarl
sub
jg
and
jge
cmp
sub
cmpl
sbb
repnz
ds
lea
adc
movsb
dec
scas
incb
push
mov
popf
es
sbb
inc
fs
xchg
dec
lods
pop
in
out
cmc
adc
arpl
out
add
ss
xor
flds
pop
nop
fistps
cmp
adc
test
push
adc
dec
mov
or
pusha
push
adc
xor
pop
aas
xchg
data16
jnp
fdivrl
pop
insl
mov
in
bound
inc
sbb
mov
popa
inc
mov
cmp
pop
arpl
mov
jbe
cmpb
imul
dec
mov
stos
mov
sub
pop
xchg
jne
jmp
xor
icebp
addr16
ljmp
enter
and
call
out
cmc
inc
divl
push
mov
xchg
fstps
pusha
inc
mov
out
xlat
call
mov
or
enter
xlat
pop
xchg
jo
addb
movsl
cli
sbb
cmpsl
out
jne,pn
pop
or
mov
cld
sub
push
ljmp
add
std
mov
std
aas
lock
loope
or
idivb
bound
push
call
aam
push
in
jecxz
sub
jle
inc
and
add
fadds
pop
sar
fwait
aam
hlt
dec
pop
orl
ficomps
test
xchg
sub
xchg
adc
add
stos
xchg
ret
mov
pop
pop
scas
or
mov
dec
repz
dec
mov
mov
je
stos
subb
stos
lods
mov
mov
and
std
je
cmpsb
lret
push
int3
mov
mov
shrl
dec
in
jl
add
es
dec
and
inc
mov
xor
push
jge
rcrb
mov
add
cmp
cmp
push
andl
in
add
out
insl
loopne
xchg
pop
in
sub
pushf
addr16
inc
rcrl
jecxz
in
lcall
ret
jne
aad
cmp
xchg
leave
and
hlt
dec
jge
cmpsb
mov
pop
pop
jg
cli
or
repz
mov
or
inc
loop
inc
jns
incl
push
int3
mov
pop
in
pop
sub
or
je
lock
cmpb
mov
or
es
inc
sbb
dec
out
movl
mov
add
inc
pop
rcl
and
inc
out
stos
jp
push
push
mov
pop
movsl
pop
and
add
loope
xorb
dec
incl
xchg
pushf
xchg
vpsllq
pop
and
addb
jae
push
inc
sub
stos
or
xor
dec
shl
inc
fldl2t
out
movsb
in
test
adc
scas
loop
shl
jne
xor
stos
out
xor
outsb
outsl
test
into
out
or
repnz
jp
ss
add
outsb
call
jle
add
sub
sti
je
fcomps
fistps
mov
xor
cmp
fdivrs
jno
mov
push
fwait
scas
sbb
jns
dec
xchg
xor
mov
popa
shll
insl
sbb
fwait
addr16
cmp
mov
es
pop
fwait
test
popl
pop
push
cmp
sbb
addr16
enter
jmp
push
fdivs
mov
dec
and
into
or
push
push
lahf
mov
int3
push
testl
sbb
xor
enter
inc
stc
movsl
test
sbb
movsb
ja
lret
lret
fnstcw
outsl
sub
ret
jg
push
out
push
jns
sbbb
aad
sbb
mov
jge
xlat
cmp
addl
outsl
push
mov
sub
iret
cmc
das
stos
jg
fwait
sbb
jle
int
xor
mov
loope
mov
mov
cs
mov
xchg
or
orl
inc
push
lods
mov
lods
ss
adc
dec
ja
sub
data16
mov
pop
cmc
je
pushf
outsl
adc
xchg
or
loope
mov
xor
lock
push
push
add
iret
xor
inc
pop
mov
xor
jno
mov
inc
lret
icebp
or
loopne,pn
adc
inc
or
cmp
dec
test
cmpsl
adc
xchg
clc
jb
insb
mov
adc
sbb
scas
jecxz
ss
movsb
sbb
mov
jno
mov
cltd
lods
iret
lods
sbb
incl
and
jb
jmp
xchg
cmpsb
int3
cmp
lret
loope
and
bound
dec
cli
iret
lret
xorl
stos
fmuls
pop
loop
push
and
aam
push
or
repz
jne
jno
insl
fldt
cltd
ret
mov
imul
lock
add
adc
test
test
ror
xor
fucomi
mov
sub
and
movsl
add
aas
or
stos
mov
dec
push
hlt
shl
xor
bound
js
cmp
pop
add
adcb
aam
sbb
cmp
xlat
lcall
adc
movsb
add
fcmovbe
sbb
andb
sub
jge
xchg
jmp
sarb
das
inc
xchg
or
sub
xchg
aaa
mov
mov
jnp
aas
inc
outsb
call
js
or
cs
in
pop
mov
into
das
arpl
push
and
enter
rcrb
mov
dec
xor
pop
inc
or
jne
mul
push
xchg
xchg
cmp
cs
popf
mov
lcall
ret
ret
xchg
pop
stc
mov
cmp
mov
jmp
scas
addl
das
xorl
out
and
adc
mov
push
mov
mov
and
imul
fidivs
dec
ret
and
xchg
mov
push
push
out
mov
fists
mov
jb
fimuls
das
jo
je
and
ret
movsl
mov
jecxz
jb
popf
aas
sbb
xor
cld
repz
or
and
mov
jne
push
sub
leave
lock
ret
pop
add
mov
add
ja
jle
lock
repnz
out
cmpsl
cmpsb
outsb
cmpsb
ret
push
and
sub
jg
mov
ret
stos
xor
lret
inc
mov
inc
sbb
xor
outsb
sub
xor
push
mov
lahf
sub
xor
sub
push
outsl
jae
arpl
jb
das
aad
mov
arpl
mov
mov
mov
mov
inc
pop
dec
jno
sub
insb
mov
lea
pop
les
cmpsb
push
mov
in
and
and
xor
mov
loop
mov
push
jne
mov
sbb
adc
out
out
fcoml
push
popa
xor
inc
clc
sub
and
mov
xchg
shl
leave
out
fadds
cld
inc
mov
test
scas
aas
repz
insl
cmpsl
xchg
nop
lcall
jp
jg
dec
aas
fucomp
outsl
sarb
sub
test
pop
out
insb
dec
cwtl
nop
cmp
shll
xchg
das
mov
cmpsb
repz
enter
ret
sahf
ficomps
cmp
es
pop
or
push
int
jl
cs
xor
dec
lcall
mov
int
dec
aad
movzwl
rcrl
jnp
shrb
aam
mov
mov
loop
dec
and
leave
xor
mov
lcall
push
pop
xchg
push
xor
imul
stos
mov
and
je
std
js
jae
inc
movsb
call
push
push
mov
filds
stos
and
test
adc
cld
stos
jge
mov
mov
movsl
inc
inc
mov
mov
pop
lock
xor
adc
mov
data16
fs
rcrl
iret
cmp
adc
insl
xor
inc
adc
shlb
fwait
jecxz
pop
xchg
dec
pop
xchg
daa
mov
xor
xor
sbb
popa
call
cmpsb
retw
inc
lret
stos
in
outsb
into
jns
pusha
outsl
or
mov
fidivrl
pop
mov
jae
mov
xchg
dec
enter
mov
inc
ljmp
pushf
mov
das
ljmp
dec
fistps
jmp
or
dec
repnz
sbb
or
push
xor
shll
add
jmp
cmpsb
and
ljmp
sbb
and
dec
ret
ret
jae
testb
push
paddd
cmp
iret
or
dec
mov
testl
inc
cmc
mov
aam
adc
lds
push
call
lods
rcrl
jae
xchg
mov
fwait
jle
ficoms
bound
mov
pushf
adc
ret
lret
jg
sbb
sahf
aaa
adc
push
pop
mov
gs
pop
test
xchg
ret
sbb
add
scas
mov
mov
xchg
data16
dec
ljmp
xchg
sbb
adcl
adc
nop
sbb
push
cmp
push
mov
mov
inc
cmpsl
mov
into
loope
push
xlat
mov
lret
lahf
in
roll
or
bound
push
fwait
sti
fs
xor
lret
in
sbb
je
xorl
mov
mov
xor
ret
cli
fcmovu
das
push
xchg
popf
in
sbb
adc
inc
rorl
lods
mov
rclb
out
cmpsl
mov
xorb
pop
mov
xchg
push
sbb
mov
cwtl
ljmp
dec
sub
jae
je
pop
into
sub
xorl
xor
sub
cld
in
cwtl
mov
mov
xor
mov
in
or
leave
dec
and
ja
xchg
push
and
adc
dec
cmp
jecxz
in
rcrb
js
lods
cmp
jae
mov
mov
dec
repnz
pop
loop
sahf
jle
jb
iret
xchg
fildll
nop
adc
sub
insl
mov
sbb
jmp
outsl
jbe
xor
addl
jg
clc
adc
icebp
out
dec
and
sub
ret
in
ja
ljmp
adc
cmp
les
ret
dec
and
sub
pop
rol
in
pop
mov
mov
adc
out
push
in
nop
outsb
or
cmp
in
ss
pop
pop
rcrb
dec
lahf
mov
pop
mov
int
mov
cltd
push
add
sbb
fadds
pop
test
xor
ljmp
push
es
movsb
test
out
mov
cmp
lock
fsubl
out
fidivl
push
pop
adc
xchg
jecxz
pop
cs
movsb
xor
push
aam
sahf
jg
xlat
mov
mov
pop
add
mov
jmp
loope
and
jg,pn
and
cs
adc
mov
adc
neg
ss
xor
or
je
xor
push
leave
aaa
nop
pusha
jp
dec
mov
test
mov
jae
in
adcb
add
xchg
xor
jne
push
push
mov
add
adc
cmp
fdivrs
inc
push
lods
loop
stos
jnp,pt
jns
ror
ret
mov
stos
adc
les
cli
loopne
sbb
fwait
add
imul
fcom
imul
mov
push
test
inc
jp
daa
lea
xchg
jecxz
leave
sub
adc
andl
mov
xchg
cmp
fisttpll
sub
jns
dec
mov
push
xchg
pushf
scas
fs
repnz
pop
daa
test
xchg
test
inc
xchg
xor
icebp
dec
inc
leave
add
jg
sti
add
mov
inc
stos
daa
leave
insb
xor
fisttpl
jp
dec
js
pushf
ret
movsb
jg
jbe
ds
iret
mov
data16
cmp
sahf
sub
xchg
mov
cwtl
mov
mov
or
pusha
inc
fiaddl
inc
xchg
daa
pop
cmpsl
xor
lahf
inc
lcall
sbb
cs
xor
jo
xchg
jno,pn
insl
mov
enter
mov
ss
adc
sub
popa
jbe
sahf
add
dec
pop
jg
add
test
xchg
rorb
mov
lea
int3
test
push
xor
sbb
mov
insl
mov
fidivl
mov
jns
and
mov
cmp
mov
cmp
jl
cmpsb
fxch
js
lret
filds
or
test
mov
rsqrtps
cmovle
add
inc
sbb
xchg
and
cs
loope
push
inc
cld
jno
data16
jbe
popf
mov
xchg
xchg
push
xchg
push
aad
stc
into
cmpsb
inc
movsb
bound
mov
inc
mov
inc
push
jae
ja
or
mov
orl
ficoms
jno
aas
inc
mov
fst
repnz
loopne
dec
xchg
mov
pop
pop
adc
mov
stc
mov
mov
push
popa
sub
xchg
fidivrs
fwait
nop
sub
pop
inc
outsl
mov
xor
mov
or
jae
das
xchg
and
ds
dec
cmpsl
shr
add
ficompl
fistl
sbb
xlat
jno
lds
iret
or
xorl
mov
push
xchg
mov
outsb
and
popa
mov
mov
mull
popf
pusha
dec
negb
pop
xchg
adc
mov
pushf
sub
or
jnp
and
xor
imul
or
xchg
and
mov
jns
pop
pop
jb
out
arpl
sub
xchg
sub
fldt
rorl
and
push
stc
xor
mov
pop
ret
loope
pop
out
sub
pop
shr
sbb
lret
std
insb
clc
mov
xchg
je
jg
es
sub
or
mov
fcoml
aam
sar
lods
inc
test
jno
dec
daa
push
aam
adc
inc
push
push
xchg
dec
and
jmp
jnp
cwtl
jbe
inc
cmp
stos
cmpsl
jne
repnz
imul
xor
pop
sbb
mov
mov
and
sbb
and
jo
cmp
inc
lret
out
out
xlat
cmp
cltd
xchg
sbb
ja
cmpsb
xor
fwait
addr16
add
xor
stos
fld
mov
mov
inc
adcl
in
adc
in
and
xchg
or
sbb
movsb
mov
inc
cmp
xor
sti
xchg
nop
dec
pop
sub
adc
call
lret
nop
insb
adc
cmpsb
nop
jb
aad
sub
and
shlb
push
and
mov
push
xor
lret
dec
insl
adc
adc
xor
sub
inc
icebp
imul
loopne
sub
enter
add
add
pop
sarb
out
pusha
dec
xchg
add
test
sti
cmp
fidivl
pop
test
pop
fwait
into
mov
scas
push
xor
sbb
ret
sub
ja
aam
pop
mov
dec
fisttps
mov
xor
outsb
sub
xor
in
mov
pusha
pop
xor
bound
mov
sahf
push
roll
inc
sbb
push
mov
aas
push
sub
loopne
push
dec
pusha
cld
push
inc
adc
mov
add
xor
ret
mov
push
scas
and
inc
idiv
add
add
outsb
mov
or
add
cmp
scas
mov
mov
push
fstpt
push
inc
stos
cwtl
add
mov
and
or
jmp
mov
stc
scas
cwtl
scas
pop
ds
cmp
leave
popa
sub
xor
pusha
push
sbb
pop
and
shll
pop
fwait
test
jbe
cli
mov
pop
jmp
sub
test
xlat
push
test
sub
fisttps
cmp
pop
dec
sub
add
dec
mov
jae
test
ja
adc
inc
sub
lds
scas
int3
dec
pusha
imul
fwait
lahf
pop
cmp
mov
mov
imul
pop
or
cmc
lds
sub
sar
pop
jae
test
pop
push
pop
cmp
cld
das
dec
or
rsm
mov
mov
pop
sub
popf
mov
fisttpll
lods
sub
insb
cmpsb
adc
imul
xchg
push
xor
in
mov
and
xchg
xor
ljmp
inc
pop
dec
cmp
mov
imul
pusha
xchg
mov
arpl
sbbb
es
repnz
test
push
push
mull
es
dec
mov
sbb
and
cwtl
mov
lahf
je
adc
xlat
data16
int3
push
nop
jno
movsb
adc
lods
xchg
andl
les
dec
nopl
cmp
pop
mov
movb
inc
mov
ficoms
push
sub
aas
stos
push
shlb
sbb
add
imul
nop
cmp
mov
mov
jne
in
out
mov
xchg
and
aas
push
pop
outsl
mov
push
les
mov
mov
out
jb
fisttpll
or
adc
or
test
js
mov
fiadds
or
sarb
in
mov
aas
cmp
mov
jecxz
sbb
push
les
mov
stos
sub
lock
sub
imul
fwait
xor
push
mov
sbb
push
push
push
repnz
fcmovnb
xchg
mov
xchg
cld
imul
jb
jmp
daa
sbb
fstps
scas
mov
addr16
notb
rcrl
cmp
cmp
inc
js
cs
test
mov
jecxz
inc
mov
sbb
pop
pop
add
movsl
cmp
xor
mov
or
call
mov
sti
adc
int
cld
bound
jle
sbb
adc
and
adc
lahf
xor
xor
mov
push
scas
mov
and
nop
call
xchg
add
sbb
mov
mov
test
setbe
faddl
push
add
lret
test
lock
cmpsb
xor
add
ja
jmp
out
adc
in
int3
ret
push
and
in
scas
lods
mov
xchg
das
push
outsb
test
pop
mov
jae
scas
in
xor
or
xchg
jnp
cmc
pushf
into
pop
pop
nop
dec
fadds
pop
push
sbb
push
pop
xor
xchg
add
sbb
mov
add
xchg
add
in
inc
es
xchg
mov
js
xor
sti
in
fsubp
repz
movsb
mov
mov
mov
int3
xchg
in
xor
push
xor
dec
adc
js
and
adc
pop
pop
push
pop
cmp
aaa
test
cs
dec
mov
adc
jno
push
mov
mov
cli
sub
mov
movb
dec
cltd
cld
jno
jmp
jge
dec
pop
mov
fildl
xchg
add
sbb
cmc
mov
pushf
mov
mov
pop
cmp
xlat
mov
mov
jns
dec
aas
idivl
out
out
addr16
cmp
ss
mov
pop
push
repz
xor
sub
and
dec
and
test
add
insb
jg
mov
pop
add
mov
inc
xchg
push
and
xchg
sub
iret
fstl
adc
cmp
pop
repz
imul
mov
cmp
mov
sarl
or
movsb
sbb
sbb
mov
jae
shr
jb
add
push
in
xchg
movsl
into
jne
mov
in
mov
shrl
mov
push
jmp
push
ret
push
adc
push
xchg
xor
or
xchg
imul
repz
xor
fdivl
pop
popl
dec
cwtd
xchg
and
fcoms
pop
icebp
inc
fcompl
dec
lret
dec
sbb
and
das
sti
cmp
fs
testl
dec
ja
addb
nop
sub
xchg
push
lods
sbb
adc
repz
sbb
jb
out
mov
out
xchg
js
push
loop
and
aam
in
mov
ror
and
sahf
jnp
imul
mov
pop
decl
jmp
std
mov
fcompp
dec
jae
out
sbb
ds
sub
xchg
add
mov
sub
sbb
sub
xorb
sub
in
loop
pop
mov
hlt
fnstenv
sahf
sarb
mov
cmpsl
dec
xchg
pusha
jo
test
rcrl
call
jg
and
das
or
pop
sub
ja
scas
repnz
xchg
add
sbb
insb
xchg
xchg
cmp
mov
inc
sti
nop
dec
xchg
out
inc
aas
lock
arpl
stos
repz
rorb
aam
or
leave
jns
stc
push
push
mov
fwait
aad
xor
cmc
popa
lahf
sbb
dec
mov
ret
js
mov
and
sbb
and
and
push
stos
mov
je
lock
lea
loop
cmp
loop
and
mov
xchg
sub
fcmovb
sub
mov
negl
xchg
insb
mov
daa
ret
push
push
test
mov
mov
and
fwait
mov
leave
xor
in
cld
jns
xchg
inc
mov
sarb
mov
pop
jmp
xor
fidivrl
xchg
sub
in
sub
loopne
rclb
lea
incl
dec
in
std
inc
test
xchg
xchg
imul
mov
ljmp
jns
cmp
fisttps
add
ror
xor
adc
daa
push
ss
ret
stos
cmp
mov
sahf
cmp
ret
rcl
sub
and
jmp
mov
or
sub
js
loope
lods
inc
xor
or
pop
arpl
jl
sbb
xor
ret
adc
int3
or
mov
mov
je
loopne
mov
pop
inc
rol
sahf
mov
cmc
mov
aam
sub
repz
aaa
sbb
jg
lods
ret
fadds
nop
sub
jg
push
ljmp
xchg
dec
jmp
push
push
imul
lock
addr16
or
sahf
andl
adc
in
dec
pop
aad
mov
mov
rcl
pushf
jo
bound
mov
cmp
mov
pop
cmp
push
mov
push
mov
out
add
loopne
out
cltd
sbb
psubsw
repnz
test
int3
mov
mov
push
lret
fs
jmp
pop
icebp
adc
cmp
mov
xchg
sti
testb
stos
inc
jne
ljmp
push
les
pop
sub
mov
andb
jbe
sbbb
fisttpl
enter
cmp
mov
dec
fwait
jbe
cmp
sahf
rcl
jecxz
in
sub
pop
gs
pop
rorl
pop
pop
add
xlat
inc
jmp
dec
cwtl
daa
sub
sarb
fadds
movsb
add
mov
mov
adc
faddl
mov
dec
inc
pop
push
pop
and
mov
sbb
subl
arpl
push
dec
and
dec
mov
out
adc
inc
lock
dec
xchg
jge
rclb
call
xor
fisttpll
loopne
push
test
dec
mov
push
leave
mov
ss
mov
or
cmp
test
nop
arpl
sub
jo
xchg
or
scas
loope
sub
jmp
rcr
xchg
xor
push
pushl
lea
xchg
dec
jp
cmc
aas
xor
push
int
inc
dec
test
cmp
or
test
mov
movsl
lret
stos
jg
xorl
or
cmpsl
or
sahf
xlat
sub
stos
jg
dec
mov
fucomp
adc
cmp
stos
sub
daa
daa
fiaddl
lret
add
imul
mov
jge
dec
pop
fldenv
adc
addl
sti
rcr
or
enter
in
enter
xlat
icebp
fsubrl
aaa
xchg
mov
pop
fwait
aaa
movsl
jmp
int
adc
js
imul
adc
pop
mov
add
adc
leave
aas
cli
fcompl
ficomps
push
and
popa
inc
inc
add
push
pop
in
scas
mov
out
mov
shrb
push
outsb
dec
xchg
popf
sub
fstps
pop
add
bound
faddl
jbe
in
cmovp
sahf
jg
mov
out
or
insb
scas
ja
and
idivb
ret
push
insl
push
sbb
icebp
add
jb
cmp
mov
xlat
stos
scas
mov
push
lcall
lcall
jmp
mov
and
dec
cld
mov
ja
mul
jae
adc
sub
add
pop
sub
adc
jae
or
enter
pop
cmp
or
pop
sub
mov
fnstsw
pop
imul
in
lods
fs
or
push
xlat
fstl
sub
or
scas
push
idivb
imul
outsb
aas
stos
scas
addl
inc
cmp
mov
movsb
add
xor
push
push
xor
inc
cmpsb
push
sub
inc
cmp
mov
mov
push
inc
in
ja
movl
imulb
adc
jg
repz
add
mov
lods
aad
push
push
mov
jmp
leave
int3
xor
movsb
sbb
sbb
cmpsl
imul
jmp
sbb
dec
jle
push
jae
jnp
pop
xchg
shll
insb
fcmovb
jne
inc
fdivp
divps
stc
sbb
cltd
cli
pop
dec
shlb
sub
cltd
inc
and
jns
mov
test
jg
in
clc
push
push
cld
dec
fwait
shrb
cmc
sub
outsb
hlt
das
or
add
xchg
fldl
or
imul
sbb
stos
testl
xor
mov
test
fisubrl
repz
cmp
add
stos
dec
and
mov
cmp
add
add
leave
add
mov
arpl
mul
fcompl
or
mov
jg
mov
fisubs
push
push
or
push
nop
push
add
cmp
lcall
inc
push
jmp
stos
sbb
push
lcall
lods
push
adc
cmp
xchg
or
push
daa
jo
cwtl
aas
xchg
rolb
out
adc
mov
jne
inc
js
sbb
mov
inc
pop
sub
enter
sbb
push
sub
lret
xor
fiaddl
push
push
jmp
mov
shl
in
sbb
dec
add
les
jge
jmp
adc
cmp
cmp
in
dec
inc
in
add
or
pushf
mov
jle
and
sub
std
xchg
lods
add
cs
lds
sbb
jecxz
xchg
add
out
test
cmp
or
or
xchg
pop
repnz
movsb
ja
fiadds
ljmp
cmp
shrb
jnp
mov
cmpsl
shrb
mov
sub
adc
xchg
inc
and
dec
cmpsl
push
das
push
test
stos
in
and
insl
fisttps
fldl
sub
aaa
out
mov
ja
lock
movsb
outsl
mov
or
jl
xorl
mov
pop
mov
lret
clc
xor
nop
jne
fimuls
jp
mov
mov
adc
ljmp
stos
xchg
xchg
repz
repz
imul
shlb
sti
sbb
or
push
fsts
loop
or
fwait
mov
cmp
mov
mov
cwtl
scas
push
pushf
jns
sbb
sarb
push
shrb
pusha
xor
add
lock
xchg
into
and
xchg
mov
add
jnp
es
fimull
aaa
cmpsl
mov
jbe
mov
arpl
inc
inc
ljmp
mov
pushl
lds
inc
inc
fidivl
push
and
jbe
mov
mov
jmp
ret
jl
insl
scas
sub
mov
iret
mov
jl
ss
sub
sbb
repnz
cmpb
loop
imul
mov
mov
jecxz
popa
mov
add
negl
jns
xchg
inc
mov
dec
and
hlt
xchg
adc
mov
arpl
add
inc
pop
jnp
add
or
sbb
insl
cmp
cmpsl
sti
loope
andb
addr16
cmc
jecxz
xchg
in
ss
jmp
or
or
push
int3
xchg
and
or
mov
pop
aaa
xor
xchg
jle
mov
enter
adc
sub
push
je
jne
scas
test
addl
ret
dec
imull
dec
lret
sub
cmp
jge
sub
inc
sbb
sub
and
mov
jno
jbe
inc
push
jmp
lcall
stos
aad
call
addr16
outsl
and
movsl
xor
xor
les
pop
push
or
ss
pop
sub
mov
and
pop
enter
movsbl
xchg
cmpl
insl
mov
add
les
cmpsl
iret
jnp
aad
push
bnd
int
imul
pusha
cmp
push
lret
add
or
sub
xchg
cwtl
hlt
or
insb
stc
scas
fstl
push
lcall
testb
cmp
fs
pop
gs
ja
jmp
out
or
lock
repz
test
push
nop
mov
push
cmp
imul
mov
lret
adc
notb
test
mov
pop
xchg
mov
sub
mov
mov
mov
pushf
sahf
mov
add
fidivs
sbb
xchg
dec
and
mov
sub
jne
stc
pushf
dec
fidivrs
cltd
out
ret
sbb
sub
add
and
mov
sub
dec
and
pop
sbb
test
imul
out
stos
lds
cmp
lret
add
push
fisttpl
bound
fs
dec
pop
or
mov
add
inc
cmpsb
xchg
fsubr
leave
or
mov
insl
cmp
je
sub
hlt
in
mov
scas
stos
pop
add
mov
shrb
mov
xchg
lock
pop
aam
dec
xlat
dec
mov
ret
xor
jmp
push
push
rclb
sub
mov
mov
mov
add
fistl
push
sbb
cmp
leave
stos
mov
gs
std
fadds
insb
nop
inc
pop
bound
add
and
xchg
adc
push
inc
cli
sti
push
mov
lds
aas
cmp
sbb
testb
fnsave
adc
pop
shll
loope
loopne
aam
sbb
out
mov
cmp
sbb
xchg
int3
out
inc
xchg
adc
add
sub
test
mov
lahf
xor
mov
sbb
mov
out
pop
xchg
popa
mov
ja
ljmp
jnp
bound
and
mov
xchg
push
and
leave
das
cld
mov
pop
addb
shrl
int
sub
enter
loope
sub
mov
and
sub
add
xorl
jmp
sbb
xchg
cmp
xchg
mov
addr16
daa
js
sbb
cld
mov
jbe
xor
aaa
scas
inc
pop
sub
mov
pushf
xchg
dec
aaa
ja
popa
in
or
addr16
loop
push
leave
lock
sbb
movsb
push
sbb
mov
loope
mull
mov
jmp
push
xchg
pop
cmp
pushf
jae
test
push
out
scas
pop
and
or
mov
pop
push
imul
in
xchg
inc
out
lods
mov
rcrl
add
mov
loope
sub
cmp
jb
clc
into
jp
or
adc
mov
repnz
xchg
ss
fstpl
mov
sub
xorb
mov
push
insb
iret
xor
int
rcll
testb
loopne
mov
lret
pop
insl
adc
adc
loope
fisttpl
sub
inc
jg
pushf
stos
repz
push
rcll
cmpsb
dec
ja
inc
popl
lds
es
inc
test
jo
sti
imul
dec
xlat
fwait
inc
mov
clc
inc
cld
aas
cs
and
xchg
jnp
xchg
push
mov
xor
popf
pop
fptan
push
jae
push
xchg
in
mov
or
in
mov
xchg
orl
pop
xor
outsb
or
sub
les
sub
and
pop
cltd
push
xchg
dec
and
xor
jl
pop
mov
jle
lock
dec
outsl
add
jno
sbb
fildll
jle
push
scas
push
fcomps
push
aad
inc
gs
and
jnp
and
cli
mov
or
icebp
sbb
in
sub
jne
or
iret
js
sub
hlt
jmp
in
push
jno
cmp
lret
mov
sbb
out
jne
scas
scas
fdivrs
push
mov
out
push
mov
mov
cli
ret
xor
imul
lret
andb
adc
mov
adc
sub
cmpsl
leave
add
inc
inc
fwait
sub
ss
in
push
sbb
pop
or
cmp
push
pusha
fstps
jge
xchg
cmp
negb
out
push
inc
leave
lcall
xor
movsb
aaa
pop
add
xor
ja
loop
fcmovb
mov
dec
popa
insb
cmp
addr16
mov
xlat
ljmp
daa
xor
out
dec
outsl
mov
or
mov
jo
pop
pop
adc
js
enter
in
xor
mov
mov
jg
xchg
and
xor
mov
insl
sbb
xor
jno
aam
pop
outsl
add
push
inc
scas
mull
cld
fstl
xlat
scas
push
cmp
xchg
push
sahf
add
xchg
aam
lahf
cmpsb
orb
leave
jl
sbb
add
push
shlb
fnstsw
xor
int
mov
aam
loope
jno
shlb
scas
push
lods
mov
jmp
xchg
repnz
ud2
mov
out
std
cmpsl
inc
fwait
inc
pusha
push
fwait
ret
or
pusha
push
lds
dec
leave
sub
inc
ljmp
cmp
cmp
xchg
cmp
sub
popf
push
iret
aaa
dec
or
scas
mov
lret
xlat
lea
xor
test
int3
xor
xchg
aaa
mov
push
mov
mov
out
aaa
jae
repz
inc
mov
mov
jne
cwtl
test
cwtl
clc
jb
inc
decl
add
orb
aad
sbb
and
idiv
ljmp
sbb
jecxz
in
and
mov
mov
mov
inc
xlat
in
pop
dec
mov
inc
jecxz
xor
sub
mov
lcall
pop
inc
add
lcall
shl
cmpsb
idivl
xlat
sti
cmp
mov
xor
mov
div
stc
and
pop
test
add
xchg
es
shl
push
out
popa
int3
sub
imul
mov
mov
xor
stos
push
push
enter
xchg
sub
adc
adc
mov
jb
pop
dec
test
xchg
push
xor
cwtl
lret
xor
nop
jo
iret
ds
mov
aam
rcl
sbb
pusha
inc
push
sub
xorb
dec
loopne
mov
inc
clc
lea
pushf
loop
data16
jge
jnp
inc
out
out
fstps
pop
shr
xchg
cwtl
cli
inc
inc
pop
or
and
leave
iret
hlt
sub
pop
lret
push
into
out
push
in
push
sbb
cmpsb
mov
mov
lods
test
jbe
and
gs
lahf
or
sbb
mov
add
xor
push
mov
sbbl
stos
lret
fdivrl
adc
stc
jl
fisttpl
dec
sub
push
sub
outsl
jmp
mov
xchg
std
add
sahf
and
and
mov
out
mov
xlat
sub
sub
ret
and
mov
sbb
int3
inc
xor
pop
inc
rcr
adc
pop
push
in
aas
dec
mov
pop
outsl
xlat
loop
mov
and
rolb
std
mov
cmp
sub
jl
add
enter
cmpsl
daa
dec
addr16
push
cltd
inc
cmp
pusha
xchg
sar
push
or
ffreep
cs
cmp
movsl
or
dec
imul
mov
or
imul
dec
pop
notb
jno
inc
sbb
mov
sbb
in
dec
lcall
addb
aad
mov
mov
xchg
mov
imul
pop
incb
jp
dec
pop
loopne
fisubl
pop
hlt
outsb
xchg
andb
jecxz
iret
sub
and
bound
mov
mov
push
jmp
pop
sub
push
std
sub
mov
aaa
cmp
mov
pop
addl
jne
adc
sbb
add
mov
mov
cltd
jmp
lea
dec
pop
fsubrs
les
lods
pop
mov
movsl
jno
aad
pop
in
nop
pop
jbe
movsb
scas
jmp
repnz
repz
dec
adcl
scas
aaa
in
jp
cmpsb
ljmp
sbb
mov
lds
jne
inc
loope
pop
xor
cltd
jl
insb
fimull
cmpsb
sub
mov
adc
lret
ret
sbb
mov
dec
lahf
pop
test
cwtl
pushf
jae
or
push
daa
lods
jnp
test
fisubrl
jmp
pushf
push
xchg
and
and
scas
cmp
in
cmp
and
or
jno
inc
imul
out
add
inc
imul
daa
xchg
repnz
mov
xchg
and
rolb
popa
ljmp
add
je
mov
dec
insl
stos
mov
pop
arpl
xchg
xchg
shll
mov
cmp
and
aad
mov
push
sti
sbb
popf
sub
out
aaa
ss
daa
mov
mov
and
fcompl
les
fdivrs
xchg
jg
pop
add
push
cmc
mov
andb
jbe
lods
inc
ret
icebp
adc
fs
inc
add
loope
xor
push
sub
mull
xor
inc
lahf
popa
daa
xor
xchg
pop
and
xor
decl
pop
cmc
fildll
push
gs
jo
mov
ljmp
mov
loop
mov
cmpsl
xchg
mov
adc
loope
out
lods
and
pop
jp
lods
rorb
cltd
int
xor
sbb
dec
mov
jge
int3
xadd
inc
fcmovnbe
std
cli
ja
and
mov
pushf
and
mov
push
into
aaa
push
or
iret
rep
mov
lret
and
call
or
sbb
push
cmp
sbb
cmp
mov
movsl
ljmp
jg
mov
pop
mov
fdivs
clc
mov
push
mov
push
cmpsl
push
mov
aaa
mov
and
divl
aaa
aad
call
test
mov
call
cmp
mov
fwait
imul
sbb
out
nop
mov
or
ja
and
repz
pusha
cld
lret
std
js
push
mov
jb
pop
fs
mov
sarb
sti
outsl
repz
xchg
dec
and
mov
pop
push
movsb
adc
fucomip
inc
sub
jno
xor
jae
in
std
inc
push
cld
jb
shl
push
scas
mov
loope
xchg
lahf
movsb
mov
cs
jnp
loop
repnz
cmp
jae
mov
int3
jmp
sub
jge
inc
mov
je
loope
jne
ja
sub
rclb
pop
pop
sub
roll
sbb
xchg
push
push
xchg
inc
mov
into
sbb
rorb
jb
adc
jae
jmp
in
fdivl
sub
pop
aam
mov
aaa
fistpll
jl
movsb
dec
mov
push
stc
sbb
scas
leave
rclb
lret
inc
lret
filds
sbb
mov
popf
mov
or
fnstsw
jo
mov
insb
xchg
popa
cli
push
jl
nop
aaa
xchg
dec
out
add
jle
mov
inc
jecxz
es
push
fmull
xor
mov
cs
daa
push
rclb
sti
adc
sub
rcl
jg
subl
icebp
lret
test
cltd
stos
cmp
jl
out
cmp
sub
inc
and
lea
mov
movsl
lods
xor
pop
mul
in
dec
mov
push
add
mov
dec
fadd
movsb
call
jge
jg
inc
inc
ljmp
or
sarl
sbb
enter
add
xor
rorb
cmc
aas
hlt
xchg
bound
pop
clc
mov
push
ja
dec
pop
adc
cli
sbb
dec
push
sarl
hlt
dec
out
sub
mov
sbb
test
jns
fstpt
ret
dec
loopne
sbb
xchg
or
aam
repnz
pop
fadds
pop
enter
push
in
loope
jg
cmp
xchg
std
or
faddl
lock
pop
mov
push
jae
push
dec
mov
pop
daa
jno
add
rorl
fs
and
fidivrl
inc
int
cli
mov
insb
rcrl
scas
cmp
enter
mov
out
test
mov
push
pop
mov
ret
sbb
jmp
and
xchg
dec
mov
dec
jnp
xchg
cmp
mov
mov
cmpsl
test
pusha
push
call
sbb
inc
sub
xchg
or
out
and
add
scas
bound
mov
roll
pop
xor
jb
std
jnp
and
std
sub
fmul
fistpl
aas
daa
cmpsl
das
sbb
mov
fdivp
outsb
and
imul
dec
cwtl
jns
jns
jmp
push
lds
sbb
pop
mov
xor
iret
jge
adc
mov
das
and
scas
jg
push
cmp
add
sub
xchg
outsl
das
and
add
insl
cmp
popf
sbbl
rcll
xchg
adc
and
add
es
xchg
int
pushf
xchg
test
fildl
fcompl
aam
xchg
movb
add
mov
sahf
cli
outsb
jle
fldt
enter
ret
fiadds
jbe
mov
xchg
mov
xchg
js
mov
sbb
je
in
dec
scas
test
out
cmpsl
test
cltd
aaa
inc
std
dec
jnp
push
xor
xchg
mov
in
sbb
cmp
js
test
sub
push
mov
jg
push
in
fxch
cvttps2pi
mov
push
outsl
imul
sub
and
loopne
arpl
or
rolb
push
es
hlt
dec
insl
dec
fmulp
jbe
in
mov
cmpl
imul
push
jge
out
icebp
leave
inc
push
add
add
jns
cmpsl
push
cmpsb
jne
lret
clc
xor
inc
mov
jbe
test
sbb
into
shll
pop
push
loop
push
sarb
mov
pop
sbb
xor
cltd
ficomps
xor
enter
pop
inc
pop
xor
insb
fisubrs
mov
mov
and
mov
out
js
mov
test
gs
int3
adc
outsb
lret
in
mov
and
xlat
mov
cmpsl
leave
nop
sahf
cmp
and
sahf
cmp
cmp
fs
sbb
aad
jmp
cmp
outsl
mov
pop
andb
aas
xor
or
popf
mov
adc
inc
mov
cmpsl
ret
lahf
repz
ljmp
pushf
fwait
jno
ss
inc
cmc
fnsave
std
pop
es
fstps
cwtl
push
addr16
push
es
aad
xchg
sahf
out
mov
jbe
jp
add
or
pop
mov
mov
adc
xor
push
out
int
xchg
adc
adcb
shlb
imul
ds
test
out
ds
add
sbb
xor
xchg
sbb
mov
sbb
scas
fdivrs
faddl
push
ja
cmc
test
sub
call
mov
fldl
fdiv
push
jb
negl
push
sub
call
mov
mov
or
push
jge
int3
and
push
adc
jns
sub
dec
dec
inc
adc
add
mov
jne
push
shrb
in
mov
sahf
je
push
loope
test
lret
pop
sbb
pushf
jno
mov
fnsave
jecxz
jnp
testl
rcrb
mov
dec
subl
jl
dec
in
dec
mov
cli
repnz
xor
popa
pop
jge
jecxz
das
divl
test
popa
pop
xor
jne
data16
push
jbe
lahf
xlat
push
sub
xor
clc
stos
mov
movsb
lods
int3
add
out
jl
mov
mov
sub
lcall
xchg
mov
out
imul
jmp
xor
or
ret
test
and
jg
adc
leave
pop
sub
adc
mov
fidivl
stc
mov
mov
movsl
sti
xor
fistps
scas
cmpsl
insb
jp
stos
iret
cli
bound
mov
mov
scas
and
cmp
in
xor
xchg
jmp
and
sub
mov
repnz
adc
add
push
xchg
stc
out
dec
data16
sub
or
adc
push
fs
mov
dec
test
push
adc
or
push
xlat
test
mov
das
or
sbb
adc
jo
mov
push
lret
in
insb
adc
ret
stc
mov
jle
sub
repnz
xor
or
dec
mov
cmp
sbb
lret
mov
repnz
and
adc
cmc
lahf
cmp
dec
sub
hlt
pop
mov
cld
test
stc
sbb
inc
sti
push
shlb
inc
in
sbb
jmp
sbb
mov
shll
mov
clc
sub
mov
cmpsb
ljmp
inc
shl
push
scas
mov
lods
push
sbb
aad
jae
pop
into
test
sbb
lea
jae
ja
repz
lret
sub
jmp
sbbl
and
push
bound
cltd
jp
xchg
xchg
ret
lcall
jmp
cltd
mov
or
loop
sub
pushf
pop
lods
int3
mov
add
lods
test
stos
sub
enter
xchg
aam
es
mov
insb
push
jno
adc
pop
test
pop
popf
sub
test
sbb
push
inc
outsb
imul
pop
popf
mov
lods
push
mov
es
xor
cmc
mov
push
test
adc
incb
push
fists
add
pop
popa
xlat
test
and
ljmp
mov
pop
lea
mov
xorl
pop
mov
mov
js
adc
mov
jne
sub
loop
fdivl
fstpt
inc
mov
outsw
leave
cs
jbe
addr16
cltd
xorl
xchg
filds
pop
mov
sub
jnp
or
fwait
adc
sbb
mov
iret
cltd
addr16
loopne
test
sbb
push
sub
cmp
inc
mov
pop
sbb
mov
cmpsb
mov
lds
jbe
pushf
mov
bound
addr16
jbe
xor
loop
mov
call
cwtl
dec
mov
push
pushl
xchg
xchg
bound
ljmp
mov
data16
push
out
xor
sub
fisttps
xchg
icebp
js
jns
and
or
cmpsl
cmpsl
xchg
fcomip
adc
lds
mov
fadds
xor
xor
mov
hlt
mov
test
ret
in
inc
lahf
imul
ffreep
call
add
testl
inc
sub
outsl
ret
jbe
push
andb
fisubrs
jmp
adc
mov
imul
sub
sub
stos
sahf
add
adc
push
out
or
fwait
inc
fisttpl
add
imul
dec
inc
or
lcall
cmp
jns
shrb
adc
jle
and
ret
inc
filds
mov
cmp
jl
mov
jno
into
test
cmp
loope
mov
xor
popl
mov
jnp
mov
orb
jmp
and
pop
mov
enter
je
mov
xchg
cmp
stc
inc
outsl
test
dec
test
push
inc
in
bound
jnp
loopne
shll
xchg
es
push
lret
xchg
xchg
test
scas
pop
dec
sbb
aas
sub
sub
dec
jmp
dec
xchg
fistps
lods
addr16
push
out
loope
call
xchg
mov
out
add
mov
xor
stos
add
inc
or
sti
sub
push
std
aaa
add
lods
pop
xor
mov
lods
aad
add
mov
fnstenv
fdivrp
xchg
out
ljmp
cmc
ret
pusha
inc
out
int3
and
sub
mov
sbb
jb
xor
jnp
pop
fmuls
cmp
dec
mov
xchg
adc
mov
mov
jae
pop
test
pop
pusha
cwtl
scas
fisttpll
movsl
sbb
hlt
push
mov
ds
mov
xor
repz
negb
pop
lahf
test
xchg
adc
mov
xchg
adc
mov
outsl
inc
cmpsb
xor
mov
dec
dec
and
sub
cld
jle
pop
xor
aam
fmulp
jge
push
shlb
scas
mov
in
cmp
push
jecxz
iret
inc
ficoms
andl
cli
adc
mov
js
clc
inc
xorb
or
lret
and
je
xchg
and
pop
mov
in
jmp
int
xchg
gs
pop
sbb
push
bound
sub
adc
lret
adc
pop
or
mov
ret
lcall
ficoml
mov
inc
popf
dec
push
push
mov
sti
sub
sub
sub
push
cmpsb
cmpsb
data16
loop
xchg
jno
pop
insl
test
jnp
and
mov
inc
jno
pop
out
mov
addr16
cmc
jno
xor
jne
and
mov
addr16
pop
loop
dec
adc
sarb
jecxz
xor
iret
dec
insb
orl
test
pusha
dec
hlt
inc
push
shl
incl
xor
push
xchg
aad
pop
sub
mov
in
aad
lock
xchg
orb
imul
dec
sahf
mov
lock
sahf
sub
inc
fistpl
sbb
xor
mov
mov
das
shrl
lahf
fisubs
jo
or
xchg
push
inc
xchg
xchg
push
and
jne
in
ror
jge
or
movsl
mov
pop
cmpsl
sar
jno
pop
shll
hlt
shlb
jl
push
xchg
mov
arpl
mov
arpl
daa
pop
or
pop
mov
lods
inc
xchg
je
and
out
lret
add
mov
cmp
cmp
out
test
mov
std
bound
lahf
es
rcrl
idivw
cmp
push
mov
cmc
cmp
out
pop
cmp
aaa
sti
movsl
jmp
mov
sbb
data16
fildl
adc
mov
daa
sti
subb
daa
cmpsl
push
jle
out
addr16
jns
dec
aam
rclb
dec
jge
dec
push
push
mov
dec
pop
cmp
insl
mov
mov
inc
in
int
mov
inc
pop
jp
cs
shll
pop
add
xchg
and
lds
inc
xchg
rorl
jnp
cmc
icebp
lods
pop
lock
xchg
jnp
pusha
repz
loope
ss
test
insb
in
pop
aas
fbld
mov
out
mov
mov
shrb
xchg
xor
xchg
movsl
xor
loopne
cmpb
pop
test
xchg
arpl
jae
fisubrl
cwtl
in
rclb
push
rclb
out
cmp
add
push
mov
pop
in
jg
out
fwait
jecxz
lea
out
push
stos
mov
icebp
int3
add
add
xor
int3
into
xor
shll
xchg
and
or
push
mov
lret
cmp
mov
outsb
inc
inc
lcall
xchg
push
lods
pop
out
lcall
dec
fcmovne
cmp
jmp
cli
popa
inc
or
mov
cltd
adcl
test
imul
mov
enter
lcall
movsl
and
and
test
lcall
lock
or
cs
push
fcoms
sub
jae
orb
outsl
xchg
mov
outsl
pop
xchg
inc
test
dec
mov
xchg
out
imull
rol
mov
or
ret
xor
add
lock
cmp
test
mov
xor
adc
or
or
mov
enter
lods
add
shll
aad
or
mov
fsubrs
adc
pop
adc
pop
mov
ficompl
push
mov
adc
xor
ss
add
test
cs
js
xchg
fstpl
sbb
addr16
fstpl
popa
xchg
jmp
inc
and
push
icebp
xchg
pop
cmpsb
or
std
arpl
imul
cli
and
push
fcmovu
loop
imul
mov
dec
sbb
mov
fsubs
es
scas
imul
jo
outsl
or
aad
test
imul
jnp
subl
mov
ret
cli
pop
pop
pop
push
nop
lret
nop
dec
mov
cmp
out
pop
loope
lea
dec
dec
loopne
or
rol
and
nop
sbb
inc
sti
inc
pop
or
add
mov
mov
stc
mov
push
cltd
cmp
pop
jmp
fwait
jo
test
mov
jp
cwtl
cmp
mov
insl
add
lock
lock
aad
xchg
call
mov
adc
push
lahf
or
jp
jecxz
xor
cmpsb
outsl
mov
adc
icebp
incb
jnp
push
lret
lods
jnp
sub
pop
pusha
mov
push
bound
pop
inc
lahf
mov
fcoms
repnz
stos
sub
hlt
pop
add
or
or
and
popa
xchg
mov
aad
aad
and
sub
push
xchg
dec
jecxz
or
pop
inc
scas
dec
and
loope
and
adc
stos
daa
push
pop
movsl
push
mov
cmp
in
rcll
and
xor
cmp
inc
dec
in
cld
mov
rclb
outsl
xchg
mov
adc
or
jnp
inc
clc
inc
flds
enter
or
mov
insl
mull
jge
stc
negl
xlat
test
movsb
test
or
dec
rclb
pop
insb
sub
pop
and
aas
lea
orl
and
notl
inc
xchg
cmp
movsb
adc
sub
lods
mov
mov
mov
sbb
subl
pop
add
mov
add
xchg
adc
aam
je
inc
dec
call
addb
mov
adc
cs
fsubp
or
and
push
jb
sub
test
mov
icebp
cmpsl
xor
sbb
xchg
cmpsb
pusha
fidivl
scas
pushl
imul
andb
pusha
pop
xor
loope
xchg
sbb
dec
imul
aad
jno
in
jbe
pop
nop
add
int
mov
int3
rcrl
pop
sub
scas
push
jmp
decb
adcl
scas
xor
sub
fstpt
sbb
shlb
lcall
jg
and
xchg
pop
adc
jb
and
xchg
insb
clc
add
bound
ret
push
jecxz
rcll
arpl
push
sbb
sbb
pop
xor
jmp
nop
loopne
push
int3
inc
pop
testb
pop
inc
mov
xchg
push
inc
cs
imul
aad
sbb
xchg
push
js
xchg
popa
daa
or
push
jnp
outsl
dec
push
xchg
add
dec
or
pop
mov
lods
pop
push
mov
inc
nop
jns
cmp
xchg
mov
ret
aam
ljmp
xchg
push
and
pop
repnz
incl
mov
sti
xchg
cli
repz
cltd
test
icebp
cwtl
js
orb
jae
mov
pushf
pushf
outsl
pop
mov
repnz
cld
pop
mov
push
leave
rcrb
clc
les
int
subl
add
scas
lds
mov
push
or
xor
int3
test
lock
mov
pop
dec
push
ljmp
out
sbb
movsb
or
jecxz
and
dec
lret
shlb
sbb
sub
pop
cltd
ds
movsb
fbld
inc
hlt
fidivrl
lcall
push
jge
xor
popa
jmp
int
lahf
rorb
sbb
shl
out
andb
xor
xchg
mov
cmp
data16
xchg
in
stos
cmpl
out
xor
data16
cli
mov
outsb
xchg
mov
add
adc
movzbl
sbb
lock
sub
dec
out
push
xchg
shlb
mov
mov
imul
jmp
fisubl
fsubrl
push
mov
jmp
add
or
sbb
xchg
jb
cs
addr16
fsubl
mov
xchg
lock
xchg
lods
mov
push
mov
cmp
lods
das
pop
out
push
xor
mov
aaa
xchg
mov
adc
sbb
push
int
imul
jmp
repz
inc
cmp
adc
push
stos
rcrl
push
cmpsl
mov
mov
das
fwait
or
sbb
jmp
cmp
pop
and
mov
cmp
add
cmp
ficomps
mov
cmp
inc
fidivrs
jne
fs
jno
mov
fldt
dec
xchg
mov
call
inc
xchg
test
pop
jg
sbb
call
sti
bound
out
pop
rcll
sarb
jl
popf
cmp
popa
or
and
and
fsts
mov
aam
clc
ja
pop
loopne
pusha
lcall
leave
add
mov
mov
sub
leave
cmpsl
in
test
jnp
adc
sub
mov
add
mov
addr16
pop
ficompl
inc
mov
hlt
fucomi
xchg
xor
mov
cmpsb
mov
inc
repz
subb
andb
sarl
pop
pop
or
push
lods
test
push
ljmp
cltd
sub
xor
sbb
add
xchg
pminub
cs
dec
xchg
daa
jge
mov
sar
mov
adc
ret
push
jbe
pop
pop
xchg
dec
sbbl
mov
outsl
das
cmp
pmaxsw
pop
jae
inc
mov
mov
ret
es
movsb
sbb
stos
lock
or
adc
shll
dec
sub
das
dec
lea
dec
sub
and
sbb
xchg
lock
lock
mov
in
frstor
jns
or
outsl
sub
mov
pop
mov
ja
push
xchg
xchg
ret
stc
lds
add
stos
arpl
arpl
cmpsl
xor
ds
repnz
aam
sub
inc
mov
push
sub
dec
xchg
call
or
adc
outsl
mov
std
adc
les
inc
test
test
xlat
clc
cmpsb
in
xlat
push
lcall
pop
or
xor
aas
mov
add
cli
dec
aam
aas
cld
std
sahf
in
mov
lods
xchg
cs
xor
pop
shrl
dec
into
push
arpl
bound
mov
int3
inc
lret
fmuls
jecxz
push
fnstenv
xor
lods
pop
mov
pop
test
pop
roll
daa
movsl
scas
out
jp
jmp
fisubs
outsl
into
pusha
fxam
xchg
cmpsl
add
jp
cmp
int3
notb
xchg
imul
mov
jecxz
fstpl
shl
cli
cmpsl
jne
pop
rorb
xchg
cmpsb
add
xchg
dec
xchg
adc
or
pop
pusha
xchg
fcmovne
or
call
inc
push
push
daa
mov
jnp
pop
adc
call
mov
and
mov
mov
imul
iret
and
popf
cmpsl
cmp
pop
rol
out
repz
aad
push
addr16
roll
xchg
mov
stos
mov
or
lcall
lods
shll
lods
xchg
inc
cmp
mov
aam
std
and
mov
lret
cmp
mov
pop
jo
inc
das
into
aam
mov
mov
cmp
out
pop
mov
or
clc
dec
mov
es
mov
lcall
xor
pop
xchg
js
xchg
inc
enter
xchg
push
or
xorl
inc
nop
ljmp
lods
aad
sbb
mov
mov
sarl
jae
stos
xor
xchg
std
mov
mov
mov
fnstenv
pop
imul
adc
xchg
mov
and
cli
stos
xchg
mov
repz
shl
xchg
leave
add
xchg
sbb
add
imul
pop
add
push
ret
jp
in
cs
loopne
clc
pop
test
div
sahf
aam
int3
lcall
mov
mov
stos
dec
xchg
subb
test
mov
xor
pushf
add
push
divb
ret
xchg
loop
jbe
jno
hlt
xchg
mov
mov
movsl
mov
lcall
ja
sub
fsincos
jbe
in
xor
mov
adc
les
jnp
xor
mov
mov
add
add
inc
jmp
xchg
sub
adc
push
imul
addr16
jl
dec
shrl
arpl
pop
iret
pushf
dec
push
aad
out
sbb
dec
sub
mov
mov
jo
movsb
xchg
insl
lcall
jne
mov
mov
das
out
hlt
cmp
or
and
sbb
add
sarb
xchg
je
mov
or
add
subb
pop
sbb
popf
cmpsb
sub
mov
lods
inc
fisubs
mov
pop
sbbb
cltd
and
cmp
jle
mov
subl
and
pop
cs
or
cmp
sub
jae
mov
arpl
fsubrl
wbinvd
repz
add
js
ret
cmp
add
inc
ljmp
inc
mov
nop
inc
inc
sub
jmp
xchg
sub
jle
shrb
int3
imull
repnz
sbb
inc
pop
repz
cmp
insb
mov
scas
xor
fcomps
testl
cmp
out
fcmovnb
jns
push
pop
adcl
mov
xor
std
scas
fisttps
inc
pop
mov
pop
xchg
movsl
rolb
jns
jo
mov
mov
push
dec
mov
dec
out
lods
and
lods
mov
rcll
mov
pusha
mov
xchg
icebp
movsl
lcall
cmp
int3
push
cmp
inc
in
mov
and
dec
push
pop
leave
leave
popf
or
repnz
cmpsb
les
jb
or
mov
push
and
lods
in
sub
push
jns
jbe
stc
jmp
xor
jbe
mov
xchg
push
and
inc
xor
outsb
adc
insl
mov
mov
pop
jmp
nop
sub
gs
add
cmp
xor
push
xchg
mov
imul
out
pop
xorl
push
roll
insb
xor
pop
jae
mov
pop
inc
jbe
ret
add
mov
nop
dec
addl
add
lock
aam
jp
cli
sub
mov
inc
xchg
cmp
or
sar
mov
stos
outsl
sub
dec
jbe
dec
daa
mov
add
pop
into
insl
push
and
icebp
insl
sub
mov
out
aam
jl
lahf
clc
or
xchg
and
push
xchg
fisttpl
fildl
sub
stos
icebp
mov
lds
sbb
push
pop
add
and
sbbl
sbb
mov
rcl
gs
pop
je
in
mov
enter
popa
jp
enter
arpl
cmc
js
lea
jbe
xchg
arpl
test
mov
xlat
dec
adc
jne
xor
cli
dec
hlt
pop
dec
xchg
mov
addr16
pop
std
and
push
xor
rdmsr
ss
jmp
add
mov
cmpsl
pop
inc
cltd
sbb
mov
push
push
inc
lods
fwait
out
rclb
push
jae
cmpsl
jmp
aad
pusha
inc
mov
dec
ret
mov
jns
aas
mov
cltd
in
mov
adc
pop
int
inc
push
scas
and
das
adc
dec
lcall
add
ds
inc
mov
test
outsl
fidivl
aaa
test
fisttpll
scas
xchg
and
mov
outsb
int
rcl
mov
and
test
xlat
stos
xor
mov
jg
insl
add
xor
add
rolb
pop
js
and
push
and
inc
stc
inc
mov
or
jge
leave
scas
arpl
and
loope
js
lock
mov
push
insb
mov
cmp
mov
xor
jnp
xor
and
loop
loopne
movsl
add
repz
pushl
xchg
cmpsb
adc
push
cs
cmpsl
fstl
es
xlat
test
int
aas
orl
fidivrl
or
jecxz
mov
sub
add
xor
jle
lods
cmpb
add
and
cmp
or
notb
mov
mov
adc
repz
inc
bound
mov
dec
cmpsl
ret
cli
mov
imul
or
popf
popa
jno
cli
lds
loope
les
outsl
inc
pop
and
jl
mov
repnz
jl
sbb
insb
daa
xor
ds
jmp
inc
mov
daa
notl
lcall
shll
pop
icebp
xchg
pop
push
test
and
out
adc
aad
adc
shll
scas
insl
movsb
aad
pusha
mov
clc
adc
mov
es
in
adc
and
clc
dec
stos
jne
addl
pop
jmp
lcall
adc
fsubl
xor
dec
mov
xlat
sub
pop
push
and
cmp
adc
push
inc
mov
pop
inc
jl
leave
adc
adc
push
sub
adc
add
into
jp
add
subb
or
iret
shlb
push
mov
jle
add
ljmp
insl
mov
pop
sub
imul
ret
js
cwtl
dec
add
add
xchg
inc
dec
xchg
sub
shr
ja
cmp
sbb
mov
int
inc
fwait
pop
add
adc
bound
adc
inc
ret
push
push
push
mov
call
out
out
mov
clc
sbb
fidivs
pop
out
lret
or
dec
push
pushf
jae
pop
dec
pop
mov
sbb
sub
ret
outsl
mov
in
lahf
and
add
mov
jecxz
shll
enter
std
shr
mov
fsubl
outsl
jbe
clc
enter
int
gs
dec
mov
pop
test
popf
mov
xchg
gs
mov
mov
xchg
jb
or
xchg
push
fsubrs
jp
mov
xor
xchg
cltd
stos
or
dec
in
insl
das
rorl
fidivl
mov
mov
xor
outsl
ret
fisubs
adc
dec
sub
cs
xchg
sahf
adc
and
push
push
cli
xchg
adc
xor
inc
sahf
enter
mov
inc
aaa
cld
adc
fiadds
mov
hlt
mov
rcr
jecxz
and
inc
es
les
inc
es
inc
xchg
jmp
sub
addr16
aam
and
ret
cmc
pushf
out
es
stos
in
and
js
jb
xchg
sub
lret
inc
xchg
inc
insb
ficoml
das
jge
das
adc
mov
cmpsl
std
in
jne
or
sub
push
test
test
jp
pop
sub
xor
arpl
xchg
arpl
mov
shlb
mov
or
sbb
movsl
sti
xor
adc
inc
push
daa
xor
test
dec
lds
mov
les
mov
leave
mov
add
adc
in
push
hlt
mov
insb
jle
lods
in
int3
jo
rep
lcallw
daa
repz
or
inc
adcb
int3
loopne
stos
ljmp
cmp
sbbb
int
sarl
cmpsb
pop
push
adc
shlb
jae
xchg
mov
in
jle
cld
jge
icebp
dec
jge
test
adc
pop
and
fwait
or
int3
gs
ja
pop
mov
notb
xchg
repz
neg
shrl
imul
or
outsb
jnp
mov
push
sub
insl
xor
jecxz
cmc
dec
inc
fildll
mov
adcb
cli
sbb
in
mov
lret
jo
mov
stos
sbb
loope
sub
jnp
dec
jae
insl
repnz
dec
push
xor
pop
ret
ja
ret
lds
or
jl
jmp
in
aas
push
movsb
les
and
push
mov
sub
mov
pop
fnstcw
and
es
mov
es
push
mov
loop
sti
cmp
mov
xchg
jo
icebp
loopne
jno
mov
pop
pop
cmp
adc
in
fcoml
shll
outsl
jge
clc
pop
dec
movsb
orl
int3
shll
push
lret
push
shl
or
xchg
pop
cld
mov
scas
or
xor
pop
mov
or
xor
or
les
icebp
das
sub
jle
jge
ja
roll
fwait
dec
and
outsl
jnp
orb
test
xchg
adc
int3
mov
je
loope
jmp
inc
jno
arpl
adc
and
push
cmpsl
adc
mov
fs
insl
loopne
out
hlt
cltd
and
push
mov
scas
adc
addr16
mov
jl
push
sbb
pop
or
push
pushf
cmp
push
pop
rorb
stos
in
dec
mov
mov
pop
jno
or
add
jge
inc
sub
sub
pop
and
xchg
xor
in
dec
sub
jno
stos
lods
sbb
pop
cld
sbb
push
movsl
insl
mov
pop
and
push
in
push
js
fld
fimuls
pop
stos
xchg
add
cmp
jae
push
gs
pop
push
push
imul
and
mov
mov
ficoml
fadd
das
nop
pushf
in
mov
pop
cmc
rcrl
pop
insb
mov
pop
pop
adc
adc
push
sub
shlb
sbb
mov
push
adc
ljmp
lods
mov
inc
bound
mov
xor
pop
xor
mov
aam
pop
int
fisttpl
pop
mov
and
or
repz
mov
and
test
jne
jmp
adc
lds
mov
mov
mov
dec
cld
mov
out
aaa
daa
push
shrb
pop
mov
mov
outsb
jl
jp
mov
into
mov
scas
test
clc
movsl
rclb
inc
mov
insb
aas
sub
mov
pop
dec
mov
lea
mov
or
arpl
enter
dec
ror
into
lcallw
jmp
inc
xchg
pop
mov
insl
mov
add
push
faddl
cmp
fidivrs
mov
cmp
jb
divl
sub
mov
shrb
std
mov
sub
lahf
cmpsl
inc
sub
push
or
lds
dec
ds
xchg
cmc
and
out
lods
xchg
push
dec
cld
sbb
in
sub
scas
jecxz
inc
inc
push
das
jp
mov
ret
mov
inc
jp
mov
daa
addr16
pop
sti
jno
cmp
das
icebp
js
xchg
pop
icebp
adc
fwait
mov
inc
adc
adc
rorb
dec
xor
push
xchg
dec
leave
sbb
lods
cmp
push
inc
sub
loope
hlt
mov
es
cmpl
sbb
enter
inc
cmp
lods
aaa
mov
nop
lods
sub
mov
imul
mov
xchg
adc
dec
sti
lret
popf
rcrb
add
adc
jnp
cmpsb
add
mov
dec
cmp
stos
scas
idiv
into
sbb
xchg
lods
fwait
xor
or
addr16
push
mov
les
sti
lds
fs
clc
mov
mov
lcall
push
sbb
ret
adc
dec
loopne
sub
adc
cmc
adc
fists
cmp
xchg
xor
push
pop
icebp
cmp
ja
shrb
sbb
cmp
ret
xor
and
scas
iret
bound
aam
aam
out
or
jmp
jl
out
icebp
push
push
in
xchg
fsubrl
jmp
hlt
jmp
cmp
jp
pushf
stos
push
loope
sub
cmc
push
icebp
shr
std
cmp
fwait
std
sub
cmp
std
or
rcll
sbb
jge
lods
push
cwtl
fiadds
loopne
imull
psrlq
adc
mov
leave
cs
fnstenv
xlat
popf
pop
adc
sub
loop
mov
sbb
xlat
jle
xor
xchg
push
in
inc
lods
xchg
or
and
mov
sub
movsl
or
pusha
outsb
pop
pop
lcall
adc
cmp
pop
cmp
icebp
daa
pop
xor
js
and
cmp
pushf
fistpll
cmp
push
cmp
mov
cs
inc
mov
adc
cs
dec
out
cmc
fbstp
dec
cmc
mov
mov
repnz
fmul
out
icebp
aad
pop
lock
std
adc
mov
mov
adc
xchg
cltd
out
je
jp
andl
xchg
lret
jb
clc
pop
call
out
lret
xchg
add
dec
push
jle
add
pop
pop
sub
cmp
pop
pushf
sahf
mov
xchg
stos
data16
test
xor
pop
out
pop
sbb
pop
sub
incl
arpl
xor
sub
push
es
stc
inc
and
sub
lea
inc
jo
pop
xor
xchg
sub
repz
stos
adc
lret
gs
mov
fstp
js
in
xorb
es
push
pop
ljmp
sahf
mov
xor
and
dec
fs
jmp
pop
or
ja
push
int
mov
movb
cmc
sbb
movsl
cmp
sbb
jns
pop
and
loopne
mov
mov
inc
push
cld
nop
fwait
out
xchg
shrb
out
daa
es
xchg
ljmp
pop
adc
shlb
out
cmp
ret
xor
ljmp
in
scas
mov
inc
jp
test
mov
iret
int3
mov
fsubs
outsb
mov
and
add
mov
sahf
sahf
shrl
add
mov
push
jbe
stc
push
aas
pop
add
pop
stc
repz
push
mov
cmp
aas
xchg
into
insb
push
dec
cltd
jno
and
mov
call
daa
add
inc
sarb
lods
mov
loop
or
jo
sbb
and
cltd
pushf
mov
addr16
sahf
mov
pcmpgtd
push
mov
mov
cmp
mov
flds
mov
mov
sbb
xchg
push
mov
lcall
mov
jmp
xchg
mov
stos
dec
incb
mull
mov
add
jne
jbe
fnstenv
jb
jae
stos
mov
adc
negl
popf
shr
popf
dec
cmc
cmp
movb
adc
sub
aaa
mov
leave
jb
popf
faddl
out
add
and
movsl
shlb
jbe
in
or
jne
lret
loop
fs
lods
out
jg
mov
ja
inc
pop
cmpsl
repz
mov
lret
sbb
adc
jg
stos
scas
jne
push
add
out
adc
or
js
mov
adc
mov
push
sub
cli
sbb
movsb
rcrb
dec
xlat
rcrl
mov
sub
adc
int3
inc
stos
movsb
repnz
in
pusha
andb
dec
pop
add
lods
lock
mov
fldcw
pop
testb
or
add
icebp
nop
xor
push
fs
push
push
jmp
pop
xchg
and
shrb
jbe
pop
lods
aaa
mov
mov
dec
xchg
pop
or
enter
cli
stos
rcr
or
test
jne
mov
lret
and
or
outsb
fsts
sarb
xchg
loop
adc
cmpsb
aad
test
loopne
mov
lret
adc
addb
test
imul
and
lahf
add
jl
xchg
imul
push
pop
sbb
sub
out
mov
xor
jno
ret
inc
mov
test
lock
int
clc
outsb
scas
sub
pop
lret
jecxz
sbb
inc
mov
aad
mov
or
cs
imul
jns
in
and
pop
lock
mov
sbb
mull
test
nop
push
mov
out
div
in
stos
outsl
fcomps
mov
jno
pop
inc
stos
sub
lds
lods
inc
xorb
jb
repnz
je
lds
fadds
mov
sbb
movb
je
push
lahf
lods
jmp
fidivs
sbb
test
jmp
sub
out
or
lret
jnp
dec
test
pop
cmpsb
mov
fcmovne
inc
cmpsb
scas
bts
hlt
idiv
jns
aad
adc
fdivrl
mov
les
rclb
test
jmp
pop
std
out
idiv
lcall
fcmovu
ja
sub
push
and
aad
sub
scas
fsub
xchg
gs
adc
int3
mov
fildl
cli
mov
ljmp
stc
pop
cmp
add
ret
fdiv
push
push
fmull
rclb
jmp
jo
icebp
sub
pop
movsl
andl
test
dec
loopne
dec
jmp
in
jle
rcll
pop
bound
cmp
xor
test
push
loope
dec
jb
xor
mov
jmp
arpl
pop
cmpsb
pop
sbb
push
jns
nop
popf
repnz
insl
pushf
cmpsb
push
jne,pt
or
insb
adc
push
fldcw
pushf
fs
into
mov
mov
sub
xchg
dec
mov
dec
leave
inc
mov
nop
rorl
inc
icebp
arpl
ret
shrl
pop
rorb
mull
xor
mov
pop
jbe
add
int
jae
mov
sbb
aaa
mov
sub
push
test
cmpsb
push
fnstcw
mov
es
adc
in
orl
push
push
jg
rcrb
xor
repz
mov
outsb
xchg
pop
test
call
xchg
test
jg
push
sahf
cwtl
dec
dec
std
add
in
lds
jae
sub
xor
out
fsubs
and
rol
movsb
stos
xlat
jge
into
fcoml
lea
or
shrb
xchg
fimull
stos
movsb
inc
cmp
xchg
sbb
xchg
add
mov
int
push
lcall
cwtl
push
aam
js
xor
loopne
loop
jge
cmc
lret
jl
and
add
pcmpgtb
or
pusha
inc
movsl
fldl
lret
inc
dec
icebp
or
mov
into
nop
rclb
pop
cld
cltd
xchg
popa
call
bt
push
lds
add
in
dec
aas
iret
mov
mov
adc
loop
adc
cmp
sbb
or
push
mov
xchg
xor
mov
jge
pushf
test
setno
adc
jo
lock
xorb
out
xorb
ficompl
outsl
inc
and
xlat
xchg
pop
out
shrl
rol
ds
fdivrl
out
and
dec
mov
or
push
scas
mov
testb
or
out
das
shlb
aaa
mov
sbb
shll
mov
xor
out
push
xorl
adc
xchg
icebp
addb
xchg
lahf
add
add
pop
pop
jae
or
mov
andb
mov
mov
xchg
push
shll
mov
pop
mov
lods
sbb
sub
popf
data16
sub
negl
ljmp
push
jbe
jae
xchg
dec
sbb
xor
mov
cmp
inc
sbb
pop
sbb
nop
movsb
stc
jae
popa
jmp
sar
xor
out
nop
push
sbb
xchg
std
les
je
ss
fwait
push
je
mov
mov
mov
dec
push
je
inc
pop
movsb
mov
pop
mov
jns
je
jns
jecxz
ss
lret
popl
arpl
gs
xchg
push
inc
push
jg
mov
and
cmp
ficomps
nop
test
out
xchg
inc
mov
pop
mov
or
dec
jnp
lcall
fcmovnu
sbb
call
cmpsl
mov
lods
flds
push
rcll
pop
mov
fs
cmp
mov
ret
add
mov
inc
dec
ljmp
xlat
mov
insl
std
dec
inc
jbe
popf
insl
loope
clc
pusha
add
sub
ror
pop
out
jnp
and
mov
jae
sti
stc
inc
push
aad
icebp
test
out
mov
dec
pop
cld
push
cmpl
fcoml
hlt
mov
xchg
jbe
stc
hlt
pop
fidivs
mov
pop
jecxz
push
jge
fsubs
adc
movsb
xchg
and
dec
cmp
lods
xchg
sub
xchg
sub
jo
push
mov
in
jns
not
cltd
ss
into
jecxz
lahf
andb
xchg
repnz
sub
xchg
lahf
xchg
repnz
repnz
or
pop
xchg
cmpsb
ds
and
jnp
fldt
push
push
sahf
loopne
loop
aas
repz
push
popf
in
xor
mov
push
lcall
adc
gs
push
dec
adc
in
sub
inc
add
fcompl
push
cwtl
dec
push
stos
cmp
mov
pop
cwtl
add
into
aam
push
or
cwtl
and
dec
faddl
add
jno
data16
cmc
push
fadds
subl
shlb
nop
leave
xchg
outsl
xchg
add
das
jbe
sub
dec
pop
adc
enter
inc
stos
lahf
lods
das
xor
imulb
pop
mov
adc
andl
adc
xchg
cli
push
addr16
sub
data16
xchg
dec
lock
xorb
fincstp
xlat
adcl
xchg
push
loopne
das
dec
push
mov
push
pop
stos
sub
push
xchg
and
nop
lds
sbb
jmp
dec
push
repnz
inc
fadds
testb
popl
sbbl
or
divb
ljmp
mov
mov
jl
sub
or
test
aaa
out
inc
push
vpcomgtud
dec
add
inc
xchg
fst
push
hlt
mov
outsl
xor
mov
jo
sbb
cmovg
sbb
js
daa
stos
insb
js
mov
mov
insl
pop
lods
sub
cli
xor
js
and
sbbb
shlb
shlb
sbb
enter
fadd
jle
and
jnp
loop
or
into
out
pop
sub
test
jl
aas
xor
mov
and
xchg
lret
push
xor
test
pop
out
lds
into
jbe
sub
add
push
popa
cmp
shlb
mov
inc
clc
sub
inc
movsl
jmp
int3
push
rcrl
popa
mov
cmp
test
lcall
dec
mov
mov
pusha
call
insb
aad
inc
ss
movsl
xchg
sbb
mov
leave
xchg
cli
mov
sub
paddsb
adc
adc
mov
push
mov
mov
mov
lret
ljmp
cmc
mov
loope
lret
inc
jbe
out
mov
bound
jg
sarl
std
lods
sahf
loopne
xor
ficomps
sbb
jmp
or
and
js
mov
icebp
sbb
xor
mov
xor
mov
inc
jb
pusha
pop
cmp
mov
cmp
call
test
ror
or
outsl
js
stc
ja
dec
test
or
and
std
jmp
out
xor
pop
mov
jb
xor
push
adc
jno
xor
loope
adc
dec
test
pop
push
aaa
push
pop
dec
sbbl
dec
inc
repnz
loopne
mov
stc
movsb
inc
fucomp
mov
out
mov
pop
push
xchg
addr16
adc
adc
clc
das
xchg
sub
in
cli
mov
jae
fnstenv
cli
or
subb
lahf
out
ds
jno
or
sbb
xor
imul
xchg
push
je
sub
mov
call
dec
jae
lea
daa
cmp
cmp
mov
cmp
outsb
mov
mov
fdivs
fcomp
and
and
leave
mov
xchg
jbe
ds
push
fdivs
test
add
into
mov
add
cld
or
pop
push
jno
xchg
pop
les
mov
mov
mov
cli
sub
ds
xchg
mov
push
clc
xchg
rcll
adcl
scas
mov
xchg
mov
repnz
xchg
cwtl
mov
xchg
les
adc
sub
mov
je
outsl
push
hlt
and
rolb
sbbb
hlt
pop
sbb
mov
jmp
in
cmp
sub
fucomip
xchg
sbb
jg
mov
pop
dec
push
clc
add
in
clc
mov
cmp
xchg
pop
add
and
ja
adc
and
mov
xor
push
out
adc
imul
pop
ret
and
mov
gs
cmp
mov
mov
push
repnz
andb
lret
jecxz
aad
xchg
mov
rcr
push
mov
in
stos
mov
mov
add
andl
fnstsw
pop
test
ds
and
jno
repz
inc
cld
xchg
into
or
push
stc
iret
popf
push
fistl
mov
outsb
xor
rcrb
push
mov
mov
push
push
movsl
jp
shll
leave
sub
fstpl
loope
das
xlat
inc
imul
pop
sti
mov
xchg
lock
in
gs
mov
addl
jecxz
in
mov
ljmp
outsl
jp
mov
jecxz
push
rcrb
idiv
std
push
jp
push
pushf
push
mov
sub
jg
outsb
fldcw
push
loopne
or
adc
mov
mov
sbb
or
aaa
mov
shrb
cltd
push
in
frstor
push
movsb
add
icebp
fimull
pop
jno
adc
push
mov
push
nop
fdivr
in
das
nop
fldl
nop
lods
jg
lods
pop
insl
xorl
xor
pop
ljmp
pop
ficoms
dec
fidivl
cli
les
cmpsl
das
jno
jb
mov
andl
add
scas
dec
bound
push
and
or
jmp
xchg
mov
outsb
mov
outsb
test
xchg
dec
adc
lock
into
cmpsl
mov
movsb
sti
ds
add
insb
unpckhps
and
or
cli
repnz
pop
xor
pop
and
rcl
pushl
xor
xor
gs
iret
pop
enter
and
adc
jnp
and
idivl
mov
xorb
add
jge
cmpsb
cwtl
pushf
test
sarl
hlt
cwtl
or
cli
jmp
push
arpl
inc
pop
sub
addb
in
jo
pop
jmpw
pop
xchg
push
mov
add
push
jbe
stos
je
faddl
pop
dec
inc
mov
mov
cltd
jp
and
dec
push
outsl
mov
push
add
and
clc
cltd
or
fs
mov
hlt
daa
das
gs
or
jb
js
ja
add
pop
in
dec
fstl
sub
or
popa
sub
shrl
data16
dec
cltd
push
sub
rclb
inc
imul
add
inc
xor
adcl
inc
jmp
insl
movsl
rcll
fnstsw
mov
ja
jle
xor
xchg
outsl
rclb
divl
in
push
nop
loop
cwtl
lret
hlt
jb
inc
mov
pop
inc
sbbb
mov
cmp
jl
mov
loope
iret
sub
fimull
mov
push
lret
loop
loop
fs
mov
gs
cld
ss
xor
out
or
mov
fidivrs
mov
mov
mov
pop
lahf
sub
jns
cmpsb
cwtl
jge
jecxz
adc
popa
mov
cmp
mov
scas
es
or
dec
rorl
or
mov
mov
fisttpl
shll
cmp
mov
mov
and
sbb
arpl
mov
or
pop
pop
jl
xchg
cmp
xchg
in
insl
xchg
jo
in
pop
fsubs
movl
lods
lret
jns
outsb
lahf
addl
pop
mov
sub
add
in
lods
sbb
adc
and
mov
sbb
ret
sbb
movsb
ficoml
int3
sub
push
adc
shlb
add
mov
not
loope
incb
cltd
xor
stc
fcoml
loopne
jno
rcll
mov
push
push
pop
push
popa
adc
pop
mov
xor
inc
dec
adc
test
aaa
outsl
in
out
sub
add
lds
jmp
sub
popa
int3
setp
aas
cmpsb
push
jae
mov
sbb
pop
add
test
jmp
mov
inc
fimuls
pop
test
lahf
lahf
sbb
inc
pop
popf
les
ss
sub
push
leave
and
icebp
and
icebp
outsb
xlat
inc
loopne
setle
movl
subb
outsl
jp
sbb
mov
outsl
mov
cmc
xlat
push
orb
shll
ficoms
ret
sbb
outsb
mov
inc
inc
pushf
adc
lret
sbb
mov
je
lds
mov
in
jg
pop
popf
mov
dec
jne
adc
ret
cltd
sahf
adc
mov
mov
jp
adc
sbb
fsubs
sahf
outsb
ss
std
and
lcall
and
and
enter
jmp
movsl
out
xchg
cmp
lods
and
int3
pusha
out
cli
jbe
shl
incb
push
gs
lea
pusha
in
jb
dec
xor
aad
jno
xor
push
lods
and
inc
xor
xchg
pop
inc
fldl
add
and
cmp
xor
stos
imul
jnp
test
cmc
mov
daa
hlt
dec
cmp
enter
pop
ret
ss
ljmp
popa
pop
xchg
lret
adc
ja
int3
enter
mov
fbld
push
adc
mov
and
out
int
js
xor
sub
sti
xchg
cmp
aas
cmp
lahf
xchg
cmp
std
dec
call
sbb
sahf
out
aam
push
dec
inc
xchg
les
jle
adc
jge
dec
jmp
pop
ss
cmp
cmpsb
inc
fisttpl
mov
and
in
stc
test
pusha
xor
mov
loope
xor
xchg
pop
sub
or
xorb
mov
push
push
xchg
xchg
push
ja
mov
and
repnz
lock
jnp
cwtl
push
aad
pop
and
push
shrb
xor
enter
jp
enter
outsl
jne
lock
sub
mov
and
or
or
and
nop
addr16
push
repz
or
xor
icebp
loop
lods
mov
lods
mov
cmp
sub
sub
sub
negb
xor
mov
jno
inc
pop
push
pop
sub
gs
js
pop
xor
and
mov
cmp
mov
lret
add
push
cmpsl
xor
pop
aaa
dec
fnstcw
or
jo
ja
push
jl
adc
mov
jmp
bound
inc
ljmp
jnp
sub
or
int3
pop
add
cmc
arpl
mov
movsl
pop
adc
adc
xchg
mov
inc
sub
add
xor
mov
cmp
push
lds
insl
mov
sub
shll
lret
outsb
add
scas
sbb
mov
pop
je
mov
cmpsl
sbb
xchg
iret
xchg
fsub
mov
sub
scas
lret
add
hlt
push
sub
sbb
repnz
leave
sub
aad
push
mov
mov
sbb
ja
movsl
push
inc
and
repz
cwtl
pop
je
add
cmp
xor
in
cltd
push
int3
out
dec
dec
xchg
push
or
shrl
pop
pop
xchg
xlat
addb
inc
jns
push
inc
push
cmp
in
push
mov
stc
jge
in
lods
stc
xor
xchg
cld
xchg
es
xlat
add
mov
mov
mov
hlt
in
mov
loopew
mov
jne
cmc
mov
xor
xchg
xor
xchg
pop
hlt
add
inc
out
inc
add
loop
sarb
and
jmp
leave
mov
ret
or
lea
rcr
insl
and
fcomps
mov
mov
push
add
push
pop
push
scas
mov
mov
movsb
mov
in
jl
decl
mov
jecxz
andb
sahf
scas
mov
push
movsl
fstpl
jnp
jl
jg
mov
decb
dec
or
int
cmc
xor
xor
dec
mov
push
std
bound
fcoml
out
pop
rcr
jbe,pt
mov
int3
xorb
mov
sub
mov
push
cmp
fdivr
push
nop
xor
pop
cmp
out
mov
jo
ja
ljmp
mov
fsubr
nop
in
xchg
loop
dec
add
xchg
cmp
arpl
xchg
rorb
pop
push
into
jge
incb
or
das
imul
mov
test
and
xor
out
jmp
and
push
std
and
push
dec
sub
sbb
mov
xchg
int3
xchg
pop
jne
and
mov
jne
daa
push
sbb
lds
or
bound
divb
int3
jecxz
dec
sub
xor
mov
sarb
gs
pop
mov
int3
shl
test
sarb
ds
mov
push
and
sbb
ret
mov
std
lods
pusha
aas
cwtl
jle
data16
adc
jae
sub
mov
mov
adc
cmpsl
jmp
push
popf
and
pop
in
xor
xchg
xchg
jle
stos
call
mov
push
mov
adc
mulb
hlt
aaa
jb
popa
pusha
dec
gs
pop
pop
push
stos
cli
xor
fscale
bnd
adc
bound
shrb
jp
and
sbb
xor
in
or
sub
push
xor
sbb
lods
mov
xor
outsb
and
cs
pushf
push
test
pop
jge
add
jl
dec
pop
and
mov
daa
fnsave
les
je
shlb
pop
movsb
dec
cmp
lcall
jle
mov
and
es
and
add
jge
jnp
cld
lock
jmp
repz
push
inc
cmp
fwait
xor
ret
pop
fwait
inc
aaa
mov
xchg
sub
jnp
int
jg
ljmp
push
mov
pop
mull
or
lock
adc
in
adc
out
negb
or
out
jecxz
imul
pop
jp
test
fdivrp
aas
sbb
push
mov
sub
ss
pop
inc
fisttpl
enter
mov
inc
std
mov
add
or
xor
sti
fst
or
bound
gs
pusha
cld
pushf
push
add
enter
sti
outsl
sub
xchg
push
sub
cld
pop
lea
jo
push
mov
sbb
cmp
orb
and
lds
imul
cmp
xchg
scas
cmp
into
mov
in
mov
test
xchg
and
stos
or
mov
xchg
sub
repnz
aaa
out
cmc
aaa
mov
insl
popa
out
xchg
iret
shrl
jge
dec
loope
fisubrs
ret
aas
fists
xor
inc
jmp
stc
add
cmpsb
addr16
sbb
fnstsw
jmp
push
movsb
imul
ret
loopne
filds
fistps
push
xchg
dec
dec
xchg
xchg
mov
cmc
orb
loope
mov
mov
cld
xchg
jns
or
push
fdivrl
imul
stc
xor
insl
fbstp
hlt
lods
ror
push
pop
xor
adc
pop
int
sub
adc
or
inc
fistps
pop
imul
enter
pop
stos
mov
adc
adc
push
int3
dec
out
shll
in
repnz
mov
mov
lcall
and
dec
data16
sahf
xchg
es
inc
push
jge
addr16
data16
lea
add
mov
xchg
mov
inc
movsbl
xchg
enter
or
imul
and
dec
sarl
enter
andb
ror
mov
aam
leave
sbb
cmp
mov
inc
cmpb
and
xchg
popa
arpl
les
add
outsb
stos
out
pop
rcll
imul
adc
mov
adc
mov
enter
add
pushf
inc
cmpsb
xchg
and
push
jbe
fsubs
dec
les
dec
popf
adc
in
jl
push
pusha
mov
jg
stos
add
ret
lods
mov
lcall
xchg
daa
xor
pop
sbb
push
rolb
loopne
out
dec
popf
test
mov
and
leave
push
outsb
cld
ds
fdivl
or
jns
mov
pop
mov
xor
pop
and
mov
stos
pop
out
daa
push
in
test
add
or
jp
cmp
hlt
shlb
in
xchg
xor
and
lods
sub
daa
jg
dec
mov
hlt
bound
sarb
add
mov
mov
mov
push
test
xchg
lcall
ljmp
loopne
xor
sbb
mov
xor
out
jecxz
sub
aas
arpl
bound
divb
xor
cmp
and
movsb
sbbl
xor
jecxz
pusha
decl
and
adc
dec
insb
popa
adc
xor
sbb
or
cmp
xor
add
cld
shl
fstpl
out
mov
and
pop
loopne
cmpb
leave
cld
je
bswap
insl
add
jecxz
sub
enter
and
nop
push
icebp
mov
test
cmc
repnz
das
stos
fstpl
frstor
adc
push
frstor
inc
shl
mov
jge
mov
pop
jns
pop
push
cs
adc
fcmovnu
lock
jle
push
mov
in
cli
mov
push
repz
mov
js
xchg
dec
and
aas
sbb
and
adc
movsl
push
sbb
repnz
xchg
lcall
mov
repz
mov
lds
mov
sbb
lods
add
cmpsl
iret
mov
push
daa
xchg
das
iret
addr16
push
adc
int3
xchg
inc
or
in
and
inc
out
mov
sub
push
xor
cmp
mov
pushf
fwait
pop
mov
push
shr
mov
lds
jo
cmpsl
clc
or
adc
cmpsb
test
xchg
jge
jge
jno
cmp
notb
or
jmp
arpl
sbb
or
andb
jns
cld
pop
mov
jnp
adc
sbb
xlat
das
mov
lahf
arpl
inc
dec
lods
mov
push
and
mov
ljmp
aad
jmp
outsb
rol
mov
out
mov
add
push
mov
jl
test
jmp
pop
andb
lahf
clc
ret
push
dec
add
cltd
or
or
inc
mov
jns
fadd
jmp
stc
inc
adc
stos
jmp
mov
or
ja
into
jle
outsl
outsl
sbb
jns
out
xchg
xor
xchg
enter
xchg
or
mov
shrl
notb
jno
fcmovne
subl
dec
lea
push
xchg
fldcw
jb
insb
dec
mov
jo
jne
sub
test
add
addps
shrl
bound
jge
pop
out
int
mov
pop
jmp
sbb
or
jnp
das
mov
fwait
movsb
stos
out
ljmp
sar
sahf
inc
je
je
push
and
push
mov
dec
mov
cwtl
je
decl
push
sbb
push
fisttps
repnz
push
rorl
clc
or
and
mov
or
push
adc
push
sub
dec
data16
mov
mov
mov
jns
inc
and
sbb
jg
and
add
sbb
xor
mov
mov
sbb
test
or
std
cmp
xor
push
fstp
xor
mov
lcall
push
out
push
adc
setae
push
push
push
or
jle
cmp
fwait
rclb
adc
lods
in
mov
push
sarl
cmc
repnz
arpl
test
nop
daa
dec
push
or
test
hlt
test
popf
add
inc
fs
and
jl
lods
xchg
mov
sbb
aaa
into
jecxz
sahf
push
mov
das
stos
sub
in
test
adc
xor
push
xor
sarb
jns
push
jmp
cmpsb
cmp
clc
mov
cmp
mov
pop
sbb
xchg
cmp
das
jno
aaa
inc
les
mov
testb
dec
mov
in
inc
cmp
mov
cmp
sahf
sub
xor
xor
inc
xchg
mov
aaa
push
jp
pop
mov
inc
stos
not
xor
jae
or
shrl
jno
enter
hlt
fists
add
or
adc
rcll
add
fdivr
xchg
mov
enter
push
cmp
out
push
pop
leave
cmp
xchg
push
movsb
lcall
es
jae
sub
dec
mov
xor
mov
xor
clc
sbb
xchg
push
xor
push
gs
dec
ret
test
jns
or
and
xor
test
icebp
pop
insb
shrl
jl
aaa
rorb
ror
lcall
pop
loopne
test
cltd
mov
outsb
ja
rsm
loope
dec
push
sbb
fs
push
mov
pop
xor
pop
sbb
rorb
es
pop
jbe
cld
ds
jg
dec
mov
stos
dec
pop
dec
insl
rcr
inc
sbb
xor
add
mov
int
stos
push
daa
jle
lcall
or
mov
adc
xlat
test
mov
pop
js
sub
jg
pop
shlb
sub
hlt
out
pop
jp
xor
xor
mov
ljmp
shll
and
imul
cltd
mov
xchg
jmp
add
mov
aas
sbb
pop
push
dec
dec
js
insl
fmuls
inc
pop
and
daa
sti
std
rcrb
fldl
cmpsb
lock
sbb
jo
mov
rol
iret
jl
iret
adc
jg
push
test
mov
jmp
push
and
or
mov
sub
pop
aam
sub
jbe
in
mov
test
mov
filds
push
paddusw
push
xchg
push
sub
data16
jo
xchg
hlt
sbb
in
or
arpl
sub
pop
cmp
add
aam
push
add
ret
test
test
mov
jl
fldt
cltd
add
loop
sbb
xor
sahf
test
mov
cmp
mulb
enter
or
or
fcmovnu
mov
xchg
popf
cmp
cmp
popf
lcall
and
xchg
test
scas
mov
das
lods
push
ds
jge
pop
add
call
lock
adc
xchg
sbb
insl
add
mov
sbb
enter
ss
or
pop
imul
or
xchg
push
mov
cmpsl
cmp
insb
add
inc
mov
stos
aad
jle
dec
push
pop
xor
loopne
pop
popf
jnp
jnp
pop
fldl
sbb
test
cli
inc
xchg
ljmp
imul
mov
jle
pop
inc
cld
adc
and
scas
rcr
xchg
inc
pop
adc
mov
dec
fdivl
and
in
insb
mov
out
nop
ljmp
leave
push
xor
lock
mov
repnz
popf
jo
fsubr
push
adc
pop
add
shrl
push
cld
or
and
imul
xor
in
loopne
jnp
sub
insl
mov
adc
fiaddl
mov
sbb
lock
mov
jle
into
test
and
inc
ja
psubq
mov
int3
das
sub
in
mov
xchg
and
push
or
push
xor
ja,pn
pop
in
cmp
jg
and
imul
and
mov
mov
xor
dec
add
adc
add
xchg
sub
xor
dec
shl
std
daa
or
pusha
mov
push
lock
or
xorl
pop
adc
add
xchg
push
xchg
out
repnz
push
rorb
xchg
or
sub
cltd
sarb
dec
sbb
fdivr
ds
jbe
outsb
sbb
lret
sub
popa
mov
jae
rorl
mov
jmp
push
mov
mov
inc
scas
bound
mov
shl
dec
call
xor
push
sub
lods
ljmp
popf
push
dec
inc
add
sbb
jne
int
sub
push
push
dec
inc
ds
mov
or
xor
testl
xor
mov
fs
lahf
cmp
mov
imul
push
cmp
fwait
in
or
sbb
cmc
call
std
movsl
and
push
or
pop
sahf
push
xchg
test
stc
xchg
out
and
push
sbb
jl
or
pop
ja
cli
xor
int
or
stos
mov
out
jge
lea
ja
sub
inc
loop
cmc
ja
and
mov
push
jne
in
sbb
jmp
das
bound
push
int
pop
fwait
cmp
dec
ds
sub
lods
enter
sarl
std
inc
and
jp
mov
add
js
jge
mov
pop
pop
mov
sarl
dec
cmpsl
prefetch
or
jge
imul
add
aas
mov
in
shlb
js
pop
cmpsb
mov
dec
or
mov
push
movsb
sbb
test
adc
test
dec
iret
ret
and
inc
dec
dec
adc
hlt
and
xchg
or
insb
sbb
movsb
mov
out
inc
inc
leave
not
push
std
pop
dec
mov
pop
inc
sbb
nop
mov
add
cmp
out
cmp
jg
pop
add
jbe
adc
or
jmp
fidivs
adc
xchg
and
pushl
out
test
push
out
lock
jge
pop
mov
and
mov
add
call
pop
popf
cmp
add
mov
stos
mov
cmc
lahf
clc
mov
pop
hlt
sbbb
in
mov
mov
push
push
add
sub
iret
inc
fldenv
clc
fsts
ds
mov
incl
inc
and
mul
mov
adc
mov
push
xchg
pop
dec
dec
mov
shr
outsl
xor
mov
xchg
in
test
nop
mov
mov
mov
dec
jg
sbb
enter
lods
lret
xor
adc
push
add
push
dec
and
sbb
adc
inc
xchg
test
pop
adc
lcall
push
iret
fs
inc
xchg
fildll
and
cs
clc
out
push
fwait
sbbb
ret
cld
addl
push
cld
jle
add
lea
inc
lods
hlt
cmp
mov
xchg
pop
out
dec
xchg
imul
ds
mov
aam
add
cmp
out
ljmp
xor
les
push
out
sbb
daa
push
cmpsl
xor
dec
push
mov
mov
ret
ror
repz
xchg
aam
fwait
cwtl
loopne
out
or
cmp
add
ds
mov
xchg
call
arpl
or
lods
out
sbb
and
mov
xchg
sahf
inc
les
xor
xchg
daa
push
dec
inc
mov
adc
hlt
popa
mov
repz
outsb
pop
es
adc
inc
pushf
addb
add
sbb
scas
cmp
xor
stos
cltd
push
rcr
or
cmpsb
or
jo
shlb
test
or
aaa
fistpll
insb
into
and
push
cmp
inc
repz
lahf
shl
inc
movsb
in
mov
clc
aad
int3
or
fwait
adc
mov
fsubrs
dec
pushf
jp
out
jae
bound
outsb
loopne
bound
mov
dec
aas
jg
jl
les
movsl
jne
and
mov
in
push
mov
jae
imul
pop
push
mov
shll
aas
jg
ficompl
test
repz
lods
pop
sub
pop
aaa
data16
ljmp
mov
dec
xchg
push
add
insb
cmp
fldl
push
mov
clc
dec
mov
loopne
movsl
sub
mov
sbbl
aas
cltd
aaa
inc
mov
in
ret
mov
inc
and
rclb
iret
adc
sbb
xor
js
shl
bound
and
mov
jnp
aas
pop
popa
cld
mov
pop
mov
test
mov
rorl
fcomps
cmpsl
out
jbe
stc
pop
int
nop
pop
sbb
mov
sahf
stos
jg
sbb
jg
push
push
mov
out
sbb
jecxz
lret
mov
jo
lret
sub
out
out
ds
mov
test
daa
shr
pop
bound
je
jbe
test
push
aad
mov
pop
in
push
push
mov
fldt
leave
test
loop
dec
mov
or
fcomps
pop
test
jl
inc
jge
inc
lcall
add
inc
sub
test
out
add
mov
mov
les
mov
xchg
pushf
sarb
lods
adc
push
ret
inc
out
stc
mov
nop
xchg
sub
xchg
dec
cmp
or
mov
outsl
jge
clc
mov
cmp
movsl
int3
aaa
cli
sub
js
mov
cs
test
or
lock
jno
fucomip
dec
add
xor
lahf
negl
mov
fwait
push
xor
lods
xchg
lods
icebp
mov
scas
pop
cmpsl
les
inc
fdivl
fdivr
sub
pusha
mov
jne
mov
jne
dec
test
pop
or
fwait
xchg
jecxz
ljmp
xchg
xchg
cmp
jecxz
dec
leave
repz
cmp
inc
mov
pop
jl
add
cmp
dec
ljmp
dec
fidivs
testb
xor
popf
ja
push
push
cli
xor
pop
lahf
movsl
cmc
clc
and
clc
mov
or
or
xlat
push
rcr
mov
std
cwtl
fidivs
cli
pop
lods
cwtl
sbb
and
fwait
pop
push
jae
pop
inc
fisubrs
add
cmp
pop
movsl
and
inc
subl
daa
push
loopne
cmp
outsb
inc
loop
out
or
cmp
push
insb
loopne
sarl
jg
pop
jmp
daa
test
icebp
out
mov
int
cmp
and
lock
repnz
dec
es
shll
dec
lods
and
aam
icebp
add
and
jge
mov
ja
jg
mov
fwait
outsb
icebp
cmp
push
or
sbb
and
nop
jbe
in
and
out
sahf
dec
or
pop
push
xor
fcompl
mov
ret
add
ret
aam
sub
sub
add
mov
pop
pop
imul
lea
aam
aam
movsb
inc
das
movsb
pop
fbstp
xor
and
and
mov
push
xchg
daa
add
rcrl
stc
dec
outsb
loope
cs
test
cmpsb
in
xor
pop
imul
lea
sub
pop
repnz
xchg
and
cli
dec
push
add
test
lds
cmc
leave
lock
and
mov
inc
int
lods
jecxz
lods
outsl
pop
cmpb
imul
fidivrs
insb
std
add
lahf
xchg
adc
test
and
pushf
jge
shl
movsl
shlb
inc
mov
arpl
aad
xor
pop
je
sub
dec
js
fsubr
rolb
test
call
ds
in
leave
lahf
lcall
xchg
es
popf
mov
ret
push
adc
out
movsb
dec
mov
push
xchg
int
out
pushl
push
repnz
mov
ljmp
push
les
cwtl
mov
mov
out
sbb
test
add
push
outsb
xchg
cmpsb
mov
mov
ljmp
add
xchg
fmul
push
or
in
lock
movsb
cmp
cmp
das
pop
scas
lods
mov
mov
pop
jne
cmpsb
push
add
rcr
xor
sbb
inc
enter
pop
push
xchg
into
cmp
push
add
sahf
js
push
arpl
ret
mov
cmpsl
test
movl
mov
fmul
jge
fcom
sub
aas
shrl
sbb
dec
int
ljmp
add
dec
jb
mov
outsl
addb
out
inc
andl
mov
jae
jg
add
sbb
fldt
dec
push
jae
sub
testb
mulb
jmp
fisubrs
cmp
jl
sbb
sahf
insb
adc
push
outsl
sub
pop
in
sbb
insl
mov
adc
jl
lock
adcl
mov
pop
mov
push
push
mov
ret
scas
xchg
push
adc
sub
adc
pop
dec
pop
subl
mov
mov
inc
mov
ficoml
xchg
add
shll
out
pop
orl
push
lret
fadds
push
jge
add
test
jb
cmp
jb
fcmovnb
lret
push
jl
fucom
repnz
leave
cmp
ss
adc
rorb
cmp
in
jge
push
psubq
adc
mov
push
insl
adc
jno
inc
insl
test
inc
decl
xchg
orb
fildl
mov
stos
dec
fmuls
int
and
loop
cmp
push
lock
push
mov
or
movsl
insl
add
mov
mov
pop
into
shl
xor
in
test
adc
or
test
dec
sbb
cltd
inc
jp
in
dec
out
out
inc
ret
popa
loopne
addr16
sub
bound
fs
pushf
xchg
mov
dec
xor
mov
inc
pusha
xchg
les
call
cmpsl
pop
cltd
cmovge
pop
out
fcomps
cld
incb
frstor
dec
jp
mov
fcoms
hlt
mov
cmpsb
jae
push
xchg
mov
mov
test
fidivs
mov
in
out
insb
loopne
int3
push
cmpsl
mov
idivl
loope
ds
cmp
outsl
mov
jle
mov
daa
lock
mov
loop
mov
xor
in
and
gs
dec
fs
js
out
mov
push
cmc
lret
push
cmpsb
bound
add
push
sbb
jnp
mov
scas
lock
xchg
int
fistpll
or
mov
cmc
in
adc
lcall
aaa
xor
or
outsl
add
pushf
rorb
les
repnz
pushf
or
ss
push
dec
sub
daa
mov
stos
fbstp
out
roll
sbb
lret
call
mov
jl
enter
mov
scas
sbb
cmpsb
repz
into
mov
lret
test
cmp
xor
xchg
cwtl
ja
cs
es
cmp
les
pusha
cmp
dec
add
xor
mov
out
jbe
test
leave
int3
loop
pop
repnz
movsb
mov
loopne
outsl
push
insl
mov
adc
pop
fidivs
les
adc
jl
mov
sub
pusha
pop
mov
cmp
xchg
nop
push
sub
push
inc
adc
sub
das
jo
bound
cmc
movsb
mov
inc
repnz
test
cwtl
pop
mov
jne
ljmp
mov
int3
dec
repnz
test
mov
sbb
mov
inc
rcll
mov
icebp
and
out
pusha
mov
rclb
and
fs
jp
int
dec
jmp
xor
mov
loopne
pop
ret
jo
je
in
testl
ret
mov
mov
dec
loop
jnp
pop
and
stos
loope
rorb
push
in
adcl
sub
cmp
xlat
mov
sti
cmpsl
mov
inc
xor
mov
sub
movsl
and
out
es
jl
adc
and
or
jnp
xchg
sti
mov
cli
mov
dec
cmp
mov
xlat
pop
test
xchg
mov
repz
lret
push
mov
mov
cmc
sti
int3
jbe
xor
dec
jle
sbb
jl
add
push
vdivss
push
imul
xor
xchg
out
inc
jmp
out
stos
lods
jno
and
call
test
add
push
xchg
push
popf
jl
cmpsl
nop
or
xchg
mov
dec
aaa
daa
outsl
pushf
loopne
popf
cwtl
xchg
pop
jge
adcb
incl
fidivrl
dec
xor
dec
mov
das
pop
test
xorb
and
test
lock
pop
lret
sub
inc
add
mov
mov
dec
lods
stos
jns
jl
cmpsb
mov
and
dec
jle
int
mov
sahf
jne
cs
mov
adc
sub
loope
jb
inc
dec
xor
aad
fmull
jne
fwait
jp
mov
dec
repz
in
push
pop
data16
dec
pop
adc
leave
mov
mov
lock
sbb
out
mov
mov
lds
push
dec
cmc
xchg
ss
mov
lahf
fsubrs
bound
push
movsl
lods
add
lds
psrlq
adc
mov
scas
push
jmp
dec
xchg
jl
ja
nop
ret
mov
das
ds
adc
mov
rorb
subl
xchg
imul
ss
push
lea
pop
and
decb
fwait
cltd
les
pop
les
shr
inc
pop
stos
and
inc
mov
and
mov
dec
fs
andl
repz
into
test
sahf
iret
mov
sub
stos
lods
rclb
mov
mov
iret
dec
in
das
sti
pop
test
lea
and
cmp
sub
sbb
jecxz
dec
jp
mov
cmovnp
jg
pushf
aam
in
daa
sbb
jns
jb
cmpb
sti
clc
push
mov
push
daa
sbb
mov
dec
hlt
jno
cld
stc
add
pop
jo
adc
stc
loopne
shll
pop
jp
xor
ja
jle
and
test
dec
jne
jl
out
mov
mov
mov
sbb
push
xorb
mov
lods
cli
mov
rcr
int3
scas
jb
pop
cmp
cli
pushf
or
or
lcall
dec
xchg
aas
add
fdivs
sbb
ss
orb
nop
sub
imull
or
movsb
rorl
cmp
pop
add
mov
ja
das
fisubs
cmpb
inc
jg,pn
pop
std
mov
int
jns
jb
in
cmp
inc
dec
cmpsl
xchg
dec
popf
mov
arpl
sub
xchg
lcall
mov
xor
push
pop
mov
ss
cltd
xchg
loope
mov
arpl
add
cwtl
idivl
xchg
jbe
jns
cmpsl
fxch
mov
and
sbb
or
pop
sub
mov
pop
xchg
jo
hlt
sbb
in
add
out
jnp
xor
sub
es
les
stos
mov
push
adc
sti
dec
dec
lahf
es
dec
pop
test
dec
xor
outsb
push
dec
loopne
lea
jo
lcall
pop
stos
test
dec
pop
cmc
lahf
jg
outsb
pop
and
add
mov
lds
ficompl
mov
mov
nop
test
adc
adc
pop
leave
push
hlt
fiadds
inc
and
cmp
sbb
mov
inc
lcall
es
inc
bound
dec
mov
mov
pop
mov
out
jp
fwait
cli
into
movsb
xchg
mov
shl
dec
jne
shll
xchg
sub
adc
fadds
jl
jmp
jmp
in
xchg
mov
cmpsb
push
adc
shrb
jl
add
mov
mov
mov
xchg
mov
cltd
or
cmp
std
test
ret
mov
call
icebp
mov
adc
jno
dec
push
mov
cwtl
cmp
scas
lods
xchg
jmp
insl
insb
out
scas
xchg
pop
jmp
loop
xchg
push
inc
xor
xor
and
arpl
les
adc
mov
cltd
pop
mov
mov
sbb
xchg
sbb
lock
gs
mov
dec
fists
cmp
inc
sub
mov
mov
imull
add
mov
fcmovb
lret
cmp
jbe
sti
vucomisd
and
or
dec
ret
and
lret
push
negl
push
dec
sahf
cmc
push
xchg
jb
mov
nop
adc
fcomps
ja
loopne
push
mov
scas
jne
or
xor
imull
rcrw
mov
adc
mov
cli
jb
sub
xchg
lods
fcmovb
sub
lret
dec
xchg
std
sub
sahf
add
lahf
shlb
insl
pop
and
cmpsl
mov
in
icebp
xchg
xchg
adc
xchg
jp
sub
movsl
inc
dec
cltd
sti
fbld
mov
push
out
js
jg
in
filds
cmp
cmpsb
adc
lds
pop
ret
inc
pop
dec
loopne
inc
fsubrp
mov
test
or
sub
pusha
mov
sbb
lret
jo
arpl
lods
daa
cli
movsb
push
push
jmp
jg
dec
nop
scas
dec
push
and
xor
sbb
mov
popf
jno
inc
cmp
decl
sub
mov
and
out
ret
jmp
and
pop
andl
pop
jecxz
xor
rorl
jmp
cmpsb
mov
addl
adc
iret
je
jbe
jp
dec
sub
arpl
aad
ds
push
jno
jmp
sub
and
outsb
stos
mov
pop
push
add
les
add
mov
lock
popf
dec
mov
jbe
mov
jg
lods
xlat
sbb
fistpll
jp
push
xchg
mov
out
test
mov
mov
jmp
jmp
stos
xor
shrl
aad
outsb
ja
outsl
push
adc
add
xchg
or
xor
push
mov
mov
aas
negl
jl
pop
mov
or
jns
jge
fisttpl
inc
rcl
jae
pop
pop
stos
dec
rep
scas
sub
in
add
lds
sub
inc
cs
clc
out
aas
das
pop
pop
sbb
adc
stos
jge
rcrl
addr16
movsb
inc
jge
sbb
decb
mov
mov
orl
icebp
mov
das
adc
mov
outsb
sub
inc
sub
arpl
mov
pop
and
lds
ret
mov
std
pop
clc
daa
and
jl
jo
xchg
mov
push
dec
cmp
push
or
enter
dec
mov
and
sub
addr16
pop
pop
lcall
mov
sbb
xchg
repz
pop
mov
int3
jns
loopne
mov
div
movl
pusha
cmp
in
mov
std
out
and
and
cmp
inc
scas
popf
dec
mov
mul
adc
scas
lods
fsubl
lcall
dec
inc
pop
ja
adc
mov
fcompl
insl
sar
icebp
sub
into
daa
in
sub
fidivrs
pop
test
cmpsl
pop
out
push
add
movsl
iret
rorl
add
lret
and
and
xor
pop
int3
mov
jecxz
leave
inc
xchg
inc
sub
cmp
and
fwait
cmp
or
out
push
sarb
into
jp
stc
pop
sti
test
mov
cli
adc
inc
stos
push
and
mov
ret
imulb
jp
int
scas
dec
push
andl
jmp
or
mov
mov
outsb
dec
daa
jae
ret
jns
imul
pop
sti
push
inc
int3
pop
movsb
jmp
ret
cltd
mov
icebp
popf
jne
int
scas
ja
mov
aad
idivl
jp
fldt
popf
push
mov
arpl
das
mov
mov
cmc
mov
mov
inc
popa
pop
dec
cmpsl
mov
mov
xchg
or
cs
inc
out
or
xchg
cmp
or
popa
push
cmp
push
std
xchg
push
inc
mov
mov
inc
mov
fdivl
and
sub
mov
jne
push
mov
pop
cwtl
sahf
cmc
jle
rcr
pop
mov
pop
cmovl
pop
mov
loop
push
xchg
outsl
pop
mov
in
mov
mov
adc
outsl
mov
stos
pop
push
cmp
jg
push
jne
mov
test
sti
sbb
dec
lods
pop
cmpsl
adc
pop
sub
and
pop
lahf
adc
push
sarl
rcl
ficoml
inc
mov
xchg
xor
mov
jo
ret
jne
sbb
mov
mov
dec
jp
in
mov
add
lods
or
and
cld
daa
lcall
mov
sti
pop
scas
enter
xchg
pop
or
cmpsl
outsb
test
inc
aad
add
in
cmp
or
loop
push
enter
loop
je
orb
je
ret
pop
sbb
or
and
testl
imul
pusha
cld
add
push
test
loope
pop
pop
xor
mov
sbb
xorl
xchg
cmc
jnp
inc
mov
ljmp
nopl
pop
bound
adc
adc
aam
add
mov
sbbb
xchg
cmp
adc
push
outsl
cs
int3
sbbb
push
or
or
dec
idivb
popa
xor
inc
stc
or
add
out
cmpsl
dec
jns
xor
mov
push
cmp
push
movsl
ljmp
cld
push
sti
dec
push
mov
pop
pop
out
cmp
int
add
in
mov
ljmp
jg
mov
mov
repnz
sub
xchg
bound
mov
pop
paddb
fldl
rorl
sbb
cmp
insl
cmp
adc
loopne
xchg
stos
pushf
cmp
mov
test
adc
mov
lcall
addr16
sti
add
insb
out
xor
bound
push
loope
adcb
icebp
dec
mov
jo
icebp
in
lea
outsb
dec
jae
dec
xchg
xor
xchg
fcomps
jecxz
mov
adc
pop
jg
jle
test
push
enter
mov
jne
xchg
mov
leave
add
icebp
jle
into
iret
aad
inc
mov
jb
jne
stos
imul
jae
inc
sbb
loope
paddusb
cwtl
sbb
pop
leave
cli
cmp
test
push
mov
mov
ja
lock
and
mov
mov
xcrypt-ecb
cmpsl
or
shll
mov
dec
mov
mov
loope
pop
rclb
fidivl
insb
add
pop
inc
adc
popf
pop
dec
jno
das
add
test
or
popf
inc
pop
jo
dec
sbb
cmpsl
pop
lock
insb
jbe
adc
push
push
mov
aam
xchg
jo
fs
cmp
fwait
add
xor
and
aas
sub
je
mov
mov
dec
hlt
rcll
clc
fists
jne
xor
push
orl
mov
fstpl
lret
xor
xchg
fisttps
jge
mov
fisttps
sub
test
imul
mov
push
pop
mov
mov
mov
jbe
xor
xchg
jne
push
bnd
shl
enter
push
cld
inc
fbld
cmc
repnz
xchg
dec
test
leave
sub
movsl
gs
mov
loopne
mov
xchg
sub
or
add
mov
pop
push
sbb
push
hlt
mov
lret
popf
push
add
sub
sbb
hlt
pop
push
sbb
jne
rolb
icebp
fs
xor
das
sbb
mov
sbb
cwtl
add
sbb
and
mov
jne
xchg
dec
cli
jp
test
lahf
pushf
jle
cmp
dec
fmuls
icebp
jae
fimuls
add
ss
dec
adc
fisubrl
cmc
or
les
fmuls
jmp
xor
mov
adc
cmc
pop
fabs
lret
sub
mov
or
into
xor
into
aaa
cld
push
inc
dec
mov
push
insb
and
cmp
sarb
out
jl
jb
and
cwtl
imul
jg
or
in
xchg
sti
add
and
jae
out
pcmpeqw
push
test
rcl
push
stc
push
bound
dec
and
pop
and
outsl
shlb
xchg
dec
ret
mov
cmp
in
jno
xchg
mov
jb
xchg
push
xchg
ficomps
xchg
cmpl
das
adc
push
shr
imul
sbb
mov
lea
fdivrs
cmp
push
lcall
test
hlt
rcrl
mov
mov
or
fists
sub
pop
mov
cmp
shl
mov
aaa
fsubl
std
leave
fwait
aad
add
sub
loop
rclb
aad
xchg
push
mov
out
test
setae
test
loope
insb
cmp
push
sbb
push
xor
loop
or
ss
adc
jne
movq
orb
ret
rorl
int
test
mov
xchg
ds
mov
loop
sub
mov
insl
aad
divl
test
insl
xorb
adc
jbe
test
sbb
mov
xchg
ret
add
fcoms
add
je
jo
dec
js
push
sub
xor
mov
mov
mov
and
sbb
mov
or
xchg
sbb
bnd
jne
lahf
jp
into
add
repz
xor
out
loopne
push
das
test
push
push
adc
push
movsb
repz
adc
scas
adc
sbbl
xchg
sbb
push
mov
pop
push
add
push
push
push
je
xor
pop
push
xchg
in
sub
push
push
mov
push
dec
test
lock
and
in
xchg
pushf
in
push
test
scas
mov
cmp
lret
clc
repnz
adc
enter
lret
shl
lahf
aaa
add
les
shl
repz
aad
outsb
sbbl
sar
mov
push
xor
stos
pop
mov
dec
mulb
cmc
scas
aaa
add
jl
and
in
push
test
sub
cmc
outsb
push
xor
and
jmp
and
push
push
int3
mov
out
sub
insl
pop
cmpsl
mov
jno
fsub
mov
push
xabort
dec
adc
subl
xor
xchg
pop
mul
pop
pushf
in
cmp
cmc
mov
dec
dec
jbe
sbb
add
add
push
mov
mov
add
cmpl
sub
and
aad
mov
adcl
mov
adc
dec
xor
popf
lds
xchg
jmp
in
push
in
mov
jne
xor
add
into
pop
pop
in
test
push
repnz
vmaxsd
pop
mov
inc
insl
cmp
mov
sub
inc
pop
or
cld
enter
sbb
stos
clc
add
int
int3
or
xorl
in
inc
in
adc
mov
push
aaa
shll
mov
dec
cmpsb
sbb
ror
test
int
ret
aam
mov
mov
xor
xchg
cltd
push
aaa
or
fs
add
call
push
jmp
flds
xchg
dec
mov
in
push
rclb
jbe
pop
insl
jae
xchg
inc
out
movsb
loope
data16
das
adc
sub
pop
push
mov
cmp
cltd
mov
pusha
mov
scas
mov
mov
inc
jo
mov
mov
pop
sub
rorb
iret
popf
mov
adc
rclb
jne
pop
sub
sub
into
mov
sub
roll
inc
into
dec
imul
outsl
shlb
jmp
gs
fwait
xor
add
dec
cmp
dec
sub
xor
stos
negl
cli
and
scas
jbe
sbbl
loopne
movsb
clc
jne
loopne
inc
mov
sbb
jp
lods
pop
push
cmp
dec
or
in
popa
sti
and
mov
push
stos
cmp
test
int
data16
jb
wrmsr
out
ds
adc
add
cli
int
int
dec
mov
aaa
icebp
enter
or
and
mov
inc
jno
add
sub
lods
fldl
ljmp
repnz
or
icebp
inc
into
pop
in
sbb
into
imul
aaa
clc
fistl
adc
push
inc
fldenv
sbb
dec
or
decb
fcomp
mov
imul
mov
test
add
call
sahf
shl
pusha
ja
xchg
sub
insb
mov
pop
lods
stos
or
mov
out
dec
leave
lods
call
loope
aaa
mov
mulb
mov
xchg
jnp
movsb
int3
pop
shl
sub
add
adc
fiadds
js
lds
push
test
jne
out
and
lock
sub
and
repnz
cltd
xchg
mov
push
aad
add
mov
lret
and
rcll
enter
xchg
mov
roll
dec
xor
movsb
negb
mov
push
repz
enter
jmp
cmp
jne
dec
jae
pop
and
inc
push
jmp
in
adc
xchg
jp
mov
adc
lret
arpl
mov
punpcklwd
sub
fisttpll
cmpsb
and
pop
fimuls
mov
inc
push
movsl
xor
adc
add
les
dec
sahf
cmp
addr16
cltd
in
jge
and
adc
out
movsb
clc
inc
mov
jbe
mov
add
js
mov
sti
cs
psubd
lods
roll
data16
pop
popa
lods
xchg
scas
ljmp
mov
test
jl
pusha
xchg
push
jne
lret
jge
test
inc
mov
mov
pop
jae
jmp
in
outsb
xchg
jl
jae
cmpsl
pop
mov
inc
ret
pop
xchg
xchg
aas
inc
pop
fnstcw
ss
sub
adc
int
sbb
xchg
ljmp
mov
sub
sub
test
jl
sbb
test
fsubl
xor
out
shrl
add
xor
test
loopne
cmp
bound
pushf
mov
les
lods
add
out
adc
dec
inc
mov
inc
popa
fidivrl
fstpt
mov
inc
lock
roll
xor
leave
jge
cs
cmp
xchg
lock
inc
incl
sbb
xor
sbb
cmp
scas
push
out
pop
dec
push
pop
jb
gs
cmc
cmp
shl
jge
jg
jle
adcb
pop
iret
ss
lds
cld
loope
stos
inc
mov
shl
cld
in
frstor
push
sbb
mov
mov
mov
dec
lahf
aam
cmp
mov
adc
push
lods
mov
mov
mov
arpl
gs
push
mov
std
sub
cli
repnz
je
and
add
fst
jmp
add
aas
push
pop
stos
sub
imul
jne
ljmp
jns
repz
xchg
scas
inc
xchg
addr16
test
icebp
xchg
in
lret
push
clc
mov
fldl
cwtl
cli
push
scas
rol
aam
push
fs
adc
push
pusha
xchg
fadd
rclb
decl
pop
mov
pop
data16
xor
dec
loope
xchg
dec
jns
stc
pop
inc
push
ja
add
add
cmpsb
push
fs
mov
loope
pop
movsb
fmuls
cld
out
inc
dec
int3
arpl
sbb
in
jo
mov
test
adc
testl
pop
inc
push
push
cli
push
xor
mov
testb
pop
fstpt
adc
mov
jne
push
sub
mov
loope
dec
adc
addr16
jecxz
in
fstl
push
loop
add
leave
into
dec
leave
mov
pop
sti
jl
mov
and
jo
mov
sbb
jae
sbb
negl
icebp
test
xor
fwait
push
pop
in
push
movsl
mov
mov
std
aaa
sbb
or
shll
mov
jno
clc
jl
and
subl
and
bound
add
add
jge
notl
out
scas
dec
pop
inc
je
or
dec
out
mov
mov
xchg
lahf
push
mov
or
push
sahf
nop
pop
mov
xor
orb
loope
fisttpll
mov
repnz
push
stos
subb
sbb
test
xchg
shrb
ss
sub
imul
xchg
das
je
mov
xorl
mov
mov
mov
xchg
test
stos
push
lods
mov
cmp
in
divl
ss
insl
xor
mov
repz
into
aad
sbb
or
xor
or
rcrl
in
mov
mov
add
jbe
xchg
std
out
lret
lret
mov
insl
push
pop
jne
cld
enter
push
pop
shll
adc
stos
pop
jmp
lea
sbb
ficoms
sbb
out
das
or
adc
mov
pop
sub
cmp
arpl
adc
push
inc
push
add
cltd
push
mov
ljmp
fldenv
ret
fcmovu
arpl
pop
add
sbb
xlat
mov
ret
dec
add
and
lret
sub
mov
iret
xchg
or
push
clc
mov
leave
pop
cmp
sti
fstl
xchg
cmpsb
xchg
inc
mov
mov
pop
sub
test
or
mov
rcrl
and
cmpsb
xchg
fs
in
dec
jno
dec
cwtl
mov
add
jle
shrb
scas
adc
sbb
lods
or
into
out
loop
mov
orb
shld
or
jp
mov
sahf
clc
lock
cwtl
mov
loopne
loope
xchg
fcompl
mov
ffreep
jl
lods
mov
cwtl
mov
orl
or
cld
or
mov
push
fscale
mov
cwtl
jecxz
daa
mov
js
adc
imul
imul
add
pop
jnp
cmp
rcrb
xlat
jecxz
jp
mov
js
jae
jp
jo
enter
sub
push
jl
aaa
dec
or
push
pop
cld
call
out
mov
and
iret
push
insb
jmp
push
dec
imul
mov
push
aas
lds
stos
xchg
dec
xchg
mov
jge
fmull
mov
jmp
repz
cmp
lcall
sub
daa
lret
jne
aaa
xchg
xchg
sbb
iret
xor
enter
jne
pshufw
jp
fsts
fidivs
jno
lods
fcoms
movsb
sbbb
mov
cmp
mov
ja
lcall
ja
sub
mov
fwait
and
mov
jb
imul
ds
cmpsl
cltd
xor
mov
daa
xchg
xchg
push
lret
test
mov
cs
scas
mov
pusha
cs
push
xor
mov
xchg
bound
jmp
jae
jo
int3
call
dec
or
push
sub
sub
cmpsl
mov
xchg
mov
pop
adc
rolb
das
mov
cmp
loope
jecxz
in
ss
jns
addr16
shlb
push
dec
push
pushf
cmp
adc
clc
xorb
cmp
jns
xchg
jl
lret
imul
or
xchg
in
mov
jl
ficomps
push
mov
sbb
sbb
cld
push
scas
fcmovnu
cmp
data16
mov
jb
jae
les
and
call
dec
in
push
sub
popa
or
lods
xchg
inc
push
aad
icebp
outsl
jp
divps
aaa
add
pop
add
gs
lods
loopne
in
loopne
fldt
imul
fsts
lods
lret
inc
movsb
sub
stos
mov
shrb
or
out
mov
js,pt
mov
adc
mov
hlt
ljmp
jae
jbe
fmull
ret
arpl
outsb
nop
sbb
adc
test
dec
jno
mov
mov
push
jnp
ds
enter
fs
add
mov
adc
cwtl
test
sub
and
mov
dec
xchg
test
pop
std
xchg
cs
loopne
outsl
xchg
cli
xchg
je
cltd
dec
lock
push
xor
xchg
stos
xor
inc
pop
das
jnp
jne
inc
sub
pop
cmp
mov
pusha
add
call
fiaddl
cmp
and
cmc
mov
xor
add
test
ljmp
or
jmp
pushf
sbb
sub
cmp
pusha
lcall
push
push
push
mov
jecxz
pop
loop
adc
out
sub
mov
aaa
sub
sbb
mov
mov
call
sbb
stos
mov
imul
inc
push
pop
push
jge
inc
push
inc
mov
push
cmp
lock
addb
sbb
or
mov
test
mov
stos
pop
adc
adc
pusha
xchg
mov
mov
cmpsb
mov
inc
shr
std
and
inc
mov
cli
cmpsl
icebp
add
orl
inc
lds
das
out
negb
rorb
int3
lret
cs
aad
sbb
xor
pop
jbe
sbb
daa
mov
fcomi
fnstenv
fst
out
sbb
xorl
sub
and
cmp
loop
mov
and
mov
mov
push
clc
stos
movsl
mov
xchg
pop
pop
imul
sub
ret
pop
and
jmp
shll
aas
ds
sbb
iret
call
popa
sub
cmpsl
pop
ds
addr16
jnp
mov
addl
mov
ljmp
pop
jae
es
lcall
cltd
dec
cmp
jne
notl
mov
mov
xor
xor
rclb
sarl
push
jno
stc
je
or
xchg
inc
das
or
out
fcomip
out
arpl
sbb
cwtl
loope
fcompl
and
mov
or
fdivrl
or
mov
jnp
fwait
test
pop
pop
and
in
jbe
out
add
rorb
inc
adc
pop
test
aad
std
mov
loop
movsl
pop
push
fs
dec
gs
push
adc
roll
mov
sub
cmp
xchg
xor
inc
outsl
inc
mov
mov
dec
js
shr
mov
iret
add
pop
test
xor
out
sub
xor
lret
mov
jmp
mov
lcall
pusha
adc
and
sub
sbb
lret
fdivrs
adc
push
pop
pop
into
xor
roll
dec
mov
mov
or
jge
xor
stos
cmova
or
or
movsl
lock
shrb
pop
mov
mov
stos
ja
flds
or
int
add
test
cmp
xchg
pop
in
in
pop
int3
mov
xchg
inc
lret
pop
lret
pop
pop
jp
in
xor
mov
xchg
daa
insb
push
stc
das
outsb
dec
leave
adc
std
or
popa
lods
loopne
cmp
pop
mov
pop
leave
fsubr
ss
push
mov
pop
sbb
imul
jo
xchg
mov
dec
into
jge
shll
add
dec
xchg
out
scas
push
loope
mov
dec
aaa
jo
or
cmp
gs
pop
stc
fistpl
js
xchg
rorl
push
out
mov
pop
cmp
jae
gs
jp
jge
xchg
pop
push
rcrl
sub
jle
fistpl
lret
mov
or
pop
int
aam
and
js
fbld
xor
jmp
loopne
shll
repz
sbb
cltd
dec
fxch
outsl
test
in
mov
dec
ret
dec
test
xor
jbe
aam
mov
pop
adc
xchg
or
ss
sub
mov
sub
mov
ja
or
flds
push
mov
icebp
push
outsb
js
add
push
pop
sub
xor
rorl
rclb
sbb
or
js
in
sbb
mov
add
lret
xchg
cmp
pop
popf
jecxz
jb
dec
dec
lahf
sti
mov
cld
push
adc
inc
loop
adc
aam
call
test
add
insb
or
xor
stc
sub
and
jg
mov
roll
int3
dec
fnstsw
xchg
pop
lock
cmpsl
add
jmp
jno
ret
pop
movsb
bound
dec
jns
es
sub
pushf
lahf
sbb
test
enter
inc
adc
xorb
pop
cmp
popf
jle
idiv
adc
jg
add
sbb
mov
mov
mov
ret
fwait
jno
cmp
gs
js
insb
inc
xchg
xor
testb
jnp
call
ljmp
cmp
ffreep
cmpsb
dec
pop
xor
test
int3
xchg
or
jg
sub
or
inc
adc
lock
ljmp
lock
insl
fwait
dec
mov
jge
mov
adc
xor
pop
int3
cmp
mov
pop
sub
sarl
pop
mov
hlt
inc
fcompl
push
stos
mov
xor
out
cli
js
jae
scas
movsl
shll
push
outsb
adc
dec
or
and
jmp
aad
sarl
cmp
aam
or
inc
cmpl
insl
add
and
fildll
je
out
sbb
mov
aad
xchg
push
sbb
cmp
jo
mov
sbb
das
mov
cmp
insl
jge
fdivrs
mov
xchg
subl
cwtl
adc
sub
lcall
movsl
mov
push
sbb
xor
adc
xchg
outsl
push
sahf
lahf
aas
cmp
mov
or
lds
inc
ficoms
lret
ljmp
fwait
mov
arpl
and
ljmp
jmp
ljmp
mov
xor
scas
sbb
stc
jae
push
dec
jnp
rcrb
out
cmp
or
inc
jg
push
sahf
cmp
xchg
in
in
xor
into
mov
imul
ret
in
lods
pushf
fcoms
pop
dec
stos
dec
jmp
fwait
xor
call
pop
icebp
xor
cli
fwait
out
mov
xchg
fwait
push
andl
aas
mov
movsb
mov
push
mov
rorl
push
sahf
mov
fucomip
test
mov
aaa
push
lods
lahf
add
mov
and
mov
addr16
mov
fcoms
outsl
adc
mov
andl
sti
adc
inc
or
testl
or
push
test
movsb
inc
cmpsl
shlb
mov
nop
shl
mov
repz
mov
pop
mov
lods
aas
nop
out
dec
lret
ror
negb
xchg
cmpsl
cmp
bound
pop
ljmp
jl
inc
outsb
mov
stc
ja
adc
push
adc
pop
jne
sbb
les
pop
fdivr
mov
jecxz
scas
xor
and
or
sahf
mov
sti
pushf
sub
lret
xchg
mov
sbb
inc
ja
pop
subb
mov
setg
in
fistps
fsubl
imul
dec
addb
test
dec
mov
pop
sub
and
pop
mov
and
les
push
jb
lahf
adc
adc
xor
dec
inc
shlb
fcmovnu
leave
addr16
fsts
popa
mov
adc
mov
pop
rcrb
or
in
in
dec
das
pop
int3
negl
leave
or
inc
movsb
cwtl
sub
lret
pop
cltd
pop
repz
mov
jnp
ja
sbb
and
das
or
add
mov
and
jns
in
cwtl
insb
ss
out
or
lret
fisubs
pop
cmc
cmpsl
in
jb
adc
rdmsr
sub
jmp
test
adc
addr16
mov
xor
pushl
popa
mov
filds
pop
pop
xlat
mov
xor
call
mov
xchg
mov
inc
aas
je
push
jne
outsb
xchg
xor
sub
cmp
or
xor
in
jno
fs
push
mov
subb
mov
mov
daa
jecxz
and
iret
repz
mov
shll
or
mov
push
fldl
mov
mov
jns
mov
push
testl
filds
leave
mov
jne
sbb
or
mov
mov
cmpsl
aam
sarb
mov
cmpsl
out
pop
ffreep
and
push
dec
cmpb
xor
daa
inc
rcll
rcrb
sti
and
jae
sub
mov
fidivrs
pop
test
fwait
out
in
inc
rorb
sub
daa
mov
push
pop
and
push
test
fsubrl
stc
icebp
dec
std
xor
loope
xor
adc
sti
clc
lahf
pop
sti
stos
cmpsl
xchg
stc
pop
loope
dec
shll
icebp
movsl
and
lea
js
mov
lods
push
aad
jnp
xor
adc
pop
sub
adc
out
es
into
aaa
cpuid
popa
adc
mov
or
add
in
icebp
test
mov
and
pop
or
clc
mov
pop
add
nop
xchg
sbbb
xor
out
out
call
and
jmp
add
xchg
mov
movsl
pop
mov
pusha
fisubl
push
jle
push
daa
cld
shll
xchg
dec
faddl
das
fldl
jne
cltd
bound
pop
push
icebp
add
scas
mov
fadds
mov
aad
add
inc
loop
rcr
dec
inc
popa
xchg
xchg
aad
test
mov
push
or
sbb
mov
in
mov
mov
stos
jo
push
lods
xchg
push
jae
ljmp
or
sub
cmpsb
mov
xor
loopne
push
movsl
sub
rcrl
sbb
xchg
jp
mov
adc
out
ret
out
out
pop
stc
jnp
into
xchg
pop
inc
hlt
into
jno
or
mov
push
sub
cld
xorl
add
ret
jmp
xor
cmpsl
into
shll
mov
push
orb
stos
dec
cwtl
and
in
int3
cmp
pop
pushf
xor
cmpsl
stos
test
js
icebp
lcall
xorw
add
out
fisubrl
and
push
push
or
out
test
mov
shll
popf
lcall
cmc
mov
ds
es
mov
sub
aaa
inc
push
cmpsl
cli
in
mov
bound
out
push
push
mov
dec
test
mov
call
fldcw
push
in
out
call
xor
or
sbb
pop
xor
cld
mov
mov
sbb
jg
scas
dec
in
and
jb
movsb
aad
pop
push
iret
ljmp
mov
cmp
jno
mov
dec
packsswb
dec
aad
mov
ss
out
loope
pop
bound
int
out
ljmp
cmp
pop
cli
sti
lods
fstl
ljmp
add
cmpsb
insb
push
xor
pusha
mov
jle
cs
cmp
in
pop
dec
sti
sub
jg
aad
adc
outsb
fldl
jae
in
xchg
mov
sbb
loopne
sbb
shrl
mov
pop
cmpsl
mov
rolb
repz
mov
clc
fwait
pop
or
movsb
test
xchg
shrb
sub
lret
or
jnp
and
pop
stos
inc
mov
std
inc
mov
popf
and
mov
ja
xlat
insl
loop
xorb
lea
jg
in
out
xor
push
stos
movlps
add
sbb
xor
push
sub
mov
dec
mov
outsb
pop
push
fisttpl
lcall
push
orl
lods
jl
xor
xor
inc
addr16
pop
in
inc
push
iret
out
add
push
addb
and
mov
aad
fnstsw
mov
push
stos
ret
ret
xlat
outsl
movsb
lds
in
mov
shlb
pop
and
inc
mov
mov
pop
sbb
lcall
xor
int
mov
imul
sub
inc
gs
rcr
leave
and
and
push
scas
es
repz
loopne
mov
scas
sub
xchg
imul
push
ret
stos
or
sbb
inc
lret
fcomip
push
sub
and
mov
sub
mov
ss
xor
xchg
cwtl
insb
mov
sbb
mov
add
ja
sbb
aad
adc
sub
notl
test
dec
sbb
ja
xchg
notb
aad
adc
popf
fxch
ret
dec
or
iret
push
popa
inc
adc
sub
push
aas
and
jg
cmp
mov
loopne
push
or
sub
pop
dec
mov
lea
pop
rcll
rcr
sub
jmp
inc
jg
xor
or
movsb
mov
and
adc
and
or
pop
dec
int3
adc
test
aas
test
pop
push
cmp
jmp
lcall
sbb
cmpsb
mov
in
outsb
shl
outsl
cli
out
pushf
xor
xchg
sahf
cmpsb
std
or
sbb
mov
std
sbb
xorb
loopne
cwtl
sti
cmpsb
xchg
inc
mov
mov
in
leave
dec
in
lock
sti
push
pop
test
mov
test
mov
cld
jae
and
sti
or
cs
mov
inc
push
sub
xchg
mov
push
outsb
mov
xchg
push
and
stos
lea
xchg
js
sub
ljmp
gs
fmulp
adc
jecxz
pop
or
in
add
lcall
outsb
or
aam
aaa
pop
ljmp
enter
mov
icebp
repz
mov
or
xchg
sbb
fsts
movsb
push
or
inc
test
adc
sbb
pusha
cmp
pop
cmp
mov
cmpb
iret
into
sub
fdiv
outsl
xor
outsb
imul
outsb
or
xchg
mov
jne
enter
aam
enter
test
pop
cmpsb
sub
out
sbb
sbb
divl
ret
cli
mov
imul
pop
or
xchg
cmp
adc
or
or
hlt
push
mov
iret
cmova
lds
aas
xchg
icebp
fidivrs
mov
imul
outsb
imul
sub
fstps
dec
mov
shlb
in
clc
add
fs
sahf
mov
stos
les
adc
pop
sub
addl
aad
pop
jbe
into
cltd
inc
mov
enter
loopne
pop
mov
movsl
shl
xchg
lea
mov
cmp
imul
dec
jmp
xchg
add
cli
fcomps
cmp
lods
pop
stos
ficomps
dec
mov
and
shl
pop
int
or
adc
sbb
stos
popa
les
adc
pop
gs
sub
inc
pop
dec
loopne
repnz
cld
mov
stc
mov
icebp
jecxz
std
pop
mov
fisubrl
xchg
stos
cmp
add
das
adc
aad
inc
out
stc
xchg
sti
adc
bound
movsl
dec
jnp
add
mov
mov
or
clc
mov
xchg
pop
test
mov
ss
inc
dec
xor
imul
stc
push
ret
nop
pop
xchg
mov
jle
nop
jae
stos
push
outsl
std
out
adc
mov
fadds
push
rcl
cmp
mov
es
mov
fwait
testl
insb
adc
fs
push
mov
mov
cmp
or
xchg
fistps
rolb
jbe
mov
imul
jns
jl
mov
clc
inc
adc
pop
jo
mov
leave
cmp
lds
push
jae
dec
xor
aam
xor
cltd
sti
jle
into
xchg
xor
mov
leave
daa
les
mov
stos
pushf
dec
xchg
jmp
cmpsl
or
inc
xor
pop
sti
stos
aaa
mov
in
sub
lods
call
cltd
sbb
mov
in
pop
jbe
inc
adc
mov
cmpsb
or
jle
jg
mov
and
iret
sbb
ss
mov
jno
aad
das
add
add
xchg
jp
mov
xchg
add
cmpsb
out
lods
xchg
in
xchg
jge
cmp
mov
push
shrb
xchg
gs
lahf
push
scas
ret
mov
xor
ja
add
xchg
mov
std
imul
dec
jae
shlb
or
pushf
cli
lds
lcall
cmc
cmp
push
xchg
sub
and
in
dec
jno
les
cltd
repnz
into
xchg
xlat
mov
or
rolb
mov
mov
arpl
syscall
jp
movsb
pop
js
test
xor
mov
rolb
mov
add
inc
jbe
in
dec
cmpsl
pop
or
xorl
shrl
xor
dec
stos
jmp
test
nop
je
sbb
mov
ss
mov
rclb
movsl
lods
iret
cmc
std
xor
lcall
std
mov
por
mov
xlat
sub
sbb
push
or
mov
inc
sbb
push
xchg
mov
jbe
cltd
hlt
pop
call
xacquire
dec
fbld
lcall
aaa
popf
jno
jno
movsb
lods
or
dec
xor
push
sub
adc
push
cli
jae
jle
sub
scas
aas
mov
pop
lcall
dec
inc
mov
jne
pop
sahf
cmp
push
loopne
push
loopne
jecxz
roll
popf
xor
leave
idivb
fwait
inc
mov
daa
or
js
out
fsubrl
dec
sub
dec
sub
inc
mov
dec
lcall
fcoms
in
jle
fnstsw
test
test
jae
xchg
loop
jecxz
scas
lret
dec
cmp
idiv
sub
push
outsl
inc
adc
jno
scas
in
test
xchg
cmpsb
xor
or
lret
jne
jmp
push
fstpl
add
pop
ss
pop
inc
and
int
mov
stos
xchg
mov
and
cmp
insb
mov
cs
int
shlb
test
aam
jb
cmc
cmpsl
adc
cmpsl
mov
and
mov
xchg
sub
gs
mov
test
pop
cmp
xor
test
imul
mov
add
inc
je
mov
in
arpl
out
ss
fmull
lahf
leave
ljmp
test
enter
push
cmc
dec
popa
scas
aaa
jl
jg
sbb
pop
xor
imul
mov
out
jg
loopne
inc
inc
cli
push
jecxz
push
inc
test
xor
rol
cmp
add
inc
popw
repz
xchg
outsl
xor
imulb
hlt
int
ljmp
mov
cmp
insb
inc
or
xor
mov
stos
adc
in
and
pop
sahf
and
mov
lahf
mov
push
imul
and
mov
je
loopne
push
in
inc
sub
rorb
or
insb
out
xchg
sbb
push
sbb
jecxz
cmpsb
inc
pop
inc
ljmp
pop
fldenv
and
xor
mov
xchg
enter
push
pop
in
das
mov
stos
sbb
test
test
dec
insl
xorl
lea
pusha
es
add
xchg
cld
mov
lret
xchg
cmp
and
rorb
daa
sub
lods
cmpsb
imul
inc
or
xor
movsl
pop
jne
mov
shrl
cmp
insl
push
test
jg
mov
popa
in
mov
xchg
clc
adc
mov
test
cmp
ja
ret
leave
jg
nop
js
not
icebp
cmpl
inc
ffreep
add
jle
cs
sbb
sub
aaa
lahf
cmpsl
ljmp
les
daa
jmp
jno
mov
inc
movb
les
jbe
adc
movsl
rcrb
loopne
popa
or
clc
adcb
xchg
mov
jge
test
test
psubusb
es
iret
arpl
mov
inc
adcb
mov
adc
push
in
jno
add
mov
sarb
jecxz
sahf
lahf
insl
out
inc
mov
inc
push
sbb
jle
sar
or
mov
mov
sbb
push
inc
dec
sbb
enter
mov
test
push
mov
loop
sbb
dec
imul
jne
jge
arpl
pop
mov
xor
outsb
test
dec
mov
mov
je
mov
push
stc
insb
dec
repnz
xchg
xchg
mov
movsl
pop
push
pop
outsl
inc
add
sbb
push
or
and
jne
xor
iret
ret
das
test
mov
cmp
das
stos
sub
scas
and
jl
mov
pop
mov
sub
ss
push
lods
outsb
sub
mov
hlt
or
adc
dec
ror
bswap
mov
dec
sahf
fmulp
mov
add
xchg
addb
pop
xor
loope
inc
orb
outsl
mov
pop
mov
dec
mov
inc
adc
dec
xchg
sub
data16
cmp
cmp
insb
lcall
pop
dec
mov
and
cmp
mov
lahf
mov
jecxz
inc
cmp
jge
inc
xor
push
sbb
into
inc
bound
add
xor
fldenv
mov
sbb
pop
enter
jne
aas
ffreep
cmp
lcall
repnz
pop
fwait
mov
inc
jmp
xchg
in
lcall
push
inc
mov
sbb
in
enter
loope
xchg
repnz
addr16
jmp
jecxz
xchg
xor
pushf
lahf
out
fiadds
jne
inc
out
popa
out
jp
jg
cli
lds
or
mov
pop
popa
jne
mov
adc
lock
repz
ret
dec
stc
flds
cmp
scas
inc
lret
and
rclb
push
scas
bound
dec
dec
xor
sbb
xchg
xchg
lahf
pop
mov
jle
fdivs
sub
pusha
pop
adc
adc
xor
icebp
dec
push
mov
push
push
loopne
loop
fsubs
shlb
mov
outsb
mul
std
outsb
dec
or
mov
popf
jae
cmovg
cld
xchg
scas
jg
dec
test
add
lods
test
xorb
fcoml
sahf
ds
in
mov
rcl
jae
pop
mov
inc
dec
pop
push
add
inc
fisubs
in
and
fdivp
add
iret
das
pop
inc
xchg
je
std
fwait
int3
jbe
adc
hlt
mov
stos
mov
push
pop
sub
adc
pushf
lods
sbb
jecxz
push
mov
mov
jbe
add
xchg
push
mov
dec
or
in
mov
nop
jne
xchg
stos
mov
fistpl
adc
and
inc
push
popa
gs
iret
xchg
xchg
sbb
push
int3
shrb
or
cs
mov
mov
mov
xchg
daa
inc
jb
rolb
clc
inc
jns
icebp
xchg
andb
ret
cmp
movsl
rorl
push
gs
jge
dec
scas
xchg
dec
dec
aad
sub
into
mov
mov
ds
add
xchg
aad
xor
cmp
enter
inc
adc
insl
nop
call
in
jge
ljmp
cltd
push
push
push
test
call
and
test
mov
sbb
je
daa
movsb
sbb
shrb
sub
cld
mov
aam
test
dec
stos
add
pop
dec
pop
shll
xor
mov
lcall
rorl
les
adcb
lods
lods
nop
cmpsl
loopne
mov
push
cmp
mov
loope
imul
leave
icebp
lock
or
push
shl
mov
scas
movsl
mov
ss
fwait
pop
ja
sub
jae
inc
inc
pop
fwait
inc
mov
loope
sbb
ret
add
fcoms
xchg
das
fldt
mov
nop
call
es
jno
push
outsl
js
jo
out
inc
cmpsb
repz
and
adc
lds
leave
lahf
cmp
jae
outsl
jge
loopne
stos
les
cmpsl
daa
inc
xor
sbb
jle
lahf
stos
mov
adc
adc
loope
inc
sbb
popa
int3
adc
push
mov
xor
cmp
sahf
push
aas
lret
sbb
bound
popa
pxor
repz
fsubrl
adc
hlt
pop
divl
loop
dec
arpl
cmp
enter
iret
jle
std
lds
jg
dec
xlat
pusha
mov
mov
repz
pop
adc
push
or
xor
dec
jmp
lea
iret
push
or
and
add
rol
dec
insl
or
xchg
mov
popa
cmp
inc
imul
cmc
dec
out
ficoml
dec
pop
lods
outsl
xchg
es
jb
iret
adc
mov
adc
daa
jno
lret
test
fstpt
aad
xchg
pop
or
pop
les
adc
mov
and
repnz
pop
ss
push
xchg
cmp
das
sbb
and
sub
loop
jae
xlat
mov
xchg
loop
lea
xchg
dec
mov
jae
js
icebp
mov
mov
sub
es
jmp
out
adc
fisubrl
xorl
adcl
push
sahf
sbbl
adc
je
jp
es
rolb
add
cmp
sbb
aas
fsubs
cs
dec
mov
pop
push
mov
mov
repz
out
mov
ret
insb
inc
lret
mov
rclb
pop
pop
dec
out
dec
pop
aam
test
mov
or
repnz
push
out
adcb
sbbl
aad
and
jmp
and
and
rcrl
orb
je
xor
mov
stos
ja
movsl
push
dec
lock
call
gs
lret
lods
arpl
imul
addr16
imul
int3
mov
sub
jp
and
push
jnp
sbb
push
add
sbbl
scas
push
ljmp
sub
pop
mov
mov
dec
push
mov
mov
jmp
cltd
in
je
jp
xchg
cmp
pop
jbe
mov
sub
mov
jle
into
inc
js
mov
xor
test
out
pop
or
cwtl
sub
cmp
adc
add
inc
lahf
inc
stc
and
call
add
loope
mov
or
mov
xchg
push
into
xchg
sub
xlat
jmp
movsl
mov
ret
fs
repz
mov
in
leave
aas
gs
lcall
out
mov
jg
xchg
push
and
pop
xorl
adc
mov
mov
and
push
push
and
lock
rcr
mov
mov
cmp
rcll
fcoml
test
pusha
test
push
sbb
mov
gs
pop
cmp
rclb
or
int
dec
jp
push
popf
insl
adc
sbb
pop
je
cs
sub
fucomp
stc
or
pop
in
fadds
std
out
lret
insb
pop
lret
ret
xor
loop
sub
push
imul
movsb
jle
sub
insl
cmp
lahf
movsb
dec
hlt
mov
mov
mov
push
or
in
test
repz
sbb
cmpsl
add
dec
rcll
or
adcb
mov
insb
ret
iret
imul
les
sbb
movsl
cwtl
insb
dec
cmp
pop
sub
xor
sbb
int
neg
lods
imul
icebp
adc
into
and
in
cltd
arpl
jae
push
test
dec
inc
mov
jae
mov
sub
cmc
frstor
ficoms
and
jno
sahf
mov
les
rcr
add
icebp
mov
and
fcomps
into
mov
add
or
adc
sbb
lea
js
dec
in
aas
mov
xor
arpl
je
jp
push
jl
out
movsl
mov
push
sbb
ds
lds
lods
daa
stc
cs
roll
xor
mov
adc
dec
es
test
popa
int3
jo
xchg
jge
push
sbb
sbbb
mov
iret
adc
dec
xchg
fiaddl
fdivr
lods
sub
loopne
cmp
sub
pop
xchg
out
mov
cmp
mov
add
push
ss
lock
inc
xchg
ja
xchg
mov
lahf
mov
add
ret
xorl
ror
loope
and
nop
push
pop
inc
cwtl
dec
adc
ret
or
dec
inc
pop
jle
pushf
in
cmp
adc
adcb
sarl
and
negb
pop
mov
ljmp
shl
in
mov
jg
add
outsb
mov
dec
push
xchg
mov
hlt
push
lea
shrb
pop
push
and
and
sub
pushf
fisttpll
mov
pusha
out
sbb
in
and
cmp
icebp
ja
in
inc
gs
mov
mov
stc
aaa
loopne
jnp
mov
or
subl
cltd
inc
call
daa
mov
sbb
mov
les
cld
dec
sbb
lret
xchg
push
adc
int
popa
rorb
rcrl
mov
or
lahf
mov
lds
repz
add
mov
mov
out
mov
lock
aaa
jae
add
out
fbld
arpl
mov
div
mov
mov
push
adc
pop
sar
jge
fimuls
mov
repz
jb
add
pop
outsb
xchg
xor
fldcw
mov
adc
int
lcall
jnp
movsl
xor
mov
adc
gs
jp
mov
les
cmpsb
call
lcall
or
inc
gs
fldt
xor
loopne
fnstcw
cli
lock
and
divb
cmp
js
mov
outsb
out
lods
xor
pop
adc
and
cmpsb
push
aad
pop
loop
xor
js
or
icebp
add
cwtl
fcomi
adc
pusha
push
jmp
dec
std
popa
jg
xor
push
inc
pop
xchg
gs
push
pop
out
es
insl
decl
add
cmpsb
adc
add
pusha
les
mov
sbb
push
ljmp
mov
lock
lret
add
xor
sbb
lods
add
and
lahf
imul
push
jb
enter
mov
or
jg
clc
flds
sbb
dec
pop
push
cmpsl
stc
clc
cmpsl
mov
cmp
int3
pop
jecxz
xor
jp
fcomps
xchg
das
push
pushf
aas
push
movsl
fdivr
dec
clc
ds
movsb
adc
rcll
mov
xchg
push
mov
orb
outsl
push
repnz
lds
inc
adc
push
in
rcrb
or
imul
cli
jle
insl
bnd
pop
jae
jb
mov
int
sbb
popa
sti
enter
pop
jb
cmc
or
mov
call
jae
jg
mov
mov
push
outsl
les
jg
dec
lock
and
in
cld
sbb
jl
push
sub
add
pop
fistl
adc
inc
in
lea
cli
cmpl
jo
popa
jl
cltd
sub
or
push
sbb
cmp
scas
xchg
in
hlt
mov
dec
adc
stos
and
gs
add
fcomps
pop
cmp
jnp
dec
jl
push
mov
or
push
int
jg
mov
lea
mov
push
inc
das
xchg
ret
iret
clc
aas
pop
lret
sbb
aad
fstpt
xchg
cmp
xchg
add
movsb
popa
sub
dec
mov
inc
je
sub
inc
add
pushf
mov
subb
test
fimuls
out
les
adc
sbb
pop
xchg
jl
pop
sbb
pusha
dec
sub
mov
insl
jne
push
sub
pop
push
mov
lock
adcb
scas
cmp
add
inc
mov
scas
mov
dec
ljmp
mov
adc
mov
loopne
fldcw
mov
jle
lock
ljmp
outsl
fwait
xor
sub
pop
push
xchg
lret
push
dec
cmpsl
cmp
lret
mov
mov
lcall
push
rcll
jecxz
push
aas
lds
sbb
por
jmp
shlb
lds
cmp
adc
inc
xchg
test
cli
ret
adc
mov
out
es
dec
fucomip
sbb
lock
into
jmp
jge
pop
loope
or
sub
popf
cmp
inc
outsl
in
daa
ror
aad
adc
insb
inc
int3
or
movsb
ljmp
mov
cltd
ljmp
popf
loop
test
jp
addr16
iret
inc
jmp
adc
nop
jl,pn
push
mov
stos
ss
fsts
test
jnp
std
lret
out
or
add
cli
in
jecxz
out
and
pop
int3
inc
repz
mov
cmpsl
mov
stos
outsb
std
data16
mov
or
pop
int3
sahf
lret
cmpsb
cld
cltd
cltd
xor
xchg
cld
fwait
nop
out
sbb
in
test
rolb
out
and
call
test
or
shlb
mov
jmp
adc
arpl
inc
icebp
iret
call
loopne
mov
sub
add
push
mul
xor
fs
insl
mov
and
push
pop
cmp
shll
mov
and
insl
cmp
jno
jle
je
nop
cmpsb
cmpsl
idivb
jge
jge
or
ret
push
fiadds
push
pop
push
ss
nop
popf
sti
data16
cmp
inc
cmp
cltd
inc
pop
rcrl
mov
sub
clc
jbe
popf
scas
mulb
aaa
jb
fwait
aad
adc
xchg
xor
out
mov
sti
mov
hlt
xchg
outsb
and
mov
movsl
fs
ds
or
mov
sub
lock
jo
xor
push
lds
loope
imul
jae
push
jbe
and
cld
arpl
xor
push
xor
mov
pushf
push
sub
addb
stos
inc
lea
bound
mov
add
lods
rolb
push
js
push
xchg
xchg
incl
push
or
pop
jge
xchg
js
push
dec
loope
xor
sti
xchg
inc
adc
outsb
jecxz
or
sub
sub
sub
int3
pop
popa
call
sbb
and
idivl
je
inc
xchg
ss
or
ljmp
xor
lret
mov
cmp
add
push
jno
stos
fwait
clc
xchg
add
adc
mov
cli
loop
int
ss
cmp
mov
pop
dec
jl
fdivl
leave
adc
inc
inc
sub
xchg
push
mov
cmpsl
aaa
pop
aaa
ret
in
jb
inc
insb
rcl
cmp
mov
int
sub
add
shlb
jne
fcoml
xchg
out
jnp
loop
push
lods
xor
outsb
pop
mov
mov
jbe
adcl
filds
rclb
fadds
cmp
jo
pop
cmp
or
loopne
xor
inc
cmpsb
mov
test
cs
inc
dec
push
xor
xchg
lock
mov
loopne
into
in
adc
dec
xor
mov
mov
mov
mov
mov
jecxz
stos
pop
dec
popf
fwait
sbb
or
adc
or
out
aas
stos
xchg
dec
ret
dec
pop
sub
sahf
pop
or
leave
sub
insl
dec
add
xchg
pop
add
insl
mov
jne
movsb
scas
cli
ja
mov
insb
filds
hlt
xor
push
jb
inc
aaa
add
test
das
add
jl
test
jmp
out
cmp
repnz
ret
mov
xor
xchg
and
les
ja
movsl
inc
pop
xor
push
lcall
sub
xchg
aas
outsl
fwait
lea
push
or
cmpsb
lock
sarb
mov
xchg
ljmp
movsl
sub
movsb
inc
neg
in
xchg
cwtl
repz
jb
movsl
out
mov
cs
pop
jle
and
inc
dec
divl
je
std
es
test
sub
mov
int
pop
jnp
mov
push
pop
sub
ffreep
dec
jo
jb
arpl
pause
mov
lds
push
addl
mov
push
ds
shrb
in
mov
or
xchg
das
xchg
jp
jle
mov
mov
sub
pop
adc
push
adc
push
jge
lods
data16
shl
or
add
sub
or
xor
jns
arpl
aad
das
in
ds
xchg
inc
jnp
add
fwait
jne
mov
jo
pop
shlb
xor
out
sub
in
mov
out
stos
out
xor
pusha
fsubp
clc
fs
xlat
or
jl
shrl
mov
jbe
es
iret
jns
jb
adc
jb
ja
and
subl
add
push
in
xlat
add
ret
rolb
pop
mov
aas
mov
pop
add
rclb
shrb
push
jge
shrl
or
repz
cmp
aas
pop
fbstp
lods
das
and
adc
and
out
icebp
sbb
test
push
add
jbe
pop
dec
mov
ja
int
xor
ds
cmpsl
pop
out
dec
mov
fs
notl
jo
outsl
mov
cmp
arpl
das
pop
lods
scas
jmp
pop
loopne
ljmp
or
push
fmuls
dec
jp
pop
lret
mov
mov
sub
dec
out
pop
adc
mov
cltd
bound
cld
pop
jns
lahf
sbbb
ret
xchg
xchg
xchg
popl
shlb
and
mov
sbb
loop
and
xor
out
sub
popa
aam
jno
jb
inc
pop
jle
fnsave
xchg
scas
and
or
or
mov
ja
add
stos
in
push
mov
jo
and
mov
pop
add
cmpsb
in
fsubl
ds
jae
stc
lds
ja
call
adc
and
cwtl
xchg
dec
jecxz
stos
ret
inc
nop
inc
loop
push
lret
add
and
cmpsb
sbb
loope
jp
loop
js
mov
fdiv
clc
iret
gs
mov
imulb
xchg
ret
in
mov
aam
icebp
repz
movsb
int3
jp
inc
lahf
cmp
push
lock
xor
push
push
add
lea
cmp
mov
push
sbbl
iret
jae
fldcw
ljmp
pushw
test
enter
insl
push
shl
xchg
movsb
imul
int3
sahf
sub
xchg
repnz
loope
ljmp
testl
pop
mov
leave
fisubs
test
fwait
add
in
sub
lods
int
les
repz
adc
adcl
cmpsl
imul
movsl
adc
push
bndldx
data16
push
pop
addl
dec
pusha
jp
dec
pop
push
stos
stos
mov
dec
adcb
enter
aaa
mov
into
clc
daa
into
xchg
outsb
scas
repz
push
test
sbbb
and
adc
xor
lock
cs
adc
mov
stc
mov
gs
add
add
jmp
mov
movsl
rol
cwtl
mov
jmp
jl
lock
mov
fstl
adc
rcrl
lock
push
js
arpl
push
mov
mov
scas
or
mov
jle
pop
mov
push
or
mov
cmp
lds
mov
push
stc
cmc
out
in
aad
mov
movsb
imul
lods
test
mov
stos
push
or
pop
xor
iret
inc
ljmp
cmpsb
push
movsb
stos
jns
in
push
sub
cs
ret
or
or
divb
cmp
arpl
test
imul
daa
jp
cli
jge
inc
add
fisubrl
sbb
xchg
imul
fldl
in
in
in
out
and
pushw
enter
arpl
jecxz
out
stc
ret
mov
xor
je
or
jge
pop
popa
jp
fs
push
repnz
clc
inc
adc
xchg
pop
push
jecxz
cmp
mov
sarl
push
and
cld
cmpsl
scas
dec
mov
and
sbb
outsl
push
rclb
rorl
dec
lea
xchg
lcall
mov
pop
rcr
inc
add
jo
pop
inc
cld
in
pop
popa
testb
daa
movsb
mov
pop
mov
pushf
mov
stos
icebp
jbe
shrl
cmp
adc
insb
mov
add
cli
xor
sti
mulb
addr16
outsl
push
popa
xchg
mov
push
push
and
sarb
mov
cmp
ds
adc
fildl
jb
mov
mov
sarb
pop
ret
inc
test
out
mov
cmp
mov
and
int3
jp
hlt
fdivrl
add
loopne
sbb
fistps
adc
das
fisubrl
dec
mov
add
mov
cmp
push
push
aas
xchg
inc
testl
push
jb
or
loopne
mov
sub
test
dec
outsb
fsubl
jle
mov
int
aaa
sbb
mov
sbb
xchg
jg
cmp
aas
xchg
ja
cmp
pop
sbb
sbb
sub
jno
fstpl
add
mov
fidivl
fmuls
or
into
int
jnp
mov
lcall
ljmp
out
test
test
pop
int
dec
je
daa
out
jbe
in
lods
xor
fistpll
aam
outsb
dec
xor
das
adc
mov
bound
add
push
mov
and
mov
js
gs
xchg
pusha
dec
or
int
adc
aas
sbb
xor
xchg
mov
inc
cmc
lock
cld
mov
mov
imul
mov
lret
xchg
aad
inc
int3
sbb
sahf
std
xor
fs
xchg
enter
cmp
orl
jl
dec
add
shlb
and
not
stos
leave
stos
scas
loope
fimuls
bound
lahf
mov
pop
imul
sbb
out
scas
test
dec
dec
lods
fiaddl
test
or
loop
test
sub
les
shlb
xor
ja
push
mov
ss
jo
adc
push
mov
sbb
xchg
mov
leave
ds
xchg
xlat
popf
in
and
jno
cmp
inc
mov
jmp
and
push
pmovmskb
in
out
fwait
outsl
xor
idivl
int3
sub
xchg
insl
lret
adc
fcoms
cmp
jnp
pop
sub
mov
pop
jb
inc
adc
shlb
in
aam
xor
adc
and
jns
shrl
cmc
inc
ret
mov
and
pop
ret
add
adc
dec
test
ja
clc
lahf
cmp
call
shlb
inc
xor
out
dec
ret
adc
scas
jmp
call
lahf
pop
inc
mov
and
inc
jl
jns
push
pop
aaa
pop
stos
mov
or
sbb
sub
std
mov
loopne
scas
leave
mov
out
adc
es
es
inc
jg
icebp
nop
pop
xor
pop
or
mov
dec
add
pop
xor
xor
xor
adc
fs
dec
pushf
xchg
mov
mov
jl
stos
loope
adc
lret
inc
nop
pop
sti
jbe
and
jno
dec
js
cwtl
mov
int
daa
mov
ja
fcoml
jle
aad
sbb
cmp
sbb
sbb
movsb
loop
jb
sti
pusha
cmp
sbb
stos
push
les
in
inc
mov
int
loop
mov
pop
pusha
push
or
push
lret
bound
inc
je
and
inc
pusha
or
mov
xchg
mov
subl
xor
push
adc
test
aad
cmpsb
add
xchg
cmpsb
fistl
aad
sbb
add
scas
stc
iret
stos
mov
bound
and
cltd
lds
mov
call
inc
pop
movsb
enter
adc
xchg
lds
add
xchg
lret
in
mov
add
jne
repnz
push
jp
xchg
or
test
movsb
adc
les
xor
cli
dec
mov
mov
fmuls
xchg
xor
fcomip
iret
cmc
mov
xchg
jmp
xor
add
jae
mov
out
push
or
pushf
mov
push
inc
fsts
cli
xchg
mov
int3
xchg
test
in
cld
xchg
pop
mov
cmpsl
xchg
faddp
je
jl
push
jl
mov
scas
and
cmp
push
mov
pop
outsb
das
popa
fnstsw
stos
inc
sbb
push
rcll
cmp
mov
dec
into
mov
xchg
push
jbe
addl
nop
js
lcall
push
or
repz
enter
mov
push
int
cld
xor
pop
add
mov
cmpsb
adc
jae
fucomp
idivl
icebp
movsl
jecxz
lock
xchg
add
sar
and
fdivs
mov
sar
popf
cld
mov
adcl
lahf
in
aas
xchg
pushf
out
adc
rolb
pushf
inc
push
dec
sbb
and
test
sti
jp
adcl
xorb
fcoml
jl
jl
sbb
cltd
ljmp
fimull
pusha
sbb
outsb
andl
ljmp
adc
xchg
pushf
ficompl
ret
cwtl
out
push
aad
movb
out
arpl
ss
loope
inc
lock
sti
call
out
popa
pop
push
mov
cmp
out
mov
xor
mov
fldcw
xchg
adc
stos
add
and
mov
cs
and
fs
pusha
fists
movb
repz
int
insb
sti
jo
jge
shlb
test
dec
pop
pop
test
sbb
xor
mov
ret
test
dec
cmp
mov
ror
jne
mov
pop
mov
dec
push
lods
shlb
pop
or
fistpl
dec
jbe
mov
sbb
in
cs
int3
mov
sub
movsb
dec
dec
lret
xchg
lods
dec
mov
lret
fwait
leave
xchg
fstp
dec
push
xor
push
pop
push
sarl
sub
adc
fwait
sarb
push
cmpsl
out
shrl
das
lret
subl
jp
push
faddp
xchg
in
push
lods
popa
aad
insb
aad
adc
sub
gs
pop
push
stos
sub
cmp
inc
jns
pop
seto
notb
pop
add
sub
mov
stos
pop
mov
pop
xchg
rcll
and
inc
js
or
mov
lcall
ds
popf
dec
sbb
sbb
std
ja
int3
dec
adc
cmp
jne
pop
cmpb
imul
mov
in
inc
mov
jbe
jl
cli
les
testb
push
cltd
mov
mov
push
inc
add
or
xchg
nop
fidivrl
clc
xor
sbb
incl
mov
stc
movsb
nop
inc
sub
and
stos
jbe
xchg
xchg
fnstsw
xchg
jno
addr16
jns
jae
and
subl
cwtl
xchg
jg
imul
out
call
pop
jb
mov
mov
daa
push
inc
fsubrl
call
lcall
rep
jb
mov
call
icebp
pusha
jmp
fidivrs
rcll
pop
xor
mov
ret
insl
mov
push
repz
loopne
or
xor
ficoms
or
ljmp
xchg
xor
push
xchg
push
daa
test
or
jmp
daa
std
ret
in
cli
clc
mov
imul
jl
cmp
pop
sahf
mov
stos
mov
or
mov
pop
adc
loopne
or
xchg
mov
adc
mov
mov
pop
call
lcall
lods
jno
jl
andb
and
and
loopne
rorl
lret
loope
mov
repnz
jbe
dec
nop
pop
int3
scas
mov
sub
popa
mov
pusha
stos
mov
scas
mov
cmp
neg
jge
sti
fs
add
push
cmp
mov
cwtl
sub
cmpsb
xor
mov
mov
push
es
icebp
scas
inc
adc
push
cld
sbbl
and
pop
addr16
imul
adc
cmpsb
aad
fs
cs
push
in
add
mov
mov
mov
sub
test
jge
jne
incl
js
xor
push
push
jno
sarl
inc
das
dec
push
out
xchg
clc
mov
adc
sub
add
add
sub
mov
adc
stc
not
scas
cld
rcrb
cltd
adc
adc
int3
mov
jg
and
fsubr
test
mov
in
xchg
es
jnp
mov
xchg
lock
jnp
xchg
ds
adcl
xor
popa
rcll
dec
push
mov
jae
dec
xor
lcall
sbb
push
repnz
movsl
test
test
lods
inc
cmovno
dec
jmp
jno
stos
insb
lods
daa
dec
ficomps
push
mov
fisttps
cmp
data16
scas
cmpsl
cmp
clc
nop
dec
push
xor
jmp
clc
negl
std
or
sub
push
orb
data16
sti
imul
pop
scas
iret
testl
jnp
int3
inc
test
cld
sbbl
jmp
adc
ja
or
lret
loop
mov
xchg
inc
adc
cwtl
inc
cmp
arpl
cmp
enter
mov
or
dec
jae
jmp
jnp
aad
and
ja
inc
aad
stc
push
gs
inc
fsts
pusha
scas
and
dec
cmp
jns
aad
std
jo
push
or
rclb
xor
mov
cmpsb
mov
cmp
in
xchg
repz
mov
jle
lahf
in
sub
lahf
pop
repnz
xchg
mov
out
inc
pop
shll
fstps
sbb
rolb
and
jne
or
imul
mull
xchg
sbb
sahf
mov
fstpl
pop
xorb
cmc
add
int
mov
cs
adcb
stos
repz
sub
mov
fwait
mov
pop
push
mov
sub
mov
cmp
jne
js
stos
mov
nop
push
hlt
addr16
mov
int
adc
add
call
lods
popl
push
jnp
daa
cmp
std
punpcklbw
push
inc
mov
dec
test
inc
jno
repnz
push
adc
in
jmp
ja
cmp
popl
nop
adc
inc
and
xor
lret
loop
xor
cmp
lods
cmpsb
gs
xchg
pushf
push
and
xor
in
push
aam
mov
arpl
mov
push
cwtl
and
push
cli
dec
sti
shll
push
or
jecxz
add
and
sbb
cmp
pop
push
push
nop
push
xor
push
outsb
adc
and
mov
test
psubb
ret
pop
push
imul
mov
mov
out
fnstenv
rorb
jno
testl
push
cmc
dec
out
sub
adc
inc
add
add
dec
dec
push
movsl
or
xor
sub
fcomps
into
and
popf
adcl
dec
outsl
push
inc
jmp
adc
subb
faddl
mov
lods
mov
es
adc
imul
loopne
cs
in
jnp
mov
jle
lds
cltd
in
ret
mov
je
fdivp
mov
decl
xlat
push
jecxz
lret
das
and
or
and
mov
xchg
mov
pop
mov
sbb
dec
and
ror
int
call
mov
subb
lock
mov
or
outsl
push
pop
inc
sub
pop
push
movsl
xor
mov
mov
inc
pop
insl
imul
dec
sub
pop
xchg
and
push
mov
in
mov
pop
pop
insl
pop
scas
fisubl
xchg
and
popf
adc
jb
shrl
xor
sbb
mov
xor
inc
xlat
dec
push
repnz
jmp
or
imul
push
cwtl
pop
or
mov
ficoml
sbb
fwait
bound
sub
cli
adc
fisttpl
mov
pushf
mov
notb
sub
je
repnz
arpl
mov
xchg
jb
ss
push
fisubs
ret
pusha
jmp
and
and
push
js
inc
sbb
lds
mov
cmp
cwtl
imul
scas
addb
and
mov
adc
jo
dec
or
xchg
xor
inc
push
cmp
aam
ret
imul
arpl
adc
popa
add
shlb
mov
outsl
push
xlat
insl
ja
hlt
insb
or
lret
adc
mov
aam
faddl
aam
or
mov
stos
add
xlat
add
xchg
lret
bound
lea
lods
cmp
arpl
pop
or
notb
add
adc
and
outsl
insl
sub
cld
stos
mov
xchg
and
mov
push
lret
add
in
scas
dec
push
push
cmc
lret
xchg
jbe
xchg
mov
or
movb
xchg
addr16
xchg
comiss
enter
lds
dec
jns
cs
les
je
cmpsb
shrb
outsl
jns
repz
sbb
or
xor
fbstp
out
jg
in
lcall
loop
adc
sbb
adc
repnz
xlat
xorb
jne
xlat
mov
cmpsb
stc
notl
xchg
movsb
repnz
into
xor
mov
dec
push
stos
adc
xor
or
mov
mov
and
pop
sbb
in
mov
movb
lahf
lds
enter
push
sbb
dec
inc
out
mov
in
adc
shlb
loope
jg
jmp
sbb
mov
add
jg
mov
jmp
push
jnp
jge
sub
stos
and
mov
push
add
movsb
js
jb
shl
mov
mov
movsl
adc
movsb
dec
pop
jl
pop
add
in
inc
sahf
mov
cmp
and
mov
pop
hlt
jo
and
cmp
rcrb
out
rorl
dec
pop
jb
inc
cmp
inc
or
or
jge
testl
mov
loope
adc
inc
outsl
faddl
pop
stc
push
jecxz
jnp
or
ds
insl
mov
push
sbb
mov
shr
stc
or
jnp
insl
cmpsb
enter
add
jecxz
inc
adc
sbb
lret
pop
dec
sbb
or
xchg
test
ret
dec
ret
xchg
shl
lods
mov
in
sti
mov
iret
add
arpl
ljmp
std
and
pop
pop
push
adc
mov
nop
pop
test
mov
std
inc
in
pop
divl
repnz
std
pop
ret
xchg
xor
andl
es
shlb
xchg
movsl
out
sbb
fnsave
fs
icebp
xor
out
push
in
inc
call
sub
imul
pop
mov
outsl
and
cld
pop
dec
inc
or
sub
loopne
std
adc
cltd
or
clc
lock
dec
jg
in
mov
sub
es
mov
dec
das
clc
test
jo
repnz
pop
cmp
mov
scas
scas
pusha
cld
or
xlat
inc
xchg
xchg
push
aas
fbstp
lret
shl
imulb
xor
jo
inc
leave
xor
test
push
sub
sbb
mov
aad
cmpsl
jno
and
stos
adc
xchg
cmpsb
cli
add
xchg
outsb
ret
mov
and
repnz
mov
push
mov
scas
sti
out
or
xor
imull
and
icebp
push
add
es
inc
xlat
lea
xor
shrl
or
shll
mov
daa
jmp
jbe
cmc
shrl
mov
xor
lods
mov
movsl
sbb
push
dec
pop
dec
push
test
lret
adc
decl
daa
fbstp
popf
xchg
shrb
das
sub
rorb
push
aaa
pushf
pop
imul
and
pop
stc
mov
xor
inc
arpl
stc
mov
push
aaa
mov
cmp
lods
sbb
ljmp
fidivrl
pop
outsl
pop
pop
sub
aad
notl
mov
dec
ljmp
cmp
mov
push
sahf
push
add
push
jl
cwtl
mov
out
dec
arpl
add
aad
pop
in
stos
in
jo
popa
push
imul
lds
rcr
or
test
push
pop
arpl
popa
push
xchg
outsl
sub
dec
mov
movlps
cmc
or
jecxz
sti
roll
into
fadd
add
movsb
cmp
pop
fsubrs
adc
and
dec
push
or
mov
push
test
psllw
rorb
fidivrs
dec
in
pop
adcb
clc
movb
mov
xorb
shlb
int3
push
sbb
movb
fbld
pop
add
scas
ror
push
sub
popf
mov
push
ds
mov
or
ss
mov
ret
and
cltd
orl
adc
mov
sbb
push
rorb
and
ret
pop
pop
daa
push
lcall
mov
sbb
mov
adc
add
adc
adc
loopne
rol
jp
adc
push
lcall
aad
mov
das
orb
inc
xchg
sub
ss
and
inc
or
je
inc
sbb
icebp
xchg
icebp
out
cmp
xchg
mov
or
sbb
lods
aaa
pop
xor
mov
inc
leave
pop
cltd
ret
sub
xchg
enter
int3
mov
in
aad
iret
dec
stc
cmpsl
sub
stc
push
inc
push
shll
inc
inc
loop
pop
jo
bound
lret
jmp
rolb
cmpsl
cli
mov
mov
pop
lahf
xchg
cmp
popf
lods
mov
in
out
add
dec
rcll
test
daa
sbb
jo
popa
flds
or
sub
inc
test
and
rclb
push
mov
daa
out
jae
fsubl
jae
jae
call
adc
xor
bound
jecxz
jne
cmp
mov
add
and
inc
out
jmp
cmp
in
jno
inc
xor
pop
jecxz
fisubs
inc
xchg
lock
cmp
imul
cmpsb
sub
inc
outsl
xchg
cli
sbb
mov
add
jo
fs
sahf
mov
xchg
mov
ja
mov
aaa
repnz
jne
inc
and
mov
pushf
arpl
hlt
cmpsl
push
outsl
sarb
xor
int
test
mov
imulb
sub
mov
cmp
mov
sbb
in
test
imul
sti
mov
jmp
lcall
lea
sub
ljmp
mov
jmp
ja
sbbl
or
ret
or
nop
movsl
pop
mov
int
or
pop
mov
cmpsb
or
fs
cmp
pop
dec
sbb
and
and
lret
adc
inc
xchg
loopne
cmpsl
fcom
mov
ds
adc
push
aaa
or
adcl
pushf
push
das
jecxz
dec
loopne
outsb
lock
push
fildll
leave
or
sbb
fcoms
and
loope
adc
inc
dec
jnp,pn
test
hlt
dec
and
inc
arpl
rcr
rorb
push
jb
jge
icebp
or
xchg
adc
push
xchg
cmpsb
icebp
inc
jo
adc
sub
mov
rcrl
test
jne
pop
addb
push
lock
xchg
pop
sub
jne
push
push
jecxz
lods
dec
pusha
sub
push
jmp
adc
insb
nop
int
jle
cltd
push
sbb
adc
stc
and
stc
iret
mov
lods
test
push
jecxz
fdivrs
xchg
int3
mov
push
mov
ret
sti
or
jp
loope
stc
pop
push
ficoms
cmpsl
popa
idivl
aad
int3
outsb
jg
popf
mov
lahf
aad
mov
mov
mov
jl
mov
je
xor
pop
mov
mov
scas
cmpsl
stos
pop
clc
push
push
ror
test
inc
add
in
dec
lcall
jae
cmp
jle
push
sub
movsb
inc
lods
lds
lahf
add
pop
adc
sub
mov
test
mov
sbb
xor
in
dec
pushf
jmp
mov
dec
je
xor
das
cmpsb
fcompl
mov
push
lcall
push
adc
cmp
push
and
loop
pop
pop
cmp
shlb
mov
mov
and
pop
std
or
fsts
push
pop
xor
rclb
push
and
ja
jecxz
imul
leave
mov
cmp
out
movsl
mov
ss
mov
cmc
aam
lret
push
inc
fimull
push
fisttps
and
xor
inc
arpl
insb
mov
cld
test
outsl
mov
mov
lret
in
xor
cmc
mov
push
xchg
jbe
int
cmp
mov
loop
rol
fld
xchg
int3
hlt
aam
cltd
jbe
push
inc
push
cmp
std
push
xor
sbb
sub
cmp
adc
insb
movsl
add
xorb
fwait
cmpsl
jle
ds
out
lock
add
mov
mov
out
je
push
addl
lods
aaa
pop
ljmp
mov
push
jle
les
push
mov
mov
mov
sti
jmp
das
sbb
pusha
pop
xor
add
sub
mov
sub
and
out
shll
xlat
mov
xor
mov
jno
iret
outsb
mov
popa
jno
adc
pop
inc
push
mov
sbb
push
sbb
in
pop
pop
cltd
scas
inc
aaa
sub
ss
sbb
out
je
dec
call
jge
lods
outsl
sub
in
dec
mov
sbb
pop
mov
pop
sub
movsb
pusha
mov
and
lods
shlb
mov
push
sahf
and
dec
iret
fsts
cmp
inc
mov
sub
gs
das
or
pop
jecxz
arpl
lret
test
sub
jge
popf
and
push
mov
call
and
inc
stos
and
outsl
incl
ljmp
rolb
bound
adc
repz
or
cmpsb
or
push
sbb
pop
enter
lcall
scas
and
mov
xchg
pop
icebp
inc
add
popa
fadd
xchg
sbb
mov
adc
jmp
iret
push
mov
movsb
add
pop
sbb
ss
pushf
inc
mov
push
xchg
sbb
fs
lock
mov
out
inc
push
pop
rcll
aas
adc
jmp
and
in
mov
ljmp
inc
test
push
js
std
pop
or
inc
insb
mov
mov
mov
mov
xor
in
push
dec
sbb
cmc
xor
pusha
xor
pop
sub
insb
xchg
mov
xor
lahf
and
xchg
lahf
call
inc
outsl
imul
jl
push
shl
aas
add
inc
pop
and
ljmp
repnz
or
adc
mov
mov
add
xor
leave
popa
out
mov
xchg
xor
xor
hlt
mov
hlt
mov
sub
inc
adc
dec
and
pop
jmp
rclb
ret
ds
loop
sbb
and
clc
sub
testb
ficompl
les
cmp
rcl
inc
push
gs
cmp
dec
or
pop
mov
out
jo
mov
lods
in
pop
cmpsl
jae
test
lret
inc
mov
push
mov
notl
idivl
fisubrl
and
daa
out
mov
pop
gs
dec
lock
xor
rorl
mov
sbb
fcoml
testl
adc
popa
and
inc
les
ss
sbbb
mov
mov
ja
mov
push
push
and
cmp
or
leave
add
mov
jp
pushfw
or
inc
push
fistl
aas
enter
iret
gs
inc
inc
xor
xchg
insb
cltd
int3
mov
mov
mov
pop
mov
call
outsb
pop
pop
das
xor
repnz
xchg
mov
sub
dec
mov
in
bound
mov
bound
ljmp
test
call
mov
lds
loopne
mov
mov
cmp
addr16
jb
lcall
xor
movswl
in
ljmp
aaa
sub
mov
xchg
xor
mov
xchg
jecxz
lcall
insb
in
negb
cli
inc
mov
mov
and
movsl
iret
add
inc
stos
mov
xchg
or
fldl
or
cmp
cmp
mov
mov
mov
iret
pop
ret
icebp
jle
shlb
push
push
popf
loopne
sub
push
add
add
test
dec
adc
inc
aad
iret
leave
adc
inc
inc
cli
fbld
mov
gs
jne
pop
sub
dec
call
aas
lret
data16
cmpsb
mov
andb
cmp
js
push
shrb
mov
push
cmp
add
xchg
lods
pop
jmp
ret
pop
cmp
mov
push
adc
stos
adc
mov
xor
in
int3
int
inc
push
das
lock
jecxz
stos
mov
inc
jecxz
std
outsl
cmpsb
arpl
loop
js
fwait
xchg
fdivrl
push
xchg
cld
adc
je
lcall
aam
mov
enter
std
mov
jg
outsl
sbb
scas
jo
js
push
out
sti
and
repnz
lcall
sub
int3
ret
fwait
inc
jmp
cmp
add
sbb
aad
add
js
xchg
or
mov
and
dec
cmp
or
and
sbbl
xchg
push
mov
xchg
adc
arpl
xchg
adcb
mov
or
ret
imul
dec
mov
stos
out
adc
testl
ret
outsl
inc
push
jns
or
add
aaa
or
sbb
push
xchg
pop
in
lret
rcl
mov
inc
add
mov
jbe
jmp
insb
test
movsb
insl
or
pop
sbb
add
adc
cld
popf
test
mov
rcl
jl
xor
dec
les
sub
stc
mov
lock
imulb
cli
xor
shrb
inc
orb
pop
xor
or
cmpl
xchg
mov
hlt
nop
mov
xor
test
ror
mov
adc
shlb
mov
sub
sbb
shlb
dec
jo
or
out
jge
jg
movsl
and
mov
movsb
popf
addr16
push
das
data16
fists
fsts
outsb
cs
test
inc
mov
int
pop
dec
dec
je
cli
das
int
stos
nop
lcall
out
jl
push
clc
ss
cmpsb
mov
push
or
imul
stos
lds
cs
int
pop
mov
cmp
mov
pop
cwtl
sub
mov
or
push
sub
pop
sbb
inc
jo
scas
rclb
mov
push
fcompl
pusha
mov
dec
push
add
xchg
lret
stos
loop
and
int3
push
in
dec
sub
test
or
xchg
push
lret
xchg
cmc
cmc
or
aam
mov
pop
into
std
mov
out
sub
movsb
cmpsb
sarl
mov
pop
xchg
sub
flds
das
inc
sarb
dec
cmpsl
or
cld
xchg
jns
mov
addl
roll
push
push
push
lcall
inc
pop
pop
and
push
es
sbb
pop
paddsw
clc
orb
pop
ss
mov
insb
pop
out
xchg
lea
cmpsl
add
ss
je
push
mov
jns
int
jecxz
fbstp
dec
add
sahf
je
mov
jle
mov
cmp
aas
bnd
leave
xchg
fnsave
xchg
les
jecxz
xchg
fistpll
fbld
cmp
pop
dec
jne
and
jo
dec
adcb
cmp
subl
pop
sub
dec
bound
stos
ret
mov
adc
imul
std
andb
lahf
inc
idivb
out
daa
dec
jb
jae
add
fsubrs
ds
or
sub
iret
push
lahf
pop
pop
int
xchg
push
mov
sub
mov
fsts
sub
loopne
sbb
inc
push
pop
push
mov
or
cmpsb
dec
pop
mov
jbe
repz
sahf
pusha
xchg
cld
xor
jae
aam
stos
ret
xor
shl
rorl
les
mov
out
inc
dec
fisubl
push
push
loop
imul
enter
insl
jmp
imul
cmp
cmp
or
insb
rorl
pop
fucomi
cmp
jl
mov
aam
nop
cmp
and
add
pop
hlt
cmp
and
aad
jo
mov
xchg
into
mov
xchg
mov
fidivl
outsb
add
rcl
add
shll
jl
xor
leave
gs
rcrb
push
push
cmpsl
in
loop
dec
cmpsl
mov
iret
aad
movsl
jae
sub
scas
ret
or
cmc
mov
mov
and
mov
aam
andl
inc
and
call
lods
test
mov
xchg
push
sbb
out
add
inc
fcompl
dec
adc
lock
or
xchg
fwait
cmpsb
das
aad
mov
insb
cmp
mov
xchg
into
dec
cmp
hlt
das
mov
xchg
sub
fwait
push
clc
inc
pop
mov
or
jmp
ss
mov
fdivr
mov
inc
push
test
mov
lret
fcmovu
loopne
mov
xlat
jo
push
inc
add
popf
cmp
rolb
int
out
or
test
jae
mov
lahf
adcb
xchg
lret
ret
dec
sahf
outsb
pop
mov
xchg
cmp
adc
aad
mov
loope
sbb
jae
push
inc
and
inc
pop
rcrl
jl
std
test
inc
enter
lock
mov
inc
shl
add
sbb
and
xor
push
and
mov
cltd
inc
lcall
icebp
fiaddl
test
sub
outsl
addb
lds
mov
push
push
outsl
mov
push
popa
sub
cmp
ja
jecxz
mov
mov
cmp
cmpsb
lock
and
aam
adc
pop
icebp
xchg
mov
pusha
aas
mov
ret
popl
push
xchg
mov
xor
or
xchg
pop
xchg
movsb
loopne,pn
xor
xor
adc
push
imul
add
mov
pop
push
call
sahf
lahf
xchg
mov
rcl
jge
popf
sbb
add
in
into
add
cs
mov
xchg
dec
bound
bt
jo
mull
leave
icebp
or
add
fcmovb
xchg
js
out
arpl
daa
cmp
jp
out
popa
adc
sbb
mov
mov
bound
sarb
mov
cltd
shl
ret
movsl
das
jne
xor
sbb
pmaxub
mov
in
mov
sahf
ret
pop
icebp
test
cli
xor
mov
pop
xor
and
out
daa
aam
daa
and
in
xchg
jg
movsb
test
add
dec
pop
and
and
adc
daa
clc
in
mov
pop
jg
or
xchg
into
cli
lahf
adc
xor
leave
std
call
mov
mov
addl
sti
cs
lret
ss
rorl
punpckldq
cmp
inc
in
cmp
adc
jns
inc
push
adc
add
loope
fbstp
sbb
div
outsl
imul
mov
jb
dec
into
movsb
nop
mov
pop
cltd
adc
bswap
shl
std
add
inc
jle
aad
js
in
out
pop
dec
mov
xor
cld
dec
aad
gs
dec
or
fmuls
inc
ja
mov
jp
imul
sub
std
movsb
bound
popa
inc
mov
cmpsb
lahf
stos
ror
cmp
dec
mov
in
mov
cmp
cmp
rolb
sub
push
or
mov
fisubrl
mov
out
dec
push
in
and
inc
clc
movl
popf
jbe
sbb
leave
mov
inc
and
cld
ret
es
cld
sub
mov
out
lea
push
aad
fucom
fmull
and
inc
std
or
subl
inc
imul
xchg
ja
movsb
push
fcmovnb
movsb
xchg
out
pop
sbb
notb
push
stos
or
or
fimuls
data16
or
adc
sub
xor
or
lods
int3
push
sub
cmp
ficompl
sub
inc
xchg
in
lds
cltd
outsb
cmp
sub
xchg
cmp
out
idivl
test
nop
cmp
xor
arpl
xor
jle
dec
int
ds
inc
mov
mov
fmuls
cmp
sbb
iret
je
inc
inc
mov
lret
cmp
cs
idivl
leave
dec
cmp
shl
leave
jl
in
sub
out
or
sbb
dec
xchg
xchg
loope
aam
imul
fwait
mov
jns
xor
fmull
rorl
pop
fstps
out
call
div
cmpsb
out
lret
pop
shl
sub
push
cmpsl
fsubrs
lock
daa
test
loope
xor
or
into
mov
sbb
jmp
inc
sub
mov
cs
add
mov
sbb
out
mov
and
lcall
test
fisubrl
sbb
jo
pop
imulb
out
add
mov
into
bound
leave
loope
add
cmp
lock
push
cmp
std
mov
arpl
and
mov
add
cmp
mov
jmp
loope
outsb
test
fimull
icebp
mov
pop
cmp
cmp
jle
imul
insl
and
xchg
mov
int
sbb
mov
jecxz
leave
fwait
push
xor
adc
mov
mov
fcomi
loope
idivl
insb
sub
sbb
inc
mov
xor
cmp
popa
lahf
in
push
enter
or
movsb
repz
lret
cmpsl
cli
mov
xchg
addr16
std
cmpsl
aam
xchg
stc
lret
testb
fnstcw
nop
shrb
movsb
insb
fsub
and
cmp
add
leave
clc
sub
jns
movsl
gs
jmp
cmc
aas
gs
mov
flds
adc
cmp
rol
adc
mov
pop
push
lds
repz
icebp
adc
xchg
call
addl
push
and
jecxz
mov
movsb
jbe
scas
sbb
movl
add
ret
mov
push
adc
mov
idivb
push
fsubs
jae
pop
lcall
gs
scas
mov
pop
cltd
jae
lret
push
lea
bound
nop
test
outsl
sub
hlt
test
dec
popf
out
adc
sbb
jmp
test
aad
in
lds
popf
or
shl
popf
hlt
loope
inc
loopew
jg
lods
sub
mov
xchg
sub
or
mov
cmp
mov
push
fistpll
inc
arpl
fst
inc
loope
lret
cmpsb
xchg
fs
clc
push
stos
std
jbe
mov
xchg
mov
xchg
call
inc
hlt
outsl
or
add
mov
pop
stc
sbb
arpl
inc
filds
xor
adc
adc
aam
add
xchg
jnp
shlb
mov
xor
call
stc
inc
or
jns,pt
pushf
push
lcall
pop
fdivrl
sub
pop
xchg
jb
in
cmp
pushf
adc
push
iret
outsl
mov
imull
mov
cltd
pop
jecxz
iret
stos
scas
or
sbb
into
cmp
call
pop
jne
sub
jecxz
sbb
pop
push
repz
dec
inc
mov
inc
shl
adc
sti
roll
outsb
adc
popf
fldenv
xchg
popa
and
adc
es
jne
cmp
bound
into
rorb
test
add
push
pop
pushf
sbb
xchg
cld
xlat
xor
repz
lahf
inc
lret
mov
mov
jmp
rcll
aam
shl
push
mov
mov
sbb
das
icebp
lea
sub
push
js
push
dec
adc
inc
inc
lcall
loopne
out
mov
sub
xchg
and
aaa
hlt
lcall
ja
in
aam
stos
add
fwait
and
jp
lods
dec
xor
xchg
inc
repz
xor
lods
and
xor
iret
jp
sbb
stos
push
iret
dec
sbb
and
xchg
fnstenv
sub
xchg
sbb
rcrb
insl
lock
dec
or
add
lea
sti
clc
lret
scas
xor
popa
das
push
addl
das
sbb
ja
and
pop
jnp
inc
icebp
and
jle
rorl
cmpsl
push
testl
mov
andl
adc
adc
add
ja
push
sub
mov
jl
clc
loope
pop
and
call
bound
push
pop
or
shlb
mov
lds
sub
pusha
aas
xchg
dec
shlb
push
cmp
call
lahf
ljmp
insb
cmp
pushf
dec
push
jae
mov
or
or
xchg
dec
sbb
cmp
fwait
pop
int
inc
mov
adc
push
lock
and
popa
or
enter
adc
cmp
sbb
cmp
lods
mov
hlt
mov
mov
icebp
or
pop
mov
sub
int
mov
pop
pop
divl
xorb
adc
lcall
movsl
ja
outsb
push
data16
mov
es
mov
pop
xor
call
fs
sbb
ljmp
inc
mov
iret
fcomps
out
xchg
mov
lds
dec
cmc
in
cmp
imul
jnp
jo
sub
xchg
and
pop
pop
out
xor
in
dec
js
mov
mov
fwait
xor
jnp
fstps
or
in
insl
xchg
xchg
cmc
xor
fildl
mov
jl
shlb
mov
mov
mov
idiv
fisttps
jb
adc
jle
dec
das
sub
cwtl
and
fwait
mov
push
adc
mov
mov
nop
sbb
mov
xor
arpl
mov
pop
sbb
aas
and
insb
loope
xchg
push
cmpsl
enter
and
lock
orl
sbb
sbb
cmpsl
cmc
xchg
cmp
push
pop
loopne
clc
pop
push
sti
dec
or
ja
pusha
loope
sub
jbe
sub
stos
arpl
pusha
sub
jl
outsl
or
imul
jl
lahf
leave
mov
cmp
sub
and
call
jmp
mov
insl
in
and
mov
sbb
bnd
jo
fwait
xchg
jne
adc
outsb
adc
imul
or
and
add
push
sbb
and
cli
sub
fildl
sub
push
ljmp
push
mov
xlat
push
out
pop
icebp
mov
and
or
movsl
pop
std
fs
inc
mov
ja
mov
std
sbb
sbb
out
xchg
cmp
adc
xor
rorl
lods
dec
mov
push
cwtl
push
mov
dec
adc
mov
mov
fidivl
cmp
pushf
shrl
jg
pop
sub
sub
mov
fnstcw
pop
addr16
inc
jne
xor
into
and
sbb
or
and
jp
push
clc
sbb
loop
mov
jb
ficoms
sub
nop
sub
outsw
mov
xor
outsl
std
pop
push
clc
jge
movsl
dec
iret
mov
sarb
pushf
ljmp
in
subb
adc
insb
and
insl
inc
cmp
jbe
inc
rcrb
js
push
andb
inc
jae
mov
loop
sub
pop
sub
push
pop
fstpl
mov
das
push
jno
and
addr16
sub
dec
adc
lea
fsubrs
dec
negb
mov
sti
out
lods
sbb
lret
push
pop
inc
add
jns
mov
loop
and
mov
into
and
icebp
mov
add
es
lcall
sub
icebp
insl
fucom
dec
sbb
lret
fdivl
mov
popa
imul
mov
sti
push
ss
jmp
ljmp
dec
inc
pop
push
push
ret
and
adc
faddl
fisttps
std
push
bound
mov
dec
or
xchg
cwtl
mov
sub
orl
dec
lds
mov
add
inc
je
pop
daa
gs
push
les
or
inc
cltd
mov
mov
inc
loop
xor
dec
push
loope
fcmovu
sbb
inc
fildll
sub
clc
and
xchg
mov
test
ficoml
jae
es
call
stos
sbb
push
out
cwtl
push
loop
cmp
outsb
nop
dec
add
lods
inc
outsb
push
dec
jl
cmp
push
xchg
daa
and
icebp
sbb
cmp
pusha
hlt
scas
mov
cltd
add
mov
imul
insl
test
xor
or
clc
add
rcrb
sti
mov
dec
je
dec
mov
leave
push
sub
loopne
scas
add
mov
les
loopne
lahf
add
mov
and
test
pop
aaa
cmp
pushl
icebp
test
cmp
inc
dec
jbe
xchg
mov
mov
or
loopne
shl
and
xchg
jns
fimuls
pop
or
mov
add
imul
dec
test
inc
into
jecxz
mov
enter
sub
stos
repz
xchg
stos
push
cltd
push
push
and
dec
pop
addw
push
out
mov
inc
mov
mov
ficomps
mov
fdivs
out
mov
push
imul
jl
inc
cmpb
jecxz
std
imul
stc
mov
outsb
cmp
and
jbe
pop
imul
pop
and
cmp
push
xchg
shlb
roll
loop
mov
and
and
fisubrl
daa
popf
mov
jp
mov
adc
xchg
sub
jmp
stc
cmpxchg
mov
or
in
xchg
lds
add
or
ja
test
push
mov
int3
jno
cmp
movb
xchg
jne
mov
mov
dec
jb
rcl
lea
loope
cmp
cmp
inc
pushf
stc
in
aas
inc
aam
movsl
fistl
lcall
lret
or
addl
sar
push
out
jne
ret
push
shlb
insb
mov
push
pop
scas
pop
xchg
mov
mov
mov
cmpsb
das
adc
popf
mov
lds
jb
jp
test
loop
pop
popf
push
push
xchg
mov
sbb
out
push
or
inc
out
sbb
jnp
inc
dec
addr16
xchg
repz
rcrl
or
add
push
mov
sbbl
in
sub
dec
add
jae
xchg
sbb
loopne
pop
dec
fnsave
iret
pop
jnp
lahf
bnd
fcompl
pop
xorb
into
xchg
shlb
adc
jg
push
push
adc
mov
jns
xor
sbb
pop
pop
ret
sub
loop
sbb
in
pop
test
or
sub
mov
and
fnstsw
call
xorl
jns
gs
and
scas
les
jne
dec
out
sub
push
xchg
cmpsl
movsb
lcall
adc
xchg
insb
ljmp
cli
push
fidivl
lds
mov
xchg
inc
pop
xlat
pop
sbb
hlt
outsb
or
dec
outsb
jae
icebp
mov
and
cmp
leave
push
lret
pop
mov
or
insl
ja
inc
mov
imul
js
cwtl
lea
stos
in
in
lods
bound
sahf
or
enter
push
outsl
dec
pop
jge
lahf
cmpsb
push
cmp
leave
jp
dec
nop
sub
shl
sbb
mov
mov
mov
mov
jno
cmpsb
out
push
sub
inc
cmp
in
jbe
push
jg
push
inc
inc
adc
fisubs
loope
sub
pop
rolb
pop
insb
cmc
jmp
dec
test
repz
jecxz
jmp
and
sub
aaa
loope
inc
test
jmp
push
bound
cmpsb
call
out
movl
pop
enter
add
pop
xor
js
aad
enter
in
mov
dec
cld
add
add
pop
imul
xchg
enter
test
jne
push
imull
rcl
lret
fldl
adc
push
ret
sub
and
sub
mov
roll
cmp
pop
mov
jne
push
mov
inc
inc
mov
cmc
or
push
adc
les
mov
movsl
add
js
pop
pop
loopne
and
out
cmp
in
in
cmp
sbb
stos
sbb
sbb
sub
lea
fsubl
ljmp
cld
xor
add
lods
pusha
and
mov
gs
enter
mov
int3
cmp
mov
ds
adc
addr16
inc
inc
pop
jae
sbb
scas
out
push
xchg
add
mov
mov
fdivl
fcmovb
xchg
icebp
inc
mov
call
pop
and
mov
faddl
hlt
pop
jg
fdivrl
pop
nop
cmp
insb
imul
daa
and
je
arpl
add
mov
das
cmp
stos
or
cmp
arpl
push
sti
lahf
mov
jno
decl
dec
xor
mov
ret
add
aas
dec
or
and
add
addl
jno,pn
testb
daa
cltd
mov
jle
add
sub
push
in
cmp
bound
clc
mov
and
mov
add
lods
push
data16
test
adc
sbb
loopne
roll
sarl
inc
sub
sub
push
or
dec
sahf
inc
stc
push
loopne
rorl
int3
jns
jns
cs
mov
aas
fwait
aam
jno
jo
xor
adc
mov
pop
nop
xchg
test
ret
xchg
aad
pop
dec
fsts
xchg
jmp
cmp
cmp
out
add
int
adc
cmp
dec
cld
jb
jecxz
push
push
testl
jmp
sti
jnp
daa
pop
mov
imul
shl
fiaddl
mov
lret
xchg
dec
and
cld
jae
nop
dec
lea
cmpsb
testb
push
lcall
test
xorl
les
mov
push
adc
and
pop
nop
repz
callw
testb
das
insb
jns
inc
push
fcoml
sbb
mov
push
test
loop
xchg
cmp
push
pop
xchg
fisubrl
xor
inc
cmp
push
lods
jg
push
je
js
iret
jne
call
push
int
or
and
sub
cld
cmp
out
push
xor
and
dec
mov
fnstenv
sar
jbe
sbb
sub
fs
notb
lcall
push
jnp
adc
repz
movsb
cmp
mov
bound
add
xchg
in
scas
mov
pop
cmp
xchg
cmc
negl
pop
adc
cmp
mov
pop
in
jp
shlb
fsubrs
jp
lods
repnz
into
ret
scas
jns
repz
mov
push
dec
jae
andb
cs
mov
nop
xchg
test
nop
dec
mov
jns
lods
ja
sahf
cwtl
sti
xor
or
dec
cmpb
out
pop
cmp
sub
out
lods
ljmp
push
ret
xchg
mov
jl
xchg
ret
push
jo
xor
adc
mov
in
jno
dec
sbb
xchg
add
mov
xchg
sbb
mov
push
cmp
mov
pop
outsl
and
push
add
jle
ss
scas
repz
or
xor
lret
xchg
sbb
jbe
add
dec
outsb
lods
add
inc
into
jb
mov
push
and
mov
and
add
sbb
add
loope
orb
flds
mov
adc
jno
sub
rol
push
int
int3
arpl
repz
lods
add
inc
in
inc
add
pusha
xchg
in
lock
js
sbb
or
jns
inc
sub
push
adc
scas
mov
dec
xchg
cmp
push
cld
push
push
cwtl
test
movsb
cmc
cmp
das
repnz
mul
adc
test
adc
lds
loope
and
and
or
mov
movl
stos
popa
hlt
dec
add
lahf
mov
adc
pop
and
add
inc
icebp
xor
and
xchg
stc
outsb
loop
push
xor
inc
push
dec
xor
push
or
stos
adc
and
orl
jg
add
inc
pushl
js
sbb
lret
shlb
adc
int3
and
in
aad
push
mov
aad
mov
sbbb
in
out
or
addr16
cmp
pop
jbe
int3
or
ss
imul
jae
jg
insb
pop
aaa
adc
add
inc
cmp
sbb
out
add
stos
pop
das
fistpl
inc
and
fldenv
pusha
add
movsl
fdivs
and
add
push
jecxz
jae
cmp
mov
dec
into
fucomp
sahf
push
outsl
mov
dec
imul
cmp
xchg
shll
jne
dec
jp
cmp
rclb
and
into
fwait
pop
mov
jmp
jge
pop
ret
xlat
test
mov
jmp
setge
pop
sbb
repz
dec
inc
sub
sub
pop
fs
cld
dec
mov
loop
ds
dec
sbb
sub
fisttps
adc
loope
imul
icebp
test
popf
xchg
sbb
push
mov
sahf
lea
push
gs
sub
dec
sub
imul
and
xchg
bound
movsb
dec
xchg
pop
and
out
cld
sbb
jl
addr16
push
in
mov
xor
out
mov
lcall
fcmove
jg
out
push
push
pop
adc
aam
mov
and
ficompl
into
push
je
xor
test
lret
xor
and
mov
sbb
in
xor
mov
ficompl
test
push
jmp
cmp
lods
enter
mov
out
sbb
and
xor
test
mov
call
pop
shl
xchg
jmp
sbb
xchg
test
push
jl
inc
push
repnz
mov
shlb
mov
cmp
mov
and
or
fistps
push
daa
adc
dec
rcrb
mov
loop
test
outsl
cmpsb
jp
xlat
cli
and
dec
lahf
mov
mov
out
pusha
subl
mov
fiadds
mov
push
mov
jae
pop
cld
and
sbbb
push
aaa
jl
push
push
das
fsts
fwait
sub
add
lret
jb
dec
pop
insl
aad
data16
jl
sub
sub
jg
adc
sbb
fmull
sbb
push
and
xchg
push
cltd
ljmp
mov
repz
xchg
sub
cld
sub
xor
or
sbb
mov
dec
jbe
push
xchg
jo
int3
xor
fists
repnz
push
or
sbb
mov
inc
ja
sahf
xor
xorb
les
add
jecxz
push
sub
adcb
add
jno
push
xor
add
ret
divl
push
xchg
hlt
ror
sbbl
aas
roll
dec
jne
out
pushf
push
xchg
movsb
mov
xchg
xor
mov
jb
push
sbbl
mov
mov
pop
shll
sarl
dec
clc
mov
mov
mov
cmp
cltd
push
sub
jno
mov
xor
movsl
add
push
inc
sahf
stc
arpl
fildll
int
fsub
push
in
xchg
dec
adc
xchg
in
es
lret
cltd
scas
dec
xchg
outsb
xor
shl
scas
push
iret
add
xchg
push
or
movsl
repz
xor
xlat
push
stos
sbb
mov
and
popa
and
repz
out
aam
pop
lret
sahf
faddl
insl
xchg
add
test
repz
mov
sbb
or
divb
std
cmp
xchg
lcall
mov
mov
pop
push
push
xlat
es
jns
sub
push
and
mov
lock
push
cmp
xchg
mov
jge
mov
dec
in
idivb
stos
mov
cmp
dec
loope
addr16
pushf
push
push
ja
pop
daa
out
xor
push
pop
or
xlat
and
jecxz
lahf
adc
xor
je
bound
data16
pusha
xlat
inc
roll
xchg
dec
push
sub
add
mov
ficoml
pushf
popa
jbe
push
popa
in
pop
and
ror
int3
xlat
adcl
jns
pushf
fwait
inc
xchg
and
iret
cwtl
ja
and
xor
push
ds
ljmp
push
mov
cld
inc
incb
in
cld
add
xchg
sbb
jmp
mov
push
mov
lea
insb
pop
lret
cmp
pop
cmc
add
jg
add
mov
lods
or
adc
lea
shrl
popa
cmpsl
mov
movsl
mov
cmp
pushl
ret
add
cmp
lds
mov
push
jbe
in
mov
insb
popa
fstpl
add
mov
inc
and
xchg
std
lret
and
mov
int3
add
bound
or
imul
inc
faddl
and
call
dec
or
leave
dec
jb
fstpt
xchg
mov
add
jne
push
pop
jge
or
xchg
pop
insb
fabs
dec
and
and
lret
in
mov
aad
add
cld
es
push
scas
mov
sub
js
lret
sub
out
add
stc
xchg
lods
fdivr
mov
xor
xchg
mov
icebp
and
std
adc
icebp
pop
xchg
cmp
scas
iret
cli
stos
push
and
loopne
pop
pop
out
stos
sbb
mov
sbb
and
imul
movsl
xchg
ds
jmp
pop
xchg
mov
ficoml
in
test
mov
mov
lea
jno
pop
push
pop
dec
fisttpll
arpl
iret
mov
pop
inc
ret
pop
mov
shl
scas
fisubrl
xchg
out
std
and
fiaddl
dec
mov
psubusb
loope
lret
adc
stos
xor
jne
test
test
andl
mov
lds
je
pop
cmpsl
arpl
cwtl
sub
popf
sub
push
pop
daa
inc
and
xchg
jg
ret
push
arpl
das
fildl
and
in
pusha
and
loop
or
pushf
push
fisttpl
lods
in
sbb
or
imul
jno
cli
mov
push
fcomi
jae
xor
pop
and
sbb
inc
outsl
push
out
stc
sti
mov
in
jae
hlt
cwtl
or
xchg
mov
mov
outsb
les
cmc
incb
shll
and
ja
inc
dec
cmp
lds
and
outsl
pop
xchg
lock
test
in
cltd
and
mov
dec
cmp
gs
fs
sbb
in
mov
xor
mov
jnp
and
or
cmc
test
sti
pushf
sub
stos
or
xor
push
loop
aad
sbb
fs
fistl
pop
sahf
ss
mov
leave
sub
outsb
and
shlb
andb
daa
test
or
pop
in
in
adc
dec
pop
sti
nop
stc
mov
addr16
hlt
xchg
std
mov
mov
js
add
imul
jl
jae
stc
mov
mov
sahf
mov
rclb
out
jmp
icebp
add
cwtl
cs
cld
push
push
bound
movb
jns
movsb
cmpb
xchg
mov
rorb
cmpsb
test
pop
out
fcomi
sub
sbb
or
push
sub
cmp
test
cmpsb
push
adc
fcomi
les
das
pop
repz
cmpsb
xlat
xlat
aas
cmp
cmp
sub
xchg
jno
mul
rcr
pop
shrb
insl
lods
push
mov
jne
out
insl
push
lds
loopne
push
mov
das
lods
outsb
inc
jg
push
add
testb
mov
inc
lcall
dec
lahf
pop
ret
jmp
cmp
cmp
mov
lods
mov
insl
pop
lcall
mov
cmp
sbb
push
adc
in
shl
rcl
sti
cmpb
push
insb
jae
mov
xor
and
pop
and
dec
in
jmp
ret
jno
add
mov
clc
lret
inc
push
dec
nop
and
pop
dec
xchg
inc
daa
mov
fistpll
fldl
inc
cmpsb
int
xchg
pcmpeqw
ljmp
push
fistl
sbb
sub
aam
loope
aas
mov
fmuls
push
test
or
push
sarb
mov
cwtl
cltd
loop
xchg
sub
sub
push
mov
xor
xor
add
mov
rolb
sub
das
imul
in
std
xor
out
ds
mov
jl
cwtl
xor
call
or
test
popa
loopne
mov
jne
fsubrl
pop
dec
in
and
cmp
test
mov
stc
push
or
adc
lds
push
sub
jb
push
es
pop
ficomps
xchg
ljmp
fisubrs
sbb
pusha
sti
out
mov
in
sub
fldl
xchg
xchg
test
imul
add
es
mov
call
dec
test
sbb
loopne
sbbl
pop
rcr
andb
or
rolb
jge
sbb
xor
stos
adc
enter
jg
mov
pop
pop
in
jecxz
cmp
sub
sbb
xchg
push
or
out
and
loopne
enter
and
pop
fs
rolb
add
arpl
push
lcall
xchg
mov
jnp
cmpsb
sti
dec
mov
addl
std
inc
decb
or
stc
or
inc
roll
jmp
xor
paddusw
pop
xchg
jno
lock
in
mov
cmpsl
or
adc
mov
jae
je
push
cwtl
leave
js
xchg
xlat
test
mov
mov
mov
inc
popf
popl
jb
enter
jecxz
xlat
std
lret
jecxz
fldenv
loopne
rol
inc
mov
xchg
test
nop
lahf
adc
int
icebp
js
mov
out
sbb
adc
jno
mov
and
fsubrs
shl
nop
in
aam
cltd
fidivl
lds
mov
loop
test
gs
enter
das
cmc
testl
addl
dec
cwtl
xor
sub
add
or
adc
test
in
aam
out
xchg
sub
add
outsl
std
xorl
ror
test
and
xor
adc
mov
hlt
popf
push
cmc
push
fisubrl
loopne
jmp
loopne
xchg
lock
lea
mov
ds
or
aad
xchg
loope
rcl
gs
mov
pop
repz
cmc
js
sub
mov
in
scas
xor
adc
outsl
fiadds
inc
jo
xacquire
dec
or
mov
enter
mov
rcr
dec
ret
mov
clc
movsl
subl
pusha
cmpsb
and
ss
lcall
jmp
cli
andb
mov
jle
inc
mov
sbb
testl
adc
jg
push
mov
adc
mov
lret
lahf
sub
ret
cmp
adc
pop
rorl
dec
mov
mov
out
out
iret
inc
dec
call
push
mov
dec
cmpsl
xlat
or
push
inc
cmp
out
or
pushf
leave
ret
jne
inc
or
push
sub
scas
and
add
push
bt
add
movsl
or
pop
stos
aam
mov
mov
fisubs
mov
mov
or
movsb
imul
ds
xchg
push
scas
xchg
jnp
dec
mov
xor
mov
xor
push
push
pop
and
lret
push
stc
in
pop
faddl
repz
pop
jo
mov
sbbl
xchg
add
dec
jnp
ljmp
and
mov
pop
xchg
test
mov
xor
push
fbld
xor
lea
or
dec
push
dec
cmpsl
sarl
push
movsbl
rorb
dec
mov
sub
xchg
outsb
ret
loopne
je
cmc
xor
sbb
std
decl
add
movsb
xchg
jo
mov
callw
enter
inc
xchg
sarl
cmp
push
sbb
stos
divl
pop
push
dec
or
inc
pop
add
and
and
mov
mov
xchg
mov
xchg
test
movsb
sbb
adc
cmp
out
mov
mov
mov
ja
lret
push
xor
mov
ficompl
sar
out
dec
push
ds
sbb
es
mov
fldl
xlat
lods
jno
movsl
inc
mov
scas
jp
pop
daa
dec
inc
mov
xor
nop
fsubp
xchg
hlt
fs
scas
xchg
outsl
jle
imul
cmp
lods
fisubl
movsl
add
or
add
fs
outsb
es
xor
ss
movsb
ja
add
mov
sub
lds
or
in
sub
mov
cmpsb
popa
xchg
mov
xlat
push
dec
aam
out
inc
push
cwtl
es
and
inc
test
adc
push
add
fdivrl
imul
loop
pop
cmpsl
dec
cmp
cmp
fwait
jg
push
xor
or
push
jp
jno
test
or
es
fstpl
push
add
ja
cmp
inc
jne
shlb
ja
push
cmp
mov
ja
loope
mov
pop
fiaddl
sbb
xchg
fdivrl
xchg
inc
out
adc
and
test
mov
mov
in
mov
cmp
cmp
rol
ljmp
cltd
sub
int
lods
jecxz
leave
bound
add
add
or
arpl
test
lods
mov
add
mov
and
aas
rcll
sub
fsubl
mov
inc
in
inc
sbb
sub
jl
push
mov
ss
out
sbb
or
mov
fnstcw
sub
int3
inc
inc
fldcw
daa
jl
in
mov
popf
shr
sarl
lods
int
je
or
cltd
jae
push
mov
pushf
sub
cmpsb
neg
mov
imul
xor
jge
jge
lret
push
cs
inc
jno
jbe
push
cmc
iret
bound
jo
cmp
jmp
xchg
loope
je
mov
test
sarl
inc
sbb
push
popa
das
ljmp
stos
sti
ret
roll
pop
out
popa
sbb
lret
mov
jns
rorl
jp
cmp
aaa
lcall
scas
or
popf
inc
inc
test
add
xor
arpl
inc
cltd
addr16
sub
sub
inc
lea
or
js
or
mov
fs
mov
dec
imul
cwtl
fdivp
mov
cmp
jo
sbb
es
sbb
sbb
lahf
xor
and
jecxz
add
cs
mov
jp
fs
test
repz
xchg
aam
jo
lahf
fimull
lock
adc
mov
mov
outsl
iret
rcll
cs
adcl
jae
scas
adc
aas
and
sub
repz
dec
cmpsb
push
xchg
jne
mov
nop
insl
inc
pop
imul
orb
pop
pushf
sub
mov
pop
divl
out
dec
xor
outsb
hlt
pop
jae
fiadds
adc
outsl
sti
std
imul
inc
and
push
jb
cmp
icebp
mov
mov
lds
loop
lahf
jne
stos
insb
arpl
mov
pop
in
pop
bound
mov
sahf
stos
lea
or
dec
jbe
and
cmp
js
mov
sbb
std
mov
dec
cmpsb
lret
pop
push
add
sub
test
push
mov
xlat
idivl
xchg
in
jns
sub
mov
es
mov
push
jno
sub
nop
push
jge
fdiv
adc
call
adc
push
xchg
adc
xchg
repnz
pop
es
and
mov
sub
stos
and
lds
add
shr
pop
fisubrl
das
test
push
roll
lods
dec
mul
mov
or
mov
hlt
pop
shr
mov
je
sbb
and
mov
mov
out
inc
ja
std
ljmp
cmpsb
loopne
add
negb
test
pop
icebp
mov
xor
dec
fcomps
mov
mov
gs
jae
ss
pop
xor
pop
cmpsb
in
mov
lcall
cmpb
xchg
imul
pop
mov
stos
inc
mov
push
std
add
adc
mov
mov
and
jne
nop
sub
fadds
fwait
aad
mov
pop
sbb
es
pop
cmpsb
jno
cmp
aad
pop
jns
inc
xchg
movb
outsb
iret
cld
lcall
bound
sub
xchg
repnz
adc
cli
inc
in
rolb
sbb
push
outsl
in
jo
orl
sti
in
cmp
iret
sub
rcr
jns
mov
pop
lea
loopne
and
fldcw
mov
inc
stc
inc
sbb
faddp
lods
or
jle
pop
pop
mov
xchg
in
push
cmc
inc
mov
mov
cmp
inc
push
and
sub
stos
xchg
mov
sub
addl
dec
test
sub
xor
mov
scas
repnz
mov
inc
pop
rol
cmp
mov
push
ja
movsb
mov
or
and
out
xor
ret
jo
cmp
lcall
mov
shll
push
sahf
xchg
ds
xlat
pop
xchg
ss
dec
lods
sahf
jns
sti
jle
push
mov
fxch
push
subb
xchg
mov
ja
xchg
gs
and
scas
ret
sbb
push
jge
mov
lods
mov
cmp
inc
test
add
push
push
sub
js
or
dec
movsl
movsb
cmp
lds
cmpsl
add
outsl
cmpsb
les
out
mov
lock
movups
push
rorl
xchg
sbb
pop
inc
stos
add
imul
fidivs
ljmp
cltd
sbb
data16
divb
inc
fucomip
jmp
mov
leave
push
xchg
or
jge
out
lcall
jbe
dec
jl
fimull
push
out
and
into
jb
sub
push
jo
insb
xchg
inc
repnz
pop
in
cmp
lock
test
jmp
jmp
pop
sbb
and
es
out
adc
xor
je
xor
xchg
and
jp
adc
cmp
sahf
call
mov
adc
pop
lcall
test
fcmovnbe
aam
aam
sub
push
hlt
cmp
inc
sbb
mov
hlt
dec
aad
das
xchg
out
xchg
int3
cmpsb
push
pop
jb
lcall
leave
mov
fcmovnb
test
or
testb
push
std
xor
in
in
int
or
sbb
cmpsb
jmp
fbld
xchg
gs
mov
xchg
outsl
dec
lahf
shr
in
xor
push
adc
push
fdivrl
add
jae
mov
fnstsw
jno
jmp
jbe
test
popf
inc
imul
aam
imul
or
mov
test
dec
add
shrb
jmp
mov
hlt
xor
xchg
xlat
outsb
push
xor
cmpsb
sarb
dec
mov
or
xor
fdivl
jl
cwtl
sub
fldenv
cmp
dec
jl
or
fsts
fsubrs
push
sub
imul
jmp
adc
lret
dec
pop
mov
addr16
mov
xchg
xchg
in
cs
xchg
test
cmp
push
cs
jb
sarl
jnp
aaa
dec
mov
and
ss
iret
test
movsb
lret
jnp
idiv
rorb
sbb
and
popf
mov
mov
mov
sub
std
xchg
push
sub
ja,pn
cli
xchg
or
orl
add
ja
cmp
push
das
jae
push
mov
fdivrs
outsl
mov
pop
sahf
push
mov
sbb
push
push
fnstsw
addr16
jle
decb
xor
push
icebp
mov
dec
test
push
xchg
and
popf
cmpsl
xchg
enter
inc
mov
pop
shrl
lea
mov
in
and
js
sbb
push
cmp
mov
sub
repnz
xchg
fwait
movsb
sahf
loope
mov
and
pop
shlb
ja
iret
rcl
aas
dec
push
xlat
xor
popf
es
pusha
dec
push
adc
sbbb
jae
sub
pop
adc
ss
mov
inc
pop
or
mov
dec
xor
inc
movsb
cmp
mov
push
out
xorb
inc
jmp
lea
test
test
lcall
test
inc
fs
ss
cld
xor
ss
fldl
pusha
mov
mov
jmp
ret
dec
sahf
movsl
xchg
out
cmp
insb
dec
mov
enter
sbb
inc
notb
idivl
mov
and
pop
fcompl
mov
inc
dec
jmp
sub
xchg
push
sbb
roll
sub
adcb
out
fsubl
out
ja
js
mov
sbb
insb
iret
mov
push
aam
out
inc
sub
sub
pop
add
xchg
jb
inc
ficomps
adc
mov
jae
xlat
xchg
mov
or
hlt
sbb
pop
jg
rcrl
cmpsl
test
push
xchg
add
test
cld
xchg
or
ds
pop
mov
shrb
inc
insb
mov
sti
jecxz
std
xchg
je
adc
insb
mov
jo
xchg
mov
mov
push
add
lahf
je
add
ret
sub
imul
test
jno
cmp
sbb
xchg
dec
xor
and
in
mov
lds
repz
scas
pusha
inc
sbb
loope
out
adc
sub
adc
ljmp
pop
push
and
jnp
jecxz
fistpll
fisubrs
or
fistps
push
mov
cmp
lret
jo
sbb
sub
sti
int
clc
or
ja
mov
push
aaa
xchg
inc
int3
in
sub
sahf
int
cmp
cmpsb
repz
xchg
pop
mov
or
add
xchg
jns
adcb
clc
lods
fsubp
pop
pusha
ja
xchg
dec
icebp
inc
pop
jl
filds
jno
shlb
es
xor
lea
ret
jno
cmp
and
lds
into
daa
pop
mov
shrl
cmp
je
pop
in
cmp
cmc
fsts
mov
sub
add
sbb
orl
pop
sub
add
mov
stc
in
xchg
imul
mov
je
mov
cmp
xchg
mov
xor
cmp
cmp
call
mov
fsubrl
add
or
les
stos
ret
call
and
outsb
sarb
jmp
ret
or
adc
mov
dec
loop
adc
mov
mov
stc
sub
stos
sbb
inc
cmc
mov
dec
cltd
sarl
add
sub
sbb
inc
mov
rclb
cwtl
cmpsl
cwtl
cmp
sbb
jnp
mov
pop
out
inc
adc
inc
stos
push
mov
jg
cs
sub
add
popf
test
push
mov
pop
dec
test
test
xchg
adc
in
dec
mov
xchg
sti
insb
imul
inc
pop
cmc
sarl
mov
outsb
mov
mov
jne
and
es
cmp
je
mov
or
xchg
xchg
in
fsts
scas
push
cwtl
xchg
adc
shl
call
and
lods
popf
bound
ds
out
rclb
pop
popf
insb
sbb
jmp
scas
push
pop
push
nop
cltd
popa
popa
push
shl
fnstcw
mov
push
jb
adc
stc
push
xor
js
or
inc
mov
addl
les
push
stos
sbbl
insl
adc
push
mov
adc
in
jnp
cmp
rorl
addr16
sbb
add
cltd
jne
nop
std
mov
pop
insb
test
pop
lds
into
xor
adcb
lock
lock
dec
and
fldl
les
and
das
hlt
in
push
mov
sbb
xor
mov
cmp
movsl
in
push
into
loope
jbe
mov
mov
adc
cmpsb
pushf
arpl
insl
out
mov
jmp
xor
iret
push
or
jnp
xchg
cmpsb
and
ret
mov
aaa
ljmp
cmpsl
dec
push
loope
cmp
adc
push
popa
data16
insl
cld
and
ds
gs
xor
or
jg
pop
in
lea
pop
dec
test
dec
fcoms
pop
inc
roll
ds
iret
push
jg
jg
aam
frndint
push
mov
push
adc
xor
mov
xor
sarl
fwait
ss
jne
testb
mov
hlt
sub
sbb
repnz
loop
cltd
fidivrl
xchg
cmc
jmp
jl
xchg
cltd
in
jno
add
les
int3
mov
stc
jle
aad
pushf
das
jge
lcall
fsubrp
insb
dec
les
pop
cld
ljmp
inc
lds
cmp
lods
or
insl
adc
and
sbb
or
pop
and
dec
test
in
andnps
ror
mov
sbb
popf
dec
lock
insb
ds
and
cmpsl
hlt
mov
xchg
nop
jae
insb
fwait
mov
jns
cwtl
pop
test
decb
jmp
fadd
orl
jno
push
mulb
cwtl
jbe
cmp
scas
cmp
cmp
bound
lea
adc
test
test
push
int
and
es
inc
mov
sub
jbe
cwtl
fucomp
or
add
mov
lret
dec
mov
pop
rolb
sub
mov
inc
ds
out
xor
dec
dec
cmp
sbb
hlt
ss
xorb
subb
int
inc
push
sti
movsb
aam
out
insb
pop
xor
fs
mov
add
and
push
pop
mov
outsb
push
add
pop
jp
pop
loop
push
in
movsl
stc
out
sbb
dec
ds
repnz
sub
sub
sbb
bound
jle
jge
dec
push
dec
mov
mov
mov
es
xchg
dec
jns
dec
rorb
in
imull
in
fimuls
dec
bound
les
mov
enter
and
fbstp
push
xchg
fisubl
hlt
cmp
jle
leave
mov
mov
dec
pop
frstor
cs
imul
arpl
nop
clc
mov
cmp
aam
das
cltd
mov
push
ss
mov
pop
cld
fcoms
jl
xor
sub
in
pop
and
imul
mov
mov
mov
jg
cmc
mov
push
jmp
add
stc
mov
sub
stc
push
movsb
test
add
pop
and
int3
xor
pop
clc
test
out
xchg
das
inc
add
and
pusha
adc
push
in
mov
sahf
jb
test
mov
xchg
shlb
out
cltd
jl
mov
cld
pop
shlb
in
sbb
scas
or
ljmp
aaa
add
jmp
pop
jl
js
adc
fwait
out
sbb
out
ss
mov
movsb
divb
mov
push
test
cmp
fldt
inc
daa
mov
or
lods
pop
movsb
or
icebp
fwait
xor
jl
data16
push
fidivs
inc
xrelease
sahf
inc
jb
push
lret
orb
or
in
adc
cmpsl
lods
int3
and
imul
mov
sbb
mov
pop
call
sbb
cmp
adc
movsl
test
jg
push
push
cli
and
bound
mov
mov
pop
push
jmp
std
lret
shlb
adc
fdivl
les
and
lcall
fldl
fstl
shlb
push
xor
daa
push
or
inc
mov
push
aas
mov
sahf
adc
push
aaa
mov
add
fildl
aas
out
jb
xchg
sbb
sub
inc
add
nop
mov
pop
pop
test
jns
jbe
pop
sub
cmp
test
insl
lahf
dec
xchg
inc
addr16
mov
jmp
test
xchg
cwtl
jecxz
dec
mov
fsubrl
mov
and
inc
loopne
mov
and
inc
pop
cli
adc
pop
test
pop
mov
mov
insl
and
jbe
mov
sub
mov
inc
in
add
idivb
sahf
jecxz,pn
aam
rorb
lret
pop
cmpsb
or
jmp
jge
adc
xor
cld
xchg
roll
and
pop
imul
popa
jne
lcall
lods
popl
imul
jp,pn
push
stos
icebp
pop
insb
pop
push
sbb
push
inc
cmp
or
popa
xchg
mov
cmpb
cmp
sbb
sbb
or
ljmp
call
mov
push
jb
lret
push
out
out
or
ret
cwtl
push
mov
and
cmp
and
fs
push
call
cwtl
stos
lds
xor
in
inc
out
nop
clc
jle
jge
mov
mov
idivl
mov
xchg
and
pop
inc
xchg
mov
in
lret
aam
pop
cmpsl
pop
cli
xchg
adc
push
clc
repnz
sti
movsb
push
cmp
add
adc
popl
add
aas
lods
leave
imul
clc
push
xchg
adc
sub
out
mov
int3
cltd
and
mov
and
ffree
and
xchg
inc
adc
xor
negl
mov
nop
es
lods
add
data16
xchg
inc
xchg
sub
lea
in
push
imul
add
sti
adc
or
mov
leave
lock
jecxz
push
lret
mov
lret
xlat
add
test
or
or
jl
js
imul
jl
enter
ljmp
mull
push
std
cmp
pop
push
loopne
xchg
ret
push
jp
roll
mov
clc
inc
daa
jns
pop
jmp
pop
lahf
iret
stos
jbe
sub
dec
jle
jnp
lcall
clc
jmp
mov
pop
push
sbb
adc
pop
cmp
xor
inc
sub
cmp
xor
jmp
out
cld
cmp
mov
dec
pusha
xchg
add
mov
out
movsl
shr
movb
call
fnstcw
inc
mov
movsl
mov
jle
jl
dec
out
addr16
adc
mov
test
or
sbb
mov
adc
xorb
jmp
lea
addr16
dec
les
dec
adc
je
notb
out
sbbl
mov
scas
sub
ss
cmc
xor
daa
push
mov
sub
mov
fiaddl
pop
and
sbb
pushl
pop
mov
lcall
jae
sub
sub
fisubs
push
sbb
mov
cmp
fwait
adc
mov
dec
push
lods
inc
roll
mov
mov
imul
jns
sbb
push
pop
icebp
mov
push
add
or
mov
fwait
sub
lahf
jnp
dec
cmc
xor
inc
mov
imul
or
cmpsl
inc
lock
push
add
ja
jno
arpl
ret
xchg
mov
es
scas
setae
xchg
push
or
lret
hlt
adc
popa
xchg
fs
or
shll
jne
jbe
pop
pop
sub
mov
je
je
addr16
pop
test
jmp
loop
mov
cmp
jns
push
mov
inc
addr16
push
cs
out
fistpl
lea
cmp
mov
xchg
mov
pop
mov
aad
inc
inc
sub
mov
mov
cmp
and
or
hlt
popf
mov
push
jp
int3
inc
xlat
mov
xchg
xor
addr16
jae
inc
iret
dec
jae
lretw
sbb
lea
mov
sbb
xchg
sbb
lods
ret
pop
in
movnti
xchg
xlat
mov
aam
pop
xchg
stos
fs
dec
xor
dec
dec
push
mov
or
sahf
les
sbb
cmp
push
mov
fstps
es
push
out
xchg
cli
xchg
fildll
ja
jbe
add
es
cmc
push
adc
add
pop
dec
fimuls
out
loopne
es
mov
jae
adc
jmp
mov
cs
fimull
cmpsb
jbe
xchg
xchg
int
jg
push
cmp
les
int
aad
scas
call
mov
fptan
lods
mov
call
mov
test
movsl
hlt
jno
push
or
out
mov
jmp
and
lret
add
stc
mov
xchg
sbb
roll
or
adc
xchg
xchg
mov
out
cld
hlt
lock
cmpsl
pop
jns
bound
sub
mov
pop
imul
cmp
jge
sub
cmpsl
jmp
cmp
popa
inc
cmp
rcll
scas
mov
push
mov
int3
and
mov
push
loop
sti
adc
ljmp
fucomip
and
dec
lea
