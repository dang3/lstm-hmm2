adc
and
push
push
push
call
push
call
mov
pop
pop
pop
movl
pop
add
ret
mov
call
mov
mov
push
push
push
push
call
mov
cmp
jl
mov
call
mov
lea
dec
push
push
push
push
call
lea
lea
push
push
call
mov
mov
cmp
mov
jg
mov
mov
push
push
call
mov
push
push
lea
push
push
push
push
push
push
call
mov
push
call
mov
mov
mov
push
push
call
push
mov
push
call
push
call
mov
pop
pop
pop
movl
pop
add
ret
movl
pop
pop
pop
pop
add
ret
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
push
lea
call
mov
mov
xor
cmp
mov
je
mov
push
push
push
push
mov
call
shr
and
mov
mov
mov
mov
push
push
call
mov
mov
push
push
call
mov
lea
push
push
call
mov
push
push
push
push
call
push
call
cmp
mov
je
mov
mov
xor
lea
rep
mov
lea
push
push
push
push
movl
mov
call
mov
lea
push
push
push
mov
call
mov
mov
mov
mov
push
mov
mov
call
test
je
mov
mov
mov
push
push
push
push
mov
push
mov
push
call
mov
test
je
mov
push
push
push
push
call
push
call
test
mov
je
mov
mov
xor
lea
rep
mov
lea
push
push
push
push
movl
mov
movl
call
mov
lea
push
push
push
mov
call
mov
mov
mov
add
mov
mov
mov
mov
shr
and
push
dec
call
test
je
mov
mov
mov
push
push
push
push
mov
push
mov
push
call
mov
xor
call
mov
push
push
push
push
call
test
jle
mov
lea
push
push
push
push
mov
call
test
je
mov
push
lea
push
push
mov
call
push
lea
movb
call
lea
movb
call
mov
push
push
lea
push
push
push
push
push
push
call
mov
mov
neg
sbb
mov
and
push
add
add
mov
sub
mov
mov
mov
mov
sub
sub
cltd
sub
lea
sar
add
mov
mov
push
mov
push
push
mov
push
call
mov
inc
call
mov
push
push
push
push
call
cmp
jl
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
mov
movl
movl
mov
test
jne
lea
movl
call
jmp
push
mov
mov
mov
and
dec
mov
je
sub
je
sub
jne
test
je
mov
mov
and
cmp
jne
cmpl
jne
and
mov
movl
testb
je
movl
mov
mov
mov
mov
mov
push
call
push
call
mov
mov
push
push
push
push
call
mov
movl
testb
je
test
je
push
mov
call
mov
or
mov
jmp
movl
mov
test
je
test
je
mov
mov
mov
mov
mov
push
test
je
mov
cmp
je
cmp
jne
mov
push
push
call
test
je
lea
push
push
push
call
test
je
cmpl
jne
movl
lea
push
call
mov
test
je
mov
mov
push
push
call
mov
mov
push
push
mov
call
mov
mov
push
push
call
mov
push
lea
push
push
mov
call
push
lea
movb
call
lea
movb
call
mov
lea
push
push
push
mov
call
mov
mov
movl
push
mov
add
push
mov
push
lea
push
mov
push
push
push
push
call
mov
mov
push
push
call
push
call
mov
mov
movl
mov
mov
pop
test
je
test
jne
mov
mov
and
cmp
jne
and
mov
mov
and
cmp
jne
movl
testb
je
mov
mov
mov
mov
movl
mov
push
call
push
call
mov
push
push
mov
push
push
call
mov
movl
testb
je
test
je
mov
and
test
jne
push
mov
call
mov
or
mov
jmp
mov
test
jne
mov
test
jne
mov
test
jne
mov
test
je
movl
lea
movl
call
pop
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
mov
and
cmp
je
push
mov
push
call
mov
push
mov
push
push
push
call
push
call
mov
push
push
push
push
call
push
call
mov
push
push
push
push
call
pop
jmp
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
call
test
je
mov
push
push
push
call
mov
push
call
test
je
mov
push
push
push
push
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
push
mov
call
mov
push
push
push
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
push
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
cmp
jne
mov
mov
push
push
push
push
mov
push
push
push
push
push
call
ret
mov
mov
push
push
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
movl
call
test
jne
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
mov
pop
pop
mov
mov
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
push
lea
push
mov
push
lea
push
push
push
lea
push
push
mov
call
test
je
pop
pop
pop
xor
pop
ret
cmp
jbe
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
pop
pop
pop
xor
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
pop
pop
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
mov
call
test
je
pop
pop
xor
pop
pop
ret
cmpl
je
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jbe
pop
pop
xor
pop
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
sbb
pop
pop
inc
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
call
test
jne
cmpl
ja
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
push
push
lea
push
call
mov
mov
mov
push
shr
push
movw
lea
push
call
add
mov
pop
pop
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
mov
push
push
push
push
call
neg
sbb
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
lea
push
push
push
push
push
call
add
adc
nop
nop
nop
nop
push
mov
push
call
mov
mov
lea
push
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
push
call
add
ret
nop
mov
sub
lea
push
push
push
push
call
lea
push
call
mov
lea
shl
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
pop
add
ret
nop
nop
nop
mov
push
push
mov
push
xor
push
mov
mov
mov
mov
call
mov
cmp
jne
pop
pop
xor
pop
ret
push
push
call
cmp
jne
push
push
call
test
je
mov
mov
movl
movl
mov
push
call
pop
mov
pop
pop
ret
push
call
push
mov
call
xor
cmp
pop
pop
sete
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
ret
cmp
jne
push
call
mov
ret
mov
push
test
je
mov
cmp
jne
call
test
je
push
push
call
test
mov
je
jmp
movl
xor
pop
ret
mov
mov
push
mov
push
mov
push
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
test
jne
add
ret
lea
push
push
call
add
test
je
add
jmp
lea
movw
mov
push
lea
push
push
call
add
lea
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
call
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
xor
lea
rep
mov
mov
mov
mov
test
movl
mov
pop
je
lea
push
push
push
call
add
jmp
movw
lea
mov
push
push
push
lea
push
push
push
push
push
push
call
mov
neg
sbb
not
and
add
ret
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
lea
lea
stos
mov
push
push
push
push
push
movl
call
add
test
je
mov
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
movl
call
add
test
je
lea
lea
push
push
call
add
test
je
inc
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
jne
push
lea
push
push
call
mov
lea
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
mov
push
mov
push
push
push
lea
movl
push
call
xor
mov
xor
lea
add
mov
rep
mov
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
mov
movl
test
je
push
call
add
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
test
push
jne
pop
pop
pop
xor
pop
ret
mov
test
jne
mov
lea
xor
test
je
push
call
mov
add
inc
test
jne
lea
push
call
mov
add
test
mov
jne
pop
pop
pop
pop
ret
mov
xor
mov
shr
rep
mov
and
rep
mov
test
mov
mov
mov
jle
mov
mov
mov
mov
add
dec
jne
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
xor
mov
push
mov
test
jbe
lea
cmp
je
inc
add
cmp
jb
jmp
mov
lea
mov
test
mov
jne
mov
call
mov
test
jne
mov
mov
movl
call
mov
add
test
je
mov
jne
xor
jmp
mov
push
call
test
je
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
mov
cmp
jae
xor
ret
mov
push
mov
cmp
pop
je
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
lea
push
call
add
cmp
mov
jne
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
lea
test
je
mov
add
test
jne
mov
mov
cmp
jne
push
call
mov
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
mov
push
push
push
mov
mov
call
lea
xor
mov
mov
call
mov
movl
movl
mov
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
push
mov
mov
test
je
mov
push
call
mov
test
jne
mov
test
je
mov
mov
cmp
ja
mov
call
pop
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
push
mov
call
ret
jmp
nop
nop
nop
nop
nop
push
mov
test
je
cmp
je
mov
push
call
push
call
mov
push
push
push
push
call
pop
ret
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
mov
push
call
test
jne
mov
mov
cmp
je
push
call
cmp
je
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
push
cmp
push
push
mov
je
call
pop
pop
pop
pop
ret
call
cmpl
jne
mov
test
je
push
call
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
mov
mov
call
jmp
push
mov
call
test
je
mov
mov
call
push
mov
call
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
call
pop
ret
nop
nop
nop
nop
sub
push
push
push
mov
call
mov
push
call
push
call
mov
mov
push
push
push
push
call
mov
test
je
push
lea
push
push
mov
push
push
lea
movl
movl
mov
mov
call
mov
push
push
push
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
lea
push
push
push
call
lea
push
push
movl
call
mov
add
test
je
push
call
add
cmp
je
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
movl
push
call
add
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
push
push
push
push
call
lea
push
push
xor
call
mov
add
test
je
push
call
add
cmp
je
push
call
mov
add
test
je
push
push
push
push
call
mov
push
push
push
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
push
call
mov
add
test
je
mov
mov
push
push
push
push
mov
mov
call
add
mov
mov
pop
pop
pop
pop
add
ret
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
push
mov
test
je
mov
push
call
push
call
add
pop
ret
nop
nop
nop
push
push
push
push
push
mov
lea
push
push
push
push
movl
call
inc
add
je
mov
mov
lea
push
push
push
push
call
add
test
jne
cmp
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
mov
push
dec
push
cmp
push
ja
mov
mov
mov
jmp
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
push
push
push
push
call
add
test
jne
push
push
call
add
mov
pop
pop
pop
ret
mov
mov
mov
push
push
push
call
add
pop
pop
pop
ret
xor
pop
pop
pop
ret
fcmovnbe
and
fcmovnbe
and
and
fcmovnbe
and
or
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
mov
ret
nop
nop
push
push
push
mov
xor
push
cmp
je
mov
mov
mov
push
push
call
add
test
je
mov
add
push
push
call
add
test
jne
cmpw
je
lea
push
push
push
call
add
test
je
mov
test
je
mov
inc
add
cmp
jge
push
push
call
lea
add
cmpw
jne
mov
pop
pop
mov
movw
pop
pop
ret
pop
pop
pop
or
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
push
push
mov
movw
xor
mov
test
je
and
push
lea
push
push
call
add
test
jle
push
push
push
call
add
lea
push
push
push
call
add
inc
add
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
mov
mov
push
push
movw
mov
push
push
call
add
ret
push
mov
push
movw
call
mov
mov
lea
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
mov
mov
lea
push
push
mov
push
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
lea
lea
push
mov
push
mov
push
push
push
movl
call
add
test
jne
add
ret
mov
lea
push
push
call
add
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
xor
mov
mov
mov
mov
lea
movl
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
push
call
movl
mov
movl
test
je
push
call
add
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
test
jne
pop
xor
pop
ret
push
mov
lea
push
mov
push
lea
push
push
push
push
push
call
test
jne
mov
cmp
je
cmp
jne
mov
test
jbe
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
push
call
test
je
push
call
add
xor
push
call
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
push
movl
mov
call
push
push
mov
call
lea
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
mov
push
neg
sbb
mov
not
and
push
call
mov
mov
xor
lea
test
mov
rep
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
movl
movb
mov
test
je
push
lea
push
push
call
mov
lea
lea
add
rep
mov
push
lea
push
mov
call
mov
mov
shl
add
mov
lea
rcl
inc
add
lea
test
jne
mov
cmp
jle
mov
push
push
push
push
call
add
mov
push
call
add
mov
mov
test
mov
jne
push
push
push
push
call
add
mov
push
call
mov
jmp
mov
or
xor
repnz
not
push
call
mov
mov
or
xor
add
mov
repnz
not
sub
mov
mov
mov
shr
rep
mov
mov
and
rep
test
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
xor
movb
mov
test
je
push
lea
push
push
call
add
lea
mov
push
call
test
lea
jne
mov
push
call
add
mov
push
call
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
mov
call
mov
mov
mov
push
push
push
push
push
call
add
test
je
mov
test
je
push
mov
call
pop
pop
xor
pop
add
ret
mov
push
mov
call
pop
pop
xor
pop
add
ret
mov
push
xor
test
mov
jle
xor
mov
lea
push
push
call
add
test
jle
mov
inc
add
cmp
jl
mov
push
mov
call
mov
lea
mov
rep
mov
cmp
jl
mov
inc
xor
cmp
jne
cmp
je
push
call
add
mov
mov
mov
mov
jmp
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
xor
shr
mov
add
rep
mov
and
rep
mov
mov
mov
jmp
mov
cmp
jg
cmp
jle
mov
mov
shl
add
sub
push
lea
push
call
mov
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
shl
add
shl
push
call
mov
mov
mov
mov
shl
add
add
shl
mov
mov
shr
rep
mov
mov
and
rep
mov
sub
push
mov
shl
add
lea
push
call
mov
push
call
mov
mov
mov
mov
mov
inc
add
mov
jmp
lea
push
push
mov
call
mov
mov
mov
shl
shl
add
add
shl
shl
sub
lea
push
push
lea
mov
shl
add
lea
push
call
mov
add
add
mov
xor
mov
rep
mov
xor
shl
add
pop
shl
mov
mov
add
mov
lea
add
rep
mov
dec
test
jne
mov
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
lea
push
mov
call
mov
xor
movb
mov
test
jle
xor
mov
mov
test
je
cmpb
je
mov
push
push
push
call
add
mov
mov
add
push
push
push
call
add
mov
inc
add
cmp
jl
mov
push
call
pop
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
push
push
push
push
call
add
lea
push
push
call
mov
add
test
je
movb
mov
inc
mov
add
mov
je
mov
mov
push
push
call
add
test
jne
mov
jmp
inc
push
push
call
add
test
jne
mov
cmpb
je
push
push
call
add
test
jne
mov
push
push
call
add
mov
dec
cmp
jne
mov
lea
sub
push
push
push
call
add
test
je
jmp
lea
or
xor
repnz
mov
not
dec
push
lea
push
push
call
add
test
je
mov
mov
add
test
jne
pop
pop
pop
xor
pop
add
ret
pop
pop
pop
mov
pop
add
ret
nop
nop
sub
push
mov
push
push
lea
push
push
movl
mov
call
push
push
mov
call
lea
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
mov
push
neg
sbb
mov
not
and
push
call
mov
mov
xor
lea
test
mov
rep
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
movl
movb
mov
test
je
push
lea
push
push
call
add
lea
push
mov
call
mov
lea
lea
loop
inc
add
movsl
mov
push
mov
lea
push
call
mov
mov
shl
add
lea
and
inc
add
add
add
movsl
mov
lea
test
jne
mov
cmp
jle
mov
push
push
push
push
call
add
mov
push
call
mov
add
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
mov
mov
not
test
je
mov
push
mov
call
jmp
mov
call
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
jmp
mov
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
mov
mov
xor
shr
rep
mov
add
and
rep
mov
mov
jmp
mov
cmp
jg
mov
cmp
jle
mov
mov
shl
sub
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
shl
add
shl
push
call
mov
mov
mov
mov
shl
add
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
sub
shl
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
not
test
je
mov
mov
shl
add
shl
push
push
call
pop
pop
pop
pop
add
ret
mov
shl
add
shl
push
push
mov
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
mov
movl
test
je
push
call
add
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
je
mov
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
pop
pop
pop
pop
ret
mov
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
xor
shr
mov
add
rep
mov
and
rep
pop
mov
mov
pop
pop
pop
ret
mov
cmp
jg
mov
cmp
jle
mov
mov
shl
sub
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
pop
mov
pop
pop
pop
ret
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
shl
add
shl
push
call
mov
mov
mov
mov
shl
add
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
sub
shl
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
push
call
mov
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
shl
add
xor
shl
mov
shr
rep
mov
and
rep
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
xor
mov
rep
mov
push
push
push
call
lea
add
test
jne
mov
mov
xor
mov
push
push
push
rep
call
movw
lea
add
test
jne
mov
mov
xor
mov
push
push
push
rep
call
add
movw
movw
movw
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
test
je
push
push
call
add
lea
push
push
push
push
call
add
test
je
pop
pop
xor
pop
ret
mov
push
push
push
push
call
mov
add
push
call
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
mov
test
je
mov
push
push
call
add
jmp
mov
mov
push
push
push
push
call
lea
add
test
jne
mov
test
je
test
mov
jne
mov
mov
xor
mov
push
push
push
rep
call
mov
movw
mov
add
test
je
push
push
push
push
call
push
push
push
call
add
add
test
jne
mov
test
je
test
mov
jne
mov
mov
xor
mov
push
push
push
rep
call
add
movw
movw
movw
test
je
push
push
push
push
call
add
push
push
push
call
add
pop
pop
pop
pop
ret
push
lea
push
push
push
push
call
add
test
je
xor
pop
ret
mov
mov
mov
push
push
push
call
mov
add
push
call
mov
pop
ret
nop
nop
mov
push
mov
push
push
mov
push
push
push
push
call
lea
add
test
jne
mov
push
push
push
push
call
push
push
push
call
lea
add
test
jne
mov
push
push
push
push
call
add
push
push
push
call
add
pop
pop
pop
ret
nop
nop
nop
nop
nop
mov
push
push
push
mov
push
test
je
mov
push
push
call
add
jmp
mov
mov
mov
push
push
push
push
push
call
lea
add
test
mov
jne
mov
mov
test
je
mov
test
mov
jne
movl
mov
mov
xor
mov
push
push
push
rep
call
mov
mov
add
movw
push
push
push
push
push
call
push
push
push
push
mov
call
mov
mov
and
lea
add
and
test
mov
jne
mov
mov
test
je
mov
test
mov
jne
movl
mov
mov
xor
mov
push
push
push
rep
call
mov
add
movw
movw
movw
push
push
push
push
push
call
add
push
push
push
push
mov
call
mov
add
and
pop
pop
pop
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
mov
push
push
push
push
push
call
lea
add
test
mov
jne
mov
push
push
push
push
push
call
push
push
push
push
mov
call
mov
mov
and
lea
add
and
test
mov
jne
mov
push
push
push
push
push
call
add
push
push
push
push
mov
call
mov
add
and
pop
pop
pop
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
jmp
mov
jmp
push
push
push
mov
push
call
movl
mov
pop
ret
push
mov
call
testb
je
push
call
mov
pop
ret
jmp
push
call
pop
ret
mov
jmp
mov
call
push
push
push
lea
call
pushl
andl
pushl
pushl
pushl
call
mov
mov
mov
mov
mov
leave
ret
mov
ret
push
mov
push
push
cmpl
push
jne
push
push
xor
mov
call
call
push
push
push
mov
pushl
mov
call
test
je
call
mov
test
je
mov
mov
call
test
jne
mov
mov
call
call
jmp
pushl
mov
mov
push
call
push
call
test
pop
je
push
push
mov
call
movl
mov
call
pushl
call
mov
pop
pop
jmp
cmpl
jne
push
call
mov
call
mov
call
mov
test
je
mov
mov
call
call
push
call
call
push
push
call
jmp
cmpl
jne
push
lea
call
call
push
call
pushl
call
mov
mov
mov
push
pop
pop
leave
ret
cmpl
jne
push
push
call
test
je
push
push
call
call
push
mov
call
mov
pop
jmp
cmpl
jne
call
pushl
call
push
pop
ret
int3
jmp
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
xchg
mull
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
neg
neg
sbb
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
jmp
mov
test
jne
cmp
jle
decl
mov
cmp
mov
mov
jne
push
call
test
pop
mov
jne
xor
jmp
andl
mov
push
push
mov
call
incl
pop
pop
jmp
test
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
mov
sub
jmp
push
call
andl
pop
pop
push
pop
ret
push
mov
push
mov
push
mov
push
mov
test
jne
cmpl
jmp
cmp
je
cmp
jne
mov
test
je
push
push
push
call
test
je
push
push
push
call
test
jne
xor
jmp
push
push
push
call
cmp
mov
jne
test
jne
push
push
push
call
test
je
cmp
jne
push
push
push
call
test
jne
and
cmpl
je
mov
test
je
push
push
push
call
mov
mov
pop
pop
pop
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
push
push
mov
push
mov
mov
mov
lea
push
ret
int3
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
add
inc
shll
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
hlt
decl
jo
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
roll
stc
dec
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
add
mov
jmp
mov
add
jmp
mov
jmp
lea
jmp
lea
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
add
decl
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
in
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
add
dec
shll
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
push
call
ret
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jb
inc
add
mov
add
jmp
mov
add
jmp
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
add
and
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
add
push
shll
jmp
int3
int3
lea
jmp
mov
jmp
push
push
mov
push
call
lea
xor
mov
movl
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
call
ret
nop
nop
nop
nop
nop
sub
push
mov
lea
lea
push
mov
lea
push
push
push
push
push
push
push
push
movl
call
test
jne
mov
test
je
mov
test
jne
movl
jmp
movl
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
test
mov
jne
call
lea
mov
push
push
push
push
push
push
push
push
push
movl
call
xor
pop
mov
mov
add
ret
cmp
jne
mov
test
jne
call
push
push
push
push
push
push
push
push
mov
push
call
xor
pop
mov
mov
add
ret
lea
call
push
push
lea
movl
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
cmp
jne
call
push
push
push
push
push
push
push
push
mov
push
call
lea
movl
call
xor
pop
mov
mov
add
ret
mov
mov
pop
mov
add
ret
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
push
mov
push
push
mov
push
call
mov
mov
test
jne
mov
call
cmp
je
mov
call
cmp
jne
mov
push
mov
call
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
add
mov
mov
push
push
call
mov
call
mov
neg
sbb
and
add
push
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
mov
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
lea
push
call
mov
add
test
je
xor
push
mov
lea
mov
push
mov
push
mov
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
je
mov
movl
test
jne
movl
mov
mov
push
lea
push
push
push
push
call
push
call
add
pop
pop
add
ret
sub
push
push
mov
push
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
push
setne
mov
call
add
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
push
movl
call
add
mov
test
movb
je
mov
push
mov
call
jmp
xor
mov
movb
call
mov
pusha
push
call
mov
cwtl
jp
add
scas
add
add
jno
add
add
add
add
add
add
loopne
pop
add
add
add
jle
sti
mov
outsl
add
add
aad
jno
add
in
add
push
push
push
push
lea
push
push
push
call
popf
imul
add
add
ljmp
mov
add
movsb
add
rorl
add
repnz
add
int
jecxz
ror
leave
add
outsl
mov
sub
pop
popl
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
pop
add
mov
mov
add
push
pop
pop
jge
add
mov
mov
add
insb
add
add
pop
add
push
out
gs
add
jbe
add
andb
in
lcall
push
push
lea
push
push
call
jnp
jbe
add
pop
cwtl
add
mov
lea
adcl
add
add
mov
push
shll
in
add
out
pop
add
ror
fmul
add
push
add
pop
xchg
out
in
lock
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
add
clc
add
add
int3
add
int3
bound
lea
roll
in
in
mov
test
in
fadds
add
add
stos
loope
add
sub
pop
push
push
push
push
push
push
push
call
fmul
pop
xchg
xchg
movsb
xchg
add
cli
movsl
add
jmp
out
loope
add
add
xchg
test
add
fucom
addr16
pop
add
add
push
add
xchg
mov
add
mov
data16
xchg
push
pop
mov
testl
pop
call
push
lea
push
push
lea
push
push
call
add
add
pop
gs
fistl
add
add
add
test
rolb
out
add
add
jb
mov
add
add
lcall
sgdtl
add
push
push
push
push
call
repnz
add
scas
data16
fs
mov
pop
add
pop
test
add
add
push
mov
popf
test
add
filds
mov
add
cmpsb
pop
in
add
mov
outsl
out
push
sub
pop
push
push
push
push
call
pop
cld
add
jle
rolb
add
push
stos
mov
jb
mov
movb
lea
test
nop
xorb
add
xchg
test
jmp
add
out
add
faddl
in
jnp
out
sub
pop
call
jmp
push
push
lea
push
push
push
call
add
add
push
add
and
push
add
loope
xchg
pushf
pop
jmp
out
test
add
out
add
sahf
add
stos
popa
lret
mov
mov
sub
pop
ret
push
push
push
lea
push
push
lea
push
push
push
push
push
call
jp
je
out
ret
add
fisttpll
test
les
mov
mov
mov
scas
testb
pop
shlb
mov
mov
add
add
lret
xchg
in
out
test
add
inc
hlt
push
push
push
push
push
lea
push
call
mov
shll
add
add
int3
push
addr16
out
xchg
iret
xchg
add
in
pop
add
add
mov
push
add
add
test
add
fidivs
xchg
add
add
mov
test
enter
sti
add
pop
pusha
push
add
add
mov
pop
mov
push
push
lea
push
push
call
add
jo
iret
les
push
lods
pop
add
add
add
add
add
mov
add
loop
movsb
add
add
lcall
pop
in
push
lea
push
push
push
lea
push
push
push
call
pushf
stos
stos
scas
lods
add
out
loopne
add
add
add
jbe
xchg
mov
shl
mov
jmp
imul
pop
shrb
lock
cwtl
add
add
out
ret
mov
add
roll
pop
add
add
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
add
lods
into
clc
add
add
leave
test
add
push
jle
pop
add
pop
push
add
test
add
add
pop
add
test
push
push
push
lea
push
push
push
lea
push
call
add
out
jae
fists
add
add
add
add
icebp
fsubr
out
int3
out
mov
mov
add
lcall
sbb
push
lea
push
lea
push
push
push
push
push
push
push
push
call
add
lods
les
add
push
stos
incb
add
add
add
aad
lods
mov
mov
mov
mov
mov
add
push
jmp
xchg
add
js
add
cmpsl
push
jns
mov
test
lcall
les
add
push
push
shr
push
sub
add
dec
sub
add
sub
rol
add
rol
not
pop
sub
inc
lea
pop
push
push
lea
push
push
call
stc
add
jl
lcall
mov
add
add
mov
add
lret
test
out
int
popa
jo
pop
add
push
addb
fstpt
lock
pushl
call
push
push
push
call
add
add
movsb
add
lock
xchg
js
test
add
pop
jle
mov
pusha
add
push
cmpsl
lods
add
int3
mov
jge
add
out
add
jae
add
bound
add
add
lcall
add
add
add
add
jae
int
pushf
add
faddl
inc
lock
push
lea
push
push
lea
push
push
push
call
bound
add
shll
push
sbb
cli
mov
popf
add
jbe
out
jo
stos
rcrb
aam
loope
add
mov
insb
je
imul
in
add
loop
sub
pop
movl
lea
push
push
push
push
push
lea
push
push
lea
push
call
add
mov
lock
jb
push
mov
add
roll
enter
mov
not
mov
cmpsl
fidivrs
gs
add
add
fs
in
rolb
pop
push
pushl
push
push
push
push
push
push
push
call
mov
pop
test
ret
add
add
add
add
add
push
std
mov
pop
stos
cmpsb
mov
jge
add
in
pop
fwait
add
jb
mov
loop
mov
lret
push
add
xlat
repnz
lea
hlt
add
push
imul
fdivrl
in
in
pushl
call
push
push
push
lea
push
lea
push
push
push
call
xchg
add
add
cmc
jp
add
add
shlb
xchg
popf
fs
add
add
jbe
add
push
add
ljmp
pop
addb
mov
lock
loopne
add
add
addb
call
push
push
push
call
lahf
add
data16
add
stos
add
cwtl
add
add
add
in
add
in
xchg
stos
mov
xchg
fwait
cltd
xchg
add
scas
add
push
add
add
movsl
add
xchg
mov
mov
jne
pop
rolb
bound
add
add
push
xor
cli
mov
jne
adc
rol
push
and
add
sub
add
inc
pop
not
xor
sub
add
pop
push
push
push
push
call
xchg
add
cwtl
add
ja
add
push
add
add
push
ret
repnz
add
testl
mov
add
add
add
add
repnz
lcall
xchg
add
xchg
add
imul
add
xchg
sub
pop
pushl
push
lea
push
lea
push
push
call
xchg
rcr
jbe
pop
add
add
loopne
mov
add
in
rolb
xor
mov
mov
xchg
add
add
jecxz
fmuls
lods
add
clc
push
add
add
xchg
add
xchg
add
in
repnz
xchg
scas
add
addr16
pop
call
push
push
push
lea
shl
xor
shr
push
or
inc
add
add
sub
sub
inc
xor
rol
inc
pop
not
add
pop
push
push
push
push
push
lea
push
lea
push
call
add
pop
fwait
lds
add
mov
ret
add
add
repnz
mov
jae
loop
add
mov
add
add
out
add
ljmp
in
std
xchg
jge
jo
add
sub
pop
push
push
lea
push
push
push
call
test
add
add
pop
neg
mov
lcall
add
mov
add
loop
add
mov
sub
pop
push
call
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
jbe
mov
add
into
add
std
sar
lea
popf
add
lcall
lds
icebp
add
into
add
notb
add
add
fdivr
lcall
clc
push
lea
push
push
push
lea
push
push
push
lea
push
call
xchg
add
push
mov
add
add
xchg
inc
jl
mov
fildl
js
add
jb
lock
jmp
add
mov
in
loopne
lcall
push
push
push
push
lea
push
push
lea
push
push
push
call
fs
leave
add
add
iret
jmp
loop
jp
add
cmp
pusha
call
add
add
jne
add
in
loopne
lcall
pop
hlt
push
push
lea
push
push
push
push
push
call
add
add
add
jge
cwtl
add
add
clc
jl
jo
mov
add
mov
mov
add
jno
out
insb
add
add
add
lcall
pop
in
push
push
push
lea
push
push
push
push
push
push
call
add
add
mov
fwait
mov
lods
add
movsb
add
insb
add
out
js
movl
add
xchg
out
xchg
rolb
xchg
repnz
rolb
ret
add
add
push
push
push
push
push
push
push
push
call
fistpl
js
mov
sahf
into
add
add
add
in
pushf
filds
add
cmpsb
add
adc
xchg
mov
lcall
test
add
mov
lcall
ret
popf
dec
add
mov
xor
push
push
call
add
cltd
add
mov
mov
stos
add
in
mov
add
pop
cli
test
add
loopne
pop
gs
push
add
ja
mov
add
mov
add
faddl
mov
js
jne
sub
pop
add
push
push
push
lea
push
call
jae
cmc
fwait
add
add
add
add
mov
out
cmp
sub
add
andl
mov
xor
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
shl
rcr
roll
mov
lods
enter
add
add
add
pop
add
fildl
mov
xchg
add
xchg
push
add
int
add
lcall
lock
push
push
push
push
call
out
add
add
jae
stos
mov
gs
enter
add
jecxz
cltd
imul
pop
add
rolb
cwtl
add
imul
int3
add
cmc
stc
sub
pop
pop
mov
xor
push
push
push
push
lea
push
push
call
int3
int3
rolb
add
insb
int
scas
add
xlat
pusha
add
arpl
jns
jne
les
add
add
push
mov
add
lcall
mov
xor
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
loope
mov
add
add
ljmp
movsb
scas
out
mov
add
add
add
mov
add
movsl
mov
jnp
add
jecxz
add
pop
add
add
add
pop
add
add
push
icebp
add
sub
pop
sub
push
push
lea
push
push
push
call
int3
add
jb
lret
mov
imul
loopne
xchg
arpl
add
xchg
add
fwait
add
lret
add
add
mov
add
movb
xchg
add
pop
rep
push
push
lea
push
push
push
push
call
add
add
aam
in
into
mov
testb
stos
lcall
add
jae
stos
popf
add
movsl
lret
jnp
ret
add
sub
pop
pop
mov
push
lea
push
push
push
lea
push
push
push
push
push
push
call
test
jp
add
add
jecxz
mov
add
cwtl
mov
add
mov
mov
pusha
add
add
mov
add
add
in
fcomps
pop
in
push
lea
push
lea
push
call
push
add
mov
add
mov
add
add
jge
mov
add
pop
or
cld
add
add
add
enter
hlt
pop
add
push
push
push
push
push
push
push
call
out
push
add
jb
gs
std
add
pop
lret
push
add
mov
pop
mov
js
mov
jne
lock
add
lcall
ret
popf
dec
add
push
push
push
push
push
push
call
xchg
add
mov
add
add
repnz
jnp
add
add
mov
add
mov
add
add
lea
pop
mov
xor
push
push
lea
push
call
add
add
add
outsl
add
popf
mov
fmull
fldl
pop
add
out
movsl
sub
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
push
call
add
add
gs
add
add
hlt
scas
xchg
pop
mov
add
int
ja
lds
jae
mov
xchg
cmpsl
lds
add
add
add
xchg
add
lcall
adc
push
push
push
lea
push
call
mov
out
add
fiadds
lcall
aam
pusha
mov
fisubrl
arpl
push
add
push
addr16
add
iret
movsb
mov
ret
pushf
add
pop
cmpsl
add
add
in
lock
lcall
les
add
push
push
push
push
push
lea
push
push
call
ret
add
add
add
je
in
add
add
ficomps
push
add
add
fs
add
add
add
data16
je
add
mov
in
mov
push
push
push
push
call
add
lcall
incb
add
in
xchg
xchg
jecxz
jnp
cld
xchg
aam
int3
lods
add
add
add
out
testb
mov
push
add
jne
cmpsb
add
add
xchg
je
add
jne
push
mov
aad
mov
fwait
xchg
add
lcall
or
push
lea
push
push
call
sar
add
add
add
std
add
test
add
mov
shr
je
add
lea
iret
add
add
add
add
data16
add
pop
mov
lds
add
iret
push
pop
xchg
lret
jns
add
add
push
push
push
lea
push
push
push
push
push
push
call
imul
cltd
add
test
ljmp
movb
ret
testl
leave
out
add
add
subb
in
fdivr
lcall
ret
push
push
push
lea
push
lea
push
push
push
push
call
add
data16
add
add
push
pop
out
adcl
jb
mov
xchg
mov
jns
add
rolb
fidivrl
add
jns
testb
add
jbe
mov
lret
test
add
add
sub
pop
mov
push
push
inc
push
or
inc
add
sub
sub
add
inc
pop
xor
pop
push
push
push
lea
push
push
push
lea
push
push
call
add
add
add
lcall
popa
aam
shrl
imul
add
add
pushl
push
push
push
push
push
push
push
call
add
add
add
pop
add
je
fwait
push
mov
add
pop
push
add
add
jns
sarl
add
hlt
add
add
bound
hlt
testl
mov
xchg
bound
scas
add
add
ljmp
add
add
sub
pop
call
push
push
push
rol
lea
sub
push
xor
add
shl
xor
dec
sub
not
shl
inc
pop
add
add
shr
pop
push
push
call
hlt
add
add
in
mov
add
mov
jl
add
add
bound
add
add
mov
in
clc
pop
push
push
push
push
push
push
push
lea
push
lea
push
push
push
call
fidivs
mov
add
add
add
add
add
gs
add
imul
lods
add
test
xchg
jno
mov
add
cwtl
fcoms
jne
int
int
addr16
cli
xchg
jno
xlat
out
add
pop
imul
pop
push
call
push
push
push
lea
push
lea
push
push
push
lea
push
call
push
add
push
mov
add
cwtl
loopne
data16
mov
add
mov
out
xchg
xlat
mov
pop
add
rcr
mov
loope
cmc
rol
cltd
xlat
icebp
add
pop
add
push
mov
mov
test
int
fs
cld
add
stos
js
add
decb
pop
lds
clc
push
push
push
push
push
push
push
call
jns
mov
int
popl
xchg
jnp
jp
xchg
pop
add
cltd
in
add
repnz
add
add
add
push
lea
push
push
call
add
out
loop
pop
add
pop
jne
xchg
add
add
out
gs
xchg
xorb
fiaddl
xchg
je
je
repnz
add
jae
add
add
imul
add
out
mov
movsl
mov
mov
xchg
jmp
in
hlt
pop
mov
push
dec
sub
inc
pop
add
add
push
not
dec
pop
add
mov
push
push
push
call
test
xchg
test
fs
push
add
lret
ja
add
shlb
add
push
xchg
xchg
add
insb
add
ret
add
test
imul
mov
stos
mov
add
mov
fildl
jne
add
add
add
add
add
add
lcall
xor
push
push
push
push
push
call
add
mov
cli
add
shll
jns
stos
jno
call
push
jle
add
out
push
test
insb
pop
mov
push
cmpsb
add
stos
push
stc
fidivl
rolb
lcall
les
lea
push
call
add
imul
int3
add
add
add
add
mov
test
mov
add
push
add
sub
pop
add
push
push
push
lea
push
push
lea
push
lea
push
push
call
jb
add
jb
add
add
mov
out
add
popf
lds
add
add
pop
add
out
xchg
push
xlat
test
bound
add
jecxz
add
in
imul
add
loope
add
mov
mov
lret
icebp
add
add
mov
sub
pop
mov
xor
push
not
sub
pop
add
pop
push
dec
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
push
call
add
add
xchg
pusha
mov
add
mov
int
jae
push
pop
jno
div
sahf
xchg
mov
sti
add
add
in
fdivr
lcall
or
push
push
push
push
lea
push
lea
push
push
push
call
add
add
add
add
add
sti
add
add
cmpsb
pop
push
idiv
jb
outsl
in
add
cmpsl
fistpl
mov
jp
push
out
out
subb
roll
lcall
les
add
push
xor
inc
rol
rol
pop
rep
mov
push
push
push
push
push
push
call
add
xchg
pushf
fucom
repnz
add
rolb
ja
in
clc
lea
xchg
add
push
push
ljmp
test
mov
mov
mov
movsb
add
imul
popa
add
add
in
add
add
add
pop
add
in
jl
push
movb
add
mov
in
pop
xor
push
push
lea
push
push
push
push
lea
push
call
push
pop
add
lcall
push
test
add
mov
std
add
sub
pop
add
push
push
push
push
lea
push
push
push
push
call
add
add
loopne
push
arpl
add
add
imul
xchg
imul
lods
xchg
add
ljmp
loopne
or
je
mov
xor
push
push
push
lea
push
push
push
push
push
call
add
loope
pusha
arpl
sti
add
scas
popl
add
fcmovnb
add
iret
add
add
add
mov
add
add
aad
add
add
jl
jnp
cltd
cmpsb
sub
pop
mov
xor
push
push
push
call
add
std
add
movsb
add
mov
add
cmc
add
loopne
pop
mov
mov
lds
or
add
jns
mov
scas
mov
fs
ret
cltd
clc
js
mov
add
mov
jecxz
add
repnz
lea
push
push
lea
push
push
lea
push
push
push
call
add
add
add
fistps
data16
mov
cli
add
lahf
test
loop
clc
add
mov
cwtl
add
jb
loop
orb
add
lods
add
add
loopne
addb
cltd
add
add
shlb
add
add
add
mov
fst
enter
add
add
stc
add
lret
loopne
add
push
push
lea
push
push
push
lea
push
call
jmp
shl
add
xchg
ficoml
add
mov
mov
je
lock
lds
mov
add
test
cltd
add
aam
fdivl
mov
in
andl
sti
jbe
add
add
add
push
push
push
push
push
push
push
lea
push
call
add
lcall
fwait
xchg
out
lds
xchg
add
in
iret
push
add
filds
lret
cwtl
push
int
scas
loope
add
add
sub
pop
mov
xor
push
add
shl
dec
pop
add
push
lea
push
push
push
push
call
flds
mov
add
add
lahf
cbtw
add
add
add
aad
jp
mov
add
shl
mov
add
imul
add
add
pushf
jecxz
add
cmpsb
push
lahf
add
fcoms
pop
push
push
lea
push
lea
push
push
lea
push
call
add
add
lret
jae
add
cmc
jmp
test
fs
repnz
add
add
call
lods
add
testb
add
add
fadds
sub
pop
rep
push
shr
sub
dec
pop
mov
xor
push
lea
push
call
add
add
add
add
xchg
push
addr16
xchg
stos
add
jp
xchg
add
movsl
jns
add
add
add
je
cli
xchg
out
into
xchg
pop
add
mov
pop
add
std
cmpsb
ljmp
add
lcall
leave
je
push
push
lea
push
push
push
call
add
add
addl
sahf
negl
add
ja
in
add
fiaddl
xchg
fs
pusha
add
ret
add
add
int3
mov
stos
mov
mov
xchg
hlt
iret
xchg
xchg
add
js
in
in
pop
mov
add
push
push
push
push
lea
push
push
push
push
call
push
jmp
xchg
cld
insb
int
int3
add
test
fsubr
ficoml
iret
add
jb
out
test
ret
cmc
lds
imul
add
pop
xchg
add
les
add
add
roll
add
add
jle
add
jbe
fiaddl
movb
add
push
add
pop
rep
push
shl
xor
pop
pop
push
push
dec
push
push
pop
add
rol
sub
dec
shl
pop
rol
xor
shr
pop
push
push
push
lea
push
push
call
fldl
push
lods
add
add
int
roll
jb
add
mov
push
push
add
flds
mov
add
add
push
add
push
add
in
add
out
bnd
add
add
addr16
push
jle
sti
out
add
pop
mov
push
lea
push
push
lea
push
push
push
push
call
add
cli
xchg
xchg
pop
add
iret
jle
add
add
mov
cltd
xchg
add
fsubr
cmpsl
add
add
xorb
addl
jle
pop
xchg
rcll
out
imul
add
xchg
add
add
add
mov
mov
push
lea
rol
pop
mov
push
push
lea
push
push
push
call
mov
add
add
icebp
add
mov
mov
out
testb
mov
add
add
aam
in
xchg
mov
mov
add
add
add
lret
in
lcall
loopne
dec
not
dec
pop
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
lret
add
je
jns
out
jmp
repnz
testb
mov
add
pushf
xlat
in
jge
mov
mov
add
sub
pop
mov
push
add
rol
shl
pop
add
push
inc
pop
push
push
push
push
lea
push
lea
push
call
lock
xchg
test
ret
lods
sahf
add
fistpll
push
popa
jns
lods
pop
add
add
in
add
out
add
add
add
add
int3
test
mov
fwait
clc
sahf
add
add
scas
mov
idiv
loopne
add
add
xchg
mov
mov
push
add
in
add
fldl
push
shr
pop
push
push
push
push
push
lea
push
push
push
call
mov
int
pop
add
add
xchg
rorl
fucomip
lods
mov
loopne
rolb
mov
add
movb
xchg
pop
jl
mov
pop
add
data16
js
rolb
ret
add
add
data16
sub
pop
mov
pop
push
lea
push
push
push
lea
push
push
push
push
lea
push
push
call
add
mov
loope
pop
mov
add
add
add
bound
add
mov
lcall
pop
push
xor
pop
pop
push
sub
pop
leave
ret
push
add
pop
push
mov
push
lea
push
push
push
push
lea
push
push
push
push
call
lods
bound
add
jmp
mov
cmpsb
add
mov
cwtl
add
add
xchg
push
add
fiaddl
mov
mov
add
add
add
aad
popl
stos
mov
divl
loop
nop
lods
add
add
push
add
sub
pop
push
push
sub
pop
push
push
shr
shl
inc
pop
push
push
push
push
call
add
andb
xchg
add
clc
jnp
mov
pop
cli
add
ret
add
add
xchg
out
mov
xchg
mov
lods
mov
jo
insb
std
sti
hlt
sub
pop
push
push
xor
pop
movl
addl
push
dec
pop
test
je
push
push
push
push
push
lea
push
call
xchg
cmpsl
add
aad
push
pop
mov
add
add
std
add
enter
jge
push
add
iret
cmpsl
push
repnz
jecxz
xchg
rolb
add
lret
in
call
mov
push
sub
pop
pop
push
push
push
lea
push
push
lea
push
call
ja
add
lcall
cmc
add
enter
pop
add
add
rcll
sub
pop
pop
push
push
push
push
call
xlat
jmp
imul
mov
rolb
jno
jmp
jb
add
cltd
xchg
loope
add
hlt
add
add
add
iret
jl
mov
add
add
incb
fwait
ficoms
jo
add
add
add
add
les
in
add
movsb
lcall
lcall
push
push
lea
push
push
lea
push
call
popf
mov
fwait
add
jbe
add
add
add
test
xchg
xchg
data16
push
add
scas
add
add
incb
lcall
push
lea
sub
pop
leave
push
push
lea
push
push
push
lea
push
call
xchg
roll
add
add
cmc
addl
add
sahf
add
xchg
enter
movsb
clc
lock
popf
add
stos
mov
push
add
lret
add
jecxz
add
sarl
mov
add
add
push
call
push
push
add
xor
pop
mov
add
push
inc
pop
push
push
push
push
push
call
stc
add
add
add
add
push
pop
add
jp
jp
add
xchg
add
add
mov
add
add
mov
mov
sti
sub
pop
push
push
sub
sub
ror
pop
push
push
push
push
lea
push
push
push
lea
push
call
fwait
add
mov
push
add
hlt
into
lock
pusha
adcb
mov
add
outsl
add
xchg
add
add
add
mov
add
add
lahf
subl
neg
push
nop
add
push
jbe
jns
mov
nop
pop
fbstp
roll
sti
pop
jp
int3
jp
ret
add
gs
into
sub
pop
testl
addl
push
shl
pop
push
push
lea
push
lea
push
push
push
lea
push
push
push
push
push
call
jmp
mov
add
add
add
add
mov
out
mov
add
negb
add
lock
call
out
pop
mov
push
push
push
push
push
push
push
call
add
add
mov
cli
add
ja
pop
mov
int3
add
cld
leave
mov
mov
add
add
addl
add
jmp
insb
add
add
roll
pop
pushl
push
ror
pop
push
push
lea
push
push
push
push
push
push
push
push
call
jo
fiaddl
enter
add
add
add
lret
lret
test
shlb
mov
je
jmp
imul
add
add
pop
add
cmpsl
hlt
add
rcrb
movsb
add
fdivr
lcall
add
jecxz
rol
pop
call
push
push
push
push
push
push
push
push
push
push
call
add
mov
push
int3
add
cmpsl
stc
cltd
jle
jmp
add
add
cmc
fildl
cltd
add
gs
add
jns
pop
arpl
add
add
add
add
add
lcall
jge
add
test
call
inc
lea
xor
pop
pop
push
rol
sub
ror
add
pop
pop
push
xor
sub
pop
pop
pop
push
lea
push
lea
push
push
push
push
push
lea
push
call
bound
mov
mov
jae
out
lret
mov
add
mov
sti
add
add
add
add
lods
xlat
jns
add
mov
fildl
mov
add
test
xlat
jmp
mov
lcall
push
not
pop
ret
push
push
shl
lea
add
pop
mov
add
push
sub
shl
pop
push
push
push
add
shr
sub
pop
push
push
push
not
pop
movl
push
push
lea
push
push
push
lea
push
push
push
push
push
call
jns
into
xchg
add
add
stos
add
insb
push
movl
in
js
lock
add
scas
std
into
add
cmc
add
imulb
mov
iret
add
add
add
std
add
add
add
loopne
in
fcompl
inc
stc
ljmp
push
lea
push
push
lea
push
push
lea
push
call
mov
add
pop
mov
xchg
add
mov
fiadds
xchg
pop
fildll
scas
add
testb
add
pop
xchg
mov
jnp
mov
add
add
call
shl
cmpsb
add
lahf
add
pop
call
push
ror
shl
pop
subl
push
lea
push
push
push
push
push
push
lea
push
push
push
call
jge
pusha
xchg
add
add
mov
add
add
add
aam
mov
add
add
add
mov
mov
std
jp
add
pop
mov
out
sub
pop
cmpl
jne
pop
push
push
push
call
popl
imul
mov
mov
imul
mov
movsl
mov
add
add
lret
mov
rcrl
add
pop
pop
push
add
pop
pop
push
lea
push
push
lea
push
call
int
lcall
fdivs
scas
ljmp
gs
add
add
loopne
repnz
add
scas
mov
add
add
add
out
les
fiaddl
jp
mov
add
mov
ljmp
pop
pop
push
push
push
push
push
call
scas
add
jno
movsb
stos
mov
add
push
add
lcall
cwtl
add
add
bound
insb
rcrb
xchg
add
add
repnz
loopne
test
leave
add
add
xchg
add
add
add
add
gs
pop
xchg
add
pop
std
in
icebp
enter
in
lcall
push
push
lea
push
push
push
push
push
call
lret
lea
push
stc
add
div
add
scas
xchg
mov
mov
push
rolb
scas
fwait
mov
stc
out
add
lret
in
lcall
push
sub
lea
pop
push
mov
push
pop
add
push
push
push
push
push
push
push
push
push
call
add
mov
add
fwait
add
add
cld
test
xchg
lods
push
jp
call
lods
scas
add
loope
jmp
lret
add
popa
ljmp
add
mov
loop
cmc
jb
pop
testl
add
jp
push
add
add
pop
push
push
push
lea
ror
shr
pop
push
push
push
call
ja
loop
add
roll
add
test
mov
add
push
rolb
add
leave
add
pop
add
mov
lcall
inc
or
inc
cmp
xor
sub
inc
pop
sub
mov
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
add
lcall
filds
mov
fstps
fsubr
add
add
jno
gs
scas
std
add
lds
add
push
loopne
lcall
call
ja,pt
mov
inc
add
add
arpl
fadds
jle
cmc
jns
xchg
add
jl
add
mov
mov
mov
add
out
ret
add
add
add
mov
repnz
add
sub
pop
add
push
lea
push
push
push
push
push
push
push
push
call
add
lahf
std
add
xchg
int3
add
push
out
decb
clc
pop
push
push
js
xchg
add
stc
add
lods
add
rcl
subl
push
loop
jnp
jl
sub
pop
mov
push
push
lea
push
push
push
push
push
lea
push
push
call
leave
add
aad
add
arpl
lahf
add
push
jne
mov
add
jnp
stc
cld
add
jle
jge
add
lods
push
stc
add
nop
mov
cltd
sub
pop
mov
push
add
pop
add
add
push
lea
push
push
call
fs
add
decb
ret
xchg
add
sarb
add
fiaddl
add
mov
stos
add
mov
jo
sub
pop
mov
push
shr
pop
mov
push
add
not
rol
pop
cmp
jne
push
push
lea
push
push
push
push
call
stos
jl
jno
addl
mov
add
scas
jbe
popa
lock
pop
push
lds
add
add
pop
add
mov
add
xchg
imul
out
aam
jne
in
call
cmp
jne
push
sub
inc
lea
pop
mov
push
sub
inc
pop
movl
push
lea
push
lea
push
push
call
scas
shlb
add
add
add
popf
add
add
add
loop
cld
add
add
fcompl
add
hlt
pop
jb
aam
lock
add
fiaddl
jb
push
popf
add
sub
pop
jmp
push
sub
rol
pop
mov
push
push
lea
push
push
push
push
call
mov
add
add
jae
add
add
add
insb
add
lea
jae
add
lret
add
add
add
add
call
add
in
push
add
xchg
add
mov
push
lea
push
push
push
push
push
push
push
call
jbe
mov
popf
add
filds
push
add
test
movsb
in
push
add
movl
in
add
add
cli
or
mov
add
mov
loop
lret
push
mov
fisubs
push
mov
xchg
addb
xchg
xchg
add
add
pusha
add
add
ljmp
mov
add
mov
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
mov
je
pop
sbb
mov
fs
add
add
bound
add
add
add
add
addr16
add
int3
cmpsb
mov
clc
jns
add
add
add
jle
incb
add
not
jmp
jno
in
in
movl
push
inc
pop
jmp
mov
push
lea
push
lea
push
push
call
push
pusha
iret
stc
gs
add
stos
add
lods
andb
mov
pop
xchg
jo
fdivrl
pop
pop
push
add
add
add
add
fiadds
mov
add
push
add
add
add
ljmp
add
data16
nop
mov
add
push
sub
pop
cmp
jne
push
add
not
pop
mov
movl
push
sub
add
pop
jmp
mov
push
push
call
pop
iret
add
jmp
add
fiaddl
xchg
popa
sbbb
mov
imul
test
in
out
cwtl
jbe
lock
push
push
roll
cmpl
jne
mov
push
push
push
push
call
aad
add
pop
pop
gs
add
add
out
add
add
faddl
add
add
addr16
ljmp
lock
movl
push
lea
pop
jmp
push
lea
push
push
push
push
lea
push
push
call
add
add
add
xchg
mov
mov
fiaddl
add
repnz
mov
add
xchg
mov
mov
add
add
in
lcall
pushl
push
rol
sub
shr
pop
pop
push
push
call
shll
pop
cli
int
arpl
hlt
push
add
mov
jb
add
push
lods
add
enter
pusha
in
add
lret
add
in
jge
add
inc
or
inc
sbb
sub
pop
mov
push
push
rol
shl
xor
dec
push
or
inc
add
add
rol
sub
ror
pop
shl
lea
rol
pop
push
push
lea
push
push
push
push
push
push
call
fidivs
in
add
add
add
roll
ja
add
add
jge
add
add
add
stos
add
mov
add
xchg
add
add
ljmp
add
lcall
call
push
push
lea
push
push
call
add
add
movsl
push
call
add
flds
les
mov
xchg
lods
jbe
add
add
cmpsl
mov
pusha
sub
pop
cmpl
je
push
push
shr
xor
push
and
add
sub
shl
sub
inc
xor
sub
pop
sub
add
pop
push
add
sub
rol
pop
push
push
push
call
je
add
add
add
add
jle
lret
lds
out
add
push
add
notl
aad
add
lret
jbe
les
lock
aad
add
add
jae
pusha
outsl
jno
sbbb
add
add
sarb
in
clc
pop
call
push
ror
pop
cmpl
je
push
push
sub
shl
lea
push
push
pop
add
sub
add
add
add
sub
add
inc
shr
pop
xor
pop
push
push
push
push
call
add
rcr
push
imul
xor
shl
add
rorl
add
cli
add
add
add
add
push
jnp
in
insb
jge
add
add
add
pop
lods
add
testb
add
icebp
fsubrp
xchg
sub
pop
push
push
sub
dec
add
add
pop
call
push
pop
cmpl
je
push
push
add
push
push
pop
add
inc
shr
sub
add
sub
rol
sub
dec
pop
sub
not
pop
push
rol
dec
pop
push
call
push
shl
pop
cmpl
je
push
push
not
push
or
inc
add
dec
xor
not
sub
add
pop
shl
dec
pop
push
add
shr
pop
push
push
rol
add
xor
pop
call
push
push
push
push
call
add
add
leave
mov
jle
gs
add
jmp
push
add
add
add
add
add
scas
add
rcl
add
lcall
cmp
rol
je
push
push
ror
lea
shl
push
and
add
sub
dec
rol
sub
pop
inc
pop
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
hlt
call
pushf
add
add
add
test
add
add
mov
mov
fwait
add
add
nop
add
pop
fwait
add
add
sub
pop
push
push
not
ror
pop
call
push
push
push
push
push
push
push
call
xchg
cwtl
xchg
mov
mov
pushf
push
movsb
jo
add
add
jl
test
cmpsl
sarl
nop
repnz
jmp
scas
push
sub
pop
cmpl
je
push
push
rol
dec
add
shr
push
or
not
add
sub
dec
sub
shl
sub
pop
lea
add
dec
pop
push
sub
pop
push
push
ror
pop
call
cmpl
je
push
push
add
shl
push
and
add
dec
inc
add
not
sub
shl
pop
sub
pop
push
push
push
push
push
push
push
call
jl
js
add
pop
pop
add
xchg
push
mov
sti
bound
add
pop
add
stos
mov
add
add
pop
add
gs
in
in
add
pop
out
add
add
jne
arpl
testb
add
ljmp
add
add
in
in
push
push
push
push
lea
push
push
push
push
call
mov
int
jns
add
mov
in
mov
mov
mov
insb
add
add
scas
pushf
add
addr16
xlat
mov
add
frstor
xchg
add
add
mov
add
jb
add
outsl
add
lcall
int3
cmp
add
int3
je
push
push
rol
dec
dec
push
sub
add
shr
inc
xor
not
sub
not
pop
add
ror
pop
push
push
lea
push
push
push
lea
push
push
push
call
push
scas
add
jge
push
xlat
mov
jmp
add
add
push
rolb
inc
cmp
add
out
add
xor
pop
cmpl
je
push
push
dec
push
sub
add
inc
sub
sub
inc
pop
add
shl
ror
pop
push
lea
pop
push
push
push
push
push
push
push
push
push
call
add
push
jecxz
cmc
insb
jns
jecxz
add
out
add
iret
rolb
mov
add
pop
add
add
add
add
mulb
lea
pushf
movl
mov
add
rcrb
add
add
xchg
pop
sub
pop
call
cmpl
je
push
push
push
or
not
add
sub
add
add
pop
sub
pop
push
ror
pop
push
call
push
rol
lea
sub
pop
cmpl
je
push
push
push
or
not
add
shl
rol
shl
sub
sub
pop
dec
pop
push
push
push
call
fldl
push
loopne
int3
int
add
add
add
test
fiadds
add
xchg
fistl
add
cwtl
pop
pushf
ljmp
hlt
pop
push
push
push
call
add
xchg
add
mov
std
iret
add
push
outsl
fcmovb
mov
mov
jle
add
add
stos
jge
movsb
out
imul
mov
mov
aam
add
mov
add
sub
pop
call
cmpl
je
push
push
dec
push
or
inc
add
sub
add
shr
sub
inc
sub
sub
lea
pop
not
sub
pop
push
lea
push
push
push
push
call
xchg
pop
mov
fcmovnbe
aam
adc
add
movsb
movsl
jb
in
add
add
push
addl
xchg
pop
sbb
pop
mov
add
add
add
add
rolb
lcall
call
push
push
push
call
mov
cmpl
add
enter
ljmp
out
xchg
add
pop
sub
pop
cmpl
jne
mov
push
sub
sub
pop
movl
push
inc
pop
jmp
xor
push
lea
dec
pop
pop
pop
push
push
push
push
push
push
lea
push
lea
push
push
call
xchg
add
js
cltd
add
hlt
ljmp
mov
add
js
jp
fprem
pop
add
add
stos
sarb
add
movb
imul
jecxz
add
add
pop
add
jae
add
mov
add
clc
lock
xlat
add
add
xchg
lcall
push
lea
push
lea
push
push
push
lea
push
call
mov
jb
add
mov
add
mov
jbe
js
xchg
add
test
mov
add
mov
cmpb
jp
leave
add
add
add
jbe
jb
negb
add
add
call
push
lea
push
call
mov
pop
lock
add
movl
xchg
testl
add
jb
add
push
add
push
add
jmp
sub
pop
leave
push
push
lea
push
push
call
add
xchg
add
xchg
hlt
cmpsb
mov
pop
pop
add
pop
push
push
int
cbtw
jmp
mov
add
mov
iret
mov
sub
pop
ret
push
push
call
mov
insb
clc
mov
mov
cli
mov
add
add
gs
mov
sub
test
jbe
std
add
cli
leave
test
ficomps
popl
add
add
aam
xchg
sahf
insb
nop
push
ljmp
add
fstps
lock
add
in
clc
pop
push
mov
push
lea
push
push
lea
push
push
push
lea
push
push
call
in
out
add
shr
leave
loopne
mov
add
add
add
mov
add
add
stos
lret
addl
popa
icebp
sub
pop
add
push
push
lea
push
push
push
call
push
in
add
add
add
les
add
add
mov
hlt
mov
pusha
add
mov
add
int
jo
add
addb
xchg
add
loopne
add
xchg
loope
jge
add
add
add
movsb
push
loope
add
xchg
sub
pop
cmpl
jne
push
push
shl
ror
add
push
xor
add
rol
sub
add
pop
sub
pop
push
push
push
push
push
push
lea
push
push
push
call
fiaddl
incb
add
add
add
mov
jl
add
scas
add
mov
outsl
rcrl
add
add
push
fbld
push
shlb
lock
call
xchg
add
fcmovnu
nop
add
aam
mov
sub
pop
pushl
push
lea
push
push
push
push
lea
push
push
push
call
nop
mov
stc
imulb
pop
shll
add
add
lock
std
rcrl
mov
mov
js
add
add
lret
add
scas
mov
mov
in
loopne
call
push
push
not
pop
call
push
push
push
push
push
lea
push
call
icebp
je
sti
pushf
leave
push
leave
add
sti
mov
mov
data16
stos
push
pop
scas
push
pop
lea
loopne
insb
add
bound
add
xchg
jp
mov
mov
push
add
add
ret
movb
pop
jmp
push
push
call
add
jno
xchg
mov
shll
add
shrb
cmc
jbe
add
add
out
add
cltd
shlb
add
add
add
clc
pop
jnp
add
add
mov
fsubrs
popa
out
sub
pop
cmpl
je
push
push
push
lea
push
lea
push
push
call
movsb
fisubrl
xchg
add
out
jb
lret
les
add
cmc
add
add
jno
add
mov
jp
mov
sahf
add
add
mov
addl
scas
mov
add
int
add
idiv
std
add
add
add
pushf
add
push
sub
pop
cmpl
jne
leave
push
add
pop
add
push
add
sub
pop
pop
pop
push
add
sub
rol
pop
pop
push
push
push
call
test
jl
sti
mov
jmp
add
enter
xchg
pop
movsb
add
data16
sti
stos
lahf
pop
out
add
mov
in
hlt
lcall
leave
push
ror
inc
pop
add
ret
push
not
sub
dec
pop
jmp
push
ror
lea
lea
pop
cmpl
jne
push
push
rol
lea
sub
push
sub
add
inc
shr
sub
lea
pop
sub
shl
pop
push
not
pop
pushl
push
push
lea
push
push
call
pop
enter
pop
stos
divb
add
add
fldl
cwtl
add
iret
mov
mov
add
add
test
addr16
aam
add
add
add
add
add
xlat
cmc
stos
jns
std
add
add
mov
aam
add
loop
insb
add
add
lcall
out
add
push
ror
xor
pop
push
call
push
push
lea
push
push
push
call
add
add
gs
lcall
movl
hlt
add
in
addl
nop
mov
push
cmc
jo
call
add
sub
pop
jmp
push
push
push
push
push
push
push
lea
push
call
stos
mov
add
add
add
add
mov
pop
incb
push
test
ficomps
scas
testl
cmc
add
add
jl
ja
in
push
addr16
sub
pop
cmpl
jne
push
dec
dec
pop
mov
mov
push
push
push
lea
push
push
lea
push
push
push
push
call
add
add
pushf
shlb
add
add
filds
cld
test
xchg
add
aad
xchg
andb
sub
pop
push
push
push
rol
sub
push
xor
add
inc
sub
inc
pop
add
pop
push
dec
pop
pushl
push
inc
dec
pop
call
call
push
push
add
inc
push
push
pop
add
lea
dec
sub
shr
pop
shl
pop
push
push
push
push
call
hlt
xchg
add
xchg
lds
fucomp
add
in
add
out
push
xchg
sarb
add
out
add
add
pushf
popa
add
imul
enter
add
aam
outsl
rcrb
cld
add
xchg
add
aad
add
sti
push
add
in
lock
pushl
call
push
push
push
lea
push
push
lea
push
push
call
push
filds
add
push
add
add
mov
lret
mov
fiadds
jmp
mov
in
xchg
ljmp
add
scas
xlat
cmpsl
mov
in
in
call
push
push
shl
push
and
add
add
sub
dec
shr
shr
pop
inc
not
pop
push
push
push
push
push
push
push
lea
push
lea
push
call
add
sbbb
add
aad
in
add
repnz
add
fildll
fdivrl
pushf
add
call
mov
iret
mov
lea
in
fcompl
jne
push
push
push
push
push
call
mov
add
andb
add
add
push
pop
pop
add
icebp
add
cmc
pop
add
push
iret
add
add
xchg
add
bound
add
mov
cltd
add
ljmp
lds
pushf
add
add
testl
in
in
pop
call
push
push
push
push
push
lea
push
push
call
xchg
cmpsl
add
iretw
cmpsl
fadds
push
lods
lods
add
lahf
add
mov
int3
jmp
jge
pop
mov
add
add
lcall
shrb
xlat
push
dec
push
inc
shr
not
xor
push
sub
add
sub
rol
rol
pop
sub
sub
pop
push
push
push
push
push
call
xchg
imul
jge
add
call
mov
js
mov
add
add
ljmp
stc
mov
add
addl
add
xchg
add
mov
mov
lods
repnz
add
cli
xchg
push
mul
sbbl
xlat
mov
xchg
mov
sub
pop
pushl
push
push
lea
push
push
call
enter
insb
into
jl
mov
add
pop
add
add
aam
mov
lahf
add
add
add
mov
xchg
add
pop
into
leave
mov
add
add
xchg
mov
add
outsl
jnp
pusha
loope
js
mov
test
sub
pop
call
push
push
push
push
push
lea
push
push
push
call
add
clc
fadds
data16
add
mov
add
mov
add
add
leave
add
push
add
add
add
mov
call
push
push
add
rol
lea
shr
push
or
inc
add
sub
sub
lea
pop
sub
add
pop
push
add
ror
dec
pop
pushl
call
push
rol
shl
pop
call
push
push
add
xor
shl
push
and
add
sub
sub
shl
sub
pop
rol
dec
pop
push
push
lea
push
push
push
push
push
call
add
iret
mov
mov
add
jle
jae
add
mov
add
movl
andl
mov
call
add
add
add
test
scas
rcll
pushl
push
push
lea
push
call
add
ja
aad
fistpll
test
add
push
add
into
xchg
add
bound
out
push
cld
loopne
rclb
jne
gs
add
add
lcall
out
sub
add
shrb
leave
insb
pop
push
not
push
or
not
add
add
ror
sub
dec
pop
sub
add
shr
pop
push
push
push
push
call
add
add
mov
addl
add
gs
lea
add
add
jbe
shlb
stos
add
add
lock
pushl
push
not
dec
shr
add
pop
call
push
lea
pop
call
push
push
lea
shl
sub
push
push
pop
add
not
sub
xor
not
pop
lea
shr
sub
pop
push
inc
xor
pop
pushl
push
push
push
push
push
push
push
push
call
out
fisubrl
mov
fiadds
add
add
mov
sahf
ja
mov
add
pop
mov
add
add
hlt
add
add
add
add
add
add
add
daa
add
push
add
inc
pop
call
push
push
shr
sub
ror
push
or
not
add
ror
xor
sub
pop
rol
pop
push
xor
lea
lea
xor
pop
pushl
call
push
ror
ror
ror
pop
call
push
push
shr
push
xor
add
shr
not
sub
sub
add
add
dec
pop
dec
pop
push
push
push
lea
push
push
push
call
shr
add
pop
mov
addl
repnz
pop
add
push
add
add
fnstcw
stos
pop
xlat
add
jb
mov
sti
data16
lret
jge
test
mov
add
mov
pop
mov
jecxz
mov
mov
lcall
jne
push
shr
rol
dec
pop
call
lea
push
push
call
je
add
mov
pushf
push
mov
ja
add
out
arpl
in
jmp
jl
mov
add
sahf
repnz
fwait
add
lret
add
add
mov
add
mov
sti
rol
add
add
add
add
push
call
push
push
sub
push
or
not
add
sub
add
sub
ror
xor
not
pop
lea
ror
pop
push
push
call
add
mov
fcmovu
movsb
aad
mov
scas
add
add
xchg
add
add
imul
sbbl
lcall
jne
call
push
rol
ror
pop
call
push
push
rol
rol
ror
push
xor
add
sub
shr
add
sub
xor
add
pop
xor
pop
push
push
push
push
push
lea
push
push
push
push
push
call
pop
scas
add
add
addb
hlt
ja
add
add
cwtl
data16
clc
test
repnz
lea
mov
add
xchg
mov
iret
mov
loope
add
lcall
jne
push
rol
sub
lea
pop
call
push
push
push
push
call
std
jle
add
jbe
mov
sti
arpl
sti
add
pop
jp
mov
pop
jmp
test
test
out
mov
sub
pop
call
push
push
rol
not
not
push
and
add
sub
add
ror
sub
sub
inc
pop
xor
ror
sub
add
pop
push
push
push
push
push
push
push
push
call
mov
add
jb
scas
sti
iret
mov
add
pop
add
aam
add
pop
add
add
jae
imull
add
push
add
enter
add
pusha
push
xchg
sub
pop
pushl
call
push
sub
lea
xor
pop
call
push
shl
pop
lea
push
push
shl
dec
sub
push
or
not
add
shl
inc
sub
add
pop
sub
add
sub
dec
pop
push
push
call
mov
push
add
fld1
rorl
add
add
jp
arpl
pop
add
jbe
imul
pop
incb
add
add
add
scas
movsl
add
ljmp
add
pop
mov
fmull
pusha
lock
mov
sti
add
add
pop
pushf
into
scas
fldl
add
pushl
call
push
lea
push
push
push
lea
push
push
push
push
push
call
shll
lea
push
mov
andl
add
std
cmpsb
fdivrp
add
push
movsl
add
mov
scas
in
test
stos
xchg
add
jno
add
fisttpll
push
push
sub
add
xor
pop
call
push
push
add
rol
ror
push
or
not
add
add
sub
lea
xor
pop
sub
pop
push
lea
push
push
lea
push
push
push
push
push
lea
push
push
call
jp
jno
shl
jle
std
add
add
xchg
test
in
add
xchg
mov
fistpll
mov
push
add
add
lcall
jne
push
push
call
pop
mov
mov
xlat
add
add
cltd
cmpsl
ljmp
enter
mov
testb
mov
mov
lcall
cmp
add
push
pop
call
mov
push
push
lea
push
sub
add
rol
shl
sub
inc
sub
pop
add
pop
push
push
push
push
push
push
call
push
add
clc
movsl
add
add
ljmp
add
add
rolb
outsl
add
add
js
xchg
mov
add
leave
in
add
call
pushl
push
shl
dec
pop
call
push
shr
lea
shl
pop
push
push
pop
pushl
push
add
inc
pop
call
push
push
dec
lea
xor
push
xor
add
sub
not
sub
rol
xor
sub
pop
sub
pop
push
add
lea
pop
pushl
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
lds
jne
add
out
add
rolb
pop
cli
mov
add
loopne
add
add
add
add
nop
out
add
add
je
add
lods
ljmp
add
popf
add
mov
add
add
jo
rclb
clc
cltd
fwait
add
and
add
cwtl
or
push
or
not
add
ror
dec
shr
inc
sub
inc
sub
shr
pop
xor
sub
pop
push
push
not
push
or
not
add
inc
add
sub
ror
pop
sub
ror
pop
push
pop
call
push
push
sub
push
sub
add
ror
sub
xor
pop
xor
pop
push
push
push
call
push
rolb
mov
mov
mov
stos
mov
jecxz
mov
add
add
std
enter
jns
add
add
popa
jne
add
fcoms
jns
add
mov
add
cwtl
mov
xchg
add
mov
movsb
xchg
in
clc
add
add
aam
sub
pop
pushl
call
push
lea
ror
ror
pop
mov
lea
push
push
call
adcb
fwait
push
add
push
add
add
add
out
cltd
fldl
push
addr16
xchg
add
add
pop
pop
roll
add
lcall
add
lock
add
jo
add
enter
lcall
test
call
cli
lea
shl
add
pop
push
push
shl
sub
pop
push
push
push
push
call
insb
xchg
addl
out
mov
out
xchg
out
cli
push
add
bound
add
add
add
add
data16
imull
add
add
in
clc
pop
push
push
push
lea
push
push
call
xchg
jns
stos
fcompl
add
push
mov
je
push
add
add
add
std
in
rcr
outsl
in
add
loop
add
add
mov
add
lock
add
xchg
aam
mov
add
sub
pop
push
push
rol
shl
dec
pop
push
push
push
push
lea
push
push
push
push
push
push
push
push
call
add
imul
add
jge
mov
add
loop
add
add
lods
aam
lock
pushf
add
mov
lcall
add
pushl
push
lea
push
push
call
add
mov
int3
add
mov
roll
add
add
std
lret
add
add
add
add
add
jp
xchg
stc
add
add
add
add
loope
add
add
roll
mov
insb
outsl
int3
sub
pop
push
call
push
push
ror
xor
push
and
add
add
sub
xor
inc
pop
not
rol
dec
pop
push
push
push
call
cld
icebp
add
push
jl
push
iret
sahf
popf
ja
add
add
fisubrl
add
add
pop
cmpsl
sub
pop
pushl
push
xor
shl
pop
call
push
shl
pop
call
push
ror
not
shl
pop
mov
push
shl
not
sub
pop
pop
push
lea
pop
dec
jne
push
add
xor
pop
jmp
push
push
lea
push
push
push
push
push
push
lea
push
push
call
movsb
jmp
ficoml
ret
roll
add
mov
ljmp
mov
lahf
add
lret
add
fsts
add
pop
add
les
push
add
mov
add
mov
popf
jmp
pop
add
lcall
push
or
add
dec
lock
push
shl
push
or
not
add
shl
sub
shr
add
inc
sub
pop
pop
push
push
call
mov
xchg
faddl
add
xchg
into
loop
sti
fildl
add
add
add
into
add
mov
add
pop
pusha
mov
add
jmp
add
movb
add
jl
test
mov
shl
add
nop
add
bound
js
push
add
add
sub
pop
pushl
push
push
push
push
lea
push
lea
push
lea
push
call
xchg
jge
int
add
mov
add
jp
pusha
test
jmp
add
mov
ljmp
mov
add
call
add
js
popf
aad
add
lcall
xchg
sbb
add
push
push
push
lea
push
lea
push
call
add
jne
add
lods
add
add
add
add
loop
popl
add
pop
popf
rolb
enter
push
hlt
jecxz
add
push
mov
mov
add
add
add
in
jecxz
add
add
push
lds
add
add
sub
pop
push
call
push
ror
pop
mov
push
not
rol
lea
shr
pop
lea
push
push
dec
push
and
add
sub
sub
shl
pop
sub
pop
push
lea
push
lea
push
call
add
fninit
out
out
inc
add
ret
scas
add
into
icebp
imul
stos
test
loopne
add
lcall
jne
push
push
push
call
leave
jle
mov
lret
mov
mov
bound
push
jp
pop
mov
sub
pop
call
push
push
add
sub
pop
call
push
push
sub
rol
dec
lea
push
sub
add
shr
sub
sub
ror
pop
not
xor
pop
push
pop
pushl
push
pop
call
push
push
push
push
lea
push
lea
push
push
push
call
add
addr16
push
roll
in
pop
mov
fidivl
lcall
stos
add
add
data16
add
mov
aad
mov
scas
add
add
pusha
add
hlt
mov
lods
add
loopne
call
push
pop
mov
push
push
push
push
call
fs
bound
push
add
add
add
mov
pop
mov
add
mov
int
clc
cmpsl
icebp
pushw
add
lret
jne
pop
add
add
int
mov
add
pop
lods
jge
add
pushf
and
ljmp
call
test
lea
lea
push
push
pop
add
sub
add
rol
add
pop
sub
not
pop
push
lea
push
push
lea
push
call
add
lods
add
cmpl
add
add
xlat
add
xchg
add
add
add
push
add
ret
add
add
add
add
add
into
popl
and
add
lcall
jne
push
rol
shr
lea
sub
pop
call
push
push
lea
push
push
push
push
call
push
movsl
add
cmc
push
add
mov
mov
leave
add
add
add
add
in
add
push
pushf
add
test
ljmp
cmpsb
mov
lcall
lret
push
lret
addb
fldl
add
push
sub
inc
shl
pop
push
push
sub
shr
shr
sub
pop
push
push
push
push
push
lea
push
call
rorl
pop
add
jns
add
imul
idiv
lret
popa
add
jae
xchg
lret
addl
mov
out
push
mov
add
add
lcall
mov
out
and
add
jb
in
in
lcall
add
mov
and
ror
push
push
call
scas
outsl
add
push
add
insb
adcb
jge
add
add
add
outsl
sub
in
lock
out
call
mov
add
add
je
mov
leave
fcom
stos
out
jl
in
pop
mov
mov
cli
int
cmpsl
mov
add
jne
push
push
inc
xor
dec
add
push
xor
add
not
sub
lea
rol
pop
lea
not
xor
pop
push
push
lea
push
lea
push
push
lea
push
push
push
lea
push
push
call
imul
add
jne
add
mov
add
add
nop
add
add
add
add
enter
cld
imul
lahf
pop
testb
in
fdivr
lcall
call
push
push
inc
push
xor
add
dec
lea
sub
sub
pop
shr
pop
push
inc
pop
pushl
push
add
shr
pop
call
push
push
lea
push
push
push
push
push
push
push
call
add
add
add
add
pop
addb
push
add
lds
add
add
jmp
pusha
fs
in
fdivr
lcall
call
pop
xor
jecxz
test
bound
add
in
add
imul
add
jnp
mov
out
aad
pop
add
sahf
int
lods
xchg
push
add
add
jge
in
add
hlt
lods
add
mov
arpl
add
add
add
out
add
adc
imul
nop
add
in
nop
jns
add
add
aad
sub
pop
call
push
push
lea
add
inc
push
push
pop
add
not
shr
sub
not
pop
pop
push
push
lea
push
push
call
add
add
jl
add
jb
mov
pusha
push
sti
lds
add
fs
xchg
into
bound
jmp
js
add
add
add
add
add
add
popa
add
lret
shr
push
in
mov
mov
outsl
arpl
add
mov
add
fcompl
jne
add
sub
pop
pushl
push
lea
pop
call
push
sub
shr
shr
pop
call
push
not
sub
sub
pop
jmp
push
lea
push
push
push
call
mov
mov
add
push
pop
add
pop
data16
orb
test
jo
insb
popa
fsts
mov
jbe
stos
add
cmpl
imul
pop
add
movsb
add
pop
roll
add
pushl
push
push
lea
push
push
push
push
push
push
call
add
add
add
scas
cld
add
pushf
add
add
notb
add
mov
add
enter
add
add
fiaddl
fdivrp
add
cmpsb
sub
pop
mov
push
shr
pop
jmp
push
push
xor
push
or
not
add
shr
sub
xor
sub
pop
xor
pop
push
lea
rol
pop
pushl
call
push
pop
push
push
sub
dec
dec
pop
call
push
push
shl
push
push
pop
add
xor
lea
ror
sub
sub
add
rol
not
rol
pop
not
pop
push
sub
lea
add
pop
pushl
push
shr
add
pop
call
push
push
push
call
add
mov
incb
mov
add
add
int
lcall
xchg
add
add
add
out
add
popa
mov
out
lea
shrb
lcall
push
dec
shr
dec
pop
call
push
add
sub
pop
leave
add
push
shl
pop
pop
push
sub
ror
inc
inc
pop
pop
pop
push
dec
sub
shr
pop
pop
push
dec
dec
pop
leave
push
lea
ror
lea
ror
pop
add
ret
push
shl
sub
pop
leave
push
push
push
push
push
lea
push
push
lea
push
push
call
mov
bound
enter
enter
mov
add
scas
roll
int
add
in
mov
add
lods
add
in
testb
push
test
mov
mov
jae
add
cmpsb
pop
add
fldl
lcall
or
push
push
push
push
call
lods
add
jecxz
add
loop
add
add
add
out
out
sarl
add
repnz
pop
pushf
pop
add
jecxz
add
add
cmc
mov
je
lods
add
mov
pop
xchg
add
fsts
mov
add
rolb
jmp
out
in
hlt
lcall
in
push
lea
push
lea
push
push
push
lea
push
push
push
push
call
ret
add
arpl
xlat
incb
fadds
sbb
outsl
mov
add
add
add
add
mov
in
ljmp
add
mov
lock
pop
cmpl
jne
push
push
push
push
call
std
add
jo
add
test
add
aam
mov
idiv
jo
in
add
lods
data16
cmpsb
add
fs
insb
jno
add
jmp
push
add
add
add
add
add
sub
pop
mov
push
push
push
push
push
push
lea
push
call
push
scas
test
pop
lock
stos
mov
mov
lods
mov
add
add
ljmp
sar
hlt
cmc
cld
add
xchg
add
cwtl
add
add
lcall
jno
add
push
push
lea
push
push
push
call
add
pop
jbe
icebp
lret
in
pop
pop
xchg
jb
add
add
lret
out
add
push
xchg
scas
xchg
pusha
push
cmpsb
add
nop
add
lret
add
pop
repnz
ljmp
mov
add
faddl
faddl
add
add
lcall
inc
or
loopne
push
push
push
push
lea
push
call
mov
add
lds
mov
add
add
add
xchg
add
into
mov
add
lods
cmpsb
filds
mov
into
leave
add
xchg
add
in
mov
cmpsb
jbe
mov
lcall
mov
add
icebp
push
in
sti
std
sub
pop
xor
xor
push
shl
pop
add
xor
push
push
push
lea
push
push
push
call
add
cmpsb
mov
mov
test
add
xchg
add
jne
ficoms
add
mov
jecxz
pop
out
add
les
lods
add
jmp
mov
in
mov
jmp
cmpsl
in
outsl
add
imul
lcall
sub
push
add
dec
not
pop
jmp
push
inc
inc
pop
sub
push
lea
push
push
push
call
add
js
xchg
repnz
int3
xorl
add
add
add
call
iret
mov
shlb
cmc
mov
add
shll
xchg
enter
add
mov
cltd
scas
add
xor
shr
add
lea
pop
pop
push
push
push
push
push
push
call
fs
pop
addl
add
js
out
lret
xchg
add
cmc
stos
fs
cwtl
pop
jbe
stc
xchg
pop
mov
push
add
add
jnp
subb
xchg
mov
sub
pop
sub
push
push
push
lea
push
push
push
push
push
push
push
call
xchg
add
iret
mov
out
mov
loopne
out
add
xchg
insb
mov
add
add
add
in
fcmovnu
test
add
filds
stc
jle
add
add
repnz
cmpb
jmp
jae
add
pop
pop
push
add
add
add
je
add
addb
je
add
add
lcall
cmp
jns
call
push
push
push
push
push
call
add
cmp
add
addl
jae
bound
add
add
xchg
enter
in
loopne
aad
lret
mov
add
add
lock
add
imul
add
mov
lea
push
push
push
push
push
call
cmc
mov
loopne
add
jecxz
fildl
add
add
xchg
js
add
lods
ljmp
in
clc
int3
in
pusha
add
in
add
add
popl
jnp
mov
xchg
ret
add
add
add
add
add
add
imul
lea
add
cwtl
add
lcall
jmp
push
jp
push
push
lea
push
push
push
push
push
lea
push
call
clc
push
add
mov
add
add
add
add
test
jbe
xchg
iret
int
fiaddl
add
add
add
je
stos
fadds
add
cwtl
insb
mov
fdivr
lcall
or
push
push
push
call
xchg
add
enter
add
add
mov
add
test
add
push
shr
add
out
sbbb
add
add
test
lcall
jmp
dec
mov
cmovp
add
add
add
outsl
ja
rcrb
add
aad
add
ja
add
lea
out
push
push
filds
roll
lcall
add
add
add
pushf
add
add
xorl
hlt
lcall
enter
push
lea
push
lea
push
lea
push
push
call
mov
add
add
push
mov
add
add
add
jle
push
add
mov
add
push
add
add
js
jmp
int3
add
popa
add
add
sahf
add
add
mov
add
mov
fs
add
sub
pop
pushl
pop
push
lea
push
lea
push
push
call
test
int3
icebp
in
add
add
imull
xchg
mov
xchg
add
int
mov
fildl
push
loop
mov
insb
mov
xchg
add
ja
add
push
cmpsb
or
mov
pop
in
add
add
movsb
add
roll
testb
in
lock
shr
push
ror
pop
and
sub
push
lea
push
push
call
pop
jbe
add
stos
push
mov
pop
mov
add
xchg
add
add
add
mov
data16
lods
addl
loopne
add
test
add
xchg
ret
xchg
stos
add
add
loope
enter
add
add
ja
add
xchg
fadds
sahf
jmp
data16
add
lcall
stc
sbb
test
call
add
shl
pop
leave
push
push
push
push
lea
push
push
push
push
push
call
mov
add
add
add
add
hlt
fs
ret
add
add
xchg
add
sub
pop
ret
push
pop
push
push
dec
pop
mov
add
push
lea
inc
pop
push
push
push
push
push
push
push
call
add
cmpsl
cltd
add
add
add
add
add
pop
xchg
pop
je
addr16
xchg
imul
add
xchg
jecxz
out
add
add
add
out
jl
addl
jmp
push
push
push
push
push
push
push
push
push
call
in
add
add
add
add
fwait
loop
add
cli
add
les
push
add
add
mov
add
add
popl
mov
add
xchg
add
lods
mov
mov
mov
add
mov
div
xlat
lcall
sub
pop
push
push
push
inc
pop
mov
push
push
push
call
pop
lret
pop
add
in
sbbl
add
in
sti
loope
imul
addl
add
add
pop
loope
add
add
add
add
jns
add
cmpsb
add
mov
add
lods
add
jbe
popa
loope
mov
add
leave
push
lret
int
mov
lea
push
xor
pop
sub
push
push
push
lea
push
push
push
lea
push
push
push
call
les
ljmp
fdivp
xchg
add
outsl
std
add
iret
addl
add
add
jo
loope
add
into
arpl
popf
sub
pop
mov
push
push
call
lods
jecxz
xchg
cwtl
push
jecxz
out
mov
add
jb
mov
add
je
roll
add
add
lea
iret
data16
fwait
add
add
sahf
mov
add
jno
imul
clc
mov
mov
jb
add
addb
cmc
test
loopne
fdivs
mov
out
add
ja
lahf
sub
pop
shr
add
push
push
call
add
add
pop
mov
add
xchg
xorl
popf
add
xchg
add
xchg
add
mov
add
data16
add
in
test
popl
push
push
mov
add
lods
jns
pushf
mov
addb
add
sub
pop
mov
push
push
lea
push
push
lea
push
push
call
les
add
add
fdivrp
test
add
jecxz
mov
loope
mov
add
mov
add
mov
into
add
add
add
enter
call
add
push
push
push
push
push
call
test
jnp
fwait
add
add
mov
xchg
hlt
xchg
mov
insb
add
int
nop
popa
add
lds
stos
notl
lret
addb
cld
add
sub
pop
mov
add
push
not
xor
rol
pop
xor
push
push
push
push
push
push
call
subb
add
add
xchg
add
andl
push
rol
fists
icebp
jno
cld
imul
add
add
add
add
sub
pop
mov
push
sub
pop
and
push
lea
push
push
push
push
push
call
add
lods
add
pop
popf
add
roll
add
add
add
add
push
mov
les
andl
roll
cltd
add
lock
faddl
push
add
jae
add
add
call
rol
rol
push
shr
xor
shl
inc
pop
xor
push
push
push
push
call
push
js
lock
lock
pop
cltd
mov
faddl
hlt
shr
add
add
add
add
add
cmc
mov
in
lock
lcall
push
dec
inc
pop
cmpb
jne
add
push
push
lea
push
push
push
push
push
push
push
call
add
cwtl
movl
xchg
mov
add
add
add
and
add
pop
out
add
pop
insb
add
xchg
add
add
sahf
loopne
add
add
pop
cmpsl
add
add
add
jl
add
xlat
roll
pop
sub
pop
cmp
je
add
push
push
lea
push
push
push
call
addr16
mov
add
clc
fiaddl
mov
pusha
add
add
add
fs
mov
hlt
xchg
add
fsubl
out
sub
pop
cmpl
jne
push
shr
dec
pop
xor
pop
push
push
push
push
push
push
push
push
push
push
call
pop
cltd
add
jmp
jle
nop
lock
nop
push
add
out
out
fiadds
lcall
fcmovnu
mov
push
add
mov
clc
enter
jmp
xchg
add
nop
sub
pop
pop
push
lea
sub
lea
pop
pop
push
push
push
call
jae
jne
cwtl
les
shll
add
jge
add
mov
in
add
sti
add
add
jo
lds
lcall
pop
data16
leave
rol
add
int
add
lea
aad
add
filds
mov
add
pop
clc
add
xchg
lock
add
lcall
push
dec
lea
pop
pop
push
push
call
pop
lret
mov
add
movsb
mov
add
push
jmp
push
add
add
filds
lods
fsubrl
mov
mov
pop
shlb
popa
jmp
lods
add
cmpsb
add
int
add
leave
add
cmpsb
in
cwtl
jge
jecxz
int3
addb
mov
add
pop
sub
pop
leave
push
shr
xor
xor
rol
pop
ret
mov
push
push
lea
push
push
push
push
push
call
test
jnp
je
add
nop
rolb
push
add
mov
jge
add
testl
mov
add
mov
int
rolb
fidivrs
xchg
imul
add
lock
add
add
jb
add
push
or
lret
push
push
push
push
push
push
push
push
call
add
add
cmpsl
test
add
mov
lret
xchg
add
add
call
lea
cli
add
lods
test
ret
add
loop
add
popa
add
in
call
add
mov
push
lea
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
fbld
jge
jne
lods
fistpll
cmpsb
in
jne
movsb
add
add
add
mov
out
clc
add
mov
add
fdivr
lcall
testl
jns
movsb
popa
sub
dec
pop
pop
push
not
inc
sub
pop
pop
push
shl
not
sub
pop
mov
push
push
push
push
lea
push
push
push
push
push
push
lea
push
call
mov
out
add
jge
aam
imul
add
add
add
mov
call
lea
lcall
add
mov
add
mov
jne
jp
mov
lahf
ljmp
push
sub
pop
call
push
lea
push
push
call
add
add
add
mov
mov
jb
addr16
add
mull
sar
rorl
cwtl
rolb
fs
lahf
mov
mov
add
add
lret
add
jecxz
push
addb
scas
add
lcall
xor
pop
push
lea
pop
pop
push
push
push
lea
push
lea
push
push
push
push
call
sti
pop
jmp
mov
cmpsl
flds
lea
add
test
push
add
add
mov
movsl
push
add
in
popf
xchg
icebp
movsb
mov
les
clc
addb
jp
mov
mov
add
add
lods
add
jno
add
add
jns
add
add
add
in
mov
sub
pop
pop
pop
push
add
sub
add
pop
pop
push
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
add
shrb
mov
add
pop
fildl
xchg
dec
int
lcall
add
call
add
mov
arpl
add
add
fsub
add
ja
add
icebp
push
nop
add
stc
add
outsl
lods
push
js
add
lcall
ret
push
inc
dec
ror
shr
pop
push
push
rol
pop
mov
push
sub
sub
lea
pop
add
push
push
push
push
push
call
nop
push
mov
scas
nop
add
lahf
std
xorl
add
rcr
bound
ret
jmp
mov
add
add
mov
cmpsl
pop
add
push
shll
in
lock
lcall
push
push
call
stos
add
enter
add
icebp
add
rcr
popf
fistps
jmp
add
jbe
fiadds
lcall
jge
xchg
add
mov
push
add
clc
lcall
push
push
push
push
lea
push
push
call
add
xchg
cwtl
testl
cwtl
ret
add
test
add
cltd
mov
fwait
loope
mov
popf
mov
roll
mov
add
iret
out
lret
loop
mov
jp
in
call
push
push
shr
lea
pop
mov
push
push
push
push
push
push
push
push
call
into
mov
push
add
mov
add
xorb
add
negl
add
shll
addl
or
mov
lcall
pop
push
shr
add
pop
lea
push
not
lea
xor
pop
sub
push
ror
inc
pop
mov
push
push
push
push
lea
push
lea
push
push
push
push
call
pop
lods
add
int3
pop
mov
int
roll
pop
in
add
add
bound
add
add
jp
cltd
mov
add
in
lret
roll
cwtl
out
shr
testl
xchg
mov
out
xbegin
outsl
je
sub
pop
shr
push
pop
add
push
push
push
push
push
push
push
push
push
push
call
xchg
add
mov
mov
test
cwtl
roll
stos
int
icebp
mov
add
pop
addb
xlat
pusha
add
loopne
fidivs
add
mov
lcall
pop
js
fsts
clc
shr
not
sub
pop
pushl
popl
push
push
lea
push
push
lea
push
push
push
call
add
mov
stos
rolb
mov
add
jae
add
mov
mov
loope
in
testl
add
add
add
mov
add
xchg
jnp
test
clc
add
add
fcomps
pop
add
in
in
mov
add
push
add
lea
sub
shr
pop
xor
push
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
add
fadds
aad
push
add
add
add
add
lahf
add
add
add
mov
movsl
cwtl
popa
fst
bound
mov
out
mov
rolb
mov
adc
not
pop
add
push
sub
pop
xor
push
push
push
call
cmpsb
loop
add
mov
push
in
mov
cmpsb
add
iret
add
add
push
mov
xchg
push
std
pop
add
add
lcall
rolb
push
lea
push
push
push
push
call
gs
shll
out
pop
insb
fcomps
add
xlat
add
add
cmp
popa
add
push
add
add
stos
pop
mov
add
aam
add
add
add
js
add
int
jnp
lds
add
add
add
mov
mov
lret
jne
mov
call
push
push
call
add
pop
stos
add
mov
lds
movsb
push
jb
mov
mov
jmp
fcmovb
fmul
mov
mov
add
mov
imul
add
loope
movsb
movsl
cld
sti
lods
add
in
hlt
pop
xor
push
lea
push
push
lea
push
push
push
call
add
add
jl
testl
stos
add
hlt
mov
pop
add
add
icebp
add
add
in
mov
mov
add
add
add
shlb
nop
push
push
lea
push
push
lea
push
call
call
fistps
push
imulb
mov
add
iret
stos
fcomip
add
add
ljmp
add
testb
popa
sarl
add
jp
add
push
push
push
push
push
call
insb
pop
cmpsb
xchg
add
pusha
add
sahf
jae
mov
add
add
add
add
add
add
insb
jle
add
lret
movsb
add
ljmp
lcall
imul
int3
push
add
scas
fs
in
pop
inc
push
lea
push
push
push
push
lea
push
push
push
call
xchg
add
push
je
cltd
gs
scas
lock
add
add
push
add
add
add
out
movsb
add
add
mov
pop
add
push
sub
pop
nop
nop
push
add
pop
cmpb
jne
push
shr
dec
add
pop
add
push
lea
xor
shr
add
pop
nop
nop
push
lea
push
push
push
push
push
lea
push
push
push
call
jae
push
add
add
xchg
mov
add
add
add
xchg
pop
add
roll
nop
int
add
add
add
xchg
add
add
add
fmuls
mov
add
test
pop
add
out
aad
scas
jne
mov
addb
or
test
add
push
push
lea
push
push
lea
push
call
mov
fldl
ror
add
mov
out
flds
fisubrl
add
add
add
nop
nop
add
add
les
add
cmpsl
lock
sub
pop
nop
push
shl
lea
shr
pop
nop
push
lea
push
push
push
push
push
push
push
push
lea
push
call
out
mov
jp
test
add
mov
add
sahf
adcb
movsl
ja
add
scas
insb
cmc
add
roll
xchg
in
sub
pop
inc
push
push
push
push
call
xlat
add
fs
sahf
add
in
add
push
add
add
add
mov
scas
in
loopne
add
std
jp
faddl
xchg
les
scas
rolb
ljmp
loop
add
add
add
jns
in
add
add
outsl
mov
addr16
lock
pop
nop
push
shl
ror
add
add
pop
nop
push
sub
sub
add
dec
pop
cmp
jb
push
add
pop
xor
push
add
lea
ror
pop
jmp
push
sub
pop
mov
push
push
push
push
lea
push
push
push
push
push
push
call
xchg
add
mov
add
imul
lds
testl
in
mov
add
mov
sahf
add
cmc
add
mov
add
movsb
add
imul
icebp
pop
sarl
add
fcmovbe
out
sub
pop
add
push
ror
pop
movzwl
mov
push
add
shr
shl
pop
add
push
pop
mov
push
add
lea
rol
pop
xor
xor
push
push
lea
push
push
push
call
add
mov
add
add
add
mov
mov
mov
add
add
hlt
mov
jp
lcall
loope
push
shr
pop
xor
push
push
push
push
push
push
push
push
call
out
ror
cltd
add
add
mov
rcr
add
mov
add
rol
loope
add
sub
pop
shl
xor
push
sub
sub
rol
pop
shl
xor
push
push
lea
push
call
pop
add
pop
add
rolb
mov
add
cmc
add
xchg
js
add
jo
add
fs
jo
add
std
add
mov
jbe
add
jb
andl
add
add
scas
jle
add
jae
add
mov
test
rcll
pop
add
push
lea
push
push
push
lea
push
call
mov
add
xchg
add
jecxz
mov
nop
iret
add
add
loop
out
pusha
add
loope
xchg
hlt
add
add
xchg
add
add
mul
lds
pop
push
add
sub
pop
pop
pop
push
push
push
push
push
lea
push
push
lea
push
call
in
clc
add
add
add
add
jl
icebp
jns
add
add
pushf
idivb
add
add
fcoml
add
add
in
insb
add
rcrb
add
add
icebp
sub
pop
pop
pop
push
lea
push
call
in
add
add
add
jecxz
js
out
shr
add
stc
cltd
push
add
fldl
mov
pop
shll
cmpsb
push
add
mov
add
loope
flds
add
icebp
lea
in
clc
lcall
push
add
pop
ret
push
lea
push
call
jno
add
mov
in
add
push
jnp
push
add
popf
outsl
add
add
lret
out
add
xchg
pop
fcoms
pop
add
imul
add
xchg
fldl
mov
adcb
in
clc
pop
push
push
push
push
push
lea
push
push
call
add
jne
add
mov
mov
add
add
add
add
add
mov
pop
fwait
addb
cld
mov
fcomip
xchg
add
pushf
sub
pop
mov
push
push
pop
push
push
push
push
push
push
push
push
call
aam
xchg
add
push
xchg
add
add
push
add
add
data16
lcall
add
rolb
jo
les
add
filds
jnp
sub
pop
push
push
push
xor
not
pop
mov
push
lea
push
push
push
lea
push
lea
push
push
call
xlat
test
pop
push
add
mov
add
in
mov
add
cmc
pop
les
std
add
add
pop
add
add
add
xchg
add
mov
movsl
lahf
test
mov
push
add
scas
mov
out
add
fadds
xchg
lods
sub
pop
mov
push
sub
pop
mov
test
je
push
sub
shr
lea
pop
mov
push
rol
sub
sub
pop
test
je
push
push
push
push
push
push
push
push
push
call
add
shll
aad
clc
add
xchg
add
mov
testb
clc
jp
xchg
pop
frstor
scas
subl
in
add
cli
xchg
add
add
xchg
stc
mov
add
add
int
lock
add
lcall
notl
inc
not
pop
mov
mov
push
rol
pop
inc
push
push
push
push
call
add
add
out
int3
xchg
enter
xchg
out
fwait
mov
cwtl
les
js
mov
stos
add
mov
add
popf
pop
lret
add
xchg
pop
cld
lea
test
mov
jmp
mov
mov
mov
out
add
loop
push
in
pop
add
roll
cmp
je
push
push
push
call
add
add
mov
orl
xchg
jne
add
mov
add
add
arpl
add
add
popf
add
rcll
not
add
add
mov
lcall
call
sub
pop
test
je
push
sub
pop
mov
push
lea
push
push
push
push
push
call
xchg
add
add
idiv
scas
cwtl
scas
add
push
pop
add
hlt
fwait
add
test
add
add
add
out
mov
lcall
cmp
je
push
lea
rol
pop
test
jne
push
add
sub
shr
pop
xor
push
push
push
push
lea
push
push
push
call
int
into
jns
into
lock
add
mov
imul
addb
out
push
add
add
aad
lods
test
xorl
push
add
add
add
mov
in
lcall
pop
push
lea
pop
pop
push
push
push
lea
push
push
push
push
push
call
xchg
add
push
mov
fidivs
add
enter
cmpsb
loop
pop
pop
add
std
lahf
stc
scas
rcll
int3
jge
add
shlb
rolb
into
push
fcmovu
mov
icebp
xchg
stos
add
aam
in
movsl
mov
pop
stos
add
add
mov
iret
sub
pop
pop
leave
push
lea
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
mov
add
jp
add
add
add
add
pop
cmpsb
push
add
add
mov
add
add
iret
pop
les
rclb
push
xchg
jae
add
lret
shlb
add
add
add
pusha
mov
sub
pop
ret
mov
push
add
pop
inc
cmp
jne
push
xor
add
pop
lea
mov
push
lea
push
push
push
push
push
push
lea
push
push
push
call
rcrb
add
je
fwait
jno
mov
add
xlat
push
call
xchg
in
mov
mov
jl
add
stos
add
call
jo
out
add
pushf
aam
add
jp
mov
aad
lods
jnp
in
fcomps
in
test
add
lea
push
push
push
push
push
push
call
cli
pushf
pop
out
out
jmp
jmp
mov
add
lcall
add
int3
add
mov
add
add
addr16
pop
nop
outsl
jo
add
add
push
push
push
lea
push
push
call
test
testl
pop
mov
lret
add
add
mov
xchg
add
int
pop
add
add
cmc
sub
pop
add
push
lea
push
push
push
lea
push
push
push
call
add
les
add
mov
mov
cmpsb
out
add
add
add
mov
add
xlat
add
pop
lds
sbbl
mov
test
rclb
in
cmp
jne
mov
push
push
push
call
lods
js
jb
mov
popa
mov
cltd
arpl
add
test
movsb
clc
filds
pushf
test
pop
mov
jnp
add
in
pop
test
test
mov
idivl
add
add
pop
cmc
fs
mov
xchg
fists
add
je
cmc
lods
int
push
int
filds
add
add
stos
push
add
mov
hlt
lcall
rorb
add
add
push
push
call
add
add
lcall
pusha
jnp
add
cli
add
rol
cwtl
mov
add
add
lock
add
mov
test
std
jns
mov
add
out
in
clc
lcall
incw
jmp
ror
sub
pop
cmp
je
push
push
push
push
lea
push
call
add
out
pusha
cld
std
addr16
std
ja
sbbl
lods
shl
cmpsb
leave
loope
shl
arpl
jo
pop
add
add
fs
mov
test
mov
in
lods
cltd
add
in
in
pop
jmp
push
ror
sub
xor
dec
pop
xor
pop
push
rol
pop
pop
pop
push
add
sub
shl
sub
pop
pop
push
shr
lea
not
pop
leave
push
dec
pop
ret
lea
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
call
add
xorb
add
jl
lret
add
mov
mov
mov
rcr
add
add
add
arpl
faddl
lea
add
add
popa
add
mov
or
add
sub
pop
pop
pop
push
sub
pop
pop
push
push
push
lea
push
push
lea
push
push
lea
push
call
mov
add
push
imul
add
add
shrl
loope
test
add
hlt
add
cmc
xchg
add
rcr
add
roll
mull
fistpl
ret
push
add
ljmp
lcall
push
sub
pop
leave
push
push
push
lea
push
push
push
push
call
imul
popa
out
popl
mov
add
mov
lods
aam
xchg
mov
add
add
rol
mov
add
cli
add
add
adcb
add
add
pop
mov
in
ret
push
push
push
push
call
xchg
add
add
push
push
add
add
outsl
cltd
lods
in
pop
add
add
in
fildl
stos
shll
aam
cltd
add
data16
in
cmc
cltd
add
add
jecxz
mov
jbe
imul
jl
xchg
add
pop
push
push
push
push
lea
push
push
push
push
call
jge
mov
stc
push
add
add
gs
mov
pop
pop
add
pop
add
mov
out
jbe
push
js
add
int
add
insb
stos
mov
mov
in
add
clc
xchg
fildl
ja
loop
add
add
fwait
ljmp
in
loopne
pop
pop
push
lea
push
push
lea
push
lea
push
call
out
add
add
loopne
add
add
add
lahf
fyl2x
add
jne
add
add
sahf
mov
popa
add
mov
pop
lds
jnp
mov
stc
add
add
add
lcall
in
lcall
push
add
sub
lea
pop
leave
ret
test
jae
dec
data16
test
ja
test
jae
mov
xor
fdivl
test
push
test
push
je
jno
mov
inc
dec
push
xchg
jnp
test
and
pop
or
dec
sti
repz
out
pop
dec
xchg
dec
mov
inc
ljmp
outsl
adc
scas
incb
xchg
cmp
lock
js
jp
xchg
xchg
jbe
mov
call
stos
mov
fmull
daa
ds
fimull
dec
mov
and
mov
add
sbb
pop
mov
repz
jg
mov
popa
pop
push
sbb
stc
pop
or
inc
mov
jne
mov
cmpsl
mov
mov
ret
xlat
jmp
pop
pop
cmp
mov
into
pop
xchg
es
aas
sub
inc
adc
add
outsb
mov
subb
in
aaa
test
fwait
test
sub
movsb
mov
cmp
popl
call
push
pop
rcrl
inc
or
push
popl
mov
sbb
xchg
ret
and
jl
out
and
fdivs
or
fstl
adc
and
fwait
out
pop
and
pop
dec
mov
daa
pop
push
mov
sbbb
adc
andl
cmp
sbb
jle
lret
adc
lret
sbb
add
mov
cmpsb
mov
mov
jge
or
dec
mov
das
js
or
mov
enter
bsr
dec
adc
pop
setno
mov
test
hlt
lret
ret
mov
mov
dec
cwtl
dec
test
xchg
test
pop
fldt
xor
mov
xor
mov
sbb
push
inc
lcall
adc
xor
sbb
ljmp
push
xchg
push
outsl
sub
push
loop
mov
push
loope
mov
jnp
sbb
jns
fmull
or
mov
jae
xchg
hlt
xchg
outsl
aam
dec
jl
xor
aam
xor
add
fs
or
faddp
gs
cld
aas
clc
sti
iret
sbbb
rcrl
push
push
sub
inc
adc
fcoms
push
ljmp
jmp
add
outsb
fcmovu
cmpsl
adc
jl
mov
shr
movsb
dec
fbld
mov
shll
insb
push
data16
push
inc
lahf
jecxz
in
or
push
in
loop
xor
or
mov
loop
fcmovnb
sbb
stos
cltd
dec
iret
orl
xchg
test
xor
jl
test
addr16
cmpsl
lea
sub
out
adc
jmp
add
push
xor
or
xchg
adc
insl
sbb
add
adc
cmp
addr16
adc
sub
mov
push
xor
leave
mov
in
pop
gs
fbstp
xchg
and
sub
lods
mov
jae
dec
mov
xchg
push
shrl
adc
fidivrs
inc
xchg
cs
xchg
lret
js
pop
aad
jecxz
testb
inc
scas
int3
hlt
sbb
leave
out
fwait
inc
cli
push
adc
testb
push
lret
mov
out
filds
xor
xor
push
sbb
mov
cmp
inc
rcl
mov
sbb
mov
sub
push
pop
push
push
movsl
arpl
and
and
mov
dec
sahf
repnz
push
and
dec
stc
dec
cli
nop
idivl
cltd
in
cmc
out
pop
dec
add
or
test
dec
xchg
or
ss
dec
fnsave
jns
pop
lret
mov
aaa
cmp
out
dec
shll
test
adc
pop
repnz
stc
mov
jmp
xor
fisubl
sub
data16
lods
jge
repnz
adcl
jge
mov
pop
or
js
in
sub
cld
cmpsl
aaa
shlb
xor
sti
push
fists
xchg
push
call
dec
mov
add
xchg
dec
call
shrb
popf
dec
stos
dec
arpl
cmp
iret
or
loope
mov
and
cs
inc
xor
xchg
aad
mov
fistpl
inc
out
pop
imull
divb
add
push
mov
xor
mul
adc
into
sarl
inc
push
fnstenv
mov
jns
ret
lret
int3
jb
xchg
xchg
sarl
test
add
mov
shl
loopne
and
int3
xor
imul
push
sbb
loop
pop
pushf
hlt
lods
movsb
jmp
mov
data16
lds
mov
and
xchg
stc
adc
repz
push
shrb
mov
mov
test
add
mov
push
push
pop
repnz
cmp
sahf
cli
loop
and
scas
dec
add
movb
sub
dec
mov
aaa
adc
lock
and
add
sub
orl
inc
jnp
jns
add
and
jmp
adc
out
testl
movsb
adc
ds
jb
dec
push
orb
mov
push
dec
push
dec
test
jne
push
arpl
mov
mov
jno
push
lea
and
inc
inc
rcrb
sbb
add
movaps
mov
test
mov
cmp
mov
mov
sbb
and
xor
orb
repz
lret
sbb
enter
cmpsl
adc
jb
outsl
out
movsl
cmp
int
push
hlt
cmpsl
sbbl
push
jle
cli
push
xchg
push
nop
scas
sarl
pop
dec
out
push
insl
cmc
fisubl
lds
mov
pop
pcmpeqb
mov
scas
cwtl
inc
xchg
adc
or
rep
es
call
sub
ljmp
lock
ret
dec
lods
mov
push
xlat
xorl
dec
push
aas
pop
push
cmpsb
pusha
test
inc
adc
lods
push
jb
mov
popf
jecxz
pop
jnp
stos
mov
test
cld
mov
and
mov
shrb
outsb
aam
inc
popf
pop
mov
bound
ss
int
jb
xchg
add
mov
out
add
and
dec
mov
mov
dec
lods
addr16
shlb
cmp
stos
in
aam
popf
es
cmc
push
dec
pop
pop
adc
fildll
outsl
xor
mov
cmp
add
in
or
jl
jecxz
push
sub
pop
bound
test
imul
pop
jbe
or
es
mov
daa
sub
mov
or
sbb
inc
add
fdivl
rolb
xchg
enter
adc
mov
sbb
jge
and
lock
push
xadd
pop
sub
xor
sub
mov
push
push
loopne
fbstp
push
xchg
sub
dec
fs
addr16
mov
xor
or
movsb
mov
sti
mov
jl
daa
fildll
pusha
roll
xchg
adc
loop
pop
mov
inc
imul
adc
movl
mov
repz
rep
pop
jge
repnz
or
in
jecxz
xchg
mov
inc
push
cmpsb
xchg
xchg
xchg
iret
sbb
mov
movsb
out
jnp
ja
cltd
roll
or
lahf
mov
lcall
roll
sub
add
adc
adc
fisttps
push
les
or
mov
inc
xchg
ror
add
xor
mov
inc
jns
in
push
stos
mov
rcll
add
out
adc
in
sub
jns
arpl
sbb
lahf
and
add
add
bound
and
dec
adc
fwait
ljmp
fs
daa
mov
fwait
push
jno
mulb
pop
cmpb
push
pushf
sbb
pushf
and
jnp
jo
or
movb
test
cmp
inc
daa
rorl
lret
or
popa
cmp
pop
popf
lock
add
enter
js
data16
mov
rol
xor
imulb
pushf
inc
add
addr16
or
lods
sub
xchg
mov
cld
mov
cmpsb
inc
push
out
xor
cmp
add
out
xlat
out
xor
sbb
leave
rolb
push
mov
inc
jnp
xor
xchg
int3
xor
ja
mov
push
mov
lea
das
jg
inc
fwait
je
cmp
pop
es
mov
fistpl
pop
jbe
cmp
in
add
pop
daa
popa
mov
loope
and
cmpsb
push
stos
fiadds
sbb
or
aad
call
dec
fiaddl
sbb
out
repnz
js
and
in
jnp
mov
cmpsl
pop
mov
cld
push
push
ret
stos
int3
xor
jl
sbb
mov
pop
idiv
pop
cwtl
mov
and
push
lret
stos
sub
andb
in
cmp
testb
inc
inc
flds
jb
or
mov
add
cmc
cs
mov
fildll
fs
arpl
sbb
aas
or
sarl
cmc
loope
into
adc
mov
rorb
inc
mov
das
jb
dec
ja
fidivl
jns
fsts
gs
mov
cmp
out
mov
mul
mov
loop
test
adc
jge
push
sub
ret
fistpl
lods
pop
adc
cld
push
popa
test
dec
jl
add
pop
cmp
lods
fisubrs
lock
adc
cli
in
movsl
cmp
and
test
jl
jecxz
mov
cltd
in
imul
jne
mov
stos
mov
jb
fisubrs
inc
mov
cmpsl
scas
add
inc
mov
fcomip
mov
push
out
test
shl
ret
test
mov
aad
or
sub
mov
div
push
add
dec
push
adc
jle
fisttpl
jmp
or
mov
add
mov
jmp
jecxz
loop
in
std
xor
mov
mov
jp
nop
inc
movsb
and
push
pop
inc
sti
leave
cmp
dec
mov
sbb
ss
iret
subl
aam
add
mov
mov
mov
jmp
jl
cmp
or
cwtl
mov
dec
dec
cmp
lods
mov
fcomps
and
and
mov
sbb
cld
cmp
push
call
and
jp
leave
lods
ljmp
push
data16
sbbl
scas
stc
mov
leave
fcomip
lret
mov
ret
mov
xchg
xor
loopne
ss
ljmp
rclb
cmp
orb
insb
jp
mov
ljmp
mov
clc
mov
clc
or
stos
movsl
pop
pop
cmp
std
sub
pop
icebp
sub
repz
ljmp
ds
lahf
outsl
or
xchg
test
mov
push
inc
push
inc
es
ds
jmp
out
mov
mov
notl
clc
pop
fidivrl
lcall
adc
jns
xor
ret
inc
fimuls
jo
into
daa
add
cmpsb
hlt
sub
jge
dec
cmpsb
jo
dec
imul
ja
cmpsl
leave
stos
loope
add
xchg
pop
cmpb
jg
notl
lahf
arpl
push
int
gs
div
mov
insb
inc
inc
pop
sbb
sarb
aam
mov
neg
add
orl
pop
sahf
fs
fdiv
and
shrb
jo
ret
movsl
mov
xchg
jmp
rol
inc
mov
or
sbb
test
sub
sbb
inc
rcrl
sub
fdivs
out
fistps
and
sub
pop
movb
stos
insb
rorl
add
inc
int3
add
pop
ss
lret
jo
xchg
jecxz
sbb
loope
mov
xor
test
ret
shl
inc
cltd
xor
push
xor
in
fwait
xor
inc
mov
jo,pn
pop
inc
mov
cmp
pop
idivl
xchg
in
gs
adc
cmp
mov
sahf
inc
ds
arpl
and
repz
pop
mov
enter
mov
push
mov
inc
insb
outsb
push
ret
sahf
out
sub
xchg
repnz
popf
dec
push
cmp
mov
pop
mov
xor
nop
pop
push
mov
cmpsb
jbe
sbb
repnz
int3
inc
mov
sbb
jmp
js
in
mov
push
mov
outsb
dec
pop
adc
or
outsb
dec
and
sub
pop
gs
in
dec
lds
movsl
or
adc
movsl
leave
lret
fstp
xchg
hlt
adc
clc
out
push
dec
xchg
repz
scas
rol
cs
mov
ljmp
mov
cmp
and
and
loope
jb
adc
dec
je
adc
in
mov
bound
xchg
jl
add
or
pushf
repz
xchg
ds
jae
mov
mov
test
aam
push
xchg
jbe
lret
xchg
xor
stos
push
out
dec
shl
cltd
mov
stc
cs
jnp
into
sub
lods
mov
loopne
movsb
jl
mov
movsb
dec
in
cmpsl
mov
mov
lahf
movl
adc
popa
scas
adc
xor
push
fwait
pop
pop
addr16
sub
mov
cmpsb
fcmovb
pop
imul
jae
add
cmpsl
call
int3
pop
lock
scas
rol
add
dec
sub
adc
loop
imul
push
mov
lds
mov
leave
shll
or
ss
movsl
mov
lock
fistpl
sub
dec
aas
shlb
shlb
mov
pop
int3
imul
test
dec
sbb
push
int3
pop
pop
addr16
cmc
bound
pop
scas
push
sub
dec
inc
pop
xorl
xor
ds
in
inc
or
push
cmp
pusha
les
imul
testl
xor
mov
loop
dec
test
dec
jl
pop
push
jb
mov
popf
movsl
push
and
std
mov
adc
inc
inc
mov
cli
add
das
sub
jp
js
ja
adc
cwtl
lods
cmpsb
sbb
icebp
cli
dec
fs
popa
push
fisubrl
sbb
and
cmc
daa
dec
fistps
adc
mov
push
fdivr
push
sahf
dec
ret
dec
lods
mov
stos
jg
arpl
insl
int
jge
mov
imul
pop
or
jo
fnstenv
out
xchg
fstl
jno,pt
push
out
pop
movsl
xchg
cmp
or
nop
cmp
les
aam
test
enter
in
fbstp
push
xor
pop
out
adc
mov
jge
dec
and
xchg
aaa
xchg
dec
movsb
xchg
int
jmp
addr16
sbbb
repnz
sbb
cmpsb
ja
xor
lods
xor
adc
imul
fists
aas
arpl
clc
mov
gs
dec
insb
arpl
xchg
lret
test
mov
inc
inc
lahf
add
pop
inc
xchg
scas
push
lods
imul
shrl
out
adc
mov
and
iret
push
mov
in
push
shll
or
mov
lods
cs
roll
insl
mov
testl
jge
mov
test
sbb
orb
jle
rolb
jp
jecxz
adc
pop
fadds
fsub
xor
push
fisttpll
push
sbb
xchg
je
adc
js
add
pop
inc
push
loopne
leave
push
outsb
xor
jl
insl
or
mov
mov
pushf
xor
lock
push
xor
cmp
outsl
pusha
cmpsl
enter
andl
cmp
xchg
push
addr16
aaa
lods
clc
sub
mov
add
fildl
cmp
jle
inc
mov
pop
mov
mov
lcall
xlat
inc
cli
jle
cmp
jno
incb
fwait
or
btl
cmp
mov
adc
iret
pop
loop
outsl
or
cmp
test
sub
std
ss
or
jb
mov
xor
cmp
cmp
fisubs
shr
jge
xchg
imul
jno
outsb
push
sbb
clc
cmp
cwtl
cld
testl
xchg
orb
inc
popf
or
mov
lcall
ljmp
movsl
stc
pop
sub
mov
pop
pop
fwait
sbb
inc
xchg
shll
or
push
nop
inc
jl
xor
adc
or
out
cmp
imul
insl
mov
fdivp
out
xor
cs
push
repz
xor
movsl
inc
mov
ss
push
push
xorl
xchg
in
repnz
sub
inc
int
sbb
pop
sbb
pushf
int3
inc
fmull
mov
aam
push
cmp
fwait
pop
imul
sti
ljmp
rcll
js
xor
sbb
sub
mov
add
xchg
jle
subb
push
push
test
dec
sub
test
and
mov
inc
fldenv
inc
jecxz,pn
mov
add
pop
pop
int3
pop
dec
fldt
sbb
push
mov
icebp
dec
jge
enter
out
clc
cs
or
push
xor
pop
cs
xchg
inc
lea
insl
push
cmp
pop
fldz
push
mov
int3
gs
cmp
adc
adc
aaa
push
lret
bound
int
mov
repnz
popa
push
lahf
pop
cmp
and
mov
loopne
cmp
test
in
aad
aaa
adc
cmp
mov
pop
lret
add
pop
add
out
cltd
das
lea
adc
push
arpl
push
daa
push
je
test
fiaddl
leave
test
stos
xchg
int3
cmpsb
or
sbb
sti
test
xchg
leave
xchg
outsl
inc
xor
push
pop
pcmpgtb
xchg
xor
push
sbb
push
sub
stc
cwtl
add
imul
xchg
push
clc
inc
inc
bound
add
cmc
xor
xchg
ja
dec
imul
ds
jle
adc
push
hlt
inc
cld
and
jge
in
ss
push
fsubl
scas
pushf
push
idivl
rorb
mov
pop
push
jl
je
or
loop
outsl
and
push
arpl
mov
mov
sbb
loope
xchg
pop
push
mov
mov
fsubp
or
mov
fisttps
lea
in
pop
test
add
and
xchg
mov
mov
dec
outsb
cmp
cwtl
push
mov
inc
mov
push
leave
jbe
pop
addr16
ret
and
fidivl
aas
pop
ds
mov
dec
ret
pop
out
mov
jl
cmc
clc
bound
cmp
jg
and
mov
imul
add
mov
and
scas
dec
lcall
pushl
push
sbb
lods
dec
sub
mov
cmp
fdivrs
bound
iret
nop
xor
sbb
jecxz
inc
xor
sbb
nop
ffreep
jl
in
fidivrl
xor
mov
hlt
daa
int
lods
imull
mov
xchg
sub
push
enter
add
jne
xchg
push
pop
cmp
movsb
js
mov
sub
xchg
push
sub
dec
loope
push
pop
mov
jg
inc
lock
call
sarl
sti
push
movzwl
mov
test
inc
sub
mov
jo
push
stos
and
jp
fdivr
sub
add
xchg
fcmove
xor
add
push
pop
and
inc
data16
dec
cli
lahf
insl
sti
stos
out
ret
jno
mov
mov
lret
test
lock
mov
ljmp
movsb
je
cmp
rcl
mov
clc
hlt
fldt
add
cmp
daa
fldl
adc
push
ffree
mov
mov
imull
push
ds
sub
fwait
insl
addb
dec
inc
fwait
sub
incl
shl
mov
pop
jb
jo
psubsb
loopne
inc
movl
arpl
aas
jae
in
dec
dec
hlt
mov
adc
sub
inc
dec
dec
cmp
hlt
mov
sbb
adc
out
push
pop
repz
jns
mov
es
xchg
shlb
repz
push
sbb
stos
pop
in
adc
sbb
negl
popa
mov
cmp
mov
fistps
pop
test
in
dec
cwtl
popf
movsl
lret
cmc
xor
inc
or
in
jo
cld
push
sahf
cmp
gs
dec
jecxz
add
inc
cmpl
aas
insl
or
outsb
popf
push
mov
jne
decl
jle
jo
add
add
sbb
fisttpl
cli
lahf
roll
jno
jge
lea
adc
jecxz
fnstcw
notb
aaa
pop
repnz
clc
xchg
push
adc
hlt
sub
mov
cmpsb
sbb
std
xchg
stc
sahf
mov
and
mov
cli
mov
adcl
subl
pop
clc
lcall
out
jb
and
mov
dec
stos
cmp
das
push
xlat
sub
or
pop
add
sarl
gs
sbb
xchg
cmp
cltd
rcrl
and
add
inc
repz
mov
mov
aad
pop
out
loope
jg
mov
push
mov
ljmp
in
push
push
mov
outsl
fwait
sbb
repnz
sub
clc
aaa
dec
addr16
sbb
sub
or
shlb
push
push
addb
inc
push
hlt
mov
jb
test
lcall
dec
push
scas
daa
sbb
cmp
or
cmpsl
xorl
or
xor
jmp
andb
sbb
daa
fsubs
popf
and
push
dec
mov
add
dec
lea
pmulhuw
in
mov
pop
sbb
push
push
push
lds
ficomps
sti
nop
pop
daa
push
push
cs
test
dec
cwtl
lods
pop
xchg
in
add
xchg
pushf
je
jmp
mov
sub
push
stc
loop
add
mov
or
icebp
ljmp
cmp
push
jge
mov
cli
sub
add
xor
pop
pop
and
call
xchg
inc
stc
mov
lcall
out
and
sbb
jnp
push
cmpsb
adc
xor
pop
inc
call
mov
scas
adc
xor
jle
jae
adc
aad
lahf
and
and
clc
adc
je
clc
xlat
xor
jg
and
adc
pop
push
adc
sub
mov
cmpsb
inc
out
into
fisubs
sbbb
fsubl
push
fisubrl
clc
in
mov
dec
sbb
pop
adc
sbb
aad
in
aas
inc
cmp
inc
lods
jle
cmp
dec
sub
pop
mov
xlat
push
mov
shlb
adc
push
mov
xchg
cmpsl
pop
jp
fstps
jl
mov
mov
cmp
movsl
jno
add
repz
xlat
fbstp
or
or
clc
or
mov
dec
add
das
ret
pop
loopne
test
lods
mov
aaa
and
pusha
mov
cmp
pop
mov
into
sub
ja
xlat
mov
adc
arpl
mov
stos
xor
insb
dec
call
xor
jae
inc
stc
xchg
adc
xor
dec
outsb
sahf
out
cld
jle
aas
das
xor
push
pop
ret
iret
mov
in
xchg
js
mov
mov
scas
sarb
push
dec
adc
mov
dec
or
popf
mov
sbb
cmp
sbb
jecxz
adc
xor
add
ja
fs
adc
mov
or
push
ds
cmc
imul
sub
dec
jg
sti
notb
fs
je
ss
dec
xor
mov
ss
pop
popf
ja
loop
cmpsl
xor
aaa
addr16
orl
test
push
fmul
in
mov
gs
mov
add
cmc
iret
popa
mov
in
mov
jnp,pt
aad
jnp
shlb
scas
das
add
xchg
jns
rcll
pmuludq
pop
imull
xlat
inc
stos
cld
repnz
sahf
sub
mov
sti
mov
iret
adc
sub
and
jo
stos
mov
mov
xchg
dec
or
sti
cmpsl
pop
adc
jp
pop
cmp
fcoml
scas
xchg
add
call
push
mov
in
xchg
inc
lret
jnp
data16
stos
call
xor
popa
cmc
shll
rcrl
pop
leave
std
xchg
adc
push
and
adc
outsl
sbb
rorb
dec
mov
lcall
pop
adc
mov
fwait
pop
pop
out
bound
hlt
jle
pop
and
add
mov
aaa
loop
mov
push
sbb
cs
or
ljmp
gs
je
les
sbb
out
pop
sub
daa
and
mov
out
push
xlat
cmp
fdiv
inc
call
mull
scas
jg
cmp
repz
repnz
mov
out
xchg
gs
push
mov
push
in
mov
pop
cwtl
inc
je
pop
jbe
mov
mov
sahf
cmp
xchg
sbb
inc
jge
jo
rcll
mov
movsb
fstpt
cwtl
daa
xchg
xchg
mov
mov
outsl
fists
cmp
fmull
cld
jne
lcall
insl
mov
addr16
int3
add
je
pop
movsl
sbb
pop
xor
leave
sbb
jl
scas
out
cmp
cmpsl
push
xchg
push
inc
ja
cmp
or
test
mov
mov
test
data16
mov
pop
xchg
inc
andb
xor
pushf
mov
insb
mov
loope
shl
out
cli
es
lods
add
pop
call
and
mov
cmp
push
xlat
ljmp
xor
test
bound
cmp
lret
mov
and
std
insb
lcall
iret
shrl
jno
jno
stc
jge
inc
push
in
jmp
xor
dec
das
inc
inc
je
sub
mov
and
push
sbb
neg
fadd
das
jnp
mov
fcom
pop
fistl
xlat
fnsave
leave
aaa
cmp
mov
jecxz
sub
and
cmp
nop
and
push
test
mov
jecxz
or
inc
adcl
daa
popf
mov
sub
sub
pop
icebp
out
out
inc
lock
mov
ljmp
sbb
sbb
fs
inc
scas
mov
in
dec
arpl
test
inc
fwait
push
cmp
mov
shl
sti
rol
sub
les
loope
mov
jp
rclb
lret
dec
fdivs
mulb
pop
and
add
xchg
aad
in
movsl
pop
fwait
adc
and
push
mov
jns
xor
out
add
fnstenv
repnz
xchg
xorb
mov
dec
sub
movsb
jmp
bound
adc
fadds
sahf
dec
mov
fcmovnb
ret
adc
or
fsubrp
xor
cld
test
cmp
incl
push
pop
fdivs
sbb
pop
push
dec
je
dec
lods
movsb
std
pop
mov
pop
mov
xor
int
test
jb
lahf
cwtl
addr16
mov
movb
int3
or
leave
adc
ficompl
sub
insb
jp
inc
pop
popl
cmp
lcall
mov
pushl
jp
stos
hlt
push
sub
sbb
ds
xchg
repnz
insl
gs
and
pushf
jnp
adc
mov
inc
jns
cmp
mov
push
sub
sahf
dec
sbb
adc
icebp
jnp
mov
fstpt
cmp
sarb
nop
xor
pop
jl
jno
inc
loopne
or
sbb
insb
and
popa
sbb
shr
cmpsl
repnz
rorl
or
cmp
arpl
xorb
fsubl
pop
lcall
xor
call
sub
xor
mov
ret
jl
and
xorb
es
pop
sub
rorb
jp
push
jl
call
push
adc
out
testl
arpl
iret
mov
lds
addr16
rclb
rorl
mov
aaa
or
mov
jl
sarb
fidivrs
jle
jmp
push
lret
movsb
mov
in
dec
push
dec
cs
js
stos
insl
push
add
imul
popf
hlt
pop
jmp
cmp
mov
mov
in
pop
mov
xor
xchg
sbb
xlat
loop
or
lock
push
icebp
or
dec
xchg
out
adc
add
inc
pop
jno
add
cltd
sub
outsb
jle
push
dec
outsb
loope
mull
adc
mov
xlat
cli
notl
insb
xor
xchg
iret
push
xchg
cmp
xchg
or
cmp
iret
movsb
ret
pop
xchg
hlt
cli
repz
pushf
inc
pop
inc
add
insl
push
test
xchg
pop
lret
adc
sbb
or
mov
pop
sti
mov
mov
icebp
sub
xor
add
in
sbbl
repnz
test
or
push
mov
cmp
jo
lock
mov
fcomi
mov
sbb
jecxz
cmpb
jmp
sbb
in
movsl
add
fcmovnb
cmp
dec
pop
cmpsb
jne
or
sbb
xchg
addl
mov
outsb
hlt
std
jmp
mov
pop
outsb
lock
pop
cmp
enterw
das
or
pop
adc
jle
in
inc
mov
int
dec
mov
xlat
test
test
sub
aad
aas
xchg
push
mov
mov
mov
and
or
push
jecxz
xor
xchg
mov
stc
push
jg
xor
mov
roll
loop
and
jnp
adcb
and
pop
pop
dec
xor
loope
dec
ror
outsl
ret
mov
and
sub
mov
mov
sbb
or
mov
mov
lahf
or
fbstp
mov
movsl
movsl
or
lods
or
and
out
cmp
shrl
mov
fcmovnb
int
or
lret
xchg
rorb
into
jo
fbld
clc
xlat
fldl
jae
test
lret
xchg
adc
shrb
fdivrp
aam
and
add
push
sub
iret
add
mov
adc
cs
das
mov
xor
mov
std
and
adc
call
sbb
mov
fcmove
call
je
sti
lret
and
adc
mov
cli
sti
mov
add
mov
pushf
and
mov
inc
cmp
xchg
or
inc
dec
xchg
mov
jmp
std
cmc
daa
dec
mov
outsb
loop
shlb
hlt
dec
movsb
jle
jbe
ret
sbb
mov
fs
mov
xchg
dec
cmp
or
test
sub
adc
push
push
jmp
dec
mov
pushf
sbb
into
pop
push
adc
and
int
mov
jge
fisubrs
mov
sahf
inc
jl
adc
jno
mov
fnstcw
mov
and
cmp
xchg
push
inc
fmul
jmp
shlb
push
xor
jns
ret
mov
dec
mov
adc
and
jb
aam
aas
lock
ud2
fidivs
sbb
cmpsb
xor
and
pop
je
fdivl
faddp
mov
in
imul
mov
or
test
push
pop
stos
jmp
mov
cs
mov
mov
mov
mov
xlat
push
push
jb
add
add
outsl
test
sub
mov
ja
xchg
push
mov
repnz
xor
adc
mov
pop
dec
mov
dec
test
call
xchg
cmpsl
lods
lret
jo
add
inc
ss
xchg
pop
clc
pop
idiv
add
insl
cmp
fisttpl
test
cmp
xchg
ret
decb
mov
push
bound
lret
repz
cmpsb
out
jno
push
sub
jle
imul
sbb
leave
mov
lcall
shll
and
sbb
push
sbb
inc
pop
ljmp
cmp
in
mov
pop
into
and
jns
cmpb
std
mov
ror
mov
sbb
pop
hlt
pop
int
mov
mov
rcl
mov
test
mov
mov
lds
scas
mov
pop
pop
cmp
int3
into
test
pop
xchg
dec
aad
out
dec
dec
xor
mov
adc
lods
pop
inc
push
mov
sbb
xor
mov
repz
das
pop
insl
or
nop
xchg
pushf
outsb
or
mov
inc
fildll
jp
dec
in
jo
stos
cmpsb
sub
test
les
enter
imul
fcmovbe
fcompl
mov
lods
movsb
push
mov
out
ljmp
movsb
adc
xor
mov
jno
dec
pop
inc
pop
sarb
cmp
lods
add
mov
xchg
dec
fisubrl
pop
popa
mov
jle
push
clc
jo
jbe
fcompl
test
sub
fsubr
mov
adc
or
and
push
add
inc
add
xchg
in
ja
adc
shrb
or
es
ss
jecxz
cmp
cmpsb
mov
mov
sbb
pushf
mov
mov
lret
int3
mul
mov
dec
mov
imul
or
pop
addr16
cmc
fiaddl
ret
push
outsb
lods
and
mov
pop
int3
xchg
aam
xor
mov
push
cltd
data16
loop
mov
push
leave
test
sbb
cmpsb
xchg
imul
lahf
das
movsl
fcomp
repz
or
add
sub
xor
xchg
mov
roll
lds
daa
add
call
int3
outsb
mov
stos
stc
mov
std
pop
scas
aaa
ss
push
pop
adcb
test
and
pop
push
notb
add
pop
mov
lods
push
mov
out
cmpsl
aad
pop
sbb
jle
push
pop
lret
stos
scas
loopne
inc
loop
outsl
test
test
out
pop
ja
ljmp
pop
pop
sub
leave
aas
mov
cmp
aad
cmp
jl
push
xchg
cmc
jle
push
ret
das
jge
insl
jo
nop
pop
jecxz
pop
rcll
adc
pop
dec
jle
mov
sub
mov
test
aam
sub
test
hlt
adc
mov
movsl
push
mov
xor
sub
cwtl
popa
adc
mov
loopne
mov
stos
dec
mov
pop
enter
jp,pt
lret
icebp
jl
fs
cltd
inc
aam
mov
adc
lods
sub
xchg
arpl
pusha
out
push
jle
jno
adc
daa
das
cmpsl
mov
aad
xchg
imul
jp
call
int
push
into
xorb
mov
inc
and
or
in
xor
pop
inc
xor
mov
jp
mov
mov
jnp
rclb
inc
fadds
andl
clc
ja
mov
push
lret
xchg
cmp
and
add
add
push
push
icebp
mov
loopne
jno
rcll
add
xchg
ds
ret
add
pop
test
dec
mov
std
dec
shll
jmp
stc
push
jnp
adc
fstpl
xor
add
lods
rcr
lret
push
loopne
ja
xor
sub
xchg
mov
mov
mov
mov
je
and
cmp
rclb
dec
mov
push
adc
inc
ret
inc
push
jmp
lahf
xchg
and
dec
sub
dec
push
fcmovnbe
xor
xor
cmp
subl
lds
sbb
fcom
xor
clc
nop
jns
inc
sbb
pusha
xor
push
mov
mov
jbe
dec
jecxz
jg
rclb
pop
push
fcomps
cli
sar
mov
out
dec
mov
test
repz
pop
or
cmp
inc
add
sub
fildl
xor
mov
ss
add
arpl
push
icebp
adc
out
popf
ja
pop
icebp
xor
movsl
jbe
sub
mov
push
test
and
dec
xlat
andb
nop
fs
aad
mov
and
iret
in
jecxz
mov
stos
adc
enter
les
mov
xor
mov
jle
int
jae
test
push
sub
aam
push
pop
or
dec
jmp
jecxz
xor
nop
push
adc
outsb
stos
mov
jo
fwait
inc
dec
leave
push
cltd
or
movb
hlt
andb
test
cmp
xchg
repnz
jl
cmc
rcll
mov
sbb
xchg
lret
repz
pop
adc
mov
mov
pop
mov
jae
leave
imul
fdivs
test
jno
dec
shll
mov
or
sbb
addr16
ljmp
xlat
mov
dec
push
loopne
lcall
cmp
clc
andb
call
sarb
and
rorb
dec
push
inc
imul
xchg
pop
pop
cmp
push
mov
mov
sbb
add
mov
dec
push
sbb
and
jp
and
movsb
jp
xchg
push
in
loopne
pop
out
cli
lret
adc
mov
aaa
jne
inc
fsub
insb
cmp
out
and
in
imul
out
push
mov
xor
enter
add
adcb
and
xchg
ret
sbb
out
imul
mov
dec
icebp
fmul
es
jmp
lret
dec
or
fsubs
repnz
stc
and
ds
add
aaa
inc
cmp
pop
fwait
pusha
xlat
push
lcall
in
jecxz
sbb
clc
mov
mov
mov
and
test
sahf
adc
in
inc
nop
fcoml
sub
mov
imul
sub
pop
nop
jl
cmp
outsl
fcomip
sub
jb
inc
xchg
roll
test
in
jg
push
dec
call
add
ljmp
in
hlt
sub
scas
push
mov
pop
dec
push
rcll
rolb
mov
mov
xchg
inc
and
scas
stc
pop
imul
jle
xchg
negb
hlt
test
rcr
jle
lea
push
stos
adcb
mov
dec
push
and
es
shl
jnp
sbb
xor
sbb
cmp
mov
xlat
xorb
cmpsb
inc
push
add
gs
decb
mov
jae
cmc
mov
lahf
inc
push
jge
mov
mov
xor
js
in
out
cmpxchg
cmp
xchg
lret
mov
mov
mov
shll
nop
aad
adc
out
outsl
jbe
sarb
es
or
subb
pop
in
lock
add
cli
incl
cmp
push
sbb
shlb
xchg
mov
sbb
gs
mov
mov
mov
inc
pushf
mov
push
dec
push
and
xchg
inc
mov
es
imul
jnp
mov
ja
xchg
test
inc
mov
loop
fdivs
sub
int3
jge
lock
les
xchg
mov
xor
lcall
rcll
ja
in
jbe
and
add
test
push
cli
iret
jbe
add
sub
inc
push
cld
push
insb
in
pop
cmp
scas
adc
dec
arpl
cmp
and
mov
mov
testb
ljmp
popf
push
insb
push
sub
clc
cltd
sub
push
test
lea
out
std
add
pop
adc
pop
loope
mov
jb
loopne
inc
add
stc
or
inc
inc
addr16
leave
dec
mov
push
add
cld
mov
jp
mov
outsl
lods
cmp
loop
adc
adc
adc
mov
pop
mov
pop
push
or
popf
ret
push
inc
shr
xor
add
icebp
fidivrs
sbb
bswap
or
sbb
xor
sbb
pusha
mov
dec
test
jg,pn
xlat
or
loop
cmp
cld
push
and
xlat
inc
cli
mov
or
cmpsb
lret
jno
addb
subb
scas
dec
jl
mov
dec
lds
push
adc
negl
insb
add
shrl
jae
push
inc
jg
in
stos
movsl
lahf
jl
pushf
sub
push
gs
mov
pop
or
cmp
in
shll
xchg
cmpsl
mov
push
jl
jmp
repz
push
in
out
push
std
cmp
ficoms
jo
lahf
add
adc
jno
stos
push
outsl
dec
mov
scas
cltd
scas
push
dec
xchg
xchg
adc
push
data16
cmp
dec
test
out
clc
dec
fwait
hlt
mov
or
aad
mov
inc
mov
xorb
into
mov
aad
into
sbb
adc
push
jmp
das
rolb
jns
xor
or
push
out
inc
int
jo
iret
dec
nop
out
mov
add
xor
cmp
out
lahf
inc
shl
mov
adc
idiv
jmp
sub
pop
movsb
mov
pop
sub
pop
inc
sub
aam
or
inc
fdivrl
or
add
data16
js
pop
xor
jno
js
gs
xchg
cmp
jae
in
int3
jb
push
ljmp
push
lock
and
xor
mov
sbb
jl
idiv
add
rorb
aam
mov
mov
mov
dec
push
icebp
mov
jmp
cltd
cwtl
in
pop
dec
xor
dec
xor
nop
cmp
rolb
popf
lcall
xchg
inc
inc
std
dec
fcomip
scas
loopne
xchg
xor
xchg
pop
lret
in
and
pop
xchg
lcall
cld
ds
mov
imul
pop
test
inc
inc
add
fcomps
jb
lcall
mov
sbb
mov
push
jnp
mov
mov
pop
icebp
dec
cwtl
out
int
add
popf
lcall
pop
xor
inc
ds
outsb
jns
cli
mov
mov
in
and
cmpsl
outsl
mov
lcall
cld
inc
out
pop
xchg
shl
data16
add
dec
repz
test
ss
mov
int
movsb
cli
int3
xchg
into
icebp
aas
out
test
scas
test
mov
cmp
cli
addr16
clc
pop
jle
subl
jmp
das
les
lock
jbe
rcr
cmp
mov
sbb
xor
pop
cs
xchg
jmp
test
sbb
in
mov
insl
arpl
dec
inc
push
enter
sbb
mov
scas
not
inc
ljmp
jecxz
rcl
mov
in
ds
jle
mov
clc
sbb
inc
mov
mov
jg
mov
dec
add
push
in
aas
or
jno
inc
and
pusha
rorb
dec
adc
lea
pop
jl
stos
fs
pop
int3
jp
xchg
call
ret
jns
cld
stos
pop
leave
rorb
push
test
in
ficomps
movsb
imul
shrl
insb
push
test
jae
jne
push
pop
rdmsr
bound
xchg
bnd
shlb
out
imul
sbbb
scas
popa
dec
fucomi
out
dec
divl
aaa
push
push
loopne
dec
sub
xlat
mov
imul
jno
imul
jmp
mov
ficoms
xchg
sbb
or
repz
ss
mov
fistl
pushl
test
adc
push
xchg
shl
lds
dec
jg
negl
jno
das
cmpsb
pop
je
pop
shr
pop
jge
jno
loop
mov
sbb
ret
push
cmp
js
xchg
mov
add
dec
in
xchg
into
pop
xchg
mov
dec
jmp
ret
dec
lret
cld
ljmp
decb
cmp
mov
sub
fsubrl
jl
notl
dec
xlat
daa
add
pop
or
jbe
xchg
add
mov
jno
cs
mov
out
inc
ja
cmp
sbb
fs
ret
lds
pop
loope
movsb
add
mov
rcll
add
pop
jmp
jmp
inc
frstor
test
dec
sub
sbb
xchg
add
inc
sahf
and
sahf
pushf
jbe
cld
mov
enter
mov
mov
insb
mov
mov
push
sti
add
outsl
es
orl
popf
inc
cwtl
inc
push
xchg
xor
jae
and
and
lock
inc
outsl
sub
fimuls
xor
jl
addb
stos
subb
bound
cmp
out
aas
dec
pop
es
xor
iret
lock
pusha
mov
xchg
fcmovnbe
lods
cmpsb
sbb
insl
lods
and
jns
adc
mov
pop
mov
sub
loop
ss
pop
pop
jnp
les
cmp
call
mov
mov
jmp
mov
lcall
mov
dec
dec
xchg
cli
xchg
mov
loopne
rolb
add
mov
mov
or
sbb
sbb
dec
test
xchg
cli
push
or
xchg
and
pop
jae
inc
frstor
and
into
in
cmp
imulb
xchg
sub
lcall
fnstenv
dec
mov
push
lea
cmp
cmp
add
pop
mov
or
mov
movsl
xchg
das
int
sbb
adc
insb
stos
mov
fs
stos
mov
data16
test
xor
mov
stc
mov
jb
mov
test
movsl
or
cmp
sbb
test
out
fdivs
ja
idivb
xorb
neg
lret
lret
xchg
aaa
iret
fidivl
mov
ja
arpl
pop
dec
sti
pusha
push
push
cmp
leave
aam
push
xor
loopne
add
sub
cmp
jg
stc
iret
pop
std
loop
out
ss
popa
and
fbld
xlat
dec
je
or
lods
rcl
fwait
stos
sbb
nop
mov
mov
pusha
stos
xor
ss
mov
inc
adc
add
cmp
daa
ljmp
dec
imul
ficoms
movsl
xorl
xchg
pop
sub
lods
iret
test
pop
mov
mov
jle
aas
xor
sbb
cmpl
and
mov
or
sub
mov
pop
mov
cmp
mov
ljmp
and
fidivs
xlat
enter
imull
and
sti
or
mov
std
and
mov
std
sbb
cmpsl
mov
sbb
imul
or
mov
ljmp
inc
sbbl
xor
aad
and
mov
test
loope
loop
out
gs
dec
mov
pop
popa
jge
dec
dec
inc
mov
and
mov
mov
add
add
lcall
jmp
mov
pop
je
inc
aaa
negb
mov
cmp
sbb
xor
fdivs
add
rolb
cmp
data16
sti
adc
or
dec
out
xadd
aad
sub
loope
pop
mov
xor
outsb
push
cli
sahf
mov
cs
loope
std
sbb
jge
repz
jno
push
lods
add
popl
add
dec
or
adc
shlb
cmp
insl
mov
loop
lcall
out
push
or
mov
stos
sub
add
insl
sbb
out
loopne
lret
sbb
mov
aam
or
sbb
pop
inc
roll
push
mov
repnz
movsl
and
mov
mov
fs
ret
insl
sbb
or
push
gs
arpl
sbb
mov
add
inc
mov
or
push
xor
sbb
cltd
out
pushf
xor
mov
dec
jne
push
and
xchg
mov
inc
fcompl
std
inc
inc
xacquire
les
add
test
imul
out
mov
lcall
push
sbb
pop
xor
stc
push
lahf
repnz
mov
loopne
push
stc
pop
subl
rclb
mov
lds
sbb
rolb
add
shll
add
sbb
push
jne
jle
xor
lahf
push
adc
mov
test
cmpsl
pop
xor
fidivl
rcl
cmp
pop
fnsave
lret
mov
outsb
and
hlt
jp
xchg
inc
lods
push
in
sub
mov
dec
pop
mov
ds
ret
dec
lea
lahf
aam
add
scas
dec
addr16
cmp
ljmp
xchg
or
adc
andb
inc
aad
cltd
pop
cmp
cmc
fs
xchg
jg
xchg
pop
and
rcrl
cmp
pop
push
mov
int3
mov
test
adc
mov
das
mov
stos
cli
jp
inc
into
and
adc
loopne
call
inc
add
xlat
jno
ror
stos
xchg
fcompl
lods
and
daa
rol
mov
jp
das
push
lahf
incl
inc
jg
xor
popf
and
insl
and
adc
mov
cmp
leave
pop
fcomps
jmp
popa
sti
in
je
dec
incl
std
stos
jg
faddp
mov
pop
test
pop
outsb
enter
pop
enter
xchg
gs
call
fs
jne
or
cltd
out
sbb
test
push
js
mov
jp
jg
pop
push
dec
je
loope
test
pop
push
in
sbb
or
sbb
aaa
pushf
cmp
xchg
jle
mov
sub
mov
rclb
pop
xchg
in
sbb
sub
in
cmp
sub
inc
adc
ret
out
mov
popa
jecxz
and
scas
or
mov
sbb
hlt
pop
pop
shr
sbb
mov
gs
adc
iret
pop
xchg
scas
or
hlt
fs
push
cs
scas
ja
cmp
push
dec
gs
xchg
aaa
ss
ds
das
jge
mov
or
test
mov
xchg
into
aam
fsubrs
mov
xchg
xchg
sbb
cwtl
jns
stc
aam
sub
mov
push
and
nop
lods
leave
mov
adc
push
lcall
es
aaa
and
repz
cli
out
cmpsb
ja
mov
sub
movsl
nop
aad
sbb
adc
mov
aaa
jp
cmp
jns
shl
imul
in
or
shr
mov
lret
pop
jl
sbb
jbe
daa
mov
mov
xchg
mov
rcll
adc
cltd
mov
nop
cmp
pop
pop
ficomps
aad
cmp
nop
sub
arpl
and
mov
xor
leave
dec
inc
in
les
int
pusha
mov
push
jno
jns
add
nop
xchg
mov
and
leave
addr16
incb
xor
jg
inc
sbb
push
pusha
or
mov
dec
pop
sarb
push
and
aad
cmp
adc
jnp
xchg
ja
xchg
in
dec
xchg
outsb
or
decl
in
push
mov
fbstp
sbb
cmp
jnp
jb
dec
mov
scas
jb
and
int3
add
inc
fisttps
pop
incb
push
call
sahf
cmpsl
sub
or
add
std
repz
fldcw
cwtl
xlat
sub
jne
ret
push
sbb
adc
mov
pop
fidivrs
fcoml
outsb
add
hlt
mov
divl
cmp
adc
enter
stos
jecxz
mov
out
lock
mov
stos
jne
pop
shll
lock
pusha
mov
mov
cmc
pushf
dec
sub
sahf
cmp
push
adc
aam
shl
sub
hlt
push
sbb
arpl
testl
lds
ljmp
add
sarl
push
scas
lock
mov
hlt
hlt
or
mov
push
or
pop
mov
leave
aas
adc
and
jge
shl
cli
scas
add
dec
loope
scas
add
fwait
addr16
dec
in
out
jge
mov
dec
push
scas
repz
push
mov
jo
mov
clc
mov
mov
out
xchg
fwait
add
test
mov
cs
jb
stos
sbb
xlat
mov
std
shll
out
xchg
cmp
mov
lock
push
jmp
jbe
jmp
arpl
dec
mov
icebp
out
mov
inc
pop
rcl
pop
jge
pop
es
inc
das
cmp
and
and
push
jmp
bound
sbb
cltd
movsl
sbb
cmpsb
aas
mov
insb
adc
inc
and
lahf
mov
or
inc
mov
es
jne
sbb
lahf
lds
ftst
mov
roll
fsubl
mov
push
or
pop
xchg
lcall
adc
or
jae
in
clc
cmp
and
bound
xchg
inc
sbb
into
insb
dec
jb
add
pop
inc
neg
fidivl
insl
xor
loope
push
js
ret
leave
or
das
dec
adc
test
xor
aaa
ljmp
sbb
fmuls
scas
cltd
test
dec
imul
fdivr
add
lahf
jle
jne
daa
or
and
mov
out
sub
cli
cmp
mov
jb
je
enter
sti
mov
stc
inc
dec
adc
mov
push
push
jmp
pop
xor
data16
lret
cmp
sbbl
scas
adc
ficompl
das
into
or
pop
adc
je
push
cmp
je
xchg
pop
jge
dec
xor
or
shrb
xchg
lods
adc
jecxz
sub
push
divl
xlat
jo
imul
inc
sub
cli
pop
and
pop
mov
xchg
fcmovnbe
je
push
mov
outsl
ss
xor
adc
nop
fldcw
roll
js
popa
out
xor
ljmp
xchg
sbb
imul
mov
pop
lods
rcr
dec
lret
lods
addr16
out
jae
push
and
icebp
rcrb
cmp
cmpsl
mov
movb
cmp
inc
xchg
push
aad
shl
dec
rcll
pop
pop
cmp
fwait
dec
and
and
dec
dec
lock
in
add
xchg
shlb
movsl
lahf
stos
nop
jbe
in
mov
adc
movsb
into
nop
add
xchg
aad
jg
mov
cmp
lahf
dec
movsl
mov
adc
lret
mov
fsubl
mov
into
mov
filds
jnp
add
int
pusha
inc
push
arpl
into
scas
mov
lcall
cwtl
push
inc
fdivrl
dec
jno
and
xchg
jne
fcmove
push
mov
jmp
push
ret
pop
jecxz
sbb
xor
lea
jmp
xor
mov
mov
xchg
outsl
bound
dec
ss
ret
jge
sbb
inc
mov
mov
iret
loop
add
pop
sbb
call
neg
lods
mov
mov
fists
icebp
pop
lret
mov
xchg
add
popa
and
xchg
sub
or
cli
insb
mov
xor
push
jge
or
lret
mov
adc
arpl
pop
xchg
xor
aaa
jge
dec
add
adc
jp
ret
fmull
dec
cs
ljmp
pop
xor
addr16
or
push
roll
cmpsl
jo
lret
loopne
stc
cmp
push
popf
jg
and
pusha
push
inc
in
inc
inc
test
jno
jno
xor
mov
mov
in
adcl
push
dec
out
and
lock
push
loopne
push
jp
fists
xchg
push
loop
clc
add
add
push
push
shll
inc
sti
jle
leave
inc
xchg
xlat
aam
sbb
sub
iret
std
or
shl
pop
les
outsb
outsl
iret
push
mov
pop
push
mov
cmpsb
popa
imul
mov
lods
out
add
cmp
and
jno
lea
sbb
mov
push
push
lods
in
and
adcb
cmp
sub
jge
dec
jge
mov
leave
lea
data16
stos
mov
pop
lock
enter
nop
addl
xor
loop
jbe
xchg
ja
aad
xlat
xchg
movsl
push
enter
pushf
jbe
insl
xor
cld
mov
push
and
stc
sbb
pusha
lea
retw
gs
push
mov
push
adc
xor
repz
movsb
bound
nop
pop
bnd
fwait
data16
cmpxchg
jp
call
addl
dec
adc
xchg
aaa
sub
push
xchg
mov
sbb
fs
ret
jmp
adc
mov
mov
mov
gs
pop
and
xor
addb
cmpb
in
inc
sti
mov
nop
icebp
daa
and
int
into
arpl
nop
or
sarl
pop
in
add
adc
loopne
das
int3
pop
jmp
xchg
sub
mov
and
sarb
push
xchg
jmp
push
and
fcomi
inc
xchg
shll
dec
aas
lods
xchg
in
mov
pop
inc
push
insb
ss
sub
pop
popw
clc
mov
mov
sub
out
adc
stos
jnp
inc
jno
pop
insl
adcb
and
into
dec
cwtl
mov
mov
ljmp
stc
sahf
repz
incb
inc
test
pop
pop
push
lds
setle
push
mov
pop
out
out
xor
and
bnd
ret
cs
sti
sub
jns
mov
adcb
push
push
mov
cli
cmp
cmp
and
sbbl
clc
sbb
inc
or
xor
es
cld
sbb
jg
push
mov
mov
lret
mov
cwtl
mov
add
jns
dec
mov
jl
jge
les
sbb
sbb
adc
add
out
xor
in
sarl
pop
icebp
inc
push
add
sub
clc
mov
out
lret
sbb
movsb
imul
rcll
data16
adc
lahf
mov
fidivs
ja
mov
jmp
insb
jmp
lods
std
mov
movl
sti
push
stos
sbb
xchg
lret
cmpb
cmp
xor
xchg
add
xchg
sahf
out
cmpl
cmp
ret
dec
adc
sbb
loopne
add
out
cmp
daa
or
dec
and
lds
mov
adc
pushf
sbb
in
andl
mov
jbe
movsl
shr
lods
mov
xor
arpl
adc
push
lods
or
add
addl
rcrl
movsb
or
push
mov
rclb
mov
cmp
sahf
popl
and
add
int
scas
lcall
sbb
xor
out
clc
cli
mov
lock
mov
xchg
imul
into
jb
cli
repnz
movsl
adc
jne
inc
das
pop
mov
decl
pop
test
and
adc
xor
push
mov
std
shll
add
int
dec
mov
inc
inc
mov
xor
stc
push
pusha
in
or
or
xlat
sub
add
mov
xor
loop
popa
mov
dec
iret
shrl
ja
mov
cmp
aaa
jge
fcmovne
mov
ds
and
out
gs
or
inc
out
adc
in
xor
fisubrs
inc
or
jg
mov
outsb
rcrb
mov
mov
in
adc
fsubs
xchg
out
stos
lcall
les
xor
dec
out
call
jbe
lods
fidivrl
xor
test
ja
push
in
cmc
popa
fdivs
in
bound
add
loope
enter
pusha
xlat
sbb
pop
inc
jle
or
pop
in
sbb
cs
shlb
pop
ss
mov
imul
jmp
push
add
rcr
inc
scas
xchg
aas
pop
mov
loop
hlt
pop
mov
jg
jo
js
pop
add
cmc
jecxz
and
out
or
cmp
ret
xchg
in
mov
into
pop
dec
jp
aas
sbb
icebp
adc
fdivl
or
lods
mov
addr16
xchg
cmpsl
lret
scas
data16
mov
cld
out
ss
push
ds
lcall
js
test
ja
sbb
repnz
sbb
add
gs
dec
lcall
xlat
add
ret
mov
clc
stc
push
fcmovu
inc
adc
icebp
sbb
push
push
imul
icebp
enter
sbb
ds
cmp
push
jae,pt
jb
test
movsb
xchg
xchg
int
jae
sub
int3
xchg
jmp
mov
stc
sub
pop
loope
rorb
fistpll
sub
add
cld
inc
mov
test
in
ljmp
jge
pop
xor
or
xchg
sub
mov
in
std
jp
je
lock
mov
push
mov
inc
roll
jne
add
sbb
mov
dec
jae
clc
xor
mov
fsub
add
out
cmpl
mov
jb
sub
push
pop
lods
xchg
cld
stos
dec
jecxz
sub
enter
mov
stc
stos
sub
pop
pusha
or
pop
scas
lcall
or
add
ds
clc
mov
dec
addr16
inc
js
dec
pop
jg
mov
sub
lret
lea
mov
repz
addr16
cli
jmp
and
fs
mov
xchg
mov
mov
das
addl
inc
jb
pusha
inc
cmp
cli
adc
flds
add
cmpsl
dec
or
mov
daa
mov
jle
dec
push
inc
dec
inc
call
and
insl
jbe
mov
jb
into
pop
mov
shr
add
and
repz
mov
repz
mov
mov
sbbb
mov
xchg
jp
jmp
sub
out
adc
sub
mov
jmp
cmp
push
aad
lods
in
scas
jb
enter
push
mov
dec
in
pop
sbb
cltd
in
xlat
mov
jmp
out
fwait
jns
push
xchg
add
movsb
lock
xor
and
sub
in
mov
dec
sub
add
jp
jl
icebp
scas
mov
movsl
jnp
jno
cs
in
aam
sub
sub
jae
inc
or
inc
lock
sbb
add
push
xchg
pop
and
mov
adcl
push
shll
push
lcall
push
xor
cmc
add
aaa
out
aam
cs
or
or
cwtl
mov
cmp
jecxz
js
lea
pop
imul
out
mov
xor
mov
imul
int
mov
pop
shl
ds
enter
pop
pop
xchg
fnsave
or
arpl
jg
mov
mov
push
xchg
cmp
int
inc
mov
cmp
xor
jb
adc
test
lret
repnz
sub
jb
int3
popf
adcb
inc
ja
int3
stos
inc
mov
rorb
xchg
movsl
xchg
or
mov
pop
iret
out
rcrb
mov
mov
xorl
or
sbb
dec
clc
andb
cmp
roll
mov
test
fnstsw
jb
dec
fsub
jp
cmp
xchg
fnstcw
mov
jp
vmovdqu
sub
cmp
ja
adcb
xor
data16
jmp
mov
ret
jnp
mov
inc
decl
pop
adc
cmc
xor
cmc
dec
dec
mov
push
pop
sub
scas
popa
dec
or
orb
xlat
repz
sbb
out
incb
cmp
push
mov
ss
pop
loope
add
nop
sub
sub
mov
out
loop
mov
add
ret
add
mov
cwtl
repnz
test
sub
sti
mov
jmp
xchg
test
push
inc
push
test
add
push
sahf
pop
push
das
mov
mov
in
sti
xlat
dec
and
cs
pop
mov
gs
and
dec
enter
pop
xchg
aaa
movsb
xlat
fldcw
sbb
pop
add
sub
mov
jne
scas
imulb
mov
int
pop
in
mov
gs
outsb
pop
test
cmp
mov
xorb
or
mov
push
ret
pop
fstpt
jne
pop
js
movsl
xchg
xor
mov
push
shlb
mov
ret
cs
jge
je
xor
stc
inc
mov
mov
xchg
into
stc
lret
inc
xchg
icebp
jae
add
sub
add
jecxz
mov
mov
andb
in
sub
jmp
xchg
stos
and
cmpsb
hlt
add
sub
ja
and
aad
shll
jbe
jmp
pop
mov
jge
xchg
inc
mov
inc
and
mov
mov
cmp
fiadds
aad
or
and
mov
cmp
pop
or
out
sti
adc
les
stos
mov
in
in
cmp
iret
pop
mov
jmp
fwait
rorl
push
add
repz
adc
lcall
in
mov
adc
inc
mov
jge
mov
sbb
pushl
jmp
test
pop
pop
mov
xchg
and
in
inc
enter
jae
cmp
jbe
dec
pusha
jae
cltd
and
xlat
cmpsb
push
push
jns
inc
cld
lret
xchg
jae
jns
clc
cmp
mov
jae
pop
xchg
outsl
cld
ja
push
aaa
pop
add
bound
leave
push
mov
std
push
loope
pop
sbb
sbb
inc
ljmp
shlb
add
and
iret
lret
outsl
pop
addb
sub
mov
int3
mov
mov
dec
jl
call
sbb
jecxz
aam
cmp
pop
or
or
cwtl
stos
pop
mov
data16
jns
dec
loope
inc
mov
xchg
cmp
push
arpl
adc
fistl
inc
sbb
mov
inc
cmp
data16
stc
icebp
int
or
pusha
adc
hlt
dec
or
xchg
xchg
cs
lahf
jns
cmp
lock
push
push
or
xor
insb
adc
lock
iret
fcoml
mov
inc
or
mov
loope
jns
or
push
fisubrs
or
xchg
and
cmp
sarl
aad
inc
jno
mov
fiaddl
jne
sub
in
repz
mov
push
insb
inc
sub
sahf
rorb
xor
int
nop
out
sbb
push
mov
aas
fadds
ret
sbb
iret
sti
rcrl
imulb
pop
pop
jns
call
roll
mov
int
test
cmpsl
xchg
jmp
dec
daa
xlat
lods
cmc
sub
push
lahf
mov
ljmp
movsb
push
dec
test
inc
dec
mov
out
sub
test
sub
and
inc
push
iret
lahf
mov
pop
in
adc
mov
mov
jns
mov
pop
in
mov
test
dec
jns
aad
lock
add
jmp
adc
cmp
add
cmp
popf
jno
adc
nop
pushf
xchg
fadds
inc
sub
lret
popf
cmp
sub
xor
xlat
shll
add
and
cltd
mov
adc
push
lcall
cli
insb
jmp
outsl
shl
push
push
add
lods
pop
fimuls
rorl
add
lock
push
mov
cli
xchg
lea
fstpl
lods
enter
sbb
pop
test
mov
test
cmp
lret
hlt
push
and
mov
inc
leave
pop
sbbl
pop
inc
loope
out
pop
testl
and
push
fcmovnbe
and
dec
pusha
out
sub
scas
jbe
in
fisttpl
xor
dec
scas
mov
shlb
into
dec
inc
xor
jp,pn
je
in
aam
or
sbb
data16
ret
sbb
jl
cmp
arpl
adc
negl
sub
mov
dec
cmp
mov
xchg
fsts
adc
fdivr
cs
lds
outsl
dec
outsl
inc
push
cmp
inc
push
sub
fwait
mov
lods
mov
mov
pop
pop
xchg
inc
cmpsb
xchg
sahf
or
into
pop
cmc
pop
jecxz
jb
jno
sbb
or
stos
and
addl
sbb
int
cltd
shrl
dec
aaa
pop
insb
call
pop
lds
inc
stc
xchg
lods
rcrl
sbb
sbb
cmp
mov
pop
mov
outsb
cmc
jne
xchg
adc
push
ret
mov
dec
cmp
in
add
mov
sub
fsubl
shrb
pop
inc
jmp
mov
int3
imul
pushf
jmp
sbb
adc
in
scas
mov
sbb
ficomps
test
mov
push
jbe
fcmovnb
or
dec
inc
mov
cmp
pop
or
and
jmp
cltd
adc
inc
clc
inc
mov
sub
bound
adc
mov
push
repnz
pop
xlat
sbb
adc
push
fstpl
push
inc
xor
popf
add
leave
popa
in
call
inc
ss
inc
mov
shl
push
imull
jp
pop
dec
mov
ljmp
xor
adc
test
xor
fld
xchg
cmpsl
mull
jnp
push
xchg
cmc
push
sbb
sub
arpl
stos
mov
pop
pusha
subb
sbb
mov
mov
andb
xchg
xchg
sbb
pop
repz
gs
aaa
addl
call
lea
pop
adc
sub
push
insl
sub
pop
dec
icebp
test
insb
xchg
xchg
sub
sub
loope
xchg
mov
xchg
mov
xor
inc
lahf
adc
mov
sbb
mov
icebp
lret
ljmp
fcmove
mov
hlt
fildll
pop
mov
imul
outsl
in
cmp
out
insl
pusha
inc
mov
mov
arpl
push
mov
or
fwait
pop
pop
or
adc
jp
mov
sbb
lahf
subb
or
jecxz
pop
cmpsb
push
mov
pop
xlat
mov
xor
addr16
sbb
ljmp
jmp
inc
mov
push
rorl
int
lea
inc
or
jne
test
sti
test
push
iret
or
xor
je
hlt
jb
sbb
and
mov
fcomps
fidivrs
adc
push
push
push
fistps
les
jp
mov
rcrl
into
xchg
push
adcb
gs
aad
and
mov
pop
dec
aas
sahf
pop
data16
mov
addl
fsubl
nop
sub
aas
jno
ljmp
imul
movzwl
std
mov
mov
fidivrs
mov
cmp
nop
xchg
add
fcmovb
test
cli
sub
fsubr
sbb
cwtl
cmp
sub
mov
popf
inc
xchg
sbb
ss
insb
mov
or
push
les
mov
pop
push
dec
xlat
push
jp
adc
loopne
popa
es
scas
or
cld
pop
mov
inc
int3
mov
scas
in
and
xchg
add
or
cmc
sbb
daa
xlat
push
aaa
jno
or
pushf
repz
into
dec
aas
je
cs
pop
test
scas
jnp,pn
push
xor
cld
mov
je
xchg
fwait
and
int3
int
inc
imul
dec
fcmovne
cwtl
in
ds
push
dec
sub
xchg
enter
outsl
and
imul
push
mov
or
adc
add
sbb
inc
xchg
jp
pusha
pushf
xlat
leave
mov
sbb
xchg
lret
mov
les
cmp
mov
repnz
or
sbb
mull
adc
js
roll
jge
pop
nop
icebp
xchg
imul
add
xchg
pop
adc
data16
inc
and
xor
fistpl
out
mov
mov
shrb
mov
or
push
jns
mov
lret
icebp
mov
dec
mov
bound
shlb
mov
dec
int3
test
mov
add
ja
jecxz
add
pop
cmp
std
fnstsw
pushf
lea
and
sub
xchg
push
movsb
data16
mov
into
stc
mov
into
or
inc
mov
or
mov
xchg
mov
or
adc
inc
fs
mov
aas
std
insl
pop
scas
adc
loope
push
adc
push
mov
shll
xor
push
fwait
lods
xor
mov
aaa
mov
push
or
mov
dec
mov
movsb
stos
stc
push
dec
pop
in
cld
add
pop
cmp
mov
sahf
pop
push
shlb
pop
cmp
scas
push
xchg
in
mov
lret
xor
lret
jnp
psubd
push
movsl
xchg
loope
js
push
test
or
setge
loopne
sub
stos
insl
loopne
mov
sub
sti
addl
movsl
scas
rorl
jnp
pop
sbb
jge
imul
mov
jp
in
daa
rorb
mov
jb
stos
mulb
sbb
or
fimuls
cmp
dec
lock
adc
stos
orl
into
xor
cltd
inc
ret
sbb
and
xor
xchg
in
xor
addl
push
roll
ficompl
rcrb
sahf
push
scas
mov
mov
mov
mov
sbb
xor
data16
popa
push
pop
mov
or
inc
inc
fstps
pop
inc
es
pusha
lds
inc
mov
nop
xor
cmp
movsl
push
jmp
loopne
dec
negl
sar
lods
clc
xor
add
cmp
pop
mov
ja
sub
mov
adc
xor
lahf
outsb
push
pop
inc
cmp
jle
jbe
lods
dec
out
into
push
adc
mov
clc
dec
mov
cmp
test
jae
xor
imul
int3
out
gs
div
fwait
imul
in
pop
mov
iret
mov
loope
shll
mov
cmp
and
push
xor
aad
pushl
movsl
lahf
mov
cmp
lods
repz
inc
dec
jmp
mov
pop
fildll
cmp
xchg
push
jecxz
repnz
mov
out
out
push
mov
adc
xor
inc
pop
pop
jns
scas
cmp
stos
cmpsb
cmpsb
fldcw
imul
jo
imulb
cmpl
mov
popf
jmp
xchg
xchg
bound
push
loope
pop
sbb
rcrl
insb
xchg
imul
loope
mov
pop
push
add
popf
jbe
mov
scas
pop
bound
sbb
push
dec
in
sbb
push
xchg
or
rcl
sahf
or
mov
into
xor
pop
insl
push
jl
sbb
into
es
and
xor
lcall
outsl
push
aam
scas
xchg
lret
push
int3
or
cs
add
jbe
push
cli
movsl
xchg
into
jb
test
xor
jnp
add
aam
and
cmp
shrl
loope
or
cmp
cmp
out
rorb
lret
mov
inc
inc
pop
cmpsb
pop
jmp
and
or
test
sbb
stc
loopne
in
or
cmp
stos
push
lods
enter
xor
out
adc
shlb
mov
mov
sbb
add
jae
int3
div
sahf
mov
test
jle
out
push
popa
addr16
adc
pushf
xchg
stos
pop
aas
pop
out
in
adc
je
int
fwait
xor
xor
popf
adc
rcrl
outsl
in
xchg
insl
out
nop
xchg
shlb
sub
pop
pop
cmp
mov
push
ljmp
mov
push
imul
movsb
or
adc
popa
aaa
lds
aaa
jl
fxch
cmp
jnp
divl
rcll
insw
les
sarb
int3
fwait
aas
and
sub
mov
aaa
xor
outsl
jmp
and
inc
ja
stos
mov
mov
mulb
sbb
pop
popa
fwait
adc
push
dec
and
and
addb
rorl
popa
aam
push
jge
aas
add
scas
xchg
popf
loope
mov
mov
pusha
mov
rolb
fnstcw
leave
orl
cmp
test
fwait
xor
imul
cmp
jbe
mov
sub
dec
repz
addr16
and
out
idiv
call
add
imul
daa
push
aas
push
pusha
aaa
xor
arpl
push
fmul
jp
add
fstpt
lods
aad
dec
in
push
sub
mov
addr16
push
jg
cmp
adc
sahf
mov
mov
lcall
dec
in
add
data16
adc
add
dec
sbb
icebp
lock
or
scas
shll
pop
ja
pop
pop
lock
mov
add
jno
rorl
add
jg
or
mov
out
insb
jnp
mov
mov
dec
adc
jg
inc
mov
outsb
jo
popf
xchg
add
and
pop
in
and
mov
dec
call
aam
rcrb
inc
jp
sub
sbb
inc
xchg
lds
mov
lcall
push
sbb
pop
rcrl
aad
sub
cmovnp
and
lock
add
or
idivl
shlb
pop
inc
xchg
add
mov
cltd
in
mov
fwait
pop
add
lret
fs
addr16
in
scas
sbb
jns
jg
sbb
mov
mov
scas
xchg
inc
mul
lods
movsb
push
mov
fwait
mov
int3
jg
jg
cs
daa
xor
out
push
dec
rcr
lea
mov
cmp
mov
push
movsl
cmp
mov
cmp
mov
dec
jno
js
sti
add
jnp
jle
imul
xchg
cmc
and
dec
adc
push
pop
or
int
insb
and
sub
stos
push
or
cmp
mov
repnz
mov
mov
fs
lahf
push
shll
test
daa
sub
push
rorb
fnstsw
pop
adc
aaa
iret
in
sub
add
or
inc
xchg
addl
bound
add
ss
rcl
push
xorl
mov
testl
inc
pop
push
in
mov
scas
mov
mov
jmp
icebp
mov
xor
xchg
mov
sub
sbb
pop
in
or
or
sub
push
pop
cld
ja
inc
orb
shl
sbb
leave
xchg
cld
jle
ljmp
cmpsb
push
pop
jle
jg
sbb
mov
pop
sahf
cwtl
push
jbe
lods
mov
cltd
sti
push
jg
lahf
xlat
andl
xor
xor
incb
rcr
cmc
leave
mov
jle
rcl
and
cmp
adc
rcr
mov
std
jnp
aam
sub
xor
jl
mov
add
inc
call
hlt
icebp
clc
or
daa
mov
sub
aaa
xorl
inc
mov
cmp
dec
jns
cmc
es
fwait
orb
dec
fisttps
dec
sbb
mov
dec
push
addr16
test
lret
aas
outsb
mov
cmpsl
test
push
dec
push
xor
enter
lods
jne
inc
stos
ret
lret
sub
mov
jge
sbb
sbb
xor
push
cwtl
cmpsl
mov
lret
push
rorb
test
inc
lds
sbb
fdivrs
idivl
shlb
inc
loopne
jae
sbb
inc
and
insl
or
das
lods
shll
sub
cmp
lea
jg
xchg
inc
sbb
in
jb
inc
ffree
mov
hlt
and
fwait
xchg
push
lret
xchg
cmp
mov
lock
scas
lods
inc
push
lods
int
pusha
bound
push
popa
js
loop
inc
dec
pop
pop
jmp
push
inc
mov
dec
or
mov
sub
push
cmc
out
mov
push
add
mov
xchg
in
cs
push
mov
cmp
sub
mov
mov
std
rol
ja
sub
in
mov
pop
jg
add
add
mov
pusha
shlb
jp
and
jecxz
insb
loope
fdivs
and
addr16
mov
mov
je
scas
shll
outsb
iret
xor
mov
dec
out
lcall
pop
or
popa
pop
test
repz
adcl
sti
iret
mov
int3
jno
xchg
rorb
mov
dec
divl
test
test
in
adc
push
xchg
mov
xchg
dec
and
jo
sti
adc
das
push
cs
lcall
mov
push
pop
leave
jl
inc
pop
cmp
fldenv
imul
fadd
xor
cmp
cltd
mov
outsb
ljmp
sbb
out
stc
scas
adc
das
fwait
add
adc
insb
call
negl
mov
jp
jne
jmp
pop
lods
dec
and
ret
in
sub
inc
cmp
fsubr
shlb
loop
adc
ret
push
adcl
inc
adc
push
sub
nop
mov
pextrw
jbe
pop
pop
dec
arpl
bound
movsl
adc
pop
cmp
mov
xchg
fistpl
arpl
loope
aam
jnp
push
dec
inc
fadd
sub
insl
mov
icebp
ret
iret
xlat
xchg
push
xchg
xor
lcall
xor
and
sub
mov
and
mov
xchg
inc
std
sub
mov
std
inc
sbb
aas
stc
cld
pop
pop
adc
jmp
xchg
sub
pop
dec
sarl
loopne
movb
pop
in
push
adc
aas
sahf
push
imul
fsubrl
add
int3
push
mov
insl
push
js
or
es
ds
jle
loop
lret
xchg
adc
cmp
pop
loopne
lahf
sbb
mov
mov
jecxz
push
fldenv
cmp
clc
aas
mov
jmp
aaa
in
and
mov
inc
sub
xchg
andl
pop
popa
rolb
pop
xchg
cmp
movsl
and
lret
mov
scas
xchg
arpl
cld
mov
pushf
js
inc
loope
jp
mov
mov
sub
xor
pushf
mov
repz
push
loop
and
cmpsl
aam
cmpsl
outsb
ret
jbe
test
push
mov
sub
inc
xchg
rcrb
push
xchg
clc
xchg
loop
push
push
rolb
sti
cmp
dec
push
pop
stos
xor
stc
sti
es
ljmp
ldmxcsr
test
mov
sub
hlt
ljmp
adc
pop
dec
or
filds
mov
jnp
mov
lahf
sti
cs
pop
mov
call
scas
mov
and
pushf
in
int3
xchg
xlat
inc
xor
lea
mov
movsl
pop
lods
or
out
jne
loopne
add
xor
jb
cs
push
xor
js
jo
mov
fs
insl
pop
push
mov
call
cli
xor
loopne
scas
jecxz
push
sub
push
add
mov
ljmp
shll
rorl
in
inc
pushf
adc
adc
jbe
inc
loope
mov
jg
dec
cmpsb
ljmp
and
sub
leave
push
adc
mov
ret
xorl
arpl
icebp
push
shrb
push
mov
add
xchg
test
sbb
ss
xor
test
repz
lds
je
lods
jle
push
fdivr
push
xchg
test
fdiv
sub
rcr
mov
mov
add
push
add
std
or
dec
out
hlt
hlt
mov
mov
cs
lods
xchg
popa
fisttpl
xor
fmuls
subb
push
test
dec
or
stc
push
cmp
mov
in
jae
in
or
loop
out
xchg
mov
out
xchg
ja
out
mov
aas
push
or
sbb
sbb
dec
call
add
xor
jg
cmp
fisubs
pop
es
sub
scas
repnz
outsl
lods
push
fnsave
sub
jnp
int3
jge
xor
pop
jle
xchg
xor
mov
mov
shrl
mov
mov
xchg
inc
mov
mov
es
xor
jns
and
jmp
mov
fs
ss
xchg
outsl
cmpsl
add
mov
jg
roll
lods
jge
mov
jg
inc
mov
lret
mov
adc
mov
sbb
mov
lock
out
ret
fs
xlat
loope
das
lcall
int
popa
out
imull
sub
and
sub
cli
inc
sbb
jp
dec
aaa
inc
data16
orl
and
dec
push
xchg
jo
add
mov
xor
ss
in
mov
inc
jg
ret
popf
rcr
xor
sbb
ficompl
jo
or
pop
cmp
pop
repnz
decl
and
add
ja
jmp
aas
lahf
addr16
icebp
or
mov
pop
fistpll
pop
mov
mov
test
mov
cmpsl
hlt
aas
fs
xchg
sub
push
scas
dec
loop
cmpsl
pop
aas
or
repnz
inc
add
loope
sbb
inc
xor
insl
imul
mov
addl
and
insb
cld
into
ss
jb
cmp
xor
pushf
cs
and
adc
aad
data16
mov
jg
dec
dec
int3
push
popf
cmp
mov
adc
cwtl
jmp
or
rcl
and
clc
sahf
mov
and
push
inc
cmp
xor
out
cwtl
sti
out
push
fcmovu
mov
fldt
idivb
push
je
add
lock
test
data16
pop
cltd
dec
add
int
fidivrl
enter
xchg
daa
dec
fstpl
out
mov
push
fwait
and
pop
push
lret
inc
pop
pushf
xchg
jns
add
jne
xor
ret
lds
cs
mov
push
inc
cmp
movsb
or
push
scas
pop
lcall
adc
les
sub
movsb
cmpsl
dec
push
and
out
test
dec
shld
adc
pop
mov
sub
js
lret
nop
ds
call
cwtl
push
add
adc
pop
mov
scas
sub
inc
mov
xlat
test
add
push
and
ljmp
jle
sub
jl,pt
test
testb
int
inc
jmp
jge
popa
outsl
aam
popf
out
sub
pop
pop
mov
loope
jb
cli
outsl
push
out
sub
stos
in
and
jae
aad
addl
imul
stos
xchg
ss
or
add
mov
jge
xor
push
mov
cmpsb
popf
push
sbb
scas
mov
pusha
fdivrl
adc
pop
cwtl
dec
and
out
pop
xor
dec
shlb
jbe
jns
notb
es
loopne
test
sbb
rorb
mov
sub
jge
iret
mov
mov
ja
inc
sarb
scas
test
mov
add
mov
adc
push
aad
mov
nop
fstps
cld
push
insb
pop
mov
dec
arpl
imul
and
mov
push
push
pop
and
lret
in
sbb
push
loope
fcmovne
pop
movsb
lcall
sbb
ss
es
jle
enter
test
and
xor
add
mov
jg
xor
ucomiss
scas
in
lahf
sub
and
push
sbb
xor
cmp
mov
jp
lea
fstpl
inc
repz
dec
bound
test
outsb
mov
fsubrl
mov
hlt
sub
sbb
push
push
dec
mov
insl
lret
enter
jg
mov
cs
rcll
and
or
in
faddl
sbb
jno
mov
cmc
jb
xlat
adc
xchg
into
pop
push
aam
mov
mov
js
jnp
shll
xchg
repnz
cli
lock
fiadds
push
aaa
out
clc
xor
xor
mov
xchg
jns
scas
fsubs
mov
shrb
lcall
lfs
popf
sub
scas
sahf
movsl
call
jo
sahf
jbe
mov
or
add
pop
testb
mov
lock
xor
xchg
push
data16
sub
cmpsl
pushf
ffreep
lds
int3
loope
sahf
xchg
dec
nop
aaa
or
loop
ds
lahf
decl
mov
sbb
xor
lds
stc
mov
imul
inc
push
xchg
mov
cli
push
mov
fisubl
imul
sbb
pop
sub
adcb
or
stc
mov
xchg
testb
stos
jb
dec
repnz
outsl
movl
mov
call
inc
pop
clc
clc
js
sarl
test
fnstsw
clc
mov
xchg
aad
push
sub
xchg
dec
pop
dec
xlat
mov
sbb
out
or
pop
sahf
inc
subl
fildl
push
out
push
gs
ret
and
int
add
jmp
adc
sahf
add
cmc
and
int
sub
cmpl
out
cmc
into
and
dec
add
call
jbe
sahf
push
nop
clc
xchg
bound
sub
dec
sti
rcl
mov
sub
les
js
std
lcall
jmp
movsb
cmpl
jb
mov
in
int3
xchg
jmp
enter
jp
mov
pop
dec
pop
mov
dec
in
pop
leave
out
push
aad
fcoms
add
dec
testl
in
mov
cltd
gs
test
inc
ja
in
dec
clc
sub
xchg
xor
xor
sbb
out
push
test
fisubs
test
dec
shlb
jecxz
pop
mov
pop
cli
mov
mov
lea
xchg
inc
hlt
cmp
xchg
mov
in
mov
mov
jge
mov
xlat
popl
jae
xchg
lds
or
inc
xlat
xchg
adc
inc
cmpsl
mov
leave
aaa
push
fs
enter
pusha
jle
lea
call
cmp
lock
ds
stc
add
and
test
pop
mov
insb
scas
pushf
pop
mov
daa
cltd
xchg
leave
dec
jo
cmp
jo
mov
scas
cmp
mov
loope
mov
push
ret
cmp
inc
pop
mov
mov
pushf
xchg
cmp
adc
mov
mov
imul
nop
addr16
xor
jns
xor
push
ljmp
pop
mov
jb
rclb
lds
pop
mov
stc
xchg
push
xchg
cmpsb
inc
mov
add
or
lods
sub
jle
sbb
jno
xor
sarl
jnp
xchg
dec
cltd
mov
add
cmp
fisubl
ret
or
mov
out
mov
insb
inc
cmp
lcall
sbbb
xchg
mov
repz
mov
pushf
sbb
sub
idivl
sbb
sbb
pop
jle
pop
dec
shll
insb
lock
aas
inc
mov
cmpl
nop
add
mov
sar
ret
inc
sub
in
xor
cmp
ret
aas
aad
in
and
cmpsb
add
test
daa
popa
fcomip
pop
popa
sub
lret
popa
test
fs
cwtl
sahf
cmp
ret
xchg
fs
scas
mov
xor
sbb
fnstsw
and
mov
sbb
mov
jg
imul
loop
sub
jmp
fsubrp
pop
out
fidivs
stos
hlt
insb
sarb
xor
imul
mov
sbb
xchg
dec
xchg
data16
popl
vrsqrtps
je
pop
aam
jp
cmpb
inc
dec
and
rcrl
adc
imul
jb
lods
insb
xchg
inc
ljmp
movsb
popa
and
jge
dec
xlat
xchg
jge
xor
rcr
arpl
xchg
xlat
mov
dec
pop
and
or
repz
out
push
pop
mov
lds
dec
lea
addb
inc
clc
mov
cmc
jp
mov
jl
je
pushf
ja
clc
inc
fcmovnb
add
je
lret
sbb
out
das
cltd
add
mov
adc
xchg
jle
ljmp
rcrb
inc
aaa
aam
in
mov
cmpsb
lods
cs
mov
aaa
cli
int
scas
bound
gs
shrl
mov
pop
in
lock
mov
lret
fimull
popf
mov
xor
popf
int3
mov
in
icebp
cltd
push
out
mov
jb
lcall
int
mov
scas
ds
icebp
push
dec
push
pusha
jecxz
iret
mov
ljmp
loop
mov
mov
sbb
cmpw
in
test
mov
pop
xchg
into
ret
mov
xchg
adc
icebp
lcall
lahf
pop
arpl
cmpsb
pop
imul
test
and
inc
addr16
cmp
sbb
mov
jge
or
mov
pop
loope
mov
jle
outsb
repz
cmpsb
test
fwait
sahf
mov
in
lcall
out
adc
mov
xor
xor
sbb
popf
xlat
sbb
sarb
mov
add
in
repz
sub
sub
push
xor
test
out
sub
inc
repnz
fidivs
cwtl
loop
xor
pop
pop
icebp
imul
xor
fmulp
mov
add
ret
enter
lcall
aaa
ficomps
jno
push
xchg
pusha
sbb
and
je
mov
shll
mov
std
and
jo
adc
aaa
mov
jge
xor
add
cwtl
xchg
dec
lcall
cmp
mov
jbe
fwait
enter
xor
mov
mov
pop
insl
lods
mov
mov
mov
fstps
into
into
cmp
inc
cld
out
inc
sbb
push
arpl
push
adc
in
mov
cltd
pop
push
movsl
jns
inc
pop
mov
shlb
movsl
fdivrl
popf
sub
lret
cmpsb
ret
fwait
xor
jnp
push
jno
cmpsl
out
jnp
dec
dec
notb
jge
pop
sub
das
mov
and
xor
push
and
insb
add
jle
pop
iret
push
bound
pop
or
out
adc
jle
pop
xchg
xchg
xchg
push
sub
arpl
xchg
push
add
adc
popa
or
inc
jl
psubusw
lock
add
push
shll
outsb
fisttpll
xor
lret
movsb
mov
into
xor
mov
cmp
ror
pop
pop
mov
inc
lret
out
les
int3
fdivs
inc
cmp
sub
out
fisubs
mov
jne
add
leave
pop
xor
dec
addl
ret
outsb
repz
scas
mov
pop
mov
mov
test
and
js
cmp
and
cmp
add
cmp
lock
loope
mov
pop
inc
push
scas
adc
inc
test
push
subl
addr16
xchg
mov
pop
pop
cmp
lods
push
andb
pushf
dec
jo
mov
sbb
or
push
mov
leave
jg
jb
fisubrl
ljmp
and
lods
dec
dec
cmpsb
pusha
sbb
fldcw
mov
imul
leave
rcl
sbb
sbb
lods
adc
add
mov
mov
aas
mov
outsb
mov
push
test
adc
ret
cmc
xchg
mov
lock
repnz
mov
jl
jle
js
popf
fidivl
out
ja
dec
jg
push
or
xchg
push
mov
jno,pt
rcrl
cmp
lret
aas
mov
xchg
fadds
xchg
and
addr16
rcr
inc
sub
or
fldcw
sti
stos
xchg
or
test
pusha
adcb
aam
int
mov
ffree
xor
ljmp
jnp
and
pop
std
lahf
mov
xor
mov
mov
inc
mov
mov
out
clc
sbb
sub
xor
dec
adc
push
xlat
stos
aas
cwtl
sbb
jp
insl
test
pusha
xchg
ret
stc
pop
add
xchg
mov
fidivs
inc
jl
insl
jg
pop
mov
sbb
cmpsb
adc
add
mov
insl
in
mov
mov
adc
int3
fdivr
push
dec
stos
cmp
les
int3
scas
jb
sub
jno
add
test
insl
mov
addr16
jmp
or
fsubs
es
adc
aad
bound
dec
push
iret
push
or
fwait
mov
repz
cmp
mov
loop
aas
cmp
xor
imul
xchg
mov
lcall
out
cmp
das
ror
test
in
fwait
push
xchg
shlb
into
dec
arpl
aad
add
lock
outsl
ja
shrl
insl
sti
into
dec
cmp
inc
xor
mov
sbb
ret
or
xchg
inc
andl
out
xor
push
and
add
js
popf
jne
inc
icebp
adc
mov
inc
push
and
out
mov
notb
lahf
imul
shl
add
aam
or
and
cs
sub
adc
cmp
cltd
add
out
inc
sub
fnstcw
enter
add
and
lock
and
fs
aas
sub
fildll
and
insb
sub
test
jbe
mov
int3
jp
les
inc
dec
imul
stos
xor
movsb
inc
mov
sbb
stos
movsl
stos
add
int3
mov
icebp
or
mov
add
enter
adc
cmp
cmp
xor
sti
outsb
cmpsb
xor
push
and
mov
rclb
fstpt
and
jns
add
inc
cmpsl
sbb
and
bound
xchg
popa
and
adc
test
gs
pop
dec
cmpsb
push
fsub
pop
jp
lcall
addl
or
ror
jne
or
jge
cmp
in
inc
xchg
adc
ja
scas
dec
push
cli
pop
scas
es
mov
out
cmp
enter
ret
mov
push
dec
push
xor
fstps
mov
aad
sub
arpl
stos
push
push
xorb
jp
mov
xchg
outsl
jno
mov
out
in
mov
sub
xchg
mov
lret
lods
sbb
push
lods
inc
ljmp
ret
push
test
add
es
mov
stc
xchg
mov
and
push
pop
mov
mov
cmp
mov
pop
idivb
sti
or
cmc
sub
int
xchg
shrb
outsb
dec
idivl
ja
push
or
cwtl
aas
jp
insb
jo
push
mov
push
fsts
cwtl
push
push
fcomps
sti
xlat
jns
dec
mov
mov
mov
idivl
mov
adc
sar
stos
ds
pop
add
inc
sbb
xor
xchg
stc
in
aas
cmpsb
fdivr
stc
pop
gs
mov
mov
pop
inc
or
mov
fs
jno
loop
cmp
mov
pop
push
stc
xor
sub
cmc
jle
add
aad
jp
dec
rclb
nop
mov
and
xor
pop
int
mov
aam
inc
int3
jle
jo
clc
add
mov
in
or
cmpsl
fcom
negl
pop
repnz
add
xchg
mov
decl
faddl
dec
mov
cmp
xor
cli
push
rol
push
or
mov
jecxz
pop
aaa
mov
roll
xor
mov
mov
imul
mov
sub
icebp
mov
adc
inc
inc
loopne
or
hlt
or
add
mov
mov
push
xchg
enter
lret
loop
icebp
push
sub
mov
cmp
xor
out
jno
ja
inc
test
xchg
int3
pop
shrl
cmp
cltd
frstor
int
sbbl
dec
js
ficompl
pusha
repz
mov
cmp
fwait
outsb
jae
enter
subl
loope
mov
mov
mov
add
inc
dec
cmp
jb
loop
hlt
mov
addb
or
sbb
dec
scas
xchg
mov
add
push
into
add
or
int3
movb
les
nop
mov
inc
inc
aad
mov
or
aaa
in
jne
adc
dec
pop
inc
enter
mov
inc
faddl
or
dec
or
sahf
pop
es
addr16
lods
sti
cmp
push
push
jbe
cmp
mov
imul
jns
fistps
loop
adc
or
push
mov
movsb
stos
notl
ds
add
or
imul
push
nop
stos
push
push
and
mov
push
es
pop
je
push
scas
in
lret
pop
test
aas
shrl
in
js
mov
data16
mov
sbb
and
les
lret
cli
pop
fwait
cmp
inc
rcll
mov
scas
jns
push
and
daa
out
daa
fsubl
frstor
dec
mov
mov
push
sub
mov
push
out
inc
out
adcb
add
xchg
jp
stos
fdivrl
repz
jmp
mov
mov
popf
loop
mov
clc
add
dec
dec
dec
sbb
iret
sbb
mov
dec
clc
mov
cmpsl
test
scas
add
repz
or
scas
inc
dec
inc
pusha
nop
xor
loopne
jge
fsubl
leave
in
pop
mov
and
push
test
inc
cmp
pop
cmp
cmc
cwtl
inc
or
add
jo
cmp
shr
dec
jbe
sarb
pop
aad
adc
arpl
xor
push
jns
xchg
mov
jno
daa
icebp
shll
xchg
dec
js
aas
pusha
jp
add
ss
and
stc
ljmp
or
cwtl
and
aam
in
push
leave
jg
fists
addr16
xor
fsubp
xchg
push
push
cwtl
shrl
daa
scas
pop
mov
push
fdivrs
push
inc
jge
and
repnz
lret
or
pushf
arpl
fwait
pop
nop
mov
or
mov
repnz
aas
add
and
xchg
push
and
pop
mov
mov
jl
xchg
ljmp
jp
cld
mov
dec
loopne
adc
mov
xlat
gs
cltd
mov
mov
xor
jle
test
xchg
jp
push
mov
sub
adc
lea
cmp
mov
xchg
js,pn
mov
mov
and
imul
dec
push
push
cmp
iret
mov
sub
sub
mov
pop
sahf
lds
scas
enter
movsl
dec
imul
icebp
rcll
xor
mov
add
mov
aam
and
sbb
xchg
dec
and
mov
loop
idivl
sbb
ja
push
and
ror
imul
jns
jecxz
stos
stos
into
push
mov
sbb
loopne
push
stos
addl
fmul
loope
cmovne
xor
jmp
add
xor
jne
add
shrb
cmp
cli
arpl
cmp
xor
sbb
add
fnop
lahf
dec
push
shll
imull
mov
pop
add
leave
xchg
push
mov
xchg
jge
jae
inc
fcom
in
sbb
pop
mov
insb
push
in
test
or
ret
icebp
ret
dec
jb
xchg
push
movsl
inc
inc
out
xlat
ds
and
rorb
push
aas
add
out
fcmovne
sbb
adc
data16
sbb
mov
cmp
push
mov
jp
andb
and
or
mov
jo
pop
mov
ret
or
mov
cs
or
insb
fstpt
gs
lods
xchg
sub
pop
loop
cmpsl
pop
orb
inc
out
aad
jo
sub
int
int3
pop
pop
inc
lock
push
cwtl
mov
pop
sti
mov
divb
call
inc
popf
outsl
add
adc
adc
lds
cmp
cmp
jbe
cmp
fsubr
lret
vminpd
or
sarl
xchg
in
arpl
frstor
pop
repnz
jmp
push
lret
mov
pop
pop
cmc
mov
inc
push
sbb
sbb
ja
push
fs
jbe
out
addr16
loop
and
pop
inc
mov
sbb
jno
xchg
in
imul
das
adc
cmp
popa
imul
icebp
enter
in
jmp
sub
push
mov
cli
cmp
push
jp
xor
xchg
pop
dec
or
test
mov
imul
ss
xor
inc
add
and
jnp
mov
ds
fisubrl
mov
shlb
frstor
fsubp
mov
lret
dec
or
enter
cmp
sahf
in
and
xchg
pminub
adc
push
push
arpl
cmc
cltd
jecxz
or
pusha
shlb
sbb
mov
mov
mov
fstpt
push
cmp
push
ja
daa
movsl
ja
and
and
sti
or
loope
sbb
std
fildl
lret
pushf
stos
cpuid
or
mov
sbb
add
jecxz
or
fstps
mov
nop
xor
or
jb
mov
xchg
and
data16
addr16
mov
in
loopne
mov
push
jo
adc
xchg
popa
stos
xchg
into
sbb
std
lret
push
sub
leave
jl
loope
xor
push
mov
loope
mov
mov
insl
adc
and
outsl
xchg
shl
pop
clc
fisttpl
inc
mov
cmp
sub
sbb
lods
pop
clc
arpl
pop
je
and
idiv
and
repz
mull
outsl
adc
add
dec
adc
negl
lret
mov
cmpl
rolw
mov
cmp
imul
dec
filds
std
dec
pop
fldenv
sbb
leave
movsl
pop
jp
add
mov
add
xchg
lea
cmc
pop
jns
push
add
or
push
lds
add
sub
out
mov
adc
shrb
repnz
iret
dec
jnp
decb
cmp
mov
add
cmp
pop
xor
ljmp
loope
lds
dec
sub
stc
inc
insb
mov
arpl
mov
aaa
mov
push
or
adcb
cmpsl
sub
movsb
fdivrp
enter
hlt
adc
mov
bound
xor
outsb
mov
dec
repz
ret
and
sbb
xchg
fucomi
sub
push
push
sbb
mov
pushl
insl
sub
movsb
js
or
inc
int3
mov
add
loop
out
mov
mov
sbb
adc
stos
jbe
ja
push
pusha
inc
inc
adc
inc
pop
popa
push
out
mov
aas
jge
aaa
xor
or
cmp
daa
xchg
icebp
je
jo
repnz
sbb
dec
incb
jo
add
mov
jnp
add
popa
mov
mov
inc
decl
xchg
push
pop
or
inc
inc
out
dec
pop
sbb
adc
fistpl
shll
lcall
adc
popa
cmp
daa
test
scas
loope
inc
cmp
es
or
stos
xlat
fcomi
aas
sub
jbe
ficomps
mov
fs
popa
push
sub
mov
push
gs
xor
hlt
loope
mov
mov
call
sub
and
lret
popf
xchg
jnp
es
push
outsb
lods
lcall
ret
add
or
divl
xchg
es
rcrl
inc
inc
sub
mov
mov
xchg
pushl
out
adc
or
dec
push
stc
xor
jnp
sbb
mov
in
xor
dec
lock
mov
loopne
jae
cmpsl
stos
imull
shl
sar
pusha
fistl
lcall
pop
inc
fs
jnp
cmp
mov
es
idivl
mov
jl
sub
fdiv
push
xor
test
insb
nop
js
idivb
cltd
inc
cmpl
imul
cmp
mov
in
pushf
xlat
lret
aad
shlb
fs
jp
pop
sub
sub
mov
loope
daa
jne
out
add
jns
mov
cmpsb
mov
test
lods
out
shrl
sub
aas
adc
mov
movsl
out
dec
or
xor
sub
leave
movl
sti
rcll
repz
pop
push
dec
sbb
iret
loopne
and
xchg
testl
jne
sub
jae
xchg
pop
xor
jle
push
loopne
out
ds
or
jmp
stc
pop
insb
push
dec
loopne
sbb
adc
lds
or
lret
mov
ficomps
sub
decb
jecxz
jbe
loop
push
or
cmc
outsb
sub
jo
and
cmpsl
shlb
loope
jg
inc
sbb
push
in
into
dec
leave
xor
pop
scas
mov
jb
ds
push
xor
add
mov
fdivrl
popf
sub
xchg
push
pop
adc
xor
inc
sbb
sahf
shll
into
leave
out
push
mov
dec
sub
mov
ja
addr16
push
add
cmpsb
stos
loope
nop
mov
mov
aam
add
mov
fistpl
scas
mov
clc
sub
jnp
scas
orb
sbb
int3
lcall
sbb
mov
out
sarl
shll
sbb
lock
xor
mov
ja
and
mov
dec
pop
mov
fsubrl
xor
mov
ffreep
xchg
fdivs
cmp
inc
pop
in
mov
imul
pop
mov
mov
bound
jnp
aas
pop
lret
mov
ds
sbb
xchg
or
int
jg
jle
dec
push
mov
adc
stc
loop
popa
out
gs
gs
cmp
pop
mov
aas
in
out
mov
lds
pop
cwtl
loopne
mov
inc
xchg
cmp
mov
jbe
push
imull
mov
push
push
aaa
mov
fs
dec
inc
inc
pop
jo
fmull
cli
subl
sbb
stc
mov
rorb
jge
mov
fcmove
outsl
xor
es
rclb
jg
stos
cmp
enter
adc
inc
or
test
test
outsl
sub
push
fildll
mov
push
jbe
fnsave
xor
loop
mov
cmp
ss
cmp
icebp
mov
in
xor
sbbb
mov
adc
cmp
out
enter
repz
cmp
mov
mov
xchg
inc
xchg
push
xlat
es
ret
test
xchg
mul
cli
and
notb
jle
loope
mov
push
add
ficompl
dec
lds
jne
mov
scas
aaa
mov
insl
daa
push
out
adc
jo
jmp
jge
movb
stos
dec
mov
cwtl
inc
cld
test
sar
movsl
push
cmc
cmp
xorps
mov
push
lds
push
lods
sub
fwait
pop
cli
test
popa
lret
mov
mov
int
shl
dec
cli
and
dec
sbb
pop
sub
sub
xchg
stc
xchg
jge
mov
xchg
inc
mov
lret
stos
sbb
and
cltd
sbb
sub
add
add
inc
fsub
jno
inc
mov
push
je
sub
mov
inc
and
cmpsl
push
data16
jae
xor
test
sub
jns
das
lods
ljmp
and
or
fmuls
cmp
pushl
sti
xor
fmuls
dec
sub
inc
pop
das
lods
mov
sub
cld
xor
imul
mov
pop
cli
xchg
cli
and
scas
jno
lock
loop
and
mov
loope
dec
fisttps
add
pop
daa
or
adc
and
push
lcall
stos
inc
movsl
aam
sub
adc
es
mov
mov
test
fnstsw
leave
aas
arpl
mov
add
jp
lahf
out
xchg
das
rorb
aaa
loop
aam
bound
decl
sbb
test
pop
jmp
add
adc
push
repz
jns
imul
ret
dec
pop
push
lods
ret
xchg
sub
scas
fbld
sub
dec
ret
int3
hlt
sbb
loop
mov
out
dec
inc
enter
rcll
or
mov
push
fwait
pop
or
adc
mov
and
sub
cwtl
and
gs
lods
jb
repnz
jle
sarl
push
jge
inc
data16
adc
addr16
clc
insb
mov
cmpb
fidivl
sahf
add
fadds
sbb
imul
or
cltd
push
pop
jns
jno
inc
jmp
fucom
xlat
nop
mov
insb
out
dec
add
adc
mov
xor
cmp
bound
adc
or
fdivrp
jl
repz
mov
das
mov
fsubr
bound
inc
sub
jg
rolb
std
pop
nop
xchg
jecxz
jg
xchg
mov
push
adc
out
cmp
pop
pop
loop
aam
push
scas
clc
or
in
fwait
bnd
mov
xchg
std
add
pop
pusha
rorl
xchg
xchg
test
sbb
addr16
dec
cltd
jnp
mov
andb
leave
or
or
inc
xor
stos
repnz
or
lea
out
add
mov
insb
int3
cmp
insl
gs
pop
shll
sbb
and
test
pop
adc
lahf
leave
divb
xchg
xchg
sub
jbe
dec
sbb
mov
dec
cltd
aad
popf
pop
jecxz
into
xchg
sbb
adc
gs
fsubrl
es
jno
push
stos
sub
xchg
ret
adc
jns
cmpsb
mov
push
xchg
sets
jnp
sahf
into
add
lds
sahf
mov
lcall
data16
sbb
aas
mov
or
pushf
jle
xchg
cmp
and
mov
dec
inc
sbb
out
inc
imul
cli
sub
pop
dec
dec
pop
xchg
mov
cmpsl
cmp
fwait
call
inc
in
cltd
jecxz
adc
pop
cmpb
repnz
cmp
cmp
push
jnp
cmc
and
xchg
xlat
push
ficoml
nop
ds
adc
jb
or
cwtl
xlat
push
imul
lods
adc
andb
push
outsl
or
pop
aaa
lcall
cltd
push
sub
push
inc
pop
pop
dec
out
adc
or
sbb
push
jb
cmp
fstl
and
in
das
clc
pop
insl
fildll
add
scas
ror
push
js
loop
and
mov
jecxz
jb
nop
insl
sarl
ja
inc
sbb
lds
jecxz
add
or
sahf
xchg
jb
mov
lods
jnp
negb
mov
mov
ja
mov
pop
loop
mov
scas
inc
dec
sarl
repz
insb
push
pop
sub
lods
sub
xor
adc
push
les
sub
mov
insl
sub
insl
into
sub
pop
mov
push
adc
mov
nop
sbb
mov
lcall
push
repnz
xchg
push
aaa
mov
addb
add
pop
in
mov
lret
mov
push
xchg
mov
and
pop
in
or
mov
jb
dec
push
jmp
imul
pop
mov
andb
movb
js
push
rclb
stc
ret
iret
lret
mov
ljmp
adc
jmp
xchg
ret
inc
and
and
add
xchg
push
xor
jecxz
stos
fdivrs
aad
dec
jecxz
leave
and
dec
loope
adc
decl
sbb
test
pop
pop
jmp
pop
out
call
or
data16
jbe
bound
xchg
push
or
into
xorl
sbb
mov
dec
push
inc
mov
xchg
xchg
mov
lods
jnp
scas
repnz
cld
leave
outsb
stos
jl
xchg
xor
jmp
fisubrl
dec
sub
and
scas
inc
fwait
mov
jp
adc
lret
xor
and
jb
lods
fmull
imulb
push
lods
cmp
loope
mov
pop
mov
gs
adc
or
mov
bound
leave
insb
adc
repz
sub
stc
mov
push
in
push
and
ret
lods
xchg
data16
mov
inc
and
mov
pop
xchg
adc
xchg
ds
es
push
or
sub
xchg
dec
cmp
ljmp
push
decb
ss
mov
mov
and
jae
ss
xchg
aam
cmc
sbb
mov
imull
jle
ret
ret
xor
xchg
push
sbb
stc
sbb
test
std
cmp
shll
rorb
aad
inc
in
lods
mov
mov
jge
fsub
fnstenv
rolb
aas
and
ret
stc
xchg
jg
cli
sbb
sub
hlt
cs
lea
add
fdivrl
testb
push
repnz
dec
mov
fdivl
cmpsl
mov
dec
fisttpl
sbb
add
mov
mov
jae
xor
mov
inc
stos
lahf
xlat
sub
les
pshufw
add
or
push
xor
sub
sbb
adc
ret
addl
adc
sub
xchg
ret
push
je
call
pop
sbb
into
ffreep
icebp
sbb
xorl
cmp
roll
add
or
stos
fdivrl
sub
push
xchg
adc
icebp
and
and
mov
and
das
push
jle
daa
iret
add
lcall
xor
sbb
in
cmp
mov
mov
cmpsl
insb
or
pop
idiv
jg
pop
xchg
jbe
jae
stos
pcmpeqd
mov
push
or
shll
std
sbb
push
stos
push
inc
ret
jae
out
xor
inc
repnz
cltd
mov
lods
jne
out
fcoms
add
fdivrp
cmp
inc
into
or
push
mov
lahf
cltd
cmp
push
push
rorb
xor
or
mov
stos
test
lds
dec
pusha
int
loopne
jne
xlat
mov
movsb
mov
lods
mov
sbb
ja
mov
push
lds
clc
test
mov
xchg
push
aad
lds
int3
rcll
insb
ljmp
xchg
dec
fsts
xor
cmp
mov
and
loopne
push
cli
inc
xor
mov
pop
pop
xchg
adc
cli
add
lret
jecxz
and
call
lock
push
push
repnz
xchg
pop
sbb
mov
sub
mov
das
xchg
shl
es
rorl
into
adc
enter
jg
sub
mov
in
outsl
cmp
or
gs
pop
fs
daa
into
fwait
jbe
xchg
nop
and
pop
in
sbb
ljmp
scas
mov
jecxz
or
loop
mov
mov
jg
push
outsb
inc
lcall
mov
jge
iret
dec
in
adc
jl
cmp
cmp
movl
or
test
add
insb
adc
test
mov
fwait
pop
and
dec
aam
mov
pop
or
iret
das
stc
push
xchg
jae
or
clc
stc
xchg
xor
jge
mov
jno
int
clc
jmp
pop
fcompl
movsl
pop
pop
insl
add
sub
dec
mov
xor
push
mov
jno
jle
adcl
pop
pop
sbb
and
test
movsb
add
jmp
adc
in
cwtl
in
push
mov
or
pop
mov
cmp
in
shr
sbb
and
jno
popa
icebp
fs
jmp
mov
and
push
sti
mov
mov
mov
adc
add
inc
dec
mov
or
gs
cltd
adc
cmpsb
int
pop
cmpl
and
push
cmp
popf
imul
test
int
jl
sub
dec
aam
movsb
inc
pusha
cmp
popa
and
loop
ja
outsb
mov
xchg
ficompl
xchg
mov
fisubrs
shl
lock
adc
push
mov
jo
jl
mov
test
pop
bound
dec
test
fldcw
push
push
and
mov
xor
xchg
xchg
cwtl
dec
aaa
sbb
mov
sbb
mov
andl
rcrl
push
repnz
xchg
mov
xchg
jmp
push
and
gs
popf
jae
shlb
xchg
dec
gs
in
push
rcll
sbb
aad
cmp
xchg
fstpt
out
call
das
fs
test
outsb
sbb
adc
aaa
arpl
mov
mov
jo
add
add
jne
lods
sbb
mov
sub
popf
mov
push
sub
mov
sbb
in
sbb
sbb
jge
xchg
mov
xor
outsb
jmp
push
in
adc
add
mov
lret
xchg
mov
mov
xchg
xorb
mov
aam
mov
jne
and
data16
mov
ret
dec
dec
test
in
sbb
movsb
sahf
cwtl
out
int
lock
sub
mov
jecxz
aam
jae
stc
or
and
push
sbb
out
adc
xor
push
or
add
arpl
out
mov
and
sbb
cmp
sti
xor
ds
int
mov
mov
cmp
insb
xor
or
sar
es
cmp
shll
fisttpl
pushf
xchg
inc
movsl
cmp
outsb
push
call
in
cmp
or
rcrb
cwtl
in
aas
pop
clc
push
xor
cmp
repz
cmp
ret
movsb
lcall
addr16
out
js
cmc
data16
popa
push
scas
mov
jle
xchg
test
xchg
add
stc
frstor
xlat
cmovne
mov
mov
leave
pop
push
lods
lds
and
add
push
jno
loop
mov
jecxz
sbbl
cs
adc
cmp
jo
adcl
adc
gs
test
arpl
jnp
xchg
inc
sbb
mov
cmp
inc
ss
mov
add
clc
filds
pop
inc
lock
imul
jecxz
aad
gs
scas
ret
push
sub
mov
aam
add
fdivr
jne
outsb
and
or
xor
scas
xchg
out
es
jae
fmul
pop
gs
cmp
imul
xchg
inc
pop
pop
mov
in
jnp
jo
pusha
adc
gs
or
fmuls
or
adc
sbb
pop
add
hlt
pop
cmp
call
cmp
inc
clc
stos
loopne
enter
sti
out
or
cmp
insl
popf
sbb
pop
add
leave
pop
imul
or
adc
add
pusha
stos
adc
mov
sahf
xor
mov
or
jmp
popf
sti
outsb
dec
sub
in
repz
fwait
sbb
movsb
dec
pop
mov
dec
adc
push
jmp
pop
sbb
jg
outsl
add
scas
mov
push
lcall
mov
mov
push
lea
icebp
lea
scas
mov
insb
push
sub
dec
pop
push
pop
daa
sbb
jg
jg
int
fcomp
xchg
js
rolb
pop
adc
aaa
or
dec
xchg
and
sarl
xchg
push
je
push
xchg
mov
loop
andl
push
mov
pop
and
mov
xchg
outsb
out
fstl
cmp
sbb
or
adc
xor
in
jg
lods
addb
les
clc
jg
and
add
bound
inc
xor
pop
xchg
pop
push
push
leave
xchg
je
enter
jbe
fs
mov
inc
sub
and
lds
sub
outsb
mov
sahf
push
push
sub
dec
in
or
jl
sbb
adc
xlat
and
ret
xchg
mov
xchg
sahf
lahf
repnz
lods
lret
mov
pop
jmp
lret
rcrb
mov
rorl
dec
in
pop
imul
inc
mov
mov
imul
imul
cs
shrb
gs
xchg
cmp
jmp
and
hlt
sbb
aas
add
cmp
mov
mov
lods
aam
ja
xor
movsb
jl
or
dec
rcrb
cmp
push
outsl
xchg
push
mov
filds
sbb
call
cmc
jl
push
and
push
imul
mov
jae
sub
xlat
fsubs
pop
mov
mov
mov
iret
cmc
scas
inc
imul
jnp
and
fnsave
and
and
in
cwtl
jl
ljmp
mov
out
adc
push
xchg
dec
test
mov
lcall
roll
adc
sub
mov
pusha
int3
and
sti
std
mov
push
cmp
lods
adc
mov
push
mov
mov
icebp
push
lock
fidivrs
fstl
xchg
notl
data16
lods
mov
cli
test
pop
pop
xor
xchg
lret
sbb
push
nop
adc
add
repnz
jecxz
or
ds
push
clc
movsb
sahf
inc
mov
sub
mov
popa
or
xchg
dec
dec
inc
notb
add
je
cli
pop
inc
sub
rcrb
rcll
jmp
fcompl
dec
ljmp
rcll
into
mov
rolb
divl
int3
ficoml
popa
sbb
sub
mov
xor
data16
rclb
mov
sbb
jecxz
add
fwait
cmp
enter
jbe
loope
mov
dec
jmp
je
and
dec
repz
sti
or
cld
icebp
xchg
int3
sub
lods
icebp
mov
fisttpl
mov
mov
mov
mov
push
inc
dec
dec
xchg
and
push
xchg
or
imul
sub
push
outsl
pop
in
pop
adcl
push
and
adc
mov
fcomps
or
mov
jnp
jno
outsl
sub
movsb
inc
pop
inc
mov
ds
and
cwtl
adc
in
add
lret
les
cmp
ja
stc
xchg
iret
test
jnp
inc
mov
jge
lock
jo
call
gs
pop
push
push
cwtl
pop
xchg
idivb
mov
push
in
inc
mov
mov
jne
insl
shlb
lcall
bound
jmp
arpl
sbb
rcr
lahf
inc
mov
xor
adc
out
and
dec
icebp
int
or
xchg
sub
lds
ficoms
and
mov
cs
sub
xchg
jle
or
adc
lods
mov
or
jle
add
xchg
jle
pop
ret
movsl
leave
idivl
out
pop
and
aaa
test
or
aam
xchg
dec
add
shll
push
outsl
sub
dec
cld
out
jo
adc
cmp
inc
mov
push
fisubl
scas
imul
jp
stos
loopne
call
mov
mov
daa
scas
je
sarl
and
push
sbb
pop
dec
xchg
sub
ljmp
lds
dec
iret
jp
push
outsl
pusha
pop
pop
jmp
push
xchg
xor
cmp
dec
fcmovbe
cmp
das
jp
aam
js
and
je
das
arpl
jle
shlb
ss
mov
or
and
in
loope
jno
je
jno
jb
aas
jo
add
cmp
rcl
out
mov
adc
sbb
fisubs
pop
mov
mov
gs
out
fcmovb
in
and
cli
cltd
mov
and
inc
jl
jle
dec
xchg
jo
mov
lret
push
mov
scas
mov
jmp
sbb
jle
mov
mov
inc
jae
xchg
mov
fisubs
xchg
and
leave
lcall
ljmp
xchg
and
sub
mov
insb
outsb
adc
imul
and
js
lcall
dec
insb
sbb
xor
arpl
cld
adcl
ds
pop
jo
add
sahf
mov
sbb
lahf
std
or
pop
shll
or
mov
sbb
popa
ret
jl
jge
fldl
mov
in
cmp
stos
popf
or
dec
mov
mov
or
push
hlt
cmp
gs
adc
pop
jl
pop
mov
xchg
andb
jnp
add
into
push
dec
push
inc
xor
fldl
adc
sahf
dec
xchg
int
popaw
push
dec
and
dec
data16
popa
jmp
push
push
or
bound
or
stos
inc
rol
lods
cmp
jle
ds
push
jo
popf
and
push
test
cmp
flds
repz
cmpsl
pusha
xchg
xor
push
outsl
or
inc
xor
jnp
daa
in
cmpsb
subb
xlat
dec
sarb
mov
push
loop
andb
add
jne
xchg
mov
fdivr
xchg
movsb
int3
cwtl
and
daa
es
ljmp
jp
dec
lret
lods
clc
pusha
je
pushf
sub
add
push
ds
gs
mov
test
inc
mov
scas
and
out
jo
and
aam
adc
aad
stos
push
mov
imul
repnz
dec
in
out
xchg
testb
decl
or
push
rcll
jl
outsb
loopne
sub
stc
das
lret
into
shlb
cli
mov
xor
jne
jnp
and
test
stos
enter
rcll
call
outsl
jno
movsb
repz
loop
jecxz
jnp
push
cs
fisttpll
orl
pop
mov
jmp
and
push
cmp
sbb
fwait
push
int
jl
ret
inc
sbb
in
addr16
mov
insb
add
jo
dec
mov
sub
sub
in
adc
sub
cli
mov
jne
test
and
ficoms
cld
inc
dec
cli
scas
lea
repz
es
sarb
lea
shll
inc
aas
gs
dec
or
add
aam
sub
and
inc
fs
pop
je
lock
and
dec
movsb
xor
mov
push
xor
mov
inc
xor
push
add
push
xor
mov
pop
or
scas
inc
push
sbb
std
mov
test
sarl
int3
loope
jl
in
fwait
inc
push
in
dec
jnp
ds
add
pushf
into
xchg
xchg
je
cmp
xchg
xor
xchg
xchg
dec
sbb
xchg
lahf
js
gs
cmp
lds
pusha
arpl
inc
jp
mov
loop
mov
loop
or
lret
push
fidivrl
insb
inc
arpl
rorb
inc
xor
icebp
sub
outsl
shr
jle
pushf
stos
adc
stos
push
inc
xchg
pop
dec
or
lcall
jecxz
jge
inc
scas
into
add
or
add
pop
test
jae
or
mov
sti
jbe
jns
imul
loop
mov
outsb
xor
hlt
aaa
enter
lret
dec
fs
rcll
and
dec
mov
push
ret
movl
repnz
push
ljmp
int
sub
imul
shl
adc
mov
mov
jo
in
adc
stc
adc
add
xor
rol
pop
stos
arpl
cs
outsl
xor
jnp
gs
repnz
call
and
outsl
mov
and
jo
sbb
cltd
sbb
ret
push
movb
inc
hlt
outsb
jnp
push
adc
sub
push
inc
aas
and
mov
lcall
data16
aam
test
repnz
js
lods
jp
xchg
jb
out
push
stos
aas
jge
sti
pop
mov
dec
inc
sub
xchg
jmp
push
iret
pop
loopne
pusha
cld
and
dec
cmp
jmp
adc
testb
and
cltd
pop
mov
clc
imul
push
xor
test
ss
pop
popa
icebp
shll
ret
in
jl
stos
push
out
mov
pop
jl
xchg
pop
int
xchg
dec
jmp
testl
fwait
cmp
mov
mov
add
lods
scas
pop
shrb
cmc
insb
test
fcomip
sub
hlt
xor
push
cmp
add
outsb
mov
cltd
cltd
push
jb
sbb
fs
int3
fs
int
shll
cltd
mov
fs
pusha
inc
mov
sbb
jecxz
inc
test
ret
sbb
mov
addb
mov
push
mov
adc
call
es
jnp
pop
xchg
mov
xchg
out
and
or
outsl
mov
cld
xor
mov
popf
fcomps
in
cltd
jl
mov
push
jle
pop
add
in
sbb
mov
loop
sbb
mov
add
cmpsl
scas
sbbb
and
push
jno
fwait
lds
ret
jg
outsb
addr16
jns
mov
dec
ds
mov
mov
sub
mov
loope
scas
lret
movsb
sbb
xchg
sti
push
cmp
xchg
jp
xchg
ud0
xchg
adc
and
xor
dec
out
add
les
insb
popa
mov
scas
jl
ror
cmp
ds
and
test
imul
add
xchg
pushf
push
add
js
adc
pop
xchg
ljmp
cmp
repz
push
pusha
insl
cmp
jg
sarl
arpl
icebp
mov
sahf
sar
fs
sbb
mov
das
mov
das
xlat
pop
daa
dec
and
pop
in
mov
pop
in
mov
cli
sahf
sbb
push
xor
cmp
or
dec
add
jg
test
in
shlb
mov
jnp
dec
mov
cmp
lds
and
cld
dec
xchg
xchg
testb
sbb
sbb
arpl
mov
call
dec
arpl
popa
mov
inc
je
push
aad
adc
lret
add
adc
mov
push
pop
cld
test
sbb
lock
pop
push
add
shl
lods
sub
jg
mov
jae
xor
xchg
dec
lods
sub
adc
pop
push
pop
out
test
mov
lds
inc
lahf
outsb
xchg
dec
lret
pop
pop
add
cwtl
scas
mov
fwait
lods
xchg
xor
dec
push
cmp
call
xchg
mov
dec
mov
and
dec
clc
inc
out
mov
xor
push
xchg
xchg
ret
addr16
mov
sbbb
imull
stos
clc
mov
jge
mov
out
stos
adc
mov
fst
jo
xchg
or
push
pop
xchg
pop
mov
push
fstl
inc
out
pop
pop
sbb
bound
lret
xor
pop
sbb
out
pop
add
testl
mov
lahf
cmp
mov
mov
pop
mov
in
movsb
in
sub
imul
into
ss
ja
lret
or
scas
inc
test
sbb
cmp
in
mov
jle
lcall
xorb
dec
and
mov
xor
ss
inc
mov
scas
sarl
dec
pop
ds
sub
dec
inc
sub
loope
mov
je
cs
popa
out
aad
mov
pop
jbe
movsl
adc
mov
repnz
orb
cmp
xchg
pop
xchg
pop
insl
mov
stos
call
sub
leave
fldt
pop
sbb
scas
hlt
pop
push
jb
int3
mov
push
mov
in
xor
int
or
and
mov
sbb
es
jno
insb
pusha
inc
lret
call
jl
adc
inc
sbb
cli
test
std
pop
mov
push
cmc
enter
test
enter
fsubrs
repnz
xchg
in
lret
xchg
in
push
std
rcrl
movsl
lds
pop
jno
xor
cs
fcomip
gs
inc
cli
mov
xchg
jo
sub
mov
add
sub
mov
je
xor
call
movsb
stos
inc
aam
mov
outsb
inc
sub
mov
adc
insl
js
mov
mov
xor
je
push
fs
fs
ja
xor
push
pushf
push
gs
out
sub
xor
or
jl
add
mov
hlt
js
adc
inc
cmp
subb
mov
in
or
test
dec
fnsave
loop
test
mov
sbb
arpl
pop
arpl
in
jp
pop
shll
test
pusha
sub
into
sahf
outsb
scas
scas
xadd
aad
dec
sub
add
imul
leave
jbe
out
aas
mov
inc
in
cwtl
jnp
aaa
inc
out
mov
adc
mov
lret
and
aas
sbb
mov
test
inc
xchg
mov
jbe
in
or
ficomps
cmp
sbb
cmp
mov
jmp
int3
sub
cmp
stos
xorl
and
sub
mov
lods
aas
in
or
jb
dec
push
and
adc
fwait
orb
push
out
lcall
xchg
dec
leave
adc
mov
dec
mov
jge
add
fcmovbe
inc
int3
dec
test
sbb
fadds
add
scas
push
mov
pop
negl
addl
gs
push
jbe
mov
xchg
pop
movsl
rorl
xor
loope
cwtl
testb
or
inc
fsubs
repnz
test
loopne
and
mov
mov
push
mov
xor
fwait
push
fmul
mov
xor
xchg
mov
inc
imul
movsb
jle
ja
lock
push
dec
and
pop
lret
push
aaa
in
xchg
dec
in
mov
pop
adc
lods
daa
pushf
pop
rclb
inc
fwait
xchg
jo
dec
adc
mov
xor
dec
testl
pop
lds
gs
pop
pop
sbb
mov
jno
mov
popf
and
aaa
sub
cltd
inc
inc
mov
or
outsl
mov
sbb
mov
out
out
sbb
lahf
lds
in
out
adc
pop
mov
aaa
test
jnp
mov
imul
mov
cmp
les
jo
imul
xor
pop
mov
xchg
testb
adc
pop
rcrb
xchg
inc
sbb
mov
add
jmp
sbb
push
nop
pop
add
loop
inc
and
push
xor
xchg
mov
push
jl
cli
push
mul
ja
mov
jle
adc
aam
push
push
and
imul
scas
sahf
pushf
mov
inc
scas
mov
and
push
stos
dec
das
mov
nop
lret
fidivrs
lods
push
call
clc
cmp
dec
dec
mov
ret
xchg
jmp
mov
pop
and
ds
ficoml
loop
push
pop
mov
in
shll
cmp
or
xchg
test
mov
out
in
je
jno
orb
xchg
push
mov
jle
sub
and
add
fildl
and
scas
int
fistps
jb
les
scas
add
imul
ja
pop
scas
adc
sbbl
dec
jne
inc
in
xlat
mov
in
fldcw
cli
fsubrp
pop
cmp
dec
test
das
nop
iret
sbb
movsb
mov
add
ss
movsl
movsb
hlt
mov
andl
sbb
pop
mov
call
xor
adc
pop
dec
push
cmpsl
push
pop
sarb
and
adc
sti
xor
pop
jl
cmp
ss
adc
push
dec
cld
enter
test
xor
jmp
adc
and
mov
out
inc
jb
mov
inc
int
ja
mov
push
stos
lcall
sub
add
pop
jp
and
ret
xor
addr16
pop
fistpl
repnz
out
js
pop
orb
std
pop
mov
rorb
les
outsb
dec
push
stos
mov
loopne
jne
fcompl
sbb
and
aad
loope
mov
outsb
into
sub
or
sub
clc
test
lcall
loope
mov
xor
sbb
inc
xchg
mov
imul
mov
stos
out
neg
aas
xor
int3
loop
insl
mov
mov
and
dec
fisubs
xor
mov
add
mov
inc
mov
in
add
inc
lahf
sub
mov
pushf
xchg
pop
or
sub
jnp
repnz
rorl
imulb
sbb
dec
rcll
outsb
arpl
mov
mov
dec
cld
pop
aas
xor
aam
repnz
xor
test
xchg
cmp
rolb
mov
add
in
rolb
push
aaa
push
sub
or
std
add
jg
jmp
ror
mov
jae
dec
sub
inc
out
mov
mov
enter
jae
aad
adc
movsb
loopne
dec
xor
in
repnz
lahf
jnp
pop
stc
das
aam
testb
mov
mov
pop
rcrb
dec
jg
ss
pop
lahf
lret
enter
shlb
sbb
xchg
test
lret
imul
jb
adc
dec
fldenv
sub
rolb
notb
dec
mov
pop
dec
lods
adc
pop
iret
push
orb
dec
andb
adc
je
mov
push
sub
out
mov
addr16
dec
rcll
lahf
outsl
dec
inc
or
lds
mov
mov
push
fdivrl
dec
xchg
pop
scas
ss
push
out
inc
daa
push
into
or
insb
int
pushf
mov
xchg
stos
lcall
dec
lret
push
inc
hlt
mov
pop
cmp
sub
divps
movsb
mov
pop
xor
pop
pop
add
jo
fidivs
xchg
leave
inc
xchg
xor
xchg
test
pop
and
adc
mov
mov
pop
xchg
addl
loop
fcompl
inc
mov
dec
jne
or
pop
push
pop
inc
jp
cmp
cwtl
fbld
jp
out
out
xchg
mov
cmc
push
lret
data16
divl
push
cli
testb
out
cmc
cmp
push
dec
mov
dec
mov
test
jmp
loope
aad
pushf
test
sub
shll
int
loope
push
mov
and
push
cld
push
movsb
cs
xchg
aaa
cmp
cmp
inc
jg
repz
and
or
outsl
mov
cmp
cmpsl
sbb
adc
shl
or
stc
or
pop
lret
push
shlb
jmp
push
xchg
mov
fdivrl
adc
mov
ljmp
mov
sub
loopne
cld
xchg
mov
cli
pop
ds
stc
into
jp
movsl
loope
push
xchg
pop
loop
mov
insl
jns
dec
pusha
cmpb
data16
jge
dec
dec
mov
sarb
cmp
cmp
and
shll
sub
in
dec
lds
pop
xor
cltd
into
orb
xchg
dec
sub
mov
pop
or
out
xchg
push
add
clc
addr16
cmp
mov
out
int
movsb
jmp
jmp
push
test
or
rolb
push
lock
cltd
pop
cs
loope
rcrb
sbb
inc
mov
inc
loope
push
dec
xor
call
adc
push
fadd
ljmp
and
cmp
and
mov
jne
add
imull
pop
jmp
mov
jp
push
mov
push
xchg
mov
push
push
push
imul
sti
hlt
repz
sti
std
repnz
sub
or
mov
call
add
ret
mov
inc
lret
push
add
dec
mov
stos
int3
sub
jmp
ds
cmp
fnstenv
jmp
pop
xor
fsub
aas
push
mov
ret
jg
jnp
push
or
mov
push
shrb
fmul
and
pop
add
mov
call
js
les
jle
enter
adc
gs
ds
adc
out
jge
outsb
lods
mov
movsl
js
mov
stos
or
loope
cli
mov
cmpxchg
pop
in
insl
mov
outsl
cwtl
xchg
inc
add
js
fcoms
lcall
inc
in
jo
mov
push
mov
push
js
cltd
into
popa
xor
fsubs
repz
mov
lret
stos
lds
adc
ja
add
mov
daa
nop
jne
jp
fwait
sti
outsl
sarl
jae
sbb
scas
add
cltd
pop
sub
ret
adc
clc
sbb
aas
stc
icebp
add
repz
mov
pop
and
push
cmp
clc
jb
and
movsl
xor
adc
outsb
stos
mov
out
pop
js
inc
pusha
aaa
lods
inc
dec
fiadds
sub
cmp
cwtl
sbb
push
fwait
mov
mov
mov
addl
mov
mov
repnz
fs
insl
aad
mov
jo
mov
into
fisttpl
mov
xchg
pop
dec
inc
jbe
scas
or
fiaddl
js
hlt
or
sub
jb
jne
decb
sub
in
jae
mov
loopne
cltd
dec
idivb
add
sbb
push
aad
loopne
push
fcmovu
add
dec
sub
es
or
pop
lcall
mov
dec
sbb
fadds
adc
int3
xchg
jns
mov
movsb
shll
sti
loopne
lcall
jo
or
lds
stos
addr16
cli
mov
test
in
push
nop
or
cmp
xorl
inc
push
mov
das
jmp
jl
push
mov
inc
adc
sbb
inc
sbb
push
sti
lcall
lea
ret
mov
pop
lea
adc
mov
fbstp
fwait
mov
leave
sub
sti
dec
idivl
mov
lahf
add
aam
jecxz
or
lahf
sahf
repnz
fwait
fwait
jno,pn
jge
lret
and
push
cmp
mov
popf
cmc
addb
fidivrl
cltd
mov
sub
pop
jmp
test
rcrl
push
int
mov
mov
inc
lds
and
aad
popa
sbb
jns
insb
pop
mov
xchg
ret
inc
cli
stc
sti
mov
in
ss
dec
cmpsl
xor
in
dec
push
es
or
and
xor
ret
popf
in
inc
int3
movsl
stc
fiadds
push
aas
mov
jp
stc
fucomp
xchg
sbbl
push
and
jns
ret
jae
out
out
mov
in
inc
int3
inc
xchg
add
sbb
mov
mov
movl
nop
xchg
test
xchg
mov
xchg
xor
xchg
adc
mov
mov
dec
xor
fsub
inc
movsl
xchg
aaa
adc
and
ret
dec
xor
mov
icebp
sub
pop
sub
mov
and
orl
jecxz
lods
addb
fisubl
jmp
loop
imul
lds
sbb
int
xchg
pop
sub
adc
cwtl
xchg
das
roll
dec
popf
xchg
loope
mov
je
sbb
fs
shll
in
aaa
jmp
icebp
out
jne
sbb
pop
or
into
push
lock
dec
sbb
cltd
xor
xchg
in
sarl
rolb
xor
adc
popf
movsb
lock
and
pop
cwtl
push
mov
adc
cmp
clc
xchg
add
dec
pop
push
nop
inc
sub
push
sbb
and
sub
std
sub
lods
jl
jp
shlb
xorb
cli
jmp
xor
mov
js
pop
lds
dec
in
adcb
rclb
subl
or
inc
out
clc
pop
jecxz
mov
movsb
scas
rcrl
inc
jecxz
jb
mov
push
sbb
xor
xchg
dec
in
test
loop
xchg
cmpl
or
iret
mov
pop
repz
mov
fs
rorl
pop
decb
loope
xchg
cmc
sbb
out
scas
dec
jae
imul
insb
add
pop
into
insl
mov
xchg
lret
mov
andb
jle,pn
pop
movsl
data16
xor
cmp
inc
xchg
adc
add
les
lods
sbb
out
ret
sub
rcll
lcall
aad
stc
repnz
test
sub
push
shrb
adc
popa
roll
and
mov
aad
fwait
jge
dec
adc
js
arpl
cs
mov
outsl
mov
jp
dec
pop
aaa
rcr
or
loop
dec
dec
adc
data16
dec
test
or
ds
add
shr
sub
jbe
aaa
push
xlat
lds
insb
adc
mov
jnp
ret
push
xor
jecxz
inc
or
jmp
stos
es
out
aaa
les
xchg
push
adc
pop
inc
push
sbb
jp
dec
jae
jmp
push
loope
stc
sub
jl
xchg
and
xor
mov
icebp
push
push
lods
stos
gs
sti
jecxz
es
fistpl
cmp
lcall
negl
dec
inc
push
add
and
fwait
pop
or
das
push
inc
or
leave
out
xchg
cmpsb
cmpsl
icebp
imul
out
lcall
push
xchg
push
iret
xor
lret
adc
or
mov
adc
js
and
mov
icebp
movsb
adc
popa
int3
sbbl
bound
nop
pop
cmp
add
scas
pop
in
push
push
add
adc
cmp
add
out
xchg
jns
xchg
or
leave
sti
ret
push
shl
xchg
mov
ret
ja
fidivs
sti
dec
subl
fs
shll
push
cmpsl
dec
jmp
nop
ss
lret
mov
push
pop
addr16
jo
pop
pusha
sbb
xor
repz
jns
jmp
cmp
jle
pop
mov
sbb
jmp
out
xor
or
ror
mov
jmp
mov
mov
jmp
ja
repnz
fwait
aas
aas
jne
or
jns
cmpsb
cmp
sub
mov
mov
push
loopne
cmp
bound
sarb
lret
aaa
movsl
mov
sahf
inc
adc
mov
imul
sbb
lea
stc
cmp
lods
dec
imul
adc
push
xchg
sub
out
hlt
cli
push
push
xchg
divl
fwait
cmp
call
mov
inc
jno
push
out
test
jb
adc
sbb
aaa
pushf
repnz
or
shlb
mov
mov
in
dec
clc
adc
fsts
pushf
out
push
cwtl
out
mov
dec
mov
lcall
inc
ss
and
push
fimull
mov
mov
sbb
xor
sahf
jns
xchg
mov
je
insb
pop
dec
push
jl
pop
push
bound
jge
pop
ljmp
daa
outsb
xchg
xchg
or
movsl
mov
add
mull
mov
cli
sub
inc
les
push
sbb
push
mov
aas
in
mov
cmp
and
or
and
mov
addr16
push
ror
and
call
dec
sbb
je
or
pop
rolb
jle
mov
outsb
outsb
xor
push
mov
adc
rorl
mov
jae
cs
ljmp
out
andb
push
mov
imul
pop
loopne
not
jp
cmp
lret
jb
orl
sub
pavgb
xchg
mov
iret
and
dec
adcb
sub
sbb
out
jae
mov
adc
aad
cli
stos
ss
xor
fcmovnbe
jnp
lods
lahf
push
out
mov
mov
pop
jnp,pt
lret
xchg
insb
ficoml
stc
int3
dec
pop
out
fistps
or
outsb
mov
pop
cwtl
mov
push
mov
xchg
jp
scas
lea
out
icebp
rcrl
ss
ret
push
dec
xchg
imul
std
cld
cltd
jp
sub
inc
lods
inc
xor
push
push
jg
and
inc
scas
jmp
fdivp
jl
lcall
je
cs
sbb
arpl
test
testl
mov
cmp
aas
call
push
rep
stc
fwait
and
and
adc
subl
mov
or
das
outsb
clc
adc
sbb
lods
mov
mov
push
movsl
ljmp
lea
sti
orb
mov
scas
jns
xlat
pop
mov
int
stos
stos
push
fimuls
out
ret
imul
cwtl
push
inc
xchg
xchg
jmp
cld
pop
sbb
ja
or
sti
in
decb
jns
add
cmp
in
inc
mov
pop
sub
mov
loopne
aas
cmp
es
sbb
adc
jecxz
push
and
fimull
or
jle
xor
mov
in
add
adc
jge
adc
dec
popf
cld
ret
adc
imul
sub
jns
cmp
dec
cmp
push
cld
jno
movsl
or
js
repnz
inc
insl
ss
pusha
jmp
jnp
mov
mov
dec
roll
cld
cmpsl
or
cmpb
xchg
imulb
jp
dec
xchg
pop
sti
cmp
in
jecxz
fwait
jl
xchg
faddp
dec
fsts
push
call
negb
xchg
gs
push
pop
test
aas
sub
xchg
loopne
cmp
popf
call
addl
cli
fwait
shlb
mov
pop
mov
nop
push
jns
mov
loope
arpl
xchg
popfw
stos
out
add
lret
jg
or
pop
clc
enter
shrl
pop
pop
cmpsb
cld
ret
mov
ret
bound
dec
outsl
int3
shll
idivl
cmp
dec
xchg
jl
add
pop
hlt
sbb
fists
ljmp
push
xchg
je
les
push
mov
stos
std
test
lcall
pop
or
outsb
sbbb
xor
sub
mov
xor
stos
xor
notb
add
add
dec
jmp
daa
sub
add
bts
fucomip
rcl
je
fwait
mov
cli
push
and
add
xor
adc
jae
in
lret
jmp
dec
fildl
xor
jno
inc
add
or
cld
sbb
xchg
and
jae
ljmp
inc
add
jecxz
or
mov
popa
inc
mov
or
pushf
scas
test
push
stos
cmpsb
jle
outsb
call
inc
insb
mov
xor
mov
inc
and
ror
xchg
insb
xchg
dec
roll
xor
mov
jmp
cmc
data16
mov
out
iret
or
mov
xchg
scas
pusha
push
fwait
pop
lods
jecxz
cli
mov
add
sahf
fwait
into
das
xchg
adc
mov
mov
nop
nop
das
adc
push
mov
jge
mov
push
mov
and
cmc
test
push
lds
arpl
and
test
jge
jae
dec
cmp
add
lcall
adc
out
mov
or
mov
pop
sbb
mov
insl
sub
inc
stos
push
dec
xchg
pop
lcall
mov
push
in
xchg
cmc
xor
mov
push
mulb
jmp
fists
dec
ja
loopne
mov
arpl
pop
inc
sub
popf
arpl
movsl
loop
and
ret
push
std
or
outsl
sbbb
daa
cmpsb
xor
ret
lret
mov
xchg
adc
add
popf
dec
jg
mov
jl
loopne
sub
outsl
or
dec
mov
xchg
or
fucomp
cmp
sub
mov
xchg
pop
mov
stc
mov
jmp
adc
pop
fstp
rolb
inc
test
lea
adc
pop
data16
inc
xchg
jae
push
sbb
loope
addr16
in
sub
push
enter
cmpsb
lods
cmp
outsb
jnp
mov
adc
fstpl
jbe
mov
les
arpl
aaa
jmp
jle
rcr
lahf
hlt
loopne
push
enter
mov
xor
testl
xor
inc
jo
jbe
pushf
cli
arpl
or
xor
shlb
add
ds
xor
iret
setge
ss
gs
mov
adc
mov
mov
and
into
xlat
repz
dec
clc
scas
xchg
loopne
ljmp
scas
xor
mov
jnp
stos
inc
xchg
test
inc
sub
sbb
lock
sarl
sbb
testl
cs
push
outsb
movsb
sbb
inc
cmp
sbb
jbe
in
scas
jns
jp
jge
inc
ret
mov
sbb
pop
cwtl
sub
out
lret
adc
xor
popa
in
je
jle
addb
dec
mov
sarb
sbb
rcrb
outsl
lods
loope
loopne
sarb
stos
ror
rcr
roll
hlt
cmp
in
cmp
and
sub
lea
inc
lcall
into
push
mov
sub
fsubr
add
dec
push
xor
mov
dec
out
test
test
clc
cltd
sarl
inc
or
pop
xorl
mov
stos
shl
faddp
mov
and
ret
and
xchg
cmp
cltd
sub
icebp
and
test
pop
addl
mov
sbb
sbb
jle
xorl
mov
dec
fwait
insl
dec
jnp
jmp
out
pusha
jb
int3
mov
jo
xor
jae
nop
loope
fs
add
jecxz
cltd
pop
push
cmpl
stc
push
iret
jbe
mov
addb
cwtl
xchg
inc
data16
cmpsb
in
add
fs
pop
push
push
inc
push
icebp
mov
or
rorl
dec
push
cli
sub
mov
fcmovbe
shrb
sahf
popa
jbe
imul
cs
sub
jp
fnstcw
filds
sti
int
or
movsb
hlt
sar
inc
pop
push
out
add
or
pop
xor
push
scas
xor
scas
jns
xor
mov
adc
add
xchg
mov
sarb
stos
jecxz
ja
fistpl
cmc
movsl
cmpsb
or
sbb
or
iret
xchg
push
mov
mov
and
in
mov
mov
mov
pop
fdivs
call
loopne
test
pop
std
inc
xlat
jle
add
cmp
movsl
test
lock
xorl
cs
lahf
in
cmp
jp
out
lds
and
lds
cmp
mov
sub
add
rcrl
mov
inc
in
popa
xor
repz
mov
jle
movsl
or
add
mov
dec
pop
or
jg
or
xchg
xor
div
outsb
add
dec
mov
xchg
mov
dec
sbb
inc
je
dec
and
loope
int3
lods
sahf
pop
mov
sarl
add
xor
fcompl
lods
sbb
outsb
bound
fstl
push
ds
imul
xchg
sbb
mov
ret
pop
cld
push
jnp
rcr
adc
lahf
lods
push
xchg
ss
mov
or
call
es
mov
or
scas
mov
aas
sbb
popf
or
lds
ljmp
lea
jne
mov
add
mov
mov
pop
je
in
stmxcsr
movsl
gs
ds
and
in
test
sub
xchg
lcall
ret
je
sarl
push
sub
or
bsf
sub
inc
sbb
sti
aas
push
jno
mov
test
cmp
jne
nop
xchg
xchg
jle
shll
jnp
and
fsub
or
pop
sub
cmp
add
fsub
push
loope
or
fdivrs
push
ja
xchg
rcrb
jb
std
pop
push
jg
ret
outsb
jl
adc
xchg
xor
fs
jle
cltd
mov
ret
pop
cmp
hlt
ja
mov
sahf
dec
mov
cli
inc
mov
repnz
mov
test
lds
mov
pop
jne
push
mov
adc
sbb
adc
sbb
push
xchg
mov
sub
addr16
sub
fwait
adc
jne
xchg
push
dec
loop
sahf
loopne
shlb
mov
stos
adc
lods
shrb
cmp
sbb
dec
dec
mov
xor
jo
pop
test
fstps
mov
pop
or
add
int3
mov
dec
shlb
call
test
xor
dec
push
lcall
comiss
jo
out
sbb
mov
int3
hlt
sub
ss
and
mov
push
xchg
dec
movsl
stc
dec
xchg
in
inc
andl
adc
lods
or
imul
repnz
or
mov
pop
test
mov
imul
js
mov
arpl
add
pop
xor
jle
sbbl
mov
or
lods
xchg
std
lods
jae
popa
pop
arpl
outsb
and
in
cmpb
pushf
push
mov
movb
pop
and
lds
std
idiv
roll
mov
xor
xchg
scas
aad
enter
jno
xor
push
add
aam
das
mov
push
inc
inc
fisubl
jg
inc
dec
add
lods
hlt
and
and
cmpsb
ja
jne
test
decb
test
ret
loop
mov
lods
mov
cltd
ja
pcmpeqb
or
add
repz
fsubrs
icebp
push
add
dec
xchg
push
sti
mov
adc
add
in
inc
jns
std
mov
fildl
push
dec
mov
push
cs
mov
rolb
es
pushl
outsl
jle
ss
icebp
mov
jecxz
aas
sub
dec
out
adc
pushf
inc
popf
rorl
fsts
xchg
lahf
fcmove
cmpsl
add
inc
ss
pop
sbb
xchg
push
addb
and
push
mov
xchg
inc
cltd
ja
xor
xor
int
add
sbb
mov
add
push
adc
sbb
or
mov
fcmovbe
jmp
aaa
pop
ljmp
out
pop
xchg
dec
mov
dec
lock
fsubs
fs
cli
lock
push
mov
cmp
ja
cmp
xchg
ja
jg
in
pop
sub
mov
or
push
inc
dec
sbb
test
mov
cmc
popa
and
and
cwtl
in
insl
and
leave
add
cmp
sub
jno
ret
je
xor
push
dec
sbb
sbb
mulb
or
xchg
jno
pop
xor
jns
add
xor
gs
dec
jp
xor
xor
les
in
and
in
insl
or
fwait
cmpsb
stos
mov
fsubrs
xor
ljmp
inc
mov
xchg
xchg
mov
jle
inc
mov
or
sub
add
dec
aaa
fwait
add
rep
sahf
call
add
gs
shlb
jge
rcrb
mov
inc
sbb
adc
shll
cmpsl
outsb
pop
mov
lea
mov
cmpsb
push
mov
or
popa
mov
outsl
add
fistps
jmp
aam
stos
or
rorl
lods
loop
cmp
enter
jne
les
sti
es
xchg
dec
cmp
das
hlt
rclb
rcll
out
imul
lock
xor
cmc
pop
cmp
xchg
faddl
movsl
mov
dec
xlat
lods
pop
add
sub
in
aaa
ja
pop
rorl
divl
into
inc
fcmovnu
xlat
sub
dec
pop
mov
sti
xor
loop
jnp
test
xchg
mov
js
xor
ret
fs
adc
adc
mov
mov
and
sbb
add
cs
ljmp
pop
sub
mov
sub
dec
addr16
imul
or
aad
and
cmc
ljmp
push
mov
pcmpgtb
int3
cmc
arpl
sti
pop
push
xchg
inc
sbb
test
lret
push
bound
cmp
cmc
pop
and
xchg
je
in
xchg
fstpl
mov
cmp
fwait
and
cmp
test
inc
xor
mov
mov
imul
movntq
out
inc
push
push
fcmovbe
pushf
and
sbb
scas
notb
adc
and
movsb
mov
int3
mov
mov
add
adc
outsb
imul
ja
jbe
out
lret
xchg
lods
fistl
sbb
inc
mov
pusha
lods
push
push
push
mov
pop
stc
je
xchg
out
iret
mov
aas
push
sub
xchg
rcll
push
push
inc
out
icebp
fistl
dec
or
cmc
sub
in
xchg
pop
and
pop
dec
and
push
mov
clc
xor
or
sbbb
pop
outsl
mov
dec
adc
inc
scas
dec
push
dec
out
pop
ret
lcall
adc
mov
loope
mov
cmp
sarl
repnz
fs
ret
sti
cs
xchg
push
popa
and
inc
push
inc
jae
mov
shl
adc
sbb
mov
std
sbb
in
add
xchg
mov
in
les
mov
or
lods
shrl
pop
or
cli
test
dec
test
lock
fstl
lret
mov
cwtl
addl
mov
xchg
adc
mov
dec
mov
fcomps
push
aas
cmc
xlat
mov
mov
andl
flds
cmpsb
lods
push
adc
dec
ss
cld
stc
cmpsl
sti
cmp
push
jo
push
add
xor
bound
cltd
and
dec
jne
ret
mov
imul
testb
jne
cmpsb
jmp
inc
in
aad
out
add
inc
sbbb
adc
fwait
ja
dec
dec
dec
std
push
scas
adc
inc
sub
and
movsl
cmp
xchg
xchg
and
rcll
fisttps
int3
loop
xchg
push
cwtl
push
xor
shlb
fisubrl
xchg
jge
jp
dec
js
xchg
lret
push
cmpsb
push
xchg
pop
fsubrl
or
or
or
leave
lcall
sbb
cld
insl
lock
lahf
mov
and
jno
cmc
mov
outsl
loop
mov
mov
inc
out
jo
xor
ds
mov
int3
cs
cmpsl
es
lahf
or
cwtl
jle
loope
adc
int3
pop
pop
jbe
icebp
and
imul
dec
jnp
stos
call
sbb
sbb
jnp
loope
cmpsl
outsb
nop
stos
sbb
sub
ret
push
sub
cmpsb
mov
test
cld
add
push
jb
call
loop
ja
int3
xor
outsb
push
leave
inc
adc
stos
sbb
or
xchg
repz
sbb
push
lods
aad
push
cli
orb
vmovups
test
pop
stos
pop
xchg
push
jb
fabs
idivl
aas
mov
and
test
mov
mov
xchg
icebp
sti
push
sub
popa
das
je
aaa
add
mov
mov
jne
sub
inc
lods
sub
test
mov
sete
ret
pusha
cmp
scas
jecxz
xchg
xchg
lock
add
and
jo
inc
enter
mov
mov
mov
pop
mov
pop
inc
fs
sbb
lret
gs
or
or
push
aad
mov
push
cmp
lcall
mov
iret
fsubp
insb
in
mov
pushf
inc
adc
sub
cmp
or
and
jge
mov
cmp
je
iret
jo
std
xchg
out
cmp
jecxz
imul
cli
shll
dec
sub
shlb
xchg
cmp
das
es
int3
xor
xor
daa
cmp
mov
lar
sub
xchg
ja
scas
lock
inc
dec
aas
jne
fadd
push
std
pop
pop
and
mov
sub
mov
push
divl
loopne
add
pand
cmp
xchg
push
sti
pop
adc
mov
mov
cmpsl
stos
jne
into
push
xor
inc
pushl
sbb
inc
ret
in
jo
pusha
ja
mov
mov
jl
repnz
or
push
dec
into
jmp
rcrl
enter
sbb
movsb
push
fnsetpm(287
imul
test
arpl
outsb
mov
out
xchg
push
jmp
mov
push
xchg
xlat
out
lods
and
or
xchg
jns
add
ss
xor
xlat
xlat
cmp
fs
jb
dec
out
dec
sahf
repz
repz
nop
xor
xchg
xorb
and
leave
sbb
sub
sahf
jnp
push
rorb
shlb
sarb
sbb
outsl
mov
inc
add
sarb
mov
jmp
xchg
in
pop
loop
inc
ss
cmc
cmp
fnstcw
pop
jle
popf
inc
sbb
dec
scas
cmp
ds
sub
adc
rcrl
dec
mov
js
loopne
aaa
cwtl
dec
jl
xor
push
ret
xchg
xchg
pop
scas
xchg
test
xor
xchg
je
jl
xchg
or
xor
jmp
add
mov
sahf
outsl
push
fdecstp
jmp
je
fld
sub
test
sbb
mov
into
xchg
enter
sbb
sbb
mov
push
daa
ss
mov
ds
mov
dec
sbb
aad
adcl
pop
nop
std
sbb
testl
xor
jnp
xor
pop
or
mov
lea
lret
sarb
js,pt
out
fwait
stos
xor
xchg
and
jb
xor
add
cmp
and
out
bound
xor
add
shll
out
xor
xchg
mov
jae
and
and
loop
mov
jmp
mov
pop
or
jbe
jne
fwait
addr16
sbb
mov
sbb
popf
lods
test
loop
sbb
es
scas
stos
in
ss
jp
nop
popa
pushf
gs
imul
in
jp
jb
popf
mov
inc
push
imul
jo
movsb
mov
push
sub
jnp
xor
adc
lods
in
push
fstl
inc
loope
iret
cmp
add
daa
cmpsb
ret
insl
lods
cmp
pop
dec
push
sbb
mov
ss
mov
sbb
cld
dec
and
das
pop
pop
adc
mov
cmp
aam
add
jge
sbb
or
sub
dec
pop
mov
iret
dec
shlb
inc
movsb
arpl
pop
jle
jns
pop
cwtl
lock
add
sbb
xorb
lea
test
data16
fwait
nop
push
mov
mov
jl
jmp
pop
mov
xchg
pop
push
xor
stos
clc
fldenv
and
sbb
jae
movsb
out
jo
imul
lods
pop
pop
or
int
cltd
jl
popa
add
daa
mov
mov
sbb
lds
and
jle
cltd
dec
add
add
add
fsubrs
xchg
mov
xor
mov
jo
ljmp
push
loop
dec
scas
cli
outsl
hlt
mov
lock
repnz
mov
lds
jne
mov
add
std
fld1
jg
add
or
les
lods
outsl
pop
stos
xchg
outsl
sub
insb
push
lcall
and
cmp
xor
fdivr
jo
add
jae
jl
insl
jp
jb
inc
cmovno
cmp
out
adc
shrb
pop
push
sahf
push
dec
sub
bound
adc
add
testl
pop
add
push
fdivl
mov
xchg
iret
fsubr
clc
addr16
and
cmp
lret
mov
and
sbb
cs
jne
out
shlb
mov
dec
out
push
xchg
dec
adc
pop
sbb
xor
mov
xchg
dec
dec
daa
mov
cmp
cwtl
mov
mov
inc
xchg
call
dec
fwait
in
xchg
mov
adc
xchg
test
fwait
mov
pop
cld
mov
xchg
sbb
xchg
xlat
repnz
stos
jne
pop
ljmp
add
scas
popf
lods
mov
cmp
jmp
ljmp
enter
scas
inc
adc
xor
sbb
adc
pop
sti
aas
xchg
aaa
mov
jnp
mov
and
pop
or
dec
out
test
movsl
sti
fs
out
outsb
mov
ret
jnp
aaa
pop
adcl
adc
mov
xchg
and
rol
addr16
mulb
lahf
out
jle
sub
jo
or
and
outsl
mul
xor
or
sahf
pop
scas
mov
in
sahf
xchg
dec
add
mov
push
sti
scas
aas
int
fiadds
pop
add
and
jns
ret
movsl
push
push
repnz
mov
pusha
jmp
ret
dec
aam
outsl
pop
mov
ret
int3
pop
or
pmulhw
and
lret
mov
jno
push
addr16
mov
clc
lahf
push
fs
and
or
push
xor
mov
js
jge
pop
movsb
mov
aad
xchg
bound
repnz
xor
loopne
or
or
xor
mov
sub
sub
movsb
js
jmp
xlat
into
jne
sub
mulb
fs
out
rcl
enter
jo
dec
and
lcall
adc
mov
mov
imul
psubsb
or
lret
cmp
sbb
mov
pop
mov
scas
sbb
jg
lret
lods
in
mov
or
sti
sbb
lret
inc
pop
push
pop
mov
push
cmp
mov
gs
jp
mov
lret
sti
lods
jg
subb
sbb
mov
icebp
add
das
push
cmpsl
lea
inc
jg
xor
sub
mov
ss
cmpsb
iret
out
ret
hlt
sub
into
push
mov
push
cmp
mov
push
xlat
push
inc
lret
in
inc
sub
add
pushf
mov
mov
add
mov
popf
lcall
mov
aam
divl
mov
add
xor
sbb
inc
fsubrp
jae
in
sub
fmuls
in
pop
jne
xor
mov
stc
data16
xchg
mov
sub
mov
jae
and
inc
sub
int3
inc
cli
or
pop
lahf
cmp
shrb
or
push
pop
call
mov
stos
gs
je
outsl
mov
adc
hlt
ljmp
nop
push
pop
jmp
and
data16
icebp
mov
push
incl
adc
jnp
lock
mov
mov
dec
js
cmpsb
jnp
push
push
mov
std
lock
lock
shr
xor
lods
mov
or
adc
test
repnz
or
aam
fldenv
ljmp
fimull
lret
ret
bound
pushl
mov
mov
in
imul
insb
push
fnstenv
mov
mov
leave
and
lods
or
in
movsl
mov
out
xchg
inc
cld
gs
sbb
in
mov
lahf
mov
adc
loope
push
xchg
jle
lods
jmp
sub
and
shlb
aaa
cmp
and
popa
ud2
lds
mov
mov
sub
adc
ljmp
stc
mov
imul
mov
push
dec
jo
sub
stos
or
add
test
leave
xchg
aaa
bound
dec
and
jbe
lock
outsl
clc
cmpsl
das
sub
mov
int3
sar
int3
decb
mov
pop
rcl
jecxz
adc
cmp
aaa
test
int
jno
jmp
and
adc
pop
lods
vzeroall
imul
push
fucomip
jle
pushf
int
loope
inc
mov
mov
cmpsb
add
call
sub
inc
sub
adc
loope
movsl
and
pop
xchg
ljmp
or
pop
fsubp
int3
lods
and
testb
sbb
shl
test
pusha
int3
xchg
dec
sub
lret
ret
bnd
xchg
daa
arpl
call
addr16
xor
aam
cmp
push
jnp
mov
xor
loop
stos
pop
sbb
mov
inc
aam
jns
mov
aaa
pop
faddl
add
arpl
lret
push
fidivrl
dec
inc
jo
jo
cmpsb
into
xchg
daa
fs
pop
popf
test
pop
or
mov
dec
into
lahf
pop
xchg
inc
pop
popa
mov
negl
pop
sahf
aam
adc
jmp
xor
pop
in
or
xorb
lods
mov
ret
dec
nop
cli
cmp
fdivrl
add
int3
in
sbb
mov
mov
add
pop
in
xor
inc
mov
les
rcl
mov
jae
mov
ret
mov
adc
cli
dec
pusha
scas
mov
loopne
cmp
out
test
jp
or
mov
mov
stc
fs
sub
cmp
stos
jecxz
rclb
cmpsl
cmpl
push
xor
xor
mov
clc
shl
lret
stc
test
xchg
inc
lds
shll
mov
xlat
or
xor
aam
sbb
adc
addr16
jg
sbb
jmp
subb
dec
or
jmp
add
faddl
xor
jmp
dec
or
jnp
ja
std
call
movsb
add
popf
fisubs
std
fsubr
pushf
shrb
dec
add
jne
xor
movsb
add
dec
ljmp
push
rcrb
in
call
sbbb
sub
in
adc
pop
imul
mov
rcll
out
adc
ret
fmulp
add
into
jle
pop
push
in
xchg
inc
lea
mov
cmp
mov
jge
xchg
cltd
mov
imul
add
xchg
adc
clc
std
xor
lods
fwait
sub
mov
sbb
in
arpl
dec
sub
push
xchg
mov
mov
sbb
sbb
sbb
sbb
jnp
dec
cmp
pop
xchg
and
fs
and
aad
mov
cld
pop
mov
gs
fs
js
out
sub
hlt
jae
arpl
xchg
cmc
shll
movsl
icebp
inc
pop
xor
mov
inc
cmpsb
leave
xchg
jmp
xchg
scas
push
nop
lret
jg
mov
or
or
sbb
cmp
mov
repnz
xchg
sbb
frstpm(287
push
sub
cmc
jb
mov
jns
and
stos
bound
sub
aam
and
cmp
and
bound
movsb
xor
stos
leave
and
xor
jp
adc
sbb
mov
adc
add
imul
ds
mov
outsl
ds
push
mov
gs
dec
cltd
cmc
aam
mov
push
adc
loopne
push
movsl
cli
mov
inc
and
cmc
cmp
cmpl
movsb
and
mov
add
mov
js
adc
pop
jns
or
xor
lods
addr16
das
pop
dec
dec
xlat
mov
test
test
sbb
pop
or
dec
fwait
mov
outsb
inc
push
or
jne
stos
jecxz
add
stos
stos
or
mov
inc
fs
fstl
insl
clc
xlat
pushf
insl
pop
cmovns
lret
outsl
mov
sti
xor
mov
jne
push
sub
iret
lds
mov
mov
fs
pop
shl
xor
mov
jnp
dec
iret
ret
fildl
mov
inc
sub
int3
inc
mov
xor
es
and
jecxz
cld
scas
mov
mov
push
mov
mov
sbb
cwtl
jb
das
popa
sbb
aam
xchg
dec
mov
test
or
fldt
xor
push
dec
push
movsl
sar
sub
repz
dec
leave
jne
push
std
popf
mov
xor
mov
cltd
leave
sbb
push
cmpsb
out
js
punpckhwd
movsl
inc
cmpsb
jl
or
insb
lea
repz
imul
mov
mov
adc
stos
jmp
inc
add
lahf
sub
mov
sarb
pop
push
jl
int
jb
mov
push
xor
ja
rolb
mov
or
add
pop
sbbl
lods
mov
inc
push
mov
aaa
jb
into
fcmove
sbb
mov
into
pop
and
ret
mov
bound
insb
mov
sub
push
int
out
stos
cmpsb
stc
push
addb
or
jge
xchg
rorl
lea
mov
and
subl
outsb
dec
mov
imull
insl
xchg
ret
cwtl
stc
add
cmpsl
jge
jb
fwait
roll
inc
xor
setl
push
sub
notb
cli
cmpsb
cli
cmp
adc
repz
out
dec
inc
lcall
out
mov
or
fsubr
ret
sbb
xor
sbb
js
in
fcompl
aad
jnp
movsb
mov
shl
ss
insb
jb
das
xchg
mov
clc
fisubrs
popf
sbb
mov
stos
inc
or
mov
jbe
leave
jnp
daa
adc
inc
fwait
jmp
lods
adc
add
xchg
mov
test
shrb
out
push
sbbl
dec
mov
jmp
cli
lock
xor
dec
mov
adc
ja
leave
loope
cmp
jg
adc
or
test
sbb
push
stos
dec
sub
cmp
sub
ljmp
adc
sub
pop
loope
sbb
aas
hlt
mov
xlat
push
push
adc
jo
inc
mov
xchg
push
loopne
fidivs
retw
mull
js
mov
leave
dec
mov
daa
dec
xor
ljmp
add
push
cs
push
and
or
int3
sahf
cltd
cmpsl
loopne
loop
imul
mov
sbb
mov
push
mov
push
shrb
in
jo
andb
mov
js
dec
inc
scas
push
fisttpll
xorb
mov
lods
out
loop
jl
ja
popf
push
fildll
imulb
pushf
test
sbb
push
dec
out
fidivl
repnz
repnz
xor
in
outsl
pop
test
inc
jbe
pop
sbb
iret
scas
adc
scas
push
lcall
push
mov
enter
fldl
lret
sbb
and
ds
fstpl
or
mov
xchg
lcall
loope
adcl
add
popa
mov
scas
inc
push
clc
push
xchg
pop
enter
es
sbb
in
push
fwait
fs
hlt
mov
jne
mov
add
jno
jmp
and
jne
pop
addr16
lcall
push
js
jp
adc
or
mov
xchg
mov
sub
pop
cmp
mov
popf
pop
dec
dec
test
pop
xlat
pushf
pushf
sub
pop
sbb
cmpsb
xchg
lods
icebp
mov
fsubrl
insb
shlb
xchg
stos
rcrb
jle
jp
sbb
jnp
andl
jle
pop
and
add
jge
lea
add
sub
divl
xchg
stc
sahf
jmp
data16
cmovno
insb
imul
enter
lcall
inc
mov
rcr
hlt
and
mov
fidivrs
ror
push
adc
mov
icebp
inc
ds
push
add
inc
mov
mov
xlat
out
arpl
enter
jmp
aad
add
mov
or
ds
pop
pop
xchg
mov
cwtl
das
mov
pop
mov
cmpsl
in
cwtl
lea
add
and
addb
push
out
data16
sbb
inc
cmp
in
push
and
jmp
fistpl
xchg
dec
mov
popf
aas
repnz
mov
mov
stos
lods
subb
add
fldt
stos
or
jp
adc
mov
adc
clc
iret
adc
test
andl
mov
pop
sahf
insb
aaa
add
add
and
xor
jmp
sub
iret
or
sub
inc
or
scas
inc
dec
push
outsl
sub
cmp
call
jbe
cld
or
aad
sbb
hlt
pop
push
sbb
cmp
cmp
lock
pop
jbe
add
push
push
cmp
push
cmp
or
xor
xor
xchg
out
mov
mov
and
inc
insl
jmp
test
or
test
xor
pop
sbb
int
xorb
rcrl
stc
aad
jno
aad
or
dec
stc
lock
mov
arpl
ret
jae
lret
add
repz
add
add
jg
jnp
sub
fxch
int
and
jno
hlt
shrb
out
clc
and
fildl
imul
xchg
outsl
cli
cwtl
add
sbb
clc
int
out
gs
pop
pop
mov
ret
sub
jmp
xor
lret
sbb
mov
sub
bound
jbe
mov
jp
mov
ror
je
fcom
jo
xlat
rorb
mov
mov
rorl
inc
pop
or
pushf
jg
out
or
out
popa
jnp
cmpsb
shl
cs
mov
dec
in
ja
inc
bts
mov
dec
test
insb
adc
sti
push
jge
sbb
push
push
xchg
adc
mov
outsb
insl
inc
iret
inc
xorb
pop
mov
mov
js
inc
loop
aam
lds
mov
inc
ficomps
xlat
push
cld
roll
xchg
nop
and
pop
iret
std
imul
pop
jnp
mov
sbb
movsb
push
rcll
jmp
xchg
test
pop
cmp
mov
mov
je
add
pop
adc
jle
inc
lahf
inc
and
mov
sbb
les
inc
adc
addl
lock
scas
cmp
shlb
int
push
orb
xor
sti
jne
jo,pn
xor
adc
xchg
out
ja
jmp
aam
test
sub
xor
push
add
pop
test
adc
xor
test
cmp
out
clc
cmp
add
jae
daa
fsubrl
shlb
loopne
xchg
repnz
fxch
push
xor
les
insl
mov
lahf
rclb
adc
lock
inc
bound
into
push
out
and
fsubr
je
enter
xchg
sbb
jg
xchg
insl
ror
sahf
cmp
cmp
push
dec
hlt
enter
rclb
mov
sbb
out
loopne
fwait
xor
mov
xor
imul
jb
outsl
pusha
mov
and
mov
cmp
mov
jle
push
jmp
sub
push
fiadds
add
sti
mov
fidivl
dec
roll
nop
pusha
and
adc
sbb
pop
xorl
scas
sub
mov
add
gs
sub
addb
fs
into
shrl
adc
pop
add
loopne
jbe
incl
push
add
out
inc
xor
sbb
cmp
bound
xchg
shll
clc
xchg
loopne
test
push
enter
fdivrs
arpl
out
mov
test
push
scas
int3
mov
icebp
dec
push
rcrl
notl
cmp
cwtl
jl
jecxz
fwait
cs
adc
mov
and
cs
mull
popf
sub
dec
cltd
leave
mov
cli
imul
popa
mov
jg
jmp
int
inc
in
mov
fdivr
xor
daa
test
xlat
in
mov
inc
or
leave
sbb
adc
ljmp
mov
into
insl
sti
call
mov
adc
sbb
adc
lods
cs
das
in
popa
xor
les
sbb
je
mov
fisttpl
pslld
mov
push
pop
add
sub
fistpl
incl
jmp
scas
outsb
mov
aad
inc
pop
cmp
mov
and
xchg
xor
mov
leave
std
cmpsl
mov
inc
xor
outsl
dec
xor
push
push
aaa
jbe
cltd
lahf
lcall
fldcw
pusha
cmp
mov
enter
push
cmp
outsb
dec
mov
pop
add
int
insb
mov
out
lcall
cmp
mov
mov
shlb
shlb
adc
xlat
sbb
rorl
fcmovnu
mov
cmpsl
ljmp
pushf
sbb
repnz
aas
into
push
bound
in
leave
sbb
pushf
icebp
cmp
add
xor
clc
and
mov
cmc
cmp
or
das
dec
dec
rcll
call
sub
adc
test
xor
repz
sbb
fdivrp
icebp
movsb
xchg
pop
ficompl
and
xor
pusha
test
lahf
cmp
push
jg
lock
mov
dec
sub
cwtl
scas
test
add
xchg
jbe
negl
add
rolb
xchg
jge
pop
inc
inc
imulb
cli
inc
xchg
in
inc
jmp
pop
ss
xchg
add
add
sbb
out
xchg
fdivs
call
js
out
add
push
or
scas
cmovae
mov
adc
fcom
cwtl
fmul
mov
ja
movsb
lods
mov
lods
popf
ja
inc
jno
sti
dec
stos
sub
ds
stos
jle
push
inc
popf
jl
int
mov
dec
adc
mov
icebp
sti
lret
aad
xchg
or
movsb
loopne
std
mov
dec
mov
cld
repnz
push
dec
xor
rcll
cli
cmp
xor
clc
fucomp
mov
adc
xchg
mov
aas
testl
push
std
test
out
add
dec
or
rolb
jmp
ret
dec
pop
sub
loopne
mov
dec
movsb
push
je
pop
dec
adc
ljmp
enter
jae
xchg
daa
push
push
decb
inc
fisttps
dec
push
sahf
pop
out
rcll
mov
stos
sbb
xchg
sbb
insb
inc
out
ret
jbe
das
cmp
jle
cmp
loop
sub
in
mov
mov
jl
test
add
fidivrl
loopne
cli
mov
in
jb
scas
fisubl
mov
mov
iret
lock
jnp
ret
cmp
fists
add
pusha
movsl
sub
mov
repnz
mov
fildll
clc
add
aaa
or
insb
cmp
push
popf
scas
mov
std
push
mov
in
cmp
js
inc
xor
push
das
cmp
adcl
fisttpll
dec
push
ret
jg
push
mov
aad
aam
fsubs
xor
cmp
fwait
lret
push
in
pop
push
push
jnp
jl
subb
pop
inc
or
sbb
js
jp
imul
jl
lahf
jg
jg
clc
shrl
sbb
push
inc
mov
fwait
sahf
jnp
lret
sbb
sar
test
push
jl
fbld
cmc
sti
pop
lods
inc
insb
inc
mov
aad
pop
push
jg
inc
cmp
and
dec
pop
mov
negb
push
xor
leave
lcall
rcrl
pop
sub
sahf
mov
rcrl
inc
push
push
inc
out
or
cli
insb
cmp
insb
js
fisubl
mov
add
mov
add
fildl
or
stos
loopne
test
mov
lahf
sub
insl
mov
sub
pop
xchg
and
cmp
pushf
jecxz
fdivrp
mov
hlt
and
cmp
inc
sahf
inc
fidivs
pop
in
dec
inc
pop
sbb
repnz
sar
inc
in
imul
push
dec
lea
mov
xor
sti
aas
shr
inc
or
inc
and
lret
mov
scas
xchg
ret
cmp
xchg
pop
cmpsl
xor
ret
jmp
pop
adc
jnp
mov
addr16
lcall
ss
jo
push
cmp
jge
mov
mov
dec
lahf
push
jb
lret
pop
jle
mov
xchg
popa
jp
ljmp
faddl
pop
push
mov
fnstsw
loopne
xor
adc
mov
xchg
call
movsb
cli
cmp
insb
adc
lods
push
je
insb
jnp
jge
call
add
xor
ficoml
pop
lahf
mov
mov
add
movsb
mov
insl
ja
add
xchg
mov
jge
cmp
das
push
lahf
jp
es
loope
inc
cltd
icebp
add
adc
jmp
sarl
loope
popa
in
add
inc
mov
jne
jle
inc
outsb
cwtl
mov
inc
jmp
inc
imul
sbb
ja
jmp
cmp
dec
jns
insb
enter
dec
mov
rcll
movsl
add
pop
adc
scas
scas
addr16
push
cmp
jne
sub
mov
or
xchg
mov
scas
test
aaa
pop
in
xchg
add
mov
mov
gs
je
inc
sbb
push
mov
lods
inc
and
push
ja
cwtl
mov
fldt
push
xor
insb
rorb
stos
dec
mov
into
fnsave
into
lods
fcoml
inc
sbb
test
loope
fildl
nop
stos
in
roll
sbb
dec
sbb
je
leave
sbb
lods
test
rclb
iret
pop
add
jo
scas
dec
lret
call
bnd
sbb
out
test
and
mov
incl
dec
out
pushf
dec
shll
inc
or
inc
adc
aam
jge
in
sarb
pusha
std
mov
sahf
pop
mov
xor
cmpl
mov
adc
sbb
ja
aaa
lock
ret
xor
repnz
push
xchg
lret
pusha
push
sbb
xor
dec
add
hlt
js
sub
inc
push
leave
or
push
stos
fwait
adc
ds
add
ds
mov
in
shrb
aaa
dec
in
push
push
pusha
pop
lret
dec
cmpb
pop
cmp
adc
cmp
and
imul
inc
stos
mov
ja
cmovne
outsl
sub
jmp
jge
rorl
enter
or
aam
mov
pop
xlat
jo
adc
cmc
xchg
pop
jno
gs
xchg
jmp
mov
clc
jp
inc
pop
int3
loope
mov
adc
jle
cmp
add
jp
and
mov
cmc
mov
push
lret
inc
js
scas
xchg
ret
jle
push
mov
les
cmp
out
jne
mov
movsb
or
adc
mov
sahf
jecxz
rcrl
xchg
fimuls
xor
repz
imul
sub
mov
cmp
ds
add
fdivs
int3
push
std
out
dec
nop
pop
or
cmp
adc
ss
cmp
jns
or
xchg
std
fucomi
stos
mov
push
cmpsb
mov
sbbb
daa
into
sub
push
jb
data16
or
dec
adc
inc
addl
jecxz
sub
jle
sbb
ljmp
xor
sub
aas
test
dec
mov
cmp
and
adc
push
push
sub
push
pop
sub
rclb
testl
mov
incl
adc
int
mov
mov
aas
push
add
adc
stc
dec
ret
cli
adc
roll
std
mov
test
or
adc
xor
xchg
addr16
mov
push
add
scas
fistps
pop
or
mov
jp
xchg
mov
push
je
add
out
icebp
jae
xor
xchg
adc
adc
jmp
lock
jb
repnz
out
fimull
outsl
mov
sub
dec
mov
jp
cltd
lret
and
sub
bound
sbb
outsl
mov
out
ljmp
scas
imul
test
int3
jb
clc
xchg
xor
shll
push
negb
jmp
loop
cmp
inc
movsl
mov
pop
mov
add
stos
arpl
push
dec
pop
out
les
sub
pop
mov
ja
cli
hlt
std
lock
sub
jo
daa
ror
push
loope
mov
jbe
cwtl
rcrb
aad
fcompl
out
adc
aaa
in
imul
enter
pop
outsb
test
fs
sbb
pop
mov
fucomip
imul
xor
sti
cmc
ret
push
addr16
test
adc
shr
inc
mov
mov
fstl
adc
loope
add
jmp
sarl
outsb
jle
and
push
hlt
dec
aad
lcall
pop
lahf
stos
cmpsl
push
in
sub
cmpsb
adc
dec
sbb
outsl
stc
cmp
testl
scas
cwtl
pop
sbb
dec
mov
or
ret
pop
pop
repz
inc
pop
mov
pop
add
pop
inc
ljmp
xor
pusha
fs
and
cmp
cmp
int3
sub
les
sbb
mov
arpl
shl
add
cwtl
pop
shlb
pop
ss
push
mov
jg
loop
and
push
hlt
das
xchg
mov
ljmp
pop
out
push
dec
xor
cmp
pop
lods
push
das
pop
insb
loope
je
aam
aad
sbb
add
jnp
and
dec
addr16
jbe
daa
lahf
sahf
push
negb
sbb
ret
repz
adc
jge
loopne
nop
test
imul
sbb
fwait
add
sub
fs
dec
imul
sbb
mov
xchg
and
leave
pop
ss
fidivrs
int3
ret
sbb
addr16
movsb
enter
pop
ljmp
and
mov
xchg
andl
jne
mov
out
add
xor
jp
xchg
push
insb
xchg
sbb
mov
add
or
popf
or
outsb
jno
adc
xor
popf
xchg
rcll
ja
add
add
fisttps
bound
popa
push
or
ficoms
loope
out
fwait
mov
mov
pop
lcall
imul
int3
and
ds
and
xchg
lods
test
in
fdivs
test
out
jnp
cmc
rcll
xchg
stos
mov
lahf
pop
mov
mov
icebp
dec
or
scas
inc
add
inc
or
test
jo
ret
cmp
pop
xchg
cld
push
xchg
xchg
push
push
pop
hlt
aaa
cmp
jns
mull
loopne
mov
bound
or
stos
enter
pop
xorb
and
mov
aad
push
cmp
add
jae
mov
push
and
jmp
popf
and
cmpsb
pop
arpl
or
inc
and
mov
xlat
add
pop
jb
iret
gs
push
test
xor
pop
push
pop
push
or
add
lcall
enter
push
out
sbb
jmp
jecxz
fstpt
ljmp
add
mov
pop
add
adc
lret
mov
jl
mov
jbe
jmp
dec
test
lcall
pop
outsb
insl
sbb
cmpsb
jmp
dec
aas
insl
cmpsl
jmp
push
or
pop
inc
insl
dec
test
incb
jmp
inc
push
divb
lahf
lcall
ljmp
push
sub
mov
inc
mov
mov
sbb
sub
lods
lret
push
iret
test
pushl
arpl
inc
jae
add
push
mov
aas
stc
fdivrl
pop
lods
pop
sahf
xchg
xchg
shl
or
lea
dec
int3
sahf
clc
dec
popf
and
movsb
imul
xor
xor
lock
and
bound
dec
dec
push
xchg
cmp
adc
sub
jp
adc
xlat
dec
push
retw
ficoms
xor
mov
jg
movsl
arpl
or
aas
jecxz
dec
add
in
cmp
push
adc
out
push
jg
adc
jnp
cmc
movsb
sub
arpl
sahf
lahf
lods
outsb
in
aaa
ja
lock
sub
fisttpll
pop
dec
fwait
pusha
push
adc
sahf
pop
lock
push
into
xor
ret
xchg
dec
mov
test
bound
filds
mov
mov
addr16
jb
jno
push
imul
setno
data16
shrl
jl
xchg
out
dec
out
bnd
or
sbb
test
jbe
rclb
mulb
cmp
dec
or
mov
sahf
or
insl
dec
addb
sbb
push
or
jmp
lahf
pop
push
xor
das
and
inc
cmc
repz
fistpll
mov
ljmp
jmp
out
adc
ljmp
loopne
cli
aaa
mov
movsl
pusha
xchg
scas
adc
sub
mov
jns
das
adc
xor
or
aad
shrl
lods
into
test
and
rolb
jns
in
adc
gs
mov
bound
in
mov
mov
mov
sub
loopne
rorl
push
cld
push
xor
mov
mov
js
dec
inc
and
jnp
cwtl
cmp
andl
shr
addb
mov
adc
cmp
kmovb
xchg
push
cmp
jne
mov
mov
push
cmp
dec
hlt
dec
lock
add
mov
xor
aam
adc
pop
shlb
in
cmp
add
inc
and
pop
nop
mov
mov
mov
sub
xchg
sti
shrb
xchg
xlat
insb
aaa
int3
cli
pop
fidivl
xlat
aaa
adc
test
out
pop
call
inc
enter
scas
push
into
lahf
and
jne
push
mov
into
and
es
mov
fisubl
test
xchg
or
jge
push
sub
xchg
nop
sub
inc
rorl
lds
and
in
inc
xchg
or
xor
cmp
inc
lods
push
mov
insl
cli
test
mov
insl
sub
xchg
and
jno
xchg
cmpxchg
add
push
lds
or
test
rol
xor
fsub
mov
and
lahf
push
dec
outsl
int
mov
lods
sbb
pusha
mov
push
pop
inc
insb
sti
div
fiadds
sahf
mov
jg
jge
addr16
incl
mov
insl
lret
fsts
add
inc
lret
add
dec
popa
lods
cwtl
xor
adc
xor
cld
mov
jl
scas
inc
sti
cs
mov
int3
xchg
or
xrelease
lahf
mov
lret
jo
push
int3
mov
xor
das
cmp
cmc
dec
iret
push
jns
mov
ss
iret
push
or
das
and
movsb
jns
xchg
rcrl
dec
pop
push
mov
xlat
jp
cs
push
imul
cmpsb
add
sti
js
adc
xchg
out
push
xorb
cmpsb
and
add
xrelease
fucomp
xchg
iret
add
mov
movsb
cmp
push
inc
and
add
cld
insb
mov
iret
repz
or
push
shll
mov
inc
cld
testl
dec
leave
ficomps
xchg
bnd
lds
mov
inc
cltd
std
lods
mov
into
pop
std
cs
sbb
mov
iret
inc
int
imul
push
add
or
bound
cltd
add
jg
xlat
stos
mov
mov
fcomip
jnp
jle
dec
push
int3
mov
sub
pop
jae
and
in
sbb
or
sti
icebp
dec
pop
add
dec
adc
or
pop
fisttpll
sub
sub
orl
jge
in
inc
mov
das
cwtl
jo
pushf
ljmp
cmpsb
test
rcrl
sub
inc
mov
mov
and
lcall
aaa
pushf
and
cmp
outsl
ds
jmp
xor
shl
les
xchg
sub
sbb
sub
in
rcll
cs
sub
js
out
insl
icebp
paddusb
cmpsl
jg
mov
or
mov
jmp
mov
pop
mov
ret
push
or
js
mov
fcmovu
add
test
sbb
mov
inc
lret
pushf
ret
aam
fcmovne
and
pop
in
or
jne
icebp
xor
in
jp
mov
adc
cmpsl
pop
xchg
test
jle
lods
sub
or
lea
dec
add
dec
test
adc
xor
sbb
cld
push
cmp
ror
in
lods
les
lea
test
inc
sahf
and
ja
cmpsl
inc
out
and
xor
in
out
pop
cmp
fisubs
or
je
pop
dec
xchg
sub
sub
lret
out
pop
shrb
adc
in
popa
ret
daa
adc
dec
call
push
loope
and
ds
inc
xor
xor
mov
sub
sub
repz
mov
cmp
or
mov
test
mov
movsb
pop
pop
dec
mov
mov
dec
cld
push
push
aam
pop
iret
jl
lock
inc
lds
cmp
repz
mov
add
ret
aam
cmp
or
mov
hlt
pushf
out
mov
outsb
inc
jbe
daa
sbb
repz
aas
mov
ret
movsl
pop
xchg
push
inc
test
cmp
fwait
adc
push
pop
pop
pop
imul
icebp
xchg
scas
daa
lods
mov
negb
jnp
cltd
push
jb
sub
lea
cmp
sub
out
and
sbbb
add
je
flds
pop
outsb
int
lds
xlat
sbb
jbe
loope
mov
adc
popf
push
add
dec
pop
cmpl
lret
add
jecxz
inc
cmp
pop
xor
and
inc
adc
jge
shrl
jnp
adc
mov
fsts
imul
fsubrl
ds
jecxz
push
and
cmp
das
xchg
divl
enter
sub
dec
jl
xchg
loope
lods
add
pop
adc
lret
jne
and
das
loop
popa
mov
dec
xor
lahf
sbb
pop
loop
add
jg
adc
pushw
xor
inc
loop
lock
cmp
sar
and
insb
push
xchg
cmp
testb
pusha
pop
dec
adc
cmc
div
and
push
rorb
clc
sub
and
das
int
lods
mov
and
xlat
pop
xor
mov
cmpsb
jae
jns
mov
sbbb
movsb
push
rcrl
aad
jb
mov
fcos
imul
cmp
cmc
xorb
sub
fisubl
cmpsb
push
jne
mov
or
leave
xor
aam
add
pop
cmp
or
fsubrs
cmpsb
or
xchg
dec
xor
push
lods
push
xchg
mov
mov
imul
dec
fwait
sarl
je
enter
sub
scas
mov
cmc
popf
aas
push
mov
sti
add
pop
xor
push
pop
dec
add
insl
lds
jle
and
cmp
xor
icebp
scas
mov
mov
xchg
aad
lods
xor
jbe
xchg
pop
out
jo
out
movsb
jle
sahf
ror
or
mov
into
fsubr
inc
es
push
movsl
jo
idivl
inc
cwtl
xchg
loop
push
adc
sub
add
pop
add
jmp
ljmp
and
sti
popa
or
sub
cli
in
lods
sti
jecxz
pop
in
lret
xrelease
sbb
loopne
hlt
das
mov
ss
adc
cmc
lcall
push
mov
pop
or
arpl
dec
cmc
cli
mov
das
hlt
mov
or
fcompl
imull
and
cwtl
push
dec
gs
out
out
repnz
pop
add
pop
sbbb
push
mov
test
or
or
rclb
ficomps
add
test
push
sub
jno
mov
hlt
dec
shr
or
cs
out
movsb
ja
es
inc
cltd
pop
jg
sbb
rorb
mov
pushf
cmc
aad
ss
mov
xlat
mov
fsts
cmp
sbb
mov
cmp
sti
pop
addr16
jle
jns
test
test
rep
dec
test
test
and
aas
subl
jecxz
fwait
jle
inc
dec
mov
or
sub
movsl
or
jge
jl
dec
rcll
adc
cs
aam
imul
mov
mov
jb
in
dec
cmp
xchg
cs
jns
adc
imul
cmpsl
sbb
jo
pop
push
xor
xchg
dec
aam
add
std
pop
loope
dec
std
cmpsl
lcall
and
cli
cmp
xchg
repz
ret
clc
loopne
divl
jge
ds
cmp
loopne
jecxz
pop
dec
mov
les
scas
bound
pop
mov
jno
add
jle
jb
in
xor
and
xor
mov
mov
pop
sbb
arpl
inc
or
test
cld
cmp
shl
ficompl
stos
scas
les
xlat
dec
and
mulb
mov
cld
call
pop
out
inc
pop
or
pop
pop
jnp
inc
pop
loop
addb
push
adc
mov
sbb
add
repnz
xchg
sarl
mov
movsl
mov
arpl
pushf
pop
xchg
jbe
mov
push
xor
jp
into
cmp
jle
mov
push
xchg
aam
sti
or
sbb
fdivrs
hlt
popa
mov
xor
ljmp
fildll
jnp
sub
sbb
nop
jecxz
dec
test
xchg
movsb
lods
pop
out
inc
clc
and
mov
mov
push
add
jp
sbb
add
fnstcw
addl
adc
shlb
pushl
rcr
stos
pushf
push
adc
in
mov
stc
testb
inc
mov
push
cld
stc
cli
pop
enter
push
jecxz
xchg
mov
add
mov
sub
jo
sbb
data16
sub
add
fs
xor
sarb
inc
or
pusha
mov
insl
pop
mov
xor
xchg
idivb
mov
aas
cmpsl
es
pop
aas
cwtl
push
add
xor
in
push
xchg
addl
dec
cs
repz
xor
shl
inc
sub
lds
adc
fbstp
sbb
jmp
inc
lds
sub
stos
pop
roll
dec
pushf
ficoms
jno
sbb
iret
jno
xchg
out
push
enter
pop
stos
scas
into
iret
fsts
pop
xor
pop
call
cmpsl
dec
jg
jg
xor
icebp
jns
iret
and
mov
lahf
push
nop
movsb
outsl
sbb
add
pop
mov
add
jno
out
lock
mov
data16
adc
lret
mov
cmpsb
pop
mov
push
jmp
inc
or
xor
imull
jle
cmp
daa
xchg
adc
setno
jo
pop
in
mov
mov
mov
ret
scas
xor
push
cmp
lods
cmp
cwtl
jmp
inc
test
roll
mov
sub
pop
out
decl
or
rcll
pop
pop
cmp
sub
fsubr
test
xchg
outsb
outsb
push
adc
mov
daa
mov
stos
adc
mov
xor
ds
sub
xor
inc
dec
in
push
mov
mov
int3
xchg
jo
inc
cli
dec
inc
inc
or
dec
leave
ljmp
mov
aaa
xlat
repnz
mov
loope
aam
add
hlt
mov
pushf
adc
in
sub
mov
dec
arpl
jle
inc
xor
xor
es
adc
stos
add
mov
mov
xchg
cmp
xchg
adc
adc
adc
les
adc
lret
inc
cmc
pop
out
fistl
jne
lcall
in
mov
xchg
xchg
mov
loop
adc
mov
arpl
adc
pop
loope
jle
sbb
ss
mov
push
mov
mov
lret
jmp
sbb
pop
xlat
push
and
idivl
mov
std
test
inc
adc
insb
in
sahf
adc
lock
pushf
xchg
popf
ss
ds
jecxz
or
push
sub
ja
adcb
mov
stos
clc
and
xor
shll
add
shl
iret
mov
les
or
cmp
dec
andb
cmp
mov
ret
sbb
or
sub
mov
push
or
or
push
sub
cmp
shll
sbb
pop
clc
pop
es
jmp
lahf
frstor
push
dec
inc
mov
scas
test
and
shl
mov
in
xchg
cmc
mov
out
jae
cmp
sbb
xchg
lret
mov
mov
push
sub
adcl
adc
sti
xchg
mov
in
leave
sbbb
xor
cmp
pop
pop
inc
jno
aaa
iret
sub
mov
mov
iret
xchg
pop
popa
lods
jno
dec
call
dec
jl
pop
jae
or
fsubrl
mov
rol
and
or
lret
jge
dec
mov
sub
decl
daa
mov
cli
jb
mov
or
fcmovnb
cmp
push
mov
mov
in
test
test
pop
mov
fbstp
jecxz
sbbb
jle
push
xchg
shll
fwait
das
sub
idiv
pop
jecxz
and
stc
dec
mov
push
jns
inc
aam
pop
mov
sub
pop
lcall
addb
repnz
std
cs
sahf
insb
int
mov
mov
ucomiss
ror
leave
cmc
pop
lea
loopne
lock
mov
insb
ret
cltd
jg
add
addb
movsl
fcmovu
lods
add
icebp
pushf
inc
mov
cmp
mov
mov
mov
loope
call
mov
mov
push
adc
imul
movsb
sbb
addr16
ficompl
cwtl
addl
popa
jmp
jb
fisubrl
lret
push
sahf
sub
hlt
pop
out
faddl
in
cmp
js
xchg
fcompl
bound
lds
mov
xlat
movsb
cmpsb
ljmp
fsubrs
cmp
nop
mov
fildll
xor
shl
call
mov
mov
jns
outsl
lds
gs
sarb
cmp
push
adcb
or
xchg
jmp
pusha
mov
gs
out
hlt
sbbb
mov
or
out
inc
pop
mov
add
ds
mov
bound
icebp
sub
xchg
shll
push
jne
dec
out
scas
mov
inc
push
inc
xchg
and
push
gs
lods
jae
loopne
push
pop
xorb
xor
cltd
repz
pusha
lds
int
mov
imull
push
mov
jmp
mov
pop
pop
jge
dec
sarl
lret
push
fisttps
lret
aas
mov
add
mov
jge
add
push
adc
ja
mov
xchg
imul
sbbb
inc
mov
cltd
inc
rdmsr
sbb
daa
adc
scas
or
add
push
in
or
repz
out
jae
movsl
inc
jo
pop
pushl
ret
stos
mov
jno
fs
fwait
push
js
pushf
mov
jg
sbb
je
jnp
jae
adc
sbb
xchg
mov
mov
out
movq
insl
stos
mov
fimuls
jno
adc
xor
repnz
push
ljmp
gs
movsb
mov
add
js
mov
negb
outsl
and
mov
sbb
into
sbb
sub
add
add
xchg
pop
out
movsl
stos
sarb
xchg
stos
rcrl
mov
sub
mov
push
xchg
call
aam
lcall
dec
mov
nop
fcomip
jge
jo
loop
push
pop
and
and
cwtl
fidivrl
leave
cli
cmp
cmp
out
sti
and
addr16
mov
mov
jo
xor
adc
mov
cmc
cmp
aas
mov
push
mov
dec
imul
xor
mov
adc
or
insl
add
test
fincstp
ret
js
jae
jo
fcompl
add
push
cmpsl
insb
jg
sub
push
cmp
lret
aam
div
mov
sub
cmp
jmp
out
stos
sub
mov
mov
jno
mov
jns
or
test
frstor
aam
adc
sbb
cwtl
or
adc
imul
xchg
loopne
in
jbe
push
repz
sti
ret
sbb
push
push
mov
xchg
ds
cmp
dec
sti
imul
mov
lcall
mov
mov
pop
and
xchg
push
enter
sub
push
lock
test
ds
inc
jb,pn
in
fcomp
aad
lds
xlat
lret
andl
outsb
test
aaa
jle
in
xchg
push
jl
add
popf
setno
jmp
insl
pop
fnstenv
mov
lods
jne,pt
gs
rcr
cmp
testl
lods
xor
in
sub
ret
xchg
pop
arpl
stc
out
data16
xor
repnz
and
lcall
pop
xchg
ret
in
mov
stos
xchg
push
clc
jnp
mov
push
push
dec
les
scas
xor
scas
xchg
rcr
in
push
aad
iret
cmp
pop
scas
mov
mov
insl
in
push
fstpt
mov
lret
cmp
fdivrl
sub
inc
mov
xchg
repnz
cmpl
call
fwait
lret
cmpsb
dec
fisubl
test
pop
xorb
pop
sbb
mov
or
and
xor
push
rcl
dec
mov
or
dec
pop
adc
sub
jae
aad
imul
dec
xlat
mov
dec
adc
adc
sbb
pop
cltd
add
cld
mov
pop
fwait
cmc
cwtl
bound
and
insl
loope
add
or
out
call
xor
pusha
push
jae
jb
or
fsub
jnp
arpl
mov
mov
ja
out
xor
test
push
mov
das
lret
out
cmp
rol
jnp
outsb
pop
in
sahf
push
aaa
mov
dec
loopne
mov
inc
into
sti
mov
add
pop
hlt
xor
cmpsb
jmp
pop
in
inc
or
out
fstpt
mov
adc
mov
ss
fsubr
stc
out
sbb
in
mov
lret
dec
in
hlt
push
out
mov
pushf
push
addr16
pusha
jle
fldcw
and
xchg
jl
imul
popa
mov
pop
fsubrl
mov
push
jle
xorb
aad
test
fisttps
popf
aas
xor
movsl
icebp
mov
pop
pop
cmp
fnstcw
jecxz
jae
loope,pn
mov
call
mov
mov
shll
jbe
daa
pop
cmp
icebp
mov
pop
sbb
nop
jo
push
frstor
add
pop
jmp
outsl
daa
enter
jno
cmp
popa
jno
mov
mov
push
ljmp
push
cmc
adc
jae
push
repz
pop
call
jecxz
cmp
gs
dec
dec
js
cmp
inc
jb
into
das
arpl
notb
jns
pop
push
and
cltd
out
js
add
jbe
or
jecxz
shrb
sub
ja
movsl
mov
jns
fldcw
inc
dec
movsb
xchg
cwtl
mov
ss
inc
insl
fisubrl
inc
inc
dec
insb
push
cmpb
loope
movsb
jge
jb
adc
pusha
push
icebp
add
jae
mov
loop
ret
dec
xchg
es
cltd
fwait
and
dec
adc
mov
and
aad
shll
std
mov
fwait
mov
out
jge
push
push
mov
dec
inc
jae
adc
jae
add
outsb
sbb
nop
cmp
mov
adc
daa
jae
inc
add
push
sbb
mov
aaa
jae
out
push
divl
test
mov
mov
aas
adc
inc
hlt
fists
les
mov
sub
repnz
mov
into
lods
cmp
xor
or
lds
cmp
sub
mov
add
dec
dec
adcl
test
out
cmp
add
pop
dec
mov
sub
pop
xchg
aad
popf
pop
push
mov
mov
push
ds
push
mov
inc
daa
pushf
xor
out
mov
xchg
popa
ror
lock
sbb
add
cmc
inc
and
cs
addb
rep
mov
pop
jo
xchg
and
push
divb
mov
popl
push
push
mov
dec
xor
data16
repnz
cmc
les
and
lahf
rolb
rcrl
jne
push
daa
test
mov
in
xchg
jp
gs
mov
mov
xor
inc
xchg
xor
or
cmp
and
ljmp
aas
sub
jo
add
iret
or
mov
in
xchg
push
xchg
out
lcall
jo
push
insb
ds
orl
pop
fstps
ret
adc
lahf
xchg
inc
push
in
mov
jne
cmpsl
sbb
lea
jno
add
xchg
mov
clc
or
clc
push
sbb
pop
popa
xlat
pop
int3
cmc
mov
stos
rolb
sbb
mov
aas
add
push
sub
mov
dec
out
enter
lock
mov
mov
cmp
idiv
add
stos
cpuid
int3
adc
pop
add
inc
outsl
dec
jns
hlt
fdivrp
dec
sub
inc
inc
adc
mov
test
mov
pop
and
xchg
inc
lds
pop
rorb
dec
xlat
adc
cli
add
loope
jge
cmc
enter
mov
out
dec
mov
movsl
jne
sub
fsubr
clc
daa
repz
add
sub
dec
xchg
push
xlat
in
mov
push
sbb
data16
lcall
xor
xchg
stos
cli
ljmp
pop
sub
in
mov
outsb
adc
mov
pop
mov
test
pop
out
adc
subl
cmp
fwait
cmp
xorb
loop
outsl
mov
cmpsl
or
push
xchg
std
cmp
cmpsl
mov
ss
pop
cmp
pop
sahf
pop
and
xor
and
pop
inc
cs
and
scas
sub
pop
dec
cwtl
loop
push
repz
decb
call
sub
lds
aam
je
and
pop
xchg
and
xor
fstps
out
pop
jae
popa
jb
mov
stc
xor
lods
les
or
insb
xor
xor
cmp
or
pop
add
adc
xor
aad
mov
mov
sbb
insb
jle
into
sub
sbb
outsb
or
mov
push
aas
negb
cmp
jo
es
jg
pop
add
xchg
movsl
xchg
cmp
das
mov
lds
icebp
mov
in
or
decb
pop
int
and
loop
lods
in
inc
inc
push
mov
jnp
mov
push
mov
jge
jl
jb
lods
cwtl
fadd
fiadds
fstpt
add
addb
cld
xorb
popf
cmpsl
fldenv
xor
jl
fnstcw
js
cwtl
movl
inc
lret
ljmp
filds
push
and
ja
xchg
ret
jecxz
xchg
std
lock
sub
dec
insb
lock
sub
fsincos
dec
xor
jnp
sbb
and
js
mov
inc
dec
sahf
imul
pushf
cmpsl
sbb
fsubs
adc
rcll
and
shlb
jge
xor
pop
and
adc
cli
ja
cmp
or
push
scas
pusha
pop
mov
cmpsl
loop
fistps
fucomi
jno
es
and
dec
or
arpl
insl
sbb
fstpl
cmp
fnstcw
int3
pop
mov
fs
push
lret
mov
and
or
inc
sbb
lock
mov
push
cld
jno
psadbw
inc
loope
repnz
jnp
and
jmp
sarb
pop
pop
shrb
daa
sub
and
ljmp
mov
or
inc
into
fildl
cmc
xchg
push
add
pop
jecxz
cmpsb
jbe
enter
fcmovnb
mov
nop
jno
movsb
sbb
jle
inc
jle
in
xchg
push
popf
fwait
scas
push
gs
sbb
pusha
in
mov
jp
daa
xchg
xchg
cmpsb
adc
mov
mov
sbb
sbb
scas
xchg
sub
int3
push
daa
and
sbb
icebp
movsl
and
out
inc
mov
or
clc
mov
scas
int
movsb
int
repnz
inc
cmp
fdivr
push
fbld
nop
cwtl
or
cmp
push
repnz
dec
inc
xchg
sbb
cmp
xorl
out
js
pop
add
sub
movsb
inc
mov
addr16
arpl
test
xchg
test
out
or
dec
clc
mov
jns
dec
mov
pusha
cli
or
inc
pop
fisttps
jle
pop
inc
cmp
ret
fstpt
pusha
mov
popf
lock
mov
mov
push
rcrb
lods
dec
pop
imul
xor
jae
xchg
stc
mov
pop
das
jo
loopne
insb
insl
negl
fists
movsl
dec
outsb
loope
dec
xlat
add
sahf
inc
mov
cmp
mov
xchg
mov
jo
cmpsl
insb
js
xchg
jnp
add
mov
test
and
int
mov
pop
jp
cmp
sub
dec
aaa
fcompl
xchg
stos
iret
cmc
pop
xchg
or
push
mov
cmp
jp
out
orl
xor
sbb
gs
push
nop
jecxz
call
fwait
adc
inc
xor
lods
int3
jno
call
mov
mov
mov
jne
das
jmp
sarb
sub
mov
and
bound
movsb
cwtl
ficoml
sbb
jb
ror
pop
add
aam
cmp
cmpsb
inc
outsl
cmp
jecxz
lods
aad
cs
mov
scas
jns
or
jne
fcompl
sub
push
stc
add
imul
and
xchg
xchg
push
adc
dec
mov
and
pop
lret
test
bound
mov
or
bound
mov
jne
inc
mov
push
cmpsb
out
inc
gs
js
popf
out
mov
orl
dec
test
and
xchg
xchg
dec
add
jecxz
xchg
mov
jnp
push
mov
cmc
push
and
sbb
mov
fistpl
jecxz
test
cwtl
xchg
lds
dec
mov
lret
cmp
setbe
cmp
add
add
inc
rcl
xchg
add
jbe
sbb
cmpb
dec
push
out
sahf
dec
daa
mov
adc
dec
iret
pusha
cmpb
inc
push
incl
push
loope
push
inc
pop
aas
ds
push
push
mov
clc
ret
lret
jae
jp
mov
cld
mov
adc
jo
push
or
in
push
ret
fistpll
add
xchg
inc
mull
jle
rcr
std
jge
pop
nop
ds
mov
sub
inc
shlb
in
sbb
setae
dec
icebp
xchg
sub
inc
sub
mov
clc
pop
xchg
inc
icebp
aas
mov
prefetch
imul
xchg
orb
push
ret
xor
aas
pop
and
jo
sbb
jno
aam
in
fsubr
cltd
clc
cld
xchg
lock
icebp
xchg
mov
aad
and
pop
mov
in
mov
xchg
cmp
insb
cmp
inc
test
lods
push
dec
pop
test
jno
mov
add
add
test
xchg
xchg
push
or
cmpsb
pop
dec
stos
cmc
ja
pop
fisubl
push
insl
pop
lret
ja
dec
mov
cmp
or
push
jge
ss
mov
call
clc
fcmovu
loop
mov
pushf
dec
daa
iret
lret
sbb
or
jle
ss
shlb
xor
insl
ds
or
push
cmp
push
adc
sarl
data16
pop
push
mov
xchg
jle
dec
das
mov
pushf
aaa
pop
push
mov
movsl
sahf
dec
andl
xchg
jge
idiv
and
fs
repz
inc
sub
outsb
xchg
jnp
jae
dec
in
dec
mov
pop
mov
mov
imul
adc
dec
and
test
jne
dec
ljmp
cmp
inc
push
lahf
sub
rcrb
mov
cld
adc
fbstp
and
pop
inc
mov
in
out
fucom
leave
push
sbb
or
sub
rolb
out
in
jb
mov
int
mov
push
dec
cmpsb
aam
pushf
mov
cmp
popf
lret
shrb
sub
pop
test
cld
bound
mov
inc
push
xlat
mov
test
pop
push
inc
fs
mov
aad
sbb
lret
mov
test
add
inc
andb
cs
cmpsl
sub
into
fistpll
lock
fldt
mov
push
loop
cmpsl
in
clc
ja
lahf
lret
dec
fsubp
add
dec
mov
cmp
mov
jl
pop
mov
jmp
sub
mov
sub
stos
cli
inc
popa
das
in
cmp
dec
aad
xchg
ficomps
xor
mov
sarb
ja
inc
es
sarl
add
int
add
insb
pop
sbb
test
scas
xor
or
cltd
inc
mov
mov
jo
pop
aaa
out
sti
pop
or
mov
fnstenv
lock
push
mov
int
sbb
add
shlb
fisubrs
ds
frstpm(287
testl
pop
ds
mov
pop
fdivl
std
dec
imul
push
xchg
or
outsl
mov
jg
pop
xor
stc
mov
fs
ds
push
insl
daa
mov
pop
popf
jno
enter
lret
mov
fiaddl
mov
shlb
hlt
addr16
mov
xchg
xor
and
jg
jle
cltd
xor
pop
mov
jg
test
orb
pop
add
imul
and
loope
xor
cld
push
dec
xchg
xchg
sbbb
dec
jle
mov
xchg
xchg
push
test
xchg
add
and
sub
sbb
ss
mov
cmp
add
cmp
xchg
sbb
pop
cmp
mov
xlat
iret
push
addr16
sbb
mov
pop
xor
out
or
lds
mov
stos
or
dec
stc
popf
movsb
mov
or
mov
lahf
push
dec
push
das
movsl
dec
rol
movsl
cmp
leave
add
rclb
or
sbb
jno
mov
jno
stos
aad
rcrb
test
or
pusha
pop
push
lock
adc
lods
push
enter
movsb
pop
test
push
sysexit
mov
test
mov
popf
inc
cmp
cltd
or
and
sub
gs
out
fdivr
ds
mov
lcall
data16
in
xchg
jmp
std
sub
shll
int
bnd
pop
popa
cmpsl
cmp
in
imul
rcrl
movsl
dec
rcrb
aaa
fbld
dec
fs
insl
pop
mov
cmc
sbb
insl
stos
scas
inc
push
es
cli
pop
or
mov
sub
pop
movsl
into
xor
adc
inc
cmp
or
in
mov
jl
inc
mov
inc
in
movsb
aad
add
jnp
dec
push
daa
xor
rcrl
ret
les
roll
xor
fldt
pop
in
fnstenv
mov
sbb
pop
jb
dec
mov
mov
insl
pop
or
xchg
mov
push
pop
in
sbb
xchg
fwait
xchg
lret
adc
xchg
dec
xchg
lahf
in
mov
cmpsl
adc
test
lea
data16
jl
loop
movsb
inc
pop
push
je
divl
push
sbb
addr16
pop
insl
inc
in
xchg
shrl
mov
mov
lock
mov
push
inc
rclb
ret
pusha
adc
fsubl
cmp
in
imul
and
rcr
es
and
je
clc
ss
shrb
ja
add
stc
pop
pop
idivb
lret
and
dec
add
adc
mov
cmp
rdmsr
test
and
adc
xlat
adc
sbb
pushf
dec
data16
bound
push
jge
push
jecxz
fcomps
pop
dec
xor
or
mov
mov
sub
or
add
pop
push
stc
int
test
xor
dec
out
scas
xchg
pop
sub
outsl
std
mov
or
xor
inc
push
pop
adc
fcmovb
mov
pop
ja
sub
xor
ja
imull
mov
bound
addr16
sub
hlt
stos
out
dec
xor
sub
sub
dec
cmp
xor
sbb
movsb
pushf
cmp
shl
or
int3
pop
arpl
mov
stos
imul
dec
rorb
enter
sub
out
push
pop
nop
inc
out
in
pop
roll
rcrb
push
aaa
push
aas
push
mov
add
and
gs
int
imul
cltd
jns
jbe
test
mov
cmpsb
inc
jle
push
out
dec
mov
add
mov
das
dec
pop
mov
pop
jg
mov
cmp
inc
mulps
add
pop
scas
subl
mov
test
cmpsb
out
pop
test
adc
pop
cmp
xchg
cmp
fisttpll
rorb
adc
mov
in
cmp
dec
mov
xor
lds
fldenv
mov
mov
mov
mov
xchg
fildll
int
pop
std
ret
xor
jb
outsb
test
or
xchg
pop
push
insb
jne
jl
ret
inc
dec
pusha
push
pop
ss
xchg
xor
cmp
sub
or
flds
xchg
mov
fcmove
daa
ljmp
out
mov
bound
gs
cmp
pop
mov
cltd
gs
loop
push
into
sub
xchg
stos
lds
push
and
xchg
bound
ja
xchg
mov
nop
jns
arpl
cmp
xchg
add
cltd
fs
sahf
out
fnsave
jge
jmp
loop
adc
jmp
sbb
int3
jno
movsl
std
hlt
push
shlb
fisubl
test
and
or
aam
lock
js
sbb
xorl
rcrb
lret
lds
imulb
dec
repz
adc
in
adc
xor
cmp
and
adc
jb
pop
cli
filds
test
or
xchg
mov
aad
hlt
and
sub
decl
aad
out
fnstenv
insl
mov
add
jno
jmp
and
popf
mov
sub
and
in
ds
mov
test
lods
call
popa
and
mov
mov
push
sbb
and
sub
lret
mov
cmpl
add
popf
out
adc
cmp
pop
and
adc
das
xchg
xchg
pop
nop
cmpsl
mov
add
adc
sbb
xchg
into
out
mov
mov
loopne
call
addr16
xchg
xor
js
loopne
jno
rclb
pushf
push
mov
cld
aam
divl
push
repnz
inc
push
pushf
or
xchg
fsubrp
daa
mov
and
fadd
ds
or
enter
icebp
popa
add
cmpsl
sbb
loopne
aad
arpl
es
jo
pop
mov
cmp
and
ss
push
push
into
or
sbb
cmpsl
add
cmpsb
xor
inc
mov
adc
jns
neg
adc
xor
pop
pop
mov
add
ljmp
or
push
adc
sub
mov
cmc
inc
sub
stc
mov
imul
and
cmpsb
jmp
push
fsubrs
out
hlt
add
les
scas
pop
push
xchg
jb
test
inc
cli
sarb
subb
inc
nop
pop
fistpll
xor
mov
js
cmp
cmp
add
sbb
ret
enter
and
jno
divl
jb
lods
sub
push
mov
lret
gs
andb
ds
dec
call
ret
cmp
movsb
scas
mov
ss
xchg
xor
je
fmuls
pop
cmp
fcomi
push
std
push
push
popa
cltd
and
jmp
inc
icebp
pop
pop
mov
int3
pop
add
push
je
mov
mov
pop
or
pop
int
xor
cltd
cli
mov
lret
daa
xchg
insl
popa
xor
push
sub
std
xor
push
or
push
mov
cmp
inc
mov
dec
cmpsb
mov
jg
cmp
jmp
lret
push
dec
imul
sti
push
sbb
adc
test
out
xor
je
fimull
adc
dec
sub
sbb
add
add
xchg
ss
mov
mov
inc
pop
repz
or
rol
lret
roll
pop
stos
mov
cmpsl
jbe
mov
addl
xor
loopne
or
bound
push
repnz
sub
cmp
pop
outsl
shlb
jae
loopne
cmp
xchg
stos
pop
in
mov
adc
push
bound
mov
sbb
nop
mov
mov
into
fwait
das
fmull
xchg
loope
and
cltd
dec
mov
les
leave
push
mov
jmp
iret
jge
adc
inc
push
mov
dec
xlat
xlat
outsb
cmp
fistpl
pop
mov
loope
test
dec
into
popa
mov
scas
jb
sub
shll
mov
leave
jp
jg
movsl
idivl
inc
sbb
aas
cwtl
mov
jb
insl
cmpsb
lss
arpl
in
in
xchg
dec
xor
inc
ret
testl
cmp
or
jmp
imull
sbb
mov
jne
and
mov
add
sarb
mov
xchg
mov
int3
das
aam
enter
mov
ficompl
mov
lret
ret
fwait
cs
adc
adc
add
pop
decl
jb
xor
sub
or
jg
add
ret
mov
mov
movl
pop
adc
xlat
cwtl
mov
rcrb
out
cmp
mov
lahf
xchg
call
outsl
adc
xchg
aam
repnz
sbb
ss
imull
mov
call
jecxz
lock
popa
sbb
je
insb
sbb
pop
dec
andnps
scas
xor
adc
sbb
aas
ret
out
test
add
jle
cmpl
pop
jo
cmp
int
and
out
or
lea
jp
mov
mov
scas
cmp
loop
push
rcrb
mov
addr16
mov
sbb
repnz
or
adc
dec
shll
jns
xchg
cmp
cmp
repz
sub
insl
out
scas
add
sub
push
repz
outsl
and
dec
jbe
mov
cmp
pop
mov
movsl
das
add
les
addr16
sbb
sarl
xor
push
cli
add
ficoml
add
push
nop
cmpsl
ds
movsl
lahf
insb
outsb
inc
mov
mov
and
cmp
jns
jmp
aam
cs
addb
push
stc
hlt
pushl
int
or
xchg
xchg
cltd
imul
inc
xchg
mov
dec
lock
out
cltd
mov
clc
fs
jo
cmp
xchg
mov
movsl
jb
lret
sub
out
aad
inc
mov
xorl
pop
pop
mov
mov
negb
and
das
ret
addb
mov
mov
lahf
pushf
mov
inc
xor
mov
daa
negb
insb
roll
jge
dec
out
adc
mov
add
in
push
cs
jbe
lahf
mov
aad
mov
dec
imul
insl
subb
jge
mov
jbe
in
cmp
sbbl
pop
cs
cld
clc
test
dec
pop
push
rclb
inc
lds
hlt
fistpl
ja
jmp
fs
mov
nop
int3
data16
nop
out
lret
repnz
dec
imul
pop
aaa
adc
adc
ja
xchg
imul
fadd
inc
or
test
pop
push
hlt
or
xchg
shrb
in
ja
jnp
jno
incl
or
push
je
and
aaa
adc
mov
sbb
ja
popa
sahf
mov
loopne
lds
scas
imul
leave
call
out
ss
or
jb
adc
mulb
inc
xchg
push
mov
setbe
push
shll
add
add
jge
xchg
jae
jae
adcb
gs
lods
mov
inc
insb
in
popf
push
out
aam
daa
or
cmp
js
jae
ret
icebp
clc
dec
inc
jno
das
push
mov
xor
orb
cltd
jp
add
push
test
cmp
mov
jo
jle
js
jno
test
jle
mov
sub
daa
cmc
cmp
xlat
push
pop
nop
hlt
fldt
ret
xor
or
jle
or
jmp
dec
fbld
f2xm1
cmp
mov
test
or
insl
push
rclb
stos
aas
ror
jnp
cli
push
mov
add
mov
cmp
gs
hlt
lods
xor
lret
jne
push
push
loope
cmp
add
sub
pop
jns
sbb
int3
push
adc
insl
mov
in
insb
fwait
xchg
and
push
and
add
mov
push
std
pop
iret
cmp
loopne
roll
mov
mov
ficomps
inc
fs
stc
dec
inc
lcall
loop
nop
negl
shrl
aaa
iret
loopne
sahf
cmp
inc
jmp
add
ljmp
dec
repz
in
add
dec
xor
mov
in
dec
loop
enter
cmp
lods
cld
stc
cmc
push
mov
fimull
mov
lock
add
fisttpl
test
fldt
test
clc
push
fldcw
xchg
je
dec
adc
push
cld
add
fiadds
mov
push
jno
or
mov
repz
pop
test
cmp
push
loopne
aam
mov
and
std
ret
test
push
lahf
jp
lahf
cmpsl
cli
js
and
mov
mov
scas
and
push
dec
pushf
xchg
ret
loop
cmpsl
jmp
shl
or
and
push
jmp
cmp
mov
cmp
inc
icebp
cmpsb
inc
inc
mov
repnz
mov
pop
sub
subps
sbb
dec
pop
dec
mov
pushf
enter
xchg
push
pusha
or
es
mov
jg
dec
std
jns
mov
test
mov
and
cmp
lcall
xor
mov
adc
or
xlat
lret
lods
nop
in
aam
xchg
cltd
jp
cmp
sahf
aad
lahf
loopne
xchg
cwtl
push
mov
mov
addr16
xor
lods
xor
lar
pop
ss
xchg
mov
add
jg
xor
das
shlb
add
pop
aad
rclb
stos
lret
dec
cmp
popf
xchg
cltd
popa
or
add
clc
outsb
insb
jnp
jnp
add
xchg
loopne
loop
cmp
lret
mov
les
mov
adc
mov
mov
pop
test
in
ret
sbb
fimuls
movsb
mov
mov
sbb
lret
or
sbb
and
rorb
popa
bnd
aad
mov
mov
movsl
rcr
bnd
xor
fmuls
sub
pusha
ja
and
xor
pop
int3
stos
loope
popl
mov
add
nop
rcrb
mov
jmp
xchg
lods
inc
mov
or
mov
mov
loope
push
js
and
jne
inc
xorb
xchg
ljmp
inc
or
mov
arpl
push
dec
xchg
jl
adcl
inc
loop
in
push
add
push
insb
or
xorb
pop
aas
mov
ss
mov
repnz
inc
pop
dec
je
inc
jg
or
shr
or
or
inc
orb
test
sarl
aas
ds
push
mov
into
cmp
jle
push
loop
mov
insb
dec
xchg
adc
in
or
in
cmp
mov
hlt
push
jl
and
outsb
push
cmc
test
pop
hlt
cmpsb
sbb
push
push
test
xchg
or
ret
cld
xor
sub
sbb
enter
rorb
mov
cmp
mov
movsl
push
inc
scas
mov
fnstcw
jg
popa
xchg
jp
movsb
mov
ljmp
mov
pop
dec
sub
xchg
cmp
xchg
mov
dec
fsin
jbe
cwtl
adc
or
loopne
lea
sbb
sub
mov
mov
dec
out
mov
cmp
push
inc
xchg
fs
mov
inc
test
leave
jl
cld
pusha
jb
cmp
cmp
add
repnz
ja
cmp
xchg
mov
xor
lret
call
xchg
push
dec
aam
push
adc
sarl
pushfw
ret
lea
lock
daa
inc
and
cmp
int
add
xlat
mov
scas
adc
sbb
movsl
aaa
cmp
xchg
push
into
pusha
addl
cmp
or
lock
test
mov
push
push
lds
into
ja
aam
sub
add
and
push
repz
inc
mov
xor
clc
add
mov
ret
or
in
mov
pop
add
cmp
pop
xor
test
cmp
cmp
pusha
jno
rcl
ss
jl
sbb
dec
movsb
sti
imul
jge
sbb
jnp
rcrb
jecxz
add
in
bound
negb
les
scas
mov
inc
dec
or
xchg
or
iret
call
mov
fstpt
push
pushf
pop
mov
mov
rcrb
xor
sbb
loopne
mov
adcb
dec
pusha
pop
and
pop
lahf
fwait
push
test
dec
inc
sbb
and
cmp
xor
or
negb
xchg
jmp
lea
and
pop
fld
lret
or
lret
dec
jns
sbb
add
add
push
jns
pop
scas
cmp
mov
push
daa
notb
adc
mov
insb
fdiv
push
pop
jp
test
loop
repz
dec
mov
lahf
add
scas
mov
stc
cmp
or
stos
sub
test
aad
and
shlb
das
stc
or
ret
pop
adc
mov
mov
or
mull
xchg
fwait
cmc
hlt
out
inc
popa
bound
sub
xlat
iret
fistpll
les
or
cltd
xor
shrb
cmp
lret
rcrl
in
ss
fs
int
rorl
jo
rorl
cmp
adcb
pop
cs
push
cmpsb
es
std
mov
scas
jle
dec
ret
cmovs
sbb
sub
and
mov
sti
or
or
pop
in
or
xor
mov
push
sbb
jb
pop
stos
fsincos
cmp
loope
xchg
jecxz
dec
into
ljmp
sbb
lods
inc
jp
or
inc
add
int3
and
mov
adc
cmc
or
mov
pop
ret
repz
and
jecxz
mov
ja
pop
jne
adc
test
lret
es
push
dec
fldcw
cmpb
push
mov
adc
mov
mov
push
xor
cmpsb
jl
mov
mov
paddd
xchg
mov
fidivs
aad
jne
jmp
mov
pop
fimull
or
in
dec
or
sub
in
cmp
or
cmp
out
arpl
mov
daa
pop
orb
roll
mov
mov
clc
insb
dec
mov
test
jp
fdivrp
mov
adc
adc
leave
sub
in
xchg
jno
xor
mov
fdivrs
addr16
pop
cwtl
sbb
shl
xchg
cmp
mov
cli
xchg
sysenter
add
and
push
push
clc
jge
push
int
mov
aas
sbb
cmp
push
and
mov
aaa
sub
out
insb
xchg
shr
add
lds
or
pop
filds
pop
and
cltd
outsl
fcmovne
cmpsl
and
jge
sbb
sti
fwait
jl
pop
aas
repz
jb
add
loopne
cmpsl
fadds
sub
mov
shlb
mov
jl
dec
mov
lods
xor
inc
std
lret
in
and
jne
inc
push
cwtl
ret
push
mov
xchg
or
cmp
das
pop
je
loopne
call
fisttpll
adc
pop
cmpsb
stos
ret
ds
sbb
push
push
inc
jp
push
cld
rcrl
adc
sbb
cmpsb
aas
movsb
sub
inc
movl
xchg
iret
loop
dec
xor
aaa
sbb
inc
push
jmp
stc
and
jecxz
dec
and
or
mov
or
push
jo
fs
sbb
dec
cmp
or
ss
popf
jmp
nop
add
prefetcht0
sbb
stos
push
inc
mov
loopne
out
pop
mov
aad
xlat
fs
stos
popf
stos
mov
pop
ror
xchg
xchg
pushf
cld
scas
inc
pop
cmp
inc
mov
shrl
hlt
cmpsl
sub
insl
jge
fsts
mov
clc
cmpsl
push
mov
mov
lret
mov
repnz
and
hlt
mov
mov
ljmp
xor
add
xor
ret
scas
add
or
mov
sbb
out
dec
mov
push
adc
outsb
bsf
fsubrl
stos
movsb
sub
sub
in
xchg
jge
xchg
shll
scas
ss
xor
in
call
dec
ja
pop
dec
mov
mov
push
je
xor
adc
mov
xchg
outsb
xchg
scas
pop
ret
and
sub
push
ss
mov
sub
jg
gs
test
les
cmp
fs
bound
inc
adc
hlt
xchg
or
stc
fstpl
jno
and
jge
jnp
adc
out
cltd
jae
push
cltd
push
cmp
inc
pop
xchg
jmp
decl
outsl
inc
jo
adc
jne
adc
mov
pushw
fisttps
xchg
mov
jl
lret
inc
es
push
xchg
rcr
lods
dec
aaa
xor
xor
push
pop
xchg
mov
jo
jle
les
test
xchg
loop
cmp
push
ss
xor
test
es
iret
inc
cmp
dec
jo
loopne
cmpsb
insb
xlat
mov
or
push
stc
cmp
idiv
call
mov
into
out
aad
xlat
lret
ss
bound
cmpb
ret
cmp
and
xchg
outsb
enter
into
push
dec
stos
mov
adc
fwait
in
das
jmp
insl
popa
adc
stos
les
jb
fldenv
das
sbb
sbb
xor
pop
insl
lcall
ljmp
imul
mov
dec
mov
lods
push
mov
xchg
lahf
mov
inc
das
add
cmpsl
arpl
call
sub
sub
aas
mov
mov
pop
push
cmp
dec
call
xor
adc
js
inc
js
and
sub
gs
aam
mov
jmp
mov
xlat
sbbl
lcall
jne
repz
xchg
shr
ja
xchg
xor
test
push
inc
and
enter
movsb
fisttpll
addb
aas
cmp
sbb
dec
rclb
and
fs
lods
cmp
add
sti
inc
jmp
scas
xor
shl
lcall
subb
les
jae
test
xchg
ss
mov
fcompl
add
in
fmul
jle
js
mov
mov
push
scas
pushf
ljmp
cmp
dec
sbb
test
mov
ret
cmp
daa
clc
pop
ret
faddl
lret
xchg
notl
cld
scas
dec
gs
clc
mov
arpl
and
pop
and
sbb
mov
dec
cmc
popa
sbb
loop
fwait
mov
lock
add
sub
and
adc
loopne
mov
xchg
leave
jle
lock
sbb
icebp
daa
enter
vmovd
sbb
pop
pop
popl
les
shrb
add
fsubrs
shll
push
mov
push
lcall
cwtl
adc
fs
mov
out
fildl
xor
out
jae
push
inc
insb
push
and
out
sbbl
jp
lahf
lret
sbb
sbb
xchg
in
adc
fcomp
negl
push
vxorps
and
mov
dec
cmpsl
push
mov
adc
lock
sbb
inc
sub
loopne
notb
cmpsl
jecxz
les
cmpsb
cmp
iret
pop
test
xor
ficoms
jae
fistl
sbb
test
push
dec
jp
mov
icebp
mov
push
jmp
fldl
jnp
out
xchg
or
cmpsl
or
push
inc
ja
test
xor
mov
sbb
aaa
add
cmp
shl
scas
push
clc
sarl
jnp
hlt
sysret
mov
shll
or
aaa
or
mov
inc
inc
insl
mov
adc
addl
arpl
js
cmp
cs
enter
sahf
add
pushw
repz
cwtl
movsb
mov
cmpsb
xor
std
adc
fldenv
jmp
arpl
inc
movsl
adc
lds
vmread
and
outsl
test
cmp
fstl
jb
cmp
xor
es
add
shlb
sahf
sub
xor
jmp
sbb
push
push
sbb
jae
fsubrl
inc
cmp
push
ss
mov
xchg
rorb
inc
sub
dec
pop
imul
cmp
lcall
xorb
stos
shl
fdivs
add
cwtl
cmpsb
aas
and
repnz
test
sub
push
add
loope
mov
movsl
jmp
sbb
dec
cwtl
mov
cltd
cmp
and
inc
iret
andb
mov
stos
dec
fists
dec
sub
icebp
enter
jecxz
or
pop
jnp
fidivrs
leave
scas
inc
call
fisubs
fstl
adc
adc
push
sub
sub
nop
or
xchg
cmp
xlat
mov
adc
lock
das
push
outsb
into
xchg
sub
mov
imul
jbe
insl
adc
cli
rcrl
jl
xor
test
insl
std
imul
fsts
xor
cmp
lahf
sbb
loop
mov
ljmp
test
or
sbb
mov
mov
xor
jl
fcom
and
es
mov
adc
int
repnz
sub
daa
pop
cmp
in
mov
dec
aam
inc
ret
das
xor
fdivrl
push
call
and
inc
inc
xor
xchg
adc
jg
cmp
hlt
pop
test
pop
and
and
mov
repnz
in
mov
mov
inc
adc
mov
int
pop
inc
inc
test
mov
loop
movsl
and
scas
pop
dec
out
lret
sahf
adc
mov
or
xchg
idivl
dec
ds
aas
bound
mov
adc
push
add
cwtl
mov
push
sub
and
jle
lahf
push
xchg
shll
shlb
mov
pop
xchg
add
xchg
popf
dec
lds
lock
test
fldcw
shll
scas
cmp
lds
int3
cmpsb
lcall
in
cmp
aam
sahf
mov
negb
mov
cli
cwtl
leave
push
bound
ficompl
ja
sbb
iret
push
rcl
shl
imul
clc
sahf
in
psubsb
jno
loopne
pop
xor
int3
mov
sub
xor
cmp
and
int3
adc
or
fnstsw
lods
pop
jbe
or
push
xor
hlt
or
mov
orl
into
les
ret
int
adc
outsl
cmp
add
push
sbb
mov
dec
hlt
push
push
filds
push
xchg
subl
int3
lock
adc
add
cmp
or
scas
add
out
sbb
je
add
jg
faddl
mov
push
dec
adc
cmc
adcl
mov
call
enter
xor
sbb
int3
or
outsl
iret
or
sub
les
test
mov
in
cmpsl
jns
fisubl
je
push
or
fldenv
inc
mov
cli
fnclex
or
loopne
mov
arpl
jbe
pop
mov
push
shlb
mov
or
jns
orl
pop
fdivs
pop
jge
dec
and
xchg
pop
push
test
in
mov
inc
cwtl
leave
lds
ret
int
jecxz
shl
mov
jge
fdivr
icebp
xor
mov
adc
aam
sti
xor
pop
fs
push
dec
sbb
mov
and
std
in
call
in
mulb
and
scas
into
and
sbb
pop
jns
xchg
adc
cmp
adc
jl,pt
dec
push
test
fsubs
push
cli
or
xorb
lods
jbe
shr
mov
jne
adc
xor
arpl
adc
push
ljmp
mov
and
sub
decl
sbb
mov
pusha
fsubl
out
fmuls
imull
popf
xor
dec
inc
sbb
jge
cmp
pop
cltd
movsb
mov
sub
mov
push
jmp
push
mov
add
pusha
pop
pop
ljmp
add
hlt
push
mov
dec
and
in
pushf
cli
mov
flds
sbb
cli
mov
and
xor
jb
sbbl
and
repnz
lock
mov
scas
or
out
push
lods
ja
test
loopne
cmpsb
fbld
sub
cmp
mov
fs
stos
enter
sbb
outsb
jle
mov
pop
daa
sti
xchg
aaa
daa
and
cli
lock
adc
cmp
push
lods
int3
imul
loopne
lea
rorl
call
fadds
leave
mov
stc
test
jge
jmp
sub
mov
pop
dec
jae
push
push
cmp
dec
leave
imul
cmp
pop
adc
pop
cmp
inc
jns
sub
ret
inc
outsb
inc
add
pop
sahf
aaa
cmpsb
fwait
fwait
cmc
xor
inc
xor
mov
jmp
inc
inc
sub
lret
xor
and
and
xchg
out
das
sarl
movsl
mov
and
cli
sbbl
cmp
mov
push
arpl
adc
sub
gs
pop
movsl
flds
jbe
ror
call
jle
dec
pushf
or
cmp
push
mov
mov
or
xchg
and
insb
jno
mov
pop
mov
sub
pop
xchg
testb
lcall
mov
popf
ds
jae
push
outsb
lds
ss
mov
out
out
inc
jb
leave
repz
cmp
sbb
out
movl
mov
mov
cmpsl
sbb
cld
mov
and
imul
out
sub
sub
pop
out
mov
outsl
xchg
inc
pusha
adc
mov
adc
xor
sbb
popf
cmp
push
ret
jb
cli
inc
addr16
je
adc
call
loope
sti
movb
push
add
addr16
adc
or
cmpsb
clc
or
and
cmpsb
fwait
inc
xchg
mov
les
push
sbb
aam
nop
mov
sub
xor
aas
jge
sarl
xor
mov
lock
xchg
xchg
ljmp
iret
push
sub
mov
jecxz
xchg
addr16
sbb
roll
mov
xor
ja
jecxz
jmp
jb
sub
jb
test
add
aaa
sar
jo
pop
mov
movsl
icebp
dec
cli
jl
fxch
adc
aad
inc
and
and
test
add
sarb
and
xchg
dec
ljmp
out
mov
pop
sti
xchg
in
jo
ret
sbb
and
movsb
mov
aaa
xlat
int3
call
and
outsb
mov
aas
testl
je
cli
lret
call
mov
popf
push
inc
and
aaa
dec
in
ds
repz
fcompl
mov
jo
hlt
test
inc
adc
sti
adc
popa
shlb
sbbl
dec
mov
das
shll
cld
call
ret
lea
or
aas
mov
test
sub
xor
leave
xor
sub
in
pop
das
fsubl
cmpsb
fnsave
adc
call
ret
addr16
sub
mov
dec
push
dec
and
nop
xor
push
fdivl
mov
push
cmpsb
jle
lcall
lds
mov
inc
stc
shlb
int3
les
and
addr16
ja
je
shlb
sahf
mov
xor
lds
dec
sub
push
xlat
cmp
sbb
pop
sub
inc
mov
inc
jno
data16
jmp
es
cltd
pushf
js
rorl
insl
dec
fnsave
data16
jge
jne
shl
add
adc
pushf
mov
cmp
outsb
cmp
ja
leave
notl
or
cmp
mov
push
and
push
push
fbstp
fdivs
mov
jnp
cmp
inc
push
push
mov
push
orl
in
ss
mov
out
mov
xchg
movsl
or
stos
not
pop
inc
xchg
movsb
dec
aas
lods
xor
rorl
sub
mov
push
mov
stos
stos
xchg
mov
add
push
mov
or
aas
add
inc
adc
inc
push
adc
mov
add
adc
mov
xor
xchg
pop
inc
jb
mov
mov
and
xchg
adc
xlat
fistpll
jo
pop
sub
fwait
pand
shrb
dec
mov
icebp
jb
inc
insl
aad
stc
sub
lds
nop
cmp
pusha
in
sub
inc
mov
push
es
xor
push
and
push
out
in
lea
cmpsb
xor
mov
shlb
lock
inc
fisttps
mov
push
inc
ror
and
xor
fstpt
jbe
mov
test
data16
and
push
dec
ljmp
imul
divl
mov
or
mov
ror
imul
out
sub
lret
shlb
inc
pop
dec
dec
arpl
adc
int
mov
lea
clc
lcall
out
jmp
negb
fmuls
xchg
inc
aaa
jecxz
push
inc
xlat
gs
dec
mov
xlat
inc
jne
or
adc
xchg
repnz
mov
test
cmp
daa
xor
into
mov
adc
xor
cmpsl
sub
jne
pop
imul
inc
mov
mov
mov
ss
pop
xor
mov
jne
xchg
and
movl
aas
aam
jae
or
addr16
outsb
cmpsl
mov
imul
adc
hlt
scas
sbb
or
push
pusha
mov
movsb
or
es
cwtl
aas
into
xchg
iret
sbb
adc
imul
or
mov
cmc
or
and
inc
and
inc
fnstsw
push
xorl
xchg
dec
jo
add
ret
xchg
mov
sub
negl
xchg
ret
mov
dec
je
jl
filds
jge
std
inc
cmpsb
sub
loope
and
xlat
scas
movsl
pop
test
or
fwait
shlb
rcrl
mov
cltd
mov
repz
cwtl
xchg
jns
and
scas
jbe
sahf
lret
cmc
repz
repnz
mov
push
fsts
jae
repnz
sub
mov
xchg
jo
xorl
lock
xor
push
sub
and
sahf
movsl
mov
push
jnp
imul
cmp
imul
mov
xorb
cmc
cmp
test
inc
gs
pop
jno
in
add
push
int3
sbb
or
dec
mov
push
dec
push
mov
adc
or
icebp
clc
mov
cld
arpl
mov
add
xor
cld
bound
or
lret
dec
and
xor
mov
fsubl
xchg
cmp
xor
movsb
pusha
or
dec
pusha
xchg
jmp
push
dec
dec
lds
cmp
fisubl
jmp
adc
roll
adc
imul
pop
pop
enter
sbb
mov
mov
dec
jmp
dec
inc
jle
stos
and
shlb
test
into
cmp
push
stos
cld
mov
jle
push
mov
aaa
fldl
mov
nop
push
dec
and
lods
ljmp
scas
rcrb
lods
sub
int
lock
jle
xacquire
insb
cmc
outsl
xor
lock
adc
outsl
imull
int
sub
xlat
add
push
inc
ljmp
movsl
dec
nop
and
pop
xchg
cmp
sub
or
gs
sbb
mov
mov
inc
sbb
andl
movsb
cmp
jno
push
mov
aad
lret
aad
dec
adc
les
das
sub
mov
shrb
pop
dec
arpl
adc
adc
push
push
fadd
inc
mov
in
loopne
sahf
push
xor
fimull
sbb
testl
inc
jae
leave
repz
js
xchg
push
adc
loopne
ret
mov
mov
mov
lret
outsl
iret
test
mov
aad
ret
sarb
stc
out
pusha
stos
or
test
mov
jge
mov
push
push
ret
sub
ljmp
pushl
xor
inc
jl
sbb
jne
hlt
mov
adc
inc
xor
adc
xchg
out
and
jb
inc
fdivrs
add
xor
testb
pop
imul
dec
int3
dec
sahf
bound
push
je
xchg
mov
mov
shrl
push
sub
jns
or
in
or
mov
lret
mov
ret
sbb
sti
es
pop
iret
sti
cmpsl
xchg
mov
or
cmpsb
xchg
add
xor
insb
sbb
adc
cmpl
push
fiaddl
pop
leave
push
daa
shll
roll
faddl
sbb
popa
sbb
mov
imul
rorl
sub
aam
dec
push
adc
push
xchg
push
mov
mov
jno
cmpsb
jo
mov
out
ret
aas
repz
add
sahf
pop
cmp
mov
fdivrl
pushf
push
fwait
dec
jl
jo
add
sti
dec
xchg
sbbl
mov
pushf
cmp
movsl
dec
or
das
push
pusha
and
xor
xor
dec
xor
icebp
iret
cmp
dec
test
std
ljmp
aad
int3
and
and
add
mov
xchg
push
push
call
sub
cmp
or
shl
push
sub
repz
xchg
jecxz
push
ja
jns
sbb
jns
outsb
or
and
outsl
lret
rolb
add
sbb
adc
clc
in
pushf
jmp
xorb
adc
ds
cmc
sub
pop
ret
dec
and
adc
stos
in
push
fimuls
les
pcmpgtw
stc
leave
add
adc
gs
fisubs
je
fnstcw
push
hlt
cmp
dec
loop
ja
mov
dec
adc
into
movsb
test
out
sahf
sub
push
mov
nop
xchg
push
and
adc
repnz
cmpsb
lret
xor
fldl
cmpsl
pusha
fists
mov
add
and
sbb
mov
outsl
mov
cmpsl
jp
dec
mov
test
scas
inc
das
or
bound
pushf
sub
push
test
jl
roll
mov
push
push
cmp
mov
iret
pop
and
xchg
push
jecxz
sbb
fistl
shll
decl
inc
clc
lods
sar
xor
outsl
jp
mov
dec
test
fcmovnb
filds
mov
shrl
pop
mov
hlt
mov
jne
js
push
stos
mov
push
addr16
mov
push
mov
loop
loopne
adc
xor
cmp
mov
jg
push
mov
and
mov
push
xchg
sarb
cmp
push
fnstsw
mov
out
push
ljmp
insl
rclb
test
sbb
test
dec
orb
and
mov
cmp
xor
and
test
or
xor
mov
add
pop
push
popf
in
add
fsub
mov
and
xchg
xor
loopne
aas
mov
fs
test
sbb
xchg
loopne
testl
jmp
lcall
sbb
ror
sbb
shll
push
add
or
mov
inc
pop
pop
adc
sbb
fildll
push
xlat
lahf
out
shll
int
inc
push
arpl
xor
ja
push
scas
aam
jno
push
jae
mov
andb
cmc
fnsave
sbbl
popa
or
mov
cld
push
in
pop
fs
ret
mov
in
inc
repnz
icebp
dec
xchg
ds
cld
add
add
push
mov
push
dec
push
xor
push
movsb
mov
lret
jge
ss
leave
mov
mov
adc
icebp
test
into
js
fdivs
nop
adc
jo
in
test
or
xlat
or
xor
jne
xchg
mov
and
cltd
mov
shlb
adc
movsb
sbbb
enter
pop
mov
xor
or
fwait
test
add
kandnb
lea
sbb
call
sti
xor
add
ja
insb
pop
leave
jmp
rolb
cmpsb
sbb
mov
ljmp
add
pop
lahf
mov
cld
stos
sbb
xchg
loope
test
mov
jns
fdivrs
mov
lock
adc
inc
and
or
cmpsl
push
pusha
cmp
xchg
jmp
cwtl
and
sahf
ds
daa
xor
std
dec
mov
in
xchg
or
add
or
mov
in
cs
cmp
or
mov
ja,pt
faddl
push
loop
inc
test
test
sbb
xor
mov
jge
rcrl
add
repz
mov
pop
mov
inc
mov
sub
cld
mov
call
ja
leave
mov
in
xor
movsl
dec
mull
adc
mov
mov
pusha
es
clc
jnp
jb
fcoms
aas
fdivrp
pop
lea
lret
xchg
xor
ja
jle
cmp
cmp
ljmp
push
ljmp
push
mov
divb
pop
sbb
mov
mov
jo
inc
cwtl
icebp
test
imulb
sbb
sub
adc
pop
std
push
daa
mov
pop
in
aas
and
push
shr
call
in
test
rcll
jle
dec
insl
add
popa
das
shrb
push
or
dec
mov
idiv
out
push
push
scas
fnop
ljmp
pop
lret
jne
adc
dec
data16
xchg
add
shl
inc
sub
fs
mov
daa
xlat
inc
lahf
pushf
jge
add
mov
out
aas
int
inc
lret
fsubr
push
dec
cli
inc
cld
adc
test
push
test
and
out
xchg
push
and
loopne
int3
fcoml
cmp
rorl
jge
jg
xor
or
or
insl
jmp
add
dec
mov
jl
jp
call
sbb
jle
jns
pop
movsb
sbbb
xor
adc
xor
and
mov
sub
in
fwait
lret
jne
mov
iret
sbb
js
push
daa
xor
icebp
pop
inc
hlt
frstor
in
notrack
jae
hlt
leave
push
jo
cli
aam
or
test
test
jl
sub
xor
daa
mov
bound
mov
das
lods
pop
bound
and
cs
das
mov
movsb
add
adc
or
mov
mov
and
aaa
cwtl
faddl
add
jbe
lods
or
leavew
fmulp
add
stos
xorb
jl
inc
pushf
outsl
mov
push
test
dec
xchg
cmp
and
addr16
push
stos
fdivs
pushf
aad
mov
fcompl
and
jns
mov
repnz
cmp
hlt
test
cmp
xlat
icebp
popa
pop
mov
xchg
jnp
lock
pmaxub
pop
and
addr16
rcrb
sbb
jp
mov
lods
aad
ljmp
xor
inc
sub
testl
adc
sahf
pop
and
imul
xor
shlb
xor
sbb
dec
jp
subl
ficomps
xchg
xor
mov
out
daa
clc
fcmovu
jle
clc
cmp
cmp
cmpsb
mov
imul
das
add
jmp
outsl
insb
je
pop
mov
xor
inc
rclb
in
shlb
shl
sti
dec
jb
ds
jnp
xor
mov
in
in
and
loopne
inc
movsb
int
inc
sub
pop
loope
jnp
mov
cmp
jg
decb
xchg
mov
jl
ret
testb
data16
stc
stos
les
mov
mov
add
pusha
mov
cmp
mov
jle
scas
test
jge
call
xchg
dec
test
pop
fstl
outsb
jns
addb
scas
ja
gs
mov
dec
sbb
jns
scas
cmp
xchg
push
xor
inc
jbe
jnp
movsl
movsb
jecxz
pop
jge
insl
push
or
adc
add
out
stos
std
xor
rolb
xchg
incb
mov
mov
push
pop
cmpsl
out
lcall
xchg
xor
and
movsb
fnsave
jb
xchg
cwtl
inc
shlb
cli
inc
pop
cmpsb
push
scas
adc
sti
add
pop
and
leave
cmp
inc
xor
insb
sahf
jbe
dec
pshufw
addr16
adc
sub
or
ss
hlt
addr16
and
fwait
ja
mov
lods
pop
js
sahf
push
fisubrs
or
popa
sub
sub
aam
leave
sbb
and
icebp
and
sbb
leave
clc
jne
sbb
dec
and
outsb
bound
arpl
push
stos
into
call
mov
xor
movsl
fdivl
mov
jno
test
sarl
out
inc
shrb
sbb
cmp
pop
mov
and
mov
test
fwait
xchg
adc
andl
aam
inc
or
jp
xchg
add
out
cmpsb
js
mov
push
dec
pop
sub
inc
push
popf
test
sub
inc
inc
idiv
out
ja
sub
mov
cmp
cmpsl
sub
push
je
ficompl
test
push
pop
hlt
cs
mov
or
jp
push
fisttps
push
insl
fwait
arpl
push
xor
repz
cmp
sahf
in
mov
cli
imul
fnstcw
adc
inc
push
cwtl
insl
ret
jmp
cmp
rolb
xor
ja
push
push
sbb
stos
popa
cmp
mov
loopne
int
loope
add
imul
imul
jne
addb
dec
xor
push
push
lods
int
gs
cmp
lcall
push
fstpt
sub
push
sub
and
or
shll
push
je
arpl
les
jmp
es
dec
cmp
jge
jb
test
or
xor
adc
stos
test
jmp
mov
shrb
mov
push
xor
loop
jae
fs
andb
out
aas
jecxz
push
mov
out
fs
aaa
and
aam
push
int
mov
js
xor
xchg
add
loope
insb
clc
xchg
jb
jl
mov
fdivrl
scas
mov
pop
pop
dec
and
clc
add
bound
pop
mov
stc
add
mov
imul
stos
mov
ret
mov
xlat
xlat
and
out
mov
pop
stc
lods
push
push
push
adc
imul
and
cld
mov
mov
test
lods
push
hlt
aam
scas
out
mov
sbb
push
cld
fwait
pop
fdivl
xchg
push
lds
jne
int3
jns
xor
arpl
in
in
mov
push
call
xchg
dec
ss
sarl
mov
adc
mov
popf
lret
das
ds
popa
mov
and
mov
xchg
loope
pop
adc
add
mov
scas
and
stos
adc
call
pop
sahf
stos
ss
xchg
or
mov
jno
aad
fsts
clc
and
xchg
call
leave
push
test
sbb
add
test
stos
addr16
add
mov
daa
aas
sub
xlat
aam
iret
cmpl
rol
sbb
aad
stos
inc
push
loope
mov
bound
xchg
stos
mov
fstl
lock
inc
xchg
leave
mov
movsb
or
into
clc
mov
pop
jns
sbb
test
cs
scas
ret
arpl
imul
lds
cmp
enter
xor
mov
test
rorb
fmull
dec
jmp
stos
cmpsl
mov
fwait
stc
sbb
sub
dec
xchg
pop
ror
dec
jo
mov
xor
mov
fcompp
sub
push
mov
jb
fdivrl
dec
fs
out
popa
xchg
adc
push
xor
sub
lods
insl
movsb
gs
cmp
leave
push
jge
ret
sub
mov
enter
out
pop
mov
mov
push
jae
lock
leave
jae
int
mov
add
mov
insb
and
mov
xchg
mov
fisttps
fwait
test
sti
push
lea
inc
stc
push
leave
ror
add
pushf
mov
mov
subb
call
push
add
ds
mov
aas
mov
jge
add
loope
shl
xchg
scas
add
cmpsb
jmp
xlat
dec
sti
jae
mov
aam
das
mov
dec
ljmp
mov
cmpl
ret
jmp
xlat
cmp
arpl
push
fisubl
lods
or
lcall
sub
sub
out
mov
into
mov
cmp
push
mov
addr16
mov
ja
xchg
or
jp
xlat
sub
fldenv
mov
adc
test
test
cmp
push
push
mov
roll
xlat
insb
mov
in
bound
inc
lods
sti
push
cmpsl
jnp
dec
cmp
popf
mov
bnd
adc
daa
mov
dec
push
cmc
xor
mov
insw
enter
rorl
cltd
jb
nop
dec
mov
xchg
notl
fisubrs
lret
xor
mov
sbb
sti
mov
aam
imull
cmp
out
xor
xchg
outsb
jb
mov
add
mov
jne
add
lret
pushf
insb
dec
inc
aas
popf
mov
and
sarb
xchg
mov
add
sahf
jle
cmp
fcoms
ss
add
add
lahf
out
xor
adc
pop
adc
fcmove
popf
jle
xchg
pop
xor
push
loopne
in
gs
ljmp
in
adc
jecxz
jbe
test
add
clc
popl
mov
sub
push
inc
sti
pop
add
cld
add
sbb
loop
jnp
mov
dec
xchg
adcb
push
into
in
addr16
mull
xor
orb
cmp
ret
pop
sti
inc
repnz
xlat
cmp
scas
sbb
jb
lds
aam
or
mov
sahf
gs
test
adc
ror
mov
mov
ljmp
mov
mov
xor
inc
ja
dec
dec
adc
jo
sbb
mov
mov
sbb
jmp
ljmp
mov
lret
popf
lods
jg
mov
cs
ret
inc
repnz
adc
pop
mov
lea
cmpsb
xchg
jmp
stc
fs
mov
ja
mov
loop
test
mov
sbb
stos
push
negb
inc
loop,pt
push
minps
or
cmpsl
xchg
lea
out
popa
fdivrl
pop
cmp
leave
push
movsb
sub
dec
push
mov
leave
or
sbb
xor
sbb
popl
addl
sbb
mov
stc
xchg
repnz
mov
or
or
lods
out
dec
or
xchg
push
sti
push
push
xor
jecxz
es
int
iret
in
mov
inc
jl
mov
loop
test
mov
jo
inc
adc
pop
sbb
decb
mov
sti
pop
or
js
mov
xlat
sub
mov
or
ja
lea
or
mov
push
jp
sub
push
call
jno
adc
scas
orl
clc
sub
jae
scas
xchg
gs
inc
and
fs
loopne
and
ja
cmp
rcrl
mov
mov
stos
dec
lcall
sti
movsl
add
cs
cmp
mov
filds
insb
push
int3
inc
std
jle
push
xor
jne
dec
mov
aam
insb
fstpl
repnz
imul
cli
inc
fisttpll
aas
mov
pop
push
fdivl
ja
cmpl
or
xor
aas
adc
jp
hlt
scas
out
sbb
loop
xor
ret
dec
movsl
or
movsb
cld
adc
and
pop
sub
mov
pcmpeqb
and
mov
mov
fsub
sbb
mov
sahf
xchg
jae
iret
xchg
idivb
jp
xchg
insb
cmpl
mov
ffreep
fwait
dec
xchg
cmp
js
pop
sub
daa
in
insb
insb
sub
adc
popf
sbb
and
aaa
outsl
test
cmp
js
mov
and
and
cmp
push
or
mov
and
icebp
pop
push
mov
cmp
insl
dec
rcrl
jg
les
leave
cli
scas
push
stos
xor
insl
jb
mov
mov
fs
jne
jmp
inc
out
adc
xor
std
int
nop
icebp
fwait
mov
lret
jne
jg
dec
or
inc
stos
insl
dec
mov
sub
push
jl
lock
jmp
cmp
sub
mov
add
jl
cld
fcomi
loop
cmpsl
xor
fdivrs
ret
jae
mov
stos
movsl
sbb
in
pop
fadd
and
push
sbb
stos
mov
xor
jge
rclb
out
sbb
stos
mov
ja
rcll
sbb
xchg
jne
fs
mov
clc
ljmp
call
cmpsl
jl
es
sbb
inc
pop
es
jne
or
sbb
mov
addb
cmp
jo
movsb
enter
mov
sub
imul
inc
sarb
inc
aam
jae
jge
or
int
mov
push
sti
aas
mov
in
or
mov
jnp
and
cld
jp
sub
leave
scas
mov
out
hlt
pop
icebp
fisttpll
jp
lret
xor
jne,pn
pop
xchg
mov
add
add
jg
not
popf
nop
add
sbb
mov
mov
xor
xchg
sub
cltd
xchg
inc
mov
js
push
roll
inc
push
dec
add
xchg
jg
mov
fs
pop
rcll
sbb
mov
aam
jbe
enter
fs
mov
cmp
sbb
inc
rolb
pop
sbb
rcl
mov
call
fwait
cmp
jo
cmp
pushf
dec
jne
jg
shrl
jae
stos
out
fscale
push
pop
repnz
test
lods
xchg
jmp
ffreep
inc
inc
add
dec
je
or
ljmp
icebp
int3
mov
sbb
mov
dec
sbb
or
outsl
aad
loopne
notl
daa
out
in
mov
sub
or
xchg
push
aam
mov
adc
sub
xor
inc
sub
out
jge
push
push
sbb
fiaddl
outsl
add
add
mov
pop
mov
stc
mov
test
fadds
ret
xchg
fs
jbe
aaa
mov
call
inc
cs
cmp
xchg
lea
add
fmull
mov
push
mov
roll
loope
cmp
push
and
jmp
das
inc
mov
out
pop
mov
sarl
dec
outsb
sbb
je
or
bnd
sbb
xorl
push
cld
sbb
push
jae
mov
leave
mov
add
push
xchg
cmp
pop
dec
stc
cmpsb
sbbb
xchg
lods
cmpsb
iret
movsb
cmp
add
fdivs
lea
adc
pop
push
ja
test
aad
in
fidivrs
enter
ret
rol
bound
scas
ds
pop
pusha
sarb
mov
sub
fwait
in
imul
into
adc
cmpsl
inc
repz
enter
movsb
and
imul
fldl
enter
push
repz
std
pusha
hlt
cmp
push
outsl
shlb
mov
adc
push
lahf
jns
jle
mov
xchg
js
push
cmp
in
je
popa
test
adc
rolb
shll
ja
mov
adc
jg
sahf
pop
outsb
xor
pop
mov
jne
daa
mov
mov
inc
mov
ss
fwait
pusha
or
add
pop
cmp
lods
dec
jb
xor
and
sbb
xchg
cltd
ss
imul
jmp
in
xor
out
insl
push
scas
repz
lock
sub
mov
push
test
cmp
pop
sbb
xchg
or
dec
fs
pop
jno
nop
sbb
mov
enter
lds
es
xchg
rcr
dec
dec
sti
xor
dec
pushf
pop
cmp
jns
xchg
notb
in
xchg
sbb
xor
and
inc
and
imul
enter
js
dec
test
subb
inc
sahf
ds
and
dec
xchg
cmc
out
out
loop
xor
jge
push
and
movsb
jns
les
xchg
inc
sbb
enter
mov
pop
addl
mov
dec
jae
pop
mov
jl
mov
hlt
xor
cmpsl
stc
int
xor
mov
testl
mov
mov
adcl
fstl
movsb
sbb
pop
jmp
ret
cmpsb
jo
inc
or
fcomps
mov
nop
adc
pushf
lea
arpl
push
filds
nop
jns
cmp
pop
xchg
int
std
js
inc
dec
mov
and
xchg
fstpt
lock
push
int
cli
mov
pop
repz
push
pusha
pop
outsb
xchg
push
insb
mov
pop
mov
pop
sub
es
inc
hlt
cltd
push
popa
dec
xchg
jno
or
fistpl
aaa
xchg
mov
icebp
jnp
fdivrs
xor
andl
push
test
push
out
sbb
popa
mov
push
xor
add
mov
fstps
scas
dec
xor
push
enter
lock
xor
pop
push
test
and
sub
inc
and
xor
dec
popa
arpl
rcl
aaa
mov
jne
arpl
mov
scas
fwait
int3
dec
xchg
aaa
ss
sbb
fwait
fwait
or
or
mov
repz
repnz
out
lea
cli
adc
movsb
scas
scas
adc
xor
shll
pushf
mov
dec
cmp
ret
ret
cmp
inc
inc
adc
out
add
pop
js
and
movsb
xor
repnz
les
push
sbb
cmpsl
addr16
insb
or
icebp
ret
adcb
pop
add
loopne
inc
cmp
xor
mov
pop
xchg
cmc
leave
push
repnz
xor
lds
mov
sbb
mov
jne
lcall
ret
adc
inc
sub
imul
sbb
inc
fs
cmp
dec
sbb
cltd
and
rol
fcomps
and
mov
xchg
sub
lcall
rorl
and
cmpsl
ret
add
out
push
rcrb
sbb
mov
cmp
pop
xchg
push
or
popf
dec
xor
scas
popa
and
adcl
xchg
and
xor
sub
mov
sub
push
sub
aaa
fildl
lret
mov
jge
fs
movsb
dec
jno
mov
addr16
and
leave
ficomps
test
test
pop
mov
jecxz
jg
nop
gs
xchg
fdivp
cmpsl
dec
push
sub
pop
mov
jae
jge
inc
hlt
push
rcl
cmc
insl
dec
cmp
aas
fldt
sub
in
push
push
adc
push
inc
iret
adc
outsb
test
inc
or
mov
push
sub
mov
inc
jmp
add
lds
adc
xchg
xchg
xor
xor
arpl
mov
clc
ret
xlat
and
mov
jp
jo
jae
jnp
mov
sarl
js
addr16
test
cmp
in
add
mov
or
inc
inc
shl
sbb
repnz
adc
insl
nop
fnsave
mov
jbe
lock
jp
mov
lcall
pop
pop
je
cld
mov
test
dec
div
es
inc
out
fadds
arpl
jp
out
push
add
push
xor
addr16
and
adc
sahf
ja
push
cli
adc
stos
rcrl
mov
add
int
xor
dec
lcall
js
in
sbb
je
daa
add
xor
nop
add
pop
push
sub
scas
imul
loopne
xchg
add
add
and
or
mov
dec
rclb
dec
gs
sbb
or
fwait
push
pop
push
aaa
pop
into
push
std
cmc
out
pop
inc
enter
xchg
dec
inc
lahf
jmp
cmpsb
pop
ret
fs
mov
mov
nop
push
mov
push
fwait
or
inc
insl
jl
pop
in
jno
in
daa
adc
sbb
icebp
fwait
and
or
dec
xor
in
orl
lahf
sub
inc
mov
inc
insb
jge
subb
out
mov
dec
sbb
xor
mov
mov
dec
pop
add
or
cs
call
push
sbb
test
scas
jmp
out
mov
out
call
mov
push
mov
dec
mov
sub
in
jle
adc
jecxz
push
scas
and
fistpl
loopne
and
push
and
pop
cmpsl
sub
mov
push
aas
call
je
cmp
mov
sbb
insb
push
rclb
dec
or
arpl
movsl
mov
arpl
mov
iret
jp
mov
fwait
pop
daa
push
imul
adc
jns
push
or
pop
iret
jecxz
cmc
cmp
std
add
test
test
pop
push
mov
sbb
mov
lock
daa
or
xchg
hlt
mov
ljmp
stc
setb
leave
adc
fidivs
cmpsl
xchg
lock
or
iret
enter
push
notb
cmpsl
fbstp
sbb
mov
mov
push
mov
mov
and
sub
pop
cmpl
add
push
xor
xchg
cmpsl
adc
mov
insb
fidivrl
mov
jae
xchg
icebp
in
into
mov
add
ljmp
loopne
xor
add
mov
push
xchg
inc
adc
cltd
lock
into
mov
and
ljmp
mov
fwait
adc
pusha
lahf
imulb
cmp
sbb
out
xchg
pop
lock
stc
jno
idivw
mov
push
ss
mov
mov
jne
out
pop
or
fistpl
sbb
jbe
mov
adc
dec
aaa
sbb
scas
fdivrl
out
mov
enter
xor
xchg
cmpsb
cs
mov
push
mov
and
popf
inc
inc
add
and
scas
xchg
iret
mov
lret
int3
push
lds
inc
pop
xchg
adcl
pop
push
mov
scas
addps
dec
push
bound
jmp
inc
inc
xchg
popa
stos
jl
push
xor
sub
popf
shrb
mov
das
xchg
ds
jle
mov
call
jl
pop
pushw
push
mov
cld
add
push
scas
decb
fst
mov
xchg
mov
je
jge
insb
dec
cmp
jle
push
cmp
out
cmc
movsb
gs
lret
pop
shll
cld
jle
xchg
mov
icebp
or
das
pusha
sbb
fcmovne
jmp
cwtl
scas
sbb
dec
push
adc
je
jb
pop
mov
or
fdiv
xchg
push
xchg
ds
xor
in
xchg
outsl
out
sarl
jno
xor
cmp
lahf
jg
xor
nop
jns
inc
cmp
data16
movsb
enter
pmulhuw
nop
or
bound
xchg
lret
or
in
lds
xor
mov
or
jp
andl
dec
enter
aam
out
or
movsb
jno
je
in
int
pop
or
cli
test
sti
jg
inc
ja
loopne
jno
mov
fdivs
mov
enter
out
iret
sbb
dec
mov
out
inc
and
push
test
int
outsl
insb
jmp
imul
pushl
clc
mov
push
bound
xlat
scas
out
cmp
repz
int3
cmp
call
cmp
imul
std
adcl
cli
inc
cltd
pop
mov
sub
lret
test
mov
daa
xlat
rcl
inc
jl
imul
or
shlb
and
les
lcall
subl
mov
lahf
sub
scas
pop
sbb
std
cmp
mov
add
scas
add
nop
xchg
add
roll
push
sbb
mov
pop
hlt
fsubrs
cwtl
dec
fdivrl
mov
shrb
and
push
push
jl
pop
cwtl
aaa
mov
push
jnp
inc
aaa
xchg
sbb
mov
hlt
jmp
test
das
and
sbb
lock
cwtl
daa
push
shll
or
cmc
add
rcl
or
jmp
pop
int3
or
cld
push
sub
add
mov
aad
repz
pop
pop
sub
push
call
sbb
lds
cmp
push
pop
std
jmp
fsubs
inc
pop
das
cmp
cld
lea
clc
xor
mov
ret
fs
std
sub
cmp
xchg
sub
add
addr16
jl
or
cmp
jg
xchg
inc
cmp
dec
jo
mov
clc
jl
jle
ja
insb
repz
shl
cmp
into
inc
sub
mov
popa
das
push
iret
push
out
cmp
sub
xor
sbb
sbb
sbb
pop
retw
xlat
or
lea
out
jae
out
add
in
adc
and
hlt
inc
shrb
mov
add
in
add
bound
push
or
cmpsl
cmpb
pusha
shlb
fstps
fldt
mov
inc
mov
insb
mov
jle
nop
ss
dec
test
pop
ret
imul
out
test
or
mov
outsb
pop
in
fwait
fnstsw
or
push
jno
add
and
cmc
fscale
inc
adc
and
and
pop
or
xchg
jmp
mov
jb
rolb
mov
fldcw
sbb
inc
cmp
jge
push
lahf
cmpsb
jnp
sub
jno
idivl
mov
adc
loopne
push
loope
adc
sbb
pop
leave
test
xchg
ds
inc
dec
stc
iret
push
mov
fcmovnu
dec
jl
addl
or
add
into
mov
test
fistps
movsl
test
xchg
cmp
dec
rorb
cmp
sahf
jmp
mov
out
ds
cmp
ja
stos
repnz
pop
icebp
fcompl
cmp
cli
and
inc
fiaddl
imul
sub
test
pusha
icebp
inc
shll
xor
xlat
daa
pop
popf
pushl
jp
fdivl
or
pop
lahf
mov
cmp
xchg
and
and
addr16
cmp
scas
pop
xor
adc
jp
loope
or
jl
mov
data16
mov
xchg
sub
jecxz
sarb
lahf
outsb
iret
lods
test
pop
clc
push
in
jb
lock
mov
rcrl
pop
pop
stos
rcl
scas
aam
sarb
sbb
and
cmp
xchg
mov
push
repz
cmpsl
lods
movsb
mov
incb
cmpsb
out
mov
dec
mov
mov
movsb
xlat
std
adc
add
or
push
cmc
or
testl
xchg
arpl
jno
insl
cmpsb
and
mov
lcall
jecxz
cmp
xor
stc
or
add
subl
shll
mov
fsts
lcallw
ljmp
mov
daa
popa
inc
stos
or
icebp
stc
into
sub
sbb
sbb
fadds
sarl
sahf
insl
cmp
mov
loope
ret
inc
lds
push
lock
push
rcll
jmp
mov
add
outsl
filds
addr16
mov
and
jecxz
sti
stos
bound
pusha
xor
divb
cmc
movl
push
movnti
add
mov
jecxz
xor
mov
jno
stos
fidivs
adcb
xchg
fimull
ret
testl
jmp
rorb
mov
fisubrl
mov
jne
bound
aaa
test
cmp
xabort
or
pop
mov
jecxz
daa
push
push
adc
inc
push
adc
xor
push
mov
dec
mov
jns
xchg
pop
aad
std
dec
xchg
pop
xchg
sbb
std
mov
sub
xchg
xchg
sub
sti
add
cwtl
and
mov
cmp
subb
xor
push
in
sahf
inc
outsl
sbb
jns
mov
jne
aaa
push
cmp
and
out
jns
mov
cmpsb
repz
mov
or
or
pop
mov
push
inc
loope
fbstp
jae
je
and
adc
mov
fdivrl
mov
mov
mov
push
fmull
fstpl
dec
lcall
or
add
push
cli
jg,pn
aam
aam
mov
pop
gs
sbb
sbb
sbb
into
mov
push
sub
jno
insl
sahf
mov
xchg
mov
sti
add
pushf
mov
outsb
cmpl
xor
mov
xor
mov
pop
inc
rolb
popf
add
adc
dec
dec
inc
cmp
xor
dec
pop
add
xorb
popa
xchg
add
ret
ljmp
mov
in
mov
imull
pop
mov
cltd
stc
les
inc
mov
scas
out
mov
mov
mov
imul
mov
std
aaa
sub
jae
addb
lds
adc
cmp
imul
and
into
xchg
vmread
or
sarb
push
cmp
loopne
daa
addr16
mov
mov
pop
or
jnp
xlat
inc
push
or
daa
shr
test
add
movsl
iret
roll
pop
add
jns
daa
xor
push
sbb
xor
adc
aas
push
adc
ljmp
mov
cmp
imul
fidivs
push
xlat
scas
xor
add
mov
adc
add
xchg
imul
mov
ficoml
pop
movsl
sbb
pop
xchg
insl
adc
shrb
jae
int3
loop
mov
fidivrs
xchg
push
jp
mov
pop
js
mov
stos
ljmp
jno
insb
fs
outsb
ss
addl
stc
or
pop
jno
mov
inc
mov
inc
sahf
xor
movb
mov
cwtl
dec
pop
addl
pop
ds
dec
push
stos
xlat
arpl
ss
push
mov
sbbl
push
movhps
pop
cld
data16
scas
jne
pop
jns
sub
iret
rcr
xor
int
inc
sti
push
jmp
push
ret
push
push
imul
push
mov
std
push
test
cmc
pop
int
xor
in
scas
pop
xchg
ret
divb
mov
pop
loope
lret
lret
lock
inc
movsb
dec
popf
sbb
cmp
ficoml
xor
add
adc
jb
pushf
mov
in
pop
in
sbb
and
sub
out
push
sbb
xlat
pop
ljmp
arpl
aad
scas
and
sub
sbb
inc
faddp
lods
push
pop
xor
push
dec
mov
cmp
mov
mov
xchg
push
into
mov
ljmp
inc
xorl
add
into
mov
push
mov
pusha
or
into
shrb
loope
leave
loop
cltd
scas
cmp
dec
mov
stos
sbb
push
dec
dec
push
int
mov
add
loop
add
sbb
cmp
or
aas
ficoml
adc
js
push
sub
pop
enter
sub
pop
stc
iret
cmp
push
xor
or
ja
ffree
shll
loope
xchg
adc
sub
push
mov
out
popf
test
aas
push
jo
adc
out
jb
cmp
xchg
stc
outsb
dec
adc
fs
test
dec
fldt
test
push
mov
stc
adc
or
fs
lret
dec
adc
fwait
jo
xchg
lahf
ret
pop
sbb
int3
mov
pop
imul
jno
in
cwtl
sbb
cmp
inc
xchg
mov
inc
daa
dec
mov
adc
adc
mov
sbb
mov
loop
sbb
jle
mov
ret
xchg
xchg
adc
jge
andps
add
psrlw
fst
pop
dec
scas
xor
daa
sbb
scas
test
sbb
adc
in
rcrl
stc
insb
dec
pop
mov
inc
into
jne
test
fwait
pop
pop
pop
mul
lds
mov
insb
jge
je
fstl
mov
xchg
xchg
pop
into
or
iret
mov
mov
adc
push
cmp
leave
int3
cltd
and
cltd
sbb
sbb
fists
mov
adc
adc
repnz
insl
fiaddl
cmp
cmc
into
call
mov
xchg
sti
fbld
mov
lret
enterw
push
xchg
stos
mov
shlb
push
mov
addr16
jno
or
stc
dec
mov
xor
inc
stos
mov
icebp
out
testb
add
sub
pop
cmpsb
push
enter
nop
test
in
sub
xor
popf
xchg
dec
push
int3
nop
xor
adc
push
stos
jle
inc
sbb
adc
adc
rorb
add
mov
shll
daa
xlat
xcrypt-ctr
cmpsl
sbb
add
inc
pop
loope
or
cmp
xchg
sahf
les
enter
lcall
or
arpl
dec
dec
aaa
and
jbe
jnp
loope
mov
and
and
push
or
nop
std
mov
pop
cmpsb
or
sbb
cmp
fcoml
iret
std
mov
sub
sbb
add
rclb
ss
mov
jmp
xchg
jmp
into
loop
lahf
das
xchg
sub
add
or
sti
movsb
das
mov
pop
mov
add
out
mov
sbbb
inc
arpl
lret
xchg
xor
fxam
fdivrl
enter
loop
lcall
iret
sub
dec
xor
and
xchg
insb
mov
aas
iret
or
adc
xor
sbbl
rol
test
pop
jo
not
lods
roll
adc
mov
jnp
lahf
leave
xor
and
jns
cli
inc
cmpsb
out
jno
loopne
xchg
and
into
mov
jp
je
mov
inc
jg
dec
add
xchg
pop
push
repz
sub
mov
and
jl
aas
or
push
pop
fstps
cmpsl
clc
and
push
fstps
push
andb
mov
mov
adcl
cs
mov
pop
sbb
cmp
mov
or
sbb
lcall
out
xchg
scas
inc
jecxz
gs
push
outsb
adc
cmp
push
mov
add
lods
inc
inc
inc
or
mov
sar
dec
xchg
fcmove
and
lods
cmc
add
imull
xor
or
mov
or
in
inc
and
loope
inc
mov
movsb
mov
dec
add
sub
aaa
cmpsb
aam
aam
and
fnstenv
ja
sbb
lods
cmp
xor
inc
jge
ffree
inc
mov
push
imul
xor
or
aas
xchg
outsl
leave
int3
dec
mov
dec
lock
in
or
cmc
push
fwait
or
push
mov
push
inc
je
xchg
mov
int3
outsl
xchg
stos
sub
cmpl
inc
and
pop
and
loopne
mov
ja
sub
mov
sbb
repnz
mov
test
orl
inc
push
push
dec
sbb
add
mov
pop
icebp
imulb
fists
mov
popf
or
call
mov
xor
cmp
and
iret
or
jecxz
test
xlat
dec
movsl
movsl
scas
push
inc
add
test
xchg
xor
ljmp
add
cmp
fs
pop
sbb
mull
cmp
call
mov
dec
lods
int3
popa
ds
jbe
cmpsl
fnstcw
add
sti
dec
ljmp
inc
adc
insb
shll
stos
ret
mov
pusha
int
andb
cli
inc
loopne
int
sub
xlat
add
xchg
adc
sbb
iret
lret
imul
inc
xchg
popf
sti
xor
jmp
movsl
xchg
jns
xor
add
mov
arpl
xchg
sbb
repz
inc
fdivrp
mov
aad
inc
jmp
or
push
cmp
ret
push
jmp
sub
jecxz
sahf
jle
pop
lods
jno
push
mov
in
out
aaa
pop
lcall
push
sub
cmp
adc
sbb
mov
xchg
pop
cmp
mov
inc
fdiv
pop
and
shrl
arpl
dec
add
mov
sub
xor
push
js
push
inc
lcall
lods
stos
adc
es
push
insb
sub
mov
testl
ret
push
ja
iret
arpl
cli
pop
sbb
rol
repnz
inc
je
daa
pop
push
pop
push
das
fstpt
xor
jp
inc
add
xchg
clc
stc
shl
inc
aam
push
jl
sub
lock
xor
xor
add
ret
fstpl
or
shl
mov
in
jl
fildll
adc
mov
and
add
mov
xor
test
adc
adc
mov
push
test
cmpsl
imul
cmpl
subb
out
movsl
fwait
clc
pop
lret
push
xchg
pop
jp
dec
cmpsl
push
cli
cmp
shrb
movsl
fdiv
aam
int3
mov
mov
outsl
or
jle
xchg
mov
addr16
inc
insb
mov
test
aas
scas
fwait
dec
je
ret
aad
mov
sbb
push
scas
and
in
push
lods
clc
fs
or
aam
jle
out
jno
cmpsl
xchg
or
jecxz
ja
into
inc
xor
icebp
sub
jp
adc
daa
sub
pop
shll
addr16
out
mov
outsl
push
dec
daa
es
mov
or
mov
xor
sub
icebp
outsb
loope
es
outsb
in
mov
xor
aaa
lock
sbb
in
push
test
dec
adc
xchg
popa
xor
test
add
nop
and
faddl
sub
imul
push
dec
loop
fistl
scas
aas
lods
aad
sbb
mov
lods
and
mov
sbb
movq
inc
xchg
addr16
and
ret
cmp
push
mov
in
push
or
hlt
cmp
dec
pop
pop
mov
or
xchg
pop
dec
shll
imul
add
mov
push
insb
data16
mov
mov
call
ret
xor
xchg
jo
bound
mov
pop
mov
mov
lret
push
or
mov
stc
push
jbe
push
ljmp
mov
add
stc
movsl
push
xchg
jae
jge
xor
or
out
cs
dec
inc
pop
test
push
mov
adc
es
push
outsb
push
iret
test
xchg
leave
mov
mov
pop
inc
into
push
mov
cmp
dec
jnp
adc
ja
xor
insb
xlat
addr16
out
sub
add
jecxz
xor
ret
enter
jo
pop
test
jae
mov
sub
xor
xchg
dec
das
js
shrl
dec
cwtl
inc
lcall
imul
or
rolb
mov
sub
inc
stos
add
sbb
in
lret
out
xchg
cwtl
js
enter
and
sbb
jnp
jl
mov
sbb
mov
jne
outsb
loop
dec
push
xchg
cmp
push
pop
pop
repnz
test
or
lahf
lods
xor
nop
xor
pop
jle
hlt
pop
repnz
mov
insb
stos
aam
xlat
pusha
data16
stos
push
lahf
mov
xor
enter
pop
and
adc
rcl
mov
jb
lock
push
stos
mov
outsl
mov
nop
in
fcomip
cmp
nop
lea
jbe
pop
inc
fisubs
stos
ljmp
clc
subb
in
mov
jbe
add
and
inc
jnp
inc
test
mov
mull
xchg
and
cmp
stos
repz
xor
sbb
dec
lahf
sbb
or
cmp
xor
pop
ja
push
imul
cmp
aam
jle
subb
jp
add
nop
jbe
in
popa
pop
out
fildll
dec
lea
mov
and
int
jne
mov
insl
aad
push
jecxz
mov
or
data16
cs
loope
inc
or
loop
xchg
cwtl
push
pusha
mov
loop
mov
push
push
mov
mov
in
cld
sub
mov
ljmp
jg
adc
dec
or
mov
sub
or
in
pusha
lret
mov
xor
mov
into
mov
fwait
and
gs
cld
repz
gs
pushf
push
push
dec
dec
test
jnp
sbb
and
sahf
add
shr
xchg
adc
insb
cmpsb
fs
sub
jg
mov
sbb
cs
shll
sub
jae
das
xchg
dec
jge
inc
mov
mov
sbb
out
mov
pop
mov
lds
or
fbld
jmp
sub
scas
repnz
and
fidivrl
xor
xchg
mov
push
push
mov
lock
adc
inc
add
pop
mov
mov
jecxz
repnz
push
scas
insb
pop
cs
cs
mov
out
lods
inc
sub
ljmp
imul
movsl
cs
neg
add
xchg
test
cs
cmpsb
adc
xorb
push
inc
mov
jle
or
dec
fstpt
sarl
sbb
mov
jge
out
icebp
pop
pop
repz
outsl
call
ror
lret
adc
es
daa
dec
std
int3
push
sbb
push
in
fisttps
jge
mov
pop
jg
xor
lret
push
mov
push
fidivs
call
fldt
and
sbb
xchg
jne
lahf
dec
inc
cmpsb
cmp
sub
sbb
inc
call
xchg
out
add
xchg
jmp
xchg
pop
gs
sbb
adc
add
lahf
stc
cmc
neg
jbe
xor
mov
pop
loop
das
pop
in
add
cmp
lahf
repnz
xor
xchg
test
xchg
pop
fabs
leave
adc
inc
bound
xor
xchg
mov
lret
pop
loop
xorl
push
xchg
add
loopne
std
mov
fldcw
leave
jp
nop
xor
out
xor
push
mov
mov
out
jbe
and
adc
ffree
insl
lock
adc
shlb
cmp
cmp
clc
inc
in
mov
mov
xlat
test
adc
mov
pop
daa
rcr
lods
cs
aam
add
dec
shrl
push
xchg
repz
cld
sti
and
pop
jle
pop
out
rcll
sbb
sar
lcall
push
jne
sub
pop
mov
roll
or
out
out
cmpsl
cld
add
aam
sbb
jnp
movsb
insl
sub
shlb
push
xlat
popa
aam
and
in
stc
ret
aaa
outsb
xchg
mov
scas
sub
pop
or
rorb
scas
ss
into
inc
mov
xor
adc
icebp
subl
ficoms
xlat
xchg
cld
ret
mov
dec
in
jmp
jo
and
mov
loopne
lea
xchg
cmc
fistpl
sbb
add
and
xchg
loop
xchg
frndint
lahf
mov
pop
jae
shl
adc
or
pop
sbb
call
and
or
cmp
inc
jp
cmc
xchg
pop
mov
inc
sbb
ret
stc
mov
cs
sub
dec
sti
shlb
rcr
fisubrl
xor
and
xchg
pushf
test
adc
int
and
add
sbb
dec
add
mov
inc
mov
sub
add
xchg
fldenv
mov
mov
cli
fwait
ss
xchg
pushf
sub
jns
mov
pusha
insb
push
imul
icebp
add
jno
in
leave
enter
push
push
out
repz
mov
or
aam
ds
jo
int3
js
jnp
jb
test
xchg
imul
and
mov
hlt
rcrb
mov
mov
mov
xor
repnz
sbb
push
xor
and
lcall
jmp
inc
mov
loop
in
js
pushl
adc
sub
ja
add
lock
jg
pop
inc
repz
maxps
inc
inc
pop
adc
cmpl
push
and
adc
jle
xor
mov
push
out
icebp
mov
pushf
movb
xchg
test
cmp
orl
xchg
pop
shll
gs
mov
in
and
fidivrl
fcomps
push
aad
loopne
aad
dec
and
jmp
mov
cmpsl
dec
aas
fisttpll
rorb
jge
sub
dec
scas
aad
mov
dec
or
xchg
popf
sahf
mov
jbe
sbb
mov
iret
ja
pop
mov
ret
mov
stos
jne
dec
jp
mov
adc
shrb
sbb
sbb
ljmp
mov
dec
sub
pop
xchg
or
mov
dec
iret
pop
cmpsl
loope
cwtl
ss
addl
dec
sbb
jp
mov
lock
mov
cltd
xor
xlat
push
xlat
je
loopne
jmp
fstps
push
jns
mov
push
xchg
mov
mov
or
jecxz
mov
mov
fwait
mov
pop
push
orl
rorl
cli
shll
andb
les
pop
cld
stos
xor
jp
cs
cmpsb
popa
adc
push
icebp
imul
adc
pop
push
push
adc
cwtl
pushf
mov
lret
and
lret
sarb
sbb
call
lods
xor
add
xchg
daa
movsl
es
push
cmp
mov
fcmove
mov
jl
mov
ret
fs
js
xchg
dec
into
popf
xorl
xorb
add
mov
es
fmull
adc
lahf
mov
add
xchg
inc
lods
stos
shl
jge
pushw
mull
xchg
and
loope
mov
xchg
cmpsl
fildl
pop
add
xchg
pop
adc
stc
test
xchg
popf
xor
das
push
lret
mov
inc
pop
ret
lods
ds
and
jae
js
jg
pop
insb
cld
adc
jbe
fstpl
pop
and
imul
pop
jl
insb
xchg
lret
outsl
test
or
mov
and
push
mov
bound
jnp
sbb
sbb
inc
pop
pop
sub
test
xlat
mov
sub
stc
push
fisubrs
pop
mov
jmp
push
push
push
cmc
ret
xor
jl
sti
imul
mov
xor
add
dec
push
icebp
lahf
cmp
sub
lret
stc
lds
mov
mov
shlb
lret
push
dec
clc
ret
push
fwait
xchg
mov
or
adcb
pop
adc
ja
mov
and
ljmp
xor
call
or
jnp
ficoms
je
cmp
fs
in
lret
cmpsb
outsl
sbb
incb
fcoml
out
jg
adc
xor
ficompl
jnp
iret
push
or
rorl
push
xor
sub
mov
outsl
jp
out
test
dec
jg
lods
cmp
pop
cpuid
ja
js
hlt
dec
jb
pop
cmpsb
mov
ljmp
outsb
dec
jne
push
decb
divb
inc
ret
pop
aas
jns
lret
pop
jmp
fisubrl
ret
aam
gs
cwtl
mov
adc
je
clc
pop
lret
in
test
test
cmp
jb
jae
rcrb
cltd
xchg
shl
jge
sbb
cwtl
cltd
pop
shlb
push
push
sbbb
dec
out
mov
icebp
bound
lahf
mov
lea
mov
push
jbe
jecxz
loope
and
outsl
aaa
and
mov
jnp
cmpl
or
or
add
movsb
or
leave
sti
xlat
dec
popa
jne
pop
rol
mov
rorl
pop
ja
clc
push
xchg
dec
out
shll
lods
mov
fldenv
enter
fldt
jnp
xor
cmp
mov
jmp
pop
xchg
repz
xlat
and
loopne
mov
inc
lret
xchg
mov
cmp
or
mov
in
mov
adc
mov
xchg
lea
sub
cmpsb
fisttpl
push
in
insb
jg
mov
add
jne
lock
gs
push
push
or
pop
ret
movsb
add
dec
inc
arpl
or
sub
outsb
sub
sti
enter
scas
test
mov
sbb
repz
and
aas
mov
cltd
in
adc
movsb
fs
pop
test
jecxz
pop
adc
jae
pop
add
ss
pop
sbb
arpl
lea
imul
sar
sbb
cmp
and
mov
sbb
test
mov
mov
aas
push
fmulp
pusha
xlat
out
inc
imul
add
ret
mov
inc
pop
daa
scas
xchg
fs
dec
mov
lret
cmc
sti
repnz
sahf
fcoml
push
jne
iret
xor
pop
dec
jecxz
xchg
addr16
jne
sahf
xchg
cwtl
repz
xor
jmp
sbb
or
shrl
mov
inc
xchg
adc
jmp
cld
sbb
ljmp
fistl
sbb
mov
fistpll
leave
mov
lods
cmp
xchg
push
ficomps
rol
inc
lcall
cmp
mov
inc
or
mov
dec
cld
jno
mov
adc
aas
mov
lret
ja
mov
dec
mov
dec
mov
data16
dec
push
jno
lahf
cmp
es
and
xchg
xchg
jo
sub
adc
or
inc
int
inc
hlt
test
adc
ljmp
sbb
mov
enter
mov
dec
or
sbb
cltd
int3
jp
rorb
icebp
sub
rorl
stos
or
call
fisttpll
jl
cwtl
std
decl
loopne
test
jg
pusha
jb
jno
gs
pop
ds
repnz
mov
xor
jecxz
movsb
cwtl
repnz
mov
mov
incl
adc
and
mov
fidivl
mov
in
mov
push
ljmp
cltd
dec
inc
xchg
pop
push
mov
and
mov
cmpsb
fldcw
dec
cld
adc
push
pop
hlt
dec
cmp
loop
cmpsl
popa
pop
loopne
and
jo
mov
inc
imul
push
sbb
xor
stc
and
leave
loope
mov
lret
ret
js
xor
push
ret
fs
ss
pushl
mov
data16
js
sti
into
das
or
arpl
mov
fs
dec
pusha
cmp
mov
bound
mov
dec
js
pushf
jns
dec
mov
xor
jno
adc
lahf
jge
repz
test
mov
dec
ret
inc
push
xlat
mov
stos
mov
mov
out
jl
nop
mov
jge
sbb
rcl
out
ret
inc
xchg
cwtl
push
add
dec
jno
pop
xchg
or
pop
out
in
jp
or
in
leave
nop
xor
test
int3
push
pop
std
in
dec
or
movsb
sub
adc
mov
lret
outsb
xchg
imul
stos
xor
push
pop
lock
outsl
xchg
cmp
push
aam
xchg
jne
cwtl
addb
test
sbb
xlat
scas
jbe
xchg
leave
sarb
pop
dec
les
iret
mov
aam
xor
jne
in
add
cs
cwtl
outsl
loopne
pop
inc
nop
fildll
push
fldl
or
xor
pushf
and
and
pop
mov
pop
mov
stos
mov
mov
pop
mov
mov
loopne
and
nop
jb
inc
push
fldenv
cmpsb
decl
pop
fistl
push
loope
fstpt
inc
roll
lcall
mov
and
adc
rolb
sub
ror
cmp
push
repz
push
push
pop
loope
sub
xor
daa
stos
mov
inc
rclb
jno
daa
pushl
sbb
xchg
jle
ss
push
jp
sub
pop
cld
xor
xchg
dec
and
push
jb
cmp
ja
addr16
xchg
aam
add
adc
shr
inc
xchg
addr16
decb
out
xchg
push
fstps
add
cld
add
lds
push
std
add
cmc
popa
out
pop
outsl
jo
in
xchg
jmp
mov
std
or
pushf
mov
sub
mov
mov
fistl
lcall
flds
inc
sub
and
jnp
cmpsb
bound
mov
mov
jne
adc
jmp
and
cmp
xchg
clc
and
add
or
or
aad
aam
pop
push
mov
pop
cli
aam
sbb
sub
xchg
ss
xorb
push
jmp
xchg
stc
inc
mov
cld
mov
cli
pusha
cltd
pop
jo
mov
mov
push
add
loope
or
jns
cli
data16
xchg
mov
ljmp
push
mov
lods
dec
push
lret
mov
add
add
xchg
ret
mov
jno
insb
inc
gs
ror
cmc
imul
mov
pop
mov
adc
or
pop
bound
out
test
cmp
xor
test
outsl
xor
divb
inc
or
hlt
fwait
xor
out
fsubrl
scas
pop
mov
adc
jbe
cs
adc
cwtl
push
lret
les
pushf
in
pop
loope
in
mov
mov
leave
adc
adc
or
adc
fsubr
mov
mov
or
xchg
cmp
mov
dec
stos
in
add
mov
push
stc
fisubl
bnd
fwait
jnp
mov
vmulss
insb
add
in
mov
clc
mov
xchg
sub
test
scas
aaa
add
or
inc
and
jg
call
sbb
out
shll
mov
mov
mov
loop
inc
mov
testb
adc
mov
jmp
imul
add
pop
sub
pop
add
aas
sbb
cwtl
std
and
jbe
sub
popf
pop
out
add
adc
adc
xchg
into
lods
setb
adc
cli
int3
mov
std
sub
mov
mulb
xchg
adc
ss
lahf
push
jge
dec
mov
push
mov
fisubl
out
daa
stos
lret
loop
mov
pop
inc
mov
cmc
pop
dec
mov
add
jns
jns
xor
outsb
ja
mov
sahf
lcall
popa
dec
xor
loop
cwtl
insl
xchg
inc
in
mov
cli
mov
push
xor
cmpsl
lock
xor
popf
ror
adc
movsl
dec
xchg
ret
shrb
shlb
repz
sub
cmp
sbb
xchg
sarb
jl
scas
mov
jmp
mov
test
or
lea
shrl
sbb
pop
aas
stc
mov
push
dec
imul
iret
je
mov
xchg
jbe
jmp
and
jge
fs
mov
push
arpl
movsl
test
cmp
iret
ljmp
jg
lcall
sub
in
mov
mov
mov
inc
je
mov
leave
pop
movsl
dec
fidivrl
and
sbb
cs
aam
gs
insl
fwait
test
je
int
xchg
jne
dec
and
cmp
mov
mov
enter
push
out
mov
test
sub
repnz
xchg
sbb
loop
ss
fs
jbe
cli
sbb
sar
icebp
sbb
mov
lods
loopne
push
lock
xor
mov
cs
sbb
cmp
mov
dec
fldenv
cmpsl
shr
add
sbb
sar
lahf
and
pop
xor
call
lods
jg
xchg
out
shrb
arpl
cmp
jo
mov
cmpsb
mov
mov
int
or
fisttps
jge
xchg
push
mov
pop
jne
adc
out
fldl
inc
mov
xor
cli
pop
xor
pop
in
mov
sbb
daa
ds
inc
xchg
pop
push
add
scas
xchg
inc
pop
xchg
ret
xchg
push
xor
icebp
in
cmp
mov
lret
pop
imul
repnz
cmp
jmp
or
xor
pop
jne
bound
dec
iret
ja
rep
adc
xchg
pop
test
insl
roll
pop
and
daa
insb
xchg
scas
lret
dec
cmp
mov
bound
mov
mov
and
pcmpeqw
lret
pop
mov
dec
xor
cmp
outsb
jnp
movsl
ficomps
stos
das
jne
fwait
lods
sbb
pop
ds
mov
fld
xor
loopne
sbb
jmp
out
and
mov
or
inc
fldt
out
je
mov
mov
stos
or
xchg
xchg
mov
cwtl
sti
mov
lds
clc
lahf
lods
in
notl
ljmp
pop
cmp
cli
jae
ss
fisubs
push
jmp
adc
push
push
loope
and
decl
mov
xchg
and
sbb
dec
adc
push
sti
fs
idivl
scas
lcall
leave
cmp
cmp
lret
push
mov
pop
ret
pop
pushf
stos
add
and
ljmp
xor
adc
add
pop
push
lcall
cmpsl
scas
pop
fcom
push
or
inc
cmpsl
es
orb
mov
cmp
ljmp
imul
fildll
rcll
loopne
or
ret
dec
ret
adc
pusha
push
xor
jnp
inc
push
xor
jns
cmp
aad
dec
push
cli
xchg
xor
loop
mov
sahf
outsl
or
inc
lahf
dec
cmpsl
jle
xor
xor
arpl
pop
dec
es
loop
adc
dec
pusha
cmp
jno
lock
xor
sub
xchg
pop
iret
jecxz
mov
mov
loopne
pop
pushf
fsubr
in
inc
inc
add
sbb
xlat
mov
insb
cmp
js
or
inc
cld
inc
lods
inc
sbb
cli
lock
dec
inc
mov
pop
xchg
sahf
mov
add
inc
and
mov
std
add
pop
movsl
mov
in
popf
pushf
mov
das
mov
addb
pop
mov
int
repz
lret
xchg
shr
push
pop
scas
rcl
repnz
out
mov
and
mov
bound
enter
mov
loopne
icebp
mov
push
lret
scas
cld
fs
pop
or
mov
xchg
fnstenv
lret
addr16
shll
mov
daa
insl
xchg
jmp
xor
sub
sti
fcmovu
aam
mov
dec
inc
pop
je
inc
ret
push
insl
outsl
cmp
sahf
scas
fsubrl
add
pushf
mov
xor
cmpsb
outsl
cmp
lock
aam
dec
dec
in
fwait
je
js
mov
pop
popf
adc
sahf
scas
stos
out
aas
add
mov
add
out
cmpsl
pushf
mov
sub
mov
aam
xor
xchg
dec
xchg
push
push
fwait
push
in
movsl
sbb
sbb
pop
test
xor
jg
outsb
adc
test
nop
or
and
adc
or
cltd
stc
fucom
cli
inc
jge
dec
xor
mov
xchg
roll
add
jo
pop
sbb
inc
push
sahf
sbb
pop
cmpxchg
je
xchg
sub
push
push
cmp
loopne
sahf
mov
and
lcall
jo
repnz
loopne
push
or
push
in
loopne
subb
push
cmpsb
jg
jg
pop
pop
insl
scas
insb
ds
mov
push
sbb
pop
fs
xor
xor
mulb
arpl
je
and
mov
adc
or
rclb
stc
cmc
mov
mov
mov
aas
mov
scas
xorl
cmp
pop
xor
insb
xchg
lds
adc
fildll
mov
pop
repz
push
sub
sub
mov
and
mov
mov
js
push
in
das
xor
xor
lret
lds
loop
mov
bound
aad
movsb
imul
xchg
xchg
arpl
lret
mov
insl
aad
stc
pop
mov
mull
and
cmp
and
jns
xchg
sbb
bound
and
mov
and
scas
push
int3
cmp
push
scas
or
aaa
ljmp
icebp
sar
sbb
cmc
lret
or
adc
pop
ficomps
fs
dec
sbb
daa
xor
or
or
mov
jo
pusha
jnp
push
mov
hlt
and
inc
test
enter
pop
ret
int
add
or
dec
ljmp
ffreep
insl
mulps
xor
sub
mov
leave
xchg
lods
lcall
in
addl
cld
add
push
add
or
jp
nop
push
lods
cmp
js
cmc
std
sub
push
incl
mov
push
rcrl
repz
or
jno
add
adc
xlat
mov
jecxz
mov
sbb
mov
mov
adc
outsl
outsb
bound
adc
movsb
stc
or
mov
stos
fiadds
shlb
pusha
pop
ret
mov
int
mov
push
movsb
and
push
test
xchg
stc
mov
loop
mov
fsts
mov
inc
shrb
into
sarb
sbb
mov
iret
mov
in
lods
and
shlb
adc
dec
jns
xor
jg
lods
imul
loop
push
push
mov
xor
sub
stos
pushf
mov
pop
mov
or
xchg
pop
xor
xor
jnp
mov
nop
lods
xor
mov
sbb
imul
not
mov
and
mov
push
push
mov
inc
fdivs
or
push
aam
adc
cmpsb
rcrb
in
movsl
bound
test
pop
faddl
add
fmuls
aad
stos
jno
and
lods
sbb
mov
es
adc
mov
stos
movsb
jp
sbb
test
outsl
out
or
adc
dec
push
or
inc
dec
inc
pop
out
mov
insb
scas
adc
enter
pop
xchg
idivl
jmp
and
andl
jmp
sbbl
mov
push
out
jp
lret
sbb
jg
fmulp
sarb
cwtl
sbb
sub
out
xor
stos
ret
mov
and
in
orb
inc
sbb
aad
mov
sbb
outsb
fisttpl
push
push
test
lds
sub
nop
iret
mov
cwtl
mov
cwtl
gs
aam
and
cmpb
mov
test
adc
in
dec
sahf
pop
and
rcrl
insl
popa
sbb
jl
sbb
mov
fisubs
test
inc
sub
cwtl
fs
daa
and
lods
leave
gs
js
push
xlat
mov
mov
cmp
push
mov
sub
sbb
fidivrs
outsb
fisttps
or
cld
adc
mov
mov
mov
adcl
cmp
pop
xchg
inc
push
inc
sub
sbb
adc
dec
push
add
or
sub
mov
mov
test
jl
das
jae
leave
and
in
stos
scas
dec
push
dec
out
or
shll
sbb
cmp
add
test
lods
jb
decb
xchg
and
aam
jge
mov
lret
push
add
fucomip
dec
adc
xchg
and
jmp
orb
fiadds
mov
or
jmp
jnp
pusha
push
rcrl
pop
popf
lods
cs
xchg
imul
lods
out
pushl
xchg
lret
test
jae
psrad
pop
xchg
test
mov
cltd
popa
xchg
sub
mov
xor
cld
mov
cmpsb
fdivrl
addl
mov
mov
int
xchg
int3
cmp
or
inc
leave
mov
adc
pusha
rorb
loope
out
and
jmp
mov
pop
push
mov
and
mov
stos
pusha
popf
inc
insl
icebp
out
mov
jg
sub
xor
sbb
in
mov
out
stc
jg
inc
daa
and
mov
test
pop
loope
push
aam
aad
dec
aaa
test
mov
cwtl
mov
mov
aaa
out
dec
outsl
inc
lahf
push
jbe
test
inc
or
int
stos
aas
jg
add
cmp
daa
push
test
fstl
pop
adc
xchg
cmp
inc
sti
out
cld
ljmp
ss
sub
mov
pusha
loope
mov
cmpsl
out
mov
jb
ljmp
stos
in
mov
addl
shll
in
sahf
jbe
dec
popf
pop
ficompl
popf
inc
mov
push
outsb
ror
inc
mov
xchg
add
pop
jns
mov
sar
xlat
ds
cmp
cmp
gs
add
fdivrs
inc
ljmp
movsb
scas
dec
inc
lea
xor
mov
push
pop
xchg
aaa
ds
xchg
pop
pop
sbb
xorb
sarb
lds
sbb
js
popa
icebp
or
ss
mov
or
loop
cmpsl
mov
sub
xchg
mov
enter
or
push
les
lods
jle
dec
push
pushf
addr16
pop
push
es
lret
jmp
aad
mov
sbb
inc
ret
gs
xchg
mov
in
fwait
gs
cmp
test
jge
push
cmp
adc
cmp
cmp
pop
push
lock
adc
out
aad
pop
inc
pop
gs
pop
setns
jp
sbb
les
test
das
arpl
dec
mov
dec
inc
in
push
adc
test
adc
or
pusha
int
idiv
outsb
out
lret
fidivrl
cmpsl
inc
mov
pop
cmp
and
sahf
xor
push
sub
mov
jbe
test
cmpsl
loopne
leave
ret
call
scas
jp
jmp
ficoms
call
add
rcrb
pop
icebp
jne
or
pop
adc
insb
test
jg
xchg
cmpsb
or
arpl
sarb
lds
mov
icebp
push
inc
pop
jns
out
stos
push
push
adc
xchg
mov
mov
jmp
jno
push
pop
push
fstps
jge
mov
fcmovb
pushf
sbb
lds
ss
pop
jg
fs
outsl
add
push
cmpsb
fs
into
lds
adcl
je
jle
mov
xlat
inc
cmp
or
or
outsl
sahf
jl
push
or
adc
sbb
movsb
ljmp
dec
jmp
cwtl
adc
fidivrl
inc
cmp
fdivr
mov
pop
cmpsl
and
or
cmp
pop
mov
fists
jg
test
nop
mov
sub
js
rorb
push
xor
pushf
pop
shll
mov
sub
lods
bound
mov
data16
cmp
sub
xchg
js
fstl
fwait
mov
out
mov
sub
mov
je
add
xchg
dec
lods
mov
out
sahf
mov
andl
gs
dec
cmc
push
ret
mov
sub
mov
push
mov
stc
xor
movsb
int3
sarb
scas
scas
mov
push
je
scas
cmp
or
in
gs
mov
popa
outsl
xlat
sub
xchg
xchg
adc
dec
jo
shrl
nop
xchg
shlb
xchg
lods
dec
jl
das
js
nop
xchg
rclb
pop
in
idivb
sub
test
es
jns
daa
sbb
mov
or
data16
lahf
mov
int3
push
push
or
ja
mov
insl
xchg
sbbl
cmp
push
sub
stos
movsl
mov
or
push
sbb
hlt
test
inc
aas
adc
dec
sub
notb
test
stc
sbb
fstpl
push
lret
cmp
cmc
int3
mov
mov
push
or
xchg
call
mov
dec
push
dec
adc
in
jg
rorb
incb
outsb
pop
mov
lock
lds
stos
sbb
dec
add
sbb
mov
lock
sbb
ss
aaa
roll
xor
inc
push
push
jl
inc
xchg
pop
add
out
mov
jge
jb
outsl
sub
hlt
dec
lock
outsl
inc
adc
and
and
jo
inc
push
ss
lret
arpl
test
test
cmpsl
popa
mov
clc
mov
fnstenv
adc
fdivrp
jmp
fidivl
cmpsb
test
shlb
mov
inc
xor
adc
clc
roll
call
movsl
sbb
fxtract
int3
mov
outsl
cmp
jnp
call
mov
mov
push
xor
pop
xor
mov
addr16
repz
push
in
cld
clc
push
cmp
sbb
adc
loop
jle
sbb
stos
push
push
dec
sub
sub
pop
cmp
mov
lea
jmp
push
bound
js
push
fadds
add
movl
fmul
dec
nop
es
dec
cmp
mov
inc
push
sub
cltd
jbe
mov
mov
ja
jg
sub
mov
out
outsb
scas
outsl
jnp
jns
repnz
in
mov
xor
subb
and
pop
sbb
leave
les
cli
mov
in
adc
cmpsl
jmp
jnp
xchg
imul
ljmp
mov
or
es
bound
inc
imul
fistpll
cs
mov
mov
sbb
add
mov
add
cmp
cmpsb
inc
pop
std
les
mov
fsubrl
inc
mov
xchg
jle
aam
cli
or
sbb
sbb
std
shrl
jp
sub
push
cmp
insl
jge
outsl
pop
testl
sti
mov
imul
adc
adc
rcrb
sti
mov
aaa
pop
fs
sub
xchg
aam
dec
shl
push
cs
xor
int3
mov
in
out
fs
adcl
negl
cltd
adc
hlt
sub
dec
lret
stos
push
cmpsl
mov
loope
cli
stos
pushf
push
out
cwtl
mov
popf
dec
sub
scas
jmp
mov
out
jbe
jl
ret
cmc
js
mov
xchg
push
adc
in
lea
pusha
cmp
mov
add
stos
push
dec
sar
scas
ret
inc
or
pop
jmp
jp
push
gs
adc
or
xor
dec
ficompl
call
jns
push
push
and
lea
pop
lea
and
insl
push
cs
fwait
dec
jno
lret
adc
int
daa
push
mov
sub
fs
pop
insb
and
jne
adc
in
pop
test
mov
mov
mov
movsl
mov
inc
sbb
jecxz
fnsave
in
data16
les
adc
aaa
test
addr16
aam
or
dec
jle
inc
pop
neg
insb
dec
xor
mov
repnz
fnstenv
jnp
fnstsw
or
xchg
dec
add
stos
in
inc
rorb
push
xor
icebp
movsb
mul
cmpsb
lret
mov
notl
lea
dec
int3
and
xchg
or
sub
mov
sbb
mov
imul
jge
out
test
ljmpw
dec
fwait
jns
es
testb
scas
xchg
push
cmp
mov
fs
test
jg
stos
imul
out
fwait
sub
ss
xor
pop
add
jo
pop
dec
pop
icebp
ret
repnz
push
cltd
jns
mov
movsl
pop
mov
push
sbb
push
daa
adc
add
or
mov
jne
push
dec
pop
enter
decb
jae
pop
mov
mov
ret
inc
or
jae
and
addb
and
sub
insb
add
rorl
mov
out
jge
icebp
mov
insl
xchg
push
inc
push
jg
lds
mov
dec
insb
icebp
and
push
loop
cmp
sahf
scas
je
and
sub
fmulp
stos
mov
in
dec
mov
inc
xlat
fistl
scas
dec
or
pop
cmc
mov
push
sub
adcb
test
or
stos
sbb
out
adc
gs
jb
daa
mov
mov
outsb
lock
push
mov
push
xchg
mov
ror
int3
daa
cmp
insl
fxch
ret
mov
insb
mov
test
add
incl
loop
add
push
repz
xchg
inc
xor
or
shlb
cmp
sub
push
aad
orb
int3
andb
inc
dec
jbe
add
xor
sahf
popa
xchg
or
xchg
mov
push
andl
lds
and
inc
mov
dec
sbb
or
jge
stos
leave
ss
notb
sub
xor
in
inc
dec
mov
arpl
sub
mov
fidivl
dec
or
jnp
and
or
mov
nop
jo
loope
pop
cwtl
xlat
insl
push
repnz
jnp
sti
jae
push
aaa
bound
fstpt
mov
int
adc
sbbb
sbb
mov
mov
xor
push
mov
push
sub
xor
int3
outsb
int
xchg
sub
xchg
cltd
dec
ror
in
insb
inc
or
push
add
jns
and
lret
pop
ret
push
daa
ror
in
in
dec
mov
jp
iret
lahf
clc
xor
inc
sbb
jb
popa
cmp
lret
push
loopne
xchg
roll
mov
or
cmpsb
stos
movsl
inc
inc
fldt
insb
leave
fsubrs
in
dec
decl
pop
push
enter
in
addr16
roll
adc
or
xchg
push
xor
push
inc
pop
inc
and
mov
ss
loopne
add
pushw
orb
and
insb
cwtl
out
dec
rcll
pop
out
pop
lahf
mov
out
out
push
and
decl
mov
and
mov
cmp
ficoms
or
outsb
mov
pop
mov
xchg
lds
xchg
dec
sbb
cmp
cmp
cli
jecxz
push
out
fwait
ljmp
dec
xor
adc
clc
insb
jg
xor
fs
out
jge
or
pop
push
movsl
jns
leave
lds
fsubrs
repz
xchg
dec
scas
je
repz
push
xchg
add
pop
call
push
outsl
lods
mov
jg
pop
daa
mov
mov
dec
jnp
or
lock
mov
js
push
into
scas
or
or
fildll
xchg
mov
xchg
lock
jp
push
out
in
mov
mov
iret
pop
insb
pop
test
bound
jmp
in
mov
btr
sarl
jmp
xlat
lcall
sbb
stos
jno
fmull
fsub
push
in
aas
outsl
js
in
testb
fwait
add
jp
mov
enter
addr16
pop
jb
jp
lods
mov
loopne
jle
cmc
mov
std
into
mov
sub
dec
aas
mov
sbb
or
aas
ret
mov
in
fsubrs
adc
adc
outsl
jle
mov
imul
mov
fsts
dec
sub
mov
xchg
mov
or
dec
mov
inc
mov
test
sub
imul
ss
stos
in
jb
fdivs
jnp
jns
adcl
adc
in
into
cmp
in
stc
popa
fnstsw
push
cmpl
insl
divb
inc
xchg
subb
movsb
dec
cmpsl
inc
insb
cwtl
fbld
fisttps
mov
sti
dec
stos
aas
subl
pop
pop
fwait
xchg
mov
popf
adc
xchg
shll
outsl
pop
push
loopne
enter
inc
pop
lcall
test
mov
stos
push
cmp
stos
ljmp
dec
sbb
mov
cmp
sbb
lods
fdivrs
mov
cs
shl
cmova
test
mov
fs
test
jge
inc
into
imul
lods
push
pop
lock
orl
xor
inc
and
jg
nop
outsb
cld
cmp
jle
push
add
cli
mov
or
or
mov
dec
add
aaa
jo
sbbl
ljmp
add
or
mov
ljmp
iret
call
shll
xchg
ret
add
fldt
out
sbb
in
aad
mov
add
and
roll
fs
add
push
out
cli
adc
sub
pushf
fcmovnbe
add
aam
jp
dec
out
stos
sub
jo
sub
xchg
and
dec
sbb
ja
cmpsl
loope
jns
mov
lret
dec
push
mov
into
arpl
mov
or
push
ljmp
sarb
mov
cmp
inc
dec
jb
sti
mov
cltd
xor
testb
imul
mov
pop
mov
mov
cmpsb
test
add
jo
lret
cld
repnz
adc
ljmp
out
push
imul
test
les
rcll
jp
mov
gs
rclb
jge
jns
mov
out
out
scas
mov
xchg
call
in
sbb
inc
aad
dec
sub
fwait
dec
scas
mov
add
push
sbb
fsubrs
js
rcl
pop
lds
add
push
mov
mov
sub
out
std
pop
or
popf
daa
pcmpgtb
add
dec
push
cmp
xor
adc
push
jbe
pusha
cld
mov
ret
xchg
subl
cmpsb
nop
lahf
mov
jge
push
mov
and
sub
test
call
jo
clc
mov
add
ds
fisttpll
sahf
imul
cmc
fsubr
out
push
jne
xchg
adc
ss
add
in
fdivrl
orb
mov
sbb
sbb
push
hlt
enter
mov
push
test
pop
stos
sbb
pop
push
mov
pusha
aas
mov
in
lods
cltd
inc
js
adc
dec
popa
js
push
add
sbb
or
dec
xchg
fcoml
ss
mov
into
or
call
icebp
mov
lret
hlt
aad
mov
fimull
cmp
xor
aas
add
pop
test
data16
out
in
in
inc
cltd
pop
mov
out
mov
pop
stos
fcmovne
mov
mov
add
push
loopne
push
push
jo
notl
jl
pop
mov
ss
xor
pop
aaa
and
cmp
cmp
adc
cli
xor
aaa
scas
test
push
out
mov
adc
scas
adc
and
gs
mov
les
mov
xchg
xlat
fidivs
nop
rcll
mov
dec
mov
in
cmp
push
cmpsl
test
ret
pop
xchg
pushf
js
ljmp
lret
iret
das
add
ss
pop
fcompl
cmpl
arpl
insl
mov
icebp
mov
stos
jle
outsb
enter
inc
int3
test
mov
jmp
xchg
in
call
mov
push
and
adc
fs
add
cmp
sbb
add
lahf
shll
or
pop
sub
mov
inc
xchg
or
aas
xor
sbb
mov
cmp
or
ret
pop
std
rclb
mov
addl
daa
mov
dec
ja
jno
mov
addr16
pop
test
xchg
mov
sarl
inc
mov
push
push
push
mov
push
push
incl
cmc
lods
fbstp
push
cmp
ret
out
push
mov
push
in
adc
adc
andb
pusha
in
arpl
hlt
ja
and
loope
push
adc
cmp
lods
push
xor
sub
pusha
ret
pop
and
int
into
dec
xor
push
imul
pop
mov
imul
out
adc
push
jmp
popf
adc
cmp
and
fwait
lods
les
push
push
stos
mov
jae
or
pusha
jecxz
inc
jne
cwtl
pop
outsl
imul
shrl
shl
bound
dec
mov
push
lods
sbb
imul
mov
fprem1
hlt
jge
dec
xor
filds
adc
aas
dec
sub
hlt
popf
xchg
dec
inc
cltd
or
xor
ror
aaa
xchg
loopw
lock
pop
cmpsl
push
cmp
call
and
pop
jmp
dec
les
dec
loop
shrb
dec
in
mov
cmpsb
xlat
or
pop
and
scas
jmp
xchg
imul
mov
jno
pushf
mov
rcr
sti
jle
push
repnz
insb
add
hlt
xchg
mov
movsb
and
in
adc
test
stos
insl
test
ss
test
mov
push
out
pop
shlb
lcall
ss
subl
xlat
lea
jns
sbb
mov
add
in
cwtl
sti
and
iret
fwait
inc
or
lahf
insb
sub
cwtl
movsb
jge
in
xchg
cld
sarb
dec
xor
icebp
popf
arpl
jp
sbb
mov
pop
xor
mov
xchg
aas
mov
cmp
cmc
notb
roll
out
data16
push
sbb
and
jns
in
aad
stos
fs
cmpsl
in
repz
adc
sub
aaa
adc
and
push
mov
mov
jp
mov
scas
daa
movsb
icebp
pop
push
lret
pop
ret
scas
mov
imul
and
stc
inc
or
pop
in
push
ja
nop
jecxz
sub
cld
and
fsubrp
cltd
push
cmp
jns
sbb
out
jge
cmc
adc
xchg
adc
hlt
cmp
lret
mov
jp
nop
mov
inc
les
clc
cltd
xchg
rcrb
adc
out
adc
xchg
lahf
inc
xchg
das
and
fwait
aaa
aad
insb
cld
mov
inc
xor
imul
sub
cwtl
xchg
mov
sub
mov
leave
out
dec
into
sbb
mov
mov
adc
sahf
cmp
xchg
pop
insl
sub
xchg
jmp
lods
mov
mov
adc
aaa
stc
pop
loopne
xlat
je
iret
push
pusha
scas
xor
mov
inc
test
xchg
mov
popf
lret
in
in
cmp
and
adc
out
insl
mov
rorb
lods
push
ret
out
xlat
add
cmp
dec
pop
or
icebp
cli
pop
xor
fcmovu
jg
fildl
mov
sarb
arpl
jecxz
or
xchg
mov
mov
inc
cwtl
pop
out
pop
out
jae
add
xchg
mov
mov
add
jl
imul
rcll
daa
xchg
mov
mov
dec
sub
inc
stos
sub
insl
xor
sbb
dec
pop
aad
out
pop
cmc
cmpsb
mov
mov
loop
push
dec
xlat
cli
sub
inc
dec
cltd
faddl
pushf
je
daa
aad
or
arpl
stc
rorl
xchg
adc
sahf
cmp
cli
aaa
loope
gs
mov
adc
mov
sub
aaa
pop
popa
mov
mov
cmpsl
outsl
repz
mov
loope
mov
outsl
lock
pop
loop
mov
fdivs
lahf
ror
sub
nop
out
icebp
pop
fisttpll
inc
push
push
mulb
lahf
aam
loopne
lds
mov
add
xchg
subb
out
roll
ret
test
lods
bound
stos
mov
jle
cwtl
inc
iret
popa
push
scas
fmull
fnstsw
dec
aam
xor
lret
mov
push
xchg
xor
nop
testl
daa
hlt
push
out
xchg
cmp
inc
lods
jmp
aas
mov
xchg
out
inc
popf
imul
fsub
jo
dec
addr16
enter
adc
push
enter
ret
pop
insb
dec
xchg
aas
out
push
xor
stc
cmpl
mov
sahf
ds
ljmp
fisttpl
imul
xor
fbstp
in
cmpsb
dec
xchg
daa
and
loop
jbe
icebp
add
out
cmp
mov
loop
cmpl
mov
out
es
mov
fwait
lods
xchg
fisttpl
mov
hlt
gs
rorb
sub
inc
sub
les
subb
ret
sahf
and
inc
sub
aam
xchg
test
jnp
pop
ss
adc
xchg
test
in
movsl
sahf
mov
cmpsb
clc
test
and
jg
mov
in
inc
add
xchg
inc
sar
movsb
mov
pop
and
mov
xchg
inc
pusha
mov
jns
cmp
fisttpll
fwait
roll
test
push
out
xchg
rcll
adc
mov
jle
inc
jl
sbb
add
cmp
fstpl
jb
add
sbb
andb
sbb
mov
cmp
test
out
fwait
jo
pop
mov
sub
mov
push
mov
pop
inc
ljmp
xchg
movsb
cmp
mov
cmp
fs
and
icebp
not
dec
xor
push
pusha
inc
jno
out
xchg
repnz
xchg
repz
lret
imul
mov
movb
mov
arpl
add
sbb
jg
mov
inc
sti
leave
inc
arpl
outsl
push
fisubrl
stos
outsb
mov
iret
xchg
pop
jecxz
or
xchg
inc
loope
push
mov
adc
dec
dec
cmc
cmp
dec
movsb
cmpsb
aad
cltd
test
fdiv
push
push
and
aad
or
mov
fsubs
pushf
mov
lods
popa
xor
push
and
fs
jp,pt
pop
adc
mov
shrb
sub
xchg
aaa
fsubrl
stos
sub
sbb
ret
inc
or
pop
shll
pop
or
data16
incb
inc
repz
mull
lea
filds
inc
xchg
insb
dec
out
shlb
mov
test
cwtl
call
imul
sbb
into
decb
pop
ja
lock
pop
stos
mov
aas
inc
gs
and
enter
adc
inc
andl
ror
sbb
mov
ss
jle
pop
push
push
mov
xchg
xchg
fsts
sbb
lods
or
xchg
mov
icebp
out
repnz
mov
loope
xor
orl
pop
loope
subl
mov
or
lds
mov
xbegin
cmp
std
sub
mov
xorl
mov
or
pop
sarb
fiaddl
fisubrs
movsb
inc
lods
jno
out
cmp
shrl
rcll
pop
cmp
push
ret
lock
mov
xor
jl
dec
push
dec
mov
clc
pop
rcll
and
mov
repz
shrl
xchg
mov
mov
inc
les
ljmp
push
xchg
xchg
xchg
mov
adc
fwait
push
dec
out
mov
iret
das
sbb
cmp
sbb
pop
into
aas
push
xchg
jne
push
imull
addr16
sbbb
cmp
sahf
in
cmove
and
push
jl
cmp
fbstp
pop
je
cmp
xor
cmpsl
test
js
sbb
stos
sbb
xchg
jge
orb
ror
cwtl
repz
andl
nop
movsl
push
pusha
in
enter
cs
push
add
mov
xchg
inc
icebp
aad
cmp
and
push
jp
jns
adcb
xchg
mov
leave
dec
cmc
sub
test
sub
xchg
movl
cmp
movb
repnz
ja
fs
ljmp
enter
test
mov
mov
dec
xorb
add
ret
fsubrl
inc
inc
mov
dec
into
ljmp
leave
icebp
xor
sub
test
cmpsb
cs
xor
mov
jle
rolb
cmp
ds
ficoms
insb
inc
pusha
fsubs
mov
test
push
outsb
jnp
mov
lods
xchg
lds
dec
sbb
xor
add
adc
jae
mov
jnp
out
insl
inc
jne
adc
imul
sti
xchg
stc
xor
test
inc
fists
repz
dec
xor
inc
or
mov
clc
test
add
cmpsl
sti
xor
stos
test
and
push
loope
jg
jno
pushf
cmp
jns
out
subb
push
cmp
pop
sub
xchg
aaa
popl
flds
dec
sub
add
jbe
jl
cld
inc
adc
das
out
jns
stos
pop
mov
mov
mov
into
bound
adc
jo
shrl
leave
push
push
sbb
int3
or
decl
movsb
aam
add
pusha
shlb
or
pop
pop
pop
sbb
pop
insb
cltd
dec
pop
fwait
lret
xchg
insb
push
mov
xchg
dec
sub
test
aas
shrb
add
test
push
mov
rcll
and
xor
mov
push
movsl
push
pop
push
mov
xchg
mov
xchg
nop
repz
rcl
insb
mov
pop
sub
clc
rolb
adcl
shlb
mov
out
xor
mov
jmp
lcall
shrl
fwait
lea
xor
cmp
std
xor
dec
or
aaa
sub
inc
adc
popf
enter
shlb
inc
jl
aas
mov
pushf
sub
jne
in
in
js
sub
inc
add
sub
das
or
popf
rep
pusha
pop
outsl
jge
je
mov
iret
add
jb
mov
and
mov
jecxz
mov
pusha
mov
jg
leave
pop
mov
mov
int
pop
fcompl
mov
jp
lcall
cmp
fmull
mov
fnstsw
pop
xorl
and
lret
inc
std
sbbl
ret
movsb
shrb
lock
add
push
imul
data16
nop
lret
pop
test
mov
pop
data16
scas
jl
jnp
xchg
jl
adc
mov
popa
stos
int3
mov
notl
sbb
dec
mov
mov
shll
outsb
sub
leave
pop
push
shr
jl
or
fidivs
in
fisttpl
test
stc
or
test
sub
jno
or
push
hlt
lock
jmp
loope
stos
sbbl
leave
bound
xor
push
mov
popa
mov
sbb
lcall
aaa
cmp
push
or
xchg
xor
mov
jbe
adc
outsb
push
ret
jae
pusha
fs
sub
out
jmp
xor
les
testb
ret
dec
cli
mov
pop
mov
dec
int3
int
cmp
adcb
inc
inc
xchg
and
out
loope
mov
sahf
jo
jge
test
xor
test
sub
jle
daa
mov
add
jnp
jo
sarb
pop
shlb
xchg
ds
add
mov
out
addb
pop
fwait
cmp
pop
mov
mov
adc
mov
in
jae
repnz
adc
subb
pusha
stos
lock
loopne
test
jle,pt
fcmovb
push
xor
jp
cmp
ljmp
pop
sub
lea
rolb
mov
cmpsb
into
ljmp
adc
daa
int3
lock
mov
cmpsl
iret
xor
pop
mov
popf
cmp
cli
or
notb
ljmp
pop
popa
stos
xchg
and
xor
shlb
add
jnp
dec
mov
sub
test
jne
fiadds
jb
or
xchg
mov
icebp
mov
cmp
xor
xchg
cmp
dec
sub
push
dec
into
jmp
subl
pop
xor
xchg
mov
sub
sbb
sub
out
mov
les
xchg
inc
mov
es
jg
xchg
loopne
dec
iret
adc
imul
hlt
pop
or
jnp
rclb
mov
or
inc
dec
jecxz
bound
pop
pop
sbb
xchg
scas
orb
out
fists
pop
lea
test
mov
pop
lahf
icebp
add
mov
mov
inc
mov
push
std
and
and
mov
inc
lods
push
jmp
sub
movsl
xchg
jp
inc
outsl
repz
out
mov
out
push
sahf
movsl
cli
lods
inc
idivb
mov
xchg
pop
loopne
popa
xchg
fcmovbe
int3
jle
sub
fistps
lds
and
push
andl
int
lea
push
loope
pop
adc
push
cld
test
pop
clc
mov
sbb
mov
flds
ja
lcall
out
rol
dec
mov
mov
push
mov
daa
stc
clc
mov
dec
push
in
ficoms
mov
in
iret
add
testl
xchg
dec
push
loop
mov
sbb
sub
imul
in
pop
add
mov
ret
mov
and
pop
sbb
je
leave
mov
loop
mov
cmc
jno
lahf
jge
lds
inc
push
fwait
mov
aam
push
jp
jp
sub
mov
jecxz
mov
adc
jge
rorb
mov
icebp
mov
shll
pop
adc
addr16
mov
jnp
xchg
mov
and
jns
aam
or
jl
xchg
mov
mov
lds
and
ret
xchg
leave
nop
mov
push
inc
cmp
hlt
add
dec
pop
jmp
pop
fwait
stos
mov
fwait
push
pop
stos
mov
gs
fwait
or
pop
and
orl
lods
push
mov
test
and
pop
push
mov
xorb
sub
xor
xchg
sbb
lcall
xchg
lret
jp
mov
or
imul
xor
test
cmp
jb
popa
sbb
sbb
stos
inc
sub
lods
and
pop
ds
pop
push
mov
cmpsl
sub
mov
xchg
jecxz
fdivs
ret
ror
mov
fs
rcrb
push
push
in
jne
rcll
lret
sbb
pop
sti
mov
xchg
xchg
ret
xchg
sbb
push
mov
ljmp
xchg
add
adc
and
xor
clc
jne
lds
inc
les
cmp
cld
andl
push
sub
adc
sub
cld
cltd
mov
push
aas
add
fmuls
pop
rcrl
pop
mov
sub
fistpll
and
js
dec
rcl
aam
es
pop
push
nop
test
xchg
mov
shlb
fnsave
push
rolb
aaa
push
pusha
dec
arpl
loopne
shlb
rclb
pop
orb
sbb
add
out
pop
int3
sbb
inc
lahf
sbb
cli
movsl
mov
je
stos
nop
xchg
mov
pop
inc
sbbb
sbb
cmpsb
into
dec
hlt
ljmp
pop
add
add
jecxz
mov
rolb
jae
jl
mov
pop
xchg
jmp
rorl
pop
lret
out
mov
scas
testb
jns
imul
dec
ja
aaa
xchg
fstl
xor
cmp
mov
mov
sbb
movsl
push
gs
call
pop
jns,pt
push
ja
pop
sub
sbb
stos
sbb
mov
notl
cmp
rorl
adc
jbe
push
mov
or
add
enter
jno
mov
pop
lock
pop
and
mov
arpl
insl
enter
loopne
test
dec
dec
cmp
in
inc
cmp
shrl
prefetch
in
xchg
pop
lods
out
ds
das
dec
adc
add
les
or
movsb
push
push
lahf
je
or
std
xchg
out
arpl
mov
icebp
jbe
mov
fisubs
xor
adcb
or
rorb
xchg
pop
pop
adc
xchg
mov
add
gs
in
fistpl
add
dec
pop
daa
xchg
daa
dec
je
jne
sbb
fwait
add
mov
pop
jno
or
adc
mov
fcoml
fcomps
test
cli
sub
insl
or
mov
push
imul
mov
imul
ljmp
or
sub
leave
or
push
ss
mov
pop
clc
sbb
ftst
adc
dec
add
dec
outsl
insl
xor
jecxz
fs
lret
mov
iret
pop
and
adc
mov
xor
or
add
out
popf
inc
pop
xchg
shlb
and
xchg
inc
jbe
hlt
mul
ficomps
push
fs
add
scas
mov
leave
rcrl
inc
sbb
push
out
push
fs
sbb
cmpsb
sbb
daa
jne
jecxz
push
xlat
negl
jmp
mov
mov
cmpsl
popf
cmp
lcall
iret
sub
mov
adc
rorl
jo
out
mov
push
jnp
push
mov
rolb
or
xor
push
imul
pop
into
hlt
inc
movsb
in
out
mov
js
xchg
clc
mov
pushf
shll
mov
adc
int
hlt
jmp
jecxz
or
add
inc
or
push
mov
rcll
and
lahf
add
out
mov
mov
popl
lds
pop
into
jns
push
aas
lahf
inc
xor
fs
add
dec
adc
mov
dec
dec
dec
int3
cmp
insb
and
cmp
call
xor
dec
jo
in
pop
out
testl
imul
in
add
push
lds
aas
mov
iret
imul
adc
test
pop
ljmp
outsb
das
xchg
sahf
xchg
sbbl
lahf
mov
sub
mov
cvtps2pi
xor
loop
inc
lock
ja
rorb
fucom
addr16
or
pop
aam
out
lods
mov
cmpsb
jle
or
loop
cmpsl
out
je
cmpsb
repnz
push
add
xor
push
sbb
mov
jbe
mov
out
aas
inc
inc
inc
mov
loopne
add
jmp
cmp
lock
loop
lret
out
mov
adc
cmp
inc
push
outsl
jns
pushf
mov
pop
cmp
fdivl
mov
pop
pop
mov
cwtl
pop
test
in
insl
xor
xchg
repnz
lods
xchg
arpl
xlat
shl
cmpl
push
sbb
pushf
mov
push
inc
adc
sbb
psubb
nop
shl
lock
stos
push
pop
loop
push
sbb
mov
lds
orb
jne
rcrb
sbb
je
jmp
loop
sbb
xchg
mov
mov
xor
lahf
sahf
out
rcr
pop
std
push
out
pop
sbb
jbe
xchg
adcb
ret
pusha
dec
xlat
lret
bound
add
jbe
int
jne
inc
mov
mov
icebp
cmp
inc
push
es
dec
mov
js
movsb
or
insb
in
fdiv
adc
pop
jb
push
dec
jmp
imul
mov
cmc
push
or
sub
sub
jp
push
and
test
sub
imull
xchg
addr16
inc
out
lods
sub
push
loopne
ljmp
rcr
jmp
sbb
dec
push
or
adc
inc
inc
jne
gs
repnz
push
int3
dec
into
dec
ficoms
inc
or
inc
sbb
enter
int
mov
lahf
outsl
loop
push
hlt
cmpsb
sbb
dec
scas
and
or
mov
pop
adc
fdivs
fwait
adc
out
xlat
and
ja
mov
mov
ret
ss
cmp
ret
dec
mov
out
sti
jge
cmp
imul
pop
and
cmc
push
loopne
adc
cli
mov
mov
mov
pop
pushf
and
sarb
inc
lahf
pop
xchg
jno
pop
les
loopne
sbb
mov
sbb
inc
hlt
push
lcall
jo
leave
add
pop
sahf
ds
arpl
popf
fs
mov
mov
movsb
lcall
and
jmp
sahf
jno
inc
pusha
mov
fldl2e
mov
sbb
xchg
sbb
jg
push
aam
mov
adc
loop
jmp
dec
push
test
add
out
in
cmc
stos
stos
xor
ss
dec
xor
mov
pusha
jmp
jp
pop
out
dec
adc
sbb
push
popf
mov
bound
and
jle
adc
sahf
addr16
mov
test
sbb
iret
fists
xchg
push
imul
dec
push
cmpsb
out
pop
stc
or
or
cmpsb
cwtl
fisubl
lret
xor
lods
or
or
mov
mov
lods
popa
in
or
inc
push
xor
mov
pop
cli
jle
xor
cli
les
mov
mov
xlat
sbb
cltd
push
sub
jns
push
jge
dec
int3
add
jb
das
imulb
push
movsb
in
mov
mov
add
sub
adc
xchg
std
iret
push
and
daa
dec
pop
rol
mov
je
pop
testl
cwtl
je
inc
inc
test
or
scas
insb
shll
aad
mov
mov
cmp
add
lcall
test
scas
add
sub
packssdw
out
sbb
or
xlat
out
cld
dec
cmp
ds
test
adc
cli
pushf
inc
inc
push
pusha
loopne
loope
daa
fimuls
enter
xchg
xchg
repnz
inc
ret
mov
add
lret
iret
popa
int3
sbb
aad
mov
xorl
test
enter
gs
es
cmpsl
dec
ss
sahf
mov
imul
loop
mov
jecxz
scas
mov
sbb
cmpsl
test
jae
dec
sbb
cmpsl
and
notb
enter
sbb
push
cs
js
jbe
adc
jne
call
imul
jg
and
in
addr16
mov
dec
adc
sbb
pop
cli
sbb
cmp
neg
mov
int3
addb
and
shlb
xor
or
cs
mov
in
cmp
sbb
arpl
add
sbb
pop
sahf
test
icebp
stos
rcrb
stos
loop
and
fwait
iret
mov
lods
push
nop
pop
loopne
call
or
add
push
mov
scas
ja
repnz
bound
hlt
ret
xchg
xchg
fnstsw
xchg
push
icebp
push
js
pop
add
sahf
into
imul
dec
dec
xor
pop
mov
add
push
aam
shlb
mov
adc
or
add
xchg
lods
enter
mov
push
and
mov
cmp
pop
push
sahf
rolb
bnd
and
xor
add
out
xor
int
push
cmpsb
iret
and
xchg
int
xchg
hlt
jnp
into
in
int
rolb
dec
sub
ret
mov
testl
pop
test
das
push
data16
scas
out
inc
lret
push
int3
mov
push
pusha
sbb
lea
mov
aas
cmp
sbb
add
lcall
push
and
lret
cmp
and
testb
dec
leave
nop
push
int
jne
inc
xchg
rcr
adc
comiss
out
mov
aaa
out
es
imul
je
enter
jl
stos
arpl
fistps
hlt
jl
mov
jle
stos
addr16
fidivrs
push
aam
cmpsb
fstps
add
out
movsl
fxch
hlt
in
int3
out
push
ret
jnp
or
iret
push
adc
and
or
in
and
mov
push
je
or
jne
movsl
call
and
push
stos
decb
dec
test
or
ds
clc
inc
push
or
fnstcw
jmp
aaa
fcom
jge
mov
cld
xchg
notl
mov
in
imul
push
fs
scas
outsl
cltd
cwtl
push
out
cmp
mov
jbe
das
out
ret
sbb
jp
push
xchg
or
push
out
shlb
jp
lds
jne
sarb
jne
dec
je
sbb
fsubr
imul
mov
adc
inc
adc
sub
bound
push
sub
inc
shll
adc
add
mov
mov
cmp
or
sub
dec
daa
pop
movsl
int
test
loope
xor
push
push
xor
mov
jns
repnz
pop
jle
cmc
cvtps2pd
mov
out
outsb
push
stos
dec
xchg
cmp
fisubs
jmp
outsb
loopne
sub
inc
ds
pop
and
push
rcl
inc
loopne
fidivs
sub
xchg
mov
xor
cwtl
mov
ds
jge
ljmp
xchg
decb
push
movsl
lods
mov
inc
fnstsw
dec
data16
jns
mov
aad
adc
fcmovne
cmp
es
int3
stc
sub
mov
dec
xor
ret
pop
lret
mov
ds
stos
aas
sub
aad
rolb
or
mov
repnz
xchg
cli
inc
xchg
std
mov
iret
das
outsb
add
jae
sbb
mov
push
xor
jae
mov
dec
pop
pop
mov
cmp
pop
xor
addr16
out
inc
sub
and
xor
les
stos
mov
jbe
push
mov
mov
popf
jecxz
js
adc
dec
mov
mov
xor
fsubrs
popa
test
ret
ja
mov
and
lods
iret
fdivrp
out
mov
and
pop
xlat
lods
aam
push
jecxz
mov
mov
leave
pop
dec
push
mov
adc
lcall
scas
xchg
in
inc
inc
push
inc
ret
insl
test
mov
mov
leave
fs
dec
or
or
test
daa
sbb
xor
pop
inc
and
icebp
cwtl
jmp
push
cli
inc
jmp
jb
scas
subl
push
daa
xor
test
mov
or
orl
icebp
and
decl
pop
fwait
push
and
xor
or
insl
cltd
adc
cmp
adc
out
cli
ror
jle
sub
mov
scas
mov
pop
xchg
sub
mov
xor
dec
cmp
pushf
cli
sub
jle
mov
mov
enter
xchg
push
inc
adc
insl
scas
rcrl
jp
sub
dec
cmp
xor
or
cmc
inc
test
inc
repz
adc
loope
stos
lods
mov
das
mov
cs
mov
sbb
jno
mov
and
xchg
std
call
jnp
or
repnz
out
mov
push
push
test
pop
aam
sub
dec
and
or
xchg
xchg
out
fimuls
push
pop
xor
pop
pop
push
mov
out
fildll
mov
cmp
mov
adc
movsl
lahf
xchg
outsl
arpl
dec
lea
popa
mov
mov
mov
popf
add
stos
and
cmpsb
xor
or
cs
cltd
lea
addr16
mov
enter
mov
lods
pop
loope
adc
adc
in
dec
lcall
jge
in
and
push
lret
dec
fcmovnbe
xchg
add
fstps
testb
add
sti
out
bound
lcall
or
cs
arpl
or
rcrb
cmp
or
pop
int
shrl
in
sar
sub
sbb
and
and
xor
adc
dec
imul
xchg
mov
outsb
pop
and
mov
xchg
cmc
fcoms
adc
repnz
hlt
xlat
jmp
adc
xor
inc
mov
das
xor
jle
ljmp
into
cmpsl
add
mov
and
pop
inc
push
sub
adc
xchg
jl
pop
cs
jb
andb
inc
push
lcall
inc
sub
scas
insb
movsb
out
js
cmpps
jg
cmpsl
shlb
mov
sbb
jmp
scas
leave
pop
jg
mov
int3
test
stos
notl
mov
jno
add
shr
ret
jo
ds
clc
adc
cmp
out
pop
lret
push
xor
jbe
movsb
pop
shrb
shrb
icebp
lods
jl
mov
pushf
jnp
xchg
scas
and
gs
inc
sbb
cltd
add
cltd
xchg
popa
mov
or
mov
data16
and
sbb
lahf
or
scas
sbb
loopne
xchg
js
jo
ret
cmp
shr
inc
fstpl
add
fadds
or
out
or
and
leave
sbb
jbe
in
movsl
jo
pop
popa
inc
subl
dec
push
sahf
mov
ljmp
mov
sub
mov
cli
cwtl
loopne
and
dec
into
jne
jns
cmpsl
adc
push
in
xor
cmp
loop
sbb
xchg
jo
cli
sub
js
enter
mov
and
ss
scas
xorl
sarb
fnsave
subl
cmp
mov
sbb
pop
test
mov
fwait
mov
or
or
cli
in
ret
jbe
ret
xchg
add
cmp
fcoml
leave
ja
pop
js
sbb
push
in
repz
sub
cmp
xchg
out
push
or
jecxz
outsb
rcrl
fbstp
jle
mov
mov
mov
mov
das
test
jmp
test
cltd
ds
mov
adc
imul
das
push
es
lea
dec
lds
mov
je
into
movl
out
les
xchg
cmpsb
bound
mov
sub
les
repz
or
xor
ret
xchg
sbb
or
pop
mov
ds
test
jb
data16
sbb
xchg
sub
push
mov
movsl
bound
push
cli
add
aas
and
loopne
jne
pop
jmp
popa
jne
lret
sahf
and
es
jg
sub
pop
or
inc
out
int3
int
and
sahf
ret
inc
dec
pushf
add
inc
inc
add
std
loope
sahf
addr16
sub
fwait
xchg
ss
ss
sti
inc
sub
and
les
dec
xlat
out
pop
push
and
outsl
imul
in
xor
push
dec
add
jge
and
pop
outsb
jno
imul
in
xor
jmp
push
mov
xchg
ror
or
outsb
push
mov
or
clc
add
rolb
in
inc
imul
outsb
fimuls
dec
outsb
sub
dec
js
in
mov
sub
mov
pop
cmp
dec
cmp
fists
lcall
adc
ret
cmc
sub
daa
pop
mov
cld
push
and
lea
push
mov
sti
vmovq
jge
leave
fwait
stos
sti
loop
js
push
ret
enter
popf
xor
lret
jno
ljmp
notl
sbb
imul
xchg
pusha
dec
sbb
dec
xchg
repz
subl
sub
jno
flds
into
push
mov
mov
mov
cmp
pusha
and
out
add
stos
sub
out
lods
pop
push
pushf
sbb
idiv
adc
je
sub
mov
jbe
xchg
daa
pop
mov
iret
nop
test
ljmp
add
frstor
cmp
mov
fbld
inc
jbe
es
adc
aam
loope
repz
mov
adc
mov
adc
xor
loop
and
shrl
push
cltd
scas
mov
pop
xor
ret
mov
jl
push
pop
pop
mov
in
icebp
jmp
and
iret
clc
inc
nop
push
cmp
jo
add
addb
leave
sbb
lds
xchg
fcomi
int
into
imul
aas
jo
addl
add
adc
push
ret
adc
mov
and
out
sbb
fdivrs
lea
rcrl
jl
pop
inc
pop
and
add
lcall
lret
add
or
push
nop
inc
cltd
into
mov
ds
aaa
jae
mov
jnp
and
xchg
mov
mov
add
xchg
movsb
lret
push
or
iret
and
inc
loop
cmp
test
add
xlat
xchg
mov
lock
mov
pop
icebp
into
lcall
jbe
shll
rcll
sub
sbbl
mov
orl
cmpsl
imulb
shlb
push
push
jecxz
mov
mov
and
sahf
mov
and
pop
lods
int
std
inc
into
dec
jp
test
jp
sbb
xor
out
jae
mov
xor
cmp
lret
mov
fcompl
push
test
test
fdiv
pop
and
in
mov
in
ss
stos
dec
out
aaa
imul
push
lock
test
imul
cmpsb
lahf
cmp
in
testb
push
and
js
cmp
sbb
mov
xor
mov
popa
cmp
stos
or
jno
fwait
add
shlb
xchg
clc
popf
jg
adcb
cmp
loop
sbbl
dec
add
and
scas
in
cmp
repz
lahf
mov
ljmp
ror
sub
push
mov
jae
mov
cmp
das
cmp
inc
jno
std
mov
imul
xsha256
cmpsb
push
fcmovnb
imul
ficoml
call
rcrl
dec
shrl
mov
mov
subl
test
mov
jbe
adc
outsb
daa
push
push
mov
int
lcall
loope
test
mov
push
dec
rcrb
das
in
clc
dec
push
adc
dec
cld
fadds
outsl
xor
jnp
rorl
xchg
jbe
sub
lahf
push
pop
lods
pop
xchg
add
or
out
mov
mov
lret
aaa
sbb
and
push
add
imul
xchg
call
mov
mov
ret
dec
js
outsb
nop
dec
mov
sbb
jmp
mov
mov
fisubs
and
out
arpl
sub
jp
mov
inc
lret
mov
fbstp
sbb
jl
xchg
pop
jbe
jo
repz
fmull
sahf
or
hlt
adc
add
int3
test
ret
dec
or
fiaddl
mov
xor
cmp
jmp
dec
cmp
adc
lods
test
push
lea
and
mov
call
js
xchg
push
aad
fwait
rcrb
insb
repz
outsb
cltd
out
push
xor
insb
int3
cmpsb
mov
stos
lock
mov
jl
mov
jmp
mov
mov
xchg
xchg
fstpt
scas
ss
adc
xlat
push
xor
inc
mov
aam
dec
mov
iret
data16
or
sub
push
shl
mov
in
fcoml
add
mov
imul
cli
loop
pop
pop
pop
dec
in
ret
push
push
repz
add
adc
fwait
push
fldt
xchg
pop
pop
cwtl
fsubrs
or
outsb
mov
mov
sarb
or
test
loopne
out
icebp
add
mov
rol
adc
sub
repz
add
pushf
mov
mov
arpl
sbb
andb
clc
movsb
jae
xchg
cltd
inc
sbb
rorl
xchg
cmp
mov
mov
movsl
add
loope
push
xchg
sbb
cmc
inc
sar
xchg
sar
pushf
and
or
test
or
jle
das
adc
iret
movsb
stc
dec
jbe
add
lods
pushf
mov
pop
dec
lret
adc
jp
outsb
bound
pop
rorb
adc
dec
in
or
sbb
jg
pusha
pushw
mov
jle
and
adc
stos
push
or
push
mov
das
call
mov
or
aaa
xchg
jbe
and
jns
pop
call
lds
int3
lods
push
cwtl
pop
scas
jnp
jmp
mov
xchg
mov
mov
fisubs
inc
cs
add
stos
cmpsl
cli
mov
inc
fs
int3
mov
icebp
loopne
test
js
pop
mov
std
ss
rol
rcl
dec
testb
fbstp
dec
in
mov
mov
ds
cmp
stos
or
mov
mov
sbbb
inc
cwtl
int3
fisttpl
jmp
or
es
mov
repnz
mov
sub
push
rorl
ret
cmp
push
andl
xchg
and
lock
int
mov
add
sub
pop
cltd
jb
sub
adc
lods
cmp
shrl
push
inc
insb
outsl
int
push
push
dec
pop
pop
in
mov
out
out
das
mov
rolb
inc
addr16
jmp
ret
decb
fisttpll
aas
insl
sub
in
lods
push
stos
jne
xor
sbb
loopne
pop
lret
push
xlat
dec
clc
fiadds
icebp
jecxz
pop
adc
dec
mov
xor
dec
sub
mov
pop
cmp
in
fwait
push
add
mov
subb
rcrl
bound
rclb
sbb
mov
fwait
mov
cmp
add
push
shlb
push
insb
or
das
xchg
pop
and
push
pmulhw
or
sub
dec
lea
inc
es
xchg
stos
bnd
push
pusha
cmc
gs
adc
loope
addr16
std
jecxz
inc
shl
push
cmc
jns
push
fildl
pop
push
lret
or
cmpsl
jecxz
fstl
div
data16
ret
jg
jl
inc
sar
lahf
leave
sbb
and
add
add
or
xor
iret
js
cmpsb
aad
pop
fcomps
jmp
sti
jne
cmpsb
add
lcall
les
fimuls
sbb
add
cltd
xchg
push
sub
ljmp
push
fisubl
hlt
mov
push
add
fsubs
xor
clc
xchg
adc
outsl
or
dec
cmc
rol
je
test
shll
mov
push
clc
out
inc
int
mov
pop
push
cmpsl
repnz
pop
and
jnp
jg
xor
stos
hlt
les
outsl
adc
jno,pt
jle,pt
adc
std
daa
push
mov
lea
pop
cs
jbe
cmpsb
ret
cltd
dec
ds
jno
enter
insb
and
repz
into
xchg
fmull
adc
lret
mov
insl
div
aam
sbbb
rcrl
adcl
hlt
cltd
pop
imull
in
jnp
inc
insb
inc
sub
pushl
cmp
adc
pop
hlt
outsb
xchg
xchg
cmpsb
pop
cwtl
loop
sub
fsubrl
fcoml
jne
pop
js
fwait
shlb
out
inc
jmp
shll
fsubrp
mov
bound
sub
aam
mov
mov
and
aaa
jg
and
mov
popf
mull
test
and
shrl
pushf
sub
dec
das
stc
push
call
test
push
pop
cmpb
lods
aaa
push
cld
cmc
adc
mov
xchg
xor
aas
shll
lcall
pop
stos
push
les
aas
das
and
cmp
mov
imul
aas
xchg
lret
add
mov
ret
jecxz
out
xchg
fsubs
adc
enter
rclb
lret
mov
cmp
push
aas
dec
add
mov
push
xor
mov
fisubs
popa
ret
outsl
cli
xchg
int3
pop
mov
icebp
xchg
pusha
or
test
out
cmp
xor
inc
push
pop
mov
dec
sbb
aad
or
xlat
push
and
sti
mov
clc
pop
lcall
pop
xchg
daa
sahf
ficoms
jg
xchg
lahf
sti
loopne
cmp
mov
scas
sbbb
adc
repz
inc
cmp
fildl
add
push
mov
mov
adc
mov
rcr
ret
mov
bound
xchg
outsb
push
xchg
ljmp
jno
cmp
leave
xor
push
pop
xor
mov
sub
orl
out
mov
and
mov
mov
pop
dec
or
dec
stos
sbb
outsl
xor
in
aad
cmp
loope
imul
mov
in
push
and
mov
cmp
jo
dec
sub
inc
outsb
fdivrs
ret
sub
in
or
insb
shrl
xchg
mov
orl
mov
out
imulb
mov
shrl
jle
mov
xor
pushf
dec
xchg
cltd
sbb
addr16
cmpsb
add
xchg
or
fs
into
fwait
jp
pop
les
cld
inc
pop
dec
xchg
push
cld
insb
xor
fstpt
aas
ljmp
lret
sarl
hlt
push
mov
popf
push
push
cmp
test
mov
xor
lret
movsb
aas
mov
xlat
mov
jns
je
xor
mov
inc
ficomps
mov
and
push
ljmp
pop
out
out
adc
insb
mov
cmp
lret
cmp
xchg
and
mov
sub
and
lods
jno
stc
je
push
les
jne
inc
ret
dec
cmpsl
push
testb
filds
nop
mov
xor
out
push
mov
mov
ret
xor
das
push
or
push
fists
in
mov
mov
or
call
int
xor
jg,pt
jecxz
cwtl
filds
dec
dec
cld
add
inc
fistpl
dec
scas
xor
popf
or
sbb
cmp
xor
pop
xchg
or
nop
ret
and
sub
mov
jle
or
ret
sbb
xchg
mov
push
add
pusha
cli
cmc
cmp
ror
push
pusha
xchg
dec
inc
and
scas
mov
mov
mov
test
pop
cs
cmpsl
jbe
jecxz
pop
lods
fcmove
mov
in
in
jb
jno
sub
push
shrl
int
mov
sbb
cmpsl
scas
mov
cltd
call
mov
xchg
jne
dec
nop
add
addr16
rol
xor
and
push
test
popa
in
int
jno
mov
cmpl
mov
add
fisttpll
stos
addr16
pop
mov
stos
bound
ret
cmp
pop
xchg
mov
push
lret
hlt
hlt
xchg
adc
das
jp
dec
mov
jle
xor
inc
mov
data16
out
xor
cwtl
or
popf
add
enter
dec
and
test
push
sub
test
cld
das
popf
jb
xor
lea
or
aad
and
repz
mov
out
lret
pusha
jns
cmp
or
mov
out
fs
orl
xlat
cmc
cld
out
inc
mov
xchg
or
in
stc
or
das
adc
or
mov
imul
imul
push
jl
push
mov
xchg
movsb
loopne
cmpsl
aad
or
lret
jle
jp
cmpl
inc
pop
mov
mov
leave
shrl
setge
inc
fs
das
mov
sub
jmp
pop
rclb
arpl
stos
inc
fwait
clc
mov
call
xchg
cmp
shlb
add
xchg
xchg
fisubrl
je
rcl
or
outsb
jl
test
jmp
dec
and
push
lds
lcall
mov
sti
stos
ret
fdivs
push
fdivrl
cwtl
aaa
dec
mov
jbe
lret
mov
test
xor
lock
inc
paddusw
bound
push
fs
ret
jns
jmp
lret
pop
mov
stos
mov
stc
or
pop
dec
xlat
cmpsb
mov
push
push
pop
lea
inc
mov
test
shr
iret
outsb
inc
cltd
addr16
repz
xchg
pushf
mov
dec
cmp
push
cwtl
inc
ret
and
xorb
sub
mov
inc
dec
test
mov
inc
cmp
sbb
cmp
insl
loopne
das
stc
ja
xchg
xor
dec
dec
out
ds
pop
push
fstl
int
std
add
dec
pop
sub
xchg
jnp
mov
cltd
stos
repz
cmc
or
sbb
pop
ss
and
enter
pop
imul
sti
pop
add
stc
pushf
sbb
mov
leave
outsl
cwtl
mov
sbb
sti
jp
cmc
mov
cmp
lret
ja
jns
dec
stos
rolb
insb
fmull
mov
cld
sub
xor
mov
jbe
and
cwtl
pop
or
enter
in
mov
clc
inc
pop
fbstp
insb
mov
les
call
insb
and
insb
fsts
mov
cmp
xchg
cmp
and
mov
leave
stos
or
mov
xor
add
jae
and
push
inc
stos
sub
mov
ficoms
test
pushf
rorl
movsb
push
mov
xor
xchg
add
je
sti
leave
jae
fxch
push
xchg
dec
dec
jmp
pop
fistpl
int
jno
jns
inc
pop
jg
in
cmp
jge
jne
cs
call
or
dec
arpl
cmpsb
roll
test
dec
inc
rolb
and
pop
sub
lds
rol
or
mov
jbe
mov
sbb
out
inc
jge
into
dec
in
xchg
and
mov
jmp
cmp
test
inc
jmp
inc
fcmove
imul
cmp
cmpsb
xchg
insb
fisttpl
cmp
sub
loopne
pop
jg
fwait
ss
into
fsubrl
insb
in
int3
sub
lret
jnp
push
dec
out
out
cmc
imul
xchg
or
mov
sub
daa
add
test
sahf
in
sub
xchg
pushf
fiaddl
fildl
fldenv
cmpb
popa
inc
jge
ret
mov
rcrb
mov
lret
loop
clc
in
push
inc
mull
lret
push
cltd
daa
mov
push
add
scas
sub
stos
and
icebp
inc
dec
jge
push
mov
xchg
dec
test
leave
mov
or
jno
and
stos
aaa
repz
movsb
jne
adc
inc
ret
inc
addl
leave
pop
mov
xchg
pushf
mov
fwait
fwait
inc
add
pop
mov
clc
fwait
addb
pop
dec
aaa
hlt
add
add
out
sub
mov
adc
sub
pop
out
std
ficoml
mov
dec
sub
divl
ret
cltd
push
repnz
push
pop
dec
daa
jge
fmull
aad
leave
jge
into
push
popf
xchg
repz
mov
fisubrs
adcb
test
or
adc
inc
lods
imul
pop
mov
lret
ret
fdivl
mov
xlat
test
sbb
lock
cmc
push
stos
stc
xor
sti
dec
mov
shll
data16
jle
and
ds
xor
mov
jge
aad
mov
adc
lahf
jbe
lret
add
test
testl
arpl
mov
pcmpgtb
and
shll
cld
nop
add
push
pop
xchg
adc
mov
sub
mov
imul
out
lds
rcl
outsl
imul
mov
das
inc
pop
mov
insb
sahf
jge
test
jl
add
push
imul
stos
fstpl
jno
jecxz
cs
mov
jp
sahf
jp
cmp
pushf
and
ret
sbb
aas
inc
imul
mov
cmp
cmp
scas
roll
adc
scas
rorb
iret
xor
inc
in
movsb
mov
bound
outsl
sbb
int3
mov
inc
ljmp
pusha
push
dec
ror
sub
jnp
sbb
scas
pop
inc
lcall
mov
inc
repnz
mov
fimuls
sar
push
ffreep
in
jnp
jmp
movsb
negl
test
ljmp
inc
cmc
or
xor
pusha
fsubrs
mov
pop
outsb
add
or
mov
arpl
insl
mov
mov
sbb
sti
sbb
int
out
jno
dec
xchg
add
loope
push
push
clc
sub
sti
or
dec
mov
dec
mov
lahf
xchg
scas
push
dec
popa
sbb
aaa
fwait
xchg
sbb
add
jns
pop
xchg
bound
jmp
sti
fidivl
nop
mul
pop
sbb
fwait
pop
sub
int3
dec
jmp
add
add
add
push
sar
scas
je
xor
pop
push
fidivrs
push
or
movl
daa
fsubl
fs
clc
jmp
cli
adcb
xchg
sbbl
ror
adc
mov
orl
or
xchg
add
or
push
pop
add
cmp
mov
pushf
mov
push
xchg
in
add
aam
sbb
push
loop
popf
lret
ret
call
outsl
adc
test
fs
cmp
pushf
lret
addr16
daa
bound
xor
daa
es
jmp
lods
aam
push
es
or
inc
aam
js
lcall
jmp
and
ja
jo
push
mov
mov
push
out
popa
pop
xor
arpl
pop
xor
push
mov
xor
dec
call
jnp
in
mov
ja
fs
js
adc
std
repnz
mov
out
push
mov
mov
mov
pop
fwait
push
repz
rcrb
mov
xchg
cwtl
mov
shrb
stos
push
push
pop
daa
iret
outsl
sub
dec
or
ds
lea
out
cmp
lret
cli
xchg
outsb
mov
int
roll
mov
mov
add
fstl
xor
dec
sub
inc
pop
cmp
int
js
add
push
inc
cwtl
std
incl
jne
lret
pop
fwait
xchg
add
lods
add
push
cmp
add
pop
daa
dec
movsl
jmp
or
aaa
inc
mov
sbb
inc
xchg
ljmp
dec
or
mov
fwait
and
aad
imul
mov
jecxz
or
dec
pushf
sbb
sbb
jp
out
test
sbb
fdivrl
fsub
inc
mov
lock
popa
mov
pusha
and
xor
out
mov
outsb
icebp
mov
push
push
mov
and
push
outsb
mov
adc
and
int
sbb
sahf
cmc
mov
mov
outsl
into
jle
into
pop
jns
rcr
xor
sub
add
popa
mov
dec
add
xchg
xlat
or
push
mov
mov
add
jecxz
imul
pop
jae
add
sub
xchg
lahf
lock
stos
or
sub
cli
xlat
mov
cli
out
imul
lods
cmp
ljmp
inc
mov
mov
xchg
pushf
fiadds
rcrl
sbb
xor
push
hlt
xchg
inc
sbb
cmp
popa
mov
repz
pop
pop
dec
push
or
subb
and
int
mov
xchg
sbb
mov
adc
dec
mov
mov
aaa
sbb
jmp
roll
jmp
jle
ss
aas
test
repnz
arpl
pop
and
push
cmc
sub
xor
in
sahf
mov
jl
push
dec
out
push
jl
mov
pop
add
adc
mov
lds
mov
cwtl
cmp
mov
fildl
sub
call
mov
call
lret
loopne
stos
and
sarb
push
pop
jle
push
xchg
dec
add
adc
jb
ja
xor
mov
imul
mov
lods
jmp
inc
sbb
push
cwtl
arpl
lret
mov
xchg
pushf
lea
scas
popa
icebp
cmp
pop
lds
roll
add
outsb
push
mov
mov
in
pop
callw
repnz
jns
adc
pop
nop
fidivrs
mov
cmp
sbb
loopne
jo
mov
test
outsb
mov
mov
adcb
add
jb
lcall
shrl
push
dec
cmp
xlat
lahf
ret
cmpsb
shl
or
mov
mov
adc
adc
scas
sbb
push
stos
pop
xor
xor
dec
mov
mov
lea
bt
push
aad
jae
lock
lds
xadd
xchg
test
fisubrl
lock
test
daa
fidivl
jle
movsl
popf
out
sub
sbb
repnz
test
push
cmpb
mov
xor
jno
and
shrl
lock
cld
xchg
repnz
sbb
popf
rcl
mov
xor
xorl
pop
sub
mov
inc
addb
rorl
inc
xchg
hlt
fdivrl
lret
pop
mov
cmp
xchg
cltd
and
mov
and
sarl
sub
lods
adc
push
or
and
jmp
das
test
cmp
mov
push
cmp
adc
inc
outsb
iret
outsb
ret
mov
mov
or
jb
in
push
out
rclb
cwtl
and
std
cmp
ds
jmp
pop
imul
js
cmp
lea
inc
inc
lock
xor
inc
div
jg
call
push
inc
cmp
lods
push
sbb
sub
xor
xchg
shll
pusha
push
fisttps
inc
jl
adc
cmp
scas
ja
mov
out
mov
inc
push
jb
sub
cmpsl
mov
in
cld
test
iret
fbstp
inc
lock
test
add
xchg
inc
loop
cmp
test
push
mov
pop
add
jns
cmpl
adc
icebp
mov
js
inc
inc
outsb
xor
jne
mov
pushf
xchg
cwtl
mov
jmp
or
jge
xor
sub
sub
in
mov
cmc
sbb
mov
sub
fcmovnbe
dec
jge
mov
popa
or
add
in
je
test
aas
fnstcw
pop
lahf
std
sahf
add
sbbl
unpcklps
cmp
inc
fnclex
inc
cmc
xchg
ja
mov
pop
ss
inc
dec
movsl
dec
mov
xor
pop
add
jbe
mov
xchg
mov
xor
xchg
cwtl
push
stos
dec
fidivrl
sahf
cld
mov
lret
fwait
sbb
jo
mov
inc
popf
lret
jno
jp
xor
push
sbb
sbb
jns
mov
push
enter
mov
push
les
or
cmpsl
xor
mov
or
mov
ljmp
xor
jno
jae
dec
out
inc
ds
std
add
pop
xchg
inc
leave
add
stc
xchg
adc
cltd
out
mov
out
es
mov
rcll
inc
inc
stos
xchg
mov
pushf
fnsave
mov
xchg
and
xor
pop
fidivs
pop
push
jns
pop
push
push
and
xor
add
ds
jecxz
mov
jecxz
in
dec
xor
or
enter
iret
pop
in
xor
int
ret
fwait
jae
mov
cs
stos
aas
int
cmpsl
rorl
xchg
data16
dec
orb
in
push
testb
add
test
loop
or
and
or
test
cmp
sub
sub
sbb
sub
mov
inc
ljmp
lret
mov
cmpb
stc
xor
mov
orl
jp
enter
fcoms
mov
dec
pop
orl
test
xchg
aaa
sarb
insl
ljmp
ss
push
jecxz
mov
mov
leave
outsb
jl
add
testb
sub
jno
xchg
and
in
addr16
leave
sub
mov
shlb
pop
cwtl
lods
dec
push
out
and
ja
sbb
dec
and
mov
mov
int3
xchg
std
push
lock
fiaddl
int
xchg
mov
add
cwtl
and
popf
cmp
jnp
ljmp
je
jb
or
cmpsb
and
cmp
mov
cmp
and
aam
cmp
ja
push
jo
xchg
cmp
add
call
out
cmp
add
cmp
test
dec
iret
jnp
pusha
sub
jo
sub
enter
dec
or
orb
xor
cs
test
cmp
push
cmp
add
mov
mov
idiv
mov
cli
hlt
xchg
or
scas
dec
aam
ds
adc
repz
bound
mov
sub
pminsw
push
aad
fistl
adc
push
fstp
adc
sbb
sahf
adc
ja
fdivl
pop
sub
scas
mov
xchg
aaa
sbb
jmp
adc
cli
adc
cmp
stos
pop
pop
outsl
pop
xor
js
aam
loope
add
jle
testl
sub
jge
sub
dec
sahf
out
arpl
mov
dec
mov
cmp
or
xor
push
scas
push
dec
mov
or
add
lcall
sbb
push
rcrb
jge
cmc
aaa
fmul
int
cmpsl
aam
and
and
ret
dec
aam
xor
mov
std
subb
bound
xchg
lahf
xchg
mov
in
inc
jmp
idiv
imul
in
imul
jbe
out
sbb
adcl
insl
xor
cmc
mov
insb
inc
inc
popf
cmp
cli
inc
fldl
incb
insb
jp
repz
popa
cmp
sti
aad
xchg
lock
fcomp
push
xchg
popa
jl
or
lods
call
sti
lret
push
sub
in
sub
std
rcl
and
jl
xor
pop
hlt
out
or
cmp
mov
xor
push
push
js
mov
jnp
je
xchg
cltd
mov
sbb
xchg
jmp
dec
pop
aad
or
xor
shlb
das
cmp
lods
jle
bound
adc
sub
dec
cmp
outsl
and
mov
push
mov
in
sbb
sub
out
std
fnsetpm(287
and
pop
imul
dec
or
or
dec
imul
ja
and
inc
popl
in
xor
mov
in
dec
sbb
scas
mov
xchg
or
repnz
cmp
pop
xchg
int
jbe
lods
or
scas
ret
cmpsb
outsl
adc
inc
mov
int
ljmp
daa
jp
jle
test
lcall
push
inc
xchg
sub
sahf
push
mov
aam
sub
outsb
and
lds
mov
mov
outsb
icebp
xorb
xor
mov
push
scas
add
mov
or
push
cmp
sub
int
cmp
test
ret
push
in
xchg
mov
rclb
add
sarb
ret
or
jl
movsl
stc
push
repnz
pop
push
add
cmp
or
push
cli
pop
sbb
add
stc
aaa
divl
clc
shll
xchg
cmp
sbb
dec
fstps
lret
or
and
hlt
and
sahf
repz
lret
push
adc
jb
sahf
xor
popf
pop
and
dec
ret
mov
mov
aas
fnsave
ja
adc
aad
in
data16
and
out
add
dec
and
sbbl
imul
in
mov
daa
sbb
aaa
shlb
dec
popaw
push
andps
push
xlat
pushf
and
sbb
xorl
xor
jle
push
daa
sbb
cmp
push
sbb
fucomp
cld
cld
xor
cld
or
rolb
je
rol
imul
iret
fwait
int
jle
aaa
and
inc
movsl
fidivs
mov
lret
jge
sub
xor
addr16
push
iret
shr
and
ja
fsubs
ljmp
cmp
lds
es
dec
or
sub
fscale
fcmovbe
je
jae
ret
ret
movsb
inc
inc
push
out
cmp
imul
or
stc
subl
cmp
or
ficoml
scas
inc
jno
pop
or
jbe
fsubrl
dec
sbb
push
pop
xchg
inc
inc
mov
iret
mov
pop
mov
repz
mov
dec
cmpsl
cltd
mov
cmpsb
pop
hlt
insl
imul
adc
ds
mov
dec
gs
in
movsl
out
jo
out
pop
or
adcl
into
movsl
loopne
xchg
test
sbb
xchg
jno
div
ljmp
xchg
rcl
je
jg
and
xchg
cs
repnz
sub
xchg
popa
bound
aam
adc
push
dec
aaa
xlat
mov
aas
mov
jl
leave
cmp
add
lds
lcall
mov
clc
pop
clc
ja
clc
inc
add
dec
push
lock
dec
orb
mov
mov
pushf
xor
inc
in
pusha
xor
mov
rcrb
jne
iret
leave
adc
adc
mov
mov
aas
cmp
pop
xor
and
xlat
fwait
mov
sbb
std
js
rcl
push
cmp
sbb
xchg
test
jo
push
push
jae
mov
sbb
fmul
add
popa
testb
cwtl
cmpsl
cmc
mov
mov
cmp
lret
push
outsb
cmpl
lock
sub
iret
lds
mov
jp
stc
or
out
xchg
scas
int
xchg
cmp
inc
add
jge
imul
and
dec
out
push
in
pop
pop
addb
cmp
shlb
or
push
cli
out
adc
cwtl
insb
jns
aaa
stc
xor
lret
mov
sub
xchg
xchg
dec
push
js
loopne
push
add
push
lret
test
lahf
into
jnp
subb
jo
lods
fbstp
xchg
dec
iret
out
mov
sub
adc
and
mov
dec
push
into
push
push
pop
cmp
cmp
movsl
icebp
mov
sbb
jp
pandn
mov
push
gs
int
mov
or
fildll
out
loope
aas
or
cmc
push
jmp
arpl
aam
dec
int3
sub
shl
dec
subb
xlat
mov
out
adc
mov
sahf
jo
mov
in
and
jae
cs
sbb
sub
notl
pop
ljmp
loope
xor
jge
or
sahf
add
mov
mov
mov
imul
rclb
sub
test
mov
xchg
xor
scas
mov
dec
clc
and
jnp
sub
sub
adc
xchg
fsts
sti
mov
xchg
imul
and
xchg
push
pushl
pop
in
cmpsb
cmp
mov
dec
rorb
xchg
leave
xor
jg
xchg
pushf
inc
jbe
xorl
sub
push
fdivrs
gs
mov
cwtl
out
cmpsb
aam
sti
out
mov
mov
js
bound
lods
das
pushf
repz
mov
jb
and
sbb
imul
mov
sub
mov
aas
pop
add
dec
ljmp
data16
or
dec
xor
loop
aad
jne
pop
pop
jns
out
pop
lods
mov
arpl
clc
int3
jmp
sbb
push
test
push
cltd
mov
lods
mov
push
int3
sbb
pusha
fwait
orl
das
fwait
xorb
mov
repnz
xchg
lods
ss
int
out
in
add
cmp
adc
or
ret
shrb
mov
je
push
push
fildll
push
inc
jbe
fadds
mov
sub
vpcomuw
stos
mov
dec
mov
imul
jo
or
fsubrs
push
clc
push
sub
hlt
in
insb
sbb
mov
adc
nop
out
sub
dec
pusha
mov
sbb
inc
mov
lea
push
or
pop
adc
testb
xchg
imulb
stos
loop
bound
jnp
adc
test
js
mov
jns,pt
ja
lahf
lahf
movsb
mov
xor
jnp
add
mov
sub
icebp
push
clc
lea
inc
pop
fdivr
fwait
das
add
ja
xlat
cwtl
adc
hlt
lcall
mov
cmpsb
sbb
mov
mov
sub
pop
cmp
mov
lea
loop
ret
mov
cltd
mov
idivb
jg
sbb
adc
pop
cmp
or
out
xchg
xlat
ljmp
test
iret
insb
outsb
scas
les
test
or
outsb
adc
cmp
pop
in
sub
imul
mov
or
ret
fs
popa
movsb
leave
fcmovbe
int3
stos
or
out
and
pop
int3
jp
xor
xor
rorb
sub
jo
cmp
mov
jp
sbb
xchg
xchg
xor
adc
mov
dec
xor
dec
in
push
jns
popa
aam
sub
out
shlb
fcmovu
daa
insl
shl
ja
aad
shrb
in
into
cli
aad
pop
cwtl
test
xchg
add
iret
movsb
push
push
outsb
xchg
iret
inc
imul
movsl
mov
mov
aaa
int
out
imul
mov
xor
aaa
jnp
cwtl
fs
or
jmp
int3
fisttpl
sub
aam
cmp
and
jmp
sbb
jae
jo
mov
xchg
je
movsb
or
or
lods
aas
push
movsb
fldcw
sbb
movsb
clc
push
pop
shrb
jl
ret
test
test
insb
pop
sbb
aam
jp
pop
mov
lret
mov
add
push
and
and
imul
scas
xor
sbb
xchg
jae
movsl
push
insb
popl
pusha
and
subb
movsb
fisubl
or
sbb
or
int
adc
fiaddl
addb
icebp
es
cli
push
and
sbb
jecxz
jae
jp
jp
mov
iret
xchg
fdivr
jp
gs
cmc
mov
hlt
repz
jmp
out
pop
imul
imul
xchg
xchg
fwait
stos
xchg
jno
rcrl
test
mov
movsb
lahf
mov
addr16
ss
pop
in
mov
xbegin
ljmp
add
lret
mov
out
outsb
xchg
jp
sbbl
test
xchg
cmpsb
mov
insb
adc
aam
ljmp
sub
test
das
out
mov
es
jnp
xchg
negb
ds
movsb
xor
xlat
xchg
mov
pop
inc
jo
orl
add
cmpsb
loopne
ja
xchg
lock
adc
sbb
aaa
add
mov
cmp
push
clc
cmp
mov
addr16
rcll
outsb
sti
jne
or
inc
sub
or
add
xchg
mov
inc
dec
test
roll
in
xor
or
repnz
jp
icebp
and
push
push
in
test
jns
popa
shrl
or
jge
cmp
inc
push
imul
or
cmp
xor
std
aas
xchg
and
pop
xchg
mov
cmp
pushf
dec
ds
mov
insb
fbstp
adc
jae
jae
fwait
aas
jno
aaa
adc
add
push
sbb
push
outsb
aaa
adc
mov
hlt
add
xor
adc
sahf
fdivrs
shlb
inc
pop
or
out
xor
push
or
andb
push
ficoml
lods
aad
add
push
adc
sub
lcall
aas
cmp
pushf
mov
jb
ret
mov
insb
sarl
out
hlt
scas
jmp
repnz
in
add
add
push
jae
scas
jp
pop
mov
mov
mov
adc
iret
das
ret
mov
movsb
test
sub
push
cmp
push
outsl
loope
mov
sti
cmp
fwait
sbb
ret
lods
icebp
pop
push
dec
pop
push
fwait
xchg
xchg
mov
test
xlat
inc
lock
adc
push
dec
mov
xor
sbbb
pushf
aas
xchg
mov
or
ja,pt
and
jl
inc
mov
mov
xchg
lods
fwait
cs
pop
jle
outsl
lahf
cmp
lock
lcall
jecxz
out
mov
mov
sarb
leave
jle
lods
dec
pop
cmp
add
shlb
inc
dec
pop
jp
out
pop
sbbb
das
inc
mov
mov
adc
in
or
ljmp
lds
mov
leave
aad
popa
rolb
sbb
test
xchg
jno
inc
fistps
and
mov
xor
les
xchg
popf
test
xor
adc
nop
dec
inc
or
mov
or
aaa
out
mov
pop
js
test
sbb
pop
and
pop
cmp
or
iret
pop
push
push
and
lahf
jno
fdivrl
jp
addr16
imul
dec
jl
ds
lret
pop
push
jl
xlat
movsb
and
out
adcb
stos
jnp
dec
jge
in
pop
test
push
adcb
in
out
out
cmc
push
test
xor
xchg
divb
cli
add
push
movb
shrl
rcrb
pop
movsb
push
or
les
adcl
dec
out
xor
pop
jecxz
inc
mov
push
in
stos
jae
mov
sub
nop
dec
jnp
or
addr16
adc
mov
sbb
sbb
mov
push
push
sbb
in
add
mov
pusha
mull
cmp
nop
in
cmp
sub
jmp
sbb
movsl
mov
xor
testl
push
out
xchg
repnz
dec
mov
leave
cmp
in
movsl
adcb
fldt
addl
clc
addl
pop
pop
jbe
inc
pop
xchg
js
test
push
movsl
sti
cmp
push
jnp
and
fwait
xor
into
ss
gs
rcrl
fmuls
in
jo
lods
push
mov
inc
mov
outsb
vpmacssdql
adc
clc
xchg
mov
int3
pop
dec
fs
mov
je
jae
fimull
test
push
in
push
push
xchg
pusha
ret
movsl
les
or
enter
pop
mov
ret
adc
cli
insb
sahf
push
enter
test
mov
mull
and
mov
ja
testl
mov
xor
lret
enter
lahf
mov
out
xor
scas
xor
push
mov
sbb
mov
inc
das
cs
xchg
aas
adc
scas
stos
add
mov
cmp
or
mov
fiadds
in
add
scas
imul
and
push
xchg
leave
mov
inc
mov
ja
jo
mov
dec
add
pop
pop
pop
std
xchg
scas
pop
and
lods
cli
add
xchg
adc
jno
rcl
insb
popf
popf
sbb
shlb
mov
jnp
add
xor
adc
imul
pop
pop
push
dec
addr16
adc
int3
in
insl
adc
or
sub
or
les
xor
orl
pop
jbe
pop
dec
out
pop
mov
push
adc
xor
push
iret
loop
or
in
jmp
mov
push
in
push
inc
gs
test
mov
out
mov
mov
int3
test
jns
cmpsl
add
cmp
movsb
mov
push
call
push
pop
movsl
in
call
enter
cmc
and
sbb
push
mov
jmp
pop
pop
shl
test
ret
into
inc
mov
or
aaa
sti
sub
xlat
int
adc
or
fnstcw
sti
sahf
adc
xchg
cmpsl
rol
mov
imul
sbb
xor
jae
fstl
cmpsl
or
fisubrs
aaa
jns
pop
aam
inc
dec
xor
insl
fmull
cmp
xchg
in
adc
sub
push
cld
sbb
mov
stc
pop
mov
push
lock
xor
test
inc
inc
aaa
je
pop
push
dec
or
mov
jle
stos
aaa
sub
dec
jbe
xchg
sub
cs
mov
xor
lcall
jnp
sub
das
xor
xchg
cmpl
sub
aas
lret
inc
mov
mov
jae
ret
or
inc
shrl
ficompl
xor
push
loop
mov
xor
xor
cltd
mov
bound
in
xchg
ja
pushf
cmp
mov
ja
out
ss
mov
dec
pop
cltd
ja
test
fwait
shl
sti
mov
push
popf
lret
pusha
ds
push
sbb
jae
cmc
je
pushf
pop
xchg
xchg
fiaddl
xor
inc
jecxz
mov
aas
aas
add
add
or
pop
popf
fisubrl
xchg
sub
pop
sub
sbb
sub
pop
dec
pop
sub
push
and
into
lds
adc
adc
nop
add
xchg
fists
pushf
mov
inc
adc
lret
xchg
sbb
xchg
xor
sbb
mov
or
leave
or
imul
repz
cld
pop
adc
mov
push
sbb
mov
inc
jg
fdivs
fsubl
test
out
negl
mov
jg
aad
mov
test
adc
mov
inc
inc
lcall
mov
gs
sub
jns
push
inc
push
sub
xor
frstor
cmp
not
inc
int3
sub
jbe
xor
leave
xchg
jge
pop
add
and
js
and
mov
cmc
jae
les
popl
jmp
xchg
jle
hlt
insb
popa
xchg
loope
jo
adc
pop
andb
jns
sbb
repz
cmp
cmpsl
xchg
insb
dec
jb
inc
clc
andb
divl
xor
popa
gs
push
fcmove
cmc
push
jge
adc
mov
sub
or
sub
cmpb
ss
test
cwtl
movsl
outsb
pop
and
int
jmp
mov
loope
bound
fwait
addb
xchg
sbb
shll
cwtl
xchg
out
pop
jecxz
jno
cltd
loope
xchg
cmpb
dec
mov
in
inc
ret
or
add
adc
sti
in
sbb
push
fs
or
stos
cwtl
dec
cmp
mov
push
xchg
leave
cs
pop
cld
in
xlat
xchg
mov
pushl
jbe
scas
inc
loopne
cmc
test
mov
popf
add
ret
daa
mov
pop
dec
fildl
sub
push
and
adc
out
sbb
mov
dec
push
stc
xor
push
adcb
mov
xor
jno
push
in
xorl
enter
dec
xchg
or
or
aad
sti
in
sub
sub
fsubs
push
movsb
mov
rcr
lcall
and
jl
add
mov
mov
pusha
outsb
jns
sub
pop
mov
add
pop
inc
rcrb
leave
sbb
sbb
inc
fidivs
sbb
mov
push
bound
test
jl
aam
push
lcall
js
lods
lods
pusha
mov
cvttps2pi
lret
adc
inc
push
sbb
push
pusha
adc
pop
pop
sbb
fldlg2
subb
popa
shlb
inc
bound
shr
xchg
mov
mov
and
imul
lods
add
sub
into
bound
repz
enter
int
daa
imul
iret
out
ja
jno
test
aaa
test
or
out
inc
cltd
lret
jae
fldenv
mov
mov
call
repnz
xor
mov
xchg
and
adc
out
add
rep
sahf
jnp
sbb
data16
icebp
mov
pop
mov
and
movsb
inc
sub
ja
pop
arpl
inc
int
stos
lret
and
mov
enter
sub
and
mov
popa
sub
aaa
jg
inc
push
jmp
ds
lea
daa
adc
test
daa
mov
xchg
jmp
shl
inc
cmpsb
insl
into
lret
push
jp
mov
test
mov
cmpsb
test
jae
fstp
enter
push
and
fadd
aam
mov
incb
or
insb
or
nop
je
push
cli
je
cwtl
mov
add
lret
push
add
mov
xlat
das
sub
sbb
imul
scas
cmp
jb
hlt
popf
cmpsb
jnp
lock
add
les
push
sbb
pop
test
lret
xor
push
mov
xchg
imul
sub
xor
sbb
imul
and
and
cli
xor
sub
mov
lret
adc
push
sbb
jne
xor
ret
push
inc
push
ficompl
arpl
push
dec
fucomi
xchg
out
stos
mov
stos
sub
js
mov
test
cmp
test
repz
sbb
jno
iret
pop
shrb
stos
mov
pop
lret
in
xchg
lods
jecxz
xchg
scas
pop
jb
jmp
test
cmp
in
mov
mov
push
sbb
fldcw
test
adc
mov
faddl
mov
lcall
stos
pop
cmp
daa
add
dec
out
push
shlb
lret
and
jb
jne
push
es
mov
add
dec
outsb
es
shrl
jb
cmp
sub
push
imul
push
mov
pop
dec
jbe
cmp
fstl
push
xchg
data16
fldcw
sbb
sub
stos
jge
data16
cmp
sbb
cmp
xor
cli
fistpl
pop
pop
inc
lahf
repz
pop
dec
out
push
jg
mov
jbe
scas
lcall
lea
pop
cmp
and
mov
add
lret
ss
mov
into
sbb
std
jo
icebp
cmc
pusha
adc
insb
or
outsb
pop
test
jno
or
repnz
lahf
and
loopne
es
imul
sarb
shll
pop
cmp
sbb
popa
jmp
ljmp
push
out
sub
mov
icebp
jbe
popl
adc
out
add
je
cmp
mov
push
outsb
lock
mov
std
cmc
out
jmp
mov
push
xor
int3
mov
insl
lods
sub
dec
cmc
sbb
std
cmc
xchg
sbb
insb
pop
mov
ljmp
mov
repz
add
cs
andb
mov
mov
xchg
xor
das
mov
push
pusha
sub
cmpl
daa
mov
push
sub
bnd
fimull
or
out
fwait
and
mov
lcall
mov
jno
fwait
inc
call
call
std
lock
fs
push
rcrl
xlat
xchg
lds
sbb
pop
dec
repz
arpl
out
push
shl
mov
cmp
cmp
xchg
daa
jle
xlat
sahf
repnz
lock
out
jp
movsb
xor
push
jle
hlt
add
cmp
cmp
stos
ds
dec
or
mov
scas
roll
sbb
imul
adc
aas
cmp
mov
jo
ja
sub
lret
lahf
test
ljmp
dec
sbb
fwait
imul
push
cli
in
bound
sahf
in
rorb
data16
lret
fildl
leave
mov
pop
mov
out
pop
cs
and
xor
nop
out
adc
and
add
stc
movsl
cmpsl
cmp
xchg
fwait
sub
jbe
pop
les
or
cmc
shll
pop
xchg
test
mov
insl
jl
jp
aam
pop
hlt
jo
jg
nop
sbb
popa
and
push
or
ret
in
pop
ds
add
clc
aas
fbld
sahf
sub
mov
cli
imul
pop
xor
stc
jecxz
int
push
inc
add
ljmp
and
test
int3
and
push
mov
gs
mov
jbe
call
jae
adc
pop
add
jo
dec
xchg
cmpl
and
aam
daa
add
repz
out
cmpsb
mov
fdivrs
push
clc
repz
xlat
insb
roll
mov
out
test
jno
lcall
imul
out
int
addr16
icebp
stos
enter
mov
aaa
test
ds
std
shr
and
gs
leave
aas
adc
mov
or
pop
cmc
xchg
fsubs
fadd
cld
push
into
out
popf
cwtl
cmp
js
lea
mov
mov
sub
dec
push
lds
dec
dec
jb
lods
roll
push
rcrl
arpl
mov
and
stos
pcmpgtw
addr16
cmpsb
ret
fdiv
adc
imul
scas
adc
xor
or
aas
jnp
test
push
adc
xor
xor
and
aad
xlat
xchg
in
jg
outsl
dec
pop
cmp
sub
jg
mov
mov
call
push
mov
or
mov
or
imul
test
mov
repz
adc
bswap
xcrypt-cbc
cmpsl
push
mov
dec
cmp
icebp
dec
outsl
dec
dec
pop
int3
int3
add
jne
ret
push
data16
imul
sub
sbb
sub
lods
out
sub
jle
jge
mov
xor
xchg
xchg
out
xchg
or
fs
pop
jle
cltd
into
pop
add
mov
pop
movb
mov
sub
xchg
or
inc
pop
data16
dec
cmp
negl
inc
test
sub
repz
pop
cmpw
stos
ss
sub
sbb
adc
adc
lret
les
xor
inc
sub
into
jg
stos
xchg
add
xor
mov
mov
push
lcall
jle
inc
mov
pop
inc
push
repz
mov
mov
or
and
sbb
clc
mov
mov
out
lcall
xor
outsb
sbb
push
sti
push
outsl
js
scas
test
cmpsb
jge
enter
pop
lds
pusha
push
inc
mov
fildll
dec
push
rcrb
push
mov
or
pop
rolb
imul
xchg
pop
inc
ficoml
dec
icebp
loop
ljmp
pand
std
negb
push
ret
je
loope
insb
in
mov
fsub
sbb
nop
loope
jo
or
jmp
push
pop
push
inc
cmc
dec
test
cmp
cld
and
xchg
fldcw
mov
inc
xchg
xchg
cltd
add
fiadds
dec
pop
add
jb
inc
out
cld
cmp
sbb
push
add
out
adc
scas
mov
fcomi
ss
inc
xchg
popf
outsl
scas
push
divb
enter
pop
imul
and
lret
xor
push
cmp
hlt
cmp
add
push
inc
lahf
xor
add
jbe
xchg
dec
add
jb
mov
mov
pop
and
aas
jg
insb
ds
stc
test
lahf
pop
sub
or
fadds
jge
in
pop
je
xor
leave
add
cwtl
fnstsw
mov
shrl
xor
setno
pop
loopne
sub
cmp
test
stos
aam
sarl
outsl
inc
mov
pop
cli
push
fstpl
popf
test
cmc
out
rclb
add
shll
jp
jecxz
test
push
shl
sub
ds
clc
lret
add
cld
xor
icebp
mov
dec
loopne
pop
jge
scas
insb
or
and
sub
jb
ss
test
xor
fwait
or
mov
xchg
out
stc
jle
and
ret
xchg
fstps
fdivp
lock
imul
dec
fnclex
cli
add
scas
sbb
xchg
test
push
jecxz
icebp
js
push
ss
dec
adc
fsubrp
iret
stos
into
xchg
shrl
push
adc
mov
lods
pop
jbe
arpl
push
push
sbb
lahf
sti
jle
movsb
xor
mov
lods
jp,pn
andb
fmuls
aam
ja
popa
iret
mov
xor
imul
cltd
adc
dec
cli
sbb
cmp
pop
lahf
mov
jo
mov
mov
mov
test
popa
jp
lret
or
pushf
and
in
cli
mov
lods
pop
fdivl
pop
std
dec
in
mov
ret
icebp
loopne
rorb
nop
movsl
inc
add
pop
loop
sub
mov
inc
std
and
cld
in
cs
inc
addb
cld
pushl
arpl
in
pop
inc
xor
sahf
in
out
sti
cmp
push
movb
xchg
cmp
sbb
and
in
or
scas
sub
xchg
mov
cmp
xchg
or
out
in
add
jmp
shlb
or
cli
fisttpl
adc
idivl
xor
inc
mov
jg
add
mov
or
jnp
inc
mov
in
push
or
aad
sbb
cmpsl
loope
push
sub
sub
repnz
mov
cmpsl
test
mov
sub
jg
pop
shl
sbb
adc
jb
and
idivl
or
inc
repz
dec
mov
movl
sahf
aaa
adc
xchg
sahf
lahf
clc
sti
xor
inc
inc
jnp
lods
divb
dec
ds
inc
adc
std
mov
gs
mov
imul
out
cmp
sbb
test
mov
mov
mov
sbb
rcrl
mov
mov
push
stc
xchg
lcall
adc
cmp
and
pop
mov
dec
jmp
sub
and
or
sbb
fs
add
ret
hlt
adc
or
lock
cwtl
adc
mov
push
insb
sbb
ror
nop
outsb
cmc
mov
jg
call
les
aad
xchg
in
xor
pop
pusha
daa
jmp
fbld
mov
js
mov
xchg
add
sbb
push
pop
dec
mov
mov
leave
dec
mov
ja
mov
sub
xor
cmc
pusha
in
into
pop
leave
subl
scas
inc
leave
adc
rcrl
mov
jnp
push
push
shrl
xor
cmp
dec
xlat
pop
mov
fs
xor
jno
jo
mov
push
sub
les
push
shlb
dec
test
aad
lahf
xor
pop
daa
dec
push
xor
popf
into
dec
or
mov
pushf
mov
push
jg
push
dec
cmp
push
cld
cmp
and
pop
sbb
or
ret
hlt
cmpsl
add
cmpl
out
jne
sti
mov
cmp
push
sub
movsb
sub
sbb
testb
movsb
dec
pop
jbe
xchg
inc
mov
mov
xchg
repz
jo
out
js
mov
sub
imul
mov
in
into
enter
pop
adcb
lods
sbb
aam
repz
pop
add
cli
xor
fistps
add
repnz
shlb
jns
add
ds
dec
adc
jl
cmpsl
outsl
adc
das
nop
push
push
nop
xchg
sarb
pusha
or
sub
push
lahf
bound
repnz
fisubs
les
popf
mov
adc
gs
in
rclb
lods
add
in
dec
cwtl
decb
mov
pop
cld
enter
test
inc
in
das
dec
rcrb
push
push
xor
pop
xchg
loop
xor
xor
out
mov
mov
cmc
cmp
or
repz
out
and
mov
xlat
test
dec
shll
movsb
mov
jecxz
dec
cmp
out
push
mov
xor
mov
lds
push
and
xchg
movsl
shl
loopne
push
out
scas
mov
add
dec
data16
mov
in
adc
sbb
pop
pop
pop
pop
lret
xchg
mov
mov
lock
in
jp
mov
inc
and
es
pop
ret
jns
sbb
shlb
xchg
repnz
or
pop
or
push
xlat
or
mov
test
scas
push
mov
out
jbe
xchg
push
push
push
insb
adc
and
lcall
inc
xor
scas
cmp
rorl
xor
jno
shll
cld
shlw
push
xchg
out
stos
xor
or
mov
pop
test
xor
jne
les
outsb
xchg
mov
leave
aam
inc
insl
jg
sbb
xor
xchg
mov
cmp
pop
xchg
cmpsl
adc
in
inc
ds
jecxz
mov
inc
and
lea
jo
scas
test
sub
or
pusha
sbb
icebp
stc
dec
pop
push
mov
iret
xor
rcl
mov
xchg
int
and
mov
mov
or
xchg
pop
xlat
lret
ss
pop
jmp
add
pop
xchg
sub
dec
or
add
adc
sbb
out
mov
xchg
jbe
inc
inc
jae
inc
addb
imul
jmp
hlt
jno
ret
jae
add
test
sub
movsb
dec
inc
lret
sbb
push
mov
mov
mov
adc
testl
mov
push
hlt
popw
imull
loop
xchg
lods
pop
xor
in
rorb
loope
inc
in
jl
sahf
add
les
inc
ljmp
pop
fwait
and
nop
das
jnp
divb
dec
jae
outsb
jo
addr16
adc
adc
int3
js
xchg
mov
ret
adc
ds
fldt
pop
cmp
cld
sub
js
outsb
or
sarl
sbb
leave
daa
pusha
pusha
and
fidivrl
scas
ss
imul
ds
aad
lds
out
movsl
ljmp
rcl
inc
cmc
add
xchg
mov
pushf
sub
add
ret
repz
cmpsb
mov
xchg
jns
in
fbstp
inc
xor
insb
cld
ret
lock
in
fstpl
cmpsb
xor
loopne
dec
stos
loop
lods
or
jnp
cltd
push
les
sbb
and
cmp
lahf
lock
fsts
and
fcmove
cli
enter
pop
dec
lahf
mov
cmp
pop
popa
add
cmc
clc
inc
out
inc
dec
data16
mov
pushf
sub
jecxz
fstpl
pop
mov
clc
push
cld
inc
insb
pop
ffree
in
inc
and
movsb
mov
mov
dec
cmp
add
pop
stc
popa
mov
cli
das
sub
xor
add
insl
ret
outsl
adc
and
call
mov
sub
dec
push
fwait
out
scas
inc
mov
sbb
int3
sbbl
fstl
movsb
pop
and
sbb
ds
sahf
pop
mov
xchg
xchg
pop
rol
stos
cltd
xor
xchg
ficoml
popa
scas
xor
inc
push
pop
mov
adc
xchg
lods
orl
inc
cmp
pop
in
sub
repz
nop
xor
fcmovnbe
aam
aas
into
inc
or
xchg
dec
pushf
ljmp
xor
pop
sbb
and
mov
xor
push
or
pop
mov
fisubl
xchg
pop
ror
inc
cwtl
arpl
ds
and
adc
add
outsl
insl
test
mov
js
inc
jns
jle
push
aas
imul
xchg
enter
rcrb
je
insl
mov
mov
imul
mov
movsl
dec
xchg
loopne
aas
insb
fs
mov
call
sbb
nop
jae
jmp
pop
inc
jmp
xor
daa
ss
xchg
scas
mov
sbb
push
rorl
adc
cs
loop
lahf
loopne
jg
dec
push
sti
mov
in
std
or
repz
xor
enter
test
or
jno
xchg
xor
rol
in
mov
lock
mov
sbb
push
and
lahf
and
mov
sahf
pop
call
enter
or
mov
sub
push
or
loopne
cmpsb
jo
xor
jae
jbe
push
mov
hlt
dec
push
dec
mov
sahf
lret
pop
mov
ret
enter
sub
out
mov
in
mov
ljmp
jp
jbe
aaa
rolb
pop
leave
inc
ficompl
mov
iret
out
in
mov
jns
fwait
pop
out
scas
push
or
pushf
js
xchg
pop
scas
push
scas
xor
into
add
decb
mov
add
lret
daa
mov
cmpsb
std
pop
xor
call
cld
outsb
mov
jle
mov
int3
adc
xchg
subl
cmpsl
cltd
jle
pop
mov
and
xor
jmp
push
mov
xor
nop
fnsave
xor
imul
dec
out
mov
dec
xchg
dec
je
iret
jge
jle
gs
mov
sbb
std
arpl
xchg
rcl
jae
lock
out
test
sub
mov
in
adc
push
xchg
insl
dec
test
popf
test
adc
mov
mov
xchg
mov
inc
push
stos
enter
leave
jnp
inc
or
imul
inc
cmpsl
in
lods
test
std
sbbb
jmp
fwait
popa
cltd
adc
pop
or
fmull
add
fcoml
fistpll
fcos
cwtl
or
sub
add
repnz
inc
mov
cld
adc
cmpl
push
or
ret
loope
ja
inc
xor
inc
mov
lret
jae
aaa
repz
rcll
cmp
mov
mov
mov
push
mov
repnz
aam
test
mulb
xor
cli
mov
out
xor
dec
into
rolb
lret
lods
cli
mov
xchg
loope
leave
shrl
stos
hlt
dec
push
mov
inc
ret
adc
add
and
in
push
xchg
adc
mov
cld
mov
sbb
and
scas
rorb
mov
mov
dec
jle
add
add
jb
mov
fnstenv
or
das
inc
aaa
fbld
imul
pop
dec
xlat
popf
xor
xchg
jb
aas
mov
loopne
inc
js
mov
sahf
popf
sbb
js
sti
cmpsl
pop
xor
fs
in
push
jmp
pop
lret
hlt
aaa
testb
lock
mov
xchg
int3
jae
maskmovq
imull
insl
loopne
xchg
sub
sub
gs
pop
and
xchg
test
and
jno
fwait
xchg
dec
int
push
inc
rclb
pop
cmpsl
leave
data16
aad
pop
int
push
dec
xchg
hlt
mov
mov
adc
out
pop
loop
stos
jnp
xor
es
in
in
fdiv
pushf
loop
dec
xchg
mov
inc
xor
push
dec
insb
xchg
sub
mov
negl
loope
lea
cmp
cmp
lahf
adc
scas
int3
lret
fists
orl
icebp
mov
mov
rorl
ret
push
les
into
arpl
push
inc
mov
insb
popf
push
mov
xchg
xor
loopne
test
xchg
std
or
sbb
rolb
push
or
sbb
or
jo
sbb
dec
xlat
add
stos
in
pop
and
xor
js
sbb
pop
cmp
fidivrs
or
cmp
pop
popf
insl
outsb
xor
lea
andb
das
test
jp
mov
loope
aam
or
pop
dec
adc
fnstsw
sbbl
loop
sub
cmp
jle
and
fsubl
pusha
cli
adc
and
jle
mov
pop
mov
cmpsb
addr16
aas
jno
add
fcmovnb
push
cli
enter
mov
scas
push
and
sbb
add
and
gs
xchg
inc
fidivrl
and
jnp
in
loop
inc
in
sbbb
inc
inc
jp
add
int3
scas
stc
std
mov
xchg
in
mov
test
sti
pop
cli
dec
or
dec
pop
in
aas
cmp
outsl
mov
int
add
movl
ss
pop
aad
sub
lret
icebp
mov
push
cwtl
dec
popf
stos
loop
mov
jle
es
and
pop
cmp
xchg
xchg
out
mov
sub
into
pop
sbb
scas
scas
jle
sub
sub
loop
lock
jmp
movlps
xor
xlat
cmp
jp
cmp
and
xor
in
lock
into
les
lret
sub
stc
ficomps
adc
jge
mov
sbb
inc
xchg
or
std
ss
xor
jo
rcrl
inc
fmul
cmp
jl
and
push
rcrl
lods
xchg
ja
or
popa
mov
and
adc
dec
pop
mov
xchg
adc
inc
add
test
mov
out
fisttps
dec
mov
mov
cwtl
outsl
ret
out
daa
movsl
lods
movl
sub
das
rcr
sub
xor
in
add
into
add
pop
or
sbb
push
adc
cmpsb
adc
pop
dec
int
out
repnz
jnp
mov
rcl
lcall
inc
cmp
and
mov
loop
test
and
cli
jne
mov
cmpsl
xor
or
jnp
mov
mov
cmpsl
sub
mov
cld
cmp
pop
sub
jecxz
xlat
sbbl
xor
mov
inc
and
xchg
ud1
out
jno
dec
cmpsb
cmpb
scas
out
dec
fbld
sbb
add
or
fdivs
scas
jns
pop
aad
fwait
enter
sbb
test
adc
push
jo
and
push
ljmp
ja
pop
shlb
test
stos
pop
out
popa
arpl
aam
sbb
loope
mov
sub
add
or
xchg
or
faddl
jg
in
sub
loopne
dec
ret
mov
dec
jnp
out
fcoml
jae
adc
sti
jb
inc
pop
insb
out
jp
andl
jnp
push
and
outsl
pop
sub
lock
addl
sub
aad
xchg
or
pop
adc
mov
cmp
mov
rorl
popf
add
or
stc
out
loopne
sarl
jno
test
aaa
push
std
mov
pop
push
bound
dec
out
cmp
iret
inc
test
in
out
xchg
popf
pop
or
nop
mov
popf
add
pop
outsl
insb
leave
dec
loop
enter
dec
cmpw
mov
cs
push
cmp
mov
stos
mov
sbb
xchg
sbb
mov
test
cmpsb
insb
adc
mov
out
mov
and
sub
in
insl
out
pop
cmp
fadd
ret
mov
sub
jle
pop
or
and
mov
inc
xor
shlb
xor
ja
test
ret
mov
int
sub
mov
dec
cmp
in
pop
imul
cmc
pop
arpl
mov
push
push
pop
sub
mov
popf
leave
rcrb
rolb
jno
jmp
pop
fmulp
sbb
xor
jg
push
cmp
in
testl
out
add
fimull
or
test
movsl
inc
outsb
js
mov
inc
gs
lods
aam
sub
dec
out
cmp
xchg
imul
push
adc
xorl
pop
hlt
xor
xlat
adc
dec
rolb
jo
rcrb
mov
pop
cwtl
fstpl
mov
dec
push
adc
push
inc
xor
jg
gs
outsb
ljmp
push
cmc
in
sbb
clc
testb
in
pop
mov
cli
jg
std
enter
cmp
xor
ret
cld
inc
xchg
mov
icebp
xor
sti
mov
push
js
xor
icebp
dec
es
add
adc
sbb
or
pop
jg
adc
test
lods
jge
add
push
jo
push
addl
mov
adc
aas
popa
cli
xor
fmuls
std
ret
xchg
popf
cmc
gs
outsb
arpl
mov
mov
pusha
ds
lret
dec
imul
add
sbb
push
or
pop
jmp
imul
sub
sbb
fdiv
fstpl
stos
inc
cmp
ret
dec
ss
mov
push
xor
pop
ljmp
aas
jmp
shl
int3
cmp
dec
jl
imul
push
addr16
adc
out
mov
int3
jmp
adc
mov
inc
push
in
xor
adc
imul
jno
mov
outsb
inc
fists
jmp
fst
adc
daa
cmp
sub
into
xor
insl
inc
in
dec
dec
push
into
mov
aaa
cmp
out
push
cmp
inc
lea
and
sbb
loop
cmp
divb
xlat
jge
lea
sbb
out
popf
xchg
insl
gs
dec
pop
in
jae
jbe
push
in
mov
das
pop
adc
insb
loopne
aaa
add
pop
loopne
sbb
xchg
sbb
mov
or
sub
repz
addb
movb
leave
in
pop
pop
lret
adc
add
lds
xchg
je
add
stc
movsb
outsb
xor
stos
cli
clc
aam
lock
cmp
pop
inc
clc
push
movsb
mov
mov
inc
pushf
mov
pop
sbb
xchg
jge
mov
cmp
cltd
test
js
hlt
dec
stc
pop
aam
and
xchg
sahf
push
lahf
xchg
jp
add
sbbb
and
mov
imul
xlat
cli
xchg
pop
jmp
inc
out
or
imul
push
inc
cmp
push
js
insb
shlb
stos
ljmp
and
aaa
pop
mov
repz
mov
and
std
cmp
shll
jo
data16
sbbb
sub
push
lock
mov
jnp
int
stos
mulb
push
or
cld
jae
movsl
jno
mov
adc
inc
cmp
jp
stc
rcll
dec
add
decb
dec
pop
ret
out
mov
in
or
sub
lods
repnz
mov
adc
adc
enter
dec
insl
imul
sbb
icebp
sbb
cmp
adc
pop
xchg
mov
outsl
mov
xchg
in
or
aas
mov
mov
jmp
cltd
inc
mov
jae
xor
and
call
mov
sbb
jmp
aad
addb
add
xor
jecxz
xchg
mov
cmp
sbb
int
aad
cwtl
sbb
push
pop
cmp
lea
add
in
stos
jmp
mov
mov
mov
sub
push
test
jnp
push
pop
aam
or
mov
or
int
mov
mov
mov
fcompl
test
std
push
sub
mov
mov
add
bound
out
pop
sti
daa
dec
adc
cmp
inc
mov
notl
pusha
std
and
pop
pop
xor
and
push
scas
mov
fistpl
lock
adc
mov
push
pusha
in
jmp
pop
negl
cmp
mov
xor
push
scas
pop
mov
test
inc
in
dec
mov
popf
mov
bound
andl
imul
and
imul
imulb
mov
sbb
iret
add
lds
jbe
in
push
js
cld
hlt
arpl
push
scas
inc
iret
aas
and
sub
fdivs
add
in
jle
dec
lret
inc
mov
mov
lret
lcall
dec
mov
xchg
jmp
xchg
pop
dec
push
arpl
and
js
jb
or
xor
lret
fisubrs
cmp
xlat
xlat
dec
in
scas
fisttpll
sub
sets
cli
mov
push
push
mov
scas
dec
fs
inc
adcl
mov
jmp
jb
aam
xchg
and
mov
push
cmp
lahf
add
mov
pop
mov
mov
movsl
shl
mov
stos
jle
mov
cli
cmpsb
mov
jne
out
pop
mov
sahf
mov
mov
mulb
bound
adc
out
call
mov
pop
in
push
cwtl
call
mov
sbb
jb
pop
fistpl
cmc
dec
jge
xor
cli
xchg
cmc
fs
lahf
mov
out
mov
das
fldt
xor
loope
add
mov
pusha
stos
imul
aaa
cli
jae
cmpsl
repz
xchg
sub
inc
lods
xlat
gs
and
pop
popf
aad
xchg
mov
movsb
xchg
aas
fldenv
lods
jg
mov
push
cmp
ss
idivl
js
mov
int3
and
mov
push
and
subb
dec
aad
mov
cmc
mov
lea
mov
xchg
mov
int
mov
test
cmp
mov
mov
pop
stos
cmc
fisttpll
leave
ja
add
sahf
sub
test
push
lea
outsb
add
mov
hlt
out
push
imull
sarb
jmp
std
cmc
and
mov
rorb
lahf
add
xor
fs
jns
cmp
add
add
jg
jb
cs
and
shr
ss
pop
mov
pop
add
lock
dec
in
lock
imul
cld
jb
and
popa
out
pushf
stos
cltd
jl
loopne
cmpsb
shrb
or
shlb
rol
adc
dec
adc
addl
lahf
ljmp
incl
mov
test
push
cltd
push
inc
insl
mov
lods
lcall
and
pop
ljmp
cmpsb
fs
or
xbegin
popf
dec
dec
fsubl
arpl
jbe
cmp
mov
lea
movsb
xor
cltd
jecxz
ja
pop
mov
into
cltd
enter
int3
and
ficompl
arpl
sub
test
add
dec
outsb
loope
sahf
and
dec
test
jo
aam
cmp
and
xchg
push
jne
cltd
cmp
std
mov
mov
sbb
jp
mov
lcall
sbb
xorb
inc
jecxz
push
movsb
push
mov
je
jmp
in
mov
and
sbb
add
xchg
roll
lods
sbb
leave
sti
add
push
fistl
jo
es
dec
sarb
dec
aad
inc
fs
lahf
adc
sub
add
pop
aam
cltd
jp
xchg
test
ficoml
pop
sub
or
mov
adc
shrb
add
dec
mov
cmp
mov
pop
neg
rolb
loopne
pop
lds
cmpsb
aaa
pop
or
jmp
fnstcw
push
dec
jg
popf
inc
jne
incl
or
je
push
ficoml
fwait
cltd
jnp
scas
push
sub
sbb
pop
and
lret
dec
mov
xor
inc
shlb
mov
sbb
and
rcll
hlt
lret
adc
js
test
mov
adc
xchg
stc
lods
es
icebp
jecxz
in
cwtl
mov
js
orb
lds
jo
mov
pop
cmpsb
daa
cmp
or
mov
inc
sub
inc
mov
xor
in
and
daa
xchg
push
mov
jecxz
jne
jecxz
and
push
push
pop
cmp
sub
push
push
ja
inc
sti
fidivrl
mov
cwtl
sti
stc
ss
es
dec
add
subb
jne
movsb
bound
push
mov
jnp
dec
sub
jo
jb
mov
fwait
mov
cmp
push
pop
shrb
jp
call
fs
cmp
mov
cmpsb
in
rcrb
mov
out
mov
loop
jle
and
incl
insl
inc
mov
xor
inc
pusha
dec
idivl
std
xchg
lods
xor
push
or
xor
push
mov
push
mov
ds
push
loop
fmuls
loop
fsubrs
jns
jbe
mov
mov
jns
fst
leave
lods
mov
jg
test
in
movsl
enter
lods
rolb
mov
sbb
push
cmpsb
lock
and
dec
inc
or
xchg
shrb
out
data16
or
mov
gs
fsubs
jecxz
or
in
test
addr16
adcb
das
push
in
imul
mov
test
fisttpll
iret
sahf
xor
ret
lret
nop
jp
testl
xlat
sbb
test
gs
xchg
std
and
cmp
ror
jmp
notl
loopne
cmpb
sub
push
sahf
dec
xchg
or
xchg
jbe
jns
sub
mov
jb
or
jbe
mov
inc
scas
movsl
push
into
test
jae
andl
sbb
pop
sub
test
call
mov
adc
shlb
push
jecxz
lods
icebp
int
fwait
lea
xor
out
icebp
sub
adc
mov
xor
mov
xor
rcrl
pop
pop
and
and
cmpsl
inc
cmp
sbb
dec
das
inc
pop
xor
les
out
scas
add
rol
out
fs
xor
pusha
push
in
inc
scas
jnp
daa
add
xor
inc
cmpsl
jl
lods
repnz
xchg
xchg
pop
test
movsb
lock
and
push
push
ret
dec
hlt
xchg
cmc
in
repnz
ja
or
mov
pop
dec
mov
jae
lods
xchg
loopne
icebp
arpl
xor
aad
js
adc
add
jb
sub
bound
imul
fwait
dec
jl
cmpsb
mov
mov
mov
addr16
je
out
xchg
cltd
pop
push
cmp
or
enter
ja
pop
jle
jg
test
ja
cmp
cmpsl
nop
dec
lods
ds
xor
adc
faddp
and
or
bound
pop
add
mov
movsb
mov
jo
mov
cmp
sti
dec
jne
pushf
stos
push
xlat
mov
popa
out
and
dec
pushf
pop
mov
or
or
pusha
cltd
xchg
lret
jmp
jl
push
jle
inc
dec
push
and
xor
ja
or
aam
sbbl
fisubl
repnz
ss
inc
inc
xor
imul
ret
pop
in
fsubl
mov
std
push
int
into
xchg
mov
add
arpl
out
mov
mov
aas
outsb
movsl
xchg
jns
fidivrl
fs
add
sub
sti
addr16
ret
das
lock
outsb
xor
lock
stos
adc
cmp
cmc
dec
push
cmpsl
pop
pop
and
jecxz
push
adc
cmp
pop
gs
dec
iret
fiadds
cmc
sub
and
push
pop
sahf
pop
imul
pop
andb
mov
loope
in
lcallw
dec
leave
popa
add
mov
ja
sbb
cmp
dec
jnp
dec
xchg
fwait
inc
iret
lods
add
sbb
fstl
fnsave
lret
vmovups
xchg
fisttpl
fldl
adc
lds
xor
and
sbb
les
mov
rorl
mov
mov
dec
mov
xor
push
rolb
sarb
add
fwait
jl
push
gs
add
addr16
fldenv
stc
pop
pop
sbb
inc
ret
push
lret
jmp
enter
pop
mov
ss
inc
inc
mov
pop
data16
push
mov
fmuls
push
push
and
jne
test
popf
adc
push
push
sub
js
stc
sbbb
pcmpeqw
js
test
mov
or
sarl
fcmovu
test
imul
or
mov
push
shr
fldenv
das
add
mov
lods
push
sbb
sahf
out
mov
aaa
test
push
or
je
and
imul
xor
xchg
jge
jmp
inc
jl
mov
loope
movups
jge
push
cmp
jl
sahf
negb
xchg
adc
and
cmp
pop
jns,pt
jae
in
mov
jo
mov
call
pusha
clc
test
push
inc
aam
rorb
shlb
push
dec
mov
adc
push
mov
push
adc
lcall
ret
and
xchg
pop
pushf
mov
jno
push
inc
out
dec
jmp
sti
dec
xor
xor
mov
mov
add
push
clc
or
movsl
jmp
pop
inc
fadds
dec
fnstcw
add
xchg
dec
pop
adc
out
mov
jno
pop
stc
outsb
dec
cwtl
insl
dec
mov
mov
adc
ds
jmp
add
cmpsl
out
inc
js
je
xor
movsb
daa
xlat
adc
inc
mov
pop
and
cmp
lret
fsubl
lock
mov
fsubs
push
repnz
ret
in
push
push
addl
cli
dec
sbb
or
pusha
int3
mov
loopne
ss
pop
lods
push
hlt
mov
cmpsb
in
leave
or
xlat
mov
es
imul
les
div
and
ror
jge
and
cwtl
adc
sub
paddsb
jb
mov
test
mov
mov
and
lock
jno
xchg
les
leave
sbb
push
sbb
dec
lahf
or
pop
adc
mov
xor
int3
in
popa
pop
out
jg
ffreep
cmc
mov
mov
leave
ljmp
sahf
dec
aad
daa
cmp
imul
push
call
adc
xor
fistpl
loope
xchg
test
mov
lret
dec
dec
call
std
in
pop
fsubs
inc
stos
push
mov
not
jecxz
movsb
lea
inc
fisubl
lcall
nop
sahf
adc
daa
jp
addr16
data16
es
lds
push
adc
sbb
mov
lods
xchg
or
mov
pop
outsb
insb
pop
push
xor
in
cmp
xor
sahf
js
push
fisubl
aam
pop
popf
lcall
adcb
pop
push
repnz
adc
push
test
scas
xchg
xchg
dec
stos
ds
mov
mov
xor
ret
sbbl
sbb
push
xchg
data16
xchg
mov
and
sbbb
shll
sbb
or
mov
cld
out
les
test
inc
xor
fstl
push
rorb
push
insb
testb
or
test
mov
pop
stc
js
orl
clc
in
aas
push
lods
pop
aam
int3
or
dec
jecxz
xchg
sbb
mov
push
test
inc
xchg
mov
icebp
aam
aaa
cmc
jo
mov
mov
mov
js
xchg
sbb
adc
pop
push
jg
xchg
jle
ss
push
ljmp
loope
fnstsw
aas
imulb
addr16
ret
ret
jns
xor
or
pop
lahf
mov
jl
imul
mov
jno
inc
fstl
xchg
adc
add
pusha
push
push
cli
dec
sub
mov
push
cmpsb
and
xor
push
push
jno
fdivs
sbb
imull
je
xor
rcrl
cmp
cwtl
les
inc
call
mov
pop
mov
jb
add
dec
push
xor
ret
and
xchg
jns
sti
pop
cs
adcb
jle
in
ret
fwait
dec
fcmovnbe
gs
fstpl
in
fidivrs
stos
sbb
cmp
dec
dec
xchg
clc
push
adc
js
pop
xor
std
sub
jns
sbb
insl
pop
loop
mov
fpatan
sub
sbb
repnz
inc
rcll
ljmp
push
mov
and
mov
shl
pop
sti
orl
or
sbb
dec
cmp
mov
push
add
and
cmp
cmp
in
in
xchg
jle
xchg
mov
dec
into
mov
inc
mov
mov
push
pop
je
fldenv
out
daa
repz
mov
adc
pop
push
loop
pop
imul
add
or
push
and
mov
mov
xor
sub
leave
xchg
call
push
loopne
xchg
xor
mov
and
mov
fiadds
shrb
stc
pop
lcall
shll
pop
jb
jl
lods
cmc
out
and
fldenv
cmc
insb
das
inc
je
or
sub
mov
stos
mov
jmp
aad
sbb
mov
mov
xchg
mov
mov
daa
pop
jge
add
adc
rcll
in
into
xchg
dec
lea
lahf
es
cs
pop
iret
sti
add
mov
ret
test
and
ds
es
je
or
sbb
jg
adc
cmpsb
dec
clc
jbe
shlb
cmp
inc
js
cltd
addb
sbb
inc
jb
dec
xchg
dec
arpl
jns
test
mov
jle
into
add
cmp
outsb
stos
mov
bound
flds
xorb
fbstp
fs
xor
cwtl
pop
lahf
cmp
dec
ljmp
in
fstpt
jge
pushf
xchg
add
imul
and
pushf
jle
push
jo
jnp
sbb
mov
or
movsl
std
and
ss
scas
rcll
imul
imul
pop
jne
lcall
add
pop
sbb
and
insl
fiadds
mov
push
jns
or
sbb
out
or
mov
and
movsb
mov
adc
sbb
pop
out
mov
cs
lret
xor
movsl
xlat
shll
sti
jp
imul
jns
dec
movsl
movsb
imul
clc
lret
repnz
das
clc
lret
jge
ljmp
xlat
mov
outsb
sbb
sbb
xor
pusha
adc
jp
xlat
jbe
popf
xchg
pop
sub
sbb
adc
arpl
mov
push
subb
jmp
or
das
movsb
daa
pop
fs
ret
pop
nopl
mov
xor
inc
pop
add
loope
vpackuswb
shrl
jmp
mov
mov
in
cmp
adc
and
xor
or
add
arpl
mov
mov
inc
mov
in
xor
divb
ljmp
imul
dec
in
loopne
sahf
add
jns
lret
jmp
pop
adc
ret
loopne
out
fs
jl
jno,pn
subb
hlt
mov
push
inc
or
inc
loop
into
adc
xor
jl
xor
pop
cmp
inc
jno
out
mov
mov
pushf
mov
push
sub
rcll
pop
scas
jl
xchg
adc
sub
inc
jle
shll
icebp
inc
lret
outsb
shll
addr16
and
xchg
xlat
in
addr16
fsubrl
push
out
cld
or
lret
lods
nop
fiadds
insb
fnstcw
push
stos
out
clc
repnz
ret
push
jmp
aam
mov
mov
aad
mov
scas
jbe
dec
fs
negl
stos
lret
test
loope
loop
pop
sbb
sahf
push
xchg
pop
add
xchg
add
mov
pop
add
ret
mov
cld
in
sbb
push
roll
or
aas
sbb
jae
mov
inc
out
enter
shll
lcall
mov
push
xor
pop
mov
ja
in
xchg
cwtl
bound
inc
scas
push
aaa
addr16
test
push
in
push
jno
or
mov
push
popa
push
pushf
insl
pop
add
push
test
rorb
inc
jle
jl
repz
rclb
jge
cmp
push
sbb
and
xchg
push
mov
mov
mov
cmpl
mov
test
test
inc
sbb
cmc
xchg
add
cmp
and
aaa
bound
jmp
cmp
jecxz
pusha
jb
and
jmp
aaa
add
stc
mov
pop
jg
nop
pop
hlt
stos
test
in
imul
insl
jmp
dec
je
dec
sti
and
mov
adc
idivb
out
aad
or
aad
stos
nop
fiaddl
fstl
adcb
imul
arpl
bound
or
xorl
or
imul
lods
dec
ds
bound
jne
and
mov
cld
pop
sbb
movups
mov
int
add
push
shll
test
loopne
pop
add
mov
mov
jae
cmp
ds
adc
fmull
es
mov
inc
std
sahf
stos
mov
mov
xor
shrb
sub
in
lret
sahf
mov
lahf
pop
lcall
in
adc
fiadds
add
ret
jmp
js
mov
xchg
push
orb
sahf
pushf
das
mov
fdivrp
imul
pop
stos
repnz
inc
mov
dec
sarl
xchg
mov
loopne
jno
inc
lcall
frstor
je
xchg
imul
pop
not
sub
mov
jno
dec
jno
adc
mov
dec
in
cld
sti
xor
jmp
and
into
ss
sbb
push
es
iret
inc
mov
imul
jns
lcall
mov
shrb
xchg
cmp
mov
cld
or
filds
in
jecxz
add
mov
clc
jae
loope
ss
pop
cmp
cltd
pop
outsl
repnz
roll
dec
jp
iret
gs
mov
popa
pushf
add
jl
bnd
aad
adc
test
push
aas
cmp
sub
ds
aad
popa
and
jge
and
insl
inc
jp
es
pop
sbb
sub
repz
xchg
adc
loope
cmpsb
movsb
rcll
xchg
sarl
enter
outsb
and
sbb
loope
mov
mov
and
fwait
into
mov
jno
subb
xchg
xorb
sub
adc
roll
mov
in
jmp
arpl
test
push
and
mov
cmpsb
inc
cmpps
mov
nop
ss
scas
sbb
mov
cmp
decb
data16
push
rorl
mov
dec
testl
xorb
in
inc
lds
fnstsw
dec
out
cwtl
push
or
out
push
sub
sbb
lret
push
out
scas
js
mov
lret
icebp
cmpsb
addl
sbb
gs
das
xchg
aad
xchg
cmc
imul
pop
jbe
cltd
xchg
dec
inc
cmpsb
out
test
jae
cld
jp
push
mov
cmp
sbb
mov
out
movsb
daa
pop
andb
xchg
into
adc
in
pop
or
xchg
add
push
hlt
jmp
fcompl
jge
mov
mov
in
mov
mov
mov
lahf
push
mov
add
ja
sarb
fldt
hlt
das
or
ret
scas
es
or
dec
cmp
imul
jle
outsb
sbb
scas
push
push
push
pop
dec
lret
sub
aas
mov
pushf
or
dec
dec
dec
test
cld
aaa
xor
popa
ret
repnz
xchg
cmp
xchg
test
or
dec
or
sbbb
mov
dec
sbbb
into
aam
js
sbb
in
scas
jns
xchg
pop
sub
ret
jmp
xor
lea
cmp
gs
cmp
jbe
lret
fdivl
jae
xchg
push
imul
push
insb
mov
into
int
mov
adc
sub
clc
pop
aas
push
aad
mov
test
stos
mov
push
and
insb
jmp
pusha
std
add
scas
xchg
notl
mov
push
inc
xor
or
cmp
dec
and
inc
jb
add
inc
lret
pop
jge
and
mov
leave
and
cmp
mov
shll
pop
stos
daa
jecxz
xchg
inc
int3
outsb
mov
jne
xchg
fbld
sub
clc
sbb
stos
and
mov
adc
jae
xchg
shll
out
lock
mov
mov
cmp
mov
js
fsubrl
pop
push
mov
jmp
xchg
mov
sbb
adc
outsb
es
inc
hlt
xchg
sub
das
inc
pop
lods
xchg
pusha
push
clc
std
ret
mov
pop
sub
mov
inc
push
xchg
and
jne
push
xchg
outsl
xchg
bound
jnp
push
lds
jle
pusha
xchg
loope
cmp
and
scas
movsl
add
cmpsl
jp
imul
cmp
imul
pop
in
fdivrl
adcb
push
inc
sbb
loop
pop
add
or
dec
mov
leave
imul
xchg
pop
sub
adcl
fdivrl
pop
rorl
sub
jg
push
xchg
testb
push
pushf
fxch
or
push
insb
pusha
js
in
sub
fidivs
loop
jmp
xchg
std
negl
ds
xchg
fistpl
aaa
sub
mov
movsb
insl
xorl
mov
inc
or
cmp
sar
or
outsl
jmp
mov
outsb
fistps
xor
jae
stos
sbb
push
cmp
jae
jmp
sahf
mov
insl
hlt
pop
inc
push
push
dec
cmpsb
imul
fdivrs
dec
push
or
mov
mov
dec
jmp
insl
test
xchg
cmp
cwtl
cmp
mov
insb
jmp
ja
xor
adc
sarl
in
iret
jbe
dec
sub
adc
stc
int3
imul
cld
or
jp
push
mov
test
mov
or
and
adc
push
mov
enter
sbb
mov
inc
gs
fs
sbb
loop
out
sbb
sbb
jb
lahf
es
cmp
sbb
xchg
mov
movsb
aad
pop
pop
add
mov
hlt
loopne
mov
mov
cmp
add
fwait
negb
ret
imul
dec
jo
mov
mov
or
es
in
lahf
stos
jo
sbb
jg
xchg
mov
lcall
in
and
push
fmull
popf
sub
insl
cltd
insb
mov
call
fcmovbe
ret
out
push
mov
addr16
pop
pop
lret
int3
sbb
push
notl
arpl
insb
inc
clc
cld
cwtl
jne
inc
outsb
clc
js
mov
sti
dec
jecxz
lahf
test
pusha
xchg
jnp,pt
cltd
xchg
lds
xchg
add
xchg
bt
stos
sub
lods
jecxz
and
xchg
mov
add
and
xor
mov
out
sub
das
push
sub
add
cmp
jmp
sbb
cmpsl
push
pushf
cmp
call
ds
out
call
lcall
add
push
pop
xchg
cmp
or
cmp
notl
jno
or
cmp
loopne
outsl
xor
push
jnp
cmp
adc
cs
and
push
movsl
shr
mov
inc
rcrl
in
jnp
hlt
and
cmpsb
addb
xchg
mov
lea
inc
es
xchg
dec
lcall
in
lods
arpl
dec
icebp
or
jb
xchg
sbb
mov
in
jge
adc
shll
lret
fiadds
daa
pop
sub
imul
adc
std
and
movsb
shl
xchg
push
cmpsb
shr
out
cmp
les
mov
adc
mov
cltd
enter
cmp
in
or
jbe
hlt
xchg
pop
testb
jecxz
sub
jle
sub
pushf
push
pushf
out
in
push
mov
shrl
test
add
inc
sarl
leave
pop
sub
in
mov
or
outsl
push
inc
inc
das
cmp
dec
mov
in
scas
ja
testb
pop
pop
jns
cwtl
aam
or
scas
pop
jnp
mov
fimull
repnz
pop
fdivs
push
fs
sarl
out
cmp
xchg
mov
xchg
or
xor
pop
inc
adc
imul
and
clc
imul
mov
jae
push
and
xchg
mov
imul
pusha
sub
and
push
mov
test
xchg
lahf
test
clc
sub
testb
or
std
in
add
iret
movsl
arpl
roll
out
loop
outsl
in
rclb
jne
lods
mov
xchg
imul
imul
cmpsl
lret
pop
aas
push
sub
stos
jb
jle
insl
inc
cmp
shl
and
xor
aaa
fdivp
and
push
pop
jmp
mov
dec
int3
dec
mov
ja
ffree
ss
jnp
lock
sub
push
jno
adc
push
mov
rorl
and
adc
sbb
inc
loopne
lret
cmp
mov
mov
ja
stos
push
pop
xchg
insl
dec
iret
adc
lcall
fdivrs
es
sub
xor
sbb
sbb
out
and
jmp
add
outsb
mov
sub
popa
icebp
mov
lret
mov
jl
push
or
xchg
pop
int3
jbe
fiadds
ret
inc
push
sub
sbb
and
ja
call
cmp
jmp
sub
fadds
lret
sbb
pop
frstor
aad
ret
pop
xchg
repnz
mov
jle
repz
sbb
jl
and
jecxz
xlat
push
movsl
std
stos
shl
popf
mov
add
mov
test
clc
pop
jmp
int3
cmp
mov
inc
or
cwtl
inc
test
mov
and
mov
cmp
cmp
sub
scas
je
test
and
add
aad
pusha
outsl
pusha
cli
lods
push
mov
mov
pusha
idivl
push
push
jmp
movl
pop
cmc
mov
hlt
xorb
into
addr16
mov
mov
arpl
loopne
movsl
sub
lret
mov
addr16
sub
pop
sarl
into
add
and
push
mov
hlt
or
inc
fwait
loope
jle
imul
pop
xor
mov
add
mov
test
mov
mov
adc
sti
xchg
xchg
cs
mov
ret
push
lcall
pushf
mov
pop
in
in
mov
into
divb
shl
daa
xorl
mov
push
mov
shlb
icebp
and
jmp
decb
rol
insl
daa
ja
aaa
fnstsw
test
loope
pop
les
adc
add
mov
adc
pop
iret
mov
mov
arpl
in
or
out
test
mov
push
popa
pop
jns
mov
add
stos
imul
mov
loope
inc
add
jno
push
sbb
sub
xchg
pop
shl
test
fs
in
jns
mov
out
mov
jmp
jle
inc
or
in
es
fdivrp
ds
lds
ja
loope
dec
adc
hlt
inc
mov
popf
sub
fldt
jnp
mov
je
test
addb
aad
inc
mov
icebp
fiadds
popa
popf
icebp
pop
cmc
push
in
cli
jecxz
adc
pop
cs
and
sti
shr
fs
stc
mov
lea
mov
mov
les
add
push
push
enter
pop
je
mov
and
dec
in
fstpl
prefetcht2
insb
outsl
popf
mov
inc
std
and
test
jecxz
loop
or
push
mov
dec
outsl
jne
pop
dec
jns
aaa
sti
test
jle
mov
mov
repz
stos
xchg
pushf
nop
bound
jge
iret
dec
inc
mov
shr
loop
scas
aad
and
mov
xchg
das
lret
pop
xchg
ret
ficomps
pop
xchg
fs
push
jmp
xorps
ljmp
in
je
ds
cmp
divb
cs
loop
ljmp
negl
repnz
jmp
cmp
inc
adc
inc
test
sbb
pop
cwtl
test
jno
fisubrl
sbb
push
in
lahf
pusha
dec
mov
push
add
test
adc
xchg
mov
int3
xchg
dec
adc
mov
sbb
out
xchg
jns
loope
pop
lods
or
jb
jb
jno
outsl
xor
int3
xor
add
mov
orl
imul
je
dec
and
or
test
loop
mov
lods
test
dec
jg
cmp
xorl
out
cli
bound
shl
inc
stc
dec
lea
cltd
in
mov
out
das
movsl
testl
adc
fildll
sub
adc
jae
int3
outsb
scas
mov
and
jg
lds
cs
insb
pusha
jl
jg
repz
pop
fdivrl
add
xor
push
jae
aas
sub
fstpt
push
test
xor
cs
pop
cmpsb
insb
mov
inc
push
adc
pop
iret
mov
jbe
jnp
bnd
or
out
dec
ljmp
dec
mov
jecxz
test
int3
outsl
movsb
sbb
fsin
testl
jge
imull
rolb
es
lock
xchg
jge
je
jbe
or
xor
xchg
dec
jno
lcall
mov
popw
icebp
pusha
cmpsb
test
push
test
push
jle
xlat
in
jns
repnz
shrb
cs
sahf
dec
stc
inc
sbb
pop
xchg
test
pop
jo
mov
adc
xlat
mov
popf
sarb
fstpl
mov
aaa
xchg
mov
lret
dec
imul
mov
adc
dec
std
cmp
mov
mov
ret
push
mov
mov
fs
pop
sahf
dec
adc
cmp
sbb
inc
dec
cmp
inc
ljmp
ss
mulb
in
cwtl
popa
xor
inc
lods
outsb
stos
sbb
pop
cmpl
jg
mov
xor
lret
jl
frstor
xchg
rorl
pop
inc
dec
mov
adc
rcll
cmp
pop
out
fisubrl
jb
lea
mov
cmc
sub
sub
sub
and
out
jl
cmp
fstl
mov
ja
iret
std
inc
xor
or
rolb
push
in
xlat
ja
mov
in
mov
pop
test
mov
lahf
ja
pop
xchg
mov
xor
mov
xchg
push
pop
data16
adc
pusha
iret
pop
lods
sbb
ret
mov
mov
call
mov
push
faddl
out
inc
pop
or
gs
call
sub
and
pop
fldcw
pop
push
dec
sbb
popa
sbb
inc
sarl
dec
movsb
sub
sub
and
mov
pop
adcl
sti
mov
jg
pop
or
sub
imul
fsubs
or
fcompl
sub
enter
pop
xchg
lret
test
push
adc
insl
insb
adc
aad
in
jns
sub
xlat
shr
mov
aad
ficoml
add
mov
add
ja
scas
push
xchg
pusha
mov
repz
inc
or
cmp
inc
dec
xchg
cmp
lahf
push
stc
sbb
mov
adc
push
inc
and
inc
jle
pop
shll
pop
or
adc
aam
fcompl
dec
inc
out
dec
mov
cs
push
out
cmc
jns
or
fldt
push
adc
scas
and
xchg
les
popf
fsub
lds
inc
xor
inc
nop
push
xchg
and
imul
outsb
dec
pop
iret
or
std
mov
mov
aas
test
insl
mov
push
sub
xchg
pop
scas
jnp
pop
addr16
adc
mov
pusha
xchg
fldenv
loope
scas
mov
in
std
inc
dec
stc
mov
mov
imul
scas
in
mov
insl
push
mov
jns
jne
ljmp
jmp
add
aaa
mov
jbe
testb
gs
lahf
outsl
shll
sub
add
fcmovb
int3
sbb
xchg
shlb
xchg
add
xchg
cmp
inc
inc
add
loope
gs
lds
xor
jb
arpl
roll
sub
notl
bound
mov
mov
popa
loopne
dec
xor
movsl
fcmovnu
jno
mov
movsl
jle
lods
shr
push
fld1
sub
pop
adc
ret
js
daa
and
test
jge
gs
xor
sbb
vsubss
pop
rclb
pop
test
lods
mov
mov
je
mov
mov
repz
mov
mov
lret
sbb
inc
sub
aaa
cmpsb
sub
cs
loop
repnz
test
fmulp
les
xchg
mov
rol
jno
jg
out
pop
je
inc
add
leave
imul
popf
fnsave
and
lds
jbe
nop
dec
cltd
loop
cmp
cmc
mov
leave
out
xchg
cmp
and
cmp
pusha
pop
imul
pop
lods
aam
pop
ds
ja
jae
insl
loop
ja
sub
sti
sbb
out
mov
push
pop
mov
xor
mov
mov
test
dec
lods
adc
mov
aad
xchg
mov
popa
or
inc
int3
pop
pushl
add
add
push
stos
xchg
xchg
cmp
jbe
jbe
dec
jg
add
shlb
lret
sub
sti
scas
xchg
and
icebp
mov
dec
cmpb
bound
mov
dec
andb
inc
iret
loopne
test
mov
daa
call
mov
out
push
fisttpll
mov
mov
int3
int3
mov
adc
sbbl
test
lahf
fs
cmp
adc
inc
pop
into
xor
inc
iret
dec
jge
mov
xor
lahf
dec
adc
addr16
hlt
mov
adc
pop
inc
sub
enter
arpl
pop
jge
nop
pop
icebp
lret
push
jmp
scas
cmpsl
mov
lahf
cmp
xor
and
mov
fldl
popf
neg
dec
je
pop
test
insb
imul
mov
mov
jb
and
pop
push
sbb
scas
push
pop
pop
mov
test
jle
push
fistl
mov
cmp
inc
cs
cmc
mov
lods
out
inc
sbb
push
add
mov
sub
outsl
cmp
movups
pop
push
xchg
into
lahf
xchg
mov
jbe
mov
ds
icebp
mov
push
in
push
pushf
lret
popf
imul
cs
lods
or
stos
scas
and
test
repnz
in
sbb
aaa
lds
ljmp
ljmp
mov
sub
mov
pushf
mov
lahf
cli
xor
pop
xor
xchg
add
jnp
fnstcw
push
test
std
xchg
cmp
push
fwait
test
shrb
jno
nop
nop
pushf
push
mov
xor
fsub
push
clc
addr16
gs
xorb
mov
jb
add
push
sbb
movsb
sbb
or
pop
mov
roll
enter
xchg
out
jmp
cli
fidivrs
fidivl
adc
push
stos
pop
hlt
cmp
jecxz
jns
sub
mov
shlb
jnp
mov
and
mov
clc
iret
ret
insb
xchg
add
inc
cmpsl
push
hlt
or
out
das
pop
fwait
bnd
xor
jae
mov
icebp
aam
fadd
mov
out
cmpsb
out
popf
adc
loop
xor
aas
sub
push
cmpb
dec
cmpsb
jge
jmp
sub
add
repz
fimuls
shlb
cmc
push
ja
les
popa
pop
les
popf
leave
scas
ds
xchg
adc
mov
xor
inc
adc
cmovno
mov
movsb
nop
movsl
xlat
xlat
mov
sbb
xor
jl
mov
fisttps
insb
sbb
mov
mov
inc
adc
mov
inc
in
jmp
enter
std
push
loope
dec
lods
enter
sti
lcall
add
int
inc
mov
mov
aas
sbb
daa
add
inc
xchg
pop
scas
stc
sti
add
out
scas
push
sbb
es
addr16
sbb
js
out
push
jns
and
popa
xor
cmp
out
enter
or
sub
mov
out
inc
add
mov
test
cmpsl
divb
pop
pause
push
cmpsb
outsb
add
cltd
lea
xor
rol
pop
add
cmc
jecxz
add
scas
sub
adc
mov
sbb
data16
loop
pop
sub
test
sub
lds
add
ja
cmp
imul
or
in
sbb
sbb
cmp
jb
add
pop
xchg
out
mov
lahf
mov
lahf
push
and
jge
cmpsl
inc
xchg
pop
inc
fstl
bound
imul
inc
mov
jae
ror
add
add
push
iret
jge
out
xor
inc
ljmp
xchg
push
jge
jle
lahf
in
dec
and
sbb
and
and
dec
icebp
aam
outsb
sahf
imul
leave
nop
mov
mull
fcoms
jne
sbb
leave
lods
mov
popa
xor
stc
cmp
dec
sbb
roll
out
lahf
add
xchg
jecxz
loopne
scas
repnz
mov
out
repnz
add
out
mov
inc
mov
jg
jp
jb
lds
aad
inc
jae
sub
popa
aas
out
loopne
mov
sti
pusha
mov
pop
pop
mov
in
std
mov
div
pop
xor
push
aas
fnstcw
sub
mov
mov
loope
lahf
sahf
aaa
mov
pusha
sbb
push
cmp
inc
dec
jno
or
imul
sbb
outsl
es
andb
int
cld
jns
loope
daa
mov
pop
arpl
js
push
pop
ds
pop
push
sti
dec
dec
das
adc
sti
mov
cltd
in
sub
mov
scas
adc
xor
mov
rep
cmp
add
inc
and
rolb
push
mov
sti
pushf
cmp
pop
push
mov
dec
enter
imul
inc
shlb
subb
cli
je
add
mov
xor
adc
sbb
adc
add
shl
out
lds
inc
and
jb
mov
ret
repnz
mov
sub
sub
push
or
xchg
lret
mov
out
lahf
mov
rorl
mov
ljmp
push
stc
xchg
or
xor
xlat
es
mov
ja
sbb
adc
jnp
int
popf
cmp
dec
dec
lock
mov
fdiv
dec
gs
jmp
std
mov
cmp
xchg
add
mov
jnp
jge
fidivl
pop
loop
in
addb
xchg
xchg
mov
mov
ret
test
stos
mov
inc
movsl
adc
pop
insl
aad
push
hlt
mov
mov
cmp
mov
lret
lret
inc
test
cmp
mov
lea
scas
fistl
clc
pop
hlt
sub
fsubrs
sbb
cmp
xlat
fsubp
sahf
pop
dec
or
in
popl
sbb
cmp
sbb
sarl
ljmp
and
dec
popf
mov
cld
in
int
out
and
dec
sub
test
ja
or
jl
and
faddl
fimuls
adc
adc
adc
cmp
jg
in
xor
outsb
xchg
fisubs
and
fists
xchg
pop
and
sbb
xlat
and
popf
dec
adc
cmpsb
mov
mov
inc
xlat
xor
mov
cmp
jmp
gs
nop
scas
sub
ja
mov
inc
cltd
xor
into
mov
mov
xchg
insl
inc
aam
xor
loope
shl
pop
mov
lds
dec
lds
push
inc
test
lock
xor
cwtl
outsb
int3
into
movsl
and
inc
push
or
enter
sub
movsb
mov
sub
mov
xor
xchg
cwtl
andl
or
mov
mov
push
lea
cltd
xor
cmp
imul
sbb
jbe
jmp
ss
push
push
out
pop
inc
cs
cmp
lret
int3
cmc
push
xchg
and
insl
je
sub
lods
add
iret
ss
cltd
push
jmp
out
add
adc
ret
pushf
or
int
pop
push
sub
dec
pop
lock
xchg
jp
negl
sbb
mov
int
sbb
cmp
out
sbb
dec
sub
dec
or
and
mov
pop
pushf
es
arpl
dec
cmp
ror
or
mov
call
push
loopne
daa
stos
mov
adc
xchg
hlt
les
mov
insb
std
push
aaa
inc
js
ret
in
imul
and
iret
inc
mov
inc
mov
push
lret
jno
adc
push
push
sarb
pop
ds
sbb
mov
shrl
loopne
aas
lds
bound
pop
out
sbb
pop
fwait
add
mov
pushf
in
pop
push
sub
mov
imul
loopne
iret
mov
dec
sbb
negb
jmp
xchg
or
xor
iret
pop
mov
or
xor
mov
fnsave
cmp
addr16
shlb
lea
adc
test
mov
cmp
ljmp
lcall
fs
shll
scas
arpl
pop
pop
outsl
jne
stc
mov
push
dec
sbb
inc
addr16
shr
int3
adc
pop
int
fisttpl
push
stos
push
lahf
jbe
cwtl
sbb
xor
mov
cs
flds
sub
mov
jns
pop
xchg
aaa
mov
lock
cmp
sbb
xor
cmc
jnp
imul
movhps
aam
jecxz
add
jno
jle
sti
ja
cmc
inc
rcll
in
mov
clc
out
bsr
addr16
clc
aas
ljmp
xor
jp
movsb
mov
jb
daa
jae
cli
jg
inc
push
mov
sub
loopne
xchg
or
stc
xor
imul
inc
stos
or
pop
xlat
lods
mov
lret
add
push
pushf
or
xchg
lcall
lcall
movd
outsb
int3
imul
xor
jge
push
lcall
mov
and
cmpl
xchg
scas
inc
sbb
mov
jmp
sub
or
sub
dec
ds
iret
sbb
cmp
pop
std
adc
mov
inc
add
or
cmpsb
or
jbe
pop
daa
subb
inc
mov
pop
sbb
mov
inc
jle
mov
js
cmc
add
es
das
sbb
hlt
stos
push
push
fdivrl
ror
jo
arpl
faddl
xchg
ljmp
adc
insl
cmp
add
pop
inc
xchg
and
jge
fidivl
inc
pop
stos
fnstsw
jg
dec
sahf
cmp
jb
cmp
hlt
xchg
incb
xor
pop
roll
fs
ret
stc
and
or
xchg
or
xor
lret
lcall
pop
cmpsb
xchg
mov
xchg
or
lret
in
ss
cli
aad
mov
in
rcrl
mull
icebp
pop
xor
cld
nop
jno
leave
push
sbb
xchg
outsb
xor
dec
aam
xchg
fsts
in
outsb
je
push
cmp
loop
adcb
test
mov
imul
lret
cmpsl
inc
subl
mov
mov
jno
out
js
mov
mov
sti
jns
or
aaa
sarb
sub
sub
enter
popa
and
pop
cmp
xchg
movsb
sbb
stc
dec
mov
xchg
sarl
xchg
es
mov
push
pop
pop
mov
inc
xor
std
vunpcklps
clc
je
xchg
pusha
dec
jg
out
in
sub
mov
xlat
lea
or
or
repnz
mov
lods
call
sbb
and
push
and
cmp
cmp
into
movsb
cltd
ljmp
loopne
in
sbb
cmpsb
aas
mov
je
mov
imul
in
fildll
dec
inc
popa
cmp
sub
mov
inc
andl
lcall
or
push
mov
pop
icebp
pop
setno
mov
testl
ret
cmpsb
dec
out
ret
add
inc
test
adc
and
mov
jb
xlat
outsb
adc
lret
xlat
jo
sbb
fsubr
push
pusha
adc
js
or
mov
cwtl
lcall
subl
stos
sbb
mov
push
lcall
xor
adc
inc
pop
xor
daa
ja
imul
cmp
jne
add
ret
outsl
mov
in
fiadds
add
cmp
test
add
aad
mov
lahf
xlat
sarl
out
mov
frstor
mov
insb
xlat
push
aam
movsb
lods
stc
and
cmpsb
pop
cmp
out
aaa
add
mov
into
pop
jae
add
cmpb
divl
mov
cmp
sbb
mov
std
aas
outsb
mov
sbb
cmp
scas
sarl
and
je
push
aas
mov
roll
icebp
or
aaa
push
aaa
cmc
lret
and
das
adc
pop
mov
cmpsl
sbb
test
push
inc
inc
mov
adc
addl
out
daa
dec
aam
fwait
xor
int3
pop
push
adc
add
xchg
movsb
repz
call
add
mov
nop
cmp
div
inc
or
jne
jecxz
sbb
push
je
and
xor
iret
and
repz
fisubs
imul
and
dec
xorl
insl
outsl
jl
pushf
push
add
in
add
dec
sub
add
adc
xorb
sarl
fs
pop
test
cld
es
push
cmpsb
pop
rolb
dec
ficompl
jb
add
ret
sub
jns
add
pusha
das
outsb
mov
dec
fisttps
pop
cwtl
ja
lds
pop
cmp
andl
pop
cli
in
mov
inc
dec
xor
pop
ds
cmp
or
pop
aad
fwait
mov
into
push
clc
xchg
jae
test
test
ljmp
das
mov
loopne,pt
xor
push
pop
subl
mov
fcompl
pop
push
adc
in
js
imul
in
mov
leave
nop
jo
mov
imul
cmc
mov
inc
lods
sub
sub
fcompl
fistps
push
mov
push
push
dec
mov
xlat
scas
pop
arpl
jnp
or
mov
pop
pop
mov
mov
mov
xor
jle
sub
mov
gs
sbb
fisubs
lds
adc
fadds
mov
dec
lods
je
add
shlb
xor
cmp
adc
pop
in
in
repz
cmpsl
jg
sbb
sbb
cmpsb
cmpsl
fwait
std
push
xor
imul
hlt
sbb
jmp
xchg
aad
push
addr16
cmp
addr16
loope
stos
mov
fsubr
sbb
fsubs
ljmp
jb
cmp
xchg
fisttps
lcall
shrl
xchg
repz
jns
jbe
cmc
adc
and
rcr
outsb
push
and
mov
aad
in
popa
mov
add
add
pop
dec
fadds
sub
or
xchg
out
lods
lret
cmpl
xchg
dec
sbb
adc
dec
mov
out
add
rolb
pop
test
hlt
jnp
pop
test
add
lock
xchg
push
ja
iret
inc
insl
insb
mov
xchg
mov
out
stos
sarl
fisubl
in
clc
sbb
loope
aad
cmp
jg
pop
push
mov
ret
or
inc
adcb
jp
lret
call
pop
add
sub
xor
pop
das
aaa
pop
iret
lods
int
gs
mov
ret
jbe
fimuls
test
xchg
out
and
je
cmpsl
pop
inc
inc
inc
fiaddl
mov
pop
cmp
xor
mov
dec
dec
xchg
jmp
fchs
jg
pop
idivl
mov
out
icebp
mov
fdivl
out
sbb
jno
arpl
fiadds
outsb
popf
push
sbb
or
dec
lret
jbe
add
xlat
lahf
stc
push
movsb
adcl
repnz
rcrl
js
or
and
out
or
xor
test
xor
loope
xor
mov
dec
xorl
lods
ja
mov
subb
insb
push
aas
lods
xor
subl
inc
add
mov
shl
fs
aaa
push
mov
orb
xor
popf
pop
std
sub
clc
arpl
jecxz
je
shlb
mov
pop
lret
inc
or
std
divl
sub
data16
pushf
pop
fsubr
repz
icebp
ret
push
jecxz
ficomps
mov
js
aam
fsubl
push
push
hlt
cmpsb
mov
stos
xchg
push
fcompl
test
lds
cmp
cwtl
rcll
or
and
or
repz
pusha
bound
dec
imul
std
push
lcall
mov
cmpsl
clc
fistps
sbb
xchg
hlt
data16
stc
arpl
popa
add
jo
and
and
ss
stos
sub
sub
sbb
jmp
pushf
and
cmpsb
loopne
notl
fsts
cltd
loop
fcmovb
xchg
pop
fdivs
aaa
mov
test
int3
imul
popf
mov
dec
insl
imul
in
or
bnd
push
mov
dec
mov
adc
sti
add
hlt
cmp
mov
adc
dec
pop
mov
xor
cmpsb
negl
jae
test
test
dec
cltd
lods
fwait
aas
add
sbb
push
fdiv
rorl
xorl
aas
das
jno
cmp
inc
fildl
add
cmp
lcall
pop
aam
sbb
hlt
aam
int3
out
icebp
inc
stc
cs
shrl
jb
loopne
cmp
in
push
sahf
ljmp
cmpsb
int
mov
jmp
mov
movsb
add
cmp
pushl
inc
int
rcrb
and
cli
mov
mov
int
lret
jmp
cld
mov
icebp
sbb
adc
or
std
aas
outsl
xchg
rorl
repz
fimull
lahf
shrl
xchg
xor
sbb
inc
pusha
outsb
jle
fwait
lret
js
in
lcall
mov
int
mov
imul
ja
icebp
orb
xor
push
xor
adc
fldl
cli
mov
ss
mov
aaa
nop
adc
flds
xchg
lahf
dec
mov
xlat
aaa
adc
ss
in
add
bound
cmpsb
push
lahf
cmpsb
pop
sub
shlb
movb
and
push
das
das
push
int
aas
imul
in
stos
jbe
xorb
out
ds
lret
mov
fldl
loopne
cld
cld
shlb
or
adc
outsl
sbb
push
pop
mov
fs
push
insl
sub
or
jecxz
or
cli
push
lock
movsl
std
xlat
scas
repnz
cmp
stos
add
stos
cmpsb
lock
cld
scas
xor
mov
pop
loop
xor
xchg
les
jns
cmp
in
rclb
mov
into
dec
orl
and
xchg
shl
add
imul
daa
or
xchg
stos
insb
push
stc
into
lods
call
or
lods
scas
insb
dec
fmull
loope
mov
push
inc
cmp
and
imul
rcll
xchg
inc
mov
arpl
add
daa
dec
roll
jb
cmpsl
hlt
adc
addr16
xchg
mov
jne
cltd
imul
loop
xchg
movb
push
inc
push
loope
mov
push
pusha
adc
xlat
scas
push
pop
sub
stos
sbb
or
stos
lock
mov
shrl
test
dec
mov
mov
dec
lods
pushf
and
call
sbb
xchg
leave
or
repz
adc
sbb
xchg
mov
adc
adc
imul
push
xchg
cmpsl
or
dec
leave
xchg
dec
lcall
inc
pop
mov
xchg
movsb
mov
add
or
xchg
cmc
orb
cmp
sub
lret
iret
shl
lahf
fs
dec
mov
inc
xchg
and
fisttps
add
adc
sbb
stos
xor
sahf
dec
pop
test
push
aaa
rcll
je
mov
out
or
ljmp
cwtl
test
xchg
cltd
cmp
js
mov
movsb
cld
test
das
mov
imul
and
mov
or
lcall
jp
pop
loopne
leave
sub
int3
pop
adc
xor
fcoml
sub
gs
jecxz
pusha
and
mov
dec
add
sub
outsl
push
loopne
fistpl
andl
pusha
aam
cltd
sbb
loop
xlat
adc
call
lods
dec
test
mov
jnp
clc
add
outsl
inc
pop
movsl
mov
mov
push
shrb
clc
movsl
enter
inc
ficoms
nop
mov
or
je
icebp
clc
push
and
insb
in
or
cmp
mov
inc
nop
aaa
cmp
push
scas
mov
adc
aas
add
inc
movsl
add
cmp
xchg
scas
inc
lahf
or
mov
scas
pop
or
mov
mov
sti
jb
in
sub
sub
xor
push
and
dec
mov
lret
dec
jno
push
loop
lret
or
lahf
xchg
scas
adc
xchg
pop
push
bound
ror
sahf
aaa
mov
xchg
mov
mov
test
sbb
jb
mov
xor
fdivrp
dec
pop
mov
push
aaa
push
push
mov
ss
popa
leave
pop
mov
mov
adc
adc
sbb
outsl
adcl
int3
sbb
aas
xchg
inc
add
in
shrb
out
jmp
pop
iret
jle
out
mov
jg
fisubrs
xchg
rcll
movsb
movsb
aaa
mov
ss
fcomi
cs
xor
imul
fadds
or
in
sub
aad
fbld
pop
out
repz
movsl
inc
movsl
cmp
xchg
push
decl
in
inc
insl
leave
pop
jle
mov
outsb
push
xor
popf
in
test
jp
sub
mov
into
popa
push
adc
cltd
xor
mov
xor
sub
stos
int
jle
cmp
cmp
jnp
add
std
popa
and
in
xchg
insb
lea
mov
out
data16
or
test
outsb
adc
shl
xchg
add
add
mov
sbb
pop
hlt
gs
imul
push
xchg
cmp
in
std
and
push
addr16
nop
cs
out
cmpsb
push
movzbl
pop
aaa
jecxz
xchg
sub
adc
fs
xor
aaa
es
mov
in
push
sbb
repz
jne
imul
sbb
or
mov
cwtl
fisttps
shlb
cmp
ss
mov
movsl
subl
mov
and
dec
pop
addr16
out
sbbl
mov
push
inc
and
iret
sub
xchg
sbb
or
jo
inc
jg
es
sub
aaa
and
shlb
repnz
aad
adc
rcll
loopne
shl
lea
lahf
imul
cmp
shll
hlt
arpl
test
js
lcall
jl
cwtl
mov
sub
outsb
out
sub
jo
dec
shrl
mov
enter
cmp
fidivrl
scas
mov
push
scas
push
cmpsl
fisttpll
lret
inc
movsl
adc
inc
or
mov
cltd
int
add
sub
dec
int
movsl
pop
popa
jecxz
dec
mul
idiv
daa
icebp
pop
push
jmp
mov
and
ja
or
ror
and
sbb
xor
sub
lret
popf
in
pop
pop
mov
ret
push
cmp
aad
jae
adc
jae
mov
inc
xor
mov
fwait
push
ret
mov
pop
fdivr
scas
jmp
ds
pop
pop
mov
cmp
das
xor
and
xchg
les
xor
rcrl
push
int
int3
mov
lock
ja
rorb
xor
cmp
cmp
nop
clc
fistpl
int
dec
jl
test
push
fwait
inc
cltd
add
sub
test
cmp
adc
mov
jb
orl
push
add
jmp
popa
and
nop
or
je
jmp
cmp
stos
lock
pop
add
push
add
pop
mov
and
dec
mov
or
test
add
mov
test
jmp
hlt
out
stos
testb
dec
mov
aam
pop
and
mov
scas
imul
sbb
dec
arpl
sub
fbld
mov
jns
lahf
shrl
sub
div
cmp
mov
test
lcall
outsb
lahf
mov
push
or
idivb
ljmp
jmp
sub
test
jg
push
xchg
jae
and
sub
arpl
and
jns
jl
mov
sbb
in
mov
mov
sbb
popa
addl
outsb
cmp
ss
jno
stos
pop
and
xchg
jbe
in
mov
adc
fs
jae
data16
cmp
sahf
sti
hlt
sahf
fistl
out
idivl
jmp
ljmp
popa
xchg
inc
push
cld
or
int3
rcll
hlt
sub
inc
in
dec
fcoml
pop
mov
insb
or
bound
iret
cmpsl
sub
in
lret
enter
push
aad
cmp
sbb
ficomps
lcall
adc
sbb
pop
xchg
add
popf
clc
sbb
inc
subl
out
popf
andl
lods
add
push
in
xchg
add
adc
inc
call
pop
nop
push
clc
repnz
adc
cmpsl
movsb
addl
xor
jo
xor
push
ret
mov
pop
iret
rcrb
imull
scas
aam
jl
push
loope
sbb
cmp
pop
loopne
sbb
rcll
add
push
int
mov
sub
jecxz
fstpt
lods
stos
fistps
scas
jns
inc
sti
pop
add
cmp
cmp
sub
push
dec
shlb
cmp
adc
cmp
jle
ret
pop
cmp
jmp
dec
mov
mov
lahf
dec
mov
icebp
pusha
and
or
add
je
sbb
stc
lahf
add
loope
add
pusha
push
inc
scas
aaa
scas
dec
push
orl
xor
inc
imul
mov
sub
int3
into
stc
inc
add
adc
xlat
xchg
movsl
push
add
cmpsl
inc
popf
fadd
jecxz
ja
imul
aad
repnz
pop
pop
mov
sub
aaa
popf
xor
jo
call
jb
fsts
fcomip
mov
bound
pop
and
loop
out
icebp
mov
adc
hlt
fsubrs
std
jb
pop
insb
bound
andl
push
es
mov
sub
cwtl
add
xlat
mov
ljmp
lcall
and
testb
mov
sbb
xor
pop
fists
bound
mov
cmp
inc
aam
jb
outsb
dec
fnstcw
movsl
and
mov
cmpsl
les
fs
jb
ret
dec
push
jge
in
sbb
fcom
lods
aaa
inc
cmc
cld
scas
mov
sbb
mov
push
mov
dec
add
push
inc
outsl
cli
cmp
mov
dec
adc
out
aad
pop
pop
data16
insl
daa
inc
xchg
lods
ja
dec
addr16
cli
sbb
scas
lahf
or
sbb
daa
jl
insb
fdiv
mov
jl
cmp
pop
sbb
pop
repz
mov
mov
cmp
sbb
outsl
pusha
ret
test
sub
mov
dec
pop
jle
add
std
mov
jno
fs
push
in
jb
test
jmp
ds
sub
mov
imul
rol
popf
enter
jmp
adc
xchg
xor
insl
and
sbb
pop
rol
sub
pop
in
mov
fidivs
xor
xchg
jns
push
int3
xchg
xchg
lcall
xor
cmc
jbe
mov
int3
jae
pop
dec
cmc
out
dec
dec
or
in
stos
outsl
in
xor
jp
and
int3
mov
mov
cmpsb
cmc
mov
shll
mov
and
push
mov
cmc
dec
iret
xchg
add
loop
mov
pop
jecxz
cmp
daa
inc
aam
lock
or
mov
ss
pop
mov
mov
lret
push
andl
fbld
mov
mov
rcl
push
fistpll
xchg
jns
mov
dec
fs
dec
dec
xchg
dec
mov
push
roll
cltd
adc
cmp
sub
clc
cmp
stos
push
push
pop
sbbb
sbb
mov
cmp
bound
push
push
insl
mov
int3
outsb
mov
mov
loop
insl
negb
leave
jmp
dec
push
push
out
lock
mov
pop
jl
aaa
cmp
inc
daa
jb
gs
mov
add
push
mov
fwait
mov
dec
jbe
sub
xor
xchg
inc
push
jg
mov
nop
test
jbe
ret
sahf
and
mov
mov
xor
iret
fcompl
adc
xchg
call
and
push
pop
cmp
jne
pop
bnd
cmp
jne
inc
out
dec
jnp
push
rorb
je
xchg
ja
enter
in
xchg
fdivl
clc
out
out
inc
fmull
addb
mov
and
shl
mov
mov
adc
jmp
inc
fwait
sarl
inc
cmpsl
or
jmp
mov
negb
xor
lea
push
and
sti
mov
ss
rclb
cmpsb
inc
ljmp
ret
test
pop
cld
mov
mov
pop
ja
xor
sbbb
fsts
cmp
pop
xchg
sbb
inc
fs
xchg
ja
cmpsl
cmp
dec
mov
inc
xchg
push
xor
mov
dec
mov
mov
in
daa
mov
mov
div
cmp
mov
imul
mov
and
xor
fisubrl
pop
add
cmp
dec
cmp
das
mov
sahf
lea
je
jle
adcl
outsl
push
mov
push
jle
mov
ja
shlb
xchg
pop
push
dec
ja
jne
loop
insl
push
gs
sahf
daa
xchg
shl
or
addl
fstl
loope
inc
mov
loope
test
xchg
lret
call
dec
xchg
sub
add
or
xchg
aas
add
cmp
jne
mov
sub
xchg
test
dec
test
out
ja
fcomps
repz
arpl
cld
jns
addr16
addr16
cmpsl
or
es
add
iret
sbb
mov
sar
add
popa
mov
or
add
test
insb
pop
mov
and
jecxz
xor
or
rep
mov
add
jl
sub
xchg
ja
in
push
or
cmc
out
cmp
sub
test
dec
jmp
lock
adc
insl
mov
in
and
not
push
pop
test
xchg
rcrb
xchg
mov
frstor
inc
jp
sbb
dec
and
aad
push
mov
or
into
mov
cmovp
pop
iret
insl
pop
inc
mov
push
sub
adc
les
fwait
ret
cmp
mov
iret
std
imull
mov
clc
xchg
xchg
xchg
cwtl
mov
test
imul
aaa
addl
fld
jns
filds
jmp
or
imul
scas
loopne
jle
nop
pop
jne
mov
jecxz
int3
addl
xchg
sub
inc
and
clc
rcl
in
div
mov
fists
mov
fdivs
push
add
jecxz
loop
or
call
addr16
pop
mov
sbb
pop
loop
adc
jns
dec
add
and
sub
xor
out
popf
fsubr
push
loope
lret
or
cmpsb
ss
lret
pop
ja
imul
mov
std
jge
lods
jno
popa
insl
jge
jne
imul
xor
gs
loopne
pop
inc
sub
mov
mov
loop
jmp
jae
push
js
sahf
int3
addr16
xchg
rclb
mov
or
xchg
sub
cmp
dec
mov
rclb
mov
xchg
or
call
andl
pushf
and
inc
sub
and
cs
stc
int
stos
popf
jg
pop
rcr
jbe
cmp
pusha
adc
insb
call
lods
in
andl
cmpsl
cmp
jge
mov
xchg
je
repnz
push
aad
push
sub
dec
xchg
cmpsb
imul
lods
or
jae
and
int
fnstcw
jne
stc
fs
push
adc
test
pop
mov
and
sar
and
and
fsts
sub
loope
outsb
cmp
add
and
sbb
xor
sbb
and
call
inc
or
and
out
mov
insl
in
mov
ja
xchg
inc
and
cld
inc
rol
pop
std
lds
insl
xchg
inc
inc
and
scas
in
aam
in
cli
fidivrl
push
jnp
fadds
dec
je
insb
push
cwtl
movb
insb
sbb
std
outsl
adc
push
cmp
sbb
sub
fists
sub
lods
fdiv
shlb
cli
add
sub
jae
insl
and
push
imul
mov
sbbl
push
imul
enter
xor
clc
ds
xchg
enter
daa
out
inc
fiaddl
add
insb
mov
ficompl
movsl
fucom
and
and
test
or
rorb
int
adcl
out
push
int
jnp
jo
push
loopne
xor
cmpsl
lods
push
cmpsb
push
inc
aaa
in
aaa
dec
lea
loopne
adc
add
cmp
mov
jne
fstpt
xchg
daa
pop
mov
cli
xchg
std
scas
jne
fs
int3
mov
push
repz
push
iret
mov
repnz
out
inc
inc
and
xor
clc
stc
fdivs
mov
aas
sti
movl
sub
cmp
ds
or
ljmp
inc
imul
outsl
imul
jae
fbstp
sub
fimull
lods
jnp
out
or
mov
xchg
inc
or
jp
popa
cs
xchg
notl
xchg
sbb
cmp
fwait
dec
loopne
xchg
cmp
sbb
mov
xchg
aaa
lea
hlt
aad
mov
cmpsl
mov
cmp
out
push
test
faddp
mov
jne
cmpsb
imul
sbb
push
mov
clc
lcall
sub
lret
sub
sub
pop
fstl
cmpsl
mov
mov
adc
inc
add
imul
sub
testl
dec
sahf
sti
adc
fwait
icebp
lods
mov
push
mov
or
inc
jle
and
push
mov
das
fldt
adc
jb
pop
adc
jg
mov
dec
mov
and
mov
pushf
jb
jb
jo
fadds
mov
int3
add
inc
in
sarl
loope
mov
add
popa
pop
aas
jmp
pop
mov
out
mov
xchg
adc
das
sub
pop
testb
call
jne
xchg
rcl
push
add
cmp
cmp
inc
inc
pop
out
pop
push
mov
push
or
add
adcb
scas
dec
fmuls
sbb
mov
cli
fs
in
stc
data16
stc
add
cmc
shlb
sbb
inc
add
mov
and
mov
pusha
xchg
xchg
pop
pop
test
cld
aad
idivl
pusha
jo
mov
push
inc
out
dec
and
fs
jbe
adc
mov
inc
dec
pop
dec
sti
and
insb
out
out
in
inc
test
in
add
inc
xor
inc
mov
xor
inc
daa
mov
repnz
fmuls
xor
dec
sub
mov
xchg
ret
scas
pop
repz
out
mov
pop
mov
dec
lea
fimull
test
bound
cmp
lret
lret
inc
dec
and
or
lods
test
add
mov
xor
xadd
fwait
movsl
mov
dec
fcompl
aad
sbb
xor
sub
mov
sbb
pmaxub
stos
mov
movsb
inc
arpl
ror
mov
cmpsl
cmpsl
adcb
xchg
jp
lahf
sbb
out
int3
mov
add
jno
sub
rorb
out
add
sar
xlat
lahf
movsl
int3
xlat
push
inc
ss
push
pop
push
push
xchg
mov
sub
lods
xchg
stos
movsl
mov
sarl
mov
xchg
dec
push
subps
leave
das
scas
or
jbe
xchg
inc
sbb
push
jb
mov
jmp
dec
push
pop
dec
mov
pop
inc
jb
sub
xchg
xchg
dec
pop
imul
or
ficoms
addb
test
add
adc
mov
shrl
sub
inc
xchg
jno
mov
aam
push
dec
xorl
insb
loopne
mov
mov
cmp
adcl
mov
inc
sub
mov
arpl
dec
or
mov
xor
lahf
into
or
xlat
bound
push
pop
mov
shlb
pop
push
mov
sbb
imul
adc
add
add
sbb
fwait
mov
pop
bound
jns
outsb
push
cmp
add
or
adc
mov
or
or
or
inc
cltd
add
addr16
inc
sub
test
sarl
cmp
cmp
fwait
mov
adc
sti
out
divl
mov
jmp
or
lahf
mov
inc
rcrb
lret
inc
iret
roll
push
pop
hlt
xchg
mov
std
xor
jle
xchg
adc
or
jo
orb
xchg
stc
daa
lds
sahf
lret
mov
mov
jp
inc
xchg
pop
aaa
sarl
inc
push
jae
daa
mov
dec
and
xlat
adc
fisubl
ss
lret
mov
mov
movsb
adc
shlb
sbb
xchg
mov
lock
pop
rol
mov
mov
xchg
shlb
jecxz
stos
inc
pop
cmp
inc
les
pop
cmpsl
lret
mov
xchg
popa
sub
bnd
fisubrl
pop
xor
dec
push
push
test
out
mov
push
or
std
inc
jp
data16
pusha
xorl
mov
dec
xchg
fistps
mov
push
jmp
cmp
jecxz
dec
rcrl
xchg
push
push
xor
and
addr16
sarb
fsubl
addr16
fnstenv
movsb
test
js
ret
push
lret
adc
sub
push
xchg
sbbb
lock
es
imul
sbb
data16
out
sbb
sbb
push
jnp
mov
xor
fimuls
sarb
inc
adc
xor
dec
ja
or
bound
cmp
cs
and
test
push
scas
divl
xor
xchg
out
lret
jns
or
mov
pop
ret
loope
pop
scas
lds
mov
test
jmp
popf
js
inc
roll
dec
sbb
aad
std
popa
adc
loop
mov
pop
nop
adc
ja
mov
xchg
pop
cli
add
outsl
rclb
inc
push
pop
inc
faddp
testb
and
sub
ds
fistl
inc
add
dec
jmp
push
addl
or
cltd
jbe
adcb
sbb
lea
jmp
and
aam
test
std
iret
mov
jp
mov
cmp
sbb
xchg
out
cli
stc
pop
add
out
in
and
addr16
jb
pop
fcmovu
ds
repnz
push
xor
or
mov
mov
sti
stos
movsb
xchg
hlt
push
aas
or
sub
mov
lea
movsb
fs
fstpl
lret
sbb
xchg
fistpl
xor
and
loope
es
pop
xchg
mov
sarb
je
ja
popa
movsb
mov
enter
enter
inc
pop
fstps
js
sti
popa
adc
jns
add
insl
hlt
jg
dec
je
mov
mov
ret
cmc
aas
mov
shrw
jbe
test
ds
pop
xchg
fidivl
enter
data16
mov
lret
mov
sbb
test
add
fucom
outsl
pushf
js
push
sbb
mov
enter
movb
xchg
std
test
xchg
push
xchg
sub
test
arpl
mov
or
ficomps
test
adc
lretw
lcall
pop
int3
push
popl
mov
testb
cltd
sbb
mov
inc
ret
clc
mov
mov
add
repnz
xchg
adc
inc
lods
mov
mull
lahf
xor
loopne
lret
ret
add
pop
rol
mov
xchg
cmp
scas
xchg
out
sbb
mov
mov
xchg
or
xchg
dec
push
pop
das
or
dec
mov
mov
and
push
std
push
or
nop
gs
jno
jl
movsl
mov
loop
xor
inc
jns
pop
divl
ds
leave
xor
ret
aam
imul
ds
mov
and
lock
lock
xor
sub
adc
sub
pop
mov
mov
mov
pop
fidivrl
push
xchg
xor
pop
mov
sbb
jnp
repz
gs
scas
inc
scas
clc
inc
add
mov
sbb
pop
scas
push
add
cli
sbb
xchg
int
mov
lds
sar
adc
add
add
inc
jbe
jns
nop
in
mov
es
cmp
push
es
push
xor
movsb
push
cmpsb
jno
adc
mov
pop
add
test
jbe
sti
mov
fcoms
dec
add
mov
jo
nop
adc
xor
jmp
or
cld
jp
add
pop
cltd
sbb
jl
pop
mov
mov
in
shrb
xor
loopne
mov
cmpsl
pop
and
cli
cmc
xor
aaa
in
and
test
mov
fstl
in
jmp
jnp
dec
jne
cmp
sub
jbe
stos
and
sbb
xchg
sahf
pop
pop
rcrl
adc
sti
insl
popf
ja
addr16
es
in
xchg
push
inc
rorl
cli
mov
mov
ss
cwtl
setb
push
and
cli
inc
cmpsl
jle
ljmp
mov
out
scas
test
lahf
dec
adcb
and
add
push
xchg
fcmovnu
xchg
sti
push
mov
sbb
or
pop
lea
xor
and
hlt
or
aas
ror
daa
hlt
movsb
push
lahf
pcmpgtb
and
adc
iret
shll
fisubl
test
ffree
mov
sub
int
pop
test
les
loopne
xchg
and
xor
add
push
scas
xor
jne
test
sub
in
xchg
in
xchg
cltd
and
or
aaa
jecxz
pop
call
flds
sub
loop
pop
adc
fmull
cmc
push
out
lds
inc
lds
andb
aas
xchg
inc
pop
dec
add
jmp
inc
inc
pusha
adc
rorl
es
jg
sub
or
divl
xchg
enter
adc
outsb
jb
nop
mov
insl
mov
mov
and
jmp
mov
xchg
jae
xor
popa
rcrb
sub
lea
mov
inc
leave
fisttpll
pop
dec
jmp
xlat
xchg
xor
xchg
add
lods
mov
pushf
add
dec
adcl
aam
loop
or
dec
pop
mov
das
cmp
inc
adc
psrld
mov
out
dec
and
fisttps
sub
jbe
dec
in
fistpll
or
hlt
cltd
sbb
mov
and
cmpsb
xchg
pop
pop
sahf
dec
dec
negb
int3
fwait
call
sarl
or
fsubs
push
inc
pushf
pushf
xor
flds
pop
or
icebp
lock
lock
pop
out
mov
in
stos
push
shrb
xor
add
ljmp
fidivrs
subl
jne
fwait
push
mov
mov
and
sbb
pcmpgtb
mov
mov
imul
inc
inc
outsb
adc
jl
addr16
or
icebp
cltd
push
sub
lea
movsl
mov
loop,pn
add
pop
dec
pop
jecxz
add
lods
into
lds
xor
popf
shll
and
js
cmp
pop
bound
inc
nop
je
pop
test
lods
jmp
adc
or
pushf
xchg
push
std
or
and
idiv
pop
imulb
mov
inc
iret
cmp
cmp
int
sub
outsb
dec
pop
ss
test
lock
out
les
sub
movsb
rcr
mov
loop
jle
scas
adc
mov
and
cmpsl
mov
cmp
shl
push
and
jp
pop
mov
not
adcb
sub
in
or
sbb
fnstenv
adc
rclb
mov
add
and
lock
nop
cmp
rcrb
neg
dec
xorl
mov
test
and
mov
add
cmc
cmp
adc
ds
or
dec
mov
mov
inc
sbb
gs
cmpsb
add
dec
adc
push
sub
sti
aas
xchg
jecxz
lcall
roll
scas
adc
lods
mov
test
ficomps
leave
shrl
test
pop
xor
xor
xor
or
shrl
mov
sub
cmp
or
sbb
mov
notl
push
pop
pop
sub
xor
in
jae
es
inc
idiv
rcl
int
imul
push
adc
bound
add
sub
aam
sub
cmp
pushf
pop
pop
out
ja
aaa
insb
js
xor
inc
and
dec
cltd
insb
cs
jmp
into
stc
xchg
lea
je
inc
daa
dec
xchg
popl
add
pop
pop
dec
jl
cmp
fdivrl
or
mov
and
pop
sbb
fildl
sub
sub
sub
std
pop
xchg
imul
lods
jmp
incl
sub
in
xor
insb
addr16
mov
dec
sbb
daa
int
lds
sbb
adc
int3
xchg
lret
pusha
mov
jbe
jmp
sbb
insl
jne
jbe
dec
jnp
mov
inc
cmc
xchg
xor
out
fwait
movsl
sub
lret
lods
cwtl
xlat
cmp
out
xchg
cmp
sarb
loopne
xlat
add
or
cmp
nop
pop
xchg
div
scas
cmc
hlt
pop
xchg
xchg
cli
out
dec
jo
xor
adc
xchg
adc
mov
add
or
pop
aad
lret
ds
sub
imul
pop
mov
push
jo
dec
push
int3
jg
clc
jbe
arpl
cmp
int3
cmp
cmp
push
cmpsb
xor
xor
jnp
data16
imul
mov
push
pop
scas
iret
out
sbb
out
mov
shll
mov
jge
lods
pop
mov
mov
in
test
cwtl
inc
daa
outsl
xor
into
cmc
mov
scas
push
inc
adcl
or
jge
pop
push
call
xor
into
aas
test
test
cli
insb
cli
mov
push
and
out
into
dec
clc
into
lahf
sub
cmpsl
lret
dec
xor
ret
push
mov
in
cmpsb
fwait
dec
decl
mov
gs
cli
mov
mov
fiaddl
xchg
and
fsub
inc
test
cmpsb
subl
bound
ja
loop
cmp
insl
movsb
data16
aaa
cmpsb
scas
jecxz
fwait
mov
lods
mov
mov
jno
popf
aas
pop
filds
mov
std
shlb
sahf
add
inc
cmpsb
mov
push
iret
stc
test
cmpsl
loopne
sub
adc
sub
std
pop
sub
xchg
mov
pop
pop
inc
mov
mov
sahf
jmp
dec
js
add
popa
mov
dec
pusha
xchg
dec
mov
sbb
push
movb
and
scas
ret
cmp
add
xor
test
iret
jno
rcrb
sub
dec
ja
adc
shlb
dec
aaa
sbb
into
sub
xchg
xchg
out
pushf
ljmp
cld
stc
push
jnp
push
sahf
cmp
es
mov
rolb
movsl
addr16
mov
out
loopne
sbb
mov
mov
mov
vmaxpd
mov
push
cmp
gs
push
ffreep
mov
adc
mov
lcall
cmp
adc
adc
ret
jle
mov
mov
mov
jno
rdpmc
fidivrs
sbb
ror
jp
mov
jno
inc
ss
in
xor
lret
call
jmp
mov
ds
dec
jbe
pusha
das
in
popf
cmp
sub
pop
fmull
adc
adc
or
divl
fs
dec
sub
cmp
lods
and
dec
xchg
or
xchg
mov
adc
mov
aaa
xchg
in
shll
iret
lcall
out
jle
jmp
addb
fwait
leave
lds
push
add
cmp
ror
push
push
jae
adc
jns
int
movsl
shll
and
les
cmp
adc
adc
and
mov
sub
sub
mov
ficomps
stos
pop
rcll
xor
arpl
fisubrl
xlat
mov
popa
loop
sbb
into
ss
mov
or
adc
or
sub
mov
lahf
and
cld
mov
add
in
sbb
jbe
xchg
repnz
or
mov
je
cmc
pop
dec
push
jnp
fbld
clc
lods
push
mov
sub
fimuls
shl
xor
ds
sahf
xchg
enter
stos
sbb
scas
xorl
into
ljmp
sbb
es
mov
mov
sub
mov
add
dec
xchg
xchg
adc
icebp
aaa
jns
jmp
push
sbb
pop
sahf
xor
push
xlat
jnp
add
sbb
pop
dec
cmc
and
inc
test
andl
out
xchg
dec
iret
mov
mov
inc
mov
mov
inc
jno
imul
cli
adc
adc
push
adc
mov
fs
std
mov
xchg
cltd
outsb
out
cmp
out
wbinvd
push
ror
test
fwait
mov
push
jp
sbb
inc
insl
int3
inc
stos
insl
sbb
jp
mov
adc
lret
and
push
xlat
loop
ja
icebp
cmp
push
or
stos
inc
push
test
hlt
flds
mov
mov
out
in
aad
mov
int
inc
imul
push
mov
or
mov
lock
imul
xor
inc
aas
add
jmp
fsub
xchg
and
jae
mov
or
out
repz
xchg
cli
dec
fwait
adc
push
icebp
idivl
sete
push
loope
adc
stos
scas
pop
ds
jge
jecxz
lret
add
stos
pop
leave
arpl
fildl
sti
or
or
cmpsb
pop
or
lods
dec
xchg
adc
hlt
push
cbtw
inc
leave
mov
sub
xchg
mov
and
cmp
stc
jae
mov
repz
sbb
notb
popa
mov
int3
ljmp
lods
loope
mov
jl
xchg
iret
orl
pop
cmpsl
sub
mov
mov
loopne,pt
xchg
outsb
push
push
movsl
push
ds
or
lods
ljmp
pop
cmpb
scas
test
xchg
test
sbb
stos
pusha
inc
mov
cmpsl
and
or
pop
jbe
xchg
lods
jecxz
inc
in
imul
xchg
shld
test
into
fiaddl
in
sbb
pop
mov
push
pop
adc
rcll
into
rclb
test
mull
mov
int
ja
jp
scas
adc
mov
icebp
fnsave
or
test
add
inc
mov
add
push
xchg
sbb
jmp
pop
shr
jle
or
cmp
adc
insb
icebp
or
pushf
inc
or
pop
jae
jnp
xchg
shlb
xchg
xchg
sarb
fimuls
dec
mov
movsb
mov
fisttpll
popf
out
mov
bound
ret
aas
arpl
jb
jns
daa
fldcw
pop
cmp
int
inc
cmp
loopne
into
sbb
leave
out
mov
cmpl
fstpt
xchg
lahf
bound
and
gs
test
pop
inc
out
clc
out
mov
popa
sahf
pop
in
inc
push
out
icebp
jl
xchg
or
pop
fucomi
aad
sub
negl
sbb
or
cld
mov
fldenv
fwait
push
and
push
les
movsb
jl
push
xchg
test
and
sarl
std
je
clc
aaa
mov
mov
dec
test
pop
test
sarb
cltd
jmp
push
mov
push
push
cltd
bnd
inc
adc
mov
jp
push
jo
aam
jno
loope
pushf
data16
fwait
mov
adc
push
ja
idivb
xor
jmp
hlt
mov
loopne
negl
mov
mov
xchg
push
cmpsl
and
inc
xor
dec
out
ret
pop
jno
jns
aad
cwtl
arpl
push
das
out
jns
fstl
ss
roll
push
shrl
add
mov
repz
dec
cld
pop
push
inc
test
add
inc
sbbb
lret
push
ss
mov
mov
mov
scas
and
mov
lahf
daa
std
or
mov
pop
aas
cmp
push
and
sbb
xchg
int3
mov
push
sub
movl
jns
sub
inc
sbb
inc
mov
push
sub
inc
call
popf
xor
fwait
jp
test
xor
leave
testb
sub
or
inc
loope
mov
or
push
push
inc
ja
loopne
popa
aam
dec
mov
mov
xor
in
in
jae
mov
subb
iret
repz
inc
mov
mov
sbbb
out
cmc
int
fs
or
jmp
push
outsb
add
xchg
mov
or
lret
cmp
inc
jecxz
push
outsb
call
fwait
jae
pusha
add
lds
mov
mov
sub
xchg
rcll
sti
data16
jg
leave
mov
push
stos
scas
stc
repz
pop
fcmove
adc
call
mov
fisubs
adc
or
pusha
ret
cmpsl
pop
fbstp
push
cmp
js
aad
sub
lcall
fadd
or
and
icebp
lcall
lea
repz
popf
dec
scas
add
pushf
ja
inc
cltd
in
sbb
lods
jne
mov
sub
jo
xchg
push
scas
outsb
out
jmp
mov
jmp
mov
rorb
sbb
cs
jae
inc
into
and
scas
mov
popf
dec
mov
push
fists
fidivrs
adc
cmp
inc
sub
and
test
push
mov
lods
mov
pop
mov
cs
das
stc
addr16
dec
dec
add
gs
lret
jbe
jno
adc
cs
xchg
and
pop
shr
shl
mov
stos
adc
jge
lcall
movsl
adc
sbb
and
je
inc
or
cltd
mov
xor
bound
dec
mov
mov
sub
mov
test
xchg
or
mov
push
mov
dec
or
lret
xchg
mov
std
or
or
dec
movsb
push
push
add
in
iret
bound
xor
or
cwtl
out
stc
fiadds
inc
mov
fdivl
pop
mov
int3
add
sub
and
pop
sub
pop
mov
jge
pslld
xchg
ja
jge
repz
popa
popf
cli
pop
leave
and
cmp
xchg
inc
add
xchg
dec
std
add
aam
dec
jecxz
cltd
pop
mov
stc
das
cltd
pop
adc
push
hlt
pop
push
cmp
ficompl
aad
daa
stos
cmc
fsub
or
repnz
cmp
stos
lods
sub
mov
pusha
xchg
dec
and
aas
pusha
leave
xor
adc
sahf
and
dec
sub
dec
int3
repnz
mov
popf
inc
negl
pusha
outsl
lods
mov
lods
inc
je
pop
inc
push
sbb
and
pusha
sahf
ja
pop
jo
jl
xchg
insl
pop
add
imul
out
popf
mov
mov
mov
adc
adcl
or
psllw
mov
mov
jg
fsubrp
mov
add
mov
sub
lods
rcl
sbb
xorb
inc
ret
xor
sub
cmp
adc
xor
xchg
into
adc
sbbb
pop
add
adc
sub
adcl
popf
fwait
cmp
inc
mov
sbb
mov
std
adc
push
adc
or
imul
icebp
and
daa
xchg
jns
adc
dec
cmp
xchg
push
inc
dec
call
popf
jmp
mov
cmp
push
sub
sbb
out
mov
imul
cmpsl
and
and
inc
cwtl
cmp
dec
push
xchg
xchg
mov
dec
jmp
jno
and
into
fildll
inc
stos
push
test
inc
push
mov
fsubr
cmpsl
mov
pusha
sbb
movsl
int3
fsubs
aas
in
jne
inc
insl
mov
fsubrl
in
lods
mov
ror
cmp
add
sub
clc
push
stc
adc
ficoml
inc
push
sub
imul
xor
fsubrs
xchg
arpl
pop
arpl
mov
enter
mov
jo
andl
test
sbb
pop
mov
or
pop
pusha
push
inc
sar
mov
shlb
icebp
sub
lea
or
jno
dec
aaa
xchg
mov
dec
div
mov
sahf
rolb
push
mov
cmpsl
sub
sbb
xor
arpl
rol
pop
jle
xchg
adc
insl
mov
xor
pop
mov
aaa
pushf
clc
cmp
inc
adc
scas
xor
nop
adcl
dec
int3
iret
dec
ss
xchg
call
xchg
into
pop
repz
cmp
fdivr
xor
xchg
std
mov
add
sub
dec
stos
ret
call
cmpsb
fisubs
jne
mov
out
cld
push
rcll
and
push
mov
mov
dec
clc
mov
sbb
mov
and
mov
ret
sub
fcoml
cmp
add
rolb
mov
cmp
xchg
nop
dec
xchg
mov
xchg
jp
mov
mov
or
and
or
bound
xchg
ret
shll
adc
push
movsl
outsl
adcb
cmpsl
sub
cmp
and
rclb
data16
sahf
and
cli
sbb
aaa
or
jae
xor
mov
addr16
xor
mov
mov
leave
fdivrs
js
xor
out
fld
nop
rcrb
or
adc
popf
pop
rorb
lock
movsl
jp
dec
inc
outsl
xchg
sub
push
outsl
mov
pop
jns
add
xor
push
inc
xchg
jbe
orl
push
test
addl
ss
movsl
lahf
ret
mov
mov
push
add
inc
or
mov
cmpsb
mov
xchg
push
data16
subl
out
or
cltd
int3
loop
scas
xchg
int
lret
cmp
sbb
pop
sbb
rcrl
fiadds
pop
jnp
and
fsts
mov
ret
lds
movsb
pop
das
and
inc
cmc
mov
popa
push
gs
jge
loopne
mov
cmp
rcr
enter
mov
repz
jnp
sbb
jns
xchg
pop
and
jl
outsl
cld
pop
hlt
ljmp
dec
rcrb
push
popf
add
adc
push
lock
hlt
mov
sarb
gs
xlat
mov
mov
mov
mov
je
pop
lahf
sbb
sub
xchg
cwtl
push
psrad
xor
popa
lea
or
call
fstpl
push
pop
cltd
jle
mov
repnz
mov
mov
xchg
xchg
xchg
or
cmp
sbb
hlt
ja
fidivl
inc
jl
and
test
jge
jo
cmp
cmp
fwait
rcr
sbb
inc
shrb
ds
xor
or
lahf
xchg
lods
sub
sahf
into
iret
sub
sub
cmc
enter
xor
rcrb
add
xor
xor
jmp
jl
push
out
daa
jmp
leave
mov
add
cmp
mov
add
push
mov
xor
inc
xchg
imul
lahf
lods
and
popa
fwait
pop
mov
jle
sahf
cld
lods
add
add
sub
adc
mov
push
adc
xor
test
or
testl
xor
mov
ja
les
aam
inc
sahf
aaa
adc
and
adc
xchg
das
test
inc
aad
pushf
xchg
xchg
popf
mov
adc
cmpl
pusha
call
mov
in
out
mov
movsb
sbb
xchg
js
repnz
xlat
jno
add
mov
jmp
cli
stc
jecxz
mov
lahf
jns
push
pop
addr16
aad
imul
cs
popa
jne
dec
inc
insb
mov
push
cmp
stos
or
outsb
jb
lods
xor
pop
xchg
xchg
dec
mov
sarb
das
jb
pusha
inc
test
adc
fs
cmpsb
dec
push
imul
pushf
inc
jnp
mov
sahf
fldt
aas
jmp
je
xchg
add
jmp
in
jo
lock
pop
into
pop
jo
pushf
cmp
into
jle
bound
outsl
aad
xchg
ficompl
cld
stc
mov
repz
xor
inc
mov
jbe
jns
xor
lahf
pop
es
add
lds
lods
lcall
bound
jno
das
adc
insl
pop
cmpsl
enter
add
dec
inc
inc
push
iret
lahf
popf
outsl
aad
ds
sub
sbb
mov
push
mov
jp
inc
pop
movsl
hlt
xchg
das
incb
push
jp
mov
pushf
xor
xor
lock
jecxz
adcb
sub
xchg
fstl
mov
and
and
xorl
sbb
mov
cmp
fwait
dec
sti
or
mov
insb
pop
fbstp
ret
leave
mov
and
mov
pop
test
arpl
cmpsl
push
stc
xchg
insb
arpl
sti
iret
incb
add
sub
push
sahf
or
adc
ret
enter
pusha
movsl
in
in
xchg
dec
mov
push
pop
aad
repz
popa
sbb
out
pop
mov
mov
dec
mov
pusha
cmp
sarl
test
mov
pusha
out
pop
xor
shl
cmp
xlat
loop
dec
bts
jmp
add
ss
and
stos
data16
xor
es
scas
mov
dec
je
mov
fs
dec
test
lret
jp
mov
clc
sbb
mov
add
push
cld
xchg
lods
sub
lahf
and
testb
xorb
jge
gs
dec
and
and
imul
push
insb
shrl
pop
or
psubw
sbbl
arpl
ss
out
add
sub
ret
pop
cmc
cli
imull
xchg
cmp
add
add
sbb
ss
imul
out
iret
sahf
lock
push
pop
xor
ja
cwtl
add
jo
cmp
xchg
dec
rclb
or
xchg
fistpl
sti
pop
mov
flds
and
adc
sbb
in
mov
cwtl
inc
xchg
mov
jge
into
clc
lods
cs
push
pusha
out
cmp
jno
out
cmp
lcall
test
rcr
movl
and
push
shl
xor
mov
es
data16
inc
mov
mov
dec
xchg
inc
xlat
and
sbb
scas
fwait
test
sbb
mov
xlat
js
int
or
daa
sbb
shrb
scas
adc
movsl
insb
lods
inc
adc
mov
out
sbbb
insl
jp
inc
jle
cmp
xor
subl
mov
mov
pop
pop
jo
int3
mov
sbb
and
push
cld
fcmovne
int
test
and
sub
xor
mov
in
lret
dec
es
jge
inc
mov
mov
pop
icebp
adc
push
cmp
or
test
or
shl
stos
pop
mov
gs
int
xor
pop
and
ret
hlt
stos
or
and
inc
ljmp
pop
cmc
cmp
popf
xor
cmp
push
sub
test
push
test
add
adc
mov
ret
mov
in
adc
fidivl
push
mov
insb
mov
add
pop
leave
dec
push
in
xchg
xchg
jns
popa
inc
pop
push
dec
adc
xchg
push
ret
xchg
xorl
inc
cmp
xchg
out
xorl
outsl
cwtl
jnp
xchg
push
sub
cld
fisubrs
cmp
push
mov
xchg
dec
stos
lods
nop
out
xchg
js
jns
push
sbb
lret
dec
mov
mov
scas
bound
push
cmp
leave
cmp
data16
pusha
lea
cmp
js
call
and
xchg
add
adc
dec
repnz
leave
push
adc
or
loop
enter
and
sub
push
pop
and
bound
daa
clc
add
out
mov
xchg
pop
add
mov
stc
imul
and
dec
pop
mov
int
dec
inc
test
movsb
imul
fcmovbe
cmpsb
sub
push
mov
xor
sar
insb
and
xlat
dec
sub
cs
imul
sarl
lahf
or
mov
cs
dec
sahf
stc
lahf
fstl
movsl
dec
stos
pop
test
lea
stos
cwtl
cli
mov
call
aam
rcrb
adcl
mov
incl
lea
or
sub
pop
push
incb
stos
lret
lcall
mov
cli
lds
imul
das
or
mov
ret
addb
add
mov
ljmp
sbb
pop
adcb
xchg
cmp
dec
imul
sbbb
pop
loope
loopne
and
xlat
scas
scas
les
jl
lcall
pop
stos
and
push
mov
inc
mov
scas
inc
push
add
inc
sub
adc
dec
fisubl
jbe
test
lds
test
push
sbb
ss
decb
roll
mov
push
jb
orb
clc
popl
dec
xor
adc
jmp
inc
inc
add
in
and
icebp
add
xchg
ja
icebp
jne
cmpsb
mov
leave
out
out
push
aam
loopne
test
jns
inc
out
dec
fisubs
cmp
lcall
dec
iret
ja
pusha
jnp
arpl
cmp
iret
xor
js
add
sub
add
imul
pop
jmp
cmpsl
jne
fdivs
aaa
and
or
popa
in
enter
jbe
adc
mov
subb
mov
cld
and
or
adc
jns
fsts
sarb
shlb
pop
mov
aas
and
inc
mov
into
repz
iret
adc
and
sub
int
cwtl
fdivl
out
xchg
rcll
sbb
rcpps
mov
pop
adc
and
pop
mov
pop
fcomp
icebp
add
xchg
adc
sub
mov
pop
cmp
mov
out
mov
mov
sbb
or
iret
cs
sar
cmc
into
mov
jae
and
add
in
incb
or
pop
sti
mov
pop
divl
inc
mov
push
mov
lcall
xchg
sub
mov
dec
nop
lods
clc
sbb
lock
int3
jae
scas
or
stc
mov
mov
mov
call
adc
jl
sbb
push
icebp
repnz
popf
pushf
jp
call
jnp
mov
mov
lret
rcrb
or
stos
mov
or
pop
pushl
std
test
push
jge
or
sahf
jb
fnstcw
clc
aas
xlat
jge
pop
cmpsb
cmp
out
daa
into
adc
fldenv
jecxz
clc
mov
jnp
xchg
adc
cmp
add
add
cmpsl
lret
pushf
inc
jns
popa
lcall
push
mov
xlat
pop
icebp
aad
pop
and
sti
push
pop
adc
ss
sub
sbb
dec
fcoml
cmc
adc
pop
or
fcomip
push
cltd
dec
imul
pop
mov
enter
push
je
aam
outsl
aad
in
cmp
stos
testb
sbb
outsb
mov
outsl
cmpsb
nop
pop
push
sub
adc
fmul
testl
and
pop
int
leave
sbb
cs
ljmp
test
ja
jge
lea
in
dec
or
add
gs
in
add
add
out
cld
outsb
cli
sbb
movsl
cs
fcomip
xor
adc
push
xchg
push
sahf
inc
roll
mov
jb
lret
stos
push
sbb
popa
or
das
pop
and
repz
cltd
xor
mov
adc
pop
sbb
xor
sub
rolb
lahf
sub
sub
xchg
pop
lss
cmpsb
mov
in
jmp
sbb
inc
mov
cli
dec
mov
mov
cli
je
jnp
outsl
add
call
jnp
jge
cli
add
negl
out
rcll
add
dec
cmc
insb
stc
pop
mov
xchg
js
sbb
subl
xorl
sub
lock
repz
ficoml
repz
push
pop
dec
adc
ret
xchg
cld
mov
mov
aam
lcall
clc
inc
popa
sub
or
adc
out
je
pop
fs
ljmp
cmpsb
xchg
mov
mov
rclb
incb
adc
ret
dec
movsb
negl
xor
inc
or
jle
data16
fildl
cmpb
je
scas
dec
movsb
outsl
ret
sub
loop
out
push
stc
cli
adc
mov
lahf
push
sub
pop
push
jp
mov
sub
mov
push
in
icebp
cltd
and
inc
lret
or
sbb
outsl
out
stc
std
ret
stos
mov
mov
dec
xchg
out
xchg
push
div
in
sub
sbb
dec
pop
popa
cmpsl
and
add
sbb
mov
jle
sbb
stc
pop
insb
mov
addr16
in
sub
dec
cltd
addr16
stos
in
dec
cmp
sub
pop
sub
iret
test
push
out
in
cmp
das
out
xchg
dec
pop
xor
mov
jb
std
in
jno
int
sti
pop
lcall
mov
mov
pop
lods
je
sbb
and
sub
frstor
push
sti
out
jle
xchg
add
arpl
inc
sub
add
fxch
idiv
add
pop
adc
sub
pop
in
call
pop
add
lods
sahf
xchg
mov
mov
adc
push
mov
add
in
out
sub
mov
sbb
iret
or
mov
xor
in
in
pop
sub
and
sbb
inc
ja
ret
add
ret
or
inc
xor
out
xor
mov
lods
loop
inc
daa
mov
pop
test
mov
stos
mov
shrl
cld
mov
push
sbb
or
mov
pop
lock
and
test
lcall
loope
outsb
push
scas
mov
xchg
and
pop
push
mov
sbb
repz
fisubrs
inc
pop
pop
adc
jl
daa
push
clc
sbb
cmpsb
mov
xchg
ret
call
pop
daa
aaa
or
jge
or
clc
mov
inc
mov
sbb
shr
stos
lret
aad
mov
pop
cmp
add
outsb
scas
push
jns
rorb
mov
ss
dec
arpl
lea
je
test
ss
add
jnp
sub
adc
pop
or
cmp
add
mov
jno
aaa
mov
loop
mov
clc
or
arpl
sti
push
stos
jp
mov
lret
jo
pop
ja
sub
sub
jno
cmp
stos
push
mov
add
test
xchg
or
and
in
stc
test
movsb
pop
dec
imul
mov
idiv
xchg
add
lods
adc
add
jno
shr
lods
adc
shr
pop
ret
pop
xor
dec
out
jle
mov
sub
jnp
sub
sbb
push
mov
cmpsb
jno
jo
out
fadd
sbb
push
scas
ds
add
arpl
push
add
sarb
insl
mov
dec
mov
movsb
sub
fisttpl
jmp
sub
scas
or
push
mov
xchg
xlat
ja
hlt
dec
xchg
adc
cld
lret
iret
mov
in
out
mov
jbe
aas
inc
lret
xor
cmp
mov
arpl
icebp
inc
add
fs
mov
enter
rol
jp
xchg
mov
add
push
mulb
lock
in
loopne
arpl
mov
dec
loope
or
and
mov
ror
adcb
cmp
lcall
dec
mov
lea
shr
popa
lods
out
insb
xor
lods
jbe
mov
ret
mov
mov
cld
lret
iret
sbb
sub
icebp
shr
pusha
mov
mov
sbb
inc
subb
jb
jle
adc
test
jp
out
js
pushf
mov
mov
add
adc
fimuls
xchg
ljmp
jb
aam
shlb
adc
jmp
mov
jle
into
adc
xor
cmp
mov
adc
push
mov
les
test
cmc
addb
or
lock
jg
xchg
push
fstpl
sub
insl
pop
mov
mov
out
mov
cmpsl
xor
sub
popf
inc
je
adcl
hlt
sti
fidivs
incb
sub
int3
imul
cmp
dec
add
xor
xor
cmp
pop
sbb
xor
push
add
pop
shrl
adc
call
push
jae
clc
jecxz
xlat
in
jge
dec
into
xor
dec
and
cmc
sti
mov
test
fistpll
mov
mov
insb
inc
xor
push
repz
pop
inc
inc
cmp
adc
lret
sub
mov
xor
and
and
mov
and
mov
mov
mov
ret
jg
or
pop
cmp
xlat
rcrb
sbb
fisubl
not
inc
inc
xor
push
jle
inc
push
mov
insl
aam
arpl
in
mov
in
insb
push
mov
stos
cmp
xlat
mov
idivl
aam
pusha
inc
ja
push
xchg
mov
adc
jns
mov
nop
push
cltd
push
popa
dec
cmp
lds
dec
loop
cwtl
sub
push
cld
mov
outsl
mov
ret
outsl
lods
jge
shr
mov
mov
jne
cmpsb
add
xor
cmpsb
aam
dec
cmp
mov
sbb
fdivrs
aas
dec
stos
xor
mov
lret
sbb
into
push
pop
mov
cs
mov
adcb
mov
negb
jge
lcall
xor
xchg
adc
dec
out
xchg
pop
mov
adc
and
xlat
aaa
lds
call
mov
les
dec
lret
xor
inc
push
mov
sti
divb
jl
loop
jo
in
pop
ja
scas
inc
cmp
push
js
jl
adc
xchg
sub
pop
cmp
ret
jno
aam
jmp
nop
mov
rol
js
adc
les
sub
bound
cmpsb
xchg
ss
out
add
loop
mov
cmpsl
inc
out
addr16
lret
push
ljmp
in
ljmp
out
cmp
dec
xchg
or
div
xor
xchg
mov
add
out
out
nop
cld
add
sub
or
sti
jge
adc
lret
jae
push
fst
sbb
es
les
jp
ret
lahf
into
cmpsl
mov
rcl
sub
rorl
and
ret
cmp
xor
testb
xor
les
xor
inc
cmp
ret
pop
leave
ror
rolb
jns
stos
jbe
fisubs
or
dec
jp
xchg
out
pop
ds
push
gs
push
inc
pushf
inc
loope
scas
jo
sub
sbb
pop
xchg
xor
mov
push
lock
cmp
ja
and
dec
lock
xchg
ss
dec
jae
or
out
enter
movsb
rcrb
jg
pop
jle
adc
pop
dec
out
push
sarb
adc
dec
xchg
testl
cmp
or
sub
push
out
popf
inc
cs
fdivs
test
inc
mov
inc
fmul
lret
mov
popa
mov
xor
sbb
fwait
hlt
mov
std
jbe
mov
cmp
lods
scas
clc
mov
aam
shll
mov
mov
lods
adc
scas
sti
sub
montmul
cmpsb
add
jl
decb
ljmp
sbb
pop
or
mov
bnd
pop
lcall
les
sub
push
pop
iret
and
arpl
mov
pop
sti
mov
dec
cmp
adc
inc
call
xchg
pop
ss
xchg
jae
dec
cmp
call
ret
bound
push
sti
faddl
cmpsl
imull
stos
pop
lds
push
repz
inc
dec
addr16
dec
add
stos
pop
mov
pop
jmp
mov
inc
pop
mov
xor
insl
cltd
out
es
dec
or
xchg
xchg
cld
mov
pop
cwtl
iretw
pushf
adc
movsl
inc
cmp
pop
cmpsb
mov
mov
push
or
mov
mov
std
mov
xlat
ret
pop
or
hlt
addr16
fdivl
jmp
xchg
out
mov
or
xor
xlat
testb
enter
push
fbld
inc
sub
push
add
adc
push
mov
std
push
mov
loopne
mov
leave
icebp
das
sti
orl
das
push
popa
mov
jmp
pop
adc
hlt
movsb
jg
bnd
jecxz
rcll
addr16
sub
mov
add
jo
in
add
pop
add
popa
les
aad
mulb
iret
and
dec
push
and
pop
mov
and
mov
inc
aad
loopne
and
mov
dec
movsb
psadbw
mov
nop
push
jl
xchg
sbb
cli
add
sahf
fcmovne
mov
das
pop
movl
lea
xchg
xor
jge
jns
lret
fimuls
out
into
roll
mov
adc
fs
xor
sub
jne
and
inc
and
add
insl
mov
cmc
mov
mov
cltd
in
fildl
push
std
pop
dec
bound
movsb
mov
clc
icebp
mov
cwtl
add
push
dec
dec
mov
aaa
adc
inc
out
dec
xchg
and
push
push
inc
lods
cmp
sbb
sub
outsl
sti
add
mov
xchg
test
in
push
jecxz
ret
inc
neg
add
and
mov
test
add
je
sahf
xor
mov
xchg
mov
cld
aas
ret
mov
ds
ffreep
dec
mov
dec
out
push
shll
push
lcall
inc
cmp
mov
pop
xor
add
ja
in
xchg
mov
lock
push
push
dec
add
out
clc
dec
jmp
and
push
dec
dec
pushf
xchg
je
sbb
ret
xchg
icebp
xor
cli
jae
pushf
fwait
roll
sysexit
cmpsb
out
cmp
sbb
add
sub
dec
test
std
js
pop
incl
push
push
clc
push
data16
sbb
mov
pop
lock
rcl
fwait
dec
mov
xchg
fiaddl
push
lret
imulb
loopne
cmp
inc
push
lret
imul
and
jno
mov
sub
mov
movsl
mov
sub
sbb
pop
cmp
in
or
or
lcall
adc
pop
icebp
or
leave
push
test
rcrb
dec
fidivrs
out
daa
cld
pop
sbb
hlt
inc
in
hlt
lock
add
call
cmpb
scas
cmpsl
fisubl
mov
add
rol
push
int
aaa
loope
ret
adc
iret
pop
inc
sub
daa
je
dec
loope
cmp
outsb
push
and
aaa
and
mov
jns
test
pop
lcall
int3
mov
push
pop
mov
sub
sbb
xor
out
ljmp
sarb
mov
cmovae
ret
push
stc
dec
mov
pop
cmpsl
pop
inc
xchg
cli
pop
or
cmp
jno
lcall
and
pushf
pop
es
cmpsb
jmp
nop
mov
jb
pop
rcrl
das
add
adc
mov
lock
bound
jecxz
inc
push
js
loopne
adc
xchg
sarb
out
xor
sub
pushf
cmp
iret
mov
sahf
mov
xchg
scas
and
adc
addb
xlat
sub
push
add
add
fucomi
push
lock
rorl
jge
in
stc
inc
mov
pop
add
xor
inc
rclb
sub
out
jns
jecxz
adc
mov
lahf
cli
je
and
clc
mov
add
daa
int
std
ljmp
lock
cmp
shlb
or
in
adc
into
or
imul
int3
repnz
cld
mov
mov
xor
out
rorb
int3
mov
mov
sahf
sub
sub
mov
roll
fnsave
lret
push
mov
test
test
gs
jns
inc
inc
sub
popa
jnp
add
lahf
mov
mov
mov
movsb
jae
fs
xor
lds
jl
push
int3
sahf
inc
dec
lods
inc
cltd
cmp
dec
cld
mov
dec
inc
xchg
pop
and
mov
pop
in
ja
dec
rcrl
negl
xchg
gs
dec
test
pop
or
rorl
lret
jge
out
xchg
push
cs
inc
clc
dec
dec
int
leave
jne
jmp
sbb
push
mov
push
cmp
push
mov
pop
cmp
in
xor
loope
jo
movsl
inc
leave
and
dec
add
xchg
lock
push
dec
out
push
gs
mov
and
arpl
stos
adc
cs
cwtl
popf
rol
push
lret
add
jg
jmp
mov
mov
popf
imul
jns
fs
inc
add
sbbl
ret
jmp
mov
mov
xlat
dec
cld
test
xchg
push
in
add
and
pop
xchg
mov
xchg
xchg
stos
xchg
jae
sbb
mov
cmp
pushf
or
add
cli
or
push
and
push
mov
scas
xor
lahf
and
mov
cld
lds
mov
in
int
xor
out
std
into
sbb
and
andl
pop
adc
pop
pop
icebp
movsl
and
shl
mov
and
lds
out
in
mov
or
js
clc
jmp
cmpb
xchg
xchg
rcrl
add
movsb
fs
push
mov
popa
xchg
adc
out
mov
push
stc
push
sbb
sub
daa
push
dec
aas
jp
cmp
addr16
sbb
add
mul
mov
xchg
cmpsl
push
pop
insl
jl
jg
mov
xchg
jbe
dec
data16
and
jg
cmp
xor
mov
adc
imul
cmpsl
xchg
push
cwtl
xchg
out
add
jecxz
add
mov
sub
pop
push
mov
mov
lahf
repnz
movsb
lds
xor
mov
or
pop
push
mov
and
dec
mov
pusha
shlb
jbe
xor
mov
push
xchg
inc
test
movsl
pusha
mov
out
cli
push
mov
into
popa
jg
xchg
les
pop
les
and
popf
pop
mov
mov
jo
into
adc
fisttpl
fs
xchg
cmp
cli
dec
add
adc
mull
mov
fcmovu
xchg
adc
in
add
xor
insb
cmp
and
cmp
cld
pusha
enter
rcr
roll
std
in
int3
lcall
sbb
push
ficomps
mov
ss
test
sub
bound
loope
push
dec
lret
insb
fucom
and
outsb
enter
out
cmpsb
mov
fdivs
xor
ja
add
push
enter
movsl
cwtl
fs
arpl
movsb
jae
test
repnz
xorb
call
mov
repnz
in
fsubr
or
out
test
pop
xor
repz
cmp
icebp
xchg
sub
dec
add
mov
testl
pop
arpl
add
sbb
pop
fisttps
mov
insb
xor
dec
lahf
addl
aad
mov
lock
ljmp
test
sub
loopne
sbb
push
xlat
lcall
xchg
add
in
xlat
addl
cltd
pop
push
inc
jg
inc
adc
mov
push
jb
mov
pop
shlb
fcomi
cmp
popa
mov
dec
sbb
pop
cmc
dec
das
lcall
mov
and
jns
xor
into
push
leave
sbb
mov
jp
push
jmp
std
fwait
ret
sub
cltd
pop
pop
stos
rol
data16
cmp
pop
out
shll
in
mov
movswl
xlat
shrl
jns
xchg
into
movsl
insl
jno
add
jmp
fistpl
iret
and
cmpsb
jo
adc
jle
jmp
incb
mov
mov
cmp
ds
push
insl
popa
dec
lea
sbb
sbb
stc
mov
data16
arpl
jae
hlt
jp
sub
jno
cltd
mov
out
int
sbb
cwtl
pop
dec
xchg
out
or
add
das
adc
fwait
subl
xchg
jns
dec
test
cmp
daa
jae
pop
sbb
cmp
loope
call
not
and
repz
and
mov
inc
pop
jmp
movsl
jo
push
loop
aas
mov
mov
cmpsl
inc
xchg
out
mov
xor
cmpsb
xchg
dec
push
inc
outsl
movsl
xor
sbb
adc
adc
dec
lds
xlat
enter
pop
imul
xchg
cld
push
iret
leave
call
ljmp
lock
cwtl
dec
aas
pop
cmpsl
adc
fst
mov
cwtl
xchg
ljmp
mov
dec
push
push
adc
mov
je
movsb
xor
ss
jae
xchg
data16
enter
push
sahf
inc
mov
int
pop
sbb
leave
pop
push
sti
push
inc
call
scas
mov
pop
mov
adc
out
stos
pop
pop
test
cmp
xchg
outsb
mov
or
gs
pop
mov
and
xor
xchg
adc
jns
aad
xchg
data16
jecxz
pop
dec
pop
lcall
outsb
push
add
faddl
pop
inc
dec
push
inc
jle
pop
and
jecxz
lds
jns
orl
ds
cmp
sub
mov
test
je
and
mov
cmpsl
inc
sbb
movsb
inc
sbb
push
cmpsb
das
js
adc
movsl
mov
dec
das
je
cmc
mov
or
ficompl
cld
aad
lods
lods
cwtl
pop
sbb
cltd
add
lret
iret
test
pushf
inc
roll
lahf
stos
sbb
inc
sub
push
sub
xorb
rcl
and
scas
mov
xchg
jo
fwait
cmp
and
fwait
out
in
imul
add
mov
xchg
js
sbb
add
xchg
adc
fwait
stos
push
push
push
push
jl
sub
inc
cmpb
xchg
mov
add
xorb
add
into
lahf
into
mov
lahf
push
add
and
cmpsb
mov
insl
push
mov
push
out
inc
xor
dec
mov
mov
adc
fs
adc
addb
aaa
or
pop
add
cmp
xor
push
insb
mov
out
test
imul
setnp
inc
mov
adc
lds
and
je
push
inc
jle
xchg
stc
or
out
mov
sbb
ret
arpl
aaa
inc
cmpsl
inc
pop
or
mov
fists
pop
push
mov
out
sbb
decl
mov
cwtl
scas
cli
adc
adc
jne
rcrb
jecxz
sti
adc
inc
mov
dec
mov
stc
mov
addr16
xor
lds
stos
mov
scas
pop
in
mov
xor
cmp
adc
sbb
ret
sbb
sbb
xchg
fists
aam
ret
xlat
xor
inc
cmp
sub
pop
je
inc
mov
inc
sub
jg
bound
test
in
dec
pushf
xor
sbbl
mov
push
dec
jne
fnsave
jge
sbb
dec
std
pop
mov
sbb
dec
or
add
popa
cltd
push
jmp
outsl
push
repz
jle
adc
mov
out
jne
dec
inc
mov
mov
into
adc
and
mov
xor
aas
out
ljmp
pop
inc
xchg
nop
mov
and
aaa
test
add
sti
push
mov
gs
inc
push
add
nop
jne
jns
dec
pusha
sub
call
mov
push
xchg
push
add
inc
fcmovne
data16
dec
sbb
ficoms
mov
xor
pop
jae
int
pop
inc
cwtl
sar
ret
pop
jo
sbb
mov
xchg
out
sbb
mov
scas
daa
es
fs
lods
push
mov
inc
rolb
sub
dec
shl
hlt
insb
xchg
minps
lret
iret
xchg
loopne
xchg
dec
fsts
xlat
xor
mov
insl
sbb
ficompl
jbe
add
xor
and
in
sbb
push
imulb
pop
mov
xorl
aad
xchg
jno
js
dec
sub
loope
jno
dec
sub
ja
mov
pop
jge
jne
xor
notb
stc
add
clc
jl
cmp
xchg
or
mov
loopne
pop
pop
icebp
add
int3
ss
jae
xchg
movsb
mov
mov
test
mov
pushf
mov
sbbl
pop
mov
dec
mov
xor
mov
cli
push
add
fdivrs
test
fistpl
mov
ljmp
lea
sbb
dec
or
ret
pop
xchg
in
sub
xchg
xlat
and
pop
jmp
mov
sahf
stc
add
scas
cmp
cwtl
pop
cmpsl
arpl
pushf
dec
and
or
stos
cmp
in
das
out
mov
lret
shll
push
scas
clc
jle
xchg
cmp
iret
shl
out
dec
push
out
lret
pop
xor
inc
or
pop
lods
mov
fwait
add
adc
pop
xor
fcompl
xor
adc
addr16
mov
mov
mov
xlat
aad
jecxz
cltd
lea
icebp
push
dec
xchg
ljmp
sub
es
leave
das
nop
dec
test
adc
mov
and
xchg
sahf
hlt
pop
fstpt
sbb
out
call
xchg
inc
xor
ror
cmp
std
lret
mov
lret
pop
pop
mov
mov
in
fbstp
movl
sub
imul
jmp
sbb
lcall
xchg
scas
inc
mov
push
sub
arpl
pop
sub
clc
jb
mov
cmp
shrl
jno
xor
jb
fisttps
cltd
js
aas
daa
sti
xchg
arpl
pop
mov
jns
pop
lret
xchg
jg
adcl
sbbl
lcall
adc
test
xor
or
dec
cli
cmp
imul
cmp
jne
in
iret
test
fs
dec
mov
push
rolb
xor
xlat
inc
xor
and
out
jo
or
adc
aad
das
pop
sub
or
sbb
lcall
cmp
pop
mov
mov
jne
or
adc
cmpb
xchg
dec
cmp
in
popa
push
sub
mov
mov
ja
jae
xchg
cmp
add
loopne
mov
in
jge
push
jle
repnz
jae
sbb
adc
pop
mov
adc
mov
add
push
mov
sbb
lea
lds
xchg
dec
fsts
iret
push
out
add
xchg
mov
mov
cld
stos
mov
xchg
lock
mov
outsb
jmp
in
aam
dec
cltd
hlt
dec
fcomps
das
mov
test
mov
mov
jge
frstor
mov
lea
lds
jbe
push
imul
mov
push
outsb
jbe
xor
imul
inc
fwait
cmp
test
clc
call
sub
cs
popa
adc
mov
push
fstpt
inc
push
mov
inc
push
rcl
inc
insb
pop
test
lret
pop
ja
hlt
dec
mov
push
sbb
jecxz
push
adc
xor
fdivl
clc
btc
jne
dec
mov
ja
out
fidivl
jo
push
xor
pop
in
xor
add
sbb
enter
lds
add
sbb
inc
aam
dec
push
inc
sub
mov
mov
xor
outsl
add
push
out
js
leave
xchg
insl
ss
xchg
out
push
es
mov
out
mov
loope
addr16
mov
fst
pushf
sarl
out
aaa
cltd
aam
xchg
test
jo
xchg
jp
add
push
icebp
dec
out
fcmove
insb
test
jle
mov
int
inc
xchg
mov
xorw
cmp
lods
sbb
jb
pop
cmpsb
call
push
test
scas
mov
andl
jmp
xor
ds
inc
ror
cwtl
or
aaa
mov
xchg
pusha
and
dec
mov
out
out
sbb
add
daa
mov
inc
scas
cmp
cmc
xchg
mov
sarl
dec
mulb
in
pop
stos
into
movsb
jge
mov
inc
inc
cmp
cmpsb
push
mov
push
jecxz
pop
stc
movsb
mov
mov
add
es
jo
dec
test
icebp
subb
sbb
adc
sub
lcall
mov
mov
addr16
cli
xchg
xor
xor
popa
jne
mov
fistps
dec
cmp
imul
mov
add
or
lock
fcoms
filds
daa
push
or
sub
pop
xchg
ret
jmp
cmp
fistpll
push
push
or
mov
gs
inc
xor
ret
cmpsl
mov
sar
jmp
or
cli
fs
aas
dec
mov
fstl
xchg
sub
gs
es
dec
dec
add
push
jo
mov
out
stos
cmp
xchg
mov
mov
inc
xlat
fcomi
inc
cmpb
sub
cmpsb
test
fninit
add
xchg
arpl
insb
test
mov
movsb
mov
and
sbb
rcl
fs
das
jecxz
nop
rolb
and
xchg
ds
add
aas
pop
and
add
rcl
jmp
iret
jle
mov
or
ljmp
sbb
or
sub
pop
lret
mov
push
push
xchg
jbe
rcrb
mov
imul
pop
jno
scas
sbb
popa
push
mov
mov
out
push
arpl
sub
lret
roll
dec
pusha
and
xchg
cmp
sbb
jmp
sub
jmp
xchg
pushf
in
mov
shrb
xor
pop
jmp
adc
insl
outsl
xlat
jecxz
incl
adc
fiadds
add
je
mov
sub
mov
es
imul
adc
out
adc
cltd
jo
mov
and
sub
pop
insb
popf
sbb
xchg
pop
add
xchg
jae
xor
mov
push
or
jl
jo
cltd
out
incl
or
xchg
fdivrs
fiaddl
dec
inc
outsl
inc
call
sub
lock
aam
sbb
scas
xchg
dec
sub
add
mov
push
pop
and
sbb
es
insb
int
sti
jle
mov
push
push
sar
jmp
in
out
scas
mov
repz
sub
shrb
and
push
inc
in
pusha
insl
dec
stos
xchg
xor
or
popa
xor
gs
sbb
imul
dec
vpmullw
push
pushf
mov
add
xor
lds
cmp
mov
pop
xchg
lods
dec
dec
pop
or
aas
int3
jge
fs
and
ret
bound
cmp
cmp
imull
mov
mov
cli
or
xor
jne
pop
stos
popf
repz
mov
in
mov
pop
in
negb
mov
es
imul
mov
nop
mov
adc
inc
adc
xchg
sbb
push
or
jle
cld
in
shrl
clc
orl
xchg
fnstsw
xor
fdivrs
sub
pusha
out
pop
loope
aaa
xor
imul
jns
mov
dec
adc
in
fistpl
clc
adcl
inc
dec
inc
push
aam
sub
dec
push
cmpsl
sbb
xchg
stos
inc
testb
iret
push
lcall
push
xchg
gs
iret
dec
daa
sahf
rcll
and
jb
mov
or
cmp
jae
enter
xchg
mov
fadds
adc
pop
inc
in
push
pusha
xchg
dec
aad
inc
fnstcw
repz
hlt
test
in
sbb
dec
loop
rorb
mov
scas
icebp
test
addr16
clc
outsb
jp
gs
mov
inc
test
jo
lret
mov
icebp
jns
jne
ja
or
cmc
mov
sbb
inc
shlb
out
inc
pushl
in
outsb
int3
pushf
jp
iret
in
stc
mov
add
sub
popf
movsb
rol
and
xchg
add
test
repnz
xchg
xor
movsb
and
std
mov
ret
out
movsl
push
mov
inc
push
jl
enter
aas
dec
leave
fsubrl
inc
jge
lcall
scas
mov
std
mov
mov
jmp
dec
xchg
dec
out
xchg
dec
mov
cltd
xlat
repnz
sbb
mov
jge
cltd
xor
mov
aad
dec
jmp
mov
jmp
jne
loope
aam
leave
loop
mov
mov
push
inc
mov
mov
pop
inc
or
mov
repnz
pop
rorb
in
popa
cld
dec
fistps
dec
sbb
popf
sbbb
push
mov
lahf
lret
mull
ja
lret
dec
add
shrb
xchg
cs
rorb
push
mov
pop
popf
sbb
dec
mov
sub
dec
icebp
aad
jno
rclb
ljmp
das
lods
je
mov
pusha
cmp
pushl
mov
test
ret
add
xchg
mov
push
xchg
fbstp
pop
mov
scas
into
xor
scas
push
xor
jl
jo
or
adc
jmp
gs
and
mov
and
cwtl
in
sub
and
dec
ret
clc
sub
dec
inc
lcall
or
ret
arpl
dec
js
push
test
call
adc
insl
xor
adc
mov
push
inc
jmp
push
xchg
lea
int3
jge
arpl
adc
aam
loopne
xor
mov
xchg
rclb
dec
and
xchg
pop
jmp
imull
dec
pusha
movl
enter
test
out
fucomi
adc
pop
mov
aaa
jo
cmc
push
sbb
push
popf
fs
sub
das
call
sbb
js
sahf
push
outsl
daa
pushf
sub
pop
into
jae
sub
loop
sbb
inc
bound
sahf
loop
and
dec
push
loope
xchg
ret
testl
mov
adc
sub
cmp
cltd
pop
shrb
orb
xor
in
mov
jns
dec
sbb
xor
or
push
aam
cmpsb
dec
je
aas
inc
scas
test
dec
push
daa
add
mov
insb
cmpl
adc
jle
cwtl
add
shlb
stos
push
test
or
push
push
dec
leave
imul
in
adc
sub
scas
jl
mov
and
pop
cli
lcall
arpl
in
out
add
shl
dec
jae
add
rcrl
jbe
push
test
push
daa
test
mov
dec
loop
and
scas
dec
js
aas
test
ja
lds
mov
add
sbb
mov
insb
je
xchg
shlb
lds
pop
and
loop
push
cs
push
jmp
arpl
xlat
jne
ror
pop
xchg
mov
jp
dec
rorl
leave
push
xor
cli
outsb
int3
cmp
lock
adc
adcl
call
or
orw
gs
andl
or
dec
or
add
mov
sub
mov
aaa
mov
and
stos
into
addr16
leave
ret
punpckhwd
jmp
pop
cmp
test
or
fs
sbb
cmp
mov
xchg
lea
mov
or
int
mov
cmc
es
sbb
arpl
mov
jo
movsb
ficoms
pop
fs
clc
icebp
cs
mov
bound
bound
insb
push
nop
cmpsl
in
mov
pop
and
push
addr16
loope
mov
push
icebp
mov
call
sub
idiv
cmp
cwtl
jmp
addl
jo
sarb
lods
mov
cmc
subb
loopne
jl
sbb
inc
xchg
inc
pop
inc
rcl
mov
cwtl
test
mov
mov
adc
xchg
xchg
movsl
adc
xor
std
ret
lods
dec
add
xor
mov
jo
mov
inc
sub
push
xchg
xor
clc
push
ljmp
mov
mov
pop
pusha
lcall
movsl
cmp
jne
pop
cmp
lods
mov
in
cmp
cmp
mov
in
pcmpeqb
scas
clc
test
call
xor
fcmovu
push
dec
mov
test
jge
std
loop
jecxz
stos
mov
sti
movsb
cmp
pop
lahf
sbb
xchg
iret
dec
movsl
push
sub
test
mov
jecxz
stc
scas
hlt
cmpsl
mov
lahf
pop
xor
adc
jecxz
popf
xchg
pop
test
imulb
cmp
sarb
pop
mov
in
dec
mov
inc
movsl
movsb
aam
pop
jae
pop
icebp
fwait
cwtl
cmp
xchg
loop
stos
sub
aad
xchg
pop
jle
icebp
int
pop
ret
stos
mov
xchg
lods
stos
jmp
and
ret
push
pop
out
pop
xlat
ljmp
loop
lcall
outsl
sub
pusha
sbb
push
repnz
shrl
dec
shlb
cmpsl
gs
iret
fs
notl
cld
sahf
mov
cmp
mov
test
cmp
sbbl
or
subl
rcrl
or
xchg
or
mov
xor
cwtl
push
sbb
mov
xchg
mov
cmp
adc
and
repnz
mov
out
ret
add
mov
loope
outsb
and
bswap
cmp
pop
sub
movb
jl
cmpsb
lret
xor
lahf
in
bound
inc
mov
mov
fidivl
sti
fucomip
scas
mulps
inc
adc
or
sbb
jne
std
fcmove
xchg
push
sub
inc
nop
cmpb
add
mov
fnstsw
add
inc
adc
mov
pop
insb
nop
test
nop
fcompl
cmp
es
ljmp
xchg
fadds
loope
mov
push
loopne
add
das
pop
lock
xchg
aas
repnz
daa
xchg
cs
cmp
outsb
stc
into
cmp
cmp
dec
or
aaa
adc
aad
gs
repnz
jne
xor
lretw
cmp
loope
popf
repnz
inc
dec
adc
ret
sub
cmp
dec
and
mov
jno
push
out
sub
dec
aad
mov
push
insl
or
xchg
jns
popf
push
les
xchg
lods
sahf
sbb
nop
sub
push
xor
xchg
mov
mov
out
sbbb
pop
or
sub
repnz
scas
and
dec
xchg
sub
insl
jmp
mov
fmul
cmp
adc
nop
mov
mov
jae
mov
aad
xchg
nop
and
insb
xchg
dec
lcall
jo
mov
pushf
adc
lahf
push
fstpt
fnstsw
xorl
imul
lahf
fstpl
cmp
call
adc
push
imul
imul
pusha
pop
adc
jbe
inc
outsb
jnp
mov
xchg
sub
mov
ret
into
scas
xchg
loopne
daa
jnp
add
test
push
aas
push
sbb
xor
mov
push
mov
insb
clc
jl
mov
inc
mov
std
in
repnz
cmp
mov
es
sub
inc
faddl
mov
mov
push
pop
adc
xchg
mov
movsb
hlt
test
adc
mov
sub
leave
xchg
push
repz
jp
mov
pop
cmp
push
sbbb
aad
fwait
imul
outsb
iret
ret
and
mov
cs
mov
mov
shr
loopne
call
adc
sarb
dec
xchg
mov
dec
mov
inc
mov
inc
or
dec
out
jae
test
lock
fadds
push
mov
test
lahf
push
cmp
mov
fcoms
xchg
pop
dec
cmpsb
ljmp
inc
sub
jl
sbb
cld
pop
mov
jecxz
fs
movsl
xor
icebp
and
adc
add
pop
jge
lahf
mov
shrl
stc
repz
bound
stos
imul
and
cmp
jp
rclb
daa
mov
cmpsl
out
call
cld
dec
mov
fcomp
outsb
push
or
cmp
sbb
repnz
xchg
mov
imul
sahf
in
cmp
push
add
inc
js
inc
xor
dec
and
push
mov
xor
cwtl
shlb
sub
pusha
sub
sbb
stos
pop
int3
aam
cwtl
fs
pop
dec
sbb
and
mov
add
iret
shl
add
pop
insl
inc
cmp
in
pushf
dec
es
leave
xchg
pop
call
stos
imul
pop
mov
push
sbb
les
pop
inc
stc
icebp
mov
jmp
mov
addr16
fildl
sbb
adc
loope
fcomps
fnsave
dec
outsl
sub
sti
test
cmp
repnz
mov
sub
ss
pop
cs
jbe
pop
inc
cmc
sbb
popa
dec
fwait
emms
mov
mov
movsb
js
sub
dec
clc
sbb
fistl
jno
add
cmpsl
lret
sarl
adc
aam
sti
dec
stos
dec
insb
loop
cmp
xor
and
or
xlat
sahf
icebp
int3
cltd
sbb
add
xor
xchg
push
pop
push
iret
std
mov
shrb
stos
push
fchs
push
cmp
jp
cli
daa
imul
loopne
jne
adc
sub
push
test
inc
jo
pop
xchg
cwtl
inc
hlt
call
mov
fcomp
shl
hlt
xchg
cmpsl
lret
imul
mov
fistpl
jns
mov
ret
dec
inc
mov
push
outsb
push
jo
xchg
pop
xor
cmpl
imul
in
daa
pushf
jmp
cmpsl
out
loopne
sub
ja
sub
dec
jns
push
adc
ret
iret
loopne
pusha
ljmp
push
stos
sbb
insb
in
mov
inc
stc
mov
or
jecxz
mov
lock
pushf
int
xor
pop
jno
dec
into
cmp
movsl
repnz
js
scas
loopne
mov
sub
ja
es
mov
xor
and
iret
add
xchg
xchg
cld
imul
or
jne
xchg
inc
in
call
pop
mov
std
mov
cs
push
test
cltd
pop
fisubrl
adc
dec
in
das
fstps
pop
cmp
aas
pop
aas
jae
mov
out
popa
jecxz
mov
or
movsb
push
cmp
movsl
adc
xchg
jg
sarb
aaa
mov
leave
sub
aas
sbb
mov
popf
sub
inc
dec
scas
mov
sbb
inc
aaa
daa
dec
push
iret
mov
inc
stos
ror
xor
lods
bound
mov
mov
inc
icebp
pop
mov
jno
cmp
push
into
sub
ret
ljmp
fsubs
aaa
xchg
pop
stc
ret
mull
lcall
jle
sbb
imul
outsb
loope
add
scas
insl
pop
sub
insb
inc
test
jg
ret
orb
sub
loop
mov
out
jne
xlat
fcoml
push
ljmp
xor
sbb
pop
and
out
xor
in
sub
jae
dec
clc
sub
subb
rorl
jg
adc
lock
sub
cld
pop
push
mov
mov
sub
lahf
pop
mov
jno
push
fbld
mov
pop
dec
cmpsb
jl
mov
lahf
es
mov
outsb
dec
jecxz
je
cmp
repz
dec
mov
adc
or
sbb
add
insl
cld
nop
sbb
mov
in
sub
dec
lods
je
rcrb
push
xchg
pop
jb
aaa
jbe
add
ret
cmp
jbe
inc
xchg
js
push
push
inc
jb
aas
ja
in
push
mov
or
xorb
pop
movsb
adc
adc
ss
xchg
test
mov
dec
das
adc
cpuid
xchg
jnp
adc
sbb
arpl
jg
pop
stos
sbb
fcmovbe
jmp
into
lock
aaa
push
fs
push
sbb
aad
xlat
push
test
mov
js
aam
pushf
jecxz
hlt
mov
ljmp
cltd
out
stos
dec
mov
push
out
cmpsb
jbe
jns
mov
mov
or
jl
xchg
imul
sub
mov
out
and
fs
addr16
jo
addr16
xchg
mov
clc
mov
daa
cmpsb
shll
push
pusha
add
pop
or
push
es
add
lret
cwtl
lcall
sarl
enter
xor
mov
pop
jp
pushf
adc
xchg
nop
aam
jno
pop
leave
je
adc
mov
ds
dec
or
neg
popa
or
push
test
dec
cmp
sbb
out
pop
inc
jl
xchg
xchg
cmc
jns
push
push
and
lahf
sarb
into
and
rorb
idivb
ss
stos
mov
inc
pop
mov
or
std
mov
ret
adc
fisubs
sbb
sbb
push
adc
dec
jge
xchg
out
sbb
cli
inc
push
inc
xchg
jns
stos
push
push
push
xlat
rcrl
sti
lods
dec
push
lret
cmc
faddl
xor
movsl
nop
push
sub
test
pcmpgtb
mov
test
shrl
push
test
or
push
ljmp
mov
cmp
loop
lock
dec
fdivr
fisubrs
xchg
loop
rclb
inc
jecxz
pop
xchg
addr16
bnd
inc
mov
fisubs
inc
dec
pop
movsl
in
adc
out
cmpsl
sub
sub
icebp
sbb
fwait
std
sub
mov
push
pop
mov
lock
jg
mov
push
fwait
lea
jns
mov
insb
repnz
mov
jno
andb
pop
lret
jmp
jne
das
pop
test
jns
out
adc
repz
mov
xlat
inc
jb
and
insl
psrlq
js
stos
mov
xor
loop
lods
stc
outsb
xor
or
repnz
inc
in
push
fidivrl
sbb
movsb
jno
lds
jae
dec
jno
adc
mov
jno
mov
mov
pop
sub
test
das
daa
jno
push
cwtl
push
int
mov
jns
jmp
cmpsb
ret
inc
push
pop
adcb
repz
setb
push
not
mov
out
sbb
dec
inc
gs
push
inc
add
js
leave
push
sti
jl
imul
xchg
jmp
xchg
xor
lea
push
js
or
push
aaa
stos
pop
pop
or
jmp
jnp
lds
lods
push
pop
inc
mov
jo
clc
insb
int3
sti
push
xchg
imul
cmp
aam
ret
ja
dec
sub
paddusb
jno
test
movsb
xchg
insb
push
ss
adc
lret
mov
arpl
lds
mov
sbbb
out
mov
pop
xchg
pop
lcall
push
pop
cmpsl
out
iret
or
inc
jle
sub
or
inc
rcl
fsubl
add
mov
and
jo
pop
adc
pusha
pop
imulb
aam
mov
push
xchg
mov
shr
sub
pop
push
xchg
or
jmp
stc
mov
dec
inc
pop
arpl
sti
out
subl
int3
in
mov
loopne
ja
jb
sbb
aaa
pop
inc
je
movsb
ljmp
notb
jnp
jae
addr16
imul
std
test
push
loope
mov
mov
daa
or
or
sub
ficoms
xor
das
sbb
and
int3
and
mov
and
add
in
mov
out
inc
inc
ja
pop
imul
mov
mov
dec
popa
stos
repz
ret
add
sub
shlb
push
fstp
das
sub
stc
loop
daa
xlat
and
and
mov
push
shr
sub
pop
push
sbb
int
cmp
or
test
mov
shll
pop
negl
jno
sbb
enter
push
xchg
test
fwait
repnz
js
jg
pop
dec
clc
cwtl
aam
xchg
imul
or
mov
xor
add
push
mov
in
iret
sbb
push
ja
add
aas
popl
jae
rcrb
sub
cmp
lds
jae
adc
fildll
lret
or
fs
imul
mov
sbb
jl
push
cs
test
add
xor
pop
ss
xor
cli
xor
scas
roll
aas
sbb
adc
mov
mov
in
push
sahf
ficoml
popf
in
jl
sbb
fadds
push
enter
dec
adc
stos
push
out
fists
mov
mov
and
outsl
iret
mov
in
jae
mov
data16
pusha
mov
dec
sahf
sub
xchg
or
xor
mov
cld
add
iret
test
mov
xchg
push
test
xchg
lahf
ss
out
push
push
lahf
pop
jmp
jne
cmp
and
cmp
pop
pop
cbtw
push
and
xchg
fcompl
out
pop
int3
pop
std
cmp
jg
jno
or
jl
dec
lcall
sub
xchg
fsubl
jp
and
dec
push
push
int
cmpsl
scas
lret
sbb
adc
aas
stos
xor
sbb
push
nop
int3
test
ja
inc
filds
and
cvtpi2ps
xchg
cli
or
mov
icebp
dec
cmc
out
nop
jmp
mov
shll
std
cmc
inc
mov
daa
aaa
lahf
sub
mov
cmpsb
inc
or
or
nop
ret
repnz
lods
scas
test
sbb
inc
hlt
roll
loope
xchg
add
outsb
cmpsb
jae
mov
fmull
popl
in
jb
jnp
shrb
fcompl
mov
cmp
std
fcmovu
push
sbb
inc
xor
pop
daa
lea
xlat
repz
adc
sbb
jmp
sub
xchg
push
and
mov
aad
sarb
in
fwait
loop
adc
push
or
xchg
mov
sbb
pop
adc
js
out
xchg
sbb
lods
pop
mov
je
xchg
mov
fldl
or
scas
push
stos
jae
stos
shll
pop
into
lcall
push
movsl
and
mov
test
sub
pop
mov
sub
fs
and
mov
rcll
mov
mov
pop
push
pop
inc
ljmp
xlat
push
or
add
test
dec
imul
loop
mov
lea
mov
xchg
mov
les
add
and
mov
mov
xor
sbb
inc
sbb
jp
jl
push
adc
in
xor
jge
pop
adc
jo
mov
push
adc
lods
pop
xor
insb
mov
push
lret
push
sbb
cmp
aas
dec
mov
cli
mov
div
mov
mov
cmp
xor
sub
leave
dec
add
inc
sub
xchg
pop
sbb
lods
mov
and
or
inc
in
in
loope
insl
add
mov
sub
pusha
ss
movsl
out
mov
sub
sbb
mov
dec
int3
push
sbb
cmpsb
fstpl
inc
mov
cltd
aaa
mov
ficompl
and
add
int3
pop
pop
lret
das
cmc
les
shll
imulb
adc
cmpsl
loope
add
es
xchg
clc
xor
jl
mov
lret
lret
mov
xchg
hlt
lret
sbb
mov
dec
adc
adc
shlb
pop
mov
test
xchg
mov
shr
mov
cmp
nop
inc
dec
mov
add
in
ret
push
lods
mov
pop
jne
sub
lods
adc
sub
dec
rolb
mov
int3
les
push
adc
sbb
je
nop
add
imul
cmpsl
xor
out
xor
das
movsl
pop
dec
popf
jl,pt
js
xchg
aaa
fbstp
lcall
sbb
jae
mov
add
inc
xor
xor
je
xor
add
stos
cltd
loopne
cmp
scas
jo
push
jle
and
ds
xor
xlat
mov
scas
leave
inc
int
adcl
mov
sub
imul
cltd
enter
cmp
and
mov
sbb
mov
or
mov
movsl
loope
sbbb
out
insl
dec
add
aaa
and
or
xlat
mov
add
fbld
push
or
andb
cmpsl
in
push
std
or
or
stc
mov
jae
aad
loop
add
daa
aaa
pop
jecxz
leave
rcl
pop
mov
pop
addr16
xchg
jp
mov
std
les
imul
xchg
dec
push
insb
rorb
add
in
push
iret
mov
sbb
insb
pop
or
pop
xchg
adc
xor
inc
sub
andb
mov
and
mov
out
sbb
sbb
cmc
bnd
cmp
lret
int3
cmp
sti
xor
nop
loope
orb
sbbl
cmp
add
jb
lods
jns
rolb
push
or
mov
insb
lcall
jp
sbb
fstpl
iret
mulb
mov
fadds
pop
loopne
loop
or
push
outsl
shr
mov
cmpsl
mov
xchg
inc
fldenv
das
int
jge
sti
lcall
shrl
pushf
or
sub
add
push
push
sbb
mov
testl
xchg
test
pop
das
jmp
pop
out
sbb
mov
aas
divl
push
jnp
mov
out
loopne
mov
ljmp
pop
cli
sar
outsb
cmp
and
out
cmpsl
decl
sub
fwait
cltd
stos
imul
add
lcall
mov
pushf
loope
addb
andl
mov
xchg
inc
pushf
cmpsb
sti
outsl
adc
pushl
faddl
mov
mov
add
mov
or
push
sbb
mov
mov
stos
mul
sti
aad
add
out
les
mov
dec
subb
xchg
lret
sbb
sbb
dec
or
leave
aas
xchg
jle
ss
mov
aaa
push
mul
add
sbb
icebp
pusha
aas
out
jp
push
mov
pop
xchg
pushf
in
in
into
jb
xchg
mov
mov
and
adc
call
int
adc
mov
mov
test
movsl
sbb
add
sub
stos
push
popl
or
push
insl
jb
cli
std
ja
and
jnp
fcmovne
push
aaa
and
addb
aam
dec
mov
lds
sub
sbb
pusha
test
dec
jl
fcoml
or
inc
inc
mov
mov
sub
push
js
xor
dec
adc
je
pop
popa
inc
add
sbb
ret
push
sar
fdiv
fists
push
mov
push
push
scas
jne
pop
xlat
push
cmp
adcb
mov
and
fsubs
push
or
adcb
jo
jns
std
cmpsb
roll
cmp
lds
and
inc
push
pop
insl
push
push
pop
in
fnstenv
bound
mov
lods
call
aad
push
in
mov
jecxz
push
inc
test
jecxz
sqrtps
mov
and
sahf
xchg
ja
xor
mov
sub
jae
gs
hlt
fistpl
inc
mov
cmpsl
cmp
dec
call
push
lock
inc
sar
roll
loopne
jle
pop
add
out
mov
popa
loope
negl
xor
pop
push
mov
repz
adc
stos
les
lret
push
and
std
mov
fs
arpl
cs
xchg
dec
in
daa
pop
movb
gs
add
xor
out
xchg
sub
cmp
sbb
mov
rcll
negl
jge
xor
push
or
inc
hlt
pop
fisttpll
cld
lret
into
jmp
pop
jmp
notl
xchg
sub
mov
jbe
pop
scas
icebp
jo
in
leave
movsb
push
in
jns
and
movsl
cmp
fs
mov
sti
les
adc
adc
mov
xor
jo
sub
lret
sbb
loopne
push
sub
push
ds
adc
mov
test
jle
lret
jne
jnp
lods
mov
jmp
or
mov
test
out
push
scas
lods
lahf
sbb
cld
pop
push
fstpl
sbb
mov
or
xor
jmp
jecxz
push
mov
or
lcall
push
and
inc
lahf
nop
xor
imul
repz
inc
rcl
mov
movsl
mov
lcall
scas
dec
xchg
das
decb
fnstcw
fdivs
add
lock
leave
in
nop
sub
push
jl
xor
test
loope
fwait
lods
mov
pop
imul
xor
shl
lds
pop
sti
addb
sbb
push
push
jnp
test
inc
repnz
sbb
jnp
stos
jmp
sbb
mov
cmpsl
pop
mov
jns
in
insb
jbe
in
mov
int3
addr16
sahf
fwait
add
dec
dec
faddl
insl
mov
and
xor
out
inc
xor
dec
roll
movsl
jmp
pop
bswap
jae
fwait
test
adc
jns
insw
loope
pop
add
mov
or
into
mov
lret
cwtl
insl
scas
jns
ret
pop
adc
jns
fdiv
inc
mov
in
xchg
or
add
push
mov
xchg
cwtl
je
into
jp
and
int3
add
out
insl
add
sbb
subb
ret
mov
addr16
inc
xchg
inc
je
sbb
adc
iret
sub
jo
hlt
cltd
lret
mov
push
jae
add
jge
addb
sbb
stos
sub
or
xor
imul
xlat
fsubl
fstpt
xor
imulb
or
xchg
call
push
loope
sbb
movsb
adc
std
dec
das
cmp
fadds
lahf
fisubrl
lcall
sbb
int
mov
cmp
pop
cmpl
jae
popl
ljmp
cmove
faddl
pop
out
jecxz
dec
insb
pop
xchg
lods
mov
sbb
dec
clc
pop
mov
or
mov
clc
insl
adcb
sbb
add
xor
shlb
js
xchg
into
stos
in
movsb
adc
and
dec
ret
loope
in
mov
mov
test
mov
movsl
xchg
xchg
push
fwait
dec
mov
inc
mov
dec
jecxz
push
ljmp
fldl
sbb
shlb
dec
cmp
insb
insl
insb
or
mov
adc
scas
xor
xor
push
jbe
jnp
lahf
xor
lods
sahf
int3
jno
lods
mov
xchg
jns
shlb
jo
dec
add
fyl2xp1
sbbb
out
mov
mov
les
aas
call
mov
jae
mov
xor
es
daa
add
lea
aam
int3
pop
mov
js
adc
ficomps
pop
sbb
xchg
outsl
inc
pusha
mov
les
rcrl
sbb
and
subb
xchg
int
xlat
sbb
jp
jecxz
mov
mov
cwtl
sub
in
cmp
dec
push
fldenv
mov
adc
mov
xor
push
repz
mov
je
cmp
push
cmp
negb
rcrb
mov
test
push
mov
test
mov
jae
fsubrs
mov
aad
nop
jecxz
xchg
mov
nop
fnstcw
xchg
jecxz
inc
mov
dec
mov
fisubs
add
ss
gs
shlb
xor
ffree
xlat
fdivp
push
sbb
xchg
mov
fsts
pop
insl
sub
mov
cld
sub
jecxz
push
adc
ja
mov
call
sbb
dec
testl
push
sub
push
pop
mov
stos
jp
jle
jb
fldt
int
js
in
mov
subl
test
push
addr16
out
or
adc
daa
adc
xchg
sub
imul
or
mov
sti
push
mov
jo
xlat
add
fdiv
dec
jle
fwait
push
add
jle
push
xor
cmpsl
mov
cmp
es
or
xchg
or
inc
jae
arpl
sbb
orb
sub
and
cmp
loope
mov
cltd
pop
or
rcr
fwait
mov
mov
lods
mov
cmpps
fsubr
clc
and
es
repz
mov
jecxz
cltd
fs
sub
push
mov
es
sub
adc
clc
push
jae
lods
xor
cmpsl
xor
xor
xchg
or
loopne
sub
inc
into
rclb
cmp
test
mov
notl
ja
fwait
sub
push
mov
sbb
in
in
out
es
and
and
insb
mov
jecxz
imul
or
and
shll
dec
pusha
out
sbb
es
mov
in
xchg
out
push
imul
inc
ljmp
xor
jp
shr
xor
push
sbb
mov
iret
inc
loop
cmp
repz
mov
inc
into
aaa
push
hlt
sub
inc
jae
fisttps
flds
and
bnd
fwait
cmp
loop
cli
data16
lret
mov
xchg
imul
mov
in
xor
sahf
xchg
repz
imul
fdecstp
flds
xchg
mov
mov
ror
faddp
xchg
icebp
popa
add
sahf
add
jecxz
jo
rcl
jecxz
into
mov
jg
cmp
ss
leave
pushl
xchg
mov
cltd
in
loope
lret
je
lcall
lea
stc
and
push
inc
enter
outsb
rorb
or
lock
dec
les
iret
fcoml
xchg
pop
bound
jle
dec
push
sub
in
dec
repnz
cmp
aas
mov
test
cmp
jg
cltd
cs
mov
ret
daa
sub
lods
clc
fs
add
pop
insl
adc
cmp
jno
arpl
pop
lods
les
push
inc
scas
add
xlat
mov
add
cmp
mov
sub
loopne
bound
push
decb
lret
or
fstpl
add
cld
push
or
dec
fdivl
movsl
mov
mov
and
and
in
cli
dec
test
add
push
fadds
push
jecxz
movsb
int3
in
repz
add
mov
mov
fmul
sub
sbbl
jl
jno
arpl
adc
es
stos
adc
add
mov
xchg
inc
ljmp
shl
lods
stc
mov
mov
cwtl
ss
and
loope
inc
mov
loopne
aaa
xlat
lods
add
fistpl
mov
stos
push
dec
sahf
pop
aaa
mov
mov
test
pop
xlat
inc
orb
loope
cmpl
cld
sub
mov
pusha
in
stos
add
mov
jg
sahf
iret
aad
cmp
iret
lock
imul
mov
insl
and
sbb
and
mov
gs
inc
push
adc
bswap
sub
sti
xchg
outsb
aam
jae
cmp
mull
loope
xchg
int
push
jg
mov
mov
les
xor
push
fs
daa
sub
xor
mov
es
cli
mov
mov
dec
idivl
lret
orb
xor
shlb
and
shrl
sub
xchg
pop
jnp
test
ret
jg
jge
mov
cmpsl
ret
dec
arpl
aas
adc
mov
sub
mov
jbe
ljmp
inc
dec
mov
mov
xor
mov
in
push
aas
stc
jmp
in
popa
cwtl
movsb
cmpsb
ffreep
jl
sbb
jbe
fmulp
enter
test
pusha
daa
insb
inc
into
mov
mov
sarl
je
add
arpl
cmp
clc
and
negb
pop
mov
jmp
iret
into
mov
imul
lcall
add
xor
test
dec
js
stc
jno
cltd
scas
mov
xor
push
cmp
mov
xchg
jno
jmp
loop
imul
mov
xchg
mov
xor
out
or
mov
inc
std
std
or
cld
cmc
inc
push
repnz
xor
push
in
in
es
test
or
sbb
adc
mov
push
lea
sbb
cld
sbb
sahf
mov
xchg
repnz
mov
add
mov
lods
shrl
hlt
test
in
js
addr16
fsubr
push
aad
adc
cld
test
clc
outsl
dec
int3
data16
sub
je
scas
gs
jge
cmpsb
popa
in
lds
xchg
cmpsl
push
out
xchg
rorb
push
inc
lods
shrl
xchg
movsb
fstl
jp
bound
icebp
fbstp
dec
sub
add
shrb
test
sub
pop
orb
divb
sub
loope
xchg
cmc
mov
inc
imul
fwait
mov
pop
xchg
pushf
bound
and
out
push
add
adc
gs
mov
inc
fdivl
mov
jecxz
adcb
fs
jle
mov
or
lods
lock
mov
mov
cmp
repnz
xor
jge
xchg
ds
jno
cs
fucomi
adc
ficoml
sbb
imul
sbb
and
sahf
sahf
insl
mov
bound
mov
mov
xlat
js
aad
pop
push
fldz
loopne
test
repnz
insl
mov
pop
mov
sahf
lahf
adc
addr16
lods
dec
xorb
sbb
xchg
adc
sbb
xor
inc
push
mov
push
mov
xchg
cmp
fidivl
add
sbb
sbb
data16
mov
out
xchg
inc
in
es
jno
outsb
xchg
pop
imul
outsb
mov
push
mov
sub
add
xchg
pop
out
gs
nop
lock
jb
test
inc
xlat
test
jae
cmp
mov
jp
hlt
getsec
mov
pop
rclb
cs
inc
sub
adc
push
lret
sub
cmpsl
add
mov
stos
cmp
out
repnz
mov
fwait
mov
cli
fwait
test
aaa
cmp
add
dec
lea
mov
push
sbb
hlt
fidivl
push
repz
jbe
and
scas
sti
cmc
jl
jle
push
shlb
insl
jmp
mov
int3
ficoms
in
call
mov
leave
mov
inc
and
aaa
aas
lock
divb
cltd
xor
xchg
mov
jo
mov
insl
pusha
mov
lret
or
pop
dec
outsb
roll
mov
ficoml
sbb
leave
mov
out
mov
imul
sbb
mov
sub
lock
or
mov
fidivl
mov
add
sub
lret
int
aas
iret
fs
in
jmp
loop
mov
lret
sbb
xor
out
lds
cld
out
pop
out
divb
add
adc
xor
mov
call
mov
cltd
xchg
xchg
add
sbb
pop
mov
insb
push
sbb
cmp
mov
cmpsb
cmc
sbb
push
adc
dec
pop
sahf
and
rcl
push
sub
scas
add
fdivp
sub
out
in
push
xor
stc
loopne
je
xchg
ret
push
and
jle
ljmp
aaa
adc
sub
push
cmp
mov
fcmovnb
std
hlt
adc
outsb
gs
mov
ds
gs
jbe
or
jle
jecxz
and
mov
stos
dec
dec
test
add
adc
add
mov
pop
push
and
repz
call
xchg
push
imul
dec
outsb
mov
xchg
mov
fdivs
pop
jecxz
and
bnd
enter
jl
mov
lret
fsubr
or
inc
cmpsl
test
lcall
sub
hlt
push
out
adc
pop
data16
fldcw
sub
cli
cli
inc
mov
sub
mov
sbb
daa
arpl
cmp
xlat
pop
popa
jne
popa
mov
cmpsl
enter
dec
xchg
sub
pusha
dec
sbbl
xor
ss
mov
popa
fnclex
sbb
js
sarb
adcl
mov
insb
test
pop
es
sbb
shlb
in
push
xor
in
ja
adc
sbb
sbb
push
dec
idivl
lret
js
jl
push
pop
push
iret
jl
aad
add
push
xor
push
xchg
out
lock
cmp
inc
iret
pusha
mov
adc
fldl
push
pusha
mov
fistpl
sub
pop
jno
add
push
fistpl
dec
jmp
popa
mov
pop
xor
cmp
cmp
movsl
adc
imul
fcmovb
repz
sbb
int3
stos
or
sub
cmc
jmp
mov
aad
movsb
sbb
sbb
jb
jne
sbb
fsubrl
pop
scas
and
sub
ret
inc
cwtl
add
aad
add
pop
pop
inc
push
pop
arpl
jnp
popa
sahf
int3
xor
adcb
cmovb
lods
inc
mov
dec
daa
pop
jns
pop
add
adcl
or
test
or
mov
dec
cmp
push
outsl
push
lods
lret
imul
cmpsl
mov
arpl
cmp
pop
mov
mov
popf
mov
pop
and
scas
sub
data16
mov
cli
mov
adc
xchg
divb
or
inc
test
xor
push
pop
jmp
pop
