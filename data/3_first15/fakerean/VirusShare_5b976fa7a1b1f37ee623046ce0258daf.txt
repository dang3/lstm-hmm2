imul
gs
xor
cs
insb
add
gs
xor
fs
insb
add
add
je
popa
jae
inc
jb
outsl
jb
add
inc
gs
jb
arpl
jae
push
ja
push
popa
jb
insl
gs
jb
add
add
je
outsl
arpl
gs
outsb
outsw
inc
add
add
insb
inc
imul
imul
jae
gs
arpl
add
add
je
outsl
imul
jbe
push
je
imul
add
jae
je
jbe
outsb
je
add
push
outsl
outsl
insb
push
xor
popa
fs
jb
arpl
jae
gs
outsl
jb
add
add
je
push
inc
data16
dec
popa
jae
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
je
jb
jbe
je
push
jb
imul
imul
dec
jo
outsb
push
push
add
add
popa
jo
jne
jb
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
add
jo
inc
imul
add
jo
popa
arpl
imul
je
jbe
outsb
je
add
inc
outsb
je
jb
gs
fs
outsl
fs
gs
jo
jb
add
inc
gs
outsl
jne
insb
gs
insb
imul
add
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
jb
jbe
je
inc
js
jb
arpl
outsl
outsb
inc
js
add
add
je
inc
inc
outsl
fs
popa
add
add
imul
inc
add
add
je
outsb
jne
je
insl
dec
outsb
outsw
inc
add
add
imul
gs
insb
dec
outsl
outsl
imul
outsl
ja
add
dec
outsl
popa
fs
imul
add
je
jb
arpl
jae
imul
popa
je
outsl
outsb
add
add
imul
je
jo
add
dec
gs
push
outsl
inc
push
data16
add
add
jne
inc
imul
outsl
outsb
imul
inc
imul
jb
arpl
jae
imul
push
outsb
add
add
je
imul
outsb
inc
outsl
js
add
inc
popa
insb
insb
dec
gs
dec
outsl
outsl
imul
add
inc
imul
js
popa
jb
insl
inc
add
add
jne
inc
imul
gs
imul
add
adc
add
adc
add
add
push
adc
add
add
jae
add
lea
add
lcall
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
inc
adc
add
add
je
add
mov
add
mov
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
add
insl
adc
add
add
nop
adc
add
add
add
add
add
fnstenv
cmovnp
fadds
add
lea
mov
sub
dec
add
add
add
lea
dec
jne
movswl
mov
inc
add
pop
inc
dec
pop
xor
lea
pop
mov
add
inc
add
add
sub
lea
imul
inc
dec
dec
add
ret
push
dec
xor
lea
mov
inc
dec
dec
inc
push
push
push
push
sub
lea
mov
push
dec
sub
dec
sub
add
lea
mov
inc
sub
mov
dec
push
inc
sub
xor
lea
mov
push
dec
sub
push
dec
inc
pushl
add
call
lea
add
mov
dec
dec
inc
inc
and
lea
pop
ret
inc
mov
inc
inc
inc
or
lea
imul
inc
sub
add
mov
dec
xor
cmp
jb
lea
mov
dec
xor
inc
inc
xor
add
or
pop
lea
test
jbe
inc
sub
inc
add
or
lea
imul
sub
add
dec
sub
xor
lea
imul
dec
add
dec
inc
inc
and
lea
mov
dec
sub
and
inc
inc
mov
sub
lea
movzbl
dec
add
dec
sub
and
dec
xor
mov
lea
movswl
mov
dec
inc
mov
inc
add
mov
and
lea
movsbl
sub
inc
add
dec
jne
inc
mov
and
lea
mov
dec
dec
inc
dec
and
lea
mov
mov
inc
add
dec
dec
or
lea
movzbl
sub
mov
inc
dec
test
jbe
dec
or
lea
mov
dec
inc
sub
dec
or
lea
mov
add
add
add
dec
inc
and
lea
imul
dec
sub
sub
and
dec
sub
mov
lea
mov
movzbl
inc
inc
add
add
inc
and
or
lea
mov
mov
sub
movzbl
add
sub
mov
inc
and
mov
lea
imul
movzbl
dec
inc
add
inc
sub
and
sub
lea
movzbl
imul
jmp
inc
add
and
lea
pop
ret
push
movswl
dec
dec
add
inc
add
lea
movswl
sub
dec
sub
dec
inc
sub
lea
movzwl
dec
sub
inc
dec
xor
lea
mov
inc
add
add
add
or
lea
mov
push
sub
add
push
add
add
push
sub
call
call
lea
movswl
sub
cmp
je
sub
inc
dec
add
lea
mov
call
inc
ret
inc
inc
pop
dec
ret
push
or
push
lea
mov
push
inc
push
inc
push
sub
add
push
or
lea
mov
inc
inc
call
dec
push
add
xor
lea
mov
imul
mov
inc
dec
mov
sub
dec
test
je
xor
lea
imul
add
dec
sub
add
or
lea
mov
mov
dec
inc
dec
inc
sub
lea
mov
repnz
dec
inc
add
dec
jmp
sub
sub
lea
movsbl
dec
inc
sub
inc
add
lea
mov
sub
pop
pop
jmp
ret
push
inc
inc
dec
add
lea
mov
add
sub
inc
inc
and
lea
movswl
inc
inc
dec
inc
sub
lea
mov
sub
dec
add
sub
or
lea
movzwl
dec
pop
ret
sub
inc
mov
add
add
mov
add
lea
mov
movzbl
inc
mov
dec
dec
xor
inc
sub
mov
lea
imul
inc
inc
add
add
dec
and
lea
cmp
jb
movswl
push
sub
add
push
inc
inc
push
xor
lea
mov
mov
add
xor
inc
add
xor
inc
xor
xor
lea
mov
push
dec
dec
xor
inc
dec
mov
sub
lea
mov
mov
sub
movzbl
inc
add
sub
add
add
lea
imul
add
dec
sub
movzbl
add
dec
and
lea
mov
add
inc
dec
inc
dec
or
mov
lea
mov
dec
dec
dec
dec
cmp
jb
and
xor
lea
mov
mov
inc
jmp
push
mov
imul
dec
dec
sub
add
add
lea
movswl
sub
sub
inc
inc
sub
lea
imul
dec
inc
sub
call
call
call
add
add
lea
mov
call
inc
dec
inc
add
or
lea
mov
sub
call
call
inc
push
sub
call
dec
sub
call
lea
mov
sub
add
dec
dec
xor
lea
mov
pop
sub
sub
dec
add
inc
pop
xor
lea
pop
mov
dec
dec
dec
pop
sub
xor
lea
imul
inc
inc
inc
dec
pop
or
lea
pop
mov
dec
mov
inc
add
call
inc
and
lea
mov
ret
dec
inc
push
inc
dec
push
and
lea
push
mov
sub
push
dec
inc
push
dec
sub
mov
lea
mov
push
dec
ret
push
inc
push
add
inc
push
sub
lea
push
imul
call
dec
inc
inc
inc
add
lea
movsbl
inc
dec
inc
dec
sub
lea
imul
inc
add
jmp
jo
or
stos
xor
xlat
nop
mov
je
dec
adc
ret
mov
scas
int3
sbb
stos
jo
out
inc
orl
dec
adc
mov
and
push
or
xorb
fs
in
int3
add
mov
fs
into
jp
xchg
hlt
out
loopne
sub
or
or
xorb
and
sbb
adc
movsb
lcall
pusha
daa
push
cmpsb
leave
add
xor
jb
aam
sti
notl
adc
sub
mov
test
std
jp
add
fsubrl
jnp
fs
aaa
pop
popf
scas
cmp
push
sbb
arpl
xorb
test
jnp
cmp
shlb
jb
in
sti
xchg
je
xchg
xor
fs
cli
aam
or
imul
jb
add
inc
jg
push
cli
fbld
xlat
xchg
test
or
mov
icebp
pop
movsb
add
loop
js
jno
mov
pushf
mov
pop
cmp
scas
mov
jno
aam
add
rolb
test
movsl
add
call
cli
mov
out
in
sahf
in
ds
mov
ja
mov
ljmp
mov
ds
inc
imull
lret
mov
mov
adc
lock
in
mov
es
push
je
dec
cmpsl
loopne
aas
subl
push
sbb
adc
pop
adc
and
mov
dec
ljmp
lock
out
insl
adc
pop
push
adc
dec
andb
ret
icebp
sbb
into
cmp
movsb
ss
sbb
out
and
rorl
and
jmp
stc
sbbb
stc
mull
adc
or
clc
insb
pop
pop
add
in
fsubrs
inc
clc
je
pusha
es
fucomi
or
adc
xchg
fcmovnbe
sub
cmp
mov
lock
or
mov
loope
cmp
fisubl
fstps
clc
sub
xor
enter
xchg
xor
notl
fs
std
mov
xor
gs
and
inc
mov
pop
and
in
ret
mov
into
push
cmp
xchg
fisttps
out
sbb
push
pop
xchg
lds
andb
pop
notl
rcll
mov
imul
enter
and
lret
mov
lea
and
jmp
mov
xchg
push
mov
jno
mov
inc
sbb
fcom
dec
test
sarb
dec
mov
loope
jno
mov
daa
push
out
push
sub
pop
add
pop
rcll
aad
and
jmp
les
sbb
inc
mov
push
stos
sub
add
ds
into
xchg
inc
stos
jmp
shl
push
sbb
ljmp
into
jle
adc
add
jns
in
imul
jmp
stc
inc
pop
xchg
cmp
sub
push
jo
mov
xor
or
jg
jnp,pt
inc
pushf
aas
mov
push
xchg
inc
cmpsb
jecxz
loop
and
dec
repz
loop
call
mov
xchg
stos
repz
add
mov
aad
add
xorl
cmp
sti
cmc
dec
into
leave
xchg
xlat
insb
jg
sub
lcall
mov
ljmp
pop
test
inc
xor
repz
push
jae
jg
mov
mov
test
or
insl
scas
pop
xor
and
fisttps
loop
cmp
push
stos
ljmp
xor
add
data16
mov
jmp
xor
in
push
xor
push
xor
jmp
insb
pop
pushf
jg
jo
add
lahf
lds
mov
inc
jl
in
outsl
ret
scas
push
mov
repz
xorl
pop
xchg
sub
cld
adc
cmc
sbb
xchg
mov
jo
ljmp
sub
cli
popa
test
pop
xchg
mov
mov
lcall
xor
dec
inc
push
outsl
leave
xchg
adcl
xchg
or
push
clc
inc
add
int
in
std
shrb
stc
cs
mov
insb
clc
xor
loopne
mov
pop
mov
mov
xor
cmp
frstor
push
push
cmp
and
push
sbb
rcr
ja
dec
scas
leave
adc
xor
cmp
xchg
ret
jmp
or
xor
frstor
cmpsb
mov
mov
pop
mov
neg
loopne
addb
insb
adc
daa
insb
lock
or
pop
push
mov
dec
lds
push
fimuls
pop
imul
icebp
dec
push
aas
std
adc
sahf
test
or
gs
and
bound
fwait
xor
push
mov
ja
lahf
pop
mov
out
loopne
mov
mov
or
loop
push
lods
inc
call
mov
xchg
dec
sub
movsb
inc
imul
lods
sbb
add
add
mov
aam
mov
xchg
ja
or
sub
aam
xor
and
xchg
test
mov
inc
dec
and
xchg
dec
mov
add
adcl
clc
int
pop
and
add
or
hlt
fbld
stos
divl
sub
jl
scas
cmp
in
insb
pop
and
inc
jbe
stos
mov
jb
outsb
and
fstl
sahf
xlat
adc
mov
inc
push
lahf
or
shl
push
add
loopne
sub
int3
imul
call
pop
fsubrl
fcompl
loope
sbb
cmp
or
in
pop
push
lahf
jns
scas
xchg
pop
cld
push
mov
daa
adc
and
dec
rorl
fnstcw
sbb
mov
pushf
jb
push
push
je
icebp
xchg
adc
fcompl
loopne
imul
adc
xchg
lods
mov
xor
mov
push
call
je
sbb
and
filds
add
mov
imulb
lret
mov
jecxz
adcb
pop
and
sub
ss
mov
xlat
lret
mov
sarl
imul
jbe
fiadds
sbb
es
jmp
in
pop
inc
push
mov
addr16
cmp
sub
push
mov
mov
inc
movsl
pop
mov
or
loope
sbb
lods
pop
out
stos
inc
pop
lock
inc
xchg
shrb
push
outsl
mov
xor
push
in
lods
decl
mov
repnz
sub
add
jmp
jp
push
lods
mov
js
shlb
inc
ret
inc
clc
js
cmc
pop
adc
xor
sbb
cmp
mov
test
aam
gs
push
pop
pop
into
scas
mov
lahf
and
xorb
sub
pop
es
dec
scas
lahf
add
push
ljmp
xor
push
pushl
in
pop
test
and
popl
mov
lods
sub
push
cmp
mov
rcrl
gs
nop
es
add
add
mov
decl
test
inc
rcl
inc
mov
lods
test
mov
pop
sbb
mov
add
loop
test
mov
lret
fwait
test
xorl
push
out
js
cmpsb
int
outsb
add
xchg
xchg
in
adc
add
inc
xchg
push
jmp
fdiv
inc
inc
jbe
add
shr
test
cmp
and
arpl
cmp
cmp
sbb
pextrw
mov
into
test
into
js
aam
or
jp
adc
mov
sub
nop
adc
adc
xchg
add
mov
dec
adc
mov
sbb
stos
jno
imul
popa
xchg
xchg
in
xchg
pop
lret
mov
clc
mov
jne
fnstenv
jle
fisubrs
dec
mov
lock
sbb
outsl
ja
fs
iret
int3
repz
and
cmpsb
xchg
adc
fsub
sbb
sbbb
filds
adc
mov
sbb
or
lods
imul
lcall
lock
pusha
mov
je
aad
test
fsub
stc
add
fwait
repz
lret
push
cmpsb
fadd
scas
ss
pushf
cli
rcrl
push
movsb
mov
cmpsb
insb
shll
jmp
clc
imul
mov
jae
es
cli
pop
outsb
ret
mov
pop
pop
sub
mov
loop
and
push
lock
jp,pt
fwait
mov
jb
jmp
cld
dec
pusha
jmp
lahf
and
sti
out
cmpsb
js
lret
dec
dec
in
sub
mov
cli
je
loopne
fistps
sbb
clts
dec
jg
prefetch
or
mov
scas
pop
cmp
mov
in
sbb
fwait
xchg
jnp
testb
and
aas
push
sub
sahf
push
pop
mov
xchg
arpl
push
sbb
adc
adc
loopne
and
sbb
xor
xor
sub
push
pop
jae
sets
repnz
add
add
cmp
mov
xchg
dec
loope
arpl
and
push
aam
das
loope
push
scas
pop
push
xchg
or
push
cwtl
xchg
jg
add
cmp
iret
aam
push
repz
mov
mov
xchg
xchg
test
iret
lcall
lods
hlt
jb
push
push
adc
stos
dec
dec
cltd
std
mov
shl
aad
or
out
mov
icebp
sbb
mov
fisubl
js
xchg
sbb
sub
push
ret
in
and
add
test
mov
xor
cltd
iret
add
xlat
inc
jno
je
dec
popa
movsb
rcr
and
aaa
lods
xchg
and
xchg
ljmp
pop
fpatan
pop
shll
mov
lods
inc
xchg
pop
xchg
push
fdivp
jb
xchg
pop
pop
adc
pushf
dec
mov
inc
icebp
daa
pop
das
sti
leave
mov
jns
xor
push
jb
in
push
shr
dec
sahf
inc
cmp
rcrl
mov
mov
xchg
push
mov
push
and
insb
and
movsl
pop
cmpsb
adc
pop
push
inc
xchg
mov
push
call
push
fsubrp
lods
into
in
cmpsb
mov
push
cmp
adc
test
aas
and
frstor
arpl
jbe
fildll
sub
loop
or
push
xchg
movl
leave
jo
repnz
inc
aam
adc
test
insb
dec
rcrl
filds
inc
aas
cmpsb
lahf
int
sbb
notl
fdivl
testl
icebp
mov
inc
in
mov
cltd
addb
lods
sbb
xchg
mov
fisubrl
in
in
gs
mov
insl
or
mov
int
ret
hlt
cmp
and
ja
sbb
pushf
movsl
loop
mov
or
dec
cmpsl
adc
mov
mov
decb
arpl
xorb
mov
add
lds
mov
cmpsl
sbb
xchg
movsl
cs
adc
dec
push
iret
dec
int
jle
enter
test
dec
pop
cmp
and
mov
or
adcb
ja
push
mov
int
xchg
jo
daa
add
mov
sub
arpl
gs
cmp
enter
arpl
dec
sub
mov
cmc
arpl
and
cli
pop
icebp
roll
and
adc
mov
push
add
add
xor
and
mov
lret
fs
in
pop
popa
dec
cmp
pop
jae
adc
bound
mov
push
aas
inc
lcall
jnp
pop
xchg
fs
and
insb
push
out
bound
sti
popa
xchg
push
pop
push
pop
movsb
adc
aaa
loope
movsl
push
es
ret
shr
iret
clc
pop
cld
es
ficompl
jl
or
pusha
ror
ficoml
xchg
mov
jb
mov
jo
lret
and
mov
call
fistpll
dec
sbb
xor
js
xor
btc
test
test
int
stc
mov
inc
ljmp
lret
fcoms
dec
pop
sub
arpl
stos
sub
outsb
rolb
fdiv
or
xchg
xor
inc
mov
lcall
insl
sarb
pop
pushaw
and
popf
dec
push
or
sub
sbb
inc
cli
pop
jge
adc
jnp
data16
jl
mov
push
jo
sub
out
bound
mov
cs
test
and
or
mov
or
inc
mov
out
and
dec
mov
fiaddl
mov
lret
pop
pusha
pop
rorl
push
imul
cli
bound
mov
and
imul
clc
pop
ficomps
sub
fldenv
add
into
xchg
jl
shrb
out
mov
adc
mov
hlt
mov
movsl
xor
mov
cli
pop
out
js
ret
jbe
shll
fcompl
ds
or
gs
popa
jge
cs
mov
cmpsl
test
sub
jb
mov
std
xchg
int3
mov
outsl
fcmovbe
ret
ja
les
sbb
ret
ret
jno
rclb
dec
cmp
jp
sub
pop
leave
fdivr
add
cwtl
pop
outsb
nop
mov
mov
roll
popf
cmp
roll
clc
daa
mov
lcall
pop
xchg
and
int3
fwait
push
pusha
push
adc
pop
movsl
loop
pusha
xchg
cmpsl
pop
jle
sbb
mov
into
xchg
repz
lret
or
in
jb
shlb
dec
outsl
ljmp
add
cmpsl
imull
pop
fisubs
leave
shrb
dec
xor
sahf
inc
sub
mov
jp
cmp
gs
iret
add
test
inc
pop
mov
in
das
repz
pop
and
call
pop
inc
adc
mov
push
and
ficoml
div
mov
aas
xchg
dec
or
adc
mov
shl
pop
nop
das
xor
addr16
or
addr16
int3
or
pusha
xor
lea
fcomps
dec
int3
sub
mov
pop
sbb
xchg
push
sub
pop
icebp
lds
negl
lods
fnstcw
fbld
bound
lahf
leave
lock
xchg
jae
inc
sub
pop
in
ljmp
pop
push
pusha
aas
shr
enter
arpl
cmp
sub
mov
test
ljmpw
mov
sbb
pop
cmpsb
adc
push
jae
aas
test
ja
ss
out
push
push
mov
rorl
dec
mov
loope
rcr
mov
jns
sbb
ds
xchg
push
call
xor
inc
jae
dec
push
mov
xlat
xor
jp
and
aam
imul
cmp
vmread
jecxz
pop
test
xor
mov
inc
push
dec
ret
jno
stc
icebp
jo
push
icebp
cmp
cmpsl
jecxz
sbb
or
inc
cmp
int3
movsl
pop
std
lea
xor
repz
jmp
xchg
out
das
inc
fnstenv
in
mov
cs
out
cmp
sub
cmc
rcll
out
mov
jg
xlat
add
xor
outsb
pop
cli
cmp
dec
outsl
pop
sti
cmp
lahf
out
jle
negl
insb
push
and
dec
jo
xchg
sbb
jbe
scas
mov
dec
loope
sub
sti
lret
icebp
dec
mov
rcrb
je
fidivl
fimull
push
mov
mov
mov
int3
pop
fwait
and
aad
jns
push
cmpsb
or
jmp
adcb
cmpsl
jmp
pop
push
in
xchg
out
enter
push
jecxz
pusha
mov
sbb
aad
mov
push
jno
inc
or
pushl
imul
mov
rcll
dec
xorps
sar
int3
ja
mov
mov
and
push
push
outsl
mov
jecxz
loopne
fs
xlat
orps
sti
jmp
add
xchg
inc
inc
repz
xor
mov
les
jl
shll
in
xor
xchg
pop
je
xlat
adc
ret
ret
dec
sbb
fwait
rorl
fcompl
xchg
xchg
mov
in
jp
mov
sti
add
cmc
xlat
dec
in
rcl
push
fnstsw
ret
out
cmpsl
outsb
insb
adc
sahf
in
sub
mov
pop
fimull
cmp
mov
adc
xchg
stos
iret
loopne
call
xchg
lcall
ror
adc
cs
and
xor
mov
rol
jmp
lcall
cld
push
jle
loope
sub
add
mov
and
xor
test
jge
and
rcr
xor
xchg
or
pusha
jbe
sub
enter
fcomps
fwait
sahf
insl
aam
inc
rol
fmul
cmpsb
mov
stc
out
xchg
and
pop
icebp
add
dec
cmp
sub
sbb
sbb
sub
hlt
or
push
pushl
mov
and
jnp
or
dec
cmp
jle
jg
pop
cli
cmp
pushf
mov
call
insb
enter
int
sub
adc
mov
std
shrl
inc
dec
xchg
movsb
xlat
xchg
test
lods
in
shrd
jnp
mov
pop
cmpb
dec
adc
dec
mov
cmpsb
inc
mov
xchg
das
mov
and
enter
xor
nop
call
call
outsb
mov
cli
sbb
frstor
stos
fldl
xlat
or
mov
xchg
pop
aam
insl
xchg
cmp
ljmp
je
cmpl
fldt
test
pop
iret
jbe
aam
leave
or
push
mov
loopne
mov
out
mov
mov
push
pop
cwtl
orb
loopne
dec
int
negl
mov
cmp
into
pop
mov
sbb
sbb
xor
jle
or
sub
dec
xor
ret
mov
cmc
in
lret
and
rolb
ret
push
mov
loope
das
adc
insb
xor
dec
inc
out
cmp
stc
xorl
addb
aas
cmp
jbe
jo
xlat
fs
rcll
lret
add
subb
jno
shll
cwtl
inc
push
ret
repnz
sbb
jg
je
xor
pop
xchg
data16
cs
lock
out
test
and
std
push
cmpsb
fiaddl
shl
pop
mov
mov
in
inc
jmp
pop
cmp
fdivs
inc
or
mov
mov
mov
add
push
fs
mov
pop
frstor
icebp
inc
mov
pop
lcall
jp
insb
jnp
pusha
cmc
sarb
push
out
sbb
imul
xchg
fwait
jbe
jne
inc
outsl
movsb
pop
cmp
inc
sub
dec
je
jg
sub
pop
pop
aad
push
lods
lret
push
push
fdiv
movsl
int3
and
pop
or
push
mov
mov
lahf
xor
lods
imul
inc
test
fs
sti
loopne
jne
inc
cmp
mov
lea
fldenv
push
mov
mov
pop
das
jnp
xchg
cmp
out
cli
call
jmp
sub
push
testb
fchs
out
jg
push
mov
jb
fldl2t
cmp
dec
vcvtsd2si
jg
xchg
dec
cmp
push
pop
push
adc
pusha
fsts
shr
imul
js
and
js
inc
and
outsb
std
push
xor
sub
add
sti
sarb
lahf
jae
sub
xchg
push
out
jns
cmp
andl
xchg
lods
imul
or
push
adc
cmp
aad
cmp
push
jns
test
loopne
or
div
insl
jle
jne
clc
fsubl
lods
fcomp
and
lea
cltd
jno
add
insl
out
or
add
sub
xchg
int3
push
xchg
add
daa
lea
sarl
jne
sub
call
mov
popa
xor
icebp
mov
call
insl
loope
pop
xchg
mov
jp
xchg
mov
pop
pop
fisttpl
aaa
cmc
jne
js
jae
popa
adc
mov
ds
rcll
imul
inc
mov
jno
imul
ret
mov
inc
and
mov
adc
rclb
mov
sub
inc
dec
sub
jecxz
scas
aas
iret
pop
add
jns
jge
in
jbe
iret
jge
sbb
sub
sbb
cmpsb
and
cltd
scas
sti
stos
and
sub
das
jmp
pop
fbstp
push
gs
fistl
std
lods
push
test
inc
xor
or
xchg
dec
pop
mov
sub
shlb
inc
lods
scas
call
mov
mov
aaa
pop
call
lds
dec
and
dec
push
sub
insb
test
dec
popa
cmp
or
rolb
fucomip
jno
clc
imulb
bnd
leave
ljmp
dec
shrb
xor
xlat
or
mov
into
outsl
sub
sbb
jge
lods
xchg
sti
jp
sahf
in
jno
add
inc
xchg
mov
int3
pop
sti
sbb
adcl
or
scas
nop
cli
xor
test
das
xchg
pop
pop
out
dec
cltd
jle
adc
jmp
sbb
mov
fstpt
jae
adc
mov
jp
cmp
imul
cmovae
mov
dec
sbb
mov
test
inc
pop
adc
lods
scas
cs
xor
out
cld
adc
andb
pop
pop
or
jb
shrl
mov
mov
and
push
sbb
mov
pop
icebp
and
mov
outsl
xorb
mov
push
fcmovnu
xchg
hlt
mov
cmp
popw
xor
fmull
or
jmp
sub
mov
push
dec
jecxz
test
and
xchg
jmp
cmpsb
fisubl
cld
aam
mov
out
push
call
fistps
adc
cmpsb
jecxz
pushf
in
sub
addr16
xchg
pop
rcl
inc
dec
in
cmp
xorb
arpl
dec
ss
mov
subl
outsl
mov
pop
out
or
push
subb
inc
decb
orb
in
cmc
les
fimull
xorb
cltd
adc
inc
mov
dec
pop
shrl
out
jb
xor
rorl
sub
cmp
adc
cli
sub
push
ss
adc
sbb
jg
popf
adc
mov
test
out
push
push
je
movl
nop
divl
xlat
or
jae
pusha
sub
xchg
push
mov
outsb
mov
push
sub
jl
cmp
mul
inc
xchg
add
adc
sub
mov
lea
cli
clc
test
mov
divl
loope
hlt
std
test
and
xor
xchg
sar
mov
shll
mov
jle
jp
xchg
pop
xchg
mov
jmp
iret
xor
jnp
inc
pop
xchg
cmp
jg
cltd
fildll
inc
sti
stc
je
push
mov
add
mov
xor
mov
xchg
dec
dec
ret
mov
or
rcll
add
xchg
pop
arpl
sar
and
test
lock
jno
ja
sbb
pop
test
adc
pop
inc
enter
into
xor
shr
mov
and
mov
das
aas
push
add
lea
xor
pop
aam
push
lret
mov
std
mov
rorb
inc
js
mov
and
xchg
and
sbb
js
add
lea
cmp
cmpsb
in
add
iret
sbb
mov
insl
lds
std
adc
xchg
adc
cmp
add
fbld
insb
ret
add
shlb
cmpsl
mov
dec
cmp
ret
lock
je
jle
mov
pop
mov
or
xchg
mov
out
mov
test
mov
jecxz
push
jp
add
mov
push
xor
pop
rcll
pop
fwait
jmp
repz
mov
out
sub
cmp
imul
mov
sbb
icebp
roll
xchg
test
dec
mov
stos
repnz
jo
cmpsb
xor
xor
jno
mov
aas
js
inc
inc
adc
sti
xlat
rcrl
lods
dec
inc
cwtl
and
mov
scas
test
imulb
mov
mov
addr16
xchg
inc
iret
rcrb
mov
cmp
pop
ret
jge
jns
jle
cmp
lods
dec
adc
push
in
lahf
sub
fidivrs
cld
fistpl
movl
fiaddl
jne
or
mov
std
test
mov
filds
xchg
jnp
sbb
popl
add
popl
xor
jp
cmp
cmc
aad
dec
scas
sub
pop
bound
jns
push
xor
out
mov
adc
das
xor
nop
pop
movsb
loope
addr16
adc
scas
popa
jns
or
sbb
fcoms
std
mov
ds
frstor
adc
adc
dec
pop
push
lcall
sarl
shlb
les
stos
dec
jns
jmp
fdivl
adc
sub
xchg
js
call
pop
mov
mov
test
pusha
dec
jbe
sub
xorps
je
rep
add
ja
cs
fistps
imul
xor
cmp
inc
ds
or
clc
stos
and
shlb
aam
xorb
cs
mov
loope
loopne
push
lods
out
dec
ds
fnstenv
xlat
jge
xor
imul
ds
mov
dec
out
imul
or
dec
sbb
mov
fmulp
out
cld
push
ljmp
mulb
mov
hlt
and
pushf
dec
push
mulb
mov
cmp
shlb
fwait
xchg
pop
inc
repz
adc
imul
lods
dec
add
jecxz
fiaddl
nop
sbb
fmull
push
divb
aam
xchg
pop
sub
cld
ljmp
push
xchg
arpl
aas
jecxz
pop
aaa
push
ret
push
fwait
jecxz
sbb
scas
cltd
mov
out
push
mov
cmc
mov
add
mov
insl
jmp
inc
lds
xor
mov
mov
dec
scas
scas
rcll
cmpsl
cmp
inc
scas
lahf
adc
adcl
aaa
pop
inc
pusha
mov
inc
je
ficomps
addr16
repnz
jno
add
outsl
ds
call
mov
lods
scas
call
cmp
lea
push
ret
cmp
cmp
mov
mov
inc
mov
push
push
in
or
xchg
or
mov
mov
ret
jg
push
inc
push
push
jle
data16
rol
jno
loope
pop
in
xchg
or
testl
shll
dec
rclb
ret
xchg
cmpsl
dec
rcrl
rcrl
cmp
sub
out
push
aas
xor
int3
ss
cmc
loope
mov
test
aad
je
push
add
pop
sbb
push
insl
negl
ds
loop
cmp
sub
mov
mov
nop
je
rclb
dec
enter
in
pop
shlb
lock
pusha
xchg
pop
ret
sub
cmp
mov
aam
sahf
pusha
add
mov
sarl
or
xchg
std
dec
pop
adc
pop
pop
mov
jg
push
das
mov
ja
enter
or
cmp
cwtl
pop
hlt
cwtl
sub
inc
lods
rol
out
fistpl
leave
cwtl
into
sete
and
loop
loopne
xlat
jg
test
mov
pop
add
ror
mov
hlt
popf
or
cmpsb
mov
xor
pop
icebp
mov
xchg
sti
dec
fwait
rcrb
roll
adc
into
pandn
or
mov
rorl
into
pop
mov
pop
rcrb
and
push
dec
sbb
into
inc
rcrb
test
pop
mov
and
push
pop
ss
icebp
or
outsl
dec
testb
mov
lock
mov
ret
ficoml
insl
mov
test
mov
mov
xchg
add
pop
test
push
inc
pop
cmp
les
std
and
inc
clc
leave
mov
sbb
add
inc
cmc
or
push
adc
sub
inc
mov
scas
add
and
and
xchg
cmp
cmc
sub
nop
lock
lret
sbb
push
push
jmp
cwtl
lret
or
sub
andl
lret
and
fadds
imul
mov
in
push
and
in
mov
push
jle
push
mul
out
or
sub
push
fidivrs
ds
mov
cmp
mov
cmc
jo
mov
push
hlt
dec
in
clc
sbb
movsb
add
inc
jbe
into
adc
pop
ds
mov
into
das
scas
movl
xchg
fidivs
pop
inc
ret
stc
push
outsl
jl
lds
outsl
sbb
or
pop
inc
roll
fwait
sbb
pop
pop
xchg
lock
ret
adc
data16
dec
sub
pop
jle
adc
jo
in
xor
xor
mov
mov
xor
sbb
dec
pop
pop
shll
es
das
cmp
sub
pop
mov
mov
push
pop
aas
leave
push
ror
pop
nop
shll
xchg
outsb
cwtl
fcomps
lock
repnz
mov
mov
outsl
fiadds
divb
sbb
movsl
push
daa
cmc
adc
mov
sub
jne
pop
mov
fs
mov
test
pop
mov
aaa
sub
mov
xchg
jge
inc
pushf
and
xchg
or
shr
pop
and
out
pop
adc
insl
lea
cmp
test
das
inc
loope
mov
inc
bound
xchg
enter
out
push
stos
scas
popf
dec
ljmp
push
repnz
add
pop
push
mov
fsubp
sbb
popf
xchg
out
adc
nop
popf
xor
out
xor
or
mov
xlat
ds
mov
mov
hlt
imul
idiv
addb
or
push
and
push
hlt
testl
push
fsts
sbb
test
jl
std
cmpsb
es
cmp
mov
sbb
pop
fbstp
sub
add
add
sbb
mov
fdivl
dec
mov
aaa
push
jg
xchg
outsl
cmc
add
icebp
inc
cmpsb
loope
ds
lret
pop
ds
and
xchg
push
pushf
in
pop
fdivrl
mov
stc
inc
in
ret
jmp
fstl
and
sarb
push
jae
iret
pop
mov
cmp
shlb
mov
sahf
pushf
jl
add
aam
add
mov
lock
clc
test
daa
loope
sbb
pop
data16
cmp
push
andl
test
outsl
sbb
inc
sarl
dec
repnz
push
out
jo
bound
cld
sub
pop
loop
movsl
in
sti
jns
pusha
pop
andb
gs
out
arpl
jmp
mov
xor
mov
and
sbb
aaa
dec
jmp
sbb
test
movsl
hlt
loopne
sub
ds
addr16
dec
xchg
jmp
stc
aas
nop
add
pop
std
push
mov
sbb
xchg
ret
mov
out
mov
sbb
ljmp
fcoms
std
push
jmp
jno
cmpl
fxch
shlb
cmp
out
mov
fsubs
fmuls
cmp
in
dec
mov
aas
dec
jnp
or
in
dec
xor
dec
jmp
stc
aas
or
cmp
ja
xor
mov
idiv
mov
inc
hlt
sbb
sarl
leave
and
leave
movsl
jmp
ja
dec
inc
divl
sarb
or
in
fstpt
rcll
loop
std
mov
or
mov
loop
fdivl
add
scas
into
rorl
stos
push
mov
out
sub
push
stos
ljmp
popa
and
mov
mov
bnd
pusha
jp
enter
lods
push
xchg
mov
xor
rorb
push
inc
add
mov
lcall
shl
cmp
test
mov
and
xchg
adc
popa
sub
fucomp
data16
rol
pop
in
dec
dec
test
mov
test
insl
sahf
sub
loopne
frstor
test
pop
jo
das
xor
inc
jbe
dec
lret
lret
loope
out
adcl
xor
xchg
or
jle
xchg
push
add
cmpsl
dec
adc
jns
adc
cmp
jae
lahf
insb
fistpll
mov
repnz
xchg
mov
adc
xchg
arpl
imul
out
ret
inc
jmp
in
add
push
sti
xchg
pop
pop
add
xchg
jmp
std
sub
call
dec
push
enter
popa
sub
xor
outsb
pop
shlb
andb
jg
dec
cli
cmp
pop
lret
cmp
mov
inc
scas
mov
sub
and
shlb
rorb
jb
js
jmp
dec
in
movsb
lods
lods
bound
fmul
pushf
mov
movsb
adc
in
jno
push
pop
jb
mov
ret
jle
and
ficoml
dec
inc
stos
cmp
sbb
and
and
push
dec
xchg
push
jbe
rcrl
mov
les
sbb
dec
jns
lcall
jp
aam
xchg
mov
pop
pop
dec
and
xor
data16
movsl
mov
jb
push
mov
sahf
into
cmpsb
out
shrl
jmp
cmpsl
mov
rcrb
cmc
mov
xchg
push
mov
dec
pushf
leave
mov
mov
pusha
fsin
cmpb
fmuls
cmp
ret
jb
mov
stos
into
icebp
js
inc
gs
push
fstp
lret
ficoms
and
cmp
sbb
stos
cmp
lods
pusha
hlt
shrb
shll
movsl
test
arpl
lcall
ljmp
sub
and
leave
scas
xchg
push
ret
inc
xor
pop
add
sbb
sahf
test
and
mov
mov
push
push
mov
xor
inc
jle
add
push
and
dec
xor
xchg
fcmovu
jnp
movsl
out
pushf
push
push
mov
and
mov
or
push
cmp
adc
data16
mov
jae
jg
lret
xor
mov
iret
scas
mov
adc
dec
jo
lret
in
xor
sbb
push
or
sbb
dec
and
xchg
cmp
lahf
in
or
ret
outsb
xor
outsb
push
add
shrl
mov
push
xchg
cltd
iret
fwait
mov
jb
jo
pop
xchg
mov
mov
sbb
lahf
ret
lock
leave
jbe
jecxz
popf
dec
push
pop
test
cmp
cs
pop
loopne
sbb
jp
or
cli
rol
add
imul
adc
test
jp
adc
fdivl
jp
dec
inc
lahf
cld
adc
push
pop
lods
out
mov
mov
sahf
loopne
cltd
gs
sub
fistps
in
in
xchg
mov
lret
and
push
iret
pop
scas
mov
fwait
and
out
xor
sbb
xor
adc
pop
ljmp
mov
sbb
aaa
push
xor
sub
mov
fsubrs
lods
and
mov
frstor
mov
mov
dec
pop
mov
std
pop
dec
int
mov
fsubr
adc
jno
ljmp
pop
fsubrs
inc
std
sub
push
je
popf
scas
pop
push
pushf
xor
inc
cwtl
sahf
fs
or
dec
insb
ja
xchg
inc
cmp
add
jmp
and
notl
outsl
jl
in
mov
shlb
sbb
pop
push
hlt
lahf
stos
lahf
lcall
and
push
ja
lods
enter
jno
mov
fnstcw
loope
sub
and
loop
jbe
sbb
xor
adc
call
mov
lret
sarb
pop
cld
hlt
mov
adc
ja
adcb
lcall
push
mov
lock
sbb
dec
sbb
sub
sbb
repz
inc
fcom
jecxz
xchg
fsubl
xor
push
inc
nop
jle
mov
in
mov
push
imul
enter
sub
mov
pop
sbb
fisubs
pusha
arpl
in
imul
imul
inc
pop
insl
xchg
out
cmpsb
mov
pop
pop
sub
sub
jae
testl
xor
push
xchg
jge
mov
stos
lret
and
into
sbb
mov
push
pop
or
test
mov
into
lods
icebp
inc
mov
inc
insl
sub
pop
pusha
add
or
fs
jns
stos
movsb
jg
adc
aam
sub
and
mov
sub
ds
cmp
mov
outsl
push
mov
in
push
add
push
sahf
push
mov
add
sahf
out
fstps
rcr
fimull
jecxz
add
mov
shr
xlat
inc
out
mov
das
mov
stc
ds
repnz
bound
fnsave
xor
pusha
pop
jmp
sahf
pop
xor
sub
lret
fimuls
outsb
or
xor
push
jecxz
pop
lahf
incl
sbb
add
clc
pop
cltd
cwtl
and
lret
pop
fsubs
cmpsb
push
sbb
add
mov
mov
jbe
andl
pop
inc
mov
mov
jp,pn
push
roll
push
pop
mov
rcl
mov
hlt
insb
hlt
mov
data16
movsb
push
je
jg
sub
jnp
imul
pop
call
pop
cmp
mov
push
or
fiadds
out
lea
fisttps
adc
loop
mov
js
stos
loop
xor
ret
popa
sub
insb
pop
mov
int
loop
push
imul
das
mov
cli
jno,pt
xorl
nop
in
leave
out
sub
sbb
sub
les
mul
gs
inc
addr16
icebp
xor
mov
dec
sarb
adc
push
rolb
jle
xchg
sbb
push
lods
mov
jecxz
jge
js
mov
pusha
mov
adc
out
dec
jp
inc
push
xchg
lret
mov
mov
sbb
xchg
sub
dec
rolb
jge
pop
cmpb
mov
mov
xchg
pusha
mov
cli
aad
movsb
sbb
mov
jbe
sbbl
lock
xor
jno
cli
test
inc
in
daa
dec
sub
mov
dec
or
pop
xchg
sahf
xchg
mov
ds
cmp
addl
mov
iret
scas
lock
cld
sub
mov
rcll
outsl
adc
iret
xlat
push
cmpsb
fistl
and
jmp
mov
inc
ja
push
idiv
jg
jo
mov
in
bndldx
dec
pop
xchg
jns
pop
js
mov
or
fnsave
les
mov
jp
out
jl
div
pop
cli
cwtl
fisttpl
int3
adc
out
push
push
imul
mov
xchg
or
movhps
ds
divb
sub
push
jae
mov
xor
sub
fcmovnu
ja
inc
test
mov
ret
pop
inc
xor
hlt
push
pop
sbb
inc
lahf
sbb
inc
inc
dec
pop
out
jb
cmp
and
jb
inc
loop
lods
out
clc
xchg
ror
jp,pn
push
mov
push
js
fmull
mov
jne
pop
cmp
mov
mov
jb
adc
ja
pushf
mov
inc
lret
cmpsb
inc
aam
and
or
loopne
es
inc
iret
js
lods
lods
adc
inc
int
dec
dec
aaa
jnp
enter
jnp
mov
retw
mov
out
fwait
pop
and
ret
ja
mov
mov
xchg
dec
dec
push
lcall
pop
lods
xchg
enter
inc
cmpb
mov
mov
addb
imul
mov
fldcw
imul
out
fidivs
inc
dec
inc
lret
sbb
or
mov
mov
testl
mov
mov
adc
xchg
mov
pop
mov
pusha
push
repnz
popa
sti
popf
leave
pslld
mov
mov
cmp
dec
sbb
scas
aad
push
scas
notl
xor
sub
sub
adc
lret
lock
cmpsl
es
ljmp
dec
pandn
fcmove
push
add
jbe
add
stos
xchg
je
adc
xorl
imul
dec
adc
dec
iret
sub
outsl
cmp
and
sbb
outsb
push
mov
xor
sbb
mov
out
push
in
pop
add
pop
sbb
imul
insl
lods
mov
dec
xchg
adc
cld
push
or
jmp
push
pop
dec
mov
mov
and
mov
outsl
mov
aas
add
cmp
ret
inc
pop
cmpsb
in
inc
or
xchg
add
sub
xchg
cmp
scas
andl
mov
mov
xor
filds
sbb
cmp
inc
add
xchg
lret
xchg
ss
jmp
dec
push
mov
or
pop
xchg
pushf
nop
add
hlt
fs
mov
fs
sarl
add
inc
xchg
rcrl
loopne
data16
out
fnstcw
mov
rcrb
xor
pushf
imul
adc
jecxz
lods
mov
jae
inc
xchg
and
pusha
cs
sbb
ja
jb
in
andl
cmp
lret
imull
xor
sbb
idivl
adc
mov
out
pop
sub
adc
dec
ss
and
subl
cmp
and
sub
sub
jl
push
call
ret
cwtl
out
ds
and
mov
inc
scas
jl
je
and
mov
mov
aam
in
cmpsl
mov
lret
repnz
sub
pop
xor
and
test
iret
test
dec
rolb
shlb
icebp
mov
test
jge
je
mov
daa
jbe
popa
dec
data16
add
mov
fisubrl
dec
popf
sub
aad
dec
repnz
pop
lcall
in
int
stc
out
stc
and
fldt
arpl
adc
cltd
mov
out
dec
inc
inc
rcr
pop
lods
push
loope
add
xchg
adc
lea
sbb
daa
mov
push
nop
push
cwtl
push
push
ds
xlat
hlt
dec
lds
aaa
push
push
add
in
je
mov
inc
push
js
dec
shrl
mov
add
pop
scas
out
mov
xchg
popa
enter
cmp
inc
shll
frstpm(287
dec
mov
std
jge
arpl
add
pop
push
sub
mov
adc
cmp
fbld
jnp
in
pop
js
add
aaa
adc
std
in
mov
adc
and
dec
adc
inc
mov
push
push
xor
mov
push
cmpsb
adc
movsb
cmp
mov
movsb
mov
pushf
loope
mov
sbb
pop
insl
leave
add
dec
push
xor
xlat
dec
mov
fwait
imul
addl
jne
shl
adc
andb
les
imul
mov
outsb
inc
xor
xchg
mov
mov
xor
mov
cmpb
push
inc
loope
es
cwtl
jns
insb
rclb
aad
xchg
aam
dec
sub
lods
lcall
pop
mov
sub
xchg
add
or
stos
loope
aaa
lock
fistps
sbb
jle
jno
leave
lock
push
gs
mov
jo
out
insl
cmp
pop
mov
push
in
repz
daa
mov
rorl
mov
xor
or
sbb
mov
xchg
leave
jo
rclb
imulb
sub
cmpsb
sub
arpl
pop
mov
push
sub
and
mov
lock
push
mov
call
mov
and
ret
sahf
fists
jb
aas
and
sub
call
mov
xor
js
imul
add
inc
xor
lods
ret
cmp
fisttpll
mov
rclb
popa
inc
shrl
or
inc
addr16
lahf
lret
mov
out
std
popa
in
ret
int3
or
hlt
scas
stos
lahf
gs
stc
fsubr
push
or
insb
jg
insl
movsb
insl
cmp
xor
inc
loopne
and
add
ljmp
push
jecxz
lods
dec
mov
jmp
jmp
loopne
or
cld
outsb
fcmove
cmpl
mov
or
pop
fs
inc
rep
xlat
adc
and
cmpsl
fs
add
sub
mov
add
xchg
add
xchg
leave
mov
push
jb
mov
xchg
sbb
fstpt
and
cmp
xchg
subl
lahf
xchg
and
loop
loope,pn
and
dec
jmp
and
sub
lahf
inc
push
je
andl
aas
orl
scas
sub
and
pop
in
ds
js
jno
add
push
test
adc
aaa
add
mov
shrl
push
fdivrl
rorl
outsl
and
jb
inc
adc
ljmp
jne
push
inc
add
jecxz
sbb
adc
jbe
pop
or
push
scas
stc
xor
lds
cs
pop
mov
inc
mov
es
jns
cmp
or
cmp
sbb
dec
outsl
push
ret
jecxz
fdivr
movsb
sub
aas
adc
pop
mov
add
shlb
in
jae
popf
repz
cld
jmp
jae
cltd
inc
and
and
enter
jg
gs
bound
enter
pop
inc
adc
dec
sahf
iret
fnstsw
pusha
xchg
inc
out
aaa
mov
or
shl
cmc
mov
xor
loop
mov
sbb
dec
adc
mov
mov
sbb
lea
cmp
call
lods
jne
outsl
sahf
les
mov
mov
sbb
ficomps
push
fcomps
push
add
orl
in
lds
sahf
xorl
imul
out
movsl
xchg
pop
mov
aam
xlat
jno
ficomps
popl
dec
insb
notl
sar
mov
dec
mov
push
adc
lods
lcall
arpl
adc
adc
or
in
sub
rcl
decb
lods
ja
inc
cmp
mov
mov
add
sbb
dec
mov
mov
xchg
lods
cmp
mov
jbe
in
jl
push
fcomp
aam
mov
mov
incb
sub
mov
lret
fstpl
inc
lcall
jmp
cli
adc
std
mov
cmp
mov
stc
jne
cmp
rcr
or
rol
aas
add
xorl
mov
inc
pop
xlat
test
cld
ret
scas
push
mov
mov
outsb
imul
iret
add
dec
add
mov
inc
sbb
rolb
subl
push
cmp
and
outsl
jmp
repnz
stos
jbe
mov
dec
push
sub
gs
adc
inc
pop
test
cltd
push
mov
sti
mov
loopne
inc
sbb
push
add
mov
decl
shr
shrb
fildll
cs
mov
mov
stc
mov
sub
mov
inc
leave
inc
mov
mov
pusha
pop
xor
jno
cmp
and
scas
das
cmp
sub
dec
and
cmp
push
pop
dec
sub
ljmp
das
push
or
hlt
sub
xorb
inc
jb
call
std
out
mov
je
shll
and
and
loopew
ret
sbb
cmc
add
or
pop
sub
std
call
inc
rorb
push
push
jmp
repz
add
push
aaa
popf
jne
ret
addr16
mov
fsts
xchg
cmp
mov
int
bound
jecxz
imulb
mov
popa
xchg
pop
xchg
add
cmp
xor
mov
mov
pop
cltd
pushf
sti
sub
cwtl
es
add
mov
inc
bound
int3
push
and
push
jg
aam
mov
add
ret
inc
inc
mov
mov
inc
gs
push
scas
outsb
mov
xor
sbb
sbbl
push
pop
or
adc
fnstsw
push
sbb
xchg
ret
mov
mov
loopne
mov
cmp
into
movsb
mov
in
pop
jns
mov
jbe
cwtl
in
jne
in
add
xor
mov
out
xchg
movsb
xchg
cli
pop
push
mull
xor
cmp
or
sub
xor
cli
adc
pop
dec
or
or
ret
push
in
add
outsl
adc
jne
xchg
mov
lea
sbb
movb
hlt
jo
push
stc
scas
push
xchg
ret
mov
ret
addb
cmp
lcall
or
shll
sub
int
jl
imul
pop
mov
mov
pop
inc
lahf
clc
adc
inc
sti
test
cli
int
outsl
dec
movsl
adc
jmp
xchg
push
fidivrs
push
mov
sub
and
clc
mov
sub
xchg
fnstenv
repnz
pop
lcall
in
ret
mov
jmp
clc
cmp
pop
adc
pop
sub
popf
das
rolb
lahf
mov
enter
negb
cmpsl
mov
mov
imul
mov
jbe
lahf
outsl
out
outsb
es
jp
rcr
sbb
lahf
xchg
aam
and
clts
outsl
jne
xlat
dec
cmp
push
out
and
xchg
cmpsl
mov
std
jb
dec
lahf
xchg
mov
icebp
nop
std
add
fucom
femms
pop
ljmp
push
ret
mov
aam
xorps
adc
mov
push
mov
push
outsl
and
sahf
fnstsw
test
push
adc
cwtl
xchg
outsb
cmpb
nop
add
mov
jge
daa
inc
jg
rolb
pop
pop
push
push
sub
scas
fisttpl
int3
js
pop
jb
aaa
mov
or
add
int
add
shlb
insl
dec
js
aad
stc
in
dec
jo
or
mov
add
inc
dec
in
sti
clc
es
stos
fisttpl
data16
pop
sbb
ljmp
mov
int
lds
mov
js
cmc
dec
sbb
in
or
mov
jmp
jle,pn
pop
mov
pop
js
mov
icebp
xchg
pop
jecxz
fildl
sti
stos
lods
dec
fldenv
xor
dec
mov
xchg
and
sbb
push
cld
shrb
sbb
mov
mov
dec
cmpxchg
es
pop
push
sub
dec
iret
mov
xor
add
jno
shll
mov
push
lods
mov
mov
jmp
jns
int3
cmp
xorl
scas
fldcw
mov
iret
dec
stos
hlt
js
aad
and
in
sahf
push
xor
rolb
inc
ljmp
int
cld
mov
aam
push
xor
out
pop
lods
lds
into
out
lock
vpunpckhwd
pop
inc
jae
jae
cld
mov
orb
xor
push
pop
jno
inc
mov
xchg
das
mov
addr16
push
sbb
mov
mov
fdivrl
jo
lods
cmp
sbb
lahf
shrb
in
arpl
xor
push
imul
adc
xchg
pop
dec
jnp
mov
ljmp
mov
jo
add
test
cli
aas
sub
in
push
jb
hlt
mov
jne
pop
insl
scas
pop
loopne
imul
lea
fucomp
inc
or
push
loop
mov
loop
arpl
gs
dec
xchg
mov
adc
fcomps
adc
ljmp
nop
mov
in
cwtl
cmpsl
rorl
scas
js
dec
gs
sti
loope
pop
adc
jnp
xor
pusha
mov
cmp
call
jle
movsb
rorl
in
sub
movsl
sbb
sub
xchg
dec
cmp
adc
stos
cmp
or
or
jp
stos
out
xor
fstpl
mov
dec
fidivl
lods
mov
xlat
pop
push
adc
sub
pop
jl
notb
mov
imul
imul
popf
pop
lods
sbb
sub
in
sbb
sbb
mov
adc
jae
mov
out
daa
jg
lods
in
mov
and
imul
xorb
stos
std
push
jno
das
mov
jne
in
mov
add
into
test
je
fsubs
add
jb
testl
enter
nop
jae
mov
int
adcl
gs
adc
lock
sub
sbb
xchg
push
mov
xor
push
roll
jno
and
das
jg
lcall
push
imul
lret
enter
push
out
or
nop
icebp
add
movsl
packuswb
inc
mov
jmp
xor
mov
lods
cmpb
pop
and
scas
mov
sbb
scas
std
inc
sarl
jb
mov
sbbb
les
xor
scas
push
es
or
jmp
mov
xchg
aam
inc
or
cmp
mov
push
mov
jge
loop
push
pop
xchg
sub
test
or
pop
dec
movsb
mov
gs
dec
push
insb
movsb
lret
mov
into
xor
ret
mov
cmc
push
xsha1
cmpsb
or
std
xlat
scas
pop
add
cld
std
fdivr
push
rclb
gs
lods
push
into
add
int
and
push
dec
dec
in
xchg
jg
in
xor
scas
add
adcl
dec
push
fwait
jecxz
orb
icebp
jle
adc
insb
or
or
incl
sub
ds
sbb
pop
cmp
test
std
negb
in
pop
jno
es
test
or
push
push
cmp
xchg
in
das
loopne
mov
js
mov
outsl
in
std
call
out
mov
mov
data16
push
jle
decl
loop
push
in
in
inc
negb
and
jp
out
push
or
pop
pop
mov
lahf
divl
and
fcomip
sbb
push
ja
adcl
dec
rcll
fdivl
add
pop
scas
icebp
rclb
push
and
cmpl
lret
jecxz
rcrl
dec
int
orl
cmp
xor
xor
test
jp
cmpsl
mov
or
rorb
rcll
pop
cmp
dec
aas
and
adc
jecxz
pusha
lahf
lret
out
or
ljmp
cwtl
and
in
jp
dec
ret
repz
insl
adc
hlt
cld
dec
sub
cmp
test
aas
mov
pop
mov
stos
int3
divl
cmp
sub
or
loope
out
aad
cltd
rol
ss
fwait
popf
mov
sbb
popa
repnz
test
leave
or
jge
out
sub
or
mov
lret
inc
aaa
fsubl
fxch
data16
dec
shrl
scas
push
andl
mov
in
inc
cmp
lea
xor
lret
shrl
inc
outsb
jb
cmp
inc
xor
xchg
fmull
inc
fdivl
mov
sub
out
fildll
pop
cli
cmp
cmp
cltd
addr16
pop
femms
rcl
cwtl
mov
cwtl
mov
pop
inc
or
fidivrs
mov
rorl
lds
ficoms
xchg
dec
lea
outsl
or
push
data16
pop
add
in
daa
sub
jle
das
pushf
dec
pop
rclb
pop
cmc
xor
dec
fidivs
loop
xchg
jbe
pushf
jmp
adcl
add
mov
lret
cltd
pop
ljmp
loopne
xchg
gs
movsl
jmp
push
imul
fs
sub
push
jmp
sbb
jg
push
aas
stos
insb
inc
adc
mov
adc
data16
jb
test
fildll
inc
or
call
rcrb
mov
ficoms
mov
inc
push
pop
inc
pop
push
neg
mov
negl
imul
xchg
das
or
cmpsl
jp
cmp
jmp
scas
cmp
ret
lcall
scas
shl
scas
cmp
loop
vucomisd
in
ret
mov
push
cmc
cmp
pop
sub
sbbb
lahf
mov
fiaddl
fdiv
jle
nop
ja
lcall
js
int3
aas
xor
lea
incl
xchg
jnp
test
lds
dec
in
jno
fimuls
or
inc
mov
lret
cmp
adc
pop
or
inc
into
test
int
dec
jp
mov
stos
shll
jge
insl
dec
popf
sub
insl
and
mov
dec
pop
jp
mov
clc
mov
inc
es
in
mov
jae
xchg
jg
and
inc
mov
pop
shlb
rcrl
xchg
icebp
ja
out
jg
mov
push
or
sbb
pop
jne
jecxz
les
sub
adc
loope
subb
mov
sbb
mov
jae
mov
jle
stos
add
sub
mov
jg
pop
inc
test
loope
lods
and
shr
js
mov
cmp
cmpsl
add
cwtl
aad
icebp
push
pop
aam
ljmp
mul
nop
xlat
sub
clc
pop
mov
sarb
xchg
sbb
ljmp
pop
push
sbb
flds
fucomp
push
sbb
mov
and
adc
imul
add
or
push
arpl
cmpsb
inc
outsb
out
xchg
mov
cltd
and
and
repz
mov
out
fldl2t
mov
and
jmp
add
xchg
mov
das
sti
dec
xorb
ret
insl
test
out
adc
cmp
out
lcall
inc
push
pop
xorb
inc
xor
sub
mov
test
xor
jle
bound
push
in
pop
cs
jl
hlt
in
mov
sub
mov
push
cmp
mov
imul
mov
push
loopne
sbb
stc
xor
pop
xchg
mull
jle
lcall
ss
fdivrl
je
mov
jecxz
adc
fwait
pushf
ror
faddl
pop
scas
fisttps
xchg
or
mov
mov
or
lret
jne
jle
xor
mov
int
mov
mov
push
imul
aad
cltd
push
mov
xor
push
mov
pusha
not
and
sbb
subl
mov
lret
ret
mov
dec
leave
jmp
pop
jg
xchg
xor
dec
cmpsl
sub
shll
insl
add
mov
sbb
notb
xor
mov
sahf
jno
pop
shll
sbb
popf
lods
pop
lods
bound
ljmp
out
mov
inc
mov
adc
sbb
jno
imul
inc
xorl
dec
sti
arpl
sub
cmpb
in
shlb
cmp
adc
ret
and
dec
popf
aas
fs
subb
arpl
mov
dec
lea
sub
push
xchg
addb
shlb
stos
inc
imul
loopne
gs
cli
push
sub
adc
pop
adc
stc
lret
loope
xchg
popa
clc
cmp
push
mov
xchg
outsb
das
xor
lods
shrl
mov
pmuludq
jno
mov
das
and
push
xor
inc
pop
fsubs
and
div
enter
lahf
push
cmove
fldt
mov
mov
std
jnp
xchg
std
xchg
and
mov
inc
sar
mov
and
fistl
sti
loope
sub
jmp
sbb
cmp
orb
mov
pop
notl
cmp
pop
lock
aad
add
shl
lock
fisubrs
mov
gs
adc
bswap
push
mov
shrb
add
sub
stc
sbb
sbb
pop
outsb
or
or
rcr
ja
pop
dec
divl
mov
sbb
inc
sub
insl
mul
dec
fs
movsl
inc
xchg
fs
shll
mov
jb
push
imul
int
cmpsl
push
in
ja
inc
pop
and
stos
subb
sbb
inc
and
pop
int3
mov
mov
rcr
sbb
and
dec
fildl
clc
in
ds
or
into
push
test
mov
add
cs
daa
jae
cltd
add
adc
xor
jns
fcmovbe
pop
into
push
mov
hlt
push
pop
xor
fsubrs
lcall
out
movsb
test
pop
leave
fstpt
or
adc
xor
into
sahf
fwait
js
aam
aad
jmp
or
out
insb
jle
sbb
popa
test
sub
xor
push
or
adc
sbb
jecxz
jge
cmp
dec
in
mov
clc
push
add
and
or
sti
gs
mov
mov
mov
sub
mov
xchg
adc
adc
xchg
xchg
leave
xchg
icebp
pop
jns
xchg
call
or
xor
push
jno
and
sbb
xor
bound
push
out
xchg
aam
cld
aam
movsb
jns
cmp
call
xor
sbb
dec
push
jb
mov
jg
jbe
daa
shl
mov
pslld
testb
push
push
xchg
aad
ljmp
inc
inc
in
data16
mov
pop
pushf
or
arpl
cmp
jmp
adc
jmp
data16
enter
adc
dec
lahf
push
mov
inc
sbb
dec
enter
push
push
mov
inc
into
popa
and
jmp
and
jp
sub
cwtl
clc
rcrb
rcrb
pop
xchg
xchg
cmpb
es
aaa
adc
mov
hlt
push
jl
mov
xchg
hlt
push
jl
push
and
mov
lock
or
dec
fcomps
aad
or
scas
je
jno
lret
pop
pop
pushf
imulb
pop
std
test
jecxz
cmp
xchg
lock
jl
and
call
pop
sbb
mov
xchg
in
outsb
pop
leave
mov
jmp
add
or
ror
push
std
sub
lahf
scas
int3
xor
imul
sub
mov
shll
jo
je
jge
adc
jno
daa
inc
scas
stc
std
daa
pop
add
mov
cmp
xchg
dec
pop
les
xor
mov
xlat
negb
inc
mov
xchg
sub
stc
or
test
fimuls
mov
pop
xchg
push
js
cmpsb
xchg
xchg
insl
pop
xchg
scas
inc
push
sub
cwtl
ficompl
test
xchg
pop
jmp
xchg
dec
or
add
test
adc
mov
push
stos
mov
sarb
fidivs
pop
add
nop
cmp
popa
push
and
in
cmp
inc
dec
dec
inc
pop
mov
addb
dec
pop
loopne
scas
cli
xor
sub
adc
divb
pop
cmp
add
sbb
rcl
jb
cld
push
sub
sbb
rclb
cmp
test
add
lret
mov
sahf
xor
adc
dec
int3
cmp
rorl
adc
cmpsb
xor
shlb
dec
and
addl
add
ret
or
pop
mov
pop
movsb
jnp
push
mov
mov
dec
mov
mov
jge
scas
lcall
pop
dec
lahf
ret
add
pusha
add
lret
mov
pusha
and
pop
mov
cltd
ror
je
outsb
lret
mov
mov
mov
leave
adc
adc
or
pop
xchg
loop
aaa
dec
ret
push
add
and
repz
cmp
hlt
lret
cmp
and
notl
xor
dec
xlat
imul
arpl
push
fsts
xor
mov
sub
data16
sub
fdivl
sbb
leave
roll
lcall
rcl
cmc
test
lahf
pop
xchg
ficoms
out
or
fistpl
mov
call
scas
jb
arpl
jge
and
sbb
jbe
fwait
push
xor
xor
icebp
cmp
enter
xlat
push
pop
les
int3
jmp
jns
jnp
mov
or
dec
movsl
cmp
iret
das
jno
mov
xchg
sar
adc
jge
and
jne
ficomps
aam
insl
dec
dec
xchg
test
ret
cmpsl
sbb
jne
aam
fcmovne
pop
sbb
imul
fwait
mov
movsl
je
push
lods
jg
shll
int3
out
je
mov
xor
imul
loopne
lahf
push
jmp
jge
es
shrb
fxch
lahf
mov
lcall
pop
sub
fwait
adc
ljmp
pop
add
shrl
sti
sbb
fcmovnu
cmp
add
sub
push
stos
cld
jo
sbbl
lea
fsubrs
xor
cmp
xchg
adc
push
pop
jns
iret
mov
push
scas
push
mov
das
addps
pop
sub
jg
lret
add
es
sub
cs
sub
fwait
sub
movsl
push
div
add
lret
push
nop
xchg
jmp
jmp
loop
out
mov
adc
pop
leave
or
lock
addr16
mov
push
adc
andb
lock
cmp
xor
and
pop
xchg
add
ljmp
sarl
inc
orb
or
test
push
push
out
hlt
shll
xchg
jbe
imul
push
sub
aas
push
loop
inc
out
ds
mov
fimuls
inc
inc
mov
cs
mov
lods
sbb
cltd
xchg
aad
fsubrl
or
inc
cmp
enter
enter
sub
stos
mov
sub
sbb
push
inc
out
out
push
and
sbb
xor
mov
clc
scas
mov
jne
fcoml
pop
xchg
pop
out
dec
fsubs
enter
mov
pushf
ja
add
dec
lret
push
mov
push
jno
call
cli
ficoms
loopne
les
test
cmp
jge
call
rcr
or
aam
scas
xchg
lcall
pop
pop
or
jl
shrb
pop
insl
mov
movsl
xchg
push
sub
and
push
pshufw
push
icebp
inc
je
mov
fsts
sbb
cmpsb
jle
xchg
dec
inc
jmp
and
mov
mov
lods
pop
fwait
adc
and
push
dec
pusha
movsl
push
sahf
xchg
jb
enter
xchg
js
jp
rcl
fstpl
sahf
mov
push
ds
ficomps
sub
fsubrs
mov
cmc
or
adc
jmp
ror
lcall
repz
js
aas
dec
addr16
adc
sbb
das
jl
add
nop
xchg
adc
pusha
xlat
daa
leave
mov
sbb
push
jnp
mov
push
jp
pop
jecxz
xor
es
fdiv
scas
fldcw
insl
add
lods
xchg
adc
outsl
pusha
outsb
cltd
cltd
stc
scas
dec
cmp
pusha
insb
adcl
testl
adc
pop
incl
lods
shrb
xchg
mov
fdivs
shll
mov
iret
movsl
push
outsb
sahf
loopne
repz
sti
hlt
jo
mov
cmp
daa
dec
lcall
fwait
in
ljmp
dec
mov
scas
jns
mov
sahf
mov
rorl
int3
push
pop
inc
cmovge
push
pop
lea
lea
dec
mov
jle
dec
xor
movsb
pop
fucomi
sub
in
iret
jns
outsb
sti
mov
fsubl
and
fnstsw
movl
jecxz
cmp
xor
or
jg
rcll
sbb
adc
test
cmp
xchg
int
jo
mov
push
jb
add
sarb
pop
stos
sub
mov
je
rolb
mov
mov
mov
cwtl
jmp
lea
nop
push
adc
adc
scas
xchg
and
data16
enter
into
push
and
in
jne
insb
mov
aas
dec
add
mov
dec
push
mov
mov
push
scas
cli
push
scas
jl
cli
mov
jmp
rclb
rclb
pop
dec
lret
sbb
xlat
mov
inc
cwtl
mov
jmp
add
das
inc
aam
jg
pusha
cli
iret
movsb
sar
pop
mov
les
mov
jae
dec
jecxz
mov
or
adc
dec
popa
shll
insl
jbe
push
xchg
and
daa
int
push
fnstenv
test
inc
cmpsb
add
xchg
mov
incl
mov
insl
fwait
push
out
std
and
hlt
test
daa
in
lock
push
scas
inc
and
fcomi
dec
out
xor
push
shll
or
dec
insb
jp
cli
cs
inc
les
movsb
xchg
cmc
dec
orb
subb
loopne
es
popa
lcall
pop
xchg
in
pop
push
push
push
sbb
or
bound
or
mov
negl
pop
stos
push
fisubrl
sbb
adc
es
xchg
lea
out
xchg
sar
push
outsb
sarb
and
inc
fdivl
aam
sbb
cmp
rorb
jb
jnp
lock
mov
pop
rorb
loopne
jbe
jb
aam
popf
push
xchg
scas
mov
push
out
fwait
lea
mov
nop
jge
popa
lret
scas
push
fimull
mov
xor
lock
pop
lcall
ds
lcall
cmpsb
iret
mov
cmp
loop
cmc
and
inc
out
push
enter
inc
add
lcall
mov
cmc
daa
or
inc
shrb
mov
xor
lods
dec
addr16
fwait
ret
pop
bound
mov
lea
pushw
or
jmp
adc
lahf
adc
ret
loope
inc
pop
ljmp
scas
push
mov
shll
addr16
icebp
das
mov
push
in
mov
es
and
into
shl
inc
push
push
mov
clc
das
mov
lret
xchg
push
stos
and
jnp
aad
pop
iret
xchg
xor
cmpsl
pop
ss
jp
and
cld
inc
fcoml
pop
fwait
test
push
loop
repz
scas
lods
mov
mov
and
roll
addr16
ljmp
cmp
adc
sahf
dec
aad
xor
addl
mov
shr
sub
xchg
cmp
push
push
dec
cmp
or
pop
sbb
out
cs
adc
mov
inc
adc
imul
mov
aam
cltd
leave
xor
cs
pop
test
imul
and
jp
loop
push
jno
or
pop
icebp
xchg
sti
sahf
cmp
adc
data16
subl
add
lret
daa
shlb
out
aas
out
jne
sbb
or
fnstcw
mov
icebp
es
xor
int3
mov
pop
stos
adc
leave
jnp
imul
sbb
pop
jge
lcall
add
jle
jle
pop
ds
xchg
push
imul
bound
sbb
rclb
imul
das
mov
cmp
loop
pushf
mov
jmp
sbbl
xchg
lds
inc
icebp
push
ja
popf
stc
bound
push
mov
and
insb
int
je
push
xor
sub
jle
fs
or
aad
lret
ja
push
cltd
rep
sbb
mov
cmp
cmp
hlt
and
jne
pop
cmp
js
add
shl
enter
pusha
js
sbb
xchg
xchg
aad
mov
mov
pop
popf
daa
mov
mov
mov
push
inc
outsb
in
mov
out
pusha
jne
mov
xor
insb
xchg
mov
mov
xchg
and
cmpsb
ja
and
test
outsl
lcall
negl
push
rol
jo
push
mov
sub
lret
xchg
sbb
sbbl
mov
mov
jnp
fdivrp
testb
jmp
mov
ret
ja
dec
test
sub
outsb
ror
imul
mov
mov
fldt
jl
outsl
cld
leave
inc
sar
push
xor
cwtl
out
cmp
arpl
in
in
pop
push
addl
das
movsb
fs
ffreep
in
xchg
sarb
cmp
hlt
iret
jo
mov
fucomip
bound
rorl
sub
dec
dec
push
mov
gs
mov
mov
call
dec
xlat
daa
fmull
xor
add
inc
sti
adc
in
lea
push
add
jmp
adc
int
fidivrs
adc
dec
adc
rcrb
mov
add
ret
xchg
fsub
int3
pop
and
mov
out
inc
mov
push
or
ja
pop
data16
movsl
xchg
inc
aad
loopne
in
cmp
int3
dec
test
out
pop
dec
xchg
in
add
xchg
icebp
adc
add
pop
add
jno
add
int
jnp
xorb
sti
jno
push
adc
pop
cwtl
out
and
sbb
shlb
pop
mov
push
xchg
ds
adc
dec
cmp
mov
mov
scas
and
cmpsl
push
jnp
fs
fiaddl
outsl
jge
add
cmp
lds
icebp
movb
shlb
jno
psubb
pop
pop
icebp
dec
sar
js
or
cmp
cmc
clc
out
push
push
mov
push
mov
sub
fstps
icebp
cwtl
fsubrl
cmp
cmp
orl
cmp
and
in
les
or
out
xorb
pop
fnsave
or
repnz
fsub
pop
cmp
mov
lret
sub
add
mov
adc
pop
jp
aad
cmp
xorl
push
add
data16
dec
xchg
testb
xor
xlat
mov
jbe
sbb
sub
jle
das
rcl
cld
dec
ja
adc
dec
and
mov
jns
inc
mov
arpl
fstl
pop
ss
or
out
out
xor
push
test
stos
pop
xor
test
jl
cli
cmp
loop
test
add
cs
sbb
cmp
mov
repnz
fs
dec
out
sub
leave
stc
cmpsb
icebp
jnp
pop
mov
sbb
repnz
jl
aaa
pop
ret
test
je
pop
or
outsb
jns
mov
movb
xor
jl
mov
xor
iret
out
mov
das
xor
push
imul
je
int3
stos
mov
jo
pop
out
xor
or
sub
cmp
and
jl
rol
add
loop
mov
mov
sbb
push
mov
cld
cmp
shll
pop
jae
dec
imul
mov
mov
and
xlat
mov
mov
xchg
lret
mov
mov
aam
insb
in
mov
inc
cmp
out
lret
sbb
movsb
dec
popa
inc
stos
mov
shrb
xor
xor
enter
ror
cld
into
mov
adc
adc
mov
push
adcb
je
mov
pop
adc
outsl
or
fs
mov
js
ja
cmc
call
pop
add
lcall
cmc
or
fstpl
movsb
or
push
std
fcompl
jb
aad
fs
push
test
inc
bound
fs
ret
dec
out
sbb
xchg
cmp
or
movsb
cltd
adc
stc
sti
xorl
leave
jmp
and
xor
dec
out
mov
pop
mov
cmp
xchg
push
fsts
pop
lods
outsb
jne
aam
xchg
adc
aad
push
cwtl
xor
ds
fnclex
jbe
adc
push
cmp
enter
nop
sub
fincstp
mov
negl
daa
mov
mov
movaps
jb
clc
mov
pop
pop
jo
xorl
or
add
xchg
cwtl
arpl
std
sub
pop
mov
pop
jle
int3
roll
into
jle
pop
daa
mov
push
ljmp
ljmp
in
and
sub
mov
xor
sub
pop
pop
adc
mov
jp
imul
xor
mov
adc
stos
addr16
jb
scas
mov
jb
sahf
bound
fsub
xchg
add
jne
mov
stc
cmp
jae
xchg
out
or
enter
insl
gs
xchg
cmpsb
lcall
cmpsb
pop
mov
fisubs
rcr
mov
stos
outsl
ret
ret
pop
ss
inc
sub
pop
aaa
stos
test
jg
lret
and
mov
out
dec
inc
cs
cmp
xchg
call
cmp
imul
scas
xor
mov
mov
sub
ret
das
push
popa
pop
xor
and
add
cmp
mov
inc
add
icebp
out
xchg
mov
inc
les
jle
add
sbb
gs
and
sub
mov
pop
jp
orl
sub
jae
test
dec
ds
xchg
ret
jne
adc
add
sub
lds
in
push
and
cmp
add
int
into
cmp
loope
push
js
fcmovnu
test
shl
jnp
push
jnp
mov
xor
mov
int3
push
lcall
jo
mov
enter
inc
sahf
mov
into
jmp
adc
cmp
stos
fwait
addr16
rorb
xor
mov
sub
sbb
mov
iret
fdivs
push
pop
mov
sub
mov
rcrl
mov
mov
sbb
mov
adc
ds
sub
cli
sarb
clc
sbb
and
mov
popf
push
sti
subl
or
jne
mov
and
or
sbbl
sbb
jo
mov
fisubrl
xor
jg
sbb
ret
jo
or
pop
lahf
pop
xchg
jle
das
xor
in
jo
shrl
sbb
sahf
les
jle
and
icebp
mov
out
fcomps
mov
imul
imul
out
inc
push
jno
lahf
and
jns
arpl
fnsave
movsl
insb
push
in
outsl
pop
jecxz
int3
sub
add
cmp
sbb
or
dec
mov
mov
call
sub
mov
lods
popf
cmp
dec
lock
and
sub
pop
out
sti
pop
xchg
dec
mov
and
push
ret
mov
cmpsl
and
ficompl
ljmp
and
cmp
fimuls
add
cli
inc
dec
push
insb
in
loopne
pop
dec
add
fcomp
enter
jbe
jnp
inc
enter
arpl
gs
mov
add
in
rorl
xor
mov
adc
jg
push
or
push
xor
jmp
cmpsl
and
dec
adc
and
jb
test
adc
lcall
pop
leave
mov
cs
fisttps
ret
sbb
push
cmc
repz
enter
cmpsw
fs
mov
push
cmp
fisttps
pop
lea
pop
rcrb
lock
lret
ret
fcmovne
and
mov
imul
mov
inc
rcrl
mov
cmp
test
jb
mov
jecxz
xor
daa
jmp
subb
gs
dec
jmp
pop
daa
outsb
mov
lea
das
sub
dec
sub
nop
cmp
xchg
ja
inc
int3
fs
lods
ret
stos
insl
jecxz
das
test
jl
sub
pop
sar
push
imul
stos
xor
sub
sbb
gs
lds
pop
rol
movsb
sbb
inc
popf
outsb
adc
in
loop
mov
inc
idivb
push
push
lcall
push
mov
faddp
in
icebp
and
cmpsb
push
inc
cmc
mov
push
or
sub
or
add
fcompl
scas
pop
xor
outsl
popf
call
xchg
into
xchg
ret
push
push
ss
js
mov
pop
jecxz
out
and
sti
and
jo
dec
sub
fsubl
scas
push
fidivl
fisubl
sarb
icebp
insb
jge
imul
xchg
ja
bound
sbb
out
dec
fisttpll
push
es
ja
cwtl
xchg
push
inc
mov
mov
mov
stos
xor
lea
sahf
in
sub
repz
popf
jg
jecxz
mov
and
fs
adc
leave
push
int3
mov
jns
add
lcall
xchg
ret
mov
dec
jmp
mov
les
inc
adc
cmp
sbb
clc
fldcw
xor
imul
xchg
cmpsb
loope
bound
mov
daa
fcmovnu
insb
repnz
dec
mov
in
repnz
imul
pop
js
push
in
push
jb
cmp
and
xchg
push
cld
test
and
dec
dec
cmc
or
and
mov
jmp
call
push
fisubl
rorb
out
add
cs
jle
fsubl
ret
mov
rcpps
sub
movsl
or
into
mov
push
and
sub
das
pop
mov
dec
test
lods
mov
scas
sbb
sti
les
mov
mov
lods
shr
cmp
adc
xchg
aam
int
jge
inc
ret
cltd
pop
or
subb
fwait
in
mov
call
mov
cmc
mov
inc
jbe
bound
sbb
cltd
les
mov
dec
lock
out
call
mov
fiadds
xchg
loopne
shll
into
mov
imul
cmpsb
arpl
jne
mov
inc
into
add
pop
mov
stos
dec
hlt
insb
ret
jl
out
imul
pop
push
ljmp
fists
mov
jecxz
jnp
ds
xor
in
push
dec
mov
ljmp
addr16
shrl
sti
je
sub
aaa
test
repz
sub
ds
mov
jo
add
xchg
sub
or
sub
xorb
inc
push
jg
push
sub
ss
insl
pop
in
push
sub
xchg
or
lcall
xchg
psllw
mov
jo
int
pop
lcall
dec
mov
add
shll
pop
fadds
pop
inc
shrb
or
mov
bound
adc
call
mov
test
lcall
cltd
dec
jp
ds
sbb
test
pop
and
insl
in
enter
mov
inc
dec
repz
jecxz
mov
out
js
xor
mov
enter
add
rclb
popf
mov
and
xchg
mov
mov
jb
and
ds
dec
ror
cmp
scas
push
sbb
adc
lock
sbb
insl
inc
sub
pop
mov
popa
js
ficoml
sbb
test
rcrl
pushf
mov
xlat
mov
ljmpw
sti
enter
lret
and
inc
mov
scas
dec
cmp
push
xchg
divl
cmp
test
lods
rolb
je
mov
fisubrl
or
loopew
push
andl
rcrb
repnz
sti
fiadds
xorl
mov
push
xor
loopne
or
roll
xchg
and
xchg
sub
mov
push
out
sub
jns
aad
sbb
or
ss
jo
xchg
jp
imul
stc
mov
inc
nop
add
push
and
call
sub
pop
mov
outsb
inc
ja
cltd
pop
scas
or
and
push
mov
stos
inc
outsl
cmpsb
leave
adcl
mov
daa
mov
adc
xchg
sbb
adc
rorb
ficoml
cmp
add
xchg
push
add
inc
cld
or
mov
bound
xor
aad
scas
mov
dec
sahf
xor
add
mov
cmp
adc
push
sbb
insb
cltd
push
subl
fwait
inc
rorl
pop
insl
ljmp
pop
outsb
call
inc
cmp
dec
aaa
dec
and
in
rol
xchg
mov
and
sub
mov
shl
insb
pop
aaa
or
adc
or
fldcw
xor
fisttpll
push
lcall
outsb
jle
sbb
int
add
pop
and
nopl
xlat
and
fsubrl
ds
mov
pop
arpl
scas
add
dec
orl
packuswb
inc
cltd
fwait
add
dec
lock
clc
push
imul
adc
jne
in
jmp
add
fistps
or
add
xchg
outsl
sahf
xchg
mov
mov
out
inc
nop
pop
adc
adc
sbb
sub
or
lea
js
xlat
test
imul
insl
jecxz
add
fisttpll
jecxz
out
jle
jne
mov
pop
scas
je
shl
fcmovb
movsl
movsb
test
icebp
insl
mov
pop
fisubrl
aaa
pop
sbbb
ret
pop
enter
xchg
xchg
insb
sub
fstp
xor
mov
icebp
mov
lcall
xchg
inc
insl
pop
ret
add
xchg
test
pusha
test
rol
and
pop
fcmovne
or
aas
xor
and
jmp
mov
xor
sbb
ret
pusha
dec
out
mov
jnp
in
push
rolb
aam
out
add
mov
aas
repz
rclb
outsb
xlat
sub
sub
lods
push
movsb
push
test
inc
or
lahf
loop
addr16
dec
add
push
subb
and
mov
aad
aaa
push
lcall
loop
lcall
stos
jo
cmp
test
sbb
xor
aam
pop
cmpsl
lods
shl
jb
test
sbb
jmp
jae
rorl
sar
sub
xchg
fmull
ficoml
xchg
mov
stos
pop
rolb
cmc
mov
mov
adc
clc
fs
or
out
cmp
push
addb
and
jle
xor
mov
movsb
sti
ror
push
arpl
hlt
les
xchg
cmpsl
jb
pop
jg
mov
xchg
outsl
in
xchg
inc
loopne
ret
xorl
jns
testl
testb
adc
mov
dec
sub
adc
push
inc
xlat
outsl
add
adc
insb
popf
mov
lock
add
inc
pop
scas
and
pushf
ja
mov
repz
cmp
andl
in
mov
pop
pop
ficoml
lahf
js
call
rcll
loope
nop
sbb
js
es
mov
sbb
addr16
insl
mov
pop
or
aam
push
xlat
daa
test
jb
mov
add
jmp
test
dec
mov
sbb
icebp
cmpl
inc
xlat
mov
mov
xchg
roll
mov
cmc
loope
cmpsl
xlat
das
cmp
fists
mov
xor
mov
cmpsb
add
pop
psrld
aam
inc
inc
into
cli
push
lea
dec
xor
and
jbe
cltd
push
mov
dec
in
mov
nop
xchg
insl
mov
rcrl
mov
in
jle
imul
loopne
mov
in
pushf
mov
popf
cmp
les
mov
loopne
fimuls
std
fsubrl
push
and
popa
lods
daa
sbb
push
es
pop
mov
jb
lcall
pop
lods
jb
lea
movsb
pop
dec
sbb
shll
lret
std
fisubs
mov
inc
inc
and
dec
inc
and
sbb
inc
int3
inc
stos
mov
mov
mov
int
arpl
adc
testl
jecxz
mov
in
addr16
jmp
es
sbb
jnp
scas
out
in
lret
jecxz
leave
andb
cs
into
dec
ret
jp
loop
in
jmp
fistl
les
pop
addr16
stos
mov
pop
mov
xor
mov
mov
xchg
xchg
dec
jecxz
fwait
imul
mov
push
cwtl
fbstp
mov
bnd
and
sub
enter
sbb
int3
mov
imul
test
mov
stos
test
in
xchg
dec
cmp
pop
and
mov
push
imul
push
popa
mov
test
and
insb
cmp
or
test
loope
cmpb
adc
fbstp
jp
sub
lahf
outsb
loopne
pop
inc
or
scas
mov
movsb
mov
int
inc
mov
inc
arpl
ss
push
xchg
flds
fisubrs
shl
adc
pusha
cmp
hlt
insl
mov
sub
adc
mov
xor
test
jg
in
sub
xor
jl
push
adc
fwait
in
clc
sbbb
inc
add
nop
jno
daa
jno
je
outsb
arpl
es
scas
cmpsb
dec
lcall
test
test
inc
popf
flds
lea
pop
dec
dec
mov
in
jo
in
inc
jns
sub
jnp
push
inc
in
push
sbbl
mov
jb
lock
jne
xor
in
loopne
call
or
jbe
imul
repz
pop
xchg
push
and
scas
jl
mov
std
inc
pop
cltd
in
mov
dec
sub
ret
mov
xchg
add
adc
or
jge
jmp
mov
mov
cmpsb
imul
pop
les
inc
dec
push
leave
adc
dec
dec
pop
int3
fimull
insb
pop
xchg
pop
cmpsl
inc
mov
add
pop
sbb
push
xor
dec
push
ret
push
rclb
or
cmp
lret
lret
xor
adcb
lret
pop
pop
outsl
sub
mov
add
mov
fisubs
in
or
bound
xor
stos
cwtl
into
gs
dec
fcom
into
push
and
negb
push
fstl
into
jns
scas
jns
jns
xchg
dec
jb
inc
xor
popa
lcall
xchg
cmp
sub
push
loope
mov
insb
ja
aad
scas
fdivs
mov
xchg
pop
jmp
insl
je
jge
mov
sbb
mov
add
pushf
sbb
or
fstpl
fcmovu
sub
add
je
andb
rolb
xor
incl
dec
lea
lret
lock
rorl
or
push
mov
jmp
ljmp
fldt
add
pop
push
jle
and
ljmp
popa
lods
cli
or
sahf
call
mov
adc
loope
push
sub
pop
or
mov
sub
out
lret
insl
pop
add
inc
imul
cmc
cmp
inc
aaa
out
pop
xlat
lret
mov
fidivl
bound
fldcw
fwait
sub
mov
insb
movsl
ljmp
dec
imul
bnd
mov
jg,pt
mov
rcll
rcrb
mov
cwtl
jge
imul
mov
xchg
jmp
cmp
pop
sti
adc
fcoms
gs
shll
test
loop
shlb
lds
and
sahf
sbb
push
test
push
and
arpl
popf
inc
js
xor
sbbl
insb
je
es
pop
dec
sub
mov
inc
pusha
adc
mov
mov
and
mov
adc
mov
les
rcll
movsl
in
test
xlat
add
pushf
xor
shr
adc
and
add
movsl
mov
jle
jecxz
xor
iret
mov
jp
xor
lods
into
hlt
push
cmp
sbb
imul
xlat
std
shl
cmc
mov
cwtl
dec
mov
mov
int3
xor
mov
jbe
test
in
and
add
jp
imul
dec
sub
mov
jo
add
xor
clc
dec
lahf
xchg
int
loope
das
into
mov
jae
xchg
mov
stc
movlps
mov
mov
cmp
fwait
outsb
mov
and
in
jae
add
jmp
cmp
in
inc
pop
xchg
out
mov
pusha
lock
or
push
adc
or
mov
jp
mov
lods
mov
ljmp
mov
movsl
filds
mov
movsb
adc
dec
psubsb
jbe
sbb
test
insb
xchg
jmp
cmp
popa
ss
aaa
jge
movsb
and
mov
and
xchg
sub
nop
cld
int
sub
ffreep
push
pushf
pop
jnp
add
inc
push
loop
jno
xchg
mov
outsb
jge
mov
lahf
pop
xchg
lret
repnz
arpl
fdivrl
xchg
xchg
cmp
xlat
push
and
push
bound
push
cmp
add
adc
mov
cli
sbbl
and
pop
push
jecxz
fistpll
xchg
cwtl
fbstp
mov
popa
mov
dec
fidivs
test
stc
dec
mov
add
push
cmp
fistl
into
imul
add
ret
pop
outsb
and
cli
xchg
mov
xabort
out
data16
xor
push
bound
push
lods
scas
shll
push
in
sbb
push
pop
outsl
loope
shl
call
hlt
and
fwait
insb
jns
pop
sbb
test
mov
sub
popf
add
inc
mov
hlt
dec
sti
repz
ljmp
pop
mov
sub
jbe
outsl
inc
fdivl
add
jg
fcomps
push
xor
lahf
iret
hlt
es
movsl
pop
xchg
ja
rolb
sbb
das
fmuls
mov
pop
mov
fistps
adcb
fnsave
loop
pusha
push
push
mov
or
xchg
pushf
fistl
xor
pop
pop
mov
pop
movsb
pushf
and
or
pop
movsl
jb
sbb
dec
adc
jmp
push
inc
xchg
int
push
lcall
cmc
cld
sub
mov
popa
xlat
jb
std
insb
mov
jno
sbbb
into
js
pop
cmp
push
cwtl
lods
sbb
sbb
pop
mov
gs
dec
sti
xchg
imul
in
test
pop
cmp
fcomi
mov
imulb
bound
and
sbb
inc
push
shl
xchg
out
iret
push
mov
cwtl
mov
inc
pop
and
adc
and
sub
mov
je
jae
dec
mov
push
inc
insb
aad
dec
fnstcw
dec
push
sub
aaa
xor
cmp
jae
arpl
lret
pop
adcl
ss
adc
les
jmp
jae
pop
lea
pusha
pop
fsubp
lock
xor
movsl
jmp
aas
xor
mov
mov
dec
adc
push
lods
repz
fs
mov
call
roll
or
and
loope
imul
pop
bound
inc
loop
mov
int
imul
push
or
shll
lahf
add
ds
pop
call
imul
jno
lcall
and
dec
rcll
push
xchg
mov
sbb
or
lcall
sub
in
dec
add
jae
ja
push
inc
mov
mov
dec
nop
xchg
cmpb
adc
js
inc
inc
xchg
scas
cs
push
xchg
data16
xchg
add
cld
inc
sbb
dec
test
insl
rorb
inc
jle
bound
fists
and
adc
lods
je
in
or
jecxz
push
mov
pop
add
or
mov
movsb
cmp
test
pop
cs
inc
dec
addr16
sub
int
in
adc
test
adc
mov
outsb
mov
popf
outsb
sbb
test
adc
or
outsl
dec
jge
aam
fs
add
movsb
xlat
add
out
xor
int
jns
lret
dec
jns
jnp
jp
loop
mov
xlat
lea
pop
sahf
inc
lods
pop
push
shr
lret
repz
movsl
aaa
inc
outsb
icebp
pop
lds
sub
incl
dec
rclb
insb
sub
out
aas
inc
movsb
aaa
or
fisubrs
cmc
jno
push
pushf
adc
fiadds
or
js
das
in
daa
les
and
jbe
iret
int
pop
or
lds
cltd
cmpsl
fldenv
push
fsubrs
sbb
jnp
push
mov
cld
loopne
iret
xchg
aaa
sbb
les
add
stos
add
fldz
test
lock
shrl
xchg
mov
cmpsb
mov
mov
adc
jecxz
xchg
inc
fsubr
mov
and
loop
enter
lahf
pop
fsubs
pop
in
and
hlt
pop
int3
inc
jg
xor
int3
xor
daa
jae
jne
cmp
lret
push
sub
xor
pop
jne
mov
ds
stos
pop
mov
xchg
push
adc
lahf
jnp
jae
xor
cmpl
mov
orb
cmc
aam
jmp
inc
xchg
jnp
ret
rolb
xor
xor
mov
mov
fdivs
add
loope
xor
xor
xor
inc
mov
cmp
ret
mov
out
rorl
dec
sbb
jns
pop
lods
and
repz
pushf
sbbl
xor
stc
rclb
sub
pusha
push
sub
mov
loop
jo
mov
mov
clc
mov
or
jmp
lock
lods
cwtl
repz
enter
je
insl
test
shll
or
int3
fildl
or
shlb
jno
test
jl
mov
movsb
xor
adc
es
data16
mov
sbb
cmp
adc
push
test
mov
rclw
pop
pusha
sub
xchg
push
cwtl
inc
xor
pusha
add
stc
jo
cs
inc
and
pop
pop
sub
lds
add
adc
shl
xchg
mov
pop
push
dec
cmp
xor
push
gs
add
mov
lods
enter
lret
jle
sbb
push
adc
push
and
out
in
jns
mov
ss
lret
mov
cwtl
mov
mov
xor
cmp
data16
test
ds
push
mov
or
test
inc
and
fidivrs
ret
cwtl
adc
fsub
clc
pop
jns
hlt
std
push
sub
mov
jae
mov
adc
sub
jno
xchg
iret
pop
mov
insl
ja
push
xlat
aad
jp
jp
add
out
xor
xor
add
xchg
loopne
je
push
std
icebp
decb
test
into
adc
push
mov
leave
mov
sbb
ss
ficompl
pop
cmpsb
mov
daa
test
rcl
push
repz
loop
daa
xlat
test
gs
mov
gs
jecxz
push
dec
repnz
fidivrs
mov
adc
sahf
jo
mov
repz
lcall
stc
pop
aaa
add
test
sbb
stc
cs
mov
or
xor
adc
xchg
roll
mov
xchg
lret
enter
aam
sbb
mov
and
outsl
imul
inc
shlb
sub
scas
mov
mov
lret
out
adc
repnz
or
int
or
and
jl
scas
lods
xchg
sub
pop
sub
mov
iret
test
cmp
subb
mov
mov
push
shl
call
lods
sarb
xor
insl
inc
in
outsb
movsl
xchg
xchg
xchg
pop
mov
cmp
push
dec
ret
and
sahf
fstp
pop
ret
imul
mov
jns
test
mov
jns
pop
ja
js
fstpl
pop
push
mov
push
pop
jmp
xor
into
lds
mov
mov
mov
movsl
cmc
push
mov
cmp
je
add
into
mov
cmpsb
outsl
int
orl
push
popa
adcb
inc
in
xchg
push
arpl
aaa
mov
fnstcw
jle
stc
stos
adc
imul
and
xlat
out
add
push
sbb
ljmp
mov
cmc
pop
cmc
jge
xor
shrb
dec
sbb
fdivrp
ss
scas
fs
sbb
jp
test
aaa
ljmp
xchg
ficoml
sbbl
mov
aad
xchg
push
jecxz,pn
xor
inc
cltd
nop
cmp
aaa
fbstp
cli
jb
jmp
cld
push
dec
add
pop
in
stos
test
stc
mov
in
pop
jle
shlb
bt
add
notl
ret
in
add
into
fs
pop
pop
loopne
jg
pushf
adc
les
adc
or
jecxz
rorb
or
imul
adc
in
adc
add
jle
mov
rcl
test
push
push
sub
mov
ret
test
gs
push
mov
sub
in
rolb
push
aas
stc
out
or
push
sbb
lods
into
push
add
jb
mov
dec
push
lahf
pop
sbb
daa
sub
xchg
dec
mov
and
inc
adcl
add
pop
stos
lods
push
add
imul
das
test
outsb
or
or
in
lods
jne
add
cltd
mov
add
dec
mov
push
hlt
data16
lock
add
lods
jmp
xor
gs
cmpl
leave
jo
pop
jns
mov
jno
rorl
fsubrl
dec
ds
cmp
or
and
hlt
in
mov
fimull
inc
nop
add
roll
push
jmp
out
iret
rcrl
pextrw
test
mov
outsb
and
lds
test
sub
add
or
das
into
push
scas
cmp
xorb
in
scas
pop
xor
scas
out
xchg
jl
xor
shll
jecxz
and
sub
or
xor
dec
mov
aas
jns
clc
pushf
pop
inc
push
inc
and
repnz
pop
inc
shll
mov
push
cmpsl
gs
and
loopne
add
sbb
insb
xchg
pop
mov
adc
or
out
cmp
lea
xor
push
sub
xchg
add
and
or
push
loopne
add
lcall
out
mov
sbb
outsb
cs
xchg
inc
inc
mov
pop
clc
mov
mov
dec
fwait
sub
fistl
or
and
jb
or
push
xlat
jge
mov
or
arpl
xchg
xchg
or
or
cwtl
mov
fwait
call
mov
jbe
sbb
sbb
test
xor
sbb
mov
cmpsl
adc
popf
or
xor
or
int3
add
je
or
mov
push
movsl
push
cmp
xchg
xor
mul
in
mov
adc
or
sub
cmp
inc
test
mov
mov
int3
and
enter
incl
and
xor
adc
ret
fimull
sbb
jns
push
mov
mov
xchg
jo
sub
fadds
shlb
cli
fs
sahf
ja
stos
inc
imul
mov
movsl
or
rolb
cmpsl
pop
iret
jle
imul
cmp
dec
pop
ja
imul
inc
cmp
stos
pop
sub
ljmp
lds
dec
lret
xchg
dec
add
lods
aad
outsl
sub
cmpl
xchg
sbb
mov
stos
mov
inc
fs
cmc
mov
xor
scas
mov
pop
sbb
and
sub
xchg
and
mov
jbe
xor
mov
out
push
popl
xchg
ret
sub
in
inc
xchg
aas
iret
ja
adc
cld
add
xor
lds
push
jne
push
fsubrl
xchg
or
enter
dec
sarb
sub
fs
xchg
dec
orl
loope
dec
test
push
sub
mov
loop
push
push
jns
mov
call
mul
mov
jno
adc
jmpw
sub
push
test
das
mov
orb
mov
and
push
test
int3
mov
shrl
mov
addb
jmp
sub
in
stos
ja
push
adc
lods
mov
inc
push
mov
arpl
test
pop
roll
mov
mov
aam
adc
mov
sub
xor
or
outsl
mov
or
mov
rclb
or
adc
push
xchg
mov
movsb
mov
outsb
inc
cmc
out
bound
mov
fs
ljmp
add
es
mov
fbld
neg
outsl
ret
push
rcrl
loop
xor
into
sub
sbb
push
mov
xor
mov
fcoml
pop
js
xchg
or
lret
mov
mov
adc
mov
std
jecxz
dec
pop
fwait
add
scas
daa
mov
fwait
lahf
mov
push
sub
or
xchg
pop
jmp
push
fstpt
loopne
and
cld
fnsave
flds
mov
or
aas
jecxz
insb
dec
adc
sub
jle
aad
push
pop
sub
ret
cwtl
imul
mov
int3
dec
mov
lcall
and
rep
mov
jo
popl
push
adc
pop
jno
movsl
push
pop
add
stc
subb
or
sti
rolb
jns
inc
push
and
cmp
and
inc
mov
rolb
fwait
sahf
in
mov
push
jns
imul
and
mov
aad
pop
imul
or
mov
cli
sbb
or
mov
xor
scas
call
iret
mov
xchg
rclb
mov
inc
xchg
sub
sbb
pop
jp
bound
int3
push
sub
les
in
and
aaa
scas
jl
add
cltd
xchg
out
fnstsw
repz
cmp
cmp
cmc
insl
xchg
aas
dec
inc
xlat
les
xchg
mov
cwtl
fidivrl
jmp
mov
testb
mov
inc
push
inc
popf
cmp
ret
test
jecxz
icebp
mov
nop
mov
cmp
sbb
mov
pop
sub
push
xchg
push
or
add
push
mov
stc
sbb
clc
outsb
or
sub
ret
fsubs
push
out
mov
mov
mov
sti
jno
test
loope
aaa
pop
push
les
into
gs
pushw
mov
sub
loop
push
xor
lods
push
jl
filds
loope
xchg
mov
jbe
add
or
and
scas
je
iret
data16
ret
dec
inc
cs
jl
push
pop
jmp
sbb
cmp
ret
cltd
xor
or
inc
jmp
xor
cmc
pop
mov
adc
dec
dec
ja
or
clc
adc
cmp
inc
fmuls
pusha
icebp
jnp
enter
jecxz
sbb
call
cmp
pop
stc
into
push
mov
test
enter
stos
mov
jne
test
arpl
sbb
movsb
out
ljmp
adc
popa
rcll
xchg
call
pop
mov
pop
or
test
aaa
leave
push
jecxz
and
arpl
or
pop
sub
data16
rorl
stos
push
push
rorb
dec
enter
hlt
cmc
sbb
add
sbb
andl
jnp
int
insb
add
stc
mov
pop
add
clc
cmp
aas
and
push
sbb
sub
loop
jmp
adc
pop
outsb
push
movsl
lock
pop
inc
test
mov
rcll
mov
loop
les
dec
xchg
jge
xchg
xchg
mov
pop
std
xlat
bound
cmp
pop
cmc
push
push
cmp
fwait
dec
shrl
scas
jbe
jo
test
lock
xchg
jae
ret
out
call
mov
sti
inc
inc
pop
sub
jle
sub
jno
je
sub
into
pusha
sub
jg
aad
cmc
adc
adc
push
jne
xchg
fmul
dec
int3
and
pop
pop
fwait
enter
movl
stos
mov
sbb
mov
rorb
xor
aas
push
adc
push
icebp
or
mov
push
mov
nop
fisubrl
xchg
pop
xor
aaa
jle
cmpsl
pop
xlat
jp
sub
clc
sub
pop
cmpsl
stos
mov
sub
movsl
xchg
sbb
mov
dec
out
test
cmpsl
sub
and
fstl
xchg
jg
cli
mov
jb
push
data16
sbb
cmp
fstpt
jmp
lea
insb
sti
inc
xor
jl
sbb
jge
pop
jge
cmp
xor
mov
sahf
fwait
cli
divl
bound
aad
fdiv
flds
out
cmc
daa
xchg
push
mul
adcl
mov
lds
cli
xchg
cmpsb
enter
push
dec
jno
xchg
int
fs
aas
adc
int
enter
scas
cmp
xchg
sub
sub
xlat
sub
pop
jmp
xchg
ss
mov
std
iret
xchg
xor
jecxz
insb
fildl
clc
ds
jns
imul
xor
pop
xchg
xchg
arpl
out
ret
aad
aam
or
nop
push
repnz
icebp
mull
into
push
repz
mov
push
fisttpl
arpl
xchg
push
lods
clc
js
ret
insl
pop
lcall
cltd
pop
or
mov
test
or
aam
sahf
lods
push
xor
adc
jae
mov
stos
and
nop
insb
cli
mov
pop
scas
sub
loop
out
test
sbb
call
fadd
xor
lcall
test
enter
lahf
pop
dec
aaa
aad
pop
fcoml
mov
in
pop
gs
add
idiv
ljmp
hlt
lods
jo
xchg
lcall
fs
shrb
out
movsb
jnp
add
insb
push
push
mov
and
std
fmul
mov
filds
cmc
mov
out
out
sbb
jb
mov
test
dec
pop
mov
inc
mov
aaa
cmp
or
inc
pop
aam
push
push
mov
mov
jne
mov
cmpsl
fistl
out
mov
cmp
andb
adc
push
shl
cltd
cmp
loopne
or
or
repz
cs
mov
dec
add
lret
mov
movsl
cmpsb
push
mov
push
xor
xchg
jnp
fstps
sub
adc
sbb
ret
pop
xchg
fisttps
wrmsr
neg
into
push
in
insb
mov
jno
jp
fs
sub
mov
xchg
xor
push
inc
out
rcrl
dec
test
pop
ret
xchg
in
stos
add
lock
outsl
orl
ror
dec
mov
aam
test
and
inc
mov
sbb
jns
mov
jg
pop
das
test
xchg
fidivs
ljmp
jb
adc
imul
lcall
sahf
xorb
mov
sbb
sub
cltd
push
adcl
xor
mov
jne
or
test
loopne
test
mov
sub
fsubl
outsl
data16
lods
vpmovm2w
in
dec
loopne
das
gs
mov
jnp
ret
inc
dec
adc
pushl
das
int3
add
mov
push
mov
aas
lret
int
lea
repz
sbb
test
daa
divb
in
inc
jnp
in
testb
icebp
data16
jns
sbb
pop
cli
xchg
xor
lock
popf
push
inc
or
fistpl
ds
cltd
adc
popa
dec
mov
nop
xor
cmpsb
push
cli
shlb
xor
arpl
in
add
sar
fldcw
ja
into
ds
sarb
mov
dec
call
xchg
nop
std
pop
cli
mov
cmc
stos
mov
into
mov
and
pop
lods
adc
cmp
xor
inc
lahf
sbb
cmp
dec
out
mov
pop
shll
testl
out
lods
sub
xchg
dec
dec
sbb
or
xor
dec
test
bound
xchg
lods
pop
popf
popf
dec
imul
jle
scas
aad
push
add
and
sbb
dec
jo
add
popa
cmp
in
xchg
lods
jo
mov
xchg
orb
lods
adc
fnstsw
jnp
mov
sarb
sub
inc
sbb
cmpsb
mov
out
lahf
sbb
test
adc
scas
pop
dec
psubb
ja
andnps
and
mov
jnp
lcall
and
jge
shlb
inc
mov
fsubrl
mov
push
sub
lret
push
nop
sysexit
popf
xchg
push
pop
psubsb
out
fmuls
dec
enter
pushf
adcb
aas
std
sbb
movsl
leave
mov
and
jne
movsb
incl
cmp
dec
mov
jae
clc
adc
push
xchg
sbb
mov
arpl
push
pop
cltd
and
and
mov
inc
fdivrs
ljmp
xor
je
sysret
and
in
pop
add
ja
pop
xchg
push
sti
stos
test
insl
sar
jg
ljmp
imul
cld
out
and
xchg
fwait
clc
sti
inc
test
int
lret
or
dec
cwtl
push
or
push
sub
mov
fsubrs
jae
in
dec
gs
adc
mov
inc
or
pusha
gs
mov
jg
pop
sub
mov
scas
ss
or
lods
xchg
or
insl
push
outsl
mov
jo
mov
pop
aam
jecxz
mov
loopne
adc
rcrl
jle
imul
es
lcall
cwtl
stos
pushf
outsl
xor
arpl
subl
dec
mov
jmp
mov
call
adc
fsubs
std
iret
push
cmp
mov
and
leave
mov
in
rcl
cmpsl
outsb
ret
insb
fwait
mov
adc
out
pop
pop
inc
clc
out
sbb
mov
outsb
cmp
mov
out
sbb
mov
es
xor
add
mov
cmpb
mov
or
and
push
pop
push
mov
pop
test
outsl
daa
pop
fcomps
lea
fisubl
cmpsb
out
dec
sub
xchg
incl
repnz
rcrb
repnz
add
aaa
and
aas
mov
pop
sbb
jns
test
movsl
pop
cmp
iret
cs
sub
mov
inc
or
in
andl
jno
adc
arpl
es
or
push
int
xchg
dec
inc
mov
add
insb
popf
fsub
stos
xchg
es
adc
ja
add
pop
sbb
push
int
scas
jnp
test
clc
xor
dec
or
fdiv
std
mov
stos
inc
mov
popf
mov
outsb
ret
bound
dec
add
lcall
cmpl
stos
cmp
mov
scas
mov
mov
fisubs
mov
push
scas
jnp
and
push
and
dec
push
subl
pcmpgtw
aad
cmpsb
shl
mov
fisubrs
es
push
loopne
or
jnp
sub
and
push
dec
loop
dec
mov
mull
sub
je
mov
jo
popf
mov
movl
inc
enter
ljmp
inc
mov
jo
sbb
jne
int
cmp
xlat
push
movsl
mov
xor
xchg
aad
jp
dec
aas
push
nop
mov
xchg
and
cwtl
movsb
lahf
jb
inc
leave
or
dec
mov
jbe
cmp
lods
xor
mov
lds
and
pop
jo
dec
loopne
mov
sub
cmpsl
fiaddl
clc
push
dec
dec
sbb
fcmovb
imull
dec
push
imul
movsl
cltd
mov
cmc
jbe
jno
lods
push
jae
adc
cmp
es
lods
call
adc
pop
mov
daa
cmpsb
aad
outsl
mov
das
sbb
repnz
xchg
push
scas
jns
dec
and
int3
testb
pop
fwait
pop
aam
mov
das
sub
addr16
jmp
mov
rorb
rep
push
iret
movsb
dec
test
sbb
dec
leave
test
inc
jns
shll
cld
pop
sbb
shll
out
cltd
adc
and
jns
jp
xorb
lods
pop
xchg
inc
inc
test
add
out
push
sub
inc
fistps
orb
sub
in
sub
sub
jno
or
mov
arpl
dec
in
fwait
inc
mov
mov
lock
dec
mov
nop
inc
mov
cs
int3
add
sbb
mov
sti
shl
mov
pop
fs
ficoml
mov
mov
nop
adc
outsb
mov
pusha
add
and
sbb
int3
inc
mov
or
js
push
pop
mov
leave
dec
push
mov
out
sbb
sahf
enter
xorb
fcoms
in
scas
loope
or
dec
jae
mov
push
stos
mov
dec
mov
sahf
dec
outsb
xchg
and
movsb
or
cmp
inc
inc
into
outsb
adc
jg
mov
out
sub
xchg
jg
stc
repz
jp
cmp
cmpsl
pop
or
sub
pop
xor
sub
std
jns
adc
pop
lods
inc
or
pop
lahf
je
cltd
inc
aas
sub
xor
int3
or
mov
popf
daa
lock
nop
jno
xor
aaa
dec
or
lea
xchg
cmpsl
ret
cltd
inc
sub
dec
addr16
ficompl
push
or
fs
orb
testl
cmp
dec
ja
lds
sbb
mov
add
adc
in
cmp
mov
mov
push
in
outsb
mov
jae
out
dec
movsl
mov
mov
out
pop
xor
inc
jb
in
cli
leave
or
into
lret
pop
fcomps
jge
inc
stc
cmp
loope
sbb
xor
ss
ss
lods
push
iret
add
cltd
scas
add
jle
pushf
lcall
imul
adc
cmp
adcl
push
add
mov
mov
inc
or
xchg
int3
xchg
jnp
jmp
sub
jo
rcrl
mov
movsb
add
inc
and
push
mov
loope
leave
out
stos
mov
ret
xor
push
jmp
push
daa
cmp
push
rclb
test
add
dec
pop
sbb
push
and
mull
lahf
cmpsl
xor
nop
adc
repnz
push
fnstsw
jb
pop
sahf
sti
pop
sub
arpl
mov
das
mov
push
pop
out
inc
sub
popa
pop
mov
insb
in
ds
or
imul
rorl
mov
add
stos
jb
mov
rorl
out
adc
pop
or
push
mov
int
pop
mov
and
test
cmpxchg
inc
xchg
push
fnstenv
sbb
jo
int
ja
repnz
div
pop
inc
xchg
shll
dec
pop
xchg
test
fbld
lods
mov
fdivrs
nop
cmc
push
loope
fildl
inc
jmp
in
add
int
jns
push
xlat
xchg
pop
push
xchg
es
cmp
cmpsl
mov
mov
sub
imul
cli
adc
ret
insl
and
cs
arpl
gs
xchg
dec
sbb
jno
movsb
jnp
push
test
shll
ds
push
adc
sub
pop
ja
xchg
lret
insb
xchg
adc
sub
ljmp
jns
adc
cs
rorb
add
je
mov
neg
xor
or
test
sub
lods
lcall
mov
sub
mov
xor
lcall
xor
sub
cmpl
fnstcw
iret
nop
lret
addr16
fwait
es
mov
add
cwtl
mov
dec
push
add
movsb
test
mov
fs
dec
mov
loopne
sbb
xor
jp
rcrl
int3
cmp
sub
pusha
sahf
inc
mov
push
fistps
scas
mov
aaa
sub
cmp
or
clc
inc
test
jp
pop
push
and
or
int3
xor
xor
lock
pop
adc
pop
xor
fnstenv
stos
push
aaa
repnz
mov
jno
subb
mov
jp
repnz
jge
fs
xchg
out
xlat
adc
outsb
aaa
mov
aad
stc
movsb
icebp
daa
push
jg
insl
ret
dec
ljmp
cltd
xchg
mov
push
jnp
test
pop
fs
jno
in
mov
xlat
push
in
outsl
in
cmpsb
roll
inc
dec
popf
cmp
imul
js
and
call
sub
xlat
test
cmpsl
outsb
mov
jnp
clc
sbb
out
lea
sti
add
sub
add
xchg
cmp
in
fisubl
and
dec
fldcw
lods
mov
loop
dec
subl
jno
outsl
mov
mov
movsb
sub
out
iret
push
jb
pusha
test
sbb
sub
cmp
test
or
cmp
add
aad
jg
addb
aas
in
inc
sub
or
mov
xor
sbb
dec
push
pop
nop
and
pop
jno
aaa
xor
mov
lahf
pop
mov
mul
insl
inc
rcrl
inc
pushf
shlb
xor
iret
mov
in
adc
cmp
mov
popa
mov
or
repz
loope
psubsb
call
mov
repnz
inc
jne
mov
faddl
mov
popa
add
hlt
fcomps
sbb
adc
and
jno
dec
inc
ljmp
adc
stc
sub
in
add
repnz
cmp
push
push
data16
push
inc
push
add
push
xor
lock
mov
mov
js
cmp
int
cli
clc
test
aam
mov
and
jg
mov
lcall
xchg
jo
add
xor
mov
fstp
lock
cmp
pop
jbe
daa
and
cmp
fistl
adc
cwtl
imul
pop
pop
xchg
inc
push
sub
inc
aam
mov
add
pop
add
fdivp
adc
stos
cld
pop
aad
mov
push
jnp
lods
mov
cltd
andl
mulb
out
fs
ljmp
xchg
fldpi
out
es
mov
mov
jl
shrb
ds
imul
leave
lods
lahf
test
sub
cmp
in
jne
cld
pop
push
lds
cmp
xor
mov
jge
pop
ljmp
andl
sbb
sbb
dec
mov
sub
inc
mov
into
fdivs
mov
mov
adc
dec
movsl
mov
push
js
jnp
aad
test
jbe
repnz
not
stos
jge
cmp
and
ja
pop
mov
xorb
mov
daa
or
and
mov
xchg
int3
mov
lods
scas
pop
inc
inc
xchg
sub
dec
or
jge
filds
mov
sub
sbb
jnp
imul
pusha
cmp
push
adc
push
mov
jno
imul
movsl
ja
scas
jmp
and
jg
lea
dec
xchg
sbb
iret
daa
dec
cmp
cmpsl
sbb
sbb
ret
andl
je
int
movsl
and
pop
lock
xchg
jae
lahf
cmp
insl
xor
jl
mov
shlb
xchg
xchg
test
into
mov
mov
icebp
inc
aad
cmp
or
inc
and
lock
nop
xor
xchg
cmpsl
jle
cmp
fwait
lcall
lock
add
jp
cmpsl
inc
mov
leave
rol
insb
dec
rorl
mov
push
adc
sahf
lcall
fwait
je
scas
cmpsb
dec
mov
lahf
mov
cwtl
fxch
mov
xlat
stos
dec
mov
push
mov
xchg
mov
repz
loope
add
repz
xor
enter
gs
popa
daa
push
int3
jbe
aad
test
mov
out
stc
jge
popa
fwait
jnp
fcmovb
xchg
fcom
sbb
cmp
cs
push
imul
repz
cli
hlt
inc
push
and
add
arpl
mov
sub
cmp
or
push
mov
xor
pop
stos
bound
and
clc
mov
mov
fisubs
mov
shrb
pushl
or
mov
pop
je
add
lret
mov
sbb
dec
push
cmp
mov
jne
imul
inc
sbb
push
mov
andb
pop
ret
sbb
aam
cmp
jmp
in
icebp
xchg
pop
inc
pop
or
dec
lds
daa
sti
dec
inc
mov
dec
mov
sbb
out
xor
xor
test
jne
mov
pop
jne
lds
mov
xor
scas
loop
mov
outsb
push
mov
std
or
test
xor
jecxz
cmp
mov
outsb
mov
testl
shrb
aas
pop
or
rcl
cmp
adc
cmp
std
push
inc
mov
stos
shrl
mov
pushf
pusha
inc
jle
mov
movsb
shlb
movsl
adc
push
pop
mov
ljmp
pop
loop
outsb
mov
inc
ret
ja
scas
pop
stc
or
lcall
sbb
pop
stos
inc
hlt
push
sar
add
icebp
cmpsl
mov
inc
jge
xor
and
cmp
repnz
fildll
inc
inc
or
dec
repnz
sbb
add
loopne
push
jl
pop
cmpsl
sub
in
or
lock
inc
jg
icebp
cmp
lret
pop
add
sbb
lret
jp
fsts
xor
lods
push
in
xchg
jnp
inc
stc
insb
or
xchg
pop
mov
mov
data16
imul
aam
sbb
lods
out
sub
push
cmp
or
ds
adc
and
rcr
inc
pusha
sbb
pop
cli
adc
push
gs
jb
push
xor
jns
lods
jnp
and
push
xchg
ficompl
xor
arpl
inc
out
or
sbb
mov
push
mov
xchg
loope
mov
or
sbb
imul
and
loopne
adc
dec
jo
xchg
lea
inc
dec
sbb
mov
ficompl
test
fs
xchg
and
sub
cmp
dec
dec
sbb
sbb
lods
out
fldl
push
cmp
sbb
out
icebp
lea
xchg
mov
pcmpeqb
je
popf
mov
test
bound
ficomps
das
xchg
and
or
push
sub
out
daa
imul
test
and
inc
jecxz
clc
bnd
mov
cld
addr16
pop
push
inc
pop
je
in
mov
imul
leave
adc
pop
jg
es
cmp
cmpsl
addr16
pop
enter
rcr
lock
xor
div
std
lahf
sbb
ss
mov
jp
pop
lods
add
mov
push
add
mov
and
repnz
subb
add
lret
xchg
pushf
push
test
outsb
es
ret
lcall
lea
stc
pop
push
or
std
inc
sahf
int
cmp
push
add
out
push
fisttps
mov
pop
cli
cmp
cmp
xorb
testb
pop
mov
out
add
pusha
arpl
sbb
addr16
ret
fnstcw
xchg
cmp
mov
bound
cld
or
shrb
push
adc
sbb
es
add
in
inc
movsb
iret
sbbl
out
mov
lea
push
mov
enter
inc
mov
push
nop
pop
cwtl
aaa
dec
and
into
inc
cmpsb
ret
push
xor
mov
inc
lds
push
adc
cmc
loop
pop
ret
mov
cmp
add
hlt
cmpsb
fsubs
mov
xor
lret
sub
mov
pop
dec
lahf
adc
lock
mov
inc
cmp
dec
push
fisubl
insl
push
sbb
cmp
stos
insb
add
insl
xor
in
in
out
adc
pop
jae
mov
pop
fsubrp
fwait
mov
ficomps
lock
mov
adc
mov
cmpsl
repz
dec
dec
sub
xchg
mov
and
daa
popf
push
dec
lods
cs
mov
das
int3
shrd
data16
sti
dec
push
pop
jae
daa
cmp
cmp
cs
mov
cld
dec
lea
mov
pop
dec
cmp
loopne
add
sub
fstpl
cmp
xchg
sub
aam
cs
js
mov
mov
jno
ljmp
add
adc
mov
sub
and
ss
roll
sub
clc
adc
push
push
jne
sahf
push
mov
jbe
cld
ret
cmp
shlb
push
testl
add
push
das
sub
sub
mov
and
add
repz
mov
sub
add
js
cltd
test
scas
sbb
mov
jne
inc
xor
idiv
test
mov
call
sarl
pusha
adc
fwait
jns
or
cld
sahf
xor
lret
push
pop
icebp
sahf
push
out
mov
cmp
mov
cmpsb
rcll
aad
mov
mov
stos
std
sbb
add
mov
push
xchg
mov
mov
mov
jg
popf
lock
call
sub
push
mov
dec
ljmp
insl
setae
loopne
pop
adc
jno
mov
jo
jns
incb
inc
sti
mov
aam
mov
pop
cmp
push
out
test
pushf
and
and
mov
imul
into
std
fsubrl
sbb
ss
cmp
popl
shlb
xor
xor
sub
les
mov
push
jp
mov
aad
mov
inc
es
jbe
and
sub
pop
pop
sbb
les
mov
int
out
xor
mov
mov
ljmp
setae
or
or
dec
es
jecxz
iret
xchg
or
jge
aas
add
rorl
aam
ficompl
cmp
mov
shll
push
add
pop
pop
push
push
inc
scas
ds
push
inc
dec
mov
jmp
or
rcll
pop
mov
mov
in
in
popf
push
add
in
adc
adc
sbb
lock
sbb
pop
fwait
add
xchg
es
mov
cmp
add
adc
or
jmp
or
ficomps
fadd
cmp
mov
xchg
dec
add
add
filds
outsb
inc
pushf
in
jne
jae
outsb
movsl
jbe
mov
pop
pop
cli
dec
jo
int
jecxz
xor
push
fwait
push
push
pop
mov
jbe
stos
aaa
push
insb
adc
push
dec
leave
rcrb
int
mov
aas
mov
imul
mov
popf
insl
cli
inc
jae
mov
sahf
or
mov
xchg
andb
jmp
add
adc
xchg
mov
mov
lret
add
mov
cmp
add
or
mov
xchg
ffreep
ds
test
inc
adc
repnz
jns
xchg
xchg
sub
mov
and
and
sub
add
add
test
leave
outsl
mov
jb
movsb
mov
inc
je
popf
dec
insb
pop
mov
cmpb
pop
cmc
cmpsl
jl
mov
pop
stos
dec
jg
jge
cmc
cmp
xor
inc
jnp
loope
sub
into
out
adc
pusha
out
jae
mov
cmpsb
stc
stc
out
cmp
repz
outsl
and
jbe
test
xor
xchg
push
js
adc
mov
cmpsb
cmovle
neg
xchg
lret
stc
adc
call
sub
and
popa
xor
pop
cmp
movb
or
cmp
ss
or
inc
scas
push
movsl
sbbb
dec
and
andl
ret
stc
mov
cmp
inc
insl
js
ret
cmp
lret
divb
insl
sahf
bound
ss
mov
sbb
push
loope
push
ljmp
push
fisubl
cmp
outsb
jno
and
clc
outsb
push
cmpl
shr
xchg
arpl
hlt
jmp
sub
mov
pop
fwait
and
cmp
repnz
les
test
aas
add
insb
sbb
or
das
in
pop
andb
push
lret
xchg
or
ljmp
mov
mov
div
jmp
ret
rcr
mov
jo
iret
and
sahf
jae
fldt
xchg
pop
sub
icebp
mov
test
mov
inc
ret
or
pusha
daa
pop
sbb
lret
jo
or
xor
push
xor
jns
cmp
push
xor
fisubrs
mov
bound
arpl
shrl
jmp
push
out
and
cs
jno
stos
fimull
sarb
cmc
inc
inc
lods
xchg
cmpsl
mov
dec
lods
cltd
xchg
pop
add
inc
mov
pop
lods
dec
movsb
lahf
xchg
push
outsb
dec
mov
stos
jge
jmp
negl
fwait
enter
arpl
dec
xchg
arpl
loop
ss
or
out
jnp
cs
out
loope
xor
out
mov
adc
xor
std
jne
push
mov
and
xor
xchg
lds
rcrl
xor
aaa
jmp
test
sub
rcrl
stos
in
push
and
movsb
and
or
jnp
pusha
inc
pop
xchg
shl
mov
pop
stos
and
mov
pushf
shrl
dec
cmp
add
out
push
out
pop
adc
outsl
pusha
outsl
cmp
shlb
and
sbb
sub
incb
adc
and
or
mov
dec
sub
xor
push
out
movsl
push
xchg
dec
mov
jmp
sahf
sbb
aas
into
jecxz
dec
and
daa
dec
sbb
lock
lods
and
jmp
push
dec
testl
or
lea
pop
out
ret
scas
ja
mov
pop
std
mov
call
sub
mov
in
jle
jge
push
jae
arpl
mov
mov
cwtl
outsb
dec
shrl
imul
adc
in
sti
fwait
cli
lret
inc
cmpsb
push
push
jb
fcmovu
xlat
and
in
insl
dec
xor
cs
mov
fwait
cs
fnsave
clc
mov
add
mov
sub
lods
test
xchg
out
jns
jae
pop
and
inc
xchg
or
add
les
mov
nop
and
je
mov
mov
sub
xor
test
sbb
clc
inc
shl
popa
ja
mov
icebp
orl
adc
dec
jb
xlat
pop
cwtl
stos
js
in
aam
imul
mov
pop
decb
div
and
sti
lock
das
xor
or
xorl
les
daa
mov
xchg
jmp
aaa
xchg
ljmp
xchg
and
dec
cltd
adc
iret
pop
fwait
cmpsb
mov
out
ss
jge
sbb
mov
testl
pop
ret
into
sub
mov
pusha
cld
jecxz
pop
aad
and
cmpsl
icebp
jnp
daa
movsl
punpckhbw
mov
movsl
mov
and
test
lcall
mov
sbb
sbb
push
popf
inc
mov
mov
enter
stos
popa
pusha
dec
and
adc
or
fnstenv
pop
loopne
cltd
or
add
jg
sbbb
pop
cmp
test
adc
and
lahf
mov
xchg
jg
mov
repz
pop
out
push
fcmovb
mov
sub
jg
sub
and
pop
cli
add
or
push
sbb
sahf
loopne
lret
dec
jns
mov
jle
fstps
pop
in
int3
mov
jns
push
fcmovu
or
sub
outsb
mov
pop
and
loop
gs
mov
sti
decl
js
sbb
mov
cs
pop
mov
xor
incl
fwait
es
xchg
call
aam
cmpsl
sarl
mov
push
lcall
daa
push
and
xor
xor
lret
inc
push
rorl
dec
mov
mov
dec
bound
popf
or
xchg
xchg
or
dec
inc
leave
push
addr16
out
inc
fs
jae
sub
imul
dec
pop
push
inc
mov
iret
loopne
imul
xchg
ljmp
lods
and
inc
jecxz
adc
jo
inc
pop
sbb
jb
movb
into
aas
stos
fwait
inc
lds
push
cmpsb
jns
decl
or
addw
pop
or
xor
sub
dec
inc
lock
mov
rcll
int
fs
outsl
xchg
add
pusha
push
jo
jo
xorl
out
mov
inc
sbb
xor
cwtl
mov
push
bound
ficoms
ja
int3
mov
mov
testb
cld
pop
imulb
push
orb
clc
daa
cld
and
sub
xor
push
cmove
sbb
cmp
pop
mov
and
lock
test
xorb
mov
imul
jecxz
dec
sbb
pop
mov
and
lds
aam
jecxz
enter
adc
enter
jbe
pop
inc
dec
pop
ss
dec
fcomi
loop
pop
add
xchg
ss
iret
inc
or
xor
pop
lret
icebp
out
push
ficoml
ljmp
insl
lahf
or
fcmovnbe
xchg
and
xlat
fsubs
fs
push
sbb
lcall
ljmp
jb
mov
add
insl
adc
xor
mov
and
jo
mov
les
and
xchg
xchg
repnz
and
adc
out
icebp
mov
test
mov
pop
inc
jnp
pop
aas
inc
lcall
clc
sbb
dec
lods
sub
jle
mov
loopne
xchg
fsubrs
aam
or
push
mov
push
xlat
pop
mov
mov
sbb
mul
or
sbb
add
jecxz
call
in
mov
outsl
sub
out
dec
jp
dec
add
shl
orl
or
mov
cs
mov
add
cmp
push
mov
inc
in
mov
mov
nop
rcll
jmp
push
mov
xor
jnp
lock
dec
sar
iret
mov
ja
dec
or
adc
lods
hlt
mov
mov
lods
lret
xchg
insl
sahf
jmp
mov
jge
in
mov
div
jne
dec
insl
scas
loop
dec
pop
sbb
scas
out
and
out
aas
movsb
xor
xor
push
aaa
loope
push
in
jg
in
je
cltd
movsb
adcl
and
sub
push
test
jno
dec
sbb
xchg
ds
cmp
push
ret
lea
xchg
test
pop
sbb
int3
xchg
xabort
sub
repz
repnz
pop
imul
cmp
adc
inc
adcb
pop
mov
fsubs
jno
jns
or
mov
xor
in
xorb
mov
jp
sbb
fistpll
add
and
xchg
add
and
mov
clc
aas
stos
push
repnz
clc
xchg
lret
pop
sbb
cmp
xchg
push
js
xchg
adc
jns
mov
add
mov
pusha
and
inc
pop
in
sub
jge
mov
or
int
sub
push
inc
int3
xor
sub
xor
or
jbe
lret
das
add
pop
pop
cmp
mov
fucomip
xor
jbe
fistpll
inc
dec
or
jecxz
push
mov
cmpsb
adc
mov
fs
cwtl
lret
mov
loop
mov
ljmp
sub
das
mov
jmp
inc
aam
scas
lcall
and
jns
insb
xchg
cmp
pusha
iret
xor
loop
or
adc
sub
arpl
sbb
in
jp
sbb
lods
jnp
js
cmp
push
sub
insl
push
shr
loope
in
inc
cmpsb
push
jnp
loope
push
jno
or
push
or
addl
pop
popf
mov
jp
stos
mov
pop
orl
push
cmp
orl
repnz
call
and
int3
mov
push
jp
push
int3
jno
xor
adcl
jp
cmp
and
loop
lock
les
loopne
movl
cld
sahf
adc
adc
push
pop
ds
stos
cwtl
xchg
pop
inc
dec
jmp
push
jle
pop
mov
sahf
fnsave
sbb
and
movsl
out
cmpsb
dec
jl
adc
mov
nop
retw
mov
or
dec
les
mov
jno
aad
jle
loop
and
inc
iret
mov
iret
ret
inc
mov
stc
sbb
adc
xor
push
or
divb
inc
out
mov
hlt
inc
btsl
push
jmp
std
movb
xlat
add
aas
add
call
push
aad
fwait
subl
cwtl
ds
popa
mov
mov
movaps
xor
inc
adc
sub
pop
jg
pop
pop
jg
lcall
mov
cmc
les
cmc
insl
pop
and
imul
call
loope
dec
adc
pop
fnstenv
sbb
push
scas
push
and
enter
mov
daa
mov
mov
xor
pop
xchg
fst
mov
pop
mov
mov
adc
xor
cmpsb
pop
jl
and
push
sbb
hlt
pop
or
dec
or
and
jp
out
addr16
jmp
mov
mov
aad
lcall
dec
pop
iret
mov
cmpl
repz
pop
adc
pop
data16
dec
rcrl
and
mov
jmp
pop
movsl
pop
jecxz
pop
jle
or
or
mov
pop
ss
jmp
mov
add
outsl
mov
lea
jp
sub
mov
js
adcl
mov
xchg
das
push
jo
jnp
push
fiadds
sub
leave
rcl
add
pop
cmp
pop
jb
jmp
daa
xor
lahf
mov
add
out
dec
cmp
mov
rorb
push
cltd
inc
xchg
aam
cmp
pop
push
add
sar
cmp
mov
mov
xchg
dec
je
push
popa
mov
pop
in
pop
push
jae
pushl
addr16
mov
clc
pop
and
mov
inc
out
mov
sub
out
inc
adc
xchg
sub
test
xchg
jae
jge
repz
inc
out
mov
sub
sub
pop
push
or
aas
aaa
jbe
imul
add
cmp
jp
andb
in
mov
push
scas
aaa
out
jl
jae
pop
outsb
sti
enter
adc
jbe
push
jle
aaa
sub
mov
pop
imul
or
scas
push
mov
js
das
cmp
lcall
aaa
sbb
mov
cmpsb
sahf
iret
lods
lods
add
fs
negb
je
mov
ffreep
sahf
push
mov
sbb
lds
scas
call
aad
leave
xchg
cmp
orb
mov
sbb
bound
push
xchg
aaa
sti
or
jne
xchg
sbb
mov
clc
std
pop
sub
jp
dec
hlt
int
faddp
adc
out
dec
jbe
in
sahf
mov
add
and
fldt
sub
out
jmp
daa
test
inc
test
inc
aas
pop
jl
jg
push
test
push
inc
pushf
push
icebp
repz
movsb
aas
incl
cmp
and
adc
test
fisubl
hlt
cmpsl
test
lds
mov
push
xorl
mov
jns
add
cmpsb
push
push
imull
jne
dec
out
out
sub
ss
hlt
jo
inc
inc
outsb
mov
pop
jl
cmpxchg
mov
test
ljmp
mov
mov
inc
push
out
rclb
sahf
xor
sbb
cld
fdivs
fidivrl
int3
and
or
loop
add
subb
mov
add
lock
and
out
xor
sub
fldenv
xchg
loop
push
sbb
icebp
xchg
push
aaa
sbb
mov
xchg
icebp
adcl
ret
adc
mov
mov
fimuls
and
movsl
or
sbb
orl
jno
jae
mov
mov
sarb
and
ds
xchg
xor
mov
sbb
cmp
test
lret
sbb
xchg
sub
sahf
pop
mov
cli
ds
dec
pusha
mov
lods
test
xchg
xor
xor
dec
mov
xchg
repnz
fsubl
das
adc
mov
mov
cmpsb
push
lods
add
leave
sub
fs
bound
jge
popa
inc
scas
cltd
fistps
bound
pop
stos
dec
aas
inc
push
leave
mov
jge
mov
pop
int3
arpl
imul
cld
xor
and
sub
sti
inc
sarb
popa
mulb
and
jae
loopne
dec
mov
loop
jge
es
inc
dec
nop
rorb
mov
jnp
clc
cli
pop
imul
xorl
xchg
push
ss
sbb
cmp
psubb
je
cmp
adc
cmpsb
daa
in
mov
fisttpl
ja
fistpl
jmp
lds
and
inc
mov
test
les
xchg
mov
jecxz
loopne
enter
test
xchg
adcl
stos
out
jbe
nop
dec
sahf
testl
mov
and
pushf
ljmp
pop
in
imul
or
lcall
add
xor
mov
fwait
out
jge
sbb
fimull
inc
rolb
popa
or
jmp
es
stos
in
icebp
mov
roll
mov
mov
mov
and
jne
sub
enter
inc
fimuls
add
lods
js
test
dec
pushf
jecxz
add
xor
ret
je
push
int3
aas
lds
dec
cmpsb
jecxz
orl
test
fldl
add
out
pop
mov
std
cli
cmp
inc
in
movsb
mov
or
add
or
inc
xor
cld
cmp
sbb
dec
mov
popf
jp
andl
fiadds
push
insl
xor
dec
pop
ret
imull
sarl
sub
sbb
lock
popa
fmulp
cltd
repz
shrb
mov
daa
or
das
aas
xor
inc
mov
vmovaps
add
into
addr16
into
push
push
fs
pop
pop
jns
test
cmp
call
xor
mov
jns
and
addb
jb
aam
pop
jmp
inc
aad
xor
push
leave
mov
sti
insl
dec
dec
mov
jle
xchg
or
inc
out
scas
fxch
push
rorb
sub
mov
cmp
lcall
cmp
rcrl
pop
adcl
std
inc
lods
lret
loopne
add
ja
inc
test
lods
mov
jge
out
xchg
cmp
scas
shll
pushf
xchg
dec
or
add
fidivrs
push
and
cwtl
add
hlt
pushf
adc
mov
or
rcrl
int
push
inc
aad
push
push
xlat
sbb
xchg
mov
out
inc
xchg
sbb
jne
outsl
inc
xchg
lds
out
jno
jbe
mov
pushl
or
int
cmp
sbb
scas
jle
pushf
sahf
call
in
pop
and
xchg
xlat
lret
les
nop
outsl
lods
rcl
bound
lock
sbb
jb
ljmp
push
xor
mov
lret
gs
adc
in
and
loopne
and
aam
sub
push
gs
dec
out
insl
mov
mov
adc
jge
out
push
call
inc
jno
insb
aas
mov
inc
cltd
xor
ret
aas
in
add
out
add
dec
aaa
leave
push
pop
hlt
iret
sbbl
nop
xchg
inc
mov
lds
adc
ficompl
mov
sti
inc
inc
out
or
xchg
mov
cs
int3
jno
xor
mov
popa
js
arpl
clc
jg
out
subb
and
mov
jbe
lods
cmc
cmp
outsb
push
pop
cmp
hlt
in
mov
fs
add
mov
cmpsb
xchg
addr16
mov
add
mov
test
mov
push
popf
out
inc
and
xor
sarb
mov
fs
inc
mov
iret
mov
jg
sbbb
and
adc
jp
das
aas
int
sbb
inc
mov
pop
icebp
sub
pop
dec
hlt
dec
push
pusha
fs
and
in
andl
sbb
cmp
cltd
nop
adc
cmpl
mov
fdivrs
aad
out
subb
mov
into
pop
mov
add
dec
bound
jnp
and
fucomi
cli
js
ret
out
shll
cli
cmp
mov
fwait
xor
mov
aas
shrb
xor
and
sbb
sub
jge
pop
test
cmpsb
mov
push
mov
adc
aaa
cwtl
cwtl
dec
lea
call
pop
dec
bound
or
cli
lcall
sbb
sbb
out
negb
lret
outsb
call
and
or
and
or
or
lahf
xor
push
fucomi
mov
inc
pop
cmp
jle
xchg
test
push
cmp
jl
xor
push
fsubl
add
cmp
stc
push
lahf
sbb
loopne
in
pop
enter
aas
test
in
rorb
call
orb
sahf
repnz
or
aam
pop
add
lret
pop
inc
xor
xor
inc
mov
mov
insl
pop
push
sbbb
js
loop
mov
test
adc
ljmp
pop
loop
out
ficoms
mov
push
jge
sbb
fldenv
rcrb
ss
cltd
fistpll
mov
jo
imul
sub
mov
xchg
fisubrs
test
bsr
arpl
mov
data16
add
push
aas
mov
push
pop
cmp
fistpl
sbb
sub
xorb
and
mov
mov
lea
cltd
js
rcr
inc
test
xor
ret
inc
repz
jns
pop
xchg
or
mov
sub
outsl
cmp
or
xchg
mov
int3
push
insl
push
leave
dec
out
mov
and
fwait
xchg
mov
ret
ss
mov
pop
sbb
popa
rclb
or
pop
push
in
sbb
test
mov
mov
xchg
or
dec
scas
push
loope
and
mov
out
cmp
mov
shll
aad
popa
mov
int
pop
lahf
jecxz
repz
cmpsb
fdivl
popl
inc
stos
push
clc
adc
int
mov
or
adc
pop
sahf
inc
lret
add
mov
lcall
fs
mov
fwait
xchg
push
sub
lret
adcb
mov
mov
xor
lea
push
sub
mov
mov
add
cltd
sahf
adc
loope
arpl
out
in
push
dec
xor
int
adc
out
mov
test
and
cmp
add
cmp
fcmovb
inc
idivb
push
arpl
aas
sub
insl
int3
push
leave
arpl
jo
cmp
test
sahf
xor
lock
insl
std
mov
xor
push
andb
xchg
and
push
mov
js
fdivrl
xor
cmpsb
imul
adc
and
jg
repnz
das
fiaddl
adc
cmp
hlt
jo
imul
xchg
stc
adc
adc
lretw
add
fmull
pop
hlt
pop
dec
xchg
scas
xlat
pop
stos
adc
xchg
inc
movsl
mov
fisttpl
mov
test
jns
sub
sbb
dec
test
inc
sbb
push
mov
pop
xorl
nop
rorl
into
add
or
outsb
call
repz
or
popa
call
sbb
nop
ljmp
fmuls
stos
nopl
scas
inc
pop
in
test
mov
data16
cwtl
imul
in
push
movsb
dec
cmp
rcrb
push
add
out
mov
and
sbb
mov
in
inc
jge
sbb
stos
std
mov
add
ret
call
std
push
mov
cmp
push
int
push
push
cmp
sqrtps
inc
jae
call
dec
or
adc
cmp
aas
loop
xor
scas
dec
movsb
jge
lret
js
push
cmp
xchg
pop
and
adc
hlt
std
dec
shlb
pop
ffreep
cli
xor
repz
lret
jmp
loop
clc
ljmp
enter
mov
inc
lret
push
xchg
std
xor
mov
xor
addl
xor
aam
jb
mov
sub
pop
ljmp
dec
inc
ret
jbe
fs
stc
ljmp
lods
jae
aaa
ljmp
pop
adc
les
hlt
mov
les
aas
push
lcall
sbbl
mov
push
dec
inc
rol
out
mov
mov
stos
clc
jb
mov
mov
int3
loop
nop
push
hlt
pushf
mov
mov
sti
sahf
mov
xchg
jl
movsb
xor
jg
loop
imul
cld
xor
popf
add
cmp
mulb
repnz
into
clc
add
adc
scas
push
aas
push
xchg
fdivrl
lock
mov
inc
std
cmp
bound
lahf
xchg
push
add
shrl
sarl
inc
in
imul
mov
sahf
jecxz
sub
lods
jns
inc
in
jb
cmc
xlat
cltd
jmp
mov
std
nop
xchg
jge
ret
push
mov
or
into
jecxz
movsl
pop
mov
dec
cmpsl
add
ljmp
add
loope
add
sub
not
je
xchg
in
es
test
les
mov
roll
mov
inc
test
xor
mov
fldcw
dec
xor
cmpsl
stc
add
push
mov
and
jge
iret
and
cli
inc
push
neg
mov
test
cli
push
fldt
pop
xor
outsb
lock
lods
inc
jp
inc
push
mov
xlat
cmp
push
fs
fisubrs
push
mov
shlb
lods
sub
lds
mov
cli
pop
add
fwait
pusha
sti
enter
push
fstps
out
xor
das
adc
clc
out
mov
ret
mov
arpl
jno
and
insb
dec
ljmp
pop
call
cmc
clc
xorb
into
xchg
sbb
fwait
xchg
pop
je
testl
iret
sbb
xor
cwtl
adc
enter
repnz
insb
cmpsl
pusha
xor
sbb
call
pop
leave
cmp
mov
xlat
repnz
lret
js
add
aad
out
pop
fidivs
in
inc
cmp
mov
cmpsl
xchg
ss
shlb
loope
hlt
push
nop
insb
xchg
and
push
test
jl
movsb
out
mov
mov
push
mov
stos
test
xchg
bound
fldcw
scas
dec
pcmpeqd
cli
jns
movsb
aad
lret
or
jbe
lods
outsb
movsb
and
mov
std
hlt
pop
xchg
adc
add
in
pop
enter
xor
mov
inc
cmp
aaa
jmp
push
jnp
inc
pop
xor
stos
mov
jmp
int
jae
mov
ret
pop
jp
scas
mull
mov
pop
jbe
sub
out
addr16
in
lahf
pop
lds
jb
ja
repz
xchg
cmp
subl
ss
test
or
cltd
std
inc
testl
xchg
xchg
cmp
mov
cmp
mov
aad
xchg
lcall
fisubrl
push
and
addr16
cmp
and
adc
jnp
lahf
test
adc
cmp
repz
ljmp
xlat
jb
std
sub
sub
sub
bound
std
jb
sub
pop
fistl
cli
mov
sti
inc
xchg
push
mov
lods
mov
sbb
mov
mov
es
mov
mov
mov
or
mov
or
sarl
adc
or
sahf
sub
add
xchg
daa
lret
mov
roll
push
ret
gs
jno
mov
mov
inc
ds
xchg
dec
pop
mov
outsb
jp
mov
cwtl
fldl
hlt
fwait
popf
mov
push
enter
lods
es
pop
add
repz
pop
pop
mov
in
push
cmp
jae
add
outsb
lds
mov
and
js
fsubr
std
mov
add
mov
cmc
cltd
scas
test
shlb
leave
inc
mov
jnp
loop
cmpsb
fldenv
loope
jle
fld
insb
fsubs
mov
mov
frstor
repz
push
push
jb
out
notl
add
push
sub
out
test
pop
or
into
jg
push
pop
adc
in
cmp
mov
fisubl
mov
scas
pop
sbbb
sub
out
out
bound
mov
scas
adc
ficomps
mov
mov
icebp
test
scas
adc
aaa
inc
movsb
add
cmpsw
and
ficomps
ss
inc
out
xchg
jbe
jp
pusha
pop
jecxz
xor
jbe
xchg
dec
lret
sbb
ret
adcl
add
jo
push
push
xor
ret
mov
rcl
adc
mov
mov
fisttpll
add
sti
pusha
push
sbb
push
das
pop
dec
cmpsb
sti
xchg
lods
inc
jl
dec
inc
lea
add
push
std
mov
fcmovb
aam
loop
fs
push
or
rep
push
clc
adc
lret
push
adc
frstor
arpl
mov
and
xor
jmp
dec
push
rcrb
stc
imul
jge
push
enter
mov
xor
shl
and
out
les
cwtl
rcrl
pop
cli
clc
shlb
or
sbb
inc
stc
push
cmp
pop
shrb
xchg
pop
lods
add
scas
aaa
and
sbb
xchg
and
addr16
cli
imul
loope
xorl
mov
repnz
jp
xchg
inc
pusha
xchg
pop
and
cmp
andb
das
mov
pop
mov
xor
pusha
shrl
divb
popa
mov
rorl
xor
inc
into
into
jbe
movsb
xchg
arpl
dec
pop
movsb
sbb
xlat
jno
pop
aas
mov
and
bound
lock
mov
rolb
jmp
add
shll
push
daa
fs
add
fsubr
aam
fiaddl
jge
add
repnz
popf
cwtl
sbb
rcrb
push
cmp
pop
xchg
outsb
movb
aam
mov
jae
ret
xor
cmpsl
sbb
mov
pop
add
scas
fstpt
sbb
in
mov
push
cmpsb
cmp
mov
add
lods
inc
dec
cmpsl
add
jo
insl
imul
js
call
pop
pushf
hlt
mov
mov
push
outsb
test
jae
xorl
rolb
and
push
mov
push
imul
dec
insb
nop
imul
daa
fdivrp
mov
push
mov
call
insb
inc
shrb
jne
and
mov
push
and
push
cmp
call
inc
faddl
push
jl
into
notb
cmp
sti
icebp
xchg
dec
data16
in
push
test
cltd
mov
insl
jl
lock
lods
mov
sbbb
pop
fldt
pushf
mov
push
adc
or
mov
xchg
dec
stos
or
shrb
orl
stc
gs
arpl
pop
cltd
adc
xchg
push
mov
mov
dec
int
sbb
xchg
fiadds
fucomp
jae
dec
rcll
and
and
jge
andb
popf
mov
clc
xor
xchg
sub
scas
test
pop
scas
dec
xor
mov
into
adc
gs
mov
aaa
xchg
push
xchg
loop
xchg
mov
aad
sub
mov
imul
stos
inc
ljmp
xorps
mov
test
push
mov
xchg
movups
outsl
mov
cmp
inc
fsubl
pushf
rclb
push
sbb
pusha
fidivrs
mov
or
adc
jnp
pop
ljmp
cmp
stos
jle
nop
add
jecxz
or
or
cwtl
fbstp
xchg
in
xor
test
mov
scas
roll
add
shl
jmp
outsb
js
mov
adc
or
and
adc
sub
dec
sarl
sub
add
and
sub
lret
fwait
push
inc
mov
mov
xorl
or
push
pop
mov
xchg
mov
mov
out
sub
lods
cltd
pop
jmp
add
xor
xchg
mov
icebp
loop
pushf
cmp
inc
pop
ss
pop
dec
mov
jbe
orl
dec
aas
lds
push
cli
jb
adc
jbe
cmp
xor
jns
std
stos
mov
mov
clc
xchg
arpl
jb
mov
xchg
loop
mov
daa
sub
xchg
lods
icebp
cmp
jp
or
sbb
and
sub
cmp
cltd
or
cmp
movsb
mov
dec
popa
xor
push
and
jae
jbe
dec
jle
lea
aam
add
mov
dec
adc
push
in
scas
sub
lret
xor
arpl
enter
mov
in
arpl
roll
or
dec
pop
mov
cwtl
inc
lods
das
loop
pop
add
mov
push
xchg
sub
mov
mov
pop
mov
inc
sub
xchg
dec
js
xchg
cmpsb
cmp
ret
addr16
lods
sbb
scas
dec
ja
mov
fs
sarl
ss
adc
movsl
jmp
jb
xchg
jge
dec
mov
pop
cld
pop
pop
ret
sbb
fldenv
nopl
int3
sub
in
out
adc
sahf
lret
sbb
push
scas
aad
sub
or
rcll
push
mov
aaa
push
jmp
jns
cmp
pop
enter
lock
ja
fnsave
iret
ret
sti
hlt
fbstp
dec
push
or
mov
sub
pop
adc
repz
cli
pop
inc
fadds
inc
cmp
inc
cmp
fstl
lods
insl
dec
rolb
mov
cmc
rclb
stc
ret
imul
inc
or
pop
add
pop
sbb
shlb
int3
jg
lahf
sub
cmp
jg
rcrb
sahf
mov
inc
dec
add
loopne
aas
ja
pop
movsl
addl
das
fiadds
xor
sub
inc
adc
rcr
push
test
in
ds
insl
cmp
mov
add
adcb
push
cmpsb
add
int3
test
addr16
or
shlb
mov
outsb
jmp
push
stc
aaa
add
dec
in
push
lcall
outsb
aam
xchg
adc
pop
and
mov
push
aad
lahf
pop
data16
mov
popf
std
adc
push
ljmp
roll
add
fdivl
sbb
sbb
mov
in
jl
outsl
popf
mov
imul
rcl
stos
or
mov
lcall
stc
add
addr16
std
mov
cmp
inc
cmpsb
jnp
mov
adcb
xchg
sub
jns
test
lds
lret
inc
dec
mov
cmp
lea
mov
cmpl
add
call
mov
cmovs
adc
push
stos
repnz
adc
enter
fs
hlt
add
sahf
add
cmp
cmp
nop
leave
gs
mov
and
cmp
xchg
sub
pop
scas
fimuls
aam
outsl
aas
sub
pop
bound
lock
into
push
in
adc
mov
fldt
les
repz
sub
adc
js
sub
jmp
mov
loop
das
loope
adc
cmp
enter
adc
in
movsl
and
xchg
dec
jle
flds
jo
pushf
pop
jno
ljmp
cli
rorb
in
js
xchg
fs
cli
gs
mov
xor
imul
xchg
push
test
xchg
es
or
in
test
dec
imul
sti
lods
pop
inc
fbstp
sub
divb
mov
and
cmp
popf
xor
mov
pop
mov
pop
loope
xchg
leave
inc
mov
faddl
push
xor
js
jle
xchg
addr16
jge
loope
and
inc
push
ret
and
test
aaa
xchg
mov
jns
out
gs
xchg
xchg
imul
cmp
gs
std
icebp
mov
loopne
movsl
or
lret
mov
pop
rorl
mov
adc
push
fwait
dec
jmp
push
leave
arpl
into
xlat
pop
repnz
pusha
cmp
mov
aaa
movsl
mov
jae
cmp
inc
inc
into
cld
sub
cmp
jne
cmc
xorb
dec
dec
out
mov
add
jnp
repz
clc
sub
aam
ja
mov
jne
add
repz
dec
or
mov
lahf
jo
mov
ds
push
sub
push
iret
popa
xor
jge
cs
cmp
add
push
outsl
enter
fwait
inc
push
stc
rorl
jecxz
sahf
out
or
add
cs
cmp
jb
scas
sbb
lods
push
in
pushf
or
mov
xor
js
scas
lea
and
sub
data16
adc
rorb
fmul
orb
mov
ret
or
jo
scas
jo
shll
insl
int3
inc
push
call
rcr
lds
sbb
mov
cld
xor
and
ja
push
mov
and
dec
xor
xorb
cmp
jge
addr16
and
les
mov
push
mov
adc
mov
scas
cmc
inc
add
xor
xor
cmpsb
sub
sub
pop
and
jnp
arpl
cmpb
mov
rcrl
lret
and
or
xchg
push
mov
and
inc
stos
daa
xchg
inc
push
push
or
sub
je
sub
add
mov
lahf
and
mov
jg
ss
cmp
movsl
cmp
mov
imul
imul
xchg
ficoml
aas
repz
mov
inc
mov
std
adc
sbb
imul
add
jecxz
adc
dec
pop
xchg
and
imul
mov
shlb
dec
imul
sahf
dec
aaa
scas
fbld
int3
xor
cmp
adc
cmpsl
test
sbb
sbb
aas
inc
arpl
ffree
mov
pop
arpl
push
cmc
xchg
ret
xchg
and
in
jno
mov
adc
pop
inc
adc
push
xchg
loop
cwtl
sbb
daa
sahf
imul
xor
daa
insb
stos
xchg
mov
cmc
cmp
movsb
in
xchg
outsl
jns
pop
leave
mov
push
hlt
mov
pusha
push
fsubr
xor
lret
push
ljmp
fbstp
fmulp
scas
cltd
add
roll
enter
sbbl
adc
insb
jmp
insb
pop
inc
xchg
popf
fwait
mov
mov
cmp
cwtl
cmp
dec
mov
pop
mov
lock
cltd
xchg
mov
jle
enter
mov
xorl
adc
loope
out
pop
xchg
pop
xchg
or
dec
stos
pop
std
cwtl
rorl
mov
rol
jnp
push
mov
sub
imull
std
enter
cs
fisubrs
and
call
out
call
xorb
std
lods
xor
mov
out
dec
mov
popa
mov
std
pop
int
outsb
dec
pusha
adc
jp
addl
sahf
mov
lods
pop
sahf
shlb
push
ret
aam
movsb
pop
hlt
mov
or
movsb
sbb
jecxz
mov
stos
xchg
sbb
and
sub
jnp
mov
mov
pop
out
test
pop
dec
mov
dec
mov
cli
frstor
dec
rolb
rcr
sub
jle
fdivr
xor
inc
cmp
add
lea
rclb
fimull
fcoms
sub
outsb
and
mov
movsb
adc
aas
stc
cmp
lret
adc
cmp
or
pop
sub
push
lahf
and
out
dec
push
mov
mov
in
loopne
cld
popf
jne
jg
pusha
bound
out
add
clc
stos
inc
hlt
mov
pop
dec
xchg
cmp
and
lahf
rorl
mov
inc
out
out
mov
test
call
sahf
loopne
popa
hlt
cwtl
or
in
insl
fbstp
mov
dec
mov
pop
movsb
sti
fisttps
or
int3
mov
sub
fcomps
xlat
neg
dec
lea
adc
jbe
idivl
pop
cltd
test
je
sub
cmpsl
push
push
ret
stc
and
shlb
daa
cmc
dec
icebp
test
sub
aam
add
mov
sub
cmpsl
rolb
adc
pushf
jecxz
pop
inc
push
cmc
xchg
jle
mov
jbe
xor
das
dec
cmp
jg
fs
sbb
cld
fwait
jg
scas
pop
pop
push
inc
pop
outsb
movl
and
inc
cmp
inc
dec
dec
mov
jb
add
push
dec
inc
iret
xchg
iret
sarb
leave
imul
mov
int
das
mov
popf
sti
out
cmp
push
pushf
adc
sbb
pop
std
imul
fnstsw
or
cmc
cmpsl
mov
insl
inc
es
adc
lods
in
dec
fwait
sbb
sbb
ret
dec
jo
rcll
cli
imul
push
and
mov
push
jl
or
lahf
inc
mov
and
push
fwait
mov
ds
push
push
jbe
xchg
sbb
push
sahf
rcll
sub
ss
sbb
fcmovnu
adc
sbb
xor
dec
out
dec
lods
andl
fwait
xor
mov
out
neg
ficompl
lods
outsb
mov
les
adc
push
cmp
jmp
jecxz
mov
sti
sub
cli
push
addl
cwtl
jb
int
push
clc
mov
pop
cmp
fwait
xchg
arpl
insb
sub
or
stos
mov
xchg
jne
xchg
push
and
mov
jb
add
daa
dec
ljmp
xor
mov
fistl
mov
js
pushf
je
lea
test
out
insl
sarb
dec
pop
and
or
sbb
cmp
scas
sub
shlb
xor
out
sub
test
jne
push
out
push
out
mov
int
push
jge
sti
stos
aad
push
sbb
cmp
push
fdivl
pushf
imul
movd
dec
mov
popl
ss
or
jmp
arpl
lret
jnp
lcall
xor
ficoms
insl
or
mov
or
test
pop
into
dec
jns
cmp
mov
outsb
jbe
addl
sub
push
push
loope
pusha
cli
mov
cmc
cld
inc
enter
dec
push
and
fisubrl
ss
sti
out
fimull
and
arpl
inc
jnp
imul
lcall
pop
mov
cmp
cmp
inc
mov
pop
arpl
aas
ss
cmp
lahf
ss
cwtl
inc
dec
aam
ret
mov
add
sti
sbb
xchg
push
jbe
mov
xchg
ds
push
add
inc
sti
clc
in
or
mov
ljmp
pop
mov
add
enter
cltd
dec
pop
aad
pop
xor
outsl
sub
test
or
int
das
push
dec
enter
mov
inc
jo
xor
arpl
icebp
xchg
insb
jmp
insl
sti
add
push
mov
fisttps
scas
dec
lea
aad
int3
pop
addr16
sub
mov
sbb
inc
rorl
adc
sar
imul
pusha
adcb
ja
cmp
mov
enter
and
jno
adcb
loope
jge
loop
sbb
push
ljmp
sbb
add
daa
adcl
lcall
add
and
xlat
int
jp,pt
fildll
push
add
dec
dec
hlt
dec
sbb
jno
aaa
push
std
or
push
shll
jge
icebp
sbb
vmread
ret
xor
rcll
cmp
mov
push
push
pop
xchg
lock
push
mov
sub
ss
push
cli
fwait
aaa
inc
dec
xchg
adc
and
mov
xchg
mov
mov
adc
aam
addr16
mov
xchg
and
pop
enter
outsl
adc
popa
cmp
call
ljmp
add
sahf
push
cmp
jg
lods
mov
push
lcall
inc
aaa
jg
cmp
mov
pusha
pop
es
push
inc
xchg
xor
ljmp
lods
mov
into
fisubrl
adc
dec
aad
jo
push
shr
mov
mov
push
fidivrs
sub
xor
rcrb
xchg
cmp
aas
std
bswap
xor
fs
jg
sub
out
sbb
jge
sub
faddp
xor
out
imul
mov
mov
shlb
adc
xor
jg
jp
inc
add
adc
pop
call
dec
cmp
dec
repz
into
pop
mov
test
repnz
hlt
xor
lret
fcomi
sbbb
adc
call
test
in
shll
xor
bound
push
push
div
orl
ljmpw
sahf
mov
xlat
mov
js
mov
popf
xchg
movsb
or
pop
sub
call
shrl
fwait
jnp
inc
mov
cmp
xchg
fmuls
inc
sbb
sub
call
dec
in
and
cmova
push
nop
test
cmp
call
mov
pop
lahf
loop
push
push
add
sbb
cld
sbb
out
hlt
push
sub
adc
pop
pushf
sub
mov
mov
mov
or
pop
jmp
add
mov
outsb
push
clc
dec
mov
add
out
lcall
int3
jg
call
mov
jnp
xchg
int3
sbb
mov
xor
push
mov
stos
jecxz
ljmp
scas
movsl
bswap
pop
mov
ds
dec
imul
adc
rclb
mov
cld
je
imul
outsb
or
imul
lcall
mov
in
xor
xchg
pop
jo
push
jp
pop
xchg
fildl
or
xor
pushf
add
push
orb
popf
hlt
cli
dec
or
inc
fistpll
jp
nop
imul
mov
lret
daa
scas
testl
scas
cmp
mov
insl
push
pop
cmp
jecxz
subb
jecxz
pop
mov
mov
cld
mov
in
cmp
icebp
sbb
sti
out
fdivrl
daa
nop
int
call
nop
repnz
push
outsb
jle
repz
jne
clc
aas
hlt
push
aas
inc
pop
add
popf
popf
je
lea
xchg
push
pop
add
jo
adc
add
xchg
cmpsb
mov
cmpsb
out
insl
push
push
ret
bound
sub
add
lret
push
inc
out
lds
add
cmp
mov
decb
adc
lds
mov
andl
inc
sahf
stos
inc
in
lea
xor
hlt
push
imul
popf
fildll
sub
shlb
push
add
xchg
data16
push
mov
mov
mov
cmp
mov
pop
pop
xor
sub
out
daa
cli
push
aad
and
gs
mov
inc
mov
or
sbb
jno
sbb
sub
inc
lea
popf
mov
adc
movb
push
cmpsb
lock
hlt
inc
jo
fimuls
inc
jp
and
in
xchg
sub
or
cmp
jp
sbb
pop
insl
or
xor
mov
xchg
les
dec
pop
push
and
mov
sti
cmp
out
jne
mov
cli
push
inc
cmp
out
add
inc
out
ret
and
adc
movl
push
lea
frstor
sbb
gs
dec
xor
pop
fcomp
and
je
cs
rcrb
mov
inc
movsb
in
mov
inc
in
ret
loope
cmpsl
inc
sub
pop
test
mov
fdivs
push
lret
js
mov
cmp
cmpsl
call
pop
mov
mov
sarl
jnp
push
push
push
mov
dec
ds
dec
enter
cmc
dec
ret
cmc
in
add
pusha
mov
out
mov
push
or
pop
mov
sub
aad
nop
mov
mov
rorb
inc
popa
data16
repz
insb
xchg
pop
mov
dec
pop
mov
outsb
push
add
dec
inc
jecxz
mov
mov
push
mov
mov
scas
mov
fld
jmp
xor
in
cmpsl
gs
add
int
std
popa
adcb
lret
pop
inc
xchg
and
push
pop
mov
bound
and
xor
int3
push
mov
cli
in
into
xor
mov
lcall
es
dec
loope
sbb
mov
orl
adc
adc
jle
cmp
ds
mov
cli
enter
repz
jle
xchg
movsb
cmp
stos
sbb
mov
cmp
or
enter
mov
and
aaa
ss
cmpl
push
adc
stos
mov
pop
add
lods
mov
test
jge
cmpsl
pop
call
xor
mov
test
repz
push
mov
jl
mov
mov
sbb
jo
hlt
or
repz
lock
mov
or
pop
jmp
dec
and
jg
pop
rorb
or
sbb
push
cmp
inc
clc
and
add
inc
xchg
es
mov
cmp
pop
pop
mov
das
xor
repz
jae
outsb
jbe
xchg
push
faddp
dec
ja
xor
add
iret
sub
stc
fsubrs
pop
mov
inc
into
stos
push
push
loopne
cmp
or
test
mov
cmpsl
sub
mov
js
sbb
gs
push
aaa
lock
sub
pop
mov
jno
repnz
nop
cmc
mov
int
rorl
test
je
and
leave
mov
push
addr16
ja
jge
rcrl
jle
mov
and
mov
mov
lea
pop
addr16
rcl
push
shrb
xor
sub
mov
clc
dec
jg
mov
das
xor
cmp
cwtl
dec
cmp
jp
js
xor
fisubs
outsl
out
jb
pop
or
sbb
fwait
add
inc
lea
test
pop
fsubrl
int
lret
fsubp
mov
xor
movsl
cmpsl
pop
xor
and
xchg
fisttps
pop
lods
sti
push
cltd
jae
ja
pand
out
push
pop
iret
xchg
cmp
pop
out
adcl
ficoms
ja
mov
or
outsl
lret
sbb
push
icebp
dec
sahf
add
test
sbb
sbb
mov
and
sbb
loope
int
sub
push
xchg
pushf
and
fsubp
das
in
push
cmc
xchg
xchg
add
pop
pop
cwtl
arpl
pop
jae
inc
test
in
in
sub
mov
ret
xchg
fldenv
cmc
in
mov
jg
clc
cmp
jb
std
mov
jne
mov
pop
mov
inc
lret
lcall
loop
js
out
sbb
fnsave
adc
pop
xchg
inc
mov
add
mov
bound
dec
cld
movsl
lret
pop
pusha
and
xor
jno
cmpsb
xor
xchg
mov
pusha
lods
inc
xchg
xor
repz
sub
cmc
xchg
mov
test
mov
xor
inc
iret
push
xchg
fdivrl
lods
mov
arpl
popf
dec
lahf
cld
int3
enter
push
roll
bound
pop
inc
adc
and
inc
push
jmp
daa
add
shrb
sbb
or
in
scas
adc
mov
push
lea
pop
push
cli
xor
bound
test
xchg
cmp
mov
pop
mov
fnsave
and
ljmp
cmp
enter
sbb
mov
stc
in
dec
pop
add
jns
xchg
mov
rorl
add
insb
into
sub
pop
jbe
push
or
loop
mov
movsb
xchg
or
dec
rcrb
xor
sti
sub
sbb
cmp
push
rolb
in
dec
cmp
cmpsb
mov
xor
add
xchg
je
cltd
mov
aas
out
scas
loop
stos
in
cmc
jbe
add
fsts
xchg
out
mov
adc
cmp
and
fiaddl
cltd
daa
add
add
dec
inc
mov
push
stc
mov
int
std
orb
sahf
imul
ret
xchg
addl
mov
dec
xor
in
jg
jae
push
fdivrl
pushl
dec
adc
aaa
sub
push
pop
lock
sbb
enter
ficoml
sti
xchg
dec
push
xor
lcall
xor
jae
daa
insl
lea
das
lock
gs
rorb
push
cmp
mov
jno
mov
std
dec
xor
fwait
jmp
xchg
or
nop
daa
lcall
popa
dec
dec
fnstsw
mov
imul
test
mov
add
cmp
lret
push
daa
jbe
inc
or
and
fsubs
and
dec
mov
push
pushf
sbb
test
ljmp
lahf
adc
pop
push
movsb
mov
aas
out
dec
pop
lods
xor
adc
dec
repz
clc
push
dec
cld
jge
push
stos
bound
mov
adc
jno
fldt
rcl
lret
jns
les
cmp
in
mov
sarb
fbld
call
cltd
add
lret
sahf
into
inc
xor
xor
xor
inc
or
mov
jg
add
dec
dec
lret
xchg
gs
test
pop
insl
arpl
adc
in
leave
lret
xor
pop
mov
lods
xor
cwtl
xchg
mov
rorl
mov
adc
mov
cwtl
jno
sub
pop
pop
dec
test
push
mov
clc
or
out
sbb
pop
or
adc
cmp
or
xchg
std
push
outsl
cmp
aaa
daa
sbb
add
cmp
jnp
shll
rolb
or
out
dec
enter
loop
addb
outsb
inc
dec
and
mov
mov
cmp
out
adc
aas
data16
rolb
mov
pop
xlat
dec
shl
aam
fistps
ja
jp
div
jae
insl
cmp
out
loop
and
adc
sahf
out
popa
mov
adc
xchg
pop
fsubrl
ss
sub
mov
xor
add
add
lea
mov
sarb
push
das
sub
addl
add
fwait
mov
xchg
gs
test
ja
fistps
add
cmpsb
or
repnz
shrl
hlt
add
inc
jb
push
jo
mov
adc
into
mov
sub
push
lcall
lea
and
and
xchg
ja
or
sub
gs
inc
pop
js,pt
adc
out
mov
mov
cmp
iret
cmp
call
mov
jl
mov
or
aas
adc
es
es
test
pop
mov
xchg
mov
cmp
cmp
addl
pop
push
ret
pusha
pop
insl
lcall
push
popf
push
aas
mov
pop
xchg
push
adc
pop
pusha
push
sub
cwtl
sub
cs
stos
jo
xor
inc
xor
std
pop
and
push
cmc
out
stos
mov
ficomps
fldl
jb
iret
int
idiv
mov
jmp
or
xor
push
fisubs
ffreep
mov
xor
test
pusha
std
sub
sbb
out
mov
repz
xor
int3
jge
int
mov
and
jno
in
or
mov
and
outsb
sbb
je
popa
jno
mov
sbb
hlt
enter
cmp
push
push
push
test
jecxz
xchg
jo
js
mov
pop
or
repz
xchg
test
cltd
pop
xchg
loopne
ret
pop
int
aad
and
mov
dec
or
insb
mov
xor
push
pop
aaa
ret
pop
add
add
mov
shlb
or
dec
fdivr
jno
and
jl
call
pop
cmp
adc
and
pushl
sbbb
dec
mov
lcall
mov
roll
mov
mov
add
scas
adc
stos
rcrb
or
call
test
jmp
cltd
push
test
icebp
pop
shll
dec
roll
das
dec
xor
ret
push
cmp
fistpll
imul
mov
xchg
sub
sub
movsb
mov
mov
mov
ja
aas
dec
inc
dec
loope
cmp
pop
cmc
cmp
lret
ret
ja
loop
pop
lahf
mov
push
jl
cwtl
jns
fs
sub
lea
jno
outsb
lcall
aad
mov
cmp
bound
or
xchg
fstl
xchg
inc
ret
ja
jp,pt
lds
mov
jnp
aaa
pop
dec
dec
pusha
mov
clc
or
adc
psubq
hlt
cmpsl
add
mov
cmp
cmp
adc
repz
inc
jmp
sbbl
or
loopne
fisubrl
adc
adc
insl
stos
pushf
lahf
ret
loopne
test
jbe
inc
cmp
sbb
ds
jmp
fcmovb
pop
sub
cmpsb
out
xchg
jae
mov
xchg
or
ja
rcll
and
jle
or
add
jae
cs
xchg
ret
pop
adc
hlt
jno
inc
and
mov
cmpsb
data16
dec
sub
aas
or
sbb
je
testb
fmul
pop
js
xor
outsb
dec
cmp
jns
and
rcr
rcll
sub
call
pop
cmc
jne
mov
adc
inc
mov
scas
pop
pop
aas
mov
jae
fadds
pop
hlt
push
or
xor
scas
insl
out
popa
mov
mov
push
jb
mov
mov
and
or
hlt
xchg
arpl
sbb
call
or
loope
xor
dec
in
add
into
popa
imul
shll
add
inc
das
dec
jnp
jle
push
popa
push
pop
cmp
test
ja
int
lret
xor
nop
mov
push
add
popa
lods
out
push
ds
lods
mov
enter
jno
idivb
test
lret
mov
inc
cmp
lret
pop
scas
outsl
mov
adc
into
inc
sub
in
add
negl
xor
out
mov
and
inc
xchg
xor
test
mov
jg
shlb
cwtl
pop
std
lahf
or
stos
movsl
movsb
leave
pop
dec
adc
xchg
stos
mov
sub
sbb
arpl
dec
xchg
mov
jae
push
or
das
mov
sbb
lcall
mov
fldenv
fsts
dec
aad
push
mov
dec
xchg
stos
ds
testb
sbb
fwait
sbb
jns
pop
push
leave
adc
mov
subb
add
test
dec
movsl
nop
mov
or
cmpb
pop
test
xor
jbe
cmp
or
xor
inc
mov
call
aaa
pusha
cltd
ljmp
in
sbb
push
scas
push
jbe
pop
xor
dec
fldl
pop
mov
mov
push
xor
mov
xchg
sub
shll
mov
push
daa
mov
stos
cwtl
xchg
std
cwtl
mov
mov
lds
cwtl
cmp
adc
add
dec
or
lcall
jo
push
dec
mov
mov
push
jmp
mov
push
les
mov
sub
sub
and
xchg
stos
mov
cmp
icebp
call
sbb
xchg
je
dec
negb
out
mov
and
pop
jns
fiaddl
rcrl
repz
adc
or
and
lahf
movsb
call
rsm
mov
add
mov
stos
push
out
dec
scas
clc
pop
das
mov
stos
mov
out
cwtl
push
jne
jg
mov
sub
sahf
cmp
in
jbe
gs
lea
mov
cmp
mov
jne
leave
inc
push
lock
mov
xor
mov
or
dec
push
iret
add
sbbl
adc
dec
cmc
pop
call
add
sbb
pop
xchg
sub
pop
and
and
mov
xor
out
nop
les
rclb
vpshab
adc
cmpsb
cwtl
loopne
notb
test
ret
cmp
addr16
nop
ja
stc
lods
jge
movsl
js
add
jle
push
inc
jno
popa
iret
ds
arpl
jae
test
xor
jns
mov
test
pop
jl
sub
mov
movb
inc
cmp
adcb
xlat
stc
stos
out
roll
in
aaa
add
or
push
stc
lods
adc
es
xlat
test
stos
out
mov
mulb
pop
mov
mov
cld
aad
cli
lock
and
jecxz
mov
xor
lahf
loop
dec
fs
sbb
push
xor
sbb
push
xor
push
jnp
idivb
aaa
xchg
out
subb
xchg
into
call
adc
test
cltd
sbb
fnstenv
inc
mov
je
shrl
out
je
lock
mov
outsb
bswap
add
mov
es
dec
stos
adc
mov
xchg
out
divb
adc
shrd
popf
pop
sbb
ret
sub
inc
outsb
and
and
repz
je
aam
lea
call
test
mov
mov
loop
and
push
in
jne
scas
mov
adc
or
jbe
pushf
push
pop
outsb
cmp
xchg
or
scas
popf
fisubrl
fs
mov
sbb
mov
rep
adc
aam
jmp
mov
sbb
out
jl
jo
ja
lock
fs
inc
mov
enter
nop
xchg
inc
xorl
sbb
loop
aaa
iret
bnd
xchg
mov
mov
popa
pop
ds
push
sahf
mov
stos
adc
ret
ret
or
lock
xchg
jmp
imul
inc
dec
fcomps
dec
fsubrs
push
aam
mov
movsl
fimull
rclb
push
es
mov
push
pop
xlat
int
add
pop
add
adc
add
out
lret
stos
dec
leave
inc
sub
in
lret
fadds
test
rolb
xor
out
adc
jne
fwait
lods
inc
mov
pop
xchg
andb
fistpl
loopne
cmp
pop
lods
aas
lds
mov
mov
mov
adc
inc
es
ljmp
dec
adc
xchg
push
mov
outsl
jg
pop
out
inc
jp
bound
aam
out
sar
pusha
pusha
loopne
mov
mov
or
call
in
mov
sahf
test
pop
sbbl
out
adc
cltd
mov
add
aas
fstp
dec
push
mov
iret
andb
push
or
sbb
and
outsl
repnz
in
jp
stc
mov
shlb
or
leave
loop
xchg
pusha
sar
ficomps
test
xchg
sti
pop
pop
lret
adc
inc
aaa
hlt
mov
ret
enter
or
pop
in
fcomp
add
das
adc
push
repz
rorb
push
mov
jg
insb
xor
clc
aaa
idivb
ret
loope
and
test
push
cmp
je
cmp
shlb
pop
les
in
cmp
pop
testl
mov
dec
fnstenv
mov
xchg
jg
in
rcrb
cld
sbb
test
dec
aaa
test
adc
fnsave
sbb
sbb
mov
jb
mov
lcall
mov
mov
mov
xlat
add
fmulp
mov
imul
stos
mov
andb
push
call
dec
xchg
sbb
popf
cltd
outsl
cmpsl
sbb
popf
sbbb
jno
push
test
imul
lds
add
int
jo
pop
mov
mov
inc
push
mov
jnp
push
push
shll
mov
inc
stos
dec
ljmp
cmp
mov
dec
in
add
and
and
cmpsb
shll
mov
scas
rorl
dec
jb
in
add
mov
clc
mov
cmp
in
aad
xchg
sub
stos
or
mov
mov
sbb
lods
pop
es
or
shlb
cwtl
sbb
push
andl
incb
sub
in
push
push
mov
rcl
rorb
fistps
mov
xchg
sti
xlat
lock
mov
pop
add
xchg
out
iret
pop
jnp
jl
push
arpl
jecxz
sub
xchg
fsubrl
cmp
mov
daa
fiaddl
xlat
xchg
and
jecxz
clc
mov
pop
or
xor
pop
shr
xchg
mov
fdivl
lret
jns
inc
lahf
comiss
stos
inc
mov
xchg
xchg
dec
or
lods
jmp
cmp
add
in
push
xchg
andb
fcmovnu
inc
test
dec
stos
jmp
push
cmpsl
or
mov
cmc
rol
mov
push
xor
or
and
dec
xor
jno
movsb
aam
gs
into
push
pusha
gs
push
das
iret
jbe
lock
cld
push
sub
subb
out
aam
fidivs
inc
sti
mov
shl
out
jo
add
scas
sub
inc
xor
fs
mov
sub
test
sbb
pop
into
leave
push
cli
dec
mov
push
push
cmc
inc
cli
sub
lret
inc
pushf
fwait
mov
lods
lea
and
mov
aam
pop
in
frndint
dec
inc
push
sub
lock
dec
mov
out
aad
sti
cld
idivb
lret
dec
pop
or
rcrl
push
fwait
orb
stos
mov
fistps
jl
cmpsb
insl
bound
sbbl
cld
int
dec
insb
mov
ret
aam
cmp
pop
cltd
js
push
fistpll
cmp
leave
imul
dec
ds
stos
mov
xchg
adc
dec
xchg
arpl
data16
cmp
pusha
cmp
cmp
subb
into
xchg
int
jle
sub
xlat
adc
cwtl
lret
loopne
std
roll
ffree
jmp
movsb
pop
fwait
pop
rcl
fwait
loop
iret
sbb
push
pop
push
mov
into
and
sbb
sub
mov
scas
loopne
pop
out
cwtl
lcall
push
xchg
clc
call
pop
fs
inc
lcall
mov
pop
cltd
fiaddl
jmp
pop
stc
jb
mov
lods
popf
xor
xchg
cmp
loopne
sub
jno
int
flds
hlt
orl
fld
push
mov
jb
scas
sti
jl
je
sbb
xchg
sub
inc
cmp
out
cmpsl
stos
xchg
cmp
sbb
outsl
movsbl
adc
sbb
mov
cli
lods
sub
fs
xchg
jns
lock
sbb
aad
lock
jl
mov
jbe
stos
xchg
inc
loope
jne
test
or
hlt
test
std
fiadds
pop
ljmp
cmp
ja
daa
mov
ret
call
jge
shlb
adc
xchg
mov
jo
aam
fbld
mov
fcompl
data16
push
xchg
lcall
es
jmp
mov
xchg
dec
xor
iret
mov
add
sbb
add
daa
sbb
xchg
mov
sbb
cmc
call
adc
ret
sbbl
movq
outsb
xlat
inc
push
dec
dec
mov
cmp
or
adc
dec
and
ja
sar
adc
cmp
cltd
adc
adc
mov
call
cmp
push
sahf
push
leave
fsubrs
lahf
xchg
push
mov
outsb
and
jae
add
jg
add
in
mov
mov
mov
ret
popa
pop
stos
int
shrl
fcoml
pop
daa
jl
lea
cmpsl
mov
cmc
xchg
ja
mov
mov
add
cmp
add
push
aam
test
mov
ret
xchg
mov
or
push
pop
movsb
mov
cmpsl
sbb
mov
or
in
gs
push
fdivl
test
or
adcl
ds
aad
or
out
pop
mov
inc
adc
mov
js
pop
dec
enter
dec
fsubrl
push
push
sahf
push
bound
pop
icebp
sbb
push
mov
adc
das
ret
mov
adc
inc
push
mov
movsb
pop
aas
add
sub
pusha
gs
pop
aaa
inc
cmp
lcall
mov
push
clc
lcall
ffreep
icebp
stos
mov
xlat
push
lcall
jb
je
pop
pinsrw
jmp
lret
and
sub
addr16
cmp
jg
das
jmp
fwait
push
sbb
or
pop
jnp
dec
dec
data16
and
jnp
icebp
in
push
dec
daa
mov
add
sbb
addr16
push
xchg
push
psraw
sub
fbstp
pop
lods
sbb
into
dec
push
adc
xor
subl
in
xor
mov
faddl
aaa
fcoml
dec
push
pop
fcompl
sub
sbb
pop
inc
mov
sub
iret
sub
jl
push
fisttpl
xor
es
fsubrs
add
dec
insb
sbb
sub
or
mov
xchg
cmp
shrl
in
int
pop
pop
leave
push
jbe,pn
cltd
xchg
in
sub
add
or
fdivrs
std
inc
add
rolb
sbbl
roll
cmp
or
testb
subl
repnz
aas
push
push
sub
fs
out
sub
sbb
out
lret
sarb
shlb
cmp
loop
or
icebp
add
push
jecxz
mov
aam
add
jns
mov
shll
xchg
mov
lcall
nop
mov
leave
xchg
int3
jl
mov
jecxz
arpl
add
dec
mov
inc
loop
repz
mov
push
out
repnz
mov
jmp
inc
jl
jne
and
ss
add
xchg
lods
lcall
mov
mov
lods
popa
outsl
adc
nop
add
add
pop
xchg
ds
pop
pop
push
pop
xor
hlt
xchg
mov
test
inc
imul
lret
pop
push
adc
cld
repnz
cltd
popf
in
in
pop
cmp
leave
in
lods
sbb
push
and
rorb
int3
xchg
ffree
mov
mov
cmp
push
ss
aad
mov
fstps
add
xchg
pop
adc
sti
cmp
push
or
mov
test
fwait
test
insl
mov
jnp
jne
jae
aaa
cwtl
test
out
cwtl
ja
mov
cmp
int
fsubrl
and
adc
out
pop
cmp
inc
and
jl
pop
incl
lock
shlb
xchg
push
int
lahf
and
add
aaa
sbb
mov
mov
sahf
mov
out
sub
cmp
xchg
add
sub
jb
or
sbb
stos
dec
test
adc
inc
out
into
mov
pop
mov
mov
cltd
das
lret
xlat
cmpsb
push
dec
sub
arpl
mov
in
add
cmp
fsubr
int
pop
idivb
adcb
das
outsl
xchg
jo
stos
dec
mov
xorl
inc
xor
push
push
and
imul
inc
jge
icebp
push
leave
pop
or
dec
sbb
cmp
out
aam
push
clc
xchg
push
sbb
pop
pusha
leave
fdivs
stos
inc
mov
enter
enter
int3
mov
and
inc
jmp
and
scas
test
iret
jp
pop
loopne
fdivs
pusha
fnstcw
xchg
jno
jle
push
mov
sbb
ljmp
pop
cmp
and
pop
mov
xchg
fs
fisttps
sub
inc
in
pop
cwtl
xchg
mov
jnp
sbbb
je
cltd
jae
push
clc
mov
pop
bound
sti
stos
fstpt
std
cld
out
mov
mov
out
movsb
or
cltd
aas
push
xlat
sub
fwait
stos
js
push
mov
stos
dec
and
add
loope
or
movsl
sbb
xlat
bound
ret
pushf
das
fldl
pop
mov
insb
cld
std
jle
rcrl
mov
lcall
fdivrp
js
mov
mov
pop
mov
into
aaa
bound
out
add
xchg
jmp
xchg
icebp
pop
xchg
jb
aad
xor
int3
mov
and
cmp
or
loop
dec
lods
xor
mov
addr16
mov
mov
push
xchg
dec
mov
adc
insb
andl
aad
mov
lcall
mov
push
btc
dec
movsl
outsb
in
push
dec
cmp
and
xchg
insb
out
punpckldq
mov
xchg
inc
loopne
and
jle
cmp
mov
jmp
push
xor
pop
cmp
rorl
or
cmp
popa
popf
xor
add
add
mov
fnstenv
lds
sahf
addb
fiadds
jl
inc
xchg
out
jecxz
push
sub
cmp
sbb
jns
mov
jl
out
xchg
imulb
fwait
xor
jp
inc
das
out
adc
cmp
xor
xchg
mov
adcl
pop
pop
cmovns
mov
aas
adc
inc
out
or
stos
mov
out
xor
pop
sub
mov
and
xchg
push
out
inc
cld
gs
or
pop
imul
cli
repz
jmp
or
lret
jg
sub
sti
xor
jae
fdivrs
mov
cmp
jbe
out
pop
xor
das
xor
pop
xor
pop
xchg
sbb
stc
daa
cmp
sub
test
inc
jbe
mov
add
outsl
in
cmp
inc
inc
pop
lahf
jmp
pop
jbe
imul
into
in
andb
repnz
or
test
xor
test
inc
sub
mov
push
pop
movsb
or
mov
push
add
adc
pop
je
or
popa
adc
out
dec
cmpsb
and
sar
cld
mov
xchg
sub
xor
xor
stc
bnd
mov
ljmp
lods
in
sub
fiadds
mov
iret
leave
jmp
es
push
lea
mov
stc
test
add
lock
in
jmp
loopne
adc
stc
jo
or
test
aaa
fsubr
push
mov
ljmp
push
aam
pop
xchg
pop
fld
dec
ja
inc
xor
xchg
mov
dec
dec
xor
and
add
das
rorb
inc
cld
xor
in
leave
mov
jge
sub
icebp
lcall
inc
lea
inc
das
mov
adc
dec
sub
es
je
aad
mov
rorb
and
adc
mov
push
mov
inc
dec
sbb
dec
mov
xchg
mov
mov
fnstcw
std
leave
jnp
or
add
sbb
xchg
outsl
rcrl
jne
lods
mov
xchg
push
xchg
inc
loopne
xchg
jecxz
bound
cmc
cmp
and
jmp
xchg
jo
xchg
lret
and
mov
daa
add
pop
pmulhuw
mov
or
mov
push
call
mov
jo
lcall
add
mov
aaa
adc
out
xor
stos
xor
pushf
mov
jge
cmpb
icebp
and
lcall
jl
inc
pop
hlt
pop
pop
sahf
test
dec
shl
je
xchg
popf
lcall
adc
bound
sahf
jns
inc
pop
clc
jnp
dec
inc
icebp
sub
aad
out
fsubs
cltd
outsl
movsl
pop
inc
sub
fistpll
es
jg
lret
stc
loopne
std
pop
mov
xchg
pop
pusha
loopne
aas
aaa
mov
xchg
pop
push
sahf
xchg
pop
mov
sbb
cmc
loopne
mov
cmp
imul
jb
push
test
dec
cmpsb
lretw
dec
push
jno
mov
sbb
sarb
add
adc
inc
mov
out
fsubl
sbb
or
ds
idivl
iret
push
sbb
in
orb
mov
jp
jg
addr16
mov
pop
jne
stc
adc
jbe
sub
adc
xchg
loop
push
test
mov
inc
jae
ljmp
xor
movsb
stos
dec
mov
daa
cld
sbb
loop
lret
push
mov
adc
mov
pop
or
or
fdivrl
repnz
cmpsb
or
cli
sar
dec
mov
mov
ror
sahf
pop
mov
cmpsl
cmp
jecxz
inc
mov
or
in
fdivrl
sahf
jecxz
and
outsb
mov
push
sbb
clc
push
ss
mov
mov
inc
lret
into
repz
adc
dec
leave
clc
cmp
out
sbb
jl
or
push
pop
shlb
es
cmp
and
out
xchg
and
ljmp
and
adc
push
pop
mov
in
pop
test
into
mov
std
xchg
xor
or
jecxz
test
inc
into
add
inc
js
aam
jns
push
outsb
cmp
jae
cli
scas
xor
xor
negb
or
jno
imulw
sbb
movsl
jnp
lret
sbb
xchg
mov
je
cmpsb
aad
push
addr16
lea
dec
jge
jnp
pop
dec
jb
lret
flds
lods
and
xlat
ss
push
add
in
or
add
gs
add
cmp
bound
xorl
inc
dec
mov
hlt
das
or
fs
sub
xchg
mul
jne
ja
pop
cmp
fistpl
cld
stc
push
loop
insl
divb
sarb
mov
ret
xlat
jbe
movsl
lods
rcr
mov
push
mov
adc
not
movb
loop
and
mov
js
fs
adc
lock
pop
xchg
in
and
jmp
pop
fcoms
fldenv
add
pop
mov
sbb
sbb
ljmp
out
jl
scas
sbb
setno
add
stos
inc
mov
push
ja
test
xchg
into
divl
push
push
xor
aam
sub
rcll
enter
lock
lret
repnz
push
or
sbb
outsl
add
push
call
outsb
clc
and
push
out
ss
fldt
fucompp
int3
or
fdivr
xlat
into
add
dec
cmp
shll
add
pop
std
push
sbb
orl
mov
ds
mov
ss
cmp
imul
mov
push
inc
pop
xorb
ret
mov
inc
adc
sub
inc
jbe
dec
fbld
in
iret
call
clc
pop
add
mov
imul
adc
aad
mov
es
out
mov
cmp
and
or
loop
sbb
inc
jns
push
push
andl
push
mov
iret
bound
and
test
mov
lock
scas
je
mov
mov
push
int3
ret
xlat
cs
mov
scas
pushf
sub
cmc
add
sbb
out
cmpl
push
pop
iret
nop
sub
xchg
adc
jbe
push
int3
icebp
adc
mov
and
pop
pop
pusha
addr16
xor
dec
sti
fisttps
jns
cs
fstpt
xchg
fwait
aam
push
aas
xor
loopne
inc
mov
dec
sahf
jne
imul
add
and
filds
push
iret
or
stc
cmp
mov
orb
mov
adc
out
inc
mov
mov
popa
or
les
fsubrl
mov
int
sahf
sbb
mov
sahf
jno
leave
sbb
stos
mov
dec
sub
in
cmp
xchg
call
je
outsl
mov
mov
add
push
or
cmpl
dec
aam
pop
pop
adc
push
cltd
scas
incb
mov
rcrb
jbe
divb
fldenv
popf
dec
into
push
jge
mov
clc
ret
jle
jnp
add
loopne
jbe
jno
int3
dec
ja
popf
lahf
jmp
loope
movl
sbb
pop
mov
addb
add
jnp
xchg
fnstenv
addr16
repz
daa
xchg
inc
movlps
outsb
js
mov
dec
stos
jecxz
mov
pop
std
and
mov
clc
je
pop
sbb
xor
inc
andb
aaa
std
jno
add
sbb
mov
lret
and
daa
ror
jne
filds
not
mov
or
lret
push
bound
loope
mov
sahf
test
and
call
enter
xchg
lcall
les
imul
jp
fcmovnb
stos
inc
pop
test
test
pop
mov
cld
push
inc
xor
push
lods
push
push
lret
push
sub
pop
pop
add
mov
cmp
dec
test
lahf
add
dec
mov
jns
cmp
jg
mov
cmp
xchg
push
cmpsl
jae
xchg
rep
sbb
adc
fcoml
jno
insl
ss
adc
mov
in
orb
push
mov
jp
dec
sbb
jl
imul
mov
or
push
dec
ja
es
mov
outsb
and
scas
dec
fsubs
ljmp
in
inc
imul
call
fmuls
push
lcall
ror
test
mov
mov
or
mov
sbb
icebp
ljmp
cltd
in
sbb
sbb
dec
fidivs
punpcklbw
daa
dec
out
pop
shlb
mov
movsb
clc
sbb
mov
ds
xor
repnz
sbb
inc
repz
stos
enter
movsl
push
fs
jg
xchg
leave
push
insb
xor
faddl
jnp
mov
cltd
je
out
test
in
in
addr16
fwait
jmp
shlb
add
push
ja
das
data16
or
mov
mov
mov
icebp
sub
test
dec
xor
repnz
out
jne
xchg
shll
popa
push
jne
pop
push
mov
mov
or
ret
mov
jp
pushf
jmp
sub
enter
testb
or
jnp
xlat
and
cmp
jecxz
push
jns
mov
and
scas
xchg
xchg
mov
fcompl
sbb
pop
aad
mov
aad
movsb
jb
test
pop
lods
sbb
test
gs
loopne
push
movsl
cmp
push
add
mov
pop
jp
nop
fwait
dec
aam
mov
stc
xor
jne
rcrl
xchg
jge
inc
outsb
stos
mov
jl
std
add
andb
cs
loope
icebp
andl
popf
sti
rcl
stc
aaa
ds
inc
mov
fnstsw
mov
dec
jle
or
gs
inc
daa
adc
in
faddl
popa
out
jne
push
mov
adc
ss
push
pushf
call
test
xchg
and
xchg
xchg
sub
add
je
fld
data16
xorb
mov
and
and
in
loope
and
xor
popa
call
jnp
xchg
or
sbb
fadds
xchg
xchg
mov
sub
dec
cld
insl
sbb
dec
in
insl
cmp
call
sbb
fwait
stos
xchg
nop
push
hlt
lcall
ljmp
mov
mov
call
mov
and
lahf
jl
adc
gs
push
arpl
sbb
adc
cmp
sbb
rcll
ss
sub
pop
shrb
ret
jnp
pop
mov
lods
rcrb
inc
inc
dec
aam
lahf
push
sub
cmp
adc
sub
jnp
outsb
mov
lret
mov
xchg
push
out
movsb
mov
mov
out
mov
dec
pop
fs
sbb
dec
int3
scas
jl
mov
or
std
cmpb
push
int
pop
js
lcall
movsl
lock
rclb
pop
dec
ja
jge
adc
pushf
pop
sbb
jle
mov
fcmove
lea
addr16
jle
pop
aaa
cmp
dec
cmp
xor
ljmp
mov
int3
test
mov
loop
dec
iret
loope
mov
mov
movsl
incl
sub
push
xchg
bound
enter
xor
mov
cmpb
es
sti
fisubrs
sbb
pop
adc
mull
and
into
push
adc
or
mov
dec
lret
aad
push
cmp
pop
push
xchg
adc
push
dec
or
fdivrl
mov
add
jns
or
fisttpll
inc
int
pop
das
cld
xchg
scas
dec
adc
adc
jbe
mov
xor
stos
or
sbb
in
and
mov
xchg
cli
pop
stos
xchg
in
sub
xchg
mov
adc
testb
fisubl
sbb
push
sbb
add
bound
shl
push
jp
add
fwait
xor
adc
mov
test
ret
mov
inc
and
inc
push
movl
jnp
rcrb
js
rcr
pop
push
inc
les
shrl
jecxz
jmp
or
dec
sarb
cmp
pop
dec
mov
icebp
dec
fisubl
xchg
in
and
and
push
or
cmp
into
cmp
fimull
jmp
mov
int3
and
pop
retw
inc
loop
mov
push
daa
lods
push
xor
sub
mov
mov
inc
imul
sub
xor
stc
cmp
outsb
xor
add
out
fistpll
mov
xor
mov
cs
mov
push
push
out
in
mov
ds
dec
data16
or
inc
pop
mov
cmp
cmp
jmp
push
cwtl
sub
shl
cmp
lret
fsubr
jno
rorl
das
les
dec
lahf
jbe
cmc
out
iret
add
inc
add
cmp
hlt
ja
cwtl
jno
lds
loopne
cwtl
jl
mov
lods
call
xor
and
jo
inc
mov
add
adc
push
xchg
or
rolb
fsubl
or
in
imul
js
lret
xchg
fwait
push
push
jnp
mov
outsl
adc
cltd
xor
sbb
or
mov
rep
lret
mov
sub
jb
cli
mov
daa
test
popf
push
orl
mov
jno
cmpl
fcomps
jmp
mull
and
push
dec
dec
mov
adc
fiadds
out
dec
sti
or
push
test
sbb
xchg
arpl
mov
cld
pop
repz
fs
inc
fcmove
xchg
ja
repnz
mov
pop
mov
adc
ret
xor
loopne
pop
xchg
call
popa
loope
mov
pop
lcall
dec
cmp
lods
idivl
inc
adc
add
repz
lds
arpl
shlb
cwtl
push
pop
xchg
dec
aam
mov
popf
dec
mov
mov
dec
pushf
out
into
jae
add
cld
lods
or
mov
insb
push
das
stos
or
or
sub
cwtl
pop
jno
jb
sahf
and
pop
xor
sbb
mov
dec
jno
mov
sub
jle
cmp
mov
sub
cmc
loopne
mov
pop
sub
imul
shl
cmc
movsb
out
xchg
cld
arpl
jno
daa
rclb
mov
shrb
mov
lahf
sbb
imul
sahf
and
jne
neg
mov
jl
xchg
xchg
mov
aad
sbb
popa
orl
shll
mov
movsb
lcall
fdivp
dec
cmp
cld
push
fsubrs
mov
mov
or
xor
scas
mov
es
pop
jbe
in
lds
enter
aaa
fidivs
lock
test
cmp
xor
jmp
mov
loop
push
pop
xlat
rol
cwtl
popf
xchg
jno
ret
ss
fiaddl
mov
sub
inc
push
cmp
push
scas
jns
popf
push
mov
lcall
pop
jl
jmp
into
movb
mov
mov
lret
and
arpl
aam
dec
popa
add
in
dec
and
shll
mov
pushf
sub
fcmove
imul
cmp
imul
push
je
clc
sbb
dec
jmp
clc
insb
lods
es
inc
sub
dec
cwtl
xchg
or
gs
mov
out
cmp
out
sbb
push
stos
sbb
cmpsl
xor
push
mov
test
or
add
cs
push
loopne
fidivl
cmp
fidivs
xchg
mov
add
repz
inc
push
movsb
or
and
out
mov
mov
out
mov
call
sbb
push
stos
sub
mov
sub
or
int3
mov
inc
inc
push
jle
jne
cmp
fldt
leavew
sbb
mov
mov
test
sub
stos
mov
nop
mov
int3
loopne
add
stos
and
and
dec
dec
pop
es
mov
cmpsb
jg
std
rolb
mov
sbb
mov
loopne
mov
je
addr16
sub
in
lock
dec
dec
dec
ret
rolb
js
or
jne
lods
jecxz
adc
xor
enter
cmp
outsb
mov
cmpl
push
mull
mov
in
push
add
arpl
movsb
dec
mov
lods
mov
lret
sbb
mov
inc
arpl
mov
xchg
add
int
mov
cmc
inc
cmp
xor
std
xchg
push
jg
jae
jmp
repnz
int
lods
adc
movsb
int
nop
hlt
mov
sub
jns
fld
test
sar
jl
je
xor
add
jp
pop
push
sahf
enter
hlt
fistps
add
jmp
std
mov
lret
mov
ds
std
lock
rep
jl
mov
xchg
or
add
sbb
mov
js
add
lahf
inc
push
push
cmc
jg
cmp
shlb
lods
push
clc
inc
inc
add
xchg
mov
outsb
adc
and
ret
imul
fwait
add
adc
fnstsw
loopne
cltd
aad
push
ret
add
imul
repz
leave
mov
aaa
xor
add
and
movsl
pop
repnz
jne
sub
fsubrs
shrl
out
cld
xlat
lods
and
imul
subb
repnz
dec
das
repz
pop
push
mov
inc
inc
jecxz
add
xchg
pop
incb
std
call
in
aas
add
pop
out
xchg
or
add
xchg
popf
dec
dec
notb
fsubr
cli
push
jns
pop
xor
xchg
jno
std
jg
aas
stos
scas
repz
inc
inc
aaa
int
jp
sbb
jmp
cli
scas
hlt
dec
xlat
xor
lods
lret
ja
mov
aas
pop
ss
js
sub
jno
add
xchg
test
cmp
inc
insb
and
cmpl
mov
pop
xchg
mov
pusha
iret
jmp
mov
popa
adc
add
sbbb
push
jbe
mov
cld
jcxz
pop
xchg
aas
iret
xchg
ljmp
mov
dec
cmc
mov
and
shlb
sbb
jnp
in
ss
mov
rcrl
loop
push
les
dec
outsl
in
movl
cmp
dec
mov
pop
jl
mov
add
out
lds
inc
mov
pop
add
call
dec
lock
and
clc
cmp
fisubrs
pop
cmp
mov
mov
adc
mov
xchg
in
inc
sub
mov
movsb
inc
sub
pusha
sbb
sbb
sub
lea
fs
aas
je
pop
pop
mov
cltd
insb
mov
arpl
dec
cmc
dec
in
test
add
ret
sub
arpl
jae
pop
stos
rolb
test
into
mov
dec
test
mov
and
pop
inc
xor
sbb
inc
jnp
xor
add
pop
sub
mov
dec
add
push
rclb
xchg
dec
mov
mov
lods
in
ror
push
push
mov
shlb
clc
aad
rclb
cmp
adc
rolb
arpl
mov
fisubl
fidivrs
data16
sarb
pop
mov
cmp
cmpb
cmp
stos
add
adc
call
into
dec
jno
mov
in
movsb
fdivrl
jmp
jb
push
das
adc
in
pop
pop
in
repz
inc
mov
ret
icebp
in
daa
add
xchg
push
lock
xchg
mov
cmp
lods
test
mov
cltd
mov
inc
dec
fmull
sbb
fs
dec
sub
add
sahf
cmp
xchg
js
sub
lahf
xor
in
orb
fwait
push
out
pop
or
in
test
and
fildl
mov
jle
adc
pop
insl
loope
enter
dec
leave
fs
inc
das
cmpsb
dec
scas
jo
lock
inc
sbb
mov
loop
ret
lods
cmp
movsl
test
mov
daa
dec
fwait
or
ret
and
sbb
rcrb
or
negb
mov
call
cmp
and
fiadds
test
outsb
int
jno
jno
dec
lods
push
fbld
sub
int3
ja
aam
mov
cltd
xchg
mov
mov
sbb
pop
jno
mov
or
jecxz
andl
adc
pop
imul
or
pop
dec
cld
cld
shlb
inc
dec
push
jo
js
jl
cli
ret
xchg
push
and
or
into
hlt
xchg
jle
divl
rorl
clc
push
pusha
cmp
xor
xchg
pop
xchg
pop
mull
or
push
lds
mov
icebp
or
cmp
repnz
repz
pushf
les
loopne
mov
jbe
gs
mov
rcrl
dec
mov
in
adc
inc
or
subb
or
leave
sbb
mov
push
dec
ljmp
push
adc
add
in
xchg
push
popf
scas
fs
push
cmp
stos
inc
jge
adc
fiaddl
jle
fistl
pushf
es
xor
mov
dec
xchg
cmp
cmpsb
cwtl
mov
mov
push
les
mov
mov
into
mov
pop
out
mov
cmp
movsl
in
xor
daa
in
mov
scas
fldt
pop
push
rcrb
inc
pop
cmpsl
movsb
dec
hlt
ds
lret
arpl
pop
inc
ja
rolb
stos
push
pop
daa
call
shll
inc
cs
sub
nop
pop
pushf
and
hlt
inc
add
rcr
xlat
add
mov
inc
push
push
push
add
addr16
mov
je
lea
adc
mov
push
jno
mov
push
lods
arpl
ds
sbb
call
jb
fldcw
sbb
sub
or
cmp
frstor
inc
mov
mov
cmpsl
jmp
aaa
loop,pn
xchg
iret
xchg
mov
iret
xchg
in
pop
jmp
sbb
pusha
dec
push
pop
addr16
and
pop
imulb
push
pop
and
pusha
pop
push
xor
jge
xor
cs
loop
push
jp
push
pusha
mov
mov
add
push
arpl
int
add
mov
inc
ret
and
or
or
adc
jnp
pop
mov
dec
les
pop
mov
loop
inc
aaa
lsl
inc
outsb
into
inc
addr16
sbb
xchg
jbe
or
jo
or
and
adc
clc
out
add
push
dec
outsb
add
lods
lcall
aas
cmp
je
ret
out
xchg
adc
push
cwtl
jo
xor
mov
fmulp
mov
add
pop
dec
cli
and
push
pcmpgtw
cmpsb
or
cmp
ss
mov
stos
stc
push
mov
lock
xor
and
js
lods
push
pop
push
sbb
into
out
rcll
xor
mov
sbb
cmp
inc
imul
or
lcall
or
data16
adc
outsb
xchg
sub
insl
pop
mov
rcrb
sub
call
sbb
das
mov
out
mov
add
sbb
xor
dec
inc
loopne
icebp
aam
repz
xor
fwait
mov
jae
hlt
push
negl
dec
pop
scas
cmc
ror
push
aas
enter
in
sbb
stos
jg
cmp
lea
in
mov
dec
addb
loop
dec
push
mov
dec
sub
int
xor
repnz
and
fwait
addb
in
daa
and
jecxz
loope
inc
int
or
leave
inc
mov
dec
jle
repz
fimull
push
pop
xor
sub
sub
addr16
mov
mov
cwtl
neg
xor
xor
jb
lds
inc
aas
pop
pop
je
aaa
insb
push
pop
repz
xchg
add
cmp
jecxz
push
add
imul
mov
push
jns
add
push
into
sub
daa
and
stos
or
pop
adc
xchg
stos
sar
test
sbb
mov
cmc
sahf
adc
and
icebp
adc
push
mov
fcmovnb
test
clc
ror
out
decl
push
mov
and
lock
jns
sbb
lcall
rorb
adc
sub
adc
mov
mov
jmp
cld
movsl
adc
fists
aam
xchg
adc
pushf
xchg
pop
xor
adc
lahf
mov
lea
mov
ljmp
mov
stc
jbe
cs
inc
int
test
inc
std
int3
or
pop
sub
xor
cmp
sti
push
xchg
push
mov
test
jge
movsb
inc
shll
sbb
jnp
cs
push
inc
and
roll
in
stos
and
mov
cmpb
push
scas
cli
lods
arpl
inc
mov
push
psubw
adc
es
gs
sbb
into
gs
sbb
movsl
ret
rcll
push
movsb
and
bound
scas
imul
test
xor
fdivp
xor
and
mov
ret
add
jne
dec
dec
lret
inc
out
in
jmp
dec
mov
xor
dec
call
add
jnp
mov
shrl
jmp
lock
bound
pop
sub
mov
cmp
jl
mov
sahf
sbb
inc
adc
aad
fdivrp
and
sub
xchg
insb
jbe
je
dec
lea
sbb
mov
inc
inc
inc
mov
movsl
out
sbb
jae
call
push
andl
xor
lahf
mov
jmp
ss
insb
fwait
sbb
scas
das
jo
sti
push
adc
fcmovnu
dec
xchg
sbb
test
cmp
ret
aam
outsl
in
sti
insl
mov
pop
xchg
cs
sub
xor
jbe
inc
insl
push
jb
mov
daa
mov
stos
testb
and
frstor
in
test
sahf
cli
data16
jae
mov
imul
mov
xor
pop
cmp
fldt
fisttpll
jecxz
aad
adc
xor
mov
mov
push
cwtl
jbe
inc
jp
fs
pop
sub
jo
test
cmp
dec
sbb
mov
xor
loop,pn
nop
je
or
dec
add
stc
pop
bound
dec
add
lret
arpl
adc
xor
popa
nop
pop
in
fwait
sbb
and
xor
xchg
in
xchg
and
insb
push
sub
sub
cmpsb
lds
imul
ret
out
orl
test
lea
sub
xor
adc
es
data16
cwtl
orl
jae
sub
sub
sbbl
push
xchg
sub
lock
mov
xor
pop
imul
imul
and
inc
imul
jbe
dec
in
popa
xor
xor
xchg
pop
jle
adc
push
outsl
xchg
fs
sbb
pop
aas
cmp
dec
lods
inc
adc
pop
jb
sub
xchg
int
out
outsl
shll
aas
mov
jns
pop
into
loopne
dec
xor
fcmovnb
cmp
or
mov
add
ja
mov
out
pop
mov
push
and
in
add
xchg
jge
xor
shlb
push
pop
adc
jg
inc
pop
jge
dec
stos
mov
and
daa
sbb
outsl
mov
inc
mov
test
mov
and
and
enter
lahf
in
lea
xor
add
sub
inc
mov
mov
idivb
xor
outsl
jb
dec
inc
test
and
jmp
mull
mov
sub
test
shlb
pop
or
dec
mov
es
jno
cmpsl
je
sahf
xchg
mov
adc
push
lea
jno
ficoml
jg
cld
iret
add
int3
mov
stos
lds
jmp
andl
jge
iret
or
jl
jne
lods
sub
mulb
gs
push
mov
lcall
dec
stos
movaps
shlb
mov
jmp
dec
push
sbb
fdivp
sarl
sbbl
lods
or
sbb
cmpsl
and
popf
pop
test
sub
pusha
shll
xchg
int
jmp
dec
fdivrs
mov
add
lds
mov
int3
ret
outsb
or
in
mov
mov
pop
push
add
in
imul
fcomi
inc
mov
push
adc
insb
xor
mov
xchg
enter
push
mov
jo
sub
in
adc
inc
lret
lds
cmp
pushf
ret
subb
js
push
imul
pop
pop
repz
pop
test
loope
and
ficoml
lahf
loop
mov
mov
fidivs
push
pop
sbb
cmc
pop
jmp
fwait
dec
insb
mov
mov
xchg
movb
fiadds
cwtl
stos
movl
xlat
or
mov
stc
dec
mov
movsl
push
ret
out
xchg
cs
jne
cmc
sub
iret
mov
push
and
jnp
xchg
dec
and
sub
jo
jl
dec
mov
bound
test
daa
clc
push
ja
push
inc
add
inc
sbb
mov
cs
iret
or
mov
sarl
jbe
inc
jmp
mov
mov
out
lret
or
jle
or
push
lods
mov
dec
jp
sarl
pushf
testl
pop
sbb
mov
jns
cmp
jmp
ret
pop
cli
out
adc
lret
ja
int
pop
mov
dec
cmc
inc
repz
xlat
rolb
mov
push
aas
and
sar
inc
sub
sahf
push
outsb
pop
ja
cmp
or
ret
jns
scas
dec
sub
ja
jne,pt
sbb
jecxz
add
cs
nop
sub
add
dec
sub
in
xchg
jl
in
mov
pop
test
sbb
jnp
mov
mov
push
fisubl
mov
xchg
outsb
hlt
imul
dec
jns
into
push
and
frstor
mov
pop
jno
mov
out
xchg
sub
pusha
jl
iret
stos
pusha
icebp
enter
scas
jno
jmp
in
xchg
nop
dec
inc
ret
push
xlat
mov
mov
jge
lcall
andb
negl
jecxz
fadds
aam
addr16
sbb
imul
mov
lcall
add
xor
jg
inc
enter
jmp
inc
cmpsb
ret
call
mov
test
push
mov
pop
into
outsb
das
imul
lock
ficompl
mov
daa
sahf
jl
mov
imul
jmp
sbb
adc
add
cmp
sbb
mov
cld
sahf
into
ret
pop
sbb
outsb
sti
repz
in
inc
pop
sti
mov
mov
fnclex
sbb
fdivl
push
lret
inc
loopne
shlb
cmp
push
xchg
iret
sahf
pop
xchg
inc
push
ret
sub
fucom
outsl
ja
jg
lret
dec
inc
inc
pop
fsubrs
shlb
jmp
cli
jns
xchg
ljmp
inc
add
mov
mov
inc
pop
jp
movsb
icebp
mov
mov
sahf
lods
mov
and
xchg
cwtl
outsl
cwtl
nop
pop
sarl
jp
jne
adc
ds
test
les
cmp
orl
push
clc
jp
add
add
imul
fs
jge
in
sbb
bound
dec
js
sub
out
sub
ret
enter
pop
pop
sub
push
push
cmc
xlat
push
jbe
shl
loope
notb
mov
je
test
mov
mov
jne
pushf
dec
xchg
cli
outsb
int3
sbb
rol
mov
fwait
dec
adc
outsl
xchg
arpl
sub
sbb
mov
jbe
es
ret
inc
arpl
sbb
adc
jno
arpl
push
in
int3
insl
push
jae
and
adc
dec
mov
shll
push
loopne
bnd
jmp
das
add
xorb
adc
push
std
cmp
adc
push
sub
fs
xlat
dec
out
push
popa
mov
adc
mov
iret
outsl
lcall
rorl
stc
cmp
cmp
aas
cmp
jnp
or
aad
std
sbb
test
xlat
lods
popa
and
cltd
cs
sar
leave
pusha
add
cmp
or
aaa
lcall
out
adcb
push
or
loope
sbb
mov
or
mov
int
les
test
lods
stos
test
xor
repz
jg
enter
je
bound
stos
jmp
int
cmpb
hlt
fistpl
cmp
pushf
cltd
cmp
mov
mov
rclb
mov
dec
adc
mov
lret
in
orl
daa
xchg
pop
xchg
call
jbe
sbb
pop
cmp
aas
pop
xchg
imull
xor
xor
out
stc
jmp
outsl
mov
in
inc
and
cmpsl
mov
or
mov
movb
sub
sub
mov
mov
add
cmp
test
adc
leave
es
mov
fsts
nop
adc
push
sbb
outsl
out
mov
cmpsl
fwait
test
xlat
fst
mull
dec
iret
test
ret
add
daa
stos
xchg
shlb
and
pusha
fbstp
adc
mov
insl
mov
inc
jno
cltd
push
call
pop
fucomp
mov
adc
or
in
jbe
or
stos
je
add
mov
jae
fcom
pop
pop
sbb
jb
dec
xchg
test
push
mov
sub
fistps
pop
pxor
fs
mov
mov
daa
pop
call
in
xchg
xchg
sbb
inc
out
lea
shlb
fsts
or
sahf
sub
inc
push
loop
sbb
mov
ljmp
test
jo
or
cmpsl
push
inc
dec
aas
sub
inc
arpl
arpl
call
inc
mov
inc
adc
out
xorl
dec
leave
push
push
or
lods
mov
add
cwtl
js
mov
in
xchg
icebp
sub
addb
jmp
xor
fldt
pop
and
mov
jg
mov
dec
jge
shll
pop
out
ss
inc
cmpsb
push
mov
push
sub
testl
out
and
cmp
movsb
jge
xor
xor
mov
jle
movsl
lcall
pop
sub
dec
arpl
out
movsl
imulb
pushf
mov
aad
dec
or
fsubr
sbb
out
cli
push
lea
daa
xor
movsb
sub
and
inc
dec
lock
nop
and
mov
pop
lods
sbb
call
adcb
cmc
adc
xor
mov
setle
cli
lds
lock
inc
push
mov
stos
fnstsw
jmp
cs
and
dec
jne
mov
or
mov
fdivrl
out
repnz
push
mov
test
jne
testl
popf
pusha
adc
or
xchg
mov
sbb
mov
or
push
imul
jno
fidivl
test
push
lods
push
xlat
inc
repz
fs
pcmpgtw
xor
sbb
out
mov
call
outsb
push
xchg
pop
sbb
jle
cmpl
stc
cmp
popa
fimuls
shll
aaa
mov
jge
sub
adc
lea
dec
mov
outsl
mov
mov
lret
or
and
xor
fbstp
xor
orl
shlb
mov
xor
push
movsl
mov
mov
mov
cmp
xor
test
sub
popf
popf
inc
jns
jge
lret
or
pop
mov
mov
jb
out
por
sti
addr16
adc
cld
jnp
inc
sbb
pop
push
and
xor
dec
add
in
or
in
pop
test
mov
pop
je
cld
shlb
mov
fcompl
imulb
jle
add
jnp
stos
dec
pop
popf
clc
fstpl
cli
adc
movsl
xchg
sub
jnp
repnz
out
xor
iret
insb
xchg
leave
leave
test
pusha
insb
or
mov
push
enter
adc
adc
dec
jp
push
dec
pop
mov
mov
cld
ljmp
and
add
orb
div
fwait
push
ljmp
lods
ficoms
cmpb
in
orb
pop
mov
test
xchg
xor
xchg
jno
movsl
pusha
xor
daa
iret
sub
adc
adc
jno
fisubrs
sbb
adc
ficoms
pop
test
dec
cmc
fldenv
addr16
lock
xchg
outsb
cmp
repz
inc
mov
fimuls
mov
sub
fistpl
xor
out
mov
repnz
sbb
fwait
dec
ds
and
mov
in
hlt
mov
inc
dec
pop
dec
xchg
decb
out
loop
xchg
or
xor
fmull
push
bound
test
mov
mov
punpcklbw
insb
mov
sbb
jae
ja
daa
sub
xchg
repnz
call
ja
xchg
jno
dec
clc
scas
out
pop
jp
add
dec
sub
jb
mov
hlt
mov
pop
and
mov
cmpsb
sub
xchg
or
sbb
jl
adc
insl
dec
stos
sub
xchg
rcrb
jge
fstps
push
aam
clc
imul
xchg
sbb
xchg
stc
ror
jle
xor
out
fst
sbb
jae
popf
xor
xchg
mov
pop
insb
sbb
mov
sti
add
pop
aas
jp
lcall
and
or
rorl
mov
cld
orb
rolb
cli
jbe
popa
fs
adc
or
int3
jnp
pop
dec
into
and
lods
ret
scas
iret
pop
cmpsl
lods
rorl
movsb
mov
jnp
repz
dec
inc
cmp
sti
test
loop
jnp
fs
adc
test
scas
sbb
dec
jo
repz
inc
aas
dec
jns
into
xchg
shlb
bound
addb
in
jg
out
add
or
inc
test
xor
daa
sbb
ljmp
xchg
rcrb
lds
lock
repnz
scas
cs
add
fiadds
mov
xchg
add
mov
test
adc
aad
aad
xor
movaps
xor
insb
shl
push
mov
rcrb
mov
jbe
ljmp
addr16
sbb
int
push
movsb
jae
lea
xchg
sbb
adc
or
roll
xchg
je
mov
sarl
mov
push
adc
out
lret
dec
push
lock
pop
call
mov
fildll
bnd
psrlq
mov
xor
out
jnp
test
jns
mov
jns
loope
sub
sub
dec
fcompl
iret
push
mov
aam
xor
ljmp
imul
or
xchg
int3
loop
fldt
pop
pop
addb
mov
inc
mov
popa
add
xchg
cltd
lock
xchg
push
rcrb
jno
mov
dec
xor
push
and
das
out
stos
sub
cmpsl
fmul
pop
push
jno
out
lea
mov
aaa
cmp
xor
xchg
sbb
pop
pop
mov
das
and
adc
mov
xlat
sahf
mov
fdivrs
inc
mov
mov
scas
not
add
dec
fisubrl
adc
jge
jns
lahf
gs
das
test
dec
test
add
mov
adc
fwait
loopne
mov
ss
ljmp
fwait
iret
xchg
cmp
dec
jecxz
adc
fnstsw
fstpt
shlb
cltd
daa
xchg
or
pop
cmp
pop
and
pop
and
mov
inc
test
inc
stos
cmp
hlt
mov
xor
aas
adc
fs
mov
sbb
xor
loope
cld
push
cmpb
pop
and
xor
les
in
sub
dec
add
pop
clc
gs
loop
rolb
inc
std
jo
scas
and
cld
sub
add
ljmp
mov
xchg
add
xchg
ret
jbe
inc
sub
jae
rcl
pop
pushf
jnp
dec
sbb
fcoml
shr
ret
mov
popa
add
and
stos
aaa
add
cwtl
mov
pop
lahf
mov
xlat
rolb
pusha
cmp
rcrb
inc
xchg
push
cmp
inc
and
jecxz
mov
btsl
cld
loopne
pop
imul
mov
mov
or
add
push
mov
outsb
and
add
arpl
jo
sbb
rcrl
push
xor
dec
pop
in
jg
outsb
inc
and
and
adc
dec
rorl
inc
repz
sbbl
mov
hlt
lret
mov
leave
hlt
mulb
and
jo
or
jae
push
mov
rorl
push
fld
mov
sub
fs
aaa
fldcw
jp
aaa
inc
dec
sub
push
outsl
mov
mov
xor
cmp
movsb
or
std
imul
aam
xchg
out
xor
adc
xadd
mov
adc
in
setno
add
cmpsb
test
stc
mov
stc
or
mov
pop
cld
fidivrs
movsl
inc
inc
stc
xchg
imul
xlat
pop
aas
stos
pop
in
repnz
and
pop
cmc
inc
data16
dec
data16
mov
fsubrl
adc
pop
mov
mov
jecxz
pop
sub
jecxz
mov
icebp
dec
mov
cltd
add
jmp
rorb
xchg
jbe
dec
movsb
cmp
bound
pop
xlat
xorb
fsts
push
mov
pop
jecxz
mov
jl
fbld
cwtl
mov
sub
daa
cs
iret
jge
adc
push
loop
std
arpl
sub
test
sarb
push
jle
gs
mov
push
pop
jecxz
xchg
mov
or
stc
add
imul
lret
jne
add
push
lahf
fmull
cs
jae
daa
push
aaa
scas
in
sarl
inc
aad
bound
and
faddp
bound
mov
xchg
std
les
int
xor
clc
jno
cs
jbe
lret
jge
daa
mov
cmc
push
pop
xor
or
bound
out
inc
addl
or
in
dec
hlt
scas
gs
test
mov
movsb
inc
push
call
and
cld
or
les
jbe
and
mov
adc
mov
cwtl
fstpl
notb
clc
mov
imull
xchg
xchg
test
aas
js
mov
frstor
cmp
pop
sub
in
clc
cwtl
pop
outsb
push
ret
inc
flds
jno
pop
and
shlb
stos
gs
imulb
shll
mov
xorb
js
mov
jb
out
decb
pop
daa
mov
lret
pop
push
jns
sbb
mov
dec
shlb
push
mov
push
xchg
and
cmp
mov
inc
iret
mov
lret
add
cs
push
jno
orl
sub
es
jae
out
hlt
aaa
push
push
test
dec
cmpsl
dec
int3
xchg
das
dec
cmp
leave
insb
jmp
sub
iret
mov
mov
pop
cmp
test
push
sub
and
cmp
les
repz
dec
dec
lock
cmpsl
aaa
xchg
out
nop
cmp
gs
and
mov
adc
xor
repz
in
xor
in
je
mov
cmpsb
pop
dec
lods
stc
ret
stos
push
mov
inc
pop
push
mov
leave
lret
xor
movb
xchg
ret
or
je
jmp
inc
cmc
bound
cmp
add
mov
stos
sub
mov
mov
scas
cmp
and
jns
stos
gs
push
add
pushf
out
mov
inc
shlb
adc
in
xchg
out
and
out
repnz
jb
mov
xchg
pop
jmp
jp
mov
outsl
and
scas
xchg
or
xlat
fdivs
push
mov
sub
adc
pop
push
mov
sub
add
rcll
cmp
mov
sbb
mov
fcmovne
pop
movsb
outsl
dec
xchg
lods
inc
subw
test
lods
add
outsl
pop
int3
seta
xchg
jecxz
or
xchg
or
test
dec
xchg
shll
lods
dec
pop
and
xchg
sub
mov
cmp
jmp
xchg
and
cltd
sbb
out
xlat
jecxz
mov
push
aad
cwtl
loopne
jne
jno
fiaddl
addr16
push
scas
mov
js
push
mov
or
popa
popf
nop
pop
xlat
add
add
cmp
outsb
mov
sti
pop
insl
mov
xor
ret
bound
mov
pusha
adc
pushf
dec
loop
sarb
adc
xchg
jno
in
mov
mov
les
sbb
dec
xchg
inc
cld
popa
jb
and
xchg
lahf
mov
jne
fidivs
sahf
jl
pop
ss
dec
jo
cli
and
and
imul
xchg
push
adc
jnp
jmp
pop
jl
push
icebp
adc
mov
leave
cmp
sub
inc
popa
push
or
jmp
pop
pop
mov
outsb
out
loope
insb
mov
into
or
mov
inc
in
push
test
pop
push
loop
shrb
aad
xchg
push
adc
pop
emms
or
pop
aaa
xchg
sub
insb
mov
rclb
aaa
adc
dec
bound
scas
inc
jecxz
rcr
into
ret
or
scas
jae
mov
sbb
test
push
push
movb
inc
mov
sti
imul
inc
loop
jecxz
repnz
sti
mov
pop
jne
jl
testl
and
jl
xchg
or
add
lods
cwtl
aam
jl
mov
pop
push
jbe
mov
or
lret
or
fisubs
xchg
push
jp
rolb
cld
mov
pop
das
orl
xchg
dec
pushf
mov
xchg
loop
push
pop
pop
out
mov
in
push
fdivrs
insb
hlt
fcompl
and
rclb
je
mov
dec
mov
lods
push
out
cmp
add
mov
dec
test
xchg
inc
add
sbbl
jbe
lea
lcall
mov
scas
push
sbb
and
push
lea
sti
inc
sti
cwtl
and
mov
shr
sub
dec
ds
add
clc
shrl
out
xchg
jae
jp
and
or
cmpsl
push
sbb
pop
mov
mov
jecxz
pop
shlb
das
or
sbb
aam
pop
pop
scas
fwait
popf
inc
shrl
inc
pusha
lock
cmpsb
gs
mov
movb
mov
add
pop
xorl
mov
adc
out
lods
sbb
sub
pop
movsb
add
stos
xor
xor
mov
mov
arpl
pop
int
xorl
int3
lcall
xchg
enter
cmp
push
arpl
xorb
je
int3
xchg
push
es
outsb
sub
xchg
testb
lea
mov
popf
pop
ja
stos
fxch
jne
pop
fsts
mov
std
xchg
roll
pop
add
test
jecxz
test
lods
xacquire
and
cmp
scas
shl
adcl
fcomp
ret
ja
xor
scas
stc
pop
loope
or
incb
jae
sbb
fdivrl
xor
sti
aas
jbe
mov
in
mov
inc
inc
stc
jp
loope
xchg
or
sub
cmp
jp
jb
push
add
sub
cs
bound
sbb
pop
and
pop
inc
cwtl
adc
les
and
sub
sub
rclb
imul
jle
and
dec
arpl
fisttpll
dec
jo
sbb
xchg
push
or
dec
stos
cwtl
test
mov
loope
pop
call
pop
lea
repz
sarb
xchg
ss
cmp
jne
adc
add
mov
sub
in
sbb
xchg
popf
sbb
jmp
imul
pop
push
call
inc
dec
cmpsl
aaa
mov
sub
push
stos
inc
int
jg
pop
add
adc
repnz
and
and
xor
push
pusha
aas
and
int3
lahf
hlt
pusha
out
xor
int3
cmp
jbe
and
imul
test
addr16
cmpl
jg
cwtl
and
enter
arpl
or
cmp
iret
sahf
jns
es
or
mov
jne
push
mov
icebp
pop
xchg
sub
inc
test
mov
daa
jmp
adc
dec
repnz
popf
notb
inc
mov
pop
imul
js
inc
loopne
xchg
mov
add
add
xchg
dec
test
dec
inc
pop
lea
scas
sti
cld
xchg
pop
cwtl
repnz
lea
shll
fs
pop
or
inc
std
hlt
lcall
cmp
mov
pushf
scas
push
mov
sub
pop
mov
outsl
aaa
jge
or
cmp
icebp
insb
push
fsub
or
inc
subl
mov
and
addr16
adc
sub
xlat
lock
shl
adc
cli
sub
xchg
cmp
xchg
push
or
fsubs
aam
or
cmpsb
or
insb
lods
scas
lcall
add
movsb
ss
push
adc
xor
cmc
pop
lahf
mov
mov
pusha
notl
or
das
jge
push
and
push
test
xchg
or
int
jae
sbb
jg
push
popf
cmp
fadds
cli
xchg
negb
and
cmova
rcrl
pop
lret
add
inc
mov
das
mov
mov
daa
push
dec
ficoms
scas
push
dec
mov
add
adc
insl
xor
dec
push
lahf
