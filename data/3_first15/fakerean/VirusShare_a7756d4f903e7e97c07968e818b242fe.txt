mov
neg
add
mov
not
add
mov
neg
lea
push
jmp
not
lea
and
mov
shl
mov
shr
lea
movl
shr
not
mov
jmp
neg
add
adc
xor
xchg
push
mov
add
rol
xor
pushl
xor
not
jmp
shr
neg
mov
shl
xor
and
jmp
xchg
mov
xor
add
xchg
jmp
push
mov
sub
push
push
push
neg
mov
xor
lea
and
push
mov
mov
lea
jmp
xor
mov
xor
xor
lea
xor
mov
mov
xor
mov
jmp
lea
xor
xchg
cmp
je
neg
mov
rcr
lea
neg
xor
xor
xchg
mov
neg
mov
neg
jmp
rol
xor
ror
lea
not
mov
rcr
mov
mov
mov
mov
mov
jmp
rcr
shl
mov
mov
decl
jne
add
jmp
mov
ror
not
xor
mov
mov
and
lea
jmp
push
call
not
add
not
xor
mov
xor
jmp
rcr
shrl
adc
mov
mov
xor
xor
add
jmp
not
lea
lea
not
neg
mov
mov
not
call
ror
neg
jmp
mov
neg
shl
not
neg
jmp
mov
mov
neg
mov
pushl
mov
mov
shl
call
ror
lea
jmp
and
xor
push
shr
xor
mov
lea
rcl
mov
mov
mov
mov
jmp
xor
mov
shl
xor
and
and
call
push
and
xchg
lea
pop
jmp
lea
adc
lea
neg
adc
adc
xor
xor
lea
jmp
mov
shr
mov
cmp
je
xchg
xchg
lea
xor
neg
or
je
mov
xor
xor
jmp
lea
not
add
mov
mov
neg
lea
neg
mov
adc
not
mov
push
jmp
mov
xor
and
lea
adc
ror
lea
lea
push
jmp
adc
and
xor
xor
xor
popl
jmp
rol
neg
not
rcr
add
xor
mov
lea
neg
shl
mov
jmp
not
mov
mov
adc
add
xor
adc
mov
mov
adc
xor
jmp
mov
mov
add
xor
xor
jmp
adc
mov
xor
lea
neg
xor
not
xor
mov
lea
shl
mov
lea
neg
jmp
neg
xor
mov
ror
mov
rcr
rcl
mov
jmp
mov
mov
and
add
mov
neg
xor
lea
mov
jmp
mov
mov
xor
add
adc
mov
and
xor
neg
neg
jmp
xor
xor
not
lea
ret
rcl
lea
xor
xor
rcl
xor
lea
neg
xchg
mov
mov
mov
xor
call
xor
neg
mov
xor
mov
jmp
dec
bound
push
adc
stc
push
adc
loope
adc
scas
test
pusha
lods
sub
cmp
add
std
pop
call
ficompl
cltd
fs
push
stos
mov
repnz
out
jmp
cmp
fisubs
arpl
shrl
cwtl
jns
dec
jo
sbb
push
aas
xor
into
popa
adc
push
add
ficoml
and
cld
mov
aas
cmp
adc
cmp
sub
lods
push
adc
mov
test
sub
pop
mov
and
shrb
xor
xchg
inc
sub
xchg
push
adc
mov
push
push
add
imul
push
sub
test
push
adc
cmp
out
ret
push
nop
fcoms
aas
ret
sub
and
in
cmp
rcl
adc
cmp
js
ficoml
ds
push
sbb
xor
fists
mov
scas
fs
and
xchg
cmp
push
sbb
xchg
inc
mov
rcl
lds
push
loope
and
nop
add
xchg
mov
stc
cmp
divl
sbb
pop
xor
jge
push
xchg
pop
les
adc
push
and
mov
jns
lahf
sbb
inc
scas
out
ret
in
mov
lods
pushf
mov
fidivl
fwait
push
loop
push
add
mov
insl
lcall
cmp
jge
iret
jne
mov
cmp
jge
add
into
jge
fists
popa
and
mov
ds
xor
jge
ficompl
into
jg
xchg
dec
les
adc
and
mov
rcr
dec
and
xor
lea
shrl
add
jecxz
push
repz
inc
clc
out
jo
stc
adc
mov
and
mov
loopne
add
ljmp
fiaddl
jmp
cmp
popf
dec
sbb
dec
enter
add
cmp
jg
gs
mov
fsubr
imul
rcrb
into
inc
push
testb
xchg
fucomip
out
adc
test
add
xchg
mov
lds
jb
ljmp
add
in
imul
mov
add
testl
add
or
insb
loop
loope
jl
or
movsl
fiadds
sti
out
mov
notl
inc
popl
mov
inc
out
mov
jg
xor
xchg
mov
add
clc
sbb
cwtl
mov
aad
arpl
std
mov
ljmp
push
add
jbe
mov
dec
addb
iret
xchg
mov
scas
jl
pop
dec
fs
add
push
mov
scas
fs
mov
ljmp
sbbb
mov
jno
mov
pusha
add
xchg
push
ret
pusha
add
lret
rclb
jg
pusha
add
lcall
jl
mov
mov
pop
pushl
aad
pusha
add
sarl
sub
xchg
fisttps
or
bound
mov
ljmp
pop
in
jecxz
call
pop
jmp
and
mov
nop
icebp
xor
mov
pushf
adc
push
lret
bound
lret
jg
lahf
std
push
testb
inc
push
testb
xchg
fucomip
out
adc
xchg
bound
push
std
icebp
or
int
arpl
jnp
inc
lahf
bound
xchg
mov
cs
jnp
xchg
rcr
mov
sbb
jns
xchg
add
add
mov
dec
lcall
std
push
iret
pushf
and
jns
xchg
add
add
mov
cwtl
mov
pusha
std
ja
rorl
mov
pusha
std
and
jns
xchg
fmull
cmp
in
xchg
mov
and
jns
xchg
loopne
push
fdivrl
sub
and
xchg
ss
jg
sahf
std
push
lret
adc
ljmp
pop
sbb
mov
xchg
mov
sbb
push
es
lret
inc
fs
dec
fs
lret
dec
add
mov
dec
stos
in
jmp
sub
sub
push
push
orb
clc
mov
scas
je
std
iret
add
mov
cs
xor
xor
cmp
or
and
je
jecxz
js
movb
or
jmp
scas
ret
pusha
pop
inc
lret
bound
push
jns
mov
lcall
xchg
call
into
aam
les
jle
lahf
mov
add
inc
ja
std
sbb
in
xchg
mov
add
add
push
pushf
jl
push
xchg
ljmp
cli
add
ljmp
imul
xorl
cmp
push
lcall
sbb
arpl
mov
jbe
test
repnz
gs
andb
push
xchg
sbb
jg
popf
std
push
or
push
lahf
add
sub
mov
fisubl
mov
dec
adc
les
xchg
mov
test
adc
add
imull
mov
mov
int
cmp
leave
add
test
xchg
sahf
pop
loopne
add
add
mov
lods
jp
enter
add
cmp
ja
add
push
mov
fisttpl
inc
mov
cmp
jne
dec
xchg
mov
jmp
add
dec
bound
xchg
mov
mov
mov
loop
jmp
fwait
adcl
inc
lahf
ljmp
lahf
jne
arpl
mov
sbb
insb
mov
xchg
dec
popl
xor
jbe
add
fists
dec
add
sub
mov
cmp
ret
pusha
push
xchg
lahf
dec
scas
shlb
cmp
test
mov
and
lea
mov
xchg
mov
outsb
sbb
ljmp
push
jmp
adc
lock
adc
addr16
jne
insb
push
mov
inc
mov
inc
xor
iret
outsb
or
mov
mov
and
iret
sahf
and
loope
xchg
mov
movsl
rolb
mov
jo
sbb
fwait
and
fidivrl
jne
rorl
xchg
orb
ja
ror
fwait
add
rorb
js
mov
enter
mov
fs
addr16
into
and
xchg
loopne
xchg
iret
push
or
enter
out
or
sbb
lea
repz
sub
jle
out
insb
sub
fistl
push
nop
lds
movsl
stos
ficoml
sahf
adc
frstor
xor
in
pop
outsl
orl
adc
mov
and
xor
add
sub
iret
test
mov
movsb
popf
mov
jbe
clc
stc
aas
lock
jns
dec
add
ds
mov
js
sahf
xor
mov
movsb
mov
dec
xor
addr16
fsubr
or
jmp
insl
xchg
imulb
imul
mov
mov
add
xchg
test
jae
adc
sbb
hlt
and
sbb
lret
in
push
mov
pop
jns
sbb
out
add
jbe
cli
icebp
outsb
pop
loop
in
pop
pop
mov
out
inc
ret
test
sub
and
inc
xchg
mov
rolb
inc
push
outsb
test
jae
adc
scas
mov
push
pushf
or
jg
adc
xchg
jl
es
cmpsb
popa
jbe
test
pop
ja
jmp
push
mov
pop
and
push
or
test
in
pop
and
mov
push
sub
push
test
pop
add
mov
inc
xchg
sbb
fstps
test
pop
jmp
push
aam
enter
cmp
mov
lahf
mov
sbb
arpl
sbb
pop
ret
xchg
test
adc
add
loop
sbb
xchg
int3
into
sbb
inc
iret
int
arpl
std
popf
add
or
add
movl
sbb
adc
mov
push
xchg
xchg
xor
xor
fldt
xor
stos
cmp
lea
pop
fnsave
int3
subl
sbb
mov
lock
jnp
push
lahf
mov
push
push
cltd
mov
sbb
insb
push
jl
arpl
lods
dec
inc
ja
mov
cltd
popf
xchg
nop
jg
stos
sub
adc
cmp
into
call
cli
sub
fwait
ljmp
adc
pop
mov
dec
sti
bound
imul
adc
add
mov
sub
mov
jns
mov
inc
jmp
in
mov
mov
mov
sub
scas
xchg
mov
jle
mov
jl
repnz
push
cld
fisttpll
jmp
daa
xchg
pop
stc
imul
push
into
sbb
fdivs
push
push
nop
xor
xor
jae
xchg
dec
hlt
push
std
mov
sub
ss
popf
mov
jo
inc
addl
fbld
outsb
repz
test
mov
ljmp
add
sbb
repnz
bound
push
fisttps
ja
repz
push
push
shl
or
in
push
inc
pusha
ss
or
data16
sbbb
or
inc
fs
ficoms
in
xchg
dec
aas
mov
scas
mov
sbb
add
fs
inc
pop
dec
arpl
in
jge
aaa
push
adc
std
or
scas
loope
or
cmpsl
pushl
ljmp
cmpsl
pop
pop
and
fstpt
cmpb
xor
add
adc
sub
int
dec
adc
push
adc
xchg
icebp
lods
mov
sub
mov
add
out
jp
add
nop
pop
rcr
inc
cmp
jmp
push
movb
push
int3
mov
jnp,pt
pop
jl
xchg
nop
sbb
add
or
sbb
into
cmp
mov
mov
pop
mov
cwtl
stos
ficoml
add
inc
fs
adc
adc
add
or
xchg
mov
push
lods
scas
adc
cmpb
pop
xor
adc
int
or
or
dec
sub
rol
mov
push
mov
xor
xlat
mov
lods
mov
inc
cs
shr
ljmp
xor
rorl
pushf
test
and
cmp
popf
mov
scas
pop
and
lds
pushf
xchg
mov
xor
aam
pop
es
lds
xrelease
jg
cmp
mov
add
out
jo
cmp
nop
call
xor
push
aad
outsl
mov
orb
add
xor
ljmp
or
mov
mov
inc
lret
xchg
cmp
sbb
popf
outsl
inc
es
pop
xorl
hlt
pop
sarb
outsl
xchg
adc
dec
popa
adc
adc
lcall
ficomps
sbb
out
cmp
dec
adc
inc
dec
rolb
inc
cwtl
insl
fldenv
fimuls
andb
inc
mov
movsl
pop
jl
je
push
or
pushf
mov
in
popf
ret
dec
rcrl
stc
fisttpl
mov
cmp
adc
jbe
cmp
rcrl
cmp
das
jno
cmp
gs
rorb
sbb
adc
add
out
lahf
xor
add
pop
lret
dec
cmp
loopne
mov
jmp
movsb
push
arpl
or
or
loop
or
mov
ret
es
push
jae
das
mov
orb
xor
mov
aas
xchg
lret
xchg
ja
xor
test
jle
sub
push
mov
jecxz
int
in
add
lcall
cmp
fcmovnb
jle
jle
mov
test
sbb
sub
jae
outsl
xchg
mov
xchg
jp
sti
lret
push
mov
xor
cli
mov
pop
divb
pop
pop
daa
sbb
ret
xchg
adc
cwtl
sub
jg
ss
sarb
orb
pop
sbb
ja
loop
mov
fbld
mov
mov
cmp
addl
xchg
imul
ret
lret
jae
xchg
mov
mov
mov
ret
or
mov
pop
jle
jmp
adc
sbb
in
jle
push
sub
loop
cmp
jno
mov
aad
fisttpll
arpl
fwait
adc
loope
xchg
xchg
adc
mov
add
jge
arpl
xchg
cmp
lds
mov
cs
mov
mov
and
push
adcb
jne
mov
or
rclb
fs
cmp
scas
call
xor
mov
dec
push
push
jmp
leave
enter
lock
push
mov
or
mov
mov
push
ret
mov
mov
lcall
movsb
fwait
jp
push
je
xor
xchg
mov
shrl
dec
les
inc
ljmp
xor
xor
mov
fiaddl
or
scas
cmp
outsl
ja
xorl
rcr
addr16
push
aas
mov
cld
mov
cmpl
cli
test
add
mov
cmpb
mov
pop
sub
call
mulb
cmpsl
ljmp
jp
cmp
mov
dec
jmp
push
cmp
xchg
mov
lret
sub
mov
push
or
sahf
mov
pop
mov
add
jbe
dec
sub
scas
jmp
or
pop
xchg
dec
jecxz
push
sbb
je
mov
adc
mov
xchg
arpl
mov
roll
cmp
or
and
xor
pop
jle
xchg
jge
jb
subb
or
out
mov
mov
xor
movb
jmp
mov
test
lahf
lahf
inc
dec
sbb
stc
decl
mov
pop
lret
inc
in
ds
scas
jbe
mov
inc
inc
aad
xchg
dec
lahf
pop
push
test
push
push
les
mov
inc
fisttpll
jg
nop
xor
stos
inc
repz
popa
das
addr16
xor
adc
mov
and
jns
xchg
ljmp
jg
push
fnsave
mov
cmp
aam
jbe
and
mov
add
xor
mov
add
jecxz
xor
pop
and
loop
clc
je
cmp
dec
sub
in
mov
adc
mov
fwait
or
jg
pop
hlt
sub
pushf
push
mov
cmpsb
test
sub
popa
add
in
lahf
fiaddl
add
cwtl
nop
mov
popa
fildll
dec
adc
xchg
out
adc
cmp
add
jnp
gs
mov
jl
xchg
and
push
or
inc
mov
pop
pop
arpl
add
rorb
dec
loop
sub
mov
int
lcall
outsb
jnp
xor
ret
mov
lds
and
insl
inc
or
or
pop
fisttps
daa
mov
xchg
inc
loopne
js
adcl
orb
jbe
aas
out
addl
mov
ds
jecxz
mov
push
mov
pop
inc
pushl
sbb
loope
jle
jle
jmp
sub
pop
adc
add
in
aaa
xchg
das
cs
lcall
cmpsb
ss
cmp
mov
arpl
and
xchg
and
xor
sub
mov
sbb
clc
rcrl
ret
pop
lds
jp
push
and
addr16
rorb
push
or
lret
stos
pop
fisttpl
dec
jo
loop
pop
bound
pop
pushf
lods
cli
rolb
mov
adc
dec
dec
rcrb
lret
push
mov
or
xchg
or
cmp
mov
pop
add
and
nop
movl
push
cmp
fists
jle
rcll
xchg
push
cmpsb
fs
mov
lods
mov
dec
test
dec
pop
out
call
ficoms
push
pop
jg
jae
mov
xchg
add
popa
dec
bound
insb
inc
adc
pushf
push
outsb
xor
mov
pop
mov
pushf
sbb
push
mov
jae
aaa
add
ljmp
inc
and
int
pop
inc
mov
aaa
in
lahf
das
and
pop
xlat
movsl
sarb
addr16
mov
and
xchg
add
lahf
push
xchg
arpl
cmpsl
and
cmp
outsb
shr
adc
cmp
lahf
pop
dec
sub
mov
cmpsb
mov
jo
aam
adc
test
dec
sti
cwtl
jbe
mov
xor
mov
hlt
xchg
mov
pushf
jg
mov
mov
mov
add
mov
mov
sbb
and
out
xchg
in
add
das
mov
jp
or
xchg
xor
orl
aaa
sbb
push
stos
mov
mov
push
jmp
dec
outsb
sub
or
mov
sub
cwtl
inc
cmp
sbb
mov
sub
jl
dec
ljmp
mov
cltd
push
sub
inc
into
subl
cmp
lret
dec
xor
mov
push
insb
cmp
xor
xchg
imul
pop
dec
imul
mov
pop
mov
js
adc
cltd
lods
movsb
lahf
movsl
icebp
xor
out
test
lea
cmc
push
bound
push
cmpl
sbb
loop
push
inc
add
pushf
sahf
push
shrd
scas
movsl
imul
pop
sbb
adc
mov
mov
jbe
scas
sarl
test
push
adc
cmp
ret
addl
dec
xchg
mov
icebp
inc
jecxz
and
stos
mov
sahf
pop
jbe
lret
mov
inc
pop
sahf
mov
sbb
mov
push
jnp
dec
lret
push
ja
and
dec
lock
movsl
mov
mov
cmpsb
mov
out
xchg
pop
jae
push
jge
pop
push
mov
andb
push
dec
and
cmp
lahf
jbe
xlat
mov
pop
inc
shrl
xor
addb
enter
jae
loopne
flds
bnd
or
push
jg
xor
jle
fwait
sbb
sbb
lcall
sub
rclb
push
arpl
fnsave
bound
push
mov
xchg
mov
cmp
adcb
push
jge
mov
and
mov
ljmp
pop
test
mov
jge
mov
jle
adcl
mov
cmpsb
mov
sub
xor
mov
pop
lea
push
add
push
jle
dec
dec
cmp
or
orb
out
xor
shrl
cmp
jge
adc
movsl
cld
pop
xchg
repnz
icebp
xor
shlb
imul
scas
sub
push
jp
xor
inc
cmp
dec
sbb
inc
jle
lds
xchg
mov
je
fs
mov
dec
movsb
in
mov
or
out
lods
add
xor
sarb
or
je
mov
dec
sarl
mov
js
int
jnp
and
sub
mov
sub
pop
xor
mov
push
sub
pusha
cmp
mov
es
fstl
sbb
adc
sarl
cwtl
dec
lock
dec
loope
outsl
js
xchg
sbb
inc
in
loop
inc
push
cmc
testl
pop
aas
jo
adc
pop
es
rcll
add
jbe
jo
sete
mov
xor
lea
mov
js
mov
lock
cmp
mov
data16
adc
imul
sbb
and
dec
or
cld
addr16
cmpsl
dec
test
cmp
insb
mov
sbb
into
popl
imul
push
mov
jge
push
adc
add
inc
test
insb
push
je
je
add
sbb
sahf
xchg
xchg
rcll
cli
in
out
add
or
or
mov
mov
pop
les
std
cmpsl
ljmp
mov
lods
cmpsb
sbb
xchg
scas
sbb
or
xchg
filds
inc
movl
loop
addb
pop
fsubrl
push
xchg
lcall
inc
sbb
pushf
ret
xchg
movsb
mov
mov
aas
mov
xor
or
mov
xchg
pop
inc
mov
sahf
mov
or
sbb
nop
stos
fmull
mov
push
dec
inc
test
out
ljmp
das
xorb
outsl
inc
pminub
clc
adc
hlt
fs
fdivrl
dec
outsb
xor
mov
inc
and
mov
stc
bound
mov
pusha
pop
sub
jne
shll
negb
mov
sub
xor
mov
imul
outsb
pop
xchg
lret
std
mov
fs
or
mov
popa
dec
loop
mov
sbb
das
xchg
inc
push
mov
rcrb
movb
pop
xchg
xchg
fwait
or
es
pop
adc
scas
inc
push
mov
popf
jb
imul
dec
xchg
fbstp
sbb
lock
inc
stos
cmp
or
pop
popa
mov
lcall
xor
sub
sub
sbb
jmp
fwait
jno
mov
cmpsl
mov
data16
dec
mov
adcl
or
mov
stos
fnstenv
test
dec
push
rcrb
subl
jmp
cmp
outsl
or
fsubrs
add
mov
pop
push
inc
dec
lock
js
mov
adc
ss
dec
imul
push
fnstsw
push
scas
testb
iret
test
mov
roll
cwtl
std
dec
mov
adcb
movsl
stos
lahf
or
lret
xor
push
inc
adcb
cld
imul
movsb
jbe
push
push
dec
call
loop
inc
mov
xchg
into
std
test
jbe
nop
sahf
xor
jmp
out
mov
pop
mov
int3
loopne
cltd
stos
adc
and
decl
mov
xchg
sbb
int
cmp
test
and
xchg
inc
insl
das
push
push
es
std
jge
scas
jb
and
or
push
sbb
in
inc
push
jbe
pop
sbb
lcall
sbb
mov
push
aam
cld
mov
mov
inc
push
add
stos
lock
loope
test
xchg
mov
int
mov
and
vpdpbusds
push
mov
sub
mov
adc
adc
fwait
push
pop
icebp
cli
cmpsb
and
adcb
fdivrp
movsl
and
cmp
lahf
jb
inc
dec
in
sbb
cmp
orl
fisubrl
mov
inc
jbe
xchg
ret
ret
push
add
xchg
mov
pop
jl
mov
adc
dec
mov
dec
fwait
test
fidivl
outsb
lods
push
data16
xchg
adc
xchg
mov
lret
push
fldl
jnp
imul
divl
and
je
lcall
mov
arpl
push
ljmp
shll
je
dec
cmpsl
fldcw
rclb
sub
xorl
inc
fs
fcoml
mov
sahf
in
sub
fidivl
inc
inc
or
addr16
jo
mov
rclb
aad
sbb
xor
push
and
out
pushf
pop
or
fidivrl
or
xchg
xor
shl
and
loopne
fwait
jl
mov
push
test
push
sahf
mov
add
sbbb
mov
inc
xchg
mov
or
outsl
shlb
inc
lcall
push
sub
test
push
mov
filds
cmpsl
lcall
mov
stos
loopne
mov
xchg
ds
inc
cmpsl
mov
xchg
out
ss
dec
fs
sub
xor
cld
cmpl
mov
popa
sbb
xchg
popf
xlat
and
push
and
pop
es
xor
mov
push
popf
mov
push
and
add
lods
int3
mov
dec
arpl
pop
xchg
inc
xor
das
jns
bound
out
ret
add
inc
scas
pop
arpl
pusha
or
jb
cmp
mov
mov
aad
fstl
xchg
xchg
cmc
pop
mulb
push
cmc
and
xlat
adc
jb
and
push
pop
or
inc
sub
std
fidivrs
ret
push
or
pusha
adc
cmp
add
test
ljmp
rcll
and
cld
filds
sbb
loop
mulb
pop
mov
std
add
ljmp
pop
fwait
jmp
xchg
push
dec
push
inc
lock
mov
into
mov
pop
push
andb
popf
lret
lcall
into
push
shr
nop
lret
repz
pusha
fs
jecxz
lock
js
mov
mov
test
dec
icebp
or
and
sbb
add
adc
pusha
out
sbb
mov
flds
mov
adc
pop
xchg
sub
mov
sbb
jle
mov
jmp
icebp
cwtl
lods
fbld
stc
adc
add
dec
inc
ja
jp
xlat
pop
call
sbb
out
xchg
jmp
dec
lret
leave
in
imul
pop
loopne
scas
outsl
icebp
mov
insl
add
lea
fmull
xor
mov
xchg
test
pop
mov
fabs
mov
fsubrl
or
orb
andb
out
dec
ja
xchg
es
dec
pop
mov
xchg
jb
push
add
movl
jmp
adc
or
add
cli
movsl
pushf
add
aad
mov
js
rorl
jmp
outsl
ja
sub
jb
jge
fcmovb
pop
sbb
imul
inc
xchg
in
outsb
mul
add
shr
mov
push
vcvttss2si
rcr
xor
imul
lret
or
xor
lods
mov
mov
inc
add
inc
jbe
add
test
cmpsb
sbb
xor
nop
mov
jnp
out
jge
les
nop
mov
gs
lea
mov
mov
ljmp
adc
cltd
push
sub
cwtl
addr16
mov
std
jbe
lods
add
fisubl
arpl
fs
jmp
mov
push
imul
push
adc
mov
scas
pop
mov
adcl
add
icebp
je
push
mov
push
ja
add
les
in
push
js
outsb
ja
mov
sub
dec
in
adc
rcll
jae
negl
je
add
aam
inc
nop
jbe
ficoms
mov
adc
aaa
or
dec
and
stos
add
ja
jne
rolb
add
mov
push
push
adc
dec
cmpsl
inc
jns
arpl
push
mov
inc
pop
mov
push
jns
loope
jl
in
cmp
push
bound
xlat
dec
dec
sub
push
jg
push
outsl
xchg
push
iret
pushf
cwtl
fs
sub
insb
fwait
out
lret
xor
fistl
xchg
push
xor
scas
cmpl
pop
xor
inc
jo
adc
cs
adc
and
add
ds
and
jg
inc
adc
adc
push
jmp
fcompl
cmp
or
lods
adc
bnd
dec
cmp
push
mov
pushf
filds
mov
fisubs
mov
xchg
arpl
fcoms
or
mov
push
adc
push
ss
or
es
inc
dec
sbb
rclb
mov
adc
idivb
push
fprem
cmp
mulb
cltd
jle
hlt
addr16
add
mov
jnp
lcall
sub
stos
pop
inc
xchg
movsl
insb
iret
mov
test
push
rorb
stos
xchg
adc
outsl
push
aam
lcall
inc
cmp
bound
pop
pushf
jp
aas
mov
jne
loope
or
hlt
adc
outsb
std
sbbb
shl
popf
stos
pusha
ret
inc
xor
and
xchg
mov
xor
pop
push
pop
xchg
xchg
nop
xor
xchg
xchg
jmp
xchg
or
jbe
out
or
or
cmpl
ljmp
test
out
addl
mov
imul
push
in
sbb
lcall
pop
loop
cmc
xlat
insl
push
inc
adc
shl
cmc
push
and
dec
orl
out
lahf
or
testb
or
dec
dec
xchg
push
shrl
xchg
std
aaa
push
arpl
outsb
push
jecxz
mov
imul
and
mov
stos
in
inc
cmp
roll
iret
test
test
push
inc
insb
jmp
lods
lret
sbb
mov
cmp
mov
dec
and
and
adc
fisttps
or
mov
lret
mov
call
push
mov
push
pushf
xorb
das
subl
aad
adc
aad
rolb
aad
sub
out
aam
pushf
pop
or
in
lcall
mov
sbb
fsubrp
and
lahf
andb
jle
lahf
xchg
das
pop
and
sub
cmpsl
dec
adc
inc
sar
aad
enter
or
mov
mov
fidivs
lret
inc
dec
sbb
push
add
xlat
cmp
ret
fbstp
push
les
add
cli
mov
daa
subl
mov
ljmp
dec
push
daa
sbb
push
sahf
or
push
push
shrb
push
cmp
shrb
pop
cmp
mov
xorb
icebp
xor
arpl
sbb
stos
ror
mov
or
pop
jg
mov
push
stc
add
push
sbb
push
xchg
das
xor
ljmp
sub
cmpl
fisttpll
int3
stos
fildl
fisttps
adc
add
push
sti
cmpsl
jb
aas
sbb
adc
dec
xchg
fwait
mov
data16
lcall
mov
and
cmpsb
ror
mov
sbb
jmp
sbb
lock
inc
sbb
cmpsl
adc
inc
cmpsl
adc
xchg
cli
dec
jb
cli
dec
jb
cli
pop
xor
inc
mov
fsubrs
fisubs
es
push
jmp
mov
pop
push
inc
mov
pop
sbb
sbb
rcrb
test
sub
lods
xchg
popa
push
xorl
jge
insb
jo
fidivl
fs
shll
push
fwait
insl
push
test
insl
xchg
push
inc
cltd
sahf
push
push
adc
mov
cmpsb
inc
arpl
ret
fldenv
jmp
stos
aas
call
adc
mov
lret
push
pop
xchg
lock
bound
sbb
xor
push
rclb
mov
in
jmp
mov
sub
jns
add
xor
mov
pushf
pop
je
mov
ljmp
int
loop
out
cs
pop
xchg
jle
dec
leave
ljmp
mov
fisubrl
adc
push
push
out
lcall
lea
push
lahf
sub
fiadds
mov
jecxz
les
jmp
shl
push
cmp
test
decb
push
inc
pop
xchg
adc
add
mov
enter
lds
mov
enter
dec
push
dec
fwait
stos
mov
jle
fisubrs
lods
shll
imul
orb
lret
cmc
push
mov
ljmp
xor
add
mov
xchg
roll
movsl
mov
cmp
repnz
popf
inc
repnz
inc
xor
je
sub
jge
xchg
xchg
or
mov
ja
mov
push
push
stos
imul
das
cmp
pop
ljmp
fcmovnu
jle
push
sbb
movsb
sub
sub
xor
movsl
lcall
mov
inc
lea
sbb
lret
adc
aad
int
mov
adc
mov
pop
mov
sub
xchg
and
lock
enter
add
loope
jecxz
aad
jno
adc
mov
push
cld
nop
ljmp
and
lret
lods
sub
loop
sub
addr16
xchg
outsb
dec
js
adc
mov
nop
jmp
sbb
jbe
movsl
divb
cld
aad
pop
xchg
outsb
mov
in
mov
mov
dec
and
mov
jg
das
iret
push
movsl
adc
jbe
xchg
cld
push
and
ja
ss
adc
sahf
cmc
aam
jmp
sbb
xchg
and
jecxz
sbb
push
sub
adc
inc
push
push
into
mov
dec
jmp
nop
std
xlat
test
push
test
movsl
xchg
dec
mov
pop
jmp
push
fistpll
xchg
pushf
and
orb
loop
cmp
pop
mov
pop
sbb
xlat
ja
sahf
sti
cmp
fs
cmp
filds
lods
jmp
adc
dec
push
fisttpl
jbe
and
adc
push
sub
movsb
mov
data16
addl
nop
rolb
stos
and
ficompl
test
out
xchg
data16
aam
inc
roll
outsb
jg
loop
add
inc
jp
stc
cmp
add
in
lods
icebp
dec
mov
xchg
.byte
inc
.byte
.byte
.byte
