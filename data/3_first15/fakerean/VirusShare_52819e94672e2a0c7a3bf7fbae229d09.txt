pop
or
leave
adc
add
cmp
lret
adc
add
adc
in
leave
adc
add
pusha
clc
lret
adc
add
je
mov
leave
adc
add
test
lret
adc
adc
movl
movl
mov
movl
movl
or
or
or
or
and
or
and
or
or
or
or
and
and
or
and
and
or
or
or
or
mov
push
mov
mov
mov
pop
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
and
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
push
pop
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
and
or
or
or
or
or
or
or
or
and
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
mov
mov
movl
movl
mov
movl
call
xor
mov
call
cmp
je
mov
lea
push
pushl
mov
push
call
add
inc
cmp
jl
xor
push
call
inc
cmp
pop
jl
call
push
push
call
movzbl
push
push
mov
call
movzbl
add
mov
movl
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
je
mov
js
mov
add
test
jne
lea
push
push
mov
movl
movl
movl
mov
movw
mov
call
lea
push
lea
mov
movl
call
add
push
lea
mov
call
test
je
test
je
mov
mov
lea
mov
test
jne
test
jne
test
je
mov
cmp
je
cmp
je
mov
mov
movl
mov
mov
xor
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
call
test
je
mov
mov
cmp
jne
mov
test
je
mov
mov
mov
lea
cmp
je
lea
movzwl
lea
cmp
movzwl
jbe
mov
add
add
cmp
jne
pop
pop
pop
pop
ret
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
jne
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
push
mov
mov
push
push
mov
mov
mov
xor
test
je
mov
add
test
jne
sub
je
mov
mov
mov
mov
mov
mov
push
call
test
je
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
and
or
mov
mov
mov
mov
mov
mov
mov
mov
sub
push
call
mov
push
call
lea
call
mov
mov
test
jne
test
jne
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
test
je
pop
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
xor
movl
mov
movl
mov
cmp
push
push
je
lea
push
mov
mov
mov
mov
push
push
mov
call
mov
test
mov
je
mov
mov
lea
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
add
or
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
movl
orl
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
mov
test
push
mov
je
mov
lea
push
push
push
mov
call
test
jns
mov
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
call
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
push
lea
and
xor
push
push
call
add
cmpl
mov
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
mov
shr
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
movzbl
mov
shl
xor
push
and
xor
lea
push
mov
mov
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmpl
je
test
jne
mov
push
call
add
mov
mov
test
movzbl
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shr
mov
mov
and
test
je
mov
lea
push
push
push
mov
call
test
js
mov
movzbl
shl
xor
and
xor
mov
mov
shr
and
test
je
mov
mov
lea
push
push
push
call
test
js
mov
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
cmpl
je
mov
lea
xor
and
xor
mov
test
je
mov
mov
lea
push
push
push
call
test
js
mov
movzbl
shl
xor
and
xor
mov
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
mov
and
xor
call
lea
push
push
call
add
push
lea
call
test
je
movw
mov
test
mov
mov
pop
je
mov
lea
push
push
push
mov
call
test
js
mov
mov
shl
xor
xor
and
xor
mov
and
xor
test
je
mov
mov
lea
push
push
push
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
mov
js
mov
shl
xor
and
xor
test
je
mov
lea
push
push
push
mov
call
test
js
mov
shl
xor
and
push
xor
mov
call
mov
test
mov
jne
test
je
mov
push
call
add
mov
test
jne
test
je
mov
push
call
add
pop
pop
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
push
mov
push
mov
push
push
push
call
test
js
pop
pop
pop
ret
test
je
lea
push
push
mov
call
test
jns
mov
test
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
mov
movl
call
test
jne
mov
mov
call
test
jne
push
push
mov
call
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
pop
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
cmp
je
mov
cmp
jne
mov
call
cmp
jne
mov
call
test
jg
mov
call
cmp
jne
mov
call
test
jg
xor
pop
ret
mov
pop
ret
cmp
je
jmp
cmp
jne
mov
call
fmull
push
fstps
flds
fstps
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
push
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
mov
mov
mov
mov
mov
call
mov
addl
add
cmp
jne
mov
addl
mov
pop
lea
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
push
jne
mov
test
je
cmpl
je
mov
pop
pop
ret
push
call
add
test
je
movl
movl
movl
mov
test
mov
je
mov
mov
push
call
mov
pop
pop
ret
mov
mov
call
test
je
mov
jmp
xor
jmp
push
mov
mov
call
test
jne
pushl
mov
push
call
xor
pop
ret
push
mov
and
sub
push
push
mov
call
test
jne
and
mov
mov
lea
push
push
call
test
js
mov
test
je
andl
mov
lea
push
push
call
test
js
mov
mov
lea
push
push
call
cmpl
jb
mov
andl
mov
lea
push
push
call
mov
push
call
mov
pop
mov
test
mov
jne
cmp
je
lea
push
push
push
pushl
call
add
test
je
cmpl
jg
pushl
call
push
call
pop
pop
xor
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
mov
test
jne
cmpl
je
push
call
test
je
mov
mov
mov
test
je
cmpl
je
mov
test
jne
pop
mov
pop
ret
call
jmp
push
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
mov
movl
mov
push
xor
mov
mov
push
lea
lea
mov
mov
mov
movl
mov
mov
call
cmp
je
mov
mov
mov
lea
push
push
call
test
mov
js
cmp
je
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
push
lea
mov
lea
push
lea
mov
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
push
call
mov
mov
push
call
mov
push
lea
lea
movl
mov
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
jne
mov
call
lea
mov
mov
call
mov
push
lea
call
lea
push
lea
push
lea
mov
call
test
js
mov
cmp
je
addl
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
mov
lea
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
jg
cmp
jne
mov
lea
push
mov
push
call
test
mov
js
cmp
je
mov
cmp
je
lea
push
mov
push
mov
mov
mov
push
push
mov
call
cmp
jne
lea
lea
push
push
mov
lea
mov
mov
movl
movl
mov
mov
call
add
push
lea
push
call
mov
test
jne
test
jne
mov
mov
lea
push
mov
push
push
mov
call
cmp
mov
je
mov
push
mov
mov
call
mov
addl
mov
cmp
jge
addl
mov
call
test
jne
cmpl
jge
lea
mov
jmp
call
mov
mov
add
adc
cmp
jg
mov
jl
cmp
jbe
jmp
lea
call
mov
mov
push
push
call
add
lea
call
lea
call
lea
call
jmp
push
mov
lea
call
jmp
push
mov
lea
call
jmp
int3
push
mov
and
sub
fildl
lea
push
lea
fstpl
push
fildl
mov
fstpl
fildl
fstpl
fildl
fstpl
call
fldl
lea
fstpl
push
fldl
fstpl
fldl
fstpl
fldl
lea
push
fstpl
call
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
mov
mov
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
cmp
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
mov
mov
mov
cmp
jne
movzbl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzbl
mov
mov
xor
mov
mov
jmp
lea
mov
movzbl
movzbl
lea
push
lea
call
mov
call
push
lea
mov
push
lea
push
call
mov
add
add
cmp
jl
pop
pop
mov
pop
pop
add
ret
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
jne
mov
call
lea
call
add
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
test
je
testl
je
push
call
add
mov
pop
pop
xor
call
add
ret
push
call
add
jmp
push
mov
mov
mov
push
call
add
jmp
push
mov
sub
cmpl
je
leave
ret
cmpb
jne
cmpl
je
push
push
lea
call
lea
mov
mov
call
mov
mov
mov
andl
andl
push
lea
mov
mov
movl
movl
call
mov
test
je
mov
test
mov
je
mov
lea
push
push
push
call
test
js
mov
xor
cmp
setne
inc
push
movzbl
push
call
pop
push
push
push
call
test
js
pop
pop
leave
ret
andl
jmp
push
mov
push
mov
push
xor
inc
cmpl
jne
testb
jne
xor
testb
je
pop
leave
ret
test
jne
mov
mov
mov
push
push
mov
lea
push
lea
mov
call
mov
mov
neg
sbb
neg
call
mov
shl
xor
pop
and
xor
pop
jmp
mov
jmp
mov
andl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
test
push
je
mov
mov
mov
push
xor
call
mov
cmp
jne
xor
cmp
mov
jne
mov
mov
push
mov
lea
mov
mov
call
mov
cmp
je
mov
mov
push
push
mov
call
mov
mov
cmp
je
movl
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
cmp
je
cmp
je
cmp
je
cmp
je
mov
lea
push
lea
push
lea
push
mov
movl
movl
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
test
js
cmp
jne
cmp
jne
mov
mov
mov
push
push
call
cmp
mov
jne
mov
mov
mov
push
lea
push
mov
push
push
call
mov
lea
movl
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
cmp
jne
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
mov
push
push
push
call
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
push
xor
push
lea
mov
call
mov
mov
mov
lea
push
push
call
test
js
push
lea
mov
mov
mov
mov
call
mov
cmp
mov
jne
mov
mov
mov
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
push
mov
lea
mov
mov
call
test
js
mov
mov
cmp
je
movl
cmp
lea
jne
xor
lea
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
mov
mov
mov
push
push
call
cmp
mov
mov
jne
jmp
lea
mov
test
je
mov
cmp
jge
mov
mov
mov
mov
mov
push
push
call
add
add
jmp
xor
lea
call
lea
call
lea
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
xor
jmp
xor
jmp
push
mov
push
mov
push
push
push
push
call
mov
mov
mov
andl
andl
test
mov
mov
lea
mov
mov
je
mov
push
call
push
push
pop
mov
andl
push
lea
pop
mov
mov
call
push
push
pop
push
lea
pop
mov
call
test
pop
pop
mov
jne
mov
push
push
pop
push
lea
pop
call
push
lea
push
push
call
push
push
pop
push
lea
pop
mov
call
add
pop
pop
pop
mov
pop
ret
mov
pushl
mov
push
call
ret
push
mov
decl
mov
je
pop
ret
lea
movl
call
lea
call
push
call
pop
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
jne
push
push
push
mov
movzbl
mov
xor
cmp
jne
push
call
add
test
je
push
mov
call
mov
test
je
test
jne
mov
mov
lea
call
mov
mov
lea
call
mov
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
mov
test
movl
je
mov
mov
push
call
movb
movb
xor
pop
pop
pop
pop
ret
sub
cmp
ja
jmp
push
call
add
test
je
flds
push
push
fstps
mov
mov
call
lea
add
push
push
movl
movl
movl
call
flds
fstps
mov
jmp
push
call
add
test
je
push
push
mov
xor
mov
call
mov
mov
mov
mov
jmp
push
call
add
test
je
mov
shl
sar
push
push
mov
push
push
xor
mov
call
test
je
mov
mov
mov
mov
mov
movzbl
xor
lea
and
xor
mov
mov
call
mov
mov
flds
fstps
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
arpl
cmp
xchg
cmp
shll
adc
and
mov
cmp
and
imul
cmp
cmpsb
daa
or
mov
cmp
push
cmp
popf
and
adc
and
adc
and
adc
daa
or
pop
and
cmp
enter
call
es
dec
es
sbb
or
test
cmp
mov
cmp
mov
cmp
lods
es
fldenv
cmp
or
cmp
mov
cmp
mov
cmp
out
and
mov
cmp
cmp
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
jge
cmp
int3
int3
int3
int3
int3
int3
int3
int3
movzbl
and
cmp
je
cmp
je
mov
movzwl
test
push
je
mov
lea
call
test
je
mov
mov
call
test
je
mov
mov
mov
add
mov
mov
mov
add
mov
mov
and
or
mov
pop
mov
ret
xor
ret
orb
xor
pop
ret
mov
and
cmp
jne
xor
inc
ret
push
mov
call
pop
ret
push
mov
sub
mov
push
push
push
mov
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
push
lea
lea
movl
mov
mov
mov
call
mov
lea
call
cmp
je
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
call
lea
mov
call
lea
call
pop
pop
mov
pop
leave
ret
push
mov
push
push
mov
mov
test
mov
je
mov
push
call
mov
test
je
mov
push
call
lea
call
mov
mov
mov
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
mov
mov
xor
push
mov
lea
mov
call
mov
mov
call
cmp
mov
mov
ja
lea
call
mov
pop
pop
xor
xor
pop
call
leave
ret
mov
pushl
mov
call
mov
mov
mov
cmp
jne
cmpl
jne
lea
push
pushl
lea
mov
mov
mov
mov
movl
mov
mov
mov
push
mov
call
mov
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
mov
call
lea
lea
call
test
je
lea
push
pushl
lea
mov
mov
mov
movl
mov
mov
mov
push
mov
call
lea
push
mov
call
test
je
push
mov
lea
call
mov
call
lea
call
mov
cmp
je
mov
cmp
mov
je
mov
push
call
mov
push
push
lea
push
push
lea
push
push
push
mov
call
add
lea
call
lea
call
lea
call
pushl
pushl
call
pushl
pushl
call
pushl
pushl
call
add
incl
mov
cmp
jae
jmp
push
mov
sub
push
push
mov
push
lea
xor
cmp
je
cmp
jne
mov
lea
push
mov
call
pushl
lea
call
cmp
je
mov
xor
cmp
je
lea
push
push
mov
mov
push
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
lea
call
mov
mov
call
cmp
je
lea
xor
call
lea
xor
movb
call
mov
xor
call
push
lea
call
cmpb
je
mov
and
and
push
lea
lea
movl
mov
call
mov
test
je
mov
lea
push
push
call
mov
mov
lea
call
xor
mov
push
mov
lea
mov
call
mov
lea
mov
call
pop
pop
pop
leave
ret
mov
push
mov
call
test
jne
push
xor
cmp
jne
push
mov
push
mov
call
test
jne
pop
pop
ret
mov
mov
push
mov
call
test
je
pushl
mov
mov
call
inc
jmp
pushl
push
call
pop
pop
pop
ret
sub
mov
xor
mov
mov
test
je
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
mov
xor
call
add
ret
lea
mov
mov
lea
push
mov
mov
mov
movl
movl
movl
movw
mov
mov
push
push
call
cmpl
jne
mov
test
jne
test
je
jmp
mov
mov
add
call
xor
ret
push
push
mov
call
mov
push
push
call
pushl
mov
call
pop
ret
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
mov
call
cmp
je
mov
call
test
jne
xor
ret
int3
int3
push
mov
and
sub
push
push
push
push
mov
mov
mov
test
jne
mov
push
push
call
mov
mov
call
mov
mov
mov
test
jne
mov
push
push
call
mov
mov
mov
call
test
jne
lea
cmpl
jne
movzbl
add
push
lea
call
call
test
je
movzbl
lea
push
lea
call
mov
call
cmp
je
call
test
je
mov
movl
mov
call
test
jne
add
cmpl
jne
movzbl
add
push
lea
call
call
test
je
movzbl
add
push
lea
call
mov
call
cmp
je
call
test
je
cmpl
jne
mov
pop
pop
pop
pop
mov
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
shlb
hlt
call
mov
cmp
je
add
lea
push
mov
mov
push
call
test
js
mov
push
mov
mov
call
mov
mov
and
mov
mov
call
mov
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
push
call
mov
xchg
add
aam
aad
add
xchg
stos
pop
ljmp
loop
hlt
add
mov
testl
add
cltd
mov
add
jp
add
ret
add
add
add
call
in
add
push
push
push
push
call
stc
add
add
push
add
add
fwait
add
add
mov
add
cmpsb
push
add
ror
cwtl
je
add
add
arpl
pop
sub
pop
popl
push
push
push
push
push
call
add
pop
add
outsl
sahf
jo
add
je
add
mov
add
add
lods
fsubrs
popa
stos
mov
insb
out
pop
push
mov
xchg
call
in
add
add
add
in
in
pop
push
push
push
lea
push
push
call
je
pop
lahf
shlb
hlt
mov
pusha
add
add
mov
mov
mov
add
add
add
jmp
shll
jbe
mov
mov
mov
push
add
xchg
add
filds
fwait
in
shlb
push
test
insb
add
push
push
lea
push
call
cltd
ja
add
int
lods
bound
insb
scas
add
mov
add
cltd
xchg
test
add
movsl
fildl
jmp
xchg
add
clc
lcall
add
add
nop
add
jmp
push
lea
push
push
lea
push
push
call
cld
addr16
call
add
pop
cmpsb
rolb
add
pop
add
jae
mov
imul
les
add
jo
cli
push
push
pop
add
add
add
jge
add
add
cmpsb
fwait
add
clc
add
add
ret
add
stc
add
mov
in
call
push
lea
push
lea
push
push
push
call
rolb
mov
jo
add
jb
add
add
add
add
fiaddl
leave
add
add
nop
mov
pop
fstpl
iret
popa
insb
cmc
hlt
add
insb
add
stos
add
add
mov
sbbl
cli
add
addl
add
loop
movsl
test
add
insb
add
add
jbe
jbe
add
in
call
call
jmp
push
push
call
mov
add
jle
std
loopne
pop
imul
xchg
mov
mov
add
lcall
lea
les
jmp
xchg
add
out
mov
lcall
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
call
lds
add
add
add
pop
popf
pop
mov
ret
test
mov
ret
test
pop
jge
add
mov
add
in
movsl
arpl
sar
add
add
subl
fcompl
inc
hlt
push
lea
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
test
jl
cli
add
xlat
fwait
mov
stos
loope
shl
shlb
xchg
scas
add
icebp
pushf
scas
decb
test
in
fdivr
lcall
pop
hlt
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
fistpl
pop
push
add
ja
fst
xchg
xchg
aad
add
jne
add
movsb
add
add
mov
addl
add
add
add
add
push
push
push
push
call
push
add
cmpb
pop
adc
mov
mov
add
je
add
bnd
rcl
ljmp
add
mov
imul
addb
mov
mov
add
xchg
loopne
in
lock
lcall
ret
add
add
push
push
call
add
mov
xchg
addl
rolb
cli
cld
lods
flds
add
add
xchg
data16
add
push
mov
arpl
js
in
clc
lcall
ret
pop
inc
add
push
push
push
push
push
call
add
fistps
add
fwait
add
push
add
add
sar
add
add
add
rcll
fildl
add
lods
xchg
xorb
pop
icebp
int3
push
nop
stc
leave
gs
fucomp
add
mov
mov
push
jecxz
sub
pop
mov
xor
push
push
add
dec
push
push
pop
add
sub
shl
pop
rol
sub
add
pop
push
push
call
add
sti
into
jns
shlb
lret
push
add
add
pushf
pop
xchg
add
mov
mov
add
in
lock
lahf
add
sub
pop
pushl
push
push
push
lea
push
call
add
cmpsl
add
mov
add
mov
add
popl
add
push
sti
mov
gs
rolb
add
add
xchg
enter
add
add
out
out
fdivrl
jp
push
jecxz
cli
pop
jb
add
push
sub
pop
call
push
lea
push
lea
push
call
loop
cld
mov
mov
bound
fdivrl
add
xchg
mov
out
lret
out
mov
add
int3
mov
mov
sti
add
sbb
add
add
insb
pop
jns
roll
add
testb
add
sub
pop
mov
push
lea
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
enter
add
add
add
addb
add
add
in
jae
add
lea
scas
add
cli
add
add
fcomps
inc
call
lea
push
push
push
push
call
in
cmc
xlat
mov
add
add
add
scas
jb
xchg
imul
mov
add
popa
mov
lcall
add
addl
in
sub
pop
push
push
push
call
add
xchg
clc
popf
popf
add
jne
stos
mov
push
add
pop
add
add
fistpll
jge
imul
push
fadds
pop
xchg
mov
add
mov
movsl
add
fsubrl
pop
pushl
pushl
push
push
lea
push
push
lea
push
push
push
push
call
add
add
add
add
add
pushf
add
sti
add
mov
jns
xchg
add
push
add
call
call
push
push
push
lea
push
push
push
lea
push
push
push
call
add
pop
lret
aam
nop
sahf
add
testl
add
fstp
imul
sbbb
sahf
test
mov
in
fdivr
lcall
jne
push
push
call
add
add
fsubrs
xchg
cld
add
fldenv
iret
aam
mov
add
add
in
add
repnz
pop
pushl
push
push
lea
push
push
push
push
push
call
sar
movsb
ror
jle
roll
adcl
ljmp
add
cmpsb
add
mov
add
arpl
add
mov
add
lods
add
add
add
shrb
faddl
les
loope
cli
mov
idivb
mov
sub
pop
call
push
push
not
push
xor
add
sub
add
sub
shr
pop
shl
pop
push
push
push
call
add
pop
jo
add
add
add
add
add
iret
add
movsl
xchg
js
xlat
imul
add
test
in
hlt
lcall
jne
push
push
push
push
push
call
add
add
add
outsl
add
bnd
mov
add
scas
add
add
movb
add
add
out
add
add
int3
mov
mov
add
mov
xchg
movsl
add
call
push
push
lea
push
push
push
push
push
push
call
add
add
jmp
out
add
fsubrs
add
add
xchg
int3
cltd
pop
pop
out
loop
add
aad
mov
fidivs
xchg
add
mov
lcall
test
jne
add
roll
and
sub
pop
push
push
push
sub
shl
push
and
add
rol
inc
dec
sub
sub
shl
add
add
pop
pop
push
push
push
lea
push
push
push
call
mov
mov
testb
mov
push
add
cmc
mov
jp
mov
test
jo
sti
add
add
mov
mov
xchg
scas
mov
out
add
in
push
add
add
sub
pop
push
push
push
lea
push
push
push
push
push
push
push
call
add
xchg
add
add
incb
aam
pushf
mov
mov
add
lods
add
add
add
add
les
add
add
add
add
push
add
add
jmp
xchg
roll
in
lret
stos
xchg
movsb
shl
add
lcall
add
jbe
push
push
push
lea
push
push
call
add
mov
xlat
push
jnp
mov
push
loop
add
enter
arpl
in
jmp
out
mov
cwtl
mov
arpl
lcall
rclb
cltd
push
push
lea
push
lea
push
push
push
push
push
call
push
pop
push
nop
out
icebp
xlat
push
add
add
mov
jge
add
outsl
add
hlt
add
sti
push
call
fisttpll
add
shll
xchg
jo
iret
add
addb
add
add
add
mov
add
add
mov
pop
fidivs
mov
sub
pop
mov
push
push
lea
push
push
push
call
mov
mov
push
jle
fnstcw
add
jmp
add
enter
jl
add
mov
in
rcr
push
sbb
jb
pop
ficompl
movsb
enter
movsl
sub
pop
push
push
push
lea
push
push
push
call
std
add
in
fldcw
mov
add
push
les
loope
testl
xchg
in
add
xchg
les
jnp
in
in
pop
mov
push
push
lea
push
push
call
add
fadds
sub
loopne
outsl
mov
mov
icebp
in
add
add
fildll
add
add
add
arpl
add
add
call
imulb
in
lock
add
add
push
push
lea
push
push
lea
push
lea
push
lea
push
call
jne
add
add
add
mov
add
add
mov
sti
xchg
js
nop
add
mov
add
xchg
mov
pop
test
add
cmpsl
pushf
out
xchg
add
sub
pop
add
push
push
push
push
push
lea
push
push
push
call
gs
testl
mov
int3
push
out
add
cld
mov
add
jmp
lret
jno
add
add
push
mov
fiaddl
add
add
add
add
lcall
xor
adc
loopne
lahf
xchg
push
call
add
leave
in
add
add
add
imul
add
xchg
xchg
enter
pop
iret
mov
add
add
movsl
xchg
add
mov
xchg
jmp
add
add
sub
pop
add
push
lea
push
push
push
push
push
push
push
call
add
popa
add
cli
addb
scas
rcll
imul
add
iret
add
pop
imul
add
add
scas
add
add
sti
sub
pop
push
push
push
push
lea
push
push
lea
push
push
push
call
push
sti
add
fnstsw
lock
add
enter
test
add
fdiv
add
jo
add
popa
add
jl
mov
mov
push
lcall
inc
or
jno
adc
xchg
xchg
jne
fwait
push
push
push
push
push
push
push
push
lea
push
call
fwait
roll
add
fisubrl
scas
jmp
testl
nop
clc
add
jp
add
nop
push
add
add
mov
cmpsb
stc
mov
add
add
je
jb
sub
pop
xor
push
push
lea
push
push
push
push
push
call
test
add
jns
mov
cmc
add
movsl
test
jns
test
test
into
add
fstps
aad
mov
add
jo
add
xchg
mov
lret
jbe
mov
add
in
lcall
les
push
push
call
mov
popf
aam
call
std
add
mov
add
cmp
add
roll
add
call
hlt
lcall
lock
push
push
push
push
push
push
lea
push
push
call
out
add
jns
mov
in
cmc
pop
add
add
jle
add
lea
loope
add
movl
xlat
add
dec
add
xor
adc
sbb
imul
add
add
add
add
xchg
movsl
add
add
icebp
repnz
add
mov
iret
sub
pop
xor
push
push
push
push
push
lea
push
call
mov
hlt
test
add
mov
roll
add
roll
add
add
mov
jl
add
jne
push
xchg
jb
add
mov
lcall
add
fsubs
leave
sahf
mov
add
lahf
mov
add
push
call
add
les
add
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
push
add
sar
mov
pushf
push
out
ficomps
add
addl
add
add
push
leave
popl
xchg
addr16
add
push
add
fadds
mov
add
lcall
push
push
push
push
lea
push
push
lea
push
push
push
push
call
out
add
xchg
add
cmpsl
add
ret
lea
add
add
add
jnp
mov
lret
lods
ror
scas
add
mov
add
in
sub
pop
mov
push
push
push
push
push
call
insb
add
add
jne
rclb
lods
xlat
jmp
shr
movsl
add
add
mov
les
add
add
push
in
add
add
add
add
add
les
add
scas
lret
add
add
add
and
in
lock
lcall
add
push
push
push
push
push
push
call
add
jp
add
jbe
addr16
xchg
xchg
loop
add
fs
add
add
xchg
mov
add
add
std
xchg
pop
add
sub
pop
add
push
lea
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
clc
add
pop
movsb
add
shlb
add
add
sahf
xchg
js
faddp
jp
jmp
mov
stos
add
add
mov
push
sub
pop
sub
push
lea
push
call
xchg
add
add
lcall
data16
mov
add
add
add
clc
add
add
clc
lcall
push
push
push
call
pushf
mov
add
aam
test
leave
loope
lods
xchg
out
add
stos
out
add
roll
clc
subl
xchg
add
sti
movsl
xchg
add
add
loop
mov
pop
add
mov
jp
fsts
add
add
add
add
add
add
rolb
movsb
pop
push
push
lea
push
lea
push
push
push
push
push
call
add
mov
add
addb
bound
jno
aad
add
negb
insb
mov
jecxz
add
jae
in
loopne
lcall
pop
hlt
push
push
push
push
lea
push
push
push
push
call
mov
stos
add
xchg
jnp
les
add
testb
push
test
add
add
pop
add
pop
xchg
lret
in
add
pushf
add
add
scas
add
add
add
stos
mov
into
fwait
add
lahf
mov
bound
lcall
pop
in
add
push
push
push
push
push
lea
push
push
push
call
out
xchg
add
bnd
jbe
imul
movsb
ja
xchg
clc
add
add
add
imulb
xchg
add
in
loopne
lcall
ret
pop
inc
add
push
push
push
lea
push
lea
push
lea
push
push
push
call
shrl
add
mov
mov
add
cmc
fs
push
jo
popa
add
hlt
pop
add
std
fs
mov
push
push
push
push
push
push
push
push
lea
push
push
push
call
add
lea
add
in
hlt
mov
add
stc
add
add
add
addr16
jle
loope
in
imul
add
enter
imul
repnz
add
add
mov
add
addr16
pop
xor
push
push
push
push
push
push
push
lea
push
lea
push
call
mov
lods
add
add
mov
rolb
test
les
scas
add
mov
insb
enter
out
sti
xchg
add
lea
int3
movsl
cli
add
add
hlt
aad
repnz
jns
add
outsl
les
cld
add
add
push
insb
sub
pop
add
push
lea
push
push
lea
push
push
push
call
add
push
fildl
push
add
mov
stos
add
pop
add
add
in
add
mov
test
add
call
ljmp
and
repnz
adc
push
enter
nop
lea
push
push
push
lea
push
call
add
testb
jecxz
lcall
add
stos
lods
fbstp
in
add
push
add
jbe
scas
mov
data16
add
sti
xchg
add
js
add
lcall
dec
sub
adc
dec
adc
push
lea
push
lea
push
lea
push
push
call
movsb
add
jno
out
lock
cmpsl
add
mov
add
jae
push
lods
add
stc
mov
add
add
add
add
in
flds
add
testl
lcall
test
add
enter
imul
mov
jae
mov
add
add
sub
pop
add
add
push
push
call
add
loope
add
in
jno
test
mov
push
les
jp
add
pop
jmp
mov
add
fdivrl
xchg
mov
pushf
in
shl
sub
pop
mov
push
push
push
and
add
sub
add
sub
lea
xor
shl
pop
rol
sub
pop
push
lea
push
push
call
stos
out
pop
mov
nop
add
stos
add
xchg
in
fcomi
add
pusha
add
add
stos
pop
jo
mov
add
add
loope
outsl
add
test
add
add
add
popf
sub
pop
pushl
push
push
push
lea
push
push
push
push
lea
push
push
push
call
std
fnsave
xchg
in
bound
add
loopne
notb
popl
add
jle
add
add
cmc
mov
add
add
add
or
jmp
xchg
add
andb
ljmp
call
lcall
inc
push
add
push
sub
xor
pop
push
push
push
inc
sub
push
or
not
add
ror
sub
lea
pop
not
add
sub
pop
push
ror
xor
pop
push
push
push
call
push
add
add
add
add
push
stos
mov
xchg
add
add
add
add
add
jmp
in
ret
mov
add
add
movsl
shlb
mov
add
add
add
add
add
jbe
icebp
add
add
int
xchg
sub
pop
push
call
push
rol
lea
lea
pop
mov
push
inc
not
pop
push
push
push
push
push
push
push
lea
push
call
popa
mov
add
mov
mov
add
add
ljmp
ja
add
jnp
mov
cli
xchg
lock
add
lock
pop
add
jnp
in
sub
pop
mov
add
push
push
push
push
push
call
add
add
mov
mov
add
ret
jno
push
jae
lods
add
fildl
cld
stos
mov
add
test
add
mov
pushf
push
add
add
add
add
stc
aad
roll
lea
sub
pop
add
add
push
push
call
add
mov
jecxz
mov
add
popf
ret
add
jge
bound
add
mov
mov
add
add
add
mov
add
add
add
test
test
sub
pop
mov
xor
push
lea
push
push
push
call
out
loop
add
in
xchg
orl
jmp
fstps
in
add
jbe
addr16
fdiv
jae
add
gs
leave
aad
mov
push
add
add
js
xchg
push
add
cmpsb
push
fwait
add
popf
imul
sbbb
lcall
jne
push
push
dec
shl
dec
inc
pop
mov
push
push
lea
push
lea
push
push
push
push
push
push
push
push
call
out
add
mov
push
add
add
in
mov
out
pop
lea
lock
std
add
in
lock
idivl
iret
cwtl
add
mov
add
addb
roll
rolb
test
lds
in
insb
ja
jae
mov
add
pop
xor
push
lea
push
push
push
push
push
lea
push
lea
push
call
leave
xlat
jecxz
out
jns
sbb
mov
add
mull
add
add
jbe
add
add
enter
rorl
in
loopne
add
push
push
push
push
lea
push
push
push
call
add
cmpsl
test
add
in
outsl
add
add
pop
fildl
je
outsl
add
add
xchg
mov
mov
jno
push
jbe
add
fldl
push
hlt
cmc
add
scas
cwtl
pop
sub
pop
add
push
pop
pop
push
dec
ror
shr
pop
mov
xor
push
push
push
call
add
mov
iret
sahf
xchg
xchg
add
add
scas
lods
test
add
cltd
add
in
outsl
nop
sub
pop
rep
push
lea
push
lea
push
lea
push
push
push
push
push
push
push
call
add
jle
mov
jns
add
clc
add
add
add
mov
in
xchg
ret
mov
jnp
push
cmpsl
loope
jp
add
rclb
mov
add
pop
add
add
bound
pop
jo
add
mov
fcomps
dec
and
icebp
xor
adc
jo
push
push
lea
push
call
pop
addb
leave
push
loopw
bound
add
add
xchg
xchg
add
add
mov
sahf
pop
not
outsl
add
sahf
loope
add
add
add
loopne
lea
into
loop
in
add
ficoms
jmp
cmpb
add
fistl
sub
pop
or
je
push
push
push
push
push
push
push
push
push
call
pop
add
sti
mov
add
ja
mov
popa
add
faddl
sarl
push
js
in
add
add
outsl
repnz
xchg
add
insb
add
stc
mov
add
add
mov
fiaddl
mov
jbe
add
fdivr
lcall
xor
adc
cld
rol
pop
mov
xor
push
lea
pop
add
push
push
push
push
push
push
lea
push
push
push
push
call
mov
mov
add
add
addr16
add
add
add
add
add
pusha
add
xorl
popf
add
add
mov
loope
add
jge
add
mov
mov
add
sarb
sub
pop
add
push
push
call
movb
add
jmp
add
in
add
cld
in
mov
outsl
mov
ljmp
int3
mov
jo
add
lret
roll
xchg
jl
je
xchg
roll
add
pushf
jb
add
add
add
add
jo
sub
pop
push
mov
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
mov
add
addr16
insb
fdivs
mull
add
sbbl
mov
add
mov
popl
clc
add
in
add
add
faddl
add
pop
xor
in
fcomps
add
push
push
call
add
lds
loop
push
add
add
add
push
sti
popa
addl
sahf
xchg
mov
add
push
pop
add
push
xor
pop
pop
push
lea
push
push
push
push
call
in
mov
hlt
out
add
xchg
imul
roll
mov
xchg
add
add
lret
add
lcall
movsb
push
lea
push
push
push
call
lret
shlb
out
rcrb
jle
mov
add
add
jl
mov
add
add
aad
sub
pop
mov
xor
push
push
push
lea
push
push
push
lea
push
push
call
in
mov
add
pop
mov
add
lret
pop
add
stos
sti
push
add
add
add
ja
add
add
bound
add
scas
add
aad
add
pop
mov
mov
add
lea
xchg
add
cli
sub
pop
or
je
push
push
push
push
push
push
call
mov
cwtl
add
add
lret
add
add
aad
add
fdivrs
in
pop
fiadds
add
mov
loopne
add
push
add
add
add
push
add
mov
add
jge
in
call
mov
push
push
push
call
xchg
mov
add
aad
push
popf
add
into
test
je
add
mov
addr16
add
cli
add
sub
ror
pop
add
push
dec
xor
pop
rep
push
dec
sub
not
pop
pop
push
push
add
ror
push
or
inc
add
ror
sub
lea
lea
xor
inc
pop
rol
rol
sub
pop
push
rol
pop
pop
mov
push
push
push
push
push
push
push
push
push
lea
push
call
cltd
cmp
icebp
in
fildl
ret
fcomps
add
fisubs
add
add
add
jmp
add
mov
sub
pop
mov
push
lea
push
push
call
icebp
ficoms
test
mov
add
add
fxch
and
cmpsl
in
add
add
add
add
xorl
add
je
les
pop
xchg
aam
lds
ret
mov
sub
add
add
add
mov
jp
in
hlt
lcall
inc
and
push
push
push
push
push
call
mov
jge
mov
push
xor
je
add
add
add
outsl
flds
add
add
add
lods
lock
testb
add
add
lcall
loopne
push
add
pop
mov
push
dec
pop
add
push
sub
ror
pop
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
out
arpl
icebp
outsl
add
add
add
mov
stos
jmp
test
add
xchg
cld
test
sub
pop
push
push
push
push
push
push
push
push
push
push
push
call
repnz
add
add
fcmovne
mov
pop
add
xchg
mov
add
add
add
add
lcall
push
inc
pop
mov
push
rol
pop
pop
pop
push
push
lea
push
push
push
push
push
lea
push
call
add
lods
fldt
add
cwtl
jnp
add
mov
mov
fadds
add
add
add
fisttpl
nop
mov
jbe
add
testb
fiaddl
pop
movb
mov
ret
cmpsb
lods
int
mov
pop
pop
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
push
lea
std
add
add
ja
add
add
jge
pop
jle
mov
mov
add
fs
cmpsb
mov
mov
add
mov
jo
mov
xchg
call
add
lcall
push
xor
shl
add
pop
leave
push
shl
add
xor
shl
pop
ret
push
lea
push
call
push
fimuls
add
int3
mov
add
add
ja
add
shrb
jge
add
jbe
lock
pop
xchg
add
jmp
movl
push
call
js
mov
jo
lea
sti
add
add
add
add
int3
add
hlt
int3
decb
cld
add
add
hlt
jmp
pop
testb
roll
mov
add
mov
add
jp
xlat
pushf
sub
pop
mov
push
push
lea
push
call
add
add
add
add
outsl
fdivl
popf
add
in
mov
add
jecxz
test
mov
int
divl
add
sub
pop
add
push
push
push
lea
push
call
mov
add
in
popf
addb
test
filds
add
hlt
add
xchg
popf
flds
add
lods
lock
add
mov
lret
ja
add
jbe
mov
testb
fiaddl
push
add
add
add
imul
pop
push
push
push
lea
push
push
lea
push
push
call
add
jmp
jno
push
faddl
add
popa
js
loop
data16
insb
cmc
je
add
shrb
xchg
add
add
add
add
mov
xchg
add
out
rcr
outsl
nop
mov
fadds
add
push
mov
lret
jns
shl
jl
add
add
fldl
push
push
push
push
shl
add
xor
pop
push
movl
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
test
pop
add
popa
int3
mov
add
popf
clc
add
mov
jo
add
jae
out
fdivs
xchg
fldl
adc
add
add
add
int3
add
jbe
mov
add
add
push
add
add
fcomps
add
add
add
imul
push
push
push
push
lea
push
push
push
push
push
call
nop
add
bound
add
add
out
add
arpl
add
add
lret
test
cld
add
add
icebp
mov
xchg
rorl
jnp
add
add
add
mul
cmpsl
add
hlt
lock
mov
add
lods
flds
cltd
xchg
out
lea
add
popa
in
insb
stos
pop
sub
pop
test
je
push
lea
push
push
push
lea
push
call
add
add
add
push
add
addb
add
data16
jecxz
mov
test
push
pop
lret
add
in
add
mov
mov
std
pop
cltd
imull
add
fiaddl
xchg
rolb
add
mov
sub
pop
mov
pop
push
push
lea
push
push
push
call
mov
add
mov
add
xchg
add
int
add
add
add
mov
test
add
movb
nop
lahf
add
test
pop
les
jle
push
call
aad
lret
js
jp
shrb
sub
pop
pop
push
push
push
lea
push
push
push
push
push
call
ret
add
add
xchg
subl
mov
arpl
add
push
cmpsl
add
add
mov
add
jmp
cltd
int3
repnz
pop
pop
push
push
push
push
push
push
push
push
push
call
mov
movsb
mov
mov
mov
aad
test
add
ja
enter
add
sti
add
add
add
add
loope
add
add
mov
xchg
add
mov
xchg
cwtl
xchg
xchg
add
lds
in
jl
jo
add
fdivr
lcall
push
add
pop
leave
push
shl
pop
ret
push
push
inc
add
shl
pop
mov
push
push
lea
push
lea
push
lea
push
push
call
add
mov
add
movb
ret
imul
cltd
call
les
xchg
loopne
xchg
add
scas
add
mov
add
ja
rcrb
mov
sub
pop
add
push
push
lea
push
push
push
push
push
push
push
call
movsb
sti
add
add
add
out
add
stos
scas
mov
lods
push
lods
mov
mov
add
lret
add
mov
add
in
mov
add
add
arpl
hlt
lret
cmpsl
add
add
mov
rclb
jp
pusha
add
mov
fcompl
push
add
inc
pop
push
push
push
push
call
pushf
movsb
mov
xchg
in
mov
push
add
add
add
mov
mov
cmpl
scas
add
lcall
push
not
add
sub
pop
push
testl
push
not
pop
addl
push
push
sub
pop
call
push
shr
inc
shr
pop
mov
push
push
push
push
lea
push
push
push
call
add
add
cltd
add
fucomp
add
push
mov
mov
add
popf
bound
add
xchg
add
loopne
call
pop
xlat
add
jne
push
push
lea
push
push
lea
push
push
push
push
call
jnp
jge
xchg
lea
lock
add
mov
mov
xchg
push
loopne
push
push
lea
push
push
push
push
push
push
push
call
lock
mov
jmp
out
add
mov
add
cld
loopne
add
pop
test
jge
mov
add
pusha
add
arpl
iret
fisttpl
stc
xchg
add
jge
cltd
enter
ret
add
in
in
xlat
shlb
push
add
mov
add
add
add
or
push
lea
push
push
push
lea
push
push
lea
push
call
add
add
icebp
add
xchg
pop
ljmp
insb
fbld
mov
push
add
add
les
in
add
xchg
push
out
push
push
movb
arpl
sub
pop
cmpl
jne
push
shl
pop
pop
push
push
lea
push
call
mov
jns
rcrl
add
mov
loope
cwtl
sti
push
push
add
test
xchg
xlat
rolb
loope
push
scas
xchg
mov
add
jbe
outsl
add
xchg
mov
push
add
les
pushf
popa
call
negb
cmc
add
sub
pop
pop
push
push
lea
push
push
push
push
call
loopne
mov
xlat
add
pop
ljmp
mov
cmpsl
add
divl
fcmovnbe
push
add
add
test
loopne
pop
add
add
fxch
add
add
testb
roll
pop
faddl
jo
cmpsb
add
add
rorb
add
repnz
pop
pop
push
sub
lea
add
pop
pop
push
shl
inc
shr
dec
pop
leave
push
push
call
movsl
add
add
insb
hlt
add
push
jno
loop
pop
add
arpl
mov
add
sbbl
jno
add
push
adc
add
cmc
add
lret
stc
stc
add
sub
pop
ret
push
dec
ror
sub
pop
push
mov
push
push
call
add
jo
add
add
add
mov
add
cmc
ljmp
add
clc
lock
xchg
add
add
jle
add
into
divl
push
nop
mov
scas
add
mov
lds
jnp
mov
add
mov
xchg
add
rolb
sub
pop
add
push
push
call
fdivrs
add
add
jo
andb
fildl
add
aam
add
pop
add
pop
add
add
nop
add
pushf
add
fildl
arpl
push
mov
imul
add
imul
add
sahf
add
add
pop
rolb
imul
clc
pop
push
push
xor
pop
push
push
push
shr
pop
push
movl
push
push
push
push
push
lea
push
call
mov
xchg
clc
cld
push
jmp
pop
rolb
add
pushf
ljmp
shrl
push
jge
stos
xchg
add
movsl
roll
aad
add
jno
out
pop
roll
mov
lcall
add
fdiv
call
enter
roll
mov
rcrl
adc
sarl
xor
pop
call
subl
push
push
push
push
push
call
add
jnp
pop
add
add
add
pop
mov
add
add
out
mov
fucompp
scas
jo
mov
xchg
xlat
add
icebp
mov
aad
sub
pop
cmpl
jne
push
push
push
push
push
push
lea
push
call
data16
add
add
jns
add
in
repnz
jl
add
gs
imul
pop
push
add
pop
pop
push
push
call
movsb
mov
in
mov
mov
jnp
jae
add
mov
jne
add
mov
mov
add
out
test
mov
sub
pop
pop
pop
push
push
push
push
push
call
out
mov
jae
xchg
in
mov
push
add
test
add
mov
add
xchg
add
add
add
aam
add
mov
int
mov
js
add
clc
add
fisubrl
add
iret
mov
add
mov
sub
pop
leave
push
ror
pop
ret
push
push
push
lea
push
push
lea
push
call
add
icebp
mov
mov
cld
add
popl
add
push
arpl
mov
imul
sub
add
ljmp
add
add
ljmp
sub
pop
push
push
ror
pop
mov
push
ror
pop
add
push
push
sub
pop
push
push
push
push
call
outsl
mov
jne
int
add
add
fs
xchg
sarb
roll
lea
roll
push
add
mov
mov
leave
add
add
mov
add
add
sub
pop
push
push
push
push
push
push
push
lea
push
push
call
add
pop
add
add
enter
add
jne
add
add
add
in
add
add
cmpb
jo
lods
add
push
mov
pop
lcall
jnp
mov
lods
repnz
pop
mov
push
lea
push
push
push
lea
push
lea
push
lea
push
call
push
movsl
add
add
negb
lret
add
ja
mov
lcall
hlt
pop
pop
push
out
bound
outsl
imul
shll
push
add
lcall
inc
cmp
call
fistps
add
call
pop
sub
pop
dec
push
call
pop
add
add
scas
add
add
je
add
clc
filds
int3
pusha
out
call
nop
std
jecxz
mov
mov
bound
add
out
add
jecxz
add
add
out
xchg
cmc
mov
sub
pop
add
push
xor
sub
xor
sub
pop
mov
push
push
push
push
call
xchg
xchg
mov
into
add
add
add
mov
popf
pop
cmpsl
add
jmp
add
arpl
jmp
add
push
add
into
add
iret
add
sub
pop
mov
push
push
push
lea
push
call
mov
add
mov
lods
fbstp
add
add
mov
xchg
aad
popa
add
add
iret
out
enter
clc
add
pop
xchg
mov
add
push
imull
pop
add
push
push
push
push
push
push
push
call
sar
filds
jns
std
test
add
aam
stc
popa
push
add
add
stos
add
mov
fwait
lds
popl
mov
scas
pop
in
sti
jnp
fdivp
jo
sub
pop
add
mov
push
push
push
push
push
call
add
add
lcall
add
ljmp
ret
jle
add
pop
addb
add
pop
icebp
fcomi
rolb
mov
push
add
loope
jnp
roll
in
add
jo
loopne
mov
sub
pop
mov
push
lea
push
call
mov
add
add
rcr
popf
add
jle
call
jecxz
addr16
faddl
add
mov
add
push
add
add
mov
icebp
jmp
xorl
ljmp
add
add
in
stc
movsb
mov
push
add
in
clc
pop
cmp
jne
cmp
jne
push
shl
pop
mov
movl
push
xor
pop
jmp
push
push
push
push
push
push
push
push
lea
push
lea
push
call
movsb
xlat
mov
out
test
mov
add
jnp
jae
jnp
add
add
add
add
stos
add
add
xchg
test
jp
filds
popl
add
inc
cld
mov
push
lea
push
push
push
push
push
lea
push
call
add
mov
add
add
call
xchg
add
add
add
ja
addb
cmpsl
stos
out
stos
std
mov
push
add
jnp
mov
mov
xchg
pusha
add
ljmp
and
add
push
shl
inc
pop
mov
movl
push
pop
jmp
push
rol
sub
lea
pop
mov
mov
push
xor
pop
cmp
jne
push
push
lea
push
lea
push
push
call
mov
aam
add
mov
add
add
add
push
xchg
add
add
mov
aad
out
pop
add
test
sti
cltd
add
mov
out
push
clc
add
lds
add
cli
push
bnd
add
addr16
aad
add
xchg
movsl
fadds
pop
fwait
mov
mov
movl
push
push
call
add
cld
xlat
int3
mov
cmc
add
add
jmp
add
add
add
jae
jbe
add
lret
mov
out
mov
add
add
stos
add
cld
fldcw
pop
cmpsb
out
in
fldcw
in
clc
pop
jmp
push
push
lea
push
push
lea
push
push
push
push
call
out
lcall
push
add
imul
mov
cmpsb
movsb
pop
mov
add
add
in
scas
add
xchg
imul
add
add
out
add
add
adc
add
loopne
lcall
inc
cld
push
push
push
lea
push
push
call
jbe
nop
stos
jo
add
add
add
call
lods
pop
mov
data16
pusha
hlt
add
xchg
add
movb
sub
pop
cmpw
jne
mov
push
push
push
push
call
add
in
add
add
add
std
mov
add
add
loope
pop
mov
add
sahf
bound
lcall
mov
mov
mov
rcl
add
lods
add
add
mov
stc
sahf
add
add
xchg
jae
mov
data16
add
add
enter
lock
lcall
add
push
push
call
lea
lods
add
add
into
in
mov
in
in
push
scas
sti
int3
xchg
add
in
pop
pop
xchg
add
mov
add
scas
faddl
pusha
shlb
cli
add
add
add
sub
pop
jmp
push
push
push
push
lea
push
push
push
call
int
add
cwtl
add
add
add
add
add
add
cmpsb
test
mov
xchg
add
jmp
hlt
push
add
repnz
mov
jecxz
jmp
sarl
pop
ljmp
out
mov
out
enter
add
in
pusha
iret
lock
jnp
add
add
bound
lcall
pushl
push
push
push
push
lea
push
push
push
call
scas
mov
add
add
rolb
pop
out
mov
add
stc
mov
cli
add
add
pop
sub
pop
pop
mov
push
add
not
sub
pop
mov
push
shr
lea
not
pop
mov
push
push
inc
inc
push
xor
add
lea
add
add
sub
xor
add
shr
pop
shl
pop
push
shr
pop
push
push
pop
call
push
sub
pop
cmpl
je
push
push
not
shr
push
xor
add
rol
shr
inc
sub
xor
inc
shr
pop
ror
not
pop
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
xchg
into
add
add
add
popa
test
loopne
in
fdivs
shll
add
lds
fildll
push
roll
leave
mov
out
jnp
jecxz
je
add
nop
leave
fildl
arpl
mov
add
add
pop
add
cltd
mov
in
fcompl
push
push
lea
push
push
lea
push
push
call
cmpsb
push
mov
cmc
add
mov
nop
add
add
enter
call
mov
cwtl
addr16
add
imul
add
mov
add
add
mov
xchg
addl
add
add
enter
mov
push
mov
data16
in
call
call
push
pop
cmpl
je
push
push
shr
ror
push
xor
add
add
rol
shr
sub
add
dec
pop
ror
rol
pop
push
sub
pop
push
push
lea
push
push
push
call
jmp
jo
sti
add
add
mov
mov
add
add
add
bound
bound
mov
movb
add
mov
xchg
test
andl
mov
lcall
mov
push
lea
push
push
lea
push
push
push
call
mov
movl
mov
add
je
xchg
into
lds
add
fnstsw
mov
mov
add
pop
add
add
xlat
mov
aam
movsl
movsb
fnstsw
sar
add
shl
pop
add
lcall
cmp
add
int3
je
push
push
rol
push
or
not
add
dec
sub
sub
pop
xor
pop
push
lea
push
call
std
add
add
fiaddl
loope
stos
add
data16
imul
outsl
add
add
xchg
add
rclb
push
enter
sbbl
pop
mov
popa
into
add
sub
pop
push
push
push
push
push
lea
push
push
lea
push
call
pop
pusha
push
add
ret
mov
movsb
add
push
add
mov
in
add
jl
cltd
jge
push
repnz
imul
add
out
add
lcall
jge
add
push
lea
pop
cmpl
je
push
push
inc
shl
inc
push
or
inc
add
lea
sub
sub
add
inc
dec
add
pop
pop
push
sub
shr
pop
push
call
push
push
call
add
jl
add
xchg
arpl
pop
movsb
add
cwtl
cmpsl
add
cmpsb
add
add
add
add
ja
push
push
stos
jae
add
add
push
lahf
add
xchg
add
sub
pop
cmpl
je
push
push
shl
not
push
xor
add
xor
shr
xor
shr
sub
inc
pop
rol
xor
ror
inc
pop
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
scas
mov
add
xchg
push
movsb
add
mov
hlt
mov
movl
rcrb
in
in
addb
bound
out
add
push
add
out
add
in
add
out
loope
mov
pop
push
call
push
inc
add
pop
cmpl
je
push
push
add
push
push
pop
add
ror
add
sub
sub
rol
pop
lea
sub
inc
pop
push
add
ror
pop
push
push
push
lea
push
call
fmuls
jo
add
add
add
add
push
add
add
add
jl
add
xchg
add
push
test
ja
add
mov
add
int3
pop
add
mov
add
stc
add
shl
add
mov
add
in
hlt
pop
call
push
lea
push
push
push
push
push
push
lea
push
push
call
jp
add
out
mov
jp
popl
xchg
add
andl
ret
lahf
add
add
jmp
roll
add
cmpsl
add
stc
push
andb
xchg
add
add
cmc
out
add
stos
add
cmp
or
int3
je
push
push
ror
push
or
inc
add
not
sub
shr
pop
sub
pop
push
push
push
push
push
call
jo
insb
out
icebp
jecxz
add
clc
add
add
add
add
ret
cli
out
add
add
js
xlat
int3
add
in
rolb
add
leave
fs
add
xchg
insb
add
jl
lods
lcall
pop
add
jne
fisubrs
push
cmc
add
lcall
push
push
push
push
push
call
add
fiadds
lret
add
gs
je
shrl
add
roll
mov
roll
loop
mov
ljmp
pop
lcall
add
add
in
in
pop
call
cmpl
je
push
push
dec
rol
push
and
add
sub
add
sub
not
sub
add
pop
dec
pop
push
add
inc
pop
push
push
lea
push
push
push
push
push
push
call
add
jae
out
imul
add
roll
out
add
add
cmpsb
lcall
in
add
add
push
lods
mov
add
fcoms
mov
sti
fldl
test
add
stos
add
aad
sub
pop
call
push
lea
push
push
call
lods
mov
int3
mov
push
data16
add
neg
add
jp
add
test
std
out
leave
add
add
ljmp
add
add
add
add
sub
pop
cmpl
je
push
push
inc
add
not
sub
push
sub
add
lea
sub
sub
ror
lea
pop
xor
pop
push
push
lea
push
push
lea
push
call
jge
add
cld
add
add
add
mov
add
addb
mov
add
jl
add
add
pop
addl
add
add
add
xchg
add
sub
pop
push
push
ror
not
pop
call
cmpl
je
push
push
sub
sub
sub
lea
push
xor
add
dec
sub
pop
shl
lea
pop
push
push
push
call
mov
add
mov
add
xchg
add
fwait
scas
add
mov
mov
out
add
stos
stos
stos
add
add
js
fs
add
lods
mov
mov
clc
sub
pop
push
push
sub
dec
pop
call
push
push
lea
push
lea
push
lea
push
push
call
hlt
push
lods
push
add
lods
add
out
xchg
add
add
popf
add
pop
add
pop
pop
jne
add
add
add
out
ficoms
xlat
jno
fcmovne
xchg
clc
mov
lahf
ret
add
nop
cli
jo
pop
jb
in
jl
mov
push
add
add
add
js
xor
ret
test
add
add
push
out
ja
shr
add
inc
sub
push
or
not
add
inc
sub
add
pop
dec
pop
push
add
pop
push
call
push
push
push
push
push
push
lea
push
call
add
add
cmpsl
add
add
push
push
xchg
xchg
add
scas
add
add
mov
popa
xchg
add
add
scas
cwtl
add
in
in
lcall
js
jmp
les
je
push
push
add
inc
xor
push
sub
add
dec
ror
sub
shr
inc
lea
shr
pop
rol
shr
sub
pop
push
pop
push
push
push
push
lea
push
call
add
mov
add
add
mov
fcmovnbe
mov
out
add
add
imul
add
add
mov
add
add
add
fdivrs
push
add
ret
add
xlat
add
mov
pop
call
cmpl
jne
push
xor
ror
pop
mov
push
lea
dec
pop
movl
push
shl
inc
pop
jmp
push
not
shr
not
pop
xor
pop
push
rol
pop
pop
push
rol
inc
sub
pop
pop
push
ror
pop
pop
leave
push
push
call
add
jecxz
test
add
bound
stos
fs
jle
pop
shrb
add
mov
std
loope
addl
lods
add
push
pop
int
add
add
out
add
add
lea
mov
mov
jnp
in
clc
pop
ret
push
add
sub
sub
pop
push
mov
push
sub
rol
pop
add
push
shl
shr
pop
cmpl
jne
push
push
sub
shr
shl
push
push
pop
add
ror
sub
xor
rol
shl
ror
pop
sub
add
pop
push
rol
pop
pushl
push
lea
dec
dec
pop
call
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
push
call
stos
loop
test
xchg
mov
mov
add
addl
lahf
movsb
subl
cli
push
push
xchg
add
add
add
popl
leave
jmp
xchg
mov
repnz
add
loopne
add
in
mov
add
add
add
mov
add
fcomps
rclb
push
push
push
push
lea
push
push
push
push
call
pusha
int
loopne
jo
nop
add
pop
lea
in
stos
xchg
add
mov
add
xchg
add
add
add
jbe
cwtl
add
scas
add
mov
add
mov
imul
add
push
iret
iret
jecxz
add
pop
fisttps
jmp
push
push
push
call
hlt
fs
mov
add
jle
rcrl
stos
mov
test
add
int
add
add
in
hlt
lcall
jge
add
test
add
cmpl
jne
push
lea
push
push
push
push
lea
push
push
push
lea
push
push
call
lods
bound
call
repnz
testl
jo
add
stos
hlt
add
xchg
pop
out
lds
jb
imul
in
fcomps
inc
or
jl
cmp
testl
add
add
add
add
add
stc
mov
add
xchg
je
add
pop
jmp
add
add
mov
push
aam
push
pop
add
push
add
add
push
add
in
mov
lahf
fs
mov
mov
in
hlt
pop
call
ret
push
push
push
lea
push
push
push
push
push
push
call
mov
add
add
movl
cmpsb
xchg
add
jns
add
add
ret
add
jo
add
lds
in
fcompl
lret
add
insl
sub
pop
cmpl
jne
push
push
shl
add
push
xor
add
add
sub
inc
shr
inc
pop
add
dec
xor
pop
push
inc
pop
pushl
push
push
lea
push
push
push
push
push
call
andl
add
xchg
into
mov
jge
add
pop
add
pushf
iret
leave
add
pop
add
mov
xchg
push
fldl
les
faddp
push
mov
in
in
call
push
xor
pop
push
call
push
push
push
push
push
call
mov
test
push
xchg
sarb
add
add
push
addb
mov
lods
int
add
jbe
mov
mov
push
rcrl
add
cwtl
repnz
pop
add
rolb
jle
ja
jp
pop
jmp
lcall
lret
pop
add
push
add
pop
cmpl
jne
mov
push
push
push
lea
push
push
push
lea
push
call
fadds
imul
mov
cld
shll
add
add
add
add
jno
add
rcrl
test
xlat
ficompl
test
fisttpll
pop
pop
add
add
test
notl
add
sub
pop
mov
push
shr
dec
pop
push
push
push
not
push
or
inc
add
shl
add
sub
ror
pop
add
pop
push
ror
pop
pushl
push
sub
pop
call
call
push
push
dec
dec
ror
push
or
not
add
sub
pop
add
not
shl
pop
push
push
lea
push
lea
push
push
push
push
push
call
push
faddl
add
cltd
mov
leave
push
mov
add
add
add
pop
push
pop
add
fildl
lcall
jne
push
lea
push
call
cmc
add
aad
push
add
cltd
ret
mov
cmpsb
enter
addr16
mov
add
iret
lea
les
add
in
pushf
add
add
sub
pop
call
push
dec
inc
pop
call
push
push
not
sub
add
push
or
inc
add
shl
sub
inc
pop
rol
sub
lea
pop
push
rol
inc
xor
pop
pushl
push
shl
pop
call
push
pop
call
push
push
ror
add
rol
push
or
not
add
shl
not
sub
shl
add
not
pop
sub
shr
dec
inc
pop
push
push
push
push
lea
push
push
push
call
lcallw
add
add
add
add
add
add
add
movsl
jle
xchg
add
add
incb
add
xlat
add
bnd
lds
add
add
lea
jl
push
add
mov
roll
lcall
jne
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
enter
loop
sti
mov
add
add
mov
add
stc
add
add
clc
add
add
pop
call
push
push
call
add
add
pop
lock
jp
mov
add
cmpsl
xchg
mov
rolb
les
add
add
add
add
add
clc
lcall
shrb
cmp
cwtl
push
shl
shr
push
sub
add
shr
lea
add
sub
lea
ror
shl
pop
sub
pop
push
push
push
push
lea
push
lea
push
push
call
incb
add
cmpsl
fwait
add
lcall
add
add
add
lods
add
add
pop
shlb
xchg
mov
fsubrp
add
add
add
loopne
fsubrl
add
add
add
movsb
jo
add
int3
xchg
xchg
out
add
lcall
jne
call
push
rol
sub
pop
call
push
push
ror
shr
push
and
add
inc
lea
not
sub
ror
inc
ror
sub
pop
ror
sub
not
not
pop
push
push
lea
push
push
push
call
add
add
add
loop
add
add
jbe
int3
add
rol
pop
mov
stc
jp
add
add
mov
pop
int3
jo
lods
imul
jp
pop
mov
fisttps
in
add
lcall
jne
push
add
pop
call
push
dec
inc
pop
call
push
push
push
or
not
add
sub
dec
not
sub
ror
shl
lea
sub
pop
inc
add
pop
push
push
call
pop
add
addr16
mov
rolb
add
lock
test
in
push
rolb
cli
idiv
testl
sub
pop
pushl
push
sub
pop
call
push
ror
not
sub
pop
call
push
push
sub
shr
not
push
sub
add
sub
sub
sub
ror
inc
pop
shr
sub
inc
sub
pop
push
lea
push
push
push
call
movl
cmc
add
add
add
add
add
add
shl
ret
ret
add
add
roll
sahf
roll
add
out
aad
mov
fiaddl
add
add
sub
pop
pushl
push
not
pop
call
push
xor
sub
add
rol
pop
call
push
push
dec
sub
push
or
inc
add
rol
sub
add
add
sub
ror
ror
pop
lea
ror
add
inc
pop
push
push
push
lea
push
lea
push
push
call
repnz
mov
fadd
add
hlt
std
pop
in
in
incb
mov
fldt
fbstp
mov
mov
add
hlt
movsb
xchg
insb
scas
add
add
add
add
sub
pop
pushl
call
push
push
push
lea
push
push
push
call
xchg
add
scas
add
mov
pop
add
ficomps
add
xchg
cld
push
pushf
push
add
add
and
test
add
jb
add
in
lret
fbstp
sahf
add
sub
pop
call
push
push
add
push
sub
add
shl
rol
sub
add
not
pop
shl
pop
push
lea
push
lea
push
push
push
push
lea
push
push
lea
push
call
xchg
cwtl
fisttpll
imul
add
out
xlat
call
add
pop
loopne
mov
add
mov
add
mov
into
addl
mov
in
fdivr
lcall
jne
push
push
lea
push
push
push
call
roll
add
xchg
mov
cwtl
shrb
xchg
sar
add
movsb
int3
add
add
mov
jb
in
push
mov
imul
roll
enter
add
lods
ja
cmpsb
mov
add
out
jl
test
lods
add
fs
xlat
add
out
add
stos
jecxz
push
sub
pop
call
push
push
lea
push
push
push
call
faddl
fnstsw
cli
mov
mov
add
incb
out
add
pop
add
fisttpl
icebp
loopne
sub
pop
lea
push
lea
push
push
push
push
call
add
outsl
add
add
shll
ret
bound
test
lock
into
iret
add
push
add
iret
lahf
arpl
loope
int3
add
gs
add
add
add
push
xchg
xchg
add
add
pop
add
add
cmc
sub
pop
push
push
not
add
pop
call
push
push
xor
rol
not
push
and
add
lea
xor
sub
sub
shl
pop
not
sub
ror
pop
push
rol
sub
pop
pushl
push
rol
shr
pop
call
push
xor
pop
call
push
push
rol
not
push
xor
add
shl
shr
sub
rol
sub
lea
pop
lea
xor
xor
pop
push
shr
dec
pop
pushl
call
push
lea
push
push
push
push
lea
push
push
push
lea
push
push
call
add
cmpsb
clc
pop
add
out
fadds
les
add
hlt
idivb
push
fiaddl
add
notb
pop
push
mov
bound
jmp
add
cmc
add
mov
mov
add
shrb
jecxz
stos
push
add
push
sub
add
shl
shr
dec
dec
sub
add
pop
add
sub
pop
push
ror
lea
not
pop
pushl
call
push
lea
sub
dec
xor
pop
call
push
push
lea
sub
shl
rol
push
or
inc
add
sub
pop
pop
push
push
push
push
push
push
push
push
push
call
add
roll
jnp
faddl
fcom
in
add
pop
fcompl
push
add
xchg
add
jae
cltd
jp
add
outsl
roll
add
xchg
add
loopne
mov
mov
stos
ljmp
add
jb
add
add
add
cmpsl
push
sub
pop
pushl
call
push
push
add
rol
push
push
pop
add
sub
dec
dec
sub
xor
dec
sub
dec
pop
dec
not
sub
xor
pop
push
push
sub
ror
push
or
inc
add
xor
sub
add
not
add
sub
pop
add
xor
add
pop
push
lea
push
push
lea
push
call
loop
bound
mov
jle
add
pusha
aad
loop
pop
loopne
push
jmp
les
add
add
rclb
add
ja
in
fwait
add
addr16
add
add
add
lcall
rcrb
push
push
lea
push
push
push
call
scas
insb
cmpsb
jmp
rcr
jle
add
add
pop
cltd
add
xchg
call
lret
aad
add
xchg
add
mov
add
jl
add
stos
add
jge
xchg
mov
out
mov
ret
stos
insb
xchg
jecxz
in
call
out
hlt
call
test
pop
call
push
push
add
push
sub
add
not
shr
sub
sub
not
pop
shr
dec
ror
pop
push
not
lea
not
pop
pushl
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
add
push
add
mov
xchg
sarb
mov
mov
in
add
add
add
aad
add
inc
sbb
add
push
sub
not
pop
call
push
push
push
call
fistpl
xlat
add
ret
push
incb
rorl
add
lret
add
aam
lcall
xchg
add
jge
lock
movsl
jecxz
add
add
add
push
push
add
not
ror
inc
push
or
not
add
sub
sub
pop
ror
lea
pop
push
push
push
push
push
lea
push
push
push
call
mov
add
add
xchg
iret
push
add
add
xchg
ljmp
int
add
add
add
popl
mov
mov
jp
add
testl
lea
popf
add
sub
pop
pushl
call
push
add
not
pop
lea
push
push
shr
sub
pop
push
push
push
push
push
call
mov
add
add
add
push
add
mov
jns
xlat
mov
jge
add
ret
shlb
jno
shrb
clc
loope
popl
js
rcll
add
iret
loop
scas
bound
add
lock
lcall
add
dec
lea
push
push
lea
push
lea
push
push
call
fisttps
add
outsl
popa
add
fldl
pop
outsl
push
add
fdivrs
push
add
pusha
cmc
rcl
pop
add
mov
int
insb
mov
jo
push
mov
roll
lcall
add
rclb
mov
call
mov
lods
push
cmpsb
add
jp
add
mov
cld
pop
addr16
jnp
xchg
flds
pop
push
add
data16
sahf
add
add
add
cmc
in
fucomp
add
add
add
scas
add
add
push
pop
add
pushf
and
ljmp
push
mov
push
not
push
or
inc
add
sub
sub
shl
pop
dec
inc
sub
xor
pop
push
add
xor
sub
pop
pushl
call
push
push
call
xorb
enter
add
iret
add
je
xchg
add
add
jae
jb
pop
jmp
fiadds
add
mov
lahf
mov
push
push
push
push
lea
push
push
lea
push
call
mov
add
add
pop
jecxz
fwait
mov
add
ret
aad
add
jns
xlat
cltd
add
hlt
jbe
add
jmp
faddl
clc
add
stos
jle
add
fwait
mov
adc
push
add
mov
add
add
pusha
add
call
call
push
push
xor
xor
push
or
inc
add
sub
rol
sub
shr
shl
pop
ror
add
xor
pop
push
lea
push
lea
push
lea
push
push
lea
push
push
call
jne
aam
add
add
add
add
in
mov
add
aam
add
stos
roll
jb
xlat
lea
mov
out
push
in
in
lcall
jne
call
push
not
add
inc
pop
call
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
filds
add
add
push
add
ja
add
add
stc
lcall
add
add
add
add
incb
mov
call
rolb
lods
insb
add
and
fcompl
push
fcompl
inc
cld
push
lea
push
call
popa
xchg
data16
out
add
cli
add
movsl
pop
push
mov
xchg
scas
add
fsubr
test
mov
jmp
add
add
imul
add
add
add
xchg
mov
push
leave
add
data16
sub
pop
lea
push
push
shr
shl
push
and
add
sub
add
sub
shl
add
not
pop
not
inc
pop
push
push
push
push
push
push
push
push
call
add
rolb
add
movsb
add
jnp
test
in
scas
addb
mov
add
repnz
ret
add
mov
jae
add
pop
popa
test
stos
pop
jb
andl
fiadds
add
add
int
mov
pushf
scas
add
loope
sub
pop
pushl
push
push
push
lea
push
lea
push
push
lea
push
call
xchg
add
jns
lret
into
arpl
add
push
mov
test
fiaddl
sahf
mov
lock
mov
out
subl
add
add
cmc
loop
out
in
rol
jb
add
add
add
lret
add
add
call
push
shr
xor
shr
pop
lea
push
push
push
push
push
push
call
jnp
add
add
add
fldl
fwait
test
lock
jne
subb
add
add
mov
repnz
add
loopne
pop
add
jmp
incb
neg
int3
fdivs
add
add
rolb
ja
in
in
lcall
add
lret
add
out
pop
pushl
push
push
rol
ror
push
xor
add
dec
add
not
sub
shr
shl
dec
not
pop
shl
pop
push
shr
rol
add
dec
pop
push
push
shr
sub
shr
pop
call
push
push
sub
shr
xor
push
or
inc
add
dec
sub
add
add
pop
inc
pop
push
lea
push
push
push
push
push
push
call
add
pusha
cmpsl
fcmove
add
pop
ja
jb
repnz
add
add
aam
push
rcl
movsb
xchg
arpl
add
add
cld
insb
add
call
std
push
roll
add
test
out
mov
sub
pop
pushl
call
push
add
shr
pop
push
push
add
pop
call
push
push
shr
ror
push
push
pop
add
sub
sub
dec
sub
add
pop
ror
pop
push
dec
not
shl
pop
pushl
push
lea
push
push
call
lcall
aam
mov
add
int
movsl
add
xchg
add
cltd
cli
lea
rcl
jae
in
hlt
pop
call
push
pop
call
push
rol
lea
pop
jmp
pushl
push
shr
ror
pop
mov
push
lea
push
lea
push
call
mov
add
out
in
add
mov
add
push
add
add
in
add
mov
andb
xchg
add
testl
mov
fisubs
movsb
add
fs
mov
add
mov
mov
add
lret
sub
pop
jmp
push
push
inc
not
push
xor
add
sub
sub
sub
pop
inc
lea
sub
inc
pop
push
push
push
push
push
lea
push
push
push
lea
push
call
fdivrs
push
add
rclb
fnop
push
xchg
add
add
gs
in
fnstsw
js
popl
xchg
add
mov
add
jle
lds
xchg
popf
lock
add
add
flds
add
mov
mov
lret
cld
in
fcompl
lcall
jne
push
ror
rol
pop
call
push
not
shl
lea
pop
push
push
inc
shr
pop
call
push
push
shr
push
and
add
add
ror
xor
not
sub
inc
pop
lea
lea
pop
push
xor
not
pop
pushl
call
push
lea
push
push
push
lea
push
push
call
jno
stos
addr16
add
fistpll
mov
add
add
add
add
fstpl
popf
jl
movsb
add
mov
mov
add
add
add
mov
out
je
push
stos
add
add
fcmovnu
add
add
add
mov
cld
xchg
add
push
push
lea
push
lea
push
call
add
lods
add
mov
addr16
mov
add
scas
out
add
xchg
cmc
add
out
jecxz
jnp
les
addr16
mov
in
lock
lcall
ror
push
xor
pop
add
push
rol
pop
pop
pop
push
push
lea
push
call
add
mov
jge
add
add
lcall
add
add
shlb
add
mov
testl
icebp
call
add
in
hlt
lcall
push
push
push
call
add
pop
rol
add
bound
xchg
xchg
mov
shll
add
add
add
fsubrs
lret
popa
add
rclb
rolb
add
add
add
add
add
mov
xchg
mov
mov
cltd
mov
fstpt
fiadds
add
in
add
sub
pop
inc
push
push
push
lea
push
push
call
add
mov
in
lock
add
mov
stos
add
add
add
mov
add
cmpsb
fwait
add
add
jecxz
lods
pushf
mov
add
add
mov
push
mov
out
jl
mov
add
in
in
lcall
or
push
not
not
pop
leave
ret
push
push
push
push
push
lea
push
call
add
push
mov
add
push
add
movsl
mov
lods
aam
add
add
movsb
push
add
testb
mov
add
xchg
add
aam
roll
mov
call
mov
pop
push
push
shl
ror
xor
pop
mov
push
push
lea
push
push
push
push
lea
push
push
call
add
outsl
movl
push
loope
xchg
fst
fisubrs
addb
fldt
in
add
push
add
aam
add
add
loope
addb
mov
push
in
add
add
add
add
mov
addl
lcall
jge
add
test
add
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
shr
jmp
add
add
jno
out
add
xchg
imul
addr16
aad
add
add
stos
push
stos
add
sbb
add
push
shr
xor
rol
not
pop
mov
push
dec
shl
dec
sub
pop
and
xor
push
push
push
push
push
push
lea
push
push
push
call
mov
add
test
js
into
test
je
std
fidivrl
std
int
mov
lret
add
push
sub
pop
xor
push
dec
dec
pop
add
push
lea
push
push
push
push
push
push
lea
push
call
in
jmp
add
add
add
frstor
jno
mov
jle
add
add
push
out
jmp
test
jp
add
add
add
mov
add
jmp
mov
in
loopne
lcall
dec
decl
push
lea
push
push
push
push
lea
push
push
call
add
bound
gs
add
mov
add
push
add
roll
jne
jno
rolb
mov
add
mov
add
cli
out
jp
in
loopne
sub
jmp
push
push
push
push
lea
push
lea
push
call
fadds
add
pop
add
jge
push
cltd
mov
out
addl
add
push
add
movsb
push
add
jo
push
sub
pop
sub
push
dec
shr
pop
pushl
push
lea
push
push
lea
push
lea
push
call
movsl
add
mov
pop
in
mov
pop
test
pop
insb
add
push
xchg
add
add
out
add
sahf
add
push
rol
add
pop
sub
push
pop
cmp
jne
push
inc
shl
not
pop
mov
push
not
pop
lea
push
push
push
push
push
lea
push
push
push
call
pop
add
add
add
fisttpl
add
iret
sahf
add
imul
jecxz
out
push
fs
mov
xchg
push
sub
pop
sub
push
lea
push
push
push
push
lea
push
push
call
mov
mov
add
jmp
push
add
mov
add
xchg
xchg
imul
addl
xchg
lcall
or
jmp
add
dec
pop
add
sub
push
rol
rol
ror
pop
pushl
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
neg
add
xchg
mov
add
flds
add
andl
add
add
pop
cmpsl
jae
mov
mov
cld
add
add
mov
add
add
add
mov
xchg
add
add
movsb
gs
add
mov
outsl
test
add
add
in
int
in
fdivr
lcall
push
shl
pop
shr
and
push
push
push
lea
push
push
push
lea
push
call
add
je
add
add
jmp
outsl
add
add
cmpb
lods
out
sti
add
add
sub
pop
sub
push
push
lea
push
push
call
pop
add
add
add
push
scas
nop
loopne
iret
cmpb
lret
mov
lds
imul
repnz
frstor
add
cli
std
pop
add
notb
in
lock
cmp
jne
leave
push
shl
pop
ret
push
push
inc
pop
mov
add
push
push
push
push
push
push
call
fiaddl
lret
aam
jmp
pop
jnp
add
jp
enter
leave
add
add
test
js
add
mov
loopne
lcall
add
sub
pop
push
push
push
add
pop
push
push
push
call
add
add
out
add
pop
test
mov
fs
add
jns
mov
fiadds
pop
ja
popf
aad
mov
mov
add
mov
mov
mov
pop
push
enter
mov
add
xchg
mov
ljmp
lcall
push
push
push
push
push
call
xlat
jb
ljmp
add
jle
add
add
loopne
cli
add
pushf
rolb
std
in
mov
add
push
in
movb
add
rclb
add
in
sbbl
in
pop
push
push
push
push
call
add
add
lock
pop
add
jl
pop
add
add
iret
jo
fadds
xchg
imul
add
add
lahf
add
rcl
sbbl
rorl
pop
mov
push
lea
push
push
lea
push
push
push
call
add
jns
add
mov
add
in
pop
add
jae
add
push
popf
ret
add
testb
lcall
push
cmp
lea
push
lea
push
push
push
push
push
lea
push
call
aam
lret
in
lds
xchg
cwtl
pop
jp
in
add
int
cltd
fadds
add
movsb
addl
std
lret
add
lock
add
push
mov
add
push
add
iret
add
stos
xchg
clc
imul
aam
popa
into
mov
in
loopne
sub
push
add
rol
sub
pop
mov
shr
push
add
sub
shl
pop
add
mov
push
sub
not
pop
add
push
add
pop
mov
push
push
push
push
push
lea
push
call
stc
outsl
in
ret
roll
add
jle
fwait
popa
xchg
jne
mov
add
pop
call
icebp
sti
leave
mov
jl
les
lock
insb
add
add
add
je
scas
mov
sub
pop
add
xor
push
push
push
lea
push
push
push
call
insb
sti
int
not
mov
push
popa
add
add
mov
pushf
add
scas
add
pop
add
add
insb
add
add
mov
add
add
frstor
js
xchg
mov
cld
add
pop
mov
push
add
add
add
pop
and
rol
push
push
push
push
push
push
push
push
call
ret
scas
add
xchg
jae
add
mov
add
popa
out
xchg
add
hlt
imul
add
add
push
flds
add
lds
add
in
loopne
rol
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
call
fcompl
add
into
add
jnp
sahf
add
test
or
add
add
fildl
xchg
add
push
fdivr
lcall
add
add
adc
bound
call
mov
add
cmpsb
add
shl
jns
add
add
add
add
add
int
fldl
jl
int3
out
cmpsb
mov
pop
add
ret
in
lock
inc
cmpb
jne
push
push
push
call
mov
push
add
add
add
rolb
add
cmpsb
add
add
mov
stos
add
add
add
push
lds
add
fcmovb
faddl
popa
add
jnp
add
add
xchg
xchg
add
outsl
iret
add
xchg
out
mov
mov
add
aam
sub
pop
add
push
not
pop
cmp
je
add
push
sub
pop
cmpl
jne
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
add
add
add
divl
popl
stos
pop
add
add
lods
in
add
mov
add
add
sub
pop
xor
push
rol
shr
pop
pop
push
add
sub
pop
pop
pop
push
shl
pop
pop
pop
push
sub
shr
pop
leave
push
sub
shl
inc
pop
ret
push
sub
pop
mov
push
push
call
add
add
data16
je
add
add
ljmp
xlat
jo
fwait
lods
mov
xchg
adcb
push
rcrl
lahf
out
add
leave
mov
add
pop
fadds
mov
add
jmp
in
clc
lcall
push
or
repz
pop
mov
push
shl
add
shl
pop
push
push
xor
add
dec
pop
mulb
pop
push
push
lea
push
call
insb
xchg
xchg
nop
pop
shll
movsl
add
int3
xchg
xchg
out
stc
cmc
scas
add
add
fimuls
lahf
movsb
stos
ret
add
sub
pop
call
push
push
add
sub
pop
call
push
inc
rol
pop
xor
push
shr
rol
pop
pop
pop
push
add
not
ror
ror
pop
pop
pop
push
not
not
rol
lea
pop
pop
push
push
push
push
call
stos
add
fdivl
add
mov
add
fildl
jnp
pop
je
push
aam
add
add
ficomps
leave
push
push
push
call
add
add
addb
jno
rolb
out
jmp
add
hlt
js
fiadds
push
pusha
add
add
add
gs
jl
scas
fildll
add
pop
ret
push
push
push
push
call
andb
lcall
add
jb
add
aam
flds
ja
fiadds
jecxz
test
js
xchg
jp
add
imul
jp
in
lock
lcall
push
xor
shl
pop
mov
push
lea
push
push
push
lea
push
push
push
push
push
call
loope
add
mov
push
movl
fdiv
outsl
sti
add
xchg
lds
imul
jge
mov
add
out
push
xchg
iret
cli
iret
jae
mov
lods
add
xchg
arpl
lret
adc
cmpsl
add
in
fcompl
hlt
push
push
push
push
call
add
ja
out
fidivrs
xchg
nop
mov
add
add
clc
jae
mov
mov
ljmp
add
add
fldcw
aad
fsts
add
mov
add
pusha
enter
add
lcall
push
push
push
push
push
push
push
push
push
call
ret
add
insb
add
ficoml
lods
jecxz
scas
xchg
add
add
mov
in
add
add
int3
adcb
in
loopne
lcall
push
push
push
lea
push
push
push
push
push
push
call
add
add
add
in
mov
addb
clc
notb
stos
inc
add
call
add
push
scas
jno
in
add
rolb
add
add
test
xchg
add
add
sub
pop
push
mov
push
dec
pop
push
push
add
pop
pop
push
push
push
push
lea
push
push
call
xchg
add
testl
incb
add
cmpsb
sahf
lcall
add
repnz
xchg
add
std
jo
les
push
cmp
push
push
lea
push
push
push
call
add
in
add
add
nop
filds
in
sti
add
push
popa
xchg
push
add
js
mov
lods
mov
roll
add
add
hlt
push
mov
sub
pop
sub
mov
push
push
push
lea
push
call
add
sbbb
lods
mov
lods
insb
add
jb
out
jle
add
cmpsl
test
add
push
add
aad
filds
out
scas
add
add
lcall
ljmp
iret
add
sub
pop
add
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
movsl
add
jns
add
cli
add
aad
add
fimull
add
xchg
gs
mov
flds
loopne
push
loope
mov
mov
into
popf
rolb
add
add
add
loopne
add
pop
nop
add
lcall
pop
js
push
push
push
push
push
call
movb
add
out
xchg
add
add
mov
lock
add
fmulp
mov
imul
mov
add
add
arpl
add
pop
add
push
sub
pop
pushl
push
push
push
push
lea
push
push
push
push
push
call
fbld
rcrl
push
rolb
xchg
add
call
addr16
add
cmc
add
arpl
sti
out
addr16
mov
addl
add
add
sub
pop
popl
push
push
push
push
call
xchg
jnp
lcall
out
mov
add
cmc
add
add
ljmp
int
jge
in
lock
lcall
jnp
push
push
push
push
push
call
add
add
js
shlb
rolb
imul
add
faddl
fbstp
add
jl
add
pop
scas
divl
xchg
int
stos
xchg
add
add
jp
sti
enter
shl
add
add
sub
pop
add
xor
push
push
push
lea
push
push
push
push
push
push
lea
push
call
add
add
leave
add
sti
data16
fiadds
add
loope
add
mov
add
lock
add
add
movsl
add
mov
xchg
imul
in
cmc
mov
add
add
fwait
stos
add
mov
lret
lret
add
sub
pop
lea
push
push
push
push
lea
push
call
add
add
stos
sar
lods
out
xchg
jno
jns
add
add
pop
into
scas
cltd
popa
repnz
xchg
cmc
add
add
pop
add
fldcw
push
cwtl
mov
add
notl
add
xchg
jl
popa
sti
add
jge
hlt
pop
add
lods
ret
in
lcall
adc
rcll
punpckhbw
jns
repnz
lea
push
push
push
push
call
iret
push
mov
leave
add
add
out
pusha
pop
mov
popf
add
add
xchg
jo
add
pop
add
roll
addl
add
lock
push
add
aad
xchg
add
xchg
imul
lcall
rclb
fistpl
rolb
push
push
push
push
push
push
lea
push
lea
push
call
cmpsl
add
add
clc
sti
add
add
ficomps
add
add
add
popf
jb
mov
cli
mov
iret
xchg
add
mov
add
add
add
aam
add
add
movsb
add
mov
xchg
add
mov
repnz
pop
nop
push
ror
not
pop
xor
push
ror
shr
sub
pop
nop
push
inc
add
not
pop
nop
push
pop
inc
nop
push
lea
shr
pop
nop
push
sub
pop
cmpb
jne
push
lea
push
lea
push
call
add
jle
add
movsb
movl
out
ret
pop
mov
movsl
xchg
addr16
add
mov
mov
add
mov
mov
push
jl
mov
push
xchg
xchg
cmpsl
faddl
cmc
idiv
jno
add
stos
roll
add
scas
lods
fmuls
test
int3
add
imul
in
hlt
lcall
inc
pop
ss
push
dec
pop
nop
push
inc
pop
nop
cmp
je
push
sub
shr
pop
nop
nop
push
xor
xor
ror
not
pop
inc
push
push
call
add
mov
jb
lods
jnp
out
xchg
loope
add
add
add
add
add
add
add
add
jbe
bound
lods
ljmp
out
push
add
cmc
mov
add
jns
add
mov
imul
xor
add
pop
nop
push
add
pop
cmp
jb
xor
push
push
lea
push
call
push
add
add
int3
add
sbbb
jmp
faddl
mov
add
xchg
add
add
fiadds
into
lret
jge
add
add
iret
cmpsl
add
fiaddl
loope
add
cltd
add
add
add
add
into
aam
jae
movsl
add
add
sub
pop
jmp
push
lea
push
push
push
push
push
push
call
lret
add
icebp
add
mov
add
addb
add
cltd
loop
add
mov
push
add
mov
loopne
mov
cmpsb
add
add
add
in
fldl
add
mov
test
jge
add
add
push
xchg
call
push
lret
lret
in
add
add
icebp
popa
add
lcall
push
and
rcll
arpl
lret
pop
enter
push
lea
push
push
lea
push
push
call
std
add
push
leave
mov
add
cmc
xchg
cwtl
lds
jae
add
mov
addr16
out
push
pop
imul
fadds
mov
add
stc
mov
leave
pop
addl
adc
push
inc
pop
mov
add
push
push
push
push
push
push
push
push
lea
push
lea
push
call
jne
add
push
add
jp
not
add
add
mov
add
cltd
pop
add
add
add
test
mov
add
add
in
pop
add
mov
pop
stc
jl
in
fcomps
dec
hlt
xor
push
sub
sub
xor
pop
xor
shl
push
shl
shl
lea
pop
xor
push
lea
push
push
push
push
lea
push
push
lea
push
call
pop
add
add
add
fs
arpl
lret
lods
stos
add
mov
add
jno
add
add
add
add
mov
cld
jbe
fxch
ja
add
add
leave
fst
insb
pop
add
fcmove
sub
pop
shl
xor
push
sub
sub
pop
shl
push
push
lea
push
push
lea
push
lea
push
call
cli
xchg
fadd
xchg
jl
sti
add
lock
ret
xchg
mov
fiaddl
add
incb
imul
loopne
hlt
lret
add
lcall
or
push
push
push
lea
push
lea
push
call
jnp
xchg
xchg
jp
out
add
add
push
cmpsb
add
mov
out
jmp
test
mov
arpl
lret
mov
add
add
clc
pushf
xchg
add
movsl
js
add
test
jl
push
sub
pop
mov
push
inc
add
pop
add
push
xor
add
dec
pop
pop
push
push
push
push
call
mov
add
push
fcmove
mov
cwtl
mov
cmpb
add
xchg
add
add
mov
add
int3
add
add
testl
pusha
in
cwtl
bnd
ret
add
clc
cmc
add
sar
out
jmp
mov
fnstsw
lcall
add
add
cld
lret
sub
pop
pop
pop
push
push
lea
push
push
push
lea
push
call
add
add
cwtl
add
jo
mov
mov
jl
hlt
subb
jns
add
fwait
add
add
out
mov
add
lret
ljmp
sub
pop
pop
push
push
call
fwait
andb
clc
movl
cli
je
cltd
rolb
mov
int3
xchg
test
jne
insb
stc
loop
pop
hlt
add
mov
xchg
push
imul
out
mov
stc
sti
mov
jae
mov
imul
add
add
add
add
push
ror
add
not
add
pop
ret
push
inc
rol
pop
push
push
push
call
xchg
cmpsb
test
scas
mov
rolb
add
cwtl
xchg
add
nop
add
fadds
lret
roll
fs
sti
stos
testl
push
add
add
add
out
add
add
jae
add
sub
pop
mov
push
push
push
push
push
push
push
call
cli
add
pop
add
add
addr16
subb
add
js
pop
mov
add
enter
popf
add
jno
add
add
bound
sub
pop
push
push
push
push
push
lea
push
push
push
call
jb
repnz
add
in
add
mov
out
xlat
loope
pop
icebp
insb
movsb
cmpsb
faddl
add
sahf
xchg
test
in
add
addl
add
sti
aad
add
sub
pop
push
push
inc
sub
shl
sub
pop
push
push
lea
lea
xor
ror
pop
push
mov
push
rol
shl
pop
mov
push
push
push
lea
push
push
push
call
push
popf
arpl
add
imul
mov
push
push
add
test
arpl
add
xchg
add
add
add
or
out
add
movb
cmpsb
add
add
xchg
mov
sub
pop
mov
test
je
push
shl
ror
inc
pop
mov
push
push
lea
push
push
call
add
jae
add
mov
addl
int
push
xchg
add
jb
add
add
out
add
addl
add
ljmp
data16
add
cli
jnp
add
lock
test
je
push
pop
mov
push
add
pop
mov
mov
push
xor
pop
inc
push
pop
cmp
je
push
push
call
fwait
aad
mov
add
testl
jp
cli
add
mov
add
jne
add
cli
xchg
mov
add
roll
imul
arpl
loopne
add
jle
add
rorb
xor
add
push
lea
inc
sub
pop
mov
push
ror
dec
pop
inc
push
shr
dec
pop
cmp
je
test
jne
push
lea
sub
pop
xor
push
sub
xor
lea
pop
pop
pop
push
sub
add
pop
pop
push
push
push
push
push
push
push
push
lea
push
call
imul
mov
jb
add
ficomps
cwtl
mov
mov
imul
add
add
add
add
mov
add
add
aad
pop
add
shl
add
arpl
call
jns
add
lods
add
scas
addr16
mov
add
mov
lcall
leave
push
add
rol
sub
pop
ret
push
push
call
clc
add
test
test
lds
pushf
add
mov
add
add
insb
mov
add
testb
add
roll
in
in
add
jecxz
in
sub
pop
mov
inc
push
sub
not
shr
sub
pop
cmp
jne
push
shr
pop
lea
mov
push
push
push
push
call
ja
xchg
movsb
add
add
add
bound
push
nop
pop
ffree
add
add
xchg
enter
add
jge
stos
xchg
jo
mov
fadds
add
enter
add
in
lock
lcall
in
test
add
push
push
push
call
add
fcmovnu
add
mov
mov
je
add
pop
int
loope
add
into
cmc
int
bound
lcall
push
add
push
push
push
push
lea
push
call
add
add
add
add
add
push
push
in
lret
add
jge
xchg
add
stos
push
add
push
xlat
sar
add
lock
jl
add
add
add
pop
rolb
add
add
bound
add
add
lock
push
lret
push
add
ret
sub
pop
cmp
jne
mov
push
ror
lea
pop
test
je
mov
push
push
lea
push
lea
push
push
push
push
lea
push
call
jno
xchg
add
mov
add
push
add
add
js
jb
add
jo
std
pop
add
add
jbe
add
pop
pop
push
aam
xchg
add
fldl
mov
jmp
lret
add
pop
cwtl
lahf
je
addl
pop
add
push
ror
pop
cmp
je
push
shl
sub
pop
jmp
push
pop
xor
pop
push
push
push
push
push
call
mov
add
xlat
mov
shrl
mov
mov
cmpsl
shrb
add
add
jo
jge
pusha
add
add
add
lcall
add
aad
mov
mov
add
lcall
pop
push
pop
pop
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
jl
stos
jnp
lods
add
add
add
pop
add
mov
add
test
mov
in
add
loop
mov
push
add
in
fdivr
lcall
push
sub
sub
lea
pop
ret
lea
push
push
call
pop
add
lods
add
jge
lods
roll
add
rcl
loope
add
add
js
mov
popa
jecxz
add
lcall
pop
push
push
push
lea
push
lea
push
push
call
push
leave
add
add
clc
jmp
pusha
add
push
add
in
stos
js
add
push
add
cwtl
add
lea
sub
pop
pop
push
inc
pop
pop
push
push
push
push
push
push
call
add
add
add
lret
push
int3
add
add
jp
scas
add
stc
add
loope
add
add
outsl
arpl
insb
add
jae
add
shlb
xchg
test
jbe
mov
int
shl
add
in
sub
pop
leave
push
push
push
push
lea
push
push
push
push
lea
push
push
call
mov
add
mov
clc
pushf
int
in
pop
rol
clc
lods
enter
add
xchg
mov
push
add
xchg
push
into
aam
mov
mov
add
roll
addl
cwtl
pop
fnstsw
mov
add
fildl
add
test
add
add
pop
ret
push
sub
lea
sub
pop
mov
push
dec
ror
pop
pop
push
pop
pop
push
sub
lea
shr
pop
pop
pop
push
inc
pop
leave
push
shl
pop
ret
xor
cmp
cmp
add
adc
and
adc
adc
adc
popa
cmp
xor
adc
mov
add
fbld
add
das
nop
inc
imul
lds
pop
push
repz
loop
mov
fs
adc
ret
lods
pop
jge
cmp
cmp
jg
mov
stos
jl
dec
pop
push
mov
orl
cmpsb
sarb
push
lcall
mov
dec
xor
sbb
dec
jp
sub
push
data16
sti
int3
inc
fucom
push
ljmp
scas
sbb
inc
mov
xor
inc
pop
pop
push
mov
cmp
cmpsl
xor
pop
sahf
shll
xchg
fisttpll
pop
es
in
xor
in
rolb
and
ficomps
dec
jl
pop
cmpsb
inc
dec
dec
test
subl
rorb
jae
mov
add
pushf
fistpl
cmp
repz
xor
sbb
repz
ds
out
shl
icebp
mov
cmp
xchg
stos
leave
ds
inc
jp
stos
insb
aaa
pop
sbb
cld
add
xor
ja
gs
das
ja
shr
ret
clc
xor
push
lods
pop
jns
fwait
ljmp
lods
and
or
xor
je
jecxz
out
dec
dec
mov
cmp
add
int3
jnp
mov
xchg
mov
gs
ret
mov
add
decl
bound
adc
xor
cwtl
cmpsb
aam
jg
xchg
xchg
scas
jne
sub
sbb
mov
insb
and
cld
stos
xchg
test
inc
dec
sbb
xor
mov
or
push
or
sbb
ret
iret
pop
fisubl
xor
adc
xor
js
arpl
jg
jmp
adc
jl
push
jmp
test
mov
out
inc
sub
mov
adc
test
add
mov
jg
and
and
outsl
je
sub
pop
lea
stos
lock
rcr
clc
pushf
aaa
and
repz
out
pop
les
mov
loope
clc
jg
xor
dec
ljmp
mov
ds
das
pop
adc
shrb
add
clc
lcall
cmp
add
loopne
sub
test
add
inc
fnstsw
push
xor
mov
mov
push
stos
imul
push
cmp
popa
xor
test
pusha
jb
cmp
push
mov
inc
es
xor
or
adc
into
orb
fwait
mov
scas
sbb
ss
or
and
inc
pop
and
clc
xchg
sub
mov
jno
insb
insb
cmp
call
add
add
imul
filds
and
mov
testb
adc
xlat
sbb
mul
jge
dec
xor
dec
fiaddl
shrl
cmp
sbb
sub
cwtl
mov
xchg
sbb
push
movsl
pop
rclb
clc
sub
sub
f2xm1
incl
aad
sbb
push
or
cmc
inc
and
sbb
fbld
xor
pop
and
xchg
imul
insl
aam
sub
pop
daa
xor
pop
add
in
cwtl
pop
cwtl
jb
xchg
cmp
ret
jmp
cmp
rclb
int3
aaa
cmp
dec
fistl
aam
ret
cmp
cs
jae
or
stos
xor
cld
jecxz
loop
stos
sbb
iret
ret
pop
adcb
mov
jg
jno
stos
aaa
and
adc
jno
xchg
sbb
into
mov
jns
lahf
cwtl
dec
add
mov
pusha
aad
mov
adc
mull
add
jl
inc
ja
dec
mov
mov
pop
mov
sub
scas
cmc
mov
sub
cmpsl
lret
xorl
adc
jp
bound
dec
idivl
in
ds
addr16
push
lret
dec
outsb
outsl
sub
cld
xor
les
jb
ror
mov
sub
in
cmp
aas
js
jnp
inc
jnp
mov
leave
pop
roll
loop
xchg
gs
xor
xchg
push
add
cmp
mov
mov
test
sbb
jmp
lret
mov
xchg
mov
dec
xchg
fstl
add
gs
hlt
xor
lcall
cmpsb
jb
xlat
sarl
add
mov
leave
lahf
js
fnstcw
and
jecxz
jp
mov
xchg
adc
adc
cmpb
add
add
push
in
int3
push
adc
insl
jp
shrl
cmp
lcall
daa
aas
fsubrl
out
inc
in
rorl
cmp
stc
lcall
and
orb
lea
mov
adc
pop
int3
mov
imul
out
aad
test
jae
xchg
jg
mov
push
cmc
addb
fdivl
imul
test
or
je
mov
test
pusha
add
push
jp
xchg
jb
jnp
pop
sti
daa
xor
push
inc
in
cmp
mov
dec
push
cmp
push
cmp
fwait
popf
icebp
out
lea
das
movsb
xlat
movsb
push
xor
pop
xchg
pop
ret
add
aaa
add
movsl
cmp
in
sbbb
arpl
jo
xchg
mov
fdivrs
mov
std
push
mov
adc
ret
js
push
xchg
lahf
stos
sar
mov
test
mov
arpl
adc
add
sbb
pop
pop
or
loopne
dec
pop
es
or
xchg
iret
mov
pop
jbe
in
outsl
out
fadd
out
enter
mov
test
cli
pop
fisubrl
lods
jne
icebp
pop
sbb
jecxz
iret
fdivr
push
push
cltd
cld
nop
jmp
cmc
idivb
and
test
test
xor
pop
pop
push
rcl
push
jno
adc
cmp
inc
pop
sarb
cli
mov
sahf
push
add
popf
push
test
ret
jns
sub
or
subl
shr
push
pop
inc
or
sub
lds
pop
fs
jmp
jo
in
daa
sub
aad
int3
arpl
dec
cmp
aas
in
mov
sub
in
xor
and
or
fiaddl
mov
push
adc
or
add
xchg
lods
pop
lea
imulb
jnp
sti
sbb
inc
cld
cmp
das
iret
mov
cmp
mov
mov
and
xchg
aaa
mov
sbb
imul
and
mov
mov
aam
setno
mov
cmp
aas
adc
or
xchg
mov
outsl
mov
add
adc
fs
call
sub
xchg
or
mov
pop
mov
cltd
xor
test
inc
inc
stos
xor
out
out
test
cmc
mov
jbe
or
sbb
in
arpl
cmp
ret
int3
pop
in
or
or
mov
push
js
mov
and
inc
andb
pushf
ja
stc
call
arpl
mov
or
bound
cld
movsb
sbb
cmp
push
push
sbb
sbb
push
ss
sub
cld
loopne
es
shlb
test
dec
stos
mov
adc
jle
scas
pop
loope
test
jecxz
add
stos
cli
push
outsb
in
xchg
fptan
xchg
insb
fxch
loopne
sub
fcmovnb
push
mov
fldenv
mull
mov
jge
ja
sbb
negl
outsb
inc
aaa
pop
fisttpll
push
adc
mov
push
mov
cli
sub
insb
aam
test
mov
rcll
jno
add
mov
or
stos
lods
cmp
inc
daa
pop
pop
jb
cmpsl
or
in
fnstenv
sahf
inc
push
jge
mov
lret
pop
add
xor
adc
icebp
rorl
jno
pushf
adc
adc
dec
jb
hlt
adc
jl
arpl
lock
lret
je
xchg
les
add
mov
int3
out
cmc
and
hlt
shrb
pop
outsl
les
and
push
or
inc
xchg
xor
dec
jns
cmp
and
mov
dec
fwait
add
fdivs
mov
xlat
jae
and
cmpsl
or
call
in
clc
leave
arpl
mov
popa
out
lcall
adcb
jb
or
loope
inc
xor
push
and
ja
mov
push
or
arpl
scas
les
mov
and
sub
xlat
jne
das
xchg
xchg
mov
mov
loop
inc
mov
subl
push
dec
mov
std
shrl
cmp
push
pop
loopne
loope
ret
add
push
faddl
mov
test
lds
stos
add
sahf
adc
xlat
idivl
pop
inc
or
repnz
and
jae
cmp
adc
pop
inc
repz
std
mov
andl
xchg
insl
fldt
popa
sub
repz
ss
in
sub
xor
fisttps
push
pop
mov
jl
push
clc
jno
xor
daa
pusha
mov
adc
fcoms
das
sbb
xchg
outsl
cmp
orb
jne
sub
push
loop
insl
bound
push
gs
push
add
pop
sahf
int3
mov
sub
rcrb
jle
push
lret
sub
pop
mov
and
push
push
repnz
leave
outsb
push
outsb
cmpsl
push
xchg
dec
sbb
lret
call
mov
xor
cli
out
sti
sub
mov
test
mov
pop
sub
out
test
mov
and
or
add
push
fildl
in
jl
inc
jge
fidivl
icebp
call
inc
insl
imul
rcrl
dec
sub
inc
daa
sub
and
sbb
push
call
and
push
fcompl
push
jp
cwtl
gs
xchg
aad
mov
imul
jbe
sbb
push
dec
into
dec
mov
in
lret
addr16
popa
adc
mov
sbb
outsb
mov
stos
mov
pop
out
pop
imul
ss
repnz
mov
in
mov
or
sub
and
incb
je
add
ret
sub
test
sbb
int3
add
lret
repz
inc
jg
lds
adc
loope
roll
cmc
push
int3
loope
inc
insb
add
sbb
lret
pusha
mov
popa
bound
mov
aad
jp
enter
int
fnstsw
sub
sti
add
gs
push
aas
repnz
loope
clc
dec
popa
pop
sahf
enter
push
test
dec
pop
lods
ja
repz
insb
xchg
mov
xchg
fdivs
jns
insb
outsb
jbe
mov
loopne
jae
or
sub
cmp
add
jnp
mov
jbe
lds
push
cmp
divl
ja
outsl
jecxz
sarb
popf
mov
dec
mov
loopne
add
dec
mov
pop
mov
xor
into
add
adc
sbb
mov
xor
call
fs
jno
adc
cs
adc
cmpsb
mov
and
mov
xchg
jle
jle
mov
insb
test
fdiv
nop
adc
lahf
hlt
int
inc
adc
das
pop
pop
cmpsl
add
xchg
ret
sbbl
cmpl
dec
dec
lret
adc
inc
push
dec
scas
push
lcall
push
outsb
pop
and
scas
das
out
aaa
ja
jae
in
fsubrp
jnp
ds
das
fistpl
jne
inc
sahf
mov
in
mov
mov
mov
lret
sub
mov
push
loopne
sub
jmp
in
roll
dec
loop
sub
add
push
aaa
inc
mov
icebp
push
jnp
xchg
and
sub
and
mov
lock
sub
dec
and
outsl
inc
jg
push
jge
subl
and
dec
cmp
addr16
mov
push
jg
das
pop
subl
xchg
rcrl
push
dec
movsb
inc
add
sbbb
mov
das
sbb
arpl
cmp
push
adc
insb
pop
in
cltd
movsb
insb
ret
pop
andl
dec
es
xor
sub
jns
test
push
notb
loop
mov
sbb
and
lock
movsl
add
ret
out
shrb
fdivs
cmp
xlat
js
or
in
sub
cmc
push
aad
lds
mov
fistl
pop
fwait
cmp
adcl
popa
or
into
pop
pop
jle
sub
test
ja
cmp
sub
push
fimuls
or
push
inc
fidivl
xchg
fistps
inc
jecxz
rcrb
cs
sbb
call
lcall
mov
in
mov
xor
neg
rolb
insb
out
mov
sub
sub
dec
cld
jns
or
mov
bound
jp
enter
lcall
add
cmp
mov
rcl
push
shll
imul
dec
push
pusha
mov
out
scas
test
adcl
sbb
fmuls
mov
mov
add
inc
pop
sub
push
jmp
xchg
test
mov
push
data16
inc
inc
mov
mov
sub
test
jmp
cwtl
call
push
cmp
mov
inc
inc
aas
out
fcomps
fadd
mov
xchg
sbb
mov
std
fwait
sbb
test
hlt
inc
ja
ficomps
mov
or
xchg
cmp
ljmp
and
jns
int
aam
xor
pop
cmpsb
stos
dec
fwait
inc
enter
stos
pop
xor
and
stos
pop
je
outsl
negb
jg
cmpsb
adcb
mov
lods
pop
les
push
pop
xchg
cwtl
mov
mov
cld
enter
mov
mov
mov
lods
out
shlb
adc
mov
inc
jae
xchg
loopne
into
and
outsl
das
jmp
mov
iret
xor
sbb
rorw
add
lahf
pop
push
push
cmpb
push
rol
rorl
jne
pop
ret
hlt
cmp
sub
ret
popf
cmc
mov
gs
test
jg
test
lcall
push
shl
cmpsl
paddb
popa
lds
enter
incb
fwait
popa
inc
sbb
xchg
mov
jg
pop
or
mov
jmp
inc
pop
loopne
jns
xchg
mov
xlat
cli
mov
rolb
push
dec
les
xor
and
insl
int
enter
xchg
jmp
insb
into
sbb
mov
mov
push
loope
lods
jbe
adc
push
test
dec
stc
and
inc
pop
xchg
push
fs
roll
loopne
lods
orb
stc
mov
dec
and
dec
sti
adc
loope
test
adc
enter
mov
sub
shlb
or
out
inc
pop
jns
push
test
mov
and
lcall
mov
gs
in
aas
stos
jno
mov
insl
xchg
push
lcall
lds
mov
push
ret
cwtl
fs
sub
xchg
loopne
scas
lret
xchg
lcall
mov
inc
dec
jnp
or
cwtl
addr16
lahf
pop
loope
add
or
mov
scas
xchg
inc
cltd
lcall
test
sbb
fstp
pop
adc
push
outsb
pop
jg
outsl
cmp
inc
out
mov
fisttpl
loop
cwtl
lock
cmp
jb
adc
inc
sub
jno
dec
xor
inc
es
andl
sbb
pop
sbb
dec
ja
lock
xor
imul
loope
shll
xchg
mov
fistpl
sbb
mov
pusha
cmp
loope
loopne
dec
add
loop
xor
scas
xor
jb
cli
jge
jae
clc
cmpsl
cmpsl
arpl
push
push
cmp
dec
lahf
add
shll
roll
push
sub
pop
iret
outsb
cmpsl
stos
and
adc
push
or
xlat
scas
shrl
jae
mov
jae
sti
push
push
movsl
repnz
mov
push
jg
imulb
jecxz
xlat
or
rcrl
pop
dec
and
dec
add
inc
push
pop
mov
pop
outsb
or
hlt
mov
sub
mov
inc
mov
imul
lods
sbb
jge
mov
mov
arpl
sbb
dec
cld
mull
mov
pop
rcr
cli
idiv
inc
cmpsb
and
mov
fcmovnu
out
mov
iret
into
mov
lods
orl
adc
mov
or
stc
aaa
mov
mov
dec
jecxz
push
orb
dec
fisubs
cmp
xchg
and
pop
mov
popf
mov
out
and
or
pop
dec
push
lods
lcall
and
lds
inc
mov
lock
add
jmp
sarl
jg
xor
adc
inc
or
rcrb
mov
iret
add
cld
repnz
xchg
ja
dec
pop
outsw
add
ss
xchg
cmp
fxch
xor
addb
inc
push
fs
lods
mov
test
out
mov
sbb
lock
int
jo
and
xchg
or
xchg
ds
push
xchg
mov
xchg
inc
movsb
jno
xor
aas
addb
rorl
jmp
push
mov
mov
mov
push
dec
lret
inc
aam
pop
push
xor
icebp
out
out
jae
sbb
jle
mov
loop
movsl
mov
push
cld
les
inc
fildll
cmpsl
push
cmpsl
sub
jg
pop
and
sti
aaa
or
cmc
fdivs
leave
fistps
pop
dec
add
pop
scas
or
xorb
in
mov
arpl
xchg
and
sbb
repnz
psubd
push
cmc
xor
sub
sbb
cmc
pushf
pop
pop
mov
in
icebp
shrb
and
repz
fdivr
xor
scas
gs
mov
sub
movsb
mov
sahf
jb
into
sub
mov
lea
loope
roll
jmp
xor
testl
xchg
xor
adcl
dec
mov
fiadds
pop
add
jle
pop
and
xchg
mov
pusha
cmp
dec
jmp
or
in
mov
fildl
push
ror
sahf
cmp
aas
fsubrl
mov
adc
dec
dec
jg
and
daa
xlat
or
pop
cwtl
mov
lahf
dec
cld
xchg
bnd
sub
xchg
push
scas
js
js
add
sub
repz
scas
int
or
mov
aam
jmp
in
pop
cmp
jge
mov
jl
cmpsb
out
pop
inc
fs
and
push
ret
inc
pop
inc
push
popf
cmc
or
sarb
mov
cmpl
fmul
inc
testl
int3
js
rorb
jb
cmp
pop
ljmp
aaa
mov
pushf
adc
movsl
das
jp
stos
outsl
xlat
mov
fistpl
sub
test
push
iret
test
idivl
in
push
add
fisttps
enter
shll
jne
sbb
dec
outsl
or
inc
xchg
or
dec
xchg
cmp
cmp
dec
push
dec
inc
in
pop
stos
push
sbb
pop
ljmp
xor
inc
mov
fwait
pop
mov
xor
xchg
xor
std
pop
cld
stos
insl
inc
sbb
aad
mov
in
jle
ss
pop
mov
mov
divb
cmc
insb
lods
mov
dec
mov
out
adc
ja
mov
dec
test
cmpsl
hlt
fdivs
scas
lret
jmp
push
or
push
out
xchg
fidivl
sbb
sbb
clc
es
sbb
ret
lds
sub
jno
push
jno
pop
dec
xchg
xor
enter
dec
inc
mov
fsubrl
push
dec
ljmp
push
outsb
sub
cmpsb
fs
and
sub
adc
lahf
dec
addr16
lods
cmp
inc
je
xchg
sbb
jo
cmp
jb
dec
jns
out
push
push
cmp
fs
xor
ret
in
mov
xchg
dec
mov
test
add
notb
daa
dec
insw
mov
push
xchg
pop
pop
stos
mov
sub
xchg
data16
hlt
inc
clc
pop
shrb
mov
xchg
mov
leave
jecxz
in
sbb
rol
loope
mov
fldcw
jno
pusha
imul
mov
ljmp
dec
idivl
addr16
xor
test
testl
mov
iret
imul
aas
call
dec
cmp
aam
push
loope
mov
scas
sbb
jne
cwtl
dec
imul
imul
or
cmc
xchg
lcall
mov
push
pop
dec
int
mov
jle
cmpsl
fadd
cmp
lock
add
in
jae
cmp
clc
jmp
ror
int3
mov
push
push
rcr
stc
addr16
loope
push
push
dec
mov
and
fisubs
or
adc
or
lds
movsl
jbe
jmp
adc
xor
sbb
add
std
ret
mov
popf
add
lods
std
in
dec
mov
repz
mov
into
jmp
mov
push
ds
sarl
pop
daa
jecxz
pop
les
pop
inc
mov
cld
rclb
sbb
push
push
push
or
and
pop
jae
adc
push
stos
mov
das
iret
mov
jne
push
inc
xchg
leave
add
out
mov
and
into
mov
shrb
fistpll
sahf
lret
insb
lahf
mul
in
add
adcb
in
into
jg
mov
mov
fabs
fldenv
pusha
rcl
pop
or
lods
lret
push
in
in
and
xchg
js
jns
pop
in
sbb
push
push
xchg
insl
out
imul
jle
adc
insb
fildll
and
adc
fistpl
lods
in
jo
ds
mov
fidivrs
lea
dec
and
xor
inc
mov
mov
adc
ret
stc
pop
push
add
aas
jecxz
jge
cmc
and
xor
daa
adc
cmp
ret
or
and
mov
scas
inc
imul
clc
jl
jb
pop
or
lods
push
inc
int
clc
hlt
xchg
or
lock
enter
subw
notl
neg
leave
dec
in
cmp
jle
jle
push
shl
imul
sbb
int
rcrb
ret
scas
repz
das
cmp
insb
or
nop
sub
lahf
outsl
inc
scas
or
or
rorl
dec
ja
inc
xorb
cmp
and
mov
outsb
or
jbe
push
lcall
inc
test
cltd
test
cwtl
int
inc
shll
addr16
mov
lds
movsl
das
sub
sub
roll
push
scas
or
or
dec
mov
inc
sahf
sub
bound
lods
les
lods
call
dec
scas
adc
jecxz
xor
jne
xchg
mov
push
icebp
call
out
popf
dec
lods
or
andl
flds
pop
iret
or
cwtl
mov
stc
jl
idivb
push
sub
mov
cli
cmp
enter
mov
iret
adc
das
sbb
cwtl
dec
xor
fsubrs
push
test
aam
add
add
mov
adc
sbb
jmp
pop
jg
lret
pop
daa
jae
je
adc
aam
sbbb
ja
fwait
cmp
testb
mov
mov
sub
divl
clc
push
test
fs
adc
dec
insl
pop
fnstcw
lods
scas
sarl
repnz
test
pop
into
cld
lds
pop
push
fcompl
mov
jl
sbb
cltd
jp
push
dec
xlat
scas
jmp
rolb
inc
mov
repz
push
mov
jp
arpl
sub
loop
out
sbb
fwait
mov
les
mov
pushf
scas
adc
js
popf
dec
out
fwait
adc
jnp
or
jl
mov
xchg
out
dec
sti
hlt
xor
adc
xor
lock
stc
fst
cwtl
insl
lret
ds
movsb
push
cli
aam
jmp
xor
iret
andb
or
mov
mov
mov
push
addr16
xor
fisubs
cmpsb
ss
in
sub
cmp
cmp
mov
aaa
pop
cli
popa
jle
ret
outsl
mov
jmp
ret
fnstsw
jl
into
dec
inc
jmp
mov
outsb
fs
mov
adc
das
adcl
jle
imul
xlat
stc
xor
cltd
push
loop
inc
inc
dec
test
jno
jae
cmpsb
mov
fs
icebp
je
outsb
test
popf
test
inc
mov
or
mov
inc
dec
mov
imul
clc
and
dec
adc
popf
mov
das
cmpsb
fiadds
sti
xchg
ret
cmp
icebp
sub
fwait
pop
stc
adc
movsb
fdiv
int3
adc
int
push
cs
xchg
inc
imul
mov
xchg
mov
xor
comiss
cmp
push
int3
bound
cmp
jbe
in
inc
jg
mov
sub
stos
jmp
inc
out
fcoms
pop
out
xchg
popf
jo
fs
decb
shll
fs
mov
cmp
mov
fisubrs
mov
sti
or
mov
je
icebp
jno
xchg
add
ss
mov
leave
ret
mov
clc
fmul
sbb
imulb
jno
mov
pop
or
sub
and
push
notb
xchg
or
xchg
mov
out
push
icebp
jle
cmp
add
dec
lret
ret
inc
cmpl
jns
jp
jns
pop
sub
lods
lahf
sbb
test
dec
pop
mov
in
cmc
or
out
mov
sub
push
in
arpl
fs
xchg
mov
inc
jb
adc
mov
inc
xor
dec
int3
and
mov
cld
mov
or
and
dec
mov
sbb
aam
pop
filds
xor
jg
ljmp
adc
je
sub
sbbl
jge
mov
mov
sbb
lock
mov
jb
lcall
sbb
cmp
test
pushf
lds
and
lahf
add
jmp
fcomps
pop
push
sbb
inc
scas
out
test
add
mov
cmp
xlat
pop
cmp
aaa
in
jo
cli
test
shrl
nop
and
iret
cmc
sub
mov
inc
arpl
jne
mov
xlat
mov
sti
sbb
add
repz
mov
dec
fdivrl
xchg
fmuls
or
fstps
xchg
xor
je
add
mov
imul
and
decb
or
sbb
and
jmp
pop
mov
rorb
roll
mov
rcrl
cli
cmp
lock
das
subb
idiv
and
int3
push
roll
lret
inc
jecxz
test
pop
mov
out
push
inc
sbb
mov
andl
mov
inc
stos
xchg
hlt
push
stc
jp
repnz
scas
mov
sbb
push
jl
cmp
fcom
xchg
sub
gs
push
negb
rolb
pop
push
fcoms
arpl
add
add
ja
pop
lret
and
testb
push
mov
jne
sbb
dec
add
push
nop
movsl
pop
xchg
out
je
mov
lcall
pop
aas
mov
mov
add
pop
xchg
fdivs
sub
icebp
nop
dec
mov
push
push
pop
test
jbe
mov
jbe
mov
loopne
xchg
sbbl
dec
cmp
sub
xchg
leave
sub
jle
or
cmp
jbe
jae
xchg
push
inc
xchg
icebp
js
push
sbb
orl
gs
lock
mov
jb
in
pop
es
cmp
shrb
sub
in
or
sarl
movb
add
jmp
push
mov
jle
imul
jne
and
movsb
jle
test
mov
orb
movsb
xor
inc
movsb
ror
and
cltd
sub
sbb
xchg
inc
popa
cmc
and
adc
scas
popa
mov
lcall
aad
dec
lcall
mov
push
sub
fsubl
and
mov
lret
xchg
adc
andl
aaa
xor
fimull
test
add
es
stos
xor
repnz
sar
jbe
xor
and
jg
mov
xchg
inc
pop
mov
push
divb
jns
mov
add
mov
std
data16
call
addb
loope
push
jmp
fs
and
jb
aaa
pushf
pop
mov
mov
hlt
popf
xchg
jae
inc
aaa
fisttps
sbb
daa
cld
add
rcrl
xor
or
cli
inc
in
ja
or
lret
loopne
mov
lea
stc
popa
stos
stos
xor
cmp
jg
jge
mov
mov
sbb
outsl
ja
xor
fdivl
movsb
mov
out
test
dec
sarb
pop
sti
jo
cmp
les
mov
push
push
push
in
negl
dec
jo
test
inc
xlat
subb
frstor
data16
mov
mov
push
xchg
and
adc
ret
cmp
out
mov
and
imul
ss
dec
xor
subb
jb
jl
mov
push
and
jecxz
outsb
test
rorl
xor
push
loopne
cmp
jp
mov
xchg
push
enter
cld
cmp
xchg
sbb
cltd
inc
or
gs
outsb
dec
add
dec
rcl
sbb
cmp
mov
push
xlat
pusha
push
xor
mov
shrb
cmp
fcompp
mov
idivl
stc
lea
pop
sbbl
pop
jmp
add
stos
or
out
xchg
mov
lock
movsl
sub
mov
scas
repz
je
dec
cs
xor
mov
fbstp
lock
xchg
add
adc
xchg
or
ljmp
rcr
dec
sbb
xor
push
mov
xlat
xor
xchg
aam
inc
call
mov
jae
xchg
mov
or
pop
push
jl
xor
lahf
cmpl
or
leave
jmp
mov
pop
or
lea
xchg
mov
mov
mov
sub
xchg
pop
mov
std
cmp
xor
jg
inc
js
push
mov
cmp
data16
out
xor
in
or
jge
mov
sbb
push
sub
push
cmpsb
xchg
dec
clc
mov
sub
inc
jae
or
adc
sub
sbb
aam
lret
inc
mov
push
mov
and
shlb
sbb
ret
xor
cli
ss
mulb
mov
add
sbb
in
xor
mov
and
in
aaa
and
in
mov
jnp
xchg
xchg
gs
dec
roll
pusha
repnz
inc
fcomi
fsubrl
scas
in
add
push
and
fnstsw
push
push
sahf
sub
fbld
add
jle
pop
idiv
pushf
ret
xchg
add
mov
mov
ljmp
into
sbb
adc
mov
or
sub
mov
cmp
cmpsl
push
sbb
inc
ds
mov
xor
call
mov
mov
ficomps
cmc
mov
fcomps
out
adcl
add
xchg
jae
sbb
sub
mov
mov
cltd
out
or
mov
add
dec
insb
add
dec
cmp
ss
push
nop
jbe
adc
stos
int3
cs
lret
cmpsb
xchg
push
lret
test
ljmp
mov
pusha
aaa
imul
pop
inc
gs
dec
sti
sarb
xlat
adc
testb
pmuludq
and
int
mov
push
enter
adc
and
mov
scas
cmp
and
jns
and
call
aam
pop
dec
adc
inc
adcl
inc
insl
cmc
add
adc
nop
push
add
stos
dec
insl
mov
arpl
jns
lds
in
ds
arpl
inc
imul
addb
int3
sbb
outsl
sub
inc
outsb
enter
jle
jne
xchg
out
and
loop
xchg
sub
cmpsb
das
iret
sub
popf
pusha
test
ret
dec
das
shr
jb
xchg
jo
add
and
dec
out
jmp
adc
cmpsb
pusha
stos
stos
test
jg
xor
out
das
jg
mov
test
les
aaa
inc
or
and
sub
xchg
int3
imull
cmp
xchg
or
add
adc
loop
leave
push
jne
stc
cmp
cmp
out
stc
cmp
pop
lea
or
in
pusha
incl
addr16
es
jns
data16
xchg
inc
lock
bound
repnz
lock
push
loopne
or
fcomps
out
ret
leave
shlb
dec
push
fs
or
mov
mov
popa
and
ret
inc
mov
adc
adc
and
adc
mov
cmpsl
cmp
mov
cltd
fadds
push
inc
mov
sub
mov
test
and
push
jno
les
bound
jle
pop
mov
cmpsb
xor
fcmovne
mov
jge
inc
fyl2xp1
or
sub
bound
int3
lds
pop
out
icebp
cmp
jne
pusha
ret
fidivrl
aaa
dec
cmovs
sarl
in
dec
push
and
jbe
adc
pop
daa
inc
loop
lods
mov
push
lds
fmull
mov
gs
sub
in
data16
xchg
cmc
push
in
add
sbb
sub
xchg
int3
inc
stos
sub
addr16
scas
lds
fwait
add
pop
ljmp
mov
xorb
lcall
shl
test
mov
push
mov
adc
cld
and
sub
lret
xchg
adcl
and
cmp
inc
sbb
in
jg
mov
push
mov
mov
fwait
mov
arpl
push
loope
xchg
sbb
cmp
push
ja
jae
test
mov
cmp
xor
shll
push
mov
jmp
stos
inc
mov
adc
xchg
pop
or
cmp
push
push
aad
out
adc
fs
loopne
lcall
xor
stc
repnz
out
jp
sub
xchg
dec
dec
dec
lea
aad
ret
push
push
and
movsl
mov
or
ja
jbe
shll
xor
pushf
cld
cmpsl
sbb
je
jo
les
out
lret
cwtl
dec
sub
push
add
dec
cld
sub
fcmovne
out
stos
lret
add
lods
jmp
jle
xchg
sbb
js
cmpsb
jns
add
mov
scas
push
in
mov
mov
cmp
lods
adc
fistpll
add
cltd
gs
mov
mov
in
add
sbb
lcall
xchg
mov
adc
int
pop
test
nop
push
inc
inc
adc
addr16
rcl
dec
inc
dec
into
aad
mov
cmpsl
xchg
je
cmp
mov
push
or
mov
push
xchg
pop
fdivl
cld
rorl
dec
orl
movsl
or
int3
sub
aas
jle
cmp
mov
out
cmp
je
push
shrb
and
cmp
popf
pusha
arpl
dec
dec
inc
mov
imul
xorb
insb
adc
xor
aam
adc
mov
aaa
or
sub
cmc
movsl
call
add
and
lods
cmp
mov
frstor
cmp
push
ds
popa
ss
adc
mov
inc
jg
add
cmp
add
mov
popf
pop
pop
mov
adc
std
or
js
cltd
idivl
and
out
sarb
or
scas
push
test
jno
mov
fadds
sbb
lret
in
daa
inc
stos
loop
clc
fs
mov
push
repnz
jo
push
arpl
mov
mov
imul
pop
insb
push
xchg
push
inc
mov
lods
dec
aas
loopne
jle
pop
add
adc
mov
sbb
sub
fsubrl
idivl
lods
cmp
packsswb
push
dec
cltd
adc
lea
adc
ffreep
dec
iret
jl
sub
xchg
stos
add
mov
cmpsl
test
xchg
je
and
push
or
or
arpl
je
jno
jo
jg
scas
adc
test
push
out
mov
jge
lea
mull
popa
push
sub
cli
shll
add
popa
rorb
int
dec
data16
int
and
outsb
ljmp
push
add
lock
xor
sub
shll
stc
sbb
cmc
repnz
fwait
in
jo
ficompl
xor
aam
mov
push
jecxz
imul
fadd
outsb
push
and
add
cmp
ficoml
add
lcall
cmp
insb
pop
jecxz
add
test
xchg
xchg
les
test
cmp
sahf
fdivrl
int
xchg
insl
sbb
bound
add
add
add
jnp
and
mov
xchg
ret
pop
mov
jae
in
pusha
mov
fisttps
popf
add
mov
pop
sbbb
sub
jle
clc
mull
mov
or
scas
jge
cmp
pop
test
inc
add
dec
test
lret
sbb
or
insl
jbe
cltd
jecxz
cltd
jbe
fistpll
mov
xlat
jbe
fstpl
cmpsb
loope
pop
inc
js
mov
fistpl
jae
inc
lahf
sub
fdiv
fisubrl
lds
movsb
inc
in
xor
repz
add
addb
into
jge
aam
icebp
loop
mov
inc
popf
aaa
xor
fistpll
in
jmp
sti
jecxz
lcall
xchg
pushf
mov
pop
xchg
out
mov
mov
js
inc
cmp
jb
mov
in
xor
scas
cmc
bound
xlat
xchg
push
sahf
dec
lea
mov
movsl
in
clc
sub
int
cmp
sub
push
dec
filds
stos
inc
pop
jle
jmp
idivb
mov
dec
outsb
xor
shll
sub
insb
rep
and
int
out
cmp
add
out
cmp
call
push
hlt
xor
clc
imul
push
das
pop
loope
jb
incb
ljmp
cmp
popa
sahf
sbb
out
add
jns
in
sub
xchg
aad
mov
popa
insl
movsl
shrb
push
into
clc
scas
jae
push
cmpsb
inc
jae
fists
dec
std
jae
bound
dec
mov
dec
cs
pop
add
test
pusha
nop
push
and
out
sar
fsts
jo
imul
in
dec
mov
push
sub
push
mov
daa
add
movsb
repnz
rorl
and
adc
mov
mov
push
aam
sbb
ficompl
stc
xchg
mov
cmp
adcl
fisubrs
lret
inc
or
and
push
and
xor
cmp
fisubl
inc
push
push
jmp
cld
imul
and
cs
repnz
jmp
das
sub
addr16
add
in
pop
dec
repz
jno
mov
adc
push
addr16
xchg
pause
xchg
faddp
flds
push
mov
mov
mov
jg
imul
std
jb
push
les
ret
mov
repz
jmp
nop
pop
sub
cli
push
stc
pop
jp
and
sbbl
pushf
push
test
and
cmp
cwtl
mov
js
sbb
mov
aas
sti
mov
out
xor
pop
mov
mov
lds
or
dec
mov
mov
lods
das
or
subl
push
xchg
rorb
rclb
mov
pop
push
mov
call
mov
orb
xor
out
test
arpl
scas
pop
into
test
lods
lds
mov
addr16
xor
js
mov
je
shl
cs
xchg
out
popa
repnz
sahf
sti
hlt
inc
jle
xchg
or
in
mov
sbb
fisubs
repz
mov
fmull
inc
cmp
leavew
lret
pop
mov
das
in
push
pop
in
xor
sub
into
les
mov
adc
bound
mov
sbb
lahf
mov
ljmp
es
int
inc
movsb
je
pop
cltd
les
rcrl
mov
adc
out
add
mov
xor
mov
pop
scas
cmpsb
mov
mov
jo
aas
movsb
xor
add
or
popa
or
in
and
outsl
inc
mov
fcomps
pop
outsl
xchg
cs
pop
xor
imull
xchg
loopne
jg
add
jbe
es
aas
mov
add
dec
pusha
xlat
pusha
xchg
xchg
stos
jge
fstps
in
xchg
int
lret
cltd
repnz
test
pop
xchg
cmp
shlb
int
pop
repz
aaa
test
shr
inc
je
cli
push
dec
xor
orb
into
pop
adc
out
lcall
dec
out
add
sti
push
adc
jmp
lret
add
addr16
mov
jl
adc
imul
imull
mull
or
clc
and
mov
jmp
dec
xor
pushf
daa
xchg
insb
leave
jp
aam
and
inc
mov
mov
mov
mov
push
rolb
int3
fists
cmp
outsb
push
hlt
sbb
inc
adc
cwtl
dec
call
aad
push
jge
jbe
in
cmp
xor
sbb
pusha
fimull
jae
pop
push
in
arpl
lcall
fdivp
adc
jnp
cmp
sub
shll
ds
nop
scas
cmp
int3
xchg
adc
jnp
ret
ret
jns
cmp
inc
inc
popf
or
xchg
in
xor
lea
or
push
mov
jb
out
int
adc
jnp
out
rcr
hlt
aaa
addr16
dec
clc
jmp
ljmp
int
inc
loop
ret
out
add
pop
jge
xchg
pop
fwait
adc
or
lret
inc
pop
mov
shl
inc
bound
data16
out
add
in
pop
pushf
mov
cmp
inc
inc
mov
cmp
and
xchg
cs
movb
mov
xor
enter
dec
xchg
outsb
mov
in
push
and
int3
mov
cwtl
push
test
pop
loope
insl
xchg
dec
test
movsb
sub
and
mov
clc
test
ret
xor
pop
pusha
cmp
push
pop
ljmp
lods
popa
or
push
movsl
jmp
mov
ljmp
adc
or
leave
cmc
mov
pop
popl
push
cli
mov
cld
mov
mov
insb
mov
and
xor
outsl
sub
addr16
insl
loop
cmp
loopne
lods
cwtl
movsl
das
sbb
inc
adc
outsb
cmp
add
fsubrl
and
xchg
and
sub
fwait
inc
into
insl
sbb
xchg
xchg
addl
xor
or
pop
mov
xchg
push
mov
jg
add
jno
jnp
movsl
add
outsb
pop
pushf
mov
mov
push
rclb
sub
xor
xlat
mov
inc
test
mov
jns
mov
das
mov
fs
fwait
push
pop
ja
outsb
cld
mov
pop
fs
arpl
popa
dec
sbb
out
hlt
adc
outsb
sbb
movsb
fdiv
inc
cwtl
ret
call
loope
cmpsl
xor
lods
cwtl
cmp
dec
and
xchg
mov
mov
adc
pop
popf
pusha
cmp
loope
mov
xchg
mov
int3
mov
sbb
push
mov
lea
add
mov
xor
dec
ljmp
nop
mov
add
jae
mov
or
mov
push
mov
lea
fildll
xchg
int
pop
and
xchg
push
ljmp
pusha
pop
pop
lcall
mov
add
add
shlb
scas
push
lods
cmp
inc
bound
rclb
out
adc
sub
cmp
cwtl
adc
dec
mov
roll
lret
pop
mov
sbb
sbb
push
lods
mov
stc
ds
adc
and
jp
enter
in
rorl
cwtl
sub
icebp
and
ss
xor
fcmovb
push
ds
add
cmpsl
stos
fsubrs
mov
stos
inc
into
xor
cmp
sarl
xchg
dec
cli
fwait
les
popf
mov
cwtl
mov
add
pop
sbb
push
mov
dec
add
dec
jne
or
lret
dec
add
push
or
sbb
xor
ja
pop
aas
ds
and
adc
sar
cs
loop
inc
dec
cmp
cmp
fsubrs
in
inc
sbb
inc
inc
leave
sub
add
mov
addr16
xchg
fdivrs
or
inc
scas
mov
fdivl
incl
aam
jb
push
push
xor
push
dec
js
sbb
adc
add
cltd
sbbb
mov
into
pop
xor
jne
lds
mov
out
stc
nop
sahf
loope
imul
cmpl
loopne
mov
roll
movsb
call
dec
mov
test
in
xor
pop
push
pop
js
test
repnz
xchg
rclb
mov
icebp
outsl
stos
mov
push
or
push
test
push
inc
jo
pop
loopne
shlb
ret
data16
or
stos
push
push
int
ror
shll
add
movsb
into
mulb
adc
mov
jle
inc
popa
into
dec
sti
loop
aam
sbb
sub
outsl
cmp
ljmp
cmp
ret
mov
xchg
inc
and
add
in
cmpl
fldl
dec
mov
mov
shll
in
add
fs
cld
push
ja
pop
rclb
int3
call
xchg
xchg
fistps
xor
pop
sub
push
sbb
inc
lods
cmp
jg
out
mov
jg
mov
nop
das
cmpsl
or
repz
bnd
test
mov
movsl
sub
xor
dec
movsl
in
call
arpl
mov
sbb
fsubl
dec
mov
sub
sub
inc
adc
jp
cmp
div
mov
adc
cmp
xchg
rol
icebp
cltd
pop
out
mov
imul
gs
pop
push
in
or
popa
sub
mov
adc
test
out
aam
loop
and
pop
mov
hlt
aad
dec
xor
sub
jg
mov
jne
adc
cmc
cmp
mov
mov
inc
out
into
loop
push
aad
je
sahf
xchg
adc
fidivrl
and
into
pop
dec
aaa
lcall
ss
fwait
inc
loopne
imul
push
pop
scas
cld
test
js
adc
sbb
xchg
push
pop
ret
push
js
cmpsl
sub
es
adc
aad
cmp
ss
lret
xchg
mov
movsb
adc
fwait
mov
repnz
sub
inc
aaa
fidivrl
fistpl
dec
fwait
xchg
bound
sbb
mov
pop
sarl
push
jmp
inc
mov
adc
jno
cs
sarb
std
insb
pop
jns
mov
jnp
xchg
stos
mov
xchg
push
fildll
ficomps
mov
dec
add
popf
cmpl
jb
push
stos
and
ret
mov
rcrl
nop
iret
jnp
in
dec
mov
mov
jp
dec
test
movsb
xor
fcoms
jle
cmp
push
ds
mov
xchg
pop
sub
ja
and
push
shlb
mov
stos
xorl
sahf
cmp
scas
inc
insb
pop
enter
adc
xchg
ret
daa
adc
pop
in
or
inc
ja
scas
repz
sub
fistpll
sahf
aam
stos
loopne
dec
jae
mov
mov
inc
lea
sub
mov
mov
stc
xchg
pop
sbb
and
lock
in
mov
icebp
andl
xor
sbb
popa
inc
test
pop
xchg
aam
cmp
fstl
repz
es
xor
pop
sbb
and
loop
test
push
push
js
addr16
mov
xchg
hlt
adc
mov
insb
scas
add
push
mov
in
in
pushf
in
sub
cmp
cmp
push
jnp
and
xor
jns
test
jb
jnp
add
dec
dec
in
mov
loop
insb
sub
push
insb
fwait
mov
fdiv
pop
das
js
call
gs
inc
shlb
xchg
sub
pushf
addb
mov
or
sbb
cmp
test
sub
fcmovb
xchg
adc
movsb
dec
cmp
push
fwait
inc
push
cltd
cmc
push
fists
call
push
jg
lea
lahf
test
sub
std
mov
divb
cmp
loopne
inc
xor
rcl
fisubs
dec
in
pushf
jne
dec
cli
push
cmp
out
cld
and
xor
xchg
jp
mov
movsb
aam
insl
mov
jo
dec
sub
push
enter
cmpsb
fsub
add
das
pop
mov
fisubrs
and
jl
shl
push
mov
pop
rcll
push
jae
xor
xor
loope
repnz
xchg
ret
lahf
incb
mov
mov
jb
inc
sub
mov
mov
push
sti
adc
es
and
cmp
jge
xor
fistpl
fldt
aaa
in
inc
enter
icebp
iret
xor
out
mov
in
adc
mov
bound
cmpsl
pop
out
add
into
inc
stc
adc
xor
sub
and
and
fstl
adc
pop
out
movsb
adc
push
jmp
sub
adc
sbb
call
sbb
pop
jle
xor
sti
mov
cmp
jecxz
cltd
outsb
loope
mov
repnz
pop
pop
mov
pavgb
inc
and
cli
imul
pop
and
sbb
icebp
jecxz
stos
pushf
inc
pop
and
push
fstpt
sub
sbb
and
mov
cmp
push
ffreep
mov
add
jb
mov
inc
jge
jge
arpl
lock
in
mov
movsb
xlat
outsb
in
mov
adc
pop
mov
jb
ss
or
sbb
cmc
xor
ror
add
jl
sbb
sahf
sahf
xchg
mov
xchg
mov
sub
pop
jae
push
movsl
fbstp
das
shl
div
addl
bound
cmp
outsb
jmp
adcb
cmp
xchg
mov
cmc
dec
cmp
fsubrs
and
adcb
mov
cmpsl
or
mov
cmc
rcrl
pop
jmp
add
jb
mov
pop
and
sahf
stos
addr16
fisubl
aaa
daa
insb
stos
pop
in
jo
or
mov
or
enter
mov
add
outsl
push
cmp
sti
jae
inc
jb
cmp
ljmp
xor
testl
aaa
call
jmp
sbb
mov
and
jae
fnstsw
or
push
ds
sub
sbb
pop
fstpt
inc
dec
fiadds
scas
jecxz
mull
pop
inc
dec
jne
pop
test
dec
std
mov
xchg
mov
xorl
fistpl
jne
inc
sahf
pop
cltd
pop
je
push
mov
leave
sub
lea
fwait
cld
aaa
icebp
adc
xchg
cltd
inc
sub
pushf
adc
dec
ret
inc
or
mov
mov
or
stos
xchg
sbb
mov
loop
mov
xorb
aas
shll
lret
push
call
ficoms
ja
int3
add
ss
popf
push
mov
movsb
jns
adc
or
imul
jl
jmp
enter
fwait
movsb
sbb
outsl
push
mov
enter
iret
push
xchg
push
adc
cmpsb
mov
sarb
test
test
xor
fisttps
shrl
push
mov
sbb
ja
fstps
pop
jno
push
adc
stc
jns
or
insl
fldt
pop
insl
mul
pop
rorb
mov
sbb
sub
push
loopne
clc
shlb
adc
pop
adc
scas
jmp
sbb
rcrb
in
mov
sbb
add
or
outsl
push
les
add
scas
pop
ljmp
subl
push
mov
call
dec
inc
insl
popa
bnd
push
or
pop
adc
pushl
pop
mov
pop
lahf
es
ss
add
dec
stc
xor
into
lock
in
fisubs
xchg
lret
pop
pmaddwd
jbe
data16
jnp
mov
push
dec
dec
xchg
inc
repz
fisubrl
or
lret
pushf
shl
adc
lret
xchg
stc
das
sti
decb
scas
pop
frstor
jle
int
les
mov
cltd
pop
xor
movsl
adc
outsb
fcomi
xchg
iret
dec
int
inc
fs
popa
pop
lods
f2xm1
js
mov
inc
stos
je
lods
or
xorl
lods
cs
mov
ret
jo
sub
rolb
inc
loopne
push
repnz
sbb
push
fnstcw
sbb
out
jns
or
push
andb
mov
mov
or
rcll
cmpsb
xchg
mov
es
popf
pop
test
test
cmp
rorb
fnstenv
adc
aas
jno
mov
adc
sbb
adc
test
push
fdivrp
adc
mov
stc
fwait
aam
movl
inc
rcrb
das
mov
or
pop
bnd
cs
insl
int3
iret
pop
js
movsl
sub
mov
push
loopne
sbb
mov
shlb
lods
shl
mov
gs
insb
pop
pusha
imul
mov
sub
and
mov
or
or
std
ret
fmull
out
ljmp
push
sbb
js
pop
adc
fbstp
xchg
dec
fadd
cmp
and
std
sub
andb
or
ds
repnz
je
inc
hlt
push
add
daa
push
mov
push
lahf
inc
cmc
in
ds
imul
cmp
inc
test
cmpsb
insl
xor
sti
stc
jnp
aam
inc
adc
mov
fldl
aad
fadd
pop
push
lods
andb
je
test
mov
lea
cld
hlt
mov
dec
add
cld
add
mov
js
pushf
imul
inc
xor
adc
pop
in
mov
xchg
xchg
js
lods
pop
jno
pop
pop
daa
mov
idivb
jle
out
xlat
testl
sti
addl
xor
out
sarw
mov
inc
adc
icebp
insl
mov
and
mov
out
insb
xor
loopne
inc
fmulp
pushf
test
mov
testl
sub
roll
sti
dec
lret
pop
movsl
adc
push
ss
pop
ret
cmpsb
cmpsb
outsb
insb
or
mov
cmpsb
cmp
test
insb
dec
mov
iret
outsb
jnp
xchg
fwait
repz
fs
jge
sub
jecxz
or
inc
repz
inc
loopne
sub
arpl
sahf
aas
jmp
mov
clc
mov
scas
dec
movl
inc
nop
sbb
fldl
into
xor
cmpsl
push
jl
xchg
cmp
push
adc
cmpsb
in
sub
sub
xor
inc
mov
or
js
lods
jb
adc
outsl
add
xchg
inc
lret
hlt
dec
dec
mov
xorl
lret
push
sub
jp
jle
jge
mov
dec
sahf
xor
sbb
daa
scas
mov
sbb
sahf
lahf
and
sub
lcall
jb
jns
pop
sbb
loope,pt
or
ss
fxch
and
je
fcmovne
mov
mov
push
adc
dec
sub
xchg
loope
push
mov
data16
adc
push
popf
sbb
out
sbb
mov
dec
cmpsl
aaa
jge
sub
mov
shll
mov
or
inc
shl
test
xchg
add
push
sub
ja
sub
arpl
add
ret
out
gs
mov
scas
push
fwait
inc
pop
jnp
mov
push
aam
mov
cmp
lret
pop
or
arpl
xchg
adcl
pop
mov
pop
pop
adc
cmp
notrack
dec
cld
arpl
sub
sbb
nop
divb
sub
push
mov
pop
das
repz
adc
loop
in
movsb
dec
data16
jmp
sbb
mov
adc
xchg
or
fistl
mov
in
out
pop
jge
enter
popf
repz
out
mov
sub
shl
pop
pop
or
and
fldl
fsts
outsb
push
out
jno
aad
int3
aaa
mov
inc
mov
xchg
icebp
push
dec
dec
push
lods
cld
popa
scas
fcoml
test
repnz
cli
movsl
sbb
in
or
fsubp
lods
stos
movsb
sub
sbbb
pop
repnz
pop
fs
adc
push
push
inc
push
mov
lods
dec
inc
test
psubb
or
push
roll
leave
jle
jge
adc
icebp
mov
sbb
fnstsw
popf
mov
sub
mov
scas
push
ss
lock
int3
std
stos
push
cmpsl
in
sahf
dec
mov
les
mov
lods
imulb
and
cmp
sbb
adc
incl
std
mov
mov
jg
data16
arpl
adc
push
sarb
and
or
pminsw
sahf
aas
jg
lds
inc
jecxz
fsubr
dec
mov
test
xor
xor
xor
imul
push
les
cmp
and
fistpll
push
jge
pop
shlb
rcrl
popa
repnz
mov
adc
sbb
inc
mov
mov
mov
mov
sub
in
dec
out
pop
fistps
bound
push
sbbl
addr16
sub
call
popf
and
inc
xor
loop
leave
xchg
iret
cmp
in
jb
dec
aas
cmpsb
xchg
pop
jb
movups
outsl
into
outsl
lods
ret
ret
scas
mul
pop
icebp
xchg
add
insb
pushf
push
jle
ja
shll
jmp
addr16
daa
add
push
popl
sub
cli
mov
out
in
inc
loop
adc
rolb
pop
sbb
fidivrl
stc
sub
movsb
inc
pushf
sbb
or
pushf
cmp
pop
cwtl
mov
arpl
test
jo
adc
movsl
repz
nop
fstpl
jp
lahf
fmul
ret
and
inc
cmp
ret
jnp
les
test
in
rep
xchg
xchg
adc
xor
dec
lret
dec
mov
xor
cmpsb
mov
stc
sbb
inc
mov
adc
push
in
cmp
push
or
punpckldq
nop
popf
orb
test
into
aam
push
mov
mov
in
popa
inc
mov
pop
lds
dec
mov
loope
int
fwait
adc
jo
adc
lret
es
insl
sub
stos
xchg
jecxz
add
jp
inc
mov
xor
lods
fistl
out
cli
xchg
mov
pop
or
aad
mov
and
paddd
std
addr16
jg
mov
pusha
addb
pushf
cmp
xchg
cwtl
add
aam
jo
jb
pop
cld
test
clc
xorb
outsb
pop
cmp
pop
mov
and
jmp
add
xlat
lret
sbb
sbb
jae
sbbl
push
and
sub
repz
cltd
int3
adc
repnz
mov
xchg
cmp
mov
popa
xchg
or
push
pop
jns
adc
cmp
dec
push
or
jge
cmp
movsb
push
pop
inc
inc
xor
notb
dec
pop
mov
jo
jecxz
lods
pop
pop
mov
dec
lret
cmpsb
cmp
xchg
xchg
mov
mov
aaa
xlat
add
mov
mov
in
aad
add
push
add
add
and
insl
test
push
icebp
push
adc
xchg
cli
dec
pop
imul
test
outsl
ret
lahf
or
add
in
and
pop
inc
xor
ficoml
cmpsb
push
fdivrs
mov
dec
sti
inc
andb
hlt
jge
dec
jae
adc
cmovnp
popa
dec
sub
push
add
push
push
add
jmp
inc
xchg
lea
cs
sbb
cmp
jns
sub
adc
popa
in
jb
jp
inc
and
les
dec
enter
fmul
push
lret
mov
mov
pop
mov
pop
xchg
repz
inc
adc
out
stos
sub
mov
inc
push
sbb
cwtl
add
mov
or
add
je
adc
clc
jmp
sbb
dec
sub
and
push
adc
iret
sbbl
les
ret
or
lret
jnp
out
mov
adc
xor
cmp
mov
xchg
fcomps
int3
xchg
sub
jg
mov
dec
jecxz
jne
jns
adc
mov
lret
and
fs
pop
or
mov
add
into
xor
xchg
lods
sbb
arpl
std
insb
push
repz
jle
mov
cmp
rolb
mov
mov
fsubrl
jmp
xchg
cmp
dec
sbb
pop
lcall
and
xor
add
or
mov
sahf
enter
cmc
bound
mov
test
pop
mov
mov
aam
mov
push
div
cmp
out
xor
mov
mov
test
xlat
call
ret
dec
loope
sarl
dec
lock
enter
add
jns
pop
add
xchg
insl
cmp
xchg
fcomps
push
push
imul
xor
aaa
push
cli
dec
mov
stos
gs
mov
lods
mov
push
sub
test
xor
dec
lods
pop
in
daa
push
inc
adc
ja
shll
or
and
xchg
adc
addl
sti
push
xchg
or
dec
mov
or
dec
sahf
push
popf
gs
aad
mov
popa
mov
cmp
jno
inc
leave
mov
scas
repz
mov
sub
out
sub
adc
push
mov
in
jne
arpl
adc
lock
jl
scas
out
inc
dec
adc
mov
sub
mov
out
in
adc
js
mov
or
loopne
fsts
mov
sbb
std
push
ret
adc
out
aaa
dec
movsl
ds
push
imul
iret
sub
stos
inc
jnp
push
mov
icebp
int3
loope
mov
sub
popf
sub
roll
sti
repnz
es
pusha
mov
nop
hlt
push
sbb
jb
mov
push
fisubl
xor
enter
xor
lcall
pop
bound
es
dec
pop
xor
popa
popf
push
call
mov
iret
mov
cmp
call
cmp
or
inc
popa
into
mov
shll
sub
sub
mov
rcrb
ja
arpl
insb
repz
mov
call
shl
loope
sbb
fists
ret
sbb
xlat
cmp
mov
cli
sbb
call
push
stos
pusha
dec
aaa
mov
push
dec
es
cmc
out
lods
xor
jg
adc
loop
push
adc
daa
lcall
adc
lods
cmp
or
push
add
mov
mov
enter
xchg
shrl
lea
sub
jp
std
shl
lds
mov
daa
push
ret
dec
inc
xchg
in
jg
and
xchg
mov
mov
test
pushf
jno
and
adc
pop
nop
xchg
mov
pushf
sahf
neg
adc
mov
ja
sub
shr
std
sahf
add
das
clc
dec
int3
push
lock
cli
pop
adc
out
inc
pop
mov
aad
fidivrs
mov
imul
aam
negl
and
inc
lods
dec
call
mov
sbb
jb
jmp
out
ljmp
arpl
je
mov
addr16
adc
or
js
into
testb
clc
xchg
sbb
outsl
imul
in
int
out
fmull
jmp
cmp
pop
dec
nop
test
enter
sti
in
lahf
addb
mov
or
ret
mov
cmp
push
mov
adc
sub
sti
jmp
pop
add
mov
out
notb
popa
mov
or
mov
cmp
jecxz
not
add
push
in
push
icebp
cmpsb
mov
icebp
stos
sti
addr16
in
aas
pusha
push
pop
incl
ljmp
xchg
xor
icebp
aas
test
dec
loopne
insl
mov
mov
sub
es
lcall
sbb
movsb
jo
ljmp
add
xor
mov
mov
ret
xor
jno
push
pop
arpl
sbb
je
jo
pop
fs
jnp
sbb
xchg
sub
je
inc
out
push
mov
in
push
out
aas
cmc
insl
xor
mov
dec
inc
add
and
and
aaa
outsl
and
stos
ret
inc
aam
or
sarb
xchg
pop
je
or
pop
loope
add
test
sub
test
jle
inc
fdivp
cs
push
sbb
imul
xchg
push
adc
sbb
inc
lods
aaa
test
cli
shrb
inc
data16
or
nop
ss
jge
out
cmpsl
xor
call
push
xor
loop
mov
pop
xchg
dec
lcall
in
lock
inc
sub
scas
aaa
rol
mov
lea
push
lahf
inc
call
xor
testb
add
mov
clc
push
imul
mov
push
mov
sub
fdivrl
dec
mov
mov
jg
jns
xlat
xchg
lock
test
fistpl
into
arpl
mov
mov
lea
scas
sbb
dec
sbb
mov
sahf
test
xchg
mov
jno
mov
or
and
sbb
xor
sbb
aas
cltd
mov
xor
repz
arpl
loop
iret
mov
pop
aas
pop
sbbl
inc
stc
adcl
add
lea
aad
sub
mov
ds
mov
fadds
mov
sqrtps
jg
mov
xchg
push
cld
sahf
push
pop
into
lret
lcall
call
test
xor
adc
scas
sbb
mov
pop
ror
dec
sarl
stos
jo
dec
popa
popf
sub
mov
push
and
lcall
lods
mov
dec
pop
sbb
pop
or
mov
mov
insl
fstl
jmp
shrb
mov
push
add
mov
mov
fstpl
adc
cs
mov
aaa
fiaddl
js
out
add
sub
and
test
jecxz,pt
test
arpl
dec
and
mov
insl
ljmp
pop
sbb
mov
popf
jle
movsb
mov
xchg
repz
dec
leave
repz
mov
jge
cmp
lret
fstpl
enter
add
inc
cld
imul
jne
add
sbb
into
shl
mov
xor
adc
insb
ret
insb
test
pop
jbe
jbe
adc
flds
xchg
sti
adcl
std
popa
inc
fs
pop
mov
das
mov
rcll
inc
and
push
xchg
dec
and
lds
mov
lods
add
mov
mov
sub
imul
xchg
dec
xlat
mov
push
cwtl
jnp
pop
push
push
out
lea
les
sub
aad
add
adc
int
clc
mov
mov
fcmovnb
sbb
movsb
inc
xchg
push
mov
push
bound
mov
jns
or
sarb
or
mov
sbb
lock
mov
or
cmc
push
cmp
sbb
pusha
scas
push
sbb
xor
mov
test
popf
jae
ret
and
sti
arpl
das
bound
mov
pop
adc
mov
data16
lret
in
cli
imul
adc
js
cmp
out
test
das
push
js
xchg
push
sbb
pop
sub
insl
dec
js
loope
mov
pop
and
sbb
inc
sub
mov
cmc
lods
outsb
dec
xchg
push
ljmp
icebp
or
jnp
or
push
mov
jne
scas
sub
inc
cmpsl
sbb
bound
pop
addr16
jb
xor
mov
mov
cwtl
mov
call
aad
xchg
push
sahf
mov
mov
bound
icebp
add
mov
adc
int3
nop
push
lock
mov
sub
enter
aad
xor
adc
cltd
cmp
cmp
shl
leave
lods
stos
out
cld
movsl
push
mov
and
mov
add
movsl
jb
sbb
outsb
in
hlt
pop
xchg
mov
and
test
idivb
dec
jp
jecxz
mov
adc
jns,pn
push
xchg
pop
ret
or
repnz
inc
xchg
sbb
mov
jb
push
mov
mov
mov
sub
cs
cwtl
popf
es
jge
jb
mov
arpl
scas
cmc
sub
lea
jle
imul
es
and
ja
pop
lds
push
inc
cmp
mov
add
mov
mov
insb
dec
jg
mov
cmc
mov
and
mov
fwait
inc
orb
cwtl
fstpl
mov
pop
test
push
adc
pop
or
dec
add
cmpsl
insb
dec
add
adc
enter
or
rorb
scas
cmp
push
pop
sahf
xor
push
mov
dec
std
jb
dec
sub
lret
push
jno
cli
stos
dec
or
or
inc
or
hlt
push
leave
mov
jmp
scas
into
movsl
sub
sbb
in
dec
insb
movsb
and
xchg
mov
cmp
lret
out
mov
xor
and
add
push
or
dec
clc
dec
jae
lcall
addr16
int3
fldt
add
push
dec
and
dec
arpl
cmc
and
inc
jno
icebp
xchg
jbe
xchg
push
push
jmp
push
jbe
repnz
sub
jbe
sub
push
aaa
pop
rorl
push
and
test
fldl
leave
mov
pop
movsl
mov
arpl
pop
inc
push
sub
mov
sti
ret
jo
add
insb
pop
xor
xchg
inc
mov
das
mov
call
add
or
stos
jecxz
pop
mov
xchg
int
inc
popf
jae
pop
dec
jo
push
or
out
shl
mov
jnp
add
outsb
adcl
stos
es
cs
out
sub
jp
mov
mov
sub
lcall
mov
jge
pop
cmp
data16
insb
sbb
push
test
clc
fnstenv
call
sub
mov
mov
fcoml
mov
mov
xor
mov
xchg
shrb
call
popa
sbb
and
mov
adc
call
adc
mov
add
or
sbb
lret
push
jecxz
in
inc
fs
daa
jns
mov
cmpsb
subl
ljmp
jae
and
mov
mov
jge
mov
xorb
or
push
sub
data16
xor
adc
fsubl
aas
push
push
xchg
cmp
aas
pop
fstpt
cmp
pop
pop
lds
pop
shl
push
pop
in
xor
andl
adc
sub
push
mov
test
push
sbb
enter
or
shrl
adc
shrl
movsl
in
sti
fcmovnb
add
xor
pop
add
xchg
js
ljmp
mov
rcll
mov
cmp
loop
pop
cmc
sub
sub
pop
div
cmp
add
xor
ds
icebp
jae
shrl
push
out
jg
adc
sub
fadds
aaa
lds
or
sbb
rcrl
nop
or
lea
leave
xlat
xchg
mov
lods
int
jl
iret
jae
sbb
push
xrelease
fnstsw
push
mov
xchg
mov
dec
in
call
in
adc
sbb
or
dec
sbb
aaa
push
jae
outsb
jno
mov
icebp
call
add
add
mov
adc
loopne
push
ffree
adc
xchg
jp
sahf
std
sahf
cmpsb
punpckhwd
jb
inc
or
jp
into
pop
ljmp
call
in
add
lods
fists
cmpsl
cmp
adc
loopne
or
dec
fdiv
gs
jle
add
in
adc
gs
sub
fnsave
jle
in
js
push
cmp
xchg
fdiv
stos
mov
sub
pop
fucomi
int3
mov
sub
and
mov
xchg
cmp
xor
inc
jl
mov
stos
std
bound
xchg
cmpsb
adc
xor
stos
ret
sbb
rolb
insl
mov
in
add
sub
mov
adc
jo
xchg
fbld
jne
ja
dec
iret
pushf
out
cmp
jge
stc
push
cmp
stc
inc
jle
mov
rcr
push
adc
mov
cmp
loope
ja
je
pop
mov
outsl
mov
ds
cmp
sub
adc
mov
push
ror
push
adc
and
lret
iret
outsl
or
jae
or
ja
lret
sbb
push
mov
push
mov
or
ss
cmpsb
xchg
popf
outsl
push
sbb
mov
lea
repz
in
inc
xchg
cmpsb
outsb
jmp
in
adc
mov
pushf
jb
loope
inc
outsl
call
inc
mov
jne
insl
mov
cmpl
in
in
pusha
sub
pop
push
lcall
mov
aad
lods
cmc
pop
pop
mov
and
iret
test
scas
mov
and
fstpt
std
xchg
in
inc
mov
and
daa
in
jle
test
icebp
popa
pop
mov
fldcw
pop
sub
jo
dec
roll
or
push
mov
rolb
push
inc
inc
out
iret
cmc
iret
add
dec
data16
cmp
cli
mov
je
push
sbbb
add
adc
out
fiadds
dec
mov
pop
pop
xor
mov
jb
jecxz
shl
fisubl
jl
xor
pop
cli
inc
xor
aaa
scas
das
or
lods
mov
ss
gs
or
push
dec
pop
xlat
or
pusha
cmp
call
fidivs
movsl
add
cmc
loop
or
dec
notb
ficoms
loopne
pop
jae
pop
cli
imul
mov
aas
mov
sbb
jp
lods
adc
mov
pop
dec
dec
ret
sbb
out
idiv
xchg
dec
mov
pop
inc
call
sbb
push
add
jle
mov
pushf
inc
cmp
loop
pushf
mov
sub
and
or
test
adc
or
sbb
mov
and
mov
and
and
negb
dec
icebp
dec
or
cmp
adc
inc
dec
sbb
and
mov
inc
mov
sub
xchg
jo
repnz
shrl
push
inc
mov
jecxz
mov
adc
push
fbld
adc
popa
mov
int
stos
es
inc
repz
mov
fcmovu
xchg
cmpsl
mov
jnp
jb
cltd
push
pusha
clc
xchg
test
cwtl
mov
cmp
test
inc
add
mov
sti
mov
mov
push
sub
into
cld
shl
mov
xchg
adc
imul
out
cld
test
push
cmp
iret
shll
gs
inc
xchg
stos
insl
cmp
pop
jbe
inc
xchg
inc
dec
idivb
mov
jp
push
xchg
and
cmp
or
xchg
pushf
mov
out
andb
xchg
cmp
push
imul
aam
cmp
jmp
fidivl
je
test
dec
dec
faddl
insl
inc
test
dec
outsb
push
mov
mov
inc
les
and
cmp
lahf
aaa
out
je
sbb
sub
sahf
std
mov
jge
mov
xchg
mov
mov
or
icebp
jge
mov
sbb
and
jmp
das
adc
mov
bound
cld
in
cmp
repnz
rcl
cmpsl
outsl
data16
adc
add
out
hlt
cli
jne
shrl
pop
and
cmp
xchg
xchg
leave
jecxz
sub
js
mov
xor
xor
loope
cmpsb
daa
sub
cmp
lods
ja
rdtsc
repnz
addr16
ret
cmc
js
cmp
test
aad
lods
pusha
scas
xlat
push
mov
and
int3
or
mov
xor
punpckldq
mov
push
shlb
cmp
outsb
insb
imul
fsub
stc
push
dec
xchg
pop
dec
loop
cmp
pop
js
test
pop
cmp
ja
pop
stos
into
xor
mov
mov
stos
and
fdivr
or
mov
movsb
push
jge
cs
xor
jo
aam
xor
jae
stos
popf
lret
ret
push
adc
pop
fldenv
push
sub
add
out
shll
les
stos
loope,pn
push
inc
push
and
sbb
fwait
mov
xchg
xchg
test
cmp
nop
add
sbb
sub
jae
pop
xor
mov
mov
sbb
mov
adc
xor
xor
jecxz
bound
stos
sub
icebp
hlt
mov
scas
xchg
jecxz
xchg
or
push
push
adc
iret
rorb
shlb
imul
mov
mov
cmp
sub
enter
ljmp
pop
arpl
ljmp
adc
cmp
push
mov
sbb
rcrl
bound
enter
aaa
sbb
mov
mov
int3
ret
out
aam
mov
mov
xor
mov
or
add
aaa
std
pop
xchg
cmp
push
stc
sub
lcall
lret
int
movsb
mov
and
out
aam
inc
mov
lret
jne,pt
loopne
jno
xchg
fs
push
mov
cli
out
out
cmpsb
and
cmp
push
add
les
mov
daa
repz
ja
mov
sbb
add
or
pop
mov
and
xor
jne
mov
lret
lea
movsl
push
cmp
fcoms
xchg
or
push
jo
int
mov
mov
pop
push
push
in
xor
imul
jle
sub
mov
sbb
jno
sbb
pushf
cmp
sbb
lods
mov
and
movsl
sub
icebp
in
gs
imul
cwtl
jne
int
scas
pop
push
sub
imulb
std
jge
jg
out
aam
div
cmp
jge
hlt
sbb
or
inc
neg
ds
fisttpl
xor
aad
jp
push
jp
fnstsw
pop
andl
xchg
cmpsl
sbb
dec
lcall
test
stos
stos
cmp
push
adc
sbb
test
mov
stos
mov
imulb
push
popa
add
xor
xor
mov
xlat
xchg
or
mov
aaa
roll
pop
sti
xchg
or
shl
cmp
push
fwait
and
out
das
inc
icebp
mov
xchg
paddq
mov
inc
add
mov
add
test
xchg
mov
and
mov
out
push
pop
sub
cltd
push
mov
add
cld
fsts
mov
pop
jbe
popf
jns
mov
ret
daa
and
pop
mov
mov
mov
out
lods
negb
lods
pop
mov
vpextrw
mov
mov
cmpsl
lret
fidivs
cmp
mov
mov
add
nop
mov
out
mov
mov
lods
jnp
lret
mov
push
lods
and
mov
pop
jl
pop
roll
adc
push
dec
xor
test
icebp
jbe
inc
popa
cltd
xchg
cs
iret
xor
mov
dec
popa
xlat
test
lcall
pop
ret
jp
scas
adc
xor
dec
in
and
adc
test
inc
lcall
xlat
fistpl
inc
cmp
popa
mov
fdivl
xchg
fs
imul
mov
xchg
jbe
pop
mov
sti
adc
cltd
dec
sti
or
adc
pop
scas
ret
xor
ret
mov
lret
mov
sub
divl
jge
cwtl
mov
pop
adc
or
sub
jmp
orl
cmp
mov
push
sti
cmc
inc
sub
outsb
ret
xchg
jl
dec
cld
cli
cmc
sbbl
inc
hlt
aas
cld
lahf
loope
shrb
cs
test
lock
std
push
scas
adc
std
repz
sub
out
push
sbb
sbb
push
xor
cltd
movsl
addr16
jo
lahf
cmp
shl
andb
in
jns
mov
fs
test
cmpsb
mov
lret
cmc
sbb
loop
stos
add
lds
sub
pop
sbb
xchg
fwait
push
cmp
xor
in
loop
add
push
mov
push
jns
xchg
ljmp
sbb
inc
sahf
sahf
push
mov
xor
clc
and
int
mov
mov
push
sub
jmp
add
or
lock
mov
push
dec
pop
jb
scas
push
mov
and
xchg
lock
fst
xor
add
hlt
rorl
adc
inc
mov
lods
fsubrs
cmp
or
adc
call
ss
sahf
movsl
out
fsubr
test
sbb
je
jb
idiv
xchg
imul
cmp
daa
adc
cld
or
mov
or
daa
fucomp
push
cmp
scas
flds
jbe
lods
sbb
add
push
jbe
push
testl
xchg
mov
insb
test
push
leave
mov
pop
cltd
push
pop
test
out
pop
lds
fisubs
cmpsb
xor
adc
movsl
lds
mov
mov
hlt
and
add
fmul
mov
pop
out
test
in
movsb
dec
notb
pop
js
aad
jl
outsl
cmp
push
fs
and
je
dec
xchg
notb
add
insl
dec
icebp
and
cli
daa
sub
out
inc
outsb
leave
setnp
stos
mov
dec
stc
mov
shrl
jl
mov
insl
adc
dec
mov
xor
mov
out
mulb
rolb
dec
sub
shl
js
cmp
ret
pop
sub
xor
or
lret
gs
ljmp
push
out
adc
mov
jnp
je
outsb
inc
incb
and
mov
mov
stos
jecxz
cmpb
dec
addl
lods
adc
push
in
lahf
jne
sbb
xchg
inc
cld
sahf
adc
mov
xor
xchg
xor
outsl
cmpsl
or
or
stc
stos
or
dec
mov
cld
rclb
fcoms
xor
mov
jb
adc
cmp
imul
and
dec
lcall
in
daa
cmp
mov
inc
das
repz
shrb
insl
sub
push
repnz
fdivr
ds
xchg
pop
jecxz
mov
sahf
ja
sbb
shlb
jl
enter
xchg
jns
push
mov
mov
inc
std
xor
insb
sahf
push
adc
or
mov
imul
out
and
cmp
push
subb
fnstsw
add
stos
das
jmp
inc
add
and
mov
popf
or
adc
aas
shl
ficompl
add
dec
push
shll
sub
mov
or
or
xchg
or
push
push
mov
cmp
mov
movsb
test
push
inc
ja
and
in
pop
aam
or
inc
sbb
pop
dec
cltd
sub
push
mov
xchg
mov
in
xchg
add
fs
fdivp
add
test
in
inc
movsl
pop
ret
ficomps
aas
dec
shll
cs
xor
xor
stc
scas
sahf
ret
ljmp
mov
out
arpl
mov
add
mov
adc
pop
hlt
out
movsb
mov
mov
js
addb
add
cmp
jo
popf
xchg
sarb
imul
cwtl
loope
mov
das
mov
adc
and
movsb
xchg
lock
test
das
mov
pusha
in
sbb
stos
test
pop
ret
fildl
jbe
aam
mov
mov
cmpsb
enter
sub
sbb
adc
bound
push
add
jnp
add
dec
mov
adc
sbb
mov
sub
pop
movsb
add
loop
call
gs
add
test
js
jo
and
jnp
mov
and
add
mov
xlat
dec
lods
mov
hlt
xchg
push
xchg
clc
and
xchg
mov
out
mov
popl
scas
cmp
mov
imul
out
outsl
cmp
sub
mov
clc
icebp
ja
push
aas
cmc
jg
aam
lahf
lods
repnz
and
int
loope
pop
fcomps
xchg
shll
mov
cmpsb
xchg
adc
lret
pop
mov
fldenv
das
cmp
aad
sub
pusha
mov
pop
mov
popa
adc
popf
test
inc
add
mov
test
loopne
push
bound
outsl
cmpsl
sbbl
daa
popf
popa
mull
fildl
mov
sub
mov
adc
sbbl
pop
sub
jo
in
aas
cmp
adc
dec
lods
mov
pop
mov
pushl
cmc
movsl
pushf
iret
ljmp
in
cmpsb
fisubl
mov
shlb
sub
pop
iret
and
push
xchg
into
mov
push
sub
jne
mov
out
in
loopne
jae
jne
sub
lret
and
ja
mov
std
cmp
lret
stc
pop
daa
and
and
push
repnz
out
aas
dec
fldenv
imul
add
cmp
push
mov
lret
add
pop
loopne
stos
push
xchg
hlt
pop
mov
pop
cwtl
mov
push
repz
gs
enter
cld
xchg
adc
sub
lods
mov
mov
bnd
sub
scas
popf
mov
shll
lret
sbb
xor
and
insb
cmpsl
out
push
mov
push
insl
adc
lret
jge
cmp
add
adc
out
and
xchg
mov
add
in
xchg
push
push
inc
cmp
jl
outsl
ljmp
xchg
fisubl
mov
popa
inc
mov
cltd
cld
cmp
fists
xchg
xor
or
scas
dec
push
jp
orb
sbbb
out
jnp
cwtl
mov
push
xor
clc
and
adc
xchg
add
mov
rcll
cmc
ficompl
int
sub
pop
inc
xlat
imul
sub
outsb
mov
das
mov
inc
jbe
addr16
pop
lahf
inc
ljmp
push
aad
jo
jg
into
dec
arpl
inc
sub
mov
mov
dec
xchg
or
call
cmpsb
dec
sub
movsb
push
or
and
mov
add
lret
adcb
sbb
divl
push
fadds
test
test
push
shl
and
xor
lods
push
mov
jo
lods
ds
cltd
xor
lods
jg
imul
int3
or
mov
loopne
adc
into
jp
fmull
lret
inc
or
and
enter
faddp
jne
pop
nop
cmp
movsb
jae
pop
insb
sahf
jmp
stos
or
ljmp
nop
sahf
jns
out
daa
pop
jmp
jl
push
test
mov
mov
add
inc
sbb
outsb
mov
sub
jg
test
or
test
aam
idiv
daa
xor
jae
decl
jbe
lret
rcll
clc
mov
mov
fisttps
ffree
lods
inc
es
sub
cmp
mov
push
fsubr
xor
sbb
inc
mov
out
add
or
insb
nop
inc
mov
push
adc
jne
xor
xorb
push
add
divl
sarb
ss
adc
scas
pusha
retw
or
push
sti
repnz
inc
pop
push
hlt
cmc
nop
rolb
mov
mov
inc
jecxz
xchg
pop
mov
push
inc
xchg
cmp
stc
jb
jo
sbb
shlb
sahf
push
neg
icebp
add
or
adc
imul
lds
mov
rcll
sbb
cwtl
jo
mov
push
rolb
adc
movsb
int3
mov
mov
in
imulb
pop
cli
das
sub
sarl
ds
ja
xchg
call
cli
lret
sub
popa
sub
rcrl
inc
mov
hlt
inc
ret
pop
xchg
sub
dec
add
test
mov
push
mov
xor
mov
add
sub
cmpsl
lds
movb
inc
repnz
xor
popf
mov
insl
bound
stc
or
filds
into
push
fldenv
std
cli
ss
xchg
and
inc
dec
inc
lock
leave
pop
jg
std
cmp
pop
xchg
addr16
push
xchg
inc
dec
mov
push
pop
test
loope
jle
mov
xchg
jp
xor
cmpsl
add
cmp
stos
push
xlat
aaa
jecxz
push
pop
adc
jecxz
call
xor
add
mov
dec
mov
mov
jge
or
xor
xchg
pop
lds
jae
jns
popa
push
xor
xchg
mov
mov
mov
cwtl
ljmp
sbb
js
jmp
jb,pt
pop
lods
and
mov
sbbl
leave
ljmp
lahf
or
xchg
inc
and
idivb
aam
outsb
jmp
push
mov
dec
sub
jmp
push
fcmovb
xchg
mov
nop
packuswb
jle
pop
addr16
sub
xchg
sarl
xchg
and
das
adc
xchg
mov
and
xchg
es
jl
shll
xor
xchg
shlb
icebp
in
cmp
popa
icebp
imul
test
aas
sub
cmp
xchg
mov
arpl
test
sbb
std
inc
pop
fsubl
ljmp
mov
mov
cmp
push
int
add
test
push
mov
leave
sbb
jecxz
pop
cld
btc
xor
je
xchg
mov
dec
mov
cmp
popw
push
adc
dec
xchg
ret
add
and
mov
cld
jno
fisubrs
mulb
test
cltd
sub
dec
push
iret
outsb
inc
in
push
xchg
adc
sbbl
iret
repz
or
jb
inc
lcall
iret
cwtl
push
mov
cmp
mov
jmp
push
cmpb
add
jo
jmp
xchg
in
fimull
pop
mov
imul
arpl
lods
aam
push
push
jno
push
push
jecxz
cmp
dec
mov
and
ljmp
jb
subb
mov
sahf
mov
in
leave
push
int
xchg
and
mov
add
mov
leave
adc
adc
ret
and
sbb
inc
xchg
dec
jns
sbb
mov
dec
std
adc
andl
sub
pop
xchg
xor
je
push
fwait
arpl
pop
in
incb
and
pop
or
pop
in
in
mov
xchg
loop
xlat
and
adc
loopne
js
and
mov
cli
in
jno
lahf
popl
imul
mov
and
xor
nop
mov
loopne
jmp
mov
pushf
jb
insl
jo
rorl
call
subb
inc
ret
in
pop
jb
inc
xchg
lea
and
cmp
hlt
lock
lock
test
lahf
or
ja
leave
sub
out
orb
adc
mov
mov
pop
out
rclb
ret
mov
lahf
xchg
arpl
cmc
add
lds
loope
lods
sub
out
sbb
adc
xor
mov
xor
daa
dec
jp
mov
dec
mov
cmp
mov
cmp
es
jg
in
mov
sub
xor
popf
in
sub
add
rolb
shlb
ret
pop
into
inc
jp
lahf
pop
outsb
jno
adc
inc
lods
shl
pusha
mov
and
das
inc
lds
ljmp
mov
cltd
push
call
stos
cltd
clc
or
jecxz
into
call
cmpsb
lahf
lcall
mov
pop
jge
add
or
cmp
inc
jge
xchg
pushf
cmp
pop
dec
inc
shlb
inc
sub
add
icebp
fadd
mov
dec
and
xchg
movsl
jmp
lahf
ja
mov
mov
dec
xor
mov
xor
sahf
jae
sahf
sbb
into
add
in
push
insb
out
fldenv
push
stos
test
dec
mov
insb
sbb
pop
jne
test
push
daa
fsubrs
adc
sahf
inc
sbb
cs
mov
mov
dec
cmc
dec
ret
mov
filds
fldcw
divb
pusha
dec
iret
cmovb
dec
adc
push
push
xor
loop
xlat
jp
xchg
mov
cmp
inc
mov
insl
add
push
mov
gs
sub
and
dec
mov
inc
xor
rcrl
jns
xlat
aaa
sub
addl
fstl
mov
mov
jnp
in
test
add
jg
fdivrs
ds
lds
or
add
mov
in
frstor
fnstcw
cmpsb
popf
dec
fbld
lcall
lods
inc
mov
mov
into
or
ficomps
mov
dec
std
test
adc
mov
xchg
pop
loope
icebp
mov
xchg
call
das
push
dec
push
xchg
lock
and
jp
or
jmp
flds
jge
lahf
adc
arpl
faddl
xchg
dec
or
ljmp
jg
xchg
jg
gs
push
mov
mov
aaa
ficoms
popa
loopne
adc
rorl
jl
loope
inc
leave
gs
mov
cld
add
ret
subl
add
xchg
sub
sub
das
incl
and
stc
nop
mov
es
lret
gs
add
int3
outsl
gs
sti
ret
enter
cmp
inc
mov
pop
and
jle
shll
dec
repz
mov
aaa
scas
fmulp
cmpb
inc
and
fisttps
aaa
dec
pusha
push
mov
mov
in
in
sub
jne
lcall
dec
or
int3
sbbb
mov
lock
mov
sbb
xor
aad
add
push
pop
and
sbb
sub
mov
mov
fadds
jp
dec
or
sti
daa
mov
mov
dec
sub
cli
xor
pop
cmp
lcall
push
sbb
jns
adc
mov
push
and
jno
das
ja
mov
inc
xor
adc
mov
imul
mov
mov
jp
xchg
jae
pop
xchg
pop
pop
push
mov
push
popl
shlb
push
jno
lret
push
or
inc
xlat
adc
or
outsl
push
mov
scas
mov
cmc
add
sbb
repnz
ret
cli
fs
out
pop
test
int3
lods
lods
shll
xor
cmp
imul
cmp
jae
sbb
pop
sbb
cmpsl
jmp
lret
aam
mov
sbb
jmp
call
push
and
jp
cmp
push
mov
or
dec
stos
shlb
push
push
xchg
psadbw
add
push
lock
sbb
and
mov
bound
push
pushf
mov
nop
notl
test
xchg
pushf
or
mov
push
pusha
mov
cmovne
ljmp
mov
sub
xchg
mov
pop
pop
outsb
xor
dec
pop
gs
jne
je
lock
adc
mov
or
popa
out
insb
cmovs
cli
shlb
lods
popf
xor
js
fdivp
add
lods
push
aad
int3
out
jns
loop
mov
rcrl
lcall
outsl
fcmovnu
dec
cs
jbe
inc
js
lret
cmp
ficompl
ficompl
mov
popa
add
fucom
lods
inc
jno,pt
cmp
lea
loop
xchg
sub
and
cmpsl
fmull
or
jae
cmp
js
jl
mov
mov
mov
push
mov
or
mov
cmp
add
cwtl
jg
or
xor
imul
jle
xchg
jl
fst
hlt
add
sbb
lea
dec
mov
push
jmp
xlat
mov
or
sti
dec
inc
bound
pop
adc
xrelease
xchg
sbb
sub
adc
adc
fildl
push
mov
adc
cmp
inc
mov
ja
fwait
call
sub
ss
hlt
pop
mov
negb
fildl
fninit
rcrl
popf
shl
imul
leave
and
mov
jns
sbb
or
dec
xchg
or
mov
and
nop
mov
inc
mov
std
mov
or
cmp
je
popf
push
std
push
or
jne
rorb
push
fbstp
cld
jne
mov
std
outsb
and
arpl
hlt
adc
aad
xor
mov
int
cli
jp
push
mov
or
imul
enter
xchg
dec
and
mov
sbb
pop
enter
jle
mov
jmp
mov
pop
dec
cmp
pushf
pop
ljmp
subb
test
mov
pop
cmp
aad
sbb
mov
ljmp
cmp
push
insb
jnp
lods
bound
adc
mov
mov
push
addr16
addr16
push
pop
sub
mov
repnz
aad
jmp
or
push
loopne
leave
inc
lods
les
inc
sarb
aam
lock
sbb
cwtl
loop
add
nop
scas
lret
bound
rorb
inc
mov
add
shrl
push
pop
adc
lcall
nop
stos
cmovns
fstps
out
mov
in
sub
xor
out
lret
stc
cltd
cmpsb
int
pop
sarl
int3
add
jecxz
in
cmp
push
xchg
jae
add
sbb
xchg
stc
into
jne
imul
xor
cltd
add
nop
jle
push
or
leave
push
aam
sub
mov
mov
out
jnp
int3
and
push
push
fdiv
dec
and
xlat
popf
xor
call
xlat
and
inc
loopne
mov
and
mov
aas
sub
jl
rorb
pop
mov
xor
jge
int
and
into
lret
lods
nop
in
add
mov
popa
mov
dec
mov
jno
addr16
int
daa
jbe
movsb
lea
mov
insb
sub
add
inc
test
push
mov
mov
inc
mov
scas
into
je
adc
lahf
imulb
push
fsubrl
fs
ds
jne
outsb
add
arpl
cmp
add
or
cmpsb
shrb
aad
xchg
in
out
fldl2e
mov
enter
cwtl
cltd
ja
mov
mulb
mov
roll
mov
in
lods
lahf
pop
mov
das
sub
cmp
js
pop
call
subb
aam
dec
das
pop
jns
fcoml
in
decl
and
jg
xchg
out
cmp
aad
fcoms
lods
add
pop
lcall
adc
stc
imul
dec
dec
xorb
inc
dec
xor
movsb
jmp
out
inc
aad
cmp
xchg
cmp
mov
jb
adc
mov
pop
mov
scas
or
add
or
lods
lret
pop
stos
mov
jo
pop
lock
filds
or
push
aas
nop
push
or
std
test
sub
adc
inc
loopne
adcl
dec
add
or
outsl
mov
xchg
incl
imul
ljmp
dec
dec
rsqrtps
mov
and
jmp
dec
push
loop
outsb
adc
xor
repnz
mov
js
xor
and
int3
roll
imul
or
cmp
mov
mov
out
mov
addb
in
pushf
jle
mov
lds
inc
fdivrp
jecxz
psubsw
lock
addr16
sub
xchg
rorl
pop
lret
fldcw
ret
jle
push
pop
or
pop
jp
cwtl
xchg
push
in
cwtl
fldcw
mov
jo
adc
xchg
les
imul
push
cli
nop
mov
leave
insl
aam
mov
sub
or
shr
adc
dec
mov
lock
sub
push
dec
test
mov
push
push
into
ja
aad
jnp
sub
sub
push
stc
insl
jecxz
xchg
cmc
rcll
push
mov
push
mov
bound
xchg
xchg
lods
inc
push
mov
dec
dec
bound
push
push
or
dec
sbb
cmp
clc
ret
lret
sub
into
sub
sub
iret
out
or
add
movsl
in
cwtl
adc
les
dec
mov
outsb
out
pop
add
mov
enter
pop
push
and
std
push
dec
sahf
mov
in
inc
sbb
inc
cld
mov
ja
stos
repnz
ret
inc
fs
xlat
in
and
mov
lds
and
popa
jmp
pop
ret
cltd
cmpsb
imul
mov
mov
sub
push
mov
std
adc
orb
addr16
int
mov
push
sbb
xor
js
xor
push
into
and
mov
jge
popf
cltd
pop
jle
dec
sbb
movsl
sub
lds
mov
pop
decb
xor
ret
jno
push
sbb
dec
fcom
bound
mov
push
fcoms
push
push
in
cltd
xor
sarb
es
fidivrs
push
out
or
sti
arpl
ret
aad
scas
push
mov
cmc
data16
testb
shll
mov
stos
gs
call
lods
call
lods
mov
jp
xor
int3
xchg
popa
dec
in
in
cmpsl
mul
or
je
lea
sbb
cmpsb
sbb
cmc
jg
push
fs
xchg
fs
loope
mov
xchg
lea
push
outsb
clc
xchg
insb
fwait
sub
mov
adc
and
data16
xchg
mov
ss
iret
jp
xor
mov
loopne
inc
sbb
xchg
das
rclb
rolb
push
xorl
lock
pop
xor
adc
mov
xchg
mov
sbb
mov
std
xor
cmp
dec
mov
inc
mov
pop
jp
insb
xor
mov
cmc
xor
and
cmp
mov
mov
dec
sub
or
dec
push
jns
mov
popa
pusha
adc
sti
sbb
testb
popf
ret
loope
cmp
cwtl
cmp
jp
int3
mov
xor
outsb
xor
cs
int3
in
push
inc
test
test
inc
push
ljmp
fisubl
fwait
xchg
stos
ret
in
dec
jae
ja
or
push
jno
cmpsb
es
inc
xor
jne
fisttpll
inc
cld
push
mov
pop
bound
stos
cli
gs
sub
jnp
divb
xor
add
into
shll
pop
cmp
clc
imul
mov
mov
dec
sbb
xchg
push
or
adc
or
sbbb
adc
outsl
das
imul
and
mov
iret
ss
fxch
out
jns
jmp
mov
push
mov
outsb
xor
adc
out
mov
pop
add
jge
loop
cwtl
inc
cmpsb
add
popa
push
aas
inc
sbb
das
ljmp
in
adc
push
int
aad
or
cltd
push
aam
ljmp
mov
xchg
sub
das
push
lret
mul
shrb
mov
push
ja
mov
push
fldcw
les
int3
add
mov
loopne
imul
lahf
mov
and
gs
push
insl
push
fildl
push
sub
pop
xchg
movsb
icebp
std
pop
and
lret
mov
je
xorb
orl
or
inc
ds
push
sub
cs
stos
mov
sbbb
xor
das
or
or
sub
ds
stc
ficoml
cmp
sbbl
cmpsl
mov
je
push
mov
cs
sbb
test
arpl
das
cmpsb
repnz
inc
lret
loop,pn
mov
je
jp
mov
add
xor
add
push
fbld
test
pop
or
mov
mov
mov
dec
jge
pop
std
fldt
mov
sub
mov
inc
xchg
jp
sbb
incl
int
out
iret
lds
fs
ss
arpl
shrl
add
sbb
jne
orl
xor
int3
rolb
jmp
scas
pop
inc
in
lea
repz
ret
enter
mov
sbb
loop
stc
push
pop
mov
shr
cmpb
mov
sub
adc
cli
and
push
icebp
testl
xchg
push
ret
cmpsb
mov
test
or
negl
push
out
pop
pop
int
sbb
mov
jle
sub
adc
dec
fadds
jno
pop
xchg
test
push
sub
in
pop
sbb
sbb
sahf
lret
inc
push
mov
or
push
je
cmp
mov
pushf
xchg
adc
cmc
js
sar
inc
rorb
push
sti
scas
mov
xlat
sbb
cmp
or
call
and
jge
push
in
mov
jae
scas
xchg
mov
cmp
xor
mov
iret
xchg
ljmp
das
lds
rcrl
sbb
xchg
pusha
xchg
jno
mov
notb
push
cmp
push
xchg
int
inc
fidivrs
shl
lret
call
xchg
dec
repnz
call
add
out
mov
add
add
jl
subl
sahf
push
mov
aam
jecxz
xchg
test
shrb
push
and
dec
hlt
mov
xchg
shl
jecxz
mov
int3
add
dec
ret
cmpsb
nop
dec
je
ss
and
sub
jecxz
aad
test
and
inc
push
adc
stc
sbb
ret
jno
popf
push
adc
gs
js
push
jmp
push
or
mov
xor
rcrl
mov
cmp
add
adc
add
dec
scas
loopne
mov
sub
insb
cmp
xor
es
out
push
push
shrl
out
mov
push
and
xor
mov
lds
orl
sbb
xor
shrb
push
push
and
andl
mov
mov
popf
cmc
in
mov
cmpsl
dec
int3
les
xchg
bnd
adc
jnp
sbb
into
sahf
jge
pop
lds
cmp
or
mov
sub
xchg
adc
int3
shrl
push
pop
scas
and
mov
pop
sub
mov
lcall
nop
mov
jo
pop
xlat
push
lret
push
pop
dec
mov
mov
and
lret
adc
mov
cmp
jg
daa
out
test
dec
jnp
sub
sbb
int
fadd
sub
xorl
pushf
cmp
scas
sbb
push
out
jecxz
or
jb
movsl
sub
cmp
adc
push
data16
cs
or
mov
outsb
pusha
mov
push
ja
dec
arpl
test
insl
aad
cld
daa
stos
mov
icebp
arpl
pop
xchg
xchg
sbb
mov
movsb
inc
sbb
push
push
ljmp
call
pop
pop
sbb
lods
xchg
inc
push
or
mov
aad
push
pop
ds
mov
push
sub
inc
adc
inc
push
icebp
sbb
xchg
pop
out
imul
fdivs
mov
loop
and
adcl
jo
sbb
outsb
xchg
xchg
adc
movb
adc
cmc
int
mov
dec
pop
mov
ljmp
mov
decl
or
push
repz
adc
lds
push
lods
xor
xchg
push
cmp
insl
pop
jecxz
lods
jp
les
mov
iret
divl
add
inc
repz
and
fdivrs
jle
add
add
cmp
adc
test
shll
ds
imulb
mov
addl
sbb
cmpsl
jp
dec
mov
push
mov
mov
subl
sbb
push
es
faddl
hlt
mov
mov
sub
adc
daa
call
mov
mov
sbb
stos
push
pop
dec
dec
fs
adc
adc
jg
mov
adc
out
addb
mov
popa
testl
or
nop
xchg
and
xchg
pop
mov
in
or
imul
scas
jecxz
add
ja
lods
and
mov
imul
sbb
insl
or
rcrl
das
ljmp
ds
cmpsl
adc
cmp
enter
pushf
push
jge
je
out
test
push
rorb
das
movsb
pop
pop
push
data16
fiadds
in
or
push
inc
lret
ds
cmpsb
adc
sbb
jns
mov
push
stos
dec
aas
or
sbb
mov
cli
mov
mov
pusha
repnz
je
xor
push
xchg
jmp
popf
mov
pop
es
and
test
fstl
fsts
into
bswap
das
sarl
dec
cmpsb
int
push
imul
mov
iret
inc
cmpsb
inc
xchg
fstpt
push
sbb
rorb
cli
sahf
sti
js
scas
jae
hlt
lahf
lret
cmc
loop
cmpsb
sub
mov
sbbb
in
fisttps
sub
out
mov
repnz
into
hlt
mov
and
mov
inc
movsl
add
push
mov
lcall
pop
push
adc
xchg
push
shlb
leave
mov
xchg
mov
xchg
ret
into
in
rorl
gs
jmp
cmpsl
jb
sub
popf
data16
inc
pop
pop
pushf
mov
or
nop
adc
lock
and
dec
sbb
cmp
testb
mov
nop
sbb
cwtl
sbb
lea
push
imul
xchg
imul
and
push
aaa
pop
aas
push
add
jne
loope
data16
xchg
shlb
xchg
sub
pop
sub
or
subl
add
xor
rorl
sub
test
adc
lods
das
std
pop
ficoml
dec
or
daa
fidivs
lret
popa
or
mov
aad
push
mov
dec
imul
push
insb
stos
int3
pop
ljmp
cmp
clc
mov
sbb
out
and
jnp
neg
fwait
jnp
mov
stos
inc
push
rorb
pusha
arpl
and
xchg
xor
dec
jae
xchg
pushf
clc
mov
dec
and
push
test
jbe
jp
jmp
mov
push
call
xor
cld
mov
sub
shrl
inc
movsl
ja
dec
add
adc
mov
stos
sub
cmp
pop
int3
mov
dec
jnp
mov
add
jo
mov
lret
pop
mov
pop
mov
and
mov
xor
xorb
cli
popa
lret
test
rorb
jnp
mov
cmp
jl
scas
cwtl
scas
jp
lea
into
lret
inc
ja
pop
shr
sbb
mov
jecxz
ds
in
dec
hlt
out
or
inc
mov
lcall
lret
jl
cmpsl
loop
inc
xchg
iret
sbb
adc
or
sub
jg
pusha
aad
jne
lods
jnp
or
shll
jg
insl
aas
clc
scas
lea
leave
add
mov
aaa
add
cli
cs
ds
sti
leave
mov
cltd
orb
ficoms
jbe
leave
ror
imul
lahf
lods
icebp
cmpsl
loop
dec
fidivrl
sub
xchg
inc
test
push
inc
in
lock
mov
sub
cwtl
pop
cmp
and
push
popf
push
add
out
add
loopne
xchg
mov
fcoms
stc
addr16
sbb
out
inc
mov
fistpll
xor
shll
shr
push
in
mov
lcall
pop
cmp
dec
xor
cmp
out
cmp
in
scas
ret
fldcw
inc
mov
pop
push
xlat
mov
pop
movsb
rclb
cmpsb
insl
icebp
iret
ds
add
mov
xor
int3
mov
cmp
minps
scas
sbb
xchg
nop
insb
movsb
lret
sbb
cmp
or
or
push
jge
movsl
stc
sti
adc
imul
dec
sbb
movsl
mov
mov
stos
scas
dec
adc
dec
outsb
xchg
cld
mov
sarl
lea
stos
sub
xchg
lret
adcl
lcall
mov
mov
pushf
pop
and
nop
cmp
mov
dec
sbb
add
fwait
mov
adc
scas
pop
jns
cmc
insl
out
in
jnp
sbb
scas
adc
or
xor
iret
mov
in
add
adc
or
sbb
mov
and
aas
xor
pop
movsl
or
arpl
rclb
repz
leave
scas
pushf
loope
or
stos
rorl
xor
test
mov
cmpsb
mov
jae
aad
xor
lds
sub
push
or
jae
rcrb
pop
sbb
or
jecxz
aad
xchg
fstpt
flds
fbstp
or
add
lods
mov
in
fiadds
inc
repnz
push
outsl
fisubrs
cmp
lea
cmp
pop
cmpsl
ret
dec
loope
and
inc
ret
adc
out
push
loopne
inc
sub
mov
in
scas
enter
sub
inc
call
gs
adc
movsl
sbb
pop
es
std
and
sub
test
pop
mov
xchg
dec
and
mov
scas
insb
cmovno
sbb
xor
lock
sub
lods
pop
or
int
test
xchg
je
enter
daa
xor
aam
call
mov
cmp
test
adc
es
ret
xor
adc
mov
sbb
fucomi
ljmp
jmp
movsl
call
pop
inc
les
scas
push
imul
mov
scas
ja
sub
in
cmp
cwtl
mov
cmpl
xorb
jmp
or
aad
rcr
or
out
std
in
fidivrl
ret
fdivrs
mov
out
mov
fnsave
xor
pop
xlat
popa
cmpsb
test
addr16
cmpsl
rcrl
push
ja
mov
je
cmp
sub
xchg
inc
xchg
fisubs
add
pop
aam
fisubs
lods
jle
insb
pop
or
push
sub
xor
loope
cmp
insb
sub
mov
test
push
sub
pusha
movsl
push
fcoms
xor
xchg
fisubs
in
mov
fmull
push
xchg
pop
sub
xchg
into
cli
cmp
lret
mov
mov
xor
jne
cmpsl
out
lods
shl
dec
push
push
mov
jo
push
rorl
pop
ficoms
loope
loopne
test
nop
inc
aaa
push
jbe
movsl
popf
aam
and
shr
faddp
roll
imulb
sub
mov
push
call
in
add
mov
jbe
fistl
add
sahf
mov
sub
cmpsb
js
or
insl
dec
orl
mov
jns
imul
dec
test
mov
rclb
mov
test
sbb
neg
adc
movsb
fdivrs
mov
xchg
mov
and
sahf
js
mov
cmp
js
pop
aad
jp
pop
scas
mov
rcr
inc
dec
mov
rclb
jo
add
out
fcomps
mov
pop
ss
leave
fimuls
add
mov
daa
shll
dec
push
and
inc
mov
aam
incl
sub
loope
stos
into
and
ret
mov
call
lods
mov
pop
xchg
cmp
sbb
xor
dec
mov
clc
fbld
push
mov
or
std
sti
ficompl
ret
or
rcrb
cmp
push
dec
jge
lods
jnp
mov
xchg
pop
or
insb
and
jne
sub
test
sbb
fs
lret
cld
popa
inc
ds
out
popf
nop
scas
rclb
pop
mov
sbb
test
mov
sbb
and
cmc
jp
test
dec
dec
mov
inc
dec
gs
inc
adc
imul
nop
pop
pop
xchg
lahf
jbe
mov
jbe,pt
inc
or
inc
cs
mov
adc
add
xchg
jne,pt
pop
scas
push
mov
imulb
inc
idivl
mov
call
es
or
lods
loopne
out
lods
mov
pop
dec
xlat
cmpb
pop
sbb
imul
and
cmpsb
test
add
ficomps
or
test
sbb
add
push
add
xchg
mov
addr16
lcall
cs
shrb
out
xor
out
into
mov
icebp
or
repnz
nop
add
cmpsl
xchg
mov
call
mov
imul
cmp
cmpsl
xlat
dec
cmp
testl
aad
inc
ret
xchg
pop
enter
and
pushf
mov
js
xchg
push
add
fdivrl
stos
or
jno
and
mov
lea
mov
cmp
pop
fstpt
mov
mov
dec
push
aaa
fwait
roll
mov
movsl
sub
int
icebp
fadds
jp
cmp
push
fs
loopne
and
xchg
cs
dec
adc
push
mov
in
jg
sbb
dec
xchg
cli
xchg
push
insb
add
scas
mov
bound
outsl
jg
pop
push
lret
andl
popa
movsb
cld
adc
cmp
mov
fstpl
xchg
idivl
pop
pop
pop
xchg
clc
push
sarl
jb
lret
ret
xor
lcall
dec
sbb
lsl
roll
push
cs
or
push
xor
jle
add
in
jmp
cmpsl
loopne
mov
and
xor
lret
dec
aad
sub
sbb
or
out
out
pop
push
ljmp
mov
repnz
jo
mov
fdivr
cld
add
ds
jo
jg
mov
fdiv
test
popf
stos
mov
outsb
push
inc
xchg
add
pop
inc
lock
test
nop
jp
mov
mov
mov
cmpsb
pop
xchg
adc
jb
xchg
cmp
push
je
rcrl
inc
push
dec
sub
adc
or
jmp
mov
sub
scas
sti
lods
cmp
movsb
jge
or
mov
addr16
or
lds
and
mov
cmp
ljmp
mov
rcrl
add
scas
mov
pushf
jmp
xchg
dec
mov
sbb
xlat
xchg
in
and
push
insl
add
fs
add
rorb
aam
add
insb
jl
lods
jns
lods
dec
push
xchg
jg
mov
cmp
mov
pop
pop
xor
cmpsb
mov
sbb
pop
daa
shrl
pop
inc
add
adc
rcrl
test
leave
xchg
out
js
mov
jecxz
cmp
lds
dec
stc
orl
ret
in
cmp
add
andb
out
testb
adc
jmp
cs
pop
push
adc
or
inc
rcrl
rorl
inc
mov
icebp
out
out
mov
add
mov
aad
adc
idivl
addl
or
shrl
rcll
pusha
cmc
cmpsl
mov
xor
fs
ljmp
inc
jmp
insl
fisubrs
cli
push
ja
sti
mov
push
or
movsb
das
insl
pop
pop
cmp
imull
sub
adc
add
pop
cmp
and
cmp
lret
jae
cmc
jo
out
add
sbb
mov
adcb
cmp
lea
xor
mov
fsub
pop
jecxz
orl
daa
xchg
aam
mov
sahf
xor
movsl
call
xchg
in
fstps
add
fisubl
jmp
into
aas
into
and
out
or
adc
or
popf
aaa
mov
adc
mov
nopl
push
cmpsl
push
dec
xchg
mov
loop
or
test
gs
add
mov
sbb
xor
bound
pop
rclb
addr16
xor
popf
jecxz
leave
pop
xchg
inc
xor
dec
adc
in
xchg
stos
mov
sub
std
pop
enter
pop
xchg
pop
or
push
pop
pop
jno
aas
jg
fdivl
loopne
ljmp
add
dec
add
pushf
adc
add
imul
dec
jb
fstps
jne
add
notb
jmp
gs
fxtract
jmp
shll
aas
mov
das
sub
les
out
xor
out
jne
or
mov
daa
int
ss
xchg
and
ja
xchg
pop
and
addl
mov
scas
push
cmpb
pop
stc
lock
and
jl
sub
mov
cmp
loope
lods
dec
fcmovu
sub
xor
sub
cmp
addl
mov
fisubl
out
mov
pop
adc
addr16
sbb
rcll
js
and
cs
scas
nop
sbb
or
jp
add
lods
xorl
ret
js
lret
mov
fisubrl
push
xor
sub
das
sbb
and
inc
xor
mov
daa
test
lods
ds
jnp
xor
leave
sar
cltd
xchg
loope
push
enter
cld
and
aam
lods
cwtl
test
iret
xor
divb
jecxz
inc
sub
xchg
div
insb
xchg
sbb
sub
test
xchg
adc
xchg
out
cltd
mov
fwait
shrl
sbb
inc
mov
xchg
jge
es
es
rolb
cmp
adc
xor
adc
adc
add
ficoml
iret
movb
mov
rcrb
es
sub
push
mov
xchg
xorb
pushf
inc
xor
fwait
jb
inc
or
in
add
dec
and
or
pop
adc
xchg
mov
dec
sbb
mov
xor
dec
stos
xlat
fs
scas
in
jge
push
je
push
je
mov
dec
mov
mov
dec
mov
push
and
mov
int
fisttpl
hlt
sbbl
jnp
movsb
mov
movsb
jle
push
jbe
ljmp
roll
aaa
outsb
fimuls
inc
xchg
repz
sahf
or
mov
gs
pop
cwtl
ljmp
fwait
cld
ljmp
imul
adc
sub
mov
pop
lods
imul
pop
loop
cli
mov
pop
orl
dec
sub
test
push
cmpsl
enter
mov
mov
lods
mov
mov
imul
jbe
dec
fbld
mov
mov
add
xchg
dec
dec
out
das
scas
test
push
into
mov
ss
popf
popf
mov
cmp
stos
pushf
data16
sub
addr16
jle
inc
lock
cmp
test
or
adc
lcall
out
add
sti
jb
mov
jecxz
lret
pop
jg
xchg
mov
fistpll
enter
fadds
cs
icebp
push
push
fcomps
mov
xchg
push
sbb
sbb
lcall
sub
xchg
xchg
or
mov
push
push
add
xor
cmp
jnp
dec
add
inc
std
in
in
dec
pop
cmp
test
cmp
out
insl
pop
mov
push
int
xor
ljmp
sarb
fcoml
sbb
adc
movsb
push
push
push
fwait
sub
pop
loopne
lds
sbb
cmpsl
and
loope
dec
mov
sbb
jge
test
add
dec
enter
xor
add
bound
cmc
rolb
jp
add
cmc
stc
push
adc
repnz
bnd
outsl
dec
dec
mov
jecxz
jnp
daa
mov
or
ret
loope
mov
inc
cmp
loopne
out
mov
jbe
adc
outsl
or
ret
fnstcw
and
aas
mov
push
mov
jbe
fcomps
loop
mov
push
sbb
and
bound
lds
adc
mov
fisubs
mov
xchg
jmp
jle
rol
mov
loopne
in
jo
insl
jb
hlt
or
out
jg
mov
lds
test
pop
mov
xchg
imul
scas
pop
sub
into
mov
cs
push
mov
test
jle
dec
es
leave
test
pop
leave
aas
jmp
imul
push
mov
cld
cmp
mov
imul
cmpsb
out
bt
or
daa
insl
sub
and
sar
sbb
jg
bound
mov
or
dec
loopne
sarl
adc
add
pushf
daa
jbe
push
xor
pushf
jmp
push
xchg
sahf
mov
add
xor
cli
xchg
mov
jbe
jnp
lock
inc
push
paddsb
rclb
dec
fistpll
pop
inc
rcrl
adc
inc
loop
xlat
mov
pop
lds
xlat
sub
fwait
inc
popa
gs
dec
push
pop
jp
sbb
mov
test
lods
pop
pop
fs
sar
popw
pop
daa
pop
mov
push
inc
in
outsl
notl
push
jp
fldl
or
cmp
outsl
sub
mov
xor
mov
adc
pushfw
loopne
into
dec
or
jnp
dec
test
push
sbb
lock
es
rcr
movsl
faddl
xchg
enter
mov
mov
loope
add
jmp
or
in
fucomi
and
sub
and
pop
mov
shr
mov
leave
mov
icebp
or
shl
ret
sbb
push
xorb
mov
push
data16
or
clc
sub
adc
inc
das
push
jl
cmpsl
test
fwait
rcrb
jecxz
mov
and
mov
shl
and
flds
push
rcll
mov
divl
xchg
or
xchg
cli
xor
push
push
inc
in
cmp
add
leave
xor
jp
aam
retw
es
push
dec
fsubs
out
in
testb
les
dec
inc
and
insl
push
push
push
add
mov
nop
hlt
mov
out
xor
in
adc
call
xor
sti
jle
fs
push
ror
inc
das
in
pusha
xchg
add
aaa
test
push
ljmp
test
mov
imul
xor
sub
js
je
faddl
cmp
orl
push
pop
enter
or
or
mov
mov
std
in
fbstp
addr16
or
int
dec
in
lea
pop
inc
mov
xor
imul
dec
adc
mov
xchg
xchg
in
or
lahf
push
adc
imul
jno
jmp
and
xchg
or
dec
xchg
mov
cs
into
arpl
es
mov
repnz
pop
mov
ds
inc
jnp
lahf
imul
cmp
scas
pop
outsl
mov
mov
imul
loope
lcall
aas
das
cmp
cmpsb
frstor
mov
movsl
cli
mov
ja
mov
xchg
push
cvttps2pi
call
push
nop
jne
popa
and
lods
leave
mov
add
or
sbb
js
ret
repnz
mov
sub
jg
bound
movsb
scas
iret
loopne
pushf
xor
lds
and
ljmp
cltd
fsub
inc
pop
addl
bound
inc
push
xchg
idiv
scas
leave
mov
dec
les
add
hlt
pop
aas
sbb
stos
sub
popl
sbb
popf
dec
mov
ret
test
fcoml
push
xor
divl
jno
xor
repz
hlt
imul
stos
sbb
subb
fs
cs
adc
lret
aad
divl
pop
jne
outsl
movl
leave
or
pop
adc
adc
push
pop
mov
xor
inc
push
sub
and
jnp
mov
ds
and
cmp
cmpb
adc
lods
shll
or
out
fisubrs
mul
mov
das
out
sarl
pop
push
or
push
jecxz
adc
scas
adc
fistl
push
insl
repz
mov
lcall
jb
inc
popa
xlat
les
sub
mov
or
pop
lcall
xchg
sbb
cltd
test
test
fldl
arpl
arpl
sbb
cltd
loop
adc
adc
mov
inc
inc
hlt
jo
lahf
xor
adc
mov
iret
sbb
cmp
xor
add
aam
loopne
outsl
push
divl
test
xchg
testl
mov
dec
sbb
shlb
loop
fcmovnbe
pop
shlb
push
sub
jbe
test
shlb
xor
sahf
addb
mov
mov
add
push
outsb
xchg
cs
mov
ret
outsb
fists
roll
cmp
adc
xchg
jnp
mov
imul
push
gs
dec
ds
mov
iret
mov
push
mov
xchg
adc
xor
fisubs
sbb
sub
sub
cmp
mov
test
dec
add
out
sahf
adc
or
push
push
dec
xor
cmp
sub
cwtl
cmp
xor
lea
push
xor
add
and
stos
outsl
cmp
and
xlat
outsb
jle
shlb
cli
divb
jns
mov
js
scas
and
mov
jns
or
jno
cmp
pop
xchg
or
aad
out
jp
out
stos
and
add
stos
inc
cmpsb
andb
mov
insb
cltd
xchg
movsb
mov
pop
push
pop
sahf
or
pop
call
cmp
insb
imul
mov
mov
fcom
enter
aas
mov
sub
mov
xor
mov
mov
lahf
fcmovnu
adc
fwait
shlb
mov
jmp
test
test
or
fsubp
jo
mov
pop
push
lods
in
inc
test
mov
push
add
dec
imul
inc
xor
popf
adc
inc
ljmp
sbb
ja
les
cmc
fdivr
fcomp
inc
shlb
lock
outsb
lret
fnstsw
or
mov
out
nop
dec
jae
rorl
sbb
mov
add
adc
sbb
addb
in
mov
scas
sub
inc
push
cmp
pop
cmp
shl
sarb
enter
into
jp
add
mov
push
ds
int
cmp
insl
jl
cli
xchg
adc
jb
mov
xchg
pushf
bound
les
xor
enter
cmp
sub
lods
push
mov
ljmp
cmpsl
loopne
test
xor
imul
cs
repz
pop
dec
xchg
xorl
push
in
mov
mov
fists
pop
pushf
addr16
out
inc
jb
cmp
jmp
inc
push
call
arpl
stc
xchg
daa
xchg
jmp
add
outsb
jmp
xchg
imul
jecxz
push
sub
loopne
inc
mov
and
call
stos
out
repz
sub
fistl
sahf
arpl
pop
mov
xchg
data16
and
fsts
sbb
enter
jo
js
push
ja
testl
xchg
repz
xchg
mov
fadds
sahf
lods
mov
dec
jle
lds
pop
xchg
mov
shlb
pop
ljmp
jne
dec
addb
jo
jb
cmp
lea
cmp
aad
pusha
and
jg
xor
int3
imul
adc
dec
jmp
dec
pop
cmpsl
adc
fnsave
sbb
jge
cmp
mov
movsb
inc
loopne
aam
sub
ds
mov
pop
enter
les
cmp
call
mov
adc
push
push
mov
pop
mov
jle
dec
imul
push
lcall
mov
jl
ret
or
adc
into
idivb
mov
cmpsb
sarl
sub
outsl
mov
mov
and
std
out
cmc
dec
mov
sub
push
flds
jb
pop
push
xchg
mov
leave
bound
jp
je
das
add
out
push
sbb
xor
ja
or
add
cmp
sbb
addr16
xchg
cwtl
push
push
mov
rcll
add
push
into
jne
rol
std
sub
sbb
xchg
sub
call
or
push
cmp
das
xor
adc
movsb
push
xchg
aam
bound
adc
mov
enter
xchg
pop
aam
outsl
stc
rolb
push
cwtl
mov
xchg
loop
jo
movsl
jnp
mov
shll
sqrtps
adc
mov
aam
add
cs
aaa
jns
outsl
cmp
push
or
add
les
xchg
jbe
sahf
mov
adc
scas
adc
fiadds
mov
insb
scas
push
imul
mov
in
pop
adc
push
sbb
ficoml
push
imul
aaa
sahf
movsb
ficompl
mov
test
inc
scas
dec
mov
imul
sub
add
loopne
jg
jmp
incl
cmp
insl
push
popa
call
es
je
cmpsb
sbb
pop
aam
hlt
roll
dec
sub
icebp
inc
icebp
xlat
inc
in
add
pop
xchg
mov
mov
push
cmc
mov
sub
enter
push
mov
mov
loopne
mov
cmp
xchg
mov
push
push
and
icebp
mov
lcall
mov
add
xor
mov
loop
xchg
repnz
or
dec
les
leave
or
cld
negl
jmp
xchg
loop
ljmp
mov
mov
cli
and
addl
orb
ffreep
pop
jg
in
lret
mov
sub
add
push
scas
and
xlat
jnp
inc
test
out
mov
jns
or
hlt
xor
add
push
call
imul
jo
xchg
inc
inc
stc
lret
insl
add
push
mov
ds
mov
std
jbe
xor
jns
jmp
aas
xor
sarb
push
xor
pop
pop
in
jne
mov
mov
inc
cmpsl
and
add
inc
sbbl
mov
popf
repnz
jge
cmp
jne
out
pushf
mov
bound
lret
push
dec
shr
adc
pop
sbb
sub
mov
push
dec
cmp
fdivr
ret
in
pop
pop
mov
inc
cmc
xlat
jne
xchg
test
jnp
orl
stos
or
pusha
mov
icebp
mov
rcl
scas
push
scas
dec
sbb
and
ss
lea
lock
mov
mov
pop
cs
fbld
insb
test
out
push
xchg
push
cld
xchg
push
int
sbb
lret
addr16
in
scas
je
imul
add
lcall
pushf
jno
adc
ret
imull
or
pop
stc
out
mov
mov
inc
jne
cmc
dec
xchg
dec
pop
pop
xchg
sarl
out
nop
pop
mov
scas
sbb
or
xchg
sub
fiadds
add
in
sub
mov
xchg
adc
subl
dec
subb
dec
aam
and
xchg
bound
movsl
out
mov
fnstcw
adc
popl
add
jno
xor
dec
arpl
loop
ret
mov
mov
jne
xchg
lea
ret
dec
stos
pop
xor
lret
mov
gs
roll
cmc
pop
sub
xor
bswap
push
das
lods
daa
in
hlt
mov
outsb
daa
inc
mov
fidivs
push
pop
inc
addb
xchg
fcoms
dec
mov
icebp
gs
jmp
push
jg
shrl
pop
scas
addr16
mov
icebp
arpl
iret
jecxz
push
jl
sbb
xlat
mov
stc
cmp
sbb
enter
and
push
pop
lahf
and
xlat
stos
pop
addr16
lahf
cmp
mov
mov
inc
jg
adc
and
jo
jbe
jge
jle
adc
xor
aas
xchg
adc
loopne
test
dec
imul
iret
push
lock
cmp
xchg
ret
cmp
jge
imulb
rolb
cli
lods
lret
popf
nop
xchg
sbb
jp
repnz
nop
jmp
mov
and
enter
sbb
mov
aaa
inc
dec
lret
pop
inc
inc
jne
jbe
ss
stos
loop
mov
mov
movsb
add
testb
stc
imul
xor
aam
add
fxch
ljmp
xor
sahf
pop
test
mov
adc
iret
out
or
inc
clc
xlat
mov
test
addr16
inc
cltd
sub
pop
sub
xchg
lods
stos
call
loopne
les
mov
icebp
mov
insl
pop
or
jbe
scas
mov
xor
imul
or
push
sbb
pop
sbb
mov
push
pop
mov
inc
mov
rcl
fwait
in
sbb
aaa
mov
lretw
ja
or
mov
or
clc
fstps
mov
push
dec
roll
sub
call
fs
cmp
pop
add
jmp
adcl
pop
shrl
mov
loopne
sbb
dec
mov
sub
sbb
pop
loope
adc
sub
push
rcl
rol
jnp
jbe
outsb
rcr
mov
push
out
mov
mov
test
jecxz
shll
cmp
popf
stos
xor
sub
testb
mull
sub
or
int
call
xor
cmpsb
mov
aas
popa
hlt
inc
fcomi
jl
mov
cmpsl
push
sub
sub
mov
sub
cwtl
pop
lock
dec
and
lds
pop
push
add
lock
gs
mov
push
mov
aam
psrlw
dec
test
inc
and
ja
pop
jl
jns
test
xchg
and
aam
and
mov
stos
sub
sbb
in
fdivr
sbb
mov
cld
and
imul
cltd
mov
cmpsb
sti
mov
in
mov
repnz
je
cmp
mov
cmpsl
jg
lods
imul
leave
inc
test
scas
xchg
mov
and
out
imul
aas
shlb
in
and
pop
push
inc
push
push
hlt
jbe
movsl
sbb
sbbb
frstors
mov
mov
push
xor
out
mov
addr16
movsl
mov
les
and
mov
add
fcomps
jle
or
es
inc
jp
pop
call
sub
inc
dec
ficomps
jno
clc
imul
mov
movsl
rolb
bound
std
pop
mov
pop
repnz
xor
and
shrb
faddl
sbb
push
inc
and
pop
pop
aas
sub
add
cmp
jne
mov
fldl
mov
fwait
rclb
daa
mov
outsl
sbb
mov
lret
pop
mov
mov
lret
test
xor
cmpsb
sti
sarb
push
cmc
adc
loopne
iret
jmp
cmp
repnz
sub
dec
test
sub
adc
mov
mov
jge
inc
lret
or
ja
lret
and
cmp
addl
lods
ljmp
inc
and
add
cmpsb
les
out
out
xchg
jbe
mov
jnp
jl
dec
popf
hlt
popa
and
push
and
cmpb
mov
rcrl
lods
js
dec
or
cmc
xor
pop
push
rolb
push
mov
add
bound
inc
xchg
push
test
out
in
fnstenv
pop
int
xchg
push
pop
xor
into
xchg
testl
mov
popa
jecxz
pop
fnsave
push
out
mov
jp
clc
sbbl
int
or
push
fidivrs
jl
jne
sub
fxch
test
bound
inc
movb
mov
xchg
js
and
sub
lds
imull
js
orl
decl
out
call
or
or
or
int3
push
bound
shll
es
xor
sub
stc
dec
test
and
mov
popa
es
loope
aam
ret
mov
pop
repnz
sahf
fisubrl
lods
push
add
cmp
mov
in
mov
jns
push
jae
push
sbb
cld
fwait
and
sub
adc
sbb
out
or
out
in
rorl
jge
leave
ljmp
push
mov
rcrb
xor
mov
in
xchg
dec
ds
out
imul
lods
xor
add
ja
xchg
aas
call
jmp
dec
and
push
mov
mov
sub
mov
leave
sub
fwait
sahf
dec
lock
rol
adc
inc
and
sub
mov
lods
pop
popf
fldcw
shlb
jbe
jg
mov
fdivs
pop
jg
mov
in
pop
mov
mov
pop
in
jge
aaa
cli
jecxz
fs
into
loop
cmp
push
sahf
sub
test
shl
imul
cmpsl
rolb
add
adc
adc
scas
inc
xor
rolb
loope
daa
dec
in
nop
ds
or
rcrl
sub
push
adc
arpl
push
outsl
cmpl
lods
aad
testb
xchg
inc
insb
insl
sub
bound
cmp
sub
inc
dec
xlat
push
jmp
cs
aam
jmp
xchg
cmp
mov
iret
je
mov
shrl
xor
mov
jecxz
and
sub
pop
and
push
scas
cmp
mov
into
jo
fcomps
fistpll
mov
inc
decl
cltd
pop
insl
popa
mov
or
jnp
jg
icebp
in
cmp
xchg
cmpsl
pop
pop
arpl
xchg
mov
xchg
and
or
xor
in
mov
fwait
jnp
aam
rolb
les
sub
cvttps2pi
add
fldt
aas
add
cmp
lods
mov
push
and
orl
sbb
push
mov
add
mov
aaa
bound
punpckhwd
xchg
dec
stos
mov
stos
ljmp
push
mov
or
int
iret
shld
jle
and
push
daa
pop
cmp
frstor
test
sbb
mov
jae
inc
sbb
push
dec
jle
out
hlt
cmpl
addl
in
xlat
imul
test
jo
xor
cmpsl
inc
mov
jns
arpl
mov
pop
sub
inc
in
test
mov
mov
dec
jl
jno
nop
loop
push
sub
pop
inc
dec
test
push
mov
dec
jge
inc
outsb
call
mov
dec
push
into
cmp
aas
mov
sbb
inc
jne
andl
mov
int
cmpb
add
mov
js
mov
lret
inc
cld
movsb
pop
xchg
shr
sub
bound
idivb
shrl
push
lock
movsb
loope
lahf
xchg
fwait
out
jmp
pop
fnstsw
mov
enter
stc
lods
mov
mov
ja
adc
ret
ret
adc
dec
dec
mov
jmp
dec
enter
les
or
dec
sarb
std
jmp
push
jae
xchg
sbb
test
pusha
lret
jnp
sahf
mov
fdivrl
pop
xchg
push
jno
subl
daa
or
pop
dec
dec
dec
mov
ljmp
xor
jle
sahf
sub
and
pop
aam
clc
adc
inc
testl
ljmp
pop
icebp
jne
add
mov
mov
jmp
out
push
xchg
test
mov
popf
aam
pop
nop
cwtl
push
mov
popf
sub
call
ja
mov
inc
cmp
xchg
int
pusha
sahf
push
push
adc
jbe
fnstenv
aam
fiadds
xor
or
outsl
out
inc
jmp
cmpsl
es
xor
push
iret
pop
push
popa
fmul
pop
enter
push
sbb
nop
xor
xor
mov
cld
pop
push
cli
stc
sbb
inc
sub
mov
adc
sub
mov
leave
inc
out
fwait
cmp
pusha
mov
orb
mov
arpl
sbb
mov
fildll
dec
cmp
bound
fdiv
movb
inc
mov
inc
inc
mov
out
cs
xor
or
xor
pop
and
jbe
test
lret
pusha
and
js
scas
pusha
lret
jmp
insb
outsb
push
das
sbb
int3
scas
je
lahf
xorl
out
fistps
xor
pop
idivb
lahf
lods
xor
rcrb
jae
mov
arpl
xor
sbb
and
inc
stos
xor
lods
jecxz
testl
rolb
lods
roll
je
cmpsl
adc
mov
out
jecxz
push
fs
jo
addr16
popf
pop
mov
test
jg
ret
test
sub
mov
je
xchg
inc
mov
mov
test
xor
cmovge
lock
jb
push
jb
sub
xchg
inc
sub
mov
aam
cld
sbb
adc
scas
cmc
pushw
and
rcrb
xor
sarb
in
mov
pop
mov
sub
rcl
scas
movb
mov
add
sub
cmp
adc
cmpsl
jne
scas
iret
push
mov
push
fisubrl
dec
mov
cmpl
push
int3
add
int
das
sub
cmpsb
lods
adc
mov
mov
insb
xchg
add
fwait
sbb
bnd
call
lods
mov
push
xchg
mov
fidivrs
cli
cld
xor
sub
pop
dec
xchg
xchg
negl
cmp
cmp
or
sbb
lock
gs
repnz
push
sub
or
xchg
xor
es
xchg
rcrb
pushl
in
jbe
jns
mov
or
mov
jecxz
cltd
test
lea
mov
dec
pop
es
fcompl
pusha
pop
or
adc
popf
jp
mov
cmpsl
lea
xsaves
imul
sub
add
ljmp
bound
pop
movsl
adc
movntps
mov
cmc
xor
lods
negl
repz
add
and
mov
xor
inc
inc
xor
es
ds
push
and
sbb
das
push
and
sub
sub
ljmp
mov
cmp
fcomp
lcall
fimull
movsl
mov
es
mov
jmp
xchg
xor
jge
inc
cwtl
out
push
sbb
dec
mov
lods
cmpxchg
or
inc
outsb
nop
push
and
mov
cmp
xor
bnd
arpl
dec
ret
sti
mov
xor
outsb
jl
adc
mov
std
ljmp
xchg
sti
loope
and
jp
ja
inc
cwtl
arpl
lahf
in
and
push
stos
push
mov
bound
dec
jnp
fcmove
out
scas
xorl
adc
fcoms
cmp
add
add
loopne
xlat
xchg
lods
aas
jnp
ror
cmp
nop
popa
jle
shlb
push
test
cmp
jg
cld
xor
mov
fcoms
shrl
mov
iret
adc
aas
inc
cmp
lea
pusha
pop
jbe
fmuls
pop
cmpsl
and
fistpll
loopne
xchg
dec
in
das
push
xchg
inc
mov
out
xor
mov
xor
sub
adc
dec
rcl
jg
sbb
loopne
sub
adc
fcmove
bound
push
sub
push
xorb
test
and
mov
mov
push
cli
dec
inc
fcmovnb
roll
enter
inc
dec
pop
mov
push
fwait
mov
sub
xchg
xchg
or
das
jecxz
xor
cwtl
mov
nop
insl
or
jbe
mov
jbe
stos
enter
inc
scas
sahf
pop
xor
inc
push
and
cwtl
add
mov
mov
lods
pop
adc
addr16
cltd
inc
int
js
cmp
roll
popf
mov
fidivrl
int
jmp
add
enter
mov
cld
repz
cltd
lock
push
cwtl
dec
jp
xor
or
dec
xchg
inc
aas
ds
daa
popa
or
insl
arpl
popa
push
xor
aaa
loopne
mov
insl
lcall
xlat
adc
dec
out
lods
mov
push
jns
hlt
dec
cltd
jno
das
sbb
inc
dec
shl
sub
xchg
sarb
jmp
jo
mov
sbb
mov
or
push
push
clc
clc
xchg
popa
adcb
cli
loope
in
adc
pop
test
sbb
fdivrl
jmp
sbb
push
pusha
jne
sar
xor
inc
ljmp
adc
mov
ret
sub
lret
jnp
les
mov
xor
xchg
add
or
pop
inc
add
mov
dec
add
inc
or
cmpsl
loope
inc
mov
test
adc
addr16
sub
lock
das
dec
dec
shll
mov
aas
cmpsb
adc
outsl
cld
add
xor
pop
das
add
pushf
je
loope
or
xor
sahf
mov
and
mov
repz
std
push
nop
or
mov
out
lea
sbb
lods
add
sub
mov
insb
popa
add
je
movq
xor
mov
ljmp
xchg
into
adc
ficoml
cmpsb
cmpsb
scas
sti
add
shr
pop
xor
sub
ds
sub
sbb
pop
cmc
fmull
push
lret
pop
pusha
sbb
mul
imul
adc
jg
push
fwait
cld
jp
mov
loopne
and
repnz
or
into
dec
and
sub
mov
sub
es
and
cli
cmpsb
adc
cmc
jns
fnsave
in
fs
lahf
pop
rorb
jbe
xchg
not
push
inc
in
jecxz
mov
mov
test
mov
testb
mov
xor
jecxz
addl
pop
pop
dec
aam
mov
pusha
and
inc
sbb
iret
xor
pop
mov
out
xchg
ret
or
lcall
jae
shl
in
push
mov
dec
mov
fcomip
push
repnz
xor
das
push
xchg
inc
mov
xchg
das
push
jmp
mov
pop
lock
mov
pop
ds
filds
push
or
ret
leave
mov
mov
mov
adcb
mov
in
push
lock
test
nop
pusha
clc
pand
ja,pn
movsb
loop
scas
movd
xchg
jno
adc
lods
shrl
pop
add
lcall
dec
and
inc
stos
dec
jecxz
repz
push
mov
test
lahf
rcpps
xor
add
sub
dec
sub
mov
mov
lret
fs
jl
aas
repnz
jge
xor
mov
sub
xchg
jp
jae
cmpsl
sbb
mov
imul
push
call
into
les
mov
add
imul
popf
inc
adcb
push
sub
cmpsl
fisubs
adc
frstor
cmp
insl
mov
mov
jl
jne
mov
dec
rcll
inc
sbb
ds
pop
add
in
or
jbe
bound
lds
inc
jno
and
lods
cwtl
aam
push
push
js
fcoms
xor
sub
mov
mov
jecxz
movsl
les
jb
adc
mov
jge
cmpsl
in
mov
das
jo
fists
xchg
xor
ss
pop
out
lods
push
sbb
shl
mov
addr16
idivb
mov
test
xchg
push
xor
out
and
and
lret
jecxz
stos
flds
scas
popf
inc
dec
lds
mov
xchg
pop
jmp
push
inc
jne
pop
add
sub
jb
lret
mov
push
sub
and
into
adc
pop
sbb
lods
mov
insb
test
jp
loope
inc
lds
mov
jno
mov
pop
pop
sbb
lds
es
xor
and
pop
xor
imul
jns
in
inc
inc
fstpl
jmp
in
sbb
pop
insl
clc
sbb
fs
or
cmp
push
arpl
out
jbe
daa
xor
pop
push
rcr
imul
push
lcall
jle
popa
mov
inc
scas
pop
mov
inc
pop
push
in
stos
pop
std
lea
ja
scas
pop
fwait
xchg
pop
js
movsl
out
movsl
shll
push
adc
push
sahf
lock
pop
push
fldenv
ss
rolb
leave
jae
mov
push
push
xchg
cmc
inc
push
fnstcw
and
dec
arpl
jb
xor
leave
cmpsb
push
fnsave
rcrb
jecxz,pt
inc
pusha
scas
push
add
rorb
mov
icebp
sbb
or
shll
lcall
loopne
mov
push
repz
movsl
pop
sub
jmp
lcall
xchg
xlat
pop
sbb
or
fcomip
jmp
icebp
xchg
pop
rcl
pmulhuw
pop
cld
in
xor
sahf
inc
lods
data16
push
out
mov
pop
push
mov
jecxz
xor
andl
or
fcomp
jl
es
bound
jo
xorl
mov
or
mov
xor
idivb
push
and
sub
movsl
mov
and
shl
test
cmc
call
leave
push
test
add
push
cmp
je
mov
addr16
cmp
scas
adc
jg
in
cmp
stc
shl
lahf
cmp
int
pop
sti
or
sbb
cltd
jno
adc
imul
daa
in
and
inc
fisubl
or
testl
sub
sbb
jge
daa
fwait
addr16
add
js
pusha
sbb
insb
inc
mov
hlt
pause
pop
pop
iret
out
mov
lcall
cwtl
mov
add
scas
test
aam
loop
inc
pop
jg
jbe
xor
in
lds
xchg
dec
mov
push
adc
mov
popa
xor
imul
dec
pop
pop
int
inc
xlat
popf
pop
mov
lods
push
dec
ljmp
cld
dec
sbb
add
xor
mov
and
or
cmp
repnz
movsl
sarl
int
idivb
js
rorl
and
hlt
repz
pushf
rol
xor
stos
mov
in
mov
mov
push
jbe
xor
sub
repnz
cmp
jo
stos
ret
insl
jae
mov
push
fimull
sub
aaa
jmp
gs
pop
push
iret
popf
jg
cs
hlt
les
fisttps
xchg
xchg
xchg
iret
test
leave
pop
cmpsb
fldt
test
rep
jle
jns
cmp
outsb
or
jecxz
ret
test
sub
mov
or
jo
cmp
js
fwait
push
jne
cmp
pop
xchg
out
hlt
pop
xchg
test
and
xor
and
imul
add
js
dec
pop
popf
cmp
or
fdiv
add
mov
or
inc
popf
xlat
pop
and
mov
stos
jb
dec
out
add
jp
pop
sarb
out
xchg
ljmp
fldenv
rep
cmp
sbb
insb
mov
aas
sub
lods
enter
aam
ss
mov
xor
pop
sub
pop
xor
scas
inc
popl
cmpsb
push
stos
add
lods
mov
xor
push
pop
or
fiadds
enter
repnz
popf
loope
xchg
out
jbe
mov
rcrb
jb
adc
sbb
ret
add
push
cmp
push
fldl
lock
inc
cmp
xchg
xchg
sub
dec
lods
lock
mov
fcoms
stc
imul
scas
dec
or
ljmp
and
adc
add
mov
rcr
clc
lcall
xor
mov
in
dec
push
int3
jl
into
mov
jl
inc
dec
pushw
push
xchg
or
pop
lahf
test
mov
repnz
ret
push
addr16
xor
and
ror
mov
aam
cmp
rcl
adc
push
movsl
push
lahf
repz
imul
mov
iret
pop
imul
outsl
test
rorl
mov
cmpsl
dec
inc
xchg
scas
adc
sbb
mov
adc
add
jp
popf
repz
cld
aam
inc
xor
jbe
cmp
cmc
dec
jne
jno
fs
jno
pop
lock
ds
clc
out
inc
gs
cmp
jno
lret
push
pop
iret
mov
clc
and
xchg
jne
or
xchg
insl
pusha
cmc
mov
inc
push
mov
xor
popf
fcomp
add
or
fsubs
loopne
push
mov
daa
push
icebp
lahf
mov
test
or
sarb
fsubs
adc
jno
pop
das
xchg
mov
cmp
out
test
jge
ljmp
mov
and
in
mov
dec
pop
jne
cwtl
push
dec
inc
int
pop
sbb
test
dec
aas
sbb
and
adc
xor
es
mov
andb
int3
fwait
mov
sbb
add
out
sbb
jmp
jg
iret
repnz
int
inc
in
scas
mov
pushf
jp
fucomp
fidivrs
fsubrl
adcl
xor
std
inc
ljmp
or
imul
push
movsl
mov
in
push
jl
cs
stos
jge
mov
sti
mov
ja
and
repz
pop
xor
xor
int3
xchg
xor
inc
cltd
mov
lret
bound
dec
inc
add
dec
incb
hlt
xchg
cmpsl
adc
jne
insb
icebp
iret
adc
pop
daa
int3
test
push
and
jmp
stc
stos
test
cmp
mov
cli
xor
enter
mov
out
mov
push
fadds
out
iret
rorb
and
and
popf
mov
or
ret
mov
dec
mov
out
les
add
std
dec
xlat
add
jge
lods
mov
cmp
addr16
sub
cli
jmp
sbbb
xor
push
push
push
mov
cld
leave
add
sbb
inc
stc
pop
inc
xchg
ret
loop
jns
out
mov
sub
cmpsb
sbb
push
std
cld
dec
mov
push
lods
inc
xchg
xor
adc
aas
rcrl
adc
aaa
jecxz
jg
mov
js
sub
aad
lods
push
xchg
incb
icebp
lcall
pop
arpl
cs
mov
scas
cmpsb
pusha
dec
pop
lock
jbe
clc
sti
push
pop
repz
fiadds
add
sbb
lahf
xchg
jbe
shlb
xor
cwtl
xchg
sbb
sbb
lds
mov
inc
ljmp
lret
jns
mov
jge
sbb
notl
sbb
daa
or
xor
sbb
cmpsb
pushf
fwait
nop
mov
push
int
mov
mov
inc
xor
mov
mov
and
nop
nop
adc
je
and
hlt
pop
sti
sbb
shl
insb
add
dec
mov
dec
and
or
mov
scas
and
loopne
pop
xor
adc
pop
adc
xchg
fdivp
push
fwait
adc
push
out
aaa
fcmovnbe
lods
sbb
cld
inc
enter
cmp
sbb
divb
pop
dec
ljmp
fnsetpm(287
cli
sbb
test
addr16
out
loope
rcll
shr
loope
inc
mov
sbb
or
lods
jnp
mov
push
push
iret
mov
out
xor
popa
push
mov
lcall
xchg
fwait
push
sbb
ss
xor
stos
xor
shrb
xor
scas
mov
mov
jg
mov
mov
sbb
pop
lods
das
cmpsl
sbb
data16
or
jae
sbb
adc
or
push
and
ret
xlat
push
or
mov
cltd
add
jl
sub
inc
push
popa
fsubr
or
scas
movntq
mov
and
movl
jl
cs
jns
mov
loope
sahf
hlt
add
test
jnp
test
movsl
popf
fisubrl
jle
or
xor
mov
popa
mov
std
icebp
hlt
outsb
lds
and
mov
outsb
fmull
enter
xchg
push
add
pop
xchg
das
or
jnp
pusha
mov
movsl
mov
loope
fnstenv
enter
adc
fsubs
test
fcmovu
inc
in
nop
mov
mov
jno
sbb
hlt
lods
cmpsl
and
shlb
xor
arpl
daa
or
push
lret
es
sub
mov
nop
gs
movsb
arpl
andl
inc
and
xor
mov
cmp
push
outsl
sbb
std
push
inc
into
rorl
inc
pop
movsb
cwtl
jne
cmc
sub
sub
jnp
movsb
ret
xchg
mov
push
sub
mov
dec
leave
adc
pop
ret
push
or
mov
mov
out
lea
xor
jns
xchg
sti
iret
pop
les
cmp
cld
xchg
enter
sub
cltd
pop
and
outsb
aam
mov
out
dec
idivb
fisttpl
imul
jl
xchg
dec
mov
mov
sub
sarb
jecxz
push
ret
adc
into
insb
stos
js
in
and
cwtl
inc
ja
out
stos
push
clc
mov
cli
mov
call
xchg
lock
push
xchg
test
loope
nop
mov
jo
cmp
mov
and
lahf
cmp
shlb
mov
xchg
push
test
mov
sub
roll
jge
out
jmp
or
xor
sti
ficoms
cli
daa
sub
jle
jae
pop
test
or
rcrl
mov
push
lds
nop
dec
xchg
dec
dec
push
loopne
push
cmp
jne
inc
in
cmp
lret
pusha
adc
xlat
sub
daa
mov
std
and
fdivl
lea
in
sti
in
in
push
in
cli
ja
test
mov
or
sub
or
mov
inc
push
inc
sub
push
insb
xchg
adc
mov
outsb
imul
cmp
xor
cmp
pop
nop
push
mov
cmpsl
push
push
flds
cmp
aad
das
cld
xchg
mov
or
mov
lahf
jg
sti
add
addb
out
loope
add
arpl
xor
xor
ss
cmpsl
inc
addl
pushf
hlt
adc
jecxz
cmp
add
ss
push
nop
les
mov
out
add
outsl
push
push
adc
aas
stos
pop
add
and
cli
js
pop
mov
pop
and
out
pop
jg
jmp
cmp
shll
or
and
lahf
fcom
ljmp
ja
push
fwait
sub
xor
xchg
and
insb
sahf
enter
pop
das
pop
and
imul
lahf
and
bound
jmp
ffree
outsb
push
pop
ljmp
aam
lahf
ss
sub
mov
mov
outsb
sti
cmpl
lea
rcl
fimull
imull
push
xchg
dec
loopne
mov
popa
std
stos
sub
jmp
andl
push
jns
add
cmp
mov
or
fsts
pop
push
cmp
les
inc
ds
imul
std
xchg
out
and
incl
xor
mov
cs
lahf
imul
ds
loope
std
out
outsl
scas
fistl
sub
out
ds
sub
jb
shr
sti
fcoml
ret
stc
sahf
insb
mov
xchg
push
sbb
cmc
sbb
xchg
xchg
repnz
mov
or
cwtl
imul
inc
cli
fwait
lods
mov
inc
scas
xorb
pushf
shlb
jbe
add
cmp
and
pop
lahf
jo
adc
in
and
add
ret
push
push
push
daa
push
lahf
xchg
out
sbb
test
pop
push
inc
and
ljmp
addr16
mov
cmp
lea
iret
pop
pop
iret
cmp
mul
cmp
push
das
sbb
lret
lret
ss
mov
clc
cmp
pop
int
mov
xchg
xchg
dec
sbb
repnz
push
popa
push
sub
arpl
and
cmpsb
add
jle
jl
jp
out
leave
sbb
add
ret
imul
shll
sub
insl
and
insb
add
xor
in
pop
push
je
orl
lret
cmp
jno
mov
fsubrl
and
dec
push
stos
sub
mov
gs
arpl
adc
xor
pop
lds
mov
inc
cmp
cltd
jge
pop
cmp
xorb
lock
sbb
out
ret
jo
sub
sub
stc
adc
outsb
clc
out
sub
cmpsb
lods
movsl
stos
sahf
pusha
and
cmp
insb
push
jnp
mov
adc
inc
push
inc
or
mov
push
mov
loope
or
mov
aam
xor
fildl
cmp
cmp
jle
pop
repnz
ficoml
or
add
mov
inc
call
insl
xchg
aam
cmpsb
cmpsb
test
aas
push
sub
orb
add
pop
mov
xor
sbb
mov
adc
cmp
cwtl
inc
lahf
decb
pop
pop
mov
ljmp
jl
mov
mov
bnd
sub
add
stos
outsb
mov
dec
sti
mov
mov
jns
xchg
jge
pop
insl
insl
sahf
test
data16
pop
sbb
and
ret
cmc
je
cmp
outsb
std
cmp
push
mov
add
jle
xchg
aaa
pminsw
sbb
xor
inc
shll
xor
push
fadds
pusha
outsl
add
cmovno
dec
lahf
lcall
imul
testb
lret
mov
lahf
hlt
mov
jecxz
dec
negl
and
cld
call
ret
mov
out
jle
pop
push
aad
pmulhw
jmp
testl
rcll
and
aad
outsl
sub
lods
or
mov
repnz
mov
stc
loopne
sub
sub
arpl
jb
inc
xchg
push
js
pop
insl
insl
or
jns
ljmp
cmc
cmp
stos
push
nop
lret
lea
push
xchg
mov
fwait
push
add
frndint
jle
add
inc
fbstp
or
cmc
cmpsb
push
xchg
dec
shr
add
ds
push
adc
jno
xchg
repz
test
mov
fnsave
pop
das
mov
inc
pop
movsl
fs
fstpt
test
pop
addr16
pop
push
idivl
pop
xchg
mov
es
mov
decl
xor
orb
daa
sbb
jge
pop
repz
in
les
js
bswap
xor
pop
mov
pop
sbb
cmp
divl
test
test
test
jecxz
mov
jge
icebp
sbb
mov
cwtl
inc
sub
aas
nop
cmpb
out
xor
in
and
cmp
xlat
test
push
add
cwtl
sub
adc
jp
adc
sub
dec
xchg
shr
pushf
push
mov
sbbl
out
mov
mov
cmpsb
data16
lret
scas
test
or
movsb
jb
adc
movsl
incb
xchg
xor
insb
mov
stos
adc
shrl
out
adc
mov
ss
xchg
idivl
popa
lcall
out
inc
clc
rcrl
jno
jmp
xchg
mov
dec
or
mov
mov
sbb
cwtl
mov
fwait
jb
stos
mov
sbb
fwait
aam
fadds
add
jbe
das
out
mov
lea
clc
rolb
lds
cli
ds
je
jg
pop
dec
iret
or
xchg
jle
ret
jbe
iret
je
jb
mov
aaa
xchg
orb
insb
push
mov
je
stc
lahf
test
leave
out
sbb
fs
into
mov
in
loopne
mov
mov
clc
add
ret
xchg
xlat
lahf
xchg
sbb
test
cld
adc
mov
jecxz
jge
ljmp
inc
push
imull
test
lods
out
loopne
mov
xchg
xchg
test
xchg
mov
jp
and
dec
xor
arpl
jecxz
mov
mov
inc
repz
jge
dec
jb
jbe
push
cld
mov
mov
shlb
pop
push
clc
mov
test
andb
dec
lods
stos
dec
nop
xor
sub
clc
jnp
inc
push
push
push
mov
sbb
mov
adc
sti
push
dec
add
leave
sub
push
mov
or
std
xor
das
and
inc
lock
test
sub
pusha
js
xchg
mov
push
xlat
mov
jl
xchg
pop
lods
in
xor
pop
andl
repz
xor
and
std
mov
pop
sbb
xchg
and
xor
mov
push
mov
cmpsl
lcall
jge
sti
aad
jecxz
cs
xorl
jno
pop
test
notl
pushl
dec
std
xlat
adc
call
push
ljmp
pop
outsl
pop
cld
cltd
std
mov
inc
sbb
addr16
scas
adc
push
out
addb
cli
pop
xchg
push
or
mov
dec
sbb
mov
fnstenv
addr16
mov
mov
adc
scas
push
out
scas
and
pusha
fdivrs
test
or
pop
xchg
aam
inc
inc
mov
addr16
mov
sbb
add
mov
mov
mov
push
popf
lds
nop
sbb
inc
pop
ret
jo
xor
mov
cmp
sub
inc
mov
ds
push
xchg
das
jle
pop
scas
sbb
aad
in
in
mov
jo
jl
repnz
and
mov
cmp
lock
repz
mov
mov
decl
call
fdivrs
xor
cmp
cltd
mov
dec
sub
jg
adc
sbb
sahf
mov
int3
lds
push
pop
std
push
outsl
xchg
das
hlt
loop
nop
sub
adcl
insb
insl
dec
insl
mov
pop
insb
pushf
inc
xchg
mov
inc
lcall
rcll
mov
mov
dec
int3
repz
pop
mov
or
cmpsl
rolb
and
push
sub
mov
outsl
and
aam
rcll
test
stos
test
jmp
sbb
out
mov
push
imul
iret
das
mov
xchg
inc
adc
sbb
sarb
push
sbb
jl
test
into
dec
cltd
jnp
int3
imul
ficomps
nop
jno
and
add
mov
lods
xor
pop
add
dec
mov
roll
pop
mov
stos
push
adc
sbbl
ret
and
mov
cmpsl
popa
lahf
fadds
fcmove
notl
xor
xchg
push
loopne
int
dec
ljmp
pop
push
inc
clc
sub
or
mov
popf
add
xlat
icebp
fcompl
mov
sub
jb
jae
push
mov
jne
stc
inc
fwait
xor
pusha
xor
mov
mov
in
stos
dec
mov
lret
gs
leave
or
jle
rclb
push
pop
inc
leave
pop
add
fnstcw
ret
movsb
pop
push
in
into
and
addr16
mov
clc
jge
xchg
iret
mov
sbb
cmp
mov
ds
xchg
pop
xchg
nop
ret
adc
adc
or
hlt
push
mov
or
push
ja
mov
test
dec
mov
cwtl
sahf
jmp
faddl
adc
mov
pop
bound
test
xlat
pop
or
jecxz
insb
gs
push
outsb
test
es
cltd
ljmp
pop
add
lock
mov
out
cli
push
sar
cmp
xchg
push
push
pop
das
pop
jle
lea
add
sub
sub
lds
and
aas
and
cld
push
cli
mov
pop
cmovae
xor
hlt
dec
fdivs
push
adc
popf
mov
cltd
pushf
inc
sbb
movsl
out
push
and
add
xchg
sub
out
stos
jns
and
fisubs
outsl
enter
ret
fcomps
sub
inc
jno
mov
mov
xchg
push
xor
xor
jne
pop
fiaddl
movsl
sbb
icebp
in
mov
inc
mov
test
test
lret
lcall
or
or
mov
mov
adc
ja
inc
flds
mov
hlt
dec
clc
pusha
push
sarl
pop
push
stos
sahf
mov
icebp
aaa
lret
xor
cwtl
test
adc
jnp
sub
aam
or
aad
pop
pop
jbe
je
or
mov
and
or
add
les
aas
lret
mov
scas
divb
jae
mov
sbb
jge
inc
in
icebp
test
cmpsb
stos
mov
rcl
and
shr
mov
jecxz
ss
idiv
jmp
adc
sub
push
and
sar
and
and
adc
notb
fcoms
rclb
sbb
jae
mov
dec
stos
or
jmp
jle
test
sub
xchg
mov
stos
push
mov
add
lret
pop
out
or
test
neg
daa
mov
xorb
cmc
lock
sbb
dec
fwait
mov
lock
pushf
fmuls
rclb
push
rcr
push
push
push
inc
imul
push
into
jns
mov
pop
pop
mov
pop
loopw
adc
nop
jp
jae
xchg
iret
jns
dec
rorl
cmp
or
add
faddl
iret
arpl
lods
hlt
or
fldcw
lock
leave
inc
fldcw
iret
sub
in
addr16
out
and
cmc
popf
xchg
jle
je
imul
into
lds
or
sub
mov
cmpsb
jb
call
push
jmp
add
into
sub
lods
jae
adc
lods
sbb
cmp
xor
popa
xchg
xor
and
jne
cld
call
jno
int3
call
sub
lock
dec
addr16
lods
cmp
aad
fsubrl
imul
and
add
push
inc
and
cli
addr16
stos
pop
sub
push
es
or
and
lret
mov
cltd
out
sub
or
xor
dec
jne
pop
fdivs
mov
fwait
mov
jae
stos
popa
test
push
push
push
mov
or
les
inc
mov
in
push
jns
data16
adc
jg
or
pop
dec
or
pop
xchg
pop
shlb
arpl
jg
add
mov
adc
pushf
stc
jno
push
mov
sti
mov
mov
jmp
pop
mov
fwait
js
adc
add
and
lods
jle
mov
jg
cmpl
rcll
mov
mov
pop
xor
and
lret
sub
pop
jne
in
fcomps
and
pop
icebp
cmp
xchg
cmp
add
mov
dec
int3
add
mov
mov
icebp
movsl
add
add
or
mov
mov
fists
xchg
pop
movsl
pop
aam
sbb
lcall
popf
icebp
pop
jae
aaa
push
push
sub
hlt
pop
lods
cmc
ret
add
adc
sub
cmp
out
push
std
sub
movsl
push
adc
xor
mov
adc
in
stos
cli
mov
outsl
mov
repnz
sub
or
xor
fst
cld
sub
int
mov
add
cmp
inc
ret
fwait
les
into
mov
xor
jle
cmp
sbb
filds
inc
cmpsl
shlb
xchg
mov
leave
pop
pop
mov
xchg
mov
and
sbb
mov
jmp
arpl
enter
enter
pop
aad
mov
lahf
lahf
inc
add
aas
js
pop
inc
notb
mov
mov
dec
xchg
adc
cmp
xlat
mov
sub
icebp
scas
movsl
leave
xlat
mov
sub
jle
push
add
test
add
je
fildl
int
sahf
mov
icebp
mull
bound
sub
sub
mov
sti
mov
or
pop
out
push
outsb
cmp
idiv
adc
push
or
movsl
sub
sub
inc
mov
dec
into
jo
addr16
aam
imul
jecxz
sbb
xchg
push
mov
scas
aad
add
insl
cwtl
shrl
xchg
cmc
xor
cmp
call
test
fcoms
xchg
mov
in
pop
lret
addps
push
iret
dec
jge
inc
mov
sub
xor
es
pop
shl
jno
into
arpl
sbb
mov
mov
jg
lret
mov
ljmp
lahf
dec
jmp
xorl
cmpsb
test
pop
outsb
cmpl
push
es
jp
sub
cmpb
or
inc
repnz
push
sub
lods
lods
fistpll
lods
dec
xor
ret
jl
je
stos
jne
loop
int3
fstpt
js
lcall
add
fstpt
imul
repnz
aaa
mov
pop
loope
or
lret
mov
add
sti
orb
mov
ss
testb
lret
xchg
mov
xchg
mov
mov
and
aad
addr16
pop
into
and
dec
int3
movsb
test
cmp
repnz
mov
jl
sbb
test
icebp
mov
sub
push
neg
adc
mov
dec
rcr
adc
mov
popf
not
lret
sbb
data16
cmp
pop
xchg
or
cs
sub
jmp
outsl
aam
mov
inc
dec
or
xor
inc
jg
inc
xchg
rorl
bnd
gs
pop
loope
push
mov
aas
mov
mov
dec
out
orl
mov
test
add
mov
cmp
or
ljmp
or
scas
xchg
pop
xchg
mov
enter
cmp
bound
movsl
movsb
xchg
and
pusha
mov
xlat
pushf
jae
lcall
push
es
jnp
loop
movsl
mov
in
js
or
sub
fists
pmulhw
mov
repnz
mov
aad
pop
and
imul
shl
in
push
and
sub
sti
sbb
adc
xor
and
mov
jl
push
inc
in
ja
fnstcw
adc
movsb
mov
arpl
ret
pop
sbb
mov
pop
pop
xchg
in
hlt
xchg
iret
push
cmpsb
fbld
adcl
jge
add
xchg
jno
sub
cmp
mov
mov
std
in
and
mov
out
rorb
mov
xor
pop
and
lahf
imul
dec
aaa
dec
push
sub
add
bound
inc
pop
sub
add
sub
lcall
dec
ret
jo
sbbb
fnsave
fcmovnu
out
pop
les
cltd
mov
in
cmpsl
pop
xor
dec
mov
scas
or
lret
loopne
mov
jbe
dec
pusha
push
push
dec
add
fisubl
push
daa
cmpsb
mov
pop
mov
dec
xchg
call
mov
pop
inc
mov
or
loopne
adc
xchg
lahf
xchg
enter
push
adc
cmp
mov
xor
icebp
orb
movsl
out
outsl
push
fs
dec
push
sub
loop
inc
pop
mov
cmc
ljmp
jg
ss
pop
adc
cmp
dec
and
daa
adc
sbb
aas
test
cmp
push
xchg
push
or
sub
jns
movsb
pop
fcmovne
out
dec
jecxz
mov
jbe
lods
pop
int3
movsl
mov
inc
jne
cmpsl
cmpsb
push
cmp
inc
dec
and
cmp
fadds
push
stos
or
fisttps
pop
mov
mov
movsl
mov
aaa
xchg
sub
lahf
aad
das
mov
mov
roll
and
xlat
repnz
add
emms
xor
push
xor
out
les
inc
popa
mov
jg
mov
js
in
push
xchg
pop
test
mov
cs
push
sbbb
or
mov
idivb
test
inc
inc
icebp
out
icebp
or
push
inc
mov
outsb
mov
cmp
fcomps
or
daa
jl
fidivrl
xor
jg
jl
clc
cmp
add
sub
add
fcmovnbe
rcr
inc
arpl
scas
mov
jne
or
adc
pop
sub
jp
mov
mov
repz
pusha
fiadds
call
cwtl
sbb
jecxz,pn
mov
pop
adc
cmc
jb
fistl
cmp
test
mov
adc
mov
hlt
sbb
adc
dec
es
push
in
roll
cli
out
mov
in
inc
int3
xchg
faddl
dec
xor
mov
stc
fdivrl
rcrb
fidivrs
sbb
je
xchg
xorl
inc
popa
mov
jle
nop
dec
adc
das
ud2
xor
pop
imul
cmp
sbb
jno
mov
push
out
sbb
sub
pop
stos
or
xchg
push
pushf
fidivrs
jnp
aad
imul
sti
or
mov
dec
mov
shlb
imulb
scas
insb
and
cmp
push
jl
adc
aam
pop
xchg
pop
pop
dec
in
icebp
sbb
gs
dec
insb
push
xor
imul
cltd
cltd
stc
sahf
lret
mov
push
fs
adc
ljmp
aad
std
mov
push
push
shrb
jbe
adc
push
testl
in
movl
add
shll
mov
and
and
rorb
lret
cli
sbb
sub
jl
sub
dec
mov
pop
push
aad
cmpsb
lret
mov
mov
insb
aas
mov
push
int3
cmp
scas
popf
inc
ss
sub
ss
mov
or
push
jle
mov
enter
lock
pop
out
int3
icebp
fstps
movsl
mov
push
cmp
jg
xor
mov
lcall
add
lock
lret
add
lahf
lods
mov
stc
push
fistl
fimuls
insb
test
aaa
stc
call
aaa
stos
inc
sahf
ja
mov
cmpsl
sbb
cmp
out
mov
dec
out
les
lock
int
faddl
sub
jb
xchg
sbb
pop
shr
loop
or
mov
stos
cltd
insb
ret
sub
jno
bound
nop
or
imul
iret
lods
cltd
shr
and
pop
push
and
enter
movsl
stos
std
out
mov
lahf
inc
in
push
mov
push
xchg
imul
pop
lds
in
ficompl
push
cmp
fisubrs
lea
adc
mov
cmp
push
cmp
ret
lds
jbe
mov
mov
test
into
repnz
out
mov
jnp
addb
inc
outsl
push
lret
imul
cmp
push
or
jp
mov
pop
lock
jne
push
cs
jb
int
imul
lock
xchg
repz
mov
push
xchg
fs
movsl
call
iret
clc
sub
repnz
stc
push
leave
repz
push
lea
sub
mov
cmpl
call
mov
es
add
cmp
pop
inc
push
sub
mov
add
sbb
shrl
sti
rcr
mov
or
call
pop
es
xor
pusha
inc
imul
sub
les
inc
add
mov
cmp
mov
mov
xor
and
pop
in
adc
lcall
clc
pop
in
xorb
mov
stos
sub
fs
dec
shrb
in
and
sub
icebp
ja
sahf
or
loope
fcomi
jl
ret
daa
jne
sbb
adc
sub
xor
dec
adc
add
sarl
addr16
mov
jge
mov
jle
mov
jno
mov
mov
or
call
mov
rorl
test
loopne
jg
dec
push
mov
scas
cmp
out
cwtl
cmp
xor
sbb
push
adc
pop
push
pop
imull
sbb
sbb
dec
test
dec
aad
aas
movsb
rclb
je
push
jecxz
loope
out
scas
sub
pop
inc
leave
cmp
lea
push
sub
loop
test
push
add
lds
pop
ja
call
inc
mov
mov
sub
in
or
aaa
adc
das
cmpl
into
pop
ljmp
xor
mov
or
pop
les
push
inc
lahf
add
mov
decl
int
rorl
pop
or
cmp
sub
mov
xor
fsubl
xor
push
das
dec
outsl
xchg
scas
in
and
push
rorl
pop
addr16
dec
hlt
insb
nop
mov
push
cmp
sub
popa
idiv
and
test
inc
dec
adc
out
mov
mov
fucomi
das
xchg
lods
jge
out
push
push
test
jmp
push
lret
roll
in
mov
orb
cmp
mov
sub
lahf
push
and
push
fldcw
mov
loopne
xlat
sbb
lock
call
adc
mov
mov
add
jnp
js
sbb
pop
cmpsb
mov
or
jne
cmc
pop
out
icebp
ja
pop
jmp
fcomip
scas
insl
sbb
inc
inc
jb
stc
mov
cld
jecxz
adc
insb
jle
or
lock
jmp
cmp
dec
js
add
cs
dec
femms
fistps
cwtl
jnp
adcl
sub
dec
xor
cmc
scas
jle
div
mov
ss
iret
push
mov
in
hlt
push
out
popf
jl
cld
ds
jae
dec
ljmp
jmp
jge
lea
push
mov
pop
push
sub
jg
dec
lret
fisttps
clc
mov
js
outsl
mov
add
inc
pop
adc
int3
xor
lcall
je
push
xor
push
std
js
stos
add
out
jg
aad
mov
inc
mov
sahf
xor
xacquire
movswl
js
ret
aaa
roll
adc
dec
sbb
jg
xor
loop
jnp
mov
test
add
cmp
jno
subb
clc
or
flds
push
mov
ss
push
das
and
jae
cmc
add
inc
rep
ret
mov
test
push
pop
loop
adc
sahf
mov
insl
cmp
sub
jcxz
cmp
xor
repnz
shll
stc
test
sbb
jno
out
lds
sbb
lret
sbb
ret
aas
xor
and
push
mov
xchg
adc
xor
add
rorl
mov
mov
aad
lea
or
rol
dec
add
mov
adc
xchg
testl
int3
iret
enter
xchg
pop
popf
cmpsl
pop
fcmovnbe
cwtl
pop
hlt
in
mov
rcrl
bound
push
in
cmp
or
punpckldq
js
or
neg
sarb
inc
hlt
mov
mov
sbb
dec
push
xor
lods
push
ds
and
pop
lock
and
mov
ljmp
sar
pop
popf
xor
inc
jmp
xor
mov
orb
pop
mov
aam
pop
jne
and
pop
stos
cmp
cli
sti
pop
cs
fldt
cmp
push
inc
pop
lods
jge
pop
inc
dec
or
pop
hlt
fwait
pop
insb
mov
cmp
stc
fisttpl
sub
and
inc
or
inc
xchg
insb
fcomp
dec
jg
xor
imul
pop
ljmp
ficoml
movsb
add
cwtl
shrl
aad
push
lret
fidivrl
or
into
push
rorl
push
imul
inc
stos
xchg
clc
pop
sahf
out
es
ljmp
push
lret
aam
pop
mov
mov
mov
aas
sar
mulb
repz
cli
ret
mov
push
mov
loopne
js
cld
out
in
sub
in
mov
sbb
stos
cmpsb
adc
push
mov
and
test
sbb
sbb
jo
insl
sub
adc
push
ds
lret
adc
loop
lret
repnz
add
das
ret
je
or
movsb
add
jecxz
sub
or
das
mov
aas
pop
mov
jne
shlb
bound
ljmp
bound
dec
cli
inc
arpl
aas
mov
or
mov
xor
lahf
push
pop
dec
sub
dec
sbb
jge
mov
hlt
ret
xchg
sub
and
fcmove
rclb
dec
xor
inc
lds
adc
in
rclb
xor
icebp
test
movsb
ret
es
inc
loop
jno
cmp
data16
sub
fisubl
arpl
lahf
inc
lret
adc
stos
sbb
outsb
sub
stos
je
pop
jbe
mov
xchg
scas
inc
xor
pop
js
xor
mov
popf
xchg
jg
inc
lock
cs
dec
and
jno
xchg
bound
sub
jp
je
add
lock
insl
mov
scas
call
hlt
cld
std
add
cmpsl
hlt
pop
das
pop
and
imul
xchg
loope
addr16
es
aas
dec
mov
out
rclb
imul
les
jmp
daa
sbb
inc
pop
cwtl
mov
mov
mov
adc
push
das
jg
mov
sti
or
jno
mov
mov
mov
daa
jmp
push
lods
inc
outsb
shll
inc
ss
xchg
mov
inc
lcall
in
sarb
aad
pop
pop
cmp
les
jbe
xor
jns
and
inc
pop
mov
adc
jnp
pop
mov
cs
in
scas
jno
adc
outsb
cmp
add
adc
xor
leave
dec
shll
out
mov
jo
mov
cltd
nop
scas
jnp
int3
imul
mov
ret
ljmp
inc
cmp
jae
aam
add
aad
pusha
cs
stos
pop
mov
cs
fs
out
scas
shlb
rorb
pop
mov
iret
cmpsl
test
inc
inc
sub
in
sub
push
cmp
repz
push
ret
inc
pop
and
mov
aam
sub
dec
cmp
cmp
push
pop
ljmp
pusha
fdivrs
int
nop
add
lcall
mov
stc
scas
sub
xchg
push
add
xchg
dec
inc
addr16
ljmp
mov
in
and
sbb
mov
pop
mov
cmp
add
xchg
loop
imul
mov
adc
out
es
test
pop
rcl
lret
je
add
pop
fldt
cmp
rcrl
imul
push
fimull
mov
pop
lahf
sbb
repz
adc
mov
insb
in
push
add
popa
xor
jae
xor
jne
pop
cmp
xor
mov
std
int3
outsb
push
bound
bound
xor
call
fildll
sub
imul
jmp
cmp
stos
out
adc
jg
push
je
call
pop
popf
push
fbld
push
insl
mov
jbe
shrl
insb
sub
enter
cmp
repz
hlt
icebp
xor
pop
cld
mov
mov
cmp
movsl
cli
ret
enter
jge
cld
icebp
in
fcmove
repnz
add
out
pop
inc
adc
lods
xchg
pop
paddd
push
ret
mov
mov
scas
and
data16
lds
adc
loope
cmp
imul
dec
fcoms
rolb
mov
xchg
sahf
jae
xor
divl
fcmovnu
mulb
ret
mov
fnstcw
pop
inc
mov
int3
dec
mov
iret
movsl
je
rolb
ss
scas
jbe
cmc
lret
pop
in
aas
jb
in
mov
xchg
out
movsl
ss
xchg
pop
cmp
int3
fwait
insl
sti
or
mov
imul
inc
push
nop
pop
pop
rcl
push
outsl
faddp
pop
idivb
sub
xor
test
sub
mov
shl
or
jae
xor
idivb
in
pop
xor
xchg
mov
mov
shll
das
mov
pusha
dec
cmpsl
ret
mov
sub
jp
push
add
fisttps
pop
enter
mov
push
add
loope
jae
and
and
mov
movsl
pop
insl
js
mov
push
xor
aam
daa
xor
leave
or
in
inc
ljmp
test
and
dec
xor
jecxz
push
bound
lea
xchg
xlat
int3
pop
mov
cmp
add
xchg
rolb
cmp
movsl
mov
rcr
lock
call
int
leave
adc
xor
inc
mov
lret
flds
lods
mov
out
fwait
jl
cltd
mov
and
cld
fs
lret
das
and
dec
cs
into
inc
test
pushf
sti
pop
sub
adc
ret
xchg
pushf
das
fsubrp
bound
and
lods
xchg
push
stos
imulb
sbb
rolb
push
stc
cld
je
sti
cltd
cmpsb
mov
lret
ficoms
es
flds
nop
inc
mov
test
inc
adc
push
lods
xor
movsl
xor
rdtsc
test
mov
pushf
pop
sub
push
inc
dec
mov
inc
sbb
dec
sbb
insb
mov
js
fnstsw
cli
ja
iret
das
xchg
movsl
outsl
mov
or
sti
push
pop
inc
fwait
dec
aas
xor
or
mov
loop
adc
adc
mov
sub
enter
mov
pop
lods
movsb
shrb
mov
bnd
pop
sbb
pop
movsl
pusha
xchg
pop
mov
push
jl
jae
mov
pop
xchg
jl
scas
xlat
inc
mov
xor
add
mov
int
mov
fldenv
pushf
lret
rorl
sub
inc
pop
imul
jo
push
mov
cmpl
pushf
sarl
jmp
mov
repz
mov
out
loopne
jbe,pt
ret
fildl
xlat
and
xchg
sarb
jg
nop
cmp
lret
add
xchg
int
inc
mov
int3
inc
movsb
inc
into
dec
add
add
push
xchg
js
mov
mov
jae
pop
call
xchg
xor
lret
mov
sahf
fldcw
bound
notb
adc
rol
push
stc
cmp
test
imull
add
cld
cmp
ffree
or
mov
push
sub
pxor
shll
cld
push
mov
rcll
stos
cmp
jl
add
adc
enter
jb
repz
jle
push
sahf
cmp
or
lock
jg
cmp
fbstp
lea
testb
dec
mov
mov
jo
pop
loopne
inc
cltd
adc
mov
mov
pusha
daa
inc
pusha
out
dec
push
jae
outsl
xor
int3
insb
cmpsl
sub
ljmp
jb
or
xor
mov
icebp
sub
repnz
mov
push
adc
enter
xchg
mov
cwtl
sbb
fnstsw
sub
sbb
or
out
daa
and
push
or
in
pop
test
cmp
cmp
sbb
iret
orl
outsb
push
dec
cmc
or
arpl
imulb
jno
and
int
scas
inc
lods
jg
ficompl
xchg
cmpl
mov
add
jmp
xchg
dec
repnz
pop
loop
jge
adc
sub
stos
xor
out
mov
inc
gs
daa
mov
lea
les
call
and
jge
jno
push
rep
mov
std
pop
mov
mov
lods
sub
dec
jno,pn
dec
loope
shlb
dec
push
pop
sbb
or
inc
inc
mov
adc
or
and
mov
inc
add
fistpl
outsl
sbb
lcall
and
mov
xchg
daa
add
dec
fsubr
leave
lods
test
inc
sbb
pusha
sbb
repz
movb
js
cmp
out
mov
add
mov
push
insl
or
out
inc
sub
call
cld
sbb
rorl
lods
call
mov
sti
mov
scas
mov
adc
or
mov
aam
sub
repnz
dec
shll
mov
les
xor
add
sbb
xor
jl
lods
mov
xor
icebp
into
jmp
addl
jae
and
xor
hlt
les
sbb
lods
bound
test
jne
lret
jb
ret
movsb
loope
scas
mov
nop
fiadds
push
repnz
shl
jecxz
add
or
ds
stos
or
dec
incl
insb
aas
cmp
sub
sub
lds
sahf
cmpsl
inc
fdiv
cmp
push
mov
pop
aaa
and
cli
jne
mov
ljmp
in
sbb
or
outsl
xor
sub
test
std
pop
mov
add
lret
pop
push
lods
stos
lret
xlat
xor
rolb
imul
rcrl
aam
add
mov
and
stos
or
in
lea
loopne
inc
add
sbb
loop
lods
pslld
imul
cmpsb
test
jae
into
inc
movsl
test
pop
inc
out
xchg
sub
pop
sub
dec
xchg
jnp
add
sbb
mov
xor
int3
jo
cmpsl
lret
dec
rep
arpl
iret
or
aam
cmp
loop
iret
xchg
cwtl
and
sbb
repz
cmpsb
idivb
popa
imul
andl
loope
mov
int
xchg
faddl
scas
jo
call
repnz
cmpsl
mov
or
or
mov
xor
pop
jb
mov
xlat
lcall
xchg
and
out
or
lret
cmp
sub
int
mov
mov
cs
mov
adc
sub
pandn
pop
push
push
inc
ss
jmp
mov
and
popa
lods
push
pop
jae
popa
repz
lods
decb
inc
aas
mov
lods
adc
pop
xlat
push
sub
je
out
xlat
imul
cmp
sbb
es
lret
pop
call
stos
mov
mov
enter
cmc
adc
sahf
inc
and
in
je
pop
adc
outsb
out
mov
fimuls
fsts
mov
xor
push
adc
idivl
lahf
xorl
pop
cmc
jbe
jno
stc
jb
cmp
test
imul
gs
jne
push
xchg
mov
mov
imul
imul
mov
leave
jnp
movsb
adc
pop
stos
inc
mov
pusha
adc
xchg
add
mov
sub
mov
dec
adc
adc
add
fwait
jmp
repz
add
jae
test
lea
mov
je
ljmp
mov
push
push
dec
jns
pop
mov
inc
in
std
icebp
out
les
add
repnz
push
sub
mov
popa
dec
jmp
mov
bound
pop
xor
mov
add
adc
cli
xchg
hlt
cmp
rorl
jle
pop
out
clc
dec
fisubrs
mov
mov
jecxz
xor
cmp
ja
push
xchg
cmpsb
jo
sbb
mov
out
scas
mov
cmp
mov
pop
sti
xor
es
jecxz
sub
push
repnz
mov
mov
adc
loop
cmp
fdivrl
shrl
js
out
stos
xchg
test
fadds
xor
repz
mov
cltd
insl
js
or
popf
mov
mov
testb
lret
aad
add
cmpsl
inc
inc
loopne
cwtl
leave
dec
repnz
jno
aam
sub
subb
push
data16
cs
jae
cmp
and
xchg
fs
mov
mov
mov
bound
lret
jb
les
lret
add
cltd
insb
xchg
mov
data16
ret
mov
test
aaa
push
sahf
jle
add
cmpsb
cld
or
jo
and
iret
les
or
xchg
movsb
sub
push
cltd
mov
dec
cmp
sub
fiaddl
cmp
push
xchg
pop
xor
and
push
leave
push
add
adc
lods
pop
sbb
sbb
jae
add
or
les
out
sahf
cwtl
pop
icebp
movb
push
dec
mov
mov
pushf
inc
sub
cmc
adc
push
xor
add
xchg
and
xor
jg
mov
lods
mov
lret
pop
jbe
in
and
orb
addl
test
fwait
jge
pop
cmp
mov
lahf
or
lods
test
pop
stc
cmpsb
mov
addr16
mov
mov
out
insb
iret
rcrb
pop
and
fdivl
mov
sbb
cmp
test
push
fwait
inc
xchg
in
leave
aad
rcrb
xor
or
sbb
push
stc
movsl
faddl
mov
mov
mov
mov
int3
bound
mov
daa
or
sbb
sti
stos
push
fdivrl
loope
mov
leave
add
test
cmp
sub
ds
insb
loopne
cmpsl
adc
push
mov
roll
sbb
or
fidivl
and
sbb
das
out
negb
gs
aaa
cltd
lahf
in
and
scas
mov
sbb
jmp
add
lock
mov
sbb
test
lods
push
dec
inc
leave
dec
mov
push
loop
leave
rcll
call
sbb
insb
xchg
cmc
sbb
mov
mov
mov
push
roll
mov
je
push
or
leave
pop
xchg
push
sub
jl
jmp
mov
sub
mov
mov
out
mov
ljmp
movsl
push
xchg
dec
popf
add
sbb
pop
cmpsb
sub
adc
test
add
sub
int
lods
and
aam
or
aaa
mov
mov
mov
cmc
push
loope
pop
xchg
aas
xchg
push
popf
mov
es
imul
fcomps
test
lock
mov
rcrl
mov
movl
outsl
mov
add
inc
pop
in
push
xchg
pusha
pop
lret
in
mov
pop
fadd
jle
push
pusha
mov
mov
cmp
jecxz
hlt
sub
rcrl
mov
jno
enter
sbb
shlb
inc
pusha
jp
shrl
jne
sahf
lods
xchg
inc
push
cmp
fdivrl
cmpsl
xorb
adc
jne
mov
shr
subl
scas
jp
pop
push
fsub
sub
mov
mov
ss
or
adc
insl
jmp
fdivs
movsb
push
andb
mov
stc
and
cwtl
inc
nop
mov
sub
mov
mov
cmp
out
push
pop
cmp
les
sahf
inc
jle
mov
dec
xchg
cli
mov
dec
rcrl
sti
rcll
xor
ret
div
dec
and
cmp
filds
movsb
and
mov
mov
mov
shrb
sbb
cs
lock
cs
adcb
dec
mov
fidivrl
pop
push
add
and
xchg
bound
loop
testl
test
dec
in
imul
rclb
inc
repz
imul
rclb
mov
in
jae
inc
inc
mulb
mov
mov
sahf
sbb
stc
subl
ret
in
and
bnd
arpl
xchg
jp
push
jae
loop
outsb
dec
sbb
fsubrp
lock
or
cmp
jns
ret
pop
outsl
inc
icebp
or
jnp
inc
leave
jg
popf
adc
scas
xchg
enter
jl
jecxz
mov
pop
jno
les
mov
mov
rcll
jo
scas
mov
add
jge
lret
jmp
sub
imul
enter
push
jae
cld
jne
sbb
push
sub
sbb
cmpsb
gs
fisttps
loope
add
jnp
fisubrl
push
and
mov
ficompl
push
fs
mov
rcr
sub
jb
in
add
cmp
push
arpl
imull
loope
js
pop
data16
xor
inc
outsl
in
int
dec
bound
cmpsb
and
mov
ds
add
lds
add
cmc
cmpsl
pusha
or
adc
idivl
in
push
mov
jl
test
call
cmp
cmp
push
push
xchg
std
pop
xor
or
movsb
repz
sub
push
push
add
loop
dec
adc
pop
jnp
in
lock
xor
mov
cltd
push
lods
inc
pop
loope
pop
es
sahf
jle
jnp
add
push
inc
pop
orb
pop
jbe
and
repnz
sti
push
xchg
test
adc
lock
je
rorb
test
cmpb
add
jns
enter
loope
xchg
sbb
adc
outsl
cmp
xor
lds
mov
and
test
inc
test
adc
pop
sub
outsl
sar
das
insb
pop
outsb
dec
push
push
ds
sub
cmc
cmp
or
mov
mov
pop
sarb
or
jno
jecxz
popa
in
mov
pop
cld
testl
ret
insl
rolb
in
mov
mov
ret
fadds
fcmovb
enter
stos
movsl
andb
leave
xor
cli
mov
arpl
out
aaa
pop
adcl
insl
pusha
and
inc
sbb
arpl
aam
call
mov
jo
aaa
push
inc
div
ficompl
adcb
loopne
pop
sbb
push
call
add
xchg
imul
cmpsl
imul
xor
mov
jecxz
add
mov
cli
pop
lcall
or
jne
imul
fsubrp
lods
movsb
lds
pop
xchg
mov
cmc
push
add
pop
and
outsl
enter
sbb
xor
fwait
mov
and
sbb
sti
xchg
add
shll
jbe
sbbl
xor
inc
mov
inc
out
mov
pushl
mov
or
rorl
inc
call
push
cld
adc
lods
call
pusha
pushf
xchg
shll
push
xor
jmp
push
adc
dec
scas
inc
enter
sbbb
mov
inc
int
fsubrs
addl
adc
aam
cld
add
and
ret
int
pop
mov
fwait
outsb
scas
xor
loopne
inc
inc
jb
ficompl
mov
pop
shlb
inc
jge,pn
cwtl
rcll
in
sbb
repnz
mov
fdiv
lock
sub
mov
movsl
jle
inc
push
mov
enter
or
sub
and
mov
lds
add
aas
sub
jle
xor
cmpsl
out
push
out
xor
or
rorb
push
lea
stc
cwtl
cld
sbb
add
cmp
or
lahf
bound
fstpl
push
inc
adc
jle
sub
test
mov
mov
in
adc
mov
mov
outsl
cli
es
sub
mov
sti
mov
aad
and
addr16
lret
push
adc
sbb
cmp
cmp
push
pop
xor
int
sbb
sub
inc
daa
sbb
ljmp
mov
cwtl
pusha
cld
loope
cld
cmp
sub
imulb
cwtl
cmpsb
xor
mov
aad
cli
cld
sbb
push
mov
stc
jle
push
inc
cld
sti
mov
cltd
or
push
xor
in
std
stc
add
adc
mov
outsb
lfs
js
js
xchg
dec
mov
mov
cmp
cmp
dec
sub
sub
mov
ja
and
shll
fldcw
clc
cmpsb
jg
lock
add
jo
popa
mov
jbe
test
data16
dec
or
outsb
int3
or
call
leave
add
xlat
sbb
xchg
hlt
hlt
std
inc
pop
add
mov
jb
imul
mov
hlt
or
mov
lcall
test
inc
ret
out
sub
sub
xor
stc
sarl
mov
add
adc
push
add
push
lret
jmp
iret
popf
gs
push
mov
jmp
test
shlb
push
sub
or
lock
jmp
push
push
movsb
jge
out
dec
repz
jno
add
lcall
pop
fisubl
xchg
mov
fmulp
dec
int
cmpsb
shlb
in
push
rorl
ja
cmp
in
std
mov
cmp
fisttpll
mov
movsl
js
xchg
mov
adc
mov
mov
jns
test
insb
dec
enter
movsb
cld
in
lock
imul
loopne
and
loope
mov
enter
cmp
adc
into
clc
mov
mov
adc
sbb
mov
fiaddl
push
push
ja
rolb
cmp
dec
stos
and
jno
sbb
clc
xor
into
sbb
or
pop
xchg
pop
xor
push
out
jecxz
add
pop
jnp
fmuls
in
pop
arpl
jle
int
leave
inc
cs
popa
das
mov
mov
lods
lahf
dec
or
fld
pop
nop
xor
push
pushf
inc
pop
out
jo
shll
hlt
ficoms
adc
mov
push
in
mov
mov
or
test
push
xchg
enter
mov
rol
aad
repnz
pusha
adc
cmp
pushf
sbb
jmp
pushf
sbb
adc
fsubr
pop
pop
pushf
adc
sub
icebp
jecxz
test
add
jb
daa
push
addr16
faddl
cmp
pop
js
outsl
push
and
push
mov
ss
leave
rorl
mov
cmp
pop
gs
shr
lds
inc
mov
fiadds
test
mov
cmpsb
dec
adc
scas
ja
out
imul
shlb
sub
incl
dec
mov
adc
and
leave
in
cmp
push
pop
cld
cs
pop
sub
or
movsb
cltd
sub
testl
lock
into
add
icebp
sahf
outsl
mov
sbb
sahf
dec
mov
fwait
decb
mov
and
js
mov
outsb
push
and
dec
pushf
dec
lret
and
and
pop
fisttpl
fldcw
lahf
add
mov
rcrb
mov
dec
inc
mov
sbb
mov
push
shlb
jge
jecxz
mov
mov
push
sbb
jno
mov
mov
pop
cli
jmp
loopne
lea
mov
xchg
mov
jb
inc
dec
loop
incb
sahf
es
pop
xor
das
sub
ss
push
push
rorb
js
lea
pop
inc
jno
or
icebp
lock
mov
mov
xchg
dec
mov
mov
and
repz
adc
adc
sahf
aas
in
bound
mov
rcrl
in
dec
mov
or
fists
pop
mov
mov
mov
push
stos
std
arpl
stos
js
loopne
or
lea
gs
mov
lods
pop
insl
fcoms
test
pop
insb
xchg
mov
popa
push
loopne
fprem
lret
pop
out
lahf
scas
xor
mov
jmp
xor
jne
inc
add
repnz
cmp
test
andb
lods
sbb
idivl
mov
ja
mov
cmp
sahf
neg
sub
das
fwait
cmpsb
in
pusha
pop
popf
pop
das
sub
mov
jne
dec
leave
fisttpll
mov
das
push
mov
dec
pop
daa
rcr
xchg
loope
imul
leave
out
mov
mov
push
sti
push
push
sub
mov
dec
xor
push
mov
popf
push
nopl
mov
div
xchg
ret
sti
ds
push
and
jge
and
testb
mov
mulb
mov
dec
call
and
jns
out
push
popf
stc
sbb
inc
mov
iret
call
cltd
je
mov
xchg
inc
add
lods
aad
push
sti
push
out
outsl
cmc
jg
pop
lds
lcall
dec
lret
rcl
inc
cmpb
loopne
std
mov
sar
dec
and
insl
shlb
lock
pop
mov
cltd
cmp
repz
or
enter
xchg
sbb
out
clc
lret
push
inc
lods
sbb
shrl
cmp
mov
out
add
lret
mov
dec
ret
xor
add
mov
adc
jge
lcall
les
sub
lret
adc
out
inc
and
xor
and
out
adcl
jp
xor
fcmovnb
inc
lock
dec
push
add
cmp
lock
pushf
add
leave
lret
into
jg
sub
inc
addb
ljmp
lahf
cmp
jmp
das
xchg
fucom
in
sub
movsl
lea
fucompp
mov
add
orl
cmp
or
imul
xor
out
pop
iret
push
shlb
cltd
jle
sub
jae
outsl
mov
cmpl
or
push
mov
cwtl
sbbb
lock
push
pop
aas
enter
shll
adc
inc
dec
mov
je
bnd
call
loope
pop
push
shlb
je
inc
add
jbe
mov
repnz
push
xor
enter
xlat
in
in
mov
ss
movsl
cmc
xor
xchg
xor
inc
sbb
out
fldt
jge
inc
ret
cli
in
push
fstpl
push
mov
arpl
push
jecxz
and
ficompl
loope
sub
pop
out
mov
bound
xchg
repnz
mov
cmp
jne
call
dec
popa
mov
aam
clc
aas
cltd
movb
std
and
mov
push
cmpsb
jp
sub
in
mov
aad
and
mov
bound
nop
mov
into
jmp
jne
addb
test
inc
mov
enter
repz
divl
int
lcall
push
cmp
lds
dec
out
imul
test
mov
fildl
xchg
pop
sti
xchg
insl
add
jbe
xchg
jge
in
sahf
aaa
popf
add
mov
pop
mov
test
cmpsb
cmp
stc
int
lea
inc
fcmovbe
in
dec
dec
push
lods
subl
cmpsl
push
xchg
mov
sbb
lods
arpl
xor
mov
jg
cmp
xchg
and
xchg
sub
ror
rcl
xchg
xorb
ss
dec
cmp
fstps
mov
bound
push
mov
hlt
pop
ror
out
mov
leave
pop
adc
cltd
jle
mov
lock
push
mov
out
sub
or
cmp
sub
add
bound
das
ljmp
loop
ljmp
nop
test
fwait
lcall
cwtl
mov
fs
jb
or
cltd
ss
pop
lahf
test
add
sub
outsb
pop
mov
cmp
ljmp
mov
xchg
test
std
adc
rol
push
outsl
push
cld
cltd
mov
daa
mov
lods
and
stos
in
test
test
push
xchg
or
inc
cs
cmp
sarl
lcall
xor
xchg
sbb
popl
add
mov
aad
mov
ljmp
pop
hlt
leave
shl
aas
mov
pop
inc
xchg
and
int
sahf
push
add
or
out
sbbl
xlat
push
insb
cltd
dec
iret
fwait
pop
mov
mov
dec
xor
sub
repz
outsl
jne
mov
dec
in
add
pop
sar
call
divb
pusha
add
fmull
adc
rol
bound
data16
add
cli
call
jbe
mov
pop
loop
pop
xchg
sbb
xchg
sar
je
xchg
movsb
adc
inc
hlt
pop
jmp
push
add
sbbb
ror
mov
stc
push
adc
loopne
cmc
enter
jbe
iret
leave
sbb
jb
punpckhbw
jns
fstpl
xchg
daa
push
testl
inc
sahf
test
lret
clc
jl
adc
lret
sub
cmc
or
xchg
inc
xchg
cmc
push
sub
mov
ljmp
js
leave
jno
mov
inc
loopne
mov
inc
inc
add
jg
inc
mov
mov
loop
adc
mov
and
pusha
or
adc
outsb
or
sub
mulb
lea
mov
daa
push
cmp
xchg
int3
jl
out
das
mov
ja
sbb
and
sub
add
cmp
xchg
sub
adc
shll
test
mov
ja
out
push
mov
leave
inc
fs
aam
push
fstl
loope
mov
push
sbb
ret
cmp
imul
push
or
in
dec
fldt
imul
test
gs
lods
push
inc
lock
imul
cs
push
dec
xor
imul
pop
mov
lods
jmp
add
adc
nop
mov
repz
inc
loop
inc
in
rol
xor
sbb
sub
sub
xor
daa
outsl
arpl
aad
jne
sub
sahf
push
repz
cmp
inc
xchg
in
push
mov
sbb
imul
lods
xor
data16
xchg
push
jae
stc
rcll
pop
shr
popf
cld
xor
mov
lods
sbb
movsb
add
push
mov
enter
inc
xor
mov
lahf
add
add
loop
loope
andb
sub
inc
mov
pop
js
lods
xchg
mov
leave
cmpsl
clc
out
in
sub
repnz
pop
cld
jmp
rorb
jns
mov
pop
pop
cmp
out
out
xor
adc
mov
inc
stc
jecxz
pop
push
gs
push
and
cwtl
xlat
popf
sub
mov
jno
pushf
int
decb
cmc
imul
das
mov
cmc
inc
call
ds
cmp
cmp
mov
repz
js
popf
inc
call
les
jns
sbb
scas
mov
shlb
jo
pop
enter
and
sbb
fs
aam
xor
cmp
cmp
adc
fnstenv
jmp
pop
mov
cmp
scas
les
jo
cld
xchg
inc
popa
shrl
sbb
mov
subl
fisttpll
fistpl
repnz
and
lock
clc
inc
push
mov
fcomps
push
or
test
sahf
cmp
fildl
outsb
push
das
aam
test
test
or
adcb
sub
sub
mov
adc
in
xchg
sahf
and
ja
push
fsubs
cltd
add
or
inc
push
ss
fisubrl
add
outsl
dec
cmpsl
pusha
shlb
mov
mov
mov
cmp
mov
jmp
xor
fcoms
xor
mov
pop
leave
jmp
add
stos
jmp
jge
loop
and
dec
inc
xor
std
or
jne
lcall
aas
fldt
pop
stc
movsb
mov
inc
in
sbb
mov
cmp
lcall
rcll
sbb
nop
clc
add
xchg
aad
in
sbb
xlat
sub
scas
or
push
pop
in
add
adc
dec
inc
cli
mov
xchg
sbbb
mov
or
sub
xchg
sti
adc
frstor
and
dec
inc
lds
cmp
and
xor
pop
xchg
cmp
insb
mov
inc
shlb
lret
inc
and
and
in
cmpsb
in
sub
mov
rclb
pop
dec
mov
push
daa
in
rcrb
fwait
sub
rorl
pop
dec
mov
movsl
mov
adc
pop
leave
das
stc
psraw
add
sub
pop
inc
push
dec
ds
fs
pop
cwtl
in
loopne
push
leave
xorb
mov
out
ret
in
push
add
mov
mov
jnp
mov
fcomip
xchg
in
ss
dec
call
jo
sbb
cltd
cmp
push
mov
or
insb
scas
jle
and
scas
lea
out
xor
fsubrs
adc
out
lods
in
insb
loop
ja
dec
or
pop
mov
mov
outsb
dec
push
scas
hlt
mov
jp
mov
cltd
sahf
or
std
adc
mov
and
xbegin
dec
gs
repz
sbb
cmp
pop
pushf
fbld
lret
int3
inc
testb
rcrl
or
in
or
xor
push
lds
subb
in
stos
leave
push
fs
push
pop
add
negl
je
lock
test
cmpsb
dec
in
mov
inc
xor
fwait
or
enter
adc
icebp
jl
mov
push
cmp
dec
mov
mov
add
push
mov
les
push
es
jno
nop
outsl
in
push
xchg
mov
testl
add
jne
mov
cltd
sti
loope
rcrl
dec
add
xchg
ljmp
ret
mov
pop
inc
cmp
fadd
pop
test
es
bound
or
fisubl
jmp
pop
hlt
push
mov
fs
adc
test
mov
int3
js
pop
add
test
xor
lods
jmp
mov
es
sub
jbe
mov
icebp
stos
out
jbe
pop
pop
mov
and
inc
stos
jecxz
jbe
sub
mov
adc
test
test
sub
lds
lret
pop
sbb
sub
sub
roll
fisttpll
cs
adcl
mov
popa
test
mov
adcl
insb
imull
mov
push
mov
lds
in
jbe
bound
lock
inc
cmpsb
xchg
sub
xor
add
inc
mov
bound
testl
fsts
xchg
adc
fs
cmp
xor
xchg
cmpsb
adc
jbe
in
mov
jmp
jmp
lcall
in
test
popf
xor
xor
dec
and
adc
mov
pop
mov
sbb
pushf
and
sub
adc
repnz
icebp
sbb
jo
hlt
je
mov
jp
pop
das
leave
cmc
das
daa
cmp
pop
xchg
pop
ret
pop
adc
bound
mov
in
aas
movsl
movzwl
insl
insl
xor
sbb
mov
pusha
ljmp
in
test
ja
out
ret
dec
pusha
sub
sbb
shlb
or
push
and
stos
push
mov
imul
test
hlt
cmpsb
int3
and
push
int
add
daa
pop
pop
mov
and
pop
repz
in
in
pop
xchg
xchg
ds
testl
add
mov
add
subb
adc
sbb
jl
js
add
ret
rcr
lret
out
xlat
pop
push
cmp
mov
cmp
lahf
add
sbb
fs
jp
roll
lcall
cmp
mov
sbb
aad
push
inc
or
jp
psubd
rclb
loope
inc
xchg
es
inc
das
xor
fists
push
lcall
clc
jmp
out
mov
and
adc
jle
in
enter
popf
sbb
sbb
mov
int
mov
dec
adc
test
es
adc
and
in
jne
push
iret
mov
xchg
test
or
ffreep
push
add
dec
loopne
mov
sub
cvtss2si
lret
in
cld
lock
test
ljmp
push
mov
jp
xor
inc
mov
loope
repz
dec
shl
and
bsr
mov
fnsave
dec
mov
sub
lret
sbb
subb
xchg
cmc
nop
test
dec
sbb
mov
jae
jns
add
jg
pushf
subb
imul
dec
lahf
outsb
hlt
pop
inc
xchg
adc
lcall
aas
xor
push
xorl
mov
dec
test
and
cmp
cmp
cltd
lret
pop
xchg
push
mov
dec
mov
dec
pop
loop
loopne
sub
jns
xorl
in
sti
out
in
dec
mov
or
ss
jp
adc
out
cmp
xor
push
jp
cmc
cmp
mov
popf
ret
out
cmpsl
inc
jne
mov
mov
pop
push
add
xlat
outsb
lods
imul
sub
scas
jge
add
repnz
or
push
sti
push
xchg
lret
into
lahf
pop
or
fwait
sub
aam
fidivl
call
and
scas
mov
or
fnstcw
jae
inc
jbe
push
mov
push
mov
iret
or
mov
stos
adc
dec
dec
xor
mov
stos
and
jbe
ljmp
inc
and
repnz
pushf
mov
sub
outsb
adc
pop
adc
ljmp
dec
add
rcrl
imul
push
add
ja
fwait
cmp
xchg
sti
pop
xchg
subl
or
dec
mov
popa
fildl
stc
ret
shl
or
clc
cwtl
mov
pop
loope
pop
jnp
push
jl
adc
push
int3
xchg
pop
enter
jp,pt
and
sbb
sub
stos
loop
sbbb
or
pop
call
mov
adc
sub
out
push
xchg
repnz
cmp
test
cmp
push
pop
xchg
aaa
mov
xor
fcmove
xlat
mov
pop
daa
xchg
cmpb
outsb
sub
jne
mov
inc
push
dec
cmc
in
inc
sbb
repnz
push
mov
inc
into
rol
fsubs
xchg
fcmovnbe
push
pop
sbb
aaa
inc
fldpi
ret
adc
mov
mov
loope
lret
mov
cmpsl
mov
xchg
xor
lahf
pushf
lret
push
inc
or
sub
cmp
ror
subb
push
in
xchg
cmp
adc
cmp
mov
popf
or
mov
jmp
mov
lea
aas
add
cld
outsl
or
push
jmp
fiaddl
xchg
and
push
loope
pop
stc
daa
rcrl
scas
adc
xchg
cmpsb
push
cwtl
js
fld
jns
lods
and
shll
jecxz
lea
loope
jl
or
das
bound
xchg
inc
sti
and
push
push
gs
nop
loopne
pop
mov
fidivs
cwtl
ljmp
filds
jl
pop
rcll
pop
jb
add
jmp
movsl
das
xor
sbb
dec
xchg
jo
gs
call
cmp
push
out
xor
cmp
in
cltd
mov
xorl
imul
pop
jl
mov
mov
sub
inc
test
roll
cmpsl
adc
int3
cmc
in
scas
xlat
push
push
mov
je
insl
jp
push
and
adc
cld
pop
int3
mov
sbb
cmpsl
jne
mov
ficompl
sbb
divb
imul
pop
xchg
cmpsl
fildl
jmp
fisubrs
pop
insl
pop
int
pop
pop
cmp
pusha
sbb
fwait
lret
rorl
in
aam
mov
pop
mov
mov
mov
inc
imul
lahf
xor
es
jno
lahf
leave
call
nop
add
neg
cmp
and
adc
mov
xor
mov
mov
aaa
int
imul
stc
cli
mov
jbe
fcoms
or
hlt
mov
add
mov
inc
sbb
add
dec
adc
call
sbb
cltd
mov
ret
mov
pushl
call
jp
stos
push
push
push
xorb
jge
or
cmpsb
adcl
hlt
jo
imul
popa
outsb
xchg
aas
or
insb
shll
push
faddl
xlat
jl
jbe
adc
std
bnd
leave
and
jmp
add
jge
sti
in
in
mov
or
fistpll
stos
cmp
je
push
std
jno
enter
push
lods
sbb
lds
add
inc
mov
fdivr
repz
pop
fucom
out
adc
movsb
or
push
aas
icebp
mov
push
and
jge
lret
or
mov
jb
or
fsubl
scas
loop
or
imul
pop
mov
cmp
cli
pop
js
fdivl
sti
fwait
lea
sbb
push
popl
outsl
mov
fistl
cmpsb
mov
pop
add
push
rolb
mov
les
jb
loopne
pop
pop
gs
xor
ret
inc
mov
adc
adc
arpl
fstpt
test
sub
pop
pop
lcall
pop
pop
dec
mov
or
add
cld
enter
cmp
aad
fistps
movsb
and
in
pusha
cli
cmp
js
pusha
shl
and
faddl
mov
bound
sub
enter
xor
shlb
out
cmp
imul
imul
jecxz
xchg
or
outsl
pop
sbb
out
jge
inc
pushf
loop
xor
enter
pop
cmp
inc
dec
pop
jg
nop
dec
xor
fiadds
fists
mov
xchg
push
gs
pop
sbb
ret
lods
es
mov
icebp
inc
mov
sti
xlat
mov
fwait
dec
mov
push
rcrl
jno
cmpsl
mov
pop
jecxz
jp
cmp
loope
imul
mov
mov
xchg
pop
jmp
cs
das
fildll
mov
mov
ja
dec
sbbb
in
and
fwait
cmp
mov
pop
push
shlb
xor
xlat
dec
mov
fldl
pushf
xlat
mov
sub
add
cmp
fsubl
sub
fildl
fcmove
add
fldcw
int3
les
je
in
ljmp
insb
push
mov
add
leave
ret
jno
lods
sub
daa
fiadds
lcall
cmp
push
mov
stos
add
add
stos
mov
sti
or
cmp
faddl
mov
or
mov
ds
add
cmpsb
mov
push
fcoml
xor
ds
movsl
enter
cli
test
mov
push
push
jecxz
push
mov
lods
push
pusha
cwtl
mov
imul
dec
lea
sub
xor
xchg
ds
out
shll
sbb
rolb
dec
out
out
loop
mov
cltd
loop
sbb
aas
and
imulb
xchg
and
aad
inc
cmp
jnp
in
mov
push
mov
cli
in
cwtl
dec
mov
push
outsl
fadd
movlps
push
repz
out
sub
pusha
test
mov
pop
out
add
mov
pusha
jbe
mov
xchg
addr16
lock
test
js
adc
sti
movsb
dec
sbb
push
scas
mov
shll
push
pop
mov
jmp
sub
frstor
mov
mov
shl
mov
and
insb
movsb
sbb
mov
loop
in
mov
aam
jmp
imul
push
hlt
adc
sbb
cli
cltd
or
bndstx
lret
push
xor
inc
mov
data16
addl
sbb
jae
ret
push
dec
pushf
push
andb
adc
out
mov
jl
lret
in
test
lcall
ret
out
and
out
out
dec
mov
lahf
sahf
jecxz
movsl
fdivrl
or
jns
push
sarl
and
cmc
push
push
sbb
sar
cmp
hlt
mov
mov
xchg
xorb
mov
in
sub
dec
push
xor
fwait
leave
xchg
iret
sahf
rcll
ret
adcl
scas
cwtl
lahf
loopne
loop
push
xor
pop
mov
mov
mov
sub
rcll
les
int3
stos
outsl
lcall
sub
shlb
lret
aam
mov
push
stos
mov
shll
clc
push
adc
mov
jo
pop
cwtl
cld
pop
push
call
push
lods
pop
jbe
xchg
cwtl
jge
outsb
out
push
push
js
arpl
adc
shll
dec
and
nop
popf
pushf
mov
test
scas
jp
xchg
out
mov
push
inc
cmp
xchg
push
sbb
shrl
std
ljmp
fidivl
inc
xchg
add
push
xor
hlt
sub
xor
sub
sti
roll
int3
aam
mov
mov
dec
jb
adc
and
leave
insb
push
inc
in
fsubs
jecxz
adc
movsb
ljmp
or
mov
pusha
daa
and
mov
pop
sbb
outsl
adc
xor
dec
jmp
loop
lods
inc
jg
insl
cmovl
push
out
mov
lock
inc
fistl
lods
dec
cmpsl
adc
adc
pxor
mov
mov
fwait
and
movsb
nop
mov
mov
ljmp
mov
jge
test
sbb
loop
dec
out
stos
mov
xchg
cmp
test
out
mov
or
jle
xor
and
inc
lret
pop
clc
inc
jb
xor
and
popa
nop
incl
fs
movsb
cmp
or
adc
xor
fmuls
loope
xchg
mov
xchg
push
push
popa
loope
ret
push
out
mov
inc
add
mov
outsb
std
fcompl
inc
xchg
xor
cld
hlt
test
cltd
mov
pop
call
loope
mov
sub
stc
pop
push
pop
or
push
outsb
xor
jnp
movsl
call
dec
clc
inc
jne
mov
into
dec
dec
sbb
mov
dec
pop
aam
in
xchg
pop
sbb
nop
add
mov
leave
jnp
adc
xchg
inc
sub
or
add
mov
mov
sub
out
dec
push
lcall
movsl
adc
jg
call
rcr
pusha
mov
mov
jge
xchg
inc
in
cli
aaa
stc
pushl
out
adc
aad
xor
xor
mov
ss
sbb
or
int3
xchg
xchg
movsl
push
xor
cmpsb
cli
out
sbb
mov
rorl
push
aaa
mov
hlt
mov
iret
in
mov
bnd
aad
imul
dec
ljmp
dec
addl
inc
cmp
inc
addr16
dec
pop
xor
xchg
cld
inc
mov
xlat
dec
repnz
xchg
mov
jns
xchg
sbb
fistpll
push
jg
insb
ret
fstpt
icebp
lret
out
adc
mov
nop
sub
xchg
add
lods
loopne
pop
addr16
and
pop
imul
loop
sbb
mov
addr16
mov
jb
pop
shlb
sub
aad
inc
out
test
pop
std
pop
lea
out
push
and
call
inc
insl
out
mov
cmp
inc
or
inc
pop
mul
or
fnstsw
scas
insb
fidivrs
insb
cmp
mov
popa
xchg
jno
arpl
add
test
xor
dec
lcall
jge
shll
xorl
xchg
scas
out
je
sbb
loope
dec
or
aam
dec
ja
xor
fdivp
stos
pop
add
int
inc
adcb
or
popf
insb
das
stc
fmul
push
into
out
ja
rorl
push
dec
orps
mov
pusha
inc
ja
pop
ss
aaa
xchg
data16
shl
mov
mov
add
or
stos
test
dec
cmpsl
push
sbb
repz
rcll
sti
adc
xlat
cmp
fs
andb
sbb
ret
dec
lcall
inc
cs
sub
ds
inc
rorb
mov
push
mov
mov
sbb
inc
sbb
sub
xchg
push
mov
inc
out
jb
adc
into
add
and
jmp
enter
adc
add
add
test
in
inc
sub
sbb
or
cmp
psubd
cmc
adc
mov
inc
cmp
sbb
fstpl
or
dec
out
xor
sbb
std
pop
add
add
test
sub
mov
insb
push
cltd
jns
inc
xchg
push
shrb
jo
test
adcl
nop
das
dec
fsubr
sub
fidivl
out
jp
in
inc
xchg
jno
add
aaa
jne
xchg
jbe
ja
das
pusha
mov
aaa
xor
neg
mov
ss
xchg
ds
adc
bswap
adc
cmp
fistpll
inc
es
jnp
adc
pop
fsub
js
flds
dec
mov
or
arpl
xchg
sti
mov
fidivs
mov
repz
data16
pop
arpl
mov
addr16
ds
jnp
cmpsl
mov
cmp
cmp
xor
aaa
inc
xor
cmpb
pop
ljmp
mov
in
rcr
dec
int
sub
jle
out
or
ficoml
xchg
test
iret
pusha
lock
inc
pop
cld
mov
gs
sti
dec
pop
sub
jle
fcmovb
mov
into
out
inc
das
jge
push
stos
xchg
mov
jns
or
mov
dec
aaa
or
popa
xchg
loopne
sbb
aas
mov
insb
movsb
push
xor
inc
jo
fldt
cmpl
cmp
testl
xchg
out
jmp
rcrl
xor
mov
mov
cmpsl
push
fs
jmp
outsb
push
inc
pop
sbb
mov
push
ret
fadds
popa
frstor
lods
clc
jle
fs
out
cmp
sti
inc
pop
cmp
xchg
loopne
test
adc
std
stos
cmpsl
filds
xchg
leave
push
sbb
mov
sbb
xor
shlb
and
and
xor
aam
or
hlt
test
ss
sbbb
jne
xor
in
mov
xor
scas
mov
push
out
and
xchg
pop
sbb
pushf
mov
xchg
or
push
jp
mov
xlat
xchg
pop
aas
jno
xor
popf
scas
sti
xor
mov
mov
dec
mov
lcall
push
cmp
adc
jns
dec
xlat
xor
pop
imul
clc
xchg
jl
aad
dec
fstl
push
pop
aam
add
test
push
insb
jbe
fcmovnb
xchg
cmc
pop
mov
xlat
icebp
ljmp
int
imul
fsubs
push
pop
and
loope
adc
pusha
sub
pop
orl
mulb
or
loope
arpl
fnstsw
inc
mov
bnd
sbb
push
mov
lods
lret
dec
dec
aaa
sub
inc
es
mov
std
or
xor
fimuls
test
icebp
lret
inc
sbb
in
sbb
rol
jbe
aas
dec
mov
and
xlat
outsl
xchg
push
jle
xchg
mov
push
mov
pop
lds
in
fs
mov
test
aaa
leave
push
insl
mov
pop
mov
push
in
loop
out
sbb
pushf
outsl
aam
mov
imul
filds
dec
addr16
mov
xor
fcmovu
mov
and
and
inc
dec
mov
inc
inc
add
les
push
in
dec
dec
mov
outsl
setnp
mov
or
ja
sarl
out
jecxz
push
mov
dec
stos
loopne
jb
mov
jo
dec
jnp
enter
cmc
icebp
xchg
in
xchg
lods
mov
mov
cmpb
xor
test
leave
bsf
shr
popf
adc
aas
lds
sub
and
mov
mov
and
icebp
out
and
inc
jmp
jo
dec
mov
cmp
xchg
xor
andb
mov
cld
mov
push
je
adcl
aas
jmp
out
daa
mov
mov
push
mov
cmp
movsl
out
inc
cmp
clc
lock
lea
stc
inc
fldenv
scas
loop
test
push
cmp
movsb
in
sarl
xchg
add
dec
add
icebp
and
cmc
je
push
mov
ja
push
imul
and
cwtl
jle
mov
dec
les
pop
nop
pop
fimull
adcb
js
or
adc
popa
add
mov
or
xchg
ffreep
sbb
jmp
sub
jno
push
loope
dec
fmuls
fwait
mov
sahf
mov
insb
lea
fidivl
sbb
fwait
push
lds
mov
les
add
and
push
mov
outsb
jno
xchg
mov
es
xor
xor
das
jns
fcoml
mov
xor
or
hlt
mov
adc
and
mov
test
cmp
ficompl
jmp
mov
test
push
pop
dec
aaa
imull
sbb
inc
push
dec
rcll
enter
xor
mov
cmp
imul
sub
xor
fsubrl
dec
add
call
pop
fsincos
lods
xchg
fimull
fistpll
lds
gs
pop
push
shl
pushf
mov
aas
and
push
lcall
das
loope
pop
std
mov
push
jl
movsb
or
outsl
xor
lds
dec
push
or
push
add
negb
incl
inc
in
outsl
ja
adc
and
push
sub
cmp
cltd
ljmp
jl
dec
dec
icebp
jne
lods
test
jmp
setae
stos
pop
sub
aaa
push
rcrl
int3
and
inc
frstor
or
repz
pusha
inc
jmp
sahf
push
sub
pusha
push
adc
add
pop
aaa
xchg
xchg
cmp
call
push
push
xorb
adc
popa
jae
jne
stos
xor
popf
dec
test
scas
test
outsl
xchg
mov
cltd
pusha
lods
aas
pushf
fldcw
xor
add
int
dec
aam
pop
or
jb
mov
lea
ss
inc
dec
les
dec
xor
xor
cltd
outsb
mov
push
pop
loope
dec
loope
pop
aas
loop
movsl
xchg
mov
pop
add
inc
repnz
outsb
and
loop
xchg
mov
lock
lods
xlat
dec
xchg
ret
jne
push
mov
lea
cld
mov
sti
stos
lock
mov
cwtl
lret
jmp
fdivrp
adc
xor
in
inc
aam
xchg
sahf
mov
inc
ret
xor
inc
std
mov
cmp
xor
popa
mov
add
and
scas
insl
das
adc
pop
inc
pop
xor
mov
mov
cmpsb
es
push
jle
or
dec
call
inc
lret
rsqrtps
xor
aaa
sbb
mov
jge
in
sti
idivb
in
pop
jns
sti
ja
sub
repz
nop
sub
aas
sub
lcall
nop
push
cmp
addl
cmc
jo
mov
in
outsl
orl
inc
ret
stos
sub
cli
int
popa
pop
sti
fldl
mov
mov
push
int
call
add
push
ficomps
ror
mov
aaa
aad
test
xor
dec
pusha
add
xor
scas
scas
fistpll
int
ror
fs
pop
sbb
hlt
loope
fbld
inc
pop
xor
inc
sub
lock
push
jo
daa
or
push
push
iret
mov
xchg
add
lret
imul
repnz
xchg
mov
mov
jb
mov
addr16
hlt
cmp
sub
xor
dec
lcall
int
or
lock
js
push
pop
cmp
shl
pushw
das
outsb
add
rcr
mov
lea
push
or
inc
cmp
fmull
mov
and
aaa
lret
sbb
lret
inc
and
pop
popa
add
sbb
add
repz
stc
mov
bound
mov
filds
pop
stos
xchg
mov
cltd
mov
int3
sub
sahf
je
pop
cmp
aam
scas
fcoms
int3
dec
mov
idivl
int3
add
repnz
lock
faddl
rorl
and
cmpsb
cmp
xor
outsb
fistps
cld
fs
jl
mov
lods
dec
or
push
cmp
fisubs
sbb
int
xor
mov
roll
divb
out
sti
pop
push
test
lret
leave
insl
filds
mov
cwtl
or
xchg
cmp
je
jne
ret
in
and
pop
rcrl
pop
cli
mulb
cli
dec
mov
cmp
adcb
bound
mov
ja
jbe
jecxz
aam
leave
dec
lods
add
mov
arpl
jae
filds
aas
push
push
daa
aad
cmp
mov
mov
imul
sbb
sahf
filds
mov
shll
jbe
inc
mov
test
test
mov
cmc
jns
ss
out
mov
imul
clc
cli
lock
cmp
popa
roll
test
xchg
jecxz
pop
push
das
add
leave
stos
cmp
popf
enter
and
sarl
mov
popf
pushf
mov
out
fs
rcr
loopne
mov
lcall
ss
stc
adc
adc
add
or
dec
push
shlb
je
outsl
sbb
outsl
or
mov
out
call
mov
mov
test
insl
xor
divl
pop
orl
pop
jl
pop
push
rol
fdivp
add
mov
adc
mov
test
jp
cltd
cli
xor
fdivrl
loope
sub
cmc
ret
xchg
xchg
std
aaa
lea
aam
fwait
xor
pop
mov
add
pop
jns
sbb
sbb
or
je
xchg
dec
or
aaa
xchg
mov
inc
in
nop
dec
icebp
out
push
fdiv
movsb
adc
lret
pop
jge
mov
inc
cmp
sbb
cmpsl
or
inc
mov
mov
aad
add
and
pop
jo,pt
loopne
repnz
xchg
xor
ret
dec
dec
loopne
lahf
fcompl
lods
aam
mul
cmpl
jae
iret
add
sub
out
icebp
push
lahf
add
sahf
es
pop
pop
enter
inc
add
mov
aas
and
cmpsl
mov
cld
adc
dec
dec
pop
push
lods
mov
in
repnz
repnz
mov
test
sub
out
xchg
mov
std
pop
fwait
jb
mov
push
push
pop
mov
xor
or
popf
cmpsb
jg
int
les
push
scas
dec
mov
add
adc
sbb
jmp
xor
int
fwait
aas
ljmp
jecxz
xor
iret
scas
fldenv
loopne
nop
cmpsl
test
xor
fninit
ret
xor
in
push
lcall
les
sub
jle
movsb
cld
mov
xor
mov
adc
loop
mov
ror
cmp
inc
add
mov
pop
mov
sub
and
mov
popa
neg
daa
and
lea
test
mov
shrl
push
std
lahf
leave
rclb
add
iret
loope
dec
dec
push
pop
stos
cmpsl
mov
xchg
push
mov
and
mov
push
inc
push
call
xchg
adc
out
fnsave
ljmp
mov
popf
adc
lcall
dec
mov
mov
fwait
call
shlb
and
sub
or
adc
jle
mov
jne
mov
bound
movsl
xchg
sbbl
mov
loopne
subl
cmpsb
push
sub
sub
sbb
push
xchg
inc
scas
xchg
test
je
cmpsl
mov
ret
push
mov
or
cmp
fdivrl
jle
sbb
imul
xchg
aad
add
push
sub
mov
stos
jne
es
cmp
pop
scas
out
dec
xor
ds
dec
pop
sub
jns
or
lods
push
ds
mov
pop
loope
jmp
mov
jns
sti
cltd
lret
cmp
mov
cmp
leave
adc
pop
cwtl
jbe
mov
cmpb
movsb
xchg
js
jge
xchg
inc
lea
lcall
xor
adc
cli
pushf
rorl
andl
inc
stos
mov
lods
sub
xor
fs
push
pop
jmp
scas
xor
jne
insb
mov
mov
loope
inc
bound
test
xchg
rolb
push
pop
aam
xor
cmp
hlt
nopl
push
fists
vmread
fsin
mov
outsb
hlt
les
xor
jmp
sbb
push
inc
nop
daa
iret
and
popf
dec
mov
adc
sub
loope
mov
and
mov
pop
repz
jecxz
pushf
add
cmpsb
cmp
pusha
xchg
in
adc
or
mov
aam
mov
cmpsb
pop
xchg
or
pusha
cmp
push
insl
jne
inc
ss
and
aad
cmc
sub
push
les
xlat
xor
jecxz
repz
aad
xor
icebp
inc
lret
xorb
cmp
ret
ds
pop
xchg
out
sub
arpl
andb
xor
add
xchg
ret
fldcw
adc
add
int3
inc
sub
lods
aad
and
in
mov
test
mov
js
cmpsb
mov
lea
movsb
add
sbb
cmp
xorl
or
neg
jecxz
fidivrs
test
loope
cmp
push
into
sub
gs
scas
sbbl
and
add
jge
ds
stos
mov
mov
cmp
push
cwtl
scas
and
and
scas
cmp
fwait
mov
test
das
adc
pop
outsb
sub
push
xor
sahf
dec
test
xchg
in
std
push
add
outsb
popa
les
out
aas
or
filds
and
or
jmp
pushf
in
sbb
dec
dec
cli
imul
and
movsl
jo
ss
xchg
lea
inc
xor
push
aad
daa
xor
scas
lods
addr16
xchg
lahf
aaa
sbb
cmp
sbb
test
and
test
loopne
lods
pushl
mov
or
scas
or
scas
cltd
cmp
imul
cmp
leave
add
mov
xchg
fdivl
xor
in
or
mov
jne
cmp
jmp
je
cmpsb
push
dec
jmp
mov
inc
and
jbe
xor
push
pop
out
adc
rolb
sti
xor
push
mov
negb
in
add
sub
outsl
or
fmuls
out
sbb
mov
shl
adc
scas
insb
jge
call
adc
mov
add
jae
cld
jmp
push
mov
outsb
cmp
repnz
mov
fisubrl
scas
loop
mov
or
iret
xor
pop
arpl
jmp
imul
or
das
imul
dec
aaa
pop
sbb
dec
cmc
ljmp
push
or
add
xor
pop
addr16
cltd
push
movsl
dec
lea
fisttpll
je
jae
and
icebp
test
aaa
popf
or
test
inc
lods
sbb
sbb
mov
ficoml
mov
lods
les
jns
js
inc
mov
push
xchg
test
xchg
je
and
int
xchg
stc
testl
sub
and
sub
pop
dec
in
adc
jp
jmp
nop
jmp
adc
xchg
and
cltd
jle
inc
dec
std
mov
push
test
pop
rcl
push
ror
xchg
mov
lret
sbb
jl
aam
jbe
adc
arpl
push
xchg
dec
push
mov
and
neg
repnz
cmc
xchg
popf
push
clc
adc
xor
or
cwtl
jb
inc
lock
test
out
sub
test
out
rclb
not
dec
cli
and
mov
shlb
loopne
or
pop
pop
stos
inc
mov
clc
stc
adc
test
dec
jl
leave
adc
add
fldl
rorb
jecxz
pop
subb
inc
je
add
xchg
mov
cmp
xlat
mov
and
xor
dec
add
sbb
mov
sti
adc
loope
inc
adc
nop
fstl
mov
add
push
dec
ret
mov
xchg
subb
std
in
sbb
and
mov
mov
imul
popf
fisubl
test
cmp
lret
cmpsl
jne
cmp
in
jmp
sbb
test
push
lods
iret
ficomps
or
jl
xchg
fwait
cmp
inc
fisttpl
sub
je
loop
fadds
mov
test
bound
lcall
cmc
test
dec
sub
mov
vcvtdq2pd
fwait
int
jmp
or
pop
cwtl
sahf
jl
pop
sbb
gs
data16
loope
imul
lret
aam
xor
xchg
int3
fldl
mov
call
mov
dec
popa
jb
jbe
cmp
mov
adc
rcl
jge
aad
shl
bound
add
push
jecxz
pop
mov
setns
in
in
in
cmp
xchg
jns
dec
add
and
jns
lods
mov
sbb
ljmp
jmp
repnz
cmp
jnp
add
les
pop
ret
mov
scas
inc
pop
fcom
sub
leave
sbb
sahf
lahf
sbb
push
sub
mov
sti
out
or
and
call
and
and
loope
imulb
dec
pop
jo
mov
fs
jl
xor
divb
test
in
clc
adc
xor
and
cltd
and
sbb
push
add
or
addr16
cmp
mov
lret
xorl
das
jns
push
sub
sub
pushf
mov
add
push
mov
mov
or
call
fadds
add
lods
or
dec
pop
orb
pop
inc
mov
rclb
mov
jne
jb
mov
add
xchg
popa
aaa
fldt
sbb
inc
push
idivb
add
ljmp
inc
ret
dec
sub
cmp
adc
xchg
out
rcrl
or
lcall
imul
bound
loopne
movsb
popf
insb
jecxz
jp
test
sbb
dec
fwait
xor
pop
mov
test
pop
mov
andl
outsb
dec
test
gs
int
jno
out
add
mov
mov
incl
jmp
jmp
iret
sbb
lret
icebp
adcb
sbbl
mulb
xor
jecxz
iret
sub
jae
adc
cmp
lcall
adc
mov
jp
dec
mov
cmpl
cmpsl
stos
dec
loopne
sub
loope
add
dec
pushl
pushf
test
mov
mov
lock
mov
pop
jle
jle
sahf
loope
fdivr
test
faddl
out
stc
loope
mov
ret
adc
push
cmc
sbb
hlt
pop
jl
das
mov
rolb
pop
push
in
mov
mov
scas
xchg
and
pusha
mov
xor
mov
cmp
pop
ret
pop
cltd
outsl
add
pusha
dec
fsub
mov
adc
xor
pop
outsl
lret
push
mov
xor
sbb
cmp
xor
addl
sbb
jecxz
sbb
mov
imul
mov
xor
jnp
sub
dec
push
sbb
mov
sbb
fiadds
cmp
add
popa
mov
mov
mov
cmp
pop
sub
icebp
pop
aam
addl
dec
jb
cld
cltd
inc
addr16
mov
mov
ds
fmull
imul
icebp
loop
adc
adc
mov
add
jno
clc
mov
call
lret
in
jge
scas
mov
aad
pop
mov
and
xor
js
aad
cmpsl
mov
jecxz
mov
out
inc
repz
mov
sbb
je
stos
js
dec
and
sahf
rorb
add
lahf
push
push
and
fiaddl
insl
jns
pop
or
fs
mov
icebp
lret
push
or
mov
test
mov
jp
sub
sbbb
test
sbb
dec
sarl
cmp
push
ljmp
pop
add
insb
mov
test
xchg
andl
fadd
pop
xor
mov
sti
das
std
aaa
cltd
fcompl
pushf
push
in
movsl
daa
dec
sub
fs
mov
clc
xchg
or
into
sbbl
sub
ja
xchg
imul
adc
dec
rcl
popa
fimuls
mov
sbb
mov
push
jg
cmp
push
add
mov
jge
pop
test
out
and
mov
hlt
xchg
lcall
stos
cwtl
jne
and
cwtl
icebp
pop
outsl
push
inc
pop
push
into
lret
dec
pop
add
push
sub
sub
test
mov
aad
pop
cs
or
mov
xor
ficoml
je
loope
gs
mov
mov
and
flds
add
daa
push
sbb
arpl
dec
fstpl
das
faddl
sbb
inc
dec
mov
clc
loope
xchg
xchg
negb
cmp
cltd
adc
out
test
xchg
hlt
dec
ss
jbe
pop
mov
dec
pop
mov
mov
mov
cwtl
jno
movsl
in
dec
adc
in
std
or
fidivl
inc
fs
outsb
pop
cmpsl
pop
pop
pop
push
or
shl
cmp
mov
mov
les
daa
add
leave
fucomp
mov
sbbl
into
add
out
imul
mov
imul
pusha
ja
icebp
push
popf
ds
js
mov
adc
sbb
pusha
ljmp
loopne
jp
sti
lods
push
mov
adc
testl
icebp
adc
cli
mov
fwait
lahf
cmp
arpl
mov
push
cmpsl
hlt
push
xor
jb
inc
data16
add
ss
push
mov
fstpt
aad
ret
cmp
lcall
int3
cwtl
dec
xorb
iret
out
sti
repz
and
mov
dec
jmp
or
add
int
dec
jecxz
addr16
aas
fidivl
mov
jp
in
add
data16
lods
jle
movsb
mov
cmp
sbb
xor
xchg
cli
cltd
out
mov
sbb
mov
dec
add
fimuls
ljmp
jge
or
xor
jge
and
clc
add
cmp
cli
out
dec
xchg
out
leave
push
in
jae
imulb
inc
aas
jns
js
sub
ret
call
xor
jmp
cld
sub
popa
addr16
or
and
push
or
addl
test
dec
cmp
sbb
mov
sbb
sub
cmp
mov
or
in
hlt
add
cmp
sbb
xchg
pop
dec
addb
cltd
mov
cs
sub
mov
sbb
pop
mov
into
stos
icebp
sahf
mov
add
lods
mov
cld
mov
xchg
xchg
daa
mov
shll
jp
outsb
stc
stc
xchg
push
test
out
jle
xchg
inc
adc
or
jp
mov
adc
mov
out
cmpsl
outsb
jo
cmp
test
mov
popa
out
data16
sbb
movsb
loope
push
test
add
push
push
cwtl
xchg
loopne
xlat
adc
mov
test
dec
mov
cmc
xor
in
orl
test
dec
cmp
in
mov
or
aaa
mov
sub
mov
dec
sub
inc
dec
insb
je
push
aaa
or
sarb
imul
push
cmpl
jg
adc
push
adc
cmp
fidivs
pop
inc
movnti
pop
das
outsl
push
pusha
fidivrs
adc
xchg
hlt
or
in
inc
add
mov
movsl
fsts
push
fnstcw
cmp
out
gs
leave
dec
std
ret
movsl
lahf
neg
add
pop
out
imul
cld
jge
xchg
es
fnsave
xor
add
xorb
inc
lahf
iret
insb
inc
repz
in
test
imul
xchg
movsl
int3
push
test
push
sub
and
sub
xor
ret
test
jnp
mov
shll
scas
cmp
leave
orl
and
mov
hlt
int
sub
mov
ror
xor
imul
mov
out
ror
mov
dec
imul
pop
lea
scas
jmp
or
sbb
mov
mov
xor
aad
das
icebp
push
xor
inc
pop
loop
sub
je
pop
dec
adc
dec
cmc
sub
jge
sti
jne
xchg
sbb
adc
insl
lods
sbb
stc
aam
es
inc
je
stos
fdivl
sub
or
add
dec
outsb
sub
scas
or
in
inc
hlt
faddl
xor
repnz
mov
or
dec
and
out
inc
push
sbb
push
mov
jg
stos
jge
ja
int
pop
lret
push
insl
mov
mov
sub
xchg
jnp
sbb
dec
rorb
xor
pop
cmp
lods
das
add
lds
jp
xor
ss
and
leave
enter
jns
into
add
sbb
mov
out
das
add
ret
jnp
xor
shlb
adc
cmp
cmc
adc
jnp
enter
mov
add
or
stc
mov
sti
push
stos
sahf
mov
scas
es
and
adc
sbb
xor
outsb
jae
sub
sub
fcomps
dec
gs
push
jle
ret
aam
enter
pop
cmp
dec
pushf
dec
add
lock
push
mov
dec
jbe
sub
test
out
ss
rclb
sbb
xor
push
xlat
cmp
sub
mov
xor
jge
or
xchg
bound
sub
stos
add
fsub
push
notb
sub
mov
mov
cmpsl
scas
bound
mov
adc
mov
jg
in
insb
das
enter
xor
pusha
sub
xchg
fadds
cs
cmp
mov
sbb
xchg
inc
mov
sub
dec
pop
sbb
cmc
mov
in
xchg
mov
mov
push
inc
stos
js
stos
scas
gs
xorb
dec
imul
mov
stc
xlat
and
or
iret
lock
cmp
jo
ljmp
aam
cmp
cmp
arpl
cmpsl
aam
mov
fidivs
lds
mov
fisubs
push
inc
mov
push
nop/reserved
mov
insl
push
xchg
clc
lock
mov
push
dec
lock
pop
add
mov
popf
pop
in
xlat
dec
stos
inc
cmp
cmp
jle
shll
aad
or
cmp
lods
js
rclb
mov
les
cwtl
adc
movsl
daa
stos
sub
push
aas
addr16
adc
push
or
inc
cmp
in
mov
bound
inc
sub
inc
loop
into
xor
sub
xchg
jmp
xlat
xchg
rclb
out
insb
mov
inc
pop
popl
xor
push
cld
ljmp
aaa
or
sbb
fstps
cmc
mov
orb
mov
testb
cmp
pop
inc
ds
cmpsl
popf
xor
clc
xor
je
ss
popa
inc
fadds
test
mov
dec
test
sarb
mov
movb
mov
test
insl
in
leave
ljmp
or
pop
dec
cmp
fistps
mov
mov
loope
and
ret
arpl
jb
push
and
cmp
add
inc
loope
jbe
fwait
adc
add
mov
test
notl
in
xor
jge
lret
pop
subb
mov
dec
mov
inc
ret
dec
inc
sbb
clc
sbb
and
out
divb
jg
leave
xchg
or
das
or
dec
movsl
mov
cmp
das
inc
add
add
inc
outsb
loop
mov
outsb
loop
mov
dec
in
aad
push
out
scas
and
pop
jp
push
sub
sbb
mov
sbb
pop
sbb
mov
popa
mov
fnsave
and
fildll
movsb
pop
xchg
add
insl
js
or
ljmp
mov
ljmp
push
cmpsb
push
inc
or
out
outsl
aas
outsl
sbb
imull
into
movsl
sti
les
insb
sarb
xchg
es
xchg
push
daa
aas
in
mov
adc
adc
shlb
xor
out
mov
sub
repz
cmp
mov
loope
fmull
pop
subl
setg
repz
or
mov
loopne
pop
fidivrs
jb
pop
xchg
imul
adc
dec
pop
jge
ss
cwtl
mov
sarl
sub
in
cmovp
mov
mov
inc
hlt
scas
mov
lock
add
into
jmp
loopne
ja
fisubrs
in
push
mov
xchg
sar
ja
mov
or
ret
jo
fwait
push
push
lret
jne
repnz
fidivrs
icebp
outsl
test
lds
leave
or
imul
leave
and
xor
push
lods
xlat
arpl
xor
shrb
mov
cld
jno
fcmovbe
cli
jb
repz
ret
cmp
xor
adc
bound
popf
ficompl
ret
xchg
aad
mov
pusha
sbb
cmp
pop
pop
mov
sub
jbe
sub
sbb
inc
les
add
inc
rcr
and
inc
jmp
movsl
ds
push
mov
dec
jmp
js
popa
jmp
add
sbb
xchg
outsb
adc
xchg
cmpsl
or
pop
push
outsl
lret
pop
lcall
xchg
loope
jno
sbb
shll
inc
jne
std
fwait
lcall
and
add
push
or
xchg
mov
or
fiadds
and
or
adc
xchg
ficoms
scas
call
clc
sub
inc
clc
aam
js,pt
cmp
fnsave
ss
sti
loope
or
sbbl
or
aas
cwtl
sbb
mov
sbb
mov
cli
mov
lods
aaa
repnz
hlt
dec
lret
nop
or
cmc
sbb
inc
fwait
jne
pushf
xchg
xor
imul
and
dec
stos
ret
dec
mov
xchg
lea
fldt
idivb
data16
cs
scas
adc
test
fdivrs
aam
mov
or
ret
pushf
scas
and
imul
rcll
and
loope
cmp
scas
mov
rcrb
cwtl
sub
inc
pushf
mov
repz
add
sub
pop
in
les
push
mov
mov
aaa
cmp
mov
push
sti
mov
mov
inc
dec
mov
dec
imul
pop
cli
stos
xor
xchg
stos
xor
testl
mov
pop
mov
adcl
scas
in
add
idivb
ljmp
neg
sbbb
aas
in
lods
xchg
inc
sub
cmp
or
test
push
idivb
push
int3
jo
mov
or
or
stos
loop
aaa
jge
aas
cmp
stc
sbb
adc
es
int
subb
mov
jo
jp
cmp
push
mov
arpl
daa
dec
insb
es
rorl
add
and
clc
sub
ja
mov
adc
fimull
inc
hlt
stos
es
sub
aaa
push
call
adc
mov
cmpsl
lds
les
push
outsb
add
sub
int
leave
les
popf
xchg
adc
jp
pop
imul
push
scas
sahf
push
sub
aad
xchg
or
fdivrs
jne
fs
add
insb
pop
xor
fs
xchg
lock
inc
int
outsb
jmp
movaps
adcb
mov
arpl
orb
or
in
aas
pusha
cli
cmp
aas
fwait
icebp
inc
out
mov
adc
push
xor
jecxz,pt
adcb
sub
aam
movsb
jle
or
cltd
mov
mov
mov
jl
fcompl
xchg
pop
and
jno
or
jp
iret
fldenv
je
xor
dec
xchg
cmp
gs
jae
push
xchg
js
insl
push
shrl
jge
mov
xor
ficoms
xor
jmp
push
out
sub
ret
int3
clc
std
ret
imul
and
or
pop
jmp
inc
aam
jo
loop
stos
add
lret
adcl
jbe
daa
loopne,pn
add
sub
pop
mov
jecxz
out
lret
jp
mov
xchg
and
insb
mov
pop
xchg
shl
sbb
arpl
xor
mov
int
imul
add
mov
or
lea
mov
cld
std
and
xor
xchg
pop
mov
adc
inc
out
cmp
xor
call
mov
out
and
and
mov
int3
and
pushf
jne
dec
in
mov
add
and
loop
pop
and
addl
test
pop
push
scas
push
movsb
call
cmp
or
jl
lds
fidivl
xor
out
jle
scas
sbb
ss
pop
and
dec
mov
fst
in
jne
mov
aaa
mov
jg
inc
ret
sub
and
insb
pusha
ss
test
xchg
pop
negb
push
ret
mov
adc
ss
mul
into
lret
pop
inc
fimull
pop
ja
daa
lods
call
xor
mov
adcl
dec
adc
inc
cmpsb
orb
ljmp
push
inc
ja
fistps
lods
xlat
movsb
mov
push
bound
add
out
add
aaa
mov
cltd
in
adc
xchg
or
mov
mov
cmp
test
sub
mov
mov
lods
ret
movsb
xchg
pop
insb
add
push
jnp
or
outsb
test
dec
inc
das
stos
ljmp
cmp
cwtl
sarl
fiadds
mov
add
shlb
dec
push
push
das
dec
lret
icebp
addr16
lea
out
jno
push
sahf
sub
xchg
push
in
dec
or
enter
push
lahf
inc
sarb
sub
es
out
ja
adc
cltd
jb
in
xchg
adcl
push
jns
xchg
adc
cltd
fwait
add
jg
mov
sahf
test
test
xchg
and
dec
in
pop
aaa
mov
mov
js
dec
cmp
jns
mov
jg
out
cmpsb
mov
mov
jno
inc
das
stos
mov
mov
movsl
outsb
xchg
sub
mov
jle
test
mov
int3
out
cmp
iret
addr16
pop
mov
cltd
push
lret
rcr
fidivrl
shlb
mov
cmp
lcall
test
xor
add
imul
xchg
dec
cli
icebp
insl
push
mov
mov
xchg
dec
adc
hlt
fucomi
mov
inc
bsf
jge
daa
mov
test
xor
ljmp
adcl
movsl
xor
mov
sub
movsl
adc
mov
push
andl
popa
mov
les
repnz
push
setbe
lret
push
lret
mov
adcb
push
lret
xorl
mov
push
divps
jmp
ss
iret
sub
fimuls
mov
ficoms
loope
dec
jbe
dec
js
ja
mov
inc
sahf
imul
xor
fstpt
sub
xor
jl
pushf
insb
ficoml
daa
lcall
add
ja
gs
sub
fdivr
adc
jb
cmp
cmp
jp
aam
xchg
cmpsb
jb
lock
push
mov
inc
cwtl
lcall
int3
xchg
dec
adc
xor
sahf
outsb
fimull
pop
fstps
mov
cltd
repz
push
lcall
arpl
adc
inc
iret
jne
aaa
push
icebp
cmpsb
jo
sub
and
pop
mov
mov
sub
add
outsl
sub
mov
adc
imulb
rcll
das
ficoml
std
mov
sub
pause
lret
pop
cmpsl
and
out
sti
aas
outsb
pop
add
inc
pop
cld
cltd
ja,pt
jmp
negl
sub
jne
inc
mov
call
aad
ds
xor
mov
xchg
repnz
push
lock
rclb
pop
xchg
bswap
and
out
stos
jo
popa
lods
xchg
arpl
push
cmp
ljmp
aaa
sbb
ret
mov
push
loopne
dec
mov
gs
stos
add
sub
or
adc
fmuls
inc
out
scas
loop
in
leave
insl
xchg
jno
xor
sti
in
dec
lods
add
jge
test
sub
aad
clc
cld
inc
push
test
jl
mov
shld
mov
scas
add
insl
aad
in
inc
pop
sbb
cmp
fildll
and
push
lods
insb
popa
in
mov
inc
repz
push
xor
pop
mov
and
inc
jmp
and
lahf
lock
outsl
jns
xor
sub
push
test
rcll
mov
out
test
enter
sub
cltd
repnz
inc
xchg
in
push
pop
aaa
test
mov
inc
cmp
ret
cwtl
or
into
mov
mov
pop
pop
test
in
int
sarb
add
push
mov
nop
das
mov
cs
insl
gs
je
sbb
sub
test
jnp
inc
les
dec
inc
repnz
xor
sbb
push
cld
iret
imul
std
xchg
xchg
ret
in
test
incl
adc
call
addr16
jp
ja
jl
dec
push
and
hlt
out
and
aam
and
mov
addr16
jb
les
imul
lret
adc
fwait
cmp
mov
sub
jb
adc
xchg
inc
rcr
adc
sarb
mov
je
cmp
fwait
test
scas
dec
ret
jo
mov
push
pop
mov
adcb
dec
jno
pop
into
mov
mov
mov
push
out
pop
push
scas
pop
aam
div
out
les
sti
mov
dec
cmc
jno
imul
int3
mov
jno
out
mov
cmc
bnd
cmp
inc
sub
mov
inc
inc
mov
arpl
enter
adcb
mov
stos
sub
andl
xchg
cltd
test
in
jl
mov
icebp
jb
test
stos
fwait
arpl
test
or
shrl
mov
mov
pop
and
xor
sub
sbb
pop
mov
fimull
dec
mov
test
fldenv
ret
jmp
jns
popf
inc
xchg
fisttpl
imul
pop
fistpll
call
cmp
mov
dec
pop
decb
jnp
std
cmp
shl
aam
scas
sub
or
mov
xor
scas
ljmp
jmp
ret
js
dec
insl
bound
mov
pusha
shr
pop
imul
fimull
ljmp
addb
jle
cmpsl
xor
cwtl
pop
jmp
inc
or
and
push
pop
sbb
loopne
inc
ja
mov
incb
aaa
xchg
jno
push
movsl
cmp
pop
mov
divw
push
cmpb
dec
inc
sahf
call
xchg
and
dec
repnz
out
stos
or
mov
fistpll
mov
cmc
rep
sbb
je
add
int
push
loope
xor
cmp
xor
or
lret
and
in
and
xchg
add
pop
xchg
stos
add
popa
adc
jmp
ljmp
insb
int3
lods
adc
imul
imul
xchg
push
mov
sub
xor
aas
in
sbb
icebp
jle
jbe
ss
xor
mov
or
and
or
and
xor
xor
xorb
sahf
xor
enter
movsb
or
insl
shl
adc
xor
mov
xlat
pop
pop
pop
sbb
push
dec
and
mov
add
xchg
enter
dec
out
stc
int
add
cmp
and
cmpl
in
xchg
leave
je
mov
ja
loop
inc
cwtl
ficoml
fbstp
insl
aas
mov
in
push
daa
arpl
cwtl
or
aas
sub
loope
sbb
mov
popf
movd
mov
add
repnz
pop
test
pusha
pop
push
push
and
lds
out
sarb
dec
lock
push
and
xor
pop
in
cmp
cltd
xlat
jb
push
xchg
jle
add
dec
cmp
shlb
sub
lret
mov
fisubl
lret
in
mov
ficoml
stos
sbb
or
ds
jne
mov
insb
add
xchg
inc
xor
mov
test
fs
testb
or
ret
ficomps
cli
mov
push
lods
pop
es
sahf
das
push
push
xchg
into
test
mov
xchg
pushf
add
pop
xchg
push
push
test
or
fld
mov
xlat
imul
pop
mov
test
lods
sub
adc
stc
push
mov
xchg
pop
leave
lods
sub
jae
sarb
or
jl
daa
dec
push
ss
in
or
mov
sub
inc
in
popa
loopne
cmp
pop
pop
mov
les
out
enter
push
addr16
jle
push
cmp
lods
add
and
mov
negl
sahf
push
stos
lret
or
and
sbb
mov
dec
sub
xor
pop
repz
and
inc
adc
faddl
sbb
inc
mov
fildl
flds
push
pusha
ja
das
into
dec
mov
push
jmp
push
cmp
xor
in
lock
int3
push
pop
mov
add
cmpsb
or
add
jmp
jae
xor
ret
mov
mov
mov
ja
mov
jle
gs
rol
bound
not
or
cmp
mov
inc
js
je
sub
std
movsl
jmp
push
cmp
sub
pop
push
xchg
mov
push
cmp
insl
das
loopne
fs
or
add
sub
dec
pop
mov
enter
js
bnd
fisttpl
sub
test
stos
push
mov
mov
push
stos
ret
xchg
adc
shll
jnp
pop
add
sub
cltd
or
sbb
push
jno
jnp
test
push
mov
pop
das
orb
addr16
pop
addr16
xor
ljmp
adc
test
jp
add
cli
ret
sbb
and
mov
mov
scas
fbstp
fildl
std
frstor
imul
xchg
and
dec
cwtl
pop
xchg
mulb
iret
jp
xor
sbb
lock
outsb
shrl
shlb
and
sbb
or
rorb
stos
add
cmc
fwait
mov
add
ds
mov
movsb
ljmp
xor
inc
sbb
insl
int3
push
adcb
mov
lock
pop
nop
aaa
and
push
ficompl
mov
mov
clc
push
fcomps
int
inc
leave
push
out
or
or
cmp
or
sbbl
pushf
loopne
cli
imul
negl
bound
and
xchg
addl
lods
cmp
incl
mov
cmp
xor
xchg
add
ret
xchg
dec
gs
push
pusha
pop
je
lods
test
bound
jecxz
cmpsl
inc
stc
inc
dec
mov
sbb
jae
clc
dec
push
mov
and
test
dec
in
jecxz
imul
pop
jnp
mov
roll
into
cmp
xlat
or
loopne
mov
pop
fwait
cmp
jno
cmp
mov
aaa
xchg
sbb
pop
cs
fs
aas
xor
outsb
adc
movsl
lods
xchg
xchg
mov
movsl
scas
push
pop
xor
sub
or
and
push
mov
cs
mov
inc
shrl
jmp
cli
repz
pop
mov
insb
std
mov
jne
pop
pop
rcl
shll
mov
gs
cld
jp
dec
in
mov
xchg
xor
pop
in
and
xchg
pop
fimull
imul
xchg
repnz
cld
adc
push
inc
cmpsb
adc
out
dec
push
or
in
push
aaa
iret
mov
add
cmpsl
xor
out
roll
js
lcall
ss
sub
push
lea
imul
push
flds
adc
ljmp
daa
sbb
stc
pop
sub
pop
ss
lds
stc
shll
pop
xor
lret
test
loope
cmp
fildll
mov
pop
icebp
mov
cs
jecxz
ficompl
push
aam
pop
stc
mov
push
dec
dec
add
aad
movsb
mov
inc
inc
ljmp
jns
cmp
xchg
outsb
out
adc
mov
loope
mov
jle
js
mov
xchg
into
add
outsl
mulb
and
xor
jb
and
pop
xchg
add
inc
jns
sbb
adc
inc
dec
clc
add
hlt
test
cmpsl
xor
fwait
jmp
push
cmp
push
jecxz
inc
inc
pushf
push
aam
nop
stos
pop
subb
push
in
cmp
nop
jmp
inc
fadd
test
and
sbb
adc
dec
mov
push
and
jge
adc
data16
add
sarl
testb
fstps
jbe
add
pop
mov
inc
test
xchg
push
mov
out
es
aam
je
dec
xchg
mov
aad
sahf
mov
hlt
xor
sub
ss
mov
xchg
push
mov
xchg
cld
aas
xlat
push
sahf
mov
sbb
scas
nop
div
jge
aam
mov
je
cwtl
dec
in
les
cmp
pop
lret
aaa
xlat
mov
fdivr
mov
gs
push
xchg
in
pop
or
imul
or
pushf
cmp
pushf
adc
jno
in
lret
mov
adc
and
jns
pop
in
xor
movsb
lods
add
pop
adc
cwtl
mov
or
clc
xor
jo
arpl
xor
mov
inc
insb
aaa
inc
pop
cltd
push
push
mov
push
xor
mov
lea
push
jnp
adc
mov
inc
xchg
sub
test
push
push
cltd
push
jb
xchg
mov
faddl
je
imul
mov
mov
call
push
cmpsl
push
mov
shll
daa
push
xchg
lods
shrb
push
int3
ret
mov
add
add
push
test
xchg
xchg
imul
mov
stc
ja
xchg
dec
inc
ret
push
add
loopne
xor
cmpb
push
sahf
xchg
js
mov
push
movsl
icebp
mov
mov
sbb
cmpsb
jge
mov
push
xchg
mov
in
negb
inc
pop
xchg
fsts
mov
lods
cmp
clc
pop
bound
lret
xchg
repz
xor
xchg
scas
add
mov
adc
test
arpl
jns
jmp
inc
adc
loope
stc
or
xchg
test
outsb
xchg
sub
or
sub
dec
push
dec
cmp
cs
call
add
xchg
lods
pop
push
int3
jnp
or
add
testl
mov
dec
inc
jl
push
cmp
mov
or
xor
and
push
cwtl
xchg
sub
iret
insl
sub
stos
dec
cmp
fdivrl
jb
test
cmp
cs
cmp
pop
in
push
jecxz
outsb
mov
scas
jne
pop
push
sub
mov
out
xor
push
stos
cmp
sub
sub
sbb
inc
test
es
xchg
loope
loop
sahf
icebp
push
in
repz
xchg
fistl
mov
loope
orb
xor
xchg
mov
jmp
adc
xchg
frstor
test
loop
adc
mov
xrelease
frstor
inc
lret
mov
xchg
subb
jb
xchg
lahf
or
jge
cltd
jns
notl
xchg
std
loop
adc
push
mov
bound
iret
cli
bound
and
pop
fs
leave
icebp
pop
int3
mov
sbb
std
fwait
mov
cmpsl
adc
call
jae
inc
lret
dec
in
loope
clc
imul
in
outsb
push
pop
loope
mov
pop
pop
xor
dec
shrb
push
jle
js
mov
ret
pop
leave
pop
pop
mov
xchg
pop
repnz
sub
aaa
push
dec
mov
fs
je
scas
fs
jle
cmpsl
fbstp
push
incb
fs
sbb
stos
pop
into
push
add
xor
mov
scas
jno
lds
in
jbe
pop
jno
pop
out
sub
jo
aas
lret
nop
sahf
repz
lea
sbb
andb
mov
dec
imull
roll
cld
pusha
inc
adc
sbb
aas
mov
jecxz
sub
mov
xor
fs
pop
xor
loop
das
and
ja
out
rcll
mov
sbb
xchg
cmp
mov
push
stos
cmp
repnz
pop
es
pop
xor
xor
out
mov
movsl
in
jle
sbb
and
shr
iret
push
or
pop
jb
sti
mov
scas
rol
fadds
lock
jp
inc
andl
mov
mov
ret
fcoms
adc
out
out
push
jmp
pushf
and
adc
rcrl
add
push
jnp
lret
add
pop
movsl
xor
in
in
mov
cmp
mov
ss
daa
xor
fs
repz
fisubs
push
xchg
push
mov
cs
mov
push
es
jbe,pn
jnp
fisubl
xchg
dec
dec
sahf
xchg
xchg
xor
fstpt
mov
pop
lods
push
sub
dec
notl
sub
mov
js
hlt
lcall
fsts
dec
lods
or
cmp
insl
pop
int
xor
iret
sbb
ret
jbe
daa
jp
fmul
into
mov
push
icebp
loope
cli
sbb
cmpsl
lods
sbb
movsb
por
xor
and
addr16
cmp
call
out
xor
mov
fsubr
sub
add
push
jne
lods
jae
repnz
jb
hlt
push
test
push
push
xorl
jae
dec
pop
or
or
rolb
sub
adc
push
out
jbe
xor
mov
sarl
adc
jge
cwtl
xor
mov
xchg
lods
fistpl
rclb
icebp
test
or
jl
mov
sub
rorb
or
in
addr16
and
test
sbb
loop
ror
outsl
inc
mov
add
sbb
and
sbb
into
dec
stos
out
ja
clc
inc
xchg
cmp
sub
ret
adc
push
pop
jp
jmp
loopne
bound
adc
xor
mov
dec
movsl
cmp
add
movsb
mov
nop
dec
cmc
jmp
sbb
daa
jp
iret
mov
push
and
push
xchg
mov
fxch
rcr
js
pop
cmpsb
popa
in
ljmp
testb
into
out
pop
dec
jns
sbb
sub
hlt
pop
rcl
mov
es
pop
cmp
dec
ss
repz
scas
pop
ret
lods
scas
mov
aam
stos
jne
mov
daa
pop
fidivrl
or
aad
loopne
ljmp
mov
or
ds
lock
push
pop
xor
mov
xor
jnp
xchg
sahf
sub
inc
addr16
loopne
add
cmp
test
adc
cltd
popf
push
std
lret
add
int
jnp
sbb
hlt
xor
xor
jmp
incl
jne
sub
push
fiaddl
pop
push
shl
lock
sub
stc
mov
inc
das
mov
bound
shrl
divl
mov
test
addr16
jl
mov
aas
and
jne
sar
imulb
data16
ja
lcall
jle
mov
repnz
int3
sbb
sub
sub
popa
pop
cld
jno
and
mov
pop
int
mov
stos
cld
cmpsb
in
out
mov
cmpsb
bnd
dec
adc
sub
gs
cmp
mov
push
cmpsb
xchg
mov
mov
mov
push
roll
adc
mov
dec
sub
and
fwait
or
pushf
cmp
or
mov
jl
pop
pushf
sti
daa
out
sub
fst
cmp
xchg
and
push
add
sub
aam
loope
lds
xchg
cmpsl
fisubrl
push
and
mov
icebp
xchg
daa
out
imul
jnp
jmp
notl
adc
xchg
pop
sub
sub
mov
jg
pop
sahf
pop
cs
mov
jns
call
sub
repnz
pop
shrb
jns
aas
cmp
mov
push
adc
nop
gs
shr
push
fistpll
lods
add
imull
lea
and
xchg
and
fstpt
mov
inc
movsb
out
jno
cmp
mov
sub
cmp
movsb
loop
adc
shll
jp
jp
js
fstps
sbb
dec
scas
mov
push
mov
hlt
cs
push
arpl
xor
mov
mov
and
sbb
gs
lret
jb
icebp
rorl
jmp
loopne
inc
dec
push
dec
ljmp
add
cli
mov
jp
inc
rcl
xchg
push
xchg
sti
and
xchg
pop
xchg
sarb
mov
popl
ret
mov
mov
aaa
xor
addl
inc
imul
push
aad
and
daa
lock
pop
stos
jo
inc
mov
lea
mov
jbe
ret
add
fadd
lds
nop
lea
arpl
jno
jmp
and
test
sub
hlt
arpl
je
ss
adc
popf
loop
mov
shll
xchg
cmp
mov
pop
addr16
iret
cmpsb
jp
fsts
mov
outsb
stos
nop
cmp
sbb
js
sub
inc
pusha
stos
pop
sub
pop
mov
push
mov
inc
inc
push
pop
test
scas
sbb
inc
xchg
xchg
mov
xor
lcall
movsl
into
fildll
addb
pop
lcall
jl
lock
daa
mov
lcall
xor
jb
mov
lret
cmp
hlt
sbb
and
inc
mov
and
jg
jne
jns
add
mov
push
in
push
outsb
pop
mov
jle
mov
cmpsb
inc
and
push
xor
dec
mov
ljmp
inc
dec
inc
dec
mov
lcall
punpcklwd
add
lret
fmul
inc
and
adc
dec
lds
and
into
test
sbb
pusha
cmp
lods
adc
js
jnp
inc
and
inc
lret
xor
loope
and
enter
les
adc
push
jg
or
outsb
and
cmp
mov
push
push
stc
stos
push
add
rcr
jae
mov
sub
xchg
sbb
mov
lock
enter
jo
stos
fcoml
pop
scas
and
sbb
push
fadds
cmp
cmp
mov
loop
sub
movsb
jl
pushf
ret
orb
stos
mov
das
out
fdivl
jmp
dec
lods
adc
cmp
dec
mov
dec
jecxz
hlt
enter
pushf
jg
ficoml
mov
fsts
cmpsl
imul
mov
dec
push
pop
pushf
jnp
cs
dec
inc
lahf
stos
add
mov
push
or
incb
jno
jmp
or
in
shlb
lret
aas
pop
dec
cli
mov
dec
lret
lock
aad
inc
loope
or
jb
and
sub
es
jo
sahf
sahf
xor
mov
jp
jecxz
aad
shlb
stos
push
mov
push
test
or
or
pop
aaa
sbb
stc
pop
mov
sub
and
xor
xchg
push
mov
call
test
stos
js
mov
les
pop
jbe
bound
ret
int3
xchg
shl
ja
mov
fiadds
roll
notb
ds
xor
stos
repnz
and
div
hlt
lahf
or
dec
cs
pop
sub
addr16
arpl
ror
jecxz
lods
shlb
xchg
adc
mov
lea
push
pop
pop
sbb
rcl
add
in
outsb
outsb
jno
push
xchg
loop
mov
xor
xor
jmp
scas
mov
ror
insb
mov
push
sti
outsb
fsubl
lcall
nop
testb
lahf
jnp
or
ljmp
scas
xchg
jb
adc
movl
sub
push
in
push
dec
mov
jmp
gs
daa
ss
lods
inc
aam
cmp
pop
push
es
xor
test
daa
push
pusha
mov
or
rcrb
jae
in
cmp
inc
aaa
aaa
sarl
or
jl
sti
xchg
mov
mov
cmp
dec
jns
pusha
sub
nop
jecxz
add
dec
out
mov
sbb
inc
fsubrs
xchg
fisubrs
fbstp
xor
sub
aaa
jmp
xchg
int3
dec
mov
cld
mov
or
in
bound
std
mov
repnz
mov
sbb
mov
aas
out
inc
pop
push
rcl
mov
inc
popf
mov
sarb
clc
and
add
imul
in
push
push
orb
pushf
dec
rorb
leave
pop
mov
xlat
mov
push
pop
dec
mov
outsb
pusha
leave
repnz
add
pop
sahf
fisubs
repz
dec
mov
rcll
jno
out
outsl
imul
cmp
outsl
jbe
insb
mov
lret
fidivl
out
fstps
adc
jle
sub
incb
or
push
fiadds
cltd
push
hlt
or
fdivs
sub
lock
cld
loopne
enter
dec
bound
dec
fdiv
lds
inc
ror
xor
fwait
cmc
dec
leave
cmp
sbb
push
out
cld
nop
subb
push
inc
push
rorl
pusha
mov
pop
fdivs
scas
fcomp
rolb
push
in
xor
fcmove
imul
addr16
in
fwait
pop
sub
test
mov
ret
leave
cmpsb
adc
cmpsl
and
fcoml
icebp
outsb
xor
nop
rorl
dec
std
dec
inc
cmp
adc
sub
jbe
xor
repnz
and
gs
xchg
xor
js
cld
push
repz
sbb
scas
outsl
rcrl
out
repnz
and
jne
and
mov
pop
sbb
add
xchg
mov
daa
bound
jns
push
mov
pop
test
inc
sub
dec
jmp
pop
popa
jne
ja
sbb
test
es
ljmp
insb
xchg
mov
arpl
xor
cmp
hlt
sbb
mov
addl
imul
jge
cmp
push
mov
cs
jecxz
les
cmc
sub
mov
xchg
xor
xchg
sahf
dec
nop
and
ficoms
sbb
pop
add
in
mov
pop
or
xchg
shlb
cmp
sarb
lret
sbb
shrb
add
mov
jae
movsb
inc
jne
popa
ljmp
xchg
fwait
mov
idivl
bound
jle
repz
mov
imul
jb
jmp
xlat
insb
mov
fbstp
scas
loop
push
int3
lahf
roll
push
xor
xchg
mov
xchg
jl
dec
xchg
dec
xchg
add
mov
or
cmp
stos
dec
cmp
lret
and
pop
sub
inc
outsb
xchg
xorb
iret
clc
hlt
les
lds
xchg
incl
repnz
cmp
mov
cwtl
dec
mov
imulb
xchg
call
pop
adcl
cmp
mov
fisttps
jecxz
dec
shll
pop
push
cmp
jl
lock
cwtl
jecxz
testl
lods
ret
test
push
pop
or
lods
jecxz
in
push
sbb
leave
je
lods
xor
shrl
dec
pushf
lcall
sbb
and
push
sbb
cwtl
xchg
outsl
adc
mov
adc
scas
pop
sbb
xchg
push
test
push
inc
lods
in
mov
add
add
cwtl
outsb
subl
repnz
mov
movsl
mov
cmp
test
mov
fsub
ljmp
push
jp
or
jmp
pusha
pop
in
adc
push
jbe
mov
out
cmp
mov
test
or
outsb
sahf
vpsubq
ds
data16
and
loope
mov
pop
and
xchg
fwait
in
pusha
xchg
mov
cmp
les
stc
inc
mov
fldcw
push
lret
ljmp
jb
outsl
mov
sub
sti
lods
cmp
push
imul
dec
scas
push
repz
cmp
cmp
add
jg
gs
stos
cwtl
add
lock
andb
cwtl
leave
sub
cld
mov
sarl
popf
into
int3
cld
in
lret
mov
pop
cmp
add
pop
lahf
cli
sbbb
sub
in
sbb
mov
lret
stos
stos
pop
mov
inc
or
adc
add
test
add
stos
into
ficomps
test
jmp
xor
mov
and
mov
fwait
aaa
daa
pop
mov
aam
es
loope
daa
aas
add
fadd
call
in
xchg
mov
fs
leave
cli
and
or
mov
push
sub
xlat
aad
shll
imul
xor
hlt
mov
mov
cwtl
jp
mov
mov
fwait
jecxz
popf
rorl
mov
int
out
movsl
out
pop
pop
into
int3
leave
sti
or
aad
inc
fnstsw
out
mov
cld
cmp
cmp
fdivrl
fcmove
loopne
lret
sub
aaa
loopne
ja
mov
mov
sbb
scas
sti
sbb
lahf
jb
xor
jns
or
in
scas
repz
ljmp
popa
xor
and
add
xlat
or
dec
pop
repnz
test
je
jle
clc
add
ja
fs
pushf
jge
push
std
or
pop
xchg
xor
andl
jecxz
dec
int3
test
in
dec
push
jle
fwait
cmp
mov
inc
inc
ret
pusha
adc
cmp
jae
es
add
sbb
or
dec
add
pusha
push
jmp
enter
sbb
icebp
push
jae
push
or
xchg
jns
push
and
mov
iret
mov
jmp
adc
mov
mov
outsl
mov
out
and
jecxz
jp
leave
fnstcw
inc
xor
sub
inc
insb
ret
lock
and
pusha
or
xlat
daa
jle
loope
xor
shrl
rcrb
jmp
jmp
add
cwtl
rcll
push
push
aad
add
push
pop
push
loope
std
cmp
cld
icebp
adcb
sbb
clc
push
sarl
or
nop
mov
gs
mov
xchg
enter
inc
subb
aaa
add
lods
scas
js
adc
fstpt
lret
mov
mov
ficomps
shr
mov
mov
lock
sub
aad
in
add
sti
mov
loope
dec
pushf
addr16
test
cs
nop
mov
pop
imul
stos
sub
rclb
das
js
adc
jecxz,pn
stc
aad
mov
dec
data16
xor
xchg
fcmovnu
inc
pop
sbb
adc
push
repz
mov
mov
pop
je
gs
lahf
loope
cmp
xchg
and
imul
inc
adc
in
or
pop
add
sbb
sbb
sti
sbbl
cmp
adc
movzbl
out
xchg
or
xor
jno
or
insb
mov
xor
fsubs
test
loope
mov
mov
addr16
mov
sub
iret
pop
std
test
jns
mov
int
or
mov
gs
sub
sub
iret
imul
cmpsl
lods
stos
pop
sub
sbb
and
xor
xor
sub
sahf
scas
dec
xlat
cmc
push
push
push
jae
mov
mov
std
pushf
jbe
cmp
inc
push
xchg
insb
cli
aad
call
inc
xchg
add
cmpl
adc
adc
jl
sbb
call
dec
add
lahf
jg
jge
and
ja
mov
mov
xchg
sub
push
cs
push
ret
jecxz
int3
inc
or
dec
push
imul
mov
sarb
ficoml
or
loope
test
xchg
mov
arpl
mov
cmp
jae
or
pusha
push
jnp
cmp
dec
mov
xor
shrl
dec
push
xor
add
shll
addr16
idivb
pop
inc
mov
lahf
inc
dec
int
mov
cli
es
das
lret
lahf
and
rorl
test
sub
nop
push
fnstcw
cmp
movsb
add
rcl
daa
inc
mov
enter
adc
outsl
loope
in
jg
push
scas
stos
push
push
sub
es
push
cmp
mov
call
imul
loop
in
cmpsl
push
pop
test
popf
fidivrs
mov
es
cli
add
mov
and
xor
xor
je
jmp
mov
mov
pop
inc
mov
pop
pushl
mov
dec
in
loopne
loop
gs
mov
sahf
pop
popf
pop
inc
pushl
into
lcall
in
jnp,pt
aad
pop
je
lds
ljmp
add
xor
jbe
rorl
jns
int
pop
mov
push
imul
pop
xchg
inc
fcompl
push
sti
pop
mov
ja
pop
icebp
ss
xor
inc
cld
bound
mov
xor
jne
scas
sub
sbb
in
xor
and
add
xor
mov
xor
or
in
dec
lret
mov
divb
or
std
push
repnz
out
hlt
mov
in
jge
push
xchg
xor
pop
lret
outsl
dec
jae
bound
pushf
lods
mov
out
push
pop
insl
dec
mov
movl
je
aad
ficoms
xor
sbb
jns
cwtl
mov
mov
sub
sti
nop
mov
mov
mov
rcll
xor
lcall
scas
or
push
jae
mov
daa
dec
cmp
es
nop
cmp
jmp
add
es
iret
pushf
popa
mov
call
sbb
jns
sbb
out
jae
xor
and
push
mov
aaa
cmp
xlat
scas
inc
jg
fsts
cmpsb
clc
or
and
jne
mov
mov
push
ja
add
or
jns
cmp
outsl
jge
ljmp
mov
in
mov
xor
push
add
xor
xchg
movsb
mov
stos
popf
js
inc
push
das
and
sti
add
jg
xchg
lcall
es
sbb
mov
fsub
pop
nop
lcall
loope
shrb
inc
pop
xchg
adc
aaa
aad
imul
xor
add
sbb
mov
icebp
jle
xchg
jle
sbb
in
into
les
fiadds
clc
adc
cli
add
push
pop
sbb
add
jns
adcb
inc
adc
outsb
push
pusha
aas
mov
leave
insb
or
sub
xor
cmpsl
aam
xor
inc
and
mov
xchg
fdivrs
repz
fcmovnu
cmpsl
pusha
lahf
sahf
mov
add
int
push
imul
aam
mov
jae
int3
nop
icebp
lcall
jae
push
sub
scas
and
add
flds
dec
pop
daa
and
and
xchg
fisttpl
push
pop
mov
inc
ds
hlt
imul
out
or
jb
test
sahf
and
test
fstl
mov
iret
pop
sahf
leave
mov
lret
sub
sbbl
add
out
mov
dec
or
push
ret
cmpl
adc
inc
popf
mov
test
push
in
push
cmp
ret
sub
movsb
inc
sbb
dec
cmp
mov
mov
in
inc
arpl
and
xchg
cmp
xor
pop
add
outsl
push
and
push
sbb
in
clc
mov
int
rol
dec
mov
bound
in
dec
xorl
mov
fs
xchg
sbb
sub
mov
pop
mov
enter
stc
mov
out
outsb
push
ror
dec
push
into
push
addl
dec
push
mov
test
negb
pop
pusha
jb
add
add
sub
add
dec
jg
xor
dec
mov
pusha
push
mov
sbb
dec
lods
pop
push
stos
mul
pop
dec
loop
js
test
leave
mov
push
sub
jns
mov
add
and
mov
or
cmpsb
jp
push
inc
and
push
fnstcw
dec
gs
data16
aaa
mov
cmp
sub
lret
andb
sub
into
pusha
sub
lea
add
add
cmpsb
pop
ficomps
add
mov
mov
adc
inc
or
into
push
std
enter
ja
in
adc
outsb
adc
push
and
jns
add
arpl
hlt
cmpsb
in
add
sub
mov
pop
and
lahf
add
mov
imul
inc
push
and
xor
pop
xchg
mov
inc
enter
popf
psrlq
xchg
xsha1
cmpsb
int3
insb
sub
insb
outsb
push
mov
cmp
shlb
inc
jge
imul
in
adc
pop
or
mov
adc
sbb
inc
cmp
mov
mov
testl
xor
push
push
fsts
push
subl
xlat
gs
cmp
jmp
cmp
cmpsl
fcoml
sub
notl
mov
lods
insl
mov
sub
test
xor
pop
push
in
movsl
jge
imul
sub
jl
inc
mov
out
aad
popf
data16
mov
out
and
fildl
imul
xchg
mov
cmp
out
lods
outsl
iret
push
cmp
cmpsb
hlt
jbe
in
inc
sub
adc
in
mov
ds
loopne
std
xchg
je
sti
inc
stc
xor
jne
ds
ja
aas
fucomp
jecxz
outsl
mov
sahf
mov
loopne
stc
fstpl
fwait
sbb
adc
insb
inc
push
jne
push
cmc
sub
fs
rcrl
xchg
inc
imul
icebp
cmp
xor
sub
in
pop
mov
cmc
lcall
jmp
pop
mov
pop
fwait
push
adc
imul
add
pop
sub
push
jns
cmp
adc
mov
mov
mov
or
mov
daa
mov
gs
xchg
aaa
push
fwait
push
push
lret
pushf
out
dec
lock
ret
xor
xchg
sub
movsl
lods
cmpsb
cmp
cmp
mov
mov
iret
push
frstor
or
xchg
and
xor
data16
andl
das
cmp
dec
pop
xor
aas
sti
addr16
adc
cmp
iret
or
fincstp
jns
sbb
aam
arpl
push
mov
adc
fidivrs
test
push
lea
or
popa
cmp
loopne
adc
lret
es
or
lahf
lds
fildll
outsl
mov
push
dec
fs
jb
mov
clc
inc
cmp
mov
popf
push
dec
add
xchg
scas
fnsave
mov
out
pop
jns
push
out
loope
adc
mov
mov
mov
dec
das
fnstenv
stos
in
ja
std
fadds
mov
mov
sbb
sub
mov
xor
stos
xor
sar
shlb
mov
popa
scas
dec
mov
mov
sti
jp
pushf
mov
icebp
pusha
hlt
ret
mov
pop
cltd
cmp
popa
pusha
lcall
inc
aam
dec
pop
imul
and
push
aam
xchg
addr16
fcompl
xchg
aaa
fnstenvs
cld
pop
rolb
cld
pop
lods
sub
adc
mov
or
sub
inc
pop
imul
jns
jnp
int
push
pop
or
lods
xchg
dec
and
sub
sub
dec
xor
cmp
push
xchg
daa
call
dec
cwtl
repnz
adcb
je
adcl
push
outsl
push
pop
push
into
fsts
test
mov
in
out
movsl
dec
enter
inc
dec
or
jmp
dec
cltd
pop
sub
mov
call
mov
repnz
push
add
lahf
outsl
sbb
push
jge
inc
cmpsl
pop
lds
jae
xchg
mov
rorb
sbb
dec
and
subl
jo
push
dec
and
mov
aaa
xchg
add
adc
adc
scas
inc
push
inc
daa
mov
cli
ljmp
cmp
dec
imulb
mov
cmpsl
ffreep
out
pop
or
imul
jmp
add
push
into
ds
lds
fnstsw
dec
or
mov
fisubrl
xchg
je
jns
or
dec
push
push
cmp
mov
mov
or
mov
cmp
sbb
xor
fidivs
imul
dec
mov
cmpsb
push
mov
je
mov
sbbb
add
push
jnp
lret
add
xor
es
xor
lret
mov
push
nop
out
in
sub
push
mov
push
cmp
call
mov
sbb
popf
or
mov
pop
popf
movb
xchg
xchg
lahf
xchg
les
pop
movb
jns
dec
repz
and
inc
inc
inc
push
jmp
inc
inc
loope
pusha
sbb
push
dec
and
js
repz
inc
dec
dec
mov
jno
mov
fs
loop
std
out
call
lret
xor
xchg
push
cld
std
ja
sub
pop
or
mov
and
loopne
sub
sbb
jp
or
test
out
adc
dec
stos
dec
adc
cmpsb
and
daa
iret
mov
stos
movsl
jg
out
sub
mov
test
ds
movmskps
inc
adc
or
sub
pushf
adc
xor
pusha
cmc
das
imul
push
sub
bound
push
repz
pop
cmp
pop
cmp
orb
push
lret
loope
jne
lret
out
dec
icebp
jae
mov
push
pop
xchg
int
cltd
test
pop
xchg
repz
rorb
repnz
inc
add
fdiv
cs
sbb
sbb
jnp
call
mov
sub
movsb
mov
iret
xchg
les
cli
jae
inc
stos
pop
gs
jmp
lcall
mov
cmp
ljmp
pushl
adc
out
cmpsl
imul
mov
aaa
clc
lcall
fisubrs
and
sbb
or
insb
mov
test
sub
push
add
ret
mov
add
dec
and
aaa
inc
sub
mov
cmp
mov
scas
sub
dec
pop
in
out
mov
les
sub
mov
push
dec
lret
dec
push
bound
popa
in
test
ret
outsb
mov
dec
test
sti
cltd
jns
mov
into
lret
jo
idivb
xor
push
push
clc
mov
rol
repz
lods
call
push
fcmovnu
arpl
cld
xchg
add
das
push
icebp
pop
push
mov
pop
pop
xchg
aad
dec
inc
push
das
popf
xor
fiadds
mov
mov
dec
pop
sbb
dec
mov
mov
pushf
divl
jb
imul
cmpsl
sub
sbb
repnz
cmp
sbb
cmpsb
stos
addr16
push
pop
repnz
push
gs
xor
or
call
or
out
mov
inc
xchg
je
out
popa
shll
mull
push
imul
scas
sbb
rcll
lcall
cmp
xchg
test
xlat
rolb
or
pop
test
xor
out
and
ljmp
mov
mov
dec
das
xchg
adc
push
int3
ret
js
enter
xor
cmp
or
lea
fs
inc
sbb
roll
lret
adc
test
lea
pushl
fidivrl
dec
adc
add
cli
fwait
cmp
pop
xor
arpl
insb
push
jbe
xchg
fsub
xchg
stc
sbb
test
pop
push
cmp
and
icebp
cltd
and
pop
into
gs
push
dec
imul
push
xlat
mov
inc
mov
pop
or
cld
out
lcall
sbb
push
mov
stos
jno
and
inc
stc
pop
es
inc
or
xchg
stos
sbb
cs
fidivrl
sub
pop
rorl
icebp
mov
mov
xchg
addb
mov
nop
arpl
add
dec
or
xor
movsb
xchg
jl
sub
out
sbbl
imul
es
in
cmpsb
shll
pushf
pushf
mov
jbe
mov
pop
scas
decl
aas
test
ficoms
and
jp
push
mov
add
subb
aam
inc
push
push
ficoms
mov
xor
pop
or
mov
lds
or
sub
popf
test
pusha
pop
sbb
movsl
mov
ret
xor
xorl
ret
lret
jno
pop
lods
dec
jl
inc
sub
lea
arpl
into
pop
xchg
clc
nop
inc
mov
out
jne
sarl
push
fsts
popa
js
nop
cmp
push
out
xchg
stos
dec
inc
push
rclb
jns
enter
jns
jmp
pop
sbb
repz
xor
adc
jmp
mov
cmp
dec
cmp
lods
push
es
or
adc
add
push
push
dec
push
int
pop
or
movsb
test
fs
xor
fsubrs
shlb
jle
call
xchg
ljmp
mov
insl
enter
fucomp
imul
sub
rcl
mov
lret
mov
lahf
aaa
jmp
cmpsb
jge
pop
loop
xchg
mov
jge
scas
ret
out
sub
addb
pop
push
ret
and
call
pop
cmpsl
icebp
pop
jmp
lcall
scas
lods
sub
and
mov
push
mov
mov
stos
adc
sub
scas
jb
xor
lods
pop
xor
cli
mov
lcall
fwait
bswap
lcall
pop
mov
jge
and
stc
mov
leave
xchg
push
inc
pop
fs
pop
mov
mov
fmull
xchg
pushf
cmp
gs
in
imul
mov
adc
xchg
xchg
scas
and
ljmp
std
add
mov
pop
adc
js
scas
sti
jmp
xorl
jne
mov
mov
mov
xlat
sbb
movsl
xchg
mov
in
sub
mov
jge
cmp
pop
jns
stos
pop
lds
into
push
xor
mov
jbe
rol
push
sbb
xchg
lds
popa
cmc
cmp
mov
loope
jbe
fsubs
shl
adc
nop
addr16
leave
cmp
cmpsb
frstor
repnz
loopne
xchg
or
jne
clc
add
sbb
cmc
mov
mov
jp
pop
insb
pop
jp
jge
sub
mov
push
jo
outsb
xor
mov
mov
dec
xor
cmp
das
and
mov
mov
xor
cmp
dec
pop
js
out
xor
inc
sub
jl
jg
sahf
lret
jnp
or
outsb
mov
lcall
xor
cmc
sub
pop
mov
hlt
xchg
hlt
das
mov
movsl
arpl
mov
dec
cli
xchg
lds
xchg
das
mov
ljmp
hlt
hlt
lret
test
fstl
addr16
dec
dec
stos
stc
mov
mov
add
mov
daa
fsubrs
insl
mov
adc
push
ret
mov
loopne
add
push
adc
sub
inc
cmp
pop
add
xchg
js
mov
pop
out
jns
lret
cmpsb
out
xlat
jecxz
cs
adc
jnp
push
popf
xor
cmp
repz
testb
fbstp
add
inc
daa
or
es
jnp
fldenv
cmpsb
xorb
mov
dec
lods
adc
loope
stos
jbe
nop
pop
add
mov
and
pop
lods
sub
sbb
mov
mov
mov
out
test
mov
pop
and
push
jle
push
push
sbb
scas
dec
sub
outsl
and
ret
pop
lahf
addr16
sbb
fidivrs
cs
mov
pop
mov
xchg
out
inc
push
jne
daa
out
in
xchg
adc
lcall
cmp
lods
fsin
sti
xor
dec
or
loopne
jns
sarl
test
inc
sub
jb
fidivs
cs
xor
dec
pop
sbb
cmpb
jbe
mov
sub
mov
sub
sbb
sahf
xchg
sbb
sub
je
sarl
pop
xchg
push
cli
pop
imul
mov
decb
xchg
and
inc
mov
lods
mov
mov
popa
int3
or
mov
data16
into
add
int
jo
xchg
lods
ljmp
sub
outsb
inc
test
or
loope
cmp
mov
mov
cli
mov
fucomp
adc
or
mov
bound
sbb
xchg
push
lods
jbe
shrb
inc
push
nop
sti
test
xor
xlat
jne
push
repnz
or
or
addr16
mov
pop
fadds
jmp
mov
mov
xchg
mov
xchg
add
addr16
lret
fsubl
cmpl
movsb
cmp
lods
stos
outsl
sbb
adc
add
cmp
daa
fdivr
sub
fcoml
adc
cmpsb
sarb
pusha
mov
out
jl
cmp
lahf
and
mov
inc
mov
dec
cmpsb
xor
sbb
sub
shr
mov
xchg
and
jecxz
clc
mov
out
cli
push
and
cmp
xchg
out
out
lds
sbb
push
pop
mov
dec
adc
in
cmp
cmp
jecxz
jo
call
jne
push
sub
mov
je
inc
and
xlat
mov
add
outsl
pop
push
sar
cmp
mov
add
jmp
aas
cli
fs
xor
jo
mov
push
xchg
mov
fisubrs
arpl
out
pop
mov
cli
pop
int
jmp
or
gs
inc
push
fldenv
ja
push
movsb
pop
inc
inc
add
push
cli
in
xchg
sub
xorb
and
dec
shl
in
in
nop
mov
push
pop
fcmovbe
stos
pop
loop
fwait
cwtl
dec
mov
mull
add
dec
mov
int3
mov
test
aas
testb
sub
push
adc
push
sbb
mov
fbld
es
insl
pop
push
iret
call
push
mov
sbb
jno
mov
in
push
dec
push
sub
push
and
add
xor
repz
fildll
cltd
aas
jne
xor
dec
into
mov
push
cmpsl
pusha
xchg
dec
hlt
xchg
and
mov
jo
dec
in
mov
fstl
out
cli
and
xor
lds
inc
scas
mov
mov
push
cmc
and
sbb
xlat
fidivrl
xchg
xchg
push
add
arpl
lods
jle
pusha
std
cmp
pop
cmpsb
aas
cmp
push
push
jno
or
fmull
push
dec
loope
inc
fidivrs
stos
jbe
pop
arpl
ja
jmp
test
f2xm1
std
fwait
or
jb
pop
mov
subb
sub
lock
adc
xor
sbb
push
add
push
mov
cmc
pop
movsbl
jecxz
ja
shlb
pop
icebp
jle
sbb
adc
jle
lods
data16
stos
popf
aad
dec
or
pop
add
into
cs
sti
in
outsb
jmp
xlat
rorl
fisttpll
xor
sbb
sbb
fldcw
jp
cmpsb
dec
das
mov
insl
movsb
inc
mov
cmp
sar
fsubp
jle
adc
arpl
cmpsl
into
dec
jecxz
out
jmp
cs
cltd
in
sti
adc
dec
pop
mov
pusha
mov
cmp
andl
dec
pop
ss
push
cmpsl
xor
hlt
sbb
decb
std
xchg
jnp
popa
pop
push
pop
test
in
lahf
inc
pop
add
cli
inc
stos
ds
pop
in
add
cmp
xorl
movsb
fdivs
jmp
sub
jbe
fs
cltd
fwait
scas
sub
xchg
jge
push
jno
daa
ja
sbb
xchg
jb
push
iret
in
sbb
pop
add
mov
cld
scas
adc
sub
cli
stos
push
push
mov
scas
das
push
push
jnp
jo
mov
push
pushf
ret
jl
adc
fidivs
adc
push
and
xor
mov
movsl
push
cwtl
fndisi(8087
mov
inc
jp
rolb
rclb
mov
mov
mov
test
dec
loop
sbb
mov
sbb
add
adc
cwtl
sub
xor
or
xchg
sbb
inc
cmc
fldenv
adc
jb
cmpsb
dec
adc
sub
and
pop
outsl
jp
xchg
test
lret
push
inc
mov
mov
mov
movsb
push
pop
dec
push
inc
scas
sub
daa
add
sbb
sti
add
sub
fxtract
push
jo
sbb
add
jmp
ret
dec
call
in
dec
mov
mov
jbe
aas
mov
in
imul
ds
cmp
mov
lret
repnz
jg
es
push
imul
and
jns
jg
clc
pushf
cmp
add
loopne
lcall
sbb
adc
jg
push
adc
imul
adc
jo,pn
ret
insl
in
mov
cmc
jo
js
mov
in
mov
lods
inc
sbb
mov
shlb
aaa
jmp
jae
popf
into
adc
decb
cmp
addb
bound
mov
incb
xor
mov
ds
mov
jne
hlt
mull
divb
push
scas
sbb
les
ret
pop
pop
lahf
inc
fimuls
xor
je
jo
into
or
inc
popa
push
jno
mov
xchg
popa
dec
pop
sahf
mov
fistpll
fmuls
in
add
setge
jbe
add
or
xchg
sub
mov
adc
ljmp
movsl
jle
test
xor
mov
icebp
inc
add
rcll
inc
lret
cwtl
enter
push
cltd
dec
sbb
in
fsub
cmc
dec
jg
insb
xor
sub
mov
popf
into
icebp
pop
sbbb
sbb
push
mov
sbb
xchg
inc
xchg
lods
mov
pop
ficoms
xchg
lahf
fmuls
adc
sahf
jno
push
xor
xchg
imul
sub
enter
push
pop
or
jae
mov
lea
fiadds
iret
mov
mov
scas
leave
movsl
pushf
sbb
mov
mov
lods
inc
je
pop
in
lods
fldt
dec
out
mov
cmp
push
jb
cmp
andl
ficompl
inc
xorl
push
add
decb
push
sub
xor
inc
cmp
js
cld
sbbb
add
stos
mov
or
aas
and
adc
sbb
jecxz
push
mov
adc
icebp
jge
loope
in
inc
or
jnp
fcos
repz
cmp
je
popa
daa
out
cld
jp
push
test
mov
pop
mov
rcl
sbbl
ds
and
mov
repnz
outsl
jo
xchg
jnp
pop
rcrl
sub
pushf
sti
lahf
xchg
jecxz
sub
das
scas
in
sub
xor
cmc
mov
or
data16
add
cmp
add
dec
int
push
stc
or
pop
enter
shl
imul
and
and
dec
outsb
popf
loopne
andb
popa
xor
jge
xor
test
rcll
push
lcall
lcall
and
popf
js
leave
leave
enter
fwait
cwtl
es
inc
mov
int3
orl
lods
imulb
shrl
loopne
inc
xchg
jmp
or
das
mov
lods
and
inc
pop
cmp
enter
pusha
sub
mov
jmp
les
sahf
repz
aas
outsb
add
dec
loop
jb
dec
loopne
jb
push
fadd
dec
and
xor
dec
mov
jmp
inc
test
cmp
xchg
mov
in
pop
lock
out
or
leave
pop
mov
fcoms
adc
or
mov
cmp
fwait
sbb
dec
shl
icebp
mov
or
inc
sti
jae
repz
sbb
lcall
jg
dec
popa
movsb
mov
jns
lcall
push
dec
cli
mov
insb
sub
lret
xor
sbb
jb
jge
dec
or
jb
cmp
subb
inc
and
leave
mov
bound
lea
xchg
cmc
push
xor
mov
subl
jo
adc
lock
jae
lret
clc
sbb
rolb
or
jbe
mov
jmp
icebp
test
add
lret
push
mov
imul
cli
dec
mov
add
dec
dec
dec
mulb
je
and
imulb
les
mov
mov
lods
mov
xchg
sbb
and
dec
mov
sbb
test
mov
cld
mov
rorl
rcll
sbb
xchg
pop
ljmp
daa
push
out
std
in
fdivrl
cld
and
mov
imul
ret
push
icebp
cmp
test
pop
sbb
xor
enter
mov
pop
sub
nop
push
sbb
pop
cmp
mov
sbb
mov
popa
mov
push
mull
lds
push
or
out
adc
mov
aam
stc
cmp
xchg
bts
rorb
nop
push
test
mov
aam
jp
pop
ret
ret
popf
add
pushf
mov
jp
cmp
inc
dec
lods
int
lcall
pusha
repz
leave
out
fcomps
fiadds
test
arpl
lret
test
in
lods
or
into
sbb
int3
scas
ja
cmp
aam
insl
movsl
push
mov
jmp
sbb
popf
inc
cs
inc
xchg
cmp
and
adcl
je
sbb
ss
cmp
xchg
out
ljmp
aas
sbb
daa
add
adc
or
add
lahf
test
int
sub
ljmp
shr
daa
daa
push
jne
jne
push
sub
negl
xor
rcrl
add
dec
sub
xor
sbb
mov
pop
sbb
loop
fildll
sarl
dec
int
insb
sub
push
leave
cwtl
or
pop
leave
jne
sub
mov
cmp
add
and
je
dec
test
subb
lret
push
ret
xor
jne
daa
jo
jge
in
loop
lret
int3
mov
stos
pop
or
mov
xor
lret
xchg
jne
or
pop
jae
xor
add
add
sbb
xchg
mov
xlat
dec
es
mov
popa
sar
sub
dec
add
mov
addr16
jg
mov
mov
mov
cmp
pmulhuw
mov
sahf
daa
addr16
cmc
test
or
mov
mov
dec
sbb
test
ret
or
push
cmovge
mov
cmp
cmc
data16
shrb
pop
negb
xchg
or
push
leave
nop
popf
fnsave
int
xchg
lret
mov
push
sbb
or
cltd
jmp
nop
mov
divb
sub
push
divl
subb
jecxz
pop
or
jg
ficoml
outsb
aaa
test
push
out
into
mov
popf
jnp
loop
stc
bound
or
pushf
or
call
mov
movsb
and
mov
les
test
test
repz
fbstp
shlb
fdivrs
pop
inc
xor
shl
and
int3
addr16
test
xor
fwait
inc
int
movsb
js
push
push
sub
rorb
aam
cld
mov
jmp
add
dec
cmp
test
jnp
cmp
dec
inc
push
je
sbb
inc
xchg
mov
lods
mov
add
lcall
adc
out
add
mov
out
ss
lock
bound
flds
pop
mov
enter
sahf
pop
ja
jae
jle
das
cmp
xor
ds
mov
inc
mov
adc
outsb
lock
out
sub
mov
jo
jge
mov
pop
and
sti
loope
and
push
incb
push
fsubr
popa
sti
and
stos
fs
lahf
pop
mov
fnstcw
adc
outsb
pushf
pusha
mov
xlat
fwait
pop
push
mov
mov
jg
ret
fwait
loop
cmpl
sbb
mov
aad
in
aas
je
inc
add
in
add
dec
int
inc
mov
mov
xchg
test
shrb
mov
mov
add
mov
repz
push
xor
jnp
push
call
sub
icebp
push
sub
fsubs
xor
js
mov
mov
pop
rorl
out
xchg
xor
or
jb
sbb
test
aas
sar
std
cmp
xchg
insb
mov
cltd
sub
lret
jbe
sbb
pop
lock
add
push
mov
mov
je
dec
aad
push
push
jne
push
xor
jl
push
idivl
inc
loope
into
mov
mov
mov
sarl
or
and
mov
ds
xchg
push
mov
call
ret
dec
das
popf
push
shrl
call
mov
push
dec
dec
adc
sbb
lods
inc
jge
mov
inc
dec
pop
xor
jp
rcrb
dec
sbb
das
xor
outsb
fcmovnu
imul
xor
cmp
es
inc
daa
push
xchg
sub
aas
scas
push
ljmp
repz
xchg
and
test
cmc
jl
inc
push
or
ds
ljmp
mov
mull
sub
andl
les
lock
jbe
leave
add
fmul
mov
sub
pop
adc
and
das
scas
xor
pop
lcall
inc
cmp
and
repz
cmp
mov
mov
lret
dec
add
fisubl
notl
adc
adc
jno
enter
scas
repz
rcl
cmp
rcll
daa
mov
bts
mov
add
jmp
mov
sbb
jae
xchg
les
lret
push
adc
out
out
xor
rorl
mov
in
fwait
addr16
mov
and
xchg
jg
iret
pop
push
jp
or
jge
or
mov
jle
cmp
sbb
mov
mov
int3
cmp
cmp
stos
mov
fwait
and
stos
adc
aam
mov
hlt
jns
mov
or
mov
mov
pop
and
int3
fistps
pusha
cmp
aaa
xor
test
sub
jae
out
inc
addr16
ror
inc
stos
dec
in
fdivrs
js
std
pushf
mov
cmp
jp
jb
nop
mov
std
aaa
pop
je
rolb
addr16
mov
cmp
shl
jp
xchg
and
push
cltd
jecxz
add
repnz
leave
fdivl
stc
cmpsb
sahf
out
cmp
jo
mov
test
xor
sub
jg
and
xor
sbb
mov
dec
dec
add
jb
movsl
movsb
gs
mov
push
mov
clc
mov
sbbl
push
call
out
in
jae
mov
fmull
cmpsb
and
jecxz
addr16
xchg
push
popa
xorb
pop
or
aaa
das
inc
das
pop
sbb
mov
and
lcall
iret
push
int
adc
and
insb
jmp
inc
lds
mov
mov
xchg
sub
sbb
imul
or
mov
cmp
pop
push
jb
or
popf
insb
pushf
out
and
pop
mov
pop
insl
pop
jl
add
mov
dec
mov
jp
imul
add
push
mov
mov
xchg
xchg
push
jmp
shll
in
out
lea
std
lock
ret
mov
iret
ss
push
loopne
adc
fcompl
lahf
aas
pop
dec
std
mov
fwait
bound
mov
dec
roll
adc
insl
je
cli
cmpxchg
test
jbe
dec
mov
add
js
pop
xchg
cmp
or
push
and
fwait
clc
fdivrs
add
outsb
xor
xchg
ja
adcl
adcb
jns
adc
mov
jl
ficoml
or
dec
mov
cmp
jg
sbb
xorb
mov
cmp
add
ret
sub
push
mov
ljmp
das
subb
xchg
dec
xor
push
lret
or
adc
pushf
cmc
insl
mov
aad
mov
icebp
push
cmc
add
jne
fsubrs
adc
js
aaa
in
outsb
cmpsb
push
sahf
pop
addb
bound
int
fs
cwtl
mov
in
jp
sbb
adc
add
inc
test
cmp
push
mov
mov
sub
bound
movsl
out
mov
lret
push
mov
sbb
inc
jo
jne
or
lods
in
out
cli
jle
inc
sbb
stc
rclb
test
or
loope
loope
or
cld
loope
cltd
xchg
jmp
and
inc
pop
xchg
xlat
jp
jmp
mov
mov
clc
xchg
pop
jb
test
cmc
mov
lcall
call
or
fadd
mov
rolb
jbe
mov
aas
insl
mov
jle
ds
vmovsd
dec
and
ds
push
inc
jb
stos
inc
lods
out
sub
lcall
mov
push
aad
cmp
sysenter
pop
jns
inc
scas
inc
cltd
divl
jmp
sub
sub
push
ljmp
je
and
and
pop
push
inc
xchg
xor
xor
pop
push
lahf
arpl
js
aaa
in
xchg
pop
sar
aaa
pop
loopne
xchg
mov
mov
adc
cmpsb
popl
gs
aaa
stc
lea
jae
out
cmp
hlt
in
repnz
sbb
pushf
adc
push
testb
mov
xor
int
and
add
lods
xlat
push
pushf
insb
out
xchg
mov
scas
cmc
stos
jns
and
daa
shl
xchg
add
cwtl
sbb
or
add
int
outsb
push
ds
jae
xchg
mov
pop
aad
orb
hlt
sbb
dec
jb
push
dec
mov
dec
pusha
hlt
rorb
mov
mov
jl
ljmp
mov
lret
fs
insl
mov
xchg
scas
fisubrl
jge
lcall
mov
mov
data16
shr
jp
std
ljmp
das
pop
mov
lock
roll
cmpb
jno
jno
gs
aam
cmpsl
enter
popa
inc
jnp
ret
sub
push
mov
in
mov
inc
jmp
fwait
adc
imul
lret
bound
dec
mov
aam
ljmp
dec
pop
lods
pushf
pop
push
jne
xor
pop
jns
scas
pushl
cwtl
cli
push
sbb
inc
pop
loop
adc
aad
ret
shrl
inc
mov
inc
adc
loopne
pushf
cmp
inc
add
out
sub
pop
pop
jl
addr16
addl
push
xor
adc
mov
aaa
mov
sub
shll
test
movsl
cwtl
fdivr
daa
jmp
mov
mov
xor
push
xchg
pop
xchg
test
push
lret
jnp
fwait
jl
xor
sub
and
sub
inc
notl
push
stos
inc
dec
sahf
pop
mov
hlt
cmp
and
adc
sub
or
inc
mov
dec
pop
pop
and
push
loop
inc
movsb
pop
add
xor
imul
test
mov
data16
or
and
jo
inc
mov
dec
imul
sti
aas
adc
adc
fadds
test
pop
xchg
ja
or
or
fnsave
cmp
push
add
daa
jb
mov
in
mov
lods
jmp
push
adc
imul
enter
push
test
mov
cmpl
rcrb
aas
lea
idiv
mov
jno
mov
clc
mov
nop
pop
fisubrs
jno
cmp
test
sub
dec
pop
ljmp
or
sbb
mov
mov
and
stos
fdivl
pop
ja
or
lea
fldcw
push
mov
xchg
jle
pop
popa
xor
sbb
jno
in
fists
std
mulb
lock
dec
cmpsb
sbb
and
lods
pop
xlat
inc
enter
cmpsb
mov
adc
cmp
shll
xor
push
out
pushf
orb
jo
jecxz
sbb
icebp
sbb
push
fstp
repz
push
mov
cmp
cld
inc
xor
push
jno
pop
pop
shrb
ljmp
mov
test
cmpsl
lods
and
aas
jo
mov
push
or
cltd
sbb
sti
add
xchg
lret
mov
enter
inc
in
pop
fisttpl
and
inc
or
out
mov
sub
loope
into
xor
sub
into
xchg
gs
fidivrs
adc
jg
ret
in
jp
pop
fcomps
mov
ljmp
imul
hlt
xchg
es
dec
push
int3
adc
mov
sbb
jns
mov
adc
inc
add
xchg
mov
dec
mov
dec
mov
mov
mov
fsub
es
push
and
push
jle
sub
sahf
repz
cld
inc
lea
repnz
dec
xlat
repnz
adc
stc
popa
adc
jmp
mov
push
mov
lods
mov
sbb
stc
mov
out
dec
adc
cwtl
aam
and
fisubrl
imul
lret
and
fcompl
das
shlb
sarl
shlb
or
dec
push
inc
jmp
loope
stos
pop
sub
dec
lds
fidivrl
pop
in
int
shl
jns
inc
xchg
cwtl
mov
nop
add
push
dec
das
jno
shlb
mov
stos
fdivrp
popa
sti
add
repz
xor
push
push
jl
mov
aaa
fisubs
inc
or
negl
push
roll
inc
mov
mov
add
in
cwtl
xor
pop
shrl
mov
aaa
jbe
ret
jae
and
mov
or
jmp
sbb
inc
push
outsb
and
stos
pop
push
cmc
movsb
out
push
mov
fsubrl
dec
clc
sarl
pop
test
jle
mov
dec
xor
xor
mov
cwtl
dec
orb
pop
push
xor
xor
xor
xorl
xor
cmp
insl
aam
enter
call
repnz
jns
add
imul
sbb
jnp
dec
ljmp
mov
sub
push
inc
or
movsl
push
icebp
pop
ja
add
sub
loope
pop
mov
push
jne
and
sub
aaa
xor
jnp
popf
sbb
insl
xchg
fdiv
xchg
sub
sub
sarl
mov
push
sbb
add
adc
dec
repz
mov
cmp
mov
imul
aad
gs
roll
flds
lret
sub
mov
call
out
add
mov
popf
das
dec
sub
jmp
shr
jle,pn
mov
mov
ret
stc
pusha
lea
cmpl
xchg
inc
push
cltd
adc
cmpsb
imul
xchg
sub
ret
sub
xchg
adc
je
or
mulb
nop
cmp
jmp
adc
jge
iret
xchg
cmpsb
add
adc
mov
gs
ret
stos
jno
pop
pop
imul
mov
dec
lcall
in
psllw
mov
test
xchg
shlb
xchg
xchg
or
test
loopne
dec
mov
out
push
sarb
jae
scas
js
sbb
mov
cmp
push
pusha
mov
gs
in
popa
lret
or
fstl
scas
jg
sbb
jnp
fst
push
jo
pop
inc
sti
cwtl
data16
pushf
cltd
fidivrl
sbb
addr16
xchg
or
xchg
clc
inc
inc
cwtl
pusha
pop
pop
fcmovu
mov
int
sbb
out
cli
enter
mov
pop
daa
fldenv
out
mov
and
lret
addl
subb
jne
adc
ds
xlat
push
and
xlat
push
ret
adc
sbb
or
fnstenv
push
test
fwait
in
add
mov
sbb
cld
aaa
rep
pop
dec
mov
daa
cmc
popa
push
pop
test
repnz
loopne
cli
mov
cmp
lahf
lods
pop
test
jns
leave
sarl
gs
pop
xor
loope
jno
and
jnp
mov
and
jle
cli
dec
stos
inc
js
cltd
mulb
lock
xchg
xor
cmpsb
test
dec
fwait
imul
aas
push
pop
cmpsb
mov
cmp
aad
addr16
testb
shl
cs
test
jmp
out
subb
les
xor
or
cld
sbb
sbb
adc
fidivrl
dec
frstor
lods
lahf
pop
std
push
jmp
int
cmp
push
pop
pusha
xchg
ljmp
push
js
cmp
bound
aam
pop
lea
adcb
loopne
lods
add
cmpl
nop
xor
adc
arpl
ss
cmp
xchg
pop
leave
dec
pushf
addr16
xorl
pop
mov
scas
fwait
mov
add
out
cmp
mov
fwait
mull
fdivl
mov
pushf
lret
push
mov
mov
aam
add
es
mov
mov
or
popa
les
shlb
cld
adc
aad
sbb
fistpll
test
xchg
je
daa
mov
xor
xchg
dec
and
fiaddl
fcmovne
sahf
fucomp
push
ret
fs
insb
fcmovbe
xorl
rolb
push
outsl
mov
xchg
sub
or
xchg
hlt
ficomps
dec
mov
cmp
adc
sub
cltd
ret
arpl
dec
cmp
pop
frstor
sarl
dec
std
dec
shll
xchg
push
jns
add
mov
push
push
test
xor
into
mov
pop
cmovb
fimull
sub
mov
sbb
push
and
jo
mov
jo
jns
loope
mov
ficoml
sbb
sub
xor
or
jo
iret
lret
mov
in
lret
in
adc
scas
clc
int
mov
subl
mov
add
push
push
xchg
jno
and
xchg
xchg
mov
push
mov
push
cwtl
cmp
adc
mov
inc
sub
mov
out
push
xchg
cmp
mov
pop
pop
out
lock
pop
add
lds
dec
dec
icebp
or
xor
xor
sahf
mov
inc
mov
mov
mov
in
bound
or
push
push
and
mov
dec
shl
movsl
repnz
cmp
xchg
pusha
or
adc
aaa
xchg
movb
add
jnp
pushf
lods
mov
inc
inc
movsl
adc
and
xor
mov
mov
xor
push
fsub
stos
jg
and
or
push
adc
cmp
mov
mov
jp
pusha
xchg
std
mov
push
sub
out
stos
ds
lahf
pop
dec
sub
and
inc
std
pusha
fcoml
popa
cmp
push
push
sti
lods
ret
xchg
jp
popf
repnz
cmp
adc
into
cmp
push
sbb
push
scas
int3
pop
hlt
js
hlt
fistl
mov
xor
fisttpl
fst
das
outsl
icebp
in
cmp
es
in
dec
cmp
arpl
scas
insl
mov
jno
or
les
mov
cwtl
mov
aad
out
jge
pop
mov
sub
xchg
pop
in
subl
mov
cli
mov
inc
fildll
pop
in
jecxz
push
int3
popa
adc
jge
mov
jmp
imulb
loopne
pop
inc
or
fcmovne
test
jae
inc
ds
cmp
push
cmp
dec
data16
call
xchg
hlt
adc
mov
mov
xchg
add
jg
add
je
and
mov
jae
lret
add
das
fistl
sbb
sbbb
ljmp
dec
cmp
mov
pop
lahf
jo
xor
daa
lcall
arpl
icebp
jle
fs
pop
and
pop
mov
jecxz
popf
enter
iret
loope
inc
mov
pop
or
pop
loop
ja
adc
add
jmp
test
sti
lods
inc
aad
int3
cwtl
cmpsb
aad
sub
test
pop
loope
mov
into
push
aas
cltd
std
sub
ficompl
imul
xchg
repnz
adc
push
stos
sub
inc
aaa
and
ljmp
cmp
sbb
aad
jo
fcomp
push
jmp
sbb
in
cmp
add
call
mov
and
jno
out
outsl
xor
push
int3
cs
daa
cmp
mov
shlb
lret
dec
inc
xor
cwtl
dec
xchg
xor
sbb
mov
mov
aam
mov
imul
call
sbb
lret
push
xchg
inc
sahf
sub
jp
mov
std
add
in
push
add
xor
hlt
mov
inc
fstpt
call
popa
loopne
add
inc
cld
push
rcll
jbe
pop
je
cmp
outsl
xor
push
stos
test
and
nop
jne
sbb
popf
lea
in
nop
mov
xlat
xchg
lds
mov
popf
push
cmp
push
sub
sbb
mov
xor
cli
jmp
adc
outsb
push
jge
or
outsb
in
cmp
lcall
cmp
xor
inc
push
decb
setp
cmp
xor
lahf
fsubr
enter
setnp
xchg
imul
inc
push
mov
cmpsl
xchg
adc
push
lock
cli
pop
std
pop
xor
stos
out
mov
in
in
rcr
test
stc
pop
sbb
or
jl
pop
or
sbb
aaa
jge
stos
sbb
movsb
add
add
shlb
stos
inc
cmp
mov
mov
jecxz
mov
xor
je
lcall
lods
pop
add
push
js
inc
orb
cmp
push
daa
fcmovnu
push
hlt
lret
dec
push
and
inc
sarb
xchg
jnp
test
cld
addr16
movb
push
das
mov
adc
jp
call
outsb
nop
fs
xchg
in
dec
push
clc
pop
test
ficomps
pop
mov
mov
repnz
inc
scas
aad
out
and
push
or
insb
call
xor
cmp
jns
jge
test
push
jge
push
lret
jno
jne
xchg
mov
lcall
jmp
cmpsb
xchg
push
movb
fbld
enter
cmovle
add
mov
andb
mov
aad
sub
test
fs
outsb
cmc
in
xchg
bnd
pop
mov
jmp
jae
pop
sub
aad
add
xlat
push
aaa
sub
ss
addr16
pop
or
mov
inc
insb
dec
fs
int3
jo,pt
add
mov
pusha
fnstenv
sar
repnz
mov
cmp
pop
mov
mov
lcall
sub
dec
xchg
adc
xchg
adc
xor
mov
sbb
xlat
lds
aaa
cmp
cltd
push
dec
dec
pop
mov
mov
and
xchg
insb
in
mov
or
xchg
nop
jmp
push
je
adc
adc
repnz
je
hlt
add
repz
lret
imull
sbb
faddl
dec
adc
cmp
mov
pop
pop
mov
inc
leave
and
pop
jmp
push
je
adc
pop
xorb
mov
cld
ret
dec
insb
outsb
movl
sbb
jnp
cmpsl
addr16
xor
out
adc
xchg
repz
push
mov
xor
sbb
xchg
push
lds
mov
mov
mov
fadd
inc
inc
sbb
push
jge
and
push
lds
repnz
pop
std
pop
xchg
lahf
stos
or
xlat
orb
mov
pop
stos
xor
loop
loopne
fstps
dec
in
jmp
lcall
push
cmp
pop
into
mov
sub
jle
push
sub
jns
aad
iret
push
sub
int3
mov
lahf
loopne
clc
push
je
adc
xor
test
and
out
mov
xor
or
xchg
push
ret
fnstcw
fwait
jle
jbe
jb
ss
pop
ljmp
pop
cmp
lea
mov
pushf
loope
cmp
pop
aad
xchg
mov
xchg
xchg
flds
mov
and
shrd
lret
mov
aas
or
xor
jb
cmpb
not
push
cmp
xchg
inc
icebp
mov
pop
pop
sub
jmp
jnp
aam
iret
xchg
xlat
daa
jne
push
mov
or
orb
xchg
lds
sbb
bound
daa
push
lea
daa
popl
dec
jg
mov
inc
adc
insl
nop
or
aad
sub
mov
xlat
into
sub
imul
mov
movsl
adc
into
pusha
mov
and
nop
mov
scas
scas
scas
and
add
loope
fdivp
mov
push
push
adc
enter
adc
and
leave
lock
mov
leave
inc
cmp
es
mov
lock
leave
lods
icebp
xorl
or
int
icebp
add
fidivrs
adcb
dec
add
cmp
pop
lret
cmc
cmp
imul
mov
xlat
call
test
imul
icebp
cmpsb
pusha
push
jb
loopne
call
cld
addr16
and
sbb
dec
cmp
or
push
dec
add
lods
pop
fdivrp
dec
sbb
fs
or
add
jl
xor
mov
int
mov
mov
mov
jl
shll
and
cmp
sbb
clc
movsb
popf
dec
xorl
mov
push
jno
cmp
xchg
je
mov
push
sub
shrb
mov
mov
or
daa
mov
lea
xchg
fsubrp
dec
inc
xor
or
in
jg
popf
mov
push
sbb
or
outsb
out
arpl
mov
or
out
movsb
push
or
jbe
dec
loope
out
sbb
dec
leave
sub
dec
dec
daa
adc
cmp
es
jle
add
ljmp
mov
scas
outsl
mov
loopne
add
pop
push
stos
mov
daa
inc
insl
mov
aam
xchg
stc
int
cmp
sbb
js
mov
out
jg
loope
pop
sub
cmp
dec
jne
jmp
fwait
adc
lcall
jmp
adc
sub
mov
arpl
aas
jae
cmpsl
lds
jl
lea
or
jmp
sub
sbb
js
add
cmp
loope
add
pop
or
mov
pop
in
pop
int3
sub
jmp
popf
cmc
sub
pusha
cmc
mov
sub
sub
mov
sti
jp
pop
sbb
je
mov
sbb
inc
iret
sarl
or
add
pop
cmpb
jecxz
ljmp
sub
inc
fisttpll
push
and
filds
and
sbb
stc
andl
fs
dec
sub
dec
ret
sub
xchg
das
decl
adc
bound
adc
cmp
mov
sub
cmp
in
cmp
pop
lea
inc
and
out
push
out
mov
cld
add
int
enter
stos
lea
sub
dec
gs
push
sbb
shll
das
or
cmp
out
adc
add
push
idivl
xor
jle
ret
push
jmp
and
sub
xchg
inc
stos
popf
or
jns
and
adc
xchg
decl
mov
aam
popf
lock
jle
insl
jg
adc
xchg
mov
push
push
dec
ret
push
mov
cmpsb
cmc
lock
data16
push
jbe
and
inc
outsl
jns
pop
and
jl
out
mov
push
scas
mov
test
inc
xorl
push
mov
pop
adc
outsb
mov
pop
xchg
test
push
mov
rcrl
and
push
outsb
scas
cmpsl
cld
fdivrp
mov
xor
inc
xchg
cmpsl
cmpb
mov
cmp
jbe
decl
lret
movsb
jne
adc
sahf
push
iret
fstpt
dec
inc
jl
ja
nop
mov
gs
or
mov
jnp
dec
sub
fnstenv
jo
stos
xor
dec
cld
and
mov
and
dec
adc
sbb
add
and
fnstcw
mov
lret
adc
jmp
mov
add
inc
loop
or
cmp
lods
mov
in
xchg
and
mov
repnz
movsl
movsl
dec
test
je
pop
lods
xchg
sub
stos
push
mov
fildl
imul
insl
stos
sbb
bound
xlat
arpl
mov
add
cmc
sbb
sbbl
aam
fsubr
and
cltd
ljmp
cmp
fisubrl
mov
sub
sbb
jecxz
orb
mov
outsl
les
pop
cmc
jmp
mov
jge
cmc
shll
and
stos
popf
arpl
inc
in
xchg
aaa
xchg
test
push
and
push
inc
cmc
inc
xor
scas
push
fs
fwait
in
cmp
cmp
jge
or
shrl
cmp
mov
inc
in
sbb
jne
mov
jmp
lret
inc
cmp
mov
shlb
mov
xlat
push
sub
out
scas
pop
out
add
pop
in
clc
cmp
mov
in
outsb
cwtl
lahf
dec
fstpl
sbb
jno
ret
repnz
pushf
stos
filds
xor
inc
xchg
ret
test
mov
cmp
movsl
mov
pushf
fwait
xor
jmp
mov
inc
dec
insl
mov
mov
repnz
and
xchg
adc
icebp
dec
cmpsl
ja
dec
jnp
test
pop
lcall
fstpt
aad
sbb
dec
std
aam
in
test
cmc
push
nop
mov
xor
cltd
cmpl
out
push
push
jmp
rcrb
outsb
loopne
dec
push
xor
addr16
loopne
xor
data16
xor
test
clc
lret
jle
lock
sub
mov
lea
inc
pop
enter
and
xchg
jbe
cmpsb
ja
lods
test
dec
in
mov
mov
or
push
or
arpl
xorps
daa
and
cltd
dec
xor
jbe
cmp
cltd
adc
sbb
loop
outsb
pop
in
xor
and
icebp
sbb
sti
loopne
subb
fsub
adc
push
frstor
test
pushl
arpl
mov
in
test
jnp
add
cmpsl
cmp
mov
push
ret
and
adc
push
dec
sub
icebp
sub
shlb
imulb
dec
out
fldenv
sub
sub
cmpsb
adc
xchg
loope
push
dec
pop
xchg
cli
mov
lcall
and
or
not
xchg
rolb
cmp
lret
mov
mov
addb
adc
sahf
cmp
fldenv
mov
test
scas
adc
cmp
xchg
xchg
push
push
push
imul
inc
inc
jns
xchg
xchg
push
cmp
mov
jno
leave
inc
mov
aas
fcomps
jle
cld
and
addl
ret
mov
pop
enter
xchg
adc
lods
jg
popf
xor
xchg
xchg
mov
push
mov
push
lret
jecxz
inc
or
xchg
mov
or
xlat
pop
hlt
mov
mov
rclb
popl
or
or
sti
insb
fldcw
mov
pop
jge
sbb
std
jge
ret
test
enter
xchg
insb
frstor
jge
add
test
add
inc
sbb
or
ljmp
and
and
cmpsl
push
cmp
jo
push
and
pop
out
push
and
inc
enter
imul
shr
push
mov
cs
scas
jns
je
sbb
pop
xchg
in
clc
les
pop
xchg
sbb
stos
loope
adc
or
aas
fwait
or
test
stc
xchg
mov
push
pushf
jo
pushf
int3
inc
hlt
cmp
jp
jns
xchg
repz
mov
jae
jmp
pushf
fcomi
dec
stc
loope
lds
add
mov
leave
test
mov
repz
out
lcall
sub
sbb
add
jle
push
or
sbb
sub
mov
cmp
xchg
sub
dec
adc
dec
mov
lds
ficompl
ret
jns
jp
jecxz
xor
roll
lcall
cmp
pop
xor
jb
jp
idivb
pop
cmpsl
arpl
orps
andl
cli
push
icebp
dec
lcall
xor
xor
sti
jno
cld
adc
iret
les
out
addb
cmp
push
int
enter
cmp
bound
ffreep
mov
lods
dec
fldenv
gs
imul
pop
push
xchg
mov
out
dec
sub
mov
add
mov
adc
lret
aas
stc
cmp
cmp
mov
sub
sar
aad
popf
mov
and
mov
jmp
jae
lea
push
mov
pusha
testb
cmp
sbbl
mov
ja
mov
pop
jb
in
mov
outsb
pop
movsl
mov
inc
rclb
stc
outsb
pop
shll
mov
aaa
push
popf
shll
mov
je
inc
shr
add
cmpb
mov
fistpll
or
push
push
outsb
ljmp
aas
hlt
shr
ret
shr
cmp
ret
jns
jmp
xor
fistl
jne
sar
sub
push
das
adc
mov
cmp
stos
push
lret
outsb
xchg
das
rcrl
sahf
add
mov
jne
mov
ja
or
pop
adc
push
filds
xor
lret
mov
jmp
jl
mov
ljmp
push
jne
imul
cwtl
cmc
in
lret
scas
in
add
stos
cmc
pop
or
pop
fldenv
inc
xchg
pop
xor
jbe
or
sahf
fiadds
inc
xchg
mov
xlat
sbb
pop
dec
out
mov
mov
imul
gs
mov
popa
sbb
xlat
pop
jnp
inc
jne
and
fisubl
xchg
das
insb
lods
xchg
aad
pop
std
dec
sub
dec
jecxz
inc
pop
jle
jne
cmp
mov
ljmp
lcall
divps
vpsrad
add
mov
test
cmc
mov
xchg
into
inc
push
cli
in
mov
push
int
sub
test
imul
rcl
xchg
aam
add
rol
out
pushf
cmp
dec
dec
lret
add
sbb
dec
out
cld
sub
sub
cmpsb
mov
inc
xchg
mov
sub
stc
add
stos
gs
mov
push
mov
dec
movsb
push
xchg
adc
loope
sahf
jp
mov
add
aad
adc
pop
sub
mov
arpl
sbb
jo
sub
test
jb
movsl
call
insb
and
pusha
xchg
sbb
sbb
sub
pop
adc
push
dec
or
lea
xor
pop
stos
cmp
mov
pop
and
test
lret
cltd
pop
rclb
push
add
push
xchg
mov
xchg
mov
dec
xchg
stos
fsubr
lret
jb
jae
clc
outsl
add
cmp
scas
push
cli
adc
testl
mov
imul
pop
xchg
jmp
iret
stos
jg
lret
xlat
mov
test
test
add
dec
ret
imul
out
ljmp
daa
fisubrl
mov
cmp
ret
lcall
push
xchg
movsl
cmp
inc
call
push
sub
xchg
int3
push
lret
adc
cwtl
pop
movb
sbb
adc
stos
cmp
mov
or
pop
inc
insl
and
insb
and
mov
mov
inc
addr16
icebp
ret
add
hlt
sti
mov
imul
fbld
scas
das
mov
sub
sbb
pop
ja
pop
repz
xchg
sbb
lahf
fidivl
out
rolb
fisubl
rcll
ret
sub
push
in
shlb
test
dec
cmp
jbe
enter
cltd
pop
adc
mov
ror
lea
dec
repnz
xchg
adc
lret
insl
clc
dec
cmpsb
imul
jae
fstps
popf
int
mov
test
xor
xor
cmpsb
jmp
push
sub
sahf
push
xor
js
inc
pop
jp
xor
jo
je
jno
fsubrl
enter
cmp
pusha
arpl
sti
dec
stc
fisttpl
jnp
fcoms
out
mov
jl
jmp
dec
xor
push
mov
daa
mov
push
aas
test
mov
xchg
adc
in
pop
inc
cmpsl
rorb
test
pushf
xor
sbb
push
int
leave
inc
inc
dec
adc
loope
dec
lahf
pop
adc
repnz
sbb
stos
add
and
jmp
inc
daa
es
jmp
sbb
aaa
add
aam
sbb
sub
loopne
adc
rcll
aas
shll
xor
shl
push
sti
adc
stc
pop
mov
jle
pop
push
sbbb
scas
ret
xchg
imul
or
stc
push
xchg
movb
push
scas
cmp
pop
xor
sbb
or
mov
sub
sub
mov
dec
insb
lcall
mov
out
ja
movsl
mov
jmp
xchg
sbb
loopne
rolb
int3
nop
pusha
dec
sbb
das
leave
jp
sub
jle
add
mov
sub
cld
xchg
out
mov
ds
in
inc
ret
lods
mov
int3
mov
cmp
test
xchg
cmp
xor
insb
or
adc
cmpl
push
push
pushf
in
cmpsl
bound
or
out
adc
mov
jns
mov
jae
add
sbb
mov
loopne
std
mov
roll
fistpll
inc
push
push
push
pushl
jp
lret
mov
inc
jb
sub
fcomps
jl
sarl
fiadds
adc
add
fdivrl
cli
pop
repnz
mov
test
imul
mov
insb
mov
arpl
ror
push
push
imul
clc
cmpsb
add
mov
shr
push
adc
loope
cwtl
dec
inc
inc
jg
mov
sub
xchg
mov
add
in
inc
mov
xor
and
lcall
lret
or
loopne
pop
or
mov
xchg
cld
mov
inc
jg
popf
sub
dec
xchg
ljmp
xorl
mov
cmpb
push
es
ljmp
push
mov
lcall
mov
adc
lds
mov
lds
ja
icebp
test
pcmpgtd
inc
cli
loope
dec
inc
sub
mov
dec
test
ja
adc
mov
arpl
dec
shl
loopne
imul
ljmp
push
ss
jmp
sbb
sub
sti
xchg
shll
outsb
adc
pusha
nop
add
xchg
aaa
sbb
outsb
lahf
or
sub
sub
outsb
imul
ds
cltd
xor
sbb
ret
mov
xor
jno
orl
popf
inc
and
adc
add
jl
rorb
cli
insb
loop
daa
jae
sbb
into
pop
in
sub
mov
xchg
add
push
rorl
leave
inc
cs
inc
adc
xchg
jns
inc
int
es
rolb
ret
jb
xor
das
sub
cmp
jo
mov
test
dec
mov
or
ljmp
jb
psubq
ret
ror
dec
mov
lret
cmpsb
jo
imul
xchg
mov
xorl
jle
push
or
or
arpl
add
add
cs
pusha
test
ficoml
nop
aad
push
add
ds
cmp
test
popf
in
xchg
pop
cltd
rcll
out
sub
mov
int
or
cmp
testl
xchg
out
imul
mov
mov
add
stc
add
mov
sbb
cs
icebp
xchg
jmp
dec
jno
cmp
imul
add
xchg
int
cwtl
jbe
mov
adc
jp
xor
pusha
dec
cwtl
dec
sub
xor
lods
cli
inc
add
fs
adc
dec
ret
adc
arpl
push
push
xchg
loopne
sub
mov
mov
sbb
sti
mov
das
orl
sti
scas
cmpsl
cmp
and
cmp
pushf
dec
mov
mov
in
xor
xchg
mov
add
jno
shlb
mov
sbbb
sbb
lret
pop
mov
pop
add
sti
test
pop
int3
sbb
mov
out
push
les
or
cmp
mov
mov
mov
xchg
cli
and
xchg
or
xchg
ret
push
clc
sub
mov
pop
jle
xor
lea
pop
out
xchg
dec
adc
mov
out
jbe
mulb
hlt
xchg
fldenv
or
mov
addr16
dec
mov
or
mov
movsl
aad
jmp
cmpsb
lds
inc
jnp
sub
mov
xor
pop
mov
inc
jb
out
fldt
fsubrl
leave
icebp
pushf
push
cld
cwtl
jp
scas
imul
and
and
and
xchg
cld
imul
clc
mov
pusha
xchg
inc
xlat
pop
lock
ja
lcall
out
nop
cmp
and
dec
ss
cmp
xchg
cmp
adc
es
xchg
fisubs
scas
push
dec
movsl
xchg
adc
xor
repnz
cmp
je
jae
sub
mov
mov
das
mov
sbb
inc
inc
cmpsl
lret
pop
pop
inc
mov
fdivr
xor
jecxz
loop
int
pop
outsb
out
add
mov
xchg
jle
xchg
mov
inc
pop
mov
xor
mov
add
and
mov
lahf
cmp
cmp
inc
jl
in
adc
clc
in
xlat
add
in
std
mov
mov
sbb
push
mov
xchg
inc
adc
bound
hlt
cs
lahf
xchg
and
aaa
push
fldcw
pop
add
test
dec
scas
push
cld
dec
xchg
xchg
adc
shrb
jp
orl
xchg
sub
popa
jb
xlat
mov
flds
xchg
push
in
outsl
adc
mov
lods
orl
pop
loopne
xchg
mov
jno
test
mov
pop
jecxz
in
test
stos
lret
fs
arpl
sub
push
push
cmp
test
aam
pop
sub
loopne
idivb
arpl
inc
sbb
dec
pop
lahf
jno
test
rcrl
adc
cmp
mov
and
imul
roll
mov
dec
xor
imul
push
dec
jbe
adc
daa
fs
and
sub
cld
add
jae
gs
push
shrb
xchg
stos
mov
pushl
or
fdivr
sub
push
fwait
and
outsb
jmp
clc
mov
icebp
pop
enter
push
sub
sub
aas
cltd
or
jge
loopne
fisttps
mov
hlt
or
xchg
add
out
shrb
lret
aad
inc
jo
dec
and
int3
outsl
stos
add
or
lds
lahf
push
jg
mov
adc
sbb
and
jl
add
aaa
or
lea
cmovb
ret
imul
and
push
or
ja
leave
pusha
movsl
cmc
stos
jl
test
std
bound
sbb
sbb
movsb
cmp
leave
lcall
pop
pop
ljmp
pop
inc
mov
mov
jl
ds
adcb
inc
out
into
dec
insl
xor
or
mov
std
cmp
sbb
not
in
out
clc
xchg
xchg
mov
add
inc
jle
clc
enter
push
sti
adc
icebp
jnp
inc
jne
mov
lock
cli
repnz
cmp
mov
jbe,pt
ds
aaa
mov
xor
xchg
orb
push
arpl
in
jns
scas
jb
rcrb
or
enter
cmc
ficoms
add
dec
or
mov
aas
sbb
inc
orb
sub
jno
clc
mov
bound
into
cmpsl
and
xchg
pop
and
adc
mov
pop
push
ja
cltd
leave
sub
and
dec
out
addl
add
cltd
rcrl
or
add
pusha
xor
push
aad
pop
xchg
jo
inc
mov
mov
imul
leave
push
loop
dec
mov
inc
xchg
fwait
pop
cmp
stc
ss
addr16
lock
sqrtps
and
arpl
dec
divl
xchg
sub
sub
aam
insb
jp
sahf
and
push
pop
fiaddl
jecxz
cmp
out
int3
rcrl
sbb
mov
inc
cmpsb
mov
push
jne
cmpsl
sub
icebp
mov
add
mov
aam
aas
sbb
and
jnp
lret
and
es
or
icebp
gs
xor
add
xor
movsl
pushf
dec
jge
inc
pop
lds
arpl
dec
push
movsb
dec
mov
jno
lcall
xor
xchg
jg
dec
and
idivb
push
in
mov
pop
lds
mov
sbb
add
movsl
test
imul
bound
daa
sbb
nop
xchg
inc
pusha
insb
inc
dec
jle
lea
xor
mov
imul
cwtl
and
clc
jno
xlat
stc
pop
mov
jp
push
xchg
xlat
mov
pop
xor
xchg
movsb
enter
jmp
insb
mov
xor
or
jb
sbb
push
psrld
add
mov
les
mov
iret
cmp
xor
cwtl
or
out
add
cmp
lods
pop
mov
ja
dec
xchg
lcall
jl
xlat
add
cmc
fists
int
int
dec
test
cmp
rorl
inc
add
cwtl
adc
sub
inc
push
cwtl
xor
iret
xor
and
cld
cmc
stc
lea
mov
inc
inc
jp
es
cmp
fidivl
sbb
lock
cmpsl
lahf
pop
in
das
sub
cmp
rcrl
out
rorl
repz
mov
mov
and
dec
sti
push
xchg
dec
repnz
pushf
mov
inc
inc
xchg
adcb
aam
sbb
adc
out
les
mov
scas
dec
fisttps
sub
jae
jmp
inc
dec
movsl
adc
xchg
std
and
pop
adc
add
fnsave
inc
ret
in
mov
movsl
dec
cmp
aad
jle
fstl
repz
jnp
idiv
cld
pop
test
call
movsl
nop
arpl
and
mov
and
push
and
and
cmp
fcompl
loopne
inc
mov
out
test
cmp
es
popa
jbe,pn
cmp
gs
lods
mov
packssdw
sarb
aad
sbb
mov
xchg
std
jb
test
add
mov
adc
jb
ret
ss
lcall
push
shl
inc
js
push
aaa
xchg
ja
jmp
lds
scas
push
adc
mov
mov
xchg
sub
fwait
xchg
jae
js
jl
pop
mov
pop
mov
pop
pop
sbb
pop
fisubrl
int3
cltd
fldcw
fisubs
mov
cs
inc
mov
push
mov
push
push
scas
js
loopne
imul
sbb
stos
rep
xor
sbb
jo
jns
pop
push
ss
cmp
mov
mov
mov
push
and
xchg
imul
jbe
test
call
sarb
push
jne
push
movsl
nop
bound
inc
mov
cmp
shrl
mov
add
pop
std
cmc
movsb
incb
popa
mov
or
cmc
iret
and
inc
loop
cmpsb
ja
cmp
incb
arpl
add
repnz
pop
fs
lea
xchg
loopne
ja
outsb
pop
xchg
fidivl
mov
das
pop
add
jmp
lret
add
shr
push
cmp
or
subb
shrl
cltd
dec
outsb
pop
mov
adc
inc
mov
jmp
dec
dec
xchg
lcall
push
cs
and
test
mov
bound
pop
icebp
mul
icebp
ja
mov
ja
jmp
xchg
xor
xchg
std
dec
push
lds
movsl
push
hlt
xchg
mov
loopne
daa
leave
mov
xchg
clc
aam
jae
adc
mov
push
je
xchg
imul
mov
jae
inc
insb
sbb
cmp
mov
idivb
cld
sbb
inc
and
lods
out
movsl
or
decl
inc
outsb
sbb
shll
sbb
lret
pop
sbb
sbb
pop
or
and
jmp
push
inc
jge
jnp
and
rorl
lods
repnz
mov
jg
mov
push
stc
sub
mov
repnz
cmp
xor
rclb
jb
push
and
dec
enter
sbb
mov
cs
mov
cwtl
xchg
repnz
scas
mov
mov
stos
idiv
inc
adc
jle
icebp
pop
dec
pop
push
push
mov
mulps
ds
out
jne
mov
sbbl
int3
xor
pop
stos
lds
jb
xor
pop
push
sti
sbbb
lret
aam
pop
cwtl
adc
iret
mov
adc
mov
in
repz
or
jno
sbb
sub
push
push
addr16
xchg
fmuls
push
imul
outsl
aam
hlt
jmp
testb
insb
xchg
cmc
jge
add
cmpsb
sub
incb
fsubr
mov
cmpsb
lds
push
stos
push
jle
lock
adc
aaa
in
mov
neg
mov
jbe
xor
cmp
cmp
dec
andb
int3
push
pop
dec
insb
mov
imul
adc
inc
into
out
dec
out
pusha
cmc
and
mov
mov
fisubrs
aad
in
leave
repnz
mov
pop
xor
mov
loope
ret
call
xchg
mov
pop
jecxz
dec
push
outsb
push
sbb
aas
push
xor
mov
cmp
cmp
loope
mov
stc
int3
scas
imul
xchg
xor
mov
mov
lcall
stos
roll
dec
xor
jo
nop
add
adc
pop
iret
xorb
adc
mov
scas
sub
xor
pusha
dec
rcll
out
out
pop
cmp
mull
cmp
xchg
nop
sub
adc
sbb
es
mov
mov
adc
mov
xor
sbb
icebp
sbb
sub
xchg
push
lds
jecxz
jl
das
sub
inc
mov
mov
test
xchg
cmp
lods
jp
fs
dec
test
mov
jne
push
adc
fisttps
aaa
push
adcb
xchg
and
pop
rclb
lahf
push
fmuls
jecxz
aad
loopne
sahf
into
mov
fsubrs
sti
das
test
je
or
in
cmp
aam
jo
mov
mov
mov
cmpsb
neg
mov
mov
sub
mov
push
int
aaa
dec
adc
stc
push
addr16
pop
cmpb
repnz
push
xor
push
and
es
jne
sub
xor
cmp
lds
mov
add
adc
sub
adc
xchg
xchg
je
mov
or
mov
mov
cmp
sarl
ja
sub
inc
jge
add
mov
out
lahf
or
adc
fs
jg
xchg
fists
imul
test
outsl
cmpsb
int
xor
roll
push
pop
ror
popa
xor
frndint
mov
shll
jb
sti
adc
negl
jo
jo
sub
adc
cltd
cwtl
aam
cld
cs
les
adc
mov
jo
cmp
data16
sbb
mov
mov
test
sub
clc
add
cmp
int
lret
hlt
push
cmp
mov
xchg
cmp
xor
decl
inc
add
bound
in
lods
inc
fdivrs
push
mov
cltd
fstl
adc
scas
ret
pop
jno
mov
push
cmpl
pop
adcl
mov
insl
xchg
call
jno
ret
data16
mov
and
mov
nop
sbb
cltd
faddl
adc
in
pop
mov
lcall
xor
push
add
adc
inc
inc
cli
mov
test
loope
sub
jl
je
movd
gs
aaa
sub
mov
dec
ja
push
adc
out
add
jp
stos
cld
adc
xchg
ret
loopne
ret
insl
in
inc
inc
nop
gs
push
jmp
push
lea
jb
jge
les
sub
jno
daa
jl
test
bnd
xchg
imull
movl
sub
inc
push
sbb
lret
add
scas
enter
mov
test
lods
add
pop
dec
stos
stos
pop
iret
cmp
iret
push
adc
cmp
ret
jmp
sub
adc
int
dec
scas
mov
sahf
in
jns
addl
repz
adc
pop
sbb
jp
lahf
jecxz
loope
xchg
loope
movsb
and
or
xchg
mov
mov
sti
mov
sbb
push
aas
lods
push
es
sub
or
sahf
xor
jb
pusha
daa
mov
sbb
out
sbb
cmp
loope
in
fs
xchg
loopne
or
mov
ljmp
sub
xor
shr
jmp
das
mov
inc
mov
cmp
ja
dec
lcall
js
jbe
mov
mov
xorl
call
aad
mov
add
js
cmp
repz
sub
mov
cmp
sub
inc
inc
mov
stc
loope
push
jmp
pop
pop
sti
mov
and
pop
xchg
lods
scas
adc
xchg
jg
mov
sub
shll
jle
insb
mov
adc
nop
pop
xor
sahf
int3
push
fisttps
pop
inc
adc
jns
or
aad
lcall
pop
rorl
push
mov
xor
lods
mov
ret
addr16
or
scas
adc
or
xchg
test
roll
cmp
jecxz
out
out
pop
fwait
inc
and
mov
das
fildl
cltd
or
jns
loopne
std
push
mov
jl
loopne
pop
fnstsw
fadd
arpl
aas
mov
or
or
stos
mull
stos
jp
nop
sub
pop
aaa
jg
adc
adc
or
cmp
mov
mov
in
sti
jo
fstl
ljmp
das
or
dec
cs
push
rcl
dec
fs
xor
xor
add
lods
ss
scas
xchg
inc
inc
xorl
aad
cld
push
mov
cs
fldcw
cmp
pop
daa
mov
fildll
mov
lcall
test
sbb
mov
adc
ja
loop
flds
std
idiv
adc
cld
pop
sbb
dec
sbb
ret
aaa
jb
shlb
ja
push
jo
mov
mov
cmp
clc
mov
inc
aam
xchg
xor
inc
pop
dec
aam
call
mov
rolb
clc
jo
pushf
iret
mov
pop
dec
mov
fsub
sub
into
je
jmp
lock
outsb
test
sbbl
sbb
and
sub
jl
lods
jge
push
lods
aam
xor
inc
std
xchg
dec
lock
push
aad
and
xlat
movsl
sbb
dec
cld
div
rcrb
xor
movsl
mov
dec
adc
leave
insb
jmp
push
lcall
pop
mov
out
js
dec
outsl
sar
jle
xor
sti
dec
inc
pop
ret
es
dec
mov
add
dec
add
fisubrl
push
cvtps2pd
lods
subb
ljmp
arpl
add
clc
rorl
xor
rcrb
push
out
negl
fbld
add
jg
test
out
mov
mov
adc
mov
inc
sub
pop
add
push
dec
mov
ss
xchg
aam
cmp
dec
les
enter
sbb
mov
loopne
and
cmp
dec
clc
aam
sbb
ljmp
mov
mov
cmc
ret
out
xchg
sub
inc
pop
mov
mov
mov
aaa
pusha
xchg
dec
dec
inc
cltd
imull
cld
sub
rclb
mov
cli
adc
push
lahf
outsb
adc
adc
dec
mov
inc
jnp
fmul
sub
std
mov
xchg
dec
repz
fdivr
mov
jnp
test
jb
mov
cmp
clc
jp
add
ror
imul
bound
data16
mov
mov
test
mov
ret
push
dec
outsl
fs
pusha
cltd
pop
sbb
sbb
test
sbb
adc
lods
repz
mov
add
mov
out
sbb
je
ret
cmpsb
xor
insl
std
or
mov
xlat
mov
bound
mov
or
jo
lds
jnp
scas
add
aad
xchg
rorl
mov
jge
adc
daa
les
les
push
cmp
sub
lcall
test
mov
aad
les
adc
cmp
jns
fldl
lds
push
mov
dec
fmull
add
cmp
addr16
xor
xchg
cmp
push
pop
mov
popf
xor
ror
loopne
inc
sub
fcoms
mov
dec
mov
idivl
outsb
mov
jp
subl
xlat
flds
xchg
pop
xchg
sbb
cmp
jl
insb
fnstcw
dec
pop
das
roll
test
mov
call
lea
ret
lret
push
add
mov
ljmp
pop
test
or
loope
int
fistps
pusha
pop
and
push
mov
cmp
dec
out
jecxz
mov
ljmp
subb
xor
jg
and
mov
sub
daa
or
lret
mov
imul
cltd
adc
sub
fwait
aaa
data16
stc
movsl
out
pop
mov
adc
imul
pop
in
jo
outsl
pop
lods
into
xor
jnp
imulb
sbb
orl
add
jns
movsb
sub
movsb
ret
pop
out
add
or
and
notb
movsl
mov
pop
xor
cli
repz
insb
lret
mov
imul
cmpsl
pop
nop
arpl
fwait
push
les
or
push
add
fdivr
inc
pop
push
ret
sbb
xor
ja
fcoms
xchg
cmp
mov
inc
add
imul
sub
inc
mov
in
push
cmp
xchg
sbb
cmp
lods
xchg
lea
lahf
in
push
push
and
pop
repz
jnp
fs
imull
dec
fs
movsl
popl
nop
icebp
shrl
mov
mov
fidivs
sbb
sahf
mov
iret
pop
aam
les
fcmovu
pop
pop
enter
pop
sahf
je
not
fimuls
stc
mov
jp
les
daa
ss
jbe
outsb
ror
in
and
cmpsl
cs
rorb
xor
push
rolb
cmc
push
cwtl
pop
xor
movsb
xor
test
arpl
sub
mov
inc
aad
sti
in
and
xchg
mov
adc
mov
cltd
dec
scas
mov
dec
adc
adc
sbb
test
mov
push
dec
test
inc
cmp
adc
rcll
inc
pop
xchg
arpl
fldt
xchg
scas
repz
stos
rclb
out
cmp
popl
ja
push
and
cltd
mov
inc
push
or
mov
sahf
push
into
aaa
cmp
or
outsb
cmp
xor
and
mov
mov
les
cmp
cmp
ljmp
out
into
nop
push
pop
dec
dec
push
inc
adc
jae
adc
jno
aam
inc
scas
xchg
and
cmp
jge
sbb
ss
dec
ss
inc
jmp
jne
and
pusha
mov
pop
inc
xor
fdivrl
ja
and
or
push
rol
nop
in
and
mov
mov
pop
mov
icebp
push
call
dec
int3
mov
flds
push
add
pop
outsl
adc
test
pop
loope
out
fadds
sub
aam
or
jbe
in
es
xchg
in
lds
ss
xorb
ficompl
xchg
test
movsb
mov
inc
movsb
sbb
add
popf
cmc
ljmp
sarb
jb
xor
mov
ret
data16
jnp
fisubl
mov
out
arpl
ja
int
adc
add
addr16
leave
outsb
cmc
pop
xchg
fimuls
inc
leave
daa
mov
loope
lret
sub
std
push
dec
and
and
xchg
adc
cltd
mov
add
ljmp
imulb
xchg
mov
mov
js
and
pop
jno
je
pop
es
loope
xor
sbb
test
jl
scas
adc
sbb
fwait
data16
sub
jno
sub
xor
std
out
out
cld
imul
xchg
xor
add
inc
xor
lods
fcompp
add
mull
loop
mov
and
sbb
imul
stos
jno
adc
aas
add
cmp
add
js
jno
sub
and
data16
or
stos
xchg
in
das
jmp
mov
pcmpgtw
subl
cmp
int3
and
pusha
ljmp
frstor
push
stc
sbb
jne
in
loope
in
clc
mov
mov
adc
cmp
andl
dec
lods
jno
movsl
push
pop
adc
flds
add
mov
arpl
add
or
jmp
push
inc
sbb
in
cmp
incl
lock
gs
andb
cmp
dec
jmp
das
dec
loop
add
dec
sbb
xchg
in
into
in
inc
test
push
dec
sbb
dec
mull
or
int
inc
pop
mov
dec
inc
or
nop
inc
jns
dec
imul
push
outsl
xor
in
adc
push
or
enter
and
sub
add
int
imul
testl
sbb
sub
insb
loopne
test
sbb
push
andb
stc
sbb
cmpsb
pop
jge
je
movsl
mov
rcrb
mov
ljmp
cmp
jns
cmp
leave
dec
mov
sub
sbb
lahf
xchg
lock
or
out
xor
push
mov
pushf
mov
das
loopne
and
mov
jne
ret
add
in
arpl
sbb
push
xchg
inc
arpl
jp
subb
in
out
inc
hlt
lods
or
xor
fimull
pushf
mov
mov
inc
addl
sub
out
push
and
or
test
ja
into
cmp
insl
scas
sahf
cmp
sbb
adc
mov
outsb
mov
lahf
pop
xchg
popa
push
jp
pop
push
dec
jmp
inc
fwait
stc
push
aad
jo
lret
out
roll
pop
int3
imul
sub
cltd
and
pop
push
rorb
mov
fs
or
jae
xchg
loopne
add
insb
flds
leave
adc
xchg
sbbl
call
dec
sbb
andb
cmp
inc
idivb
mov
stos
mov
or
xchg
aaa
insb
cld
into
sbb
sub
imul
mov
shlb
mov
outsl
add
mov
add
xchg
mov
adc
shl
cmp
push
adc
outsl
xchg
xor
decl
pushf
xchg
stos
mov
or
dec
push
sbb
xchg
mov
dec
in
cli
out
mov
cld
pusha
rolb
shlb
sbb
or
lea
add
arpl
xchg
into
mov
in
dec
cwtl
movsl
xchg
leave
mov
lcall
mov
fndisi(8087
push
shrb
test
addr16
push
sbb
push
inc
in
inc
jbe
mov
loope
adc
jg
ss
jb
xchg
stc
push
fadds
scas
iret
fsubs
in
mov
xor
adc
faddl
jnp
fisubrs
and
or
push
nop
add
sbbb
repz
aad
repz
aaa
adc
imul
rcll
lret
lea
and
fbld
push
sub
pusha
dec
cmp
leave
test
cmc
mov
sub
pop
push
jbe
popf
int3
inc
pop
mov
add
lahf
mov
push
nop
cmp
insb
sub
and
mov
dec
cmp
std
fisubrs
loopne
in
jo
mov
pop
dec
dec
sub
xchg
push
out
inc
mov
jnp
sbb
adc
into
sbb
in
int
movsb
xchg
pop
stc
jnp
xor
mov
xchg
or
adcl
jge
mov
leave
stc
cmp
pop
lea
icebp
add
adc
inc
fucom
orl
aaa
xor
or
movsl
mov
movsb
cmp
lret
out
mov
fldcw
lods
jnp
dec
aaa
cmp
test
jg
jbe
mov
cmp
or
in
cld
inc
sti
mov
dec
push
iret
ror
mov
testl
mov
ret
sti
imul
fwait
xchg
popa
lods
or
mov
sbb
mov
shl
fidivrl
jbe
movsl
movb
add
insl
inc
inc
and
mov
idiv
bnd
cwtl
mov
lret
and
insb
add
out
stos
cmp
sbb
mov
ljmp
outsl
dec
je
xchg
xor
push
shl
mov
daa
push
cmpl
hlt
adc
fidivrl
out
aaa
mov
and
pushf
or
xchg
adc
aaa
pop
dec
add
mov
jnp
pop
ficomps
xlat
xchg
dec
fildll
sahf
sub
aad
sbb
push
dec
xor
addr16
xchg
mov
out
or
cmp
daa
loope
pop
or
and
leave
sub
ret
lods
mov
stos
mov
fmul
inc
test
popa
sbb
mov
push
clc
pop
xchg
pop
mov
xchg
lret
pop
clc
push
jp
cmc
sub
popa
cmpsb
test
cmp
add
and
push
dec
ds
xor
les
mov
lahf
gs
insb
in
inc
or
enter
out
xor
js
cmp
clc
testb
in
mov
rol
push
lods
inc
imul
inc
mov
in
xorb
fdivrl
xor
lods
repz
aas
data16
sbb
out
jno
or
out
xchg
and
insb
xchg
adc
and
push
lret
push
lds
dec
mov
cmp
test
dec
loopne
hlt
xor
cli
ret
imul
js
cwtl
ss
ficompl
xor
push
sbb
sub
lret
inc
or
push
mov
scas
loope
fnstsw
fcomip
sahf
dec
sbb
or
lods
xor
xor
jo
sub
pop
notl
adc
repnz
stc
mov
cs
dec
stos
outsl
loope
outsl
cld
xchg
int3
or
cmpsl
cld
mov
xor
xor
inc
or
cmp
aaa
mov
out
mov
std
rcr
inc
test
out
imul
call
xlat
and
xor
scas
pop
mov
loopne
and
stos
js
addl
pop
fiaddl
insl
insb
aaa
dec
leave
rcrb
test
sbb
out
rorb
or
mov
mov
iret
pop
or
movsl
cmpsl
push
data16
ja
lcall
inc
jns
xchg
or
sbb
pop
lahf
lret
sub
mov
push
enter
dec
ds
shl
fimull
pop
imul
nop
fdiv
xchg
cmp
or
int
xlat
mov
cld
outsl
mov
push
fstps
negb
mov
mov
mov
inc
jle
add
sbb
leave
jmp
cmc
jge
test
cli
and
int
xchg
mov
and
pop
xchg
or
inc
jbe
out
jnp
inc
roll
fmuls
shrl
aas
clc
aas
xchg
xor
push
fisubrs
movb
xor
mov
or
mov
dec
sub
sub
push
push
js
rorl
jp
push
push
rcr
xchg
mov
shll
sahf
pop
rcll
idiv
sub
mov
or
std
movsb
mov
jne
js
jg
push
leave
push
repz
lret
icebp
jecxz
cmpsb
popf
idivb
lret
cmp
cmp
xchg
push
cltd
and
or
inc
shr
jp
pop
and
jecxz
jae
mov
pop
test
or
inc
pop
xchg
mov
sub
bound
lods
push
outsb
inc
cmpsl
lret
lock
jae
dec
rolb
lcall
or
daa
test
jmp
push
mov
jns
pop
imul
jle
mov
push
outsl
xchg
test
xchg
addb
daa
scas
mov
pop
stc
scas
mov
js
roll
pop
insl
pop
mov
imul
jg
nop
loope
dec
mov
nop
outsl
jge
push
xor
jmp
repnz
jecxz
and
push
mov
scas
fsubrl
push
pop
add
xchg
add
int
push
outsb
jbe
mov
mov
inc
xlat
mov
ljmp
ret
sub
adcl
and
lahf
mov
ljmp
sbb
daa
and
nop
cmp
jmp
repz
and
cltd
jmp
shrl
stos
add
pop
fstl
push
lods
sbb
rorl
xchg
cmp
mov
ficoms
and
inc
test
jo
pop
xor
mov
adc
push
adc
cmpsb
push
popa
js
cs
cmpsl
sub
pop
call
daa
cmp
jmp
daa
inc
adc
mul
and
popf
dec
cmp
push
jne
sbb
jmp
hlt
xchg
and
cwtl
inc
pop
xlat
es
mov
xchg
pusha
stc
movsl
xchg
adc
popf
xor
mov
lcall
and
mov
xchg
push
aaa
xor
pop
call
bound
jnp
outsb
pop
pusha
mov
mov
mov
iret
dec
mov
add
test
ret
orl
dec
sahf
cs
jb
cmp
aam
lods
mov
in
loop
arpl
push
lods
ds
mov
test
inc
pop
cmp
mul
xchg
mov
sbb
inc
lods
add
movsb
push
fadds
or
sub
dec
movsl
and
ds
fwait
cli
add
rcr
add
ret
repnz
imul
mov
dec
call
fs
mov
mov
pushf
jl
pop
pop
xor
adc
js
das
pop
lea
scas
push
addr16
xchg
xchg
imul
inc
pushf
mov
mov
and
jae
mov
and
test
fdiv
and
pop
decb
scas
jae
lds
xor
imull
jo
iret
push
iret
mov
xchg
pop
cmp
push
pop
jae
into
jbe
pop
addr16
dec
mov
xor
popa
repz
hlt
repnz
fwait
adc
jl
ret
cmp
adc
mov
and
mov
stc
mov
mov
cmpsl
or
jl
movsl
fwait
cmp
into
xchg
fndisi(8087
adc
mov
int3
mov
subl
lock
or
mov
shlb
gs
hlt
cmpsl
lahf
cmp
adc
arpl
ror
xchg
mov
jo
mov
push
std
adc
call
pop
lods
jmp
imul
imul
jmp
mov
dec
loop
push
mov
lods
fisubrl
mov
movsl
popf
cmp
pop
push
jo
or
jge
inc
fdivl
lds
and
sbb
sbb
stc
xchg
ret
cmp
pop
ret
adc
js
les
adc
adc
std
mov
insl
mov
aas
sti
je
cmpsl
and
xchg
sbb
or
dec
jno
adc
jne
push
std
ffree
iret
add
insl
sub
xor
insl
imul
jmp
in
fldt
hlt
cs
fwait
lret
es
ds
ret
mov
fucomip
adcb
mov
pusha
cmp
jnp
aam
lfs
sub
adc
or
fistps
flds
adc
fwait
cmpsb
loopne
stos
testb
cmp
addl
fdivs
jnp
pop
mov
nop
aas
out
or
inc
dec
xor
sbb
das
inc
cmp
fstp
sbb
dec
jno
sbb
cs
pushf
xchg
and
rcrl
cmp
jnp
dec
ljmp
mov
mov
pop
addb
mov
loope
push
cwtl
in
lea
sbb
dec
repz
xor
pop
sahf
in
roll
in
jl
mov
xchg
inc
je
jg
aam
adc
lods
pusha
stos
loope
cli
aad
loopne
mov
xor
js
mov
pop
push
sbb
aas
mov
mov
mov
mov
ljmp
gs
pop
xorb
sbb
daa
mov
cmp
mov
ret
rcll
jle
sbb
mov
movsb
gs
stos
jge
or
push
and
inc
adc
pop
xchg
rorl
xchg
jge
jae
lret
dec
subb
test
push
push
ffree
mov
jae
in
cltd
ds
add
adcb
rorb
mov
imul
and
lds
ficomps
inc
rcrl
xchg
dec
mov
test
jnp
rcr
lds
push
xchg
test
ret
out
aaa
xchg
test
cwtl
lods
jge
inc
mov
mov
lret
cld
in
and
addl
jp
cmpsb
or
jp
fsubrp
adc
mov
dec
arpl
fsubr
jle
out
les
test
or
inc
mov
sbb
mov
jb
int3
or
arpl
mov
mov
aad
cmc
inc
int
orb
cltd
and
insb
cli
fwait
cmp
sub
pop
sbb
adc
xor
mov
mov
pop
inc
pop
aam
add
out
and
mov
inc
fcmovne
dec
pushl
dec
jge
push
mul
lods
xor
pusha
pop
jle
cs
xlat
mov
adc
xchg
lock
sub
mov
mov
add
mov
lahf
dec
push
js
inc
sbb
popf
hlt
or
fwait
add
adc
mov
ret
lret
mov
scas
jb
scas
mov
iret
jle
mov
leave
aam
shrb
decb
jb
repz
push
scas
jmp
xor
fstps
dec
popa
cmp
pop
lcall
test
in
insl
inc
aam
mov
inc
xchg
pop
jmp
hlt
lret
dec
fstps
mov
scas
dec
xlat
outsb
push
mov
rclb
mov
clc
aad
cmp
xor
mov
hlt
mov
pusha
and
lcall
push
shl
ljmp
lock
repz
inc
pop
mov
in
ja
mov
in
fcmovne
dec
stos
inc
dec
pop
fs
mov
aad
xor
push
or
shrl
xor
ljmp
icebp
xchg
mov
stc
xchg
add
and
and
outsb
enter
ss
std
cmc
ret
and
in
fwait
pop
idivb
and
and
sbb
cmp
cmc
adc
mov
jb
leave
cmp
inc
jno
ja
js
mov
cwtl
negb
push
jne
xor
adc
lcall
xchg
fnstcw
outsb
in
lods
mov
push
outsl
pop
cs
insb
and
push
and
xchg
pop
cs
push
push
inc
jmp
and
jle
adc
out
jmp
fnstsw
into
fisubrl
mov
aas
cmp
pop
xchg
aas
push
mov
repz
dec
loopne
mov
cmp
outsl
mov
mov
or
mov
add
or
sti
clc
sbb
dec
loopne
add
or
sbb
cli
adc
repz
std
rclb
xchg
test
add
or
ret
mov
xchg
repz
mov
and
lds
mov
ror
scas
fldenv
mov
loop
repz
sahf
sbb
mov
popf
pop
js
mov
movsl
mov
leave
and
and
movsl
stos
push
jl
ret
sub
sbb
call
mov
sbb
into
out
mov
push
cld
in
shr
jl
data16
pusha
shl
or
repz
xor
mov
mov
movb
aaa
imul
xor
emms
ret
or
pop
mov
dec
jg
imul
jbe
imul
icebp
je
imul
jg
sub
test
hlt
mov
out
fcoms
into
add
push
and
mov
fscale
aad
mov
insb
out
add
shr
xlat
mov
into
nop
test
push
sub
fdivrl
adc
lret
imul
mov
popf
call
and
lods
stc
jno
add
outsb
fwait
jbe
inc
push
test
jb
loop
popf
cmpsb
cmp
in
imul
loop
push
call
push
add
and
add
xorl
cmp
mov
mov
es
inc
push
shll
mov
xchg
xor
test
or
push
or
inc
mov
iret
mov
or
mov
or
arpl
sti
stos
lahf
dec
lock
adc
inc
orl
mov
pop
sbb
cmpsl
push
in
fidivs
stos
or
das
movsl
rcrl
inc
pop
sbb
into
mov
mov
rcll
dec
lahf
cld
mov
sbb
push
pop
jp
jmp
fisubrs
sub
dec
out
adc
sub
dec
sub
jnp
clc
xchg
mov
rcrl
stos
lods
out
inc
mov
test
leave
mov
jg
inc
lret
mov
jno
stos
ss
xor
xchg
dec
ss
xlat
sub
dec
add
jecxz
jns
xchg
jmp
ficomps
and
mov
rclb
and
push
stos
xor
xchg
pusha
add
sbb
sbb
push
add
pop
fs
push
xchg
mov
jb
pusha
sub
xor
add
popf
lahf
xor
jmp
push
jb
jmp
sahf
dec
adc
cmp
notb
cmp
arpl
push
dec
dec
xor
in
notl
dec
inc
test
mov
fsubrl
inc
loope
inc
fcom
push
and
orb
aas
imul
push
rcr
popl
push
push
mov
inc
cpuid
jg
test
imul
cmpsb
hlt
movsb
stos
outsb
mov
cli
sti
test
mov
jbe
popa
jb
sti
cmp
rcll
inc
dec
mov
or
inc
stos
jb
add
xchg
roll
xchg
push
test
push
imul
lahf
jo
sbb
in
or
and
call
xchg
push
adc
and
loopne
adc
push
in
adc
subb
faddl
sbb
jl
test
cltd
mov
dec
cmc
cmp
jmp
jp
jl
scas
dec
addr16
jmp
pop
xchg
and
mov
pop
cltd
mov
iret
add
loop
cmp
ret
cld
add
aad
jo
xchg
sbb
aas
push
mov
fnclex
arpl
gs
leave
dec
mov
clc
adc
mov
adc
ds
loope
pop
into
sub
inc
mov
adc
sti
cmpsl
fcmovne
push
add
sub
leave
lock
sbb
jbe
std
mov
orl
xor
cmp
test
jo
stos
lods
push
mov
xchg
inc
out
cmc
popa
mov
inc
adc
insb
mov
pop
and
sub
imul
sbb
aam
insl
mov
xor
jo
ret
in
daa
or
jo
sub
dec
loop
repnz
push
out
xor
fimuls
sub
aaa
shl
or
push
pop
inc
imul
pop
insl
mov
sbb
xor
push
dec
mov
jb
cmpb
int
int3
mulps
pop
cmp
push
out
mov
push
in
and
repz
mov
shlb
dec
dec
adc
imul
int3
arpl
fwait
std
jge
jae
mov
incl
xchg
lcall
lds
fcmovnb
iret
into
pusha
mov
xchg
mov
sbb
jns
movsl
push
in
inc
movsl
loopne
sub
pusha
push
pop
clc
push
mov
mov
push
mov
repz
and
sahf
pop
repz
das
mov
sarb
cli
cwtl
dec
sbb
fsubrl
dec
xorl
es
adc
push
lds
push
dec
mov
out
add
in
popf
xchg
push
jp
out
pop
lods
mov
aad
sbb
aad
inc
push
push
loop
fmuls
adc
nop
sbb
cmpsl
ror
repz
pop
ss
cmp
jecxz
into
sub
inc
inc
mov
xchg
and
adc
sbb
mov
adc
mov
cmpl
sbb
adcb
std
cmp
cmp
ds
xchg
push
jo
stc
sub
sub
rclb
mov
insb
aad
dec
jb
or
jmp
sarl
mov
ret
loop
loopne
or
jmp
sub
jae
out
jb
add
sbb
xchg
stos
add
push
lcall
push
dec
lods
daa
add
pushf
dec
xlat
loopne
xor
hlt
or
push
jnp
mov
stos
push
and
sbb
xor
dec
add
popa
sbb
jns
into
xchg
outsb
xor
imul
adc
rolb
dec
js
jle
mov
divb
sub
adc
sarb
movsb
dec
dec
inc
inc
daa
fwait
push
loope
dec
mov
movsb
ja
xor
fmull
sub
out
sbb
pusha
enter
mov
sub
ud1
int3
nop
scas
gs
ret
loopne
int
push
pop
mov
xchg
mov
arpl
mov
stos
or
stos
int3
js
pop
roll
pop
jmp
outsb
out
pxor
gs
jmp
pusha
scas
sub
jge
insb
fsubs
jns
clc
pop
mov
and
mov
addr16
ret
lods
push
jne
inc
fidivl
imul
dec
mov
aaa
mov
push
push
add
or
insb
std
push
es
inc
mov
fs
lret
and
jne
aas
add
ss
in
gs
leave
add
dec
cmp
mov
imul
xchg
lahf
fadds
jle
daa
call
jns
mov
int
jle
mov
imul
testl
push
dec
xor
mov
sti
push
in
jmp
pop
adc
iret
xchg
sbb
scas
mov
iret
pushf
add
sub
push
outsb
int
xor
fistl
cltd
ret
push
fisttpl
pop
jnp
popf
cmp
xor
inc
xchg
push
fstl
les
jb
sbb
rcrl
out
sbb
arpl
loopne
dec
lcall
test
icebp
push
addr16
daa
fwait
push
lcall
dec
pusha
sbb
lcall
mov
jge
mov
loope
loop
fwait
or
nop
mov
cmpsl
nop
test
ret
xchg
adc
add
mov
mov
xor
sub
les
out
pop
adc
mov
jmp
push
xchg
enter
adc
imul
call
and
test
and
jecxz
out
std
push
sub
cmp
jmp
sbb
or
inc
pushf
shll
aaa
loope
mov
jecxz
sbb
je
lods
ja
push
fwait
push
cmp
push
and
andb
cmp
not
push
rorb
and
loop
daa
jb
ret
movsl
mov
jge
std
cmc
fildl
sub
pop
outsb
lret
inc
and
lods
popf
push
adcl
scas
jge
outsb
test
xchg
stos
and
cmp
jp
xor
cwtl
out
loop
mov
iret
mov
imul
pop
xor
mov
leave
subl
sub
cltd
dec
mov
sbb
sbb
push
jno
shrb
dec
leave
insl
push
and
mov
sbb
ret
sahf
mov
ss
mov
mov
jbe
adc
orb
cld
inc
je
xchg
push
leave
or
scas
cmpsl
movsl
mov
stos
or
dec
mov
sub
adc
sahf
incl
and
mov
mov
sbb
addr16
dec
or
xchg
pusha
fcmove
pop
jge
lods
adc
aam
xchg
arpl
sub
fstpl
pushf
cld
push
dec
sbb
pop
jo
and
repz
dec
mov
in
jo
and
xor
push
in
mov
aaa
adcl
inc
imul
mov
movsl
lcall
sbb
clc
mov
xor
scas
pop
xchg
mov
into
fcoms
adc
insb
out
es
mov
fwait
clc
inc
dec
cli
loope
inc
icebp
loopne
fcmovu
inc
sbb
inc
cmp
jo
mov
xchg
loopne
adc
popa
repz
js
sbb
in
or
and
sbb
cmp
fnstsw
and
clc
stc
shlb
jo
shlb
push
or
or
rclb
pushf
or
inc
mov
je
xchg
or
js
cmp
jns
adc
adc
mov
in
dec
cwtl
jge
enter
es
js
xchg
cs
xrelease
fstpl
adc
mov
fistps
xchg
sub
dec
sti
faddl
leave
pop
cmp
add
les
mov
arpl
psadbw
rcr
or
mov
push
gs
mov
out
fwait
bound
stos
fcmovbe
xor
mov
icebp
fwait
icebp
sbb
xchg
jne
fnstsw
xchg
push
cmp
inc
test
notl
into
pusha
adc
arpl
out
inc
orl
adc
ljmp
aam
push
adc
sbb
cs
xlat
sub
or
cmpsl
icebp
js
sub
mov
movsl
fdivrs
sbb
faddl
sub
cmp
aaa
daa
sti
popa
lret
sub
cli
add
sti
xor
popf
shrl
call
push
jg
stos
cltd
pop
loopne
inc
into
jecxz
pop
jg
mov
loope
xor
insl
jg
push
jno
pop
lock
mov
pop
cmp
scas
cmp
jno
std
push
daa
mov
das
shrl
adc
mov
sub
daa
sub
and
cld
sbb
push
xor
add
sbb
mov
testb
cmpsb
xor
fs
push
cmp
sbb
adcb
stos
push
pop
loope
js,pn
add
xchg
xor
es
push
push
and
aad
push
or
sub
idivl
enter
push
sub
aas
or
push
frstor
hlt
ret
xchg
je
cmp
bound
adcb
sub
clc
lea
jnp
adc
repz
mov
mov
dec
pop
into
js
std
lret
jmp
not
in
scas
addl
mov
frstor
inc
dec
lock
push
inc
inc
or
jmp
sarb
cmpsb
and
sub
jl
shrl
sbb
push
mov
sub
cli
scas
movsb
pop
aad
jle
scas
les
or
fiaddl
sbb
outsl
les
les
cs
jae
add
cld
lcall
sub
popa
xlat
jmp
or
addb
aaa
test
cmpsb
mov
add
scas
add
sub
ljmp
or
adc
adc
push
in
cmp
add
xor
inc
jb
cmp
call
decb
loope
sub
std
push
dec
pop
scas
lea
mov
fsubl
inc
mov
xor
push
stos
dec
push
add
cmp
xchg
or
in
pop
int3
mov
mov
popf
pusha
hlt
js
cmpb
xchg
rcrb
sarl
lea
lret
sub
pop
loop
cmpsb
call
ret
nop
sub
push
in
movsl
sbb
jnp
in
cwtl
addb
sbb
jge
out
test
pop
lods
cmp
shr
jo
jl
stos
aam
adc
pop
imul
ljmp
loopne
out
movsb
fs
je
adc
mov
adc
push
and
aam
pop
mov
dec
adc
int
adc
mov
cwtl
stos
mov
mov
adc
sbbb
in
mov
push
pop
in
rorl
stc
cmp
and
scas
test
loop
sahf
test
pop
out
addr16
jno
loopne
push
push
sti
mov
data16
daa
cmpsl
mov
fistl
mov
sub
not
jg
mov
xor
dec
push
dec
sbb
and
aam
mov
and
imul
sarb
dec
cmc
in
cmp
fs
out
aad
xchg
lods
or
decb
mov
dec
xchg
aaa
jb
add
or
rorb
jae
jnp
in
inc
cs
cmpl
jne
dec
pop
test
pop
mov
into
scas
jl
mov
push
fsubrs
lds
xor
xchg
imul
fs
mov
and
and
test
mov
ds
mov
mov
test
mov
mov
aaa
push
pop
pop
decl
sbb
adc
mov
jecxz
jnp
inc
xchg
pop
daa
push
jg
mov
out
fistl
shrl
outsb
ret
scas
and
fsubl
push
sbb
mov
mov
idivl
outsb
cld
fstpl
aaa
cvtdq2ps
mov
dec
add
dec
mov
sbb
and
loope
cmp
iret
push
call
icebp
xor
sbb
mov
lock
data16
cmp
outsl
jb
xchg
enter
adc
inc
shlb
mov
sub
into
cmpsl
das
fstl
push
dec
mov
inc
pop
xchg
push
scas
movsl
stc
cmpb
pop
inc
test
xchg
or
test
sub
aad
jmp
or
cmp
pop
add
aad
shlb
in
push
test
sub
addl
push
insl
dec
shl
pop
sbb
mov
stos
in
or
in
jge
cltd
cmc
mov
adc
pushf
test
cltd
xlat
inc
sub
jl
ss
popa
scas
aaa
add
or
mov
sbb
mov
scas
into
jnp
ss
iret
or
jbe
push
aad
xchg
ret
pop
and
adc
lock
xor
in
into
mov
out
mov
imul
fs
icebp
loop
in
xchg
js
push
mov
addb
fdivs
xchg
nop
pop
pusha
push
imull
test
lahf
jp
jmp
xor
lahf
fidivs
scas
sub
xchg
jl
stos
test
into
insl
cltd
mov
jne
stos
xchg
sbb
cmp
pop
xor
mov
xor
into
adc
fcomps
and
mov
xchg
xchg
pop
push
inc
call
pop
mov
fildll
movsl
jecxz
sub
xor
pushf
mov
and
jle
in
push
movl
or
add
inc
fs
ljmp
out
jnp
jae
mov
cmp
cli
jbe
mov
xor
jo
pop
and
icebp
dec
adc
push
lds
jge
xor
out
insl
in
sub
jne
xchg
jne
pop
ljmp
add
psrlq
or
cmp
mov
fisubrl
push
mov
fidivrs
jne
push
xor
push
mov
jg
cmp
cli
out
dec
or
negl
sub
inc
aaa
sub
imul
ja,pn
cmpsl
cltd
rolb
repz
sahf
cmp
addb
push
and
negb
cli
and
or
aam
add
insl
fisubl
jecxz
cmp
imull
fcmovbe
sti
or
and
push
test
lret
clc
xor
pop
cmp
lahf
jne
enter
lock
aaa
mov
popf
push
add
test
sarl
movsb
hlt
movsl
push
dec
ds
mov
bound
pop
mov
xchg
mov
cmp
dec
aad
stc
and
imul
pusha
dec
popf
les
pop
std
shrl
lods
xchg
hlt
stos
or
xor
cli
addb
mov
sub
out
cltd
shlb
sub
jae
cmc
add
lds
inc
xor
arpl
daa
loop
test
jmp
dec
jb
jo
ret
or
or
mov
pop
rcrb
push
rol
jp
test
adc
inc
pop
push
jno
dec
mov
pushl
dec
imul
mov
sub
mov
mov
mov
xchg
push
cmp
jmp
mov
sbb
test
ss
and
cmc
icebp
mov
ljmp
mov
in
popa
or
ljmp
lea
pop
or
loope
into
lahf
cmp
mov
push
jecxz
sbb
inc
xor
mov
adc
stos
in
cs
xchg
into
or
dec
je
ljmp
cmc
xor
sub
ret
mov
inc
xchg
pop
dec
mov
mov
negb
outsl
sarb
adcb
dec
mov
test
fdivr
ds
cmp
sbb
scas
sub
popf
inc
mov
add
inc
dec
in
sbb
inc
push
fldcw
xchg
push
push
mov
fidivs
in
lods
jg
jnp
pminsw
roll
mov
into
shlb
leave
fwait
mov
adc
outsl
pop
pop
shr
fstps
out
dec
lret
loop
xor
cltd
rcl
pop
cmp
cli
pop
mov
push
mov
or
push
or
fwait
pop
push
push
test
dec
loope
nop
jp
das
pop
sub
jmp
das
movsb
push
cmpsl
mov
bound
mov
or
jecxz
std
mov
je
jns
mov
adc
pop
rorb
or
mov
xor
mov
int3
inc
stos
loopne
jno
cmpb
fwait
sub
inc
rcll
pop
into
xor
fneni(8087
leave
and
mov
xchg
mov
sub
xchg
xchg
repz
push
add
sub
pop
lds
fcmovne
xchg
jg
mov
or
sub
cli
and
imul
sub
xchg
cmp
mov
jns
mov
sahf
ss
in
insb
lock
or
js
mov
jns
nop
xor
loope
rol
xchg
test
cltd
test
mov
rorb
lods
movsl
loope
xchg
pushf
adc
jg
test
inc
shr
cltd
iret
outsl
dec
jne
dec
dec
enter
inc
dec
xchg
enter
mov
rorb
or
and
mov
in
jne
sbb
inc
push
into
js
mov
jecxz
mov
and
movsb
mov
stc
adc
mov
mov
inc
pop
xchg
cmp
int
jmp
addr16
mov
nop
or
mov
aad
sti
pop
and
push
or
lret
mov
sub
add
push
call
repnz
mov
je
jae
lods
daa
push
shrb
popl
ret
and
icebp
lds
push
ret
jp
cmpsb
sti
push
mov
push
lcall
or
inc
xchg
js
push
or
js
and
sub
cli
ljmp
repz
and
adc
jge
add
stc
lret
adc
test
pushf
xor
scas
dec
jl
mov
inc
xchg
jge
mov
and
test
aas
ss
push
dec
push
in
in
jl
sub
inc
imulb
cmpsb
sahf
lret
cmp
nop
scas
ds
lret
lret
push
jo
xchg
push
pop
push
and
add
jns
or
mov
shl
inc
jbe
sub
cmp
les
xor
xchg
sbb
dec
mov
dec
ljmp
inc
mov
test
gs
daa
xchg
inc
jmp
movsb
sub
insb
dec
stc
mov
mov
push
insl
mov
cmp
rcrl
pop
int
in
test
and
push
les
ret
decb
ret
out
lock
xorb
aaa
cld
and
aas
outsb
xchg
lods
sub
mov
jnp
inc
insl
jb
arpl
flds
addb
jmp
int3
mov
in
push
xor
inc
mov
jmp
xchg
inc
pusha
cld
dec
xchg
adc
loop
lret
or
addr16
xor
pop
dec
xchg
xchg
fwait
rorb
cli
cmp
testl
add
fs
arpl
push
out
push
push
cmp
pop
cmp
cmp
mov
cli
sahf
mov
add
movsl
arpl
inc
cmp
xchg
into
pop
push
in
push
adc
fidivs
mov
hlt
push
xchg
cs
movsl
popf
mov
mov
push
test
sbb
jp
jb
jl
jge
mulb
pop
mov
shrb
jnp
add
mov
jmp
cmp
gs
je
leave
add
mov
dec
push
cmp
push
popl
adc
add
add
cmpsb
pop
add
es
mov
cltd
ret
mov
jg
push
inc
cmpl
push
cmc
push
cltd
cwtl
mov
add
ret
lret
stc
scas
mov
pop
out
cmp
add
ret
gs
mov
lcall
dec
jp
mov
movd
stos
pop
sbb
out
push
insb
lods
hlt
in
stos
dec
xchg
mov
int3
or
or
push
mov
es
dec
in
cli
lret
xchg
out
or
push
cpuid
jbe
fldenv
jp
outsl
add
arpl
pop
xor
out
loope
in
popa
out
pop
cs
mul
push
out
mov
movsl
or
imul
mov
adc
sbb
ror
data16
adc
movsl
cld
mov
cmp
and
add
andl
mov
pop
xchg
mov
inc
jbe
inc
or
mov
rclb
adc
ret
or
push
fidivrl
and
or
lods
pop
insl
adc
sbb
imul
lods
xchg
xorb
and
or
imul
xor
sub
dec
and
add
push
ret
mov
pusha
les
mov
add
jge
loop
jecxz
in
mov
pop
xor
jp
std
cltd
js
mov
or
pop
mov
sarl
xor
adc
jecxz
jmp
inc
sahf
lods
cwtl
lret
push
popa
mov
jns
ret
test
cmc
out
movsb
in
shll
mov
in
add
pop
cld
add
sub
xor
das
test
addr16
inc
scas
push
lret
push
cmc
push
aad
mov
mov
dec
ja
xchg
lock
mov
jnp
mov
mov
cmp
hlt
pop
jge
adc
push
lods
insl
pop
sti
insl
das
ficomps
xor
add
addr16
fcomip
imul
ljmp
inc
jp
mov
mov
popl
push
sarb
add
insl
fld
xchg
sbb
adc
arpl
xchg
loop
faddl
les
mov
jnp
bound
cs
std
or
ficoml
insb
push
xchg
push
andl
fcmovb
movsb
outsb
jle
iret
mov
inc
data16
push
outsb
test
xor
mov
jg
pop
pop
push
dec
jne
or
push
mov
xchg
add
rcrb
imul
iret
jbe
jnp
hlt
add
push
xor
movsl
pop
xchg
lds
cmp
bound
cmp
repnz
gs
xor
in
and
xor
aam
jmp
xchg
inc
imul
push
les
inc
sub
push
add
mov
sti
out
ret
aam
add
mov
pusha
pop
dec
add
pop
les
lock
mov
jne
aaa
jb
dec
jae
fs
xchg
jae
ss
scas
popl
pop
xlat
add
loop
jmp
cmp
push
fcomp
and
ss
imul
mov
and
mov
frstor
mov
mov
fcmovu
inc
mov
mov
adc
cli
xchg
sub
or
cmc
or
imul
lahf
jne
test
jne
push
and
lds
gs
rorb
pop
movsb
push
pop
jnp
testl
add
and
repnz
xchg
push
jbe
out
adc
add
mov
fucom
mov
mov
lods
push
maxps
add
leave
enter
xor
or
pop
add
pop
jecxz
mov
cmp
mov
mov
cld
xor
dec
xchg
or
or
cmp
inc
fiadds
lea
adc
push
mov
pop
inc
idivl
insl
inc
dec
iret
add
jle
xor
pop
jno
xor
mov
or
adc
mov
ss
sarl
push
out
adc
call
jns
enter
ds
pushf
push
xchg
and
mov
xor
xchg
mov
ss
lds
pop
bound
out
adc
pop
and
cmp
rclb
lea
insb
dec
mov
int3
repz
jno
ds
pop
pusha
loopne,pn
sti
inc
icebp
cmp
sub
aas
fwait
leave
dec
pop
inc
mov
xlat
xor
outsb
inc
pop
jp
and
fs
push
adc
jne
and
pop
sbb
and
je
rcrb
mov
ret
out
std
fcoml
xchg
mov
and
fwait
outsl
push
out
fstl
or
xor
pop
xor
xchg
adc
dec
mov
je
push
xor
gs
fisttpll
loopne
jo
shrb
inc
cmpsl
cmp
inc
test
push
loop
mov
add
loop
mov
popa
mov
sub
inc
cltd
cmp
out
or
cs
dec
fildll
push
pop
pushf
mov
cmp
ss
mov
aas
rcrb
rclb
arpl
ret
out
inc
mov
sbb
ret
aaa
sbb
sahf
sub
ljmp
fs
inc
mov
sbb
cltd
shll
add
and
mov
add
fcomi
out
xchg
imul
inc
cmpsb
das
test
pusha
subl
into
xchg
dec
or
mov
push
lahf
pop
add
cwtl
pop
sub
sbb
xlat
loopne
movsl
clc
cmpsb
jbe
das
pop
outsl
fs
in
out
push
sbbl
cld
aam
cli
pop
jg
mov
hlt
pushf
fnsave
dec
arpl
jmp
jl
xchg
out
movsb
repz
les
push
loopne
or
sub
roll
push
jbe
push
dec
iret
pop
test
imul
jg
jecxz
dec
lods
xor
xchg
xchg
arpl
xchg
sbb
dec
inc
push
jle
cmp
movsl
pop
pop
imul
adc
mov
xor
loop
rcrb
xchg
repz
push
imul
jae
aas
test
xchg
jg
mov
jnp
mov
add
fdivp
loop
gs
cli
xchg
les
fwait
jns
orb
adcl
lahf
xlat
mov
jecxz
and
pop
xchg
xor
xchg
sbb
addr16
in
xor
mov
cmpl
adc
sbb
pop
sbb
lods
inc
loop
xchg
xlat
cmp
jae
and
sbb
push
mov
cltd
cmp
xchg
sahf
jl
mov
ds
clc
rolb
lcall
xor
jmp
xchg
cmp
ret
scas
sahf
cwtl
popa
test
jecxz
mov
icebp
mov
vpmadcsswd
cmp
ficoml
jmp
sbb
and
testb
pop
jg
lods
ss
xchg
dec
gs
in
add
xchg
pop
mov
xor
outsb
sbb
cmpsl
arpl
adc
and
add
add
pusha
test
and
orl
pop
cmp
lahf
outsb
inc
fnstenv
mov
push
mov
mov
mov
jo
in
and
add
and
stc
mov
stos
mov
xchg
stos
xchg
rolb
icebp
mov
add
mov
leave
loope
cltd
sahf
ja
pop
pushf
and
mov
fldenv
test
pop
mov
xchg
leave
loopne
imul
sub
leave
and
mov
pop
xchg
inc
aaa
lods
dec
jecxz
cmp
push
or
ret
stos
popa
cltd
call
add
push
jo
mov
or
test
and
pusha
xlat
sbb
push
enter
push
jle
rolb
mov
loop
aaa
movsb
inc
repnz
adc
xchg
outsl
ret
jbe
xchg
addr16
sbb
xchg
imul
jbe
xchg
hlt
cmp
pop
mov
inc
mov
inc
dec
pop
shlb
push
mov
dec
jp
push
sub
mov
dec
push
jnp
xor
pop
mov
mov
add
cltd
cmpl
adcl
dec
nop
push
push
or
xor
push
pushf
xor
pop
ficompl
sti
xor
mov
fiadds
imul
xchg
adc
data16
add
imul
mov
mov
fdivrs
or
xchg
addr16
pop
and
orl
xor
cld
jge
xchg
pop
addr16
test
popf
cmp
xor
inc
sbb
mov
lock
xor
outsb
sub
push
jo
jns
aam
push
adc
xchg
and
pop
push
or
cmp
aaa
push
aas
shll
mov
cmp
ja
and
jae
bound
dec
push
enter
pop
add
repnz
jg
ret
xlat
out
call
lahf
stc
push
daa
insl
outsb
xchg
imul
outsb
xor
pop
mov
inc
cltd
and
or
push
fcomp
scas
lods
addl
add
fildll
addb
dec
cmp
stos
cmp
mov
xchg
pop
pop
cltd
pop
mov
pop
fwait
jecxz
dec
pop
daa
shr
sbb
aaa
fdivrl
sub
cmp
dec
pop
les
sbb
aas
vaddsubpd
pop
inc
xor
repnz
lods
jne
popa
jbe
aaa
sub
aas
pop
pop
movsl
push
inc
loop
cmp
xchg
aam
push
pop
mov
popf
in
fstps
mov
xor
add
pop
dec
xchg
jg
outsl
fcoms
popa
dec
push
repnz
clc
incb
jb
aad
pop
push
push
or
inc
dec
xchg
rcrb
imul
cs
shll
aad
out
xchg
ss
mov
fldl
clc
std
cmpsb
xchg
inc
push
cmpsl
inc
data16
and
cmp
fbld
outsl
cmp
xor
xor
sbb
int
mov
add
adc
inc
xor
mov
sub
inc
bnd
test
inc
xchg
cmp
leave
adc
fs
jmp
jo
fisttpl
cli
cmp
pop
mov
xchg
mov
insl
cmp
fldt
cs
push
add
cmpsl
jo
mov
outsl
ret
or
sub
mov
cmp
jge
movsb
xor
movsl
cmp
mov
gs
mov
sub
sub
sbb
nop
jae
nop
xchg
das
into
das
push
push
xchg
or
sub
xchg
sti
shr
sub
xor
pop
pop
lods
adc
lods
jae
pop
ss
clc
cld
imulb
data16
repz
clc
rclb
jmp
sub
inc
mov
lcall
and
xor
popa
inc
xor
nop
clc
insl
sub
mov
inc
dec
test
pop
dec
aad
mov
xchg
stos
aam
mov
into
mov
popf
imul
jbe
call
and
xchg
ds
das
mov
aas
and
pushf
clc
mov
jle
fadd
jb
mov
mov
lea
inc
orl
pop
aad
or
ficoms
sahf
push
mov
jg
cltd
in
push
mov
jne
inc
mov
xlat
sti
inc
pop
push
add
push
popf
pop
mov
sub
xor
mov
daa
dec
arpl
inc
gs
outsl
gs
fdiv
fs
pop
in
push
add
ds
push
imul
arpl
push
xor
scas
xchg
leave
in
pop
das
push
repnz
stc
addl
stc
fstpl
and
out
and
or
mov
rorl
in
mov
dec
push
negl
or
or
out
jo
adc
mov
fisttps
insb
add
or
std
pop
mov
xchg
cltd
mov
pop
adc
lahf
adc
rolb
or
gs
mov
lret
shlb
add
js
mov
cltd
lods
stos
inc
test
push
rcll
clc
mov
mov
rcrb
cmc
pop
add
cmp
popf
ret
pop
iret
mov
sahf
out
push
lds
push
addr16
xchg
repnz
ljmp
jecxz
xor
mov
vunpckhps
imull
mov
jmp
add
gs
adc
inc
movsb
mov
inc
hlt
std
sbb
hlt
fsubrl
mov
push
cmpsl
pop
repz
cli
adc
cld
jmp
fs
adc
dec
jecxz
incl
mov
mov
xchg
mov
dec
ficomps
addb
inc
push
les
push
js
sub
repz
cmpl
mov
xor
xchg
add
fwait
push
add
push
fxtract
loope
dec
jno
divb
dec
stos
xor
mov
dec
push
aam
test
cmpsl
loopne
fwait
out
jmp
adcb
cld
mov
int
cmp
cmp
and
scas
mov
mov
sbb
push
cmpsb
sub
mov
stos
adc
sets
xchg
adc
add
ss
data16
mov
push
adc
jg
jo
andb
mov
push
gs
mov
aaa
enter
outsl
cli
jbe,pn
xor
mov
cmpsb
cwtl
pop
leave
xchg
jecxz
loop
add
push
into
sub
push
scas
xor
and
lahf
scas
pushf
adc
imul
sub
inc
jnp
pop
pop
fldcw
sub
insl
stos
stc
pop
call
ret
adc
push
mov
dec
pop
arpl
or
sub
add
mov
add
push
les
push
inc
ficomps
scas
lahf
fwait
and
push
scas
cwtl
mov
xor
push
popf
in
push
lods
into
dec
pop
fcompl
sub
ffreep
call
pusha
iret
das
repz
push
test
leave
xchg
dec
dec
popl
xchg
mov
xchg
hlt
rcll
pop
adc
arpl
jbe
fildl
inc
mov
add
aas
and
xchg
sbb
push
popa
out
fbstp
gs
movsl
ljmp
aaa
sbb
fadds
sahf
or
pcmpgtw
dec
xlat
sbb
sbb
jecxz
push
out
imul
add
nop
scas
mov
push
sub
fsts
mov
hlt
adc
pop
dec
outsb
or
leave
xchg
and
and
pop
push
xchg
adc
push
fcmovne
or
dec
mov
lea
xchg
jnp
mov
dec
rclb
inc
pop
inc
jb
jmp
scas
setge
add
push
cld
icebp
mov
loop
cmp
fsubl
adc
jb
in
jp
inc
out
jae
mov
fcoms
jmp
mov
jns
aad
sub
outsl
inc
test
adcb
shrl
xchg
stc
shll
fs
repz
mov
and
inc
inc
inc
pushf
mov
or
xor
and
mov
mov
mov
jne
or
add
or
mov
js
or
adc
enter
jae
je
pusha
int
fbstp
xor
fs
ds
xchg
or
lret
mov
and
adc
dec
xchg
or
nop
shl
arpl
push
fmull
repnz
mov
ret
jle
ret
push
nop
lahf
cmp
lret
sub
fidivl
mov
jae
testl
mov
test
and
enter
dec
dec
adc
adc
sahf
iret
sahf
addl
fsub
andb
mov
fsubrs
mov
cmpl
mov
and
and
fs
xchg
das
lahf
mov
stos
dec
fs
inc
sbb
xchg
sub
xchg
push
in
ss
sub
xorb
mov
pcmpeqd
add
sti
fbstp
icebp
fiaddl
dec
mov
push
outsb
inc
adc
ret
stc
push
mov
cwtl
push
fwait
mov
xchg
loopne
cmp
dec
arpl
jnp
push
das
nop
push
cmpsl
rcll
es
mov
fisubrs
outsb
and
sti
in
mov
jmp
sti
sub
test
jg
clc
inc
call
sub
xchg
outsl
lods
adc
sbb
xor
jnp
stos
arpl
mov
sub
adc
xchg
enter
jg
loope
les
cmc
pop
int3
adcl
mov
sub
or
adc
sti
leave
inc
lods
sbb
xchg
xor
shl
fwait
pop
or
out
inc
sbb
cld
or
fldt
xchg
inc
xchg
outsl
and
mov
xlat
out
mov
or
fmull
sahf
out
mov
push
mov
leave
push
mov
aas
in
mov
in
mov
dec
push
lret
pusha
cld
test
push
out
loopne
mov
orb
repnz
scas
icebp
or
xchg
out
and
loopne
xchg
inc
jne
add
dec
jne
bound
jl
out
std
mov
sub
int3
arpl
test
push
enter
fsts
les
andl
sbb
adc
sbb
insb
mov
and
rcll
sub
jnp
into
and
addr16
cmp
mov
push
ds
dec
push
imul
sub
mov
out
scas
jp
push
in
repz
data16
jbe
or
pop
push
in
and
mov
pop
mov
or
andl
mov
jns
pop
and
and
jg
and
mov
mov
inc
stos
mov
dec
fldt
fisubl
sbb
pop
inc
xor
or
inc
mov
rdpmc
mov
sub
jae
xchg
fdivl
xorl
push
or
mov
repz
sbb
mov
cmp
adc
sbb
pop
inc
xor
stc
or
mov
mov
inc
and
insl
xlat
lret
adc
mov
pop
test
push
mov
fstps
inc
mov
out
push
fisubl
aas
lods
test
adc
add
cmpsb
mov
cwtl
icebp
bound
sbb
or
pop
mov
dec
cmp
push
and
adc
iret
aam
push
adc
mov
in
sahf
and
xchg
and
gs
fidivl
cwtl
cmp
adc
and
mov
pushf
gs
scas
shll
or
in
sub
aam
std
xchg
fdivrp
mov
jno
ret
shl
xor
enter
mulb
cld
mov
inc
stc
ja
aas
cld
rcll
xor
lret
mov
jp
out
mov
sti
in
dec
je
jbe
test
lods
adc
notb
int
lret
lods
or
mov
add
into
adc
insl
jp
mov
pop
mov
xor
pop
xrelease
xchg
lahf
pop
and
push
rcrb
test
inc
push
sbb
pop
jge
mov
pop
jl
dec
inc
ja
repz
aaa
mov
sub
pop
daa
xchg
call
das
pop
push
adc
call
mov
inc
push
push
mov
subl
fstpl
stc
inc
ss
mov
mov
pop
pop
jmp
fcom
subl
int
movsl
pop
adc
imul
lcall
movsb
jmp
push
insl
sti
dec
js
std
sbb
subl
adc
push
adc
test
sbb
jbe
ja
dec
mov
xlat
scas
xchg
pop
cmp
outsl
sbb
jecxz
out
push
je
xor
mov
xor
jle
cmpsb
and
jo
adc
sub
push
repnz
xchg
add
subl
lret
jmp
popa
cmp
subl
mov
loope
lcall
push
jae
daa
or
test
inc
lds
mov
add
adc
mov
jl
jbe
jl
dec
clc
out
push
loope
mov
ja
xchg
jl
ret
popf
and
push
fistps
jno
jb
sub
movsl
mov
lea
ja
in
fcoms
jns
aaa
mov
in
test
imulb
les
into
mov
push
sub
jno
sub
mov
aas
test
push
jle
movsl
xchg
data16
ja
mov
cmp
fmulp
inc
stos
cmp
push
xor
or
sarl
cld
dec
dec
outsb
push
jp
jecxz
aaa
xchg
mov
lret
jmp
dec
outsl
std
sub
pop
out
push
test
xor
xchg
outsb
jge
fs
cmpsl
stc
and
fildl
rorl
or
fldl
sub
push
xor
mov
aam
jle
pop
ret
xchg
lahf
addr16
pop
sub
jge
jne
shlb
scas
pop
loope
js
movsl
mov
inc
ljmp
xor
lahf
stc
push
js
push
ss
test
xor
movsl
mov
mov
sub
in
or
dec
cld
inc
xor
sti
in
xchg
popa
in
add
mov
push
push
mov
ficoms
sbb
xchg
mov
inc
loop
cmc
inc
daa
pop
sub
mov
mov
add
or
test
popf
das
fldcw
sbb
push
inc
test
push
xlat
mov
sahf
hlt
pop
push
fsubrs
xchg
in
jae
outsb
cwtl
lret
mov
sarb
lock
lahf
mov
pop
cmp
sbb
xor
fisttps
out
sbb
test
lret
sbb
xchg
fsin
sbb
mov
add
mov
or
and
jo
add
push
int3
pop
jae
and
push
xor
out
dec
aas
shrb
in
push
notl
and
inc
mov
aad
inc
sub
pusha
fists
lret
xor
out
mov
insl
jnp
pop
pop
sub
push
subl
gs
jae
fiaddl
adcb
cltd
dec
cltd
imul
inc
loope
mov
push
hlt
lods
pop
rcrb
icebp
jg
test
mov
sub
rolb
popf
cmp
test
xchg
mov
cmc
xor
mov
and
mov
xor
jg
and
inc
ja
int3
inc
sarl
stc
dec
jno
in
inc
cwtl
addr16
fdiv
adc
stc
inc
cmp
mov
push
adc
mov
inc
ja
sarl
lret
lret
mov
pop
mov
and
cmpsb
mov
in
jp
jmp
mov
and
inc
popw
dec
xchg
mov
outsl
push
inc
loope
push
std
pop
pop
or
in
xchg
in
xor
dec
int3
rorb
xchg
cmc
sub
sub
cmp
sub
push
sub
sti
ljmp
shr
push
and
jb
in
add
fiadds
cmp
xor
into
fnsave
xor
aaa
sahf
loope
xchg
xchg
xchg
mov
jne
adc
les
sarb
test
fwait
xor
or
flds
cmc
pop
popa
stc
sub
push
sbb
xlat
push
in
and
outsl
and
into
shlb
mov
sbb
clc
imul
fsub
xor
cld
out
or
dec
ret
sbb
pop
shll
fcmovnu
push
outsb
fwait
xor
test
addr16
mov
mov
pop
addr16
sub
pop
jp
cmp
cmp
hlt
xchg
jbe
fsubs
imul
ja,pn
aaa
mov
js
aad
add
cmpsb
pop
sbb
in
cwtl
pop
jno
lock
stc
adc
mov
js
mov
jbe
rcrl
xor
add
adc
inc
int
push
sub
shrl
or
mov
orl
imul
hlt
out
mov
or
mov
cmp
out
shl
pushf
jmp
lret
and
aad
mov
in
xor
in
and
mov
push
cli
xor
ss
mov
lret
lea
mov
add
fstpl
cmp
and
out
xchg
clc
jmp
push
pop
mov
das
add
daa
add
jle
and
cmp
popf
or
adc
cld
push
mov
mov
add
lods
bound
mov
dec
negl
inc
lret
adc
cmpsb
jmp
push
das
cmp
or
sbb
lcall
mov
out
pop
dec
loop,pn
es
sbb
dec
inc
lods
jns
pop
dec
jne
int
jnp
popa
test
push
and
aad
nop
or
ret
jnp
mov
jmp
mov
mov
sbb
sub
jecxz
pop
push
pop
mov
dec
mov
imul
shrd
shll
frstor
stc
adc
xchg
sbb
cmc
ret
filds
lahf
mov
cli
xchg
dec
into
xor
dec
push
fildl
das
outsb
shrl
repz
xor
aad
enter
jnp
sbb
pop
and
mov
or
push
es
xor
ljmp
cmp
repnz
lds
pop
push
clc
nop
cmp
pop
push
scas
jmp
xor
sbb
in
pop
pop
lret
and
push
lds
test
or
dec
orb
sbb
stos
scas
and
cmpsl
nop
ret
xchg
sar
cmp
sbbb
pop
push
inc
xor
aaa
inc
cltd
pop
stos
sbb
cltd
scas
pop
shr
in
mov
jmp
pop
orb
lcall
mov
jge
xor
stc
and
and
mov
sbb
int
call
push
cs
hlt
xchg
ja
push
cltd
push
loopne
mov
enter
cli
dec
push
cmpsb
jb
outsl
dec
jl
lods
mov
mov
dec
popa
sub
out
andl
test
stos
std
pop
out
or
clc
jbe
imul
jns
fptan
push
fildll
subl
into
inc
es
xor
negl
insl
mov
pop
add
adc
movsl
xchg
mov
inc
dec
adc
inc
or
fsubp
int
pop
insb
push
icebp
mov
cmp
or
or
xchg
xor
mov
and
adc
add
add
mov
lret
cmpsl
ss
lcall
jp
push
mov
jmp
shll
stos
sbbb
shlb
dec
fwait
fwait
loopne
lods
xlat
call
or
imul
sub
add
mov
inc
out
sub
inc
out
rorb
fistl
out
xchg
incl
std
mov
pusha
push
mov
mov
pop
lds
ret
sub
xchg
mov
pushf
fidivl
int3
scas
clc
sub
push
iret
mov
sti
dec
inc
adc
aam
int3
cmpsb
inc
insl
imul
xchg
and
ror
xchg
repz
dec
mov
xchg
xchg
call
out
and
jle
sbb
rorl
cmp
pop
fisttps
cli
sbbl
cmp
fcoms
jne
imul
adc
aam
test
mov
jg
insb
aad
cmp
push
and
dec
icebp
mov
inc
movsl
mov
and
push
jle
and
fwait
sar
xchg
cmp
pop
aam
or
push
mov
repz
mov
roll
push
xor
pushf
jne
jmp
mov
push
leave
dec
cltd
fists
cwtl
sbb
daa
or
sbb
xchg
test
dec
cmpsl
xchg
jecxz
fbld
addb
jmp
xchg
in
mov
out
or
xchg
dec
shlb
sti
lahf
lret
mov
sbb
push
mov
stc
test
pop
jmp
inc
pop
insb
inc
das
jno
xor
aaa
pushf
ja
into
es
push
cmc
xor
add
enter
jb
xchg
add
out
xchg
add
xor
dec
jne
cmp
mov
cld
rcrl
fbld
movsl
add
rcl
sbb
or
or
adc
mov
push
jne
imul
lods
adc
dec
ret
xlat
hlt
xor
testb
pop
sti
sub
pop
sub
ret
cli
nop
outsl
fwait
mov
sbb
and
mov
arpl
test
xor
sub
popf
push
or
iret
cmp
dec
movsl
sbb
sub
icebp
out
cmc
test
sbb
mov
sub
and
rclb
in
or
push
mov
faddl
lret
mov
loopne
mov
outsl
xor
inc
add
cmp
jge
fidivrs
jo
push
cld
push
cmpsl
and
jl
push
inc
xor
insl
in
icebp
dec
repz
fildll
jl
clc
xor
xchg
enter
lret
or
outsb
mov
sbb
in
push
xchg
pop
imul
cmp
jns
ljmp
fildll
jmp
add
mov
sbb
inc
stos
cmpsl
pop
add
sahf
cmp
fisubl
mov
mov
mov
xor
sbbl
fwait
jmp
lods
mov
decb
icebp
pusha
mov
xchg
sbb
mov
cld
es
int3
and
push
cmpb
adc
mov
jns
mov
dec
in
rolb
mov
push
mov
call
imul
ss
xor
add
cmp
jmp
push
lock
leave
je
jp
mulb
xchg
and
or
ljmp
add
mov
fcomps
dec
pop
fstps
mov
cs
adc
jae
out
xlat
jl
inc
nop
stos
aaa
stos
inc
jo
jbe
sub
std
jbe
xchg
scas
sub
xor
add
pop
loopne
mov
adc
aad
mov
mov
mov
lock
adc
xor
push
xlat
fucomi
ja
sub
stos
push
mov
test
out
and
ljmp
lcall
ljmp
xchg
dec
push
test
xchg
aas
out
std
mov
push
mov
jns
es
mov
pop
dec
jno,pn
mov
and
adc
pop
add
in
sbb
pop
insb
movsl
movsb
popf
inc
add
push
and
pop
loopne
scas
mov
cmp
sub
lods
insl
mov
cmp
mov
xchg
or
loopne
jle
mov
cmp
js
test
and
cmp
xor
mov
cwtl
testl
pop
inc
lahf
aad
pop
out
lcall
cmc
out
stc
mov
pop
pop
test
rolb
jmp
mov
dec
push
and
cmp
xor
and
sbb
adc
push
das
pop
pop
iret
adc
add
shrl
sbb
test
mov
outsb
stos
out
sbb
mov
mov
out
gs
jns
sbb
mov
outsl
adc
add
into
adc
and
mov
outsb
jg
aam
sub
pushf
movsb
mov
dec
jnp
xchg
data16
bound
dec
lcall
imul
pop
mov
cmpsb
ss
push
adc
mov
xchg
push
je
ss
pop
imul
aad
adc
mov
sbb
xchg
mov
pop
push
repz
sub
jns
mov
push
pop
sbb
notb
cmp
in
or
mov
mov
xor
stc
mov
push
fmul
ret
cli
leave
dec
dec
cmp
mov
popf
push
ljmp
sub
push
clc
cld
adc
mov
dec
dec
dec
cmp
push
adc
push
push
jecxz
cltd
rcl
inc
outsl
mov
out
jle
fisubs
ret
push
dec
or
scas
addr16
mov
pop
movsb
shlb
daa
cmpl
dec
cmc
mov
in
cltd
push
call
mul
mov
inc
add
push
lret
or
daa
ljmp
pop
cmc
cmp
fisttpl
and
call
icebp
cmc
push
cs
mov
ss
fucom
addr16
mov
pop
push
xor
mov
sub
movsl
and
mov
scas
ljmp
divl
repz
xchg
cmp
mov
lea
and
jp
push
sub
int
and
pop
sbbl
or
cmp
mov
mov
dec
jae
fadds
cwtl
pop
jle
clc
or
nop
outsb
cmp
push
iret
or
mov
adc
test
mov
inc
dec
stc
or
clc
pop
rcrb
inc
pusha
add
or
sti
sub
pusha
stos
dec
mov
imul
fmuls
sub
and
ja
in
xor
popf
iret
sub
jle
dec
sbb
adc
mov
lds
adcb
es
shll
pusha
in
fcoms
jecxz
repnz
rcrb
loopne
ret
cmpsl
jecxz
std
inc
jns
push
das
dec
dec
mov
stos
or
fcomip
sub
pop
fsub
ss
xchg
dec
lds
jo
dec
je
imul
xor
in
cmpsl
jno
mov
test
test
xor
sar
sub
loopne
jecxz
cmpb
pop
mov
mov
fists
lods
mov
sbb
jmp
jo
adc
sbbl
jno
enter
int3
mov
and
pop
scas
lahf
pop
lods
insb
jnp
dec
dec
in
push
pop
or
jns
out
out
mov
lods
ds
or
rol
and
cmp
xchg
test
sarb
jnp
fistpll
jns
out
fstpt
jno
pop
and
mov
arpl
jbe
jnp
sbb
stos
push
aaa
xchg
fists
roll
push
cmp
nop
les
jo
addr16
pop
xchg
inc
stc
push
imull
xchg
and
aas
js
sti
push
lcall
jne
ja
orb
sbb
sub
pushf
popa
sbb
xor
mov
mov
sbb
mov
cmp
por
repnz
in
sub
mov
je
cmp
in
dec
fdivrp
enter
mov
int
adc
das
add
sahf
jecxz
sahf
cmp
pop
cmp
add
in
xchg
xchg
sbb
jle
sub
cmp
lret
lods
cmp
notb
iret
test
mul
inc
cmp
cmp
call
int3
movsl
adc
xor
jbe
out
fistpll
jmp
adc
cmpsl
sti
daa
cmp
insb
xor
xor
add
in
push
pop
fsubrs
xchg
jmp
jmp
mov
push
andb
and
cmpsb
inc
gs
sqrtps
fwait
stos
fwait
mov
dec
inc
mov
shlb
mov
cmp
mov
arpl
ret
int
add
nop
jl
rcll
ret
xlat
repnz
aaa
mov
fnsetpm(287
inc
xor
xchg
cwtl
repz
jae
lcall
xchg
sub
dec
rorl
movsl
cld
ret
jecxz
push
inc
push
out
mov
adc
cli
jp
push
pop
lcall
xchg
aas
push
push
push
cmp
hlt
inc
jg
pop
and
or
insb
out
inc
jnp
inc
cmp
pop
cmp
mov
loope
cmpsb
xlat
mov
rorb
inc
out
jno
push
adc
ljmp
xchg
sub
pop
lods
pusha
clc
mov
lods
into
sbb
fildll
lret
out
mov
push
jns
out
shl
movsb
cmp
mov
xor
sub
jge
mov
lods
scas
cmc
insl
negb
stc
sub
mov
lock
xor
and
lock
dec
mov
js
xlat
xor
insb
lret
push
loopne
xor
shll
pop
lcall
jb
pop
stc
cmp
sub
add
arpl
sbb
xor
repz
dec
movsl
test
cmpsl
jbe
mov
fmull
testb
xchg
fnstcw
mov
lret
pop
ret
or
adc
fisttps
and
int
push
pop
shlb
aaa
lahf
mov
sub
push
fs
lock
xchg
sub
cs
lods
lods
fcoml
mov
repz
cmpsb
mov
inc
psubq
add
push
out
enter
add
cmpsl
in
dec
mov
dec
jae
cltd
or
inc
cld
lret
xchg
push
icebp
mov
inc
insl
mov
jmp
fldcw
movsl
adc
or
sbb
xchg
in
jge
adc
jge
pop
insb
popf
shlb
shrl
movsb
and
test
jo
shlb
xchg
mov
or
xchg
adc
push
pop
imul
jbe
ficoml
mov
cmp
add
data16
jns
xchg
add
pushf
xchg
xchg
cmp
rclb
jmp
sahf
out
int
add
add
pop
fildll
arpl
inc
or
cmp
cmp
push
adc
dec
xchg
sub
push
pushf
mov
xorl
pop
push
in
mov
mov
sub
pop
fs
push
mov
jg
iret
test
lds
mov
sub
pushf
sti
int
out
mov
adc
cmpb
and
test
push
je
ljmp
push
mov
sub
loope
test
outsl
pop
icebp
insl
add
xchg
or
addr16
aaa
inc
mov
outsl
push
sbb
xorb
aam
loop
outsb
adc
mov
pusha
scas
cmp
push
xor
lds
push
mov
or
daa
pop
sbb
lock
dec
inc
adc
popf
xchg
cli
mov
hlt
or
mov
adc
dec
ret
or
fstl
or
and
int
xlat
adc
lods
mov
outsl
mov
fsubr
stos
pop
push
dec
push
ret
idiv
aaa
stc
pop
add
jb
pushf
fldcw
xchg
in
xchg
leave
int3
add
or
mov
stos
dec
inc
jb
or
sub
push
test
pop
push
add
mov
repz
aam
cs
int3
sahf
sub
cmc
mov
imul
test
rcl
mov
mov
and
push
les
or
into
lock
dec
std
mov
in
aam
jo
sub
jle
add
push
insl
cld
cltd
shll
loope
and
fsts
push
xlat
cmp
add
jle
dec
jmp
xor
sbb
divb
cs
fisubs
sub
call
jl
adc
lahf
imul
scas
gs
dec
xlat
xor
push
add
pop
push
mov
dec
mov
pop
out
and
dec
cltd
je
or
and
add
pop
push
std
xor
scas
add
xchg
lock
repz
adc
sbb
icebp
mov
lds
adcw
loopne
aaa
aad
popa
mov
push
pop
out
sub
loope
cmp
pop
or
mov
mov
cmp
lcall
fnstcw
fdivp
aad
jecxz
stos
imul
jno
mov
mov
dec
mov
push
and
scas
decl
and
add
shll
jmp
push
rol
daa
test
lret
and
add
push
mov
xchg
and
pop
xchg
insl
xchg
out
or
cmc
pop
cld
inc
jns
and
lods
in
inc
sbb
or
jecxz
js
pop
lea
test
adc
xchg
lods
insl
stos
clc
lahf
dec
cmp
xlat
adc
mov
out
push
cmp
in
cmp
mov
fcmove
loop
push
loope
push
ds
aas
cmp
dec
dec
in
inc
sub
jnp
fcoms
sbb
xorl
sub
mov
adc
mov
shlb
jecxz
iret
adc
add
jp
pop
inc
addr16
jl
call
clc
nop
push
mov
jo
scas
gs
xchg
fidivs
push
and
inc
cmp
xor
jp
cmpsb
fwait
mov
sbb
inc
pop
xchg
aam
push
shlb
mov
xor
push
sub
js
aaa
mov
xor
mov
lea
pusha
mov
xchg
xor
mov
stos
sub
arpl
adc
mov
enter
in
push
xor
stos
cli
test
pop
cmpsb
or
and
sarl
arpl
push
sub
clc
call
xchg
mov
leave
imul
push
add
xchg
mov
fistps
scas
inc
xchg
add
pushf
sbb
dec
pop
xchg
sbb
arpl
sbb
lds
sti
lods
jmp
or
cmpsb
into
or
enter
enter
push
mov
lods
sbb
lea
dec
xchg
cmp
mov
add
dec
xor
dec
add
popa
jmp
jns
fbld
and
pop
shlb
inc
dec
adc
mov
jmp
jb
pushf
fidivl
cmp
xor
xchg
inc
test
daa
pop
inc
das
xchg
dec
jo
or
jo
dec
inc
testb
sub
clc
lods
cltd
andl
pop
sub
fldt
mov
pop
push
and
pushf
xchg
jle
sub
mov
scas
dec
out
or
inc
gs
push
test
sbb
into
fsubp
push
int3
imul
mov
cmpsl
pop
lahf
in
outsb
jne
mov
adc
out
adcl
pop
cmp
stc
stc
and
add
outsb
popf
cmp
and
icebp
inc
popa
sbbl
adc
inc
mov
push
and
lods
mov
ss
lods
or
frstpm(287
or
inc
pop
into
xchg
add
cmp
cmp
cmp
sub
rorb
mov
jnp
jle
scas
jecxz
jle
rclb
in
and
jno
fcomi
or
mov
popf
repnz
pusha
rcrl
xchg
add
adc
inc
adc
and
je
test
test
stc
stc
mov
movsb
pop
cmpsl
mov
jns
cli
mov
mov
sbb
jb
jp
jo
adc
scas
sub
dec
lret
sub
adc
adc
lret
jnp
jp
stos
cmpsl
sub
inc
mov
aam
lret
push
mov
out
movsb
lods
cmp
xchg
sbbb
push
xchg
cmpsb
xchg
cmp
fsubl
mov
insb
sub
or
repz
sub
shrl
cli
insb
jne
or
pop
pop
mov
xchg
mov
es
add
or
cmp
mov
nop
push
scas
adc
xor
fst
mov
mov
ret
je
mov
inc
in
and
hlt
push
add
fimuls
mov
sub
xor
les
pop
pop
outsl
xor
aad
mov
mov
mov
dec
rclb
repz
mov
arpl
add
dec
mov
adc
inc
fstpt
sub
rcl
into
adc
and
fmuls
sub
jo
ficoms
pop
xchg
jmp
or
enter
mov
adc
repnz
or
rorl
sub
lahf
stc
cmp
xor
pusha
stos
mov
mov
movsl
jle
lock
jecxz
cmp
xorb
pop
call
enter
aad
addb
cld
aam
imul
pop
xor
jl
adc
bound
arpl
cmp
mov
movsl
jmp
and
pop
cmp
inc
int3
mov
and
stos
pop
inc
cli
fdivrs
add
hlt
mov
stos
dec
pop
clc
mov
ret
aaa
adc
insl
sbb
xor
xor
jp
hlt
stos
dec
pop
dec
cmp
cmp
fwait
push
or
xor
cmp
cmp
std
push
sub
shl
jmp
mov
sub
mov
cmp
sbb
stos
call
notl
pop
aaa
in
pop
jmp
mov
mov
jnp
iret
or
jg
imul
shlb
jns
lahf
outsb
in
xchg
std
sub
dec
loopne
mov
cs
and
inc
ret
sbb
add
popa
pushl
xor
clc
and
lret
push
repz
dec
sbb
stos
test
cmp
adc
dec
mov
pushw
sub
push
mov
mov
dec
stos
push
push
cltd
add
lahf
pop
iret
dec
mov
ror
iret
and
fiaddl
xlat
push
xchg
push
mov
xchg
xlat
jo
or
test
lret
mov
or
outsl
xchg
faddl
inc
inc
dec
outsb
test
dec
enter
shrb
sub
jns
mov
ss
dec
add
dec
lahf
pop
cwtl
loopne
cmp
and
adc
in
dec
imul
jo
jae
in
jo
stos
lret
xor
xchg
jmp
xchg
movsl
lcall
jge
or
shlb
mov
out
aad
mov
mov
push
inc
cmp
in
out
sbb
cmpsb
nop
movsl
push
int3
and
popa
int
push
outsb
adc
inc
cmp
imul
mov
jmp
dec
and
push
and
fsubrl
rclb
mov
pop
sub
int3
adc
ljmp
sub
dec
hlt
outsb
ss
stos
xchg
dec
dec
cmp
mov
loopne
jp
aad
in
lahf
scas
push
dec
lock
movsl
push
add
cltd
rorb
loopne
add
push
scas
stc
jo
pop
sbb
adc
pop
in
das
or
jge
inc
test
xchg
mov
ds
lret
mov
sbb
dec
pop
loopne
jmp
jne
hlt
jmp
cmpsl
iret
icebp
add
lds
dec
lds
shll
dec
sub
jecxz
mov
rorb
movl
sbbb
aad
dec
in
pop
dec
aaa
fcompl
into
jmp
std
jmp
addr16
data16
inc
dec
inc
les
xor
stos
mov
sahf
aaa
les
mov
cltd
mov
xchg
ret
mov
inc
and
cld
pop
ss
pushf
mov
xchg
mov
cmc
ret
aaa
dec
mov
jbe
and
lods
lret
in
add
adcl
pop
mov
jecxz
fistl
mov
in
std
cmp
fsubl
fcoms
pop
mov
sahf
mov
ret
lea
jmp
stos
out
in
and
ds
adc
enter
cld
adc
xchg
sub
ficomps
sub
or
sub
addr16
push
fildl
pop
stos
sbb
xor
push
xor
pop
push
fiadds
sahf
adc
fdivrs
jae
and
fs
fstp
push
cmpsb
ret
push
jle
add
fldt
icebp
int
lcall
push
fsubl
outsb
int
jge
mov
xchg
loope
sbb
cltd
xchg
call
fdivrs
pop
rcrl
pushf
enter
cwtl
stos
rorb
push
flds
or
cmpsb
std
out
ja
adc
iret
ja
sbb
or
int3
int
push
xchg
xor
repnz
jp
sti
mov
fimuls
inc
in
lret
cmp
jo
push
out
jnp
iret
sbb
loop
clc
int
clc
mov
and
push
fsubs
nop
xor
call
call
add
mov
jb
repnz
test
outsl
jmp
pop
adc
mov
xor
aad
nop
pop
mov
mov
or
ret
add
pop
mov
pop
sbb
pusha
push
sub
jb
imul
fs
mov
push
pop
mov
addb
cmp
enter
xchg
gs
adc
ljmp
pop
mov
js
push
push
push
xchg
sbb
xor
popa
pusha
mov
pop
mov
pop
xor
push
mov
daa
outsl
cld
pop
xor
lods
mov
das
add
rcll
ret
dec
mov
int
dec
xchg
jo
mov
adc
std
mov
arpl
mov
mov
nop
jmp
mov
test
pusha
xchg
add
push
loope
iret
fistpl
fadd
mov
push
in
mov
cmp
outsl
sub
test
ret
data16
jg
stos
push
in
in
jp
adcl
pop
xor
mov
xchg
int3
mov
mov
add
xchg
pop
xor
movsl
and
add
push
rol
pop
xchg
call
test
and
sbb
push
ja
push
fisubs
xor
add
cmp
or
and
mov
and
ljmp
leave
push
pop
mov
xor
leave
pop
pop
adc
dec
movsb
cld
xchg
mov
inc
and
mov
pusha
adc
inc
aam
orl
jl
jnp
pop
xchg
std
out
xor
call
scas
or
xor
xor
push
lds
pop
shlb
xorl
lahf
repnz
add
adc
jns
orl
and
pusha
dec
xlat
orl
xchg
jmp
imul
adc
lods
inc
sbb
call
repz
push
or
push
fcmovnu
cs
xchg
out
or
add
lret
xlat
test
daa
push
in
shrl
ret
fildll
inc
aad
push
cmp
js
loopne
loope
in
jae
stos
dec
push
push
lret
and
xchg
pop
xchg
xor
jb
lret
and
xchg
cmpsb
xor
add
push
xchg
test
mov
push
leave
sbb
xor
fstp
jne
icebp
pop
or
mov
mov
nop
leave
repnz
repnz
xor
sbb
sarb
xchg
adcb
cmp
push
test
adc
push
insb
movsb
adc
add
dec
adc
in
pop
jno
dec
jns
pusha
xchg
inc
into
hlt
sti
mov
and
jns
jmp
leave
icebp
fidivrl
xchg
rcrl
clc
mov
sbb
mov
sbb
inc
fabs
xchg
movsb
fwait
addr16
data16
mov
push
repz
pop
cwtl
mov
adc
xchg
xor
push
xor
insb
insb
add
jnp
test
mov
cwtl
fcmovu
hlt
inc
push
out
adc
popa
idivl
loope
xor
jno
xchg
into
rol
mov
pushf
test
std
enter
sbb
mov
pop
dec
or
stos
shl
sbb
pop
stc
push
adc
lds
gs
imul
lea
add
pop
inc
nop
xchg
int
subl
pusha
add
ja
sub
sub
xchg
rcrb
stos
or
fldt
cmc
lock
aad
shll
mov
or
add
es
fwait
mov
sbb
scas
cmc
xchg
cmp
ja
negl
or
xchg
nop
adc
test
mov
outsl
add
in
call
cmp
cld
push
test
and
xchg
lock
arpl
daa
fsubs
pop
nop
dec
mov
outsl
xor
cmpsl
mov
push
je,pn
les
jns
or
and
xchg
jge
xor
or
jl
xchg
std
call
fsubrl
lahf
pop
cwtl
subb
jno
sti
data16
push
push
in
fst
insb
pop
cwtl
inc
push
pop
pop
and
ror
push
loop
adc
insb
jns
loop
lods
push
adc
inc
loop
lods
mov
jno
jbe
mov
xchg
sub
add
and
mov
push
jne
add
xor
sbb
lcall
dec
xor
and
adc
pop
xor
out
pop
and
sbb
in
xor
shlb
inc
imul
movsb
push
lahf
cmpsb
addr16
das
push
mov
jne
das
jnp
mov
lea
xor
adc
inc
dec
mov
das
call
add
adc
jne
mov
fs
ljmp
mov
lds
push
sbb
inc
push
les
inc
loope
pop
addr16
lock
ficoml
mov
mov
movsb
add
inc
pusha
add
icebp
out
mov
inc
outsb
mov
and
sahf
lcall
loopne
shlb
mov
pop
cmp
inc
inc
cwtl
out
sbb
loope
repnz
lcall
icebp
pop
loope
sub
inc
xor
jge
in
pop
and
cmpsb
mov
inc
mov
xchg
out
mov
mov
jne
loop
pop
je
lahf
and
ret
cmpsl
fadds
shlb
movsl
jns
xchg
leave
xchg
mov
dec
das
dec
adc
adc
inc
je
mov
mov
aam
imul
stos
xlat
sahf
rcrb
jae
lods
popf
mov
loope
adc
sbb
mov
mov
cmc
inc
push
mov
or
lcall
test
xor
pmaddwd
jg
fbstp
adc
jne
out
lods
or
cmpsl
inc
adc
das
ss
pop
imul
lahf
mov
and
push
ret
or
push
aas
dec
or
out
xchg
lods
push
movsl
jo
cltd
mov
fldenv
mov
loope
cmpsb
cmp
ja
fwait
aas
mulb
cld
mov
xchg
shl
mov
mov
jg
inc
sbb
test
jecxz
int3
insl
movsl
fdivrs
xchg
xchg
cmc
pop
lahf
xorl
and
daa
insl
imul
or
adc
xor
in
call
adc
out
in
sbb
mov
in
jne
cmpsl
stc
mov
int3
into
adc
or
inc
push
mov
push
jle
subb
adc
or
mov
pop
pop
cmp
cmp
lcall
mov
cmp
lret
adc
cmp
lea
adc
arpl
cmp
lret
call
fisubrs
cli
sbbl
inc
sub
gs
stc
sub
xchg
mov
leave
xchg
dec
bound
xchg
pop
mov
jl
jmp
pop
dec
in
int
dec
xor
shlb
mov
imul
cmp
dec
and
int3
dec
push
aam
or
stc
or
loope
mov
aad
fldenv
popf
and
dec
sbb
imul
sub
add
push
dec
pop
ret
aas
add
dec
bound
sub
xchg
push
inc
xlat
test
dec
fs
inc
xor
sub
sub
rcr
sbb
repz
testl
cmp
cmpb
jp
mov
test
mov
adc
xor
xchg
pop
pop
icebp
inc
fldcw
addr16
lret
pop
cmp
sahf
adc
sub
stos
into
pop
add
popa
and
loope
in
iret
mov
mov
sub
sbb
dec
or
sub
gs
sar
shll
fcoms
jg
and
mov
mov
imul
jl
mov
or
leave
or
fcoms
xor
dec
xchg
xchg
mov
jmp
les
pushf
mov
mulb
popa
mov
cltd
popf
adc
jmp
mov
push
fs
pop
js
into
loope
push
jl
xorl
scas
jbe
add
push
ret
loopne
lock
arpl
jge
mov
outsb
mov
push
and
push
in
inc
fldl2t
cwtl
idivl
call
jecxz
mov
into
shlb
jl
repz
outsb
jp
jp
std
cmp
mov
jecxz
lcall
push
repz
add
cmp
cld
movsl
stos
loop
mov
sub
mov
add
push
sbb
fcmovnb
fdivrl
jg
mov
adc
push
jmp
adc
pop
pushf
xor
movsl
cwtl
dec
jp
insb
mov
ljmp
test
cmp
test
inc
out
xor
and
jb
cmp
jno
cs
pop
jge
pop
lret
jecxz
nop
xchg
dec
les
fstps
mov
lds
data16
xor
push
xor
lods
mov
ja
mov
sbb
push
orb
lcall
cmpsl
leave
fwait
ret
and
testb
and
and
loopne
decb
shlb
ljmp
data16
dec
aad
insl
or
mov
add
push
arpl
adc
pop
dec
push
int3
rcll
sbb
jbe
fs
addr16
add
mov
fwait
jo
out
pop
movsl
aam
mov
icebp
xorl
jb
jge
push
cmpsl
cmp
jmp
or
loope
icebp
dec
mov
cwtl
pusha
push
and
dec
mov
xor
loope
std
mov
xor
sbb
lods
scas
mov
les
push
arpl
fdivl
pop
dec
cmp
pop
popa
jbe
xchg
jno
shlb
or
pop
push
idiv
movsb
and
mov
sti
push
adc
sbb
mov
clc
imul
shll
xchg
push
pop
jbe
outsl
mov
dec
stos
adc
and
push
aam
mov
cmpsl
and
stc
mov
lock
add
dec
cmp
imul
mov
lock
sbb
fsubs
movsl
insl
inc
pop
shrl
outsl
jp
fnstcw
int
inc
sbb
mov
mov
popf
jo
outsl
dec
xor
push
dec
insb
cmp
sbb
sub
scas
pop
imul
test
inc
xor
mov
lods
mov
call
lods
and
add
xor
pop
or
adc
add
pop
gs
loopne
stos
adc
jnp
fcompl
call
cltd
imul
pop
outsl
and
shlb
push
jne
and
psubq
mov
cmp
pop
fdivr
mov
xorl
jmp
mov
mul
js
xchg
hlt
xor
lret
outsl
cmp
scas
push
inc
push
mov
adc
es
shrl
mov
mov
rclb
loop
or
and
out
stos
dec
xchg
cltd
add
or
inc
fwait
push
cmp
jg
mov
frstor
cmp
cmpb
shlb
fwait
push
add
mov
rolb
cmp
or
lods
add
mov
jl
or
lea
ficomps
cli
iret
mov
mov
cld
test
lds
jp
mov
cs
mov
mov
call
mov
mov
mov
movl
mov
int3
inc
mov
stc
jecxz
aam
lahf
hlt
lret
cmp
lods
add
and
jnp
or
inc
mov
jmp
inc
adc
repnz
test
mov
aam
fidivrl
in
xchg
aas
and
in
daa
ret
repz
hlt
lret
or
pop
mov
pop
pop
sti
flds
push
mov
imul
cltd
mov
repz
dec
mov
xchg
inc
gs
out
ja
lret
lds
cld
test
outsl
fimull
aad
popa
call
sub
pop
push
add
add
cmpsl
scas
jbe
mov
dec
pop
jne
stc
faddl
mov
mov
subl
jg
nop
in
lock
mov
in
out
and
jns
lods
pop
aam
xchg
jae
divb
sub
ret
mov
cmp
test
pop
pushf
sbb
xchg
arpl
jmp
push
xchg
jmp
int
sar
jecxz
mov
in
add
xor
xor
xor
xchg
push
xchg
cmpsl
push
stos
xor
add
movsb
push
pop
push
scas
and
cmpl
mov
add
loopne
push
or
mov
insb
lods
fsubr
mov
fcmove
ret
pop
sub
mov
fcoml
jb
int
mov
jb
jb
mov
pop
xor
sbb
dec
iret
stc
fistps
mov
jno
cmp
jno
pusha
push
es
and
or
popa
iret
mov
xchg
push
mov
fstpt
pop
mov
sbb
push
mov
sub
out
outsb
lea
push
jecxz
ret
and
rcrl
lds
xchg
jp
imul
jle
pop
or
ljmp
pop
sub
add
sbb
sbb
inc
xor
jns
incb
repz
clc
sub
cmc
mov
xor
dec
iret
adc
clc
shrl
sub
rcll
xchg
insb
aas
scas
xchg
mulb
inc
imul
es
sub
mov
and
xchg
pushf
xlat
mov
mov
movsl
cltd
test
shrb
jg
xchg
je
add
add
add
stc
jp
data16
ffreep
jbe
dec
in
push
mov
xchg
sbb
inc
inc
xchg
hlt
dec
xchg
sbb
mov
ret
stos
xor
daa
in
mov
dec
mov
out
fs
sbb
adc
into
dec
and
daa
or
push
inc
xor
lods
bound
sbb
pop
in
add
sub
sub
dec
inc
jb
sti
mov
pop
jb
insl
test
adc
xchg
pop
push
sub
int
pop
movd
imul
cld
adc
mov
xchg
jmp
adc
leave
shrb
and
push
repz
cmp
dec
js
push
mov
sub
mov
pusha
shlb
xlat
mov
mov
add
popa
sbb
xor
push
rolb
add
jecxz
xchg
sbb
jne
icebp
addb
sub
adc
test
xchg
ja
push
jns
and
scas
into
dec
adc
loop
dec
lcall
pop
sub
outsl
repz
insb
dec
mov
in
int
fcomip
push
int3
in
sahf
out
cmp
out
sahf
ljmp
jp
or
scas
or
fistps
xchg
xchg
fdivp
ret
cmc
fs
mov
inc
mov
inc
icebp
in
push
imul
and
jecxz
or
dec
cmp
mov
fsubs
xor
pop
push
add
push
sahf
add
sbb
xor
setg
jne
imul
mov
and
mov
pushf
int3
subl
inc
pop
lods
adc
adc
fldl2e
sti
mov
cmp
mov
mov
jno
test
icebp
sbb
jnp
ret
jnp
mov
jmp
dec
add
push
mov
jmp
lods
iret
xor
mov
dec
pop
or
jmp
fnstsw
xchg
std
insl
cs
cmp
ds
fcoml
test
push
mov
popf
and
stc
add
insl
pop
pop
out
adc
fsubrl
inc
mov
notl
pusha
inc
rcll
pop
insb
add
mov
mov
aaa
out
orb
xor
add
fldl
jne
pop
cmp
jne
in
pop
or
outsb
out
jo
sub
test
jns
int3
addr16
xor
push
stos
mov
sub
aam
jae
call
es
ds
ret
stos
or
rcr
fs
incl
sub
out
add
scas
mov
insb
ljmp
les
jmp
testb
fldcw
mov
xor
scas
aam
mov
pop
shlb
sbb
mov
int3
es
inc
mov
inc
cmp
in
cmp
push
mov
xchg
pusha
cmp
jg
add
in
xchg
pop
xor
mov
xchg
xchg
jb
test
shrb
outsb
aaa
repz
ret
cli
push
mov
mov
loopne
jmp
push
aaa
mov
xchg
add
fldenv
and
mov
lea
xchg
mov
cmc
add
hlt
sarb
adc
or
lods
push
pop
dec
mov
mov
push
lds
inc
pusha
dec
xchg
xchg
jmp
daa
es
mov
and
movsl
hlt
jns
out
mov
adc
outsb
enter
js
adc
daa
mov
out
ja
fldcw
dec
leave
sub
xchg
pop
divl
ret
test
sbb
into
and
sbb
add
xor
jle
xchg
pop
cmpsl
sbb
gs
cli
in
in
repnz
add
repz
mov
rclb
or
fnstsw
pop
je
mov
inc
bound
and
rolb
rorb
inc
mov
push
mov
mov
mov
sub
push
mov
sub
pop
xor
or
icebp
stos
and
fdivs
mov
pop
mov
adc
loopne
imull
cmp
addr16
inc
xlat
das
adc
imull
inc
xor
sahf
adcb
adc
fsts
dec
and
sbb
mov
xor
cmp
adc
std
in
out
fucomip
dec
stc
xor
out
fcoml
xlat
push
add
sub
push
in
xchg
les
les
popf
mov
push
popa
add
push
dec
lahf
ja
push
addr16
fisubrs
cmc
dec
xchg
jnp
movsl
mov
and
adc
outsb
lods
inc
pop
popa
pop
loope
rorl
add
mov
lea
addb
arpl
inc
jecxz
sbb
data16
pop
cmp
int3
ja
je
adcl
insl
scas
dec
push
push
mov
dec
loopne
mov
ret
sbb
mov
xchg
daa
mov
scas
nop
mov
jp
inc
outsl
shll
mov
clc
adc
orb
ret
xchg
das
pop
mov
xor
jnp
stos
jbe
es
and
dec
pop
jo
aam
out
insl
or
pop
test
lock
mov
mov
pop
fldt
jle,pt
cmc
pushf
mov
out
out
jl
je
jbe
adc
mov
or
push
pop
push
push
jecxz
pop
xchg
sarl
xchg
push
in
mov
sub
int3
xor
test
xor
jns
jp
fcmovb
imul
inc
jmp
aas
fwait
mov
cltd
push
shrb
jg
enter
xchg
lods
mov
xchg
lods
std
lods
lock
inc
stos
cltd
sub
and
les
andl
shrb
ljmp
pop
jne
mov
jns
aam
lods
popl
xor
lcall
cli
lcall
pop
add
push
arpl
aam
or
jae
xchg
rcrl
sbb
push
ficoml
xor
out
js
sub
adc
fcomi
cmp
addb
push
or
sahf
sarb
fstl
out
mov
or
ret
cli
sarl
into
mov
scas
and
popa
mov
mov
cmp
fdivp
popf
cli
repnz
cmp
in
loop
daa
xor
push
repnz
push
adc
leave
imulb
push
push
loope
jl
in
rep
stos
sbb
jle
aam
popf
mov
mov
bound
pop
push
sub
mov
outsb
dec
jecxz
sbbb
call
imul
shrl
les
adc
fiaddl
test
insb
pusha
xchg
push
hlt
movl
rcll
fldcw
cltd
sbb
in
sti
cs
nop
mov
mov
iret
adc
data16
jge
lret
mov
leave
cmpsb
test
popa
push
test
ja
inc
inc
jmp
xchg
jle
jb
aas
adc
cmc
cmp
test
push
das
jo
pushf
loop
mov
stos
in
filds
add
jae
mov
lret
mov
jge
stos
pop
cmpsl
push
xor
xchg
inc
pop
jns
shrb
or
scas
int
frstor
lcall
jge
rcr
sbb
cmpsl
add
jns
stos
sub
pusha
loopne
lret
inc
sti
or
pop
mov
roll
repnz
push
inc
and
or
dec
enter
cmc
addl
ljmp
xchg
mov
xor
xchg
cs
jg
fwait
jmp
push
enter
add
imul
insl
stos
out
rol
jle
int
jle
pop
ret
and
xlat
lahf
pop
sahf
mov
fstl
pop
in
or
in
mov
pmovmskb
fbstp
out
fcmovnu
cmp
andl
jnp
loopne
sbb
push
mov
neg
cmp
sub
stos
push
adc
ljmp
arpl
scas
inc
mov
sar
in
sub
fisubl
mov
cltd
subb
pop
les
xchg
hlt
inc
adc
mov
inc
xchg
dec
mov
int3
aaa
out
mov
push
xor
in
xchg
imul
xchg
rorl
dec
jle
jno
aad
sub
outsl
pop
jge
add
std
push
clc
cmpsl
pop
push
sbb
in
in
or
xor
mov
add
or
lods
pop
jbe
xor
jmp
xchg
dec
lret
xor
mov
sub
cmc
pop
lret
cs
test
pusha
and
xor
rcrl
pop
xchg
pop
ficoms
out
fisubs
mov
dec
hlt
test
pop
fldl2e
sbb
das
pusha
xchg
push
lods
into
ss
jbe
notl
mov
test
addl
and
xor
scas
pop
leave
push
out
dec
push
xchg
pop
xorb
movsl
cmp
fwait
pop
rolb
orb
mov
jecxz
dec
mov
and
out
cmp
add
repz
xor
das
jns
sbb
push
loop
and
outsb
push
dec
xchg
mov
into
roll
jle
out
inc
das
sbb
xbegin
mov
mov
ret
and
mov
sbb
ljmp
and
lret
dec
lods
dec
rcl
mov
cmp
inc
repnz
ss
dec
cmp
mov
test
outsb
jl
mov
push
movsl
push
orb
incb
inc
mov
test
movsl
mov
mov
sbb
out
call
aaa
dec
aaa
pop
dec
add
pop
test
scas
iret
push
cli
pop
dec
mov
cs
push
adc
push
jo
repz
cmpsl
mov
and
out
and
inc
sti
mov
hlt
inc
imul
je
and
mov
and
and
or
stos
stos
mov
test
sbb
ja
dec
push
jge
outsl
jp
ret
lods
pop
je
pop
mov
push
insb
test
out
ffree
adc
lcall
xchg
cltd
lea
in
loop
push
dec
sahf
add
dec
mov
das
nop
and
and
insb
xchg
adc
jmp
pop
mov
faddl
icebp
jmp
loop
fimuls
pop
xchg
mov
imul
adcb
rcrb
mull
xchg
ljmp
scas
inc
push
in
and
jge
cltd
fnsave
inc
cli
mov
js,pt
push
jne
outsl
cmp
and
jno
or
lahf
dec
stos
jb
pop
fucomip
or
sub
add
add
xorl
hlt
add
out
inc
in
out
inc
mov
adc
loop
sbb
mov
adc
loope
notb
jno
lret
push
out
scas
jge
xchg
xor
jns
mov
mov
and
pop
push
dec
jecxz
mov
sbb
std
pop
mov
pop
pop
std
push
gs
add
or
cld
fildll
test
mov
outsl
clc
clc
mov
ds
les
movsb
mov
les
xlat
mov
sbb
icebp
out
add
pop
xchg
add
mov
push
rcrb
push
jae
in
xchg
push
and
aaa
ja
jecxz
push
mov
pop
adc
in
and
jns
int
and
jbe
add
mov
popa
inc
pop
aam
stc
lea
aam
mov
lea
loope
jne
cli
call
jecxz
andb
ds
push
pop
int
ret
sub
dec
daa
sbb
fidivl
dec
xchg
mov
lret
pop
push
lock
jo
mov
rolb
lock
sub
je
xlat
mov
or
and
push
scas
test
repnz
pushf
test
mov
es
mov
sar
lea
jae
inc
mov
or
das
inc
mov
ss
int
mov
cmp
push
in
cs
mov
add
xchg
cmp
jno
add
in
rcl
add
popl
pushf
dec
sub
ret
xchg
rcll
popf
shll
in
pop
cmpl
or
shl
pop
test
add
push
cmp
cmc
sub
out
push
adc
mov
push
push
out
pop
jbe
push
or
fadds
pop
movsl
rorl
repz
test
lahf
dec
fistl
jecxz
pop
mov
popf
incb
loope
cmpsb
mov
movsl
sbb
add
scas
cmp
cmp
sub
mov
add
and
mov
popa
mov
insb
xchg
shld
xor
sub
push
inc
xlat
mov
push
mov
sahf
clc
out
mov
loope
sub
and
into
pusha
push
fwait
cwtl
mov
pushf
fmull
sbb
vcvttpd2dqy
adc
daa
push
cmp
push
mov
cmp
pop
repnz
clc
mov
popa
push
mov
fldl
and
jge
push
sbb
sub
into
cmpsb
push
push
jmp
loop
shr
push
push
ficoms
rcrb
scas
into
iret
lods
dec
mov
dec
rcr
pop
push
mov
pop
inc
push
sub
fucomp
push
or
hlt
xor
fs
pop
xor
test
jne
leave
jecxz
adc
sub
add
lds
push
fsubl
aaa
mov
ds
inc
div
cmpsl
cs
mov
push
push
arpl
test
xor
inc
dec
pop
jg
inc
fdivrs
dec
sub
xchg
push
push
ss
mov
jmp
jecxz
stos
sbb
scas
js
shlb
aam
mov
insl
mov
mov
test
subb
adc
aad
js
xchg
lock
jne
sbb
sbb
ret
cld
outsb
push
mov
enter
stos
dec
iret
mov
xchg
xlat
stos
push
push
jge
sarb
push
push
mov
sarb
jb
jge
outsb
xor
mov
xchg
test
je
mov
xchg
jp
call
inc
jle
shrb
jecxz
in
inc
mov
mov
xor
daa
sub
aas
jne
adc
std
lret
outsl
jo,pt
and
mov
adc
sub
mul
addb
mov
test
fwait
mov
ds
je
stos
cmp
enter
dec
or
dec
jle
xchg
sub
xchg
mov
and
sbb
adc
xchg
sbb
mov
xorb
jae
and
arpl
aam
sahf
in
mov
les
adc
jae
out
es
shrb
xchg
sbb
push
ret
jbe
nop
dec
fwait
xor
jge
or
ja
mov
xchg
inc
jmp
imul
scas
sbb
test
or
cmpsl
jl
jns
jne
jae
aam
jge
fs
orb
jmp
sub
test
mov
push
cmpsb
pop
dec
loop
xchg
fwait
insl
add
ret
mov
dec
or
pop
inc
push
jnp
mov
cmpb
or
jne
xlat
or
dec
and
fiadds
or
cmp
mov
mov
sbb
daa
mov
pop
lcall
adc
insl
cli
aad
negl
ficoms
cwtl
aaa
mov
ljmp
ret
xor
and
stos
adc
mov
push
cmp
aas
cmp
cmpsb
sbb
outsl
dec
jnp
pop
jnp
xor
and
fimull
jl
inc
sub
mov
shr
jmp
xor
ss
cmp
stc
in
out
fdiv
adc
aam
js
and
jnp
test
dec
mov
xchg
inc
sarb
mov
xchg
les
lea
and
les
test
add
pop
pop
fists
ds
pop
sub
add
cmp
insb
mov
in
stc
std
add
sub
negb
ret
xchg
data16
jle
cmp
lcall
mov
scas
fistps
mov
jb
or
inc
push
jmp
pushf
gs
inc
sarb
imul
mov
cmpsl
lods
std
push
mov
push
sub
pop
mov
or
jl
push
insl
stos
add
mov
cmp
fs
mov
sbb
jle
and
sbb
sbb
movsl
repnz
fisubs
mov
imul
sub
and
mov
out
fcomps
push
test
and
mov
add
cmpsl
leave
sahf
in
in
add
inc
cmp
arpl
and
push
enter
test
push
push
mov
es
call
filds
adc
outsl
fucomip
mov
rcl
push
sbb
fwait
lret
sbb
das
dec
enter
call
pop
add
ss
dec
xor
jg
sbbb
adc
sbb
fdivs
xor
fldl
xor
cmp
gs
sahf
xchg
in
inc
cmp
addr16
pop
inc
scas
mov
mov
cmpsl
je
inc
pop
movsl
das
daa
fidivrs
cltd
ja
adc
mov
popa
lahf
inc
and
loope
fldcw
out
lods
or
push
shrl
sarb
cmp
sub
shlb
cltd
movsl
sub
pop
sbbb
add
out
jmp
fdiv
scas
jle
ror
test
aaa
cwtl
scas
push
jg
or
pusha
in
imul
shlb
inc
mov
stos
inc
xor
ds
xchg
out
jns
xchg
pushf
and
ficompl
xchg
js
ljmp
repnz
ljmp
daa
int3
movsl
jmp
inc
mov
sub
je
outsb
jl
je
push
mov
sbb
fs
popf
lret
out
mov
cmp
test
adc
jne
sbb
int3
adc
stc
or
lock
test
lret
test
mov
mov
adc
stos
push
xor
aad
sarl
push
addps
pop
adc
jge
inc
daa
pop
in
cs
mov
adc
hlt
mov
ret
cmpsl
test
pop
loopne
movsb
test
dec
mov
jns
jmp
xchg
pop
sub
add
mov
and
pushf
xor
insl
xchg
lret
dec
orb
push
lret
mov
inc
andb
repz
cmp
mov
stc
adc
and
mov
test
repz
mov
xchg
mov
dec
sbb
push
enter
push
dec
mov
repnz
sbb
xchg
mull
shl
in
mov
fwait
xor
jb
mov
insl
adc
ss
js
dec
or
outsl
pop
movsl
sub
pop
and
pop
nop
push
cmp
aas
push
lock
ss
loope
inc
cli
sbb
adc
lea
out
pop
or
sahf
cmc
decb
cli
sub
lods
inc
mov
in
icebp
dec
pop
jge
jne
andl
test
xlat
out
mov
or
stos
out
aad
mov
sbb
mov
jb
nop
imul
xchg
dec
dec
popf
es
adc
xchg
jp
lods
mov
sub
or
cmp
pushf
pop
xchg
addr16
mul
lahf
stc
inc
jbe
int
sbb
mov
cmpl
mov
faddl
mov
rcr
add
insl
icebp
dec
into
cmp
xlat
fsubl
int
xchg
test
jb
ret
push
loopne
inc
outsb
imul
adc
sub
outsl
push
mov
pop
jle
jae
aam
lcall
push
pop
insl
lcall
xchg
insb
imul
cmp
push
dec
pop
call
fisttpl
inc
push
ret
dec
sub
sbb
insb
fs
add
cmp
mov
jp
test
push
pop
imul
pop
cmp
mov
pop
jne
mulb
imul
js
xchg
icebp
scas
xor
call
sbb
scas
into
scas
push
dec
mov
add
out
mov
inc
imull
iret
cmpsl
or
into
movsb
mov
lods
pop
iret
dec
loope
xchg
xchg
mov
xchg
and
mov
dec
inc
push
inc
stc
push
stos
pop
leave
push
cmp
lds
pop
addr16
xor
push
xchg
int3
dec
mov
adc
inc
cmp
sub
or
mov
enter
andl
jb
dec
sub
testb
inc
jp
cmp
xchg
xor
test
mov
aad
sub
psrlq
sarl
daa
push
lea
sub
pop
push
gs
inc
in
popa
push
pusha
mov
cltd
addr16
and
fdivr
push
aaa
pop
std
ds
jmp
cltd
aas
add
pusha
fimull
cmpsb
mov
pop
imul
jb
mov
push
scas
xchg
repz
xchg
aas
scas
js
xchg
sbb
add
jecxz
cmc
fst
mov
ss
jmp
icebp
and
sbb
push
pop
out
and
mov
repz
daa
rcll
fwait
test
push
fwait
cmp
rcrb
push
xchg
mov
mov
psubd
mov
cmpsl
xor
fs
xor
outsl
xor
pop
inc
push
add
add
faddl
jl
adc
jg
mov
and
mov
dec
fsubrp
mov
inc
jno
cmp
sar
mov
lcall
cmp
hlt
mov
mov
sbb
test
popa
in
cmp
xor
xor
push
loop
dec
jnp
jle
or
dec
sbb
into
lldt
iret
popf
fldcw
sub
push
shlb
js
mov
jo
sub
and
mov
mov
aam
and
mov
call
xchg
repz
cmpsb
inc
imul
dec
lods
mov
xor
dec
outsb
mov
dec
fnstenv
mov
pop
out
or
iret
inc
sbb
fidivrs
mov
dec
out
pop
mov
cltd
jno
jecxz
push
ds
sub
inc
cli
adc
sub
and
xchg
stos
dec
push
insl
adc
cs
je
stos
xor
and
in
lock
lahf
push
jmp
fwait
jecxz
xchg
pop
out
or
lods
popa
and
in
popf
mov
adc
sub
lahf
push
inc
jno
jmp
jo
movsb
adc
rcrl
popa
popf
jnp
cwtl
aaa
jecxz
xor
fisubrs
add
repnz
sbb
add
mov
push
sahf
xor
movsb
clc
adc
shll
xchg
mov
or
mov
scas
adc
lret
flds
loop
and
daa
adc
mov
ljmp
lods
mul
insl
gs
add
mov
rclb
jbe
cmp
fisttps
pop
sbb
cmc
and
inc
fs
cli
sub
sbb
cld
out
push
mov
repnz
clc
out
xchg
sub
xchg
or
stos
int3
shll
xchg
outsl
cmc
xor
push
sub
add
xchg
daa
add
cmp
pop
mov
lcall
iret
test
in
fidivrl
enter
xor
jno
mov
sbb
sbb
mov
mov
xchg
mov
hlt
ret
cmp
outsl
adc
xchg
in
xchg
hlt
out
fists
mov
fldt
dec
in
sbb
pop
iret
jge
pop
xchg
cmpl
in
push
push
shld
jb
xor
arpl
hlt
xchg
sbb
outsb
sub
jno
mov
or
imul
test
adc
or
fsubrs
ret
push
jecxz
and
decl
xchg
and
out
inc
xor
and
ror
lcall
and
cmp
pop
adc
gs
xchg
mov
and
mov
ret
mov
jno
testb
jecxz
jo
dec
aam
movsl
es
ret
jo
test
xor
mov
pop
push
clc
or
jmp
test
push
jecxz
loopne
or
sbb
mov
pop
sbb
pop
and
test
pop
in
call
int3
xor
sub
and
sbb
stc
imul
or
clc
sub
sbb
cltd
mov
cmp
cmc
into
sub
je
lea
jno
push
cmpsb
loopne
jp
pop
pop
and
mov
cmpsb
decb
inc
dec
fdivrp
push
fwait
loopne
jge
cmp
test
lods
out
les
dec
lcall
xchg
enter
popf
mov
das
loop
push
add
je
cli
iret
shl
xor
jno
push
popa
mov
sti
pop
shl
clc
test
dec
jle
lds
xchg
pop
sub
mov
dec
out
popf
movsb
push
sahf
jg
scas
jmp
test
adc
jo
mov
mov
fiaddl
call
cmc
inc
cli
ret
call
push
push
adc
test
xchg
sbb
dec
ss
pop
scas
les
adc
pop
sub
rcrl
add
pop
mov
cltd
cld
mov
adcl
stos
shll
jmp
out
pusha
imul
cmpsb
jbe
push
sbb
jmp
push
push
xor
jb
mov
xor
or
inc
repnz
jno
and
mov
or
push
mov
push
jno
adc
fistps
dec
std
int
lahf
shl
xor
ret
mov
inc
xchg
gs
dec
outsb
test
ljmp
hlt
inc
jecxz
movsb
add
bound
adc
dec
cld
mov
xchg
push
in
mov
jo
cs
sbb
shr
dec
ja
hlt
cmp
and
xchg
pop
push
subl
pop
sub
in
dec
sub
jl
fcomps
sarb
mov
test
mov
insl
mov
repnz
cmpsl
jecxz
jmp
aas
adc
mov
mov
or
nop
leave
or
pop
data16
scas
mov
push
lcall
xchg
test
dec
int3
test
mov
sbb
mov
mov
cmpsb
jnp
xlat
push
aaa
and
mov
jo
and
xor
ret
bnd
adc
outsl
call
std
mov
sub
les
inc
jl
ds
enter
fcmovbe
iret
mov
jbe
int
pop
jno
shlb
dec
daa
pop
std
testb
add
test
stos
pop
inc
and
xlat
mov
andb
sbb
filds
fbld
aaa
lret
fs
push
mov
sti
mulb
mov
inc
mov
jo
jmp
cld
dec
out
inc
mulb
scas
dec
stos
mov
fdivrp
inc
outsl
das
jle
je
jb
sub
xlat
repz
or
movsb
pop
ljmp
mov
icebp
adc
jge
mov
mov
dec
loope
mov
cwtl
xor
and
insb
and
mov
ret
cmc
insl
pop
jnp
and
jle
mov
jmp
test
add
ljmp
es
push
dec
jge
dec
dec
out
das
cmp
fstps
sbb
aas
mov
cmpsb
mov
ds
mov
dec
pop
jns
xchg
out
outsl
sub
xor
fisubs
ret
jmp
mov
loop,pn
jecxz
dec
adc
mov
cmp
add
ss
mov
les
or
mov
loope
sbb
pop
push
ljmp
in
jle
test
jle
into
sub
mov
xor
lret
int3
loope
into
sahf
outsl
cmpsl
stos
dec
mov
lock
out
cmpsl
add
mov
repz
pusha
cld
mov
enter
xchg
sub
pop
stos
push
add
ret
inc
add
xor
pop
scas
fistps
shlb
popf
es
shrb
xchg
in
jno
pop
or
inc
in
je
in
xchg
inc
cmp
push
nop
and
jnp
mulb
ds
sbb
insl
das
jmp
test
mov
icebp
imul
call
push
in
jmp
lret
xor
into
or
push
out
fsubrs
hlt
push
iret
loopne
loopne
insl
dec
cmp
and
push
jae
jae
cmpsb
scas
mov
pop
cld
mov
rcll
pop
pop
mov
dec
xor
fnstcw
in
push
mov
xchg
and
cmp
push
push
mov
imul
sbb
pop
pop
sbb
bswap
cltd
call
test
push
aad
mov
jns
push
cli
xor
js
out
jae
mov
cs
fldenv
pop
or
xor
mov
lret
bound
loope
cmc
push
insb
xorb
jmp
outsl
mov
dec
test
pop
adc
adc
xchg
cmc
sbb
ds
cmp
gs
or
test
lcall
push
call
mov
or
jns
pusha
add
and
fwait
cmp
es
lahf
test
jno
out
add
mov
fstpt
adc
cltd
push
and
test
sbb
das
fadd
sbb
xor
mov
daa
addr16
decb
inc
mov
fistpl
test
cld
sbb
adc
nop
icebp
push
fidivrl
inc
add
adc
push
mov
cmp
in
mov
jbe
aaa
icebp
sub
jbe
inc
jmp
jo
scas
mov
xor
sub
jge
addl
das
bound
dec
mov
fmul
bound
add
pop
lock
repz
adc
jecxz
je
rcrl
mov
fbld
shl
inc
mulb
sbb
push
in
pop
shll
outsb
xor
in
cltd
sub
test
or
loopne
sbb
add
in
mov
cmp
mov
xchg
mov
outsb
jmp
push
mov
xchg
xchg
out
or
mov
mov
es
dec
or
add
lret
iret
lods
jmp
bound
mov
push
inc
push
adc
leave
dec
xchg
lock
cmp
adc
add
lahf
push
jne
add
dec
stos
pop
xchg
pop
sbb
aas
adc
jae
sti
sub
nop
xchg
icebp
pop
dec
icebp
mov
int3
add
lods
mov
stos
add
xlat
imul
sub
mov
xor
sbb
dec
jo
sbb
ret
mov
pop
inc
fimuls
mov
push
icebp
pop
cmp
and
movlps
xchg
sub
inc
ret
mov
fisubrs
xchg
stc
ds
les
sub
or
aam
or
dec
ret
imull
sahf
pop
or
loop
pop
xchg
jo
lcall
int3
scas
push
lcall
xlat
jmp
cmp
cwtl
push
mov
mov
adcb
dec
push
dec
das
fldl
mov
lods
iret
push
jnp
mov
cmpsl
imul
lods
stos
in
pop
or
leave
sbb
scas
pop
push
mov
insl
push
cmpsb
mov
push
aam
xchg
pop
jno
fwait
sbb
lea
jbe
mov
and
sti
inc
jg
push
dec
jbe
fnstcw
lds
test
cmp
jg
lret
inc
and
sbb
or
test
pop
into
movsb
jae
pushf
mov
sbbb
addl
dec
pop
xchg
iret
fsubl
inc
gs
dec
mov
idivl
hlt
sbb
imul
or
ss
cmpsb
dec
sahf
mov
into
cmp
ja
loopne
jo
outsb
mov
movsl
into
aam
sub
xor
mov
xor
sbb
push
inc
sbb
dec
lret
add
mov
xor
add
add
lcall
test
jbe
iret
movsl
cmp
add
dec
xchg
adc
sbb
divl
aam
mov
mov
and
dec
fwait
inc
xchg
fdivr
or
pop
cmpsl
leave
rcrl
and
imul
sti
iret
shrb
or
xchg
lcall
cmpsb
dec
mov
fiadds
add
sub
scas
lods
cwtl
aad
sbb
pop
sti
adc
cli
push
xor
or
mov
push
sbbl
outsb
mov
or
inc
adc
ljmp
sub
cmp
dec
test
cs
test
push
in
mov
mov
mov
add
inc
inc
mov
inc
push
xor
pop
jo
popa
xchg
xchg
add
sti
add
mov
sbb
testb
and
loope
pusha
leave
stc
jns
lods
mov
adc
das
mov
xor
and
lcall
sub
push
lcall
dec
push
adc
add
dec
sbb
popaw
jo
rorb
stos
icebp
rcl
and
xor
pop
cmp
mov
sub
aas
in
fidivrs
outsl
aad
scas
xor
nop
or
xor
jp
icebp
jno
inc
xor
jp
jbe
addr16
loopne
sub
ljmp
adc
push
jns
jne
je
sbb
sbb
test
mov
popf
in
shlb
push
push
dec
mov
push
js
mov
cli
sub
loopne
xor
jle
aas
stos
mov
jle
inc
mov
jmp
mov
add
mov
jecxz
pop
or
ss
pop
data16
bound
insb
dec
sub
inc
inc
gs
cli
cmp
inc
repnz
aam
pop
rcrb
inc
mov
inc
xchg
xchg
in
mov
push
mov
leave
out
les
lock
pop
jns
movsb
jp
cmpl
mov
inc
out
lods
in
xchg
out
adc
pop
mov
cmpsl
adc
mov
ljmp
xor
inc
das
xchg
orb
jb
sbbb
cli
xchg
rcll
pop
xchg
bnd
movsl
arpl
aas
sub
pop
adc
push
or
adc
popa
iret
das
mov
lea
sbbl
fldcw
mov
mov
popf
leave
sti
xchg
repz
cmp
pop
mov
nop
shrb
orb
data16
cmc
es
lods
inc
or
mov
nop
cmc
lea
rolb
xorl
pop
nop
pop
in
les
sub
mov
sti
popf
mov
cwtl
cmp
jl
sbb
and
stc
push
pop
pop
inc
mov
mov
icebp
sbb
push
inc
add
js
ror
dec
cmp
fildll
lds
add
inc
jnp
mov
ds
enter
dec
incb
daa
push
add
into
repnz
add
xor
add
xlat
loopne
cltd
fsubs
mov
xchg
sub
repz
push
xor
frstor
repnz
adc
mov
rclb
add
mov
sub
xor
in
fs
dec
stc
cmp
aad
sbb
inc
test
loop
xlat
jge
scas
add
je
ret
dec
stos
aas
cli
pop
cmp
addb
jne
pop
subb
or
sti
aas
insb
pop
imul
imul
stos
sub
push
shlb
mov
loop
nop
dec
insb
test
test
sub
cmpsb
nop
adc
sbb
js
mov
dec
cmp
jo
mov
add
sti
call
fsubrl
jb
sub
inc
xchg
scas
bound
inc
sbb
in
movsl
mov
mov
pop
push
xchg
out
xchg
dec
out
std
xchg
jecxz
lahf
sti
add
call
fcomp
notl
adc
gs
iret
inc
inc
fwait
inc
rcrl
dec
push
movsb
mov
popf
sbb
test
mov
push
cmp
adc
mov
lcallw
inc
or
dec
xor
jns
out
shl
push
shl
inc
and
jg
in
sbb
jns
outsb
pop
mov
in
mov
push
movl
subl
cmp
mov
enter
push
in
pushf
inc
cltd
lahf
xor
sbb
in
fstpt
xlat
push
mov
mov
inc
pop
cli
in
pop
cmp
mov
mov
fldcw
lret
out
int
sbb
inc
hlt
in
mov
xlat
fsubrl
out
jnp
mov
ljmp
push
mov
sbb
xchg
and
cmc
adc
mov
mov
fisubs
lea
ljmp
sbb
rcl
mov
pop
fcomps
nop
add
aaa
adc
xor
jae
or
addr16
adc
clc
pop
sbb
loope
icebp
rorl
adc
jg
mov
xor
xchg
xchg
int3
js
dec
daa
mov
int
out
loopne
ficoms
jae
in
and
xchg
pop
xchg
lds
cmc
cwtl
repz
in
inc
and
jge
shl
popf
in
jg
add
jge
and
je
nop
loope
push
clc
cmp
gs
add
enter
or
jno
push
ret
int
mov
loope
fwait
in
sub
into
inc
cs
aam
mov
popa
popa
jnp
insl
push
sarb
sub
popa
iret
jp,pn
dec
lret
mov
pop
dec
mov
loop
and
stc
xor
cli
pop
sbb
mov
neg
fisttpll
mov
dec
mov
push
cltd
cmp
mov
and
mov
jmp
sahf
dec
insb
les
lahf
in
mov
popf
out
add
vandnps
adc
cmc
xor
inc
or
icebp
shufps
pop
repnz
and
aas
add
jecxz
mov
test
jns
in
fldt
popf
pop
lock
out
mov
data16
xor
xchg
sub
inc
int3
mov
sarl
test
xor
adc
fnstcw
push
dec
fnstenv
jns
out
inc
jg
sti
cmpsl
scas
xor
std
and
adc
mov
shrl
lret
aaa
and
xlat
and
insl
cmp
xlat
jb
fmull
inc
xchg
mov
mov
call
push
fs
popa
repz
xchg
jmp
jns
aam
dec
push
adc
jp
cld
movsb
or
push
xor
mov
pop
push
mov
add
int
sub
mov
clc
xchg
rcrb
repz
adc
dec
lret
and
push
lods
es
nop
or
nop
bound
push
out
adc
pop
jae
cmp
jle
dec
int3
adc
sub
mov
or
in
cmc
lods
sbb
sub
lret
and
aad
shrl
mov
popa
xchg
ss
incl
pop
inc
sbb
mov
outsl
add
and
inc
into
pusha
mov
loopne
test
clc
insl
sub
int3
mov
in
mov
or
ss
jmp
icebp
sbb
scas
iret
adc
or
and
pop
addr16
cmp
mov
inc
scas
adc
cmp
and
jbe
xchg
pop
das
jns
cli
and
adc
xchg
call
lret
mov
mov
cmpsl
xlat
or
ret
xor
scas
or
int3
lahf
jmp
hlt
mov
rcrl
out
lret
xchg
out
push
into
pop
jmp
push
popa
adc
cmp
stos
aam
addr16
fildl
and
pop
sbb
mov
mov
xor
or
inc
mov
and
lahf
dec
mov
testb
dec
mov
xor
push
in
aad
jbe
jmp
out
push
mov
add
cmpsb
mov
mov
cwtl
xchg
aad
or
clc
call
mov
pop
sbb
jae
dec
shl
xchg
inc
iret
mov
mov
lahf
cmc
inc
and
mov
fcompl
pop
aas
jbe
shufps
xchg
sub
add
cmpsb
inc
xchg
lods
das
push
mov
lods
ret
sbb
jg
dec
ja
push
and
pop
cwtl
and
cmp
add
in
mov
popa
mov
repnz
sub
mov
ljmp
mulb
jno
mov
sbb
add
mov
ja
lcall
fstpl
in
cli
xor
stos
scas
cmp
inc
popa
xchg
inc
dec
adc
dec
rorb
data16
rolb
cld
fldcw
dec
dec
mov
dec
imul
cwtl
or
out
pop
adc
push
push
inc
and
rcrb
call
mov
pushf
loope
negl
lret
shlb
das
lods
jg
out
xchg
sbb
inc
jo
push
xlat
out
mov
xchg
ja
xor
and
sbb
cs
adc
push
sbb
movsb
cmpsl
xlat
pop
add
loope
loop
out
adc
push
cmpsl
mov
jecxz
loopne
cli
js
mov
mov
or
scas
out
dec
jne
dec
lods
les
cmpsl
pop
leave
push
push
jl
xchg
cmp
sbb
jl
pop
ss
outsb
cmp
mov
or
mov
fldt
subl
inc
jae
and
jl
dec
and
mov
sub
jl
add
std
leave
and
inc
in
fsub
push
sub
cmp
test
pop
pop
loope
idivb
mov
inc
push
insl
jmp
fisubrs
mov
jle
pop
adc
add
lds
or
xchg
dec
out
test
sti
lret
iret
stos
xchg
add
gs
add
mov
imul
pop
xchg
fisttps
sbb
xor
mov
sub
mov
in
sahf
adc
leave
sbb
sbb
lret
mov
sbb
mov
dec
mov
fwait
mov
add
xlat
int3
jns
xchg
adc
push
pop
adc
pop
stos
push
cmp
xchg
rcrb
pop
dec
dec
int
dec
test
or
cmp
add
sub
push
dec
test
pop
dec
iret
pop
pop
scas
adc
aad
les
jecxz
and
adc
or
daa
in
inc
pop
adc
jg
or
and
test
loop
push
mov
mov
jmp
jns
adc
mov
xor
mov
dec
outsl
rorb
mov
xchg
inc
mov
loop
lods
stos
mov
jne
push
sub
adc
lret
aaa
out
mov
sbb
stc
sahf
cmp
gs
test
mov
mov
orb
push
sbb
lock
mov
xchg
test
mov
sub
dec
test
rcrl
jbe
mov
out
jns
aas
mov
mov
push
xlat
or
xor
jge
lods
stos
cwtl
or
stos
aas
xor
xorb
xchg
sub
jb
add
cmpsl
and
mov
adc
inc
pop
outsl
ja
dec
in
mov
scas
cmp
push
sahf
in
rol
xor
dec
jo
lock
cli
cmp
fisubl
sub
negl
out
fs
dec
cmp
test
sub
and
fcomps
jae
pushf
pop
repz
fidivrs
lea
jg
add
fcoml
mov
aad
pusha
adc
movsb
gs
aad
adc
and
pushf
add
dec
mov
adc
dec
fmuls
mov
cmp
int3
fstp
add
and
in
mov
cmp
pushl
data16
xor
pop
aaa
adc
aas
fcomps
fcompl
inc
lret
sub
jo
push
push
and
mov
notl
add
test
xlat
js
cld
mov
and
ds
je
push
lods
in
and
jae
or
fisubrs
add
jmp
fucom
sti
add
jle
scas
push
addr16
fnsave
xchg
cs
push
loop
ds
pop
rorl
or
pop
in
push
add
inc
outsl
mov
mov
orl
mull
imul
mov
push
lds
sbb
imul
sbb
pushf
sub
xor
or
or
inc
movsb
push
loopne
out
scas
fildl
jno
pop
pop
into
xlat
mov
add
xor
ljmp
rcr
dec
ljmp
push
insl
push
sub
or
mov
in
fisubrl
mov
push
shlb
cmp
mov
and
rcr
stos
cmpsl
es
sbb
orl
ret
test
jb
adc
mov
decl
cmp
stos
inc
push
mov
inc
cli
adc
or
sub
inc
in
add
xor
push
mov
int3
adc
fdivrp
mov
imul
js
add
cmp
lahf
loopne
jo
out
inc
fstps
into
cmp
loope
sbb
push
mov
mov
insb
mov
minps
outsl
jbe
fdiv
jns
movsb
outsb
xchg
stc
jge
sbb
push
out
dec
xchg
cltd
je
push
mov
jb
mov
popf
mov
int3
xor
sbb
ret
fisttpl
push
outsl
lahf
and
cwtl
sti
jg
imul
pop
clc
sub
lret
mov
jns
cmpsb
fistl
sub
js
xchg
imull
pop
aad
adc
xchg
arpl
cs
test
in
xchg
push
insl
xor
mov
out
aaa
adc
ret
bound
iret
or
push
insb
fcmovnu
rorb
enter
mov
js
and
mov
cmpsl
jae
and
jl
or
mov
adc
jae
push
lret
xor
mov
mov
xlat
push
mov
and
std
jne
add
xchg
sbb
mov
jb
dec
mov
pop
adc
cmpsb
mov
cs
movl
aas
xor
jecxz
orl
inc
rolb
in
mov
fs
or
mov
cltd
test
and
jne
jg
stc
dec
sub
fistl
dec
inc
pop
jae
mov
push
fnsave
and
in
mov
stos
xchg
pop
cmp
stos
out
lcall
xchg
or
adc
inc
movsb
or
xor
cmp
js
sbb
cld
fildl
repnz
test
inc
stos
dec
out
jle
out
cmpsl
push
mov
jl
out
jmp
lahf
std
mov
pushf
or
fdivr
shrl
xor
push
mov
xchg
pop
out
fisttpl
add
aas
inc
fsubr
push
push
ret
call
pop
cmpsl
cmp
push
test
ficoml
js
xchg
mov
idivb
call
icebp
xchg
add
ss
arpl
stos
xor
add
jle
xchg
in
inc
xchg
aad
cwtl
gs
jmp
sbb
cmc
adc
jo
dec
fsubrs
fsts
dec
and
orb
outsb
push
pop
push
not
fiadds
push
add
pusha
sti
insl
sub
sti
stos
xchg
test
mov
push
or
sub
xchg
out
mov
gs
and
xor
stos
das
movsl
mov
sub
pop
adc
lea
fisubs
add
test
pop
popf
fdivp
push
jecxz
adc
sbb
fcomps
add
stc
movsb
pop
xchg
es
jbe
out
test
test
and
mov
mov
sub
add
mov
js
cmp
mov
stos
aam
cmp
and
push
aad
mov
xor
iret
ret
daa
iret
pop
adc
pop
mov
js
es
icebp
xorl
jmp
jl
cld
inc
adc
pop
xchg
fs
loope
push
imul
add
xchg
fisubl
xorl
inc
rorl
and
push
fidivs
fldl
lock
cmp
ret
inc
call
out
jbe
pop
gs
scas
sti
inc
pop
sbb
mov
fwait
cmpsb
add
int3
and
shlb
fcomi
pop
cmpsb
push
inc
hlt
mov
repnz
mov
lcall
cmp
push
insb
in
add
jmp
jnp
add
mov
lahf
push
dec
test
loope
ds
scas
add
dec
incb
aas
pop
aas
ror
ljmp
xor
cmp
xchg
inc
xchg
shll
push
movl
xor
popa
sub
xchg
sbb
ret
cmp
xchg
sub
pop
test
and
ror
popa
lods
out
xchg
or
lods
mov
subb
loope
cmc
out
cmp
push
mov
dec
ret
pop
add
sbb
mov
or
jp
cld
adc
ljmp
sub
dec
lock
mov
cmp
addb
lcall
sbb
adc
xlat
xchg
adc
pop
pop
fidivs
jbe
mov
mov
std
popf
mov
add
mov
loopne
repz
inc
jg
dec
xchg
push
pop
xor
jge
ret
inc
jb
sbb
out
mov
sbbb
cs
cli
xor
pushf
std
sub
stc
cld
ret
ja
and
mov
cmova
mov
bound
aas
pop
fldt
mov
push
adc
xchg
pop
sbb
xor
mov
xchg
inc
mov
adc
stos
cwtl
mov
loope
aam
sbb
int
push
icebp
sub
sub
lret
ljmp
mov
data16
jg
inc
pop
outsb
fildl
dec
pop
in
or
adc
mov
roll
sub
add
fcomps
inc
mov
xchg
sub
jns
addb
das
dec
ror
xor
ljmp
lds
lahf
sbb
xor
jl
push
dec
insb
fsts
sbb
adc
pop
in
add
cwtl
ret
and
xchg
mov
arpl
repz
fcoml
sbb
dec
mov
mov
or
in
push
sbb
scas
sub
push
loope
cld
add
lods
in
mov
xchg
lcall
or
arpl
in
cmpsl
jns
adc
xchg
dec
lock
xchg
jmp
jnp
sub
xor
lcall
xchg
dec
mov
and
cmp
cmpl
rorb
mov
sbb
popa
mov
in
mov
add
out
mov
fmulp
iret
inc
rcrb
jne
pop
and
mov
mov
jne
inc
sbbl
xchg
imul
cmp
mov
pop
push
popf
rolb
dec
xchg
push
gs
jp
xor
movsb
jecxz
pop
jmp
add
in
xlat
std
mov
cmc
jl
adcl
test
sub
cmp
je
decl
mov
xchg
xchg
xchg
scas
pop
inc
dec
mov
mov
lods
fwait
outsb
inc
stc
leave
xchg
aas
dec
push
mov
outsl
addr16
mov
push
enter
outsl
repnz
pop
notb
dec
and
ljmp
adc
xchg
int
sub
cmp
cmp
aaa
insb
mov
push
shrl
scas
inc
mov
sbb
aaa
mov
cmpsl
test
addr16
sub
jg
es
mov
mov
mov
int3
daa
stos
test
popl
cwtl
inc
sbb
mov
es
bound
int
cmpsl
push
ja
fstps
add
scas
lea
sbb
xchg
sbb
sahf
push
mov
mov
mov
fidivrs
test
out
jb
mov
cmp
adc
inc
mov
aad
addr16
shrb
jecxz
mov
sub
push
adcb
dec
imul
fistpl
push
xchg
ja
popa
sar
les
lret
sub
movsb
in
fmull
and
in
gs
pop
movsb
mov
rorb
cmp
out
sub
sbb
and
scas
push
and
out
enter
shl
mov
jb
dec
xchg
fndisi(8087
pop
xor
test
jle
inc
or
jg
cmp
pop
data16
push
adc
xchg
jae
add
xor
mov
push
jp
nop
sub
dec
push
fdivs
je
mov
sbb
xor
push
push
jl
jae
mov
mov
stos
dec
push
push
outsb
mov
jno
les
dec
daa
or
xchg
movsl
xchg
call
xlat
pop
shlb
mov
push
int
xchg
pusha
sub
ror
inc
inc
jnp
cmp
flds
out
inc
or
test
sbb
shrb
int3
loop
sub
cmove
sarl
and
call
xchg
data16
mov
sub
xor
pushf
not
jne
pushf
inc
push
and
mov
cmpsw
lea
test
sti
push
out
sub
fldz
mov
add
mov
shll
cmp
jge
int3
mov
xor
call
outsb
roll
xchg
and
xchg
mov
inc
sub
pop
cmp
dec
xchg
xorb
insl
sub
sarl
mov
mov
es
call
jecxz
sub
dec
aaa
xor
push
das
int3
and
out
jne
cmp
dec
mov
ja
mov
cmpsb
fisubrl
mov
sbb
jbe
shl
lahf
mov
sub
jbe
jge
jmp
ficoms
xchg
mov
stc
mov
int
ds
pop
test
shlb
clc
xchg
outsl
push
in
mov
jno
cmc
push
inc
rcrl
mov
xor
pop
imul
repz
dec
lret
jo
push
sub
cmc
or
add
mov
lea
xor
or
jne
pop
and
cmp
fwait
xor
js
cmp
lds
fcmovne
xor
shll
lahf
push
push
cmp
aam
sub
inc
dec
orb
xchg
pop
rcll
mov
cmp
or
test
loopne
cld
testl
iret
popf
int3
shlb
xor
jle
inc
jne
ret
push
jnp
inc
dec
push
mov
pop
adc
sub
test
push
push
movsl
sbb
push
dec
push
int3
sub
or
jg
or
jmp
sub
mov
aas
mov
out
jmp
test
or
mov
mov
inc
pop
inc
jbe
fistpll
adc
sahf
es
dec
adc
pop
hlt
mov
aam
mov
push
aas
sub
sbb
xor
push
xor
or
fcomp
push
sub
or
cmpsb
and
sub
insl
fwait
adc
rclb
call
xor
cmp
enter
dec
xchg
lock
ret
call
fcompl
cmp
or
xchg
or
mov
aas
out
and
repz
add
mov
push
mov
dec
mov
int
fwait
xor
test
mov
scas
sbb
mov
lock
pop
xchg
insb
out
shrb
inc
iret
out
jp
sbb
xchg
decl
adc
ror
fildl
inc
inc
test
sub
dec
ds
out
sbb
es
stc
mov
insl
mov
push
lds
pop
mov
sbb
xchg
pop
or
adc
mov
xchg
notb
aam
leave
ljmp
movsb
sbb
ja
cmp
inc
movsb
inc
push
das
test
arpl
inc
pushf
ljmp
xor
nop
xchg
lret
repnz
cmp
push
in
cmc
jle
sbb
cmc
dec
lahf
xor
paddusw
xchg
ljmp
sti
add
iret
aaa
fnstcw
out
push
call
scas
dec
jl
sbb
sub
jmp
jmp
sub
ficoms
xor
xchg
ret
mov
mov
mov
aam
dec
jo
arpl
mov
popa
jecxz
jp
shll
test
popa
rolb
pop
inc
fcmovnb
lods
dec
mov
out
jmp
push
mov
jnp
pop
mov
rcr
dec
cmp
lret
roll
scas
filds
test
mov
int3
jns
mov
push
insb
jns
decl
enter
or
or
lret
icebp
adc
inc
fucomi
lahf
push
inc
cmp
or
int
loope,pn
and
or
xor
fwait
jecxz,pt
dec
xor
add
push
add
sbb
push
sbb
mov
cwtl
mov
jg
js
inc
insl
inc
lods
jb
mov
arpl
mov
aam
mov
inc
loop
stos
jno
out
push
cmp
les
xor
and
adc
jb
addr16
sub
aas
icebp
das
or
imulb
mov
insb
sbb
jae
jae
xor
xor
rorl
cmp
push
pop
pop
test
lea
outsl
add
das
andl
in
add
adcb
out
rclb
lods
sub
in
lcall
notb
insb
push
cmc
sub
xchg
sti
jns
rcr
jae
sub
xchg
aaa
jbe
pop
mov
adc
jns
sbb
aad
mov
add
adc
mul
andl
or
inc
fimuls
dec
sub
mov
lock
xchg
out
and
xchg
adc
inc
xor
mov
ds
scas
and
xchg
jp
stc
lods
xchg
sub
cmc
xor
pop
jbe
adc
outsl
add
sbb
mov
cmp
add
jb
dec
inc
insl
mov
fstpl
mov
dec
or
fdivl
je
cwtl
sbb
mov
cli
faddl
jge
add
fnstcw
adc
xchg
in
adc
dec
add
out
xor
or
in
cmp
cmp
bound
and
sahf
push
outsb
mov
pop
aas
mov
mov
mov
test
dec
dec
les
scas
loopne
pop
aas
mov
jmp
cli
icebp
pusha
adc
in
cld
inc
push
dec
mov
lcall
sbb
movsb
xchg
cwtl
mov
lret
test
test
repz
jns
xchg
cmp
adc
test
xor
into
dec
cwtl
add
jp
push
mov
test
push
adc
sahf
inc
imul
popa
jae
mov
mov
inc
sub
ja
aad
jno
notb
dec
xor
loope
push
lahf
lods
xchg
xlat
cmp
imul
dec
push
cltd
in
mov
mov
cmpsl
inc
inc
rcrb
repnz
stos
lea
roll
or
jg
jmp
add
push
sti
xchg
and
mov
into
jbe,pn
cmp
dec
je
mov
mov
mulb
push
pop
sub
inc
sar
shrl
adc
sti
jns
int
mov
pop
pushf
pop
cmp
loopne
pop
xor
jg
add
test
sbb
dec
nop
or
mov
repnz
mov
loope
or
aaa
push
scas
cltd
cs
mov
cmp
ljmp
push
and
xchg
in
xchg
test
jno
lods
push
std
jno
aas
pushf
addr16
scas
cmpsb
stc
mov
lret
outsb
xchg
add
lret
lock
stos
xchg
shlb
jl
cmp
data16
ret
in
mov
pop
test
fwait
stos
jecxz
xchg
inc
negl
xor
jns
or
mov
or
not
cmpsl
lods
inc
and
xor
ret
or
mov
test
jo
mov
cmp
pop
xlat
leave
push
and
xchg
mov
loopne
fisttpll
out
cmpsl
sbb
out
dec
adc
cmpsl
test
inc
daa
cld
aam
mov
jmp
lcall
inc
inc
mov
and
mov
xchg
stos
cmp
sbb
xlat
inc
mov
and
dec
lea
pop
jmp
sbb
pusha
sbbl
sub
stc
adc
mov
mov
mov
fwait
out
xchg
addr16
bound
mov
cwtl
outsb
call
lock
arpl
imull
ss
lret
xor
mov
push
movsl
sbb
and
pop
xor
andb
jo
sub
cmp
inc
ss
jge
iret
dec
in
sub
inc
dec
rcrl
in
xchg
outsl
es
into
popa
aam
pushf
xor
fisubs
dec
scas
mov
lea
rol
mov
pop
sbb
or
and
push
and
lods
pop
pop
add
push
adc
inc
adcb
push
jmp
divl
lds
nop
add
dec
xor
inc
push
shrl
out
xor
and
subl
int3
int
add
sbb
jne
push
pushf
and
cmp
xchg
into
popf
into
xor
popa
push
push
inc
mov
pop
fs
jbe
push
adc
sub
push
out
cmp
push
adc
fs
js
xchg
jp
pop
vmovaps
into
mov
adcl
stos
and
addr16
ret
test
popl
test
dec
push
adc
jne
je
mov
clc
push
lret
lcall
ds
xchg
rclb
xor
add
push
aaa
mov
xlat
xor
mov
cmp
jo
dec
jae
cmp
ja
xor
inc
mov
jle
neg
in
xchg
fwait
adc
bnd
in
mov
fidivl
aas
dec
mov
fimull
jo
push
ficoml
adc
sti
scas
xlat
dec
or
cmp
xlat
push
ret
sbb
inc
xor
mov
lahf
mov
mov
in
push
mov
cmp
outsb
push
mov
sti
sbb
stc
mov
sbb
jne
lret
xchg
add
inc
testl
push
or
in
pop
add
mov
stc
inc
fbld
roll
xchg
in
dec
int
xchg
mov
cli
je
outsb
stc
repz
mov
in
cli
fistpll
ficoml
loop
sub
aas
aam
movsl
sbb
addl
push
push
cmp
shll
cli
add
sub
mov
sub
ss
jne
and
add
addr16
rcll
or
cli
jbe
jecxz
mov
jb
pop
test
cmp
cmp
add
adc
aas
and
lds
hlt
add
lds
cld
or
inc
and
and
pop
subb
jl
add
push
cmp
mov
push
stc
and
dec
int
roll
xor
pop
mov
dec
cmp
lea
jmp
test
inc
in
mov
imul
lahf
push
mov
xor
mov
int
jmp
leave
add
je
xchg
fwait
inc
push
xchg
cltd
pop
adc
xor
xor
stos
mov
add
mov
mov
sbb
sbb
lcall
insb
pop
in
xchg
movsl
out
lahf
or
mov
xchg
mov
es
xor
rorl
inc
fs
loop
and
push
jecxz
hlt
dec
popl
jae,pt
mov
adc
and
out
and
jmp
xlat
mov
mov
aam
cmovb
sbb
or
add
ja
in
js
adc
ficompl
or
flds
stos
les
mov
jo
pop
and
enter
jb
leavew
nop
cmpl
mov
sub
pop
stos
xchg
and
cmp
sub
inc
int3
int
in
ret
jmp
data16
imul
mov
fcoms
sub
ficompl
xchg
popf
xorb
fcmove
ljmp
jecxz
fnstcw
std
mov
movsb
push
add
lcall
pop
fsubr
shrb
push
xor
push
xchg
push
xor
cmpsl
lahf
out
xchg
xchg
adc
jl
jb
ss
cmpsb
push
add
sbb
aam
cmp
mov
sub
adc
add
pusha
adc
xchg
ret
mov
xor
push
imul
or
dec
addr16
cmp
push
loopne
mov
int3
test
mov
cmc
outsl
add
lea
cmc
xor
dec
or
xchg
jg
leave
push
mov
repz
pop
sti
popa
lods
fsubr
adc
and
aam
mov
adc
and
or
movsb
in
sbb
xlat
and
sbb
pop
mov
cmp
aad
stc
push
ret
and
push
pop
sahf
int3
mov
cltd
outsl
sbb
jl
ret
rolb
inc
mov
mov
xchg
fstps
aas
in
or
adc
sub
add
push
lea
call
sbb
jae
and
jo
jmp
testb
mov
movsb
shlb
sbb
jg
adcb
mov
xor
clc
sub
dec
sub
cmpsb
into
adc
rcrb
loopne
faddp
cmp
cmp
and
lods
cmp
mov
adc
dec
pop
mov
fistl
mov
loopne
lcall
add
jl
insl
inc
unpcklps
xchg
sub
xlat
mov
arpl
push
lcall
and
and
add
dec
sbb
mov
xlat
mov
rorl
or
imul
fidivrl
mov
shrl
xor
push
test
or
outsl
push
in
cmpsl
mov
loop
scas
or
adc
ficompl
fmul
adc
cwtl
arpl
xchg
testl
sub
in
lahf
pushf
sub
xchg
insl
jecxz
pushf
imul
push
ja
xor
mov
mov
sub
xchg
mov
stc
inc
into
cltd
mov
or
dec
push
mov
mov
inc
aas
roll
xor
popf
fistpl
and
fmul
mov
lahf
andb
pop
sti
sbb
xor
dec
cmp
ret
mov
aas
mov
lahf
cmc
hlt
fldenv
and
inc
inc
into
sub
ja
shl
sbb
mov
outsb
js
sahf
out
sub
ficompl
mov
js
xchg
cwtl
mov
cwtl
push
sti
sahf
or
mov
into
dec
in
add
jo
xor
and
out
lret
enter
cmpsb
ret
popf
xlat
push
arpl
sarl
testb
test
adc
and
jae
call
and
in
ret
jae
data16
loop
or
ret
mov
mov
shrb
cld
jo
mov
xchg
inc
fwait
xor
lcall
insb
into
dec
and
adc
cmp
mov
test
mov
out
or
fdivrp
mov
cltd
push
pusha
scas
outsl
fnstenv
fwait
out
sbb
adc
movsb
js
jecxz
add
mov
fwait
inc
bnd
dec
or
xchg
subb
adc
push
lret
js
fisubs
insl
inc
sbb
repz
shll
subl
cs
adc
cwtl
cli
sti
movntps
jo
gs
pop
cmpsl
xchg
testb
xor
jno
push
out
loope
dec
shrb
outsl
sub
dec
push
pop
mov
cs
mov
repnz
push
loope
test
ret
push
scas
push
xchg
push
rorb
lea
sub
fwait
out
stos
push
test
xchg
lock
cltd
jge
mov
daa
add
insl
sub
insl
and
mov
and
sbb
mov
cmc
movsb
repnz
out
mov
rclb
adc
sbb
xor
shl
jl
lock
cmp
into
and
lret
test
aam
mov
add
jnp
add
mov
aam
ret
aaa
js
fs
sahf
sbb
and
sub
mov
shl
iret
jo
jno
mov
cmp
jmp
sub
inc
nop
cli
in
pop
test
fists
imul
and
cmpsb
add
loop
or
rorl
jnp
ss
mov
xlat
and
lea
lahf
push
dec
xchg
hlt
adc
dec
mov
xor
xchg
cltd
xchg
shrl
or
ret
mov
dec
add
mov
sbb
ret
inc
mov
addr16
sbb
dec
pushf
jb
inc
xchg
pop
jmp
add
inc
inc
mov
jle
bound
and
clc
cltd
and
cli
jp
rorb
mov
xlat
aaa
xlat
inc
xchg
aas
clc
dec
outsl
das
mov
aaa
add
mov
mov
cmc
add
adc
xchg
inc
call
aad
cmp
js
jae
jmp
adc
shrl
pop
mov
inc
jnp
mov
push
xchg
out
add
notb
jns
dec
mov
sub
test
dec
mov
pop
pop
jecxz
mov
adc
sti
or
cmp
push
jl
dec
loopne
cmpsl
dec
imul
leave
push
pop
lcall
test
cmp
xchg
repnz
aas
jnp
ret
xchg
pusha
pop
repz
dec
push
repnz
lahf
xor
sbb
dec
or
in
jg,pn
arpl
aas
repz
inc
dec
adc
in
cmp
cmp
in
testb
or
add
mov
lds
xchg
sub
xor
push
xchg
loope
fistps
or
mov
clc
in
xchg
push
icebp
xchg
int3
sbb
mov
push
insb
lds
pop
adc
push
inc
or
ficompl
addr16
leave
sbb
mov
adc
fcomi
hlt
mov
and
pop
stos
mov
sti
movsl
cmp
std
leave
xchg
push
call
mov
push
cmp
in
jl
mov
dec
mov
pop
mov
inc
clc
lods
into
or
and
faddp
or
or
lods
pop
push
mov
inc
repnz
sbb
mov
cmpl
mov
mov
mov
xchg
fldenv
addr16
jno
cmp
add
fsubs
addr16
mov
sbb
xor
or
adc
repz
and
ret
adc
fistpll
xchg
xchg
mov
daa
add
int
popf
fcoml
mov
std
je
push
dec
mov
xchg
in
pop
call
rcll
test
pop
movsl
in
fstpl
fs
fwait
xchg
mov
push
adc
sbb
mov
xor
fistpl
in
mov
fisubrs
je
loopne,pn
in
gs
into
and
xor
push
pop
mov
xor
mov
push
xchg
dec
into
mov
cmc
inc
and
mov
mov
and
xor
popa
fldl
and
hlt
add
adc
sbb
inc
xor
cmc
mov
sbb
lcall
push
dec
jp
out
jno
hlt
mov
jecxz
cmpb
mov
lds
push
insl
mov
lods
jno
and
mov
mov
int
out
fmull
movsl
pop
cmpsl
mov
int
aam
or
dec
add
addr16
jbe
xchg
xor
insl
xchg
repnz
cmp
inc
mov
outsb
jmp
or
pop
dec
dec
and
std
dec
push
inc
fcom
xorb
rclb
sahf
repz
in
sub
leave
or
sbb
mov
mov
popa
sub
push
dec
test
aas
lods
iret
mov
and
negb
mov
jbe
lock
das
out
xor
insb
outsl
into
test
scas
mov
lahf
pushl
fstpl
cmp
cli
lcall
std
and
adc
dec
mov
adc
sbb
pushl
lahf
pop
dec
adc
jns
inc
xchg
ret
arpl
cmc
aas
cltd
mov
lods
add
stc
push
popa
xor
xor
test
lret
popa
nop
test
or
xchg
in
lods
jae
push
adcb
push
or
loope
data16
popf
xor
xchg
mov
js
add
icebp
or
jne
popa
pop
pop
sub
pop
and
dec
xor
mov
sbb
nop
fdivl
xlat
clc
add
dec
repnz
push
cmp
sub
loopne
push
in
jmp
insl
pusha
jns
push
push
adc
sar
popf
cmp
sub
das
xor
mov
inc
sbb
cwtl
mov
cmpsb
shrb
jae
mov
hlt
jo
out
pop
fidivrs
mov
cltd
in
cmc
dec
push
enter
inc
fstl
ficoms
out
push
in
sub
ljmp
gs
pushl
cmc
inc
cwtl
mov
push
jo
push
or
ljmp
icebp
les
int
pop
cltd
lods
pusha
pop
rolb
add
xor
xchg
jge
add
imul
sbb
pop
testb
xchg
pop
in
add
sbb
inc
mov
fisubrs
xchg
shrl
dec
xor
cltd
aas
or
push
mov
mov
sub
subl
repz
ficoms
dec
jbe
xchg
gs
mov
lods
inc
test
out
inc
ret
xor
cmp
lret
int
cmp
jbe
ja
pop
sbb
mov
lods
sbb
or
push
mov
push
or
fnsave
fiadds
mov
sub
clc
loope
mov
fildl
fs
xor
sar
shrb
jl
adc
adc
aad
loopne
xchg
xchg
push
xor
fimull
cli
nop
imul
test
ret
inc
loopne
or
push
lret
and
sbb
in
idivb
sbb
mov
add
repz
xchg
arpl
das
popf
fs
testb
js
sub
lea
or
mov
ds
pop
jge
lea
jl
lcall
push
rclb
jb
lretw
or
lahf
jns
mov
cmpsb
mov
cmpsb
in
jp
jno
mov
imul
shll
fdivp
test
cmp
movsl
adc
jle
push
lret
aas
add
mov
mov
and
les
mov
arpl
lcall
xchg
loope
mov
dec
pop
cmpsb
xor
cmpb
movsl
pop
pushf
ja
fxch
mov
aas
cmpsb
push
jle
fidivl
jecxz
push
mov
xor
sbb
mov
pop
mov
dec
in
sbb
adc
cmpsb
pop
inc
mov
gs
inc
cmp
sti
push
aad
and
inc
jbe
dec
js
rcll
movsb
loope
mov
sbbb
mov
adc
jmp
imul
add
fdivs
jmp
sbb
pop
sti
pop
test
repz
pusha
jmp
aad
lret
idivb
xchg
fwait
mov
stos
pop
loope,pt
sbb
push
or
leave
add
push
jnp
in
dec
sarl
xor
adc
addb
mov
xor
out
test
pop
mov
dec
aaa
sbb
pop
int
mov
stc
std
jp
inc
and
iret
or
push
add
in
xchg
push
or
stos
mov
pcmpeqd
add
jle
pop
cmp
pop
mov
and
arpl
mov
push
adc
lods
and
aas
jl
lea
inc
or
add
or
data16
pop
movhps
xor
sbb
pop
out
adc
inc
adc
jns
je
adc
push
aas
scas
mov
ljmp
movsl
push
mov
sahf
sbb
sti
push
sub
sub
loop
pop
pop
dec
insl
jmp
sub
and
fcmovnu
ljmpw
mov
fcmovnu
cmp
mov
lret
xor
movsl
fists
mov
test
xor
ret
jg,pt
or
jp
sub
mov
repz
sub
ret
rcrl
cmp
ror
scas
in
mov
movsl
pop
xchg
xchg
pop
fcom
lock
push
call
xchg
mov
pop
out
mov
movsb
rcl
sahf
rclb
or
dec
mov
dec
mov
dec
subl
aam
jmp
sub
mov
push
jno
mov
mov
cmp
mov
add
ficoml
in
xor
jbe
cmp
xor
inc
ss
jge
or
sub
out
and
shll
xor
shl
inc
cmpl
lret
jb
pop
test
out
rcll
into
mov
shlb
imul
repnz
xchg
imul
hlt
addl
sbb
mov
push
adc
jmp
mov
or
nop
imul
jl
cli
jg
fistpll
loop
mov
in
mov
mov
cmc
cmp
sub
xchg
pop
outsb
xor
pop
dec
fwait
test
jnp
popa
jae
mov
or
mov
pushf
xchg
pop
dec
out
int3
loopne
fidivl
jge
inc
test
addr16
fisubrl
test
xchg
lret
js
sbb
in
pop
xchg
sti
sbb
mov
dec
cld
jle
nop
sahf
addl
cmp
fwait
sbb
add
sub
or
mov
and
decl
jb
xchg
lret
sahf
mov
mov
push
mov
std
inc
lcall
mov
test
pop
jno
jg
sahf
sbb
hlt
out
adc
stos
pusha
imul
jae
dec
addr16
adc
int3
popa
mov
cltd
jo
stos
push
xchg
test
adc
roll
push
mov
xlat
pop
cmp
sbb
mov
addr16
inc
mov
xchg
cld
ljmp
pop
in
or
sub
adcl
sbb
mov
call
cmp
sub
bswap
push
fidivl
stc
loope
push
sti
filds
aam
inc
movsl
leave
loop
push
icebp
xchg
aad
push
adc
out
adc
test
mov
cmp
pop
repz
mov
stos
mov
or
sub
das
xor
jbe
incl
push
cwtl
add
dec
fstps
sub
les
adc
jp
fcmovne
loope
data16
lret
outsl
xchg
mov
fst
cvtps2pi
cmpsl
add
insl
inc
cld
lock
fldcw
mov
fs
outsb
daa
pop
dec
mov
test
cld
orb
mov
loop
shlb
sub
sbb
xchg
mov
xor
lds
fwait
add
sahf
outsl
or
mov
inc
mov
mov
sub
xchg
push
add
out
inc
leave
cmp
scas
jge
push
pop
sub
and
sbbb
in
xchg
cmp
mov
jle
faddl
nop
xor
mov
loop
rcrl
mov
lcall
sahf
cwtl
in
arpl
mov
mov
lods
test
pop
inc
dec
fisubs
mov
sarb
out
adc
leave
rorl
mov
mov
rcr
movsl
jg
xor
xlat
enter
popf
push
cmp
in
addr16
sub
stos
pop
xor
insb
roll
mov
outsb
xchg
daa
xor
mov
icebp
add
daa
in
out
fwait
pop
mov
mov
xchg
loopne
stc
scas
or
pop
pop
add
mov
std
xor
add
push
or
mov
fs
cmpsl
jge
sbb
pop
sbb
xchg
aaa
push
adc
je
out
imul
inc
test
xlat
roll
push
das
aad
jae
test
jb
fwait
out
push
push
jbe
jge
inc
filds
jo
xor
lock
cmp
ret
ret
cmpsb
imul
cli
adc
ret
push
push
dec
mov
jmp
sbb
movsb
xor
jb
push
jne
pop
enter
inc
js
popf
int
inc
push
inc
inc
iret
dec
mov
cmp
dec
outsb
push
dec
out
jmp
xlat
mov
xchg
fisttps
push
mov
popf
xchg
repz
push
pop
pop
fucomi
mov
divl
mov
cmc
mov
ss
push
inc
faddl
aaa
pop
cmpsl
rol
cmc
mov
bound
pop
push
sub
xlat
repz
pusha
sbb
fisttpl
jp
int3
jb
ja
jno
aam
in
movsl
xlat
aam
insb
xchg
repz
scas
scas
pop
int
nop
outsl
outsl
inc
pop
mov
jne
fsubrs
sbb
xchg
ljmp
jae
sbb
in
sub
jle
pop
cmpsb
cs
test
xor
dec
jge
inc
cmp
adc
ret
sbbl
in
js
inc
sub
ds
lret
xchg
pop
add
cld
stos
dec
pop
cwtl
lret
in
push
adc
jno
and
mov
mov
mov
or
or
mov
shrl
pusha
mov
mov
imulb
mov
mov
pop
dec
xchg
mov
dec
test
aam
jecxz
or
mov
cwtl
xchg
xchg
push
movsl
sub
fcmovu
jecxz
cmp
add
movsl
fidivrs
or
cmpsb
das
jne
mov
fildl
or
rorb
lcall
cmp
cmp
or
ljmp
cld
test
jmp
cmp
iret
xorb
mov
push
lock
ljmp
fisttpll
or
daa
cmp
sub
sub
popa
stos
cmp
stc
stos
pop
lds
mov
push
inc
inc
jmp
add
test
fsubl
mov
cmpsb
nop
inc
push
jbe
fs
pusha
pop
pop
loop
and
andl
adc
inc
stc
and
mov
pop
push
pop
popf
push
push
enter
stos
notb
aam
popa
mov
shrl
cmp
pop
arpl
ljmp
loopne
clc
dec
xor
dec
mov
repnz
lock
mov
fldcw
cmp
popaw
adc
mov
rcll
imul
dec
jecxz
xlat
insl
xchg
daa
dec
sbb
das
and
pop
dec
xor
mov
sbb
repnz
loope
push
test
inc
xchg
add
addr16
lcall
addb
push
cmpsb
jnp
mov
imul
jno
hlt
icebp
cltd
add
daa
in
mov
sub
jae
adc
sub
mov
push
jg
stos
push
xor
aaa
jp
stos
aaa
xlat
fdivrs
ss
push
imul
sbb
aad
and
and
cmpsl
mov
adc
outsl
sti
inc
add
shr
ret
push
leave
push
xchg
add
mov
sbb
insb
push
jb
pop
mov
mov
cmp
push
fs
pushf
in
aaa
ja
mov
mov
sbb
les
inc
bnd
je
addr16
call
lock
adc
pop
popa
in
fisubs
out
push
test
mov
popf
imul
pop
sub
jmp
jo
ja
mov
or
outsl
and
push
imul
adc
add
push
jge
movsl
int3
outsb
or
ret
cmp
sbb
in
fs
in
into
xlat
repnz
pop
mov
inc
push
lock
dec
lock
and
inc
std
sbb
cmp
pusha
push
push
jle
shlb
or
js
subb
jno
mov
cmpsb
push
andl
out
add
push
jmp
push
es
xchg
out
xchg
movsb
pop
aaa
cmp
jo
lds
je
cmpsb
pop
repnz
adc
push
jl
leave
lods
or
test
xor
mov
jp
repnz
daa
xchg
out
sub
cmpsb
loop
add
dec
push
or
adcb
lock
negl
mov
mov
fimull
les
stos
data16
cltd
jle
sub
jns
cmpsb
fcomps
adc
cwtl
fldenv
mov
sbb
pusha
les
fdivs
cmp
rcrb
dec
fcmovu
xor
ja
adc
pop
pop
and
cld
test
and
das
cltd
pop
push
mov
xchg
fwait
pop
xchg
or
xor
mov
and
sub
cmpsl
addb
popf
push
shlb
je
les
mov
mov
das
repz
mov
push
mov
xor
mov
sub
or
adc
mov
or
testl
hlt
dec
inc
sbbb
and
mov
lcall
out
push
and
popa
adc
lret
jne
pop
stc
pop
xchg
int
push
cmpl
or
xchg
xchg
mov
nop
lock
invd
leave
mov
push
dec
pop
je
and
out
pop
jmp
adc
ljmp
mov
xor
fmull
jle
jl
outsl
int
sbb
aaa
inc
xchg
test
jmp
scas
push
cli
pusha
mov
repnz
cmp
sub
leave
mov
cmp
xchg
out
push
mov
decb
stc
jbe
mov
jno
dec
and
aad
add
push
sub
dec
xchg
pop
xor
lods
popl
cmp
inc
adc
shlb
dec
imul
xchg
fdiv
mulb
adc
sahf
push
stos
xor
xchg
repnz
dec
push
and
aaa
pop
ss
shrb
cmp
in
jp
sbb
pop
out
fstps
or
leave
mov
dec
xchg
adc
scas
popf
dec
xchg
rorl
pushf
push
mov
push
jge
fdivs
sub
mov
cmp
fstpt
cmpl
or
jle
adc
pop
push
push
jne
maskmovq
negl
push
addb
xlat
sti
leave
in
shrb
sub
mov
mov
or
fsubrl
push
mov
mov
cmp
fistl
int
sarb
adc
push
out
dec
leave
mov
lds
xor
xchg
mov
pop
mov
std
fimull
jl
or
pop
pop
out
jno
ljmp
int3
sti
mov
andl
xor
lods
clc
mov
dec
js
sub
mov
dec
ds
imul
out
loope
cmpsl
aad
jge
mov
fidivl
mov
test
pop
add
cmpsb
loope
fwait
gs
loopne
mov
pop
mov
aas
sbb
push
push
scas
pop
sub
push
xorb
subl
lcall
or
fidivrl
mov
repz
stos
jp
stc
mov
pushf
cmp
cli
addb
and
pop
sub
pop
insl
dec
sbb
insl
mov
pop
popf
mul
dec
xchg
into
add
icebp
fisubs
insl
out
cmp
mov
aaa
leave
je
stos
jle
std
imul
jle
jl
or
leave
pop
das
mov
inc
pop
in
fcoml
adc
and
icebp
sub
sbb
xchg
hlt
mov
js
sub
xor
pushf
lret
xor
lret
mov
mull
add
jno
mov
fdivrl
pop
cmpb
mov
xor
insb
ds
mov
js
or
jnp
jns
jle
sub
iret
inc
xor
add
mov
xor
cmp
fldenv
mov
shll
pop
inc
inc
jle
lods
xchg
jecxz
and
xchg
xor
call
mov
mov
push
and
ja
cmp
outsb
sub
fsubrp
push
inc
clc
mov
cmp
pop
and
xlat
mov
xchg
and
lahf
loop
sub
sub
rcrb
mov
mov
test
addr16
mov
lahf
push
imul
in
nop
cs
xlat
ret
inc
fstpl
into
cwtl
or
add
outsl
mov
jnp
ss
enter
push
sbb
movsb
call
insb
add
rolb
mov
cmpsl
mov
xor
xchg
cld
pop
jno
out
sbb
mov
les
test
sub
adc
icebp
repnz
or
addr16
cwtl
ret
inc
pop
into
jmp
dec
dec
dec
xchg
jg
lds
daa
and
ds
movsl
insb
mov
popa
mov
dec
sub
sbb
or
dec
or
rcl
sbb
xorl
test
iret
rorb
pop
lds
pushf
test
jb
stos
aad
sbb
pop
rorl
mov
imul
test
aaa
movsb
ljmp
js
sub
cmc
out
cli
fmuls
add
mov
and
mov
pop
jl
sti
outsl
out
or
mov
sbb
push
sbb
in
lret
xchg
jb
push
cmpsb
das
adc
inc
in
sbb
cld
pop
mov
xor
or
add
hlt
iret
repnz
rorb
inc
ret
cmp
xor
inc
ret
cs
xlat
stos
in
iret
rcll
andl
xor
sbb
dec
pop
fmulp
outsl
std
scas
cmp
fistl
ja
xlat
sti
mov
fnstsw
cmp
add
jo
and
push
andb
inc
ret
jmp
push
push
push
push
push
les
xchg
push
cmpb
cmp
addb
out
mov
in
pop
movsl
addb
aaa
scas
jg
std
xor
and
subl
aas
insl
adc
dec
daa
test
movsl
pop
iret
xchg
idivb
outsl
push
leave
adc
int
in
adc
cmp
and
cltd
mov
sub
out
out
lahf
xor
and
add
jp
sub
jg
in
mov
mov
push
je
adc
or
jns
insb
pop
and
jp
popf
test
int
pop
add
and
cmc
rcll
xor
lret
pop
addb
fidivl
mov
push
mov
mov
data16
out
dec
inc
push
adc
pusha
iret
clc
push
sar
leave
cmc
adc
sub
mov
les
sbb
mov
dec
inc
stos
cmp
pop
test
popa
adc
test
push
xlat
xchg
out
sahf
orb
int
insl
cld
scas
dec
dec
xchg
mov
and
out
inc
or
scas
jo
mov
imul
loope
lahf
je
imul
push
leave
add
pop
sub
ja
fsubrs
mov
mov
stos
xchg
stos
push
das
push
addb
mov
ds
loop
mov
push
sbb
push
and
adc
jbe
lret
mov
xor
sub
cli
cmp
xor
cld
xor
orl
call
in
lcall
adc
dec
repz
add
lods
das
xchg
fwait
mov
sbb
xor
outsl
test
imul
test
or
adc
jne
push
je
cwtl
insl
xchg
in
dec
lret
xchg
dec
fldl
and
movl
loopne
mov
imul
data16
test
loope
pop
cmpsl
ljmpw
xor
adc
mov
dec
push
xlat
inc
rorb
pop
and
daa
xchg
addr16
out
cmpsl
xchg
mov
cmpsl
or
in
mov
std
cmp
std
fwait
cmpsl
sub
cmp
jb
lods
adc
ljmp
cmc
xlat
insb
sbb
mov
push
lea
in
pop
pavgb
fdivl
push
out
mov
pop
pop
fisttpll
cmpb
xchg
mov
mov
addl
mov
cmp
add
add
pop
and
or
mov
fs
es
je
loop
insl
cmp
add
adc
jmp
pushf
and
fsub
shl
push
or
pop
test
cmp
cli
or
sub
movsl
inc
les
jno
mov
push
jg
mov
push
imul
leave
mov
and
je
into
sbbl
mov
inc
inc
xchg
mov
iret
cs
push
pushl
and
pusha
or
xchg
je
hlt
lret
push
add
lds
enter
cwtl
mov
inc
fcomip
js
xchg
mov
push
lods
push
jle
rcrb
aaa
ss
mov
push
xor
pop
push
hlt
fstl
and
pushf
roll
adc
iret
xchg
adc
bound
fwait
or
sbb
dec
push
jbe
lea
xlat
pop
cmpsl
movsl
mov
push
mov
or
pop
sbb
das
xchg
movups
dec
sahf
out
arpl
inc
lret
cmp
enter
psadbw
fimuls
xchg
add
jbe
sbb
xchg
rolb
xor
mov
outsl
xor
les
add
jnp
xor
aas
aas
ja
lret
dec
stos
mov
addr16
dec
or
bound
lods
xchg
in
jmp
sub
ret
adc
or
inc
addr16
push
inc
jo
and
ficoml
addr16
or
sbb
add
or
add
test
mov
popa
test
hlt
imul
mov
sbbl
cmp
cmp
push
int3
jno
adcl
lahf
wbinvd
push
cli
adc
insb
push
lds
aas
sub
mov
mov
push
inc
sar
dec
xchg
mov
lcall
cld
test
pop
std
inc
test
dec
pop
mov
out
and
and
lea
sbb
or
decl
sbb
sbb
repz
cmp
xchg
mov
xchg
mov
loopne
lahf
jg
inc
lahf
jns
mov
and
test
arpl
mov
mov
test
jb
push
gs
cmp
xchg
imul
hlt
xchg
cmc
clc
int3
and
sbb
sub
sahf
daa
mov
inc
fwait
inc
lcall
xor
in
mov
adc
or
imul
sti
xchg
sub
lahf
mov
and
jge
pop
inc
push
pushf
imul
lahf
mov
and
cmpsl
jmp
movsl
cmpsb
lret
mov
decl
nop
clc
mov
cmp
std
mov
pop
cmp
mov
imul
xor
inc
and
push
fmull
jne
add
cs
std
hlt
imul
pop
add
mov
adc
ret
xor
jge
int3
push
push
pop
pop
imul
mov
xchg
push
cwtl
fstp
arpl
pop
xor
add
jno
enter
ss
xchg
xchg
lods
xorl
sbb
mov
sbb
add
xchg
icebp
mov
jmp
fidivrl
ret
enter
pop
add
lods
out
jl
sub
aas
pop
push
cmpb
ja
mov
jb
jmp
jbe
inc
xor
cmp
outsl
call
lds
mov
mov
push
jnp
rolb
mov
pop
sub
dec
jle
ficompl
xor
fnsave
bound
push
push
iret
cmpsb
xchg
hlt
mov
mov
mov
jb
dec
fidivl
out
gs
ret
ss
push
add
mov
shrl
mov
push
loopne
jl
xchg
add
push
movsb
stc
cmp
cmc
test
lahf
cltd
jge
icebp
jg
ret
and
lret
aas
into
jns
loope
lods
dec
sbb
movsb
fstpl
imul
jmp
push
pushf
in
fistpl
jecxz
shll
popa
aam
test
outsb
cmpsb
add
xchg
addr16
in
pop
ret
sub
les
cmc
pop
aaa
outsl
jae
xchg
jp
xchg
daa
incb
lock
aaa
in
cwtl
xor
in
jnp
sub
mov
mov
lock
jp
outsb
cmp
sbb
dec
fstl
cmp
adc
imul
lret
es
inc
ret
daa
stos
and
shlb
cltd
inc
cmp
xor
pop
imul
mov
xchg
in
out
sub
and
sbb
xlat
cltd
repnz
push
call
mov
popf
insl
lods
mov
sbb
rcll
fwait
pop
and
pop
xchg
mov
lahf
xchg
mov
pop
lret
pop
pop
dec
enter
fimuls
mov
arpl
jne
enter
shl
xchg
test
adc
mov
cld
dec
fildl
push
movsl
inc
pop
ret
cmp
test
add
insb
es
mov
cmpsb
push
inc
popf
cmp
push
inc
pop
xor
hlt
nop
loop
mov
fdivl
push
mov
iret
sub
pop
mov
ss
xchg
sub
dec
or
jb
add
dec
add
xchg
mov
imul
jno
mov
xchg
jg
pop
pop
es
pusha
clc
sbbl
sbb
pop
nop
mov
aaa
pop
fs
dec
int
adc
adc
push
dec
das
push
or
dec
aam
jle
loope
cmpsb
scas
sub
mov
fmull
int
dec
insl
movsb
push
cmpsl
je
pop
xlat
stos
les
xor
shlb
arpl
push
xor
cmp
rol
or
dec
and
pop
push
sub
adc
std
mov
adc
xchg
imul
xchg
add
jo
pop
sti
call
test
in
hlt
das
ljmp
add
mov
xchg
mov
mov
push
mov
xchg
sbb
inc
in
aas
popf
jne
test
fnstcw
outsb
orl
adc
sub
movsl
xor
bound
jmp
ljmp
fldt
loop
adc
adc
adc
mov
push
cli
push
cmp
sbb
xchg
stc
mov
jmp
and
inc
or
sub
xor
movsl
or
mov
cmc
jge
or
pop
adc
mov
sub
fwait
mov
adc
add
sub
popa
sbb
pushf
cmp
pop
scas
add
jge
mov
repnz
pop
int3
xchg
in
mov
inc
and
pop
push
sbb
cs
or
mov
sub
adc
push
int
xchg
outsb
or
aam
outsb
rsqrtps
inc
cmpsb
pop
shrb
adc
cltd
jnp
dec
stc
push
loop
fisubrs
push
cltd
xchg
sbb
orb
pusha
jl
or
inc
fcompl
mov
cmp
shrb
insl
js
xorb
out
mov
dec
arpl
dec
int3
adc
or
sub
leave
xchg
mov
adc
xchg
dec
insl
rol
mov
pop
push
pop
testb
inc
jmp
outsb
mov
stc
fisubl
xchg
lret
test
ret
or
push
pushf
jae
ljmp
or
loop
dec
ss
cs
imul
push
mov
lahf
lcall
clc
sti
mov
addl
sub
rolb
cld
mov
lock
mov
inc
icebp
or
nop
int3
mov
mov
pop
ret
int
int
int
jge
popf
je
iret
mov
cmp
push
ja
xor
mov
imul
in
lcall
lcall
and
in
sbb
stos
inc
cmp
inc
pop
daa
cmp
xchg
push
nop
adc
xor
mov
dec
xchg
enter
das
adc
ljmp
pop
cld
cmp
loop
ficoml
xchg
mov
out
rcrb
call
jge
nop
les
mov
dec
xchg
sub
je
push
imul
mov
cmp
and
cwtl
rorl
cmc
repz
jl
xchg
jp
in
out
cmpb
pop
sbb
push
cli
int3
out
mov
dec
push
leave
xor
lea
test
mov
jmp
fs
ljmp
xor
cmp
or
or
adc
cmp
dec
je
dec
mov
sbbl
cmc
mov
mov
sub
rol
add
inc
dec
repnz
mov
pop
xchg
xor
push
push
in
push
shl
jmp
jae
xchg
out
rcrb
or
popf
push
mov
rclb
sub
popa
mov
call
sub
inc
int
cltd
ds
xchg
cmp
jb
xor
or
jnp
int3
test
clc
repnz
ja
mov
jmp
ljmp
and
jo
arpl
fwait
mov
pop
pushf
mov
xchg
xor
cli
mov
lods
mov
mov
jmp
daa
mov
mov
mov
cli
inc
pop
cmpsb
test
sub
shll
xchg
loopne
xor
leave
mov
xchg
xchg
cli
lods
repz
icebp
imul
cmp
dec
test
lahf
push
cwtl
adc
pop
adc
pop
jnp
idivb
fists
inc
into
aad
mov
mov
and
fstp
rol
idivl
test
dec
mov
in
cwtl
std
push
add
js
ds
mov
jmp
xor
test
rorb
push
adc
or
pop
sbb
shrb
or
or
or
lcall
je
adc
and
fstpl
mov
mov
pop
add
xchg
dec
stos
dec
adc
push
mov
out
leave
dec
xlat
ret
sahf
dec
jo
push
jno
orl
inc
sub
stos
popl
cs
pop
sbb
js
mov
imulb
xchg
adc
hlt
jge
les
cmp
jp
arpl
lods
sar
inc
inc
pushf
cmp
ret
xchg
push
sbb
sub
adc
or
dec
ja
pop
mov
addl
ds
pop
shrl
xlat
mov
jo
out
pop
add
in
mov
or
mov
out
fadds
mov
lea
scas
mov
dec
std
xchg
mov
bound
cmpsb
push
hlt
and
inc
xchg
inc
adc
and
cli
jno
xchg
repnz
test
mov
movsb
sbb
xchg
jno
cmp
jmp
mov
cli
add
jle
xor
ror
cmp
aam
or
xchg
dec
popa
sti
mov
movsl
mov
sub
int3
lahf
xchg
mov
push
inc
sarl
aaa
pusha
frstor
aad
divb
adc
inc
dec
adc
xlat
clc
mov
stos
pop
sbb
mov
out
cld
pushl
lret
or
and
mov
aas
add
clc
pop
mov
mov
dec
inc
stc
inc
lcall
fstl
lret
or
into
sub
pop
int3
pop
dec
mov
inc
or
dec
sahf
std
mov
push
add
mov
popa
sub
ret
cmp
mov
jb
insb
pop
mov
in
pop
and
test
test
xchg
cmpsb
scas
lods
jo
push
mov
ja
pop
loopne
imul
xchg
jae
in
imul
xchg
push
ficoms
loop
sarb
mov
scas
aaa
and
cmpsl
xor
cmp
xor
dec
sbb
cs
mov
mov
lds
out
dec
ret
and
testl
rol
mov
or
xchg
loopne
movb
mov
pusha
inc
rcr
dec
adc
or
ret
les
xor
shll
popf
ret
aad
cli
jle
sub
sub
scas
mov
mov
pop
sub
jge
divb
loope
es
mov
push
cld
inc
stos
in
mov
mov
pop
mov
adc
js
mov
lahf
jp
jne
add
xor
stc
jle
inc
dec
popa
and
cs
and
sub
ljmp
clc
pop
lea
addr16
std
adc
mov
inc
or
mov
inc
gs
dec
in
xchg
adc
jp
comiss
cmpsb
xor
mov
mov
lret
and
sbb
fsubr
or
vmptrld
xchg
sbb
mov
add
shrl
stos
cld
or
jns
lods
fwait
sbb
ficoms
pop
push
dec
dec
scas
das
rcr
mov
mov
fistl
pusha
leave
and
push
pop
mov
jne
jae
or
or
xor
into
dec
test
adc
mov
pop
pop
fs
loop
lods
push
fistps
xchg
in
mov
andb
sub
out
or
mov
xor
inc
jns
fyl2x
jmp
add
mov
lods
flds
or
mov
fmull
cwtl
mov
jmp
andb
mov
mov
ficoms
jmp
mov
lds
jmp
dec
test
test
mov
lea
mov
or
rolb
lret
jnp
mov
xchg
inc
gs
mov
mov
jae
testl
pop
and
out
movsl
ja
incl
and
in
gs
xor
int3
int
push
add
and
ret
mov
into
fucomip
scas
scas
pop
push
imul
or
sbb
loop
ficompl
mov
xor
mov
or
mov
in
aaa
clc
mov
ss
inc
shlb
or
or
orl
dec
lds
pop
loop
mov
pop
lds
clc
outsl
incb
adc
fnsave
loopne
add
test
enter
fnstenv
jne
cmpsl
dec
xchg
dec
xor
sar
int3
rep
sbbb
popa
push
test
fdivrs
adc
adc
or
push
xor
ficoml
cmp
lods
inc
fisubs
sub
xchg
pop
pop
cltd
xchg
jnp
and
test
xor
mov
xchg
push
jp
cmp
add
lret
push
mov
cmp
mov
push
dec
outsl
mov
xorb
dec
je
inc
in
aas
pop
mov
test
lret
pop
add
dec
lahf
gs
lahf
adcl
ucomiss
jle
or
mov
jl
push
sbb
cmp
aaa
ret
scas
sbb
dec
adc
push
xchg
rol
mov
mov
push
lea
push
das
mov
xchg
push
or
ja
ljmp
cmp
xchg
sub
xor
or
mov
mov
jno
es
leave
cmp
add
sbb
dec
push
cmpsl
and
cli
imul
repnz
xor
adc
push
popa
aas
hlt
xor
xor
lcall
mov
mov
adc
sahf
push
lret
ljmp
lds
xchg
shll
das
in
out
pop
inc
sub
push
dec
push
mov
or
and
lcall
xor
enter
es
pop
mov
xchg
pop
mov
notl
dec
mov
jno
dec
xchg
jmp
jno
mov
dec
subb
imul
fdivr
jecxz
pusha
dec
add
insb
jns
jns
push
incl
mov
in
aam
mov
aas
mov
loop
or
xchg
orl
pop
repnz
xchg
pop
das
in
mov
cltd
jp
lea
mov
jns
mov
rcrb
sub
xchg
jmp
push
mov
mov
sbb
jecxz
lcall
xor
cmc
arpl
pop
sbb
push
jmp
sahf
test
dec
dec
dec
mov
xor
fucomip
push
xchg
sbb
push
mov
inc
divl
pop
pop
lahf
outsl
enter
adc
hlt
dec
jne
or
sbb
push
inc
adc
pop
adc
xlat
repnz
loop,pn
push
cli
cmp
scas
in
push
add
data16
and
cmp
out
push
pop
aas
adc
ret
loope
cmpb
loope
mov
inc
mov
lret
cmp
jmp
add
sub
cmc
imul
rcrb
ja
pop
push
sub
cmpsl
and
shr
lret
mov
movsb
sub
pop
loopne
adc
jne
cmp
push
arpl
xlat
and
fstp
stc
mov
xchg
in
jl
sub
in
cmpsl
imul
sub
enter
xor
cmp
iret
or
mov
cmp
jb
incb
imul
inc
aam
js
and
sub
lret
orl
arpl
mov
or
cmp
and
mov
je
sub
int3
mov
repnz
push
lds
or
sub
cld
enter
in
cmpsb
ja
and
add
or
pop
sub
xor
lock
fidivl
add
add
test
inc
jo
jmp
fdivrs
loop
ljmp
repnz
loop
pop
xor
push
inc
pop
sub
xor
mov
sbbl
mov
adc
pop
sub
mov
pop
inc
jecxz
or
mov
sub
aad
mov
mov
scas
clc
scas
imul
sahf
adc
cmp
int
pop
jne
outsl
gs
cmpsb
lods
negl
xchg
bound
fadd
jmp
call
pop
icebp
stos
mov
out
cmp
sbb
clc
je
adc
push
cmp
out
lock
sbb
out
pop
ja
push
scas
or
add
dec
xchg
dec
push
es
pop
std
or
mov
icebp
shl
popf
or
lret
stc
imul
jae
aad
sbb
mov
dec
or
ja
dec
xor
faddl
scas
and
repz
push
jp
loope
fwait
out
stos
scas
adc
push
mov
pusha
mov
out
rol
fstl
pop
int3
ss
cmp
pop
loopne
pop
iret
jno
dec
push
push
jbe
or
pop
dec
int
pop
clc
rorl
push
cltd
mov
xchg
pop
adc
push
fstps
int
stos
jmp
sbbl
cmp
push
lcall
jno
dec
pop
push
filds
out
pop
jns
mov
sub
idiv
pop
fcmove
outsl
test
push
insb
mov
mov
xlat
dec
fcomp
rol
and
loopne
dec
fcomi
xor
xchg
cmp
fs
ss
fs
and
stc
shrb
mov
popa
fists
pusha
push
dec
jge
bound
adc
xor
es
in
xchg
stos
or
pop
shlb
sti
cmp
addb
sub
rcrb
fwait
xor
push
mov
or
sbb
push
cs
pop
ja
cmpsl
mov
arpl
fcoml
in
pushf
je
or
cmp
mov
xchg
xor
ljmp
adc
fwait
out
add
aaa
and
mov
aad
cmp
sbb
mov
inc
into
out
mov
das
pop
sub
inc
push
xlat
and
int
jbe
outsl
out
popa
fcmovu
aaa
fdiv
sbb
sahf
push
js
test
sbbl
imul
stos
xchg
in
mov
xor
test
mov
stc
push
cli
push
jmp
insb
mov
mov
mov
adc
cmp
jl
out
aad
fnstcw
aam
inc
cmp
push
in
iret
test
aas
push
xor
xor
flds
movsb
xchg
adcb
ret
ret
addb
mov
addr16
add
push
leave
dec
in
std
fimuls
fsubl
loope
inc
xor
xchg
addr16
sarb
lods
in
fldl
push
xor
adc
les
sti
mov
jno
ss
jp
or
stos
xor
mov
inc
adc
push
mov
lret
shrb
sar
pop
jae
aaa
or
rorb
push
jp
sub
mov
push
sbb
shlb
inc
fs
jo
cmc
mov
cmc
icebp
loop
xor
mov
test
outsb
les
dec
sub
ja
pop
fcomps
xchg
sbb
cs
movsb
mov
xchg
sbb
out
dec
std
mov
insb
dec
fwait
loopne
add
sub
subl
popf
lods
mov
and
or
xor
ja
ret
mov
adc
movsl
sub
lock
out
xor
mov
and
jg
sbb
hlt
mov
test
arpl
cmp
sbb
dec
push
shll
pusha
mov
orl
jb
rolb
xchg
push
pop
xor
cmp
mov
insl
pop
mov
xchg
sub
push
inc
push
pop
cmp
stos
sbb
out
loop
push
mov
pop
rolb
and
xchg
call
ret
dec
ftst
addr16
cmp
dec
call
dec
mov
pop
mov
sbb
nop
mov
mov
or
sbb
xchg
ficomps
divb
loop
pop
ja
mov
mov
insb
xchg
lret
call
or
stos
mov
dec
call
popf
and
lods
int
idivl
jne
imull
movsl
push
aas
add
xor
inc
jb
mov
push
ljmp
push
daa
xchg
pop
mov
les
cmp
cmp
rolb
xchg
mov
stc
lret
sub
movsb
sbb
fisubs
mov
clc
dec
faddl
lock
and
les
insb
add
outsb
fdiv
jae
jecxz
int3
jge
int3
decb
lahf
gs
cld
mov
mov
int
ret
sahf
xor
sub
jne
popa
and
sti
stos
jl
inc
inc
mov
adc
je
icebp
mov
cli
imul
nop
xrelease
jmp
sub
js
fistl
sahf
mov
and
push
pop
in
add
std
push
leave
sub
lds
mov
pusha
xchg
xchg
pop
cmp
data16
dec
or
cmp
push
movsb
shlb
pop
mov
jmp
inc
leave
xchg
ljmp
pop
push
nop
jns
call
mov
add
jne
rclb
dec
ror
inc
dec
clc
xlat
pop
enter
mov
push
stos
dec
or
xchg
adc
aad
cmp
mov
push
imul
cmp
sbb
pop
aaa
sbb
data16
stos
and
addl
lds
mov
leave
or
mov
jle
lods
cmpsb
fwait
cld
sbb
mov
lahf
mov
jae
mov
and
stc
pop
rorb
and
andb
cmpsl
mov
sub
xchg
or
jp
mov
mov
add
add
mov
mov
cmpsb
dec
adcl
and
test
mov
arpl
in
jne
pop
dec
pop
inc
mov
push
jae
cs
or
dec
lds
rorb
iret
xchg
xor
outsb
push
xchg
in
mov
lock
sub
and
and
ja
dec
ljmp
stos
mov
lahf
lds
ja
in
shr
pop
movsb
and
into
shl
mov
xchg
xchg
pop
subb
push
lds
stc
shrl
in
dec
fidivl
sub
xor
ret
roll
jne
pop
insb
and
stos
daa
ret
testl
xlat
stos
jecxz
sub
push
scas
mov
rcrl
jg
daa
outsl
mov
fisubrs
stc
mov
mov
scas
shl
inc
dec
push
mov
in
ja
mov
fldenv
xor
push
pop
mov
xor
pop
test
and
icebp
fbld
out
jg
jo
xchg
icebp
mov
or
sti
mov
les
pop
add
out
icebp
cmp
pop
mov
jmp
jno
mov
mov
daa
insb
out
jle
adc
outsb
cwtl
or
cmp
mov
push
out
push
jnp
insl
orl
sbb
dec
in
test
cmpsl
es
mov
aaa
jg
pop
sar
js
insl
xchg
xchg
sub
insl
mov
push
lods
mov
in
in
mov
popa
out
sbb
sti
push
push
mov
and
aas
repnz
or
inc
sbb
mov
adc
push
dec
insb
shrb
jns
xchg
push
mov
insl
insl
sti
mov
setbe
mov
test
push
mov
jbe
sbb
scas
adc
mov
and
mov
enter
inc
iret
fsubl
xchg
out
nop
loope
jns
out
lret
jo
out
pop
adc
and
movsl
je
out
pop
out
iret
fistpl
ljmp
stos
shr
cli
das
mov
dec
int3
stos
dec
cmp
js
lods
aaa
adc
or
sarb
addr16
js
or
cwtl
or
aad
icebp
into
cli
outsb
roll
dec
cmp
pusha
inc
movsl
jo
out
bound
leave
arpl
xchg
iret
ja
popf
fcomps
xor
and
js
in
xchg
adc
sub
mov
lods
fidivrl
push
nop
sub
fmuls
mov
add
enter
jle
pop
arpl
outsb
ljmp
clc
dec
leave
mov
mov
subl
cld
pop
inc
sarb
cwtl
movb
ja
sub
lcall
sub
aad
lahf
jmp
js
xchg
fcmovu
xchg
and
add
sbb
bound
xor
shl
pop
fs
insb
mov
cmc
mov
push
lds
mov
imul
loop
cltd
xor
sub
in
or
js
sub
pushf
ja
testl
xlat
or
and
push
push
ljmp
push
cmp
movsl
out
adc
lret
repnz
cwtl
hlt
fsubrl
mov
or
nop
or
stc
push
and
pop
jle
jno
fimuls
xchg
push
xor
stc
ljmp
dec
jae
jge
cltd
push
incb
jle
mov
mov
inc
rcrb
pop
call
jns
leave
pushf
ss
dec
inc
xor
cmp
gs
mov
lea
sbb
fwait
rorl
adc
adc
push
jmp
push
dec
insb
xchg
sub
iret
mov
cs
pop
scas
movups
sbb
ret
dec
xchg
sub
sar
jmp
push
mov
enter
jb
pop
adc
in
cmp
mov
adc
jp
je
sbb
dec
loop
lcall
jno
shr
jae
mov
sbb
or
loopne
movsb
loope
and
pop
sbb
dec
std
in
stos
inc
adc
xor
outsb
iret
fs
mov
add
iret
cld
cmp
outsb
enter
xor
sub
hlt
dec
push
scas
or
rcl
fidivrl
repnz
pop
jmp
push
loopne
sbbb
out
add
fs
jmp
adc
daa
cmp
sub
mov
nop
push
dec
or
pusha
hlt
iret
mov
test
lret
mov
fwait
std
les
shll
mov
inc
xlat
out
mov
out
cs
in
or
mov
and
iret
xchg
fmull
mov
pop
xchg
aad
xor
hlt
cs
cmpsl
xchg
mov
sub
inc
cltd
sub
pop
pop
pcmpgtd
and
sahf
add
scas
leave
sbb
dec
setbe
or
cwtl
dec
or
lock
or
mov
mov
js
push
in
and
xchg
and
fisubrs
incl
std
mov
mov
adc
mov
dec
sbb
xchg
lods
and
mov
adc
xchg
mov
jno
xchg
mov
add
es
subl
push
mov
movsl
insl
push
pushf
mov
xchg
shll
xor
ret
mov
mov
or
and
test
mov
mov
xchg
sbb
push
stos
jl
inc
movsb
pop
flds
mov
push
leave
ss
inc
outsb
inc
mov
push
mov
out
push
lods
lahf
jl
dec
xchg
int
les
loop
int
fnsave
jmp
xlat
mov
and
push
mov
jno
dec
cs
aam
movsl
push
mov
adc
mov
or
xor
xchg
mov
out
pop
enter
lcall
in
stos
xor
add
push
in
lahf
cmpsl
sbb
push
data16
cmp
xchg
jge
pop
cmc
pop
inc
mov
inc
push
mov
arpl
cmp
stos
add
repz
and
shrb
inc
out
lcall
gs
out
scas
xchg
push
cs
js
lock
mov
and
add
mov
xchg
out
inc
push
mov
shll
xor
aam
cmpb
push
out
lock
outsl
xor
shlb
sti
fisubs
push
sub
push
fs
push
or
shll
adc
call
cmp
int3
pop
mov
mov
push
loopne
fsts
les
jae
call
fnstcw
xlat
sub
push
xlat
fst
mov
mov
push
xchg
cmp
sub
add
repz
out
fucomi
or
cmp
mul
int
rorl
lret
mov
pop
sbb
mov
lock
xchg
gs
xor
cld
imul
and
pop
jo
jmp
cmp
pushf
repnz
repz
dec
int3
out
cltd
cmc
mov
notl
out
scas
in
cmp
in
xchg
ja
mov
insb
adc
push
add
adc
cltd
dec
cltd
out
cmp
xor
loope
dec
ret
outsb
in
xor
mov
das
mov
lea
dec
add
lods
repnz
push
pop
jg
adc
js
testb
mov
sub
cmpsb
lock
adc
lret
inc
mov
dec
mov
enter
leave
mov
or
xor
cmp
jnp
rcr
and
imul
xchg
rclb
das
ret
sbb
clc
shrl
fidivrl
cmp
xor
sub
push
mov
lret
push
fcoml
sti
pop
mov
dec
push
paddd
cmpsl
fcoms
icebp
mov
std
push
xchg
inc
imul
outsb
movsl
nop
xchg
push
loopne
mov
push
pop
rcr
add
jne
ficoms
xchg
lret
or
xorb
adc
lcall
jns
and
lret
jae
xchg
sarl
lahf
pop
inc
push
mov
cmpsb
pop
xlat
jecxz
movsb
mov
inc
cs
in
orb
adc
test
push
ret
movsb
jb
sub
mov
mov
das
ja
clc
dec
push
shrl
call
xor
outsb
mov
incb
pop
xchg
dec
frstor
arpl
xor
pop
dec
lcall
mov
mov
addr16
cld
push
and
push
mov
mov
sub
jnp
lock
pushf
rolb
or
pop
jns
add
les
dec
mov
sub
inc
ja
out
scas
lds
out
pop
pop
pop
add
push
adc
pop
mov
out
int3
rcl
sub
daa
mov
lret
rcrl
bound
and
ret
outsb
bound
daa
cmp
stc
fnsave
imul
jle
xlat
adc
mov
das
mov
int
jge
jo
notb
adc
ret
xchg
dec
mov
cs
lods
add
mov
push
rolb
out
pop
dec
pop
mov
dec
or
and
shll
pop
loope
lods
cmpsl
jno
sub
std
je
push
jno
mov
je
mov
mov
push
xchg
xor
testl
pop
daa
in
rcrb
jo
std
jbe
xchg
push
es
jae
icebp
xchg
lret
cmp
inc
iret
aaa
xor
cmp
mov
add
loop
add
inc
in
test
imul
dec
xchg
cwtl
inc
mov
mov
fsubl
test
xchg
pop
out
cmp
inc
jecxz
cwtl
lods
jg
fildl
pop
lea
cmp
xchg
mov
cmc
lcall
dec
mov
xchg
ss
jnp
arpl
shl
adc
jb
push
lea
mov
and
dec
pop
fadds
sub
mov
je
mov
int
mov
stc
mov
in
xchg
mov
pop
test
ss
jmp
leave
adc
outsl
sbb
out
mov
mov
adc
test
add
dec
nop
push
inc
je
inc
test
out
scas
gs
in
or
insl
sub
hlt
mov
pshufw
fistpl
fwait
xor
fmuls
sub
insl
adc
sahf
push
repz
hlt
pop
mov
and
jl
aam
insl
enter
ljmp
test
addr16
loopne
lods
ret
in
mov
jmp
fcoml
insb
ror
sahf
fistl
push
repnz
xchg
xchg
fsubr
cltd
xchg
push
sbb
cmp
clc
arpl
push
cld
mov
mov
sbb
icebp
out
dec
push
shlb
add
out
std
mov
push
mov
iret
mov
ss
cmp
cs
jmp
and
sbbb
loop
mov
dec
sar
lret
mov
cmp
outsb
adc
rcll
xor
and
and
pop
adc
stos
sbb
clc
xor
adc
scas
test
test
push
push
push
out
sub
cmpb
pop
flds
jp
lock
insb
or
mov
and
jae
xchg
cli
mov
lock
sbbb
inc
push
loopne
jne
mov
enter
pop
pop
insl
pusha
test
lcall
gs
out
sti
cmp
ljmp
call
icebp
out
ljmp
pop
cmpsl
xor
sub
mov
inc
adc
cld
xor
aam
fcomp
pop
xchg
stos
pop
xorl
xor
and
add
xchg
xchg
lds
bound
into
xlat
mov
or
fwait
jp
add
xor
push
popa
xchg
movl
subl
push
int3
nop
cmp
mov
and
jb
ficompl
pop
pop
lea
jno
mov
arpl
mov
imul
nop
insb
pop
decl
sbb
lods
ret
mov
adc
scas
lret
sarb
movsb
xor
movsb
divl
fwait
mov
add
push
cmp
mov
movsl
cli
inc
adc
imul
and
loopne
inc
dec
bound
inc
in
cmc
push
pop
mov
sub
cmpb
cmp
subb
ja
pop
sub
adc
js
movsb
lock
xchg
sub
push
adc
in
push
and
mov
lock
add
jbe
add
and
sub
int
sub
mov
in
xchg
jge
pushf
outsl
stc
xchg
shrl
sti
das
jne
cmp
test
in
adc
testl
std
dec
imul
push
push
lret
xor
shll
inc
add
imul
cmpsl
out
add
inc
stos
add
mov
ljmp
nop
push
ljmp
ret
out
shll
xchg
hlt
cmp
dec
popa
sub
inc
pop
sbb
jb
sbb
jge
into
fmull
sub
or
pusha
test
icebp
sbb
pop
sbbb
inc
fcomps
dec
xor
movsb
mov
jae
fwait
rclb
in
subl
rol
ror
dec
add
push
xchg
cmp
mov
and
inc
jle
cwtl
mov
cmpsl
jno
lds
xor
loop
gs
mov
jl
mov
hlt
or
sub
ds
das
setb
mov
pop
movsb
jle
rcrb
in
jb
cld
dec
jmp
data16
lret
or
sub
cmpl
addl
sbb
push
daa
jnp
lcall
negb
pop
or
push
dec
cltd
cmp
push
push
aaa
in
sub
jle
adc
adc
jno
xchg
dec
ret
fwait
mov
test
inc
into
sbb
pusha
test
rorb
sub
fld
out
cli
lods
cmp
or
inc
sbb
inc
rdpmc
out
arpl
mov
add
jmp
and
es
sbb
sahf
fists
loop
scas
iret
push
cmp
dec
out
fimull
push
sbb
mov
sub
inc
stos
or
ret
mov
jecxz
popf
aaa
popa
jns
in
xor
loop
int3
and
into
incb
mov
fsts
adc
and
sub
or
dec
scas
cmp
pop
int
in
shll
fistps
xor
sbb
jbe
pushf
int3
pusha
dec
inc
fidivl
cmc
sub
push
stos
cli
jae
cmp
loopne
rcrb
sbb
int3
or
mov
push
lods
andb
sub
xchg
sub
daa
lods
int
add
mov
mov
mov
dec
stc
mov
inc
cmp
icebp
out
arpl
dec
out
push
sub
ss
mov
add
dec
jmp
cmpsl
pop
add
jnp
jb
mov
jge
mov
jecxz
imul
jle
and
dec
mov
push
movsl
popa
mov
leave
or
btc
jp
cmpsl
adc
mov
imul
test
push
sbb
or
sbb
cmp
jb
sbb
push
jbe
mov
xor
or
fnstsw
mov
call
outsl
inc
xor
cmp
iret
mov
sub
fidivrl
mov
ja
test
mov
shlb
sub
dec
sub
add
loopne
sbb
sti
and
xor
xchg
fbld
sbb
push
mov
dec
mov
xchg
xor
es
cmp
add
andb
sub
jmp
mov
push
adc
rorb
and
cmc
enter
in
xchg
inc
mov
add
es
movsl
xchg
mov
fsubrs
mov
out
jb
aad
cmp
inc
iret
je
jae
insb
sub
aas
push
sub
inc
mov
cmp
mov
stos
cmc
pushf
iret
scas
test
push
adc
fldt
sbb
mov
mov
cld
mov
xor
xor
test
hlt
xor
movb
add
into
adc
popf
aad
or
push
xor
or
inc
lds
ffreep
scas
dec
je
push
pop
mov
dec
xchg
movsl
lret
insl
add
jne
adc
mov
cs
and
mov
push
jmp
jle
mov
out
pop
xchg
shlb
test
test
clc
adcb
leave
jnp
and
adc
push
adc
inc
xchg
adc
push
sub
mov
hlt
imul
pushf
push
fistpl
ret
push
fwait
in
cwtl
lods
dec
jbe
dec
pop
push
scas
out
rcrl
pop
pop
mov
into
test
cmpsl
push
lcall
xchg
xchg
sub
pop
mov
pop
addr16
push
dec
jg
vsubpd
or
sub
fwait
or
add
cmp
in
lock
fsubrs
xlat
dec
or
in
std
ss
daa
inc
pop
xchg
loope
pop
fisubrs
sbb
lods
insl
push
push
push
mov
int
fwait
jb
cmp
push
jmp
xchg
and
xchg
dec
ja
pop
push
jne
pop
push
cs
add
sahf
shll
cmp
out
ret
push
mov
xchg
movsb
mov
scas
subl
dec
and
mov
cmc
and
mov
jbe
jbe
daa
inc
push
cmp
push
inc
hlt
loop
es
cltd
adc
add
sub
push
jnp
call
hlt
mov
push
cwtl
add
cld
ret
lds
sbb
orb
or
enter
ja
aas
mov
fsubrs
xchg
push
mov
add
xchg
imul
lds
sub
ficomps
cmc
push
and
cmp
xor
xchg
jnp
hlt
mov
mov
push
ret
pop
pop
sub
in
out
in
add
cwtl
ljmp
aaa
xchg
push
mov
inc
xorb
sub
xchg
mov
mov
es
in
lods
adc
aaa
or
stc
or
scas
adc
nop
dec
inc
dec
insb
shlb
call
mov
inc
mov
je
rorl
jno
call
pop
loop
inc
js
ja
mov
sbb
mov
xor
fdivp
or
xor
jmp
jl
test
hlt
cmpsl
or
mov
xchg
adc
dec
or
adc
push
das
test
dec
aas
stos
and
or
xor
mov
cmpsb
pop
aam
ss
ja
gs
cltd
icebp
inc
and
cmc
ret
cwtl
mov
and
in
shrb
dec
mov
jecxz
repz
jbe
outsb
aam
arpl
lret
cmpsb
das
mov
push
fidivrl
inc
mov
sahf
sahf
jbe
scas
sub
aaa
test
dec
hlt
movsb
daa
hlt
jle
add
stos
fadds
cli
loop
sbb
dec
jp
adc
hlt
jge
pop
cmp
shr
lds
repz
into
fs
dec
cltd
mov
adc
test
pop
jno
pop
iret
sbb
inc
add
adc
inc
sub
push
jno
stos
lods
fcmove
adc
popf
dec
sub
out
pop
jle
inc
jo
fs
in
fcoml
fdivr
add
fbstp
aas
dec
inc
xor
and
pop
jne
xorb
push
mov
sub
movsb
leave
aad
or
gs
xchg
pop
pop
push
movsb
pop
inc
inc
test
test
dec
jno
mov
fildll
fimuls
and
jle
fisubs
mov
fadds
hlt
jge
lcall
andl
xor
popa
push
jge
sbbl
pusha
xor
out
or
into
jne
adc
mov
movsb
lea
cs
push
add
push
lcall
jecxz
mov
cmpsb
es
dec
jmp
add
mov
in
lock
mov
divb
and
insb
rep
inc
jae
jo
dec
in
push
inc
test
mov
sub
pushl
shll
dec
loopne
add
js
ja
and
or
and
out
int3
pop
popf
lahf
sub
pop
jb
cmp
cltd
out
inc
mov
pop
loope
imul
mov
cmp
cmpl
nop
scas
hlt
cmpsb
cmp
or
jne
inc
xor
inc
mov
test
ds
xchg
imul
into
int3
fsubs
pop
xor
loop
lret
adc
repz
adc
std
arpl
pop
fnstsw
sbb
push
push
push
cmpsb
jge
cwtl
sahf
fstp
in
mov
sbb
cld
and
and
fsubp
test
and
std
js
cmc
out
mov
test
adcl
add
test
ljmp
out
push
outsb
push
sbb
out
ljmp
jg
xor
mov
inc
adc
shl
imul
dec
ret
lcall
adcl
hlt
data16
push
mov
adc
popa
fstpt
imul
loope
mov
sbb
dec
mov
out
iret
xchg
mov
jnp
fs
ljmp
xchg
fwait
lock
push
sbb
mov
daa
push
adc
jne
in
push
cmp
clc
xor
and
jbe
outsl
sbb
sbb
mov
pop
in
and
insw
xchg
push
arpl
dec
fsubrs
movb
jg
adc
leave
jg
out
mov
xor
ret
inc
rclb
inc
in
iret
jmp
xchg
mov
notl
daa
insb
push
and
adc
subb
fwait
test
ja
push
add
cmp
inc
ret
pop
stos
imul
jecxz
pop
or
sarl
mov
pop
outsb
shlb
lds
mov
lret
cmc
fs
ljmp
jo
pop
add
ja
xchg
shlb
sbb
popf
js
add
cmp
mov
sbb
jmp
mov
jle
negl
clc
jb
pop
in
mov
sbb
mov
mov
scas
xor
fmull
mov
movsb
add
nop
inc
mov
push
pop
sbb
ror
cmpsl
int3
jo
scas
aad
aad
push
push
ljmp
cmc
rcrb
cmp
or
add
aam
add
xor
ljmp
notl
dec
jmp
mov
in
pop
jbe
cmc
xor
jae
pop
adc
stos
frstor
out
shrb
lods
mov
imull
andl
xchg
mov
xchg
ja
lds
pop
push
xchg
add
cmp
cmpl
out
int3
xchg
bound
adc
fnstcw
xchg
repz
xchg
xor
jae
dec
sahf
cmp
out
rcrl
lret
loopne
call
dec
mov
cmp
sti
mov
or
int3
iret
inc
mov
mov
arpl
or
cmpsl
arpl
push
ret
push
rcl
jmp
xor
pop
mov
clc
xor
and
pop
movsl
dec
cmpsl
enter
dec
xchg
dec
or
sub
int3
leave
add
int
jl
xchg
jbe
sbb
or
mov
sbb
loope
and
inc
inc
inc
pop
movsb
pop
xchg
out
lods
test
fmuls
sbbb
jmp
cmp
movsb
add
dec
mov
ja
or
das
lock
jno
xor
repz
cld
or
outsl
sbb
lcall
into
add
sub
push
dec
jl
adc
test
push
cwtl
xor
fs
or
lock
adc
sar
add
cmpsl
sub
push
arpl
jb
mov
data16
ljmp
movl
sbb
sbb
mov
ret
mov
mov
adc
mov
jmp
cwtl
in
into
inc
std
mov
cmp
shlb
