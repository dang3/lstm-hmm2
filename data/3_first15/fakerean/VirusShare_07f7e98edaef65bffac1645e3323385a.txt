jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
sub
add
add
xor
leave
inc
mov
sub
add
call
add
and
and
dec
add
mov
mov
mov
mov
or
sub
inc
jmp
xor
dec
xor
or
push
add
xor
and
push
mov
or
or
mov
push
sub
inc
or
call
xor
xor
push
add
or
sub
call
cmp
mov
mov
mov
je
mov
and
xor
or
or
mov
mov
je
and
mov
add
and
add
cmp
je
sub
mov
or
mov
push
sub
add
xor
xor
call
sub
mov
and
dec
mov
or
push
xor
push
or
and
push
or
add
push
or
and
push
xor
mov
call
xor
add
or
and
sub
shr
and
lods
xor
mov
xor
add
mov
and
mov
add
dec
dec
mov
mov
jne
or
inc
pop
mov
pop
inc
sub
add
pop
or
and
and
jmp
daa
fidivrl
insb
iret
fidivrl
inc
into
fidivrl
push
enter
repz
and
push
cmp
lea
adc
movsl
mov
scas
inc
and
cmpsl
cmp
mov
imul
xorb
lret
sahf
sub
sahf
lcall
xor
or
iret
fidivrl
aas
ret
push
lods
loopne
cmp
mov
iret
fcmovu
shlb
lods
mov
xlat
mov
mov
pop
shl
int3
imul
leave
outsl
lret
cli
adc
cmp
mov
aas
adc
rcrb
scas
add
mov
nop
or
cmpsl
dec
insl
mov
push
data16
out
sub
mov
arpl
outsb
or
pop
xchg
inc
scas
inc
xlat
xor
mov
test
and
mov
and
pop
outsb
lcall
outsl
int3
lahf
dec
out
fnstcw
mov
mov
insl
lcall
push
xor
lcall
push
push
out
or
fsubp
mov
fwait
insl
aas
and
repz
mov
push
sti
gs
fidivrl
dec
sub
insl
xchg
push
cmp
outsb
dec
jb
sub
movsl
lcall
mov
nop
mov
xor
xchg
xor
ret
xchg
inc
imul
out
in
insl
cmp
xor
push
inc
xchg
scas
cmp
lock
sbb
shl
mov
insl
iret
sub
xor
cmp
insl
neg
lret
sub
add
out
jb
sub
dec
bound
xchg
inc
xchg
inc
lods
fmuls
out
es
insl
inc
lahf
mov
dec
cli
lret
and
addr16
stos
push
jge
cli
popa
ja
stc
jl
and
je
and
mov
pop
mov
sbb
jnp
jbe
mov
adc
fistps
cltd
je
cwtl
pop
sub
add
mov
out
mov
adc
add
push
xor
jmp
lock
ret
fwait
gs
call
add
xchg
in
jae
stos
lahf
and
and
inc
push
stos
cwtl
sahf
outsl
movb
and
in
mov
and
stos
sub
adc
lods
push
lahf
pop
insl
mov
jnp,pn
adc
add
icebp
loopne
div
jns
clc
jge
out
outsb
stc
inc
out
and
outsl
into
movsb
ja
dec
jmp
mov
push
or
add
and
bound
mov
adc
daa
adc
mov
cltd
push
jb
in
fidivs
push
mov
sti
cmp
jne
sub
std
lock
movsb
adc
push
adc
adc
dec
lcall
mov
inc
stos
data16
sub
in
fidivs
xchg
and
mov
inc
stos
data16
push
xchg
xchg
adc
mov
and
sti
jbe
mov
popa
cmp
mov
adc
mov
cli
outsb
mov
adc
dec
pusha
in
mov
stc
cmc
bound
and
sti
push
and
ret
movl
pop
loopne
sbb
and
pusha
sbb
or
insl
push
mov
mov
mov
or
mov
popa
popf
adc
call
cwtl
aaa
int3
add
loop
ficoml
fs
in
ficomps
in
in
push
js
cmp
cmp
call
add
xchg
in
jae
xorb
shll
je
mov
dec
push
mov
rolb
push
sbb
mov
adc
or
ss
mov
adc
movsl
push
and
push
adc
loop
and
mov
and
pop
pop
out
cmp
fbstp
fwait
fs
mov
stos
imul
cltd
insb
jb
int
push
loopne
lods
or
repnz
cmp
popa
mov
mov
ja
shr
jne
xchg
cli
mov
adc
andnps
and
push
adc
jnp
push
ss
cli
xchg
test
out
loope
xchg
cmp
mov
cltd
inc
cli
xchg
sbb
int3
sub
sbb
xor
pushf
fdivl
sub
test
cltd
push
sbbb
and
cwtl
and
mul
adc
cltd
addr16
jne
pushfw
cwtl
pop
aad
pop
cs
mov
popa
jne
inc
fdivrp
sbb
in
add
mov
in
cwtl
outsl
sub
data16
inc
adc
pop
inc
shrb
cwtl
dec
sub
pop
adc
cmp
or
outsl
sub
sbb
jmp
dec
cli
adc
dec
loopne
stos
les
cltd
pop
xchg
out
negl
loope
rorl
out
icebp
jmp
jp
xchg
js
leave
pop
out
in
fiadds
cwtl
xchg
and
mov
jl
cwtl
popa
sub
mov
ja
arpl
cmp
mov
loope
sbb
scas
rcrl
bound
ret
add
and
in
push
adcb
sub
sbb
push
xchg
sbb
rcll
sbb
fadds
dec
jne
outsb
call
jne
mov
xor
sbbb
or
daa
data16
sbb
inc
pushf
adc
or
adc
cwtl
sub
and
outsb
sbb
add
ret
mov
and
sbb
and
cwtl
push
sub
adc
mov
mov
pusha
jmp
cwtl
and
mov
adc
pop
and
mov
popa
loop
popfw
cmc
sti
neg
jne
cltd
outsl
mov
sbb
jb
fwait
sbb
mov
and
aam
and
cwtl
mov
and
sbb
push
lahf
mov
adc
js
loopne
in
push
sub
inc
popa
clc
jbe
mov
push
push
stos
lret
imul
cwtl
adc
ret
aad
dec
cmp
xlat
sbb
and
dec
pop
adc
jnp
mov
ss
inc
jbe
in
insb
mov
sbbb
jne
and
xor
andl
roll
loop
adc
test
pop
mov
out
or
inc
dec
jecxz
xor
popa
jge
inc
jb
das
jmp
fldl
dec
mov
jnp
into
pop
inc
fucom
adc
inc
out
cmp
mov
insl
adc
adc
push
gs
sbb
and
fldenv
lcall
fsubrs
fldenv
lcall
fimuls
add
cmp
pop
ja
add
add
inc
adc
cmp
mov
jae
jo
and
into
sub
push
sbb
adc
lret
cwtl
pop
lea
adc
mov
inc
push
sbb
lcall
or
jmp
xchg
adc
add
test
aaa
mov
or
sbb
sarl
and
loop
fisubrl
rol
out
xor
jg
dec
xchg
adc
push
out
imul
jp
lret
xor
daa
ljmp
in
mov
push
jbe
push
and
lea
push
in
adc
jb
sbb
shll
cmp
out
mov
cmpsl
adc
mov
dec
call
andb
push
jecxz
fwait
xor
inc
jp
mov
jecxz
add
rclb
flds
add
mov
cmc
gs
std
loop
loopne
das
arpl
cli
in
lods
cmp
push
js
adc
ret
les
and
in
adc
adc
push
dec
lods
out
mov
lods
push
cmp
push
xchg
iret
lcall
xchg
jmp
pop
lret
jl
ljmp
or
jecxz
lods
lods
xchg
cmp
data16
aam
inc
jp
sbb
or
xor
call
test
movsb
sbbb
push
mov
stos
lahf
cmpsb
jns
xchg
daa
daa
jg
jle
push
sbb
pop
mov
xorb
add
rorl
adc
das
mov
rcl
xchg
mov
push
lock
sarl
addb
test
sbb
adc
add
repnz
stos
or
cmp
inc
xor
loop
daa
psrlq
test
dec
jmp
aam
outsl
test
ljmp
mov
and
cmp
dec
xorb
ja
pop
ss
mov
mov
add
xor
and
test
sub
lahf
cwtl
inc
mov
mov
or
ficoms
clc
addr16
aam
jge
leave
add
daa
inc
rcrl
loop
mov
scas
sbb
pop
xchg
and
pop
fwait
repnz
out
and
jp
lods
push
and
stos
sub
jno
inc
leave
add
outsl
or
adc
add
mov
stos
imulb
mov
add
push
and
in
ret
cwtl
lret
mov
sti
xchg
or
add
pop
adc
inc
addr16
andl
pop
out
sti
lcall
filds
xor
adcb
lret
cmp
loopne
cltd
in
bound
xor
push
mov
pop
push
fs
rclb
pusha
add
fwait
ret
addr16
imul
arpl
loope
jp
xchg
sbb
mov
adc
lcall
mov
and
test
dec
lods
sahf
inc
push
or
call
into
sub
arpl
cld
cltd
or
mov
loopne
add
pop
pusha
push
clc
jge
fisubrs
test
or
mov
inc
add
ds
xor
jne
cmp
fwait
imul
cmpsl
rcr
les
addr16
test
stos
test
xor
add
dec
pop
cwtl
inc
sar
inc
and
xor
fidivl
fsubl
inc
adc
xor
es
push
lock
addl
sub
cwtl
test
ret
or
pop
mov
adc
fstps
sbb
test
dec
idiv
cmp
xchg
cli
and
clc
dec
sbb
inc
cli
mov
and
test
ss
mov
pop
dec
test
dec
push
dec
xchg
jmp
lahf
fldl2e
mov
or
cld
popa
lods
inc
push
fcmovnu
pop
jp
mov
and
pop
bound
pop
push
pop
sub
jg
stos
aaa
pushf
in
mov
pop
adc
adc
fcompl
imul
adc
push
xor
mov
adc
dec
icebp
push
add
jno
sub
aas
sbb
stos
sbb
dec
ficoml
sahf
fwait
das
lahf
repnz
stos
inc
in
adc
xor
call
leave
xchg
adc
mov
sub
adc
jae
jnp
aam
dec
push
inc
pushf
push
stos
add
sub
sbb
rorb
cld
imul
outsb
loopne
push
push
in
fidivs
sub
sbbl
mov
adc
mov
lcall
loop
cmp
pop
xchg
out
inc
push
jmp
sarl
xchg
push
xor
jge
mov
adc
jbe
sti
jp
sahf
clc
sbb
add
pushf
aam
adc
push
or
jg
pop
pop
xor
fbld
dec
push
fistl
flds
mov
stc
xchg
imulb
pop
push
mov
push
das
sahf
lods
ss
lds
into
adcb
stos
adc
fldl
mov
outsb
scas
aam
bound
lods
mov
cmp
mov
sbb
scas
loop
shll
cmp
push
insl
ret
adc
call
fadd
adc
inc
xchg
outsl
push
xor
mov
movsl
pop
adc
add
mov
sti
in
mov
orl
fmuls
int
adc
addb
mov
das
push
push
xor
inc
cmp
gs
ficomps
jl
adc
cmp
stos
aaa
mov
test
inc
xor
js
pop
push
jb
cmp
lret
or
sbb
loop
je
mov
mov
xchg
dec
mov
dec
pop
cmp
test
sbb
aas
mov
mov
jnp
or
add
sub
mov
cmpsb
jae
popa
cli
mov
dec
dec
adc
cli
dec
dec
cmp
sbb
dec
rcrb
insb
inc
lahf
jge
mov
adc
ja
jg
jns
add
jp
aad
add
jb
xchg
pop
aad
roll
inc
mov
mov
js
aaa
or
cmp
and
lret
ss
fsubrs
daa
inc
in
xchg
iret
fdivp
sbb
xchg
shr
fwait
push
and
sub
pop
js
daa
leave
das
push
push
dec
and
mov
sarb
or
into
push
cli
or
inc
push
flds
cmp
es
sbb
inc
lods
into
add
jae
xorb
xorl
cs
jb
lret
pop
adc
rolb
adc
mov
into
rorb
test
lods
jecxz
jbe
sbbl
or
into
mov
push
stos
cmpsb
or
leave
outsl
xchg
aad
xchg
jbe
aaa
add
sahf
or
rolb
sbb
cmp
std
iret
ret
or
and
dec
add
adc
push
outsb
inc
cmp
lods
jb
add
loope
jnp
inc
lods
adc
setnp
cwtl
xor
vmovddup
je
out
fisubs
dec
mov
sub
fisubrs
mov
fiaddl
bound
daa
aas
or
sub
addb
dec
pop
xchg
push
mov
test
lret
or
sarb
gs
icebp
pusha
adc
lahf
lcall
cmp
sbb
add
faddl
add
lret
xchg
dec
push
loope
inc
in
ret
sub
in
xchg
sbb
out
sbb
outsb
xor
lret
jb
xchg
add
xchg
and
loopne
xor
push
rcll
mov
fnsave
mov
adc
xor
add
lahf
and
xchg
add
js
dec
xor
xor
sub
or
lock
jl
ret
addr16
push
push
popa
pop
inc
test
sti
lcall
inc
xchg
cmp
lods
into
test
mov
stos
shlb
pop
shll
push
hlt
mov
ja
out
or
stos
xlat
sub
sbb
mov
inc
cmp
test
inc
mov
dec
and
push
jp
outsl
lret
shlb
adcb
ret
add
xor
push
movsb
mov
cltd
jl
xor
std
stc
push
icebp
inc
loop
loopne
push
popf
nop
xlat
and
ljmp
mov
out
or
fdivs
add
adc
cmp
push
mov
hlt
inc
stos
dec
cmpsb
push
dec
loopne
test
add
sbb
cmpsb
stos
rolb
jle
sbb
loop
cmpb
xchg
jo
mov
mov
xor
or
inc
adc
pop
inc
push
stos
pop
inc
inc
mov
icebp
mov
inc
cmp
into
loop
sbb
cmp
push
ret
or
or
aad
clc
sub
test
inc
adc
lahf
xor
pop
and
fstps
cmp
outsb
fsubrs
test
inc
lahf
or
pop
add
mov
adc
ret
movsl
repnz
jb
push
mov
jb
or
loope
cmp
cli
xchg
test
in
cmpb
xor
jge
mov
movsl
mov
xor
ss
push
cmp
jno
pop
inc
fidivs
cmp
lods
add
xlat
pop
out
add
dec
ret
ljmp
cmp
stc
mov
push
shll
bound
imulb
sahf
xlat
or
pop
mov
addr16
mov
xlat
in
outsl
sbb
stc
mov
daa
int3
xor
push
push
sub
imul
aad
movsl
loope
and
mov
divl
subb
fsubp
jp
push
jno
int
sub
inc
mov
data16
in
mov
sub
mov
loope
push
jmp
cli
adc
popf
pop
das
fldl
adc
mov
jae
mov
sub
xor
push
cs
out
inc
push
jnp
ret
or
xor
ja
jo
push
dec
and
or
fldenv
adc
iret
ficomps
in
cwtl
imul
xchg
popf
inc
inc
xor
sbb
setge
xor
lcall
dec
push
pop
add
push
cmpl
data16
or
jg
xchg
inc
xor
outsb
loop
mov
aaa
sbb
loope
ret
xor
pop
push
pop
testl
inc
push
mov
ss
push
push
sbb
nop
push
sbb
lret
add
repz
push
rcrl
push
mov
imul
jecxz
xchg
lock
adc
ja
subl
or
lret
inc
adc
cwtl
imulb
push
xor
pop
loope
push
inc
aad
fdivrl
in
fstpt
dec
xor
pop
mov
mov
iret
and
lret
cmpsl
jno
ds
cs
imul
icebp
lods
xor
push
sub
sbb
xchg
leave
scas
ds
faddl
cwtl
jg
ja
fs
lea
daa
lods
pop
fwait
imull
inc
pop
mov
lret
inc
in
jge
jl
xor
pop
sub
or
and
sbb
lahf
cmp
cmp
sbb
push
sub
mov
cli
push
call
aad
iret
popf
inc
add
ds
jne
xchg
jb
pop
add
fisttpl
mov
cmp
xor
stos
leave
xor
push
mov
stc
mov
cld
push
add
aam
xchg
or
cli
jno
adc
mov
imul
jbe
cmp
enter
mov
xorb
mov
cmp
leave
stos
rcrb
sbb
rdtsc
push
addr16
adcb
jp
add
shll
mov
cs
test
mov
sub
adc
pmaxsw
cmp
pop
movsb
xor
mov
and
lcall
sar
loope
push
sbb
leave
test
call
andnps
loope
sub
jge
ljmp
cmp
mov
or
jbe
cmp
jmp
mov
aam
loop
cmp
mov
fidivl
inc
gs
sbb
lods
fldcw
xor
pusha
loopne
ret
dec
xchg
jnp
add
sbb
ret
inc
dec
dec
repz
fs
data16
icebp
dec
add
hlt
repnz
sahf
inc
jecxz
popf
pop
mov
fiadds
push
mov
or
ret
aaa
push
daa
xor
xor
sub
dec
int3
imul
dec
adc
mov
mov
pop
loop,pt
inc
pop
pop
fnstenv
cwtl
xchg
mov
add
loope
lds
or
cmp
or
sbb
adc
adc
pop
pop
cmpsl
mov
sub
adc
xor
or
xchg
push
sbb
jo
xchg
cmp
jmp
or
mov
or
pop
xchg
push
push
or
push
aas
xor
cmp
lahf
and
stos
add
push
jp
ret
aad
adc
cmp
push
mov
mov
ja
push
push
daa
mulps
mov
fiadds
int3
lcall
rorl
nop
adc
in
or
xor
adc
cmpsl
jecxz
in
xor
sub
mov
faddl
out
inc
mov
inc
sti
lods
jno
pop
ret
lret
es
dec
faddl
pop
ret
addl
addr16
test
inc
cs
jne
or
rclb
sti
dec
imul
dec
inc
dec
mov
ret
aaa
inc
sub
jecxz
fldcw
call
mov
test
inc
sbb
outsl
imul
pop
add
addl
sarb
mov
ficomps
out
lds
add
roll
jecxz
ret
mov
push
sbb
pop
iret
fbstp
or
xor
add
ljmp
bswap
push
filds
lcall
rorl
aad
test
ja
push
addr16
cmp
cmp
push
adc
fstl
and
adc
cmp
mov
lcall
pop
nop
ss
xchg
inc
pusha
dec
bound
push
adc
repnz
sti
addr16
arpl
push
xchg
mov
fs
inc
sub
fsts
stc
mov
sub
lahf
mov
mov
mov
lahf
lds
lcall
add
stos
pushf
and
fsts
in
jno
cltd
fdivrs
lock
cli
loope
add
jp
mov
inc
inc
and
arpl
out
ja
mov
cmp
mov
mov
fadds
mov
pop
sub
inc
sbb
jl
mov
jp
add
sub
mov
push
movsl
cld
sahf
jmp
jns
inc
leave
movsb
enter
mov
dec
scas
popa
sbb
cwtl
cmp
push
pop
jle
dec
shll
push
fs
ljmp
pop
adc
adc
outsl
ficoms
mov
insl
sub
or
xor
rorb
dec
xor
and
xchg
ret
rcll
fisttpll
in
mov
inc
mov
lods
xchg
aaa
incl
push
shrb
aad
in
adc
mov
jle
movl
test
xchg
in
stc
jge
xlat
cmp
mov
inc
cmp
sbb
stos
lcall
push
pusha
inc
push
sti
enter
arpl
ret
pop
test
stos
xor
and
ret
imul
cmp
jg
int
mov
xor
push
mull
sbb
or
mov
cmp
or
sub
mov
sbb
push
jbe
cli
add
and
jno
cmp
sbb
jecxz
lcall
call
cli
pop
ja
repz
pushl
fdiv
cmpsl
xor
jecxz
cmpsl
dec
xor
popa
sbb
push
lods
fldl
cmc
push
cmpl
add
iret
out
cmpsl
sub
sbb
jecxz
clc
ss
repnz
jb
adc
stos
and
lret
cwtl
shrl
bnd
iret
mov
inc
sbb
insb
xchg
adc
jns
push
andl
dec
out
xchg
clc
pop
jno
jbe
mov
mov
xchg
push
lods
rol
rclb
ficoml
sbb
imul
xchg
stos
in
bound
insl
mov
or
mov
fs
fs
or
or
imul
mov
dec
adc
icebp
push
testl
fldl
rorl
dec
inc
adc
andb
mov
and
icebp
mov
cmp
cmp
repz
orb
push
addb
lahf
cli
mov
bound
sub
cltd
jp
push
pop
cld
add
inc
loop
lret
dec
jle
jge
inc
xor
scas
fistl
addl
push
mov
lcall
or
push
ljmp
fnstenv
jne
and
lods
cltd
fucomip
ret
adc
out
fucomi
gs
xor
pop
adc
push
sbb
negb
sub
test
repnz
add
cmp
cwtl
lret
adc
or
push
push
gs
inc
sub
js
jae
std
shll
outsb
mov
test
inc
cmpsb
stos
rcrb
jne
mov
mov
lret
xor
data16
loop
into
or
inc
pop
sub
add
sbb
ss
scas
rcll
jl
stc
push
jle
xchg
out
xchg
stos
sbb
inc
in
loop
jp
jecxz
stos
aam
frstor
or
outsl
and
mov
pop
idivl
xor
repnz
sub
shrb
loop
enter
test
and
stos
mov
dec
pop
sbb
sbb
push
mov
cmc
xchg
pop
mov
push
imul
and
jne
shl
xchg
leave
lret
jge
stos
in
push
scas
pusha
push
jo
fs
cmp
nop
push
xor
out
jns
aaa
cs
dec
mov
xlat
rcll
add
push
rcrb
jmp
out
rorb
testl
lret
and
xchg
stc
or
pop
out
xlat
pop
cwtl
xor
mov
mov
faddl
rolb
cli
out
test
push
pop
sbb
sarl
dec
loopne
leave
inc
xchg
push
mov
sbb
xchg
inc
mov
das
movsb
push
mov
fdivl
ss
jecxz
push
testl
sahf
ja
pop
sbb
lock
xchg
inc
add
decb
sub
inc
int3
and
adc
push
jmp
dec
add
cltd
xor
sub
push
push
adc
dec
dec
sub
xor
or
sub
add
mov
les
loopne
nop
sbb
jmp
inc
shll
and
jb
cmp
adcl
or
and
ss
mov
shlb
dec
mov
add
rclb
jge
add
or
dec
stos
pop
shlb
arpl
fsts
sub
push
frstor
cmp
xchg
inc
mov
jns
test
lea
arpl
adc
mov
addr16
out
cmc
js
in
fildll
sbb
shl
cmp
call
xchg
lcall
sbb
fisubrl
pusha
jno
aad
loope
imul
lods
add
mov
pop
xor
pop
popf
pop
das
cwtl
rolb
add
lret
pop
int
dec
repz
inc
push
and
cli
push
sbb
sbb
inc
cmp
out
subl
int
roll
dec
or
and
mov
mov
cmp
dec
ljmp
ret
adc
ficompl
adc
jmp
sbb
mov
adc
lea
sbb
push
test
daa
mov
in
xor
movsl
adc
or
sbbl
dec
push
jno
ja
or
jo
je
les
repnz
dec
in
pop
push
fnstcw
sbb
sti
cld
bound
mov
dec
xor
mov
mov
sbb
mov
rcll
outsb
inc
inc
dec
sti
mov
iret
inc
scas
mov
pop
inc
jae
ss
lret
inc
mov
inc
dec
mov
cmp
xor
les
int3
pop
das
mov
sbb
fldt
addb
mov
xchg
cs
pop
add
frstor
loopne
mov
cli
popa
jns
push
jae
push
mov
xchg
mov
repnz
adc
add
or
cmp
inc
mov
shrl
mov
mov
or
jecxz
ds
add
push
cmp
sub
xchg
add
lcall
lahf
xchg
cmp
and
pushf
pop
sbb
add
fisttps
sahf
aad
mov
cmp
push
ret
int
subl
das
and
mov
fwait
ret
dec
das
repnz
in
stc
mov
jb
ficompl
xor
inc
fwait
pushf
aad
mov
push
lea
loop
mov
pop
jge
test
js
add
sbb
pop
movsl
je
xor
cmp
mov
hlt
mov
inc
add
xchg
cwtl
push
cmp
cld
and
jge
aad
jecxz
psllw
shlb
pushf
test
xor
push
sar
adc
in
pop
sub
push
jnp
sahf
loope
subl
and
in
mov
dec
scas
pop
roll
in
shlb
fisubrl
xor
or
xchg
test
je
or
xor
sbb
mov
lahf
dec
pop
adc
xchg
mov
cmp
add
ficompl
mov
dec
test
scas
inc
add
lret
sub
inc
and
inc
dec
mov
xlat
imul
lcall
mov
xor
setnp
fs
popf
xor
pusha
jbe
repz
lcall
inc
cld
pusha
cs
or
sub
hlt
scas
outsb
and
outsb
fildl
jbe
sbb
pop
sahf
mov
xor
out
cmp
aaa
ljmp
icebp
sub
call
push
fs
fmull
fistpl
fldl
inc
pop
push
and
xchg
push
ffree
dec
dec
dec
xchg
xchg
mov
mov
adcl
fcoml
mov
sbb
add
jmp
test
pop
addr16
adc
in
cld
incl
xchg
dec
test
nop
inc
lods
iret
adc
enter
sbb
fsubs
add
movsb
ljmp
jae
pop
inc
fistpll
icebp
jae
nop
addr16
fmuls
mov
sbb
iret
fcoml
cltd
call
inc
add
fwait
add
fistl
sahf
pop
fucomi
fcmovb
fdivrl
sub
add
stc
sti
mov
fstps
call
lret
mov
hlt
imull
cltd
jbe
repnz
icebp
fidivl
mov
mov
insl
mov
outsb
jle
push
insl
movsl
xor
sbb
sub
sbb
and
icebp
sub
dec
push
sbbb
popa
adc
cmp
fidivs
loop
add
aas
pop
mov
inc
jne
bndldx
inc
lcall
sarl
mov
adc
outsl
sbb
fs
cwtl
mov
loop
xchg
sub
adc
push
jo
lock
sub
inc
test
lahf
adc
sub
int3
lahf
push
aaa
orl
aam
lret
adc
add
ficoml
fstps
jno
cwtl
and
jp
into
in
js
and
inc
test
cmp
divb
pop
cmp
dec
sub
jae
lock
sbb
mov
out
push
movsl
add
dec
pop
push
stos
test
xor
add
fisubrs
filds
xchg
add
or
fsincos
gs
in
cmc
xchg
loop
sbb
jb
and
pop
pop
ljmp
fiaddl
stc
bound
jge
xor
andl
daa
mov
pop
adc
cmc
add
push
lahf
add
nop
addl
push
stos
dec
push
sti
add
scas
and
pop
pop
add
sbb
inc
mov
lahf
sbb
mov
iret
mov
lret
push
adcb
inc
fisubl
push
jae
cmpsb
add
fsubr
mov
inc
lret
pop
sub
fildl
or
push
add
mov
and
push
pop
pop
lea
mov
test
cmp
sti
xchg
fstl
pop
cmp
out
loope
add
aam
jg
adc
mov
adc
push
push
cli
shll
jl
jb
mov
lds
inc
daa
mov
push
mov
enter
xor
nop
push
rorl
aas
or
push
pop
stos
sbb
addb
lea
xchg
das
shrl
add
popa
cmp
in
icebp
stc
push
xor
mov
push
sti
jno
adc
push
jbe
add
sub
fcoml
xchg
adc
mov
cli
shll
mov
insl
iret
pop
mov
mov
adc
inc
xor
loopne
pop
lea
ja
je
outsl
pushf
mov
mov
mov
ret
mov
pop
push
cli
push
ret
sub
fldl2t
inc
fstpt
imul
sbb
rcrb
das
add
ffreep
add
pop
lods
add
adc
jle
mov
fcmovne
pop
jmp
fildll
scas
ffreep
popf
or
loope
enter
jp
xlat
insb
rcl
and
addr16
jne
pushfw
and
in
jp
lods
or
and
xor
roll
sti
push
cmpsb
cli
adc
xor
mov
sub
sbb
xchg
sbb
lods
lret
bound
sbb
jmp
aaa
lahf
xchg
pop
insb
adc
fcmovnu
sbb
push
je
cmp
dec
fldt
shl
popa
out
cmp
out
mov
dec
jo
xor
sub
pop
xchg
add
push
xor
ja
call
xchg
ljmp
mov
addl
ja
mov
push
sub
call
cmp
add
sub
push
jg
adc
nop
mov
stc
and
add
je
cmpsl
pop
dec
cmp
add
data16
aam
lret
ret
or
push
sahf
out
mov
insl
cmp
hlt
aaa
cwtl
sub
pop
popa
enter
pusha
outsl
stc
repz
dec
in
lock
mov
add
adc
pusha
adc
inc
bound
add
fidivrl
and
bound
adc
xor
mov
inc
and
inc
mov
clc
add
mov
xor
rclb
mov
mov
mov
inc
cmp
sahf
jp
and
adc
imul
inc
test
lahf
pop
adc
mov
imul
fadds
sbb
adc
icebp
sub
mulb
es
sub
fidivs
xchg
nop
and
or
orl
add
movsl
aas
movsl
rclb
fsubrs
fcmovnu
test
xchg
stos
adc
popf
inc
pop
leave
dec
pop
inc
sbb
arpl
js
cmp
dec
add
inc
sahf
std
jne
inc
test
jo
lds
jno
inc
sub
test
enter
mov
mov
jno
cmp
into
push
cmpb
sub
dec
sbb
test
mov
lcall
add
cwtl
pop
dec
inc
add
xchg
dec
lret
xchg
aad
inc
push
mov
or
jecxz
pop
cmp
sub
shll
adc
pushf
jp
leave
outsl
adc
lret
ss
call
fidivrl
popf
sbb
and
outsb
daa
addr16
push
add
mov
push
mov
and
aad
aaa
pushf
sti
js
jmp
leave
pushf
lcall
jp
adc
jbe
inc
add
jns
add
mov
in
inc
add
sub
cmp
incb
push
in
faddl
pop
filds
mov
stos
inc
mov
sub
add
push
adc
pop
hlt
mov
test
xchg
jl
hlt
cmc
ret
jp
outsl
aaa
repnz
sub
sahf
xor
jp
aas
xor
sar
xor
scas
adc
gs
pop
push
test
xchg
xor
sbb
xchg
mov
mov
ljmp
mov
push
pop
mov
mov
cmpsl
xor
into
outsb
jecxz
vorps
xchg
sar
add
cmp
xor
dec
jbe
add
sarb
fsubs
and
pop
aam
push
rcll
int
adc
ljmp
xchg
dec
pop
jno
ja
or
inc
int
sbb
add
mov
inc
cwtl
mov
push
pushf
mov
cmp
test
mov
sbb
and
int3
xor
int
xor
int3
ds
fiadds
fcmovnu
cmp
pop
movl
lods
enter
cmc
inc
cli
lods
push
out
adcb
repz
inc
push
ret
pop
fimull
int3
stc
js
add
mov
add
jecxz
add
out
divb
add
add
decl
arpl
mov
mov
jns
add
lods
stc
mov
add
xlat
outsb
inc
call
add
mov
xchg
sbb
std
xchg
pusha
scas
and
mov
jo
pusha
push
into
mov
xchg
fsubl
add
xor
jno
lods
or
lret
cmp
pop
aas
and
mov
dec
jo
xor
sub
xchg
hlt
cs
push
fcompl
cwtl
stc
mov
mov
dec
dec
mov
repnz
push
add
movsb
mov
cli
test
sti
lret
shl
mov
movsl
fidivl
push
je
popa
push
mov
scas
pop
addl
cmp
adc
imul
lcall
xor
and
shlb
push
xlat
shll
jl
dec
cli
mov
mov
aas
nop
sbb
jecxz
lret
mov
jg
or
jp
data16
fistps
loope
aaa
jge
pop
xchg
sbb
adc
sbb
fwait
push
push
push
shrl
scas
hlt
dec
xor
jne
loop
xchg
aaa
cmc
ss
cltd
popa
js
pop
or
add
ficoml
shll
shl
jg
mov
add
in
daa
push
mov
fstp
sub
insb
xorb
and
in
je
cwtl
add
adc
and
push
jo
mov
pop
ret
xor
add
xlat
sbb
jns
dec
xchg
jp
ds
add
jns
lahf
divl
addl
jg
push
mov
out
sub
shrb
loop
jae
push
xor
sarl
sbb
add
jnp
sbb
int3
pop
stos
outsl
fs
mull
jo
sub
and
movsb
jo
mov
sbb
jae
mov
dec
lahf
jmp
push
ficoml
sub
fildll
jbe
sbb
jle
mov
pop
sub
xchg
sub
sbbb
sbb
or
cmp
test
sti
mov
iret
arpl
andb
out
add
sub
ds
shlb
push
insb
mov
imul
stos
clc
sbb
mov
mulb
cmpsb
lods
xchg
in
rorb
cmp
mov
lcall
loop
ljmp
sub
dec
loope
cli
sub
stc
add
xor
cld
je
mov
ds
clc
cwtl
sti
jnp
and
push
jo
fs
inc
inc
pop
and
push
and
mov
dec
js
mov
sbb
lret
inc
cmp
fdivrs
inc
mulb
lret
and
les
pop
imul
xchg
add
or
dec
mov
enter
push
movsb
jecxz
scas
test
aad
and
add
or
nop
cmp
stos
jns
call
jnp
out
leave
pop
popf
test
inc
rcrb
sbb
sbb
or
lods
dec
pop
ret
out
fimull
movsb
mov
jb
inc
adc
dec
jo
cmp
push
add
pushf
iret
pop
inc
push
or
insl
cwtl
stc
sti
add
adc
stc
push
lcall
loop
or
sbb
loopne
sbb
arpl
jg
loop
sbb
add
js
sub
jbe
add
cs
sbb
leave
push
add
xor
inc
pop
adc
pop
adc
in
out
mov
dec
insb
ficoml
sbb
movsb
stc
sub
loopne
std
pop
ret
imul
jmp
daa
jmp
add
arpl
sbb
arpl
adc
arpl
pusha
fbstp
mov
ljmp
lea
or
fcompl
push
flds
mov
and
dec
repnz
fcompl
lods
testl
fmul
sub
int
push
sbb
in
push
jge
stc
adc
mov
dec
mov
jns
and
loope
imul
mov
mov
mov
repz
mov
in
outsl
sbb
shrl
add
mov
push
add
add
data16
popa
int
push
insb
inc
notl
lods
xor
sbb
dec
xor
mov
lahf
add
push
dec
push
js
dec
adc
push
lcall
aam
push
pop
jle
adc
dec
lcall
dec
pop
add
jae
fidivrl
jle
push
pop
sub
arpl
ja
pop
cmp
lcall
pusha
add
ret
fldl
out
add
cmp
push
rolb
test
inc
fstps
inc
aas
xor
adcb
xchg
into
cli
mov
imul
inc
insl
not
nop
xchg
and
daa
push
add
inc
fcompl
gs
mov
pop
fwait
negl
in
xor
fidivs
push
push
sub
arpl
test
inc
cltd
enter
in
jb
int3
int
loope
push
shrb
jo
push
push
lds
add
push
sbb
mov
mov
mov
pop
int3
inc
adc
push
enter
sub
jecxz
add
jno
mov
loop
lea
and
push
jl
pop
jb
xchg
sbb
rcrb
fnstcw
sbb
sbb
in
data16
jl
in
xor
out
sahf
leave
gs
sub
scas
fistl
mov
xor
sahf
xchg
ss
push
scas
std
sbb
in
sbb
cwtl
inc
subb
pop
pusha
out
push
test
cmp
or
aas
cmpl
loop,pt
pop
gs
cmc
ret
rcll
sub
cmp
mov
lret
lock
jecxz
jno
add
loopne
adc
sub
add
cmp
pop
push
and
in
jno
mov
sub
inc
dec
inc
cmp
mov
or
clc
dec
mov
imul
push
leave
imull
dec
loopne
sti
inc
mov
dec
push
mov
cmc
pusha
addr16
mov
in
cwtl
in
xchg
adcl
sti
hlt
subb
add
js
addb
arpl
std
mov
lret
enter
and
inc
sub
jb
pop
fscale
push
leave
adc
ljmp
sub
xchg
xor
inc
sbb
rcll
subb
add
cmp
or
xchg
jns
ljmp
sub
mov
ret
cmp
mov
push
call
pop
pop
mov
cli
ljmp
jb
mov
sbb
push
sbb
sbbl
pop
jns
jnp
cmp
jmp
cwtl
push
clc
fadd
sub
pop
dec
jae
add
cmpsb
fstl
lcall
aam
mov
popa
add
test
adc
icebp
ficomps
mov
loop
pop
in
jne
hlt
subb
addr16
aam
pop
mov
inc
pop
mov
cwtl
clc
jge
push
jb
pop
mov
push
imul
data16
sbb
outsl
jae
push
dec
sub
jle
adc
cltd
adc
mov
in
xchg
lret
sbb
out
sbb
sub
loopne
jmp
das
inc
movsl
lret
mov
jg
jmp
add
fsubs
xchg
imul
mov
fwait
push
ss
cmova
push
arpl
out
fldenv
xor
cwtl
push
add
das
lea
push
cmovno
test
mov
ds
sbb
pop
sbb
das
jno
divb
sti
sbb
subb
dec
addr16
ret
push
stos
cmp
mov
lcall
pop
dec
cltd
je
push
add
mov
pop
into
imul
adcl
xchg
rorb
dec
fimull
outsl
addl
add
xor
push
or
add
cmp
out
cltd
sub
popf
adc
xor
mov
lcall
jmp
mov
push
xor
test
out
bound
lret
dec
mov
jp
mov
test
hlt
push
stos
pop
mov
add
sub
cwtl
mov
push
or
int3
inc
out
cs
in
out
pop
repnz
lods
cltd
psubd
rcr
iret
xor
out
sbbb
sahf
sub
rep
mov
sti
aas
jb
add
fdivrl
adc
rolb
shll
add
jns
test
popw
aam
fsubrp
adc
test
xor
fisubrl
data16
and
ss
sbb
test
lock
data16
notl
ljmp
inc
lcall
sahf
inc
jno
cmp
inc
pop
add
dec
pop
mov
clc
dec
fstp
in
add
push
aaa
and
andl
mov
sub
pop
lock
mov
call
fnstcw
addl
mov
push
jno
dec
mov
ds
pushf
jge
xor
pusha
xchg
scas
cli
push
xor
mov
sbb
mov
mov
mov
cmc
dec
xchg
sbb
jp
sbb
leave
or
jne
outsb
into
sbbb
xor
and
fwait
push
xchg
cmc
outsl
jle
mov
in
out
leave
mov
cmpsl
xor
mov
jne
loope
sbb
jmp
push
imul
inc
fsubp
fdivrs
sub
ds
pop
insl
jbe
inc
inc
push
aam
aas
dec
cmpsl
int3
and
in
cmpsb
and
in
mov
cmp
lds
shll
imul
sarl
inc
jbe
incb
rcrl
mov
mov
xchg
pop
adc
call
jo
or
mov
mov
fwait
and
dec
add
call
or
sbb
mov
fmuls
and
push
jp
adc
add
inc
cmpsl
test
push
insl
ficomps
push
mov
enter
mov
aas
andl
inc
mov
and
jle
sbb
mov
mov
mov
mull
into
push
adc
ficompl
rorb
int3
xchg
repnz
xchg
inc
lcall
mov
out
leave
push
repnz
add
mov
and
inc
aas
test
insl
mov
aam
mov
shlb
jb
mov
cmpsb
jg
loope
in
sub
push
sbb
fs
cmp
call
pushf
mov
lcall
mov
adc
mov
fildl
mov
dec
sub
sub
pop
or
dec
lret
leave
aad
push
push
mov
xor
sbb
inc
inc
inc
and
clc
add
scas
inc
bound
ret
pop
stos
sub
lods
mulb
into
aaa
adc
jg
out
arpl
xchg
in
fisttpl
arpl
ljmp
add
gs
adcb
ror
loop
jne
ret
jb
add
sub
ret
mov
adc
subl
sarb
pushf
or
incb
sbb
xchg
sub
stos
test
pop
push
pop
xchg
lods
cld
or
movsl
mov
outsl
sub
clc
lea
sub
cs
pop
icebp
nop
fsub
add
push
pop
mov
pop
dec
cltd
push
andb
roll
jnp
mov
stos
js
jg
xchg
adc
arpl
sbbb
mov
aam
mov
jb
xor
jae
mov
add
xor
scas
hlt
xchg
imul
stos
test
fdivl
mov
nop
shrb
aad
or
inc
loop
negb
xor
ja
pop
jo
xchg
xchg
sbb
loop
es
xchg
push
pop
add
and
outsl
lods
mov
jne
xor
sub
mov
xor
xor
mov
adc
addb
popl
cmp
mov
pop
adcb
and
adc
pop
out
push
das
cwtl
inc
sub
int
xchg
sti
lds
call
shl
pop
fptan
inc
jnp
inc
leave
inc
testl
add
cmp
shrl
addr16
push
xor
stos
in
mov
mov
mov
pop
aas
cmp
out
ss
popa
cmp
push
faddl
pop
sarl
jae
rorb
adc
xor
das
test
jae
repz
test
ds
cwtl
aad
lods
dec
clc
adc
scas
lock
jo
loop
jle
sahf
lret
pop
xchg
jmp
cli
mov
dec
loop
jb
out
push
insl
jbe
out
dec
or
cltd
mov
call
iret
and
hlt
or
push
and
enter
pop
lret
mov
sbb
push
test
ja
xchg
outsb
add
mov
inc
pop
adc
sbbl
in
imul
inc
jbe
or
inc
popa
pop
sahf
adc
fcomip
jecxz
les
mov
aas
fs
jp
pop
xchg
xchg
or
lret
jmp
aaa
add
icebp
call
inc
mov
aaa
repnz
pusha
xchg
push
and
int3
jmp
mov
fwait
jmp
and
push
daa
outsb
inc
mov
daa
loope
cwtl
and
dec
in
cmp
push
or
adcl
cmp
test
pop
ror
push
roll
push
out
xor
mov
in
sbb
insb
daa
pop
scas
mov
stc
pop
pop
mov
ja
push
les
or
int
mov
push
dec
fcmovnb
mov
out
cli
xchg
jae
mov
and
push
push
mov
jno
push
clc
xchg
xor
repnz
jne
insl
ljmp
dec
pop
ret
pushf
pop
je
jle
add
add
jmp
xchg
mov
push
loope
xchg
cmpsl
inc
in
mov
test
sbb
sbb
mov
push
cs
cltd
int
mov
fisubl
pop
xlat
mov
addr16
pushf
dec
inc
add
les
cwtl
jno
or
inc
frstor
pusha
cli
pop
pop
sahf
std
and
mov
xchg
push
cmp
addr16
popa
outsl
cltd
xchg
cltd
sub
stc
xor
nop
push
stc
sti
in
mov
xchg
pop
test
cmp
xchg
mov
test
rcrb
jns
xchg
cmp
rol
dec
loop
fisubrl
ror
popa
out
outsw
fadds
pop
movsb
cwtl
mov
rcr
in
or
sub
push
pop
mov
and
cmpb
sub
sbb
lret
push
jae
or
mov
xlat
stos
pop
sbb
push
push
mov
ficompl
inc
ja
xor
mov
pop
xchg
or
stc
push
adc
std
sbb
mov
adcl
repnz
lock
roll
sbb
insl
ret
sub
icebp
or
xchg
xor
or
popf
mov
es
iret
mov
aas
and
push
sbb
icebp
pop
stc
popa
out
divl
sub
leave
push
xor
or
in
xchg
addr16
pop
xor
ret
aad
add
xchg
xchg
enter
xchg
fdiv
ljmp
and
sub
or
rcrl
cmp
add
fidivrl
ss
stos
pop
sbb
jo
jnp
stc
lahf
loop
mov
push
daa
ss
mov
adc
sub
fsubrs
jo
mov
popl
ds
mov
or
sti
or
jp
insb
ja
push
leave
jp
mov
dec
iret
or
push
pushf
in
fs
pop
sub
lds
fcomps
movsl
in
andl
shrl
mov
fwait
pusha
ror
fwait
jge
test
dec
xchg
push
lahf
loope
shll
leave
cltd
lods
xchg
gs
sti
test
shll
cltd
fdivrl
xchg
fs
add
lret
jl
test
in
loopne
mov
pop
scas
adc
mov
clc
enter
aas
cwtl
aad
sub
sub
lret
pop
addr16
mov
dec
xchg
cmp
daa
pop
mov
out
test
pop
into
aad
insl
sbb
cmpsl
push
adc
fidivrl
ret
xchg
ret
dec
sub
lock
xor
push
popf
sbb
sbb
js
aaa
push
incb
push
loope
xor
bound
inc
mov
movsl
popa
into
dec
pusha
cltd
dec
stos
fs
loopne
xor
xlat
ss
pop
es
cwtl
das
adc
push
push
push
and
mov
shll
test
or
fnsave
adc
xor
xor
jg
xchg
aad
daa
dec
outsb
push
stos
mov
shrl
pop
and
add
adc
bound
jae
fcomp
dec
mov
cwtl
stos
xor
cmpsb
ljmp
notl
loopne
mov
out
xchg
ss
inc
add
mov
or
sbb
jo
mov
data16
sbbb
mov
mov
mov
sbb
gs
inc
in
cwtl
test
popa
sub
repnz
ret
sbb
pop
add
and
pop
push
add
fisubl
cmp
mov
lea
call
mov
filds
inc
xor
orl
daa
outsl
add
xchg
and
push
mov
data16
bound
xor
sub
stos
arpl
mov
mov
jb
jecxz
and
adc
lock
enter
jmp
arpl
or
push
mov
pop
push
cwtl
add
xorl
push
xorl
sbb
mov
jae
dec
push
enter
ds
push
cmp
inc
cwtl
adc
sbb
nop
fcoml
pop
and
mov
xchg
fwait
mov
fisubrl
shl
dec
dec
addr16
clc
xchg
sbb
push
inc
inc
and
or
add
cmp
add
scas
sbb
and
jge
fwait
shrb
push
loopne
imul
fst
outsl
and
mov
fidivl
pusha
aaa
lret
mov
in
adc
decb
fbstp
adc
jb
popa
mov
loopne
test
fisubrs
or
mov
adc
jnp
push
pop
js
aam
xor
popa
bound
xor
xchg
or
xchg
outsl
andl
inc
sub
push
cmpsl
into
shrb
out
mov
push
inc
sub
dec
and
cwtl
sub
dec
jo
pusha
adcb
mov
fnsave
or
iret
add
sbb
jge
lock
pop
add
push
adcl
imul
and
outsb
mov
pop
mov
cmpsl
push
sub
pop
adc
sub
mov
ljmp
push
cmp
orb
pop
mov
shrl
pop
xchg
inc
in
enter
mov
rep
addr16
aaa
jno
adc
fildll
or
jbe
jg
and
mov
mov
inc
mov
mov
push
ljmp
xchg
add
test
xchg
mov
lret
cmp
hlt
and
sti
mov
inc
notl
xlat
into
sahf
cmc
jp
jbe
jb
in
testb
and
cmpsb
push
out
ja
jp
fldcw
cmpsb
inc
data16
mov
pushf
jecxz
in
imul
mov
add
test
xchg
sub
aad
subb
and
xchg
movb
sbb
fcomp
out
loopne
push
cmp
loop
lods
sbb
xor
pop
js
mov
xchg
mov
sbb
das
cmp
fwait
cmp
lcall
or
movl
fstpl
sub
call
iret
push
xchg
xor
or
push
dec
int3
out
mov
mov
adc
xlat
or
sti
rcrl
push
jge
jb
ljmp
pusha
pop
xor
xlat
and
mov
iret
outsb
aas
xor
push
sub
insb
jb
jno
adcb
sub
inc
inc
push
jae
inc
jle
add
dec
xorb
lods
xchg
lahf
test
xchg
push
mov
or
sub
cmp
lea
add
int
fnstsw
or
shlb
lret
std
xchg
jne
jne
popf
xchg
sub
test
push
and
mov
xchg
inc
jnp
data16
aas
cmp
shr
fs
xchg
faddp
cld
adc
leave
sbb
andl
aaa
xor
decl
mov
fistpl
loope
push
sbb
jmp
mov
mov
stos
sub
mov
test
ror
roll
roll
lret
pop
dec
or
fwait
cs
xchg
mov
xchg
push
outsl
dec
scas
in
or
xor
mov
push
lods
and
mov
cltd
xorl
lcall
or
xchg
in
dec
into
js
sarb
popf
insb
aaa
outsl
ljmp
push
in
pusha
shrl
push
cwtl
and
scas
dec
inc
inc
inc
push
mov
push
inc
jb
cltd
sbb
inc
shlb
xchg
jne
ficoms
sub
and
dec
dec
pop
inc
inc
sub
xchg
js
pop
and
cmp
mov
xor
pop
in
out
add
out
adc
mov
add
jae
test
sbb
outsb
mov
cli
fs
mov
or
jl
or
cwtl
sti
cmp
ds
popa
fstps
adc
xor
ljmp
test
dec
sub
clc
inc
sbb
or
sbbl
cs
pop
stc
add
dec
sahf
adc
mov
add
fs
push
pop
sub
pop
and
or
push
mulb
lret
leave
ret
sahf
sbb
sbb
repnz
addr16
test
mov
xchg
ja
push
gs
insl
xchg
cmpsl
pop
into
repnz
iret
mov
push
rolb
xchg
arpl
sbb
or
outsl
adc
std
pop
leave
and
dec
scas
adc
icebp
xor
fildll
lods
fwait
inc
xor
das
add
gs
push
lods
ja
jae
movsb
sbb
cwtl
repnz
xchg
xor
push
jmp
jp
notb
sub
push
pop
gs
push
leave
test
push
in
test
push
loope
inc
xchg
xchg
lahf
jbe
xor
cltd
es
jl
mov
ljmp
pop
loop
sub
xchg
inc
jb
xchg
aaa
icebp
lcall
ljmp
imul
inc
dec
out
inc
aam
rolb
xchg
mov
test
and
aad
inc
sti
aam
inc
jo
sbb
fdivp
adc
incb
out
adc
mov
sahf
mov
out
sbb
xchg
push
sbb
mov
xor
lret
push
xor
add
jmp
adc
xchg
fldl
in
inc
inc
mov
nop
popf
sbb
mulb
inc
push
ficompl
fs
cld
or
aad
test
loopne
popf
pop
jmp
pushf
int3
ret
les
movsl
ds
push
fcompl
mov
cmp
mov
push
mov
call
call
pop
pop
addb
andl
aaa
ja
cmp
iret
rcll
xlat
inc
mov
in
lret
imul
les
scas
sbb
xor
cmp
js
xchg
add
sub
pop
mov
fwait
push
xchg
mov
iret
jle
call
jne
sbb
lret
or
outsb
add
mov
clc
or
rcl
stos
push
add
jg
pusha
sub
xor
shr
popa
fidivrs
stos
jge
loopne
js
adc
fwait
push
inc
and
insb
xor
lret
pop
mov
out
and
add
or
dec
shll
xor
add
dec
lret
jae
insl
arpl
fcmovb
sbb
popl
roll
mov
sbb
inc
sub
sub
pop
add
and
lods
sbb
dec
test
pop
cmp
add
inc
xor
dec
pop
arpl
mov
add
push
fistl
mov
data16
mov
fs
mov
jecxz
js
test
mov
cmp
pop
pushf
cld
mov
fwait
jo
add
cwtl
popa
push
mov
bnd
dec
dec
jg
bound
mov
cmp
pop
or
test
adcl
jne
lret
xchg
int
cmp
xlat
inc
mov
adc
out
mov
push
jae
data16
scas
push
mov
and
ss
adc
aad
jbe
xor
jnp
lods
inc
xchg
jp
cmc
sbb
add
fadds
xchg
inc
sti
ret
fdivrl
adc
push
inc
mov
mov
adc
pop
cmp
out
ss
add
xor
int3
inc
loopne
aaa
pop
cltd
dec
sbb
adcb
mov
add
enter
ja
or
mov
fwait
xor
sti
cmp
add
lods
sahf
scas
sbb
sub
or
int3
popf
mov
push
push
inc
arpl
addr16
sti
aaa
mov
fistps
loop
cs
sub
cmp
incl
or
ljmp
add
aam
fisttpll
mov
cmp
xor
cmp
inc
pop
jnp
sbb
lea
stos
push
xchg
out
negl
pop
mov
out
push
sahf
inc
cli
cmc
or
jmp
int3
inc
push
push
ret
push
dec
cs
fmul
mov
jno
or
push
cmp
and
stos
sub
sub
imulb
insl
push
nop
and
aaa
shl
fucomp
fildll
imul
push
lea
sbb
jae
jp
js
push
add
jns
inc
inc
jno
jns
leave
enter
mov
ss
jo
rclb
mov
cmp
push
and
repnz
push
mulb
and
add
xlat
lea
cmp
ror
flds
sub
cld
out
xor
shll
cwtl
sbbb
mov
xor
jo
mov
push
lret
sub
jbe
sbb
mov
sub
jno
cmp
add
xchg
cwtl
fstl
cmp
xchg
xor
xor
inc
and
dec
leave
and
xchg
push
rclb
mov
inc
aad
addr16
mov
add
ss
push
scas
scas
fcom
xor
andb
jae
sbb
pusha
inc
sub
fimuls
push
dec
cs
and
ret
imul
push
add
xchg
xor
jns
push
xchg
mov
mov
xchg
pop
add
sub
imul
int3
xor
cltd
mov
movb
push
sub
bound
fs
ss
imul
inc
dec
push
fwait
xchg
sbb
pop
cs
xor
sub
push
mov
cli
outsl
inc
aas
sub
aaa
and
scas
xor
mov
testl
xor
xchg
adc
or
adc
push
push
add
loop
dec
or
sub
sahf
test
add
push
popf
arpl
pop
xchg
xchg
mov
fwait
jno
dec
popa
imul
or
icebp
clts
jecxz
mov
loop
xor
inc
stos
shl
inc
ja
xchg
mov
adc
dec
push
xchg
jmp
xchg
rcr
scas
sub
stos
rcll
push
push
cltd
sarb
stos
jo
cmp
loop
out
addl
push
shlb
cmp
push
sbb
sbb
stc
test
or
jb
notl
and
bound
dec
addr16
cltd
rorl
mov
cmp
ret
mov
xor
push
sbb
jge
push
push
xchg
scas
fsubrs
mov
inc
pop
out
inc
sub
dec
jbe
leave
icebp
leave
int
int
inc
rorb
daa
pop
jmp
add
jb
popa
inc
in
push
daa
mov
ja
push
arpl
dec
in
out
out
gs
cmp
and
leave
negb
addl
dec
dec
gs
pop
xor
or
imul
inc
out
mov
lcall
outsl
dec
and
nop
fwait
xor
xor
ret
pop
inc
mov
lcall
inc
pop
les
push
hlt
xchg
mov
out
xor
rcl
xor
pop
mov
xor
and
fucomp
lret
xchg
mov
sarl
push
fldenv
cmp
jne
pop
imul
dec
jbe
insb
dec
add
lcall
mull
out
jb
push
loop
sub
sbbl
mov
sub
stos
adc
addb
loope
dec
repnz
mov
frstor
addr16
xlat
pop
fstl
fstpt
lds
insb
jle
pop
push
or
hlt
mov
outsl
mov
bound
data16
sahf
xchg
dec
add
fcom
out
jbe
jg
fisttpll
xor
pop
into
push
stos
pop
cs
inc
mov
repnz
jo
repz
ljmp
adc
xor
jp
xor
mov
inc
fldl
pop
adc
cmp
mov
inc
decl
push
insl
mov
cli
push
mov
dec
xor
arpl
xchg
dec
cmp
scas
mov
sbb
mov
or
inc
jnp
or
jno
xchg
stos
and
pushf
adc
bound
hlt
mull
pop
dec
lods
jne
sbb
pushf
adc
insb
sbbl
roll
push
lods
add
and
jmp
jae
pop
adc
or
mov
pop
dec
sub
test
sbb
mov
sbb
stc
inc
jo
jno
push
push
xchg
and
shll
sahf
test
outsl
jne
or
push
xchg
mov
imul
shll
sbb
cwtl
add
push
ficoml
out
daa
and
les
cmp
lret
and
mov
sbb
xlat
cwtl
add
cmp
xchg
mov
movsl
test
mov
rcll
sbb
push
push
jmp
add
lea
xchg
rclb
sbb
mov
out
mov
dec
ja
shll
xor
or
jb
ss
mov
fs
scas
std
or
mov
inc
push
aam
cmp
sbbl
mov
test
or
loopne
push
push
mov
pop
insb
mov
and
cmp
push
pop
cld
or
xchg
fidivs
xchg
pop
add
pop
cltd
lea
or
inc
adc
pop
cmp
push
xor
jp
xor
adc
cmp
inc
xor
es
pop
ja
push
mov
mov
pop
lods
movsb
mov
xorb
aaa
loopne
and
sahf
mov
inc
jae
pop
rcrl
or
dec
movsl
and
mov
jnp
mov
iret
sbb
cltd
mov
adc
leave
leave
xchg
adc
stos
sub
mov
xor
pop
repnz
mov
and
jns
testb
dec
outsb
xor
orl
mov
sbb
pop
sbb
xchg
lret
gs
pop
cmp
inc
mov
mov
pop
repnz
leave
orl
nop
imul
incb
add
popf
arpl
unpcklps
jnp
xor
sub
test
and
sub
sarl
outsb
daa
inc
jno
shr
dec
wrmsr
adc
mov
fldcw
inc
int
inc
and
aad
push
aaa
dec
push
lahf
popf
ljmp
xchg
mov
cmpsl
cmp
cwtl
addr16
pop
lahf
xchg
sub
lcall
ficompl
jle
push
fldlg2
mov
jae
ret
push
test
ljmp
mov
inc
fidivrl
ljmp
lods
xchg
inc
ret
test
std
mov
push
sbb
sbb
aam
mov
fcmovnbe
sbb
or
lahf
mov
ljmp
aam
jnp
push
sahf
xchg
inc
pop
clc
push
mov
dec
lcall
or
mov
loopne
jae
sbb
es
lds
or
out
mov
jg
out
movsb
gs
mov
mov
xchg
ljmp
fstl
fists
arpl
jno
rcrl
xor
push
dec
mov
repz
mov
fistl
pop
loope
outsb
sarl
and
notl
jns
xchg
dec
xor
or
lcall
cmovns
add
rorb
lods
aaa
imul
aas
and
out
jbe
andb
or
xchg
adc
xorb
and
shll
bound
out
pop
fstpt
int
push
mov
jecxz
sysexit
or
sub
add
push
repnz
mov
sbb
inc
test
test
stc
jle
in
insb
mov
inc
push
inc
pop
xchg
insb
imul
jbe
inc
pushf
and
dec
xor
icebp
cmpl
iret
sbb
mov
jle
icebp
loopne
sbb
into
add
daa
push
mov
shlb
inc
xchg
dec
daa
mov
push
dec
ds
pusha
lock
sub
pop
mov
jae
mov
lcall
add
xor
cmpsb
out
std
sub
mov
out
push
dec
sbb
add
add
xor
scas
lds
dec
mov
xor
mov
push
les
imul
sub
stos
sti
inc
mov
js
inc
fwait
jg
in
sbb
add
lahf
aaa
sbb
xor
adc
mov
pusha
fcoms
mov
fwait
test
jo
pop
adc
sbb
sbb
insl
ljmp
pop
jno
push
adc
aaa
ret
stos
add
in
imul
add
adc
pop
cmc
mov
add
mov
dec
enter
inc
sub
inc
push
rolb
jp
sbb
xor
inc
test
loopne
lcall
bound
rcl
bound
dec
add
psrlw
or
or
hlt
push
jns
fwait
mov
into
mov
cmp
pop
insb
or
outsb
mov
aad
stos
imul
testl
mov
lret
cmpsl
sahf
sub
cmpsl
lret
xchg
adc
sti
xor
jmp
rcll
xor
jo
jl
xor
fildl
cmp
jle
jb
scas
nop
dec
jecxz
jb
clc
cwtl
pop
push
jmp
cld
inc
aas
imul
mov
xor
test
jle
test
ds
sub
and
mov
je
jecxz
mov
aad
sbb
add
adc
xchg
sbb
xchg
sbb
push
ds
pop
cmp
push
das
loope
mov
fdivrp
jb
lretw
stos
xor
and
shll
push
jbe
xchg
pop
in
jmp
jp
ficoms
add
xchg
call
xchg
and
lret
mov
mov
jns
fisubs
or
fwait
mov
push
or
mov
iret
sub
xor
lods
sbb
in
fwait
xchg
push
xor
push
xor
rcrb
cmpsb
xchg
mov
aam
scas
jnp
cmp
pop
xorb
call
mov
shrb
sub
movl
or
lock
xchg
les
call
sbb
pop
xor
xor
push
adc
push
xchg
pop
stos
bound
push
pop
xor
inc
push
push
add
out
test
push
out
in
stos
outsl
xor
test
mov
iret
ret
test
cmp
test
mov
push
jg
pop
popa
jle
cmpsb
fs
cmpsl
push
scas
xor
ljmp
push
das
ret
xchg
dec
lcall
shrb
es
hlt
xor
addr16
xor
cmp
sub
push
add
and
test
popf
jecxz
xor
imul
arpl
cmp
out
xor
imul
pop
and
jb
fs
and
pop
mov
in
add
jl
mov
cwtl
cmp
test
lods
hlt
cwtl
inc
dec
jp
jne
test
daa
cltd
test
repnz
sub
add
sub
inc
xchg
mov
mov
hlt
sub
cmp
cmp
lods
orl
jno
pop
lahf
push
rorl
cld
push
add
iret
and
mov
xor
adc
ret
xchg
test
add
add
or
fsts
adc
mov
mov
push
scas
imull
mov
xchg
push
popf
out
push
stos
sbb
push
test
std
movsb
lahf
adc
dec
mov
int3
jae
rolb
xchg
nop
dec
push
xor
mov
roll
les
pop
sub
es
ja
sub
data16
add
or
sahf
inc
add
in
loopne
add
cmp
mov
dec
dec
testb
das
xor
ja
sbb
fisttps
mov
dec
push
lods
and
shl
xchg
cwtl
addr16
jl
push
or
lods
mov
ja
cli
xchg
test
and
dec
aas
xor
jmp
cmp
inc
into
jnp
mov
leave
inc
lcall
dec
xor
sbb
test
scas
adcb
sbb
jns
cmp
push
dec
stos
adc
fmull
xlat
mov
lahf
es
mov
pop
xchg
mov
mov
adc
in
leave
decl
in
or
cs
test
ja
mov
loop
and
addr16
out
cs
and
and
jp
notb
les
vmread
inc
jno
push
test
sbb
scas
cld
fwait
mov
inc
jb
add
xchg
lock
inc
inc
inc
outsl
aas
lods
cwtl
mov
inc
cld
or
jae
xor
add
xchg
inc
inc
mov
xlat
pop
inc
out
push
xor
pop
lods
enter
notb
xchg
mov
mov
mov
sbb
das
fprem1
flds
nop
pop
idivl
dec
sbb
fists
ret
mov
fisubl
pop
pop
sub
pop
and
or
cld
jne
movsl
cmp
shl
push
mov
mov
add
lret
jp
add
flds
mov
jns
adc
cltd
xchg
lods
daa
imul
outsb
inc
bound
imul
shrb
push
mov
pop
dec
xchg
ficoms
mov
leave
and
scas
dec
cmp
jno
data16
repz
stc
jg
jns
test
push
jae
clc
fwait
dec
inc
push
insb
mov
and
divl
pop
aaa
dec
test
push
divl
sahf
xorl
cwtl
ja
sub
pop
cli
sbb
mov
repnz
jo
push
pop
sarl
push
repz
cmp
jp
jae
xchg
pop
data16
fldenv
inc
mov
les
mov
cmp
enter
ret
sbbb
jmp
and
cmp
js
rcrb
lds
out
xchg
jne
mov
sbbl
mov
js
push
adc
addl
call
xorb
lret
in
xchg
mov
sbb
pop
sub
or
jne
sub
jbe
sub
jbe
ror
scas
int
mov
xchg
insb
arpl
test
pop
dec
int3
xchg
ffreep
jae
test
add
cltd
jno
jo
popf
add
fcom
icebp
insb
fdivrs
inc
jmp
push
cltd
clc
and
jno
xchg
rcrb
adc
stos
repz
pop
xchg
cwtl
mov
cld
and
rorb
stc
sub
mov
dec
pop
pop
hlt
mov
hlt
push
dec
stos
lahf
xchg
dec
mov
jecxz
jne
sahf
jb
sbb
adc
cwtl
sbb
aam
and
paddd
lea
mov
mov
mov
sbb
scas
daa
dec
push
cmp
mov
push
jbe
sub
enter
jecxz
mov
inc
jb
pop
pushf
dec
push
pop
daa
or
pop
xchg
xchg
ja
or
pusha
pop
inc
leave
fldenv
dec
loop
lahf
add
add
mov
xchg
into
pop
jmp
inc
jmp
add
push
nop
fcoml
out
scas
jmp
in
ret
outsb
or
jo
push
stos
je
cmpsb
movsl
fadds
mov
add
push
icebp
xchg
movsl
fwait
enter
cmp
nop
jmp
hlt
and
or
jae
sub
pop
lods
test
loope
xor
add
icebp
xor
shrl
fdivs
push
stos
arpl
mov
imul
aam
or
xchg
inc
mov
repnz
arpl
pop
lahf
outsb
lret
into
outsl
mov
xchg
mov
fcom
mov
jne
jecxz
ret
add
dec
out
iret
mov
xor
add
and
mov
cmp
call
jns
mov
cmp
faddl
push
inc
leave
cmp
out
xor
lea
in
arpl
adc
fstl
pop
addl
inc
fisubrl
xor
pop
jno
mov
int3
nop
pop
retw
icebp
sbb
pop
mov
mov
lahf
outsl
adc
aaa
rcll
or
and
adc
jl
xor
jne
ljmp
pop
dec
or
cli
cs
push
bound
fists
arpl
cmp
int3
pop
test
xor
test
xlat
push
sub
fcomps
fwait
cmp
inc
sarb
cmp
stos
icebp
addr16
pop
stos
ss
add
and
and
call
sbb
mov
sbb
lds
mov
push
test
inc
xchg
outsl
jmp
xor
mov
shlb
jbe
loope
ret
cmp
movsb
and
jmp
xchg
js
int
popf
add
call
mov
or
dec
mov
icebp
cmpsb
xor
mov
bound
and
imul
fwait
jmp
fldt
add
mov
ss
bound
sarb
pop
lahf
aam
jmp
pop
test
out
into
adc
dec
in
xchg
cmp
lahf
xor
add
imul
adc
pop
sub
imul
jp
addr16
or
jo
inc
cmpsl
pusha
mov
dec
imul
dec
jno
nop
pushf
add
lds
adc
sbb
mov
inc
dec
movb
outsb
ja
popl
es
xlat
out
sbb
fistps
mov
mov
dec
lcall
pop
dec
mov
sbb
outsl
xchg
pslld
les
mov
sbb
clc
aam
mov
fdivr
inc
xlat
lcall
and
addl
mov
ss
das
or
out
std
clc
into
jmp
inc
cmp
push
data16
fiaddl
sbb
pop
inc
sub
mov
ss
xchg
aam
mov
daa
pop
xchg
push
add
clc
xor
lcall
push
movsb
mov
out
loop
mov
movsl
xchg
loope
ret
cmp
dec
aas
call
arpl
pop
cmp
sti
push
push
jge
mov
std
out
inc
mov
enter
dec
sub
push
pop
push
push
arpl
mov
icebp
mov
and
add
cwtl
inc
push
data16
rolb
push
cmp
in
lods
rolb
xchg
out
or
ret
subl
jnp
jnp
cmp
mov
cmp
push
mov
push
nopl
or
insl
dec
popf
push
les
inc
sbb
pop
jb
add
aam
xchg
xchg
mov
adc
inc
scas
and
xor
jg
fsubrs
stos
xchg
xchg
sbb
inc
movsl
mov
xchg
inc
pop
inc
xor
lds
fwait
sub
adc
inc
jbe
js
push
rol
data16
jmp
sbb
push
xchg
xorb
pusha
dec
jae
sti
ret
repz
rolb
lahf
scas
inc
dec
lock
mov
movsl
push
sbb
push
cmp
add
xchg
xor
mov
cmp
and
popa
sbb
cmp
push
orl
push
sub
jp
jp
or
dec
xchg
jb
xor
jb
xchg
sahf
es
push
aas
cld
clc
cmp
sub
mov
in
mov
stc
fsubs
xor
mov
jle
aas
push
gs
rorl
dec
subl
int
jnp
jmp
imul
push
mov
imull
and
rolb
ds
sub
outsl
add
repz
loope
shrb
mov
sbb
sbb
jb
xchg
jbe
fstpl
fmulp
push
push
jae
sub
sbb
pop
mov
std
popf
aaa
lret
pop
dec
mov
iret
push
outsl
pop
add
mov
ret
mov
and
mov
inc
lods
xor
les
sub
cmc
ds
sbbl
sbbl
add
mov
js
hlt
push
pushf
in
inc
sbb
mov
in
xchg
jnp
push
or
mov
or
sbb
pop
fwait
insl
aam
dec
mov
xchg
in
jno
jmp
lahf
push
iret
stos
xchg
pop
cltd
in
jne
or
into
out
ret
xchg
popa
xor
orl
ret
cmpsl
adc
setg
stos
xchg
lcall
adc
xchg
sub
jnp
sbb
xchg
fmulp
out
int
jl
dec
mov
sub
ficomps
lahf
xor
lcall
test
pop
xor
daa
lods
fistl
sahf
lcall
cwtl
testl
lds
fs
push
mov
cmp
push
addr16
ss
call
push
das
mov
addr16
in
mov
out
or
xchg
fcmovnu
ja
jnp
ja
jne
dec
push
or
addr16
sbb
xor
and
pop
notl
inc
sub
dec
loop
sti
add
pop
sub
mulb
popa
cmp
dec
in
dec
mov
aas
stos
push
lret
xor
aam
dec
es
cmp
test
shll
push
lcall
cmpsl
fadds
inc
iret
and
pop
mov
pop
ljmp
sbb
leave
testb
test
add
mov
pop
aam
addb
sarb
inc
xor
or
add
dec
xchg
es
leave
push
push
push
mov
leave
repz
in
mov
mov
mov
lods
inc
lret
add
pusha
je
rorb
dec
push
push
add
mov
sbb
dec
push
or
xchg
sub
in
mov
jmp
jnp
adc
pop
addl
pop
pusha
pop
push
aas
mov
movsb
adc
jb
outsl
adc
push
pop
push
les
push
outsl
mov
ja
sbb
add
adc
jns
jno
inc
in
lods
jecxz
and
xor
mov
or
jne
insw
mov
pop
xor
adc
inc
xchg
ja
mov
cmpsb
mov
imul
ds
jne
mov
xor
scas
stc
shlb
sub
inc
dec
inc
out
cmp
jmp
jb
and
inc
cmp
or
sahf
sub
mov
scas
xchg
mov
rorl
push
sbb
adc
pop
movsl
pop
lods
mov
xchg
mov
and
mov
push
lret
xorl
cmp
or
fs
hlt
dec
adc
mov
addps
sub
or
popa
dec
lcall
lea
js
ljmp
pop
clc
sbbb
insl
sahf
sub
addr16
in
and
fdivrl
xchg
push
sbb
rcr
iret
aas
adc
jp
lea
sub
dec
fistps
add
xchg
jnp
in
es
push
xchg
ja
sbb
adc
sahf
sbb
pop
sbb
fdivs
pand
pop
push
mov
inc
hlt
dec
sarb
adc
in
inc
push
jae
jnp
or
cmc
nop
mov
push
push
sbb
shlb
pusha
cwtl
mov
sbb
enter
out
jbe
inc
loope
jne
orb
rcl
add
pop
jg
push
mov
or
lcall
xchg
xor
jbe
jbe
scas
pushl
rolb
sarl
iret
inc
rcrl
jae
pushf
inc
inc
add
fwait
jle
imulb
add
test
add
data16
scas
mov
loop
lods
test
cmp
daa
mov
sbb
xchg
and
adc
mov
sbb
data16
leave
jno
jno
push
cmp
sbb
sbb
cmpsl
mov
insl
dec
ret
test
shll
dec
xor
cmpsl
lods
or
nop
mov
adc
popa
xchg
sbb
mov
add
sub
cld
and
push
movsl
sarl
filds
jle
xor
inc
sub
push
jecxz
dec
loope
or
inc
insl
lret
ja
or
loope
pop
sbbb
xchg
xchg
push
push
popf
fwait
fwait
in
ret
fnstsw
stc
incb
and
pop
cmp
loopne
cwtl
jns
push
setge
test
jnp
jl
mov
jbe
jae
cmp
mov
inc
mov
mov
dec
adc
mov
fwait
jl
mov
or
dec
inc
inc
clc
in
shll
ds
xor
testl
or
stc
inc
and
add
jae
inc
pop
adc
bound
push
add
sbb
mov
movsb
arpl
xor
cli
dec
test
cmp
aad
aaa
insl
lods
xor
sbb
leave
out
inc
xchg
jl
dec
push
sub
and
mov
and
lods
dec
pop
mov
mov
push
lods
not
add
aaa
aam
pop
test
mov
jae
jl
jle
dec
and
cli
pop
fisttps
ds
mov
mov
fldt
cmc
sub
rclb
xor
inc
inc
out
mov
push
xchg
xchg
lods
out
and
xor
aas
lret
sub
adc
dec
fidivrl
push
dec
movsl
ficompl
xchg
sub
sahf
sbb
inc
cmp
inc
out
out
scas
mov
jnp
push
movsl
xchg
lock
stc
mov
sbb
rcrb
imul
movsl
sbb
insl
push
cmp
ljmp
and
mov
inc
nop
sbb
push
jle
lahf
jmp
sbb
jb
jbe
mov
jnp
lret
cld
inc
adc
ja
jns
clc
cltd
pop
or
cli
or
arpl
lret
into
fdivrp
mov
add
dec
das
out
je
mov
lcall
aas
push
leave
xor
xchg
mov
add
lods
mov
repnz
jbe
test
and
add
in
sbb
sub
fwait
xor
jno
imul
rcrl
push
mov
nop
jle,pn
adc
and
sbb
aas
sbb
inc
loop
add
sub
adc
rolb
int
fisubrl
andb
ljmp
repnz
int
cli
stc
out
or
loop
jp
push
xchg
xchg
daa
xor
lds
call
sub
cs
pop
mov
int3
and
ret
push
sub
or
loope
pop
imul
fwait
lcall
repnz
sub
loop
fwait
repz
sub
or
das
jne
fwait
gs
and
and
mov
icebp
cmpsb
pop
int3
pop
mov
in
and
push
stos
inc
push
adc
leave
cld
dec
lods
add
mov
push
out
or
cmp
pop
jp
sbb
subl
loopne
push
stos
and
repz
push
inc
push
test
cmp
insl
xchg
xor
push
or
add
jb
add
jmp
or
enter
fwait
xchg
pop
xchg
mov
inc
and
test
sbb
loop
shlb
cmp
xor
lds
in
sbb
or
sbb
rolb
fidivs
jno
jae
mov
dec
cmp
cmc
inc
in
jb
fistpll
lods
dec
adc
lret
or
fwait
push
hlt
add
sbb
aam
inc
adc
cld
or
add
xchg
mov
stos
xor
imul
xor
jmp
dec
push
mov
clc
lret
sahf
inc
repnz
xor
pop
inc
dec
mov
push
inc
in
xchg
push
push
cmp
stos
sbb
jne
or
jno
jae
xchg
pop
inc
or
fsubp
cs
push
divb
sub
and
cmpsl
lgs
cmc
outsb
cmpsl
jo
sbb
ljmp
pop
in
pop
popf
mov
loop
mov
or
popl
es
pop
js
jns
andl
jne
push
rcl
arpl
mov
dec
cmp
pop
out
repz
shlb
lcall
cmp
sbb
fsubrs
int3
xchg
je
std
pop
int3
sahf
jno
aaa
xchg
dec
inc
fsts
repz
decb
xchg
popf
jle
lds
pop
sbb
jns
fsubrp
movsl
mov
jmp
shll
xor
movsl
repnz
jae
loope
mov
fimull
jns
fld
test
lret
stc
ficompl
lods
push
or
aaa
xor
xor
ficomps
add
cmp
and
jle
shlb
in
cmp
inc
inc
sbb
lret
push
xor
add
cmp
cmp
and
push
arpl
dec
stos
cmp
into
popa
push
insl
movsl
pop
lahf
sbb
push
rcrb
movsb
add
xchg
pop
push
sbb
xchg
testb
mov
mov
fistpll
iret
inc
jge
cs
jnp
aaa
lahf
pop
rolb
and
sbb
xor
scas
sub
enter
insb
inc
cmp
testb
outsl
cmp
in
xchg
add
push
or
jmp
push
fmuls
pop
inc
clc
xor
repnz
jns
mov
xor
xchg
aaa
mov
xor
inc
mov
inc
jno
adc
bound
xchg
adcl
xchg
add
cmp
shlb
out
push
mov
xor
xorb
testb
loope
testl
pushf
ret
lcall
mov
arpl
mov
outsl
sahf
or
aaa
xor
add
add
and
xchg
and
mov
add
xor
jmp
rcrw
test
xlat
xchg
adcl
jne
pop
cmc
arpl
mov
stc
lock
sbb
xchg
push
mov
and
jge
sbb
jle
enter
loop
aaa
hlt
into
movsb
sbb
sub
aas
ljmp
loopne
loope
push
stc
cmp
inc
mov
xor
pop
inc
jmp
shrb
mov
push
jo
and
pop
pop
inc
gs
push
repz
sub
inc
insl
or
sarb
inc
cmp
js
lds
test
sbb
xor
jo
cmp
sub
mov
mov
in
pop
fs
insb
shlb
stos
jo
jbe
out
xchg
sbb
in
int
das
xor
jo
xor
call
add
push
jns
stc
dec
dec
js
xlat
inc
or
push
pop
cmp
aaa
xorb
stos
mov
dec
jnp
or
sti
and
inc
cs
sarl
outsb
arpl
sbb
std
push
xchg
xchg
mov
lods
bswap
arpl
rorb
pop
imul
jecxz
xor
leave
outsl
jb
xchg
push
out
xchg
jae
movsl
cld
push
sub
fsubs
mov
adc
push
call
cmp
cmp
cmc
pop
dec
int3
ljmp
ret
mov
xor
and
fsubrl
cmp
push
outsb
cmpl
add
or
ret
push
scas
in
and
mov
pop
roll
scas
xor
pop
inc
addr16
dec
or
inc
stos
dec
int3
lds
notl
jo
pop
mov
mov
out
push
lods
bound
inc
shlb
std
push
imul
jl
mov
in
and
movsl
lcall
xlat
std
lock
lea
mov
pushf
sub
mov
mov
cmp
mov
cmp
lds
jbe
shll
insl
push
test
push
jno
jno
and
addl
scas
in
shrb
xchg
mov
test
pop
ja
sbb
xchg
sbb
mov
cmpsb
sahf
cltd
lret
pop
add
call
iret
mov
sbb
out
jb
stos
pop
inc
leave
ror
lock
adc
add
inc
push
cltd
or
test
jg
cmpsl
lea
or
scas
sub
cmp
sarl
mov
clc
cmp
mov
mov
fwait
repz
xchg
loope
sbb
pop
inc
sbb
pop
xchg
int3
xor
movsl
pop
push
lcall
ror
dec
mov
mov
push
push
push
test
test
iret
sahf
xchg
lret
and
inc
arpl
outsb
push
mov
imul
gs
push
xor
cli
movsb
dec
and
xchg
jb
sub
outsl
iret
mov
xor
aas
cmpsl
adc
sbb
ss
cli
sub
jecxz
ss
or
sti
xchg
dec
adc
fsubl
sbb
add
pushf
stos
push
lahf
push
push
lcall
add
sub
dec
fwait
inc
out
push
inc
adc
xor
ret
shl
scas
dec
sbb
lcall
sbb
add
js
sub
inc
aaa
int3
and
imul
xchg
pop
jg
mov
loop
dec
test
pop
fcomps
add
movhps
cmp
sahf
cmp
add
pop
iret
arpl
jecxz
add
icebp
popa
pushl
inc
jo
jge
inc
add
inc
leave
test
ds
and
xchg
inc
out
or
fisubrs
icebp
aad
or
fcomp
mov
addr16
cmp
and
xchg
or
and
cmp
loope
xchg
jmp
push
je
lods
cltd
nop
cmc
jno
dec
cltd
pop
lds
mov
test
inc
lods
jb
shrl
inc
fwait
inc
jnp
adc
inc
pop
xchg
std
call
bound
sarb
cmp
xlat
dec
push
xchg
pop
bound
fistl
push
xor
repz
add
in
sbb
rclb
stos
xor
leave
jae
jge
xchg
dec
pop
adc
inc
inc
outsb
cld
sbb
sahf
push
out
sub
adc
cmp
les
lahf
sbb
hlt
lods
loop
sub
scas
jnp
xchg
mov
es
out
jg
rcrb
loopne
mov
push
mov
es
in
sarl
and
inc
test
xchg
cmpsl
mov
js
add
fwait
shrb
xchg
shrl
or
int
push
sbb
jle
and
push
nop
push
dec
fwait
iret
and
xchg
push
push
pop
enter
std
lods
fs
mov
leave
test
cmp
and
lret
sbb
dec
and
push
inc
adc
popa
add
xchg
push
mov
fstp
and
inc
inc
test
insb
jnp
fstpl
and
or
cwtl
and
and
inc
sbb
arpl
push
or
pushf
fwait
mov
dec
aad
arpl
add
call
add
cwtl
rcrb
sub
mov
cli
mov
xorb
pushf
sbb
cmp
cmp
aaa
mov
mov
test
mov
jae
fnstcw
add
push
cmpsb
xor
fs
or
push
or
jb
cmp
dec
add
mov
call
stos
leave
daa
pushf
lret
imul
lds
sbb
add
mov
fadds
xchg
or
popw
dec
xchg
fwait
xor
jno
pushf
enter
js
call
addr16
jmp
sub
lock
cs
push
jl
ror
cmpsb
nop
sbb
lcall
xor
pop
mov
jb
rolb
sti
jns
pushl
rorb
fidivrl
jo
xor
mov
push
daa
lcall
sbb
divb
lods
sbb
xor
iret
ja
xor
sahf
push
jge
cltd
addr16
fildl
stc
mov
stos
lret
sub
fiaddl
dec
es
loope
mov
int3
jg
sub
jb
bound
adc
sbb
xchg
ds
pop
pminsw
fmulp
adc
sub
test
int
lret
xchg
jbe
push
es
fiaddl
and
test
inc
fcompl
inc
add
pop
mov
or
push
sub
pop
scas
xchg
jecxz
jl
sbb
pop
movsl
fstps
shrb
mov
dec
decb
call
inc
sub
sti
sbb
aaa
movsl
es
adc
dec
xlat
sub
sub
fcmove
jb
aaa
pusha
iret
add
call
inc
or
fnstsw
push
xor
mov
call
xchg
adc
jae
cmp
xor
cmp
stc
sbb
jne
xor
cli
lcall
cmc
mov
jne
sbb
jl
testb
fwait
fwait
mov
daa
pop
iret
je
jl
cltd
out
jno
mov
rol
frstor
sbb
mov
mov
xchg
cmp
lods
dec
sbb
jno
aad
cmp
cmp
sbb
insl
mov
cmp
xor
je
ja
je
imull
mov
fs
add
mov
adc
or
js
dec
xchg
lds
lret
sbb
notb
aaa
sbb
sub
xor
cwtl
addr16
jne
and
jns
out
dec
mov
or
jle
in
scas
lret
icebp
mov
dec
nop
cmc
rcll
js
jmp
jmp
mov
ss
cltd
lock
cwtl
insb
sub
in
outsb
pushf
movsl
in
and
mov
lret
xor
lret
sbb
lds
out
aam
sub
dec
out
add
lcall
outsb
sbb
push
rcrl
xorl
xchg
pop
adc
mov
cmpsb
jnp
into
lret
arpl
pop
cmp
ficompl
test
xchg
cmp
pop
inc
sub
and
lret
lds
sbb
movsl
imul
call
rorb
lock
in
add
jno
cmp
dec
cmpsl
add
sbb
adc
mov
xor
inc
mov
mov
mov
dec
push
dec
sbbl
sbb
idivl
add
pop
sahf
fwait
cmp
xchg
jns
mov
popf
push
add
popf
hlt
mul
jo
mov
mov
mov
lods
andl
ret
or
cmp
aam
xchg
jnp
xor
arpl
jmp
xor
xor
adc
jnp
mov
push
nop
movsl
lock
clc
cld
push
cmp
jno
sahf
push
aaa
lods
add
shll
fiaddl
push
sub
in
stos
push
movsb
xchg
out
cli
mov
or
push
dec
push
sbb
fdivr
fcmovnu
push
les
xor
push
cmp
sbb
xor
mov
push
shlb
xchg
push
mov
pop
das
sbb
out
data16
pop
scas
and
ficompl
mov
outsb
adc
dec
fwait
xchg
pop
or
dec
add
popa
inc
jp
fsubs
jmp
lds
mov
sub
xor
popf
fwait
sbb
movsb
jl
mov
jg
inc
jbe
insb
cli
stc
or
mov
xor
fisttpll
jo
cmc
xor
push
lret
mov
cmpsb
jno
rorl
lods
jne
aaa
inc
mov
imul
adc
cmpsb
sbb
leave
xlat
cmp
sbb
mov
sbb
or
lods
stc
hlt
scas
mov
bound
clc
shll
cmp
cld
sub
inc
xchg
aam
faddp
scas
gs
add
fimull
jmp
cmovp
fistpll
push
pop
or
jns
in
pop
cmp
test
inc
sbb
jmp
and
fildll
addr16
fldt
pop
je
cltd
rolb
ret
sahf
inc
fs
sub
add
sbb
inc
and
xor
aas
aaa
hlt
jecxz
mov
js
out
mov
inc
pop
insl
jl
sbb
fwait
cmp
xchg
aad
stos
stos
data16
mov
inc
jo
shr
fldt
cmp
or
nop
pop
flds
inc
jecxz
outsl
clc
inc
insb
push
pop
jbe
stos
jne
shr
hlt
pop
adc
imul
inc
shrb
addr16
pop
xchg
rcrl
inc
inc
sti
dec
in
pop
inc
incb
std
pop
shl
cs
push
fadds
jmp
bound
adcb
icebp
fsubrs
mov
inc
sub
cli
and
cli
mov
jl
jae
pop
bound
jmp
push
sahf
mov
rdpmc
sub
and
xor
dec
andb
popa
and
mov
das
or
aam
push
fnstcw
mov
pop
test
out
sub
add
jnp
cmp
adc
lds
sbb
incl
adc
jnp
mov
mov
cmp
addb
jb
xor
fwait
mov
out
jo
xchg
cmp
ret
jecxz
jecxz
xor
repz
mov
inc
mov
imul
popf
push
mov
imulb
jecxz
mov
pop
nop
xchg
pushw
cmp
mov
clc
repnz
push
gs
pop
adc
test
and
xorl
or
jo
cmp
lods
dec
mov
jnp
imul
sbb
iret
cld
sub
out
bound
fisttpl
sbb
int3
jo
jp
xchg
cmpsb
cmpsl
jns
jne
push
dec
mov
outsl
popa
pop
das
xchg
rcll
sbb
mov
lret
dec
cmp
cli
insb
ret
cmp
cli
subb
cli
ret
arpl
daa
lcall
add
push
or
rol
mov
xorb
push
jo
mov
jo
and
pop
data16
xchg
stos
mov
loope
stc
xchg
int3
fidivrl
push
pop
lcall
push
inc
dec
roll
adc
ret
movl
or
lcall
xchg
mov
jmp
cmp
mov
call
sbb
in
mov
xor
fisttpl
bnd
imul
push
xchg
es
cmc
xor
jmp
clc
add
cltd
data16
inc
ljmp
aam
jge
lcall
jo
in
lret
jns
push
push
mov
jne
mov
inc
xor
xor
mov
cld
mov
test
or
dec
sub
ss
pop
mov
xor
lret
ret
in
lods
inc
mov
sub
loope
fnstsw
jno
mov
adc
movsl
dec
in
int
insb
ret
inc
sbb
sub
adc
into
int3
bound
sarb
jbe
xor
xchg
inc
push
push
mov
cmc
aam
add
pop
lret
repnz
syscall
arpl
inc
xorb
aas
cmp
loopne
pop
pop
push
xchg
repnz
aaa
push
add
cmp
shl
mov
push
ficompl
mov
ja
sbb
test
sbb
fcomps
negl
fsubrl
imul
lds
pushfw
cs
lods
jbe
pop
aas
push
cwtl
fcmovbe
sbb
dec
push
mov
fiadds
xor
inc
popa
sti
int
lcall
fdecstp
pop
sub
leave
shrb
pop
es
or
sub
inc
add
or
daa
dec
sub
inc
sub
insb
ret
fcmovne
xor
dec
cmovs
jmp
mov
add
xor
rolb
lcall
ror
pop
subb
xchg
fwait
push
mov
xorl
sub
arpl
les
je
push
sub
shrl
dec
mov
jmp
test
lahf
movsl
lahf
sbb
mov
add
icebp
cltd
sub
and
xor
outsb
addr16
scas
cld
or
lds
inc
xchg
jge
cltd
xor
cmp
addr16
mul
add
aaa
popa
adc
sub
xor
movsl
scas
xchg
fnsave
out
mov
faddl
dec
xor
push
lods
xor
psrlq
hlt
inc
jb
mov
inc
jge
push
dec
sub
mov
fsts
sbb
adc
xchg
dec
leave
les
sub
mov
push
mov
inc
mov
insl
shrl
ret
xchg
stos
jno
mov
into
outsl
inc
and
fidivl
pop
xchg
shr
dec
dec
ss
ljmp
cmp
popf
push
jbe
ss
ja
cmpsl
jle
mov
fisubrs
test
cmc
cmp
inc
inc
sbb
stos
arpl
aad
out
inc
fldt
cmp
mov
jl
xchg
dec
cmc
pop
push
mov
nop
data16
inc
fimuls
cmp
lret
or
lret
mov
mov
jl
cli
pop
add
mov
stos
push
in
test
adc
jb
fimull
dec
rcr
push
pop
adc
repnz
cwtl
jnp
outsl
dec
inc
fists
or
or
repnz
mov
stos
lock
loop
pop
ds
or
out
sti
pop
dec
or
fwait
das
cltd
inc
and
pusha
mov
add
cmp
cwtl
jp
in
seta
sub
inc
in
in
jb
push
stos
add
mov
inc
xor
bound
pusha
stos
cmp
cltd
mov
sub
test
xlat
and
jecxz
fwait
jl
lods
xchg
cli
jnp
and
testb
add
xchg
jg
sbb
inc
pushf
movsl
dec
adc
cmpsb
scas
jbe
ret
adc
sbb
or
inc
jnp
jp
and
fstps
xor
dec
ret
lret
aas
aas
insl
test
inc
ja
sub
sbb
cmpsb
cmpsl
stos
jae
mov
mov
mov
fwait
test
push
or
fcomi
adc
fdivr
in
lret
pop
mul
movsl
lret
cwtl
sub
sbb
les
dec
add
sub
shrl
mov
and
inc
scas
iret
int
cli
jge
jbe
mov
jb
mov
sbb
aas
ret
fidivrl
add
push
jmp
adc
jl
into
sar
inc
stos
popf
bound
xchg
arpl
xor
add
sbbl
adc
imul
test
sahf
mov
or
fs
cmp
add
les
testl
hlt
mov
lock
fwait
divb
xor
or
out
pop
pop
fisubrs
aas
xchg
lret
or
out
add
mov
test
imul
lret
xchg
lea
cs
jmp
or
and
sub
or
out
imul
xor
and
cli
pop
mov
push
xor
mov
fistps
lds
clc
ljmp
pop
mov
cmpsb
cltd
pop
jmp
add
mov
leave
mov
push
or
faddl
in
test
fidivrs
fildl
addr16
pop
mov
xor
insl
adc
es
and
xor
cmp
out
mov
push
imul
mov
arpl
inc
push
leave
pop
adc
push
loopne
inc
fcoml
int
add
pusha
int3
faddl
lcall
push
shlb
mov
rorl
imul
mov
test
mull
mov
loop
add
xchg
jmp
pop
inc
adc
mov
shll
scas
xor
pop
pushf
js
jp
jp
jno
push
aas
fcmove
sti
ret
outsl
push
xor
cmp
push
loop
sbb
jmp
dec
pushf
xlat
inc
movsl
push
aam
scas
adc
ret
cli
sbbb
hlt
xchg
push
inc
xchg
lock
jne
add
push
fcomps
push
mov
cltd
repz
dec
push
inc
leave
addr16
and
leave
lds
xor
inc
or
jbe
mov
fnstcw
add
daa
inc
aad
shrb
dec
xchg
jae
outsl
ja
nop
inc
enter
bound
or
loope
cmpsb
push
jecxz
and
ja
in
pusha
pop
data16
out
rcll
fbld
nop
inc
ret
cmp
rcr
fcomps
mov
mov
push
sar
rcrl
push
and
scas
xchg
scas
push
test
pop
call
add
shrb
pusha
ja
and
popf
ret
daa
aad
scas
mov
test
pop
inc
mov
and
imul
inc
cltd
test
mov
mov
sub
cwtl
aaa
pusha
out
mov
lock
dec
loop
popf
or
push
jg
loop
hlt
dec
fisubrs
push
xor
stos
int3
jmp
sti
hlt
cmpsl
sbb
xor
pop
das
and
rclb
mov
xor
loop
add
xor
xchg
leave
mov
pop
mov
adc
mov
ret
and
mov
and
or
push
push
inc
mov
out
bound
mov
pusha
push
int3
rcr
lea
sub
out
xchg
xor
mov
sub
sbb
cmp
xchg
imul
sbb
cmp
cli
test
loopne
ds
sbbl
jbe
mov
mov
push
into
cmp
mov
data16
ss
cld
add
adc
add
lcall
sahf
aad
push
fldcw
imul
sub
xor
sub
jns
mov
adc
push
fcmove
popf
sbb
adc
or
mov
and
sub
lret
mov
outsb
dec
imul
mov
mov
mov
inc
dec
pop
and
sub
stc
xor
fsubs
xchg
fildl
xor
push
jecxz
adc
xor
orl
leave
jmp
aaa
dec
jnp
les
and
pop
push
in
pop
xchg
xor
add
and
pop
fsubp
roll
xor
jns
jo
fisubrs
mov
fsubrp
dec
imul
xor
mov
out
cmpl
aam
fistps
sub
inc
movsb
into
mov
lcall
arpl
fwait
mov
cmp
outsb
into
sub
ficoml
jp
lds
mov
jb
dec
cmp
pop
mov
out
lds
xor
push
or
add
notb
adc
mov
call
fisubs
mov
xchg
mov
int
xor
cli
dec
xor
xor
add
cmc
jnp
mov
push
out
add
add
push
mov
mov
sbb
cmp
adc
das
jb
sti
pop
xchg
addb
daa
and
jbe
inc
aad
inc
gs
aas
dec
movsb
pop
inc
sbb
push
jns
lahf
push
push
or
ret
jbe
pushf
mov
push
cmp
mov
fwait
das
stos
or
cmp
add
push
inc
cmp
addr16
and
fcoms
or
scas
cs
in
cmp
xor
mov
xchg
in
xchg
movsb
arpl
or
and
imul
sbb
inc
add
inc
xor
sbb
ds
test
mov
push
pop
cmpb
mov
ljmp
call
mov
loope
cld
mov
sbb
dec
repz
outsb
mov
xchg
push
xchg
int
aas
jecxz
xor
fdivrs
add
shrb
fisttpl
inc
and
push
lods
adc
int
sbb
in
dec
inc
stos
push
inc
lods
cmp
por
xor
iret
xchg
or
sub
sti
iret
mov
cs
fidivs
js
push
mulb
push
sub
cmp
bound
js
fcmovne
or
insb
pop
push
push
xlat
jnp
bound
in
clc
jp
sub
pop
fwait
addr16
cli
andl
dec
jp
pop
popa
aam
fwait
sbb
sbb
mov
lods
mov
sbb
pop
inc
imul
xor
adc
aas
adc
cmp
adc
xchg
pop
test
push
inc
mov
callw
cmp
pop
mov
sub
pusha
fildll
sub
push
xchg
sahf
xchg
outsb
xchg
push
adc
cmpsl
daa
cmpsl
jle
test
inc
add
and
cmp
cmc
enter
add
or
cs
xor
xor
dec
and
add
inc
mov
lcall
jmp
test
out
and
stos
jno
xchg
pop
xchg
xlat
test
into
in
rorl
pop
es
cmp
mov
cmp
cwtl
lods
js
push
cmc
sahf
mov
lret
xchg
lods
push
mov
je
pop
add
inc
cmp
pusha
sbb
sub
outsl
pop
inc
sbb
pop
mov
sub
jno
sub
mov
lahf
fisubl
mov
fwait
inc
cmp
mov
cmp
push
dec
pop
and
js
aaa
mov
mov
cmp
mov
call
mov
int
ja
ds
aas
ds
imul
dec
into
or
sbb
rorb
lahf
pop
pushl
xchg
push
insl
stos
adc
mov
icebp
xchg
and
pushf
and
xchg
xor
add
sub
ret
or
push
dec
push
xor
pushf
adc
mov
push
inc
xor
scas
aaa
hlt
push
shll
loopne
mov
fimull
xchg
jg
or
stc
add
pop
push
xchg
fmulp
mov
mov
pop
pop
fwait
xor
pop
cs
sbb
lret
mov
mov
and
fistpl
mov
xchg
sub
inc
int
aad
inc
test
enter
xchg
lds
sti
mov
mov
xchg
jno
sub
sub
add
add
mov
insb
push
mov
js
push
adc
dec
out
mov
sahf
ret
inc
pop
push
sbbb
push
mov
mov
xor
or
jmp
xchg
addr16
mov
pop
scas
jno
sti
fildl
fildll
jmp
rcrl
cli
cmc
repnz
lea
inc
sub
fisubrs
xchg
sti
rol
aam
sub
lahf
adcb
jl
aad
sbb
dec
sub
sub
inc
ss
in
gs
out
add
jb
fcoms
adc
dec
xlat
jl
test
push
call
adc
mov
push
mov
cwtl
push
jne
pushf
cmpxchg
testl
pushf
pop
repz
imul
in
out
inc
lods
aam
ds
subb
repnz
loope
add
fisttpl
addl
sbb
out
adc
int3
movsl
jo
shl
outsb
or
add
xchg
sbb
xchg
outsl
dec
inc
mov
jae
fidivrs
lea
sahf
shl
add
adc
fists
insb
sarb
mov
jno
ds
pushf
xchg
inc
dec
or
cmpsl
push
outsl
aam
lahf
pop
sbb
xor
cmp
repnz
inc
sbb
gs
sbb
mov
inc
je
lret
pushw
ret
inc
sub
cmp
aad
push
fwait
daa
out
xchg
mov
es
jne
xchg
loop
sub
subb
leave
call
xor
push
dec
scas
add
mov
sub
sub
and
outsb
dec
xchg
mov
or
add
pop
sub
cs
cmp
in
testb
stos
popf
inc
daa
lds
xlat
pop
jp
or
bound
sbb
lahf
cli
int3
or
push
ss
sbb
sahf
cmc
hlt
clc
sbb
sub
mov
push
mov
lea
inc
andb
lret
sbb
ljmp
jnp
add
int3
repnz
test
adc
mov
sti
sub
sbb
out
aaa
movsb
mov
and
lods
repnz
add
fiaddl
mov
fucomip
outsb
xchg
mov
xchg
rcrb
cltd
mov
loop,pn
faddl
fxam
inc
mov
jae
pop
cwtl
fcomps
xchg
dec
idiv
and
add
and
and
add
fstpt
cli
add
sti
mov
rcll
into
mov
inc
inc
in
pushf
push
and
sar
loope
in
aad
push
sbb
sbb
leave
fisttpll
mov
push
and
pop
das
mov
add
daa
incl
mov
jae
js
pop
popl
scas
iret
cmp
jne
movb
push
ds
das
lcall
and
scas
fisubrl
and
push
dec
addr16
adc
pop
xor
jp
add
jae
mov
xor
push
and
int
pop
test
pop
xlat
ficompl
and
dec
loop
lret
xchg
mov
inc
and
push
and
push
icebp
jb
mov
sub
mov
int3
jns
hlt
mov
ja
ret
and
sti
hlt
push
sbb
xchg
test
xchg
lcall
mov
or
sbb
jge
jno
jmp
mov
lret
pop
push
setb
ljmp
jns
push
cs
outsl
addl
pop
lds
dec
and
lret
ror
aad
movsb
sti
and
inc
sbb
pop
subl
dec
jns
mov
addb
insl
movsb
ret
gs
adc
sub
sar
movsb
xor
les
mov
and
push
push
outsb
pop
mov
add
push
cmp
cmp
dec
adcl
and
jno
push
add
pusha
adc
sbb
lods
sub
dec
decl
mov
push
bound
push
loop
out
cwtl
movsb
daa
rorb
sub
popa
mov
dec
pop
ffree
out
insb
push
es
lret
adc
fsts
cmpsb
mov
mov
sub
mov
push
mov
inc
inc
mov
adc
ds
out
sar
out
jge
pop
iret
clc
fcomps
lret
inc
fs
jmp
lds
xor
jle
and
mov
lcall
imul
lcall
popa
push
pop
cltd
mov
fisubs
and
fbstp
imul
adc
scas
pop
inc
push
inc
add
inc
dec
cmp
fwait
movsl
ret
mov
popa
xor
pop
add
lods
std
test
dec
adc
inc
in
inc
mov
inc
push
push
sti
push
xorb
popf
adc
jo
jno
push
xchg
gs
dec
ret
jl
rcl
sbb
rcll
dec
xor
lahf
stos
fistl
insb
lret
insb
scas
pop
repnz
stos
js
lds
sbb
sbb
or
sub
movsl
cmp
icebp
xchg
pop
inc
aad
dec
rcr
sar
xor
sub
mov
and
or
xor
inc
adc
xor
inc
or
jnp
mov
into
add
cmp
mov
lcall
push
sub
push
ret
arpl
cwtl
pop
leave
dec
cli
pop
inc
cli
xor
adc
sub
sbb
push
push
repz
out
cmp
inc
fcompl
jno
mov
xchg
and
mull
pop
outsl
push
mov
pop
nop
icebp
ja
daa
jp
dec
mov
fiaddl
fstps
sbb
gs
test
xor
sbb
addr16
out
sbb
insl
xchg
pop
mov
or
push
and
xchg
mov
ja
insl
add
mov
cmp
addr16
xchg
leave
adc
sub
scas
sub
xor
int3
rclb
xlat
mov
out
fnstsw
sbb
repnz
and
mov
xchg
inc
insl
cmp
scas
xor
cld
mov
dec
es
fdiv
outsb
ja
jo
mov
scas
sub
cmp
ret
cmc
xchg
mov
cmp
mov
mov
lret
pop
in
sahf
sbb
int3
and
lods
xchg
mov
adc
dec
pop
in
or
inc
sub
ds
add
dec
mov
push
adc
outsb
call
in
adc
xor
cmp
mov
and
sbb
les
jmp
mulps
inc
jecxz
mov
out
push
mov
movsl
mov
and
sbbb
lahf
fwait
cmpsl
inc
lea
push
inc
mov
mov
pusha
stc
mov
mov
jb
push
mov
pop
dec
cmp
pop
dec
sbb
and
cmp
xchg
cmp
cs
push
testl
sub
xchg
adc
aad
mov
mov
jo
shrb
repz
in
aam
sbb
cmova
jecxz
mov
std
packsswb
inc
daa
test
mov
out
cs
loop
jns
in
jecxz
stc
popf
pop
jmp
sahf
mov
mov
push
into
sbbb
ficoml
push
mov
lahf
dec
cmp
lahf
dec
sbb
ds
cmp
popf
sbb
sub
cs
lock
inc
lret
pop
dec
mov
fbstp
stos
lcall
repnz
mov
push
nop
cwtl
aad
sbb
mov
add
add
out
adc
mov
popa
fstps
in
cli
nop
mov
rorb
push
jne
dec
andb
sub
push
dec
sbb
test
mov
sub
sbb
sub
shl
cmp
and
sti
outsb
and
mov
sub
xchg
ret
dec
ret
or
outsb
dec
mov
inc
jp
ror
push
jbe
cmpb
and
pop
into
xchg
cmp
fs
jmp
jle
frstor
fsincos
mov
pop
fimull
clc
scas
inc
jb
aaa
in
add
sti
sahf
lods
jb
sahf
or
xor
xor
pop
pushf
out
je
sbb
iret
xor
jmp
add
dec
push
test
pop
sahf
int3
shl
jnp
filds
push
and
jle
dec
mov
inc
cmp
pop
sub
incb
push
cmc
lretw
adc
sbb
inc
inc
lcall
arpl
mov
pusha
push
outsl
cmp
popa
stos
cmp
bound
jecxz
stos
sub
pop
push
insl
xor
jg
mov
movsb
ljmp
add
cmpsb
xchg
xor
ljmp
mov
mov
notb
jbe
pusha
sub
and
xchg
out
or
frstor
xchg
jb
scas
inc
mov
dec
jmp
add
fwait
push
arpl
popa
fisttps
add
addb
push
es
mov
inc
fwait
push
mov
pop
xchg
cli
dec
jo
clc
and
popa
and
mov
sbb
add
pop
jo
jnp
push
fistpl
push
sbb
imul
test
sbb
test
imul
xchg
add
jp
add
cmpsl
push
out
xor
dec
bound
fwait
das
dec
lea
fwait
sub
daa
fistpl
rcr
or
jns
ret
movsl
sub
sub
or
data16
jnp,pn
push
cmpsl
xor
stc
out
int
cs
push
scas
dec
sub
xchg
ret
jae
lcall
sbb
xchg
or
dec
jl
dec
std
movsl
jmp
sub
pop
xchg
cmp
dec
xchg
cld
xor
dec
xchg
into
or
add
lods
rorb
xchg
loopne
in
xchg
sbb
mov
xor
mov
sarl
add
inc
mov
fistpl
push
dec
movsl
pop
insb
jge
decb
push
int
scas
outsl
add
nop
clc
add
imulb
jnp,pn
add
pop
xlat
stc
sub
dec
pop
dec
out
add
push
jmp
cmp
inc
jp
adc
loop
jg
xchg
push
jg
hlt
ss
aam
movsb
add
pop
mov
adc
insl
dec
daa
xor
xor
jg
fneni(8087
sbb
cmc
push
cmp
jae
data16
jmp
popf
cwtl
shlb
inc
jae
in
jae
add
inc
inc
mov
lods
jmp
sti
mov
mov
scas
pop
cmpsb
pop
and
and
pop
js
outsb
adc
sub
push
nop
or
lahf
dec
stos
dec
sub
inc
adc
lcall
push
adc
dec
inc
iret
push
push
sub
xchg
lret
inc
sbb
fcoms
lret
pop
add
adc
mov
aad
call
xor
xlat
in
sbb
iret
aaa
adc
push
cmpsb
cmpsl
pop
adc
fdivrp
xor
lock
call
adc
call
dec
fwait
es
push
stos
sub
sub
hlt
adc
and
sbb
mov
fdivs
and
mov
xor
jl
frstor
pop
or
scas
pop
sbb
ret
mov
gs
mov
cs
mov
pop
pop
loopne
inc
and
je
or
cli
loopne
sbb
and
shrl
sti
adc
icebp
or
addb
mov
mov
in
sub
js
sub
pop
fmull
stc
add
fistl
dec
leave
sub
sahf
adc
push
lahf
and
sub
adc
sub
mov
daa
push
mov
ja
pop
jge
ljmp
pop
sub
lea
adc
or
ds
xchg
push
mov
outsl
push
cs
sub
xchg
jecxz
add
mov
test
stos
arpl
ret
cli
imul
shll
andl
jle
sbb
sahf
mov
aad
mov
idivl
adc
pop
fs
sbb
inc
mov
push
insl
sub
cltd
popf
aas
mov
sbb
cmpsb
inc
cltd
adc
adc
xchg
jp
xor
int3
adc
dec
andb
sbbb
and
pop
dec
test
test
lock
inc
xchg
and
inc
std
add
and
sbb
out
int3
mov
int
or
scas
sbb
movsb
push
lods
dec
jp
push
stos
dec
adc
sbb
popf
mov
rorl
aas
adc
mov
mov
movsb
mov
push
cmp
cmp
test
icebp
pop
pusha
jp
mov
dec
aad
ja
xchg
arpl
jle
mov
ss
test
mov
mov
divb
jp
cmc
inc
push
mov
stos
adc
ficomps
inc
movsb
jmp
pop
push
xor
cmpsb
pop
aad
pop
xor
ss
test
int3
add
leave
int
jnp
aad
jge
aad
push
mov
or
or
cmpb
incb
scas
outsl
pop
inc
test
and
pushw
int3
jae
sub
dec
xor
out
push
push
stos
jecxz
testl
out
xor
aas
xchg
add
mov
add
pop
lea
sar
or
aad
and
dec
push
adc
or
cli
mov
fidivrs
inc
push
add
mov
xor
and
dec
les
ret
adc
add
cmp
sbb
mov
pop
mov
cmc
lock
pop
mov
ret
sub
lock
scas
popa
pop
ret
sbb
fs
cmp
adcb
add
jp
daa
cmc
ret
lcall
adc
mov
aaa
pusha
inc
enter
popa
mov
int3
or
add
fwait
stos
xor
popf
adc
fs
fs
push
mov
mov
cmpb
sub
clc
xlat
aad
add
inc
mov
xchg
push
sub
mov
in
out
cmpsl
clc
add
push
push
mov
bound
xlat
clc
mov
test
adc
stos
and
mov
filds
push
cs
pop
inc
enter
inc
movsb
addr16
jle
andl
push
sub
jae
adc
fwait
add
ret
in
mov
lahf
adc
rcl
xor
lret
shlb
sub
fwait
insb
add
dec
lcall
and
adc
loop
cltd
cwtl
or
sbb
fimull
xchg
or
les
push
dec
sub
ret
xchg
xor
inc
mov
stos
pop
ja
mov
add
sbb
inc
movb
xchg
cwtl
push
push
shlb
or
aad
in
lret
or
sbb
lea
sub
mov
and
loope
push
popf
jae
fldenv
push
adc
add
sahf
pop
mov
xor
mov
call
pop
cwtl
cmp
jo
or
stos
sbb
mov
add
test
fistpll
sbb
scas
lret
enter
cmp
sub
in
lds
fisubrl
inc
in
jno
movsb
ret
pop
bound
push
mov
add
mov
inc
lock
push
stos
stos
cs
xor
cltd
push
out
fcmovnbe
sbb
mov
loope
int3
outsl
xor
aaa
mov
mov
cs
xor
test
fisubrs
roll
xchg
jp
rclb
xchg
dec
pop
jno
jg
or
adc
addr16
das
pop
cmp
xor
sbb
sete
xchg
cmp
sbb
add
and
hlt
in
xchg
nop
mov
or
inc
cmp
inc
or
pusha
pop
push
mov
jo
push
insl
xlat
arpl
push
sarl
subb
sub
mov
lods
pusha
mov
dec
dec
cmpsl
mov
mov
ret
pusha
movsb
inc
cmp
jle
test
fimull
and
dec
stc
inc
add
mov
sbb
in
pop
iret
pusha
subb
inc
aaa
adc
add
fdivrl
stos
or
pushfw
out
dec
pusha
fisubrl
or
and
push
arpl
jae
popf
mov
mov
arpl
mov
leave
fnstenv
add
leavew
mov
push
or
fldcw
sub
sbb
add
xor
into
mov
arpl
push
shrl
rolb
addr16
cwtl
mov
cld
clc
fidivrl
popf
inc
inc
fcmovu
jns
push
xchg
pop
dec
scas
test
xor
sub
loop
test
mulb
adc
es
sti
push
xor
out
inc
dec
pop
inc
arpl
pop
cli
repnz
aam
jno
sbbl
cmp
jae
add
cmp
ljmp
mov
add
fisubrs
mov
ret
jo
sub
pop
adc
add
sub
add
sbb
mov
dec
cmp
lahf
add
push
in
das
rolb
push
mov
pop
enter
cld
ss
mov
out
sub
xchg
dec
aad
add
icebp
sub
and
mov
out
sub
fcmove
js
xchg
push
sarb
arpl
inc
into
in
add
xchg
mov
or
aas
dec
lcall
out
jbe
test
aas
fwait
ja
pop
stos
or
shrl
mov
adc
out
sub
jmp
shll
aam
xchg
inc
add
mov
rcr
push
pop
push
mov
test
mov
in
repnz
sbb
add
xor
jecxz
nop
mov
cli
gs
not
ljmp
pusha
fisubrl
lods
jno
pop
in
lods
xor
pop
pusha
add
add
jmp
xchg
insb
shll
adc
shl
sbb
in
pop
cmovg
lds
in
jnp
outsb
out
dec
hlt
testb
xor
jge
push
cs
das
pop
xchg
mov
in
add
stos
adcb
out
mov
ret
jnp
ret
pop
lcall
mov
mov
mov
lods
sub
aad
test
cmp
mov
mov
arpl
cmp
sahf
and
cmp
sbb
push
sub
cmp
xor
mov
test
sbb
mov
xorl
xchg
icebp
bound
mov
repnz
setno
inc
xor
sub
mov
jle
mov
dec
js
cmp
xchg
cld
or
push
inc
je
push
jbe
xchg
xor
mov
sbb
add
cmp
movsb
and
add
sti
or
jae
lret
es
insb
mov
or
pop
jge
jne
xlat
lock
mov
lret
adc
loop
mov
cmpsl
and
inc
inc
xchg
inc
jo
ja
lcall
xor
pop
or
faddl
sub
mov
xor
add
and
std
jg
fsubrl
jo
add
xor
inc
icebp
mov
test
das
lret
pop
fdivl
orl
das
and
lock
outsb
cmp
inc
dec
or
ljmp
outsb
fucomip
jl
xor
stc
out
std
pop
data16
sahf
sub
jecxz
sbb
out
adc
push
mov
lret
stc
add
mov
push
aaa
xlat
adc
lcall
test
jne
sti
xchg
fdivl
push
pop
enter
daa
push
stos
adc
shll
mov
cmpsl
push
or
test
inc
mov
test
cmp
push
ret
stos
dec
loop
push
cmpsb
ficompl
xchg
adc
sbb
adc
pop
inc
ja
pop
mov
mov
sbb
add
cmp
add
cmp
mov
pop
out
mov
pop
cmp
or
add
ret
or
mov
mov
inc
out
je
call
mov
addr16
or
cltd
lret
nop
in
insb
push
push
arpl
test
and
or
movb
subb
xor
arpl
xor
clc
aaa
ss
pop
jns
push
mov
aad
lret
lret
mov
or
sbb
sbb
mov
add
imul
pushf
pusha
lods
xor
sar
xchg
pop
or
jecxz
call
mov
loope
sbb
sbb
mov
fdivrs
sbb
dec
outsb
jg
pop
push
lret
sbb
mov
rcr
orl
andb
cmp
jp
outsl
dec
popw
sbb
mov
mov
or
sub
mov
dec
sti
movsb
test
stos
pop
sahf
adc
inc
bound
je
loope
pop
clc
mov
mov
mov
jbe
xor
je
mull
test
push
and
push
xchg
cmc
pop
push
push
xchg
aaa
adc
insb
push
pop
aaa
xor
dec
or
jle
shlb
mov
add
decb
jo
xor
jg
xor
xchg
aad
scas
lock
pop
push
and
cli
jg
pop
out
jb
adc
js
push
cwtl
pop
adc
pop
js
dec
mov
ret
sbb
lret
adc
aas
push
movsl
add
stos
cmpsl
push
inc
pop
test
xor
dec
sub
cltd
inc
mov
test
jp
inc
add
cmp
and
or
or
adc
es
test
lret
dec
mov
ret
leave
mov
fmuls
or
cmp
xchg
push
rol
jns
test
push
cli
out
ret
push
loope
aad
flds
and
inc
pop
inc
xlat
inc
dec
ja
pop
inc
push
jl
jp
push
enter
sarb
jmp
mov
push
js
mov
add
mov
push
mov
leave
out
and
out
arpl
dec
adc
xor
repz
jg
adc
in
rclb
lret
inc
add
cmp
aam
inc
xor
ja
lcall
mov
stos
clc
cmp
aam
jns
les
mov
inc
test
xor
adcb
push
mov
mov
jb
fimull
pop
push
test
dec
dec
sbb
lret
andb
or
mov
xchg
add
and
jns
jp
adc
mov
stos
jns
pop
mov
vmovhps
add
cmp
add
jp
ljmp
aaa
out
adcl
xchg
lcall
hlt
mov
test
sbb
out
inc
jecxz
push
mov
add
fwait
pop
jecxz
dec
inc
xor
aas
sarb
daa
cmp
add
addl
xchg
jns
sbb
fwait
dec
arpl
and
adc
push
addr16
jbe
pop
add
mov
adc
aad
push
imul
fwait
std
mov
sbb
imul
clc
inc
cmp
lods
les
or
cmpsb
add
pop
scas
mov
and
adc
stos
sbb
jb
fwait
pop
adc
stos
cmp
insl
jne
sub
or
fildl
mov
push
sub
xchg
jbe
and
imul
fwait
pop
mov
sub
inc
idiv
inc
inc
repnz
stos
fistps
push
mov
cmpsb
mov
das
cmp
test
lahf
jge
xchg
inc
es
cmp
or
out
cs
add
lods
out
mov
aaa
sub
adc
popa
add
dec
add
sub
iret
fisttpl
mov
rcrb
sbb
xchg
add
pop
cmp
push
mov
jbe
add
leave
mov
out
ret
lods
das
add
shll
push
mov
js
mov
stos
xchg
jns
sbb
or
sub
adc
add
fs
mov
dec
jne
outsl
fldcw
cltd
out
jmp
cld
jecxz
inc
or
lret
pop
jp
les
outsl
es
ljmp
mov
dec
lea
dec
xor
cmpsb
adcl
pop
jns
pop
jo
pop
sbb
mov
push
mov
lret
pop
pop
pop
xchg
adc
lahf
pop
push
lret
inc
mov
pop
fcos
test
std
mov
loop
or
dec
xchg
jne
sbb
outsb
add
xor
pop
ss
jge
cmp
fstpt
jae
cmp
decb
ja
shrb
pop
adc
cli
or
stos
mov
fiaddl
push
or
mov
sub
xor
adc
popa
add
cmpsb
popf
nop
xor
inc
jbe
add
sbb
shll
push
test
jp
rolb
sbb
inc
mov
cmpl
je
push
xchg
and
sub
xchg
addr16
call
cmc
mov
jle
mov
pop
mov
xor
xchg
mov
cmp
and
xchg
dec
insb
cmp
xchg
adc
pop
xchg
stos
xchg
repnz
xorl
jecxz
adc
cs
xchg
mov
xor
jbe
inc
cmp
mov
and
push
push
mov
mov
sub
in
jle
rolb
sbb
bound
imul
mov
fwait
les
ficompl
push
movsb
dec
pop
xchg
sbb
push
add
addr16
mov
xchg
jecxz
sbb
sub
mov
add
in
add
pushf
sbb
inc
std
leave
add
xchg
pop
push
mov
mov
inc
jle
sub
and
insl
sub
test
xchg
sub
lods
or
jg
and
add
aaa
mov
sbb
add
cmpb
adc
pop
cmp
jae
xor
jmp
stc
xor
or
jp
pop
sahf
add
outsl
mov
add
cld
shlb
jae
cmp
gs
cmp
mov
push
push
arpl
mov
mov
arpl
add
mov
pop
pop
adc
and
sub
loopne
sarb
stos
sbb
in
lcall
clc
ret
pop
jle
cs
fcomip
movsl
in
je
in
and
test
cld
add
adcb
push
dec
outsl
incl
jecxz
pop
arpl
pop
add
jmp
mov
push
xchg
xchg
lret
dec
cmpl
loop
bound
out
int
adc
and
ds
push
push
push
mov
and
les
fdivs
cmc
xor
call
push
mov
mov
pop
pop
ss
shl
add
fisubrl
adc
push
sbb
andb
push
jo
cmp
inc
mov
push
shll
sarl
fstpl
lcall
xlat
add
insl
scas
iret
xor
xchg
mov
lea
mulb
mov
stc
sti
fists
fbld
rcrl
add
adc
and
mov
adc
jb
pop
xchg
test
mov
inc
jo
std
dec
adc
das
ja
mov
imul
jg
xchg
xor
cwtl
jo
pop
stos
aad
mov
sti
shll
push
pop
cwtl
pop
mov
sub
mov
mov
pop
sahf
ret
mov
sub
cmp
mov
addl
cmp
into
ret
fsubs
mov
fistpll
sbb
or
xchg
mov
bound
inc
xlat
push
jne
iret
out
sbb
pop
loop
test
call
xchg
mov
or
cwtl
arpl
stos
movsb
mov
add
mov
add
jmp
bound
mov
cmp
mov
lret
and
xlat
or
mov
inc
and
sub
push
mov
cmpsl
jp
mov
dec
arpl
xchg
and
push
outsb
lods
jb
sub
gs
pop
fnsetpm(287
fcomps
sbbb
lock
adcl
mov
inc
cmpb
add
int
gs
mov
add
sub
sub
xchg
aas
repnz
pop
cmp
loop
jg
bound
popa
outsb
add
and
pop
jmp
bound
add
jg
sub
ror
cmp
test
stos
cwtl
jp
adc
pop
stos
fdivl
or
mov
adc
xor
pop
fwait
mov
lcall
adc
clc
mov
pop
push
push
sub
cli
xor
pushw
mov
movups
popf
add
push
outsl
push
dec
mov
jge
push
rclb
dec
mov
ljmp
and
movsb
mov
out
ljmp
bound
pop
push
mov
lcall
inc
pop
ljmp
call
in
inc
pop
lock
mov
xor
shlb
cmp
xchg
add
xchg
aad
fidivrs
outsb
mov
pop
cmp
scas
fwait
add
jnp
jns
or
jmp
mov
add
popf
xor
notl
push
mov
subb
pop
and
mov
rcrb
push
jecxz
into
cmp
sbb
push
rcl
jmp
xor
pop
lcall
dec
add
and
jg
adc
dec
lea
or
jl
mov
dec
push
pop
push
shrl
mov
hlt
mov
daa
cltd
inc
mov
mov
int3
lcall
pop
fwait
sbb
scas
and
rcr
rolb
stos
sbb
xor
mov
pop
test
sub
mov
add
xor
rolb
pusha
stos
pop
jns
cmpb
call
adc
push
sbb
mov
fwait
fwait
aaa
ja
push
fs
or
aaa
xchg
dec
add
call
push
in
cltd
xor
add
add
fs
sbbl
jge
call
adc
fisttps
inc
cltd
add
jge
sbb
jbe
xchg
test
add
rorl
hlt
lcall
dec
int
jl
jb
ds
popa
loop
ss
icebp
out
outsl
je
or
or
or
mov
pusha
dec
sub
int3
mov
lods
jbe
or
sbb
xchg
sub
pusha
push
xchg
jne
sbbb
jmp
jle
fbld
add
jg
cmp
xchg
cltd
push
jbe
lock
xchg
sub
xor
dec
rcrb
pusha
dec
push
adc
push
clc
adc
bound
xor
cs
sub
inc
and
or
idivb
pop
add
in
popf
les
add
mov
pop
push
aad
mov
jge
mov
sbb
or
scas
repz
or
add
mov
in
mov
xor
mov
and
inc
arpl
shlb
pop
imul
addl
js
cwtl
or
arpl
in
leave
add
add
jbe
cmp
and
push
push
out
fbstp
cmpsl
into
imul
cli
xor
ja
jecxz
inc
cmp
mov
scas
adc
test
les
xor
and
loopne
cmp
stos
fistps
or
leave
add
xchg
loop
fisttpll
inc
cltd
push
ds
cmp
sbb
add
movsb
int
test
insl
xor
push
mov
es
bound
fstpt
mov
fsubrs
mov
mov
arpl
pop
xor
test
in
scas
and
enter
adc
pop
les
arpl
fwait
in
push
out
mov
push
xchg
cmp
jg
sub
enter
int
ljmp
add
scas
fstp
jmp
movsb
and
rol
add
lcall
in
xlat
sarl
push
sbbl
data16
cmpb
das
mov
daa
mov
lahf
scas
rolb
mov
push
cmp
jne
push
push
xor
movsl
lcall
jo
inc
push
jle
ret
push
add
pop
push
jle
sbb
add
dec
mov
bound
xchg
xchg
int
out
idivb
int
or
icebp
dec
shrl
pop
mov
jne
add
mov
outsl
test
xchg
xor
jbe
push
mov
sbb
ja
mov
jbe
icebp
sub
dec
pop
xor
or
je
pop
sub
aad
inc
sahf
add
loope
lret
mov
mov
inc
sbb
cmp
int
xchg
leave
enter
pop
xchg
sub
lds
and
enter
pop
orb
loope
test
push
push
jo
and
fwait
lds
ficoms
jmp
dec
push
aas
inc
and
push
cmp
pop
pop
stos
inc
inc
mov
dec
cmpl
repz
push
lods
sti
stos
call
mov
push
cmpsb
insl
dec
mov
dec
sbb
dec
mov
pop
aas
fst
push
and
fildll
daa
pop
pushf
movsl
in
cmp
sbb
pop
push
dec
pop
sahf
or
pop
or
shlb
xor
add
ja
arpl
imul
stos
int
pop
or
popa
push
cwtl
test
inc
addr16
push
cs
xor
mov
jl
add
xchg
cwtl
mov
aam
add
outsb
dec
xchg
pop
loopne
aaa
adc
inc
hlt
pop
jbe
pop
imul
jb
lods
into
add
jno
cmp
jb
shrb
mov
das
pop
leave
mov
and
into
cmp
pop
loop
mov
ss
mov
mov
pop
push
inc
sub
xor
add
xor
call
push
xor
popl
popf
xchg
test
fucom
jo
ljmp
pop
test
gs
jmp
dec
push
xorb
xor
ja
stos
dec
sub
jae
cmp
xchg
xchg
in
filds
mov
cmc
lcall
xor
cmp
sub
sbb
mov
mov
ret
adc
mov
lds
jnp
mov
call
mov
mov
jle
jbe
fidivrl
cmp
shlb
pop
cwtl
int3
enter
sub
push
push
inc
scas
mov
inc
jmp
xchg
adcb
lds
dec
sub
stos
and
mov
sbb
inc
movsl
nop
mov
sub
mov
mov
mov
mov
sub
scas
push
int
dec
popf
sbb
adc
clc
fbstp
fiadds
cmp
add
repz
mov
adc
imul
shll
jns
inc
cmpsb
out
imul
cld
add
mov
sbb
mov
or
mov
ret
jg
std
mov
imul
arpl
cmpsl
jb
dec
cwtl
lret
mov
fisttpll
lcall
or
add
mov
scas
jns
mov
sub
pop
in
add
add
xchg
cli
fwait
push
cmp
fmuls
dec
fwait
movl
xchg
outsl
cmpsb
inc
dec
mov
movsb
pusha
or
dec
push
sub
dec
xchg
mov
lahf
sbb
pop
stos
orb
sahf
jp
fstpt
mov
xorb
arpl
test
shr
sub
jp
or
jecxz
push
cmpsb
push
push
sub
and
xchg
sub
sbb
and
ret
jge
pop
lea
inc
xchg
or
std
adc
ret
xchg
rcrb
lods
jnp
mov
mov
andb
inc
mov
mov
inc
add
inc
xchg
arpl
xchg
and
ss
xchg
std
mul
in
xchg
ja
andl
pop
dec
sub
inc
push
push
mov
cmc
and
aad
dec
ror
push
stc
lret
pusha
dec
push
pop
or
nop
scas
xchg
xor
add
pop
sub
jne
les
mov
test
lcall
scas
push
call
jbe
test
lahf
xchg
pop
data16
setp
or
mov
aas
subl
xor
gs
mov
jp
and
push
mov
push
cmpsl
cltd
sbb
push
dec
cmovl
stos
shrb
push
add
stos
sbb
adcl
fs
cmpsl
xchg
pop
xchg
inc
and
add
mov
push
pop
data16
inc
sbb
cmpsb
ja
hlt
jbe
and
mulb
insl
fwait
rcll
push
stc
mov
cld
sub
arpl
aas
mov
push
int
pop
popf
loopne
mull
xor
sti
xchg
xchg
mov
sbb
ja
and
aad
mov
and
mov
in
xor
mov
cmp
outsl
shrb
in
arpl
add
stc
fnstenv
push
ljmp
mov
mov
sarl
movsb
push
xchg
mov
pop
pop
mov
les
push
or
push
ljmp
inc
xor
outsl
ds
cmp
lret
aaa
jle
in
push
das
inc
jo
in
jnp
aad
stc
ffreep
push
aaa
nop
add
push
inc
mov
addr16
pop
sti
sbb
pop
push
lret
jg
xorl
push
test
enter
outsb
pop
push
stos
lahf
ficoml
pop
mov
push
mov
mov
xor
inc
sahf
push
lods
jmp
xorb
jl
add
es
ljmp
pop
lods
lods
mov
mov
add
xchg
jle
iret
jo
sbb
pop
cli
pop
test
jle
je
mov
mov
push
daa
imul
mov
mov
fmull
push
repz
pop
mov
dec
or
sbb
xor
adc
sbb
mov
pop
pushf
addr16
aad
fdivl
je
iret
mov
out
aad
inc
loop
stos
jge
xchg
clc
pop
push
pop
jbe
xchg
xchg
xchg
stos
aaa
mov
ret
mov
push
xchg
outsl
rcr
outsl
adc
ljmp
adc
xchg
popa
andb
push
pop
jge
and
xchg
cld
inc
pop
aad
mov
dec
ja
add
or
inc
mov
cmp
outsb
push
test
ret
negl
daa
cld
lret
outsb
mov
adc
mov
sub
sbb
imul
aad
es
xor
daa
xchg
stos
add
mov
add
in
pop
inc
mov
jle
jp
and
arpl
or
jg
jle
sbb
leave
movsb
add
xchg
jbe
and
into
js
popf
mov
inc
add
out
inc
enter
cli
add
xor
pop
add
jmp
jne
idivb
sar
add
fcompl
mov
or
jae
bound
jo
lods
or
lea
fsub
add
xchg
in
lock
jbe
or
subl
std
adc
orb
or
in
repnz
inc
call
imul
push
jle
scas
pop
negl
outsl
cmp
lods
addr16
gs
ja
mov
add
or
cwtl
sbb
jnp
fcmovnbe
pop
add
lds
mov
and
jl
out
lcall
leave
lea
insb
sub
icebp
xor
xor
movsl
stos
lret
mov
xchg
arpl
and
push
out
lods
lods
xchg
pop
ss
xchg
sub
lods
or
sbb
pop
sub
data16
jp
add
test
xor
call
xlat
mov
dec
iret
mov
push
xchg
inc
stos
sti
or
fildll
adc
incb
xchg
addr16
sbb
xor
xchg
or
add
pop
call
ljmp
imul
or
xor
cs
ja
push
and
or
lods
loopne
adc
sbb
addl
jno
add
mov
test
data16
jae
pop
pop
and
inc
xlat
adc
mov
stos
cwtl
daa
shll
add
jg
gs
lret
ds
in
and
push
or
adc
loop
ljmp
fiadds
stc
cli
shl
cwtl
mov
int3
pushf
mov
xor
outsl
inc
jge
data16
addr16
int
adc
lcall
xchg
aad
clc
insb
popf
pop
sub
push
aad
mov
sbb
ret
jge
jo
clc
outsl
add
sub
mov
dec
dec
mov
xor
stc
lcall
negb
lcall
mov
mov
loop
jb
loopne
ss
xor
fsubs
dec
jno
cmp
aaa
outsb
mov
mov
ret
lahf
dec
mov
and
out
popf
xchg
cwtl
sahf
mov
push
xchg
cwtl
xchg
stc
fcoms
push
push
mov
jg
xchg
push
adc
adcb
or
adc
or
pop
dec
or
jp
add
add
loopne
pop
cwtl
mov
fs
andl
jnp
leave
rcll
or
leave
cmpb
pop
mov
stos
test
cs
rorb
adc
ret
rcrl
cmp
imul
shrl
push
test
xchg
outsl
sbb
js
insb
sbb
pop
push
shll
push
insb
rcll
into
and
stos
ja
adc
jp
jb
sbb
sbb
mov
push
add
push
mov
sbbl
sub
pop
or
pop
mov
call
pop
out
leave
sub
movsl
lds
scas
inc
sbb
push
je
or
fs
lock
xlat
fists
xor
xor
push
in
xchg
adc
mov
sbb
std
cs
in
jns
mov
xor
push
cwtl
cmp
cmp
xchg
inc
movsb
out
jle
push
int
test
jae
sahf
dec
xchg
cld
outsb
xor
aam
push
sub
push
push
push
or
sbb
stc
add
sarb
dec
in
cmp
add
add
push
fisttps
fwait
pop
xor
xor
mov
pop
dec
stos
int3
inc
xor
push
adc
mov
xchg
jne
outsl
stc
sbb
sbb
fwait
xchg
push
aam
adcb
enter
dec
jb
test
pop
loopne
push
mov
add
lahf
push
inc
stos
inc
divb
addl
addb
pushf
push
mov
xor
mov
sub
divb
sbb
sub
push
cs
test
cwtl
pop
add
jl
fbstp
adc
inc
sahf
test
mov
xchg
aam
insl
sbb
inc
je
push
add
mov
into
pop
jnp
ja
jge
push
dec
notb
xor
mov
mov
push
popa
pusha
inc
sub
lcall
ljmp
sti
mov
jecxz
ja
arpl
out
test
mov
lods
pop
jno
mov
icebp
bound
sub
lods
fcmovnu
adc
jge
ss
fwait
sub
push
lcall
dec
inc
sbb
mov
inc
movsb
pop
mov
push
add
mov
adc
lock
xchg
xor
jb
movsl
int
xor
jge
sahf
loop
jo
sbb
sbb
or
push
gs
rcrb
test
mov
sub
mov
je
out
bnd
cmpsl
fdivrs
cs
ja
sti
cmp
add
pop
mov
xor
iret
sbb
std
lea
flds
push
out
jl
in
mov
in
popa
in
aad
xchg
lcall
or
sub
rorl
adc
xchg
jbe
mov
cli
inc
pop
lods
data16
and
dec
imul
insb
inc
and
pop
mov
dec
sub
pop
mov
dec
or
mov
cmp
mov
sbb
cmc
push
decl
jle
inc
jo
or
inc
sbb
rcr
fwait
adc
rol
aam
in
push
add
outsb
ljmp
in
xchg
data16
ss
jmp
in
sbb
dec
xchg
jne
fstpt
dec
xor
sub
sbb
out
inc
dec
lcall
repz
clc
dec
add
faddl
adc
out
xchg
imul
addl
dec
push
and
and
mov
push
mov
xchg
pop
add
add
aas
sahf
nop
mov
imul
inc
sahf
data16
test
mov
add
mov
daa
sbb
arpl
lcall
gs
inc
cmp
xchg
mov
sbb
cmpsl
inc
xor
aam
loope
shl
and
insl
call
mov
pusha
push
std
gs
push
ds
xchg
or
dec
push
pop
pop
and
mov
cmp
sub
inc
add
fildl
xchg
lods
ficoml
mov
cmp
add
push
xlat
test
mov
xchg
ja
inc
data16
fisttpll
lcall
pop
mov
jne
mov
push
add
add
lcall
jmp
int
out
aad
test
sub
test
or
sbb
jl
mov
pop
aaa
push
movsl
mov
adc
dec
stos
jbe
adc
jg
jmp
push
das
dec
push
lret
xor
arpl
sbb
mov
adc
or
pop
and
rol
lods
cmp
push
inc
stos
mov
sub
pop
dec
and
cwtl
xor
imulb
jp
dec
pop
xchg
sub
xor
and
rorb
lret
sbb
data16
jecxz
sub
mov
imul
xchg
and
jnp
arpl
add
add
ret
cs
cmp
popa
pop
pop
push
xor
inc
adc
mov
mov
sub
popf
cli
aad
xor
mov
fadd
jmp
insb
add
les
lret
fldcw
adc
push
lahf
and
sub
mul
inc
xlat
xchg
xchg
xchg
jl
arpl
jmp
jg
hlt
aas
cmp
out
pop
mov
bound
ja
in
xor
data16
jecxz
jns
cs
sub
loope
or
sti
push
aas
or
bndstx
mulb
mov
inc
push
push
into
shlb
adc
lahf
lds
lret
imull
and
mov
xor
jle
sub
dec
std
insb
outsl
mov
sbb
sbb
push
dec
imul
mov
mov
aam
fdivl
inc
fistpl
cltd
adc
xorl
testl
pop
insl
fildl
cltd
xchg
cmp
test
jge
data16
in
mov
or
out
jecxz
repz
dec
add
popa
test
pop
xchg
aam
insl
mov
gs
loop
push
out
xor
dec
jmp
roll
lea
jmp
inc
lret
lock
pop
neg
sub
xchg
aas
sbb
outsl
repz
outsb
repnz
shlb
cmpsb
pop
mov
mov
push
cmp
push
cmp
fwait
out
and
sub
aaa
push
fisubrl
or
addr16
dec
add
orl
jae
cmp
aas
int3
and
jne
pop
pop
data16
fwait
ja
mov
cli
int
push
mov
dec
sub
add
mov
adc
cmc
push
imul
stos
mov
inc
jnp
loopne
loopne
rolb
mov
xor
adc
xchg
inc
and
xchg
jae
test
push
sub
xorps
mov
sub
jns
pop
mov
xor
xchg
xor
sub
sahf
mov
mov
gs
rcl
test
xor
sti
fistl
sub
repz
jmp
xchg
lods
ficomps
add
movsb
addr16
out
pop
mov
mov
sub
push
push
imul
xchg
jno
bound
test
jecxz
pop
fiaddl
sbb
mov
aas
lahf
cmp
es
aas
adc
push
push
inc
flds
lret
rclb
cld
add
push
cmc
repnz
dec
xchg
inc
test
sti
pop
je
pop
jns
push
sub
xchg
fwait
lds
lret
mov
sbb
int3
inc
loopne
fildl
aaa
pop
incb
cli
and
je
mov
rol
inc
and
mov
sub
mov
fwait
and
cmpsl
adc
push
sub
sbb
mov
stos
lods
stos
imul
xchg
push
mov
stos
int
arpl
inc
mov
sub
sbb
sbb
fs
dec
aaa
push
sahf
xchg
mov
cmp
sub
out
gs
inc
sbb
fldt
xchg
pop
push
movsb
daa
scas
dec
add
arpl
cmp
add
inc
rolb
adc
sarl
xor
clc
cmpsl
inc
das
pop
addr16
jne
adc
push
shl
jbe
push
adcl
bound
inc
fxch
sbb
push
test
push
or
fld
loope
dec
push
fsubr
lret
add
fdivrl
cmp
jecxz
mov
xchg
fimull
xor
add
mov
jne
sub
adc
jp
and
fstpl
pop
sbb
cmp
mov
adc
movsb
mov
inc
mov
jno
es
xchg
push
jae
lock
and
xchg
outsb
push
cmp
sahf
push
sub
ror
call
or
clc
push
mov
test
add
pop
js
sbb
add
pop
das
mov
lret
mov
mov
lret
jae
inc
es
pusha
imul
scas
outsl
xor
mov
and
dec
mov
inc
add
scas
dec
lods
fsubl
shl
sub
and
inc
jecxz
sbb
pop
xchg
fbld
icebp
and
stc
popa
stos
or
addr16
sub
and
aad
shlb
in
mov
fldcw
add
incb
xor
sbb
mov
dec
push
push
mov
xchg
and
lods
imul
mov
xchg
and
pop
ds
add
lods
add
stc
jo
jnp
jno
imul
inc
push
mov
pop
and
ss
fsubs
inc
push
aam
out
movsb
imul
mov
sbb
pushf
sub
enter
sahf
inc
popa
pusha
pop
push
push
jns
sub
mov
je
repz
fs
mov
jle
pushf
icebp
movsl
pop
and
sahf
add
enter
fidivrl
data16
or
repz
rolw
and
outsb
jmp
div
outsb
outsb
call
and
cltd
aas
add
fdivl
les
cmc
ret
movsb
jae
insb
push
loopne
push
js
sbb
call
mov
fwait
jne
sahf
dec
sub
sub
repz
jle
or
stos
sbb
push
inc
movsb
pop
nop
pop
and
sbb
or
mov
bswap
mov
xor
js
push
add
xor
pop
mov
test
stc
dec
lahf
mov
pop
jo
ficompl
imul
pop
adc
or
daa
dec
pop
lret
xchg
push
das
inc
push
repz
lahf
bound
adc
jl
int3
cmp
popf
or
jg
andl
repz
xor
mov
jmp
dec
dec
pop
dec
out
mov
pop
dec
orb
adc
int3
nop
adc
xor
add
and
decl
add
adc
push
xchg
dec
add
mov
inc
or
cmc
xchg
out
mov
mov
mov
pop
xor
fwait
inc
testl
data16
arpl
sbb
cmp
imul
in
sbb
xor
xlat
pop
sub
repnz
xor
imul
aaa
mov
sub
addr16
sbb
pop
rclb
dec
ds
imul
dec
loopne
popa
or
inc
clc
hlt
xor
andb
ror
enter
loopne
in
icebp
stos
cmpsb
and
jmp
jnp
stos
ja
push
pusha
sub
mov
into
inc
jnp
inc
loop
stos
sub
cwtl
push
sub
or
in
sbb
and
dec
lret
xchg
repz
cmpsl
insb
inc
getsec
int
pop
xchg
sub
add
xchg
xlat
jne
xor
jae
dec
inc
out
bnd
test
adc
pop
rcrb
movzwl
test
fbstp
cld
cmp
xor
dec
icebp
dec
pop
adc
jp
mov
push
ds
jecxz
pop
xchg
cmpsb
loopne
andl
dec
nop
or
mov
cs
idiv
mov
pusha
pop
into
test
lret
insb
mov
or
clc
pushf
jecxz
lret
js
fadds
into
lds
mov
add
push
shl
ljmp
sahf
sarl
daa
pop
pop
mov
cmp
dec
sbb
repnz
mov
xor
add
rolb
mov
xchg
fldt
popl
add
cs
lods
xor
daa
popa
or
adc
rclb
add
lods
loop
mov
jne
add
pop
frstor
pop
xchg
push
fnstsw
sarl
scas
dec
inc
fidivrs
pop
lcall
adc
inc
test
jbe
jge
xor
cltd
sub
xor
inc
and
xlat
dec
and
xchg
jmp
xchg
fldt
cltd
dec
cmpsl
cmp
cmp
push
jl
aam
outsb
fldt
xor
pop
mov
jmp
dec
add
in
fcmovne
aad
fidivrl
scas
in
xor
mov
aad
jg
xorl
push
loope
push
ror
mov
xchg
mov
jecxz
jmp
add
outsb
dec
icebp
scas
ss
cmpsl
sbb
ds
push
xchg
add
popf
mov
xchg
mov
test
subps
invd
cmp
imull
xchg
push
sbb
adc
push
jnp
pop
add
mov
test
pop
lock
imul
push
ret
xchg
pop
adc
stos
mov
pop
mov
mov
mov
xchg
outsl
cli
test
push
adc
add
push
in
pop
divl
and
leave
into
pop
cmp
sbb
cmpsb
cmp
andb
xchg
cmp
int
sbb
xlat
dec
mov
and
pop
outsb
and
aam
sbbb
push
pushf
xchg
in
mov
xor
andl
sbb
sbb
scas
aas
sbb
fadds
sbb
cmp
inc
cwtl
ss
fbld
lahf
mov
jge
push
movsl
inc
test
inc
or
and
xchg
lret
jle
rcll
fcmovb
inc
cmp
shlb
mov
pop
loop
or
mov
inc
lods
aad
jbe
lds
mov
ret
inc
cmpsb
stos
or
dec
stos
js
iret
lret
cmp
inc
pop
sub
lea
push
pop
insb
adc
sbb
push
stos
out
mov
xchg
aaa
jb
repnz
pop
std
bound
jecxz
adc
or
negl
mov
push
ror
repnz
scas
xchg
push
mov
adc
test
jp
aam
cmp
push
addr16
push
mov
or
mov
cli
sub
pop
pop
orb
test
adc
jo
into
sub
call
fildll
aam
mov
cltd
pop
sub
dec
push
cld
icebp
add
daa
or
sbb
sahf
fwait
mov
fnsave
inc
xor
shrl
test
sub
push
xchg
lahf
or
ljmp
jp
insl
dec
xor
pop
fbld
inc
aam
int3
mov
enter
dec
push
xchg
dec
test
push
scas
sti
sbb
push
shl
xchg
jmp
push
mov
jbe
pop
in
movsb
xlat
shrl
pop
cmp
push
daa
adcl
add
stc
mov
sbb
push
pop
popl
mov
inc
decl
bound
mov
xor
mov
sahf
mov
mov
repnz
movb
push
and
das
bound
pop
das
je
lock
das
xor
jmp
and
inc
xchg
add
inc
imul
jb
push
pusha
dec
jge
sbb
adc
xchg
mov
imul
sbb
test
cs
jmp
cmpxchg
jmp
fstpl
mov
jno
xchg
inc
fsubr
in
das
cmp
jae
dec
jae
cmc
xor
fistpll
mov
xacquire
jl
xor
xchg
out
pop
cmpsb
ja
jecxz
ja
rcrl
xchg
jns
ljmp
aad
xchg
imull
push
inc
jb
fs
shlb
je
xchg
sub
out
cld
sbb
push
adc
mov
lcall
inc
es
push
inc
or
fistpll
dec
jbe
lock
call
xor
lcall
cltd
push
push
stos
sbb
loop
addb
push
es
pop
stos
repnz
inc
out
enter
stos
jl
aam
andl
cli
dec
mov
punpckhwd
popl
sbb
push
out
add
andb
scas
ja
pop
xor
dec
push
mov
push
jle
movl
das
push
leave
adc
fldl
inc
and
and
mov
mov
adc
mov
push
push
out
mov
mov
fbld
inc
dec
jp
lcall
sub
test
xor
subb
sbbb
and
push
ret
ficoms
jno
in
ss
sub
mov
aas
mov
insl
jns
gs
mov
inc
pop
mov
and
inc
jp
mov
lea
fs
pop
xchg
push
jns
lock
je
movsb
data16
ljmp
stos
inc
fadds
ja
dec
subl
push
cmp
cs
and
cltd
sti
cmpsb
push
cli
lahf
popw
add
mov
add
xor
inc
sti
std
xor
adc
xchg
cmp
pop
in
cmp
nopl
add
cltd
cltd
cmp
inc
mov
inc
dec
inc
fildl
sub
adc
sahf
inc
cmc
push
dec
pop
inc
adc
and
sahf
inc
dec
or
test
add
daa
mov
aas
je,pn
pop
adc
mov
cmp
add
es
jnp
arpl
test
xor
xchg
repnz
mov
dec
stos
mov
mov
mov
mov
cld
sub
xchg
xchg
sbb
cli
mov
mov
cs
xchg
or
into
add
and
ficompl
add
fs
jno
mov
add
dec
pop
jp
sar
lret
dec
pop
push
inc
notb
push
jecxz
dec
mov
scas
or
mov
scas
test
sbb
jg
jne
mov
inc
inc
aaa
movsb
test
jne
and
aaa
pushf
sbb
aam
nop
int3
jae
sbb
enter
dec
dec
mov
mov
xchg
xor
cmp
icebp
pop
push
mov
xchg
add
mov
mov
insb
cmp
sub
shr
xchg
mov
sbb
loopne
jno
imul
inc
test
mov
sub
xchg
cmp
add
jae
ficoml
dec
insl
push
fsubl
push
mov
and
imul
fsts
jne
test
outsb
sub
push
out
int3
sub
pop
add
mov
arpl
sub
cmp
xchg
ret
int
xchg
sbb
pop
popa
mov
pop
fstl
pop
lret
cmp
jg
mov
xor
lock
lods
in
aam
push
cld
lcall
pushf
shrl
scas
sbbl
frndint
mov
out
mov
cmpsb
push
adc
repz
push
repnz
jmp
xlat
mov
mov
decb
dec
call
mov
sti
mov
scas
pop
mov
adc
daa
test
movsb
ss
push
mov
pop
aam
mov
jmp
sti
jnp
mov
fdivr
push
jo
mov
das
add
push
push
xor
fcoml
rorl
ss
pop
mov
lcall
xchg
xchg
movsb
add
mov
xor
adc
mov
xor
shl
jp
xor
jp
mov
jecxz
jp
sbb
or
xchg
lods
ljmp
hlt
stos
or
outsb
fsubrl
subl
sbb
fiadds
popa
cmp
int
test
fs
xchg
roll
or
scas
dec
aas
push
inc
push
fisttpll
sub
push
sahf
fdivs
cld
jge
insb
jns
mov
adc
jle
inc
mov
sbb
mov
lret
pop
fstl
cmp
lret
mov
lods
jo
mov
mov
jns
mov
jge
cs
pop
int3
push
dec
inc
sub
aam
addr16
arpl
repnz
dec
ds
fidivrs
xor
mov
aas
push
movhlps
es
pop
addb
inc
inc
cli
sub
lret
je
insl
pop
mov
and
pop
bound
push
ja
daa
fidivrs
mov
arpl
fdivs
or
dec
push
sahf
cmpsb
cmc
or
dec
or
mov
push
inc
cld
dec
in
add
sti
xor
arpl
jp
xor
cmp
jbe
out
inc
inc
cmp
ret
sub
or
xor
mov
adc
jp
aad
mov
loope
mov
call
adcl
add
fs
movsl
sub
sbb
push
insb
loopne
in
fwait
movsb
bound
sbb
mov
cmp
js
es
clc
sub
in
ret
andb
cmp
mov
mov
dec
js
addr16
xchg
inc
adc
jbe
insb
and
arpl
jnp
push
pop
popa
push
pop
lret
push
pop
sub
inc
or
repz
into
test
fistpl
scas
and
mov
adc
mov
loopne
dec
add
decb
stos
cwtl
sti
push
inc
inc
or
adc
adc
cs
push
push
lret
xchg
mov
adc
adc
incl
or
out
mov
mov
addr16
cmpsl
adc
pop
jb
ss
addb
add
outsl
test
push
aad
lcall
mov
adc
mov
int
jle
mov
lea
cmp
jnp
mov
jp
mov
xchg
movsl
rcll
or
jne
dec
repnz
pop
into
clc
pop
mov
xor
aas
pop
xchg
insb
inc
jl
aas
mov
add
test
int
sub
mov
push
pop
dec
lods
mov
pop
cmp
dec
adc
outsb
push
and
outsb
enter
xor
mov
int3
pop
lret
jns
cmp
arpl
stc
and
icebp
mov
xchg
jle
jecxz
jle
cmc
mov
adc
gs
sub
arpl
sub
fwait
sti
jo
sub
stc
in
pop
out
xchg
jg
dec
jnp
movsb
push
int3
fwait
sbb
in
fstps
andl
aam
inc
mov
adc
pop
mov
and
lcall
into
add
sub
sub
xchg
pop
fwait
mulb
stos
and
adc
js
or
push
stos
or
sbb
and
xchg
pop
loop
je
dec
cld
iret
lret
jno
cmp
xchg
sti
insb
add
loop
addr16
jbe
and
shl
int3
lret
jecxz
xchg
sti
add
sub
or
mov
and
jns
or
lret
mov
fwait
outsb
pop
add
inc
add
add
stos
loope
pop
dec
jne
push
dec
and
jbe
push
push
in
cmpb
push
cli
jecxz
movsb
shl
fs
mov
aaa
and
arpl
inc
pop
into
mov
pop
push
push
aad
xchg
mov
cs
sar
sarl
ror
sarb
pop
push
push
fwait
sub
test
jecxz
push
popf
inc
fwait
sahf
dec
shlb
stos
lcall
or
divb
dec
test
and
pushf
jmp
and
aas
aas
or
adc
xchg
ficoml
popl
gs
xchg
outsb
aas
sbb
jge
stos
inc
push
dec
mov
std
push
dec
cmpsb
jnp
es
mov
das
sti
pop
sub
mov
or
imul
loopne
imul
test
fiaddl
rcrl
xchg
lea
sahf
push
mov
cli
sbb
shlb
adc
push
sbb
xor
popa
push
adc
rcr
push
jecxz
dec
stc
popf
or
push
inc
push
jb
jl
push
pop
jb
jecxz
inc
add
xor
repnz
lock
push
daa
mov
sti
mov
sub
push
fldt
push
sub
into
adc
and
int3
sbb
orl
fstpt
test
fwait
jmp
mov
jl
in
push
xor
mov
xchg
mov
xor
inc
pop
stc
mov
bound
lods
dec
mov
dec
jmp
and
pop
je
xorb
add
pop
pop
decl
or
fwait
adc
sbb
xchg
push
xor
mov
inc
jle
cmp
xchg
mov
nop
pop
xchg
push
push
and
push
sarb
sbb
dec
mov
mov
pop
adc
sub
cltd
mov
dec
loop
dec
lret
lcall
mov
fcompl
lahf
addb
jo
add
push
pop
int
pop
pop
pop
mov
test
inc
pop
js
ljmp
mov
les
jge
jecxz
xchg
call
cmpsl
ljmp
dec
ljmp
cmp
add
imul
xor
cmp
xor
add
add
test
in
out
adc
popl
adc
push
sbb
xchg
ss
adc
jmp
add
xor
ret
inc
xchg
enter
cmp
cmc
add
mov
add
stc
inc
pop
lea
xchg
stos
aam
xor
add
icebp
daa
pop
andl
daa
adc
sbb
lret
mov
ljmp
into
cmp
mov
aam
shll
push
push
addr16
inc
add
addr16
sahf
push
cld
leave
xor
sti
dec
inc
lret
lock
mov
sbb
stc
cli
loope
inc
js
fistpl
xchg
sbbb
test
test
cmp
ficoms
lods
push
add
test
insb
xlat
inc
into
add
pop
mov
repz
jg
es
jbe
jns
add
inc
jmp
push
xchg
sahf
or
insl
mov
or
adc
sbb
sarl
sub
ret
test
cmp
sub
push
vmovaps
ds
mov
adc
inc
cli
rolb
in
fimuls
inc
mov
xchg
cmp
lahf
bound
ja
les
iret
mov
test
ret
addl
mov
xchg
jle
arpl
aam
iret
mov
adc
sub
jne
jo
dec
sbb
mov
out
sub
push
pop
mov
negl
xchg
inc
loope
mov
fcomp
scas
in
ljmp
ret
movsb
xorl
jge
ror
pop
push
cmp
popa
sub
js
ds
inc
push
scas
xchg
cmp
sbb
inc
call
shlb
fs
andl
nopl
sbb
cmpb
dec
adc
add
xor
arpl
cwtl
fdivrl
push
inc
imulb
rcrl
pop
out
adc
inc
sbb
iret
sub
in
xor
jae
dec
mov
jno
push
cld
lcall
adc
call
sbb
push
pop
push
fdivl
add
pop
sbb
aad
sbb
aad
into
sub
push
iret
push
bound
mov
dec
lahf
xchg
cs
lea
pop
lcall
jl
out
inc
add
cli
dec
jae
or
jle
pop
test
sahf
xor
adc
mov
xor
out
jl
arpl
call
xor
push
clc
cmp
sbb
xchg
addr16
test
mov
jle
inc
xchg
xchg
mov
pop
mov
je
dec
cli
gs
and
data16
js
push
imul
push
xor
rcll
xor
aam
cld
dec
pusha
sahf
sub
pop
add
xchg
inc
stos
jno
ljmp
cli
sub
hlt
enter
push
shrl
add
cltd
inc
sbbb
fistps
push
fisubrl
ficoml
jno
fldt
xchg
add
cmp
xor
int3
push
sbb
adc
xchg
call
add
loope
xchg
sub
jae
push
dec
insb
add
xchg
jbe
popa
mov
jb
inc
loopne
mov
and
test
lea
sub
pop
cmpsb
pop
push
out
lret
add
xor
test
inc
cwtl
dec
sbb
cld
into
push
and
js
adc
stos
gs
inc
in
mov
cs
xor
cmpsl
sub
xor
out
loop
inc
ljmp
lock
mov
pop
rolb
inc
test
in
movsl
aad
test
adc
lret
inc
jns
sbb
popa
loopne
loop
or
pop
leave
sbb
repnz
in
push
mov
jae
pop
lahf
ret
and
lcall
nop
pop
out
fnstcw
outsb
jg
dec
adcb
pop
sbb
sbb
dec
lahf
cli
mov
stos
push
push
mov
popf
mov
jmp
mov
mov
sub
jns
in
dec
int3
ss
aaa
outsl
jb
cltd
insb
xlat
sub
add
pushl
ret
xchg
xor
xchg
pop
loopne
ljmp
insl
repz
sbb
je
dec
add
into
movsb
dec
push
ja,pt
fldenv
in
hlt
cmpsb
xchg
mov
dec
mov
mov
xchg
ds
xchg
mov
push
and
inc
test
hlt
mov
movsb
cmpsl
add
fs
mov
jno
push
xchg
pop
push
pop
lods
xchg
pusha
idivl
xor
inc
cld
inc
hlt
sti
inc
add
stos
sbb
pop
push
cmp
jl
xchg
cmp
fwait
push
or
xchg
jg
xor
jbe
roll
and
in
sub
lds
or
sub
xor
call
adc
add
jecxz,pn
jbe
pusha
xor
mov
ret
xor
orl
jb
lahf
test
ret
loop
adc
mov
leave
mov
and
xor
lcall
push
es
mov
xor
aad
mov
sbb
xor
adc
pop
mov
ret
scas
cmp
testl
insl
sub
ds
rcrb
outsl
mov
jno
call
aas
ljmp
jo
xor
sbbl
sbb
rorl
adc
dec
push
jle
mov
cmp
lret
jecxz
fucomi
push
std
int
mov
and
insl
xchg
add
aad
dec
push
clc
lods
jl
repz
dec
inc
mov
das
fcmovu
add
push
hlt
pop
in
scas
xchg
xor
in
in
pop
adc
sbb
cmp
push
hlt
aaa
cmp
pop
repz
test
stos
mov
outsl
jno
mov
add
aam
scas
stos
sarb
sub
cmp
cwtl
sti
jbe
gs
lahf
stos
adc
test
cmpsb
sbb
fcomps
push
sub
rcrb
cltd
lcall
lahf
sbb
mov
and
sub
test
and
add
mov
and
pop
sti
in
sub
and
jns
cltd
aas
subb
sub
sub
cwtl
fstl
cwtl
or
pusha
ret
loope
and
pusha
sub
cmp
loop
dec
out
cwtl
pop
xor
fcompl
imul
cwtl
lock
ret
inc
test
mov
add
inc
mov
jne
fwait
jae,pt
hlt
adc
out
mov
stos
xor
lcall
and
mov
xor
cltd
loop
scas
push
test
cli
mov
mov
xor
bound
push
add
nop
or
icebp
cli
pop
out
into
ss
pop
ja,pn
imul
cmp
dec
inc
insl
cltd
and
ret
daa
lcall
pop
push
dec
pop
xchg
mov
cmp
jbe
inc
call
outsb
add
jmp
and
or
mov
sbb
pop
call
adc
adc
sbb
xchg
inc
jmp
in
sub
xchg
add
loop
outsl
stos
mov
mov
xchg
dec
add
mov
pop
pop
popf
xor
sub
repz
dec
push
push
out
adc
or
and
xorb
or
inc
adc
xchg
pop
add
hlt
adc
aam
mov
int3
push
cmp
aas
and
pop
xor
or
loope
cmp
dec
jecxz
out
sbb
test
dec
sub
imul
int
pop
repz
xorb
add
or
out
push
add
xorb
out
push
or
sbb
repnz
fcmovne
sbb
out
scas
push
mov
mov
hlt
fistpll
xchg
add
dec
fldcw
popa
mov
lcall
mov
call
adc
out
loop
mov
jmp
nop
add
ret
inc
mov
test
popf
mov
inc
pop
adc
jg
sub
scas
aam
sub
pop
dec
push
sbb
pop
xchg
loop
jmp
lcall
xorb
cmp
dec
sahf
je
imul
dec
or
mov
cmp
adc
xchg
loope
jno
pusha
pop
int
and
and
shr
sbb
repz
hlt
popf
testl
adc
mov
dec
in
subb
in
and
scas
psrld
mov
add
dec
jne
scas
sbb
cwtl
fwait
sbb
push
cli
adc
cltd
inc
jmp
push
adc
sbbl
subl
sbb
scas
pop
cmc
mov
xchg
std
jecxz
xchg
iret
das
lcall
push
insb
xor
into
sub
jo
dec
jb
jle
lods
repnz
ds
sub
xorb
out
cmp
hlt
xor
add
ret
rcr
sbb
dec
sub
outsl
pop
sbb
ficompl
fldt
adc
mov
int3
jp
sub
inc
add
imull
sbb
inc
sbbl
mov
xchg
lock
inc
adc
cmp
das
xor
mov
dec
xlat
test
mov
mov
add
xchg
jnp
popf
orl
pop
into
dec
jbe
popf
in
sbbl
adc
sub
mov
out
cmp
rcl
cmpsl
stos
jg
mov
mov
lods
ss
mov
sub
inc
ljmp
push
mov
clc
cmp
fs
mov
xor
inc
test
fadds
imul
js
or
mov
out
mov
dec
fisubl
lods
sub
sbb
ja
inc
in
push
leave
xchg
push
lcall
pop
xor
mov
inc
loope
in
xorb
lret
ljmp
adc
push
jbe
scas
sbb
or
fldl
das
fmull
and
mov
sbb
jae
shlb
xchg
mov
sub
fsts
adc
jl
out
stos
frstor
sub
lods
xchg
shll
int
clc
mov
pop
fldenv
dec
stos
ljmp
xor
scas
and
xor
cmpsl
iret
enter
xchg
lret
ss
cmpb
mov
loop
stos
fildl
data16
push
cmp
jno
and
jmp
imul
adc
mov
roll
jne
sbb
pop
cmpsb
xor
pop
aam
movsb
fisubs
inc
fstpt
mov
mov
or
push
je
lret
leave
xchg
jp
sub
add
jbe
mov
mov
stc
movsl
addr16
pop
aam
mov
pop
inc
add
cmpsb
loope
mov
lea
cltd
push
arpl
ss
pop
jns
jne
test
ss
sti
addl
lahf
inc
push
mov
add
dec
sub
loop
push
push
shrl
out
adc
aad
stc
xchg
dec
fs
enter
cld
jmp
stos
je
push
xor
mov
daa
aad
adc
aam
shrb
lret
sub
sbb
mov
add
outsb
xchg
pop
leave
lock
clc
add
fiaddl
dec
or
movl
xor
adc
xor
push
add
mov
shlb
mov
adc
adc
mov
fidivl
mov
enter
add
dec
stc
popa
scas
out
add
add
fwait
es
addl
inc
pusha
into
add
pop
jp
testl
xor
sbb
mov
and
push
lahf
les
jecxz
jo
repnz
mov
mov
adc
arpl
add
out
ss
into
aas
xor
and
shl
sahf
sti
insl
adc
cmp
mov
or
lcall
jecxz
xor
adc
nop
outsb
xchg
jecxz
aam
leave
inc
jmp
imul
inc
cmpsl
lods
sbb
push
out
xor
ljmp
daa
aad
inc
xchg
cmp
insb
loope
add
pop
or
jecxz
out
lds
lock
cwtl
rcll
jbe
push
push
ret
std
lcall
les
cltd
xchg
aad
in
sbb
jle
int
xor
or
mov
xor
mov
repnz
in
adc
subl
adc
mov
fwait
test
add
loop
pop
inc
enter
add
lret
pop
ss
test
rol
insb
cmc
imul
mov
ret
dec
addr16
ficoml
inc
sbb
movsl
enter
test
shll
xor
icebp
jge
pushf
arpl
ret
sbb
lcall
sbb
shlb
or
ss
stos
scas
jbe
cmpsb
xlat
popf
movsb
or
mov
sahf
jae
sbb
push
adc
or
jnp
fsubrl
int
cmp
xor
jl
in
add
out
sbb
in
xor
jge
dec
and
push
inc
je
pop
push
inc
add
call
aas
sub
ss
adc
push
mov
jecxz
cltd
cmp
sahf
addr16
xchg
outsb
das
cwtl
jnp
and
aam
add
cltd
data16
fwait
iret
cmp
cli
pop
cli
mov
xchg
cld
mov
mov
mov
mov
xor
scas
push
xchg
fsubs
or
pop
dec
stos
out
sbb
jo
sbb
popa
jne
bound
mov
scas
dec
pop
mov
add
ss
push
add
sbb
xor
adc
mov
add
jge
inc
xor
push
fsubp
push
fsubs
xorl
xchg
jle
int
push
stos
sbb
and
fisubrl
sub
cli
mulb
cmpsb
or
pushf
add
in
in
cltd
nop
movsl
lahf
out
add
sti
sti
nop
add
jp
fsubs
lret
ret
mov
inc
xor
xchg
and
fistl
daa
fs
in
out
cmp
sub
cmpsl
nop
test
xchg
shrb
pop
jp
or
leave
clc
fwait
je
popf
lods
lods
std
gs
cmp
mov
dec
push
xor
mov
fmuls
cmp
movsl
sub
push
popf
push
mov
sbb
inc
mov
dec
addb
mov
stos
test
sarb
push
hlt
jmp
xorb
cmpsl
push
xlat
mov
pop
shll
callw
cs
add
xor
mov
insl
movsl
mov
lret
pop
sub
adc
sbb
jp
andb
push
imul
cmpsb
add
mov
cmp
mov
push
xlat
and
loopne
mov
cltd
aaa
jae
mov
jb
movsb
pop
add
ret
sbb
out
pop
addb
test
and
movsl
jge
jl
cmp
and
sarl
mov
int3
bound
add
push
pop
jl
mov
mov
dec
mov
pop
sub
cmc
aam
push
pop
push
add
stos
je
loope
mov
fwait
fwait
enter
pop
ljmp
loopne
fcmove
xor
add
stos
int
loope
arpl
insl
popa
mov
inc
filds
pop
aam
daa
xor
sbb
shll
mov
inc
pop
bound
push
mov
test
ja
divl
jmp
aas
testl
mov
mov
fs
nop
add
arpl
add
dec
out
add
and
xor
add
mov
push
popf
mov
pop
cli
sub
dec
xor
enter
lcall
fsubrl
and
fbstp
sahf
lods
or
dec
pop
dec
pop
add
iret
adc
and
cmp
sub
jb
cmp
jp
aaa
or
imul
addr16
lods
aaa
xorb
sbb
scas
mov
xlat
adc
xchg
inc
mov
xorl
mov
pop
jp
xchg
mov
sub
cwtl
xchg
call
mov
sbb
push
dec
int3
aaa
xor
popa
push
fwait
aaa
decl
push
mov
sarl
imul
xchg
mov
fisubrl
cmpl
jne
push
pop
cld
sub
mov
lds
or
dec
push
or
lcall
movsl
mov
push
dec
out
stc
ja
sbb
mov
cmc
cmp
jne
inc
pop
gs
cmp
xor
out
add
int
jecxz
mov
add
jnp
xchg
das
adcl
loop
ss
sar
enter
jecxz
push
test
jp
pop
inc
xor
xor
mov
add
add
pop
shll
push
test
add
jne
xor
cld
push
jg
ficoml
pop
push
xor
mov
adc
mov
hlt
lock
fmuls
sub
popf
cmp
xor
mov
out
sti
fiaddl
mov
add
mov
in
ficoml
cs
aas
push
sbb
sahf
mov
arpl
adc
push
lahf
push
jle
inc
cli
push
bound
inc
or
mov
lahf
call
inc
in
hlt
in
mov
outsl
sahf
stc
mov
enter
lods
add
or
fadds
push
fsubrs
mov
aas
mov
cwtl
in
or
pusha
movsl
inc
imul
mov
nop
insl
dec
sbb
ljmp
xchg
mov
xchg
sbb
xlat
sbb
out
imull
xchg
inc
sbbl
jp
mov
mov
cmp
ret
ficompl
insb
jecxz
mov
popl
sarb
push
sbb
scas
imul
xchg
ss
cli
cs
and
lea
std
das
and
or
fistpl
push
sub
out
mov
ds
mov
and
inc
and
and
or
jg,pt
mov
icebp
fs
dec
hlt
faddl
inc
jb
fisttpl
mov
jo
loopne
leave
mov
dec
xorb
sbb
imull
jno
rcrb
mov
loope
lcall
shll
stc
mov
jnp
push
cs
sar
add
sbb
mov
or
sbb
add
js
add
add
xchg
push
es
imul
fs
mov
jae
adc
mov
sub
xchg
mov
add
jns
dec
add
lods
ss
push
inc
add
push
fstpt
jg
adc
pop
mov
adc
inc
je
dec
cmpsl
std
call
cwtl
jg
sbb
repz
leave
imul
popa
rcll
mov
outsl
xor
ss
cmpl
inc
xlat
dec
stos
add
pop
inc
daa
movsl
addr16
les
inc
mov
mov
add
xchg
mov
popf
fwait
inc
push
mov
mov
and
mov
add
xor
aam
jns
je
adc
adc
or
out
hlt
xchg
inc
sbb
dec
pop
fwait
jbe
add
push
pop
mov
and
inc
and
lea
and
adc
mov
pandn
adc
fisubrs
out
push
bound
cmp
xacquire
xorb
mov
outsb
dec
in
popf
in
subl
xor
std
mov
pop
lahf
andb
mov
ret
outsb
outsb
fs
lock
cmp
clc
and
adc
lods
mov
sbb
mov
cmp
cmc
sbb
cmp
and
lret
or
pop
or
push
and
cmp
enter
out
movsb
in
xor
push
in
inc
scas
enter
test
cs
rcrl
rorb
lahf
add
inc
sbb
in
not
int3
stc
sbb
popa
mov
lret
mov
mov
fstpt
enter
cmp
pop
call
xor
dec
scas
xchg
cwtl
aas
inc
inc
mov
shrl
or
add
sar
ja
sbb
xchg
pop
in
ljmp
add
sbb
leave
gs
call
inc
jae
xor
or
mov
inc
adc
arpl
adc
jae
ss
xor
dec
inc
push
pop
cltd
ljmp
pop
push
xchg
pop
mov
sub
in
mov
push
cwtl
mov
sbb
mov
mov
ja
sub
andl
push
cs
push
dec
jecxz
mov
loope
pop
jnp
jbe
shll
lret
dec
lret
xchg
movl
pop
jnp
ret
insl
push
add
iret
addl
enter
in
add
lahf
mov
sub
dec
in
pop
fdivs
stos
cltd
pop
sub
pop
loopne
sbb
lret
and
xor
sub
mov
or
movsb
jne
sub
push
dec
lcall
jmp
cmp
ret
jno
inc
pop
jnp
push
pop
xchg
test
fnstsw
xchg
popf
cmpsl
adcl
bound
sub
and
adc
xorl
stc
fldt
test
jl
imul
cli
sbb
rcr
jbe
sbb
mov
xchg
les
into
ss
add
sarl
lods
daa
ret
dec
add
xlat
dec
mov
mov
stos
push
leave
js
and
jae
mov
or
push
xorb
add
mov
movsb
ss
jge
mov
das
movsl
pop
pop
dec
pop
push
ret
xchg
mov
aas
or
cld
lea
aam
sub
adc
pop
std
sbb
es
mov
xchg
out
imul
jp
out
jnp
repnz
xchg
dec
sub
cwtl
cmpsb
adc
sbb
xor
inc
loopne
lcall
and
add
add
std
mov
xor
mov
outsb
xor
repz
btc
subb
arpl
fbld
scas
lcall
shll
add
xor
mov
and
lahf
mov
ja
aas
push
loope
cmp
ret
xchg
ss
ret
nop
clc
push
sti
fsubl
clc
jg
dec
out
inc
xchg
push
mulb
ja
dec
lahf
pop
mov
inc
mov
jmp
or
pop
add
in
cwtl
mov
pushw
jbe
adc
adc
out
lods
shl
adc
inc
sarl
aam
xchg
test
xchg
and
add
fildl
sbb
loope
sub
mov
daa
jp
add
ja
push
jmp
lcall
popa
fsubrp
imul
addb
in
je
fistpl
push
insb
pop
pop
sub
jne
enter
fdivl
xlat
popa
and
push
and
pop
add
shll
fidivrl
jmp
stos
mov
push
cltd
cmp
jb
mov
pushf
sub
ljmp
hlt
cmp
sti
add
xchg
xlat
push
inc
movsb
or
cmpsb
lcall
xorl
fwait
divl
pop
mov
ds
dec
inc
adc
loop
dec
xorl
in
sub
push
cmp
push
clc
outsb
loop
out
xchg
inc
adc
push
call
loope
push
in
inc
mov
rclb
jmp
sub
loope
xchg
add
xchg
push
or
pop
jnp
rorb
fnstsw
in
jecxz
cmpl
repz
and
mulb
aad
aad
fdivl
push
pusha
cmp
sub
cmp
sbbl
xchg
enter
repnz
ss
loope
inc
je
or
pop
xor
out
mov
push
stos
adc
and
stc
pop
rorb
cmp
decb
les
dec
les
loope
std
pop
out
je
out
mov
fistpl
mov
mov
js
sub
adc
fwait
das
js
pushf
in
push
push
ficompl
jb
and
sbb
sarb
lods
lods
push
leave
xor
pop
dec
popa
mov
xor
mov
add
shlb
inc
or
incb
dec
inc
scas
insl
pusha
or
lret
inc
mov
jnp
xor
pop
dec
push
jg
cwtl
das
roll
les
arpl
xchg
add
inc
mov
push
jae
repnz
xchg
into
test
sti
add
xor
jecxz
xor
ja
jmp
fmull
es
cmpsl
fisubrs
fimuls
add
lock
lcall
fmuls
xchg
mov
or
movsl
out
and
shll
cli
lods
xor
movsl
bound
add
sahf
imul
mov
mov
fsubs
call
jnp
add
lahf
xchg
and
in
lahf
pop
mov
movsl
push
jl
stc
lahf
or
cmp
jnp
sbb
ja
jns
icebp
push
pop
mov
lcall
cmp
stos
mov
push
xchg
xchg
cmp
pop
xchg
pop
jp
mov
enter
jb
cmpsb
xchg
pop
pop
jns
ss
test
xchg
pop
push
pop
add
lds
lret
jns
pop
jmp
ss
mov
jo
jp
xor
std
leave
jl
inc
or
jge
orb
push
push
aaa
push
subl
fwait
sbb
inc
lcall
int
xchg
fmull
repnz
push
je
in
push
add
mov
xchg
lret
cld
addr16
daa
push
inc
subb
out
lds
push
lret
pop
jnp
jge
push
cmp
lcall
add
sub
dec
lcall
xchg
movsl
fnstenv
cmp
pop
push
mov
lock
xchg
shll
adc
xchg
idivb
mov
dec
stos
xchg
pop
dec
and
stos
mov
and
push
jmp
imul
imulb
ds
leave
bound
decb
js
lret
cmp
stos
inc
call
mov
add
cmp
mov
fsubl
jmp
ljmp
popf
sti
sub
sub
pop
ss
movsl
fistl
inc
dec
stos
dec
neg
mov
scas
sar
or
mov
and
add
mov
fmuls
xor
cmp
fisubl
test
loopne
lahf
push
stos
ret
mov
test
adc
stos
cmp
dec
cltd
jle
add
pop
lock
jne
pop
ljmp
ret
mov
xor
inc
push
int
cmpsb
push
imul
test
xor
inc
sbb
mov
sarl
dec
xor
xor
cmp
je
bound
lcall
mov
add
inc
cs
push
sub
and
xor
add
mov
cmc
add
mov
out
sbb
jecxz
xchg
push
int3
mov
pop
addr16
push
jle
pop
jb
or
adc
cmp
jge
int
mov
dec
and
jmp
jbe
inc
pop
inc
subb
push
loopne
in
mov
xor
sbb
mov
mov
sub
imul
out
enter
xchg
bound
mov
pop
and
push
xchg
add
and
sbb
or
out
testl
loopne
jl
sbb
mov
and
cmp
or
push
jecxz
ja
xor
sbb
divb
and
js
add
aaa
aad
jmp
sbb
mov
sbb
pusha
jbe
inc
xor
js
dec
inc
push
shll
call
into
arpl
or
out
inc
or
imul
out
test
out
outsl
push
mov
push
ret
jo
xchg
leave
pusha
push
dec
adcb
sbb
clc
xchg
push
aaa
cli
adc
rclb
mov
inc
int3
add
test
inc
fistpl
arpl
jae
sti
sub
jns
jle
cld
imul
std
rorl
jb
cmp
out
cmpsl
jne
add
add
shll
inc
test
inc
movsl
inc
xor
fcompl
jb
push
sub
call
cmp
icebp
sbb
jbe
bnd
rolb
jg
icebp
loop
xchg
mov
sbbb
or
aam
in
pop
pop
out
loope
repnz
mov
insb
bound
mov
pop
push
sbb
or
sub
mov
inc
leave
outsl
scas
mov
jp
xor
lods
mov
cmpxchg
pop
cmpsb
jg
xlat
incl
gs
repz
enter
fistl
popa
mov
aam
dec
mov
xlat
sub
imul
pop
testb
sbb
jo
adc
adc
mov
xor
rcl
arpl
imul
mov
jns
sub
fisubrs
adc
fs
pop
sub
mov
lods
les
inc
or
xor
loope
xor
jnp
or
cltd
or
jnp
xchg
dec
fstpt
cmpsb
inc
nop
or
in
xchg
adc
jbe
jae
lds
fsincos
outsb
jp
imul
test
sbb
xchg
cmp
and
and
aaa
mov
sub
je
push
cmp
mov
cmp
pop
sub
dec
mov
lock
stos
push
push
gs
cmp
fdivr
push
arpl
cmp
popa
into
das
call
lcall
push
enter
push
dec
push
cld
rcll
pop
test
ret
dec
repnz
shlb
add
ficoms
mov
scas
push
in
jbe
and
sbb
mov
ja
cltd
popf
lcall
test
cmp
adc
cli
decb
popf
aaa
fcmovnb
fnstcw
aaa
movb
imul
add
inc
ja
lret
popa
data16
in
mull
js
scas
clc
in
and
test
push
push
or
inc
pop
pop
or
imull
sbb
pop
popa
aaa
mov
mov
adc
leave
inc
fsts
insl
clc
out
dec
cmpsb
es
mov
xor
dec
jmp
jmp
sub
cli
roll
add
jecxz
mov
sub
hlt
xchg
and
sti
outsl
fyl2xp1
cmp
pop
std
add
cwtl
mov
adc
jle
cmp
addr16
dec
xor
push
sti
push
and
xor
pop
jl
mov
out
cmp
fstpl
out
stos
andl
je
jo
dec
imul
add
inc
shr
adcb
dec
loop
xor
lock
xor
sub
and
je
cmp
lods
inc
mov
punpckhwd
cmp
or
pop
out
adc
loopne
and
lods
loope
sar
or
add
sub
sbb
nop
sub
sahf
xlat
push
dec
jnp
sbb
lahf
mov
punpckhwd
sbbb
movsl
imul
pop
xor
jecxz
push
xchg
xchg
adc
push
pop
cmp
fstpt
out
aas
and
and
jb
xlat
in
outsb
lods
inc
pushf
sub
mov
pop
push
lahf
movsb
jp
mov
mov
ss
imul
inc
inc
notl
xchg
or
xchg
xor
dec
adc
dec
sarl
adc
loopne
sahf
add
xchg
js
ficoml
jne
fsts
ljmp
mov
jp
xor
inc
leave
loope
ja
xchg
pop
jo
fnstcw
inc
lret
cs
loopne
inc
jae
mov
movsb
decl
push
insl
jo
add
fstl
iret
mov
pusha
popa
or
mov
xchg
cwtl
out
xor
push
in
and
cmp
mov
add
fld
cmpb
sub
loop
out
push
incb
in
jl
sahf
jg
xor
add
cmp
loopne
in
cmp
daa
xchg
in
push
add
imull
lcall
mov
loop
data16
or
jmp
stc
cmp
add
xchg
sbb
jmp
dec
or
sub
movsb
ret
mov
pop
popf
push
cld
jecxz
rcll
pop
pop
ret
mov
sbb
pop
adc
jg,pt
sub
jg
inc
setle
jge
and
jge
rclb
or
xor
sbb
lds
insl
loope
sub
in
adc
push
or
test
mov
pop
stos
orb
stos
adc
xchg
ja
or
aam
push
rcrb
fstps
jnp
notb
jg,pt
add
sahf
jl
in
test
hlt
sbb
xor
pop
push
xor
rcrb
cmpsb
addb
ljmp
jle
pop
iret
outsb
xchg
add
or
add
jne
xor
jae
xor
aam
mulb
insl
int3
in
rolb
xchg
xchg
dec
aaa
icebp
xchg
shlb
icebp
push
dec
push
notl
fs
sub
leave
push
pop
pop
lcall
sub
mov
ljmp
insl
xchg
and
dec
cli
jbe
enter
jb
mov
adc
jmp
sbb
sti
dec
mov
jmp
xor
inc
in
aad
mov
ss
dec
gs
or
push
aad
lds
hlt
sbb
mov
and
aam
daa
popa
fs
call
and
mov
in
jbe
std
fildll
sysexit
cltd
pop
mov
idivb
cmp
xor
jo
clc
out
out
inc
dec
popa
fucomip
pop
inc
int3
in
mov
hlt
in
lcall
jae
push
mov
or
dec
fbld
jae
in
in
lahf
pusha
aaa
push
shlb
lcall
jl
xorb
in
jecxz
loopne
or
movsl
shrb
mov
jecxz
xchg
sahf
or
jl
push
lret
pushf
add
lods
xor
arpl
lea
push
jb
and
add
fldcw
add
enter
stos
add
dec
adc
js
es
cmp
mov
sbb
fisubrl
ljmp
inc
sub
in
stos
inc
insl
xor
fwait
test
add
push
insl
mov
fstl
sbb
fsubs
mov
lcall
pop
orb
outsl
push
mov
sub
push
sahf
subl
movsb
xor
popa
inc
push
push
dec
dec
arpl
bound
mov
fwait
pop
daa
push
mov
pop
add
in
cwtd
pop
loop
imul
add
jns
adc
adc
outsb
mov
mov
add
mov
and
bound
or
fwait
or
rorl
rolb
sbb
inc
dec
sub
or
cmpsl
pop
sub
arpl
sbb
dec
inc
jp
jo
mov
mov
shrb
xchg
mov
inc
ror
cmp
pop
cmp
out
or
jge
dec
dec
rcrl
pop
inc
imul
jb
xchg
pop
jne
addr16
cld
adc
repnz
movsb
loopne
pushf
movsl
test
incb
or
test
test
clc
xchg
sub
pop
fwait
sub
mov
xchg
daa
stc
add
push
xchg
add
movsl
sahf
out
xor
aad
push
xlat
jne
neg
incl
loopne
dec
pop
jecxz
test
push
dec
adc
hlt
fsts
and
jp
pop
jno
outsl
sub
sbb
leave
jne
dec
out
or
rcrb
cmp
sub
push
in
cld
cmp
popa
nop
dec
adc
into
lret
bound
lock
cmc
mov
loop
outsb
movsl
mov
in
arpl
jmp
outsb
xchg
jns
dec
push
mov
jl
fcomps
rcl
cmp
cltd
sti
pop
in
and
bound
mov
data16
or
jnp
inc
jp
pop
bound
jae
in
fsincos
insb
out
push
push
ss
jbe
xlat
xchg
faddl
out
mov
sti
mov
cmp
sub
subl
ja
add
int3
mov
addb
sbb
test
jnp
ljmp
mov
push
lods
stos
and
adcb
cmp
or
jo
nop
adc
jle
mov
and
mov
fistl
push
xlat
sbb
add
test
push
xor
lods
cmpsb
aaa
pusha
adc
pop
or
bound
mov
push
jne
mull
and
inc
push
out
loop
leave
sub
push
xor
cld
stos
sbb
cmp
lods
mov
mov
push
add
push
xor
xchg
push
cs
lods
sahf
insb
and
cmp
jecxz
pop
arpl
cmpsb
xor
popa
or
mov
incb
mov
xor
pop
jo
mov
sub
sti
notb
push
ret
add
jl
rol
mov
push
in
fmuls
out
out
mov
or
or
push
ficomps
cltd
push
pop
push
push
fildll
lcall
popl
push
and
inc
jb
loop
sub
ja
add
stos
addb
jno
cwtl
data16
in
pop
test
mov
movsl
and
ret
insl
adc
cwtl
and
mov
pop
pop
jb
mov
push
pushf
pop
out
and
add
cmp
push
sub
jge
fldenv
mov
inc
imul
icebp
cmp
out
cmp
js
add
add
shll
add
out
sbb
in
insl
insb
inc
sbb
cmp
add
pop
dec
and
sbb
sub
push
mov
test
daa
sbb
push
das
lcall
das
mov
ss
lret
andl
xchg
or
inc
mov
pushf
clc
cmc
mov
inc
push
mov
subl
or
add
adc
ficoml
int
cli
lock
jmp
lcall
insl
subb
es
out
xchg
lcall
in
or
mov
bound
nop
aam
pop
jne
adcb
mov
movsb
mov
fbld
fisttps
pushf
addb
adc
std
pop
inc
pop
jb
andb
inc
inc
dec
and
lahf
jno
xor
pusha
lds
and
sub
sbb
mov
imul
sbb
fisubrl
mov
push
inc
js
pop
fmull
xchg
mov
push
sub
mov
inc
stc
mov
add
imul
ljmp
mov
adc
sbb
bound
neg
dec
jbe
mov
add
lcall
shll
incb
sahf
fbstp
sbb
push
push
pmaxub
dec
xchg
fldln2
jnp
cmp
xor
push
outsb
out
and
fstps
in
dec
add
ss
cmp
fs
lcall
add
fisubrl
sub
dec
int3
cwtl
dec
or
outsb
fincstp
mov
push
pop
sbb
fwait
sbb
mov
jb
filds
rclb
and
sbb
ret
dec
sahf
push
inc
sbb
jns
and
adc
sahf
xor
push
in
in
addl
fwait
repnz
push
dec
dec
test
cli
cmp
dec
lret
xchg
notl
xchg
or
data16
mov
jb
movsl
xor
push
rcrl
test
dec
inc
repz
mov
lcall
fwait
ds
pushf
imull
outsb
dec
jp
push
sbb
inc
cmp
data16
sbb
mov
inc
cwtl
ret
and
push
xor
cmp
movsl
sti
outsb
sub
cs
icebp
scas
dec
mov
or
xchg
clc
xor
sti
cmp
aas
mov
cmp
sbb
add
stos
sub
cli
xor
aas
subb
sbb
sahf
sbb
stos
and
out
in
and
imul
cmp
push
testl
movsb
mov
sbb
and
test
sub
lcall
jge
pop
adc
mov
cmpb
dec
jne
ss
out
mov
test
test
cmpsl
movsl
aas
sbb
pop
dec
sbb
sti
pusha
fmuls
aaa
in
fsubr
xchg
push
push
xchg
sub
cmp
jno
push
cltd
loop
push
mov
aas
rcl
addr16
fildl
sub
sbb
dec
and
fldl
add
inc
insb
dec
out
iret
std
ret
lahf
popf
xchg
jmp
pop
inc
inc
mov
popf
sub
push
pop
loop
cltd
add
mov
ja
mov
jne
sub
sbb
loop
lret
jp
out
repz
jg
sbb
mov
cli
int3
adc
and
adc
jp
lock
inc
sub
rcl
cmp
cmpl
arpl
notb
test
test
jne
mov
mov
fistpll
inc
shrb
lods
pop
mov
mov
cmpsl
fistl
mov
and
repnz
stos
scas
add
outsl
mov
fcoms
jno
cmp
pop
add
jmp
out
mov
jmp
adc
popa
jns
or
jae
leave
xor
fwait
arpl
or
mov
jbe
push
push
jo
add
lods
into
int
inc
stos
rsqrtps
mov
jbe
cwtl
mov
jge
push
lea
pop
cmp
subb
jbe
inc
mov
mov
lods
js
leave
inc
adc
lahf
test
lods
loope
mov
ret
out
sub
nop
addw
sarl
pop
dec
or
addr16
js
inc
xchg
cwtl
leave
cmp
fmull
ds
adc
pop
cmp
cli
mov
andb
xchg
ret
or
dec
jg
dec
xchg
cmpsb
sti
mov
xor
pop
cwtl
pop
call
xor
or
aam
inc
lcall
push
push
pop
lcall
outsl
cmp
jns
mov
dec
call
cli
jecxz
push
mov
dec
sbb
lret
push
jo
pop
dec
xor
call
rclb
push
push
lds
out
lea
cmp
add
stc
leave
inc
add
xchg
xchg
push
outsb
push
pop
fidivs
inc
gs
push
test
in
cmpsl
add
pusha
cwtl
jns
and
inc
pop
sub
cmp
js
das
adc
push
lret
rorb
pop
lods
imul
mov
ljmp
test
clc
add
les
aad
insl
dec
push
orb
push
sub
cmp
jmp
dec
rcll
inc
inc
jb
xor
mov
xor
pop
inc
loope
mov
xor
divb
and
or
outsb
in
xor
pop
xor
sahf
lods
shll
inc
mul
arpl
sub
loop
push
sarb
fwait
pop
pop
add
jcxz
pop
dec
or
pop
cmpsb
sbb
lds
dec
stos
and
lds
pop
cmpsb
je
cltd
insl
dec
mov
pop
dec
test
fcmovnb
sub
lret
loop
lea
pop
cltd
pushf
loop
test
loope
inc
jp
imul
mov
mov
test
lret
adc
iret
jecxz
data16
sub
sti
mov
cmpsb
jmp
xor
jns
jbe
lcall
xor
mov
xchg
imulb
pusha
xor
loopne
sub
mov
cli
pop
fldenv
sbb
push
in
andl
push
fwait
cmpsl
pop
mov
add
pop
repnz
call
out
push
mov
test
dec
fmull
or
xor
or
outsl
xchg
pop
iret
rcr
test
outsl
lods
pop
cmp
ds
enter
jno
outsb
scas
dec
outsl
xlat
adc
aas
jnp
popf
sbb
jne
fmul
aad
movsb
outsb
in
push
fsts
mov
dec
cmpsl
jbe
pop
jp
push
or
dec
xchg
outsb
add
mov
xchg
xor
jb
dec
cmp
lods
cltd
adc
daa
pop
loopne
outsl
xchg
call
loopne
cltd
fimuls
aam
lret
add
hlt
adc
sub
sti
sub
cli
sar
decl
pop
inc
mov
stos
mov
mov
mov
data16
bound
push
aad
lret
xchg
adc
mov
mov
sbb
fildl
cmp
aas
movsb
subl
in
call
adc
push
in
lcall
fsubr
and
rorl
pop
sbb
movsl
xlat
push
jbe
sbb
rcr
inc
cli
push
into
sub
arpl
or
daa
decb
iret
repz
jae
lock
push
outsb
jp
or
sub
mov
andl
pop
sbb
and
ret
mov
sub
pusha
push
arpl
sbb
mov
mov
mov
mov
push
iret
cwtl
sbb
inc
popa
xor
mov
lods
loopne
cwtl
stc
dec
cmp
mov
sti
jno
dec
cli
imul
xlat
shll
mov
cmpsl
fs
jae
lret
sub
fiadds
test
cmp
jbe
ds
sbb
push
out
sub
pop
subb
insl
int3
jge
push
cmp
sub
mov
fstpt
ret
mov
scas
xor
xchg
in
adc
mov
inc
jp
scas
mov
push
inc
insb
push
movsl
ja
xchg
loope
mov
pop
add
mov
iret
mov
rorl
xchg
mov
call
lds
sar
add
pop
ret
popf
xchg
add
cmp
add
shr
stos
arpl
bound
iret
cli
mov
repz
in
movsb
dec
scas
out
pop
stos
ja
mov
das
popf
cmp
inc
insl
insb
cmp
inc
ret
leave
out
aam
add
xchg
add
pop
loop
outsl
inc
mov
loop
fildll
loopne
popf
loop
xor
cmpsb
sbb
sub
pop
lods
lods
imul
xor
jecxz
jnp
cmp
cmpsl
clc
mov
sbb
jle
jp
add
test
movsb
jp
sub
leave
and
push
inc
sahf
jae
inc
movsb
sub
pop
jne
adc
pop
mov
sub
jle
xchg
mov
fldl
sbb
push
leave
dec
add
or
ds
xchg
shrl
xor
in
arpl
and
dec
lahf
xor
push
ja
mov
fisttpl
xor
insb
sbb
sbb
xor
adc
push
adc
fs
and
cld
int3
cmp
lods
les
cli
aam
jp
lahf
in
icebp
lock
imul
cld
inc
loope
push
push
cltd
cli
xor
pop
icebp
push
cli
lds
test
dec
test
inc
dec
xchg
sti
dec
dec
pop
lods
xor
call
sti
insb
cmp
ljmp
mov
mov
cmp
sti
mov
sbb
cwtl
mov
daa
xchg
push
mov
pop
popa
push
pop
enter
cmc
aad
inc
pop
and
jge
inc
popf
inc
pop
cmp
stc
es
xor
rorl
aas
pushf
pop
jae
mov
push
je
outsl
pop
mov
rcll
call
inc
dec
enterw
pushf
jl
fildl
mov
add
sub
aam
test
and
scas
add
push
popa
sbb
mov
inc
jp
lods
imul
push
add
xchg
clc
mov
mov
fisttpl
xlat
stos
pop
or
addr16
sbb
leave
pop
pop
lds
xor
pop
sbb
dec
pop
adc
xor
nop
data16
sti
cli
ja
jnp
dec
jo
mov
inc
in
xor
mov
loop
push
pop
hlt
cmpsb
into
inc
mov
fldl
fidivrl
lahf
fwait
push
enter
cltd
inc
insl
xor
adc
pop
jnp
push
cltd
test
imul
call
lahf
and
mov
clc
mov
lahf
pop
and
mov
into
sbb
sti
hlt
mov
xor
jno
mov
add
jo
popf
sarb
jns
sbbb
pop
dec
push
or
push
lahf
enter
mov
sbb
push
push
add
cli
sbb
mov
mov
mov
pop
subl
mov
popf
cmp
lcall
shll
pop
lret
loopne
mov
inc
dec
fisttps
or
inc
mov
test
fimuls
adc
dec
mov
mov
repz
mov
incb
out
fdivs
rcrb
loope
or
cltd
out
fisubl
mov
inc
inc
cli
or
stc
xlat
xchg
movsl
push
add
in
mov
mov
test
mov
test
ret
ss
stc
pop
lahf
pusha
pop
lret
sub
lret
jae
xchg
scas
out
jo
xor
push
xor
jne
nop
push
xchg
enter
jmp
jge
rol
mov
fldcw
mov
mov
mov
mov
mov
leave
jp
sbb
xor
fucomip
jae
mov
pop
inc
faddl
jbe
cld
cmp
sub
jge
lret
mov
pop
cwtl
jle
test
sub
jne
mov
test
outsb
stos
and
xchg
and
xlat
mov
inc
push
jo
and
jecxz
dec
jns
aam
xor
mov
pop
lock
ret
or
jg
push
inc
ss
dec
mov
pop
jg
add
lock
loope
jg
sub
lret
jecxz
mov
fs
push
leave
in
xor
adc
add
bound
mov
adc
dec
cwtl
outsl
pop
mov
sub
sbb
stos
fisubl
in
cmp
sub
pop
push
and
and
mov
pop
push
daa
lcall
fsubrl
out
orl
and
stos
jno
cli
leave
mov
lea
mov
test
dec
push
push
sbb
pop
lahf
sahf
push
pop
xor
cmpsl
lret
insl
inc
push
mov
test
xor
clc
ds
pop
mov
mov
or
fcomps
inc
out
int3
push
imul
stos
lock
push
fiaddl
out
ja
jae
inc
aas
add
roll
xchg
test
mov
pop
cli
mov
inc
rcrb
adcb
sbb
pop
mov
lock
mov
insb
adc
xchg
insl
fistpl
inc
sbb
add
adc
push
jns
filds
cld
sbb
ficomps
fimull
js
cmpsb
cwtl
les
mov
outsl
scas
jno
inc
shr
push
out
lret
outsl
das
addr16
push
ljmp
add
imul
adc
mov
xchg
in
aaa
cld
adc
pop
add
rcrb
mov
into
stos
std
cmp
dec
mov
pusha
pop
push
cmp
cltd
xor
mov
xor
pop
je
testb
test
mov
in
into
cmp
pop
arpl
dec
gs
add
push
loope
ja
mov
mov
outsb
pop
cmp
lahf
push
adc
pop
pop
sbb
out
insb
push
add
ror
icebp
mov
mov
push
shl
push
xchg
mov
test
xchg
lods
insb
fistpl
bound
gs
cmp
arpl
push
sub
arpl
push
xlat
roll
test
lock
ja
filds
flds
xor
lahf
and
mov
pop
xor
sbb
cli
inc
xchg
push
int
inc
sub
test
addr16
cmp
andl
pop
xchg
into
mov
mov
out
dec
popf
sbb
jb
dec
xor
out
mov
xchg
lcall
sub
cmp
cmpsl
push
and
xchg
pop
cli
push
and
sbb
ret
out
aam
sub
sbb
dec
or
mov
in
stos
jle
xchg
int
xchg
jb
std
add
loopne
stc
xchg
mov
daa
sbb
sub
mov
int3
out
pop
pushf
mov
push
sahf
mov
xchg
mov
dec
ret
jae
lcall
xor
xor
xchg
ljmp
mov
inc
adc
jns
xchg
fsub
shll
pop
out
dec
sub
cli
or
and
jne
pop
fildl
test
jmp
jnp
stos
xchg
scas
sbb
sbb
dec
ficomps
mov
popf
enter
sbb
sub
and
sub
loopne
xor
adc
nop
mov
adcl
std
add
mov
mov
loop
jo
dec
ret
dec
inc
mov
sti
loopne
ret
fwait
seto
xchg
stc
mov
sti
push
or
jne
or
movsl
adc
and
lcall
cs
push
xlat
stc
inc
lods
pop
rcll
push
ret
push
scas
pop
dec
add
xchg
nop
sbb
xor
pop
mov
jecxz
xor
test
jecxz
cmpsb
fiadds
sub
ficoms
loope
sbb
xorb
cmpsb
gs
push
xchg
push
push
mul
sbb
xor
mov
push
stc
jo
push
mov
inc
fsubrp
rcll
xchg
iret
jnp
sbb
push
test
je
mov
mov
adc
fstl
cltd
add
insl
xchg
dec
fcompl
mov
cmp
jns
cmp
cld
xchg
cmp
ss
imul
stc
clc
cmp
mov
sti
xchg
mov
or
cmpsb
inc
jne
das
xor
sbb
sub
arpl
andl
jbe
inc
jmp
sub
data16
clc
pop
dec
insl
and
xor
call
adc
imul
shlb
pop
or
push
dec
data16
xchg
push
jno
ret
add
in
mov
jb
xchg
xchg
into
add
push
sahf
add
test
into
test
cmp
cmp
mov
mov
pmulhw
xchg
fcomps
nop
jl
inc
push
jl
andnps
sbb
lahf
pop
or
sub
ret
imul
inc
out
js
and
enter
sbb
jne
jo
call
add
popf
icebp
imull
adcl
add
sbb
xor
fildl
popa
and
test
mov
or
pop
mov
inc
lock
cmpsb
adc
addr16
sbb
hlt
clc
stos
xchg
pusha
lcall
xchg
pop
addr16
test
fildll
jmp
jb
cmp
pop
and
jo
xor
jno
xor
push
cld
mov
lret
into
mov
cmp
xor
stc
into
aaa
xchg
xor
sarl
mov
jb
lahf
adc
scas
fcmovnbe
jno
xor
stos
jno
lea
out
pop
mov
cli
fadd
mov
inc
mov
loopne
adc
and
mov
push
fs
cmp
push
cs
cmp
jo
inc
cli
fdivr
lds
push
test
fistps
mov
jmp
insl
jbe
inc
aad
aaa
ja
jo
addb
or
repz
fistpl
xchg
cmp
fdivs
pop
mov
in
in
add
les
cld
lcall
loop
push
xchg
pop
adc
add
icebp
je
mov
or
push
and
sbb
movsb
into
xchg
outsl
call
int
mov
idivb
push
popf
lds
and
mov
pop
stos
les
lods
fldt
mov
dec
jne
cli
push
jne
enter
jle
pushf
add
fiaddl
cltd
mov
scas
mov
and
test
mov
adc
es
add
test
shr
shrb
inc
jbe
pop
push
cld
rorb
jecxz
xchg
xor
xchg
xorb
add
push
xor
repz
out
adc
ret
cmp
jle
fsubl
jp
rolb
jno
out
ds
ss
test
xchg
int
cwtl
pop
rcll
inc
repz
xchg
aas
sub
pop
lcall
mov
notb
bound
movl
loope
dec
mov
inc
rcrb
lret
ficoml
shr
mov
sbbl
cmp
stos
lahf
xchg
adc
cs
dec
andb
pop
cs
out
lea
or
push
mov
pushf
arpl
sbb
pop
add
adc
mov
outsb
adc
inc
inc
test
shll
lds
pop
dec
fiaddl
and
mov
cmpl
adc
pop
in
pop
lods
jo
sahf
ss
mov
aaa
mov
lahf
mov
jge
adc
and
cmp
fisubs
mov
push
xor
pop
sub
mov
xchg
dec
mov
inc
enter
int3
roll
ss
mov
sbb
sbb
and
iret
mov
ss
fsubrs
xchg
cmp
jbe
sar
lret
adc
inc
cs
xor
add
imul
push
cmp
shrl
fwait
pop
lcall
int
popa
lcall
mov
fwait
imul
cmc
add
outsb
inc
ror
pop
dec
jno
cli
sti
sbb
sahf
sbb
mov
cmp
jl
gs
and
icebp
cmp
leave
paddq
lret
lods
sub
jge
push
jno
and
jmp
test
enter
popl
addr16
mov
add
xchg
xlat
sahf
push
negb
adc
push
xchg
xor
mov
fistps
fwait
push
pop
xor
push
push
adc
dec
fcoml
push
push
insb
adc
or
data16
int3
add
daa
in
das
jae
adc
mov
shr
mov
insl
push
and
add
jo
outsl
and
xchg
ds
mulb
lahf
pop
fwait
into
add
int
inc
adc
movsb
scas
cmp
cli
xlat
popa
lods
call
and
xor
adc
pop
data16
stos
stos
repnz
push
xchg
iret
adcl
push
push
xor
ret
call
xor
push
or
jo
nop
dec
mov
stc
sbb
xor
xchg
inc
cmpsl
jl
mov
sahf
arpl
data16
andb
push
pop
jno
push
xchg
xor
repnz
movsb
push
jnp
pusha
xor
daa
cmp
lock
int
push
jns
and
aam
jecxz
mov
or
mov
std
cld
xchg
rorb
ja
cmp
fisttpll
jmp
lret
push
mov
ror
sbbb
stos
mov
jne
pop
and
inc
lock
pop
nop
sub
jno
push
jle
aad
test
jno
mov
jnp
xchg
push
cmp
stos
inc
ficoml
int
jle
inc
mov
arpl
and
sub
aaa
pusha
fldln2
and
sub
dec
out
xor
in
xchg
jecxz
xor
sbb
pushf
sbb
movsl
pop
daa
cmp
outsb
adc
shll
xchg
xor
add
fisttps
and
cltd
or
or
mov
scas
dec
cmp
adc
xor
pop
inc
inc
stos
mov
sub
pop
mov
sbb
lahf
push
aaa
mov
sbb
mov
std
pop
js
clc
sub
mov
or
pop
cmp
test
ja
iret
das
jbe
inc
sbb
shl
ja
adc
pop
jae
push
xchg
push
incb
pop
fucomip
xchg
sbb
jl
jp
cmp
rcrl
lock
aas
fdivr
sub
movb
inc
jb
xchg
loope
cmp
lods
push
adc
mov
mov
fstps
cli
lcall
scas
stos
fadds
movb
inc
outsl
fucomip
push
mov
push
xchg
jmp
mov
push
bound
add
notb
pushf
jl
mov
or
js
iret
js
mov
or
cwtl
add
adc
outsl
divb
inc
sbb
pop
cli
cli
jge
data16
sahf
fsubrl
xor
sbb
push
data16
imul
shlb
repz
fwait
pop
jns
mov
pop
xchg
ss
incb
aaa
stos
and
inc
cltd
in
stos
mov
and
cmp
mov
and
cmp
mov
xchg
in
mov
mov
cli
out
sub
and
fwait
and
xor
lcall
adc
inc
sbb
xchg
lock
or
ss
jo
popf
xor
fwait
cs
or
adc
fwait
daa
pop
in
cwtl
movsl
daa
sub
lea
lds
icebp
das
push
add
shrb
pop
and
ficoms
mov
sub
inc
ret
and
push
xor
mov
lret
xchg
mov
inc
addr16
into
test
in
inc
pop
lea
adc
cli
pop
pop
daa
fisubs
inc
addr16
pop
test
push
and
fistpl
xchg
mov
dec
mov
ficomps
add
loop
rclb
leave
and
or
lods
les
push
adc
xor
repz
sub
jl
jp
push
std
es
js
and
enter
lret
sub
popf
push
xor
ds
nop
out
and
and
mov
lcall
lods
clc
mov
js
lret
cmp
das
add
stos
or
sbb
add
add
push
rcrb
das
add
xor
adc
stc
push
jae
mov
das
mull
adc
fs
cmpsl
aaa
pop
fidivl
xchg
test
es
sbb
mov
jmp
add
stos
inc
sub
mov
aaa
xchg
mov
xor
xlat
or
cltd
inc
mov
movsb
out
pushf
adc
xchg
xchg
sub
sbb
adc
add
push
pop
es
ds
push
test
mov
rcr
scas
rcrb
addr16
leave
sub
or
or
call
pop
jne
sbb
pop
clc
push
iret
mov
ficoml
sbb
lahf
sahf
or
ja
sbb
orl
dec
mov
sbb
cmp
in
or
and
scas
add
js
stos
or
mov
gs
add
push
stc
xchg
mov
clc
push
sub
dec
add
shrb
stc
test
and
gs
mov
push
add
sub
cmp
stos
adc
xchg
jne
cli
jno
and
cmpb
xor
xlat
pop
add
inc
stos
sub
or
pavgw
daa
gs
or
mov
push
cs
mov
cmp
test
stos
mov
jp
daa
push
repz
add
cmp
aad
sbbl
scas
sbb
xor
mov
mov
lret
push
subb
andb
sbb
sbb
xchg
add
xor
out
sub
mov
leave
push
sbb
push
mov
ret
jp
cwtl
add
jb
ret
lock
lea
loop
xor
out
out
imul
cmp
push
inc
outsl
jp
jg
je
cltd
push
adcl
jmp
inc
insl
arpl
mov
xor
stos
and
inc
add
lods
pop
inc
inc
xchg
add
pop
sbbb
push
cld
xor
test
leave
mulb
or
sbb
add
cmpb
jecxz
sub
inc
popf
aas
sbb
mov
or
add
add
inc
inc
movsb
mov
or
mov
sub
mov
cmp
out
jno
xor
adc
cltd
sbb
cmp
mov
aaa
mov
shrl
out
mov
adc
cmp
mov
movsb
xor
add
or
adc
rorb
cmp
mov
lcall
imul
lds
mov
frstor
imul
add
push
mov
test
paddusw
dec
xchg
fcoms
iret
ror
insb
fildll
lock
sub
shlb
lahf
xor
insb
xchg
sbb
jbe
dec
jle
inc
xchg
or
push
dec
hlt
hlt
jnp
filds
in
push
pop
adc
hlt
pop
pop
mov
pop
jmp
cmp
arpl
jge
fcmovbe
in
sahf
stc
adcb
mov
mov
adc
fidivrs
aas
and
inc
sbbl
inc
fistl
dec
add
pop
pusha
imul
push
adc
cmc
int3
mov
jo
sub
lock
cmp
leave
push
dec
bound
sbb
add
cmp
adc
cmp
lahf
pop
or
mov
nop
mov
int
mov
mov
cli
jns
lcall
mov
lret
push
or
aas
push
adc
out
adc
loope
stos
sub
mov
ss
iret
lcall
repnz
popw
sbb
repnz
mov
push
xor
ret
jo
sbb
movsb
inc
into
jecxz
sbb
add
add
push
sahf
leave
push
lods
cwtl
mov
call
dec
mov
xchg
add
jns
cmpsl
dec
and
mov
cmp
sub
cli
adc
cmp
cs
test
or
xchg
pop
fistpl
ja
fs
xorl
sbb
xor
lret
sub
xor
cmc
inc
movsb
negl
test
cs
pop
test
mov
xchg
rcl
fmull
inc
ficomps
sub
lcall
pusha
fisubl
sub
ljmp
je
mov
leave
movsl
call
xchg
inc
ss
adc
pushl
aam
addr16
pusha
out
shlb
stos
xor
xor
outsb
mov
scas
loopne
cmp
out
cs
lds
cli
cmc
sbb
arpl
scas
adc
imul
aam
xchg
pop
or
pop
or
ret
xchg
xchg
jg
or
popa
test
es
lcall
and
pop
clc
or
inc
stos
jne
dec
adc
enter
roll
into
mov
ret
sbb
div
stc
outsl
cltd
scas
add
das
jo
aam
cltd
add
mov
in
cltd
sbb
push
nop
cli
aad
jns
push
push
outsb
xchg
xor
pop
iret
sbb
filds
outsb
or
mov
ja
jle
or
sub
sti
iret
pop
add
or
divb
fcoms
sub
sti
dec
dec
stos
je
xchg
dec
inc
sbb
fwait
enter
je
sub
push
mov
imul
ficomps
mov
stos
and
scas
pop
push
push
mov
pop
div
cmp
shrb
sub
mov
sbb
fwait
ss
les
and
bound
push
enter
inc
sbb
inc
bound
iret
sarb
stc
mov
das
mov
stos
cltd
push
ss
cmc
push
daa
mov
inc
sbb
mov
fisubl
arpl
lods
mov
js
push
cs
aaa
pop
jne
ljmp
call
cmp
mov
ds
push
mov
xchg
nop
roll
cli
push
arpl
push
fwait
xor
lock
mov
and
imul
cs
mov
test
aam
pop
scas
out
mov
fcompl
adc
pop
and
fimull
adc
or
sbb
and
xor
aad
mov
bound
je
mov
in
add
outsl
push
mov
jne
ficompl
fdivs
or
test
push
ret
int
stos
clc
xor
adc
rcrl
or
ss
sbb
mov
loopne
xor
fwait
cs
fistpl
ja
andl
adc
cmc
inc
push
enter
mov
pop
push
mov
sti
mov
decb
sti
out
sbb
inc
lock
sub
xchg
adc
sub
push
scas
mov
fcoml
out
mov
clc
ljmp
lods
cmp
cs
mov
adc
jns
leave
mov
test
dec
aam
xchg
add
dec
cmp
orl
mov
fldcw
or
aas
fnstcw
or
lods
xchg
xchg
push
jne
sahf
jl
addr16
nop
leave
das
arpl
daa
mov
xchg
rcr
jno
sub
fists
pop
pop
shrb
cmp
ret
enter
sahf
and
ljmp
mov
push
dec
xchg
dec
aas
xchg
addr16
cmpsb
cli
into
cltd
sub
aad
cmp
add
sbb
pop
aas
cld
insb
jne
in
xchg
jnp
sahf
xor
sub
int
fnstenv
hlt
add
adc
inc
and
cmp
xchg
inc
mov
jecxz
loope
es
mov
fcom
fsubrs
ljmp
enter
movsl
popa
cs
in
dec
ffreep
or
pop
or
sbb
arpl
leave
bound
pop
scas
or
icebp
imul
mov
xor
pop
push
addr16
das
subb
stc
mov
add
stos
add
test
mov
sar
pop
in
inc
shlb
xor
pop
in
aas
sub
rcll
and
or
push
stos
dec
popa
filds
sub
cld
andb
sub
ficoms
or
add
hlt
movsl
incl
cli
fwait
stos
cmpsl
jmp
iret
sub
adc
xor
sbb
jb
inc
add
flds
adc
inc
jp
call
push
stos
fdivs
xor
loopne
jmp
daa
dec
adc
pop
pop
jo
jge
jle
lods
jmp
loopne
test
or
cltd
idivl
cmp
call
jbe
mov
inc
jl
mov
xor
adc
test
fnsave
or
flds
fwait
insl
daa
les
stos
jbe
xorl
pop
insl
sub
aas
adc
sub
mov
or
pop
test
in
pusha
push
add
sarl
or
rcrl
jne
mov
sbb
xorl
repnz
aaa
lcall
mov
mov
sbb
stc
rcrb
mov
mov
dec
jo
add
jne
lahf
sahf
sub
cmpsb
jns
repnz
mov
dec
jo
jp
xchg
iret
out
imulb
mov
cmp
cmp
sbb
bound
lock
sbb
push
popa
pop
xor
sbb
xor
fsubr
mov
inc
push
sub
es
mov
pop
cmpsb
or
cmp
jge
inc
pushf
push
cmp
ja
jns
stos
iret
insb
jbe
or
aaa
sbb
dec
mov
xor
sahf
dec
inc
mov
hlt
add
dec
cmp
adc
cmp
mov
pop
jae
adc
inc
out
inc
mov
xchg
pusha
cmpsb
push
add
ds
sbb
jbe
push
divl
inc
inc
pushl
fldcw
mov
and
mov
mov
sti
add
push
sub
or
scas
rcrb
inc
lret
push
adc
aaa
pop
add
jp
xor
and
or
or
xor
fsubs
rorl
decb
in
daa
arpl
fildl
int3
fildl
mov
mov
jnp
xchg
sbb
mov
sub
adc
push
test
or
or
test
pop
sbb
loop
xor
jo
sub
inc
ffree
clc
xchg
mov
idivl
push
mov
ret
and
mov
aaa
mov
xor
leave
mov
jge
and
lcall
xchg
adc
lcall
outsl
mov
dec
popa
arpl
xchg
and
jge
loope
lcall
or
ja
dec
stos
mov
xor
adc
iret
sub
push
loopew
ret
jecxz
aaa
repnz
inc
lahf
mov
cltd
sahf
roll
add
cs
sbb
ja
mov
cmp
je
mov
iret
lods
add
insb
dec
sahf
or
add
and
cli
cmp
sub
push
sub
xchg
fldt
xor
ficoml
rol
mov
inc
mov
sbb
inc
mov
mov
sti
add
pop
mov
movsb
jl
test
sub
in
enter
aaa
stos
shr
xor
or
jae
cmp
imul
icebp
xchg
pop
push
mov
movsb
repnz
xorl
jg
add
pop
ljmp
hlt
pop
test
fs
cwtl
adc
sbb
cwtl
push
fbstp
lcall
in
stos
scas
jno
xor
inc
lret
cwtl
arpl
mov
leave
sub
jmp
or
scas
inc
xor
add
dec
mov
mov
out
pop
das
mov
sbb
les
add
add
ds
jecxz
adc
jge
cli
aad
scas
sub
adc
hlt
adc
inc
outsl
insl
cmp
rcrl
add
pop
cli
sub
in
and
mov
jecxz
jmp
adc
cltd
inc
test
in
and
pushf
pusha
bound
push
xchg
leave
lea
sbb
cmp
add
sbb
add
mov
sbbb
ret
inc
jge
imul
sbb
outsb
mov
lea
push
nop
cltd
cld
cmp
and
cmp
repnz
popa
int
inc
pop
mov
pop
mov
mov
xchg
dec
add
and
sar
shrb
and
lret
inc
mov
mov
ret
leave
int3
sbb
scas
mov
stc
pop
sbb
inc
inc
mov
je
movsl
dec
adc
inc
mov
mov
cmp
push
fwait
push
inc
lock
cmp
pop
movsl
dec
xchg
stos
adc
les
mov
mov
loopne
dec
pop
stos
test
mov
test
dec
cmp
cmpsl
xchg
scas
in
rcr
push
mov
vmwrite
leave
dec
icebp
inc
add
cltd
xchg
xchg
mov
xor
lret
push
push
ret
and
scas
sub
scas
sbb
pusha
cmp
adc
jp
addr16
jp
pop
and
inc
xchg
xchg
jmp
int3
pop
fwait
push
stos
divl
mov
jns
inc
xor
sbb
in
jno
xor
and
sub
push
out
mov
test
ljmp
xor
inc
jo
mov
aaa
jge
adc
lret
loop
jge
jmp
cld
sub
dec
js
pop
jne
push
adc
mov
jns
movsb
lock
outsl
xchg
jae
mov
ficompl
mov
or
jge
inc
mov
dec
cmp
push
imul
pop
mov
ficoml
mov
inc
pop
ror
fsubs
ficoml
les
inc
ficompl
push
pop
loopne
cltd
cmp
jo
aaa
mov
xor
jno
mov
cltd
adcb
sbb
lods
xor
jns
pop
inc
lea
pop
les
aad
xor
ja
repz
mov
xchg
rorb
and
imul
aad
adc
jne
jp
movsb
fisubrl
sbb
inc
bnd
mov
daa
mov
fcmovnu
jns
xchg
lcall
inc
sub
adc
ljmp
loope
jg
test
js
sub
fnstcw
fucom
lea
or
into
jp
push
xor
xor
iret
or
jne
push
xor
lret
fdiv
sub
dec
pop
inc
fbstp
clc
addr16
pop
push
sbb
add
call
les
and
mov
loop
add
jge
adc
cltd
dec
pop
fadd
push
ss
into
xlat
sbb
adcl
add
mov
outsl
mov
jno
push
repnz
ss
xor
inc
cmpsl
add
inc
add
push
jae
leave
dec
pop
mov
cmpsl
lcall
add
pop
fstl
sub
lret
or
add
stos
imul
mov
push
cmp
sub
pop
cmp
dec
mov
flds
lods
sbb
push
xchg
bound
and
es
add
push
insb
movsb
dec
test
dec
ret
lea
cwtl
mov
inc
adc
int3
hlt
mov
mov
mov
pusha
into
fnstsw
adcb
ljmp
cmp
inc
mov
pop
lds
adc
cmpsb
mov
movsl
adc
jne
and
push
data16
xor
push
cli
cmp
scas
inc
xor
dec
adc
mov
xlat
shlb
add
push
bound
add
stos
jmp
xchg
bound
dec
test
pop
add
jg
cmp
aaa
stos
mov
rolb
mov
pop
push
out
xchg
fs
cmp
lret
mov
xchg
mov
cs
mov
mov
push
inc
subl
sbb
mov
stc
add
lods
aad
jp
sbb
mov
je
ss
jg
lods
fildll
cmpl
dec
cmp
and
loope
movsl
inc
or
adc
out
and
or
cmp
ret
test
out
adcb
daa
mov
frstor
mov
pop
sub
in
out
xor
bound
cmp
push
sbb
pop
aas
sub
adc
dec
pop
sbb
pop
notl
xor
loope
adc
sub
outsl
jl
sti
mov
into
add
sub
xor
popf
cwtl
inc
add
cwtl
nop
sar
mov
es
das
insb
iret
xchg
cli
add
cli
sub
repz
xlat
jbe
lods
cmp
inc
int
adcl
push
enter
dec
and
das
pop
lret
jbe
sarb
daa
repz
iret
fs
ja
push
rcrb
xchg
jnp
stos
and
cmpb
xor
and
lods
xchg
push
cmp
cmp
in
pop
decb
jmp
cltd
and
fcmovnu
dec
pop
inc
push
rcrl
mov
adc
shrl
out
js
add
sahf
xchg
shrb
in
aas
mov
xor
inc
inc
jo
xchg
and
loop
pop
add
pusha
js
xlat
sub
jmp
or
gs
xor
xchg
out
add
adc
jmp
shll
gs
lds
daa
leave
daa
sahf
mov
adc
push
sub
push
mov
inc
fcomi
mulb
outsb
scas
inc
lahf
sbb
nop
sbb
adc
cmp
push
out
mov
or
inc
loopne
sti
xchg
fdivs
inc
out
jbe
js
in
jae
cli
push
xchg
sbb
inc
aad
pop
aaa
sub
pusha
js
jne
sub
repnz
in
out
mov
cmp
pop
add
mov
jmp
mov
dec
mov
leave
fldl
xchg
dec
sub
gs
in
mov
or
popa
imul
jg
dec
fwait
jge
mov
jno
ja
add
adc
xchg
and
and
lods
xchg
daa
pusha
fsubrs
sbb
in
lods
fcmovnu
ret
orb
jb
pop
cmp
cli
cwtl
xchg
fidivs
or
add
sti
lcall
in
lret
and
test
mov
xor
cld
or
and
lret
stos
fildll
push
xor
out
push
fs
xchg
push
leave
cmp
pop
clc
aam
push
cmp
xchg
mov
gs
pop
mov
xor
lret
pop
aas
jg
sti
sub
pop
and
xor
fiaddl
std
cmp
outsl
test
aam
test
inc
jecxz
aam
push
cmp
mov
repnz
add
mov
cmp
sbb
jno
out
mov
push
xlat
mov
pop
stos
pop
sti
cwtl
imull
jbe
xchg
cmp
pop
movsl
jl
jns
movswl
jne
stos
add
inc
mov
add
sbb
mov
mov
cmpsb
shll
out
ror
negb
and
arpl
test
xchg
pop
lahf
addr16
pushf
es
push
cmp
andb
outsl
xor
ss
sbb
outsb
ret
jl
sbb
jnp
fs
sbb
add
jecxz
push
or
jp
mov
xor
popf
fdivs
pop
sub
hlt
loop
adcl
iret
pop
cld
into
in
dec
xchg
sbb
and
cmc
mov
push
rcrb
test
es
sub
stos
mov
mov
mov
das
and
movsl
cwtl
out
mov
xor
inc
add
stos
cld
and
add
test
mov
lret
gs
arpl
sbb
inc
stos
cmp
mov
xchg
lcall
sub
js
push
jb
adc
mov
jmp
xchg
rolb
and
or
nop
cli
xor
bound
subb
mov
adc
xor
push
enter
in
ds
push
test
in
mov
inc
mov
mov
dec
push
pop
cmp
out
cmp
leave
addb
mov
out
fsubr
ret
dec
arpl
ss
cmpsb
orl
fwait
jmp
jne
sub
popa
lahf
or
test
cmpsb
sbb
subl
cltd
cmp
pushf
inc
push
imul
inc
jb
arpl
movsl
call
cmovs
aaa
lret
mov
adc
or
fwait
cmp
cmpsb
mov
cmpsb
push
jno
xlat
xor
inc
nop
stos
mov
add
fwait
test
cld
jbe
mov
aam
cmp
sti
adc
pop
mov
lea
add
xor
add
cmpsb
or
ds
push
jo
lret
pusha
in
cmp
xchg
cld
push
aad
int
inc
stc
xchg
add
jnp
jb
push
mov
repnz
xchg
in
movsl
out
add
and
sti
xor
push
dec
andps
xor
sbb
adc
das
dec
cltd
gs
jg
cmpsl
gs
fldl
aad
mov
es
push
ja
cmp
ret
xor
insb
aam
jmp
std
add
in
es
jno
ret
pop
pop
fdiv
mov
in
add
mov
repnz
xlat
lret
loopne
daa
scas
js
lods
nop
sub
mov
daa
sbb
idivb
jmp
cs
add
cltd
or
pop
push
popf
push
mov
or
dec
mov
pop
sub
pop
mov
mov
loopne
dec
jmp
daa
sbb
scas
das
call
and
pop
out
ret
pop
or
inc
sub
xor
jl
js
adc
xor
fiaddl
sbb
lret
sub
sahf
add
bndldx
roll
mov
dec
cmp
xchg
cwtl
sbb
jno
push
insb
dec
filds
cmc
jb
stc
inc
test
pop
icebp
mov
inc
inc
insl
cmp
push
ficomps
and
aas
inc
fwait
iret
decl
loop
cli
mov
xchg
out
or
xchg
into
or
sbbb
adc
jbe
rolb
jb
mov
xchg
jl
cmp
and
lret
data16
or
ds
test
or
popf
pop
push
mov
mov
dec
mov
inc
jmp
fwait
xchg
adc
cmpsb
push
xlat
mov
ja
mov
stos
rol
mov
and
xchg
jno
cltd
jae
dec
pushl
push
orl
mov
js
cli
add
out
enter
mov
ljmp
dec
sub
mov
sbb
and
mov
push
sbb
dec
pop
dec
iret
popa
cmpsb
cltd
nop
jle
dec
in
ret
mov
cld
outsl
or
xchg
xchg
sbb
add
inc
push
lds
jb
leave
push
push
jb
mov
popl
xor
arpl
repnz
aam
aam
hlt
add
add
sbb
dec
or
popf
lahf
ret
hlt
pop
mov
int3
mov
rep
shl
sub
stc
filds
sub
mov
lret
dec
sbb
add
pop
shrl
cmp
mov
mov
sub
inc
inc
out
push
aam
bound
xorb
cli
cli
shlb
or
ret
cmp
stos
mov
adc
jns
nop
dec
sbb
int3
rolb
rol
xchg
sarb
or
add
movhps
fldcw
ds
or
out
idivb
jno
add
scas
ss
xor
mov
int3
pop
lcall
addr16
push
pushf
mov
sub
xchg
stos
fwait
and
test
int3
adcb
cli
xchg
and
cld
mov
fistpll
dec
xor
inc
adcb
push
loope
clc
adc
leave
lsl
nop
cmpsb
repz
insl
inc
shlb
sbb
rorl
jecxz
inc
cs
jae
adc
mov
dec
sbb
push
sbb
xor
sub
pop
outsb
push
mov
mov
sub
and
pop
dec
pop
popa
and
and
mulb
adc
ja
pop
sub
testb
pop
aad
jge
sbb
data16
add
das
mov
std
data16
lcall
adc
xor
fidivl
and
lcall
xchg
pop
mov
jmp
xor
push
adc
pop
or
pop
outsl
insl
mov
adc
into
scas
movq
icebp
dec
popa
jle
cmp
ret
iret
test
int
xchg
push
cli
cmp
rcr
push
js
pusha
dec
out
out
jle
decl
insl
ss
and
add
lcall
inc
cli
jmp
orb
fcoms
mov
mov
pop
adc
xchg
inc
push
fwait
inc
lcall
popa
fldl
jo
leave
pop
aad
fmull
add
push
mov
add
mov
sbb
inc
add
and
sahf
mov
pop
je
pop
cmp
stos
data16
je
or
mov
mov
aas
jle
cli
loop
push
sub
jl
and
cmpsb
push
movsl
cwtl
add
or
out
sti
push
loope
dec
xchg
sbb
rolb
mov
scas
xor
stos
xor
test
test
sti
cli
leave
add
add
addl
inc
jp
push
fisttps
jb
pop
and
xchg
push
adc
dec
das
fistps
das
fistpll
es
push
in
je
cs
jo
cs
mov
cs
test
cs
out
addb
adc
xor
add
in
mov
sti
cmp
int3
jp
mov
inc
ja
popa
cmp
fldl
xor
fcoml
and
mov
mov
xlat
fisubl
jp
out
clc
sub
lea
inc
fldl
outsb
ljmp
add
sub
sahf
pop
gs
ljmp
adc
jno
sti
leave
jae
push
fisubl
test
arpl
arpl
mov
xchg
hlt
lds
adc
inc
les
xchg
cmp
xchg
insb
inc
xchg
inc
mov
in
sub
iret
lret
jecxz
pop
in
js
cmp
mov
xor
in
das
pop
cli
sub
cmp
xor
leave
sub
iret
fisttpll
nop
popf
sub
enter
xchg
lds
jns
aaa
js
cmc
mov
addb
push
and
mov
sahf
jnp
test
sbb
loop
pusha
rcrb
pop
xor
jmp
push
xor
or
dec
test
cs
sbb
incl
jnp
fbstp
ss
insb
pop
jae
add
sbb
je
pusha
enter
out
fwait
insb
mov
and
out
icebp
mov
out
pop
jo
mov
inc
imul
rolb
jno
into
int
jg
rcr
bound
je
cmp
add
sub
sbb
cmp
popa
sbb
pop
xor
repnz
xchg
scas
bound
add
int3
lods
xchg
loopne
sub
sub
clc
cmpsb
mov
jecxz
movsl
into
adc
call
stos
push
push
adc
loopne
call
repnz
jo
sbb
rcrl
subl
aaa
mov
lock
lods
jnp
in
fwait
into
outsl
in
push
lahf
outsb
arpl
xchg
in
scas
fsts
call
mov
push
xchg
inc
pop
lock
jbe
pop
test
mov
loopne
cmpsl
push
push
xchg
arpl
outsl
push
stos
and
popf
jmp
cmc
sub
sub
out
sbb
fisubrl
pop
std
aaa
or
pop
add
fdivl
stc
xor
cmp
mov
cltd
mov
push
pop
or
dec
imul
pop
push
add
fstps
pop
je
test
clc
sub
xlat
pop
sbb
cmp
push
dec
mov
sbb
pop
pop
jo
xor
pop
mov
in
mov
mov
gs
js
rclb
aaa
mov
out
decb
jmp
inc
xor
fcoms
dec
adc
repz
fs
scas
lea
sti
sarb
iret
jecxz
xchg
mov
sub
pop
mov
mov
xchg
fld
push
insl
lock
xchg
inc
in
adc
insb
dec
cmp
loop
js
lret
dec
fsubrs
test
inc
mov
stc
push
sahf
jnp
stc
mov
repz
outsl
and
pop
in
push
jo
mov
shll
push
push
movb
sbb
shll
pop
aam
sub
add
in
mov
out
mov
subl
cmp
iret
dec
sar
cmp
push
sub
pop
sahf
.byte
