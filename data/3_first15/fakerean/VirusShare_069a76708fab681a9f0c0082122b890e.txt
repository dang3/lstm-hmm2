mov
push
push
push
mov
mov
mov
and
cmp
jne
xor
mov
mov
div
add
sub
jmp
and
xor
inc
rol
cmp
jl
xor
pop
xor
pop
inc
pop
ret
push
mov
push
call
mov
shl
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
xor
push
push
push
push
call
mov
cmp
je
movl
mov
incl
push
push
push
push
mov
call
cmp
jne
push
lea
push
call
push
lea
push
call
lea
push
push
call
mov
push
push
lea
push
push
call
push
call
add
cmpl
jne
mov
push
push
call
cmp
je
push
push
call
cmp
jne
lea
push
push
push
mov
push
push
call
call
mov
call
push
call
int3
int3
int3
int3
add
testl
divl
cs
orl
test
negb
pop
mov
test
cmpsb
rorl
je
dec
sbb
call
out
sub
add
mov
pop
scas
push
lock
xchg
mov
std
data16
add
les
cmpsb
add
xor
fabs
cmp
xor
cmp
push
test
sub
jg
test
pop
dec
rorl
push
out
outsb
arpl
das
push
adc
stc
cmp
pop
jae
subl
call
cmpsl
adc
sbb
mov
mov
rolb
pushf
mov
pop
stos
call
push
out
jno
in
mov
push
in
test
mov
adc
lret
sbb
popa
ficoms
inc
lock
stos
adc
mov
xor
iret
aas
stc
xor
shll
sbb
sub
not
in
lahf
mov
clc
pop
mov
str
loope
aas
arpl
mov
pop
sbb
and
popf
lret
cmp
sbb
cld
lock
xchg
pop
cld
fs
jge
pusha
mov
cwtl
xchg
rorl
add
inc
out
jl
stos
xchg
push
mov
inc
fidivrs
pushf
sub
imul
out
mov
faddl
adc
int3
mov
pop
faddl
aas
addr16
mov
mov
jp
sbb
lods
mov
adc
bndldx
jecxz
fisubrs
mov
ret
cs
fisubl
push
popa
call
es
or
out
repz
pop
adc
jns
or
push
adc
inc
lahf
aaa
iret
aam
sbb
ds
lret
mov
sbb
dec
loopne
add
cmp
jns
orl
cs
push
adc
inc
pop
stc
mov
jmp
daa
leave
inc
test
xchg
mov
jb
ret
jne
and
cmp
sub
pop
mov
lods
fwait
shr
insb
fistps
bound
hlt
leave
outsb
in
lahf
cmpsl
mov
jl
aas
and
pop
js
push
mov
adc
adc
lds
jge
bound
insb
stc
pop
sti
push
cmp
and
jmp
cmc
decl
jl
call
xchg
jnp
imul
ret
fsubrl
sbbb
jae
clc
movsb
ds
cmp
bound
mov
push
xchg
adc
mov
jg
mov
test
scas
insl
inc
das
jbe
adc
cltd
rcl
mov
and
xor
mov
pop
mov
test
xchg
jae
xor
js
cwtl
xchg
and
stc
loope
insl
sub
xor
dec
into
int
or
inc
mov
imul
pop
xor
and
shrl
cmp
mov
gs
in
push
cltd
adcl
sub
dec
pop
stc
int
adc
mov
and
cmpb
or
add
in
add
lds
xor
mov
ss
mov
jne
aas
dec
add
fldt
push
xor
cs
jno
mov
mov
push
dec
jp
dec
call
jmp
sub
scas
mov
xchg
xor
xor
sbb
push
jmp
aas
dec
push
ficompl
in
test
scas
negb
cmp
ds
in
int3
test
xchg
adc
jo
adc
or
cltd
pop
cmp
push
test
stos
outsb
cmp
int
pop
loope
adcl
out
sbb
mov
sbb
popf
jb
pop
ret
fstps
push
ret
lea
leave
out
fisttpl
aad
xchg
push
mov
mov
or
imul
xor
or
neg
adc
push
mov
xor
pop
shl
mov
out
inc
jae
fs
mov
inc
int3
test
sahf
hlt
out
jg
ror
mov
aas
hlt
dec
in
test
jge
fucomip
popa
fldl
mov
rolb
cmp
lods
mov
jno
jo
mov
scas
fwait
xchg
test
or
inc
je
cs
fldl
jae
pop
loopne
cmp
fstpt
pusha
out
enter
dec
fdivp
sarb
out
out
fnstenv
sbb
mov
mov
or
ljmp
in
cmp
jp
and
dec
ret
xor
and
imul
mov
lret
lahf
add
sbb
or
loop
imul
xor
push
adcl
int
xor
sbb
mov
les
arpl
mov
cmpl
push
or
sub
mov
arpl
rorb
fdivl
fisttpl
xchg
mov
cmpl
inc
xor
sub
pop
movsb
in
xor
push
subb
push
sbb
jg
cmp
xor
inc
orl
test
fs
loopne
inc
sbb
lret
pop
dec
jno
inc
sbb
sub
xor
inc
lods
push
les
sbb
mov
xor
jno
inc
pop
sub
idiv
adc
jo
or
jo
inc
mov
and
lods
mov
dec
mov
call
inc
add
xor
ds
shll
jmp
mov
aaa
mov
aad
push
inc
add
movsl
shr
sbb
notl
insl
jl
fdivrl
stos
dec
add
cwtl
mov
xor
push
rorb
inc
bound
add
movsl
mov
mov
add
mov
lret
sub
add
call
pop
push
dec
jle
xchg
daa
in
clc
push
sub
call
mov
aas
add
mov
popa
xor
out
addr16
iret
xchg
es
test
dec
dec
mov
mov
pop
icebp
add
lea
jo
idivl
or
mov
dec
pop
cmp
sbb
in
test
ret
xor
cmp
adc
jp
mov
mov
mov
hlt
jbe
mov
xor
mov
rcrb
mov
sahf
pusha
sbbb
enter
dec
sbb
stos
jp
cltd
pop
jno
je
push
pusha
das
mov
daa
or
and
leave
xchg
push
mov
shlb
mov
cmp
arpl
add
mov
and
sti
aam
xchg
test
rorl
jl
int
arpl
imul
adc
push
push
ds
mov
adc
stc
mov
dec
jnp
adc
and
push
xlat
mov
push
pop
les
adc
add
inc
lret
xor
mov
cmc
jmp
ret
clc
xchg
cmpsl
cmpsl
or
test
notl
mov
cld
sub
xchg
push
test
into
pop
outsb
outsl
mov
sub
stos
shlb
jo
in
mov
fisttps
mov
pop
loope
mov
and
or
jg
test
jp
push
stos
insl
push
or
push
idivl
leave
mov
mov
sub
xor
ljmp
dec
sub
push
jg
pop
and
dec
fdivl
shl
cli
loop
lods
iret
or
mov
js
into
jge
add
pop
pusha
in
imul
nop
jmp
pop
insl
lock
sub
imul
mov
jmp
decb
into
or
pop
das
xchg
es
ror
mov
out
or
pop
cmp
jnp
cmp
and
scas
fadd
bound
xchg
insb
mov
xchg
adc
sbb
pop
lea
and
mov
pop
mov
sbb
repz
jo
push
mov
popa
test
dec
xor
stc
sbb
mov
jno
enter
xor
dec
mov
mov
ja
in
imul
iret
lcall
jbe
push
xchg
imul
stos
jl
or
imul
jns
cld
mov
inc
sar
stos
push
repz
test
add
push
jmp
int
cli
imul
push
pop
pusha
sub
pushf
imul
or
loop
or
xor
lods
sar
and
repnz
imul
xchg
jle
sbb
cld
mov
jno
pop
mov
mov
jl
jnp
jg
sub
stos
in
sbb
stc
out
jecxz
pusha
pop
cmp
sahf
pop
mov
adc
sub
adc
add
adc
lea
test
and
test
jp
xchg
mov
repz
jmp
dec
js
adc
inc
pop
jp
in
ljmp
inc
and
xor
jne
push
in
xchg
aam
test
ljmp
sub
push
lds
fdivrl
les
mov
pop
push
push
stc
mov
mov
ret
out
mov
or
jne
xchg
in
jecxz
inc
in
addr16
ljmp
out
dec
hlt
mov
xchg
addl
call
testb
lahf
or
in
lods
out
mov
int3
addr16
ljmp
xchg
inc
inc
adcb
sbb
stos
jle
push
cmp
sub
nop
inc
lds
mov
jb
cmp
in
lret
and
mov
jmp
push
popf
js
or
sub
cmp
mov
out
clc
sbb
mov
subl
mov
cmc
or
adc
sbb
xchg
mov
add
jp
loopne
repnz
sbb
xor
dec
inc
mov
fdivrl
pop
loope
mov
inc
out
mov
dec
or
mov
sub
dec
fs
sub
pop
xor
or
cmp
in
in
add
in
mov
or
aas
loopne
jns
cs
mov
negb
fiaddl
cld
cmp
inc
add
cli
insl
mov
cmp
and
cmpsl
cmp
and
or
mov
mov
hlt
and
dec
jns
aad
enter
cmp
mov
loopne
push
dec
lods
lods
repnz
push
mov
mov
clc
cmpsb
leave
mov
mov
xor
xchg
mov
mov
stos
and
cmp
jmp
sub
aas
fnsave
push
lret
divl
roll
sbb
dec
jl
xchg
pop
cwtl
push
out
rclb
hlt
data16
test
xor
adc
add
lods
adc
pop
loop
mov
in
call
cmp
rorl
test
out
dec
lahf
outsl
sub
or
imul
int3
push
shrl
leave
mov
ret
outsl
lods
adc
sub
fsubr
cmp
mov
call
div
stc
xor
add
push
mov
cwtl
popa
fidivrs
fldcw
cs
or
lahf
adc
sub
clc
mov
fildll
push
mov
jnp
jno
or
adc
psraw
movsb
aam
mov
loop
or
pushf
pop
movsl
mov
jl
in
or
pop
and
lahf
jnp
mov
insb
pop
adcl
mov
ljmp
mov
pop
mov
insb
xor
fiaddl
mov
mov
fsubs
pop
dec
cli
xchg
nop
mov
data16
add
adc
outsb
xor
insb
xor
push
loop
sbb
mov
sbb
in
ret
mov
and
loopne
and
test
into
aas
nop
icebp
jp
jmp
lds
push
add
insb
cmp
clc
aaa
mov
aam
and
fdivrl
lret
cmp
push
js
mov
pop
fs
lods
mov
ret
pop
sub
sub
xchg
pop
shrl
inc
fsubr
mov
lea
js
dec
sbb
out
mov
push
pushf
mov
jge
cvttps2pi
or
mov
imul
and
cmp
cmp
jo
bsr
jo
cmpsl
imul
dec
cmp
cwtl
cmpsb
mov
fmuls
dec
jmp
mov
push
dec
xsave
mov
in
js
adc
cmp
movsb
sub
jmp
mov
or
push
call
imul
mov
dec
or
sbb
je
js
lds
mov
sbb
pop
movsl
and
dec
mov
js
fisttpll
and
dec
add
mov
dec
xlat
in
inc
movsb
inc
jo
fisubrs
int
jnp
inc
stos
inc
std
fistpll
pusha
xchg
shlb
scas
mov
insl
mov
inc
or
mov
subb
pushf
cmpsb
divl
testl
cmc
mov
add
xchg
imul
sbb
push
adc
flds
movsb
andb
out
sub
xchg
xchg
aas
inc
adc
insl
ret
jge
sub
mov
cld
cmpsl
imul
sub
sub
cli
aam
std
and
aaa
js
or
sbb
dec
pushf
rep
movsl
fsubp
into
dec
pop
jbe
icebp
pushf
add
mov
lds
or
mov
cs
dec
mov
sub
jge
rcrb
ds
cmovle
das
mov
xchg
adc
ja
les
mov
mov
sub
jmp
sub
stos
inc
ss
inc
mov
pop
sbb
or
xorb
pop
daa
mov
mov
cld
pop
pushf
pop
add
or
jno
lahf
or
ljmp
fdiv
gs
push
aam
mov
into
leave
loop
lock
ret
cltd
cmp
out
cmp
push
bound
loop
pop
bound
stos
imul
sub
aaa
scas
loopne
sbb
and
dec
pop
call
xchg
cmp
iret
stc
ror
xchg
and
je
popf
popa
mov
rorb
loop
mov
ljmp
clc
jmp
ds
arpl
mov
sub
xor
cmp
push
jbe
and
ret
ror
shll
pusha
mov
mov
cmpl
pop
arpl
fisubs
cmp
push
dec
insl
sub
outsb
add
xchg
sbb
xchg
inc
js
jl,pn
xor
inc
arpl
jns
pop
jo
jo
out
enter
rolb
pop
pop
stc
mov
dec
inc
mov
into
repz
sahf
xchg
jle
push
ficomps
call
dec
dec
dec
add
test
movsbl
or
adc
nop
mov
jo
cmp
mov
and
xchg
cmp
mov
mov
arpl
pop
mov
or
int3
cmp
xchg
pop
stos
mov
push
lcall
mov
lds
sub
data16
add
push
stos
daa
pusha
cmp
iret
or
xorb
andb
cld
inc
pop
and
idivl
loope
add
mov
cmp
pop
je
divb
push
mov
cmp
sbb
and
mov
pop
fldl
mov
xor
xchg
or
xchg
and
shll
rcrb
mov
shr
jne
ret
shlb
shlb
icebp
lea
dec
xchg
push
xchg
xchg
cmpsl
lret
loopne
sub
jp
pop
xorb
pop
cltd
out
stos
push
sahf
test
pop
mov
fwait
scas
sbb
incb
xchg
pop
cltd
leave
lds
xchg
test
push
ja
mov
inc
repnz
inc
sub
je
jo
cmc
rolb
jbe
cmpsb
jnp
cmp
test
inc
adc
out
push
add
and
repz
aam
enter
or
add
push
mov
mov
mov
call
lret
mov
mov
test
add
and
or
insb
adc
mov
sub
ret
sub
xor
add
int3
rorl
sub
cmp
pop
or
cmpsl
fwait
adc
iret
jno
or
cmp
xor
add
add
pop
and
ss
adc
int3
bound
popa
outsb
xor
or
jecxz
jp
addl
popa
mov
decb
subl
out
int
shlb
dec
ret
or
dec
orl
dec
jnp
xor
test
fistpll
mov
cs
inc
mov
xor
lret
mov
out
sub
mov
outsl
xor
mov
ss
std
dec
loope
movsb
cltd
in
push
lds
mov
insl
fs
dec
inc
fsubrp
loope
xchg
stc
push
inc
mov
mov
rorb
cmp
adc
mov
add
pop
fnstcw
cmc
xchg
push
sar
movsl
mov
mov
dec
sub
repnz
pop
ljmp
cs
mov
add
jp
sbb
dec
mov
out
jmp
sbb
inc
mov
pop
mov
popa
cmpsl
mov
mov
add
hlt
lds
sbb
or
js
jg
shr
mov
shlb
adc
push
cld
mov
in
or
pusha
and
cmp
lret
xlat
xchg
mov
stos
int3
das
push
sub
jp
fwait
jo
pop
sbb
andb
mov
mov
sbb
or
ficoml
and
lods
sub
jno
mov
or
divl
aaa
call
inc
pop
pop
jns
cmp
sbb
mov
jb
stos
jmp
dec
mov
mov
sti
stos
les
mov
xlat
out
pop
test
and
fisubrs
cmp
xlat
push
dec
ljmp
add
in
xchg
mov
push
movsl
mov
iret
mov
stos
scas
add
sbb
lea
push
std
shrb
jl
pop
inc
sbb
jle
push
nop
xor
shlb
test
xlat
aas
fstpt
pushf
mov
mov
pop
aad
mov
push
jp
mov
decl
mov
shll
imul
push
pushf
inc
aad
lock
sbb
xor
lods
fidivl
inc
in
movsb
inc
mov
movsb
shll
fisubs
or
jns
dec
pop
sbb
mov
lods
or
jle
mov
fs
and
out
dec
adc
or
xlat
inc
pop
mov
and
xor
cmp
outsl
or
push
aad
repz
jae
stos
fcmovne
inc
jno
dec
xor
popa
cs
cwtl
test
add
ret
pop
pushf
maxps
mov
push
xor
push
pop
pop
lcall
cmp
xor
pop
mov
sti
inc
push
mov
ret
rolb
arpl
outsb
jns
adc
or
jns
jle
jge
jo
jo
addr16
gs
pop
sbb
into
push
leave
aam
arpl
enter
and
jne
xor
fwait
test
test
push
push
in
shl
sbb
mov
mov
arpl
mov
xor
stos
lock
bound
mov
pusha
add
scas
xlat
push
aas
int3
aas
cli
fidivrl
push
cs
xchg
push
popa
faddl
dec
mov
loopne
in
hlt
mov
sub
ljmp
adc
jne
fidivl
popa
cmp
sub
hlt
xor
aad
push
and
sarl
dec
pop
adc
lret
jle
loop
inc
adc
pop
lds
push
add
pop
push
mov
lock
mov
int
das
add
inc
dec
mov
pop
xchg
adc
inc
icebp
mov
pop
mov
and
loope
mov
aaa
fucomp
fnstsw
xchg
int3
jp
or
pop
mov
imul
mov
fsubs
in
aam
insl
mov
xor
xor
ja
ja
or
loop
cmp
call
or
push
jo
mov
aam
shlb
push
pop
cvtdq2ps
jb
adc
adc
int3
aas
mov
push
xor
out
pop
je
orl
movsb
and
inc
loop
aas
ret
daa
push
sub
adc
cld
flds
pop
lods
add
in
sub
add
gs
dec
ret
repnz
pop
jmpw
or
nopl
push
pop
push
sbb
inc
mov
test
cli
dec
or
lret
loope
mulb
mov
or
mov
xor
in
and
js
pop
xchg
push
gs
loopne
jmp
fisubl
ret
fbstp
fs
adc
mov
push
test
ficoml
fyl2xp1
mov
adc
add
inc
pop
imulb
js
ljmp
js
jecxz
cwtl
add
adc
fbstp
sarl
addr16
mov
and
or
adc
jb
mov
fnsave
sub
orb
mov
mov
fs
jl
cld
idivl
ret
jl
loopne
adc
lods
xor
mov
jb
fwait
and
xchg
mov
int
push
cmp
add
xchg
leave
daa
adc
adc
adcl
movsb
or
jnp
or
pop
adc
inc
or
push
adc
pop
cmp
ss
data16
aas
fdivl
es
pop
xchg
inc
daa
mov
std
pop
dec
and
xor
xchg
mov
gs
adc
jno
pop
cmp
mov
xor
out
repnz
and
aad
pop
outsl
add
nop
sti
ja
andb
sti
call
mov
lods
inc
fisubrl
aaa
mov
mov
fstps
movsb
lock
mov
add
mov
cmp
dec
sbb
mov
fs
sbbl
add
mov
push
xor
in
push
pusha
cmp
xchg
dec
jmp
mov
movsl
adc
add
aas
jl
fcompl
popf
adc
inc
repnz
nop
lods
imul
xor
add
inc
into
or
insb
sbb
push
jg
mov
test
jle
addl
and
loopne
jnp
lcall
jne
xchg
arpl
repz
sahf
aam
mov
aam
add
insb
add
repnz
jne
rorb
xor
sub
in
sub
mov
dec
and
or
das
inc
enter
push
push
scas
shl
push
imul
jecxz
call
jl
loopne
stos
scas
repnz
fidivl
cltd
pop
lds
pop
hlt
xor
andl
sbb
dec
scas
mov
lock
cld
inc
lret
inc
sub
mov
loopne
rclb
pop
insb
aaa
push
rcrl
sub
lock
sub
hlt
cs
iret
jae
push
mov
rcr
inc
xchg
adc
jbe
test
or
in
push
or
inc
mov
pop
sub
dec
cli
and
rcrb
sbb
jne
sub
pop
mov
jecxz
sbb
cwtl
dec
clc
out
jne
xchg
mov
sbb
jnp
les
xchg
sbb
clc
jnp
loop
pop
lea
push
lahf
adc
lahf
lahf
fldl
addr16
cmp
fcom
sbb
or
push
insl
adc
pop
inc
sbb
push
inc
jl
out
inc
pop
outsl
std
lods
jle
loopne
mov
cmp
ja
xchg
jns
insl
andl
sarl
sbb
xchg
fldenv
out
xchg
and
popf
mov
cmp
arpl
repz
ss
push
inc
dec
insl
jbe
idivb
push
cmpsb
shlb
inc
xor
mov
pop
cld
mov
mov
or
xor
rorl
roll
xor
xchg
jnp
mov
bound
mov
xor
and
sar
pop
push
nop
repz
outsl
cs
jp
inc
mov
test
push
mov
dec
jns
xlat
cmpsb
push
subl
incb
cmp
lahf
adc
aad
in
inc
xchg
hlt
jge
mov
lret
jp
jae
mov
inc
mul
leave
push
loop
cmp
fldt
out
inc
pop
dec
insl
jno
inc
push
jns
je
inc
mov
mov
in
int3
aam
out
dec
xor
and
and
jae
xchg
jp
dec
pop
stos
stc
sar
rorl
and
mov
xchg
flds
outsl
dec
lea
mov
in
mov
icebp
jno
int3
hlt
cltd
cmp
scas
dec
fs
loope
adc
sub
push
mov
cli
sbb
scas
imul
jp
js
cmp
sbb
fcoms
jnp
dec
sbb
bound
add
lcall
jge
rolb
das
icebp
test
iret
sub
sbb
add
mov
adc
pop
fsub
pop
shll
aas
shlb
aaa
lds
or
sar
int
sub
loop
jge
mov
dec
sub
inc
adc
inc
lds
and
pop
or
out
loopne
jmp
jbe
gs
or
or
mov
into
das
mov
scas
xchg
mov
pushf
imul
dec
repz
in
adc
adc
xchg
repnz
rcrl
js
push
cmp
mov
mov
and
js
es
fists
sahf
inc
lea
cwtl
sbb
fadds
int
xor
pop
les
xor
mov
inc
adc
xor
movsl
and
das
cmpsb
addl
aam
in
bound
imul
and
into
inc
aad
dec
fcoml
push
lods
jb
or
cltd
jle
push
maskmovq
testl
jl
cmp
adcl
add
add
in
push
clc
sbb
push
xchg
fldl
add
mov
in
jmp
jmp
push
ljmp
mov
jg
int3
xchg
outsl
jge
sub
xor
add
mov
and
lret
aad
xor
arpl
cltd
int
call
cwtl
push
or
push
in
sub
mov
mov
mov
jmp
test
sahf
adc
int3
int3
add
loop
dec
xchg
jmp
xchg
icebp
mov
push
inc
int3
sbb
lock
mov
mov
push
ficoms
sbb
sub
lcall
jl
xor
or
filds
xor
push
or
sar
iret
cmp
mov
sarb
pop
int3
push
std
fcmovne
pop
ret
popf
cmp
cmp
loop
vandps
xchg
pop
sub
jl
pop
je
adc
subl
add
inc
aam
cmp
shll
into
pusha
cmp
pop
add
sti
out
pop
pop
push
enter
les
icebp
xchg
jbe
rclb
loop
xchg
sub
in
repz
xor
les
cmp
jae
or
adc
imul
stos
pop
adc
outsl
pop
jl
mov
sbb
inc
movsb
add
inc
inc
and
and
jne
xchg
lcall
popf
push
dec
xor
aad
cs
sbb
and
sub
mov
or
fnsave
lock
enter
jl
sti
sahf
fidivrl
mov
mov
addr16
sub
ja
cmpsl
cs
xlat
movsl
bound
mov
cmp
push
dec
mov
mov
stos
out
nop
iret
sub
ret
add
pusha
dec
pop
rolb
pop
dec
call
mov
pusha
fnstsw
lret
cli
movsb
orb
lret
imul
add
int
dec
repnz
jb
mov
idivl
push
pop
sahf
pop
sbb
jae
cwtl
xchg
rcrl
xchg
mov
in
or
jl
xchg
dec
sub
iret
jle
jns
int3
dec
jbe
dec
xchg
xorl
int3
mov
xor
out
inc
pop
sbb
jbe
inc
and
out
mov
leave
add
out
sbb
or
stc
ficompl
or
fcmovne
scas
insl
xor
sub
or
sub
fld
and
mov
aad
and
push
mov
cmp
testb
dec
stos
add
cltd
lea
push
decl
in
dec
fstp
std
movb
adc
push
mov
in
sbb
inc
arpl
dec
mov
jge
and
stc
imul
inc
mov
mov
movsb
adc
jmp
or
adc
fs
sbb
enter
in
cmp
pop
or
jecxz
aad
cli
mov
repnz
adc
add
loope
scas
daa
je
mov
ss
xchg
hlt
add
rcrl
or
pop
and
rcl
jb
jne
dec
push
sub
dec
js
rclb
aam
int3
jo
or
repz
push
xchg
adc
adc
out
aam
cmpsb
ficompl
sub
inc
pushf
std
and
sbb
orl
clc
jno
sbb
jp
gs
inc
and
aam
mov
call
insb
lret
adc
fstpl
pop
sbb
ljmp
pop
sub
or
pop
and
jge
sti
adc
jne
loop
xor
faddl
movsb
loopne
cmp
insb
scas
mov
cmpsb
xor
int3
aaa
sub
push
mov
mov
aad
inc
xchg
push
xchg
pop
or
popa
sahf
adc
or
ret
dec
and
call
add
cli
xor
in
imul
js
stos
push
jge
adc
jl
cmc
pushl
and
push
mov
pop
push
shr
or
cld
mov
movsb
lret
adc
iret
mov
ret
ljmp
adc
adc
js
sub
sbb
das
shll
jmp
adc
aaa
roll
push
imul
inc
and
sbb
push
cs
dec
mov
arpl
xchg
arpl
cmp
add
popa
fisttpl
cmp
fistps
jecxz
out
jl
pushf
xlat
push
jno
inc
aaa
jle
stos
fidivs
sahf
mov
xchg
arpl
mov
out
push
das
addl
push
cmp
mov
push
jmp
iret
fs
push
sub
and
pushw
nop
dec
out
ret
das
push
leave
lds
mov
jno
in
andl
imul
lods
int
and
jg
rcr
mov
repnz
imul
fnstsw
sub
je
in
out
std
cwtl
dec
shlb
dec
rcrb
jns
cmp
movb
or
sub
popf
pushf
insb
mov
mov
mov
add
call
dec
mov
fnstsw
sbb
aaa
fwait
repz
dec
bound
mov
inc
pop
mov
lea
xchg
subl
adcb
sahf
insl
dec
outsb
hlt
push
and
mov
jp
mov
lea
fmul
pop
add
fst
ja
div
std
mov
mov
mov
xchg
sub
mov
aad
sbb
adc
push
jae
ss
dec
add
jo
cmp
adc
dec
loopne
cld
mov
pop
mov
test
cmp
inc
popf
es
fs
and
dec
cmp
lret
and
inc
hlt
rolb
cli
rcrl
mov
push
icebp
das
test
pop
jne
adc
push
stos
jge
add
jb
arpl
mov
dec
or
psubusw
mov
and
adc
xor
pop
aas
adc
repnz
or
cwtl
lods
xor
sbb
pusha
call
jmp
jmp
ss
lock
lret
addr16
add
test
mov
and
subb
aad
andb
adcl
insl
xchg
sahf
in
js
push
pop
gs
sbb
jno
in
xchg
out
ja,pt
jbe
sbb
inc
repnz
pop
adc
aaa
pushf
cmp
push
hlt
dec
out
fdivrs
mov
pop
leave
or
sbb
ss
inc
stos
notl
lods
shrb
data16
repnz
outsb
gs
cmp
xor
inc
pop
pusha
lods
add
push
fwait
mov
push
cld
dec
ret
dec
loopne
scas
sbb
sbb
sbb
xchg
inc
push
jp
or
dec
add
jb
or
mov
push
jae
inc
cmp
sub
cmc
lret
pop
cmpsl
mov
mov
shlb
hlt
repnz
pushf
int
dec
dec
ss
mov
pop
test
lahf
xchg
daa
pop
sub
sti
xor
imul
dec
cmpsl
push
and
xchg
mov
out
aam
popa
adc
jo
repz
bnd
jecxz
ret
pop
aam
iret
rol
sbb
inc
xchg
test
pop
sbb
popf
dec
cld
jl
cmp
out
imul
sahf
rcrb
sbb
sahf
sbb
pop
mov
jp
mov
xor
xchg
imul
adc
subl
call
inc
jno
insb
sub
dec
adc
and
mov
xorb
cmp
sub
rol
add
popf
sub
pushf
pop
fxam
rolb
push
aam
aam
lret
push
leave
mov
jg
into
push
sbb
jl
orl
mov
mov
push
push
pushf
xchg
mov
jmp
cli
dec
pop
cmc
movsl
or
push
push
test
pop
sub
stos
jne
js
adc
mov
cli
jo
add
xor
fdivrs
cli
mov
jnp
lock
daa
xchg
inc
cmp
lahf
testl
jb
scas
lods
cltd
push
fsubs
lret
mov
mov
aas
lds
test
call
es
jle
cltd
inc
fbstp
int3
divl
f2xm1
aaa
cli
mov
jg
fsubr
pop
inc
cmp
subb
bound
pusha
xlat
in
jle
sub
push
into
cmpsb
pop
jnp
or
shr
outsl
int3
pop
aad
pop
cltd
pop
sbbb
mov
or
in
jnp
rcrl
fcompl
fisubl
jecxz
mov
loope
mov
mov
pushf
sbb
scas
jg
hlt
jmp
inc
loope
ds
fistpl
or
jne
mov
aad
lds
into
icebp
popa
inc
dec
cli
adc
inc
out
mov
push
lods
inc
cmp
mov
popa
movups
pop
sbb
mov
jne
pop
and
sub
adc
ret
pop
jecxz
mov
pusha
jge
push
mov
lods
jle
sahf
or
mov
incl
inc
loop
fwait
mov
outsl
xchg
fsubp
mov
push
imul
lock
mov
testl
xlat
lret
testb
mov
in
cmp
lret
scas
data16
cld
lret
push
inc
dec
inc
and
insl
adc
icebp
faddl
add
sub
int
mov
aad
testb
out
cltd
cmp
lds
inc
cld
mov
xor
fldcw
fwait
dec
jp
jns
push
inc
sub
inc
add
push
adc
je
jp
cltd
fs
mov
xor
pop
add
lret
dec
push
sbb
mov
jno
mov
xchg
dec
movsb
clc
push
xor
push
jne
nop
lret
ret
jb
out
push
sahf
pop
jae
cltd
das
pop
adc
mov
jbe
lea
pop
scas
inc
int
icebp
sub
gs
xor
pop
daa
or
add
cmp
fcomps
mov
popa
dec
cmp
bound
leave
aam
adc
addr16
push
outsl
jae
and
xor
pop
xor
inc
rorl
xchg
add
push
sub
jmp
lahf
in
lds
mov
je
and
cltd
lea
stc
inc
sahf
xchg
and
inc
sbb
pop
push
aad
es
movsl
ret
lods
out
in
mov
add
sbb
popf
xlat
add
sub
in
or
stos
nop
pop
add
fsubs
dec
mov
xchg
xchg
pop
push
push
pop
sbb
aam
sahf
mov
mov
test
mov
fwait
aam
js
push
pop
xchg
or
jmp
dec
sub
roll
lock
sbbb
mov
or
aas
mov
cmp
mov
xor
adc
mov
out
sub
pop
mov
outsl
pop
add
mov
fidivrs
dec
cmp
push
xchg
aam
push
mov
and
clc
int
call
add
or
inc
cmpb
jp
fidivl
das
xchg
sub
adc
fnstenv
inc
ret
jns
and
mov
xchg
mov
sub
fisttps
lcall
xchg
xor
xchg
jecxz
xchg
add
or
add
ja
add
stos
int3
xor
cmp
xchg
xor
test
mov
es
cmc
jo
mov
mov
subl
test
aam
test
mov
jg
xchg
lods
ja
pop
jmp
mov
fcomps
movsb
xlat
mov
les
popa
sbb
jg
cmc
xchg
addr16
sub
add
insl
cmpsl
xchg
mov
repnz
or
add
lods
pop
aad
push
pop
cltd
insl
ljmp
mov
inc
test
arpl
xor
out
lcall
jmp
or
xor
inc
cmc
fidivrs
in
push
dec
push
sbb
fcompl
es
push
dec
pop
test
cwtl
stc
push
add
stos
jne
push
jbe
inc
les
dec
mov
aas
dec
addb
call
sbb
pop
jp
mov
imul
cmp
or
clc
scas
and
and
int
fwait
adc
or
rcll
cwtl
cwtl
push
mov
scas
fldcw
push
sbb
pop
sub
sarl
cld
jnp
lahf
jmp
pop
dec
xchg
dec
add
mov
pusha
into
hlt
xchg
mov
jecxz
jns
call
adc
pop
arpl
pop
or
stos
jno
pusha
lds
sahf
lea
push
add
cmc
sbb
mov
sub
lock
cltd
jo
fmull
lcall
ss
in
lcall
mov
jle
and
rcl
cmpsb
adcl
mov
jp
fiaddl
repz
stc
mov
int
push
pop
xor
inc
aam
xchg
shrb
pop
in
or
mov
add
jne
jl
cmp
adc
test
pop
fmuls
into
popa
dec
decb
dec
mov
inc
sbb
ds
push
mov
addr16
and
dec
mov
push
jnp
scas
pop
cmp
or
xor
sub
and
sbb
faddl
nop
mov
add
stos
ficompl
lcall
lock
jo
shll
xor
lcall
pop
mov
ljmp
shrl
xor
push
sahf
pop
out
enter
pop
popf
add
mov
cmc
xchg
popf
push
push
add
movsb
mov
cmp
inc
shrb
mov
jmp
shll
cmp
sbb
hlt
call
stos
add
xchg
jmp
aam
push
push
fimuls
popa
xchg
loope
std
push
test
mov
dec
push
or
gs
or
aaa
rcrb
sbb
clc
mov
push
add
pop
es
testl
xlat
sti
dec
adc
stc
inc
ret
ror
pop
into
or
dec
outsb
data16
test
bound
cli
adc
call
xchg
lret
addb
rolb
add
jp
dec
cmpps
call
xchg
leave
inc
dec
movsl
adc
mov
lahf
cmc
enter
sub
adc
cmpsl
fisubrs
xlat
sub
test
pop
or
arpl
push
inc
mov
or
xchg
lods
ficoml
sub
add
sbbb
dec
mov
jecxz
mull
in
push
test
pop
dec
out
shrb
sbb
mov
jmp
lahf
jp
xchg
rol
cld
fmul
mov
cmp
into
dec
add
pop
cli
mov
mov
dec
or
mov
leave
lods
jno
push
cmp
push
scas
add
mov
negb
pushf
inc
inc
push
dec
and
dec
fwait
lcall
xor
push
jns
jo
sbb
mov
test
mov
std
aas
push
ret
dec
mov
sbb
mov
int
flds
mov
xor
les
pop
mov
pop
mov
in
test
push
daa
fwait
dec
push
arpl
dec
push
andps
out
sub
lret
popf
and
test
pop
mov
or
mov
jns
cmp
xor
lret
cmp
adc
cmpsb
cld
mov
lahf
popw
movsb
shlb
or
or
inc
cmp
inc
adc
sbbl
dec
arpl
out
outsl
jle
mov
iret
xchg
adc
xor
stos
fucomip
xor
jge
aam
lret
sub
pop
mov
stos
cli
ljmp
mov
leave
and
fisubrs
dec
mov
shrl
lret
sbb
or
fcmovnb
iret
mov
ret
and
inc
sbb
add
pop
cltd
in
subb
xchg
loop
icebp
js
push
leave
rcrb
rorl
leave
add
aas
stos
push
nop
repnz
jns
repnz
sti
cmova
int3
sub
add
popa
dec
xchg
pop
adc
cmpsl
mov
les
out
mov
pop
pop
jp
push
fimuls
and
dec
scas
popa
mov
or
stos
es
xorb
sbb
cmp
into
movsl
cmp
sbb
mov
jp
or
aam
sbb
dec
adc
notl
in
stc
push
cmc
push
jbe
aad
rcl
movsl
into
mov
mov
xor
popf
xor
push
pusha
sbb
jge
jo
xchg
pop
push
cmp
iret
test
repnz
lock
dec
mov
xchg
pop
imul
stos
mov
jne
rolb
xchg
add
mov
pop
fistps
or
insl
sti
fdiv
rcrb
mov
add
xchg
out
int3
xchg
das
jne
jecxz
mov
and
lcall
push
out
arpl
std
adc
or
pop
enter
xlat
call
std
icebp
push
aad
shrl
or
dec
mov
dec
sbb
jo
lret
adc
loopne
sbb
fs
pop
ds
add
mov
xchg
dec
jg
xchg
mov
xor
in
nopl
dec
punpckhdq
cli
add
jle
inc
lahf
ja
inc
or
adcl
test
or
mov
jmp
and
or
pushf
fisubl
icebp
outsl
es
popa
bound
adc
lock
and
popf
shlb
sub
dec
xchg
movb
cmp
mov
pop
imul
sbb
imul
push
js,pn
mov
pop
dec
loopne
frstor
or
lcall
dec
xor
jl
mov
adc
ffreep
mov
and
cmpsl
in
pop
test
mov
in
addr16
outsl
jne
or
push
fiadds
lea
inc
jmp
xchg
mov
lea
movsb
imul
fs
hlt
out
in
cmp
jp
cmpl
inc
in
fnsave
fwait
test
sbb
mov
lar
xlat
outsb
leave
mov
clc
jae
push
jg
sbb
or
push
mov
jp
sbb
hlt
into
enter
xor
sbb
sub
jb
shrb
jl
pusha
push
fs
dec
sti
cmpsl
daa
pop
xchg
or
cmp
subl
cmp
mov
je
cmp
mov
cmp
mov
add
adc
cltd
mov
xor
loopne
mov
fsubrs
jne
push
fwait
nop
scas
dec
repnz
or
dec
fs
insb
aas
repnz
aad
adc
jne
mov
bound
pop
addr16
clc
mov
inc
or
mov
sti
adc
pop
icebp
lock
mov
add
insb
dec
fcompl
iret
pcmpeqb
imul
shl
dec
push
push
xchg
dec
movsl
fdivrs
jb
popa
pusha
ljmp
mov
lods
test
loop
in
fwait
sbb
ds
jg
or
aaa
insl
xorb
iret
adc
sahf
gs
pop
popa
push
jo
aas
or
test
rcr
mov
sarb
cmp
in
jnp
insl
sub
mov
xchg
inc
stos
std
xor
ljmp
loope
pop
xor
push
imul
push
mov
push
mov
sub
aas
gs
orl
ss
mov
sqrtps
adc
jle
mov
jmp
rcll
cltd
jle
out
mov
shll
add
and
adc
push
jle
sbb
out
movsb
pushf
stc
push
lods
xor
pop
push
leave
call
mov
adc
lods
sbb
movsl
sub
adc
imul
adc
in
mov
stc
mov
pop
cmp
dec
clc
out
pop
mov
adc
lock
das
mov
or
and
aas
mov
mov
push
call
push
jecxz
int3
add
mov
adc
fidivrs
mov
jbe
inc
gs
nop
pop
inc
push
mov
mov
pop
push
testb
mov
inc
dec
jne
ret
out
les
pop
cmpsb
mov
jno
fwait
adc
sub
dec
sub
inc
pop
daa
std
mov
aad
rcrl
ss
loope
jnp
jns
sub
sarl
call
out
sub
leave
inc
rcl
adc
aad
mov
pop
and
inc
or
insl
dec
jo
cli
stos
fisubs
and
in
inc
shll
loope
sub
pushf
repz
and
and
and
mov
adc
es
dec
das
inc
cs
xlat
dec
and
mov
inc
sub
cmpsl
mov
inc
dec
or
sub
xlat
movsb
sbb
xor
inc
xlat
jae
test
lods
lret
int
inc
lcall
outsl
addr16
dec
mov
pop
inc
in
shll
ljmp
cmc
adc
je
and
adc
mov
pop
cmp
bound
je
or
or
outsb
ss
incl
aaa
sub
cmp
jl
lret
mov
cld
call
ss
jno
sub
or
clc
pop
test
xlat
lock
inc
adc
and
and
pop
outsl
pop
pop
and
mov
xor
blcs
sub
stos
in
adc
roll
sbb
imul
out
xchg
js
xchg
aas
pop
into
push
shll
cltd
jp
divl
dec
test
cmp
or
inc
data16
sbb
rcll
js
inc
sub
mov
jp
pop
cmpsb
iret
jo
clc
aad
shl
cmc
xchg
mov
mov
mov
movsb
and
push
lahf
mov
subl
jle
jle
test
cmp
jns
xchg
imul
xchg
mov
add
cmp
pop
dec
mov
std
jne
sbb
mov
mov
sbb
lret
and
cmpsb
mov
arpl
mov
cltd
cmp
aas
sti
push
sbb
sbb
lret
sbb
shrl
outsl
out
or
int3
jo
inc
rclb
inc
iret
push
cs
inc
repz
sbb
pop
sub
movups
adc
cmpsb
out
pusha
sbb
or
aam
push
xlat
repnz
repz
insb
push
sti
adc
ret
add
cmovne
inc
xor
push
fisubs
bound
stos
mov
dec
sub
mov
gs
icebp
push
mov
xchg
cmp
pusha
ljmp
test
jns
jnp
pop
pop
out
test
sbbb
push
test
adc
mov
jae
int
sbb
call
mov
ds
bsf
test
cwtl
nop
adc
rcl
pop
ret
mov
adc
enter
xchg
movsl
addl
enter
inc
pop
xlat
sub
or
and
es
outsb
xchg
inc
mov
cmp
push
loopne
psubb
adc
add
adc
and
inc
jns
jp
fs
xchg
or
inc
orb
mov
sbbb
jmp
das
fs
dec
mov
mov
jno
mov
xor
dec
push
or
pop
cmp
push
xchg
ja
faddl
mov
movsl
cmp
clc
pop
add
testl
push
aas
mov
push
stc
test
pop
test
and
wbinvd
xchg
repz
aaa
mov
int
push
push
insb
dec
les
push
imul
in
out
ret
jl
or
pusha
xchg
sub
dec
sbb
push
lods
or
and
xchg
xor
ret
push
dec
xchg
cmp
xchg
mov
xchg
sti
in
loope
pop
sub
xchg
out
inc
pop
push
cwtl
ljmp
call
mov
sti
pop
jl
or
add
mov
scas
in
mov
fs
pop
sub
popf
mov
pop
lods
or
mov
xchg
mov
fldl
cmp
roll
insl
movsl
pop
xchg
clc
inc
adc
das
jb
pop
mov
mov
test
out
inc
mov
sub
cmp
sbb
shrb
loop
leave
flds
xchg
sub
imul
jno
xor
enter
add
mov
xchg
and
jg
sub
ret
xchg
pop
addr16
lea
push
or
or
daa
pop
js
out
popa
or
jae
loopne
orb
stc
xor
aas
shlb
addb
std
jno
and
cmpsb
mov
jecxz
bound
out
fmull
jnp
xchg
adcb
push
mov
mov
stos
scas
imull
shrl
fidivs
out
lcall
imul
sbb
mov
xor
ret
dec
mov
stos
rclb
mov
imul
mov
sub
mov
xchg
xchg
das
pop
test
cltd
ret
fimull
jp
push
out
imul
arpl
imul
mov
push
fimull
mov
lahf
or
push
ss
mov
or
arpl
lret
inc
test
add
mov
and
cmp
out
rcl
or
into
retw
mov
daa
mov
loopne
mov
adc
les
mov
daa
cmp
lret
push
cmp
cmpsb
call
in
lcall
inc
xchg
enter
int
mov
xlat
pop
or
push
int
sub
pop
mov
popa
pop
aam
nop
or
sbb
jo
cmp
jp
mov
out
xchg
jle
sbb
out
test
rcll
xlat
dec
or
pushf
adc
cmpsb
push
push
sti
jbe
and
or
mov
cmp
mov
cwtl
fs
cwtl
or
sbb
insb
icebp
stc
test
ret
cmp
das
sub
dec
rcll
jg
pushf
hlt
fistpll
push
and
add
add
mov
mov
xchg
jecxz
jl
movl
jge
push
cmc
jp
inc
cltd
leave
mov
frstor
sbb
mov
lret
fistpll
shrl
push
jecxz
mov
sub
dec
jmp
test
mov
jg
popa
out
push
imul
xor
fists
xchg
cmp
call
rol
andl
rclb
mov
nop
jno
mov
jb
stos
stc
ret
sarl
mov
or
mov
movb
and
cwtl
sarb
aaa
movsb
jle
lock
out
mov
push
xchg
jg
faddl
fsubs
or
push
xchg
das
sbb
ficoml
jo
mov
push
xor
fadd
aam
aaa
addr16
mov
out
mov
das
pop
clc
ss
xchg
dec
rcl
scas
pusha
push
stc
rcrb
out
scas
insl
es
rcll
fsub
mov
sbb
xor
repnz
sti
fiadds
push
mov
ret
rolb
les
push
idivb
inc
and
xchg
fsubrp
dec
cld
xchg
pop
fidivrs
in
sahf
out
sbb
aaa
icebp
fldl
cmpsb
pop
mov
push
test
stc
bnd
mov
inc
mov
pop
rcl
push
xchg
push
adc
and
sub
fcmovnb
pop
shlb
mov
outsl
std
ret
or
out
add
movsl
mov
daa
sub
es
push
test
call
hlt
sbb
fdivs
jns
out
and
popf
sbb
insb
insb
fwait
push
cltd
fiaddl
daa
imul
mov
sti
leave
sbb
push
inc
ss
enter
pop
scas
mov
sahf
mov
outsl
jne
int3
sub
inc
clc
icebp
movsl
jmp
or
in
fwait
dec
adc
ljmp
mov
addl
push
fsubr
rcll
arpl
scas
inc
push
imul
jecxz
xchg
enter
out
imul
sar
adc
cmpl
sub
insb
add
jp
sub
pusha
outsl
inc
notl
mov
pop
ret
negl
stos
jle
jne
ss
cmpsb
int
jmp
mov
out
push
adc
xchg
mov
and
sub
jecxz
mov
dec
cwtl
xchg
xor
sbb
shll
add
fstpt
rolb
sbb
daa
sbbb
cmp
lock
sbb
jno
fstpt
sub
jne
xlat
test
repz
ss
and
shll
pusha
push
sahf
pop
in
xchg
jo
xor
xchg
push
test
popa
loopne
xchg
lock
inc
sub
out
test
inc
ret
lcall
jmp
mov
mov
lods
jb
fcoms
ret
sub
lcall
or
ds
inc
lods
push
imul
push
ja
xchg
ficomps
test
xchg
adcl
int3
jl
mov
sub
std
push
mov
lcall
nop
cmp
and
jp
sbb
es
pusha
jle
sbb
imul
adc
in
jg
mov
das
mov
cmc
aam
call
hlt
xchg
jecxz
or
and
mov
add
dec
inc
mov
lods
lods
add
clc
fdivrp
scas
sub
mov
pop
add
push
mov
ja
or
mov
mov
or
mov
in
dec
dec
and
in
repnz
pop
jmp
fmul
mov
sbb
mov
jle
cmpsb
scas
push
outsb
subl
sub
or
cmpsl
sahf
andnps
inc
pop
clc
xor
sti
xchg
jle
loope
movsb
lock
mov
outsb
arpl
repz
pop
ficomps
jmp
popf
and
xor
cmpxchg
faddl
fadds
testb
adc
inc
in
js
jecxz
dec
scas
push
mov
xchg
adc
jae
lahf
mov
ja
ret
sub
in
int
add
gs
popl
mov
jl
mov
pusha
mov
inc
into
and
xor
or
cmpsb
cwtl
lods
out
cmp
and
pushf
sbb
outsl
shl
sahf
loop
mov
jecxz
lea
jmp
aad
push
push
push
stos
sub
fisubrs
dec
movsb
fistl
pop
xchg
repnz
sub
ja
stos
out
cmpb
or
fstpt
clc
dec
mov
jne
ret
test
adc
scas
sub
call
out
ficoms
add
push
scas
push
xor
clc
data16
fbstp
push
stos
repnz
xchg
push
sub
pop
mov
scas
fildl
scas
leave
loopne
adc
outsb
dec
cli
adc
mov
fwait
sbb
jl
aas
push
jae
inc
or
fnstenv
aas
lcall
lret
test
xchg
sub
add
les
dec
sbb
loop
js
mov
cmp
pop
aam
push
loope
sub
adc
gs
lret
add
cwtl
pop
les
lea
fs
cld
adc
clc
imull
int
rcl
push
mov
scas
mov
incl
add
stos
or
push
or
sbb
sbbl
add
sbb
jae
addr16
sbb
inc
inc
inc
add
inc
inc
inc
inc
arpl
inc
inc
clc
inc
ret
arpl
mov
push
push
and
loop
aaa
inc
mov
or
mov
and
mov
rcll
dec
rorb
pop
ret
leave
jmp
push
jmp
mov
into
cmpsl
dec
and
mov
int3
icebp
cld
jge
push
movsb
push
nop
in
jbe
outsb
adc
xchg
loopne
or
stos
push
je
jae
mov
loop
cmc
fsubrl
insb
aas
sbbb
insl
xchg
sub
pop
push
mov
mov
out
xchg
and
jns
call
cmc
add
mov
push
loop
repz
mov
dec
stc
pop
xchg
mov
add
popf
push
daa
jb
push
adc
and
cmpsb
sbbl
flds
xor
inc
jmp
or
adc
sub
mov
movsb
xchg
xchg
out
xchg
adc
stos
xchg
rorl
sti
jb
lods
or
or
xor
mulb
and
loope
and
jge
xchg
imul
test
mov
fmulp
xor
cmp
stc
inc
aas
leave
into
add
stc
roll
dec
dec
aad
leave
adc
ljmp
std
mov
mov
iret
pop
jge
fcomp
fs
aam
jns
pushf
aad
pop
mov
sarl
adcl
cmp
iret
mov
insb
mov
mov
iret
test
pop
loopne
imul
mov
cwtl
sbb
or
lcall
jecxz
roll
fnsave
pusha
mov
jno
scas
push
cli
sub
jb
pop
pop
mov
xchg
jl
cwtl
lock
sub
mov
pop
dec
not
daa
daa
push
cmp
adc
scas
idivb
and
push
rcl
fadd
lret
ret
cltd
fbstp
inc
push
shlb
dec
cmp
xor
add
pop
push
faddp
cmpsb
dec
fstpl
pop
rorl
cmc
bound
or
push
fs
pop
xchg
addr16
addb
lret
and
mov
hlt
movsb
cs
ja
out
sub
mov
sarb
sahf
pusha
sub
mov
lret
js
es
pop
lahf
shlb
and
in
adc
sahf
inc
mov
lods
cmp
sub
pop
xor
adc
xor
pop
adc
insb
sarb
inc
add
pusha
jno
mov
ret
cld
stos
lcall
dec
test
popa
mov
hlt
add
and
mov
bound
test
adc
xchg
jb
lds
mov
jle
aad
add
pop
push
pop
fidivrl
and
pop
daa
repnz
xor
pop
jns
mov
outsl
and
jmp
in
jle
out
lock
push
sahf
int3
pusha
pop
mov
pop
add
push
popf
cmp
xchg
gs
das
leave
pushf
cmp
mov
dec
jmp
cmp
pop
imul
xchg
out
push
cmp
out
jne
fmuls
or
lcall
mov
xchg
shll
cmp
and
cld
add
inc
add
daa
cmp
sbb
xchg
mov
mov
xchg
cwtl
or
loope
xchg
pusha
xchg
shr
cmc
aad
pop
adc
or
hlt
imul
xchg
cmp
mov
call
xchg
lahf
aaa
frstor
jp
or
xchg
cs
inc
jl
cmp
clc
push
sub
movsl
aad
js
cmc
cmp
test
int
rolb
xchg
add
inc
dec
cmp
xor
dec
pop
sub
add
out
mov
test
xchg
loop
je
std
jae
dec
dec
es
and
mov
push
cld
mov
mov
add
nop
mov
insl
dec
lock
add
test
xor
sub
jnp
shlb
pop
das
xchg
xlat
arpl
cmp
ror
and
hlt
xor
dec
mov
pop
push
xor
pop
mov
int
jo
es
sti
mov
in
cmpb
fmul
or
xchg
inc
xor
mov
sub
push
and
jmp
or
loop
and
mov
mov
faddl
add
les
mov
js
and
sbb
clc
out
sub
test
pusha
in
subl
sbb
or
mov
popa
lret
jecxz
mov
mov
xchg
sub
xor
lods
sub
clc
xchg
sub
dec
cmp
push
lahf
out
gs
pop
inc
int
and
scas
push
lcallw
scas
sub
mov
mov
mov
dec
sbb
add
pop
in
mov
push
in
mov
mov
sub
and
mov
mov
lds
and
ffree
mov
dec
aaa
mov
and
std
mov
xchg
scas
fnstsw
and
inc
repnz
cmpsl
sbb
ljmp
iret
jo
push
aam
push
loope
pusha
scas
iret
jb
xor
jmp
add
xchg
sub
or
inc
pop
xor
clc
add
fsubrp
daa
cmpsb
dec
xchg
mov
mov
into
leave
shrl
and
lds
idivl
repz
aaa
pop
pop
xchg
inc
sub
mov
aaa
push
xchg
fdiv
in
icebp
sub
sub
ljmp
aad
push
cmp
add
arpl
les
roll
pop
mov
out
fwait
jg
lods
lock
pop
push
aaa
push
push
pop
fistl
std
loope
int3
ss
insb
out
add
xchg
push
and
jno
add
push
jnp
lcall
add
add
andb
mov
jmp
dec
idiv
sub
enter
adc
int
clc
dec
or
sahf
xchg
fsubl
dec
addl
dec
fistps
dec
in
lret
hlt
cli
es
imul
add
xor
fcmovb
pop
inc
ja
mov
fldl
xor
xor
adc
push
jbe
sbbl
repz
das
mov
stc
outsb
in
icebp
xchg
mov
jle
stos
pusha
xor
in
xchg
mov
add
mov
repz
cmp
xchg
mov
int
stos
outsb
addr16
movsl
daa
push
cmp
jb
cld
pop
cmpsb
fstl
sbb
imul
hlt
loopne
test
push
cwtl
adc
sahf
rcr
jnp
out
sbbl
xlat
aas
dec
push
aas
dec
dec
inc
hlt
je
add
pop
outsl
inc
dec
xchg
stos
jae
cmc
push
pop
popa
ret
adc
dec
xor
in
daa
sub
add
xor
iret
test
clc
mov
mov
dec
pop
stos
imul
push
push
das
pusha
inc
inc
movsb
cmpsl
pop
inc
les
or
or
ljmp
test
rcr
ja
sub
add
adc
je
stos
scas
mov
lock
jl
sub
out
jnp
or
imul
pop
in
mov
out
leave
and
push
repnz
fstp
psrlq
imulb
out
mov
rcll
jl
das
mov
pusha
push
movsl
add
add
cmpsl
insb
mov
xor
out
stos
int3
mov
lds
or
dec
cwtl
cwtl
loope
sub
xlat
mov
jmp
inc
push
sbb
xchg
shll
cmp
push
or
push
jmp
cli
rol
push
push
pop
lret
pop
ret
sbb
push
cmp
mov
mov
mov
push
icebp
loopne
mov
jg
ret
jnp
add
cwtl
push
pop
xchg
jmp
sti
fwait
aas
sbb
pop
mov
ljmp
mov
paddd
pop
dec
test
aad
push
ljmp
je
push
popf
ret
push
push
ret
cmpsl
push
mov
lcall
jnp
mov
cmp
sbb
jae
mov
cmp
jg
and
mov
out
jae
push
adc
test
loopne
add
dec
push
out
ss
xchg
out
and
in
jno
imul
add
fdivrs
cwtl
fnsave
mov
push
push
out
sub
aaa
cmp
mov
nop
pusha
daa
in
lret
push
mov
adc
sbb
cmp
cmp
fcomp
cmp
add
hlt
mov
adc
insl
sahf
sbb
xor
pushf
sub
cmpsb
and
jg
data16
in
jge
enter
sbb
aam
loopne
xchg
aas
outsb
aaa
add
negl
shrl
insb
into
loope
push
sub
xor
jns
xor
pop
sbb
cmp
xchg
push
jbe
jmp
mov
cs
add
jl
dec
push
dec
adc
mov
iret
jae
pop
push
popa
jecxz
int3
fidivrl
mov
add
inc
add
mov
shr
jecxz
loopne
insl
pushf
mov
fwait
imul
cmpsb
adc
push
ficoml
cmp
je
mov
inc
xlat
scas
xor
adc
das
pop
mov
rolb
inc
add
push
clc
test
cld
jae
xchg
add
arpl
test
mov
dec
cmp
frstor
cli
ja
mov
pop
mov
sahf
jl
loopne
xchg
sahf
add
insl
sub
je
jns
in
inc
sbbb
out
cmpb
bound
inc
test
pushf
je
xchg
sub
imul
cmp
mov
xchg
pop
sub
aas
xchg
inc
jns
and
pop
mov
in
icebp
repnz
test
mov
or
or
js
loope
insl
in
mov
roll
out
push
lea
lret
mov
stos
out
jl
dec
out
in
jb
add
inc
xor
mov
inc
fidivs
and
or
in
xor
and
inc
das
xor
lea
xchg
clc
cld
subl
xor
xor
xchg
je
js
insb
sub
sahf
jbe
sbb
bound
jns
mov
add
lock
push
push
movsb
mov
dec
mov
out
js
mov
sti
xor
pop
sub
pop
lahf
sarl
test
ret
fsubs
js
ds
jbe
loop
add
test
es
iret
subl
mov
jp
jns
xchg
jg
sbb
rcrb
sub
mov
cld
popa
movsl
mov
jns
or
mov
cmc
jp
lret
xchg
or
inc
scas
addb
cmp
ret
rcll
outsb
popa
or
dec
js
call
mov
pop
and
in
xor
subl
stos
cmp
add
into
pop
repz
xor
test
sub
sbb
inc
pop
adcb
sti
mov
sbb
push
js
push
out
adc
push
mov
mov
sub
push
push
outsl
sub
jb
pop
shlb
sub
adc
mov
stc
inc
je
mov
cwtl
enter
add
inc
insb
dec
inc
ficomps
xor
inc
pop
loop
daa
popl
sbb
inc
dec
push
xor
arpl
jmp
mov
cli
or
scas
mov
divps
jnp
mov
mov
mov
lea
mov
jp
sbb
roll
xchg
bound
decl
adc
lock
adc
loope
mov
add
cmp
test
pop
ss
sub
and
adc
push
fs
inc
arpl
inc
fnsave
imul
dec
jle
repz
loopne
add
xchg
mov
cmpsb
push
cmp
out
mov
insb
cwtl
out
in
and
cmpsb
ja
negb
and
dec
inc
inc
xor
movb
mov
aam
arpl
insb
pop
xchg
fnstsw
push
mov
adc
add
xchg
and
out
jle
ja
lahf
sahf
fdivp
mov
or
inc
xor
fildl
insb
hlt
aas
call
aaa
inc
sub
shlb
fnstenv
fidivrs
insl
test
out
iret
pop
jb
out
or
cmpsb
out
dec
pushl
dec
rcrl
aad
push
and
aam
mov
add
int
notb
xchg
inc
xchg
shrl
arpl
test
les
jae
or
test
out
mov
pushf
aam
inc
xor
mov
mov
mov
lahf
dec
sub
mov
ja
cmpl
mov
cwtl
inc
es
aam
test
cmp
data16
inc
xchg
xlat
xor
cmpsb
aaa
es
call
or
push
push
mov
add
mov
mov
push
jge
pop
loopne
pop
ss
and
mov
xor
inc
pop
fnstsw
mov
loopne
jmp
push
mov
lock
push
jmp
sbb
push
mov
jo
inc
into
pop
add
int
sub
jmp
lds
sbb
out
ja
iret
sub
mov
aad
outsl
enter
and
or
je
jb
stc
mov
aaa
xchg
mov
cli
addb
cmpsl
out
sbb
sbb
je
push
lods
push
daa
xchg
push
jnp
sub
or
je
xor
bound
inc
xor
mov
rorb
adc
lock
xchg
std
addr16
xchg
push
and
inc
call
lds
push
and
fnstsw
mov
scas
cltd
pop
aad
push
xchg
mov
jl
pop
add
les
dec
push
lods
outsb
into
xor
loope
or
stos
xchg
aad
push
pop
jnp
xchg
rclb
loop
sahf
clc
mov
xchg
mov
outsb
jbe
fs
ss
or
or
sub
cmc
xchg
dec
test
cmp
mov
push
xchg
mov
dec
xchg
inc
stos
pop
cmp
jmp
jns
adc
pop
call
dec
mov
cmp
add
mov
cmpsl
aam
lock
add
lcall
fucomp
push
xlat
cltd
cmpb
push
pop
cmpsl
repnz
aad
outsl
and
ud1
rolb
pop
mov
js
sub
test
imul
mov
out
out
mov
fldl2t
cld
out
mov
dec
mov
sub
or
and
lods
push
or
mov
add
pop
push
mov
stos
pop
sbb
xchg
mov
jp
fldt
inc
jno
sbb
lcall
inc
fiaddl
xor
xbegin
testl
add
cltd
cmp
cmp
fldl
fmull
mov
jbe
out
adc
fcoms
nop
lcall
je
or
lods
loop
dec
add
aaa
add
int3
inc
xor
cmpsb
roll
lds
enter
xchg
sub
push
add
in
loopne
xchg
mov
push
jecxz
je
jge
lret
popa
js
jmp
inc
mov
xchg
addr16
jae
popf
or
dec
loop
imul
xchg
dec
xchg
mov
mov
sub
mov
pushf
dec
cld
lea
scas
pop
add
jl
sbb
jbe
lock
not
das
ds
jb
sub
fildl
rcll
xor
push
sbb
mov
jmp
imulb
clc
and
lock
sbb
mov
adc
hlt
or
adcl
adc
mov
loop
xchg
mov
sub
xor
std
xchg
xchg
pop
ss
addr16
out
push
mov
push
pop
inc
jnp
rol
add
arpl
fdivs
loop
and
gs
mov
inc
mov
add
inc
mov
push
and
movsb
imul
push
lret
and
insl
insl
dec
cmp
enter
or
lock
je
jb
rcl
mov
js
dec
cmp
inc
js
ja
pop
cltd
popf
int3
dec
insb
ja
sub
xor
mov
loope
out
ljmp
dec
ds
mov
jg
pop
inc
and
in
jmp
push
loope
mov
xchg
xadd
loop
mov
push
lcall
fwait
mov
data16
or
movsl
out
imul
inc
je
pop
arpl
imul
cmpb
mov
out
rcr
sbb
ljmp
jge
xor
xchg
lock
push
aam
add
inc
inc
scas
scas
mov
je
adc
shlb
fidivrs
pop
jne
adc
in
mov
sti
insl
xor
and
shl
mov
xchg
jle
arpl
imulb
mov
mov
mov
rorb
leave
call
stc
mov
and
push
inc
loopne
and
jecxz
pop
gs
out
int3
je
jb
adc
inc
xor
test
lret
jecxz
sub
mov
push
xor
jno
add
outsl
or
imul
or
mov
xchg
shll
push
loope
sub
add
hlt
jbe
mov
in
movsl
fsubrs
notl
sub
nop
fisubl
cmp
data16
mov
dec
cmp
dec
add
ds
lret
sarl
lret
pusha
mov
cwtl
xchg
into
push
or
sarb
mov
inc
mov
inc
loope
push
pop
fs
fisubrl
test
add
dec
cmp
inc
xlat
popf
out
lret
xor
add
add
je
mov
leave
addr16
fmull
mov
addl
loop
int
dec
cmp
push
clc
ret
aad
push
mov
sub
lds
and
push
adc
jo
les
mov
push
lret
xor
fstpt
and
cmpsb
mov
cmp
ret
incl
xlat
fnstenv
xchg
lret
xchg
cmpsl
sbb
movsb
in
xchg
cwtl
adc
sbb
xor
push
add
sbb
jns
pop
mov
or
cmpsl
xchg
sub
popa
sub
mov
outsl
std
sub
pop
decb
adc
clc
sarl
loop
mov
sub
insb
sbb
movsb
push
je
push
mov
cli
popf
cmp
pop
cmp
jge
mov
dec
mov
jge
jno
and
cmpsb
mov
dec
jge
add
push
lret
addr16
jno
in
lds
push
add
sbb
pusha
mov
pop
mov
shr
mov
sbb
leave
inc
js
rcll
lcall
or
push
shll
call
cltd
jns
xor
je
push
mov
mov
mov
and
fsts
mov
mov
and
or
adc
mov
adcb
fistps
mov
pop
sub
and
fsubs
push
mov
paddsb
and
lret
ljmp
lods
inc
mov
adc
mov
leave
insl
imul
jmp
dec
cmpsl
sahf
rolb
dec
fnsave
out
cmp
daa
xchg
xor
push
popf
pusha
dec
adcb
pop
mov
test
repnz
xor
daa
or
inc
incb
pop
or
jmp
cmpsb
sub
aad
dec
sbb
jne
xchg
mov
pop
cmp
add
and
mov
lret
ja
mov
aas
mov
clc
test
out
mov
sub
mov
ljmp
or
pop
fimuls
fcomi
xchg
mov
cmpb
ffreep
cli
cmp
ret
cmp
repnz
out
mov
jnp,pt
push
jg
jbe
jg
outsb
jae
rclb
sbb
and
push
mov
adc
dec
sbb
adc
xchg
pop
push
jnp
and
cmp
cmp
or
sbb
sbb
cmc
nop
fsubrl
mov
mov
jae
xlat
cwtl
movsb
repz
lret
add
inc
add
and
sahf
inc
mov
popa
mov
xchg
aaa
jle
pop
jl,pt
divb
clc
and
pop
mov
out
out
push
and
mov
xor
mov
fistps
out
cmc
imul
inc
sub
pop
roll
insl
jmp
push
adc
mov
xor
and
sub
push
mov
xor
and
or
jbe
scas
rcll
push
mov
mov
repnz
fsub
inc
fstpl
das
push
rorw
ret
test
sub
loopne
sbb
outsl
dec
cwtl
mov
cmpsl
xor
lds
and
cwtl
sbbl
icebp
cmp
and
sti
mov
cmc
xor
sbb
ds
add
dec
rcrl
push
mov
sub
cmp
xor
int
cmp
shll
mov
sub
repnz
mov
mov
ss
lods
dec
inc
sub
sbb
scas
lods
sub
dec
leave
mov
xchg
out
clc
and
js
faddl
add
movsb
fstpt
imul
jg
mov
stos
mov
pusha
adc
add
or
fildl
cld
hlt
bnd
imul
sbbb
sub
clc
jnp
sub
cmp
popf
jecxz
inc
dec
xor
icebp
imul
inc
lods
psrad
cmp
sub
pop
push
mov
adc
data16
gs
out
add
cli
pop
imull
jmp
sub
or
jge
dec
pop
repnz
lret
sub
push
cmp
cmc
jns
pop
and
pop
inc
mov
fimuls
inc
fiaddl
xor
or
sub
add
push
mov
adc
and
push
sbb
imulb
negl
sti
mov
adc
or
add
es
xor
push
cld
mov
clc
scas
jb
jno
dec
xchg
jb
pop
and
push
dec
mov
push
fwait
ja
aas
arpl
bound
stos
div
xor
mov
inc
lods
mov
loopne
mov
sbb
xor
hlt
test
mov
jecxz
dec
inc
push
leave
addr16
inc
jnp
sar
imul
push
jno
jmp
dec
call
mov
push
inc
imul
iret
rorl
or
and
stc
dec
pushl
fld
test
loop
and
adc
fsts
mov
adc
inc
push
out
jnp
fstl
push
jge
addl
je
sub
pop
and
loop
adc
dec
or
and
xor
loop
dec
and
loopne
push
and
pop
cmpsb
in
outsl
xor
shlb
mov
mov
mov
mov
sbb
movd
cltd
push
add
sarb
and
call
sbb
or
ret
mov
mov
or
or
je
mov
cmpsb
insl
mov
lret
mov
repnz
mov
in
cmc
leave
insb
jbe
push
cmp
jge
stos
sub
push
add
dec
clc
xchg
push
or
adc
pop
negl
adc
jae
jb
mov
push
outsb
cs
in
jecxz
pop
aam
imul
in
daa
nop
mov
clc
xor
loop
outsl
mulb
in
sti
fs
mov
adc
jne
push
rolb
dec
insl
aas
rcr
ret
adc
xor
inc
push
imul
out
notl
mov
jmp
std
lret
stc
clc
jecxz
jbe
add
test
xor
lds
aam
dec
adc
sub
add
lret
sahf
mov
comiss
cwtl
xchg
xchg
rclb
mov
repnz
arpl
js
in
mov
add
mov
xchg
leave
jecxz
inc
cltd
inc
inc
shlb
mov
subb
mov
stc
pop
addb
sub
cmp
jl
dec
in
cmpsb
decl
and
or
jne
mov
xor
jne
scas
mov
dec
xchg
jle
adc
xchg
scas
or
das
test
dec
outsl
push
push
pushf
ret
aam
stc
bound
repnz
mov
mov
or
xor
out
addl
mov
iret
std
aaa
add
loop
rcrl
push
les
jle
mov
das
mov
cmpl
in
dec
xor
push
fidivs
or
pop
push
fisubl
mov
xchg
loopne
jno
das
test
js
push
imul
test
push
mov
cmp
xorb
enter
xor
mov
push
or
jbe
es
loopne
lods
dec
cwtl
xchg
lods
insb
sbb
cmp
mov
test
dec
arpl
mov
loopne
sub
xchg
pop
mov
sub
jl
mov
cmpb
pop
f2xm1
ret
add
add
push
sub
jb
xchg
or
adc
jb
cld
dec
pusha
lock
out
inc
and
cs
mov
or
daa
push
sbb
push
sbb
mov
jmp
mov
jno
ret
mov
jo
setne
cmc
addr16
cmpsl
xchg
add
mov
fwait
int
push
cmp
ds
enter
dec
push
insb
fwait
xor
add
inc
arpl
push
fmuls
dec
xor
add
cmp
push
mov
mov
sub
mov
movsl
pushf
pop
roll
xchg
adc
add
leave
cmp
xchg
sbb
pop
push
push
arpl
rolb
int
andl
cmp
adc
pop
scas
sub
add
fimuls
call
cmpsl
enter
push
push
aad
pop
testb
gs
jo
fidivrs
cltd
das
jmp
push
inc
ja
dec
scas
faddl
popf
or
cltd
addl
adc
insl
adc
xlat
mov
test
pop
mov
sbb
push
add
mov
and
and
loope
addl
push
call
lcall
mov
push
imul
sub
jp
mov
ret
cmp
bound
nop
push
jge
and
sub
mov
dec
pop
mov
adc
dec
test
out
les
orl
inc
or
jb
in
pop
pop
fcoms
shrb
cmp
cli
cli
out
fisubs
xchg
gs
push
mov
addr16
sahf
pop
out
aad
call
jl
sub
cmp
ss
lahf
jbe
or
push
sti
pop
and
call
pop
inc
int3
xchg
pop
pop
es
js
ss
call
js
cmp
ret
push
outsb
aam
mov
sbb
or
sbb
enter
sub
lahf
xor
adc
mov
add
sbb
mov
cli
lahf
out
hlt
inc
scas
bound
pop
mov
popl
push
mov
xor
insb
pop
loopne
scas
dec
pop
gs
xchg
push
shll
lret
inc
add
push
add
jp
fmuls
jns
leave
mov
stos
gs
shr
sti
push
sbb
push
shrd
mov
insl
and
push
ljmp
sahf
lcall
fcmovnu
mov
ficomps
and
xchg
sbb
maskmovq
cmp
rclb
insl
int
mov
cwtl
in
xlat
outsl
mov
out
mov
push
adc
sub
mov
divb
xor
arpl
adc
movsl
or
lcall
std
cmp
push
add
dec
push
xchg
cmp
clc
xchg
pop
pop
pop
jb
or
push
dec
sub
lcall
jae
inc
add
aaa
or
bound
setg
mov
push
subps
adcl
add
flds
aaa
std
out
mov
xchg
mov
orb
sub
mov
outsl
dec
test
and
or
das
lcall
xchg
addl
enter
mov
sub
dec
in
or
jle
add
mov
cmp
push
test
insl
mov
in
paddq
inc
in
stos
lea
lds
push
sub
dec
in
pusha
std
mov
outsl
out
insb
andl
stc
cld
jle
sti
sarl
xor
mov
push
mov
test
cmp
and
jle
fcoml
cli
mov
pop
fimuls
and
xlat
sub
gs
push
dec
mov
lds
dec
fdivs
xor
adc
std
sahf
xchg
pop
xor
fbld
sub
add
std
inc
and
pop
add
sub
pop
xor
cmp
jl
fs
loopne
add
cmpsb
and
addb
add
je
fisttpll
sub
push
ret
popa
push
insw
mov
jl
shl
push
push
pop
fisubrs
add
xchg
jbe
push
cmpl
cld
int3
outsb
mov
xorb
inc
push
dec
lds
aad
xchg
jmp
shlb
fiaddl
mov
cmpsl
adc
loope
dec
lods
popa
mov
loopne
call
js
dec
int
sar
push
cmp
in
cmpb
xor
sub
jae
out
xor
push
fiadds
xchg
push
add
scas
inc
rep
push
popa
add
jecxz
fisubl
push
lea
push
cmp
out
dec
mov
xlat
aas
stos
mov
subl
int3
stc
mov
subl
mov
jns
push
dec
xor
ret
or
pop
add
jg
mov
mov
daa
lods
stc
xlat
mov
adc
sub
in
xor
stc
jae
fwait
das
sbb
lcall
cmpsb
ret
mov
adc
add
dec
and
leave
xchg
add
lds
mov
fimull
aas
sbb
stc
jnp
out
adc
dec
call
mov
dec
out
push
outsl
ss
in
das
shll
movb
loop
mov
cmpsl
vminss
mov
jns
data16
mov
lcall
sbb
adc
adc
dec
cmp
lods
cmpsl
cltd
mov
bound
gs
mov
loop
cltd
push
test
cltd
lret
imulb
call
pusha
test
popf
pop
fwait
in
inc
jns
jbe
or
push
loope
or
bound
xor
fdiv
mov
cmp
das
pushf
pop
pop
or
push
xor
cmp
daa
pop
xor
jo
inc
jge
mov
pcmpeqb
cmpsb
ja
in
xor
imul
gs
mov
call
movsb
stos
ficompl
popf
push
push
sbb
mov
or
in
addr16
mov
test
aam
xchg
add
and
mov
push
mov
mov
xchg
int
enter
adc
sbb
xchg
js
sub
bound
ja
das
push
push
in
dec
popf
mov
dec
aaa
rclb
je
and
repnz
aaa
push
cld
mov
inc
push
mov
fisttpll
cmp
sbb
cmc
mov
fmul
aam
mov
add
jmp
inc
xor
aad
add
outsb
loopne
lahf
rcl
insl
sub
jg
test
or
shl
push
in
cwtl
inc
mov
cmp
adc
cmp
mov
test
mov
sub
shr
jne
mov
and
sub
and
xor
ja
jb
pop
fldt
addr16
sbb
mov
pusha
xchg
cmp
cmp
mov
mov
add
pusha
xor
loopne
xlat
mov
inc
lea
test
imul
dec
inc
lods
stc
std
mov
js
and
ljmp
rolb
mov
push
cmp
movsb
xchg
fistps
popa
inc
in
push
es
pop
mov
out
or
test
jge
xchg
jmp
xchg
dec
pushw
xchg
xchg
push
sbb
lods
cwtl
inc
inc
cmp
lods
pop
xchg
daa
aas
dec
jge
inc
push
test
push
aaa
add
hlt
sahf
ss
aam
cs
cmp
mov
mov
mov
sbbb
movsl
fnsave
ljmp
scas
addr16
fists
les
xlat
rcrl
ret
addr16
ljmp
ljmp
popa
in
pusha
cmp
push
shll
or
insl
or
outsl
push
fstps
repz
jecxz
bound
lds
pop
mov
jmp
aas
dec
bound
dec
jbe
mov
dec
push
mov
mov
xor
sbb
sub
inc
das
jb
inc
lret
inc
sbb
out
mov
push
in
imul
and
xchg
xchg
lcall
sarb
lods
aam
mov
fsubrl
jne
add
mov
lea
outsb
arpl
pop
in
cwtl
mov
les
xchg
add
adc
xchg
cli
pop
cmp
mov
pop
push
jnp
add
mov
mov
sub
sbb
test
and
mov
sbb
inc
cmpsl
xchg
jb
xchg
lret
mov
scas
cwtl
and
push
sub
shll
out
scas
push
pop
lret
and
adc
pop
pop
xchg
in
jnp
ss
add
cmpsl
pop
lahf
cltd
mov
sub
sbb
out
dec
gs
fcompl
mov
push
imul
and
lret
addb
mov
popa
sub
sbb
shr
in
sbb
inc
ja
pushf
out
insl
mov
pop
push
idivl
jb
idivl
jbe
add
mov
mov
cltd
or
sbbl
fcoml
lods
cmp
sbb
in
pop
mov
cmp
movsb
mov
adc
jnp
inc
pop
sbb
pop
cmp
inc
push
lret
clc
push
jmp
fwait
lods
in
and
out
push
ss
or
add
test
push
es
sub
sbb
push
out
insb
mov
sub
fsubrl
mov
xor
fisubl
in
jl
add
test
sub
jns
lret
cmp
lds
pop
dec
imul
mov
mov
daa
mov
rolb
mov
movsl
sub
mov
mov
mov
push
add
push
xor
setp
jbe
dec
jns
bound
call
mov
jo
das
stc
in
jnp
sar
sahf
out
dec
adc
loopne
mov
mov
rcrb
sub
pop
pop
hlt
fwait
inc
cmp
sbb
stos
or
rcrl
loope
mov
mov
stos
jae
mov
lods
fsubp
test
sti
pop
bound
dec
inc
or
mov
in
notl
adc
mov
jmp
or
adc
jbe
cmpsb
movb
add
je
or
inc
xchg
test
xor
jl
test
push
cmpb
pop
inc
clc
stos
int3
xchg
pop
fldenv
jno
mov
push
lret
sub
push
in
dec
sub
rorl
loopne
push
dec
stos
adc
aad
inc
pop
xchg
jns
ficoml
sub
loopne
mov
inc
les
jmp
jmp
jle
lea
cltd
mov
scas
cmc
xchg
mov
pop
sbb
jne
jo
mov
dec
xchg
mov
loopne
movsl
push
loopne
sub
out
dec
or
mov
cmp
lods
dec
dec
std
adc
je
push
jl
rcrl
sahf
sbb
adc
movsb
sti
stos
or
out
push
fucomi
xorb
aas
out
jge
and
jno
fwait
xor
xor
jne
inc
ljmp
daa
sbb
inc
out
sbb
add
nop
sub
scas
js
faddp
pop
loope
aas
lock
inc
cmp
xchg
je
add
and
xlat
lret
and
je
xlat
outsl
insb
sbb
aas
lcall
inc
and
jl
fbstp
adc
and
sub
dec
mov
inc
adc
pop
in
lods
xor
xor
loope
jae
addb
dec
pop
xchg
ret
and
inc
test
rcll
or
in
adcb
shll
clc
lea
outsb
in
dec
arpl
sub
xor
icebp
jnp
sbb
jnp
rol
pop
mov
fldenv
adc
cld
out
jb
sbb
mov
add
push
mov
adc
inc
aad
add
jg
fs
jle
mov
or
cmc
cmc
cli
mov
dec
sti
push
push
add
sbb
xor
movsb
out
aas
bound
xchg
xchg
mov
insl
sub
pop
ds
fs
insb
add
or
adc
jo
push
or
sbb
mov
pushf
fs
je
lock
addl
dec
or
dec
repnz
cmc
enter
stc
xchg
sub
and
aas
push
push
cmpsl
insb
jmp
mov
aas
mov
xor
sub
fwait
jp
mov
cmp
xor
mov
add
shlb
push
cmp
jo
je
in
or
sub
outsl
sarl
mov
loopne
sbb
jne
aad
lock
xlat
and
ss
xchg
xchg
cwtl
xchg
cmpsb
adc
add
jns
jmp
pop
lea
fidivrs
mov
cmc
aam
aad
jb
sbb
shrb
dec
mov
dec
cmp
stos
pop
mov
mov
add
pop
std
or
pop
pop
or
into
movsb
flds
roll
and
cmp
push
mov
mov
call
dec
add
fisttps
std
cs
pop
mov
cmpsb
dec
daa
iret
outsb
push
out
es
mov
rcl
insb
fldenv
jne
mov
das
mov
push
sbb
jp
or
cmpsb
test
aas
imul
xor
daa
add
fldenv
mov
aad
lret
test
adc
push
cmpsl
scas
lods
fsts
cmpb
in
cwtl
xchg
xor
cmp
jg
flds
sti
xchg
mov
ja
push
xorb
mov
push
lds
mov
lahf
cmc
add
aaa
mov
rclb
pusha
ja
insl
push
sbb
aam
sub
daa
ja
and
add
jl
xchg
lods
hlt
sahf
daa
xchg
mov
cmp
inc
dec
xchg
push
sub
test
out
push
and
in
test
call
sarb
pop
xor
shrl
pop
out
filds
arpl
mov
ds
push
xor
xor
ds
idivl
bound
ud1
sub
pop
pop
lret
test
xchg
mov
daa
xchg
lcall
adc
jne
sti
dec
jne
aad
mov
cmpsl
and
mov
outsl
mov
std
cwtl
dec
out
xchg
pushf
test
or
adc
imulb
cmp
jl
pop
stc
in
sbb
cmc
push
loope
or
in
jb
fwait
adc
sbb
not
in
addr16
xchg
sbbl
idivl
and
lahf
adc
fptan
clc
mov
lea
adc
sbb
mov
cmpsl
mov
xchg
xchg
sbb
nop
lret
xor
lods
bound
pop
push
xchg
pop
into
xor
lds
cmc
push
pop
out
sbb
lahf
mov
cs
popa
sub
lahf
pop
xlat
dec
ret
pop
sbb
int
inc
or
movsl
mov
cmp
lret
pop
jl
gs
inc
mov
mov
cmp
in
fs
arpl
mov
popa
daa
cmpsl
pop
inc
punpcklwd
mov
enter
jecxz
inc
dec
fisttps
lret
jae
lret
std
push
lock
fsin
pusha
xchg
lret
add
daa
in
mov
pusha
inc
movsl
adc
cmc
movsb
push
cmpsb
ret
pop
es
fistpl
jg
inc
inc
ss
push
push
dec
ret
sbb
cmp
add
in
push
adc
ret
xor
test
jns
fildl
in
lret
inc
inc
pushf
and
xchg
xchg
rorl
xchg
or
stc
nop
inc
push
dec
pop
jb
xchg
xchg
sub
and
fistl
mov
add
pop
popa
fldcw
dec
dec
xchg
aad
xchg
repnz
arpl
pusha
movsl
push
mov
test
nop
pusha
ja
dec
sub
jg
cmc
xchg
or
inc
adc
push
jno
adc
les
rolb
and
int
out
mov
inc
inc
fstl
pop
jo
into
adc
shrl
insb
jmp
daa
mov
lret
xchg
lods
xor
leave
add
int
mov
xchg
push
mov
fstp
inc
dec
insb
jmp
mov
inc
aam
xchg
test
lret
pop
mov
nop
shrb
jmp
mov
cmp
mov
nop
lret
push
or
mov
jle
xchg
lea
jo
fdivp
in
xor
pop
cltd
sub
adc
xchg
ficomps
mov
pop
clc
lahf
popa
cs
ret
stc
fcomp
das
mov
pop
imul
lret
or
ror
fsubs
push
mov
in
xchg
mov
ja
and
xchg
xchg
clc
sub
inc
aad
mov
cmp
inc
push
and
ret
sbb
cmc
shl
xor
clc
or
addl
dec
sbb
movsl
cmpsb
shrb
test
mov
xchg
aam
xchg
shl
and
js
pushf
mov
int
icebp
leave
icebp
cmp
pop
xor
sub
lods
cmpsb
es
negb
mov
arpl
push
jnp
cmp
les
sbb
in
dec
fildl
insb
jmp
xchg
nop
sti
aad
dec
xchg
mov
and
sbbb
out
arpl
mov
popa
gs
adc
sbb
out
xchg
or
jmp
into
mov
loopne
shrb
xchg
shl
sbb
jmp
pop
dec
and
pop
jb
out
push
xor
in
daa
fdivrs
ljmp
mov
ds
lea
sbb
loope
adc
and
pshufw
das
cltd
push
js
loopne
and
pop
iret
rcl
in
std
mov
movsl
cmp
xchg
insb
insl
sub
adc
push
push
jmp
inc
fistps
mov
mov
lret
imul
cwtl
lahf
cmp
mov
xchg
xchg
xchg
mov
jns
push
add
ret
adc
pop
add
pop
jnp
pop
fstp
rorb
scas
pop
nop
mov
adc
aad
add
lcall
les
xor
cmpsb
cmpsl
shll
std
fnsave
shll
sub
dec
jbe
add
mov
sub
jmp
jp
mov
xlat
add
repnz
jo
test
cs
xor
xchg
loopne
mov
push
mov
xor
mov
aas
ss
rolb
and
xor
mov
xor
in
ja
mull
sbb
imul
jb
mov
inc
pop
idivl
pop
arpl
iret
add
push
cmp
or
inc
and
xchg
pop
sbb
mov
mov
jb
sub
hlt
xchg
push
test
aas
and
insl
and
inc
rcll
or
xchg
push
sbb
gs
test
xor
adc
cld
aam
out
push
xorl
pop
movsl
mov
or
xchg
jl
lahf
xchg
dec
mov
mov
push
aad
int3
add
hlt
mov
arpl
sub
push
cmp
mov
iret
push
mov
add
or
lods
cld
push
sarl
push
mov
aam
inc
shlb
out
jmp
mov
dec
jnp
pop
push
mov
mov
xor
jae
pop
xchg
and
imul
xor
and
mov
or
ss
xor
push
out
sub
std
test
push
adc
ss
cltd
push
sbb
mov
pushl
lods
push
fldl
jg
movsl
pop
ds
lock
inc
xchg
sbb
mov
pop
dec
repnz
stos
xor
push
and
pop
pop
and
das
add
dec
fdivl
shrb
cmp
divl
inc
mov
or
add
and
mov
dec
xchg
sbb
pop
cmc
dec
aaa
mov
popa
lret
loopne
in
mov
cmc
mov
inc
pop
arpl
jg
and
fists
or
inc
nop
jl
sub
cmp
jle,pn
mov
jne
shlb
xchg
addr16
pop
test
add
sbb
enterw
cmp
push
dec
test
cmp
pop
mov
lahf
jns
ficomps
add
add
mov
jecxz
les
test
clc
xchg
mov
je
sbb
test
loope
dec
repnz
add
push
inc
pusha
scas
adcl
jno
lea
nop
push
pop
or
scas
fimull
cld
dec
mov
jo
mov
fimuls
pop
rcrl
pop
add
push
mov
into
and
push
mov
cmp
cmp
pop
roll
pop
out
shrl
pop
loope
cmpsl
aam
lahf
dec
push
flds
in
lret
add
ret
inc
ja
into
pop
mov
and
fiaddl
lods
push
cmp
stos
sub
dec
je
and
rolb
or
mov
cmp
push
xchg
nop
int3
jle
sbbl
cs
std
aas
dec
push
repz
and
pop
inc
sbb
stc
rcrb
xsha256
cmpsb
shrl
dec
in
repnz
in
jnp
aam
pop
les
or
jecxz
test
pop
xor
xchg
xchg
pop
sub
jo
ret
cmpsb
push
loopne
xchg
lock
and
std
inc
jno
out
mov
mov
mov
shl
push
rorl
pop
xchg
scas
xchg
lahf
mov
inc
cli
lea
shlb
mov
je
in
mov
add
jbe
cltd
popf
and
pop
add
or
mov
inc
add
aam
ret
sbb
jo
in
lcall
xchg
iret
mov
jo
xchg
loopne
stos
xchg
gs
and
cmp
cmpsl
adc
dec
jmp
scas
cld
popf
inc
lods
lcall
jg
add
and
add
jo
cmp
test
add
pushl
int
aaa
popf
test
push
mov
and
aas
mov
jl
imul
les
cltd
lods
jnp
and
sub
stos
das
pop
fisttpll
mov
jmp
and
mov
je
add
pop
push
imul
addl
out
test
dec
fwait
xchg
loope
lds
pop
popl
lahf
shrl
and
jl
jnp
insb
xlat
mov
adc
pop
cmc
pop
or
push
dec
add
jecxz
in
mov
dec
popf
in
sub
imul
mov
cmp
repnz
in
popa
pop
pop
dec
aas
dec
and
add
push
or
xchg
fidivrl
ret
inc
clc
cmpsb
cwtl
xchg
je
mov
ds
ss
adc
jmp
inc
sbb
aas
jnp
inc
xchg
pop
scas
pop
mov
scas
pop
sbb
push
cmp
adc
aad
mov
pusha
mov
lret
in
gs
xchg
lahf
xchg
push
xor
clc
add
push
adc
icebp
int
scas
push
jmp
pop
aas
ljmp
mov
fisttpl
sub
push
cli
mov
cltd
cwtl
test
mov
ds
sub
add
cmp
sbb
test
cld
and
and
aad
mov
push
pop
loopne
decb
pop
pop
mov
sahf
cmp
lea
fwait
add
lahf
or
loopne
ja
hlt
nop
loop
popl
sub
shlb
jg
push
movsb
fidivrs
cmpsl
push
cwtl
cmp
or
mov
pop
sub
ds
bound
pop
cmpsb
inc
cwtl
push
out
gs
sbb
ja
imul
xchg
sbbl
push
mov
lock
jne
or
adc
or
ret
adc
int
jp
notb
sti
lret
enter
mov
pushl
loope
add
testb
sbb
add
dec
inc
leave
fcomi
cmp
pop
icebp
fisubs
mov
inc
adc
out
sahf
mov
adc
addr16
divb
icebp
rcrb
inc
add
jae
cmpsb
jge
cmp
jno
das
mov
leave
push
filds
test
outsl
mov
jns
les
jne
pop
xchg
adc
fs
push
and
shrb
xor
stos
cmc
fildll
dec
push
mov
jns
sbb
les
enter
and
jle
cmp
mov
fisubl
int3
push
jp
icebp
pop
cwtl
sbb
mov
push
test
push
popf
xchg
and
cmp
mov
lahf
repz
xchg
push
sbb
sub
inc
rclb
lret
aas
inc
jl
jmp
cmp
sbb
and
push
pop
outsl
jae
loop
jae
idivb
adc
dec
mov
xchg
jl
and
jle
dec
sub
push
add
imul
popa
rcrb
xchg
pop
jecxz
or
xchg
outsb
jl
shrb
out
push
test
jae
push
add
fmuls
dec
xor
dec
push
cmpsl
lcall
shll
jne
dec
nop
lock
test
je
in
or
jnp
xchg
fsubs
pop
scas
in
cmp
cmp
mov
or
adc
outsl
pop
outsb
jbe
jmp
cmc
adc
aaa
aam
cmp
jl
sbb
jne
dec
push
xchg
mov
mov
inc
pop
lock
js
lahf
in
lock
dec
fstl
enter
dec
sbb
mov
lods
movsl
sub
fisttpll
push
cmp
and
lods
cmp
inc
mov
push
stos
mov
sbb
push
leave
mov
aam
add
js
dec
push
std
push
sahf
mov
fwait
cmp
push
iret
pop
or
in
pop
mov
rcl
ja
js
mov
mov
mov
sbb
sub
cmp
dec
fidivs
pop
loopne
xchg
jge
pop
xor
fstpt
adc
jl
lahf
into
and
ror
hlt
enter
movsl
jbe,pn
fisubs
mov
jecxz
pop
jecxz
les
xchg
or
aad
cmp
sub
mov
mov
add
js
test
xchg
and
xchg
jnp
mov
xor
xchg
xchg
out
call
adc
sti
gs
out
pop
xchg
notl
push
ret
das
mov
jnp
bound
dec
orl
clc
mov
lods
pop
mov
int3
lock
dec
test
adc
fnsave
popf
hlt
jo
pop
js
mov
mov
inc
jnp
insl
adc
in
out
mov
mov
pop
add
mov
sbb
aad
cmp
aad
mov
out
scas
push
sub
adc
dec
inc
les
push
sub
outsb
sahf
mov
or
jb
adc
mov
push
fisubrl
inc
shr
jle
add
sar
loopne
inc
adc
cmp
call
dec
push
sti
mov
insl
or
sbb
push
mov
mov
leave
arpl
dec
bnd
push
xor
and
or
imulb
cmp
pop
lods
push
and
jg
cmpsl
mov
fisttpll
pop
mov
dec
int
loopne
add
es
xchg
or
xor
sarl
std
or
add
adc
stos
pop
and
mov
jns
pop
fldt
jge
int
out
frstor
sub
push
ja
pop
pop
int3
xchg
into
mov
or
sbb
cmp
dec
lcall
push
sbb
inc
jbe
insb
and
fistps
add
mov
jmp
mov
mov
pop
aaa
and
adc
popf
in
adc
dec
mov
sbb
test
int3
hlt
add
sbb
xchg
adc
cmp
out
cli
cmpb
aas
and
repz
xor
adc
xchg
mov
dec
imul
out
lock
cmpsb
mov
or
inc
stos
sbb
cmp
hlt
addb
fimuls
mov
mov
test
shlb
sbb
les
push
inc
jmp
xchg
ja
pop
shrl
cmp
dec
push
cmp
sub
in
and
es
enter
cmp
mov
fnstcw
fbstp
mov
inc
adc
lods
push
xchg
fldl
mov
iret
js
cmp
mov
inc
mov
insb
mov
test
dec
xchg
xchg
test
aad
andnps
lods
xlat
cltd
loopne
sub
inc
aaa
icebp
mov
add
add
or
xor
jecxz
cmp
add
pop
int3
jno
xlat
adcb
cmp
add
or
aaa
addr16
cmpsl
add
fcoml
dec
add
ret
or
popf
cmpsb
stc
mov
jecxz
mov
jae
out
sbb
mov
xor
popl
mov
cmpsl
mov
mov
xchg
dec
cltd
inc
add
xchg
enter
cltd
leave
lret
subl
add
add
pusha
xchg
jmp
adc
xlat
rorb
fcompl
pop
idivb
inc
lahf
int3
xor
lahf
push
xor
loope
outsb
divl
lret
add
ror
adc
mov
dec
adc
jae
jge
xchg
incl
pop
mov
jle
and
xchg
push
outsl
in
cli
cmpb
imul
xchg
dec
nop
xchg
push
test
or
jbe
sub
mov
mov
and
jbe
push
sbb
jge
fs
dec
loopne
pop
cmp
inc
push
shr
xchg
mov
adc
stos
mov
xchg
cmp
mov
sub
adc
lret
mov
aad
add
inc
push
ds
pop
cli
or
cmp
push
mov
les
test
push
pop
adc
mov
inc
sub
into
insl
pop
xor
jge
shll
cmp
jo
xchg
test
dec
push
shrb
pop
sbb
mov
mov
push
neg
push
fnstenv
cli
xor
int3
sub
cld
cmp
or
adc
loopne
sbb
scas
pushf
lcall
push
pushf
fsts
jle
jp
jne
imul
aaa
pop
xchg
lea
iret
mov
pushf
test
mov
enter
jnp
or
jne
js
out
imul
jne
aaa
sbb
push
aam
xlat
cltd
pop
inc
ljmp
pop
cmp
xchg
inc
ficomps
addr16
push
adc
aas
push
jle
cmp
dec
jmp
test
dec
sahf
es
pushf
insl
leave
add
sub
push
cmp
or
xor
ret
sahf
sub
push
sbb
insb
bound
dec
pusha
and
xor
movsb
popf
clc
out
jecxz
ds
bound
adc
or
xor
aam
cmp
hlt
sub
je
or
xchg
pop
out
lock
and
jb
xchg
push
mov
cmpsb
xchg
sahf
mov
inc
dec
pushf
inc
sbb
adc
cmc
loop
imul
and
leave
ljmp
or
lds
mov
jne
and
lahf
add
mov
pop
addr16
fisttpll
int3
push
dec
sub
pop
int3
cmp
and
push
hlt
test
aad
adc
xor
lods
push
dec
pop
jecxz
loop
and
cmp
xchg
mov
into
out
jo
adc
xor
push
ret
mov
ljmp
aad
pop
in
mov
dec
push
lret
in
add
add
inc
adc
js
pusha
mov
leave
xchg
les
cmp
jbe
inc
call
xchg
sti
sub
aad
adc
push
lea
add
mov
xchg
ret
stc
cmp
mov
inc
mov
pop
nop
sbb
loope
aad
fldln2
jae
jge
mov
lods
fstpl
nopl
dec
sbb
adc
cmpsb
aad
verw
sub
sub
addl
fcmovnb
lahf
mov
push
js
scas
push
imulb
xchg
call
gs
mov
repz
lods
or
fwait
leave
mov
add
daa
int
call
pop
popf
sbb
pushf
add
aaa
int3
je
addb
aaa
cwtl
mov
cli
in
pop
es
xor
in
daa
and
pop
sub
jle
cmpl
sub
mov
mov
shlb
pop
out
popf
xor
push
insb
cmp
pop
cmp
or
mov
fsubrs
mov
in
adc
arpl
sbb
ret
fbld
add
xor
insl
push
mov
pop
mov
out
scas
gs
lods
mull
outsl
lods
xchg
lahf
ficompl
iret
andl
mov
rcr
std
mov
xchg
mov
imul
dec
mov
ficompl
ret
jns
or
cmp
mov
cmpsl
or
inc
jnp
xor
clc
push
cli
int3
xchg
fisubrl
xchg
ficompl
mov
sub
sub
data16
lcall
jo
inc
mov
push
lret
fwait
sahf
or
push
ret
push
add
inc
mov
popl
shlb
cmp
ficoml
repnz
cmpsl
cmp
mov
dec
cmc
addr16
ljmp
pop
dec
aas
push
jno
test
inc
fsubp
aaa
iret
aad
loop
mov
inc
or
mov
push
cmpsb
cmp
idiv
shlb
sti
inc
and
out
aad
push
rorb
sub
and
xchg
xchg
cs
test
loopne
lret
xchg
push
clc
lds
dec
push
lcall
lcall
fcoms
and
pop
and
dec
inc
jno
and
push
mov
adc
cmp
decl
push
cmp
js
xor
negl
sbb
mov
inc
adc
or
sub
pop
jnp
subb
add
cmp
dec
les
inc
pop
inc
repz
and
sahf
pop
add
push
pop
mov
jno
es
jb
imul
inc
mov
jno
imul
scas
xlat
adc
dec
ja
decb
pop
push
and
dec
stos
xchg
lock
out
push
out
fs
pop
stos
cmc
xorb
inc
push
jb
push
fidivrl
xchg
push
pop
push
into
lea
mov
xchg
adc
lar
push
fabs
in
lcall
fimull
cli
or
xor
icebp
in
cmp
data16
dec
outsb
and
loope
hlt
sub
xlat
jns
cmpsb
fnsave
dec
enter
jecxz
mov
or
and
jb
pop
sbb
push
das
xchg
shl
jns
and
scas
fstps
jb
mov
movsb
sub
arpl
pop
mov
arpl
in
mov
cmp
mov
or
pusha
fmulp
add
punpcklbw
mov
stc
aas
pop
dec
lret
mov
cwtl
and
sbb
into
nop
xchg
pushf
cli
lahf
sbb
pop
dec
pusha
sbb
push
hlt
or
mov
inc
test
faddl
test
out
ja
aaa
push
push
sub
hlt
dec
push
or
nop
and
outsb
dec
aad
mull
lea
and
repz
cltd
ja
mov
xorl
pop
call
loopne
rcrb
jl
xchg
mov
and
sub
sub
andl
bound
es
lret
mov
insb
mov
addl
jmp
inc
add
aaa
sbb
jbe
pop
xor
sbb
mov
pop
ret
in
mov
push
leave
rclb
inc
fs
mov
mov
dec
dec
sub
pop
bnd
rorl
subl
loope
loope
jne
mov
ror
icebp
add
fwait
movsb
sbb
jmp
es
and
ljmp
xchg
xchg
jg
imul
push
xchg
lret
mov
or
jmp
mov
sti
rcrl
aaa
xor
sbb
adc
mov
lahf
mov
int
stos
mov
sbb
pop
test
imul
inc
sub
lods
or
icebp
jmp
push
pop
xor
adc
and
les
out
push
arpl
imul
mov
cmpsb
jmp
adc
jecxz
mov
repnz
sbb
or
mov
pop
or
notb
enter
xor
sbb
imul
and
orl
cmp
into
mov
or
cmpsb
ffreep
sub
xor
ret
repz
or
dec
mov
into
pop
insl
and
jp
mov
xorl
mov
test
mov
pop
add
or
push
mov
jp
and
and
sub
cltd
pusha
inc
xchg
outsb
jb
mov
mov
dec
out
mov
mov
andb
fistl
ds
cmp
push
iret
mov
xor
or
lock
adc
xor
lret
push
sbb
dec
subl
addb
inc
jae
loop
mov
loope
push
xchg
rcl
fmul
sub
stc
dec
popa
cltd
mov
mov
push
push
popa
pop
pushf
faddl
dec
sarb
jg
adc
ja
inc
lret
popf
lret
test
int3
sub
push
add
popf
pop
fdivp
insb
and
mov
sub
mov
add
and
loope
mov
rolb
sbb
fidivs
or
mov
lret
add
mov
cmp
xor
push
aam
movsl
inc
das
push
stc
cmpsl
pop
xchg
stos
fldcw
push
xchg
jne
andl
pop
sbb
std
js
fdivrs
mov
outsb
nop
sahf
inc
fstl
mov
jecxz
cmpl
lods
add
rcrl
xchg
out
and
or
inc
roll
mov
imul
out
insl
adc
cmp
mov
inc
pop
jb
lock
adc
lock
pop
rcrl
and
rcr
mov
fcmovnb
dec
and
test
cmp
push
pop
fldcw
hlt
sub
jge
lea
push
mov
icebp
dec
dec
out
mov
dec
notl
cmc
or
hlt
sbb
push
repnz
xor
sub
sahf
dec
jnp
loope
cli
adc
enter
mov
stos
jnp
dec
loop
mov
mov
xchg
sbb
jns
jb
shrl
cwtl
jmp
fs
inc
cmp
xor
sub
sub
mov
lods
sbb
jmp
mov
cmc
imul
jbe
cmpl
adc
mov
jno
xchg
inc
cmp
lock
sub
inc
push
dec
mov
push
lahf
fmuls
insl
xor
lods
push
lock
in
mov
mov
orb
and
pop
push
dec
xchg
ficoms
loopne
fistps
dec
fsubp
add
pop
test
push
jmp
mov
mov
iret
inc
sbb
inc
sbb
int
cmp
mov
and
inc
sub
mov
cmpsb
mov
adc
jge
es
xchg
sub
ret
adc
mov
xorl
shll
inc
inc
mov
push
mov
mov
adc
sbb
cmp
in
fcomps
mov
jo
rorb
mov
mov
jg
add
or
in
in
and
icebp
jp
sahf
pop
enter
mov
mov
xlat
or
pop
dec
shll
fldt
sub
sub
xor
aas
mov
sub
jp
out
and
mov
nop
or
xor
sbb
xchg
xor
jp
test
cmp
pop
xor
jb
xor
scas
inc
notl
dec
push
aam
sub
por
sbb
fisubl
xor
ss
dec
xor
incl
dec
dec
sbb
mov
cmp
adc
int3
sbb
iret
xor
test
xchg
sbb
jns
fistpll
insb
hlt
sub
pop
lods
cmp
fs
add
sub
mov
aad
mov
leave
mov
jecxz
je
push
icebp
add
mov
pushf
xor
jo
mov
fwait
sbb
pop
pop
mov
fdivrl
leave
push
pop
into
lods
cmp
mov
pop
sub
pop
push
mov
mov
in
mov
dec
push
sub
enter
fistpl
sub
lcall
push
icebp
hlt
shlb
inc
sbb
cli
sbb
mov
in
fstps
pop
dec
and
mov
stos
mov
ret
bnd
mov
lock
add
add
test
jne
jmp
sbb
test
jg
insb
lods
cmc
fisttpl
fidivrl
push
or
inc
insb
sub
cmp
repnz
cmp
out
cwtl
pop
lods
mov
add
xor
fwait
repz
aaa
jl
std
lds
mov
call
or
lahf
nop
and
jle
cwtl
not
push
xchg
jge
pop
add
inc
add
adc
imul
cmp
jnp
xchg
xor
push
xchg
mov
fs
cmp
mov
add
pop
icebp
pop
mov
pushf
in
xor
fucomi
fisttpll
pop
cld
mov
fdivs
call
in
lock
je
lcall
xchg
mov
and
xchg
push
dec
sub
adc
jecxz
push
fs
neg
add
xchg
popf
test
jle
add
cli
xlat
loop
add
sbb
ffreep
fstpl
adc
ljmp
mov
dec
lahf
out
mov
mov
bound
sub
scas
inc
dec
movsb
adc
shrl
push
cmp
push
loopne
punpcklbw
pop
es
flds
int
adc
sti
movsl
and
inc
js
lcall
repnz
ret
fistpl
or
xchg
xchg
shl
scas
mov
shrl
pop
cmp
sub
dec
in
xlat
fsub
xchg
clc
rolb
mov
les
test
push
rorl
pop
sbb
mov
fwait
mov
shl
mov
xchg
mov
add
lret
adc
out
pop
dec
sahf
pushf
lea
repz
ljmp
loop
aas
push
adc
fimuls
aas
dec
jge
push
icebp
push
adc
push
mov
xlat
and
lods
bound
dec
cmpsb
insb
push
jge
dec
jbe
push
nop
test
pop
repnz
adc
dec
mov
sbb
or
movsl
in
xlat
adc
rcl
ss
pop
cli
cmp
outsb
push
cmpsb
clc
inc
mov
mov
cmp
jp
outsl
icebp
pop
push
ficompl
call
int
les
movsl
std
rcrl
pop
mov
roll
rcrl
in
inc
fucom
dec
adc
adc
xchg
inc
insl
pusha
dec
mov
xor
lods
cwtl
jb
fidivl
test
cmp
mov
fmulp
lock
clc
xor
movaps
loopne
mov
test
xchg
shr
fadds
sahf
fnstenv
es
dec
mov
or
aam
xor
push
xchg
popf
data16
out
mov
arpl
mov
or
adc
pop
ror
inc
aam
in
xchg
cmp
xor
ds
sub
scas
push
cmpsb
pop
inc
sti
pop
cmp
or
rclb
fs
cmp
in
mov
std
inc
scas
ret
xor
push
iret
sbb
sbb
iret
pushf
cld
mov
adc
push
scas
mov
movsl
fimuls
mov
jae
arpl
sbb
popf
mov
cli
and
leave
cld
movsl
rolb
adc
add
loope
out
inc
mov
inc
sbb
push
jge
das
lcall
pop
mov
lret
sub
push
pop
in
jp
or
mov
push
lahf
mov
jp
data16
mov
popa
lea
ss
repnz
in
js
cmp
test
xor
nop
daa
mov
scas
stos
test
xchg
stc
imul
fdivr
mov
dec
xchg
push
test
mov
cwtl
bound
add
push
inc
pop
add
add
cmp
pop
push
aad
leave
fldt
lret
and
pop
mov
jle
mov
add
xchg
cmpsl
mov
rclb
lea
scas
or
pop
adc
in
xchg
cwtl
add
push
jnp
mov
repnz
mov
das
pop
punpcklwd
mov
inc
push
out
push
push
hlt
xor
adc
lock
jo
movb
mov
jmp
cmpsb
pop
add
mov
push
je
and
iret
cmpsb
fildll
ds
jbe
scas
lcall
inc
in
imul
outsl
in
add
dec
imul
sub
pusha
add
dec
fwait
or
cmc
dec
inc
es
adc
int3
and
mov
cmp
aaa
mov
inc
push
pop
sahf
mov
popa
arpl
push
jp
jnp
pushf
jo
orl
sub
add
xchg
stos
pop
push
imul
xor
negb
pop
sub
push
loopne
pop
xor
pop
scas
aam
enter
and
pop
div
pop
pushf
jle
push
adc
sbb
pop
adc
or
sbb
push
cmp
cmp
jg
imul
call
xorb
lahf
std
mov
adc
pop
int3
xor
in
push
or
xchg
mov
cmp
icebp
xchg
lea
mov
sysexit
daa
movsl
insl
cmpsl
dec
push
sbb
insb
sbb
repnz
enter
sbb
loopne
and
and
pop
mov
mov
lahf
sub
push
mov
sti
test
gs
cmc
scas
pop
mov
adc
insl
adc
dec
dec
add
gs
jecxz
lods
gs
int
sarb
jns
jne
push
rorl
push
jmp
out
sub
aam
jecxz
sub
jb
test
sub
and
pop
divl
lods
cmp
lock
test
lods
ljmp
xchg
movsl
loopne
sbb
fidivl
mov
jno
xchg
shlb
lret
cltd
add
mov
add
inc
inc
mov
cmp
out
fs
jns
std
dec
dec
add
xchg
adc
cmp
data16
stc
add
popa
pop
loop
cmpl
fwait
dec
jle
add
dec
xor
mov
sbb
dec
cmp
xor
inc
test
lds
add
pop
out
push
cwtl
data16
data16
roll
or
push
sbb
mov
icebp
xchg
lret
xchg
push
js
sbb
insb
inc
inc
sub
mov
push
cmp
inc
and
mov
mov
xor
bound
test
pop
in
push
inc
fdivl
pop
jge
sub
sbb
sbb
inc
into
sub
movsb
mov
ret
push
cmp
fcoms
in
pop
add
jne
or
mov
sbb
and
dec
cld
popf
mov
sub
jp
push
cmp
pop
jl
icebp
xor
leave
aad
push
push
push
insb
or
or
pop
or
in
sbb
hlt
dec
or
and
ret
lcall
incl
lret
lods
lods
inc
imul
cwtl
subl
sti
outsl
rcrb
adc
fistps
int3
fistl
subl
xlat
loope
mov
lcall
dec
push
out
lods
cmp
fcomps
mov
movsl
dec
lcall
cs
pop
adc
cmp
out
stos
push
es
ficompl
fisttpl
fbstp
inc
and
in
loop
sbb
xor
arpl
addr16
push
jno
mov
or
stos
or
push
inc
mov
stos
mov
mov
add
test
daa
jns
cmp
insl
jg
add
cmp
mov
pushf
pop
adc
sbb
sar
int3
subb
inc
sub
cmc
shl
xchg
add
jl
adc
mov
push
std
lds
inc
adc
popf
jg
imul
xor
and
push
push
jl
jbe
mov
push
and
mov
aad
sbb
aas
dec
loope
push
in
push
in
xchg
loope
push
push
out
xchg
test
xor
jecxz
jle
push
pop
flds
loop
push
inc
sbb
imul
in
and
cmp
push
fsubs
call
cmp
mov
repz
jmp
jge
or
aad
imul
cmp
mov
daa
or
sub
mov
sbb
outsb
inc
fsub
shufps
xor
in
sbb
cmc
pop
in
out
gs
shll
ljmp
add
xor
cwtl
inc
cmp
or
mov
push
idivl
xchg
testl
loop
pop
stc
mov
mov
test
aas
arpl
or
add
cwtl
imul
in
mov
andl
sbb
dec
push
imul
sbb
rorb
mov
pop
or
jle
cltd
sub
insb
or
imul
std
cmp
sbb
pushl
daa
mov
push
rcr
arpl
cmpsl
scas
insb
mov
mov
or
inc
or
or
mov
ja
add
lret
dec
pop
fcmovbe
insl
out
cmp
pop
arpl
add
lcall
adc
seto
inc
aad
ds
cmp
leave
and
sub
xchg
popa
dec
fists
mov
pop
jno
sar
inc
pusha
ss
repz
dec
xlat
jp
push
repz
mov
cwtl
iret
or
mov
jge
clc
aaa
test
mov
or
cmc
cli
aas
repnz
enter
push
insb
mov
cmpsl
dec
pop
mov
roll
in
jge
cmp
jmp
push
and
mov
jne
add
stc
sahf
mov
in
adc
sbb
mov
push
mov
mov
ds
jnp
mov
aaa
add
hlt
xor
repnz
outsb
fisttps
jecxz
inc
subl
rclb
iret
mull
fisubl
dec
inc
lret
jmp
sub
xor
mov
mov
nop
lea
dec
lcall
sahf
jae
adc
jno
fsts
dec
insl
sbbl
shll
cltd
fwait
nop
fisubl
cld
mov
iret
sti
jns
jbe
sub
push
jno
or
mov
sbb
gs
stc
dec
ja
xlat
sub
test
rcll
pop
int
jbe
adc
dec
add
lock
inc
decb
push
cmp
int3
bound
mov
into
pop
hlt
mov
mov
shrb
pop
in
push
in
imul
pusha
call
add
push
dec
and
imul
fs
imul
mov
dec
ss
addl
insb
fnstcw
jne
inc
lahf
or
arpl
sub
jecxz
mov
test
sbb
or
cli
out
into
jg
push
dec
mov
lret
adc
into
jbe
test
jno
roll
jno
les
shlb
adc
push
in
dec
stc
iret
lret
fs
adc
cmp
sti
je
sti
jo
into
mov
ss
lock
mov
hlt
jle
lods
push
or
adc
inc
jl
push
rcr
pop
xor
idiv
sub
xor
jns
addb
mov
and
enter
iret
or
adc
mov
xchg
inc
fdivl
or
jl
adc
rclb
xchg
mov
cltd
jge
lods
xchg
in
push
jl
rcll
mov
movsb
imulb
rorb
sub
xchg
pusha
lcall
shl
dec
adc
mov
jecxz
push
iret
movsl
mov
incb
popa
fimull
in
popa
adcl
imul
push
jno
push
xchg
jecxz
std
test
mov
cmp
mov
mov
mov
sahf
jge
cmpsb
mov
cmp
lods
fdivs
stos
mov
clc
or
mov
cld
mov
mov
ljmp
lds
xor
mov
lock
pop
cmp
xchg
fnstsw
xor
sbb
shrl
jecxz
mov
jae
and
xor
stc
jg,pn
repnz
and
jecxz
shll
lcall
inc
push
jmp
cmpsl
addl
sbb
daa
cmp
jge
sbb
sbb
fs
sub
sub
je
test
or
rol
sbb
idivb
out
mov
adc
fsub
cmp
xchg
push
xor
loop
call
push
sar
push
scas
rcrb
cwtl
movsl
sbb
xor
mov
scas
out
mov
sub
inc
in
repnz
adc
movsl
sarb
dec
cmp
shl
fwait
mov
test
data16
adc
scas
push
mov
jno
fistps
ss
or
shrl
stos
xor
push
xor
iret
dec
sbb
sub
jno
xchg
mov
fmuls
outsb
mov
jno
arpl
js
pushf
shll
aad
shll
jo
popf
pop
lea
lret
adc
sahf
js
iret
mov
cmpsb
mov
push
add
xchg
scas
lcall
mov
push
jp
fisubs
xchg
pop
mov
ja
in
ss
add
xor
mov
repz
sahf
jge
outsl
add
shr
cli
mov
stos
pop
test
ja
fs
mov
jmp
jnp
icebp
gs
xchg
dec
or
xchg
adc
sahf
cli
fnsave
xlat
mov
mov
pop
fadds
jae
xchg
push
lods
sbbb
adc
adc
loopne
jge
xchg
arpl
or
or
xchg
fxch
sbb
and
xchg
mulb
push
push
mov
setl
jge
inc
dec
pop
xor
mov
xchg
jae
or
cwtl
movsl
aad
add
jb
ljmp
xchg
xchg
lds
loopne
sbb
mov
and
leave
jo
push
stos
sub
outsl
outsl
cmp
aas
in
adc
push
dec
ss
popa
cmp
jno
dec
mov
push
push
pop
clc
mov
adc
lahf
mov
stos
test
mov
clc
lahf
sub
jae
xchg
push
test
mov
pop
dec
rcrb
sbb
movsl
movsb
mov
mov
adc
popa
adc
pop
cmc
mov
mov
pop
rorl
mov
arpl
pop
test
and
pop
pop
add
xchg
xor
aad
out
fnstcw
lret
mov
test
sub
sbb
mov
cs
pop
test
push
mov
ror
jge
sbb
inc
sub
sub
and
add
das
cmc
push
push
and
jo
mov
and
pop
test
inc
sbb
scas
js
test
pop
dec
adc
lds
mov
sub
mov
jo
cltd
pop
scas
fstpt
je
sbb
shll
je
pop
pusha
jno
aaa
jg
add
in
mov
push
lock
mov
mov
imul
fwait
or
icebp
add
out
cmp
lods
mov
xchg
jbe
pop
in
dec
repz
fistl
and
out
ss
lcall
enter
cmpsl
dec
sbb
dec
and
insl
pop
aam
sub
mov
and
enter
cltd
jle
jo
mov
mov
cmp
call
stos
xchg
aaa
fbld
sbb
addr16
mov
pop
pop
mov
addr16
sbbb
jmp
xor
lea
sbb
add
mov
pop
inc
mov
sarb
or
mov
hlt
mov
sub
into
dec
in
push
mov
repnz
and
lods
fnstcw
in
repz
add
dec
shll
sti
int
mov
mov
adc
sbb
cmp
in
cwtl
out
inc
inc
sbb
mov
jae
jmp
cli
xchg
mov
andb
pop
push
sub
lods
in
test
movsb
les
mov
pop
push
call
out
sbb
sbb
xor
mov
rorb
loopne
das
outsb
flds
xchg
pushf
xor
sbb
pop
lahf
iret
testb
ret
or
cmp
xorl
in
add
push
push
adc
mov
sbb
test
push
aas
lahf
fidivrs
push
gs
pop
stos
inc
push
mov
pop
jecxz
mov
jae
or
adc
jecxz
jg
inc
outsl
popf
ret
fs
or
jae
clc
je
push
cltd
stos
adc
cmp
or
mov
and
pop
notb
cmp
dec
add
andl
cmp
pop
mov
dec
sub
mov
shlb
pop
mov
sarl
lcall
cmpsl
rep
jae
push
push
cwtl
addr16
mov
mov
enter
leave
lock
cmpsb
mov
fwait
push
cmp
es
imul
in
mov
rcrb
and
sbb
insl
enter
inc
sbb
sub
sub
pusha
dec
cs
inc
in
pop
stc
pop
lret
les
pop
or
push
and
addr16
stos
and
adc
out
out
sub
punpcklwd
test
std
shrl
or
popf
jno
cmpsl
mov
imul
push
cmp
push
popa
push
outsl
fisubs
dec
shll
cmp
push
push
jge
jns
xor
jbe
test
stc
mov
pusha
mov
xor
js
push
in
fld
and
int
sub
jecxz
sub
daa
nop
or
repz
or
ucomiss
mov
cmp
xchg
jge
xchg
adc
insb
stc
jbe
mov
clc
push
int3
pop
xchg
adc
rorb
sub
rol
pop
stos
divl
out
inc
imul
inc
adc
mov
dec
dec
insl
adc
repnz
stos
in
mov
stos
pop
xchg
inc
mov
mov
jge
mov
xchg
cmp
insb
gs
lret
test
js
loopne
arpl
jae
jle
mov
add
icebp
mov
out
ret
movsl
in
bound
pop
lahf
cmp
push
push
mov
in
push
push
mov
repz
sub
push
scas
jle
mov
sub
sub
mov
or
gs
std
add
cmp
mov
bound
cmp
xchg
inc
pop
movsl
clc
or
sub
cld
or
adc
adc
push
fs
mov
shll
mov
mov
mov
out
adc
call
mov
mov
mov
cmpsl
call
lods
aam
idivb
pop
pop
push
loop
imul
push
cmc
shlb
pop
cwtl
movb
and
cmp
and
nop
inc
cmpsl
adc
int
sbb
push
shlb
and
call
jle,pn
shlb
es
xor
icebp
push
pop
pushl
in
push
sbb
inc
es
sub
add
insl
shr
jbe
aas
cltd
addr16
add
add
nop
jae
clc
or
add
test
stc
pop
inc
stos
xor
in
cmp
insb
add
in
push
adc
das
mov
and
loope
fisttpll
jae
arpl
pop
sti
push
xor
lret
push
test
imul
xor
jae
mov
loop
sub
adc
shl
or
jp
addl
js
outsb
push
ret
test
lcall
cwtl
hlt
xor
jnp
into
mov
sbb
jbe
xor
xchg
aad
ja
add
arpl
xor
add
pop
adc
mov
and
dec
xchg
pop
popa
xor
xchg
test
inc
in
ror
les
mov
insb
jae
orl
std
sahf
mov
and
cmp
mov
in
jl
lahf
jne
pushf
aam
mov
sbb
cmp
mov
and
mov
lea
xorb
mov
dec
xchg
scas
xor
fwait
jne
add
and
fiaddl
gs
mov
and
mov
clc
fsubrl
loopne
push
idivl
adc
cmpsl
into
cld
fimull
jle
popa
xor
adc
mov
add
arpl
sub
cmp
fildl
in
or
add
xchg
icebp
mov
cmp
add
pop
into
in
xor
aam
or
js
or
lret
loope
mov
sub
test
mov
xor
sti
push
push
aad
xchg
pop
dec
pop
ljmp
or
pop
sti
push
xlat
and
jge
dec
out
pop
jae
jno
out
pop
enter
mov
jl
fisubl
test
mov
mov
mov
mov
and
jbe
cmpsl
lahf
sub
jns
add
rorb
ret
inc
mov
sbb
pop
mov
out
and
sub
and
inc
or
out
mov
xor
sub
cmpsb
sarl
ret
into
outsb
mov
fidivl
sti
and
inc
dec
pop
mov
add
shrb
pop
idivb
arpl
out
fbld
imul
adc
jp
xchg
sbb
mov
cmp
sub
lds
pusha
and
mov
jg
add
mov
cmp
lcall
dec
cmp
pop
pop
mov
jecxz
inc
movsb
push
je
inc
pop
dec
lahf
bts
daa
pushf
inc
jo
int
fsubr
in
xchg
cmpsl
inc
push
or
fsubs
dec
popa
test
mov
cmp
adc
mov
test
sub
pop
movsb
in
or
cmp
and
xor
and
xorb
icebp
ret
dec
sarb
push
loopne
sahf
fwait
out
add
dec
cwtl
flds
adc
jmp
mov
mov
arpl
add
cwtl
sub
or
push
orb
outsb
dec
loopne
cs
jmp
popf
lea
lods
repz
int
pop
dec
inc
mov
shrl
outsl
repz
dec
xor
mov
xchg
mov
inc
loope
sbb
test
hlt
sub
ret
lahf
pop
jnp
and
sarb
pop
cmpb
inc
gs
adc
dec
jo
rolb
dec
adc
popa
push
xchg
dec
ss
pop
in
iret
xor
jae
repnz
rcrl
pop
rorl
hlt
test
inc
mov
xor
sbb
negb
inc
cltd
add
lret
out
into
add
mov
add
or
mov
aam
test
xchg
mov
in
xchg
push
xor
mov
addr16
aas
add
push
inc
je
pop
daa
fadds
jno
add
mov
imul
hlt
jb
outsl
lea
bound
ret
mov
pop
inc
xchg
xlat
xchg
sub
adc
adc
inc
jbe
mov
mov
xchg
stc
nop
mov
inc
ss
sbb
sbb
lahf
outsl
out
lock
xchg
bound
cs
jb
jne
lret
ffree
push
hlt
clc
mov
add
mov
adc
lcall
clc
fldt
fistl
jge
dec
addr16
cltd
mov
repnz
ret
mov
or
inc
test
or
std
mov
imul
ret
mov
mov
mov
cmp
inc
mov
sub
cmp
sbb
cmc
mov
call
dec
dec
push
or
pop
test
int3
sub
arpl
add
shl
shll
insl
and
pop
lahf
jmp
std
xchg
out
mov
js
xchg
int3
ret
lret
mov
int3
adc
mov
jle
sahf
mov
sub
insb
daa
xorb
icebp
movsl
ja
test
fnstenv
jmp
lock
inc
jg
notb
popf
sbb
or
xchg
push
icebp
jae
repnz
xorb
test
aas
mov
adc
lods
pop
fsubr
aaa
xchg
sti
out
pusha
js
lret
decl
add
push
cs
es
pop
notl
lcall
dec
ljmp
xlat
push
push
ss
xchg
cmpsb
cld
cwtl
shlb
lods
roll
int
inc
pop
mov
loope
mov
repz
sbb
fnsave
dec
les
inc
mov
pushl
add
cmp
sub
jg
push
sarb
sti
sub
push
mov
subb
pop
rolb
push
mov
pushf
adc
xor
imul
ffree
stos
lea
f2xm1
push
cwtl
cmovae
adc
mov
mov
into
dec
mov
sbb
pop
out
repz
ret
pop
add
int
js
pop
mov
xor
mov
cmp
add
adc
cmpsl
cld
lods
mov
push
or
out
mull
dec
mov
sbbb
cmp
aam
fucomip
cmp
nop
inc
mov
mov
das
pop
ds
push
push
popf
push
lret
imul
leave
and
add
xor
and
dec
inc
sarl
in
clc
xorb
out
jle
mov
xlat
dec
sub
imul
sub
mov
mov
pop
clc
xchg
shl
loopne
or
mov
mov
mov
aas
fsubp
icebp
push
imul
jecxz
cmpb
and
fidivrs
arpl
pusha
push
adc
pushf
adc
sbb
dec
arpl
shrb
mov
cld
and
dec
cmpsl
pop
add
add
push
sbb
mov
xchg
xchg
xor
nop
and
cmp
idiv
loopne
add
add
jo
jg
jecxz
xor
cmpsl
cmp
cltd
mov
cmp
dec
cld
add
mov
in
in
aam
mov
flds
adc
popa
mov
arpl
mov
push
and
pop
movb
stos
ret
andb
dec
icebp
out
cltd
sbb
mov
ss
pop
movsb
fsubr
jbe
pop
test
push
rol
dec
adc
sbb
push
jle
mov
push
pop
jo
mov
fs
out
adc
adc
mov
or
sbb
adc
icebp
adc
repnz
outsl
inc
imul
push
and
xchg
inc
sbb
mov
xlat
test
push
stos
cmovle
rcrb
add
mov
aad
xor
popa
or
movsb
push
lea
xchg
test
jmp
sub
std
lea
dec
inc
insl
lret
jbe
shll
cld
xchg
cld
pop
cmc
push
out
xchg
cmp
sub
scas
pop
push
jb
stos
pop
lahf
jmp
adcb
jo
lock
mov
fsts
mov
mov
leave
dec
popf
in
addb
xlat
ret
out
sub
xor
icebp
rcll
mov
nop
pop
mov
inc
mov
add
jne
xchg
inc
adc
dec
data16
shl
mov
and
scas
jns
les
addr16
jae,pn
pop
pop
cmp
in
stos
jecxz
and
lock
add
ja
hlt
adc
movsb
adc
out
cmp
test
outsb
add
test
dec
inc
lcall
push
xchg
sahf
xor
xchg
and
pop
cmpsl
xlat
pop
mov
dec
icebp
push
rcrl
push
roll
jbe
add
mov
insl
iret
fimuls
add
imulb
ss
popf
mov
cltd
int
dec
rclb
outsb
push
adc
xor
scas
hlt
jb
shrl
aaa
or
shr
jbe
inc
xor
ret
inc
call
mov
cmpl
ds
or
repnz
add
and
das
test
mov
push
mov
adc
leave
and
push
add
test
scas
jb
mov
xor
adc
shld
or
mov
hlt
repnz
sub
mov
mov
dec
repz
jg
push
dec
cmp
xor
mov
sbbl
repnz
mov
mov
fnsave
adc
daa
lret
sub
jmp
out
mov
insb
pop
mov
xchg
ljmp
jp
loopne
clc
mov
ds
push
cld
push
int3
mov
repz
xchg
mov
mov
sarl
les
mov
sub
test
mov
pop
mov
repnz
nop
cmp
cmp
jo
in
dec
sub
mov
pusha
fildll
mov
popf
insl
mov
sbb
inc
aad
mov
cmp
push
notb
mov
push
mov
sti
test
cmpsb
xchg
or
mov
int
in
sti
dec
popf
fsubs
mov
ljmp
pop
outsb
adc
mov
xchg
mov
testl
pop
xchg
xor
xlat
gs
mov
sbb
adc
xchg
clc
ficoms
popa
mov
js
jb
rcrl
sbb
add
mov
cmp
ljmp
sbb
dec
or
jb
push
push
mov
mov
add
and
clc
mov
xchg
jmp
cmp
int3
jb
shlb
sbb
ret
cmp
lods
iret
mov
mov
jecxz
lods
adc
mov
add
mov
xor
popa
xor
repnz
loope
xchg
insl
stos
sub
aas
push
add
dec
sbb
pop
popf
jecxz
dec
popa
ret
out
clc
mov
or
mull
mov
cmp
cmp
sbb
cmp
test
aam
xorl
cltd
mov
xor
fdiv
dec
xor
xor
cmp
mov
lcall
dec
or
sbb
adcl
push
fsubr
adcl
push
dec
jnp
inc
mov
mov
cmp
dec
ret
inc
xchg
aad
and
into
add
dec
pusha
mov
jae
xor
jecxz
mov
je,pn
jg
mov
inc
xchg
add
pop
inc
push
lcall
push
fimuls
out
stos
loope
fwait
cmp
rorl
sbb
cmpsl
in
lahf
or
cli
or
pop
ja
jg
ss
pushf
jae
pop
sti
shlb
aaa
scas
xorb
dec
incl
int3
inc
cmp
xchg
mov
sbb
icebp
inc
std
adc
dec
cmpsl
cmp
insb
loopne
and
mov
shl
lds
push
cmp
mov
mov
adc
outsb
xchg
push
jns
in
in
sbb
mov
xchg
in
mov
je
and
pop
sub
loop
call
or
sub
pop
ret
add
or
ljmp
lret
and
cli
repnz
loop
sub
pop
outsl
pop
fnstenv
dec
shll
jmp
lahf
pushfw
mov
push
aad
or
prefetcht2
cmp
scas
nop
cltd
adc
adc
ret
mov
and
cmp
test
repz
and
jle
sbb
jns
outsb
xor
fwait
into
or
int
sbb
push
jle
popf
mov
repnz
mov
xchg
and
cmpb
in
lock
inc
repz
cmp
add
hlt
sarl
pushf
imul
add
or
push
fwait
movsl
in
xor
insl
xchg
icebp
jo
out
movsb
pusha
mov
lods
xor
fisttpl
and
mov
jb
push
xor
sub
push
dec
mov
icebp
dec
push
shrl
push
push
nop
pop
xor
les
outsb
sbb
mov
repz
test
movmskps
testl
mov
and
mov
cs
lods
add
popf
mov
jb
out
decl
cmp
mov
xor
dec
mov
push
scas
std
out
jp
mov
jno
shll
push
xlat
cld
mov
ds
sub
addr16
adc
iret
cmc
mov
imul
inc
mov
pop
and
jb
sbbb
inc
cmpsl
pusha
lcall
adc
and
pop
mov
jae
push
xchg
std
push
add
push
hlt
fidivrl
pop
xchg
sub
aad
jge
xor
pop
lahf
sub
repz
sbb
jle
add
inc
aaa
lret
push
mov
mov
add
dec
std
adc
mov
enter
loopne
sti
mov
mov
test
mov
fs
dec
aad
cmp
cmp
or
shll
pop
fadds
xlat
mov
mov
or
inc
xor
icebp
jecxz
mov
and
push
pop
inc
pop
inc
add
arpl
stos
shlb
xchg
bound
xor
loope
add
out
cli
inc
xor
xor
cmp
inc
sub
mov
loope
imul
lods
inc
test
in
mov
add
sbb
aad
mov
sbb
inc
lahf
scas
test
pop
cwtl
mov
dec
data16
and
pop
dec
pop
or
cli
mov
movsl
jno
repz
mov
mov
jecxz
fsubrp
cmp
mov
decl
jge
or
mov
movsb
adc
mov
adc
in
mov
mov
outsl
loopne
xchg
les
mov
xor
mov
inc
jg
push
shrl
out
arpl
addl
fisubs
mov
pop
pop
dec
mov
mov
jb
rolb
lcall
movsb
adc
cmp
push
adc
mov
pop
sub
clc
shll
inc
mov
cmpsl
add
sahf
movsl
sub
scas
pop
xor
jl,pt
xchg
xchg
xchg
dec
xlat
aad
mov
pushl
add
pop
ja
lahf
cs
faddp
push
cmp
and
lods
rol
jmp
loopne
cli
insb
adc
jge
outsb
push
daa
push
add
push
roll
jp
xchg
jle
mov
dec
xor
movsb
sahf
addr16
adc
add
add
rorl
mov
fmuls
sbb
out
sbb
std
lea
xor
and
push
inc
push
arpl
in
icebp
inc
pop
xor
lret
imul
xlat
ds
sub
or
stos
push
add
push
push
loopne
lods
out
sub
pop
sahf
push
mov
icebp
imul
mov
rcrb
shll
mov
negb
lods
cmc
xchg
add
test
xchg
mov
stos
lret
scas
adc
ja
lods
sbb
cmp
xchg
ret
into
out
mov
inc
jae
mov
cmp
test
mov
lcall
lds
add
sub
pop
or
nop
fld
jb
insb
rorb
push
out
pop
mov
pop
ja
arpl
mov
pushf
lret
rcll
ret
jmp
fwait
jle
orl
das
push
cmp
mov
push
add
cmp
mov
rcl
xor
push
int3
outsb
jbe
das
lds
xor
ret
jge
movsl
xchg
jns
ret
inc
test
in
scas
jmp
lahf
rcrb
dec
mov
adc
add
addr16
stos
jmp
push
mov
jb
loop
loopne
xchg
jno
test
dec
mov
cmp
jecxz
adc
mov
or
mov
push
adc
mov
jp
cmp
lret
xlat
out
fadd
cmp
mov
mov
es
iret
add
jne
popf
in
in
out
mov
lcall
fbstp
xor
push
lret
xor
lahf
mov
pop
or
in
add
lret
jno
inc
hlt
lods
mov
iret
sbb
push
adc
inc
xchg
push
sbb
push
jb
cmp
mov
push
dec
fwait
sub
push
adc
mov
dec
sbb
mov
jb
inc
testl
rclb
mov
push
std
sub
pop
xchg
aaa
test
xchg
sbb
dec
outsb
jns
hlt
and
adc
xchg
sub
negb
and
or
fbld
pop
jmp
inc
jns
aad
clc
pop
cltd
les
sub
outsb
cli
mov
and
insb
loopne
and
int
aaa
sbb
adc
push
inc
add
jno
jg
dec
idivl
jnp
insb
xor
loopne
cmp
leave
xchg
or
mov
pop
dec
inc
or
cmp
xor
out
push
repz
sub
xchg
lret
stos
neg
dec
ror
rcrb
out
pop
stos
push
div
scas
fsubrs
xchg
adc
cmpsl
incb
pushl
mov
inc
insl
ss
lcall
int3
imul
dec
inc
mov
add
pop
mov
add
out
sub
sub
xlat
sub
jle
js
insl
mov
out
push
cmpl
and
lds
xorb
daa
repnz
test
dec
jecxz
cmp
sub
mov
add
and
insl
and
add
cwtl
cmp
in
fnstsw
push
or
jmp
pop
jae
push
mov
sbb
stos
das
outsl
insb
shll
push
sub
sub
xor
adc
xor
int3
adc
rolb
pop
xchg
pop
out
outsb
in
push
fwait
ja
xchg
pushf
sub
js
push
sbb
pop
adc
jmp
mov
xlat
les
mov
adc
or
dec
add
push
xchg
adc
stos
inc
push
inc
cltd
fcomps
in
sbb
mov
push
sbb
in
ja
mov
or
xor
ficompl
fwait
sbb
incb
cwtl
rolb
jb
xor
and
dec
dec
push
push
cltd
shrl
out
add
jle
sbb
or
ss
out
popf
in
inc
out
stc
push
mov
mov
adc
shll
pop
or
lock
cmp
mov
dec
sbb
sahf
mov
ljmp
adc
fcoms
je
and
icebp
fmuls
out
test
imull
adc
xor
clc
push
dec
in
xor
lcall
movsb
jbe
push
push
int
test
popa
fisubrs
adc
xchg
and
mov
aas
orl
inc
mov
loopne
loope
push
push
rcll
incb
shl
dec
mov
push
add
and
ret
cmp
dec
jae
jecxz
sarb
sahf
sar
roll
sti
adc
and
xor
inc
push
mov
push
or
dec
lahf
inc
add
pop
arpl
pop
mov
imul
std
push
loop
jle
popa
mov
push
inc
lods
mov
sub
add
ret
sub
mov
lods
xor
ljmp
cmpsl
in
cmp
shll
out
pushf
adc
mov
lock
lods
xchg
adcb
mulb
pop
cltd
lds
mov
call
sbb
cmp
aad
ja
lods
sti
xchg
pop
or
xchg
mov
push
ret
push
ret
adc
insl
mov
test
inc
pushl
mov
clc
ljmp
inc
rorl
in
aad
fbstp
fs
fmuls
xor
test
mov
sarl
adc
inc
int3
or
xchg
gs
outsb
mov
test
sbb
jo
sub
adc
pop
stos
dec
mov
adc
or
cmp
sbb
test
pop
dec
xor
fisubs
clc
cmpsb
in
adc
cmpsl
add
jg
ja
sub
icebp
pop
sub
mov
mov
mov
in
and
fnstenv
mov
shrl
jae
cmp
ret
aam
enter
out
jno
cmc
mov
xchg
ss
sbb
cmp
adc
xor
jg
stos
test
mov
mov
hlt
jbe
fsubs
sahf
int3
sbb
inc
pop
nop
push
pusha
daa
fdivrl
pop
jnp
inc
divb
nop
cmc
jg
sub
pop
lret
cmp
pop
mov
addr16
jae
mov
stos
jg
mov
jns
bnd
or
imul
dec
pop
jno
inc
lcall
or
sub
lock
imul
cmp
mov
cmp
jmp
or
jo
pushf
mov
dec
in
movsb
int
xor
pushl
mov
test
pop
test
mov
in
xchg
aam
ss
insb
insl
adc
ss
jge
cs
and
imul
inc
push
inc
adc
xor
ret
aas
mov
mov
imul
adc
xchg
sub
pop
add
jae
jns
shl
cmp
fidivs
mov
cmpsl
xchg
cwtl
mov
add
pop
xor
xor
pop
push
les
leave
xor
mov
in
pusha
xchg
nop
mov
les
inc
mov
adc
xchg
into
mov
int3
test
popa
adc
addr16
pop
mov
push
mov
mov
sbb
ja
cmp
xor
jge
push
dec
adc
inc
out
adc
cmp
push
mov
jp
shr
ja
int3
add
mov
pop
imul
cmp
lock
daa
cs
in
adc
dec
lcall
sub
hlt
xsha1
xor
xor
adc
lret
adc
add
lods
popa
xor
push
cmp
movsb
xor
and
dec
mov
aad
outsb
mov
push
ds
cmc
shll
imul
lahf
fxch
pop
mov
jnp
and
aas
jae
sub
out
cmp
int
movsl
dec
jg
and
adc
inc
in
repnz
or
lret
pusha
imul
lea
stos
jecxz
incl
clc
scas
push
sbb
cmovno
mov
int
add
push
mov
les
in
js
leave
adc
sbb
mov
dec
jns
imulb
adc
dec
or
mov
add
and
pusha
int3
mov
scas
test
mov
in
mov
mov
xchg
xor
je
movsl
lds
fwait
iret
ss
xchg
jmp
enter
mov
test
cltd
in
fnstenv
out
pop
rorl
shlb
or
icebp
or
or
sti
fld
mov
rcrb
sub
cmpsl
and
pop
rorb
pop
push
lret
sbb
sub
sub
daa
dec
jg
flds
cmp
popa
jle
fsubrs
leave
leave
iret
jg
add
or
iret
mov
jae
push
into
mov
nop
mov
xor
push
or
xor
push
vpmadcswd
sub
push
inc
xchg
inc
mov
cmp
iret
sbb
xchg
adc
movsl
fwait
rcll
les
mov
and
mov
imul
xchg
inc
aam
js
sbb
jp
add
cltd
xlat
mov
popf
ja
jae
sti
mov
stos
add
push
mov
xlat
sbb
sub
add
adc
fbld
push
rorl
xchg
fcomps
rorb
pop
data16
dec
pop
jae
cltd
push
sahf
gs
xor
push
imul
lods
mov
insb
or
pop
jo
popf
push
or
rolb
push
pop
or
dec
inc
fidivl
jl
insb
mov
fcoms
das
aas
lcall
push
repz
xchg
aam
loope
cld
test
cmp
xchg
pop
fsubr
pop
clc
outsl
mul
or
mov
add
push
xor
jge
xor
rep
lret
push
repnz
push
ret
shll
fs
int3
call
jecxz
dec
lods
fwait
sbb
add
push
lcall
xchg
pop
insl
mov
mov
popa
mov
push
mov
dec
pushf
in
mov
pop
or
and
pop
cmpsb
and
ds
pop
dec
je
dec
and
call
xchg
jg
mov
mov
jnp
mov
adc
subb
adc
test
cli
sti
sbb
popl
negl
arpl
pop
les
inc
add
mov
xchg
xchg
sub
add
cld
insb
adc
pop
sbb
fildl
insl
insb
add
daa
xor
cmp
inc
popa
cmp
mov
xor
fwait
push
mov
in
out
cmpsl
out
data16
fisttpl
mov
in
cltd
fs
insl
scas
idivl
adc
xlat
das
movsl
push
int
or
xor
imul
mov
add
push
inc
push
sti
mov
push
sti
cmp
mov
mov
mov
decl
stos
xchg
jne
pop
jb
pop
addr16
dec
cmpsb
and
mov
addr16
aam
jl
mov
repz
pop
xchg
pushf
xor
ret
dec
pop
out
mov
outsl
push
outsl
hlt
cld
push
fs
xor
cmpl
leave
jecxz
lds
add
js
loope
movsl
scas
pop
fs
aas
and
sbbb
dec
mov
fidivl
cs
cmp
mov
cmpsl
cld
push
xchg
adc
xor
gs
arpl
pushf
cmc
ss
dec
cmp
mov
mov
mov
push
out
mov
scas
sbb
repnz
faddl
hlt
xor
inc
push
sbb
cmp
inc
aam
mov
insl
in
mov
cmp
jp
xchg
movsb
mov
add
push
cmp
lea
ror
shrl
adc
movsl
lahf
mov
pop
add
loopne
xlat
outsl
pop
pop
xor
xchg
adc
es
mov
cmp
adc
mov
and
movsl
push
mov
lret
stos
mov
sub
aam
mov
mov
dec
add
cmp
mov
inc
and
sti
in
xor
pusha
dec
and
jo
xor
pop
jp
int
paddusb
nop
cmpsl
push
mov
sti
repz
pop
imul
mov
jle
jle
repz
mov
mov
adc
pop
jp
inc
bound
pop
push
repz
cmc
inc
pop
sub
adc
xchg
in
adc
xchg
lahf
dec
movsl
loopne
mov
lock
pop
jle
sbb
repnz
in
cmp
cmp
stc
cmp
xor
xor
test
xchg
movsl
mov
mov
out
or
rol
cmp
sar
or
jle
repz
testl
push
enter
mov
scas
sub
fmul
mov
dec
sub
xor
sbb
jns
idiv
cmpsl
cmp
das
data16
out
add
out
pop
arpl
xor
push
test
push
rorl
leave
add
xchg
movsl
lds
ja
sub
imul
rcll
cmp
adc
pop
frstor
dec
out
and
faddl
js
and
inc
dec
inc
lds
jb
mov
jl
sarb
mull
adc
cmp
cmp
sub
test
mov
push
into
mov
repnz
repnz
das
inc
mov
fcmovne
xor
xchg
xlat
inc
lock
mov
and
out
pop
cmp
inc
xchg
pushf
mov
dec
push
inc
loop
insl
dec
faddl
rcl
pop
and
xchg
jg
test
mov
and
push
push
adc
movsl
shrb
dec
dec
mov
sbb
cmp
jo
int3
jnp
pop
sbb
mov
aad
jns
ja
movsb
xchg
push
or
xor
and
arpl
pop
dec
es
popa
ds
pushf
xchg
stos
xor
xchg
xchg
or
mov
outsl
icebp
pop
cmp
xchg
xchg
and
xor
repnz
arpl
lea
outsb
jg
dec
xor
inc
jae
lret
repnz
jns
cwtl
inc
in
cld
addl
mov
jns
jp
xchg
stos
add
stos
mov
mov
cmp
cmp
push
scas
mov
push
or
cmpsb
sub
pop
inc
ret
cwtl
mov
adc
movsl
movsl
test
subb
out
xlat
popa
jp
xor
push
adc
inc
xchg
scas
jo
dec
mov
fucomp
jae
mov
shl
out
js
int
rolb
js
jne
cmp
sar
push
sti
mov
int3
jmp
jbe
xchg
adc
pop
fs
out
lcall
mov
adc
cmp
pop
add
sti
cmp
jns
int3
aas
sahf
mov
lahf
sbb
sti
inc
add
out
aam
lock
std
lock
push
mov
pop
dec
mov
in
in
pop
xor
inc
cmp
push
xor
xchg
add
imul
push
popf
les
ljmp
mov
jle
cmp
add
or
dec
ljmp
movsl
ret
sarl
insl
dec
lds
mov
cmp
mov
movsb
lret
mov
jb
iret
sub
cs
orb
jo
xor
adc
sbb
ja
cmpl
orl
js
and
xor
pop
add
push
inc
dec
xlat
insb
mov
lret
push
sti
notl
mov
xorb
call
fdivrl
loopne
scas
cmp
loopne
mov
mov
out
shll
inc
mov
dec
inc
or
insl
scas
addr16
dec
dec
call
mov
fiaddl
push
sub
outsb
inc
leave
mov
inc
xor
shrb
or
test
push
jl
jg
sub
or
sahf
jns
push
data16
sbb
iret
and
scas
dec
fsubs
sbb
outsb
lock
xchg
fistpl
dec
jo
mov
jl
push
shlb
add
in
clc
fisttpl
int
mov
jb
mov
cs
mov
push
pusha
push
push
rcrl
or
icebp
or
mov
inc
fldenv
ficoms
rcll
lret
jp
loope
xor
lods
adc
out
shlb
in
adc
cmp
sub
adc
lahf
icebp
jmp
jmp
pop
ss
sbb
cmp
into
dec
sbb
mov
test
push
imul
stos
testl
and
out
lea
mov
js
xchg
sub
test
xlat
daa
arpl
mov
dec
ret
jb
insl
pusha
cmp
mov
pop
and
mov
and
es
cmp
push
mov
bound
mov
mov
push
jg
shll
shlb
adc
push
mov
fdivs
cwtl
std
push
orb
xor
mov
mov
or
clc
aas
in
dec
and
jecxz
push
jnp
test
aam
icebp
push
pop
jecxz
mov
lret
rorb
adc
xchg
xor
sbb
cli
fbstp
test
mov
aas
mov
cli
xor
push
ds
movsb
xor
ljmp
mov
fisubrl
outsb
xor
jge
fldl
dec
inc
pop
aas
xor
cmp
aaa
je
fsubrl
add
xchg
stc
push
test
rcr
test
pop
or
inc
out
jne
clc
fstpt
int3
xchg
jnp
jp
jne
adc
enter
mov
scas
andl
testb
out
sub
adc
jae
xlat
mov
imul
in
push
xchg
pop
mov
xor
mov
clc
xchg
orl
push
xor
sub
orb
int3
push
cld
mov
lds
jle
xchg
push
push
jl
xchg
xlat
sbb
and
loope
push
into
xor
sbb
lcall
mov
jecxz
mov
stos
cmp
sub
es
hlt
out
xchg
xchg
pop
roll
xor
push
mov
addl
in
js
sub
cli
in
inc
mov
inc
sub
xor
push
jae
pusha
xor
std
dec
jg
mov
mov
adcb
mov
enter
push
xchg
scas
xchg
inc
dec
rolb
dec
movb
dec
dec
pusha
xchg
xchg
push
loope
rorb
inc
mov
aaa
fildl
inc
into
imul
sub
push
enter
add
fimuls
mov
arpl
jns
adc
and
or
pop
mov
in
sub
mov
jl
dec
inc
push
inc
push
adc
push
adc
or
nop
jnp
dec
orl
jnp
sub
inc
pop
fistpl
insl
sbb
aam
imul
pop
mov
jge
mov
gs
adcb
shll
imul
insl
iret
jl
loopne
jb
popf
pop
sbb
in
dec
pop
stos
test
mov
jns
xor
shll
add
mov
mov
scas
daa
mov
xchg
jne
adc
add
lahf
inc
daa
jo
mov
loop
fmull
sbb
loopne
and
cmpsb
dec
roll
push
mov
sub
sahf
cmp
xor
inc
sahf
xlat
outsl
sbbl
enter
sbb
pop
fnstenv
int3
ds
cli
fs
xor
sbb
jbe
pop
imul
test
xor
mov
cmpb
loop
enter
cmp
test
sbb
jae
rcrl
inc
dec
insb
xor
mov
mov
out
cmp
mov
inc
pop
ss
cli
data16
xor
mov
xor
sub
scas
pusha
mov
or
and
aas
jno
and
stos
loopne
mov
jnp
pop
in
xchg
popa
icebp
mov
pop
movl
imul
inc
jl
rcrl
adc
and
lea
in
xor
mov
pop
pop
mov
jp
mov
mov
lock
push
test
lock
pop
mov
and
bound
inc
xor
popf
and
xor
inc
lods
mov
addl
popa
imul
push
add
loop
and
cmp
shlb
addb
outsb
jg
int3
aad
or
jmp
inc
hlt
or
shr
add
je
outsl
ror
es
cmpsb
add
test
stos
loopne
adc
jae
ja
pop
in
pop
es
roll
daa
inc
xor
call
or
sub
std
dec
cmp
fildl
push
or
shl
pop
loopne
ret
mov
mov
testl
xchg
cmpsb
fs
sbb
jmp
enter
js
push
ret
pop
shlb
lods
clc
in
mov
mov
mov
dec
mov
test
call
pop
fdivrs
nop
es
sub
sbb
push
ljmp
or
insb
and
adc
stc
sbb
and
jl
out
inc
pop
popf
test
aaa
ds
push
mov
lcall
addr16
xor
scas
xor
inc
pushf
je
lahf
push
xchg
fldenv
cmp
movsl
adc
sub
push
decl
xchg
cmp
mov
dec
xchg
mov
push
add
adc
clc
enter
out
hlt
or
pusha
pop
adc
stos
add
lret
sbb
es
push
and
cmpsl
jmp
dec
mov
sub
jmp
mov
and
push
mov
test
cmp
daa
lret
mov
mov
sbb
mov
mov
ret
loop
and
sbb
cmp
xchg
pushf
gs
loop
or
lret
mov
cmp
cli
das
cmpsb
inc
lods
cmpb
jne
pop
loope
cmpsl
negl
into
push
adc
and
xor
add
inc
sbb
fcoml
xchg
jns
jo
xor
jns
add
sbb
shlb
or
pop
pop
inc
xchg
inc
leave
subb
call
jo
negb
mov
dec
aaa
orl
mov
jno
sbb
cs
xor
lds
addr16
sbb
fbld
arpl
add
and
jge
roll
mov
loope
xchg
test
mov
fcoml
adc
sub
adc
in
jl
push
push
insb
sbb
ljmp
jo
cli
pop
inc
pop
addl
pop
pop
movsb
stos
jns
lods
xchg
clc
sub
push
fidivs
cs
flds
fisttpl
jmp
cs
cwtl
sub
dec
repnz
or
pop
out
or
pushf
push
push
jl
in
dec
cli
xor
inc
pop
and
xor
xlat
or
sahf
outsl
inc
cmp
scas
pop
stos
add
cmp
mov
inc
add
xchg
mov
les
push
sub
push
popa
mov
ret
jmp
sbb
adc
aad
test
adcb
fistpl
push
enter
shrl
or
int3
mov
jno
call
test
mov
shll
andl
ja
icebp
sarb
leave
mov
cmp
pop
aad
jle
hlt
icebp
jae
adc
into
shll
and
iret
mov
outsl
in
mov
std
mov
mov
jl
mov
imul
divps
je
fidivrs
hlt
jno
cmp
inc
cmp
imul
cmp
roll
stos
stos
jnp
xchg
mov
js
mov
sbb
or
mov
out
jmp
push
mov
sbb
iret
stc
dec
mov
pop
mov
cltd
xor
push
push
sub
adc
leave
pushf
push
out
adc
add
stc
jmp
inc
mov
pop
testl
or
cmp
in
sub
push
xchg
out
inc
or
xlat
adc
fwait
cs
inc
inc
aas
jbe
pop
pop
nop
pop
sbb
mov
push
lods
mov
in
lcall
mov
loopne
pop
mov
cmp
movsl
sub
les
push
push
mov
lret
hlt
pop
repnz
ficompl
jmp
inc
je
enter
ss
jbe
push
jnp
sbb
jp
jmp
insb
xchg
xchg
ret
pop
dec
add
inc
je
xchg
fisttpl
int
jnp
dec
sub
pusha
lahf
mov
adc
xchg
nop
clc
mov
clc
sub
in
or
adc
rcll
xchg
popf
adc
jnp
nop
les
pop
fildll
js
scas
mov
nop
cld
movsl
fsts
mov
lcall
jno
pop
std
stc
cmp
mov
sub
jg
jnp
lret
dec
pop
test
xchg
and
sub
in
pop
push
mov
push
xor
andb
inc
mov
int3
mov
lock
sub
or
int
aad
std
pop
add
dec
sub
imul
js
mov
cmp
add
sti
shll
sarb
pop
sbb
cmpsb
pop
jne
mov
pushf
sbb
inc
jge
call
fnstenv
loope
push
and
loopne
cmpsl
outsl
ficompl
pop
push
or
jmp
scas
jg
mov
xchg
gs
xchg
mov
in
int
in
subb
insb
pop
dec
movsb
jle
sbb
in
or
mov
sub
fisttpl
jle
jbe
inc
pop
pop
sbb
shll
inc
ljmp
mov
push
psllq
imul
mov
jmp
pusha
add
pop
xlat
pop
cwtl
inc
mov
lods
jbe
aam
and
xchg
imull
lahf
xor
out
ficomps
test
and
inc
jno
adc
push
add
xorb
jge
jb
push
cli
and
std
and
pop
ficoml
or
cltd
xchg
mov
push
cmp
or
daa
cmp
push
add
pop
shlb
xchg
fsubrl
push
lods
inc
lret
dec
inc
mov
enter
iret
inc
mov
shll
sbb
mov
shrb
push
aaa
jb
stos
rcr
mov
fidivrs
mov
adc
add
cli
popf
jbe
mov
mov
jp
inc
in
sub
in
mov
pop
mov
movsb
stos
insl
and
stos
mov
rcll
push
cmp
ljmp
mov
jl
mov
pop
fnstenv
stc
cld
fisttpl
cltd
mov
jge
scas
sarb
test
or
stc
out
pop
je
add
das
insl
jge
and
dec
shll
xchg
and
add
sahf
cmp
cmp
pushf
outsl
lret
jno
jae
aas
data16
es
xchg
and
hlt
pop
xor
stc
mov
cmp
mov
out
repz
lret
test
cltd
cmp
outsb
dec
test
mov
push
cmp
adc
mov
push
insl
dec
pop
mov
addb
mov
push
mov
mov
xchg
iret
xchg
lock
aaa
cmpsb
outsb
push
lock
sarl
pop
or
or
loop
pop
pop
nop
cli
add
mov
into
les
das
and
outsb
in
dec
aam
add
xchg
adc
mov
arpl
int3
mov
dec
mov
lods
mov
xchg
cmpsl
sbb
dec
jnp
das
add
stos
test
push
jle
lcall
push
aam
and
push
test
cmp
out
mov
int3
stos
enter
mov
xor
add
xchg
cmp
add
mov
addr16
jno
inc
mov
jb
or
fnstenv
leave
sbb
dec
sub
aaa
sti
pop
mov
push
mov
pop
in
inc
mov
sbb
jbe
test
push
mov
dec
push
mov
sahf
clc
scas
fdivrl
sahf
js
lods
push
lcall
xchg
lods
jns
stc
fbstp
std
dec
mov
ja
push
cli
lds
int
js
cmc
xchg
cmp
rorl
sub
stos
or
iret
cwtl
sahf
lods
popf
roll
or
xchg
push
push
jmp
mov
in
mov
daa
xchg
ljmp
into
loope
mov
sub
mov
inc
out
sub
push
pop
xchg
adc
jbe
mov
insl
imul
push
repnz
repnz
sub
push
xor
dec
mov
stos
xchg
pop
loope
outsl
cltd
fcoml
mull
mov
pop
fdivl
sbb
and
sbb
jns
push
les
mov
fdivr
adc
in
fcmovb
push
sbb
jns
mov
push
push
icebp
push
jne
aas
mov
dec
addr16
push
xor
mov
adc
in
mov
push
cmp
ljmp
imul
movsb
notl
mov
jnp
xor
adc
and
lcall
xchg
mov
fisubl
cmp
stos
xchg
cltd
cltd
sub
pusha
jae
mov
lret
bound
mov
fwait
cmc
cwtl
fisttpl
popl
xor
fisttpl
xchg
repz
cmp
jae
push
hlt
push
lret
stc
cmp
filds
movl
mov
leave
pop
rcrb
adc
push
aas
xchg
lcall
push
in
and
cmp
lahf
and
mov
in
mov
cmp
imul
pop
pop
out
pop
sti
faddp
sbb
lds
repnz
leave
jns
add
mov
insb
and
pop
jecxz
push
push
mov
mov
int3
push
jp
mov
adc
ret
sub
sub
les
fstpt
fldcw
sbb
fisubs
fsubrs
jl
and
pop
jmp
iret
fimuls
mov
sbb
mov
dec
adc
dec
cmc
sarb
mov
dec
jnp
pop
sub
add
jmp
fdivs
or
fbstp
cli
into
xchg
jnp
jno
sbb
lea
cmp
aas
jne
psraw
arpl
imul
int
sahf
xor
int3
adc
mov
imul
loopne
ja
into
xor
jb
aad
xor
out
test
xchg
fnstenv
mov
cmp
pop
push
das
mov
stos
push
and
dec
xchg
arpl
out
xor
lock
ljmp
ret
xchg
push
sbb
push
cwtl
cmpsb
cmp
ss
inc
mov
and
dec
dec
jl
loop
pop
and
pop
xchg
out
inc
sub
outsb
mov
movsl
push
push
lods
jge
dec
cld
xor
inc
xlat
test
rcl
pop
repz
and
or
movsb
jbe
sbb
mov
popf
das
call
xchg
and
sub
or
lcall
in
insb
or
xor
dec
lcall
sarl
into
dec
xor
cmpsl
call
jmp
mov
cmp
shrb
add
ljmp
lods
cld
mov
dec
or
push
or
fimull
lock
pop
pop
or
pop
adc
pop
scas
pop
jno
insl
xor
xchg
pop
jecxz
pop
jmp
fiadds
push
cmp
sbbb
ret
add
cmp
mov
mov
fsubr
stos
dec
sbb
rcrl
les
xchg
test
je
iret
adc
movsl
shlb
repnz
or
fs
in
cmp
orb
push
cmp
into
ljmp
testl
adc
data16
add
es
clc
jecxz
mov
in
xor
or
cmp
pop
mov
dec
in
fs
hlt
fdiv
inc
inc
das
xor
ss
lret
cli
shll
mov
sbb
jne
adc
add
jecxz
xor
lock
or
mov
testb
add
loopne
lock
loopne
adc
lahf
adc
xchg
das
sahf
jno
push
iret
sbb
adc
dec
shl
rorl
lods
idiv
jae
pop
inc
inc
sbb
jnp
inc
jo
popa
sub
cld
adc
lret
movsb
aaa
cmp
mov
push
jae
imul
outsb
repnz
dec
jno
pshufw
mov
jnp
icebp
jae,pn
add
mov
loop
xor
fldcw
insl
mov
loop
int3
mov
leave
pop
out
stc
mov
push
fnstenv
iret
cmp
adc
les
loope
lds
xor
popa
sbb
repz
sub
cmpl
rcll
je
inc
sub
mov
pop
xor
fsts
cmc
int3
iret
add
jmp
pop
and
add
push
repz
and
sub
mov
push
sub
or
popf
pop
jb
jb
sbb
pop
pop
mov
jecxz
push
sub
sbb
cmp
out
arpl
sub
inc
dec
inc
sub
inc
sti
sub
iret
jne
das
mov
mov
push
dec
ljmp
out
cmp
sbb
nop
mov
xlat
cmc
lcall
outsb
scas
mov
or
xor
sbb
add
incl
adc
and
clc
mov
icebp
fsts
push
test
inc
mov
inc
cwtl
xorl
or
aam
fldenv
or
xor
jg
fwait
pop
mov
mov
and
sbb
out
adc
push
js
in
iret
lret
mov
movsb
jl
xchg
mov
outsl
xor
movsb
popl
push
dec
mov
pop
mov
divl
stos
std
mov
push
xchg
mov
repz
pop
pop
pusha
lock
and
cltd
sbb
push
imul
push
and
mov
shrl
stos
les
jle
xchg
arpl
cmp
sbb
inc
arpl
xchg
and
or
push
sub
cmp
scas
and
mov
insl
xchg
insb
bound
jae
cs
bnd
or
je
jl
jge
and
and
shrl
popa
mov
push
in
cmp
stos
sbb
test
in
jg
dec
arpl
das
or
sti
cld
ljmp
lods
fldt
xor
mov
jmp
in
xchg
test
loope
sub
into
nop
aam
and
ret
cmp
mov
jmp
pop
inc
jge
mov
adc
leave
rorb
into
fs
jmp
xchg
jno
xchg
xchg
lods
imul
cs
popa
or
mov
fldcw
mov
imul
mov
lret
xchg
rorb
jnp
outsb
jmp
mov
std
xor
mov
mov
jo
lock
pop
xchg
scas
cld
xchg
jb
add
inc
pushf
aam
out
mov
dec
mov
cltd
andl
fstpl
push
ret
mov
aad
repz
or
adc
dec
jge
rcrl
movsb
xor
dec
xor
in
jb
call
sub
or
jmp
rolb
fsin
sahf
stc
sar
dec
adcb
lock
xchg
fs
out
jno
dec
and
pop
ja
mull
cmp
push
xchg
mov
sub
inc
orl
cmp
sbb
mov
add
xor
mov
xor
insl
mov
or
or
sub
push
gs
in
push
sbb
xor
rclb
pop
xchg
cmp
mov
clc
lods
jle
mov
mov
sbb
stos
pusha
xor
jl
pop
outsb
mov
ss
das
outsb
lods
inc
outsb
pusha
in
mov
xchg
ret
fisttpl
cltd
jb
pop
dec
push
jmp
push
jmp
sbb
adc
hlt
call
outsb
sbb
aam
sbb
jo
mov
or
ss
cmp
mov
xchg
scas
dec
or
in
jb
pop
pop
xchg
int
or
jmp
pop
js
mov
lock
add
sub
push
mov
test
scas
xor
and
enter
jl
mov
enter
rorl
lea
cmp
jmp
mov
cmp
or
sub
fwait
test
lret
pop
fsubrs
sub
adc
jb
andb
push
mov
sub
push
aas
pop
outsl
push
aad
lds
jge
cwtl
add
jecxz
repz
lcall
and
das
sbb
add
sti
fwait
or
inc
add
sub
mov
leave
test
adc
inc
xchg
mov
cs
pop
out
lds
lods
cmp
cmovb
xchg
clc
inc
adc
cmp
mov
and
shlb
mov
mov
aam
je
scas
pop
sti
cs
fs
mov
add
xchg
pop
imul
ret
or
sbb
les
cltd
in
je
cltd
xor
inc
push
or
xor
and
repz
push
sub
loope
lds
lock
movsb
stos
push
loope
fs
mov
pop
shl
es
push
pop
jp
iret
or
add
sbb
jno
idiv
dec
dec
sarb
sbb
dec
push
fidivrs
in
jae
fimull
ljmp
adc
adc
xor
rorl
sub
mov
iret
repz
jnp
jnp
pop
mov
push
out
in
mov
sarb
lret
imul
stc
xchg
ficompl
cmc
or
stos
loope
dec
push
fnstsw
adc
add
stos
mov
push
push
inc
sbb
arpl
inc
adc
and
sub
add
pop
and
imul
daa
int
sub
mov
sub
popa
fists
xchg
xor
jo
mov
mov
gs
xchg
jg
jle
mov
rolb
jno
xchg
pop
repz
cmc
xchg
pop
push
pop
imul
shll
orb
sahf
mov
outsb
mov
mov
add
leave
xchg
sub
sti
push
xchg
fstl
adc
sbb
add
in
loopne
mov
fbld
nop
mov
stos
loope
dec
lret
int3
arpl
aam
lods
push
dec
rorb
cmp
mov
cmp
test
sub
cwtl
inc
xlat
das
enter
es
sarl
testb
dec
sbb
xchg
ret
jg
push
or
dec
stc
mov
into
mov
sub
js
mov
mov
lea
jnp
pop
ds
mov
mov
ss
mov
fdiv
dec
jno
add
adc
cltd
clc
cld
lahf
je
mov
xor
mov
stos
hlt
incl
imul
dec
ja
adcl
fildll
test
lock
mov
xor
call
int
lcall
cmp
call
inc
or
push
xchg
loopne
xchg
int
push
icebp
clc
sub
add
mov
aaa
clc
push
sbbb
fidivs
fisttpll
in
pop
cmpsb
sbb
sub
movsl
or
daa
mov
push
mov
push
loop
insl
push
pop
jae,pt
mov
jge
pop
jge
add
aad
cld
insl
push
add
mov
shrb
outsl
xchg
pop
jle
loope
je
cld
ret
into
ds
hlt
cmp
lock
mov
or
pop
pop
enter
push
sub
cmp
or
scas
rcll
scas
cmpsl
sub
pushl
pop
sub
sbb
dec
lret
mov
add
lds
cmp
mov
fsqrt
pop
loop
or
dec
cmp
sub
loopne
in
inc
push
xchg
mov
ss
aad
out
sbb
aad
push
mov
push
cmp
inc
sar
dec
push
mov
lds
add
in
jmp
repz
mov
std
mov
outsl
popa
adc
imul
mov
lods
insl
push
in
iret
cmp
sbb
push
lcall
jae
shll
and
pop
pop
xor
jno
inc
cwtl
jno
xor
dec
cli
nop
sarl
jnp
mov
add
jg
sub
adc
pop
fs
imul
mov
aaa
xchg
fdivrl
jno
mull
adc
or
shrb
push
push
adc
mov
push
sub
sahf
rolb
or
mov
repnz
out
out
and
adc
push
pushf
lret
jo
sbb
stos
lcall
scas
fdivrs
fmulp
push
xchg
scas
addb
xchg
pusha
dec
test
lret
subl
adc
aad
and
mov
popa
daa
out
test
lcall
cltd
jmp
cmp
push
xchg
loope
xchg
push
lea
cmp
fldenv
jmp
pop
xor
hlt
add
nop
imul
sarl
push
cmp
aaa
lods
je
xchg
add
adc
bnd
mov
and
cmp
enter
pop
mov
in
stos
jge
push
mov
cmp
shlb
or
mov
mov
cwtl
jmp
fldenv
lods
mov
ret
add
or
xor
sbb
out
push
repz
push
lea
jo
pop
aad
rclb
jle
push
mov
test
jmpw
out
xor
or
loopne
pusha
or
test
mov
add
xchg
aam
push
pop
cmp
test
inc
adc
pop
add
add
aaa
aas
lret
sarb
xor
jge
jmp
push
mov
xchg
mov
test
jb
sahf
cmpsl
xchg
loop
push
fadds
dec
add
push
push
push
mov
scas
and
imul
icebp
xor
daa
movsl
xchg
jno
hlt
sbb
push
adc
repnz
shrl
sub
and
imulb
das
in
shll
aaa
imul
rolb
jmp
fsubrl
push
mov
or
adc
cmp
mov
cs
add
mov
daa
adc
jno
xor
jae
jae
pusha
in
cmp
xchg
cmpsb
popa
adc
icebp
fnstcw
ljmp
mov
loopne
lea
imul
icebp
or
push
insb
cmc
or
mov
sub
adc
push
inc
das
fs
test
jg
mov
xor
push
jne
xor
aad
out
adc
cmpb
cmc
or
mov
cmpsb
adc
call
dec
lahf
stos
es
out
mov
movsl
test
pusha
jns
jmp
ljmp
nop
aam
inc
out
sbb
push
and
ja
jae
mov
les
fwait
xchg
loop
stc
roll
fwait
push
push
imul
pop
ret
push
les
push
jmp
int3
pop
call
out
inc
jnp
mov
jmp
inc
out
pop
cwtl
repnz
push
xor
fnstcw
cli
inc
pop
movl
push
je
lcall
cmp
mov
daa
or
pop
pop
nop
sti
and
outsl
xchg
pop
xor
inc
mov
jg
repz
pop
movl
js
enter
add
ficoms
and
lret
shrb
loopne
out
jns
adc
stos
lea
imul
lods
cmpsl
jmp
pop
mov
ljmp
cmp
outsb
mov
cmpsb
mov
out
stos
sahf
icebp
dec
push
jp
pusha
and
arpl
test
stos
decl
cmp
out
cmc
pop
adc
mov
push
pop
or
in
movsl
mov
aad
adc
xchg
and
push
sub
jmp
stos
stc
mov
mov
adc
mov
cmp
fdivr
jne
push
lahf
inc
xchg
mov
add
dec
addr16
push
shll
pop
or
pop
mov
out
dec
call
pop
fisttpl
test
std
js
fwait
mov
mov
rorb
sub
push
pop
int3
adc
sub
add
adc
sahf
js
orb
loopne
rcr
or
in
fisttps
ret
in
ret
pop
stos
sub
inc
push
cltd
xor
clc
int3
das
lcall
divb
push
xor
adc
mov
fldenv
sbb
in
mov
cmp
rcl
mov
mov
fcoms
lret
push
push
jae
jle
roll
popa
dec
pop
mov
ret
scas
mov
add
sub
mov
shrl
stos
aas
mov
sbb
pop
sub
or
mov
cmpsl
testb
fidivs
leave
cmp
pop
pop
mov
sbb
xchg
push
pop
jg
adc
test
movsb
shlb
mov
xor
mov
mov
imul
js
in
mov
stc
fs
mov
add
mov
rcr
xchg
dec
cmpsl
in
imulb
cmp
getsec
adc
ds
lcall
sub
test
scas
mov
enter
rolb
leave
add
and
cmpsb
pusha
shrl
rolb
lret
hlt
jmp
dec
mov
repnz
out
daa
cmc
jecxz
mov
imul
push
push
dec
ja
in
pop
jb
mov
repnz
popa
xor
or
fucomip
cmp
imul
mov
mov
or
mov
jae
jnp
push
lret
push
mov
xor
sbb
push
cmp
mov
inc
fcompl
imul
std
mov
jnp
adc
xor
aaa
popa
scas
adcb
mov
in
fimuls
das
and
cmc
negb
nop
mov
jne
mov
aas
and
mov
xchg
jl
inc
fiaddl
xchg
add
out
cs
pop
fs
roll
jge
test
add
cltd
jp
ja
ret
push
loop
jae
std
adc
sbb
xor
or
out
test
jo
sub
mov
pop
lock
aas
xor
mov
jo
pop
imul
test
hlt
loop
sbb
add
inc
ja
scas
aam
dec
sbb
dec
js
xor
jb
in
int
dec
xchg
pusha
fisubs
sub
mulb
cmp
and
jl
fucomip
lahf
sti
ds
sub
stos
mov
cmp
pop
adc
mov
in
addl
pop
push
stc
mov
xchg
mov
cmp
shll
add
lret
mov
mov
pushl
push
add
inc
pop
pop
data16
pop
cmp
shl
scas
add
ret
mov
pop
repnz
notl
push
mov
sbb
jno
push
xchg
sbb
loopne
add
mov
add
sub
enter
daa
cmc
push
xlat
imul
add
inc
lret
data16
and
int3
sbb
mov
outsl
dec
cli
adc
jle
out
push
mov
aas
cmpsb
scas
jmp
lock
xor
lods
cld
inc
sbb
sahf
mov
and
mov
or
pop
and
cmpsb
call
pop
push
cmpl
push
fst
ret
lea
sbb
inc
or
adc
rcrl
sbb
lret
adc
add
leave
add
lea
mov
lret
ucomiss
cmp
inc
mov
xchg
test
xlat
jg
pop
cltd
int
fs
sets
pop
ss
repz
jo
dec
addb
test
aas
or
iret
dec
xchg
jns
lods
or
push
sub
nop
das
cmp
inc
push
divl
in
in
mov
je
push
cmp
pop
test
lret
sbb
out
shrl
xor
sbb
into
xor
pop
test
pushf
sub
fistpl
push
subb
mov
cmp
cmpsb
ds
xor
out
inc
cmp
push
test
stc
cmp
movsl
mov
fists
sub
aam
test
mov
inc
aam
andb
rolb
data16
mov
inc
std
and
leave
sbb
push
cmp
fmull
out
pop
scas
clc
cmpsl
leave
movsb
out
stos
cmp
sbb
inc
mov
call
mov
in
add
lea
jo
fwait
into
sbb
mov
mov
out
fs
outsb
fstps
xchg
or
movsl
scas
mov
push
mov
pusha
xchg
xorb
sbb
lods
pop
inc
xchg
add
push
xchg
or
movsl
mov
sub
cmp
xor
sbb
xchg
mov
insl
or
mov
dec
add
jae
jmp
jne
out
lret
mov
cld
add
xchg
mov
aad
iret
outsb
jmp
rorl
xor
cmc
vaddsd
and
jecxz
inc
mov
xchg
mov
mov
inc
sub
or
adc
jle
and
jge
xor
out
dec
xlat
sti
fsubrl
mov
call
sbb
xchg
xor
neg
lret
add
clc
add
mov
xor
jns
xor
adc
xor
sbb
pop
out
dec
add
icebp
insl
mov
jne
pop
add
add
and
jnp
or
fsubrs
loop
mov
lods
push
push
clc
int
aas
fucomp
loopne
or
jmp
or
mov
lea
nop
scas
inc
adc
mov
sbb
scas
std
jno
test
xor
dec
aas
xchg
out
adc
and
cmpsb
cmp
iret
lods
ret
mov
mov
and
sub
lcall
sbb
push
mov
addb
xlat
xchg
mov
lods
dec
adc
jecxz
or
xchg
in
xlat
addl
aam
fidivs
push
repnz
mov
lret
fwait
jnp
jns
mov
sbbl
fsub
push
jno
enter
adc
testl
inc
inc
sbb
adc
loope
mov
dec
sub
rorl
loope
int
ret
lea
data16
mov
mov
scas
aaa
xor
lock
mov
lret
pop
or
sub
out
das
push
cmp
lret
fwait
lock
mov
push
fadd
pop
xchg
xchg
std
sbb
xor
pop
adc
test
push
jnp
and
popf
clc
stos
dec
test
pop
scas
jbe
je
jle
mov
pop
enter
add
pushf
pop
push
push
lock
icebp
jne
pop
in
sub
shrl
adc
cmpb
es
pop
mov
adcl
inc
outsl
dec
cmp
imul
ret
sarl
or
cmc
roll
sub
imul
xor
fwait
pop
push
push
dec
add
push
dec
out
pop
sarb
xlat
xchg
fstps
mov
xor
mov
mov
adc
sbb
pop
lret
lret
std
lahf
push
loope
dec
jp
sahf
dec
jne
jb
xlat
mov
add
fsubs
daa
sarl
pop
cmp
rcrb
sub
inc
mov
fisubl
mov
dec
inc
sub
add
test
mov
or
cmpsl
scas
es
ss
in
xor
xor
and
pop
negl
add
mov
aam
adc
call
int3
mov
sarb
or
cli
jecxz
shlb
cld
push
jge
push
imul
scas
pop
inc
out
mov
push
dec
shlb
inc
push
push
cmpsl
dec
add
adc
or
or
xor
jecxz
mov
or
adc
aad
mov
das
stc
xlat
sub
test
xor
mov
inc
mov
hlt
shlb
xor
cmpsb
out
cmp
push
cmc
inc
pop
adc
dec
lret
clc
xor
imull
clc
test
rol
in
push
lds
mov
out
lods
mov
int
mov
push
cmpsl
pop
mov
cmp
or
xchg
xchg
mov
and
idiv
xor
fcoms
rcll
jmp
jg
std
jae
mov
cmp
xchg
inc
je,pn
repz
cs
lret
mov
xor
adc
inc
mov
pop
pop
fxtract
push
cmp
stos
bnd
test
ret
inc
jg
xlat
int
fcomps
popf
xchg
data16
dec
cmp
stc
pop
aad
ret
or
jmp
mov
push
inc
push
test
inc
and
mov
pop
pop
ljmp
adc
sarb
sub
shrb
xor
mov
fsub
loop
xor
jb
push
arpl
ja
out
pop
jnp
push
movsb
jae
jno
mov
pop
leave
sbb
cmp
sub
outsb
fiadds
mov
mov
xchg
xchg
sbb
cmp
push
add
cmp
add
out
fdivr
test
dec
loopne
dec
shlb
push
and
test
mov
scas
rolb
stos
jnp
pop
inc
push
xchg
icebp
jecxz
out
mov
mov
ret
sub
aam
shl
dec
pop
inc
int3
mov
xchg
leave
test
movsb
sahf
popa
dec
dec
add
out
dec
insb
arpl
lods
lods
or
sub
in
imul
test
adc
cld
je
pop
jnp
cmp
inc
inc
shlb
xchg
aad
sub
jae
hlt
adc
jne
flds
mov
int
adc
pop
movsb
jb
mov
dec
rcll
inc
rol
mov
mov
in
push
repz
inc
test
push
lret
jp
mov
enter
sar
pop
mov
mov
ja
push
sarl
mov
inc
out
cmp
imul
pop
add
adc
je
sbbb
cmpsb
xchg
mov
stos
add
cmp
rorl
add
or
mov
jae
fcoms
pop
add
xchg
mov
inc
mov
mov
mov
mov
inc
add
xchg
push
pushf
xor
sbb
shrb
cmp
sub
xchg
lods
or
scas
insl
inc
xlat
xchg
addl
psllw
cmp
mov
in
mov
cmp
andl
out
push
ja
dec
push
add
cld
or
mov
shll
mov
ret
sub
jecxz
or
mov
daa
sub
es
dec
jmp
lea
sub
jge
movsb
push
push
sub
pop
lds
neg
dec
nop
vphsubwd
pusha
movsb
pop
mov
fidivrs
push
nop
leave
lret
insb
mov
mov
es
mov
and
xchg
sub
leave
out
inc
imul
test
inc
mov
sbb
js
and
cmpsl
lock
mov
xchg
jae
lea
mov
or
gs
adc
call
and
mov
xor
aaa
sub
cmp
std
pop
sbb
mov
pop
cmpsb
mov
mov
inc
mov
aad
and
and
loopne
and
push
and
lds
popf
mov
xchg
cmp
inc
inc
or
push
xchg
inc
loop
dec
imul
jecxz
inc
dec
mov
jbe
sbb
pop
fadds
adc
pushf
idivl
or
push
cmp
xlat
ljmp
loop
mov
pusha
cltd
mov
lods
adc
xchg
ljmp
add
sbb
movsl
sbb
or
push
jge
into
xor
pop
pop
shlb
loop
clc
in
xor
imul
aas
mov
cmp
mov
push
pusha
mov
mov
lock
addr16
sub
sbb
mov
add
push
filds
and
push
mov
and
inc
xor
mov
test
sbb
ror
inc
rorl
pop
sub
sbb
jp
inc
loopne
cltd
mov
fs
scas
mov
rol
sti
test
sub
xor
out
je
dec
loop
push
cld
das
xchg
repz
cmp
ja
mov
pop
jns
mov
jp
or
loope
cs
and
dec
rcr
scas
sub
subl
int
iret
imul
leave
mov
sub
cmpsl
dec
or
xchg
ret
ret
inc
dec
add
imul
xchg
adc
and
adc
push
stos
pop
add
pop
mov
dec
out
les
pop
mov
rcrb
or
mov
imul
test
jnp
xor
pushf
fists
and
aaa
in
mov
jbe
mov
mov
scas
test
mov
jno
dec
popf
push
popf
mov
rorb
std
dec
sbb
insl
dec
je
xorb
sbb
pop
inc
and
adc
pop
outsb
pop
es
mov
out
not
push
xchg
das
icebp
loopne
add
pop
inc
lods
repnz
sbb
pop
sub
es
push
or
imul
sub
enter
aaa
fldt
jnp
push
xchg
ja
xchg
fisubs
out
cwtl
int3
cltd
push
lock
clc
hlt
push
in
orl
rorl
nop
mov
adc
scas
out
movsl
pop
mov
or
sbb
outsl
jb
mov
in
sbb
mov
iret
adcb
nop
xlat
push
lea
adc
popa
int
add
adc
popa
test
dec
push
push
cs
adc
jb
inc
jle
enter
in
leave
xchg
push
mov
mov
inc
outsb
mov
sub
xchg
mov
push
fs
fimull
fs
push
push
mov
int3
cltd
pop
aas
clc
in
addr16
fwait
xchg
xchg
dec
loopne
fsubrs
xchg
pop
sub
roll
lret
sti
dec
data16
in
and
movsb
inc
mov
repnz
mov
int
mov
rcl
imul
mov
out
inc
mov
fidivl
xchg
cmp
out
or
aaa
into
mov
xor
loopne
shrb
gs
cmp
pop
addr16
cmpsb
scas
mov
mov
aam
dec
lahf
add
mov
out
iret
mov
cltd
mov
pop
pop
sub
pop
pusha
push
add
mov
in
shll
xchg
dec
jae
fwait
mov
into
iret
mov
add
push
call
subb
inc
into
dec
into
sarl
jge
aaa
push
std
inc
pushf
pushf
test
test
xchg
xor
leave
cmp
jae
into
jb
mov
or
adc
fwait
fs
dec
sbb
xor
mov
adc
cmp
insl
or
sti
shrl
fsubrl
lds
jg
push
xchg
jge
and
push
or
pmaxub
add
cmp
sbb
std
xchg
pop
xchg
lods
loopne
dec
gs
pop
enter
or
adc
sub
loope
xchg
dec
adc
sub
lahf
je
popf
xchg
outsb
mov
arpl
outsl
mov
test
xchg
sahf
cld
pop
mov
cltd
mov
push
adc
psadbw
jp
and
jecxz
decl
inc
jmp
mull
push
cmp
insb
int
sub
mov
xchg
test
jno
push
neg
dec
int
mov
push
fidivs
outsb
add
fsubr
call
sti
pop
adc
or
sbb
xchg
jmp
push
xchg
ror
sti
mov
push
rorl
cmp
sbb
xchg
fnstsw
mull
dec
sub
jno
push
shll
pop
mov
xlat
add
mov
and
insl
mov
loope
add
and
jne
xchg
cs
iret
lods
mov
and
jo,pt
push
pop
outsb
mov
xchg
push
add
adcb
lock
mov
sub
adc
sar
mov
shrl
xor
cli
sbbl
jno
mov
jl
dec
or
mov
sbb
jae
movsb
mov
xor
jmp
imul
cmp
cmpl
fcmovnb
test
sbb
cmc
mov
insb
pop
mov
mov
cmp
std
add
push
stos
push
cmp
movsl
popf
mov
imul
std
stos
sub
inc
repnz
and
inc
xchg
mov
cmpb
ss
mov
std
push
imull
arpl
es
sub
popa
icebp
sub
cmp
data16
jae
scas
and
cmp
adc
fadds
push
jo
or
dec
movsl
push
lret
push
repnz
inc
jl
lods
jno
adc
pop
sbb
adc
lcall
lea
jmp
xor
fwait
out
ss
sbb
out
lea
mov
les
sbb
jp
cmp
push
add
push
cmp
and
leave
in
roll
add
jnp
cwtl
mov
xchg
adcb
adc
mov
jmp
mov
subl
cmpsl
push
xor
inc
stos
repnz
aad
pushf
stos
pop
and
stos
pop
push
ljmp
mov
push
adc
sbb
hlt
inc
inc
add
add
out
pop
les
loope
repnz
mov
dec
adc
jbe
in
xor
hlt
das
ret
je
enter
push
push
out
stc
adc
dec
das
dec
loop
addb
out
std
mov
aas
ljmp
xchg
xlat
xor
hlt
int
movsl
add
sbb
jmp
scas
mov
xor
push
or
xchg
lahf
mov
roll
aam
movsl
call
shrl
mov
sub
push
test
fs
notb
mov
mov
div
outsb
xor
jae
or
adcb
xchg
jge
movsb
jmp
gs
ret
lret
inc
and
je
sti
pop
lret
je
imull
inc
add
inc
or
xchg
xor
fimull
pop
mov
call
jl
test
in
insl
or
outsl
mov
adc
adc
jmp
ljmp
movsl
call
lret
push
test
lock
push
push
jb
out
orl
sub
lock
insb
add
push
mov
jns
dec
ret
lds
xor
ret
ret
movsb
and
lcall
add
dec
roll
lds
cmc
cmpsl
dec
roll
in
sub
test
cs
pop
adc
jbe
and
stos
pop
in
mov
outsl
inc
or
push
add
call
mov
arpl
icebp
xchg
dec
ret
lock
cmp
cli
sbb
ret
or
mov
xchg
inc
lret
mov
add
lret
test
mov
cmpsl
shlb
imulb
pop
bound
out
inc
fcompl
pop
cld
xor
rcll
cmp
popa
dec
fbstp
xchg
rcrb
aad
out
repz
cld
dec
inc
es
xor
cmp
push
loop
cmp
fld
roll
outsl
push
mov
sub
jl
add
lds
aaa
jg
push
lods
cs
xor
fistl
pop
imul
sub
aaa
fdivrl
xlat
sub
and
test
addr16
mov
ret
es
pop
mov
xchg
ja
pusha
jl
int3
cld
push
xlat
xchg
jo
ret
mov
dec
jmp
lods
shl
pop
and
jg
fistl
jnp
dec
mov
inc
mov
push
cmc
jo
push
loop
pop
and
or
xchg
in
ja
dec
test
cld
repz
outsb
scas
test
or
mov
aas
imul
push
daa
outsl
and
divps
in
pop
pop
out
fcoms
jge
fdivl
sub
xchg
add
push
and
pop
jo
rolb
pushf
outsl
in
sbb
dec
stos
rcrl
jp
cmpsl
sarl
and
mov
es
pop
inc
add
cmc
push
jae
test
scas
xchg
dec
dec
testb
lret
adc
push
popf
out
add
arpl
mov
cmpsb
lcall
in
pop
jns
sarl
pop
les
imul
fimuls
es
dec
clc
mov
mul
sbb
mov
jecxz
sti
cmc
outsb
outsl
adc
cld
jle
dec
ljmp
mov
push
xacquire
loop
mov
dec
gs
std
mov
sbb
mov
jmp
or
jb
xor
inc
sub
xchg
mov
das
sbb
clc
ds
rcrl
ret
in
cmp
inc
adc
popa
mov
add
mov
stos
leave
ljmp
inc
mov
ljmp
rcll
sbb
sub
sti
insb
enter
jo
jge
xor
mov
jge
sbb
pop
fst
nop
jae
mov
stos
lret
outsl
jns
scas
mov
push
or
mov
in
scas
sti
jl
jg
mov
shl
mov
aas
xor
sbbl
jge
les
loope
jmp
pop
pop
sub
lods
je
sub
dec
sub
xor
push
das
or
loope
jl
pusha
jl
ja
adc
push
ret
push
and
xor
cmp
cli
jmp
lcall
loopne
sbb
and
mov
addr16
jecxz
movl
pop
hlt
sub
jb
sahf
movb
into
add
sbb
cmc
jge
shlb
add
cmp
fxch
cli
mov
inc
mov
fistps
dec
emms
push
mov
push
mov
add
cmp
mov
jge
cmp
stos
pop
cmp
mov
dec
daa
negl
shll
sbb
mov
mov
imul
push
sbb
test
push
bound
sahf
xchg
clc
mov
mov
jg
mov
out
mov
out
call
fstl
add
jmp
mov
push
aas
adc
pop
mov
daa
or
inc
testb
loop
xchg
clc
dec
je
mov
in
xor
mull
sahf
test
and
xchg
xor
adc
stos
aas
mov
sbb
cmp
adc
sbb
fwait
sbb
push
pop
xchg
push
and
std
jge
leave
shlb
imul
pop
push
push
ret
xchg
rep
fists
inc
or
rcrb
mov
mov
xor
inc
idiv
out
call
ficoml
daa
xor
lret
cmp
pop
xchg
loopne
int
dec
jp
dec
lret
inc
adc
pop
movsl
mov
mov
call
adc
xchg
aam
xor
sub
imul
jo
test
fldenv
je
and
jo
fiaddl
jl
das
cmp
inc
fisttps
mov
dec
dec
ret
pop
mov
lcall
jmp
sbb
fstps
add
xlat
xor
gs
jne
scas
pop
sbb
or
sbb
or
loope
repz
cwtl
xor
xor
addr16
mov
enter
orb
aad
jp
out
adc
inc
push
add
in
in
out
popf
imul
xchg
jae
mov
lcall
mov
lcall
jbe
ror
test
movsb
sub
jmp
sbb
mov
pop
jge
mov
mov
sub
movsb
pop
cmc
ret
pop
xorl
inc
xor
push
mov
test
pinsrw
ja
sbbl
mov
roll
out
insl
add
mov
mov
or
ret
or
into
inc
mov
cmp
adc
aaa
sbb
dec
mov
lret
xlat
pop
add
and
dec
fstpt
loopne
loopne
and
pop
aad
push
jbe
sub
mov
js
gs
in
dec
dec
insl
add
lds
mov
and
and
gs
adc
sbb
and
loopne
out
mov
xchg
mov
jl
pop
push
xor
in
pushf
les
push
add
outsl
icebp
xor
in
fbstp
adc
adc
and
je
gs
push
scas
cmc
mov
pusha
pop
dec
mov
sub
lds
icebp
call
xchg
pop
in
jns
ret
ret
int
mov
ljmp
fadds
mov
sub
dec
mov
adc
mov
stos
in
fwait
pop
xchg
or
cld
and
push
movsb
add
inc
stos
inc
and
repz
sahf
jecxz
mov
jb
scas
xor
push
incl
adc
cmpsb
add
fxch
ss
loope
mov
sbb
push
xchg
imul
enter
arpl
jbe
ds
stc
maskmovq
shlb
seta
jg
sbb
add
mov
xchg
rcl
cltd
add
mov
lret
mov
push
js
mov
cltd
iret
outsl
mov
xchg
adc
xchg
out
fisttps
mov
sti
arpl
cmc
cmp
jle
push
subl
add
sub
pop
ja
in
mov
mov
mov
mov
jmp
out
mov
outsl
hlt
sbbb
ds
push
xchg
sub
mov
loope
sub
mov
xchg
lea
fidivrl
push
jge
xlat
jecxz
and
shrl
ret
sub
gs
xchg
jmp
pop
subl
xchg
sbb
xor
mov
lcall
dec
push
mulb
adc
add
jne
inc
es
mov
cld
inc
outsl
xor
sub
shlb
icebp
push
popl
sbb
in
cmp
adc
lret
adc
nop
xchg
and
sub
lcall
pop
loopne
mov
push
mov
cmp
push
imul
aad
inc
clc
jge
xchg
sub
js
pop
mov
out
test
jecxz
fmull
cmp
sub
pop
mov
insb
scas
clc
lds
xchg
add
xchg
inc
sbb
mov
imul
stos
cli
mov
mov
scas
mov
xchg
stos
idivl
dec
inc
addb
sbbb
push
cmp
fucomi
push
and
jp
pop
mov
rorb
and
in
out
ret
push
mov
mov
xlat
or
jge
insb
and
jl
jmp
mov
push
dec
mov
sub
lcall
xor
or
repnz
stc
jne
stos
cmp
push
ret
stos
add
push
lret
cmp
and
sub
nop
xor
scas
mov
pop
jnp
cmpsl
jno
rolb
xchg
xchg
dec
loope
pop
xor
iret
dec
scas
mov
pop
cltd
pop
pop
test
push
pop
fnstenv
mov
sbb
ljmp
test
xchg
dec
cmpl
in
fnstcw
cmp
or
add
jae
out
in
fwait
mov
sbb
cmp
add
push
in
or
roll
imul
mov
add
xlat
test
sub
mov
loop
inc
fbstp
jg
jnp
mov
ljmp
xchg
lock
mov
fs
pop
lods
es
lods
jns
mov
int3
lret
push
mov
mov
cmp
sbb
sbb
mov
jmp
sub
sub
cwtl
xchg
gs
popa
dec
and
ds
mov
xchg
and
inc
cmp
jbe
out
stos
sub
jge
mov
xchg
sub
and
shlb
fildll
enter
loopne
push
aaa
outsb
clc
hlt
jae
and
scas
lods
mov
rolb
cltd
pushf
or
imul
inc
mov
xor
out
leave
lods
sub
cld
add
in
mov
sbb
ror
lods
hlt
faddl
push
ja
adc
mov
les
sub
jge
hlt
and
sub
inc
pop
sti
inc
mov
rcrb
and
aam
xor
mov
fdivrs
fdivr
adc
inc
add
test
test
clc
int
rcl
repz
loope
or
das
pop
pop
nop
scas
adcb
sti
adc
adc
and
xor
pop
out
insb
lret
xor
stos
mov
mov
or
aas
mov
add
je
or
jmp
out
in
es
cmpsb
fucom
fwait
jne
and
sti
jle
jnp
mov
jns
sahf
jmp
rol
loopne
shr
mov
mov
out
ja
inc
mov
in
insb
mov
or
jmp
add
mov
int
jmp
sbb
repz
out
sbb
pop
jecxz
jo
mov
inc
or
sti
jnp
add
or
push
aam
xchg
repnz
outsl
mov
shll
or
lods
fdivrl
inc
jp
mov
sub
dec
jnp
lods
cmp
inc
mov
addr16
add
outsl
test
sbb
and
push
call
mov
mov
loopne
xchg
cmpsl
jbe
ret
lahf
mulb
loop
getsec
and
rclb
jmp
div
push
add
ret
push
std
mov
add
inc
mov
xchg
pop
inc
out
sbb
push
adc
scas
andb
stos
lock
and
frstpm(287
ret
das
aas
or
bound
in
xchg
das
pop
jb
and
divb
xor
ds
shrl
cwtl
inc
xchg
jo
add
pop
or
mov
pop
pop
push
popa
imul
lahf
push
movsl
aas
insl
xchg
xchg
add
rcrb
in
shrb
nop
aam
mov
and
sub
mov
ds
inc
mov
jns
int3
cltd
push
in
je
test
mov
jns
and
stc
cmpsl
mov
stc
jo
popf
int3
or
xchg
pusha
xchg
aaa
jae
lahf
cli
push
popl
pusha
xchg
cmpsb
pop
xor
ljmp
dec
push
pusha
fisubs
cmp
aam
aam
mov
jp
mov
dec
xor
and
mov
xor
data16
cwtl
xlat
test
fwait
inc
jns
pusha
fists
or
adcl
xlat
fwait
push
nopl
stc
pop
or
pop
sub
aam
fwait
lret
mov
rclb
mov
movsl
mov
and
add
and
or
repnz
les
add
es
pop
ret
cmpsl
arpl
ljmp
test
enter
cltd
mov
lahf
loopne
sbb
fisubl
fdivl
jmp
lcall
cmpsb
test
inc
push
mov
clc
inc
xor
popa
xchg
in
rorl
inc
ficomps
sbb
pusha
fwait
nop
xorb
insb
pop
adc
or
test
mov
lods
pop
xlat
mov
xchg
lret
push
ss
push
sbb
scas
icebp
out
popf
fcoml
lret
stos
out
jle
cmp
adc
imul
xor
push
cld
out
cmpl
add
adcl
imul
mov
shrb
pop
mov
sbb
mov
test
inc
push
mov
jmp
pop
cmp
xchg
jge
cmp
ljmp
inc
xlat
aad
adc
mov
jb
mov
xchg
stos
mov
sub
cmp
sub
inc
push
pop
jge
jge
pop
rcrb
jp
out
repnz
sbb
cmp
mov
adc
jne
push
mov
cmpb
sub
jl
pop
neg
es
mov
sbb
mov
xchg
std
jmp
ljmp
ljmp
outsb
inc
mov
add
pusha
jns
movsb
lcall
mov
test
pushf
lret
add
leave
push
fbld
scas
rorb
pop
jle
inc
adc
push
out
decb
cmp
imul
pop
xchg
fs
cmp
ss
xchg
test
mov
add
jns
mov
iret
andl
adc
arpl
scas
aas
mov
pop
out
lret
ret
push
mov
add
add
mov
push
xchg
push
dec
popa
push
sti
or
in
divl
nop
sbb
ficoms
mov
push
mov
xor
or
inc
push
push
aas
std
jae
into
popa
jl
xchg
xor
bound
or
cltd
test
pop
mov
cmp
cmc
and
jns
test
push
jns
jmp
pushf
add
add
inc
out
pop
ja
lods
daa
and
scas
loop
dec
or
cli
hlt
push
pop
fimuls
in
cmpps
fdivrp
call
bound
pop
cmp
orb
xlat
mov
test
js
mov
inc
xchg
xchg
xor
iret
jnp
and
hlt
stc
test
add
rorb
jno
dec
stos
imul
rcr
push
inc
sub
cmp
scas
test
xor
mov
add
mov
pushf
push
into
pusha
imul
cmp
movsl
cmpsl
add
inc
adc
test
inc
mov
mov
cmovg
adc
mov
data16
cmp
cmp
rcrb
xor
lahf
frstor
sbb
push
enter
icebp
imull
mov
dec
call
jle
negl
xor
dec
pushf
cmp
fistps
cmpsb
je
nop
cmp
scas
sbb
pop
and
into
xlat
jmp
fsubr
sbb
and
cmpsb
lea
sub
sub
rcrb
mov
aas
sbb
test
imul
cmp
jns
dec
and
test
inc
sbb
call
inc
repz
sbb
jp
mov
aad
addb
xchg
xchg
cwtl
mov
push
cmp
add
jl
fidivrl
setb
dec
jns
push
ja
inc
push
shl
fmuls
lock
jmp
cwtl
lods
push
push
jmp
mov
cmp
pop
push
adc
jae
pop
clc
xchg
push
lds
push
dec
repz
frstor
test
sbb
cli
fsubl
movsl
mov
arpl
ljmp
push
xor
add
dec
push
inc
icebp
fimuls
lods
clc
add
in
movsb
cmp
jo
repnz
lret
js
sub
dec
mov
lods
inc
and
sub
inc
xor
jp
rorb
out
adc
xchg
dec
pop
pop
pop
loop
add
add
add
and
mov
push
jmp
or
cmc
mov
mov
adcb
cmp
insl
lds
lahf
into
add
add
dec
outsl
decb
fsqrt
aad
and
cmp
xchg
vandnpd
inc
inc
lret
pushf
filds
xchg
mov
sahf
gs
lcall
sub
mov
sbb
jl
lret
call
adc
mov
imul
pop
pop
add
inc
sti
or
lcall
arpl
daa
scas
test
add
cmp
jb
out
lock
xchg
ds
mov
popf
sub
fdivrp
jae
int
dec
jns
test
and
mov
adc
fstpt
les
ret
ffree
or
jb
rcr
gs
inc
jo
and
mov
and
rcrl
test
test
adc
xor
aas
xchg
add
aas
pushf
xchg
and
xor
jmp
mov
xor
adc
movsb
clc
sub
pop
test
arpl
push
sub
adc
ljmp
jmp
daa
iret
xlat
jg
push
in
and
lcall
push
inc
mov
in
jbe
xchg
pushf
cmp
and
mov
test
xchg
and
sub
jnp
cwtl
sub
dec
and
ss
cmpsl
jo
enter
sub
mov
and
push
mov
mov
pop
xchg
lods
out
cmc
pop
int
inc
lcall
pop
popf
pop
movl
je
lea
sbb
push
in
in
xchg
pop
icebp
bound
or
inc
out
inc
fistpl
mov
mov
loope
ret
hlt
add
adc
sbb
dec
jne
push
je
lods
jne
enter
scas
jle
fsts
call
imul
dec
mov
insl
sbb
add
mov
out
aas
dec
sub
dec
jle
and
clc
pop
jns
dec
scas
xlat
jbe
ds
clc
pop
in
fnsave
repz
call
clc
add
negb
lods
jnp
test
dec
jnp
mov
sub
ljmp
xchg
sbb
cmp
fnstsw
sarl
je
adc
ds
xchg
ret
fwait
ja
cmp
push
mov
push
inc
jb
frstor
int3
pushl
fsubp
loope
dec
in
test
push
insl
push
popa
mov
add
shrl
pop
lods
xor
rolb
add
dec
iret
mov
imull
jl
mov
adc
sbb
jle
sbb
pusha
add
mov
mov
imul
repz
jmp
jge
xchg
imul
xor
mov
idivl
adc
sub
pop
xor
in
test
testb
testb
aad
arpl
pop
repnz
xor
sub
les
ficompl
ret
mov
mov
xchg
mov
mov
add
push
lret
pushf
jbe
cmp
lods
nop
hlt
sub
stos
add
mov
les
xor
add
loopne
repz
sub
repnz
sar
sbb
pop
dec
out
xor
adc
loopne
test
sbbb
mov
cmc
push
out
cmp
cli
fsubs
aad
xchg
shll
xchg
lcall
sub
jg
mov
es
popa
adcl
jnp
xor
ret
mov
mov
test
aas
out
xchg
dec
xchg
mov
lcall
inc
cmp
add
add
xchg
test
popf
leave
mov
xchg
xchg
movsb
dec
adc
sbb
xchg
rcr
or
jmp
jg
dec
mov
arpl
mov
jnp
inc
stos
cmp
and
lods
xorb
in
cmpsb
enter
add
frstpm(287
scas
sbb
lea
mov
jl
inc
and
cmp
sbb
mov
clc
testl
mov
xorl
shrl
loope
mov
outsb
xor
fildl
push
outsb
jp
pop
js
pusha
mov
out
cmpsb
imul
imul
jmp
dec
imul
push
popf
pop
dec
xor
dec
test
dec
cmp
jnp
and
ss
fisubrs
aas
repz
rorl
or
js
aad
sbb
mov
sbb
mov
insb
push
sbb
insl
jo
adc
or
adc
jb
enter
sub
inc
aad
decl
mov
into
and
add
xchg
mov
or
popf
leave
lea
pushf
hlt
jp
lods
cmpb
scas
jl
pop
dec
popa
and
or
xchg
in
jae
insb
add
and
mov
loopne
mov
mov
ss
xchg
fs
shr
test
clc
mov
stc
adc
sub
fisubl
negl
mov
cltd
fadd
push
sub
xlat
js
push
or
les
dec
pushf
cmp
in
lcall
test
shlb
adc
in
sbb
inc
imul
jge
out
mov
lock
add
cs
add
xchg
pop
add
lcall
adc
jmp
sub
mov
mov
lods
addr16
pop
mov
ds
ja
test
inc
sub
pop
scas
mov
pop
or
dec
adc
adc
dec
int
je
cmpb
push
lods
jnp
clc
sub
aas
cmpsl
cmp
mov
fsubl
ds
std
out
es
push
add
adc
sbb
add
cmp
xchg
data16
repz
jns
xor
pop
mov
in
rcl
jne
sti
pop
pop
js
pop
or
lret
mov
xchg
test
int
mov
enter
jmp
mov
cwtl
clc
ret
xor
out
dec
imul
repz
add
lret
mov
vunpcklpd
mov
add
out
std
std
scas
lock
adc
cmp
pusha
sbb
dec
adc
pop
mov
mov
shrb
aad
or
mov
out
xchg
es
xchg
inc
mov
jle
jnp
jge
mov
int3
leave
movsl
out
aaa
fcomps
insl
dec
rcrb
call
push
pop
jb
and
mov
or
ja
pop
inc
sarl
dec
mov
mov
adcb
in
push
das
or
add
orl
pop
sbb
in
leave
sbb
addr16
cli
fimull
flds
clc
push
test
adc
test
cmpsb
stc
cmpsb
sbb
fidivrs
scas
pop
inc
cmp
xchg
popa
adc
mov
or
mov
gs
dec
test
sbb
divl
ja
jbe
lret
mov
jp
aam
fs
cmp
jge
fdivl
add
adc
fisubrl
xor
shrb
jnp
aam
jne
loop
imul
cmp
or
xchg
loopne
in
inc
std
push
je
sbb
cmp
imul
arpl
mov
xchg
inc
cld
sbb
call
shr
sarl
pop
lret
inc
jecxz
jne
incb
cld
pop
mov
repnz
and
sbb
push
gs
leave
pop
mov
pop
lret
les
adc
mov
or
cmp
xor
scas
pusha
adc
push
shlb
je
test
int
lcall
sbb
test
divl
lea
push
xor
sahf
xor
cmpsb
lret
mov
cwtl
push
lcall
push
sub
stc
mov
stos
js
push
sub
fwait
xor
xlat
in
mov
or
push
push
add
mov
inc
and
pop
push
int
aas
dec
sbb
int
popf
sbbb
stos
cmp
es
in
in
int
jo
insb
hlt
mov
repnz
fistpl
cli
dec
jp
pop
test
fdivp
or
sbbb
dec
ss
inc
cmc
jl
js
pop
mov
and
xor
add
or
adc
out
jnp
mov
inc
insl
push
movsb
mov
mov
fstps
outsb
outsb
dec
in
sti
push
pushf
data16
hlt
push
xlat
lret
daa
lea
movsb
cmpsb
mov
xor
cmp
test
in
in
pop
dec
pop
jmp
testb
iret
adc
bound
mov
jb
test
std
popl
mov
xchg
insl
cmp
lret
lcall
mov
int3
into
add
pop
cmpb
je
cmp
mov
and
inc
adc
dec
mov
and
mov
push
sbb
add
andl
repnz
divb
incl
jno
in
sub
imul
dec
jecxz
pop
das
cwtd
jne
insb
add
pop
mov
and
mov
jbe
into
xchg
cmp
jmp
add
sti
mov
dec
shrl
test
push
mov
sbb
xlat
ss
cwtl
jecxz
fldl
popf
mov
push
push
pushf
es
dec
stos
xchg
gs
jae
fistpl
dec
iret
lods
ja
mov
push
mov
stos
leave
push
js
push
fcom
add
xchg
jecxz
rcrb
adcb
mov
shrl
jb
cli
push
fadd
lods
insl
mov
xorb
mov
jno
lea
icebp
repz
test
push
cmpsl
add
test
into
xchg
mov
daa
sbb
pop
lahf
and
lds
dec
cs
inc
xchg
stc
jnp
test
pop
or
adc
adcl
sbb
adcl
and
or
pop
in
xor
enter
imul
jb
loope
mov
inc
hlt
push
adc
mov
jns
dec
push
pop
bound
mov
imul
inc
stos
xchg
jmp
mov
mov
test
xor
popa
push
int
dec
cmp
shlb
sub
mov
cwtl
in
pop
bound
loopne
mov
lods
jg
cmc
xor
pop
arpl
clc
stc
testl
shrb
xor
pop
out
xchg
inc
or
test
imul
cmp
icebp
cwtl
sbb
xchg
popa
jmp
scas
icebp
push
arpl
or
mov
cmp
movl
inc
pop
jg
out
lahf
shlb
push
pop
push
jb
loop
mov
rep
repnz
jne
inc
xchg
stos
push
inc
sbb
inc
lcall
cmpsb
jl
insb
cmc
push
xchg
rol
loopne
jp
or
movsb
mov
xchg
gs
movsl
andl
xchg
push
dec
and
inc
sub
mov
xor
or
test
push
adc
mov
mov
and
aad
jmp
mov
mov
cmc
in
mov
dec
in
pop
outsb
jmp
and
std
and
enter
imul
sub
paddsw
stos
fmull
add
mov
jne
xchg
test
inc
out
cwtl
mov
cmpsb
mov
add
mov
cmp
lds
or
icebp
sbb
or
mov
repnz
jmp
frstor
arpl
ficomps
mov
aam
sub
popa
cmp
fwait
dec
push
in
jl
sahf
dec
push
icebp
int
sub
rcrl
fwait
sub
sbb
test
lea
iret
in
jbe
xchg
add
js
iret
inc
fldcw
stc
orl
mov
lret
gs
fs
lods
mov
push
es
jmp
enter
popa
dec
test
pop
orl
mov
sbb
xor
mov
int
div
and
test
rcrb
or
push
dec
sub
notb
ss
lgdtl
je
adc
add
cli
movsb
mov
mov
add
and
jg
cwtl
inc
dec
psllw
shr
mov
mov
push
or
or
sub
xor
hlt
stc
sbb
cmp
and
inc
scas
cmp
cmp
mov
dec
movsl
cwtl
loope
loop
and
mov
and
mov
jne
addr16
jbe
pop
pop
stos
nop
addr16
push
fs
xor
adcl
bound
mov
js
popf
jmp
cmpsl
jns
ds
imul
mov
cs
cld
in
mov
or
lods
push
xor
enter
adc
xchg
inc
mulb
mov
mov
mov
loopne
int3
jle
sub
sbb
add
or
mov
add
jp
and
imul
repz
cli
push
or
dec
push
mov
jp
add
dec
int3
jno
xor
dec
xchg
mov
repz
mov
xor
push
mov
call
out
lret
pop
cmc
adc
int
into
push
push
jl
mov
xor
mov
fisttpl
and
mov
rcll
add
movl
sub
pop
xchg
cmp
or
insb
jg
add
add
or
sbb
idivb
and
test
lds
addl
pop
mul
jnp
nop
std
jge
adc
xchg
jp
push
pop
fnstcw
dec
in
std
push
mov
mov
jge
dec
sbb
jb
jle
into
lret
pop
hlt
int
mov
insb
jns
fnsave
xor
jmp
dec
cmp
ror
dec
rolb
sbb
sbb
jno
aaa
jo
ja
clc
nop
xor
push
dec
addr16
rcll
sub
in
sbb
aad
sbb
pop
push
xchg
xchg
fwait
sub
cmova
jbe
lahf
aaa
xlat
jb
dec
cmp
dec
jo
pushf
mov
mov
loopne
sbb
or
pusha
test
popf
xchg
push
loop
push
fs
stos
les
loopne
lahf
lahf
sbb
dec
bound
xlat
repnz
lea
add
fwait
xchg
jbe
lret
aaa
cli
push
push
pop
lcall
faddl
xchg
aam
jmp
and
add
aas
jnp
mov
xchg
data16
jae
cmp
cmp
adc
js
sub
cmp
push
sar
mov
dec
sub
stos
mov
and
pusha
test
push
frstor
pop
outsb
sbb
dec
jo
inc
stos
cmp
ja
mov
js
jo
mov
push
and
adc
scas
cmpb
push
lcall
jp
xor
ret
jmp
mov
mov
stos
lcall
push
xor
sub
pushf
out
adc
flds
shll
mov
mov
daa
xorb
inc
fisubrl
imul
mov
mov
lret
gs
lods
addr16
or
int
int3
popa
pop
inc
es
scas
push
je
insb
mov
loopne
adc
mov
xor
push
movsb
enter
js
sub
xor
mov
cltd
pop
jne
ss
mov
mov
dec
ja
cmp
aas
jo
push
pop
stc
and
pop
jmp
jle
leave
bound
orl
sbb
out
jp
bound
adc
into
dec
mov
fdivrl
inc
adc
pop
jmp
fisttpl
mov
scas
out
push
and
out
jno
pop
movsb
sahf
pushf
sbb
aaa
dec
pop
sub
and
push
mov
sub
cmpsl
cmpsb
call
stos
push
rolb
gs
in
loop
add
push
push
scas
dec
sbb
mov
arpl
xchg
mov
mov
mov
mov
stos
out
mov
outsl
push
jbe
push
je
movsl
ficompl
push
jl
cmp
addr16
imul
jecxz
mov
idivl
aad
rolb
push
aas
sbb
adc
pop
xor
pop
mov
pop
pusha
jg
xchg
mov
lea
dec
test
lcall
cltd
xchg
pop
movsl
jmp
jns
xor
mov
mov
cli
fiadds
xchg
jns
lods
jnp
push
dec
mov
clc
aaa
cmp
popf
cmp
jmp
xrelease
sbb
xor
repz
std
sub
add
ds
dec
push
rolb
push
movsb
xor
add
jb
lcall
imull
adc
in
jne
aam
into
enter
test
cmp
enter
pop
sti
jle
scas
lcall
lahf
std
sbb
out
jmp
pushf
inc
pop
cld
dec
ficomps
outsl
push
js
xlat
testl
adc
std
adc
cmp
jns
rclb
xchg
stc
js
cmpsl
mov
pop
mov
dec
mov
nop
push
fdivrs
arpl
mov
in
jns
add
mov
sub
rep
lret
iret
inc
adc
test
dec
test
mov
shlb
enter
out
int3
lds
rorl
scas
pop
inc
sbb
xlat
mov
or
pusha
pop
sbb
mov
mov
push
sbb
xchg
mov
cmp
loope
jmp
insb
adc
push
cmpsl
push
js
daa
fistpll
aad
xchg
and
inc
xchg
add
in
fsubs
jbe
imul
adc
and
push
push
or
nop
add
shll
xchg
or
in
cmp
lret
xchg
push
cli
adc
fcomp
xor
out
das
jmp
bswap
sbb
ds
xor
in
or
bound
xor
jo
imul
lcall
scas
push
mov
push
and
push
cli
loop
mov
addr16
dec
or
push
mov
add
fdivs
xchg
or
inc
insb
cld
std
mov
inc
in
lcall
sbb
rcll
scas
dec
or
scas
cmp
ret
mov
pop
xchg
xor
dec
jb
shlb
ss
jp
cli
lret
cmp
iret
mov
push
repnz
mov
cmpsl
sbb
and
adc
xchg
and
add
jnp
js
stos
loopne
mov
add
lret
rcrl
pushf
das
cmpsl
inc
arpl
add
jno
xchg
and
dec
fnstsw
aas
adc
jb
dec
notl
fsubp
cld
or
aas
xchg
rcrb
adc
mov
pop
xor
and
xchg
popa
aaa
cmc
or
cmp
outsb
lahf
es
or
xor
add
in
inc
in
jl
lret
call
aam
cli
leave
jno
sub
lods
add
cmp
pop
lret
dec
cmp
jge
icebp
scas
incb
xchg
inc
imul
add
push
das
pushf
pop
cli
test
enter
pusha
sti
mov
out
int3
adc
pop
repz
xor
std
stos
cmpl
arpl
ja
xchg
push
test
add
sub
jmp
push
add
inc
out
inc
jp
push
movsl
xchg
outsb
or
int
nop
jle
adc
fmull
das
dec
adc
mov
or
and
jge
add
sbb
stos
or
lds
add
jo
pop
pop
dec
adc
je
inc
sub
mov
das
inc
dec
test
nop
mov
dec
or
xchg
and
movsl
leave
aam
cmp
sub
mov
cwtl
add
aam
jp
les
cmp
xchg
or
push
pusha
enter
mov
clc
xlat
call
xchg
cmp
in
push
push
mov
repnz
mov
xchg
and
push
bound
jno
aas
or
lods
dec
loope
into
movsb
bound
sub
mov
call
repz
xchg
jae
js
sub
mov
mov
out
hlt
pop
cmc
xor
cmc
adc
sbb
jl
scas
jnp
cmp
cmp
fdiv
ja
scas
sbb
lea
push
fdivl
add
mov
sarl
inc
xor
enter
dec
mov
in
mov
mov
dec
xor
addl
add
int3
mov
cwtl
call
test
shlb
fdivrp
mov
jmp
xor
cmp
scas
lods
sub
inc
js
or
mov
pop
add
loope
inc
lahf
or
sahf
push
and
jnp
push
cwtl
imul
faddl
push
ror
pop
and
cmc
sti
outsb
add
dec
add
cld
jge
mov
or
adc
mov
aaa
addr16
lds
xchg
jae
pusha
xor
sbb
jae
dec
gs
in
cmpsl
add
loope
je
xchg
ja
xor
push
cmc
cmpl
sub
mov
movsb
jo
stc
and
stc
repnz
adc
xorl
test
in
sub
jl
push
pop
sub
mov
mov
cmpl
mov
aad
jno
and
xor
fsubp
xor
sub
lcall
ja
outsl
subl
fimull
push
mov
xor
ret
push
xor
cmp
call
scas
cmp
lcall
scas
stos
push
stos
test
or
xchg
cltd
or
cmp
dec
mov
pop
in
fmull
sub
nop
cmp
and
pushf
sub
jno
or
sbb
jae
sub
mov
loopne
add
mov
dec
add
jle
dec
adc
add
pop
rcrb
bound
js
push
cmp
jb
sarl
test
or
sub
fs
mov
fsubs
mov
pop
outsb
lcall
xchg
loope
push
hlt
push
pop
pop
shll
fldt
add
push
rol
and
xchg
daa
cmpsb
sbb
mov
xchg
pop
cmp
pushf
fwait
inc
int
imul
mov
mov
sub
mov
inc
pusha
mov
int3
sti
lcall
les
repz
or
fistl
jle
xchg
pop
pop
mov
cmp
xchg
push
mov
daa
cmp
test
das
popa
and
jns
jae
out
sub
push
int3
imul
imul
xchg
sbb
lds
jl
lret
in
ret
xchg
jae
dec
and
mov
mov
mov
andb
sbb
cmp
sub
jmp
call
testb
push
add
test
cwtl
jbe
adc
push
mov
bound
mov
jne
imul
out
popa
push
cmpsb
outsl
repz
xchg
popf
sbb
lea
mov
out
sub
sbb
mov
rorl
jp
and
fs
out
int
sub
packuswb
xor
or
fiadds
int3
push
and
pushl
ret
and
pop
or
fcos
jns
sbb
mov
mov
or
xchg
imull
jp
and
cmp
inc
inc
xchg
push
movsb
jle
jns
popa
lds
imul
leave
fcmovnb
ror
push
pop
fildll
cwtl
lahf
ror
scas
stc
mov
cmpl
add
xchg
inc
loop
cmovns
popa
xchg
sub
and
lods
fisubs
push
icebp
int3
pusha
dec
pop
cwtl
sub
mov
xchg
mulb
aaa
decl
ljmp
push
lret
mov
int3
test
xor
inc
xchg
or
andb
dec
push
cmc
std
cs
sbb
xor
cmp
xor
iret
cs
adc
inc
inc
jne
pop
add
pop
mov
mov
repz
rcl
push
and
clc
insb
mov
sub
popf
fistpl
and
mov
mov
dec
stos
and
int
les
xor
and
in
jnp
adc
adc
dec
inc
dec
call
imulb
gs
push
mov
into
adc
subb
xlat
out
xlat
clc
and
mov
sub
xchg
dec
inc
fiadds
fiaddl
or
int
es
shrb
xchg
in
gs
hlt
xchg
add
xchg
in
ljmp
push
rep
dec
sub
mov
rcrb
shrb
adc
jns
dec
push
mov
cmp
cmp
imul
popa
add
inc
cmp
sub
mov
dec
sti
imul
inc
xchg
out
sbb
out
pusha
or
xchg
hlt
negb
and
xor
mov
ljmp
xlat
std
push
mov
clc
hlt
mov
push
test
inc
lea
or
xchg
in
ret
call
pop
adc
ljmp
ret
and
fnstsw
inc
push
xor
push
lods
mov
popl
jo
les
popa
sbb
out
sub
and
insb
mov
movsl
push
xor
addr16
loopne
in
je
jnp
jnp
addr16
sub
lods
sbb
out
into
icebp
pusha
fs
add
ret
and
aad
movsl
adc
dec
fildl
pop
xlat
sti
add
das
jmp
subb
int3
jbe
ljmp
stos
xchg
push
lods
mov
xor
test
jno
call
dec
adc
mov
mov
ljmp
jecxz
cmp
leave
scas
outsl
jae
cmp
jb
add
lcall
jp
pop
or
adc
pop
pop
adc
sbb
movsb
dec
inc
int3
aaa
dec
cmp
mov
sub
jmp
mov
jmp
lds
sarb
daa
aaa
pop
ss
xorb
outsb
mov
call
leave
jae
xchg
ret
packsswb
loopne
xlat
mov
mov
hlt
pop
mov
add
out
mov
outsb
mov
outsl
xor
cmpb
rcl
adc
adc
push
add
pop
leave
pop
in
std
sbb
and
jmp
mov
test
shlb
imul
lods
daa
cld
pop
adc
popl
aaa
xchg
xor
mov
cmp
xchg
cmp
adc
rep
notl
es
subb
or
lock
call
xchg
in
in
js
iret
sbb
mov
pop
fstps
jg
jns
add
cmp
insb
test
test
adc
xchg
and
test
gs
or
sub
sub
push
dec
push
rorb
jge
or
ljmp
int
or
and
in
and
fldt
dec
into
jbe
adc
subb
dec
lods
mov
lock
fiaddl
pop
jnp
aaa
outsl
jle
cmpsl
out
clc
xchg
in
iret
dec
mov
mov
cltd
sbb
mov
add
arpl
mov
mov
or
lds
adc
mov
pop
pop
fists
mov
loopne
daa
stc
in
enter
nop
insb
xor
jno
jae
mov
cmp
cwtl
repz
and
xchg
mov
aad
aam
or
jnp
out
mov
in
out
or
and
fisubrl
mov
sub
loop
out
mov
dec
cmp
test
xchg
xor
outsl
out
pop
test
cld
mov
repz
cld
dec
pusha
pop
loop
aaa
mov
jl
sbb
test
repz
cmc
decb
fisttpl
xchg
adc
dec
push
out
xchg
xor
push
das
push
fwait
addb
sub
iret
pop
jl
xlat
pop
push
xchg
inc
sbb
jns
jne
scas
cmpsb
add
loopne
cmc
pusha
lret
das
dec
cmp
cld
in
scas
mov
das
in
jmp
scas
jbe
add
lock
or
push
cs
fbld
or
cltd
lock
adc
jmp
std
pop
inc
inc
bswap
cmp
or
mov
aas
fidivl
mov
cmpsb
inc
movsb
hlt
sub
in
jg
jne
cmp
clc
or
mov
hlt
xchg
lock
mov
jb
lods
leave
js
pushl
or
into
mov
jnp
adc
int
push
cltd
mov
scas
in
cltd
cmpsb
mov
push
sub
dec
adc
dec
sub
inc
dec
lret
xlat
repz
cmp
sbb
pusha
inc
pop
mov
xchg
pop
fists
gs
pop
arpl
pop
mov
mov
scas
adc
push
push
cs
mov
insl
pop
mov
in
test
leave
jle
jnp
outsl
inc
mov
lds
and
shll
add
and
test
adc
adc
fildll
out
mov
fwait
xor
insb
xchg
jmp
js
test
mov
cmp
test
int3
and
and
push
pop
sbb
cmpsb
and
jns
sub
push
add
xchg
loope
movsb
mov
mov
mov
xchg
test
xchg
xchg
add
xchg
sti
call
adcl
xor
orb
push
gs
mov
and
xor
lods
paddsw
cmp
testb
out
rclb
daa
add
ret
jno
scas
addr16
pop
fbstp
adc
dec
sbb
clc
and
shrl
addr16
push
insl
adc
into
outsl
xchg
xor
in
mov
pop
lret
int
iret
xor
pop
les
test
mov
es
pop
aam
addr16
xchg
adc
arpl
test
fcomi
or
cmp
push
sub
mov
or
xor
mov
adc
lods
xchg
add
popf
subl
add
ljmp
and
clc
stos
nop
hlt
leave
in
jmp
cmp
xchg
jnp
xchg
ss
int3
and
add
clc
adcb
repz
inc
je
adc
pop
pop
jecxz
out
jns
mov
cmp
cmp
mov
add
mov
or
cmp
sub
gs
mov
sub
or
negl
and
ret
outsl
data16
pop
dec
inc
iret
fs
scas
ret
mov
loop
and
hlt
repnz
sbb
add
mov
lahf
adc
mov
dec
add
inc
mov
mov
fcompp
mov
data16
xor
or
movsl
inc
es
dec
iret
fistps
sbb
dec
cmpsl
lahf
insb
xchg
das
stos
cmp
sti
ret
lcall
in
in
sbb
mov
sub
int
mov
in
test
pop
out
scas
rcrl
add
dec
and
dec
lahf
add
dec
push
add
in
xchg
into
and
add
inc
cmc
stos
dec
aad
fstpl
cwtl
add
fnsave
jns
nop
dec
push
adc
imul
and
push
inc
mov
sbbl
in
sbb
add
jno
mov
iret
push
sbb
inc
addl
mov
mov
xchg
lock
adc
inc
jmp
push
cwtl
mov
imull
mov
fistpll
xor
mov
add
cs
icebp
aad
movsb
mov
dec
lods
pand
jl
pushf
push
fistpl
adc
sbb
and
mull
inc
mov
test
push
sti
movd
sarl
psubusw
inc
test
xchg
xchg
sub
or
hlt
pop
out
aas
aad
lahf
bound
test
mov
push
mov
dec
cs
jb
jp
pop
cmpsb
cmpsl
mov
mov
pop
pop
ficoml
loop
lahf
push
mov
and
test
dec
push
scas
mov
rcrl
ja
testb
call
sbb
and
cmp
cmc
sbb
leave
dec
push
fidivl
rorl
fs
add
jns
out
xorl
clc
movsb
and
fadd
jno
mov
int
or
aad
jae
inc
mov
call
jno
sub
ss
rorb
repnz
mov
in
ds
xchg
fdivs
lds
pusha
sbb
mov
add
ret
mov
or
inc
inc
cmpsl
aaa
adc
add
ja
addl
pop
dec
insl
call
dec
stc
mov
xchg
mov
xchg
es
mov
cmp
xor
into
ja
shl
mov
jbe
mov
xor
popa
dec
and
fmuls
pop
dec
les
out
or
add
mov
sbb
jl
sbb
lods
mov
cmp
jle
les
aam
dec
jno
stos
call
dec
and
xchg
enter
pop
ret
cmp
sub
pop
push
dec
mov
or
test
cmp
push
test
adc
cli
jle
pop
stc
sbb
inc
add
push
pop
inc
pop
push
push
cltd
pop
repnz
pop
inc
cmpsb
enter
cmp
mov
adc
pop
cmp
aad
into
mov
mov
loop
lea
imul
mov
xchg
out
cwtl
dec
cmp
or
ror
or
xchg
loop
mov
into
jmp
xor
inc
xor
test
pop
dec
push
inc
addl
xorb
popa
mov
inc
push
dec
loop
testl
scas
push
movsb
lods
mov
adc
das
rclb
xchg
add
push
pop
inc
sti
out
ljmp
popf
adc
std
inc
dec
push
jle
jg
mov
test
cwtl
or
pop
dec
sbb
popa
fisttpl
cmp
add
imulb
test
push
mov
cli
out
adc
fildll
mov
loop
sub
mov
pop
dec
sub
xor
mov
xchg
je
mov
aad
ss
add
cmp
inc
cwtl
call
test
mov
cmp
mov
mov
nop
add
adc
fildll
xchg
sub
add
cmpb
inc
call
fnstcw
cmc
flds
or
shr
in
xor
js
push
mov
mov
sbb
push
cmp
std
bound
push
xor
jg
rclb
mov
hlt
push
inc
jecxz
jge
push
mov
test
ss
aad
mov
aad
rcrb
cmp
test
add
push
pop
cltd
mov
jge
inc
fistpll
inc
stos
je
lret
fcoml
or
or
xorb
and
out
dec
mov
shlb
inc
into
or
pop
dec
mov
sub
mov
mov
add
sbb
jns
or
fdivrp
jp
mov
and
arpl
mov
bound
sub
or
arpl
sbb
pop
aam
sarl
cmpsb
in
mov
outsb
push
outsl
ss
mov
xchg
xor
cmc
cmp
xor
pop
addl
or
imul
dec
xchg
sub
andl
stc
add
adc
sbb
xchg
adc
outsl
mov
xchg
das
or
adc
sbb
dec
iret
cmpsb
jle
mov
dec
aas
mov
popf
sbb
cld
test
inc
ret
mov
sar
push
pop
pop
jbe
imul
mov
dec
nop
hlt
cmp
enter
sbb
xchg
sub
cmpsl
mov
out
dec
or
ss
faddp
pop
out
aad
clc
imull
mov
xchg
pushf
or
scas
jns
psrlq
fwait
in
adc
mov
pop
std
jb
or
cmp
hlt
aaa
dec
fcompl
xchg
xor
pop
mov
popa
pop
mov
add
adc
ds
dec
imul
inc
fxch
ror
dec
mov
shlb
jb
mov
jecxz
cs
or
xor
out
pop
movsl
xchg
pop
mov
dec
sqrtps
sub
mov
push
push
roll
sub
pop
test
push
push
in
pop
cmp
jno
jl
or
mov
inc
imul
jne
mov
cmp
mov
hlt
cli
stc
loop
pop
lahf
mov
xor
mov
test
mov
xchg
lods
std
mov
shrb
out
adc
xchg
movb
fnsave
or
rorb
or
or
lret
in
shll
sar
outsl
imul
test
int3
sbb
lcall
std
shrl
add
jnp
pop
push
push
cmp
sub
push
sub
test
dec
jmp
into
sbb
adc
out
xor
ss
push
jp
and
dec
fiaddl
pusha
push
inc
insl
push
mov
xchg
mov
int3
fisubrs
or
mov
loop
mov
cmpb
cli
xchg
sub
test
in
in
imul
mov
mov
push
lock
ljmp
xchg
out
nop
hlt
and
dec
pop
mov
cld
test
in
mov
mov
sahf
not
xor
or
xor
cmpb
mov
xchg
hlt
xor
loopne
xor
in
js
inc
pop
nop
ss
xchg
mov
push
pushf
ret
xchg
pop
push
pop
mov
into
movsb
fisttpll
adcl
int
mov
incl
nop
fstl
hlt
jg
jnp
sub
je
and
cmp
xchg
clc
aad
pop
push
and
popf
sub
in
jp
jmp
xor
add
cwtl
cmp
cmpsb
and
and
push
push
movsb
mov
add
stos
or
cmp
sahf
or
lds
jo
aas
sub
jl
xor
sti
push
or
repnz
fsubrl
lea
cli
jnp
aad
jge
pop
icebp
cmp
inc
aad
cmpl
out
aad
push
test
cmp
cmc
outsb
in
add
inc
push
test
cld
cli
xor
mov
mov
shrb
cmp
inc
cmpsb
xor
push
pop
adc
loopne
xchg
jnp
mov
lods
inc
into
pushf
mov
cmp
dec
or
repnz
mov
mov
dec
xchg
pop
xchg
sub
pop
out
shrb
pop
adc
mov
scas
dec
mov
mov
jle
sbb
push
sbb
jle
rcr
jno
fadd
inc
popf
js
fwait
pop
dec
dec
and
mov
enter
pop
fcomps
add
cmp
psubb
xor
push
jg
movsb
jl
sbb
sub
push
cmpsb
movsl
addl
sbb
mov
mov
jge
lds
call
cmp
xchg
dec
mov
test
xchg
dec
xor
dec
int3
sarl
adc
push
mov
or
and
pop
adc
int
mov
roll
iret
das
mov
pop
out
adc
cmp
stos
fidivrs
in
cmp
les
push
out
dec
adc
inc
sbb
arpl
rcl
push
sub
pop
loop
mov
dec
xor
data16
cmpsb
push
xlat
xchg
rcr
push
outsl
sbbb
sub
push
jo
iret
push
jmp
cmp
mov
jbe
clc
pop
cmp
enter
inc
inc
pslld
das
xchg
jnp
mov
outsb
mov
call
out
pop
pop
sahf
movsl
inc
pop
shrb
or
mov
shll
and
aaa
test
insl
dec
inc
and
cmp
out
rolb
cmp
mov
mov
dec
add
sarl
add
ljmp
sub
xor
add
fs
lret
adc
fs
and
pop
xor
vpandn
outsb
sahf
pop
inc
ss
mov
js
cmp
testl
jecxz
mov
imul
dec
sub
out
cld
std
sub
rcll
loop
or
fnsave
cld
movsl
dec
je
mov
mov
daa
inc
dec
xchg
jne
int
xchg
cmp
push
xchg
imul
cmc
lock
stos
fstps
inc
mov
aaa
mov
fnsave
mov
xchg
mov
adc
dec
sub
lea
add
aaa
rolb
lcall
sbb
jb
es
and
mov
jmp
ret
pop
insb
mov
pusha
testl
mov
lock
icebp
jle
cmc
loop
mov
scas
clc
mov
les
sub
aas
or
xor
rol
and
dec
push
jmp
gs
adc
cmp
and
shll
sub
orb
pop
lret
jnp
lods
mov
movl
adc
xor
in
scas
or
imul
add
loope
add
cmpsl
xchg
add
dec
and
jge
int3
sub
add
xchg
iret
cli
movsl
data16
xchg
cmpsl
push
jnp
shl
sbbl
ret
xchg
scas
loope
lea
outsb
fisubrl
cld
fisttps
xor
and
sub
sub
xchg
bound
outsl
mov
jns
int
in
pop
mov
cmp
dec
out
mov
mul
or
ds
xchg
lea
cs
rorl
jp
pop
fwait
sarl
pop
ja
sahf
ss
mov
adc
sub
out
lret
shlb
decl
in
mov
xchg
lcall
sub
mov
jb
sub
push
inc
sbb
out
push
in
pusha
pop
aas
mov
push
insl
inc
daa
mov
stos
and
cmc
imul
into
imul
dec
xlat
lcall
and
sub
or
in
add
sbb
scas
gs
pop
lods
hlt
xchg
xchg
ss
jno
test
sub
inc
fisubrl
jae
or
jge
and
das
or
mov
roll
int3
push
or
sub
or
aas
das
aaa
lahf
mov
adc
ds
sbb
mov
or
push
add
clc
sub
addl
xchg
and
push
repz
loop
adc
cmpsl
inc
mov
ret
fbld
rol
jl
sub
cmpsl
xchg
mov
lret
jae
xchg
scas
jbe
stos
adc
dec
inc
lcall
arpl
jnp
leave
dec
int
lea
mov
cmc
sbb
addr16
leave
xlat
test
mov
xchg
jge
xchg
and
sahf
push
adc
mov
cmp
out
lock
stos
test
cmc
cli
mov
lret
aad
xchg
lret
ret
js
sbb
int
sbb
pop
xchg
mov
jecxz
loope
notl
imul
push
and
dec
pop
sub
xchg
es
lahf
lahf
jge
lret
inc
into
cmp
int3
pop
loop
pop
das
mov
popf
mov
add
jmp
or
sub
ds
adc
imull
mov
out
out
jmp
inc
push
mov
cwtl
rdpmc
cmpsb
dec
repnz
test
sbb
cmp
fisubrs
push
loop
mov
int
inc
sub
hlt
hlt
mov
mov
in
pop
mov
aaa
xor
push
or
scas
sub
xor
int
cmp
out
push
add
cwtl
imul
imul
ljmp
mov
pop
push
sbb
pop
cli
insb
lds
mov
add
roll
jbe
inc
sahf
pop
jle
jg
mov
sub
aam
xchg
dec
loopne
push
sbbb
inc
push
cmc
mov
add
xor
and
jl
add
adc
icebp
inc
xlat
add
jg
mov
seto
pop
cmp
adcb
aam
in
ss
hlt
or
mov
js
aaa
sti
dec
loopne
push
faddl
cmp
add
repnz
sub
pushf
test
mov
mov
lods
xor
repz
fidivrl
and
cmp
cmp
lahf
int
int3
repnz
xor
movl
push
push
nop
dec
jle
scas
repnz
jns
dec
lretw
das
cmpsl
push
lods
icebp
jns
lret
adc
std
and
inc
mov
aam
cmp
mov
cs
femms
push
sysexit
mov
repz
icebp
aad
adc
and
repnz
xchg
xchg
xor
enter
and
mov
out
pop
pop
and
cmp
add
add
lock
push
arpl
fsubl
add
clc
add
mov
push
or
adc
and
and
pop
es
add
and
popf
ud1
mov
das
cli
add
push
shl
sbb
jae
iret
xor
sbb
fbld
test
sti
sub
aad
outsl
jmp
and
sbb
clc
lahf
adcl
outsb
jbe
scas
push
xchg
scas
aad
sub
jbe
pop
inc
mov
cmp
cmp
stos
adcl
and
jl
loopne
mov
sbb
jle
insl
lcall
adc
addl
pop
mov
rcrl
inc
xchg
cld
jmp
xchg
out
scas
test
faddp
and
push
inc
inc
lahf
mov
add
lret
lret
or
or
cmp
out
mov
pop
add
push
cmp
test
test
into
dec
and
pop
xor
decl
mov
mov
out
jmp
dec
cmp
xchg
xchg
pop
dec
repnz
cmp
or
iret
ret
add
xchg
mov
cmpsl
movsb
mov
fs
scas
push
pop
sbb
popf
add
aas
loopne
inc
and
mov
cli
dec
hlt
mov
jmp
or
fs
xor
mov
into
adc
pushl
das
jbe
push
lock
adc
push
xor
adc
add
and
aaa
stos
pop
sub
xchg
sub
mov
add
push
push
into
xchg
add
pop
adc
cwtl
frstor
leave
push
bsr
pusha
imul
xchg
inc
add
cmp
lods
in
sbb
in
jne
lret
pusha
jne
inc
insl
push
jo
das
pop
mov
xor
add
inc
lea
cmc
adc
rol
xchg
jo
sbb
inc
pop
pop
cmp
idiv
sub
imul
inc
pop
jno
jne
fadds
inc
icebp
mov
outsb
mov
fs
fucom
jge
ret
xor
push
xchg
sub
jle
xor
ret
and
lods
stc
je
mov
xor
pop
test
mov
jb
fldenv
lahf
xchg
loopne
mov
dec
cmp
mov
add
or
test
js
into
dec
fsts
lods
mov
daa
js
cmpsl
xor
shll
jo
jecxz
arpl
jne
adc
xor
nop
and
push
xchg
and
movsb
cmp
imulb
mov
push
add
xor
cmp
hlt
xlat
stc
notl
cmp
fisttps
sbb
jns
jns
mov
xchg
aas
jmp
push
out
dec
xchg
dec
dec
xor
sbb
push
lods
adc
add
adc
cmpl
or
or
sbb
push
mov
wrmsr
inc
sbb
shrl
hlt
ds
addr16
outsb
fistps
xor
lods
faddl
sub
shll
lret
ss
fisubrl
test
insb
jecxz
rcrb
leave
or
sbb
sub
enter
iret
pop
outsb
sahf
mov
sarb
cmp
icebp
sbb
in
out
xchg
repnz
mov
mov
lret
push
sub
incb
arpl
out
mov
sbbl
jbe
lock
xor
dec
sbb
lods
pop
test
stos
push
fnstcw
xor
out
xchg
in
addb
mov
mov
push
push
inc
mov
mov
xchg
hlt
and
cmp
cmpsl
xchg
decb
and
dec
cmc
in
jp
je
daa
out
lock
push
mov
pusha
sub
lcall
jo
mulb
xlat
mov
fistpll
lahf
out
and
cmc
dec
outsl
cs
cli
cwtl
subb
ds
sbb
jb
lds
jge
pop
insb
into
add
mov
xorb
sbb
and
push
test
ror
pushf
push
sub
es
sti
cmc
or
mov
lahf
stos
stos
enter
xchg
cmp
xor
xchg
add
int
sbb
testl
jne
ret
jno
les
xchg
inc
mov
pusha
popa
xor
mov
rclb
js
test
push
sub
xchg
je
insb
cwtl
mov
lods
lock
xchg
inc
lods
sbbl
es
loopne
mov
sahf
and
outsb
scas
dec
push
stos
sahf
jp
mov
sbb
push
inc
ror
in
icebp
dec
rep
es
jb
mov
cmpsb
push
push
mov
repz
pmaxub
addr16
mov
punpcklbw
jl
push
adc
cmp
pusha
mov
jne
orl
adc
dec
push
mov
rclb
cs
sub
mov
sub
jno
je
cmc
xor
push
cwtl
ja
xor
jb
cmp
lret
lock
dec
xor
inc
pusha
gs
add
mov
nop
stos
sbb
aas
push
out
push
adc
je
rolb
xchg
in
xor
sbb
cmp
insl
adc
or
aaa
mov
mov
sub
movsl
sub
pushf
daa
mov
frstor
dec
frstor
mov
nop
jecxz
xchg
hlt
das
xor
jno
cmp
aaa
lds
cmp
repz
and
xor
or
cmc
sub
pop
fimuls
daa
pop
cltd
fisubrl
test
mov
idivb
adc
cs
sbb
push
xor
mov
outsb
aaa
aas
retw
cs
nop
pop
sub
and
sbb
rclb
mov
jae
imul
mov
imul
sub
add
and
insl
or
cmpsl
pop
shlb
adc
je
push
mov
cltd
jle
je
cmp
fs
setl
lock
jne
mov
sahf
or
and
insb
jp
sub
push
sbb
jg
imul
sub
dec
insl
fxch
inc
cld
dec
lods
xor
add
fs
lret
das
fwait
mov
cltd
cmp
outsl
pop
fs
cmc
sar
mov
and
push
lock
sub
mov
into
lods
popf
xchg
pop
mov
cmp
mov
mov
ss
mov
pop
std
dec
testl
enterw
or
pop
fisttps
rolb
cmp
outsl
mov
jbe
pop
in
lods
add
pop
xchg
arpl
cmp
sti
xchg
inc
add
pop
push
fadd
xor
push
dec
insl
fwait
cmc
inc
clc
push
dec
mov
push
cmpsb
jmp
decl
fwait
pop
or
shl
cmp
lea
or
pop
inc
arpl
andb
scas
add
imulb
mov
enter
jnp
pop
dec
sub
out
std
mov
in
jmp
push
mov
enter
iret
dec
jae
je
rcrl
lock
jge
mov
fwait
adc
ret
pop
xchg
mov
mov
push
and
cld
shll
jp
loope
scas
frstor
inc
inc
cmp
cmp
mov
mov
mov
or
adc
cmpsl
sbb
out
fsubrp
sti
add
imul
cli
xchg
adc
subl
jmp
adc
xchg
add
cld
sarb
sub
fstpt
rcrl
jg
cld
jno
std
in
or
cwtl
cmp
popa
adc
daa
jge,pn
mov
xlat
pop
xor
adc
aas
sarb
gs
scas
lea
movsb
mov
xchg
cli
and
enter
popa
ds
filds
stos
and
mov
xchg
xchg
mov
scas
pop
pop
gs
arpl
iret
daa
std
daa
pop
pop
lds
push
mov
push
and
fnstenv
xor
sarb
rcll
mov
lcall
push
sbbb
orl
add
pop
repz
jmp
push
add
fwait
add
jns
repnz
jg
js
pop
int3
cmp
lds
addr16
xor
jno
push
push
sarb
arpl
jb
fnstsw
and
pop
jo
hlt
adc
sbb
push
lret
inc
inc
fwait
xorb
jg
inc
mov
lods
and
cs
push
sar
js
fisttpll
mov
movsb
or
xlat
adc
push
xor
lcall
push
repz
test
push
or
decl
sbb
mov
sbb
and
jno
mov
sub
lahf
mov
cmpl
cmpsl
aad
jmp
sbb
scas
mov
fildll
in
sub
stc
mov
push
mul
call
in
or
clc
mov
aas
rcll
loop
test
imul
and
mov
mov
loope,pn
cmp
loope
cmc
mov
push
xchg
jmp
mov
cmp
add
movsb
mov
ja
mov
sahf
xchg
xchg
fwait
pop
pop
das
inc
jae
adc
popf
andl
xchg
cmp
xchg
loop
sub
call
jns
shrb
mov
pusha
decl
lcall
sbb
push
jmp
pop
sub
dec
bound
cmp
mov
lods
std
add
mov
aas
push
lret
sbb
fisubl
negl
shll
movsb
mov
bound
add
push
and
inc
dec
or
inc
movsl
sub
mov
dec
sti
sti
inc
and
adc
jae
out
lcall
mov
mov
cwtl
jb
gs
lock
xor
pop
or
or
je
add
sbb
pop
mov
push
std
adc
cmp
testb
insl
adc
fimuls
imul
sub
cs
adcl
out
cmp
andb
pop
inc
popa
scas
or
sub
rcl
jnp
push
stos
mov
mov
jb
dec
popf
clc
jno
idiv
movsl
es
lahf
movsb
roll
fildl
hlt
mov
pushl
int3
icebp
pushf
and
js
cmp
leave
jne
adc
movsb
shrb
mov
pop
stos
jp
cmpsb
mov
ds
cmp
rorl
mov
mov
sbb
jg
cli
ret
lret
popf
je
test
xor
in
inc
mov
scas
int
push
movsl
imul
pushf
dec
sahf
jmp
loopne
mov
xchg
mov
mov
jle
loop
bound
js
mov
or
iret
inc
stc
or
ljmp
mov
cmpsl
fsubrl
cmp
popf
adc
imul
and
gs
add
into
lods
mov
or
test
jg
sbb
and
xor
loop
mov
add
inc
stc
in
or
cli
clc
mov
outsb
cld
pop
cmp
mov
out
decb
pop
xchg
jnp
jno
je
adc
stos
outsb
in
xor
xchg
cmc
stos
hlt
jbe
jl
adc
dec
outsl
enter
xor
enter
outsl
adc
fistpl
push
adc
mov
cmc
insl
popa
scas
imul
xor
rcrl
fimull
lods
and
xchg
loopne
cmc
shrl
mov
push
cs
xchg
cltd
cmp
cmp
push
sub
mov
aaa
imul
daa
add
fwait
scas
outsb
pop
adc
imul
rcll
mov
xchg
in
lret
cmpsb
into
mov
fdivrs
test
dec
ret
xor
mov
xor
test
jmp
or
cmp
xchg
adc
addr16
pop
dec
cmc
test
out
mov
ja
dec
das
pop
jecxz
jbe
pop
inc
adc
into
pushf
mov
mov
lahf
imul
dec
lods
aam
adc
divb
kmovw
addr16
sub
jge
mov
stc
iret
addr16
lret
xor
push
inc
cltd
jne
mov
mov
xor
pop
loopne
add
push
addl
sbb
jp
push
enter
jp
addr16
or
ret
in
sbb
adc
inc
or
xor
jmp
test
in
fnstcw
mov
call
test
sbb
and
cld
or
mov
cli
xlat
jo
push
add
pop
inc
push
or
jg
popf
repz
or
or
xchg
inc
lods
enter
daa
loopne
push
cmpsl
mov
out
jbe
outsb
pop
push
sub
je
jno
inc
fistl
pusha
je
imul
dec
loop
sub
rcrb
and
repz
mov
mov
mov
mov
std
mov
cs
adc
out
add
stos
es
push
stos
loopne
push
cld
push
jo
into
push
inc
repz
mov
push
pushl
mov
sbb
dec
mov
or
mov
ret
add
scas
push
aam
imul
jno
cs
int
jo,pt
clc
sbb
mov
imul
dec
sbb
outsb
xchg
adc
sub
xor
xchg
adc
push
test
jmp
jecxz
or
cmp
sbb
test
mov
je
pop
icebp
nop
loopne
lahf
stc
cmp
add
out
xchg
jnp
in
sbb
leave
xlat
and
xchg
pop
loop
rorl
mov
imul
out
ljmp
lret
jbe
stos
in
push
dec
sub
movl
push
or
movl
xchg
xor
mov
xchg
jmp
std
imul
push
jae
add
out
sub
pop
or
jno
add
inc
sub
mov
mov
push
jnp
cli
mov
pop
fdivrl
inc
mov
sub
xor
inc
test
in
push
clc
fsubrs
scas
and
popa
jg
bound
add
jno
xor
lahf
out
ljmp
dec
fistps
mov
scas
jbe
ljmp
mov
psubusb
push
mov
pushf
add
mov
fistl
decl
jnp
pop
into
insb
jl
mov
mov
adcl
out
shr
xchg
dec
pop
cmpsb
imul
jg
pushfw
ror
out
dec
lea
mov
mov
xchg
adc
mov
or
cltd
jns
jo
push
ljmp
xor
pop
jne
push
xor
in
ficoms
mov
push
fs
push
mov
icebp
lea
imul
sub
adc
sbb
pop
shlb
mov
gs
int
xchg
pushf
xor
jae
inc
sti
lcall
xchg
movsl
lcall
std
dec
xchg
mov
lods
xchg
xchg
mov
je
jle
inc
in
adc
mov
lds
dec
hlt
insl
call
in
cmp
mov
fwait
cmp
ret
jmp
aad
sbb
es
push
sahf
cmp
jne
adc
and
xor
push
jecxz
into
loop
push
mov
or
imul
fidivrl
push
push
xchg
arpl
mov
loopne
jb
or
popf
xchg
push
add
mov
adcb
int3
mov
cmp
pop
cld
sbb
repnz
or
jg
sub
cmp
ja
outsb
cmp
jno
ds
movsl
fnstsw
hlt
xor
out
dec
pushf
jnp
push
pop
dec
jns
pop
jmp
fisubrs
in
es
push
jge
pop
outsl
hlt
dec
sub
jge
add
repz
push
sbb
sub
bswap
mov
sbb
lods
sti
or
cmp
repz
out
inc
ret
cwtl
inc
xchg
lock
dec
fcmovu
inc
aas
cwtl
dec
jb
popa
ret
mov
cmp
jnp
jo
stos
jp
adc
mov
xchg
mov
ret
push
xor
loop
pop
jmp
inc
sarl
inc
sub
inc
cmpsl
jne
scas
xchg
or
loop
adc
gs
sti
cmc
mov
arpl
jae
sbb
addr16
cmp
and
stos
inc
fucom
cmp
adc
xchg
mov
xor
xchg
push
cmp
and
inc
je
sbb
xchg
mov
ja
shll
sbb
sbbl
xchg
movl
imul
ljmp
xor
mov
std
cmp
mov
adc
push
int3
stc
jno
sti
call
mov
mov
push
fildl
push
das
inc
xlat
inc
push
add
adc
or
mov
pop
fidivs
fcomps
cwtl
jne
cmp
repz
jecxz
mov
sbb
pop
push
test
and
bound
inc
jge
or
sti
and
mov
test
xchg
cmc
and
enter
cs
lods
mov
inc
sub
out
imul
js
movsb
mov
in
lea
enter
test
cli
iret
das
inc
ret
jae
inc
cmpsl
cmc
sub
dec
xor
adc
fsub
popf
cwtl
jge
dec
xchg
mov
cmp
negl
clc
sahf
loopne
cmp
sahf
dec
xor
imul
jo
repnz
les
mov
mov
mov
lcall
cmp
in
sahf
mov
pop
xchg
mov
push
scas
mov
or
inc
clc
mov
xchg
sub
aad
mov
jecxz
cmpsl
lods
mov
cmp
int
jb
repnz
pop
movsb
fs
pop
outsl
or
mov
or
sbb
dec
lret
jge
arpl
add
es
aaa
inc
repz
sub
adc
xchg
insb
mov
shlb
pop
scas
lret
into
pop
or
gs
dec
add
enter
or
mov
pusha
adc
cmpsl
inc
push
fnstenv
out
jne
dec
push
adc
xor
cmpsl
rolb
or
lock
hlt
xorl
mov
call
jl
enter
lods
mov
test
or
cmp
sbb
ss
inc
xor
ret
js
jecxz
cs
cltd
mov
movsl
and
push
sti
shr
inc
add
mov
push
mov
push
mov
and
mov
pop
std
mov
les
sbbl
mov
mov
push
adc
xor
mov
jns
pop
dec
in
jbe
dec
int3
repz
call
mov
inc
mov
outsl
push
dec
int3
xor
pop
sahf
sbb
sub
adc
and
pusha
cwtl
insb
repnz
adc
or
lea
pop
mov
or
mov
add
ja
pop
ret
xchg
sub
rcrb
fwait
or
cwtl
adc
push
pop
bound
aas
mov
pop
jb
movzbl
stos
popf
adc
mov
pop
sbbb
sbb
shrb
xchg
insb
fisubrl
mov
es
and
xchg
jle
aam
xchg
pop
aad
daa
jo
adc
es
add
adc
push
inc
mov
and
in
inc
dec
push
xor
pop
mov
mov
mov
ljmp
cs
out
inc
dec
add
jmp
jmp
dec
scas
jo
mov
fidivrl
hlt
dec
stos
ja
cmp
jmp
call
ret
mov
mulb
clc
sbb
add
jbe
mov
movsl
mov
popf
push
ret
cmp
imul
mov
mov
fistl
cmp
push
call
push
mov
call
jnp
shlb
frstor
bound
sub
push
or
adc
xchg
ret
push
in
xorl
and
or
xchg
loopne
lods
iret
lcall
jb
aas
cmp
nop
fdivrp
xor
popa
or
xchg
aad
fcoms
fldl
lods
cmpsl
pop
jbe
mov
subl
cltd
sahf
push
jl
test
mov
push
call
xlat
lcall
push
inc
mov
leave
call
inc
cmp
cmpl
pop
jmp
ret
stos
xchg
mov
pop
pop
jb
xor
mov
xchg
fistpl
int
cltd
lcall
push
jmp
xor
shlb
mov
rorl
mov
sub
enter
mov
movsl
test
mov
mov
leave
jae
and
fisttps
xor
aaa
sbb
adc
mov
jl
sbb
ret
add
scas
shll
jecxz
es
jns
lcall
popa
add
sbb
insb
ret
xchg
mov
jne
test
popa
mov
dec
mov
add
ret
pop
jg
jp
fs
cli
in
jae
jmp
jnp
xchg
test
push
insb
mov
and
or
fdivrl
call
or
fstpt
das
iret
daa
push
mov
xchg
cwtl
test
testl
out
dec
pushf
push
daa
shrb
or
je
and
push
jno
loopne
push
insb
cmpsb
push
mov
loop
cmp
mov
cmp
out
xchg
fimull
push
mov
adcb
into
sub
xchg
inc
cwtl
adc
stc
jp
dec
movsb
test
call
cmpsl
je
xor
xor
fldcw
mov
inc
cmpsl
incl
xlat
push
stos
xchg
jmp
aam
xchg
push
mov
repz
cmpsl
and
and
sti
cltd
adc
leave
xor
or
jge
sahf
test
pop
hlt
mov
add
stc
iret
into
dec
clc
adc
shll
push
sbb
cs
fildl
sbb
add
filds
pop
outsl
adc
xlat
pop
add
pop
adc
add
xchg
jge
add
xchg
leave
push
adc
popf
das
insl
cmp
nop
test
stc
add
xor
push
mov
call
xor
rol
pushf
ret
in
jo
push
fbld
mov
clc
push
jb
stos
xchg
mov
test
xor
out
leave
mov
lcall
cltd
inc
fstpl
adcb
lock
mov
out
pop
and
jg
mov
es
sbb
fs
jge
cmp
aad
push
sbb
dec
add
cltd
loop
xchg
push
sbbb
jg
ljmp
movsb
xor
xlat
stos
fidivl
fisubrl
add
and
xchg
enter
cmc
sbb
dec
add
addr16
mov
sub
scas
int3
add
add
scas
push
add
sub
movsl
stos
dec
sub
shll
cmc
inc
pop
lods
pop
jge
test
pop
lock
xchg
pop
hlt
inc
mov
push
into
insb
stc
out
inc
mov
dec
sbb
or
std
int3
inc
icebp
loopne
add
adc
mov
into
adc
sahf
inc
and
mov
sub
sub
xchg
stos
insb
mov
add
inc
inc
jg
add
leave
lea
cwtl
fidivrl
out
push
mov
jo
push
cld
je
mov
fisubrs
jl
in
pop
mov
add
xchg
mov
xchg
mov
jle
fsubs
add
or
and
xor
sti
ficompl
dec
adc
xchg
add
iret
mov
rcrb
adc
pushf
add
sbb
sahf
pop
push
mov
inc
inc
jmp
leave
inc
mov
pushl
ja
rolb
xchg
in
sbb
sbb
adc
int3
push
inc
add
imul
mov
dec
cmpsb
sarl
push
jbe
lds
adc
int
jle
das
movsb
cs
scas
ret
jne
mov
mov
adc
ja
dec
or
and
adc
add
jnp
fs
sahf
xor
mov
inc
mov
push
pushw
adc
stos
pushf
rolb
and
or
les
sbb
aad
into
mov
jno
les
xchg
adc
mov
sti
add
sbbb
pminsw
cwtl
repz
sbbb
fwait
enter
daa
pop
or
jmp
xchg
out
xchg
mov
mov
and
lock
call
cmp
mov
bound
mov
push
hlt
cwtl
add
mov
loop
mov
mov
push
inc
fiadds
push
dec
dec
stc
addr16
cvtps2pi
lcall
sbb
xchg
sub
mov
xchg
fdivrs
imul
push
adc
mov
ja
shll
fnstsw
mov
mov
jbe
addb
fistps
out
btc
outsl
pop
jle
push
sub
jmp
in
jno
add
daa
push
lods
xor
filds
pop
add
mov
fcompl
push
push
pushf
lret
sbb
sub
xorl
ja
cmp
jno
pop
stos
sub
xor
ss
mov
mov
into
add
sbb
ds
test
fldenv
in
movsb
cwtl
es
sahf
pop
out
scas
inc
fisttps
subb
jne
pop
inc
inc
jmp
cmpsb
push
mov
rcl
ret
xchg
cmp
push
cmp
pusha
pop
push
outsb
dec
sbb
jae
out
inc
sub
xchg
push
push
add
stos
cmp
imul
test
test
adc
mov
je
cmp
add
push
sbb
rclb
inc
xchg
sbb
xchg
cs
or
xor
sbb
adc
adc
shlb
push
xchg
and
inc
cmp
adc
inc
xchg
xor
sbb
dec
out
sub
ret
cmp
popa
add
stos
subb
test
or
ret
add
cmp
and
push
fdivrp
sub
mov
inc
inc
aas
inc
jle
and
mov
outsb
inc
ss
daa
bound
push
pop
rcr
mov
xchg
cmp
push
and
in
cwtl
loop,pn
fstpt
hlt
lods
insb
sub
rcll
adc
ja
fs
pop
ret
sbbb
sub
push
std
movsl
xchg
dec
xchg
push
mov
je
mov
push
inc
pop
mov
xor
xchg
das
movsl
push
jle
cmp
fs
cli
cmp
rcll
push
mov
mov
or
sbb
mov
push
sahf
jp
push
loope
cmp
fiadds
cmp
icebp
add
jb
scas
mov
outsl
outsl
test
sbb
aas
dec
push
xchg
sub
inc
inc
jbe
inc
lahf
loop
sub
stos
and
ret
jns
stos
loope
pusha
test
xor
xor
xchg
or
jb
cmpsb
jecxz
push
mov
xchg
mov
mov
mov
mov
inc
mov
inc
bnd
mov
add
js
lret
insb
aas
lods
cmp
inc
dec
push
sub
add
scas
loop
test
xchg
loop
adcl
popf
cmp
mov
out
adc
sti
fnsave
push
mov
sahf
xchg
fwait
add
daa
lahf
dec
jb
mov
lcall
add
xor
lock
aas
lds
jb
lahf
repnz
in
add
pop
incl
nop
cwtl
inc
cmp
ja
cld
jge
pop
aam
push
inc
pop
scas
mov
shlb
and
cmp
sbb
popl
jecxz
rcrl
jo
int3
mov
addr16
aaa
repnz
pop
inc
scas
pop
push
scas
movsb
fst
out
mull
daa
pop
cmp
pushf
gs
xlat
out
adc
dec
lret
nop
repnz
cmc
mov
stos
in
mov
or
dec
in
sub
ficomps
aam
pop
lock
jae
and
clc
pusha
in
movsb
mov
movsb
mov
les
in
jnp
adc
push
daa
inc
xor
shl
dec
mov
roll
pop
push
jns
add
push
pusha
adc
sub
jmp
pop
jge
sbbl
add
push
pop
jmp
push
adc
mov
lods
jecxz
cli
bound
add
mov
inc
or
inc
sub
xchg
shrb
ret
pop
pusha
inc
insb
and
out
mov
jnp
outsl
lods
jo
and
xor
mov
ffree
push
sub
mov
lret
add
pushf
std
loopne
ss
mov
ret
outsb
shlb
lahf
cmp
in
and
out
iret
jbe
arpl
cmp
aad
xor
jl
lret
repz
xchg
jle
mov
inc
and
fstpl
popa
dec
dec
cwtl
dec
aaa
cmp
mov
adc
in
cmp
rcr
xor
inc
lahf
cld
sub
sbb
ret
hlt
inc
add
or
fstps
fcmovnbe
xor
xchg
add
add
inc
inc
pop
gs
mov
add
pop
mov
mov
mov
sub
mov
fwait
outsl
sub
xchg
outsb
shr
dec
inc
add
loope
mull
cld
mov
mov
js
fsub
xlat
iret
xchg
and
inc
or
inc
lahf
jecxz
ss
pop
loopne
je
mov
movsb
loopne
xor
stos
nop
jp
sbb
repnz
mov
pushf
adc
incb
cmc
mov
dec
fistpll
mov
mov
movsl
sti
clc
or
adc
inc
mov
sbbl
out
out
mov
sub
push
ficompl
jne
add
push
rol
sbb
push
mov
or
cli
test
jno
shr
pop
lcall
cmpsl
or
push
shrl
popa
rclb
scas
and
sbb
xlat
stos
push
dec
aam
sbb
shlb
pop
mov
lcall
xor
xchg
hlt
decb
jnp
cld
jge
push
inc
fucom
sti
mov
jg
xchg
data16
cli
add
rolb
xlat
jecxz
cmp
lahf
bound
cld
fistps
sbb
rcrl
imul
outsl
mov
and
inc
imul
popf
lods
in
subl
mov
add
add
jae
inc
pop
repnz
sbb
sbb
and
out
mov
ret
cmpb
mov
js
mov
ljmp
cmc
or
adc
loopne
test
and
dec
mov
data16
in
jg
jae
mov
fisttpl
arpl
out
aam
jno
xchg
mov
mov
lds
add
jmp
sbb
and
dec
test
sbb
out
dec
out
add
outsb
daa
pop
ret
stc
add
jo
lock
push
inc
xor
out
cwtl
jae
arpl
cli
jb
mov
dec
out
cs
lea
lock
inc
mov
adcl
addr16
jmp
add
movsl
dec
in
fwait
lock
fnstcw
test
cltd
nop
cmp
sbb
into
std
mov
repnz
out
sbb
rclb
jnp
repnz
loopne
push
inc
rcrb
ljmp
adc
mov
inc
enter
std
divb
scas
adc
cmp
xchg
jns
pop
mov
pushf
rclb
sub
pop
sub
add
not
mov
jge
mov
mov
mov
insb
stos
dec
push
loopne
insl
cli
mov
pop
cmc
pop
push
push
or
cmpl
shll
scas
ss
inc
pusha
push
clc
add
fnstsw
mov
jbe
push
jle
iret
popa
mov
pop
ror
sub
in
pop
popf
cmp
in
mov
out
daa
mov
fldl
rorl
pop
xor
xchg
mov
pusha
xlat
dec
dec
mov
dec
insb
fdivs
mov
mov
ret
dec
aaa
or
rcr
adc
ss
jno
rcll
dec
in
and
ljmp
sbb
push
xchg
hlt
cwtl
jecxz
iret
add
fcmovne
lods
mov
aam
lods
addl
fstl
adc
roll
mov
and
xor
mov
cwtl
gs
mov
scas
cwtl
es
jbe
cmpsb
add
ret
mov
add
test
andl
stc
lods
lret
push
hlt
and
jmp
xlat
int
fbstp
cmp
mov
jmp
gs
ficoml
call
imul
dec
inc
mov
cmp
sbb
cmp
fwait
sti
jbe
push
out
jns
inc
cmp
outsl
mov
aas
cmpsl
dec
xchg
daa
pusha
or
addr16
pusha
sbb
addr16
push
test
imul
mov
imul
out
sbb
lods
xchg
imul
fsubp
movsbl
clc
cmpsb
repz
mov
jg
sbb
sbb
cmp
lret
sbb
or
leave
push
cwtl
push
add
adc
movsb
lea
lcall
mov
jmp
stos
sbb
subl
lock
sti
lret
insb
loopne
lock
push
in
and
scas
dec
sti
mov
mov
jnp
imul
mov
arpl
int3
mov
push
pop
mov
pop
and
xor
call
clc
sub
cmp
cld
jns
iret
jne
push
xor
std
cmp
sar
fcomp
pop
jl
push
or
das
jge
push
jecxz
popa
loope
push
cmpsb
xchg
sbb
test
movsl
push
imul
xor
loopne
ret
mov
fs
sub
sahf
ja
call
mov
std
outsl
pop
daa
fdivrs
pop
push
pop
and
push
in
sub
jo
add
add
push
add
mov
adc
test
cmp
pop
cmp
pop
xchg
pop
or
mov
test
jb
fld
addr16
sbbb
stos
pop
ficomps
or
dec
in
cwtl
lock
cmp
pop
push
mov
pop
inc
or
jns
add
mov
int3
sysexit
fnstenv
not
addr16
stc
jnp
pop
call
pop
jp
shlb
add
cmp
mov
andb
mov
mov
sub
pop
cmp
stc
mov
das
sbb
pop
mov
xor
jb
sarl
sahf
cs
and
ds
cmp
cmp
dec
fnstenv
repnz
mov
rolb
lahf
lock
sarl
addr16
pop
jmp
jecxz
push
xchg
push
inc
movsl
push
imull
pop
ds
incl
loop
fldpi
ja
xchg
xchg
test
mov
and
decb
lcall
adcl
cmp
daa
jne
cld
insb
mov
push
cltd
sub
dec
data16
cmp
inc
push
sub
leave
mov
dec
jecxz
clc
aaa
insl
cmp
nop
dec
add
push
fs
pushf
mov
test
sub
push
cs
cwtl
in
push
dec
adc
jg
push
pop
push
pop
cmp
adcb
rcll
daa
dec
cmp
cmpsb
sbb
xchg
jle
push
mov
clc
fwait
mov
in
popa
jl
cmp
dec
mov
iret
dec
loopne
pop
mov
push
leave
jno
in
jl
and
into
inc
push
adc
enter
loop
adc
fbstp
filds
xchg
and
call
mov
dec
in
xchg
add
add
movsb
daa
decl
jge
push
lds
fsubrs
mov
add
loopne
push
adc
hlt
pop
cmpl
push
imul
adc
in
and
in
xchg
sub
aas
pop
dec
daa
add
clc
orb
stc
xchg
imul
and
fidivrl
aam
sti
ss
sbb
and
stc
std
pop
push
hlt
push
mov
sub
jne
in
rcrb
mov
jne
add
cmpsl
push
movsl
daa
cmp
mov
test
icebp
divl
ja
lahf
push
imul
insl
mov
inc
dec
jns
pop
dec
jbe
inc
adc
enter
sub
aad
inc
push
ror
stos
inc
mov
adc
scas
and
xchg
mov
cs
mull
mov
push
pop
sbb
sub
aad
jmp
jae
mov
dec
mov
in
sub
fisubrl
movsl
xor
xlat
cmp
add
call
out
arpl
mov
out
mov
int
neg
dec
cmp
jmp
push
mov
pop
test
add
jnp
sbb
pusha
mov
pop
fbld
and
sbb
mov
push
cmc
enter
in
in
leave
and
jo
les
loop
repz
cmpsb
pop
adc
in
and
loopne
mov
lahf
call
out
or
jns
xlat
sbb
lret
sbb
out
insb
rorl
mov
pusha
insb
and
adc
dec
jnp
pop
mov
in
clts
sub
aaa
cmp
test
ret
adc
mov
xchg
popf
push
jmp
cmp
mov
sbb
pop
mov
cwtl
fwait
das
add
leave
dec
inc
mov
jl
outsb
shll
mov
iret
jge
inc
int3
xorl
lea
inc
incl
push
mov
cli
pop
push
push
test
xchg
push
push
inc
add
sub
cli
xorb
xchg
jg
ljmp
xchg
jg
sbb
cmpb
ficoml
jg
std
and
fsubp
pop
inc
jae
or
or
dec
jge
insb
adc
clc
push
sarb
lcall
cltd
pop
ljmp
in
stc
imul
idivl
jne
sub
lock
cmpsl
push
mov
add
mov
fs
imul
jg
mov
ljmp
jge
in
jmp
rcrb
dec
jmp
imul
add
les
imul
add
hlt
fidivrl
xlat
pusha
lods
jae
imull
pop
mov
outsl
fidivrs
xor
movsb
push
repz
sarb
out
add
inc
xchg
pop
loope
mov
fistl
push
test
add
scas
and
cmp
sahf
pop
outsl
and
pop
into
push
or
and
inc
repnz
and
shll
xchg
mov
sub
mov
mov
outsb
call
fnsave
ret
sbb
sbb
add
cwtl
jp
popa
sahf
push
daa
pop
repnz
inc
pop
cmp
out
push
fdivrs
mov
inc
insl
shr
xchg
sub
pop
cmp
jbe
enter
cmc
lret
outsl
xor
mov
pop
imul
mov
mov
dec
mov
xor
mov
sbb
bound
fbld
xlat
js
jp
scas
std
lea
pushf
cmp
movsl
jae
sbb
ja
mov
out
xchg
lock
add
lret
shrl
xor
adc
cmp
or
cmp
xchg
ljmp
test
pop
sahf
mov
into
inc
adc
adc
pop
out
jo
xor
out
xor
xchg
mov
xlat
xchg
dec
jge
sub
mov
fsubs
out
add
dec
jle
mov
popf
push
ret
pop
jecxz
and
ss
xor
mov
out
lret
imul
sub
mov
sub
add
aas
imul
cmp
dec
xor
icebp
cmp
cmp
inc
adc
add
fsubl
nop
loopne
xchg
xor
pop
jge
imul
roll
sbb
ds
fcmovnbe
push
pop
push
and
dec
and
pop
cmpb
outsb
pop
lods
unpcklps
cmp
lods
loop
jg
movsb
push
xor
add
arpl
inc
xchg
adc
popf
xor
sbb
subl
and
mov
sub
int
xchg
push
loop
loope
roll
mov
adc
sub
movsl
inc
mov
inc
mov
pop
dec
dec
scas
inc
test
jae
enter
xchg
fdiv
sub
sub
out
aas
mov
mov
jecxz
and
fs
aas
dec
mov
jbe
lcall
pop
dec
jae
mov
fs
loope
and
addb
cwtl
xor
jbe
jge
and
mov
and
mov
and
push
cmp
ljmp
mov
xchg
mov
xchg
stc
mov
repnz
scas
stos
adc
mov
cmpsb
push
inc
icebp
dec
add
pop
push
lret
cmc
sbb
jns
cmp
pop
outsb
push
sbb
outsb
mov
ljmp
mov
xchg
lret
cmc
and
add
sub
or
jg
jmp
bound
out
jne
pusha
cwtl
in
push
les
xor
lods
imul
cmp
cmp
sbb
enter
inc
push
push
mov
pop
dec
pop
pop
push
sub
in
push
add
jno
pop
adc
roll
leave
cltd
popf
xor
xor
jno
dec
mov
ret
cmpsb
and
jg
jmp
push
cmpsb
cmpsb
imul
hlt
add
xorb
xlat
jg
popa
push
sbb
repz
xor
daa
cmp
mov
mov
rcr
dec
inc
push
push
push
cmp
aaa
stc
jae
adc
movsl
outsb
cmp
xchg
js
roll
or
cwtl
leave
dec
pop
pop
xchg
stos
push
mov
nop
das
add
add
xchg
cmp
cmpsl
scas
outsb
bound
inc
ljmp
test
jp
xorl
cmpb
mov
push
jo
sbbb
xchg
xchg
xor
daa
cld
imul
ds
aad
repz
es
mov
test
adc
sbb
mov
rorl
adc
shrl
sbb
out
gs
mov
xchg
loope
and
xchg
push
sahf
pop
pop
mov
jo
adc
psubq
das
and
inc
in
das
mov
pop
mov
test
add
outsb
mov
in
pushl
pushf
aad
test
fcmovnu
lock
or
ffree
into
cltd
cmp
dec
and
mov
jb
or
dec
lahf
pop
sbb
outsb
jmp
sbb
orl
in
dec
popa
dec
out
bswap
jno
int3
fcom
sub
cli
jmp
add
fcmovnbe
cmp
ret
pop
fsts
out
xor
dec
out
in
rorb
add
icebp
das
jl
jo
test
clc
add
inc
mov
xor
mov
mov
jb
xchg
inc
dec
adcl
lock
out
enter
stos
leave
pushf
in
inc
inc
loope
ja
rcll
and
jmp
cld
push
ds
jl
sbb
dec
roll
jb
insl
adc
movsb
sbb
add
divl
and
ds
push
xchg
insl
fwait
inc
pop
ret
dec
inc
jecxz
mov
notl
cmp
fcomip
cmp
faddl
std
mov
sub
cltd
jbe
jl
dec
clc
inc
movsl
mov
lret
xchg
maxps
imulb
xchg
into
inc
jne
jne
bound
mov
idivb
mov
fnstsw
mov
fimuls
sbb
inc
lock
mov
pop
ljmp
lret
lret
fstpl
push
call
cmp
dec
popa
aad
push
jae
popa
xchg
cmovs
push
stc
cmpsb
cmp
in
out
dec
lahf
lahf
push
lods
ja
jns
mov
les
and
js
lcall
aaa
add
stos
addr16
add
pop
mov
ret
idivb
js
dec
movsl
inc
sahf
mov
mov
cs
mov
lret
in
jb
movsl
ss
out
scas
das
mov
jo
or
inc
fists
xchg
pop
xor
int3
sub
and
dec
mov
int3
inc
loopne
sub
adcl
push
aad
mov
xorb
pop
fcomp
mov
mov
pop
testb
mov
fisubl
addr16
push
and
push
pop
sbb
jp
xchg
mov
into
aaa
inc
cmp
test
outsl
and
push
decb
add
push
aam
stos
cmpsl
rcr
cli
add
xor
push
cs
addl
into
xchg
push
les
xchg
sarb
push
mov
shr
lret
mov
jge
pop
test
stc
es
insb
or
fidivrl
adc
adc
jno
arpl
mov
in
sub
jbe
jo
jnp
adc
mov
jecxz
lds
mov
pop
and
jnp
into
push
mov
ficomps
push
xchg
adc
pushf
and
jnp
jl
cltd
and
jge
jo
decb
jle
mov
scas
movsl
psllw
jmp
pop
mov
fwait
push
and
in
mov
push
inc
leave
xor
or
ja
subl
ficoms
loope
inc
pop
cmp
aam
push
and
pop
dec
das
mov
mov
inc
push
aas
les
inc
fimuls
orl
push
dec
cltd
mov
testl
or
bound
loop
movsb
pop
add
cwtl
jne
sbb
and
jnp
loop
mov
push
cld
fiaddl
iret
xor
xchg
inc
xor
lock
cmp
mov
pop
and
shlb
push
jmp
sub
aam
or
xchg
fs
enter
out
xchg
add
je
aas
in
fadds
xor
xchg
nop
outsb
jae
sub
dec
imul
outsl
ds
faddl
adc
inc
sub
scas
pop
push
jl
das
xchg
cwtl
lret
xchg
push
icebp
mov
mov
add
cmp
add
enter
out
or
negl
stos
jo
out
cmp
inc
mov
mov
mov
loopne
and
inc
sahf
cwtl
mov
in
orl
or
sub
xchg
outsb
popa
adc
mov
add
xor
mov
out
xchg
mov
aam
unpckhps
test
jbe
and
xchg
aas
je,pn
ret
imul
clc
lcall
out
lret
pushf
jecxz
lahf
imul
insb
dec
jecxz
jp
pop
ds
icebp
xchg
mov
push
popa
daa
push
add
push
inc
adc
xor
loopne
int3
stc
lods
pusha
xchg
sub
loop
cli
daa
lods
xchg
ljmp
in
addr16
sub
or
xor
xor
and
cmp
pop
rolb
sbb
mov
lcall
sti
pop
xchg
stc
addr16
add
add
xor
add
pushf
sti
xchg
push
fidivrs
insl
dec
inc
jne
mov
or
cmp
sbb
inc
clc
cwtl
xchg
nop
les
cmp
and
mov
or
jne
aad
mov
mov
iret
icebp
ret
out
aas
sub
mov
add
fldenv
push
dec
inc
sarb
adc
xor
sbb
les
in
test
adc
je
or
dec
inc
xor
and
mov
mov
repnz
mov
dec
fsubl
push
loopne
loope
js
dec
shll
jbe
pop
mov
sahf
cmc
jecxz
and
mov
enter
ret
loope
push
out
xchg
xchg
mov
pop
xor
cmpsl
or
enter
add
stos
dec
out
fildl
push
mov
in
ret
mov
mov
jp
ljmp
sbb
add
xor
movsl
mov
push
rorb
js
cwtl
cmpsl
mov
mov
cmpl
add
imul
mov
inc
repnz
sbb
adc
pop
mov
pop
test
enter
scas
mov
popf
pop
sahf
jbe
sub
repz
mov
popf
inc
xor
mov
xor
popa
push
inc
hlt
dec
ljmp
lea
negl
and
enter
outsb
decl
in
subb
sub
cmp
scas
cld
idiv
inc
add
fdivl
push
in
xor
mov
stos
lods
and
xor
into
and
add
jnp
xor
gs
out
add
fadd
or
pop
jb
cmp
xchg
mov
das
adc
and
mov
ljmp
loop
imul
sub
icebp
mov
les
ret
push
cmp
fs
fsts
lods
mov
scas
and
loopne
dec
cmp
jg
int
pusha
push
and
push
jp
lods
xlat
xchg
ds
xor
repnz
cmc
mov
or
fsubp
and
mov
mov
data16
lret
fcmovbe
mov
pop
lret
xchg
xor
dec
sbb
fsubs
rcr
or
mov
ret
sbb
jb
imull
mov
mov
and
xorb
fadds
rorl
adc
mov
push
push
ljmp
pusha
enter
cltd
xor
in
leave
xchg
popf
cltd
cwtl
adc
jae
push
leave
jg
out
scas
loope
addr16
xchg
int3
loopne
cmp
or
pop
lods
adc
hlt
mov
jmp
loope
sbb
inc
add
add
ss
cmp
jo
push
idiv
in
sub
pop
jnp
adc
or
sbb
add
push
fisttpl
roll
xchg
jnp
fs
cwtl
pop
loopne
push
pushf
push
xor
cmpsb
mov
pop
aaa
sbb
js
inc
sub
mov
fstpl
push
mov
jae
enter
fcomps
adc
push
pop
inc
ficoms
push
ss
and
stos
insb
add
sub
js
cs
adc
dec
arpl
iret
and
push
mov
repnz
repnz
add
into
call
enter
in
stos
push
mov
cmp
aas
xorl
scas
mov
pop
push
sbb
arpl
mov
aad
ret
add
mov
xor
cmp
rcrl
jmp
lret
mov
push
or
sbb
popa
stc
mov
ret
add
xor
push
xadd
sub
pop
sbb
sub
mov
push
dec
out
pop
popf
sub
je
mov
in
adc
dec
push
and
jbe
mov
movsb
movsb
and
jb
inc
out
gs
push
ja
push
mov
adc
dec
test
inc
jae
imul
jae
ret
xchg
push
mov
sbb
int
mov
jg
sbb
fistpl
jae
mov
push
and
and
jo
lret
stc
mov
inc
repnz
inc
or
push
xor
ljmp
mov
mov
das
and
js
sub
cmpsb
sti
xor
hlt
or
mov
ret
cmp
cltd
mov
cwtl
dec
jno
outsl
imul
rcrl
jmp
loopne
mov
jg
das
shll
leave
test
sub
push
mov
add
push
jmp
std
daa
aas
mov
jp
sub
xor
push
nop
pop
cmpsl
sbb
rcrl
mov
sbb
cmp
push
xor
jne
lds
mov
cltd
pop
mov
pop
and
in
gs
stc
mov
into
cmpl
lods
iret
add
aaa
popf
jp
aas
push
cmp
add
sbb
mov
sarl
push
inc
test
cmc
pop
jmp
inc
or
lds
cmpsl
add
out
cmp
adc
psubusw
mov
cld
pushf
pusha
mov
xchg
push
lea
insb
adc
hlt
mov
xchg
xchg
or
movb
leave
ret
fiaddl
into
lret
adc
dec
mov
aas
push
push
xchg
mov
mov
fdivs
jp
inc
add
in
jg
jnp
mov
sti
adc
mov
mov
bound
filds
dec
push
or
nop
insb
jo
rcr
sarb
std
jns
clc
or
inc
mov
xchg
fwait
sti
jae
sub
insl
mov
scas
dec
jnp
sbb
shrl
push
adc
add
fldl
scas
mov
xor
xchg
cmp
or
std
fnsave
mov
aad
das
mov
jl
scas
pop
dec
mov
inc
andl
ja
shlb
push
in
or
je
out
adc
cmpsl
dec
pop
mov
test
lret
cmp
pop
and
popl
sbb
sbb
outsb
jg
mov
jns
sbb
lods
mov
xor
mov
add
add
adc
aam
inc
or
xor
xor
nop
adc
sbb
mov
out
jp
aad
aam
jo
lret
cmpsl
lea
repz
push
jg
bnd
aas
jg
int3
fmuls
rcrb
mov
xchg
push
loop
dec
sub
popf
pop
pop
insb
jns
or
scas
push
aam
sub
adc
daa
mov
mov
int
in
in
push
inc
es
or
insl
push
jno
stos
in
xor
andl
scas
cld
jle
sub
sahf
ror
hlt
jge
sbb
push
xor
sub
pop
outsb
cmp
iret
jle
movl
pop
mov
stc
mov
xchg
mov
lods
leave
cmp
and
push
lret
dec
add
inc
xor
movsl
push
mov
aam
cmp
fsubrs
adc
test
pop
into
sub
cmp
je
jo
sbb
mov
mov
decb
mov
test
adc
lret
sub
rorb
fistpll
push
mov
push
pop
mov
push
std
fcmovb
add
jg
inc
into
sahf
sub
sbb
pavgb
loopne
xchg
cs
stos
ficomps
cs
push
mov
jmp
sbb
aas
or
call
mov
dec
jg
push
out
push
xor
int3
push
test
sub
push
add
cli
sti
loop
and
push
jbe
pop
sub
add
arpl
xor
fwait
arpl
inc
in
popa
cltd
iret
lock
jp
shr
and
cmp
aad
jb
movsl
cld
mov
fnstsw
pop
xor
test
jge
les
sahf
xor
dec
stos
test
arpl
sub
fisubl
mov
shll
push
insb
sbb
lcall
pop
xchg
mov
xlat
es
sbb
jecxz
testl
dec
arpl
test
lds
pop
jno
fucomi
fisttpl
mov
movsl
jae
pop
push
dec
mov
fadds
sti
iret
xchg
mov
mov
or
mov
leave
ret
jne
fadds
xor
mov
xchg
sub
stc
and
fwait
push
and
or
cmpsl
repnz
es
stos
mov
fdivrs
std
add
xchg
lcall
jp
int
mov
jne
pop
or
popa
sbb
fstpt
adc
pop
dec
xlat
test
jge
pusha
out
ss
outsl
sbb
xchg
addr16
sbb
jmp
outsl
popa
repz
popf
xlat
pushf
dec
in
xchg
mov
idiv
scas
movsl
insb
xchg
addb
mov
das
mov
mov
xchg
pop
add
pop
in
aad
jnp
and
sbb
incb
adc
sbbb
pusha
jno
aas
out
cmp
xchg
stos
push
fisubrl
rclb
cltd
cmc
aad
xchg
mov
adc
and
jl
movsb
mov
cmp
cmc
xor
or
and
outsb
cmp
sbb
out
mov
push
sub
jp
or
jge
sub
ds
sub
xchg
add
insl
add
nop
mov
mov
pusha
fstpl
push
push
sub
in
inc
and
cltd
jl
sub
xor
imul
inc
mov
mov
mov
les
movsl
jl
dec
addr16
or
pushf
push
popa
rorl
xchg
les
and
cmpsb
xchg
cmp
stos
xchg
insl
dec
sti
pause
sbb
out
or
mov
bound
add
andl
fprem
push
lret
data16
dec
pop
pop
jb
test
imul
outsl
dec
and
mov
push
push
out
sbb
aad
ja
push
xchg
cmp
xor
dec
sbbl
insl
and
ret
dec
dec
dec
mov
lods
or
push
sahf
push
xor
popw
out
stos
sbb
loopne
jb
or
pop
bound
cmovno
sub
push
mov
lcall
cmp
loop
adc
imul
xorl
in
xchg
cmp
or
sbb
je
in
bound
mov
mov
stc
cld
push
outsb
loop
js
ja
int3
push
decl
insb
mov
pop
scas
mov
add
subb
mov
adc
clc
xlat
les
sub
add
cmc
lcall
outsb
xrelease
cmp
jp
mov
scas
dec
jecxz
stos
inc
fcmovb
push
xchg
xchg
dec
sbb
sub
cmc
fdivp
fsubrl
sbb
int3
insb
aas
and
sub
aam
sahf
call
add
add
jnp
xchg
dec
ret
gs
std
xchg
dec
inc
cli
fmull
cli
aad
xchg
lret
clc
pop
mov
fidivrs
push
test
hlt
scas
lahf
lret
xchg
adc
rcll
jp
xor
xchg
rolb
aaa
ds
push
add
push
imul
cwtl
pop
jl
pusha
xchg
mov
adc
push
sbb
lea
and
xchg
xor
stc
xchg
out
xor
fs
add
mov
mov
sub
aaa
inc
lret
lret
jb
pusha
add
jne
cmc
cmp
mov
add
movzwl
xchg
dec
test
push
mov
imul
stos
sbb
and
insl
in
add
jno
mov
mov
mov
in
ret
mov
or
addr16
sbb
mov
xor
shlb
and
inc
int3
sbb
xor
outsl
fs
jbe
pop
mov
insb
mov
inc
and
stos
xchg
enter
or
xor
mov
jl
fcmovu
pop
fldt
jmp
jl
cmc
sbb
sbb
inc
lcall
push
pop
mov
rcrb
mov
inc
adc
lods
sti
sti
insb
dec
push
testl
test
adc
xchg
jp
pop
push
pop
ret
lcall
pop
jb
push
pop
pop
aas
popa
mov
test
shlb
xchg
jmp
mov
add
fnstsw
clc
jne
lea
mov
mov
mov
ljmp
ds
mov
pop
xchg
insl
xchg
inc
roll
jnp
and
jl
xchg
ja
mov
pusha
inc
cs
movsl
enter
sarb
cmp
or
shl
fnstcw
push
push
pop
inc
in
xor
ljmp
es
testb
cmpl
xchg
enter
ret
mov
jmp
inc
in
data16
je
popf
or
dec
sbb
lahf
cmpsb
xor
pushf
ret
and
rcrl
fxch
cmp
pop
lods
sub
mov
inc
repz
xor
and
mov
or
call
cwtl
daa
add
mov
jno
cmpsb
sub
les
push
cmpsb
sub
lcall
mov
inc
fwait
mov
mov
or
aad
xor
enter
ret
int3
aad
es
pop
nop
stos
popf
adc
test
iret
adc
pop
mov
leave
mov
jae
les
lods
ds
and
in
mov
js
jne
aaa
ds
test
add
jae
inc
mov
mov
js
sub
mov
inc
pop
mov
scas
mov
jbe
adc
or
repz
mov
test
adc
xor
aas
push
rcll
out
mov
push
lret
jl
jmp
sbb
cwtl
mov
fwait
cmc
fwait
dec
leave
push
std
xchg
movsb
test
push
add
xor
cwtl
jp
xor
xchg
mov
dec
rcrb
push
js
daa
clc
in
test
sbb
pop
fimuls
and
mov
add
sub
mov
test
push
pop
cmpsb
mov
andl
mov
mov
sub
outsb
repz
push
mov
scas
push
xchg
mov
fcompl
push
jnp
jmp
fdivl
daa
xlat
push
jns
and
shlb
inc
push
stc
cld
sahf
fsts
inc
pop
cmp
push
adc
outsl
sub
add
test
arpl
lea
jecxz
movsl
mov
lods
pop
mov
repz
popf
mov
popf
mov
loopne
filds
addl
push
mov
pop
jns
pop
cmpl
or
jno
mov
inc
in
jns
adc
pop
std
or
movsl
mov
into
lret
mov
jecxz
aaa
fmull
pop
mov
rolb
jl
mov
and
jne
cmp
jbe
adc
mov
nop
adc
gs
adcl
dec
mov
scas
jmp
push
in
scas
pop
jmp
cwtl
push
insb
mov
loopne
sarl
orb
dec
cmp
sub
out
fs
sub
lahf
mov
loope
or
jg
jno
push
in
jnp
cmp
stos
jl
ret
add
mov
or
push
pop
cmp
int3
mov
or
pop
pop
dec
repz
mov
or
ret
sbb
jmp
and
clc
fdivs
cmc
imul
xor
mov
daa
jecxz
push
movb
subb
sahf
and
aad
mov
push
decl
push
cmp
ror
stc
jmp
adc
xor
push
sbb
repnz
xchg
shrb
mov
adcb
addr16
dec
or
stos
cmp
dec
adc
adc
call
mov
arpl
inc
mov
dec
fisubrs
and
mov
or
pushf
mov
scas
jg
in
cmpsb
fisttps
sbb
js
decb
push
lods
sbb
lock
iret
inc
pop
jecxz
dec
stc
push
mov
sbb
pop
sti
add
out
adc
xchg
bound
into
and
ds
insl
mov
xor
out
outsl
fmuls
gs
fcmovnu
in
xchg
or
push
dec
push
add
xchg
sub
imul
sti
pop
mov
sbb
adc
fcmove
xchg
adc
xchg
mov
add
dec
das
aam
enter
cmp
and
loope
dec
adc
adc
lods
push
lcall
cmp
fnstenv
fsubrl
test
fstps
rcl
pop
aas
mov
insl
cld
mov
dec
push
mov
inc
dec
mov
mov
jns
lods
cld
pop
int
test
adc
es
mov
imul
or
sbb
ja
dec
ficompl
cs
mov
ss
pop
outsb
jecxz
loop
loopne
xchg
sbb
pop
inc
fld
lcall
pop
jg
and
popl
cmc
dec
lds
aad
and
int
push
push
sbb
sbb
mov
lret
and
ja
xor
flds
jle
push
push
lret
xor
add
xchg
orl
sbb
fidivl
and
jg
mov
imul
jecxz
insl
jae
or
sti
and
adc
fdivp
out
shrl
enter
push
and
sbb
adcb
sbb
cli
in
mov
stos
lea
fwait
add
addr16
bound
xchg
cmp
movsl
ss
std
fisubrs
in
push
int
mov
mov
popf
xlat
add
dec
test
popa
ds
xchg
notl
call
jg
inc
clc
clc
mov
in
shl
in
add
pop
sub
jl
mov
test
out
lods
inc
icebp
mov
push
movsb
fdivrs
iret
js
leave
sub
mov
inc
fldl
jbe
ds
cld
adc
mov
xor
inc
mov
mov
cs
mov
mov
xor
pop
pop
stc
pop
and
adc
lahf
cmp
inc
push
pop
jnp
adc
inc
jge
push
dec
test
xchg
mov
push
jb
scas
js
mov
stos
rolb
leave
cld
xchg
sbb
inc
fwait
in
popf
dec
add
add
push
out
dec
xlat
add
push
push
sub
or
test
fisubs
or
mov
xor
lcall
pusha
jno
inc
lea
pop
jno
xchg
xchg
mov
ficomps
pop
jmp
jns
cmp
jg
or
loopne
sbb
pop
pop
enter
adc
das
mov
adc
in
xor
loop
fisubs
mov
fwait
cmp
in
mov
cltd
jbe
mov
cld
clc
pusha
add
inc
inc
cli
shlb
mov
das
ret
mov
cmp
fsts
fmull
lea
fistl
mov
mov
mov
sbb
mov
insb
push
xchg
xchg
das
mov
mov
adc
inc
sub
popa
add
call
in
in
mov
dec
or
ss
or
cmp
rcr
dec
mov
fdivrl
push
dec
add
or
mov
adc
adc
test
shrl
sbb
lods
push
xchg
and
ss
aas
cmp
sub
dec
pop
dec
add
sbb
xchg
xor
aas
pusha
idivl
pop
pusha
cmp
ja
xor
int
insb
push
jg
cli
imul
pop
lods
ficoml
or
xchg
dec
scas
mov
or
push
imul
lahf
in
jno
scas
aam
clc
cmp
aas
mov
or
je
daa
xchg
dec
rcrb
push
cli
xchg
frstor
push
jl
cs
scas
pop
pop
add
dec
dec
mov
fsubs
jae
inc
and
inc
out
push
lret
in
xor
dec
fwait
test
pop
cmp
mov
sar
mov
ss
pop
fyl2x
cwtl
pop
jne
stos
ficomps
ja
cmp
cmp
psubw
mov
and
mov
loope
xchg
xor
mov
fs
cs
inc
and
jo
arpl
push
add
jne
jg
mov
fucomp
push
xchg
sahf
pop
inc
pop
ss
sub
adc
mov
test
push
out
sbb
cs
xlat
mov
mov
cmpsl
iret
sbb
xor
iret
scas
fbstp
pop
xchg
popf
push
lahf
in
jnp
pop
xor
movsl
mov
jmp
inc
subl
add
sbb
inc
gs
and
adc
xchg
mov
enter
push
inc
pop
add
xor
sbb
into
mov
shlb
push
push
bound
jl
mov
das
pop
push
add
dec
xlat
lock
leave
stos
xchg
sbb
jbe
jge
xlat
mov
push
ss
xchg
rcr
popf
cmpsb
movsb
xchg
dec
xor
jmp
hlt
int
jmp
cmp
or
je
pop
pusha
mov
and
imul
cmp
inc
lea
push
nop
fimull
inc
and
adc
sub
jg
mov
mov
and
mov
sub
mov
pop
rcr
sbb
jb
loope
mov
cmpsb
jl
shr
jbe
xor
in
sbbb
xchg
push
mov
arpl
xlat
repz
arpl
cli
mov
lcall
pop
stos
dec
dec
and
test
cltd
pop
mov
mov
in
inc
int3
leave
push
jl
jns
xchg
es
call
inc
dec
inc
pop
or
mov
frstor
mov
lods
fists
lock
mov
ljmp
xchg
mov
push
dec
movsl
mov
xchg
int3
stc
pop
ficoms
jns
dec
in
jmp
cltd
outsl
fiaddl
aam
lret
xchg
stos
lods
pop
in
pop
inc
rcll
adc
jae
pop
movsl
clc
sub
insl
nop
call
xchg
out
inc
mov
or
loope
cmpsl
arpl
pop
dec
inc
out
and
mov
jne
inc
jl
ret
adc
inc
cwtl
and
pop
call
mov
loope
frstor
cmpsb
cli
shrl
mov
or
xchg
mov
je
mov
dec
push
mov
xchg
popa
or
and
fiaddl
mov
sub
mov
inc
cmovbe
ss
outsb
xchg
mov
adc
and
jecxz
mov
pop
pop
mov
loopne
into
ljmp
jno
sub
in
pop
xor
out
outsb
sahf
push
pusha
jno
stos
jo
mov
cltd
mov
jle
xchg
mov
adc
popf
xchg
sub
jp
lods
out
jno
adc
outsb
pusha
adc
add
mov
adc
xchg
pop
lods
scas
test
cmp
loop
dec
inc
xor
sbb
popa
xchg
cltd
and
fidivrs
int
mov
jecxz
mov
imul
ret
aad
mov
dec
fimull
call
dec
gs
pop
shl
jle
push
adc
mov
push
sub
sbb
xchg
pop
dec
enter
lods
pusha
js
lea
aaa
xor
in
test
cli
mov
fimull
int
mov
cmp
fmulp
fiaddl
fildl
decl
lahf
dec
data16
mov
dec
je
adc
inc
daa
vmovaps
into
clc
cmp
or
push
and
out
and
xchg
ficompl
adc
or
out
or
adc
jge
mov
sbbl
sub
out
mov
ss
jns
cmpsl
aam
mov
add
or
push
movsb
pop
aaa
and
nop
mov
jae
mov
inc
mov
in
sub
test
push
inc
lret
cmpsb
dec
sbb
xor
aaa
stos
in
pop
mov
call
popa
mov
cwtl
push
jae
jp
fldcw
aad
cmc
xor
sar
fisttpl
out
aad
sti
out
mov
fnstcw
cwtl
push
adc
cmpsl
ss
mov
lods
or
aas
push
mov
mov
lret
fwait
jns
bound
ret
aad
test
adc
xchg
xchg
icebp
rcll
mov
fcompl
inc
imul
imul
sbb
mov
push
or
popa
xchg
adc
insb
cmp
mov
ret
xor
popf
arpl
cmp
pop
lahf
adc
mov
js
mov
in
add
mov
ljmp
test
push
mov
xor
lock
pop
decl
dec
jmp
adc
sarl
aaa
adc
fdivrl
push
cwtl
add
imul
rorl
lds
jp
xchg
ret
data16
inc
les
cli
lahf
xchg
push
cmp
jp
cmpsb
mov
pop
adc
aam
xchg
mov
insl
xchg
fimull
mov
xorb
add
cmp
fbld
inc
lock
or
inc
pushf
inc
jecxz
loope
sbb
lcall
sbb
stos
mov
mov
and
shll
repz
lea
xchg
orb
adc
inc
ficompl
and
data16
dec
xchg
mov
mov
outsb
ret
lock
xchg
movsb
jb
fcompl
xor
fildll
and
pushw
int
popa
lcall
add
mov
dec
push
sub
addr16
mov
movsb
rcrl
inc
adc
popf
clc
shll
dec
mov
xor
pshufw
das
xchg
iret
das
jle
cmp
pushf
cmp
jns
cmpsl
adc
ror
pop
rol
sub
xchg
add
in
jmp
cmp
adc
jbe
push
inc
mov
call
adc
cmp
loopne
jl
loopne
adc
jb
xchg
xchg
and
stos
cwtl
sbb
fiadds
lahf
sbb
cmp
dec
dec
inc
imul
mov
rolb
xchg
arpl
inc
mov
in
cld
sti
cld
dec
mov
out
lock
sbb
loopne
mov
jns
arpl
popf
jle
arpl
stos
jae
mov
fucom
xor
fstpt
cmp
xchg
movl
mov
movsb
add
loop
jle
cmp
cmp
lods
imul
je
mov
js
inc
pop
push
lcall
jl
cli
ja
mov
cmp
inc
sub
cmp
or
mov
in
arpl
mov
inc
cmp
ret
inc
lret
xor
push
pop
fiadds
pop
xchg
or
dec
fistl
or
push
inc
shll
popf
je
loopne
jae
cmp
dec
inc
sbb
dec
sar
mov
sub
jp
fdiv
sbb
ss
jecxz
sahf
test
stos
jnp
jl
push
ss
ret
push
lcall
movsl
inc
add
xor
mov
mov
lret
std
cld
jl
enter
xor
adc
adc
icebp
out
loopne
lahf
out
out
jmp
add
ljmp
or
lahf
xchg
lods
sbb
dec
push
dec
mov
outsb
mov
pop
push
sub
rcrb
out
movswl
add
push
adc
cwtl
shlb
ljmp
mov
add
lret
jnp
fstpl
pop
into
dec
mov
xor
call
sub
sub
xchg
into
mov
ror
or
out
dec
fildl
xlat
mov
dec
out
test
ja
out
push
lea
pop
pop
jmp
ljmp
orl
xchg
add
movl
push
adc
ret
movsb
push
ja
aam
mov
jp
add
pop
scas
and
xor
jo
repnz
insb
sub
cwtl
sbb
test
sbb
nop
xlat
mov
xchg
push
and
les
xchg
mulb
or
dec
cld
int3
and
jle
xor
stos
push
call
mov
in
out
inc
scas
xor
movsb
mov
lret
pop
cmp
and
loop
arpl
out
sbb
or
xchg
xchg
jg
push
cmp
xor
and
aad
mov
pop
adc
xchg
ds
iret
iret
dec
pop
sti
mov
cmpsl
jbe
imul
icebp
outsb
sbb
xor
dec
dec
inc
pop
mov
mov
aam
daa
flds
sub
mov
pop
cmp
xchg
fsubs
cltd
pop
ljmp
push
test
push
dec
inc
add
aas
aaa
add
push
roll
or
pop
push
cmp
xchg
and
mov
xchg
repz
dec
into
mov
hlt
mov
mov
sub
das
enter
jnp
ret
daa
dec
cmp
fcomps
paddd
repnz
sub
cmp
call
fisttps
test
xor
lods
add
rorl
sbb
jo
inc
xor
xor
nop
pop
shll
push
jge
mov
or
jecxz
add
dec
ja
adc
rolb
cli
fsubl
mov
xor
ja
jne
test
cmc
mov
and
xchg
adc
in
es
inc
xchg
je
xor
mov
or
cmp
pop
cmp
mov
cmc
js
jb
mov
dec
dec
push
xor
push
ljmp
and
xchg
imul
pop
cmp
mov
imul
js
or
jmp
mov
dec
push
and
orl
imulb
xor
xlat
dec
pop
cmp
jbe
cmpsl
jg
jmp
stos
jne
lcall
mov
sbb
xchg
push
fisubl
push
scas
or
xor
je
das
jno
or
sub
dec
loope
mov
cmp
push
insl
sahf
out
nop
repnz
aas
jae
or
in
popf
cli
addr16
in
outsb
cmp
lret
sbb
imul
mov
sub
mov
dec
es
sahf
jbe
out
repnz
and
mov
xorl
sarl
sbb
fildll
jb
mov
lods
mov
fadds
in
mov
rcrb
leave
mov
xchg
adc
shrl
pop
mov
lods
lret
dec
test
dec
jb
in
out
xor
mov
add
loop
popf
mov
xor
dec
xor
rorl
scas
in
add
insb
add
repnz
mov
jb
push
popa
mov
fstl
jmp
mov
cmp
mov
jg
jbe
sbb
inc
cmp
fildll
popa
movl
popf
icebp
or
jl
fdivrl
mov
jnp
jp
xlat
cmp
push
mov
loopne
sbb
push
inc
jge
outsl
test
repz
cmp
iret
out
and
lahf
dec
adc
dec
mov
xchg
cld
pusha
imull
xchg
mov
das
scas
adc
add
xor
inc
xchg
cmpsb
mov
jo
cmp
mov
mov
test
ja
pushf
or
adc
ret
test
jl
into
loopne
dec
out
sti
nop
popa
adc
cmp
rclb
outsl
in
cmp
inc
in
mov
in
std
cld
dec
xor
adc
sbb
repnz
mov
rorl
ret
xor
pusha
mov
push
push
cmpsl
xchg
lods
rol
aaa
inc
lahf
jecxz
imul
inc
test
js
pushf
mov
pop
jge
dec
loop
je
add
enter
adc
movsl
out
repnz
aam
in
aam
dec
icebp
add
lret
fwait
cmp
lea
sahf
into
cmp
dec
cli
xor
dec
cltd
sbb
call
clc
fwait
or
pop
in
ja
daa
imul
push
repz
xor
lods
mov
pop
xchg
outsb
sbb
rorl
push
xor
les
test
or
cld
in
loope
lret
mov
pusha
fisubrs
mov
mov
mov
push
ljmp
ljmp
mov
out
jo
sbb
dec
mov
out
bound
in
mov
cmp
shlb
mov
sti
sti
pop
mov
hlt
test
ds
pop
mov
faddl
inc
addr16
ljmp
inc
push
pop
pop
cmp
jge
dec
xchg
mov
jnp
fisubl
mov
pop
jb
arpl
sahf
xor
jg
mov
int
sub
or
out
es
ret
sub
xchg
jae
mov
mov
clc
mov
dec
orl
adc
jbe
or
je
jo
js
fwait
cmp
cwtl
xor
in
scas
and
jne
int
out
pop
cmp
dec
or
dec
or
pusha
popf
test
lahf
scas
cmpsb
sub
pop
push
arpl
push
stc
add
cmpsl
mov
adc
add
push
int
mov
std
pop
xor
mov
push
pop
adc
jge
dec
shl
cmc
dec
cmp
mov
insb
out
jge
jnp
inc
jle
mov
insb
stos
pusha
andb
push
xor
fisttps
dec
dec
outsl
and
out
pop
pushf
popf
popf
stos
mov
pusha
jo
cmc
clts
je
cmp
nop
or
hlt
xchg
adc
lea
sti
popf
or
hlt
in
jb
lahf
pop
cmp
cmpsl
lretw
pop
dec
jnp
cltd
sbb
popf
sbb
ss
or
push
das
adc
and
ret
add
insb
pop
add
jno
mov
adc
sbb
xchg
adc
mov
shl
mov
fistl
or
jecxz
push
insb
cmp
es
xor
daa
int3
insb
pusha
xchg
bound
mov
popa
xor
sarb
loope
mov
shrl
jg
jae
xor
fwait
add
shlb
pop
cmp
lcall
stc
and
cmp
push
stos
test
out
pop
shlb
inc
ljmp
add
and
jecxz
js
push
inc
add
sub
addr16
cmp
cmp
sub
mov
loop
insb
push
imul
and
arpl
push
fildll
mov
mov
push
cmp
hlt
cmp
add
adc
pop
add
sbb
xor
icebp
inc
adc
stc
and
addr16
jl
mov
push
xchg
dec
xchg
lahf
iret
mov
mov
jns
mov
mov
mov
ss
int3
es
js
lods
and
push
out
sahf
sub
shll
jbe
int3
cld
or
mov
lds
mov
ret
ja
sbb
inc
sbb
les
xchg
jae
cltd
sub
dec
fistpl
hlt
jecxz
idivl
in
lret
fcoml
mov
fisttps
cmp
iret
fistps
dec
rcrb
pop
mov
mov
subb
inc
jle
jns
pusha
fbstp
pop
sub
shll
ljmp
jno
sub
in
sbb
sub
push
out
xlat
add
sbb
cmp
repz
out
aaa
insl
addr16
xor
cmp
icebp
sbb
push
outsl
dec
addl
bound
mov
and
jp
int3
lock
sub
add
push
add
stos
into
push
inc
fwait
adc
inc
pop
mov
leave
hlt
js
leave
dec
bound
fsubrp
xchg
repnz
aad
cmpsl
pop
sbb
push
jmp
cmp
fdivl
xor
call
dec
movsl
dec
mov
cld
loope
aas
pop
es
pop
popf
js
pop
sarb
pop
subl
inc
subb
xlat
push
pop
and
addr16
jl
test
jp
daa
insb
cs
lcall
pop
icebp
mov
int3
mov
xchg
fildll
fsubrs
sarb
outsb
mov
call
shlb
xchg
fwait
xor
mov
mov
or
pop
mov
popa
inc
xor
add
pop
jae
mov
xor
push
adc
cmc
sbb
filds
adc
push
imul
sti
mov
and
lret
xchg
adc
sbb
jno
mov
cmp
iret
mov
out
inc
xchg
pop
or
dec
retw
int3
jecxz
pop
xchg
or
jo
movsl
mov
daa
inc
loope
or
xchg
mov
loopne
jecxz
in
adc
stos
push
push
cmpsl
dec
or
das
mov
adc
jl
mov
push
jge
push
dec
js
sbb
dec
or
out
cltd
hlt
inc
mov
mov
cli
inc
in
dec
jae
or
inc
dec
lods
fwait
in
loopne
arpl
arpl
mov
mov
fsubr
push
mov
and
jo
cmp
cmc
xor
or
adc
adc
xor
xor
popa
jns
and
adc
mulb
shll
jecxz
stc
inc
xor
pop
xor
loop
insl
mov
inc
lea
dec
rcrl
inc
mov
sbb
dec
dec
les
add
jge
or
jne
pusha
mov
popa
in
push
rcl
ror
loop
les
repnz
sub
mov
pop
imul
mov
arpl
xchg
jo
mov
iret
or
mov
and
push
fmuls
push
test
mov
jle
adc
es
imul
aam
lahf
add
repz
popf
xchg
lcall
sub
push
sti
cld
cmpsb
loope
fbld
jmp
arpl
mov
cmp
pop
xchg
les
arpl
jge
push
mov
imul
shl
movsb
inc
pop
in
push
mov
pop
adcl
sbb
into
repz
in
mov
jge
mov
push
push
mov
pop
mov
sub
cmpsl
push
pop
jl
push
dec
push
hlt
push
xchg
outsl
popf
call
jno
mov
sub
pusha
and
xchg
inc
fcompl
add
push
push
jle
sbb
jbe
mov
xchg
or
out
xor
gs
fcmovne
add
push
std
rolb
dec
sbb
jnp
cmp
imul
adc
xchg
cs
jb
mov
lret
jl
in
xchg
rorl
lock
lret
push
inc
lcall
xchg
mov
cmc
pop
cmpl
jge
arpl
pop
jne
andl
pushf
divb
xor
pop
or
loop
and
mov
fsts
sbb
icebp
ret
lcall
and
ret
or
sbb
jl
int
lahf
mov
nop
loopne
ret
jnp
inc
pop
cwtl
and
adc
test
loope
es
movsl
push
push
inc
sub
or
mov
fnop
xchg
or
mov
jmp
mov
mov
loope
and
mov
mov
xchg
jecxz
cmp
pop
push
mov
jmp
ficoml
nop
pop
fldt
test
or
mov
jo
in
mov
dec
icebp
repz
adc
pop
addr16
push
xchg
adc
jg
into
lea
add
aaa
add
jg
push
loope
out
ret
adcb
sahf
pop
out
pop
test
mov
arpl
cmp
gs
cs
data16
sub
push
fs
call
push
negl
add
aam
pusha
or
dec
addr16
jle
dec
or
mov
test
jp
cs
jmp
xor
inc
mov
ror
dec
or
into
ljmp
cwtl
or
mov
hlt
sbb
sbb
insb
push
dec
mov
ror
fwait
xchg
pop
jge
cmp
adc
das
cmpsb
movb
xchg
inc
in
loop
xchg
pop
pop
mov
or
mov
in
dec
xor
fsubl
pop
xchg
notl
sbb
adc
imull
sub
movb
stos
xchg
mov
mov
sbb
fcompl
imul
in
out
jb
mov
xchg
mov
fs
mov
test
push
xor
or
clc
adc
lcall
lods
rcrb
pop
rcll
scas
fcoms
ja
enter
mov
mov
sub
rcll
out
test
or
mov
lock
lds
and
mov
inc
in
sbb
xor
jmp
fldl
sbb
movsl
mov
push
shll
stos
addr16
jp
call
int
repz
lods
adc
mov
outsl
ljmp
fiadds
sbb
fcmove
hlt
in
and
stos
lahf
cli
lea
mov
pop
stos
pop
lret
push
je
mov
xor
xchg
imul
pop
jnp
flds
pushf
mov
mov
cmp
gs
xchg
push
jmp
aaa
dec
add
jmp
popa
sarl
ds
pushl
lahf
sub
push
xor
outsl
or
stos
pusha
inc
dec
fisttps
aas
mov
inc
imul
mov
mov
stos
pop
pop
xchg
mov
sahf
inc
pushf
push
xchg
shl
cmp
mov
push
pop
mov
cltd
imul
lcall
xlat
adc
or
xchg
into
lods
pop
test
fcmovnu
xchg
inc
pop
fistl
lahf
mov
xor
aas
mov
inc
int
mov
loop
xor
jecxz
aam
add
je
movsb
adc
insl
dec
stc
fildll
jmp
cwtl
test
cmp
movsb
sbb
and
hlt
jo
pushf
std
aaa
cltd
sbb
mov
mov
sub
sub
or
lock
and
lea
push
sub
xchg
adc
notl
add
pop
dec
push
inc
je
mov
xchg
das
jnp
test
jp
xor
pusha
add
insl
shlb
adc
mov
push
mov
pushf
or
cmp
jb
jge
gs
sbb
data16
and
movsb
mov
mov
sub
in
mov
cld
adc
cmp
jo
adc
jne
and
call
pop
movsl
and
and
pop
jle
xor
fidivs
mov
das
mov
hlt
mov
jp
and
outsb
or
aaa
sarl
push
mov
lahf
sub
pop
aad
adc
ret
jmp
mov
adc
std
or
add
push
mov
mulb
jmp
fldenv
out
popa
lock
and
xor
jle
sub
add
lods
mov
adcl
fdivrl
int
xchg
lret
cmpsl
jecxz
imul
sub
sbb
rol
pop
into
mov
add
dec
int3
cmp
addr16
xor
or
sub
aaa
adc
daa
je
and
inc
and
sbb
xchg
aad
sbb
filds
jae
jb
sub
pop
mov
scas
or
lret
add
or
mov
mov
movb
fs
icebp
cmp
lods
imul
sub
mov
xlat
add
jecxz
push
pop
sub
push
mov
lret
fs
mov
sbb
stos
push
jo
pop
test
jle
xchg
out
mov
ja
scas
fimuls
mov
cmpsl
cmp
stc
addl
nop
imul
and
leave
shlb
ljmp
je
movl
add
push
sub
mov
inc
xor
int3
sbb
ss
mov
mov
pop
sub
testl
clc
into
push
ja
out
jnp
xchg
or
add
and
xchg
fptan
jns
daa
loopne
int3
lods
test
pop
cwtl
pop
lcall
jle
div
mov
jne
pop
dec
push
popf
int
filds
addr16
data16
xchg
sbb
and
pop
mov
ret
ds
fildl
stos
bound
xor
aam
inc
mov
subb
ja
jno
test
into
lods
xor
dec
lea
mov
adc
or
lcall
pop
lcall
xchg
pop
add
jae
test
sbb
push
rcll
adc
push
aas
mov
gs
adc
rcl
inc
pop
icebp
sbb
test
nop
jb
add
add
pop
dec
mov
lcall
dec
gs
inc
dec
cmp
loopne
dec
outsl
and
mov
cmc
jne
cmp
out
sti
sbb
aaa
fst
dec
mov
in
sbb
popa
outsl
inc
jmp
cmpb
mov
lea
lock
std
out
shlb
push
into
xlat
fdivp
ret
icebp
xchg
mov
fimull
pop
ljmp
mov
pop
jne
fimuls
inc
insb
ds
mov
lahf
insl
mov
cmp
mov
ss
adc
insb
lods
xor
mov
sti
not
cmpsb
popf
mov
imul
jns
lcall
inc
and
adc
mov
cmp
pushf
cli
cmp
rcr
icebp
xor
and
pushf
insl
in
out
mov
cmc
sbb
mov
adc
in
mov
xor
outsl
fxch
push
add
fnop
mov
sub
lock
push
sub
pop
lods
shlb
inc
out
lods
add
aad
mov
data16
and
inc
jg
dec
shll
pop
stos
push
test
insl
pop
sbb
aam
ja
int
js
or
xlat
add
in
jmp
pop
fisttpl
adc
andl
cmp
hlt
mov
mov
call
orl
es
mov
stc
mov
push
xchg
mov
mov
sub
cli
sbb
jb
int
orb
das
mov
mov
dec
imul
jbe
and
aas
jno
xorl
repnz
ja
test
in
test
in
test
add
stos
inc
inc
aas
insb
fstps
push
nop
jbe
jp
inc
cmpsb
call
push
loop
andb
dec
xor
mov
cwtl
xchg
and
cwtl
sub
pushaw
dec
imull
inc
inc
test
sarb
xlat
in
inc
lret
or
sbb
push
mov
cmp
and
rcl
or
mov
xchg
adc
imul
movsl
enter
movsl
push
dec
mov
xchg
push
or
mov
push
lods
fisubrs
cli
into
rorb
inc
mov
shr
dec
pop
sbb
inc
scas
xchg
sti
shrb
scas
jl
cmpsl
xchg
adc
outsl
mov
movsl
pusha
cmpsl
aad
repz
add
push
add
and
pop
jp
xchg
loop
repz
pop
stos
xchg
enter
mov
mov
or
adc
add
cli
lods
sbb
fxch
adc
clc
loop
hlt
loope
cmpsb
ja
add
cli
inc
push
sbb
cmpsl
sub
into
testb
mov
shrb
inc
sub
pop
jo
mov
dec
ret
ss
lahf
mov
or
add
add
cmp
bound
push
jge
mov
xor
push
sub
inc
or
sub
mov
inc
sub
fisubl
mov
aad
jl
arpl
mov
sub
mov
rolb
mov
mov
cmpsl
sub
xor
dec
sub
into
test
mov
jns
scas
push
cmp
inc
pop
or
push
test
cmp
dec
add
outsl
test
jnp
xor
xor
push
mov
inc
rclb
loopne
xor
rorb
inc
xchg
xchg
pop
loopne
jne
int3
ret
adc
xchg
out
jo
addb
fxtract
jbe
ret
lcall
fsubrs
sub
mov
pop
mov
dec
jmp
push
sub
jle
adc
push
push
sahf
lods
data16
sub
inc
push
adc
mov
adc
mov
xchg
int
es
jge
push
mov
jmp
and
push
cmpsb
movsb
addr16
sub
cmp
addr16
sub
push
aam
add
cltd
add
dec
rolb
popf
mov
std
aaa
andl
mov
sbb
je
dec
aas
and
out
es
jae
inc
stos
aas
pop
push
mov
jmp
outsl
scas
and
shlb
and
push
cmp
mov
shrb
sbb
or
mov
cmp
jg
mov
cltd
fs
mov
js
and
xchg
jl
fs
xlat
push
bound
rorl
mov
mov
jno
sbbb
inc
xor
cmp
xor
data16
jg
dec
notb
ret
adc
sub
adc
pop
dec
mov
js
mov
in
push
test
sahf
imul
mov
xchg
popf
orb
add
shll
xchg
xchg
mov
sbb
mov
arpl
mov
jp
jg
pop
cmp
cmp
cmc
mov
xchg
dec
cmp
xchg
mov
or
xor
dec
iret
into
sbb
dec
xchg
add
add
arpl
mov
nop
arpl
xchg
xchg
pop
and
inc
jmp
cmpsl
cld
sbb
rol
nop
mov
jecxz
xchg
inc
xor
mov
out
test
ret
hlt
pop
push
dec
pop
add
mov
dec
popa
inc
pop
std
adc
insl
ret
shl
or
or
dec
add
lcall
mov
mov
adc
mov
adc
sbb
add
xchg
jnp
dec
out
adc
push
or
jmp
push
ds
imul
imul
pop
cmpsb
lods
jmp
push
or
xchg
sbb
push
fldcw
xor
cs
inc
and
cmp
cmpsb
fists
adc
cmp
inc
mov
dec
dec
cs
subb
xchg
cmpsl
inc
push
rcrb
psubb
fprem
lea
cmpsl
movsl
nop
mov
or
jne
fucomip
mov
and
mov
cmp
sbb
fdivs
jle
mul
add
in
jmp
push
mov
push
fnstcw
scas
lock
or
outsl
adcl
js
lcall
fs
stc
mov
out
cmpsb
jg
cwtl
or
xor
mov
sahf
pop
mov
xrelease
mov
ja
outsl
add
lcall
sub
fisttpl
das
cli
popf
pop
cs
and
das
test
or
bound
jecxz
insb
push
lcall
nop
jne
leave
inc
test
imul
xchg
mov
sub
inc
cmc
adc
xchg
xchg
inc
lods
sbbl
mov
cmc
les
repz
xor
adc
loopne
movlps
clc
das
sti
add
outsl
daa
in
cwtl
mov
nop
test
jno
and
cmc
jne
nop
lock
xchg
outsb
cmp
and
in
fidivs
jno
inc
cs
pop
push
fucomi
lcall
movsl
push
lret
stos
adc
nop
into
pop
loop
test
push
loop
movsl
mov
hlt
es
in
subl
push
std
loope
xchg
nop
xchg
mov
jl
jle
sub
push
in
sub
clc
push
adc
aad
pop
push
pop
mov
sub
mov
and
pop
orb
dec
sub
fidivrl
mov
fisubrs
inc
je
add
push
in
mov
xchg
mov
out
into
sbb
int3
lds
js
add
fld
or
mov
jl
jae
shrl
cld
orb
pop
icebp
cld
scas
push
ljmp
push
fsubp
fstl
inc
rclb
add
push
dec
push
mov
in
sbb
dec
dec
out
jne
sti
cmp
and
negl
outsb
pop
mov
clc
jb
loope
lds
sub
lods
xchg
movsb
iret
push
xor
cmc
daa
stos
fpatan
lcall
iret
jnp
push
and
dec
or
xchg
or
js
push
pushl
loope
push
mov
pusha
movsb
dec
push
ljmp
push
loop
pop
sub
lret
pop
push
imul
sub
pop
arpl
or
adc
filds
add
and
mov
pushw
push
push
cmp
cld
das
loopne
ret
pop
movsb
push
ds
test
fwait
ss
lahf
test
add
mov
bound
nop
nop
jmp
mov
cmp
jns
jmp
scas
insb
sbb
out
xor
mov
sbb
sub
scas
test
and
inc
mov
inc
mov
and
inc
jge
push
stos
mov
push
pop
inc
push
sub
sti
imul
jns
cmp
icebp
mov
or
sbb
push
mov
xchg
je
add
add
jmp
inc
imul
pushf
out
sarl
cmpsb
mov
shll
rcrl
nop
aas
test
in
pop
rcr
fisubl
popf
inc
dec
pusha
ret
or
negb
jne
sbb
adc
aas
std
imulb
icebp
hlt
dec
imul
inc
jecxz
pusha
jmp
and
std
fstpl
adc
lret
ret
hlt
gs
daa
push
add
xor
popf
insb
dec
clc
mov
jmp
push
rolb
and
mov
ss
sbb
das
cmp
xchg
dec
xchg
add
add
pop
sbb
sub
jle
mov
mov
gs
mov
push
adc
mov
add
fcompl
or
out
and
test
or
mov
jmp
mov
rclb
ficomps
push
push
test
insb
test
jp,pn
dec
jne
cmpsb
jmp
test
loope
mov
lahf
jmp
inc
xlat
imul
cmp
lret
adc
and
ds
adc
push
outsb
pushf
loopne
out
addr16
add
rorb
or
jg
jle
or
push
test
aam
xor
and
fwait
rcrl
mov
jo
in
mov
into
and
andb
cltd
dec
mov
sbb
or
js
mov
xchg
scas
mov
fcoms
test
mov
push
in
mov
pop
pop
das
dec
xor
jnp
das
xchg
or
dec
and
push
xchg
subl
in
pop
push
fs
test
push
loope
cmp
in
or
mov
sbb
lea
incl
and
mov
sub
and
repz
inc
bswap
mov
cmp
rclb
das
rorl
add
out
movsb
aad
jmp
xchg
roll
adc
outsl
out
icebp
and
jnp
sbb
mov
insl
xor
xchg
mov
cwtl
ss
fs
sarl
and
cmp
adc
xchg
mov
sti
outsb
movsb
pop
in
sahf
jecxz
push
out
cmc
push
mov
sbb
add
push
rorl
pop
cwtl
xchg
addr16
dec
cmp
or
or
fbld
int3
and
shll
sub
sbbl
add
in
cmp
inc
dec
mov
add
in
mov
fstl
xlat
push
jbe
sub
xchg
popf
sti
negl
sbb
add
pop
rcl
ret
aad
sub
movsl
mov
test
shll
pop
xor
ja
sbb
flds
add
pop
data16
clc
jnp
mov
syscall
add
ljmp
cmpsl
cltd
mov
sbb
cmpsb
ja
test
bound
rorb
insl
cmp
add
outsb
inc
jge
and
lods
xchg
dec
jp
mov
int
rcl
mov
pop
dec
cmp
mov
push
push
rorl
lahf
add
je
adc
scas
sbb
dec
dec
jg,pn
mov
stos
inc
mov
sahf
fnstcw
xchg
call
mov
pusha
jecxz
clc
sub
mov
xor
jnp
dec
cmpsl
xor
test
sub
sarb
pop
xchg
sbb
fldt
mov
pop
lods
xor
and
pusha
push
or
shl
xchg
inc
mov
push
clc
insl
add
dec
hlt
mov
ljmp
daa
push
inc
inc
cld
pop
jnp
fsts
mov
repnz
xabort
dec
orl
aad
arpl
gs
faddl
push
incl
xor
xor
rcl
shlb
add
jp
xchg
xchg
addr16
sbb
jecxz
mov
lea
jno
pop
les
movsl
loopne
jne
mov
jb
cli
insb
mov
jne
dec
cld
test
sub
add
or
pushf
dec
lret
jb
mov
mov
shll
dec
adc
xorb
or
out
movsl
cltd
scas
cmp
cmp
xor
loope
dec
stos
pop
pop
xchg
push
inc
aas
popa
addb
mov
inc
adc
mov
stos
stos
jmp
fldl
jle
les
movsl
and
sbb
jecxz
mov
jno
scas
mov
aad
sub
mov
adc
int3
add
sti
sti
imulb
cld
lods
popf
arpl
iret
iret
mov
repz
rcll
inc
sub
les
cmp
and
push
jns
mov
cmp
icebp
add
pop
addr16
sbb
jle
enter
inc
aas
lods
mov
sbb
dec
cli
fidivs
cmpsb
sbb
arpl
xor
adc
inc
add
pushf
out
movq
pop
outsl
inc
lods
or
sub
cs
sbb
jnp
cwtl
test
fmul
pop
xlat
cmp
xchg
lods
sbb
sbb
pop
mov
dec
pushf
icebp
jb
cld
outsb
mov
pop
into
cmp
call
mov
and
mov
jb
jge
fs
jmp
popf
push
xor
xchg
gs
icebp
mov
push
xchg
shll
add
inc
jp
mov
mov
outsl
jae
cmpsl
mov
dec
sbb
adc
imul
lods
sbb
in
sub
push
in
or
adc
pop
inc
das
cltd
add
pop
add
arpl
mov
repz
inc
loop
test
in
mov
push
fildl
jecxz
js
push
popf
cmpsl
cs
jae
addr16
fistpl
addr16
cmp
inc
test
mov
push
jg
and
or
pop
mov
xchg
pop
lods
pop
add
mov
ret
push
lea
and
mov
std
lahf
pusha
cmp
mov
in
in
fbld
mov
inc
sbb
jo
pop
mov
fmuls
shrb
cmp
aas
xchg
hlt
jmp
frstor
add
rcl
cmp
in
inc
addr16
nop
mov
xchg
rcr
outsl
call
loope
xor
push
popa
subb
mov
push
mov
mov
pop
mov
xchg
sub
mov
in
outsb
test
popf
add
xchg
cld
lods
std
xchg
jl
insb
orl
and
insl
add
cmove
dec
add
test
es
xchg
dec
adc
repnz
or
xchg
pop
jp
sub
out
cmpsl
pushf
hlt
fstps
scas
shrb
pop
push
fnstsw
je
das
cmp
lret
fisttpl
incl
fidivrl
ljmp
lock
fs
popf
jo
sbb
popa
add
mov
xchg
das
gs
add
jae
in
mov
in
lds
dec
loopne
leave
jg
mov
cli
out
in
loop
mov
in
rcr
xor
jns
insl
push
jae
lods
jp
dec
cmp
pusha
lret
add
mov
adc
xorb
push
cltd
test
or
inc
mov
movsb
adcb
xchg
sar
es
jmp
mov
lds
das
mov
dec
filds
into
pop
jb
aad
pusha
outsb
les
lock
or
or
loope
ja
adc
movsb
and
loopne
push
or
xchg
and
dec
jle
inc
mov
mov
and
cli
out
lock
les
or
scas
ror
sbbb
fcomip
adc
daa
jle
cmp
aas
mov
and
and
xchg
into
or
movsl
mov
sahf
mov
outsl
lods
and
add
stos
xor
pop
movsb
sahf
repz
sub
enter
lea
jae
sti
sbb
mov
iret
sarb
addr16
lods
push
push
mov
faddp
cld
inc
paddsw
movsb
ds
pop
xlat
test
push
arpl
movsl
pop
loop
int3
push
inc
lock
test
bnd
pop
subb
out
stc
es
push
add
xchg
mov
daa
dec
outsb
outsl
xchg
dec
cmpb
fstl
arpl
mov
out
sahf
clc
aam
out
mov
jae
test
sbbb
mov
ss
xchg
jmp
pushf
loope
add
adc
pop
enter
or
cmp
nop
out
push
push
test
pop
push
arpl
or
call
xchg
jmp
add
arpl
add
xchg
arpl
dec
enter
xchg
adc
stos
add
leave
mov
sbb
xchg
pop
callw
xchg
and
lret
push
lahf
sub
lods
xor
mov
xlat
mov
dec
leave
cmp
out
xor
in
cmp
jo
insb
mov
int
pop
sbb
xchg
sbb
adc
les
mov
dec
aas
mov
scas
push
xchg
adc
stos
out
insb
xchg
mov
cld
inc
jns
push
jae
mov
cs
jl
mov
shl
leave
add
dec
leave
cmpsb
bound
fnstcw
test
xchg
sarb
shlb
addl
mov
clc
mov
cmp
dec
aaa
sbb
dec
lods
xchg
cmpsb
fwait
sub
push
das
test
ret
add
push
cmp
stos
ss
pushf
sub
into
mov
mov
and
inc
shll
and
pop
push
popa
insb
mov
adc
insb
adc
test
mov
jo
push
pop
xchg
bound
xchg
fwait
mov
mov
and
arpl
or
loope
sub
leave
mov
dec
cltd
ja
ret
sbb
clc
push
lds
ljmp
mov
lea
clc
xchg
movl
pop
and
ret
test
dec
aad
addr16
and
add
out
out
pop
push
ja
mov
pushf
divl
inc
pop
and
in
pop
xchg
in
jg
xchg
sahf
xchg
push
sahf
rorl
iret
sub
mov
pop
lods
cld
jnp
insb
out
ret
adc
add
sub
daa
std
inc
inc
push
dec
cmpsl
dec
ds
lock
mov
xor
iret
filds
ds
out
inc
pop
loope
add
jmp
add
addl
sti
imul
jecxz
dec
jmp
add
push
or
fwait
outsb
inc
push
add
aam
jno
jno
ja
push
adc
mov
jne
sub
jge
stos
in
or
mov
fwait
pop
mov
icebp
jecxz
mov
sbb
jle
mov
mov
or
ss
bound
loopne
jp
or
jg
jo
pop
hlt
jne
xor
sbb
dec
popa
lret
aam
scas
sbb
inc
movsl
push
mov
sahf
mov
pop
jno
mov
mov
aas
outsl
add
outsb
cmp
mov
js
mov
xchg
das
mov
repnz
je
or
mov
adc
mov
and
sbb
popa
jo
scas
xchg
mov
loope
jge
sub
outsl
es
scas
lods
mov
push
xor
cmpsl
ret
xchg
push
fldcw
popa
mov
jmp
lods
lods
jge
inc
stos
fwait
shrl
jmp
stos
dec
mov
in
aas
xchg
daa
cld
push
push
outsl
mov
mov
or
ror
shr
and
lea
jae
ljmpw
mov
xor
stc
pop
or
mov
sub
pop
pop
aad
mov
and
jns
fldl
xor
sbb
sub
xor
int
repnz
clc
shrb
push
sbb
aas
cmp
push
or
icebp
mov
subb
stc
inc
cmpsl
aaa
iret
scas
push
fst
xchg
movsl
inc
fnstcw
add
cmp
repz
or
mov
mov
add
hlt
stc
pusha
adc
and
fisubrs
std
adc
jne
cs
mov
pop
xchg
pop
insl
push
fbstp
mov
cmp
aam
and
testl
dec
cwtl
leave
xorl
xor
mov
ljmp
pop
es
or
xchg
pop
shl
sub
cmc
test
sbb
xchg
out
dec
lret
cmp
es
imul
jp
mov
cwtl
pusha
or
mov
jecxz
sbb
ljmp
or
cmpsl
or
or
xchg
mov
int3
and
data16
pushf
push
test
mov
pop
inc
xchg
push
mov
nop
aas
mov
mov
jmp
inc
aaa
jae
loop
ja
aas
adc
icebp
inc
test
leave
cs
push
andb
cmpl
mov
js
and
inc
insb
or
pop
adc
xor
and
xchg
mov
push
jnp
ja
jns
sbb
push
push
inc
xchg
subb
add
pop
push
subb
jo
xor
loop
movsb
test
push
lea
xchg
movsl
xor
inc
fisttpl
inc
push
in
cli
and
ret
mov
lcall
mov
mov
sbb
jecxz
fcmovu
jmp
shll
arpl
cld
in
sub
dec
mov
fimuls
jmp
ja
mov
sahf
push
push
mov
pop
cmpsl
mov
xchg
mov
push
aaa
out
mov
lret
mov
pushf
sbb
mov
and
int3
adc
cli
jg
add
iret
jp
push
mov
ss
cmp
sub
push
xchg
add
jb
mov
mov
jns
xchg
int
loopne
fwait
push
fwait
ret
jne
jo
inc
aad
or
fnsave
cmpsl
sbb
movsl
dec
pop
je
xor
pop
xor
and
pop
aam
les
xlat
clc
mov
add
sbb
int3
lock
ljmp
imulb
bound
dec
cmp
fsubl
mov
fldcw
movsl
sbb
int
icebp
fsubrl
push
cmpsb
mov
and
std
mov
loopne
mov
adc
inc
ror
inc
fwait
pop
cmpsl
mov
and
and
inc
pop
cltd
dec
dec
dec
nop
ja
cmpsb
add
test
lcall
cmp
and
sub
pop
icebp
lahf
push
sarl
fs
dec
jle
xchg
fnstcw
lods
push
jl
dec
mov
mov
push
add
push
cmpl
insb
sub
out
shrb
int3
daa
sub
pop
repz
loope
data16
insl
jns
dec
mov
popa
jle
stc
sbb
sbb
jbe
je
xlat
push
cltd
cli
adc
jae
jb
mov
ret
sub
push
sbb
mov
nop
fdiv
loop
je
push
dec
test
pop
inc
addl
data16
xchg
add
jns
or
sbb
cmp
movsl
cmp
dec
loope
or
add
xchg
imul
jae
sub
or
mov
pop
jne
outsb
loopne
dec
test
pop
and
mov
in
orl
adc
xchg
stc
push
add
daa
jb
gs
inc
gs
iret
xchg
in
pusha
xchg
inc
add
xor
mov
jecxz
push
push
scas
and
jmp
das
das
out
into
mov
test
xchg
mov
call
loope
inc
xchg
push
js
xchg
dec
mov
add
inc
pop
shlb
mov
mov
aas
dec
mov
jmp
in
lods
test
push
inc
cli
cmp
inc
add
jae
cmp
into
xchg
inc
mov
pop
mov
and
iret
push
fbstp
mov
in
sbb
ret
pop
xor
aas
jle
imul
aas
cmp
jns
hlt
and
sbb
adc
insb
lret
dec
mov
fs
aam
push
addr16
jmp
mov
outsb
inc
sbb
dec
inc
xchg
mov
test
int
add
in
loope
test
cwtl
cmpsb
dec
aam
aas
ret
dec
cmp
xor
mov
imull
ss
adc
inc
or
leave
lds
subb
inc
insl
dec
je
cmp
xchg
inc
mov
out
pusha
repnz
out
leave
inc
add
enter
insl
adc
jbe
das
add
xchg
insl
jb
dec
stc
or
fnstenv
fs
out
pop
sbb
outsb
jmp
xchg
mov
xchg
inc
clc
add
or
popa
imul
mov
fdivl
popa
push
lock
sbb
stos
sbb
pusha
sub
sbb
jge
iret
std
cld
jp
pop
dec
sub
pop
and
push
sub
pushf
lahf
dec
dec
jne
or
xchg
jmp
sub
adc
lret
inc
loop
push
and
add
fildl
repz
lods
fidivs
testb
adc
testl
mov
call
mov
je
push
popf
inc
inc
notb
push
jge
sub
scas
add
xor
jne
adc
movsb
cli
pop
js
xchg
sarb
cmp
pop
push
fwait
jp
mov
iret
dec
sub
sub
outsl
loope
out
data16
daa
mov
xor
hlt
adc
std
push
or
mov
fidivrs
lret
push
loope
ss
filds
jmp
cmp
fchs
push
in
outsl
sub
leave
jb
mov
push
xor
and
incl
shrb
push
xchg
aas
push
mov
enter
shr
dec
or
adc
sahf
ret
jmp
inc
out
jmp
pop
into
fistpl
pop
add
adc
data16
cmp
add
jg
and
icebp
pusha
mov
cmp
push
jno
sub
mov
or
pusha
xchg
cltd
les
fwait
scas
rcll
sub
mov
cli
in
and
xchg
add
lods
imul
sbb
or
pushf
repz
es
mov
inc
dec
mov
aam
sahf
xor
cwtl
pop
adc
jp
mov
jle
jmp
lock
jp
adc
fsubs
lods
mov
or
fnstcw
stos
mov
lret
push
ja
pushf
inc
pop
lret
inc
mov
cld
adc
pop
mov
shlb
adc
cmpsb
ret
nop
pushf
into
pushl
popa
int3
cli
aaa
mov
call
jp
pop
pop
loop
shll
orl
bound
popf
or
test
mov
adc
mov
movsb
mov
sub
out
jecxz
mov
inc
xchg
cmp
outsb
mov
and
int
fsubrl
mov
nop
pop
xor
lods
roll
daa
dec
jbe
mov
icebp
xchg
clc
cltd
pop
mov
pop
pop
mov
imul
divb
mov
mov
sarl
outsl
test
or
jbe
mov
xchg
mov
nop
add
popa
test
sbb
mov
sbb
aad
push
or
rorl
shlb
dec
rolb
test
lea
push
frstor
sbb
xlat
adc
mov
lods
pop
out
loope
inc
rcr
mov
in
lock
mov
out
mov
iret
enter
jmp
jp
stos
stos
push
add
adc
or
sarb
repz
ficompl
xchg
lcall
out
cwtl
arpl
add
mov
mov
mov
ljmp
out
fdivrp
push
repz
mov
pop
pop
sbb
pop
cmp
jns
es
movsb
testb
notl
add
idiv
sbb
scas
lahf
repz
pop
push
xchg
pop
mov
addr16
xchg
adc
push
xor
clc
in
mov
inc
stc
xor
dec
icebp
in
jmp
popa
les
idivl
frstor
in
lock
dec
and
push
cmp
mov
dec
sub
lods
cmp
test
mov
lret
inc
mov
ds
jno
xchg
icebp
cmc
popa
cmc
out
std
dec
out
mov
fiaddl
leave
fiadds
icebp
mov
popf
push
fadds
mov
pop
jecxz
jl
test
dec
adc
mov
pop
je
sbb
jns
call
rol
lret
mov
in
mov
lods
fldcw
out
mov
jnp
mov
cmpsl
imul
pop
js
stos
sete
pop
jbe
aam
pop
or
insl
xchg
push
pop
and
dec
fwait
inc
popa
mov
dec
dec
and
mov
sub
mov
push
mov
ds
inc
hlt
jle
cmp
clc
mov
push
data16
lds
pop
xchg
lea
mov
mov
mov
jae
fs
fisubs
jg
mov
psubq
stc
ljmp
cmp
popf
ret
in
loop
arpl
shrb
repz
clc
lods
or
incl
add
jae
mov
cmp
cmp
lds
nop
daa
inc
rorb
aam
cmpsl
lret
xchg
mov
fimuls
out
or
je
adc
jns
scas
push
cld
adc
adc
fisttpl
sub
icebp
sub
aam
mov
dec
loopne
lcall
mov
movsl
adc
add
loop
dec
inc
mov
dec
leave
pop
ja
or
mov
inc
stos
push
cmp
jmp
cmp
out
dec
lret
adc
and
and
push
ret
cli
shll
fsubl
and
ljmp
sub
mov
popa
sub
jge
pop
pop
ret
popf
add
jno
repz
add
lret
js
jl
or
dec
cmp
mov
jle
mov
ss
ljmp
les
in
mov
push
fs
mov
icebp
xorb
daa
stos
dec
inc
xchg
xchg
ds
xchg
and
adc
lahf
xor
jmp
mov
xchg
pop
shll
mov
mov
fmul
and
push
jge
and
pop
adc
sub
pusha
test
and
out
and
aaa
in
aam
sbb
inc
jmp
add
cmpsb
push
bound
inc
pusha
test
jo
out
jnp
cld
adcb
dec
cltd
ja
sub
xlat
sub
jle
insl
out
orl
movl
jg
and
sbb
jl
shrw
mov
jecxz
lahf
add
add
and
cmp
or
movsb
pop
mov
mov
sbb
mov
ds
xchg
nop
dec
or
mov
jno
scas
mov
lahf
dec
lea
ret
test
repz
mov
fwait
cs
pmaxsw
jmp
je
jbe
loopne
rolb
or
cltd
fnsave
scas
ret
out
sbb
mov
ret
add
mov
pop
int3
cmp
cmp
gs
adc
loope
fnsave
mov
xlat
repnz
lret
movsl
sub
and
ljmp
jo
loopne
sarb
xchg
jmp
mov
inc
or
push
stos
jg
dec
ja
popf
imul
jcxz
insl
sbbb
orb
lret
cmp
movsb
jle
in
jbe
add
cmpb
or
or
mov
xchg
lret
push
subl
cmp
cmp
xor
push
outsb
add
mov
cmp
sti
cli
pop
xor
shlb
add
adc
mov
shl
xchg
mov
and
cmc
pop
cli
lcall
cmpsl
xor
leave
out
and
ds
xchg
mov
cmp
cmp
lods
and
push
jo
lahf
icebp
out
mov
nop
cwtl
movsb
jp
fwait
add
popf
pop
sahf
inc
rcrl
sub
pop
out
stos
jmp
imul
mov
lods
stos
sahf
jo
inc
aad
call
mov
mov
sub
shlb
mov
or
cmp
xor
fld
sbb
aam
ss
enter
mov
jge
int
and
cmp
xor
mov
adc
lcall
jbe
mov
cmc
pop
pop
sub
stc
inc
fbld
stc
stc
sti
adc
sbb
xchg
mov
sbb
sarb
test
adc
push
or
sbb
cmpsl
push
repz
dec
inc
cltd
imul
dec
fisubrl
sbb
shlb
inc
mov
lock
pop
lods
enter
mov
cmpsb
push
out
pushf
sub
and
mov
out
jle
inc
leave
lock
leave
std
clc
push
daa
pusha
outsb
stos
rcrb
xor
fbstp
adc
or
pop
or
jmp
jp
inc
pop
sbb
mov
aad
js
call
popa
xor
sub
mov
into
mov
clc
fisttpll
cmc
mov
ljmp
adc
cltd
adc
aas
je
fildl
inc
mov
dec
mov
out
test
mov
and
fldcw
cmc
sbb
fbld
popa
inc
mov
std
imul
in
cmp
mov
cwtl
loopne
mov
enter
mov
lods
xchg
imul
xchg
cmp
push
addr16
icebp
scas
jne
push
push
cmc
adc
pusha
sbb
jmp
ljmp
imul
int3
outsb
push
pop
fidivrs
xlat
rclb
push
cmp
lds
ret
mov
cld
mov
add
stc
mov
iret
push
hlt
jge
mov
es
imul
pop
enter
xchg
ret
nop
xor
xchg
cltd
shl
loopne
push
inc
and
sahf
sub
outsl
fdivp
pop
lcall
lcall
inc
lret
fsubs
add
loopne
in
inc
in
mov
lods
cmp
xor
xchg
andb
add
cmc
xor
cmp
ss
push
dec
gs
push
xchg
fsubs
add
popf
nop
lds
fistpl
pop
xor
fwait
sti
mov
add
lods
push
push
sub
pop
movsl
pusha
data16
sbbb
shrl
or
xor
inc
or
popa
flds
fwait
mov
fs
ficomps
adc
lret
popf
leave
xchg
add
repnz
cltd
xchg
mov
jno
shlb
jp
mov
orl
xor
outsl
inc
adc
or
leave
sub
push
mov
jecxz
sti
stos
inc
pop
mov
leave
sub
or
mov
jnp
insl
sbb
inc
pop
xchg
or
cld
fisubs
mov
or
jmp
mov
mov
push
ja
mov
iret
addr16
jge
addb
dec
daa
push
lret
add
mov
dec
push
and
dec
mov
std
stos
xor
add
dec
jl
mov
addr16
loopne
rorl
xor
sub
je
pop
xchg
sub
or
lret
inc
mov
and
pop
sub
lods
dec
mov
xchg
inc
fistl
xor
loope
outsb
daa
xchg
and
sub
pusha
mov
cmp
loopne
sbbl
cwtl
cwtl
out
out
cmp
add
cmpsb
pop
pop
pop
mov
lods
jmp
jno
sahf
adc
lahf
mov
pop
xchg
cwtl
sbb
dec
xchg
js
mov
mov
and
inc
xor
lock
loop
outsb
outsl
int3
cmpl
dec
xor
flds
shlb
fistl
adc
aas
lcall
cmpsb
in
add
pop
dec
inc
rorb
loop
rclb
push
loopne
subb
and
push
les
idivb
scas
insb
in
mov
inc
call
pop
pop
jno
or
pop
pop
push
jno
jb
push
out
lds
fldl
sub
cmpsl
xor
mov
das
ret
and
adc
ret
mov
imul
pusha
clc
add
insl
adc
movsb
aaa
push
jb
lret
fldcw
int3
pop
mov
jmp
adc
xor
in
inc
movsl
jno
lods
cmp
push
xchg
adc
push
mov
dec
add
repz
jecxz
fisubrl
bnd
imul
and
orl
push
lret
push
lcall
add
sub
sub
into
mov
popf
lds
mov
push
add
sbb
jle
xor
mov
cmp
dec
fisubl
lcall
xchg
aad
lcall
setae
enter
jne
pusha
test
cmp
or
daa
loopne
sbb
rcrl
btc
mov
jmp
inc
cmp
jns
loope
test
inc
cld
out
jne
and
in
xchg
popf
out
and
lret
and
in
jb
test
fwait
mov
imul
adc
sub
out
repz
js
sub
ficoml
gs
lods
pop
ljmp
mov
mov
mov
pushf
out
das
pop
adc
xchg
movsb
inc
sti
and
pop
divb
dec
aas
and
imul
xchg
adc
cmpl
lret
test
cmp
daa
jmp
data16
negl
cmpsl
adc
nop
loop
sub
and
out
daa
ds
sub
or
nop
sarb
sub
inc
sbb
mov
sub
sbb
or
out
sbb
fs
jle
insl
mov
inc
outsl
movsb
mov
mov
loopne
push
xor
push
jmp
pop
mov
mov
dec
cmc
adc
repnz
mov
jecxz
loop
mov
sbb
shlb
lds
call
leave
out
cmpsb
cld
add
lds
sbb
inc
stos
dec
das
ja
mov
loope
push
je
and
cs
xor
sub
neg
and
dec
loopne
pop
scas
sarb
pop
jp
testl
pop
das
xchg
cmpsb
pop
jbe
adc
and
lcall
loopne
shr
out
push
das
mov
inc
jecxz
pop
lahf
jno
push
es
in
icebp
or
adc
inc
and
push
mov
hlt
xchg
jl
push
inc
aam
test
mov
sahf
and
mov
mov
cwtl
mov
cwtl
sbb
cmpsl
xor
dec
adc
and
icebp
dec
sbb
jge
fstl
pop
enter
fs
testl
ds
aad
lods
mov
cltd
xchg
das
push
loopne
add
jae
gs
xlat
inc
ja
arpl
fs
outsl
pop
lret
imul
cld
sti
mov
xchg
push
mov
aas
es
pop
icebp
xchg
push
xchg
cmp
nop
push
mov
sbb
xchg
in
cmp
add
ljmp
xor
hlt
cmp
xchg
mov
mov
test
inc
ret
les
aas
imull
das
dec
push
adc
sub
jns
or
in
push
mov
fbstp
cli
ds
push
inc
push
jnp
repnz
pop
arpl
inc
cmp
lock
pop
pop
mov
mov
xor
lds
int
sub
in
mov
bound
xlat
cmp
pop
jge
enter
add
pop
je
insl
cmc
mov
push
mov
mov
cmc
test
ficoms
jmp
sbb
movsl
cmp
jp
in
ret
pop
pushf
scas
sub
mov
sbb
bound
jecxz
sub
push
lret
cs
imul
int3
out
fdivs
sub
lret
sub
sbb
xor
daa
mov
push
cmp
adc
rcll
int
cmp
mov
add
sub
insb
xor
mov
mov
into
or
xor
cmp
xlat
test
fcmovne
ljmp
mov
cwtl
je
rorb
pop
jb
push
aam
imul
icebp
lock
cmp
adcb
lods
js
shrb
push
dec
jns
add
sbb
pop
jnp
or
into
test
sbb
mov
out
ss
sbb
aam
and
mov
nop
inc
jae
cmp
pop
inc
lret
push
out
je
jbe
popa
dec
movsl
add
fwait
mov
add
jge
sbb
stc
mov
jbe
push
incb
test
sbb
add
fbld
lods
mov
dec
popa
dec
and
shlb
daa
xchg
cmp
out
cwtl
loopne
add
fsts
sub
outsl
cmpsb
loope
cmp
push
and
mov
dec
dec
jbe
jo
sbb
xchg
cmp
cltd
out
lret
daa
arpl
in
or
addr16
or
repz
scas
add
ds
loopne
jg
mov
inc
stos
lea
xchg
mov
jno
mov
pop
iret
sub
rclb
jecxz
mov
inc
push
jecxz
js
dec
ja
xorb
push
scas
mov
xchg
add
call
push
gs
jnp
aam
xchg
adc
mov
call
pop
sbb
adc
sub
add
aas
push
push
mov
imul
icebp
jne
pop
arpl
arpl
sub
ljmp
dec
aas
lret
sub
pusha
push
sahf
je
js
mov
insl
fwait
add
rcr
add
xchg
out
in
mov
adc
les
fs
jg
dec
shl
scas
lods
sub
js
dec
dec
cmp
fiaddl
sub
in
jns
lahf
jbe
mov
lock
shlb
in
dec
and
jmp
cli
imul
testb
ds
aaa
int3
xor
imul
cmpl
mov
mov
loop
fndisi(8087
xchg
push
loope
pop
push
mov
rcll
push
test
pop
lret
xchg
outsb
stos
mov
lcall
negl
mov
cmpsl
lock
hlt
jmp
sbbb
arpl
xor
pop
movsb
add
faddl
mov
sbb
fwait
mov
cs
out
and
mov
pop
adc
mov
and
clc
test
lods
mov
icebp
lds
mov
repz
fnstsw
pop
ja
pop
cmp
cli
pop
cmp
and
addl
xor
jmp
and
nop
sti
push
ret
mov
bnd
push
push
jecxz
mov
fdivr
pusha
cmp
fstpl
dec
xchg
aam
sub
xlat
das
xchg
fsubl
mov
mov
std
cmp
sbb
jecxz
adc
jbe
mov
mov
loopne
in
popa
je
fiaddl
jae
out
les
xor
pop
cld
outsl
sbb
sub
cs
outsb
mov
je
jns
cmp
aas
sub
push
cmpsl
mov
push
movsb
ljmp
cmpsb
enter
sahf
xor
aam
mov
sbb
or
push
mov
or
iret
cwtl
mov
out
daa
sbb
movsl
negl
adc
or
add
mov
sbb
cmp
dec
xchg
xchg
jmp
jmpw
jmp
mov
cmp
fidivrs
or
pop
fsts
jle
lods
or
fbstp
scas
gs
mov
or
in
push
adc
xor
mov
hlt
test
cmp
inc
ret
xchg
push
pop
in
xchg
fistl
and
mov
push
mov
mov
inc
mov
jnp
insl
test
cmp
out
mov
sti
xchg
jg
test
outsb
push
xlat
push
sbb
cmpsb
cs
push
mov
mov
daa
cmp
hlt
or
cmp
push
repnz
mov
cmp
jno
jno
jnp
loopne
jbe
stos
mov
jbe
icebp
in
mov
add
testl
fwait
jnp
or
out
icebp
das
mov
js
or
pop
jp
jb
jb
sahf
ss
in
rcrl
jbe
sub
mov
lcall
nop
fisubrs
out
add
jmp
xor
fs
mov
sub
mov
push
fwait
xor
call
or
cmp
jb
mov
mov
ja
iret
push
jnp
mov
ret
xchg
outsl
jl
push
jno
xchg
ja
cs
add
outsb
loopne
ss
pop
mov
xlat
out
mov
adc
stos
xchg
ret
add
inc
adc
and
ja
andl
pusha
sbb
insl
rorb
leave
jg
mov
int
out
jbe
call
subl
arpl
sti
xchg
fucompp
mov
adc
inc
push
adc
aad
insb
add
add
in
sahf
xlat
fisttps
stc
jle
dec
adc
push
in
push
shl
ret
or
movsl
mov
lret
fwait
jle
lret
mov
jge
or
add
es
add
add
dec
pop
out
int
sbb
js
lea
mov
jnp
mov
stc
pop
mov
mov
jns
jge
cli
add
mov
fdivp
fs
fldenv
outsl
jecxz
cli
ret
xlat
xchg
imulb
sub
add
inc
mov
enter
jbe
rcrl
inc
sub
ljmp
jo
dec
push
rclb
pop
adc
movsb
push
inc
bound
sub
sub
or
and
outsl
mov
int
loope
jns
pop
mov
jb
stos
fiaddl
jmp
push
mov
lea
push
jl
loop
dec
dec
clc
fsubl
scas
and
lret
movsl
cwtl
mov
mov
dec
shl
xor
pop
dec
bound
jnp
rcl
jp
xor
mov
push
sub
xchg
sub
ss
push
pop
sbb
xchg
scas
push
dec
sub
mov
and
fdivr
inc
out
push
xor
movsl
divb
icebp
pushf
mov
xor
jb
pop
das
icebp
sbb
fdivs
mov
mov
data16
mov
sub
rclb
shrb
pop
arpl
inc
stos
es
outsl
jno
add
iret
dec
ljmp
cli
mov
pushf
xor
in
jmp
aaa
xor
in
ficoms
adc
sbb
xor
daa
mov
push
xchg
mov
and
jecxz
pop
pusha
nop
lcall
mov
jmp
rcr
fsubrl
and
shl
mov
mov
nop
mov
mov
add
dec
pop
sbb
ret
xchg
cmp
andl
push
pop
ss
stc
jno
add
fildll
jecxz
enter
lds
pop
push
push
es
mov
jo
sti
add
xchg
xor
jp
jb
pop
fisttpl
mov
xchg
dec
aaa
das
xor
lret
sbb
adc
xor
mov
cmpl
jbe
mov
add
jl
movsb
pushf
popf
or
pop
push
movsb
adc
pop
pusha
test
mov
add
fidivrl
sub
iret
pusha
jge
in
cmp
jp
jne
out
cli
into
movsb
fstl
mov
fnstenv
or
pop
aam
pop
pop
lds
js
dec
loop
outsb
loope
sub
or
dec
cmpsl
stc
mov
lds
out
xrelease
xchg
pop
lea
sahf
or
add
xchg
sub
mov
xchg
dec
jle
clc
pop
sub
sahf
jae
jle
mov
mov
cmp
sahf
sub
popf
sarb
xchg
stos
jb
addr16
loop
dec
inc
jns
adc
dec
ret
fwait
jge
repz
pop
push
cmp
adc
lea
lahf
xor
dec
rorl
and
inc
iret
subl
dec
dec
cwtl
ret
call
mov
fldcw
dec
jno
adc
adc
addr16
mov
repnz
arpl
push
xor
aad
nop
popa
jns
cmp
ds
jge
std
je
fs
fcomps
movsb
ja
add
mov
sbb
xchg
mov
or
sbb
cmpsl
ret
lret
inc
jmp
lods
dec
das
movsl
ljmp
dec
jns
loopne
ss
sub
adcl
nop
scas
sbb
pop
in
jae
and
lret
fcomip
icebp
sarl
test
add
lret
into
push
xchg
mov
test
cmp
fnsave
cwtl
mov
or
test
and
aaa
out
adc
sub
sub
mov
cmp
pop
sub
push
scas
push
push
xor
ss
mov
test
mov
test
aad
out
mov
pusha
inc
adc
ret
sbb
jno
pop
popf
mov
xchg
sub
cmp
mov
inc
sbb
es
jnp
int
xor
or
adc
mov
xchg
pusha
stos
dec
clc
jno
sub
inc
add
cmp
xorl
sarb
add
inc
mov
int3
std
or
sub
xor
mull
fisubl
aad
push
pop
sbb
jb
ja
or
jnp,pn
ret
loop
fimull
fstl
scas
inc
push
hlt
cmp
andb
stos
das
jae
fsubl
pusha
mov
mov
sbb
sbb
clc
fsts
cmpsb
test
stc
pop
test
xor
imul
cltd
or
xchg
dec
jmp
jle
test
outsl
adc
inc
cs
outsb
pop
cmp
xor
cld
adc
test
jge
add
sub
xor
fiadds
mov
mov
ret
mov
mov
and
lea
mov
fnstenv
loopne
aaa
sbb
push
push
adc
movsl
mov
mov
out
shll
or
mov
iret
stos
mov
sub
xor
mov
je
addr16
pop
frstor
dec
loope
mov
ja
jecxz
pop
dec
add
xchg
movsl
inc
jmp
push
push
pop
arpl
inc
stos
push
cmp
stc
sbb
ficoms
push
fldcw
nop
push
fadds
stc
adcl
scas
dec
lret
mov
inc
enter
and
push
bound
into
decl
ret
ljmp
pop
xchg
outsb
orl
lret
add
cmp
fs
xchg
mov
adc
sub
bndldx
mov
jns
and
test
pop
or
push
pop
sub
les
int
mov
pop
test
pop
in
push
int
das
mov
jnp
lcall
cmc
push
mov
mov
inc
adc
jb
adc
outsb
pop
xor
loopne
cmpsb
push
mov
adc
adc
jecxz
insl
pushf
leave
adc
pop
inc
or
cwtl
movsb
aaa
in
lahf
popf
xchg
cmp
leave
pop
push
mov
pop
mov
dec
jp
push
jnp
pop
js
pop
push
dec
or
cmc
and
cs
popf
xchg
scas
cmpsb
js
pop
test
hlt
push
jnp
test
inc
daa
sub
jnp
ja
repnz
test
pop
ret
dec
cmpsb
test
rolb
push
xor
xor
jmp
dec
aad
cli
test
cmp
lret
cmp
cld
xor
sub
and
lahf
dec
je
ss
out
xchg
dec
int3
por
gs
xchg
lods
rolb
imul
mov
pop
stos
mov
fdivl
arpl
mov
sub
mov
std
adc
lahf
mov
add
adc
xchg
movsb
xchg
testb
push
mov
lock
mov
ror
dec
stos
aad
ret
jp
push
insl
jg
inc
ljmp
testl
mov
loop
cwtl
add
dec
int3
jne
or
shrl
jmp
mov
adc
xorb
mov
inc
cmp
add
addl
dec
sbb
or
add
xchg
or
lods
in
jbe
cltd
push
xchg
mov
xor
pop
push
aad
push
or
mov
fcompl
add
outsb
shl
mov
out
lret
inc
cld
clc
mov
out
stos
or
cltd
mov
cmp
jbe
ja
sub
pop
fs
push
adc
test
fwait
popl
pop
rol
in
emms
pop
push
outsl
jne
scas
cmp
loop
pop
in
jo
pop
jp
das
rcrb
and
dec
sub
mov
push
stos
push
sti
scas
cmp
push
mov
les
pmaxub
mov
jecxz
out
fst
lcall
ljmp
push
pop
jl
mov
das
mov
adc
daa
cld
cmp
ss
fld
xchg
or
shrl
push
pop
shlb
xchg
cld
sbb
xlat
das
sahf
fisubrs
rcrb
or
scas
sub
dec
and
mov
movsl
jmp
stc
sub
xchg
lret
push
pop
xlat
jge
xor
and
xchg
ffree
sbb
cmp
jae
pop
test
xchg
jp
adc
mov
adc
out
add
jo
call
and
cltd
in
inc
daa
jno
test
lret
dec
pop
jno
loope
outsl
jl
push
pop
std
jae,pt
out
sbb
sbb
fistps
mov
cmpsb
and
jecxz
mov
mov
lods
in
jg
rclb
mov
mov
gs
add
add
lock
adc
add
dec
inc
jo
negl
outsb
sbb
lret
aaa
jno
cltd
sarl
add
inc
repz
adc
pop
mov
lods
pop
jno
add
xor
adc
push
sbb
rorb
sub
fists
sub
mov
stos
inc
lea
fsubs
push
mov
das
cltd
arpl
add
aad
ret
cmp
mov
and
divl
jno
pop
lods
js
inc
fcom
sbbl
stos
mov
push
jge
outsb
push
xchg
sbb
pop
mov
inc
test
mov
test
vpmulhuw
fdivs
add
ss
mov
ljmp
jp
dec
sarl
fiadds
or
pop
mov
sbb
orl
outsb
cli
sub
xor
cmp
push
lods
pop
xor
lahf
into
enter
js
add
jecxz
or
leave
adc
xchg
pop
adc
inc
test
stos
jbe
lret
adc
sti
pop
jmp
fwait
les
sbb
in
cwtl
fwait
lods
repz
lret
adc
jbe
pushf
in
pop
shr
imul
jnp
cmc
inc
pusha
mov
push
sar
sub
pushf
int
xor
xchg
jnp
scas
int
pop
xchg
fwait
and
bound
add
mov
test
adc
fs
lret
out
lcall
shl
sub
clc
out
cli
subb
stos
daa
pop
pop
jmp
outsb
jae
aam
icebp
shl
arpl
or
push
xchg
xchg
flds
in
filds
xchg
fnstenv
xor
mov
aas
frstor
in
xor
inc
lods
gs
and
rcrl
notl
cmp
cld
mov
adc
in
jl
daa
popf
popf
push
mov
rcll
xchg
push
xchg
stos
add
out
mov
ss
test
xchg
outsb
inc
out
xchg
jmp
test
repnz
inc
sbb
adc
hlt
repnz
scas
ret
in
imul
xor
ret
mov
pusha
movsl
or
pop
pusha
ljmp
sbb
inc
leave
test
out
leave
push
sbb
pop
xor
sub
xor
mov
cmp
pop
push
mov
push
mov
push
jle
ret
in
dec
sbb
or
push
xchg
cvtdq2ps
lcall
call
lcall
mov
scas
std
es
mov
addr16
mov
jp
in
test
shlb
mov
inc
mov
inc
mov
imul
data16
ret
jne
or
pop
stos
test
stc
pop
cmpsb
push
into
mov
adc
push
push
fs
ror
mov
addr16
or
in
mov
insl
inc
test
loope
lds
addr16
stos
add
sub
xor
sahf
xor
mov
xor
outsb
mov
dec
ss
sbb
push
xor
jne
xor
mov
sahf
or
mov
push
xchg
adc
xchg
aas
fisubrs
ss
pushl
sbb
nop
icebp
jmp
sub
imul
xchg
inc
mov
scas
cmp
test
in
add
dec
clc
inc
xlat
add
dec
mov
push
sub
mov
insb
out
add
jmp
icebp
notl
push
scas
rorl
xchg
imul
add
outsb
xchg
lret
orb
dec
cmp
xchg
add
cltd
adcb
faddl
adc
imul
sub
jle
adc
jnp
daa
mov
js
je
xchg
xor
icebp
pop
cld
nop
clc
ficoml
sbb
cmpsl
xor
das
testl
xchg
daa
pushf
mov
mov
ljmp
xchg
daa
cmpsb
insl
test
cmp
push
jb
inc
pop
mov
xor
and
fstpl
call
mov
and
test
mov
popa
daa
inc
adc
jmp
sbb
call
stc
jmp
out
enter
cmc
push
or
and
jns
ret
pop
cli
out
add
loopne
mov
add
mov
mov
addr16
pusha
xor
mov
sbb
dec
inc
aam
adc
imul
ror
repz
jae
imul
sbb
subl
lahf
mov
hlt
fiaddl
lahf
popa
jmp
out
xor
iret
test
xor
loopne
cmpsb
stos
mov
mov
or
lea
pop
push
aaa
and
adc
add
jo
imul
dec
cmovbe
loop
push
notl
xchg
rcll
subl
pop
aaa
xchg
loopne
cmp
add
jle
dec
add
xor
shrl
stos
loop
xchg
dec
adc
lods
lea
cmpsb
add
mov
lea
in
leave
jmp
fildll
adc
lret
imulb
dec
aam
insl
hlt
push
dec
es
testl
push
sub
push
push
dec
call
pushf
shl
movsb
xor
loope
shl
dec
pop
pop
mov
mov
ret
add
sti
arpl
adc
cmp
cmp
sbb
mov
leave
or
pop
shl
dec
sbb
jb
xor
xor
mov
or
dec
jns
push
sub
cmovbe
jg
fistps
scas
push
pop
pushl
inc
add
cld
fcomps
dec
inc
sbb
clc
fdivl
pop
aaa
cmp
cmpsb
daa
and
add
push
in
sbb
pop
cmp
pause
add
cmp
jecxz
cli
push
loope
inc
mov
cwtl
int
jmp
fidivrs
scas
es
sbb
mov
mov
movsb
xchg
xlat
test
xchg
dec
enter
xchg
sbb
rcrb
cmp
adc
push
xorb
cmpsl
sub
add
lea
mov
andl
jmp
push
out
popl
and
sub
jp
add
test
in
push
cmp
sbbb
mov
lahf
mov
data16
or
arpl
imul
imul
popf
ds
pushf
mov
aas
in
mov
ljmp
push
mov
pop
jns
les
or
push
lret
or
fstpl
fwait
in
jg
pop
adc
jbe
lods
sub
push
ss
push
dec
rep
sbb
aad
arpl
jp
jl
adc
mov
fimuls
dec
cmpsl
jae
mov
fmul
lret
cmpsb
and
inc
sbb
shl
mov
mov
clc
pop
int
rolb
stc
in
pop
rcl
js
cmc
mov
pop
xchg
mov
iret
xor
out
js
xchg
test
mov
mov
pop
push
lods
repz
loopne
cmp
mov
mov
add
xor
dec
push
insb
cmp
cs
xchg
and
xorb
pop
mov
fdivp
int3
mov
or
push
in
and
iret
mov
xor
push
mov
xchg
sahf
push
lret
sbb
sbb
addb
and
mov
jecxz
mov
out
popa
dec
ja
sbb
push
cmp
mov
xchg
mov
dec
add
xchg
sub
sub
xor
push
lret
cmp
sub
and
push
pop
movsl
fistl
jo
sub
out
mov
insb
xor
out
jge
ljmp
adc
inc
dec
xor
jno
jne
push
std
mov
mulb
in
pop
stc
mov
add
inc
mov
xor
call
test
dec
push
pop
pop
dec
dec
jl
imul
mov
jns
repz
adc
cld
add
xor
cs
sub
and
je
xchg
pop
std
aas
xchg
or
jne
pop
xor
addb
adc
notl
sahf
mov
pop
and
cmp
les
pop
dec
mov
pop
std
clc
inc
cmp
add
adc
ja,pt
push
sub
outsl
add
jl
jne
cld
fbstp
movsl
lcall
outsl
cmp
dec
fildll
push
test
stos
mov
imul
mov
mov
bound
add
xchg
cmp
dec
aam
leave
xchg
ja
js
mov
ffree
jne
xchg
and
lea
int
lods
call
push
stos
loope
jle
lods
mov
mov
jmp
fwait
push
jle
fwait
sub
adc
jo
orl
inc
out
mov
stc
repnz
mov
inc
inc
int3
push
cs
fnstcw
dec
pop
and
xchg
add
clc
inc
push
xor
sbb
pusha
outsl
push
xchg
fstl
inc
cmp
test
pop
insb
mov
clc
xchg
mov
rol
add
dec
popf
jmp
mov
pushf
adc
std
stc
and
imull
adc
fs
mov
sbb
sbb
and
xor
clc
lret
sub
data16
push
outsb
inc
sub
and
mov
adc
cmp
pop
jno
dec
icebp
sbb
or
cld
pop
jge
dec
mov
xor
lret
in
cmp
xchg
stos
and
xchg
jo
sub
sbb
movsb
push
cwtl
dec
int
sub
inc
je
out
inc
inc
fidivrs
aam
sub
out
add
mov
xor
fadd
mov
xlat
repnz
pop
adc
pop
and
fwait
popa
and
add
ja
stos
aam
insl
loope
insb
xor
das
loop
movsb
sbbb
inc
cmpsb
in
in
jne
mov
cmp
cwtl
int3
push
lahf
sahf
adcl
int
cmpsb
sub
movsl
arpl
sub
dec
out
js
das
dec
push
iret
push
insl
jmp
cs
mov
mov
aas
jno
pop
adc
insb
jmp
add
fbld
xchg
or
mov
mov
mov
loopne
mov
stc
imul
popa
pop
lahf
mov
arpl
int3
lahf
or
aad
in
push
call
cmp
mov
arpl
or
adc
lea
cmp
dec
insb
sahf
dec
mov
ljmp
push
aas
jmp
xor
sub
aad
adc
das
lock
test
imul
mov
push
mov
dec
cwtl
cli
sahf
pusha
pop
xchg
fstp
call
orl
xor
jae
imul
cmp
inc
pusha
fadds
shll
inc
pop
rcll
fcmove
dec
adc
push
or
pushf
or
lds
setg
sahf
jge
push
mov
int
pop
push
std
lret
xchg
push
loopne
and
bound
test
std
repz
jp
hlt
repnz
insb
cld
lds
das
mov
fs
push
pop
and
imul
cmp
lods
sbb
ss
adc
push
lds
mov
es
jl
jg
addr16
dec
push
lock
gs
add
in
in
dec
ret
icebp
or
int3
inc
xchg
sub
test
inc
pop
dec
lds
mov
aad
lret
roll
movsb
arpl
sub
push
sbb
repz
cmp
jmp
icebp
je
dec
mov
cli
orb
and
imul
cmp
test
xor
sub
mov
pop
mov
dec
in
mov
sbb
adc
loope
enter
testl
mov
mov
fmul
xor
sbb
jb
push
xchg
mov
mov
decl
jne
mov
cltd
or
ljmp
rep
pop
icebp
clc
lahf
inc
bound
add
xchg
sahf
call
ret
cmpsl
cmp
inc
movsl
rcrb
scas
rcll
mov
sub
jl
loope
push
icebp
mov
in
sarl
and
add
pop
sbb
cmpsb
sbb
mov
aas
jl
pop
jae
adc
popa
mov
xlat
js
test
mov
lahf
sub
bound
sarl
rcrb
mov
jl
in
and
cmp
adc
mov
out
inc
lods
jne
add
mov
ret
mov
sahf
cwtl
hlt
imul
lcall
jns
add
push
jne
insl
pop
sub
out
mov
mov
pusha
clc
mov
testl
push
pop
icebp
mov
cmp
dec
cltd
mov
adc
adc
rcl
add
dec
or
add
loope
ds
pop
cmp
sbb
xorl
divb
icebp
push
test
int3
cwtl
and
ss
or
inc
out
mov
fdivr
cmp
mov
icebp
shrb
call
loop
sub
jnp
fsubl
mov
gs
xchg
inc
cmp
add
sbb
out
push
inc
jecxz
das
scas
mov
jmp
gs
mov
pop
int
iret
popa
inc
inc
es
cmpsb
push
inc
stc
aad
adcl
push
gs
xchg
shll
pop
mov
inc
jnp
fnsave
hlt
dec
inc
movsl
add
sti
hlt
dec
sub
mov
std
push
cmp
rcrb
or
pop
push
repz
sahf
lods
mov
scas
fnstsw
jmp
jge
xor
imul
mov
mov
mov
in
pop
adc
cmpsl
jnp
mov
test
dec
mov
scas
pushf
mov
loopne
sbb
jg
iret
es
push
bound
jmp
push
or
sub
xchg
cld
sub
dec
das
popa
xchg
mov
mov
aas
xorb
jae
mov
ss
stos
mov
push
or
insl
lcall
int
insl
loope
mov
fstpl
icebp
in
aaa
rcll
arpl
iret
int
cmp
fs
mov
push
popf
outsb
movsl
stos
cli
stos
arpl
mov
cmp
mov
sahf
sub
fidivrl
in
sub
jns
jl
data16
cld
ret
out
iret
or
jge
add
cmp
xchg
jmp
fld
fldenv
add
mov
lea
sbb
aad
xchg
sub
loope
xor
mov
mov
add
lcall
mov
xor
xor
fildl
dec
cld
dec
call
lock
insb
lods
cmpsb
jnp
subb
xchg
xchg
lret
scas
dec
cmpsb
ror
gs
fnstcw
inc
inc
pop
loopne
or
int3
sbbb
cwtl
rol
lret
push
push
outsb
test
cmpsb
test
addr16
sbb
rcll
pop
mov
push
arpl
jp
lods
ja
xorl
test
sbb
sbb
pop
and
adc
xchg
mov
mov
das
jmp
xor
mov
pop
push
xor
pop
int3
jbe
jae
mov
push
iret
xor
scas
imul
aad
andl
enter
sub
dec
test
mov
test
inc
mov
pop
and
mov
pop
inc
leave
insl
cmc
repz
lret
sbb
mov
adc
adc
in
and
push
fdivrl
adc
cmp
pop
and
xchg
add
incb
sub
test
xchg
add
out
mov
sbbl
and
cmc
test
inc
jge
sub
loopne
xchg
pushf
orb
insl
pushl
jg
add
or
dec
mov
jb
pop
jg
dec
fisttpll
stos
mov
pop
shl
sbb
mov
daa
call
popf
je
sarb
cmp
mov
mov
jno
sti
ds
lret
push
lahf
sub
icebp
jecxz
mov
xchg
dec
cmp
mov
movsl
lret
pop
sub
push
cmp
fistpll
lds
test
shlb
mov
xchg
aaa
sbb
xchg
loop
loopne
or
push
sub
incb
sbb
cld
cmp
or
mov
sbb
cltd
xlat
rorl
mov
aas
sahf
mov
pop
gs
push
and
xchg
push
loopne
repnz
les
rcll
in
dec
or
cmpb
adc
cmp
dec
add
lret
incl
dec
jbe
push
data16
or
ss
push
push
outsb
je
es
cmpb
imulb
pop
cmp
dec
mov
jnp
fs
jbe
out
cmpsl
push
cvttps2pi
ss
lock
xchg
and
cmp
or
outsl
dec
xor
outsl
in
push
jne
mov
jecxz
mov
cmp
bound
lods
inc
imul
pop
cmp
imul
lods
cmp
sahf
divl
push
dec
icebp
punpckldq
inc
aas
repz
adc
loop
in
push
push
out
aaa
clc
mov
cmp
in
jb
fstpl
xchg
mov
repz
pusha
mov
fbld
sbb
or
pop
cmp
in
iret
jb
aas
mov
hlt
add
in
sub
mov
mov
push
and
std
inc
mov
push
movsb
dec
mov
push
mov
sub
test
fsub
out
cmp
xor
loop
mulps
push
mov
pusha
ficompl
decl
mov
rclb
scas
inc
mov
cmc
js
clc
sti
imul
outsb
mov
lds
inc
into
mov
cmc
mov
inc
ret
mov
jl
lock
icebp
arpl
aas
jae
and
lret
inc
sahf
idiv
cmp
or
mov
aaa
xchg
test
mov
sbb
xor
int3
jp
cmpsl
jns
adc
jno
movsl
xor
rcll
sahf
mov
mov
mov
out
dec
sub
push
cmp
fwait
sbb
imul
adcb
jns
aas
ret
in
ja
push
leave
loope
sbb
fcmovnbe
mov
fsub
rorb
add
div
loop
incb
movsl
or
add
cmp
lods
mov
ja
loop
jo
ljmp
fsubrl
sahf
ret
cmp
sbb
cmpsl
adc
sahf
xor
and
clc
scas
js
dec
ficoms
or
leave
pop
sbb
and
cli
bswap
loop
xor
cs
stos
xchg
cltd
cmpsl
push
xlat
xchg
repz
mov
cmp
xor
cwtl
dec
mov
jle
lahf
push
cmc
sahf
std
xor
mov
cmp
push
cli
adc
sub
xchg
mov
mov
stos
mov
ljmp
adc
jbe
cmp
sbb
aam
pop
testb
sqrtps
aad
cmp
xchg
xchg
loopne
leave
aaa
orl
push
cwtl
sub
das
testl
fwait
xchg
mov
outsl
jo
mov
mov
sbb
sub
rcrl
add
movsl
aad
push
cmp
fildl
dec
cmp
adc
push
iret
daa
inc
out
inc
jp
dec
loop
xor
add
es
jb
dec
mov
call
ljmp
popf
mov
insb
sahf
or
push
sub
push
mov
jge
dec
sahf
dec
pop
mov
in
lods
hlt
push
addr16
jno
enter
aad
insl
jno
xor
pop
out
lods
cmc
adc
jle
call
xchg
out
cmp
mov
mov
call
clc
add
jbe
mov
gs
fisubl
je
ret
stos
dec
jecxz
stos
cltd
xchg
cmp
into
mov
push
pop
sbbb
dec
cmp
or
lods
cli
xlat
ja
out
mov
jge
leave
not
cmpsb
bnd
xor
test
mov
je
jge
push
xor
push
sbb
sub
or
je
fcmovnu
xchg
mov
dec
pusha
sub
mov
and
mov
dec
sbb
ret
push
add
mov
xchg
dec
mov
jne
cmp
or
jecxz
gs
ret
mov
ret
loope
push
mov
in
lock
fdivs
cmp
sub
mov
pop
aad
xor
lea
outsb
xchg
mov
addr16
jmp
scas
scas
pop
pop
mov
lahf
fwait
inc
xchg
push
mov
shll
cmp
jge,pt
or
jecxz
in
jp
mov
mov
aam
in
stos
testb
mov
repz
push
push
inc
xchg
inc
pusha
lcall
cwtl
xchg
adc
or
dec
jb
add
bound
jle
fldl
cmpsb
or
lcall
aad
pop
inc
sbb
jnp
adc
mov
mov
mov
ficoml
stos
mov
and
xchg
xor
loopne
mov
and
xor
cmp
lret
jbe,pn
sub
aad
xor
xchg
pushf
mov
dec
mov
jae
sbb
mov
cmpsb
add
lods
mov
outsb
sub
pusha
push
dec
add
or
inc
jp
mov
stos
pop
fadd
jg
or
ret
mov
xlat
mov
inc
test
movsb
pop
ljmp
scas
out
insb
sub
push
in
mov
movsb
arpl
insb
xlat
mov
inc
divb
in
fsts
roll
das
adc
addl
in
jae
add
cmc
push
sub
jns
std
dec
sub
xchg
daa
adc
sbb
dec
sti
leave
and
cmpsb
lret
nop
popl
dec
xor
push
sti
dec
fs
sahf
sti
dec
sbb
adc
push
push
add
sub
cmp
inc
jae
mov
xor
loop
aad
inc
imul
push
sbb
sbb
std
ret
pop
movsl
bound
imul
repnz
insl
jo
fwait
cmp
addb
xchg
aad
pusha
mov
insl
mov
push
push
jmp
sbb
pop
jg
scas
add
adc
jno
aam
add
ret
lods
sub
rcrl
bound
pop
or
insb
mov
clc
outsl
sti
inc
jge
rcr
mov
fwait
push
sbb
or
and
shl
inc
jecxz
sub
mov
xchg
in
aam
aas
int
jmp
sbb
scas
in
test
sub
mov
xor
aam
cmp
sub
sub
push
xor
cmc
scas
cs
dec
xlat
dec
dec
inc
out
rolb
shlb
xchg
jmp
push
clc
push
les
ss
fcmovnbe
xchg
cli
fs
push
push
test
mov
out
sti
push
mov
dec
call
and
into
popf
fchs
mov
jb
sub
xchg
enter
fdivrs
fstpt
jecxz
repnz
and
dec
les
xchg
jbe
into
rcll
shlb
dec
xor
and
std
and
mov
call
int
loope
fstpt
mov
sarl
ss
loopne
repnz
lahf
push
mov
pusha
jg
jmp
push
cmp
daa
sub
loope
out
mov
rcr
fimuls
lods
mov
inc
pop
sub
ss
dec
test
adc
lret
add
mov
pop
loopne
ljmp
cs
push
dec
cmpsb
push
es
fstpl
dec
ds
mov
cli
clc
lret
mov
mov
jae
lret
daa
sbb
js
aaa
add
adc
fsubrl
into
repz
fbstp
and
ficoms
pminsw
ljmp
mov
fldenv
fwait
out
mov
sbb
add
stc
popa
push
adc
pop
and
jno
and
sub
jle
mov
sub
rcl
cmc
fimuls
sub
clc
rcrb
sub
addb
in
mov
xchg
xlat
or
add
fwait
mov
stc
scas
sti
and
sub
dec
jge,pn
aad
das
bound
xorl
mov
jecxz
push
popa
sti
pop
xlat
jge
pop
and
mov
mov
popa
shrl
ljmp
mov
roll
lods
jo
xchg
enter
pop
jecxz
andb
sub
imul
and
mov
gs
sub
sarl
jbe
xor
push
jbe
jne
lds
fistl
cld
pop
jns
adc
push
insb
xorb
mov
inc
pusha
sti
outsb
mov
cwtl
scas
cmpsb
mov
cmp
fiaddl
lret
sar
xor
sti
xchg
push
push
jmp
call
xor
push
in
push
je
add
xchg
mov
in
test
jle
ror
add
and
test
hlt
cmp
jbe
je
fs
mov
ret
push
scas
fildl
iret
mov
out
xor
icebp
outsb
xor
clc
cmpsl
repnz
mov
subl
cltd
stc
sbb
fisttps
cmp
add
ror
mov
mov
subb
dec
pushf
sub
sub
pop
jge
mov
scas
hlt
push
clc
adc
xchg
leave
mov
and
lea
pop
mov
fildl
fdivs
test
mov
adc
mov
loope
sub
xchg
push
lahf
stc
fisubrl
lcall
loop
cltd
daa
pop
pop
enter
and
jo
dec
pop
lret
lcall
test
fiaddl
jbe
mov
push
sar
pop
pop
mov
aaa
jae
ret
ljmp
mov
push
add
push
mov
xor
mov
fiadds
iret
xor
dec
dec
sbb
cwtl
add
or
je
cwtl
mov
mov
dec
je
loope
xorl
dec
push
xor
adc
cmpsl
lcall
jo
shll
cmpsl
lods
and
mov
push
adc
jmp
gs
mov
outsb
std
lret
add
aas
in
and
cmp
adc
inc
xchg
pop
loopne
fcoml
mov
add
dec
xchg
rcrl
inc
mov
and
and
push
mov
lds
adc
mov
lahf
ret
fmull
sbb
xor
pop
and
out
inc
xchg
jno
jp
mov
fnsave
xor
and
lret
mov
int
or
in
int
xorl
out
notb
sbb
ret
sbb
or
mov
fs
and
xor
xlat
jg
push
mov
lcall
inc
flds
or
insb
test
adcb
and
fwait
dec
icebp
or
xlat
jg
pushf
js
push
mov
les
cmp
aas
jg
inc
jle
dec
and
or
mov
sbb
sbbb
cmp
pop
popf
jl
ja
insb
sub
bnd
ljmp
sbb
dec
jo
popa
xchg
enter
mov
adc
push
jno
stc
jmp
in
out
sub
cmpsl
xor
sub
scas
lea
sbb
insl
ds
stos
ret
stos
cmp
sbb
adc
adc
jo
leave
adc
aad
test
frstor
jecxz
push
shlb
das
adc
repnz
int3
addr16
xlat
rcr
outsb
xchg
mov
int3
xchg
adc
out
dec
stos
mov
and
ror
cltd
or
bound
xor
into
mov
leave
insl
inc
roll
shlb
xchg
in
inc
mov
xlat
cmc
int
repnz
mov
pop
inc
pop
jmp
adc
scas
stc
jo
sarl
dec
loope
loop
out
loopne
dec
xor
ljmp
outsb
movsb
xchg
push
push
into
mov
cld
lret
jae
loope
xchg
cmp
add
insb
xchg
jb
int
lcall
outsb
imul
jno
pop
jecxz
mov
push
mov
xlat
hlt
jmp
adc
push
add
daa
jge
out
mov
inc
jae
dec
push
mov
cmpsb
jns
xlat
jne
aas
xchg
insl
add
negl
lahf
lods
repz
sbb
jg
jmp
fiaddl
iret
add
cmp
jae
in
lods
jno
inc
mov
test
jle
push
lods
aaa
and
mov
mul
sarl
push
or
insb
cmpsl
adc
fs
sub
dec
inc
int3
dec
shll
shr
shr
sbb
loopne
mov
out
mov
lods
jne
push
cmp
push
test
test
and
out
js
rorb
fsubl
and
sub
mov
negb
ljmp
in
mov
push
mov
fcompl
mov
outsl
imul
mov
loope
inc
out
fsts
fiadds
mov
mov
ret
test
insl
xor
js
add
mov
cs
add
dec
push
lock
cli
mov
pop
lods
pop
lcall
and
bound
sub
pop
pop
xor
test
test
pushf
or
lea
ljmp
dec
stos
jecxz
cmpsb
lret
add
add
mov
mov
imul
pop
mov
cmc
adc
cli
sbb
fbstp
insl
aam
xchg
sbb
movsb
jp
nop
ljmp
push
repz
cmp
xor
pusha
mov
adc
popfw
inc
xchg
cld
xlat
xchg
and
lea
sub
pop
pop
inc
jne
mov
stos
push
sub
test
data16
sub
std
ret
out
cmp
fsts
jbe
xchg
popa
and
mov
sbb
aam
jne
arpl
push
cmp
add
lods
pop
in
shlb
sbb
sbb
aad
push
push
into
sbb
mov
inc
pop
mov
ljmp
cwtl
push
call
pop
ret
daa
push
mov
adc
mov
jl
push
aas
into
jns
mov
hlt
push
movsl
icebp
popf
and
and
mov
xor
imul
hlt
aas
fsqrt
adc
and
add
cmpsb
sbb
shlb
sub
fstpt
add
sbb
xchg
jae
cmp
pop
cmpsb
fldcw
and
dec
sbbl
ret
leave
ficompl
mov
lret
inc
mov
jle
pop
es
inc
mov
jp
loope
mov
mov
imul
or
int
cwtl
ljmp
xorb
pop
jno
adc
sbb
jns
aad
sbb
dec
mov
adc
movsb
lcall
xchg
mov
sbb
int3
shll
adc
aaa
mov
sbb
mov
push
loope
scas
inc
mov
sub
add
adc
lock
jbe
add
test
adc
ljmp
lock
dec
or
jno
movsb
xchg
movsb
or
xchg
add
jg
mov
out
inc
dec
xlat
jmp
adc
mov
jns
xchg
cmpsb
push
lods
movsl
adc
or
push
push
push
xchg
scas
stos
and
pusha
and
insl
das
test
xchg
je
jae
out
outsl
les
scas
xchg
push
inc
lds
lods
xor
int3
or
hlt
loop
push
ds
jg
sti
push
sbb
cmp
shl
call
sub
push
or
mov
dec
sub
ss
mov
out
cltd
or
pushf
lret
mov
pop
and
pop
xchg
dec
mov
jp
inc
dec
stc
xlat
pop
push
cmp
pop
fidivs
mov
ffreep
jae
test
pop
pop
popa
or
mov
xchg
jno
in
or
mov
jl
movsb
add
push
lock
mov
or
mov
rcll
insb
pusha
iret
lds
into
mov
push
mov
test
popf
insb
insb
cmpb
cltd
add
mov
push
push
adc
xor
mov
dec
jmp
jbe
cmpsl
mov
pop
and
dec
es
subb
sbb
outsb
dec
xor
push
cmp
dec
filds
inc
and
lret
xlat
adc
fadd
faddl
ret
inc
in
enter
dec
fmuls
xorb
and
or
push
sub
outsl
push
sbb
mov
rcrb
cmc
les
cmc
mov
xchg
mov
icebp
mov
enter
mov
ds
loopne
data16
rorb
or
xor
ljmp
decl
mov
andb
imul
add
arpl
pop
cld
xchg
cld
mov
mov
clc
adc
push
cmp
hlt
add
jle
cwtl
hlt
fistpl
mov
aas
add
hlt
movsb
mov
jmp
lea
rcrb
inc
push
shll
lea
lret
cli
jmp
in
mov
insb
js
push
mov
push
jb
cmpsb
push
ret
cli
push
xchg
dec
sbb
mov
mov
jmp
mov
cld
pop
jecxz
push
sub
andb
mov
nop
xchg
jge
pop
lods
mov
pop
lds
dec
cmpsb
dec
dec
stos
fildl
xchg
mov
dec
xor
lret
sbb
mov
push
mov
sbb
sub
pop
nop
outsl
repz
xor
enter
mov
jb
sub
das
mov
fs
push
pop
cmpsb
sbbb
fcoms
sub
push
lods
aaa
in
loop
inc
xchg
cltd
add
sahf
mov
dec
rorl
jne
pop
das
add
rcrb
dec
mov
cmp
pop
inc
mov
mov
push
xchg
mov
jecxz
cmpsl
add
mov
loope
add
push
dec
mov
jnp
test
push
aad
je
add
out
add
mov
mov
addr16
sbb
pusha
aaa
into
mull
and
adc
adc
and
repnz
fsubl
add
cmp
aaa
inc
fldt
jmp
sbb
ss
inc
xor
adc
incl
push
shll
loop
add
sub
xor
ja
insb
cltd
dec
lods
and
sbb
pop
notb
lods
sub
push
pop
rorl
imulb
cmp
inc
hlt
test
dec
insl
and
pop
fwait
repnz
mov
dec
rcrb
cmp
push
iret
add
sahf
pop
divb
cmpb
push
rcll
add
cwtl
lock
sub
sti
rorl
sub
cmp
imul
sub
xchg
inc
clc
inc
jl
and
xor
jo
repnz
pop
mov
push
add
ret
pop
sub
fadds
sbb
inc
mov
ret
push
push
pop
popa
je
jae
adc
or
and
stc
pop
fs
sbb
lea
inc
sub
rorl
nop
sub
scas
les
sub
cmp
arpl
dec
cmpsl
dec
dec
xchg
cltd
cmp
dec
cmp
lahf
add
sbb
jp
loop
test
popf
lods
jle
mov
les
fcomp
jl
fstpl
cmc
cltd
rclb
xchg
sti
loope
jno
fsubp
jle
mov
scas
dec
les
iret
test
lds
add
ret
insb
adc
inc
or
loop
add
cmp
and
int3
rcr
fdivr
cmp
cmc
inc
sub
jp
xlat
std
and
mov
pop
mov
fdiv
ss
fildl
test
test
jnp
add
enter
addl
jge
pop
jb
movsl
test
fwait
in
popf
les
shrb
xorb
clc
inc
divb
mov
mov
add
push
scas
fisubl
jnp
adc
out
imul
dec
call
fwait
sub
xchg
inc
xchg
xchg
js
nop
fisttpl
sub
fxam
xchg
jno
xor
mov
ret
jo
nop
pop
xor
rclb
aas
ljmp
adc
pop
or
fidivrs
shlb
aam
stc
sbb
idiv
mov
lods
outsl
dec
stos
fcom
lret
cmp
inc
sub
sub
cmpsb
fiadds
cmpsb
xor
jl
sbb
js
push
iret
leave
sub
jne
mov
das
jp
push
scas
jno
lcall
push
xorl
or
xlat
fists
shll
fildl
xor
inc
dec
jmp
sbb
add
xor
jae
ficoml
nop
xchg
jge
sbb
incb
jmp
cmpsl
mov
and
aam
jno
fwait
divb
xor
add
or
and
add
fcmovnb
fcomp
rorb
sahf
xchg
or
negb
sub
cmpsb
insl
repz
add
mov
sbb
in
or
ret
push
xor
add
pop
mov
adc
adcl
filds
inc
and
cmp
jl
enter
xor
mov
out
jge
in
pop
and
ljmp
int3
push
jae
xor
aas
nop
sub
clc
sbb
sahf
ret
inc
xchg
xor
and
dec
jp
pop
mov
scas
daa
dec
adc
push
xor
or
cmp
lahf
loop
pop
push
cmp
popf
stc
rclb
xor
cmp
pop
mov
addl
jbe
lods
push
repz
lret
js
outsb
ret
aam
lds
pop
cmp
es
xor
mov
cmp
adc
loopne
rclb
repnz
push
stc
dec
or
add
xchg
fisttps
lods
push
outsl
cli
stc
psllq
jecxz
mov
mov
or
cmpsb
stos
psrld
add
inc
sti
push
out
add
cld
xchg
ret
jg
mov
dec
mov
mov
lea
nop
xor
pop
ja
ss
pop
inc
mov
hlt
push
clc
ret
shl
sub
jno
cli
addl
pop
ss
pushf
call
cmp
sub
imulb
dec
addr16
xchg
lock
fnstsw
rorl
outsb
add
pop
jge
lcall
push
add
mov
ja
xor
xchg
and
xchg
sti
andb
cmp
cli
xchg
pusha
data16
jnp
jnp
insb
cwtl
popf
stc
sti
lock
push
cmpsb
cmp
test
cmp
xchg
pop
jmp
lods
icebp
test
sub
sbbl
gs
test
cli
test
je
test
pushf
and
adc
push
pop
lea
rol
jb
adc
and
or
mov
and
push
mov
xchg
push
sbb
pop
icebp
in
mov
dec
popa
fidivs
in
jo
cmp
cmp
inc
pop
aaa
lock
xchg
or
rcrb
mov
lahf
xchg
jbe
test
rorb
sub
ljmp
mov
mov
outsb
fnsave
or
movsl
jg
loopne
add
pop
mov
mov
mov
insb
enter
mov
test
out
inc
cld
lahf
repnz
orb
fs
out
mov
jp
pop
insb
mov
fsts
push
fmul
adc
loop
mov
int
pop
mov
testl
xchg
je
jp
in
jmp
xor
cwtl
add
enter
dec
std
sarb
mov
add
loope
pop
lds
test
arpl
mov
mov
cmp
push
xchg
loope
push
dec
xchg
and
out
jmp
jge
inc
pop
fcoml
add
xor
sbb
enter
mov
fnstsw
jp
ljmp
aaa
xchg
mov
cs
and
cli
add
int
push
out
fsubs
popf
xchg
lea
cmpsb
mov
lods
mov
fnsave
add
xchg
or
pop
movsb
jp
jnp
clc
and
xchg
ds
jmp
test
pop
and
fwait
outsl
stos
cld
pop
inc
pop
int
xlat
jo
mov
daa
fwait
stos
mov
aas
je
cwtl
adc
and
add
mov
and
or
or
div
outsl
mov
or
lcall
outsb
aaa
sbb
lahf
push
push
ljmp
test
ret
mov
je
pop
pusha
lea
mov
dec
rcrb
sbb
dec
faddl
fs
cmp
test
loop
sub
adc
mov
push
sbb
sub
iret
xchg
test
xor
and
scas
into
jbe
idiv
sbb
addr16
xchg
or
or
jge
jae
ljmp
in
ljmp
mov
adc
popf
xor
jns
mov
popf
sti
into
pop
mov
aaa
xchg
push
push
je
lock
psubusw
test
les
mov
gs
lock
push
aaa
mov
sbb
inc
inc
and
ds
test
sub
movsb
jne
daa
and
add
pop
cld
into
adc
ljmp
rolb
cmp
push
jge
test
jp
fcoml
inc
loop
aam
dec
mov
shlb
mov
mov
xor
mov
push
and
mov
scas
add
add
ret
push
mov
push
and
jnp
pop
pop
hlt
pusha
aam
push
push
fnstsw
insb
icebp
cmp
or
pop
cmp
ret
inc
gs
xor
push
stc
inc
lret
mov
jmp
testl
add
into
add
data16
out
jl
pop
orb
sub
jnp
mov
stc
das
in
or
push
cmp
es
lret
sbb
xlat
lock
push
cmp
push
cmp
push
std
fistpll
mov
in
push
in
outsb
js
add
mov
mov
adc
push
outsl
movsb
inc
fxch
loop
call
add
mov
shll
test
pushf
hlt
adc
add
mov
mov
add
and
ret
pop
loopne
and
sub
call
fisubs
rolb
cwtl
je
jle
fs
and
or
push
ds
lahf
test
ja
out
sbb
mov
add
or
daa
cltd
xor
adc
aaa
mov
lcall
add
shlb
jmp
lods
es
and
subb
divl
sbb
mov
pop
dec
out
aam
and
nop
orl
adc
cmp
add
push
daa
push
int3
add
mov
push
and
gs
push
add
cmp
pop
jno
scas
sbb
sbb
push
add
jbe
cmp
aas
push
jae
mov
mov
sub
hlt
insl
mov
mov
xchg
in
mov
inc
push
dec
hlt
gs
sub
push
insb
rcrl
pop
mov
xchg
sbb
std
pop
cmp
mov
cwtl
sbb
push
jb
in
cwtl
int
lods
test
jg
negb
cmp
adc
lret
mov
out
push
pop
xchg
mov
nop
mov
testl
mov
mov
dec
dec
push
test
cmp
int
jmp
pop
mov
xor
icebp
pushf
or
dec
jp
jl
and
or
inc
push
push
sub
push
int
jnp
xchg
pop
fadd
mov
dec
hlt
clc
sbb
adc
push
add
inc
mov
iret
or
out
or
xchg
std
jmp
push
jecxz
jmp
inc
add
cmp
stc
add
pop
xlat
data16
cmp
nop
cmp
xor
dec
mov
test
movsl
pop
push
add
into
roll
popa
sbb
push
inc
push
mov
mov
jns
mov
mov
lcall
sbb
lcall
icebp
mov
jl
xchg
push
lcall
xchg
xor
push
push
loop
addb
lret
stos
fwait
nop
jle
mov
mov
dec
mov
test
int
cmp
xchg
pop
scas
repnz
mov
call
clc
pop
dec
push
dec
jg
cwtl
fistpll
dec
cld
out
xchg
leave
rep
cmp
push
cmpsb
insb
testb
dec
call
loope
adc
mov
mov
sahf
jb
mov
dec
mov
pop
pop
xchg
subb
cmpb
adcl
xchg
xchg
mov
cli
out
decl
lahf
jp
fs
mov
pop
outsl
cmpsl
mov
insb
push
pop
lods
ds
outsl
dec
push
outsb
mov
mov
jmp
lods
add
or
movsl
jmp
arpl
pop
and
mov
mov
enter
test
jmp
add
sub
mov
test
scas
ljmp
ja
dec
dec
ja
xchg
inc
or
fsub
inc
sahf
add
mov
xchg
jo
xor
or
adc
scas
dec
das
sbb
fnstcw
jb
and
fiadds
lret
decl
or
lret
test
adc
lds
mov
pop
mov
sub
jmp
cs
mov
pop
xchg
inc
lods
push
cli
pop
insb
das
repnz
decl
sub
and
pop
pusha
loop
stc
mov
pusha
adc
test
or
pusha
inc
fwait
dec
xchg
cmp
daa
in
sbb
bound
inc
add
sub
or
ss
and
jb
jmp
out
movsb
ret
lds
cs
pop
push
push
in
jnp
and
daa
mov
inc
mov
js
mov
xchg
test
pop
xor
stc
sub
jo
fistl
mov
mov
lret
int3
fsubrl
adc
push
mov
pop
cmpsb
stos
cmp
lock
out
mov
shr
dec
mov
rolb
pop
ficompl
cltd
ret
enter
push
push
in
jecxz
add
and
add
push
mov
inc
out
cmc
shll
inc
call
xchg
jle
test
sbb
mov
pop
daa
push
aas
and
or
pushf
and
popa
jmp
in
ret
outsb
lret
fistpl
fs
and
test
rorb
mov
fisubrs
sub
xlat
sbb
addr16
jmp
jp
cmp
mov
lods
ja
add
xchg
popf
jno
mov
dec
fistpll
mov
inc
sub
in
xchg
int
mov
jp
stos
hlt
ds
or
sbb
adc
push
sahf
jae
bound
jg
int3
imul
sub
into
inc
cmc
into
cmp
ss
mov
mov
cmpsb
adc
dec
daa
jmp
ret
mov
decl
jmp
xchg
popa
jl
pop
icebp
ds
icebp
insl
push
ss
mov
dec
out
es
xchg
or
sub
sbb
lea
cmc
std
cmp
das
mov
sub
les
cld
jmp
pop
pop
sbb
outsl
aad
stos
jno
pop
cmp
and
lods
insl
adc
call
mov
xor
pop
rcll
jne
jle
test
mov
jbe
inc
mov
cmp
out
inc
fstpt
outsl
or
push
loop
data16
pop
pusha
ljmp
roll
xor
in
push
push
loop
mov
fmuls
out
popf
sti
mov
mov
cmp
in
jbe
or
adc
faddl
mov
dec
inc
out
mov
mov
cmp
mov
jnp
xchg
test
movsb
adc
and
cli
test
insl
ss
shrb
or
call
rcll
inc
xchg
shll
xchg
test
ja
int3
mov
aad
es
fidivs
cmpsb
jle
lahf
and
adc
xchg
stos
cmp
xor
dec
adc
ret
loopne
cmc
pusha
xchg
adc
cwtl
add
aam
sbb
pop
xor
call
xchg
lcall
lret
or
add
pop
inc
mov
negb
into
loop
cmp
sbb
or
pop
loopne
dec
call
jno
mov
daa
pop
xlat
in
stos
je
shl
push
pop
pop
xchg
mov
aad
into
iret
or
xchg
sub
andb
pop
mov
add
ret
lcall
adc
dec
xchg
iret
daa
pop
flds
scas
mov
jbe
mov
not
pop
mov
cwtl
jmp
mov
or
movsl
stos
push
dec
xorl
xchg
cmp
jbe
inc
clc
sub
mov
jmp
push
xor
jb
in
jbe
push
and
les
in
rclb
aam
lds
orb
mov
mov
and
in
sub
adc
pop
adc
in
enter
fcmovnbe
push
out
iret
ret
or
rcl
inc
in
mov
cwtl
pusha
test
scas
adc
cmp
addb
ljmp
in
lods
popf
or
je
ljmpw
push
cmp
ja
sub
or
mov
rorl
testb
xor
xchg
pop
test
push
jno
sub
enter
mov
outsl
pop
xchg
mov
test
xchg
in
mov
mov
cmp
mov
mov
rcrl
stos
jecxz
aam
adc
in
pusha
cs
int3
pushf
xor
cli
mov
pop
push
sub
adc
into
shll
add
lods
mov
rcl
mov
push
xlat
sarl
lods
idivl
cs
pop
insl
xchg
out
jmp
jecxz
or
shr
or
popf
add
stos
pushf
cmp
pop
stos
je
addr16
and
or
pop
jg
dec
xchg
mov
out
inc
mov
or
and
psadbw
adc
fbstp
std
mov
sbb
fisubs
pop
add
lods
dec
bound
cmpsl
jmp
and
bound
or
scas
xor
or
lahf
cmp
popa
add
out
pop
stos
lods
je
pop
mov
pop
fsubs
loop
jg
adc
or
jne
mov
out
xlat
mov
inc
pop
push
and
xor
mov
mov
pop
or
pop
pusha
mov
testb
in
cli
pushf
add
or
pop
push
mov
mov
xor
adc
movsb
jmp
out
add
mov
pop
sbb
ss
ret
cwtl
call
shrb
enter
push
rclb
fs
int
mov
dec
aaa
je
sub
in
add
pop
in
jae
jge
adc
mov
cmp
mov
rcrl
add
es
cmp
imul
inc
add
xor
lock
pop
mov
call
lods
cli
sub
inc
dec
imull
pop
out
sahf
das
je
adc
adc
mov
nop
jmp
call
inc
fcmovb
cwtl
pop
mov
mov
add
stos
shr
rcrl
mov
sub
push
sarb
push
lret
and
push
in
push
mov
cmp
das
add
add
addr16
adc
mov
sti
hlt
leave
add
pop
outsb
jns
out
cld
push
or
fstp
and
sub
das
clc
por
out
mov
push
and
xor
sub
stos
inc
cmp
or
outsl
dec
add
jle
ret
mov
jns
ja
sbb
pushf
push
mov
add
xor
xchg
inc
ret
out
push
test
or
imul
fcomps
jno
shl
movsl
lahf
dec
sub
and
xchg
lahf
stos
push
fdivr
out
fsubrl
dec
push
jp
add
cmpsl
popa
lods
fs
mov
cmp
ror
add
lcall
and
mov
pop
xor
popa
inc
cmp
in
data16
xchg
lock
shlb
mov
rorl
or
pop
ljmp
loope
xor
add
push
sub
cltd
bound
mov
movsb
pop
mov
xchg
add
scas
pop
arpl
in
push
jns
enter
xchg
cmp
test
adcb
adc
pop
dec
into
les
sahf
inc
mov
pop
in
enter
rcrb
xchg
je
shll
xor
jge
pop
pop
nop
jno
mul
popa
adc
fnstenv
lret
xchg
jmp
pop
fs
and
stc
test
add
jg
xchg
aam
out
into
cmp
mov
test
mov
sub
sarb
pusha
pop
push
cmpsb
mov
add
mov
pop
sub
push
std
stc
add
jle
nop
or
xchg
lea
mov
mov
mov
icebp
ret
mov
mov
movsl
movsl
lods
test
arpl
hlt
rcrl
add
out
pop
and
xchg
das
sbb
sub
xor
dec
ljmp
das
arpl
pop
xchg
ret
movsl
adc
stos
push
jbe
fstp
xor
out
or
dec
adc
shlb
aad
shrb
dec
loop
repnz
jmp
lds
cmpsb
out
scas
inc
repz
jge
sbb
mov
sbb
aas
pop
sbb
arpl
sub
into
dec
repnz
icebp
push
jno
mov
loopne
lea
push
flds
add
mov
loop
mov
or
int
mov
sbb
fstl
inc
mov
inc
stos
test
inc
aas
punpcklwd
loopne
lds
adc
xor
das
ret
stos
icebp
loopne
sub
faddl
decb
jmp
pop
pop
xchg
stos
mov
mov
repz
sar
divl
sti
lahf
sbb
add
push
fiadds
pop
cmp
inc
and
mov
cmp
xor
jns
insb
mov
lcall
cmpsb
enter
or
dec
mov
mov
jb
sub
fsts
fsubs
sub
inc
push
add
sub
lods
sbb
pop
jae
xorb
fucomip
pop
lock
mov
xchg
mov
mov
mov
lods
push
jne
cmp
push
push
mov
arpl
xor
data16
enter
xchg
xchg
pop
insb
mov
call
cmp
arpl
xchg
fldenv
ja
dec
movsl
xor
cmp
mov
in
cmc
sbb
loop
mov
xchg
push
out
pop
clc
lret
loop
mov
out
push
mov
mov
jnp
xlat
imul
cmpsl
or
test
jmp
aad
push
add
imulb
in
dec
int
jmp
adc
insb
stc
sbb
mov
cwtl
ret
rolb
outsb
cmc
popf
add
mov
loopne
in
adc
mov
fwait
push
dec
ss
mov
jge
mov
cmpsl
mov
lods
mov
mov
mov
andb
xchg
js
fs
adc
push
jle
add
repnz
pusha
ja
mov
je
mov
pop
jnp
in
les
mov
mov
mov
lods
mov
sub
filds
mov
cltd
pop
add
sbb
hlt
mov
adc
rep
jg
fwait
or
js
xchg
xchg
or
in
add
cmp
push
popa
iret
stos
cs
pop
add
push
xchg
cmp
cmp
jns
or
sbb
pop
adc
add
daa
add
push
stos
mov
mov
pop
or
push
mov
test
seta
jge
leave
xor
imul
shl
mov
ljmp
fidivrl
ds
addr16
out
mov
mov
insl
mov
xchg
jo
add
flds
subb
cmp
rorl
enter
or
fcoml
test
adc
cmp
cli
sub
add
dec
repnz
xor
jmp
and
add
xor
jp
clc
aad
std
insb
and
sub
push
add
pushf
rolb
repz
push
sbb
std
mov
je
movsl
cmp
xchg
les
dec
repnz
mov
inc
mov
insb
dec
mov
ret
sete
jbe
cwtl
pusha
dec
dec
cltd
mov
inc
orl
mov
mov
jae
mov
fs
inc
shll
daa
inc
xchg
mov
mov
inc
xor
mov
subb
leave
cs
jo
ficoms
or
sarb
mov
outsl
je
cmp
nop
fcomps
xchg
fcompl
sti
fsubrs
arpl
jg
xchg
aaa
mov
out
mov
shlb
adc
mov
daa
scas
pusha
int3
or
push
xchg
jne
mov
fwait
mov
dec
sbb
imul
push
lcall
lods
mov
aaa
mov
jg
loop
jl
xor
lock
leave
sahf
mov
sub
mov
add
mov
inc
lea
xor
cmp
icebp
imull
pushl
adc
add
iret
into
xor
jecxz
fstl
mov
sbb
adc
cmp
mov
lock
push
sbb
or
lahf
adc
insb
movsb
add
push
cli
mov
inc
scas
in
outsb
sub
scas
push
nop
mov
ficoms
xchg
inc
aam
hlt
cmpl
pop
in
fstpl
dec
dec
addr16
sbb
ja
into
cld
aaa
mov
pop
aas
into
push
cmp
mov
sub
xchg
xor
xchg
push
adc
pushw
push
bound
xchg
loope
lahf
mov
movsl
sbb
xchg
inc
cli
add
mov
pushl
pop
inc
push
test
insl
dec
and
jns
and
xchg
adc
cmpsb
aas
pop
dec
fs
cltd
repnz
scas
xchg
mull
orl
and
test
push
sbb
jbe
jg
in
jno
mov
stos
dec
imul
icebp
lahf
mov
jp
mov
or
scas
in
pop
jecxz
loop
push
add
mov
dec
inc
inc
scas
xor
outsl
fildl
fiadds
dec
add
into
leave
or
xor
les
fcom
pop
ja
out
shlb
loopne
push
pop
enter
aam
in
push
xchg
js
push
mov
push
mov
inc
sbb
mov
mov
pop
aad
mov
nop
push
pop
pop
sti
push
lahf
fdivrs
lds
mov
sbb
mov
mov
lods
in
fcmove
test
popa
nop
adc
and
repz
and
cmpsl
cli
insl
mulb
ficoms
jb
sub
repz
fwait
outsb
repnz
or
loopne
lret
lahf
push
movsb
rcrl
aaa
pop
cltd
insl
xchg
dec
sbb
data16
mov
or
push
fdivl
jge
ja
dec
jge
xchg
fstpl
cmpsb
adc
mov
mov
std
jg
ret
pop
call
mov
sub
andl
sbb
shrb
cmp
jnp
repnz
divb
iret
or
mov
test
insl
xchg
xlat
fidivl
cmc
gs
sub
das
test
jae
leave
push
ret
fwait
loopne
fs
sub
and
jbe
sub
enter
ja
push
adc
sub
adc
test
loope
andb
dec
pop
clc
mov
lock
mov
push
jp
mov
popa
rclb
push
dec
xor
loop
add
push
repz
mov
xchg
ljmp
fbstp
fisttps
pop
hlt
in
dec
shl
pushf
gs
insl
sub
pop
int
imul
xchg
push
test
inc
sbb
in
pop
pop
inc
cs
andl
inc
popa
pushf
mov
outsl
rorb
mov
add
daa
std
pop
sub
scas
cltd
loop
mov
sub
xor
sub
into
cmp
jbe
mov
jb
outsb
pushf
fisubs
int
add
rcrl
jecxz
xlat
sbb
jne
sbb
in
repz
inc
negl
jo
iret
test
movsb
cmpl
js
out
adc
mov
lods
cwtl
into
aas
xchg
cmpsl
xchg
and
in
lcall
std
sti
pushf
add
jne
and
scas
cmp
push
into
rorb
xor
ret
jp
fidivl
jmp
or
push
xor
lcall
mov
out
fwait
lret
nop
cmpsb
push
fnstcw
loope
cmpsl
decl
push
mov
pop
xor
add
and
jg
aaa
sbb
cmp
mov
cmpsl
sbb
xor
sbb
data16
push
pop
jns
cmpsl
popa
cmp
inc
fsubrs
cwtl
pushf
outsl
fstl
mov
in
xor
and
lcall
sahf
dec
pushf
push
ds
and
notl
xchg
inc
je
jmp
insb
push
scas
and
divb
cld
mov
fs
insb
xor
inc
aam
adc
sbb
rclb
dec
cmp
xchg
jbe
xor
bound
fld
test
leave
incl
stc
je
xlat
ja
add
clc
fldt
add
jns
daa
dec
ret
rclb
outsb
lret
insb
jecxz
shrb
ds
leave
gs
inc
jmp
xrstor
aaa
xor
lds
test
ret
push
cltd
cmp
shll
mov
adc
test
std
jbe
mov
leave
mov
mov
aad
pop
in
in
mov
addb
jnp
fucomi
in
push
fdivl
fisubl
rcr
pop
cmpsl
jle,pt
pop
shlb
adc
dec
dec
arpl
jmp
addr16
add
and
jns
arpl
dec
cmp
fcmovbe
out
inc
mov
mov
or
stos
repnz
in
cmp
aad
or
insl
push
or
push
fstp
std
adc
call
into
sub
repnz
loope
sub
add
cmp
rcrl
lahf
lea
stos
xchg
sub
jg
imul
cmpsl
ds
pop
mov
cmp
jmp
out
push
mov
int
mov
orb
les
outsl
or
test
jmp
mov
notl
int
or
jle
scas
mov
ret
or
lahf
mov
ret
add
xor
xchg
call
push
jb
inc
push
inc
ss
add
rolb
ficoms
int3
pop
xchg
shrl
enter
sbb
leave
cmp
or
aas
jb
xor
push
sub
or
fwait
or
mov
or
lret
imul
nop
inc
roll
mov
jnp
andb
push
sahf
cmpsb
ss
dec
test
xchg
push
adc
movsl
ret
push
xchg
das
push
adc
iret
dec
aam
dec
sti
xlat
outsb
call
or
dec
mov
outsb
lcall
sbb
clc
imul
jecxz
mov
pop
pushf
mov
pop
std
call
jle
fisubrl
push
mov
movsl
aad
shll
pop
mulb
sbb
jbe
xor
push
repnz
mov
ret
sbbl
inc
xchg
movsb
jae
dec
jmp
cmp
pop
daa
call
jcxz
mov
sub
outsl
xchg
repz
xchg
sbb
cwtl
mov
xchg
xor
shl
cmp
mov
cmc
movsb
add
or
add
pop
add
inc
adc
int
cmp
and
es
jne
inc
arpl
mov
aaa
add
mov
mov
daa
mov
dec
add
pop
clc
mov
mov
std
cmp
lods
mulb
jmp
cmpsb
pushf
mov
sbb
xlat
scas
cli
push
sub
push
je
push
mov
sahf
daa
cli
ss
sub
lods
ds
stos
imul
out
mov
adc
fmul
ret
sub
pop
push
cmc
pop
mov
cmp
lds
add
inc
xchg
faddp
xchg
push
xor
pop
jp
pop
mov
mov
adc
js
fmuls
dec
movsb
and
jp
add
movl
in
stos
pop
fcomps
push
add
push
mov
xor
out
sbb
cld
ficoms
pop
ss
sub
test
stos
in
push
cmp
ja
add
lods
adc
ja
adc
push
push
out
adc
jno
and
xchg
mov
popa
mov
and
pop
jbe
mov
test
mov
and
es
fwait
mov
mov
dec
testb
enter
out
xor
cmp
cmp
sub
sub
shrb
dec
jns
or
aas
icebp
in
jge
push
imul
jae
mov
and
mov
lock
push
aam
loop
ret
lcall
jmp
and
xor
and
fsubs
shll
mov
and
imul
mov
test
call
xchg
ljmp
mov
inc
adc
xor
jecxz
jne
fistpll
rolb
xchg
js
ds
mov
outsl
enter
push
bound
xlat
adc
dec
add
add
inc
mov
out
xor
adc
and
xchg
scas
dec
jg
xchg
push
nop
pop
data16
pop
xchg
aam
daa
and
sbb
mov
or
push
jb
xchg
xor
cmp
lods
cs
imul
aad
cmp
out
in
push
fsubl
cmpsb
inc
inc
sub
mov
inc
mov
subb
xchg
push
jle
hlt
rcll
es
sahf
adc
data16
mov
ljmp
and
dec
mov
into
into
push
hlt
push
cltd
mov
fpatan
stos
std
xchg
mov
movsl
lret
fcmovu
fstp
or
pop
lret
jo
int
xchg
mov
xchg
dec
inc
xchg
bound
cltd
arpl
and
ror
and
add
cwtl
gs
mov
stos
imul
adc
adc
jle
sub
inc
xor
mov
sbb
cwtl
cmpsb
mov
inc
rorb
sbb
jg,pn
aas
push
mov
jmp
lock
cld
mov
cmc
repnz
fsubrs
xor
cmp
mov
sub
test
adc
je
push
pop
pop
jl
jo
jb
push
mov
xchg
mov
and
mov
jp
int
xchg
and
fidivrs
inc
mov
scas
ret
xchg
jle
aas
xchg
sti
es
push
mov
adc
xor
insb
imul
jp
sub
retw
sub
mov
xchg
aaa
mov
pop
sbb
add
xchg
and
mov
push
add
in
mov
mov
mov
inc
pop
mov
push
dec
mov
dec
call
mov
faddl
sub
loopne
push
cmpsl
adc
dec
test
sub
jle
dec
xchg
sbb
repnz
push
stc
outsl
mov
push
dec
lret
arpl
shll
mov
rcll
loop
dec
xchg
pop
jbe
cld
inc
dec
lock
gs
mov
inc
fimull
shlb
xor
jno
cltd
mov
lea
push
cwtl
rcrb
sub
or
mov
add
arpl
dec
arpl
dec
lea
es
sarb
rcll
in
insl
or
loop
mov
movsb
fistl
out
scas
gs
call
sbb
sub
addb
inc
inc
ljmp
mov
pop
stos
lods
jnp
mov
ljmp
add
mov
dec
jl
jg
and
jle
movsl
push
sub
xor
xor
xchg
add
mov
arpl
test
lcall
xor
add
mov
cmp
and
mov
je
stc
popf
cli
jns
inc
adc
ror
pushf
les
pop
mov
es
xor
jnp
call
mov
and
dec
add
mov
pusha
cmp
daa
push
and
jmp
divl
loop
cmp
pop
in
and
test
or
mov
jecxz
jne
xor
mov
mov
test
jmp
pushf
jno
jle
xchg
mov
pop
mov
test
cs
jmp
test
in
add
mov
mov
aaa
and
mov
jg
mov
sub
shlb
aam
mov
mov
cmp
sahf
gs
fprem1
outsb
jnp
fisubl
les
icebp
inc
arpl
int
aas
imul
paddsb
test
lea
das
mov
popa
lea
lcall
roll
aad
adc
sbb
loopne
inc
or
push
bound
cltd
mov
pop
out
lret
dec
addr16
dec
pop
and
mov
mov
and
mov
jb
cli
mov
leave
shrl
cli
arpl
out
dec
push
xchg
enter
pop
mov
repz
cmp
loop
push
xchg
gs
or
pop
xor
sti
sub
push
mov
sub
add
inc
sbb
add
mov
out
or
jp
hlt
pop
aam
testb
cli
ret
pop
push
dec
mov
cld
rep
mov
fsts
std
sahf
cli
pushf
inc
sarb
push
cltd
xchg
sbb
scas
out
push
dec
xchg
push
pop
ljmp
xor
enter
mov
xor
popf
and
lret
scas
sbb
xor
lock
pop
aam
ljmp
popa
dec
insb
pop
sub
xchg
inc
arpl
mov
scas
inc
xchg
movsb
fimull
rorl
jp
aam
sbb
bound
push
aam
xchg
loop
das
scas
pop
xchg
xchg
clc
hlt
das
shll
loope
mov
ljmp
xor
mov
add
sar
loopne
repz
xor
sahf
inc
jmp
insb
push
clc
mov
xor
sti
in
push
or
scas
push
push
loop
outsl
xor
lahf
call
icebp
lret
idivb
and
add
inc
mov
inc
and
cmp
scas
out
arpl
stc
dec
movl
adc
mov
outsb
push
and
cmpsl
xchg
push
add
mov
mov
loopne
jbe
gs
jbe
mov
pop
imul
repnz
pop
push
insl
push
push
sub
popf
out
lods
bound
cmp
mov
jae
sub
sarl
jl
pop
pop
std
pop
outsl
xchg
jns
mov
icebp
lahf
pusha
jns
inc
xlat
pop
and
push
mov
jge
xor
mov
dec
push
fidivs
push
xchg
adc
ds
ds
lock
stos
add
dec
sbb
inc
gs
cmp
popa
mov
pop
cmp
sub
cmpsb
mov
test
out
aad
dec
lret
dec
push
sub
adc
into
pop
pop
dec
cmpsb
sarb
jl
pop
add
inc
fiaddl
add
dec
pop
aam
push
dec
sub
push
repnz
ud0
pop
jge
repz
adc
or
fisttpll
mov
je
std
dec
shlb
xor
ret
sti
jns
dec
test
in
test
andb
nop
jecxz
mov
out
add
arpl
push
cmpsb
ret
xchg
lcall
or
icebp
movsl
mov
popa
sub
sahf
iret
outsb
mov
jp
mov
jl
mov
mov
daa
out
adc
dec
ds
cmp
mov
or
jmp
je
call
inc
dec
sbb
add
push
xor
in
test
pop
xor
add
cwtl
fisubs
sbb
adc
inc
xchg
cwtl
in
test
and
out
movsb
mov
xor
in
sti
add
hlt
icebp
add
push
sub
sbb
data16
fsub
call
ljmp
push
inc
cmp
sbb
stos
ljmp
insl
or
orb
dec
xchg
in
inc
add
out
not
sub
dec
orb
add
dec
pop
xchg
jmp
imul
testl
mov
lahf
push
push
jmp
dec
push
stos
sti
mov
xchg
push
cld
xor
push
inc
daa
cmp
push
jbe
in
sbb
les
inc
daa
and
mov
adc
es
push
push
testl
dec
push
mov
sbb
mov
jns
or
or
arpl
rcl
arpl
xchg
fst
call
mov
aam
pop
add
decb
jae
pop
bound
and
imul
enter
jnp
pop
sbb
sbb
mov
mov
dec
mov
push
and
dec
add
notl
rorl
jbe
popa
xchg
jmp
push
shll
cli
enter
push
fs
inc
insb
mov
iret
dec
imul
popf
lcall
icebp
cli
mov
inc
out
lds
shrb
mov
cli
pop
jnp
scas
nop
sub
int
and
adc
dec
jmp
imulb
decl
addr16
xchg
jle
or
push
xor
int3
push
or
fistpll
lods
cmpsb
test
loop
mov
cs
lret
lahf
test
sti
icebp
add
sahf
cmp
cltd
cmpl
testl
and
fistpl
jnp
mov
jg
xchg
movsl
jne
xor
pop
clc
jbe
bound
lcall
clc
mov
shrl
in
bound
mov
lahf
test
add
lcall
adcl
sbb
adc
dec
mov
xchg
and
mov
xchg
mov
xchg
push
js
xor
pop
mov
mov
pusha
and
dec
test
sub
lods
sbb
outsb
mov
or
cmpl
add
std
fs
inc
cmp
int3
test
inc
ljmp
int3
outsl
mov
xor
cmp
movsl
xchg
aad
sbb
hlt
enter
decb
jns
push
cmp
inc
xchg
orl
or
cs
and
mov
pop
fbstp
sti
sbb
int
jp
mov
cli
pop
add
imul
xor
and
nop
cmpsl
mov
fdivp
fisttps
push
cld
xchg
test
jge
ja
in
lcall
out
lds
icebp
lods
mov
lcall
sub
cmpsb
inc
mov
repz
pop
mov
adc
outsb
pop
insb
cmc
sbb
cmp
bound
mov
lret
or
les
add
mov
cmpsb
jmp
loope
jg
aas
mov
mov
fsubs
jle
clc
mov
icebp
push
and
cltd
xorl
repz
out
push
or
xchg
inc
lods
xlat
xchg
pop
subl
inc
xor
mov
pop
into
inc
lret
lret
call
push
frstor
jle
or
daa
cmc
fiaddl
pop
aas
add
repz
inc
fmull
nop
pop
sub
inc
lahf
decl
in
sub
adc
stos
arpl
push
mov
lahf
or
cmp
lods
xchg
mov
sbb
aam
xchg
dec
shl
push
or
insb
mov
push
outsb
insb
popf
and
mov
pusha
loop
push
lahf
push
inc
in
jecxz
fimuls
scas
fwait
xor
stos
aam
outsl
mov
xchg
in
adc
int
in
xchg
and
jmp
insl
icebp
enter
jecxz
jno
jns
cmp
mov
aas
neg
mov
pop
mov
lcall
sahf
push
test
pop
cmc
adc
cmc
shll
xor
pop
roll
jge
push
jbe
hlt
cmp
mov
jns
outsl
jmp
fxch
out
iret
add
cmp
inc
sub
and
push
repnz
pushf
mov
and
pop
xchg
aas
lret
inc
ret
dec
mov
and
je
mov
test
and
test
lret
or
sub
and
sub
mov
je
add
xchg
jb
xchg
js
ljmp
adc
std
jns
lock
andb
dec
lods
mov
ss
xor
iret
popf
lds
xor
push
lcall
lret
push
dec
ret
sbb
xor
in
mov
lock
xchg
in
call
jmp
and
fisttps
adc
mov
bnd
push
add
xchg
dec
popa
mov
addb
lcall
test
pop
xor
and
insb
xor
push
fstpt
jne
lods
add
mov
jne
int3
sti
rcl
pop
and
sub
aad
jne
xchg
inc
cs
ret
mov
and
mov
rorl
jns
fsubrl
mov
mov
jae
out
addr16
or
jge
mov
vmread
dec
add
jno
testb
out
mov
repnz
fistpll
repnz
xor
jg
mov
dec
dec
insl
hlt
push
add
xor
cs
mov
and
inc
and
ss
sub
jb
into
push
pop
inc
stc
pop
std
movsl
jb
int
sub
and
dec
orl
lcall
scas
std
jb
mov
iret
adc
aaa
rcrl
test
test
je
popa
in
push
jo
cmpsb
rolb
leave
cwtl
adc
fisttpl
xor
ficomps
cmc
or
ret
jmp
jo
shl
xchg
loope
inc
push
stos
jno
ret
out
inc
ss
sti
lock
sub
add
sub
add
jl
adc
mov
in
xlat
mov
mov
arpl
adc
into
ds
sbb
orl
psrlw
popa
xor
mov
ret
clc
fs
pop
sti
outsl
out
adc
aas
outsl
pop
sbb
icebp
cwtl
mov
cmpsb
cmp
lods
inc
jbe
inc
or
adc
mov
imul
sub
enter
mov
mov
loope
push
xor
out
jae
jnp
data16
pop
or
push
call
inc
enter
pminsw
daa
add
jno
lods
fimull
addb
and
out
js
daa
fucomi
popa
xchg
adc
test
cmpsb
jge
jecxz
popa
sub
mov
xchg
jle
inc
je
cmp
xchg
or
das
and
inc
add
aad
sbb
push
adc
inc
cld
addb
pop
sub
push
xchg
xchg
pop
aaa
or
or
or
cmp
add
fs
jge
dec
dec
loop
and
sub
cmpsb
int3
pop
mov
cs
jnp
gs
test
nop
sti
cli
cmp
js
cmp
pop
cmp
sbb
lea
shll
mov
stc
mov
sbb
imul
push
push
push
adc
pop
test
xchg
stos
fsubp
jge
adc
into
mov
loope
push
push
sti
lds
ret
lahf
sbb
mov
dec
pushf
pop
inc
test
and
mov
mov
stos
xchg
lahf
into
iret
adc
jae
dec
push
in
sub
and
jne
in
int3
jg
lods
mov
out
mov
fs
pop
mov
scas
and
inc
jmp
aaa
dec
je
add
adc
sub
push
mov
stos
pop
mov
int
push
data16
mov
sub
mov
lock
pop
and
pusha
jl
xor
cmp
rorb
arpl
lods
lock
dec
dec
xor
xchg
push
loope
xor
mov
mov
outsb
push
mov
pop
add
movsb
pop
adc
inc
add
sub
pop
add
lret
outsl
or
xchg
stos
in
mov
lahf
sub
jns
ljmp
lods
adc
dec
ja
xor
cmp
mov
ret
dec
dec
push
out
cmp
sbb
push
and
incl
scas
scas
sbb
dec
in
pop
mov
popl
dec
jmp
pusha
mov
mov
cmp
mov
sti
aam
pop
jge
test
xor
pop
xor
daa
dec
dec
inc
xor
pop
sub
out
add
clc
dec
push
pop
stos
push
mov
loop
jp
sub
sbb
movsb
dec
std
mulb
add
fucom
dec
mov
cltd
cmp
lcall
mov
jns
cmove
adc
aad
repnz
in
add
inc
cmpsb
enter
push
or
fwait
sbb
push
bound
test
cmp
add
jnp
test
jle
cli
and
test
cmc
insl
and
sub
test
call
xor
out
sub
nop
sbb
adc
push
cmovno
ss
jne
xchg
call
or
mov
aad
mov
lea
or
xor
sbb
pop
xor
push
ja
dec
pop
add
aam
pop
iret
into
jmp
or
clc
stos
stc
push
in
mov
lods
sub
inc
xchg
in
jl
push
test
inc
mov
xchg
loope
jp
ficoml
out
out
int3
das
cltd
cmp
push
in
arpl
sarl
std
xchg
outsb
int
notb
hlt
mov
aas
xchg
flds
data16
add
inc
xchg
fmulp
xchg
jle
add
daa
ret
gs
cmovae
add
or
cmpsb
gs
clc
into
inc
cmp
ljmp
addr16
inc
xchg
push
lods
rdtsc
push
stos
add
shlb
imul
inc
jo
push
cli
lea
in
ror
mov
js
xchg
das
shlb
adc
push
dec
xchg
popf
sbb
mov
pop
addr16
insl
xor
cmp
xchg
fcmovnu
sub
and
inc
ja
and
inc
add
movsb
sti
pop
nop
jecxz
testl
xchg
xchg
cmp
cmp
sub
push
cmp
hlt
leave
cmp
jmp
sbb
cmp
xor
dec
pop
jb
jp
incl
sbb
or
je
mov
pop
sbb
inc
lods
icebp
and
es
les
cmp
mov
jmp
int3
cli
pop
cltd
xor
int
or
jns
jmp
mov
dec
in
add
pushl
cmpsb
aam
fwait
cmp
dec
lcall
mov
adc
dec
jmp
repz
test
cmp
xchg
mov
cltd
or
out
add
js
loopne
orb
push
fmul
push
cmpl
cmp
mov
enter
sub
icebp
mov
ljmp
in
cmp
rorl
out
or
cmp
nop
pop
movsl
jno
arpl
ret
or
jecxz
sub
es
stos
push
cltd
mov
add
dec
mov
jae
stos
shlb
cmp
xchg
out
cwtl
cmp
lods
cmp
push
jecxz
les
lds
outsl
mov
mov
movsl
lods
cmp
sbb
pop
adc
mov
xchg
addr16
push
dec
jle
cmp
mov
push
faddl
add
ret
fidivrs
ret
cmp
xchg
or
inc
in
adcb
jg
xlat
cmp
or
pushf
sbb
lahf
dec
mov
xor
adc
movsb
testb
icebp
inc
fwait
dec
cmp
enter
jae
int
rcll
fwait
cld
pushf
test
or
mov
or
test
adc
inc
scas
push
test
insl
hlt
pop
sbb
std
jl
add
dec
pop
push
lcall
cmp
sub
xchg
nop
test
ficoms
mov
outsl
rol
lahf
mov
push
fwait
mov
sti
add
int
add
push
aas
cmp
push
pop
arpl
stc
stos
inc
xchg
cmp
push
and
mov
fiaddl
and
cltd
dec
inc
out
fsubl
adcl
mov
jmp
push
pusha
dec
jnp
test
sub
xor
fdivrl
lret
xchg
pop
pushf
jl
lods
lods
sub
cmpsb
fsubs
repz
and
aaa
arpl
pop
sbb
test
sbb
mov
imul
and
inc
mov
mov
rcrb
cmc
mov
popf
dec
scas
adc
lds
scas
out
lods
jg
outsb
sbb
mov
pop
mov
nop
xchg
bound
icebp
mov
test
outsl
xchg
pop
push
add
mov
xor
push
stc
xchg
loopne
scas
imul
pop
mov
and
repz
and
cmp
lahf
add
icebp
decl
sbb
sbb
xchg
pusha
pushf
lds
into
loope
add
addr16
lods
adcl
push
ds
in
xchg
push
test
movsb
inc
push
insb
scas
aas
mov
cld
mov
dec
out
cli
or
in
push
mov
inc
test
test
in
push
xchg
outsb
sub
or
pop
xor
ljmp
push
ret
inc
or
push
movsl
ss
ja
xor
call
ljmp
shll
cltd
cmp
jnp
cmpb
or
jae
sbb
cmp
mov
es
sub
dec
iret
pop
push
stos
in
add
outsb
or
cmpl
dec
sub
cmp
movsb
loopne
jl
mov
loopne
jle
push
jnp
cltd
mov
sbb
rcrl
popf
dec
leave
push
mov
mov
xorb
sti
sbb
mov
rcl
sbb
daa
in
outsl
test
push
mov
aaa
xchg
jae
sbb
test
fwait
inc
mov
sub
dec
dec
jbe
scas
mov
scas
fcoms
stos
pusha
mov
cmp
daa
mull
lret
push
repnz
aad
out
mov
pop
aad
and
call
or
movb
sub
jo
lret
popf
push
pop
jmp
repz
xor
mov
lret
repnz
test
xlat
mov
mov
repz
lods
cmp
pop
mov
sub
insb
clc
addl
cmp
gs
mov
and
jge
mov
or
fdivs
mov
fnstenv
and
xchg
or
adc
sbb
in
aad
cmpsb
jge
ss
dec
dec
inc
cmp
movsb
mov
mov
sti
repz
aaa
pop
mov
repnz
es
aam
gs
jle
pop
add
mov
sbb
or
or
sarb
xchg
scas
cli
aad
mov
jbe
lods
daa
sub
lods
sahf
and
stos
or
and
hlt
mov
aaa
push
sub
xor
push
add
and
sub
mov
iret
jl
cmp
insl
pop
push
call
rcrl
jbe
in
dec
add
or
xor
cmp
jge
in
push
fisubs
lods
and
mov
adc
roll
mov
dec
push
cli
mov
fcomp
and
inc
mov
imul
sub
daa
cld
sahf
pushf
mov
xor
fistpl
in
ret
mov
cli
fldcw
je
jns
cs
loopne
cmp
or
add
ja
xor
and
inc
jae
inc
cmc
and
xchg
jns
shll
lods
adc
push
rep
sti
mov
in
adc
sbb
cmp
and
shlb
rolb
mov
movsl
ficoms
and
bound
sbb
cmpsb
sbb
sbb
xchg
and
jg
or
jb
mov
loope
stos
sti
pop
pusha
pop
mov
jge
xchg
sub
sub
cli
mulb
push
daa
dec
mov
jmp
aas
add
ret
scas
and
and
add
pop
cmp
mov
inc
pushf
aas
cmpsb
insl
movsl
fdivp
mov
inc
jp
sub
jb
imul
lock
jne
xchg
push
ret
shl
sbb
mov
addb
mulb
movsb
add
mov
fs
lods
pop
push
mov
mov
push
scas
add
xchg
xchg
add
jnp
push
cwtl
gs
lods
cmp
insl
insb
in
enter
popf
in
sub
cmp
loope
push
cmp
adcb
and
push
aam
aaa
psrlw
loopne
sub
or
aaa
dec
mov
lods
jg
xchg
xor
jle
pop
popa
adc
push
add
aas
mov
das
mov
pop
and
inc
icebp
mov
mov
dec
stc
mov
sub
sbb
out
pop
push
mov
test
pop
mov
fs
xor
clc
mov
int3
fistpl
cmp
and
jno
inc
loope
int3
push
push
mov
insb
lcall
cmp
sub
push
inc
mov
pop
pushf
jo
out
stos
jle
rorl
testl
shl
sti
sbb
adc
repz
push
jge
notb
repnz
hlt
pusha
jmp
push
push
rorb
jb
mov
xor
jno
loope
add
jne
std
dec
enter
or
inc
mov
jmp
shll
jo
push
and
loop
gs
repz
dec
addr16
inc
pop
add
push
packuswb
test
jbe
cmpl
pusha
adc
lcall
sarl
add
inc
or
mov
xlat
shl
or
bndldx
inc
xor
cmp
pop
call
push
dec
loope
fdivl
mov
inc
xor
adc
mov
out
ss
bound
xor
and
fnstenv
imul
outsl
adc
clc
mov
sar
xchg
cmpsl
jp
dec
test
push
jns
lea
jp
xor
lock
clc
flds
sbb
int3
cmp
mov
pop
scas
inc
pushf
ljmp
data16
sarb
sbb
aaa
pop
insl
xchg
add
mov
out
imulb
pop
jo
sbb
ljmp
call
xor
xchg
cwtl
lret
cmpsl
mov
imul
mov
or
out
clc
hlt
mov
mov
loopne
loop
jbe
or
icebp
jo
clc
cli
sbb
in
lea
test
sub
dec
mov
insb
into
jl
jnp
inc
xchg
push
pop
mov
or
addb
mov
fdivrs
mov
fadds
xchg
or
sti
ljmp
and
push
and
loopne
xor
mov
shrl
sbbb
test
cld
adc
jl
inc
or
lret
pop
repnz
lock
je
pop
dec
mov
sub
js
mov
mov
mov
lret
cmp
mov
adc
cmpsl
cmp
test
inc
inc
cwtl
adc
pop
rolb
mov
fdiv
inc
movsl
test
shrl
jno
sbb
xchg
pusha
jle
push
in
add
jnp
pop
lods
nop
fcmovu
jge
rorb
xchg
movsl
mov
imul
sub
fadds
cmp
in
and
iret
subl
cli
add
cmp
pop
jg
aam
popl
movsl
mov
es
mov
in
jmp
jle
xor
jno
fwait
xchg
movsl
mov
in
xchg
aad
adc
cmp
add
cld
movsl
push
mov
sbb
pop
ljmp
jo
nop
adc
adc
or
cmc
fldl
iret
cmpsb
jne
mov
and
pop
pop
dec
adc
jge
call
iret
xchg
jo
aad
jne
adcl
cmp
jmp
cmp
decb
out
insb
lods
xorl
mov
lcall
imull
insl
stos
or
cmpsb
fdivrl
pop
les
pop
leave
in
lcall
or
dec
leave
jl
je
mov
icebp
flds
add
mov
push
mov
cmp
mov
cmp
cmpb
xor
adc
add
fs
bswap
decb
cld
imul
sub
cs
mov
sub
mov
mov
push
out
cmc
pusha
pop
test
ret
mov
sub
je
cmc
hlt
imul
sub
xchg
pop
inc
jnp
and
sahf
icebp
pop
test
test
inc
sbb
faddp
fcomp
fdivrs
push
arpl
icebp
sbb
inc
and
movsl
ja
or
cld
addr16
icebp
mov
inc
jge
int3
cmpsl
pusha
push
adc
fcmovnu
mov
jbe
in
fsubs
pop
mov
xchg
add
aas
adc
pop
ljmp
push
es
and
jp
dec
push
stc
out
adc
xlat
or
stos
mov
xor
push
popa
mov
in
mov
mov
sub
sbb
xor
inc
inc
xor
add
insl
dec
xchg
test
jp
inc
imul
mov
xchg
outsb
add
loopne
adc
mov
jg
add
lds
add
jb
inc
jae
testl
test
adc
dec
popl
push
push
mov
adc
loope
pusha
out
pop
fs
mov
jmp
ret
or
dec
and
in
stos
pop
cs
pop
add
std
out
movsb
xchg
jno
push
aad
mov
pop
mov
cmp
add
loope
add
xor
adc
xchg
mov
bound
jbe
push
fiaddl
and
mov
inc
aad
cmp
xor
dec
mov
inc
push
xchg
mov
inc
movsl
mov
repz
xor
sbbb
jbe
cltd
xchg
daa
in
add
movsb
push
and
mov
lret
mov
loope
adc
loop
inc
dec
mov
cmp
fwait
popa
or
cli
xchg
test
in
stos
fnstsw
fdivs
inc
sbbb
and
fcom
aam
add
sub
outsl
push
fcoml
mov
add
lret
cmp
sub
pop
adc
scas
in
aad
jne
adc
leave
addl
or
push
loopne
lcall
xlat
test
and
inc
inc
loop
js
ffreep
pop
ret
lret
cmpsb
icebp
addb
dec
pop
in
cmp
jbe
dec
mov
pushf
sbb
mov
adc
fdiv
out
push
jb
sbb
test
push
inc
adc
add
out
outsl
sarl
pop
cld
inc
cmp
ss
in
and
xchg
addl
cwtl
and
xchg
cmovle
mov
adc
decb
setns
cmp
out
fwait
out
xor
add
pop
or
sub
inc
lods
shrb
or
or
xchg
mov
stos
xchg
aam
mov
sub
fidivrs
daa
add
pop
cmp
fwait
test
adc
popf
cmp
cmc
jmp
cmp
jecxz
stos
pop
pushf
inc
xchg
sar
dec
jge
mov
into
adc
out
fisubrl
mov
lds
xchg
sub
scas
mov
mov
inc
fistl
mov
out
cmp
xor
fistl
push
dec
add
ljmp
lds
sbb
pop
xchg
dec
cli
or
xchg
lods
add
ds
adc
leave
mov
ret
cwtl
popa
fisttps
inc
jmp
sbb
mov
push
incb
xor
stc
pop
fnstcw
bound
ja
adc
sbb
fs
and
aas
cmp
gs
daa
mov
inc
jge
cli
sbb
or
insb
adcb
inc
loopne
jmp
daa
push
or
dec
cs
cmc
lahf
inc
pop
add
jno
rcll
dec
frstor
ljmp
inc
adc
hlt
sub
mov
jne
pop
movsb
fcoms
sarb
mov
jno
scas
mov
xlat
cmpxchg
inc
andb
xor
je
xor
jge
cmp
dec
mov
xor
mov
xchg
fildll
cmp
sub
pop
iret
ret
xchg
mov
sub
sub
adc
out
sub
incl
lds
or
pop
xchg
jmp
and
mov
scas
xchg
xchg
xchg
jle
scas
adc
roll
scas
and
fsubs
or
dec
jb
lock
jg
jge
test
test
mov
mov
jno
dec
push
popf
les
roll
icebp
insb
jnp
int3
daa
jp
add
xchg
and
loop
mov
enter
mov
sbb
xchg
push
inc
mov
into
and
outsl
jp
sti
adc
repnz
push
inc
cwtl
movsb
inc
add
add
shlb
xor
nop
jge
lahf
ja
sahf
inc
incb
mov
inc
and
add
push
sti
and
shll
sub
sub
je
cmp
cltd
sbb
cwtl
imul
mull
xchg
testl
test
stos
xchg
enter
cmp
hlt
sbb
adc
lret
add
sub
sub
cmp
lock
sub
pop
ficoms
gs
lods
jle
xor
dec
adc
movsl
inc
stos
aad
lea
sub
or
fcmovnb
add
imull
jae
xchg
mov
gs
inc
jbe
push
and
cli
into
inc
repnz
dec
icebp
scas
in
insb
incl
iret
mov
mov
test
push
push
data16
je
and
mov
push
add
xlat
stos
dec
int3
jbe
roll
xchg
dec
icebp
add
xor
xchg
lahf
call
ret
loope
mov
nop
loopne
int
cmpsb
aaa
lods
nop
xchg
lret
or
jae
sbb
mov
push
les
xchg
test
or
pushf
add
or
rcl
bound
ficoml
xchg
mov
push
pop
or
or
ficomps
add
xchg
into
and
sub
std
mov
negb
pop
sbb
mov
fwait
popa
notl
cltd
xchg
cld
call
jecxz
sbb
scas
jne
mov
sbb
shll
lret
leave
jl
sbb
aam
sti
out
push
iret
das
jo
fistps
dec
mov
push
sbb
or
stc
mov
test
pop
jne
add
sub
arpl
into
cmp
jne
or
push
lret
push
std
lret
or
adc
push
adc
sbb
ds
dec
cli
test
cltd
scas
imul
push
inc
cmp
outsb
test
push
loope
jnp,pt
cld
idivl
dec
and
daa
and
mov
pop
jle
mov
mov
fs
into
lret
insb
xchg
adc
test
orb
lahf
xor
jne
fdivr
xor
mov
scas
mov
iret
adc
repz
js
mov
leave
cmpsb
cli
push
dec
add
xor
push
mov
adc
pop
mov
add
insb
jnp
je
addr16
dec
xchg
dec
loop
cmpsb
stos
xchg
movsl
mov
push
inc
fimuls
mov
mov
cwtl
cmp
dec
pushf
lcall
leave
jp
inc
add
stos
mov
shrl
adc
jno
out
imul
les
fbstp
jae
xchg
add
mov
sbb
ljmp
xchg
cltd
scas
sbb
and
mov
push
repz
add
test
push
push
inc
mov
in
test
outsb
xchg
mov
aas
std
inc
sub
cmpb
js
pop
push
sub
mov
sbb
outsl
push
mov
int
lods
xchg
mov
xlat
pop
cld
xor
in
decb
mov
sub
push
nop
and
iret
jp
xchg
scas
cltd
mov
mov
dec
sub
lods
xor
rorl
adc
xor
add
repz
imul
sub
ret
jl
aad
dec
addr16
shrl
add
mov
fstps
daa
inc
jnp
in
inc
mov
jbe
andb
or
sub
mov
out
mov
mov
mov
sub
popf
dec
mov
and
shr
mov
gs
gs
pop
sahf
shlb
test
dec
les
mov
clc
inc
pusha
daa
pop
out
movsb
adc
movsl
mov
ret
push
popa
jg
sbb
mov
test
fidivrs
mov
jns
xor
sahf
jg
xlat
aam
bound
cmpsl
aaa
inc
jnp
jecxz
or
adc
mov
jno
loop
pop
mov
subb
test
push
mov
rcrb
arpl
test
hlt
dec
mov
inc
and
daa
je
lcall
int3
inc
sub
iret
pop
pop
xlat
clc
pop
xor
les
aad
decl
sub
jo
mov
fisubrl
adc
fsts
lret
sahf
mov
mov
xor
movsb
sbbb
dec
xor
addr16
imul
inc
sub
stc
js
fs
daa
xchg
mov
call
xchg
pop
pop
shl
mov
dec
mov
or
sahf
jmp
rcrl
cmp
sub
push
out
pushf
out
pop
iret
fidivrl
repnz
add
das
pop
pop
lea
cmp
sbb
ss
mov
dec
loopne
in
rorb
inc
push
jle
jne
cmp
into
icebp
into
clc
insl
push
clc
xchg
repz
pop
jb
dec
inc
shrb
sti
mov
into
je
jecxz
inc
in
dec
inc
mov
mov
inc
push
popa
mov
das
xchg
push
cmpsl
mov
mov
in
cltd
sub
sbb
add
shrl
add
inc
mov
xor
cmpsb
ljmp
pop
jno
xchg
scas
imul
fmulp
mov
and
movsl
pop
es
xor
flds
sarb
jecxz
add
adc
lret
cmp
add
rorl
xchg
movb
int
les
dec
add
fisubrl
sti
ja
xor
pop
jge
mov
dec
jecxz
pop
fcom
enter
int3
xor
fsts
mov
add
sbb
repnz
fiadds
cmp
sbb
aaa
pop
lcall
icebp
adc
cwtl
add
rolb
xor
push
ret
pushf
mov
fsubrs
shr
shr
inc
xor
aaa
out
outsl
in
iret
push
jo
push
dec
xchg
xor
push
inc
decb
mov
in
or
adc
jb
test
or
pop
dec
fnsave
pop
xchg
cwtl
pop
jmp
int
in
js
push
pop
jg
loopne
sbb
mov
adc
nop
int
jle
in
das
shlb
mov
lock
int3
icebp
or
dec
pop
xchg
jecxz
test
test
cli
out
imul
mov
jae
cwtl
lea
mov
je
shlb
and
pushf
popa
jmp
push
into
pop
shrb
xchg
cwtl
mov
lret
pop
push
pop
mov
sub
sbb
or
loopne
mov
sbb
add
push
pop
jl
aad
call
push
sbb
inc
xlat
xchg
sub
add
pop
outsl
jns,pt
lahf
ret
mov
dec
popf
js
adc
push
arpl
push
mov
xor
imul
ss
cmc
xchg
sbb
pop
in
inc
sub
lock
pop
push
push
adc
pop
mov
in
lret
in
push
repnz
xchg
in
repnz
sti
ss
xlat
and
pusha
lods
push
aas
sarb
aas
adc
fwait
add
dec
push
popa
stos
shrb
sti
cmp
int
sbb
call
lcall
int3
iret
fisubs
add
xchg
loope
in
stos
ret
add
inc
les
or
leave
inc
aam
add
or
sub
sbb
adc
sbbb
pop
adc
aaa
push
mov
inc
in
shll
dec
ljmp
add
aam
or
sbb
mov
dec
sub
adc
sub
dec
jmp
imul
add
aaa
roll
push
jnp
inc
pop
xor
pop
inc
add
jbe
xor
and
pop
adc
fnstcw
pop
pop
into
int3
incl
xchg
outsl
imul
jbe
fidivrs
out
adc
adc
pop
push
scas
pop
and
xchg
lcall
dec
adc
jbe
insb
push
insb
lret
clc
add
shr
jp
fs
ficoms
mulb
and
jecxz
cld
shr
sahf
or
stos
mulb
nop
mov
sub
insl
sub
daa
xlat
jg
pop
push
sbb
mov
and
mov
lock
mov
and
cmp
pop
out
push
adc
push
jle
sbb
mov
push
aad
push
cmp
int
ss
sti
ss
ljmp
jb
pop
cmpsb
test
fwait
or
ja
movsl
mov
out
test
mov
jbe
and
sub
sarl
ss
xor
cwtl
je
sbb
and
cmp
sub
dec
push
jb
hlt
adc
inc
pop
sub
jl
mov
aam
les
pushf
fs
fldl
xor
in
aaa
mov
push
daa
das
jecxz
cmp
jnp
fisubrs
lock
js
imulb
shrb
ficomps
jae,pn
pop
mov
jb
mov
in
lahf
or
pushf
outsl
cmp
mov
mov
dec
push
xor
xor
mov
fcoml
xor
in
pop
cs
int
jns
shrb
or
fs
js
lret
mov
xchg
add
rclb
push
gs
push
or
jae
std
hlt
aas
fldcw
fwait
dec
push
mov
mov
mov
mov
mov
mov
insb
xor
icebp
push
outsl
sbb
in
xchg
sbb
lds
gs
sahf
fdivrl
lods
cmc
sbb
and
clc
xor
pop
push
mov
lahf
dec
adc
push
and
movsb
pop
in
jnp
add
dec
ret
fsub
pusha
inc
mov
jb
fiadds
xor
inc
sub
notb
aad
scas
dec
push
inc
mov
and
fsubrl
inc
repnz
or
ss
pop
ror
push
icebp
add
hlt
fildl
sbb
xor
inc
sarb
lods
mov
inc
pop
xor
stos
aad
adc
stc
cmp
maxps
mov
mov
shlb
scas
pop
imul
das
ljmp
fdiv
xchg
xchg
std
push
fdivr
std
test
or
je
push
xchg
lds
pop
leave
leave
mov
enter
nop
or
popf
push
je
push
xchg
outsb
fst
les
jae
in
cmp
jl
lret
push
subb
xor
les
fs
into
ljmp
ljmp
out
call
loop
out
inc
push
popf
adc
jp
repnz
adc
mov
aas
pop
pop
adc
push
int
cmp
cmp
dec
pop
mov
xlat
mov
push
stc
imul
inc
dec
sbb
fcomps
fiaddl
adcb
and
nop
test
ret
in
ret
mov
call
add
bound
test
mov
or
addl
shl
xchg
push
adc
mov
out
mov
out
jecxz
ret
lea
out
popf
mov
mov
insl
pusha
xor
popa
push
cmpsl
push
mov
dec
pop
dec
dec
jb
orl
cmp
jg
cli
mov
shl
xchg
stc
sbb
xchg
xlat
pop
sahf
sbb
sahf
jg
sbb
xor
fnstsw
jo
push
sub
xchg
add
or
rsm
mov
std
iret
sbb
cltd
inc
mov
stos
xlat
dec
pushf
jle
mov
rorl
popa
jo
test
pop
mov
mov
test
lahf
outsb
fidivrs
cld
cmpsb
cmp
std
mov
cmp
popa
or
scas
nop
lods
push
dec
stos
xchg
cmp
fmulp
mov
bound
push
cmp
ret
push
ret
adc
repnz
jae
ss
jo
lock
in
aad
adc
or
xor
add
loopne
cmp
cmp
adcb
sbb
mov
pop
test
jae
push
xchg
mov
pop
stc
test
sbb
inc
sbb
sub
jae
xor
bound
test
jge
jle
testb
mov
enter
outsl
sbb
sbb
jmp
mov
jne
jg
mov
jnp
inc
pushf
xchg
sub
rol
mov
ljmp
xor
adc
push
jle
dec
cmc
or
adc
and
xchg
pop
and
rorl
enter
lret
movsb
push
out
push
iret
orb
sbb
in
daa
jae
xchg
mov
jno
cltd
repz
add
fstps
and
ret
ret
xchg
insl
adc
jecxz
or
push
mov
sbb
push
loopne
rcll
dec
repnz
or
pop
and
clc
les
mov
subb
out
addl
inc
push
xchg
xor
test
ljmp
loope
vmovmskpd
mov
dec
dec
and
adc
addr16
stc
push
imul
mov
rolb
mov
out
jae
and
pop
jns
test
and
xchg
xchg
cmp
lea
pop
inc
call
xor
loopne
add
das
outsl
insb
jns
lahf
scas
mov
pusha
orb
inc
pusha
cs
iret
cmpsl
add
add
push
jo
cwtl
out
dec
sti
mov
cmpsl
lea
aaa
popa
xor
sbb
ret
rorl
fisttpl
or
inc
ret
popa
mov
ret
dec
or
loop
inc
pop
add
mov
jne
fldl
outsb
test
push
dec
sub
ja
mov
arpl
inc
jmp
cs
push
int3
fnstcw
rorb
lahf
enter
push
cmpb
add
sub
pop
xor
fidivl
xor
inc
in
sbb
int3
push
aad
aaa
add
scas
mov
dec
and
sbb
neg
sub
movl
psubusb
outsl
inc
repnz
movsb
loopne
roll
clc
mov
es
push
je
pop
mov
dec
mov
ss
ss
out
pop
shrl
mov
cld
mov
jmp
dec
mov
int
inc
out
inc
ret
pusha
mov
inc
adc
jg
sub
scas
addr16
dec
dec
daa
mov
lcall
out
mov
mov
mov
pushl
mov
stos
fsubrs
bound
xor
test
or
add
sbb
mov
jae
insb
in
jb
mov
cli
test
xchg
add
xor
jnp
xchg
lret
and
or
inc
std
fildll
outsl
lret
enter
test
mov
fsubs
fwait
pop
adc
lea
lcall
mov
jb
inc
aam
daa
and
push
mov
push
mov
jg
lret
pop
repnz
iret
out
arpl
dec
insw
pop
fldcw
aam
pop
push
mov
divb
push
or
pop
push
fnsave
movb
and
in
movb
or
jb
popf
pop
push
push
iret
jb
cmp
adc
mov
push
stc
aas
dec
xlat
shll
push
push
idivl
adc
cmp
jl
roll
xchg
stos
shlb
cmp
fucomp
pop
into
cmp
sbb
or
lret
ja
jns
mov
mov
or
sbb
clc
sbb
mov
cmp
insl
push
add
jno
scas
sub
stos
dec
xor
out
repz
popf
jno
loope
stc
in
shrb
dec
shl
mov
lea
sub
fs
addr16
push
jle
jmp
mov
cmpsl
adc
push
mov
push
pop
or
jg
mov
and
loope
testb
sbb
xchg
sahf
pop
inc
ss
or
push
or
cs
add
cmpsl
pop
cmpb
shr
push
imul
adc
js
jbe
aad
pop
je
imul
or
mov
or
push
daa
adc
dec
andb
loop
cmpsl
push
xor
shl
push
shlb
fsub
mov
jns
das
insl
icebp
repnz
jae
mov
in
cltd
repnz
cmp
ljmp
sub
into
add
sbb
xor
lcall
int
xor
lahf
sub
rorb
pusha
lahf
jge
cmp
and
xchg
inc
xchg
scas
mov
aas
push
imulb
cmpsl
mov
jecxz
jno
lock
inc
fs
jb
cmp
push
mov
adc
mov
or
jae
repnz
ds
ss
test
lcall
shlb
add
les
and
aas
xor
cli
mov
rcll
jnp
faddl
lret
jecxz
jp
fildl
dec
iret
rcr
stos
push
sbb
std
sub
mov
in
ret
push
cmp
popf
stos
lds
dec
sti
aam
cmpsl
in
lret
lret
mov
push
std
xlat
mov
movsl
and
jg
cld
fnsave
lock
jbe
add
enter
inc
test
cmpsb
fstpl
loopne
and
mov
jl
inc
sbb
adc
aas
cmp
mov
ficoms
test
dec
out
test
mov
leave
std
mov
in
lds
lods
pop
mov
aam
test
push
push
pop
sub
popf
sti
cmp
inc
jmp
test
in
add
add
jg
sub
call
pop
adc
shl
iret
lods
imulb
and
sahf
test
rorl
das
aas
enter
xchg
jno
push
add
cmovnp
stc
add
je
xor
add
cld
xor
dec
outsb
mov
shl
ficompl
pop
cmp
mov
add
mov
shll
add
sti
jnp
lcall
out
testl
mov
outsl
dec
jg
xor
cmpsl
mov
aas
xchg
imulb
andl
jp
mov
fwait
arpl
mov
dec
stos
xchg
push
mov
push
cmp
dec
stc
mov
out
push
sbb
test
xchg
nop
and
push
das
mov
push
les
jge
fsubl
mov
and
push
outsb
xlat
ret
sub
xor
mov
rorb
add
test
dec
add
testl
loopne
das
hlt
lods
lock
jl
aam
add
mov
icebp
inc
mov
pushf
dec
hlt
lahf
adc
lcall
pop
jbe
and
xchg
out
mov
andb
stos
sub
xchg
pop
dec
cmp
xor
loopne
pop
adc
insl
gs
mov
inc
sbb
loope
jle
out
test
adc
loope
insb
gs
lcall
paddusb
loop
sub
ljmp
inc
mov
icebp
jns
inc
lds
rolb
shrb
push
int
adc
cmc
inc
sti
mov
dec
push
aad
mov
push
adc
pop
inc
xor
jmp
out
mov
shr
daa
push
cmp
jl
pop
add
or
enter
mov
jns
mov
cmp
push
outsb
pop
mov
mov
scas
sub
rol
into
jne
and
fisttpll
sbb
je
lahf
fstpt
xchg
mov
daa
out
xchg
sbb
mov
rolb
xchg
rol
fdivs
xor
inc
cmp
jo
stos
add
test
repz
mov
out
std
gs
call
sbb
inc
sbb
shll
xchg
push
sub
inc
or
xor
cs
pop
inc
lock
xchg
jmp
popf
inc
mov
in
cmp
xor
adc
imull
add
jle
jmp
loope
mov
xlat
or
pop
cs
adc
mov
imul
dec
lods
std
movsl
cltd
aas
xchg
int3
mulb
sub
pop
push
mov
repnz
xor
adc
lods
rcll
mov
movsb
mov
movsl
adc
add
pop
rcll
scas
mov
mov
ret
lret
sub
pop
fisubl
cmp
fdivl
push
outsb
es
movsb
add
jg
mov
rorb
pop
scas
imul
andl
insb
mov
push
or
stos
repz
jns
loopne
pop
shrl
adc
mov
pop
inc
and
xor
loopne
xor
fstpl
je
insl
mov
ror
imul
loopne
cmp
xor
xor
loopne
cmp
dec
add
sti
icebp
les
icebp
jge
xchg
mov
arpl
mov
pop
sahf
les
mov
sarl
add
jl
fmuls
xchg
cltd
test
repnz
add
es
leave
fwait
jp
inc
jle
push
xchg
push
add
inc
mov
mov
fwait
cmp
cmp
test
jno
pop
adc
je
dec
cmp
repnz
loopew
dec
aam
mov
xchg
pop
mov
cmc
pop
sub
test
xchg
and
int
push
pushf
int3
into
aam
ds
aad
mov
lret
loope
pop
or
mov
imul
cs
stc
aas
mov
xor
sbb
les
sti
jno
fcomps
sub
testl
mov
add
sarl
adc
adc
je
jno
sub
mov
adc
loopne
mov
pushf
sbb
sti
movsb
or
mov
scas
push
daa
or
mov
loopne
push
push
jp
hlt
mov
pop
push
and
push
scas
je
mulb
jbe
push
pop
jge
shlb
je
mov
xchg
nop
mov
lret
addr16
ret
sbbl
out
inc
outsl
outsb
ja
cmp
ljmp
nop
mov
jnp
mov
push
addl
mov
jnp
bound
cmp
mov
cli
push
add
icebp
inc
lock
in
mov
push
push
and
fisubrl
adcl
xor
loopne
pushf
add
xchg
imul
sahf
int3
ret
icebp
push
cmp
adc
imul
cmp
and
xor
mov
push
adc
xchg
cmp
push
mov
hlt
lea
mov
lcall
xchg
and
cmp
sbb
adc
das
dec
jb
bound
pushf
inc
int
adc
and
jb
mov
xchg
mov
jnp
cli
nop
adc
pop
stos
repnz
into
and
cmp
pop
adc
ja
jbe
rcl
loope
test
adc
mov
sub
loope
mov
and
push
jbe
pop
mov
jae
pop
xor
fnstenv
aam
gs
enter
scas
jle
xor
lods
stc
cmp
fisubrs
pop
adc
dec
rcl
mov
sub
rcrb
cmp
sub
pop
jge
push
jae
push
imull
jge
jae
push
int3
cltd
pop
xchg
cli
cmp
pop
movsl
push
mov
push
daa
ja
in
pusha
cmp
pop
push
pop
add
pop
cmc
lcall
jae
setns
mov
pop
or
fsts
andb
test
pcmpeqd
push
xchg
int
add
sub
ficomps
mov
dec
in
dec
mov
xor
enter
es
cmpsb
sub
mov
add
jle
movsb
sub
pushf
cs
in
sti
push
add
or
mov
jnp,pn
dec
xor
insl
loop
fs
mov
in
test
mov
add
shll
xor
bound
mov
data16
sbb
jno
mov
mov
lret
ds
mov
mov
mov
adc
mov
push
es
shrb
push
in
dec
jo
insb
movsb
dec
jl
and
ja
sbb
or
outsb
andl
sbb
sti
sub
out
call
clc
icebp
mov
mov
fldcw
cmpsl
mov
and
jne
mov
xor
aaa
mov
inc
add
lds
mov
dec
movsb
push
mov
mov
push
out
in
push
cmp
or
sahf
mov
fucom
lock
mov
push
shl
push
xor
or
loopne
rclb
xchg
or
and
inc
mov
sbb
jb
ds
int
push
imul
cltd
jbe
fucomi
push
in
lods
jecxz
mov
xchg
or
cli
stos
aas
aam
jnp
mov
xchg
jl
mov
cs
cwtl
mov
dec
dec
adc
fsubrs
clc
ffree
es
out
jnp
fdivrl
jecxz
jmp
lock
mov
pusha
lods
jbe
pop
push
js
cs
outsl
enter
shll
int3
cltd
inc
pop
xor
in
addr16
fmul
cwtl
add
push
inc
lahf
and
in
pop
rorl
add
scas
nop
sub
cmpsb
jle
add
in
loop
rclb
ljmp
and
lret
or
mov
ror
popa
mov
hlt
mov
pop
lea
into
or
add
add
test
adc
bound
iret
dec
mov
adc
loope
js
sbb
xchg
mov
stc
add
mov
inc
rorb
mov
push
cltd
mov
lahf
and
xlat
lock
mov
mov
leave
divl
xchg
add
xor
std
mov
cmp
cld
dec
in
xor
adc
and
add
pop
push
or
cmp
out
stos
int
fcoms
lcall
dec
aas
lock
repz
imul
sub
cmp
neg
mov
add
dec
lock
sbb
xlat
dec
jbe
arpl
lods
das
push
icebp
dec
lret
mov
cmpsb
sti
push
int3
call
ljmp
push
lret
das
inc
les
xchg
nop
dec
popf
push
xor
inc
jmp
mov
cmp
aas
dec
cmc
add
cmp
jmp
out
test
pop
cmp
adc
sarl
ret
call
loopne
xchg
repz
sbbl
inc
push
and
jp
lahf
sbb
xor
adc
xchg
mov
jo
inc
ds
xor
cs
popf
mov
xor
rorb
xchg
push
cmp
pusha
aad
ss
add
fs
stc
adc
cmp
cmpsb
push
push
mov
icebp
add
adc
mov
xchg
jge
dec
stos
in
pop
ret
repz
ret
or
ror
mov
leave
mov
mov
jo
xchg
dec
cltd
ds
scas
pushf
cmp
pop
dec
adc
mov
movsb
imul
mov
pxor
pop
es
pop
xchg
mov
sub
mov
mov
inc
or
and
call
push
adc
mov
lds
xor
sub
jno
and
mov
iret
pop
xor
les
stos
push
cmp
arpl
cli
sub
push
into
push
push
mov
in
lret
pop
js
outsl
imul
gs
mov
or
ss
shll
dec
jle,pn
stos
js
sbb
hlt
movsl
push
sbb
or
jmp
push
mov
cmp
inc
jae,pn
daa
ja
xchg
pushf
dec
andb
mov
adc
push
sbb
dec
pop
test
ljmp
es
jns
pop
mov
andl
xor
cltd
rcl
lds
lea
sbb
cs
das
scas
fs
repnz
sub
cmpsl
push
or
loope
dec
je
aad
add
or
inc
lods
cmpsl
or
pusha
repz
or
mov
test
bound
leave
cwtl
mov
push
ljmp
push
and
jno
mov
pop
pop
or
fisttpll
and
cmp
inc
push
fiadds
adc
sub
movsl
mov
dec
in
shrl
shll
stc
sub
popa
adc
add
les
dec
in
inc
and
out
jp
pop
or
mov
leave
mov
test
leave
sbb
push
test
adc
lods
pop
sbb
jecxz
xor
add
test
push
mov
sub
jg
adc
movsb
adc
xor
fnstsw
psrlw
ljmp
insb
rcrb
jl
scas
sub
decl
imul
and
dec
adc
loopne
mov
pop
jnp
aad
jns
popa
jecxz
pop
test
mov
push
lahf
mov
sbb
mov
jle
daa
sbbb
call
imul
inc
mov
adc
mov
mov
incb
lods
clc
outsb
push
or
jmp
rep
rcr
adc
mov
pop
popa
aaa
cltd
rorb
jno
mov
in
scas
dec
lea
dec
add
fs
dec
push
cwtl
out
and
scas
notl
subl
sarb
mov
gs
fnstsw
mov
inc
and
mov
dec
enter
shrb
xor
imul
enter
mov
mov
jne
mov
imul
push
sub
add
jp
dec
movb
xor
pushf
in
ret
cmc
jo
popa
mov
mov
xor
xchg
xor
lock
sbb
std
andl
rcrl
mov
push
call
jmp
push
jmp
cmp
push
xor
addr16
es
mov
inc
xchg
inc
insb
fcompl
shll
lock
pop
mov
xor
mov
nop
in
cmp
bound
fmulp
insl
cmp
imul
adc
in
leavew
mov
or
aam
jmp
call
andl
dec
xor
sub
notb
pop
add
pop
sub
sbb
test
add
pop
lret
shrd
jmp
jmp
lret
or
or
cwtl
into
dec
pop
adc
push
inc
popf
or
mov
pop
out
jno
xchg
js
sbbb
sub
add
push
sbb
dec
in
inc
xchg
test
rorb
pop
pop
aad
mov
mov
and
mov
xchg
jl
adc
mov
and
pop
mov
out
xor
xor
add
lods
mov
in
sbb
sbb
sub
add
call
jbe
push
gs
sub
fs
cmp
sub
push
test
cmp
xchg
xchg
mov
mov
sbb
repz
ja
sub
loope
scas
ljmp
add
sbb
clc
repnz
bound
or
mov
and
iret
inc
lds
xor
adc
push
lahf
mov
negl
jmp
push
push
inc
xchg
push
mov
mov
outsb
mov
adc
neg
fcomps
lods
pop
fidivl
lahf
pop
fld
jle
movlhps
adc
sub
jne
imul
fbstp
aam
cmp
outsl
ljmp
icebp
fisubs
fcoml
mov
xchg
mov
dec
rcrb
into
or
xchg
es
pop
dec
pop
jns
jmp
je
mov
mov
mov
sbb
adc
inc
push
mov
dec
mov
dec
mov
aas
sar
and
movsb
lods
pop
scas
lods
add
xchg
insl
fsubrl
shl
jecxz
push
dec
out
fmuls
xchg
movsb
loopne
outsb
ja
mov
dec
xor
pop
in
into
popa
add
pusha
push
idiv
ja
out
imull
daa
addr16
pop
fildll
mov
jno
sub
cmp
scas
mov
pop
cld
inc
xchg
loope
adc
inc
mov
push
insl
lea
fidivrs
ret
sahf
inc
inc
mov
mov
inc
fadd
mov
pop
popa
call
pop
or
bound
leave
dec
pop
add
xorb
cmp
or
pop
mov
aas
add
nop
push
lods
inc
fsubl
dec
dec
xchg
cli
xor
sbb
jp
call
mov
movsl
cmpsl
dec
hlt
xchg
xor
jmp
and
mov
mov
inc
popf
les
aad
cmp
pop
jecxz
faddl
fadd
pop
inc
loop
pop
xchg
ret
test
inc
popa
sti
pop
mov
xlat
inc
iret
xchg
es
pop
repnz
mov
jecxz
lgs
mov
inc
cmp
daa
fsin
pop
inc
out
bound
add
mov
mov
pop
adc
cmp
ret
add
addr16
and
in
mov
imul
or
and
lods
lret
mov
inc
sub
int
xor
shl
xor
mov
jp
jecxz
sub
dec
jae
jae
sarl
sub
pushf
orl
test
ffree
cmpsl
jno
aas
in
sub
pusha
pop
fucomi
dec
pop
pop
cmp
push
mov
dec
push
insb
sub
scas
stos
mov
sub
inc
sub
hlt
cmpb
cmpsl
mov
leave
sub
sub
std
push
jg
push
jl
insl
mov
cmp
add
vpmaxsb
xor
popl
mov
lods
icebp
ljmp
xchg
add
mov
mov
pop
jg
shl
dec
xor
mov
fistl
adc
sti
jb
scas
add
push
mov
add
jg
and
push
add
in
sbb
xor
mov
iret
sub
or
les
imull
nop
jmp
ljmp
imul
call
fcompl
add
inc
mov
dec
xlat
and
shll
rolb
ret
jo
or
inc
mov
pop
cmpl
aam
out
push
out
xchg
push
cs
jb
mov
orb
cmpsl
mov
or
xchg
lods
hlt
scas
jns
jmp
ss
scas
mov
xor
add
cltd
mov
lods
sbb
dec
std
icebp
jge
cmp
inc
dec
push
mov
or
sub
mov
ds
inc
xor
mov
cwtl
mov
insb
xchg
mov
push
mov
sbb
dec
pop
jg
pop
aad
bound
mov
icebp
lods
fs
push
adc
rcrl
jmp
add
outsl
mov
and
scas
sbb
push
ret
pop
mov
pop
sub
fstps
movsl
les
add
jmp
xor
fsubl
test
insb
divb
mov
in
mov
bound
into
add
fld1
jp
fistl
ret
dec
addps
mov
xchg
ss
outsb
pop
out
insb
pop
inc
jns
pop
pop
imul
adc
and
pop
cmp
rorb
push
push
call
mov
imul
or
ret
leave
mov
jecxz
pop
mov
stc
or
insl
pop
ret
mov
cmp
arpl
filds
popa
fwait
pop
push
pop
cmp
push
fdivr
xchg
push
dec
test
jecxz
inc
xor
shr
cmp
sub
xchg
shll
sub
aaa
clc
dec
lret
ljmp
rcrl
or
mov
lds
aaa
xchg
ret
aad
addl
es
jl
push
insl
sub
aam
xchg
ja
xorb
and
clc
rclb
sub
cmpb
imul
adc
dec
sub
xchg
mov
add
cmp
orb
shll
call
fisubs
in
sbb
cmp
push
pushf
call
sahf
cmp
lods
adc
out
outsl
stos
xor
scas
std
outsb
insl
mov
or
push
ficoms
push
push
iret
pop
sbb
sub
jp
jne
xchg
push
sarb
ljmp
adc
jbe,pt
jnp
mov
fldcw
inc
cmp
xchg
lock
test
jecxz
mov
jecxz
dec
aaa
test
and
sarl
dec
push
lock
push
out
imul
cwtl
fldl
pop
mov
icebp
mov
jns
fbstp
shlb
in
pop
mov
sbb
popf
mov
popa
lea
mull
inc
ljmp
adc
mov
inc
adc
xchg
mov
movsl
push
ljmp
xor
sti
inc
pop
mov
dec
outsb
sar
div
pop
loopne
rcr
jecxz
push
jge
mov
fdivrs
mov
mov
xchg
pop
nop
imul
iret
jp
xlat
enter
arpl
test
pop
sub
xchg
adc
scas
mov
add
mov
pop
das
jle
sbb
test
aaa
sahf
sahf
stos
ret
mov
xor
lods
repz
iret
int
int3
test
fdivs
xchg
sbbl
scas
sub
and
jg
xor
out
sar
push
subb
fwait
ljmp
xlat
scas
aaa
inc
fisttpl
nop
fildl
out
jecxz
add
push
push
cwtl
out
imul
mov
hlt
ljmp
loopne
pop
in
xchg
les
nop
dec
fbstp
adc
popf
fs
lret
mov
and
daa
push
jge
or
cmp
test
push
push
outsb
xchg
jg
ljmp
dec
xor
dec
shll
or
cmp
sub
lret
cmp
mov
rcrl
dec
je
cli
sub
cmpsl
out
xchg
mov
mov
or
fs
adc
pop
lahf
mov
ficoml
sahf
cmp
jmp
sarb
or
lds
cmpsb
aam
pop
faddl
or
push
xchg
mov
aad
xor
xchg
gs
pop
popf
mov
ljmp
ljmp
adc
stos
clc
mov
push
dec
jb
sub
jmp
lret
out
in
fucomip
aaa
mov
jne
leave
icebp
adcb
mov
filds
mov
pop
test
push
cwtl
in
xor
cmpsb
xchg
sbb
ljmp
pop
mov
pop
mov
mov
adc
js
repnz
sub
cmpsb
hlt
cltd
push
fs
test
popa
enter
jae
mov
sbb
xchg
cmc
dec
sti
push
inc
lahf
pop
icebp
ret
jbe
ljmp
xchg
jg
inc
pop
jmp
mov
and
fs
inc
mov
mov
lcall
iret
lea
ret
testl
dec
lcall
popf
and
arpl
lcall
pop
mov
mov
mov
adc
aad
das
imul
lods
cmp
lods
je
mov
inc
hlt
and
fdivrp
mov
idiv
arpl
cmpsb
jno
add
lcall
movsl
orl
jno
jns
cmpsb
and
out
loope
mov
add
test
hlt
test
repnz
pop
mov
jg
imul
arpl
push
in
test
incl
xor
inc
push
jecxz
xchg
mov
adc
and
xor
mov
xor
adc
stc
cmp
divl
xchg
sub
and
pop
mov
xchg
in
mov
idiv
adc
iretw
sub
daa
ffreep
jp
mov
push
sbb
rcrb
cmp
dec
or
rcrl
in
movsb
sarb
or
adc
insl
imul
mov
xchg
lahf
xchg
mov
shll
xchg
xlat
xor
ret
xchg
adc
pop
inc
out
rcrl
jge
xor
bound
roll
les
lds
mov
cld
fistps
imul
stc
test
sub
inc
add
gs
push
orl
mov
pop
cmp
and
out
adc
or
subb
or
cmpsb
xchg
or
daa
frstor
add
jo
cmp
xlat
mov
adcl
pop
cmp
mov
jne
fsubrl
loop
cld
sbb
in
xor
jl
push
cmpsb
adcb
ja
mov
add
aaa
mov
dec
movb
jno
pop
stc
push
les
iret
ljmp
mov
das
mov
cltd
cmp
mov
leave
addl
mov
in
je
insl
cltd
cwtl
add
and
push
sub
rcr
incl
mov
cwtl
inc
sbb
hlt
movl
lds
xor
inc
pcmpeqw
mov
cmp
aas
inc
repz
xor
outsl
subb
xor
movsb
lods
sub
mov
push
adc
fldenv
int3
cmpsl
pop
push
sub
test
out
aas
or
inc
jg
fstpl
outsb
aad
adc
outsb
add
add
lea
xchg
push
xchg
test
int3
ljmp
js
addr16
sub
xchg
loop
jne
mov
jle
mov
mov
loopne
mov
js
mov
popa
adc
xor
xlat
fidivl
or
jge
mov
xchg
dec
neg
push
lods
xor
icebp
mov
fistl
xchg
push
fsub
lods
jp
mov
cli
fldenv
gs
jle
xor
add
call
ss
pop
lods
into
orb
sub
ljmp
jo
jbe
xchg
or
add
fidivl
jge
sti
popf
mov
out
cmp
insb
jle
mov
shlb
mov
sbb
cs
pop
cs
adc
mov
lods
int3
adc
mov
int
ds
jns
cwtl
mov
loopne
mov
mov
ja
aas
loopne
xor
add
pop
popa
mov
outsl
insb
or
adc
jmpw
mov
dec
test
bound
movsb
mov
rcll
mov
add
out
lret
sub
sahf
dec
imul
pop
cmp
shlb
and
jg
pop
cld
jge
arpl
cmp
je
mov
inc
jecxz
xor
in
adc
cmp
inc
pop
add
mov
sbb
cmpsb
mov
jmp
mov
or
xchg
push
negb
sub
cli
pop
ds
icebp
fidivs
sbb
sbb
mov
cltd
mov
push
xor
or
push
aas
mov
lret
fwait
lea
cmpsb
out
shrl
jg
xchg
std
lock
pop
xchg
shll
cmp
je
repnz
rcrl
mov
adc
inc
jnp
sub
xchg
in
jnp
sub
popf
cmp
push
or
mov
sbb
push
and
push
adc
js
fidivl
scas
add
mov
mov
iret
sar
ret
inc
xor
les
jge
dec
icebp
xchg
cmp
in
cmp
adc
test
outsl
sub
jecxz
sub
and
inc
push
ds
cmp
ret
mov
xorl
mov
lds
push
cmc
xchg
fldcw
cmp
std
fisubrs
inc
sub
flds
mov
xchg
jmp
subl
xor
and
pop
repz
mov
fs
adc
lahf
cmpsl
sub
in
adc
rcrl
test
nop
pop
xor
mov
enter
jnp
mov
add
mov
nop
push
xorb
cwtl
and
dec
adc
pop
pop
test
lods
inc
mov
xlat
mov
mov
cmp
punpcklwd
push
sub
or
mov
les
jmp
popf
enter
leave
and
xchg
popl
loop
adc
inc
into
lcall
pop
orl
push
test
lods
mov
xchg
and
stos
repnz
pusha
xchg
mov
inc
mov
idivb
stos
push
jo
popf
or
mov
xor
outsb
lcall
inc
xchg
nop
sbb
insl
fistpl
repz
pop
in
jbe
jge
jg
fiadds
jmp
and
sti
add
mov
int
pushf
cmp
ret
fcoms
lods
in
inc
outsb
jno
test
cmc
and
icebp
stc
push
insl
lcall
in
push
cld
or
and
mov
out
orb
mov
je
add
stos
jle
mov
sbb
or
mov
enter
popf
xor
js
aad
mov
iret
cs
or
and
and
inc
rcl
xor
je
mov
pop
imul
fbstp
mov
popf
arpl
mov
int3
xor
jno
cmp
leave
pop
jne
sarb
xchg
or
xor
and
jno
rorb
repz
mov
js
leave
ds
sbb
or
xchg
pop
lret
mov
arpl
movsl
cwtl
xchg
cmp
cmp
mov
adc
cmp
push
leave
call
fildll
loop
insl
dec
inc
push
cmpsb
fbstp
rorl
popf
mov
jmp
fimull
mov
imul
adc
mov
mov
cmc
mov
adc
adc
xchg
dec
fsubr
mov
cltd
cs
aad
mov
or
pusha
stos
jp
adc
and
out
stos
dec
addb
xchg
outsl
jns
insb
and
mov
xor
cld
lahf
lods
inc
and
sbb
mov
mov
or
addb
adc
mov
mov
cmpsb
fiaddl
jae
lods
pop
out
lret
popf
fninit
inc
pop
inc
getsec
popf
mov
popw
and
adc
bound
ja
xor
cmp
or
sahf
out
loope
jecxz
fdivrs
es
sub
test
mov
dec
bound
inc
int3
aaa
scas
xchg
inc
jns
int3
pushf
pop
das
cmp
enter
test
stos
in
push
dec
repz
mov
cwtl
js
cld
add
pop
cs
rcll
xor
ds
inc
mov
dec
test
test
ror
sbb
shl
sbb
xor
test
push
fcoml
das
daa
push
fidivrs
test
xchg
sti
lahf
jmp
leave
aas
mov
or
pushf
and
pop
cli
pop
addb
push
push
jmp
jne
sbb
sbb
or
mov
loope
mov
push
mov
inc
jecxz
leave
in
in
push
test
inc
subb
mov
push
hlt
andl
test
jbe
xlat
mov
dec
xor
cmp
or
cli
movl
pop
mov
sub
out
sbb
sub
sub
jno
push
jge
cmp
mov
fstpt
xor
inc
ret
popa
push
mov
inc
cmp
cmp
and
jle
mov
mov
mov
lds
push
aam
shrl
outsl
mov
cltd
mov
rcrl
scas
movsl
inc
push
cs
mov
int
or
lret
subb
add
sub
dec
adc
dec
fs
add
loope
cmp
in
lea
push
cmp
push
clc
lret
xor
jns
movsl
or
daa
jbe
cli
faddl
repz
lods
outsb
in
jecxz
push
jae
mov
xor
push
cwtl
fwait
cmp
imul
dec
fcoml
imulb
std
mov
shr
adc
imul
dec
jmp
imul
ss
fstl
xorl
xchg
cwtl
cli
fwait
repz
stc
push
leave
add
les
insb
das
mov
pop
mov
and
das
in
mov
jne
out
outsl
ja
orb
leave
mov
pop
fimuls
jle
jne
lcall
repz
in
fsubl
cmp
mov
ret
push
push
ret
aas
mov
cwtl
pusha
push
mov
in
xor
cmpb
mov
movsl
xchg
jg
add
add
int3
rolb
fisttpl
pop
ret
push
ds
push
mov
dec
jp
stos
scas
cmp
lock
jecxz
mov
jp
mov
add
jns
pushf
imul
cmpsb
imulb
mov
dec
mov
pop
adc
sub
out
jb
add
in
push
imull
call
cli
cmovns
adc
inc
or
sti
fiaddl
jg
cmp
lds
xor
arpl
divb
pop
lods
mov
pop
xor
jp
cmp
jb
mov
ret
jbe
nop
push
jb
sub
cmpsl
jl
fidivrl
call
xchg
xor
jae
sti
rolb
aad
movq
lret
mov
xchg
out
jmp
sti
mov
fadds
pop
push
cmp
jle
inc
cpuid
inc
inc
adc
notb
icebp
fldcw
rcrl
pop
push
repnz
cli
pop
cwtl
inc
or
mov
inc
aad
lret
pop
idivl
ja
sub
xor
cmp
push
data16
nop
sbb
iret
in
hlt
fnsave
mov
ret
js
jge
out
sarb
aas
scas
mov
call
nop
cltd
mov
mov
pop
mov
mov
stc
sti
aaa
dec
adc
inc
inc
xlat
cmp
outsb
lods
and
repnz
sti
xchg
imul
in
ds
pop
je
push
aam
lock
mov
mov
aas
cmp
inc
jno
jne,pt
leave
push
jp
lea
cmpsl
adc
sbb
scas
insl
popf
aaa
decl
ds
mov
popa
mov
fildl
mov
xchg
stc
aaa
or
scas
mov
lock
sbb
aas
cli
mov
faddp
push
jle
push
cmp
and
push
and
cld
fucomp
jge
das
repnz
aad
loopne
mov
test
or
mov
lds
cmpsb
ret
enter
sub
or
xlat
xlat
fidivrs
mov
popf
xchg
and
lret
fs
pop
pop
mov
fucomi
leave
and
cmp
push
ja
inc
pop
pushf
sbb
lds
mov
ljmp
xchg
cmp
ret
and
push
jl
outsl
outsl
xorl
call
cmp
add
and
enter
loop
shlb
faddp
mov
ja
sti
jnp
xor
add
mov
fwait
adc
addr16
ret
mov
aaa
lret
popf
fdivl
cmpsl
lahf
cltd
pop
push
sub
and
xor
push
and
mov
mov
loopnew
cmp
sti
xchg
xor
cltd
mov
je
jmp
sbb
dec
jb
xor
popa
aaa
push
fisubs
and
mov
push
popf
adc
movsl
mov
das
test
sti
int3
int
cmc
pop
fwait
mov
mov
sbb
xchg
jg
dec
sub
xor
leave
arpl
mov
int3
push
lock
mov
popa
xor
lahf
decl
cmp
test
js
movsl
iret
shll
stos
dec
mov
icebp
aaa
lea
sti
nop
mov
pop
hlt
xor
js
jmp
les
cmp
add
xchg
pop
add
int
iret
sbb
rcrl
or
lods
push
ret
and
or
repnz
out
fs
inc
jae
fsubr
or
stos
daa
add
mov
test
sbb
mov
cmp
xlat
pop
push
insb
int3
sub
and
jno
sbb
xchg
push
jmp
addr16
sbb
lods
push
and
mov
fstpt
and
adc
xchg
push
in
iret
push
rcrl
out
mov
sahf
loopne
test
out
mov
gs
inc
das
push
scas
inc
inc
cmpsl
aas
aas
sub
xor
jmp
xor
push
call
push
ficompl
and
inc
pop
sub
jo
lret
lahf
dec
cld
les
jbe
shll
mov
ret
shll
cmpsb
sub
jno
pop
lret
jne
and
jae
cmp
jecxz
scas
xchg
push
aas
sub
lcall
cld
ss
mov
out
dec
pop
cmc
or
icebp
je
repz
lret
mov
push
pop
loopne
or
lods
bound
fisttpll
mov
pop
loopne
nop
repz
mov
jb
mov
in
leave
sbb
mov
dec
cwtl
movsb
das
call
jmp
xor
mov
pop
dec
mov
or
xor
cld
imul
jge
addl
test
mov
mov
mov
insl
dec
xchg
movsb
aas
jmp
or
addb
fadd
lahf
mov
and
cmp
add
push
jg
push
rcl
cwtl
stos
das
fldt
decb
mov
mov
jle
mov
jecxz
inc
xchg
cmpl
aam
ljmp
addb
inc
push
dec
int3
xchg
iret
sbb
stc
imul
sub
jbe
cmpsb
js
sub
push
or
in
jl
and
mov
xchg
cli
nop
mov
lret
or
addl
push
mov
pop
arpl
cmpb
pop
outsb
jne
pushf
jne
inc
mov
popa
int
dec
icebp
repz
inc
fldcw
inc
inc
lret
add
mov
jmp
adc
jmp
cmp
push
jnp
cmp
fisubrs
and
dec
jns
adc
mov
xchg
out
lea
push
fdivr
nop
lcall
ljmp
dec
add
fcoms
jle
lret
xor
call
popf
sub
push
out
push
out
push
dec
dec
imul
repz
cmp
jns
lock
cwtl
mov
popf
testb
pushf
aas
sub
xor
pop
les
inc
fcmovnbe
call
adc
popa
jns
inc
sub
cwtl
sbb
mov
add
jns
ja
mov
movsl
scas
scas
mov
dec
fistps
pop
push
pushf
std
fwait
jne
es
cmp
ret
sub
popa
test
leave
sbb
sub
fsubrp
xchg
stc
xchg
test
mov
xor
outsl
cmc
xor
sbb
or
lret
negb
fs
inc
in
inc
jmp
rolb
fldcw
data16
xchg
insl
dec
out
cmc
cmp
sub
dec
mov
iret
push
jecxz
pop
inc
cs
repz
xor
and
mov
jle
mov
mov
loopne
cmpsl
mov
lcall
testl
pushf
inc
mov
cwtl
dec
mov
jp
ret
lret
dec
cmp
lcall
cmp
sbb
dec
stos
mov
int3
ljmp
pop
xor
inc
mov
leave
and
scas
mov
add
stc
mov
jns
push
lret
dec
outsl
stos
ret
mov
mov
jo
push
sbb
xor
inc
jo
jge
mov
shl
cltd
jg
movsb
mov
icebp
inc
daa
lods
mov
not
les
in
ret
js
add
clc
sub
jno
sbb
cli
imul
stc
adc
je
push
push
es
push
out
mov
out
inc
iret
mov
call
aas
jb
mov
jns
and
shlb
outsl
test
push
and
popa
adc
ds
ret
popa
inc
and
xchg
dec
insb
fiaddl
fisttpl
loopne
aaa
icebp
fisttpl
pop
inc
and
xlat
jb
out
inc
cmp
ja
sbb
pop
sti
out
fiadds
or
sub
les
sbb
cmp
repnz
lcall
and
test
mov
insb
dec
xchg
cwtl
ficomps
hlt
adc
fsts
rcll
jp
jecxz
or
mov
repnz
adc
xor
inc
aas
add
pop
sti
mov
inc
xchg
insl
mov
addr16
add
or
in
lret
dec
dec
movb
mov
adc
enter
dec
xchg
std
aas
add
ret
fnstcw
push
cmp
sahf
mov
and
ss
outsl
test
cmp
daa
pop
stos
sub
cmpsb
decl
sahf
sarl
les
or
push
mov
insb
add
in
cmc
adc
jo
pop
xlat
push
mov
pop
or
jo
cmp
dec
aad
dec
pop
int
dec
fs
mov
in
xor
jg
cmc
mov
pushf
mov
sub
jb
out
mov
ret
mov
push
xchg
add
out
jb
in
sub
and
pusha
cmp
sub
cmp
lret
clc
push
ljmp
rcrb
sbb
push
cli
jle
add
xchg
push
cld
xor
lods
cmp
jp
xchg
in
lret
cltd
out
pop
gs
sub
lock
and
sbb
lods
or
jmp
adc
dec
pop
lcall
jbe
mov
fucomp
pop
jp
lods
dec
push
jmp
add
mov
call
pop
jge
ret
add
je
add
stos
dec
inc
cmpsl
and
mov
mov
aas
cmpsl
call
in
div
scas
sbb
fmull
lret
ss
cmc
cltd
test
pop
mov
mov
stos
mov
inc
stc
push
arpl
push
or
mov
and
lds
outsl
mov
cmpsl
push
pop
add
inc
or
mov
push
jmp
xchg
push
and
xor
dec
xor
mov
loop
sub
outsl
jge
xchg
or
jb
xor
stos
sahf
enter
lds
repz
bound
adc
ds
pop
bnd
shlb
push
loope
xchg
jg
push
ss
dec
shr
pop
push
jge
add
adc
leave
insl
loop
scas
leave
js
or
xor
adc
mov
dec
je
and
push
add
jnp
shrl
push
mov
cld
cmp
sbb
mov
lret
mov
aam
xadd
and
mov
and
aad
xlat
xchg
imull
rcll
add
scas
outsl
xorb
int3
and
enter
sub
insb
leave
popl
adc
loopne
push
lock
mov
sbb
scas
int
rcrl
loope
adc
or
xor
out
push
mov
push
sbb
and
iret
int3
jmp
fcmove
xchg
sti
dec
mov
dec
testb
fildll
push
sub
stos
dec
stc
negb
cwtl
push
or
mov
sbb
dec
mov
sbb
add
xchg
add
xchg
dec
pop
test
xchg
les
out
xor
pop
xor
mov
pop
mov
fcom
jp
xchg
jle
fdivl
lret
and
cmpsl
sbb
loop
loope
sbb
dec
jl
pop
cld
and
push
xor
push
fwait
jbe
cmp
mov
call
push
cmpsb
dec
jne
fiadds
jmp
fistpl
int3
adc
push
int3
and
xchg
fpatan
ja
insl
mov
mov
xor
fnstcw
add
rclb
dec
movsl
stc
cmpl
cli
add
aas
cmp
rorl
inc
shrl
sbb
lret
sub
in
cmp
flds
lea
sti
xor
cmp
roll
or
add
inc
in
adc
inc
xor
or
add
sub
jmp
jecxz
in
sbb
cmp
clc
cli
pop
sbb
push
adc
mov
rclb
jmp
dec
aaa
sub
add
pop
inc
jno
pop
pop
inc
das
addr16
pop
cs
jnp
mov
inc
pop
inc
cmp
sbbb
push
addr16
loop
jle
mov
stos
and
jnp
jne
test
adc
dec
sbb
sub
mull
int
cmpsb
add
add
xchg
ljmp
jle
push
stos
sbb
dec
mull
cmp
sub
or
adc
mov
lods
inc
jp
or
dec
cwtl
insl
mov
notl
sbb
stos
imul
dec
mov
pop
or
or
push
jmp
inc
lret
mov
ja
sahf
pop
sub
and
xchg
movsb
mov
inc
mov
mov
inc
dec
xchg
jbe
adc
out
in
inc
ljmp
mov
ds
push
jge
es
push
ja
sbb
pop
dec
cmp
dec
and
jmp
inc
add
mov
pop
je
sti
lret
cmpsl
adcl
outsb
pop
sub
lods
add
ljmp
je
mov
pop
cmpsl
and
push
fmul
lock
sub
out
inc
push
mov
dec
orl
xchg
mov
adc
mov
mov
sbb
pop
push
les
mov
inc
and
lods
mov
jmp
dec
adc
pop
gs
lods
test
jns
pop
adcl
jns
scas
jl
mov
outsl
dec
sbb
cmp
push
aas
xchg
fists
rcll
or
jge
jne
lods
leave
xor
add
jb
sbb
cld
insl
pop
inc
es
add
int
xor
push
in
insl
or
mov
fadds
jb
sub
jns
xadd
fmull
in
maxps
ds
js
cmp
mov
mov
gs
xor
fmuls
cmp
xchg
mov
sarb
lock
roll
pop
repnz
insb
push
cmp
sbb
fimuls
fidivrs
xor
fmul
adc
adc
outsl
into
sub
ret
into
inc
in
jg
jb
sbb
and
jmp
lret
lods
mov
arpl
mov
leave
mov
js
out
outsl
xchg
jnp
pop
jg
ffreep
rcll
mov
dec
iret
mov
pushf
pop
sbb
addr16
in
cli
mov
jbe
xlat
jno,pt
pusha
loop
test
jl
sub
hlt
loopne
push
outsb
pop
add
popf
mov
jnp
scas
adc
pop
add
rorb
call
stos
sar
pop
ror
inc
das
push
incb
push
mov
xor
sub
fdivs
pop
sub
lea
and
sub
aam
daa
jbe
repnz
push
imul
mov
jb
pop
in
call
popf
inc
aad
jmp
into
lds
sbbl
loopne
ja
xchg
ss
mov
js
aad
fcmovu
roll
stos
adc
mov
xchg
xchg
jecxz
push
add
mov
out
test
orb
aaa
fwait
inc
sahf
pusha
pop
add
push
fbstp
and
mov
shrb
sti
pop
rorb
mov
or
pop
fidivs
cmc
pop
test
movsl
incb
outsb
ficomps
sbb
mov
push
cmp
test
iret
adc
xor
in
adc
gs
mov
out
sub
and
add
add
jno
lods
mov
hlt
lods
or
inc
clc
inc
sbb
rcrb
add
leave
fiadds
sbbb
mov
movsl
mov
mov
fmuls
rolb
loopne
push
sbb
jmp
or
sbb
add
dec
lahf
leave
repz
mov
shll
sub
jge
pushf
dec
dec
sbb
cwtl
dec
jns
fwait
les
mov
sbb
in
mov
aad
cmc
outsl
jmp
dec
cmpsb
and
ds
mov
setg
lcall
or
outsb
std
into
in
mov
add
push
std
push
cmp
sub
dec
mov
xchg
push
addl
xchg
or
mov
jl
in
dec
push
xchg
out
jo
enter
das
lods
enter
jmp
ret
lret
jo
cmp
outsb
mov
jl
cwtl
jo
jae
pop
aaa
sahf
push
scas
fwait
ret
push
icebp
addr16
pop
add
dec
jmp
cmp
xor
lods
je
repz
jg
fsubl
loope
fcompl
push
shlb
hlt
bound
inc
movl
mov
inc
xor
sbb
jno
mov
push
pop
push
idivl
fs
mov
or
ljmp
sbb
inc
shlb
sahf
xchg
mov
popa
pusha
dec
shlb
imul
mov
scas
loopne
add
sahf
xchg
mov
mov
jge
addr16
stc
rcr
adc
insb
xor
rcrl
jle
pop
or
clc
push
leave
fmul
aas
cmpsb
or
adc
cmp
pop
pop
out
dec
jnp
jns
pusha
cmpsl
jb
insl
jns
mov
fildll
and
sub
sti
insl
mov
pop
aam
mov
xchg
mov
in
dec
mov
int3
data16
nop
shl
shll
inc
sub
jae
dec
pop
jge
jo
push
jp
frstor
sbbb
mov
or
adc
out
into
aad
loope
xor
mov
and
notl
pop
call
jge
pop
pushf
push
stos
cmp
out
insb
xchg
dec
mov
adc
and
les
mul
data16
lret
cmp
clc
lcall
jnp
int
sbb
je
inc
push
stc
in
lea
cmp
lret
add
ljmp
call
dec
dec
xor
aad
xchg
rolb
push
mov
adc
jne
cmp
dec
shr
daa
cmc
fstp
in
pop
mov
test
or
jne
lret
test
jge
divb
lds
inc
inc
xor
lods
cmpsl
rcrl
cmpsl
cmpsb
lcall
test
mov
std
lods
mov
jo
out
jno
js
aaa
lods
hlt
jmp
mov
fmull
or
rcrb
adc
shlb
aaa
sub
lret
adc
inc
lock
repnz
xchg
dec
sub
incl
xchg
test
ds
hlt
out
cli
jle
sub
add
inc
out
xor
mov
ja
sbb
push
lea
xchg
jnp
je
mov
loopne
sub
out
in
out
out
xchg
fisttpll
or
mov
lret
inc
outsl
ds
out
mov
sub
push
hlt
imul
loop
jg
fsubr
push
xchg
cmc
inc
xor
out
into
test
sahf
stc
dec
scas
insb
cmp
mov
mov
sub
jl
sbb
mov
daa
add
cli
cmp
jp
adc
loop
bound
arpl
aaa
clc
imul
cmpsl
loope
mov
ja
jae
mov
jne
js
jl
vcvtpd2psx
sub
adc
sbb
xor
loopne
jb
ds
bound
mov
test
ds
xor
cwtl
mov
aaa
stos
or
pop
inc
movsb
lds
xchg
sar
rclb
pop
insl
js
jle
xlat
pop
inc
push
and
into
cmp
lfs
jp
loopne
xorl
out
ss
test
cmp
subb
jns
icebp
cmp
adc
jmp
ljmp
fnstenv
mov
ljmp
je
xlat
mov
xchg
pop
xor
adcl
cwtl
notl
pop
cmc
push
cltd
mov
xchg
mov
add
cmc
push
test
pop
shl
push
xor
jecxz
sti
leave
push
mov
test
push
into
adc
imul
add
test
shll
ret
inc
icebp
sbb
push
scas
in
push
cltd
pop
lret
in
mov
push
lock
cmp
fiadds
xchg
and
gs
sbb
inc
js
test
cltd
cmp
push
jp
and
neg
jb
inc
data16
add
pop
add
mov
test
inc
pop
sub
andb
sbb
jo
cmp
aas
adc
push
or
or
jbe
or
xlat
push
ss
add
lcall
les
int3
jne
mov
lods
ret
mov
pop
dec
jmp
mov
insl
xchg
mov
pushf
cli
ret
xorl
in
arpl
ret
repnz
add
cmp
sub
dec
int
sbb
test
mov
adc
sbb
mov
mov
aad
out
outsl
fidivl
movsb
cwtl
lcall
push
add
mov
imul
sti
insb
mov
lahf
mov
mov
mov
xchg
ret
and
mov
call
cmpsl
js
sbb
pop
fdiv
push
mov
xor
xchg
dec
add
mov
inc
adc
in
repnz
ficomps
jnp
hlt
dec
rorl
je
jo
lds
xchg
pop
ljmp
das
cmp
iret
pop
jns
aam
sub
pop
rorl
sub
popa
jmp
push
pop
or
outsl
stc
cmp
xchg
ds
es
test
sbb
scas
cld
stc
inc
pusha
or
cmpsl
subl
sbb
push
in
mov
fdivrs
sub
ja
and
ja
mov
push
test
xor
or
adc
adc
cmp
add
pop
test
xchg
sbb
pop
or
popa
std
or
cmp
out
adc
lret
cmc
dec
jbe
jae
wrmsr
xor
xor
ljmp
mov
mov
push
xchg
xor
inc
pop
add
xchg
fisubrs
mov
pop
adc
outsl
pop
mov
mov
and
mov
sbb
fs
jae
popf
addr16
add
pop
int
les
dec
in
push
push
or
test
adc
leave
mov
xchg
stos
add
adcl
mov
loop
inc
repnz
jae
mov
and
notb
cld
mov
scas
push
or
mov
sub
sbb
js
push
jb
test
test
inc
jmp
mov
dec
lds
xchg
mov
xchg
in
neg
seta
mov
mov
jge
pop
xchg
xlat
dec
dec
mov
jecxz
es
jnp
mov
mov
dec
and
cmp
testl
inc
es
cli
sbb
jae
pop
jbe
test
out
cmp
out
stos
inc
insb
mov
xlat
ret
push
xor
aas
fnstsw
ljmp
lcall
in
bound
lods
fsubs
xchg
add
pusha
pop
jecxz
mull
sub
cmpsb
pop
pop
imull
push
inc
add
inc
ja
idiv
xor
jns
xor
dec
es
cmpsb
pop
or
pop
push
mov
sub
inc
out
xchg
xor
xor
je
mov
sub
and
xor
push
in
decb
fwait
mov
ss
scas
mov
or
das
and
shr
add
or
push
popa
xor
int
test
add
int
sub
dec
mov
sbb
rorl
jo
mov
add
movl
xor
jnp
sub
ljmp
and
lds
and
mov
add
inc
int
out
int3
cmp
lods
roll
xchg
testb
sbb
pop
cmp
pop
leave
loopne
mov
repz
mov
lods
sub
addr16
and
rorb
popf
xchg
add
push
lds
sbb
or
dec
es
adc
push
jge
push
inc
int3
pushf
call
mov
add
sbb
jmp
mov
lret
pop
movsl
push
mov
mov
andl
push
pop
adc
adc
sub
out
sub
pcmpgtw
jl
cmpsl
stos
aam
and
jmp
dec
xor
into
fldl
cs
mov
mov
out
push
add
clc
sub
sub
out
sub
lcall
pop
mov
jecxz
cmp
lock
mov
sbbb
jnp
mov
cmpsl
js
fcoms
cld
outsb
loope
das
and
in
dec
insl
test
xchg
xlat
cmp
pop
dec
scas
outsb
mov
loopne
scas
and
inc
ljmp
ds
push
or
add
int3
out
and
sti
and
movsb
push
shl
adc
enter
jno
lahf
jno
dec
inc
and
or
jg
repnz
inc
lds
inc
cwtl
arpl
push
pusha
test
lret
xchg
mov
inc
shrb
lea
add
je
sarb
xchg
test
xchg
mov
fstps
add
inc
jnp
dec
jmp
mov
das
xlat
in
in
mov
dec
shll
pop
xor
stc
mov
js
xor
xor
sub
sbb
iret
out
fsubr
fidivrs
jg
test
sub
add
pushf
push
mov
notl
pop
adc
movsb
or
sub
jns
mov
mov
daa
sbb
push
mov
inc
in
test
clc
or
xchg
mov
fildll
fst
aad
fmuls
rolb
orb
and
push
fisubrl
or
rcl
add
stos
adc
dec
jmp
mov
or
jecxz
popf
lds
mov
cmp
adc
mov
inc
jle
mov
jmp
fnstenv
adc
pushl
scas
mov
jbe
in
pop
int3
in
out
mov
jns
sbb
pop
xorl
pusha
mov
addb
push
xchg
sub
pop
add
cmpsl
test
or
sbb
jae
loope
sub
mov
fs
fcoml
stos
repnz
outsl
mov
rorl
push
mov
inc
jecxz
fistl
pop
mov
andb
mov
and
mov
cmp
test
nop
andl
fs
inc
cld
fmulp
sarl
cmp
test
and
sub
push
aaa
outsb
dec
sub
xchg
mov
or
shl
aaa
rcr
mov
jl
mov
mov
sub
clc
in
or
bound
xor
int
and
or
jecxz
mov
jecxz
es
test
cmc
push
mov
test
ja
mov
scas
inc
jge
xlat
movsl
sti
test
jle
testb
and
add
inc
in
adc
ror
mov
or
repnz
mov
cli
add
fcmovnbe
and
loop
hlt
sbb
and
sub
je
jl
sbb
mov
jne
btr
int
or
movsl
aad
push
and
lock
ds
cmp
inc
ret
adc
jbe
mov
jge
lret
pop
push
jl
xchg
outsl
dec
loop
jge
mov
and
jp
iret
jae
push
or
xor
xchg
icebp
icebp
push
mov
imul
testl
pop
dec
test
mov
or
mov
mov
add
nop
loopne
scas
lods
add
mov
push
xor
arpl
inc
and
jo
sbb
xchg
leave
mov
jb
stos
or
mov
add
sub
scas
dec
std
pop
jae
pop
inc
ljmp
add
xorl
sub
cld
rclb
lea
push
mov
pop
stos
sti
cmp
int
xchg
movsb
dec
in
adc
jg
jne
ss
lahf
xor
pop
cli
sbb
dec
pop
lds
vmaxpd
mov
ljmp
mov
pusha
imul
mov
pop
inc
pop
push
xor
shrl
scas
add
xor
sbb
lcall
cmp
imul
negl
mov
dec
stc
lds
cmp
mov
out
loop
test
fimull
jae
shlb
mov
add
push
imul
outsl
jge
xor
push
inc
mov
jo
dec
dec
pop
push
flds
sub
sbb
fcomps
inc
xor
adc
mov
jge
insb
pop
mov
pop
push
cs
push
dec
add
push
stos
loopne
add
aas
sub
es
fcmove
test
pop
ljmp
xor
stc
xor
mov
jg
mov
mov
sub
cmp
aaa
jne
push
xor
and
push
mov
push
cmp
and
cmpsl
inc
and
fldenv
ret
repz
ljmp
dec
sub
shrb
push
lea
dec
je
jnp
lock
test
fwait
lret
outsl
outsl
jge
lret
jl
mov
pushf
sub
incl
cmp
and
mov
adcl
add
insb
push
int
sub
push
inc
cmp
hlt
cmc
inc
ret
inc
cmpsb
add
div
and
jecxz
push
add
movsb
adc
cmp
es
sbb
mov
int3
dec
aas
and
mov
dec
aaa
inc
sub
push
hlt
mov
add
or
fsub
mov
mov
outsb
xchg
test
imul
lods
popf
pop
lock
xchg
add
cmpsb
push
sahf
pop
mov
fs
add
pop
mov
pushf
mov
fs
lret
fsubs
into
repz
sub
dec
push
loopne
add
mov
cmp
pop
jne
jmp
sub
mov
jmp
xlat
push
test
push
pop
outsl
sub
insl
mov
cmp
and
stos
mov
mov
mov
sbb
lds
mov
sub
cmc
cmpsl
jge
sub
pop
sub
pop
ret
movsl
jmp
fs
jno
dec
int3
mov
data16
pop
mov
sub
push
xorl
cmp
cltd
cwtl
add
jae
push
es
add
mov
mov
adc
ficoms
loopne
xor
mov
jmp
sub
out
mov
fsubr
mov
shlb
xor
ss
sbb
das
cmp
lock
mov
mov
push
sub
stos
jg
mov
outsl
mov
mov
mov
mov
xlat
arpl
mul
pop
jmp
jp
jae
add
mov
mov
lea
test
push
sbb
mov
int
xchg
and
jne
es
mov
imul
pop
adc
mov
movsb
enter
inc
lds
push
add
outsb
imul
loope
mov
mov
iret
nop
fucomip
xchg
sahf
iret
out
cmp
xor
sbb
and
mov
and
in
rolb
xlat
push
lcall
or
inc
fisttps
mov
jge
test
sub
lret
sub
repz
jmp
lods
adc
dec
jne
sub
mov
xor
xor
pop
cmp
sub
jbe
clc
imul
push
test
scas
cmp
fisubrs
dec
shlb
cmp
out
pop
xor
iret
fs
or
cld
push
mov
ror
mov
push
fmulp
mov
icebp
lds
loopne
jmp
mov
mov
int
in
dec
inc
arpl
push
push
psrlq
adc
rcrl
mov
push
jle
ljmp
jge
pop
insl
mov
push
ds
adc
sub
push
jo
fs
sub
or
xchg
ds
jp
xor
imul
add
scas
ja
insb
jne
sbb
jns
lret
push
mov
lods
pusha
dec
jae
stos
fnstsw
sub
or
aad
add
incl
push
in
js
aad
add
cmp
xorl
mov
add
mov
jns
sbb
popl
jl
xor
iret
add
mov
mov
stos
xchg
stc
mov
and
out
push
pop
cmpsb
mov
add
bound
sub
push
lcall
jmp
int3
outsl
pop
enter
loope
ss
scas
fstp
jns
mov
dec
add
cli
inc
mov
sarl
mov
iret
mov
mov
inc
push
jg
xor
mov
orb
mov
orb
out
test
hlt
out
cmp
mov
sbb
das
push
pop
pop
ds
ljmp
mov
outsl
sbb
scas
lret
and
cmp
push
lods
subb
sub
mov
daa
push
lret
adc
arpl
aaa
xchg
dec
inc
pop
fwait
addl
jecxz
sbb
lcall
mov
ret
lods
hlt
mov
mov
and
dec
dec
jae
test
mov
adc
in
scas
in
mov
ljmp
sbb
sub
loopne
adc
xor
sub
rcll
test
loop
shr
rorl
cmp
jmp
xchg
or
adc
imul
sarb
add
push
mov
pop
jp
push
add
cmpsb
stos
and
aam
and
out
dec
cmp
mov
test
adc
push
mov
dec
sbbl
bound
test
push
in
sub
cmp
dec
int
inc
jmp
insb
test
sub
or
jb
mov
or
add
pop
fbld
jae
cmp
outsb
push
inc
jl
mov
mov
xor
push
ret
subb
shr
loopne
fsubrs
test
or
inc
sbb
or
decb
lea
jg
push
adc
add
out
mov
es
out
test
push
mov
inc
popf
adc
mov
je
sbb
xor
mov
cmp
es
and
out
int
aaa
adc
push
les
push
test
in
test
dec
fcomps
xchg
mov
ffree
in
mov
sub
sub
sbb
mov
sbb
rcrl
ljmp
add
mov
ror
pop
lahf
mov
sbb
mov
icebp
bound
mov
out
decl
lock
mov
push
mov
xor
sbb
xchg
dec
aaa
pop
test
testl
push
push
fs
or
ja
movsb
mov
pushf
bound
dec
mov
std
and
mov
mov
sub
lcall
mov
ror
in
cld
adcl
daa
pop
cmp
fildl
fdivrs
out
sub
addr16
add
ror
pop
push
add
or
addl
mov
dec
inc
pop
scas
cli
call
pusha
fnstcw
loopne
sbbb
mov
sub
pop
jle
test
orb
pushl
stos
inc
pushf
cmp
dec
int
sub
outsl
fxch
mov
xor
cmpsb
lret
xchg
cmp
stc
outsl
sbb
jmp
jl
test
pop
mov
fsts
fadds
leave
sub
out
into
push
movsl
dec
into
xchg
dec
adc
std
iret
inc
fidivrl
ret
shlb
popf
sub
fwait
repz
daa
in
iret
psubb
in
stos
push
cltd
aad
jno
scas
mov
push
cmp
fwait
and
or
in
xlat
addr16
fistps
ss
iret
shl
adc
leave
or
lods
mov
pop
mov
jns
les
fisttpl
nop
popl
mov
jl
cmp
icebp
or
inc
dec
sahf
jle
sti
jl
mov
and
mov
or
dec
ds
dec
cmp
icebp
push
add
pop
js
ret
in
cmpsb
cltd
add
in
cld
cmp
insb
into
cwtl
dec
sub
loopew
call
mov
bound
ret
nop
pop
mov
jbe
mov
mov
push
addr16
shrl
or
nop
push
nop
rcrb
aas
mov
jmp
cmp
xchg
or
lea
mov
pop
mov
jo
xchg
data16
sbb
pop
push
lret
mov
test
xchg
mov
mov
pop
mov
mov
mov
in
mov
test
pushf
fists
mov
adc
negb
lret
sub
mulb
adc
xorb
jg
sbb
sub
cmp
in
xor
fwait
hlt
je
inc
stos
daa
repz
rol
inc
jb
inc
out
or
fstpt
movsb
push
test
faddl
xchg
insl
cmp
loop
cmc
sbb
daa
sub
sbb
or
fcmovnbe
adc
inc
and
ret
push
and
push
fwait
in
loopne
dec
out
jne
insb
push
push
dec
aas
fs
add
mov
xor
xchg
cmp
pop
int3
out
imul
add
pop
push
ret
test
pop
cmc
ja
cmp
mov
mov
mov
cwtl
addb
ja
or
ljmp
mov
adc
push
add
or
mov
sub
call
xchg
in
jne
fcomip
push
je
outsl
mov
inc
xor
adcl
pop
dec
dec
and
in
and
pop
testl
mov
into
xchg
pop
or
inc
sub
add
inc
test
jmp
insl
or
inc
sar
jae
push
mov
push
enter
sub
and
sarb
jns
frstpm(287
stc
mov
adc
jge
movsb
pop
xchg
jne
xor
cmpb
xor
loop
cmp
xchg
aad
fwait
scas
scas
xchg
popa
out
mov
test
fnsave
xor
mov
mov
aas
push
adc
ss
cmp
cli
adc
jmp
fistps
outsl
cmpsl
lods
xor
adc
lret
and
mov
out
fmuls
clc
dec
inc
cmp
mov
cmc
repnz
sbb
subb
pop
push
imul
pop
dec
pop
and
xchg
fiadds
mov
jns
ds
xor
jl
daa
cld
inc
push
gs
cmp
fistpl
stos
adc
pop
jle
cmp
in
jns
pop
data16
mull
dec
or
gs
cmp
fucomi
repnz
imul
vmread
aaa
xor
push
push
call
mov
pop
fidivs
cmpsl
inc
adc
jbe
inc
dec
out
outsb
lock
adc
std
mov
adc
imul
js
jle
lods
push
les
adcb
jge
addr16
je
mov
jae
lods
cmp
push
in
mov
scas
dec
pop
jae
scas
imul
movsb
cmp
push
mov
ret
imul
dec
mov
add
stos
arpl
push
inc
dec
pop
jmp
xorb
leave
add
jne
pop
adc
push
repnz
pop
pop
jecxz
jno
lods
jmp
clc
adc
lods
mov
insb
push
es
or
jns
pop
mov
push
push
arpl
sahf
adc
cmp
jb
pop
jl
js
pop
aaa
fnstcw
xchg
mov
inc
add
add
xlat
lret
out
pop
adc
sbb
add
es
inc
outsb
loop
inc
cmp
imul
fnsave
mov
cs
inc
sub
xchg
in
inc
xchg
ret
or
ss
fmulp
mov
repnz
out
repz
sbb
scas
into
inc
adc
arpl
out
ror
insl
push
pop
push
and
push
jo
imul
leave
fst
sbb
jecxz
popa
xor
stos
jne
pushf
push
jne
ret
dec
gs
and
jbe
lcall
stos
in
stc
dec
pop
push
xlat
out
test
stc
jae
test
and
fnstsw
outsl
pop
and
jo
lea
sbb
jno
inc
repz
sub
xor
jp
repz
bound
rcll
fisttpll
cmp
cmpsb
lcall
push
cmp
jge
sub
push
xor
sbb
mov
xchg
imul
sub
add
add
jl
xchg
push
out
xchg
inc
pop
xchg
hlt
mov
jecxz
rcrb
mov
dec
mov
add
or
enter
pop
pop
push
mov
cmpsl
inc
push
lea
icebp
decb
mov
jecxz
sub
sbb
push
xchg
into
dec
outsl
test
xchg
xchg
cmp
sti
aam
je
cs
sbb
xor
rcrb
push
or
or
popa
sbb
push
sahf
inc
filds
adc
lret
repnz
divb
enter
loope
in
cld
in
into
enter
in
loop
inc
adc
adcb
pop
ljmp
cltd
mov
jl
jg
inc
dec
dec
sbb
mov
je
jns
rcrl
jno
pop
push
mov
test
adc
mov
mov
pop
add
sub
enter
aaa
mov
stos
ljmp
adc
add
pop
shll
lock
out
fdivs
imul
aaa
lds
push
lcall
test
orb
dec
and
popa
call
cmp
jle
jp
aas
daa
xchg
mov
pop
xor
lret
xchg
push
lret
jp
cmp
pop
aas
jae
xchg
pop
movsl
xchg
cwtl
in
inc
jmp
dec
and
push
cmp
mov
fldenv
mov
pop
add
fsubl
in
cmp
mov
or
dec
shr
hlt
lods
repz
jb
mov
stc
inc
pop
inc
mov
loop
pop
xor
mov
pop
push
pusha
lods
mov
out
inc
js
cmp
sub
lods
mov
fmuls
ds
out
cmc
dec
shrb
sub
test
lods
sbb
lods
cmc
xchg
jb
xor
loop
mov
xchg
clc
xor
lea
outsl
insl
inc
cmp
jo
leave
das
es
mov
mov
neg
xor
das
insb
mov
lcall
xchg
shrb
sti
es
inc
imul
out
push
call
pop
xchg
ret
aaa
mov
loop
jo
dec
test
xchg
imul
cmp
adc
add
aam
or
pop
es
testb
popa
jmp
push
sbb
push
lret
dec
icebp
or
xchg
sub
fidivs
clc
lea
xorb
fistl
xchg
lods
adc
push
cltd
xchg
mov
mov
fnstsw
stos
sub
outsb
xor
sub
pop
pop
insb
fyl2x
je
in
test
addl
inc
mov
aam
push
push
mov
xchg
mov
fisubrl
ror
add
sbb
cmp
cs
cli
into
sub
test
mov
adc
mov
sub
cld
add
sti
mov
mov
dec
lret
sub
fs
pushf
ja
jp
mov
inc
pusha
sbb
or
xchg
jmp
in
mov
adc
rcr
gs
inc
push
aaa
test
insb
js
pop
and
adc
jnp
cmpsl
add
mov
pop
inc
adc
and
repz
lods
pop
and
dec
or
test
inc
mov
xchg
add
and
popa
loop
divb
int3
mov
jmp
negl
lea
sub
inc
cs
sub
iret
mov
lret
jns
sbb
rol
lcall
in
mov
mov
rclb
mov
lea
ja
inc
adc
dec
or
fcmovu
out
sbb
sarb
xchg
fists
jb
aam
xor
inc
sbb
inc
or
ss
pusha
inc
xchg
test
repnz
mov
mov
dec
sub
mov
js
int
repz
mov
popa
xor
in
push
jle
fmul
andl
aam
pusha
test
mov
testl
sbb
dec
lock
push
xchg
add
mov
enter
dec
adc
fistpl
sbb
adc
jge
lret
repz
add
mov
repnz
loope
jg
xor
int3
dec
add
in
out
or
pop
add
jbe
pushf
or
mov
add
lock
cmpsb
inc
addr16
xor
dec
xorl
enter
data16
fcomip
mov
xchg
int
sti
pop
cmpsb
loope
add
loopne
pop
or
mov
and
jmp
mov
test
add
movsb
cmp
adc
and
pop
ficoms
pop
dec
push
xor
jmp
mov
push
je
test
mov
push
insb
ja
sub
rcrb
dec
xchg
frstor
testb
aas
cmp
aaa
in
push
pop
repz
gs
movsl
push
jne
loop
fcmovnbe
push
cmpl
addr16
sub
cmp
fcmovu
stos
loop
lret
add
xchg
mov
push
or
pop
scas
aas
push
mov
mov
push
pop
icebp
adc
test
in
pushf
inc
pop
filds
push
fdivrs
gs
xchg
mov
push
mov
jb
jp
jo
sbb
loopne,pt
scas
push
fisubrl
pop
inc
lods
arpl
scas
jnp
incb
stos
sub
cmc
jle
cmp
in
pop
aas
dec
stos
cmp
xor
test
movsl
xchg
pop
mov
sub
das
lret
sbb
fiaddl
fwait
fwait
inc
popf
gs
sar
imul
cmc
jbe
repz
mov
or
loop
sub
stc
xlat
repnz
cmp
sub
or
out
adc
lea
cmp
push
push
mov
mov
mov
in
push
int
cmpsl
call
adc
daa
fcmovnb
dec
fs
mov
insl
je
push
out
mov
sbb
add
pop
ror
cli
add
fadds
in
mov
test
pop
add
xrelease
loopne
loopne
jbe
lret
int3
pop
xchg
xor
movsb
notb
inc
mov
xlat
iret
push
fsts
cmp
xchg
outsb
jle
jg
inc
jp
xor
fxch
mov
cli
inc
inc
ljmp
pop
pop
add
cli
cmp
test
sub
rcrl
and
cmp
dec
iret
add
out
lret
fcomp
sub
adcb
mulb
adc
xor
push
dec
mov
jns
mov
psubsw
lret
imul
push
repz
xor
jo
and
mov
mov
and
loop
stos
lds
jb
cmpsb
pop
push
jae
mov
cwtl
dec
push
ljmp
mov
mov
add
mov
cmp
dec
mov
test
dec
clc
add
pop
jnp
push
pushf
jb
les
repnz
pop
outsb
xchg
mov
cmp
int3
out
rolb
xchg
in
mov
dec
adc
push
ljmp
repnz
sti
and
test
outsl
cmp
sbb
addr16
sbb
push
cvttps2pi
sub
mov
dec
lods
xor
sub
lahf
imul
lret
repnz
push
ficoms
dec
aad
stc
sbb
sub
push
std
jb
inc
cmc
ss
jb
cmp
xchg
push
mov
mov
inc
fidivl
xor
adc
test
cmpsb
ret
pop
fwait
pusha
push
cld
adc
mov
fnstcw
pop
stc
je
fistps
out
aaa
js
push
shll
shll
add
sbb
lret
int3
les
sar
jp
je
mov
pop
xor
loop
mov
xor
mov
loop
pop
rcl
inc
jo
and
ljmp
insb
rcr
sti
sub
mov
or
icebp
fildl
sbb
sti
push
pop
lea
push
cmc
mov
mov
cwtl
pop
or
dec
outsl
shrb
push
push
lock
xor
repz
enter
mov
add
dec
fs
dec
rcrl
mov
push
xor
popa
jno
ds
mov
cmp
test
xor
into
sbb
test
decb
and
leave
lock
loope
subl
jmp
dec
jmp
repnz
dec
out
fstpl
mov
add
loope
clc
mov
insb
repnz
mov
sahf
add
enter
jnp
out
sub
and
loopne
sub
inc
stos
dec
fwait
inc
adcl
inc
fdivl
mov
test
inc
xchg
or
inc
pop
pushf
dec
pop
outsb
push
xor
xlat
fincstp
js
push
lea
repnz
sbb
sub
jmp
stos
inc
mov
insb
pop
adc
mov
int
std
ret
stos
xchg
xchg
movsl
fdivrs
sbb
fwait
iret
dec
or
loope
sub
in
inc
daa
cmp
mov
cld
adc
mov
clc
mov
or
jno
loopne
pop
lea
shlb
hlt
dec
outsl
mov
in
lret
push
orb
sub
and
jns
shrl
or
xchg
imul
push
cmp
or
push
push
in
mov
pop
and
pop
pop
adcl
lahf
sub
ja
test
sub
sahf
loopne
xchg
pop
pop
pop
pop
adc
push
fwait
pop
psubb
aas
pop
ficoml
adc
push
sbb
inc
adc
dec
lds
fsubrs
cmp
adc
xchg
inc
call
frstor
push
inc
addb
jge
mov
movsl
jge
sbbb
mov
mov
in
xor
jb
jg
mov
in
sub
jp
into
pusha
jo
jnp
cs
cmp
repz
ja
in
pop
sub
inc
mov
popf
rol
in
mov
ja
sbb
jns
imul
jge
inc
enter
bswap
loope
es
fistpl
dec
bound
inc
iret
pop
test
xchg
pop
mov
gs
add
or
dec
fisubrs
stos
aas
outsb
insb
inc
inc
mov
in
enterw
lea
and
lahf
xchg
xor
and
fcmovnbe
sub
dec
cmp
enter
out
push
inc
lret
mov
xor
mov
rclb
xor
mov
scas
or
mov
lahf
xchg
fidivrl
call
in
xor
bound
test
push
insb
dec
pop
stos
out
cmp
xchg
enter
std
or
pop
sub
cwtl
mov
mov
mov
mov
mov
jmp
mov
outsb
and
push
dec
adc
cmpsl
or
ret
jmp
out
inc
sbb
push
orb
mov
je
xor
pop
outsl
mov
cmp
and
int3
ret
xchg
cltd
mov
int3
mov
fdivp
fstl
js
xchg
mov
mov
out
adc
in
enter
cmp
clc
jge
inc
sbb
lahf
xchg
call
or
popa
pop
push
xor
cmc
daa
hlt
sub
pop
ja
xchg
mov
cmpsl
push
std
dec
test
lahf
xchg
xor
mov
lret
fs
sbb
rcl
nop
das
adc
aas
pop
iret
sub
pop
jmp
movsl
std
pop
repnz
lea
jge
adc
ja
fnstsw
sub
iret
mov
stos
push
imul
pushf
out
pop
fs
out
cmp
aaa
das
mov
out
or
mov
in
and
xchg
and
and
lds
xchg
jae
subb
xchg
fisttpll
add
mov
leave
jecxz
xchg
xor
inc
add
iret
sbb
outsb
js
lods
pop
push
lock
dec
or
add
iret
dec
sbb
js
stos
aaa
mov
je
int3
dec
mov
stos
in
jns
test
dec
mov
imul
pop
pop
jns
lret
in
add
and
lock
je
add
loope
dec
sahf
mov
shrl
cld
adc
into
sbb
mov
leave
sbb
in
add
repz
mov
repz
lods
push
sahf
cli
repz
mov
mov
mov
arpl
mov
jl
sub
mov
and
jne
leave
rclb
pop
push
leave
xchg
fwait
cmp
xlat
and
cmp
daa
add
leave
movl
mov
jp
xchg
sbb
orl
mov
loop
or
cmc
sbb
gs
testl
addr16
or
cmp
jl
push
stc
mov
int
dec
inc
push
pusha
cmp
scas
pop
push
fsubr
adc
outsl
sub
add
add
lret
mov
iret
test
or
pushf
orb
jnp
mov
popl
in
lods
fstpl
in
cli
mov
neg
dec
stc
sbb
mov
push
mov
loopne
mov
xchg
fldcw
sahf
fwait
xchg
stc
add
jbe
out
cmp
pop
mov
gs
je
add
adc
xor
adc
in
jb
fwait
push
jmp
push
int3
lcall
repnz
adc
adc
les
inc
into
rcrb
std
outsb
dec
outsl
jnp
test
in
pop
cld
sub
inc
push
scas
jge
mov
enter
fs
adc
pop
sbb
shlb
jo
mov
icebp
dec
and
and
push
jge
daa
movsl
scas
mov
add
mov
mov
pop
call
jl
sbb
xchg
lods
std
les
or
fistpll
adc
cmc
or
out
adc
lea
addr16
test
inc
xchg
dec
pop
mov
jge
in
ret
ss
inc
jno
mov
xor
or
and
mov
or
ds
test
aas
push
aas
jmp
sbb
or
lret
and
je
pop
lcall
ret
hlt
aaa
inc
add
cs
lds
fcomps
cwtl
jo
mov
and
jbe
ja
and
xchg
leave
pop
mov
lahf
in
mov
jge
ret
sub
dec
inc
arpl
sub
jmp
xchg
or
add
add
pop
sbb
cmp
jae
sahf
or
cmp
cmc
popa
pop
fistl
mov
push
push
and
mov
xor
cmp
jno
mov
inc
ljmp
cmp
and
data16
lock
mov
and
inc
add
lods
sub
mov
sub
enter
jle
adc
verr
ds
push
cltd
add
aaa
or
pushf
ret
sub
xchg
add
call
mov
pushl
std
ljmp
jmp
push
cmpsl
nop
mov
sub
add
clc
getsec
dec
dec
lret
mov
jl
hlt
xchg
sub
jb
and
fmul
adc
fwait
loop
out
repnz
xchg
leave
addl
andl
in
loopne
add
daa
sub
jge
xchg
pusha
dec
in
cmc
push
mov
lods
cmpsb
push
cli
mov
xchg
data16
out
ds
jecxz
leave
adcb
call
add
jne
push
nop
ljmp
xor
xor
xor
jb
mov
add
sbb
or
out
enter
or
movsb
lods
cmovge
std
sbb
inc
icebp
mov
mov
into
cld
repnz
stc
gs
mov
xor
adc
mov
pushl
and
sub
xorb
sub
mov
cmp
arpl
pop
xchg
rcll
lds
adc
xor
mov
or
inc
imul
adc
and
lret
out
mov
or
add
data16
fs
pop
insl
push
adc
mov
mov
bound
insb
js
ret
add
add
enter
mov
mov
push
lods
ds
push
fdivrs
sub
mov
pop
lahf
mov
adc
leave
and
ret
add
jns
push
lock
test
popf
hlt
scas
daa
push
pushf
out
mov
mov
repnz
or
mov
push
movsb
cmpsb
scas
lret
stc
push
fildll
inc
xchg
sub
sub
sbb
inc
mov
mov
inc
xorb
push
arpl
push
sbb
cld
xchg
cmp
dec
xor
lds
mov
inc
mov
cmp
jmp
lea
jg
sub
fdivp
and
cmp
inc
adc
pusha
lock
jae
xchg
repnz
inc
xchg
lahf
adc
fcompl
ret
push
xchg
rcrl
and
negl
ljmp
push
mov
iret
aas
insb
js
int3
mov
fisttpll
enter
int
pop
outsb
xlat
and
jp
lods
pop
xor
xchg
outsb
lcall
mov
push
mov
je
cmp
inc
cmp
cmpsl
mov
pop
push
xchg
fs
mov
loopne
dec
push
xor
in
cmp
mov
aad
hlt
divl
pop
jecxz
push
sbb
inc
add
mov
cwtl
movl
cld
mov
jmp
add
ret
and
mov
or
cmpsl
mov
mov
fcomps
popl
clc
lock
push
mov
adc
xor
pop
adc
enter
ljmp
popf
push
and
sub
loopne
jle
inc
shr
lret
and
or
sub
test
imul
xor
jmp
stc
dec
addr16
sar
jo
inc
lcall
pop
dec
test
addr16
insl
dec
push
add
jns
outsl
cmpl
leave
cmp
xor
out
mov
mov
lcall
mov
mov
int3
enter
inc
sub
ret
jns
lcall
bound
pop
cmpsb
sti
sar
movsl
sub
dec
cmpsb
adc
push
lods
cmp
filds
inc
adc
ret
fst
imull
jo
or
popf
push
dec
or
mov
jne
loop
lock
jb
adc
stos
push
rorb
fcomi
inc
adc
mov
adc
ja
sahf
es
mov
cli
int
mov
adc
andl
jmp
sbb
mov
mov
mov
xchg
flds
roll
fldl
adc
inc
inc
pop
and
or
pop
pop
jns
push
lea
stc
mov
xchg
scas
fadds
outsb
jne
xor
mov
js
sub
icebp
or
adc
lods
or
push
out
mov
xchg
arpl
les
sub
subl
push
rcrb
sti
add
dec
pop
pop
js
cmp
inc
cmp
inc
and
sbb
sub
add
fwait
and
add
rcll
add
arpl
sub
ss
shrl
push
test
mov
push
les
cld
add
insl
lods
iret
mov
cmpsl
pop
pop
adc
cwtl
sbb
jl
ds
fsqrt
mov
in
dec
adc
xor
adc
inc
loop
pop
fisubrl
ljmp
aas
pushl
xlat
adc
lods
and
jmp
xor
repnz
mov
aad
xor
dec
repnz
cmpsb
mov
dec
leave
push
xchg
mov
and
jb
mov
adc
adc
add
fucomi
sbb
push
ret
icebp
mov
es
cmp
mov
test
sub
adc
rorl
jecxz
test
stc
push
pop
pushw
stos
add
lds
jae
addr16
sub
jo
dec
aam
cmp
mov
cmp
mov
and
dec
xor
fistl
add
lds
cmp
insb
push
mov
dec
add
add
fldenv
ja
outsl
sbb
ljmp
pop
cwtl
mov
scas
je
out
sbb
inc
xchg
push
push
mov
push
jl
mov
fisttps
dec
add
adc
mov
sub
mov
cmpsl
sbb
adc
push
imul
mov
std
adc
sarb
popa
pop
ret
mov
outsb
jnp
sub
test
or
adc
pop
and
pusha
ds
sub
enter
dec
sahf
add
add
addr16
xor
sub
popl
cld
push
add
movb
fadd
cld
cmc
in
jg
idivl
andl
outsb
cli
lea
adc
fsts
jecxz
call
xchg
xor
push
clc
sub
mov
xchg
mov
str
call
nopl
jb
insl
shr
mov
icebp
ljmp
jle
or
inc
cli
dec
mov
sub
fdivrs
scas
aad
inc
outsl
cmp
jle
or
and
adc
adc
add
mov
cmc
fdivs
orb
out
dec
jbe
push
jo
or
add
mov
cmpl
stc
icebp
scas
rcr
notl
inc
fdivs
fstpl
jbe
sbb
scas
push
pop
cmp
stos
dec
inc
cmc
popf
ffree
fstpt
push
pop
sbb
ds
arpl
movsl
add
mov
rol
out
jmp
push
icebp
dec
sub
pop
dec
push
jle
fwait
jecxz
pop
mov
test
test
pop
cwtl
pop
add
data16
aam
dec
sub
das
pop
push
dec
jb
mov
pop
stos
xchg
add
mov
movsb
int
fldlg2
or
dec
xlat
jo
cwtl
add
mov
ss
out
jg
loope
test
loope
jo
loop
jl
adc
add
shll
or
xchg
ret
lcall
imulb
jg,pt
inc
cmp
mov
dec
add
add
fistl
shrb
rcll
jecxz
push
pop
inc
adc
mov
in
lock
cmc
test
nop
bound
cmp
hlt
mov
adc
dec
mov
scas
dec
jg
sub
nop
out
mov
iret
shl
sahf
cmp
clc
jle
shrl
adc
aaa
cli
pop
enter
mov
fwait
test
xorb
sub
cmpsb
adc
or
or
mov
push
loop
repnz
repnz
shrb
push
mov
cmp
loopne
imul
pop
lock
aas
push
arpl
add
and
push
dec
xchg
xchg
int
push
imul
decl
cmp
jp
not
in
js
xchg
cmpb
mov
xchg
fmulp
adc
lahf
mov
push
icebp
jmp
xchg
xor
inc
inc
lcall
fnstenv
xor
pop
lods
inc
pusha
movsl
loope
test
repz
shrl
mov
int
pop
mov
lock
lea
je
mov
or
add
lret
loopne
sub
xor
cli
out
mov
inc
mov
in
jne
iret
lock
xor
fisubl
lock
dec
shll
jl
jno
subb
lock
aad
arpl
pop
add
iret
ficompl
ret
in
mov
mull
add
orl
outsl
xchg
lcall
pop
sbb
in
out
mov
mov
mov
jl
pop
movsb
push
adc
cltd
shr
into
sbb
xchg
addr16
cmp
daa
lret
call
mov
mov
xchg
jle
mov
inc
push
cs
cmp
ja
ret
inc
mov
pop
push
and
shlb
xchg
dec
pop
xchg
fsubl
push
loop
notl
jg
ret
push
ja
loope
cld
fistps
stos
pop
or
stos
jns
cwtl
push
les
xchg
dec
add
mov
pop
fwait
mov
mov
xor
fbstp
inc
andb
inc
mov
dec
push
inc
repnz
ljmp
mov
push
dec
jnp
out
mov
adc
mov
stos
sahf
test
mov
sbb
mov
lcall
mov
lea
icebp
aad
or
inc
pop
cmp
into
outsl
cmpsl
jne
stos
pop
data16
adcl
cmpsb
in
adc
lods
cld
insl
or
sbb
jbe
mov
inc
sub
int
fwait
sbb
mov
cmp
cld
aad
pop
push
pusha
call
stc
xorl
lea
jle
pop
jecxz
in
push
xchg
lret
fistl
cltd
mov
nop
inc
add
data16
sub
je
sbbl
mov
jmp
dec
setne
inc
lds
cltd
insb
jle
mov
lahf
call
loop
jno
std
inc
jo
push
fsubp
icebp
mov
lret
xor
ret
mov
mov
fwait
cmp
inc
cmp
jmp
idivl
dec
cld
mov
out
pop
dec
xor
and
data16
xchg
inc
outsb
adc
seta
lock
lahf
adc
fld
sub
clc
xlat
cmp
lock
cli
inc
jo
dec
mov
insb
adc
insb
mov
int
mov
cld
les
jp
jb
jmp
sub
jmp
out
ret
mov
popa
jo
arpl
inc
mov
pusha
lcall
sbb
mov
adc
push
sbb
iret
mov
inc
scas
out
nop
loopne
loop
jno
cmp
leave
mov
loop
jns
push
js
mov
rcll
test
xchg
pop
int3
and
pop
nop
nop
push
xchg
sbb
outsb
inc
nop
jo
nop
cmpb
lods
cmc
mov
fcomps
cld
fwait
xchg
and
add
je
push
inc
notl
sbb
inc
rcr
daa
adc
cmp
add
pushf
addr16
lods
push
insl
rcr
sub
sub
push
add
or
dec
and
gs
xor
cmc
mov
into
sub
pop
pop
sahf
stos
lods
iret
out
out
or
sbb
in
xorl
jne
out
adc
xchg
inc
cmp
bound
nop
mov
add
adc
adcl
mov
fbstp
or
xchg
jle
stos
or
das
test
pusha
adc
lds
mov
mov
and
pop
shl
lock
push
jmp
push
call
mov
shrb
aaa
test
jnp
xorb
out
cli
or
mov
adc
loop
dec
out
fmull
push
mov
fwait
gs
mov
jb
mov
lods
adc
outsl
orb
pop
and
sbb
pop
pop
inc
cmpsb
bswap
jp
adc
dec
repz
iret
jmp
std
in
pop
or
xchg
pop
pop
das
fidivrl
adc
mov
dec
lds
daa
pop
punpckhbw
popa
ds
jae
rclb
aaa
filds
out
pop
arpl
mov
xor
insl
movsl
negl
xchg
test
bound
xor
xlat
filds
shlb
and
or
mov
cmp
stc
fidivrl
in
mov
lahf
inc
cmp
mov
push
popa
xchg
lcall
and
xchg
or
addb
push
push
cli
fimull
gs
mov
and
mov
sub
push
mov
xor
xor
mov
push
jge
xchg
adc
sbb
popf
dec
test
std
enter
sbb
adc
push
dec
popl
mov
movsl
jp
cld
cltd
push
mov
or
sbb
outsl
fwait
cmpsl
outsl
roll
ljmp
xchg
fists
pushf
jo
test
in
in
and
repz
pop
dec
int3
pop
fimuls
jge
pushw
xchg
sub
test
scas
fildll
je
pop
push
adc
pushf
stos
lods
icebp
cs
arpl
push
test
imul
ja
adc
lods
sub
mov
dec
lcall
mov
jbe
xor
mov
loopne
adc
xchg
iret
shlb
dec
mov
xor
out
push
in
out
es
call
dec
pop
cltd
add
inc
pushf
jb
in
push
nop
add
jmp
pop
rol
xor
mov
sub
sub
inc
negl
xor
lcall
mov
jecxz
outsb
mov
mov
add
dec
lods
stos
mov
hlt
adc
dec
jecxz
and
cmp
inc
int
mov
je
int3
pushf
jge
inc
sti
data16
enter
cmp
cs
fs
cmpsb
and
sub
jb
shlb
or
es
pusha
xchg
int
push
sarl
mov
ja
cmp
data16
insl
mov
or
mov
aaa
inc
mov
push
push
xchg
pop
pop
mov
jb
jmp
mov
push
aas
lds
sub
xchg
jmp
fmuls
daa
pop
test
not
mov
adc
aaa
pop
test
clc
dec
nop
or
push
enter
push
jnp
imul
jnp
fwait
push
cmpsl
cli
test
push
xchg
lret
sahf
dec
mov
mov
push
popf
cld
adcb
dec
mov
inc
out
or
pop
nop
or
shrb
pop
jg
jb
arpl
int
int
xchg
mull
adc
mov
adc
xor
jns
rcl
sarl
xchg
scas
es
stos
enter
cmp
cmpsl
lock
cwtl
pop
cmp
jae
mov
aas
push
xlat
pop
pop
ja
add
xchg
and
inc
adc
jmp
cmp
lock
sbb
aad
jmp
cs
add
hlt
mov
mov
push
pop
xlat
adc
mov
adc
test
stc
cmp
xchg
xchg
and
xor
mov
sbb
lds
adc
adc
loope
movsb
sbb
bound
dec
call
push
scas
jle
ficomps
mov
jle
daa
or
js
les
mov
cmp
inc
adc
push
cld
jp
push
push
and
lods
mov
in
arpl
adc
int3
ror
or
out
shll
cwtl
xchg
dec
and
jmp
outsl
jne
sbb
inc
mov
and
stc
popa
dec
insb
clc
arpl
data16
and
push
sub
pop
mov
aaa
jns
stos
mov
sbb
and
icebp
dec
jl
ret
jle
add
xlat
sahf
ret
jmp
xor
iret
mull
push
out
loopne
or
or
add
fs
add
sub
push
sub
repnz
jno
enter
push
outsb
inc
push
not
test
rcr
fistps
rcr
lods
test
jb
hlt
jecxz
sti
lods
loop
iret
mov
jecxz
cmp
and
rcrb
pop
in
cld
xor
and
mov
mov
adcl
push
add
pop
or
std
std
outsl
mov
out
pop
push
fs
lcall
loopne
lods
cmpsl
je
jecxz
mov
inc
jo
dec
shll
adc
data16
test
jmp
lods
outsb
repnz
into
cmp
inc
fistpl
jmp
cmpsb
mov
and
lea
int3
shlb
ljmp
push
mov
jne
in
iret
jnp
mov
vpsrlw
pop
lret
sahf
and
shr
iret
iret
adc
fisttps
and
lods
sub
cmp
sbb
pop
and
dec
sub
jp
imul
mov
addr16
sbb
lock
out
mov
dec
fsubs
xchg
movsl
inc
and
mov
insb
cli
push
pushw
push
add
xor
ja
and
xchg
lods
mov
xchg
test
sti
mov
add
cmp
inc
iret
or
mov
std
insb
xchg
xchg
push
rdmsr
mov
addr16
int3
inc
cmp
mov
and
lret
dec
scas
mov
push
jne
inc
gs
dec
stos
and
mov
push
js
jae
add
dec
adc
adc
fcoms
fnstsw
xchg
add
stc
push
flds
xchg
sub
imull
add
mov
add
dec
loopne
shr
pop
sbb
dec
push
dec
jb
or
add
xchg
cmpsl
pop
xor
dec
and
push
gs
jecxz
add
fldenv
inc
push
jge
push
in
lea
enter
xchg
adc
fsubrl
jg
jp
andb
mov
into
push
sub
pop
pusha
imulb
cwtl
out
gs
cmp
xor
popf
mov
iret
loope
sub
fadds
mov
enter
ss
sbb
jae
jg
iret
xchg
cmp
add
in
stos
inc
lret
jmp
dec
cmpsl
mov
lods
out
and
xchg
repz
cmp
in
cwtl
es
cmp
les
stos
icebp
mov
fcompl
repnz
orb
adc
shlb
xchg
sti
js
cwtl
adc
pop
pop
int3
mov
xor
les
or
sbbl
cmpsb
xlat
les
push
jns
movsl
daa
mov
sti
ds
movsl
adc
inc
xchg
cmp
or
mov
rorb
lret
rolb
add
sahf
scas
jecxz
pop
sar
arpl
dec
xor
imul
ret
push
mul
add
push
and
fwait
inc
jnp
inc
mov
test
inc
jo
fstl
clc
arpl
mov
leave
add
arpl
push
les
adc
mov
sub
push
fstps
stos
scas
nop
add
mov
jb
das
testl
add
roll
mov
rcl
movsl
dec
shlb
aas
mov
xchg
sbb
int
inc
dec
sbb
ja
jo
xchg
or
xchg
push
std
pop
aaa
scas
cs
es
loope
hlt
in
push
and
stc
test
adc
mov
mov
jg
leave
adc
mov
pop
sbb
inc
mov
xchg
outsl
loopne
andb
jne
sub
mov
fsubs
dec
mov
sub
inc
divb
add
incb
std
aad
leave
into
sbb
pusha
ljmp
push
shrb
mov
ss
adc
mov
repnz
mov
sub
mov
xchg
fsts
adc
outsb
cmp
xor
in
xchg
or
xchg
pushf
cs
daa
lods
bound
hlt
sub
add
out
push
daa
imul
cs
iret
mov
cmp
nop
push
dec
mov
and
sub
nop
xor
stos
push
vcvtss2si
je
xor
nop
add
ficompl
mov
popa
cmc
call
add
jl
test
das
popf
icebp
scas
mov
mov
ficoms
adc
test
or
shrb
inc
dec
das
sbb
aad
jae
es
fisubrs
jecxz
or
popf
inc
insb
mov
sub
in
shl
add
movsb
out
sbb
jmp
in
ds
xchg
jae
cmp
int
pushf
push
xchg
lcall
or
lods
push
mov
mov
jo
imul
xor
sub
push
ljmp
into
icebp
jecxz
inc
fwait
and
jno
pop
stos
push
aam
mov
xor
mov
pop
popf
leave
jl
cld
cltd
outsl
inc
inc
lods
lret
psubsb
jmp
in
sub
call
call
cs
lock
enter
dec
cmp
add
inc
jp
ffreep
cmp
nop
mov
fdivr
mov
fs
insl
sbb
stc
int
int
daa
mov
mov
out
lahf
add
sbb
fsts
xor
sbb
sbb
xchg
lret
push
cwtl
push
and
lahf
mov
mov
add
jns
mov
imull
lods
fcmovb
inc
insb
cmpsb
xchg
pop
add
ret
cli
dec
pcmpeqb
out
mov
or
mov
adc
ljmp
mov
es
push
lock
xchg
xor
sub
scas
ja
mov
push
jo
cmp
fcomps
lahf
add
insl
lock
repz
cmpsb
cmc
inc
and
rolb
adc
mov
pop
adc
add
jbe
push
repnz
jl
bound
push
rorl
insb
dec
fs
outsl
dec
lock
dec
dec
daa
mov
and
xor
cmp
dec
cmpsb
leave
jns
pushf
pop
xor
mov
popa
cmpsl
iret
mov
pop
test
push
lock
jg
add
xchg
mov
arpl
loope
xor
or
mov
push
repz
and
dec
dec
sub
test
ficoms
mov
add
xchg
lock
mov
mov
pop
adc
hlt
xor
test
and
in
int
cmp
mov
test
xchg
or
ljmp
pop
shrb
inc
lret
test
incb
cmc
in
mov
sbb
push
mov
out
insl
in
or
fwait
jbe
gs
cmp
outsl
packsswb
ds
sbb
sub
int
sbb
push
mov
add
outsb
mov
loopne
cmovns
lret
mov
jp
or
daa
pop
popa
xchg
sbb
dec
loop
rcr
repnz
hlt
jecxz
sbb
push
pop
stos
or
push
in
and
push
sub
mov
out
sub
bound
pop
lret
sub
cmpsl
pop
in
jo
pop
sub
mov
pop
adc
lds
inc
aas
adc
mov
inc
pop
rep
fptan
das
dec
adc
int3
jb
inc
mov
cld
and
imull
jne
adc
push
push
int3
mov
push
pop
stc
fdivl
xor
mov
loop
add
jecxz
or
rclb
incl
mov
mov
pop
xchg
cld
dec
sbb
xchg
push
jae
jecxz
scas
or
inc
dec
insl
lds
push
and
testl
sub
bnd
xchg
test
call
cmp
mov
add
add
xchg
jno
push
cmp
mov
fistpll
dec
inc
xchg
push
enter
sub
lea
inc
pusha
mov
push
mov
dec
rorl
sub
push
hlt
or
jo
fsts
inc
cld
pushf
xor
sbb
jge
xchg
xchg
mov
ret
lahf
jnp
loope
xchg
pop
and
in
xor
dec
addl
jmp
clc
cltd
out
addr16
ret
jge
inc
leave
adc
cld
hlt
jl
out
jo
outsl
and
or
ss
outsl
cmp
dec
mov
pop
lret
cs
lret
mov
es
mov
es
fildll
imul
pop
out
fwait
test
add
call
jge
inc
or
leave
jp
and
mov
mov
scas
xor
push
sub
jmp
adc
mov
popf
pusha
out
pop
adc
gs
cmp
cmp
cmp
fisubl
add
pushf
pop
pop
enter
and
cmp
fstps
jecxz
mov
sbb
cld
and
mov
add
xchg
mov
subb
xor
inc
xchg
leave
lahf
mov
push
jbe
pop
movsb
dec
ds
lret
fwait
in
test
lock
adc
arpl
mov
dec
cmp
outsl
pop
sti
scas
jnp
outsb
sarb
inc
inc
int
fcmovnb
and
fwait
dec
iret
xchg
test
ja
and
fistpll
js
inc
hlt
adc
add
enter
fwait
lret
es
mov
enter
sub
mov
aaa
jge
out
in
adc
lret
push
dec
cmp
sbb
sub
aam
fsubrl
pop
popf
pop
adcl
mov
stc
add
xor
cmp
adc
lahf
out
in
fldcw
test
leave
fimull
xchg
jnp
iret
jl
dec
lahf
push
mov
inc
movsl
cmpsb
stos
testb
aaa
lods
xchg
mov
inc
iret
sbb
jne
inc
loop
mov
ret
mov
mov
jb
dec
and
cld
xchg
fsts
ja
ds
adc
mov
mov
fidivs
dec
stos
dec
dec
mov
neg
dec
sbb
add
push
ljmp
mov
cmp
add
push
dec
lods
cwtl
dec
cmpl
cmp
mov
lahf
fistpll
add
popf
dec
fisubs
lock
movsl
mov
pop
rcr
pop
mov
sahf
and
cwtl
mov
push
jae
sbb
ds
mov
sub
testb
test
aaa
dec
mov
out
ror
push
testb
lret
pop
clc
call
cwtl
push
or
dec
loop
in
lock
sahf
push
xor
inc
ljmp
test
and
or
cmpsl
hlt
mov
adc
lret
pop
jge
inc
jge
push
scas
mov
or
dec
lods
adc
jl
or
roll
xlat
sbb
ret
cmp
jne
add
pop
jns
jg
mov
mov
inc
rcll
outsl
inc
sub
arpl
rcll
lea
addr16
push
lods
inc
cmpsl
pop
js
cmp
sub
push
pop
sbb
adc
or
jmp
pop
popf
sbb
dec
test
in
dec
das
ljmp
outsl
xchg
fucomp
xor
add
jae
push
out
push
das
dec
mov
divb
inc
insl
push
daa
ds
data16
scas
pop
adc
cmp
add
cmp
dec
pushf
popa
pop
mov
cmpsl
and
hlt
pop
test
add
mov
fstpl
pop
cmp
int
inc
mov
jmp
adc
je
adc
cmpb
lcall
addl
pushf
popf
jno
adc
lret
movsl
cli
push
stc
sahf
or
xchg
xor
xlat
fimull
in
test
xchg
pushf
repnz
aam
mov
mov
aam
cmp
loopne
scas
stos
pop
jmp
jo
sbb
insb
nop
mov
sbb
repnz
cmp
cmp
adc
icebp
mov
jecxz
movsb
cmpsb
mov
inc
in
shll
pop
add
jecxz
cmc
jmp
fadds
pop
aaa
mov
in
dec
mov
enter
jno
es
mov
adc
imul
cmp
mov
aas
in
int
aas
sahf
shrb
add
testl
mov
loop
push
mov
add
mov
ljmp
gs
pop
sub
movsb
xor
push
faddl
push
je
aam
call
lret
dec
mov
jo
mov
sbb
dec
mov
test
lea
imul
nop
inc
and
std
cwtl
out
adcl
jg
std
loopne
repnz
les
ljmp
fidivl
fwait
pop
fsubrl
sbb
pop
dec
add
dec
mov
pop
or
stc
mov
fs
pop
xchg
xchg
mov
and
sahf
xor
xchg
adc
xchg
jecxz
jle
push
imulb
jns
xor
and
sub
jae
loope
mov
test
dec
mov
push
iret
scas
ficoms
mov
mov
popa
mov
or
mov
outsb
push
pop
fnstsw
data16
fists
push
mov
ja
cld
or
mov
xchg
jne
test
aas
push
or
dec
add
sbb
ret
movsb
aaa
mov
dec
call
iret
sub
sub
jno
xchg
pop
ljmp
repnz
inc
das
sub
pop
xchg
ss
jns
xor
dec
outsl
pop
pop
popaw
loop
xchg
or
fdivrs
xchg
or
mov
bound
mov
cmpsb
rdpmc
cmp
xor
and
mov
add
frstor
xchg
rorb
popf
aas
test
jno
test
jecxz
jecxz
out
hlt
inc
jg
in
xchg
sub
stos
push
out
fs
inc
add
icebp
jecxz
push
xchg
test
les
mov
stc
ljmp
or
out
jle
out
pop
pop
in
into
xchg
push
cmp
mov
or
mov
call
mov
jbe
add
ret
daa
add
outsl
pop
filds
subb
cmp
lcall
cs
lods
sub
mov
imul
movsl
stc
loopne
leave
shll
sbb
mov
jge
shlb
mov
inc
call
lcall
pop
rcl
mov
mov
xchg
push
xchg
cs
es
insb
dec
dec
pop
pushf
sbb
jnp
mov
stc
in
popf
jbe
daa
pop
out
jo
daa
fdivrl
add
lret
cltd
in
js
sub
inc
jb
lock
ss
mov
test
sub
pop
jnp
sub
shlb
div
nop
sbb
fstl
scas
jp
aad
jnp
scas
aas
pushf
cmpsl
pop
adc
aam
xchg
mov
ljmp
test
rorb
jbe
sbb
push
xchg
or
cmp
divb
int
jl
test
xchg
jb
xor
mov
sub
add
div
fwait
imul
mov
and
cmp
cmp
inc
mov
test
test
mov
cmp
xchg
xor
in
xchg
mov
cmp
nop
pop
js
push
pop
shrl
ljmp
push
mov
jnp
xlat
out
cmp
neg
adc
loopne
stos
loop
sub
jge
dec
in
repz
xlat
push
cwtl
push
xchg
push
xor
mov
rcrl
pop
jge
imul
or
fwait
inc
xor
and
mov
fwait
cmpsl
scas
aad
jecxz
and
lea
cmp
popf
fstl
addr16
adc
or
xchg
repnz
xchg
mov
mov
or
jne
hlt
test
adc
repnz
sub
push
pop
aaa
lcall
sbb
cmp
shll
ss
stc
jge
sbb
xchg
mov
add
lahf
push
jnp
cmpsl
add
nop
and
mov
cmp
mov
rcrb
shll
sbb
mov
rcr
pop
iret
push
sbb
arpl
pusha
add
repnz
sbb
repnz
mov
imul
pop
shll
dec
out
mov
mov
clc
cmp
push
test
jb
fcmovbe
mov
rcl
pop
jns
mov
ljmp
scas
cmc
xchg
xor
mov
cmp
lods
jnp
pop
js
cmp
loopne
xor
push
or
and
mov
out
cmp
xchg
sbb
mov
fmuls
insl
jle
add
je
scas
mov
and
pop
push
sbb
jno
mov
fldcw
loop
hlt
jge
adc
mov
sbb
adc
into
aam
test
xchg
cmc
jecxz
dec
push
int
mov
cli
sub
dec
mov
pop
adc
pop
push
jp
int3
xor
int
xchg
and
out
adc
mov
out
in
sahf
jbe
dec
mov
or
mov
mov
imul
pushf
mov
pop
repnz
lcall
mov
cmp
push
jns
push
sbb
cli
pop
sbb
cltd
popf
loope
testb
bound
lds
and
push
out
or
fsubrl
popf
adc
jbe
cli
in
cli
cmp
data16
jb
repnz
in
out
in
scas
dec
push
loope
mov
dec
mov
rolb
addl
setnp
cmova
dec
fsubr
cli
sub
inc
xor
and
mov
rcrb
dec
shlb
into
mov
mov
fstps
fisubs
sub
xchg
les
dec
es
xlat
shlb
mov
jnp
arpl
into
jge
fidivs
je
rcrb
rcr
mov
sub
sub
mov
inc
mov
mov
add
xor
fldcw
pop
push
das
add
pop
push
shlb
repnz
lret
adc
std
pop
int
es
out
fdivp
loope
ja
jp
out
in
mov
mov
fidivrs
sbbb
jbe
mov
aad
xorl
repnz
pop
mov
mov
dec
dec
imul
xchg
dec
sub
popf
sbb
add
ss
mov
outsl
adc
cmp
push
adcl
pop
rcrl
push
and
dec
xor
jle
loope
add
sub
lcall
popa
jnp
aaa
mov
mov
inc
adc
mov
mov
jae
js
fwait
lahf
into
cmovo
ds
sahf
sar
out
bound
mov
push
lcall
popf
jg
inc
cmp
insb
dec
popa
pop
xor
push
shll
mov
fistpll
cmp
sbb
fwait
jb
vmwrite
push
pop
cmpsb
jmp
fidivrs
shlb
mov
out
and
movsb
ret
pop
cltd
mov
or
ficoms
adc
sbb
dec
into
dec
aad
mov
imul
xor
shrb
fistpl
or
xor
jo
aas
adcl
push
inc
sti
mov
or
xchg
in
pop
mov
movsb
add
mov
in
mov
incb
sahf
cmp
in
mov
call
mov
in
xor
mov
dec
stos
lock
push
hlt
xor
imul
push
outsl
xchg
or
inc
xor
sahf
push
mov
jmp
adc
and
cmp
icebp
fbstp
inc
add
loopne
xchg
jbe
cmpsl
xchg
aas
sub
xor
add
or
pop
pop
xor
idivl
lret
fdivr
mov
jg
or
or
mov
shl
pop
ds
cmp
scas
shll
mov
mov
pop
cmp
push
shlb
jle
or
lret
repnz
inc
cltd
pop
add
pcmpgtb
lds
mov
shrb
add
addr16
mov
lcall
jmp
loope
hlt
mov
and
sbb
fldcw
mov
sti
cmp
xor
clc
in
lahf
or
push
inc
jo
sub
call
bound
rorb
call
inc
mov
dec
sub
dec
test
xor
mov
dec
or
scas
inc
inc
repnz
mov
adc
lcall
out
mov
push
cmpl
outsb
push
pop
xchg
lock
pop
nop
sub
into
pop
push
sarl
daa
jb
out
and
pusha
pushf
pop
lods
jmp
or
pop
dec
push
add
add
rcrb
pop
ret
loopne
shrl
les
sbbl
les
mov
fmulp
cmpl
jecxz
sub
cmp
scas
cmc
sub
sbbl
mov
jno
in
sub
or
inc
mov
pusha
mov
in
jmp
mov
cmp
xor
inc
jae
mov
sti
stc
push
out
cltd
lods
lahf
bound
mov
adc
loop
xchg
movsb
daa
and
cmc
push
fdivr
sbb
shlb
sarb
push
mov
xchg
iret
movsl
scas
sub
dec
mov
push
arpl
out
dec
lock
call
out
lahf
push
aaa
push
imul
xor
mov
mov
fidivrl
fcomps
cmpsl
mov
or
sub
pushf
cmc
out
jmp
rorb
icebp
push
aas
es
subl
fnstcw
sarb
sbb
push
out
test
cli
and
imul
mov
cmp
xor
cmp
cmp
mov
ljmp
inc
fcomps
std
into
call
push
aad
scas
sbb
xchg
inc
push
loope
adc
mov
scas
pop
xchg
lods
cmpsb
dec
jle
inc
pop
sbb
leave
dec
es
in
mov
add
cmpsb
and
sbb
xchg
daa
iret
mov
jecxz
mov
mov
pop
jae
cmpsb
lock
fisttps
mov
inc
mov
vorps
movsb
aam
cmp
cs
stc
mov
dec
in
mov
xchg
cmp
add
inc
lcall
and
adc
add
mov
jne
or
mov
test
jae
adc
movsl
cmp
dec
and
arpl
xchg
fsubl
test
add
aam
fcoms
inc
mull
negb
or
pop
xchg
jmp
push
pop
shlb
arpl
mov
pop
subl
test
into
punpckhwd
dec
push
lods
pop
cld
or
xchg
sahf
fwait
xlat
out
dec
mov
negl
mov
dec
cld
scas
aad
mov
jo
mov
adc
or
repz
mov
or
out
enter
ja
jno
xor
inc
insb
adc
dec
jmp
cmovno
call
loop
sahf
jge
mov
push
jecxz
dec
xor
push
test
lret
mov
in
fisubrl
aam
dec
movsb
stos
jo
jae
xor
rcr
push
es
jge
out
movsb
or
jne
cmp
dec
pop
fsubr
movsl
xchg
vmwrite
popa
pop
pop
inc
pop
jmp
jl
sub
test
push
adc
int
out
sti
lea
xor
add
nop
pop
cmp
xor
scas
ja
inc
pop
int
sub
mov
jns
add
outsl
mov
daa
imul
inc
sbb
aad
mov
std
ret
call
mov
jae
les
andb
sub
cltd
cmpsl
ds
adc
cld
mov
sub
push
mov
sbb
push
lret
mov
stos
pop
sbb
push
push
cs
lret
pop
loop
imul
and
jnp
incl
mov
lret
mov
jmp
int3
ret
aas
cmc
imul
inc
pusha
xor
jmp
jae
idivb
cltd
add
xchg
insl
cltd
sbb
inc
rcrb
inc
push
dec
jns
push
cltd
mov
dec
loop
fisubrl
and
push
int
repnz
add
lcall
cmp
stc
in
or
js
and
iret
xchg
inc
jbe
cmp
push
mov
and
cmp
add
xchg
outsl
mov
hlt
adc
dec
xchg
pop
popl
cmp
add
es
lret
ret
stos
push
and
ret
jg
fdivrs
enter
cmpb
mov
or
out
mov
pop
add
scas
cmc
inc
lret
rolb
lds
cmp
adc
add
dec
pusha
sahf
pop
xor
inc
bound
xor
test
rcrl
dec
fs
bound
xor
shll
sbb
stos
xchg
push
insl
mov
and
adc
cmp
mov
aas
cmp
shlb
into
mov
scas
and
das
push
shrl
jmp
adc
andl
mov
sub
clc
sub
dec
inc
sarl
adcb
sub
stc
xor
into
inc
into
in
xchg
jbe
into
dec
mov
add
push
jl
push
inc
inc
xchg
jne
add
fcoms
std
in
test
mov
jecxz
mov
and
flds
push
mov
pop
shlb
mov
add
stc
sbb
int3
andb
addl
or
xchg
repnz
adc
lea
jae
out
fwait
mov
test
mov
jmp
push
push
mov
lret
lea
cmp
sbb
inc
lods
cmp
cwtl
xchg
xchg
add
sbb
jl
movsl
sahf
sbb
out
add
pop
add
dec
jbe
pop
push
out
sub
jne
mov
imul
pop
adc
dec
mov
js
mov
cmpsl
and
fwait
lahf
push
mov
pusha
loop
cmpsl
and
repnz
adc
or
xor
andl
or
pop
fidivrs
push
mov
jae
in
push
pushf
fs
push
in
jb
mov
mov
xor
xchg
sub
jge
out
inc
sbb
inc
cltd
frstor
cmpsb
and
mov
jns
mov
stc
lods
dec
push
imul
mov
push
popf
icebp
xchg
or
xor
test
pop
push
xlat
addr16
pop
jmp
jge
pop
pop
push
or
fnsave
bound
or
in
inc
ret
mov
aas
sbb
or
stos
pushl
sub
cmc
or
lahf
mov
pop
fs
jle
mov
mov
imul
mov
movsb
push
ret
jbe
sbb
sbb
mov
add
das
test
in
rorb
xchg
jns
je
mov
mov
lcall
dec
sub
jbe
scas
clc
test
inc
adc
mov
jge
in
fwait
push
mul
cli
jle
and
sti
add
lea
icebp
rcrb
rorb
stos
dec
rcll
add
iret
cld
mov
dec
je
fldl
mov
rolb
loop
pop
sub
push
call
mov
js
lds
frstor
lea
pop
call
popa
ds
jp
dec
dec
sbb
inc
mov
xchg
cltd
mov
cmp
sbb
mov
aaa
cli
into
ja
sar
movsb
push
in
cmp
jns
or
cmp
mov
pop
mulb
ljmp
ret
jbe
inc
ss
xchg
add
pop
sti
addr16
adc
dec
dec
cmp
and
push
mov
into
cmp
inc
mov
lods
pop
cmp
into
adc
sub
mov
sbb
dec
xor
pop
push
sahf
xor
jne
cld
scas
mov
lret
jmp
jg
cmpsl
sbb
mov
xchg
imul
fcompl
imul
inc
pop
rolb
cmp
dec
xor
or
addb
loopne
pop
dec
imul
pop
test
push
push
mov
lret
xchg
cmp
jbe
inc
xor
mov
xchg
mov
mull
imul
inc
mov
or
int
and
icebp
inc
push
cwtl
insb
and
faddp
push
divl
sbb
cmc
xor
xchg
sbb
jmp
repz
or
cmp
or
sbb
cmp
mov
lods
add
cwtl
test
sti
xchg
inc
or
clc
mov
mov
cltd
test
jecxz
pop
sar
sahf
xor
push
dec
mov
sub
mov
int
push
in
mov
fwait
add
pop
loope
fisttpl
xor
pop
adc
pop
add
cmp
cmp
push
dec
pop
or
cmpsl
or
dec
cs
xchg
inc
in
mov
testl
ds
shlb
fsubl
out
loop
push
icebp
sub
dec
sub
xchg
fsubrl
inc
pop
cmpb
xlat
aas
inc
mov
sub
push
sbb
mov
mov
or
daa
xor
dec
sbb
fs
bound
push
jbe
sbb
adc
das
out
mov
add
fmul
rclb
mov
jecxz
mov
cmpsb
jns
adc
add
mov
dec
sbb
je
shl
test
ss
add
scas
xchg
push
and
call
mov
std
pop
enter
scas
shll
mov
stos
mov
push
adc
xchg
outsl
ja
popa
mov
lea
test
jecxz
or
stos
mov
mov
lds
cs
pop
jp
adc
dec
xor
sti
xlat
cs
or
push
int
dec
andl
or
jmp
lock
jne
sti
adc
cmpsb
aam
int3
arpl
inc
das
fnsave
jp
test
jnp
cltd
leave
divl
mov
aad
ret
aaa
ss
cs
mov
and
jns
xchg
rorl
jne
dec
imul
out
mov
inc
cmp
pop
pop
loope
sbb
jge
mov
dec
dec
pop
shl
fisubrs
popf
cmp
jae
mov
mov
mov
jmp
lret
out
mov
stos
pop
inc
jae
cmp
and
adc
xchg
popf
mov
push
jo
rorb
stos
push
shll
mov
jge
popa
arpl
into
aam
int
mov
cmpsl
lahf
cmp
popa
push
or
inc
xor
mov
or
aad
pop
cwtl
dec
imul
test
pop
pop
int3
fiadds
xlat
jbe
push
and
add
mov
push
sbb
adc
adc
sub
jmp
pop
clc
pop
pop
loop
add
call
xchg
and
push
jnp
out
shll
jge
out
pop
inc
out
xchg
xor
mov
outsb
push
call
movsb
cmc
jbe
nop
aas
mov
scas
hlt
xor
inc
or
fs
and
pop
fstps
adc
loopne
mov
sbbb
jmp
cwtl
mov
pop
xchg
xchg
ja
lcall
cld
mov
shr
and
mov
fsubr
test
aad
xor
inc
call
push
aam
mov
in
rcr
movsb
lock
mov
movsl
push
cld
pop
xorl
stos
sbb
jne
sub
pop
rcrl
jg
lret
pop
fwait
jo
scas
shll
aad
js
out
xchg
ss
dec
and
pop
sbb
pop
call
test
std
sbb
cmpsb
sbb
push
dec
push
xchg
mov
stos
pop
xor
data16
fdivp
std
out
cmp
outsl
pop
xchg
movsl
ss
mov
movsb
clc
and
xor
sub
hlt
clc
xchg
jno
cmp
mov
cmp
fmull
mov
xchg
xor
pop
shrb
notb
lods
or
cltd
and
jle
or
xchg
sbb
xor
add
xchg
enter
mov
test
jnp
test
iret
fwait
lret
ret
add
adc
decb
sub
jno
sbb
ret
jns
dec
add
shl
in
add
daa
push
fnstcw
cmp
sbb
mov
pop
loopne
mov
ljmp
add
jnp
sub
fisubrs
aam
xchg
mov
xchg
push
jge
cld
mov
mov
jo
movsb
mov
mov
aad
xor
popa
mov
cld
outsl
dec
cmc
push
pop
sbb
dec
in
imul
subb
cld
add
movsb
dec
push
dec
add
loope
fcoms
pop
lret
scas
clc
icebp
or
pop
shrb
hlt
ret
or
jnp
outsb
loop
andb
dec
ja
pusha
adc
cmp
in
or
cltd
sub
test
fistpll
cli
inc
jl
cltd
add
pop
data16
int3
inc
xor
imul
adcb
pop
pop
push
xchg
sub
pop
cltd
push
imul
cmc
xchg
mov
sti
sbb
sarb
das
add
jno
sub
insb
clc
idiv
fstpt
les
out
cmpb
sbb
fcomp
loop
call
das
xchg
dec
lret
cmp
scas
movsl
xor
cld
xchg
shl
push
sub
and
movsb
int3
push
fldl
ja
cmp
roll
out
dec
pop
test
sbb
outsb
sub
lret
adc
lret
jne
mov
fbstp
mov
dec
movl
jb
out
stc
mov
xor
sti
call
mov
mov
jle
and
jp
aam
pop
adc
stos
or
fdivs
dec
push
xchg
in
lret
xor
je
imul
lcall
dec
or
int
mov
cltd
xor
stc
adc
js
stos
adc
mov
jp
aaa
adc
mov
lds
adc
pop
pop
jb
icebp
jmp
stos
inc
xor
mov
push
dec
ljmp
out
lret
mov
adc
mov
jno
inc
push
lds
mov
push
imul
bound
mov
and
push
pop
cmp
pusha
pop
push
fldcw
mov
aaa
mov
enter
mov
scas
xchg
add
ljmp
jmp
cli
mov
decl
je
sub
das
aad
mov
stos
add
cmpb
gs
cmpsl
xor
inc
sub
cld
add
sbb
add
and
inc
mov
fnsave
gs
inc
sbb
xorl
scas
push
ret
mov
sub
and
pop
loop
jg
jns
jb
mov
inc
cmpsl
out
inc
mov
in
adc
leave
scas
gs
mov
or
xchg
cltd
cmpsl
mov
jo
mov
sub
mov
and
cli
fdivrs
xchg
lock
enter
icebp
outsb
out
popf
test
dec
cmpsb
cmp
jle
cmp
sbb
movsl
out
hlt
mov
pop
icebp
rcl
ret
pop
leave
mov
ds
pop
cld
adc
jcxz
sti
sti
pop
inc
mov
repz
leave
cmp
je
mov
inc
mov
xchg
stos
and
cmp
les
jecxz
das
lods
xchg
movsl
sbb
sahf
fimuls
shll
movb
add
xor
push
dec
and
dec
push
and
mov
test
dec
jo
popf
cmp
inc
in
jle
xlat
add
cld
xchg
mov
jo
jecxz
inc
sbb
pop
js
sbb
mov
and
dec
adc
xlat
call
cmp
sbb
pusha
test
lcall
addr16
lcall
pop
call
out
pushf
ljmp
ret
popa
movsb
lods
leave
dec
in
aam
pop
and
ds
jns
sbb
ret
mov
and
pop
add
sub
sub
rcrb
out
xor
movsl
sub
sub
xchg
pop
loop
dec
enter
and
out
push
push
test
pop
imul
loope
cmc
stos
adc
pusha
dec
sbbb
aaa
mov
adc
psubusw
cmp
insl
outsl
jo
adc
xor
xor
fwait
xorl
das
mov
jbe
clc
or
ds
pop
pop
sahf
inc
out
cmpsl
sahf
pop
xor
mov
fsubrl
dec
jmp
out
xchg
sbbb
les
movsl
jge
enter
loop
nop
mul
inc
testb
imul
cwtl
addr16
dec
rol
ret
jns
mov
pop
subb
ret
test
mov
stos
movsl
insl
pop
repnz
aas
push
mov
add
mov
mov
lcall
jmp
adcb
mov
inc
sub
aad
push
leave
sub
push
xchg
test
inc
cltd
inc
adc
inc
aad
dec
movnti
repnz
mov
aaa
shrb
arpl
pop
addr16
push
lcall
pop
push
or
loopne
xorl
sbbb
enter
stos
xchg
test
std
mov
mov
jmp
sub
push
mov
lds
pop
mov
testb
mov
aam
jp
dec
jae
test
mov
pop
pop
inc
clc
ficoms
jnp
jnp
mov
rcr
and
lods
inc
sbb
stc
xor
sbb
inc
push
cltd
sub
adcb
cmpsb
cmc
ret
sub
icebp
hlt
imul
push
xchg
mov
add
xorb
imul
inc
outsl
fcmovnbe
lock
test
and
mov
pop
pop
sbb
pop
test
mov
or
cmp
pop
addr16
cwtl
cmp
test
mov
xor
dec
insb
aaa
adc
inc
out
ss
sub
mov
sub
push
lret
fwait
test
sbb
int
inc
jmp
outsb
testb
sub
xchg
in
icebp
pusha
sbb
fs
xor
add
out
popf
out
xor
mov
inc
mov
adc
popa
push
sahf
cmp
sub
clc
out
pop
or
adc
sub
lock
and
mov
mov
outsl
mov
mov
test
jg
pop
aas
push
outsb
jne
add
mov
je
xor
cmp
dec
data16
sub
add
jae
dec
xlat
cmp
push
imul
mov
nop
mov
enter
inc
repz
xchg
xchg
xor
or
xchg
imul
add
cmp
push
mov
xchg
cmp
adc
mov
fbstp
lahf
or
lods
and
add
jo
decl
and
push
repnz
mov
or
sub
dec
addr16
sbb
dec
mov
stos
mov
fwait
jg
pop
imul
ljmp
les
fidivs
dec
aaa
nop
arpl
xchg
jbe
add
add
jle
fisttpl
and
and
inc
inc
jmp
push
stc
jmp
shrl
jp
shll
je
dec
loopne
enter
xor
inc
insb
and
jnp
icebp
and
or
shrb
jb
sub
add
xchg
mov
out
mov
incl
rcll
movb
je
sar
stos
mov
fmull
or
mov
lcall
xchg
movsb
pop
shll
pusha
mov
cmc
mov
or
xchg
and
jmp
mov
sub
pop
es
pop
cmpsl
sub
scas
imul
jo
les
jg
cmp
scas
std
xchg
or
xor
push
mov
push
jb
cltd
sarb
fistps
pop
pop
xor
mov
sub
ret
aam
inc
and
enter
adc
mov
adc
lds
adc
shlb
add
cmp
pop
sub
jmp
sub
xor
pop
repz
pop
mov
add
xor
mov
ljmp
icebp
xchg
cmp
cmp
cmpsb
addl
dec
jg
pop
cltd
mov
repz
mov
pop
jns
mov
xchg
daa
nop
fwait
lahf
mov
xor
lods
mov
call
jnp
rorb
pusha
fcmovu
insl
push
mov
das
ss
cltd
lods
xchg
cmp
imul
xchg
test
movsl
incl
pushl
divb
stos
lea
testl
ljmp
fwait
jmp
adc
add
dec
push
subl
sti
adc
cmp
add
ljmp
add
mov
inc
mov
add
mov
loopne
inc
mov
cmpsb
in
xor
inc
jg
mov
ret
iret
xchg
mov
int
mov
inc
test
mov
xor
inc
push
lret
push
cld
pcmpeqw
ds
jg
test
push
sarl
mov
faddl
fldt
xchg
add
jno
mov
insb
jle
inc
sbb
ja
mov
or
fcompl
jnp
icebp
pop
mov
push
imul
mov
mov
stc
out
jbe
xchg
mov
in
imul
ror
push
pushf
cmp
xchg
shrl
cwtl
std
jle
aaa
or
cmc
fcom
pusha
cmp
xchg
dec
ucomiss
add
sub
sarb
push
daa
push
pop
outsl
inc
jne
or
test
and
pop
mov
loop
lock
jns
cmc
outsl
cmpsl
imul
xor
mov
negb
xchg
movsb
add
xchg
jl
jne
into
mov
mov
mov
out
fidivs
inc
loopne
pop
lock
rcll
add
lock
sahf
cmp
push
mov
fsubs
cmp
sbb
xchg
xor
enter
sub
xchg
pop
push
mov
inc
loop
cwtl
or
insb
xor
jg
pop
pop
push
push
jp
xor
push
inc
sub
fmull
repz
ret
mov
or
push
pop
adc
xor
popa
xchg
stc
les
cmp
cmp
mov
xchg
pop
int3
adc
jo
xchg
lods
mov
pop
xor
movsl
out
mov
movsb
icebp
fstps
mov
sbb
popf
and
sub
xchg
int
lds
pop
pop
adc
pop
jmp
push
popf
push
mov
sbb
xorl
repz
das
je
fisubrl
push
pop
mov
jne
xchg
ja
cmp
xlat
cmc
daa
mov
sbb
sub
js
mov
xor
xchg
mov
jge
xor
mov
loope
dec
add
in
or
cmp
fwait
aad
mov
inc
push
outsl
pop
push
xor
mov
xchg
push
and
and
mov
mov
sbb
mov
outsl
xchg
mov
sbb
sbbb
iret
das
dec
xor
sbb
sbb
popa
mov
lret
pop
ljmp
ret
inc
and
in
pop
scas
xor
arpl
stos
rcrl
jg
or
imul
aaa
in
movsb
call
jno
popf
loope
jbe
out
mov
mov
das
cwtl
icebp
in
xchg
and
add
pusha
int3
in
out
pop
jecxz
into
add
ret
insl
in
decl
sti
or
mov
icebp
sbb
add
pop
js
inc
out
fimuls
enter
mov
adc
and
xor
pushf
insb
loopne
mov
jle
cli
xchg
jnp
mov
mov
out
cmp
bound
push
jae
jno
or
je
push
cltd
mov
movsb
sbb
idiv
movsl
jge
in
imul
add
push
mov
add
cmp
outsb
xchg
sub
sub
push
rcll
jb
sub
xor
popf
loope
mov
in
xchg
add
or
filds
jno
jns
pop
shl
add
bnd
call
or
dec
dec
adc
jmp
gs
xchg
cmp
cs
fimull
icebp
bound
dec
and
inc
enter
xor
dec
es
adc
jmp
fidivrs
adc
loop
mov
adcb
in
pop
mov
test
adc
test
mov
in
pop
sarl
jmp
mov
popa
scas
mov
xchg
fbstp
test
out
fisubl
push
sub
ficomps
int
adc
sbb
orl
push
insb
add
mov
scas
hlt
cmc
out
cmp
and
rorb
lahf
cmp
add
addl
push
and
ret
ret
insb
fistl
and
pop
xor
xchg
xor
xor
inc
movsl
or
mov
repz
mov
in
fiadds
sbb
jno
hlt
cmpsl
mov
mov
mulb
test
push
pop
dec
mov
fcom
xor
movsl
cmp
in
mov
and
xchg
mov
test
shlb
shl
sti
dec
insb
push
and
fldl
and
pop
hlt
lea
mov
fisubrs
add
das
imul
lcall
pushl
test
push
dec
insl
out
sarl
dec
pop
aas
js
mov
jno
or
adc
stos
fiaddl
fwait
cmp
pop
inc
ficompl
insb
cmp
fcomp
lods
jne
mov
adc
clc
pop
sbb
out
das
inc
out
inc
stos
mov
jne
lds
dec
mov
call
push
push
in
xchg
xor
push
test
push
jnp
mov
scas
movsb
mov
in
lcall
dec
int3
cmp
test
add
out
xchg
add
xchg
mov
ror
xchg
push
lods
push
fidivs
idivl
sub
sbb
pcmpgtw
fwait
pop
jl
and
adc
idiv
inc
cmp
out
mov
xlat
daa
idiv
pop
inc
cmp
inc
scas
pop
sub
mov
or
pop
mov
insl
push
test
ss
cmpsl
movsl
fmul
mov
mov
int3
sub
mulb
ret
mov
cmp
pop
subl
or
dec
fcomp
out
cwtl
sub
rol
repnz
insl
inc
jp
lods
adc
dec
xchg
ret
gs
pop
popf
fildll
addr16
pop
pop
add
mov
es
push
push
testb
push
xchg
scas
sbb
gs
sub
push
push
xchg
fcoms
divb
test
cmpsb
dec
mov
test
add
lods
mov
movl
push
enter
and
jge
mov
orl
loopne
xchg
ljmp
sbb
mov
jge
mov
fnstsw
loope
or
pop
add
fcmovu
imul
xchg
lahf
test
mov
outsb
inc
xchg
mov
fisttpl
das
outsl
mov
mov
mov
fwait
add
mov
jmp
mov
sub
aad
jg
lret
cmp
orl
hlt
jns
xlat
dec
cld
cmp
mov
jecxz
in
in
in
fdivp
lds
lods
sarb
popf
add
cmp
enter
rol
pop
sub
notl
jmp
jns
out
mov
dec
icebp
shl
hlt
xor
inc
jbe
dec
xor
sbb
dec
fstpt
ss
ljmp
mov
sbb
or
xchg
out
xchg
mov
adc
lea
cmpsb
mov
gs
aam
movsb
cmp
xor
fsubl
ljmp
rorl
or
xchg
jbe
pop
adc
repnz
cmp
sub
iret
retw
lods
js
dec
inc
xor
jle
xchg
inc
and
mov
adc
rcrl
xor
mov
inc
shlb
jb
enter
mov
or
dec
movsl
loopne
insl
int
inc
roll
lock
cmp
mov
mov
push
jmp
scas
mov
ss
jle
fwait
pop
pop
shl
adc
xchg
and
decb
cltd
cmc
call
pop
negb
jl
pop
dec
cli
into
mov
cmp
ss
and
outsb
icebp
pop
sub
fwait
imul
xor
das
push
or
add
cmp
add
push
sub
xchg
or
cld
push
shll
mov
cltd
shll
add
iret
lret
fsubl
adc
repnz
decl
in
dec
mov
sub
cs
aam
das
das
ret
xchg
jb
insb
push
mov
or
fcoml
addl
xchg
cmpsb
cltd
out
add
push
pop
push
mov
test
and
js
push
adc
jbe
sub
imul
pop
test
lds
jecxz
pop
hlt
add
or
arpl
jno
pop
xor
mov
cmp
xor
in
or
rcr
out
out
les
or
ljmp
sub
adc
push
cld
xchg
jo
xor
negb
lea
adc
or
mov
pop
mov
jbe
push
out
repz
ljmp
lsl
lea
test
imul
mov
push
pop
pop
sbb
imul
leave
ljmp
shl
mov
pusha
mov
cmc
lret
mov
xchg
call
outsl
mov
popa
push
xor
jae
sbb
fcoms
jno
add
std
mov
pop
pop
jnp
cs
jle
ljmp
bnd
sub
xlat
or
pop
add
in
in
enter
pop
dec
or
test
scas
aas
in
data16
xor
or
xor
sbb
daa
sbb
sbb
fs
roll
pop
push
mov
das
imul
out
lret
lahf
lcall
loope
cmpb
fisubrl
add
mov
cmp
xchg
push
fwait
jecxz
push
iret
pop
jg
outsb
xlat
je
add
out
lea
or
lds
or
repnz
ret
xor
mov
mov
in
push
push
jmp
push
popa
cltd
adc
rclb
jmp
adc
xor
mov
fld
out
popa
leave
call
sub
clc
daa
cmp
cmp
stc
in
ret
add
inc
or
daa
sub
lea
js
xchg
int3
pushl
jp
data16
fs
adc
add
in
outsb
imul
pop
sub
dec
mov
repz
mov
push
jle
or
adc
mov
jl
movsl
mov
orb
cmpsl
pop
ret
push
mov
jl
sub
popa
out
push
pop
dec
xchg
xchg
adc
cli
or
add
rorb
push
sbb
pushf
int
cmpsl
test
push
mov
ret
mov
mov
cld
clc
inc
sbbl
outsb
pop
repnz
fimull
mov
je
add
das
inc
jb
mov
int3
push
es
pop
adc
rcl
aas
je
xor
cmc
pop
pop
xchg
sub
jmp
adc
mov
test
dec
sbb
enter
sub
mov
push
adc
cmp
loope
insl
pushf
outsl
or
push
push
nop
stc
int
sub
xchg
test
pop
or
aad
fs
cli
push
push
push
jecxz
mov
popl
xlat
inc
divl
add
cmp
dec
dec
xor
imul
adc
xchg
push
negb
sti
push
and
addl
push
pop
ret
mov
mov
push
mov
sub
scas
jp
cmpsb
or
js
push
shr
fistpll
ret
shrl
out
or
jnp
xor
pop
or
sub
push
pop
add
fstl
ret
xor
jp
cld
repnz
lret
aas
test
push
xor
iret
jge
bound
inc
mov
add
jno
jmp
xor
ss
mov
inc
sub
hlt
cmp
push
ret
push
pusha
sbbl
int
xor
or
fdivrl
jb
sub
lock
cmpsl
pop
roll
xchg
jg
mov
push
jmp
lock
push
into
icebp
lods
ret
cltd
into
or
sbb
loope
jecxz
pop
jp
jnp
ljmp
and
ret
jp
jne
cmpsb
pop
lock
imulb
push
cmp
test
mov
orb
pop
gs
cmp
sub
ficompl
jge
ja
pop
orb
lods
inc
and
pushf
xchg
les
leave
add
fcoml
fsubl
fidivrl
sbb
dec
inc
lods
fidivs
mov
jbe
cmp
sbb
in
cmp
stos
sbb
sub
mov
sub
and
call
lret
cmp
lea
and
cli
pop
add
lea
inc
dec
push
mov
les
test
fsubrl
sahf
push
ret
outsb
addr16
ja
cmp
cmc
inc
fistpl
jle
jno
or
lahf
cli
inc
outsb
push
jl
popa
mov
push
in
rcrl
xchg
adc
popf
movsl
sbb
and
fwait
xchg
fistpll
mov
pop
test
xchg
and
inc
das
mov
out
mov
shll
mov
sub
xor
dec
fbstp
xchg
sbb
dec
jge
xchg
fildll
cmp
jle
call
sahf
sub
fninit
shll
cld
pop
aam
nop
nop
pop
imul
mov
test
stc
out
sub
dec
cltd
pop
cld
and
repz
add
arpl
adc
mov
aam
lret
jp
cmp
and
push
inc
xchg
lods
out
jnp
pop
adc
aam
cmpsb
fnsave
push
xlat
andb
mov
dec
dec
jb
dec
xor
arpl
xor
subb
rcll
adc
adc
mov
and
push
sbb
stc
je
stos
mov
push
jae
mov
addb
int
stc
dec
jle
sbb
or
mov
inc
xchg
popf
jns
xor
mov
test
push
stos
sbb
cli
in
cmp
jno
addl
inc
jbe
cltd
imul
jbe
xor
pop
lock
insb
push
das
pop
in
push
dec
aas
pop
sbb
mov
fwait
cmp
mov
cmp
sbb
lcall
xchg
pop
xor
mov
push
shll
out
pop
mov
movsl
sbb
leave
xor
popf
mov
cltd
push
pop
mov
daa
cwtl
add
incl
out
sub
mov
ret
scas
mov
aas
movsl
ljmp
xchg
push
loope
mov
call
push
jns
push
mov
mov
mov
dec
adc
mov
insl
cmp
into
js
aaa
insl
and
xor
add
loope
imul
lds
cli
repnz
add
in
adc
xchg
popa
int
mov
mov
addr16
jl
pop
jno
fsubs
push
cmp
mov
adc
call
jge
ja
mov
xchg
adcl
scas
movsb
sub
pop
cli
sbb
push
pop
sahf
and
fsubs
dec
pusha
fsubr
mov
push
repnz
jg
adc
xor
popf
in
lock
sub
pop
inc
xor
jnp
adc
or
xchg
jge
sub
testb
jmp
pop
in
push
inc
test
xchg
dec
in
cmc
popl
cli
mov
jg
imul
sarb
and
sub
push
sub
mov
add
xchg
pop
testl
ss
mov
sub
pushf
leave
push
jae
outsl
imul
sbb
stc
xor
pop
lcall
shr
jno
cs
test
idiv
mov
lret
shlb
insb
inc
mov
add
push
adc
scas
mov
xor
into
lret
push
into
mov
adc
cs
dec
xchg
jbe
aam
mov
jb
mov
sti
rorl
fwait
adc
jp
inc
sbbl
push
mov
fldenv
add
inc
int3
icebp
pusha
daa
mov
mov
mov
in
aas
ret
ffreep
pusha
jns
mov
or
daa
add
ljmp
aam
mov
sub
fcom
sub
inc
push
inc
in
add
jb
loop
movsl
idiv
stos
cmpsb
mov
es
stc
jg
fsubrl
pushf
data16
pop
sti
adc
and
push
sarb
cli
adc
push
adc
sbb
mov
divl
xchg
int
leave
in
out
stc
mov
cmp
fbld
imul
inc
movsb
cld
imul
scas
call
mov
ret
xchg
add
ja
sbb
push
test
int3
test
add
mov
movsl
xor
mov
insb
and
sub
test
pop
add
cmp
xlat
cwtl
mov
dec
mov
xor
stos
rorl
mov
add
pop
loop
dec
mov
arpl
popa
push
iret
or
add
cs
es
push
ljmp
push
fmuls
adc
push
jecxz
aad
inc
movsl
icebp
pusha
jo
cmpxchg
das
jo
adc
xchg
mov
dec
or
jbe
movsl
loop
push
push
push
repnz
stos
movsl
and
mov
pop
pop
jg
xor
mov
jo
add
mov
add
xor
mov
adc
fstpl
out
and
imul
mov
sbb
inc
popa
sub
rorl
jp
push
dec
sub
mov
stos
aaa
pop
popf
mov
mov
or
lock
mov
add
mov
sahf
or
xchg
mov
pop
mov
jge
cmp
es
ljmp
pop
fcomps
dec
cwtl
mov
add
pop
rcrb
jo
xchg
inc
rcrl
add
lods
pop
sbb
sbb
jge
icebp
rcrb
and
adc
fcmovnb
push
movsb
psadbw
jmp
pop
jne
sarb
enter
jecxz
sub
pushl
adc
push
clc
rcl
sbb
mov
lcall
jns
and
xor
insb
lcall
jl
mov
ljmp
aaa
jg
scas
jns
negb
xlat
jns
sahf
sub
xchg
mov
adc
jne
loopne
scas
and
movsb
push
movsb
sti
mov
es
dec
mov
aas
arpl
mov
xchg
loop
mov
test
push
adc
popf
int3
mov
repz
movsl
mov
mov
idivl
mov
outsl
test
jle
mov
dec
mov
mov
daa
dec
mov
mov
pop
mov
je
dec
movsb
outsb
xor
xchg
out
mov
stc
out
imul
pop
insb
leave
sbb
adc
inc
xchg
sub
sti
inc
mov
add
mov
pushf
sub
cmove
push
aaa
jmp
in
mov
cmpsl
sbb
out
rcl
add
scas
and
inc
std
sub
adc
and
inc
mov
fwait
lea
mov
or
add
add
add
jge
les
and
mov
scas
lds
roll
aaa
push
add
push
xor
aas
inc
sbb
out
mov
sub
sbb
xor
push
cmc
dec
leave
insb
jae
adc
mov
fcom
xor
out
dec
out
cld
mov
xor
fidivs
movl
xor
cmpsl
lcall
jl
cmp
pop
mov
hlt
movsb
and
sarb
popa
in
push
mov
sub
cmpsl
data16
sbb
jg
stos
insl
outsl
dec
pushf
daa
sub
push
push
pop
cmpsb
push
pop
pcmpgtd
adc
cld
push
insb
aaa
mov
mov
cwtl
nop
fwait
scas
sub
adcl
push
mov
pop
sub
mov
scas
inc
pop
or
mov
aas
dec
outsb
movsb
push
jl
popa
or
es
mov
cmp
sub
jbe
jns
xorb
pop
mov
outsb
insb
mov
jb
adc
jge
cltd
sti
push
xchg
adc
pop
pop
adc
scas
outsb
add
cmp
adc
dec
addl
bound
pop
inc
push
cwtl
inc
cmpsb
lods
call
test
out
xor
aas
aaa
mov
cmp
outsb
inc
int
push
sbb
test
mov
jnp
out
dec
mov
and
jge
ss
mov
aaa
loop
cmp
adc
fcmovb
sub
inc
push
adc
pop
push
pop
aaa
pop
in
ljmp
adc
xor
scas
mov
inc
loope
clc
add
les
ljmp
jbe
dec
sub
sbb
fcomi
xchg
push
scas
push
jne
dec
push
popf
mov
arpl
add
add
fimuls
arpl
push
fldenv
aaa
ds
bound
cmpsl
jo
inc
mov
cmp
xlat
imul
fs
lret
lcall
push
scas
call
pop
imul
es
sarl
xchg
arpl
loop
cmpsb
lret
add
fwait
inc
daa
jle
xchg
loope
cmp
mov
popf
pop
sub
xchg
jg
pop
or
packssdw
inc
lret
roll
movsb
aad
xor
in
cmp
sbb
jno
mov
push
or
fidivrs
mov
dec
out
pop
sbb
jns
int
shrl
inc
xchg
lret
divb
shll
cmp
out
push
push
push
lret
test
cmp
xchg
filds
sub
arpl
dec
out
or
sbbl
iret
call
ds
shl
lods
mov
aas
pushf
mov
and
xor
hlt
xorb
out
arpl
xor
movsl
sti
jae
inc
cmp
divl
pop
aad
xchg
adc
aaa
repz
scas
arpl
rcrb
nop
pop
jge
mov
cmc
test
cmpsl
push
inc
sbb
push
mov
lahf
scas
and
mov
jecxz
add
inc
cltd
push
and
add
fdiv
js
inc
push
and
xchg
dec
aad
iret
mov
push
adc
pop
jl
add
xor
in
cwtl
xorb
pop
jmp
cltd
dec
ror
mov
stos
cmp
cld
mov
jnp
add
pushf
push
push
cli
push
and
ret
dec
sub
cmp
xor
pop
inc
insl
or
or
frstor
pop
cmp
sahf
push
iret
test
iret
jl
js
push
andb
xchg
push
fstl
mov
call
out
pop
mov
in
push
movl
cmp
jmp
add
adc
mov
es
push
dec
and
insb
inc
cmpsb
jmp
in
out
mov
or
pop
lea
es
fidivs
mov
adc
xor
mov
mov
sahf
jo
xchg
or
xchg
imul
jne
cmp
pop
test
loop
fxch
cwtl
mov
fsubrp
in
xor
insb
xor
sub
fstp
pop
shlb
faddl
cmpsl
scas
stos
pop
xchg
orb
jae
cltd
push
jp
notl
add
shll
popa
dec
into
ficomps
cmp
push
jecxz
in
mov
adcl
fldcw
jae
lcall
mov
push
mov
and
mov
push
iret
mov
cmp
adc
push
push
mov
xchg
cltd
add
add
sbb
inc
ja
int
push
fidivs
ds
xor
jno
jb
mov
lret
mov
mov
inc
mov
lods
sbb
mov
mov
lcall
add
xchg
cmp
fildll
addr16
out
xor
fists
aaa
and
bound
out
sub
insl
push
outsb
lods
sbb
mov
sbb
mov
jbe
cmc
xchg
xor
cli
xor
and
mov
or
aad
xlat
dec
push
test
jmp
xlat
xchg
daa
xor
cmp
add
pop
fsubr
cmp
mov
push
xchg
aaa
dec
in
jae
inc
data16
push
xorl
leave
jo
adc
mov
pusha
in
mov
fisttpl
cmpsb
push
mov
lahf
push
sub
mov
and
movlps
xchg
fbstp
arpl
jmp
jo
mov
mov
pushf
subb
mov
inc
add
movsl
roll
data16
fsubp
dec
xchg
test
mov
inc
ret
adc
and
sub
stc
pop
cmp
dec
cs
mov
pop
add
pop
mov
mov
cmp
loopne
sahf
push
ja
xlat
int
add
pop
add
mov
sar
sbb
mov
cmp
or
or
cld
pop
sub
xor
fcmovb
shll
idivb
imul
scas
sbb
inc
and
lock
pusha
mov
push
xchg
fdivl
outsl
notb
scas
add
xor
testl
mov
rolb
xchg
popa
test
push
fstpt
sbb
xacquire
push
mov
nop
pushf
mov
outsb
push
xor
es
shlb
dec
ja
daa
or
jmp
ljmp
sbb
and
call
mov
bound
inc
sbb
xor
and
and
imul
rcrb
bnd
push
inc
outsb
cli
or
scas
jno
cmp
lret
ljmp
leave
mov
negl
dec
out
mov
pushf
je
cwtl
fstpl
scas
sbb
jg
pop
sub
jbe
enter
es
mov
ret
jecxz
xor
decb
dec
test
jp
mov
mov
flds
pop
add
mov
icebp
cs
lods
loope
lea
ss
dec
repz
and
stos
enter
cmp
jb
pop
push
add
iret
lock
loopne
add
mov
and
rorb
stc
push
ja
cmp
loope
xchg
and
cld
js
add
mov
jle
add
or
loope
insl
add
adc
clc
xorl
test
fstl
xchg
rorl
and
jb
aas
dec
inc
ljmp
out
and
pop
push
lahf
push
mov
sub
stos
test
push
dec
icebp
or
sub
mov
adc
pop
mov
out
adc
jnp
jl
sub
hlt
daa
pop
xchg
ja
aad
and
out
scas
lods
lea
pop
cmpsb
mov
adc
pop
test
jbe
push
hlt
daa
pop
or
fadd
outsb
inc
pop
loop
movsb
mov
jg
shrl
add
inc
incl
test
sub
lahf
dec
mov
cltd
movsb
push
jmp
clc
scas
inc
adc
lret
xchg
fsubl
jbe
mov
cs
scas
dec
mov
pop
jmp
out
int
adc
sbb
pop
sub
ficompl
cld
push
rorl
pop
xor
push
or
xor
push
add
push
pusha
mov
loopne
stos
dec
int3
mov
jecxz
mov
mov
and
mov
and
dec
addr16
andb
sub
mov
cmp
das
sub
inc
jae
push
xchg
popf
subb
test
sbb
pop
pushf
popa
jl
add
idivl
pusha
mov
ja
loopne
mov
inc
jbe
sub
mov
push
std
shr
cmp
or
mov
push
mov
outsb
inc
xchg
inc
ss
xor
adc
dec
sahf
je
movsl
neg
xlat
push
mov
mov
pop
fucom
sub
mov
inc
add
and
shll
outsb
jbe
push
sbb
repnz
xor
push
xchg
insl
jl
xchg
mov
test
sbb
rol
lcall
mov
add
pushf
pop
lock
and
xchg
push
adc
or
rolb
out
xor
idivl
lret
or
inc
dec
jmp
dec
lea
jno
int3
lods
pop
push
dec
jne
push
scas
fisttpll
and
cli
aam
and
dec
dec
insb
add
stos
or
rorl
or
mov
icebp
clc
and
mov
jns
mov
cmpsl
jo
push
leave
sub
je
jns
es
lret
int
in
adc
int3
jbe
jmp
xlat
clc
push
push
and
stos
mov
ljmp
cli
ds
push
sub
in
mov
sbb
movsl
aad
rorb
orb
add
lods
xor
cmpsb
nop
jge
pop
leave
aam
sbb
inc
push
aad
test
mov
pop
cmc
mov
push
bound
clc
jle
pop
sti
mov
sub
out
xchg
and
mov
or
mov
fcmove
mov
jae
leave
pop
decb
xchg
add
mov
dec
rcrb
dec
add
sbb
mov
aam
xor
cmp
fs
fs
int
mov
mov
pop
adc
push
sbb
cmc
subb
cli
cmp
push
mov
mov
out
push
inc
and
xchg
lods
or
push
jnp
xchg
jp
jle
sar
xchg
mov
addr16
adc
ljmp
sub
leave
cwtl
inc
push
fldl
cmp
inc
gs
sbb
sub
dec
in
add
insl
or
scas
ret
or
sahf
outsb
xor
mov
stc
dec
popa
sub
sbb
pusha
sub
enter
xor
mov
dec
ds
add
cli
cmpsl
cmpsl
or
sti
stc
aas
xor
aaa
neg
jg
mov
mov
mov
dec
mov
leave
inc
mov
adc
inc
insl
pop
jne
cmp
xchg
pop
rclb
cmp
aas
mov
mov
mov
xchg
sti
xor
stos
inc
in
xchg
cs
pop
jo
pop
daa
dec
xchg
push
into
movsb
loop
lcall
aas
mov
dec
js
push
jo
iret
jp
sbb
stc
mov
adc
popf
push
cwtl
js
outsb
dec
fnstsw
push
loope
test
cmp
mov
jl
ret
shl
jo
dec
and
inc
push
test
mov
jmp
daa
cmp
je
jae
sub
or
lahf
ds
fstps
fldenv
test
call
xchg
mov
dec
dec
or
test
xor
dec
cmp
aam
or
inc
cmp
and
push
and
jb
cmc
inc
xchg
cmp
sub
fs
cmpsl
lods
push
mov
sbb
cmc
ror
into
sahf
xchg
push
pop
jne
popa
idivb
adc
sbb
xchg
scas
pop
fistpl
dec
fcompl
xchg
jne
test
sbb
mov
xor
test
test
or
and
movsb
jp
push
dec
push
cmp
mov
mov
testb
lods
out
stos
out
bound
out
insl
xor
lods
add
adc
mov
jle
rorl
popa
pop
xor
jl
jp
push
xchg
fwait
lret
pop
mov
mov
stc
jp
mov
cld
pop
xor
adc
mov
sarl
das
pop
xor
sbbb
out
cmp
pop
in
push
inc
mov
insb
icebp
clc
out
sbb
push
jb
jns
aaa
fmuls
xchg
mov
aas
mov
scas
xor
push
iret
mov
lcall
inc
push
fdivrp
push
sub
enter
pop
idivb
mov
aas
sbb
dec
pop
roll
call
bsr
lret
sbb
lods
lret
push
jp
and
add
unpckhps
orl
idivb
cmc
pop
cld
leave
and
test
and
pop
negb
cmpsb
in
hlt
inc
sti
mov
aas
imul
or
inc
out
roll
inc
sub
ret
in
sub
fwait
or
jmp
clc
xchg
aam
xor
mov
das
adc
mov
negl
loop
mov
jb
and
out
cmp
shll
ret
out
xor
mov
inc
or
cwtl
jb
sbb
es
add
cmp
ficoms
xor
cwtl
sahf
jmp
shlb
push
addl
movsb
stc
test
jns
add
daa
aaa
insl
in
repz
push
mov
cmp
mov
cld
inc
rcl
or
push
in
lock
inc
jo
test
in
fisubs
mull
icebp
call
add
pop
scas
movsb
js
insl
dec
dec
ja
les
mov
adc
aam
repnz
outsl
pop
mov
fwait
rcl
pop
outsb
andps
das
push
sahf
into
jbe
inc
nop
and
fisttpl
aam
shrl
mov
push
lahf
push
jmp
data16
xor
inc
mov
inc
lahf
enter
in
jl
jp
and
je
in
dec
add
xor
jb
test
aad
aas
jg
mov
xchg
mov
rol
insb
notb
out
nop
test
mov
movsl
mov
pop
xor
jmp
and
cmp
xchg
in
pop
xlat
aam
pop
popa
lret
mov
mov
push
jb
insl
addr16
aad
into
xor
out
outsb
cmpsb
into
push
xchg
icebp
pop
sbb
bound
dec
scas
pop
dec
mov
sbb
js
dec
pop
shll
sti
mov
cmp
lods
fcomps
scas
xor
and
loope
xchg
add
cmova
push
shl
mov
lods
inc
imul
sub
mov
sahf
sbb
inc
imulb
add
mov
int
dec
movsb
aaa
xchg
lret
jno
xorl
movsl
cmc
cmpsb
jbe
stos
xchg
imull
lods
ljmp
inc
clc
int3
scas
add
push
cmp
cmpsl
sbb
out
fwait
data16
data16
es
loop
xor
fisubs
nop
mov
adc
testb
jg
push
xchg
mov
out
stos
dec
xor
pop
ljmp
mov
xor
arpl
into
jnp
cwtl
xlat
xor
sbb
add
cld
mov
and
out
mov
sub
fistpll
inc
mov
sbb
cmpsb
fcoms
push
jecxz
iret
pop
lret
popf
mov
mov
lahf
push
stos
mov
repz
sub
dec
mov
lods
inc
jbe
lea
jno
cmpsl
add
xchg
in
dec
jge
pop
dec
jecxz
lds
dec
sub
jg
dec
mov
xchg
xor
arpl
ret
pusha
sbb
loop
mov
icebp
nop
add
pop
or
sbb
xor
cmp
lcall
ror
dec
popf
mov
cli
sub
cmp
mov
test
stc
mov
notl
sarl
cmp
adc
mov
aas
loop
fwait
popa
and
sbb
mov
ja
mov
insb
pop
int3
xchg
cwtl
cmpb
pop
orl
xor
or
imul
sbb
push
push
and
test
rclb
int3
leave
or
aam
ljmp
int3
push
inc
mov
sbb
or
xchg
mov
inc
pushf
dec
mov
dec
mov
add
cmp
scas
pop
or
cmp
mov
in
mov
add
lods
and
xor
xlat
or
cltd
popa
mov
mov
aaa
repz
loop
xor
nop
adc
cmc
ret
aaa
fimuls
push
mov
adc
push
mov
jp
movsb
xor
adcb
and
sub
pop
fwait
out
loope
fstpt
aad
bnd
adc
sub
outsb
into
sti
mov
daa
imul
jge
cmp
cmp
or
ds
rcrb
push
lcall
testl
fucom
mov
lret
xor
dec
js
cmc
mov
xchg
inc
ds
inc
and
push
xorb
or
and
jno
movsb
int
adc
fisttps
mov
lea
xlat
je
xor
dec
call
in
adc
aas
sbbl
push
out
in
aaa
lret
lret
enter
popf
push
pop
stc
outsl
mov
inc
fstl
notb
inc
dec
push
jo
add
inc
gs
cmp
xor
stos
or
mov
jno
sub
jmp
jle
add
loope
xchg
push
aad
leave
in
iret
adc
adc
xchg
sub
or
ret
aam
inc
mov
daa
inc
mov
mov
mov
sbb
fcoms
lcall
movsl
pop
sbb
add
cltd
out
fsubrl
push
fwait
pop
mov
bound
add
fstp
pop
ss
push
dec
xor
mov
cmpsl
lds
and
push
lret
shrl
sbb
push
test
aas
jns
test
inc
adc
das
pop
enter
push
insl
or
jmp
push
or
or
rclb
aam
jae
imul
stc
and
cmp
mov
push
cmp
movups
mov
test
insl
sbbl
jle
ja
fsubs
push
std
dec
add
cmp
fcomp
mov
push
sahf
movsb
fstpt
xor
jbe
cltd
movsl
daa
jb
loop
out
xchg
sbb
cmp
nop
das
xchg
into
xor
out
mov
test
and
cmp
addb
sub
aad
pop
add
mov
xlat
and
jp
pop
mov
add
fists
push
dec
les
cmpsl
adc
fdiv
cmp
loop
sarb
pop
mov
pop
fwait
outsb
data16
sbb
sub
inc
popl
bound
or
adc
rorb
inc
aad
nop
mov
into
mov
pop
neg
dec
pop
jge
adc
adc
dec
dec
pop
jns
hlt
adc
adc
dec
sarl
test
xor
cmc
and
pop
jno
loopne
mov
cltd
cmp
sbb
push
fxtract
xor
bound
adcl
imul
mov
inc
fdivs
add
sbb
scas
hlt
lds
hlt
dec
fdivl
push
leave
lcall
fwait
inc
sbb
into
dec
cli
loopne
hlt
test
hlt
xchg
dec
sbbl
and
xor
and
mov
shl
ret
mov
imul
lret
outsl
or
addl
inc
cmp
inc
jb
cmp
gs
mov
loope
fcomip
dec
xchg
jns
cmpsb
add
mov
mov
add
push
aas
cwtl
xchg
pop
and
cs
dec
push
cwtl
pop
inc
adc
sbb
orl
fnsave
shlb
gs
sbb
fcoms
xchg
in
movsl
xor
sbb
pop
sub
arpl
inc
orl
pop
movsl
mov
nop
push
lds
or
xor
rcrl
sub
icebp
sbb
add
jo
int3
or
inc
jne
pop
js
jle
iret
in
jnp
push
int3
in
inc
popf
mov
mov
ss
daa
sbb
adc
cmp
push
dec
mov
add
pop
inc
lea
push
std
bound
mov
pop
xchg
call
imul
mov
sub
jg
mov
adc
mov
cwtl
std
push
sub
ret
movsl
push
cmp
xor
or
cmpsl
rolb
xor
loopne
xor
adc
test
push
cltd
xchg
jns
aas
push
sub
idiv
ja
jecxz
adcb
mov
jne
cmp
lea
jb
mov
arpl
cmp
inc
mov
push
jo
xchg
cld
fdivr
js
cmpsl
std
mov
dec
dec
out
jae
into
jge
cmp
jb
mov
inc
push
imul
std
pop
aaa
js
xor
push
cmpsb
mov
xchg
mov
jmp
loopne
sub
cwtl
mov
rcr
xorl
pop
iret
jg
xchg
dec
shrb
repnz
aas
pop
inc
xlat
or
dec
movsl
aaa
sbb
fistpl
ja
add
gs
cmp
ja
sbb
lods
push
adc
mov
shl
ljmp
js
inc
inc
cmpsb
mov
stos
push
push
sbb
lret
pmaddwd
inc
inc
pop
lahf
inc
outsb
push
push
mov
cmpsb
push
cmpsb
jns
cwtl
mov
jle
out
push
xchg
jmp
shrl
mov
cltd
xchg
jno
loope
jl
inc
movq
cli
cwtl
loop
loope
in
pop
pushf
or
in
pushf
add
std
dec
cmpsl
cmp
adcb
adcb
pop
dec
in
dec
hlt
jo
call
arpl
jns
adc
push
stos
loopne
scas
xor
cmp
out
adc
jno
pop
jo
scas
mov
sbb
mov
stc
movsb
cmp
stos
out
aaa
iret
and
jp
fildl
jle
push
ds
adcl
xor
sub
dec
jae
cmpsl
push
fsubrl
cmp
rclb
out
pop
mov
pop
popa
test
hlt
mov
ds
xchg
cmp
add
repz
loop
jecxz
inc
in
stos
add
xchg
nop
cwtl
cmp
push
rcll
sbb
out
and
cli
scas
lahf
mov
or
fs
jge
ficomps
fcomps
hlt
push
pop
adc
xchg
mov
inc
add
jmp
lret
add
cmp
sub
das
push
xchg
scas
fcomip
aad
cmp
mov
out
and
rolb
fisubl
cmp
test
push
inc
inc
mov
xchg
sub
in
and
fwait
out
aam
or
mov
jae
scas
inc
dec
jne
test
inc
mov
and
aas
xor
ficompl
push
pop
adc
sbb
movsl
stos
out
sub
aam
ljmp
pop
xor
jmp
mov
or
sbb
inc
lret
mov
call
cmp
push
cli
mov
inc
pop
jecxz
gs
pop
nop
xchg
push
imul
xchg
push
stos
fwait
mov
cmc
shll
mov
movsb
and
mov
out
repz
xchg
nop
shl
xor
into
push
jns
js
push
imul
mov
xor
pushf
mov
aas
sub
inc
sub
outsb
pop
lods
je
mov
fstps
int
out
and
fsubl
push
push
pop
xchg
out
mov
shlb
test
adc
popa
addb
push
leave
add
xchg
dec
out
xchg
pop
icebp
sub
ffreep
insb
inc
dec
mov
add
xchg
push
or
inc
loop
fisubl
shlb
jbe
inc
push
scas
int
scas
fistpl
jb
repz
fbld
fs
jae
dec
jle
ja
xchg
jo
negb
jge
push
cs
aam
and
pop
fstpl
loop
out
dec
adc
shlb
cmp
fildl
mov
pop
add
clc
cmpsl
arpl
xchg
sbb
xchg
pop
sahf
xchg
pop
mov
cli
lcall
fdivrs
repnz
inc
iret
mov
es
std
xchg
cmc
adc
push
dec
add
or
and
jbe
into
sbb
push
add
popf
xchg
xchg
daa
sbb
lcall
fistpl
hlt
and
sahf
jmp
pushf
mov
dec
xlat
ret
movsb
cmp
sbb
pop
jae
fcoml
sahf
icebp
mov
or
shlb
lods
sbb
inc
aam
mov
jecxz
mov
and
sub
mov
ja
scas
mov
ja
sub
jne
and
test
sbb
xchg
or
push
pop
xor
scas
pop
imull
in
cmp
jmp
sub
mov
inc
cmp
sbb
lods
or
jnp
jl
pop
mov
push
push
into
cld
iret
jnp
incb
test
sbb
popf
xchg
add
mov
into
icebp
add
xchg
cltd
mov
cmp
xor
addb
mov
add
lods
inc
in
scas
xor
mov
xorl
push
xchg
jbe
cmc
jp
sbb
pop
inc
push
in
icebp
popa
sti
sub
dec
fstpl
punpckhwd
pop
test
mov
pop
out
cmp
cmpsb
xor
sbbl
xor
xor
outsl
cmp
lahf
icebp
ja
lds
jl
int
sahf
push
enter
outsl
iret
test
int
push
adc
mov
mov
scas
js
sbb
test
mov
outsl
inc
shrl
xchg
and
lds
mov
xchg
nop
scas
test
xor
or
sbbb
sbb
ficompl
sbb
xor
pop
leave
mov
arpl
lret
sbb
sbb
or
xor
aam
aad
xor
or
mov
loope
pop
jne
mov
icebp
add
repnz
sub
in
outsb
out
dec
adc
jo
jmp
or
mov
mov
je
inc
push
repz
mov
ret
pop
lcall
or
push
cmp
testb
faddl
cmp
aam
jno
andl
outsb
cld
ds
cs
popf
scas
sti
repnz
jbe,pt
mov
jo
push
stc
mov
leave
test
jbe
scas
sbb
gs
add
xor
movb
movsb
std
xor
std
into
xor
into
int3
pop
or
fbstp
lds
sbb
mov
je
adc
or
push
js
mov
mov
add
add
lcall
lock
movhlps
jbe
pop
in
jb
fcompl
pop
mov
stos
fisttps
fwait
aam
mov
cli
or
pop
inc
outsl
gs
jl
push
sbb
or
adc
lds
mov
push
dec
inc
push
out
inc
pop
call
cltd
jg
inc
fcomps
cmp
mov
inc
pop
jmp
ret
mov
mul
into
popf
xchg
scas
ret
imul
pop
ja
mov
xor
imul
xchg
rolb
jl
adc
movsl
int3
dec
mov
call
adc
jo
mov
out
pop
je
bound
test
xchg
imul
dec
test
jo
dec
cmp
test
inc
jbe
pop
dec
out
rcrl
in
jb
xor
sbb
ficoms
dec
push
add
leave
dec
and
mov
sbb
push
cmpsl
daa
out
aam
pop
and
mov
icebp
fdivl
adc
cwtl
add
int
js
enter
fwait
aam
add
stc
push
mov
in
lcall
inc
repnz
or
ljmp
ss
jge
sbb
jns
cmp
jbe
jno
and
test
jp
pusha
ror
cmp
cmp
push
lock
mov
pop
loopne
das
jbe
sbb
cmp
int3
sbb
cmp
dec
mov
or
add
pop
jmp
and
xlat
int
adc
fcmovnu
jmp
stos
out
push
lret
jns
jle
scas
cmp
bound
adcb
bound
xchg
int
add
insb
xor
std
adc
faddl
xor
sbb
add
icebp
sbb
fisubs
das
icebp
mov
add
mulb
xchg
fisttpl
dec
movsl
dec
mov
ja
sub
mov
jp
ja
mov
jae
push
mov
mov
and
mov
shll
or
xchg
sub
in
lock
lds
inc
pop
stos
adc
adc
or
pop
dec
jns
adc
iret
iret
inc
xchg
repnz
mov
mov
nop
stos
add
adc
jo
xor
aam
es
lock
sub
daa
cmp
icebp
fstl
lods
lret
xlat
fsubl
insb
in
mov
or
add
cmp
and
cmpsb
ror
or
loope
pop
mov
mov
cwtl
rcll
mov
and
mov
mov
movntq
cmp
in
lret
das
or
pop
aad
cmpsl
pop
inc
mov
enter
mov
mulb
call
dec
push
daa
jnp
mov
xor
cmc
pop
and
mov
cmp
mov
aaa
ljmp
mov
arpl
stc
test
fisubrl
cmp
aam
js
xor
stc
sbb
mov
ror
and
dec
sbb
push
jp
xor
not
push
mov
lods
pop
dec
loope
mov
inc
xchg
xchg
mov
mov
negb
fidivs
mov
outsl
push
loopne
mov
in
sbb
mov
test
inc
loopne
mov
andb
and
icebp
aas
scas
test
pop
mov
push
sbb
test
and
xchg
test
mov
jns
mov
es
dec
cmp
adc
mov
cmp
push
xchg
jno
cmp
dec
out
es
push
mov
sarb
dec
add
ret
inc
bound
into
mov
divl
scas
int3
fs
push
mov
or
dec
cmc
stc
adc
xchg
outsb
rcr
jg
adc
xchg
mov
adc
pop
mov
shlb
mov
adc
cmpsb
push
andb
sbb
in
leave
adc
jle
or
js
xchg
mov
mov
mov
cltd
loop
sbb
sarb
sti
push
in
add
add
dec
mov
fstl
add
or
faddp
mov
mov
sahf
nop
dec
push
or
daa
aas
xor
insb
add
mov
mov
pop
mov
out
sub
pop
xlat
add
xchg
jecxz
and
add
mov
ljmp
xor
mov
sbb
inc
sbb
mov
cli
jmp
push
pop
mov
int
dec
outsb
fwait
bound
add
push
mov
lods
roll
mov
test
mov
das
sbb
out
insb
or
mov
mov
fbld
jno
fisttps
xor
scas
into
loope
mov
movsb
fwait
cltd
adc
scas
divl
jo
pushf
inc
call
ds
sub
push
das
clc
mov
xchg
call
cmp
jbe
push
ret
dec
add
das
and
outsl
cld
xchg
mov
xchg
popa
insb
jo
popf
mov
xchg
imul
jmp
pop
sbb
icebp
mov
dec
mov
mov
fadd
and
mov
fs
int
add
andl
cmp
inc
dec
add
fcmovnb
out
cmp
imul
lods
push
sub
and
fcmove
frstor
in
es
dec
mul
mov
mov
push
sub
fcoms
pop
out
push
adc
add
je
adc
xchg
jecxz
cwtl
fsubrs
outsb
jne
inc
call
mov
cli
sub
imul
push
fiaddl
or
push
xchg
cmc
xchg
dec
mov
mov
jmp
out
mov
enter
rcr
push
and
hlt
lcall
push
shlw
sti
adc
mov
dec
mov
inc
ret
and
and
push
cmp
cmp
and
and
cld
or
sbb
mov
js
icebp
pop
cmp
inc
adc
cltd
insb
sbb
cmpsl
xor
fistl
enter
or
inc
popa
sub
sti
mov
or
call
jo
pop
jno
inc
and
jnp
push
xchg
sub
jp
in
out
jp
mov
sbb
jl
repnz
rcrb
inc
pop
outsb
dec
mov
inc
dec
xor
fwait
out
dec
sub
or
mov
dec
xchg
aad
mov
jnp
inc
mov
mov
or
xor
out
or
pusha
sbb
cmp
dec
pop
addr16
sbb
mov
inc
nop
leave
testb
arpl
mov
cmpsb
bound
loop
push
ja
lcall
xchg
shrb
sbbb
xchg
dec
pop
or
ret
cmp
aam
inc
xchg
dec
fwait
adc
in
inc
inc
push
stos
rorl
enter
or
lahf
sub
push
cmp
in
xor
sbb
sbb
push
dec
movsb
test
dec
mov
pop
call
jne
dec
adc
inc
movsl
jg
subl
emms
std
test
jmp
add
inc
xor
lahf
jbe
push
xor
filds
push
and
lods
leave
in
mov
scas
xor
inc
out
cmc
inc
pop
insb
cli
lea
into
rorb
adcb
loopne
outsb
test
test
mov
dec
ret
or
jp
mov
dec
pminub
aaa
inc
gs
bound
adc
mov
fistps
mov
icebp
repz
jb
and
cli
iret
bound
popf
punpckldq
negb
lcallw
or
inc
lret
xorb
clc
adc
jno
lods
inc
push
out
ljmp
subb
nop
pop
leave
enter
jg
cmc
fcoml
cmp
xchg
xchg
popl
sahf
cltd
cltd
leave
scas
push
sbb
addr16
addr16
gs
mov
jp
js
inc
std
xchg
mov
adcl
sub
int3
inc
outsl
pop
scas
cltd
pop
in
cli
idiv
adc
xor
hlt
jnp
push
mov
xchg
xor
sub
les
out
inc
cmpl
push
aam
push
or
mov
not
test
imul
xchg
add
xlat
adc
and
cmp
notb
xchg
and
xor
inc
jne
push
add
mov
pop
jbe
xchg
pop
fidivs
inc
lahf
imul
std
xor
in
jnp
shll
mov
jl
fnstenv
xor
mov
dec
dec
add
and
lock
fsubrs
xorl
in
inc
inc
add
data16
adc
out
mov
mov
lret
and
pop
filds
jle
mov
push
or
pop
fisttpll
in
or
mov
sar
sbb
notl
pushf
jns
push
adc
loopne
leave
iret
shrb
mov
cmp
or
pop
in
cmpsl
dec
and
lret
xchg
xchg
mov
sub
rolb
ret
push
out
lea
and
mov
sti
pop
dec
add
pop
lret
mov
or
fisttpl
cltd
sub
sbb
addr16
outsb
mov
verw
push
adc
es
popf
imul
les
icebp
mov
in
cltd
push
jo
clc
dec
call
and
cld
dec
dec
inc
sub
jmp
xor
mov
cmpsb
mov
dec
mov
fimull
jns
aas
push
daa
rorb
fldcw
push
push
and
cmpb
or
das
mov
test
cmp
push
cmp
test
movsl
repnz
inc
jnp
sub
sbb
xor
adc
cltd
addl
imul
sub
aas
loop
mov
pushf
test
loopne
int3
xor
or
add
or
adc
lahf
cmc
bound
jno
insl
lahf
je
dec
or
dec
aad
in
cs
push
sbb
pop
test
imul
push
sbbl
mov
or
pop
lds
pop
jp
js
jbe
jno
jge
pusha
cmp
jns
clc
mov
pop
imul
fcompl
adc
ret
and
mov
repnz
pop
push
xor
jmp
aas
and
cmp
xlat
sub
lea
add
test
mov
jb
xchg
pop
xchg
scas
push
pop
xchg
mov
shr
inc
xchg
popf
roll
sbb
cld
push
jp
and
iret
stos
lock
aas
aas
clc
xchg
sub
stc
mov
test
les
cmpsb
hlt
add
testl
sub
mov
test
mov
lock
lock
lock
adc
mov
and
in
sbb
add
andb
shl
sub
cld
and
jbe
iret
imul
adc
xor
add
pusha
mov
shlb
fstpl
cmpsb
add
ficoms
and
imul
xor
cli
mov
shlb
popf
xchg
and
sub
xor
push
xchg
shl
scas
mov
cs
movsl
ja
leave
das
sbb
add
into
xchg
xchg
dec
je
mov
dec
and
sbb
mov
enter
aad
xor
out
xchg
lcall
cmp
and
test
fisttpll
or
loopne
int3
stos
aas
push
jle
push
dec
roll
xchg
and
test
mov
ret
iret
xor
fs
out
mov
inc
cmpsb
movsb
add
add
fcoms
mov
loop
mov
and
sub
in
lods
pop
scas
setbe
xor
adc
sbb
xor
pop
mov
divb
dec
stos
scas
cwtl
loop
dec
leave
fs
fdiv
repnz
lret
xor
and
xchg
test
call
shrb
jp
dec
mov
or
add
pop
int
sbb
icebp
xchg
xor
je
mov
mov
mov
inc
xchg
cmp
imul
adc
or
push
mov
mov
outsb
testb
jns
scas
sub
pop
cmpsl
decl
mov
cld
add
xrelease
pop
adc
in
test
and
push
cli
test
dec
pop
jmp
jae
cli
pop
xchg
addb
inc
popf
cld
push
inc
pop
insb
leave
enter
push
inc
fs
repnz
push
sbb
outsb
leave
dec
xor
push
dec
adc
cmc
push
lds
lret
xchg
push
fcomps
mov
pusha
sub
or
dec
push
and
pop
dec
sub
popf
mov
push
jae
ret
lcall
and
pop
lcall
bound
pop
mov
shrl
sub
xor
add
popf
and
mov
mov
pop
and
sub
mov
dec
jnp
and
arpl
ljmp
iret
out
jne
xor
jns
je
es
dec
push
pop
push
test
mov
jecxz
ljmp
mov
sbb
insb
lahf
dec
cs
inc
pop
rorb
aas
pop
jo
mov
cwtl
push
fsubs
cmp
and
ret
cmp
movsb
cli
fwait
aas
cwtl
enter
aad
sti
mov
add
inc
in
and
test
mov
push
mov
clc
das
std
or
nop
sti
inc
lock
xchg
sub
inc
out
addb
outsb
test
mov
cmp
fstpt
cld
scas
adc
dec
ret
in
and
popf
cld
add
and
pop
out
xchg
sti
dec
adc
or
xchg
push
jge
mov
mov
inc
mov
ret
jle
push
fwait
mov
fstp
mov
insb
push
pop
or
call
insl
xchg
int3
sahf
test
sub
stos
xchg
xchg
stc
or
imul
les
xor
or
adcb
mov
pusha
xchg
rcrb
xchg
pop
aas
xor
lea
lret
add
xor
in
int
insl
push
xchg
in
sub
xor
in
mov
pusha
mov
pop
lcall
or
out
cmpsl
mov
imul
sti
push
loopne
add
or
cmpsb
mov
test
jge
mov
mov
pop
xchg
pushf
in
cmpsb
in
mov
pop
arpl
mov
andb
movl
add
imul
popf
out
scas
xor
int
cmpsb
mov
mov
adc
pop
adc
push
insb
leave
jge
js
cli
cmp
icebp
mov
aad
mov
mov
xchg
mov
and
dec
out
mov
lock
sub
shll
fisubrs
cmp
jae
and
leave
fsubp
insl
mov
mov
in
out
lods
xor
jbe
test
ljmp
push
ljmp
push
sbb
xchg
sub
xor
fsubrp
mov
test
cmp
sbb
and
jae
shl
sub
push
xchg
call
jb
loop
lods
mov
fwait
stc
mov
jg
push
adcl
push
aam
xchg
fnstenv
stos
into
mov
ljmp
jp
inc
int
cmpsl
imull
cmp
inc
add
add
xchg
fs
sub
out
iret
mov
inc
adc
iret
mov
adc
dec
xchg
pop
cmp
jge
ds
movsl
test
in
lock
fcoms
sub
imul
sub
adc
jg
cmp
mov
xor
scas
xor
jne
push
stc
or
int3
add
mov
push
ffree
mov
mov
imulb
push
push
mov
lods
fdivrp
test
cmpsb
ss
repz
pop
dec
fldl
mov
ret
les
mov
jnp
sub
js
sub
jge
sbb
fldl
int
and
xchg
add
lret
repnz
mov
aas
inc
scas
pop
dec
push
mov
push
lods
jg
pop
inc
sbb
jl
outsb
popf
pop
mov
pop
jle
ljmp
push
inc
imul
enter
mov
fs
ja
cld
rorb
out
loope
out
pop
pop
xchg
inc
xor
and
fsubl
dec
movaps
dec
xchg
sarl
repz
shl
lods
xor
incl
cmp
test
mov
mov
xor
and
int3
je
mov
fucomip
test
or
mov
add
insl
cmp
iret
xor
cwtl
stc
and
fldenv
push
cwtl
sub
mov
xchg
test
jl
mov
push
gs
rcrl
or
insl
fs
sub
inc
mov
dec
inc
scas
andl
and
xchg
or
iret
mov
cmp
dec
out
xor
inc
jge
pop
loop
loop
cmp
adc
shlb
unpcklps
aad
jge
aam
dec
sbb
loop
fs
mov
lahf
cmp
and
shl
fsubrs
xor
lret
lds
dec
xor
sti
xchg
sbb
mov
xchg
mov
pop
ret
je
idivb
add
mov
into
mov
mov
pop
icebp
test
movsl
popa
hlt
call
repnz
sbb
cmpsl
imul
stc
and
js
std
enter
xor
add
sub
mov
es
testb
clc
jbe
add
sub
add
and
mov
mov
sbb
repz
and
and
ss
das
dec
out
std
inc
loopne
add
mov
je
add
jmp
rorl
or
dec
jns
mov
push
gs
imul
adc
mov
push
fstl
cmpsb
push
sub
roll
push
out
fists
pop
or
sub
out
sub
out
and
scas
shll
or
movsb
mov
mov
outsl
dec
sti
insl
popf
push
icebp
pop
filds
jns
mov
cmpsb
ror
ss
or
xchg
icebp
popa
mov
fbld
xlat
arpl
jne
cs
ds
sbb
cmp
push
icebp
mov
fldenv
mov
in
test
xor
and
je
imul
pop
and
and
sub
jb
mov
mov
and
ret
and
mov
stos
mov
mov
jge
outsl
adc
in
shr
addr16
mov
int
mov
mov
insl
int3
xor
xorl
mov
jmp
in
insb
mov
sbb
push
fbld
mov
jge
mov
mul
push
xchg
clc
adc
mov
mov
shll
lods
lret
mov
into
mov
int3
xchg
loop
enter
je
mov
xchg
or
arpl
call
jg
jecxz
cmp
xchg
pusha
jbe
test
fisttps
data16
push
cmp
dec
mov
jecxz
xchg
nop
and
xor
jae
sarl
into
adc
xlat
dec
adc
or
jg
inc
sub
xor
mov
mov
push
sub
jno
stc
call
pop
stos
or
lds
stc
outsl
ljmp
push
ds
cld
rorl
mov
push
icebp
sbb
or
sbb
xor
imul
and
mov
sub
pop
push
jo
mov
xor
clc
mov
xchg
push
add
and
bound
cmp
test
pop
imul
xchg
out
jbe
ds
in
sub
hlt
and
mov
mov
mov
idiv
mov
jno
jle
sbbl
sub
push
pop
inc
fimuls
jle
or
jmp
loope
bound
mov
test
push
jno
push
shll
mov
les
adc
out
test
sbb
mov
xor
enter
cmp
mov
arpl
mov
xchg
jb
push
dec
jmp
sub
xchg
in
or
repnz
das
test
jno
cli
push
cmpsb
ljmp
fistl
arpl
cmp
dec
push
pop
cmp
sbb
mov
sbb
loop
aas
push
fs
push
sbb
and
lods
jle
std
cmp
scas
xchg
dec
adc
dec
fimuls
test
cmp
in
cmp
or
leave
cli
cmpsb
pop
and
xor
shl
sbb
mov
and
and
pop
js
clc
xor
push
outsl
in
push
pop
mov
stos
or
cs
jg
std
xchg
pop
jbe
inc
xlat
ficomps
cld
inc
cltd
inc
shlb
pop
push
int3
and
mov
sbb
mov
push
out
lds
xor
hlt
int
cli
push
jp
lcall
subb
pop
jno
jge
pusha
lahf
movsb
or
jnp
mov
push
shll
aas
out
int
mov
pop
push
sbb
cltd
out
pop
rcrb
ss
fcomi
call
in
jb
adc
mov
mov
push
mov
mov
ja
ja
dec
cli
pop
lods
loopne
bound
sti
push
shlb
mov
addr16
sub
sahf
mov
add
add
pop
insb
dec
leave
rcr
mov
lret
iret
ficoms
shl
cmpsb
jnp
les
popa
mov
mov
fdivp
sub
pop
call
popa
jecxz
push
mov
in
inc
mov
mov
cld
pop
mov
jl
push
nop
fldl
cmpsl
in
lea
jne
shlb
imul
mov
test
daa
das
mov
xchg
cli
mov
call
sbb
xlat
pusha
arpl
add
push
into
cli
sub
test
mov
sarl
mov
mov
lcall
je
push
insl
cmc
sarb
xor
fiadds
in
out
loope
rcrl
cmp
add
mov
std
dec
or
add
addr16
ret
movsb
fldenv
in
push
lods
clc
mov
mov
repz
dec
sahf
adc
cs
dec
hlt
mov
mov
movmskps
ret
paddsw
jmp
dec
xor
inc
mov
sahf
stc
int
mov
xor
test
jne
jae
mov
push
jnp
inc
stc
inc
stos
test
add
cltd
adc
cmp
outsl
inc
mov
adc
sbbl
jbe
inc
mov
push
int
mov
mov
dec
adc
mov
outsl
inc
aam
das
jns
ret
sarl
pop
ret
mov
push
les
int3
sbb
das
shll
or
cmp
in
push
stos
icebp
test
xchg
insl
outsl
cmp
inc
mov
push
scas
ss
add
or
add
mov
out
add
push
das
mov
aaa
xchg
popa
push
xorb
mov
inc
dec
pop
push
mov
sbb
dec
pusha
sbb
pop
std
cmp
out
mov
sbb
in
push
add
cmp
xor
mov
js
dec
je
pop
nop
rorb
fcom
xor
test
fs
nop
lods
push
xchg
mov
lret
mov
xor
les
data16
and
xor
add
sub
ret
leave
dec
loope
adc
mov
add
out
subl
rcrl
insl
outsb
and
mov
mov
cmp
in
xchg
inc
jl
sti
sub
mov
and
pop
inc
or
and
rolb
test
mov
sbb
push
mov
dec
mov
dec
or
mov
mov
lds
adc
pop
sub
pop
test
add
sbb
jmp
outsl
shld
xor
jp
pop
xor
in
loopne
pop
std
inc
lods
sbb
cli
sti
sar
add
mov
adc
lahf
cmpsb
jnp
cmc
jnp
push
sub
jne
or
add
ja
int3
pop
add
adc
lods
sbb
push
mov
sub
adc
add
sub
xor
xor
adc
jae
lcall
mov
inc
out
call
pop
dec
subb
mov
jb
xor
enter
adc
mov
push
ja
mov
inc
jb
xor
jecxz
cmp
fistpl
pop
cmp
mov
push
push
je
push
mov
jl
pop
and
mov
lcall
sub
pop
mov
das
xchg
movsl
add
xchg
movsl
pop
enter
push
lea
jl
cmp
and
inc
and
pusha
or
push
les
push
push
hlt
sbb
insb
and
daa
pop
test
sarl
lret
adc
xlat
jb
cmp
insb
xlat
call
pop
arpl
movsl
out
inc
jg
rcrl
mov
xchg
inc
fadds
mov
lahf
fmul
jno
mov
lcall
pop
mov
pop
movsl
imul
inc
mov
jp
push
addr16
sub
data16
into
pop
sbb
pop
add
jmp
or
out
mov
or
pop
pop
pop
ret
dec
sub
call
rolb
nop
inc
xor
add
mov
xchg
dec
lahf
push
and
adc
sbb
fnsave
mov
sbb
loope
lret
in
push
pop
sbb
cmp
enter
xchg
mov
mov
jp
loopne
cmc
add
shrb
test
inc
in
adc
xor
jecxz
jmp
sti
sahf
push
test
mov
test
dec
and
push
pop
repz
fs
sbb
lock
cld
out
mov
imul
cmp
jo
mov
xlat
sub
mov
xchg
out
cli
lret
cli
xchg
adc
jg
add
and
or
imul
push
cmpsl
xor
dec
lds
push
mov
std
ss
mov
stc
ss
xlat
lods
pop
ret
mov
decl
jp
xchg
sbb
adc
xor
cmp
testb
test
loopne
and
xchg
jae
arpl
inc
inc
jl
ret
xor
ds
in
mov
cmp
stos
and
push
lret
ror
mov
std
push
mov
add
pop
loop
das
loope
add
or
cmpsb
test
jp
hlt
sub
ret
mov
mov
movsb
leave
aas
sub
pusha
cmp
mov
add
sub
sbb
insl
push
dec
pop
mov
ja
add
lea
mov
shlb
leave
xchg
jl
dec
jge
pushf
popa
js
stos
lcall
jne
js
jge
stc
ss
push
inc
adc
inc
popf
hlt
cmp
in
inc
jnp
shll
and
dec
out
push
nop
sub
lahf
add
sub
cmp
dec
and
xchg
adc
jns
test
jle,pn
stos
test
push
mov
cmp
sub
js
negl
shll
imul
jmp
xchg
imul
cmpsb
insl
je
das
jl
popa
movb
imul
cmp
pop
or
imul
movsl
ficompl
lea
inc
and
pop
push
cld
or
ss
lahf
test
aad
cli
pusha
in
andb
les
lock
and
jo
mov
movsl
in
stc
mov
iret
clc
lret
repnz
out
lret
lret
scas
leave
mov
cltd
pushf
andl
adc
stos
hlt
jo
mov
pop
fldenv
jns
pop
adc
jne
movsb
aas
sub
arpl
dec
push
cs
cmp
fadds
das
pushf
cmp
or
scas
or
in
call
xor
test
aam
sub
dec
ljmp
and
in
xorb
mov
movsb
inc
repnz
inc
lock
adc
lods
mov
fdivr
pushf
jg
insl
lock
xchg
icebp
dec
inc
lcall
pop
push
ljmp
mov
add
pop
push
into
pop
sub
scas
mov
scas
push
in
into
outsl
push
sbb
pop
mov
inc
sub
push
push
dec
outsb
out
lock
out
adc
pop
shlb
jl
sahf
adc
sbb
cld
push
or
adc
mull
jmp
pusha
adc
fistpll
adc
lods
scas
popa
lods
push
mov
jnp
jle
xor
and
lods
mov
xor
xchg
adc
les
sub
insl
shl
and
bound
icebp
int
std
ret
cmp
loopne
iret
or
inc
outsl
mov
les
and
in
fdivs
pop
inc
jb
pop
in
call
ljmp
rorl
xchg
mov
add
rcrb
movsl
add
push
int3
push
and
mov
sub
fmulp
mov
jg
dec
mov
ret
out
mov
lret
in
imul
jle
xchg
sub
rcrl
push
xlat
icebp
and
mov
inc
dec
push
in
ss
subb
in
ret
xchg
rcrl
dec
ljmp
lods
pusha
lret
cmp
std
jl
repnz
and
fwait
pop
or
mov
test
sub
addb
xchg
loop
adc
out
cmp
push
pop
stc
int3
or
and
add
sub
movsb
rclb
popa
sub
jne
fildl
sbb
jo
pop
add
inc
pop
mov
pop
sub
rcrl
aas
mov
rclb
loope
jns
fisubrl
sub
cltd
sub
add
and
outsl
stos
xchg
push
push
lea
jnp
and
push
stc
out
femms
xchg
xor
sbb
push
movsb
fincstp
fisubs
out
push
lds
popa
jne
out
push
add
mov
jmp
add
jnp
ret
clc
push
jmp
cld
and
sub
test
mov
out
sub
std
lods
add
inc
pop
mov
movsb
lret
pusha
lds
and
inc
out
mov
add
stos
mov
xlat
add
jle
and
or
pop
cmpsl
int
inc
push
pop
xor
lret
lcall
dec
iret
stos
mov
aad
clc
fnstsw
outsb
std
ja
mov
pop
xchg
in
sub
xor
jl
iret
adc
sti
ret
in
xchg
pop
xchg
and
into
pop
daa
mov
sub
sbb
mov
je
notb
addr16
out
and
arpl
dec
ljmp
sub
push
push
inc
and
cmc
dec
icebp
addr16
js
jg
sub
stos
jb
push
lock
mov
jp
and
mov
movb
outsb
and
aaa
popa
test
loopne
lahf
push
push
xchg
add
sbb
mov
jae,pt
repz
dec
mov
mov
xor
ja
shll
call
dec
ss
jp
push
pop
pop
xlat
sar
lret
xor
test
or
lock
and
xchg
sbb
js
mov
mov
xchg
xor
pop
push
cwtl
jecxz
pop
jns
pop
mov
arpl
add
add
mov
dec
xchg
sub
mov
test
jmp
sub
pop
les
cmp
outsb
test
nop
sti
push
xor
pop
test
mov
in
push
mov
test
mov
mov
add
sarl
dec
push
xor
or
mov
mov
mov
mov
mov
shrb
flds
push
or
push
bndstx
xchg
jecxz
adc
sbb
ljmp
icebp
sbb
pop
mov
lahf
xlat
int
incl
out
shr
xor
les
mov
fwait
xor
ror
gs
test
jb
lods
mov
lea
inc
sub
dec
jnp
mov
mov
mov
rol
mov
fnstenv
or
pop
das
dec
stos
test
mov
mov
and
test
wrmsr
scas
fbld
jge
addl
inc
out
scas
cs
les
push
popf
aam
sub
out
ljmp
outsb
pop
test
mov
xor
andl
adc
jp
lahf
mov
stc
ret
aaa
xor
ror
pop
les
shlb
add
push
or
mov
data16
sbb
int3
xor
insb
inc
dec
inc
insl
and
hlt
or
mov
xchg
lods
mov
or
icebp
or
sbb
rclb
icebp
xchg
jo
push
push
sbb
mov
iret
sbb
stos
jp
stos
jno
fistpl
mov
lea
cmp
fwait
int
lods
sahf
push
jmp
jno
mov
push
test
test
incb
sbb
pop
cmp
xchg
and
subl
or
xor
mov
in
inc
sub
fs
or
inc
cmp
pop
fmuls
push
cmpsl
jecxz
jb
or
lretw
jl
xor
mov
inc
jg
fmull
mov
mov
stc
xor
mov
sarl
sub
lret
push
cmp
mov
js
out
pop
cmp
xor
insb
enter
add
loop
jge
cli
hlt
std
lods
aaa
repz
shlb
pop
fsubrs
xor
in
aam
js
or
into
je
adc
aam
leave
scas
ror
jecxz
lods
shll
imul
inc
xchg
pop
nop
leave
negl
pop
adc
mov
cld
popf
orl
mov
mov
fsubl
inc
mov
dec
pop
and
dec
out
iret
add
jns
jle
jge
movsb
mov
fldcw
ficompl
nop
xchg
mov
xor
dec
outsl
mov
add
mov
bound
sbb
lods
jle
popa
jl
in
pop
insl
mov
and
stos
add
adc
dec
mov
mov
pushf
sub
mov
pop
xlat
mov
fdivp
mov
pop
lods
sub
cmp
or
loop
pop
sbb
xor
dec
adc
ret
jno
loop
testb
adc
popf
cltd
jmp
imul
pmaddwd
and
insl
sub
and
daa
mov
test
hlt
pop
lock
push
adc
test
insb
call
popa
push
dec
push
xchg
daa
int3
cmc
sub
adc
out
into
dec
sub
cmpl
xor
cwtl
cs
or
and
int3
xor
mov
inc
decl
mov
and
ljmp
stc
mov
pop
ljmp
jnp
lock
lods
cmp
xor
adc
sbb
xor
lcall
std
dec
out
sub
dec
mov
test
jb
inc
fwait
gs
lods
sub
ret
lcall
movsl
lods
pop
and
cmp
pushf
daa
mov
mov
ret
cli
repnz
movsl
jp
and
inc
inc
cltd
dec
dec
and
fsubrs
mov
loopne
mov
fadd
or
out
dec
mov
cmp
std
and
or
in
sub
test
inc
test
sar
stc
cmp
xchg
sarb
jge
mov
daa
and
jg
mov
jb
inc
in
flds
inc
outsl
icebp
pop
add
xchg
rorl
andb
movsb
popf
xlat
lret
xchg
xchg
mov
cwtl
clc
dec
dec
xchg
dec
sub
cmp
fidivrs
dec
shll
rol
pusha
inc
cld
hlt
push
xchg
push
jle
inc
test
and
jg
scas
pushl
sub
enter
cmp
push
movsl
push
inc
repz
icebp
xchg
repz
repnz
lea
rcrb
push
mov
mov
push
pop
test
scas
ret
xchg
cmpsb
jns
idiv
cmp
push
sbb
jp
jp
imul
not
in
clc
xor
cs
or
pop
and
repnz
cmp
stc
imul
sbb
ret
xor
movsl
and
sub
decl
jno
scas
ss
pop
xor
pop
sahf
xchg
cmpsl
mov
clc
inc
loop
movsl
sbb
xchg
ljmp
sub
mov
xchg
lea
pusha
xor
cmp
jge
or
push
jmp
dec
mov
xor
mov
test
ds
and
roll
mov
sub
sti
nop
nop
dec
gs
cmc
inc
mov
xor
and
and
dec
mov
je
inc
or
mov
lock
push
adc
decl
mov
int3
dec
sbb
sub
bound
mov
push
stc
stos
mov
mov
out
mov
or
dec
sar
lret
es
int
pop
dec
dec
in
or
xor
adc
addr16
lock
push
je
mov
cli
ret
lret
mov
mov
iret
pop
fnstcw
add
mov
and
push
push
xchg
int
out
sbb
pop
mov
xchg
pop
in
jg
push
iret
cli
cld
jl
mov
mov
jp
insb
clc
push
sahf
nop
add
jp
inc
dec
mov
imul
fnstenv
push
call
mov
lcall
subb
sub
subb
fmull
in
mov
testb
fistpl
jno
or
pushw
mov
out
movsb
jmp
ret
jmp
mov
out
dec
std
in
hlt
cmp
xchg
cmpsb
daa
xor
stos
subl
push
mov
dec
aam
cli
push
push
adc
xchg
xchg
dec
lods
jecxz
lcall
pop
inc
lock
idivl
push
mov
jne
inc
fistl
lahf
inc
call
xchg
mov
sbb
push
loop
icebp
das
arpl
mov
or
fnop
mov
outsb
push
mov
mov
mov
mov
cmpsl
sbb
shlb
mov
and
push
sti
cltd
imul
andl
ja
movsl
and
insl
divb
je
push
lret
sbb
inc
call
pop
jl
jno
push
aas
mov
repz
add
test
cld
je
adc
lcall
pop
call
rolb
push
lea
pop
loopne
in
mov
or
clc
add
pop
outsl
orl
mov
xor
jo
push
sub
mov
jb
jb
sbb
mov
mov
add
cli
xchg
push
aaa
mov
mov
divb
pop
cmpsl
fadds
cmp
fxtract
rclb
jnp
es
addl
out
mov
xlat
pop
adc
and
je
sbb
inc
xor
mov
outsl
add
cmpsb
mov
lahf
jno
sbb
icebp
lret
das
push
outsb
mov
ljmp
bound
movsl
jnp
ret
dec
push
pop
mov
mov
stos
sbb
gs
arpl
adc
out
xchg
or
movsb
inc
jmp
sahf
dec
movb
xor
pop
mov
xor
fwait
in
lahf
roll
iret
sub
dec
and
mov
push
outsl
jbe
out
inc
movsb
in
inc
adc
mov
cmp
and
lret
xchg
sbb
pop
arpl
sbb
ret
shrb
xchg
xor
jno
std
movsl
rolb
cmp
push
jns
mov
xchg
in
push
jge
bound
xchg
xchg
in
mov
push
and
and
in
fadds
sti
scas
jge
cmp
lcall
std
out
mov
mov
fwait
inc
repz
cmp
cmpsl
add
stos
or
jbe
or
or
idivb
movsb
fidivrl
bound
fimuls
xor
push
jae
or
sbb
push
cld
icebp
ret
sub
sub
ds
dec
jb
loop
adc
shll
pop
cmp
jbe
mov
cltd
sub
in
adc
int3
xchg
test
fstl
push
mov
pop
pop
and
add
stos
popa
and
sub
pusha
pop
cwtl
cli
jmp
mov
xchg
jl
insb
xchg
sarl
adc
inc
sub
icebp
adc
and
cwtl
aaa
test
lea
ljmp
pop
insl
repnz
jle
loop
and
and
pop
jne
adc
or
fsubr
xchg
inc
and
push
push
push
sbb
test
push
stos
stc
nop
mov
xor
js
neg
mov
shl
push
ds
jo
fistl
fwait
test
push
xlat
loope
js
mov
outsl
fisttpl
pop
fisubs
jno
mov
push
or
jne
sbb
arpl
push
ja
mov
or
lcall
push
int3
fldcw
cld
mov
mov
sahf
pop
sub
or
xchg
cmpsb
push
or
sbb
pop
fisttps
popa
data16
aaa
cmp
enter
and
sti
lcall
jmp
cld
icebp
ret
jge
repnz
jg
icebp
fs
sub
scas
rcrb
enter
xchg
sbb
inc
mov
bound
and
lret
lock
xlat
mov
mov
bnd
fs
jmp
xchg
enter
dec
xor
dec
and
pop
insb
stos
test
xor
inc
fsubrs
lret
add
gs
dec
mov
std
lods
push
sub
xchg
call
mov
movsb
inc
ja
cmp
jnp
test
pushf
adc
jg
popf
lahf
push
add
test
add
lea
fwait
mov
add
xchg
fbld
push
pusha
arpl
sub
push
jle
inc
adc
js
dec
mov
adc
push
pusha
mov
inc
pop
lret
jb
cmpsb
dec
mov
pop
addl
pop
jno
dec
xor
jo
push
push
dec
mov
sub
mov
pop
and
sbb
or
sti
adc
mov
lock
enter
push
js
pop
mov
pop
xor
lahf
or
mull
adc
arpl
xchg
jl
test
pop
jb
xor
sbb
test
adcl
xor
pusha
pop
mov
mov
mov
bound
push
dec
pushf
imul
sub
rol
xlat
dec
xor
rclb
xor
push
bnd
mov
mov
push
push
movsl
add
scas
dec
test
push
push
xchg
adc
xor
mov
mov
sti
xchg
mov
jno
adc
push
ret
xchg
and
xchg
out
repz
pop
dec
mov
into
or
sahf
jnp
cmpsl
lcall
pop
ror
jnp
sbb
and
lret
sbb
pop
sub
inc
xchg
ljmp
fdivr
test
das
cltd
movsb
adc
add
pop
test
sbb
add
xlat
jnp
xchg
jecxz
xorb
lea
ljmp
popl
hlt
sub
idivl
pop
xchg
out
dec
lcall
cmpsl
dec
in
test
lea
xchg
mov
cmp
shl
cmp
push
mov
xchg
shlb
sub
rolb
xor
test
lcall
cmp
in
mov
aam
movsb
push
jecxz
cmp
inc
loope
in
insl
mov
popa
xchg
or
mov
lock
push
mov
dec
dec
xchg
inc
xchg
movsb
or
push
sub
adc
push
xchg
sub
icebp
das
mov
cmp
sbbb
pop
sbb
dec
fildl
sbb
xchg
xchg
jp
ret
adc
pop
jbe
dec
test
inc
ljmp
cld
cmp
scas
out
sub
in
das
lcall
aas
and
mov
push
js
mov
cs
cmp
mov
cltd
mov
mov
xchg
loop
xchg
inc
movsb
inc
std
dec
xor
in
xchg
jmp
add
sbb
pop
pop
sub
scas
jo
int3
fildl
xchg
mov
xor
inc
fldl
jge
sbbl
cli
mov
push
xchg
aam
adc
adc
int3
ficomps
cmp
jno
or
jns
mov
shrl
popf
notb
xor
jg
icebp
cld
dec
jl
push
test
cli
fldcw
lods
ja
loope
leave
imull
lock
push
ret
inc
adc
cmpsl
cltd
mul
cmp
ja
cmp
and
sub
clc
and
loope
xchg
pushf
inc
xchg
sub
sbb
sti
aaa
jb
cmpsb
es
add
imul
insl
das
pop
aas
mov
test
jae
sbb
scas
shll
mov
and
je
sahf
lahf
and
adc
test
imul
pop
jno
inc
insl
movsl
and
or
push
std
ret
pusha
pop
icebp
insb
mov
sti
arpl
mov
xorb
cmp
jno
and
aas
mov
adc
or
out
lods
icebp
and
or
adc
pop
scas
out
scas
aaa
call
mov
push
popf
aas
lods
xor
pop
subl
ljmp
aad
sbb
xchg
fiadds
add
dec
ret
sbb
push
out
push
xchg
xchg
enter
push
movsb
sbb
aad
push
jae
sub
mov
sti
call
jnp
xor
jno
dec
ja
mov
xor
push
sar
pop
jno
inc
test
xor
test
das
lods
movsb
loope
or
cmpsl
pop
or
je
out
insb
push
push
adc
mov
popf
pusha
outsb
jb
or
sbb
adc
fs
mov
cmpsb
clc
push
adc
in
sbb
dec
xchg
jge
aas
lds
push
fildl
mov
test
push
pop
push
xchg
push
jns
lahf
inc
sarl
mov
lcall
push
sbb
gs
movsl
hlt
lea
xchg
xor
mov
cltd
dec
add
std
aad
adc
loop
mov
leave
mov
mov
mov
inc
inc
icebp
aam
dec
pop
sti
mov
sbb
ret
push
xchg
sub
jp
jb
mov
sti
dec
repnz
jne
push
cmp
sbb
jle
stos
pop
jg
fsubs
mov
add
das
sahf
mov
fisubrl
and
daa
inc
sbb
jae
push
mov
sbb
mov
out
mov
or
add
and
inc
or
xor
cmp
sub
imul
xlat
mov
es
stos
mov
gs
push
sub
xor
adc
xchg
jl
cs
cltd
sbb
dec
std
out
ret
pop
rcrb
mov
sub
sbb
int3
and
xchg
xor
jp
scas
push
inc
ret
mov
cwtl
sub
and
inc
stos
cwtl
mov
pushl
ret
sub
insb
jl
shlb
call
lcall
scas
inc
stos
mov
dec
fwait
sbb
add
xchg
sub
in
cli
lahf
ss
enter
mov
mov
jns
mov
cmpsl
jb
fs
xchg
lret
add
pop
lods
sbb
in
pop
fwait
mov
fs
cmp
cli
cmpsb
test
and
add
test
mov
shrb
loope
xchg
cmp
mov
push
jo
mov
adc
in
fsub
bound
push
pusha
stos
shl
inc
add
adc
pop
iret
pop
mov
or
or
sub
mov
or
xchg
inc
adc
xorb
mov
mov
push
dec
shrb
pop
ds
addr16
dec
or
and
push
push
into
in
dec
xchg
push
std
mov
sub
jg
jnp
push
xchg
imul
lods
push
push
jge,pn
hlt
out
add
inc
hlt
aaa
mov
jl
lret
sbb
icebp
and
or
sbb
insb
out
in
sbb
or
cmp
mov
xor
test
loopne
pop
jmp
mov
dec
leave
xlat
cmpsb
loopne
aad
sti
push
sbb
sbb
in
arpl
add
shll
or
stos
sarb
and
insl
js
jae
xor
fiadds
pop
out
push
cmpsl
push
pop
push
xlat
inc
lea
rolb
popf
push
insb
imul
adc
leave
cmp
or
mov
cli
decl
adc
shr
testl
js
jns
sahf
push
pop
cmpb
test
test
cmp
inc
xchg
sub
add
aaa
push
notl
pop
jecxz
xchg
sub
hlt
mov
aaa
pop
lret
icebp
enter
data16
pop
fidivrs
mov
iret
sub
dec
jae
ss
push
jno
lds
cmp
push
dec
popf
mov
cmp
and
lock
into
ja
inc
shrb
leave
ljmp
mov
mov
fldl
sti
jns
or
add
add
in
popf
repnz
push
jnp
mov
mov
sahf
insb
test
pusha
cmp
mov
jb
cmpb
push
push
mov
fdivrl
pop
push
mov
fisttpl
mov
movsb
aad
add
pusha
pop
in
mov
jns
jae
xchg
imul
imul
leave
mov
shll
icebp
popf
inc
push
fistpll
add
sahf
ret
jp
hlt
popf
and
ja
movsl
insb
dec
faddl
mov
pop
clc
push
addl
inc
daa
nop
mov
sbb
lock
dec
pop
cmpsl
and
push
clc
push
pop
std
test
cmp
rcll
add
dec
push
xchg
mov
aad
and
pop
cmp
mov
incl
push
arpl
jge
push
xor
jmp
or
cmp
push
pop
mov
fwait
and
jno
cmovae
mov
cmp
xchg
js
pop
jo
pushf
add
or
mov
push
dec
xchg
stos
jmp
and
stos
mov
cmp
pop
dec
stos
icebp
lods
add
add
call
stos
and
xchg
aad
dec
shrl
ret
dec
mov
push
pop
stos
lret
aad
sub
jno
jp
and
roll
sahf
sub
shrl
popa
jb
mov
xchg
cltd
mov
pop
jmp
out
insl
scas
jne
imul
test
test
mov
mov
cmp
pop
dec
test
jnp
int3
sbb
movsl
pop
sti
adc
mov
ljmp
pop
imul
pop
or
test
lret
push
ds
roll
test
and
or
in
mov
sbb
dec
or
mov
hlt
cmp
es
bound
pop
cmp
cmp
ds
aam
adc
xor
jbe
jecxz
mov
popa
inc
mov
mov
lcall
jo
aam
shl
mov
cld
imul
push
mov
inc
aad
pop
mov
fucomi
mov
gs
mov
pop
mov
cmc
add
pop
mov
repnz
les
rclb
jl
data16
mov
adc
mov
inc
test
shrl
fisubs
mov
and
cli
mov
pop
shll
pusha
scas
xor
xchg
in
mov
aas
movsl
sbb
addb
addl
dec
cmp
xchg
and
out
inc
enter
jecxz
cmpsl
popf
lock
cmp
or
iret
sub
popa
in
sbb
scas
pop
sub
fcmovb
ret
sarl
xlat
cmp
xor
and
dec
ss
push
jnp
mov
icebp
push
inc
sub
das
sub
scas
and
stos
cld
mov
out
jbe
addr16
fcomps
mov
imul
dec
movsl
les
rolb
xchg
pop
mov
arpl
sub
repz
mov
mov
leave
repnz
mov
push
cmp
lods
lds
cmp
mov
shll
fsubrl
sub
push
aad
and
rolb
fs
mov
adc
and
xchg
push
push
mov
lret
mov
mov
jno
int
cmp
push
inc
lds
std
pop
movsl
lock
push
test
test
inc
ljmp
std
movsb
mov
inc
imul
xor
int
cmc
add
lret
mov
aas
in
jecxz
mov
out
std
jmp
pop
gs
out
xchg
das
fdivrs
jb
sub
js
jno
loope
ds
jo
sbb
mov
push
insl
cmp
push
or
int
xor
out
sub
or
push
into
daa
mov
loopne
xchg
lea
andl
ds
push
cmp
sbb
mov
fwait
mov
testb
cmpsl
movsb
mov
pop
pop
testb
jmp
xor
addr16
iret
pop
mov
pop
movsb
incl
int3
rclb
push
stc
inc
fcmovnb
push
in
sti
or
and
push
lcall
mov
mov
xchg
dec
imul
sub
pop
lret
adc
cld
or
sub
mov
ja
push
mov
lcall
popf
in
adc
cmovle
aad
std
cmc
xchg
dec
sbb
jp
sbb
add
inc
push
movb
lret
outsb
cmp
dec
or
outsb
xlat
loop
out
ret
pop
or
jp
xchg
dec
dec
cmpsb
bound
pop
sbb
sub
cmpsb
fld
int
jnp
scas
repz
sbb
jb
imul
arpl
xor
cmp
lret
push
add
mov
pop
lcall
ds
xchg
mov
gs
mov
ficompl
jge
sub
xor
fbld
jg
xchg
xor
mov
into
mov
xchg
cwtl
pop
mov
fwait
inc
fdivr
jnp
sbb
adcl
xor
int
lods
cld
test
jno
jo
xor
pop
lods
ficoms
in
mov
mov
xor
cmp
inc
int3
incl
add
inc
loop
insb
int
add
sbb
std
sub
cs
sbb
push
xchg
in
xchg
cmp
adc
or
add
cwtl
push
into
jge
test
gs
sub
push
xchg
inc
call
js
cmp
cmp
ss
push
dec
fisubs
into
hlt
mov
int3
mov
bound
fstpt
dec
adc
adc
jmp
in
jg
lock
icebp
add
pusha
outsl
push
mov
bound
jns
dec
xlat
jo
inc
psrlw
hlt
push
ret
repnz
jae
fidivs
sbb
in
cld
dec
cmc
lcall
jo
mov
aas
push
mov
rcrl
jl
lahf
testl
jle
in
imulb
fs
mov
pop
stos
mov
rcr
pop
leave
push
aaa
sub
mov
add
imul
push
adc
stos
dec
mov
loope
pusha
push
push
jg
mov
cmpl
test
cs
inc
fists
test
adc
test
mov
insl
push
cmp
pop
push
lcall
inc
ret
negl
loopne
mov
or
enter
adc
outsl
ds
inc
test
push
add
jl
jne
or
jno
jp
dec
ret
add
jns
adc
sahf
enter
cmp
adc
lcall
call
inc
bound
and
lds
int
nop
inc
jae
adc
test
and
lahf
sub
scas
push
shll
jmp
add
pop
stos
xor
clc
mov
xor
cmp
sbb
sub
scas
add
js
in
repz
inc
in
or
fdivr
jge
sahf
sbb
je
sbb
in
cmp
push
loop
cmpsl
add
mov
ds
push
shrb
push
dec
and
lahf
push
push
lret
cmpsb
mov
ja
cs
out
pushf
clc
jnp
lds
inc
cmc
add
jb
adc
lret
rclb
arpl
in
adc
sub
jno
push
mov
xchg
stc
push
and
add
xor
repz
repnz
adcl
add
leave
popa
or
push
or
add
insl
push
mov
pcmpeqw
fstps
imul
inc
or
stos
push
jns
mov
adc
jne
inc
std
mov
mov
test
mov
ljmp
jne
sbb
pop
mov
insl
rclb
jmp
stos
aas
push
out
icebp
pop
adc
or
lds
jecxz
xchg
mov
andl
push
mov
pop
imul
sub
adc
cmp
mov
mov
mov
dec
xchg
pop
es
mov
inc
and
int3
out
and
push
stc
mov
dec
xchg
xchg
clc
mov
cmp
inc
fwait
xor
dec
or
inc
push
xchg
fmull
mov
dec
jne
dec
or
lea
cmp
insl
mov
add
inc
loopne
orb
aas
xor
ljmp
movsl
aad
mov
add
push
daa
imul
and
or
or
fdivrs
mov
jmp
and
loop
and
repnz
mov
sbb
es
je
mov
aad
shrl
cmp
cmp
in
or
or
out
subb
lods
and
pop
rclb
lret
sbb
lahf
repnz
jl
dec
and
jp
jge
mov
cmp
ret
jno
inc
xchg
popa
xlat
outsl
hlt
sub
pop
mov
cmp
insl
ja
jne
adc
dec
ss
fsub
sub
sbb
insl
jp
sub
les
stos
mov
add
sahf
cmp
loopne
mov
pop
adc
inc
xor
call
and
fwait
test
sbb
out
ror
sti
in
jge
mov
in
push
and
imul
fcmovu
bound
cmp
sub
sti
insb
in
enter
xchg
mov
pop
rcl
xchg
scas
dec
or
lock
testb
cmc
mov
dec
test
das
dec
lods
jno
sub
push
dec
in
cmp
pop
out
xchg
fldl
loope
fisubs
aam
cli
cmp
mov
pop
jge
push
pop
dec
rcrl
fcmovne
xor
repz
mov
jl
jne
adc
dec
out
lock
call
decl
cmp
dec
sbb
out
jns
sbb
adcb
movsb
dec
push
or
je
and
and
cwtl
jg
int
int
xchg
mov
insb
xlat
xorb
xor
sbb
fwait
xchg
jns
lahf
push
loop
jno
pop
jl
xor
add
nop
jbe
ljmp
fstps
into
push
inc
repnz
jle
in
neg
mov
or
rcrb
fnstcw
sub
xchg
mov
push
call
fists
jl
xchg
dec
ss
loop
adc
pop
sbb
or
fcoml
jp
cmc
push
stos
lret
std
and
fcompl
or
cmp
lea
dec
add
push
pusha
jbe
lock
loop
mov
ljmp
push
push
and
data16
pop
mov
pop
fistps
sti
stos
push
aaa
add
imul
and
mov
add
and
lret
in
aad
das
andps
and
int3
push
sti
xchg
loope
push
cmpsb
cmp
inc
shrl
xchg
loopne
cmp
cs
xchg
stos
mov
sub
mov
push
test
test
insb
repnz
mov
inc
mov
mov
xor
sub
cmp
xchg
cli
andl
rcll
xchg
js
adc
sub
push
fs
jecxz
cmpsl
pop
test
clc
fsubrl
cmc
ss
push
adc
jge
pop
inc
sub
sbb
popf
decb
loop
movsb
inc
ret
add
pop
out
jmp
pop
les
mov
inc
xchg
push
fcmovbe
mov
mov
fbstp
mov
fs
jg
and
pop
dec
mov
mov
dec
xor
ds
adc
push
adc
repz
lock
xor
sarb
inc
ja
inc
xor
jg
and
bound
cs
mov
jle
add
sbb
push
nop
in
fs
mov
fimuls
inc
pop
andb
es
add
xor
call
pop
lock
inc
dec
movsb
xor
jmp
or
jnp
js
aad
scas
mov
pop
mov
pop
int3
cmp
push
ja
and
sub
sub
fbld
add
shll
push
jne
add
rep
cmp
mov
sub
mov
je
stos
push
mov
fildl
cmpsb
or
inc
test
xchg
adc
sbb
scas
out
aam
data16
dec
or
push
test
scas
mov
in
gs
enter
mov
pop
push
imul
lock
fistl
gs
loop
inc
repz
call
adc
and
cmp
stc
into
icebp
mov
pop
cs
dec
and
cli
lea
fcomip
and
out
push
mov
mov
lret
mov
dec
jnp
and
je
push
popf
jb
cmc
leave
shlb
pop
dec
lods
push
pop
daa
stos
in
push
addb
mov
push
dec
mov
lcall
pop
das
xchg
jae
cmc
jg
push
xchg
lods
dec
je
loopne
repnz
les
push
or
jecxz
lcall
popa
pop
add
aaa
nop
xchg
int
mov
jl
dec
lds
adc
pop
mov
sub
push
test
sbb
add
ljmp
sub
lods
stos
mov
ret
inc
out
fsts
jns
sahf
mov
cmp
ss
outsb
jmp
fdivl
jge
inc
enter
cmp
in
jle
jo
xor
pop
shrb
cmp
xchg
arpl
and
jecxz
ror
mov
ljmp
mov
filds
lret
pop
fisttpl
sub
mov
push
sub
xlat
repz
call
fdivs
or
jg
xchg
fisubs
test
mov
shrl
pop
and
mov
in
mov
popa
push
adc
subl
imul
insb
call
xor
pop
xor
cld
sub
jmp
insb
sub
xchg
in
push
in
mov
and
subb
testl
loop
stos
arpl
nop
cltd
xchg
pop
leave
shl
pop
mov
adc
mov
lods
xchg
mov
inc
hlt
orb
scas
fwait
addb
aas
cwtl
rorl
into
jne
dec
cmp
sub
push
repnz
js
pop
pop
in
jg
inc
lock
xchg
adc
cmp
shl
clc
jmp
and
icebp
mov
hlt
fbstp
xor
cmp
and
add
inc
xchg
scas
and
into
add
dec
xor
outsl
int3
cmp
pop
insb
sbb
leave
xor
loop
sbb
cli
lcall
imul
test
jmp
add
bound
pand
cmpsb
pop
add
addr16
or
loope
mov
mov
xor
adc
sbb
mov
or
jns
push
and
int
pushf
rcll
pop
dec
dec
js
mov
jno
bound
repz
lcall
push
shlb
shll
adc
xor
xchg
mov
mov
cmp
inc
adc
sbb
adc
dec
pop
mov
pop
push
int3
leave
js
ret
sti
cmp
lods
dec
jmp
jg
xlat
jle
inc
push
fnstcw
or
ret
popa
fdivrl
ds
mov
pop
stc
fidivl
roll
test
cmc
push
push
inc
sahf
ljmp
cld
call
imul
xchg
ret
inc
in
into
push
cmp
jo
lret
mov
loopne
dec
call
mov
aaa
add
sbb
pop
cltd
cmp
sbb
lahf
bnd
cmc
pop
xor
jp
xlat
int
cld
and
mov
inc
pop
pop
cmpsb
cmpsl
repz
into
jne
je
jb
mull
jo
test
xor
xor
cli
xor
aam
xor
mov
cmp
pop
ss
fidivl
je
sbbl
sbb
testb
adc
inc
sub
dec
hlt
dec
ja
push
cmp
sub
in
cltd
mov
lcall
imul
sub
xchg
mov
iret
add
pop
cld
push
jo
stos
mov
sahf
jne
fmuls
add
stos
push
jo
ret
jge
and
inc
push
jg
pop
jb
and
jl
imul
ja
dec
sbb
iret
jl
testb
daa
adc
jg
xor
jno
je
xlat
mov
sarb
jae
mov
out
dec
xchg
call
jl
outsb
pushw
aad
jle
ds
in
or
pop
je
in
pushl
stos
xor
cmp
sbb
jnp
or
add
mov
mov
js
in
xor
mov
sahf
or
sti
mov
scas
fs
rorl
test
pop
or
mov
aaa
mov
add
loopne
mov
inc
bnd
sbb
sbb
das
mov
stc
add
sti
cmp
imul
arpl
roll
add
dec
mov
lods
iret
out
cmp
pop
and
cwtl
xor
clc
sub
mov
in
faddp
xlat
add
push
xchg
xchg
movsb
ds
mov
adc
aaa
add
dec
pushf
mov
imul
repz
pop
imul
xor
jb
test
in
addr16
rep
jge
mov
xchg
lret
testb
adc
push
imull
xchg
movsl
cmp
fstl
lock
push
dec
add
ds
sbb
dec
push
push
jle
sbb
test
dec
and
jle
cwtl
mov
xchg
insl
or
push
lret
push
pop
push
movsl
mov
sbb
xchg
out
addb
out
push
pop
ds
insb
test
push
pop
movsb
adc
jle
pop
jb
out
xor
pop
xor
add
std
out
out
dec
addr16
fildl
leave
js
and
push
aaa
cld
mov
xor
in
std
scas
lea
inc
shl
shrl
pop
pusha
jmp
loope
leave
pop
ffree
push
int
jle
adc
ret
mov
and
iret
or
insl
sub
mov
fistps
sub
insl
dec
jb
push
xor
xchg
mov
xor
out
xor
out
lods
clc
sub
aaa
loop
scas
xchg
int3
test
mov
sti
enter
enter
jle
pop
dec
lds
xor
and
fcmovnb
cwtl
movsl
inc
cli
mov
psadbw
ja
xchg
jne
scas
in
gs
lea
shlb
test
cli
popa
add
xor
aaa
ret
scas
sarl
cs
push
push
add
ror
scas
sti
lret
push
inc
pop
and
shr
jg
jns
push
dec
repnz
mov
adc
mov
inc
push
fwait
mov
pop
mov
ficomps
adc
imul
adc
jno
jg
dec
add
in
fistpll
add
push
cmp
jne
aaa
data16
cmpsb
outsl
iret
lock
imul
in
or
movsb
pushf
ret
pop
mov
mov
ret
adc
fdivrl
push
inc
lods
pop
clc
cli
cmp
pop
cmpsb
lret
pop
jae
lcall
mov
das
push
fildl
insl
mov
mov
xchg
mov
or
test
into
mov
call
jns
fcmove
jae
or
aaa
mov
decl
movsb
xchg
mov
repz
pop
sbb
sahf
mov
lret
xchg
repnz
or
icebp
lret
push
sbb
add
mov
sub
xchg
imulb
mov
cld
jle
push
mov
std
add
inc
xchg
dec
jmp
mov
sbb
jle
cld
ret
or
subl
xchg
jp
cmp
mov
sub
xlat
lret
push
adc
pushf
icebp
mov
test
xchg
aas
loope
sbb
sahf
repz
fadds
inc
pop
cmp
mov
mov
lcall
aaa
sub
cmp
daa
dec
inc
mov
sbb
repnz
cmp
je
sub
dec
test
mov
and
ja
and
xor
or
fisttps
and
stos
xor
ret
test
in
movsl
cmp
loopne
pop
sub
call
movsb
xorl
dec
call
ret
aas
xor
push
mov
or
jbe
popf
out
mov
es
rorb
xchg
lcall
div
pop
jo
iret
add
pop
div
xor
mov
ljmp
lock
pushf
rclb
push
push
or
inc
dec
cmp
lods
cld
pop
dec
jge
mov
and
lods
hlt
mov
loop
je
std
xor
sub
inc
jb
mov
cld
ljmp
sbb
dec
inc
stc
orb
cltd
test
scas
adc
mov
imul
lds
sbb
fsin
aam
out
and
daa
stc
jg
or
icebp
dec
jge
fnstsw
mov
mov
rorl
inc
out
test
add
adc
sbb
xor
mov
inc
sbb
or
ja
scas
push
mov
jl
daa
mov
cmp
sbbl
cmp
inc
xchg
rcrb
xchg
aaa
dec
pop
and
sbb
sub
or
mull
out
pusha
mov
movb
mov
or
and
fs
adc
or
jnp
test
cld
push
sub
cli
inc
loope
pop
loope
push
clc
stc
arpl
insb
shll
stc
jae
mov
xor
inc
cli
jmp
imul
or
sbb
and
fldz
js
std
or
pop
orb
and
mov
int3
cmp
lret
gs
inc
je
imul
pop
jae
add
mov
xor
jmp
or
pop
add
push
xchg
js
into
js
sub
popa
mov
or
mov
popa
jno
and
mov
std
push
sbb
movsb
jo
dec
sub
lods
enter
add
aam
mov
pop
and
stc
xchg
xchg
orb
pop
popf
and
jp
add
cld
popa
data16
or
pop
xor
adc
and
insl
mov
adc
adc
inc
dec
fistps
movsl
shrl
hlt
push
imul
push
rorb
ja
mov
cmp
sub
pop
arpl
add
jns
sub
mov
ret
mov
add
fwait
jae
mov
loop
add
imul
mov
aad
fimull
add
fiadds
popa
js
xchg
sti
hlt
loop
fwait
xor
pop
dec
mov
xchg
loop
push
mov
ret
pop
jnp
cs
divb
sub
lret
dec
daa
ljmp
cmp
test
xlat
cmpsl
cmpsb
sbb
outsb
jg
inc
xchg
pop
jmp
adc
inc
push
add
outsl
mov
insb
stos
ljmp
sti
insl
pusha
mov
divb
stos
sti
aas
inc
mov
out
sbb
ret
ds
movsbl
inc
jl
add
mov
in
add
loope
test
and
daa
pushf
xor
jo
push
js,pt
cmpsb
adc
inc
rcr
pop
repnz
mov
sti
movsb
inc
subb
gs
std
fisubrs
or
ret
cmpsl
mov
int
not
push
test
ud2
addl
dec
push
movsb
jbe
ret
cmp
cltd
daa
fbstp
lea
out
movsb
insb
jnp,pt
sbbl
xchg
xchg
sbb
ja
inc
jge
mov
mov
mov
xchg
mov
out
pop
aaa
xor
shll
aad
dec
cmc
sub
push
pop
mov
test
push
cs
adc
jle
dec
cmp
dec
les
sbb
ja
in
in
and
fstl
dec
xchg
sti
in
mov
stos
cld
mov
das
jmp
das
stos
and
mov
shrb
xchg
ret
sub
outsl
xchg
loop
xchg
andl
pop
xchg
addr16
call
and
loopne
xor
std
xlat
repnz
cli
xor
insl
iret
addr16
mov
aaa
es
subl
in
push
and
mov
push
or
lcall
sub
aam
lret
pushf
xchg
push
and
jae
inc
xchg
push
mov
out
fcoms
idiv
xor
and
prefetch
xor
inc
mov
push
jp
test
sti
jb
push
lahf
jge
les
stos
sbbl
and
xlat
insl
les
inc
xor
cmpb
fnstsw
fists
mov
cmp
mov
repnz
mov
push
jae
mov
sub
dec
sub
mov
or
stos
pop
enter
pop
cmc
fdiv
sub
jle
sub
adc
and
decl
adc
lahf
jno
icebp
jnp
and
jl
jno
cli
jns
sbb
stos
daa
mov
dec
lret
mov
bound
xor
out
pop
repnz
and
jmp
gs
or
int
pusha
dec
mov
xor
sub
sbb
cwtl
or
and
in
cmpsb
aaa
sub
cltd
xor
mov
aas
cmp
lret
es
fldenv
inc
test
xchg
inc
sets
fbstp
lret
lds
add
dec
insl
in
incb
insb
or
add
fcompl
pop
insb
push
xchg
incl
mov
mov
push
loop
in
cmpsl
sub
aad
push
imul
hlt
dec
ljmp
notb
mov
push
xor
fimull
xor
jno
hlt
inc
pop
sub
fimull
popw
out
loope
loopne
push
ss
push
xorb
fisttpl
loop
fdivrs
scas
inc
adc
out
in
xlat
fmulp
xchg
cli
arpl
gs
into
cltd
adc
gs
sbb
push
iret
xchg
and
outsl
enter
or
in
mov
in
mov
cmp
xor
insb
jbe
jo
add
mov
cmpsl
sub
add
movl
cld
mov
push
loop
aam
xchg
popa
and
test
dec
test
cltd
push
jbe
mov
push
aad
jb
loope
mov
mov
xor
push
inc
jns
insl
movsb
int3
xchg
cmp
mov
nop
jp
jns
imul
inc
sbb
data16
imul
sar
or
push
dec
sbb
test
rcrb
jbe
adc
and
out
fldlg2
loop
xchg
or
ret
cmp
mov
add
pop
fmull
sub
jno
dec
lret
in
mull
cmp
sbb
mov
dec
push
fildll
cmp
inc
ficoml
frstor
pop
or
addr16
xor
ror
xchg
lcall
decl
push
outsl
and
lcall
mov
adc
lock
xor
ret
and
push
jg
dec
add
lea
fnstsw
lea
enter
orb
sbb
push
shr
add
mov
add
xor
sbb
or
push
aaa
rcr
adc
adc
jno
inc
daa
jg
daa
div
add
and
xlat
lock
add
mov
sti
rcrb
fidivl
mov
cmp
xlat
and
and
push
mov
pop
sub
outsb
xchg
sbb
int3
aam
jbe
mov
pop
popa
push
sbb
fstpt
in
xorb
outsb
dec
add
add
fbld
cmpsb
icebp
subl
ds
dec
inc
ret
jae
cmpsb
jmp
push
add
mov
imul
stc
mov
mov
test
gs
mov
mov
fiadds
iret
adc
jmp
loop
jge
sub
lret
push
test
or
jp
dec
daa
dec
iret
mov
and
sahf
pushf
inc
pop
sub
or
xor
sub
mov
xchg
inc
rclb
push
mov
add
mov
test
xchg
add
adc
icebp
mov
pop
sbb
adc
dec
divl
xchg
adc
mov
xchg
icebp
mov
fdivrs
ja
dec
test
movsb
outsb
or
rcrb
lahf
leave
xchg
jp
aaa
cltd
lahf
das
mov
mov
push
push
enter
jmp
loopne
sbb
les
lods
xor
adc
popa
adc
cli
push
jge
cs
dec
xor
shr
add
mov
inc
ljmp
loopne
fidivl
add
or
push
xchg
jno
mov
sbb
pop
mov
dec
sub
inc
push
mov
push
loop
cmp
stc
pop
std
ss
xchg
call
clc
xor
lret
mov
loope
fwait
inc
sbb
mov
or
xor
fstl
scas
test
stc
adc
cmp
jmp
sbb
jb
sti
cwtl
pop
aas
inc
lea
mov
popf
sub
mov
xchg
in
push
add
fcoml
das
lea
push
das
arpl
sbb
fcmovnbe
or
in
ja
mov
gs
add
xchg
inc
shrl
jns
push
lea
mov
dec
inc
push
addr16
mov
inc
or
inc
pusha
jns
fisubs
lret
inc
int
jb
divl
into
decb
arpl
ffreep
mov
xor
rcrl
push
jg
jb
push
mov
jp
jae
cmp
pop
dec
inc
imul
inc
sbb
pop
or
push
imul
cld
imul
xchg
sub
xchg
leave
je
jnp
jmp
das
jmp
pop
mov
fwait
ja
sbb
lea
xchg
ja
jns
int3
mov
data16
mov
add
and
jl
jno
mov
mov
ret
sarb
push
jae
jo
out
sub
mov
pop
jmp
mov
add
std
sbb
dec
insl
cs
lods
addb
subb
ret
cmp
mov
sub
sarl
jns
mov
ljmp
pusha
sub
dec
mov
out
adc
xchg
mov
jle
xchg
xchg
cmp
outsl
mov
inc
jp
add
in
sub
add
push
jne
cmp
in
xor
cli
inc
lods
imull
adc
sbb
and
fs
into
fistl
xor
in
test
pop
dec
mov
clc
aad
pop
jno
cmp
pop
xor
shl
mov
jbe
add
arpl
mov
jp
leave
inc
sbb
cltd
mov
imul
into
mov
jns
xchg
ljmp
add
call
inc
dec
decl
ss
inc
push
adc
divl
jp
fisubl
test
or
and
movsl
outsb
adc
pushf
pop
test
out
and
test
sub
outsl
mov
stc
imul
cmc
xorl
cwtl
add
xchg
in
hlt
lea
xchg
int
out
mov
ds
xor
mov
jnp
push
or
ja
roll
add
cmp
mov
out
ja
cmp
jnp
sbb
sub
addl
xchg
in
push
in
icebp
inc
and
jbe
mov
popa
or
push
jbe
push
popf
dec
out
stos
and
dec
rorb
cmp
adc
repz
or
mov
adc
movsb
mov
add
jns
mov
xlat
sub
push
or
nop
xorl
sahf
inc
xchg
mov
sahf
lret
add
icebp
pop
enter
xchg
out
mov
mov
push
jmp
aam
lret
cs
pop
inc
loopne
sub
stos
pop
fwait
cld
out
pushf
dec
adc
xchg
jb
test
cmp
adc
mov
mov
fnsave
test
jb
adc
adc
mov
daa
in
call
cmp
gs
and
push
icebp
mov
dec
inc
dec
xor
or
loopne
add
inc
pop
ja
insl
lret
test
fisubrl
lods
std
stos
adc
nop
rclb
shrb
pop
cltd
pop
jp
adc
out
ss
xchg
inc
jl
sub
pop
adc
push
adc
ja
jb
xchg
inc
sbb
inc
jbe
pusha
mov
sub
or
ret
mov
mov
xchg
js
inc
in
and
ss
inc
fisubl
in
mov
call
hlt
or
mov
outsb
adc
sbb
subb
jg
or
xor
jns
xor
inc
fwait
or
lahf
xchg
pop
addb
adc
mov
bound
lock
fwait
cld
jle
out
test
dec
sbb
pop
jp
inc
addr16
aad
adc
xor
out
sub
xchg
pop
vpcmpgtb
pushf
mov
mov
sarl
pop
jp
sar
pop
or
mov
xorl
lcall
sub
push
popf
lret
xlat
jmp
push
jl
push
add
sbb
mov
and
and
lods
jp
dec
flds
xchg
gs
sbb
jge
ds
pop
adc
enter
nop
sub
scas
push
iret
jne
mov
ret
jb
ljmp
lods
xor
popf
addb
cmpsl
adc
int3
in
or
jno
inc
mov
inc
dec
movsb
ja
inc
xchg
xchg
xchg
mov
test
stc
jnp
jae
push
cmp
lahf
imul
push
gs
jmp
push
mov
aam
mov
mov
lsl
pop
xchg
test
push
stos
jno
sub
mov
insb
push
pop
inc
mov
cmp
inc
nop
inc
das
sub
push
sub
mov
sub
lcall
nop
mov
sbb
add
jo
sub
fcmovnbe
jmp
push
movsl
adc
jp
insb
pusha
add
out
xchg
rorl
fsubrl
jl
push
ret
or
push
int3
xor
dec
repnz
ret
cmp
shll
cs
mov
fs
or
dec
xchg
pop
lret
stc
ficoms
xorl
mov
stc
mov
mov
lock
fisttpll
imul
lock
inc
push
pop
addr16
mov
cmp
adc
lock
cli
test
xor
sub
jg
nop
dec
add
ds
mov
test
andb
cld
adc
mov
movsb
adc
jb
xor
sub
cmp
mov
rclb
test
pop
sbb
or
add
jne
cwtl
aas
sub
fsubrl
cld
or
add
aas
mov
xchg
mov
rcr
ret
loopne
adc
jg
inc
data16
ds
mov
fmul
jecxz
xor
shl
into
dec
sbb
loopne
mov
mov
adc
scas
lahf
and
add
rcll
mov
repnz
adc
fucomp
lock
arpl
lcall
mov
pop
ss
minps
rcrl
repnz
jge
sbb
xchg
cmp
movsl
das
shlb
sub
mov
ror
cmpsl
mov
insb
fiadds
inc
fildl
and
mov
push
ljmp
aas
in
cmp
mov
mov
test
push
xchg
sbb
clc
sbb
push
daa
fdivrs
push
fmuls
mov
out
cwtl
mov
inc
add
push
rcll
xor
xchg
push
jno
sub
mov
push
push
daa
out
or
imul
mov
or
inc
repnz
loopne
jno
ljmp
rorl
jmp
push
iret
ja
popf
push
fisttpll
push
mov
mov
mov
adc
lret
push
or
inc
subl
sti
lea
hlt
popf
ret
outsl
sub
orps
pop
addr16
mov
aad
les
ljmp
fwait
lock
popa
ljmp
push
rcl
push
inc
dec
mov
jo
sbb
mov
adc
add
mov
xchg
fcoms
and
es
push
or
pop
pushl
mov
mov
xchg
test
add
subb
rorl
testl
push
mov
mov
test
jmp
loop
push
xchg
stos
jle
cmp
mov
pop
push
sbbl
xlat
mov
scas
mov
cmp
mov
inc
incl
test
fdivs
fwait
rcrb
cltd
aam
adc
daa
insb
dec
jle
adc
mov
scas
out
push
fdivrl
daa
dec
xchg
adc
cmp
add
idivb
xchg
in
loop
into
roll
jnp
pop
out
jae
icebp
in
aad
int
call
loop
push
mov
decb
add
fstl
mov
xor
shlb
inc
inc
jmp
ret
rcll
or
bound
jmp
push
jns
fstpt
decl
ret
mov
lds
mov
sub
dec
jmp
dec
adc
and
push
pop
inc
sbbb
js
lds
lea
std
mov
inc
stos
icebp
dec
incl
inc
adc
xor
pop
fs
stos
dec
shrl
divl
movsb
inc
inc
pop
cli
outsl
xchg
scas
movsl
incl
xor
je
pop
sbb
mov
or
cmp
loop,pt
decl
lods
xor
repnz
dec
sahf
or
aad
repnz
mov
cld
clc
sbb
push
xchg
sti
adc
inc
jl
xchg
and
sbb
adc
inc
push
jbe
subl
mov
mov
arpl
mov
xor
cmp
addr16
xlat
icebp
xchg
fwait
popf
cmp
inc
popa
js
lock
xor
inc
and
mov
inc
aad
pop
faddl
inc
mov
xor
add
nop
test
mov
es
sub
rcll
ss
or
outsl
stos
fsubl
addr16
sub
push
lods
insb
mov
xorl
mov
pop
and
lds
push
jmp
jbe
aad
nop
int3
push
xchg
in
pushf
and
xchg
adc
mov
test
in
mov
push
add
xchg
decl
or
mov
and
mov
push
stc
ljmp
loop
and
dec
lret
sbb
clc
push
iret
sub
shll
xchg
cmpsb
xchg
stos
jne,pn
out
lea
mov
lods
ljmp
dec
and
pop
in
jmp
dec
std
insb
movsl
sbb
cmpsb
and
test
leave
adc
dec
pop
cmp
xchg
xchg
mov
popa
fsubr
add
out
movsb
outsb
jecxz
push
int
loop
mov
repnz
xchg
mov
sub
jne
in
add
push
jg
call
inc
cmp
cmp
aas
jl
aaa
or
iret
xchg
daa
pop
jmp
out
stos
cwtl
inc
inc
sub
das
xchg
inc
xchg
mov
push
jne
out
dec
dec
lds
stos
or
cmp
cmp
push
xchg
gs
dec
mov
mov
push
les
xlat
movsb
cltd
vdivss
sahf
push
std
nop
and
pop
sub
push
cmp
jnp
jae
sbb
push
int3
les
ds
adc
ficoml
cli
div
jne
cmpsb
shlb
in
adc
mov
sub
dec
or
mov
in
mov
xchg
pop
aad
ja
dec
jne
xchg
stc
divb
inc
shlb
subl
mov
scas
cmpsb
stos
fadd
sub
nop
je
cmp
and
popa
jbe
push
jmp
nop
xor
addr16
and
ficompl
aaa
adc
pushf
daa
jmp
mov
adc
ret
mov
aam
cmp
xchg
lret
push
jb
cltd
pop
aas
push
xchg
out
lds
mov
sbb
lea
enter
loop
gs
pusha
repz
loop
adc
mov
int
inc
dec
jo
sub
mov
adc
into
jnp
push
xor
fisubl
or
sbbl
mov
loopne
ret
test
mov
and
daa
dec
int3
rcl
fdivrl
mov
stc
shl
push
mov
shll
fisttps
dec
in
xchg
repz
imul
scas
ljmp
add
mov
adc
dec
and
cli
mov
pop
jle
ret
adc
mov
cmc
inc
or
jbe
pop
mov
in
sbb
xchg
add
pop
dec
aam
cmp
stos
cmp
scas
push
testl
adc
pushf
or
xchg
cmp
dec
inc
xor
inc
sti
adc
rorl
xchg
inc
fisubl
cmp
sahf
fiadds
test
jmp
pop
sti
dec
aaa
and
stos
shll
add
xor
xchg
push
sbbb
add
ljmp
clc
pusha
jnp
push
mov
cmpl
out
ljmp
enter
mov
fists
xchg
push
fsubrl
xchg
xor
mov
loope
fidivrl
and
out
icebp
add
jbe
fsub
sbb
scas
xor
adc
pop
sub
push
in
add
out
mov
and
adc
or
cli
mul
jne
gs
add
lcall
mov
cmp
mov
movsb
lcall
mov
xlat
loope
cli
call
popf
cmp
jbe
shlb
stc
dec
fsub
loope
jmp
and
pushl
and
cmc
rcrb
in
push
mov
and
mov
add
mov
loopne
mov
mov
and
test
cmpsb
pop
negl
cs
jp
rol
xchg
loop
pusha
cmp
lcall
mov
mov
or
and
out
jnp
popa
sarb
xor
xchg
inc
nop
repz
lods
jns
and
addb
aam
into
inc
lahf
lods
push
jge
stc
stc
leave
out
inc
push
cmpsl
and
mov
out
or
daa
enter
adc
outsb
sarl
insb
in
stos
add
mov
dec
movsb
and
pop
call
mov
xchg
pushf
jno
or
out
shlb
jns
mov
sbb
hlt
jl
xchg
add
jmp
adc
test
cmp
sti
push
bound
and
mov
and
rorb
fwait
dec
cmovl
mov
xor
inc
and
loop
jns
mov
andb
and
sbb
movsl
les
mov
mov
jae
into
shll
idivw
push
stos
test
cmp
cmc
repnz
in
mov
pop
jge
xchg
lret
push
add
mov
int3
aad
icebp
test
in
sub
push
mov
lret
xchg
into
cwtl
lock
out
fsts
clc
fistl
stos
call
jle
or
pop
out
xor
jbe
push
dec
mov
nop
sub
mov
or
fmulp
sub
pop
mov
mov
nop
cmp
cmpsl
pop
pop
clc
inc
inc
lret
jb
addb
adc
mov
gs
hlt
idivb
inc
jl,pn
jmp
stc
leave
adc
or
push
repz
mov
movsb
jne
xor
mov
insl
fst
shl
mov
mov
fnstenv
fwait
repz
ret
int3
mov
and
movsb
adcb
fnstcw
or
or
add
call
xor
mov
icebp
lret
pop
rolb
mov
mov
dec
pusha
in
sub
inc
enter
jb
push
push
fnstcw
fildl
and
ss
sarl
inc
int
loopne
mov
push
cmc
ljmp
in
xchg
cld
cmp
push
xor
or
arpl
add
dec
test
push
ja
xchg
imul
xchg
mov
mov
sub
inc
cmp
pop
iret
or
in
insl
pop
sbb
lods
cmc
lods
mov
sbb
adc
outsl
adc
add
jg
mov
adc
pop
mov
mov
sbb
mov
les
js
lds
outsl
pop
pop
cmp
mov
xchg
dec
dec
clc
cmp
inc
xor
push
stc
xchg
and
dec
shrb
lret
bound
lret
jecxz,pn
xchg
les
repnz
mov
imul
and
push
push
leave
add
or
mov
lods
nop
flds
mov
jmp
or
imul
cld
call
xchg
cmp
pop
fnstsw
loop
xor
or
sbb
mov
shlb
and
pop
in
adc
cld
xchg
push
jb
xlat
jns
cld
sarb
in
dec
mov
mov
add
scas
std
xor
pop
mov
lds
lret
lods
sub
enter
icebp
aam
loopne
inc
pushl
bound
loopne
arpl
pop
mov
inc
jne
addl
cmc
fidivl
push
sub
xor
xchg
jge
inc
fsubrs
data16
lcall
fildl
inc
xchg
sub
aad
pop
xlat
sbb
xlat
adc
es
aam
in
in
sub
bndstx
popf
sbb
jo
mov
insb
cltd
mov
bsf
std
mov
add
dec
stc
xchg
leave
lea
dec
les
fisubrs
mov
or
mov
mov
mov
addr16
loop
loope
pop
xchg
rcrb
sub
push
stc
sub
sbb
adc
in
fs
bound
jne
xchg
mov
ficomps
sbb
cmpl
pop
mov
push
and
jmp
sti
xchg
mov
pop
adc
sub
scas
jp
js
ja
or
lods
jp
fwait
jmp
cmc
sbb
lods
jmp
cltd
gs
or
and
push
sti
lcall
and
mov
jns
sbb
jle
sbb
js
fsubrs
mov
jns
dec
adc
mov
pop
jne
mov
fdiv
scas
jmp
int3
push
jmp
or
or
out
xor
inc
and
adc
and
out
jb
push
aas
or
pop
sbb
fwait
mov
inc
ja
imul
aas
mov
and
mov
dec
ss
cwtl
test
sub
lea
shll
lods
and
out
push
outsb
push
rolb
pop
rcr
outsb
mov
lcall
pushf
shrl
pop
xchg
ret
jb
jae
xchg
stos
daa
sahf
cwtl
adc
loop
sbb
outsb
or
ret
cmp
enter
rcr
iret
popa
pop
pop
xchg
jo
fimull
pop
movsl
adc
cmp
call
ljmp
dec
clc
pmullw
pop
fcomp
stos
add
xchg
lret
jnp
dec
lods
mov
add
or
test
outsb
xchg
pop
mov
jnp
and
cmp
ucomiss
stc
dec
lods
mov
call
inc
mov
xchg
roll
push
dec
fistpl
sbb
mov
cmpb
adc
dec
sbb
or
adc
pusha
xchg
out
in
pop
cmpsb
loope,pn
hlt
sub
adc
test
inc
mov
mov
dec
push
ljmp
es
adc
std
sub
rcll
lea
pop
push
jecxz
jg
fldenv
imul
test
icebp
jmp
lea
out
cmp
add
orb
js
gs
mov
mov
push
es
adc
in
mov
sbb
call
sub
mov
or
ss
mov
sub
leave
pop
add
or
adc
popl
data16
dec
inc
movsb
out
inc
out
adc
mov
xor
mov
xchg
andb
push
push
mov
xlat
js
add
push
das
cmp
ss
xchg
mov
mov
pop
mov
xor
xchg
ss
fcomp
jo
popf
dec
sub
fistpl
xchg
jle
out
test
popa
cmp
in
out
shrb
dec
cmc
clc
dec
add
enter
jg
mov
inc
adc
inc
lea
aad
sub
movsb
shll
ja
push
sbb
aas
jb
adc
daa
ss
cmpsb
add
in
ja
add
loope
push
jbe
aad
dec
nop
pop
aad
xchg
in
lahf
mov
xor
fnsave
int3
cmp
fnsave
imul
xor
sbb
roll
mov
pop
lods
or
xor
hlt
add
xor
ds
add
or
cwtl
lcall
in
rolb
int3
leave
cmpsl
loopne
in
sahf
pop
test
insl
test
rcll
icebp
outsl
pop
mov
cs
sbbb
mov
pop
into
inc
push
mull
push
dec
data16
enter
mov
repnz
in
in
xchg
xlat
mov
sbb
mov
xchg
outsb
jnp
push
adc
push
add
mov
push
cld
mov
ror
out
int
add
lods
into
fisubl
aam
xchg
or
mov
pop
sbb
add
adc
lret
str
rorl
dec
cmp
aas
sbb
popl
out
test
js
sub
inc
xlat
sbb
loop
outsb
push
es
jmp
and
in
loopne
rorb
or
insl
jl
stos
adc
xor
pop
pop
sbb
aas
cmc
test
mov
push
lret
xchg
leave
mov
lcall
outsb
mov
stc
in
dec
outsl
cmp
dec
scas
sub
fisubrl
lcall
movsb
filds
rcll
mov
mov
rorl
in
shl
imul
gs
adc
cmpsb
mov
stos
mov
fdiv
adc
movsb
mov
std
sub
ljmp
sub
dec
push
pop
lret
out
push
cmc
inc
xor
mov
mov
xor
mov
stc
lods
adc
bound
xor
clc
xchg
xchg
mov
fcoms
push
pop
jecxz
push
or
lods
pop
outsb
xchg
and
bound
inc
xor
fwait
or
out
nop
push
push
mov
cwtl
ja
mulb
call
rclb
rclb
mov
lods
fcompl
scas
pop
stc
pop
out
jnp
lahf
repz
sub
push
jle
test
mov
jge
sub
aaa
mov
mov
jg
aad
add
in
and
adc
or
sub
stc
ret
push
stc
test
outsl
jo
pop
xor
or
repz
sahf
xor
pop
insl
sti
data16
ja
test
and
push
xchg
mwait
iret
movsb
stc
ljmp
lds
inc
scas
xchg
fwait
cmp
lods
ss
cmp
adc
in
pop
popa
jle
nop
cmc
out
cmpsb
dec
sub
inc
pusha
mov
outsb
pop
mov
adc
in
dec
ret
cmp
adc
sub
xchg
jae
aaa
nop
cmpsl
int
sbb
push
hlt
test
mov
pop
stc
popa
ljmpw
add
cmp
jmp
sbb
test
adc
jb
xchg
mov
xchg
scas
or
imulb
popa
fstpt
aad
adc
lods
inc
inc
std
push
lds
and
outsb
mov
stos
lahf
or
sbb
lods
imul
adc
nop
xchg
outsl
sub
mov
xlat
sbb
sti
cmp
es
and
pop
push
in
and
dec
pop
stos
jo
daa
inc
jo
lods
das
fcomp
rcrb
ljmp
cmp
sarl
cmp
aaa
inc
ja
xchg
bound
aaa
repz
addr16
fisttpl
fldt
add
into
jns
adc
out
xor
call
dec
insb
iret
xchg
push
stos
les
jno
inc
mov
aad
inc
push
xor
stos
mov
ja
pop
hlt
xor
or
cmpsl
out
icebp
addr16
xor
dec
into
push
mov
adc
mov
paddusw
add
push
dec
inc
xor
aaa
out
sti
dec
daa
sbb
rorl
add
xlat
fmuls
cltd
sub
fidivs
jno
and
jecxz
cli
dec
mov
es
cmpsb
ljmp
mov
mov
and
imul
into
push
test
mov
add
xor
popa
mov
sbb
test
sub
jl
push
lret
mov
xor
ret
ficompl
rcll
fs
dec
cmpsb
gs
lds
int3
sub
adc
icebp
jne
lcall
jno
adc
inc
sar
mov
jno
rol
adc
cmp
out
data16
xchg
pop
popf
push
push
lret
and
rclb
fsubrl
sbb
repnz
dec
inc
pop
ficompl
int
enter
push
pop
push
pop
insl
cld
popa
mov
push
sub
rorb
or
lods
jns
in
fstpt
and
xchg
orb
rol
les
ljmp
push
mov
in
outsb
das
shll
pop
xchg
shlb
lret
jno
push
add
cmp
mov
mov
jmp
sahf
shrl
lods
xchg
mov
mov
and
adc
in
xchg
mov
cmc
sbb
in
or
idiv
push
mov
mov
inc
rorl
push
stc
in
les
frstor
and
test
add
ja
stos
push
pop
pop
push
test
add
xchg
mov
xchg
xor
jmp
andb
hlt
xlat
push
add
pusha
adc
and
fidivl
and
pop
and
inc
fs
cmp
imul
jns
xchg
sbb
nop
out
or
lret
push
inc
cltd
xor
xchg
in
adc
mov
xor
jecxz
cmpsl
outsb
fldenv
mov
pop
sub
clc
jle
stos
inc
sbb
add
sbbb
xchg
dec
adc
in
test
mov
stc
fsubrs
stos
sub
xchg
inc
xor
rorl
dec
add
rclb
pop
cmp
in
addr16
pop
mov
divl
and
mov
les
dec
xchg
leave
popl
lock
pop
ret
das
bound
pop
mov
adc
pusha
rorl
mov
and
adc
shlb
test
pop
dec
outsl
enter
push
mov
stos
into
dec
shlb
int
popf
loop
push
add
mov
pop
jp
movsb
adc
das
mov
loop
ljmp
faddl
push
pop
mov
or
call
or
cmp
and
aas
push
fidivs
or
dec
xor
ljmp
sbb
add
stos
lcall
jae
ja
setns
xchg
ds
inc
mov
sub
lds
dec
mov
lret
mov
cmc
mov
mov
orb
xor
or
inc
in
add
pusha
pusha
outsl
xchg
dec
mov
sub
dec
cltd
adc
mov
sbb
std
push
icebp
or
cmc
pcmpeqd
add
cs
jbe
push
in
in
jecxz
fwait
lods
lret
dec
int
enter
dec
xchg
mov
js
leave
inc
inc
clc
out
mov
jnp
psrad
call
gs
jmp
push
and
lcall
mov
push
loopne
leave
sbb
cmp
push
sbb
in
mov
mov
je
lds
xlat
icebp
mov
std
cmpl
aad
add
mov
mov
ficoms
cmp
sub
nop
inc
loope
data16
dec
scas
test
loopne
popa
push
sub
and
push
stos
or
mov
and
incl
cmp
lds
jbe
jge
pop
mov
sub
mov
call
scas
and
xchg
cs
je
inc
mov
push
in
rcl
add
inc
jl
push
mov
mov
xor
inc
dec
cwtl
mov
decb
scas
fcom
push
and
in
movsl
fstl
rorl
shlb
out
xchg
dec
je
xor
sub
stc
push
mov
daa
sub
leave
adc
inc
dec
nop
divl
push
scas
js
inc
xchg
jbe
cmc
cld
push
xchg
and
in
loop
test
out
and
mov
jbe
repnz
std
arpl
pop
loope
and
or
mov
daa
push
sub
outsl
adc
cltd
pushf
fisubl
jp
movsb
sbb
aas
out
jno
push
repz
lea
lar
sub
ficompl
push
clc
jp
aam
in
mov
xchg
fst
jo
fcomps
inc
xchg
movsl
js
enter
adc
divb
dec
imull
int3
sub
arpl
push
das
push
je
push
repz
std
pusha
adc
pusha
add
and
scas
sbb
imul
loope
xor
xchg
and
scas
cmp
dec
int3
pop
rclb
mov
adc
sub
jg
mov
lcall
pop
jp
or
cmp
in
subb
jmp
pop
lds
in
test
fmull
push
inc
pop
shl
inc
mov
sbb
xlat
aaa
sub
aad
xor
lds
sub
add
cmp
jo
push
ss
stos
clc
sahf
cmp
aas
pop
lahf
mov
das
cli
imul
les
arpl
shr
jl
cs
out
and
ret
daa
cli
xlat
dec
adc
nop
add
lods
cmp
out
adc
js
cltd
xchg
cmp
filds
dec
and
lea
pop
pusha
mov
int
stc
shll
sbb
leave
cmc
pop
and
das
jmp
xchg
push
jae
in
es
mov
out
fnstsw
mov
out
in
jg
lods
dec
inc
xor
insb
into
ret
add
adcl
shll
xchg
jb
lcall
pop
ret
rcr
inc
mov
ljmp
lods
sbb
scas
mov
fcmovbe
ficoml
stos
mov
jno
scas
loop
mov
lock
outsb
lods
lret
push
pop
lahf
push
leave
jle
push
in
pop
cmp
xor
loop
jge
in
mov
mov
ds
ficomps
outsl
sbb
cs
mov
addr16
ljmp
jmp
loopne
push
pop
xor
jl
jle
popf
fistps
xchg
stos
mov
lahf
push
test
mov
ljmp
dec
xchg
or
imul
call
xor
xor
fmulp
push
sti
test
mov
pop
inc
cld
aam
ss
ljmp
and
call
push
jmp
out
sysenter
lret
clc
scas
pavgb
das
sbb
test
flds
out
inc
popf
or
mov
pop
je
xchg
and
imul
jnp
repnz
jno
mov
popf
out
stos
inc
xor
add
int3
push
xchg
sbb
ljmp
mov
daa
lret
jnp
in
mov
inc
outsl
outsl
mov
and
jg
stos
jmp
arpl
pushl
cmpsl
adc
and
imul
adc
aas
cmp
push
ja
sbb
sub
pop
push
cmp
cld
mov
insl
jns
out
and
sub
adc
lret
sbb
push
daa
sub
loop
cwtl
push
jl
xchg
xchg
aaa
adc
std
jg
xor
lret
jo
sbb
out
fildll
shll
xchg
push
sbbb
jp
sti
jle
movsb
sbb
mov
dec
test
mov
call
or
scas
lret
cmp
out
and
mov
mov
dec
ret
or
add
pop
push
adc
inc
sub
rorl
push
add
sub
hlt
push
inc
movsl
jne
xor
fistpll
jo
pop
mov
sbb
mov
cs
ljmp
add
fnstenv
adc
leave
inc
daa
lds
or
cmpsl
cmp
icebp
ljmp
stc
movb
cmc
pop
out
add
setae
scas
add
or
clc
fs
push
xchg
ret
aam
dec
je
xchg
std
cmpsl
dec
xchg
cmp
cs
sub
push
pop
in
mov
call
es
rcl
inc
out
pop
js
movhps
fdivr
push
cmp
xchg
nop
mov
call
testl
shll
aad
xchg
inc
aaa
je
sti
test
and
test
mov
mov
push
vpshufd
adc
imull
sti
pop
and
sbb
call
adc
loopne
aad
sub
mov
pop
pusha
popa
pop
lods
out
in
mov
ret
sbb
push
adc
pop
dec
fdivrl
ja
sbb
mov
scas
inc
pushl
out
pop
add
std
cmc
cwtl
mov
cmovnp
inc
clc
add
addr16
xchg
popf
adc
push
adc
lret
inc
loope
mov
lret
mov
gs
sbb
sti
or
xchg
loop
es
frstor
sbb
cmp
cmpsb
mov
xchg
jns
js
adc
aas
pop
test
sub
xor
sub
stos
lcall
ljmp
loope
pop
lcall
sbb
mov
aas
lea
ss
cld
sbb
mov
push
xchg
roll
or
pop
cmp
pop
mov
mov
xchg
sbb
shll
pop
dec
repnz
and
or
push
ffreep
sub
outsb
gs
test
enter
jl
lcall
and
ds
inc
inc
adc
add
jge
insl
mov
ds
xchg
push
inc
fistpll
mov
arpl
sub
mov
xchg
repz
xchg
mov
das
aam
sbb
repnz
and
mov
sub
push
dec
cmp
jns
push
clc
cmpsb
xor
sbb
push
xlat
and
iret
sbb
dec
pushf
inc
add
inc
sbb
xor
lret
pop
cld
les
jnp
fwait
mov
in
inc
xchg
jne
mov
jg
loop
cmpsl
mov
lea
xorb
adc
push
daa
outsb
js
mulb
cmp
addr16
mov
jmp
scas
out
add
jp
adc
inc
arpl
xor
leave
inc
arpl
adc
lret
loop
idivb
adc
arpl
dec
sub
dec
in
xchg
cli
jmp
mov
or
fstps
mov
push
mov
pop
outsb
js
clc
jle
rorl
push
inc
popa
in
jno
xchg
sub
sbb
pop
bnd
pop
xchg
data16
jnp
int
push
ds
addr16
jb
in
jp
lods
jg
testl
inc
cmp
iret
mov
fcmovne
jnp
mov
mov
lods
shll
cltd
or
mov
dec
aam
sbb
pusha
or
fisttpll
dec
mov
or
mov
mov
jb
jbe
dec
nop
lret
xor
xchg
xchg
xchg
xchg
sbb
mov
sub
adcl
pop
aad
lods
inc
add
sub
lret
iret
adc
lcall
cmp
outsb
dec
sbb
cld
xchg
push
and
jmp
mov
rol
and
sarb
push
sub
ficompl
dec
dec
xchg
in
adc
daa
add
jae
std
pop
nop
data16
rcrb
dec
in
xchg
sahf
popf
movsl
adc
xor
mov
repz
jnp
mov
or
pushf
outsb
orl
pop
xor
fiadds
cmp
into
sahf
in
idiv
call
call
leave
int3
jl
loope
push
mov
push
sbb
stos
cmc
jle
cmpsb
je
jae
shl
xlat
push
imul
dec
test
idivl
lcall
mov
and
add
push
imul
hlt
sub
add
mov
lds
xor
icebp
sub
insb
std
mov
push
pmaddwd
adc
jle
dec
jbe
pop
in
aaa
scas
jbe
lcall
jae
in
sub
insl
adc
xor
mov
pop
push
mov
cmpsb
cmp
shl
mov
cmp
cmp
dec
seto
or
inc
mov
xchg
cvtpi2ps
add
or
dec
nop
insb
jns
adc
leave
movsl
das
add
lea
pop
cli
xchg
fisubrl
andl
adc
pusha
mul
movsb
adc
into
sahf
adcl
push
jmp
iret
movsb
or
push
xchg
jge
out
pushf
adc
jmp
xchg
jno
mov
jb
inc
das
push
popa
shl
jmp
push
sub
or
loop
leave
mov
outsl
push
pop
inc
pop
push
xchg
push
push
mov
cmp
repz
pop
mov
in
xor
pop
adc
mov
pop
fst
iret
adc
adc
stc
mov
les
daa
out
enter
rorl
pop
cmc
cltd
inc
gs
lcall
xor
call
loopne
adcb
add
loope
cld
js
andl
gs
xor
cmpsl
mov
inc
add
test
push
push
fstpl
test
adc
ret
imul
cltd
cld
mov
inc
les
repnz
mov
into
and
clc
sbb
cmpsb
adc
xchg
adcl
loope
sahf
fnsave
addb
fstl
and
add
fwait
subb
adc
pop
fbstp
fidivrl
jge
push
lods
rolb
mov
inc
scas
mov
mov
shll
hlt
ror
stos
cld
or
inc
xchg
add
ss
in
nop
push
dec
pop
inc
inc
dec
jbe
outsb
loope
scas
pop
add
push
sub
inc
into
out
adc
aaa
mov
push
mov
push
dec
adc
loope
cmp
push
mov
xchg
rcl
dec
push
inc
xorl
sti
mov
add
fcomps
push
xor
cli
daa
xchg
out
or
fsubr
rcr
ss
mov
pushf
jecxz
scas
pop
cwtl
pop
cli
push
sbb
pop
icebp
cmp
daa
or
test
imull
cld
add
sbb
fldt
xchg
test
inc
cmp
xor
lock
push
aaa
icebp
push
mov
daa
adc
inc
dec
add
lcall
cwtl
negl
das
jecxz
arpl
jne
aad
sbb
daa
mov
dec
sbb
dec
fnstsw
adc
shr
jbe
mov
xor
inc
cld
aam
out
imul
dec
loopne
pop
mov
add
jecxz
adc
inc
fdivl
rcl
pop
mov
xor
sbb
mul
cmpb
pop
inc
movsb
mov
add
mov
mov
je
movsl
gs
mov
scas
xchg
fpatan
fnstcw
and
sbb
das
inc
push
in
add
cwtl
mov
xor
in
iret
cmp
das
je
mov
pusha
adc
pop
mov
cmp
lcall
mov
in
jp
fstl
jne
mov
cmp
push
stos
iret
nop
incl
enter
pop
push
aam
lods
std
clc
inc
addr16
cmp
inc
jo
push
aad
jge
call
cmp
stc
in
test
pusha
and
rcr
mov
rorb
add
sub
pop
mov
lcall
mov
out
maxps
xchg
jmp
cld
and
pextrw
je
mov
ficompl
stos
jle
adc
ret
inc
lret
loope
rorb
jle
dec
lret
mov
add
mov
nop
in
roll
lock
sub
fdivs
xchg
out
xchg
sub
notl
mov
and
fwait
nop
sub
js
inc
pop
in
xchg
pop
xor
mov
push
inc
push
xchg
adc
pop
adcb
jecxz
jle
xor
mov
mov
push
mov
cmpsb
mov
ja
clc
fsubrs
cmp
or
sub
cmpsl
test
mov
mov
ret
add
out
xchg
dec
es
mov
mov
stc
imul
inc
jecxz
cmp
lea
daa
jae
add
psllw
mov
dec
sar
pop
mov
mov
movsb
push
mov
ror
mov
repz
xchg
sub
push
jmp
push
push
lahf
or
lds
movsl
mov
or
lods
xchg
adc
jae
mov
xor
sbb
lcall
pop
cmpsl
cmpsb
ret
daa
ss
xchg
xor
fisttpll
idiv
adc
and
popa
or
lea
clc
adc
jne
sbb
push
roll
andb
hlt
and
cs
daa
jnp
cmp
pop
inc
cmpl
inc
adcb
and
cmova
sub
sub
loopne
pop
test
mov
in
negb
repnz
mov
test
adcb
sbb
ret
sub
rorl
mov
shlb
cs
lods
imul
push
push
xchg
add
mov
xchg
testl
xor
fucomip
jl
ss
cli
lods
sbb
incl
add
xchg
loope
lods
mov
jmp
lods
xor
mov
repz
add
cmp
mov
pmaddwd
je
jns
and
repz
xor
mov
movsl
xchg
push
add
arpl
mov
pop
add
mov
or
mov
pop
aad
adc
xchg
adc
xlat
xor
repz
push
or
sub
lds
adc
add
sub
test
stos
sub
inc
std
jg
mov
aaa
shrb
gs
in
movsb
cmp
push
inc
lcall
mov
push
out
jmp
popa
imul
popf
dec
jle
popf
sbb
cmp
pushf
jnp
mov
pop
ss
push
pop
fwait
inc
jle
push
sbb
or
adc
jbe
clc
or
loop
das
pop
mov
mov
les
add
push
seto
aas
stos
fisttpll
andl
pop
dec
mov
addr16
xor
shrl
pop
xor
cmp
mov
push
xchg
mov
xchg
jg
xor
cmp
sbb
hlt
iret
push
or
adc
fistpl
inc
pusha
mov
dec
jmp
add
sbb
lcall
in
mov
jne
scas
data16
and
jb
fldenv
out
jno
pushl
pop
or
xor
jnp
jo
cmp
pop
shrb
cmp
test
scas
sub
cltd
or
pusha
pusha
sbb
dec
lahf
mov
mov
dec
xor
std
mov
int3
outsb
stos
js
fmuls
mov
icebp
scas
test
lock
jb
data16
cmp
mov
mulb
inc
in
loopne
cmpsl
inc
jmp
push
mov
push
add
pop
jne
or
mov
loop
cmp
pop
movsl
imul
sbb
mov
jo
lret
mov
rcll
sahf
dec
sub
cld
test
xchg
pushf
jl
or
xorps
leave
jp
pop
sbb
mov
fbstp
ficomps
cmp
sbb
cmp
std
inc
pop
jne
dec
cmp
dec
add
sti
mov
and
loopne
inc
jl
fucomi
inc
frstor
mov
loopne
xor
mov
call
int3
cmp
lds
rcrb
ss
hlt
pop
insl
testb
stos
es
cld
pop
in
mov
ss
scas
push
rorb
xchg
pop
sbb
pop
xorl
mov
and
sbb
push
xor
mov
push
je
dec
in
std
add
int
or
add
test
popf
mov
aas
push
aas
mov
mov
cmp
mov
dec
das
mov
adc
stos
cmc
mov
lods
add
push
xchg
pop
dec
or
mov
or
jecxz
lret
neg
dec
and
jg
pusha
lret
dec
dec
lods
mov
mov
outsl
int
dec
lcall
shl
mov
push
sti
jno
ja
ret
loope
mov
sarl
adc
das
pop
jb
gs
in
fildll
sbb
sbb
icebp
mov
mov
stc
sbb
popa
insl
jno
jmp
stos
xor
sarb
sub
adc
mov
lahf
push
cmp
movsb
add
sahf
push
mov
gs
adc
sub
push
dec
jo
aas
adc
lret
adc
fidivrs
sbb
fdivrl
jae
jns
icebp
ret
jg
pop
mov
lods
and
into
shrb
mov
enter
popa
nop
repz
adc
xor
movsb
add
jmp
lret
aam
ds
jnp
shll
repnz
add
add
aaa
dec
icebp
mov
fs
sbb
add
push
pop
test
push
rolb
push
push
dec
adc
xorl
repnz
test
shll
push
inc
shlb
outsl
dec
inc
mov
jbe
int3
jnp
out
push
sbb
xor
repnz
cs
dec
xchg
movsl
loop
push
jecxz
xor
inc
mov
mov
mov
and
shl
testb
xchg
inc
cmp
lret
scas
cmpsb
pop
inc
cwtl
dec
pop
jmp
xchg
fisubl
test
scas
ss
add
push
sub
cmp
lret
cmp
xchg
push
sahf
jns
fistps
popa
pop
call
sbb
fucomip
mov
fs
adc
add
mov
test
bound
pop
push
pop
sub
int3
call
mov
jecxz
enter
sbb
cltd
cmp
push
sub
xchg
sub
aas
addr16
dec
mov
into
out
test
mov
xchg
push
dec
adc
scas
push
daa
stos
lds
iret
add
inc
dec
pop
push
stc
sub
sbb
ss
mov
xchg
cmpsl
popa
nop
mov
or
sbbl
rorb
adc
inc
sbb
cmp
sarb
fcom
jo
jae
and
xchg
scas
mov
movsl
cmpsl
or
or
ljmp
jg
gs
push
enter
mov
mov
mov
sbb
scas
hlt
adc
shl
pop
clc
repnz
ss
cld
xchg
jbe
inc
fcoml
jb
mov
adc
insl
jmp
jle
call
sbb
push
add
fnsave
xor
inc
popa
rclb
insl
push
mov
lods
aaa
xlat
xchg
imul
mov
cmp
mov
int
jge
in
mov
int
mov
in
inc
mov
test
push
pusha
aaa
test
xchg
cs
sub
fidivs
call
sbb
inc
push
xor
add
cwtl
roll
or
repnz
inc
push
loopne
jg
mov
movsb
mov
sub
iret
sbb
fcmovnb
repz
lea
test
repz
inc
lock
xor
jle
ss
shll
hlt
ja
mov
mov
xchg
aad
mov
aad
jne
lods
inc
sub
mov
std
inc
cmp
fidivrs
add
xor
pop
stc
repnz
xorl
add
jg
scas
mov
adc
dec
fildl
loop
rolb
xchg
int
imul
dec
ficoms
jne
shr
popf
ret
pushf
add
pushf
testb
incl
xor
negl
out
mov
das
sub
std
aaa
jo
fcmovnu
out
loop
arpl
test
mov
shr
adcl
addr16
or
inc
ds
icebp
mov
or
cwtl
ja
out
lret
aad
sbb
sub
imul
addl
scas
lahf
pop
into
push
pop
xor
cmc
add
test
and
sub
and
jns
inc
push
jp
xor
and
sub
adc
nop
jp
fisttpll
jb
call
pop
mov
push
mov
sbb
enter
test
jecxz
xor
xor
mov
out
push
ss
sub
cmpsb
push
xchg
cmpsb
mov
inc
pop
xlat
fcmove
subl
xlat
mov
push
adc
ret
jae
repz
jns
decb
imul
loope
sti
pop
xchg
xor
sub
jge
jno
cmp
stos
push
sub
sbb
inc
outsb
or
test
fldcw
loopne
xor
pop
push
push
dec
and
lret
das
std
pop
mov
push
rcrl
roll
adcb
addr16
mov
outsb
loopne
das
xchg
pushf
sbb
mov
mov
mov
mov
inc
fidivl
sbb
mov
sbb
pushf
fcmovu
scas
mov
stos
pushaw
loopne
rclb
daa
int3
jbe
add
mov
mov
lods
enter
xor
gs
push
mov
mov
ljmp
out
outsl
test
out
pop
insl
adc
hlt
cmp
and
lret
iret
inc
pop
enter
movsb
mov
mov
xor
dec
sub
sub
jmp
and
jno
rep
movsb
mov
sub
fistpl
mov
push
scas
or
pop
add
cmpsl
or
mov
fstpl
jl
or
shll
popa
jg
sbb
call
stos
push
pop
xchg
loope
pop
fsubrl
stos
add
aad
xchg
dec
mov
decl
fmuls
adc
jb
jae
fs
xchg
push
pop
lock
js
adc
mov
mov
inc
xchg
xchg
sub
cmp
jge
aam
loope
dec
and
add
fldl
push
lahf
imul
stos
pop
ja
and
testl
lcall
lea
jns
or
jge
scas
mov
movsb
or
loope
xorb
out
loope
lret
aam
in
icebp
dec
xchg
je
push
jge
mov
push
jmp
adc
scas
shrb
stos
inc
and
push
adc
sub
pop
iret
cmpb
in
pushf
mov
int3
sti
fmull
in
inc
or
adc
xchg
xchg
ret
movsl
in
dec
test
cwtl
mov
sbb
test
inc
mov
inc
nop
mov
pop
cmpsl
out
cmp
in
and
loope
sbb
jp
clc
out
lods
sub
xchg
pop
insb
decl
adc
and
out
lea
add
ret
dec
pop
and
roll
mov
cmp
pop
jno
xorb
jnp
sub
inc
shll
jmp
ficomps
jp
xchg
into
push
push
xor
test
xor
push
sub
es
xor
pop
mov
icebp
lcall
lock
andl
add
jp
sbb
jmp
addl
arpl
or
mov
dec
pop
add
cmovge
push
shlb
or
repnz
add
push
pop
fucompp
in
mov
pop
lret
ljmp
mov
and
jmp
xor
push
and
jnp
sahf
jns
push
fidivs
pop
cwtl
popa
sti
add
jp
add
in
pop
imul
xchg
clc
icebp
mov
inc
xor
divb
push
ljmp
pop
ret
in
add
cmpsb
enter
sbb
xchg
cmp
ss
inc
push
stc
push
jae
cmp
cltd
dec
lcall
add
aaa
cli
lods
sub
mov
inc
and
lods
enter
push
and
aas
xchg
int
addb
fs
and
fbld
dec
cmp
jle
xchg
sar
rorl
sbb
bound
sub
push
bound
dec
xchg
pusha
pusha
xchg
adc
addr16
xor
mov
insl
icebp
out
mov
ds
out
lock
nop
adc
adc
push
push
pop
fidivrs
mov
push
imul
add
mov
lods
mov
fsub
adc
and
mov
pop
je
fidivl
sbb
inc
cwtl
jnp
add
sbbl
add
add
cmp
push
testl
insl
or
insl
insb
add
add
xchg
or
adcl
dec
insl
dec
popa
fstps
je
mov
jo
das
xchg
js
xor
leave
adc
jo
pop
cmpsb
and
inc
mov
in
mov
out
inc
push
lcall
sbb
in
xorl
jb
cmp
sbb
sub
inc
jmp
lods
fcoml
mov
orb
xor
rol
inc
xchg
mov
inc
imul
mov
int
pop
loop
gs
adc
add
push
in
bound
shll
lcall
out
sbb
out
lcall
les
fnstenv
push
push
mov
arpl
xor
jmp
insl
sub
aaa
pop
sub
ljmp
fisubrl
fmull
out
cltd
mov
fcoms
mov
fadds
fildl
adc
test
jo
stc
ss
pop
imul
test
out
or
mov
test
fnstenv
movsl
stos
ljmp
imull
cwtl
lcall
add
mov
bound
xchg
ret
mov
loopne
out
mov
imul
or
jle
shlb
cmc
sbb
lea
push
add
inc
icebp
pop
pop
movsl
or
mov
mov
fwait
leave
xor
cwtl
xchg
data16
psraw
mov
mov
xchg
and
stos
mov
fidivrl
cmp
and
sahf
outsb
out
addr16
add
or
push
pop
je
clc
inc
adc
lcall
out
or
xor
mov
jg
ss
insl
lcall
daa
xchg
mov
mov
cli
pusha
movsl
aaa
leave
mov
cmpsb
or
xor
push
rolb
cmp
clc
and
sbb
mov
mov
push
repnz
xchg
dec
mov
in
fisubrs
rep
mov
test
sahf
push
jl
mov
pushf
rcrb
repz
jge
xchg
ror
mov
je
add
test
push
pusha
push
jg
insl
push
in
cmp
xor
sub
lods
xchg
or
push
lods
push
out
pop
negl
dec
stos
mov
sub
daa
hlt
das
sbb
dec
sahf
push
and
and
test
cmc
jl
xor
jecxz
out
out
xchg
add
leave
mov
xor
test
fmuls
mov
aaa
adc
sbb
ds
pop
add
jecxz
in
add
cmpsl
pop
adc
repz
mov
jns
fsubrs
test
inc
mov
out
push
push
cmpsl
rcrl
or
push
sub
inc
mull
in
ficomps
xor
mul
mov
inc
jb
adc
lods
cmpsb
pop
div
and
inc
xor
xchg
dec
jp
ret
jmp
mov
out
lds
mov
xchg
lock
xor
loopne
js
mov
mov
add
dec
adc
cmpsl
sub
or
push
push
pop
lods
and
icebp
mov
in
xchg
inc
sub
sub
ret
sbb
push
insl
add
stos
adcl
cs
hlt
loop
pushf
mov
pop
mov
sub
ffreep
push
cmp
mov
xchg
cmp
test
adc
hlt
jne
test
xor
inc
movsl
inc
and
in
and
mov
out
dec
movsl
pop
lret
shll
sti
pop
rcll
xor
mov
outsb
push
add
out
xchg
das
inc
xor
mov
mov
adc
gs
bound
or
in
sub
sbb
jo
xor
push
sbb
push
inc
pop
dec
jle
mov
fsubs
push
cltd
das
and
push
pop
cmc
push
jge
cmp
sub
xor
lcall
das
dec
lret
mov
xchg
movsl
shl
and
js
jno
fbstp
jmp
xchg
mov
cmp
push
push
sub
or
cmp
lea
inc
mov
stos
mov
xor
xrelease
imul
outsb
das
or
loope
add
enter
repnz
insb
mov
out
add
cltd
mov
in
ja
add
cmp
xchg
jg
outsb
mov
stos
ficomps
pop
and
leave
adc
pop
cmpsl
vmovaps
sbb
faddl
out
lock
lods
in
call
int3
gs
mov
mov
lret
adc
and
popa
jo
jmp
iret
shlb
outsl
and
imul
jae
jae
jg
cmc
mov
and
in
cmp
fimull
cmovge
push
mov
add
lcall
inc
cwtl
jmp
lret
dec
push
popa
shrb
cwtl
pop
push
or
and
xchg
lea
mov
jl
and
push
dec
xchg
int3
out
fstpl
mov
adc
pop
or
dec
jns
cmpsb
inc
cmpsl
lret
test
fwait
sbb
adc
jg
arpl
mov
call
push
xchg
je
mov
in
mov
mov
push
scas
fs
jnp
inc
inc
cmc
mov
mov
or
aaa
mov
mov
add
xchg
movsb
repnz
movsl
das
mov
dec
pop
mov
add
push
pop
cli
rolb
and
int3
sub
pop
in
jge
mov
add
pop
jbe
sub
jno
dec
mov
adc
inc
data16
cltd
cmp
sbb
dec
movsl
adc
mov
iret
sbb
scas
mov
stos
mov
lods
mov
ffree
or
mov
xlat
add
stos
scas
add
loop
into
jns
xchg
sub
lcall
ljmp
inc
icebp
push
rcll
or
xor
loop
mov
daa
push
subl
cmp
rol
xchg
int3
xor
sub
push
ss
pop
cli
xlat
fs
xor
and
ljmp
nop
add
dec
sbb
jecxz
mov
pop
jle
lret
xchg
add
mov
sub
lret
fmull
loopne
mov
mov
cmpsl
fcmovb
push
je
pusha
pop
or
jcxz
int3
pop
push
jg
jbe
inc
inc
aaa
scas
stc
movsb
out
test
or
and
xchg
dec
pop
imul
fistpl
imul
and
push
icebp
pop
mov
inc
xchg
movsb
enter
and
sub
jb
xor
insb
cmp
btr
mov
mov
cmp
add
stc
enter
fsts
ss
lods
setb
pop
adc
fdivl
push
sub
xor
and
rorb
and
and
sti
push
insl
ss
or
xor
push
in
imul
mov
adc
dec
cmpsl
fisubl
dec
movsb
or
mov
mov
mov
xor
add
or
sub
cmpsl
dec
pop
and
daa
sub
jecxz
addr16
sbb
and
test
fwait
fwait
dec
and
mov
jecxz
xchg
dec
jmp
setl
sub
mov
mov
sahf
cwtl
xor
xchg
and
mov
divb
fwait
popa
fmull
popf
jp
dec
fdivrp
adcl
adcb
push
loopne
cmpsb
jl
mov
jno
nop
push
in
sbb
ljmp
popa
es
das
sub
push
fisttps
pop
leave
lcall
inc
mov
js
add
sub
inc
xor
sub
push
jmp
push
aas
and
sti
fs
jmp
xchg
out
or
stos
leave
jae
dec
movsl
pop
mov
xchg
push
jo
sahf
push
and
cmc
leave
bound
icebp
iret
fistpl
scas
int3
movsb
pop
in
xor
inc
mov
jp
push
mov
loopne
and
sahf
in
mov
jge
fdiv
mov
pop
in
mov
jne
push
rcrl
stc
arpl
dec
sub
punpcklwd
sub
inc
out
sysenter
inc
mov
leave
int
pushfw
cmc
push
fidivrs
int
inc
outsb
xchg
outsl
push
add
in
outsb
stos
sub
mov
nop
dec
out
sub
nop
mov
inc
mov
lret
shr
test
in
addb
push
add
aas
mov
push
sub
imul
pop
sti
insb
call
inc
inc
cmp
lret
in
jl
xchg
xchg
insb
clc
bound
fistl
jb
loop
or
add
outsl
xor
addb
lods
stos
pop
cmp
jnp
push
jmp
js
cmp
in
or
loope
inc
mov
out
inc
adc
lret
fnstcw
test
mov
pop
pop
inc
and
loope
loop
mov
mov
in
jg
fsubrs
js
bound
or
stos
sbb
js
js
xchg
add
int
aad
ficoml
jp
mov
or
jge
dec
fwait
and
push
repz
xchg
mov
cmp
stos
out
das
pop
jne
in
or
jg
cmp
stos
out
insb
fdivrp
adc
xchg
cli
test
movsl
xchg
das
rorl
test
and
dec
and
mov
mov
mov
mov
outsb
mov
ss
jnp
sub
fdivrs
out
scas
add
inc
inc
mov
cltd
add
jmp
mov
and
sbb
add
xor
cmp
and
sbb
mov
imul
js
inc
into
call
imul
lahf
movsb
fisubs
vpunpckhwd
adc
jbe
aaa
out
sub
out
sarl
mov
mulb
cmc
decl
shll
pop
cltd
imul
push
push
enter
adc
push
jle
jae
popa
nop
sti
dec
lret
cmp
cmp
sub
pusha
pushf
call
std
pop
test
cmpsb
mov
inc
jge
or
cmovge
or
and
test
xchg
jae
mov
mov
lcall
cli
dec
jae
inc
rorl
roll
repnz
fidivrl
jp
dec
popa
test
daa
lcall
or
sub
data16
aaa
sub
inc
mov
lods
pop
inc
ja
out
test
lock
insl
mov
test
add
mov
xchg
fdivl
out
adc
scas
xor
jae
imul
push
into
sub
aaa
les
lds
lods
sbb
loope
jge
or
sub
cwtl
out
test
mov
push
xchg
outsb
fsub
int3
jae
mov
mov
mov
sbb
push
xchg
jl
dec
aad
add
mov
pop
into
outsb
idivl
daa
add
pop
js
leave
sbb
nop
jmp
jne
loope
iret
xor
xor
je
fisttpll
xlat
subb
mov
mov
pop
mov
iret
and
cmp
add
jecxz
or
xchg
cld
jae
inc
cmp
int
or
push
cmp
lret
jle
or
push
mov
mov
imul
pop
mov
sub
data16
and
sub
inc
lret
leave
test
aaa
pop
test
das
loop
mov
inc
or
test
xor
lea
pop
jne
push
inc
pavgb
test
int3
test
cmp
and
inc
rorl
mov
mov
icebp
fwait
mov
pop
cwtl
and
sbb
dec
enter
jb
push
mov
dec
imul
pop
arpl
into
mov
mov
push
lds
jg
dec
daa
push
sbb
stos
add
inc
xchg
mov
repz
iret
cld
xchg
ds
add
xor
in
lcall
mov
mov
xchg
enter
ret
cli
loope
dec
or
fnstcw
xor
jno
shlb
cmc
std
shll
xchg
inc
jmp
pushf
sbb
imul
adc
test
decl
add
sbb
adc
into
mov
aaa
cmp
arpl
mov
cwtl
loopw
xchg
xchg
mov
or
icebp
out
stos
add
and
jnp
mov
shrb
push
ret
push
dec
xor
pop
xor
out
mov
incl
cmpsb
adc
fwait
dec
lcall
mov
mov
sbb
add
mov
outsb
in
xor
xlat
in
inc
sbb
lock
ja
or
cmp
sbb
pusha
xor
ja
sub
jae
jl
fstpt
mov
mov
inc
scas
jle
push
loope
je
shlb
cmc
cltd
dec
fwait
xlat
adc
and
pushf
test
mov
adc
adc
aad
stos
mov
add
out
cmp
add
aad
mov
movsb
fimuls
aas
in
ret
enter
xor
mov
aaa
cmp
stos
out
fdivrs
stc
cli
xor
and
aas
adcb
pop
je
lods
cmp
ffreep
xchg
idivw
aad
cs
repnz
inc
add
enter
testl
cmp
movsl
sbb
mov
push
and
push
pop
movsl
mov
push
rcl
lcall
pusha
out
mov
adc
das
cmp
xor
xchg
fidivrl
sub
mov
into
pop
adc
sub
jp
ret
inc
cmc
loope
in
adc
bound
cmp
cmpsb
into
sarl
mov
push
je
mov
sbb
jg
out
xor
lds
push
iret
ja
pusha
lret
mov
fldt
push
xchg
mov
in
ljmp
icebp
jnp
into
pop
xor
outsl
mov
mov
popf
movsb
iret
rcrb
insl
xor
leave
stos
mov
stos
mov
ror
sub
jnp
sbb
notb
mov
xor
pop
mov
cmp
scas
je
cmp
xchg
stos
adc
sarl
pop
sub
or
mov
pop
ljmp
cmpsb
cld
push
lahf
sahf
dec
cwtl
mov
cs
mov
sub
adc
pop
sub
pop
inc
decb
pop
int
sbb
imul
xor
addr16
cld
mov
loope
fiadds
outsb
inc
mov
mov
ficomps
mov
rcr
push
dec
jp
dec
jmp
nop
gs
orl
xchg
inc
mov
ficompl
mov
arpl
jmp
inc
mov
mov
push
jmp
and
mov
and
loope
popa
inc
push
stos
sbb
sub
adc
add
fimull
mov
mov
mov
mov
cmpl
fs
inc
pop
or
adc
loopne
adc
dec
mov
and
sub
mov
dec
push
dec
xchg
sbb
fsubl
mov
repnz
jo
mov
scas
aaa
push
decl
sub
scas
or
sub
cltd
call
mov
inc
rcll
adc
push
push
mov
sub
mov
mov
adc
adc
pop
dec
leave
push
inc
mov
iret
lahf
cmp
stc
in
scas
jae
mov
jae
mov
lret
test
repnz
cmc
fldlg2
add
cs
enter
add
sbb
push
inc
rcr
dec
loop
mov
mov
cmp
mov
push
sub
out
flds
addl
sub
repz
xchg
pop
rorl
ja
adc
and
jno
and
cmp
xchg
jb
ljmp
fildl
cmp
ja
inc
pop
and
lock
incb
fnstsw
sbb
in
push
cmc
aad
mov
add
sbb
jno
add
adc
or
bound
mov
ret
scas
orl
add
xor
leave
xor
add
push
add
and
ljmp
mov
ds
stos
jns
mov
stc
pushf
cmp
sbb
add
jge
xor
add
arpl
lock
fildl
sub
pop
add
stos
shll
out
add
jno
cmp
mov
sub
mov
mov
nop
das
sub
sahf
aaa
idivl
xor
and
in
lods
imul
pop
inc
sbb
xorl
push
inc
mov
in
mov
cltd
dec
fcmovnu
out
mov
pop
mov
sub
scas
jmp
imul
iret
xor
pop
lret
xchg
out
xchg
fisttpll
test
addr16
mov
adc
add
lahf
jns
arpl
mov
loopne
cmp
jns
push
ret
and
mov
dec
decl
sbb
das
adc
xchg
fcom
or
pop
pop
and
push
adc
dec
aad
cmp
loop
out
mov
inc
loope
imul
adc
mov
adc
xlat
aam
inc
sbb
push
xchg
int
fisttpl
cld
sub
dec
mov
scas
and
iret
or
xor
out
shll
out
jge
pop
xchg
inc
push
push
jno
stos
pop
fidivrl
inc
arpl
mov
mov
mov
pop
xor
xchg
dec
imul
xorl
pop
rcr
aad
cli
jo
cmp
movl
push
insb
pushf
xchg
cmc
movsb
dec
inc
scas
test
mov
pushf
sub
nop
lea
cmpsl
popa
push
xor
pop
mov
bndstx
and
jp
push
inc
cmpl
mov
pop
cld
data16
addr16
call
xor
and
cmc
adc
movsb
dec
fists
pushf
stos
in
cmpsl
test
loopne
loop
add
clc
mov
push
fwait
add
xchg
cmpsb
icebp
inc
inc
scas
jle
arpl
imul
ret
andb
cmp
dec
pop
add
jno
leave
dec
mov
into
xchg
stos
mov
inc
xchg
inc
mov
jo
cltd
jo
daa
test
insl
jno
cmp
shrb
icebp
xor
add
inc
inc
sti
aad
cmp
jnp
jae
mov
sub
inc
addr16
or
fdivrs
jnp
mov
lods
ljmp
jnp
and
sub
xor
push
add
bnd
popa
int
mov
xor
cmp
call
push
push
or
xchg
insb
out
push
in
xchg
push
iret
inc
pusha
pop
mov
sub
iret
or
aam
aas
xor
xchg
adc
inc
les
mov
aam
ja
jae
leave
lods
dec
or
jo
cld
cmpl
push
push
jbe
mov
mul
cld
add
pop
adc
lahf
fcoms
scas
mov
pop
cwtl
jg
and
std
sahf
rclb
popa
add
daa
dec
sub
not
aas
lret
add
mov
idiv
ja
repz
or
jo
mov
mov
fsts
xchg
arpl
ljmp
nop
xchg
cmpb
test
xchg
cmpsb
adc
or
dec
mov
inc
sub
roll
push
mov
jp
push
mov
andb
push
pop
xchg
adc
xchg
jae
xor
bound
lock
adc
xchg
mov
and
scas
inc
jp
aad
mov
mov
dec
lahf
inc
sbb
jg
push
iret
fdivr
push
inc
icebp
jbe
cld
jb
cli
push
je
pop
cld
mov
mov
fistpll
cmp
lods
pusha
push
movsl
dec
jae
stos
iret
xchg
in
aad
ljmp
or
divl
lret
mov
fsub
mov
xchg
testl
stc
xor
sub
in
shrl
outsl
adc
mov
js
data16
out
stc
add
push
stc
mov
inc
faddl
inc
inc
jnp
mov
jg
sub
pop
sub
or
imul
testb
das
outsl
es
mov
adc
nop
sub
jp
rcll
and
pop
movsl
push
mov
outsb
jne
and
jbe
shl
push
movaps
xor
add
mov
and
addr16
rol
addr16
sahf
push
mov
dec
xchg
add
int
mov
mov
sbb
dec
lcall
arpl
je
push
dec
sbb
ret
cmp
imul
ret
lods
or
inc
pop
and
pushf
mov
clc
mov
and
add
into
push
and
outsb
insb
cmp
inc
out
jne
loopne
inc
clc
sbb
inc
xlat
lahf
cmp
mov
fisttps
and
xor
or
ja
inc
lret
cwtl
pop
push
js
inc
mov
add
add
pop
xor
aas
dec
shlb
cmpsl
in
or
test
test
call
clc
ret
jmp
fdivrp
jecxz
repnz
sbb
pop
lcall
inc
push
xor
add
mov
or
int3
adc
mov
inc
jmp
sbb
repz
jno
push
or
orb
push
xor
sbb
test
aad
add
dec
loope
xor
lahf
inc
cmp
dec
into
movl
dec
xor
gs
negl
incb
loopne
sbb
pop
hlt
xor
jno
mov
ret
mov
mov
sbbl
mov
fwait
jle
cmpsb
pop
mov
arpl
jae
and
cmp
into
adc
icebp
das
loopne
pop
orl
xchg
inc
nop
push
mul
inc
aad
mov
lahf
inc
pop
aaa
arpl
jae
or
ss
add
aam
ja
arpl
mov
popf
mov
loopne
ficoms
cmpsb
inc
out
fs
pop
push
mov
push
jmp
jge
xchg
cwtl
pushf
rclb
addl
mov
mov
aad
cmp
jmp
imul
test
std
in
pop
and
sbb
xor
cs
pop
rorl
cmp
arpl
jge,pt
shr
fstps
mov
popf
xor
cmp
in
mov
call
cmp
fiadds
mov
or
xchg
add
call
inc
xor
sti
xor
push
aam
mov
cmpl
mov
test
ret
iret
andl
jmp
adc
test
fcomp
jp
or
inc
mov
push
ss
mov
cmp
aam
xor
mov
sub
ja
inc
mov
and
gs
push
aaa
fs
repnz
repnz
xchg
sbb
xor
repz
xor
insb
xor
xchg
div
mov
inc
inc
scas
or
icebp
repz
xchg
push
sub
fwait
xor
sbb
xor
cmpsl
lret
in
push
dec
lret
push
or
insl
xchg
sahf
xorb
adc
int
cmp
dec
js
pop
and
or
sub
add
xchg
and
push
bound
and
mov
and
in
push
pop
in
data16
js
jmp
push
inc
push
push
mov
mov
pop
mov
cmp
andb
xor
mov
mov
std
jo
xchg
repnz
adc
push
push
dec
stc
push
sub
jno
lds
mov
iret
clc
mov
testb
lock
nop
clc
jbe
or
add
mov
mov
aaa
movsl
outsl
jb
lahf
mov
lret
cmp
clc
imul
push
cmovne
enter
sub
jl
jo
xor
mov
fwait
sti
mov
dec
pop
mov
dec
cmp
inc
popf
jbe
inc
imul
pop
sub
scas
push
loop
add
sbb
insb
pop
dec
pop
rcrb
das
mov
loopne
cltd
mov
int3
and
fsubrl
mov
push
dec
cmc
pop
repz
and
sbb
xchg
scas
setp
std
inc
mov
shrb
shlb
test
jnp
inc
fnstenv
scas
movsb
fidivrl
or
adc
dec
imul
mov
add
sar
ss
xchg
pop
stos
fwait
bound
iret
and
sbb
mov
aas
adc
cli
stos
stos
cld
xchg
pop
dec
icebp
sahf
or
in
jnp
xchg
mov
mov
sahf
xchg
xor
and
or
movsl
xchg
cmpsl
adc
mov
adcl
xchg
addr16
cmc
loopne
in
inc
sub
imul
adcl
aad
dec
out
pop
and
mov
sbb
hlt
push
jo
sub
xchg
das
mov
fidivrs
pop
xchg
test
sahf
mov
mov
insl
lods
movsl
ja
ret
pop
jb
or
aad
andb
call
aad
rcrb
lock
rcll
fidivrl
scas
or
shrl
je
xor
in
xlat
adc
lock
lock
and
jmp
or
jnp
sti
ja
nop
popa
push
inc
js
jne
std
push
xor
movsb
imul
xchg
ret
inc
push
mov
xor
fstps
repz
sbb
mov
cld
das
mov
mov
mov
aaa
sub
shlb
stos
bound
dec
ja
jbe
int3
jns
pop
fistpll
in
ja
xchg
pushf
xchg
jns
gs
hlt
jg
add
jne
mov
or
jmp
test
jb
roll
imul
mov
sbb
cmp
push
lods
jecxz
mov
cmovnp
adc
push
mov
add
leave
mov
xor
fidivrl
pushf
movsl
das
cmc
loopne
sub
lods
jno
adc
mov
mov
lea
decl
out
xor
test
pop
cwtl
bound
jmp
adc
push
lods
inc
cmp
ret
clc
stos
in
xchg
addr16
cmp
xchg
mov
in
roll
add
out
scas
incb
ljmp
mov
outsl
test
lock
xorb
pushl
lods
jle
sub
xor
cld
mov
ret
pop
scas
mov
mov
add
xor
push
jnp
in
rorb
fdivrs
mov
hlt
add
cmp
xchg
int3
lock
mov
scas
jmp
movsl
out
cli
int
lcall
push
shrb
cmp
rcl
repz
fidivl
inc
sbb
daa
sti
jbe
ljmp
sub
fidivs
loopne
mov
je
scas
push
mov
jge
add
dec
mov
in
mov
les
dec
loopne
mov
ss
ret
pop
inc
cmpsb
pop
add
pop
fsub
jbe
sub
sbb
shll
sub
test
adc
mov
sbb
and
push
fsts
cmc
fsubp
daa
call
sbb
shll
test
pop
gs
les
arpl
and
test
subb
scas
outsb
dec
push
jge
add
and
sbbb
fs
popf
adc
aad
filds
sbb
loopne
rclb
add
scas
pop
xchg
addr16
fmuls
popf
ja
add
adc
pop
mov
and
cs
leave
test
fcmovbe
iret
insb
mov
fs
xor
inc
and
inc
movsb
addr16
jbe
mov
outsb
int
xchg
and
lock
xchg
lods
pop
xchg
scas
out
stos
pop
fildll
data16
mov
xor
dec
pop
daa
in
negb
xchg
push
in
sar
enter
filds
inc
popa
in
leavew
notl
sti
pop
iret
loop
lock
xchg
rolb
push
mov
stc
xchg
xchg
sti
sub
mov
cmp
cmp
cwtl
dec
pusha
ss
aam
imul
popa
sbb
cwtl
xor
loope
inc
sbbl
imul
fisttpll
gs
out
outsb
ss
aaa
lea
movq
push
arpl
out
xor
fistl
mov
data16
movsl
jecxz
ja
xlat
fmuls
aad
adc
data16
popa
scas
enter
sbb
cwtl
add
and
lea
orb
pusha
push
repz
mov
into
and
mov
sarb
sub
inc
push
dec
pop
or
mov
mov
xchg
cli
leave
push
into
icebp
fiaddl
and
sbb
xchg
jnp
outsl
ja
inc
outsb
loopne
ds
pop
je
sub
roll
mov
mov
sub
lock
push
or
jle
popa
mov
outsb
xchg
pushf
push
fisttpll
pop
inc
dec
inc
add
std
lret
cmp
mov
mov
xor
loope
in
inc
into
xchg
xor
test
test
sbb
dec
add
xor
jo
into
adc
stos
fmull
inc
cli
pushf
je
dec
int3
out
xor
movd
jnp
inc
adc
jne
scas
movsl
lock
lods
into
mov
cwtl
xchg
loope
adc
mov
loopne
movsl
pop
lahf
mov
das
dec
mov
jg
in
aas
push
test
lods
ljmp
push
mov
aaa
divb
clc
pop
leave
leave
mov
xor
rcr
mov
pop
cmp
in
and
jp
jl
add
push
push
mov
dec
and
roll
pop
pop
in
ds
popa
int
pop
lret
leave
and
icebp
xchg
inc
cli
sahf
xlat
mov
mov
or
jmp
roll
lea
into
and
inc
popa
inc
sbb
jnp
in
stos
push
loopne
call
fiaddl
or
mov
cmp
call
aaa
ficoms
cmp
out
aad
ficompl
fisubrs
xchg
aaa
test
in
ss
or
mov
sbb
mov
jle
push
scas
dec
jg
je
test
adc
mov
std
insl
push
fwait
dec
adc
pop
cmp
fsubrs
mov
cmc
enter
mov
sti
mov
enter
xor
cmc
mov
mov
loopne
stos
add
dec
mov
mov
mov
mov
dec
push
mov
xor
sbb
repnz
lock
jbe
bound
pusha
mov
mov
jl
pop
ud0
scas
dec
jle
jns
cltd
mov
xchg
les
aam
jl
out
dec
sbb
pusha
mov
std
addb
cwtl
xor
int3
int
sub
cmp
mov
pop
aad
pop
mov
in
mov
push
mov
fidivs
mov
jge
orb
shlb
shll
mov
mov
jl
mov
adc
cli
iret
rorl
pop
adc
jns
sbb
testl
cmp
dec
mov
popa
push
pop
mov
aaa
pop
loopne
pop
jle
lret
mov
test
dec
negb
xchg
repz
jmp
xchg
dec
movsl
gs
fcomps
xchg
xor
mov
push
xchg
inc
icebp
je
adc
sti
fiaddl
mov
sbb
dec
sub
das
das
xchg
test
add
stc
cmp
add
mov
mov
ret
and
xchg
fcoms
out
lahf
fwait
gs
sub
aam
dec
sti
adc
rcll
dec
cmc
pop
dec
dec
in
xchg
push
mov
and
popf
addb
or
add
mov
cmp
inc
inc
lods
hlt
xor
jae
jb
sub
push
dec
lock
dec
dec
xor
fisubrs
adc
jbe
mov
or
cmp
dec
or
jo
xchg
or
scas
xor
movsl
and
aad
sbb
in
xor
xchg
out
inc
test
out
cltd
test
ss
repnz
pusha
adc
outsb
and
shl
jle
outsl
addr16
rcrb
add
inc
add
int3
inc
jle
imul
sub
inc
insb
jo
pop
sbb
mov
jl
lcall
enter
jo
mov
mov
cmp
stos
xor
sub
pop
push
push
cmp
repz
sarb
and
add
js
add
and
xlat
sbb
xlat
cmp
sbb
repz
stos
push
adc
or
jmp
test
dec
cwtl
dec
sub
sti
or
inc
pop
mov
mov
push
repnz
xor
mov
jp
mov
insl
add
or
pop
pop
data16
outsl
push
add
rcr
sbb
push
gs
or
scas
insl
orb
cmp
loop
loop
lock
sub
sub
in
lret
gs
mov
mov
mov
bound
leave
and
bound
pop
mov
test
inc
push
lret
mov
ds
or
aad
lock
call
imul
aaa
lds
cld
and
dec
stc
arpl
and
inc
xor
aas
jae
sahf
mov
pop
cmp
push
jmp
cltd
jge
shl
dec
or
cmp
mov
aam
xchg
fsubrs
sahf
data16
in
adcb
pop
add
notb
mov
inc
pop
in
and
fstl
pop
fadd
push
mov
adc
jns
icebp
shlb
pushf
cltd
shrb
cmp
shlb
xor
add
add
fcoms
shrb
cli
das
sbb
sbb
in
movsb
out
fisttps
xchg
movsb
pusha
lcall
xchg
push
stc
mov
addr16
jnp
cld
mov
xchg
cmp
leave
sbb
add
jb
xor
pop
out
pop
or
in
xchg
fwait
sahf
sub
jl
dec
or
cld
stos
fimull
and
mov
imul
popf
xor
inc
add
mov
lahf
testl
lcall
pop
mov
arpl
in
and
repnz
mov
add
sbb
leave
xchg
mov
sub
add
ret
cmp
push
push
cmp
inc
je
dec
mov
xor
dec
ret
push
out
xchg
movsb
testl
dec
aaa
inc
or
mov
shrb
mov
push
ret
loope
test
jb
bound
inc
test
andl
push
jbe
dec
push
out
cmpsl
cwtl
or
loop
lahf
jbe
mov
sub
sub
repz
out
cli
out
adc
sti
mov
mov
ja
lds
cli
and
inc
mov
mov
cmp
clc
pop
xchg
ljmp
testl
cmp
test
push
xor
mov
cmp
lods
xor
pop
add
ljmp
sub
call
int
lret
xchg
or
mov
enter
fsubl
mov
adc
fstp
test
imul
mov
cltd
arpl
or
lods
jne
insb
add
jo
popf
loope
and
daa
dec
imul
test
mov
imul
fcoml
movsl
incl
shrl
jp
scas
jnp
jmp
jae
lahf
in
sub
pop
adc
dec
mov
std
fucomi
jecxz
add
and
stos
aaa
mov
push
or
out
sub
rorb
inc
cmp
push
mov
mov
jno
push
dec
xlat
push
or
cmp
pop
push
or
lods
dec
push
jle
mov
leave
inc
mov
rcll
sub
push
imul
mov
xchg
loope
mov
sbb
dec
loop
sub
sub
in
pop
xchg
repnz
imul
mov
pop
xchg
xlat
shlb
mov
stc
decb
enter
sub
xlat
xor
fwait
popa
daa
xchg
es
and
lods
inc
test
sbb
sbb
jg
fdivl
aad
push
popf
out
hlt
add
mov
aad
mov
cwtl
jno
xchg
xor
pop
mov
aaa
ds
pushf
ljmp
call
mov
mov
and
sbb
sti
inc
inc
repnz
sub
shr
popf
jecxz,pt
stos
push
insb
divb
jns
mov
outsl
aaa
mov
adc
les
xchg
pushf
dec
je
mov
or
pop
movsb
mov
outsb
sbb
cmp
and
ja
sub
aas
out
xchg
add
cltd
xchg
xchg
aad
ljmp
rol
add
imul
repz
dec
cmp
imul
inc
mov
into
fdivl
mov
jmp
mov
mov
in
imul
xor
std
dec
push
cld
xor
test
jmp
sub
fisubrl
insb
test
jl
out
js
dec
mov
xor
bound
add
test
adc
outsb
add
pusha
repz
loope
jb
pop
jg
js
mov
xor
fistpll
add
dec
jge
jp
mov
cmp
fsubl
push
in
pop
xchg
adcl
lcall
dec
pushf
or
push
xor
pop
out
mov
push
xor
mov
cs
xchg
imulb
loope
mov
add
shll
pop
mov
loope
mov
mov
xchg
lods
scas
sbb
enter
sub
lea
lcall
fstpt
out
popf
add
scas
dec
insl
inc
mov
or
inc
and
xor
mov
test
push
cli
sbb
dec
fwait
dec
jno
test
pop
cli
ret
mov
clc
mov
xchg
dec
inc
fsubs
out
dec
fimull
fdivl
jg
aad
lret
mov
addr16
sbb
test
xor
rcll
adc
gs
dec
mov
ret
and
xchg
adc
in
in
lret
int3
push
cmp
incl
sbb
xor
rcrb
add
std
adc
stos
pop
mov
jecxz
xchg
rorl
fisttps
daa
insb
arpl
and
xchg
sub
icebp
loop
adc
test
xchg
scas
aad
pop
jbe
jbe
dec
shlb
cmpsl
dec
fistpll
outsb
es
int
add
int
push
mov
inc
pop
int3
push
cmpsb
stos
dec
jl
cmp
testl
jl
adc
xchg
add
mov
gs
hlt
cmp
mov
popa
repz
push
or
xor
aam
aas
cmp
out
dec
xchg
pop
or
jge
fisubs
pop
shrb
repnz
mov
sbb
cltd
sti
lea
xor
mov
pop
add
jno
movmskps
xor
movsb
xchg
inc
in
scas
push
or
jae
jp
addr16
or
adc
xchg
in
pushf
pop
push
loopne
jecxz
push
adc
inc
call
pop
ljmp
inc
and
xor
push
mov
mov
push
jns
push
inc
mov
daa
adc
data16
ljmp
push
dec
dec
enter
test
ds
aad
cmp
dec
jo
add
and
sahf
lret
jns
add
sub
repz
int
mov
push
andb
dec
xchg
sub
xchg
xchg
or
std
dec
data16
lcall
cld
outsl
loop
jecxz
sub
xchg
inc
daa
cmp
jle
inc
movsl
sbb
mov
xor
clc
add
mov
daa
jb
lret
jmp
int3
xchg
mov
iret
adc
pop
mov
xchg
mov
outsb
jne
mov
cmp
jge
cmp
lret
pop
cld
popf
aad
mov
enter
popf
mov
push
mov
ja
data16
xchg
rorl
divb
push
popa
xchg
dec
push
icebp
mov
test
and
xor
mov
andb
insl
lock
xchg
inc
mov
dec
xor
xchg
shll
pop
inc
pop
jmp
into
iret
inc
sbb
in
xor
xor
xor
adc
push
and
gs
jmp
movsl
jge
sbb
pushf
xchg
imul
push
xor
je
jne
sub
and
lods
lods
dec
negb
rorb
je
mov
dec
mov
shll
and
mov
or
call
mov
xchg
loopne
dec
out
cld
inc
fiaddl
mov
repz
xchg
mov
or
lahf
add
mov
cs
mov
loop
pop
jecxz
arpl
lods
cmp
cmp
ret
outsl
and
mov
ret
imul
fnsave
popf
or
loop
pop
mov
repz
cmp
les
xor
or
pop
mov
add
sub
jo
cmp
xchg
stc
js
jno
movsl
jge
mov
mov
push
xchg
dec
xchg
xor
fldcw
enter
xchg
xchg
xchg
jae
adcl
dec
clc
sahf
inc
cmp
movsl
shll
pop
jecxz
fnstsw
dec
xchg
outsl
into
loope
push
pop
mov
dec
dec
aam
or
and
and
jmp
jns
xorl
pop
popf
aam
data16
stos
pop
mov
shlb
andb
mov
and
jne
fs
sbb
aas
pop
outsb
inc
test
sahf
inc
pop
cmpsl
mov
addr16
mov
pop
add
mov
sbb
sbb
push
and
mov
mov
aaa
add
bound
sbb
mov
mov
jle
jo
and
loop
mov
insb
push
pop
mov
jns
loopne
or
out
inc
or
aaa
jne
fsts
pop
fmull
xchg
fdivrl
shl
clc
shlb
jb
inc
jmp
leave
fnstenv
bound
jmp
add
inc
popa
adc
adc
jne
cmpb
add
movsl
insb
dec
sbbl
xchg
cmc
jl
aaa
sub
outsb
jge
inc
push
pop
cwtl
mov
cmp
out
and
cmpl
test
sub
in
push
push
call
add
push
mov
cld
ds
or
js
inc
rclb
pop
push
js
loop
sub
lahf
test
inc
xor
jns
test
add
inc
sbb
test
xchg
adc
call
or
push
mov
fbld
mov
loopne
call
mov
insb
fiadds
cld
pop
mov
adc
outsl
push
sti
push
mov
xchg
pop
iret
insl
xor
fwait
addr16
cld
fs
lods
dec
fsubl
jb
movsl
push
mov
mov
pop
std
in
ds
xlat
jmp
jno
lahf
mov
subl
fcmovnbe
adc
and
mov
xor
xor
movsb
aaa
hlt
jg
popa
lahf
test
jne
sbb
push
mov
loope
mov
loop
push
xchg
xchg
stc
mov
shrl
push
ret
into
xchg
aas
pop
pop
fimull
push
jno
ljmp
ljmp
xor
push
push
sub
cld
cli
or
das
inc
cmp
popa
sbb
pop
fnstcw
mov
xchg
adc
cmp
lret
roll
mov
cmpb
adc
adc
push
int3
lret
out
and
sbb
jecxz
mov
add
lcall
jb
push
and
mov
xor
test
pop
imul
aas
push
int3
mov
sub
cmpsl
xchg
jns
xor
jae
mov
push
adc
push
es
cmp
push
js
shl
cmp
dec
push
enter
loopne
aam
mov
or
mov
pop
out
int
hlt
test
js
ljmp
out
stos
xchg
mov
icebp
iret
sub
mov
gs
xor
mov
pushf
and
jmp
dec
in
push
jns
gs
lods
dec
xchg
inc
inc
and
cmpsl
iret
imul
add
aaa
in
adc
push
fisttps
adc
sub
adc
popa
mov
pop
dec
int3
add
gs
fsubl
jge
cmpsl
mov
mull
lods
mov
arpl
mov
add
jmp
cmp
outsb
or
inc
sbb
movl
test
hlt
pop
xchg
inc
xor
lds
iret
mov
xor
inc
xor
cmpsb
sub
jmp
jae
dec
call
dec
cmp
sub
in
adc
movsb
mov
scas
or
push
movsb
or
int
ret
repnz
add
ret
das
orl
mov
call
pop
push
arpl
lret
and
fidivrs
scas
decb
push
movsl
xchg
ss
inc
in
xchg
ret
movsb
in
out
call
xchg
adc
push
push
insb
punpcklbw
das
enter
xchg
scas
aaa
mov
aad
jns
jns
adc
jae
push
enter
aas
adc
shrl
mov
in
out
popa
cmpsb
fcomps
adc
fisubrl
lret
fcoms
inc
js
mov
jmp
roll
mov
or
mov
stos
shrb
outsb
stc
dec
cmpsb
pop
out
add
or
fwait
das
xchg
loopne
shl
jns
sti
ret
sub
mov
sbbl
xchg
call
or
mov
cmp
mov
or
sub
inc
adc
or
in
lds
subb
add
dec
sbb
ljmp
mov
or
testb
or
cli
popf
outsb
xchg
in
lods
pop
ja
mov
sub
sbbb
shrl
or
gs
pop
movsb
inc
mov
and
xchg
mov
rorb
pop
dec
pop
mov
mov
cmp
xor
sti
and
enter
cmc
clc
mov
mov
dec
add
jbe
bound
popa
aas
ret
mov
jne
mov
divl
addr16
das
repnz
cmpsb
jl
scas
jg
pop
mov
add
cltd
xlat
mov
sbb
mov
push
dec
xchg
pop
adcl
adc
test
mov
jmp
mov
stos
or
adc
mov
mov
mov
jl
mov
xchg
mov
jmp
and
mov
in
sbb
notl
rorl
mov
add
mov
xor
daa
and
push
cmpsb
jb
xchg
int3
rcr
sub
or
jmp
mov
push
sub
inc
adc
add
xchg
add
cmpsb
pushf
push
sub
xor
mov
mov
lea
in
cld
xchg
in
push
mov
loop
sbb
aaa
test
in
mov
pop
adc
xor
mov
pusha
xchg
jge
inc
push
enter
cmp
jns
and
sub
inc
cltd
in
rclb
call
fstps
sbb
inc
cmpsb
repnz
push
lahf
xchg
arpl
xchg
adc
push
in
lahf
gs
fmul
push
inc
or
xchg
cmp
and
mov
xchg
cmp
or
mov
mov
or
push
out
xchg
inc
call
jge
mov
dec
int
ljmp
scas
cwtl
and
sbb
pop
cmp
aaa
cltd
sub
popf
adc
insb
cmp
jb
mov
or
out
adc
push
insb
dec
xchg
sub
jl
inc
aam
jae
in
and
jns
fs
adc
cvtps2pd
in
push
shrl
jmp
lahf
push
jle
or
sbb
sub
test
sbb
jmp
push
mov
ret
lahf
cmp
push
addb
pop
arpl
lret
xchg
repnz
movsl
cmp
fwait
or
jmp
inc
pop
lock
or
gs
jbe
arpl
cmc
mov
push
movl
dec
leave
push
jl
push
in
and
test
inc
int3
mov
popa
ljmp
or
lcall
or
pop
adc
add
nop
pop
push
pop
dec
cmp
lds
stos
les
andb
into
pop
sub
sahf
jg
xor
rorb
nop
aas
ja
lret
mov
sub
mov
add
pop
push
sbb
sbb
inc
sub
lret
mov
dec
lds
jae
into
daa
frstor
jae
testl
cltd
push
fwait
sbb
dec
test
push
xor
sarl
sbb
mov
mov
mov
sub
stos
shll
repnz
or
dec
cmp
outsl
cmpl
rcr
hlt
popa
dec
dec
sbb
xorb
mov
pop
cmpsb
test
and
mov
cmpsb
pop
in
xchg
mov
ret
or
int
dec
xlat
aad
aam
push
jb
mov
out
out
scas
and
sub
movsl
pop
out
inc
jmp
lahf
outsb
jle
ds
cmp
movsl
mov
push
lock
xor
mov
int
je
cmp
or
inc
xchg
xchg
shld
mov
xor
jmp
xor
jnp
call
xchg
or
clc
pop
mov
mov
mov
hlt
sbb
pop
fsubl
test
xchg
lcall
pop
xor
mov
mov
loop
and
ffreep
es
xchg
jg
into
mov
out
out
rorb
in
inc
jl
xor
lret
dec
stc
mov
xchg
call
out
xlat
into
pushf
sub
pop
add
imul
test
shrb
jmp
jns
testl
test
repz
push
mov
xor
push
adc
add
dec
jg
add
push
jecxz
inc
dec
stos
pop
add
pop
ljmp
leave
std
das
or
aam
sahf
je
sub
xchg
xchg
cmp
dec
push
popf
js
xchg
xchg
hlt
jmp
jnp
and
mov
sti
loope
inc
jne
xor
mov
push
sub
inc
rcr
push
jno
push
mov
xchg
push
mov
out
lea
mov
ret
push
outsl
xchg
shlb
adcb
push
mov
ret
sahf
sub
nop
adc
and
bts
loope
pop
or
jns
shll
mov
movsl
push
jb
jns
mov
push
jnp
sbb
push
orl
inc
sti
mov
lea
daa
adc
jo
inc
mov
xchg
test
mov
imul
xor
xchg
or
xchg
insb
bound
dec
adc
pop
ljmp
loopne
or
pushf
sbb
inc
wbinvd
mov
adc
mov
add
cmp
mov
test
xchg
mov
daa
out
gs
cmp
push
jle
mov
gs
sub
test
stc
add
cmp
and
loope
cmp
gs
sub
pop
mov
bound
fiaddl
mov
in
jg
fadds
std
pop
mov
lahf
dec
jge
and
sbb
dec
mov
movsl
sub
xor
in
movsl
out
cmp
pop
inc
mov
xchg
adc
mov
repnz
scas
iret
sbb
fldl
ret
mov
adc
je
imull
sarb
or
and
push
sub
pushf
mov
cs
sbb
push
xor
jl
stc
ljmp
jmp
mov
gs
cs
int3
mov
scas
bound
add
jmp
xor
rorl
cs
lea
aaa
repnz
mov
fldl
scas
adc
mov
cmpsb
out
xchg
dec
adc
fcompl
and
ds
addr16
fs
je
mull
jnp
in
sub
mov
and
inc
xchg
fisubs
and
mov
enter
bound
pop
leave
push
mov
out
movsl
stc
test
out
xor
mov
insl
ficoms
cli
xchg
xor
call
pushf
rolb
cmp
jle
and
push
sub
inc
cmp
stc
mov
cli
fcomp
and
sub
mov
addr16
add
pop
fidivl
sbb
xchg
fld1
cmp
or
scas
js
popf
addr16
push
sbb
xchg
out
sbb
sbb
popf
fwait
mov
ja
aas
xor
or
push
mov
aad
xor
add
neg
sub
mov
out
outsb
icebp
outsl
iret
js
cmpsl
push
cmp
ret
aaa
xchg
mov
leave
lds
loop
scas
out
xchg
mov
insb
jno
and
fdivrs
jo
jbe
daa
pop
aaa
pop
outsb
pop
movl
add
cmp
push
dec
cltd
mov
pusha
adc
in
jne
xchg
sbb
and
rcrb
pop
shrb
pop
nop
mov
jnp
sarl
insl
mov
jge
cmpsb
fsts
xor
lahf
jl
loopne,pn
out
shlb
rcrl
mov
cmp
mov
jae
cmp
mov
lahf
add
fld
adc
jb
mov
dec
fidivl
pop
shrl
sub
pusha
shll
mov
test
or
imul
sbb
xlat
scas
xchg
push
daa
decb
loope
cmc
ret
outsb
jp
and
gs
pushl
leave
addr16
or
in
mov
mov
les
cmpsb
dec
push
outsl
hlt
or
nop
jge
sbb
repnz
sbb
mov
mov
cltd
das
cli
push
mov
jno
cmp
aaa
xor
andl
sub
mov
inc
xchg
inc
stc
adc
pcmpgtw
push
lds
mov
and
lods
lcall
loope
shr
sub
inc
out
jno
xchg
jae
xchg
in
sarb
add
out
sbb
bswap
cli
and
mov
ja
sub
mov
push
lcall
mov
pop
roll
mov
mov
push
or
cltd
sub
mov
xor
add
cmc
jns
int
repnz
pusha
mov
inc
icebp
jmp
repz
shlb
jb
and
inc
cmp
push
jbe
and
jno
add
decl
sub
push
mov
pop
sbb
cmp
je
mov
jb
mov
ret
mov
rol
inc
cmp
test
sti
stos
jmp
dec
xchg
nop
mov
pop
repnz
std
lds
push
movsb
pop
ret
and
lock
jo
jle
cmpsb
popa
repz
aas
xchg
or
and
ret
cmp
enter
jl
inc
aad
push
int
add
mull
lea
pushf
test
mov
mov
xchg
mov
jae
pop
adc
rcrl
movsb
in
sub
lea
and
lock
jmp
xor
mov
sbb
mov
out
dec
sahf
mov
in
jae
inc
es
ret
add
cwtl
imul
jmp
aad
cmp
stos
outsb
int
arpl
ja
pop
rcl
push
lcall
push
pop
pushf
mov
pop
mov
insb
inc
out
pop
sbb
in
sub
fcompl
imull
mov
insb
imul
lea
hlt
pop
insl
fnsave
outsl
std
repnz
sub
xchg
popa
lret
mov
cmpsb
jnp
out
cmpsb
inc
adc
dec
in
cmp
stc
xor
sar
sbb
imul
sbb
arpl
scas
and
jp
xchg
dec
sahf
int3
dec
inc
in
movsb
stc
mov
fidivs
out
sbb
add
ret
xor
adcb
aam
sarb
fstps
cmp
add
sahf
xchg
cmp
lods
ss
insb
test
pop
pop
jl
mov
clc
jmp
adc
mov
adc
cmp
dec
ret
out
dec
mov
ss
vcvtsi2sdl
test
fcompl
and
sub
lahf
jo
stos
lds
mov
ja
movsb
push
rclb
addl
popf
rcll
mov
imul
mov
aad
dec
out
pop
xchg
out
fldenv
adc
test
mov
pop
and
pusha
cmpsl
fisubrs
push
test
jmp
or
inc
sub
aad
call
xlat
lds
fs
cmpsb
std
and
xchg
iret
mov
test
pusha
cmp
pop
pop
dec
movsb
fidivl
aam
jp
dec
je
ds
jl
xchg
xchg
push
outsl
fdivr
push
mov
lcall
mov
hlt
jge
lret
sbb
ret
lock
addr16
and
and
pop
insb
test
sbb
pop
xor
mov
fdivr
adc
lret
out
jne
sbb
add
inc
jp
mov
xor
popa
roll
popf
repz
dec
insl
loopne
jl
hlt
je
cmp
jp
test
pop
jle
mov
mov
loop
xchg
loopne
adc
pop
mov
loop
in
jb
mov
rcl
xor
movl
jno
enter
lds
pop
cwtl
popa
or
xchg
in
or
sub
repnz
inc
push
cmp
dec
fistpll
fstpt
jne
test
dec
or
dec
sub
jge
and
repz
sbb
fimull
stos
cmp
in
cltd
fsubs
lret
push
dec
lods
loope
xchg
or
popa
mov
jl
cmp
add
lock
addr16
adc
pop
ret
hlt
loop
in
mov
mov
sbb
jp
and
sbb
pushf
imul
test
xchg
lret
hlt
ss
jnp
fimull
imulb
mov
stos
add
popf
or
fnstsw
or
xor
push
xor
fiadds
aam
imul
test
pop
add
mov
and
cld
push
mov
je
mov
or
daa
jae
fadds
mov
mov
nop
cmp
aad
into
xor
mov
mov
inc
fs
shlb
pop
lret
popa
outsl
in
inc
push
dec
mov
nop
ficoml
cld
aaa
jg
pop
add
sbb
xchg
push
sub
add
lods
jbe
or
out
jae
lret
pop
and
in
pop
cmp
mov
sbb
and
cmp
xor
mov
outsb
and
jno
or
pop
flds
cli
insb
push
push
sbb
xchg
popf
fwait
popa
out
jle
xchg
sub
adc
sub
pop
cmp
int
mov
movsl
pusha
pop
pop
jmp
mov
stos
pushf
xor
ds
xchg
mov
jb
mov
imulb
xor
xor
mov
mov
negb
in
xchg
stc
sub
cmp
add
cwtl
jle
mov
rol
lret
sahf
adc
fsubrs
fildl
lea
popf
xchg
add
mov
cld
add
adc
test
cmpsl
or
sbb
cwtl
mov
cs
daa
mov
andl
mov
insl
les
and
add
scas
mov
pushf
int
fisttps
inc
or
mov
pop
frstor
shrl
mov
and
cmpsb
jne
or
pcmpeqb
sub
sar
shlb
xchg
lods
iret
mov
in
add
xor
mov
es
cmp
xchg
dec
lock
jnp
pusha
rcrl
test
aas
data16
or
repz
mov
dec
cltd
fcompl
jecxz
pop
out
inc
dec
add
jecxz
mov
jmp
imul
pop
mov
mov
xchg
mov
xor
movsl
popa
int
push
aam
sbb
imul
outsl
add
test
mov
loope
out
jno
stos
jle
imul
adc
pop
dec
outsb
cli
xchg
test
fsubs
in
adc
add
ret
jg
sub
stc
jecxz
jno
stos
sub
cmc
movsb
stos
js
dec
jg
roll
in
xlat
jg
fst
lea
gs
inc
cmp
jae
mov
dec
mov
adc
aaa
and
fsubs
xchg
scas
nop
jae
mov
shl
xchg
stos
dec
xor
lahf
iret
fsubrp
xor
jecxz
jns
scas
test
or
add
repz
lahf
fs
adc
leave
mov
cltd
xor
push
mov
lock
add
shll
out
clc
movsb
jnp
jg
mov
xor
iret
loopne
mov
dec
mov
jne
xchg
fwait
jbe
xor
pop
es
mov
testb
push
push
lods
xchg
arpl
inc
pop
rol
add
cmp
cmpsl
xchg
pop
lods
repz
movsl
imul
mov
in
mov
dec
xor
js
cli
ret
xchg
and
jno
fsubrs
mov
sub
out
sti
scas
sub
nop
ror
push
mov
and
cmc
fcoms
mov
dec
push
inc
mov
xchg
mov
inc
jge
jg
jne
mov
ficomps
pusha
xor
lcall
jl
mov
push
xchg
jle
mov
mov
call
sub
in
dec
fstl
std
fldenv
adc
int3
cmp
mov
mov
xor
repnz
imul
xchg
fcos
jl
into
cli
pushf
popa
cmp
sub
data16
mov
lds
mov
mov
mov
push
fisttps
out
push
inc
mov
loopne
jbe
mov
decl
repz
ds
cs
add
jge
cmp
adc
pushf
inc
icebp
in
sarl
imul
add
dec
dec
fstpl
inc
pop
sub
or
dec
cld
cmc
and
pusha
dec
imul
mov
fmul
mov
rcrl
xor
pop
into
sub
jp
ror
sbbl
stos
cmp
sub
imul
sub
xor
dec
inc
push
sub
into
arpl
sub
sarl
jb
and
dec
adc
lock
pop
pop
or
lahf
xor
add
sbb
gs
shlb
ja
out
xchg
push
iret
adcl
push
insb
sbb
aam
adc
pop
xchg
inc
jmp
inc
pop
cs
movswl
adc
xchg
push
adc
cltd
test
adc
prefetch
aad
imul
aad
push
mulb
aaa
lock
mov
fdivr
xchg
outsb
cmp
dec
push
jb
or
sub
scas
out
fwait
cwtl
idiv
dec
aas
push
cmc
push
dec
xchg
mov
mov
ret
xchg
sbb
movsl
out
outsl
jnp
rol
inc
pop
in
or
orb
jg
mov
dec
cmc
lcall
and
jle
in
mov
bsf
fadds
mov
mov
inc
xor
and
jo
mov
std
dec
xchg
mov
lods
stos
add
in
xlat
aaa
mov
fs
push
dec
xchg
pop
cmp
jo
into
std
jb
ret
testb
sbb
or
pop
jmp
sub
or
das
mov
push
and
mov
dec
pop
push
outsb
movsb
push
repnz
sbb
repnz
notl
leave
das
das
pop
loopne
push
xor
arpl
jb
js
pop
sub
lods
popa
sbb
jecxz
dec
aaa
sub
arpl
adc
lret
xchg
mov
pop
push
dec
out
mov
lods
or
push
ds
pop
sahf
jg
fmul
int
addr16
and
jo
jp
mov
imul
xchg
xchg
sbb
adc
mov
mov
mov
jmp
dec
mov
insb
mov
addr16
popa
je
gs
jmp
sbb
pop
mov
sub
lock
das
lea
inc
jp
ja
inc
pop
add
test
cs
popa
fcompl
filds
pop
pop
into
lret
jbe
adc
push
mov
iret
dec
incl
test
jmp
adc
mov
dec
fdiv
ret
dec
mov
ljmp
or
sub
fsub
bound
in
add
loope
sti
xor
xchg
movsl
hlt
mov
push
xor
xchg
push
fldl
push
xchg
scas
imul
rolb
cli
mov
lea
cmc
bound
mov
lret
loopne
cwtl
adc
andl
sub
call
sub
pop
nop
inc
mov
mov
xchg
lret
daa
iret
cmp
dec
cmp
fadds
sub
mov
jp
dec
sub
xchg
xchg
lret
and
dec
adc
sbb
jne
jno,pn
cmpsb
push
adc
cwtl
push
insb
loop
ret
jle
lret
sub
fs
cmpsb
cwtl
push
pop
xlat
inc
ds
or
sub
pop
inc
add
push
push
ja
aas
jbe
sub
lcall
sbb
stos
fbstp
sarl
mov
adc
pop
aad
sbb
mov
lods
and
mov
js
adc
push
mov
jno
clc
jecxz
xchg
adc
add
and
out
mov
jg
decl
or
mov
adc
sti
xchg
loopne
lahf
inc
cltd
es
sub
inc
lret
call
mov
xchg
std
loope
into
jecxz
incb
movsb
xor
sub
js
mov
xchg
xlat
sbb
pop
add
xchg
in
cmp
divl
pop
fimull
dec
jno
pop
and
mov
jg
mov
insl
shll
xchg
ret
sub
jno
inc
xchg
fstl
aad
popa
int3
ret
push
inc
push
push
rcr
mov
push
idivl
das
test
ret
or
cltd
xor
lahf
pop
jp
sarl
mov
and
cmp
incl
sahf
sub
mov
fldcw
mov
mov
outsl
ret
fnstsw
mov
iret
addr16
inc
shll
push
or
adc
inc
nop
imull
cs
lret
jae
sub
rcrb
sti
cltd
ss
wbinvd
xor
cmp
xchg
out
mov
mov
lea
pop
add
hlt
pop
mov
js
mov
ret
push
ret
mov
push
orb
sahf
mov
adc
mov
iret
icebp
push
pop
shlb
fldl
mov
pushf
xchg
dec
jnp
xchg
pop
sahf
add
push
jp
out
adc
mov
dec
cmpsb
mov
cmp
xchg
push
into
shll
mov
fwait
pop
sub
sbb
inc
and
add
lea
movaps
push
imul
insl
fstps
xchg
cmpsb
push
aas
mov
shrl
repnz
sub
jae
xchg
cmp
cmpsb
cmpsb
xor
cmp
xor
sub
test
mov
add
scas
or
or
or
scas
pop
imul
dec
push
aam
mov
xchg
jmp
pop
and
arpl
and
int3
adc
pop
pop
decb
sbb
jns
add
mov
jmp
xchg
mov
push
jo
mov
sbb
adc
mov
sub
or
xchg
sbb
bound
in
leave
pop
pop
out
test
push
jmp
addr16
push
lret
add
dec
scas
and
stos
idivb
setp
lods
mov
jbe
sahf
ds
out
insl
repnz
popa
inc
scas
mov
jmp
cmp
or
mov
jle
jne
jbe
xchg
dec
push
orl
xchg
or
scas
insl
and
xorb
inc
aam
xchg
dec
sub
popf
iret
pop
ss
leave
xchg
lahf
mov
and
test
sub
add
mov
inc
adc
cli
jno
ljmp
int
call
dec
xchg
arpl
add
loope
mov
push
mov
jno
jle
pop
push
rcrb
movsb
lahf
push
cmp
xchg
in
add
mov
push
push
popa
mov
cmp
adc
mov
xchg
daa
pushf
or
call
jno
xor
pop
popf
iret
inc
dec
inc
xor
cmp
mov
xchg
ds
scas
rcrb
imul
fidivrs
js
dec
mov
xor
xchg
iret
pop
pop
ljmp
jae
test
adc
out
in
cltd
mov
outsl
leave
mov
xchg
cmc
or
pop
adc
xlat
std
ret
int3
inc
movsb
js
xchg
stos
pop
or
add
insl
sarl
adc
test
push
dec
sub
icebp
and
adc
push
jb
outsl
inc
mov
sub
outsb
ja
cmp
icebp
mov
adc
adc
pop
adc
dec
push
out
push
fnstcw
pop
loope
std
in
mov
rcll
aad
adc
xchg
xchg
imul
jns
popf
or
mov
in
mov
jnp
loope
or
cltd
mov
push
mov
aas
mov
mov
sbb
jecxz
jo
aad
insl
mov
int3
add
jne
sbb
loop
mov
rcll
dec
call
or
stc
dec
mov
adc
lret
xor
xor
icebp
mov
imul
and
cmpsl
and
sub
pop
out
ds
pop
inc
movsl
aam
jne
xchg
and
hlt
stc
in
shrb
in
pop
call
nop
mov
push
jle
mov
fdivl
mov
xor
xchg
loop
xchg
pop
les
dec
je
fxch
add
inc
cmp
mov
or
adc
and
loopne
or
add
and
push
int
lds
push
inc
clc
fstl
pop
neg
add
idivb
movsl
or
mov
adc
scas
push
add
lock
movsb
insb
xor
xchg
mov
mov
dec
rol
and
add
pusha
add
pop
lds
mov
and
push
rorb
sti
adc
dec
in
fsubrs
data16
lret
shrl
jbe
dec
pop
cmpsl
pusha
aam
dec
leave
push
mov
lds
lcall
xor
push
jecxz
aaa
int
mov
flds
icebp
adc
inc
scas
lret
gs
iret
pop
mov
subb
pop
jns
push
xchg
push
adc
xor
xchg
or
lea
popa
jmp
sub
pop
std
sub
xchg
jge
mov
jmp
bts
cli
push
jae
cmpsl
aas
sysret
mov
icebp
pop
xchg
inc
inc
jp
mov
pop
pop
in
insl
aas
lret
mov
jae
popa
push
jo
push
adc
xor
mov
adc
ss
stos
adc
outsb
movsb
sbb
xor
adc
xor
pop
xchg
test
fidivl
fs
jo
fcompl
rcll
mov
xlat
out
sbb
lea
insl
mov
rcrb
mov
movsl
loope
into
jns
xchg
pop
popl
adc
lea
inc
push
xor
or
cmp
xchg
out
inc
sti
adc
daa
mov
stos
aaa
cwtl
push
pushf
jecxz
aaa
xchg
in
test
add
mov
hlt
sub
mov
push
leave
loopne
popa
out
dec
and
cmc
rolb
out
sahf
out
adc
jb
scas
inc
pop
mov
sbb
mov
ret
aad
subl
dec
add
cmpsb
cmc
sahf
lret
cmp
cmp
stos
cwtl
call
leave
dec
or
pop
std
jnp
insl
mov
mov
mov
not
stos
sarl
jmp
bound
pop
and
inc
xor
cmp
pop
xchg
inc
inc
out
stc
cmp
daa
out
adc
pop
and
add
call
and
clc
xchg
adc
out
xor
sbb
cmp
mov
pop
sbb
popf
push
xor
push
xlat
out
adc
push
fsubl
jae
mov
cltd
fs
mov
pop
mov
stos
es
jmp
cmpsb
jnp
dec
mov
aaa
add
dec
cmp
mov
cmp
pop
rcrb
mov
sbb
push
lahf
pop
rolb
test
sbb
leave
outsb
sbb
aad
in
inc
add
clc
pop
loop
jnp
addl
inc
mov
iret
nop
clc
lret
popa
xor
les
inc
xchg
mov
pop
push
lea
add
dec
push
add
sbb
dec
push
sub
out
sbb
cmp
mov
and
pop
or
js
ret
lret
ror
push
and
adc
push
mov
imul
jp
movsl
jp
lret
sahf
mov
das
test
mov
mov
jns
xchg
adc
fistl
repnz
cli
cmpsl
mov
sub
mov
fdiv
inc
in
lock
mov
and
icebp
xchg
dec
popa
imulb
mov
adc
sahf
sahf
mov
mov
push
sbb
shrb
rorl
mov
inc
or
popa
mov
cmp
and
loope
fstpt
filds
les
xchg
jnp
push
shl
xchg
lret
aaa
nop
cmp
adc
mov
pop
pop
and
mov
push
or
add
popf
inc
arpl
or
pop
mov
aas
inc
mov
inc
icebp
add
inc
outsl
lahf
xor
insl
hlt
adc
or
inc
pop
inc
mov
call
leave
mov
inc
test
mov
stos
rclb
jle
mov
cmp
negb
and
mov
inc
loopne
test
cli
push
and
cmovne
mov
jl
xchg
inc
sarb
jne
lds
fisubl
notl
sbb
inc
shr
jg
ret
ja
mov
mov
push
pop
mov
cmc
pop
pop
sub
cmpsl
and
lock
daa
xor
or
jnp
rorl
xlat
fiaddl
push
or
jo
push
gs
invd
xor
nop
nop
ss
loopne
inc
and
mov
icebp
adc
loope
call
xor
mov
adc
gs
icebp
or
pushl
or
hlt
outsb
push
xchg
mov
sbb
lcall
adc
test
out
jno
pop
test
test
ds
loope
sbb
scas
inc
add
mov
add
pop
xchg
int
inc
stos
push
scas
pop
rcl
loope
scas
or
test
cmpsl
cmp
jge
icebp
cmpsb
sub
mov
push
mov
xchg
adc
and
rolb
and
xor
int3
nop
mov
in
cmpsl
pop
lods
outsb
call
addr16
sbb
icebp
adc
lcall
jb
ja
fcoml
mov
mov
sti
out
repz
mov
imul
mov
aas
pushf
pop
push
test
mov
imul
cli
clc
nop
mov
jns
or
enter
push
push
pop
add
leave
bnd
mov
ret
ljmp
aad
fwait
sar
addb
daa
jb
shll
jne
mov
cmp
jge
push
cmpsb
dec
addr16
fiadds
add
popa
dec
xor
add
nop
pop
out
pop
rcr
pop
outsl
mov
rcrl
in
imul
test
add
mov
jb
mov
cmp
mov
adc
sti
and
xor
cltd
lock
mov
adc
pop
push
gs
push
pushf
or
inc
sar
adc
ljmp
jno
and
mov
lods
stos
sahf
jno
sub
pop
loope
jmp
filds
xor
pop
or
fldl2e
shl
mov
jge
ja
cmp
pop
xchg
mov
hlt
pop
in
mov
out
adc
mov
mov
push
push
sub
test
pop
vmovdqa
dec
sar
push
add
dec
aaa
xorb
out
pop
das
add
jmp
lcall
clc
stc
pop
ret
loopne
adc
shr
cmp
jmp
cmp
mov
xchg
leave
push
push
pop
cmp
daa
and
lcall
xlat
vrcpss
and
jbe
lcall
std
cmpb
sti
clc
push
mov
push
mov
and
lock
add
loop
into
ret
lods
xchg
gs
clc
sahf
addl
insb
lcall
push
mov
cmp
pop
adc
add
jo
shr
bound
inc
mov
cmp
jp
punpcklbw
pop
mov
icebp
dec
pop
mov
fcoml
sub
sbb
jnp
nop
enter
xor
xchg
pusha
js
xchg
divl
test
and
not
cmc
pop
and
js
bound
push
enterw
mov
pop
push
or
xchg
rcr
fisttps
xor
or
jbe
or
jns
dec
test
xchg
xchg
inc
mov
mov
jg
cmp
mov
lock
xchg
outsl
in
jecxz
or
xchg
loope
rcll
in
push
sub
push
cmp
xor
xchg
jbe
cmp
jle
cmc
lret
xchg
insl
or
add
lahf
fcompl
rorl
in
add
mov
add
repz
ret
mov
inc
inc
rol
pop
cmpl
lret
push
rcll
sbb
mov
mov
xor
mov
xchg
mov
jb
xor
push
xchg
ss
aad
or
icebp
loope
adc
sbb
push
aas
cwtl
inc
into
fldcw
sbb
aas
pop
cwtl
jp
ficoml
xchg
jbe
or
cli
push
add
add
push
gs
js
and
lcall
add
inc
adc
sub
pusha
push
dec
fstps
mulb
bound
pop
jnp
aad
jl
or
rcl
outsb
dec
call
sbb
ja
inc
ds
outsl
out
dec
scas
lahf
cmp
mov
cmpsl
sahf
stc
xor
add
mov
push
dec
fcmovne
leave
sub
fisubrs
aam
fdivrl
lret
add
lods
testl
xchg
pop
mov
fs
in
inc
ss
push
lahf
std
add
fwait
push
add
push
mov
sub
out
pop
inc
pop
sbb
mov
nop
push
xchg
jb
push
cwtl
pop
xor
mov
out
mov
outsl
pop
outsl
cmp
lock
sub
shll
adc
push
imul
dec
in
xor
data16
lds
mov
xor
sbb
insl
mov
inc
test
mull
pop
lock
lds
cmpsb
cld
call
xchg
dec
xchg
mov
add
mov
shrb
add
mov
cmc
lock
pop
mov
push
xor
mov
mov
out
add
andb
add
jp
fidivl
arpl
sub
sarl
cmpsl
mov
hlt
sbb
bnd
jo
js
and
out
lea
scas
pop
mov
enter
lods
fildll
daa
cs
xchg
mov
push
cli
inc
ja
lcall
sarb
in
sbb
mov
jl
inc
add
mov
mov
mov
mov
ja
pushf
sub
fldpi
pop
shlb
inc
lock
add
fisubs
loop
dec
and
int3
xchg
cmp
iret
fwait
mov
lea
sbb
sub
rorl
mov
lcall
test
mov
fmulp
adc
icebp
add
pop
arpl
movsl
pop
repnz
sahf
jb
fs
cmc
rcll
lds
leave
add
and
shrl
push
out
mov
push
fstp
mov
cmp
push
mov
or
or
xchg
xchg
and
bound
xor
pushf
mov
popa
icebp
xor
sahf
push
fisubs
or
adc
inc
cmp
xlat
xchg
xchg
mov
dec
mov
mov
mov
aas
roll
cltd
inc
lcall
dec
fwait
mov
xor
xchg
xchg
add
sub
fbstp
cmc
jge
cmp
imul
mov
or
and
xor
sbb
roll
daa
push
popf
jne
test
mov
or
clc
jl
cmp
xor
mov
mov
loopne
xor
adc
shr
in
jecxz
sbb
jno
and
or
jmp
aad
mov
fcomps
xor
out
mov
cmp
mov
mov
push
jnp
sub
out
inc
xchg
or
add
mov
cld
jmp
dec
aaa
jle
ret
pushf
lret
sarb
and
inc
enter
jmp
mov
jmp
ret
mov
push
call
loope
xchg
push
jg
loopne
dec
out
fdivs
dec
mov
div
and
cli
aas
scas
dec
lret
xchg
xchg
fistpl
fnstcw
arpl
ja
imul
mov
divb
cmc
les
lretw
data16
retw
mov
xlat
pop
sbb
sar
pushf
mov
fstpt
xchg
out
ror
in
push
or
arpl
subb
int3
loope
testl
xchg
xchg
and
mov
adc
add
lock
or
pop
test
mov
jns
rorl
pop
lods
push
addr16
xchg
cmpsl
sti
movsl
int
mov
push
int
das
cmp
mov
gs
ja
or
inc
jbe
popa
xchg
call
insl
dec
lock
sub
stc
inc
hlt
data16
loop
cmpsb
cmpsl
inc
shl
pusha
and
cmc
stos
aad
xchg
add
push
xchg
je
out
fcomp
enter
push
cmp
subl
sbb
repnz
lea
mov
neg
loopne
xchg
cmp
mov
pop
xor
push
into
add
nop/reserved
push
push
inc
jecxz,pn
call
pop
xlat
out
add
mov
hlt
inc
mov
xchg
fadds
mov
cmp
ja
data16
decb
dec
lret
test
adc
aas
neg
mov
icebp
mov
jp
push
cmp
and
clc
sbb
push
nop
sub
insb
and
test
fcompl
mov
xor
push
outsb
push
pop
fst
mov
lods
cmpsb
pop
dec
je
xchg
xor
add
daa
and
stc
in
mov
pop
push
into
sbb
add
cmpsb
mov
imul
cmp
sbb
cli
jnp
mov
inc
push
orb
cmp
cli
jne
shrl
xchg
cmpps
test
xchg
xchg
jmp
pop
jns
jno
inc
std
rcrl
jl
xchg
xor
in
aad
pusha
ficoml
jnp
iret
mov
loop
sub
xor
xchg
out
rorl
mov
pop
aad
and
std
or
add
imul
je
cwtl
dec
add
insb
push
fisubrl
jmp
cld
dec
fcoms
push
out
mov
xchg
mov
mov
ret
pop
push
cmp
push
mov
or
cmpl
daa
sahf
push
sub
cli
cmpsb
shlb
aad
pushf
dec
jb
shll
aam
sub
xor
sub
pop
jns
cmp
pop
dec
jmp
inc
rorb
sbb
cwtl
or
jbe
jmp
dec
xor
jg
sub
sti
add
jo
jmp
hlt
fisubrs
aaa
rcll
lahf
xor
add
lcall
iret
inc
cmp
iret
loope
and
adc
cli
fldl
aas
jl
xchg
subl
scas
inc
cmp
mov
push
shlb
jp
push
mov
lahf
in
lock
mov
pop
rorb
fstps
out
or
mov
fldl
iret
sbb
in
sbb
dec
mov
sub
into
sub
out
outsl
push
int3
in
out
and
push
cltd
movsb
clc
xchg
inc
mov
roll
jnp
ret
or
hlt
mov
fcomps
lds
mov
xchg
and
inc
mov
je
add
ljmp
mov
lcall
inc
mov
mov
mov
adc
xchg
pop
cmc
loopne
cli
adc
sub
or
add
repz
aaa
cwtl
cli
lcall
es
push
mov
push
in
shl
inc
jl
cmp
jne
imul
push
or
fisubs
in
mov
dec
loopne
push
mov
mov
ds
mov
xchg
mov
dec
or
inc
or
or
mov
push
test
cltd
xor
or
sub
cmp
add
cld
mov
cwtl
push
bound
dec
ficoml
mov
mov
out
imul
addl
sahf
sbb
jae
adc
aad
push
out
cmp
adc
scas
out
mov
push
ja
sbb
pop
mov
stc
pop
in
cmp
mov
inc
stos
xchg
nop
scas
inc
leave
rcl
xor
sub
sub
shll
aad
xor
sarl
lods
mov
mov
push
fistps
jae
inc
fcoml
mov
sub
cmp
push
enter
add
popa
add
push
ret
jle
sub
push
loopne
adc
lock
ud1
and
xchg
inc
sub
xorb
rcl
cmp
jle
lods
and
sub
jo
sahf
xor
dec
adc
xlat
repz
mov
lcall
fnstcw
adcl
mov
sbb
jae
mov
pushf
mov
sub
imul
xor
mov
out
mov
rdtsc
je
sbb
xor
pop
dec
addl
ret
pop
sub
jbe
fisubs
ror
inc
sub
jp
xchg
mov
in
fst
mov
bound
fwait
das
lcall
push
jmp
lods
inc
enter
mov
push
aas
xchg
add
add
lods
imul
es
fs
and
mov
mov
std
mov
clc
lret
xchg
gs
ljmp
ja
xor
into
cmc
or
xor
adc
arpl
xchg
xor
ds
jne
jmp
dec
je,pt
div
ljmp
xor
test
out
pop
addr16
jno
dec
cmp
or
pop
add
ret
aaa
ret
rcrb
or
aas
fnsave
nop
push
xchg
imul
add
push
lds
sbb
push
jae
mov
dec
sbb
rcrb
add
repnz
out
ss
mov
push
and
xchg
push
adc
mov
pop
add
jge
or
jl
adc
aas
sti
push
pop
xchg
sar
sub
push
mov
lret
xor
mov
movsb
pop
mov
icebp
mov
mov
and
popa
mov
dec
adc
lret
aaa
add
jl
add
push
outsl
test
dec
or
sub
cmp
daa
sbb
sub
scas
fwait
mov
and
push
insl
gs
pop
lods
add
push
sub
dec
divl
sbb
test
in
xchg
scas
xchg
add
and
ss
mov
into
lcall
lea
mov
mov
inc
sahf
lock
push
pushl
sahf
xor
and
es
cs
pop
outsl
les
std
pop
in
sbb
lds
aas
mov
ds
in
xchg
mov
mov
clc
add
push
sbb
popa
dec
sti
lods
dec
sbb
mov
mov
add
shll
and
mov
leave
pusha
bound
aaa
mov
loopne
mov
ja
mov
mov
mov
lods
leave
push
out
rcll
push
inc
int3
sub
push
and
push
jmp
add
loop
arpl
out
lock
sbb
aam
jns
cmp
lods
cwtl
mov
mov
lahf
push
xchg
sbb
mov
ret
jnp
insb
into
inc
adc
cmp
push
repnz
ficoml
mov
jno
testb
mov
and
cld
add
aad
movsb
popf
sahf
push
jo
pop
sbb
dec
lds
push
test
inc
rolb
jge
jecxz
popf
pop
orb
sbb
lret
pop
cmp
jmp
jno
ret
mov
cmp
repz
push
cmp
jne
into
adc
sbb
jecxz
mov
mov
cltd
stc
and
or
insb
aam
cltd
push
mov
js
nop
adc
ret
fwait
sti
sbbl
mov
xor
or
es
xchg
daa
jle
push
test
adcl
shrb
jmp
add
fdivrs
xchg
iret
or
popa
lea
push
xlat
ljmp
sub
push
in
pushf
mov
xlat
mov
mov
push
jns
xor
cmp
out
lods
mov
mov
dec
js
outsl
stc
sbb
mov
arpl
sub
lock
lods
sub
pusha
bound
adc
rclb
and
sbb
jae
or
shl
fcomps
hlt
mov
and
push
inc
xor
loop
mov
fidivs
inc
cmp
jno
in
push
repz
sahf
data16
rcrl
add
fwait
jecxz
iret
jle
pop
mov
aad
xchg
push
push
sbb
pop
rcll
or
push
lods
lret
addr16
add
stos
push
jg
es
cli
xchg
mov
xor
inc
vcvtdq2ps
aaa
adc
stc
cmpl
xchg
bound
in
fidivs
outsb
xchg
push
and
cmp
in
mov
std
jmp
push
int
sti
hlt
jl
pop
icebp
and
push
fdivl
sub
imul
jo
int3
push
adc
repnz
jne
insl
ror
cli
jno
pop
jge
lcall
add
cmp
inc
repz
add
iret
clc
inc
mov
push
and
mov
loope
shl
int
add
loop
xor
aas
test
rcrl
mov
adc
test
shll
add
add
out
das
ljmp
in
cld
std
fistl
xor
cmp
cmc
pop
cwtl
pop
call
arpl
adc
push
pop
xor
inc
or
addr16
rolb
test
inc
mov
jle
rorl
call
push
inc
sbb
xor
sub
lcall
jne
push
add
jns
incb
jg
xor
out
push
adc
add
mov
mov
add
cmp
shrb
mov
fdiv
sub
scas
dec
jle
inc
rclb
mov
lret
pop
repnz
std
int
shrl
jnp
cmp
xchg
ljmp
mov
imull
repz
lods
test
add
sub
gs
outsl
dec
or
int
jmp
scas
mov
pop
ds
jnp
xor
out
jl
ds
pop
push
inc
jle
mov
loope
hlt
mov
jmp
in
adc
lidtl
shl
jle
add
mov
aam
cwtl
out
and
hlt
push
lret
fcmovnb
xor
jge
loope
scas
mov
cld
xchg
pop
mov
fdivrs
ret
push
addr16
lea
or
and
imul
std
jmp
jmp
push
insb
aad
scas
add
cmp
xchg
mov
subb
lret
ss
jb
pop
hlt
push
pop
push
mov
mov
mov
add
jge
cli
inc
cwtl
js
lea
shl
int3
and
sub
imulb
push
mov
enter
into
push
ja
push
pop
loop
pop
mov
jnp
jmp
repnz
pop
add
mov
push
test
cmpsl
repz
out
push
out
ret
pop
sub
jo
jae
mov
inc
sub
sbb
adc
pop
xchg
mov
and
icebp
mov
outsb
clc
aam
sbb
cltd
push
imul
in
jbe
in
test
push
rcrb
mov
jno
cmp
jmp
xchg
mov
ret
mov
jb
in
call
les
mov
gs
fistps
sub
xor
fdivrl
nop
imul
adc
lods
int
imul
je
mov
mov
xchg
hlt
xchg
add
sbb
out
cmp
loop
in
mov
popa
rolb
xor
test
sub
jle
negb
and
dec
loopne
in
xchg
xlat
mov
mov
add
fwait
and
and
stc
inc
inc
rcrl
icebp
repnz
fisttps
sub
mov
jnp
adc
notb
push
ret
popa
rorb
jo
fldt
das
mov
aad
lods
pop
out
xchg
adc
jne
ss
cmpsl
lods
mov
pop
jne
mov
ss
dec
dec
or
lret
fnsave
stc
push
mov
scas
sti
xchg
addr16
je
push
mov
popa
xchg
push
add
lcall
jns
cmp
xor
arpl
mov
adc
jno
cmp
gs
jp
imul
lods
cmovle
mov
shrb
or
push
inc
mov
push
test
ret
jg
in
mov
ljmp
pop
in
fmulp
mov
lods
std
call
push
dec
movsb
dec
push
pop
mov
cld
movsl
pop
jb
adc
xlat
hlt
sar
pop
mov
aad
jmp
xor
subl
mov
add
fdivs
pop
aam
jecxz
sub
jns
jl
mov
mov
inc
mov
mov
ss
pop
pop
pop
push
js
jg
in
bound
push
pop
or
imul
lcall
arpl
repz
jl
sub
push
pop
loope
mov
adc
or
rcl
mov
hlt
daa
and
aad
inc
inc
sbb
cld
js
shll
or
or
xchg
xor
xchg
mov
jl
mov
lds
add
dec
or
imul
popf
icebp
cmp
ffreep
mov
stos
rcll
ja
scas
jbe
test
push
inc
xchg
lret
inc
insb
call
shr
jp
mov
cmp
jg
lcall
jbe
mov
add
pop
fists
pop
push
add
sbb
pop
fistps
pop
cmpb
pop
insl
add
cli
fmull
popl
xchg
sarb
arpl
pop
sbb
aaa
mov
fdivl
mov
pop
sbb
iret
js
hlt
cmp
mov
lcall
stos
cmp
xchg
jbe
stc
outsl
stos
cmp
push
aas
stc
pop
jo
cltd
jp
scas
xchg
cmp
mov
add
jmp
test
adc
dec
xchg
sbb
cmp
mov
mov
dec
inc
sbb
mov
out
jg
pusha
mov
icebp
xor
push
jp,pt
add
movsb
in
insb
rorb
cmpsl
cmp
cmovno
cld
jmp
subl
cmpsb
xor
lock
sti
mov
out
loopne
lock
enter
xor
mov
sbb
fs
push
sbb
pop
jbe
pop
imul
ds
rorl
inc
xor
aad
fwait
sar
xor
jge
lds
cmc
clc
mov
push
mov
jmp
movsb
dec
cwtl
outsb
jae
sub
xor
sub
jecxz
or
lods
cs
xchg
test
cld
orl
dec
and
es
mov
mov
dec
push
cmp
lahf
cmc
outsb
jns
stos
adc
nop
test
sub
mov
jl
xlat
adc
push
adc
inc
sub
jp
out
stc
es
sti
mov
loope
repz
loope
jbe
lea
xlat
sbb
mov
sbb
repz
pop
stos
icebp
mov
sbb
jge
inc
imull
fildl
pusha
add
adc
dec
and
push
lret
xchg
or
pop
xchg
jmp
std
add
add
jae
ret
jmp
neg
aas
pop
addb
jne
dec
call
and
sub
jmp
or
stos
lcall
fsubl
call
leave
stos
repz
into
sarb
insb
mov
out
ficomps
in
std
pop
adc
mov
test
adc
jl
jecxz
js
push
xor
inc
test
push
dec
mov
in
mov
adc
add
and
cmp
lock
and
cltd
divl
iret
repz
dec
sahf
ds
push
cmc
xchg
xlat
f2xm1
cltd
jns
jle
outsl
inc
outsl
std
xchg
pop
roll
in
data16
incl
arpl
arpl
gs
xor
push
lods
xchg
rcr
or
cwtl
mov
xchg
imul
popf
pushf
sbbl
mov
andb
push
iret
lock
push
in
fsub
int
pop
faddl
xor
popf
push
mov
adc
cli
or
fnstcw
mov
dec
insb
loopne
cmpsb
js
test
add
inc
dec
mov
mov
mov
and
cmp
inc
daa
push
push
insb
pop
aam
cmpsl
mov
jp
insl
adc
mov
outsl
cmpsl
arpl
mov
inc
aas
dec
add
mov
dec
mov
push
mov
inc
mov
je
hlt
add
dec
ss
in
pop
stos
imul
addr16
lods
pusha
adc
xor
mov
xchg
ljmp
sbb
mov
adc
pop
jmp
inc
data16
xor
js
lods
repnz
cmp
jo
fwait
sahf
outsb
adc
adc
pop
jecxz
lds
push
mov
cmp
adc
jnp
sub
in
out
jp
call
test
add
xchg
mov
mov
mov
or
dec
repz
xchg
or
lods
mov
push
xchg
dec
mov
dec
icebp
faddl
out
icebp
cmp
loop
stos
lods
mov
shrb
stos
xor
lret
mov
and
stc
jg
xorl
xchg
mov
scas
fisubl
push
or
mov
jno
pop
jle
fidivrs
jo
bound
test
js
mov
push
sbb
call
int3
jno
and
push
dec
add
roll
add
adc
sbb
mov
decl
loop
sahf
dec
popf
xor
jb
mov
cld
pop
mov
mov
addl
mull
data16
sbbb
incl
xchg
add
ds
enter
sbb
or
mov
imul
arpl
fs
stc
mov
push
incl
mov
add
icebp
and
inc
xor
test
addr16
jge
inc
inc
insl
popf
popf
mov
jl
nop
push
push
sbb
pop
ss
inc
jl
push
in
pop
xor
cmp
mov
and
mov
push
loope
cmp
shlb
pop
rcrl
add
mov
sub
cmp
fisubs
and
xor
pop
jecxz
imul
mov
push
adc
lds
stc
insl
mov
jg
mov
inc
daa
xlat
sub
stos
mov
xchg
rorb
imul
or
inc
jecxz
add
push
or
sahf
mov
leave
test
fadds
xsha256
cmpsb
push
call
adc
cmp
out
and
adc
jg
out
xchg
push
cmc
fldenv
inc
leave
add
fisttpll
adc
ds
ljmp
pop
mov
or
xchg
fidivrs
outsl
scas
inc
xchg
repz
arpl
cmpsl
testb
pushf
mov
repz
cld
push
cs
xor
jecxz
insb
out
mov
jmp
sbb
cmp
jae
cld
sahf
xchg
insb
dec
aam
dec
mov
cmc
fisttps
loope
and
adc
insb
lock
dec
add
adc
mov
sbbb
sbb
call
pop
pop
and
mov
xchg
or
loop
dec
sbb
push
daa
popa
shll
push
xchg
test
mov
sub
jle
pop
in
icebp
xchg
push
xlat
ja
fstpt
in
ss
popa
add
add
mov
stos
jb
out
fistpl
xchg
inc
fadd
ds
sti
inc
mov
sbb
push
sub
js
out
clc
and
sub
pop
xor
mov
mov
xchg
bswap
inc
inc
push
mov
mov
add
adc
jnp
lahf
push
push
pop
loope
xchg
fsubrs
pop
in
dec
pop
cltd
jbe
ds
inc
dec
lret
divl
pushf
push
mov
cwtl
push
arpl
or
inc
dec
fists
push
mov
neg
xchg
jmp
mov
je
sub
fwait
sti
sub
stc
xor
int
ss
jmp
pop
cmp
stos
push
mov
xor
jno
daa
scas
sub
stos
clc
fbstp
sbb
les
dec
hlt
leave
or
add
mov
fisttpl
in
ljmp
cli
jae
cli
int3
faddl
push
adc
sbb
xor
aas
xchg
push
adc
jno
mov
cmpsb
inc
cltd
xchg
jae
mov
jmp
flds
mov
cmp
adc
lods
cmpsl
or
mov
cs
mov
adc
test
lret
mov
dec
clc
lock
jo
scas
rorb
js
pop
adc
pop
jge
imul
mov
int
or
andl
push
and
call
push
and
fcoms
add
sub
mov
test
int3
int
mov
pop
cmp
or
pop
cmp
sbb
and
outsl
scas
jg
adc
nop
pop
daa
sub
or
or
jp
pusha
rcrb
je
pushf
sbb
and
dec
add
sub
aaa
xor
aam
mov
and
test
out
inc
inc
mov
cmp
jmp
xchg
mov
inc
push
aaa
pop
dec
jbe
sub
pop
jnp
ret
lahf
cmp
or
jmp
xchg
lret
mov
outsl
jle
sar
stc
mov
cmp
xchg
mov
mov
sub
imul
sub
mov
mov
jmp
in
icebp
in
add
dec
pop
inc
shlb
add
cmp
mov
lcall
sbb
fmuls
inc
inc
into
xchg
mov
loope
sbb
inc
jbe
mov
aas
test
ja
pop
cmp
push
or
movsl
pop
pop
fmull
test
cltd
xchg
add
pop
repnz
fcoms
stc
adc
jns
inc
lahf
cmpsl
sbb
dec
shlb
cltd
xchg
cmp
loop
jl
out
or
popa
fsubr
jecxz
xor
dec
cmpsl
mov
pop
stc
aas
dec
sub
ds
in
jge
rcl
lds
jne
ss
ljmp
mov
mov
mov
daa
mov
push
mov
push
mov
jl
lahf
mov
push
rolb
movsb
je
inc
and
cltd
fcoml
les
fcmove
inc
in
inc
lahf
ljmp
nop
push
push
add
xor
clc
decl
int3
jbe
mov
pop
dec
xor
movsl
mov
pop
or
jecxz
jmp
xor
push
ret
mov
and
or
mov
fucomip
clc
add
pop
mov
aam
dec
sbb
fldt
out
fbstp
or
xor
outsl
push
mov
cmc
std
dec
in
fcoms
mov
dec
cmp
mov
xchg
cmp
int3
popa
mov
loopne
cli
gs
jle
mov
xlat
push
notl
jl
and
xorl
cs
getsec
cmp
sbb
insb
mov
cld
nopl
add
xlat
stos
arpl
aad
out
add
test
cmpsl
in
clc
pop
xchg
jp
add
stc
insb
leave
cltd
inc
add
xchg
adc
and
andb
inc
mov
scas
rcrb
mov
iret
push
sub
enter
mov
sub
test
sub
call
fmull
aad
in
dec
pop
sbb
sbb
fcmovnu
loope
cltd
testl
into
gs
inc
push
js
pop
imul
sbb
mov
imul
lret
inc
in
sbbl
push
add
push
pop
cmp
jmp
lds
repz
cli
insb
lock
data16
hlt
je
cmp
inc
mov
xor
mov
adc
cmpsb
push
mov
push
lods
int3
adc
imul
pop
repnz
je
leave
stos
in
mov
bound
into
jb
cmp
inc
orb
pop
cmp
xchg
jecxz
mov
or
xchg
mov
pusha
inc
mov
and
jg
xchg
xor
mov
inc
cmp
add
dec
rcrl
xchg
push
pop
cmp
cmp
mov
xor
pusha
and
movsb
mov
or
loope
add
rorl
sbb
cmp
sarl
stos
test
clc
xor
mov
testl
or
mov
shll
mov
pop
sub
sti
pop
fstps
rolb
ret
fdivrl
sbb
xchg
pop
outsb
pop
shrb
add
xchg
push
pushf
lods
xchg
push
pop
mov
sti
enter
clc
shl
sbb
ret
add
loopne
or
mov
fisubl
js
movsl
sbb
pop
lahf
out
popa
cmp
add
cmp
pop
aaa
pop
mov
xor
add
cli
arpl
lea
sbb
pusha
lods
xorb
mov
adcl
inc
cmp
loope
jbe
dec
mov
cld
je
cs
adc
sbbb
mov
mov
cmp
jl
sub
pop
push
jb
insl
xchg
mov
loop
mov
lcall
pop
cmpsb
add
lds
mov
sbb
inc
pop
inc
mov
aaa
xor
push
dec
cmpsb
aaa
add
mov
pop
xchg
leave
fcoml
jl
js
idivb
pop
scas
push
jmp
mul
ja
imul
dec
jnp
pop
mov
jne
movsb
rclb
mov
loopne
fdivrs
insl
mov
fldenv
jecxz
stc
jns
das
add
add
in
and
mov
loope
fldl2t
aad
xchg
push
xchg
add
scas
mov
in
jmp
inc
jl
loope
pusha
or
xchg
js
xchg
int3
imul
aas
inc
sub
lea
out
cli
mov
dec
adc
pusha
xchg
insl
fldenv
rdmsr
imul
in
jno
and
test
inc
jae
loop
mov
pop
dec
mov
clc
scas
lea
push
dec
rep
leave
dec
cwtl
das
adc
mov
call
xor
aaa
sbb
add
es
push
inc
sbb
cmp
lods
stos
movsl
xchg
clc
imul
ret
add
or
dec
cld
negb
push
test
cmova
cwtl
adc
xor
out
in
lods
mov
mov
in
xor
xchg
push
test
cli
ss
or
jb
fistpll
ljmp
pushf
outsb
jmp
ds
rcll
inc
mov
lahf
sub
sbb
mov
loopne
lcall
int
in
out
ljmp
scas
mov
add
rcrl
pop
arpl
test
dec
mov
pop
mov
mov
xor
in
mov
mov
lods
jno
sbb
jae
push
insb
repnz
or
repz
out
inc
mov
aad
jae
andb
rcll
and
pop
sbb
xor
ljmp
mov
loopne
hlt
mov
repz
sti
jl
xchg
sbb
push
adc
dec
mov
pop
cmpsl
xchg
mov
cmp
mul
loope
dec
shlb
mov
or
push
mov
pop
sbb
sbb
mov
lds
je
cs
incl
xchg
cmp
mov
in
mov
fs
mov
inc
lock
hlt
movsl
xor
xor
outsb
fsubrp
mov
sbb
mov
mov
test
enter
pusha
cmp
inc
fdivrs
pop
sbbb
inc
sub
pushw
dec
rcll
or
jl
xchg
out
fistpll
push
xor
and
fldcw
add
test
lret
inc
xchg
addr16
xchg
mov
adc
lock
insb
les
add
pusha
enter
xlat
sub
mov
cld
mov
adc
inc
jnp
lds
mov
sbb
sbb
and
jnp
sub
cmpsb
adc
push
popa
das
insl
in
outsl
cmp
mov
sbb
jecxz
dec
mov
or
jge
lds
pop
mov
xor
push
leave
fdivrs
mov
addps
insl
mov
lock
into
xor
lods
cmp
push
fadd
ret
cli
call
xor
addr16
ss
xchg
idivl
aaa
outsb
cmc
popf
adc
shr
mov
add
dec
pop
inc
jp
cmp
mov
jge
sahf
push
cld
sub
stos
outsl
popf
mov
les
cwtl
lods
inc
sbb
push
ficomps
in
push
xor
adc
push
sbb
mov
sbb
jecxz
or
push
ret
add
loope
jo
push
ss
cmp
hlt
inc
pop
sbbl
mov
xchg
xlat
sub
xchg
sub
cmp
test
data16
outsb
jnp
sarl
xor
xor
lahf
insb
aam
lret
pusha
mov
insl
add
fcmove
cli
adcb
add
push
aas
xchg
push
out
push
inc
mov
cwtl
adc
push
pop
xor
push
mov
into
xor
inc
push
add
or
or
lds
rcl
pause
in
cltd
test
dec
lret
mov
je
stos
bound
imulb
cltd
fiadds
sbb
lods
mov
mov
sbb
add
jnp
scas
pop
jge
lahf
mov
and
call
mov
fwait
addr16
push
sqrtps
mov
xchg
inc
loopne
aam
sbb
outsb
push
sub
shrl
inc
jl
mov
push
std
add
popa
sub
xchg
mov
sahf
xor
pop
fdivl
jne
imul
cwtl
fwait
js
mov
or
fisubrs
popf
fstl
or
cltd
jg
cli
add
hlt
sbb
fmuls
push
ja
cmpb
call
out
mov
hlt
jmp
mov
add
jns
mov
xchg
pop
xor
nop
mov
ret
jo
cmp
jl
test
shrb
arpl
xchg
xchg
fsubrl
mov
sub
popf
gs
xchg
out
fstp
lds
and
pop
fsts
cwtl
xchg
aas
jbe
and
aam
inc
or
and
pop
sub
and
or
cld
rcl
movsb
inc
jp
jb
pop
in
inc
lret
icebp
mov
clc
repz
ljmp
add
mov
push
stos
or
dec
mov
mov
call
icebp
scas
adc
in
scas
notl
dec
or
int3
lret
ljmp
inc
ds
adc
lahf
push
pop
mov
sub
xchg
xor
ds
rcrl
fnstsw
jp
jecxz
mov
arpl
pop
sar
orl
xchg
sub
int3
popf
int
pop
or
stos
repz
mov
sti
sub
push
push
pushl
sti
fidivl
sbb
jmp
add
loope
and
or
mov
leave
and
push
fmuls
mov
xchg
repz
aaa
sbb
ds
into
adc
jle
daa
ret
in
aas
mov
scas
mov
adc
out
and
adc
push
inc
fwait
push
aad
sbb
cmc
int
sti
pop
cmpsb
fstpl
ja
popa
mov
dec
jno
push
cmp
mov
or
jp
cmp
adc
out
sbb
je
incl
mov
jp
lds
into
xchg
adc
adc
pop
pop
mov
sbb
std
aam
dec
leave
mov
mov
rcrl
and
mov
loop
pop
cmp
and
sub
dec
xor
loopne
adc
lret
inc
push
mov
dec
add
and
js
mov
sub
lret
sbb
xchg
mov
scas
out
mov
sub
mov
andl
movsb
xchg
sbb
or
lock
push
ljmp
pop
outsb
xor
test
jp
out
pop
pusha
addr16
or
add
cmpsl
imul
sahf
mov
cmpsl
mov
shrb
cmp
mov
xlat
adc
movsb
insb
js
sub
cs
test
bound
xor
enter
dec
jg
lcall
ja
sub
pusha
push
add
xchg
xchg
imul
arpl
lret
mov
mov
bound
inc
sub
cmp
repz
into
xchg
cmpsb
pop
dec
inc
mov
sbb
dec
enter
fildll
loop
sub
in
xor
ja
leave
pop
and
cmpsl
xor
movsl
sub
push
xor
adc
and
sbb
pop
pusha
cld
push
fmuls
lods
movsb
test
pop
inc
and
out
push
mov
leave
sbb
jecxz
or
andb
mov
mov
add
or
mov
adc
and
add
lret
xchg
mov
inc
fwait
shr
cmp
push
ret
mov
js
lock
mov
push
pop
pop
or
ljmpw
jnp
xor
pop
inc
ljmp
mov
xchg
enter
sbb
scas
fbstp
dec
test
push
ror
add
es
add
repnz
push
sbb
dec
dec
jnp
aad
jecxz
sub
fwait
aas
ds
lods
mov
popf
fistpl
movsb
fs
jns
push
dec
add
dec
dec
push
jle
lahf
bound
mov
rolb
adc
loop
add
sahf
push
mov
out
sbb
pop
jmp
divb
js
stc
lock
gs
adc
jb
jmp
jns
cs
mov
jae
repz
xor
dec
mov
cli
mov
pushl
fsts
mov
mov
aam
stos
push
dec
lret
and
sub
retw
sub
inc
lds
inc
daa
test
test
stc
push
sti
mov
fucomp
in
xor
jl
sub
loopne
mov
push
add
xchg
xchg
mov
div
add
push
jb
fcomip
orl
insb
jp
sub
daa
lret
dec
cmp
mov
aad
sbb
stos
sub
addr16
aaa
paddsb
jp
stc
sbb
mov
mov
test
pusha
mov
sbb
jno
xchg
stos
inc
sub
cmp
ficoml
js
push
mov
cmp
adc
ss
mov
add
jns
jle
aad
notb
xchg
insl
adc
outsl
mov
lcall
ret
xlat
fwait
xchg
daa
outsb
pop
xlat
jno
pop
bound
mov
jb
lret
mov
test
mov
clc
jp
ss
mov
mov
sub
leave
mov
dec
and
out
xchg
or
sub
pushf
jecxz
cmpsb
and
int
xor
lds
xchg
dec
jnp
cli
sbb
pop
mov
pop
or
add
rcrl
mov
inc
add
aaa
jne
sub
jae
mov
mov
mov
clc
stos
sarl
in
or
sti
mov
cmp
shrb
cmpl
xor
lds
fmul
pop
int3
inc
dec
out
ljmp
jno
push
add
insl
and
mov
mov
lret
mov
flds
sbb
fldl
rclb
mov
adc
aaa
push
jg
jg
int
cmp
add
cmpsb
push
lret
cmp
xor
int
les
push
mov
xchg
dec
test
mov
xchg
dec
mov
decb
lock
test
and
xchg
andb
mov
popf
sub
sar
lea
xchg
loop
mov
aas
out
jb
es
jmp
sub
mov
mov
adc
mov
or
cmp
cmp
subb
jle
psubsb
mov
popl
or
bound
in
mov
int3
adc
mov
arpl
cltd
xor
push
mov
fists
rcrl
mov
frstor
lods
lds
pop
insb
mov
xor
adc
test
imul
adc
ret
xchg
xchg
mov
xchg
sbb
and
sbb
sahf
mov
sbb
pop
cmpsl
lea
ret
test
cs
aad
mov
inc
fidivrl
arpl
jp
rorl
lods
jae
loope
test
inc
pop
in
rcll
jb
jnp
jmp
pushf
add
dec
xor
add
test
or
in
xor
std
mov
sub
push
pop
cmp
bound
sbb
cmc
jg
aam
rcrb
mov
pop
and
push
xchg
xchg
xchg
cmp
inc
push
movsl
mov
ret
mov
add
out
jno
gs
ror
ficoms
fisttpl
inc
jnp,pt
pop
decl
imul
std
jne
ljmp
shlb
movsb
jno
xchg
pop
popa
icebp
mov
jmp
adc
inc
adc
mov
imul
mov
sbb
xor
aas
jg
push
add
adc
bound
int
pop
insl
xchg
js
mov
ds
mov
sub
pop
pop
xor
out
adc
jo
push
inc
cmp
mov
loop
ret
fistpl
xor
mov
push
mov
loop
cmp
jno
or
cmpsl
adc
out
mov
outsl
mov
or
mov
or
cs
js,pn
divl
in
cmp
jmp
lret
ss
or
fwait
cmp
in
add
lret
ret
push
xorb
cltd
cld
mov
adc
sub
lcall
sub
das
or
mov
mov
call
adc
inc
xchg
cli
push
lea
out
nop
js
dec
jns
lds
pop
adc
add
jl
int3
mov
cmpsl
aaa
xchg
inc
test
ficoml
in
test
das
push
sub
push
repz
mov
sbb
aad
aad
leave
add
jmp
sub
jp
pop
sarb
addl
dec
cmp
shrl
xchg
xchg
adc
mov
cmpsb
fwait
mov
adc
movsl
cli
mov
xchg
gs
iret
aas
inc
hlt
xlat
pop
fdivrl
fwait
ror
mov
int3
mov
mov
push
nop
hlt
scas
fisttps
or
js
push
add
xchg
mov
inc
test
or
scas
pop
sbb
and
inc
mov
jmp
add
insb
pop
sub
les
ss
pop
mov
pop
adc
push
ja
inc
pop
call
test
sbb
ror
jbe
out
jg
pop
in
push
imul
popf
sub
scas
sub
and
lahf
mov
aam
stc
mov
inc
popf
js
imul
jb
sub
cltd
push
mov
pop
sbb
sbb
scas
dec
add
adcl
mov
lds
dec
push
jo
mov
cmp
jmp
jne
sub
add
fistpll
shld
pop
loopne
push
adc
idivl
lock
mov
outsl
fadd
inc
insl
sbb
xlat
xor
mov
jae
neg
mov
push
sbb
out
inc
loopne
xor
jo
dec
sbb
test
sbb
in
sub
out
insl
xlat
jg
lcall
rclb
dec
lock
add
ret
loop
repz
aas
mov
mov
add
and
jmp
dec
int
std
push
jl
jb
lods
call
divb
xchg
test
push
orb
mov
scas
adc
fcoml
cs
mov
jmp
sub
ss
sti
ret
inc
xorb
into
js
xchg
xor
cmp
inc
xchg
rcrl
dec
aad
dec
xchg
jle
iret
sbb
mov
repz
mov
mov
push
dec
scas
nop
mov
inc
movsb
push
bound
pop
in
clc
dec
xor
or
and
clc
test
out
cmp
sahf
adc
jae
xchg
add
mov
ret
jae
fmul
inc
bound
in
mov
cld
add
dec
fildll
cli
fs
xor
mov
adc
push
xor
jns
and
pop
mov
inc
and
dec
outsl
or
cmp
sbb
push
test
shrl
clc
stos
movsl
ror
sbb
jae
add
jne
fidivrl
sbbb
adc
cmp
aam
xorl
adc
ja
addl
jbe
les
addl
call
es
jbe
add
leave
sarb
adcb
jns
fstpl
xor
cmpsl
mov
js
cwtl
xor
test
inc
insb
jnp
scas
out
xor
das
mov
pop
xor
mov
or
dec
adc
imul
enter
push
sti
mov
cs
cld
pop
push
loope
mull
and
xchg
lcall
pop
and
pusha
lods
cmc
jp
lea
std
cmp
in
es
cmp
imul
enter
xchg
push
mov
mov
xchg
call
pop
adc
xor
mov
into
ja
mov
pop
xchg
dec
dec
jb
and
inc
sub
add
pop
aas
ja
mov
int3
inc
outsb
and
xchg
fsts
cs
dec
cmp
mov
ret
jl
jecxz
div
fistpl
aam
push
adc
out
dec
loopne
test
cmp
loop
cmp
xor
lods
cs
stos
adc
iret
data16
imul
cmp
xlat
idivb
popl
iret
xor
push
int
in
mov
ss
mov
push
lds
push
add
adc
sbb
rcrl
aaa
out
sbb
lahf
push
cwtl
adc
jmp
jno
enter
call
push
in
stos
mov
push
xchg
sub
adc
mov
mov
cmp
std
hlt
push
inc
push
in
ret
jge
popf
pop
ss
subl
mov
aad
cli
fprem1
je
fimuls
addr16
mov
lret
adc
pop
aad
popa
shrb
xchg
mov
pop
jmp
lcall
push
mov
hlt
aas
addr16
in
and
rcr
fildll
pop
jecxz
fmuls
rorl
push
sub
adc
pop
das
leave
mov
movsl
addr16
icebp
pusha
cmp
sbb
and
ds
jno
inc
sbb
mov
lret
into
lods
mov
loope
mov
lret
or
mov
cld
and
jbe
cli
jg
inc
sahf
loope
dec
add
push
inc
pop
or
pop
into
in
push
dec
xchg
pushf
add
out
dec
jle
xchg
pop
jb
add
xchg
fs
shll
lods
adc
mov
push
jmp
jp
xchg
mov
lret
mov
andl
inc
mov
lcall
xor
inc
cs
mov
and
or
cld
jno
add
push
popa
pop
push
sbb
popf
inc
mov
cs
xor
push
dec
mov
fisubl
test
pop
or
or
cltd
in
and
cmp
pop
shll
push
into
jnp
arpl
jb
xchg
sub
sbb
lret
negb
ror
ja
jge
adc
cmp
pop
sbb
pushf
stc
push
xor
xchg
xor
out
sbb
xchg
int3
test
xorb
mov
shll
addl
or
lea
pop
leave
push
fnsave
jg
rcrb
add
outsb
adc
pop
mov
sub
cmp
daa
in
popa
cltd
cltd
sti
cwtl
sub
lret
lcall
hlt
sarl
mov
loope
add
jne
push
pusha
in
es
xchg
add
pop
stos
cmc
daa
je
stc
sbb
adc
mov
in
inc
stos
imul
pop
jae
add
lcall
inc
pop
fcomps
aam
jle
mov
or
fmull
mov
je
xor
push
lds
xor
sub
jl
imul
out
inc
mov
repz
or
aad
xchg
hlt
push
cmpsl
xchg
fcmovu
xchg
cmpsb
mov
jl
mov
and
jno
jle
adc
sub
aas
imul
movsl
dec
mov
aad
mov
push
jle
lods
and
jge
fcmove
loopne
xor
pop
pop
popf
cmpsl
push
cmpl
pop
mov
cmpsl
rdtsc
sbb
cmpsl
call
leave
in
sbbl
rcrl
or
loopne
sub
in
mov
dec
xchg
xor
fsubl
xchg
out
cmp
cli
rep
cli
cwtl
loopne
pop
test
push
test
inc
mov
dec
jp
mov
dec
lds
les
pusha
adc
add
xor
and
jmp
pop
push
jl
out
movlps
jbe
orb
fldt
mov
idivb
cltd
ret
aam
xchg
add
stos
xor
pop
stos
pop
shr
push
pop
stos
push
aam
cmp
outsb
push
xor
sbb
pop
inc
popf
movsb
daa
push
cwtl
jns
call
pop
jmp
packssdw
jge
jecxz
cmp
test
inc
add
mov
js
sarb
mov
lds
mov
xchg
push
out
sub
hlt
xchg
sub
stos
mov
adc
mov
and
mov
test
mov
rcll
sub
xor
mov
outsl
push
cmpsl
dec
test
outsb
popa
packsswb
loop
add
stos
movsbl
imul
aaa
lea
pop
push
jecxz
mov
arpl
mov
mov
dec
out
arpl
repz
jbe
push
adc
push
push
lods
ljmp
cmc
pop
cmp
cmc
adc
cmp
ds
add
das
add
subb
mov
mov
xchg
adc
mov
pop
xchg
adc
jle
jl
push
xchg
loopne
dec
cmp
mov
adcb
cmp
xor
xor
inc
pushf
ror
jge
cmpsl
movsl
out
in
pop
rorb
lahf
dec
lods
adc
cmpsl
mov
cmp
mov
jge
mov
mov
mov
aam
std
out
scas
cmp
test
sahf
cmp
jno
loop
pushf
inc
mov
xchg
inc
loope
and
daa
cmpb
sti
mov
shrb
and
data16
xchg
clc
jnp
inc
mov
xchg
mov
rcrb
inc
cmp
dec
orb
mov
fsts
dec
cmp
mov
xor
mov
adc
or
push
roll
mov
ja
inc
pop
adc
push
cmc
xchg
push
inc
lods
inc
add
fistpl
sub
fistpll
mov
int3
jmp
xlat
ljmp
js
arpl
mov
mov
repnz
aas
in
filds
dec
fistpl
pop
lret
sub
xlat
stos
xor
adc
cmp
dec
jne
push
jg
pop
in
xchg
inc
dec
xor
inc
xor
subb
call
mov
mov
stc
or
cmp
daa
sbb
call
mov
add
xchg
jp
jp
mov
cmp
fdivrp
dec
xchg
xchg
push
add
cs
rcrl
fwait
or
push
xor
popf
push
enter
adc
xchg
sbb
insl
mov
movsb
jns
adc
dec
mov
movsl
test
mov
jmp
bnd
std
test
lea
into
pop
cmp
cmpsl
push
inc
cmp
or
xchg
fmul
mov
ljmp
cmp
lret
in
mov
add
mov
add
test
pop
js
ret
dec
adc
pop
xor
jne
loopne
mov
pop
das
xchg
pop
les
push
dec
or
pop
push
mov
dec
xchg
jge
out
adc
mov
out
popf
dec
push
inc
xor
rcr
mov
xchg
fldenv
ss
jl
mov
lret
jecxz
outsb
in
andl
mov
push
aad
nop
jle
or
enter
repz
sub
add
pusha
adc
mov
fcomp
and
out
fstpt
insl
cld
and
fs
adc
mov
mov
pop
push
jmp
cmp
dec
jne
and
jb
mov
push
add
pop
jo
and
stc
xor
and
aam
out
mov
sub
cmpsb
popf
xor
inc
into
loop
jg
and
inc
fiaddl
inc
bound
negl
popa
jno
add
mov
pop
idiv
imul
mov
outsb
fcompl
mov
adc
pop
adcb
add
inc
jne
insb
jecxz
repnz
mov
int
shr
in
add
imul
enter
dec
push
add
push
cli
cmp
cmp
mov
lock
cld
cli
jle
rcr
jge
fldt
int3
inc
ss
push
sub
jl
pop
jb
add
and
fs
pop
rolb
cwtl
xorb
dec
and
pop
push
insl
jg
imul
cltd
addr16
jg
inc
je
adc
mov
fstpt
call
into
std
push
out
xchg
ljmp
pop
cmc
ds
lret
mov
and
int3
daa
pop
xchg
mov
aad
jb
cld
xor
mov
xchg
scas
mov
pop
pop
or
or
cmc
lds
ds
jno
mov
fidivrl
ljmp
or
jno
mov
inc
data16
daa
testb
jle
inc
stc
pop
mov
jns
imul
xchg
dec
ja
add
cmp
pop
sbbl
or
cmp
testb
sbb
jle
add
outsl
dec
cmc
sub
mov
dec
pop
aam
int
js
jbe
enter
lcall
cmp
sbbb
pop
push
stos
push
jnp
push
cwtl
jmp
jge
test
mov
call
dec
mov
popf
sar
xlat
inc
xor
jbe
push
popf
pusha
outsl
mov
inc
push
in
mov
ret
jo
jp
adc
rorl
mov
jg
cmc
mov
pop
mov
mov
pop
lcall
or
sbb
jecxz
loopne
jecxz
ss
dec
cmc
dec
aas
lock
test
adc
cmpl
xor
jle
les
inc
mov
push
mov
and
adc
cmpsb
daa
cmp
cld
adc
adc
xorl
push
or
repnz
xor
sbb
jp
and
xchg
and
movsl
mov
cld
andb
and
int
push
push
hlt
scas
xor
xor
xor
xchg
pusha
cmpsb
pop
xchg
pop
push
dec
jmp
add
push
push
push
movsb
sub
add
sti
push
fsub
dec
ficomps
jg
out
sti
jns
mull
mov
adc
int3
jecxz
adc
inc
cmpsb
cmp
jge
add
scas
cbtw
fnsave
sbb
adcb
jmp
lcall
sbb
cltd
cmp
push
push
in
mov
out
push
or
xchg
push
out
sub
out
push
pop
dec
js
push
std
stos
dec
cmp
xchg
jecxz
pop
mov
mov
mov
pop
dec
jmp
lods
jae
daa
movl
jae
dec
xchg
xor
dec
push
add
xchg
cmpsb
nop
ret
sbb
lcall
out
push
sub
insl
add
imul
sub
ljmp
jb
dec
xchg
stc
cmp
and
orb
jns
push
repz
lds
loop
mov
sub
std
testl
mov
add
xchg
dec
mov
dec
scas
dec
jecxz
pushaw
mov
pop
test
mov
sbb
dec
popa
pop
outsl
in
sbb
loope
aaa
stos
in
push
repz
jae
xor
jp
lods
jb
mov
inc
xchg
pop
lahf
jmp
fsubl
stc
push
pop
and
inc
addr16
inc
jbe
jge
out
jnp
push
add
and
ret
stc
dec
jecxz
jno
jbe
cmp
and
sbb
push
fwait
dec
lods
andl
les
repnz
jb
push
iret
call
inc
adc
mov
and
and
xor
cmpsb
jae
jno
das
outsb
subl
test
push
push
loopne
ficoms
in
xchg
leave
ret
insb
frstor
mov
test
bound
xchg
mov
mov
or
mov
adcb
pop
xor
xor
adc
std
jae
in
and
sti
and
fnstsw
push
push
or
aam
in
sub
scas
dec
ja
es
or
ret
movsb
arpl
mov
ret
xor
stos
jns
add
andb
pop
aaa
jp
push
or
mov
mov
pop
add
std
inc
xor
xchg
ja
push
and
test
pop
mov
scas
jns
dec
mov
pminub
add
add
cli
ss
xor
pop
scas
mov
cmp
popf
je
mov
in
cmp
adc
jb
push
or
jmp
jl
sbb
stc
push
or
inc
adcl
cmc
dec
lds
sub
je
hlt
repz
xor
jp
fcoml
shlb
mov
push
jo
icebp
pop
sti
xchg
clc
mov
in
cmc
mov
pop
push
xchg
jbe
sbb
imul
mov
ds
pop
repz
popa
dec
cli
add
aaa
prefetch
or
xorb
sarb
out
pop
popa
jbe
loopne
inc
repz
mov
push
and
dec
cmpsb
in
inc
int
mov
insb
pcmpeqd
sbb
adc
pop
mov
mov
sub
inc
jmp
mov
es
jl
mov
repnz
mov
lcall
sub
movsl
sub
cmp
jne
mov
ss
stos
mov
lahf
stos
and
xchg
jne
dec
mov
rorb
out
lahf
shl
rcll
cmp
cmp
inc
cmc
xchg
mov
call
adc
cli
inc
lods
pop
mov
jle
jmp
mov
add
stos
adc
adc
jbe
jecxz
fnstcw
js
jl
scas
xchg
dec
sbb
in
mov
adc
cmp
jmp
mov
fiaddl
cmc
mov
mov
inc
jge
add
aas
sarb
sahf
repnz
and
mov
dec
or
mov
out
je
fwait
push
fadds
fsts
or
in
cwtl
mov
fmull
jl
mov
dec
dec
ret
xchg
sbb
int
rclb
add
inc
and
pushf
inc
or
stos
inc
mov
mov
adc
test
sbb
push
loopne
cmp
pushf
scas
aas
scas
es
mov
jae
inc
loope
push
mov
jl
add
lahf
lret
cmp
decb
jnp
orb
mov
dec
xor
and
sub
pusha
mov
sarl
sub
sbb
pop
shll
fmuls
rcl
sti
pop
mov
movnti
pushf
cmp
lahf
fst
nop
cs
push
pop
aas
es
mov
addb
xor
cmp
je
cmp
icebp
gs
or
cmp
test
inc
mov
movsl
repz
fldenv
mov
jbe
sub
cmpsb
sti
add
dec
es
out
mov
movsl
mov
loopne
arpl
cli
outsl
xlat
ds
pushf
adc
xlat
sub
xchg
negb
jnp
lods
adc
popa
and
sub
sbb
adcl
mov
int
sbb
jb
inc
jb
lret
sub
push
shll
stc
adc
fists
imulb
js
and
cmp
add
mov
in
mov
xchg
shl
sbb
push
xchg
mov
ja
cmp
mov
into
adc
aad
mov
pop
pop
loope
scas
dec
test
fwait
pop
sbb
inc
xor
pop
imul
loopne
dec
mov
imul
fbld
pop
fnsave
subb
fmull
insb
or
std
int
mov
fs
adc
xchg
out
push
add
or
push
data16
jmp
stc
sbb
sar
jp
insb
sbb
mov
idiv
or
and
or
adc
out
jecxz
xor
add
fucomp
inc
cmc
mov
mov
outsb
mov
mov
aad
mov
int3
stos
jnp
fistpll
stos
scas
ret
stos
mov
inc
mov
fstpl
cmp
test
add
sbb
mov
pop
pop
push
fiadds
in
mov
movsl
pop
mov
xchg
xchg
lock
test
cmc
arpl
xor
loope
pop
cmpl
into
bound
shlb
outsb
pop
cld
ss
pop
mov
pop
fldt
testl
icebp
cmpsb
nop
subl
dec
cmp
pop
jo
aam
ds
cmp
lcall
sub
push
xor
sub
jnp
pusha
fcompl
add
loope
inc
out
adc
shll
stos
cmc
jno
and
add
popf
sbb
sub
cwtl
out
fstps
cli
repz
shrb
pusha
sub
scas
sbb
ds
in
xor
loopne
sbb
incb
jae
dec
sbb
daa
or
mov
rorb
or
and
or
stc
dec
movsl
jl
mov
or
push
adc
inc
daa
pop
int
add
lret
mov
jne
sbb
lret
mov
popa
fiaddl
xor
idiv
xor
push
cs
adcb
add
push
es
xchg
add
xor
mov
dec
mov
jnp
inc
sbb
lahf
movsb
cmp
jge
rcll
cwtl
int
adc
imul
add
inc
cli
clc
es
idivb
insl
scas
sahf
mov
sahf
xor
out
jle
int3
xor
xor
and
xchg
sbb
test
leave
jge
call
fisubl
mov
fimuls
add
fnstsw
dec
push
push
aas
mov
cmp
subb
jb
cmc
sarb
adc
sbb
bound
das
sub
inc
rcrb
dec
lret
inc
sahf
repnz
add
stos
cmpsb
jg
std
dec
cmp
aam
mov
jne
dec
xor
cld
sbb
js
mov
pop
iret
lea
or
jne
cmpsl
testl
andb
clc
test
xlat
out
icebp
fimull
movsb
mov
mov
repz
add
fistpll
mov
xor
push
imull
add
cmp
repnz
in
push
sbb
lds
repnz
dec
stos
test
jmp
cmpsl
testl
xor
sti
pop
mov
insl
lods
or
ja
andb
cs
or
icebp
pop
popf
dec
das
leave
push
fcoms
sbb
stc
ror
push
push
add
icebp
mov
bound
enter
outsl
movsl
push
push
xchg
xchg
out
xor
pop
imul
push
xchg
adc
jmp
sub
pop
outsb
pop
push
repz
xchg
cvtpi2ps
out
mov
dec
jp
pop
cmpsl
add
cmc
outsb
fsubl
sub
mov
sarl
out
clc
xor
cmpsl
jae
xor
dec
cmp
mov
dec
sti
jmp
rcl
or
add
cmp
maskmovq
add
xchg
jle
push
lods
stos
pusha
xor
pop
dec
stc
mov
xchg
mov
sahf
arpl
test
push
and
out
jl
sbb
jns
fsubl
push
imul
cmp
stc
cmp
push
pop
lods
xor
call
cmp
dec
mov
popa
pusha
lea
mov
clc
imul
jl
bound
xchg
add
jg
jmp
and
add
call
jbe
mov
dec
xlat
adc
mov
dec
cmpsl
sub
xchg
mov
mov
mov
aas
jge
fcom
andb
sahf
xor
mov
fdivrs
mov
fsubrl
adc
inc
push
dec
add
neg
js
xlat
cs
sub
es
inc
add
mov
xchg
jp
lds
lock
arpl
nop
loop
pop
inc
test
push
int
arpl
mov
and
cmpsl
mov
ror
in
cmp
push
adc
fdivrs
fcmove
add
push
addr16
loop
mov
bound
sbb
test
sbb
sbb
test
xchg
pop
cli
mov
pushf
add
add
filds
mov
sbb
sub
aam
in
out
pop
loopne
or
dec
in
icebp
mov
adcl
push
adc
data16
test
movsl
cli
int3
inc
stos
in
js
pop
cmp
movsb
mov
inc
out
imul
mov
push
ja
imull
scas
sti
jg
in
sbb
mov
ret
iret
mov
xlat
xchg
push
loopne
mov
ret
xchg
fistl
mov
sub
or
mov
adcl
mov
test
testl
jno
jnp
mov
ja
enter
sti
push
movsl
sti
ds
push
fbstp
add
xor
mov
int3
popa
mov
lods
stos
std
cmpsl
and
orl
and
add
mov
icebp
outsb
cmp
fistpll
lods
add
mov
add
add
ljmp
fld
sub
add
es
pop
in
dec
fs
fsubrl
pop
aad
dec
sbb
stos
js
out
jns
incl
sbb
mov
lods
adc
je
pushf
dec
into
xchg
shr
mov
pop
cld
mov
xchg
cmc
outsl
std
xor
pop
fnstcw
pushf
fcmove
push
je
aad
loope
mov
or
ja
xor
repz
or
cmp
inc
jno
jle
mov
mov
fwait
popa
push
sub
pop
shll
in
out
enter
and
out
xchg
mov
or
xor
lds
and
mov
ret
arpl
cld
outsb
mov
mov
lock
shll
and
push
daa
imul
push
test
xor
ret
lods
cltd
jle
push
push
sub
mov
and
cmp
imulb
sahf
outsl
mov
inc
push
sub
adcl
sub
add
in
jbe
out
insb
and
mov
jle
pushf
pop
mov
hlt
cmpsb
add
cmp
dec
scas
dec
push
fisubs
pushf
pop
xchg
sbb
and
movsl
adc
jnp
inc
lods
xor
pop
jmp
stos
sti
ss
push
shlb
sbb
lcall
int3
sub
rol
pop
dec
es
pop
push
jne
xchg
gs
subb
mov
lret
popf
in
push
mov
imul
adc
dec
inc
add
mov
sub
idivb
idivb
or
sbb
cmp
or
inc
inc
sub
cmp
pop
mov
out
cmp
adc
inc
into
dec
arpl
mov
out
lret
sub
sub
xor
sti
in
adc
outsl
fsubs
movb
or
mov
mov
mov
add
lahf
inc
inc
out
push
lcall
gs
pop
pop
adc
add
add
sub
xchg
sub
ljmp
mov
inc
sbb
jnp
xchg
push
add
adcl
dec
data16
inc
lahf
mov
dec
mov
fimuls
xchg
xchg
mov
cmp
xchg
cmpsl
dec
test
aaa
stos
sbb
xor
shr
out
fwait
cmp
mov
shll
das
cmp
mov
mov
lods
sub
sbb
fistps
inc
sbb
out
or
lock
imul
or
call
sbb
outsl
xor
cmc
in
mov
jno
jo
mov
fcmovnb
outsb
pop
push
cmp
ret
lret
addr16
gs
cmp
jp
push
nop
add
jle
test
pop
mov
gs
jb
cltd
je
out
sub
inc
xor
fadds
push
cmp
mov
mov
shlb
outsb
mov
xchg
pop
stc
dec
cmpsb
cmp
xchg
sbb
inc
repz
test
outsb
mov
fiaddl
cmp
or
pop
pop
xchg
int
out
mov
xor
loope
out
xchg
adc
xchg
push
cmp
mov
imul
cmp
adc
aam
stos
dec
mov
and
jae
add
sbb
cmp
pop
push
insl
and
inc
insl
lods
test
xchg
sbb
fisubrl
sub
xchg
dec
leave
lahf
xchg
stos
outsl
pusha
mov
xchg
subb
add
mov
les
or
push
orl
adc
xor
add
push
jbe
push
js
jbe
xchg
test
xchg
les
add
inc
push
xor
inc
imul
pop
sarl
test
and
js
jns
clc
sbb
mov
jae
pop
mov
dec
dec
lahf
pop
aas
cmc
test
cmc
push
add
mov
insl
ficoms
sub
cmp
outsl
jae
jle
xchg
shrl
and
out
aam
lcall
mov
call
and
pop
and
mov
and
pop
pop
cmpsl
ds
adc
repz
fbld
imul
push
cmp
daa
mov
push
xchg
cmp
loope
cltd
adc
popf
inc
ljmp
sub
scas
mov
loop
jb
test
int3
push
xor
and
mov
pop
adc
scas
movsb
cmp
and
mov
jnp
pop
incl
xor
sbb
cmpb
xchg
sbb
xor
mov
cs
gs
data16
sbb
sbb
lds
cltd
rolb
mov
fsubs
sbb
mov
pop
daa
inc
fdivrl
popf
inc
mov
and
push
inc
andb
or
push
mov
inc
imul
sub
call
mov
loope
push
push
dec
push
add
cmp
push
movsl
popf
outsl
loopne
das
cmp
push
sarb
test
cmp
iret
inc
testb
mov
cmpsb
mov
cmp
xor
mov
xlat
lret
insl
mov
in
mov
push
cmpsb
and
mov
xchg
adc
sub
sub
mov
xchg
push
aas
test
loopne
aam
push
lods
push
jbe
scas
adc
test
insl
enter
popa
enter
add
push
jp
cmpsb
lock
adc
mov
scas
dec
mov
push
inc
sbb
cmpsl
shr
nop
adc
and
arpl
andl
jle
dec
call
sarl
lcall
pop
cmp
js
imul
sbb
clc
ja
sbb
ret
xor
test
xchg
cmp
loope
fwait
ja
and
nop
mov
inc
or
xchg
add
jg
popf
sti
xchg
add
movsb
roll
test
lcall
jle
inc
push
push
xor
xchg
fsubl
mov
adc
pop
cmp
cld
fimull
mov
push
int
outsl
mov
clc
fs
inc
lds
cmp
stos
cmp
push
xchg
nop
mov
outsb
das
inc
inc
xor
mov
mov
inc
jo
and
sub
mov
fldenv
mov
inc
push
dec
shl
aaa
and
mov
mov
mov
fcomp
out
pop
push
push
pop
dec
out
mov
sarl
and
inc
xchg
inc
fmul
pop
dec
insl
or
pop
mulb
lcall
dec
xchg
xor
push
or
roll
pop
or
add
and
arpl
fwait
inc
hlt
idiv
ljmp
test
xor
cwtl
push
popf
mov
jno
push
stc
dec
cmp
mov
shlb
inc
jnp
movsl
enter
lods
xchg
bound
inc
lds
test
repz
rolb
xor
mov
hlt
pop
fsubrl
push
repz
mov
pop
je
jae
imul
ret
push
pop
ljmp
mov
sub
lahf
pop
into
dec
int
sahf
data16
loop
fadd
adc
mov
aaa
gs
jb
mov
std
lods
sub
adc
jecxz
movsb
mov
in
sbb
das
adc
sahf
fcom
mov
in
jl
or
repz
sub
adc
xlat
pop
sbb
das
adc
push
stos
sub
lods
enter
gs
filds
sti
js
sub
lcall
add
xor
orl
rclb
stc
sbb
pusha
mov
or
clc
xlat
sbb
std
lds
sub
push
jnp
aas
mov
inc
mov
bound
clc
and
and
and
aaa
fisubrs
test
inc
into
loopne
addr16
cld
sbb
int3
jbe
xchg
sbb
jbe
adc
lcall
getsec
add
xchg
ja
adc
or
rol
fwait
push
pusha
cmpsb
js
stos
out
shlb
jae
cs
mov
and
mov
push
dec
cmp
dec
sbb
out
sbb
loop
movsl
out
jae
js
pop
pop
pushf
fcmovbe
outsb
insl
and
or
jnp
repz
inc
lcall
nopl
sub
mov
in
pop
out
and
dec
in
in
popa
mov
dec
mov
pop
imul
mov
int
sarb
mov
bound
sbbb
fsts
sub
xor
std
ret
cmpsl
ret
jo
shl
push
inc
jmp
cmpsl
aam
mov
mov
or
push
push
jecxz
in
xor
sbb
push
jns
and
call
pop
adc
xchg
cld
sbb
cmp
dec
or
or
xchg
roll
mov
pop
sub
jge
fdivrl
push
leave
inc
or
fiadds
jg
dec
mov
lret
loopne
cwtl
inc
es
sahf
jns
sbb
mov
shl
daa
ja
jecxz
icebp
add
je
lahf
sbb
gs
hlt
cmp
dec
icebp
pop
xchg
stos
cld
jecxz
sbb
sub
xchg
fcomp
pop
mov
dec
cmp
aas
pop
sbb
mov
pop
cli
inc
mov
rolb
nop
cmp
rol
in
dec
cmp
xor
or
idivl
les
push
rol
incb
cmp
psubsb
mov
fucomp
mov
add
cmp
pusha
and
or
xor
sbb
cmpl
mov
pop
sbb
inc
cltd
xchg
fadds
fdivs
andl
jae
pop
lret
aad
dec
push
in
je
mov
mov
in
sbb
push
push
jge
pop
das
icebp
inc
xor
sbb
or
dec
mov
and
or
mov
mov
stc
xchg
and
cmp
addr16
or
push
dec
ss
sub
sub
or
mov
in
or
pop
mov
or
int
leave
or
popa
ljmp
pop
jns
ds
aaa
jo
fs
mov
aaa
xchg
out
out
jp
inc
mov
add
and
enter
fdivs
jo
fsts
mov
das
fwait
aas
cld
add
adc
dec
adc
fcmovnu
xchg
aaa
cld
adc
fstpl
andl
pop
and
sub
jne
adc
cmp
and
xor
and
jne
hlt
cmp
test
clc
push
jae
call
cmp
pop
les
out
xor
inc
xor
pop
gs
pop
imull
movl
fdivs
and
dec
or
mov
loopne
jnp
decl
pop
pop
hlt
call
adc
push
sar
je
jge
ds
ljmp
addr16
sbbl
adc
std
movsl
adc
in
or
jbe
clc
mov
outsl
les
lods
add
jb
add
jnp
sbb
dec
repz
pusha
push
sub
jnp
push
mov
ja
jb
xchg
and
stc
adc
xor
into
sbb
aaa
aaa
pop
push
cs
loopne
jecxz
popf
mov
ret
mov
vphaddubw
imul
lret
lahf
outsb
and
pop
add
movsb
bound
popa
cmp
stc
icebp
into
in
adc
lods
test
xchg
jo
pop
aam
cli
insb
addl
cmp
xchg
sbb
xchg
test
and
pop
les
popa
das
push
and
cltd
sbb
fstpt
insl
rcll
pop
mov
inc
aam
lods
pop
nop
cwtl
mov
pop
sbb
call
mov
xchg
cmp
mov
or
jle
sbb
ss
push
scas
mov
mov
ss
and
pop
testb
in
adc
stc
inc
push
jb
pop
outsb
test
adc
dec
mov
aam
imul
xor
popf
and
loopne
jmp
push
sub
aas
aam
mov
in
jb
fs
xchg
mov
push
mov
hlt
jp
adc
xchg
and
ret
xchg
xlat
int
mov
stc
repz
sbb
in
sbbl
xor
jp
inc
lahf
fnstenv
ret
lods
in
pop
cltd
xor
mov
inc
sub
jo
insl
or
je
test
xor
outsb
sbb
mov
clc
test
aam
ds
test
mov
sti
icebp
xor
or
das
lahf
sbb
xorl
jo
cmp
es
sub
addr16
xor
ja
add
inc
bound
fcoml
pop
cmp
cltd
jb
pop
insb
push
jmp
mov
pop
pop
jnp
bound
inc
lds
addb
ret
add
adc
push
adcb
jle
imul
xchg
addr16
aaa
push
lcall
mov
fadd
inc
push
xchg
add
popf
push
xchg
test
adc
inc
mov
inc
fwait
cmp
adc
xchg
jl
test
jl
repnz
dec
cmp
push
mov
rorb
or
stos
pop
std
ljmp
sbb
sbb
mov
inc
ds
mov
sub
mov
cltd
add
insb
jp
push
xchg
or
lods
nop
lahf
dec
repnz
mov
pop
imul
pushf
inc
addr16
xlat
cmp
outsb
imul
push
outsl
mov
lock
lods
lods
lcall
mov
clc
lret
and
jle
jbe,pn
xchg
mov
jno
xor
mov
jo
sub
adc
jle
mov
fidivs
in
adc
jg
dec
dec
mov
inc
jno
or
jg,pn
sbb
icebp
stos
cwtl
and
scas
ds
aad
xchg
rorb
jmp
add
mov
jp
pop
fildll
sbb
pop
insl
sub
xor
sahf
lar
sbb
in
repnz
les
push
and
subb
int3
mov
or
or
lcall
popa
fcomi
movsb
push
leave
fsubs
push
mov
hlt
xor
push
add
iret
test
cs
leave
mov
sbb
dec
lret
pop
imul
mov
pop
ret
xchg
push
jp
cmpsl
sub
cli
push
dec
js
mov
call
out
in
inc
xor
divl
imul
cltd
adc
mov
addr16
jecxz
xorl
push
out
adc
sbb
into
fdivl
out
lcall
inc
aam
les
fnsave
pop
aas
cmp
shll
cmpl
outsb
inc
xor
mov
sub
stc
mov
lock
xor
repnz
fwait
je
std
add
cmc
call
cmp
ljmp
dec
dec
cmpsl
mov
mov
xchg
das
cmpsl
out
sub
push
add
sbb
nop
cmp
stc
xor
mov
add
push
ljmp
imul
or
dec
or
jp
cmc
stos
divl
inc
orl
imulb
dec
sbb
shll
lret
gs
popf
jmp
arpl
or
sbb
fildll
repz
jnp
mov
and
or
mov
das
or
fistpll
and
xor
je
repnz
cmp
lcall
jp
pop
cltd
ss
push
sbb
cs
jb
or
frstor
fistpl
xor
push
dec
jae
xchg
es
pushf
sbb
pop
mov
dec
movsb
mov
mov
cmp
jnp
jno
dec
aad
add
rorb
pop
add
push
pop
adc
outsl
xor
jbe
cmp
rolb
and
inc
popa
push
cmpl
mov
sub
cmp
daa
leave
out
cmpsb
fstsw
sbb
add
jae
adcl
out
ret
mov
inc
roll
in
xchg
dec
sti
dec
mov
dec
stos
cmp
shlb
test
aas
cmp
xchg
xor
sub
out
push
adc
clc
mov
mov
push
xchg
jmp
add
out
loope
xor
aad
ja
jge
fldcw
mov
in
mov
gs
mov
and
call
loopne
inc
mov
add
add
scas
stos
int
repnz
les
inc
insb
pusha
fcmovb
xorl
xchg
push
sub
xchg
les
or
out
pop
sub
add
jo
call
insb
xchg
pop
stos
stos
jne
add
ljmp
inc
cmp
mov
xchg
push
push
push
sub
mov
jl
xchg
and
lahf
pop
xorb
leave
and
rcl
inc
push
negl
jae
adc
mov
inc
insb
jle
sahf
out
xor
xor
daa
roll
dec
decl
xor
insb
mov
fs
test
adc
movsb
stos
cli
cmp
fisttps
das
mov
xor
push
mov
xor
pop
fstps
loope
out
sub
mov
pushf
dec
or
adc
stc
out
int3
mov
sub
jb
push
xor
test
pop
xor
movsb
outsb
push
ret
and
fxch
cmp
jg
outsb
mov
test
lds
out
mov
andb
pop
and
mov
adc
mov
xor
push
push
xchg
call
fdivrl
cmpsl
ret
dec
in
shlb
sbbl
xor
lods
inc
outsl
fistps
or
jmp
jo
cli
mov
xorl
pushaw
mov
lcall
xor
xchg
jge
add
jne
sbbl
lcall
addr16
andl
es
int3
lds
mov
sub
cs
jbe
loop
jp
xchg
scas
dec
rep
mov
rorb
or
es
and
ret
inc
les
jge
jmp
mov
repz
sarl
into
pop
xor
sub
jecxz
movsb
cmp
cld
mov
aad
dec
mov
mov
sbb
nop
jne
push
mov
adc
mov
ret
imul
fwait
xchg
lret
push
sarl
int3
mov
cmpsl
cltd
push
fidivrl
mov
fdivrp
xchg
jae
movsl
jne
stos
rcrl
out
out
jecxz
cmp
int
clc
mov
xchg
aas
jp
sbb
adc
inc
mov
dec
add
mov
and
lret
andl
dec
scas
stos
push
fs
sub
aaa
jno
jl
loope
add
js
divl
cmp
lahf
inc
jge
mov
popf
or
adc
sbb
loopne
pop
inc
imul
gs
or
mov
or
mov
mov
lods
les
fwait
imul
xchg
fadd
les
sub
dec
inc
fimuls
fsts
jne
sbb
arpl
pop
shll
xchg
push
xor
hlt
sub
sub
xchg
test
adc
sahf
test
xchg
fcmovnbe
sti
mov
jecxz
lret
pop
cmpsl
rep
mov
push
and
jmp
jmp
fidivrl
daa
mov
add
movb
faddl
cmc
test
jg
out
imul
inc
jne
xchg
fstl
es
mov
pushf
cli
sub
cmp
xor
loop
out
xchg
jb
and
rolb
jne
xorl
sbb
popa
mov
ret
mov
cmp
push
test
mov
jle
outsb
or
lods
dec
push
mov
xchg
and
imul
stos
mov
xlat
loopne
push
inc
push
cmp
loope
mov
jo
mov
icebp
cmpsb
ljmp
fldl
popf
cmp
or
jg
add
xor
out
les
out
enter
sbb
iret
call
lcall
decl
pop
add
fwait
shlb
das
test
ja
mov
pop
outsl
mov
mov
push
mov
jbe
adc
movsl
xchg
push
filds
sub
cmpsb
fnstcw
add
add
test
push
loop
and
ds
int
mov
icebp
mov
xchg
int
xor
xlat
and
int3
out
mov
aas
insb
enter
outsl
cmp
loop
testl
mov
add
add
int3
rcll
inc
adc
cmpsl
stc
je
lahf
push
outsb
dec
sarl
jnp
xchg
nop
inc
clc
xor
dec
hlt
inc
push
push
rol
mov
lret
test
add
into
push
fidivrl
pop
iret
mov
in
cmp
gs
mov
aaa
and
jae
and
rorl
sbb
or
xchg
rcrl
sbb
popa
mov
test
push
pop
mov
ja
mov
inc
jns
mov
xor
loope
xchg
cmp
jg
xchg
push
dec
jg
imulb
das
push
outsl
mov
mov
inc
push
mov
xor
repz
call
sbb
aam
mov
sahf
js
push
mov
pop
insb
enterw
cmp
and
push
or
popl
jle
cld
xchg
mov
sub
dec
pop
push
pop
pusha
dec
repnz
aaa
pop
fildl
loopne
test
dec
mov
movsb
into
ljmp
data16
mov
out
and
push
pop
inc
fsubrs
test
aas
imul
fwait
and
imul
mov
imul
dec
sahf
adc
das
xor
pop
es
mov
inc
test
jmp
inc
cli
ljmp
pusha
movsb
xor
dec
mov
or
sbb
call
dec
sbb
mov
out
aam
mov
mov
fs
ret
inc
add
mov
add
dec
dec
mov
jbe
lahf
mov
fwait
or
cmp
jp
mov
and
mov
pop
push
push
adc
sub
add
jge
leave
out
test
push
sub
jne
push
dec
lds
and
xchg
mov
call
jns
lock
pop
outsl
push
xor
or
mov
or
gs
in
xchg
jns
dec
fmul
fmul
lods
std
lods
jge
mov
cltd
inc
lcall
jns
test
xchg
mov
inc
push
sbb
xchg
push
cmpsb
pop
inc
scas
jb
imul
cltd
mov
in
pop
adcb
xchg
inc
xor
ret
fadds
add
cmp
js
or
push
fmuls
jle
lock
insb
call
mov
fmuls
sub
cmp
xchg
push
mov
outsl
jle
cmp
std
mov
out
ss
sbb
mov
pushl
out
mov
sti
ret
pop
sub
and
imul
or
daa
sub
jne
stos
leave
into
in
cmp
adc
incb
push
and
and
jle
ret
out
push
fs
mov
int3
not
dec
push
sub
nop
pop
shr
test
repz
leave
lret
pop
jnp
mov
or
test
cmp
daa
or
sub
repz
into
insb
push
in
js
mov
ja
cmp
movsl
inc
xchg
pop
loopne
test
and
pop
dec
fistl
ja
scas
iret
mov
out
or
xchg
imul
adc
sbb
cmp
sbb
lods
xor
mov
push
pop
cmc
insb
mov
out
int
rcrl
mov
jnp
imulb
adc
aad
adc
jmp
dec
dec
stos
mov
nop
xchg
mov
fucomp
dec
inc
sub
xor
mov
pusha
stos
outsb
lahf
negl
call
aas
xor
rcll
fs
mov
pop
cmpsb
imul
test
inc
mov
icebp
sub
and
push
adcb
mov
and
mov
sub
addr16
loope
sub
out
js
mov
or
push
mov
inc
mov
push
clc
mov
sub
stos
mov
xchg
dec
bound
sbb
addr16
hlt
adc
xor
test
push
xchg
or
cmp
fdivrl
jge
xchg
adc
jne
cmpsb
mov
mov
push
or
lahf
adc
aam
adc
popa
lret
test
mov
ss
sbb
lcall
and
lcall
jmp
add
lret
lea
mov
repnz
dec
rorl
add
inc
xchg
loopne
mov
fucomi
popa
push
fld
sahf
pop
std
ljmp
outsl
xchg
pop
insl
hlt
xor
jecxz
jns
inc
inc
dec
cmp
popl
push
ret
es
and
repz
push
xor
dec
dec
add
shrl
lret
xchg
pop
jne
mov
sbb
fadds
cmpl
stos
movsl
sub
inc
xchg
mov
push
insl
adc
rol
add
dec
insb
jp
pop
xchg
xor
repz
xchg
push
ret
xadd
mul
test
cmpsb
mov
icebp
lods
push
mov
mov
mov
pusha
mov
sbb
shlb
mov
adcl
mov
jb
push
pop
and
call
leave
scas
daa
inc
daa
dec
adc
ljmp
adc
fisttpl
xchg
arpl
daa
adc
cmp
mov
mov
dec
mov
xor
repnz
and
and
imul
std
xor
popa
lahf
addr16
out
dec
scas
add
adc
fs
xor
shlb
push
mov
xor
mov
decl
jnp
mov
mov
in
loopne
sbb
add
mov
fcomps
and
sahf
ja
test
jae
xor
pop
std
neg
stos
pop
xchg
or
push
popa
ret
pop
gs
int
push
push
popa
stos
cs
pushf
in
fistps
scas
call
stos
mov
loope
lcall
dec
lahf
jl
inc
adc
xchg
clc
in
sub
js
outsb
jbe
dec
and
or
cmpsl
sbb
jno
cld
or
cld
xchg
and
jecxz
mov
je
outsl
jle
dec
add
xchg
and
mov
scas
add
in
xchg
icebp
icebp
push
fs
inc
mov
push
ljmp
xlat
fistpll
std
stos
lret
pusha
push
sbb
pop
add
int
cmpsl
mul
lods
lret
pop
out
notl
scas
addr16
out
xor
leave
xchg
pop
das
scas
dec
shll
jo
sub
sub
cwtl
add
ds
cmp
hlt
test
push
imul
ds
sub
jns
imul
pop
xchg
cwtl
test
hlt
and
movsb
add
cmp
xchg
negb
xchg
fs
in
push
mov
push
aam
mov
frstor
dec
popf
clc
and
enter
test
lret
mov
or
stos
stos
aaa
push
pop
out
mov
jae
and
loopne
add
repnz
lock
jecxz
lret
testl
add
mov
pop
ds
cmpsl
jle
inc
and
arpl
fstpt
jae
xchg
pop
js
test
es
cmp
xor
xchg
xor
cli
aam
lcall
je
xchg
xchg
adc
pop
xlat
and
pop
adc
dec
and
xor
je
mov
sub
test
xchg
mov
daa
and
push
out
cli
hlt
jb
push
sub
lret
or
cmp
imul
decl
popa
jg
jmp
xchg
enter
clc
mov
mov
cli
dec
cmp
les
push
fcmovu
pop
in
fstpt
push
xor
imul
pop
sti
in
pop
std
sub
sbb
xor
lea
mov
mov
mov
jae
cmp
icebp
add
pusha
les
or
shl
xor
adc
aad
xor
xchg
fwait
jns
sbb
xchg
xchg
mov
in
jp
mov
mov
rcl
jg
bound
jne
or
jge
mov
dec
xlat
or
inc
popf
inc
jle
xchg
dec
add
mov
inc
mov
aad
rcrl
add
cmp
es
adc
xchg
sbbb
and
ja
lahf
jb
pop
ret
gs
arpl
imul
stos
mov
or
mov
dec
je
andl
imul
dec
cltd
pop
insb
in
add
in
imulb
dec
inc
mov
dec
or
and
or
sub
call
imul
pop
mov
dec
shlb
pop
pop
popf
sub
out
push
xchg
adc
rcrl
addr16
ret
loop
loopne
jge
push
test
or
xlat
fwait
int3
addr16
lods
pop
add
fmulp
fldl
fcmovbe
adc
add
rorl
pop
imul
and
and
dec
cmp
mov
movsl
dec
pop
idivl
pop
fsubrl
aaa
sub
mov
xor
mov
mov
test
add
sbb
or
in
es
addr16
adc
push
cmc
ficoml
add
cmpsl
lret
int
gs
add
sub
decb
add
mov
imul
sbb
mov
loopne
iret
stos
pushf
mov
test
iret
rcrl
imul
adc
mov
shll
scas
enter
fadd
adc
jge
push
fs
mov
fidivrs
mov
pop
push
xchg
mov
jp
mov
inc
ret
stos
push
add
lret
mov
mov
fdivs
sub
test
jge
pop
test
pop
jg
imul
xorl
out
fidivl
dec
sub
movsb
xchg
pusha
pop
subb
arpl
ds
push
add
paddsw
xor
jmp
pmuludq
scas
push
xor
popa
js
cmc
scas
sbb
mov
popf
xchg
jp
out
adc
ret
aad
mov
push
inc
fimull
shl
loopne
mov
insl
aas
push
pushf
mov
ficompl
sub
in
mov
stc
fmull
fnstenv
mov
insl
adc
adc
in
fadds
inc
imull
sbbb
stos
js
nop
and
xchg
int3
mov
cli
lret
in
enter
jns
add
sbb
mov
test
clc
int3
sub
pop
lea
push
sub
dec
adc
ret
xchg
or
movsl
push
insl
test
push
inc
aad
daa
dec
fdivrl
xor
cs
cmp
dec
mov
loopne
roll
lds
daa
ret
cs
daa
lahf
adc
push
bound
cmp
fsub
mov
hlt
mov
mov
xchg
ret
push
in
mov
or
repz
arpl
fs
jecxz
push
int
scas
jmp
imul
pop
fucomi
inc
in
mov
jl
xor
push
cmpl
adc
scas
mov
mov
test
cmpsb
fimull
iret
call
fnsave
push
xlat
leave
mov
inc
cli
fucomp
das
lea
fucom
test
or
cli
sarb
xchg
insl
xchg
cmp
out
sbb
jbe
jle
shrb
pop
loopne
add
scas
arpl
pop
outsl
aaa
dec
pushf
pop
sbb
pop
sub
mov
adc
jne
inc
xor
aas
jno
out
adc
call
mov
xchg
or
fldt
int3
push
dec
shlb
or
popf
mov
jne
dec
cmc
push
insb
loopne
fisttpl
xor
mov
iret
repnz
roll
xchg
mov
loope
pop
in
data16
mov
push
popa
or
add
jb
pop
pop
jg
jg
outsl
cmp
mov
xor
dec
sub
add
add
popf
pop
ret
test
mov
push
add
mov
or
sti
lret
lcall
ds
mov
fimull
dec
stos
mov
mov
sub
pop
jbe
jo
sub
cmp
int3
xchg
xor
fwait
push
mov
cmp
push
ljmp
int3
and
pop
mov
pop
fistps
aaa
inc
adc
or
jno
sahf
mov
stos
xchg
push
fdivs
lret
rolb
dec
add
fsts
and
jns
nop
mov
pop
lea
jle
cmp
test
pop
mov
loop
push
fnsave
jg
xchg
rolb
ds
cli
push
shrb
sti
and
cmpl
and
leave
shlb
cwtl
jl
adc
xchg
fwait
loop
pop
dec
pusha
lock
std
xchg
mov
add
fs
call
or
jmp
mov
fcoms
add
dec
pop
mov
int3
stos
sub
jg
jo
or
inc
enter
je
cmp
js
xor
dec
popa
loope
repnz
daa
in
call
dec
testl
cmpsl
mov
mov
sti
or
idivb
leave
adc
stc
xlat
mov
sbb
std
mov
in
jnp
iret
les
xchg
xor
sub
jo
sub
adc
mov
or
gs
ficoml
push
jl
ret
lret
data16
div
insb
test
push
adc
mov
xchg
fidivrs
pop
cmp
push
ljmp
sbb
jno
jmp
leave
or
dec
pushf
das
outsb
sbb
lock
push
ds
xlat
je
xor
lods
call
xchg
dec
notl
or
pop
out
into
orl
cmp
sub
mov
push
lret
movsb
mov
jb
fistps
jae
dec
xchg
aaa
sbb
jnp
xchg
xlat
mov
stos
mov
arpl
cmp
jp
shrb
sbb
push
jmp
jo
test
dec
pop
xchg
ret
in
push
std
mov
lods
rcr
push
pop
lods
cwtl
into
pop
jg
fiaddl
pusha
xchg
enter
dec
shlb
or
sub
inc
sub
mov
pop
lcall
popf
lods
add
push
sub
jle
sbb
xchg
cwtl
jno
pop
cmp
mov
jle
xchg
loope
add
xor
add
outsb
movsb
pop
cmp
mov
add
cmp
loopne
fwait
imul
jg
add
jp
pusha
in
imul
push
hlt
test
push
dec
addb
loop
je
lret
psrlw
dec
push
pop
adc
test
rcrb
dec
cwtl
inc
cmp
adc
jle
xor
mov
aaa
mov
fsts
adc
fwait
cmp
pop
mov
jno
leave
sbb
mov
adc
pop
push
mov
dec
subb
sti
inc
jno
push
lret
rorb
dec
gs
sub
loope
pop
adc
enter
je
sarb
jnp
pop
push
icebp
movsl
lods
jg
mov
inc
clflush
lret
sub
and
cli
iret
popa
push
inc
mov
mov
js
test
inc
push
push
bound
insb
xor
int3
xchg
add
sarl
xchg
mov
push
aam
xchg
cmpsl
mov
add
les
sbbb
mov
jns
or
in
lods
mov
add
leave
or
jl
fnstcw
inc
fisttps
hlt
loope
xchg
pop
xchg
or
pop
jmp
arpl
es
fcomp
ret
xchg
repz
jns
scas
jnp
fnstcw
xlat
pusha
pushf
pop
pop
insb
clc
xchg
fmull
mov
scas
iret
jg
push
aam
stc
fs
mov
mov
mov
or
outsb
movsl
adc
jp
cmpsl
mov
clc
pushf
aad
xchg
sbb
push
push
shrb
adc
inc
shr
jle
jbe
push
scas
in
das
testl
inc
inc
jmp
imul
mov
and
jecxz
inc
enter
les
cmpsb
mov
add
test
add
jmp
imul
cmp
push
idiv
dec
enter
and
xor
adc
ds
xor
push
adc
in
cltd
xlat
mov
mul
roll
outsb
inc
or
aad
pop
jg
xchg
sbb
or
jo
cmp
addb
adcl
faddp
xchg
xchg
jne
push
cmp
cmc
push
mov
es
mov
push
inc
or
lods
mov
push
pop
jbe
mov
or
cmpb
pop
push
xor
aas
add
test
loope
pop
lahf
fdivrl
mov
and
rol
shrb
into
mov
call
mov
aaa
xor
sbb
or
iret
fnstsw
cmp
data16
jg
or
fstps
pop
adc
or
adc
les
inc
mov
popa
dec
flds
pop
add
jmp
jp
sbb
icebp
bound
lret
ljmp
mov
inc
cli
xor
je
xchg
xchg
lret
fimuls
sbb
ficomps
test
outsl
cltd
dec
inc
call
cmp
xor
fimull
popa
add
pusha
push
cli
lds
dec
pop
jp
int
push
xchg
mov
xor
in
fcmovb
outsb
xorl
sbb
jmp
fbstp
jg
and
pop
aas
and
and
dec
xlat
jbe
jmp
cmp
xlat
and
adc
xor
mull
repnz
add
inc
pop
mov
push
daa
push
add
out
inc
jp
incl
cmp
loope
pop
jge
sti
ret
adc
call
data16
rcrb
in
mov
fldl
inc
insl
xchg
sahf
icebp
test
jecxz
mov
push
push
lcall
pop
ja
push
clc
dec
cmp
add
sbb
mov
out
shrd
pop
fsubr
inc
addr16
or
xor
int
xor
or
inc
mov
aaa
xchg
jle
pop
inc
mov
push
push
mov
xor
jb
mov
sbb
dec
mov
cltd
cmp
or
ljmp
or
cmp
stos
insl
flds
test
fidivs
nop
dec
in
orl
ret
push
mov
xorb
inc
pop
inc
imul
add
sub
arpl
repz
push
out
push
in
ret
or
daa
clc
insl
xchg
cwtl
ss
aas
xchg
sbb
ret
frstor
add
iret
iret
inc
jl
das
lret
rcll
jnp
cmp
test
adc
lock
push
adc
inc
mov
cltd
lcall
and
or
movsb
adc
ljmp
cmpsl
repz
mov
mov
daa
sub
inc
cmp
mov
fsubrl
xchg
adc
xchg
mov
movsb
sub
je
and
fisubl
pushf
add
sub
nop
mov
sbb
ds
sbb
clc
repz
aad
fwait
push
insb
data16
arpl
outsl
mov
pop
das
cltd
or
gs
inc
cmpsl
popa
pop
jmp
mov
sbb
jae
out
imul
sbb
clc
sarb
cltd
inc
mov
jae
popf
inc
mov
add
mov
cmp
add
dec
and
cmp
das
mov
adc
xor
ja
dec
idiv
push
or
push
fistps
aad
lods
stc
mov
adc
inc
cwtl
scas
cmp
cli
leave
cmp
push
xor
sbb
mov
sbb
mov
xchg
repz
sub
jno
cwtl
mov
imul
daa
jle
shll
mull
sub
cmpsl
jle
aaa
sub
pop
mov
loope
xlat
call
mov
mov
hlt
mov
cmp
push
arpl
pop
nop
cmp
loope
aad
pop
xchg
loopne
ljmp
cmc
xchg
lds
insb
shl
sbb
popf
andb
decl
sub
jmp
mov
out
sbb
rorb
scas
inc
xchg
sti
xor
push
leave
shrl
pop
aam
push
les
pop
out
stos
in
xchg
or
jo
mov
lods
ret
arpl
mov
push
sti
xchg
out
xchg
jle
out
outsb
sbb
rcl
movsl
push
cltd
xor
fldcw
scas
push
inc
sub
mov
stos
int3
fmull
mov
fmull
mov
cwtl
xor
jo
mov
inc
fisttpl
mov
jmp
xchg
sahf
adc
add
jo,pn
sbb
cmp
sub
cld
inc
cltd
xor
sbb
add
hlt
or
dec
inc
adc
imulb
out
enter
mov
cwtl
test
jns
dec
dec
xchg
push
mov
jnp
adc
fs
cmp
dec
in
cmc
or
fs
ljmp
jns
inc
leave
pop
in
movsl
sbb
push
in
or
test
shr
pop
mov
dec
xor
cmpsb
or
mov
xor
aas
mov
or
pop
lret
fsubrs
inc
push
jp
data16
jne
push
mov
cmp
daa
sbb
shll
out
clc
pop
scas
cs
sbb
push
rcrb
loop
movsb
ret
outsl
mov
jns
jbe
xchg
jmp
cmp
out
ret
mov
mov
or
xchg
xchg
dec
cmp
pop
mov
pop
test
les
xchg
add
iret
add
add
mov
jle
mov
loopne
fbstp
out
and
push
pop
out
xor
mov
push
push
prefetch
ja
xchg
sahf
lret
cmp
loopne
je
fdivrs
outsl
mov
inc
decb
mov
mov
add
push
sub
dec
mov
xchg
push
bound
inc
adc
fsqrt
sti
mov
or
aaa
jmp
cmpsl
and
lahf
js
xor
inc
mov
adc
int
cmp
xlat
cmp
add
outsl
cmp
jae
int3
lods
or
lahf
sub
fcomps
xor
dec
add
mov
int
ret
enter
adc
and
add
mov
xlat
cmp
ljmp
insb
dec
mov
imul
inc
fnstcw
jnp
fnstsw
ljmp
push
add
cs
adcb
pop
xor
decl
xorb
xor
mov
movsl
je
dec
adc
cld
add
lods
cmp
and
addr16
jecxz
xchg
cwtl
aad
cmpsb
jae
sub
pushf
mov
xor
jmp
out
lock
cmp
mov
or
pop
mov
pop
idivl
mov
jg
mov
or
pushf
imul
jae
rcll
mov
test
push
cmpsb
pop
ds
mov
daa
sbb
adc
jg
xchg
jg
popa
stos
and
mov
xchg
out
adc
push
pop
dec
mov
mov
insb
cld
ret
js
mov
dec
fists
mov
mov
jne
loop
dec
mov
push
lcall
out
jle
lret
jle
je
dec
sbbl
push
adc
mov
cmp
shl
cmpsb
es
mov
dec
inc
jmp
and
loope
pop
pushf
in
clc
mov
in
xlat
loope
or
leave
sbb
loopne
pop
shlb
fucomp
movsl
fs
inc
add
rcrl
js
sti
popf
jp
inc
add
pusha
inc
xchg
add
push
lcall
lds
sub
sub
mov
out
dec
dec
dec
lods
jle
jno
cmc
popf
icebp
out
xor
insb
xchg
addl
mov
or
sbb
test
adc
jmp
lea
xchg
movb
jo
inc
int
pop
jp
adc
jg
hlt
xchg
fucomp
xor
and
lahf
pop
js
popl
sub
push
mov
gs
sub
movsb
mov
mov
imul
mov
or
fstpl
test
xchg
cmp
repnz
imul
pop
fisubrl
sbb
repnz
aas
pop
testb
jb
rclb
mov
cmp
sbb
cld
pusha
out
sub
das
mov
push
sysret
or
lret
imul
ss
add
jge
xchg
xor
xchg
jge
mov
add
mov
mov
adc
push
lods
fstps
cmp
int3
and
dec
fsubrl
mov
or
js
shlb
std
jno
imul
pop
jbe
mov
and
inc
lret
sub
es
dec
cmp
pusha
pop
loopne
adc
movsb
imul
int3
pop
inc
sbb
div
pop
cmp
add
dec
aaa
mov
pop
in
das
mov
mov
add
sub
inc
push
and
popa
inc
pop
push
mov
scas
out
js
shll
xor
les
iret
push
mov
stos
mov
out
mov
ficomps
adc
and
cwtl
and
imul
push
dec
jecxz
add
cmc
rcr
xor
notb
aad
test
enter
ds
jmp
xor
jbe
xor
imul
or
gs
lret
mov
xlat
mov
pop
sbb
call
in
push
mov
call
mov
adc
adc
cli
adc
lds
out
push
in
adc
arpl
xlat
jmp
mov
jl
xor
out
jbe
mov
pop
xchg
shl
into
pop
outsb
xchg
js
mul
xor
nop
mov
testb
hlt
insb
subl
add
decl
sbb
insb
push
sub
jge
push
pop
sbb
sbb
out
inc
loope
shll
mov
aas
cltd
mov
lahf
addr16
lret
xchg
outsl
cmc
push
mov
cld
popl
pop
bound
mov
xor
out
imul
adc
cmpsl
xchg
jo
arpl
sbb
mov
xlat
shll
or
nop
push
push
pusha
sbb
sbb
out
fisttps
inc
mov
push
dec
add
push
cmp
add
in
and
fucom
xor
sbb
test
shrb
fistpl
sbb
inc
cmc
sbb
pusha
and
dec
sahf
jmp
xchg
ljmp
cmp
cmpl
mov
sub
and
mov
dec
lret
xchg
loope
push
ljmp
and
dec
out
std
dec
adc
mov
xchg
push
pop
xchg
and
xor
in
std
inc
sub
fldcw
lcall
add
out
xor
push
inc
outsl
dec
mov
dec
cmpsl
add
lds
adcl
pop
cli
push
push
incl
cmp
rol
mov
bound
test
into
shrb
cmpsb
jbe
jl
dec
sub
je
push
into
mov
pop
mov
mov
mov
xor
push
add
loope
cmp
shll
fiaddl
rolb
cmp
ficomps
lahf
ret
jne
imul
fsubs
mov
sbb
aam
mov
mov
sbb
jae
dec
mov
sub
es
sub
push
sbb
pop
adc
push
sub
sub
jle
xchg
xchg
mov
xchg
mov
cwtl
xor
push
int
mov
xorl
jl
mov
mov
test
cmc
lea
jne
imul
stos
sbb
ret
lock
add
lods
fildl
adc
in
andl
fisubl
mov
dec
addb
xchg
jmp
test
fwait
sub
xchg
mov
ljmp
xchg
insl
rcll
das
mov
aam
dec
movsb
pop
mov
adc
and
inc
xor
test
hlt
pop
and
movsl
call
cmp
mov
in
push
sbb
cwtl
and
xchg
inc
ret
repz
les
ljmp
jecxz
in
in
pop
sub
xor
rol
sbb
in
idivl
dec
push
and
pop
jge
popf
sub
lods
and
cld
imul
xchg
add
dec
pop
orb
dec
or
cli
mov
js
je
sbb
or
fnstsw
nop
divb
fisttpl
add
mov
jge
mov
jl
sbb
icebp
ret
sbb
adc
aas
call
ja
sub
lcall
test
nop
xchg
lods
xor
push
lods
fstpl
ficoml
push
cmpl
or
adcl
inc
mov
xor
push
push
jle
jbe
test
bswap
pop
lret
lret
lret
gs
addr16
test
jle
inc
xchg
xor
jmp
push
sub
mov
mov
fwait
imul
popa
lds
stos
sets
mov
cltd
dec
and
fsubs
inc
mov
mov
add
push
loope
cmpsl
and
jmp
xchg
xchg
xchg
push
lret
daa
lcall
bsf
inc
mov
cmp
jge
frstor
push
mov
push
mov
sti
popa
mov
je
enter
nop
filds
dec
ret
lret
adc
ljmp
test
push
cld
cli
sahf
insb
inc
add
mov
xor
loope
mov
lods
xor
scas
mov
jae
dec
icebp
pop
scas
mov
mov
add
inc
sbbl
lods
test
popa
and
idivl
leave
pop
xchg
sub
pusha
and
icebp
mov
mov
mov
push
dec
and
or
pushf
pop
lods
sbb
sarl
jg
popa
cltd
fwait
packuswb
cmc
inc
dec
pop
lea
sar
inc
test
into
push
shrb
addb
pop
push
fnstenv
orl
sar
sbb
ds
and
mov
adcl
mov
sbb
ret
add
fistl
dec
mov
fs
mov
jno
sbb
mov
test
xchg
out
xchg
dec
std
ficoml
shll
nop
in
rclb
out
xor
pusha
aaa
jg
push
cmpsl
sbb
jo
popl
add
mov
aas
cmp
jp
repz
xchg
fnstenv
cmp
xor
mov
adc
jae
xchg
and
lods
les
cmp
test
jmp
and
insl
inc
jge
cmp
addr16
or
push
pop
mov
jae
push
jmp
ja
sbb
add
cmp
push
sbb
sti
rorl
dec
and
sahf
pop
dec
xor
mov
push
leave
lock
in
jg
call
jns
mov
push
mov
out
and
out
or
insl
lret
jno
xchg
sbb
lahf
inc
add
sbb
adc
adc
jo
xorb
subb
sbb
pop
mov
subb
and
and
jae
ja
lds
pushf
cld
mov
dec
cmpsl
pop
orb
fwait
lock
xlat
sbb
pop
mov
xor
sbb
daa
dec
int3
pop
sub
stos
les
ljmp
mov
mov
push
adc
dec
mov
add
xor
and
fiaddl
lahf
mov
ret
pop
in
cmp
cmpsb
mov
xchg
pop
test
mov
or
lods
adc
shll
loopne
icebp
xor
xor
into
cmp
xor
mov
or
inc
mov
jne
adc
ss
jecxz
dec
addr16
xchg
orl
xor
repnz
push
cmp
es
dec
dec
and
outsl
mov
rcl
pusha
aas
push
int
pop
mov
dec
push
sub
mov
shl
sub
adcl
mov
pop
sbb
mov
or
bound
add
out
scas
cmp
outsb
sub
adc
mov
in
stc
repnz
mov
xor
movsl
push
pusha
jnp
jmp
xor
aas
xchg
ret
jnp
xchg
xchg
sbb
out
insl
in
outsb
xchg
sti
ds
mov
cltd
pop
loope
sbb
cmp
aaa
push
sbb
es
or
xchg
arpl
mov
ljmp
push
xor
test
mov
stos
notl
or
insb
arpl
lahf
xchg
cltd
shrb
jbe
mov
out
and
or
dec
fcoml
shlb
arpl
in
sbb
cli
mov
mov
mov
mov
cmp
cli
sahf
sub
leave
push
mov
ja
aaa
push
lret
inc
pusha
ret
jae
mov
xchg
ret
pop
mov
pop
mov
fucomp
or
cld
mov
sbb
mov
dec
enter
lds
adc
fdivp
push
cld
add
jl
xor
mov
jmp
cltd
xchg
pop
mov
cld
test
mov
scas
mov
and
fucomip
out
daa
pop
dec
arpl
repnz
out
shll
sub
into
mov
or
int3
scas
xchg
scas
push
mov
cmp
add
insl
mov
lcall
adc
dec
inc
test
sahf
dec
pop
ficomps
adc
gs
ja
mov
ret
ret
ljmp
and
xor
addr16
add
and
sahf
pop
pusha
enter
inc
pushf
mov
push
daa
daa
or
pushl
jge
addl
push
repnz
int3
lods
xchg
push
pop
pop
lods
das
xchg
insb
xchg
aas
mov
pop
test
dec
mov
addr16
xor
sub
inc
inc
dec
xchg
aas
xchg
ds
faddl
mov
push
fidivs
dec
ret
and
xchg
addr16
les
lgs
loop
repnz
jbe
outsl
scas
fs
and
das
ljmp
and
mov
lret
cmp
pop
jbe
out
aas
cmp
sub
and
lret
xlat
out
test
loope
mov
test
mov
loopne
cs
xor
lcall
shrl
data16
mov
inc
or
mov
fldl
xchg
mov
sub
stos
int3
call
aaa
ret
mov
mov
popf
lods
sub
movsl
dec
out
and
lea
fstl
lea
fsubr
lods
cmpsl
test
adcb
into
cmp
mov
mov
mov
cwtl
inc
mov
aaa
adc
in
fcmovb
outsl
mov
pusha
or
pop
sahf
xor
push
push
pop
adc
out
dec
rolb
inc
push
push
out
jnp
fstps
inc
pop
push
aas
mov
hlt
xor
fstl
test
loopne
pop
test
lds
push
addr16
nop
rorl
jg
sbb
call
rcll
add
scas
mov
add
notl
cwtl
mov
fistpl
sub
xchg
in
dec
pop
jl
xchg
jne
xchg
jno
or
xchg
jne
fst
fldl
mull
xchg
addr16
xor
lods
scas
scas
add
test
xor
mov
inc
ret
imul
mov
push
sub
sub
sarl
pop
cwtl
xchg
mov
insl
and
mov
push
and
lahf
shlb
std
pushf
adc
push
add
xor
pop
xchg
sub
xchg
lods
push
jmp
cmc
js
sub
mov
aam
daa
xchg
ss
and
mov
xchg
stos
xchg
add
jg
loope
sahf
sbb
push
or
imul
dec
aas
ss
adc
sarb
jbe
jno
clc
xor
push
jle
cmp
lods
or
pop
mov
test
lcall
jbe
xchg
mov
fldt
cmpsb
push
daa
mov
mov
cli
xchg
rclb
ret
mov
dec
and
mov
iret
popf
sbb
bound
xor
add
jbe
fs
pushf
imul
push
call
pop
xchg
rcrl
xor
clc
test
pop
jecxz
stos
mov
rcll
clc
mov
ret
dec
push
push
inc
pop
iret
mov
add
jmp
mov
testl
stos
xchg
aas
pop
adc
pusha
or
adc
cli
mov
cmp
pop
outsl
add
cs
fnsave
in
jg
scas
pop
lahf
jmp
and
movsb
rcrl
arpl
dec
xchg
idiv
daa
pop
lods
int3
mov
xor
mov
jmp
into
call
push
jae
fwait
mov
inc
push
xchg
lret
andl
pop
sub
jae
ljmp
faddp
or
addb
imul
mov
mov
fwait
sub
xor
add
sbb
aam
push
sbb
sub
adc
ss
ja
js
jp
xchg
adc
jb
pop
mov
inc
push
jp
test
fimuls
adc
cmp
xlat
ret
mov
push
push
shll
mov
push
push
mov
pop
out
mov
inc
or
add
inc
stos
subl
add
mov
incb
push
stos
mov
push
repz
xchg
or
imulb
xchg
mov
ret
aam
sub
mov
hlt
adc
xchg
dec
cmp
fisttps
cwtl
xor
pop
mov
daa
leave
insl
mov
pop
das
push
jbe
push
sarb
test
ja
inc
inc
and
mov
sbb
push
mov
out
cmpb
sbb
lds
aad
jl
xor
cmpsl
xchg
clc
enter
fists
incb
aas
cltd
aad
sub
nop
cmp
clc
ja
mov
mov
xchg
idivb
stos
ljmp
shlb
jno
mov
xchg
mov
sbb
jmp
dec
and
andb
adc
nop
pushf
sti
ret
xchg
cwtl
inc
push
sbb
cmp
add
dec
xor
push
push
pop
dec
dec
outsl
mov
mov
sub
fldcw
popf
mov
repz
mov
fdivl
mov
and
pop
inc
mov
xchg
sub
cmpsb
arpl
rorb
dec
cs
dec
jnp
mov
fisubs
sub
mov
mov
and
mov
ret
stos
popf
sub
and
jns
sbb
pop
xor
lods
ret
in
cs
dec
mov
rcrb
call
xchg
nop
push
cs
gs
add
fdivl
push
mov
jle
mov
popa
xchg
insl
fsubs
sub
cmc
mov
addb
mov
pop
insl
negb
xor
add
push
movsb
test
stc
repnz
pop
fldcw
cld
psraw
adc
mov
cli
mov
enter
push
or
mov
sbb
xchg
loop
cmp
add
scas
xor
or
test
cmp
mov
push
sbb
jmp
je
sbbl
es
std
and
rorb
add
mov
or
and
cmp
xchg
stos
adc
test
jge
mov
fnstenv
xchg
scas
es
sbb
mov
mov
xchg
test
jo,pt
jae
out
push
cmp
test
jne
dec
leave
ret
cmc
ret
repnz
and
xchg
mov
xlat
insl
inc
add
fs
dec
scas
cmc
dec
cmpsb
popf
js
and
and
mov
xchg
je
mov
cmpsb
shll
shlb
or
mov
sub
mov
push
cmp
out
cmp
add
push
loope
inc
add
std
add
cmpsb
mov
mov
adc
cwtl
movsl
cld
and
lock
ret
cmpsl
outsb
cmp
stc
xor
dec
dec
mov
pop
or
repz
mov
insl
dec
jecxz
sub
incl
lret
imul
mov
js
sbb
mov
jge
dec
sbb
mov
pop
mov
cmpsl
cld
out
sub
arpl
and
add
xchg
pusha
aas
hlt
mov
sahf
xor
vminps
cwtl
pushf
add
imul
je
into
ljmp
xor
les
mov
xor
cmpsb
fisttps
aad
fadds
imul
and
test
mov
mov
in
xchg
adcl
xor
push
mov
les
sub
xor
aas
sub
std
frstor
movl
mov
cmp
pop
inc
cmpsb
adc
aaa
xor
lds
in
inc
mov
pop
loopne
shll
lret
loope
pop
es
in
sub
mov
and
fsub
mulb
aam
aad
gs
mov
inc
add
add
push
adc
cld
mov
negb
push
aam
dec
insb
out
add
xchg
sbb
and
sbb
repz
rolb
add
lcall
ja
mov
int3
push
inc
pop
dec
dec
jnp
arpl
xchg
mov
xchg
in
inc
loopne
dec
pusha
mov
andl
dec
cwtl
dec
or
cld
ret
xor
push
cmp
scas
in
pop
mov
loopne
mov
cld
sub
push
movsb
mov
mov
getsec
pop
test
mov
dec
out
xchg
mov
not
or
loop
ljmp
mov
jae
sbb
jp
call
test
mov
pop
cmp
sub
add
incb
arpl
roll
test
dec
fsubrs
push
push
pop
pop
push
dec
add
stos
or
mov
ja
repz
call
movsl
inc
push
cmp
jecxz
xor
lahf
adc
jge
lock
icebp
xchg
data16
jno
lds
push
js
adc
aad
in
cwtl
sbb
push
repz
mov
and
xor
pusha
inc
sbb
jns
pushl
test
or
jnp
or
aam
sub
jnp
mov
rcr
and
push
hlt
mov
mov
push
mov
mov
inc
insw
cmp
push
in
adc
mov
lock
aaa
xchg
sbb
ret
mov
insl
out
les
fldlg2
push
sbb
cmp
iret
xchg
popf
cmc
das
sub
clc
lcall
dec
and
cmc
dec
mov
jp
das
adc
mov
aam
cmp
outsb
rcll
arpl
mov
aaa
sbb
mov
fnstsw
jne
mov
adc
insl
out
lea
loope
dec
cld
xchg
mull
dec
fisttpll
sar
mov
jg,pt
push
xchg
int
push
sahf
out
call
and
loopne
mov
shlb
adc
ffreep
xchg
repnz
sbb
fsubr
movsl
mov
rol
sbb
int
das
mov
inc
bound
sub
int
push
mov
add
mov
mov
or
mov
adc
rclb
test
ret
test
push
xchg
mov
mov
add
cli
xor
add
int3
notb
mov
and
jecxz
and
sub
pushf
mov
add
jl
mov
addr16
orl
add
les
inc
dec
pop
or
in
xchg
hlt
mov
fdivr
clc
mov
clc
mov
xchg
mov
mov
dec
repz
andl
adc
cmp
movsl
stos
das
mov
test
and
stc
push
enter
insl
dec
fsubrl
cmp
add
sub
pop
out
sahf
enter
dec
push
mov
jg
xor
push
mov
dec
mov
and
xor
fidivs
mov
js
das
scas
jns
inc
gs
out
push
xor
aad
add
in
lds
push
aad
in
gs
in
fs
call
jo
out
cmp
gs
notb
outsb
les
in
cltd
xchg
push
loopw
out
mov
jns
fldcw
adc
jbe
cmp
int
sarb
push
dec
sbb
jno
ret
sbbb
bound
iret
push
dec
xor
fcmovnu
adc
xor
jecxz
ds
inc
lods
fmull
ret
and
pop
push
add
outsb
test
mov
shll
imul
mov
pushf
pop
cmp
xchg
nop
jmp
aad
push
ja
xor
push
pop
fucomi
lods
xor
and
adc
pop
cmc
int3
dec
push
dec
cmpsb
leave
rorl
loope
addr16
loopne
adcl
rcrl
dec
mov
push
les
or
mov
out
imul
pop
push
xchg
std
scas
mull
push
fcmovnu
add
inc
dec
xor
je
mov
mov
cltd
jp
adc
inc
cltd
jo
rclb
jbe
in
sahf
mov
mov
mov
xor
mov
xor
fisubs
xchg
mov
rorl
xchg
cli
mov
xchg
mov
push
dec
mov
mov
and
rclb
out
sbbb
aam
xchg
push
jnp
scas
xchg
dec
push
xor
mov
shlb
jl
mov
enter
sbb
mov
adc
mov
in
mov
je
push
lret
mov
sahf
call
fldenv
in
into
rcll
movsb
fimuls
dec
test
xchg
push
stos
or
or
xor
lret
push
or
sub
pop
test
inc
jp
jmp
in
jns
fidivs
push
js
std
insl
xchg
bound
ret
mov
bound
dec
dec
sbb
cmp
arpl
push
pop
jecxz
lock
xchg
out
xor
sub
in
sub
mov
push
out
test
in
stc
aaa
and
dec
out
xor
sub
addb
incl
mov
outsl
mov
clc
lods
cmp
sub
jmp
dec
lret
cmp
mov
adc
and
ret
mov
cmpsb
inc
insl
sub
push
repnz
cmp
test
inc
imul
adc
pop
inc
and
pop
mov
xlat
xor
imul
insb
pop
repz
push
dec
lcall
dec
out
lcall
loopne
push
arpl
push
xor
sub
andb
int3
mov
sbb
mov
pop
aaa
sti
out
scas
loop
jae
int
fdivrs
pop
mov
xchg
cli
lds
adc
dec
sbb
and
ljmp
ja
add
out
je
jbe
popa
inc
repz
xchg
cmpsl
pop
ss
xchg
cmpsb
cwtl
aam
xchg
es
mov
out
test
ja
iret
push
rcl
loopne
jbe
mov
fidivrl
ljmp
cmpsl
or
push
hlt
in
sbb
mov
scas
and
pop
into
in
loopne
and
adc
inc
push
mov
scas
sbb
pop
xchg
aas
and
or
cmpsl
rol
outsb
xchg
ret
add
sub
ret
xor
xor
stc
mov
inc
sahf
out
lcall
test
or
hlt
outsb
mov
imul
test
insb
dec
mov
xor
ret
jmp
or
dec
outsb
add
sahf
nop
mov
ljmp
mov
mov
rcr
push
push
das
adc
jne
sub
or
or
das
sbb
mov
das
arpl
jecxz
leave
mov
cmc
call
pop
cmpl
cmp
pop
dec
sbb
fisubs
xchg
adc
in
pushf
or
shlb
and
and
jle
inc
adc
test
and
int
pop
sub
daa
fwait
test
incl
mov
out
dec
bound
cmp
cmp
sbb
and
stos
jmp
push
je
jmp
jns
mov
or
cmpb
rcll
aaa
loope
lret
or
pop
add
jecxz
xchg
xchg
xchg
adc
push
xor
xor
loopne
into
xchg
push
inc
sbb
jno
mov
xchg
adc
jnp
pusha
imul
pop
sahf
push
mov
push
mov
push
notl
gs
les
subl
push
jecxz
mov
mov
dec
jnp
scas
xchg
aad
adc
inc
fucomp
mov
roll
mov
push
sbb
jae
sub
ret
lea
or
or
call
lods
pop
nop
fisubl
ds
lea
pop
cmpsl
daa
aaa
lds
pop
lods
iret
or
jge
add
int
lahf
das
jnp
xor
insb
addl
push
push
in
fisubl
pop
lret
jle
int3
push
negb
or
enter
sbb
fstps
inc
dec
lock
mov
outsl
mov
pop
adc
mov
mov
in
push
lods
mov
je
fistpl
xchg
push
xor
mov
adc
cltd
ret
add
cmp
add
cmp
imul
in
mov
adc
aaa
lods
mov
pop
imul
insb
mov
test
inc
cmp
subl
add
xchg
stos
icebp
jl
adc
stos
out
mov
xor
adc
or
mov
xor
mov
jle
popa
cmp
enter
icebp
pop
jecxz
shr
inc
dec
ljmp
and
ret
push
xor
roll
lods
sbb
jb
or
mov
into
inc
lea
cmp
flds
push
dec
push
repz
call
xchg
out
xor
adc
shlb
inc
xchg
sub
pop
leave
xchg
test
sub
insl
call
sbb
inc
fwait
dec
adc
dec
aas
sbb
or
jle
std
ds
jg
push
addr16
pop
mov
xchg
loopne
mov
xorl
int3
cmpsl
push
mov
jne
pop
and
jb
aad
hlt
rcll
mov
inc
ds
mov
pop
test
lcall
pop
cmpsb
sub
dec
pop
pop
aaa
mov
xchg
inc
mov
insl
sub
test
or
jae
cmp
movsb
jno
and
mov
js
test
outsb
pop
out
sbb
push
inc
and
popa
cmovp
mov
push
decb
dec
les
cli
xor
cmp
pop
imul
ja
mov
xor
mov
sarl
xchg
sub
fisttpll
pop
push
outsb
or
push
sbb
pop
or
pop
bound
and
int
push
fstpl
cmpsl
aas
dec
aas
adc
push
mov
test
mov
cmpsb
add
adc
sbb
call
gs
sbb
cmp
and
lahf
xchg
test
mov
sub
mov
mov
lret
pop
jle
or
popf
movsb
adcl
add
cld
sti
or
dec
sti
and
mov
pusha
outsb
cs
pop
arpl
jecxz
add
movsb
addr16
clc
mov
mov
inc
leave
enter
dec
in
sub
xor
jae
lods
push
cmp
cmp
jecxz
repnz
rcrb
mov
gs
test
xor
sub
mov
sub
mov
pop
dec
sub
mov
sbb
mov
sbb
push
cmp
pusha
lock
or
xchg
popf
cmpsl
hlt
outsl
cmp
push
push
movsl
inc
mov
out
pop
mov
inc
mov
mov
and
push
mov
nop
es
add
or
sbb
fbld
xchg
dec
clc
stos
push
out
xchg
sub
jle
jmp
mov
loope
mov
sbb
aam
mov
push
and
jno
jp
js
fwait
imul
push
out
in
int3
popa
sub
mov
sub
aas
or
mov
in
sub
sub
jnp
add
inc
sbb
jle
ja
xchg
pop
cwtl
push
push
pop
cltd
or
cmpsl
outsl
mov
mov
stc
test
cmp
add
sbb
jmp
pop
mov
or
and
mov
stos
lret
jp
subb
mov
sub
or
aaa
fcomps
jno
xor
lahf
cmp
jmp
xchg
test
mov
pop
mov
and
sub
inc
test
jno
loope
cmp
iret
incl
hlt
push
mov
add
mov
in
dec
lods
movsl
mov
adcb
popa
jmp
repnz
add
bound
pop
test
mov
pop
popf
in
lcall
pop
dec
es
pop
subb
push
cmpsl
movsl
rcll
pop
dec
or
ljmp
xchg
call
scas
jbe
fisttpll
pop
sub
data16
jnp
cmpsl
lahf
test
jo
ret
stos
aad
ds
jecxz
mov
mov
jge
out
sbb
loope
rcll
loop
lahf
jnp
and
out
shrl
inc
cmp
fdiv
repz
sti
outsb
push
out
gs
dec
jmp
fcompl
jbe
mov
fisttpll
call
pop
insl
rorb
fdivr
sbbl
sbb
ja
repnz
cltd
cmp
dec
jp
fldl
das
mov
xchg
lret
je
mov
std
fs
add
leave
pushf
and
mov
loop
and
fwait
ja
in
loop
fistl
sbb
dec
std
adc
adc
aas
dec
cmp
nop
push
cmp
movsb
sub
inc
sahf
jecxz
pop
jae
add
daa
jge
xchg
pop
mov
push
and
out
push
sub
cmp
int
or
aam
shlb
jp
das
mov
pop
push
and
mov
jno
push
fnstsw
bound
ret
jo
sbb
adc
or
add
push
push
cwtl
test
cmp
jle
xchg
fisubrl
mov
insb
and
cmp
sbb
dec
push
insb
enter
mov
pop
pusha
cmp
xor
ret
aam
adc
xor
xor
shlb
and
mov
outsb
mov
pop
xchg
push
sub
xchg
dec
adc
sub
ficoms
cmpsb
ror
or
mov
dec
or
pop
and
maskmovq
imull
inc
sub
inc
daa
sbb
push
pop
add
je
push
jbe
jbe
imul
mov
xchg
fstpl
fcomip
or
shll
fidivs
mov
lcall
pop
dec
xor
mov
rcrl
pop
fsubs
testb
mov
or
jg
xor
cmpsb
leave
pop
push
popa
mov
lcall
sbb
std
inc
xchg
cmc
test
repz
aaa
jne
adc
mov
jnp
and
mov
icebp
add
push
jle
inc
lods
inc
je
dec
call
cmp
mov
fnsave
mov
xor
push
negb
loope
xchg
dec
js
mov
mov
into
mov
inc
clc
add
mov
mov
sar
out
push
ret
lret
jo
jbe
add
out
pop
jb
ljmp
je
fimuls
xlat
cwtl
jne
xlat
dec
adc
subl
push
and
or
aaa
lock
xchg
call
or
insl
jl
mov
mov
mov
jle
inc
stos
sub
cmp
xor
stos
mov
mov
jne
mov
pop
pop
add
subb
stc
jno
sub
or
testl
rorl
mov
ss
stos
cli
xor
xor
nop
push
inc
inc
sti
pop
or
pop
add
popf
les
adc
pop
push
xor
aam
and
lock
cmp
mov
cltd
lcall
jns
pop
jl
pop
push
push
pop
cli
rcll
pop
sahf
push
pop
daa
fdivrs
aam
daa
shrb
mov
pop
sub
stc
jp
lods
cmpsl
pop
sbbl
xchg
mov
push
mov
push
inc
xor
out
adc
shl
xchg
xchg
and
nop
push
decl
pushf
xlat
pop
arpl
fistps
jnp
fstl
jnp
mov
mov
mov
iret
xchg
test
lock
mov
jge
add
lcall
inc
repnz
push
xchg
mov
into
adc
les
add
inc
ja
or
loopne
mov
ret
pushl
mov
xor
inc
jecxz
or
leave
lock
sbb
xchg
inc
addr16
jecxz
inc
push
fstps
jnp
mov
xchg
sbb
ljmp
and
cltd
jb
fdiv
add
mov
cmp
inc
lahf
icebp
fisttpll
xorb
sub
fs
xchg
cs
mov
push
push
pop
inc
das
out
adc
neg
in
fdivs
inc
sbbb
lds
lcall
lods
roll
xchg
mov
or
dec
in
pusha
jae
push
jae
jg
inc
in
popa
movsb
aas
das
lret
mov
movsl
lahf
std
jmp
push
xor
or
ret
or
mov
jge
cwtl
ret
ss
sbb
push
jb
mov
mov
xlat
push
gs
int
xchg
addr16
push
mov
lret
jmp
add
jp
xchg
sbb
lods
sub
pop
dec
shl
jecxz
repnz
dec
orb
jnp
in
addl
dec
sbb
out
movsb
out
lods
clc
cmc
sahf
popa
push
add
sbb
and
call
xor
pop
push
cs
sub
and
dec
xor
lea
test
sbb
and
out
or
xor
xchg
add
orb
xlat
cmp
mov
pop
lock
shrl
inc
nop
aam
mov
fistpl
push
mov
enter
and
jle
push
cmpsb
test
jbe
shlb
cltd
lods
outsb
cmp
into
mov
xor
aam
jb
adc
jno
leave
scas
mull
out
addr16
xchg
inc
add
push
sub
stc
lret
dec
stos
dec
push
jnp
dec
xor
jle
and
stos
jmp
inc
and
mov
lret
push
cmc
pusha
xchg
or
fs
stc
or
sbb
aam
fcmove
mov
enter
lock
lods
cmp
cld
gs
sbb
in
fwait
sbb
mov
ljmp
dec
imul
fwait
push
orb
sub
and
and
cmp
fstpt
in
adc
cwtl
in
out
and
inc
cwtl
push
test
mov
fildll
clc
imul
or
filds
rorl
pop
test
sahf
cltd
jae
and
sbb
adc
mov
test
pop
jnp
and
sub
out
adc
mov
sbb
loopne
es
mov
xchg
adc
sub
in
dec
mov
adc
hlt
inc
xchg
xchg
popf
push
loope
add
mov
dec
and
das
mov
or
sarb
iret
jecxz
dec
out
sbb
mov
lcall
movsl
ja
mov
int
add
dec
cs
cwtl
push
shlb
dec
xor
iret
into
test
shll
add
in
add
rol
imul
jge
xchg
outsl
add
test
loopne
bound
push
mov
and
fldl
inc
fsubp
add
mov
sti
gs
repz
or
dec
xchg
popa
out
dec
icebp
addb
inc
or
sbb
xabort
stc
adc
mov
imul
testl
jmp
data16
enter
xor
pop
iret
outsl
or
sti
and
adc
pop
fidivl
enter
lcall
or
or
xchg
cltd
sub
cli
outsl
nop
lahf
popa
roll
jecxz
mov
add
dec
es
xor
lahf
ljmp
lock
cmp
test
rorb
xchg
cwtl
stos
xchg
jo
or
inc
and
dec
jbe
pop
dec
and
int
and
stc
loopne
insl
addr16
or
xchg
pop
fsubrs
fs
cwtl
imul
ret
sbb
idiv
add
int
sbb
lcall
mov
or
mov
pop
out
mov
lods
or
mov
into
iret
ficoml
dec
insb
or
lcall
pop
jle
push
in
mov
fldenv
fcmovbe
inc
adc
sub
add
pop
sub
es
leave
jb
mov
dec
cli
mov
call
cmp
jmp
scas
jge
add
jmp
xchg
push
xor
ljmp
jecxz
into
pop
mov
out
pop
ljmp
inc
pop
adc
push
push
adc
and
jle
pop
mov
jge
out
loop
mov
and
push
fcmovu
and
and
loope
dec
rcr
jbe
ret
test
jp
cli
xor
in
inc
add
mov
test
mov
pop
mov
fcoml
arpl
mov
mov
subl
jmp
jl
dec
loop
push
fwait
xchg
xchg
inc
ret
sbb
shrl
sarl
cmc
js
pop
dec
push
or
sub
mov
shll
or
mov
movsl
call
stos
mov
ret
cmp
test
jno
cmp
adc
insb
sbb
out
jle
stos
fcmovnb
sarb
nop
into
mov
arpl
push
fmull
jecxz,pt
pop
lretw
loop
test
or
jecxz
push
andb
xor
jge
addr16
out
movsb
mov
inc
cmp
dec
jne
imul
pop
leave
xor
outsl
aam
xchg
xchg
pusha
test
push
into
inc
nop
push
jl
inc
push
das
pop
gs
add
xor
lds
subl
adc
jl
and
pusha
mov
out
jno,pn
subb
scas
push
pop
xchg
clc
mov
stos
mov
jg
lret
adc
dec
push
aam
jge
daa
mulb
out
out
aaa
add
dec
movsl
repz
sub
ds
aad
aad
add
add
sbb
dec
loop
fldl
adc
or
dec
xchg
enter
sbb
in
sub
push
movsl
pop
outsl
pusha
into
and
mov
cmp
fmulp
rorl
leave
clc
sub
and
stos
cmp
clc
mov
in
aam
push
cmpsl
int
ss
fistl
lods
sti
jmp
and
pop
test
sub
sbb
in
xor
xor
mov
aam
pmulhw
out
add
iret
xor
sti
into
adc
pop
cmp
lods
sbb
gs
addr16
or
lret
pop
and
out
pusha
or
mov
push
mov
inc
mov
sub
dec
in
addb
mov
rorb
clc
pop
mov
and
das
adc
sahf
inc
daa
fs
mov
cmc
xchg
iret
fwait
nop
jae
jp
add
sub
popa
roll
out
push
insl
sti
push
repz
sti
addb
sub
stos
xchg
dec
inc
dec
shll
rclb
aad
push
or
mov
std
popl
add
cmp
mov
pop
hlt
xor
inc
call
pop
popf
mov
sbb
pusha
aam
enter
push
inc
push
lods
int
push
cmp
addw
sub
insb
test
lock
shll
dec
mov
mov
insb
dec
ds
ja
sub
shrl
clc
loopne
loop
pop
shll
cltd
mov
add
mov
sbb
push
mov
mov
inc
mov
lods
push
imulb
mov
cmp
xor
inc
jp
pop
stos
or
dec
insb
and
int3
xchg
adc
pusha
test
in
aas
imul
jge
adc
imul
cmc
ficompl
sbb
add
xchg
lock
nop
add
mov
int
sub
mov
cmpsb
insl
pop
imul
gs
dec
adcl
mov
fdivr
orl
add
aas
ds
icebp
stc
and
cli
xor
cmp
mov
hlt
mov
jnp
add
xchg
nop
xchg
push
mov
dec
in
mov
dec
xor
dec
inc
negb
mov
loope
push
cld
pushf
sub
es
jo
xor
cld
xor
fs
sub
cmp
sub
sbb
add
dec
addr16
sub
sarl
mov
aaa
xchg
leave
mov
and
adc
sbb
lcall
mov
sti
aaa
xchg
add
jbe
arpl
fs
out
rcr
cltd
or
stc
xchg
jne
dec
adc
xchg
dec
xor
lcall
lock
stos
ljmp
gs
mov
add
aam
add
xor
add
add
inc
jge
je
pop
movsl
cltd
enter
add
add
clc
cmpsl
sub
mov
pxor
jle
out
aas
jecxz
sbb
outsl
cmp
les
dec
pop
orb
lock
add
fs
push
andb
lcall
in
mov
js
cmp
js
pop
mov
roll
jo
decl
sbb
add
push
dec
iret
imul
aas
mov
adc
cmpsb
xchg
push
int
adc
pop
call
in
mov
mov
jne
mov
sub
icebp
mov
in
movsl
popa
bound
dec
daa
or
ss
test
mov
cmp
jbe
imul
inc
iret
das
xchg
and
hlt
and
pop
adc
imul
push
sahf
dec
sarb
testl
cmp
pop
sbbl
pop
mov
insl
jge
ljmp
rep
aam
outsl
xor
inc
js
fs
fldcw
push
pusha
inc
out
hlt
ret
inc
ret
test
imul
loope
mov
fnstsw
gs
stos
out
pop
mov
push
push
xchg
pushf
out
adc
sbb
orb
push
dec
pop
int
outsl
mov
into
push
adc
or
add
shrb
and
stos
jbe
jnp
into
stos
jno
or
cltd
dec
cmp
mov
testb
dec
sahf
popa
clc
adc
pop
in
or
sub
mov
les
push
call
insl
jae
xchg
notb
sub
mov
sbb
push
mov
inc
cs
adcb
movsl
add
mov
push
mov
int3
pop
out
jne
inc
std
adc
frstor
jnp
xchg
add
dec
adc
lea
int
cli
fs
inc
adc
cmpsb
cmp
aam
inc
into
dec
bound
add
cmpsl
dec
adc
xlat
ljmp
jbe
cwtl
shll
push
sbb
xorl
dec
sub
fdivp
and
adc
push
push
fldt
lods
sbb
cmpsl
imul
jnp
jo
jae
cs
mov
jecxz
stc
push
in
out
lahf
cmp
out
jbe
icebp
mov
test
ljmp
adc
sbb
sub
test
repz
test
cmp
daa
bnd
jecxz
mov
add
cmp
dec
cmp
xor
mov
adc
scas
insb
add
mov
movb
cmp
lea
mov
je
fcomps
ret
or
addr16
and
xchg
lock
adc
xchg
xor
pop
add
shll
sub
push
in
mov
nop
out
jp
sbbl
fistpl
fs
mov
in
test
and
jmp
or
sbb
mov
push
mov
push
stos
dec
mov
iret
add
add
push
cltd
mulb
sub
add
lahf
xchg
icebp
or
ret
repz
xor
cmp
inc
adc
add
cltd
rcll
xchg
sbb
dec
pop
xchg
mov
pop
mov
and
ffreep
dec
ljmp
repnz
cwtl
and
jmp
inc
bound
jns
cli
push
lret
push
daa
in
xor
push
mov
lcall
inc
jbe
je
mov
pop
sbb
cld
dec
out
movsb
popa
mov
xchg
cmp
cmp
pop
and
js
inc
or
jne
xchg
dec
rcrb
add
loopne
add
addr16
xor
out
in
cvtps2pd
jge
dec
int3
divl
sub
shlw
dec
test
or
sub
subl
lcall
cmp
hlt
mov
push
lcall
xchg
jecxz
movsb
out
mov
pop
ljmp
dec
pop
cmp
sahf
mov
inc
popf
add
mov
rorb
ss
or
jecxz
push
jecxz
cmp
repnz
rcrl
mov
lods
lret
add
test
fisubs
pop
pop
mov
sbb
sbb
pop
xor
jmp
movsb
mov
inc
into
scas
inc
inc
push
sarb
sub
std
stc
movsb
call
iret
int3
cmp
xchg
add
nop
jns
pop
sub
adc
ror
and
push
mov
imul
pop
dec
and
xor
push
in
icebp
gs
ja
cmp
jb
dec
sub
sti
adc
push
std
or
cmp
and
out
xchg
mov
inc
mov
fistl
pusha
pop
or
out
cmp
inc
cwtl
aad
daa
lods
out
or
pop
mov
cmpsb
push
sbb
xchg
outsl
xlat
popa
insl
xor
dec
fldl
jne
push
mov
inc
xor
or
mov
xor
enter
leave
ja
sarl
inc
cli
or
sbbl
or
or
std
mov
das
add
push
mov
popa
rcrl
inc
and
cld
add
sbb
jge
sub
add
inc
push
test
imul
stos
and
test
mov
push
push
push
xchg
cs
out
cmp
dec
xor
jo
dec
sbb
ficoms
out
idivl
into
adc
sub
push
imul
mov
hlt
shl
fs
scas
test
sub
pop
sbb
push
xchg
fdivs
fcmovne
in
sbb
xor
xor
loope
aam
jg
xchg
stos
std
sbb
imul
jo
out
rclb
aaa
add
and
xchg
fdivr
mov
mov
shrb
mov
push
outsl
jno
mov
out
lods
lods
mov
add
cmp
dec
test
stos
xchg
gs
pushl
fldenv
loope
jecxz
std
jae
testb
sub
xor
out
in
fstps
mov
cld
stos
push
jo
push
jmp
adc
addr16
in
mov
cmc
dec
mov
data16
mov
dec
popf
mov
jg
sbb
jmp
mov
adc
inc
stos
fiaddl
repnz
cli
jns
or
dec
ret
lahf
rorl
scas
mov
jmp
scas
rolb
imul
mov
dec
pop
add
out
xor
das
inc
mov
fcoms
cmp
pop
cmpsl
inc
inc
mov
push
or
pop
jnp
test
je
fisubl
fcomip
decb
mov
mov
shll
arpl
shr
testl
sbb
pop
adc
pop
add
test
repz
mov
adc
mov
lcall
jp
fldt
ror
sbb
or
jge
inc
xor
pop
mov
cld
dec
inc
xchg
and
xlat
cmpsl
jbe
arpl
clc
mov
sub
addr16
pushf
add
outsl
lds
int3
mov
or
fldenv
out
mov
pop
cmp
movsb
mov
int3
mov
xlat
xchg
adc
fisttpl
inc
add
icebp
imul
ja
bound
das
test
sub
pop
gs
into
push
inc
into
pop
jp
insl
rcrl
fimull
mov
jno
aaa
mov
loopne
or
xchg
jae
add
hlt
jo
mov
call
add
xchg
or
sbb
loope
mov
pop
push
out
imul
cmpsb
xor
cs
xchg
adc
shll
pop
outsb
into
dec
pop
xchg
dec
or
add
cmp
lret
pop
add
in
arpl
xchg
sub
jo
iret
mov
sub
aad
int3
les
movsb
mov
cwtl
xor
ds
push
mov
mov
outsl
loop
sti
out
arpl
jo
mov
movsl
mov
imul
add
mov
ss
sbb
xchg
inc
xor
int3
add
lods
xchg
dec
jge
xlat
cmp
or
mov
hlt
shl
les
push
add
adc
dec
out
xor
or
mov
stos
sbb
sar
xor
cmp
lret
lds
sub
dec
sub
gs
xor
arpl
sarb
es
iret
xchg
fwait
adc
mov
lods
fdivr
lock
dec
scas
push
test
mov
fsubp
jb
rcrb
pop
inc
sbbl
lret
inc
imul
or
add
jo
jno
enter
imul
pop
lret
inc
adc
jno
push
jne
imul
mov
shl
cmc
sbb
xchg
jno
inc
stc
or
ja
out
inc
xchg
ja
lods
mov
or
xchg
xchg
fildl
out
sbb
xchg
test
lea
loope
mov
arpl
xchg
shlb
jne
nop
in
into
aaa
fcmovne
fmull
xchg
push
push
ss
shlb
or
add
and
sahf
dec
nop
sub
ja
push
pop
out
xchg
aad
nop
xor
hlt
cld
sub
push
int
sahf
sbb
push
sbb
mov
inc
cmpsl
sbb
neg
outsb
dec
loop
xchg
outsb
fisubl
lahf
mov
cmp
mov
xorb
dec
jae
enter
iret
test
ss
outsb
push
fs
pop
leave
lcall
test
push
xor
jp
push
cmpsl
je
inc
push
xchg
aas
xchg
loop
mov
and
fldenv
mov
xor
loopne
cmp
adc
pusha
shlb
clc
or
mov
rolb
cmpsb
movsb
fcomps
inc
add
orb
mov
push
enter
cmpsb
jo
shll
lods
sbb
pop
in
pop
pshufw
xchg
jl
ja
imul
rol
mov
add
std
add
clc
xor
iret
xchg
decb
les
outsb
sbb
lret
jecxz
and
push
lds
jmp
sub
ds
fdivrp
add
in
loop
dec
add
push
sub
sub
jp
cmpsl
lahf
scas
rcrl
ds
std
lods
pop
mov
das
scas
in
cmp
push
in
cmc
sbbb
cmp
lods
xchg
sub
stos
dec
roll
jbe
inc
pop
pushf
xor
or
cmp
push
sbb
aas
mov
imul
and
mov
push
push
adc
mov
std
cs
cmp
nop
repnz
cmp
mov
add
add
jbe
add
jle
leave
sub
sar
lds
mov
imul
mov
and
pop
cld
ljmp
adc
cld
lahf
popa
inc
mov
int
arpl
stc
adc
shr
sub
mov
movsl
insl
in
scas
test
data16
scas
mov
sbb
pop
jo
shll
and
jecxz
jne
cs
rolb
mov
mov
xchg
roll
popa
repz
and
aam
dec
mov
mov
and
adc
test
xlat
jecxz
pushl
loopne
imul
js
cwtl
jno
stos
adc
cmp
and
jl
sarb
addr16
push
fnstcw
sub
outsb
scas
pusha
lds
ljmp
xchg
popa
jp
push
iret
jne
jmp
push
mov
lret
lods
dec
nop
stos
addr16
jmp
xor
mov
dec
lock
cwtl
cmp
in
push
push
cmpsl
adc
pop
negl
js
mov
aas
sbb
pop
fists
gs
adc
mov
bound
sbb
mov
mov
mov
mov
shrl
enter
test
add
jb
cmpsl
js
jns
cli
fdivrp
push
outsb
mov
jmp
xchg
push
repnz
push
and
mulb
xchg
inc
xor
dec
aam
jo
push
mov
int3
mov
movsl
sbb
shlb
adc
cltd
jbe
push
push
aad
jo
dec
mov
rorl
shrb
cmp
pop
lods
repz
mov
movsl
xor
icebp
dec
lods
dec
cmpsl
pusha
nop
pop
xlat
sub
rcr
enter
icebp
mov
outsb
rcl
cmp
out
push
pop
out
mov
into
dec
add
adc
jmp
lret
inc
es
cli
into
cmp
std
cli
stc
cmp
and
xchg
add
mov
cmpsb
cmp
jnp
mov
and
insl
cmp
into
push
ds
lcall
jge
test
loop
xchg
idivl
sub
add
pop
jg
mov
add
imul
and
or
dec
je
fcomi
push
xchg
xchg
cld
inc
sbb
lea
mov
daa
stc
insb
inc
psubb
sub
push
adc
leave
call
mov
fs
xchg
add
xchg
xor
dec
mov
jne
bnd
jo
js
test
xor
push
xor
movsb
dec
mov
mov
in
and
shlb
sbb
fstl
lods
movsl
add
lcall
sti
pop
flds
sbbl
loopne
inc
mov
scas
mov
adc
jl
jnp
pop
mov
xchg
cmp
pushf
lret
or
push
es
xchg
inc
pop
mov
adc
dec
or
enter
arpl
jbe
js
in
sub
pop
adc
mov
imul
movd
pop
jmp
dec
add
mulps
xor
aaa
int
xchg
mov
arpl
cltd
sbb
lods
enter
leave
xchg
icebp
cli
ret
cmp
push
test
xchg
inc
lret
ror
xor
inc
loope
lcall
loope
add
xchg
stos
add
push
das
ss
test
mov
out
push
addr16
sarl
xchg
jae
mov
lret
jle
cwtl
pop
add
loope
cmp
xchg
pop
sahf
xchg
fcomp
inc
lret
mov
add
or
fisubrs
xor
cmp
js
pop
mov
add
dec
data16
cmpsl
mov
repnz
cmpb
cmp
adc
insl
adc
push
jecxz
and
js
or
setge
lahf
mov
and
jo
pop
lret
insb
mov
insb
addr16
out
push
loop
std
mov
add
mov
shrl
jmp
lock
call
jp
popa
push
iret
or
or
pop
fdivl
inc
mov
or
sbb
in
and
popf
jb
stc
out
test
and
call
leave
cmp
jp
dec
enter
lods
out
fidivl
test
sbb
xchg
daa
lods
xor
adc
cld
mov
hlt
in
xchg
hlt
hlt
push
and
rclb
stc
add
test
sub
pushf
and
insl
pushl
or
ja
xchg
imul
sub
mov
sbb
dec
mov
fdivrl
push
adc
insb
test
lds
lods
mov
gs
push
ljmp
cwtl
xor
in
fdivl
pushf
cmp
in
cmp
insl
and
xor
xchg
pop
and
mov
negb
scas
mov
or
pop
leave
lods
data16
cld
or
fidivrs
cmp
movsl
ja
mov
pop
mov
fcompl
or
pusha
and
movsb
xchg
mov
aas
xchg
cld
jae
push
jmp
dec
push
shll
pop
out
dec
inc
imul
xchg
arpl
lcall
xor
xchg
push
or
push
mov
cltd
and
mov
mov
sbb
sahf
adc
push
push
insl
sub
mov
je
in
cwtl
hlt
sub
scas
jl
xchg
or
pop
adc
add
aad
add
insl
push
outsb
pop
jb
shl
js
adc
cmp
ret
jns
mov
out
mov
mov
sub
adc
or
push
mov
and
jmp
ljmp
and
push
add
or
pop
mov
jne
xlat
jecxz
fildll
mov
mov
clc
mov
cmp
std
rcl
dec
xchg
mov
adc
adc
dec
cmp
mov
mov
xor
nop
push
sbb
out
movsb
cltd
popa
ds
popf
aam
xchg
movsb
paddsb
leave
int3
or
fdiv
adc
xadd
adc
popl
and
dec
shlb
dec
inc
lds
xchg
outsl
push
mov
adc
ds
fisubl
lea
inc
rorl
and
push
adc
cmp
lret
mov
pop
fs
int3
xchg
pop
xchg
test
and
pop
test
shrl
cmp
pop
or
sbb
nop
loopne
nop
loop
pop
xchg
or
enter
fs
imul
ret
fsubr
jp
jl
lahf
nop
push
push
adc
add
mov
pop
inc
sub
movsb
nop
movsb
add
mov
insb
mov
int
cmp
and
push
mov
or
inc
mov
or
add
adcb
push
xchg
inc
push
leave
addr16
leave
out
test
fistps
loopne
adc
mov
out
jae
mov
mov
sbb
sbb
cltd
lock
xor
fsubl
fcom
pop
aas
andb
jno
cmp
dec
sti
roll
inc
mov
jecxz
xchg
jne
and
push
call
loopne
aaa
or
push
lret
shlb
daa
jb
adc
adc
cmc
iret
push
or
lock
aaa
mov
sub
or
or
popa
jo
cmp
ret
into
scas
dec
and
popa
push
test
pushf
faddp
stos
prefetchnta
lret
ficomps
in
cs
int
xchg
push
ret
push
adc
std
leave
jne
sbb
nop
shll
mov
cwtl
xchg
cld
pop
dec
cmp
push
inc
dec
inc
xchg
call
xor
insb
sbb
cmp
popf
xlat
rorb
cmp
mov
repnz
mov
les
cmp
rcll
bound
push
rolb
mov
pop
in
in
mov
jp
sbb
idivl
inc
ret
add
xor
stos
xor
inc
faddl
pop
cmpl
pop
cmp
jae
jne
setns
mov
xchg
or
nop
and
cmp
cwtl
lret
or
add
flds
xchg
loop
fistps
out
push
or
sbb
cmp
xchg
leave
dec
xchg
paddq
in
lcall
mov
adc
sub
loope
push
mov
adc
ret
subl
loope
out
outsb
dec
mov
movsb
or
pop
jns
sbb
adc
mov
outsl
popa
xor
pop
mov
cwtl
test
push
lcall
lss
cmp
xor
pop
mov
and
aas
mov
loope
arpl
in
scas
push
dec
sbb
jns
or
inc
push
or
int
fsts
ds
push
add
adc
out
roll
stos
jne
loopne
in
pop
push
fimuls
push
out
cli
cltd
loope
mov
mov
dec
out
add
adc
xchg
mov
xchg
fucom
mov
pop
adc
add
stos
mov
mov
into
gs
mov
xor
jbe
inc
jge
dec
cmp
insb
add
xor
mov
aad
mov
stos
xchg
jmp
in
lods
repz
lret
xchg
jg
cmp
or
pushf
leave
jbe
rcr
sbb
push
in
sub
std
mov
leave
xchg
cli
in
insb
jb
pop
xchg
cwtl
xchg
lcall
sub
outsl
sub
push
jmp
mov
addr16
inc
sar
xchg
test
push
push
loope
mov
push
sbb
cld
enter
mov
add
jb
fwait
cmc
outsb
iret
mulb
jns
and
or
dec
inc
adc
mov
xchg
fsubrl
ror
xchg
mov
call
dec
xor
ja
pusha
pop
insl
enter
test
jo
and
adc
sahf
or
jmp
jnp
neg
adc
test
and
scas
fistpll
xorl
adc
dec
js
call
lods
jb
adc
in
sub
mov
and
inc
jge
scas
mov
ret
inc
ljmp
ja
imul
xchg
fisubl
stos
inc
cwtl
aaa
sub
adc
cmp
cld
iret
push
into
sub
and
dec
mov
lcall
jecxz
cmpsb
pop
or
loope
repnz
mov
insb
pop
in
lea
in
js
jg
in
or
push
aad
imul
sbbl
adc
mov
mov
jne
das
in
adc
repnz
add
arpl
addr16
fstps
adc
icebp
inc
cmpsb
test
and
sarl
mov
dec
push
dec
repz
lret
push
out
outsb
dec
outsb
sub
sbbl
sbb
cmp
push
or
adc
jo
and
int
xchg
shrb
nop
fidivrl
dec
mov
push
lahf
xchg
cli
scas
pop
mov
push
jl
lods
repz
stc
sbb
ss
and
arpl
jmp
or
xlat
int3
cmp
jg
cmp
pop
adc
inc
stos
xchg
mov
xchg
or
xorl
xor
aam
scas
lahf
ret
idivl
cmpsl
xor
jno
and
jmp
loope
mov
les
lret
sti
das
jecxz
xchg
sbb
lret
add
and
loop
mov
push
sub
out
jne
movsb
lds
and
and
xchg
sbbb
cmp
jno
sbb
std
and
das
clc
jge
ljmp
mov
pop
inc
clc
repnz
pop
xchg
mov
mov
inc
hlt
mov
pop
je
pop
mov
repz
lds
or
clc
in
not
cmp
mov
mov
pop
out
inc
fildl
or
add
cmp
sbb
push
ret
fwait
sbb
ja
dec
es
adc
jnp
outsb
mov
into
adc
mov
lods
pushf
fsubrp
test
stos
mov
into
dec
hlt
frstor
ret
pop
shrb
and
movsb
jae
xlat
outsl
add
lods
or
cmp
dec
sar
arpl
xchg
fsubl
sbb
scas
jo
loop
insl
dec
shlb
dec
sbb
sbb
xchg
and
icebp
push
cmpsl
push
pop
lock
pop
sbb
jae
iret
sbb
and
cmp
xlat
loop
jbe
pushf
or
xchg
add
adc
pop
cmpsb
loope
faddl
or
enter
jmp
adc
push
dec
dec
loop
inc
adc
mov
xchg
faddl
cltd
lret
and
add
out
out
pop
cmpsl
cltd
add
xor
adc
scas
idivl
cmp
jbe
push
aad
sub
jg,pn
in
sahf
mov
mov
les
cmp
sbb
jle
ds
js
daa
pusha
inc
mov
push
inc
mov
sub
cmp
outsl
nop
lods
pop
inc
nop
dec
inc
jbe
lds
fcmovb
divl
cmp
dec
push
cs
and
movsl
popa
sahf
cmpsl
inc
in
jle
mov
es
test
ss
xor
repz
inc
leave
jns
lret
mov
ftst
mov
mov
test
sbb
rcr
ficoms
andl
xor
pop
scas
mov
mov
dec
lea
sbb
xchg
in
cmp
ds
sbb
lcall
repnz
xchg
push
clc
sub
es
repnz
div
adc
fcmovb
test
mov
out
repnz
aas
jns
pop
bound
mov
adc
lahf
cmp
das
loope
ret
clc
lds
push
mov
jne
mov
sbb
pusha
popf
in
sub
mov
ret
inc
pop
fs
add
jecxz
mov
shlb
sub
cmpsb
int
and
jns
mov
imul
fidivl
lods
add
mov
loopne
dec
xchg
xor
jecxz
or
fidivl
mov
push
jbe
repz
push
xor
cmpsl
dec
push
icebp
jge
aaa
out
or
rolb
scas
movsb
cmp
sub
pop
xlat
aaa
xor
mov
dec
aaa
iret
inc
sti
ljmp
jl
add
inc
bound
jle
daa
pop
add
ss
adc
dec
dec
dec
adc
ljmp
pop
movsl
test
fwait
orl
xchg
int3
cmp
cld
stc
scas
cmp
mov
push
xor
lods
loope
push
insl
dec
loop
sbb
bound
loope
lods
jne
cmpsb
sub
ja
cs
or
frndint
sub
stc
mov
arpl
ljmp
rcll
fcomps
in
sbb
dec
testl
les
dec
mov
and
bound
cmpb
inc
xor
lds
pop
inc
icebp
popa
daa
mov
scas
in
rcrb
add
jae
nop
adc
mov
sbb
xchg
pop
ja
call
lcall
fsubl
cmpsl
fbld
dec
add
mov
lea
call
cltd
cmp
xchg
mov
lret
xchg
sub
adc
insb
mov
xor
cmpsb
jmp
in
cmp
mov
outsl
clc
inc
mov
and
in
xchg
adc
aas
shr
out
push
jle
xchg
pusha
loop
cmp
xor
outsl
dec
sbb
fwait
lea
xchg
add
pop
jle
rclb
movsl
jns
cmp
in
and
or
add
mov
mov
repnz
rclb
pusha
ja
xchg
lock
outsb
mov
adc
loope
push
xor
jae
jnp
xor
inc
in
fwait
adc
inc
mov
and
cmp
cwtl
dec
das
hlt
mov
push
xorl
movsbl
loopne
pushf
out
inc
cwtl
repz
and
cmpsb
sub
inc
mov
push
pop
jb
mov
in
inc
add
inc
sub
lods
xchg
add
sbb
mov
nop
xchg
xchg
lret
fsts
dec
loopne
fdivp
ret
add
out
int
mov
lds
bound
push
pop
cmp
cmp
jo
push
lods
addl
jbe
mov
sub
mov
dec
repz
xchg
pop
inc
hlt
push
ljmp
inc
pop
inc
pop
xor
mov
jb
bound
mov
and
orl
lcall
in
sub
xor
lahf
jg
adc
pop
ret
add
add
mov
les
mov
or
and
mov
sbb
cmpsl
mov
subl
cltd
dec
adc
sub
xchg
pushf
sub
cmp
pop
jge
mov
xchg
idivl
inc
dec
add
push
mov
ds
leave
inc
stos
dec
sbbl
gs
fdivrs
cmp
movsb
out
or
insb
mov
jmp
mov
cmp
push
add
sahf
adc
sbb
pop
les
outsl
movsl
lods
mov
popa
fidivl
xlat
sub
or
rorb
and
popa
inc
popf
fdivrl
shrb
test
mov
cmp
mov
stc
inc
dec
mov
fwait
test
lea
fs
in
jecxz
bound
repz
xlat
mov
ljmp
xchg
out
jno
mov
ret
in
cmp
and
bound
or
push
mov
mov
lret
jnp
int3
mov
and
pop
daa
js
adc
pop
cmp
cltd
pop
mov
jecxz
add
pop
xor
lods
dec
inc
xlat
lahf
push
mov
push
mov
out
pushf
lret
clc
loopne
dec
adc
jg
lods
iret
adc
push
mov
insb
loope
inc
pop
xchg
push
xor
cmp
mov
push
mov
ja
call
jg
pop
int3
dec
xchg
insb
in
mov
mov
push
jae
cli
jp
pop
cld
pop
push
mov
xchg
cs
cmpsl
and
mov
inc
xchg
ljmp
jg,pn
dec
cmp
repnz
rcl
je
add
and
aam
sbb
mov
bswap
ljmp
jo
fldenv
dec
xchg
outsb
push
xchg
out
arpl
xor
gs
subl
iret
movsb
ret
ficompl
bnd
inc
sbbl
mov
add
aas
mov
xchg
cmpsl
or
jmpw
ret
xchg
fwait
jnp
lds
cwtl
out
fcompl
outsb
jbe
sbb
stos
sbb
cmp
das
add
dec
xor
scas
mov
push
or
hlt
scas
imul
jno
xor
iret
adc
mov
stos
xchg
xor
cmpsb
mov
lcall
push
mov
mov
jmp
jo
repz
mov
cmp
mov
inc
sbb
shl
jns
push
cltd
jle
or
mov
ljmp
repz
ja
clc
jno
mov
scas
mov
stc
stos
cmp
and
nop
orb
mov
fsubl
lahf
inc
xor
xor
repnz
xchg
rcrb
shl
ds
paddw
pmaddwd
decl
jmp
inc
mov
push
pop
xlat
or
pop
and
inc
shlb
scas
in
roll
out
cld
mov
sahf
dec
dec
insb
mov
xchg
gs
stos
stos
fmull
movsb
rcr
push
adc
or
andb
rol
dec
sbb
lret
jle
arpl
sub
jo
push
call
add
gs
xor
in
add
popa
mov
std
and
xchg
xchg
jl
iret
orb
cli
sub
out
ja
xor
cmc
or
fcom
sbb
lcall
fistl
or
push
fimuls
lcall
push
xor
fidivs
fmulp
jp
out
xchg
stos
cmp
ja
jne
mov
and
cli
add
das
adc
dec
loop
icebp
sub
ret
or
out
in
lds
or
jl
insb
inc
imul
dec
cs
lods
xchg
adc
cld
mov
adc
loopne
loope
or
sub
or
cltd
pop
pop
adc
ja
pop
aaa
adc
lret
mov
add
dec
in
pop
or
mov
jle
xchg
inc
pop
sahf
loope
pop
cmp
or
incl
xchg
cmpl
loope
out
jecxz
loope
and
cwtl
gs
nop
sub
mov
push
cmpsl
cmp
dec
lods
and
and
dec
je
sbb
mov
enter
sbb
imul
rcrl
push
push
in
xor
adc
lcall
jno
or
iret
icebp
test
mov
jae
cmp
loopne
or
js
and
sub
and
out
sbb
xor
dec
push
cmp
dec
sbb
idivl
xchg
push
aad
int3
out
push
rorb
ds
mov
icebp
xchg
cmp
mov
mov
sbb
inc
sbb
and
cli
jmp
mov
mov
mov
in
mov
jo
mov
mov
jg
pop
cmp
shl
push
out
xor
xor
pop
aaa
add
xor
lcall
and
jno
mov
fwait
imul
subb
js
add
xlat
repz
mov
aas
jecxz
xchg
cmpsl
iret
pop
pop
xchg
andl
movsl
mov
loop
test
shll
jle
fcmovnbe
incb
stos
arpl
imull
mov
add
in
cmp
mov
scas
mov
insb
nop
popf
popf
xchg
push
or
and
lahf
or
outsb
into
ret
ret
movsl
aaa
xchg
xchg
pop
push
jmp
pushf
popa
xchg
xor
jl
or
test
jg
fcomps
mov
mov
dec
jno
iret
gs
fimuls
insl
sub
sbb
sti
xor
xchg
push
lea
add
or
jecxz
in
sub
test
call
popa
cmp
push
xor
and
jne
add
inc
pop
push
mov
into
lahf
popa
mov
lods
cmp
je
jno
push
mov
add
subl
lret
inc
xchg
fcoms
dec
aam
mov
inc
stos
xor
lret
vpsubd
movl
add
into
mov
push
stos
push
inc
push
xor
je
push
in
inc
addr16
test
fwait
repnz
xor
or
das
push
sbb
shr
or
sbb
movsb
dec
ffree
je
inc
divl
jle
mov
fs
imul
inc
or
dec
test
imul
les
js
push
ljmp
add
jne
sub
pop
xor
sbb
xlat
sub
adc
dec
inc
mov
mov
pop
add
dec
cmp
arpl
mov
sbb
jb
enter
jecxz
or
ss
pop
inc
scas
xor
add
fwait
cmpsl
pushf
sbb
ljmp
jne
adcb
push
cs
stc
mov
mov
pushf
jmp
ret
inc
int
in
jne
mov
and
xchg
pop
fwait
aad
mov
pop
cmpl
sbb
dec
insl
dec
and
xchg
and
inc
xor
jg
ret
push
jns
in
or
and
incb
mov
rcr
mov
bswap
mov
movsb
adc
lea
mov
popf
cmp
icebp
sub
mov
mov
adc
std
cmc
mulb
out
or
and
jns
cwtl
insb
cmpsl
cmp
xlat
add
mov
leave
mov
or
jns
sbb
mov
add
into
add
xchg
pushf
pop
jmp
xor
xchg
adc
int
arpl
inc
out
pushf
jp
dec
sbb
ret
stc
mov
aam
push
roll
daa
sbb
cld
dec
es
inc
movsb
mov
enter
nop
je
aam
cwtl
ret
adc
ror
ja
push
cmp
sub
std
sub
add
mov
adc
sbb
add
and
stos
ss
rcrb
in
pop
adc
jmp
cltd
int
xchg
test
xor
subb
jns
push
mov
add
ret
mov
fs
jle
jb
xchg
add
movsb
add
flds
dec
inc
repnz
push
pop
inc
shll
les
push
out
movsb
jge
xor
test
dec
movsl
sbb
mov
lds
loope
or
fwait
jo
fcomps
mov
jl
in
mov
popa
loop
cmp
into
xchg
hlt
repnz
out
mov
rorb
cmp
xchg
repnz
sub
imul
inc
scas
lret
data16
and
movsb
jns
icebp
add
mov
rcrl
addl
cmovle
adc
mov
jl
xchg
mov
xlat
pop
add
cmp
in
inc
push
loope
xlat
pushf
rep
out
arpl
bound
loop
shld
cs
cwtl
call
repnz
mov
and
pop
adc
fdivrl
cltd
push
xchg
sub
mov
in
mov
mov
into
scas
sbb
jno
in
inc
pop
mov
ret
push
std
mov
aas
jb
and
or
gs
mov
shl
cmp
jbe
jno
loopne
cmc
add
lret
mov
sbb
repz
lret
stos
ret
les
inc
sub
ret
inc
and
popa
inc
cmp
aas
add
fdivl
dec
into
ret
inc
lock
aas
jle
lret
mov
pop
stos
xor
cmc
in
repnz
push
sbb
test
es
mov
fisubrl
add
xor
gs
mov
ret
aas
jge
mov
xor
fldenv
je
icebp
mov
icebp
adc
push
adc
jb
sbb
out
cmp
test
or
pop
ret
mov
or
mov
lahf
std
lret
out
leave
sarl
mov
pop
js
xchg
mov
or
imul
mov
mov
sub
popa
aas
inc
js
fwait
nopl
mov
int
push
sbb
dec
lds
divl
and
jl
loope
clc
das
movd
xorl
ja
add
bound
mov
mov
inc
in
icebp
movsl
pop
xor
lret
cmp
movsb
movl
and
mov
xchg
test
nop
cmc
mov
cmpsb
test
pop
mov
xchg
inc
dec
pop
dec
mov
fistpll
jns
daa
test
cmp
ret
push
sub
push
clc
movsl
mov
push
jmp
sub
shlb
mov
test
test
inc
add
push
mov
stos
stc
xchg
mov
movsb
lret
cli
stos
mov
sub
sbb
mov
mov
fs
dec
sbbb
push
jle
loopne
mov
cli
mov
sbb
lret
xchg
mov
movb
sbb
xorl
cmp
sbb
outsb
ret
aad
pop
aaa
nop
popf
mov
mov
add
push
cltd
xor
add
js
jecxz
push
jnp
or
mov
loopne
fildl
adc
ret
sbb
jg
ret
mov
bsf
inc
fs
test
popf
push
jge
xchg
sbb
xor
pop
push
fwait
loope
push
repnz
mov
mov
nop
sbb
xchg
enter
div
push
enter
mov
pop
mov
cmpsl
fmull
jnp
sub
mov
test
xlat
jecxz
pop
or
sbb
outsl
inc
mov
inc
xor
xchg
scas
mov
cmpsl
dec
repnz
js
xor
cmp
push
lods
xor
fcompl
adc
push
jb
fisubl
add
cmp
invd
outsl
jp
es
inc
jg
es
fcmovne
inc
xlat
cmp
pop
sbb
addb
cmp
xor
stos
xor
popa
push
insl
mov
int
or
jecxz
cmpsl
fcoml
lea
in
mov
jg
mov
add
and
push
inc
sbb
cltd
gs
pop
ja
mov
arpl
xchg
pop
psllq
fcomi
hlt
add
insb
int
and
into
xchg
cmpl
mov
rorl
mov
dec
and
push
iret
callw
cs
dec
dec
pushf
aad
test
rolb
and
pushf
jne
pop
cwtl
xlat
cmpsl
std
aaa
jae
fwait
or
pand
xor
decl
xchg
add
jb
imul
faddl
fstpt
add
push
stos
sbb
sub
ret
push
xchg
loope
jb
xor
hlt
movsb
mov
cmp
test
mov
mov
or
mov
pop
hlt
xchg
repz
or
cmp
hlt
or
pop
das
repnz
daa
cmp
push
push
cmc
pop
mov
cli
push
les
cmp
aas
pop
pop
sub
testb
adc
cmp
lret
push
or
pop
cmp
test
jno
dec
aaa
fisubrs
sub
cmpsb
test
add
mov
or
dec
lods
jno
jle
outsl
mov
std
mov
clc
mov
in
xor
xchg
iret
fs
and
lcall
mov
xchg
sbb
push
inc
mov
nop
pop
loopne
push
add
in
sahf
imul
push
out
mov
adc
xchg
sub
dec
jae
sbb
cwtl
inc
push
sbb
xchg
add
xchg
lcall
mov
or
xor
mov
idiv
and
lods
jb
or
add
ds
or
jg
mov
das
rclb
sahf
push
shlb
push
sbb
mov
adc
sbb
mov
mov
pop
sub
xchg
sub
arpl
cmp
jg
dec
ss
jg
test
data16
push
loop
cmc
mov
inc
pusha
jae
rcll
stos
dec
mov
insb
stos
lods
outsb
or
push
adc
pop
je
xchg
movsl
daa
rol
push
repnz
out
jno
add
shll
mull
push
mov
jmp
xchg
jnp
out
idiv
cwtl
add
inc
movsb
or
bound
cli
and
fimuls
add
test
inc
data16
dec
fwait
jne
xchg
pop
xchg
mov
cmpsl
gs
dec
out
add
loopne
popf
mov
cltd
jne
pop
cmpl
outsl
call
jae
mov
xor
iret
aaa
into
ficomps
stc
add
mov
cld
dec
rcll
push
aad
fimuls
push
jno
sub
ljmp
out
push
xor
jb
mov
out
movsl
rclb
mov
push
nop
subb
and
mov
ss
mov
inc
nop
lods
stos
out
or
je
icebp
jg
pop
ja
cmp
jmp
jo
pop
adcb
and
jp
mov
push
movsb
cmp
or
ss
lahf
xchg
ret
sbb
mov
in
push
hlt
lret
adcl
ja
push
cli
pop
in
sub
or
mov
pop
call
cwtl
adc
mov
stos
xor
add
data16
cmpsl
test
imul
jne
push
das
mov
mov
cli
sbb
outsl
cmp
aam
jge
dec
push
mov
or
or
mov
adc
pop
pop
mov
jmp
int3
jnp
jae
mov
or
xchg
test
push
bound
lahf
dec
fisttpll
and
inc
inc
sub
mov
leave
push
jecxz
adc
lods
movsb
push
push
jns
cmp
and
fs
movsb
nop
xor
iret
shll
jle
shr
cmc
lcall
out
popa
stc
inc
lcall
pop
mov
ret
pop
lcall
add
cmpb
std
or
sarb
sbb
insb
popa
out
inc
push
outsl
nop
int
repz
sbb
or
pushl
jmp
inc
xchg
adc
stos
push
outsl
lret
jbe
lcall
mov
mov
xor
insb
cmpsb
jge
sarl
je
mov
jno
loop
mov
add
inc
pop
test
int
sbb
in
fcom
pop
call
out
add
cwtl
int3
loop
sbb
mov
and
cmp
rorb
insb
jmp
ljmp
xor
jae
mov
jge
shll
mov
jb
push
loop
sub
cli
jns
sarl
sarb
jnp
iret
in
pop
or
dec
repz
fwait
ljmp
xorb
in
into
pop
jl
or
mov
sbb
xor
arpl
xlat
in
cmpsl
xchg
push
and
mov
push
frstor
insb
and
imul
jmp
and
in
movsl
lahf
arpl
mov
and
popf
inc
adc
jecxz
add
xchg
adc
jns
into
xchg
cmpsb
lcall
add
scas
and
add
call
and
out
mov
movsl
xchg
add
pop
mov
dec
outsl
push
and
mov
xchg
cmpsl
lods
ss
mov
repnz
setl
or
mov
xchg
aaa
enter
xchg
xor
cmp
mov
sti
dec
add
dec
dec
pop
sti
sahf
mov
sarb
pop
lahf
das
and
dec
mov
jae
push
enter
pop
lret
cmp
add
jg
ret
push
lock
or
jmp
pop
sbb
test
out
int3
pop
aaa
jecxz
aad
push
and
pop
iret
icebp
mov
mov
mov
mov
ljmp
popf
push
dec
jno
cltd
xchg
leave
cmp
fsts
and
and
ret
mov
outsl
or
mov
into
xchg
jge
adc
cmp
leave
mov
or
jae
xor
daa
es
jo
cmc
out
xchg
push
fdivrl
jbe
shrb
dec
repnz
pop
sbb
loop
mov
cltd
sbb
mov
push
fsubs
mov
aaa
int
data16
or
xor
mov
rclb
incl
jecxz
jne
pop
pop
mov
test
cwtl
lods
test
jne
sub
fwait
sbb
in
pop
or
add
push
scas
cli
insl
test
mov
mov
push
and
and
add
mov
lret
xchg
dec
popf
pop
lcall
mov
dec
lea
fmuls
or
add
mov
ret
ja
mov
jne
mov
out
add
mov
repnz
out
fdivrs
sbb
lods
in
pusha
ds
outsl
rcll
cmp
xchg
add
push
fmuls
ds
stos
jle
jge
push
sti
push
xor
and
dec
imul
cmpsb
sub
insb
dec
ds
cmp
push
push
enter
popf
pop
mov
sub
sahf
lds
dec
push
outsl
outsl
push
arpl
out
and
lret
and
jl
push
clc
dec
and
je
adc
bnd
arpl
xor
sub
iret
stc
sarl
bound
inc
ret
jp
jnp
dec
add
sbb
pop
arpl
ds
sbb
mov
mov
pop
negb
cmp
jbe
sti
and
dec
cmp
pop
cwtl
es
es
push
xlat
fsubrp
lds
and
mov
clc
add
nop
pop
mov
xor
xor
repz
jge
add
jge
enter
repnz
adc
inc
ss
cs
ret
rcrb
pop
sbb
fmuls
add
fdivr
mov
xchg
cmp
and
fcomp
lahf
out
ja
ja
hlt
das
inc
dec
mov
mov
ret
push
pop
jno
cmp
lods
lock
fdivr
les
mull
adc
pusha
test
insb
and
xor
iret
gs
loopne
sbb
mov
jb
dec
comiss
lock
movsl
orl
ss
sub
mov
inc
pusha
jg
sbb
xor
jnp
dec
mov
sahf
sub
dec
jmp
cmc
jns
pop
xchg
mov
mov
xor
push
cmp
mov
lcall
xchg
mov
inc
aaa
jg
arpl
dec
rcll
ret
add
push
lods
les
daa
pop
cmp
cwtl
add
xor
je
adc
repz
ljmp
arpl
outsl
ljmp
jne
push
push
aaa
das
adc
dec
ret
pop
mov
sbb
ret
lea
lret
push
in
jo
dec
divb
sarl
lret
icebp
insl
punpckhdq
xchg
jle
mov
add
out
push
data16
mov
lahf
dec
nop
mov
js
dec
xlat
out
and
clc
push
cmp
cmpl
xchg
cltd
fyl2xp1
mov
mov
push
ja,pt
sub
add
sub
xchg
in
adc
push
mov
frstor
pop
sub
cmp
sar
jne
fcoms
dec
in
je
lret
jo
jl
sahf
aas
jns
mov
test
rclb
out
imul
imul
mov
dec
mov
cmpsb
or
jecxz
inc
stos
mov
int3
cmp
aam
scas
test
mov
lods
mov
push
sbb
mov
movsl
ret
mov
jge
jle
aaa
mov
pushf
hlt
out
movsb
xchg
fs
push
dec
leave
dec
inc
das
mov
jae
add
mov
out
lds
jb
repz
fmulp
mov
pop
jmp
mov
jl
pop
or
push
mov
mov
movsl
scas
js
push
pusha
pop
repz
rclb
push
pop
insl
into
mov
mov
das
data16
test
les
adc
ss
repz
mov
out
ljmp
mov
sbb
sbb
pushf
inc
jmp
xor
aaa
aas
cltd
dec
add
pop
pop
inc
test
aad
mov
and
inc
ficomps
lea
mov
dec
mov
jle
mov
aad
aas
push
mov
push
out
or
popa
xor
cmp
les
xchg
ss
bound
xor
stc
push
mov
int
repz
sub
mov
inc
scas
adc
outsb
xchg
sub
mov
sbb
cltd
mov
ss
lcall
das
jne
popf
pop
dec
or
and
in
loop
andb
jo
inc
add
cmpsb
sbb
push
insl
fldenv
popf
mov
fs
xor
or
cmpsl
sub
add
out
arpl
or
jge
mull
mov
and
cld
dec
jb
push
add
or
jnp
push
or
ret
and
mov
je
ds
pop
ja
push
cltd
mov
pop
iret
mulb
jge
dec
adc
or
sbb
pop
cmp
in
jno
movb
in
hlt
adc
fmuls
dec
out
add
xchg
add
ret
lret
shr
gs
inc
addr16
imul
xor
call
jns
dec
jb
imul
hlt
xor
adc
jge
fdiv
add
out
imul
ret
mov
jbe
out
ljmp
xor
daa
cs
push
cltd
inc
sarb
sti
ret
xchg
faddl
push
push
out
xlat
xchg
lret
les
lods
xlat
lods
fcoms
and
das
cmp
xchg
push
sub
add
mov
das
pop
daa
lods
push
mov
lock
mov
mov
repnz
mov
test
mov
inc
pop
cmp
pop
std
jl
inc
xorb
fisubl
xchg
fcoms
repnz
sub
iret
loop
jg
icebp
pop
inc
xor
lahf
inc
arpl
jbe
pusha
adc
imul
sbb
xchg
cmpsb
or
xor
jb
call
ret
push
adc
lods
repz
adc
sub
add
incl
mov
mov
or
mov
xchg
pop
jg
jle
daa
and
vsubss
neg
adc
ja
div
mov
mov
in
dec
mov
data16
sbb
push
mov
clc
inc
popa
cwtl
pop
push
test
iret
xchg
and
nop
movsl
jg
loop
fwait
mov
cmc
movsb
out
mov
jge
push
adc
outsb
ret
add
mov
lcall
mov
inc
roll
fisubs
inc
popa
iret
push
cmc
das
and
sbb
mov
dec
jle
dec
movl
outsl
mov
mov
pop
add
jge
divl
mov
sarw
lcall
dec
aaa
out
rorb
adcb
arpl
cmp
lods
scas
jmp
icebp
mov
movsl
cmc
pop
imul
sahf
inc
out
movsl
cli
into
imul
shrl
sub
imul
lret
cmp
mov
xchg
in
mov
rorb
dec
mov
mov
push
cmp
push
jle
mov
int
addb
sub
je
sub
clc
scas
hlt
or
add
pop
ficompl
outsl
fdivrl
aam
pop
mov
mov
push
sub
test
mov
pop
and
inc
out
test
mov
jl
dec
sub
pop
aam
or
ljmp
xchg
and
mov
repnz
dec
fadds
test
lods
cmpsl
inc
sbb
out
add
jg
stos
call
mov
fildl
dec
inc
cmc
inc
xchg
cmpb
fcoms
and
mov
xor
inc
into
cmpsb
push
dec
xorl
inc
xchg
push
ret
inc
repz
push
cmp
in
into
mov
call
inc
mov
pusha
pop
fcmove
push
xchg
cmp
jp
mov
div
out
ss
in
ljmp
add
inc
outsl
jne
rcll
nop
inc
mov
test
adc
xor
pop
sbb
jg
mov
jns
test
daa
sahf
enter
in
cwtl
stc
jo
dec
ret
mov
jns
xchg
inc
dec
mov
fs
testl
stc
inc
clc
mov
sbb
add
cltd
imul
add
add
push
xor
or
idivl
cmp
push
or
mov
adc
add
rcrb
push
xor
lahf
mov
jbe
repz
das
cmp
add
pop
mov
xor
dec
mov
or
xchg
push
aas
int3
adc
movsb
pop
and
xor
sbb
scas
push
fbstp
cwtl
cmp
cmovnp
jb
jp
aas
or
ret
shll
aam
test
mov
xchg
mov
out
jp
sub
jo
cmp
sbb
xchg
or
shlb
xchg
test
mov
mov
ljmp
scas
clc
jns
and
into
mov
cmp
outsb
imul
inc
iret
add
cld
adc
push
mov
js
mov
sub
adc
repz
addr16
xor
sar
jle
adc
sarb
sbb
sbb
mov
in
nop
and
adcl
sahf
fs
sahf
ret
or
mov
fptan
insl
cltd
dec
inc
xor
xchg
cmc
push
je
sub
arpl
loope
addr16
test
sahf
lret
ja
pop
lds
and
mov
mov
ret
ret
push
adc
loope
cmp
shrl
int3
out
sub
dec
pop
mull
xchg
inc
out
out
sti
add
and
rcrl
jno
ljmp
insb
mov
int
mov
lahf
add
icebp
in
push
mov
std
sbb
push
insb
and
adc
out
mov
adc
scas
inc
iret
inc
jl
lock
fadds
sarb
daa
in
jo
push
cmpsb
test
pop
cmpsb
sub
inc
nop
pop
cli
mov
jno
mov
or
std
pop
push
dec
adc
push
dec
mov
lea
imul
in
aad
insl
repz
cmp
push
mov
aam
inc
call
ja
rcll
xor
mov
out
xlat
outsb
sbb
cmp
sti
inc
sub
outsl
mov
add
jbe
pop
mov
test
sub
sbb
sub
jo
and
je
jns
subb
imul
sub
out
leave
pop
jl
cmp
push
and
cld
fidivs
stos
pop
mov
divw
add
or
sub
xchg
cmp
inc
pop
ljmp
mov
jle
xchg
addb
add
cmp
adc
jp
xor
cmp
sub
mov
mov
jmp
popa
add
jb
or
pop
pop
or
dec
xor
mov
and
popa
loopne
xchg
xor
sub
cmc
sarl
popa
pushf
les
arpl
nop
mov
cli
call
xchg
jb
add
add
ljmp
dec
mov
sbb
out
dec
ljmp
lea
fidivs
ret
insb
cmp
push
sub
jne
add
loopne
xchg
pop
mov
jl
pusha
scas
add
add
fs
int
mov
subb
or
leave
xchg
push
xchg
jo
rcr
popf
repz
clc
xchg
in
mov
stos
fidivl
lods
repz
pop
test
loope
fildl
mov
loope
xor
inc
dec
add
cmp
outsb
loopne
mov
sbbb
cltd
inc
xchg
out
adcl
sub
aam
pop
test
int3
ds
jecxz
pop
mov
inc
adc
pop
cmp
add
pop
ficompl
and
arpl
shl
mov
clc
sbb
xchg
xor
mov
mov
sahf
cmp
jnp
shrl
mov
aaa
cmp
mov
pop
loope
mov
jl
gs
cmp
or
mov
xor
and
pushf
mov
sbb
outsb
out
pushf
adc
sbb
cmp
sahf
lods
ret
or
add
mov
je
mov
movsl
mov
lods
adc
pusha
shrb
adc
insl
subl
inc
outsl
in
jge
xorb
and
mov
jnp
xor
repz
fwait
mov
clc
adc
lret
aaa
dec
add
push
add
clc
and
fwait
repz
cmp
imulb
shrl
cli
adc
inc
cs
test
lea
aad
hlt
push
popf
fwait
pop
inc
out
movsl
inc
jno
xor
add
jns
lahf
idivb
mov
cltd
lcall
xor
das
cmp
fucom
daa
popa
sbb
jns
test
xlat
ficoml
test
dec
cld
xor
mov
ret
in
lret
out
cmp
mov
ja,pn
daa
inc
sti
jns
sbb
int3
repnz
in
sub
jp
orb
or
icebp
xchg
repz
outsl
mov
mov
lods
xchg
push
cltd
xchg
lret
adc
jo
jbe
roll
jmp
dec
fisttpl
push
unpcklps
gs
iret
pop
xchg
or
xchg
or
stos
cmp
xor
in
inc
ret
mov
incl
push
push
sub
lds
push
lret
cmp
shrb
dec
imul
inc
push
and
jbe
xchg
roll
stos
jb
mov
push
or
pushf
ja
or
or
stos
mov
repz
mov
out
add
loopne
jl
test
push
loopne
ficoml
xchg
xchg
daa
push
xor
or
mov
mov
cli
jne
ffreep
sar
jo
test
ljmp
fdivs
cli
pop
data16
cltd
test
mov
mov
xchg
loope
xchg
mov
and
mov
cmp
and
dec
or
sbb
iret
pop
out
lcall
sbb
pushf
add
insl
jae
mov
icebp
shl
mov
sbb
mov
sbbl
sbb
jb
ficoms
out
add
cwtl
pop
jnp
xor
xor
or
push
xor
inc
popa
in
insb
mov
mov
fcoms
dec
mov
dec
jmp
lret
jnp
xor
mov
loope
stc
into
add
lret
insl
inc
in
aas
lock
dec
and
shlb
jmp
xchg
aam
lret
jmp
jbe
mov
fsubrl
lods
bound
cmpsb
loop
cmpsl
ficoms
sbb
out
and
adc
lret
xor
movsb
mov
xlat
push
adc
xchg
jne
mov
lods
aaa
pop
jl
shlb
pushf
push
lcall
adc
popf
test
and
hlt
les
mov
sub
mov
mov
iret
mov
mov
sub
ss
ret
mov
pop
push
nop
iret
sbb
jae
adcb
shl
sub
xor
jo
imul
add
outsb
mov
push
stos
pop
inc
ljmp
sub
xor
arpl
or
cmp
int
add
mov
lahf
xor
stc
cmp
loop
ja
ds
fcomps
sbb
imul
lcall
cmp
gs
pop
inc
sbb
ss
std
in
cmpsl
ljmp
inc
mov
push
mov
xor
inc
cld
dec
lock
sub
push
jg
mov
sbb
in
adcb
je
jecxz
or
pusha
ror
addr16
sub
roll
cltd
dec
xchg
ljmp
stos
inc
cltd
cwtl
cmpsl
ret
jns
mov
jg
mov
or
sbb
stos
jecxz
enter
popf
xchg
js
out
loop
lods
scas
cmp
repnz
sub
push
sub
cmp
aam
or
adc
aas
mov
xchg
add
es
mov
jg
mov
xor
push
xchg
mov
xor
jmp
dec
xor
jecxz
dec
idivl
push
add
popf
lds
sub
jne
call
push
sub
out
mov
xchg
shll
sub
mov
sub
adc
clc
mov
ds
inc
xor
clc
loopne
jmp
fwait
mov
fwait
jle
movsb
cltd
aas
loope
sbb
lods
mov
xchg
dec
adc
xchg
insl
out
cmp
add
out
xor
mov
dec
and
pushf
or
lret
cli
push
mov
dec
out
adc
dec
dec
mov
pushf
in
mov
scas
dec
add
repnz
cmp
adc
sbb
test
dec
jae
js
sub
ss
cli
cs
dec
das
dec
in
push
ss
mov
test
mov
push
mov
inc
lcall
push
add
das
lahf
jo
dec
ja
outsb
cwtl
testb
adc
jl
fidivs
shlb
mov
dec
lcall
sti
stos
cmpsl
inc
in
fsubrs
push
push
mov
and
test
adc
and
rorb
divb
jl
xchg
ja
loope
xchg
cmp
cli
xor
adc
cmpl
fnstcw
adc
arpl
xchg
push
fiaddl
inc
mov
sub
outsb
cltd
and
fisttpll
outsl
sub
sbbl
pushf
repz
push
xor
lods
adc
sub
cmpsb
repz
nop
pop
enter
mov
xor
gs
inc
adc
roll
bound
jmp
test
bound
cltd
cli
sti
arpl
cld
sbb
cmc
push
sub
fadd
imul
out
jno
dec
mov
loopne
imul
cmp
test
adcl
push
hlt
sub
movsl
and
add
lock
lods
or
and
ds
cmp
mov
mov
mov
sub
leavew
pop
and
pop
or
leave
mov
nop
stos
xchg
sbb
mov
and
popf
imul
pop
cmp
lret
incb
push
and
adc
mov
lret
add
xchg
icebp
es
mov
cmovb
mov
xchg
cmc
out
push
xchg
movsb
pushf
out
nop
mov
pushf
orb
pop
inc
rcrl
xchg
mov
pushf
mov
jle
stos
cmpsb
lahf
adc
das
inc
arpl
icebp
add
pushf
lahf
mov
sub
mov
jecxz
mov
jge
mov
into
adc
fldcw
jle
cmp
fisubl
js
js
adc
add
mov
cmc
pusha
lods
jmp
repz
roll
ss
sbb
fsub
ficoml
in
sub
data16
cs
mov
out
xor
movsb
or
adc
gs
jge
sbb
out
jo
xchg
mov
outsb
test
xor
xchg
clc
sub
xchg
pop
or
dec
cltd
or
jns
fimull
aaa
dec
adc
popf
or
mov
mov
std
cmpsl
jnp
jle
sbb
mov
repnz
ret
ret
outsb
mov
jo
add
add
push
push
test
or
jp
out
jg
fidivl
pusha
inc
sub
jecxz
movl
inc
lcall
mov
add
adc
call
sbb
sub
sbb
iret
outsl
xor
ret
mov
insb
imul
mov
sub
icebp
ret
or
outsl
orb
pop
push
cmp
jns
jb
cmpsl
dec
cld
testl
sbb
jbe
or
mov
outsb
mov
jge
jmp
or
mov
shrl
or
pop
mov
xor
sbb
shll
dec
cli
adc
cmp
mov
loopne
push
pop
cmp
andb
push
inc
add
xor
in
cmp
sub
and
fs
dec
std
stos
xchg
outsb
sar
xor
push
cld
dec
cmp
sti
addl
or
inc
adc
test
mov
testb
jnp
pop
cmp
fstps
cld
mov
sbb
mov
push
xchg
test
stc
cmp
dec
hlt
jge
pop
addl
nop
mov
jg
inc
push
sahf
fdivrp
sbb
inc
dec
ds
fcmovnb
push
movsb
add
adc
push
ds
js
xchg
cmpsb
pop
adc
and
dec
xchg
pop
push
mov
out
repz
xchg
test
daa
outsl
out
cmp
aas
neg
scas
cmp
jae
xchg
cwtl
mov
dec
inc
mov
cmp
jae
push
xchg
inc
lret
xchg
stc
sbb
mov
mov
test
sub
and
daa
popl
mov
jecxz
lods
mov
ret
pop
mov
fisttps
push
sbb
shll
jp
fisubl
push
fs
push
int3
aam
lcall
ret
mov
loope
mov
fincstp
xchg
xlat
outsb
lock
push
cmc
adc
and
cwtl
insl
fcompl
jno
test
into
and
mov
out
popf
mov
xor
je
xor
lods
cmp
adc
imul
mov
sbbb
outsl
push
push
and
dec
rcr
push
xor
xchg
xchg
sbb
call
mov
jmp
xchg
xor
pop
mov
test
pop
sbb
test
push
imul
cmp
add
mov
fldt
xchg
shlb
and
mov
mov
ss
mov
dec
adc
fwait
mov
push
es
test
jp
mov
je
fldcw
mov
mov
push
adc
loopne
pop
cmp
lods
jg
fadds
dec
mov
gs
cmp
mov
cmp
aad
jnp
cmpsl
int3
jno
scas
and
push
loop
sbb
pop
mov
fiadds
mov
add
push
mov
mov
repnz
sub
mov
mov
or
shrb
adc
arpl
or
fsubrs
adc
movsb
pop
addb
repnz
inc
mov
push
lret
xlat
and
inc
mov
add
cmc
mov
add
popa
push
ds
int3
cmpsb
out
inc
inc
hlt
jae
or
or
mov
inc
outsl
cmp
aad
push
repz
fstpl
xchg
cs
jb
sub
ret
insb
jbe
xor
test
out
jmp
sbb
xchg
lcall
push
mov
mov
mov
cmp
cmp
and
add
adc
stc
les
mov
xchg
sti
lock
mov
add
push
stos
rorl
push
sahf
leave
fwait
and
addb
mov
adc
outsl
pushf
sbb
mov
lahf
jle
cmp
ffreep
jmp
lock
and
insb
mov
inc
pushf
xchg
mov
dec
push
mov
cmpsl
adc
push
lods
popf
cmp
add
rclb
aas
xor
jo
arpl
stos
ret
aaa
add
mov
sub
lea
xor
cli
outsb
decl
outsb
aaa
xchg
mov
pop
push
inc
cmp
outsl
cmp
or
lods
rolb
jbe
stos
sbb
dec
push
popf
pop
cld
mov
pop
jae
stc
mov
mov
pop
ret
mov
cmp
xor
fbld
outsl
fcmovnu
setae
cmc
dec
mov
popl
les
lahf
mov
inc
or
jmp
dec
sbb
divl
mov
les
fstl
and
push
out
outsl
icebp
call
fsubs
rcrb
mov
ds
pop
pop
xor
roll
mov
aam
and
mov
xchg
lret
lock
sarb
jge
pop
ja
pop
xor
mov
mov
xchg
dec
incl
dec
movsb
cwtl
jmp
mov
leave
sub
inc
ss
stos
sbb
jne
xchg
iret
outsl
rorl
mov
js
dec
add
mov
mov
lcall
inc
lea
aad
leave
mov
out
divb
loope
adc
mov
mov
shlb
lea
loop
or
jno
ds
sub
std
ret
xchg
test
mov
daa
test
bound
pop
sub
sbb
outsl
mov
mov
mov
inc
test
mov
popf
or
jb
dec
xchg
outsb
movsb
dec
test
and
jno
testl
pop
iret
push
push
hlt
bound
pop
in
inc
sub
hlt
mov
into
pop
xor
add
jge
scas
fnstenv
stos
mov
adc
adc
bound
out
les
cmp
mov
xchg
cmp
cmc
cs
and
lods
testl
orl
out
dec
test
ret
sbb
or
mov
jl
add
push
jmp
inc
pop
fldenv
push
ret
not
fsubs
mov
xchg
movsl
pop
mov
lods
movsl
mov
scas
call
jmp
fsubp
in
popf
push
jl
mov
sub
cmp
js
ret
xlat
rolb
inc
out
lock
daa
cmp
xor
push
mov
push
js
in
je
mov
adc
pusha
stos
push
js
pushw
jnp
xorl
pop
les
add
dec
clc
cld
mov
ja
jns
dec
shr
mov
xchg
ljmp
stc
mov
cmpsb
int
jno
mov
mov
and
push
pop
repnz
and
into
popf
mov
mov
test
fiaddl
lret
sub
pop
xlat
push
lods
ss
pop
add
or
aaa
shll
jbe
push
pop
jns
xor
out
sub
icebp
push
lahf
dec
push
in
push
hlt
sahf
mov
push
inc
xchg
leave
ret
cmp
scas
pop
mov
stos
int3
iret
push
lret
aam
adc
out
aad
pop
in
dec
add
dec
and
push
test
imul
pushf
sub
cltd
cmpsb
and
pop
and
sub
mov
jl
push
stos
fwait
lds
lock
ljmp
fadds
aaa
mov
popf
and
fcoml
gs
ljmp
out
mov
adc
loop
insb
ss
inc
mov
sub
lods
in
and
mov
dec
nop
loop
pushf
adc
cmpsl
mov
clc
cmp
or
stos
sbb
pop
stos
aam
pop
sti
fidivl
mov
and
cmp
test
push
inc
and
push
fisubl
mov
xchg
mov
sarl
flds
lret
jl
inc
push
jns
dec
sbb
xlat
mov
lahf
jo
test
subb
mov
cltd
lds
stos
pop
enter
lock
sbb
push
jmp
popa
mov
imul
adc
adc
or
aad
in
push
sbb
pop
mov
out
adc
cmpsl
lcall
out
enter
sub
pusha
xor
cltd
movsl
xor
bound
lea
and
out
mov
push
mov
lcall
mov
push
xchg
test
fstl
sahf
pop
or
xchg
mov
jb
je
mov
je
mov
lods
lea
das
jb
pop
shrb
pushf
mov
mov
or
out
daa
sahf
sbb
push
shlb
cltd
push
call
fcmovne
mov
push
fwait
dec
das
mov
mov
lret
movsl
movsl
mov
jle
and
inc
pusha
imul
mov
push
in
lea
mov
jbe
xchg
iret
adc
stc
add
adc
and
adc
xchg
test
sbb
mov
sarl
pop
cmp
xchg
call
int
mov
sbb
and
cmp
data16
mov
mov
push
and
adc
add
les
sub
inc
dec
lock
fimull
cmpsb
inc
jae
cltd
into
dec
out
and
dec
lea
jbe
rorb
adc
cmp
rolb
aaa
data16
scas
jne
jge
or
lcall
inc
clc
pop
data16
adc
loop
jmp
ds
pop
aam
ja
leave
fnstenv
sbb
iret
lret
les
loop
push
movsl
out
cmp
inc
in
nop
add
push
jmp
aas
fiaddl
je
mov
push
cltd
xchg
dec
imul
ds
and
dec
xchg
dec
pushf
aam
sti
jmp
popa
xor
cli
add
es
lret
addr16
jno
sbb
pop
lock
mov
push
jp
ja
inc
movsl
and
cmpsl
test
js
lret
add
add
notl
mov
scas
jecxz
cmp
lahf
jne
jno
sub
test
inc
inc
pop
lret
adc
addb
adc
adc
sbb
push
mov
mov
in
dec
sbb
sbb
xor
jle
lcall
jno
or
push
push
cld
or
ja
or
stos
bound
fldlg2
adc
jo
fcmovbe
xor
pop
sub
das
cmpl
cmp
js
loop
mov
addb
cld
mov
ja
add
push
mov
cwtl
xor
enter
sbb
adc
je
das
jecxz
or
aad
mov
mov
aaa
inc
and
movsb
frstor
mov
mov
fmuls
sti
mov
scas
push
ja
or
rcll
lds
xor
aaa
and
push
dec
pop
xchg
shll
cmp
inc
xor
adc
cs
sub
push
lahf
ljmp
cld
cmc
adc
insl
frstor
incb
lods
in
push
pop
sbb
orb
js
mov
cmpsb
cmp
or
or
repnz
cmp
lret
push
fildll
fcmovu
pop
xor
mov
jmp
call
push
sub
in
inc
sahf
out
dec
mov
js
mov
inc
sbb
xor
loope
sub
cmp
fcompl
in
daa
xchg
sbb
lret
rol
cmpsb
xchg
jge
outsb
mov
sbb
fisttps
repz
add
out
jb
mov
add
scas
movsl
aam
xchg
int3
les
negl
cs
sahf
shld
ja
mov
push
push
daa
andb
mov
nop
pop
shlb
adc
in
jmp
mov
gs
cwtl
gs
or
dec
push
jno
mov
cmp
add
add
sbb
xchg
sbb
inc
cltd
mov
xorb
or
sbb
xchg
gs
loop
es
dec
arpl
add
out
inc
out
push
loopne
dec
inc
out
and
cmc
lods
imul
xchg
mov
aaa
push
in
adc
xchg
in
sub
mov
lds
inc
pop
pop
stos
and
pushf
in
jns
inc
in
outsb
add
and
jmp
fs
mov
sub
or
lahf
test
or
pop
insl
cmpsl
xchg
mov
jl
scas
pop
aaa
mov
mov
push
xlat
pusha
shll
dec
lods
xlat
sahf
fwait
and
mov
pushl
cmp
gs
cmp
jae
jmp
subb
int
jbe
adc
or
push
push
rcll
xchg
pop
ja
cmpb
sub
xor
icebp
dec
sbbl
jge
cmp
in
call
mov
mov
sbb
into
sub
jae
cmpsl
fcmovbe
repnz
faddl
or
jmp
cmpsb
push
movsb
add
shlb
mov
ret
pop
lea
daa
xchg
jae
jbe
jno
aas
unpcklps
add
insl
popa
inc
xchg
and
clc
cwtl
das
inc
mov
dec
cmp
imull
lods
pop
mov
pushf
adc
cmp
pop
rol
jbe
xchg
mov
adc
test
ds
mov
popa
push
mov
lcall
xchg
test
int
push
stos
repz
sub
pushf
mov
jecxz
pop
lahf
cmp
adc
pusha
cmp
lret
xchg
call
popf
xchg
sub
ljmp
adc
inc
daa
aad
push
out
mov
mov
push
inc
jmp
inc
fs
addr16
and
loopne
adc
stc
push
int3
es
add
je
std
dec
pop
mov
jno
inc
push
mov
or
and
xchg
testl
xor
pop
xor
daa
sbb
xchg
sub
add
aas
xchg
xor
push
pusha
xor
jg
movsb
lods
fdivl
or
jb
aaa
dec
add
and
cmpsl
sub
mov
adcb
scas
adc
pop
stos
dec
inc
insl
push
adc
std
cmp
mov
pushf
sbb
popf
inc
adc
cli
mov
mov
lods
xor
mov
xor
or
adc
or
push
mov
outsb
cltd
insl
cltd
xchg
pop
outsb
and
or
jge
stos
ret
cld
arpl
push
movsl
jbe
aas
into
adcl
ret
mov
lods
sub
lret
idivb
or
adc
insb
lahf
inc
mov
jo
or
insb
or
fwait
je
push
sub
ret
push
cli
sbb
rolb
ds
scas
addr16
sub
dec
mov
imul
sbb
inc
inc
xor
mov
xor
add
aas
mov
add
mov
cmpsb
sub
fdivrl
cmpsb
hlt
cmpl
lcall
push
pop
clc
rcll
std
mov
jmp
enter
cmp
subl
ds
mov
mov
fisttpl
mov
adc
xchg
clc
mov
sub
push
psubsb
xorb
iret
mov
lods
sub
nop
int
std
bound
pop
cmp
repnz
inc
xor
push
xor
push
sar
pop
loopne
mov
inc
sub
fadd
xchg
es
movsb
scas
repz
xor
mov
xchg
mov
jg
push
cmp
dec
mov
push
or
cmp
fcmovne
dec
leave
jmp
hlt
negl
ficompl
fwait
ret
mov
in
mov
add
test
add
mov
cmp
mov
dec
adc
fwait
xchg
jg
adc
addr16
std
jne
shll
cmp
arpl
in
mov
fisubl
sbb
pusha
jmp
sub
inc
jne
out
jb
aas
cli
lret
jmp
pop
iret
push
dec
jle
in
xor
mov
dec
dec
ret
lret
dec
out
inc
jo
cltd
sbb
push
mov
add
into
xchg
cmp
fs
dec
adcb
lea
mov
lcall
xchg
cmpl
into
imul
mov
in
jl
mov
push
xchg
fsts
outsl
xchg
imul
dec
sbb
xor
push
scas
pushf
lods
rclb
imul
int3
fidivrs
iret
pop
and
dec
push
insb
add
mov
push
in
fsubrs
xor
xlat
push
leave
lcall
out
idivb
lahf
js
fldl
lods
add
push
dec
stos
dec
mov
pop
insb
pop
icebp
mov
or
loop
mov
aam
cltd
push
rol
dec
push
lods
or
xchg
call
repz
push
and
xchg
fbstp
loop
loope
out
into
pop
jge
lock
icebp
mov
cmp
jnp
or
dec
xor
aad
xor
cmp
add
outsl
idivb
jmp
jbe
xlat
xor
jae
fmul
inc
jmp
ljmp
sbbb
cmp
fstpl
add
popf
ds
rclb
jae
inc
mov
scas
imul
inc
loopne
mov
xor
pop
sbb
dec
sub
das
add
ret
imul
loopne
pop
push
inc
adc
test
lock
push
out
fsubrs
je
ds
lahf
repnz
gs
jecxz
add
sbb
and
push
pop
jne
stos
or
iret
imul
fwait
jo
data16
sbb
push
mov
xor
test
inc
mov
xchg
stos
fsts
sbb
sub
sbb
pusha
dec
insb
cmpsb
sub
push
outsb
into
xchg
mov
xchg
mov
aam
out
loope
pop
sub
or
lods
adc
push
ror
sub
or
cmp
mov
movsl
mov
cmp
jne
rcll
dec
out
inc
imul
loope
aas
cwtl
ret
mov
push
sti
mov
sub
inc
mov
rcrb
dec
cs
cmp
test
cmc
add
fnstsw
adc
mov
scas
test
cmp
jno
stos
xchg
pusha
js
test
stc
jg
fcomp
mov
jp
xor
jns
cmp
repnz
pop
sub
cmp
in
pop
popf
mov
ret
or
test
jle
fadd
jne
scas
bound
xor
xor
nop
cmp
jecxz
aas
cmp
inc
cmp
push
mov
pop
sbb
fsubl
ljmp
pop
mov
fadd
push
leave
movhps
sub
xor
dec
jb
mov
repz
aam
int3
lret
jnp
pop
pushf
cmp
out
jae
js
cltd
test
stc
xrelease
xchg
and
sub
cmovg
fists
mov
inc
scas
insl
xchg
mov
out
xchg
adc
movsb
adc
das
clc
movsb
and
sbb
int3
dec
adc
push
pop
out
xor
dec
ret
pop
mov
xor
xor
cmp
xor
fistl
mov
push
and
ds
faddl
mov
add
lahf
imul
add
repz
lds
cmc
dec
dec
lahf
add
out
ljmp
pop
jecxz
sbb
ret
pop
mov
jnp
mov
adc
adc
das
push
mov
jb
mov
decl
or
out
or
inc
dec
add
or
dec
dec
aas
cld
add
jg
repnz
test
movsb
daa
mov
dec
clc
rorl
movsb
mov
jg
out
add
js
cmp
adc
add
out
pop
adc
pusha
mov
or
jl
and
ds
jno
aas
pop
inc
popa
pop
sahf
es
add
mov
lcall
jle
in
neg
mov
sbb
fistps
addl
or
inc
ljmp
adcl
pop
lret
cmp
pop
push
stos
sbb
xchg
gs
pop
daa
scas
jno
ret
fcmove
mov
or
gs
or
ret
push
mov
enter
sbb
sbb
or
pop
push
pop
pop
insb
inc
xchg
andb
test
and
aad
out
push
mov
cmp
add
push
add
sub
mov
loope
adc
mov
cmp
and
dec
fs
pop
mov
in
pusha
and
inc
fs
jns
cltd
test
lea
sbb
movsb
mov
ds
xchg
mov
or
lcall
dec
mov
sub
or
idivb
xor
fldcw
lea
inc
loop
js
adc
mov
cmpsl
mov
push
aam
or
lcall
pop
xchg
cs
mov
loopne
cmpsb
insl
je
xor
lret
sub
cs
std
dec
adc
fistps
push
pop
dec
jg
out
push
sub
cmpxchg
ljmp
daa
jge
pop
fs
inc
js
in
mov
cmc
and
call
mov
mov
adc
xor
std
sub
shrb
add
fldenv
adc
inc
adc
jb
xor
mov
orb
mov
add
push
imul
imul
and
inc
inc
cmc
pop
jne
mov
add
mov
fs
sbb
outsb
cmp
sub
cwtl
add
push
push
repnz
nop
xchg
add
scas
mov
push
or
out
aaa
shl
inc
pushf
pop
jae
andl
pop
je
cli
sbb
adc
fsubr
jnp
fadds
leave
sti
sbb
loopne
sbbb
and
adc
gs
pushf
dec
sub
xchg
shlb
mov
push
and
push
scas
push
mov
jnp
or
pop
inc
rol
ret
fisttps
dec
popl
orl
test
js
xchg
movsl
lcall
mov
popa
pop
fcoml
imull
sub
arpl
cmc
xchg
sahf
jmp
xchg
lahf
fidivs
xchg
cmc
movsl
syscall
mov
push
pushl
fimuls
or
push
int3
enter
inc
and
mov
int3
xor
mov
loope
or
mov
out
push
sti
popf
xchg
test
and
push
gs
ja
bound
data16
push
cmp
mov
sub
add
mov
cmp
out
test
int3
dec
adc
add
jb
out
cmpsb
sbb
ljmp
cmp
divb
aad
enter
pushl
fnstcw
adc
mov
xor
inc
test
mov
push
mov
jnp
andb
jb
test
popf
mov
jle
stc
lret
xor
cmp
pop
mov
add
jmp
cmpb
adc
ds
aas
pop
jg
cmpsl
outsl
and
adcl
decl
mov
add
hlt
in
mov
sub
sbb
out
xchg
das
and
and
pop
fwait
add
shr
daa
jae
cli
test
xor
jg
add
cmp
mov
popa
or
outsl
pop
push
movsl
xor
jecxz
dec
lods
push
mov
into
cmc
pop
xor
into
stos
pop
mov
jb
loopne
loopne
in
fstpl
int
xchg
jge
out
mov
xchg
push
jnp
int3
xorl
dec
fwait
ret
mov
lret
orb
add
and
sub
movsl
push
repnz
adc
lods
ljmp
jge
fdivp
ud2
out
jle
add
xlat
pop
cmp
mov
jne
xor
ljmp
jmp
cmp
push
add
aaa
imul
notb
das
loope
xchg
xchg
adc
in
movsb
dec
sub
je
jns
mov
push
pop
pop
mov
je
inc
sub
mov
fdivrp
repz
test
inc
enter
add
jl
leave
sbbb
sub
push
clc
pop
sbb
outsl
loop
test
out
xchg
addb
xor
outsb
or
mov
dec
xchg
pop
sub
or
dec
aas
mov
mov
in
sub
popa
inc
xorl
imul
int3
es
cld
xlat
popa
adc
pop
cmp
and
lods
mov
or
addr16
ljmp
or
ds
pushf
in
sahf
mov
sar
adc
xor
jge
sbb
aas
stc
in
push
rorl
cmpsb
mul
inc
mov
push
dec
cmp
cli
insb
sub
push
sub
shll
xchg
scas
xchg
jg
inc
mov
stos
mov
push
pop
inc
mov
out
cmp
mov
mov
push
clc
sub
pop
call
cli
mov
outsb
xor
jno
outsb
stc
jnp
xchg
push
pop
mov
iret
ja
xchg
inc
pop
cli
jo
cmp
data16
lret
jae
adc
loopne
push
cwtl
ljmp
pop
jae
roll
movl
sti
jns
push
add
test
mov
adc
mov
pusha
out
repz
fisubl
insl
adc
push
xor
xor
lock
ljmp
mov
out
lds
inc
les
cmpsl
scas
jno
jecxz
movsb
ret
xchg
lock
cmpsb
mov
or
adc
adc
movsl
sbb
ret
imul
fidivl
add
mov
sub
subb
sbb
mov
xor
dec
mov
ds
js
out
ror
fs
or
push
jl
cwtl
outsb
cmp
push
or
and
and
in
imul
aam
pop
fnstcw
test
mov
nop
pop
insl
dec
repz
and
jmp
pop
dec
dec
ret
arpl
or
aad
cli
push
lahf
lret
stos
mov
out
lea
jbe
xchg
jae
stc
jge
jns
fists
test
call
push
mov
sbb
inc
int3
pop
add
fcmovu
and
icebp
decl
push
xor
mov
aas
ud0
gs
int
lret
add
aas
aaa
pop
mov
std
stos
pop
add
jns
or
adc
insb
out
push
divb
dec
ss
mov
jle
imul
jae
movsb
inc
fnstsw
lea
mov
je
xor
out
sbb
mov
add
mov
cmp
mov
enter
and
add
push
mov
adc
aam
sbb
and
out
mov
jbe
sbb
jg
inc
lcall
sahf
ret
mov
repz
out
arpl
mov
into
add
movsl
test
sbb
xchg
jl
inc
outsb
fsub
lret
mov
test
in
adc
and
int3
nop
cltd
shll
jp
xchg
mov
imul
xchg
sub
xor
cli
mov
icebp
addl
add
std
insl
ss
inc
test
pop
int
negl
xor
ljmp
nop
mov
pusha
cs
out
lret
mov
jae
aam
out
push
sub
out
pavgw
mov
dec
cli
test
push
js
push
sub
in
leave
xchg
pusha
sti
and
ljmp
lcall
cld
out
test
stc
lea
and
dec
xchg
stc
int3
sbb
adc
pop
pop
cs
dec
test
ret
mov
cmpl
mov
jg
gs
out
cmp
mov
lds
xor
mov
outsl
push
dec
sbb
addr16
imulb
or
aas
mov
mov
inc
loope
call
ljmp
xchg
ret
dec
addr16
mov
dec
cmc
sti
gs
rorb
mov
dec
cli
cs
sahf
or
mov
jecxz
sbbl
lock
push
nop
jns
push
lds
jp
sarl
dec
dec
sbb
outsb
cmp
stc
mov
push
dec
mov
js
loop
subl
xor
jno
cmc
test
pop
mov
outsl
pushf
in
stc
aam
jp
mov
pop
sub
sub
adc
mov
dec
or
mov
push
icebp
jl
test
xchg
xchg
mov
pop
inc
mov
cmp
imul
fistps
into
jecxz
add
sbb
cmp
fisubs
pop
movaps
mov
dec
daa
jo
mov
dec
aam
cmpl
es
sbb
aam
aad
shlb
jle
dec
fwait
lea
inc
jb
adc
and
xor
jno
inc
pop
dec
dec
cmp
pop
out
fdivrp
sbb
or
gs
jl
dec
outsb
lods
data16
sbb
ret
add
test
das
add
mov
fwait
xchg
pop
or
or
jnp
scas
add
sbbl
jle
xor
sub
lcall
xlat
loopne
xor
ret
out
out
xchg
out
addl
sub
add
lds
mov
inc
incl
cld
push
xor
fldl
and
stc
xor
loope
and
fmul
sbb
jl
jne
dec
insb
xor
popa
mov
cmp
xchg
cmp
ja
jmp
push
push
out
dec
adc
cmpsl
sar
jl
or
inc
addl
pop
ss
mov
ud2
cwtl
xor
inc
xrstor
sub
fcmovnbe
push
movsb
push
xchg
in
adc
or
leave
in
movsl
xchg
addr16
add
popa
or
or
rorl
xor
inc
out
push
testb
enter
je
movsl
mov
div
testl
sub
ret
add
int3
out
jmp
cwtl
rorl
mov
sub
pop
and
lret
push
cmp
fbld
inc
out
ja
ljmp
push
out
stc
inc
movsb
add
popa
es
and
int3
into
or
or
into
call
sti
loope
adc
stos
xchg
cmp
cmp
js
int3
push
add
pop
sub
out
inc
and
aas
ds
add
js
sub
les
nop
in
ja
pop
dec
repnz
mov
out
xor
sub
mov
scas
sbb
jecxz
test
mov
iret
xor
out
divb
bound
inc
inc
js
cmp
loope
xchg
xor
mov
scas
nop
mov
movsl
xorl
jno
mov
jecxz
test
scas
flds
rolb
lret
out
test
pavgb
xor
fistps
ret
gs
sbb
insb
or
test
cltd
out
or
mov
jmp
mov
push
rcll
mov
and
lret
hlt
mov
pop
add
mov
stos
inc
cs
add
mov
push
ret
pop
jp
inc
and
addr16
push
shl
imul
fadds
adc
push
loop
mov
mov
in
ficomps
xchg
out
out
dec
mov
lods
mov
lahf
cmp
adc
lea
sbb
mov
and
and
rclb
inc
cmc
xchg
fcompl
mov
inc
xchg
push
xchg
lds
icebp
xchg
xor
lock
push
jae
sbbl
and
jg
je
add
cmp
insl
dec
push
pop
xchg
xorb
mov
bound
push
xor
pop
inc
stos
shll
xchg
pop
test
fwait
lret
jmp
jecxz
ljmp
fadd
xchg
hlt
xchg
cmp
mov
jns
and
pop
or
in
insb
pop
fildl
cwtl
cld
or
movsb
adc
scas
dec
pop
jl
mov
sub
out
cmp
jbe
je
and
push
sti
std
mov
or
outsb
pop
xchg
in
cltd
add
ja
xor
xchg
or
fs
inc
ret
mov
xchg
dec
mov
lahf
mov
add
xlat
fwait
in
mov
dec
adc
push
jb
iret
xlat
and
int3
sub
add
mov
pop
cltd
insb
mov
ficoms
lock
fs
aas
das
pop
mov
push
imul
mov
and
cli
push
sbbl
orl
out
out
arpl
cmpsb
sti
incl
mov
sahf
or
ret
mov
dec
xor
push
dec
mov
lods
push
push
xchg
push
outsb
out
cwtl
hlt
and
lods
scas
pusha
push
jnp
shll
daa
add
testb
mov
lock
out
fsubrs
and
cmp
loopne
leave
stos
loop
and
dec
pop
xchg
mov
imul
in
subl
push
jns
and
sbb
test
addr16
jge
mov
call
shlb
mov
mov
pop
xchg
stos
lahf
ljmp
mov
in
adc
out
xor
xor
stc
add
lea
jne
imul
xchg
cwtl
ljmp
and
inc
mov
dec
pop
jecxz
push
imul
mov
inc
rcrl
cwtl
adc
int
clc
shl
or
rcll
mov
or
sub
add
test
sbb
cld
dec
jne
mov
cmp
jmp
mov
outsb
les
shlb
inc
js
lret
push
cmpsl
dec
jl
sbb
cmpsl
xor
fiaddl
test
sbb
aam
or
adc
insb
mov
sbb
stc
xchg
fistl
sbb
cmp
nop
xchg
fldcw
adcl
pop
test
xchg
mov
imul
and
pop
jbe
xacquire
dec
rclb
sub
cltd
push
jle
sbb
add
icebp
cmpsl
mov
cmc
and
sbb
movsl
mov
pop
int3
aam
std
sbb
fmuls
adc
jl
cmp
lcall
jo
sub
sbb
cmp
out
sub
rolb
pop
shlb
cltd
xor
lahf
mov
gs
in
aas
mov
sub
cmp
xor
mov
lcall
push
xchg
pop
notl
js
add
inc
and
orb
and
mov
mov
imul
lods
adc
fsub
jae
add
sub
sar
inc
jmp
mov
insb
mov
push
lods
movsb
cmp
insl
dec
popa
out
int
mov
mov
or
aad
mov
movsb
lods
movsb
or
and
sub
push
inc
loop
mov
mov
jmp
and
ja
std
jns
mov
enter
ds
adc
sub
or
add
dec
push
jae
sahf
or
cwtl
pop
fdivs
test
and
aad
cmp
lock
aas
cmp
mov
js
mov
js
bound
push
jmp
imul
mov
adc
test
mov
add
lcall
xor
in
popf
out
ljmp
push
loope
ljmp
mulb
repz
mov
inc
pushf
fsub
out
push
imul
push
insb
jo
jae
mov
and
nop
loop
sar
sti
dec
add
sbb
mov
pusha
pop
insl
sub
inc
xor
pop
jbe
mov
outsb
stos
xor
inc
dec
add
or
adc
int
mov
xchg
rcll
xor
inc
frstpm(287
lret
dec
movsb
ret
in
or
nop
icebp
mov
push
in
loope
shrl
pusha
inc
aaa
push
aas
sbb
jb
daa
or
pop
mov
frstor
mov
jecxz
stc
push
sbb
inc
les
scas
mov
pushl
into
loopne
mov
iret
in
ds
les
jp
mov
mov
aas
adc
mov
stos
insb
into
cld
pop
adc
mov
add
sub
sbb
in
test
mov
out
les
aas
test
push
adc
adc
mov
repnz
test
or
lods
pop
adc
xor
adc
imul
adc
in
decb
inc
cmc
pop
lods
xchg
mov
fldl
out
sub
sbb
movsb
pop
cld
jo
shrd
jb
adc
dec
jle
stc
roll
jo
stos
stc
stc
mov
xor
out
call
popf
cmp
nop
data16
sub
loopne
outsl
add
aad
mov
andl
push
mov
jnp
cld
out
sub
mov
popf
xchg
sbb
pop
arpl
imul
or
mov
pop
fdivrs
popf
sub
push
icebp
pop
xchg
pushl
add
and
sbb
imulb
fucomi
fdivrl
scas
sti
loopne
hlt
fisubl
test
fsub
mov
pop
in
mov
fwait
push
pop
or
in
enter
aad
fistpl
mov
lods
sub
bound
sbbb
int3
pusha
and
sbb
jo
sub
xor
rcll
xor
pop
mov
mov
add
subl
sbb
jb
pop
push
addl
pop
mov
dec
cmpsl
test
mov
dec
es
cmp
pop
dec
sub
inc
ljmp
outsb
sub
je
shll
daa
sbb
arpl
sub
sbb
les
into
lahf
cmp
je
hlt
dec
imul
jl
pop
subb
adc
xchg
test
inc
outsb
jb
adc
je
daa
lret
inc
mov
fdiv
push
int
js
push
mov
cmp
rorl
cwtl
pop
les
mov
aaa
pop
mov
sbb
scas
jge
loop
sub
sbbl
pop
dec
mov
je
xchg
pop
movsb
loop
adc
mov
push
cli
dec
sbb
icebp
fcmovb
repnz
ret
mov
mov
pop
out
add
out
jmp
xchg
fnstsw
insl
xlat
cld
cli
lock
fscale
push
fildl
and
aam
in
sub
cs
enter
xor
mov
ds
cmpsl
sbb
pop
aas
mov
jno
and
cmp
dec
mov
sbb
movswl
and
repz
sbb
mulb
adc
js,pn
pop
out
cmp
dec
pop
sti
xchg
imul
pushl
xor
fiadds
cmp
and
das
fs
sbb
dec
or
cmpsl
pusha
int
popa
inc
and
and
add
jae
xchg
loopne
sub
xchg
inc
xor
jp
or
test
shrl
imul
mov
push
or
jge
sub
loope
scas
mov
pop
xchg
dec
aad
sbb
std
popf
mov
pop
push
scas
fmuls
xor
sub
mov
mov
add
dec
add
aas
sbb
stc
std
cltd
xchg
fcoms
mov
mov
push
dec
aaa
clts
or
out
loopne
insb
mov
jl
mov
imulb
cmp
test
movb
inc
mov
add
in
mov
lea
addl
sarb
popf
jbe
sub
rcrb
mov
bound
jge
inc
mov
popf
jb
push
nop
imul
xor
dec
jg
inc
mov
jecxz
cmp
loope
mov
mov
jo
mov
std
enter
ljmp
xor
shlb
mov
jge
and
movsl
stc
cwtl
sub
adc
outsl
ja,pt
or
or
loope
outsl
sar
into
fsubrs
sub
push
xor
mov
sub
ss
jbe
lods
iret
dec
push
popf
js
or
pop
loop
lock
and
es
int
add
repz
idivb
push
cs
sbb
cmp
cltd
add
push
scas
jnp
out
push
sbb
mov
add
and
jno
xor
clc
gs
js
out
dec
adc
dec
and
jp
cmp
pop
je
test
push
mov
add
pusha
sub
aam
fldt
loopne
lahf
pop
sub
test
fldenv
mov
sbb
mov
ja
xor
inc
cmp
cmp
inc
adc
cli
adc
inc
jo
int
xchg
dec
in
pusha
adc
scas
out
or
imul
and
sbb
adc
pop
jmp
test
fisubl
add
ret
gs
push
inc
cmpsl
xor
dec
pop
dec
repnz
xor
out
repnz
sbb
dec
jle
pusha
fstl
sbb
fwait
das
xchg
js
jnp
cli
scas
inc
mov
xchg
mov
push
les
and
push
pop
movsl
xchg
push
and
fs
sbb
xchg
dec
stos
ss
or
cmpsb
iret
add
dec
stos
xchg
mov
adc
int
or
sub
xchg
cmpsb
jmp
testb
ficompl
mov
js
in
push
inc
rsqrtps
mov
jmp
fistpl
imul
and
add
and
movsl
mov
inc
or
sub
dec
cmp
and
jecxz
fimull
cs
enter
mov
mov
cmp
cmp
mov
add
and
out
lret
and
sub
arpl
pop
cli
cmp
or
cmc
xor
push
sbb
add
adc
sbb
mov
lahf
xchg
stos
and
imul
pop
inc
mov
ret
push
shr
mov
add
jmp
sub
fmuls
sub
stos
scas
fadd
and
add
out
jge
fstl
pop
in
mov
pushl
imulb
movsl
repnz
aaa
daa
sub
repz
hlt
out
lods
aas
insl
arpl
cli
jge
test
gs
test
es
mov
movsl
dec
rorb
add
stos
out
das
inc
push
xor
ret
jge
sub
sbb
aas
movsb
icebp
adc
cmc
les
mov
adc
or
scas
jge
add
inc
push
faddl
aaa
sbb
mov
xchg
pop
or
call
add
pop
out
aad
cmpb
ds
mov
pushf
sub
fcoms
sahf
sbb
lret
test
pop
sbb
add
scas
lods
dec
fxch
out
jmp
pop
jb
in
and
std
in
xchg
push
pop
fs
sub
mov
xor
loope
jo
aas
xchg
mov
cmp
mov
gs
pop
xor
jp
xchg
jb
jne
shl
sub
negb
and
sub
std
stos
inc
and
pop
jne
mov
insb
and
cmp
scas
mov
mov
mov
push
daa
popa
push
inc
ficompl
aam
pop
jbe
outsl
pop
int
push
push
lds
in
or
jl
add
imul
push
inc
js
xchg
lock
xchg
leave
jp
lods
jo
pop
out
test
mov
mov
mov
test
iret
push
ljmp
les
pushf
leave
stos
sbb
aas
dec
mov
lods
sub
mov
mov
jae
fcoms
sub
mov
ja
xchg
cmp
aaa
into
test
scas
inc
jo
pop
je
test
cltd
in
popa
push
dec
aaa
lea
shlb
test
ja
sub
jnp
push
mov
cmpsl
adc
leave
sub
pop
popf
lods
loop
and
imul
pusha
add
int3
add
sbb
xchg
push
cmpsl
pop
rclb
sar
mov
imul
xchg
mov
cmpsb
mov
hlt
inc
adc
fwait
or
jb
jbe
xchg
mov
iret
outsl
out
jns
lret
test
push
gs
adc
push
shlb
das
test
and
les
or
mov
mov
cld
cltd
sub
pusha
and
jle
inc
in
xchg
loop
dec
ljmp
inc
fnstcw
sub
push
xor
daa
call
popf
ds
es
test
hlt
sbb
repnz
cmc
add
xor
and
jb
dec
mov
and
push
sbb
xchg
rclb
in
inc
mov
sbb
fwait
mov
push
xor
mov
lds
std
mov
sbb
push
mov
xor
jecxz
cs
or
sbb
hlt
mov
cld
push
jo
into
pop
mov
push
add
mov
movsl
dec
and
test
add
jle
insb
or
shl
and
in
lcall
push
loope
jb
and
lock
aad
pop
fdivrl
sbb
inc
add
arpl
xchg
and
and
test
push
or
stos
imul
mov
stc
incb
pop
mov
repnz
pop
sahf
inc
push
mov
subb
inc
nop
add
sar
movsl
jecxz
scas
es
jecxz
movsb
les
cmc
pop
cmpsb
or
dec
jae
std
mov
pop
sti
mov
push
loop
aas
jns
pusha
jmp
cld
cmp
out
cmc
test
inc
lahf
mov
jns
cmc
test
inc
and
or
imul
mov
adc
jl
cs
sub
in
mov
jl
add
and
jns
and
push
shll
jo
and
cmc
test
jecxz
jg
fcomps
jecxz
shr
add
aas
lods
dec
shlb
movsl
or
inc
jns
add
ret
mov
mov
dec
enter
inc
ret
in
in
sub
pop
jb
lea
mov
fldenv
bound
cmp
jbe
aad
mov
outsb
repz
lds
dec
insb
das
xor
lret
int3
dec
stos
push
psrlq
pop
jp
in
mov
push
cltd
getsec
rclb
cmp
xchg
mov
adc
fdivrl
stos
sbb
mov
or
push
adcb
sbb
push
lcall
jb
inc
into
outsb
and
sti
or
push
pop
inc
int3
aaa
repz
mov
addr16
arpl
dec
in
repz
arpl
iret
imulb
nop
and
xchg
nop
sbb
xchg
sbb
hlt
sbb
js
jo
aam
jge
add
xor
ljmp
push
and
fucomp
ret
fsubrl
cmpsl
push
sti
mov
jp
xlat
add
shll
sub
dec
mov
in
jo
or
fidivrl
fidivs
jp
push
jmp
aas
jp
inc
insb
xchg
mov
in
or
cmp
iret
fldenv
adc
addr16
faddp
mov
mov
dec
sbb
rcrb
xchg
cmp
cltd
xchg
sbb
push
jecxz
add
or
into
dec
mov
mov
cmp
xchg
lret
mov
or
lods
out
jge
sub
fstps
fwait
mov
sbb
mov
icebp
mov
pop
mov
dec
cltd
scas
int
pop
jne
das
push
cmp
pop
dec
hlt
dec
xchg
cwtl
push
in
rcr
or
mov
and
addr16
add
or
pushl
icebp
or
push
out
pop
or
mov
fnstenv
mov
sbb
int3
mov
ds
mov
mov
mov
push
mov
insb
xor
jne
or
pop
insb
inc
test
pop
jle
pop
mov
cmp
mov
js
pop
cs
ret
call
repz
and
ja
dec
loope
cmp
std
add
sub
lods
xor
mov
adc
dec
mov
mov
cmp
testb
inc
iret
dec
mov
int
popa
jae
jl
add
or
cmpsb
dec
and
sahf
inc
or
inc
aaa
adc
xchg
aam
addr16
lods
inc
std
lods
jge
ljmp
repnz
icebp
xlat
dec
lds
pushl
jmp
ficompl
shr
cmp
aad
pop
or
je
push
sub
nop
mov
rol
sbb
sti
cmp
daa
and
daa
test
push
mov
xchg
ja
mov
js
jp
roll
xor
mov
push
insb
mov
clc
push
cmp
or
jbe
xchg
mov
dec
mov
dec
mov
mov
xor
push
and
cs
lret
cmpsb
out
out
cmc
fs
in
dec
fadds
into
aad
adc
dec
gs
daa
push
sahf
dec
mov
push
pop
pop
into
dec
cmpsb
xchg
mov
xlat
push
das
repz
arpl
loop
out
lahf
scas
adc
shll
lock
arpl
add
mov
adc
lret
xchg
and
mov
scas
add
and
sbb
in
loop
popf
cli
ret
das
movsb
sub
jp
cmpsb
iret
arpl
dec
lret
push
or
lea
push
cmp
inc
pminsw
dec
mov
leave
and
xrelease
add
in
sub
push
jmp
das
xchg
mov
sbb
es
sarl
in
lods
or
mov
popf
out
cmp
and
bound
sbb
jl
fidivs
push
xchg
stos
clc
push
mov
add
pushf
cli
fcmovb
int
lods
push
mov
sub
jmp
outsl
pop
mov
mov
dec
add
inc
movsb
testl
scas
lahf
shll
movsb
cltd
stc
in
fsubrl
jae
lods
xchg
sub
daa
ja
sbb
sub
mov
jl
jl
test
call
rcll
lock
add
lcall
jbe
out
mov
fisubrs
popf
inc
sub
dec
pop
sbb
dec
std
ja
ret
daa
mov
cmp
add
adc
imul
ret
int
pop
add
mov
adc
lods
ljmp
ror
orb
push
int3
add
pop
mov
add
ret
mov
cmpsb
pop
jne
xchg
xor
fdiv
lret
pop
cmp
hlt
hlt
mov
rcr
lods
add
std
jbe
jne
fidivrl
mov
rorb
mov
cmp
mov
pop
test
cmp
dec
add
pop
fs
and
push
inc
pushf
cmp
jg
sbbl
mov
int
adc
mov
jl
mov
jno
int
ror
adcb
in
in
pop
lret
je
arpl
and
xchg
sub
leave
sub
aad
mov
out
dec
push
adc
mov
repnz
mov
or
jmp
out
inc
scas
popa
sahf
in
jns
push
add
aad
fdivr
inc
lds
iret
push
daa
mov
addr16
sub
inc
adc
mov
inc
stc
mov
pop
mov
js
push
sub
pop
xor
shr
mov
sahf
xchg
ret
adc
mov
add
push
dec
or
imul
dec
dec
mov
pusha
ljmp
jb
push
xor
cmc
mov
fcomp
add
std
and
sti
fdiv
andl
cmp
sbb
ret
hlt
mov
push
pop
push
pop
int3
add
mov
out
cmpb
add
stos
jae
push
jns
mov
sub
fadds
jbe
lret
mov
dec
mov
sub
in
lret
out
xchg
mov
rcrb
addr16
ja
lods
enter
sbb
inc
adc
pop
mov
lods
add
ljmp
mov
adc
imul
cmp
sbb
xchg
adc
sbb
mov
loopne
adc
jl
or
daa
pop
pop
xor
fldcw
leave
mov
jmp
lcall
int
jg
ret
sub
fimull
push
or
mov
dec
xor
adc
scas
cs
jb
jle
call
mov
pushf
jl
or
xor
loope
mov
cmp
cld
repz
js
cmpb
iret
bound
dec
lcall
rorl
pop
cmc
xor
jmp
push
xchg
arpl
sahf
lret
mov
xor
jbe
lods
bound
int3
add
mov
dec
imul
push
aaa
mov
add
out
pop
js
jp
xchg
pusha
inc
je
mov
xchg
gs
es
sbb
push
mov
gs
das
mov
js
sar
ja
daa
icebp
and
mov
repz
push
xchg
jnp
movsb
xchg
scas
pop
ss
fwait
cmp
jmp
imul
test
inc
sub
jle
xor
fsub
fwait
and
imul
sub
jmp
adc
lods
mov
ja
mov
stos
sti
inc
dec
pushf
cli
push
ja
into
jb
stos
call
js
and
decl
cmp
mov
xor
xchg
jmp
and
aaa
test
jno
subb
mov
push
push
out
outsl
xorb
xchg
outsl
iret
xor
loopne
pop
inc
mov
int
call
sbb
jle
pop
stos
divb
push
xor
dec
sbb
cmp
insb
mov
dec
fsubs
mov
and
aas
mov
push
jp
pop
cmp
insl
xchg
aas
clc
cltd
mov
cmp
orb
shrl
lods
push
sbb
and
aam
jle
popa
xchg
fwait
and
into
lds
mov
xor
mov
das
aad
push
pop
xor
mov
push
push
and
jae
add
sbb
roll
sbb
popf
repz
cmp
mov
or
mov
sbb
sti
and
inc
pushf
icebp
and
and
cmp
das
push
cmp
ja
inc
shl
or
negl
and
ret
imulb
inc
aas
push
inc
mov
mov
ret
inc
xchg
lods
not
iret
cmp
sbb
jno,pn
scas
imull
push
sub
fstpt
lods
outsl
xchg
loopne
sub
mov
shrl
in
stc
adc
loop
or
ret
cmp
sub
pop
add
push
scas
mov
dec
outsl
xor
push
movsl
shr
insb
and
pusha
xchg
xchg
push
push
es
clc
xor
stos
test
gs
dec
stos
pusha
inc
ret
std
xchg
add
pop
ret
arpl
dec
jecxz
push
out
and
pop
test
rcr
inc
shl
popa
in
pusha
xchg
fiaddl
shll
rep
leave
lods
dec
dec
xor
pop
adc
fcoms
jecxz
jnp
inc
dec
jmp
sbb
push
pop
adc
jno
dec
cmc
pop
mov
dec
sbb
fsubl
xchg
mov
outsl
lea
xor
mov
arpl
mov
sub
cmp
mov
popa
cmpsb
loopne
mov
jbe
rcll
dec
mov
data16
daa
add
adc
and
jo
addr16
cmpsb
outsb
push
mov
pop
or
mov
add
sub
jbe
addb
push
mov
stos
mov
inc
and
push
jno
js
push
xor
jne
cli
cmc
outsb
sahf
inc
shll
mov
inc
and
loop
stc
es
in
sbb
or
iret
mov
adc
lock
push
add
mov
lret
ficoml
shlb
mov
and
jae
stc
jno
ss
xchg
pusha
lods
je
arpl
fs
mov
mov
inc
imul
pop
pop
shl
mov
adc
hlt
nop
jle
mov
push
jge
dec
stc
icebp
mov
mov
xchg
test
sbb
inc
stos
push
add
add
or
dec
push
cwtl
mov
mov
xchg
or
incl
filds
cltd
push
test
aad
xchg
ror
divb
inc
add
adc
pusha
aaa
jl
cmpsl
cli
jg
jge
sbb
push
xor
push
repnz
mov
lods
in
test
jns
pusha
sahf
inc
and
add
jl
and
aam
jmp
add
cmp
cwtl
daa
sbb
sub
mov
sbb
sti
pop
sti
push
imul
test
fadds
dec
mov
std
outsb
or
jecxz
jmp
push
push
gs
inc
add
mov
sub
jecxz
sub
outsb
push
les
adc
sbb
int
es
xchg
outsl
scas
es
repnz
shrb
push
jb
or
cltd
mov
xor
xchg
sub
loopne
popf
or
push
inc
loopne
int3
cld
and
or
add
imul
dec
popa
dec
dec
jno
jmpw
jmp
repz
push
rolb
jbe
movsb
jl
jecxz
mov
icebp
outsl
add
push
mov
lock
mov
fsubrp
fimull
cli
mov
dec
out
pop
xor
add
push
call
sbb
add
push
cmp
inc
mov
jl
iret
adc
sub
adc
into
and
pop
movsb
sbb
into
xchg
out
sub
add
sti
xor
int
pop
insl
out
cmpsl
adc
out
insb
test
xchg
push
movsl
mov
je
div
cmp
ret
stos
or
jecxz
inc
pop
sub
or
pop
cmp
jmp
cmpsl
xchg
mov
xchg
int
iret
shrl
sub
jno
mov
insb
and
cmp
mov
ret
add
nop
add
es
or
jo
push
pop
mov
dec
imul
cmp
icebp
repnz
push
and
push
mov
mov
mov
idivb
mov
popa
pop
xchg
pop
xchg
sbb
xchg
mov
xor
add
mov
scas
inc
mov
jno
adcb
push
lret
dec
xchg
rorl
popa
jno
iret
outsl
push
movsb
mull
inc
jb
enter
mov
subb
xor
jle
mov
bound
cmp
in
sti
ror
addr16
mov
in
mov
xlat
sub
push
mov
push
add
xlat
push
mov
popf
iret
xor
outsb
cs
lea
xor
std
or
inc
xchg
jns
loopne
sbb
movsb
scas
testl
pop
into
jl
push
fisubl
inc
dec
fsubrp
repnz
roll
lcall
fadd
inc
push
stc
scas
push
lret
arpl
icebp
xchg
inc
lock
sahf
adc
mov
jb
jnp
and
mov
mov
incl
cmpsl
cmp
pop
dec
add
push
jb
cmp
push
push
outsb
int3
or
int3
movl
push
shr
add
xchg
inc
in
and
push
std
adc
ja
fisttpll
daa
enter
or
xchg
mov
cmp
jno
hlt
push
pop
outsl
movsb
add
pushf
fwait
inc
inc
js
data16
cltd
ja
push
dec
test
and
mov
xchg
or
add
sub
lods
jbe,pn
call
sub
jecxz
add
xor
cmp
xchg
ja
test
push
pop
xor
pop
xchg
out
xchg
pop
bound
xchg
mov
jo
jle
cmp
add
xchg
jo
pop
cwtl
jae
xchg
jb
loopne
lahf
inc
mov
inc
pushl
pop
push
sti
sub
fldt
in
je
leave
scas
adc
loopne
cmc
cmpsb
mov
sub
push
std
xchg
andl
push
push
mov
cwtl
sahf
loopne
pop
jmp
and
mov
inc
cmp
pop
scas
fs
in
aam
mov
or
mov
sub
jno
cmp
ficoms
cmp
popl
test
mov
mov
mov
data16
pop
cld
cli
xor
pop
dec
push
pop
jns
jmp
into
rorb
les
divb
jns
popf
cwtl
mov
sarb
sub
cmp
dec
scas
xchg
xchg
stos
jmp
icebp
lcall
cld
js
mov
jnp
out
pop
test
sbb
and
in
sub
adc
jae
mov
push
and
cmp
adc
adcl
nop
ret
stc
jmp
or
loopne
sarl
imul
outsb
jo
pop
push
ja
pop
lds
insb
xor
jns
dec
jle
jae
mov
mov
out
push
push
int3
dec
xchg
cmp
dec
js
jno
ret
pop
out
movsl
cmp
xchg
add
xor
add
das
pop
xor
int3
adc
sub
pop
sti
lcall
mov
push
mov
xchg
and
mov
sub
push
push
adc
shlb
popf
in
arpl
lock
jns
pop
and
pop
mov
lret
fnsave
jno
std
aas
loopne
add
jne
push
outsb
aas
test
dec
rcr
cld
int3
inc
push
aam
push
daa
pop
popf
mov
rolb
enter
or
stos
adc
jge
and
mov
or
leave
push
fiaddl
lods
jae
sbb
sub
fists
or
test
cmp
sbb
rcl
mov
add
jge
and
mov
dec
xor
pop
int3
jp
lcall
mov
push
add
dec
js
loope
push
aaa
push
addl
mov
jecxz
or
cmpsb
pop
ds
outsb
mov
mov
dec
test
shll
sub
cli
cmp
shlb
fildll
dec
push
adc
dec
adc
jno
ds
or
in
test
push
mov
es
dec
pop
sub
xlat
cmpsb
ja
mov
pushf
stc
jae
pop
les
adc
push
pop
test
jecxz
lods
data16
mov
imul
add
cltd
lods
pop
sbb
mov
sbb
xchg
xor
popa
lea
fstpt
pop
inc
inc
xor
call
stos
and
mov
jns
jle
insb
fiadds
loop
pop
cmp
movsl
imul
cmp
add
xor
sbb
mov
add
xchg
popf
loop
sbb
in
das
out
inc
lret
pop
xor
pop
aam
dec
push
in
aaa
dec
mov
mov
jge
pop
mov
mov
or
dec
sahf
dec
cmp
adc
lock
and
loopne
xchg
mov
jp
repnz
repnz
in
pop
daa
add
mov
sbb
jnp
inc
rol
and
add
push
insl
mov
sahf
push
test
ss
cmc
aaa
sbb
xor
jecxz
in
scas
push
lock
fisubrl
pop
pop
shr
fistl
add
push
push
pop
mov
test
mov
push
xchg
in
enter
push
shlb
dec
jne
sarl
lock
fistl
jno
ss
jecxz
fnstsw
ret
mov
sbb
mov
and
mov
popf
mov
cmp
sub
fadd
push
mov
xchg
cltd
cmpsl
addr16
add
adcb
lret
pop
adc
push
jo
shrl
jbe
insl
int3
xor
data16
mov
hlt
divl
dec
fsts
mov
push
add
pop
cmc
xchg
cltd
cmc
push
cmp
jle
add
leave
push
ret
daa
pop
sub
pusha
stc
scas
mov
mov
arpl
stos
mov
adc
xchg
xorb
dec
bound
and
jo
mov
xchg
inc
adc
in
mov
pop
cmp
mov
loopne
and
mov
sub
into
psrld
dec
mov
mov
fdivrs
inc
and
mov
push
or
rclb
daa
jmp
shl
xor
sbbb
mov
and
push
mov
subb
cwtl
inc
or
dec
test
pop
xor
adc
and
aas
aas
or
jp
inc
int
add
bound
pop
adc
mov
test
or
mov
xlat
loope
stos
mov
xor
push
scas
das
dec
sub
lret
jns
lock
ss
test
push
icebp
push
les
fidivs
pop
dec
stc
in
fwait
mov
fidivl
addr16
into
xor
cmp
js
daa
adc
out
jecxz
mov
stos
jo
int
insb
jge
pop
mov
pushf
cmp
mov
dec
add
sbb
in
adc
jne
cld
or
rclb
negb
ss
sti
icebp
sbb
cmpsb
mov
mov
mov
or
testl
mov
sub
mov
int
movsl
outsb
mov
and
in
movb
fs
lret
into
xor
ljmp
cmp
and
mov
enter
jo
ret
addb
pop
rcll
adc
das
add
pop
jnp
pushf
mov
or
int
sar
dec
xchg
add
mov
cwtl
idivb
int3
les
mov
or
dec
sub
leave
mov
and
adc
adc
sub
ds
insb
mov
pusha
xor
mov
jnp
dec
lds
int3
test
cmc
and
repnz
aas
pop
lret
rcrl
clc
out
pop
ss
orb
cli
push
xor
jmp
mov
jno
jecxz
mov
je
sub
repz
inc
inc
repz
loop
mov
push
movsl
or
mov
pushw
inc
call
nop
lds
setle
cmp
and
jle
aad
sub
in
jno
jne
call
out
jae
mov
push
into
fldenv
jo
idiv
stos
jo
iret
cmc
popa
or
xchg
add
sar
add
xor
adc
xchg
mov
in
repnz
das
repnz
pop
push
adc
addb
ret
cli
and
lret
loope
push
iret
xchg
inc
jecxz
jmp
or
negl
out
dec
cmp
jg
ljmp
in
dec
adc
pop
xchg
bound
call
in
repnz
pushf
shlb
mov
scas
and
cwtl
dec
push
or
loope
roll
imul
shl
jb
xchg
xor
fucom
jle
fs
dec
out
fidivs
js
ds
xchg
push
mov
outsl
jecxz
sub
movsl
test
cmp
and
add
add
js
sti
mov
pop
sub
adc
sub
xchg
gs
jle
sbb
scas
mov
sbb
adc
mov
cmpsb
mov
popa
push
add
jb
or
les
push
imul
repz
xchg
repnz
adc
jmp
cmp
loop
repz
sub
adc
and
orl
sbb
cmp
jp
mov
pop
std
xchg
pop
xchg
je
rorl
push
enter
mov
pop
dec
mov
adc
rcrb
lret
cli
mov
push
pusha
sbb
mov
shrb
xor
mov
lret
dec
jle
icebp
enter
ficomps
in
cmpsl
stc
imul
arpl
push
cmp
xlat
hlt
jb
mov
dec
outsl
inc
jnp
aad
add
pop
idiv
leave
insb
out
jmp
mov
inc
rcl
sbb
sub
and
mov
sub
mov
push
adc
ret
pminsw
stos
orl
lds
jle
lock
decl
pop
xchg
adc
fsubl
mov
int
ja
cwtl
outsb
lods
inc
cld
mov
sub
hlt
aas
sbb
or
mov
icebp
sbbb
xchg
jg
enter
dec
test
test
jno
cmpsb
adc
jmp
and
pop
adc
test
push
mov
cld
fs
hlt
inc
adc
dec
jae
dec
mov
push
push
xchg
mov
in
fstl
and
add
sbb
push
pushf
clc
cmp
jae
sbb
lret
in
in
cwtl
imul
jae
adc
inc
int3
mov
dec
inc
pusha
cmp
push
and
jbe
jmp
js
aam
gs
mov
cltd
in
dec
lods
subl
sbb
sbbb
scas
imul
mov
rcr
push
imul
cmc
adc
add
mov
jnp
test
ret
cmc
mov
daa
into
push
mov
dec
not
lret
push
dec
add
bound
icebp
and
repz
lahf
lock
inc
sbb
or
or
iret
fsubr
lock
rclb
inc
lds
in
out
cs
pop
add
popa
sbb
outsb
cmpsl
lahf
jg
jae
int3
mov
jns
inc
lods
sub
movsb
loopne
repnz
test
ret
sub
movsl
inc
pop
pop
cwtl
mov
shrb
add
add
fmul
push
pushf
sub
outsl
mov
fwait
inc
fisttps
cmp
push
test
xor
fucom
test
loop
adc
jmp
and
lcall
jne
and
mov
leave
push
cli
mov
xchg
sbb
push
test
pop
jnp
int3
cmp
aaa
adc
inc
cwtl
xorb
cmp
fstpt
or
in
bound
popf
out
fdivl
jmp
mov
loopne
fiadds
sbb
xchg
int3
mov
sub
lret
ror
jmp
cmp
pusha
shlb
fiaddl
adc
mov
or
leave
outsl
jl
inc
aaa
jp
repnz
stos
mov
call
imul
jbe
leave
addr16
adc
and
mov
movsl
jo
out
add
test
ljmp
push
fldenv
test
cmpl
fdivl
sub
adc
add
ljmp
dec
push
into
add
inc
sti
jmp
js
pop
jg
pop
jmp
mov
cmp
or
inc
cmc
pop
es
xchg
dec
cli
add
in
lods
shlb
add
jno
scas
mov
adc
cwtl
inc
push
and
aaa
pop
jae
into
push
int3
rorl
add
pop
or
insb
mov
out
enter
hlt
or
in
cld
loopne
int
mov
aas
mov
pop
mov
jmp
pop
or
lock
jmp
pop
xchg
ret
lock
fs
leave
sahf
ffree
mov
cli
sarl
and
mov
into
js
jle
call
xor
mov
mov
jb
adc
and
jecxz
popf
jmp
push
mov
mov
push
jne,pt
push
lcall
lcall
mov
test
rolb
loop
xchg
ja
dec
dec
cmpsb
and
cmpsl
scas
mov
jmp
adc
lods
pusha
lret
sub
xchg
mov
jp
icebp
mov
fdivl
push
xchg
repz
pushf
repz
xor
incl
cmp
dec
mov
lahf
or
mov
mov
or
lods
adc
push
es
dec
cmp
jmp
test
or
jnp
stc
or
jmp
inc
fisttpl
xor
dec
fiaddl
push
js
lods
mov
outsb
add
mov
jo
lods
xchg
nop
inc
mov
sbb
into
mov
jne
int3
xorps
cmp
test
cmp
add
pop
insl
pop
mov
pop
mov
add
sbb
out
lods
mov
shll
mov
je
push
push
xchg
xlat
mov
xor
xchg
xor
cld
lret
test
std
mov
fldenv
mov
outsb
jne
xchg
jnp
mov
aaa
lret
movsb
lds
in
add
sub
fimuls
or
mov
sti
insl
mov
jle
adc
mulb
jle
ret
cld
mov
sbb
mov
out
pop
je
sbb
jb
pushf
in
push
imul
add
add
sbb
js
sbb
mov
xor
xor
nop
pusha
add
pushf
mov
movsl
xor
sub
test
mov
mov
aam
jmp
push
inc
lahf
pop
mov
xchg
hlt
add
pop
lea
popa
mov
xchg
mov
pop
xor
push
cli
dec
popa
test
insb
ret
fmul
pop
popa
incl
mov
shlb
adc
rcl
dec
adc
lcall
inc
inc
adc
push
inc
fs
clc
arpl
scas
lds
dec
out
cli
pop
inc
dec
sbb
dec
loopne
lock
xlat
ror
loop
push
add
xchg
daa
popf
fwait
or
and
fadd
cmp
fdiv
push
add
inc
ltr
push
mulb
push
or
or
dec
std
cmpsb
roll
insl
mov
lds
fcmove
inc
stc
aad
cmp
sbbb
add
mov
cmp
push
popa
cli
icebp
popf
sub
mov
xor
sub
cld
mov
cmp
dec
xlat
pop
mov
jle
in
mov
push
dec
push
jae
xor
je
jo
push
int
sbb
mov
lea
jb
ja
jl
sbb
jno
cmp
repnz
or
decl
pop
bound
out
leave
nop
inc
lods
push
mov
push
clc
bound
mov
gs
sub
add
sub
lret
mov
aad
push
loopne
adc
in
mov
and
push
nop
adcb
aam
mov
push
fldcw
add
pop
sub
or
mov
rclb
movsl
jae
pop
stos
mov
jns
jae
and
es
mov
xor
lret
mov
mov
sub
stos
in
loop
pop
push
cmp
jmp
sub
or
orl
push
pop
mov
add
push
test
mov
stos
in
test
add
adc
pop
leave
jnp
pop
dec
cli
pop
push
sub
dec
movsb
inc
and
pop
xchg
jno
xor
not
adc
lods
mov
out
xchg
jl
out
add
mov
addb
js
xchg
testb
loope
or
in
dec
cli
adc
push
aam
adc
mov
in
adc
mov
dec
jmp
mov
mov
xor
pop
push
call
adc
mov
bound
jo
daa
sub
jge
gs
stos
arpl
gs
add
inc
adc
xchg
sub
or
cmp
js
popf
lods
jg
pop
adc
xchg
xchg
adc
nop
insb
jno
lret
lods
repz
add
mov
xchg
lea
xlat
jmp
mov
lods
mov
es
cli
shlb
repnz
push
shll
popa
lret
xchg
sbb
mov
cld
repnz
xchg
add
aad
shll
mov
mov
dec
xor
cmpl
mov
je
imul
mov
cmpsb
hlt
cmpsb
jmp
lods
ss
cmpsb
mov
sahf
fucomip
push
xor
sti
repz
dec
stos
je
loopne
clc
push
mov
sbb
xchg
or
rcll
sbb
mov
movsb
jg
mov
popf
sbb
lret
jne
cmp
add
mov
mov
stc
pop
push
daa
xor
mov
xchg
scas
mov
lcall
ds
and
sahf
cld
push
or
add
mov
add
sbb
enter
adc
in
push
cmp
out
sub
add
and
sub
test
or
xchg
xchg
push
lock
pop
or
push
dec
jbe
mov
andb
push
stc
adc
lret
or
xchg
das
sub
add
dec
add
je
and
inc
or
out
stc
dec
iret
pushf
lock
ss
sbb
ja
xchg
scas
inc
aad
aaa
int3
jno
dec
sub
rcll
xor
inc
xchg
xchg
dec
xchg
in
xor
jne
or
in
andb
add
xchg
push
sub
or
jg
ss
lcall
push
gs
aaa
xchg
xor
popa
push
mov
mov
int
ret
and
mov
adc
insl
or
or
jp
mov
sbb
jns
jp,pt
outsb
add
dec
pminub
jno
adc
mov
pop
dec
cltd
inc
dec
mov
adc
push
jle
adc
sub
mov
dec
js
mov
cli
adc
pop
ror
inc
shll
pop
jp
cmc
cmpsl
xor
xchg
out
mov
fidivrl
cmc
sbb
xor
nop
mov
adc
imul
das
jnp
sarl
std
pop
xor
mov
lock
push
enter
jmp
je
ja
cmp
mov
xorb
gs
clc
add
xchg
dec
fsubr
xchg
add
mov
in
arpl
testb
inc
testb
cmp
mov
das
sub
call
xchg
or
pushl
or
cwtl
or
sub
xchg
mov
or
xchg
cs
jmp
jae
lods
mov
cmp
je
mov
pop
add
xlat
inc
out
and
out
insb
fisttps
or
mov
xor
add
in
inc
push
dec
pop
xchg
in
out
int3
and
xchg
fcomps
jae
sub
in
pop
cmp
dec
xor
cmpsb
rorb
mov
cmp
cmpsb
cmpl
fcmovb
outsb
pop
and
cmp
push
mov
xor
sub
fisttpll
andl
or
icebp
dec
je
arpl
mov
adc
pop
cmp
mov
je
jo
dec
mov
jbe
and
pop
mov
inc
xchg
fisubrl
mov
sub
adc
add
ds
test
stc
adcl
ret
clc
scas
aam
mov
mov
xorb
popf
inc
adc
adc
dec
mov
arpl
push
jmp
mov
xor
sbb
out
iret
daa
jno
adc
xchg
aas
sbb
inc
movsl
nop
push
add
jbe
outsb
cmp
push
int
out
rclb
clc
xchg
adc
mov
fnstcw
fucomi
inc
iret
fidivl
loopne
xchg
dec
repz
cwtl
jnp
sbb
fnsave
femms
enter
sub
pop
jg
lock
int3
js
int
sarl
mov
iret
sub
jp
fcmovb
push
loop
out
push
xchg
jge
inc
jno
dec
inc
xchg
lahf
aad
out
xor
loope
or
out
rcr
iret
xor
xor
fstpt
scas
shll
sbbb
sub
imul
xor
sub
cwtl
popa
std
dec
xlat
es
cld
add
mov
sbb
adc
xor
addl
out
faddl
aam
cmp
or
out
xor
pop
push
leave
movl
xchg
int
sbb
mov
cmp
stos
mov
mov
jecxz
es
stos
pop
inc
xchg
out
dec
xchg
rcl
out
inc
fists
int
shl
lea
sahf
ja
test
or
mov
push
and
dec
cmpsb
dec
pop
and
jecxz
pusha
cltd
fidivrl
cli
pop
insb
xchg
mov
jo
lea
lahf
in
cli
or
add
shr
cltd
nop
xchg
mov
movsl
jp
fldcw
push
push
push
xchg
ret
push
pop
popf
lea
mov
imul
adc
sar
movl
push
and
out
mov
mov
sbb
sub
push
movsl
xchg
mov
mov
jne
out
xor
test
leave
loop
jle
ficoml
das
in
cmp
fcmovnu
inc
sbb
addr16
mov
cmc
jmp
rol
insl
hlt
dec
mov
xor
ja
cmp
repz
pop
sub
sti
jbe
mov
lea
sub
jecxz
mov
repz
mov
call
mov
movsl
push
adc
mov
jbe
ja
fdivl
bound
aaa
roll
hlt
fstps
fisubs
fidivrl
pop
xor
and
lods
nop
sub
add
mov
hlt
fmull
jnp
sub
jl
insl
in
mov
xor
les
add
cmp
cmpb
psubusw
repnz
mov
gs
push
loop
dec
cli
xor
inc
fcomps
iret
test
dec
bound
mov
repnz
mov
jmp
jnp
dec
pop
loop
pop
sub
push
xor
mov
aaa
loope
out
adc
pop
mov
sbb
cmp
jmp
jo
sbb
std
mov
test
daa
push
push
adcb
lret
das
cwtl
jmp
in
in
pusha
fstp
scas
mov
lock
shrb
gs
ja
loop
lret
sub
fnsave
sbbb
adc
leave
sbb
bound
aam
cmpsl
mov
and
sahf
mov
cs
ss
adc
movsbl
ljmp
movsl
add
cs
repz
out
fcomps
xchg
fildl
add
iret
xor
adc
lds
add
sub
add
arpl
push
pop
xor
add
int3
in
lahf
mov
pop
movsb
cmp
mov
gs
sbb
or
or
mov
neg
push
xchg
push
iret
daa
add
xchg
aad
fnsave
test
inc
mov
sub
in
mov
aaa
mov
jl
out
xlat
loope
movsb
loopne
cmp
jns
icebp
jp
roll
push
add
mov
lock
aas
sub
dec
sbb
cmpsb
ja
xor
orb
pop
xchg
jo
test
inc
fsubs
jo
iret
stos
lods
stc
xchg
mov
xchg
mov
je
stos
sub
movb
sbb
adcl
mov
mov
lahf
dec
jl
cld
cmpsl
dec
dec
push
das
sub
rorb
xchg
cs
jne
loope
add
pop
psubd
outsl
sbb
push
dec
in
into
imul
pop
cs
add
or
inc
stos
outsl
out
and
mov
shl
dec
imul
fs
xchg
mov
in
test
inc
lea
jp
divl
leave
mov
sbb
sbb
outsb
mov
mov
in
jno
nop
bnd
inc
mov
xchg
mov
pop
pushf
add
cs
popa
ja
jnp
dec
filds
push
dec
jo
mov
test
out
sub
and
cli
cmp
inc
push
les
rorl
dec
mov
outsb
xchg
xorb
mov
dec
bound
dec
lock
jmp
jbe
insl
push
sbb
sub
push
mov
jge
test
rolb
and
ljmp
in
add
pop
mov
in
popf
and
imul
insl
out
shl
out
mov
or
js
push
cmp
sbb
std
or
xor
out
dec
stos
stos
jmp
cmc
leave
lods
push
xchg
xchg
mov
sub
jno
ja
sarl
dec
lret
jg
add
das
mov
push
or
mov
inc
and
and
push
push
pop
push
in
push
popf
pop
jle
shll
test
cs
jg
and
lea
xchg
jb
fwait
out
mov
icebp
dec
mov
leave
and
outsl
rcll
test
outsb
repz
filds
sub
movsl
xchg
mov
jbe
stc
jle
clc
push
outsl
push
cmp
fisubs
das
and
xchg
sbb
movmskps
and
inc
inc
cli
imul
adcl
out
cmc
nop
mov
mov
int3
subl
scas
jbe
jb
ret
cmp
sub
adc
sbb
sbb
xor
ret
inc
addr16
stos
in
aaa
es
scas
out
cli
cmp
outsb
xor
dec
icebp
adc
pop
enter
cwtl
mov
test
cld
bnd
push
pop
push
gs
jecxz
gs
loope
mov
or
jecxz
scas
xor
es
movsb
in
loopne
pop
rcr
imul
mov
std
fstps
in
sbb
xchg
mov
dec
inc
mov
add
js
lret
xchg
lods
xchg
pop
gs
sbb
in
icebp
sbb
inc
das
mov
test
xor
sub
mov
and
mov
daa
fmul
inc
popf
repnz
lcall
fadds
cld
sbb
inc
xor
add
ss
outsb
imul
adc
and
sub
repz
or
movsl
mov
jp
arpl
inc
mov
cwtl
rclb
mov
push
rcr
idivb
lods
jae
mov
rorl
xchg
sbb
mov
stos
std
pop
mov
inc
cmpsb
sub
cmpsb
mov
leave
xorb
or
mov
repz
adc
mov
inc
cmpsl
mov
rcll
sbb
movsb
insl
mov
or
mov
fstpl
adc
and
xor
fiadds
lret
out
xorl
repnz
mov
sub
sub
pop
pop
repnz
pop
rcrl
and
mov
sub
inc
cmp
fimuls
jge
rcll
jecxz
stc
rcll
jnp
pop
icebp
fildl
cmp
xor
sub
cmpb
jbe
xor
adc
bound
or
call
sti
sbb
jecxz
inc
xchg
movsb
in
in
shlb
inc
and
out
cmpsb
inc
xchg
mov
fwait
add
fisttpll
xchg
and
icebp
or
adcl
pop
xor
jmp
sub
data16
mov
adc
xchg
sub
inc
mov
test
dec
sub
and
hlt
mov
dec
nop
mov
xchg
pop
jge
pushf
jmp
mov
or
shlb
repz
add
insl
jl
adc
jge
sub
ss
sub
jmp
popf
sbb
das
addr16
test
xorl
dec
rclb
int3
mov
sub
xor
pusha
outsb
pop
insb
adc
xchg
inc
mov
push
inc
ret
mov
cmpsl
aam
pop
dec
dec
int
sbb
in
lods
fsubl
inc
std
mov
lods
mov
jns
jge
sbbb
push
rcrl
mov
add
and
adc
sub
ss
and
add
pop
cld
jge
xor
das
mov
and
pop
lods
mov
test
add
std
and
cmp
cli
mov
xchg
dec
pop
add
daa
adc
mov
xchg
add
mov
cmp
dec
jns
or
lods
test
movsl
orb
test
add
int3
sbb
inc
pop
loop
shr
or
roll
mov
js
out
mov
inc
push
movsb
ret
out
test
mov
jns
push
pop
nop
in
movsb
or
xchg
insb
sub
cld
pop
jecxz
data16
xor
nop
xor
mov
je
add
mov
dec
orl
fdivs
push
or
adc
in
push
leave
cs
xor
cli
cmp
and
mov
sbb
push
sub
mov
xor
xchg
or
in
call
test
push
xchg
adc
sti
call
cmpsl
dec
xchg
mov
stos
scas
sub
jg
push
icebp
cmp
add
es
and
push
xor
repnz
arpl
adc
xchg
jno
in
mov
xor
mov
xlat
ljmp
adc
mov
nop
push
mov
xchg
inc
sahf
rorb
mov
shlb
pop
loop
mov
jns
cwtl
adc
addb
xor
aad
xchg
push
out
and
mov
pop
sub
add
pop
leave
rcl
in
adcl
stos
subl
stos
fisubrl
stos
lods
xor
insl
add
pushf
icebp
mov
ret
fs
insl
bound
mov
ja
mov
mov
mov
sbb
popa
imul
push
loopne
dec
mov
mov
mov
xchg
push
push
jp
jmp
in
mov
inc
flds
shll
fsubr
jb
arpl
bound
sar
mov
push
stos
ret
adc
xchg
ret
sbb
xchg
stos
add
movsb
ficompl
lds
push
jns
fisubrs
dec
testl
shll
int
xchg
sbb
cmp
or
add
dec
and
movsl
arpl
inc
jbe
ret
sub
add
es
in
test
pop
aas
mov
ficomps
into
outsl
push
jecxz
mov
mov
add
lret
jns
sub
sbb
jb
push
jge
pop
or
and
push
inc
jecxz
or
ljmp
movsb
xor
outsl
cmpsl
call
pop
jp
push
push
scas
xchg
stos
mov
out
xor
lods
movsl
xchg
adc
inc
ficomps
or
insl
mov
lea
sub
ret
arpl
test
jnp
or
iret
xchg
push
inc
cltd
push
xor
ret
mov
push
xor
das
and
xor
dec
mov
cld
fs
pop
cli
nop
lea
rcrb
inc
xchg
aas
movsl
sub
dec
pushf
inc
push
fisubrl
jl
jmp
ja
jae
ljmp
mov
mov
xor
lcall
lods
rolb
jp
ja
scas
jns
arpl
xor
mov
jbe
mov
notb
fcmove
lret
jecxz
das
xor
ror
aam
outsb
jmp
adc
dec
popa
push
shrb
cmpsl
cwtl
mov
fs
rorl
int
out
sbb
cmc
pop
rorl
cltd
mov
ja
cmp
mov
or
inc
dec
ljmp
loopne
push
nop
xchg
pop
aas
out
in
sub
mov
ficomps
xchg
and
inc
jnp
adc
add
push
out
nop
in
das
jmp
ficoml
cltd
push
mul
dec
xor
dec
js
xor
xlat
jp
cmp
inc
sti
adc
mov
inc
xor
out
popa
jno
dec
and
mov
mov
shrl
adc
push
cld
inc
and
inc
test
andb
int
adc
fnstsw
outsb
jnp
shr
push
jne
outsl
test
and
pop
sub
jmp
int
jbe
int3
lret
lock
inc
sbb
adc
jecxz
fmuls
lods
shlb
cmp
xor
cwtl
or
call
leave
xor
loope
mov
ds
les
cli
xor
xor
jo
sbb
dec
lret
addr16
test
push
daa
jne
imul
add
mov
ja
push
dec
sbb
stos
pop
jnp
fmuls
and
mov
bts
lods
clc
mull
fnsave
es
add
cmpsl
cmp
mov
andl
mov
xor
cmp
cmpsb
fisubrs
and
stc
adc
pop
fbld
leave
ret
and
mov
push
xorl
xor
jle
cmc
repnz
xor
and
jl
push
add
jne
in
push
xchg
or
lock
into
das
stos
and
xorl
lods
dec
and
add
or
inc
push
dec
lea
incl
dec
in
cmpsb
and
sub
pop
push
sbb
mov
je
ds
je
ja
push
inc
pop
loop
add
dec
sbb
ret
lds
mov
sar
dec
aaa
cmc
sbb
sub
je
xor
loopne
and
xor
popf
or
lods
jle
pop
out
push
outsb
std
adc
add
sub
jp
xor
jge
imul
jge
jns
lods
and
in
movsb
push
dec
xor
push
mov
push
inc
inc
mov
push
inc
jecxz
pop
push
cmc
pop
shll
xchg
ret
out
insb
adcl
out
das
cmc
inc
lock
les
lock
mov
and
loopne
cmp
aad
ss
sbb
push
or
adc
and
enter
cmp
adc
je
in
cltd
cltd
pop
in
push
sub
sbb
jge
mov
orb
std
cmpl
add
push
fldenv
fidivrl
dec
xchg
mov
cmp
ret
cmpsl
popf
mov
xchg
test
xchg
push
mov
sarl
sub
pop
inc
rolb
jno
cli
push
push
aad
dec
mov
stos
or
in
cld
cltd
je
mov
sbbl
stos
and
add
pusha
repz
repnz
ljmp
outsb
and
fldenv
lcall
fidivrs
scas
sub
lods
pusha
movb
mull
mov
in
repz
xor
sti
lods
jg
call
pop
mov
data16
jno
sbb
mov
add
push
stos
sub
in
push
push
adc
mov
int
js
addr16
sahf
loopne
jae
adc
cmpsb
fstl
pusha
dec
jg
sti
or
add
mov
fsubl
pop
xchg
push
out
jmp
outsb
ja
add
and
and
xchg
aas
movsl
dec
inc
lcall
cmp
and
mov
push
xor
fpatan
xchg
jmp
mov
jns
out
inc
aaa
jo
push
adc
dec
sub
cmpsl
mov
dec
stc
mov
lahf
sub
test
hlt
lock
fucomip
push
push
xchg
push
lret
mov
movsl
cmp
sub
ja
sub
mov
nop
into
test
and
jnp
push
xor
dec
iret
mov
orl
shr
jb
dec
or
rclb
scas
ljmp
test
int3
out
mov
orb
stc
adc
call
fdivrl
inc
sbb
pop
lds
fcmovne
lahf
das
mov
pop
xchg
lea
inc
sbb
into
pop
push
jg
push
mov
adc
push
scas
insb
push
mov
jo
and
iret
mov
pop
or
in
clc
cmp
and
rol
enter
push
iret
inc
xchg
mov
adc
mov
clc
inc
cmp
add
push
je
cmp
push
jns
repnz
add
cmpsb
es
icebp
popa
scas
mov
in
daa
test
ja
push
cmp
pop
pop
sub
cmp
dec
jnp
cld
repnz
mov
mov
int
sbb
pop
outsb
add
lcall
mov
mov
rorl
xor
mov
jmp
into
jmp
cmpsl
jnp
push
push
out
lods
aad
rorl
xor
fs
adc
fucomp
mov
call
int3
or
sbb
pop
xchg
push
test
sahf
xor
shrb
outsb
mov
cmp
xor
insb
add
or
cs
push
inc
call
jb
xor
popa
out
mov
mov
xor
sub
jg
push
dec
sub
mov
outsb
popf
subb
outsb
push
lret
pop
popf
insb
fs
stc
add
and
adc
das
add
insb
in
inc
sahf
add
out
lret
or
dec
dec
sub
test
lods
jbe
mov
mov
sbb
mov
ret
push
push
ret
outsl
inc
adc
sbb
andb
pop
pop
sbb
scas
mov
xchg
mov
stos
sub
pop
cmp
pop
imul
mov
ret
sti
and
pop
rolb
or
je
notl
mov
mov
loope
insl
push
data16
pop
pop
xchg
and
dec
fdivrl
cld
test
out
mov
xor
jecxz
mov
mov
sbb
iret
sarl
ret
test
push
repnz
lods
pop
mov
aad
jmp
fsubr
ss
outsb
popa
push
mov
movsl
insl
int
ljmp
stc
push
leave
shl
fs
leave
adc
je
mov
lea
test
jmp
jl
shl
xchg
sub
mov
xchg
cltd
adc
add
movsl
mov
shlb
xchg
rcr
xchg
sbb
mov
aam
ds
shrl
inc
idivl
fidivrs
jbe
imul
mov
shl
leave
int
mov
aam
insl
or
fimuls
stos
mov
mov
out
rclb
test
pop
popf
mov
cld
arpl
outsb
popf
push
leave
int3
cwtl
add
insl
xchg
jbe
and
xor
push
pop
mov
pop
test
daa
pop
lret
nop
mov
push
jbe
jmp
pop
xor
lock
fcoml
pop
ficoms
push
cmpsb
leave
push
push
inc
rorl
pusha
into
mov
das
test
fdivrl
cmp
sti
xchg
cs
bound
mov
fcom
dec
sbb
sahf
call
mov
add
lret
cmpsl
pop
jo
scas
adc
push
ret
out
in
and
out
jle
cmc
lods
push
jbe
cs
and
ja
dec
lock
outsb
mov
sbb
mov
adc
hlt
pop
lock
repnz
mov
call
pop
enter
mov
and
pushf
out
or
fcompl
push
fsubl
std
mov
mov
or
mov
mov
cs
out
or
xor
aad
or
and
sub
sub
test
sub
sub
in
nop
enter
mov
out
fs
ja
and
push
dec
cmp
nop
xchg
and
dec
sub
push
outsb
mov
dec
lock
out
adc
xchg
pop
jnp
out
aaa
mov
add
les
dec
das
ja
cli
lds
add
fs
jo
jb
negl
xchg
lcall
pop
adc
rcrb
popa
push
mov
push
repz
push
repnz
aam
inc
testb
arpl
or
icebp
stos
and
cmp
mov
imul
mov
mov
shrb
mov
xchg
add
dec
xchg
lds
je
std
cmc
clc
sub
pop
fcompl
adc
sub
xchg
gs
rorl
sbb
jo
mov
mov
shl
jb
fcmovbe
dec
jp
sub
xchg
inc
enter
add
mov
mov
xor
jg
lahf
aad
rcll
bound
xor
jno
or
add
dec
ret
add
mov
sub
fdivs
leave
push
dec
push
fxch
popa
adc
cli
dec
aas
into
ss
xchg
mov
mov
xor
cmp
add
mov
out
pop
into
mov
adc
xor
and
push
pop
inc
xchg
mov
outsb
test
mulb
lret
lea
dec
pushf
inc
das
out
jo
movsl
adc
dec
cmp
test
scas
and
add
sbb
vpsubsw
lods
mov
repz
ljmp
stos
iret
push
sub
jb
enter
jg
mov
xchg
xchg
clc
push
add
rcrl
fldenv
stc
shr
jns
fsqrt
sbb
mov
in
jg
or
rcl
repnz
cmp
movsl
lret
fwait
test
cwtl
fcoml
pop
jne
outsb
in
sbb
loop
icebp
push
add
ret
nop
add
sbbb
mov
mov
xor
ljmp
fidivs
loop
or
icebp
dec
jns
mov
jg
aad
mov
fistpl
dec
mov
jns
arpl
xchg
test
enter
in
lds
test
mull
rolb
jle
lea
daa
xor
push
pop
jb
cmp
scas
xchg
mov
mov
and
dec
cmp
mov
gs
cltd
scas
sbb
stos
push
nop
xor
cltd
es
jae
call
je
aam
inc
cmp
fnsave
es
rorb
jg
hlt
stos
insb
mov
shlb
les
das
inc
jl
paddb
mov
addr16
cmp
cmc
incb
push
ret
push
subl
hlt
loop
pop
ljmp
and
xchg
jno
mov
fbstp
ljmp
in
mov
addr16
mov
mul
jmp
lods
shll
jp
inc
in
jg
ja
inc
cmp
daa
and
mov
out
lock
jns
popf
inc
sub
xchg
loopne
rorl
jno
pop
repnz
aas
cld
push
int3
push
cmc
pop
ss
dec
ds
jle
xor
jae
jle
fldl
dec
sbb
setp
mov
xchg
pop
fidivl
out
ret
xchg
dec
ljmp
sbbb
dec
fbld
cmp
cmp
pop
loope
lea
out
sub
ljmp
and
dec
xor
mov
ljmp
ja
cli
jno
int3
mov
les
jecxz,pn
add
sub
in
mov
sahf
add
xchg
push
sbb
mov
mov
test
mov
pop
jno
sahf
cmp
insl
mov
enter
das
cwtl
mov
andl
dec
cwtl
not
add
mov
or
mov
nop
jecxz
out
mov
fisubl
or
adc
into
jae
fstpt
decb
test
push
shlb
sbb
popa
stos
daa
std
adc
dec
xor
push
lcall
fwait
cmc
push
sbb
xor
das
arpl
jle
pop
repz
mov
sbb
push
push
sub
pop
in
pop
test
aas
imul
mov
imul
clc
or
sbb
or
out
movsb
sbbl
adc
adc
sub
inc
adc
inc
push
pop
shlb
xlat
mov
popf
push
sar
pop
pop
pop
jno
mov
fiadds
loopne
jl
add
adc
out
incl
in
cmp
and
xchg
test
imul
adc
mov
es
jae
and
xchg
sub
rcrl
jno
xor
dec
stos
jecxz
mov
jb
adc
sarb
out
mov
lret
sub
dec
xchg
lret
ss
roll
adc
sub
inc
mov
lods
dec
ret
lea
pop
pop
std
test
js
pop
ret
testl
aaa
fldt
lret
mov
mov
movsb
cmp
je
jo
aad
cmpsl
add
xor
icebp
mov
dec
xchg
js
popfw
in
rep
jmp
mov
rclb
pusha
repz
stos
stos
mov
repnz
sub
sbb
mov
xchg
fnsave
popa
jmp
dec
inc
sti
pop
mov
cmpsb
pop
stc
inc
pop
inc
push
mov
jns
fmuls
mov
lds
mov
mov
dec
pop
mov
push
loop
pop
enter
faddl
push
inc
jo
rorl
cli
and
clc
sub
ficoml
or
pop
roll
push
jnp
hlt
es
cmp
lds
call
push
int
arpl
mov
bound
movsb
xor
cwtl
xchg
pop
xor
jo
roll
lea
sub
iret
shrl
dec
test
xchg
cmp
pop
mov
test
mov
je
xor
insb
inc
fcomp
cmp
scas
loopne
aas
mov
mov
daa
cs
leave
pop
mov
dec
pop
or
mov
xchg
ja
lds
test
test
dec
and
insl
movsb
mov
inc
lret
push
addr16
adcb
mov
loop
cmovp
sub
out
lcall
adc
cld
dec
xchg
xor
inc
xchg
incb
sbb
sbb
jns
mov
xchg
pop
bound
push
in
and
mov
imul
pop
inc
sub
rcrb
imul
int
adc
or
jne
loopne,pn
and
cmp
xor
in
sbb
add
pop
out
sbb
lock
orb
sub
pushf
movsl
ljmp
push
call
xor
mov
es
testb
mov
fcom
imul
xchg
adc
lock
rol
scas
adc
push
out
inc
xchg
in
adc
mov
lret
les
sub
fs
xchg
xor
or
xchg
jp
jl
mov
cmp
and
xor
mov
ss
cmp
mov
cwtl
ffree
sub
fdivs
mov
or
in
mov
or
int
sbb
rcl
call
xor
pop
pop
cmp
imul
into
lock
jno
loop
test
ds
dec
adc
dec
add
cld
adcl
cmpsl
les
adc
test
adc
and
xchg
in
mov
das
pop
dec
add
jne
js
mov
add
ds
and
jmp
nop
je
js
dec
mov
jno
add
cmp
pop
scas
pop
inc
icebp
iret
pop
repz
and
in
lods
idivb
add
iret
xchg
cwtl
adc
lods
push
push
jne
lahf
inc
aad
popf
pushw
popa
jae
int
xor
push
out
dec
ljmp
xchg
push
jmp
into
cmc
jmp
in
mov
imul
and
ret
loopne
mov
mov
push
dec
loopne
dec
sbb
mov
jge
push
stc
scas
mov
test
push
xchg
sbb
pushf
ficoms
fisttpl
addr16
test
lds
dec
orb
mov
mov
in
mov
int3
cmp
ret
xchg
cmp
gs
in
or
fidivrl
xor
int3
sbb
gs
and
ljmp
jp
je
gs
sub
push
cltd
inc
xchg
out
out
lcall
mov
popf
sbb
bts
push
pop
push
mov
push
mov
cmp
sbb
sahf
in
adc
mov
je
mov
fcoms
in
insl
add
pop
scas
cmc
mov
lcall
jb
xchg
xor
pusha
mov
das
push
jb
jp
sub
cmpsb
pushf
loopne
push
add
popf
sbb
ljmp
mov
jp
cmpsb
adc
bound
mov
push
mov
or
adc
ss
mov
mov
popf
sbb
or
add
lcall
stos
aam
inc
add
jbe
jl
mov
and
cmpsb
out
inc
lret
dec
les
inc
mov
cmpl
sahf
inc
scas
out
outsl
ds
out
les
add
adc
imul
dec
cmp
mov
adc
push
jp
dec
add
cltd
cmc
push
mov
cmp
mov
xchg
in
mov
scas
testl
and
add
in
cmp
daa
in
jmp
or
mov
ss
pop
mov
imul
stos
in
out
repnz
mov
adc
mov
frstor
push
inc
pop
aaa
add
jge
aad
cmp
mov
subb
pop
mov
or
lahf
add
mov
fs
js
fadd
vucomisd
mov
repz
xchg
pop
mov
dec
cli
pop
lock
or
rclb
dec
dec
lret
shl
lods
add
loopne
jnp
mov
cwtl
cli
sub
pop
ss
pop
int3
gs
stc
ss
cld
cmp
hlt
testl
pop
sti
pop
xchg
loope
testl
dec
xor
cmp
cs
into
outsl
fidivrl
ds
mov
mov
dec
faddl
scas
clc
xor
cmp
adc
dec
mov
xor
dec
push
jle
cmp
and
inc
pop
pop
testb
faddl
adc
out
leave
cmpsb
mov
popl
test
cmp
jg
test
dec
add
and
pop
addb
mov
outsl
shlb
shrb
rcr
mov
adc
popf
mov
les
jg
sub
das
pop
pushf
or
sub
iret
xchg
addl
int
lock
je
mov
cld
pop
xchg
bound
mov
adc
clc
cmpl
inc
loop
cmp
icebp
push
sub
push
ret
ret
addl
stc
insb
sub
push
mov
fwait
imul
lcall
or
movsl
xchg
pop
lcall
inc
fisubl
lods
repz
mov
rcrl
outsb
iret
and
fisubrl
insl
jl
data16
cmp
xor
push
mov
push
xor
sub
cld
xchg
lods
sub
mov
movsb
mov
mov
loope
pop
sbb
lea
fsubs
xchg
loop
cld
push
mov
adc
jp
xor
loopne
push
add
lock
jo
adc
jg
pop
aam
sub
sub
sbb
cmc
adc
sbb
or
xor
jae
xchg
or
rorl
das
mov
daa
xchg
hlt
jmp
sti
add
out
xchg
lds
lret
push
lcall
and
outsb
cli
dec
stc
fbld
sbb
push
xchg
push
lcall
icebp
ret
mov
lret
sbb
sub
lds
adc
loop
xchg
cs
push
jecxz
sti
scas
add
inc
jmp
leave
aaa
dec
mov
inc
push
mov
mov
int3
loope
mov
setno
repz
mov
fidivrs
mov
aas
mov
push
lcall
push
push
data16
js
push
arpl
cmp
andnps
rcrl
stos
jge
int
in
jge
das
dec
roll
es
movsb
pop
sbb
adcb
sub
fmull
xchg
pop
adc
cwtl
loop
out
xor
dec
xchg
or
dec
inc
and
mov
mov
arpl
shrl
cmpb
in
arpl
jnp
mov
mov
sahf
jnp
xchg
rolb
fdivs
popf
mov
clc
adc
aas
xchg
ljmp
outsb
or
mov
sahf
lret
sub
fimuls
popa
cmp
loope
jns
pusha
aad
push
pop
mov
jg
out
inc
add
inc
push
sub
cmp
aaa
adc
push
sbb
insb
pop
dec
outsb
or
push
pusha
mov
mov
outsl
fisubrs
sub
xor
or
inc
cwtl
pop
xor
jne
cmp
out
mov
pop
push
ret
xchg
jbe
fdivs
xor
lds
in
lock
in
xchg
ret
xchg
push
cltd
pop
add
pop
and
popa
xchg
adc
lods
add
stc
dec
dec
shlb
dec
fcompl
xchg
ja
mov
and
cmp
fucomi
popl
mov
sub
cmp
xchg
aas
mov
pusha
testl
popa
jns
outsb
enter
scas
inc
lcall
mov
lock
jmp
fwait
xchg
clc
sub
je
mov
clc
shll
loop
fdivr
fstps
and
fs
stc
xchg
out
add
jp
mov
loopne
ljmp
xor
and
push
push
adc
dec
and
or
nop
add
rcr
mov
jb
popf
jp
or
int3
cmpsb
inc
lods
gs
mov
pop
lret
xor
sub
inc
pop
test
dec
aas
xchg
addb
not
lea
lods
mov
xchg
inc
push
je
stos
imul
out
mov
popa
and
shlb
test
pop
jg
sbb
jp
ret
pushf
inc
cwtl
jno
cwtl
jle
add
std
in
aaa
push
subl
fwait
pop
add
push
mov
or
pop
xchg
and
pop
loopne
mov
xchg
pop
stos
into
fsubl
pushf
and
dec
pop
mov
lods
aad
int3
testb
pop
add
fmull
daa
int
lahf
and
mov
out
push
js
add
jnp
pop
xchg
xor
mov
mov
cmp
stos
sub
adc
add
sbbl
out
aam
add
mov
fsub
push
std
and
frstor
xchg
adc
js
dec
imul
imul
mov
movaps
addl
hlt
xchg
fs
mov
push
adc
and
inc
loopne
sarl
lret
push
in
sub
pop
xchg
out
subb
shlb
inc
mov
xor
mov
hlt
xchg
add
sarb
popf
pop
xchg
ret
decb
inc
adc
xchg
inc
mov
jge
outsl
jp
and
push
aad
out
pop
dec
repnz
cmp
repz
decl
pop
shlb
sub
sbb
lret
mov
aas
insl
xor
jns
rorl
mov
mov
pop
movsl
adc
popa
jg
scas
lods
pop
lcall
jl
shll
xchg
sahf
dec
xchg
ror
xchg
lret
jbe
aas
fmuls
and
ds
in
dec
adc
into
cmpsb
mov
mov
and
fs
sub
fs
iret
adc
mov
mov
jl
jp
aas
cld
loop
inc
jmp
xchg
mov
shll
adcl
dec
cmp
sub
inc
adc
int3
lea
push
or
jne
mov
ret
stos
or
lret
pop
inc
xchg
sub
mov
mov
and
or
jle
jb
clc
push
jecxz
std
lcall
push
or
pop
loop
sub
push
mov
and
cmp
loopne
add
call
gs
jno
in
pop
add
out
or
inc
lret
mov
arpl
fldl
jb
stos
fdivs
jg
adc
add
sub
pop
sub
aas
jg,pt
mov
arpl
imul
xchg
sbb
mov
data16
cs
jmp
clc
and
xchg
clc
xor
loop
lods
in
mov
push
jecxz
inc
jno
jg
or
data16
jmp
mov
mull
pop
xchg
into
adc
es
and
or
mov
jmp
lods
fdivl
fcoml
stos
adc
pop
sub
cltd
lods
pushf
divb
add
sbb
jle
push
dec
push
ret
push
insl
cs
push
push
sbb
jl
movsb
ljmp
jmp
ficompl
mov
dec
pop
shrb
pop
in
in
outsl
cli
push
push
imul
faddp
test
cmp
lds
dec
or
ja
data16
rcll
adc
or
mov
out
hlt
mov
ds
cli
and
or
outsl
pop
pop
fadd
aaa
adc
xor
dec
and
gs
mov
xchg
out
add
lahf
lods
iret
out
leave
dec
ja
insb
cmp
packssdw
out
dec
add
push
dec
adc
push
repnz
fdiv
jle
imul
mov
jg
ds
scas
in
imul
sub
mov
adc
scas
jge
inc
sub
dec
adc
jo
xchg
sub
inc
leave
stos
mov
pop
lcall
test
imull
insl
out
cld
icebp
add
push
gs
loope
mov
lahf
je
mov
push
imul
inc
pop
dec
jnp
sti
mov
jl
mov
cmc
cmp
fbld
fisttps
repnz
in
mov
pop
daa
cmpb
or
int3
mov
aad
and
ss
jl
aam
pop
or
mov
mov
xchg
movsb
fldl
fsts
dec
rolb
sub
xor
dec
ss
fidivrs
leave
ret
mov
inc
jmp
sbb
sub
enter
clc
lods
mulb
rclb
adc
inc
std
hlt
out
mov
or
sahf
dec
xchg
push
insl
and
fs
ja
jbe
dec
mov
mov
fcomps
into
addr16
or
adc
add
pop
inc
push
jbe
ss
sbb
addr16
pushf
pop
scas
mov
gs
push
pop
shll
and
test
mov
ss
lret
mov
dec
or
jle
sub
cwtl
repnz
dec
and
mov
mov
insl
inc
sub
or
neg
mov
jbe
ds
cmp
cltd
ljmp
iret
js
sub
mov
add
add
imul
mov
mov
or
or
push
dec
icebp
and
data16
mov
cmp
xorb
push
ror
mov
lret
push
add
lahf
scas
pushf
cwtl
ljmp
add
mov
mov
int
out
rol
jmp
es
fwait
mov
jno
xchg
pusha
lds
pop
jge
ss
jbe
arpl
xchg
fistpll
movsl
inc
push
jne
pusha
cmp
jge
les
jo
jle
iret
or
xchg
cmp
pop
xchg
xor
out
mov
cmpsb
std
mov
mov
ljmp
jbe
dec
cmp
or
ret
fimull
mov
inc
sbbb
mov
mov
cmp
out
push
xchg
add
push
adc
call
test
gs
mov
inc
sahf
push
aas
and
jae
mov
mov
ficoms
jmp
lods
add
or
mov
cmp
ror
mov
bound
inc
movaps
lahf
lods
cmp
loopne
in
fwait
iret
xor
sbb
adc
idiv
and
push
popa
and
mov
test
mov
xor
mov
lds
xchg
ret
adc
imul
in
mov
sbb
xchg
dec
jne
dec
iret
mov
pop
lock
inc
rorl
jge
dec
outsl
or
adc
inc
sub
loope
push
mov
adc
enter
cli
ljmp
daa
cwtl
int
push
and
pop
adc
jbe
xlat
sub
ffree
push
mov
jecxz
ja
adc
cmpsl
inc
xchg
int3
dec
cwtl
xor
fstpt
xchg
pop
nop
xlat
jg
incl
aas
xlat
adc
cmpsl
pop
push
ret
jmp
pop
push
shl
outsl
xchg
js
mov
mov
sbbb
and
pop
and
adc
pop
loop
pop
or
dec
ss
push
rcll
das
movsl
dec
push
insl
xchg
shr
add
and
lret
movhps
fldcw
adc
stc
cs
adc
outsb
cld
loopne
not
repz
and
xchg
orb
mov
jae,pn
in
dec
pop
aam
jg
push
les
aam
inc
shlb
dec
lea
lret
pusha
pop
shlb
push
mov
aam
pop
xor
mov
pop
sbb
ds
adc
fs
push
out
imul
adc
xchg
addl
out
and
in
ret
repnz
pusha
inc
loope
inc
mov
ljmp
outsl
mov
scas
cmp
xchg
aaa
push
cmp
mov
rorl
mulb
push
outsb
add
push
adc
pop
pop
clc
rcll
xchg
push
sbb
mov
sub
mov
fsts
push
xor
or
push
ret
repz
jbe
fchs
cmc
mov
std
ds
pop
std
dec
out
jge
adc
mov
pop
xor
fldenv
imull
or
imul
and
les
std
cli
outsl
xor
aad
sbb
clc
fisttpll
fisubrs
mov
push
jg
lock
aas
mov
mov
pop
fsub
pusha
push
data16
jb
cli
xchg
jbe
cld
lret
mov
ret
int
and
mov
xchg
fwait
lret
std
lock
mov
mov
mov
int3
or
or
jle
stos
or
subb
faddp
cmp
ffreep
out
cmc
je
xor
push
and
fimuls
out
int
ljmp
add
sub
outsb
ds
adcl
pop
push
inc
push
jb
push
sahf
test
scas
mov
iret
scas
sbb
sar
das
inc
filds
outsl
scas
add
mov
call
mov
out
gs
inc
das
and
insl
movsl
mov
and
jb
ror
leave
rcll
pushf
bound
orb
mov
xchg
sub
dec
and
xchg
or
std
ret
jecxz
push
mov
jo
mov
jecxz
fldcw
das
arpl
xor
std
push
push
inc
cmpsb
mov
adc
sahf
pop
cli
call
inc
mov
fstpl
test
enter
fcomps
push
push
repnz
gs
fsubrl
cmp
xor
in
scas
xchg
xchg
xchg
xchg
and
mov
jmp
xchg
mov
inc
jnp
push
stos
jmp
dec
or
cwtl
hlt
cmp
cmp
loop
lret
pop
mov
in
pop
loopne
cmp
ror
cmp
cwtl
js
and
in
mov
inc
lods
addr16
andb
pop
aas
dec
mov
scas
insb
das
cmp
pop
outsl
mov
aam
scas
clc
adc
shlb
mov
test
loopne,pt
add
scas
aaa
movsb
pusha
imul
movsl
out
mov
negl
pmulhuw
cs
out
inc
inc
popa
mov
roll
pop
jmp
push
add
xor
xchg
mov
popf
lods
xor
mov
shlb
fdivr
lea
push
bound
xchg
shrl
jnp
adc
pop
call
or
push
mov
cs
ficomps
std
add
addb
jmp
cmp
lcall
cmp
xlat
or
add
ljmp
or
mov
pop
sti
stos
fs
test
adc
insl
imull
stc
and
ljmp
fs
add
js
outsb
xor
or
cmp
insl
sub
decb
scas
xchg
dec
and
ret
pop
add
jl
leave
mov
repz
adc
loopne
iret
test
in
adc
dec
out
mov
xchg
mov
dec
fcompl
icebp
mov
into
pop
adc
push
pop
daa
xchg
xor
xor
in
lea
or
test
sub
sub
jb
or
jge
xchg
push
xor
ss
mov
data16
adc
testl
fwait
testl
cmpsl
push
and
test
sub
inc
lods
aam
inc
test
pop
adc
mov
mov
fbstp
adcl
xor
popa
loop
test
enter
nop
movb
sahf
arpl
sar
jo
rorb
stos
stos
or
mov
rcll
rorb
test
push
fs
or
lods
decb
mov
stc
sti
scas
lock
shlb
orl
sbb
out
mov
call
adc
xchg
jne
js
lods
pushf
clc
ds
outsb
js
and
lahf
cmp
sbb
movsl
push
out
jl
ja
out
ret
push
push
aad
int
pushf
sbb
jge
add
ficompl
sbb
pop
enter
ja
mov
les
jo
stc
mov
mov
mov
pop
js
pusha
jo
xor
cmp
loope
gs
testb
xchg
mov
add
push
inc
adc
data16
dec
mov
shll
int
jbe
pop
push
movsb
je
push
push
and
jg
push
push
leave
daa
and
push
es
insl
fldcw
stc
ret
cmp
sub
mov
mov
dec
mov
mov
pop
testb
lea
test
notb
stos
fadds
cmpsb
cmp
xchg
and
inc
lea
rclb
lea
punpcklwd
cld
cli
add
sub
enter
add
stos
sub
jle
ljmp
jnp
jbe
xlat
in
pop
xor
ds
cmpsl
cmp
dec
push
mov
cmp
dec
xchg
sub
adc
mov
cmp
cmp
pop
in
jp
in
stc
inc
aaa
dec
and
or
mov
ret
push
inc
adc
sbb
mov
add
data16
movsb
mov
cmpsb
add
jae
outsb
fmuls
mov
iret
xor
sbb
jge
scas
hlt
jmp
outsl
mov
dec
pop
sbb
dec
movsb
jmp
push
popf
lahf
enter
jmp
xchg
jmp
std
add
pop
mov
sub
outsl
xchg
sarb
movsl
stos
mov
mov
roll
loop
xchg
mov
mov
inc
mov
sub
aas
mov
inc
mov
jbe
xor
dec
aad
push
jae
mov
or
test
mov
pop
aad
fs
idivl
adc
adc
sarl
rclb
cmc
xchg
lret
in
addr16
outsl
and
ds
test
rcrl
dec
pop
cmp
outsb
mov
or
mov
ficoms
es
mov
push
xor
mov
inc
xorb
mov
fdivs
lcall
or
loop
jle
adc
cmp
mov
xchg
scas
pop
lock
out
or
or
add
cmp
push
test
cmpsl
pop
jmp
popa
lds
lea
rcll
outsb
ds
aas
add
mov
popa
push
adc
aam
ror
loope
xchg
ljmp
jnp
sbb
inc
inc
push
pop
sbb
aaa
add
mov
mov
xchg
pop
cmc
dec
test
sahf
xchg
inc
dec
dec
ss
adc
gs
dec
mov
test
int
xchg
dec
xor
cltd
mov
lahf
pop
je
das
dec
mov
out
adc
jl
rcrl
ret
pop
adc
je
enter
xor
cld
daa
mov
mov
xor
pop
dec
outsb
and
fucom
dec
xchg
aas
adc
push
sbb
into
push
mov
jb
sub
lahf
cltd
jmp
mov
mov
lret
mov
mov
push
sbb
movsl
enter
stc
insl
jnp
loope
adc
mov
pop
jp
ds
or
rcrl
and
jecxz
lea
xor
sub
fs
xchg
into
fcomps
jae
jmp
mov
loopne
xchg
ljmp
and
lcall
sbb
jl
jp
push
out
fs
xor
enter
jo
pusha
rorb
repz
cmpsb
push
idivb
lods
hlt
leave
push
sub
jge
jge
adc
fmul
and
push
jl
scas
mov
das
mov
inc
sti
stos
pop
mov
pop
fsts
rorb
and
in
adc
mov
cli
mov
loopne
sbb
lret
sbb
pop
dec
push
enter
cmpb
test
and
outsb
jge
sub
xchg
pop
loop
sub
mov
aas
sub
popa
sub
mov
movsl
add
mov
inc
shrb
test
add
cmp
imul
push
adcb
dec
fld
xor
adc
push
fcom
fiadds
insl
cmp
jb
add
cs
loopne
enter
jp
test
lret
mulb
imul
pop
nop
les
add
loope
call
leave
stc
mov
and
mov
xor
xor
clc
daa
and
push
pop
dec
mov
loope
addr16
xchg
pop
mov
in
mov
pop
arpl
xchg
mov
out
in
fs
not
leave
fistpll
add
xchg
xor
movsb
test
mov
sbb
ljmp
xchg
and
adc
mov
jns
or
xor
push
fisttpl
push
in
or
cmp
xchg
not
mov
lods
je
add
gs
push
or
xchg
pushf
jno
and
cmp
push
push
test
adc
add
data16
pop
xchg
or
sti
mov
adc
mov
test
outsb
inc
ficoml
xchg
testb
push
xor
faddl
bound
dec
push
inc
enter
xor
pop
mov
lods
push
lea
popf
imul
fistpll
loop
jne
in
rorb
rcll
and
xchg
jmp
ret
xchg
cmc
arpl
and
divl
adc
fdivs
sub
push
insb
cmp
dec
ljmp
scas
cld
cwtl
add
ficoms
push
aad
shr
lret
std
mov
jg
pop
dec
sub
xchg
adc
imul
lret
cmp
lea
push
xor
mov
es
xchg
push
mov
push
pop
ficoms
dec
push
pushf
shrl
out
push
loopne
pmaddwd
xchg
pop
imul
imul
xchg
cmp
mov
cmp
or
jne
xor
and
inc
cmpsl
sub
pop
lcall
adc
ljmp
out
dec
pop
sub
test
dec
es
add
sti
fwait
sbb
fildll
xchg
push
jecxz
or
adc
outsb
in
aaa
xor
iret
lcall
stos
mov
add
jnp
shll
les
push
dec
cmp
mov
xor
sbb
cmpsl
test
lods
inc
ja
lods
imul
dec
cmp
rcll
icebp
adc
loop
pop
ret
mov
hlt
call
fnstcw
outsl
cmpsb
push
sahf
mov
sub
fdivrl
daa
pop
movsb
or
mov
sbb
jns
dec
adc
xchg
dec
fimull
jno
gs
push
xor
cmp
sbb
pop
and
lods
pop
mov
inc
inc
sbb
pushf
scas
fsubrl
xlat
ja
fdivs
dec
icebp
inc
push
mov
mov
jbe
call
data16
lock
xorb
shrb
push
cmp
jg
xchg
push
adc
xorl
or
inc
push
ss
fisubs
inc
popl
or
scas
xor
mov
push
fidivrs
inc
lods
call
mov
mov
xchg
xchg
aad
cmp
jbe
idivb
xor
xor
shlb
ror
push
dec
adc
out
jo
ljmp
jp
lcall
and
push
movsb
add
mov
mov
data16
xor
cmpsl
sti
movsl
and
pop
repz
xor
in
rorb
cmp
test
pop
int3
xlat
int3
sbb
je
insb
or
fsubrs
cmp
mov
mov
fcomip
jnp
push
test
test
or
addr16
mov
xchg
imul
aad
mov
fnstcw
sbb
inc
lcall
or
push
jbe
cs
push
scas
add
lret
add
cmp
push
cmpb
and
loop
jno
sarl
xchg
mov
mov
xor
enter
shlb
sarb
dec
sub
out
dec
xorl
les
nop
cmp
mov
adc
xor
sub
xchg
loopne
sar
fs
mov
js
dec
jns
sbb
pop
dec
idivl
sbb
jmp
in
jg
out
jmp
jb
xchg
incb
in
sub
icebp
insb
popf
sbb
mov
test
lock
cmp
xlat
lcall
stos
mov
push
push
and
fildl
and
idivl
push
fwait
adc
test
addl
push
lds
pop
pop
in
jb
clc
sbb
repnz
cmp
repnz
jnp
cs
push
pusha
mov
jge
sub
jo
inc
arpl
sarl
ss
shrd
mov
dec
add
jp
xchg
arpl
aas
or
adc
fs
push
rclb
mov
mov
bound
fs
addr16
add
clc
test
insb
test
push
popa
rdmsr
pushf
pop
lret
lea
xchg
or
sahf
push
ljmp
xchg
add
push
or
inc
lret
dec
add
and
cmp
dec
pop
fcoms
dec
push
jns
test
lcall
fldt
lcall
fdivs
push
add
ljmp
push
mov
jmp
add
fiaddl
jecxz
rcr
mov
push
mov
dec
push
pop
lds
dec
aad
popa
shll
push
or
dec
mov
xor
mov
pop
jo
jmp
xchg
push
jecxz
adcl
in
add
ds
cmpsl
popa
in
xlat
fs
movsb
outsl
dec
mov
call
and
bound
rol
lret
sbb
xor
mov
xor
and
in
rol
test
jno
xlat
cmpsb
outsl
fsubrs
inc
push
andb
out
jb
sub
std
out
loope
add
inc
inc
sti
mov
jp
jl
sbb
push
pop
xchg
iret
rcrb
sti
mov
fs
repnz
pop
std
cmc
pop
xchg
popa
jo
cld
add
mov
stc
pusha
adc
stos
cmp
push
ficompl
pop
test
push
hlt
outsl
pop
push
inc
aad
adc
aad
rorb
ficoml
int
jp
movsb
rorb
inc
cmp
xchg
daa
push
add
inc
int3
cmp
or
jge
aas
xor
and
data16
add
inc
repz
xchg
addb
enter
cld
rcrl
pop
mov
arpl
jns
pop
sub
andb
ljmp
test
pslld
lea
dec
inc
cltd
xchg
insl
mov
push
orb
nop
jne
daa
shlb
cld
push
push
ja
mov
stc
fsub
mov
cltd
popf
test
repz
jecxz
pop
adc
jno
jle
fnstcw
dec
ret
enter
loop
jl
mov
fisttps
add
ret
inc
aas
lret
insb
inc
inc
in
jp
cld
jbe
lds
fidivrs
clc
xlat
sub
xchg
add
add
iret
inc
or
clc
and
inc
je
xchg
gs
bound
dec
jl
jb
je
std
adc
fadd
andb
pop
jae
enter
aas
xor
scas
nop
xorb
jmp
pushf
or
push
xchg
aas
movsl
mov
and
push
bound
fisubrs
out
pop
and
cmp
clc
fsubrl
adc
mov
frstor
fwait
shlb
mov
or
adc
lods
das
das
or
fsubs
lcall
add
or
and
sbb
fmuls
enter
push
pop
lret
aam
fcomp
je
xlat
jp
mov
movsl
sti
jmp
dec
in
and
int
jnp
shrl
sar
mov
pop
inc
leave
loope
inc
push
pop
add
xchg
loop
cmp
mov
push
sti
lock
mov
and
jb
pop
lret
pusha
jl
scas
sub
outsl
cmp
and
outsb
repz
repnz
jno
andl
dec
cmp
mov
mov
or
out
loopne
aas
and
fs
imull
repnz
push
fisubl
jbe
ljmp
faddl
add
outsl
pop
xchg
and
test
xor
in
jp
dec
or
into
dec
stos
lret
enter
mov
mov
or
sbb
xor
jnp
xor
pop
loop
test
sbb
and
or
cwtl
inc
mov
aam
adc
daa
inc
fldt
fldenv
cld
sub
testb
scas
jnp
hlt
sbb
decl
into
xor
dec
fstpt
out
push
cmp
dec
mov
or
and
or
mov
inc
fs
fildl
movsb
mov
mov
cli
and
cwtl
mov
sub
jb
mov
repz
shrl
sti
adc
imul
sub
jecxz
repnz
xor
js
ds
add
mov
fwait
adc
push
sar
rclb
jl
std
dec
pop
test
pop
out
cmp
mov
inc
rcrb
fs
test
add
push
sbb
lahf
push
fildll
or
mov
ja
add
dec
mov
mov
adc
ljmp
xchg
into
sub
pop
mov
inc
popa
ljmp
inc
mov
fs
mov
lahf
mov
xlat
sti
jae
in
jo
lods
xchg
aas
inc
push
xlat
scas
pop
jle
test
jl
imul
inc
lret
ret
in
lret
pop
mov
outsb
das
stc
sbb
lret
cs
sub
jne
cmp
mov
out
jle
inc
cltd
mov
push
andl
mov
out
addl
adc
xor
cmpb
xchg
test
xchg
pop
push
lret
dec
icebp
sbb
mov
mov
push
lods
in
sbb
data16
adc
incl
lret
out
adc
addr16
mov
mov
imulb
cld
imul
es
mov
pcmpeqb
popf
adc
cltd
mov
mov
sub
js
into
sub
sarl
dec
adcb
cmp
fisubrl
aad
jecxz
push
stos
or
in
cmp
orb
push
pusha
inc
push
pop
lret
dec
nop
repz
stos
pop
dec
push
adc
les
sub
mov
mov
ljmp
jae
mov
dec
and
dec
icebp
add
jle
sub
andb
xor
jbe
mov
in
mov
ja
rorl
jge
ret
push
fcomps
pop
repz
orb
xor
sub
mov
sub
mov
push
lret
pusha
movsl
inc
jg
ljmp
xor
jle
aam
pop
mov
jb
adc
mov
cwtl
adc
adc
mov
push
sub
inc
test
push
xchg
mov
jae
mov
push
enter
gs
arpl
and
jecxz,pt
les
repz
mov
repz
insl
pop
inc
mov
aas
stc
les
xor
repnz
cmp
mov
push
dec
or
xchg
fldt
out
std
sbb
daa
mov
jb
mov
enter
pop
sbb
sub
lret
cltd
rorb
cld
cs
repz
stos
and
jo
mov
mov
add
or
addr16
mov
scas
mov
inc
jmp
aad
pop
loopne
jg
mov
push
stc
in
mov
int
inc
push
fst
sub
aas
and
rcrb
ret
pop
pop
lret
mov
jecxz
xchg
sbb
cltd
call
pop
push
mov
mov
dec
fstl
shlb
cwtl
sti
xor
aad
mov
or
fistpl
inc
pushf
sahf
jmp
xlat
push
lret
sahf
jg
inc
insl
sahf
cmpsl
pop
std
idivl
outsl
jp
add
and
and
add
iret
jmp
jo
sub
je
sti
push
push
rcrl
mov
jae
xchg
gs
sbb
cmp
inc
lcall
scas
ja
cmp
mov
mov
mov
testb
ja
jg
fimull
das
dec
lock
jle
cwtl
setl
inc
dec
gs
mov
daa
sub
dec
and
imul
mov
jle
mov
iret
gs
jl
in
fwait
lcall
xor
rol
leave
popf
mov
adc
mov
pop
mov
enter
inc
cld
adc
dec
and
mov
mov
sti
adc
fnstsw
stos
daa
adc
stos
aas
lcall
fdivrl
clc
xchg
leave
mov
xchg
stc
mov
loope
dec
cmp
js
fadd
stos
jb
jns
cmpsb
jne
mov
mov
cmp
daa
xchg
push
xor
imul
xor
xchg
add
sbb
dec
mov
jb
addr16
sarb
pop
adc
int3
mov
test
xor
rcrb
push
xchg
mov
lds
bnd
xchg
mov
push
aad
push
pop
pop
repz
test
mov
cmp
test
call
or
pop
inc
test
lods
dec
insb
call
adc
cltd
add
add
out
mov
mov
cmovns
cli
pusha
inc
pop
movsl
and
subl
cmp
push
mov
popa
dec
fisttps
add
popa
inc
adc
mov
inc
fldenv
test
xor
out
or
push
ficoms
xchg
xchg
mov
push
test
aam
in
sbb
aaa
aas
shlb
add
gs
push
inc
aad
and
dec
clc
fs
mov
enter
push
pop
stos
repz
xlat
stos
aaa
mov
pop
scas
ja
pop
lods
and
sub
mov
add
sbb
sub
or
mov
je
rcll
or
inc
imul
test
mov
xor
movd
gs
jge
or
int3
cltd
insb
adc
int
and
daa
xchg
sub
cld
cmp
mov
loope
pop
sahf
add
or
sub
mov
add
and
or
xor
xlat
cmpsb
mov
rorb
ja
or
lret
pop
add
ret
outsl
sbb
js
test
dec
mov
cmpl
add
faddl
iret
scas
gs
mov
imul
xor
ret
test
sbb
jae
and
js
js
insb
add
sbb
out
rorb
xorl
pop
in
pop
call
jno
sbb
jg
stos
icebp
int
loopne
adc
dec
xchg
int3
mov
push
jne
xor
aad
shlb
cmp
jo
pop
test
lock
pop
push
shlb
push
xchg
dec
push
sbb
scas
or
test
or
arpl
aas
add
mov
cmp
movsl
push
jb
mov
xor
aam
mov
add
push
push
sub
adc
mov
inc
mov
xchg
test
test
pop
jae
dec
fldenv
add
push
popf
inc
pop
mov
sub
push
inc
mov
adc
cld
pop
imul
or
movsb
add
loope
mov
lea
or
jno
fiadds
adc
add
insb
rcrb
sbb
cs
add
or
loop
aaa
xchg
rcrl
mov
repz
ret
add
addr16
arpl
loopne
ficomps
push
aad
inc
mov
push
adc
test
leave
push
rorl
pop
test
push
xchg
ret
and
cmp
mov
in
xor
xor
aas
push
gs
lcall
and
mov
or
mov
into
xchg
push
ss
xchg
lret
fimuls
das
adc
xor
ror
js
pop
inc
lret
pop
mov
or
idivl
jno
nop
xor
mov
xchg
or
or
cwtl
sub
dec
in
lods
sbb
or
lret
push
push
outsl
fs
mov
iret
in
sub
in
sahf
and
and
enter
enter
mov
jnp
shll
push
aaa
sub
dec
xchg
pop
inc
in
sbb
sbb
jmp
je
mov
std
sbb
std
push
test
rcl
fldl
cmp
rclb
sarl
rolb
xor
xor
inc
lods
cltd
jl
aad
aas
mov
push
rcr
xor
xor
push
movsl
mov
sbb
imul
test
jmp
jbe
imul
fsubrl
or
xchg
shll
jb
jb
adc
mov
add
outsb
mov
mov
pop
das
add
mov
mov
out
gs
xor
mov
add
mov
push
repz
mov
and
pushf
ret
std
out
jp
fs
arpl
sbb
fisubrl
pusha
xor
shr
push
enter
imull
push
mov
repz
call
mov
movsb
mov
fdivp
daa
test
in
inc
mov
loope
fbld
shrl
xor
cmpsb
xchg
or
add
mov
add
mov
mov
popa
js
cmp
push
frstor
and
icebp
pusha
arpl
pop
clc
cmp
subb
xchg
pop
sub
adc
stc
mov
aam
out
add
cwtl
int3
sti
imul
call
stos
mov
inc
xor
sbb
push
cmp
dec
inc
adc
into
jg
aas
push
stos
les
adc
ror
mov
movsb
cmp
jl
loopne
test
mov
ja
xchg
mov
pushf
fwait
movsl
adc
push
inc
es
test
mov
ficompl
add
outsl
push
cmp
mov
cmp
inc
dec
xor
pop
stc
movsb
mov
jo
xor
push
mov
sub
pop
cmp
adc
xor
push
std
or
sub
adcl
add
dec
push
sti
xlat
jp
loope
int3
jle
loope
push
dec
sub
bound
jb
call
movd
je
hlt
push
lahf
or
add
adc
popf
pop
lds
sub
je
fisttpll
cmc
mov
out
orl
dec
out
in
or
in
imul
stc
mov
or
inc
sbb
addb
aad
mov
mov
push
mov
stos
int
repnz
push
rol
lds
pop
out
xlat
dec
fidivs
jno
or
jmp
jbe
mov
xchg
rolb
xlat
cmc
ret
xor
or
rcll
add
mov
push
sub
mov
push
mov
setae
mov
into
inc
repnz
jb
add
mov
push
cmp
inc
push
xchg
js
mov
scas
adc
fistpll
push
mov
xchg
aad
jge
incl
shl
sbb
int
sub
in
push
cmc
insb
punpckhdq
xchg
push
inc
push
mov
jmp
testl
push
xor
push
adc
mov
ljmp
ret
insb
int3
sbb
push
push
jge
je
mov
or
pushl
gs
add
mov
in
cmp
aaa
mov
pop
jge
push
scas
dec
xchg
aas
mov
js
xchg
push
pop
popf
imul
and
test
push
mov
outsb
inc
sti
test
lea
xor
xor
push
ds
mov
call
repnz
rcrb
cmp
mov
ret
je
movsl
mov
int3
xor
add
out
sub
xor
dec
jbe
mov
jmp
incb
push
jae
dec
rcr
mov
pop
or
ret
lock
push
hlt
loop
insl
sarl
insb
add
mov
insl
ja
shrb
pop
or
mov
add
movsl
cmp
test
fdivp
call
dec
jl
mov
jle
push
jecxz
xor
mov
test
daa
jbe
imul
data16
xchg
insb
push
mov
lds
sbb
mov
sbb
pop
cmp
jmp
movsl
xor
cmp
in
lret
sub
aaa
jecxz
lahf
mov
faddl
cmc
or
inc
jo
dec
aad
pop
push
out
sub
sbb
mov
dec
repnz
orb
popa
and
cs
push
cld
pop
pusha
and
fnstcw
fwait
push
hlt
sub
sbb
jbe
add
adc
jb
push
ds
xchg
mov
inc
dec
int3
or
std
leave
out
jb
pop
mov
decb
mov
cmc
aam
inc
jne
insb
fidivrs
inc
leave
xchg
test
dec
cwtl
insl
repz
push
leave
iret
repnz
mov
test
cltd
inc
push
mov
ret
xchg
and
popf
jge
mov
ret
sarb
mov
cs
repnz
scas
bound
and
test
push
sti
mov
cmp
xor
fcoms
mov
sub
mov
push
imul
xchg
scas
push
out
repz
jecxz
flds
arpl
cmp
daa
stos
inc
arpl
dec
cwtl
mov
mov
inc
in
scas
sub
add
movsl
lods
les
imul
sub
fists
mov
in
mov
test
sbb
fwait
add
arpl
xchg
cmpsb
cmp
or
push
psrad
jmp
push
push
fldcw
sti
popf
fdivrl
cs
push
pop
fsubrs
mov
aam
xchg
popf
shlb
cld
out
cltd
adc
mov
mov
dec
cmp
xchg
fwait
test
insl
repz
adc
sbb
xchg
fnstenv
sub
popf
aas
push
lock
std
es
rcrl
push
ja
xchg
push
out
je
fstpt
out
cmp
lret
or
pop
xchg
ret
loop
xchg
and
jnp
std
cmpsb
inc
lea
xor
iret
ja
cmpl
lea
mov
das
sbb
lcall
or
loopne
int
jo
push
push
movsb
scas
sub
sub
shrb
cmp
cmc
add
push
mov
jno
add
mov
dec
js
mov
ret
in
fdivrs
idiv
pop
pop
cltd
push
adc
mov
out
push
push
cmc
jg
xchg
dec
subb
xor
jae
dec
xchg
loop
cmpsl
lret
dec
cmp
mov
sub
lods
icebp
inc
stos
sbb
mov
into
ja
dec
sti
xor
push
mov
sbb
xchg
mov
movsb
inc
dec
sti
xchg
sub
gs
cwtl
fnstenv
mov
in
bound
mov
mov
pop
xor
xor
mov
stos
mov
mov
or
push
sbb
idivb
lea
into
push
lock
jp,pt
mov
test
fwait
movsl
and
mov
sar
aam
out
int3
scas
adcb
push
inc
ret
jge
cs
pop
pop
xchg
fcomps
je
int3
jmp
das
add
dec
fstl
push
mov
jns
out
imul
mov
adc
push
or
scas
stc
push
xor
daa
in
in
jg
sbb
adc
int
sbb
and
call
dec
mov
out
mov
aaa
pop
scas
sub
mov
arpl
cmpl
movsl
mov
negb
lods
into
cmp
and
subl
pop
movsl
and
dec
shlb
test
mov
ja
fwait
sbb
xchg
ror
jne
addr16
loope
xchg
jae
sub
adc
dec
adc
shrb
daa
add
nop
pusha
fbstp
inc
aam
pop
mov
sarb
ss
imul
lea
jb
out
outsb
cld
pop
and
stos
mov
jp
mov
pop
inc
int3
ljmp
xor
mov
aam
mov
ja
sub
pop
pop
adc
push
ss
js
xchg
fistl
mov
ror
cmpsl
fstps
rcll
shlb
push
inc
mov
and
bound
in
out
jge
jecxz
mov
mov
or
out
movsl
rcr
jo
test
insb
stos
pop
add
and
mov
and
cmpl
rcr
test
mov
push
mov
xchg
jo
mov
sbb
cmp
pop
mov
xor
xchg
cmp
aas
add
test
inc
shl
sub
or
or
scas
aam
cmpb
mov
outsb
sti
lret
or
aas
adc
pop
cmp
jo
repz
jo
shlb
aam
xor
bound
xor
in
into
ret
xlat
test
lds
roll
sbb
xchg
lock
in
pop
xchg
xchg
subl
sbb
add
mov
roll
rorl
mov
rcrl
cwtl
mov
insl
xor
lret
into
sahf
mov
pop
or
xchg
jo
fcoml
ljmp
adc
std
push
jg
enter
scas
cmp
mov
sbb
mov
mov
mov
ret
fcomip
sbb
stc
nop
push
imul
dec
adcb
out
push
shll
shl
jp
jb
mov
dec
in
dec
fcoms
or
inc
sbb
sti
mov
pop
adc
dec
sub
fdiv
fucomp
sbbl
add
or
in
dec
dec
gs
jo
cmc
sbb
data16
pop
cli
inc
das
dec
loope
pop
in
mov
xchg
lea
cmpsb
mov
push
ficompl
xchg
je
xor
push
jl
xchg
inc
bound
rcl
jo
sub
jle
test
mov
addr16
je
cmpsl
xor
test
shll
and
push
fisttpl
clc
sbb
lods
xchg
pop
xor
and
mov
and
mov
cmc
and
pop
arpl
insl
ret
cmc
aaa
push
push
adc
pop
outsl
jno
push
scas
std
in
push
int
shrb
rorb
or
repnz
repnz
rorb
cmp
mov
cmp
mov
arpl
dec
jnp
dec
dec
push
cmp
xchg
mov
repnz
into
ficomps
xchg
sbb
sbb
test
movsl
adc
ds
cmc
mov
cld
mov
aaa
or
add
pusha
xor
imul
mov
push
or
and
pop
subb
dec
addr16
and
nop
leave
lret
push
xlat
out
lahf
push
dec
aas
mov
aam
and
insb
pop
ret
adc
push
lock
lock
pop
cs
or
pop
lea
mov
lods
js
adc
in
ljmp
popf
clc
bnd
cmpsb
std
mov
scas
pop
ss
cmp
scas
fldl
scas
daa
es
stos
enter
sbb
jg
sarb
add
roll
repnz
adc
aad
sub
repz
or
cltd
popf
mov
out
hlt
mov
jmp
ja
mov
out
lods
jne
test
adc
add
pop
cli
jne
popl
xchg
xchg
pop
jmp
mov
mov
out
adc
xor
aam
mov
xchg
sub
mov
pop
jge
int
out
sbb
mov
jp
mov
in
mov
sbb
rorl
sti
jmp
inc
filds
into
test
xchg
jp
push
adc
xlat
and
or
sarb
pop
adc
xchg
in
test
sti
inc
sbb
popf
xchg
and
fwait
out
inc
andl
scas
inc
cli
repz
mov
cmp
mov
adc
pop
pop
sub
push
sbb
mov
stc
jns
xor
cmp
je
repz
in
add
xor
add
pop
fistpll
adc
lahf
add
jae
jmp
sub
and
fcomps
addb
inc
das
iret
cmp
es
sbb
xchg
sahf
clc
cmovns
cltd
push
popa
out
xchg
mov
mov
mov
jmp
jge
push
stc
push
cmp
pop
lret
ljmp
fcmovbe
flds
insl
stos
add
mov
adc
pop
inc
push
push
clc
inc
sub
and
aad
add
xchg
and
mov
mov
xchg
xchg
lods
cmp
inc
xlat
push
and
pop
pop
icebp
mov
lea
gs
lods
scas
dec
lods
fwait
les
faddl
adc
jo
test
push
mov
sbb
loop
inc
and
sub
ret
push
and
inc
mov
lahf
dec
pop
repz
outsl
or
rclb
test
xor
popa
push
adc
sbb
psubd
fsubl
sbb
dec
dec
push
or
xor
out
mov
popa
aad
cmc
add
push
mov
pop
sub
stos
iret
pop
int3
sub
enter
sahf
iret
mov
sub
fs
dec
in
fnsave
and
je
icebp
mov
fldenv
out
sbb
mov
xchg
dec
inc
inc
xor
pop
test
or
push
pop
ss
push
jns
lock
out
mov
jbe
aad
cs
jns
test
call
pop
mov
push
rcll
ljmp
add
xlat
bound
enter
shlb
decl
scas
int3
leave
pushf
pop
jecxz
xor
mov
jae
in
push
inc
add
sbb
xor
enter
push
ljmp
cmp
mov
mov
pop
xchg
cmpsb
fildl
fistpl
xchg
dec
mov
shlb
mov
lcall
pushf
ds
pop
fcmovnu
and
mov
call
incl
fisttpll
push
test
mov
bound
ret
jb
loope
scas
inc
adc
pop
sbb
ss
adc
outsb
scas
pusha
int3
adc
les
addr16
jp
inc
lcall
or
push
je
or
cltd
add
movsb
mov
stos
out
xchg
popf
iret
ja
mov
xchg
dec
push
jnp
mov
fsubs
pop
cmp
and
ror
sahf
iret
cmp
std
jae
fwait
test
dec
dec
cmp
push
rorb
xor
cmp
xlat
movsl
xor
sbb
nop
cmp
fs
or
es
lret
mov
arpl
mov
push
shlb
test
enter
dec
fdiv
and
test
ljmp
daa
sar
push
mov
push
lret
cmpl
push
movsb
popa
lea
aas
pusha
out
push
jb
push
jle
in
ja
mov
jno
cwtl
ror
sbb
cli
xlat
roll
imul
pop
mov
sub
inc
inc
popf
xchg
out
add
jne
dec
imul
push
inc
sub
int3
iret
loop
in
xchg
rorb
pop
pop
popa
mov
sub
cmp
gs
popf
arpl
cltd
mov
lcall
gs
mov
xchg
dec
sti
xchg
mov
jns
pusha
inc
repz
imul
lahf
sub
jmp
popa
bound
mov
lods
push
jp
pop
adc
loopne
push
inc
stos
in
jmp
pop
and
cmpsb
push
xor
sarb
sbb
enter
cmp
cmp
je
sub
mov
and
ss
pop
adc
orb
mov
popf
jo
pop
mov
inc
cltd
mov
lds
mov
ljmp
popa
sbb
lds
push
ljmp
adc
cmp
sub
jae
imul
xor
inc
stos
fdivs
inc
mov
xor
add
scas
repz
fisubrs
pop
sbb
add
dec
repz
movsb
inc
mov
js
cmp
add
lcall
sbb
push
fs
popa
cmp
cmpsl
popa
adc
adc
adc
idivb
lret
insl
lahf
inc
frstor
mov
lock
test
mov
les
out
pusha
pop
sti
stos
push
push
xchg
rcrl
xchg
mov
push
push
pop
xchg
pusha
push
adc
gs
mov
jno
sbb
stc
fistps
push
in
ljmp
mov
pop
fsubrs
pusha
and
daa
out
movsb
out
imul
inc
add
add
xchg
ficoms
inc
fldl
jg
add
jo
inc
out
jbe
push
repz
adc
inc
jne
in
je
push
out
sahf
call
xor
roll
jns
out
mov
mov
inc
add
outsb
cltd
pusha
je
xchg
loopne
data16
in
xchg
lahf
stc
jp
mov
mov
test
sub
testb
push
add
xor
fs
cmp
sbbl
dec
arpl
das
push
int3
pop
pop
notb
lret
mov
sbb
lret
rclb
cmpsl
cmpl
stc
jmp
rcll
pop
cmp
notl
in
or
stos
add
out
xor
lea
adc
pop
cltd
outsl
cmpsl
rcrb
aaa
in
stos
scas
in
add
out
xorb
repnz
popa
pop
mov
add
sbb
iret
sbbb
mov
notl
fmuls
es
add
ss
pop
imul
outsb
cmpsb
xorb
sahf
int
or
loopne
pop
js
popf
mov
ret
dec
ret
push
mov
scas
pop
jnp
dec
cmp
test
lds
mov
mov
outsb
loopne
loop
push
lahf
out
xchg
inc
xchg
sub
outsl
mov
push
lahf
jnp
push
dec
iret
out
lea
mov
in
or
xor
pop
std
mov
pop
or
jnp
mov
loope
mov
inc
aaa
sbb
sub
or
dec
xchg
pushf
lcall
loope
push
lock
dec
pop
and
or
add
sbb
scas
cwtl
jo
pop
jo
pusha
iret
aaa
ljmp
jbe
hlt
in
ret
stc
xchg
mov
push
dec
movswl
lahf
add
in
scas
inc
mov
lock
mov
test
shlb
daa
movsl
inc
pop
fisttpl
or
loopne
loope
flds
cmp
fnsave
seta
xor
inc
dec
inc
cltd
arpl
and
adc
inc
lds
mov
cmc
jbe
flds
sub
cmp
jb
fildl
out
adc
loop
and
in
adc
jno
cmp
dec
test
les
mov
loop
dec
imul
pusha
jns
insb
repz
jb
xchg
shll
dec
cmp
pop
lret
jne
pop
mov
gs
sbb
inc
mov
sub
lods
xchg
push
cmp
popa
adc
test
incl
test
add
sbb
push
inc
in
mov
mov
push
lahf
out
cmp
sbb
shlb
test
sub
sub
rolb
mov
and
daa
cmp
fldl
incb
sub
fnstsw
jae
jnp
lret
cmp
sub
sub
outsb
fs
jo
stc
test
out
mov
lcall
sub
std
add
or
mov
jo
jmp
lcall
repz
mov
lods
dec
scas
std
mov
dec
jbe
inc
and
js
pop
jl
in
inc
xchg
xor
fidivrl
ret
pop
jne
mov
jb
loope
das
xlat
adc
dec
cmp
jb
adc
jae
cmp
adc
int3
cmpsb
addr16
add
and
shl
out
jmp
lea
rorl
subl
push
pop
mov
cmc
mov
push
pop
and
rcl
push
outsl
jnp
push
jns
mov
pop
fidivrs
daa
and
shlb
xchg
aad
in
add
push
stc
pop
es
loopne
ss
jno
mov
push
in
repz
data16
daa
cltd
test
neg
outsl
bound
pop
push
mov
cmp
dec
xchg
xchg
add
jle
or
push
sbb
push
in
jmp
iret
add
int
push
push
shll
cli
add
les
aaa
inc
cmp
mov
mov
aas
cld
jp
push
das
add
inc
sub
mov
xchg
push
out
je
test
popf
sub
bound
lahf
and
decl
shlb
mov
std
inc
xor
adc
xor
jecxz
cld
icebp
xlat
out
sub
pushf
test
or
xor
js
icebp
inc
lea
lods
int
andb
pop
subb
xor
push
cmpsb
push
jmp
mov
and
fisttpl
jecxz
jmp
ss
fidivrs
mov
mov
movl
out
mov
push
popa
or
jno
fnstsw
push
les
js
xchg
mov
cmp
push
adc
sbb
scas
jo
xchg
cli
mov
ja
jno
mov
shlb
out
cwtl
and
xor
or
pop
xchg
or
stos
xchg
gs
and
inc
inc
mov
pop
or
adc
add
ret
mov
lret
daa
push
xchg
cli
scas
std
adc
cmp
ljmp
mov
inc
imul
dec
mov
push
cmp
mov
sub
pop
lret
lea
mov
or
xor
int3
cld
mov
inc
dec
inc
mov
loope
adcl
lock
scas
loope
adc
imul
outsl
xchg
mov
or
sbb
xchg
cwtl
gs
mov
xor
and
jo
jmp
cmp
rcrb
sub
jnp
mov
mov
mov
xchg
and
ja
push
aaa
frstor
dec
jne
lret
and
mov
push
idiv
add
mov
addr16
mov
jmp
jns
mov
out
stos
sbb
mov
mov
js
lgs
mov
les
push
fmuls
pop
mov
repnz
pop
jl
and
xchg
and
loopne
xchg
ret
mov
jg
and
sbb
inc
mov
and
or
jb
jge
or
out
and
ret
adc
shrb
je
or
xor
add
enter
mov
shrb
test
test
inc
das
sbb
jg
daa
ficoml
mov
mov
pop
ljmp
orl
subl
fistps
xchg
mov
mov
in
or
std
fsubr
setbe
pop
cwtl
mov
cltd
mov
push
sbb
lock
cs
or
push
imull
fucomip
inc
add
movsb
mov
push
jnp
mov
pop
mov
gs
pop
jmp
mov
xchg
fs
les
mov
outsl
inc
int
sbb
into
rorl
pop
push
sub
stos
movsb
repnz
sub
test
push
stos
enter
or
inc
or
test
scas
popl
sbb
push
fdivl
push
stos
xchg
imul
adc
movsl
xchg
sbb
repnz
insl
dec
ss
pop
movsl
pop
fs
push
ret
ror
inc
xorl
sarl
jns
fucom
push
mov
ror
in
or
int
xor
stc
lret
clc
jmp
std
push
mov
add
ljmp
adcb
hlt
jl
cmp
dec
dec
xchg
push
add
ss
popa
stos
pop
jle
lds
rcll
sbb
aaa
fs
xor
and
jae
inc
insb
lea
xchg
fwait
jne
inc
or
add
mov
mov
mov
mov
push
rclb
inc
hlt
loope
fcoms
mov
cmp
stos
addb
jp
jle
fcomip
int3
sbb
lret
sub
lods
mov
dec
hlt
push
addr16
cmpsb
popf
sbb
sub
popf
mov
jecxz
leave
notb
cltd
fs
jne
aam
adc
mov
adc
test
es
sahf
aas
xchg
addb
sarl
sub
mov
or
xor
fwait
cmp
fbld
cmc
nop
cmc
pop
test
repnz
jl
pop
imul
and
out
cld
pop
stc
sbb
mov
dec
cmp
jo
in
clc
iret
lret
jb
pop
cmp
sahf
pusha
xchg
add
sub
add
std
lds
je
jb
pop
ret
scas
cmp
fcoms
test
out
or
cmp
xchg
in
lahf
or
push
out
lahf
jns
mov
add
mov
ds
add
movsl
in
arpl
xchg
and
dec
lods
test
jmp
pop
jnp
mov
and
cltd
sub
jb
or
mov
jl
pop
dec
cmp
lods
xchg
addr16
lret
mov
ds
cmp
inc
bound
mov
mov
iret
push
cmpsl
aas
bound
bnd
jbe
cmp
and
fsubr
leave
adc
dec
out
mov
jns
and
jne
jnp
nop
test
lods
data16
arpl
ljmp
pop
inc
mov
push
push
inc
lods
fnstenv
loope
insl
ret
fldcw
inc
jae
jle,pn
inc
in
out
dec
adc
jno
cwtl
pop
cmp
arpl
lret
and
ret
dec
jg
dec
out
dec
cmp
cmp
add
loope
pop
iret
imul
xlat
jecxz
loop
add
aad
leave
or
push
xor
pop
lods
clc
pop
movsl
aas
xor
cwtl
cmp
ja
push
cmpsl
in
adc
adc
fcom
lods
inc
shll
je
enter
mov
add
mov
out
pop
js
lods
mov
inc
xchg
pusha
je
push
mov
sub
cltd
stos
sbb
nop
std
jecxz
xchg
push
xchg
ljmp
mov
loopne
in
pushf
jmp
decb
jl
mov
adc
adc
sub
lret
popl
insl
gs
mov
daa
jl
pushf
shr
xor
or
pop
xor
sbbl
adc
inc
pop
and
fadds
lahf
jp
inc
pop
jmp
jne
ss
mov
fdivs
sbb
icebp
mov
dec
pop
xor
or
or
andl
adc
leave
mov
pusha
into
lret
pop
adcl
inc
ss
pop
iret
rol
faddl
and
cmp
ja
sub
jge
and
les
testl
in
fistps
pop
xchg
jns
mov
mov
mov
ds
rclb
inc
hlt
aam
repz
fildl
nop
push
mov
stc
sbb
inc
test
out
in
jbe
adc
scas
add
mov
sbb
xor
push
jo
mov
ret
cs
fnstcw
dec
cmp
dec
popa
adc
jbe
jnp
push
and
jge
lods
jmp
mov
popa
mov
rolb
cmp
out
mov
mov
and
xchg
mov
push
lahf
push
or
lea
mov
into
pushf
shll
fwait
inc
adc
adc
leave
mov
filds
inc
and
jg
cwtl
pop
fcompl
lret
in
orb
ljmp
cmp
push
xchg
cmp
cwtl
in
sbb
push
leave
mov
pop
xor
enter
push
pop
fcmove
arpl
or
xchg
fdivr
mull
cmpb
push
out
mov
flds
push
hlt
ss
add
push
cs
cld
sub
test
jg
xor
jge
mov
loopne
add
icebp
ss
adc
jg
out
es
bound
sub
and
dec
dec
dec
repz
mov
data16
jno
loope
stos
leave
mov
rcr
sbb
cli
int3
xor
mov
pop
enter
xor
mov
int3
cli
popf
sub
pop
or
xor
ret
mov
inc
sub
idivl
jg
inc
in
out
mov
sub
mov
push
cs
sahf
pop
sti
add
jnp
sbb
xor
leave
pop
mov
dec
in
dec
lgs
jb
pop
jmp
insl
cmp
dec
push
stos
bound
and
mov
jge
cmpsb
jbe
mov
sub
ja
sub
ljmp
jns
orb
lret
xchg
pop
or
mov
and
jmp
mov
add
loope
cli
dec
mov
es
rorb
add
mov
or
and
adcl
jl
scas
fsubrl
cltd
mov
push
or
jne
scas
dec
orb
sub
mov
lods
clc
test
cmp
xor
jle
sti
rcl
sub
xchg
xor
out
sub
jl
das
rcrb
stos
loopne
mov
push
push
pop
loope
fwait
add
pushf
cs
push
or
and
xchg
jnp
faddl
fldt
sbb
pop
push
or
inc
mov
loope
mov
mov
ss
fdivrl
mov
lods
push
and
lds
dec
leave
sub
cltd
pop
inc
lock
xchg
cs
and
adc
mov
dec
cltd
ja
hlt
ret
cmp
je
mov
rorb
dec
lahf
add
test
inc
dec
push
jno
dec
push
cmc
push
mov
mov
push
jbe
std
mov
push
negl
in
movl
lahf
xchg
or
xor
xchg
adc
cmp
test
sbb
xchg
push
lock
push
addr16
or
mov
je
int3
aam
adc
cltd
push
sub
cmpsl
shl
mov
sbb
cwtl
dec
inc
out
mov
stos
xchg
rcr
sbb
jno
xor
mov
xor
mov
xor
pop
and
adc
aam
cmpsl
mov
loop
js
jmp
jmp
mov
xor
arpl
cmp
mov
push
inc
or
pop
lea
shll
leave
xor
jno
adc
jge
pop
fisttps
jmp
in
mov
loop
pop
push
test
inc
shll
push
dec
dec
inc
shrl
inc
scas
stos
ss
xor
sbb
xor
mov
or
mov
jae
mov
push
cmp
adc
inc
inc
aam
add
insb
cltd
cmpb
mov
dec
dec
mov
inc
pop
out
test
ds
sbb
das
stos
incl
jle
sub
mov
sub
outsb
xor
jno
dec
and
out
push
add
shrb
and
push
rorl
dec
inc
insl
or
shlb
into
jbe
mov
int3
xchg
sbb
insl
addr16
sub
push
call
mov
push
dec
aad
dec
mov
lods
sbb
and
jne
out
gs
cmp
add
fwait
and
pop
jg
add
andb
xchg
movsb
aad
lods
ss
cmp
add
mov
test
dec
imul
push
push
icebp
inc
pop
mov
inc
fldenv
mov
les
out
or
fdivr
cltd
mov
pop
js
push
testl
aaa
out
jge
xchg
je
cmpl
jbe
pop
stos
xchg
and
jo
inc
fwait
dec
jo
scas
clc
push
dec
subb
pop
push
sbb
ljmp
fstps
outsl
sub
aas
dec
and
fists
repz
push
pop
add
mov
iret
bound
or
aad
xchg
xor
popf
ljmp
jge
rcl
xchg
cmp
mov
sub
fimull
push
jo
ljmp
fcomps
ljmp
jnp
xor
stos
xor
flds
int
rorb
loope
mov
incl
or
inc
lods
xlat
jbe
cmp
jge
and
insb
imul
enter
dec
fneni(8087
lods
jg
xor
add
xor
les
add
mov
dec
mov
fstl
xchg
popa
mulb
pop
idivb
add
and
sub
mov
ret
xchg
pop
subl
xchg
popa
out
outsb
sub
sub
or
or
xchg
push
aaa
mov
and
imul
push
lret
fs
pop
adc
leave
lods
sub
sbb
mov
adc
flds
mov
mov
push
adc
mov
mov
and
addr16
sub
es
cmp
cmp
ja
stos
inc
inc
mov
or
lcall
stos
test
pop
pop
stos
cmp
iret
inc
pand
mov
mov
and
mov
rclb
xchg
lret
call
mov
adc
mov
mov
sub
arpl
test
pop
mov
push
divl
daa
cli
dec
jnp
mov
sub
data16
xchg
cmp
int
scas
xchg
imul
mov
jecxz
mov
mov
loope
inc
mov
daa
sbb
jl
sbb
mov
jns
stos
jno
out
sub
testb
or
cmpb
call
jg
pop
lods
les
ljmp
imul
test
sub
call
or
fidivs
shr
mov
shll
push
push
mov
cmp
pop
inc
jecxz
dec
sahf
cmp
sub
je
xor
aam
add
sbb
mov
movsl
frstor
mov
aas
dec
sti
inc
add
inc
popf
aaa
pop
sbb
dec
dec
mov
repz
pop
mov
pushf
adc
adc
jne
rolb
jne
dec
jg
arpl
sub
inc
cmp
sbb
lods
pushl
jmp
outsb
add
mov
outsb
jl
mov
push
mov
and
push
arpl
or
inc
ficoml
js
ficompl
aam
inc
inc
pop
addb
aaa
mull
jp
movzwl
sub
push
shrb
cmp
cli
add
shll
add
cmp
ret
mov
xor
shll
mov
sbb
jae
addr16
cmp
lcall
out
jns
out
insb
daa
enter
cmp
push
and
adc
shlb
cmp
sbbb
dec
ret
repz
movsl
out
mov
mov
fsubrp
jo
dec
dec
xor
mov
repnz
mov
push
jle
add
inc
xor
add
pop
std
adc
jl
mov
movsb
dec
pop
or
repz
inc
stos
in
pop
mov
imul
dec
sub
mov
adc
cmp
mov
mov
adc
xor
and
je
cmp
icebp
in
pop
and
sbb
pop
mov
les
and
cld
mov
dec
jp
sbb
fs
into
filds
ljmp
loopne
mov
lods
fadds
hlt
in
dec
jecxz
mov
push
cmp
lcall
icebp
cld
jnp
pop
daa
pop
xor
mov
push
fdivr
lahf
mov
xor
ss
or
adc
lods
mov
xchg
jne
jmp
rorl
jle
fsubl
fs
jnp
xor
and
or
ljmp
pop
test
dec
pop
pusha
xchg
cmc
cmp
ss
aam
mov
or
cmc
and
lret
sbb
push
clc
push
push
scas
xor
cmp
mov
popf
mov
into
out
xchg
lods
sub
les
iret
push
ja
out
cwtl
fst
mov
cmp
push
fwait
xchg
jne
testl
mov
add
adc
pavgw
sbb
es
out
cmp
ss
xchg
xchg
loopne
js,pn
inc
ficoml
outsl
mov
stos
xor
popa
inc
cmc
inc
sarl
and
jle
or
sti
scas
nop
or
call
xor
call
js
popl
jnp
xchg
mov
xor
mov
fldenv
and
or
int
or
xor
enter
mov
je
lock
ljmp
aas
cld
or
cwtl
jne
pop
ss
call
inc
mov
in
cmc
jecxz
fwait
and
mov
fstpt
inc
mov
jecxz
push
mov
dec
pop
dec
fdivrs
mov
add
jecxz
lret
stos
xchg
mov
into
dec
outsl
pop
sbb
shrl
mov
sbb
lods
stc
mov
adc
cmpsb
dec
add
pop
iret
call
in
ds
jle
push
jp
fwait
add
jns
pusha
pop
out
or
shrl
andb
mov
sbb
pop
flds
inc
stos
sub
rclb
mov
ret
inc
arpl
mov
push
sbb
push
cmpsl
scas
sbbl
enter
data16
dec
popa
repz
lds
shlb
addr16
adc
icebp
pop
xchg
jo
and
xchg
je
scas
in
sbb
imul
dec
aad
jns
pushf
dec
pop
ja
push
insl
fs
lods
std
push
inc
setae
nop
je
es
push
lds
ret
je
or
repnz
cltd
inc
call
xor
xchg
add
push
aad
xchg
lcall
cmp
xchg
jnp
dec
mov
popa
icebp
repz
mov
loop
and
popa
jo
inc
lcall
cmpsb
xlat
rorl
out
sub
jp
insl
sbb
push
mov
xchg
outsb
decb
lods
repz
add
ljmp
imul
inc
pop
arpl
xlat
shr
add
xchg
dec
dec
add
jae
fs
mov
xchg
add
lret
das
mov
insl
xor
mov
popf
xchg
sbb
aas
inc
std
icebp
scas
pop
fstpl
and
scas
iret
pop
push
jb
jne
xor
sub
xchg
pop
xchg
xchg
cmp
xlat
decb
push
das
add
sbbl
sbb
nop
repnz
cmpsl
xchg
aad
pusha
add
inc
mov
cmpsl
fcmovne
push
arpl
mov
mov
lds
das
mov
pop
mov
pop
addb
iret
cli
cmp
sbb
mov
push
cmpsl
fistl
pushf
mov
test
xchg
repnz
or
and
push
js
jno
jg
mov
fst
or
mov
xor
sbb
out
pushf
mov
push
xchg
loop
lods
or
adc
les
fnsave
lods
negb
in
outsl
in
sbb
jo
divl
icebp
in
sbb
lods
sbb
pop
stc
lret
icebp
mov
decb
pop
stc
lea
pop
loopne
jno
jo
int
jne
lods
stos
mov
cld
jne
jle
ja
ljmp
addl
sub
testl
inc
fisubrl
adc
iret
jo
sbb
jno
das
mov
push
daa
dec
aad
lock
mov
mov
cmp
push
or
xchg
xchg
in
add
and
xlat
test
mov
cs
mov
out
cmp
push
rorl
push
mov
inc
out
outsl
adc
adc
movlps
stos
push
xor
movsl
mov
cmp
pusha
jbe
cmpsl
cmp
xchg
adc
push
ds
loop
push
dec
add
adc
inc
daa
fildll
pop
xor
inc
andb
or
rcr
adc
adcl
mov
pusha
or
add
addr16
mov
fisttpll
mov
jmp
mov
aaa
inc
mov
pop
fisubrs
pop
xchg
inc
arpl
lods
bound
mov
pop
inc
push
stc
jnp
jno
inc
push
jmp
loopne
shl
ret
mov
call
das
jmp
push
je
sbb
xchg
mov
movsb
cmpsb
out
cli
mov
in
ss
add
pushl
jnp
jno
pop
rorb
repz
mov
outsb
iret
cld
jnp
mov
jg
jge
mov
sti
repnz
ja
inc
adc
scas
sbb
lock
mov
mov
pusha
stos
xchg
enter
jl
mov
stos
push
mov
push
xor
add
or
mov
push
pop
into
pop
mov
or
inc
or
jle
ja
mov
mov
out
jp
pop
out
inc
pop
sahf
sub
popf
into
lods
xchg
loop
xor
xor
test
mov
imul
adc
std
xchg
sbb
cmp
mov
jp
cwtl
das
xchg
pop
out
jle
rorl
pop
sub
scas
mov
cli
or
lods
push
jl
clc
sarl
out
push
js
outsb
shrb
fistpll
mov
mov
shl
mov
int
adc
jbe
pop
mov
and
mov
fimuls
or
cmp
js
loopne
mov
repnz
shrl
andl
cmp
sub
test
test
sub
jmp
mov
inc
sti
pop
fwait
push
lods
and
fisubs
dec
outsl
pop
dec
xchg
sbb
mov
les
inc
adc
mov
outsb
inc
xor
mov
add
ljmp
icebp
push
iret
adc
hlt
push
fstl
daa
mov
icebp
dec
dec
add
mov
jg
out
nop
rolb
adc
inc
js
fdivl
cmpsl
and
addr16
pushf
cmp
movl
fidivrl
mov
dec
jb
addr16
icebp
aaa
enter
jle
bound
shrb
push
popa
mov
mov
add
mov
ds
in
and
mov
adc
and
mov
add
dec
divl
int
push
pop
push
xchg
pop
sub
add
push
mov
cs
daa
fwait
jo
jp
jne
enter
scas
inc
mov
stos
xchg
scas
arpl
das
add
and
stos
movsb
rolb
lret
mov
inc
je
wbinvd
orl
mov
xor
xlat
lds
enter
cmp
lcall
icebp
iret
mov
xor
fs
imul
pop
xor
test
push
pop
sbb
outsb
imul
pop
adc
dec
mov
sub
push
push
add
aad
cmp
pop
fwait
add
dec
xor
add
and
push
inc
mov
push
jg
ss
fimuls
repz
inc
push
fbstp
subb
ljmp
jne
pop
add
xor
mov
out
hlt
xchg
jnp
xor
movsl
lock
xor
test
jg
idivl
aaa
dec
cwtl
mov
imul
and
aas
xor
pop
mov
shrl
pop
pop
or
push
in
sti
or
adc
insl
adc
pop
sbb
jp
sub
lods
mov
sub
or
lea
rcrl
aas
cmpsl
les
insl
nop
push
cli
loop
rolb
jnp
jge
pushl
inc
imul
cs
xchg
out
cs
aad
mov
es
mov
fsubs
pop
imul
aaa
divl
xor
cli
mov
ret
push
ja
and
fidivs
lret
insb
mov
loopne
mov
popf
push
ljmp
cli
fwait
test
inc
pop
lret
imul
xchg
mov
fnstenv
push
push
mov
rorb
shlb
cmp
je
or
sub
imul
pop
in
jmp
xchg
ja
adc
fnstenv
mov
lods
cltd
pop
or
js
in
call
pop
bound
imul
push
sub
cmpsb
sbb
out
out
cmp
dec
popa
dec
orb
mov
mov
adc
xor
rcrl
rorb
stc
out
aaa
mov
or
xchg
or
fwait
and
pop
arpl
push
js
jne
daa
fsubs
jge
dec
movl
rcll
and
sbb
mull
jecxz
xchg
or
imul
mov
mov
or
mov
movsb
ds
rorl
sbb
into
mov
and
leave
sub
dec
add
and
fistps
into
mov
mov
gs
call
xchg
lret
sub
out
mov
loop
adc
cmp
movsl
jp
mov
xor
jle
adc
adc
mov
je
dec
out
in
std
adc
outsb
ds
mov
ljmp
mov
addb
pop
mov
pop
filds
xchg
xor
insb
outsb
or
xor
mov
adc
pusha
dec
rcr
pop
add
xchg
cld
sub
push
pop
shll
test
test
test
cld
fmuls
sahf
add
push
or
xor
sbb
arpl
mov
cmp
hlt
sbb
addr16
cmp
xor
outsb
mov
xchg
jnp
popa
push
mov
pop
call
shrl
orb
fld1
push
xor
or
loopne
je
xor
test
push
xchg
test
fstl
dec
pop
mov
or
rclb
inc
push
stc
pop
or
repnz
add
aas
sbbl
sahf
cmp
iret
push
ja
loopne
ret
mov
pop
aas
xchg
mov
shrb
or
cmpsb
ja
xchg
leave
arpl
mov
das
clc
cmp
stos
push
xchg
jo
jnp
pop
push
lret
jnp
jl
inc
jl
bound
dec
pop
fldenv
sbb
inc
sbb
push
lock
sub
xchg
fdivl
add
outsb
fdivs
pop
aad
add
nop
outsl
pusha
lods
rolb
cmp
dec
adc
andb
loop
rcrb
xchg
xchg
mov
ss
add
mov
mov
xchg
mov
jae
outsl
fsub
mov
jbe
out
dec
lahf
xlat
pop
stos
sahf
lahf
dec
xchg
mov
lret
inc
ja
mov
ret
lret
idivl
sub
cmp
aad
dec
pop
fidivrs
lods
or
mov
loop
cmp
dec
loop
sub
aam
push
mov
aam
mov
js
push
cld
dec
push
pop
cld
and
subb
bound
and
inc
dec
js
gs
xchg
mov
mov
ja
pusha
add
pop
js
repz
xor
mov
xchg
insl
and
insb
push
add
push
xchg
add
jle
fs
loop
popa
xor
fists
or
fwait
leave
js
lahf
jl,pn
inc
mov
adc
lcall
dec
adc
add
mov
fcom
cmp
enter
xchg
imul
sub
sbb
pop
fisubrs
xor
lea
dec
in
mov
pop
movsb
lods
imul
or
out
cmp
je
lods
mov
pop
inc
imul
mov
or
leave
lahf
cltd
xor
jne
out
icebp
mov
xor
ret
push
daa
sub
or
ficoml
mov
js
aaa
test
and
inc
or
dec
cmp
sbb
sbbb
jp
ds
movsl
notl
pop
movsb
sub
ds
or
lea
mov
or
add
rolb
stc
in
add
int
push
scas
shrb
sub
add
inc
sbb
push
mov
mov
les
adcl
js
in
hlt
sbb
xchg
add
mov
sbb
push
arpl
xor
cli
ret
mov
idivl
jnp
mov
push
nop
clc
test
std
insl
and
out
jo
push
jge
fists
mov
mov
cmp
js
into
sub
push
data16
sbb
pop
scas
lcall
out
mov
cmpsb
or
lock
pusha
inc
jle
fiaddl
shrb
mov
jecxz
push
add
xor
jle
ja
lods
int3
fwait
outsb
mov
sbb
mov
and
repnz
inc
repz
mov
mov
mov
jge
push
enter
aam
cmpsl
jo
aaa
scas
xor
jmp
test
sbb
jle
aad
mov
pop
fbstp
dec
push
call
shlb
jl
cltd
push
pop
iret
jp
in
xor
push
or
std
shl
mov
mov
roll
aam
xor
mov
jbe
test
sbb
cmp
mov
mov
dec
xchg
mov
jnp
arpl
push
ret
and
sbb
dec
in
mov
out
mov
into
inc
outsl
fs
cld
mov
push
pop
sbb
jge
dec
mov
mov
and
mov
mov
pop
cmp
jno
lods
and
shl
out
xchg
pop
dec
mull
icebp
mov
cmpl
sbb
stos
mov
pop
jle
fsubl
enter
stos
les
das
push
jb
cmp
mov
xor
fdivrl
dec
xorb
push
jns
fs
call
pop
loop
pop
rclb
lret
dec
jl
enter
sbb
adc
push
dec
push
mov
stos
or
xor
es
std
popl
mov
data16
pop
xor
mov
lods
pop
movsl
jl
xchg
das
xchg
ja
aas
call
and
or
sbb
adc
mov
aam
mov
jmp
adc
sub
sub
sub
cmpsb
inc
dec
or
mov
sbb
popf
xchg
idivb
test
mov
loopne
daa
das
bound
adc
jo
out
jbe
dec
mov
test
or
leave
rcr
push
jns
lret
scas
sub
imul
mov
mov
js
in
add
mov
lcall
imul
mov
aam
mov
bound
xorl
repnz
cmp
data16
fsts
bound
add
dec
jl
pop
cmp
push
test
das
push
pop
jmp
push
pop
das
out
lcall
add
inc
adc
outsb
imul
lahf
addb
lahf
fldl
xchg
and
mov
loopne
and
push
xchg
cmc
leave
subl
or
adc
pop
test
les
loope
mov
mov
cmpsl
mov
xchg
inc
mov
cmpl
std
dec
popa
xor
leave
scas
leave
dec
adc
mov
mulb
popa
inc
aas
adc
xor
pop
fmuls
inc
nop
xrelease
mov
repnz
fs
adc
fistl
xchg
push
lds
in
clc
movsl
scas
or
sbb
cmp
pop
ljmp
add
mov
pop
shlb
jne
mov
sbb
xor
movsb
inc
loop
in
outsb
imul
xchg
imul
repz
je
js
and
jle
sub
lcall
jl
mov
sub
mov
xor
cli
aam
jnp
jg
int3
mov
test
test
xchg
xchg
xor
arpl
mov
xchg
pop
and
cmp
dec
iret
les
mov
add
rcrb
push
je,pn
roll
adc
enter
jb
inc
ret
push
cmp
lock
xchg
arpl
xchg
out
ret
mov
jmp
add
cmp
mov
mov
or
sbb
mov
and
jle
lock
lods
scas
jp
inc
mov
movsb
ss
fldl
xor
pop
cli
mov
jo
pop
aaa
dec
mov
jge
ss
into
xor
jp
xchg
lahf
cmp
les
icebp
lcall
xchg
sbb
daa
lods
dec
dec
mov
sbb
xchg
mov
loop
sub
scas
cmp
cmpsb
dec
mov
pushf
push
jle
push
push
mov
xchg
imul
rcr
xchg
mov
aas
sarb
std
jns
ds
ret
jl
es
jmp
loopne
cmp
pop
enter
pop
adc
add
fldt
hlt
in
add
loop
rcrb
xchg
inc
push
xor
stc
and
cmpsl
mov
in
cli
sub
mov
outsl
mov
mov
xchg
adc
jbe
cmp
mov
stc
mov
adc
lahf
out
test
aam
pop
jecxz
xor
cmp
dec
lcall
mov
push
int3
xor
jmp
jmp
dec
lcall
shrb
scas
rcrl
adc
ret
loopne
sbb
les
mov
mov
pop
jno
imul
es
cwtl
or
xor
into
inc
dec
fistps
out
inc
jg
push
mov
mov
adc
aam
cmp
shll
out
int3
dec
add
mov
imul
mov
push
lcall
mov
addr16
fwait
mov
adc
mov
sub
ficompl
mov
mov
fistpll
imul
ror
add
jno
fcmovbe
cmpsb
mov
bound
xchg
in
imul
push
fmull
mov
sub
mov
test
mov
cmp
pop
xchg
push
or
add
add
mov
popa
mov
jp
loop
pop
repz
inc
lret
mov
dec
negb
adc
add
sub
mov
push
fcoml
inc
imul
inc
lock
inc
iret
and
push
mov
iret
sub
mov
testb
insl
mov
aas
in
adcl
jbe
outsb
jp
shl
test
jmp
lods
popf
cwtl
ret
or
xchg
jb
push
pop
scas
data16
ljmp
dec
xor
or
mov
sub
mov
adcb
repz
inc
xchg
pop
mov
mov
jle
incl
jmp
cmp
ret
push
sub
jo
mov
dec
inc
mov
sbb
std
into
dec
add
inc
pop
xor
bound
fcomip
rcrl
adc
cmpsl
jg
in
cmp
js
mov
or
dec
mov
cli
out
insl
dec
add
sbb
xchg
jecxz
mov
xor
ljmp
in
lret
hlt
cmp
out
out
xchg
mov
fnsave
or
xchg
or
mov
mov
shrl
outsb
jae
mov
jno
mov
incl
inc
mov
jnp
data16
jne
mov
lahf
jns
sub
adc
ds
mov
shll
adc
add
inc
sbb
xchg
xchg
jae
push
sub
cmp
jl
lahf
mov
jl
shl
movsl
jge
pop
and
sbb
push
ja
popa
jo
cmpsl
dec
sbb
jnp
push
cmpsl
inc
mulb
ds
sbb
fwait
jle
ds
push
mov
inc
sbb
mov
jne
scas
ja
pusha
cltd
gs
mov
mov
sbb
adc
jo
in
test
mov
push
ljmp
pop
add
jbe
xchg
pop
cmp
fsubl
add
pop
lret
sahf
mov
outsb
jnp
ljmp
jg
pusha
mov
mov
ret
jl
movsl
xor
pop
stc
cmp
icebp
sbb
je
add
icebp
or
jp
lods
cmc
add
jne
pop
lcall
inc
arpl
adc
jmp
push
adc
mov
ror
idivb
mov
mov
push
and
shll
popf
or
and
xor
jno
xor
mov
push
sbb
insl
into
repnz
add
dec
insb
fisttps
in
or
and
aad
jg
stos
decl
cmp
in
cltd
or
fwait
negb
fidivs
sbb
out
out
stos
scas
pusha
andl
jmp
mov
sahf
aam
mov
aas
mov
pushf
pop
cltd
push
xchg
andb
cmp
push
into
ss
mov
push
add
out
and
pop
popa
pop
lock
movsb
jp
pop
dec
cmc
inc
cmc
cmpsb
in
cs
imul
sbb
or
cmc
out
std
or
adc
les
or
mov
loope
out
call
cwtl
icebp
and
pop
or
push
pop
mov
jge
aaa
popf
imul
cmc
lret
rcll
mov
outsl
push
repnz
cmp
jmp
repz
cwtl
pop
subl
or
push
insl
xchg
jecxz
mov
sarb
arpl
repnz
iret
jnp
pop
jbe
pop
pop
add
xor
push
cmpb
pop
vhsubpd
int3
add
cmp
movsl
mov
mov
push
adc
imul
adc
sub
push
stc
nop
enter
cmp
sbb
add
outsl
add
xor
mov
mov
outsb
lcall
outsl
mov
mov
outsb
popa
push
pop
cwtl
xor
out
mov
bound
mov
scas
mov
pop
ficoms
hlt
dec
push
pop
fsubrl
push
ljmp
aam
or
fidivs
cmc
inc
jl
ds
insl
aad
dec
sti
pop
push
imul
push
cmp
push
enter
sbb
xchg
or
bnd
sarl
jmp
out
mov
and
adc
sbb
int3
bound
xchg
push
insl
div
sbb
cmc
call
es
add
dec
mov
mov
leave
cmp
cmp
ret
push
outsl
fsubs
sbb
lds
call
dec
mov
inc
mov
ret
jg
sbb
cmp
pop
mov
insb
xor
outsl
mov
jo
adc
mov
jns
test
leave
pop
cmp
stos
sbb
mov
aaa
cli
xor
push
call
ja
arpl
or
adc
jmp
rorl
sahf
and
sbb
mov
sbb
xorb
loopne
xchg
push
cli
out
lods
jmp
cld
push
cmp
push
jg
aas
fs
imul
adc
add
mov
inc
ja
out
and
cltd
cltd
mov
cmp
test
adc
xchg
mov
js
scas
aam
hlt
fiadds
sbb
popa
xchg
pushf
cmp
into
je
pop
fildl
cmp
or
rcll
add
rcrb
jle
aas
cmp
jno
mov
cmpsl
xor
mov
push
mov
pop
enter
pop
les
and
push
mov
xchg
jg
lds
cli
inc
ljmp
aad
and
ja
std
jp
rol
test
cmp
fs
sbb
leave
jl
xchg
dec
cmp
aaa
roll
lcall
fsts
outsb
xchg
int3
inc
cmp
loope
push
lods
pop
aad
iret
dec
insb
sti
shrb
jp
xchg
push
inc
mov
xor
add
addr16
inc
cmpsl
daa
mov
pushl
push
adc
repnz
or
test
inc
js
pop
in
pop
inc
je
test
mov
or
pop
mov
scas
data16
and
mov
addr16
mov
aas
push
dec
ret
jne
loopne
fidivrs
mov
addr16
xchg
pushf
xchg
inc
lods
sbb
add
arpl
aad
xchg
andb
dec
jb
call
push
mov
stos
add
psllq
mov
pop
pop
and
out
aas
xor
pop
fdivrl
mov
cmpsl
aad
mov
sub
repz
mov
dec
ss
push
out
js
jo
jno
push
stc
mov
and
dec
jnp
idivl
cltd
iret
add
mov
pop
sahf
sbb
gs
mov
fistl
pop
dec
and
in
repnz
mov
mov
test
and
jl
adc
or
repz
mov
inc
ficomps
sahf
je
data16
popaw
adc
leave
mov
insl
push
push
fsub
jmp
or
sbb
mov
cmc
test
push
cmp
ret
scas
sbb
lcall
and
dec
xor
outsb
mov
fdivr
decl
ror
shll
lahf
sub
enter
ss
xlat
and
add
or
gs
inc
sahf
insb
roll
inc
adc
inc
lcall
sub
mov
fstpt
sub
iret
jp
mov
inc
movsb
sbb
sbbl
lods
fsubrs
or
mov
andb
aad
push
jne
clc
sbb
cmp
fildll
sbb
or
imul
fisttpl
adc
fdivrp
mov
inc
jo
loop
sub
std
jle
push
mov
or
outsb
mov
adc
or
cmp
iret
pushf
inc
or
call
fidivrl
gs
lret
pop
jb
push
xchg
out
loop
rclb
ss
cmc
push
xor
dec
flds
int
outsl
mov
stos
inc
mov
movsl
repz
dec
rcrl
jp
push
cmc
or
xchg
hlt
push
jecxz
adc
add
mov
xor
jge
push
mov
mov
aas
int3
mov
inc
cmp
stc
insb
xchg
pop
pop
hlt
add
insl
clc
test
stos
cli
jbe
nop
dec
nop
scas
jbe
imul
xor
xor
repz
aam
ljmp
lods
aas
jle
mov
or
push
jae
leave
inc
xchg
lods
add
enter
scas
scas
pop
dec
stc
pop
stos
inc
fwait
and
imul
jno
les
sbb
cmp
mov
push
fwait
mov
rcll
mov
rcl
sbb
or
addr16
das
mov
adc
movsl
mov
dec
sbbl
inc
inc
cmp
mov
andl
stc
insb
pusha
in
push
ja
loop
in
mov
push
aad
jg
inc
ss
pop
sbb
jae
xor
jecxz
cli
ret
add
add
push
and
push
imul
mov
sarb
xchg
je
test
fistl
mov
clc
push
mov
pop
imul
dec
call
mov
mov
cmp
lahf
mov
push
lods
adc
pop
mov
xchg
jl
stos
cwtl
and
pusha
pusha
xchg
pop
in
rcrl
leave
or
add
push
int
add
das
aad
out
adc
addr16
mov
cmp
loop
add
out
fdivl
push
loop
or
or
out
icebp
negb
lock
int
xchg
out
jne
popa
lock
or
add
push
js
jnp
aaa
retw
scas
sub
push
pop
sbb
cmp
enter
mov
in
mov
mov
xchg
sbb
out
aas
int
pop
ds
push
out
ss
inc
insb
cmc
mov
inc
sub
adc
adc
arpl
pusha
adc
jmp
add
pop
pop
insl
faddl
repnz
out
fiaddl
mov
cwtl
jl
xchg
in
dec
mov
ret
test
jbe
hlt
imul
sbb
lahf
pop
xchg
jnp
mov
xor
mov
cli
imul
pop
sub
pushf
stos
idiv
mov
jno
out
and
nop
aad
and
mov
mov
faddp
mov
jae
jbe
lret
pop
or
movsl
fnstenv
iret
xor
jbe
scas
pop
outsb
or
shl
stos
lcall
je
lret
and
xchg
call
rcl
ret
std
fisubrs
mov
daa
mov
loop
orl
pop
pop
rolb
xchg
roll
adc
adc
sbb
dec
not
addr16
outsb
jge
loopne
push
pop
adc
adc
movsl
jno
std
fcmovnb
bound
int3
lea
fisubl
testb
orb
dec
cmp
dec
daa
out
ja
dec
cmp
sub
pop
fs
jecxz
ficoms
repz
or
test
jnp
pushf
pop
jb
cli
sarb
cmp
test
fadds
mov
sub
in
mov
mov
jb
mov
lock
inc
xor
scas
imull
cmpsb
cmp
lcall
movsl
jo
inc
ror
inc
xlat
jb
inc
imul
or
in
int
and
lret
imul
mov
pop
xchg
push
dec
mov
mov
xchg
or
popa
sti
leave
outsl
dec
ret
sub
lret
ja
stos
icebp
cmp
cmp
or
cld
add
ja
sub
mov
or
cmpl
sbb
addr16
bound
adc
sahf
mov
sub
sub
into
xor
rcll
data16
jns
mov
imul
cmpl
lcall
xor
pushf
popf
iret
shlb
js
aad
mov
inc
push
insl
stos
xor
mov
out
mov
mov
addr16
dec
dec
jno
aad
lods
mov
mov
jge
imul
mov
subb
inc
mov
popf
jmp
icebp
pop
pushf
mov
insb
jb
cmp
mov
pop
sbb
daa
ja
loopne
sub
xlat
popa
mov
push
dec
shrb
and
xchg
enter
sub
xchg
loopne
jo
loopne
xor
gs
lcall
aas
repz
cmc
js
mov
pop
mov
pop
pop
icebp
ljmp
pop
jne
push
pop
mov
adc
rorb
test
repz
and
push
mov
mov
mov
sub
sub
ret
jg
xor
add
sti
ret
stos
and
cmpsl
or
call
aaa
stc
lods
jo
fmul
add
dec
pop
jl
shl
stc
jnp
jp
jecxz
mov
mov
mov
int3
movsl
inc
shrl
mov
add
or
xor
repnz
pop
out
lret
sbb
out
cmp
jmp
dec
repnz
stos
fisubs
push
cmp
mov
dec
sbb
lods
and
adc
push
jo
call
cwtl
inc
sub
sub
popa
mov
scas
int3
lock
jne
outsl
push
cmp
xchg
adc
out
sahf
sbbl
outsl
rcr
xor
jae
mov
inc
pop
mov
mov
or
push
or
fisubl
lret
mul
lods
xchg
test
cmp
pop
pop
test
adc
jl
xor
push
mov
jne
dec
sarb
sub
adc
xor
and
negl
rorl
inc
jns
push
ret
xchg
ja
or
inc
movsb
pop
test
jo
fisubrs
test
lcall
test
push
dec
lahf
pop
popf
sbbl
imul
cmpsl
lret
cmpsb
pusha
fwait
int3
inc
in
xor
or
xlat
push
cmpb
imul
xor
movsl
fwait
sub
xor
outsl
call
lds
psubsb
cmp
mov
test
mov
sub
pop
stos
nop
mov
ret
xchg
in
push
inc
js
hlt
movsb
jbe
cmpb
mov
mov
mov
daa
incl
pop
sbb
jge
in
ficompl
lahf
xlat
in
mov
lea
cmp
jle
sbb
cld
stc
popf
pusha
dec
xlat
mov
insb
push
dec
push
push
xlat
push
iret
fwait
into
dec
and
aas
incl
jae
aas
adc
push
divl
jge
add
mov
mov
xor
push
mov
push
xor
out
dec
and
add
mov
sarb
daa
mov
cmp
hlt
clc
daa
or
cmp
sarl
mov
mov
repz
mulps
int3
movsl
pusha
pop
jle
push
mov
sbb
sarb
mov
sub
popa
xlat
fs
scas
insb
pop
dec
push
dec
out
mov
jo
dec
je
jle
xor
pushf
mov
rcl
imul
shll
idivl
mov
add
xor
push
xchg
sbb
sahf
inc
call
stos
bound
pop
enter
sub
cltd
push
cmc
cmp
jecxz
add
dec
fisttps
sub
stc
cltd
vaddsubpd
add
ljmp
push
mov
mulb
jo
add
mov
andl
sub
mov
dec
pop
cwtl
inc
cs
aam
adc
pop
xchg
mov
and
in
and
push
cmp
xchg
fidivs
cmp
movsb
icebp
test
mov
mov
cmp
cmc
cmp
push
cli
push
pop
push
outsb
inc
negl
lcall
mov
jns
into
push
call
testb
imul
jmp
fisubrs
loope
sahf
xchg
fpatan
pushw
add
in
fisttpl
fldcw
mov
addr16
cmp
mov
dec
dec
sahf
xchg
test
push
cmp
jbe
out
mov
push
ljmp
push
xchg
mov
jmp
adc
int3
pop
lcall
sbb
fs
sub
hlt
inc
xor
fdivrl
andb
ljmp
sub
jl
and
inc
lret
xchg
mov
loope
mov
hlt
xchg
pop
int
mov
push
jnp
fcomip
mov
mov
addr16
movsw
lods
into
xchg
adc
enter
mov
jbe
push
jae
add
sbb
jg
mov
push
fsubl
mov
pop
in
push
out
aaa
hlt
inc
or
loope
insl
adc
pop
mov
mov
sbb
push
jmp
aad
repz
push
rcrb
aad
jp
jg
xchg
in
jmp
jbe
xchg
jnp
push
insb
bswap
dec
cmpsl
insl
int3
aaa
dec
sub
adc
sub
or
out
mov
ja
incb
sub
lret
femms
dec
cmp
pop
clc
es
lds
push
push
adc
mov
xchg
inc
fldenv
dec
adc
mov
xorl
dec
pop
iret
outsb
sar
push
jle
xor
scas
test
or
mov
repz
xchg
icebp
and
popa
pop
lock
gs
mov
movsl
cmp
out
mov
jg
and
lahf
mov
imul
push
xchg
sub
jmp
ss
xor
fadds
jp
hlt
or
pop
mov
push
push
pop
sbb
call
mov
xor
pop
pushf
sbb
popa
je
and
pop
nop
or
vmulss
popf
pop
mov
popa
clc
mov
rclb
sub
aad
add
jns
xchg
es
adc
mov
cmp
ret
out
push
mov
xlat
fbstp
inc
adc
pushf
call
xor
orl
push
call
stc
in
loopne
fcompl
mov
out
stos
cmp
xor
lea
push
test
push
ss
lods
sarb
pop
lock
push
fists
ret
arpl
or
lea
fisttpll
push
stos
add
dec
adc
ret
test
cmp
dec
add
int
leave
inc
push
ret
jp
iret
xchg
ljmp
mov
inc
or
fidivl
add
dec
in
xchg
lods
push
jo
or
sbb
jae
jp
repz
mov
negl
pop
jnp
lock
jnp
jo
jg
test
dec
adc
xchg
insb
mov
xor
js
add
xchg
cltd
insw
cwtl
and
sti
sub
insl
cmp
mov
arpl
test
dec
xor
dec
push
xchg
push
or
jge
jge
in
lahf
cli
andl
int
adc
ret
lret
push
lret
fcmovbe
lds
loope
pop
imul
or
addr16
cmp
xor
cmpsb
call
push
mull
icebp
fnstcw
xchg
les
pop
in
jl
sbb
into
pop
cmp
mov
insl
test
aam
cmp
mov
push
insl
xchg
jmp
mov
mov
cmpb
cmp
sbbb
sub
pop
pop
enter
mov
into
rcrb
lods
mov
adc
and
push
jne
jno
nop
imul
and
scas
mov
mov
jns
inc
mov
addr16
add
add
test
nop
xchg
movsl
inc
cmp
ja
sbb
mov
mov
sbb
jmp
lcall
mov
push
xchg
add
lahf
inc
out
iret
mov
dec
sahf
xchg
scas
lret
jae
aad
pop
and
test
sahf
loopne
es
insl
out
xlat
xlat
xchg
mov
adc
mov
out
push
fisubl
cld
xor
lods
imul
cmpsb
test
push
mov
ljmp
push
mov
jmp
or
pop
popa
out
push
faddl
jle
xchg
mov
inc
js
rol
lock
addb
add
into
es
add
fwait
jb
nop
cmp
pop
stos
add
daa
xchg
scas
popf
sysexit
imul
xchg
jecxz
addr16
adc
fnstsw
inc
sbb
popa
pop
pop
ret
hlt
add
sbb
aas
dec
cld
ja
int3
cmp
cli
enter
and
push
in
movsb
hlt
sbb
andl
scas
sahf
push
mov
pop
or
dec
aam
dec
push
ljmp
jns
rcrl
outsb
fmull
or
xchg
push
jmp
cli
dec
xchg
mov
add
cmpsb
mov
test
push
xor
cmp
sbb
and
pop
xchg
das
cmp
sub
in
pop
pop
loopne
mov
lahf
inc
pop
les
push
mov
into
dec
je
push
jmp
int3
add
dec
popf
jg
insb
aaa
cmp
mov
inc
xor
push
aam
je
push
sahf
push
or
jne
jae
xchg
and
popa
push
shrl
sub
mov
ja
and
jge
dec
mov
bound
ret
cmc
fdivs
mov
jg
or
adcl
lret
ja
lret
outsl
mov
rorl
mov
test
das
aaa
aas
jl
mov
adc
lds
mov
push
inc
fiaddl
insb
roll
lods
leave
xchg
loope
lcall
jle
mov
ss
sbb
mov
sarl
pop
mov
adc
dec
jbe
sub
fwait
jp
testb
out
hlt
movsl
mov
push
and
in
push
daa
mov
mov
lock
mov
mov
push
adc
dec
adcb
push
xchg
jg
xor
xor
jg
push
in
nop
fsubrs
jmp
push
inc
pushf
mov
add
scas
xchg
in
xor
aam
outsl
pop
or
mov
pushf
or
repnz
pop
stc
es
xlat
inc
xor
aad
sbb
pop
cmc
ljmp
outsb
cmc
out
test
jp
sbb
cmc
mov
jmp
dec
insl
rcl
sbb
adc
push
xor
push
mov
add
pushf
fisubs
popa
mov
stos
add
or
enter
mov
xor
or
xchg
push
inc
and
loop
cmp
cwtl
ja
in
jg
cwtl
mov
insb
mov
sub
dec
push
mov
addr16
adc
or
pop
push
adc
repz
fidivl
add
xor
jbe
popf
dec
dec
nop
inc
pop
ret
xor
or
sbb
mov
jecxz
dec
ret
out
adcb
int3
aad
ljmp
sub
pop
mull
stos
add
add
lret
sub
push
aas
push
je
mov
les
and
sub
cmc
fwait
push
movsl
sub
jp
and
and
dec
dec
imul
std
out
inc
fistpl
addl
sbb
hlt
push
push
mov
and
fwait
push
rolb
into
xchg
mov
sub
sbb
data16
fidivrs
push
mov
jbe
jns
jp
or
lock
int
xor
lods
push
rolb
fdivs
enter
lds
inc
sub
or
std
mov
je
jp
nop
push
cli
jnp
xchg
adc
jbe
pop
bound
scas
cli
jmp
dec
or
push
fdivr
sahf
lea
stc
call
adc
push
hlt
inc
inc
cwtl
inc
xor
mov
xor
fsub
stc
insl
ret
scas
xchg
mov
loope
and
jae
and
mov
sbb
mov
add
mov
add
or
dec
or
pop
loope
dec
sbb
stos
fistpl
imul
mov
gs
push
icebp
ret
jp
adc
iret
lock
mov
lods
sub
decl
pop
dec
jae
imul
xchg
les
mov
pop
ret
ret
jae
stos
mov
rcrb
add
in
mov
pop
movb
push
test
push
sub
push
aas
mov
adc
or
cmp
cmc
scas
add
mov
adc
xlat
mov
or
aad
stos
ds
jmp
popf
popf
or
test
ret
int
sub
pop
or
dec
std
sbb
shlb
popf
dec
sbb
sub
add
mov
cmp
pop
fidivl
nop
pop
jae
inc
popl
ljmp
sbb
addl
sahf
stos
and
loope
nop
mov
sub
gs
int
mov
lcall
adc
lcall
mov
js
daa
inc
sbb
ficoms
pop
das
scas
inc
int
jle
jno
cmp
xor
lahf
movsb
inc
mov
mov
imul
into
cmp
insl
cltd
aaa
push
stos
mov
int3
inc
enter
mov
dec
push
and
sub
pushf
mov
add
andl
push
and
clc
arpl
lods
push
push
cld
idivl
mov
xchg
pop
pop
mov
mov
iret
jno
adc
xor
or
aas
lods
repz
fidivs
mov
add
pop
lds
call
jmp
mov
hlt
gs
test
out
mov
mov
mov
fldt
mov
mov
leave
lock
xchg
push
jne
and
loope
and
mov
cld
dec
mov
arpl
lret
outsb
push
push
add
dec
xor
ret
test
je
add
incl
imul
sbb
orl
xchg
popf
jo
aaa
jle
dec
lods
cltd
cs
mov
pop
lcall
ss
je
mov
scas
fdivrp
faddp
fadd
xchg
pop
fdivrs
jne
movsl
fadd
push
sbb
stos
mov
pushf
or
or
jecxz
aam
jmp
xchg
and
cli
lods
int3
fcoms
add
fdivs
lret
jmp
jnp
rolb
mov
and
push
xchg
das
adc
loope
cmpsb
mov
imul
or
cmp
xchg
decb
push
gs
push
icebp
xchg
faddl
ret
fwait
popf
lock
shll
dec
xor
and
sub
push
addr16
xchg
test
cli
addl
or
inc
xlat
adc
push
cmp
sub
mov
cltd
sub
adc
fimull
mov
int
loope
icebp
iret
je
add
add
push
jno
add
xor
mov
cmp
imul
and
mov
in
int3
sbb
lret
xchg
cmp
fsubrl
iret
cmc
xchg
add
mov
mov
fwait
push
fiadds
lcall
jecxz
clc
test
jmp
in
shrb
cmovns
mov
inc
cld
jno
call
dec
pop
repnz
sbb
dec
mov
push
fwait
cli
andl
int
mov
sbb
lods
xor
cmp
adc
repnz
icebp
xchg
in
js
stos
sub
cwtl
mov
enter
or
das
cmp
hlt
in
cmp
test
outsb
repz
or
cmp
dec
sub
push
enter
jecxz
repz
mov
mov
sti
pop
xchg
pop
lahf
push
cli
ret
cmp
mov
out
and
mov
je
jne
bound
inc
loopne
pop
movsl
xor
push
pop
addl
jmp
stos
jecxz
shr
test
push
mov
cmpsb
out
xor
out
lcall
lahf
inc
mov
cltd
lea
nop
in
rcrl
mov
push
and
out
jge
movsl
lods
add
imul
test
inc
cwtl
cwtl
and
into
es
insb
fs
adc
gs
inc
ret
dec
imul
xchg
ss
popf
mov
push
push
scas
insl
xor
ljmp
lea
paddw
sarl
loope
mov
lods
and
add
je
sbb
insb
mov
mov
cmp
pop
xchg
inc
cld
imul
push
add
adc
in
test
out
push
sub
sarb
into
int3
imul
pop
cmpsb
mov
and
and
push
js
std
lock
bound
mov
fs
xor
aas
push
sarb
pop
mov
mov
inc
data16
lret
mov
xchg
xchg
adc
push
cmp
or
lods
pop
xchg
jne
orb
sub
movsb
mov
icebp
cli
aam
dec
mov
and
mov
fstps
cmp
cs
push
sub
test
jp
leave
cmpsb
fs
mov
arpl
test
and
ret
mov
icebp
div
popa
rcl
test
lds
push
insl
xbegin
sbb
and
test
popf
in
add
push
jmp
pop
mov
jno
movsl
xor
shll
mov
jns
cmpsl
dec
repz
test
test
and
fs
mov
lock
in
out
mov
popf
cmp
dec
shrl
xchg
cmc
xchg
les
push
jo
pop
xor
add
push
mov
pop
into
inc
lret
jno
cli
pop
std
flds
push
jb
xchg
test
xor
js
ficoms
cmp
icebp
add
add
mov
lods
mov
data16
push
xlat
jae
addb
lods
mov
jp
jle
fadds
push
loop
loopne
pushf
mov
and
mov
cmove
test
das
and
xor
cld
sarl
mov
pop
and
mov
test
add
fs
rol
mov
add
mov
decl
cmc
dec
fcoml
lock
add
rcll
dec
xchg
sbb
mov
sbb
mov
dec
inc
cmp
loopne,pt
out
lock
adc
dec
inc
popf
add
imulb
stos
add
sub
push
in
push
jbe
push
xor
mov
add
lahf
das
sub
fs
jo
aam
dec
cwtl
jg
lods
xlat
loopne
fisubrl
mov
mov
je
fidivrl
cmp
aad
and
dec
jecxz
pop
lret
xchg
sar
lea
jg
loop
scas
popf
jle
push
sysenter
ret
sub
push
call
aaa
lahf
pop
jg
aaa
testb
shr
push
shll
test
mov
outsl
or
xor
aam
gs
xchg
cmpsl
loop
inc
out
pop
push
fwait
jns
cli
cld
cltd
stc
push
fucom
and
cmc
push
icebp
out
or
push
fcmovnb
dec
add
popf
ss
mov
jl
test
idiv
sti
adc
or
stos
das
push
aaa
lahf
outsb
sbb
lret
push
or
test
stos
loope
lret
dec
ret
cmp
pop
jns
sbb
fs
inc
push
xor
adc
imul
dec
sub
out
loop
cmp
mov
adc
push
mov
mov
clc
sub
xchg
mov
insb
push
scas
xchg
add
enter
push
cmp
pop
in
inc
pop
jp
add
ljmp
and
loope
enter
pushf
mov
sub
popf
xchg
or
cmp
mov
insb
sbb
fcomip
into
or
mov
mov
push
xchg
inc
negb
jo
push
and
scas
xchg
out
jle
cwtl
aad
sbb
sub
push
rcl
hlt
mov
movsl
jmp
pop
push
enter
mov
sarb
aam
fistpl
sub
jge
sub
sub
aad
lds
mov
mov
push
sti
mov
sub
pop
movsl
call
fisttpl
fisubrs
pop
shrl
push
sub
scas
jno
push
pop
jns
push
scas
test
push
inc
ljmp
sbb
push
in
and
clc
jecxz
jle
loop
popf
movsb
mov
jp
push
cld
clc
fiaddl
mov
inc
das
pop
push
inc
dec
xchg
pop
mov
cmp
mov
sub
ds
push
test
push
cltd
divl
xchg
push
adc
arpl
xor
push
cmova
xor
je
sub
out
sbb
loop
mov
mov
mov
jl
pop
sbb
div
out
sbb
rol
add
hlt
arpl
mov
push
inc
daa
or
lcall
scas
test
mov
push
pop
data16
pusha
jecxz
into
cmp
mov
add
pop
fldl
lock
bound
cmp
cld
popf
push
push
mov
ret
mov
testb
int
sahf
xchg
ds
into
jle
pushf
sbb
inc
sub
push
jbe
mov
mov
jne
cmp
fldcw
sbb
mov
adc
push
adc
aaa
fsts
arpl
lds
push
scas
cmc
fnstenv
inc
pusha
test
test
adc
lods
cmp
out
jns
leave
aaa
cmc
xor
ret
or
push
cmp
push
mov
dec
push
into
jp
dec
out
mov
inc
pop
clc
lcall
sbb
roll
jne
ret
pop
and
add
loop
stos
cmp
mov
jg
push
jns
inc
mov
push
les
adc
out
lds
jecxz
cmp
or
imul
test
jne
pusha
lods
faddl
jl
xchg
xorl
scas
fiadds
mov
cwtl
movb
xchg
and
and
or
imul
in
xchg
es
mov
fisubrs
add
enter
iret
mov
loopne
mov
push
mov
mov
imul
inc
xor
repz
xchg
add
xchg
popf
jmp
outsl
pop
mov
mov
or
hlt
pop
stos
cmp
push
push
cmp
mov
out
push
addr16
inc
or
aaa
outsl
ret
pop
loopne
test
dec
cld
adc
mov
mov
mov
add
add
je
popa
lock
mov
addr16
shl
sbb
inc
aas
scas
push
inc
in
mov
sub
inc
and
pop
inc
shll
xchg
scas
or
mov
inc
xor
fs
inc
sbb
sarb
or
pop
and
push
xchg
lds
add
and
jle
cltd
push
adc
push
int3
add
cld
xor
add
mov
mov
out
incl
sbb
mov
sbb
mov
sti
or
and
loope
out
cmp
lret
pusha
push
cmp
adc
hlt
popf
mov
dec
jno
mov
push
jb
gs
ja
mov
pop
int3
stos
es
sub
dec
xchg
cmovne
call
xorl
adc
cli
test
pop
ljmp
cwtl
mov
lret
mov
into
cmc
cmp
aam
mov
loopne
cmpsb
sbb
andb
popl
add
dec
pop
push
imul
out
xchg
jbe
jl
ds
xor
enter
jnp
and
fldt
insl
add
pop
xor
adc
xchg
sub
inc
mov
mov
movsb
inc
adc
pop
in
cli
daa
jge
lock
mov
push
inc
dec
pop
inc
scas
jecxz
aas
lret
lahf
cmp
sbb
inc
nop
mov
or
sbb
in
push
sub
sbb
add
add
mov
fwait
and
stos
je
or
mov
mov
rcll
push
add
filds
or
frstors
hlt
dec
mov
mov
pop
dec
dec
or
adc
out
pop
sbb
ss
ljmp
daa
jp
cld
addl
repnz
push
sub
push
outsb
inc
mov
rol
inc
loop
mov
mov
jg
sbb
in
cld
mov
repnz
in
mov
loopne
push
jle
pop
testl
data16
icebp
adc
xchg
jp
out
inc
shrl
mov
push
mov
scas
pusha
mov
xor
in
movsb
out
fistl
pop
mov
mov
iret
pusha
mov
iret
sub
ds
lcall
or
rorl
dec
sbb
xchg
lea
add
shr
in
dec
add
mov
sbb
je
push
adc
xchg
enter
xor
pop
mov
sbb
aaa
jb
sbb
imul
xchg
into
pop
or
lds
fadds
mov
push
out
lds
add
mov
sub
sub
inc
inc
pop
test
dec
aam
lret
bound
jns
loopw
jg
sbb
pop
push
test
int3
sub
mov
scas
or
outsl
and
lods
mov
insl
pop
stos
aam
sub
xchg
mov
pop
bound
or
popa
push
and
ret
imul
lret
cmp
insb
cmp
lds
cmp
and
jmp
clc
inc
rorl
mov
mov
or
data16
sbb
subl
stos
dec
add
jb
xchg
shrb
stc
pusha
and
xchg
stos
mov
aad
in
lea
mulb
adc
std
aam
push
sbb
loope
fwait
xchg
or
stos
cwtl
jecxz
inc
jp
fwait
xorl
out
xchg
jbe
shll
push
cmp
push
mov
xor
jmp
into
mov
out
sbb
adc
jp
jl
cmpsl
dec
outsl
clc
push
jnp
adc
jl
pop
sbb
repz
mov
negl
jnp
sub
cmpsl
or
and
mov
scas
rcll
jno
jl
cmp
aad
dec
cmp
ss
jns
mov
or
lret
pop
mov
dec
icebp
mov
fistpll
xor
push
mov
push
je
mov
xchg
cwtl
pop
int
into
mov
jg
lods
lcall
fstpt
dec
or
or
adc
jbe
inc
jo
fmuls
xchg
imul
sahf
push
dec
out
jle
imul
stos
inc
pusha
test
or
xchg
mov
mov
out
popf
push
add
adc
loop
lcall
mov
in
mov
xchg
sbb
cs
ror
repz
jnp
fbld
adc
shll
or
add
movsb
sub
mov
pushf
test
aas
and
dec
add
fdivl
add
cmpsl
fbstp
mov
xor
push
enter
lods
scas
es
mov
pop
push
mov
insl
ret
fnstcw
cmp
sbb
jo
inc
sbb
outsl
or
pushf
shlb
mov
das
inc
sub
icebp
or
addr16
popa
xchg
mov
rorb
jne
aam
xor
cmpl
rcr
add
daa
aam
mov
mov
jb
jno
sub
int3
or
scas
and
sbb
inc
cmp
mov
inc
sbb
mov
jbe
scas
call
outsb
in
sub
mov
ljmp
mov
leave
movsl
cmp
cmp
push
popf
fmul
adc
dec
xchg
sbb
jecxz,pt
pop
inc
popa
add
cltd
and
rcrl
mov
movsl
imul
jp
jmp
jo
mov
add
inc
push
xor
cmpsl
pop
incb
cmp
addr16
call
xor
popa
xor
sbb
mov
adc
mov
in
fistpll
nop
fnsave
pop
inc
push
sbb
or
inc
xlat
push
cld
mov
inc
or
dec
dec
xor
add
sbb
cwtl
iret
loope
cltd
fnstsw
lods
fimuls
push
add
fcmove
push
ja
and
js
outsb
mov
push
and
jb
ret
stos
pop
inc
cs
aad
xor
fs
xchg
hlt
fdiv
ljmp
ss
cli
mov
fs
mov
push
das
in
mov
ds
jle
lahf
orl
loop
jnp
jbe
sbb
ljmp
fwait
jne
cmp
dec
mov
jne
call
push
call
cmp
cli
jg
stos
and
xor
dec
sahf
xor
push
fidivl
mov
mov
mov
inc
inc
inc
leave
test
jns
lock
test
fadds
dec
or
js
dec
je
fadd
nop
cli
adc
jo
xchg
push
jb
sbb
sarl
mov
mov
daa
push
les
adc
lret
jg
jge
pusha
pop
xchg
jnp
movsb
mov
inc
and
lret
sub
es
push
mov
stos
sbb
outsb
rol
add
and
das
mov
shlb
sbb
outsb
xchg
inc
mov
arpl
testb
sbb
sbb
inc
lock
lahf
mov
xchg
dec
xor
int3
adcb
and
leave
jp
sarl
xchg
and
ja
and
push
ljmp
movsb
sbb
in
push
fstps
mov
jo
out
xchg
icebp
xorl
mov
jecxz
in
test
xor
mov
dec
int3
scas
shl
adc
cmp
lcall
push
ds
push
mov
mov
sti
mov
aas
mov
mov
adc
xor
sub
cmpsb
and
mov
xor
mov
nop
push
stos
mov
rol
add
sti
jo
icebp
sbb
and
pushf
xor
mov
shlb
imul
loop
pop
leave
sub
gs
popa
lret
mov
pop
adc
out
adc
in
fiadds
fstpl
jmp
scas
pop
int3
pop
in
out
mov
inc
add
pop
inc
adc
subl
outsl
sbbl
fdivl
rcrb
dec
cmp
pop
daa
ja
xchg
repz
in
mov
xor
in
xchg
daa
jp
push
lods
scas
xchg
popf
jl
and
or
mov
push
mov
repnz
mov
or
out
fimull
pop
ljmp
shl
data16
lock
xchg
cs
xchg
and
insb
cld
ds
and
sbb
or
add
inc
das
or
std
inc
pop
mov
adc
cmp
jo
dec
movsb
xor
pop
sti
dec
rcrl
push
popa
push
xchg
pop
cltd
addr16
popf
xlat
clc
and
leave
pop
and
jmp
pop
into
cltd
pop
sbb
mov
cltd
add
sub
jno
inc
jno
adc
ret
add
lods
jmp
pop
sub
xchg
push
pushf
pop
add
hlt
mov
lcall
pop
pop
sub
push
push
std
repnz
je
jmp
add
adc
pop
stos
fildll
or
pop
sub
xchg
jb
add
aad
mov
mov
mov
int3
movsb
xor
into
add
add
dec
ficoml
pushf
sbbl
shlb
bswap
jne
icebp
mov
sub
test
pop
cmp
jb
lcall
mov
mov
inc
and
das
out
lret
sarb
jge
mov
int
add
pop
adc
xchg
test
mov
mov
sbb
int
add
retw
sbb
cmp
out
fistpll
or
or
xchg
repnz
lods
int
iret
xchg
sub
sub
popf
sar
insb
repnz
mov
mov
lahf
mov
daa
scas
adc
daa
out
lahf
test
jmp
mov
iret
cmpsl
inc
add
int
dec
mov
dec
outsb
rep
cltd
or
out
repz
push
loope
adc
pop
pop
fcmovnbe
adc
sbb
mov
ficoml
xchg
sahf
fistl
mov
je
mov
movsl
push
enter
mov
cmp
add
inc
test
inc
add
mov
adc
ss
or
mov
or
sub
cmp
cs
pop
fnsave
jmp
mov
leave
lods
sub
test
lock
push
rcr
mov
scas
iret
cmp
and
xchg
and
fucom
xchg
add
sarb
jno
mov
arpl
int
and
repnz
in
pop
roll
int
pop
jge
out
pop
imul
push
les
mov
cmp
sarb
and
imul
pop
jnp
pop
sbb
jo
xchg
aas
dec
xchg
movsb
sbb
mov
and
shlb
inc
inc
and
jl
je
lahf
jg
cltd
xchg
and
mov
ss
gs
ret
mov
add
fmull
hlt
adcb
inc
outsb
inc
movb
out
les
xchg
adc
aad
jne
mov
cli
clc
adc
mov
pop
jb
xchg
jmp
dec
lds
pop
incb
dec
lock
xchg
and
daa
dec
jl
jo
call
in
daa
xor
inc
adc
out
cmpsb
mov
dec
mov
add
or
mov
arpl
sub
outsl
add
adc
lret
or
imul
dec
cmp
mov
or
lcall
movsl
inc
mov
and
mov
jae
iret
inc
ja
xchg
shr
push
xchg
mov
or
mov
fs
sbb
sti
push
imul
lret
mov
pop
fisubs
movsb
sbb
xchg
ret
mov
mov
lods
out
inc
add
arpl
dec
pop
or
jg
inc
addr16
ja
pop
mov
mov
enter
int
mov
popl
and
dec
push
arpl
xor
jo
adc
inc
stos
mov
mov
xor
sub
mov
fstpl
pop
ss
loopne
add
adc
clc
scas
rclb
lods
and
lock
out
mov
repz
or
icebp
fmull
mov
jbe
int3
mov
xchg
addr16
jge
xor
jo
test
aad
fistpl
and
loop
jne
call
popa
aam
mov
mov
inc
je
dec
mov
xchg
xlat
push
cmp
sub
aad
mov
icebp
popa
cmp
in
int
movsl
test
add
shll
icebp
or
push
push
xor
inc
hlt
pop
fdivs
nop
inc
ret
outsb
das
jb
jns
inc
inc
jle
mov
cmp
jne
cwtl
mov
popa
xor
movsl
mov
sbb
fninit
loopne
mov
pushf
and
xchg
xor
add
or
enter
loop
push
and
std
sub
inc
jb
loope
or
data16
pop
sahf
lods
inc
cmp
push
cli
xchg
lgdtl
xchg
mov
outsl
call
mov
add
lods
pusha
cmp
ljmp
xchg
hlt
xchg
ds
cli
insb
xchg
lock
xchg
movsl
movnti
inc
jne
or
or
mov
sbb
addr16
in
test
push
push
inc
pop
sub
aaa
idivl
push
cltd
adc
or
lea
mov
jo
daa
imul
or
jae
jmp
xlat
dec
pop
and
fidivrs
jo
push
or
sub
mov
loopne
loop
add
cmp
jae
fwait
xchg
mov
int3
and
mov
sbb
lock
dec
stc
cmpsb
pminsw
fnsave
pop
pop
js
cltd
ret
cwtl
std
mov
sbb
sbb
mov
movsb
out
ss
shll
push
sbb
out
push
adc
int3
pop
dec
lea
test
int3
repz
ja
mov
sub
pause
pushl
cmp
in
pop
in
xor
xlat
sbb
aaa
cmpsb
in
cli
cmp
mov
xor
mov
or
popa
iret
scas
clc
movsl
mov
loope
add
pushf
jg
outsb
loope
cmp
stc
add
adc
fildl
js
stos
stos
inc
mov
push
push
idivb
inc
sub
repz
in
mov
mov
or
mov
fwait
xchg
test
add
sbb
jae
jnp
arpl
lds
scas
xor
jne
xchg
inc
mov
xchg
outsl
test
iret
cmp
or
xchg
iret
fs
xor
or
lret
adc
push
cmpsl
popa
das
les
je
repz
pop
dec
rcrl
jbe
xor
mov
xchg
mov
mov
shlb
test
fsubrl
daa
mov
mov
lret
mov
xchg
jae
inc
lds
push
mov
jmp
shrl
xor
js
xor
lods
mov
repz
inc
fs
xchg
dec
add
and
insl
in
lea
inc
adc
push
cmp
or
or
testb
sub
int3
roll
sub
push
dec
mov
adc
rolb
jle
shrl
sbb
test
scas
sbb
mov
in
insl
mov
add
fldenv
enter
pop
inc
add
std
cmpb
xor
pop
pushf
add
ljmp
lret
mov
dec
mov
mov
sbb
movsb
pop
cmp
in
aaa
push
fwait
inc
push
mov
scas
adc
mov
call
mov
lock
inc
jns
sub
dec
movsl
bound
pop
loope
js
inc
ja
subb
sub
aas
mov
pop
leave
lret
pop
movsl
or
ljmp
out
arpl
dec
icebp
xlat
mov
adc
testl
outsl
ds
cmpsl
mov
iret
or
mov
inc
xchg
aaa
or
sbb
pop
inc
or
int3
sub
cmc
mov
icebp
popf
test
das
pop
xchg
movsb
mov
cmp
loop
mov
dec
je
add
dec
cmp
pusha
cmpsl
pushf
call
sub
stos
rol
sub
push
decb
add
rep
sub
call
out
pop
ret
push
sahf
cli
xchg
stc
mov
cmpsb
adc
out
sti
movsb
push
fsubl
pop
data16
add
jne
sbb
fwait
outsl
jle
pushf
js
mov
sbb
sub
loopne
js
mov
test
scas
lods
imul
and
lret
sub
and
sbb
lcall
mov
inc
jno
in
adc
lcall
adc
ja
movsl
mov
call
enter
xchg
adc
push
dec
and
jecxz
movsl
insb
jne
adc
sbb
add
aad
dec
add
rolb
in
lock
dec
mov
ja
fsubrp
jg
mov
ja
pop
fisubrs
jnp
push
sub
sbb
loope
mov
data16
jno
cmp
inc
jmp
ret
dec
movsl
vmread
add
push
push
add
imul
loop
fwait
nop
ds
stc
outsl
mov
ljmp
pop
pop
gs
nop
lods
imulb
arpl
xorl
mov
mov
dec
test
push
mov
add
mov
addr16
or
inc
sub
mov
popf
outsl
ljmp
or
jae
mov
sbb
jns
sarb
or
jae
mov
shlw
xchg
jno
xor
mov
cmp
add
xchg
xchg
subb
jmp
aam
daa
std
push
jmp
adc
clc
dec
pushf
mov
insb
xor
loop
data16
mov
mov
int
in
mov
lret
mov
lcall
pop
adc
and
out
jl
mov
push
leave
pop
comiss
and
insb
sbb
sub
test
stos
call
hlt
mov
push
icebp
pop
addr16
cmp
into
fildll
dec
mov
scas
fcompl
out
xchg
add
fucom
ret
ret
xor
dec
aas
mov
pusha
push
mov
push
push
add
movsb
jo
pop
or
jbe
pop
jno
inc
xchg
push
popf
inc
xor
xor
js
es
in
mov
mov
lds
sub
jbe
jp
and
pushf
pushf
dec
fwait
or
ss
inc
mov
xchg
lods
mov
push
pop
dec
jecxz
and
push
out
sbb
xorb
and
mov
sbb
sub
mov
fwait
jl
sub
mov
push
shlb
jg
sub
mov
fsubrp
enter
imul
ret
jns
xchg
pop
jle
imull
adc
add
mov
mov
loopne
jnp
out
shl
leave
movlhps
das
aas
in
les
xlat
ficompl
lods
mov
mov
xor
pop
dec
mov
shll
jno
lock
fldcw
push
rorb
ret
sub
jbe
and
leave
jmp
ror
cmp
jge
inc
jb
xchg
movsl
push
hlt
cmp
adc
push
mov
neg
add
stos
or
add
cltd
jae
hlt
and
inc
xor
imul
mov
scas
sub
sahf
jecxz
jnp
jbe
cld
pop
in
sub
adc
pop
pop
repnz
dec
nop
mov
fmuls
xor
nop
cmp
jp
cmp
add
push
orl
ja
inc
sub
nop
xchg
fildl
ret
sub
cwtl
out
cmp
sbb
sub
rcll
cmp
pop
insb
ljmp
imul
cmp
push
arpl
les
outsb
jnp
push
mov
gs
loope
test
push
outsb
pop
sbb
fadd
mov
out
ret
rcl
sub
push
std
and
loope
adc
stc
cmpsl
sbb
cmc
pop
aaa
cmp
push
add
jno
jg
mov
mov
cltd
adc
leave
leave
rcrb
mov
mov
lds
push
mov
cmp
jb
mov
mov
and
pop
mov
aaa
call
xor
fsubrl
shrb
and
dec
in
xchg
loopne
dec
xor
push
sti
pop
or
les
pop
sub
jmp
fistpll
es
mov
or
push
popf
mov
fwait
das
in
fwait
cmp
inc
xchg
inc
dec
sbb
pop
cmp
inc
scas
pop
sbb
sub
pop
daa
add
daa
into
int3
xor
dec
sbb
jmp
test
fcmovb
dec
ficoms
insb
stos
out
sub
mov
jns
pop
mov
lret
enter
sti
push
lock
xlat
cmpb
aam
inc
std
daa
push
iret
cmp
jbe
arpl
cmp
jb
pop
push
into
pop
xchg
mov
xchg
mov
pusha
push
add
inc
cmp
push
add
push
push
and
inc
pop
adc
dec
cmp
imul
lods
mov
adc
sar
incl
mov
mov
mov
dec
jmp
lret
fs
jb
adc
imul
mov
dec
sub
push
or
lahf
mov
insl
mov
fisubl
mov
mov
dec
iret
mov
imul
sarl
mov
icebp
sbb
test
inc
dec
lahf
push
pop
cmp
test
dec
cmc
push
stos
jns
pop
add
jmp
sub
push
mov
cmp
ss
movl
mov
jne
cmpsl
pop
inc
clc
mov
sbb
das
cwtl
or
mov
pop
notb
jo
cmpsb
mov
pop
xor
sub
jae
insl
cmp
dec
jle
jns
and
enter
add
cmp
hlt
mov
cmp
cld
or
test
fs
fisubl
mov
mov
es
push
sbb
mov
stos
in
push
mov
sti
cmp
lcall
sub
mov
sub
lea
daa
sub
inc
add
mov
jle
push
imul
pop
cs
cmp
mov
adc
subl
push
je
sub
fcmovne
fsts
ja
cmp
rolb
push
sub
add
shll
and
mov
dec
cmp
mov
in
es
aas
or
jbe
mov
test
inc
jp
sahf
push
daa
fcmovb
jae
sub
mov
sub
mov
add
jecxz
mov
pop
pusha
jle
pop
mov
out
arpl
shrl
int3
mov
dec
push
leave
daa
add
loope
adc
adc
or
jbe
cmpsb
insl
dec
push
dec
sbb
cmp
movsb
dec
inc
xchg
mov
adc
pop
xchg
inc
mov
aam
sbb
imul
jae
sbb
out
lods
bnd
outsb
xchg
xchg
mov
cli
hlt
addr16
subl
stos
sbb
mov
mov
pop
jmp
jecxz
push
push
dec
xchg
push
dec
sub
add
mov
xchg
mov
jb
and
add
gs
in
xor
insl
mov
pop
inc
cmp
lods
imul
sub
adc
out
andb
and
sarl
jb
in
daa
xchg
pusha
je
jmp
shll
jbe
xor
push
sbb
sbbb
xchg
shll
sub
loopne
stos
push
xchg
iret
or
mov
pusha
pop
or
sbb
iret
xor
pop
test
inc
and
jb
lods
lods
cwtl
iret
movb
jle
jmp
clc
fstl
dec
dec
out
pushf
jmp
fwait
lds
sbbb
inc
jns
shl
pop
pop
xchg
xchg
inc
pushf
mov
sbb
rclb
xchg
stos
jns
cmp
and
jae
cwtl
lea
ret
cmpsl
jmp
movsl
jno
mov
cli
pop
push
jmp
xlat
sarb
jmp
xchg
mov
int
mov
sbb
aaa
jo
repnz
cltd
cmpsl
imul
ret
lea
movsb
out
cwtl
pop
sbb
jnp
popf
mov
scas
cmp
sarl
dec
fwait
fs
insb
xor
mov
xchg
mov
or
mov
add
mov
pushf
pop
mov
cld
push
or
push
cmc
adcb
repz
ficompl
dec
pusha
ss
in
out
mov
fiaddl
add
jb
sbb
pop
mov
aam
sbb
or
sbb
je
and
movsl
inc
pusha
or
jl
xchg
or
aad
or
mov
mov
jmp
in
push
lret
jge
xor
adc
stos
stos
je
imull
out
out
sahf
adc
rclb
push
cmp
in
cmpsl
xchg
mov
fcmovb
xchg
std
push
fcmovnbe
jl
mov
pop
jnp
ret
mov
shll
js
out
je
lea
gs
dec
mov
lcall
inc
dec
add
push
jb
jle
rorb
mov
mov
cmp
cmp
cmpsb
sbb
dec
xchg
fcomps
out
cmp
ja
ss
out
xchg
fsts
add
jb
or
in
adc
xor
sub
clc
fcmove
lock
push
rol
or
push
xchg
pop
stos
pop
inc
aam
mov
idivb
xor
xchg
sbbb
imul
lods
les
inc
fildl
sub
ljmp
and
repz
mov
adc
dec
push
mov
and
sub
lahf
push
addr16
rcrl
inc
and
jns
inc
cmp
sarb
inc
inc
in
insl
mov
push
stos
jbe
aad
jno
test
fisubl
push
mov
sub
andb
xor
dec
hlt
cs
mov
and
pop
xchg
stos
bound
and
js
inc
push
aam
add
cmp
push
scas
push
mov
push
and
leave
push
fldcw
cli
push
pop
das
mov
xor
lock
dec
aas
mulb
add
fbstp
add
xchg
pop
clc
lods
jl
add
mov
xor
sub
repnz
scas
inc
push
mov
int
stos
pop
sub
decl
aaa
rclb
or
in
in
xchg
mov
mov
scas
mov
aam
pop
lret
mov
lcall
pop
mov
imulb
cmp
int3
mov
xor
push
cmc
mov
xchg
xchg
xor
cli
pop
mov
dec
scas
dec
arpl
add
adc
push
out
or
push
ljmp
stc
jns
lcall
add
notl
lea
cmp
pusha
sub
lods
push
adc
inc
or
pop
test
jge
xchg
lods
pop
mov
xchg
add
fdivs
xor
fwait
xchg
cmp
rolb
in
fwait
pop
inc
jp
inc
jns
shr
in
mov
stos
nop
jecxz
repz
pop
lock
push
push
xchg
je
lahf
mov
adc
and
call
jg
fildl
decl
cmp
push
cmp
clc
lock
pop
pop
in
insb
int
add
rorl
push
jge
sbb
xor
call
mov
pusha
add
shrb
push
xchg
inc
xchg
int3
mov
push
push
loop
mov
js
dec
sub
testl
nop
xor
or
or
aad
dec
mov
add
sub
imul
sub
dec
adc
decl
andl
fwait
and
popa
addr16
fadds
cmpsb
mov
jo
and
sarb
and
dec
movsb
xchg
loop
lods
cmp
ror
dec
loopne
in
xchg
pusha
mov
mov
cmp
test
push
mov
ss
pop
pusha
or
adc
insl
cld
test
or
push
and
loopne
add
bound
lea
fsubp
jecxz
loope
roll
icebp
mov
sub
pushf
push
push
xchg
sbb
jle
sbb
mov
mov
sub
inc
jae
cmpsb
std
mov
outsl
test
pop
mov
sbb
sbbl
adc
inc
shrl
xchg
dec
add
sbb
add
ss
sbb
test
jle
icebp
cmpsb
push
mov
pop
shl
jo
repnz
mov
push
or
das
insb
xchg
mov
mov
inc
push
push
cmpsl
lds
lcall
enter
push
scas
add
fsubr
mov
inc
dec
pop
push
insl
ret
mov
fmull
xor
loop
fdiv
add
inc
mov
xlat
sbb
inc
jne
cwtl
push
incl
and
movsb
add
cmp
mov
dec
fadds
xor
aas
fidivl
sbb
sbb
mov
push
add
mov
ljmp
mov
sub
cld
test
jecxz
icebp
in
loopne
inc
pop
int
dec
out
dec
xorb
ds
jne
out
add
and
in
mov
js
mov
test
cmovae
aaa
jle
add
jecxz
pop
push
mov
sub
inc
jae
mov
jnp
cwtl
sub
cli
push
mov
aaa
xchg
dec
mov
xchg
fbstp
lock
xchg
mov
or
cmp
mov
cwtl
fcompl
cmp
cli
sarb
mov
repz
push
push
lahf
mov
inc
dec
jae
sub
add
pusha
inc
imul
or
inc
lock
dec
fcoml
bound
test
cmpl
ja
adc
hlt
cmp
sahf
movsb
cmp
je
int3
enter
shl
test
out
iret
mov
jne
mov
imul
add
call
test
popa
jnp
or
imul
xlat
cmpsb
cmp
scas
mov
fwait
pop
xchg
sbb
bound
ret
jmp
push
adc
popa
mov
outsb
call
ljmp
stos
mov
or
xchg
in
push
call
sbb
cmp
movsb
loope
jmp
adcb
test
lock
adc
fisttpl
stos
loopne
or
push
sub
les
inc
cmc
inc
inc
push
lret
arpl
adc
lock
sub
pop
adc
inc
jle
mov
inc
jbe
in
aaa
aad
ja
shll
mov
inc
sti
jge
in
adc
mov
mov
stos
cmpsl
lahf
adc
xchg
jbe
push
les
jno
out
ljmp
test
fs
mov
iret
outsb
in
ror
lcall
lock
aam
push
push
aas
dec
xchg
cli
clc
jmp
pushf
pop
or
invd
in
xlat
imul
addl
lcall
ss
sbb
jo
jns
call
pop
dec
jno
divb
cmp
mov
cmp
xor
adc
bnd
mov
jmp
add
stos
sahf
inc
repnz
loopne
leave
mov
mov
fnstsw
pop
add
dec
js
ljmp
test
jnp
push
imul
orb
mov
push
cld
stos
scas
jnp
push
flds
or
movsb
test
pop
loopne
popa
mov
push
pop
mov
sti
push
aad
test
xor
or
and
icebp
pop
lea
fsubrp
add
inc
mov
js
scas
ret
sar
lds
fwait
pop
imul
cmpsb
test
pop
push
and
or
gs
sbb
movsl
mov
shrd
lock
insb
sbb
cmp
jno
lods
xchg
fmuls
jns
or
or
mov
shl
push
mov
add
pushf
daa
sub
xchg
mov
ljmpw
mov
mov
adc
outsb
xor
movsl
loop
push
push
cwtl
xlat
ja
lds
dec
shll
cltd
cmp
or
ret
movsl
or
in
and
test
jbe
sbb
imul
and
cmp
in
mov
cmp
inc
loop
push
dec
rorb
shrb
cld
cmp
out
popf
out
out
outsb
out
inc
xchg
cltd
cmp
cli
inc
or
lcall
or
adc
sar
xchg
leave
sti
adc
sub
jne
jno
repnz
stos
dec
adc
jb
xchg
aas
int
sub
andl
push
mov
into
pusha
int3
aas
fcmovnbe
cwtl
mov
or
mov
jb
mov
shl
mov
int
jne
pop
outsl
jns
or
lcall
js
movsb
jmp
mov
nop
and
xor
enter
es
neg
jp
mov
ja
lret
push
mov
xor
shll
push
jnp
movsl
cmp
sbb
pop
stos
push
mov
lds
lock
cmpsb
or
sub
subl
clc
xor
jns
mov
adc
xor
dec
div
pop
sbb
lea
xor
jmp
in
fiaddl
pop
out
hlt
arpl
loopne
outsb
xchg
xchg
adc
shll
jmp
mov
cld
mov
lcall
lods
ja
out
pop
jl,pt
notb
cmp
lahf
popf
insl
dec
add
add
loope
stos
push
push
in
xchg
test
iret
sbb
lods
les
fucomi
sbbl
ret
sbb
push
es
cld
cmpsb
pop
or
mov
inc
xchg
imulb
add
out
pop
leave
inc
or
sub
adc
add
fimuls
shlb
xchg
ficomps
mov
cmpsl
cmp
mov
sbb
mov
jno
arpl
leave
mov
add
xchg
pop
loop
pop
into
test
or
mov
adc
stc
push
outsb
pushf
lods
in
and
jns
divb
clc
pop
in
jp
push
jg
push
ss
aam
out
sbb
ss
ljmp
mov
dec
pop
int
jbe
inc
sti
pusha
inc
push
pop
adc
add
push
js
lock
outsl
loope
pop
nop
lcall
ret
rep
pop
pop
push
inc
int3
add
push
icebp
pop
pop
mov
xchg
je
push
lds
movsl
fwait
inc
mov
lret
lock
arpl
and
fcoms
or
pop
mov
cmp
icebp
mov
mov
add
cmp
inc
pop
jo
icebp
in
and
or
cmp
mov
mov
lods
cwtl
xchg
ds
jl
cmp
and
pop
sub
xchg
sub
addr16
loop
test
cmp
cmp
inc
mov
jle
imul
sbb
add
mov
cwtl
loope
dec
cmp
sbb
cld
inc
pusha
insb
sub
repz
iret
xchg
add
out
adc
xchg
xor
clc
add
scas
outsl
pop
cmp
push
sbb
shlb
leave
cmp
sub
push
mov
enter
adc
dec
enter
add
loopne
test
mov
in
das
sub
mov
cld
add
mov
jmp
add
and
inc
cmp
or
lcall
add
pop
mov
sub
mov
or
shrl
pop
fstpl
insl
or
je
mov
push
lcall
sbb
aas
movups
xor
mov
sub
ret
xchg
test
mov
xor
ljmp
and
popf
das
jb
adc
cmpsb
sti
fcomi
sbb
or
jo
repz
dec
mov
loopne
imul
or
fsubs
dec
in
xchg
push
ja
shrl
xchg
adc
imulb
arpl
ss
adc
mov
call
jmp
in
jbe
jmp
int
out
loope
fwait
jmp
cmp
outsb
mov
pop
out
mov
dec
cmp
mov
sbb
out
cmp
jne
mov
movsl
jecxz
inc
das
or
xchg
lock
insl
mov
lods
gs
scas
inc
popf
pop
xlat
push
loop
and
cmpsl
jg
adc
popf
cmp
add
fs
mov
das
and
outsb
mov
into
sbb
in
aaa
std
sub
jae
dec
mov
sbb
dec
mov
pop
adc
iret
ja
cmp
cwtl
iret
mov
addr16
inc
popf
xchg
xor
add
sbb
movsl
testl
inc
xchg
inc
jne
cmp
in
loopne
test
inc
lret
test
mov
fdivr
xor
xchg
sbb
js
mov
mov
ds
ds
sbb
daa
or
mov
sahf
movsb
xor
enter
shl
mov
test
test
pop
rclb
pushf
dec
cmp
jmp
lods
cmp
int
jecxz
mov
cltd
jne
test
pop
cmp
decb
cltd
fisubl
movsb
sbb
gs
sub
pop
or
mov
xchg
pop
cmpsb
pusha
pop
cld
sarb
leave
adc
mov
xor
cld
xor
pop
test
imul
and
mov
test
in
dec
cmp
cwtl
jmp
cmp
cmpsb
xor
fmull
cmc
loope
scas
repnz
add
data16
xchg
adc
mov
dec
and
fdivrs
fs
iret
jno
xchg
push
mov
pop
clc
icebp
aam
fcoml
mov
out
ret
ss
loope
dec
mov
pop
into
inc
sbb
mov
push
incl
loopne
stos
nop
out
rorl
jg
pop
enter
repz
scas
sub
les
ret
daa
push
or
inc
sar
sub
dec
push
cmp
inc
jno
push
in
add
test
sahf
add
pand
sub
out
adc
pop
aad
out
dec
add
sbb
ret
jne
sub
and
cmpsl
xchg
xchg
xchg
fiadds
cmp
ret
ret
cmp
inc
cmp
mov
sub
inc
jp
outsb
lock
loop
jl
dec
aad
sbb
shrb
or
sbb
adc
adc
mov
outsb
cli
test
pushf
add
lcall
lcall
ja
sub
testl
sbb
mov
sub
xlat
xor
loope
insl
xchg
aam
lds
pop
and
mov
sar
xor
fmul
inc
push
stos
movsl
inc
dec
int3
in
jecxz
mov
ret
imul
and
add
fsubrl
sub
fstps
jbe
adc
mov
adc
mov
dec
adc
xchg
xlat
mov
mov
mov
push
mov
inc
pop
mov
add
dec
push
jbe
or
fisubrl
jl
mov
dec
repz
ret
or
pop
or
movb
or
cmp
add
push
imul
aaa
mov
mov
std
dec
out
mov
xchg
and
inc
test
mov
cld
scas
ret
push
pop
add
jnp
mov
mov
imul
sub
mov
dec
pop
lods
stos
jae
jl
int
lods
cs
or
movsb
mov
xor
cmp
popw
das
nop
repnz
fcoms
add
fwait
mov
insl
test
pop
push
movsb
fstps
dec
addr16
or
pop
int3
pop
mov
shl
arpl
adc
fildl
sbb
push
lods
push
cmp
inc
mov
outsb
cmp
push
ret
xorl
stos
dec
dec
or
je
sub
mov
in
outsl
sti
jbe
mov
dec
into
mov
cmp
and
scas
xlat
outsb
push
sbb
loopne
sub
xchg
xchg
mov
push
das
hlt
push
lret
shll
leave
inc
cmp
cltd
lahf
xor
and
push
ljmp
pop
push
adc
xchg
loop
inc
pop
xchg
mov
or
and
loopne
mov
fidivrl
int
or
cmp
sub
sub
jecxz
roll
addr16
cmp
lds
sub
mov
pusha
outsb
inc
pop
fsts
mov
lahf
xchg
jle
xchg
mov
test
push
out
cltd
les
add
pmulhw
xlat
jg
mulb
int
push
push
jg
shlb
push
xchg
mov
daa
cmp
sub
es
sbb
sbbl
in
mov
adc
stos
xchg
jg
lret
imul
mov
test
leave
outsl
mov
push
mov
aad
jo
cmp
adcl
jmp
jne
jg
ss
jmp
fcmovnu
cmpsb
scas
sahf
add
rcll
sar
pop
push
mov
int3
test
push
and
pop
jne
sbb
mov
rcl
or
pusha
sbb
push
mov
or
stos
test
enter
fildll
jl
and
add
jne
cmpsl
out
mov
pop
pop
sbb
clc
mov
inc
ljmp
testb
mov
outsb
je
loope
jle
stos
out
jnp
stc
bound
neg
sbb
and
mov
mov
mov
into
push
cld
xchg
pop
push
push
into
mov
sbb
dec
iret
push
scas
lea
sbb
push
xchg
out
dec
mov
add
out
stc
addl
mov
cmp
cmpb
xor
aas
jle
xor
popa
jle
pop
sub
mov
ja
sbb
add
cmp
gs
pop
mov
pusha
push
ret
inc
stos
mov
andb
lock
push
fldcw
mov
add
inc
rorb
ficomps
mov
jo
leave
add
sti
push
or
aam
add
pusha
ss
xlat
xor
cld
sti
cltd
push
cs
pop
or
jg
add
pop
jo
mov
outsl
jmp
push
rolb
loopne
sub
cmpsb
pop
jne
ret
inc
mov
mov
hlt
cmc
xchg
mov
cld
fs
std
adc
scas
rcl
loope
fwait
imul
jmp
mov
sub
xchg
popf
pushl
rcrb
push
rcll
mov
pop
cmp
inc
jbe
scas
sub
in
cmp
int3
mov
lds
stc
add
mov
dec
jnp
dec
pop
dec
mov
fldenv
sbbb
lahf
out
repnz
and
insl
dec
inc
jecxz
xor
and
sbb
lret
hlt
je
insb
jns
mov
mov
or
fnsave
jle
inc
js
lea
fs
inc
adc
pop
pop
adc
jecxz
cld
push
cltd
xchg
cli
inc
hlt
sub
out
movsb
in
dec
mov
aad
xlat
movsb
in
jmp
jl
int3
ds
fdivrl
pushf
popa
or
lods
jb
sub
xor
mov
and
pushf
call
pop
jnp
ret
lods
mov
cld
repnz
fs
in
pop
mov
dec
jmp
cltd
movsl
add
and
pop
add
mov
jecxz
push
cld
xor
sarl
in
ficoms
xchg
outsb
mov
inc
inc
pop
stc
add
mov
sti
adc
mov
xor
sub
inc
xchg
es
jnp
push
mov
mov
add
jecxz
aad
sub
imul
pop
mov
cmpl
and
fwait
test
imul
mov
xor
js
push
lods
pop
xchg
xchg
ja
xor
xor
or
mov
mov
pop
lahf
gs
mov
clc
dec
cmp
cmp
jp
push
loope
push
push
push
in
xchg
or
xchg
sub
sbb
mov
outsl
add
add
and
stc
jmp
adc
es
or
loopne
insl
adc
adc
pop
pop
or
ljmp
popf
pusha
and
xlat
or
xchg
fdivrp
dec
or
push
or
jbe
in
stos
fiaddl
add
cmc
inc
xchg
cli
das
lcall
dec
scas
push
dec
sahf
mov
mov
cwtl
sub
daa
push
dec
in
xor
jle
xor
aaa
test
cmp
ljmp
out
inc
dec
cs
mov
pusha
dec
and
adcl
xchg
outsl
mov
jg
xlat
mov
roll
mov
dec
push
fsts
and
pop
jmp
hlt
fidivrs
in
cs
enter
mov
insb
clc
movaps
pushf
out
push
sbb
mov
cmp
idiv
insb
popa
clc
movsb
repz
sub
push
inc
cmpsl
movsl
push
cmc
and
subl
sbb
aad
lahf
dec
xchg
jae
and
leave
pop
popf
mov
sub
pusha
pop
pop
dec
arpl
cmp
stos
cld
cwtl
je
nop
repz
movsl
pop
and
enter
and
hlt
fisttps
jns
xchg
insl
pop
cwtl
jl
das
xor
pop
lret
push
fiaddl
icebp
dec
cmpb
aaa
and
push
xchg
cmp
movsl
mov
in
sub
mov
sbb
or
popf
mov
xlat
xchg
fisubs
mov
icebp
inc
sub
or
rorl
imul
pop
jno
dec
cmp
mov
cwtl
jge
inc
int
fnstsw
pop
test
addr16
add
sti
cmp
movsl
divb
jo
popf
sbb
add
clc
lret
adc
mov
adc
loop
loope
enter
ss
cmc
lea
mov
icebp
xor
xchg
movsb
fwait
adc
xor
push
pop
mov
xchg
add
cli
insl
jecxz
dec
xchg
sbb
add
and
cld
mov
xchg
adc
pop
mov
sub
xchg
mov
es
dec
and
mov
adc
inc
xchg
pop
rorl
std
mov
lahf
sbb
push
jo
test
jns
cmpsl
mov
mov
push
inc
jle
or
jb
cmp
out
and
cwtl
arpl
xor
stc
jne
cmp
push
adc
out
push
inc
fs
std
fisttpll
or
push
adc
jl
cmpsl
sbb
sbb
in
adc
xor
pop
iret
lods
sub
xchg
mov
push
jg
jp
mov
dec
sti
movsb
jg
adc
in
xchg
cli
call
cmp
ja
ficompl
sbb
je
sub
loop
mov
lods
mov
mov
mov
push
jae
ds
push
mov
aam
outsl
pusha
add
lret
mov
mov
fsub
shrb
scas
push
xor
clc
out
fidivs
hlt
test
rcll
inc
mov
fiaddl
cltd
or
sbb
mov
mov
mov
adc
gs
test
jno
je
ret
test
mov
icebp
xor
stc
sub
js
xchg
in
cmc
and
mov
ficoml
dec
sbb
loop
lret
subl
sbb
mov
and
sbb
push
xchg
addr16
movsb
mov
imul
mov
in
mov
lret
xchg
push
popf
and
decb
push
dec
cmp
mov
inc
lds
dec
mov
dec
inc
test
fisttpl
fcmovbe
mov
add
pop
xchg
into
jae
fstpl
mov
in
jae
sbb
inc
xchg
out
mov
ret
sbb
nop
xchg
xor
insb
movsl
test
xor
mov
or
push
mov
iret
test
mov
clc
in
dec
subl
pop
add
xchg
dec
insl
scas
add
jns
cmp
bswap
movsl
outsl
jbe
mov
pushf
stos
divl
in
jbe
mov
and
movsb
fwait
xchg
inc
jl
aam
push
pop
cwtl
lahf
in
ljmp
pop
sbb
mov
rep
and
jns
jae
dec
imul
jmp
lahf
inc
add
scas
push
popf
addl
push
inc
jne
lods
xor
jle
es
div
clc
mov
push
sub
dec
push
pop
jb
cld
add
ss
xorb
add
and
add
add
mov
jmp
and
rcrl
push
leave
out
sub
ret
push
jmp
cmp
enter
cmp
sbb
sahf
pop
insl
fcmovbe
and
imul
mov
lret
or
xchg
dec
lret
pusha
fistl
cmc
sub
push
aaa
push
lock
fdiv
rclb
test
test
pop
das
xor
testb
fistpl
mov
or
into
jns
call
addr16
clc
jge
xchg
cmp
ljmp
mov
lcall
movaps
mov
push
or
and
imul
lret
mov
std
inc
out
in
inc
je
and
push
out
jo
cld
jp
ret
lahf
xchg
inc
cmp
fcoml
sub
mov
call
loop
imul
cmpsb
adc
shll
sahf
add
and
add
inc
jns
repnz
rolb
or
jp
lret
mov
test
xchg
push
xchg
imul
inc
subb
lds
dec
sub
cmp
shll
icebp
ss
out
mov
adc
jge
hlt
adc
inc
or
sbb
mov
pop
dec
xor
punpckhwd
or
fcmovnu
aam
dec
icebp
xor
movsl
cli
fistl
sbb
adc
repnz
xchg
dec
push
jp
cli
cwtl
adc
jle
cmp
push
xor
mov
jge
or
mov
testl
icebp
ljmp
pop
outsl
mov
outsl
jle
in
or
sub
jno
repz
vmread
addr16
or
repnz
cmpsl
mov
ret
or
or
aad
fdivs
gs
sahf
loopne
std
fcomps
sbb
lds
les
nop
lods
rolb
iret
fs
add
fistpll
push
retw
sub
xchg
mov
rcrw
push
rorl
idiv
das
or
cmpsl
ret
sbb
movsl
push
mov
insl
inc
dec
and
repz
leave
leave
push
jns
xchg
adc
mov
fisttpl
jecxz
mov
push
lea
or
add
sub
mov
in
adc
push
mov
mov
stos
mov
xchg
pop
inc
sahf
add
loopne
ja
lcall
or
or
pop
jbe
xor
pop
or
leave
xchg
cltd
mov
pop
cltd
mov
icebp
xchg
test
sub
leave
das
fisttpll
or
pop
lcall
je
pop
add
stos
xor
les
adc
mov
xchg
adc
adc
sub
sti
xor
fldcw
fdivs
sbb
push
push
psllw
mov
push
insl
xchg
mov
stc
push
enter
test
and
xchg
sahf
les
pop
and
push
push
push
xchg
sub
adc
negb
adc
jne
int3
pusha
jl
and
idiv
aas
imul
inc
inc
pop
push
out
lock
daa
sti
or
xor
bnd
jmp
add
push
call
jg
imul
in
fdivr
shl
or
or
iret
cmp
rcrl
mov
in
and
pop
lea
rolb
mov
sub
sub
sub
xchg
mov
ljmp
xor
aad
iret
mov
mov
pop
jecxz
inc
dec
test
hlt
enter
icebp
sub
sub
xor
lds
cmpsl
call
push
xorl
xchg
jo
jns
sti
stos
js
subb
jbe
enter
cmpsl
mov
pop
data16
adc
pop
ljmp
adc
adc
scas
mov
fisttps
out
loope
stos
add
lret
adc
xchg
ret
cli
and
cmpb
and
pusha
pusha
ret
std
push
jmp
ret
hlt
lcall
mov
das
xor
inc
push
mov
rcrb
adc
jg
sbb
imul
or
mov
jb
ljmp
push
call
add
cld
mov
fisttpll
idivb
push
es
jp
mov
aam
loopne
frstor
dec
jl
xchg
sbb
cmpsb
mov
pop
add
sub
ds
sub
fwait
xchg
lea
dec
repz
int
xchg
fcmovu
fstl
sbb
aaa
rcl
ljmp
adc
mov
daa
jp
and
inc
lcall
add
add
shl
das
adc
scas
xor
xchg
movl
push
leave
cmpsb
xor
out
pop
pop
lret
and
insb
clc
mov
ret
push
data16
bound
and
and
inc
pop
mov
xor
mov
movsl
dec
xchg
mov
shrd
divl
xor
insb
insb
aaa
jg
pop
in
mov
cltd
fstpt
cs
mov
mov
add
and
xor
xchg
mov
dec
mov
or
sub
jne
out
jmp
ds
push
test
mov
cmp
mov
xchg
jns
pop
fistpl
cmp
xchg
jnp
scas
div
int
cmpsb
mov
dec
xchg
rcr
roll
jne
mov
mov
jmp
xchg
out
outsb
cli
stc
xchg
jmp
inc
pop
sbb
lahf
lcall
and
sub
xor
psubusb
and
and
in
or
movsl
jbe
mov
sahf
ret
scas
loope
jmp
bound
insl
aam
lods
dec
sarl
and
out
cmp
sbb
aaa
rcr
insb
clc
data16
xchg
pop
sarl
push
pop
in
sti
inc
mov
or
dec
stos
mov
push
jne
dec
xlat
dec
aas
inc
push
stos
xchg
aad
and
ficoml
cmp
aam
push
nop
xlat
in
pop
xor
mov
jmp
test
xlat
xor
mov
iret
jg
add
dec
xor
xlat
push
adc
gs
push
fs
jno
loope
inc
sbb
fisubl
pop
loope
add
ds
cmpsb
adc
cli
clc
xchg
and
std
adc
fldenv
cltd
test
shr
fwait
pop
nop
mov
mov
ja
mov
and
in
xchg
cmp
cmp
iret
lcall
scas
out
aas
outsl
mov
cmp
push
mov
mov
cmpsb
int3
fidivrl
sti
push
mov
js
jg
sbb
push
cmp
aad
das
lret
jno
addr16
cli
xchg
aas
xchg
in
xchg
mov
sbb
push
cmp
movsl
pop
insl
ds
pop
ret
xor
mov
fwait
adc
fwait
mov
jg
xchg
sbb
sub
cmpb
je
or
sub
movl
ret
int
add
push
test
jns
es
mov
pop
insl
imul
push
fsubs
aam
outsl
test
pushf
pusha
pop
sub
std
mov
cmc
xor
fistpl
sub
lds
aam
mov
stos
scas
in
xchg
inc
outsb
aad
clc
xchg
inc
xchg
mov
pusha
jecxz
hlt
add
xor
test
scas
jmp
movsb
shl
pop
push
adcl
xchg
lea
dec
and
mov
xor
cltd
dec
cmp
pop
xor
sarb
jo
cmpsb
inc
movsb
jmp
jg
mov
or
add
inc
adc
sahf
nop
jmp
repz
push
cmpl
fs
jae
imul
mov
test
mov
imul
adc
adc
xchg
fdivr
xor
aaa
mov
nop
sbb
sub
push
push
mov
jl
dec
xor
add
leave
adc
pop
jl
cmp
in
in
pop
mov
jb
mov
xor
test
sahf
add
add
lds
push
dec
movsl
movsb
adc
repnz
fistl
test
mov
adc
jecxz
lods
pop
aaa
push
jo
mov
out
pusha
dec
adc
insb
std
inc
cmp
pop
sub
test
push
mov
jg
mov
mov
xor
cmpsl
cltd
dec
adc
pop
adc
stos
call
rcll
pop
sbb
aad
loop
xchg
jg
or
test
sbb
inc
mov
cmp
mov
lcall
je
xor
add
adc
mov
daa
lods
std
out
jne
icebp
call
jg
or
mov
stc
outsb
mov
mov
mov
mov
ds
xchg
cmp
ljmp
inc
aad
sbb
repz
stos
ds
in
out
sti
mov
enter
xor
stc
int3
mov
stc
scas
and
rcrb
fstps
cmp
in
inc
pushf
lods
lcall
jp
cmpsb
pop
sahf
sub
xor
test
hlt
aaa
pop
jge
mov
jmp
jns
xor
sub
mov
mov
aaa
pop
scas
outsb
inc
sub
add
enter
jle
mov
sub
xor
jge
jb
out
xor
dec
lahf
cmp
loop
jbe
xor
mov
xlat
pop
arpl
push
scas
cltd
and
lret
or
jle
out
push
stos
xor
in
divb
std
push
jnp
xor
mov
sub
out
sbb
add
insl
int
shlb
fsubl
xor
shr
xchg
mov
push
pushf
mov
lcall
mov
das
aas
mov
jae
cmp
rcl
adc
mov
je
cmp
divb
dec
push
int
cmpsb
inc
xchg
dec
repnz
je
adc
shrl
mov
push
bound
test
push
icebp
popf
pop
scas
int
xchg
pop
push
mov
pop
pusha
es
std
pop
shrl
xor
mov
inc
andl
cmp
rorl
aam
add
fidivs
push
ss
lahf
into
enter
andb
sahf
cs
pop
mov
clc
mov
shrb
and
jb
sub
and
mov
sub
lret
int
and
mov
in
xchg
fdivl
js
enter
sub
insl
fildll
lods
sarb
es
jmp
in
xchg
mov
xor
push
pusha
dec
cmpsb
cmp
cmc
fprem
imul
jo
ljmp
add
das
lcall
cltd
loopne
outsb
lea
sub
xlat
inc
pop
jmp
sub
pop
sub
pop
mov
imulb
sahf
iret
mov
insb
pop
bnd
cmpsb
and
xchg
shll
mov
fildll
orb
mov
pop
mov
cmpsl
fsubrs
cli
mov
rcrl
std
xor
or
in
push
jmp
jo
add
add
div
iret
mov
fsubs
lcall
add
aam
lods
mov
sbb
pop
mov
mov
adcb
cmpsl
out
or
inc
push
movsb
test
push
clc
mov
ss
or
out
daa
push
mov
mov
sbb
out
rcr
clc
ja
push
mov
sbb
pop
je
jecxz
loopne
test
push
cmp
push
mov
das
icebp
fldcw
cmp
repz
in
dec
scas
mov
jne
dec
testl
scas
int
loop
jg
cld
pop
sub
mov
xchg
leave
sub
cmp
popf
movsb
movsb
pop
or
pop
decl
out
xor
mov
loopne
and
cs
cmp
in
daa
rcr
call
adc
je
jl
adc
lahf
mov
pop
dec
imul
mov
xchg
fidivl
movsb
jle
mov
push
insl
pop
loopne
mov
subl
aad
xchg
lods
mov
mov
pop
sbb
cmp
lret
and
imul
sub
pushl
adc
pop
pop
call
cmpsl
lock
test
pop
adc
jg
cmp
mov
mov
jge
and
cmpsl
mov
int
int3
xor
aam
pop
lret
enter
int3
out
sub
enter
push
push
ror
pop
insb
jo
mov
jno
sbb
cmp
fcomp
sarl
cwtl
icebp
lea
cmpsb
fs
or
fucom
movsl
repnz
aas
test
dec
stc
inc
sbb
rolb
sahf
repz
imul
rol
adc
mov
push
adc
lods
mov
jo
jg
inc
push
rcll
in
jmp
data16
xchg
in
fs
leave
fisubrs
cmp
negl
pop
cli
inc
or
call
jnp
mov
or
sbb
int
or
jge
scas
test
xor
xchg
mov
mov
dec
stos
cmp
fisttpll
jno
mov
inc
comiss
into
fucomi
inc
jmp
std
shlb
cmp
inc
push
and
repz
cmpb
pusha
ret
mov
mov
jbe
xchg
xor
es
lret
les
adc
enter
dec
sub
pop
movsb
fbstp
adc
loop
js
das
lock
push
ljmp
fcmovbe
fstpt
mov
jbe
dec
sbb
adc
and
scas
mov
movsl
popf
insl
in
dec
scas
or
xor
xchg
inc
pop
dec
push
mov
push
test
inc
lahf
sbb
mov
arpl
cld
stos
pushf
mov
mov
stos
mov
jmp
jecxz
rorl
and
pop
es
or
fs
aaa
mov
mov
push
or
in
sbb
scas
or
xchg
jb
mov
hlt
push
jl
test
les
mulb
sbbb
mov
sbb
fidivrl
add
cmp
rcl
xchg
xchg
in
fwait
daa
nop
stos
xor
xor
add
test
jne
sti
pop
dec
lcall
lcall
push
jg
xor
movsl
sbb
adc
bound
and
xchg
xchg
mov
push
xchg
sbb
adc
repnz
xor
push
test
and
pop
cwtl
xchg
adc
stc
call
xor
call
sub
jl
add
aas
ret
shlb
shrl
and
cmp
lcall
mov
push
mov
popf
std
jecxz
arpl
jae
jae
cs
popf
jb
or
push
cs
into
jne
mov
in
fldt
cwtl
aam
orb
lcall
ss
test
add
sti
or
je
cld
in
mov
push
mov
and
xchg
mov
pop
cmp
push
imul
outsb
jge
mov
loop
adc
enter
in
dec
mov
movsb
add
jno
add
js
cmp
mov
mov
ret
das
and
std
pop
and
add
insb
push
aad
outsl
jno
xchg
jle
out
inc
mov
inc
cmp
push
mov
push
mov
fcoml
mov
xchg
outsl
mov
sbb
stos
xlat
arpl
or
mov
xlat
jae
pop
les
mov
sbb
inc
push
and
inc
outsl
into
push
lods
push
fimull
adc
subb
xchg
xor
call
addr16
fidivrs
or
lods
loope
jno
dec
dec
fisubrs
rcll
fiadds
mov
or
push
filds
sub
das
loope
jmp
pop
sub
xlat
jno
or
bound
adc
cmp
aam
out
and
imul
inc
pop
sub
mov
cli
jno
out
inc
imul
adc
int
pushf
aas
xchg
fildll
je
jge
or
test
int
pop
or
pop
lds
in
sbb
sbb
repz
sbb
les
mov
out
aad
insb
repnz
cmpsb
cmp
ljmp
sarl
insl
pushf
shrl
lds
add
es
leave
adc
pop
xor
cmp
leave
jo
jecxz
fxch
fs
mov
dec
and
xlat
push
and
sbb
xchg
push
jb
movl
xor
adc
push
ds
dec
rolb
mov
push
sbb
imul
add
add
icebp
enter
sbbl
adc
mov
push
push
test
gs
ror
push
mov
jne
and
and
pop
scas
outsl
mov
push
jg
cmp
adc
movsb
xchg
jb
or
push
call
push
lea
xchg
inc
mov
lock
shrl
add
cmp
lcall
addr16
test
sub
fmul
cmpsb
imul
sub
adc
cmp
shlb
daa
ror
out
mov
test
xchg
dec
mov
pop
sub
xchg
ror
aam
jg
add
mov
inc
std
int3
icebp
les
xor
jo
jo
hlt
inc
mov
xchg
js
mov
or
call
mov
dec
icebp
std
or
sbb
fsubrp
and
in
inc
rclb
cmp
in
xchg
rorb
arpl
mov
hlt
popf
pop
mov
xchg
insb
data16
adc
adc
xchg
pop
sbb
cmp
mov
push
je
ljmp
aas
sbbb
mov
mov
and
or
test
negl
sbb
sbb
add
jg
mov
arpl
adc
flds
xor
jns
dec
out
add
rcrl
mov
stos
inc
gs
ljmp
mov
ljmp
js
into
or
mov
or
in
jns
cmp
mov
mov
sub
sbb
jbe
pop
sub
shr
mov
test
lcall
pusha
sub
mov
loop
and
xor
inc
add
insl
adc
cli
mov
fwait
test
mov
movsb
pop
js
dec
jns
sub
add
and
adc
adc
mov
sub
and
jp,pn
xor
inc
stos
mov
and
bound
icebp
jg
ja
cmp
mov
dec
jno
inc
in
push
test
adc
or
lahf
sub
iret
pop
cmp
inc
dec
inc
mov
inc
pop
stc
outsl
pushf
or
mov
add
lods
inc
jge
test
push
fs
popf
mov
mov
mov
ja
pop
movsl
aaa
roll
mov
enter
subl
in
loope
xorl
adc
jnp
mov
mov
sub
adc
adc
imul
sbb
pop
add
pop
cmp
data16
insb
sbb
or
aaa
jmp
sti
out
mov
adc
lret
aad
mov
push
xchg
jl
jl
lods
je
or
jne
mov
inc
add
mov
lds
jb
out
out
popa
push
outsl
push
mov
add
inc
mov
fcoms
cwtl
push
out
int
sub
jns
bound
cmp
mov
mov
jmp
dec
mov
pop
ss
out
sbb
aas
ja
pop
gs
in
ss
rolb
scas
data16
shlb
rolb
repz
jp
lds
push
mov
scas
out
hlt
insb
dec
mov
bound
pop
rolb
aam
inc
cmp
icebp
movsb
xor
pop
inc
gs
movsl
psllw
pop
xlat
push
and
pop
arpl
xor
cmp
sti
sbb
adc
cli
addl
and
push
loope
sbb
popa
js
push
stos
sub
enter
insb
xor
or
subl
xchg
out
jg
insl
jecxz
push
pop
arpl
sbb
add
adc
cmp
andl
sbb
std
push
idivb
icebp
test
lods
pop
ja
push
adc
sarl
push
daa
push
shlb
jbe
popl
aam
cwtl
nop
testl
out
pop
sahf
xchg
jb
fcoms
push
rorb
xchg
iret
push
repz
idiv
xchg
in
daa
and
in
mov
sbb
dec
mov
jge
cli
lret
adc
cld
lcall
jmp
cli
adc
xchg
cmpsb
and
push
ds
bound
sbb
mov
divb
ljmp
adc
repnz
mov
out
cmpsl
lcall
leave
adc
push
sub
fucomip
orb
pushw
mov
std
hlt
cmpsl
cmp
inc
shll
inc
xchg
lock
xchg
fwait
adc
insb
xlat
mov
sbb
pusha
and
dec
xor
movq
and
les
aam
sub
pushf
repz
jno,pt
inc
bound
mov
cmpsb
pop
icebp
sub
js
bound
into
mov
imul
mov
cli
lods
xchg
jecxz
test
mov
andb
outsb
outsl
sub
cmc
inc
adc
out
xchg
in
imul
int
inc
inc
movsl
add
inc
jle
add
mov
ljmp
and
sti
orl
mov
jbe
popa
pop
xchg
jmp
sbb
push
or
add
iret
pop
das
lret
mov
sub
iret
xor
jg
call
jmp
ljmp
jg
nop
add
inc
add
loopne
xor
pop
cmp
cmp
mov
jge
dec
cltd
in
xchg
and
xchg
xor
push
xchg
cmc
cld
jge
dec
mov
mov
add
inc
pop
sub
xchg
insl
cmpsl
or
jo
push
dec
rcl
xchg
inc
mov
test
lcall
or
ss
jmp
mov
pop
into
or
cltd
dec
sbb
cmp
jg
loop
into
into
add
push
jbe
push
adc
outsl
ret
js
adc
out
cwtl
push
loopne
test
xor
push
sub
jmp
or
and
pop
sarb
pop
loope
add
pop
push
xchg
loopne
push
xorb
and
hlt
add
mov
pop
push
xor
inc
cli
adc
cmp
pop
movsl
shrb
push
jp
mov
mov
mov
jle
call
sbb
push
lock
xchg
das
mov
and
cmp
sbb
stos
mov
mov
nop
adc
adc
and
fidivs
inc
imul
negl
xor
lcall
sbb
adc
shrb
jno
int
adc
jle
or
mov
fwait
lods
cmpsb
mov
and
or
mov
cmp
stc
aad
imul
push
je
mov
ja
out
or
addr16
stc
inc
adc
pop
inc
ret
sub
adc
in
pop
jbe
cltd
sahf
inc
orb
xor
mov
push
je
pop
fcoml
lock
mov
dec
lahf
andl
cmp
push
movl
addl
mov
test
inc
dec
mov
dec
cmp
fs
pop
adc
dec
into
test
pop
lods
adc
sbb
adc
sub
lret
adc
lock
mov
loope
fwait
pop
movsb
or
daa
adc
mov
int
mov
mov
push
and
or
jnp
sbb
mov
ljmp
pop
mov
loopne
ret
sub
sbb
test
xor
lret
das
sub
cld
enter
sti
insb
loop
pop
loope
mov
xchg
jge
enter
lret
mov
sarl
test
int
mov
sbb
mov
add
push
movsl
ret
xchg
out
mov
dec
mov
adc
jno
jl
daa
xor
mov
ret
out
shll
push
enter
inc
jp
inc
add
mov
mov
fldcw
xor
mov
sbb
mov
inc
jae
cmpl
xchg
bound
mov
es
roll
jne
mov
sbb
fstpt
sub
test
sub
push
popa
jge
mov
fisttpll
addl
lcall
fdivl
or
loopne
pushf
xor
sub
repnz
and
test
lcall
sub
pusha
mov
lods
lret
roll
xchg
dec
mov
fs
mov
mov
test
cmpsb
sbb
xchg
sarb
data16
and
push
xor
je
push
xor
test
or
push
pop
les
call
negl
or
xchg
adcb
sub
out
shlb
out
mov
sbb
add
mov
lock
mov
adc
mov
push
or
mov
mov
xchg
mov
sbb
push
mov
fucomip
mov
push
les
dec
mov
test
jl
mov
fdivrs
and
adc
inc
sbb
dec
f2xm1
addr16
and
popa
scas
sub
inc
pop
pop
mov
icebp
shrb
jecxz
or
mov
mov
inc
sbb
sti
fwait
loop
addr16
cmc
push
pusha
or
test
ret
sub
pushf
push
lods
and
sbb
xchg
xchg
outsb
adc
test
dec
pop
jmp
pusha
ss
popa
xchg
jb
and
xor
dec
or
arpl
loopne
push
cmpl
stos
in
lcall
ficoms
inc
mov
pushf
push
mov
es
inc
std
stc
jmp
clc
repz
dec
or
outsb
lock
sub
sbb
jno
iret
push
jbe
cmc
shll
test
sbb
cwtl
repnz
pinsrw
and
xchg
mov
daa
inc
xchg
shll
and
mov
aas
xor
test
xor
popa
and
sar
mov
in
adc
mov
mov
inc
jmp
add
les
fdivrl
stos
add
imul
or
pop
cmp
pop
jmp
push
in
jl
and
imul
mov
fwait
loop
lds
arpl
fmull
popf
sbb
lret
push
mov
std
mov
lods
push
fisubrs
in
call
jno
pop
cwtl
adc
cli
ljmp
pusha
dec
movsl
scas
cmp
sbb
jp
xor
lcall
xchg
stc
mov
jb
xor
cmpsl
pop
jbe
mov
jmp
mov
dec
jne
cmp
pop
ret
or
jo
inc
test
dec
data16
jp
in
inc
sahf
pop
sahf
and
cltd
loop
jbe
popl
out
jbe
stos
pop
inc
or
out
lods
mov
dec
dec
repnz
sub
pop
xor
data16
shrb
pop
inc
mov
adc
push
mov
iret
ljmp
cmp
ss
mov
sub
addr16
pop
xor
xchg
push
loop
xor
mov
inc
jb
pusha
mov
mov
and
lret
into
push
add
sbb
test
mov
cmp
or
les
xchg
leave
test
cli
mov
dec
nop
sub
enter
pop
xchg
aam
fisubrs
mov
add
ret
dec
jo
pop
rorl
insb
pusha
jp
adc
data16
cmpsl
or
dec
inc
les
sbb
scas
aad
inc
and
inc
push
icebp
xor
mov
std
adc
arpl
pop
xchg
outsl
nop
scas
mov
cmp
jbe
fildl
dec
clc
test
inc
xchg
sbb
out
and
inc
dec
pop
add
test
shrb
mov
mov
dec
sbb
jnp
sub
rolb
push
lods
push
jge
pop
push
xor
insl
scas
mov
mov
adc
push
js
shrb
push
pop
mov
stc
mov
pop
out
mov
mov
cmp
rcrl
divb
jo
jne
divl
push
pop
stos
addr16
push
jg
mov
xor
loop
add
push
stos
filds
pusha
repnz
xlat
jmp
in
subl
sti
addl
in
fdivrs
repz
das
mov
aad
add
jne
pushf
xchg
lods
adc
mov
loopne
repz
orl
out
mov
lret
xor
imul
cld
arpl
sub
cmp
jl
sbb
cmp
enter
mov
stc
notl
push
jg
insl
push
stos
push
repnz
xchg
repz
push
aas
adc
xchg
out
jp
int
aad
mov
adcb
leave
leave
out
pushf
adc
movsb
xchg
ret
loope
push
stos
inc
ljmp
cmp
lods
fistpl
mov
cmpsb
add
loop
inc
pop
jl
xor
movsl
and
dec
les
pop
into
xchg
and
mov
lret
xlat
js
adc
scas
sti
lods
cmpb
aam
pusha
push
sahf
rolb
cmc
pop
sahf
fnsave
pop
cltd
into
mov
jno
pop
xchg
push
dec
int
adc
jne
and
loopne
jo
mov
repnz
push
shrl
dec
adc
imull
jb
dec
aaa
lds
pop
jge
xchg
lret
mov
inc
mov
push
shrb
sbb
repz
gs
inc
ret
and
jae
sbb
dec
push
push
cmpb
lods
mov
and
int
sub
popf
testb
es
cmpb
fdivrs
mov
sti
xchg
test
mov
push
test
add
add
xchg
shll
and
mov
aas
ret
push
xor
xchg
sub
push
enter
aas
in
adc
sahf
pushf
cmp
push
or
sub
dec
movsl
loop
out
loopne
push
cmc
stos
jle
pop
stc
xor
adc
repnz
pop
cmpsb
dec
hlt
orb
push
js
cmp
mov
rolb
aas
xchg
stc
pop
add
cwtl
aad
sbb
mov
loope
xlat
mov
mov
icebp
dec
adc
pop
cmpsb
and
xlat
add
pushl
pop
pushf
dec
fsubs
imul
pushl
ss
fsubs
xor
jns
cli
cmp
clc
pop
sub
lods
dec
in
sbb
mov
icebp
scas
nop
jge
add
sti
mov
add
std
cltd
sbb
rol
cmp
cwtl
int
jg
mov
enter
fistl
daa
or
push
push
sub
xor
in
iret
icebp
fistpll
cli
push
aaa
sub
sar
adc
mov
popf
loop
adc
add
xor
movsl
pop
and
xchg
and
xchg
test
jnp
mov
mov
mov
xchg
sub
pop
mov
popf
sbb
cli
cmpsl
or
cmpsb
pushf
jmp
pop
scas
cmp
mov
sbb
and
mov
shrl
dec
sarl
adc
scas
imul
inc
mov
test
jae
xor
xchg
ficomps
shl
sbb
xor
popa
cs
and
inc
mov
call
mov
fisubrs
clc
xchg
test
dec
loopne
popa
jecxz
xchg
add
es
cmp
pop
inc
imul
mov
jge
and
shl
es
loopne
loop
xchg
das
pop
pop
movsl
pop
lret
xchg
sbb
aad
aas
sub
cmc
cld
adc
daa
mov
in
jns
push
rolb
or
xchg
jmp
xchg
test
movsb
push
pop
dec
mov
push
xor
add
adc
ljmp
cld
mov
es
jp
stc
mov
outsb
and
stos
adc
mov
xchg
dec
dec
dec
dec
add
loopne
insl
stos
add
pop
xor
pop
or
je
mov
or
fwait
out
cmpsb
inc
lds
out
lcall
andb
adc
jno
imul
pop
mov
int3
lock
idiv
inc
jo
dec
stc
inc
push
push
pop
test
jo
lret
inc
add
mov
cmp
xor
cltd
jb
lock
nop
inc
xchg
ret
pop
out
int
ret
fists
enter
out
mov
pushf
negl
call
xchg
imul
mov
and
int3
decl
xor
fisubrl
dec
fisubrl
mov
inc
cld
aam
push
sbb
xchg
sbb
jmp
or
or
dec
fnstsw
sbb
xor
mov
leave
jmp
pop
icebp
pop
xlat
imul
int3
outsl
push
lahf
dec
in
hlt
mov
aad
and
adc
push
js
sahf
mov
jecxz
lock
xor
je
cli
mov
clc
movsl
jbe
fwait
sub
in
gs
add
cmp
and
xchg
test
nop
fisubl
mov
sub
mov
call
mov
lods
pop
cmp
pop
lods
dec
addl
loope
adc
sbb
mov
add
pop
jae
inc
ds
jns
aad
mov
push
and
pop
subb
fidivl
insb
inc
xchg
jge
adc
sbb
hlt
mov
lahf
push
mov
xor
pop
adc
xchg
adc
xchg
add
int
dec
mov
mov
dec
mov
imul
fiadds
mov
jnp
loopne
jo
xchg
cld
mov
insb
adc
sarl
pminub
xor
int3
testl
or
lcall
lods
cmp
stos
mov
sub
adc
pop
inc
inc
ljmp
xor
ss
aam
aas
mov
ds
push
add
jle
out
imul
fsubl
insb
dec
push
mov
xlat
cli
and
ds
stc
sbb
daa
aam
inc
loope
subb
mov
addr16
mov
je
dec
js
pop
and
jmp
ljmp
lea
pop
xor
imul
pop
adc
xchg
decb
push
dec
push
mov
jmp
cwtl
clc
pop
sti
es
sub
les
popa
add
fwait
jle
call
mov
cwtl
adc
add
or
add
int
pop
loop
out
outsb
je
imul
push
addb
sbb
inc
das
inc
mov
jl
testb
aaa
adc
inc
mov
pop
mov
sbb
sub
cmpsl
inc
mov
jns
pushf
mov
xor
and
lahf
testl
nop
mov
dec
cmpb
popa
lods
outsb
and
out
test
in
add
push
mov
repnz
cltd
popa
sbb
movsb
call
xor
inc
stos
mov
xchg
jnp
mov
sbb
orl
test
pop
cltd
std
fucomi
mov
out
push
cli
stc
aaa
jp
add
pop
and
push
insl
add
sub
sub
repz
mov
adc
loop
cmp
push
mov
fwait
xchg
scas
push
test
int
cmp
int
mov
push
push
lahf
lcall
pushf
or
stos
mov
push
adc
add
flds
sub
xchg
enter
cmp
sub
push
dec
adc
pop
lahf
pop
hlt
aad
mov
data16
ss
out
mov
loope,pn
sbb
mov
lret
and
ljmp
out
int
sbb
sub
push
dec
fs
sbb
imul
out
dec
mov
pop
arpl
ror
testb
rcll
pop
push
jmp
adc
fcmovnu
adc
dec
push
push
and
adcl
movsl
or
rcrl
jns
jg
xor
cltd
sbb
mov
sti
aas
xchg
inc
lock
cmp
sub
movsl
adc
mov
loopne
inc
int
pop
push
and
adc
mov
lcall
movsb
jno
jmp
repnz
sbb
cmpsl
xchg
pop
iret
cmp
out
fnstcw
fimuls
outsb
lds
out
mov
add
xchg
dec
mov
adc
test
xchg
xor
xchg
js
sbb
cs
bound
int
divl
dec
dec
adc
xchg
loopne
iret
dec
add
repz
pop
or
cltd
mov
xor
inc
sets
ja
cli
rcll
dec
fdivp
cli
out
sbb
jns
lods
cmpsb
mov
or
lea
xchg
pop
xor
jb
push
arpl
or
out
mov
test
js
pop
das
aas
fisubl
aaa
push
xor
pop
jmp
add
mov
test
insl
shrl
stc
hlt
fldt
fisubs
push
or
add
sub
ss
hlt
clc
fstl
mov
cmc
mov
pop
and
jp
cmpsb
in
adc
xchg
jge
enter
shrb
xchg
fs
sbb
loope
jg
add
jne
std
xchg
pushw
nop
xor
mov
inc
mov
rclb
lds
movsl
aam
xor
ja
lods
pop
mov
mov
daa
hlt
mov
pop
ret
add
inc
mov
mov
shl
dec
scas
pop
in
or
mov
shlb
mov
adcl
sarl
xchg
pop
fnstcw
lea
cmp
arpl
sub
arpl
mov
xor
push
repz
xor
cmpsl
pop
cmp
mov
aaa
mov
nop
mov
push
inc
jl
cmp
popf
sub
in
ret
xchg
es
or
inc
add
vmaxps
outsl
pop
fisubl
cld
sub
call
outsl
jne
leave
arpl
cmpsb
dec
mov
popa
fldln2
fwait
dec
pop
jnp
fdivs
sub
js
and
cld
flds
jo
insb
loopne
test
cmpsb
in
cltd
data16
inc
or
jnp
add
xor
xchg
cmp
dec
mov
jmp
fwait
sbb
jge
add
xor
icebp
loop
xchg
clc
popf
xchg
mov
imull
nop
jae
lods
xor
imul
out
call
mov
mov
popa
cwtl
cmpsl
pop
loope
lods
dec
sub
imul
jmp
out
mov
cmp
pop
les
into
je
lcall
xchg
push
dec
movsb
incb
test
mov
ja
cld
or
cld
sar
jp
dec
rcll
mov
repnz
jo
fwait
jno
insb
dec
xchg
mov
jmp
cmp
test
inc
fs
jecxz
psubusw
cmp
mov
jbe
cmp
push
pop
les
addr16
jecxz
push
test
cli
jae
cmc
cmpsb
lods
push
imul
mov
jbe
push
jle
orb
pop
sahf
fnsave
cmp
push
rol
mov
pop
or
push
or
xchg
iret
imul
mov
std
dec
insb
imul
test
sarl
call
mul
add
sub
or
cli
rorl
hlt
stos
jno
push
inc
mov
shll
or
ficomps
inc
mov
inc
sbb
inc
js
xor
mov
sub
cld
popa
jmp
adc
out
pusha
sub
inc
mov
xor
lret
imul
cs
sub
add
or
push
insl
jle
cmovno
outsl
into
inc
repnz
lods
pop
mov
pop
or
xchg
aad
push
lods
dec
pop
dec
stos
push
add
push
loop
aaa
mov
loope
adc
xchg
into
cmp
or
add
in
mov
cmp
loop
aad
ja
ss
lahf
push
xor
shrb
xlat
xchg
jp
stos
push
or
arpl
inc
cmp
aas
in
or
jmp
cmp
jl
ljmp
notb
sub
pop
hlt
pop
add
fwait
sarb
inc
xchg
xor
jno
mov
cs
and
iret
lcall
or
or
and
mov
push
insl
in
lods
test
xlat
lahf
sub
push
jae
and
cmpsl
lcall
push
sub
nop
into
clc
xchg
cwtl
fnstcw
sub
cltd
pop
mov
sbb
lret
jecxz
xchg
push
out
adc
mov
xor
int
in
shl
inc
adcl
mov
xor
addr16
stc
seta
lret
lea
lret
add
arpl
dec
mov
data16
mov
xor
xor
mov
sub
adc
dec
fisttpl
sbb
inc
mov
int3
pop
push
enter
mov
xorb
xor
push
add
loope
xchg
pop
rcrl
xchg
stos
aaa
shr
out
fnstcw
adc
stos
stc
es
push
pop
icebp
gs
push
mov
inc
jmp
pop
push
cltd
test
adc
fsubrp
imul
scas
jno
xchg
inc
pop
call
cmp
dec
repnz
arpl
ljmp
pop
or
dec
test
scas
and
das
lcall
add
push
addb
jne
dec
dec
xchg
xor
xchg
int3
ljmp
icebp
jl
xor
rclb
push
cli
roll
mov
push
push
call
jb
mov
add
icebp
leave
cs
mov
cmp
mov
bound
and
push
or
pop
jl
rcrb
fdivp
xchg
icebp
cmp
xlat
mov
dec
jnp
in
pop
cmpsl
xchg
stc
pop
cwtl
sub
dec
imul
or
pop
push
mov
or
scas
mov
int3
jns
mov
std
adc
or
outsb
jns
jg
loope
xor
push
sbb
push
in
ljmp
xchg
aaa
jg
pushf
pop
shl
icebp
lret
outsl
outsb
mov
out
xchg
cmp
pop
push
aaa
xlat
mov
mov
inc
rcrl
stos
orb
push
pop
jne
std
out
mov
repz
in
xor
adc
inc
bound
adc
rcrb
mov
mov
sbb
cmpsb
out
pop
add
mov
rorl
dec
incl
shlb
or
push
addl
add
fdivs
in
add
pop
rclb
and
and
or
jle
push
icebp
sub
test
jl
lea
cld
gs
and
je
and
sar
or
cmp
jno
add
lret
push
ret
pop
loope
mov
out
and
scas
mov
sub
mov
out
cmp
lea
mov
pushf
mov
cmp
repz
jbe
int
xchg
scas
add
xchg
imul
add
jge
sbb
lods
dec
xchg
test
sub
or
loopne
test
popa
cmp
lcall
mov
jo
inc
leave
js,pn
mov
cmp
fisubl
dec
insl
pop
adc
or
and
test
pop
mov
fisttpl
fmuls
and
pop
mov
fimull
loop
mov
and
scas
cs
and
sbb
pop
sti
mov
loop
mov
insl
mov
push
pop
mov
mov
push
add
cmp
cwtl
inc
test
sbb
jge
mov
sarl
stos
dec
ja
mov
cmp
adc
mov
rol
xchg
cmp
pop
sbbl
cmp
iret
das
sbb
mov
call
cmp
mov
pop
mov
leave
xchg
sti
pop
inc
jecxz
loope
shll
shl
stc
jne
jp
pop
or
mov
addl
xchg
rcl
pop
inc
sahf
adc
jg
add
jb
mov
dec
inc
add
in
and
loope
dec
imul
dec
inc
mov
and
loopne
das
pop
out
mov
icebp
mov
pop
cmp
xchg
sbb
jmp
adc
bt
sbb
xchg
inc
outsl
movsb
call
in
dec
push
shlb
mov
xor
sbb
out
pop
loope
addl
jl
dec
enter
mov
jle
and
or
jo
mov
push
mov
stos
lods
pop
mov
sub
in
xchg
lds
or
int
outsl
xchg
cli
push
scas
mov
mov
xchg
pop
rcrl
lret
pop
pusha
add
imul
dec
jge
mov
cltd
mov
stos
scas
ret
mov
es
hlt
data16
xchg
add
shlb
xchg
xchg
cmpb
pop
test
sbb
mov
and
ss
mov
call
push
jge
xchg
inc
sbb
pop
mov
lcall
ljmp
mov
testl
inc
arpl
add
dec
sub
imul
mov
or
mov
sti
lret
cmp
outsl
das
jle
mov
les
pop
in
pushf
xor
xor
cld
sbb
iret
sahf
cwtl
leave
into
leave
push
and
sahf
mov
xchg
mov
jns
enter
ja
xor
fisubs
and
loop
cwtl
xor
mov
adc
xchg
bound
lahf
jae
and
repz
wbinvd
loopne
into
cmc
in
jg
mov
mov
xchg
sbb
jge
mov
mov
imul
jg
popa
cmp
fisubrs
adc
xchg
dec
xor
das
repz
popf
scas
enter
cmpsl
ficoms
pop
add
dec
push
in
dec
loop
in
les
lods
lock
cld
imul
xor
sbbb
mov
icebp
sbb
jmp
in
mov
out
or
gs
sub
mov
push
hlt
xor
push
add
sbb
inc
sti
inc
aad
xor
into
dec
clc
cs
xchg
push
mov
or
in
add
fisubrl
add
ret
lahf
mov
adcl
in
mov
xchg
in
mov
push
xor
pushf
rdmsr
aad
push
push
push
popf
insb
idiv
loope
ds
fidivrl
adc
into
mov
je
movsl
sub
adc
sbb
sbbl
out
data16
add
into
push
les
sub
cltd
lods
stos
orl
pop
xchg
call
inc
lea
mov
imul
cmp
mov
adcl
cmp
mov
jne
fidivl
mul
fdivs
daa
lahf
push
xchg
add
inc
outsb
xchg
mov
jp
add
and
int
pop
xor
mov
outsb
inc
dec
test
adc
mov
std
jecxz
movsb
dec
mov
iret
lcall
sbb
mov
out
sub
fsubr
nop
loopne
xchg
lock
lcall
sbb
cmp
pop
xchg
xchg
adc
and
or
mov
push
cli
mov
or
mov
inc
sbbb
faddl
aaa
pusha
pop
lret
aam
insl
push
dec
repz
jle
mov
out
pop
jge
outsb
or
dec
lcall
mov
das
push
aaa
xchg
dec
pushf
popf
cs
xchg
cld
pop
cmp
inc
ret
and
lahf
inc
mov
push
lods
xlat
xor
xchg
xor
add
push
mov
int
sub
push
je
xor
and
jnp
inc
mov
lret
sub
out
pop
cmp
loop
js
int
and
inc
les
aam
dec
or
cmp
fstl
into
xor
pop
into
mov
jp
ljmp
fisttpl
add
mov
or
ljmp
lods
add
mov
xlat
cmp
jp
dec
xchg
push
rclb
clc
test
mov
clc
dec
sub
xchg
inc
pop
jb
dec
jl
add
xchg
xor
inc
jge
test
and
or
xchg
lret
outsl
js
or
test
in
popa
jb
or
pop
sbbb
mov
jmp
mov
int3
daa
lods
mov
pop
addr16
cltd
adc
cltd
pop
adc
pop
imul
out
call
mov
xchg
mov
imul
call
pop
sub
xchg
cmp
js
jne
xor
pop
cmp
inc
in
das
jns
push
call
jne
xchg
rcr
push
loope
cltd
daa
jp
pop
pop
adc
add
int
lock
aam
ljmp
sbb
loope
mov
add
adc
cmp
ucomiss
stos
adc
inc
out
aad
jmp
stc
popa
or
int3
jmp
repz
in
pop
push
xor
cmpsb
addl
or
out
scas
and
xor
jb
loope
xorl
ret
loop
movsl
adc
adc
std
jg
daa
jle
fwait
cld
ss
xor
xorl
sbb
movsb
adc
xchg
mov
imul
push
mov
add
leave
lds
sti
in
in
mov
xor
sub
xor
pushf
pusha
fs
sub
icebp
repz
inc
aas
pop
stos
fisttps
mov
cmp
dec
enter
nop
aam
mov
out
sub
sub
xchg
shl
xor
jo
jns
mov
sahf
mov
xchg
dec
js
jae
mov
dec
imul
xor
aaa
sarl
xchg
sbb
adc
fists
jl
sub
cmc
jb
lds
sub
jmp
ljmp
ja
pop
sbb
sub
sub
or
test
cmp
mov
mov
inc
or
fwait
xadd
sub
fs
xor
pop
fldl
pop
lea
mov
nop
or
repz
mov
aam
fistl
cmp
inc
push
sbb
gs
lds
inc
pop
push
in
jbe
xlat
sub
mov
xor
push
mov
pop
and
sbb
pop
jmp
cmp
loop
jle
pop
repz
pop
ret
inc
leave
xchg
addr16
nop
movsb
ss
pop
mov
xchg
nop
xchg
roll
or
sbb
pusha
mov
push
inc
mov
inc
push
mov
cmp
out
ret
subl
test
popa
xor
std
stc
push
dec
push
push
call
in
pop
repnz
dec
lods
mov
or
fs
lret
mov
push
decl
rorb
cmp
test
sbb
mov
std
dec
inc
pop
adc
sub
iret
cmp
push
or
insb
mov
jg
mov
mov
xor
xchg
imul
mov
cmp
stc
test
xlat
xor
jmp
mov
out
xor
mov
in
loope
das
push
ret
xlat
movsbl
xchg
insb
jne
sub
inc
lcall
ljmp
loop
cmc
inc
cmpsb
jl
add
daa
jmp
sbb
jno
mov
push
movsl
jp
cmpsb
add
mov
fdivrs
in
aad
cmp
push
sahf
ds
mov
into
cld
lret
sbb
push
sub
test
das
test
cltd
sbb
dec
xor
notl
jge
add
xor
ja
inc
repnz
sbb
cmpsl
jo
fwait
sahf
sub
xor
ss
cmp
mov
sub
cltd
gs
xor
test
jne
cmp
dec
inc
mov
dec
stos
and
mov
xor
mov
lea
mov
or
push
cmp
push
fwait
inc
sbb
dec
cli
pop
sbb
or
push
rorb
push
insl
loope
jo
aaa
dec
cmpsl
outsb
push
add
sub
xchg
test
jmp
pop
xor
jecxz
pop
in
je
jg
in
clc
cmp
xchg
push
mov
pop
int3
cmpsb
ret
aad
cmp
jns
cmp
cmpsl
fnstenv
aad
testl
inc
mov
cmp
add
pop
xchg
lea
ds
add
xor
mov
xor
mov
or
shll
fs
rcrl
pop
test
lcall
cmp
popf
pop
cmp
add
insl
repz
stos
scas
mov
movntq
shl
adc
testb
inc
daa
mov
jle
adc
imul
sbb
in
test
xor
cmp
outsb
dec
jbe
mov
jmp
in
pushl
ret
jo
cmp
mov
jg
adc
xor
sub
push
shl
mov
repz
fs
in
mov
jae
stc
jnp
sub
leave
out
push
mov
test
fwait
add
jo
lret
std
leave
dec
iret
add
xor
push
lods
leave
mov
insb
out
or
jle
rorl
hlt
push
adc
int3
shl
push
fwait
push
aam
push
add
and
mov
ss
pop
insb
push
popa
sub
movsl
and
adc
je
xor
lret
shrl
push
gs
mov
test
add
out
mov
outsl
outsl
mov
or
clc
and
adc
fs
add
mov
das
pop
aas
lods
cmp
push
fs
clc
jle
or
shlb
lret
add
sbb
cld
cmp
jge
mov
mov
inc
lock
mov
mov
push
adc
fiaddl
cmp
xchg
dec
sahf
test
cltd
stc
mov
out
daa
xchg
enter
push
dec
das
aad
adc
push
sbb
jae
fisttpl
add
inc
imull
loop
sub
and
fimull
add
mov
push
sub
pop
cli
jle
int
lock
rorb
cmp
test
in
fwait
rcl
insl
add
loope
daa
xchg
ret
xchg
cmp
arpl
push
push
sbb
lds
not
inc
sbb
cs
iret
sbb
jnp
mov
push
dec
mov
rol
rcrb
jecxz
cmc
test
scas
mov
cli
test
test
mov
pop
shr
and
mov
xor
jp
mov
and
jns
in
cwtl
inc
push
stc
divps
push
lret
movsl
jnp
pop
xchg
call
clc
mov
movsl
and
and
mov
xchg
mov
aas
push
pop
cld
cmpsb
cwtl
xor
rorb
popa
mov
adc
fldt
movsl
inc
testl
test
xlat
add
cmpsb
fisttpll
stos
cmpsb
mov
cli
cld
xor
sub
mov
addr16
xor
aad
ljmp
sub
jb
cmp
out
testl
dec
push
call
test
or
dec
dec
les
mov
sbb
pop
mov
dec
notl
loop
push
dec
rcr
mov
pop
in
imul
iret
cmc
xchg
push
adc
lahf
jo
repnz
dec
cmp
pop
in
ret
int
sbb
sbb
mov
idivl
lods
mov
fistps
fucom
mov
imulb
mov
int3
je
rcrl
sbb
mov
test
inc
xchg
sub
xchg
jge
in
sub
aaa
sub
jns
pop
scas
or
nop
pop
adc
dec
jle
rcr
dec
ljmp
stos
mov
stc
shlb
aad
pop
cmpsb
fwait
ljmp
fdiv
fldcw
jl
push
hlt
lds
mov
xchg
and
loope
sub
cmp
out
jp
push
mov
gs
gs
jmp
testb
mov
mov
mov
aam
mov
adc
mov
and
xor
cmpsb
mov
cmpsl
sub
mov
in
push
insb
ds
loop
mov
sub
fsub
adc
mov
xchg
sbb
mov
repnz
mov
xchg
aaa
and
repnz
sbb
pop
jmp
in
adc
cmpb
or
xchg
xchg
and
sbb
dec
dec
add
call
push
adc
movhps
or
and
pop
adc
or
and
sbb
pop
divl
daa
insl
sbb
jbe
in
xchg
loopne
mov
pop
mov
cmpl
and
lock
jg
lds
aas
mov
fadds
insl
scas
mov
fninit
jge
scas
scas
mov
lods
cmp
fwait
xchg
pop
sahf
or
push
and
pop
and
pop
push
stc
jl
push
xchg
lods
push
cltd
adc
test
loope
fldenv
lock
cmp
ljmp
std
out
loope
or
add
shll
mov
dec
sub
movsb
into
loopne
call
add
jecxz
ss
pop
pop
loopne
push
mov
cmc
add
inc
fcoml
mov
jns
test
sub
test
xchg
inc
cmp
pop
shlb
ret
lcall
out
fsubl
bound
sbb
add
lret
mov
mov
loop
add
pop
adc
xchg
xor
add
push
loopne
add
or
cmpsb
mov
mov
and
dec
pop
cmp
repnz
sbb
add
fsts
daa
cwtl
jbe
add
into
push
push
arpl
ljmp
loop
jge
jle
dec
lcall
xor
jmp
dec
addr16
mov
sbb
sti
ljmp
aad
and
and
dec
lcall
test
dec
mov
lock
in
lods
dec
lahf
push
cmp
pop
dec
inc
xchg
dec
test
jg
adc
fcoml
testl
jo
jbe
pushf
and
lret
aam
mov
sub
dec
dec
pop
sti
outsl
fstps
sbb
cwtl
clc
mov
dec
pop
test
push
shlb
ja
ret
lcall
xchg
in
out
inc
les
shrb
or
andb
pop
cmpl
mov
xchg
dec
dec
shll
xchg
xchg
lea
fmuls
or
or
mov
pop
cmp
xchg
mov
out
pop
xchg
mov
xor
test
imul
nop
decl
ja
mov
mov
out
loope
add
mov
mov
int
or
loop
in
loope
lcall
push
enter
push
mov
neg
pop
add
mov
and
lret
dec
mov
push
stos
mov
rol
sbb
mov
es
outsl
lea
cmp
test
and
hlt
stc
clc
xor
push
pop
inc
outsl
ja
stos
jg
in
or
pop
cmpl
sbb
sarb
jmp
inc
lock
pop
andl
imull
mov
xor
cmpsb
nop
adc
bound
mov
mov
cmp
in
mov
and
mov
push
test
pop
cmc
dec
push
jge
xchg
clc
cmc
lret
inc
int
lcall
push
mov
inc
hlt
xor
xor
lea
xor
cmp
add
cld
push
push
js
pop
clc
mov
push
dec
and
adc
jle
dec
add
out
dec
ds
arpl
xor
pop
fs
stos
push
push
loope
hlt
sbb
imul
push
push
push
movsb
dec
arpl
add
and
push
dec
enter
mov
lcall
cmp
sbbl
leave
js
repz
adcb
and
fcomi
ds
push
inc
mov
add
outsl
push
xchg
popa
sbb
iret
mov
xor
dec
scas
pushf
das
je
sarb
sbb
daa
test
or
outsl
adc
call
mov
lret
mov
dec
andb
fyl2x
push
adc
and
popf
mov
inc
sbbl
inc
insl
add
sahf
mov
fdivr
pop
mov
xchg
jno
testl
mov
shlb
popf
jae
mov
pop
js
insb
loop
mov
mov
add
idivb
add
lret
mov
xchg
aam
dec
jecxz
sub
int3
add
cmpsb
filds
cmp
xchg
or
pusha
adc
pop
popa
jg
or
jmp
ret
mov
push
cmpsl
push
fstpl
test
stos
lds
pop
outsb
push
jb
aaa
ja
cmc
cmpl
es
inc
jecxz
jge
xchg
cmpsl
xchg
mov
sahf
sub
test
or
mov
dec
cwtl
in
xchg
test
push
xchg
xchg
testb
mov
cmp
pop
xor
pop
jo
cmpsb
fisubs
popa
cmp
dec
cs
scas
out
push
in
mov
mov
cld
push
hlt
pop
aad
scas
xlat
shll
and
int
mov
pop
movsb
cmp
dec
and
fnstcw
sub
ds
push
fsts
bswap
jno
clc
in
cmpsb
pop
jnp
sbb
pop
inc
orb
ret
mov
xchg
or
cmp
xchg
ret
lea
rcr
std
sub
mov
mov
sbb
pop
out
addl
sub
addb
mov
or
push
xchg
mov
mov
mov
fdivrl
pop
and
add
jnp
push
andl
ss
cmc
inc
xor
dec
or
aas
nop
jecxz
insl
fmul
mov
ljmp
mov
pop
mov
test
lret
cmp
sbbb
test
mov
shl
push
adcb
mov
loope
cmp
ds
mov
imul
cmp
add
fbstp
jno
push
mov
movsl
ret
xchg
repnz
int
cltd
shll
loop
mov
inc
nop
loope
jno
jne
lahf
icebp
jmp
fwait
dec
aas
enter
or
mov
stc
imul
jl
dec
xchg
fsubrs
popf
stos
clc
aam
and
pop
xchg
jno
pop
int
jnp
push
mov
fwait
mov
pop
jg
fcoml
fwait
rorl
cmp
xchg
cmp
test
insb
das
cmp
addl
add
addr16
les
inc
cmp
push
mov
into
xlat
stc
fstpl
stc
aaa
cmp
mov
mov
pop
negb
inc
sub
and
mov
pop
inc
jne
jb
adc
imul
loope
pop
bound
out
pop
mov
aad
mov
jp
cmp
fsubrs
and
pop
in
jo
mov
js
push
sub
xchg
into
dec
jb
iret
outsb
testl
cwtl
push
scas
es
sti
imul
jp
mov
lret
add
xor
push
aas
mov
ret
icebp
stos
mov
popa
mov
sbb
xrelease
shlb
xor
iret
xchg
mov
cmp
les
out
mov
xchg
pushf
mov
loopne
push
cmp
lods
aad
dec
sbb
hlt
xchg
pop
push
jecxz
xor
outsb
jo
jae
mov
pop
dec
movsl
pop
js
insb
cld
pop
or
sub
jmp
je
ficoml
nop
scas
pop
test
xor
test
pop
sbb
xor
pop
in
mov
sbb
hlt
insb
xor
mov
fildll
insb
or
mov
jnp
stos
push
push
inc
jp
stc
push
lahf
ror
call
aaa
scas
hlt
mov
jecxz
sub
cmp
daa
and
jne
test
mov
ret
rclb
cmpsl
pop
lods
scas
dec
les
stos
das
fdivrp
mov
xchg
sbb
mov
mov
addr16
adc
int3
xorb
int
cmp
adc
and
cmpsb
fstps
aad
lods
rolb
and
nop
imul
xchg
je
incb
and
test
fiaddl
orb
push
xor
mov
xchg
cmp
andb
sbb
test
test
bound
and
jns
clc
jbe
divb
dec
jp
add
adc
imul
je
jge
dec
hlt
dec
ljmp
adc
jne
sub
call
aaa
imul
cmpsl
push
int3
lds
add
out
cmc
lret
dec
cwtl
out
lret
das
adc
pop
and
rclb
xor
push
data16
mov
scas
cld
sub
mov
inc
popa
insl
inc
pop
in
in
xchg
adc
jae
icebp
push
fildll
iret
lcall
or
add
jne
in
adc
ja
jmp
inc
shlb
lock
les
push
add
cltd
and
imul
adc
lahf
stos
fwait
jge
enter
jae
xor
sub
popa
das
in
jne
imul
lahf
push
sub
adc
xchg
pop
mov
das
lods
dec
inc
inc
dec
int3
sbb
fs
subb
test
jns
cmpl
je
xchg
out
outsl
leave
adc
iret
push
adc
lock
movsb
fsubrl
mov
mov
jmp
jecxz
enter
jge
testb
rorl
pop
or
xchg
add
das
xchg
dec
or
mov
fwait
cwtl
sbb
icebp
mov
sti
xor
mov
or
jmp
add
pusha
lock
mov
push
lods
adc
jnp
in
jp
stos
push
sub
cltd
mov
pop
inc
push
adc
test
rcll
jb
add
cltd
mov
les
push
jg
xchg
adc
jno
lods
pop
movsl
jnp
fnstenv
mov
out
xor
add
sar
push
push
adc
mov
pop
ljmp
ret
dec
add
add
sub
lcall
ret
mov
sar
sarl
push
and
js
and
je
loope
ffree
adc
stos
or
in
or
stc
push
or
test
push
sbb
imul
movsb
aad
repz
add
cltd
push
test
mov
push
sbbb
lds
adc
outsb
cmp
lret
cli
inc
into
jnp
xlat
dec
test
mov
sub
loop
fildl
filds
pushf
dec
mov
pop
add
faddl
mov
insb
out
js
lock
cmpsb
push
xor
lods
cmp
dec
dec
aaa
xchg
xchg
mov
or
mov
stos
clc
das
push
addb
pop
mov
push
sbb
aas
mov
bound
mov
movsl
in
scas
insl
out
add
subl
lods
arpl
sub
cmp
add
lahf
sub
subb
mov
jns
inc
arpl
lcall
xchg
jo
adc
mov
fimuls
aas
lods
ror
rcr
add
sub
sbb
push
push
fs
mov
xchg
cmpsb
fmuls
into
mov
std
pop
jae
jmp
nop
flds
insb
out
iretw
sub
sbb
lcall
xchg
inc
cs
sti
push
repnz
stc
pop
ror
and
add
cmp
pop
sub
cmc
orb
sahf
lret
xchg
test
sub
rorb
cli
shr
pop
cmp
push
sub
cmp
lret
mov
and
insl
inc
lea
rcr
dec
jno
test
and
inc
xor
hlt
dec
mov
enter
leave
jae
cmpsb
jno
fs
jle
push
es
inc
sarb
stos
fldcw
lds
outsl
xchg
inc
mov
aas
popf
sbb
or
sbb
sbb
sub
cmp
addr16
add
dec
idivl
cmp
cwtl
pop
out
sbb
cwtl
shrb
mov
xchg
aas
fsubrs
enter
cmc
sbb
cltd
push
out
xorl
dec
and
fldl
out
std
arpl
addr16
dec
mov
jl
mov
ss
add
imull
popf
shll
jbe
loopne
mov
int
push
sbb
adcb
mov
fimuls
push
testl
pop
ds
lea
icebp
sahf
test
mov
ds
mov
les
dec
jle
or
sbb
xchg
or
loope
movsl
insl
popf
xchg
add
popa
add
add
jmp
fmuls
aam
and
xchg
mov
jge
pop
inc
or
dec
fiaddl
mov
xchg
add
popf
inc
xor
dec
in
sbb
andb
pop
sbb
jns
push
push
test
fsub
fmull
jb
mov
bswap
sbb
mov
stos
push
je
arpl
sub
ds
lahf
imul
in
mov
xorb
daa
cmovne
enter
ss
cmp
hlt
int3
loop
xlat
jl
test
pusha
sub
lret
mov
lret
lock
clc
dec
dec
mov
sbb
xchg
pop
xchg
scas
add
enter
lods
popa
sub
movsb
adc
pop
stos
aad
fdivl
fisttpl
in
push
or
mov
outsb
repz
bound
sub
stos
fisttps
add
xchg
pop
jge
inc
sbb
movmskps
inc
ja
sub
mov
mov
dec
cmc
pop
clc
lcall
cmc
negb
cmp
es
clc
sbb
adc
xor
insb
frstor
movsl
mov
mov
stos
lods
inc
push
fistps
lods
rcrl
jge
jmp
jnp
lock
cmpsb
dec
lea
nop
dec
nop
mov
outsb
sbb
pushf
xlat
mov
iret
cmp
adc
stos
in
in
push
cmp
adc
aam
push
fidivl
test
adc
cmp
stos
les
out
fdivl
adc
dec
pop
ds
sub
out
push
movsl
pop
mov
test
ss
pop
loop
pusha
pop
shll
push
xchg
das
in
add
movsl
jl
stc
xchg
sbbb
cld
mov
xchg
pop
dec
shlb
rcl
lea
sbb
lahf
and
jbe
test
ret
outsl
dec
pushf
mov
jp
fadds
xchg
stos
out
add
test
mov
sbb
adc
mov
xor
push
mov
rorl
stc
mov
loope
jne
loop
mov
mov
jle
mov
mov
xor
je
nop
jno
xor
test
dec
xor
int
enter
idiv
mov
cmp
and
cmp
outsw
mov
sub
xlat
jp
cmpsb
jecxz
xor
subb
add
in
add
in
das
sahf
jbe
cmovnp
adc
imul
sub
push
xchg
js
push
adcb
scas
popa
pusha
mov
dec
cli
or
push
out
dec
sti
push
jmp
jp
mov
es
dec
arpl
subl
jge
push
jnp
popf
push
pop
in
cmp
xor
test
fidivrl
into
pop
and
in
push
pop
sti
jg
mov
cmc
in
insl
cli
gs
mov
xchg
pop
mov
sbb
pop
lret
imul
sub
addr16
jmp
jecxz
inc
xlat
sub
or
aaa
push
dec
push
cmp
pushf
mov
ret
add
imul
or
lcall
fnstsw
ds
dec
iret
stc
xor
mov
jae
pop
imul
pop
je
lods
or
dec
ja
loope
out
and
aas
movhps
jl
push
stc
shll
loope
mov
push
dec
mov
sbb
out
sbb
in
mov
std
mov
sti
sub
xchg
mov
or
cmp
jge
das
pop
shlb
or
push
and
cmp
push
push
jnp
ret
push
insb
cwtl
popa
outsb
push
and
hlt
and
xchg
fs
xchg
adc
xlat
jge
xchg
xor
icebp
jmp
xchg
and
outsb
dec
jge
out
fidivl
cmp
divb
push
cmp
push
adc
sub
rcl
cmp
les
mov
and
fs
js
inc
sbb
bound
push
mov
cmpsl
xchg
inc
mov
xor
cmp
into
ja
xchg
andb
aas
xlat
jp
push
repnz
mov
dec
mov
pop
xchg
insb
test
or
ja
xor
sbb
ljmp
gs
xor
pop
or
stc
pop
push
loope
and
dec
dec
cmp
fsubrl
or
inc
rcrb
xor
inc
test
xchg
ret
pop
jns
cld
mov
dec
push
xchg
sbb
fwait
push
jmp
mov
push
pop
adc
sbb
fs
in
mov
ss
sub
or
sbb
adc
jg
ja
imul
dec
cld
insb
in
add
pop
push
in
mov
out
and
adc
mov
sub
popl
clc
sub
mov
adcl
cld
push
xchg
and
ficoml
xor
push
push
lea
xor
add
adc
mull
cmp
mov
std
test
sub
gs
sub
xchg
insl
mov
imul
loopne
and
loop
push
ficoml
fs
ss
add
shl
or
add
adc
movsb
fwait
loopne
notb
sub
popf
jns
jo
sub
dec
arpl
loopne
pop
pop
add
fistpll
clc
cltd
jge,pn
cli
pop
sbb
mov
mov
lods
pop
test
inc
sub
mov
cmp
sub
ljmp
ret
xchg
mov
mov
popa
pop
sbb
les
mov
inc
orl
lahf
mov
fmull
fwait
aam
or
rcrb
fsts
subb
les
lret
mov
dec
imul
stos
testb
pop
das
cbtw
fchs
push
cmp
aam
inc
push
insb
mov
pop
scas
sub
mov
mov
push
sti
pop
call
sub
mov
daa
cmpsb
jne
xor
mov
cmpsb
xchg
pop
push
popa
out
xor
das
mov
add
xor
push
fsts
in
lret
pop
movsl
jmp
lods
jae
jae
sbb
in
mov
shlb
sahf
push
jp
call
pop
ja
xchg
or
cmp
test
ret
mov
inc
jl
aaa
out
pop
xor
pop
sbb
shld
frstor
aas
adc
stos
outsb
imul
and
aas
jge
mov
mov
enter
sbb
and
cmp
push
out
cmp
incl
insl
sub
and
mov
lods
lret
into
cmc
shl
outsl
or
sub
sub
sub
mov
lock
call
fists
outsb
or
frstor
push
push
sub
push
out
sbb
inc
sahf
mov
mov
pop
mov
sub
sbb
mov
push
icebp
xor
cmpsb
adc
fwait
xchg
xchg
stc
cld
or
ror
cmp
lea
pop
and
hlt
mov
mov
movsl
xor
imul
into
je
std
lock
aam
sbb
fcmovbe
lds
push
sub
je
jmp
out
sarb
mov
jp
xchg
push
dec
inc
test
lret
movsl
sbbb
and
push
sub
in
xlat
repnz
add
adc
stos
jg
insb
adc
fisttpll
rcr
fidivs
or
and
adc
hlt
jle
jns
xchg
dec
js
repnz
out
mov
in
sub
jmp
xlat
popa
aas
dec
mov
add
loope
fmull
test
push
sarl
pop
and
dec
mov
lret
sbb
outsl
xchg
pop
mov
or
sbb
pusha
mov
jecxz
push
cmpb
push
sbb
in
jp
aad
in
shlb
out
pusha
inc
pop
and
icebp
xor
scas
shlb
test
lds
xchg
mov
fbld
icebp
adc
bound
jmp
leave
push
scas
mov
or
mov
sub
push
ljmp
mov
pop
lret
and
mov
imul
inc
loope
cmc
dec
mov
cmp
hlt
mov
add
imul
lret
lahf
push
push
xchg
cltd
pop
xor
rcrb
and
push
out
pop
and
shrb
fucomip
lock
pop
gs
sbb
rol
es
push
lret
lret
pop
dec
test
xchg
inc
sub
pop
push
mov
and
or
iret
pop
push
sbb
jle
sbbl
mov
loop
inc
sub
data16
dec
mov
fwait
mov
jae
addr16
add
loope
mov
xor
cld
push
push
shlb
outsl
daa
lret
pop
scas
xor
pushf
mov
popl
cmc
test
add
inc
sti
sarb
leave
jns
gs
int
addr16
mov
xor
in
jmp
imul
adc
loopne
aam
pop
inc
xor
lcall
mov
or
gs
int3
xor
es
popa
jne
adc
ficoms
lahf
and
mov
dec
cmp
ret
sbb
mov
push
lds
nop
nop
adc
int3
adc
shll
sub
jb
sbb
gs
fidivrl
xchg
push
add
ret
fstpl
ffreep
sti
faddl
gs
mov
jno
out
mov
addr16
out
dec
sub
pop
in
aas
xor
cmp
out
or
or
in
pop
add
cmp
add
push
push
lods
cmpsb
pusha
movsl
std
ja
inc
mov
sub
mov
jp
test
xor
loope
call
adc
push
popa
sub
out
mov
xchg
sub
jae
inc
daa
out
or
lret
mov
loope
jl
dec
and
cmp
int3
mov
ret
jg
inc
call
push
pusha
in
jp
pop
data16
mov
cmp
and
inc
push
dec
pop
cmp
test
or
push
das
add
nop
mov
pop
mov
adc
inc
lods
xchg
xchg
outsl
inc
jle
in
xor
xor
mulb
or
ret
xchg
xor
cmp
cmpsb
jl
or
shlb
push
inc
mov
xor
fdivs
pop
out
clc
mov
mov
sahf
inc
xchg
pop
jp
in
outsb
jecxz
test
xor
call
sbb
or
outsl
xchg
arpl
fst
xchg
pop
insl
lds
shlb
iret
cs
leave
adc
bound
pop
sbb
sub
xchg
adc
dec
lret
lods
rcrb
jae
stc
mov
hlt
mov
jo
lods
cli
cld
jp
push
fists
pop
mov
cmpsb
push
es
sub
iret
cmpsb
mov
fmull
mov
fidivrs
rclb
ret
dec
and
popa
lcall
ret
imul
icebp
nop
inc
push
jg
mov
bound
scas
pop
xchg
jg
mov
push
push
cmp
dec
jnp
adc
mov
movb
push
sub
mov
clc
inc
add
mov
adc
fcom
pop
scas
outsb
mov
aaa
inc
test
pop
sub
dec
inc
lcall
scas
mov
mov
pop
into
mov
imulb
scas
lods
stc
mov
dec
fdivrs
mov
push
and
lret
pusha
jle
aam
xchg
sbb
mov
out
sub
add
int3
in
in
lea
push
jb
dec
out
sti
out
pop
xor
dec
cmp
je
xchg
ja
leave
sarl
fdivr
dec
xor
jecxz
pop
popa
sbb
mov
outsl
dec
mov
aam
bound
add
imul
ret
icebp
mov
add
in
cmc
xchg
mov
xchg
dec
fs
jns
call
bound
mov
sahf
stos
jb
jmp
ds
add
popf
ds
enter
jb
inc
or
dec
jmp
test
mov
popf
jo
movsb
mov
imulb
ja
addr16
movsl
or
jl
scas
inc
into
push
xchg
and
sub
add
adc
inc
insb
fs
xlat
movsb
sbb
pusha
cmp
mov
popf
cld
xchg
push
into
dec
push
mov
add
dec
aas
aam
add
div
mov
or
sub
mov
test
sbb
cwtl
sbb
xlat
ds
movl
fidivl
in
addr16
insl
xchg
imul
bound
aad
pop
pop
fmull
mov
rclb
push
das
or
repz
fdivl
inc
les
sub
imul
inc
xor
cld
push
rorl
test
and
mov
mov
bound
ucomiss
pop
call
rorb
mov
dec
imul
cltd
add
jge
rcrl
add
enter
jb
sub
push
je
sub
mov
repnz
outsl
jns
mov
setae
adc
adc
cmc
jg
xor
fwait
pop
pop
push
fwait
inc
add
jbe
cmp
xchg
shrl
ss
sbbl
sti
lret
lds
pop
es
in
test
lods
dec
cmp
lcall
inc
mov
push
es
mov
pop
mov
scas
adc
adc
mov
rcrb
in
mov
in
pusha
adc
rcr
cmp
scas
push
push
mov
loop
mov
fidivrl
cmp
insl
sub
ljmp
loop
test
pcmpgtd
cld
jmp
and
ror
add
stc
jnp
stos
inc
movsl
push
add
mov
push
jl
pushf
mov
and
out
push
stc
pop
jmp
movsb
cmp
clc
subl
sub
mov
ret
shl
sub
dec
cmp
shll
cltd
fwait
sub
adc
adc
aaa
adc
and
sbb
and
xor
roll
fistpl
mov
in
xchg
xor
fimuls
mov
adc
mov
popf
mov
lods
fmulp
lcall
shrl
cwtl
fst
aaa
or
mov
sub
insl
cwtl
xor
xor
mov
mov
jl
add
mov
lock
jno
sti
inc
pop
fldl
mov
sbb
sbb
pusha
movsl
mov
xchg
inc
pushl
pop
sbb
mov
ss
and
jno
mov
hlt
aaa
dec
leave
gs
imul
int
stc
in
loopne
and
icebp
aam
sbb
mov
ds
lds
push
mov
push
cmp
dec
das
pop
jnp
jmp
js
inc
fmuls
int
leave
mov
push
sbb
mov
adc
loope
std
and
fisttps
xchg
shll
xor
push
xchg
xchg
push
lods
mov
aaa
test
jmp
in
and
out
xchg
outsb
lahf
cmc
out
inc
xchg
mov
inc
aas
repnz
aaa
rorb
hlt
inc
sub
je
mov
jmp
or
xchg
loop
movsb
pshufw
xlat
sarl
xchg
and
dec
jge
push
jl
ja
out
out
xchg
pop
push
aad
sub
mov
js
jle
mov
movsb
mov
inc
cmpsb
stos
call
jle
inc
stos
cmpsb
loop
pop
adc
lods
mov
xor
ret
mov
fcmovnu
cld
fisubrs
divl
push
sub
dec
inc
jno
mov
dec
dec
mov
push
jnp
add
push
in
jle
pusha
aaa
pop
loopne
cwtl
jecxz
out
cld
mov
scas
add
jl
cmp
adc
lock
inc
mov
pusha
fstpl
mov
daa
stos
cmc
pop
cmp
out
stos
shl
sti
pop
mov
std
fs
dec
xchg
jl
leave
adc
stc
xchg
mov
pop
std
cmc
mov
sbb
sti
mov
nop
aad
dec
popf
rolb
fidivl
cmp
xchg
jo
xor
mov
lret
adc
push
inc
cmp
data16
sbb
aad
loopne
subb
cmp
iret
fsubrs
faddp
cld
stc
rcr
mov
push
imul
fwait
ds
iret
jno
or
in
scas
sbb
sahf
add
addr16
andl
mov
add
test
cmc
xor
dec
xchg
add
cmp
dec
cmc
jp
mov
notl
push
xor
push
add
xchg
jbe
jo
idivb
xchg
pop
add
loop
mov
ljmp
mov
push
out
adc
stc
lea
pop
sahf
mov
lods
jb
dec
xor
pop
pop
mov
sbb
je
mov
lahf
mov
cmp
cmc
repz
std
lret
pop
add
sahf
add
cwtl
decl
fidivrl
add
int3
outsl
movl
jle
cmp
xor
out
or
es
lea
addl
fisubl
xchg
call
mov
push
or
inc
aaa
mov
lahf
and
adcl
adc
pop
cltd
test
xchg
inc
stc
jne
and
xchg
test
push
das
pop
je
dec
mov
add
cli
pusha
jb
push
mov
orb
or
jo
jmp
ss
fs
pop
mov
cmp
dec
mov
cmpsl
lcall
xor
into
lret
int3
add
jp
inc
sahf
xchg
inc
daa
pop
xor
aas
into
lret
fsts
fdivs
xor
leave
cli
xor
lcall
add
data16
out
lods
or
and
xor
call
push
pcmpeqw
add
pop
enter
and
pop
sub
mov
es
cmpsl
push
pusha
dec
xchg
mov
lds
cmp
and
mov
arpl
or
xchg
add
push
sbb
mov
lsl
les
mov
adc
fst
mov
scas
leave
je
push
xchg
cs
lcall
xor
ficompl
jne
or
shrb
andb
sti
push
icebp
mov
icebp
inc
push
mov
jle
xchg
jnp
jecxz
sar
call
outsl
hlt
negl
scas
xor
jnp
add
mov
fsubp
out
test
sub
jge
daa
jbe
lods
dec
xchg
or
imul
lret
add
jo
and
std
push
ds
outsl
fiaddl
rolb
mov
xor
popa
jne
and
sbb
jp
jb
dec
xor
xor
out
std
cmc
inc
mov
pop
lahf
aam
xor
aam
ret
xor
jecxz
add
jge
lcall
inc
stc
lahf
push
xchg
scas
sbb
in
adc
lds
std
fcoml
jmp
adc
xor
std
ljmp
add
mov
inc
out
stc
inc
jno
add
inc
pop
mov
aad
pop
push
mov
sub
or
xchg
mov
fistpll
jg
dec
ljmp
dec
inc
jmp
aad
jl
insb
rcrl
fdivl
fildl
jb
pop
loope
ljmp
stc
jle
repnz
bound
sub
shll
xchg
out
inc
aaa
cmpxchg8b
jns
sahf
pop
jp
inc
jo
push
jp
ret
iret
repz
lods
jge
and
mov
popa
fistl
pop
mov
ret
jp
lock
and
sti
push
push
push
jo
lret
jl
mov
sbb
xchg
xor
mov
pop
mov
pop
or
pop
and
jle
filds
dec
dec
test
movsl
mov
mov
movsl
and
push
rcrb
mov
pop
mov
movsl
movsb
mov
xor
xchg
adcb
loopne
lret
dec
inc
add
int3
int3
jge
movsl
andb
cmpsl
setno
sbb
and
xchg
push
inc
and
xor
sbb
lret
pop
sarb
outsb
repnz
in
pop
ljmp
rclb
or
outsb
testl
sbb
and
ficompl
lods
dec
hlt
icebp
xchg
push
xchg
cwtl
push
rolb
and
aad
mov
push
inc
fs
scas
fisttpll
adc
xor
mov
lret
pop
lock
cmp
aas
sbbb
inc
lcall
add
and
out
clc
mov
repz
jno
shl
testb
add
and
push
out
add
xor
ret
cmp
push
sub
cwtl
jmp
sbb
cwtl
sti
xchg
ljmp
dec
imul
mov
mov
and
mov
cmp
gs
cmp
lea
or
push
ds
xchg
inc
and
sub
mov
mov
in
xor
inc
or
out
push
outsb
mov
cmp
icebp
dec
xor
je
test
pop
pop
out
adc
dec
mov
mov
xlat
or
movsl
push
push
sub
pop
scas
inc
mov
sbb
and
pop
push
nop
loope
lahf
pop
cmpsb
sub
mov
test
popa
fidivrl
test
and
mov
mov
inc
scas
fwait
movsl
imul
test
push
gs
or
xor
sub
lcall
inc
dec
xchg
add
mov
fimuls
and
lock
test
pop
std
stos
or
mov
stos
sub
xor
inc
mov
adc
in
mov
push
test
add
dec
and
addr16
inc
add
jmp
test
or
jmp
jnp
in
into
ja
sbb
xchg
xchg
outsl
std
add
call
loope
lret
dec
xchg
int
mov
mull
pop
cmpsl
pop
cmc
xchg
dec
and
fisttpl
add
pop
lahf
mov
dec
xchg
mov
sbb
cli
inc
repz
lods
sbb
jle
popf
outsb
push
mov
stos
lcall
or
popf
lret
shr
add
cmp
popf
jl
in
out
add
pop
cld
push
mov
dec
mov
les
fistl
add
xchg
adc
xchg
cmpsb
in
outsb
jne
xchg
xchg
movsb
loope
arpl
pop
inc
push
fstpt
xor
add
ds
and
pusha
xchg
jmp
xor
lcall
les
pop
mov
insl
inc
or
out
cmpsb
fsubrs
test
inc
lret
cmp
jo
adc
and
xchg
pop
fdivrs
add
jae
data16
xorb
or
xchg
sub
jge
mov
fcomps
shrb
cli
subps
mov
xor
into
outsb
or
in
xchg
lret
xchg
je
stc
push
ds
sub
mov
in
nop
dec
lea
pop
mov
cmpsl
mov
and
sbb
pushf
sub
adc
popa
lea
rol
cmp
into
sbb
push
fisubrl
jb
pop
sbb
in
or
leave
outsl
mov
push
call
mov
mov
shlb
sahf
adc
mov
outsb
and
psubusb
ret
sahf
cmc
jns
inc
add
sub
dec
dec
cmp
sbb
je
dec
popf
repnz
sub
arpl
xchg
cwtl
jns
sub
pop
adc
loop
xor
add
adc
std
sti
push
cmpsl
sbb
dec
negb
into
sbb
jae
in
jnp
jl
icebp
aaa
cwtl
push
std
mov
repnz
lahf
rcl
mul
ficompl
sub
addr16
xor
push
shll
mov
cmp
mov
and
aam
xchg
test
rcrb
dec
pushl
out
dec
inc
or
cld
dec
xor
loop
inc
push
fcomps
test
mov
lds
inc
push
fnsave
lods
xor
ja
fldt
add
aas
in
fbld
or
mov
js
jno
mov
fimull
inc
or
test
jno
arpl
inc
sbb
mov
gs
mov
sub
not
add
xor
mov
xchg
sub
cwtl
push
mov
test
add
into
mov
fcoms
stc
pop
push
xchg
xchg
add
dec
std
repnz
lret
subb
add
mov
arpl
inc
jns
in
scas
enter
into
mov
addr16
cmp
popa
pop
outsl
jbe
lea
sub
add
cltd
inc
lds
cltd
cmp
test
mull
cmp
rorl
push
xor
add
arpl
or
pushf
add
into
adcb
out
inc
jnp
mov
jo
push
out
jl
rorl
int
xor
pop
ljmp
outsb
into
aad
mov
movsl
pop
movsl
pop
jne
sbb
loop
xchg
mov
test
aas
dec
inc
sub
rcll
xchg
jle
shlb
push
mov
popf
mov
mov
scas
mov
dec
mov
lods
xor
data16
insb
in
loopne
leave
add
or
aam
mov
data16
mov
mov
cld
ljmp
xor
sub
sub
repnz
xchg
sbb
push
test
icebp
add
push
lods
fnop
push
lret
mov
lock
cli
or
jle
cmp
inc
mov
mov
mulb
sub
and
pop
dec
add
xchg
dec
jle
cmc
movsb
jo
xchg
lods
mov
push
mov
loop
and
movsb
iret
popa
adc
ss
stc
inc
mov
call
mov
jno
cmc
and
cmpsl
jge
and
inc
ja
sub
lods
push
mov
cmp
enter
sbb
pop
mov
xor
lea
mov
inc
je
mov
xlat
dec
cwtl
test
cld
arpl
mov
inc
jge
stos
mov
in
mov
jge
and
pop
adc
xor
mov
mov
in
cmp
and
mull
es
xor
add
adc
jnp
out
shl
rorl
ljmp
movsb
push
jp
add
pop
movsb
pop
adc
mov
adc
adc
pop
iret
cli
mov
mov
xor
jecxz
or
aaa
ljmp
and
mov
sbbb
jmp
push
mov
shrb
fisttpl
adc
cwtl
jbe
sub
lret
jge
mov
lock
push
inc
testl
loop
lock
mov
push
xorl
mov
inc
xor
xchg
divl
notl
cmc
add
pop
push
or
cmp
xchg
mov
cmp
xchg
ljmp
ds
mov
ja
push
push
popa
fimuls
pop
imul
push
cmc
mov
ljmp
roll
xchg
jecxz
or
cmc
loope
rcrl
pop
cld
jae
leave
xor
jge
aam
push
xor
xor
xor
pop
sub
js
ret
das
ss
pop
mov
out
add
push
iret
orl
mov
dec
leave
pop
stos
add
add
ja
xor
int
jge
sbb
cmc
mov
jno
push
mov
push
insb
jb
sbb
into
rclb
or
xor
push
inc
or
test
jge
test
mov
andl
dec
dec
jg
mov
in
aad
xchg
mov
push
inc
or
scas
ficomps
jns
mov
das
clc
jae
cli
test
jno,pt
adc
sub
fwait
fs
cmpsb
mov
arpl
mov
negb
pop
shrb
movsl
mov
in
mov
push
in
pop
stc
and
pop
mov
push
and
or
xlat
cmp
cmp
call
sahf
sbb
leave
sbb
loopne
adc
in
pop
mov
xor
xlat
stos
jo
iret
fnsave
ud2
sub
pop
popl
rorb
hlt
mov
cltd
ds
lock
xchg
movsb
addb
arpl
imul
and
or
sub
insb
ss
cmp
movsl
out
mov
push
xchg
add
xor
outsl
add
cmp
push
call
pop
shr
mov
popf
sti
dec
mov
xchg
sub
pop
push
xlat
mov
xor
dec
or
int3
fdiv
xchg
movsb
mov
insb
loop
jb
lcall
push
inc
cwtl
push
loop
xor
mov
sbb
lret
enter
bound
in
push
xchg
dec
pop
sbb
lods
sub
out
imul
sbb
jnp
xchg
lahf
and
stc
scas
jecxz
inc
sub
fcoms
mov
adc
jecxz
mov
lods
in
or
lock
lcall
jp
lret
jge
lods
sbb
lahf
test
mov
sbb
repz
pop
lret
lods
ss
les
jae
ja
pusha
push
mov
rcl
movsb
jo
jnp
inc
mov
cmp
mov
test
add
mov
repz
setne
popa
pop
fistl
out
pop
mov
inc
jg
mov
ficomps
dec
fdivrs
sbb
sub
adc
movsb
xchg
mov
fwait
xchg
shr
leave
xchg
rcrb
outsl
rol
xchg
push
xor
jae
arpl
adc
pop
cmp
and
int3
pop
lahf
rcrb
cmpsb
push
xchg
nop
pop
rcrb
dec
mov
mov
jge
jbe
xor
jnp
sub
aas
repz
and
testb
jb
adcl
sbb
jo,pt
outsb
into
sbb
inc
add
mov
push
pop
adc
pop
mov
ljmp
jo
addb
jmp
or
adc
sub
cmp
jp
adc
push
xor
popf
sub
and
adc
mov
cmp
cwtl
mov
sti
divl
sahf
in
test
xchg
sti
jb
inc
imul
fidivrl
lock
pop
sbb
sub
add
sub
cmp
iret
mov
hlt
fs
jno
pushf
pop
out
adc
testb
in
ss
push
xchg
jb
jmp
and
sub
inc
in
xchg
insl
xchg
fdivrp
xchg
ret
mov
inc
ss
xchg
in
xchg
mov
dec
push
enter
movsb
dec
cmp
mov
test
sbb
and
pushf
aas
clc
cmc
imul
and
decl
jne
jne
xor
push
dec
into
rcrb
aam
mov
xchg
shll
lret
in
imul
jg
jecxz
jmp
into
sbb
aas
and
and
push
aas
cs
das
ljmp
imul
or
sbbb
cwtl
jp
push
xor
fisubrs
cmp
or
mov
mov
loop
jbe
xor
mov
mov
cmpsb
cli
mov
lret
ljmp
fucomip
sub
cmp
jl
lahf
cli
fildl
lret
xchg
push
push
and
inc
mov
xchg
push
xchg
out
jo
test
cmp
lods
test
sub
mov
int3
dec
inc
cs
and
test
sub
aam
xchg
aam
xor
lods
pusha
repnz
out
jmp
mov
ljmp
xlat
or
cld
pusha
out
enter
push
bound
aad
jge
jmp
xchg
fcmovnbe
jl
mov
dec
mov
lock
jge
fdivs
adc
mov
mov
gs
repnz
into
push
mov
lret
sbb
inc
sub
dec
mov
adc
cmp
add
xchg
aam
imull
aaa
subb
test
orb
xchg
jo
jno
inc
jbe
inc
inc
xlat
roll
and
mov
mov
xchg
dec
stos
push
lret
mov
jle
js
cmp
add
std
cmp
in
inc
mov
clc
sub
pop
out
mov
xor
int
js
xor
inc
in
inc
and
sarl
lods
es
push
stos
and
mov
dec
dec
fwait
lahf
mov
xlat
and
mov
in
jnp
ss
fbld
neg
fisttpl
loop
jne
aad
mov
imul
mov
shll
cmp
cwtl
or
push
inc
pop
jle
jo
lds
movsb
loope
mov
test
daa
aas
test
dec
cmp
xchg
add
mov
add
fdivl
mov
arpl
jno
mov
nop
iret
cmp
mov
dec
push
push
rorb
jle
adc
and
mov
pop
jl
jns
rcll
mov
test
dec
ret
xor
dec
rorb
fxtract
mov
dec
loop
aas
out
dec
cmp
mov
jle
ljmp
insb
cli
repnz
cmp
call
mov
mov
mov
fsubrs
pop
mov
je
aaa
aad
imul
in
push
xor
andb
mov
fdivl
or
sbb
adc
out
ja
push
push
popa
add
mov
mov
cmpsl
and
jl
sub
adc
mov
inc
std
flds
cmp
hlt
jno
inc
aaa
dec
sub
std
into
add
test
or
testb
ret
sbb
add
push
clc
aad
xor
jg
push
insl
dec
mov
pop
pushf
lret
cld
rclb
cmpsl
and
fidivs
jbe
xchg
scas
test
cmp
cmpsb
jo
and
xchg
bound
loop
dec
add
mov
push
push
stc
cmc
inc
aas
repnz
and
inc
adc
xchg
out
adc
push
fsubp
sub
mov
leave
addb
pop
jmp
test
insb
xchg
inc
jb
in
mov
les
test
ljmp
mov
es
dec
mov
adc
stc
dec
iret
es
pop
pop
sub
dec
pop
push
or
xchg
popf
or
mov
xchg
add
inc
sbb
and
mov
idivl
test
mov
xlat
fdecstp
lock
lcall
int
mov
mov
cmp
jmp
jns
shrb
bound
test
lods
jns
lret
outsb
jnp
and
push
movsb
int3
int
pop
mov
fidivrs
aam
sub
xchg
dec
ficoml
jb
movsl
ficoms
xor
mov
or
add
jo
imul
subb
xchg
test
pop
in
aas
popa
das
out
adc
push
inc
fwait
dec
std
subl
aad
cmp
stos
add
jae
add
xor
push
mov
cmp
add
lcall
push
mov
into
das
mov
xchg
addb
enter
and
hlt
dec
shr
mov
jecxz
dec
mov
jge
addr16
cmp
mov
mov
aas
inc
test
xchg
outsl
fildl
ja
add
mov
mov
cs
jne
inc
push
cmpsl
mov
adc
jecxz
xor
adc
add
dec
jmp
fsubrl
insb
jmp
add
fmull
inc
int3
das
pop
cwtl
or
lcall
pop
xor
sub
push
movsl
loopne
xor
add
in
push
sub
sub
cmpsl
push
aam
add
imul
dec
adcl
cmp
insl
xor
or
ja
inc
jecxz
mov
jge
xor
sbb
pop
jecxz
mov
popf
div
pop
jno
push
jns
xor
mov
and
pusha
pop
repz
inc
inc
sbb
clc
mov
mov
add
push
xchg
pop
mov
and
jnp
inc
adc
shl
push
sbb
push
lods
xor
or
mov
dec
sub
sbb
pop
cmp
pop
fcoms
ljmp
add
rcl
xchg
lahf
out
push
xor
dec
jmp
sbb
into
xchg
fcomp
inc
xchg
int
loop
mov
jns
add
xchg
fcomps
cmp
repz
xor
mov
repnz
add
ret
js
mov
or
scas
sub
xchg
mov
lea
mov
adc
ja
lock
mov
sti
movsb
lods
outsb
sub
xor
add
ss
sub
cwtl
or
add
xchg
fnsave
mov
jge
out
mov
or
lds
xor
inc
sub
jmp
std
bound
sbb
jns
inc
incl
inc
incb
addr16
pusha
xor
lret
loope
mov
sub
loopne
jl
xchg
jle
cmpsl
cmp
fcompl
sub
pop
add
jbe
or
push
faddp
push
mov
jb
scas
stos
add
sbb
bound
xor
sbb
out
leave
add
ss
pop
dec
stc
dec
mov
in
adc
mov
inc
daa
inc
push
mov
pusha
orb
adc
in
ljmp
and
push
sbb
jnp
sub
test
dec
aas
addr16
push
or
push
cmp
lcall
xlat
xor
xor
cmp
sbbl
sub
test
mov
mov
pop
adc
inc
scas
inc
xchg
push
mov
bound
lods
inc
jmp
pop
add
xor
js
mov
shll
in
xchg
or
cltd
loope
lret
nop
stos
push
cmp
xchg
sbb
xchg
cmpsb
jl
xlat
sub
push
cmp
xchg
pop
stos
cmpsb
fdivl
push
fdivrs
test
lea
dec
test
mov
sti
push
xchg
je
push
xor
mov
or
incl
movsl
rclb
push
ret
cmp
rcr
mov
mov
outsl
sub
in
and
andl
pop
push
call
fstps
lods
dec
dec
dec
cs
pop
stos
loope
add
jl
push
sub
int3
lods
dec
xchg
push
outsl
mov
sbb
mov
jno
arpl
jb
dec
fcomps
mov
ss
xor
xorb
mov
sub
lock
out
lahf
inc
test
and
iret
call
cmp
dec
insl
push
pop
pop
pop
adc
sbb
leave
add
cmp
mov
stc
xor
in
dec
test
mov
inc
stos
gs
cmpsb
xor
or
pop
add
out
mov
mov
pop
int
add
imul
xor
insb
pop
test
movsl
incl
test
pusha
les
jge
adc
lds
pusha
pop
les
cld
push
inc
fs
pop
mov
pop
decl
rcrb
mov
js
sub
cmpsl
jle
ja
ret
pop
mov
mov
mov
adc
xchg
in
inc
push
icebp
adc
sub
hlt
jo
adc
fsts
add
scas
cltd
bound
mov
filds
inc
frstor
je
pop
fs
mov
inc
pusha
xchg
and
xchg
sub
or
jl
xchg
incb
jle
sub
enter
cli
mov
cmpsb
jb
insb
add
nop
xor
mov
mov
cmpsb
std
mov
setg
sub
jb
xchg
iret
pop
call
cld
ds
and
fs
into
icebp
jge
push
adc
sub
lods
call
lcall
mov
faddl
shll
cli
mov
lock
sub
push
shlb
shrb
jmp
into
les
pop
pop
pop
pop
imul
loopne
mov
pop
jge
test
xlat
shll
or
ss
pop
jo
or
xchg
cmp
hlt
sbb
jp
dec
mov
mov
stos
xor
push
lea
ret
mov
pop
jg
je
fsubs
mov
xchg
cld
jns
push
sub
inc
test
je
mov
mov
xchg
ljmp
inc
dec
mov
das
mov
mov
sbb
mov
cmpsl
inc
push
movsl
notb
loopne
outsl
imul
leave
icebp
xor
adc
test
call
mov
fidivs
lea
xchg
cwtl
outsl
xchg
fldcw
and
in
je
xor
xorl
pop
divb
mov
xor
or
ss
adc
cld
fisubs
push
mov
jo
mov
xchg
adc
cmp
in
or
xchg
aad
inc
scas
std
clc
dec
test
mov
sub
std
xchg
pop
hlt
movsb
xorl
sub
mov
aad
out
fcom
stos
inc
nop
leave
stc
pop
std
mov
xchg
imul
sub
insb
gs
aas
inc
mov
hlt
inc
jno
scas
imul
fimull
pop
add
fwait
cli
into
mov
aaa
sub
iret
popa
lods
and
shrl
mov
xor
cmp
pop
xor
push
movsb
inc
scas
inc
jne
adc
scas
jge
arpl
jmp
sbb
cmpsl
insb
imul
js
or
arpl
or
and
xchg
and
gs
sarl
add
pop
divb
rcl
pop
fs
adc
jbe
lret
add
mov
push
lret
leave
mov
push
jno
adc
inc
sub
stc
bound
cmp
add
es
push
int3
out
mov
arpl
roll
hlt
xchg
dec
add
mov
ret
mov
in
rclb
mov
fstps
test
sub
add
mov
and
fs
or
sub
jno
cmp
test
loope
sbb
pop
and
dec
out
in
subb
cmpsb
cmp
xchg
mov
sub
push
push
fistpll
hlt
cmp
xchg
xlat
shr
xor
stc
leave
cmp
push
or
lcall
fbld
sahf
mov
adc
cmp
xchg
xchg
sbb
nop
insl
out
mov
cmc
or
lret
cwtl
popl
push
stos
jmp
clc
pop
in
sti
push
adc
lret
xlat
insl
xchg
mov
repnz
or
sub
mov
inc
cld
inc
mov
push
arpl
fistl
movsl
movsl
xchg
pop
and
lahf
aad
mov
daa
out
incb
adc
adc
sub
int
inc
xchg
fdivr
or
loope
jnp
sarb
pusha
enter
mov
aas
popf
or
add
pop
xchg
add
into
aas
in
xchg
sbb
pop
idivl
lea
lahf
jnp
mov
lret
hlt
adc
test
jp
in
xor
mov
int
outsb
into
mov
jb
push
aaa
in
lea
cmpsl
jae
xor
jo
xchg
mov
ljmp
cwtl
sti
push
and
push
jge
cwtl
mov
jge
test
lcall
dec
int3
sbb
jne
inc
sbb
mov
ss
mov
add
cmc
pusha
push
cmp
in
inc
test
mov
mov
mov
shlb
fildll
dec
in
pop
push
mov
movsb
insl
cmpb
cmp
mov
dec
int3
pop
cmp
push
xor
adc
xchg
cmp
adcl
aas
clc
xor
leave
sar
or
icebp
aaa
in
daa
enter
insl
and
dec
and
pop
cmp
insb
pop
or
push
in
in
push
mov
mov
loopne
cwtl
test
or
xchg
jecxz
pop
xor
insb
mov
jno
mov
mov
ret
xchg
cmpsb
add
sti
movsl
or
idivl
daa
test
cwtl
mov
notb
out
sbb
jmp
mov
popa
mov
sbb
dec
pop
bound
pop
jmp
push
or
and
xor
sub
inc
inc
lods
lcall
out
or
dec
adc
push
aam
add
adc
sub
dec
sub
hlt
jg
je
push
fs
jg
push
pop
add
xor
addr16
sub
jl
xor
inc
in
fmull
adc
push
cwtl
jno
lcall
mov
mov
aaa
xlat
jnp
mov
mov
adc
scas
aam
test
sub
shlb
mov
mov
and
mov
cmp
imul
mov
jae
fsubp
sbb
xchg
xchg
xchg
movl
pop
mov
outsb
hlt
mov
mov
xor
or
sub
mov
jle
sbb
jno
inc
lcall
lds
std
jmp
inc
scas
mov
jg
orb
filds
dec
sbbb
enter
aas
mov
adc
ret
adc
subb
or
stc
xlat
mov
ret
and
mov
je
pop
or
jns
movsl
cmpsl
cmp
lds
mov
std
addr16
and
mov
mov
scas
cmp
loopne
loopne
ja
inc
ja
pop
mov
cmp
push
stos
mov
push
test
push
dec
stc
push
mov
pusha
or
dec
add
xchg
out
xor
adc
imull
test
jo
dec
push
sub
push
enter
sbb
sahf
ret
jb
fistl
dec
fbstp
xor
in
sub
daa
shr
mov
mov
xchg
outsb
test
cmpsb
xchg
shlb
xor
adc
cmp
mov
mov
imul
rorl
and
jg
sbb
jmp
mov
ja
xchg
and
inc
std
movsb
and
jle
push
int3
incl
out
or
push
les
jg
enter
jl
mov
xchg
negb
aam
jg
jmp
xchg
int
rorl
jns
pop
das
movsl
cmp
test
adcb
int3
sub
add
cld
pop
shl
add
jecxz
xchg
ds
sub
push
imul
ficoms
das
sbb
mov
mov
jns
push
xor
push
pop
sub
out
subb
cmp
out
pop
inc
xchg
mov
repnz
sbb
clc
xchg
xlat
push
and
push
mov
mov
inc
xor
inc
fdiv
incb
inc
ror
xchg
push
pop
jp
stos
sarl
add
dec
rorb
and
adc
cmp
sahf
int
jo
push
pushf
push
cmp
adc
fisttpl
cmp
lds
pop
sbb
lds
fnsave
fs
shlb
imul
jp
faddl
jnp
sub
aad
idiv
cmp
rclb
ret
jmp
pop
aad
push
aad
stc
aam
daa
mov
incl
fsub
dec
jmp
sub
cwtl
aas
cmp
cmp
out
stc
mov
mov
lret
dec
fadd
gs
mov
daa
data16
lea
pop
movsb
sbb
jmp
into
fs
int
les
lds
hlt
and
imul
or
xchg
xchg
aad
leave
lcall
adc
outsl
push
test
outsb
inc
popa
mov
scas
clc
lods
xchg
add
test
testl
adc
cld
pop
inc
daa
adc
repz
scas
in
nop
push
icebp
testl
or
cmp
sub
and
repnz
cld
xchg
dec
xlat
ds
insl
mov
and
sbb
sbb
cmp
cmp
pop
int3
dec
fdivl
fiaddl
in
mov
imul
push
fxch
and
dec
and
loopne
and
mov
jl
push
mov
mov
scas
ret
lods
cld
int3
xor
or
add
xor
lahf
lea
sbb
sbb
pop
mov
mov
adc
mov
mov
sub
das
push
sarb
inc
loop
ds
inc
mov
cmp
push
test
decl
and
and
sbb
ret
xchg
xchg
fs
pop
icebp
dec
or
lret
sbbl
scas
cmp
mov
push
movsb
inc
arpl
pop
stos
ds
and
daa
stos
dec
cmp
lea
dec
sti
js
mov
testb
xchg
inc
fsubl
pop
scas
fiaddl
nop
int
jmp
jne
mov
aad
push
test
nop
out
mov
push
addr16
bnd
push
cmpsl
mov
shrl
add
mov
aad
shll
xor
and
lds
cmpb
xchg
cmp
add
jp
or
fwait
jge
mov
xchg
mov
sub
ja
jle
movsb
mov
test
push
jo
ret
not
pusha
adc
add
push
imul
lods
dec
std
loope
mov
mov
cmp
loop
dec
or
scas
push
and
jns
jmp
popa
mov
test
test
sub
cmp
xchg
es
subl
xchg
or
imul
jmp
pop
imul
dec
fs
aam
mov
pop
fisubl
lahf
xor
sub
pop
pop
in
lea
pop
jo
and
dec
mov
inc
call
movsb
add
xchg
inc
arpl
add
or
sbb
jge
aam
inc
sbb
out
dec
cmp
pop
adc
fcomps
scas
push
add
sub
fsubrs
jne
cmp
push
adc
std
and
outsl
les
movsl
cmp
mov
fdivr
imul
cmpsl
imul
push
adc
fisubl
push
add
mov
adc
sub
fimull
add
dec
or
sbb
jnp
ljmp
js
fsubrs
fcmovnu
ret
push
fdivp
sbb
out
nop
pop
cwtl
lods
and
shlb
add
cmp
xor
out
adc
sub
pop
nop
pop
push
xchg
popa
push
or
dec
xchg
negb
cmp
mov
jle
cmp
pop
fucomi
xchg
stos
mov
xchg
adc
jg
cmpl
scas
pushf
decb
fwait
aaa
push
lret
and
and
dec
inc
mov
fidivl
jmp
int3
movsb
lods
pop
loopne
movsb
in
dec
push
divb
divl
push
jge
ja
mov
insb
pop
dec
fcmovne
mov
add
or
adc
pop
outsl
lds
mov
repz
std
or
mov
ds
push
shrl
jmp
push
aaa
ss
jmp
shrl
adc
leave
cmp
movups
mov
repz
aad
mov
shlb
pop
das
or
cmp
shrb
cmp
fldl
mov
test
les
cltd
jge
push
loope
inc
inc
adc
cs
outsb
into
loop
sar
imul
and
mov
add
pop
out
pushf
mov
or
lods
pop
decl
in
jle
fldcw
sbb
adc
and
dec
imul
aas
lcall
mov
aas
popf
pop
test
sbb
icebp
push
in
jae
push
lea
inc
ffree
mov
inc
or
mov
daa
jbe
ret
or
pop
sbb
jecxz
mov
lea
leave
xor
sbb
xchg
mov
loop
xlat
jo
loope
add
push
xchg
push
out
cmp
insl
test
push
sarb
or
add
pop
test
jae
mov
test
or
inc
scas
or
push
imul
mov
outsl
fidivrl
xor
repz
jb
in
pop
outsb
sub
adc
imull
call
faddl
jbe
frstor
inc
fwait
xchg
cmc
inc
lea
mov
mov
xchg
cmpb
sub
mov
fnsave
imul
push
mov
movsl
add
cs
mulb
insb
std
xchg
push
imul
mov
addb
cmpsl
mov
dec
test
sub
out
or
dec
cmp
push
inc
repz
xchg
mov
call
test
cmp
ss
ret
sub
insb
xor
scas
cmpsl
pop
cmc
cld
dec
shrb
add
in
arpl
jbe
test
out
and
iret
outsb
xchg
adc
cli
lock
in
adc
int3
test
in
mov
push
pop
add
lret
shll
push
pop
sahf
stc
sbb
jg
adc
fnsave
sbb
jnp
add
mov
add
mov
sub
adc
xchg
xchg
addr16
test
stos
adc
mov
data16
sub
out
push
inc
out
adc
push
lret
mov
mov
jle
stc
icebp
add
jmp
insl
push
sbb
imul
mov
pop
pop
ret
lret
mov
push
outsl
jle
ss
push
arpl
lds
jae
pop
pop
daa
fstl
outsb
stc
shlb
xor
das
cmpsb
mov
jnp
scas
mov
lcall
dec
mov
push
mov
push
mov
cmpsl
rorl
xor
or
std
jecxz
jp
jo
jmp
xlat
faddp
jecxz
push
insb
mov
inc
addr16
mov
out
sub
push
nop
xchg
out
repnz
xor
addb
sbb
out
cwtl
int3
fbld
xor
mov
pop
std
cwtl
fwait
push
push
sub
cltd
mov
ret
push
ret
jne
add
outsb
sarl
mov
leave
incl
pop
push
rorb
ja
xor
inc
add
dec
sarb
and
cld
or
int3
icebp
mov
lcall
cmc
testb
sub
nop
mov
aaa
jp
flds
aas
ss
loope
outsb
dec
mov
lods
dec
popf
add
mov
push
test
mov
pop
push
mov
sbb
stc
xor
outsl
mov
or
and
lock
mov
loop
arpl
pushf
add
cltd
hlt
dec
sahf
xchg
lea
lea
xchg
xor
mov
xor
out
je
jecxz
dec
xchg
fcmovu
mov
add
jge
and
push
iret
pop
jecxz
push
inc
loopne
fnstenv
pop
sbb
cwtl
icebp
sub
lods
jp
mov
je
jp
jecxz
dec
cmpsb
lock
or
mov
stc
pop
jle
imul
ret
insl
xor
repnz
pop
popf
mov
lock
inc
loopne
imul
nop
adc
jle
es
outsl
out
js
mov
sbb
int3
cmp
call
jnp
dec
jo
sbb
cmp
dec
inc
add
flds
lods
sti
mov
mov
push
cmp
pop
lods
or
inc
shlb
testl
mov
iret
fwait
inc
sahf
xor
inc
push
out
jg
jg
ja
pop
pop
push
or
ljmp
push
dec
lods
stc
jmp
inc
fs
scas
hlt
add
rorb
xorb
cmpb
fsub
add
sub
push
cmp
pusha
mov
jle
and
xlat
jmp
push
push
xchg
cli
jo
and
add
pop
mov
test
insb
ret
xor
insb
xchg
pop
and
push
fwait
xor
pop
imul
and
stos
push
mov
adc
lods
test
cwtl
cli
inc
pop
fsubrl
ficomps
sub
shrl
mov
adc
jp
inc
jnp
mov
lea
inc
cmp
adc
jmp
andl
adc
pop
out
addr16
mov
lock
insl
lds
imul
cmp
sbb
sub
cmpsl
dec
xor
pop
jp
popa
sub
push
test
insb
jae
dec
movsb
pop
pop
sahf
and
mov
idiv
rcl
mov
adc
leave
mov
test
lods
es
rcl
aas
and
jb
add
jnp
and
icebp
push
mov
mov
cmpsb
push
add
xor
and
sub
jae
and
lcall
sub
or
decl
cmpl
add
and
stos
dec
das
pop
aam
cmp
inc
out
pop
and
dec
and
xchg
sti
in
fsubl
mov
ja
jo
dec
cmpsb
lcall
mov
imul
sbb
mov
iret
adc
xchg
leave
dec
push
lods
pop
fisubrs
adc
xor
jmp
dec
gs
mov
xchg
xchg
xchg
dec
imull
jno
xor
xlat
loopne
scas
andl
inc
aas
mov
mov
lea
jmp
mov
pop
mov
and
push
inc
out
add
push
xlat
push
xor
push
mov
sub
mov
add
mov
rcr
cmc
outsb
xchg
ja
jmp
in
ret
add
std
mov
aas
outsb
ret
cmpxchg
loopne
xchg
testb
cmp
mov
pop
mov
mov
or
ja
lods
int
jno
jbe
ljmp
mov
dec
jnp
push
out
jne
jmp
dec
xor
cmc
push
movsl
mov
cwtl
push
and
pop
push
sbb
adc
rol
xor
inc
and
hlt
daa
push
jnp
fwait
push
lds
jbe
add
mov
notl
or
mov
leave
cmp
push
cmc
push
scas
xchg
mov
push
fs
leave
dec
in
outsb
popf
jno
clc
ret
popa
add
mov
xchg
push
jmp
fbstp
test
sub
cmpsb
adc
in
sbb
inc
push
sub
push
addb
out
adc
add
imul
and
lcall
xchg
and
sub
adc
scas
mov
in
sub
push
hlt
pop
push
jl
add
sahf
cmpsb
sub
fistpl
clc
jmp
or
push
das
sahf
push
neg
jne
shlb
and
scas
out
stos
xor
ret
xlat
lcall
and
cli
daa
ljmp
lahf
or
loopne
test
leave
mov
leave
mov
jae
xor
jge
jbe
xor
roll
add
mov
jns
cmc
testl
xor
sti
pop
mov
jo
jge
jg
out
cld
repz
dec
pop
enter
cmpsl
std
push
scas
push
sub
pop
fninit
nop
out
or
scas
push
rolb
or
nop
movsb
mov
push
jae
pop
js
pusha
add
hlt
int
ljmp
sub
pusha
imul
movsb
xor
daa
ds
dec
lret
dec
sbb
cmp
jp
add
arpl
push
icebp
aad
jecxz
cmpsb
jo
dec
ja
mov
test
xchg
sbb
stos
nop
test
mov
sbb
lods
out
xchg
inc
or
addl
and
cmp
in
ds
inc
aaa
pop
loope
jmp
js
imul
inc
imul
ds
scas
pop
push
sub
inc
cmp
mov
xchg
inc
mov
sbb
aad
inc
mov
incw
push
les
add
repnz
bound
xor
xchg
xchg
push
jae
xor
and
outsb
scas
insl
jnp
xchg
sti
jb
mov
push
out
shrl
fidivrs
push
inc
dec
ss
pop
and
mov
jae
xor
fiaddl
ja
fmul
inc
popa
xchg
cmpsb
rorb
das
cmp
push
jnp
packsswb
push
mov
lods
xchg
mov
aad
notb
inc
mov
test
jo
push
leave
adc
fsubrp
jecxz
mov
push
out
les
or
sub
mov
pop
popf
pop
pop
scas
ds
stc
mov
lcall
dec
push
pop
pop
mov
or
pop
lock
dec
call
cmp
jnp
jg
shll
ret
movsb
mov
jno
jl
cmc
cmp
jo
pop
xchg
movsl
jl
cmp
xchg
out
xor
sub
adc
xchg
xchg
out
lcall
scas
stos
xlat
jbe
fnstenv
int
gs
or
int3
iret
add
mov
ljmp
es
test
outsb
mov
mov
pop
dec
or
jnp
dec
into
stos
mov
pop
inc
out
xlat
adc
dec
dec
pop
xor
lret
xorb
stos
pop
mov
fisttps
int3
sbb
cltd
lock
jmp
xchg
gs
cld
inc
int3
in
inc
jne
sti
inc
xor
sub
or
cmp
shll
lods
xor
inc
sarl
pop
and
loopne
popa
popa
notl
out
xlat
cmp
jl
add
lret
pop
xchg
lcall
mulb
enter
loope
aam
test
sarl
or
mov
fimuls
out
or
je
out
push
or
in
dec
or
pusha
cmp
stos
jae
lret
imul
mov
pop
or
sbb
sub
sbb
dec
and
xorb
addr16
or
or
push
sbb
xchg
aaa
pushf
aam
subl
add
sbb
loopne
dec
mov
cltd
dec
xchg
stos
push
ja
xchg
in
mov
mov
dec
sysret
mov
xor
mov
adc
adc
jp
loopne
ss
mov
mov
icebp
and
outsb
push
cmpsl
xlat
aaa
jns
mov
push
push
jne
es
jb
fmull
add
mov
dec
push
adc
xchg
insb
idivl
out
in
lods
pop
enter
in
sub
daa
sahf
push
mov
sarb
pop
dec
sbb
int3
sbb
mov
subb
mov
jle
push
adc
add
mov
push
lock
sbbb
lock
int3
int3
cmp
jmp
push
cmp
mov
loop
jmp
and
mov
imul
sub
loopne
push
cwtl
add
jb
xorb
int3
pop
je
mov
jl
and
mov
fiadds
inc
push
fcmovne
rol
gs
and
add
pusha
icebp
inc
mov
cmpb
sbb
ret
inc
sbb
repnz
cmp
cmp
mov
cli
xchg
and
jle
enter
movb
xchg
or
lock
jmp
frstor
cmp
xor
pop
into
inc
addb
or
xor
lret
xchg
add
and
push
je
xchg
pop
push
int3
loop
in
movsl
scas
ja
mov
push
jp
ficompl
into
inc
push
lods
call
and
std
pop
shlb
add
pop
jo
fildl
loop
stos
mov
inc
xlat
dec
in
popa
mov
cmp
pop
adc
arpl
pushf
and
pop
mov
inc
aas
lock
sub
rolb
notl
jmp
std
push
jns
pushf
and
adc
inc
push
cmp
rclb
data16
cwtl
fisttpl
adc
sahf
push
sbb
test
add
aad
insl
hlt
ficomps
cmp
sti
sub
stos
test
push
test
fldl2e
cmp
push
js
add
or
sahf
popf
sbb
fstpl
push
mov
jbe
cltd
cltd
mov
jge
decl
shll
scas
cltd
sahf
lret
cmp
xor
xchg
fsubl
sub
mov
mov
mov
xchg
aaa
popa
xor
cld
daa
fcoms
mov
dec
jo
adc
gs
sbb
push
pop
pushl
cmp
lret
nop
sub
sub
into
xchg
and
ret
adc
fadds
cmp
xor
xor
mov
jle
lcall
negl
js
loopne
pop
mov
orl
dec
jmp
scas
adc
add
jl
jge
insl
cwtl
or
xchg
aam
xchg
cmp
sahf
add
pop
cmp
cmp
dec
testl
fiaddl
xchg
sub
lahf
fcoms
outsb
push
push
adc
sbb
negb
mov
jb
dec
mov
cli
stos
roll
fwait
ss
in
repnz
dec
or
pop
lock
xchg
adc
pop
stos
push
outsl
jle
add
into
and
jbe
adc
sti
js
rclb
push
in
popf
lahf
decl
ret
xor
or
lock
inc
pop
icebp
jnp
outsb
push
and
imul
inc
imul
xchg
add
mov
loopne
mov
dec
in
add
inc
int3
stos
xchg
subb
mov
movsb
into
aad
add
icebp
inc
dec
xor
or
shl
mov
jnp
test
jg
pushf
pause
lcall
aaa
xchg
test
adc
jbe
sbb
xor
xor
xchg
or
lahf
js
mov
or
mov
rcrb
stos
xor
lcall
jl
inc
rorl
icebp
mov
loopne
pop
or
pop
mov
outsb
mov
jmp
lcall
je
xchg
push
dec
cmc
int3
pop
fbld
aaa
out
mov
jecxz
pusha
add
mov
rorb
sub
inc
xlat
mov
inc
xchg
fiadds
mov
jno
add
mov
cmp
mov
clc
imul
data16
minps
mov
sti
lcall
mov
nop
daa
call
jae
jnp
pop
movsb
insl
xor
xor
ret
push
mov
add
stos
popa
pop
sub
rorl
xlat
lret
enter
dec
sbb
imul
ds
or
inc
rcl
sub
inc
push
dec
subb
into
pop
pop
push
mov
and
ja
pop
xchg
or
mov
mov
sbb
imul
inc
mov
outsb
push
imul
fyl2x
and
cmp
push
mov
out
imul
and
cmc
push
fsubs
pmaxsw
shrb
es
push
insl
pop
xchg
pop
fwait
popf
push
mov
sub
shrb
cmp
adc
subl
sahf
ficompl
repnz
aam
ss
mov
mov
out
mov
xchg
xor
mov
inc
cmpsl
adc
pop
in
sub
int
pop
sahf
mov
push
outsb
pmaddwd
pop
mov
ja
push
jns
in
add
mov
cld
mov
push
mov
add
dec
cmp
jno
dec
lods
bound
push
movsl
decl
push
movsb
cmc
adc
rcll
bound
mov
out
jb
iret
push
unpckhps
in
loope
mov
test
sbb
inc
addl
mov
xchg
sub
and
in
call
mov
lahf
cmp
es
ret
lahf
pop
push
jbe
in
jge
jg
inc
adc
movsb
fisubl
cmpsl
mov
aas
add
mov
mov
stos
inc
pop
add
jnp
aas
jmp
inc
cmp
jmp
adc
dec
mov
call
aam
pop
fstl
lret
mov
cs
mov
pop
shlb
or
idivl
imul
fcmovnbe
sbb
je
add
adc
daa
arpl
jo
sahf
rorb
js
sahf
lcall
jbe
pop
cmp
imul
dec
pop
jae
push
pop
dec
lds
clc
les
loope
mov
mov
xchg
mov
or
and
aad
xor
test
movsl
dec
frstor
aad
sbb
xor
cmpsb
jae
orb
jbe
cmp
dec
cmpsb
xlat
xchg
or
adc
inc
sbb
jbe
int3
repz
hlt
mov
cmp
mov
mov
mov
lcall
sbb
xlat
outsb
xchg
inc
sub
mov
pop
lods
fwait
nop
pop
xabort
push
or
push
cmpsb
mov
ds
nop
hlt
lret
xlat
insl
sti
mov
ret
inc
orl
inc
fadds
jp
movsl
ss
push
add
test
xchg
inc
cmp
push
add
add
insb
push
sbb
fisttpl
xor
test
loope
xchg
cmc
fldenv
dec
rcrl
lock
xchg
add
jae
push
popa
mov
mov
jb
scas
test
pop
and
sbb
out
or
add
cmc
cmpsb
mov
inc
adc
jno
mov
insl
xchg
sbb
lahf
sub
test
ja
data16
inc
jno
stos
ljmp
movsl
ss
rolb
push
aas
mov
mov
push
mov
scas
fwait
xchg
repz
in
xchg
mov
loope
into
out
in
pop
cmp
addl
xchg
mov
shll
aad
lods
das
fdivrs
xor
hlt
xor
cmp
sub
lret
stos
and
into
mov
mov
add
test
sar
js
mov
cmc
add
les
std
int3
sahf
mov
mov
cmp
outsl
jmp
loopne
mov
mov
push
call
push
nop
jmp
fs
sbbl
out
mov
pop
push
adc
cmp
ds
xor
sub
stos
ss
inc
test
adc
xor
jae
pop
shrl
fwait
jo
pop
pushf
jecxz
jecxz
jb
xor
lods
addr16
push
in
sti
pop
cmp
cmp
pop
arpl
add
les
add
es
xor
mov
dec
mov
lods
das
pop
jb
sub
push
rorb
leave
cld
fnstenv
push
dec
xchg
aas
jnp
addr16
push
add
push
out
xor
fnstenv
lds
lods
fwait
and
jnp
lret
cmp
or
and
lcall
inc
push
shll
div
ljmp
icebp
fnsave
orl
jmp
push
mov
test
sti
sbb
cmp
jmp
lods
mov
or
into
test
jge
jl
jge
stc
es
and
dec
jge
sbb
jo
iret
mov
shlb
mov
sub
sahf
and
leave
mov
insb
inc
negb
aas
push
mov
bound
dec
cmpsl
and
or
mov
cmp
push
mov
inc
pop
mov
leave
arpl
iret
mov
lock
in
repnz
jns
jl
cmp
popa
mov
fwait
xor
call
fwait
mov
fisttps
push
pop
mov
sbb
aas
es
fiadds
inc
mov
fadd
mov
imul
or
shll
jecxz
mov
mov
repnz
cld
xor
or
insl
adc
sti
out
push
and
test
bound
lock
sti
cmp
sbb
in
and
mov
dec
xchg
push
adc
cwtl
push
push
push
or
mov
test
mov
inc
add
pop
inc
or
movsl
das
mov
push
rcll
scas
sub
cmp
leave
jbe
and
enter
push
xchg
and
add
xchg
cmc
outsb
pop
rorl
adc
xor
lea
mov
loopne
push
push
cld
dec
jbe
lds
test
push
call
outsb
cmpsl
sarb
inc
or
xchg
fwait
out
and
add
sub
push
loop
pop
in
or
xor
lock
cld
addl
sbbl
sub
jae
rcrb
test
cmpsl
dec
inc
mov
inc
cli
sbb
int
sbb
adcl
incl
adc
les
jmp
adc
xchg
repnz
adc
sbb
and
push
icebp
arpl
bound
lea
pop
jle
lds
jmp
inc
daa
cs
inc
push
xchg
inc
dec
addl
xorb
push
push
sahf
xor
or
decl
push
in
and
pop
es
popa
sub
mov
jle
fidivl
mov
pop
out
orl
mov
sbb
in
sbb
pop
repnz
xchg
pop
xlat
pusha
incb
aaa
cmpsb
cmp
fsubrp
daa
int
rorb
add
in
mov
cmp
mov
lcall
sti
adc
enter
pop
adc
mov
dec
mov
or
mov
aaa
test
icebp
arpl
popa
pushf
scas
xchg
mov
imul
fcoml
mov
mov
dec
dec
in
dec
jbe
rclb
inc
incl
ret
jmp
pop
add
stos
call
test
int
idivl
sbb
inc
adc
mov
pop
in
sub
mov
mov
push
inc
out
stos
and
add
push
jo
cmc
add
jns
push
cld
or
bound
enter
pop
idivl
add
jo
jle
mov
test
inc
adc
lret
sbb
jae
mov
call
pop
das
sti
fnsave
std
loopne
lahf
fcomp
or
mov
adc
pop
fimuls
je
andb
and
push
dec
mov
in
lea
dec
es
inc
ljmp
mov
popa
push
aaa
mov
mov
pop
cmpsb
sub
adc
aaa
call
adc
mov
xchg
xchg
mov
loope
movsl
mov
es
and
popf
jmp
std
ds
sub
mov
pushf
lret
in
gs
cmp
mov
mov
pop
xor
push
pop
aad
popa
popa
stc
icebp
sahf
sti
mov
adc
inc
frstor
imul
mov
mov
jg
lcall
fsts
or
pop
icebp
jae
and
cmp
scas
int3
add
pop
mov
mov
rcrl
bound
fsubl
sub
and
call
xchg
dec
add
xchg
lret
jns
cmp
clc
pop
push
dec
or
mov
scas
or
mov
sti
dec
jg
jns
clc
repnz
in
stc
and
clc
bswap
loop
addr16
cs
push
jo
gs
pop
pop
sub
pop
cmpsb
mov
pop
xorl
inc
inc
add
mov
mov
icebp
and
and
add
sub
xchg
xchg
xchg
ret
add
test
dec
and
mov
int3
add
pushl
in
fdivrl
adc
negb
mov
in
in
dec
add
xor
ljmp
xchg
add
jb
inc
jg
push
pop
les
div
xchg
dec
sub
sub
movb
lea
mov
mov
and
aaa
mov
sbb
mov
push
cmp
mov
scas
xchg
push
aas
int3
outsl
shll
mov
cmpl
sub
test
fs
insb
les
add
je
pushl
movsl
scas
xor
psllw
inc
mov
xchg
mov
lahf
test
les
shlb
push
pushf
xchg
jb
mov
rcll
iret
mov
je
sub
in
out
push
popa
jp
sub
int
outsb
mov
mov
shl
xor
and
push
jnp
xchg
stos
adc
jecxz
adc
and
mov
inc
jg
dec
sbb
pop
xlat
int
dec
pop
pop
dec
outsb
movsb
test
fistps
loopne
in
push
xor
out
cmc
adc
ss
lcall
ljmp
insl
add
in
aas
xchg
mov
xor
push
outsl
inc
sub
mov
arpl
ds
stc
push
aad
sbb
push
fwait
dec
xchg
inc
fisubl
fs
sub
add
shlb
lea
and
pop
fldt
pop
add
or
adc
jmp
push
arpl
cltd
shrl
mov
push
pop
mov
addb
aam
mov
pop
push
mull
ds
aas
or
xor
or
add
lods
aas
js
lahf
loop
push
pusha
xor
pop
adc
adc
push
icebp
add
test
push
jle
jo
sahf
sahf
cs
repnz
dec
in
dec
test
cmpsb
mov
icebp
aad
mov
fs
push
push
lret
xlat
xor
push
rorl
int3
jp
add
add
adc
pop
dec
sub
push
fsubl
add
pop
cwtl
jecxz
xchg
sahf
pusha
xchg
mov
std
lods
inc
and
mov
lret
inc
mov
jns
outsl
and
mov
ret
adc
out
jno
jle
mov
add
jno
lea
dec
das
cmp
dec
idiv
push
roll
or
add
mov
loop
adcl
mov
jne
movsb
push
cli
hlt
xlat
shr
xchg
xchg
lea
movsb
clc
jecxz
cs
stc
lea
push
in
dec
pusha
dec
in
testl
fwait
mov
not
arpl
xchg
lea
aas
pop
push
test
leave
inc
sub
or
fs
enter
xor
cmpsl
aad
in
push
pop
or
xor
mov
shll
sbbl
jae
lods
mov
add
das
lret
icebp
inc
add
dec
data16
mov
xchg
icebp
or
fcompl
jge
dec
push
and
adc
lods
pop
add
xchg
stos
ljmp
pop
dec
mov
sub
movl
repz
stos
sbb
add
add
xor
add
add
add
mov
dec
push
lea
call
mov
ja
sbb
daa
push
loopne
bound
out
fs
sub
jmp
fdivrl
lods
icebp
jl
addr16
std
outsb
xchg
add
nop
test
cmp
push
xor
imul
jne
dec
lcall
jbe
scas
jnp
ja
pop
sub
lock
rol
pop
mov
add
jbe
and
add
mov
mov
dec
mov
xor
fs
sub
leave
add
lret
xchg
subb
ja
xchg
frstor
inc
ss
push
xchg
js
cwtl
imul
cs
ja
test
test
xor
cld
push
lcall
cmpl
mov
ja
pop
shlb
pop
or
movsl
scas
insb
xor
leave
cmp
es
cmp
mov
clc
cs
dec
adc
cld
push
add
lea
cmp
or
lock
insb
dec
dec
cmp
out
xor
inc
into
adc
push
rclb
fnsave
out
jle
or
cmp
dec
jg
jle
cmp
jbe
jecxz
jp
das
popf
cmp
int3
sbb
inc
lret
xor
fs
mov
fcompl
rep
aad
test
icebp
jmp
imul
mov
in
push
jo
xlat
xor
ror
inc
or
daa
pop
pop
sub
imul
stos
mov
push
movsb
xor
test
xor
leave
stos
mov
bndstx
sti
add
mov
and
sub
stc
mulb
sbb
cs
sub
sbb
cmpsl
adc
xchg
mov
mov
lea
cmp
mov
in
lods
pop
pop
shlb
cli
js
aad
and
cmpsb
jp
outsl
xor
mov
xor
imul
cli
xchg
adc
add
incb
push
imul
jmp
adc
enter
popf
and
mov
test
mulb
lds
mov
cmpsl
cmpb
xchg
jmp
pop
or
icebp
gs
dec
jl
inc
hlt
and
cmp
mull
loope
inc
subl
jo
pop
lods
rorl
outsb
cmp
push
mov
fsubrl
sub
or
ja
pop
pop
xor
dec
loopne
enter
mov
xchg
add
jle
test
push
data16
repnz
jmp
test
lods
push
xchg
push
aas
pop
sahf
test
mov
fs
sub
inc
dec
cmp
mov
xchg
cmp
test
mov
ljmp
push
xor
in
call
insb
loopne
push
adc
movsb
pop
or
sbb
les
addr16
jbe
idiv
lahf
addr16
int3
mov
into
dec
mov
pop
lea
adc
push
and
or
loopne
xor
pop
xchg
mov
mov
imul
or
pop
pop
mov
mov
stos
xchg
addr16
xor
fstpl
jmp
inc
andl
out
loop
push
lret
pop
xlat
sti
or
xor
fcomps
test
gs
push
push
sbb
lods
inc
call
ljmp
fdivs
cld
dec
enter
xlat
add
sbb
je
fldt
cltd
sub
sub
sub
lods
stc
push
nop
adc
push
cmp
movsl
mov
and
mov
pop
jbe
xor
mov
cs
fnstsw
stc
add
jbe
jo
cmp
xor
add
clc
pusha
mov
push
scas
and
sub
sub
xchg
inc
scas
out
fisttps
pop
ret
push
movsl
push
cmp
xlat
dec
test
dec
or
jne
lds
cwtl
leave
mov
jle
call
loop
pop
pop
iret
in
andb
add
push
es
lock
shl
outsb
ret
push
jb
ret
xchg
mov
add
xchg
push
dec
cmpsb
sbb
xchg
cmp
outsl
mov
ficoml
pusha
xchg
std
adc
stos
or
repz
in
fimuls
stc
xor
lds
cmp
and
xchg
test
xchg
aas
dec
lods
lock
lret
push
push
dec
jl
xchg
lcall
add
jno
add
cmp
inc
les
mov
or
jo
lock
hlt
mov
inc
nop
dec
and
pop
jp
push
popa
and
std
nop
mov
outsl
mov
sub
mov
cmpsl
push
jno
test
adc
sbb
and
mul
adc
push
ret
in
xchg
jo
xchg
pop
inc
add
xchg
test
mov
and
sahf
ret
or
ss
jecxz
fsubs
movsl
jbe
test
stc
scas
add
pop
mov
cmpsb
mov
inc
adc
pop
pop
test
sahf
sbbb
push
pop
into
aaa
insl
jp
sbb
call
or
mov
mov
sbb
cmp
inc
popa
ficomps
imul
push
xor
out
sub
pop
fwait
int
or
xor
stos
fs
mov
cltd
jo
insl
and
fidivs
mov
add
shl
pop
jecxz
ret
dec
xor
xchg
out
push
clc
xchg
xchg
dec
outsl
or
inc
and
fimull
pusha
sar
pop
daa
fsts
xor
fmul
cmp
mov
lret
mov
xchg
int3
mov
aad
mull
sbb
js
mov
mov
and
movsl
dec
xor
xorb
push
scas
add
jg
jmp
or
data16
jo
jmp
mov
je
insl
dec
push
popf
mov
xor
inc
or
jne
lods
pextrw
pop
pop
push
andl
pop
push
iret
in
es
mov
sbb
cmp
ret
inc
mov
movsl
lret
sbbb
jl
mov
out
stc
sbbl
ret
mov
movaps
aas
jge
mov
insl
jecxz
add
dec
rorb
pop
xor
das
mov
jl
cmp
jb
pop
mov
stos
jbe
sbb
sarb
flds
stos
jne
idiv
outsb
jmp
jl
jnp
or
cli
fistl
cmpsb
or
adc
dec
push
or
stos
in
je
add
loope
cmpl
jbe
jbe
std
es
mov
cli
add
pushf
pop
negl
push
dec
add
incl
insb
cmp
jg
cltd
pop
fs
mov
jbe
or
cs
push
or
lock
shrl
rorl
pop
lds
ret
sbb
mov
inc
dec
test
loope
pop
int3
mov
push
in
lret
pop
push
push
lods
ret
cmc
aaa
jmp
loope
sbbb
loopne
pop
mov
mov
cmpsl
test
pusha
js
fildll
inc
mov
pusha
jmp
mov
fistpl
push
push
and
in
or
push
out
dec
neg
pushf
js
jnp
add
xchg
push
stos
scas
or
or
test
rorb
call
test
mov
fld
outsb
aaa
push
in
into
pop
inc
and
cmp
ss
adc
mulb
mov
fisttps
movb
adc
mov
sbb
mov
jns
pop
loopne
push
cmp
bound
jno
xor
call
push
stos
mov
sbb
inc
or
and
pop
in
inc
stos
or
dec
into
mov
ljmp
push
xchg
cmp
movsl
push
lods
movsb
or
mov
xchg
cmpsb
flds
dec
in
fsub
clc
jg
mov
fwait
mov
insl
in
mov
pop
add
xor
cmpsl
inc
mov
inc
xorb
in
mov
hlt
mov
outsl
scas
mov
imul
xor
lret
loop
mov
pop
loop
add
icebp
dec
pop
lcall
rcr
stos
cmpsb
andb
sbb
add
add
mov
pop
jo
nop
cmp
lea
adc
jl
lods
sub
lds
jecxz
push
addl
jmp
sub
mov
cmp
push
lds
mov
xchg
or
adc
add
mov
fcompl
mov
ret
inc
or
mov
cmpsl
jae
push
fimull
hlt
mov
lcall
rcr
push
stos
mov
xor
out
pop
mov
add
popa
mov
or
movsl
sub
sbb
add
sub
nop
fcomp
dec
cwtl
dec
repz
mov
stos
sbb
bound
adcb
into
je
movsb
cmp
shlb
mov
xchg
push
es
cld
lcall
hlt
out
imul
xor
push
inc
ss
push
popl
fs
inc
icebp
int
roll
movsl
add
mov
into
ss
dec
ret
stos
int
mov
jae
dec
lock
pushl
sahf
inc
lret
push
xchg
sbb
mov
mov
ljmp
lret
or
mov
std
icebp
add
fcoml
es
out
jnp
jbe
jecxz
fstl
vpunpckldq
mov
lret
xchg
fsts
test
cmp
pop
xor
sub
jmp
rcrl
out
jo
cmp
ret
fsub
test
xchg
jg
cmpb
jecxz
in
pop
push
sub
or
fadd
insb
sbb
push
cmpsl
sbbl
cmp
ja
jl
enter
sub
pop
ds
mov
sti
push
cld
mov
mov
sub
insb
push
pop
xchg
mov
adc
test
call
adcb
shlb
inc
add
into
outsl
movsb
imul
sbb
outsb
inc
cmp
and
popf
sub
sub
add
inc
sub
inc
sbb
add
dec
dec
cmp
fyl2xp1
xchg
mov
test
xchg
cld
pop
imul
adc
leave
mov
sbb
pop
dec
xor
outsb
add
lods
bound
rorl
pop
int
popa
sbb
push
pop
push
mov
aad
lods
out
pop
pushf
cmp
lods
test
pop
cmc
dec
dec
aaa
out
movsl
inc
dec
sbb
push
out
shll
add
push
push
mov
sub
or
push
sub
mov
cmc
std
jg
xchg
jbe
icebp
loop
inc
ret
mov
pop
nop
xor
fsts
fstpt
lahf
xchg
push
lahf
lods
jge
shll
bound
lret
dec
lods
mov
movsl
ss
lret
mov
test
push
pop
arpl
mov
mov
push
shr
add
mov
stc
aad
fnstsw
notb
inc
idivl
jne
bound
push
aaa
imul
aas
cmp
shrb
ffreep
inc
gs
dec
js
inc
addr16
push
jge
aam
xchg
xor
mov
ss
addr16
push
ror
gs
sbb
repnz
cmp
fbld
jecxz
mov
mov
push
xchg
dec
shl
in
xor
pop
mov
cmp
lcall
push
ljmp
gs
mov
mull
mov
inc
inc
test
outsb
cwtl
or
negb
or
cmc
cmpsl
lods
mov
ljmp
push
test
mov
addr16
aad
mov
sub
cmp
in
dec
jle
xchg
rcr
sbbl
cmp
scas
xchg
lock
push
pop
cmpsb
cs
push
dec
shl
dec
dec
dec
jae
mov
mov
cwtl
ret
in
lock
sub
test
xchg
pop
mov
push
jmp
jg
lock
xor
mov
insl
out
sbb
jno
jno
frstor
cs
mov
cmp
ja
cmc
int3
adc
xchg
dec
mov
xor
out
test
push
iret
xorb
bswap
cmp
and
jge
insb
idivb
or
sub
mov
jo
cmp
xor
push
push
add
fnstenv
and
adc
into
jae
xor
xchg
repnz
rcrl
adc
fbstp
xsha256
cmpsb
xchg
and
aam
popf
mov
ret
push
movsl
imul
or
xchg
dec
andb
pop
fiadds
adc
prefetch
or
dec
lds
sti
out
cld
aas
lds
mov
in
cmp
xchg
adc
fistpll
xchg
xlat
inc
mov
push
inc
lret
in
cmp
cltd
lcall
and
rolb
outsl
or
test
out
inc
dec
inc
lcall
stc
mov
jb
jle
jae
movsl
in
icebp
call
inc
dec
push
vmwrite
or
push
sbb
fsubs
repnz
pmaxsw
sub
and
in
shll
loope
mov
push
jmp
int
xor
add
cmp
mov
pop
add
sub
in
mov
add
in
sub
pop
pop
cwtl
xor
loope
sbb
add
arpl
sub
jb
pop
test
in
push
mov
bound
push
test
push
imul
xchg
push
push
aad
jb
shlb
imul
stos
add
add
push
mov
mov
sbb
xor
call
mov
add
pop
mov
or
cmp
xchg
mov
xor
pop
add
aam
pop
bts
mov
cmpl
push
xchg
push
pop
popf
adc
jmp
mov
ss
and
cmpb
lahf
cld
pop
mov
jl
mov
mov
stc
xor
test
aaa
and
mov
sahf
ja
sub
icebp
scas
sub
repz
daa
gs
xor
aaa
and
ret
or
divb
pop
int
add
and
cmc
clc
mov
lret
mov
jnp
pop
scas
push
cwtl
push
or
scas
cltd
pop
and
mov
in
test
or
xchg
shlb
mov
pop
sub
add
negl
mov
sbb
or
lret
xor
cmpsb
imul
mov
adc
sbb
jecxz
cld
scas
push
sub
sarl
into
add
lods
inc
subb
push
jecxz
mov
xchg
pop
outsl
push
adc
push
out
mov
aam
addr16
mov
gs
mov
iret
cmpsb
push
mov
cmp
popa
fs
mov
xchg
mov
and
sbb
mov
cmpsb
inc
clc
stos
stos
push
testb
mov
cmc
push
lods
xor
cwtl
std
jo
cltd
or
rcll
jg
jmp
lcall
lds
sub
adcl
adc
data16
aas
into
ljmp
cmpsb
cmpsb
sbb
mov
fdivl
push
stos
jbe
mov
shl
pushf
sbb
sbb
adc
orb
xor
notl
inc
push
sbb
xchg
jb
dec
push
or
test
jecxz
cmp
cmp
push
loope
negb
jne
in
jmp
cmp
andb
jno
or
dec
push
cld
ss
fwait
dec
lea
cmp
int3
fmuls
leave
inc
mov
push
push
jecxz
test
inc
push
fstpl
xchg
lret
inc
dec
xchg
jp
js
ljmp
dec
pop
gs
pop
cmp
pop
sbb
out
aaa
leave
stos
shl
or
xchg
data16
aas
out
mov
jmp
int3
enter
jle
mov
xchg
data16
fwait
popf
pop
stos
nop
dec
add
aad
push
in
jns
and
roll
and
fstl
lds
mov
xchg
lds
out
dec
cmpsb
ret
sub
dec
fisubrs
and
lock
pop
xchg
xchg
push
repnz
rcrb
pop
dec
out
pop
ret
inc
cmpsl
stc
mov
and
js
leave
mov
sub
shll
xchg
push
aas
pop
mov
xor
mov
rcr
dec
call
popa
xchg
xchg
sahf
scas
push
sub
clc
fimull
xor
dec
or
pop
stos
ljmp
push
mov
or
adc
mov
mov
cmp
xchg
ret
adc
sahf
loop
dec
icebp
sub
dec
mov
cmp
negb
push
scas
rcl
adc
and
movsl
imul
adc
hlt
xor
xchg
or
mov
adc
xlat
jno
mov
sub
insl
or
lcall
daa
icebp
sub
mov
mov
pop
push
dec
mov
in
add
shll
xchg
ret
je
sub
mov
pinsrw
je
sbb
cmp
push
mov
or
mov
dec
movsl
push
clc
inc
inc
outsb
divb
xor
icebp
pop
aas
xchg
jg
dec
data16
and
aas
adc
mov
roll
aas
inc
cltd
jae
fstpt
mov
std
pop
cli
rcr
out
mov
jecxz
push
inc
sarl
jnp
popf
mov
lcall
not
inc
xchg
push
mov
clc
and
sub
mov
dec
inc
pushf
repnz
ror
dec
insb
and
pushf
xor
ljmp
push
or
xor
mov
pop
flds
cmp
or
into
ficomps
and
xor
adc
cmp
outsb
ss
and
je
and
adc
mov
out
inc
dec
and
jae
faddl
loop
sbb
loope
xor
fdivr
nop
mov
mov
push
xor
daa
roll
dec
out
popf
xchg
xchg
sarb
jp
lods
mov
mov
push
subl
add
rcr
adc
dec
inc
xchg
mov
int3
xor
mov
mov
cmova
and
sbb
and
cmp
xor
cwtl
xorl
mov
fnstenv
fbstp
mov
adc
or
jbe
scas
inc
jno
sub
mov
mov
and
jno
xchg
push
sub
xor
sbb
in
rcrb
jo
push
push
cmp
and
inc
popa
mov
add
cwtl
fstl
lods
incl
push
clc
cmp
js
sbb
mov
cld
mov
iret
and
add
push
out
mov
mov
sbb
add
movsl
notb
out
out
fldlg2
icebp
aaa
mov
fcmovb
out
scas
in
jp
into
sar
rcrl
in
adc
sub
outsb
cli
ror
js
aam
dec
into
push
stos
jmp
and
push
add
xor
push
jmp
stos
lea
push
inc
mov
cwtl
repz
cmp
dec
lods
mov
in
jg
flds
fcmove
push
loop
adc
and
push
sahf
pop
sub
fnsave
dec
jp
movsl
ss
inc
dec
ret
out
push
fcoml
lods
inc
jns
push
adc
adc
push
lret
repnz
fildl
mov
ret
add
xchg
icebp
insl
push
or
out
mov
fsubl
pusha
add
adc
fmull
pushf
sbb
pop
repz
ds
leave
cld
pop
divl
repz
or
cmp
sub
sub
les
nop
jecxz
adc
xor
jp
and
bound
and
jns
bnd
xor
adc
shr
push
push
push
test
add
and
lods
push
sub
ret
scas
xor
push
mov
push
dec
scas
int
inc
xor
lods
sarb
mov
xchg
dec
in
jecxz
pop
rolb
shll
jl
cli
cmpb
stos
scas
fstpt
pop
xchg
push
sbbb
sub
aad
aas
jecxz
nop
cmp
fcomps
rclb
popf
stc
in
cmpl
mov
fdivrs
and
lods
clc
inc
add
inc
xor
jp
sbb
jle
adc
ret
add
imul
and
dec
daa
or
test
je
mov
fwait
xor
jmp
push
sub
dec
and
cmc
lret
hlt
enter
lahf
addb
xor
cmp
push
adc
sub
lock
ja
push
lock
or
fadd
dec
in
and
rcrl
lar
pop
repnz
jbe
fldcw
bound
add
rolb
push
mov
sbb
sub
out
jl
mov
movsl
xchg
or
int
and
cmp
or
inc
insb
insb
mov
push
adc
into
fdivl
jecxz
xchg
incl
jo
jne
jecxz
jo
push
call
add
dec
pop
hlt
mov
jle,pt
adc
mov
mov
sbb
adc
and
in
vpmuludq
js
add
mov
or
dec
push
pop
out
mov
inc
fs
mov
cmp
loope
adc
sbb
mov
push
loop
hlt
xor
xor
xor
xchg
xor
sub
adc
inc
push
adc
add
or
dec
sbb
bound
insb
add
push
or
or
sub
sti
nop
mov
inc
fucomp
rcrb
pop
xor
mov
outsl
jne
and
fildl
rorl
xchg
mov
out
adc
movb
add
mov
movsb
push
repz
das
cmp
jbe
pushf
jle
ret
je
inc
hlt
and
and
mov
sahf
jmp
stc
scas
mov
xchg
rcrl
mov
mov
or
sub
mov
mov
jmp
and
setno
inc
arpl
inc
add
lock
gs
data16
sub
out
inc
out
or
into
cld
call
mov
ds
push
lock
pusha
mov
lods
lods
sbb
rorb
cld
mov
nop
push
std
fisttpll
xchg
mov
mov
aaa
fstps
fisttps
mov
dec
out
jp
adc
in
xor
xchg
push
clc
mov
adc
xchg
out
lods
sbb
stos
jne
mov
sbb
mov
push
cmp
sub
mov
fstp
out
daa
cmp
pop
xorl
pop
sub
mov
fstpt
dec
js
fistpl
or
push
jge
icebp
ret
sbb
jb
xor
xlat
fistpl
mov
fdivs
mov
mov
lods
lea
nop
sbb
repnz
jle
inc
adc
inc
jnp
dec
sub
add
std
scas
xor
iret
pop
or
dec
cmp
icebp
dec
xchg
cwtl
stos
call
jp
lods
lret
mov
push
cs
mov
scas
arpl
pop
dec
xor
xor
movl
cwtl
mov
test
iret
push
cmpsb
inc
out
ret
popa
adc
shlb
movsb
add
fnsave
dec
dec
outsl
push
sub
xchg
pop
bound
dec
mov
push
inc
push
out
imulb
rclb
loopne
jmp
add
dec
xchg
dec
ss
ljmp
mov
in
pop
mov
sbb
loop
lods
lds
rolb
jae
mov
sarl
aad
pop
sub
add
std
sub
fbld
test
cmpsl
xor
test
lods
cmp
repz
gs
sbb
and
movsb
jns
cwtl
jg
stc
fcmove
xchg
shl
adc
sarl
xchg
dec
adc
sub
mov
sbb
test
jns
cmp
scas
cmp
fiadds
dec
add
loop
inc
push
loopne
das
bound
ja
fisttps
shll
fistl
dec
addr16
or
push
pop
cmpsl
xor
pop
xchg
daa
aas
jbe
mov
or
cmp
sbb
mov
jmp
inc
cmp
imul
pop
dec
pop
jne
jle
scas
sbb
ret
or
mov
ds
push
js
dec
xchg
aad
jl
std
mov
mov
sbb
mov
mov
add
jp
rcrl
jae
out
ret
jl
push
mov
inc
rolb
sbb
jne
dec
dec
xor
add
ss
sub
movsb
push
bound
stc
fmull
inc
daa
insb
lret
aam
cs
ret
mov
jb
lret
ret
dec
fisubrl
or
lds
or
mov
mov
xor
jp
loope
mov
push
xor
adc
je
add
bnd
mov
cmp
sub
idivl
popa
or
mov
jp
leave
and
jne
xchg
in
dec
push
mov
inc
add
fs
outsb
addb
mov
test
cmp
xor
in
cmp
push
int
sbbb
mov
imulb
dec
xlat
das
mov
pop
lds
lock
ret
and
mov
xchg
jge
scas
loope
out
add
roll
add
stos
mov
mov
lahf
lods
or
xchg
or
pop
push
xorb
inc
bound
add
jbe
pop
pop
loope
mov
xor
inc
idiv
adc
add
ficoml
and
or
ja
or
ljmp
loope
out
jnp
push
addr16
push
popa
fcmovbe
cmp
insl
pushf
icebp
int3
aaa
mov
out
mov
mov
xchg
ret
mov
sbb
xchg
pop
mov
sub
or
cmpsb
xor
add
lahf
pop
mov
xchg
lahf
mov
push
and
inc
lret
test
sbb
and
sti
sbb
fstpl
lods
mov
mov
fidivl
add
rorl
orl
mov
push
xchg
dec
lret
ljmp
push
dec
or
call
lea
jns
loope
mov
in
insl
pop
pop
aaa
inc
fwait
lret
adc
jae
mov
pop
mov
pop
mov
addr16
dec
or
inc
rcr
int
into
xchg
jge
daa
or
dec
popa
cli
inc
cmpsl
dec
jle
dec
push
gs
add
jg
in
push
ljmp
xor
pop
pop
pushf
ret
push
fistpl
mov
lret
or
and
jno
sub
jge
mov
outsl
lret
push
fdivrp
inc
insl
sub
rcrb
ljmp
push
and
into
sbb
dec
pop
imul
lret
jno
call
into
nop
into
mov
mov
pushf
and
and
jl
repnz
pop
sbb
rcrb
mov
xor
out
mov
cmc
dec
or
mov
add
outsl
into
pusha
arpl
jae
sbb
sub
daa
sub
pop
xor
mov
out
in
xor
and
es
pusha
sbb
daa
fistpll
jo
mov
mov
or
stos
xchg
sub
dec
lods
or
cmp
mov
xchg
sbb
test
std
addr16
notb
std
lret
dec
cmp
imul
or
imul
stos
push
imul
mov
minps
pop
push
pop
fnstsw
psubd
or
call
cmp
sahf
andb
sahf
into
out
inc
pusha
pop
dec
leave
addb
xchg
cmc
jb
mov
cmp
int3
mov
std
lret
notb
mov
cld
push
cmp
and
shl
push
and
in
ret
orl
popa
sub
shl
cmp
fmul
icebp
push
fsubs
rorl
push
out
ljmp
jmpw
loopne
sbb
in
out
cli
inc
xor
lea
cli
push
push
jmp
xlat
mov
sbb
les
notl
sub
xchg
xchg
dec
loope
jmp
xor
dec
out
nop
and
pop
int
imul
sbb
sbb
cmp
into
pop
or
xchg
and
xchg
dec
pusha
add
dec
dec
sbb
test
lods
mov
dec
or
dec
aas
push
adc
test
adc
adc
push
rolb
icebp
pop
push
mov
mov
std
fs
es
mov
and
int
int3
daa
pop
into
orb
push
invd
jl
fisubs
mov
or
xchg
ror
lds
cltd
sbb
pop
mov
add
cmc
movsbl
dec
mov
out
sub
and
outsb
xor
mov
xor
or
xor
test
sbb
cmpsb
adc
push
pop
daa
dec
jbe
gs
push
or
and
in
aaa
scas
add
loopne
cld
clc
ret
cltd
rcrl
neg
mov
lahf
xchg
mov
into
repz
push
add
dec
and
inc
mov
shrl
das
adc
mov
xchg
push
aad
outsl
jecxz
leave
pop
clc
fwait
out
ss
sbb
out
imul
lret
pop
inc
add
pushf
iret
mov
pop
lea
icebp
movsb
dec
push
lds
dec
jbe
mov
pop
mov
cmc
out
repnz
iret
ret
adc
repnz
dec
mov
addr16
fmuls
cmp
aas
mov
in
nop
js
dec
xor
leave
in
add
jbe
rcrb
call
in
cmc
clc
add
push
jecxz
add
es
mov
cmp
cltd
sub
adcb
testb
cmc
in
in
les
leave
aaa
orb
lods
mov
mov
push
ret
mov
aaa
shr
sub
in
subl
inc
incb
sahf
mov
dec
nop
push
lret
mov
dec
xchg
incl
or
lretw
test
sarb
sub
mov
push
mov
sti
cmp
popa
sub
je
xchg
hlt
and
mov
movl
mov
inc
dec
idivb
add
movsl
mov
cmp
mov
pop
jmp
mov
fldcw
popa
test
cmp
insb
mov
push
ds
jne
mov
adcb
scas
add
das
shlb
subb
xchg
imul
insl
mov
mov
mov
mov
inc
mov
imul
push
es
ficompl
ljmp
cs
aad
pop
push
xchg
adc
xchg
out
cmp
push
add
xchg
or
or
cltd
fdivrl
jbe
pop
xchg
aam
adc
inc
jae
jp,pt
loope
repz
pop
inc
mov
jb,pn
mov
push
sub
jp
adc
ljmp
stc
out
test
sub
push
cwtl
loopne
orl
stos
outsb
int3
sub
push
and
fildll
aam
in
adc
aam
adc
mov
or
fadds
mov
or
dec
rcll
jmp
push
je
jmp
or
fwait
mov
mov
shlb
call
adc
into
fs
dec
insl
jno
aaa
push
xchg
inc
mov
es
aaa
adc
rorl
sbb
push
jb
leave
mov
mov
lods
push
outsl
cmc
ja
movsl
pop
aas
xlat
xchg
mov
mov
lahf
push
ja
lcall
loope
test
inc
in
loop
aas
aaa
mov
lcall
add
push
sbb
xchg
push
push
jl
cmp
ret
ljmp
inc
lods
subb
popf
push
sub
or
xlat
or
mov
mov
add
mov
jnp
xor
stos
pop
or
insl
add
mov
dec
sarb
push
leave
jp
jns
xor
or
add
cli
jle
shr
push
cmpb
loop
or
ret
inc
lret
add
popa
inc
inc
iret
sub
cmp
jmp
push
into
lret
lahf
xlat
push
mov
pop
mov
xchg
dec
repz
push
gs
loop
adc
jecxz
cwtl
push
das
test
jne
xor
mov
fidivs
je
lock
push
das
loopne
daa
sub
rorl
pop
nop
in
sbb
js
fmul
rcrb
test
adc
aam
ljmp
mov
pop
addr16
and
xor
fdiv
mov
xor
mov
and
dec
and
mov
xlat
bound
push
push
xchg
jle
mov
ret
add
lock
push
js
out
lods
ja
cli
mov
in
xchg
sbb
insb
mov
repz
sahf
pop
pop
and
shlb
arpl
pop
lock
inc
insl
out
and
mov
mov
cmp
jg
psubusw
push
sbb
data16
fwait
xchg
jae
test
bound
iret
jnp
les
mov
add
cmp
push
cmp
and
out
add
jae
mov
mov
idivl
stc
test
hlt
mov
jns
push
adc
mov
pop
stos
jecxz
icebp
shlb
lea
cli
sahf
push
xchg
lock
mov
mov
xchg
test
aas
fst
sbbl
shlb
insl
imul
or
dec
cltd
dec
inc
mov
pop
sub
repnz
fs
jno
fisttps
gs
ja
sbb
push
je
fnstenv
inc
sbb
add
scas
adc
pop
repz
js
adc
cli
dec
jae
js
inc
push
lds
sbb
mov
sbb
mov
pop
das
xor
jae
add
pop
call
inc
enter
repz
into
icebp
xchg
scas
cmp
sbb
pop
add
jmp
leave
loopne
cld
or
je
lock
push
sub
or
sbb
pop
lds
in
xor
iret
push
arpl
xchg
or
enter
stos
pop
mov
pcmpgtw
in
outsl
ret
jecxz
dec
dec
enter
xor
push
repz
jecxz
aas
mov
xchg
pop
xchg
dec
in
icebp
mov
andb
sub
arpl
jns
pop
jge
mov
in
xchg
ja
xchg
mov
jno
test
push
gs
cmp
gs
movsb
into
test
push
dec
cmovs
daa
in
mov
pop
nop
pop
test
pop
repz
sahf
out
mov
imul
pop
jbe
popf
lock
mov
adc
cmp
push
jo
add
cmp
inc
pop
pop
and
into
cmp
lcall
stc
cltd
sub
mov
push
mov
ljmp
rcll
sahf
inc
in
push
mov
and
push
ret
dec
mov
add
imul
out
push
or
lock
sahf
mov
sahf
mov
mov
pop
mov
sbb
call
int3
mov
mov
mov
xchg
cmp
xchg
dec
dec
sahf
div
jp
xchg
jp
outsl
dec
lahf
dec
jne
mov
cmp
js
lods
pop
cmp
adc
es
dec
xor
out
pop
inc
mov
lahf
or
push
jb
loopne
jno
nop
jns
ds
or
and
cli
xchg
in
and
add
sbb
std
inc
stos
jae
sbb
pop
stc
shl
xor
xchg
shlb
notl
sahf
xlat
push
cmp
lock
add
jnp
sub
add
xor
jecxz
jb
sbb
rcl
scas
adc
mov
jg
fdiv
inc
cmp
inc
sahf
jl
mov
dec
loope
sbb
pusha
aas
adc
add
mov
add
out
dec
in
pusha
imul
pop
sti
lret
pop
jbe
jnp
stc
pop
sub
mov
mov
mov
xchg
sbb
pop
adc
iret
in
inc
xchg
ud0
mov
aam
jae
or
sub
ja
sbb
jb
mov
sbb
xchg
loope
imul
pop
js
repz
into
movsb
push
cltd
std
adc
add
add
loopne
jae
jg
outsb
add
xor
negl
jmp
stos
loop
dec
jecxz
mov
cmp
mov
cmp
movsb
arpl
loopne
inc
and
xlat
or
push
pop
add
sti
jle
cmp
in
inc
dec
in
cltd
out
pop
jns
ss
mov
push
inc
jle
sub
ffree
stc
and
jge
dec
inc
scas
cs
xor
mov
in
sub
fs
stos
shrl
mov
imulb
lret
mov
mov
cmp
push
xchg
inc
inc
lret
jmp
shrd
inc
call
mov
lcall
jb
les
lock
rep
jns
push
sub
jle
xor
sti
fisubs
ret
cmp
cli
jb
mov
dec
jno
jns
fdivs
mov
cmp
pop
gs
call
lods
xchg
cli
and
add
cld
add
lahf
int
xor
addr16
or
push
ja
dec
mov
test
cld
test
lea
movsl
test
ja
jecxz
sub
cltd
sbb
fs
or
cltd
sub
lods
orb
outsb
push
arpl
xor
jae
cmpb
inc
jl
cmp
jns
outsl
jnp
pop
data16
adc
mov
aad
mov
call
sarb
push
andb
ret
sub
ljmp
adc
cmc
jle
in
out
cmp
jae
hlt
push
push
jle
dec
popf
sbb
push
lods
add
mov
adc
pop
xor
jns
dec
test
clc
lods
mov
mov
out
push
push
jb
sub
lahf
sub
and
inc
adc
xchg
mov
mov
ret
dec
xlat
ds
inc
mov
push
adc
sarl
pushf
push
xchg
mov
gs
cli
xchg
dec
mov
xchg
daa
xor
pop
push
cmp
and
insb
daa
adc
push
sbb
inc
lcall
sub
sub
imul
sub
inc
pop
push
flds
imul
or
push
add
add
sub
subb
mov
stos
sbb
sub
add
das
sub
popf
lcall
mov
ret
hlt
sbb
data16
add
rclb
lahf
push
jb
xor
daa
orb
fwait
insl
dec
sub
inc
sub
lcall
out
adcb
arpl
leave
sarl
jg
and
or
push
test
or
push
adc
fimuls
sbb
fwait
cmpsb
jecxz
dec
cmp
aas
adc
jecxz
lods
sub
in
cltd
push
pop
mov
xchg
xor
pop
jbe
or
jo
add
sbb
xchg
jmp
and
jp
mov
xchg
sub
outsl
sub
lods
xor
push
xor
loopne
and
jb
inc
or
fidivl
add
ljmp
add
adc
sub
mov
jge
xor
sar
dec
movb
jle
repz
sub
pop
pop
in
xchg
inc
dec
or
pop
cwtl
scas
mov
int
cld
clc
xchg
push
andl
shl
sub
dec
sahf
add
xchg
and
in
ds
adc
pop
lret
xchg
rol
mov
les
imul
xor
out
push
push
sahf
mov
dec
dec
mov
inc
or
jo
pop
cmp
lea
cmp
sbb
testl
and
add
sub
call
sbb
inc
fs
loop
pop
dec
js
decb
push
mov
cwtl
add
pop
in
mov
mov
adc
scas
push
push
add
mov
jecxz
cmpsb
jb
mov
ret
ja
or
ljmp
inc
pop
xor
xchg
jne
leave
xor
insl
push
pushf
cmp
idivl
stc
xchg
adc
arpl
data16
xchg
lods
mov
xlat
imul
push
jl
mov
fsubp
movsb
shrl
scas
push
jmp
and
hlt
pop
add
jmp
test
cmp
cmp
mull
cmp
out
sub
int3
xcrypt-cbc
cmpsl
shrl
mov
cmpsb
shlb
mov
sahf
or
pop
adc
mov
mov
out
inc
sahf
sub
orl
mov
push
cmc
lret
aas
push
pop
iret
cli
outsl
inc
cltd
jae
mov
out
std
mov
mov
lahf
and
inc
dec
xor
mov
or
mov
jmp
pop
leave
frstor
dec
adc
aam
mov
pusha
negl
lret
pop
scas
push
lret
or
mov
cmc
dec
mov
mov
jmp
xchg
addb
ret
or
cmp
movsl
test
xchg
es
mov
sbb
call
ret
lret
mov
sub
je
jbe
jnp
mov
inc
cmp
imul
fdivrl
mov
add
sub
sbb
pop
les
push
jbe
ds
push
sarl
adc
jne
out
jmp
addb
lds
ss
mov
scas
enter
ficoml
aam
push
andl
mov
hlt
add
jo
mov
lock
jp
mov
pop
pop
decl
daa
fnstenv
push
stos
aas
cmp
jno
repnz
test
push
repnz
jo
push
mov
jp
adc
pop
pop
xchg
dec
xchg
aas
fidivrs
fimull
jnp
outsl
rorl
test
add
cld
cmp
cmp
mov
mov
adc
fsubr
stos
fucomip
mov
mov
or
faddl
fsubrs
or
jbe
fsub
aas
pop
jecxz
bound
leave
push
jle
ret
xor
add
scas
xor
pushf
lods
xor
sub
sbb
dec
dec
icebp
out
ja
in
and
cmp
or
fwait
mov
filds
inc
and
push
inc
test
dec
outsl
mov
into
mov
xor
fwait
xchg
mov
jno
ret
dec
pop
mov
jmp
and
pop
scas
cmp
fcompp
lahf
imul
mov
jge
pusha
xor
dec
cs
nop
out
push
scas
lods
dec
and
aas
nop
bound
xor
fdivr
hlt
ffree
cs
arpl
push
sbb
sub
sub
add
push
push
xchg
mov
mov
jecxz
out
jns
fmulp
and
add
hlt
add
fs
and
or
push
cmp
push
cmp
pop
pop
lret
or
jmp
stos
cmpsb
cli
test
jns
aaa
addr16
cmp
call
dec
pop
insl
pop
popf
hlt
stos
fcomp
xor
aas
sbb
js
test
shlb
jbe
mov
lods
outsl
adc
add
mov
fisubrl
cmc
insl
outsb
jns
or
popf
loopne
cs
cmpsb
push
jno
orl
cmp
jp
xor
jp
xor
test
sbb
pop
ljmp
fmuls
jmp
add
es
testb
cmp
pushf
inc
imul
add
mov
ja
mov
loop
loopne
mulb
push
stos
mov
pop
dec
xlat
and
mov
nop
pop
jle
aad
xchg
push
add
pushf
out
or
xor
mov
stos
je
ss
enter
or
cmpsb
leave
or
insl
pop
lea
jns
pop
cmc
cwtl
pop
sub
mov
and
fs
push
loopew
xchg
cltd
lahf
xchg
or
into
call
out
std
push
mov
fwait
mov
xchg
ret
lret
fistl
scas
adc
inc
les
mov
dec
dec
push
pop
subps
dec
xor
sub
pusha
popf
imul
out
test
loope
xchg
push
xlat
aad
inc
dec
cltd
push
inc
into
ret
add
bound
icebp
shl
pop
in
jecxz
into
in
pop
sub
cmpsb
pop
mov
add
mov
std
cld
stos
in
mov
add
pushf
cmpsl
jle
xor
sbb
lods
add
pushf
lock
pop
jb
inc
popf
in
jge
insl
and
enter
call
out
pop
cmpsb
in
cmp
adc
and
jg
dec
push
lret
pop
sub
rcll
jne
scas
je
inc
mov
add
push
stos
inc
mov
outsb
jp
push
pop
mov
lods
inc
mov
mov
xor
insl
cli
fldl
andb
mov
mov
rolb
int3
cli
pop
enter
and
ret
sub
popf
test
pop
add
xchg
push
jo
push
stc
pop
mov
das
jg
jnp
add
dec
shll
cli
sbb
and
cmp
xchg
sub
bound
mov
aad
or
ror
push
inc
xor
movsl
insl
arpl
xor
mov
imul
mul
add
xor
jne
push
lods
add
lods
mov
lock
mov
movsl
mov
je
sub
inc
aas
or
add
xchg
inc
movsl
pushf
movnti
adc
loopne
insb
xor
mov
cmp
frstor
stc
jbe
jb
adc
add
pop
pusha
push
pop
int
stc
cmpl
jle
mov
mov
shlb
mov
adc
les
test
cli
xlat
xor
push
cwtl
pop
nop
movsb
or
shrl
call
cld
psadbw
loop
mov
mov
add
mov
lret
cmc
lahf
jbe
mov
arpl
push
sub
jg
mov
jmp
fwait
cmp
or
mov
shrl
jp
dec
sub
sub
les
mov
push
fildll
lods
sahf
out
adc
sbb
sub
sbb
mov
xchg
xorb
or
addl
in
jle
paddq
push
ja
pop
xor
jno
inc
add
loop
xor
and
inc
fimull
push
pop
stos
inc
mov
dec
daa
cltd
aas
add
dec
arpl
mov
sub
jl
std
stos
mov
fldenv
xchg
cmp
xchg
icebp
adc
cltd
aad
dec
adc
cld
arpl
loopne
xlat
push
pop
push
jno
jl
sbb
js
mov
in
mov
mov
add
mov
loope
sub
lahf
fnsave
jge
xor
fcmovu
fstl
addl
mov
sub
out
out
jmp
pushf
sub
mov
cmpsb
aad
popf
and
in
mov
shrb
xchg
repnz
arpl
mov
shlb
je
mov
xchg
xchg
cmp
lret
mov
cmp
lods
nop
dec
inc
xlat
in
movsl
pop
cmp
leave
es
inc
add
out
sbb
imul
dec
cmp
sub
mov
and
lret
dec
sub
mov
jecxz
jmp
stos
xchg
aas
sbb
push
ret
xor
jne
scas
jno
jecxz
in
mov
outsl
movsb
iret
mov
pop
jns
cld
scas
rclb
and
jmp
xlat
aad
pop
lret
add
and
sbb
jb
sub
mov
jecxz
mov
loopne
sbb
or
sbbl
pop
mov
fdivl
pop
test
adc
add
jnp
pop
mov
adc
mov
jo
jge
dec
xlat
ret
adc
pop
xchg
mov
mov
push
js
cwtl
fists
mov
fisubrs
scas
hlt
cmc
ljmp
ljmp
sub
or
mov
loop
mov
les
adc
in
push
pop
aaa
push
xchg
adc
divl
jb
rorl
test
adc
sbb
xchg
add
pusha
cmpsl
ret
shlb
add
leave
mov
stc
ss
sbb
fstl
rcrb
cmp
add
sub
xchg
shlb
pusha
movb
insb
cld
jno
aad
jle
xchg
inc
data16
adc
loope
pop
push
cmp
sub
adc
in
shl
inc
jmp
addr16
lcall
and
sbbb
inc
icebp
out
or
fbstp
adc
icebp
cli
fs
call
fmuls
xchg
or
inc
xor
sbb
in
cltd
push
xchg
cmp
xor
and
add
lods
and
or
cmpsb
jo
pop
jno
shlb
ja
add
and
in
out
cmc
xor
loop
sub
sbbl
and
xor
dec
rorl
adc
ja
mov
gs
ret
jne
in
fs
loopne
cmc
shl
sub
fst
sub
jno
pop
ret
movsl
xor
cmp
xchg
mov
lods
ret
mov
les
cmpl
cmp
xor
cmp
jmp
notl
stos
pop
inc
mov
pop
fildll
push
in
shlb
sbb
mov
mov
cld
adc
dec
adc
or
mov
iret
je
push
pop
sub
xchg
sub
ljmp
cs
lock
jmp
cmc
mov
jnp
lcall
pop
leave
rorb
inc
clc
dec
xchg
mov
pcmpeqw
pusha
push
lcall
loop
icebp
mov
push
push
mov
scas
pop
jns
movsb
mov
sti
sub
movsl
in
jae
test
nop
jecxz
es
mov
stos
sbb
je
repz
add
hlt
sarl
xchg
fidivl
stc
mov
xor
xor
loope
sub
and
xor
adc
outsb
jno
stc
xchg
pop
fidivl
xchg
lock
pop
dec
fildll
jg
jae
cmp
mov
add
ja
pop
xchg
adc
push
mov
hlt
enter
inc
movb
push
xchg
mov
jmp
mov
add
mov
add
ds
mov
xor
mov
leave
jge
sub
lds
push
inc
aad
ffree
mov
xor
and
insb
dec
mov
loopne
adc
cmp
add
jo
jg
arpl
sahf
push
stc
add
fistpll
sbb
dec
scas
outsb
jbe
xor
inc
leave
pop
xor
js
int3
js
mov
xor
outsb
sub
mov
into
xchg
sarb
sub
sbb
ud1
push
add
inc
sub
in
into
xchg
push
cli
lea
sbb
daa
lcall
test
loop
inc
pop
mov
mov
jg
add
lcall
in
mov
loopne
jno
jno
cmp
je
mov
outsl
loopne
xchg
push
shll
repnz
lock
or
push
les
hlt
cld
loopne
xor
or
mov
cwtl
in
cld
cld
jle
out
dec
xchg
mov
sahf
sbb
dec
iret
lods
jle
mov
mov
pop
je
in
sbb
pop
push
jae
inc
mov
push
mov
jmp
stos
shr
std
test
stc
cmp
ficoms
inc
pop
int
lret
mov
rorl
cs
cmp
ja
dec
test
adc
lds
das
int
fiaddl
push
in
add
sbb
dec
and
sahf
dec
mov
xchg
mov
cli
add
push
pop
sub
call
insl
mov
loope
dec
jmp
sarb
mov
imul
or
orb
scas
stos
mov
mov
int
cs
xchg
inc
dec
push
mov
movsb
push
jg
dec
loope
imul
fcompl
pusha
mov
in
lret
scas
cli
call
mov
insl
je
sub
int3
stos
push
in
out
clc
call
xor
test
lods
fsubr
xchg
outsb
scas
xchg
mov
rclb
movsb
mov
shl
jge
in
insb
add
roll
std
jle
pop
outsb
loopne
loop
or
sub
ss
mov
mov
cmp
dec
xor
in
aaa
xchg
loop
fisubrl
pop
ret
cmp
and
pop
adc
mov
and
stos
mov
ret
mov
adcl
out
push
test
mov
mov
push
cmp
aaa
adc
push
int
add
adc
in
decl
and
mov
rcrl
mov
pop
push
inc
pushf
mov
xchg
shrb
test
jne
cmp
pop
aad
mov
mov
mov
std
cmp
dec
mov
lret
jecxz
mov
ss
mov
sarl
sub
lock
xor
ret
dec
mov
sbb
lea
imul
inc
out
lcall
inc
xchg
jmp
mov
addb
sbb
push
xor
adc
push
mov
int
mov
adc
lods
out
or
dec
mov
xor
repnz
addr16
subb
imul
scas
push
sbbl
movb
mov
xor
rol
cld
xor
pusha
into
inc
push
cmp
repz
sbb
mov
test
out
xor
inc
rcr
outsl
adc
cmp
ret
mov
push
setbe
dec
out
jb
insl
int3
inc
out
jae
xchg
xchg
popf
xchg
inc
imul
jbe
dec
jecxz
mov
fnstenv
arpl
add
mov
ja
sub
fsubl
lea
inc
loopne
jge
aad
cmc
xchg
mov
leave
sti
popf
push
hlt
pop
loope
inc
cs
lds
and
sbb
insl
cmp
inc
shrb
adc
push
lock
aaa
iret
rorl
inc
jmp
fwait
mov
mov
adc
pop
push
andb
test
xchg
jmp
sti
xor
jo
xor
mov
dec
movsl
test
es
loop
adc
in
mov
lods
enter
jle
sahf
fnsaves
lret
xchg
je
faddp
sbb
shlb
cmc
push
popa
mov
popf
mov
fs
xor
xlat
lahf
test
jae
mov
mov
imul
fistps
inc
sub
fisttpl
pushf
xchg
repz
loopne
in
in
hlt
and
and
sub
or
mov
les
cmp
data16
outsl
icebp
stos
or
cmpsb
loop
jp
int
mov
ffreep
add
xchg
mov
fcompl
dec
shlb
icebp
mov
sbb
lcall
imul
mov
sub
cmpsb
sub
xchg
imul
mov
mov
shlb
lahf
aam
gs
push
dec
das
pop
fs
push
jae
shll
sub
pusha
add
pop
or
xor
std
dec
mov
jg
sub
adc
les
ret
test
pop
pop
adc
xchg
roll
mov
hlt
lret
iret
fisubs
orl
fucomp
scas
xor
push
add
sbb
mov
sub
push
fcompl
jg
movsl
ss
mov
pcmpgtd
push
sub
out
arpl
sbb
add
pushf
cmp
ret
lahf
rorb
adc
andb
add
stos
lock
jo
and
jae
or
sub
or
insb
jg
mov
cmp
shlb
sub
mov
jnp
aad
adc
lds
iret
cs
xchg
clc
adc
enter
or
paddb
loopne
int3
mov
out
leave
lret
cs
and
jbe
icebp
in
mov
inc
add
test
lahf
sub
push
sbb
jmp
ja
int
outsl
icebp
xchg
jo
in
pushf
dec
inc
movl
pop
std
jno
mov
cmp
cmc
rolb
lcall
push
imul
lock
cmp
lahf
dec
add
mov
pop
into
fmul
or
mov
bnd
aam
aas
lea
and
cmp
xchg
sbb
inc
add
fwait
dec
xchg
xchg
cmp
fs
aas
mov
add
or
stc
mov
fldcw
xor
mov
xchg
push
or
sub
jge
xor
inc
sbb
lea
cmp
inc
jp
and
icebp
xchg
ja
cmp
insb
jmp
xor
loope
lret
vmovaps
cmpsb
push
xor
js
sarb
scas
popa
dec
in
clflush
fistps
aam
sarb
push
cwtl
xor
mov
dec
sbb
daa
mov
fistpl
sub
mov
outsb
mov
mov
push
les
jp
scas
xchg
pop
mov
or
in
inc
mov
add
inc
movsb
ret
mov
sarl
test
lcall
je
mov
sub
sbb
rorl
push
in
xor
xchg
orl
xchg
pop
scas
mov
mov
push
pop
add
rclb
and
inc
dec
pop
dec
jl
ja
and
mov
xor
add
mov
dec
sahf
inc
iret
sbb
sbb
mov
fs
fiadds
rorb
sarb
fcmovnbe
cmp
movsb
pop
aaa
inc
lcall
mov
das
jecxz
ficompl
sbb
cmp
inc
je
out
outsl
pop
push
mov
in
gs
mov
scas
in
adc
aas
xor
das
jae
and
lock
jbe
push
stc
fsubrs
les
popa
hlt
dec
andl
gs
cmp
mov
sub
clc
mov
faddl
sti
in
pop
pop
int3
in
push
cmpsl
inc
movsl
cmpsb
addr16
jno
and
xchg
mov
mov
int3
inc
jle
push
dec
cltd
jb
and
bound
mov
js
jae
xor
mov
pop
jge
cmp
ficoms
faddl
daa
xor
aas
or
mov
sti
or
mov
in
cld
repz
xor
loopne
jns
push
pop
lret
lret
clc
std
imul
pop
in
insb
mov
sbb
or
or
pavgw
int
outsb
pushf
sub
or
pop
jle
xchg
inc
mov
sbb
orl
cmp
cmp
mov
filds
nop
mov
arpl
push
stos
mov
filds
sbb
adc
inc
pusha
lods
std
ss
or
movsl
adc
xchg
roll
sub
sub
lods
fxch
fwait
jnp
jl
or
mov
sbb
or
scas
mov
incl
sbb
fists
jl
jecxz
dec
adc
repnz
hlt
lret
fiadds
xchg
das
test
lock
pop
decl
dec
push
pop
xchg
jae
cmp
adc
fdivrs
pop
mov
lock
test
icebp
rclb
and
inc
cmpsl
dec
jo
or
cltd
mov
push
cld
jp
stc
mov
push
mov
mov
push
or
push
pop
xchg
dec
out
mov
scas
or
dec
ja
dec
jecxz
mov
mov
push
movsb
dec
das
test
pop
push
sub
test
sbb
pop
sahf
xor
aam
mov
add
mov
and
mov
sti
mov
into
sahf
xlat
pop
shrb
sub
fistpll
mov
xchg
aaa
test
in
cwtl
pop
mov
in
and
pop
in
mov
xor
adc
in
and
cmpsb
xor
add
mov
cmp
sub
fiadds
clc
push
lcall
and
pop
mov
notl
movsl
insl
adc
popf
mov
jo
jl
aad
ret
out
imul
lods
out
sbb
sub
repz
add
pusha
lret
add
push
pop
mov
cmp
cs
xchg
mov
cmpsl
or
imul
fcmovnu
jnp
mov
or
or
fldcw
ret
popf
cmpsb
repnz
and
les
shlb
jno
dec
out
mov
icebp
js
fwait
shll
fimull
mov
adc
and
xor
mov
sbb
adc
mov
push
cwtl
aaa
sbb
sub
xor
mov
outsb
mov
sub
clc
in
in
flds
jns
push
push
mov
or
adc
push
pop
pop
xchg
mov
ja
xchg
fstpt
rclb
cmp
adc
cmp
mov
pop
xchg
mov
xchg
pop
jb,pt
icebp
in
mov
imul
movsb
add
mov
xchg
push
cltd
dec
push
pop
mov
mov
addl
mov
pushfw
lods
imul
mov
pop
rcrl
cmp
jns
inc
lcall
inc
hlt
sarb
xchg
aam
movsb
and
popa
icebp
adc
push
into
mov
mov
pop
jb
aad
dec
add
or
ffreep
scas
adc
adc
popa
dec
and
dec
mov
or
or
add
insb
cmp
idivb
dec
outsl
std
jl
sarl
test
inc
mov
sti
push
js
jg
fwait
sub
pushf
and
pop
scas
loope
cmp
adc
push
outsb
mov
nop
sbb
sbb
ds
std
leave
xchg
or
test
out
and
test
mov
sti
xlat
ss
pop
mov
movsl
pop
mov
xor
or
xchg
gs
jae
ljmp
lcall
jp
out
bnd
insb
mov
cmpsl
aam
rorb
ret
aaa
mov
jmp
push
jle
pusha
orb
mov
push
fcom
mov
fidivs
aam
push
popa
inc
adc
fmuls
lock
xchg
dec
pop
push
sub
loop
jne
adc
icebp
push
dec
and
and
repz
stos
cld
add
int3
dec
lea
cmp
mov
sbb
dec
iret
push
jns
xchg
sti
jl
adc
xchg
cmpsl
shr
stc
repz
lcall
push
push
pop
lds
es
icebp
xor
lret
cltd
std
std
lods
jge
in
in
adc
push
repnz
rep
dec
lods
lods
xchg
int3
dec
dec
cs
cmp
pop
jle
adc
nop
enter
insb
adc
in
jno
movsl
cmc
out
ja
pop
push
pop
mov
add
or
loope
jo
sub
loope
shll
cli
add
pmuludq
jmp
out
mov
loop
xchg
rorb
imull
push
mov
push
pop
jg
add
pop
ficomps
adc
stos
inc
icebp
jg
mov
les
mov
icebp
add
xor
mov
inc
js
leave
iret
aam
sahf
xor
xor
add
in
inc
std
lahf
push
test
imul
pop
xchg
sbb
pop
push
add
rolb
dec
xor
jg
jmp
xor
push
pusha
mov
das
iret
iret
push
lock
fistpll
test
pop
outsb
cmp
inc
cmp
add
xor
inc
dec
ret
or
push
and
adc
or
shrl
inc
adc
ds
mov
in
repz
or
cmp
mov
decb
mov
pop
mov
enter
add
shll
das
jns
lcall
or
out
mov
add
ret
jno
out
mov
rclb
outsb
aad
push
mov
xchg
inc
xchg
loop
add
shlb
push
icebp
test
ror
daa
popa
mov
in
je
rcr
arpl
sarl
sbb
adc
fld
lds
xchg
idiv
cs
movntq
out
mov
adc
xor
push
cmpsb
in
push
sahf
mov
sub
adc
or
push
pushf
adc
add
fidivrs
jg
sbb
adc
fs
cli
pusha
pxor
rclb
xchg
stos
inc
ret
enter
pop
nop
clc
imul
leave
out
addr16
push
and
sti
jo
mov
pop
pushf
jl
insb
sbb
sahf
mov
adc
int3
ss
push
cmpb
push
dec
je
aad
mov
pop
pop
scas
pop
sahf
or
sub
test
test
mov
or
iret
mov
sbb
cmp
mov
sub
call
inc
test
call
data16
pop
icebp
xor
xchg
mov
arpl
mov
rolb
fnstenv
and
xchg
outsl
pop
mov
inc
mov
cmpsl
dec
pushl
movsl
pop
add
ret
sub
add
loopne
movsl
fisubrl
dec
ljmp
pop
xor
ficomps
mov
sub
movsl
insb
pop
xor
mov
mov
and
das
sahf
mov
cld
shrl
xchg
mov
into
pop
inc
sub
lods
ja
cmp
inc
push
mov
cmp
shl
stc
xchg
xor
xlat
xchg
psrld
xor
pop
into
dec
adc
out
push
adc
fldt
add
pushf
sti
dec
outsl
or
hlt
subl
lret
dec
arpl
in
test
and
or
test
je
pop
add
aaa
out
dec
cli
jnp
xor
add
or
aam
and
test
lahf
adc
movsl
mov
and
pop
imul
push
mov
sbb
xor
rol
push
cli
mov
xchg
in
shr
fldt
cmp
sbb
aam
stos
mov
inc
in
cwtl
add
push
xchg
les
pushf
cmp
sub
xor
mov
loopne
sbb
mov
icebp
xchg
cs
mov
adc
push
jne
inc
sbb
and
xor
cmc
lret
jle
and
dec
mov
jmp
push
test
negl
int3
pop
nop
xchg
or
adc
in
jge
or
mov
push
sub
mov
jmp
dec
add
xor
scas
add
loop
popf
xchg
mov
xor
fadds
popa
rorb
cmp
cwtl
pop
push
out
or
mov
or
push
xor
mov
pop
test
or
lds
xchg
cmp
aam
adc
pop
and
jmp
hlt
lds
mov
xchg
imul
cli
mov
stos
test
lret
jbe
add
ss
mov
adc
cmc
in
loop
mov
rorl
mov
jbe
nop
add
filds
and
cmpsb
push
sarl
cmc
shlb
inc
adc
cmpsb
ret
and
loope
xlat
pushf
call
jg
out
call
aam
push
fcoms
push
sub
mov
inc
mov
cmpl
xlat
pop
mov
cmp
ds
cmpsl
pusha
pop
sbb
fisubs
call
sub
xchg
sarl
enter
lret
out
sbb
aas
jae
xor
xor
mov
push
sub
cmpsl
jae
jb
mov
xor
xchg
adc
cmp
push
dec
test
clc
push
cmp
repnz
pusha
jns
adc
aad
mov
inc
mov
es
lret
pop
jbe
mov
lahf
cmp
cltd
add
add
into
fisubrs
pmulhw
mov
inc
cli
sarb
js
leave
jae
cmp
mov
xor
divl
fwait
mov
setno
cmp
scas
xchg
mov
push
push
incl
ds
aam
ret
push
sbb
clc
gs
dec
mov
test
xchg
push
cmp
js
enter
std
call
shlb
sbb
lods
test
andb
cmpsl
pop
data16
mov
jne
jno
sub
sub
pop
push
fistl
movsb
mov
das
adc
mov
loopne
fldenv
pop
scas
mov
cmpsb
popa
adc
daa
cs
divb
in
jo
mov
lcall
lds
cli
insb
dec
and
mov
rol
les
mov
cmp
cmpsl
pop
xor
cwtl
jb
add
stos
jo
mov
fs
push
lahf
cmp
subl
sar
loope
lods
inc
inc
out
mov
or
and
jae
jge
xor
scas
sub
sub
test
sbb
aaa
push
int3
shll
fisubl
fisubrs
out
fists
test
daa
push
push
add
cmp
push
sub
pop
and
lea
sar
or
add
outsl
pop
in
cmpsl
shlb
mov
imul
pop
pop
sti
pop
dec
inc
outsb
jecxz
enter
mov
or
sub
aas
imul
mov
cmpsl
jp
aam
dec
hlt
xor
xchg
lahf
out
fs
xchg
movsb
je
adc
xor
popa
inc
inc
filds
mov
xchg
rcrb
int
lret
lea
outsl
leave
jle
jle
repz
cmpsl
pop
testl
mov
mov
or
lods
lret
mov
xchg
add
pop
daa
outsb
out
push
bts
push
dec
cmp
popa
push
testb
pop
mov
ret
jg
popf
cmpsb
pop
popa
shll
aad
mov
aas
push
sub
addl
lcall
xchg
push
mov
jp
push
mov
push
std
mov
gs
jle
jl
push
mov
bound
mov
xchg
lcall
jo
mov
aas
add
jg
or
push
xor
aad
scas
int
stos
pop
jg
and
xchg
jl
pop
cld
mov
adc
jnp
cmp
dec
mov
ret
andl
loopne
ljmp
cmc
mov
loop
jge
mov
fdivl
les
int3
sub
cwtl
subb
sbb
out
shlb
les
inc
dec
mov
mov
cmp
mov
call
mov
or
lahf
aam
int3
pop
movsb
xchg
inc
sbb
lea
pop
sub
mov
imul
aad
lock
fistps
fildll
or
mov
mov
addr16
sarl
sub
testl
jl
xchg
push
or
orb
push
fldcw
enter
xchg
xchg
adc
aas
lods
jmp
pop
mov
pop
mov
dec
pushl
mov
and
aaa
mov
sub
mov
cmp
xor
mov
mov
incb
pop
adc
xor
or
cwtl
test
jno
sti
cmp
dec
cmp
push
jge
test
fists
and
adc
mov
std
fscale
or
fstps
sbb
pop
outsb
roll
xchg
or
or
arpl
mov
adc
xchg
mov
mov
adc
adc
mov
pop
push
mov
insb
add
pop
xlat
pop
xor
test
nop
fistpll
xor
enter
mov
andl
adc
inc
or
pusha
cltd
jae
js
or
xorb
test
pop
xor
cld
pop
div
or
inc
leave
jg
out
fs
lods
in
cmpsl
and
pushf
cmpb
adc
inc
mov
mov
inc
mov
xor
imul
cmc
addr16
jle
push
sub
sbb
repz
ret
mov
adcl
mov
movsl
mov
xlat
pop
lret
jnp
test
cmp
pop
mov
add
inc
fwait
xchg
xlat
repz
sbb
mov
insl
fs
adcl
or
sbb
aad
sub
ds
mov
shrl
jae
add
into
sub
adc
nop
dec
lcall
ret
mov
es
mov
dec
cmp
dec
test
rorb
push
xchg
jmp
dec
cmp
aaa
add
andl
int3
stos
cmc
mov
rcrl
add
pushf
push
rorl
inc
dec
ja
and
or
sub
add
sbb
mov
enter
inc
jae
or
push
cmpsl
aas
inc
jle
inc
mov
es
std
mov
adc
int
add
add
mov
mov
lcall
jnp
inc
dec
jmp
pop
cwtl
pop
or
stos
inc
inc
xor
add
nop
adc
pushf
sbb
xchg
pop
lods
adc
pusha
fistpll
sub
int3
sub
push
sub
stos
jl
out
leave
fs
sub
pop
sub
mov
mov
push
mov
mov
scas
cmovne
sbb
push
xor
xchg
sub
stc
out
leave
popa
add
add
pop
rolb
jmp
dec
scas
lods
cwtl
mov
inc
pop
int
bound
jns
pop
jmp
push
adc
pop
mov
rcrb
jp
xorl
mov
mov
test
sub
inc
push
mov
notl
jae
adc
std
xchg
popa
xchg
loop
bound
fldcw
jbe
mov
imul
repnz
adc
jbe
out
xor
jne
test
sbb
test
stc
xchg
mov
orl
cmp
jg
dec
es
mov
lds
cwtl
inc
xchg
sti
aam
sahf
cmp
ffree
adc
fdivl
add
sti
stos
add
loope
rorl
jae
push
xchg
or
fwait
data16
pop
xchg
std
aas
inc
xchg
sbb
int
out
add
lcall
insl
adcl
push
cmp
dec
loop
add
add
pusha
stc
daa
jmp
in
and
mov
fiadds
inc
cwtl
data16
popf
xor
lret
testb
lahf
dec
push
and
jge
push
je
gs
fdecstp
outsl
inc
popa
add
fistpl
cmp
cmp
and
jp
insb
cwtl
jb
dec
stc
ljmp
rol
push
pop
sbbl
dec
shrl
inc
into
sub
aas
pop
lock
mov
sbb
push
inc
mov
movsb
es
pop
cmp
jmp
mov
mov
jae
xchg
lfs
adc
and
cmp
lock
mov
sub
and
sbb
jecxz
push
xor
je
test
mov
lret
scas
aad
aam
scas
lock
inc
mov
mov
cwtl
test
insl
jmp
adc
pop
and
push
mov
popa
push
inc
int
adc
mov
dec
ret
sub
aad
outsl
sub
add
mov
fadds
inc
cmpsl
incl
xchg
cmp
outsl
in
addr16
test
repnz
popa
movsb
xor
add
mov
mov
push
mov
clc
stos
imul
aad
jmp
push
mov
lea
lea
jbe
mov
inc
pop
push
pop
std
inc
subl
dec
jb
ror
sahf
dec
pushf
or
cmp
repnz
add
testb
and
cmpsl
pop
push
scas
jno
mov
add
mov
test
pop
cs
inc
mov
fs
dec
jbe
jnp
jnp
push
fldl
or
pop
hlt
test
xchg
sub
pop
push
movsl
sbb
inc
mov
mov
decb
and
jl
js
inc
push
pop
jl
adc
adc
push
adc
stos
out
mov
push
mov
ja
or
push
pop
pusha
cmp
inc
lret
push
test
sub
loop
pushf
mov
popa
out
mov
test
shrl
push
dec
jmp
iret
push
fcmovbe
push
test
pop
pusha
ljmp
lahf
add
cltd
pop
ret
and
lahf
mov
pop
push
sbb
sub
jecxz
pop
jmp
mov
mov
mov
add
lahf
movsb
vaddsubps
lcall
cmp
dec
pop
popf
in
or
test
clc
daa
shl
mov
pop
push
adc
mov
cmpsb
xor
inc
clc
jns
icebp
jae
push
push
jp
pushf
arpl
sti
andl
dec
push
inc
scas
dec
loop
add
pop
jg
inc
jg
mov
pop
inc
dec
lret
or
and
jnp
jae
pop
call
xor
adc
xchg
cmp
xor
dec
js
cmp
mov
push
sub
pop
push
out
push
test
push
push
push
mov
addr16
pop
cmpsb
mov
mov
sbb
data16
out
push
adc
arpl
inc
add
and
movsb
or
inc
notb
push
sub
push
add
rolb
cmpsl
andl
mov
mov
ret
cmp
in
das
les
insb
addr16
stos
das
adc
rcr
nop
mov
cmp
in
in
pop
cmp
cmp
loop
out
out
cwtl
dec
mov
hlt
or
mov
je
inc
daa
sub
cld
and
sbb
jmp
pop
jmp
xchg
adc
popf
xchg
sub
dec
mov
ret
loop
sbb
cmpsb
mov
mov
push
jge
jp
xor
inc
dec
mov
out
dec
inc
iret
test
sbb
clc
adc
leave
in
repz
scas
mov
lcall
cs
xor
and
push
push
add
bound
adc
ss
mov
push
cld
inc
rcl
xor
test
jb
cs
addr16
mov
pcmpgtw
in
int
jne
cmc
fisttps
mov
xchg
jne
push
xchg
mov
xor
rol
test
ja
in
cmpsb
pop
cmp
push
arpl
cmp
leave
pop
lock
xor
fildl
and
das
xor
insb
aad
cli
xor
fildl
pusha
push
mov
xchg
sbb
jp
jg
bound
jmp
mov
ds
cwtl
mov
xor
mov
xor
loopne
xchg
stos
mov
xor
mov
xchg
jle
xlat
cmp
mov
dec
inc
out
jmp
adc
rcll
and
inc
xor
sub
cltd
cmp
lods
inc
pop
dec
fadd
sub
int3
pop
and
jns
cmp
push
mov
adc
jae
sub
add
iret
push
push
fists
jle
lret
popa
mov
neg
add
enter
aaa
sub
inc
xor
fldenv
repz
roll
push
out
jae
adc
mov
bound
les
xor
mov
arpl
sti
cwtl
adc
mov
loopne
fdivs
adc
sahf
cltd
and
out
mov
hlt
pop
mov
jmp
es
mov
cld
lock
inc
mov
pusha
or
pushf
sti
iret
nop
and
aad
push
add
mov
mov
lahf
mov
aas
in
sbb
pop
shll
or
mov
jnp
movsb
pop
xor
mov
pop
ja
subb
repz
mov
into
add
push
lods
aaa
lret
cmp
push
lods
mov
dec
dec
aam
lahf
mov
insb
sub
div
and
cmp
adc
inc
sub
fistpl
xchg
add
pop
push
leave
mov
add
cmpsl
imulb
movsl
inc
jecxz
push
dec
and
test
lret
shlb
xlat
cwtl
repnz
repnz
and
lods
inc
sbb
out
sub
lods
or
shrb
push
inc
jmp
sub
and
inc
loope
xchg
shll
xchg
int3
mov
or
xor
xlat
xor
sbb
mov
inc
addb
mov
test
in
mov
push
add
sub
adc
leave
roll
xor
mov
pop
sub
popa
movsl
pop
jb
pop
push
es
cmp
xchg
addr16
or
decl
pop
xor
nop
mov
je
inc
inc
insb
mov
mov
repz
or
adc
pop
push
mov
push
in
mov
inc
adcb
xchg
xchg
cld
lea
lock
ljmp
stos
inc
mov
push
cs
adc
fidivrs
push
mov
adc
jnp
rclb
pop
mov
inc
adc
cs
lahf
movsb
add
add
inc
sub
and
dec
jp
aad
jmp
sub
enter
push
and
jnp
fwait
negl
aad
or
lea
push
xchg
pop
ja
mov
lock
loop
mull
mov
add
sbb
imull
movsb
call
jmp
test
andl
daa
push
mov
inc
jle
call
nop
in
mov
push
das
jg
int
sub
cmc
inc
and
sub
test
mov
sbb
pop
mov
push
pop
lret
shll
push
or
rcr
mov
gs
ss
pop
and
xor
ss
mov
lods
test
adc
push
inc
bound
mov
pop
jmp
ret
inc
stos
shl
add
cmp
push
sbb
or
jecxz
jge
adc
loopne
fwait
incl
call
jmp
pop
aad
and
adc
mov
xchg
mov
push
jp
add
fwait
shrl
pop
cmp
inc
cltd
pop
or
movsb
subb
add
fimuls
fistl
popf
and
daa
int3
mov
mov
add
xor
dec
pusha
jno
fwait
pop
dec
jmp
enter
jmp
pop
popa
cmpsl
bnd
xchg
or
imul
cmp
mov
xchg
cs
movsl
cmpsb
test
xchg
jb
sub
jge
inc
neg
popf
addr16
ja
mov
sbb
dec
std
repz
cmp
icebp
insl
cmp
sbb
pop
arpl
rolb
lahf
stc
leave
or
mov
out
pushf
movb
push
ljmp
mov
out
push
and
jge
or
sbb
inc
gs
jae
sbbb
push
aam
shlb
push
cmc
inc
adc
mov
test
mov
or
fisttps
insb
push
jp
cli
cmpsb
mov
add
lods
or
inc
jns
rcr
cmp
stos
pop
jb
lods
mov
imul
jl
mov
leave
jge
leave
pop
cs
jns
out
cltd
test
or
mov
leave
jmp
inc
lds
xchg
movsb
mov
jmp
and
push
ret
mov
rorb
push
cmp
pop
std
pushf
ds
scas
xchg
add
dec
lahf
inc
xchg
pop
sub
arpl
adcl
add
mov
outsl
adc
inc
pushl
jl
pop
sub
cmp
shr
les
scas
gs
sahf
inc
pop
sub
fidivs
mov
fldl
inc
sbb
dec
int
mov
loope
or
in
pop
and
inc
jp
add
pushf
pop
stos
mov
insb
fucomip
icebp
shlb
dec
outsl
pop
shr
mov
loop
jb
shll
sub
faddl
js
dec
add
ss
int3
adc
mov
lret
pop
ja
sub
sub
lock
mov
movsb
cmp
inc
imul
fwait
jmp
aaa
clc
cmp
pushf
pop
jl
xchg
pusha
xchg
mov
adc
mov
and
adc
pop
mov
leave
cltd
and
add
sbb
xchg
in
in
loop
add
jecxz
ficoms
mov
bound
ss
dec
mov
cmp
add
stos
lock
fsubl
je
cmp
stc
push
nop
push
ja
test
push
rolb
xchg
aaa
iret
lret
dec
popf
movsb
roll
mov
pop
bound
loope
fwait
inc
je
dec
push
sub
adc
stc
add
idiv
int3
sub
mov
std
xadd
test
push
sub
push
sti
push
enter
add
jnp
mov
jg
cwtl
ror
fldln2
imul
xchg
xchg
jne
sti
and
add
push
je
push
data16
pop
out
sub
sub
lcall
gs
divb
sbb
and
add
fdivp
dec
lret
inc
shll
cmpl
mov
mov
jp
and
inc
xor
add
shl
push
testb
dec
repz
dec
loopne
fpatan
andl
push
mov
xor
ljmp
jnp
stos
sti
and
and
add
loopne
mov
xor
sub
ds
inc
jns
sahf
mov
jb
sbb
push
xchg
decl
pop
pop
push
jo
sbb
js
jecxz
popf
mov
loope
mov
cwtl
ss
pop
or
lds
out
mov
or
lret
jle
pop
scas
rcrl
add
loope
rep
jns
outsl
jne
cmp
pop
lret
mov
pop
loop
push
dec
pusha
call
ds
xchg
jecxz
mov
adc
mov
mov
add
lcall
insb
lds
mov
rorb
addr16
ds
cli
int
fdivp
out
adc
insl
loop
notb
sbb
repz
mov
into
dec
std
sti
push
lahf
in
or
les
jns
ds
sub
cmp
aas
ss
fs
and
mov
cli
fs
cmpsl
clc
pop
fadds
into
imul
imul
add
cmp
in
sub
lods
mov
push
and
loop
pusha
fdivr
jle
lahf
movsl
in
es
sarb
adc
test
mov
jecxz
mov
mull
sbb
mov
jp
inc
lret
ja
sti
push
dec
lcall
mov
data16
imul
out
inc
scas
cmovl
push
xchg
pop
lea
sahf
adc
repz
xor
add
sbb
xchg
sub
rolb
fisubl
pop
jmp
test
xchg
fidivrl
xchg
xchg
push
push
sub
nop
pusha
pop
mov
into
jno
loope
add
call
xchg
push
rorb
push
mov
ljmp
xchg
mov
jns
and
iret
push
mov
or
push
int
dec
add
loopne,pt
sub
fwait
lods
dec
push
inc
ljmp
daa
lea
lahf
sbb
lcall
cmp
imul
mov
mov
xor
add
jge
insb
dec
push
sarl
out
push
push
add
mov
repz
dec
in
loopne
jmp
adc
mov
sub
add
mov
mov
and
mov
daa
push
imul
pusha
movsb
jecxz
xor
dec
adc
aas
ljmp
aam
sbb
pop
dec
arpl
mov
mov
push
xor
jl
or
fdivrs
int3
mov
inc
adc
xor
sti
int
cli
jno
pop
mov
cmp
mov
mov
enter
dec
shrl
push
jns
imulb
repnz
loope
adc
imul
shr
ret
mov
int3
or
hlt
ljmp
ljmp
xchg
xor
ret
or
dec
loop
mov
daa
das
mov
pusha
lcall
fnsave
inc
pop
jae
or
and
in
lock
pop
push
jge
push
sti
xchg
sti
inc
test
dec
inc
add
sar
out
repnz
mov
jle
pop
or
mov
out
jae
movsb
popf
or
dec
subl
emms
stc
and
mov
pop
jl
push
in
loop
cmpsl
repz
or
es
adc
shll
add
cli
into
scas
sub
push
pop
pop
pop
ljmp
mov
pop
dec
xchg
pushl
pop
and
pop
scas
mov
push
xchg
dec
loope
popa
das
mov
movsb
cmpsl
aas
sbb
dec
jb
sub
adc
mov
push
add
push
cmp
ret
les
lods
cltd
shrl
lret
pop
jp
mull
add
repz
movsl
or
daa
call
fcomi
pusha
xor
gs
jg
inc
sub
aad
mov
loope
sbb
ja
cmp
dec
rcr
sub
sbb
sub
mov
cmpl
pop
stos
repz
aad
icebp
cmp
sub
je
jg
ret
test
imul
ljmp
push
jne
leave
mov
js
repz
add
sbb
fdivp
rclb
cs
mov
mov
mov
mov
push
insb
add
mov
dec
das
push
fcmovbe
loopne
shl
popf
push
adc
dec
xchg
in
and
jg
mov
pop
or
cmp
icebp
int
pop
push
addb
in
xor
adc
sbb
mov
pop
outsb
inc
cmp
popf
sub
adc
int
cmp
iret
aaa
mov
lcall
aam
mov
cwtl
or
cs
ficoml
scas
fisttpll
bound
nop
lods
and
adc
movsb
clc
mov
push
adc
in
jne
sbb
mov
rcll
sub
or
nop
add
pop
in
push
inc
pop
imul
sub
cld
jl
loop
push
popf
pop
adc
dec
adcl
sti
xchg
jnp
sub
lods
lea
ja
jne
fldl
fdecstp
jb
cwtl
pop
arpl
clc
cld
inc
imul
cli
outsb
dec
cltd
popf
inc
inc
js
mov
out
cmp
leave
push
jnp
test
dec
xchg
jbe
out
and
insb
jo
lods
mov
jp
or
sub
adc
in
popf
bound
sub
xchg
movsb
fnstcw
in
mov
aaa
mov
sbb
cmpsl
repnz
int
cwtl
rcrl
mov
ret
ja
movb
ud0
mov
aam
add
jae
cli
xchg
mov
daa
sub
pop
ficoml
jnp
mov
mov
mov
and
pop
je
inc
es
lahf
out
push
rorl
push
mov
jnp
popf
cltd
stc
pop
int3
sub
and
mov
sahf
mov
adc
mov
mov
mov
or
aaa
xchg
lcall
push
adc
data16
push
mov
mov
test
cmp
ja
xor
mov
cwtl
and
stos
movsb
pop
mov
scas
sahf
scas
adc
fwait
outsb
adc
mov
adc
push
or
cmp
bswap
jnp
movsb
xchg
in
scas
ret
pusha
jle
or
lock
mov
inc
add
popa
std
xor
jecxz
sub
rsqrtps
cmp
rcl
loopne
aas
mov
mov
inc
and
insb
ds
movd
out
or
in
stos
rorl
jp
sbbl
loop
stos
data16
dec
fisubrl
pop
push
test
and
mov
dec
int3
into
mov
test
xchg
or
add
movsb
ljmp
pop
fadds
lods
inc
insb
lahf
sarl
pop
mov
fmuls
out
push
cmp
inc
pop
out
pushf
das
lea
fwait
loopne
test
xchg
enter
insl
jae
cmp
pop
pop
sub
and
fs
cmpsb
mov
push
sub
pop
xor
cmp
xor
inc
and
fadds
xlat
pop
fidivl
leave
adc
pushf
inc
add
sub
test
addr16
mov
add
andl
mov
rcll
xor
rcll
incl
outsl
call
fsubrs
and
lahf
cmpsb
cmpsl
mov
jnp
insl
lds
push
mov
ds
data16
xor
sub
test
push
lcall
frstor
push
loop
mov
adc
jge
data16
sub
add
mov
sub
aad
andb
ret
test
int
pop
shl
sbb
mov
cmp
jmp
ds
jns
dec
mov
shll
enter
pop
jno
push
push
aaa
push
sti
push
ret
inc
popf
ja
sub
loop
fistpll
mov
std
push
push
mov
mov
into
or
aaa
xlat
shlb
pop
adc
push
adc
imul
movsl
dec
push
cmp
pop
repz
mov
repz
xchg
inc
add
jae
push
stc
popa
int3
and
sbbb
mov
ds
pop
cs
mov
ds
sbb
gs
inc
dec
sub
nop
fists
mov
inc
xor
jne
int3
test
cmpl
dec
mov
adc
rorb
mov
repnz
scas
orl
cld
test
adc
int3
fs
pusha
add
in
rclb
adc
gs
inc
mov
dec
xor
cmpb
cli
pushf
hlt
mov
xorl
inc
xor
lcall
xor
xor
xchg
in
mov
mov
fidivrs
jno
cmp
xchg
inc
push
cmpb
or
clc
and
xchg
add
adc
pop
test
jbe
cltd
jnp
mov
jg
sub
adcl
lcall
test
outsl
mov
cmp
jge
xchg
loope
lds
cs
mov
inc
subl
sub
and
nop
repnz
fidivrs
aad
add
addl
push
xchg
dec
cmpsl
cmp
dec
cltd
cmp
lea
leave
xchg
fscale
test
push
dec
das
mov
dec
pop
idivb
mov
pushaw
pop
cltd
shll
mov
shrb
fidivrl
inc
add
or
ret
daa
mov
daa
sbb
push
shlb
pop
dec
xor
sub
pop
adc
loopne
jecxz
dec
in
loopne
iret
ljmp
ljmp
pop
test
and
aaa
dec
sub
mov
push
sbb
pop
scas
dec
pop
mov
adc
cli
sbb
push
add
inc
mov
mov
pop
xchg
lock
add
pop
fcomp
out
mov
or
pop
or
sub
fidivrs
pop
mov
inc
mov
stc
in
fisttpl
xor
test
inc
inc
pop
jne
jg
mov
gs
and
dec
repz
sbb
push
shlb
fs
add
ljmp
xchg
iret
ds
push
cs
mov
jns
add
filds
cltd
lds
dec
sbb
pop
call
mov
scas
imul
aad
repnz
in
stos
push
arpl
push
inc
pop
adc
mov
or
aad
repz
icebp
push
cmp
xor
sub
or
cld
sub
lret
ss
outsb
sbb
mov
xor
push
dec
insl
out
insl
sarb
adc
push
cltd
dec
mov
xchg
lods
subb
add
outsb
out
mov
or
or
leave
das
cwtl
rorb
jno
and
sbb
sbb
push
shr
nop
hlt
ret
ljmp
in
or
adc
cmp
addl
aam
jmp
stos
loop
xor
xor
adc
sti
loop
into
pop
mov
xor
push
sbb
enter
jae
cltd
cltd
call
lods
mov
lretw
in
repnz
movsb
aam
iret
pushf
mov
lret
cmpsl
push
add
repz
cmpsl
ret
pop
lret
mov
outsb
xor
in
or
push
loope
stos
pop
fldenv
das
xor
repnz
xchg
imul
cld
ret
fistpl
ljmp
loop
jns
mov
andl
daa
shr
adc
xchg
stc
rorb
lock
in
int3
repnz
sbb
adc
cwtl
loop
pop
test
and
cmp
adc
add
sti
les
inc
mov
push
lea
shr
test
ret
jl
mov
ds
and
add
mov
bound
iret
cmp
inc
in
ljmp
movsb
inc
push
adc
xor
int3
test
shll
imul
clc
lods
repnz
call
sbb
add
push
adc
jmp
stos
shl
clc
mov
outsl
xchg
ffreep
call
mov
cmc
in
adc
push
or
jnp
xor
adc
push
inc
repz
dec
mov
shlb
jno
test
movsl
imul
scas
jns
or
scas
push
sub
adc
adc
inc
cmp
into
lcall
in
cli
stos
out
ss
push
mov
sarl
xchg
xor
movsl
dec
or
mov
dec
das
cmp
fisttpll
xor
shll
xor
fidivs
in
ror
mov
lcall
xchg
adc
add
pop
in
push
mov
out
push
adc
xor
sbb
jns
test
mov
jmp
add
insb
and
lods
lock
iret
xchg
idiv
cmp
inc
mov
and
push
fidivs
scas
je
aad
xchg
pop
outsb
int3
imul
inc
or
in
and
iret
fwait
cmpsl
jge
sbb
in
jo
mov
push
xchg
adc
stos
jl
pop
sti
pusha
loopne
push
inc
add
lahf
popa
mov
xor
popw
filds
adc
xorl
addr16
out
test
mov
shrb
jo
je
xchg
mov
repz
daa
pushf
popfw
adc
push
inc
sbb
fmull
pop
dec
or
mov
lahf
roll
lock
cwtl
fisttpl
sub
rorb
add
imul
fcoms
jle
outsb
pushf
sbb
or
fisttps
cmp
in
scas
mov
inc
inc
fistps
mov
shrl
imul
into
inc
sbb
popw
xor
push
jl
adc
aam
jbe
mov
xchg
mov
dec
loop
ret
mov
add
push
movsl
call
xor
xor
inc
test
mov
frstor
xchg
jb
dec
push
mov
lahf
cltd
lret
cmpsl
cltd
xlat
pop
adcb
ficoml
in
mov
add
hlt
sbb
inc
aam
dec
sub
sub
shlb
mov
cmp
mov
ja
xchg
and
jmp
sahf
dec
les
ret
mov
into
push
xor
xor
test
clc
and
jecxz
fnsave
inc
xchg
loop
sbb
cmpsl
sahf
push
ljmp
fdiv
rol
push
addr16
out
outsl
je
mov
pop
sbb
insl
outsl
jle
xlat
sahf
cmp
pop
jl
call
dec
inc
jecxz
or
test
inc
jnp
repnz
test
inc
stos
stos
rol
dec
and
ds
aas
adc
pop
scas
push
iret
int3
mov
int
out
xchg
lret
fiaddl
imul
push
out
mov
imul
mov
lods
and
xor
int3
roll
or
cltd
das
jg
arpl
or
sub
dec
ja
cmpsb
aam
xlat
mov
jbe
ror
loope
mov
clc
stos
int
adc
fstpt
hlt
stos
lcall
scas
fstps
cmp
dec
js
lret
mov
fadd
loope
les
divb
mov
push
popa
pop
icebp
add
or
or
cld
les
hlt
or
pusha
rorb
aam
or
ret
scas
jmp
mov
xchg
adc
jns
mov
test
cmp
push
aam
add
das
fwait
dec
pusha
aam
loopne
mov
push
lods
loop
or
mov
mov
aam
in
fdivrs
stos
int
mov
push
shrl
mov
xchg
mov
mov
popa
sbb
jbe
mov
test
fucomip
jne
lods
int3
out
push
xor
push
es
pop
inc
popa
sub
mov
cld
sub
sub
shrb
dec
ja
xor
dec
jo
in
jle
pop
lea
push
jbe
insb
inc
adc
aad
outsb
sub
mov
and
outsl
ja
jle
jl
call
fcmovnu
mov
into
enter
cmp
cmpsl
push
jb
xor
dec
shll
imul
xchg
lret
adc
and
je
add
sbb
pop
ljmp
pop
stc
mov
inc
push
enter
fimuls
mov
lods
lock
test
push
add
pop
stos
jno
pushf
ja
inc
cmc
fists
sub
inc
push
in
adc
popa
dec
jo
int3
cmp
pop
loop
mov
pushf
fbstp
inc
lret
lock
mov
mov
mov
mov
and
and
jno
xchg
in
mov
clc
dec
adc
mov
adc
pop
aaa
test
mov
add
shr
add
scas
and
jecxz
lock
inc
fstl
loop
sub
rorb
js
and
mov
add
xchg
push
arpl
ja
lret
aam
pop
xor
fimull
or
cmp
mov
outsl
mov
aam
push
aad
iret
je
mov
jb
xorb
pushl
mov
lds
xchg
addb
mov
test
jae
mov
mov
cmpsl
mov
cmpsl
and
fimuls
xor
iret
int
and
sub
xchg
inc
pop
push
push
sbb
mov
nop
xchg
xor
pop
or
and
loop
aaa
push
cs
jns
ljmp
cmpsl
or
test
ror
sub
cmc
cmc
pop
lea
pop
xor
movsl
mov
jns
test
push
xor
and
pop
cld
xchg
outsb
fidivrl
jb
mull
sbb
insb
jmp
cmp
scas
push
sbb
ss
fstpt
scas
fwait
cmp
pop
pop
and
and
jno
mov
inc
dec
outsl
jecxz
or
push
in
inc
pushf
push
jmp
mov
scas
or
in
scas
pop
push
fildll
sub
mov
add
rorl
es
pop
dec
sub
add
xchg
movsb
push
in
dec
mulb
shll
ljmp
inc
or
mov
sbb
sub
scas
jno
sbb
add
in
out
ljmp
stos
inc
aaa
pop
adc
xlat
jl
or
mov
mov
sbb
add
mov
inc
aam
push
xor
dec
inc
lret
hlt
jmp
pop
mov
cmp
push
cltd
and
ss
and
push
cmp
idivb
ds
ret
scas
or
mov
scas
dec
add
call
push
scas
inc
sub
test
mov
mov
lock
je
xchg
iret
mov
pop
jmp
cmp
add
sub
xchg
jb
cmpsb
add
leave
add
icebp
imul
cmpsl
or
mov
xchg
or
push
in
and
mov
xchg
clc
nop
icebp
insb
int
jge
push
mov
fmul
cmp
sahf
clc
popw
or
lods
xchg
pop
stc
ja
inc
jg
hlt
add
test
out
paddq
xchg
mov
xor
sbb
push
outsb
sbb
and
jl
sbb
mov
push
idivl
mov
cmp
or
xchg
jo
loope
pop
sti
mov
pop
das
xor
scas
pop
lea
std
test
test
jae
rcrl
add
jp
notl
and
jno
jb
stos
ja
arpl
out
test
push
aam
test
out
pop
jg
insl
inc
aas
insb
xchg
fwait
sbb
movsb
mov
adc
call
iret
xchg
into
xor
clc
pushf
movsb
inc
outsl
mov
fwait
push
mov
insb
test
xchg
lock
xchg
inc
cmova
xchg
push
lods
imul
loope
rorl
stos
dec
lods
push
mov
outsl
out
in
add
les
sbb
cld
sub
ret
lods
int3
pop
jb
xlat
jecxz
push
inc
lods
lret
pop
dec
sbb
pop
adc
ljmp
aad
mov
cmpsl
mov
sbb
das
ret
iret
lods
and
cmp
pop
movsb
cmp
push
lcall
lds
daa
xchg
lods
out
add
ret
and
inc
rolb
and
fisubl
xor
js
call
mov
mov
cli
gs
jns
imul
push
or
fadd
mov
nop
sar
cmpsb
ret
cmp
test
shlb
lret
es
lea
mov
pushf
imul
faddp
into
fs
ja
insl
jmp
jmp
fs
jmp
pop
adc
ret
out
std
stos
pop
loop
adc
movb
leave
jnp
xchg
adc
xchg
push
mov
loope
cmpsb
call
push
sub
data16
cmpb
lret
xor
rorl
loope
cld
xchg
icebp
dec
mov
lahf
sbb
xor
dec
lret
test
clc
xor
mov
pop
movsb
int
jmp
adc
int
mov
int3
and
add
jns
subl
insb
stos
mov
daa
mov
fsubrs
cmp
inc
jmp
fdiv
insb
in
pop
and
inc
mov
mov
cmp
mov
add
repnz
inc
sub
add
fsubp
mov
xchg
ljmp
mov
xorl
push
xlat
dec
mov
lret
mov
fninit
loope
lret
mov
inc
cmp
in
test
jne
cwtl
jl
inc
ret
ljmp
dec
enter
test
mov
out
dec
popa
cltd
cmp
mov
scas
ds
clc
adc
fdiv
pop
push
mov
into
repnz
push
dec
and
into
pop
mov
pop
ss
xchg
and
adc
or
outsl
pop
cmp
ljmp
mov
push
fisttpll
cwtl
xchg
loopnew
ds
and
mov
sub
out
xlat
mov
add
fdivrl
pop
lods
in
mov
mov
push
aam
arpl
outsl
dec
xchg
push
inc
mov
pop
imul
inc
ds
dec
cmp
cmp
shlb
pop
fwait
push
cmp
repz
fcos
mov
sbb
sub
jbe
mov
mov
ja
imul
mov
xchg
jno
leave
pop
sbb
xchg
mov
mov
lcall
lea
lods
sub
sbb
lock
inc
push
stos
negb
xor
add
add
aam
and
mov
clc
or
jo
pop
and
xchg
jmp
imul
int3
fnsave
aaa
test
nop
cmp
cld
jne
cmp
lock
das
pop
stos
lret
call
push
mov
insb
roll
mov
mov
add
icebp
and
or
pop
xchg
test
dec
ss
fistps
jge
push
xor
xlat
mov
ss
and
mov
out
ljmp
insl
inc
stc
cmpb
adc
add
cmc
icebp
and
jnp
popa
jp
subb
ja
inc
cmp
mul
lcall
lods
and
xchg
outsl
loope
sahf
dec
or
push
repz
movsl
ficomps
loopne
ret
lret
inc
lods
jg
cltd
cmpl
out
lock
shrl
dec
push
js
or
dec
inc
out
gs
mov
adc
sbb
adc
dec
lea
insl
inc
addb
jge
push
shr
stos
inc
insl
jo
mov
adc
fcoml
adc
sub
and
xor
fwait
and
cwtl
jp
in
jb
pop
xchg
pop
pop
inc
pusha
xchg
mov
aas
popa
test
and
sbb
sarl
pop
test
in
movsb
scas
jae
mov
xchg
jnp
pop
outsb
jecxz
out
data16
test
xchg
push
repnz
xchg
pmaxsw
push
popa
cmp
cmc
sti
jns
dec
lret
jmp
jle
inc
mov
and
dec
aad
pop
sbb
out
repnz
inc
or
data16
fsubrl
je
fdivs
icebp
fcoml
rorl
out
xlat
sbb
or
push
or
clc
fadd
fcomps
push
sti
xchg
les
stc
inc
lcall
jne
scas
fxch
cmp
inc
jmp
mov
repnz
scas
mov
xor
pop
sub
mull
cltd
xlat
cmp
stc
mov
mov
mov
lret
push
rcll
mov
push
fisubrs
pushf
ret
dec
jle
lea
sub
cmp
sahf
nop
mov
xorl
push
in
call
inc
js
add
sbb
dec
adc
mov
xchg
mov
out
xchg
imul
dec
mov
jne
fucomi
aad
ds
gs
xchg
mulb
mull
fs
dec
pop
cltd
mov
in
pusha
cltd
jg
jo
mov
outsb
mov
notrack
call
jl
int
adc
inc
inc
pop
sub
gs
insb
adc
orl
cltd
inc
int3
inc
icebp
add
add
mov
cmp
push
or
push
mov
jg
stos
dec
push
pop
push
les
push
and
or
push
xchg
jbe
dec
sti
idivl
mov
enter
test
pop
xchg
test
jno
mov
mov
testl
xchg
adc
xor
testl
nop
dec
out
out
push
jbe
lods
jae
sahf
lret
out
jmp
mov
lods
adc
outsl
jmp
imulb
and
cmc
add
cmp
cmpsl
adc
and
repz
cmpsb
test
lcall
jbe
dec
pusha
es
test
add
mov
dec
lret
mov
jnp
in
dec
rcll
mov
pop
pop
dec
inc
out
loopne
or
ja
xor
lock
pop
aas
into
or
outsb
jl
insb
call
ret
mov
jb
jnp
es
sub
mov
push
dec
imul
pop
inc
icebp
adc
in
pop
jnp
sbb
cmp
das
movl
cltd
ss
lea
inc
outsl
test
cmp
sbb
aad
or
xchg
adc
lret
xchg
cmp
push
int
push
mov
sti
stos
test
and
mov
dec
iret
gs
shlb
jne
aad
cmpl
cmc
orl
or
add
jbe
cld
xchg
jle
test
dec
bound
xchg
andb
clc
pop
fmull
jns
repz
jge
and
and
in
xchg
call
mov
std
notl
bound
mov
cmp
xor
xor
jg
mov
loope
cmpb
test
cmp
add
fwait
push
icebp
mov
pop
mov
cwtd
and
ljmp
mov
in
ficomps
xchg
jmp
xchg
je
out
dec
call
outsb
and
adc
and
lahf
orl
sarb
lods
push
in
dec
jo
dec
add
cmp
insb
scas
jge
push
mov
aaa
adc
xor
test
and
movsb
int3
sbb
xor
pop
lahf
or
rcl
mov
sub
ljmp
push
scas
ds
adc
ret
call
jg
or
dec
movsl
or
xor
and
pop
adc
sub
out
popf
insb
btr
and
inc
jmp
out
pop
inc
xor
mov
jae
shlb
mov
jmp
mov
dec
nop
in
jns
popa
mov
shr
mov
cltd
xor
mulb
lcall
in
dec
xlat
ret
or
xor
bound
mov
testb
pop
cli
jne
cmp
pusha
dec
cmp
mov
lds
dec
lahf
lcall
jb
adc
add
faddl
sbb
pop
mov
aas
lds
fldcw
or
ffreep
or
in
or
inc
inc
test
jo
shll
sbb
and
call
xor
push
cwtl
into
xchg
mov
jbe
loop
jl
dec
dec
jns
adc
cltd
ret
out
lahf
sub
sbb
xchg
cmpsb
mov
fcomp
mov
orb
ja
and
daa
movsb
mov
cld
outsb
xor
and
mov
sahf
outsb
mov
jmp
std
mov
push
mov
pop
fcoml
fistl
mov
xchg
xchg
bound
pop
inc
cmc
adc
mov
lods
push
out
cmp
lds
xchg
mov
dec
mov
pop
mov
sarl
hlt
dec
mov
mov
dec
xchg
testb
out
fucomip
stc
push
add
push
insb
xor
xorb
lods
mov
aad
dec
mov
out
cmp
aad
xchg
xchg
cli
push
xchg
xlat
pop
jle
add
leave
in
lods
mov
fs
call
test
and
lret
mov
push
or
orl
and
loopne
xchg
xchg
imul
xor
popf
xlat
sbb
or
loope
xor
jns
test
sub
into
pop
dec
emms
dec
add
or
dec
pop
push
cmp
imul
dec
sbb
aaa
and
std
cmpsl
inc
push
lret
push
jg
xor
ljmp
xor
xchg
out
inc
ret
pop
mov
dec
mov
test
jae
push
in
mov
in
test
test
lods
sub
mov
dec
sub
mov
nop
sbb
stc
mov
mov
mov
insb
inc
js
pop
in
fidivrs
daa
pop
nop
add
sub
jno
cmc
ds
dec
lret
in
mov
cli
mov
lds
mov
jg
sti
pop
roll
test
mov
gs
pop
add
jge
inc
outsb
xor
mov
scas
inc
mov
and
int
mov
clc
arpl
stos
cld
cmp
loop
leave
push
xchg
inc
cmp
std
movsb
push
mov
push
pop
jne
mov
outsb
cwtl
rolb
sbbb
mov
hlt
push
ljmp
and
out
push
sbb
das
dec
or
nop
jae
aad
loop
lcall
jmp
push
nopl
inc
push
iret
push
xchg
adcl
pop
nop
xchg
data16
lret
push
in
inc
loope
cmp
lods
cwtl
sbb
js
filds
lods
fldenv
fnstcw
in
sub
sub
scas
into
clc
clc
xor
mov
pop
xor
int
sbb
je
inc
pop
pop
pop
std
je
aaa
ljmp
xchg
add
and
xchg
fidivl
pop
jbe
dec
decb
test
xchg
sbb
mov
fidivs
movsl
ffree
mov
out
mov
in
or
mov
test
dec
and
lret
int3
stos
mov
dec
je
push
loope
mov
lock
call
dec
xor
pushl
pop
imul
mov
aad
mov
imul
add
test
stos
outsb
push
mov
nop
mov
out
jb
mov
loop
aam
mov
in
xor
inc
cmpsl
lret
mov
jns
enter
xor
subl
inc
sub
mov
dec
pop
cld
popa
cmpxchg
mov
or
push
cmp
mov
mov
push
test
out
jge
xor
add
push
mov
gs
shlb
mov
mov
mov
ds
sub
adc
lods
dec
loop
cmp
pushf
aam
loopne
enter
outsb
jle
ljmp
xchg
push
movsb
or
in
movsb
scas
jnp
sbb
cmp
sub
or
cli
cltd
adc
clc
jbe
out
ljmp
mov
scas
scas
int3
xchg
adc
push
cmpsb
add
outsl
add
xor
movsl
jg
sahf
fs
jbe
pop
sub
lret
sahf
stos
stc
insb
inc
mov
and
rolb
imulb
insb
add
add
inc
cld
movsl
movsb
ret
dec
dec
dec
mov
inc
push
pop
mov
data16
jl
orl
fmuls
out
mov
pop
pop
xchg
lcall
mov
out
outsl
testb
mov
or
sbb
mov
dec
js
mov
repz
outsl
cmc
dec
or
push
push
mov
in
filds
inc
push
xchg
jno
rclb
pop
mov
in
add
adc
and
push
jnp
mov
cmp
mov
inc
adc
sub
xchg
mov
inc
pop
push
pop
jae
imul
sahf
pop
mov
aad
jg
outsb
mov
cmp
gs
and
pop
add
cmc
std
push
popa
outsb
inc
iret
test
pop
aaa
push
rcrb
cmp
in
jae
rcrl
repz
xlat
in
or
data16
lret
leave
xchg
andl
lods
sbbb
and
leave
lret
jno
xchg
es
xor
add
xlat
mov
js
inc
mov
fsub
and
loope
cs
pop
into
dec
int3
mov
enter
in
mov
mov
sub
pop
add
ret
and
and
push
icebp
and
cmp
leave
outsb
adc
and
jne
or
mov
mov
xor
add
test
aad
inc
mov
flds
sbb
push
mov
pop
jp
test
inc
dec
inc
ret
xor
pop
in
sahf
push
xor
jnp
mov
xor
out
cmpb
xchg
fisubl
stos
in
gs
jns
push
jmp
xchg
lea
jl
sub
out
inc
or
sti
or
and
jbe
adc
sti
cwtl
mov
jo
push
idivl
jo
mov
mov
pusha
mov
inc
clc
int3
adc
push
add
addl
cld
mov
sbb
pop
mov
lea
and
push
fcoms
xchg
ret
frstor
ss
aad
jl
push
sub
mov
dec
push
clc
xchg
ja
not
insb
pop
scas
sbb
jo
or
mov
aad
loop
and
jmp
test
add
out
loope
mov
mov
lcall
sbb
ljmp
dec
xor
add
int
or
iret
and
call
xchg
pushf
orl
inc
sbbb
dec
pop
xchg
aas
mov
jno
test
dec
inc
dec
cmp
and
xor
leave
xchg
pusha
dec
out
psrld
fmull
add
shlb
inc
js
fwait
notb
out
mov
leave
add
xchg
aad
stc
inc
jecxz
and
add
dec
out
jno
and
pop
mov
or
scas
das
inc
jb
mov
sti
cli
cwtl
pop
pop
jecxz
movsl
adc
sti
incb
cmpsl
mov
stos
jl
sbb
xor
imul
inc
rol
sub
cli
addr16
cmp
or
push
js
int3
outsb
int3
xchg
xor
lea
xor
jge
add
mov
push
subl
and
loopne
mov
fsubrl
in
or
sub
adc
xchg
and
mov
hlt
cmc
cmp
cmp
jl
out
push
inc
das
aaa
in
outsb
cmpl
test
and
xchg
jo
jg
mov
rorl
mov
dec
xor
aad
daa
cmp
incl
lods
addr16
inc
insb
xlat
or
je
pop
scas
outsb
lret
fnstenv
push
out
jp
fldenv
add
es
aad
negb
arpl
and
int3
push
or
jmp
sbbb
cli
jle
dec
xchg
adc
jg
dec
push
popf
sarb
out
inc
icebp
test
js
cmc
pop
ja
repnz
or
jbe
imul
call
cmpl
sbb
dec
jb
lds
fiadds
or
movsl
pop
xor
popf
shl
fxch
or
arpl
cmc
push
xchg
add
scas
lret
mov
push
pop
mov
push
add
sub
lods
mov
and
cmpsl
mov
adc
into
mov
lcall
sbb
and
inc
cmp
jmp
clc
pop
andl
xchg
mov
pop
icebp
pop
cs
lret
fistl
daa
jo
dec
es
scas
dec
inc
enter
outsl
test
in
mov
outsb
fstps
jge
or
mov
lea
inc
ja
icebp
subb
fs
jae
js
adcb
add
xchg
fistl
xor
mov
mov
testl
mov
fisttps
adc
xchg
cmp
gs
mov
cli
popf
mov
imul
dec
cmp
ss
movl
cmp
jno
int
add
mov
cltd
scas
dec
pop
dec
aam
push
test
std
lds
test
jns
pop
data16
sub
xor
adc
cmpsb
lock
adc
pop
movsl
mov
inc
inc
ljmp
cld
pop
pop
sbb
pop
aam
ds
jns
cmp
jg
icebp
mov
adc
aam
test
add
adc
push
mov
xor
cltd
test
pop
in
enter
dec
stos
cmp
fs
scas
inc
or
inc
data16
lret
sti
ret
jb
loopne
das
roll
cmp
xor
and
sub
scas
cmc
add
mov
filds
scas
lds
or
rcrl
into
mov
std
stos
add
and
dec
test
dec
fdivr
jns
pop
pop
pop
repnz
sbb
les
cmp
mov
dec
mov
lahf
pop
or
cli
pop
fimull
cmp
xchg
adc
jg
mov
and
inc
xchg
pop
sahf
sbb
lret
test
shrl
stc
sbb
adc
mov
cwtl
add
mov
xchg
or
mov
mov
push
sbb
xlat
push
xchg
nop
out
jle
jnp
repz
and
xchg
dec
sti
add
insl
xlat
dec
iret
in
cmp
scas
ljmp
xchg
adc
mov
or
in
sbb
lret
arpl
add
mov
sub
test
rcrl
dec
or
sub
lea
xor
or
xchg
xor
out
ljmp
jae
and
mulb
rcll
sarb
out
cmp
lods
leave
xchg
xchg
push
cmpsl
out
fs
mov
push
push
ljmp
add
dec
cmp
into
pop
jg
lea
adc
mov
push
adc
jmp
add
ja
adc
mov
add
and
xorl
xor
cmp
popa
xchg
jl
daa
repz
xchg
cld
lods
adc
ss
sbb
or
push
mov
xor
ljmp
mov
or
sti
scas
mov
inc
jle
sub
xchg
jns
jne
inc
xor
xor
mov
insb
lea
jnp
aam
rcrb
in
cmp
xor
ret
sub
cmc
dec
inc
fucomp
dec
adc
call
out
aas
mov
or
mov
das
push
fs
adc
mov
out
int3
push
jnp
hlt
arpl
sub
push
push
xor
repz
ljmp
ja
jle
jbe
mov
lea
jmp
lea
dec
xlat
mov
add
lods
cmp
xor
sub
sar
adc
push
mov
mov
ja
mov
xor
repz
enter
loopne
xor
dec
cld
aas
popf
mov
out
movb
repnz
outsb
shlb
sub
test
loop
inc
testb
xchg
cmpsb
mov
pushf
or
mov
pushf
and
mov
adc
cmpsb
cmp
repnz
test
int3
hlt
inc
fldcw
mov
or
mov
xchg
sahf
xchg
aam
xchg
xchg
mov
and
js
xchg
adcb
xchg
mov
xchg
xchg
cltd
pop
pusha
outsb
fabs
xchg
sub
push
xchg
jbe
mov
loope
or
daa
ret
in
xchg
das
sbb
push
xor
in
mov
sbb
mov
addr16
mov
xchg
xor
add
pop
stc
gs
cmp
fwait
cmp
fdivrl
mov
les
sub
jmp
pop
mov
jno
pushl
int3
sbb
xchg
pop
insb
sub
add
dec
mov
testl
add
mov
cli
fidivs
and
arpl
insl
adc
pop
testb
pop
movsb
adc
xchg
daa
int3
and
fs
clc
lods
adc
push
out
jecxz
push
in
inc
lock
pop
inc
pop
mov
cmp
add
mov
dec
add
in
pop
popf
jns
cwtl
mov
adc
and
adc
clc
out
nop
sbb
jo
or
sub
ret
outsb
xchg
xorb
xchg
aam
pop
add
das
jns
cmp
jne
jmp
lds
arpl
push
icebp
sub
movsl
sbb
sub
xor
and
icebp
cmc
data16
sbb
jmp
mov
push
add
pop
inc
outsb
push
cmpsb
mov
ja
aad
inc
adc
xor
jle
cmp
push
fdivl
pusha
imul
mov
jne
dec
daa
dec
mov
add
es
xchg
imul
ljmp
mov
sbb
mov
in
cmpl
and
call
dec
je
xchg
xchg
push
scas
aad
popa
pop
inc
daa
scas
sub
not
jns
mov
imul
xchg
inc
js
icebp
in
mov
in
xlat
mov
push
lret
andb
adc
mov
lea
in
sub
sub
push
in
xor
cmp
test
not
mov
fs
sbb
movsl
jge
lret
mov
xor
movsb
jmp
pop
addb
jge
sbb
leave
xchg
popa
mov
fcomi
cs
pop
pop
push
aas
std
mov
push
or
stos
jo
mov
jge
std
inc
mov
out
stos
js
ret
sbb
cmp
cmp
rcr
xchg
and
inc
dec
shlb
adc
cmp
insl
testb
pop
sbb
rolb
pop
add
sub
fdivp
mov
and
xchg
shrb
loope
sbb
xchg
xchg
xchg
lds
ljmp
sbb
xchg
adc
subl
or
push
cltd
mov
lods
lahf
push
jmp
pop
icebp
aam
xor
mov
dec
mov
pop
jge
push
jl
lea
in
aad
mov
pop
movsb
ljmp
pop
jno
jo
mov
push
mov
fists
and
int3
or
xor
add
ret
loopne
inc
je
pop
sbb
xor
std
mov
jg
hlt
xchg
sub
test
adc
add
sub
insl
mov
and
lods
das
mov
jbe
xlat
fcomps
shl
aad
inc
adc
add
fcmovne
mov
sbb
mov
rcrb
push
imul
push
inc
dec
outsl
lea
cwtl
mov
dec
outsb
cltd
pop
cmp
push
nop
jp
push
mov
inc
fs
pop
nop
rcrl
lcall
ljmp
in
test
out
scas
rol
in
jbe
aaa
pop
add
out
in
or
inc
xor
dec
dec
fistps
dec
pop
push
jns
fidivrl
ret
cmpsb
push
inc
xor
in
ljmp
nop
int3
shl
das
mov
orb
add
outsl
push
add
pop
insl
movsb
push
jae
add
sbb
cmp
das
fidivrs
loope
leave
cld
inc
scas
cmpsb
inc
adc
fldt
mov
out
pop
lea
mov
aam
ror
and
mov
xlat
mull
mov
jg
push
rcll
cmp
sbb
push
jnp
out
aaa
out
ss
pop
in
mov
sub
or
es
outsb
xchg
ljmp
addr16
mov
xchg
imul
sub
add
mov
pop
mov
jle
fiaddl
and
rcrb
jns
xchg
push
or
mov
test
cmpsb
stc
sub
jle
push
mov
cmc
xchg
push
stos
in
aad
add
push
dec
je
inc
stos
sti
push
xor
mov
fiadds
pop
sbb
ret
or
mov
mov
cwtl
adc
jb
push
cmp
imul
sti
jg
shr
in
ficompl
cmp
stos
ret
lds
add
movsl
mov
xchg
mov
insb
jb
mov
fmull
out
push
sbbb
jae
lret
arpl
push
lcall
std
cmp
jbe
hlt
lea
push
add
rol
leave
adc
sbb
push
in
mulb
adcb
clc
add
cwtl
fwait
pmaddwd
dec
adc
and
push
jo
popa
out
jl
or
sbb
call
mov
xchg
cmpb
pop
inc
cmp
dec
jb
fsubl
sti
mov
shll
nop
xchg
pusha
aaa
or
adc
mov
sbb
dec
les
cmpsl
test
xor
mov
mov
pushl
xchg
andl
push
xor
pusha
test
xchg
jo
out
aad
jnp
inc
add
or
and
cmp
addr16
int
jae
ss
xchg
xchg
mov
inc
call
call
dec
jg
or
add
pop
cmp
in
testl
jns
lds
mov
pop
es
jmp
arpl
xlat
movsb
fisubrl
cld
int
xor
jp
aad
and
rcrl
and
jp
xchg
xor
cld
mov
ret
sti
adc
mov
pop
shlb
and
or
and
std
out
mov
rcll
lcall
dec
stc
movsl
cli
cmp
pop
jns
pusha
lods
sub
push
adc
stc
scas
jo
cld
pop
loop
pop
dec
inc
sub
sub
ror
cwtl
fsubr
pushf
ja
mov
test
inc
sub
add
inc
push
push
add
mov
popf
lock
nop
mov
cmp
outsb
cmp
mov
out
cs
sar
or
jo
ja
xchg
pop
roll
sbb
sub
pop
sub
adc
inc
out
pushf
inc
mov
lods
sub
cltd
inc
jle
cmp
push
xchg
sbb
mov
loop
les
fsubp
cli
or
pop
je
bound
mov
jg
jmp
mov
xchg
lcall
cs
pop
inc
test
pop
fcoms
leave
mov
mov
mov
lret
push
sahf
mov
jno
ret
jbe
sub
push
lods
movsb
xchg
mov
stc
inc
mov
adc
lret
outsb
sub
jb
repnz
sbb
jns
dec
pop
xor
xchg
imul
scas
mov
mov
mov
jecxz
aad
in
jmp
das
roll
mov
jb
jnp
dec
pop
dec
loope
or
pop
cmp
adc
mov
lods
pop
mov
aam
pushf
xor
xchg
aam
or
cmc
loope
push
push
nop
sub
shl
movsl
arpl
jle
xchg
push
dec
ljmp
popa
adc
mov
mov
into
push
mov
xchg
lea
jb
xor
icebp
emms
dec
jmp
fscale
pop
into
mov
rorb
aaa
xlat
and
les
leave
pusha
test
pop
mov
popf
hlt
mov
add
xchg
scas
sbb
andb
subb
add
scas
cmp
fsub
mov
add
inc
cmpsb
and
adc
lds
es
sbb
stos
shlb
add
cmpsb
pop
mov
out
mov
jle
inc
jecxz
es
aas
xor
ret
inc
inc
ret
xchg
fisubl
sub
adc
cmp
pop
add
es
loopne
mov
sbb
std
icebp
fsubrp
js
mul
shl
sbb
pushf
adc
icebp
sbb
cli
xor
int
ret
jl
aam
adc
xchg
shrb
iret
arpl
adc
jnp
cmp
cmpsl
push
inc
pop
ret
ds
lahf
jns
jp
leave
aam
sub
push
lret
push
into
movaps
adc
xchg
in
sbb
or
pop
mov
out
jo
mov
imul
xor
scas
hlt
orl
adc
push
mov
mov
mov
and
test
repz
sub
mov
add
dec
xorl
sbb
stc
cmp
sahf
test
int3
aaa
inc
aas
dec
xchg
mov
and
cmp
mov
int3
test
out
test
clc
dec
xchg
xchg
dec
mov
push
xor
or
aas
adc
push
rcll
int3
xor
test
in
fwait
andl
inc
jb
jmp
fwait
ljmp
dec
sub
cltd
mov
lds
sbb
xor
xor
ret
dec
mov
dec
adc
or
loopne
adc
in
arpl
inc
sarb
xor
push
mov
insb
lcall
jge
orl
inc
and
sub
jnp
lcall
popa
jb
pop
and
and
lods
out
inc
add
shlb
aad
ss
mov
fcmovu
rclb
inc
xchg
negl
cmp
orl
shr
popf
cltd
test
xor
ljmp
call
cld
shrb
add
cmp
jecxz
cmp
cmp
ret
jbe
mov
idiv
sub
dec
xor
movsl
pop
gs
push
pop
mov
jno
push
xor
xorl
mov
xor
or
xchg
inc
int3
push
inc
pop
sub
jmp
aaa
mov
lock
imul
inc
sbb
sub
iret
in
inc
mov
push
inc
mov
lock
adc
cs
fisubs
mov
enter
push
mov
fucomi
out
lret
lods
adc
gs
pop
adc
or
xchg
rclb
ds
sti
insl
cltd
mov
mov
out
xor
or
aad
repz
cmc
out
leave
pop
mov
add
les
xchg
call
cld
imul
or
push
loop
outsl
push
add
dec
mov
or
insb
movsl
enter
sbb
pop
mov
stos
mov
lods
mov
and
push
adc
or
inc
dec
xor
jo
cmpsb
or
sbb
mov
out
push
xchg
leave
jge
outsl
jne
jae
iret
imul
enter
mov
jo
inc
pop
incb
fmuls
pop
lcall
xlat
sub
sbb
pop
inc
cmp
das
mov
lahf
add
xor
mov
loop
cmp
pop
in
ljmp
loope
lcall
or
sbbb
xor
std
insl
fld
pusha
lods
xor
sub
xchg
xchg
imul
in
sub
cli
add
sbb
aam
push
outsl
mov
mov
xchg
fistpll
pop
xorb
xchg
push
iret
jmp
cmc
ss
add
lods
lods
push
jae
mov
stos
icebp
sti
je
stos
and
call
rcll
and
mov
xchg
xchg
jb
adc
es
scas
bound
movsl
xchg
push
xor
push
jmp
shlb
mov
movsb
mov
mov
push
sbb
stos
ret
mov
inc
repz
cmpsl
jl
mov
mov
je
es
call
xchg
xor
push
or
lds
es
test
pop
mov
and
shll
sbb
inc
dec
addl
ja
mov
inc
inc
cmp
lret
lret
lahf
adcl
out
adc
pop
mov
and
ret
add
ret
ficoml
clc
jae
mov
add
pop
sub
fiaddl
leave
rorl
ret
push
xchg
fistpll
gs
imul
dec
mov
imul
addl
lcall
mov
sub
jns
divl
gs
aaa
jne
pop
jbe
or
loopne
mov
xor
mov
xchg
and
jne
lock
and
or
sub
jecxz
dec
jmp
test
push
mov
add
cmc
shrd
data16
jl
pop
dec
ds
push
loope,pn
out
xchg
or
int3
aas
xor
loop
in
push
and
dec
adc
loope
test
mov
orl
mov
pop
xor
cmp
sub
push
aas
jecxz
pushf
fsubp
fnstsw
pop
out
rcl
pop
leave
mov
inc
sti
xor
iret
jecxz
sub
scas
loopne
cli
and
sti
push
shll
adc
ret
pop
inc
mov
mov
dec
jle
fwait
sti
pop
sbb
sbb
hlt
into
xor
int3
pop
adc
mov
xor
test
push
movsl
cltd
jbe
lcall
xor
add
shlb
popa
cmp
inc
mov
mov
repnz
ljmp
lds
lahf
mov
pusha
aad
imul
int
or
dec
pop
cs
mov
push
mov
daa
out
cmpsb
push
adc
and
rorb
jl
mov
dec
gs
scas
add
jle
pop
pop
adc
mull
data16
in
ljmp
sti
add
sbb
in
jne
out
cmpsl
loopne
mov
inc
mov
out
dec
and
test
adc
pop
cmp
out
aaa
cmpsb
ret
out
mov
jg
orb
sti
cwtl
testb
sub
cmc
mov
fdivrs
inc
and
xor
fiaddl
verr
mov
in
jle
push
rolb
in
inc
and
aaa
xchg
adc
punpckldq
ror
popa
repz
testb
ficomps
mov
pop
xchg
sbb
or
pop
aam
mov
sbb
stos
push
int
xchg
jle
stc
flds
adc
pop
adc
leave
mov
popa
pop
pop
stc
int
cmp
lret
je
daa
push
test
test
add
cmp
sub
push
inc
cld
ljmp
sbb
mov
stos
push
in
out
and
stos
mov
and
push
outsl
fwait
sbb
dec
xchg
mov
jge
dec
lcall
pop
ss
mov
add
cmp
filds
push
jns
into
call
jbe
rolb
js
add
add
cmpl
dec
decb
movsb
mov
cmp
xor
mov
cmp
aas
push
jo
sub
repnz
mov
test
cmp
aaa
movsb
stc
mov
out
cmpsl
sti
mov
imul
iret
insb
xchg
lret
dec
ds
mov
mov
sbb
or
cmp
cmc
in
loope
popa
hlt
fs
aad
mov
das
aaa
cs
mov
xchg
dec
ffreep
leave
je
pusha
dec
pushf
icebp
inc
pop
sahf
jne
leave
call
push
dec
insb
cwtl
mov
out
sub
adc
adc
sbb
shll
mov
jmp
lret
xchg
cmp
sub
shrl
imul
sub
lcall
adc
ds
and
cltd
pop
push
add
leave
icebp
les
sub
xorl
mov
testb
xchg
sahf
in
mov
sub
push
lret
adc
mov
and
dec
push
test
pusha
repz
sbb
popf
aad
sbb
popa
push
mov
enter
sub
mov
popf
sub
test
xchg
xchg
jns
pop
loopne
sub
ja
inc
int
sbb
sub
sbb
cmp
push
jl
jmp
or
xor
rorb
xor
mov
call
movsb
add
scas
fdivs
sbb
xor
mov
sub
decl
sti
mov
add
sahf
sbb
xchg
xchg
sub
xchg
xor
dec
fwait
and
mov
and
jecxz
insl
mov
mulb
xor
popf
mov
push
es
mov
push
stc
add
filds
cmpsl
jp
pop
sub
and
lcall
mov
out
loope
loopne
mov
outsb
and
cmp
and
repz
hlt
push
bound
dec
xor
in
add
or
aaa
mov
test
rcll
dec
rol
cmc
sbb
imul
xchg
add
adc
sub
add
adc
push
popa
pop
popf
sub
mov
lods
insl
call
pop
fs
mov
add
mov
xor
dec
sub
dec
jnp
push
push
sbb
add
mov
ja
lods
sbb
in
push
outsl
add
add
in
jae
stc
inc
and
orl
pop
mov
rorb
test
popa
das
repnz
cmp
out
jnp
dec
adc
sbb
addl
mov
push
cmpsb
push
or
lods
mov
iret
mov
sub
cld
push
sbb
fdivl
and
pop
add
imul
iret
jb
cmpsb
mov
push
bound
aad
xlat
cmp
xchg
mov
jae
test
movhps
push
mov
jne
add
jg
push
cld
test
jns
mov
mov
inc
adc
cmpsl
incl
push
mov
or
push
loopne
and
mov
sti
jmp
mov
dec
fidivrs
sub
sbb
sbb
fsubrl
ljmp
push
jbe
or
mov
stos
push
movsb
mov
add
arpl
xor
dec
or
aas
rolb
jecxz
mov
or
imul
dec
and
add
aaa
push
push
cmc
ljmp
xchg
fcmovnbe
sbb
mov
push
jns
idiv
ret
lods
jmp
xchg
mov
push
imul
lcall
xchg
xlat
jmp
testl
scas
fwait
mov
sti
push
popa
nop
and
mov
and
std
hlt
xor
fwait
call
in
leave
mov
jl
arpl
jcxz
scas
push
repnz
fsubrs
and
fmuls
add
test
xchg
fldz
fimuls
mov
sbb
xchg
outsl
movsb
dec
lea
fsubs
xlat
or
cmp
insb
mov
cmp
jp
jle
fstpt
ret
mov
jno
pop
sub
mov
fnstsw
and
fmuls
lea
outsl
test
xchg
sbb
adc
push
arpl
out
sarb
or
movsb
ret
out
add
scas
in
xor
bound
push
xchg
neg
out
scas
fcmovu
mov
or
xchg
pop
enter
or
out
lock
pop
push
push
xor
inc
rclb
add
xchg
xchg
xchg
stos
fldt
cmp
mov
mov
push
push
fisubrl
jle
pop
shr
sti
cli
shlb
pop
push
and
adc
or
add
inc
jns
imul
lret
inc
jo
mov
cs
xchg
and
call
dec
add
roll
lock
adc
loopne
lret
jmp
popf
call
cmovp
inc
jbe
adc
rcll
xchg
lahf
pop
mov
push
mov
push
syscall
test
leave
aad
add
xchg
loop
and
ret
inc
or
in
push
pop
mov
mov
shrb
cltd
insb
sti
outsb
push
jmp
ja
sysret
je
jp
lods
inc
aas
ja
push
bound
inc
ss
jl
add
call
jb
loopne
inc
jne
push
xchg
mov
gs
adc
or
cmp
into
sti
stos
and
jb
in
sub
dec
mov
dec
inc
dec
lahf
sarl
push
fwait
adc
pop
loop
lahf
jnp
sub
fiaddl
fs
nop
pop
lret
shl
movsb
out
mov
pop
mov
testb
dec
aas
xchg
cmp
push
push
arpl
dec
cmp
add
das
shl
in
xchg
cld
add
data16
dec
sub
push
pop
bound
sub
cmp
loope
les
dec
enter
scas
cmp
mov
xchg
mov
pop
addb
out
fwait
in
loope
mov
cli
jne
and
mov
fcmovb
sbb
adc
mov
outsl
xchg
lods
jmp
or
pop
and
hlt
data16
pop
arpl
push
cld
xchg
mov
and
adc
pop
inc
or
push
fistpl
inc
scas
xchg
push
pop
adc
cmp
mov
sub
std
ss
es
xchg
and
ljmp
sbb
je
in
ret
or
notb
mov
pushf
aam
ss
or
das
mov
jne
push
mov
mov
imul
loopne
arpl
scas
loopne
mov
clc
add
fisubrl
test
stos
jl
xor
fisttpl
jg
or
shl
rorl
mov
push
xchg
ljmp
push
jne
das
dec
jb
mov
jmp
jmp
add
jmp
pop
mov
and
rorl
mov
jno
push
and
lret
push
dec
loope
adc
mov
sahf
dec
fldenv
pop
mov
jno
xorb
mov
cmp
pop
mov
filds
scas
pushf
imul
sbb
adc
imulb
mov
jns
or
mov
sub
cmpsl
in
xchg
sub
ficompl
mov
inc
pop
loopne
call
int
jmp
cmp
push
adc
mov
out
imul
mov
inc
loopne
pop
sub
and
inc
pop
stos
mov
mov
dec
fidivrs
add
add
and
or
pusha
xchg
insl
jmp
test
push
js
mov
add
les
repnz
adc
mov
mov
dec
jl
pop
mov
mov
dec
ficoml
data16
push
mov
mov
jl
mov
push
jg
xchg
mov
les
out
test
stos
cli
ficoms
cmp
add
bound
xor
inc
loopne
fistpl
inc
jge
popf
outsl
push
inc
inc
sub
mov
dec
push
add
add
shll
lea
dec
jno
in
scas
test
test
mov
pop
subl
jnp
dec
xchg
mov
sbb
push
pop
mov
jle
jle
mov
push
movb
nop
inc
sbb
shll
std
cmc
stc
xchg
ret
mov
test
in
sarl
lds
sti
jmp
xchg
movb
test
insb
fiaddl
push
jo
jl
pop
in
sti
aad
loopne
cmc
cltd
ss
pop
sbb
fldl
data16
jl
or
jnp
xchg
pop
and
dec
pushf
jp
stc
call
cltd
adc
adc
mov
addb
push
test
lods
cmc
ja
jae
adc
es
fnstsw
addl
je
or
call
cwtl
jecxz
fwait
and
xchg
adc
popa
lds
mov
clc
mov
push
push
push
and
jae
pop
mov
sub
jnp
xor
xor
inc
mov
std
or
inc
push
loope
add
sbb
aas
or
sub
dec
sahf
sub
sbb
loopne
xlat
les
add
ds
sub
scas
pop
jecxz
fstps
insl
add
and
add
inc
gs
xchg
ss
in
inc
adc
leave
add
and
das
lock
scas
xchg
dec
inc
in
popl
in
loop
xlat
sub
and
je
iret
cmpsb
xchg
imul
je
sub
push
shl
stc
aaa
aam
ret
xchg
cmp
jbe
daa
mov
das
adc
test
ret
mov
push
pop
and
dec
dec
xor
aas
stos
sub
mov
cwtl
popa
mov
mov
mov
popa
es
in
scas
cmp
add
fcomp
aad
ljmp
orb
sbb
dec
mov
arpl
mov
in
ds
popa
mov
pusha
out
sarl
ss
mov
xchg
dec
cltd
fisttpll
inc
mov
mov
daa
inc
xchg
mov
xlat
jne
gs
jae
lret
inc
or
decb
pushf
aad
mov
jmp
movsl
adc
pushf
fistl
and
push
je
out
push
rorb
pop
fs
aaa
imulw
xor
push
outsl
cmp
cmpl
ljmp
adc
aaa
xchg
adc
popl
pop
cwtl
pop
je
cmp
adc
pop
mov
adcl
dec
add
pop
xchg
add
sub
add
fimuls
clc
inc
or
xor
mov
xorl
sub
outsl
cmp
imul
push
std
add
inc
addr16
movl
sub
fisubrl
icebp
in
pusha
icebp
stc
adc
mov
lret
arpl
notb
aaa
mov
sbb
mov
jecxz
ja
cli
lahf
mov
xor
adc
sbb
pop
addb
popf
scas
push
xor
outsl
in
xchg
aam
sti
mov
mov
jne
or
jno
daa
fsubrs
aad
push
pop
out
adc
cltd
test
je
adcb
add
xchg
das
push
xlat
jp
mov
push
add
mov
sbb
or
fiaddl
arpl
adc
ficomps
lds
sbb
fdivrp
cmc
les
and
sbb
pop
fsts
aas
add
imul
sbb
cmc
push
push
sbb
jp
push
or
cmp
adc
mov
adc
jnp
mov
mulb
dec
leave
mov
pop
stc
and
mov
add
movsl
push
jl
cmc
mov
in
pushf
scas
dec
dec
jno
sahf
les
insl
xor
sarb
das
mov
xorl
das
push
fsubrl
mov
pushf
inc
aaa
xchg
pushw
fcmovnb
aaa
inc
inc
fwait
push
xor
and
imul
into
nop
and
and
test
out
out
popa
xchg
loope
popf
loopne
add
sub
xchg
movsl
dec
ss
mov
adc
test
fcmovne
lret
dec
inc
lret
sub
nop
jnp
mov
in
orb
pop
gs
mov
and
repz
lret
mov
adc
add
stc
cli
add
fmull
imul
mov
mov
xchg
addb
incb
xchg
push
adc
xor
lret
push
popl
imul
dec
inc
pop
xchg
sar
cwtl
sahf
xor
pop
lea
xchg
fs
dec
mov
dec
call
ljmp
cmpsl
sarl
add
jnp
sbb
loopne
in
lock
sub
adc
das
inc
pop
cmc
sbb
cwtl
mov
push
aaa
dec
enter
jne
mov
pop
push
mov
and
push
mov
pusha
adc
mov
fsubrs
xor
mov
rol
pop
cmp
cmc
xchg
dec
adc
inc
mov
ss
xchg
mov
imul
stos
popf
jp
psllq
and
push
or
push
dec
dec
out
lds
into
sbb
imul
pop
lods
cmp
mov
pop
js
pop
fcmove
les
jo
stc
imul
fldenv
test
mov
cmpsb
mul
push
fists
jne
inc
les
pop
shrl
lahf
dec
shll
pop
stos
sub
in
mov
or
shl
push
in
mov
int3
pop
sbb
cmpsl
cs
stc
fcmovne
outsb
popf
xor
mov
insl
out
popf
fcoml
push
mov
imul
cmpsb
repnz
dec
popa
test
int3
into
int
dec
dec
lock
pop
mov
mov
aas
xchg
adc
add
loope
call
pop
fs
push
in
aam
stc
cs
xchg
aaa
in
daa
imul
clc
sbb
divl
enter
pop
jns
xchg
adc
cld
dec
fisubs
gs
movsl
add
hlt
lea
mov
div
cmp
xor
cmp
or
dec
pusha
adc
enter
cwtl
cwtl
test
sbb
imul
lods
bnd
dec
test
lock
sahf
inc
push
sub
xchg
add
test
cmp
push
imul
loopne
imul
cmpb
add
add
mov
or
xchg
and
loop
cwtl
lahf
cmp
push
les
xchg
jnp
push
add
mov
sbb
movsb
push
adc
mov
aaa
in
push
sbb
jae
push
cmpsb
jae
in
subb
sbb
sti
hlt
xor
and
lock
repz
push
inc
mov
insl
sarl
and
mov
mov
insl
shlb
in
jns
pop
jbe
shlb
jge
mov
push
aad
icebp
or
roll
pop
lods
cmp
xor
jg
ljmp
adc
outsl
jbe
rorl
cmp
adc
pop
pop
add
and
out
mov
test
lock
pop
push
in
psubsb
sub
pop
push
mov
mov
adc
sbb
cmp
sbb
or
jge
das
sbb
inc
hlt
push
inc
mov
popf
jb
jno
pushf
mov
mov
popf
push
out
push
mov
mov
loop
mov
mov
pop
sbb
push
pop
rorb
aam
iret
or
insl
js
lcall
dec
xor
mov
stc
mov
es
jnp
sub
jl
outsl
loopne
fcoms
inc
ss
leave
in
dec
inc
add
and
mov
xchg
insb
sbb
cmp
in
lock
or
aad
mov
shlb
sbb
inc
mov
sbb
flds
sub
push
ss
out
xor
xchg
ja
add
js
fidivs
add
cmp
cwtl
cmp
cld
sbb
jo
pop
lret
sub
pop
pop
lods
jbe
movl
or
bextr
push
jle
filds
into
push
idivl
xchg
pop
jo
mov
pop
loope
int3
cmp
sti
sub
les
jecxz
stc
or
std
xchg
lret
jnp
cs
lds
xchg
xchg
mov
sub
loop
es
sub
inc
and
scas
push
imul
jae
scas
add
cmp
and
cmp
pop
loopne
ss
addl
je
ficoms
mov
outsl
inc
nop
xor
mov
fidivrs
stc
and
xor
push
lock
pop
sbb
push
mov
popa
push
sbb
das
xor
loope
popf
jg
xchg
sahf
pushf
mov
ret
sub
pushf
insb
test
sahf
popf
lret
cmpsl
in
cwtl
mov
pop
cltd
pop
jmp
sub
fildl
or
outsl
int
pushf
fadd
add
mov
jb
jo
push
ret
addr16
push
push
adc
sti
adcb
cmp
mov
sub
stc
inc
jmp
or
mov
mov
pop
and
gs
sub
arpl
push
and
fwait
in
jne
stos
je
pop
lret
push
imul
popf
sub
fs
inc
jg
int
cmp
xor
das
inc
fidivrs
add
jp
pop
fldenv
in
aaa
fisubrs
mov
cld
mov
mov
lcall
ret
das
es
mov
dec
std
jno
xor
inc
mov
insl
push
adc
fdivrp
xchg
and
push
fsubs
repz
xchg
pop
and
movsb
adc
jns
loopne
pop
adc
push
cmp
xchg
lret
lret
stos
out
xor
mov
out
cmp
fidivrl
je
jb
pop
ret
sub
clc
or
sti
test
mov
mov
jnp
pop
stos
pop
lock
pusha
addr16
xor
add
push
pop
movsb
or
mov
fbld
push
adc
arpl
sti
inc
jne
mov
sbb
ds
lods
mov
push
nop
insb
scas
pop
push
testb
xlat
popa
inc
pop
aad
fbstp
mov
std
je
mov
lods
mov
frstor
in
mov
daa
mov
mov
loop
push
cmp
ja
xchg
pop
call
dec
rorl
mov
jp
ss
xor
jno
add
push
add
lods
xor
mov
out
and
inc
icebp
lahf
inc
jmp
mov
jne
sbb
sti
adc
andl
lret
call
enter
mov
stos
sub
in
fwait
or
mov
xchg
pop
aaa
test
test
das
pop
jns
mov
in
mov
cmc
int
repz
out
out
sbb
out
pop
and
cs
adcb
mov
out
enter
jg
mov
fistps
add
ret
push
call
push
pop
lret
fimull
hlt
in
add
insl
data16
add
mov
sub
mov
ret
jnp
es
mulb
insb
enter
cli
rorb
push
insl
xchg
stos
aad
push
xchg
adc
push
js
repz
and
dec
imull
push
sahf
imul
jbe
test
sbb
out
jle
aas
add
fadds
jbe
and
mov
sbb
jp
daa
stos
and
out
ja
sbb
int
gs
movsb
repnz
cmp
inc
movsb
cmp
mov
bound
xchg
lcall
jmp
push
adc
inc
inc
sbb
jp
push
ss
xor
or
sbb
lfs
adc
mov
pop
push
sti
cltd
and
es
adc
into
stos
mov
mov
jae
loopne
add
out
call
xchg
sub
and
sub
loopne
out
imul
sbb
xchg
outsb
xor
sbb
inc
xor
jno
cmp
js
cs
dec
mov
inc
cmc
sti
jl
mov
add
fstps
pop
pop
fs
test
testb
mov
inc
adc
in
and
cwtl
outsl
in
pop
and
int3
outsl
adc
or
add
add
dec
out
scas
test
cmp
das
cmp
shlb
je
data16
sbb
jp
cmpsl
dec
add
fld
ret
lods
dec
and
cmp
dec
cld
xchg
sub
cs
push
lock
aas
jl
out
mov
pop
pop
jb
test
mov
add
movsb
push
imul
pop
insb
divl
add
cmp
fs
cld
and
sub
and
xchg
enter
mov
test
push
pop
jno
jnp
gs
and
or
in
xor
into
fcoms
int
jno
inc
leave
jg
js
pop
push
arpl
mov
adc
jl
repnz
inc
fs
iret
sbb
add
or
mov
add
push
insl
push
ss
daa
xor
mov
shrb
xchg
cmpsl
add
xchg
and
loop
push
mov
outsb
cmp
lds
and
lret
out
fnstcw
dec
or
mov
out
cs
scas
cli
jns
hlt
fwait
int3
inc
add
dec
inc
in
ja
mov
lods
ss
dec
imul
and
cmc
or
sub
pushf
outsl
xor
or
fdivrl
mov
sub
adc
adc
mov
mov
add
shlb
dec
dec
in
lea
ficomps
jp
ljmp
stos
ds
nop
roll
jbe
pop
push
or
cmc
sbb
leave
push
xor
mov
out
loopne
ja
push
and
orl
je
outsl
lock
stos
push
loop
mov
ljmp
mov
and
call
in
mov
adc
mov
shl
pusha
lock
jbe
cmpsl
subl
aas
sbb
mov
andb
pop
xchg
pop
add
adc
movsb
xchg
xchg
cwtl
sbb
jmp
jmp
sbb
sbb
ljmp
mov
insb
push
ljmp
adc
iret
lret
je
and
xor
xor
adc
mov
push
sbb
mov
mov
add
and
std
pop
lret
lea
jp
sub
mull
popa
mov
pusha
jg
sahf
cmp
pop
ret
jnp
test
adc
jle
lds
neg
xor
mov
insb
jno
mov
cwtl
pop
popf
aam
lea
repz
loopne
pop
enter
mov
inc
stos
mov
in
out
or
push
outsl
lret
repz
std
ret
pop
lock
dec
data16
inc
popa
pop
adc
mov
adc
and
daa
dec
mov
push
mov
rcrb
lcall
mov
cmp
outsl
xchg
add
shrb
std
fwait
cmp
jne
mov
aas
mov
add
sub
dec
push
add
dec
repz
movsl
pop
or
xchg
and
mov
inc
cmpsb
cwtl
mov
pop
mov
cmpsb
cmpsl
cmp
and
add
adc
dec
lock
pop
cmc
movsb
sub
xchg
aad
mov
testb
inc
mov
xchg
ds
fistpll
add
mov
iret
out
std
mov
movsb
cs
adc
sarb
subb
std
sbb
jle
xchg
loop
mov
rcrb
aad
jns
aam
in
call
sub
rcrb
add
add
rolb
pusha
sahf
sbb
fnstenv
mov
mov
popf
and
xor
or
pusha
scas
jge
filds
test
lods
xchg
gs
out
push
test
mov
pop
mov
jbe
shrl
in
daa
xchg
jl
jb
xchg
mov
insl
or
leave
leave
pop
sbb
adc
ds
mov
inc
int
in
xor
inc
sub
add
cmp
add
rcl
jb
mov
sbb
aam
push
pop
test
jnp
inc
add
sbb
mov
ja
mov
rol
push
dec
out
cmp
aad
sbb
lahf
movsb
push
pop
loopw
cmpsl
cmpsl
cmc
mov
xor
imull
ds
das
mov
adc
or
lds
add
or
addr16
pop
enter
repnz
mov
xor
xor
sti
fs
fnstenv
push
hlt
mov
pop
das
frstor
xor
xchg
push
cmp
in
xchg
or
and
mov
jo
sub
inc
popa
sub
xchg
fmuls
add
lcall
pop
push
lds
fcomip
cmp
scas
rcll
stos
xor
add
jmp
fs
xor
imull
in
and
test
stos
adc
push
ljmp
sub
inc
push
sbb
call
add
pop
xchg
arpl
jl
pop
in
repnz
loop
adc
mov
sbb
out
nop
setnp
es
fistl
push
call
inc
and
xchg
popf
stos
xor
mov
xchg
out
jl
cli
mov
jbe
mov
test
ret
cs
sub
xor
jb
mov
dec
stos
cmc
adc
mov
pop
mov
dec
jg
ja
loop
mov
testb
push
dec
sbb
std
lds
xchg
es
inc
add
pop
arpl
fsubs
aad
ljmp
shll
xor
jge
mov
adc
les
les
imul
cmp
out
js
clc
rcl
es
xor
add
sub
mov
ss
mov
pop
icebp
adc
cs
ljmp
stos
xor
jecxz
jbe
push
or
mov
mov
and
mov
sbb
sub
mov
ja
aad
xchg
jmp
mov
pop
adc
ror
xor
xorl
cmp
test
adc
mov
add
add
push
jae
bnd
push
push
cmpsl
mov
lods
xorl
incb
push
es
stos
stos
sub
mov
xorl
fcmovnu
ficomps
cmp
jnp
in
lea
imul
xchg
add
iret
mov
push
jns
bound
xor
or
jmp
mov
les
jp
mov
ss
insl
sub
dec
rcll
arpl
loop
and
cmp
lds
daa
in
jmp
jp
inc
arpl
cmp
jnp
jmp
dec
push
xor
mov
and
inc
inc
fs
dec
std
int
dec
ret
lcall
push
inc
cwtl
mov
jns
addr16
mov
lods
mov
xchg
dec
add
mov
push
int3
mov
mov
shr
jb
cli
into
rcrl
fwait
cmp
jmp
imul
cwtl
jb
xchg
or
cmc
aad
inc
dec
testl
push
in
aad
sub
sbb
pop
in
mov
push
mov
xchg
sub
leave
popf
gs
es
test
xchg
xor
sahf
push
add
mov
mov
pop
scas
xor
pop
dec
scas
nop
into
cmp
js
pop
fsubl
ret
scas
mov
sahf
sub
jo
das
jae
pop
add
dec
jno
jecxz
std
xor
sahf
mov
fstpl
jae
leave
mov
out
or
test
aaa
pop
add
sbb
f2xm1
xlat
adc
cs
sbb
fadds
imul
mov
gs
pop
insl
leave
jb
pop
in
jno
ror
mov
sbb
and
push
cmp
cwtl
mov
mov
ficomps
mov
repnz
mov
loope
mov
push
mov
jo
dec
mov
or
call
js
jb
adc
and
push
jg
stos
rolb
idivb
or
gs
adc
jbe
das
dec
add
sub
call
outsl
xchg
pop
and
jno
divl
mov
ret
xchg
gs
and
sbb
bound
jno
fsubs
dec
repz
das
aam
adc
stc
add
sbb
cmpsl
pop
jno
mov
pop
subb
insb
out
negl
inc
sub
jmp
cmp
push
mov
jmp
inc
push
shll
push
lret
std
push
jo
sarl
dec
ljmp
lock
pop
add
scas
mov
mov
int3
rcl
and
sbb
aas
pop
je
add
adc
mov
and
les
enter
scas
ret
inc
and
fildll
daa
mov
cmp
addr16
mov
int3
dec
mov
add
insl
sbb
xchg
inc
es
test
dec
xchg
ljmp
cmp
xor
rcrb
jle
pop
hlt
ret
das
jns
xchg
je
add
popa
dec
subb
into
sub
jb
daa
cmp
inc
xor
scas
cmpsb
mov
adc
adc
push
cwtl
outsl
mov
xchg
jg
out
hlt
fldt
test
adc
mov
and
clc
daa
mov
incl
data16
outsb
xchg
fs
js
inc
fistps
sub
xor
loop
sub
inc
mov
and
and
sbb
cs
push
push
or
outsb
insl
stc
pusha
and
add
fucomi
movsl
jl
mov
inc
daa
pop
push
jecxz
pop
mov
jmp
movsb
lret
xchg
rorl
insl
sbb
aam
add
ret
scas
imul
ficoml
lahf
outsb
pushf
pop
fiadds
mov
stos
pop
rcl
mov
and
clc
or
push
hlt
jg
push
mov
mov
shl
orl
ja
sub
lret
and
pop
test
dec
mov
cmp
movsb
repz
call
mov
into
mov
enter
mov
inc
test
inc
jg
addl
in
sahf
cld
or
mov
fstp
jae
lods
popf
imul
clc
or
cmpsb
cld
xchg
or
mov
hlt
jnp
out
and
xor
loopne
cmp
pushf
roll
call
fadds
je
cwtl
aam
and
adc
lds
pop
adc
repz
push
sbb
call
andb
cmpsb
sbb
clc
mov
rolb
insl
and
cmp
jb
add
mov
adc
inc
in
lcall
jle
sbbl
dec
adc
es
mov
inc
push
movsb
or
adc
pusha
sbb
pop
xorb
aam
mov
lods
lock
pop
mov
pusha
mov
push
push
aas
mov
les
orl
aam
or
push
or
jne
int3
jne
mov
cmc
mov
mov
xchg
std
cmp
sbb
mov
pop
div
sbb
loope
bound
aaa
inc
dec
ds
mov
dec
subl
add
rclb
test
add
lods
leave
sub
fisubs
mov
or
sti
imul
mov
jo
mov
mov
jae
mov
out
mov
mov
test
ja
mov
push
inc
js
arpl
adc
mov
movsl
repz
rcll
mov
mov
sbb
aam
imul
mov
lret
in
je
test
imul
push
rorl
adc
cltd
mov
pop
mov
add
lods
loopne
aam
or
data16
cmc
pop
shrl
mov
fdivrs
sub
mov
popf
adc
cmp
pusha
or
xlat
sbb
cmp
es
mov
sbb
jbe
mov
jo
xlat
stc
repnz
out
mov
adc
mov
or
ds
test
cltd
imul
xor
dec
dec
ds
adc
sbb
int
xor
iret
xchg
sti
dec
aaa
pop
jmp
cwtl
sbb
lcall
add
jnp
push
inc
pop
jmp
jecxz
test
test
mov
pop
xor
lods
inc
loope
xchg
aaa
das
std
cmc
cmp
test
fildl
movsb
pop
das
mov
pop
cmc
pop
sti
jmp
sarb
bound
and
sarl
pop
subb
adc
cmp
test
lret
fwait
jbe
mov
xchg
cli
pop
adc
push
out
sahf
rclb
js
jg
pop
xchg
jecxz
outsl
daa
stc
ret
jmp
cmpsb
je
std
or
lcall
imul
fwait
mov
jae
ret
cltd
push
sbb
data16
jno
pop
jno
fptan
dec
fidivl
sbb
xor
or
arpl
push
inc
test
jae
sbb
addl
lcall
ljmp
js
adc
mov
fisttpll
data16
jmp
jmp
imul
shl
jo,pn
push
mov
movsb
sub
ss
stos
adc
fs
pop
jnp
movsb
pusha
les
mov
pop
std
lcall
lock
mov
jg
inc
jns
pushf
jo
push
ss
adc
fwait
lcall
mov
aad
test
xor
lret
roll
daa
xchg
das
and
outsl
data16
add
jl
in
cmp
xor
out
xor
dec
popa
xor
test
call
out
ds
movsb
out
xchg
dec
xor
out
data16
xor
dec
cli
cwtl
cmp
xchg
inc
cwtl
sub
scas
or
jns
jno
adc
xchg
jno
repnz
inc
dec
out
inc
cmp
inc
int3
gs
cmpsl
icebp
ret
das
cmp
sti
gs
data16
sub
inc
fistl
inc
aam
add
dec
and
mov
aas
xchg
dec
mov
sub
adc
fbstp
or
xchg
aas
sub
fiaddl
pusha
cmpsb
mov
push
and
mov
int3
mov
addl
and
pop
adc
sarl
fistpll
popf
mov
pop
mov
xchg
fistpll
or
scas
push
push
push
cs
sub
sub
sbb
xor
test
lods
popa
fstpl
mov
aad
mov
loopne
push
mov
je
out
mov
out
jmp
cmpsb
outsl
pop
and
or
xor
push
enter
lret
jne
jb
les
mov
mov
les
inc
repz
lods
sbb
and
movsl
inc
sub
pop
sbb
shrl
ret
outsl
cmp
mov
bound
inc
cmpsb
adc
mov
shl
ficoms
mov
jns
mov
dec
add
cmp
mov
movl
cmp
insb
xor
add
inc
xor
mov
pop
dec
int
out
mov
pop
ljmp
out
out
iret
or
outsl
test
sub
pop
iret
mov
inc
push
xchg
or
xchg
mov
or
outsl
or
es
jmp
mov
les
mov
loop
insl
cwtl
icebp
xchg
jo
push
call
inc
push
add
lret
cmp
add
int
dec
outsb
mov
pusha
mov
scas
addr16
repz
dec
xor
dec
inc
lock
and
inc
mov
test
jb
ja
inc
es
jl
jae
or
adc
sbb
fnstsw
lods
out
scas
add
jo
shlb
arpl
mov
int
dec
adc
jecxz
push
cwtl
jb
mov
mov
pushl
sbb
test
movsl
arpl
xchg
push
fisttpl
mov
pop
xchg
push
xchg
lds
cmp
xor
jge
shll
xchg
mov
inc
mov
jns
mov
mov
pop
movsb
push
inc
call
in
push
and
and
lock
fistl
sahf
or
pop
push
arpl
out
repz
mov
gs
dec
mov
cmp
jns
xchg
cmpl
sub
hlt
pop
cmp
and
or
jg
mov
push
loopne
aad
jmp
addr16
xorl
into
adc
test
mov
faddl
lods
int
repz
movsl
push
mov
fnsave
and
out
xorl
pop
sub
pop
xor
cmp
fildll
sbb
imul
mov
scas
out
jl
cwtl
popa
ds
jmp
test
mov
pusha
arpl
sbb
outsl
insb
test
jno
popa
adc
test
lea
insb
sar
test
add
jl
push
xor
mov
fdivs
ds
mov
in
or
in
mov
adc
fnstenv
inc
insb
cmp
xchg
mov
mov
pushf
jmp
push
cs
inc
loopne
sbb
idivb
and
mov
or
xor
enter
mov
aad
into
pop
mov
cs
mov
insl
jne
rclb
pusha
xorl
pop
sub
or
push
sub
cmp
movsb
mov
stos
jp
push
push
mov
or
bound
enter
jmp
test
add
jae
sbb
push
xchg
jb
xlat
push
enter
enter
sbb
xlat
out
mov
cmpsl
jp
xor
stc
mov
std
test
jb
lcall
out
add
les
aam
mov
mov
xor
rorb
xchg
shll
xchg
cs
push
jg
dec
daa
mov
inc
shrb
imul
adc
js
mov
mov
sub
inc
cmp
cmpsb
sub
imul
addr16
in
lea
sbb
addb
adc
inc
in
push
arpl
aam
mov
adc
daa
scas
push
dec
call
xor
cmpsb
and
shlb
cs
jmp
out
popa
or
push
jb
jge
mov
pop
sub
xor
inc
pop
sub
sahf
xchg
cwtl
sti
sbb
pop
jnp
add
xchg
mov
es
xchg
int
xor
imul
cmp
ret
jo
dec
inc
sub
pop
mov
fbld
scas
cltd
pop
xor
mov
lds
mov
push
add
push
outsb
fidivs
hlt
sub
stos
add
mov
jl
adc
sub
cwtl
mov
loopne
in
jl
inc
xor
clc
dec
mov
shl
scas
xchg
testb
push
lods
sti
loope
sti
repz
ret
jnp
xchg
shl
sub
mov
pushf
jmp
mov
inc
add
ficompl
jno
adc
adc
out
mov
mov
fimuls
jo
jle
test
inc
test
sbb
dec
add
xchg
adc
mov
mov
clc
shll
jg
adcl
icebp
dec
jae
rorb
cmp
add
cwtl
stos
pop
lret
inc
mov
xchg
into
rcrb
cmp
idivl
jne
cli
cmp
sbb
stos
adc
cltd
xor
push
leave
xchg
jg
inc
dec
pop
jmp
adc
dec
jmp
jns
ja
shrl
int3
aad
mov
adcb
movsb
in
push
xlat
out
clc
push
and
leave
jle
nop
fstpt
out
shl
cmpsb
push
repz
mov
repnz
jnp
arpl
cmp
xchg
push
scas
xchg
xor
pop
sbbl
mov
jno
mov
mov
mov
jns
mov
cmp
jecxz
les
loop
adc
cmp
in
out
push
imul
mov
xor
sbb
mov
jmp
pop
sub
nop
xor
testb
or
and
lds
fwait
pop
fwait
sbb
mov
jb
daa
jne
adc
pop
aas
ss
or
dec
pop
mov
stos
ficoml
push
scas
and
ret
mov
lods
sbb
add
and
add
andb
xor
mov
adc
mov
nop
inc
aaa
dec
dec
outsb
sbb
or
cmp
mov
sub
fisubs
sbb
bound
dec
in
out
sar
jnp
ja
sbbl
mov
jmp
sbb
pop
repz
gs
jno
xchg
xor
fildl
enter
leave
xchg
shr
pop
aad
pushf
fdivr
mov
xchg
loopne
mov
test
stc
xchg
aaa
xor
pop
mov
rcrb
and
pop
test
or
xor
out
sub
inc
mov
in
pop
sub
clc
pop
fs
pop
add
jecxz
aas
inc
xchg
into
jmp
jno
movsb
sbb
loopne
cmp
lret
test
test
sbb
repz
xchg
inc
jle
dec
testl
push
movsl
fs
cmpl
add
sahf
das
cmp
xlat
inc
stos
inc
xchg
sub
loopne
data16
inc
mov
mull
inc
shll
daa
xor
jge
inc
fdivs
and
arpl
lahf
movsl
lahf
pop
mov
out
adc
pop
lahf
lret
pusha
pop
daa
mov
movsb
sub
inc
mov
or
aaa
mov
pmuludq
dec
inc
int3
xchg
bound
push
fadds
cmp
loop
lcall
sub
mov
ljmp
or
jns
and
lcall
sub
inc
lods
sub
sbb
into
push
xorb
ljmp
jno
cmp
and
dec
cs
cmpsb
call
rcrl
sti
pop
and
push
movl
inc
enter
adc
subl
xchg
push
jl
add
xchg
jae
test
xchg
xor
test
lret
test
pop
lahf
pop
inc
push
and
dec
popa
xchg
in
sbb
add
and
push
daa
dec
aad
outsl
fildl
outsl
add
pushf
or
pop
jmp
leave
popa
mov
jmp
mov
sti
daa
push
xlat
cmp
je
imul
push
cwtl
mov
mov
adc
dec
repz
negl
pop
xchg
outsl
nop
in
stc
mov
cli
sbb
pushf
iret
fs
lcall
aaa
shlb
mov
imul
inc
imul
xor
pop
push
leave
dec
xchg
cmpb
and
pop
inc
repz
in
lret
cmp
in
repnz
and
xchg
loope
mov
push
mov
cmp
js
cld
outsl
mov
das
xchg
mov
mov
xor
xor
test
pop
lret
xor
ja
fisttpll
jecxz
test
loopne
xchg
dec
or
movsb
jecxz
sbb
push
jnp
or
mov
inc
xchg
js
sbb
mov
xor
mov
out
push
jmp
mov
lahf
add
mov
mov
mull
xchg
mov
roll
out
cmpsl
xor
test
push
test
aaa
out
mov
das
jns
sub
push
out
ret
scas
mov
nop
inc
sahf
xchg
out
lds
mov
fmul
mov
pop
insl
xchg
out
inc
jp
sbb
int3
lret
mov
lds
inc
rcll
add
mov
shlb
in
dec
jae
pop
pushf
push
dec
clc
mov
in
gs
hlt
sbb
adc
jmp
xchg
jno
add
mov
and
rolb
push
mov
cmp
mov
pop
imul
inc
aas
xchg
test
pop
push
adc
repnz
adc
adc
rcl
jl
je
popa
scas
mov
out
fcomip
add
movsb
imul
xchg
in
dec
mov
add
and
inc
cmp
iret
cmpb
imul
mov
pusha
icebp
adc
push
xchg
add
pop
inc
jg
push
aam
sub
xchg
aad
lcall
ficoml
testl
les
leave
sbb
or
xchg
sti
repnz
xor
test
mov
cmpsb
inc
cld
xchg
orb
sbb
int3
mov
ja
sbb
push
out
test
scas
pop
cs
inc
dec
loope
loop
add
testb
xorl
lcall
adc
imul
mov
arpl
sbb
into
sbb
xchg
sub
add
aas
adc
pop
pop
pushf
adc
icebp
sbb
outsb
fmuls
mov
inc
bound
mov
xor
xchg
aas
sbb
xchg
inc
mov
adc
pop
in
scas
jge
add
mov
dec
aas
push
cmp
jmp
cmp
sbb
mov
mov
inc
and
aas
mov
pop
pop
push
imul
mov
sbb
aad
inc
scas
je
mov
cmpsl
xchg
adc
sub
faddl
insb
adc
adc
mov
shrb
push
mov
ficoml
ljmp
xor
sub
lahf
insl
ja
imul
pop
jmp
insl
in
cltd
xor
bound
mov
mov
mov
cmp
repnz
das
push
dec
mov
ftst
decb
jecxz
mov
pop
push
jp
add
jge
aam
add
and
jge
stc
sub
sub
sub
andb
xorb
dec
pushl
mov
add
xchg
ret
xchg
add
mov
les
bnd
jle
sub
xchg
test
or
sub
andl
hlt
mov
mov
cli
pop
stos
jge
inc
dec
mov
pop
lahf
mov
lcall
mov
adc
adc
hlt
fdivrl
mov
mov
movsb
push
pop
mov
lock
lret
sub
adc
mov
mov
xor
pop
insb
fwait
call
sbb
inc
sbb
js
mov
cli
fs
mov
jmp
push
cmp
mov
xchg
pop
ds
cs
data16
dec
fidivrs
jge
enter
testb
jmp
mov
inc
stos
inc
or
pop
pop
mov
dec
jno
cwtl
pop
mov
jae
inc
cmp
adc
fistpll
adc
push
sub
mov
jne
data16
mov
mov
pop
dec
add
cmp
dec
cmpxchg
mov
cld
cmp
adc
aad
cmpsb
sbb
or
mov
cmc
outsb
pop
or
fsubs
jecxz
orl
mov
es
call
adc
sbb
xchg
popf
lods
or
lahf
lret
sbb
cmp
in
cmp
push
dec
mov
jo,pt
dec
mov
mov
xor
or
iret
into
mov
leave
int
mov
pop
xor
pop
loopne
bound
aam
movsl
push
adc
jp
ss
xchg
test
mov
jo
xchg
not
pop
mov
mov
xchg
cmpsb
inc
jecxz
or
daa
xor
stos
aad
das
dec
call
add
mov
sub
daa
movsl
filds
popf
sarb
jae
inc
lahf
mov
gs
sub
and
add
repnz
cli
dec
aam
icebp
int3
lea
cmp
pop
insl
ljmp
push
fildll
out
inc
lret
cmc
adc
mov
lret
cmp
out
hlt
push
sti
cmc
lea
lods
stos
add
gs
sbb
lret
cmpsl
push
movsb
cmpsl
movsb
sbb
cmp
sbb
sahf
inc
xchg
ja
inc
aad
fadd
negl
repnz
adc
adc
vpermilps
js
jne
rorb
pop
jmp
mov
lcall
xor
loopne
add
sub
jno
cmp
mov
sahf
iret
testb
stos
inc
repnz
mov
loopne
scas
xor
adcl
not
pop
arpl
dec
mov
loopne
or
jne
das
and
xor
inc
and
push
and
mov
jp
jp
jae
popf
sub
ljmp
ret
mov
pop
or
dec
xor
insl
cli
adcl
jo
test
mov
mov
scas
push
jns
es
in
mov
jmp
out
int3
pusha
sbb
dec
clc
pushf
test
add
out
sub
pop
push
arpl
adc
out
mov
rcll
adc
imul
inc
je
jp
pusha
mov
ds
xor
xchg
add
pop
movsl
dec
jl
sbb
add
sbb
pop
or
sbb
mov
lcall
or
inc
and
mov
mov
mov
xor
je
mov
scas
push
test
inc
cmpsb
les
push
mov
cmp
mov
sub
xchg
jmp
lods
inc
xchg
sbb
cmpb
aad
jne
dec
adc
sti
dec
sbb
cwtl
js
fsubrp
pop
clc
cmp
fidivrl
xchg
jo
xchg
idiv
bound
int
sbb
push
mov
fsubrl
jmp
or
add
sub
fmull
test
sub
cmp
add
or
dec
xchg
sub
adc
mov
jo
nop
mov
imul
mov
in
subb
pop
sub
movsb
psrad
out
xchg
and
fstp
add
mov
xchg
mov
out
inc
gs
jae
and
sbb
or
add
inc
mov
push
pusha
mov
jle
xchg
add
das
inc
imul
jl
fs
lret
lret
sub
mov
cmpsb
xchg
or
fisttpl
jmp
pushf
jg
sar
cmp
ret
scas
sub
jae
jg
xchg
lcall
push
xchg
push
fsubr
sbb
pop
subb
cmp
out
aam
lock
ljmp
dec
xor
push
outsb
outsl
lret
mov
xchg
cmpsl
sub
scas
push
cmp
add
lods
mov
jns
fistpll
daa
and
adc
add
jge
push
arpl
subl
add
daa
inc
pop
sub
sbb
xchg
lea
mov
fisttpll
push
pop
lret
das
jmp
xlat
xor
fisttps
lods
xchg
mov
test
dec
xchg
fcmovu
or
xor
int
jne
add
pusha
inc
lahf
popf
xor
jle
cltd
sbb
leave
in
mov
pop
cmp
loop
push
sti
sub
push
bound
sub
mov
sbb
mov
jno
dec
lcall
lahf
mov
in
fstpt
xchg
adc
add
push
jnp
cmp
jne
aas
cmp
jns
jno
push
pop
inc
test
sub
mov
fisubs
std
movsl
add
jl
imul
pop
cmp
jmp
pop
inc
dec
sbb
push
rcl
adc
stos
cmpsl
mov
insl
push
mov
cmp
or
inc
popf
test
xchg
add
jecxz
xor
mov
cmp
lea
scas
arpl
test
aaa
jp
inc
in
popf
jbe
gs
incb
sahf
js
test
jnp
imul
sbb
jbe
pop
xor
test
dec
add
test
mov
