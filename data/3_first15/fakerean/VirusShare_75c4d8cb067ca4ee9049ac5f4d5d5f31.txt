dec
lock
push
push
call
mov
add
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
push
call
mov
add
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
mov
mov
mov
mov
call
mov
mov
lea
push
push
push
call
mov
lea
mov
mov
movl
mov
mov
mov
mov
lea
mov
push
push
call
mov
lea
push
push
push
call
mov
add
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
lea
mov
push
push
call
mov
add
pop
pop
mov
pop
ret
nop
nop
push
mov
sub
push
push
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
push
push
call
add
pop
pop
mov
pop
ret
nop
nop
push
mov
push
push
cmpb
jne
movsbl
add
cmp
ja
xor
mov
jmp
mov
mov
push
push
push
call
push
call
sub
lea
push
add
push
push
call
mov
add
cmp
mov
je
mov
test
je
push
call
mov
mov
add
add
cmp
jne
pop
pop
mov
pop
ret
mov
mov
push
push
push
call
push
call
sub
lea
push
add
push
push
call
add
pop
pop
mov
pop
ret
lea
das
fadds
xchg
fadds
rcr
add
add
add
add
add
add
add
add
add
add
nop
nop
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
cmp
push
push
push
push
jbe
dec
mov
jmp
mov
xor
test
jbe
mov
mov
lea
push
push
call
add
test
jle
mov
mov
lea
rep
movsw
mov
mov
mov
rep
movsw
mov
lea
mov
rep
movsw
mov
mov
mov
dec
mov
jne
test
jne
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
mov
push
xor
cmpl
jbe
mov
push
push
call
add
test
je
mov
inc
add
cmp
jb
push
lea
push
push
call
lea
movw
push
call
mov
lea
push
lea
lea
mov
lea
push
call
mov
add
inc
mov
pop
pop
pop
pop
add
ret
nop
nop
push
mov
test
jbe
push
mov
push
mov
push
mov
push
push
push
call
add
add
dec
jne
pop
pop
pop
pop
ret
nop
nop
mov
push
mov
push
push
push
mov
cmp
jae
mov
xor
test
jbe
mov
push
push
call
add
test
je
mov
inc
add
cmp
jb
mov
push
lea
lea
mov
lea
push
call
mov
add
inc
mov
pop
pop
pop
pop
ret
nop
nop
nop
push
push
mov
push
push
mov
test
jbe
xor
test
jbe
mov
mov
push
push
call
add
test
je
mov
inc
add
cmp
jb
mov
cmp
je
inc
cmp
jae
mov
lea
lea
lea
lea
mov
mov
inc
rep
movsw
mov
add
cmp
jb
decl
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
xor
test
mov
jbe
mov
push
mov
push
push
sub
lea
mov
mov
inc
rep
movsw
mov
add
cmp
jb
pop
pop
pop
pop
ret
nop
nop
nop
sub
push
push
push
push
mov
xor
cmpl
jbe
mov
xor
lea
push
push
mov
mov
add
push
call
mov
add
test
je
mov
lea
push
push
call
add
test
je
mov
inc
add
cmp
jb
pop
pop
pop
xor
pop
add
ret
pop
pop
pop
mov
pop
add
ret
mov
mov
push
mov
push
push
push
call
mov
push
push
push
call
add
test
jne
mov
mov
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
push
push
push
call
mov
push
push
push
call
add
test
je
mov
mov
mov
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
call
add
ret
nop
nop
nop
mov
mov
mov
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
mov
test
je
push
call
add
xor
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
mov
push
cmp
jbe
mov
mov
mov
mov
shl
test
jne
inc
mov
mov
cmp
ja
mov
mov
cmp
jb
pop
pop
xor
pop
ret
mov
test
je
mov
push
shl
push
add
push
push
push
push
call
movw
mov
pop
inc
mov
pop
mov
pop
ret
push
push
mov
push
push
mov
xor
push
lea
push
push
push
movl
call
add
test
je
push
lea
push
push
push
inc
call
add
test
jne
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
lea
push
mov
lea
push
push
push
movl
call
add
test
je
push
mov
push
mov
push
push
xor
test
jbe
mov
lea
push
push
call
add
test
je
inc
add
cmp
jb
mov
mov
push
lea
push
push
call
add
mov
lea
push
mov
lea
push
push
push
call
add
test
jne
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
call
mov
mov
mov
add
mov
add
test
je
push
push
call
add
add
mov
mov
test
je
push
push
call
add
add
or
mov
cmp
jbe
mov
mov
lea
lea
movl
shl
push
call
mov
add
test
mov
jne
pop
pop
pop
xor
pop
ret
mov
push
push
push
mov
push
push
push
call
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
call
mov
add
test
je
movl
mov
xor
test
jbe
xor
mov
mov
add
push
push
call
add
test
jne
mov
movl
mov
inc
add
cmp
jb
mov
cmpl
je
mov
movl
test
jbe
mov
mov
push
push
push
call
add
add
dec
jne
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
sub
mov
mov
mov
push
push
mov
push
mov
push
mov
push
mov
push
push
lea
push
mov
lea
push
mov
push
xor
push
push
mov
mov
call
add
test
jne
pop
add
ret
mov
mov
push
mov
push
xor
cmp
mov
jbe
push
mov
mov
lea
push
call
add
test
jne
mov
movl
jmp
test
je
mov
lea
push
push
call
add
mov
inc
add
cmp
jb
pop
mov
test
je
mov
push
call
add
mov
pop
pop
pop
add
ret
mov
test
je
push
call
add
mov
mov
mov
mov
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
cmpl
jb
xor
ret
mov
push
mov
push
push
call
add
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
ret
mov
mov
push
push
push
call
add
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
xor
mov
mov
mov
mov
lea
mov
mov
add
dec
jne
pop
ret
nop
nop
nop
nop
nop
nop
push
push
push
mov
xor
mov
lea
cmp
jb
mov
test
jne
push
push
call
add
mov
test
je
push
call
mov
add
mov
mov
cmpl
jae
xor
lea
cmpb
je
inc
add
cmp
jb
pop
mov
pop
pop
ret
pop
pop
xor
pop
ret
lea
mov
pop
lea
lea
movb
mov
inc
mov
mov
pop
mov
mov
pop
ret
nop
nop
mov
mov
movb
mov
dec
mov
jne
mov
test
je
push
mov
push
movl
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
movl
xor
mov
mov
mov
cmp
jae
xorb
inc
mov
jmp
mov
ret
mov
xor
mov
test
jbe
mov
xorb
inc
cmp
jb
movl
mov
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
push
push
push
push
mov
xor
cmp
je
mov
mov
mov
cmpw
je
mov
pop
pop
pop
pop
ret
push
call
add
cmp
jae
mov
pop
pop
pop
pop
ret
cmpw
jne
mov
push
call
and
add
cmp
je
cmp
jne
cmp
je
movl
jmp
cmp
je
movl
cmp
je
mov
mov
mov
lea
pop
pop
pop
pop
ret
lea
push
push
call
mov
add
test
jne
mov
pop
pop
pop
pop
ret
test
je
mov
mov
sub
sar
lea
cmp
jae
mov
push
add
push
push
call
add
pop
pop
lea
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
sub
mov
xor
push
mov
push
mov
rep
mov
lea
push
push
call
lea
push
push
call
push
lea
push
push
call
inc
add
xchg
add
add
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
inc
add
xchg
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
push
push
call
add
ret
sub
mov
mov
mov
lea
mov
push
push
push
movw
movw
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
push
call
add
test
jne
mov
or
repnz
not
dec
cmp
jne
movsbl
mov
push
call
add
test
je
movsbl
push
call
add
test
je
movsbl
push
call
add
test
je
mov
add
push
push
call
add
test
jne
pop
mov
pop
ret
push
push
call
add
neg
sbb
pop
and
pop
add
ret
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
movl
movl
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
xor
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
add
add
inc
add
add
add
nop
decb
add
adc
push
and
push
push
push
push
call
add
mov
test
je
push
push
call
mov
mov
lea
push
push
push
push
call
mov
mov
lea
push
push
mov
call
add
test
jne
mov
push
push
call
add
test
jne
mov
jmp
add
cmpw
je
lea
push
push
push
call
mov
lea
push
push
push
call
add
mov
test
je
lea
push
push
mov
push
push
call
add
mov
push
mov
test
jne
add
test
je
mov
push
call
mov
add
cmp
jg
mov
test
je
mov
push
call
add
lea
lea
push
mov
lea
push
push
push
push
call
add
mov
test
jne
mov
push
call
add
test
je
mov
mov
push
push
call
mov
add
cmp
je
mov
push
push
push
push
call
mov
push
push
push
push
mov
call
add
cmp
jae
mov
mov
lea
push
push
call
mov
add
test
je
mov
mov
push
mov
lea
push
push
push
call
add
cmp
jne
xor
mov
add
mov
movb
mov
push
push
call
add
mov
mov
push
push
mov
movb
xor
call
add
test
jne
mov
xor
mov
mov
push
push
call
add
test
jne
movb
test
je
mov
lea
push
push
push
call
add
jmp
lea
push
push
call
add
mov
lea
lea
push
push
push
call
mov
add
test
jne
mov
push
lea
lea
push
push
call
add
movw
mov
mov
xor
lea
rep
mov
lea
mov
fdivrl
mov
mov
cmp
movl
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
jmp
mov
mov
mov
mov
and
test
mov
je
or
mov
mov
test
jne
and
mov
test
jne
and
mov
test
jne
and
mov
mov
mov
cmp
movl
jne
mov
movl
mov
push
mov
add
cmp
jne
mov
or
mov
mov
mov
test
je
mov
test
je
or
jmp
mov
movl
mov
or
mov
mov
dec
roll
sbb
lret
jne
mov
mov
jmp
or
mov
mov
push
test
je
lea
lea
push
push
call
mov
add
or
mov
jmp
lea
lea
push
push
call
add
mov
test
je
mov
or
mov
mov
mov
mov
or
inc
mov
mov
cmp
mov
je
cmp
jne
mov
cmp
je
mov
push
lea
or
push
mov
call
jmp
mov
adc
add
add
and
or
push
mov
lea
push
call
add
test
je
mov
cmp
je
cmp
jne
or
xor
mov
repnz
not
dec
mov
jmp
or
xor
repnz
not
mov
dec
mov
mov
lea
push
push
call
add
test
je
mov
mov
mov
mov
lea
mov
shr
rep
mov
and
rep
mov
add
mov
movb
mov
push
call
add
xor
mov
test
je
mov
mov
or
mov
test
je
mov
or
mov
test
je
mov
mov
push
push
lea
push
push
call
add
test
jne
mov
mov
or
or
mov
mov
jmp
mov
lea
push
movl
movl
mov
call
mov
add
or
mov
mov
test
jne
mov
push
push
call
add
mov
cmp
je
jmp
mov
cmp
je
cmp
je
mov
push
lea
or
push
mov
call
add
mov
or
test
pop
je
mov
push
push
call
mov
lea
push
push
push
push
call
mov
add
neg
sbb
inc
mov
push
push
call
add
cmp
jne
mov
mov
mov
push
push
push
push
call
add
cmp
jae
jmp
test
jne
mov
mov
push
mov
mov
movl
call
add
mov
push
push
push
movl
movl
call
mov
push
push
push
movl
movl
call
add
jmp
mov
mov
or
push
push
mov
call
add
mov
mov
mov
mov
test
je
mov
insl
movl
pop
add
add
add
ret
push
call
add
pop
pop
pop
add
ret
pop
movl
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
cmp
add
movl
movl
push
call
add
mov
mov
pop
pop
pop
mov
pop
ret
push
call
lea
push
call
add
lea
mov
movl
mov
push
push
call
add
movl
jmp
mov
ret
mov
movl
mov
lea
push
push
call
push
call
add
mov
mov
pop
pop
pop
mov
pop
ret
mov
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
push
call
add
neg
sbb
neg
dec
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
push
call
add
neg
sbb
neg
dec
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
mov
test
je
lea
push
push
call
add
test
jne
push
movl
movl
call
add
pop
pop
add
ret
push
push
or
mov
lea
push
push
push
call
add
test
je
mov
lea
push
push
push
call
mov
add
lea
lea
push
push
push
call
mov
not
inc
add
add
add
mov
or
push
xor
push
mov
shll
push
push
push
push
mov
mov
mov
mov
mov
mov
movl
mov
call
add
test
jne
mov
lea
add
push
push
push
call
add
call
lea
mov
push
call
cmp
jne
cmp
je
cmp
je
movl
movl
mov
push
mov
call
add
jmp
lea
push
push
mov
call
add
xor
lea
cmpb
je
inc
add
cmp
jb
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
movl
jmp
movl
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
mov
call
add
lea
lea
push
push
push
call
lea
lea
mov
mov
push
movsb
inc
add
mov
pop
test
add
push
push
push
mov
mov
mov
mov
mov
mov
mov
movl
call
add
lea
test
mov
jne
movl
movl
mov
push
mov
call
add
jmp
push
push
call
add
jmp
mov
push
push
call
add
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
mov
test
je
mov
push
push
call
add
cmp
jne
mov
lea
push
push
push
call
add
test
je
mov
lea
push
push
push
call
add
lea
lea
push
push
push
call
mov
push
mov
mov
mov
xor
add
add
add
add
add
push
push
lea
push
push
mov
mov
movl
movl
movl
movl
call
add
lea
test
mov
jne
movl
movl
mov
push
mov
call
add
pop
pop
add
ret
push
push
call
mov
push
push
call
add
pop
pop
add
ret
lea
push
movw
mov
movl
movl
call
add
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
cmpw
jne
pop
pop
pop
xor
pop
ret
mov
mov
push
call
push
mov
call
add
mov
xor
mov
test
jle
cmp
jge
mov
cmp
jne
inc
add
add
jmp
cmp
je
mov
push
call
add
cmp
jne
mov
inc
add
add
cmp
jl
xor
pop
cmp
pop
pop
pop
setne
ret
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
push
call
mov
push
push
lea
call
push
push
mov
call
add
test
je
cmp
jb
mov
sub
add
sar
mov
pop
pop
pop
pop
ret
mov
sub
sar
pop
pop
mov
pop
pop
ret
push
push
mov
push
xor
xor
mov
test
jbe
push
xor
mov
mov
mov
add
push
push
call
add
test
jne
mov
mov
inc
add
cmp
jb
pop
mov
test
je
test
jne
pop
pop
xor
pop
ret
test
je
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
nop
sub
mov
push
push
xor
lea
push
mov
push
push
mov
mov
call
mov
add
xor
test
jbe
xor
mov
lea
push
push
lea
push
call
mov
add
cmp
jne
mov
lea
push
push
call
add
test
je
mov
inc
add
cmp
jb
jmp
xor
lea
push
call
add
mov
pop
pop
pop
add
ret
push
mov
push
mov
push
push
call
mov
mov
lea
push
push
call
add
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
xor
push
mov
mov
mov
mov
mov
mov
cmp
je
testb
fildl
or
mov
mov
testb
movl
mov
lea
push
push
call
mov
mov
push
lea
lea
push
jmp
mov
lea
push
push
call
mov
mov
push
lea
lea
push
push
call
add
push
call
add
mov
sub
ret
jne
cmpl
jne
lea
push
push
call
add
test
jne
jmp
lea
push
push
call
add
test
jne
xor
push
push
call
add
cmp
je
cmpl
jne
mov
inc
roll
add
or
add
add
je
jne
testb
movb
out
dec
add
inc
mov
mov
or
mov
mov
lea
or
lea
mov
lea
push
push
push
mov
call
push
movl
call
mov
mov
push
push
push
call
mov
add
cmp
jne
cmpl
jne
push
movl
movl
call
add
mov
testb
je
mov
or
mov
cmp
je
mov
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
mov
jne
mov
mov
mov
mov
jmp
mov
test
je
push
movl
movl
call
mov
add
or
mov
jmp
testb
je
mov
push
mov
mov
mov
mov
call
mov
add
or
mov
jmp
mov
test
jne
testb
mov
add
add
add
push
add
add
iret
jne
cmpl
je
cmpl
je
cmpl
jne
mov
push
mov
call
add
mov
jmp
mov
bound
je
mov
cmp
jne
movl
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
xor
mov
mov
test
je
mov
mov
addb
mulb
inc
test
jne
cmp
lea
je
lea
lea
push
push
push
call
lea
add
mov
mov
or
inc
add
mov
mov
lea
mov
mov
lea
mov
test
jne
test
jne
mov
test
jne
cmpl
je
test
jne
cmp
lea
je
lea
lea
push
push
push
call
lea
add
mov
mov
test
je
push
lea
push
push
call
mov
lea
push
call
mov
add
sub
cmp
jb
mov
push
lea
push
push
call
add
push
lea
push
push
call
mov
push
push
push
call
add
test
jne
push
lea
push
push
call
mov
push
call
mov
mov
sub
add
push
lea
push
push
call
push
lea
push
push
call
add
mov
lea
push
push
push
call
add
mov
xor
lea
cmp
rep
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
je
movl
mov
mov
lea
movl
push
mov
movl
call
mov
add
mov
testb
jne
mov
inc
mov
mov
or
mov
jmp
cmp
jne
mov
mov
jmp
cmp
je
cmp
jne
mov
test
jne
mov
test
je
push
push
call
add
test
je
mov
mov
mov
push
push
call
mov
add
mov
and
test
jne
movl
cmp
jne
test
je
mov
mov
inc
add
rolb
orb
and
xor
jmp
push
call
add
mov
mov
cmp
je
testb
je
cmpl
jne
cmp
jne
mov
test
add
mov
fcomp
inc
add
add
testb
jne
testb
test
add
inc
mov
mov
or
mov
cmp
je
mov
mov
mov
push
or
or
mov
mov
push
push
mov
call
add
mov
cmp
je
mov
shll
adc
add
mov
mov
pop
pop
pop
pop
add
ret
sub
push
push
push
mov
xor
mov
mov
test
jne
pop
pop
xor
pop
add
ret
mov
mov
mov
push
mov
mov
movl
movl
mov
movl
call
push
call
add
cmp
ja
xor
mov
jmp
cmpl
jne
push
movl
call
add
mov
jmp
mov
mov
test
je
mov
push
push
call
add
mov
jmp
mov
mov
test
je
mov
push
push
call
add
mov
jmp
movl
movl
jmp
movl
movl
push
call
add
mov
mov
mov
and
push
mov
mov
mov
call
add
mov
pop
pop
pop
add
ret
nop
xchg
cld
inc
add
inc
add
cld
inc
add
std
inc
add
std
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
mov
test
jne
pop
pop
mov
pop
ret
mov
test
jne
mov
test
jbe
inc
mov
mov
pop
pop
pop
ret
mov
mov
push
push
push
push
call
mov
cmp
jae
mov
lea
inc
push
lea
mov
mov
lea
mov
lea
push
call
add
mov
mov
mov
pop
pop
pop
ret
pop
pop
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
je
mov
dec
mov
jne
mov
push
mov
cmp
pop
jae
movl
movl
mov
mov
push
call
ret
nop
nop
nop
push
mov
push
push
mov
test
jne
pop
pop
mov
pop
ret
mov
test
je
pop
pop
xor
pop
ret
mov
test
jne
pop
pop
xor
pop
ret
mov
test
jbe
inc
pop
mov
pop
mov
pop
ret
add
push
call
mov
mov
test
mov
jne
add
push
call
pop
pop
xor
pop
ret
push
call
mov
mov
add
add
push
call
test
jne
pop
pop
xor
pop
ret
push
call
mov
add
test
mov
jne
mov
push
call
add
xor
pop
pop
pop
ret
mov
xor
rep
mov
mov
rep
movsb
mov
mov
pop
pop
mov
mov
inc
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
dec
mov
jne
mov
test
je
push
call
mov
movl
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
mov
test
jne
ret
mov
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
pop
ret
nop
nop
nop
nop
push
mov
mov
xor
rep
stos
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
movl
mov
mov
mov
movl
mov
mov
add
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
lea
mov
push
rep
movsb
mov
movw
mov
mov
call
push
call
add
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
push
call
mov
mov
lea
push
push
call
mov
lea
push
push
call
mov
add
test
je
lea
push
push
call
lea
push
push
call
add
lea
jmp
xor
lea
lea
push
push
push
call
mov
add
test
jne
push
call
mov
movw
mov
lea
mov
mov
lea
push
push
push
mov
call
add
cmp
je
mov
test
jne
push
call
add
mov
pop
pop
pop
pop
add
ret
mov
pop
pop
pop
pop
add
ret
push
mov
mov
test
je
lea
push
call
add
movl
mov
test
je
push
call
add
pop
ret
nop
nop
nop
nop
nop
push
mov
push
call
add
test
je
mov
mov
lea
push
mov
xor
mov
xor
mov
mov
shl
add
xor
mov
pop
cmpsb
inc
add
lret
and
mov
mov
mov
mov
mov
mov
push
push
push
push
push
push
call
mov
push
movw
call
push
mov
call
add
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xor
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
call
mov
mov
mov
push
mov
push
push
call
push
mov
call
add
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
xor
push
mov
lea
cmp
je
mov
mov
mov
mov
mov
mov
mov
jmp
xor
inc
add
mov
push
push
mov
call
mov
lea
push
lea
push
push
mov
push
push
lea
push
push
mov
lea
push
push
lea
push
push
lea
push
push
call
mov
lea
push
call
add
mov
mov
mov
mov
mov
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
xor
mov
mov
mov
mov
cmp
je
mov
mov
inc
mov
jmp
mov
mov
mov
mov
mov
cmp
je
mov
orl
cmp
je
mov
orl
mov
mov
mov
mov
push
push
call
mov
mov
add
xor
cmp
setne
xor
cmp
setne
mov
mov
xor
mov
mov
cmp
setne
cmp
mov
je
mov
mov
mov
jmp
mov
mov
movl
mov
mov
mov
lea
push
push
push
call
add
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
push
push
call
push
mov
call
add
mov
pop
pop
ret
nop
nop
nop
nop
sub
mov
push
push
mov
mov
push
push
lea
mov
mov
mov
mov
and
mov
mov
mov
and
push
mov
mov
and
and
mov
mov
mov
mov
mov
mov
mov
xor
rep
mov
lea
mov
mov
mov
mov
rep
lea
push
push
and
stos
call
mov
add
test
movw
jne
mov
test
jne
mov
test
je
cmpw
jne
push
push
call
add
mov
test
je
sub
add
sar
shl
lea
lea
mov
shr
rep
mov
and
rep
mov
movw
addl
jmp
add
mov
test
je
mov
jmp
mov
test
je
movl
jmp
mov
test
je
movl
jmp
mov
test
jne
mov
test
je
movl
mov
test
jne
mov
test
je
lea
push
lea
push
push
call
add
mov
test
je
mov
push
push
push
call
add
lea
jmp
mov
lea
test
je
lea
push
push
push
call
add
lea
cmpw
je
lea
push
push
push
call
add
lea
mov
test
je
push
push
push
call
add
lea
mov
xor
xor
testb
je
push
jmp
mov
test
je
add
add
add
xchg
add
add
and
mov
je
mov
mov
cmpl
jne
mov
and
mov
je
mov
call
neg
sbb
mov
neg
add
cmpl
jne
mov
and
mov
je
mov
call
neg
sbb
neg
add
mov
and
mov
je
mov
mov
jmp
test
je
test
je
and
and
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
push
push
call
add
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
movl
mov
mov
push
call
add
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
call
mov
mov
or
mov
mov
jmp
jmp
mov
movb
gs
add
add
movl
stos
inc
add
inc
add
lock
inc
add
add
in
mov
mov
add
mov
pop
mov
add
mov
mov
mov
push
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
movb
movl
mov
mov
jmp
mov
mov
mov
cmpl
je
cmpl
jae
mov
mov
mov
mov
mov
add
mov
jmp
movl
push
lea
push
push
mov
mov
call
add
mov
mov
mov
cmpl
ja
cmpl
jae
mov
mov
cmpl
je
subl
cmpl
je
add
add
add
or
imul
mov
cmpl
jne
mov
mov
mov
mov
mov
mov
movb
push
lea
push
push
mov
mov
call
add
cmp
jne
jmp
mov
mov
xor
mov
test
je
movl
jmp
push
lea
push
mov
add
push
call
add
mov
mov
movb
mov
mov
lea
mov
mov
mov
mov
mov
mov
jmp
add
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
dec
or
add
je
mov
mov
movb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
in
in
sbb
addb
push
lea
push
push
call
pop
fldl
add
ret
scas
add
movl
flds
add
add
lods
add
decb
shl
add
jo
into
add
add
inc
in
push
push
push
call
mov
popl
add
fsub
add
mov
add
mov
test
rorb
lock
mov
nop
lahf
xlat
lods
pusha
mov
mov
lock
cmpb
add
add
icebp
mov
mov
in
clc
pop
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
add
iret
cmc
xchg
add
fnstcw
movb
pop
out
mov
add
add
flds
call
cmpsb
xchg
mov
out
add
mov
jecxz
iret
add
lock
add
pushf
add
jge
add
imul
push
add
push
rol
add
push
push
push
call
popf
add
jmp
mov
gs
add
enter
xchg
pop
in
add
jne
add
fs
les
je
lock
testl
mov
stos
add
add
jne
add
push
push
lea
push
push
push
push
lea
push
push
push
push
call
add
out
fwait
jns
fbstp
add
cmpsl
lock
add
aam
mov
push
cmpsb
test
add
aam
add
loope
lea
xlat
add
je
add
xchg
add
stos
out
mov
std
roll
mov
add
add
xchg
add
add
add
add
fcomps
add
outsb
pop
add
push
push
push
call
stos
pop
out
add
add
add
jnp
popa
les
add
jl
test
add
ja
in
add
add
ja
shlb
add
add
shrl
add
mov
shll
js
add
in
hlt
lcall
fiaddl
add
push
push
push
lea
push
push
lea
push
call
mov
shlb
xchg
mov
add
pop
mov
mov
scas
pushf
mov
test
add
fwait
add
add
popf
push
add
jae
filds
add
add
test
jne
pop
fstpt
add
pop
xchg
add
mov
sub
pop
ret
push
push
call
test
add
mov
pop
add
add
add
fadds
add
add
imul
rolb
test
fnsave
out
xchg
add
test
add
mov
mov
les
mov
sahf
add
add
iret
sub
pop
mov
mov
push
lea
push
push
call
add
jnp
mov
add
add
fyl2xp1
add
mov
lods
add
add
mov
out
add
xchg
leave
add
addl
push
into
add
lcall
pop
in
add
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
cli
mov
mov
ret
in
add
add
ja
loopne
out
xchg
add
int
jo
insb
repnz
pop
add
push
lea
push
push
push
push
push
push
push
push
push
call
lea
add
mov
add
mov
add
fldl
add
add
data16
add
movb
push
in
fdivr
lcall
pop
add
repz
push
push
xor
shr
push
xor
add
sub
add
sub
shl
sub
dec
pop
sub
sub
shl
pop
push
lea
push
push
push
push
push
push
push
call
add
add
jecxz
stc
xlat
push
enter
add
push
pop
add
adcb
add
mov
add
add
add
add
add
out
cmc
add
cltd
add
add
jecxz
jnp
sub
pop
pushl
push
push
push
lea
push
push
push
call
cld
add
add
add
testl
in
add
push
bound
mov
jno
js
mov
mov
add
sar
stos
hlt
add
lock
mov
in
call
add
push
push
lea
push
push
push
push
push
push
push
push
call
add
in
add
mov
add
pop
roll
lea
add
stos
add
lret
jb
hlt
add
jne
jb
loope
add
mov
add
popa
jge
fwait
scas
popa
jmp
sub
pop
mov
push
push
push
push
push
push
push
push
lea
push
push
call
fldcw
lea
sarl
filds
clc
mov
addb
lret
push
add
add
add
mov
add
add
repnz
lods
fiaddl
add
add
add
add
ficompl
add
data16
mov
lcall
inc
call
push
add
add
add
add
fistpl
add
stos
pusha
hlt
add
loop
add
add
add
push
jge
addr16
add
add
push
jne
add
cli
add
add
add
add
pop
add
add
pop
push
pushl
push
push
lea
push
call
cmpb
add
mov
mov
mov
js
jecxz
sahf
push
mov
stos
test
add
add
mov
add
mov
jae
add
mov
hlt
lcall
jne
call
push
push
push
push
lea
push
push
lea
push
push
push
call
xorl
add
jmp
add
lret
add
add
lahf
loope
mov
add
cli
push
out
add
add
mov
sub
pop
pushl
push
push
push
lea
push
call
leave
cmc
mov
rcr
sahf
add
cli
add
testb
add
jbe
pushf
jp
test
lahf
pop
rolb
mov
sub
pop
pushl
push
lea
push
lea
push
push
push
push
call
in
add
out
jb
test
add
mov
ficompl
jge
add
scas
cmc
add
add
add
sarb
rolb
pop
add
out
test
add
loopne
arpl
add
add
add
lcall
loope
add
push
push
sub
add
push
or
inc
add
shr
inc
sub
dec
sub
rol
add
shl
pop
shr
rol
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
call
mov
mov
add
out
lahf
js
out
lods
pop
jns
add
mov
cwtl
aad
int
jae
mov
flds
add
scas
pop
lcall
add
out
add
add
bound
add
add
sub
pop
pushl
call
push
push
call
add
xchg
add
bound
sar
test
add
imull
add
faddl
lds
scas
add
inc
push
push
inc
push
xor
add
inc
lea
shr
shl
sub
sub
pop
add
sub
pop
push
push
push
push
call
add
xchg
out
add
lahf
cltd
in
ret
jle
add
add
loopne
xchg
aad
test
lret
cmpsl
roll
pop
push
push
push
lea
push
call
add
roll
mov
stos
roll
sahf
xchg
mov
add
rolb
add
cmpsb
add
add
rclb
dec
push
push
push
push
push
push
lea
push
call
lret
add
add
add
pop
add
aad
in
add
roll
xlat
roll
mov
add
xchg
add
call
add
fcompl
hlt
jbe
std
add
jle
mov
push
add
stos
lods
cmc
mov
incb
mov
fcompl
clc
push
push
lea
push
push
push
push
push
lea
push
push
push
call
stos
xchg
add
jno
add
add
mov
jnp
arpl
mov
popa
loop
pop
repnz
cwtl
lods
fdivr
addl
jo
add
mov
jbe
add
add
add
add
add
xchg
mov
add
add
lcall
push
push
call
outsl
add
add
add
add
push
bound
fsubl
fdivrl
popa
add
add
xchg
enter
popf
pop
jmp
push
mov
fiaddl
enter
roll
stc
mov
icebp
add
add
fadds
lret
mov
mov
xchg
add
xchg
push
push
lea
push
call
mov
add
test
pop
rolb
stc
mov
mov
add
jmp
lock
ja
in
out
or
xchg
lret
add
add
in
jns
jbe
xchg
out
sub
pop
mov
push
push
push
push
push
push
lea
push
call
test
cmpsb
xchg
movsb
add
loop
movsb
xchg
aam
add
testb
ja
repnz
add
mov
add
add
leave
jnp
mov
add
add
add
jne
add
nop
jbe
add
push
test
add
leave
movsb
sub
pop
add
add
push
push
push
push
push
lea
push
push
push
call
push
cli
push
add
scas
roll
stos
add
nop
add
xchg
fistl
jno
lret
pop
loope
add
add
add
mov
movl
add
pop
sub
pop
add
push
push
lea
push
push
push
lea
push
call
jle
add
push
xchg
pusha
push
mov
cmpsl
leave
mov
add
int
add
int3
lea
add
jp
rcl
cltd
mov
add
add
add
lcall
xor
push
push
push
push
push
push
push
push
push
call
add
test
flds
add
mov
add
hlt
mov
into
add
scas
filds
add
mov
js
add
add
mov
cwtl
mov
pop
pusha
jb
insb
scas
add
add
icebp
add
xchg
add
in
fdivr
lcall
jne
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
add
loope
add
mov
fsubl
movsl
stc
xchg
push
mov
push
add
push
fcmovne
divb
in
loopne
push
mov
push
push
push
lea
push
push
push
push
push
call
arpl
bnd
fistpl
xchg
add
rolb
xchg
bound
add
add
add
add
jge
jp
add
lods
xchg
jns
les
add
add
sub
pop
xor
push
push
call
lcall
filds
add
add
fwait
add
pushf
mov
jmp
jno
add
add
mov
add
xchg
add
jge
add
pop
sahf
mov
mov
pop
int3
push
lret
jo
out
add
jb
add
pushf
mov
pusha
pop
sub
pop
add
push
push
lea
push
push
lea
push
call
jmp
mov
add
add
xchg
add
add
add
in
out
push
pop
add
push
add
sub
pop
add
push
push
lea
push
call
or
std
jp
fstl
fst
lret
push
mov
add
rclb
mov
jge
jo
addb
mov
repnz
ljmp
ficomps
xchg
add
add
test
add
jb
add
in
hlt
pop
pop
mov
xor
push
push
push
push
push
lea
push
push
call
out
add
add
push
lea
stos
loop
sti
push
add
imul
xchg
add
add
into
mov
std
out
add
popl
mov
add
add
icebp
add
mov
push
push
push
push
push
push
push
push
push
push
call
add
add
mov
jmp
bnd
ret
add
mov
call
xchg
add
pop
xor
push
push
push
push
push
lea
push
push
call
jecxz
into
add
testl
add
loope
pop
pop
xlat
movsl
pop
lcall
xchg
loope
add
jp
f2xm1
ja
call
pop
jno
add
add
mov
or
stc
mov
push
rcrl
add
add
in
add
leave
xchg
jbe
add
lcall
les
add
push
lea
push
push
lea
push
push
call
lods
je
loop
add
addr16
push
fcom
xchg
add
je
aad
add
mov
mov
add
add
cwtl
cmpsl
push
push
add
aad
loop
hlt
add
add
mov
add
data16
in
in
pop
sub
pop
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
mov
mov
iret
sti
push
pushf
add
add
les
lock
add
movsl
int
popf
enter
add
add
add
mov
pop
xchg
add
int
sub
pop
rep
push
push
push
push
call
add
fcomp
add
ljmp
call
cld
lock
add
test
add
fucom
out
test
nop
mov
sti
mov
lods
add
fbld
add
add
add
in
jnp
sahf
mov
ret
pop
movsl
pop
stc
mov
add
push
mov
leave
scas
push
add
pop
pop
push
lea
push
push
push
lea
push
push
push
push
push
call
jbe
add
imul
cli
hlt
xchg
push
mov
in
je
push
in
fldl
mov
add
xchg
jns
xchg
in
add
add
add
add
mov
push
push
call
repnz
add
mov
jp
add
add
add
jle
mov
add
add
cltd
pop
testb
add
push
add
add
jae
icebp
xchg
cmpsb
out
cmpsl
add
loop
mov
add
add
jmp
fwait
add
lret
lods
test
xchg
mov
int3
out
mov
add
icebp
sub
pop
add
add
push
push
push
push
call
add
mov
add
mov
scas
push
add
push
bnd
add
addb
stos
jecxz
xchg
mov
add
mov
int3
mov
fs
add
add
pop
mov
out
aad
addr16
imul
stos
add
jnp
in
lock
lcall
ret
insl
xor
and
push
push
lea
push
push
push
push
call
jbe
add
add
jo
add
gs
add
scas
add
outsl
in
add
mov
mov
shll
rolb
sahf
mov
pop
mov
push
push
push
push
push
call
add
add
jle
ret
pop
mov
add
add
outsw
in
add
add
jne
std
xlat
lds
add
add
popf
ret
xchg
clc
cld
sub
pop
xor
push
push
push
lea
push
call
imull
sbb
faddl
incb
mov
leave
enter
add
add
jb
add
test
add
lcall
les
push
lea
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
out
add
iret
pop
fxtract
leave
xchg
mov
add
test
add
add
add
sub
pop
mov
push
push
lea
push
lea
push
push
push
push
call
ljmp
add
int3
mov
xchg
add
add
out
add
add
fs
push
add
add
jbe
mov
add
mov
add
pop
mov
movb
add
add
push
insb
shrl
add
or
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
addb
movsb
loope
add
mov
mov
mov
rol
add
loop
mov
add
pop
pop
aam
pop
fildll
pop
add
shl
add
testl
std
cmc
nop
mov
pop
mov
gs
add
lcall
les
push
push
lea
push
lea
push
push
push
push
push
call
xchg
push
enter
in
lods
add
scas
nop
pop
add
test
js
pushf
outsl
add
add
iret
jmp
add
add
mov
stos
mov
lcall
ret
push
lea
push
call
xchg
add
jae
imul
ret
mov
arpl
or
loope
xlat
add
add
loop
xchg
cld
add
jecxz
cwtl
add
stc
add
leave
fcmovb
xchg
into
loope
add
add
jb
mov
clc
pop
mov
push
push
ror
shr
push
push
pop
add
sub
not
add
pop
shl
xor
pop
push
push
push
push
push
push
lea
push
lea
push
push
push
call
push
pop
lods
lock
fisttpl
scas
icebp
cmpsl
add
add
add
movl
add
add
push
arpl
jne
push
lea
push
push
push
lea
push
push
push
push
call
add
mov
mov
scas
ja
cld
xchg
add
add
fldl
cmpsl
add
mov
add
xchg
add
movb
sub
pop
call
push
push
push
lea
push
push
call
push
add
sahf
mov
lods
push
mov
ljmp
add
clc
add
jmp
in
lcall
add
xchg
mov
enter
pushf
fwait
lods
lea
dec
push
or
inc
add
xor
sub
not
lea
xor
pop
shl
pop
push
pop
push
push
push
lea
push
push
push
lea
push
lea
push
call
pop
mov
scas
push
jle
xchg
jmp
mov
add
loopne
add
add
cld
movsl
lret
jae
lock
pop
push
call
push
shl
shl
pop
mov
push
not
sub
pop
push
push
inc
sub
dec
pop
push
push
push
push
call
lods
cld
jno
call
test
test
add
lock
lcall
addr16
test
xchg
add
jno
add
lods
sub
pop
mov
push
push
push
push
lea
push
push
push
push
call
faddl
aad
push
jp
pop
add
pop
andb
in
mov
add
lods
add
add
add
mov
popl
sarb
mov
mov
add
add
lret
push
push
add
add
mov
pusha
les
cltd
add
lcall
pop
in
add
push
pop
add
push
sub
pop
mov
xor
push
inc
pop
add
push
inc
sub
rol
pop
push
push
push
push
call
addr16
fstp
ja
add
add
insb
add
int3
add
mov
add
sarb
mov
cmpsl
mov
add
aad
xchg
mov
lahf
cmpl
add
ljmp
add
add
add
test
hlt
lcall
inc
adc
lock
push
push
push
push
lea
push
push
call
testl
push
test
je
add
stc
into
cmpsl
push
icebp
add
jmp
add
addr16
in
idivb
test
sub
pop
add
push
push
push
push
lea
push
push
push
call
xchg
enter
add
jmp
je
lods
leave
add
mov
add
mov
add
jne
add
add
in
pop
push
add
ror
not
pop
mov
xor
push
lea
push
push
push
push
push
push
call
ja
test
add
fwait
xorb
jne
mov
rolb
test
fdivrs
cltd
test
jecxz
sub
pop
rep
push
lea
lea
inc
pop
mov
xor
push
lea
push
lea
push
call
mov
xchg
add
gs
pop
add
faddl
fcmovne
loope
add
mov
out
nop
cld
lods
ret
pop
jl
out
out
cld
imul
mov
add
mov
mov
xchg
pop
add
xlat
loopne
les
xchg
mov
cltd
popl
lcall
leave
je
mov
xor
push
push
push
push
call
fbstp
lcall
loop
add
jno
nop
add
out
xchg
add
jnp
add
add
ret
add
mov
add
cmc
xchg
pop
add
add
cld
add
data16
add
out
add
in
lock
mov
xor
push
lea
push
push
push
push
lea
push
lea
push
call
test
push
add
icebp
sti
add
add
ficoml
xchg
mov
add
add
ja
add
add
add
pushf
add
add
mov
jnp
add
xchg
add
add
cli
jbe
jge
sar
add
add
cwtl
sub
pop
add
push
lea
push
push
push
push
push
lea
push
push
push
call
loop
add
add
mov
add
add
mov
push
add
lock
add
add
jne
push
push
lea
push
push
push
call
add
jns
jmp
push
popa
cwtl
add
mov
sti
add
add
push
sub
pop
mov
push
push
push
call
in
fwait
sahf
cli
add
roll
jo
add
pop
jne
imul
add
add
out
out
in
add
add
cltd
push
insb
add
imull
iret
test
in
clc
lcall
add
push
push
lea
push
push
lea
push
push
push
call
rclb
addl
mov
pop
add
fisubrs
aam
add
add
nop
add
xchg
add
lods
jnp
movsl
add
lock
ret
xchg
add
mov
mov
fldcw
add
cmpsl
add
push
mov
add
sub
pop
add
push
not
pop
add
pop
push
push
push
push
call
add
xorb
lahf
in
rcll
mov
iret
mov
jmp
pusha
jbe
ficoms
nop
add
add
scas
mov
add
add
jp
jecxz
add
lcall
movsb
push
push
push
call
sarl
sahf
add
mov
fsubrp
add
mov
int
nop
int3
add
xchg
mov
add
leave
sub
pop
mov
push
push
push
push
push
lea
push
push
push
lea
push
push
call
negb
push
fidivl
mov
mov
add
ret
movb
popa
jno
cmpsl
add
imul
int3
add
jbe
pushf
push
cmpsl
out
add
pop
add
add
mov
add
mov
lcall
mov
mov
mov
mov
sub
pop
xor
push
push
push
call
add
add
iret
add
add
mov
nop
icebp
push
js
add
add
ficoml
add
jl
mov
add
add
test
add
add
in
add
idivb
mov
add
push
in
hlt
pop
add
push
lea
push
push
push
push
push
push
lea
push
call
fistpl
mov
cmc
jmp
pop
add
xchg
test
add
rolb
filds
add
add
ljmp
ficompl
mov
shl
shrb
mov
in
add
lods
add
mov
mov
jae
add
add
add
cmpsb
addl
leave
je
mov
push
dec
add
shl
add
pop
add
rep
push
not
rol
pop
pop
push
push
not
ror
dec
push
or
not
add
sub
xor
sub
add
xor
pop
inc
shr
pop
push
lea
dec
dec
dec
pop
pop
push
inc
shr
add
pop
mov
push
add
pop
mov
push
dec
sub
pop
mov
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
lock
add
test
mov
rolb
jmp
xchg
mov
addb
add
add
add
xchg
lds
xchg
add
int3
add
ret
push
std
add
xchg
mov
add
cwtl
xchg
ret
xchg
add
fdivr
sub
pop
jmp
push
push
sub
pop
mov
add
push
lea
push
lea
push
call
addr16
add
add
add
je
lret
mov
fadds
add
add
loop
lahf
mov
add
add
sub
pop
push
push
push
push
lea
push
push
call
fdivl
push
test
and
scas
add
mov
add
int3
push
lret
lahf
jnp
ret
int
add
jae
sub
pop
push
push
push
push
push
push
lea
push
call
testl
add
pop
add
ret
mov
mov
pushf
add
add
popf
add
insb
cwtl
fcoms
js
hlt
add
loopne
pusha
push
cltd
in
addl
add
in
leave
add
add
scas
jo
leave
pop
filds
add
add
fildl
push
push
push
call
add
sti
xchg
mov
add
jbe
loopne
add
lret
nop
insb
sti
add
jno
add
testb
add
pop
mov
pop
push
push
push
push
push
call
in
add
out
push
xchg
pop
movsl
add
js
lods
test
lret
call
mov
cli
ljmp
nop
add
stos
jmp
add
jne
mov
lea
ja
testb
add
add
add
mov
lock
in
in
pop
pop
push
push
push
push
lea
push
push
lea
push
call
mov
mov
add
stos
jl
loope
add
add
add
add
add
lcall
pop
push
push
push
call
pop
jl
lods
mov
addb
data16
insb
in
fimull
xchg
add
add
mov
add
add
add
jno
xchg
add
iret
fsubrs
pop
add
xchg
add
stos
add
lcall
add
mull
sub
pop
leave
push
push
call
xchg
mov
gs
int
flds
add
imul
lds
ja
add
jge
push
add
imul
addb
add
add
pop
jge
out
add
add
add
in
bound
xchg
mov
add
add
clc
add
add
jno
in
clc
lcall
or
push
ror
pop
push
mov
push
sub
inc
pop
add
push
ror
lea
rol
add
pop
push
push
sub
sub
lea
add
pop
push
push
push
push
lea
push
lea
push
call
stos
iret
add
lock
mov
enter
popa
push
outsl
add
aam
add
enter
cmpsl
lea
stos
add
lret
add
add
test
loopne
mov
mov
add
in
add
popa
add
push
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
add
sahf
imul
add
add
icebp
xlat
mov
je
mov
mov
add
pop
add
out
add
imul
mov
sub
pop
movl
push
pop
addl
test
je
push
push
lea
push
push
push
call
call
xlat
add
cmpsl
add
add
add
cld
fadds
xchg
in
test
add
add
add
fildl
test
arpl
in
shr
mov
sub
pop
mov
push
push
push
push
lea
push
call
push
hlt
lcall
add
fwait
jns
pusha
shl
add
xchg
add
lcall
add
add
add
pop
test
pop
fstl
popf
lods
roll
mov
rolb
pusha
lods
mov
jbe
push
sub
pop
pop
push
lea
push
push
push
lea
push
push
push
push
push
call
roll
mov
xchg
in
add
add
vminsd
fcmovbe
fwait
add
cmpsl
push
push
add
test
out
clc
lea
cli
add
mov
add
mov
xchg
pop
add
jbe
repnz
loope
popa
stos
les
add
subl
clc
sti
mov
add
sti
sub
pop
pop
push
xor
add
sub
pop
pop
push
add
pop
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
push
add
xchg
and
insb
add
add
add
repnz
add
add
add
cld
repnz
add
pop
addl
add
add
rolb
add
add
mov
add
mov
jns
xchg
add
enter
jno
loopne
xchg
mov
lcall
lcall
ret
push
push
push
push
push
push
lea
push
push
push
call
mov
imul
fildl
jae
add
imul
add
add
sbbl
add
sub
pop
push
mov
push
pop
add
push
lea
push
lea
push
push
call
ljmp
push
add
ljmp
lods
xlat
xchg
out
rolb
imull
add
imul
test
pop
roll
add
jb
in
add
add
popl
mov
popa
sub
pop
push
push
push
ror
pop
push
push
sub
pop
push
push
push
push
push
push
push
lea
push
lea
push
push
call
cmpl
xchg
add
add
outsl
xchg
add
ja
add
test
int3
test
scas
mov
ror
pop
add
add
push
enter
sti
jne
addb
lds
fldl
xchg
add
add
pop
jge
add
add
add
inc
cld
add
add
push
push
push
push
call
jecxz
mov
add
mov
add
rol
int3
in
lds
add
add
divl
mov
iret
les
jae
in
pop
add
jge
addl
add
arpl
jbe
je
mov
add
enter
add
add
add
add
xchg
mov
xchg
jmp
in
lock
addl
push
push
lea
push
push
lea
push
push
push
push
push
push
push
call
add
add
std
add
pop
add
jmp
repnz
icebp
add
imul
xchg
add
aam
lret
add
push
add
add
jnp
add
in
rolb
add
add
roll
lcall
call
sub
xor
inc
pop
mov
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
loop
push
ffreep
add
xchg
jno
add
add
cwtl
scas
out
jmp
push
ret
add
add
add
test
pop
mov
mov
add
add
ja
aam
divl
add
imul
pop
jne
add
add
add
rolb
sbbb
pushl
push
push
lea
push
push
push
push
push
lea
push
call
add
mov
jle
into
test
add
add
addr16
pusha
addr16
add
jge
les
out
out
je
nop
repnz
jo
pop
add
mov
fldl
lcall
ljmp
push
not
sub
pop
call
push
lea
push
call
add
add
pop
push
add
push
add
add
fld
add
je
add
rcr
jno
xchg
out
leave
add
xchg
sub
pop
cmpl
jne
push
add
pop
pop
push
push
call
cld
mov
fldl
mov
pop
les
jne
lcall
divb
add
add
mov
lods
pop
add
lahf
sub
pop
pop
push
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
add
add
loope
xchg
int
push
lcall
in
push
xchg
add
iret
add
lcall
push
ror
inc
ror
rol
pop
pop
leave
push
lea
push
push
call
leave
xchg
add
out
add
faddl
add
jb
add
rcl
add
movsb
xchg
add
add
add
fiadds
add
add
jnp
mov
hlt
pop
ret
push
lea
sub
shl
pop
push
mov
push
push
push
push
lea
push
push
push
push
push
push
call
add
push
pop
mov
fs
adcb
stos
add
stc
lcall
iret
add
add
add
lea
sub
insb
mov
add
fdivr
lcall
cld
push
ror
inc
not
pop
push
push
push
sub
sub
pop
push
push
push
push
push
push
push
push
push
push
call
add
mov
fstpl
out
stc
ret
add
add
mov
in
add
add
add
add
add
add
add
add
mov
je
jno
add
rolb
cltd
add
add
ja
mov
add
add
leave
push
add
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
push
call
cmpsb
shlb
fs
add
sti
add
add
in
cmpsb
push
add
pop
loope
test
jno
faddl
xchg
mov
fstp
popl
mov
mov
add
test
add
testl
jl
push
jmp
lret
add
shlb
out
in
fdivr
lcall
inc
cld
or
add
push
push
push
lea
push
call
imul
push
add
lret
jno
add
add
jae
add
call
imul
push
std
popf
cld
iret
nop
jno
add
mov
sarl
xorb
movl
lret
rolb
mov
lcall
mov
call
jl
mov
push
call
lods
clc
add
xlat
jo
cwtl
enter
in
add
add
pop
add
lds
push
add
add
pop
shl
bound
int
jp
jmp
cmp
ret
pop
add
in
ret
in
add
sub
pop
push
push
push
lea
push
push
push
push
push
push
push
push
call
jae
jb
add
add
add
add
ret
xchg
lods
add
out
in
add
repnz
add
addb
lds
insb
enter
enter
jl
push
jecxz
pusha
sub
pop
call
subl
push
pop
cmpl
jne
push
push
push
push
push
push
push
lea
push
push
call
test
pushf
add
add
push
fwait
arpl
scas
add
mov
push
shll
aam
push
add
mov
out
add
pushf
add
mov
mov
insb
add
push
ficoml
add
testl
xchg
sub
pop
pop
push
sub
pop
pop
push
push
push
push
push
push
push
call
mov
mov
mov
rcr
add
repnz
mov
stc
imul
add
scas
arpl
push
in
mov
add
lcall
push
lea
shl
sub
pop
pop
push
push
push
call
add
add
add
in
iret
add
insb
cld
ret
lea
xchg
fwait
test
test
add
add
jne
add
add
add
cld
sub
pop
leave
push
add
pop
ret
push
push
lea
push
push
call
arpl
test
mov
in
mov
ret
pusha
mov
mov
iret
push
push
jbe
loopne
add
add
pop
clc
xchg
mov
add
jno
add
imul
mov
scas
filds
xchg
add
push
shr
pop
mov
push
lea
push
lea
push
push
push
call
popa
mov
add
je
mov
pop
mov
xchg
add
out
cmpsl
rclb
fisubrs
add
in
pop
add
push
push
lea
push
push
call
add
in
test
jne
cltd
add
jmp
bound
int3
add
mov
add
add
movsb
add
mov
add
add
mov
mov
add
icebp
sub
pop
push
push
push
push
lea
push
push
push
push
call
mov
add
add
scas
add
add
flds
shrl
push
add
pushf
add
divl
test
add
mov
in
lcall
push
pop
push
push
add
lea
shr
pop
push
push
push
shr
dec
push
and
add
add
sub
shr
pop
ror
xor
pop
push
push
push
lea
push
push
push
push
push
push
call
add
hlt
pop
int
js
ja
add
add
rol
ret
out
add
stos
mov
pop
mov
add
add
ret
nop
xchg
xchg
add
loopne
jl
popf
scas
add
iret
fs
xchg
add
push
ja
push
pop
add
add
lock
add
mov
add
lcall
jne
call
push
push
call
icebp
test
mov
adcb
insb
add
add
cmpb
add
bound
scas
jns
add
add
add
lcall
shrb
sarb
push
push
pop
add
lea
sub
rol
pop
inc
pop
push
push
push
push
push
call
lds
add
lods
test
mov
fisubs
stos
cld
mov
push
add
cmpsl
popf
scas
fwait
mov
add
js
add
add
add
mov
pop
pushl
push
push
push
push
push
call
xchg
icebp
scas
mov
add
push
cmpb
pop
outsl
add
leave
mov
jmp
add
add
xchg
jmp
xlat
imul
fdivrp
add
loope
add
out
test
jb
add
sub
pop
call
call
push
push
shr
add
dec
push
push
pop
add
rol
lea
shl
sub
ror
pop
shr
add
inc
pop
push
add
dec
not
pop
pushl
call
push
rol
lea
not
pop
call
push
push
add
sub
push
or
not
add
sub
rol
not
xor
lea
pop
ror
pop
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
shr
loop
xlat
jns
stos
insb
add
lcall
flds
jo
add
test
out
lds
add
add
mov
push
add
add
jb
add
add
push
sahf
loopne
add
js
sub
pop
pushl
call
push
add
pop
call
push
push
push
xor
add
sub
inc
sub
pop
xor
pop
push
pop
pushl
push
push
push
call
xchg
add
add
cltd
push
mov
aam
add
mov
add
pop
add
mov
add
cli
xchg
fsubrs
into
mov
add
push
lds
imul
cltd
pop
add
mov
xchg
sub
pop
call
call
push
push
add
sub
add
not
push
and
add
add
ror
sub
sub
add
inc
add
pop
sub
pop
push
sub
pop
pushl
push
sub
inc
shl
shr
pop
call
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
in
push
test
jge
add
add
jmp
out
add
xchg
add
cld
pop
test
pushf
testb
int3
repnz
add
add
pop
call
push
inc
pop
mov
push
ror
pop
lea
push
push
call
icebp
add
fcomps
mov
add
add
add
add
add
mov
jno
add
fnstenv
pop
lock
add
rol
add
xchg
push
add
fiaddl
bound
out
sahf
movb
sub
pop
sub
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
popf
leave
in
pop
add
jne
fimuls
popl
add
loopne
add
jp
lahf
add
add
push
in
add
sub
pop
mov
push
push
lea
push
push
push
push
push
call
hlt
jne
add
push
push
xchg
cwtl
add
push
faddl
add
pop
pop
rolb
fcoml
scas
out
xchg
int3
nop
add
add
add
add
lea
add
jo
push
add
jp
add
cli
sub
pop
shr
push
add
pop
add
mov
push
push
call
cmpsl
add
leave
add
pop
push
add
add
stc
mov
add
mov
add
test
pop
clc
imul
icebp
push
add
fldl
andb
or
push
push
push
push
push
push
lea
push
call
fwait
add
jbe
add
mov
out
add
ljmp
add
push
test
add
pop
fld
incb
add
sub
pop
add
push
push
push
push
push
push
call
add
jne
faddl
sahf
cwtl
mov
mov
add
xchg
add
pop
add
out
jbe
xchg
cwtl
add
fbstp
push
rolb
xchg
add
add
addl
add
add
push
add
pop
cmp
jne
cmp
jne
push
push
call
lods
add
add
jle
jbe
push
add
add
add
xchg
stc
flds
mov
les
movsb
xchg
add
fwait
test
add
pushf
outsl
add
cmpsl
movl
test
add
add
lods
add
sub
pop
mov
push
push
push
lea
push
push
lea
push
push
call
add
add
shrl
add
data16
xchg
rcrb
mov
add
add
push
jmp
int3
mov
in
movl
jmp
push
dec
pop
mov
push
lea
push
push
push
call
fldl
pop
std
imul
add
jnp
mov
add
jp
roll
outsl
rol
push
mov
pop
out
xchg
jns
bound
hlt
mov
mov
popa
nop
pop
arpl
mov
sarb
add
scas
popf
mov
add
add
cwtl
add
sub
pop
mov
sub
jne
push
push
push
push
push
push
call
add
add
add
rclb
movsb
add
sti
mov
push
cmc
test
cld
loop
mov
test
add
test
add
add
add
add
cwtl
test
clc
add
mov
add
enter
pop
je
add
add
inc
adc
add
add
push
rol
pop
jmp
push
push
call
in
add
into
add
push
lea
call
ficomps
push
push
jns
mov
add
add
add
test
mov
xlat
pusha
mov
jle
add
xchg
add
loope
add
mov
push
add
add
pop
add
arpl
iret
sub
pop
mov
push
pop
mov
push
push
push
lea
push
call
add
add
mov
add
add
xchg
loopne
int
pusha
lret
fidivrl
add
mov
icebp
add
call
test
add
iret
push
push
rolb
cli
add
test
add
add
enter
or
mov
push
push
lea
push
push
push
push
push
push
push
push
call
mov
mov
add
add
add
push
mov
arpl
out
std
mov
movsl
add
mov
pop
fbstp
mov
add
pop
add
lods
cld
pop
arpl
add
fxch
mov
mulb
fldcw
sti
add
fs
push
jns
iret
loopne
in
fdivr
lcall
add
add
add
pop
iret
popf
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
mov
add
add
xchg
add
addr16
jp
add
rolb
lahf
add
mov
gs
add
insb
add
mov
jne
les
add
in
fcomps
jp
add
mov
push
push
push
push
push
call
mov
fs
push
movb
shll
add
idivl
mov
pop
shl
add
add
outsl
add
bound
push
add
jge
mov
sub
pop
cmpw
jne
mov
push
add
dec
pop
movl
push
push
call
add
aam
jno
addr16
pop
loopne
xlat
rolb
add
add
mov
stc
out
add
lahf
pusha
add
add
addr16
add
out
add
add
add
cli
add
fwait
add
add
add
stos
add
pop
movsl
add
fwait
add
scas
add
add
xlat
xor
pop
pushl
pop
push
push
push
push
push
lea
push
push
call
add
add
add
rolb
popf
add
out
lock
cli
filds
add
add
add
add
add
jmp
pop
loop
xchg
out
lods
mov
add
sub
pop
mov
push
add
add
inc
pop
mov
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
mov
add
jo
push
add
jo
add
push
add
add
add
add
pusha
mov
into
mov
add
add
mov
addb
xchg
xchg
add
into
jle
lods
add
mov
mov
sub
in
fcompl
push
or
and
fstl
lret
incl
ret
add
shl
sub
add
shr
pop
add
pop
push
add
inc
pop
push
push
sub
sub
pop
call
push
push
push
push
lea
push
lea
push
push
push
call
add
add
je
loopne
pop
fadds
call
add
mov
leave
jmp
sti
add
add
std
lcall
lcall
cmp
rol
je
push
push
not
push
push
pop
add
sub
sub
rol
rol
add
not
pop
shr
xor
pop
push
push
push
push
push
push
lea
push
lea
push
call
test
faddl
jle
cli
add
add
add
pop
in
add
add
testb
pop
add
jl
jb
add
mov
std
mov
pop
add
aad
jbe
cltd
add
mov
fcmove
mov
add
push
ficompl
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
mov
rcll
push
add
xchg
test
movsl
stos
add
popa
add
pusha
jmp
leave
add
enter
mov
out
add
add
add
sahf
mov
fdivr
lcall
inc
add
push
inc
sub
inc
pop
cmpl
je
push
push
not
add
push
push
pop
add
sub
sub
not
sub
inc
pop
xor
pop
push
ror
xor
rol
pop
push
push
shl
pop
call
cmpl
je
push
push
dec
push
and
add
shr
sub
add
add
sub
pop
add
dec
pop
push
lea
push
push
lea
push
push
push
push
push
push
push
call
xchg
xchg
fadds
add
roll
jns
stos
popl
mov
add
mov
les
mov
mov
mov
add
addl
add
add
add
cwtl
data16
jae
movsb
jnp
lahf
jecxz
xchg
jno
rcr
add
movb
add
sub
pop
push
push
lea
push
push
push
push
lea
push
lea
push
push
lea
push
call
push
out
test
add
sar
mov
add
fwait
add
leave
pop
pop
mov
mov
lahf
add
les
jl
add
push
add
out
mov
add
push
add
mov
pop
xchg
test
push
add
add
lods
add
fcompl
ljmp
push
lcall
mov
add
push
sub
dec
not
pop
cmpl
jne
push
ror
lea
pop
mov
movl
push
push
push
push
push
push
lea
push
push
call
xlat
idivl
push
xchg
add
test
shll
add
add
aad
roll
add
pop
add
sub
pop
jmp
xor
push
lea
inc
pop
pop
push
push
push
push
push
call
add
push
aad
jnp
data16
lret
add
movsl
mov
add
movl
hlt
sbb
fiaddl
rclb
jge
test
js
arpl
add
add
add
mov
jmp
lahf
stc
mov
xchg
int3
xchg
add
in
add
mov
popf
pop
sub
pop
pop
push
inc
not
not
inc
pop
pop
push
rol
not
inc
pop
pop
push
push
push
push
push
push
push
push
push
push
call
jl
out
add
movsl
cltd
jae
in
add
add
nop
loope
add
mov
mov
imul
add
std
add
add
js
pop
add
xchg
add
add
add
add
xchg
add
add
movsl
mov
mov
ret
push
shr
pop
push
push
push
push
lea
push
lea
push
call
jl
push
add
jmp
into
mov
mov
fstpl
add
add
add
jae
add
cli
add
negl
pop
imul
add
mov
gs
faddl
pop
in
add
sub
pop
mov
push
push
lea
push
push
push
push
call
rclb
mov
xlat
mov
jae
xchg
add
xchg
jb
add
adcb
out
mov
mov
push
pusha
fs
stos
out
out
int3
add
in
call
push
lea
pop
cmpl
jne
push
push
lea
dec
sub
push
sub
add
rol
sub
sub
pop
not
xor
pop
push
push
push
call
jp
cwtl
add
add
mov
add
fiaddl
xchg
scas
add
add
cltd
add
add
fcoms
in
jae
cld
jp
mov
jle
add
xchg
add
add
add
add
xchg
test
add
in
rolb
hlt
lcall
jne
push
lea
push
lea
push
push
push
push
push
push
call
add
cltd
add
movsl
test
add
in
pop
mov
add
loope
js
lds
faddl
test
add
loop
mov
call
out
add
movsl
add
cmp
in
add
out
mov
loopne
lcall
test
add
push
push
ror
sub
sub
pop
call
push
sub
shr
rol
add
pop
jmp
push
shr
pop
cmpl
jne
push
push
lea
push
call
add
add
push
ljmp
mov
mov
fiadds
add
push
mov
aad
sahf
add
aad
stos
std
add
ljmp
push
imul
mov
aad
add
sub
pop
mov
push
inc
inc
pop
ret
push
rol
pop
jmp
cmpl
jne
push
push
shl
sub
push
push
pop
add
rol
add
sub
rol
pop
ror
sub
inc
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
call
cmpsb
xchg
add
test
add
notb
add
sahf
add
add
ret
je
add
mov
in
fdivr
lcall
jne
call
push
lea
push
lea
push
push
push
push
push
push
call
jge
loop
add
push
add
xchg
test
xchg
andb
mov
add
iret
push
add
roll
add
in
cmpsl
push
cli
add
push
sub
pop
push
push
push
lea
push
lea
push
push
push
push
call
out
push
add
add
movsb
add
add
add
add
add
cli
push
loopne
mov
in
lcall
shr
mov
push
push
call
pop
push
lock
divb
add
mov
add
jo
loopne
stos
addr16
xorl
cmpsl
add
xchg
jb
mov
subl
jmp
andb
add
add
add
add
add
sub
pop
cmpl
je
push
push
lea
push
call
add
mov
fwait
add
add
sarl
cld
add
mov
add
nop
jle
mov
add
jp
jne
popf
mov
add
add
ja
add
jge
add
sub
pop
cmpl
jne
mov
push
push
lea
push
call
add
add
jne
fiaddl
rolb
add
addl
test
out
xchg
js
add
add
add
sub
add
add
xchg
pushf
push
mov
sub
pop
mov
push
dec
shl
add
pop
push
lea
push
push
rol
push
or
inc
add
xor
shr
inc
lea
sub
dec
add
sub
pop
inc
lea
pop
push
push
push
push
push
push
push
push
push
push
call
mov
fldl
add
aad
mov
lahf
fiaddl
mov
add
mov
jp
in
add
mov
add
jle
mov
js
xchg
sub
pop
pushl
push
xor
xor
inc
pop
call
push
lea
push
call
mov
ja
push
mov
add
mov
mov
xchg
fistl
add
fstps
test
add
test
rolb
add
xchg
jb
mov
add
push
push
rol
add
pop
call
push
push
shr
rol
push
sub
add
sub
sub
inc
pop
not
shl
pop
push
rol
add
pop
pushl
push
lea
push
push
lea
push
push
call
incb
roll
pop
cltd
outsl
add
popf
nop
add
icebp
xlat
fiaddl
pusha
mov
push
roll
and
add
push
lea
push
call
add
rcrb
jae
arpl
add
add
fisttps
jae
lea
mov
cmc
add
scas
add
add
mov
xchg
ljmp
xchg
add
fwait
lods
mov
sub
pop
call
push
lea
pop
mov
push
push
not
push
or
inc
add
inc
add
shr
lea
sub
shl
xor
sub
pop
lea
pop
push
sub
pop
pushl
push
xor
pop
call
push
shl
ror
shl
pop
push
push
not
inc
add
pop
pushl
push
ror
pop
call
push
push
rol
shr
push
sub
add
inc
sub
dec
pop
shl
sub
dec
pop
push
push
lea
push
push
push
push
push
push
push
push
call
add
add
add
add
pusha
mov
aad
add
add
add
add
add
fisubrl
imul
pop
stos
sar
add
xchg
add
out
sub
pop
pushl
push
xor
inc
shl
pop
call
push
push
ror
push
or
not
add
dec
shl
sub
rol
xor
add
pop
xor
sub
shr
pop
push
pop
push
push
push
push
lea
push
lea
push
push
call
out
add
add
call
add
add
add
fistpl
mov
pop
add
xchg
add
mov
add
add
xchg
add
add
mov
hlt
aam
add
fcmovu
lret
in
call
call
push
push
not
sub
add
push
xor
add
shl
sub
ror
pop
pop
push
lea
push
push
call
add
int3
add
pop
mov
add
pop
movl
add
rcrl
add
pop
add
add
xchg
lcall
jne
push
push
push
push
push
lea
push
push
call
enter
mov
mov
add
add
jns
insb
flds
mov
add
add
add
add
mov
in
lcall
push
and
add
lret
push
pop
mov
lea
push
rol
add
shr
pop
lea
push
not
shl
pop
push
push
push
add
shr
shr
pop
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
add
cmpsl
add
outsl
add
add
xchg
add
lods
add
push
stos
sti
mov
add
xchg
sahf
jb
icebp
add
push
test
hlt
filds
rol
cld
test
hlt
mov
imul
rcrl
add
add
sub
pop
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
push
call
jle
jnp
popa
mov
xchg
add
push
add
jmp
add
add
lods
ficoml
add
lret
mov
add
add
gs
xchg
scas
scas
loopne
add
sub
pop
push
push
rol
ror
pop
push
push
push
lea
add
shr
pop
pushl
push
push
push
push
push
push
push
lea
push
push
call
leave
xchg
scas
loop
pop
jno
movsl
mov
rolb
jb
mov
add
lods
mov
clc
movsl
add
addb
add
mov
add
shll
fnsave
add
repnz
sar
add
sahf
add
add
mov
add
add
loopne
lcall
push
hlt
push
push
sub
ror
push
or
not
add
not
rol
ror
xor
sub
rol
pop
add
not
pop
push
push
push
push
push
call
in
test
push
add
add
add
mov
add
add
add
push
mov
imul
scas
add
ret
add
add
lret
mov
js
int3
icebp
mov
jne
mov
ja
in
fildll
add
hlt
std
test
in
in
pop
pushl
call
push
push
push
push
lea
push
push
push
push
lea
push
call
mov
xchg
add
add
mov
add
mov
cltd
add
add
pop
add
in
push
push
movsl
mov
addr16
add
test
jp
jae
xchg
in
outsl
out
add
rorb
je
fs
lea
push
push
sub
shl
push
push
pop
add
shr
sub
inc
sub
lea
pop
pop
push
lea
push
lea
push
push
call
iret
in
add
add
cld
fnstsw
push
push
movsb
addb
add
add
add
add
add
test
std
stos
imul
sarb
addl
push
rolb
cli
push
mov
lcall
lcall
jne
call
push
pop
push
push
shl
xor
pop
push
push
dec
rol
pop
push
push
sub
not
shr
shr
pop
pushl
push
push
inc
shl
ror
sub
pop
pushl
push
lea
shr
sub
pop
push
push
push
rol
push
or
inc
add
add
inc
shl
sub
ror
dec
pop
inc
not
ror
ror
pop
push
push
push
push
push
call
xchg
sahf
push
pop
pusha
xchg
add
mov
les
add
add
mov
je
into
xchg
add
out
mov
imul
jle
add
iret
iret
add
shrb
aad
or
loope
push
sub
add
shr
sub
add
ror
dec
add
pop
sub
shl
pop
push
push
push
call
mov
cmc
cmpsb
add
add
push
push
add
add
mov
push
test
xchg
arpl
add
mull
add
data16
add
icebp
jmp
in
hlt
lcall
jne
call
push
dec
pop
call
push
push
add
not
push
push
pop
add
xor
sub
add
pop
ror
dec
dec
add
pop
push
not
lea
add
pop
pushl
call
push
push
push
call
mov
iret
add
add
mov
add
add
mov
les
jge
mov
jle
mov
add
add
std
addr16
test
arpl
pop
lea
push
add
xor
add
dec
pop
push
call
push
push
add
not
dec
inc
push
push
pop
add
shl
shl
inc
sub
ror
ror
sub
pop
shr
pop
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
mov
jo
into
stos
add
add
add
filds
call
add
mov
add
add
mov
leave
jne
test
fbld
add
sub
pop
pushl
push
sub
rol
pop
call
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
jle
add
enter
xchg
add
add
add
call
xchg
add
pop
loope
add
xchg
add
push
push
mov
in
loopne
lea
push
push
lea
push
push
push
push
call
xchg
cwtl
push
add
mov
addr16
addl
hlt
add
add
cld
add
mov
add
add
add
in
mov
pop
pusha
jne
push
jecxz
add
hlt
addb
in
call
push
call
push
push
xor
sub
sub
push
or
not
add
add
add
sub
sub
lea
sub
inc
pop
shl
ror
pop
push
push
push
lea
push
lea
push
push
call
mov
add
add
jo
add
add
testb
add
push
add
pop
cmpl
push
gs
cwtl
roll
add
add
add
add
clc
nop
jne
add
add
add
repnz
roll
jne
push
inc
pop
call
call
push
push
push
or
not
add
add
sub
add
shl
dec
rol
pop
lea
sub
sub
ror
pop
push
push
push
call
int
push
shrb
mov
std
add
jbe
add
add
leave
add
add
add
iret
add
add
sarb
insb
jp
add
add
loope
add
in
hlt
lcall
jne
push
rol
sub
pop
call
push
push
push
push
call
add
lea
iret
jnp
add
add
pop
add
les
add
xchg
mov
add
add
pop
ret
out
shlb
jge
jne
pushf
in
xchg
add
cwtl
int3
add
shrb
outsl
pop
stos
push
shr
add
push
xor
add
ror
sub
sub
xor
sub
pop
xor
add
pop
push
lea
sub
not
pop
pushl
call
push
shr
pop
call
push
push
dec
add
shl
push
or
not
add
sub
sub
shr
sub
shr
pop
sub
not
pop
push
xor
not
lea
pop
pushl
push
rol
xor
ror
pop
call
push
lea
push
push
call
call
add
cli
hlt
add
int3
pop
jecxz
mov
add
stos
mov
mov
ljmp
add
sub
pop
call
push
push
sub
shr
push
push
pop
add
not
lea
shl
sub
lea
ror
pop
sub
shr
pop
push
lea
inc
pop
pushl
push
pop
call
push
push
lea
push
call
jle
stos
add
add
pusha
pop
negl
add
int
test
add
int
add
rolb
add
sub
pop
call
pop
push
dec
pop
dec
jne
push
push
call
add
arpl
xchg
mov
mov
loopne
rolb
xchg
push
add
add
mov
add
add
push
add
iret
add
icebp
stos
leave
aam
add
ret
int3
scas
add
add
add
add
ja
mov
clc
pop
call
mov
push
shl
sub
not
dec
pop
lea
push
push
sub
dec
push
sub
add
add
lea
sub
not
lea
ror
xor
pop
xor
rol
pop
push
push
push
push
push
push
push
call
jmp
add
push
sar
cld
add
ja
faddl
add
add
in
lods
add
mov
add
add
add
add
arpl
rolb
add
add
add
add
xchg
add
xchg
int
add
ficoms
rolb
jns
in
in
pushl
push
shr
ror
not
inc
pop
call
push
dec
pop
push
push
push
lea
push
push
push
push
lea
push
push
call
mov
add
std
out
add
fsubp
jb
stos
test
add
lock
fs
fdivrs
xchg
lds
add
add
xchg
jl
add
sahf
add
mov
add
add
xchg
cltd
add
pop
add
push
fnstsw
roll
mov
add
add
add
sub
pop
call
push
push
inc
push
xor
add
add
add
rol
sub
add
pop
ror
pop
push
sub
pop
pushl
call
push
push
lea
push
call
mov
add
hlt
lods
add
aam
add
jns
jbe
fiaddl
add
lods
cli
add
push
jmp
in
hlt
pop
call
mov
push
inc
inc
inc
pop
lea
push
push
shr
not
push
or
not
add
sub
sub
sub
dec
pop
dec
dec
pop
push
push
lea
push
push
call
cli
icebp
fdivp
jno
add
add
add
add
mov
add
jb
fadds
pop
pop
add
mov
xchg
bound
add
cmc
popl
lret
int3
pop
ffree
add
mov
xchg
add
cltd
add
add
xchg
add
lock
pushl
call
push
pop
lea
push
push
add
add
add
pop
push
push
add
xor
not
shr
pop
push
push
lea
push
lea
push
call
test
mov
add
add
pop
add
push
xlat
int
add
mov
cmc
mov
into
mov
ja
movsl
in
in
hlt
lcall
jne
push
push
sub
dec
shl
push
push
pop
add
shl
sub
rol
pop
pop
push
push
push
push
push
push
push
lea
push
push
push
call
add
add
fucomi
popa
jmp
add
jmp
mov
mov
add
aam
loop
add
jns
incb
pusha
add
mov
js
into
cmpsb
cld
loop
leave
add
add
loope
bound
lahf
lea
add
lock
mov
add
mov
pop
sub
pop
push
push
dec
sub
pop
call
xor
push
lea
push
push
push
push
push
call
ja
add
pusha
mov
stos
add
add
pop
push
mov
lret
add
mov
test
call
add
pop
clc
mov
xchg
add
add
add
jbe
in
lahf
xchg
add
stos
test
pop
rolb
jne
lahf
add
leave
ret
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
jnp
imul
jnp
fiadds
add
outsl
cmc
add
add
in
xchg
mov
push
fistps
add
rolb
outsl
xlat
add
mov
mov
add
aam
add
mov
add
fldl
add
rcl
cltd
roll
jge
push
add
add
jbe
mov
cwtl
xor
pop
jbe
scas
push
mov
test
lcall
pushl
mov
push
sub
lea
dec
lea
pop
jmp
push
push
sub
push
and
add
add
sub
ror
pop
rol
lea
xor
pop
push
lea
push
push
push
push
lea
push
push
push
push
call
add
add
push
popf
aad
xchg
add
add
add
add
add
roll
jecxz
pop
add
add
ret
pop
pushf
jbe
mov
add
jle
add
add
jns
add
ret
add
roll
mov
pop
mov
sub
pop
pushl
push
push
lea
push
push
push
push
push
push
push
lea
push
call
add
xchg
add
cmc
roll
aad
jns
jmp
add
lahf
add
push
add
fadds
mov
add
addl
fwait
add
add
add
xchg
adc
testb
add
cld
lcall
add
lea
in
add
out
adc
add
ret
lods
or
push
push
shl
inc
pop
call
push
push
lea
push
sub
add
inc
shl
inc
dec
sub
not
pop
sub
pop
push
not
shl
inc
pop
pushl
push
lea
push
push
push
call
out
jbe
add
add
nop
lods
jge
loop
cld
jecxz
leave
popa
add
ja
add
add
cmpsl
add
roll
xchg
enter
sub
pop
call
push
shl
pop
push
call
push
push
lea
push
push
push
lea
push
call
add
add
leave
arpl
add
add
cld
outsl
add
add
roll
movb
jnp
mov
mov
add
jns
xchg
gs
add
sub
pop
leave
push
shr
pop
add
pop
push
lea
push
push
lea
push
push
push
call
test
mov
popa
add
std
push
jno
add
out
xchg
and
stos
mov
push
adcb
mov
stos
mov
add
add
iret
add
xchg
popl
add
movsb
add
clc
mov
add
add
add
movsb
add
lcall
push
add
ror
pop
pop
push
lea
push
push
push
lea
push
push
push
call
add
add
xchg
std
rorb
call
arpl
add
mov
fwait
jl
imul
mov
int3
push
mov
faddl
add
mov
xor
push
not
add
inc
pop
inc
push
push
push
push
call
add
nop
repnz
arpl
jecxz
test
add
filds
add
add
ficomps
in
lock
lcall
or
leave
push
rol
inc
pop
ret
push
xor
ror
sub
pop
push
push
lea
push
lea
push
push
push
lea
push
call
jbe
jno
add
add
sti
hlt
cltd
out
popa
flds
arpl
movsl
add
int
add
icebp
add
int3
add
add
add
shll
ja
add
popf
add
int
mov
add
test
in
add
add
mov
lcall
in
push
sub
sub
pop
cmpl
jne
mov
push
shr
inc
pop
jmp
push
push
push
push
push
push
push
lea
push
call
mov
add
add
subl
lods
arpl
pop
add
pop
pop
jno
mov
add
add
xchg
arpl
add
lock
frndint
testb
lods
add
add
fwait
mov
imul
test
roll
mov
add
mov
aam
mov
sub
pop
mov
push
push
push
push
push
push
push
push
lea
push
push
call
testb
test
add
repnz
out
add
in
loopne
cmpb
in
mov
add
xchg
cld
add
add
push
add
add
pusha
call
aad
add
mov
xchg
xchg
frstor
add
sub
pop
and
push
lea
push
push
push
push
lea
push
push
push
push
call
pusha
mov
add
mov
add
add
jge
ja
cltd
jmp
addb
aad
add
mov
add
pusha
add
push
add
lret
cltd
xchg
stos
add
out
add
sub
pop
xor
push
push
lea
push
push
call
add
add
jl
mov
add
add
icebp
je
incb
xlat
add
icebp
add
js
popl
jge
add
add
push
pop
add
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
add
add
xchg
adcb
retw
add
add
add
mov
ret
arpl
add
stc
in
loop
loope
add
movsb
add
scas
lods
sarb
jmp
add
jl
add
test
test
scas
add
add
jnp
cld
jp
in
loopne
xor
dec
push
push
lea
push
push
push
lea
push
push
lea
push
lea
push
push
call
push
add
rcl
add
imul
aad
add
mov
loop
add
cmc
xchg
push
jnp
testl
add
fcmovu
add
lock
add
arpl
bound
mov
add
lret
add
aad
mov
add
lahf
lcall
in
fdivr
lcall
jmp
jmp
push
xor
sub
add
pop
sub
pushl
push
shl
pop
pop
push
rol
sub
sub
pop
sub
push
push
push
lea
push
push
push
push
push
lea
push
call
lret
popl
add
aad
lahf
add
add
add
out
out
add
add
add
mov
clc
xchg
stc
ljmp
fs
add
out
xchg
faddl
add
rcrl
pop
add
bound
lahf
add
sub
pop
cmp
jne
push
lea
push
call
subl
outsl
add
add
add
test
add
add
add
lahf
ror
add
call
mov
jbe
shlb
xchg
add
lcall
enter
lea
push
lea
push
push
lea
push
push
push
call
in
fs
mov
add
test
in
into
lods
mov
je
add
mov
movsb
mov
ret
add
add
add
jge
in
test
faddl
add
int
testb
negl
xchg
add
in
mov
add
jmp
jle
sbb
push
lea
push
push
push
call
add
add
push
push
aad
mov
jmp
add
add
jbe
ljmp
jecxz
arpl
lock
mov
add
test
cmpsl
add
loopne
add
ljmp
mov
icebp
in
add
add
xchg
test
add
insb
mov
jne
in
fnsave
add
sub
pop
mov
push
shl
pop
shr
push
push
push
lea
push
push
call
add
cmpsl
xchg
xchg
test
mov
add
mov
rcr
test
stos
or
add
mov
lcall
add
enter
push
push
lea
push
push
push
push
push
push
call
add
add
add
scas
loopne
xchg
push
pusha
add
add
iret
test
movsb
lret
addl
add
roll
add
mulb
add
outsl
fbld
lahf
sti
sub
pop
pushl
push
lea
push
push
push
push
push
push
push
push
lea
push
call
popa
add
add
mov
push
arpl
mov
xchg
in
insb
add
add
xchg
add
jno
in
add
add
test
jbe
add
add
push
roll
add
stc
out
mov
addb
popa
mov
sub
pop
pop
push
lea
push
push
push
push
push
call
jns
mov
mov
push
mov
divl
test
insb
test
jle
push
add
pop
add
mov
imul
in
xchg
add
lcall
pop
fcomip
lret
mov
hlt
sahf
mov
bound
shr
push
add
dec
pop
and
push
push
push
push
lea
push
push
push
push
call
mov
mov
push
add
add
add
push
add
stos
add
add
add
add
add
add
add
mov
jns
xchg
add
fmull
xchg
add
add
push
pop
add
mov
add
xlat
push
add
mov
add
mov
in
loopne
lcall
jmp
cmp
jne
push
push
push
push
push
push
call
add
add
out
scas
add
xchg
add
ret
stos
mov
arpl
mov
add
pop
mov
mov
test
ret
stos
lds
push
push
push
push
push
push
push
push
lea
push
push
call
ja
data16
lea
add
add
mov
pusha
xchg
stos
pop
pushf
fsubrl
jp
mov
jmp
sti
add
clc
test
iret
add
push
add
lock
xchg
add
cmpsb
add
mov
lcall
add
push
not
shr
pop
push
push
push
lea
push
push
push
call
roll
mov
flds
add
fstpl
std
add
add
add
sub
pop
mov
add
push
lea
push
lea
push
push
lea
push
lea
push
call
add
pop
pop
jge
mov
add
je
cmpsl
add
cmpsb
test
add
add
add
mov
add
add
in
add
add
xchg
jge
sbbl
mov
add
xchg
add
stos
add
test
xor
lret
sub
pop
push
push
add
shr
xor
add
pop
push
push
push
pop
push
push
push
call
lods
roll
sbbl
cmpsl
cwtl
lods
call
add
add
xchg
mov
add
fwait
popf
add
push
push
push
push
push
lea
push
push
call
jecxz
add
add
loope
xchg
mov
into
nop
add
in
call
add
add
add
add
sahf
mov
sub
pop
mov
push
sub
dec
pop
lea
sub
push
push
lea
push
lea
push
push
push
push
push
call
add
mov
jbe
pop
ljmp
fadds
lock
int3
jae
jmp
push
add
ficompl
nop
pop
add
insb
popa
add
add
mov
add
roll
ror
sub
pop
mov
push
sub
rol
pop
shr
push
shr
inc
xor
add
pop
add
push
push
call
rcrl
push
out
int3
add
out
push
add
sti
lods
addb
mov
add
add
jns
cwtl
xchg
push
add
lcall
fwait
addb
add
pop
or
pop
sbb
push
push
push
lea
push
push
call
add
sti
mov
add
add
add
add
add
cli
sahf
add
out
add
ljmp
pop
add
add
jb
cmpsb
lds
add
cmpsb
add
lods
sub
pop
mov
add
push
dec
not
pop
xor
mov
push
shr
pop
and
rol
push
push
lea
push
push
call
adcl
out
add
pop
add
fcom
add
in
add
add
add
fucomi
add
push
arpl
push
jae
pop
add
jecxz
sub
pop
rol
push
pop
xor
inc
push
shr
sub
pop
cmpb
jne
add
push
push
push
lea
push
push
call
fisubrs
mov
hlt
push
cmpsl
adc
out
add
lds
add
test
mov
xor
mov
popf
add
add
xchg
xchg
add
ret
add
pop
addb
xchg
sub
pop
cmp
je
push
shr
pop
add
cmpl
jne
push
push
push
push
push
push
call
xchg
mov
andb
add
fmull
add
pushf
fildll
xlat
in
cld
lahf
aam
add
mov
xchg
add
add
push
push
fsubp
jge
add
add
jge
add
sub
pop
xor
push
shr
pop
pop
push
inc
sub
pop
pop
push
xor
shr
pop
pop
push
lea
push
push
lea
push
push
push
push
push
call
add
mov
push
add
mov
fldl
add
outsl
stos
xchg
add
fcoms
filds
iret
aam
sub
pop
pop
push
push
call
bound
add
popf
scas
mov
mov
pop
outsl
fwait
xchg
stos
lahf
f2xm1
clc
out
add
ficompl
push
lock
jl
icebp
add
push
scas
in
add
lcall
leave
push
push
push
call
add
shrb
jb
add
add
movb
lock
push
add
add
xchg
push
scas
hlt
add
add
addr16
add
xchg
andb
add
add
movb
sbbb
lcall
jmp
addb
add
add
ret
push
shr
pop
mov
push
push
push
push
push
push
push
push
lea
push
call
add
add
add
add
ret
ja
add
add
shlb
mov
pop
add
add
add
scas
add
xchg
add
mov
sub
pop
add
push
inc
add
rol
pop
mov
push
shl
sub
pop
test
push
shl
inc
pop
push
push
add
xor
pop
call
xor
push
lea
add
ror
ror
pop
pop
push
push
push
push
push
push
push
push
push
push
call
jnp
xchg
leave
jbe
jecxz
hlt
add
add
into
jle
xchg
push
cli
mov
add
negl
data16
int3
popf
nop
push
add
lea
cwtl
add
add
not
jp
aam
imul
push
int3
mov
hlt
sub
pop
pop
pop
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
mov
mov
test
xchg
bound
fwait
add
add
in
in
out
leave
push
out
add
cltd
xchg
icebp
jmp
mov
add
mov
add
pop
shlb
shl
mov
lds
lcall
push
push
push
push
push
push
push
push
push
call
test
movsb
add
pop
cld
jne
loope
pop
add
repnz
push
cmp
js
add
fildl
add
int
add
add
add
add
add
add
xchg
arpl
out
imul
lcall
push
lea
push
push
push
push
push
push
push
call
call
aad
roll
jnp
lcall
jbe
jno
add
std
rolb
xchg
mov
addr16
xchg
add
add
mov
jnp
js
push
jge
int
ljmp
icebp
pop
clc
mov
add
pop
add
add
mov
push
add
mov
loopne
lcall
push
rol
pop
ret
push
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
lret
add
call
jl
sahf
test
jge
add
mov
add
add
add
lods
push
add
add
add
push
mov
add
out
add
mov
add
leave
aad
sti
into
add
add
xchg
add
popf
add
add
fdivr
lcall
in
push
push
push
call
cmc
out
shlb
mov
add
add
push
add
add
faddl
add
add
add
mov
int
add
add
iret
add
add
cmc
test
add
mov
movl
add
jmp
icebp
push
mov
sub
pop
add
push
push
sub
sub
pop
push
push
add
xor
add
not
pop
push
push
push
push
lea
push
push
call
push
add
aad
rolb
cld
iret
xchg
xchg
outsl
add
mov
clc
mov
mov
add
add
xchg
jns
push
add
mov
in
pop
push
push
ror
dec
pop
mov
push
push
push
lea
push
call
rclb
ror
xchg
add
lret
enter
lret
add
std
into
add
add
push
out
mov
lahf
pusha
add
mov
add
imul
fstpt
add
lcall
lea
push
push
push
push
push
push
lea
push
push
push
push
call
mov
add
add
cld
add
lret
test
jl
add
pop
add
jb
add
aad
jo
pop
out
repnz
add
std
add
xchg
add
mov
popa
cmc
cmpsb
xchg
xchg
into
add
jo
filds
add
popf
loop
ljmp
aad
lcall
fdivr
lcall
ljmp
cli
adc
mov
add
add
add
push
xchg
add
add
loop
add
jge
jmp
loop
mov
jecxz
add
push
lea
movl
push
push
lea
push
push
push
push
push
push
call
add
add
add
scas
jmp
xchg
push
fwait
test
push
lahf
jle
shll
rclb
add
filds
add
mov
lea
add
add
mov
add
lcall
ficoml
push
push
lea
push
push
push
push
call
data16
stc
add
add
add
jmp
jbe
lahf
add
in
add
xchg
cld
loope
add
push
jae
add
lds
stos
add
fisubl
jae
gs
mov
shll
lret
out
rcl
scas
add
pop
js
fsts
ljmp
lea
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
add
pop
int
add
add
add
imul
push
add
addb
pop
lods
stc
add
push
sub
pop
popl
mov
push
push
lea
push
push
push
push
push
push
lea
push
push
call
in
add
add
add
fmulp
add
mov
add
int3
addr16
add
add
add
cli
add
add
mov
js
add
add
add
out
ret
out
add
add
arpl
push
icebp
jle
in
fdivr
lcall
stc
push
push
push
push
push
lea
push
push
call
lret
in
add
fdivr
test
add
add
xchg
jnp
push
jns
add
scas
add
jbe
jmp
add
add
outsl
fadd
mov
xor
push
push
push
lea
push
push
push
call
in
repnz
stc
add
xchg
aam
jl
xchg
add
nop
add
xchg
add
ja
jge
pop
pop
jb
arpl
stos
aad
in
push
cltd
lock
mov
add
mov
ret
sub
pop
lea
push
push
push
push
lea
push
push
lea
push
push
call
add
jb
jnp
add
add
push
loopne
lds
mov
roll
idivb
cli
insb
add
push
add
pusha
cwtl
add
jmp
in
loopne
lcall
adc
rolb
rol
lret
rcrb
rcll
nop
push
adc
push
push
lea
push
push
call
add
fs
add
popf
add
add
add
shrl
insb
xlat
add
add
push
clc
push
add
add
add
sub
pop
xor
push
ror
add
pop
rol
push
xor
pop
nop
nop
push
shl
add
pop
xor
push
sub
inc
pop
nop
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
pushf
jmp
andl
repnz
jb
mov
add
add
add
lods
push
add
out
jbe
std
add
add
add
les
add
mov
fs
add
cltd
aad
xchg
push
in
pop
cltd
push
movsl
cld
push
mov
mov
mov
add
test
add
nop
push
dec
sub
pop
inc
push
lea
push
push
push
push
lea
push
push
call
testb
add
add
add
jl
fisubl
rolb
add
push
push
add
mov
flds
popl
add
out
cmpsb
add
push
add
add
add
add
pop
outsl
imul
in
in
lcall
push
push
push
push
push
push
push
push
lea
push
call
add
in
rorl
add
add
xchg
add
cmpsl
mov
mov
add
add
jmp
add
add
ret
add
flds
sbbb
test
sub
pop
nop
push
push
push
push
push
push
lea
push
lea
push
call
ja
pushf
outsl
enter
int
mov
mov
gs
movsl
mov
mov
add
add
push
cmc
test
add
push
mov
fadd
pop
add
cmpsl
sub
pop
cmpb
jne
push
push
push
call
xchg
add
jmp
test
mov
add
add
add
push
lods
push
add
add
mov
mov
cwtl
repnz
stos
fstps
add
cmpsb
sub
pop
add
push
dec
sub
pop
nop
nop
push
lea
push
call
clc
add
sti
add
add
add
mov
add
shrb
add
imul
add
add
add
lahf
push
lahf
test
push
aam
add
xchg
pop
pop
lcall
loopne
sub
pop
cmp
je
push
lea
inc
add
lea
pop
nop
push
push
push
push
push
lea
push
push
lea
push
push
push
call
pop
xchg
add
fwait
xlat
shr
add
filds
iret
add
cmpsl
xchg
add
xchg
add
rcl
mov
mov
cwtl
sub
pop
nop
inc
push
push
push
push
lea
push
push
call
cmc
lret
add
add
add
add
lret
testl
in
mov
add
movb
add
add
nop
cmc
mov
jns
add
lods
add
mov
in
call
nop
push
inc
pop
nop
push
shl
xor
pop
cmp
jb
xor
push
pop
jmp
push
push
lea
push
lea
push
push
push
push
call
jne
mov
sarl
add
lcall
add
add
shr
xchg
add
jb
add
push
mov
lcall
push
and
not
sub
pop
add
movzwl
push
not
inc
pop
mov
push
push
push
push
push
call
std
je
add
loopne
pop
lret
mov
stos
test
add
movb
add
mov
add
add
add
pop
jle
sub
add
lret
lret
iret
xchg
loop
add
add
add
add
xchg
add
mov
add
jl
add
add
pop
add
sub
pop
add
mov
push
lea
push
lea
push
call
faddl
add
loope
pop
jle
jb
fdivrp
enter
add
out
rcll
mov
outsl
add
lods
std
add
add
fildl
lock
add
add
sub
pop
xor
xor
push
push
call
mov
add
stc
mov
notb
imul
test
addl
lods
fs
stos
std
add
sub
pop
shl
push
push
push
push
push
push
call
add
add
gs
jmp
xchg
pop
xchg
jnp
mov
pop
cltd
mov
scas
jle
lods
add
cld
pusha
add
add
mov
add
jge
fldl
add
add
lcall
dec
nop
add
loope
push
not
sub
pop
xor
shl
push
push
push
push
push
push
push
call
lahf
int
nop
mov
loope
scas
add
fadds
add
into
add
mov
sti
xchg
add
lock
mov
add
pop
xor
mov
push
pop
add
push
pop
pop
push
push
lea
push
push
lea
push
push
push
push
call
add
in
mov
mov
mov
adcb
shrl
out
imul
hlt
movsb
push
push
fnstenv
testb
xchg
in
add
test
add
add
mov
fwait
add
mov
add
testl
lret
add
lcall
pop
push
not
sub
pop
pop
push
push
lea
push
push
push
push
push
lea
push
push
call
add
ljmp
mov
add
stc
scas
jmp
stc
cmc
scas
fildl
add
loopne
add
imul
popl
loop
mov
add
sub
nop
gs
roll
add
mov
negl
testl
fdivr
lcall
ret
push
push
push
push
push
push
push
push
push
call
mov
add
add
pop
add
lock
mov
popa
add
add
add
add
sbbb
pop
add
addl
out
data16
leave
sub
pop
push
push
push
push
push
push
push
push
push
call
add
fsubl
bound
mov
add
pop
jmp
add
test
out
add
lret
add
movsb
out
test
arpl
rolb
sub
pop
mov
push
push
lea
xor
pop
push
push
shr
xor
pop
push
push
push
lea
pop
mov
push
push
push
call
popl
add
mov
xlat
add
movsl
add
jecxz
add
aam
add
popf
xchg
aad
fadds
movsl
add
add
push
xchg
icebp
test
jecxz
mov
mov
add
lods
push
add
ja
popa
cwtl
mov
pop
mov
mov
push
not
not
not
pop
test
je
mov
push
add
ror
not
pop
test
je
push
lea
push
push
push
lea
push
lea
push
push
call
fiadds
add
add
loope
add
add
int3
loope
loop
add
push
imul
jbe
cmc
pop
xlat
add
lcall
notl
xchg
jae
insb
stc
push
lea
push
push
push
push
push
push
call
add
add
jl
xchg
add
test
add
fucomi
mov
jbe
add
pop
pop
aad
scas
outsl
jmp
mov
add
mov
add
dec
add
xchg
sahf
sub
pop
mov
push
push
push
lea
push
lea
push
push
push
push
call
add
add
imul
cwtl
cmpsb
jle
push
jl
lahf
ret
pop
data16
data16
mov
leave
cltd
xchg
nop
add
add
add
pop
add
out
addl
icebp
add
add
xchg
lret
mov
adcl
add
mov
sub
pop
mov
inc
push
sub
dec
pop
cmp
je
test
je
push
lea
push
lea
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
imul
int
fbstp
add
add
orb
outsl
add
std
xchg
add
add
shll
push
lods
jge
add
add
add
add
xchg
jle
stos
mov
add
add
add
sub
pop
mov
inc
push
shl
add
sub
pop
cmp
je
test
jne
push
xor
lea
pop
xor
push
push
push
push
push
push
lea
push
push
push
call
mov
rolb
add
addl
add
mov
add
mov
jne
hlt
jns
in
fcompl
pop
push
lea
push
push
push
push
push
push
call
stos
stos
add
jl
pop
add
iret
add
ja
add
xchg
add
fnstsw
pop
addl
add
add
add
xchg
bound
push
add
in
in
pop
push
push
push
push
push
push
push
push
lea
push
push
call
imul
jae
test
addb
repnz
imul
push
jnp
mov
add
add
lcall
push
add
lea
pop
leave
push
push
push
push
push
push
push
lea
push
call
mov
jmp
add
add
test
add
xchg
fdivr
xchg
mov
loope
add
mov
add
add
add
or
push
lea
push
call
pop
call
scas
add
test
cli
push
add
mov
aad
nop
mov
test
scas
ljmp
clc
lcall
push
push
pop
inc
cmp
jne
push
push
push
push
lea
push
lea
push
push
call
stos
add
dec
jne
lods
pop
pop
add
add
add
in
gs
add
add
push
push
jb
arpl
add
add
add
int3
cwtl
filds
pop
add
aam
add
add
mov
out
rorb
std
add
in
in
lea
push
push
push
call
push
jmp
add
add
clc
push
add
add
fistpl
out
add
call
add
add
jnp
mov
add
add
filds
test
add
add
adcb
in
hlt
lcall
popa
add
shrb
rcrl
je
mov
push
push
lea
push
push
push
push
push
push
push
call
jl
add
int3
add
add
loopne
test
rclb
add
add
mov
push
icebp
rclb
jp
pusha
lahf
scas
jne
out
roll
pop
add
add
mov
add
filds
clc
add
insb
loopne
push
add
in
mov
sahf
push
lcall
movb
lea
add
add
pop
cmp
jne
push
dec
pop
mov
push
push
push
push
push
push
lea
push
push
push
call
add
add
push
fwait
add
out
add
add
add
in
lahf
add
test
in
test
mov
jbe
jbe
add
stos
push
pop
add
pop
add
loop
pop
add
divl
push
add
mov
add
shl
rcl
lret
xchg
shll
mov
movsl
ret
fcompl
rorb
movsl
add
add
cmpb
mov
shr
les
callw
mov
push
push
push
push
push
lea
push
lea
push
lea
push
call
mov
hlt
pop
into
add
mov
loope
aad
jge
fadds
test
jle
arpl
pop
mov
roll
mov
loop
add
mov
mov
push
mov
add
cld
cwtl
nop
add
roll
loopne
test
call
dec
lea
push
push
push
lea
push
push
push
lea
push
push
call
pop
out
add
add
add
je
add
mov
scas
add
pop
add
lods
add
lods
movsb
sbb
add
pop
add
mov
mov
jbe
clc
add
add
xchg
fwait
sub
pop
jmp
push
add
add
pop
xor
push
sub
shr
sub
pop
pop
push
lea
push
push
push
lea
push
call
fwait
popf
mov
rolb
loope
mov
je
add
add
add
mov
add
jae
mov
add
data16
int3
addl
call
pop
add
xchg
add
add
add
jns
add
add
sub
pop
pop
push
lea
push
push
lea
push
push
push
call
rolb
stos
bound
add
nop
add
lock
scas
mov
add
add
add
add
ret
out
mov
out
hlt
pop
xchg
lret
test
into
ljmp
cmpsl
jae
aam
mov
jns
jp
add
popa
scas
add
add
idivl
test
lcall
push
push
push
call
pop
fwait
add
add
add
mov
in
jo
xorl
bound
scas
fsubrp
les
push
filds
mov
mov
pop
pop
push
not
add
pop
leave
ret
push
lea
push
push
push
lea
push
lea
push
push
push
call
loopne
in
add
add
lret
mov
add
pop
mov
jae
cwtl
add
jb
add
gs
add
ret
int
jo
xchg
add
add
xchg
xchg
add
add
leave
xlat
pusha
out
enter
add
lcall
inc
lcall
lea
push
push
push
push
push
push
call
add
add
lahf
add
cwtl
mov
add
stos
add
cmpsb
add
add
push
shrb
int
add
push
out
mov
scas
out
push
into
hlt
add
cwtl
add
lcall
push
push
push
lea
push
push
push
push
push
call
add
add
add
add
test
add
out
add
pop
add
in
loopne
pop
pop
push
lea
sub
pop
leave
push
lea
sub
sub
xor
pop
ret
push
push
push
push
lea
push
push
push
push
push
call
add
addr16
mov
add
add
in
add
cmc
jnp
jmp
add
pop
xlat
add
add
hlt
add
pop
subl
loop
add
fidivs
movsl
lods
push
add
loope
add
nop
jge
flds
pushf
scas
add
fdivr
lcall
push
lea
push
push
push
push
call
jge
mov
lret
into
add
rolb
enter
int3
mov
lds
add
xchg
std
filds
add
lock
ret
faddl
mov
in
in
pop
pop
push
ror
pop
pop
pop
push
lea
pop
pop
leave
push
push
push
lea
push
push
push
lea
push
push
call
add
add
add
push
je
mov
add
lea
scas
mov
int
add
clc
add
pop
shll
int
pop
test
or
lcall
decl
lock
ljmp
cmp
xor
out
std
incb
cld
decb
imulb
into
push
cs
roll
cmp
add
jb
xchg
sbb
repz
int
test
inc
shrl
into
cmp
jb
lods
mov
insb
fwait
sbb
add
mov
fstpt
idiv
fsubrl
cmc
xor
inc
cmp
adc
xchg
inc
je
cld
and
mov
xchg
je
je
xor
push
cmpsl
mov
jbe
inc
ret
lahf
not
pusha
mov
hlt
jno
cmpb
mov
hlt
insb
mov
cmp
aaa
jl
xlat
int3
or
add
clc
call
jp
cmpb
push
mov
cmp
mov
xlat
into
and
mov
sbb
mov
mov
jno
gs
jmp
int3
out
mov
mov
push
and
mov
adc
lock
add
jecxz
js
test
pop
push
testb
in
xchg
adc
push
mov
push
je
push
adc
mov
sahf
xchg
pop
mov
add
push
daa
popf
cmp
pop
jbe
or
push
push
cli
inc
sbb
mov
sbb
xor
ds
push
aad
xor
cmp
jbe
dec
lods
sbb
and
mov
sub
push
mov
add
les
mov
cmp
insb
xlat
lods
int3
jecxz
pop
push
sbb
pop
mov
jp
and
lds
insl
inc
push
shrb
xchg
mov
xchg
mov
adc
cmpsb
je
lods
dec
adc
jecxz
mov
pop
outsb
jg
jle
xchg
jbe
lods
lret
inc
stos
jg
xor
sbb
or
jae
jg
push
pop
popa
cld
push
imul
adc
adc
jge
test
mov
imull
data16
or
ret
rcrl
shrb
cmc
push
mov
sub
pusha
mov
gs
popa
std
es
rcr
fs
adc
xchg
mov
fwait
icebp
movsl
sbb
mov
mov
xchg
faddl
sbb
in
add
push
add
jecxz
push
std
mov
imul
mov
sub
pop
repnz
push
pop
mov
and
jo
es
mov
mov
call
push
lret
dec
loopne
inc
cltd
push
lock
add
fxch
inc
mov
sahf
imul
adc
cwtl
pop
pushf
insb
push
fisubrl
enter
push
cs
adc
add
iret
xor
lahf
sub
push
mov
cmp
mov
mov
outsl
lock
and
enter
lret
es
add
imul
aam
jge
adc
jno
inc
push
inc
es
pushf
xchg
repnz
xchg
repz
mov
xlat
push
sub
push
xchg
xchg
leave
add
jp
movl
or
cmp
sub
mov
adc
cmpsl
xor
cmp
cmpsl
jo
ss
and
mov
mov
sarl
scas
ss
sub
dec
mov
mov
je
xchg
push
fsubp
pop
push
jae
loop
or
js
into
sub
pushf
xchg
push
shrl
push
data16
mov
lahf
out
das
ja
daa
jns
clc
js
subl
jecxz
int
mov
iret
ja
enter
mov
in
sbb
mov
fsubl
insl
mov
fldl2t
mov
pusha
cmc
xchg
mov
jo
sar
jp
xor
scas
cmc
mov
jno
pop
sbb
add
iret
leave
adc
adc
add
xchg
dec
hlt
and
or
mov
das
daa
pop
mov
sub
push
ret
in
sub
mov
sti
jp
jo
aaa
bound
add
divb
lock
cmp
dec
insl
pop
xchg
jb
shrl
mov
adc
repnz
dec
sti
lods
push
daa
bound
stos
mov
lods
push
jne
push
xor
lret
sub
lcall
pop
jge
and
js
sub
lcall
inc
sbb
push
mov
mov
pop
pop
pushf
mov
sub
mov
jae
outsl
in
jge
pushf
cmp
jae
pop
jbe
movsl
sub
push
fucompp
cmp
inc
jl
xor
es
push
in
fiaddl
fdivrl
mov
mov
add
aaa
and
sti
inc
jns
add
cwtl
loop
mov
imul
repz
add
movsl
test
mov
and
movsb
call
aad
mov
in
enter
mov
and
mov
pop
pop
adc
stc
add
mov
insl
movsb
jmp
xchg
sbb
pop
pop
sbb
out
cld
sub
call
mov
outsl
mov
add
mov
fs
xor
outsb
xchg
dec
jno
xchg
dec
xor
pop
push
cmp
push
add
stos
pop
xor
fnstenv
mov
xlat
movsb
push
mov
cld
in
ljmp
and
movsl
jl
out
pop
xor
pop
push
aaa
icebp
mov
dec
push
fsubrl
dec
subb
dec
daa
mov
aas
push
cmp
jmp
cltd
jmp
loope
arpl
icebp
int
rcrb
xor
imul
std
mov
xlat
sub
ja
clc
lea
mov
sbb
xchg
stos
ret
jns
test
inc
call
sub
pushl
pop
push
popa
mov
test
and
mov
das
fldl
shrl
je
imul
fwait
push
frstor
inc
lahf
dec
int3
push
aas
je
je
lret
and
sub
dec
xchg
loop
movsb
das
pop
inc
sbb
adc
out
movsl
adc
jae
dec
mov
pop
jno
push
inc
ret
addr16
jnp
int3
fsubs
outsb
imul
notb
sub
jp
in
pushf
adc
int3
inc
ret
or
or
test
jbe
dec
adc
pop
cltd
xchg
jo
push
and
out
or
add
pop
xor
mov
dec
xchg
jmp
iret
test
test
jg
push
dec
divl
icebp
inc
add
jno
pop
pop
stos
stc
dec
mov
repnz
xlat
sbb
ror
outsl
mov
gs
jns
dec
jmp
and
es
xchg
mov
dec
xchg
cld
xchg
push
clc
loop
push
push
sbb
js
mov
fcoms
mov
ljmp
sahf
jle
pop
pop
xor
jg
adc
rolb
xlat
sbb
add
outsl
dec
fs
cmp
xchg
fst
sti
icebp
xchg
pusha
or
mov
je
mov
inc
ret
repnz
mov
mov
hlt
cmpl
call
leave
scas
add
sbb
mov
enter
dec
inc
pop
cli
cmpsb
mov
std
push
in
jp
push
or
sbb
sub
cs
push
mov
sbb
mov
and
stc
in
inc
jge
in
jnp
and
jg
mul
or
inc
jp
and
lds
test
lcall
popa
cmp
sbb
xor
or
mov
cmp
popf
fyl2xp1
mov
fcomip
adc
pop
mov
push
lret
xor
std
and
dec
mov
fs
pop
adc
xor
push
adc
cld
push
and
aas
ja
orl
clc
aas
insb
and
sti
repnz
jb
add
push
mov
sarb
dec
lret
pop
adc
jle
test
xchg
inc
mov
jl
mov
pop
pop
or
sub
cmp
jl
mov
jle
icebp
xchg
inc
inc
mov
sbb
push
in
push
stos
mov
and
mov
in
cs
dec
ss
mov
or
or
pop
enter
pop
pusha
jns
jbe
test
adc
imul
jle
lcall
sub
add
push
adc
icebp
into
cmp
lods
hlt
jecxz
and
notb
movsl
lret
lods
and
enter
imul
jg
lahf
mov
sbb
jno
jbe
icebp
push
xor
sbbl
sub
femms
bound
push
pop
sub
push
dec
lods
sahf
imul
push
jle
xchg
rolb
push
jns
cmp
arpl
inc
xchg
ds
orb
dec
push
pushf
stos
cld
and
inc
aad
lret
adc
cmpsb
stos
cmp
mov
int
jae
dec
mov
in
enter
jmp
adc
negl
aas
sti
les
jb
push
or
and
jecxz
jnp
xor
jmp
mov
sub
push
cmp
aas
push
pop
jbe
mov
bound
pushf
mov
cwtl
ficomps
icebp
out
jl
lock
jmp
xor
inc
push
rolb
jle
mov
jno
mov
jo
ret
and
fisttpll
cmp
mov
mov
cwtl
loopne
outsb
in
addr16
mov
or
lret
into
loope
fdivl
dec
push
inc
jne
fwait
mov
stos
dec
roll
and
xor
in
lods
jns
in
mov
pop
ds
or
mov
ds
cli
in
mov
clc
scas
sahf
or
mov
cmp
cmp
push
mov
dec
std
sbb
int
loope
sti
push
out
test
roll
jp
loopne
lods
js
xor
pop
pop
mov
enter
cmp
test
dec
lds
jno
popf
inc
pushl
popa
xchg
leave
mov
sub
mov
add
movsb
testb
ret
adc
lcall
in
jmp
adc
sbb
jne
mov
pop
in
mov
shl
jmp
sahf
cltd
lcall
icebp
cmp
mov
test
mov
jbe
in
push
stc
lods
fisubrl
jmp
dec
inc
push
in
ror
call
imul
push
outsb
or
dec
sbb
inc
sub
xor
mov
iret
bound
insl
fdivl
sub
mov
in
mov
scas
fstpt
cmp
sub
mov
push
shll
add
add
sar
inc
add
and
mov
das
xlat
mov
inc
jae
inc
sub
xchg
ljmp
scas
xchg
scas
sub
add
lahf
adc
int3
jb
cwtl
insb
cwtl
mov
jnp
xchg
mov
mov
hlt
stos
fidivl
pop
mov
fs
cmpsl
inc
repnz
mov
pusha
scas
mov
cmc
xor
push
cmp
and
jg
cmp
adc
out
pop
pop
stc
cmp
push
xchg
repnz
orb
movsb
in
rclb
std
inc
lods
cmp
ljmp
adc
fildll
pop
fs
and
ljmp
push
jecxz
scas
ret
mov
add
jge
xlat
pop
cmc
mov
push
lods
aaa
push
nop
outsl
cmp
mov
xor
mov
pop
sub
cltd
sbb
test
test
and
mov
pop
lahf
mov
lcall
inc
push
inc
js
or
sti
inc
int3
cmp
xor
testb
adc
imul
jbe
cmpsl
pop
inc
xchg
movsl
jmp
cmpsb
sub
add
jnp
mov
mov
movsb
in
dec
cmp
inc
pop
xchg
int
sub
xor
stc
aaa
xlat
cmp
cli
lcall
repnz
fisubs
popa
cmp
sarl
pusha
insb
sub
aad
mov
xchg
cmpsb
fildl
mov
nop
jle
outsl
mov
fildl
sbb
cwtl
xor
xor
inc
and
mov
jo
test
lods
rcll
cltd
in
mov
jl
outsl
sub
popf
cmp
pusha
xchg
popf
jo
cmpsb
daa
icebp
sbb
mov
mov
dec
push
lds
xchg
mov
adc
jo
sbb
xor
fisubrs
arpl
adc
movsb
hlt
dec
push
or
add
push
or
loopne
and
sub
pusha
lock
add
push
mov
push
dec
out
fwait
pop
repnz
pop
sbb
stos
xor
in
pop
subb
cli
leave
push
push
sbb
in
sbb
in
cld
dec
inc
push
sbb
adc
sti
cwtl
add
jns
adc
cli
lods
add
push
mov
sub
jnp
lea
mov
mov
push
and
cmpsb
xor
nop
cmp
cmp
lret
shr
pop
loope
jb
movsb
inc
popf
cli
sub
push
leave
mov
test
inc
push
xor
and
inc
xchg
push
pop
inc
sbb
lock
popf
dec
xchg
pushf
pop
or
rcll
dec
imul
cmpsl
leave
inc
cmp
test
jno
or
pop
cmpsl
inc
stos
aad
pop
push
lret
cwtl
mov
rep
dec
nop
xor
mov
jne
aas
sbb
cmpsb
pop
cmp
out
dec
sbb
pop
xchg
ret
cmp
jmp
jb
jo
loope
and
gs
xor
inc
out
and
sbb
add
in
fmull
sbb
lods
fs
ret
xchg
lahf
decl
mov
repz
jb
dec
mov
andb
add
inc
mov
xor
xor
inc
mov
mov
xchg
mov
dec
xchg
jp
test
adc
inc
les
das
mov
clc
add
aas
mov
movl
sub
repz
jl
stos
lods
js
cld
es
in
test
out
out
out
aaa
and
aam
cmp
jmp
std
in
orl
mov
pop
ret
dec
je
lods
int3
fisubrl
aam
bound
jg
lods
xor
imul
add
rolb
clc
out
es
pushf
in
sarb
xor
pop
dec
sbb
cmc
xchg
leave
shrb
and
mov
add
lcall
movsb
xor
dec
mov
in
inc
add
jae
out
iret
sbb
or
dec
int3
inc
push
stos
in
push
rcr
adc
lods
mov
pop
shl
insb
call
jl
aam
enter
cs
add
inc
cmp
sub
idivl
mov
loopne
add
pop
enter
adc
mov
in
mov
leave
cmpsl
mov
dec
ud0
add
jle
cmp
cltd
cs
cmpsl
pop
ret
inc
cmpsb
data16
pop
mov
pop
cmp
ja
sbb
neg
das
out
test
addr16
iret
cmp
stos
pop
lods
mulb
clc
fcmovne
inc
jbe
in
sub
ja
pop
fnstcw
push
xchg
hlt
lcall
sahf
add
test
jnp
inc
xchg
add
decl
test
sub
lods
movb
nop
mov
push
mov
add
ret
rcrl
int3
rclb
jmp
dec
std
or
arpl
mov
insb
xchg
or
out
inc
cmp
or
xchg
or
shll
mov
leave
divl
adc
cmpsl
test
mov
pop
push
test
and
jno
inc
or
push
loopne
rcrb
fidivs
out
cli
cli
lret
sbb
xchg
movsb
mov
jmp
push
sub
xchg
stos
aam
add
xor
add
push
lahf
in
jecxz
jp
or
je
mov
pop
mov
mov
xchg
xchg
inc
adcb
pop
sti
ss
andl
call
imulb
mov
dec
mov
loope
xchg
sub
fdivrs
idiv
jl
push
lcall
shrd
jbe
shr
jnp
push
jmp
repz
mov
insb
rorb
aam
jno
sbbb
sub
add
jg
cmp
pop
lret
cmp
aaa
mov
stos
fninit
call
test
mov
inc
out
adc
xor
shl
addb
stc
jns
sbb
dec
enter
add
sbb
xlat
push
lock
xor
fs
mov
jmp
roll
jp
dec
cmc
lret
fwait
sti
in
jge
into
and
cmc
sub
int
sbb
dec
xorl
xchg
out
out
scas
push
fdivl
ds
jp
dec
xchg
xor
stc
lahf
xor
mov
xor
adc
in
xchg
push
jnp
dec
shlb
jmp
imul
mov
in
add
hlt
lods
pop
jne
je
data16
rcll
aam
jne
gs
pop
lea
mov
inc
ret
les
mov
inc
mov
dec
hlt
shrb
inc
jecxz,pt
jge
mov
or
xchg
bound
add
add
lods
movsl
jge
push
push
jge
int3
mov
in
cmp
addr16
add
pushf
sbb
cmp
mov
into
add
push
shll
sub
cmp
aad
test
mov
loope
test
out
ror
and
or
lock
les
es
sub
mov
jmp
xor
stos
sbb
and
fldenv
push
jbe
cmp
adc
movsl
aam
adc
movsl
pop
jo
popa
movsb
jnp
mov
testb
pop
cmp
xchg
push
dec
sub
lea
cmc
jge
mov
in
insb
sub
scas
mov
cs
in
ss
pop
addr16
in
fistpl
dec
sar
iret
push
mov
mov
shrl
sub
jmp
rcrb
mov
mov
sub
adc
cmc
xor
in
aas
cmp
ss
xchg
repz
xchg
fsub
adc
imul
ret
stos
stc
jne
cli
sub
or
aam
cmp
pop
ds
and
rcrb
mov
pop
push
sbb
ret
mov
mov
pop
pop
xchg
cmpsl
mov
out
xchg
scas
and
clc
adc
dec
or
mov
mov
jno
xchg
out
xor
mov
pop
scas
cmc
aas
out
mov
daa
int
xchg
fisubl
mov
or
or
pop
xor
lret
pusha
push
jae
xlat
add
adc
fsubl
addr16
dec
jmp
std
mov
mov
aam
or
stos
hlt
pop
xor
sbb
cld
lret
and
or
sub
lcall
jne
sbb
sub
adc
lea
xlat
or
inc
in
add
popa
xchg
cwtl
xchg
push
push
and
inc
loopne
divl
outsb
cwtl
cmp
push
mov
push
mov
jo
jle
iret
sbb
and
call
push
fnstsw
inc
xor
inc
xchg
add
jb
lret
jo
mov
and
mov
out
mov
dec
mov
mov
dec
adc
mov
bound
ss
jbe
ds
jb
sbb
in
ds
mov
in
push
mov
mov
inc
testl
cmp
out
loopne
push
push
or
in
sbb
cmpsl
aam
psubb
dec
dec
ds
ljmp
test
int
mulb
mov
shl
dec
icebp
push
mov
push
add
add
xor
orb
hlt
pop
or
jg
pusha
xor
aam
cmp
push
jle
sbb
pop
out
cmpsb
and
adc
push
scas
cmp
jecxz
sbb
add
lret
sbb
cld
aaa
out
icebp
subb
jo
sti
and
inc
adc
sub
rorl
mov
in
test
decl
jl
sub
out
lods
push
dec
xchg
jno
loopne
arpl
mov
outsl
or
rolb
je
cmc
ret
pop
scas
mov
inc
sub
leave
mov
push
mov
test
pop
add
cmp
cmp
ss
scas
push
mov
xor
dec
or
aad
loopne
jp
or
imul
pop
push
mov
inc
xchg
jmp
aam
scas
out
push
cmp
or
ret
imul
dec
mov
flds
jl
cmp
push
fstl
inc
les
rorl
dec
mov
pop
mov
or
outsb
movsb
jne
pop
in
inc
les
inc
push
xchg
leave
push
mov
sbbb
repnz
push
out
sub
pop
jbe
repnz
or
fisubrs
xorb
and
xchg
js
fs
sub
lahf
cmp
mov
ffreep
mov
call
jp
add
sub
inc
shlb
hlt
and
mov
shrb
imul
jmp
test
mov
jae
xchg
push
repnz
inc
inc
icebp
aas
icebp
inc
xchg
popa
loopne
filds
xor
aaa
xchg
push
lods
xchg
xchg
xchg
clc
sbb
mov
jg
cmp
int3
inc
pop
xchg
fcoml
inc
insb
push
jno
mov
sub
adc
lods
adc
std
sahf
adc
in
adc
adc
pop
sbb
pop
sti
jmp
loopne
loopne
aam
idivl
jge
fstl
jle
std
mov
gs
xor
cmp
mov
out
insb
data16
dec
push
push
scas
pop
hlt
mov
pop
fs
mov
stos
dec
pop
pop
lock
repz
push
and
insl
dec
fs
dec
mov
mov
mov
stc
lret
lret
jl
pushf
lcall
push
jnp
out
loop
mov
negl
pushf
addps
push
test
xchg
and
arpl
scas
inc
xor
adc
icebp
bt
pop
cmp
adc
gs
jae
idivl
xchg
jno
loope
pusha
ljmp
push
insl
jno,pt
xorb
inc
adc
pop
cmp
int3
testb
push
xchg
adc
movsb
int
iret
mov
loopne
js
mov
out
cmpb
outsl
setp
cmp
push
or
stc
cli
mov
cmpsb
outsb
sbb
ret
and
add
add
outsl
enter
addr16
pop
sub
mov
jg
clc
cmpsb
mov
lds
dec
icebp
jae
dec
sbb
scas
cli
ret
add
es
out
test
ss
mov
out
test
inc
add
into
xchg
jmp
jg
fiadds
jge
mov
adc
sub
cmovb
loop
sub
jle
mov
in
sub
in
mov
sti
xorb
pop
jmp
xchg
bound
ja
sbb
lods
xchg
rolb
cmp
jg
mov
pop
push
pop
rcl
outsb
mov
xchg
inc
mov
dec
popf
aad
xchg
movsb
push
push
xchg
push
leave
outsb
xchg
xor
mov
sbb
jp
xchg
xchg
cld
loopne
outsl
push
xchg
pop
xlat
les
xor
scas
insl
adc
fisubrs
fwait
inc
in
pop
inc
jne
push
or
or
mov
mov
xlat
cwtl
pop
fdivr
cmp
mov
pop
lret
daa
inc
jecxz
push
ficoml
xor
xor
pop
stos
ret
sbb
in
push
addr16
int
or
hlt
pop
popa
dec
jbe
push
jnp
sahf
xchg
jbe
xlat
lahf
fnop
push
dec
pop
and
or
hlt
in
sbb
std
stos
mov
sti
mov
xchg
or
pop
xchg
sbb
jno
test
es
sbb
lret
inc
mov
mulb
rcrb
sbb
mov
mov
and
ficomps
push
cmp
mov
sbb
push
stos
lods
adc
push
pop
inc
test
popa
rorb
cmp
stc
dec
pusha
xor
inc
push
ljmp
push
orb
or
bound
xchg
add
mov
inc
or
or
subb
subb
sub
into
and
mov
inc
cmp
movsb
lahf
jnp
or
xchg
outsb
fistl
jb
push
mov
sbb
call
sahf
mov
mov
adc
dec
pop
xor
adc
dec
pop
add
imul
outsl
test
mov
or
pop
mov
mov
xchg
shr
adc
adc
lods
dec
stos
add
into
adc
mov
enter
int
scas
outsl
push
lds
mov
xchg
pop
test
sub
dec
addr16
mov
xchg
loop
and
and
sub
std
xchg
add
into
sbb
fadd
lcall
xchg
push
ret
mov
mov
sbb
rcll
vminsd
xor
out
mov
pop
cmp
out
loopne
das
ficompl
and
shrl
adcb
repnz
cld
movsb
xchg
jns
lods
iret
push
or
jge
jnp
pop
or
xor
jns
xchg
or
repz
test
ss
lds
mov
mov
das
shr
mov
call
hlt
imul
mov
insb
and
inc
pop
sub
je
aam
jb
or
fidivrs
or
pop
movsl
jae
xlat
mov
mov
les
adc
sub
in
sbb
cmp
xor
xchg
pushf
leave
sbb
popf
ds
inc
xor
sahf
iret
clc
repz
and
or
out
dec
xchg
outsb
xor
adc
cmp
out
mov
setno
fs
dec
dec
cltd
test
pop
xchg
mov
mov
aas
jmp
mov
out
addr16
sub
fwait
vpsubusw
in
cwtl
adc
aam
jns
lds
loopne
cmp
xor
mov
jne
inc
lcall
call
pop
add
mov
out
push
andb
pop
push
add
jl
add
stc
sbb
fsub
jge
push
xchg
add
sub
adc
push
mov
and
cmp
fwait
mov
pop
cmc
add
inc
sub
jecxz
pop
or
leave
sbb
xor
addl
cmp
cwtl
pop
rcrb
mov
sbb
sbb
mov
pusha
repnz
fidivs
push
push
push
sub
gs
and
mov
test
or
stos
jno
adc
xchg
ja
fisttps
mov
xor
inc
nop
or
sbb
sar
lret
enter
xor
call
fmull
and
push
fbstp
adc
push
mov
jp
cmp
lods
add
sbbl
push
add
and
adc
inc
mov
and
jae
jne
stos
std
add
mov
mov
jo
pop
jge
pop
test
cmp
hlt
stos
xchg
inc
lods
pop
sub
add
adc
xchg
pop
xchg
pop
ljmp
pop
and
dec
cltd
or
aam
dec
mov
or
xor
dec
jecxz
add
sbb
ja
cs
xchg
sub
mov
and
mov
mov
pop
stos
mov
cmp
lds
insl
dec
xchg
add
and
xchg
xor
aaa
dec
pop
orl
inc
or
popa
dec
jmp
in
xor
and
jge
fsubr
fnstenv
outsb
popa
xor
pop
mov
cli
out
movsl
cmp
sub
shrl
mov
rclb
xchg
daa
mov
aaa
lock
jmp
aad
mov
or
ja
fdivl
jge
push
jns
pushl
mov
jle
sub
push
and
xchg
jle
dec
xchg
mov
inc
xor
cwtl
or
push
stc
cld
rcrb
jmp
inc
mov
dec
jle
outsl
in
rclb
pop
cmp
test
adc
aaa
popf
jmp
jp
push
gs
mov
inc
lea
jns
in
cli
int3
mov
cmp
mov
or
xchg
add
hlt
cmpsl
mov
cmp
sbb
outsb
repnz
nop
dec
adc
and
addr16
or
dec
sub
es
aaa
mov
repnz
pop
int
shlb
adc
lods
popf
xchg
add
fdivs
mov
jl
push
ljmp
cmp
push
and
mov
pop
jmp
xchg
xor
mov
pop
dec
xor
movsb
xchg
xchg
mov
jnp
imul
nop
ret
jae
div
push
mov
lret
rcrl
cld
imul
int3
mov
sbb
jl
cmp
pop
scas
cmp
pop
mov
cmp
xchg
fsts
dec
pop
and
hlt
xor
add
jle
inc
adc
aas
mov
pushl
xchg
test
adc
mov
cwtl
shr
cltd
mov
lcall
pusha
out
inc
les
fisttps
aaa
jno
sub
push
leave
jo
dec
jns
mov
jo
hlt
push
rcrb
mov
daa
mov
je
ret
lahf
sbb
or
out
mov
mov
imul
loopne
jecxz
jbe
sub
pop
stc
add
call
aam
mov
dec
and
pop
test
lea
aad
cltd
lahf
into
sbb
pop
push
pop
rolb
test
lret
pop
adc
fsubrs
push
push
xor
incl
lods
lret
call
stos
mov
jp
cld
and
loop
jno
add
pop
loope
or
mov
scas
dec
loopne
inc
out
je
es
and
movsb
mov
fsubrl
ds
test
aas
bound
into
add
push
test
xor
cs
jnp
movsl
or
hlt
lret
mov
popa
nop
in
aas
shlb
adc
mov
jmp
aad
insl
aad
mov
inc
loop
ds
and
ds
in
insl
xchg
je
fsubrl
mov
xchg
icebp
cmp
imul
xchg
imul
sbb
push
mov
or
stc
mov
xchg
mov
push
xchg
pop
es
std
inc
jp
push
lock
call
mov
inc
xor
out
scas
inc
push
lar
cmpsl
movsl
mov
pop
popf
cs
lret
dec
fidivs
mov
mov
jnp
jns
loope
cmc
hlt
pop
in
adc
push
lods
mov
inc
gs
mov
cwtl
mov
jecxz
movsl
xchg
fbstp
cmp
leave
sbb
ret
lret
shr
jp
inc
inc
fs
icebp
dec
out
out
lds
mov
inc
outsl
pop
in
sbb
or
fmuls
xchg
loopne
cmpsl
jb
shrb
adc
ja
imul
ret
mov
mov
jnp
push
scas
ljmp
and
call
mov
lea
ds
subb
xor
fs
jo
mov
push
sar
mov
dec
aaa
dec
pop
in
and
xor
dec
out
pusha
sbb
fwait
add
jge
jae
and
inc
je
cmpl
sub
cmp
jl
in
lds
shlb
fcoms
andl
andl
dec
movsl
incl
mov
inc
pushf
dec
fs
in
das
push
fwait
aas
xchg
jnp
or
or
sub
mov
cltd
and
arpl
lods
dec
jno
mov
adc
ret
test
jae
sbb
push
inc
push
fdivrs
push
and
push
mov
push
pop
lret
ret
es
fmuls
push
cmpsl
mov
sete
sub
cmpsl
or
mov
fnstsw
das
fdiv
mov
clc
pop
adc
dec
test
imul
and
daa
gs
neg
dec
js
data16
and
enter
adc
lcall
dec
fwait
jns
bswap
and
push
or
cmpsb
xchg
lock
jae
lea
and
pop
mov
mov
inc
lods
xchg
jnp
cmc
es
cmp
fisttpll
into
out
pop
xor
out
addb
aas
inc
mov
add
xchg
xchg
lods
call
test
aas
add
adc
jecxz
adc
mov
stos
cmp
dec
xlat
cmp
push
and
cmpsb
insb
je
dec
cld
stos
ljmp
and
mov
scas
enter
or
xor
mov
stos
stos
lret
in
inc
subl
outsl
in
scas
punpckhbw
xor
cli
xor
pop
movsb
xchg
and
pushf
pop
push
lods
insb
icebp
pop
push
inc
sahf
rcrl
push
in
add
dec
scas
dec
dec
data16
pop
repnz
repz
add
push
inc
jno
mov
push
shlb
fadds
adc
shr
out
mov
cmc
jnp
push
sub
scas
mov
or
jne
lods
mov
adc
pop
cmpsl
push
mov
jg
cmp
mov
aad
mov
call
inc
add
popl
pop
add
scas
test
xchg
jle
or
or
fwait
pop
outsl
cmpsb
inc
sahf
mov
xchg
jns
mov
hlt
mov
int3
jle
inc
les
sbb
cmpsb
xchg
js
aad
cmp
push
add
cltd
imul
adc
data16
rcr
and
lea
cmp
jg
movsb
pusha
cmpsl
mov
scas
or
andnps
xchg
pop
jle
stc
repz
jg
adc
andb
enter
fldl
leave
lea
outsb
push
ret
cmp
loopne
popa
mov
lock
cwtl
in
cmp
xor
inc
push
clc
fnsave
or
xor
xchg
push
scas
loop
inc
fisttpl
sub
imul
mov
insl
ret
push
jmp
pushf
mov
jo
push
xchg
mov
sbb
sub
jns
loopne
scas
ret
cmp
daa
test
pop
xlat
mov
push
out
pop
inc
fs
mov
jecxz
jo
xor
xor
mov
out
mov
les
mov
mov
cmc
hlt
add
jo
cmpsb
dec
mov
xchg
mov
sar
call
mov
lock
sub
aas
dec
mull
dec
mov
dec
outsl
sti
or
out
test
jns
or
test
dec
xchg
mov
cmp
jnp
adc
jns
mov
push
sbb
mov
and
sbb
lcall
xor
daa
scas
cmp
scas
sub
mov
es
push
xchg
fsubrl
shlb
and
add
dec
sti
mov
lcall
xor
xchg
data16
movsb
imul
fs
add
dec
cmp
stc
fnstenv
ret
mov
in
and
lea
or
aas
push
cmp
test
xchg
sbb
add
jns
cmp
imul
dec
ljmp
adc
enter
pop
xchg
mov
mov
and
mov
out
movsb
js
repz
into
fnstenv
xchg
dec
mov
sub
movsl
mov
stos
std
and
repz
mov
xchg
push
xchg
mov
data16
cmpsb
xchg
cli
pop
loop
js
loopne
jmp
inc
iret
mov
dec
mov
xor
lahf
lcall
xchg
es
rcl
lahf
insl
mov
outsl
inc
fidivrl
pop
mov
popa
call
fnstcw
cmp
je
mov
mov
adc
sub
movsl
insb
icebp
or
pop
call
dec
xlat
std
dec
jecxz
inc
mov
mov
dec
mov
mov
mov
mov
sub
mov
inc
dec
xchg
jp
mov
mov
mov
leave
stc
data16
cmpsl
add
xor
and
sbb
shrl
jecxz
dec
pop
int3
mov
fdivrs
inc
xor
repz
out
js
out
das
sub
add
xor
ret
and
sbb
sub
lods
add
popa
pop
sti
dec
divl
push
fisubrs
xchg
icebp
xlat
sbb
push
xor
push
out
or
pop
imul
mov
pop
es
out
cmpsl
pop
ss
inc
cmp
rclb
cmpsl
outsb
mov
stos
push
int3
popa
es
mov
inc
cmc
subb
jbe
inc
adc
outsb
xchg
mov
push
mov
mov
in
xchg
jp
mov
or
mov
cmpsl
fildl
add
jmp
lret
ret
mov
outsb
pusha
mov
fsubrl
cmp
insb
mov
cmp
test
loope
rolb
push
or
mov
out
pop
add
xor
jg
ss
mov
mov
and
test
or
lods
dec
roll
ret
add
lods
lods
mov
cli
mov
pop
xchg
int
in
xchg
stos
repz
stos
xor
fucomip
cmp
adc
lods
mov
cli
scas
push
mov
pop
insl
into
dec
add
push
mov
cmp
xchg
fcoms
cli
adc
cmp
fmull
test
add
test
lcall
or
push
push
repnz
push
mov
mov
and
out
scas
ret
pushf
lods
pop
in
scas
inc
lds
sbb
mov
or
loopne
mov
cmp
xchg
pop
mov
rorb
xor
jle
add
sub
mov
pop
inc
aas
xchg
lret
xchg
mov
sub
mov
sub
adc
mov
adc
mov
pop
sub
cmp
mov
sbb
adc
inc
orl
push
pop
adc
dec
jge
add
fcoms
repnz
push
insb
sti
push
addb
xchg
xor
cmp
dec
xor
pop
xor
loop
push
lock
fwait
cmp
sub
cli
shll
iret
aam
call
fmull
insb
push
push
test
enter
lret
lret
mov
les
pop
dec
push
es
jno
mov
call
mov
or
jl
pop
mov
inc
ja
dec
adc
xor
rolb
cmpsb
nop
cli
add
test
mov
or
jo
pop
lds
cs
popf
pushf
jg
les
int
arpl
iret
xchg
xchg
add
push
xchg
mov
iret
stos
scas
or
flds
sub
jp
mov
test
test
push
inc
mov
notb
imul
dec
sahf
xlat
cmpsb
inc
decl
ss
mov
fwait
ss
push
dec
jbe
cs
or
pop
sbb
jle
rolb
mov
add
popa
arpl
lods
ffreep
sti
add
nop
xor
ljmp
mov
push
test
popf
mov
fxam
sbbb
cmp
mov
push
loopne
and
sub
pushf
std
or
sbb
mov
adc
lds
sub
add
and
mov
add
push
inc
in
hlt
mov
mov
ss
movsb
mov
xor
xor
movsb
adc
pop
arpl
add
ds
xchg
negb
jp
adc
add
xor
sub
ficomps
nop
jnp
scas
xorb
in
dec
sbb
movl
mov
ljmp
mov
lret
jnp
mov
push
jnp
loop
ss
inc
ret
mov
sti
ljmp
out
in
out
push
mov
test
ss
pushf
lret
lahf
aaa
data16
test
inc
addr16
inc
insl
or
out
inc
or
rorb
sub
push
pop
dec
adc
loop
mov
ss
mov
add
imul
ljmp
push
addl
push
hlt
push
inc
ljmp
pop
das
int
js
jne
dec
aam
loope
test
push
adc
sub
loope
daa
jb
mov
push
mov
vmovlpd
sub
and
in
xlat
shll
dec
mov
and
in
xchg
adc
test
out
in
rcrl
push
mov
lock
adc
loop
mov
sub
insb
add
mov
sbb
xchg
nop
stos
sub
push
std
or
or
jmp
mov
sbb
and
add
fscale
insb
xchg
andb
scas
ret
test
mov
dec
frstor
test
mov
shl
pushf
sub
sbb
js
ja
mov
cmp
or
jno
fisttpll
fnstsw
xchg
je
xchg
mov
out
dec
mov
add
pop
lret
iret
je
sti
cwtl
xlat
add
shl
gs
inc
mov
pop
or
fs
stos
rolb
ja
dec
cwtl
loope
bound
cmpl
jne
cmp
orl
bound
hlt
imul
pusha
sbb
fnstsw
aad
and
jp
lods
mov
xchg
xchg
js
jge
adc
adc
arpl
pushw
stos
jb
mov
notb
mov
mov
mov
out
sub
jge
outsl
out
jg
and
push
add
add
xchg
inc
nop
dec
jne
cli
ja
pop
mov
rorb
sub
xor
test
inc
fldz
mov
fimuls
test
sbb
cmp
cmpsl
mov
add
sbb
rcl
test
xor
or
setb
js
jg
xor
pop
lods
adc
rol
lock
mov
push
mov
inc
or
mov
sbbb
cwtl
add
adc
out
in
into
jle
pop
push
mov
insb
inc
mov
loope
rcl
lahf
stc
ror
into
add
sub
add
add
lods
mov
ds
rorl
push
loopne
pop
gs
out
lcall
cmpl
dec
shrb
lcall
mov
dec
insb
mov
aad
inc
sbb
or
cltd
cmp
mov
jp
test
push
inc
sub
add
push
lcall
aaa
enter
pop
mov
std
push
jmp
push
jae
inc
repz
jp
jbe
jno
dec
and
out
sbb
mov
shrb
dec
das
adcb
sahf
mov
ret
dec
fwait
inc
jp
add
and
lret
jmp
cli
inc
mov
insl
add
int
mov
adc
cmp
pop
into
cmc
fldt
xor
jns
popf
push
xchg
push
daa
outsl
roll
repz
in
sub
pop
daa
inc
lcall
iret
pop
sub
jb
dec
aaa
mov
imul
xor
test
lods
or
outsl
jmp
sub
adc
adc
push
fsubl
xor
cmpsb
pop
xchg
sbb
xchg
jp
pop
pop
inc
jo
xor
xchg
cmp
adc
loop
bound
mov
testl
xor
xor
bound
in
outsb
fwait
sub
mov
or
stos
mov
mov
xchg
movsl
cmpsb
jo
xchg
movl
mov
and
adc
adcb
ret
inc
rcll
mov
sub
cwtl
xor
arpl
xchg
cwtl
std
pop
sub
and
enter
sbb
add
and
push
jns
enter
in
pop
popf
adc
cs
xadd
jecxz
inc
jae
add
iret
cmp
leave
das
repz
divb
jg
rolb
movsb
xor
pushf
mov
mov
mov
inc
inc
pop
out
sarb
inc
push
into
push
pop
xchg
mov
pop
rsm
pusha
fwait
mov
negb
aas
fimuls
jmp
addr16
or
push
fs
std
dec
xchg
cmp
lods
push
inc
mov
adc
push
cld
ds
f2xm1
std
xor
pop
mov
adc
add
sub
pop
rclb
pop
cmpsb
js
shll
cmp
xchg
pushf
iret
std
mov
rclb
test
cvtps2pd
adc
pop
xchg
lret
jl
or
repnz
sbb
lahf
and
or
loope
pop
push
mov
xchg
mov
dec
and
dec
lcall
sbb
add
orb
out
test
xchg
test
imul
or
push
xchg
das
dec
mov
int3
xlat
lock
dec
gs
pop
push
ret
shlb
sti
repnz
inc
test
mov
imul
cmpsl
outsl
lcall
ret
nop
call
cltd
dec
mov
sbb
mov
add
sbb
pusha
xchg
test
adc
cmpsb
dec
mov
dec
adc
jp
cli
call
jne
mov
pop
shrl
test
xorl
mov
scas
mov
jp
pop
mov
outsb
cwtl
insb
loopne
mov
xor
inc
aam
jb
and
push
mov
adc
loopne
or
pop
repz
pushf
mov
cmc
xchg
inc
cmp
inc
sub
nop
cmpsb
or
into
add
sbb
sbb
push
data16
lahf
mov
lods
mov
push
mov
ret
lock
push
sbb
loop
les
sti
mov
cmpsl
in
push
adc
lcall
push
addr16
push
or
pop
inc
dec
clc
fsts
jo
or
mov
stc
sbb
scas
push
jne
mov
lods
shrl
dec
add
lods
ds
je
pop
shrb
icebp
cld
or
add
shrb
decb
add
clc
ljmp
cmp
or
fisubl
mov
fdivr
pop
xchg
xchg
jno
loop
xor
cmp
into
in
xor
fsubrl
into
int3
or
sub
bound
fwait
cmc
pop
sti
scas
inc
and
cmpsl
jl
adc
test
cltd
pop
mull
shlb
dec
or
jb
loopne
shlb
leave
pop
orb
arpl
dec
sbb
cs
cmpb
add
xchg
cmp
mov
jns
push
push
lea
lahf
dec
xchg
adc
mov
aaa
jnp
or
dec
imul
test
adc
mov
ret
dec
shl
movsl
sub
and
test
cmp
push
jecxz
sub
mov
stos
in
rol
push
xchg
xor
or
cli
inc
mov
nop
sar
xor
sbb
xor
mov
shll
dec
jne
adc
pop
xlat
or
fsubrs
cmpsb
add
rcrb
cli
cwtl
mov
adc
rcrl
cmp
out
jnp
and
xor
das
xchg
mov
xchg
test
mov
cmpxchg
sbb
pushf
cmp
imul
shll
adcl
or
or
int3
inc
jns
jecxz
insl
sub
fsts
mov
fisubrl
subl
mov
xor
popa
sti
lret
jo
loope
imul
lock
popa
mov
dec
sbb
rcrl
sbb
movsl
fldl
je
add
xor
xor
pop
jbe
rcr
cli
push
jmp
scas
lret
mov
adc
fistl
scas
sahf
mov
xor
adc
and
xorb
mov
insb
sbb
cld
fldl2t
in
or
outsl
loope
shlb
mov
pop
movsl
sarl
adcb
xor
mov
lea
add
ljmp
test
enter
fldl
mov
xlat
insl
mov
gs
pop
dec
cs
lods
jb
inc
ss
fbld
mov
sahf
cmp
mov
ja
out
and
maskmovq
mov
fcompl
andb
test
imul
inc
or
in
sbb
adc
lret
push
jns
cmp
leave
cs
mov
mov
lret
xchg
xor
dec
rep
sub
and
jecxz
sbb
xor
shrb
les
insb
icebp
int
cmc
das
mov
roll
xor
sbb
call
mov
adc
pop
imul
shll
mov
popw
pop
push
and
push
lds
pop
popf
xchg
dec
push
add
dec
xchg
xor
repz
cmpsl
add
es
mov
sub
xchg
pop
and
aaa
wrmsr
mov
pop
xchg
insl
fisubl
cltd
mov
and
mov
inc
sti
mov
lods
cli
fldenv
insl
cmp
dec
adc
cltd
and
movsl
cwtl
mov
icebp
dec
xor
and
push
jmp
xor
sti
loop
mov
xchg
loop
jge
jae
test
cmp
int3
cmp
or
mov
ret
mov
in
pop
int3
lock
xchg
stos
test
ljmp
cmp
mov
and
sbb
sbb
mov
jb
mov
loopne
jp
cltd
shrl
bound
push
jge
and
jnp
pop
push
fcmovne
jne
int3
adc
jmp
bound
cmp
loopne
pushf
or
sahf
mov
or
outsb
or
jle
or
pop
icebp
lock
ss
mov
movsl
jno
jns
icebp
aaa
pop
fnsave
aas
jge
rorb
sbb
mov
lea
jmp
aam
in
std
test
in
in
jmp
jg
movups
xor
cmp
xchg
cltd
xor
push
mov
cmp
mov
mov
jmp
imul
out
push
nop
pop
arpl
mov
xlat
bound
orl
xchg
push
or
jg
jo
aaa
lcall
test
jle
xchg
call
pop
sahf
push
jo
push
pop
das
push
rcrb
aas
push
mov
sub
clc
and
aam
imul
or
ss
cmp
pop
jo
add
cmp
dec
es
and
lds
mov
mov
aad
sbb
mov
and
ds
pusha
repz
mov
lock
pop
in
out
dec
pop
popl
and
leave
and
adc
dec
stc
mov
sbb
rorb
push
xchg
jo
pop
push
sahf
dec
roll
cmpsb
jl
pop
mov
mov
clc
jnp
pop
push
repz
cltd
sar
adc
adc
ds
orb
xchg
icebp
lds
stos
lds
clc
fwait
xchg
add
dec
add
and
ljmp
repnz
jmp
xchg
mov
lcall
push
in
inc
icebp
pop
mov
mov
mov
test
jle
inc
fisubs
jp
cmp
mov
ss
fildl
pusha
add
mov
push
xchg
stos
fists
mov
push
jmp
and
stc
sub
xchg
and
imul
jmp
lahf
outsb
xchg
repz
in
xor
pop
inc
xchg
jecxz
add
pop
mov
mov
call
jl
dec
int
movsb
or
das
cwtl
xchg
int3
mov
and
push
into
hlt
cmpsl
jp
mov
test
lcall
out
les
in
ds
add
nop
jns
mov
push
enter
add
dec
lods
stc
out
push
cli
imul
mov
cmpl
push
and
cli
or
pop
out
pop
lcall
jg
adc
xor
test
mov
ljmp
pushf
push
cmc
and
adc
and
adc
adc
or
mov
pop
fidivl
dec
or
cmc
rcll
shlb
filds
cli
fstl
inc
popw
cmp
stc
int3
mov
mov
iret
sahf
and
cltd
nop
lcall
cltd
sub
and
push
in
es
or
ret
fcmovbe
arpl
inc
cld
mov
fwait
test
inc
ficoml
xchg
mov
sbb
stc
fldcw
ret
mov
dec
jecxz
inc
cmc
in
pop
mov
xchg
cwtl
int3
daa
insb
fimuls
inc
ret
cmp
xorb
mov
jae
xchg
cmova
mov
aaa
stc
cmp
lret
outsb
jmp
cltd
aaa
xchg
andl
mov
das
mov
imul
in
push
pop
add
push
pop
dec
xchg
mov
mov
repz
lock
loop
data16
jb
add
mov
movsb
or
xchg
inc
xor
mov
or
pop
in
adc
adc
add
rolb
jbe
mov
sbb
js
cmp
aam
ret
add
mov
out
int3
pop
mov
cmp
outsl
pop
cmc
aas
cmp
stc
xchg
aas
ja
fsts
sub
pop
ljmp
or
js
stc
jae
xchg
aam
add
jbe
clc
jns
sbb
mov
mov
adc
sbb
cmpsl
xchg
popf
jnp
or
sti
cmpsb
loopne
dec
mov
in
add
es
insl
mov
leave
jmp
pop
pop
sub
inc
aad
mov
pop
std
and
lret
aam
add
dec
ja
dec
out
clc
jnp
add
adc
xchg
sbb
xor
jmp
sbb
out
push
in
les
mov
inc
push
push
mov
xchg
cmpsl
xchg
pop
mov
daa
pop
add
jno
jl
das
aad
insl
imul
movsl
lods
cmp
inc
add
call
aaa
rolb
iret
push
jg
outsl
sbb
xorl
and
ja
or
cmp
fs
mov
sbb
mov
push
test
repz
imul
dec
add
inc
jno
iret
dec
jmp
sbb
mov
mov
jno
iret
rclb
ja
lahf
jg
dec
mov
mov
es
push
lock
and
jb
mov
xchg
cmp
jo
push
popa
push
jne
ret
pop
inc
add
mov
mov
pop
mov
mov
pop
push
sub
daa
cmc
getsec
stos
add
stos
cli
and
mov
push
xor
xchg
pop
dec
inc
subb
add
mov
pop
scas
or
jecxz
inc
xor
add
fnstsw
mov
cs
lock
mov
inc
mov
das
outsb
mov
addr16
nop
inc
test
lcall
das
pop
jns
ljmp
js
out
ja
adc
push
sar
or
push
mov
daa
daa
or
pop
fnstenv
imul
add
shrb
jmp
or
stos
lock
lock
cli
outsb
popf
push
mov
xchg
call
cwtl
push
loop
cmp
xchg
xorl
mov
sub
test
adc
icebp
xor
dec
std
pop
mov
and
jecxz
sar
xor
test
dec
add
xchg
out
jmp
inc
sti
iret
jo
aas
jb
pop
adc
cmp
in
xchg
or
inc
inc
ss
mov
int
jge
mov
mov
stos
push
jbe
push
aas
jp
insl
mov
out
adc
pop
das
in
lcall
inc
icebp
push
and
dec
movsl
into
inc
or
mov
sub
test
push
push
mov
lock
and
imul
mov
sti
xchg
fs
dec
sbb
lahf
mov
mov
das
lds
shl
jle
test
mov
jno
fwait
popa
pop
loope
and
insb
pop
add
shr
sahf
ror
fsubr
pop
stos
addr16
das
test
flds
or
or
fdivrs
lock
push
fidivs
cs
or
jmp
popa
neg
aad
dec
and
stos
les
jne
cmpsb
and
gs
push
pop
cmpsb
lret
xchg
xor
inc
imul
popf
pop
sub
aaa
test
sbb
ds
cmp
cmp
sub
repnz
mov
mov
dec
in
add
dec
cmp
mov
mov
or
int3
jno
xchg
orb
mov
test
in
push
adc
push
icebp
popf
xor
int3
int
je
and
loope
mov
ret
mov
fdivr
jge
cmp
fisttpll
and
mov
loopne
lcall
jmp
xor
sahf
cmpsl
add
inc
mov
dec
add
flds
sub
notb
in
loopne
cmp
test
shlb
lahf
loopne
pusha
mov
cmc
sub
fistl
out
pop
sub
out
jle
aad
or
out
cwtl
mov
outsl
out
mov
mov
jne
xchg
push
mov
imul
sub
fsubs
xor
nop
mov
adc
cmp
out
sbb
jbe
mov
jmp
sub
fiadds
ss
mov
dec
jno
mov
inc
gs
lods
jmp
dec
pushf
push
mov
outsl
stos
sbb
mov
nop
ja
cmp
stc
adc
push
inc
dec
out
bound
inc
rcrl
push
mov
push
ss
ret
test
pop
lcall
push
aad
outsl
push
jno
enter
ret
mov
cmp
pop
xlat
mov
shl
frstor
pop
rcrl
cld
mov
push
dec
ds
or
mov
rclb
leave
and
inc
sahf
in
rorb
arpl
mov
jmp
jge
fistl
cli
dec
sub
cmp
jle
in
bound
mov
loope
popf
and
dec
idiv
int3
imul
add
cmp
clc
mov
out
test
and
and
mov
pushf
xchg
xor
fcmovb
fs
imull
sbb
sub
push
pop
das
repz
les
lcall
push
sub
mov
nop
daa
call
ficompl
push
mov
cltd
std
xchg
mov
cld
insb
push
mov
les
jno
lds
mov
sahf
ja
or
mov
data16
test
sbb
ret
or
mov
ret
aam
es
notl
rcrb
outsb
dec
idivb
sbb
dec
add
pusha
xor
cltd
or
and
mov
aam
les
push
jae
pop
scas
mul
scas
or
jecxz
lcall
add
stos
cmp
scas
inc
dec
mov
inc
mov
movsl
lret
mov
fbld
xor
imul
cmpsb
fnstcw
xor
popf
test
rorl
cmp
insl
jmp
in
push
dec
add
mov
adc
or
jecxz
xchg
shl
lods
push
pop
in
int
pushf
mov
cli
mov
adcb
mov
inc
hlt
push
outsl
inc
lahf
cmpsb
clc
orb
pop
loope
push
iret
pop
ja
ja
mov
sbb
push
adc
daa
dec
imul
mov
jmp
jecxz
mov
xchg
xor
loope
lock
mov
inc
dec
lds
cmp
imul
mov
adc
negl
and
xor
out
shll
inc
lods
mov
pusha
out
sarl
movsb
js
aaa
test
jg
pop
lock
mov
jl,pt
or
inc
xchg
jnp
into
push
cltd
int3
cmp
mov
xchg
jns
out
push
cmp
sbb
ret
inc
cltd
and
aad
jl
adc
sbb
enter
xorl
ja
int
jae
stos
sti
mov
inc
pop
jge
pop
xchg
mov
xchg
adc
mov
mov
or
or
das
jg
pop
lock
test
lret
ds
xor
sub
pop
or
loop
jb
cs
in
mov
shrb
pop
fcomi
clc
pop
mov
push
jae
push
in
test
out
inc
push
ret
pop
data16
enter
push
fistpll
jmp
js
xor
pusha
out
loopne
jno
stos
in
fstpl
sub
dec
call
xlat
es
cwtl
mov
dec
mulb
push
nop
stos
movsb
sahf
sahf
int3
scas
enter
pop
jmp
pop
sti
dec
loope
jnp
jmp
jp
cmp
or
xor
pop
and
rcrb
mov
and
mov
mov
mov
inc
test
add
pusha
push
inc
imul
dec
cmp
out
repz
inc
mov
mov
and
xchg
pop
pop
sbb
or
inc
mov
mov
jne
mov
jge
std
sbb
dec
shrl
pop
nop
lods
icebp
dec
lret
outsl
pop
xlat
mov
lods
add
or
cmp
fnsave
sub
lods
into
les
mov
fmul
push
xchg
ja
pushf
adc
jecxz
stos
or
loope
lods
push
adc
and
lcall
sub
dec
mov
in
sbb
or
xor
addl
adc
and
rcrb
sbb
xchg
mov
aas
std
adc
movsl
pop
imul
pop
ds
jg
adc
or
xor
fwait
dec
icebp
jnp
sub
push
pop
dec
cmp
rcll
std
aam
jbe
lcall
pop
insl
mov
in
repz
loopne
dec
stos
mov
mov
mov
ljmp
fs
xchg
lahf
jmp
push
sbb
test
mov
pop
push
stos
inc
vpaddusw
pop
adc
push
in
jmp
arpl
lea
xchg
std
xchg
sbb
mov
push
movsl
mov
int
jo
dec
add
stos
sub
push
xchg
cmpsb
cmp
push
fmull
clc
movsl
cmp
add
in
xlat
roll
pop
enter
cmp
xchg
movb
and
in
jl
insl
clc
mov
jbe
dec
adc
push
in
jns
mov
dec
pop
adc
lret
test
sahf
pushf
loope
adc
and
pop
imul
pop
mov
arpl
mov
nop
add
in
int
push
lret
and
jnp
mov
sub
and
cmp
push
pop
mov
cmp
push
pop
sbb
inc
ds
js
arpl
and
adc
xor
xorb
cmp
pop
jae
push
test
sub
inc
aaa
dec
out
xor
je
inc
imul
outsb
ljmp
andl
test
push
out
das
repz
xchg
add
int
pop
mov
cmp
inc
xchg
clc
cmpsb
jmp
cmpsb
negb
push
sub
xchg
adc
out
sbbl
lock
stos
test
xor
or
movlps
and
xor
lock
push
sub
outsl
jns
fimull
mov
xchg
jnp
rorl
or
mov
test
dec
cmp
push
sub
sub
adc
cmp
repnz
lods
aaa
fmuls
test
imul
xchg
add
out
cmp
mov
nop
xchg
popa
mov
dec
rolb
mov
nop
dec
xor
mov
xor
je
mov
mov
dec
in
lcall
cmpsl
int
fidivrl
ret
dec
push
mov
shrb
js
inc
loope
negb
lret
cmp
pop
fsubr
xor
dec
subl
pop
xor
pop
jecxz
jecxz
or
mov
idivb
lods
pop
and
xor
call
add
adc
push
push
fcmovnbe
out
pushf
dec
sbb
sbb
addr16
mov
adc
jno
pop
and
mov
addl
bound
cmp
pop
pop
imul
jecxz
fisubl
mov
xor
call
loop
packuswb
lods
pop
or
pop
decb
loop
adc
es
xlat
adc
stc
jno
cltd
xchg
pop
pop
dec
clc
filds
mov
pusha
add
loopne
out
enter
les
fiaddl
xchg
inc
adc
push
and
inc
mov
adc
stos
sbb
mov
bound
mov
push
push
arpl
or
sub
aas
ret
add
insl
mov
and
pop
sbb
mov
pusha
xor
jl
repz
fldl
mov
ret
ds
testl
jp
cmp
jmp
bound
pushf
pop
pop
or
out
adc
hlt
cld
jle
aad
bound
lods
or
je
add
fwait
in
mov
jne
cs
cld
jae
sub
inc
or
stc
or
pop
xchg
int
or
fistl
lahf
jge
mov
sub
cs
outsl
mov
insl
bound
xchg
pop
ja
imul
ljmp
fwait
scas
sub
outsb
xchg
xchg
xchg
dec
pop
fistpl
push
cs
orl
sbb
xor
dec
jnp
stos
push
enter
call
sub
jbe
loop
inc
mov
out
popf
jbe
insl
je
inc
mov
push
outsl
cmp
cltd
rcl
xor
inc
adc
pusha
fcmovb
xchg
lods
pop
push
mov
add
fiadds
repz
scas
imul
xchg
dec
or
rcpps
out
cmpsl
js
jae
test
nop
push
cmp
pcmpgtd
and
aas
cld
aaa
rolb
hlt
xchg
jb
or
dec
fstl
mov
or
sbb
aaa
adc
inc
xchg
xchg
sbb
nop
xor
outsl
xor
lods
adc
jecxz
jns
dec
xlat
imul
lods
cs
push
lods
push
js
mov
and
mov
out
pop
xchg
ljmp
jge
lods
jne
or
mov
mov
cs
dec
je
fwait
jle
popl
adc
pop
dec
jl
add
dec
cmp
mov
fimull
call
in
xor
loop
mov
mov
lock
stc
pushf
push
xor
mov
sahf
shrl
push
or
outsb
lods
cld
shl
aas
xor
loopne
fdivl
in
jecxz
inc
fcoms
test
inc
sub
xor
hlt
je
fildll
inc
cmpsl
cli
pop
out
nop
mov
jge
push
push
cmp
dec
jbe
ret
jb
mov
ds
adc
adc
loop
cmp
cld
cmc
out
sti
xchg
sar
adc
add
mov
shlb
data16
clc
mov
cld
scas
jae
ret
or
bound
jbe
out
testl
sub
xchg
add
and
andb
into
test
fmul
add
loop
mov
dec
loopne
adc
shl
outsb
xchg
out
sub
into
sub
arpl
dec
iret
push
add
testb
xchg
cmpsb
mov
hlt
inc
in
sbb
jnp
sub
cmp
pop
lods
fidivl
stos
mov
xchg
test
and
insl
jg
mull
sub
out
jns
xor
mov
int
add
in
mov
sbb
lds
push
out
and
mov
inc
mov
repz
imul
inc
inc
jl
xchg
cmpsb
inc
adc
cmp
out
jge
sbb
lods
das
loop
loopne
loope
popf
mov
aaa
fidivl
mov
out
cld
cmp
xchg
aam
push
push
xchg
fldenv
ljmp
imul
insl
les
pop
repz
imul
test
mov
pop
mov
xor
dec
int
xor
test
daa
ret
pop
sbb
inc
jb
sub
faddl
push
mov
inc
ret
fidivrl
mov
icebp
xchg
pop
ret
orl
mov
mov
xchg
mov
outsb
sti
push
clc
mov
jns
or
mov
imul
mov
cmc
pop
hlt
mov
xchg
or
movsb
test
pop
loope
cmpl
testb
jne
repz
lds
add
sub
mov
cli
insl
push
xor
fwait
pop
mov
fidivl
inc
xchg
les
mov
push
fcoms
push
sub
sbb
mov
es
divb
cmp
fs
add
push
fs
out
xchg
pop
lret
mov
stos
js
cmpsb
xor
mov
push
dec
push
inc
xor
pop
pop
pop
fwait
leave
loopne
sahf
flds
push
or
test
add
inc
mov
pop
bnd
loopne
xor
je
in
popa
loopne
insb
stos
pop
repnz
das
mov
adc
test
leave
jge
stos
shlb
sahf
add
lahf
jmp
stos
outsb
lret
pop
xor
sarb
repnz
adc
clc
fcom
pop
xor
sub
int3
bound
sub
andl
or
movsl
add
ja
fisubrl
jmp
pop
xchg
data16
sub
jmp
cmpsl
int
out
pusha
push
adc
xchg
xchg
lret
ja
insb
lret
daa
or
jns
jle
inc
cwtl
or
cltd
test
jge
in
sub
or
jne
adc
mov
outsl
pop
into
shll
loopne
lods
pop
int
fwait
test
subl
cmp
ret
and
out
mov
popf
jo
adc
stc
push
jl
insb
push
sub
cmpsb
stos
push
clc
sbb
mov
dec
pushf
adc
pop
or
lahf
in
jne
add
pop
push
and
loopne
mov
sbb
cli
push
popa
nop
dec
in
ss
ss
jo
sarl
xor
xor
jmp
cmp
daa
std
enter
in
leave
js
aam
stos
push
pop
pop
dec
mov
andl
jmp
sbb
sub
and
mov
sub
push
and
and
xchg
movsb
cmc
and
push
stos
insl
es
inc
cli
xor
mov
xchg
lock
push
cmp
lea
and
rorl
sbb
jne
bswap
jno
iret
xchg
dec
fistps
add
loope
aam
enter
mov
dec
or
incb
int3
shrl
add
pop
jo
push
outsl
add
mov
adc
add
jle
cli
mov
push
ror
cli
imul
pop
jno
lret
into
loopne
hlt
div
push
fisttps
mov
push
adc
call
push
push
inc
test
stc
add
test
out
or
fiadds
sbb
mov
xor
jmp
test
cmp
ds
add
xchg
jge
in
out
pop
push
push
insl
mov
punpckldq
mov
dec
das
push
and
outsb
jecxz
cmpl
shll
ret
vcvtdq2pd
dec
xor
or
dec
mov
es
mov
pop
jnp
call
mov
cmp
jle
out
cmpsl
jle
das
jl
sbbl
jae
jmp
pop
decb
jb
scas
dec
sub
flds
adc
fiadds
data16
imul
jb
push
sbb
jmp
and
out
incl
scas
cmp
push
rcrb
sub
in
push
mov
addr16
dec
fcompl
pop
push
xor
adc
insb
jge
pop
sub
inc
cmp
push
mov
push
jp
out
test
outsl
ja
cmp
mov
cld
dec
ds
push
addr16
xchg
lcall
xor
cmp
push
loopne
test
int3
leave
cli
pusha
pop
cs
scas
pop
sbb
sub
test
sbb
jmp
jnp
pop
lcall
or
add
mov
mov
outsb
bnd
mov
dec
push
dec
loopne
push
inc
sahf
sarb
data16
ss
shr
mov
xor
gs
popa
mov
sbb
or
and
mov
pop
add
in
lret
add
push
fadd
fwait
mov
cs
pop
cs
pop
pop
lret
sub
xchg
icebp
inc
mov
lods
lret
inc
hlt
das
sbb
out
sub
sti
popf
sbb
jg
mov
nop
push
bnd
test
jg
in
jns
mov
pop
mov
adc
pusha
push
lea
insl
push
movsl
xchg
in
daa
ss
imul
push
ljmp
mov
inc
pop
sub
iret
xchg
loop
nop
out
frstor
mov
and
fs
and
pop
jge
mov
cli
xchg
stos
adc
jmp
movsb
sub
pop
loope
test
push
addr16
push
test
das
push
pop
lcall
inc
fimull
lret
lret
into
clc
dec
jg
mov
cmpsl
scas
push
shll
xchg
or
mov
rorb
cld
pop
stos
xor
bound
pop
cmp
push
mov
cmp
out
fcomp
es
repnz
in
or
aad
or
daa
fcmovnbe
popa
fcmove
loop
test
mov
cld
popa
fildl
and
push
jge
xchg
mov
push
sbb
or
push
mov
stos
push
jg
pop
adc
adc
stos
and
aam
sub
mov
imul
lds
sbb
sub
in
mov
cmp
mov
es
inc
fmul
icebp
sub
addr16
xor
dec
mov
repz
cwtl
lahf
add
adc
mov
jnp
rep
and
sub
or
cmp
xchg
and
pop
jle
lret
imul
gs
dec
out
mov
mov
dec
add
dec
or
mov
lock
clc
and
or
push
cmp
mov
xchg
lret
cwtl
pop
push
mov
jge
cmpl
jle
mov
ja
push
xchg
sub
test
fsubrs
sub
inc
fwait
shll
aaa
aam
scas
add
shr
aad
jb
push
rclb
test
imul
scas
stos
gs
nop
cmpl
jnp
jbe
sbb
sub
jecxz
aas
xor
mov
cmp
int3
mov
push
push
add
xorl
jge
pop
stos
insl
into
add
loop
rcrl
in
pop
in
mov
jno
popl
pop
insb
adc
inc
dec
pop
jne
popa
rolb
fcomp
stos
hlt
negl
fnstenv
leave
aad
cmp
adc
and
cmp
mov
rorb
das
mov
fistl
cmp
mov
int
cmp
or
je
pop
pop
inc
sub
mov
cmp
xor
push
lea
adc
fdivrs
jecxz
jg
jns
push
orb
sub
push
or
inc
pop
sbb
mov
leave
minps
popa
sub
push
jnp
xor
mov
push
dec
hlt
sub
xorl
orb
std
mov
mov
xchg
rcrl
dec
xchg
nop
ds
xor
cld
popf
cli
iret
or
mov
inc
xor
mov
rclb
dec
ret
aas
imulb
jbe
insl
ds
adc
ret
add
loope
or
dec
test
add
andb
pushf
and
prefetcht1
jne
stc
cmpsl
pop
xchg
das
addr16
or
inc
xchg
lock
aaa
mov
test
add
es
mov
lds
jp
xor
dec
xchg
mov
fsubs
shl
cld
cmp
push
push
push
or
inc
adc
push
dec
or
and
aas
lods
dec
clc
fs
push
add
jo
out
pop
test
push
xchg
icebp
push
jbe
cmp
iret
in
lret
out
dec
adcl
das
jmp
in
add
test
mov
scas
push
std
or
test
rol
arpl
jne
xchg
fdiv
adc
movsb
pop
sub
fadd
xchg
enter
in
sub
push
rclb
ret
cltd
mov
adc
or
ret
sub
stc
aam
or
shlb
mov
jns
mov
addr16
push
cmp
ljmp
push
pop
orl
ficoml
dec
insb
adc
lahf
and
xor
aas
mov
push
xchg
jno
bound
test
mov
jmp
or
dec
push
and
fwait
sahf
sbb
out
frstors
cmc
les
in
lock
nop
pop
out
mov
fwait
idivb
iret
and
dec
push
push
cmpsl
push
jnp
dec
mov
xor
stos
cltd
cli
and
xor
adc
xchg
roll
push
inc
dec
jmp
xor
mov
push
arpl
aaa
enter
mov
adc
and
cmp
xchg
push
cltd
imul
icebp
ret
mov
hlt
xor
out
jno
adc
add
inc
sti
xor
movsl
xlat
insb
xchg
gs
int
sub
mov
push
cmp
mov
sti
dec
add
and
mov
fcomi
stos
cltd
fidivs
sub
out
add
xchg
popf
pop
sub
mov
and
sbb
sbb
add
and
pop
iret
sbb
sbb
dec
iret
loope
leave
in
movsl
aas
jge
and
sbb
insl
xor
ficomps
mov
fcomp
fsubs
xor
push
pop
aas
push
arpl
adc
addb
jno
pop
xchg
dec
lcall
mov
or
xlat
addl
mov
dec
sbb
mov
incb
imul
pop
or
or
bnd
ret
mov
movsb
sub
aaa
mov
movsb
subb
xchg
mov
fcoml
inc
loopne
jbe
or
mov
outsl
jno
push
mov
gs
mov
push
mov
adc
sbb
lds
inc
or
cmp
outsl
or
pop
jl
lea
push
pop
push
inc
arpl
jp
pop
cmp
lahf
sbb
dec
lds
setge
jl
bound
push
xchg
stos
adc
ljmp
popf
les
popf
adc
shll
dec
out
ret
stos
sti
cs
xchg
push
lcall
andl
repnz
xchg
call
inc
and
gs
pushf
add
bound
mov
push
and
fwait
inc
test
pop
fistl
adc
popf
imul
mov
fwait
or
sbb
inc
rorb
add
jno
push
gs
and
adc
mov
mov
and
jmp
lock
mov
push
xchg
insl
dec
xor
std
loop
pushf
sub
aaa
sbb
mov
mov
sub
popf
jmp
lret
out
decl
pop
xor
mov
outsl
stc
mov
mov
cmp
sti
rolb
inc
inc
leave
hlt
mov
scas
sub
pop
movsl
cmp
inc
clc
xor
push
dec
adc
xor
popa
aaa
fcomi
adc
mov
xlat
mov
push
lods
cmc
and
jno
sub
pop
outsb
sahf
js
jne
mulb
pop
jge
movsl
popf
les
sbb
mov
pop
push
inc
pop
cmpl
and
pop
cmp
repnz
nop
pop
and
scas
imul
sbb
xchg
and
mov
add
lock
in
jbe
fstps
sub
jge
les
fwait
rolb
das
lea
jge
pop
or
faddl
xor
mov
pushf
mov
pusha
aas
inc
mov
push
cli
mov
sub
and
mov
mov
adc
jno
push
cs
inc
das
jle
test
cmp
arpl
pop
stos
push
push
rorb
add
jnp
mov
sbb
clc
inc
add
shlb
inc
fcmovnu
aad
sarl
aam
adc
xlat
dec
enter
mov
movsl
enter
push
psrlw
push
sub
jns
repnz
das
or
mov
fwait
popf
scas
icebp
jne
insl
adc
outsl
movb
adc
in
hlt
jg
mov
xor
pop
mov
outsb
xor
out
mov
mov
mov
in
mov
cld
ja
into
int3
jge
inc
adc
ja
and
mov
or
mov
inc
out
aas
mov
fcoms
pushl
cli
mov
fisttpl
mov
xchg
xor
shll
dec
mov
xchg
nop
in
mov
xchg
jbe
out
jmp
incb
cwtl
mov
sub
cmp
outsl
mov
cmp
ret
fwait
pop
cmpsb
icebp
lret
cltd
xchg
dec
enter
pop
sar
repz
push
cmp
pop
mov
insl
inc
or
lock
scas
jae
nop
adc
pop
inc
lcall
xchg
xchg
ss
inc
pop
mov
mov
in
popa
cmp
call
ja
lahf
push
stc
and
iret
std
cmp
xchg
lret
push
lcall
movb
cmp
add
cwtl
mov
xor
pusha
cmovns
icebp
jne
jb
lods
jb
pop
popl
and
sbb
mov
xchg
adc
pop
xor
in
sub
cs
movsb
shlb
sub
movsb
mov
xor
insl
add
dec
push
stc
add
inc
in
arpl
sbb
pusha
pop
pop
test
mov
and
popf
push
cs
mov
pop
pop
jo
cmp
pushf
inc
popf
mov
xchg
out
sbb
frstor
mov
test
jecxz
sub
jo
sti
lcall
arpl
jecxz
mov
jo
sub
mov
xlat
mov
cmc
outsb
aam
mov
mov
mov
cltd
notb
lcall
addr16
inc
mov
sahf
loop
out
xchg
mov
cmpsl
jl
call
test
movl
inc
pop
and
or
cmp
lods
push
hlt
mov
fcoms
sbb
aas
scas
cmp
inc
pop
in
cmc
jno
push
ficoms
std
or
pop
cli
mov
ja
add
fstpl
test
cmpsl
into
and
mov
and
inc
xor
out
mov
stos
lret
imul
clc
ss
loopne
clc
lretw
addr16
sbb
dec
lret
aas
dec
cs
repnz
mov
sub
fildl
sti
jl
gs
popf
cltd
leave
cmp
jae
sahf
adc
or
xchg
scas
sub
mov
dec
cmp
outsl
loop
inc
pop
aaa
stos
outsl
subps
pop
ss
jl
xlat
popa
scas
and
sbb
sub
jb
hlt
js
ret
and
call
or
sub
and
and
hlt
scas
test
and
fsubl
dec
or
pop
cltd
pop
jbe
cmp
mov
xchg
outsl
pop
std
andl
in
mov
mov
lods
xsaveopt
lret
cltd
mov
enter
popa
cld
ljmp
push
lock
dec
in
adc
mov
xlat
outsb
mov
cmp
sub
mov
lret
inc
fisttpll
out
xchg
out
out
push
inc
std
imul
push
push
cmp
sbb
jbe
insl
jle
in
push
push
shlb
xchg
and
test
dec
clc
lgs
cmc
fnstcw
mov
nop
cld
hlt
dec
mov
nop
add
jnp
mov
icebp
mov
imul
in
enter
stos
iret
or
jmp
sub
jge
mov
popa
outsl
ret
and
and
out
mov
mov
movsl
out
lret
sbb
cmp
idivl
or
cwtl
adc
jp
mov
inc
mov
das
leave
gs
test
cmp
add
pushl
insb
xor
add
sbb
push
int3
pop
mov
mov
out
adc
stc
jecxz
fs
push
cmc
add
std
je
jle
inc
mov
pop
mov
out
stc
add
mov
mov
add
sbb
ljmp
mov
nop
dec
pop
push
push
fsincos
sub
push
int3
jmp
shlb
pushf
xchg
sbb
push
add
frstpm(287
arpl
pop
mov
int
lods
es
fucom
imulb
std
mov
scas
inc
push
insl
mov
sbbb
or
adc
out
jo
mov
je
push
push
mov
xchg
push
jle
xlat
sub
mov
mov
subl
mov
outsb
inc
iret
sub
sub
pop
sar
jnp
sub
jg
lods
mov
test
jb
mov
aaa
mov
mov
outsb
cmc
xchg
arpl
test
jbe
xor
xor
jo
fsub
or
lock
lock
push
jnp
jmp
mov
cmp
cltd
or
clc
adc
sub
aam
cmpb
sahf
add
faddl
lret
lcall
xlat
pop
sub
xchg
dec
or
loope
into
in
fwait
mov
ljmp
test
and
jns
sub
sti
cld
cltd
shlb
pop
iret
scas
jmp
jno
fmulp
pop
addl
mov
mov
mov
xchg
xchg
pushf
jns
adc
cmpsl
in
sahf
push
mov
fs
mov
insb
xchg
sub
sub
jae
dec
cli
push
xchg
dec
into
int
inc
jne
out
cs
addr16
cld
sub
into
sub
cmpb
mov
lret
xchg
cs
int
sub
xchg
sub
test
outsl
scas
addr16
adc
in
push
inc
xor
xor
mov
mov
cmp
leave
or
xchg
add
mov
xchg
inc
aam
out
dec
mov
mov
cmp
adc
ljmp
mov
pop
inc
maxps
push
pop
and
pop
cmp
xchg
and
int
cmp
mov
jp
push
gs
loop
pop
inc
pop
dec
xchg
xlat
enter
xchg
mov
andb
dec
sub
loope
and
inc
stos
fdivs
xchg
push
bound
imul
jl
jecxz
sub
mov
jmp
cmp
ds
mov
jae
fsubrs
lea
les
cmp
sub
push
daa
sbb
add
sbb
cld
in
call
sub
ss
mov
sbb
and
jp
adc
sti
inc
dec
enter
imul
add
test
xchg
pop
sub
stos
adc
mov
fldcw
xchg
es
mov
push
and
hlt
mov
scas
inc
sub
xlat
ficoms
sti
inc
push
mov
scas
dec
jmp
enter
sub
cmp
jmp
or
pop
scas
out
pusha
cmpsl
jbe
sbb
test
out
imul
negl
add
loope
dec
sar
lods
xorl
pop
das
lods
iret
adc
push
popf
cs
or
inc
ret
inc
dec
pop
lods
js
xchg
jl
dec
push
cmp
fs
ficomps
push
into
mov
mov
sub
arpl
xchg
and
jecxz
pop
in
jp
cmpsb
inc
mov
cwtl
pop
das
in
mov
test
out
leave
imul
cwtl
dec
cmp
idivb
push
adc
xchg
xor
mov
incb
xor
mov
shl
xchg
and
jno
sub
and
pop
mov
push
outsl
push
mov
pushf
mov
ja
daa
sub
fimuls
push
mov
in
fdivs
outsb
pop
test
add
scas
mov
lahf
adc
sub
cmp
mov
and
pushf
and
push
mov
pop
fyl2xp1
inc
cld
in
cmp
fmull
cli
pop
data16
dec
jp
aas
in
cld
mov
cmp
addb
cmp
add
mov
pushf
inc
cmc
cs
fnstsw
xor
jnp
adc
lds
out
adc
mov
push
dec
add
jbe
sbb
fildl
add
push
jg
rcrb
dec
push
lods
cs
push
popa
inc
popf
rol
jns
cmp
imul
mov
imul
sbb
mov
push
and
ret
mov
pusha
cmp
jne
out
lods
imul
ds
es
and
or
ss
mov
cli
inc
testl
mov
jno
gs
sbb
cmp
js
shll
loopne
outsb
xchg
stos
icebp
in
in
add
mov
gs
jmp
dec
sub
cmp
pushf
mov
xchg
sub
fildl
incl
xlat
ret
aam
nop
and
dec
or
insb
lret
lock
cs
mov
jmp
addb
lret
lcall
enter
mov
jno
aad
pusha
idivb
ds
mov
call
push
cmp
cli
dec
bnd
cs
nop
xor
fnsave
pop
in
fs
sbb
adcb
adc
nop
jl
and
into
dec
pop
lods
or
jae
dec
ret
push
xchg
push
mov
dec
ret
or
xor
mov
movsl
jns
leave
push
loopne
cmpsl
mov
push
mov
cld
scas
mov
xorb
daa
rorl
inc
mov
aam
in
or
test
orl
inc
jno,pt
push
sbb
bsr
leave
dec
pop
ss
sbb
jbe
ja
mov
outsl
daa
push
hlt
and
mov
js
cld
push
test
cltd
pop
jno
sub
fiaddl
stos
fnsave
jge
push
jecxz
int
lea
int3
dec
out
lcall
stc
out
js
mov
sub
into
lcall
inc
pop
jg
jnp
dec
sbb
pop
add
or
pop
subl
movsl
es
push
sub
mov
and
addl
comiss
or
in
push
or
dec
pop
inc
pop
imul
cvtps2pd
pop
push
xor
scas
aaa
inc
and
or
or
or
imull
cltd
jmp
addl
pop
les
push
js
xchg
ds
sub
stc
lret
inc
pusha
les
mov
adc
and
mov
push
dec
ss
jns
inc
xor
lcallw
add
mov
push
xchg
es
push
lea
jnp
aaa
scas
or
les
imul
lods
movb
push
xchg
sub
imul
inc
jno
test
fstps
fisubrl
sbb
pop
jo
jle
push
ficompl
mov
mov
flds
or
movl
sub
jge
push
out
xchg
or
sahf
adc
xor
mov
fisttps
or
ret
stos
mov
adc
orl
jl
inc
iret
push
sahf
data16
shll
and
repz
shll
and
adc
cs
scas
rclb
xchg
stos
cltd
lea
hlt
mov
bound
push
mov
jecxz
imul
inc
jo
xor
push
das
push
and
lret
inc
pop
arpl
jne
sub
cmp
mov
xchg
cmpsb
inc
sub
mov
pushf
sub
and
and
fldcw
fbstp
lods
xchg
pop
sti
in
inc
sbb
call
inc
or
imul
mov
in
xor
sub
iret
mov
sahf
clc
mov
loopne
idiv
mov
push
mov
dec
mov
sti
push
lods
adc
pop
mov
jnp
imul
std
lcall
mov
xchg
pop
xchg
mov
xor
xor
and
xchg
mov
pop
in
dec
gs
and
xchg
jbe
inc
sbb
scas
add
xchg
out
jmp
mov
jns
dec
scas
lock
fsubs
pop
stos
jb
fwait
mov
fwait
sti
std
dec
add
jo
jg
or
mov
sbb
sbb
data16
and
iret
dec
jnp
shll
loop
sub
fistl
pop
nop
insb
or
or
cld
jno
cmp
ja
pop
push
imul
ret
mov
subl
mov
lret
testl
loopne
aaa
mov
and
adc
call
out
xlat
inc
mov
mov
mov
arpl
cmpsl
dec
inc
mov
jecxz
loop
sbb
sub
mov
ds
inc
aaa
sub
lahf
sub
xorl
jnp
mov
scas
adc
inc
xchg
or
add
aam
ja
fstpt
and
fs
dec
pushl
pop
je
hlt
das
sbb
icebp
mov
rcrb
es
cmc
subl
fcomps
push
add
sbb
pop
div
cmpsl
jno
inc
popf
js
xor
jge
xlat
movsb
mov
pop
lods
dec
mov
sbb
jnp
lods
movsb
mov
std
lea
mov
fcomps
in
hlt
lods
jecxz
inc
loop
jns
out
xor
int3
scas
lcall
mov
push
test
cmp
stc
push
pop
cwtl
xchg
inc
or
mov
stos
cli
jno
stos
jge
aam
mov
jb
pop
and
cmp
or
sti
push
add
jle
cs
loop
lds
mov
jns
sub
and
cmp
cltd
jno
jle
mov
inc
dec
aaa
xchg
daa
and
adc
aas
arpl
test
fs
xor
repz
xor
push
arpl
sub
mov
cli
movl
pop
xor
cs
pop
cwtl
ret
icebp
jno
jp
loop
pushf
xchg
int3
pop
xchg
sub
loope
add
cmc
sbb
adc
push
add
iret
jp
ds
mov
mov
push
pop
call
mov
dec
shll
sbb
das
ljmp
add
and
xor
das
enter
mov
and
mov
loop
sub
xchg
sbb
mov
js
fadd
xchg
jmp
cmp
fdivrs
fucomip
or
jns
jecxz
xchg
mov
fs
mov
mov
clc
cmpsb
jb
sbb
mov
adc
sbb
std
dec
ret
mov
enter
test
sub
ljmp
sub
and
fs
mov
jb
nop
xor
dec
cmp
pop
xchg
std
pop
dec
push
hlt
fadds
rclb
pop
xchg
mov
xchg
xchg
out
mov
pop
idivb
jo
mov
mov
mov
push
scas
mov
adc
call
add
aas
test
mov
pop
pop
test
inc
fld
nop
nop
sub
aaa
test
or
mov
lret
lock
cmp
jnp
xchg
out
jl
into
or
and
popa
jge
xchg
pop
scas
imul
ss
fsubs
push
mov
xchg
out
push
ret
cmc
mov
sbb
sbb
sub
mov
sub
add
adc
gs
mov
scas
pop
cltd
pop
aas
xchg
scas
ds
mov
push
aam
cmpsb
test
dec
inc
mov
cmp
dec
adc
popa
inc
scas
sbb
test
pop
lea
movsl
mov
cld
outsl
ds
cmp
cwtl
sub
cmp
addr16
dec
fdivs
xchg
cmp
or
lock
aas
or
fists
push
es
push
sbb
mov
jp
adc
mov
mov
push
gs
push
sub
jg
in
out
shll
and
and
scas
push
fiaddl
das
xchg
sbb
sbb
dec
hlt
addr16
popf
xor
gs
stos
mov
mov
mov
xchg
pushl
mov
mov
add
dec
fisttpll
fdivrl
int
mov
pushf
aas
daa
sti
imul
dec
lock
jo
or
ret
fldt
mov
repnz
jno
mov
aad
xchg
adc
sub
pop
cltd
sti
orb
les
fidivs
mov
repz
out
add
in
in
lcall
xchg
movsl
imul
pop
fldt
stos
dec
dec
inc
mov
push
mov
adc
add
dec
jmp
cpuid
mov
add
ds
mov
mov
push
push
jo
gs
arpl
xchg
push
in
stos
mov
cmp
btc
dec
xchg
lods
es
xchg
add
sub
in
add
das
outsb
sub
mov
pop
mov
scas
lret
xchg
push
inc
icebp
ljmp
in
rcll
bswap
push
cmp
adc
push
sub
jge
and
outsb
pop
mov
sub
jl
aaa
xchg
cmpb
loopne
push
mov
sbb
data16
cmp
aad
rcrb
pop
vpunpcklqdq
inc
lea
pushf
sbb
jno
cmp
xchg
shl
inc
call
jns
cmc
sub
dec
dec
and
aaa
test
jg
fsubl
and
cs
hlt
add
xchg
hlt
inc
sbb
jb
jae
dec
repz
jecxz
push
mov
divl
push
test
add
jnp
inc
sahf
sbb
ja
xchg
cmp
lock
push
dec
inc
clc
push
mov
mov
add
sub
push
ss
setnp
int
int3
or
xchg
leave
fxch
js
fs
shl
imul
pushf
push
xor
insb
or
mov
pop
add
cmp
out
mov
sub
clc
add
cmp
or
outsb
jnp
insl
movsl
xor
or
dec
enter
aas
and
popf
repnz
fcoms
dec
dec
imul
xchg
in
and
xor
aad
push
mov
dec
dec
sub
stc
adc
mov
nop
inc
xor
ds
sub
popf
xor
ficoml
sarl
inc
jge
loop
jae
xor
rorl
sub
ret
mov
stc
repnz
adc
pop
sub
repz
jb
rcll
cmpsb
stos
ret
pop
sub
loop
iret
movsl
stos
daa
add
stc
mov
movsb
or
jbe
inc
idivb
iret
arpl
mov
ljmp
and
xchg
dec
out
mov
pop
lock
pop
into
xor
add
int3
sub
inc
sbb
repnz
lret
xlat
dec
addr16
fwait
jp
stos
xchg
test
je
mulb
roll
aad
add
gs
mov
imul
xor
xor
mov
push
mov
movsl
pop
push
std
ret
je
adc
or
jp
or
std
pop
fidivl
outsl
popa
dec
push
sbb
xor
adc
push
and
dec
mov
lret
lds
adc
icebp
ds
inc
pop
push
inc
sbb
pop
es
in
lds
lods
sbb
pop
or
mov
and
mov
lcall
or
and
shrb
or
adc
cltd
mov
jns
loope
fstl
jecxz
ret
movsb
aas
andb
mov
insb
rorl
aaa
sub
shll
stc
mov
fldt
gs
std
lods
jmp
mov
mov
inc
and
or
cld
shr
cmp
sub
je
nop
ljmp
mov
rcr
sub
xor
adc
adc
mov
ljmp
sbb
outsl
mov
xor
push
push
jo
push
dec
das
dec
mov
popf
std
mov
pop
jecxz
push
xor
xchg
push
xor
fsubrl
jg
sub
sbb
test
cmp
xchg
jb
addl
scas
jl
stos
shlb
fucomip
addl
leave
inc
mov
xchg
enter
push
in
lret
sbb
sub
push
mov
cmp
ss
pop
fadd
fs
xlat
pop
ret
sub
aad
mov
pop
scas
shl
adc
rcll
sbb
dec
dec
mov
mov
stos
add
jae
pop
addr16
cmp
adc
nop
pop
add
mov
xorl
pop
and
xor
cmp
cmpsb
fnstcw
adc
jno
jp
call
or
push
subb
icebp
aas
loopne
xchg
add
and
bound
and
outsb
and
xchg
rcr
fcomi
imul
pop
test
int
or
test
mov
loopne
dec
lahf
xor
ss
in
add
les
push
sti
cs
and
mov
xor
inc
aad
cli
pushf
mov
mov
jp
fcmovnu
addr16
cwtl
push
sub
xorb
xchg
rcl
and
jecxz
or
in
xchg
mov
loope
pop
addr16
pusha
sarb
sbb
push
outsl
std
stos
jnp
ficoms
movsb
xchg
xor
push
outsb
lcall
xor
cs
mov
jae
sti
scas
inc
push
xchg
mul
aas
pop
mov
aas
inc
inc
aaa
xor
cmp
xchg
mov
sbb
test
jmp
out
and
test
dec
pushf
pop
xor
lret
cmp
sbb
out
inc
xchg
jmp
out
push
and
out
mov
scas
add
mov
stos
sbb
lds
dec
loope
pop
out
dec
mov
fnsave
cmp
mov
xchg
dec
lods
test
push
push
mov
out
rcr
cmpsb
adcl
scas
test
fildll
add
cmpsl
enter
iret
mov
aad
pop
push
jp
push
mov
adc
pusha
ret
pop
mov
sbb
inc
and
test
test
adc
adc
idivb
inc
sbb
test
insl
cmp
sub
mov
out
push
shlb
sbb
test
add
sbb
mov
inc
jae
push
add
push
das
jmp
lahf
sub
inc
xor
leave
test
mov
inc
sub
cmc
push
mov
arpl
xchg
fcoml
dec
ret
or
jnp
and
mov
pop
mov
stc
pop
cld
cld
mov
mov
sub
mov
subl
mov
pop
ljmp
lods
insl
inc
int3
inc
gs
dec
mov
test
nop
sahf
sahf
or
sahf
push
icebp
inc
xchg
pop
jae
int
xor
mov
add
ret
jno
les
daa
mov
cmp
xchg
ret
fdivrs
inc
les
std
mov
mov
std
pop
lcall
lret
lret
pop
cmp
loop
test
push
cmp
push
popf
xor
jns
inc
push
add
mov
ds
pop
and
jge
adc
and
stos
lahf
or
fnsave
lds
in
push
cltd
dec
out
cli
dec
into
cmp
add
rclb
adc
lods
mov
xchg
aaa
lock
sbb
inc
and
rcrl
adc
mov
mov
ja
adc
sub
adc
or
mov
add
cmpsl
mov
jns
test
shll
sub
add
sub
popa
xlat
cmp
ss
idivl
jge
fstpl
xor
daa
insb
fsubl
cmpl
sti
lock
pop
in
imul
add
pop
arpl
into
xchg
or
orb
push
push
fwait
mov
xor
or
insl
enter
std
insl
addr16
and
cld
stc
addr16
xchg
subb
filds
pop
insl
fcoms
xor
clc
dec
jecxz
cltd
sbb
push
cmp
jecxz
xor
inc
cli
loopne
mov
cmpsl
push
xchg
cmpsl
sti
std
mov
sbb
scas
sub
dec
shll
jge
sarl
mov
ds
mov
daa
dec
mov
sub
les
mov
add
xor
xor
shlb
scas
jmp
pop
test
bound
dec
cs
mov
cmp
fcoms
es
adc
lahf
sarl
push
and
push
scas
lea
cmp
add
stc
push
loop
dec
mov
ljmp
out
push
push
mov
or
jns
orb
aam
ret
js
jl
sbb
lea
jbe
and
mov
push
or
mov
lret
sub
or
xchg
pop
cs
ret
aas
cmc
scas
lock
fstpt
xor
and
loope
push
enter
les
mov
cmp
test
mov
loope
outsl
sbb
bound
dec
cmp
int
fldl
repnz
or
movsb
orb
mov
cmpsl
aas
inc
jnp
add
cmpb
addr16
test
pop
test
mov
test
xor
lods
cltd
sbb
imul
sbb
movsb
inc
push
ret
lret
sarl
and
imul
jne
stc
rolb
push
sbb
pop
pop
daa
les
cmp
fucom
popa
mov
add
mov
and
add
adc
pop
xorl
xchg
pop
adc
jno
push
out
lcall
add
ret
mov
mov
stos
and
jae
lret
mov
mov
ja
repz
adc
clc
movsb
mov
cli
fiaddl
mov
cmc
std
les
lret
fsubrs
or
sbb
sub
lds
call
jecxz
pop
dec
xlat
jmp
and
pop
arpl
jns
dec
cmpsb
fsub
ret
jg
lcall
jle
push
and
data16
lods
sbb
cwtl
or
aaa
mov
push
xor
pop
mov
push
cmpsl
jp
ljmp
cmp
cmp
jbe
ds
push
sub
jg
inc
cmpb
scas
cmpsb
mov
and
fiadds
aas
mov
loope
xlat
xchg
lret
xchg
sub
jb
aam
xchg
repnz
mov
je
or
inc
inc
mov
sub
xor
mov
dec
ss
test
fmull
inc
lahf
pop
mov
push
int
jbe
fisubs
clc
add
or
pop
enter
cmpsl
pop
stos
push
xor
cmp
push
adc
lds
lret
pop
push
pop
xchg
clc
inc
sbb
in
ja
fsub
inc
cmp
imul
adcb
lea
mov
and
xchg
sahf
into
cmpsl
loop
rcrl
int3
addr16
mov
cmpsb
cmp
loope
jl
adc
test
dec
fidivl
hlt
jnp
rcrl
lret
stos
int3
test
out
jns
xor
sbb
add
addb
sbb
ret
std
pop
xchg
inc
mov
shrl
or
dec
dec
adc
inc
cmp
decl
pop
push
add
popa
cmp
mov
sarb
gs
and
mov
cmp
fdivl
sub
int3
jne
mov
inc
xchg
lcall
add
and
push
pop
pop
sbb
add
sbb
adc
iret
and
add
mov
cmpsb
filds
inc
xor
and
cs
aam
xchg
inc
mov
gs
or
fimuls
testl
adcb
lret
into
je
int3
icebp
js
ds
push
lds
or
sbb
mov
xor
jg
sub
cmpsl
lock
push
stos
push
es
sub
aam
adc
mov
adc
loopne
mov
fcmove
or
xchg
test
push
and
mov
mov
repnz
cmpsl
or
inc
aam
fs
jmp
mov
dec
xchg
test
jae
pop
push
hlt
sub
pop
cmp
mov
add
inc
std
vpor
cmp
sbb
mov
les
lods
inc
pop
add
dec
cli
fdivrs
lea
mov
bound
in
mov
das
mov
lods
loopne
adc
test
enter
mov
sbb
inc
and
shll
clc
adc
popf
inc
xor
in
mov
ret
out
jnp
pop
insl
dec
push
sahf
inc
sub
and
jo
test
dec
sbb
inc
stc
dec
aaa
xchg
lret
pop
mov
sub
or
mov
cmp
dec
arpl
xor
mov
cmpl
adc
mov
jl
cmp
cli
adc
add
inc
pusha
adc
adc
stos
cld
lret
push
sbb
mov
dec
fs
mov
pop
cmp
icebp
add
or
mov
subl
sub
subl
push
scas
pop
call
mov
mov
and
test
mov
mov
scas
es
std
mov
arpl
leave
shrb
enter
jecxz
mov
mov
xor
mov
mov
int3
pop
mov
in
mov
mov
dec
mov
and
xor
fidivl
lea
test
dec
sbb
pop
push
xor
out
jg
aas
or
sti
jle
into
sub
adc
push
dec
fldenv
xchg
int
les
mov
aaa
orl
cld
ljmp
xchg
rolb
mov
ret
jl
jp
shrl
xor
repz
in
mov
ds
outsl
cmpl
adc
rcll
fisubrs
fwait
sbb
ficoml
sub
push
dec
fdivl
into
push
sarb
dec
jp
push
and
mov
insl
xchg
out
xor
lahf
mov
lea
sub
cltd
add
mov
xor
in
push
scas
sub
and
lret
mov
fidivrl
xchg
pop
jns
adc
scas
insl
adc
pop
int
hlt
lods
add
cmpsb
pop
add
push
loope
popf
mov
test
pusha
adc
ficomps
sub
or
and
enter
paddsb
sub
popf
in
sbbl
add
mov
cmp
cld
push
cwtl
ret
test
cmpsl
and
cli
cwtl
xor
leave
jl
dec
cmpsl
movl
xchg
dec
mov
inc
dec
and
pop
or
lods
inc
cs
into
jecxz
daa
mov
leave
cmp
push
add
je
jle
jns
repnz
sub
xchg
pmullw
xor
jns
out
dec
cmpsl
es
cs
or
push
add
mov
or
mov
fistps
sub
and
fcomps
mov
repnz
std
test
cwtl
shl
insl
sbb
jmp
mov
shll
mov
lcall
jae
nop
cmp
jge
divb
lods
int
sarb
and
xlat
mov
cmc
daa
aaa
das
test
stos
out
subb
inc
push
dec
scas
mov
jle
adc
notl
aaa
cmc
cmp
add
in
cmp
inc
and
das
jp
daa
fiadds
mov
prefetch
ds
lret
popa
cmp
aaa
xchg
out
sbb
in
das
ret
jo
adc
adc
and
test
push
adc
or
shrb
xchg
xchg
inc
push
push
mov
lock
xchg
add
sbb
ret
fistps
jnp
pop
cmc
jae
add
dec
es
shr
cmc
hlt
add
nop
and
insl
mov
push
cmp
jne
push
daa
pop
mov
ret
dec
nop
inc
leave
jno
jge
insl
sbb
cmp
cmp
and
in
ljmp
es
xor
faddl
push
insl
out
leave
push
cwtl
call
hlt
lods
inc
mov
mov
sahf
fildll
inc
shrb
mov
mov
pop
cmpsl
push
xchg
in
sbb
dec
fs
sbb
out
jns
popa
shlb
out
aas
imul
into
push
add
mov
add
sub
rcrb
stos
lods
loop
lret
sub
bound
lock
add
jle
dec
cmc
pop
lret
sahf
push
or
mov
imulb
cmc
dec
mov
jbe
test
stos
jns
mov
mov
xor
aas
mov
push
jbe
aam
loop
mov
adc
imul
adc
loop
repnz
cwtl
popa
lcall
add
adc
cmpsl
repnz
ss
lods
fiaddl
ret
test
mov
fldenv
cmp
shl
fistpl
call
push
out
shl
scas
jbe
mov
push
mov
pushf
inc
add
stc
mov
mov
sbb
daa
mov
stos
cltd
imul
and
adc
pop
in
pshufw
push
movsl
jmp
sub
push
popf
rcrb
mov
and
sub
mov
arpl
mov
lahf
repnz
mov
mov
mov
loopne
push
cmc
xor
insl
push
xchg
push
mull
lods
pop
mov
mov
ss
stc
je
dec
pop
or
hlt
pop
mov
lods
out
push
mov
popf
xchg
xor
dec
test
mov
cmp
rolb
mov
movsl
mov
sarb
insl
cmpsl
sub
pop
faddl
loop
mov
outsb
mov
cli
scas
mov
pop
movsb
mov
cmc
scas
in
sub
fmul
cmp
sbb
pop
sarl
xor
jno
dec
fs
cmp
enter
pop
clc
mov
jle
stc
or
push
lea
adc
jl
shll
aad
pop
or
push
cmp
mov
mov
notl
out
repnz
repz
imul
hlt
xchg
jns
push
xchg
testb
xlat
lea
inc
push
xor
into
pop
lods
loopne
enter
add
dec
mov
dec
pop
xor
es
shl
int3
mov
loope
mov
dec
or
cmpsl
cmpsb
test
loopne
outsb
mov
jnp
fs
sub
stos
mov
aam
push
mov
adc
jns
outsb
out
nop
inc
aas
aaa
jg
dec
inc
lock
rcl
xor
lds
jb
cmp
lea
lcall
es
fnstenv
in
mov
call
dec
add
movsl
xchg
jbe
pop
mov
adc
dec
fcompl
mov
xchg
xchg
outsb
and
and
shl
xor
xchg
fistps
inc
roll
mov
mov
or
mov
xchg
fisttpll
mov
mov
xchg
pushf
nop
jle
pop
xlat
repnz
gs
dec
test
add
ret
lods
cmp
inc
sub
push
pop
mov
mov
sbb
mov
xchg
sub
inc
add
in
jo
and
cld
sbb
jecxz
jmp
popa
mov
sbb
inc
lock
pop
je
add
std
scas
dec
ljmp
lods
adcl
loopne
das
popf
cmp
dec
fisubl
ret
outsl
mov
sub
pushf
sub
xchg
add
pop
or
xor
pop
sbb
das
pop
pop
lret
dec
shll
fwait
je
movsb
add
ret
outsb
je
xor
inc
mov
cltd
arpl
es
bnd
cli
sub
movsl
add
insb
lods
pusha
xchg
xchg
mov
dec
hlt
adc
sbb
mov
jle
mov
and
add
movsl
lods
mov
inc
repz
inc
mov
or
mov
and
push
test
xchg
and
push
movsl
test
mov
jle
adc
jg
fadd
or
sub
lahf
ret
bound
lret
into
mov
push
scas
mov
push
adc
adc
aad
icebp
sbb
out
mov
pop
jle
or
int
cmp
test
jp
sbb
mov
rcll
nop
iret
xchg
mov
push
lcall
and
dec
movsb
push
ret
push
add
dec
pop
or
loop
inc
pop
inc
add
ljmp
or
daa
fsubrs
dec
sub
js
pushf
mov
rcl
mov
out
imull
or
mov
sbb
push
mov
cwtl
es
gs
jns
inc
xchg
push
jge
decb
xchg
sti
ror
cltd
push
or
pop
xchg
sbb
jb
and
inc
xlat
mov
mov
loope
into
int3
xlat
mov
cmpsb
pop
imul
daa
cmpsb
sbb
jae
imul
and
or
leave
adc
imul
sti
cmp
push
loopne
pop
pop
int3
pop
jecxz
xor
mov
adc
xchg
sub
jg
sbb
ja
icebp
dec
mov
ja
xchg
adc
les
mov
clc
or
dec
jo
jne
sbb
rorl
mov
xchg
imul
mull
int
les
loopne
cmp
jecxz
jno
mov
or
mov
jb
mov
test
xor
mov
cmpsb
push
pusha
xor
lcall
pop
mov
inc
jp
rcrb
nop
insb
dec
inc
ror
sbb
sbb
pushf
cmpsl
inc
mov
icebp
out
jle
sub
psadbw
mov
sbb
pop
fstps
cwtl
scas
mov
addl
das
add
push
ljmp
jns
push
push
in
in
leave
dec
js
mov
and
inc
adc
ret
shlb
sar
ljmp
xchg
imul
mov
and
xchg
stos
sbb
jle
stos
cmp
or
xchg
mov
push
cmp
pop
pop
add
xchg
jp
lahf
jne
daa
adc
lods
pop
xchg
or
gs
sbbb
loop
lods
push
mov
adc
xchg
testb
xchg
pop
lods
fiaddl
loope
push
punpcklbw
push
dec
or
aas
data16
add
insb
push
xchg
jge
out
sbb
push
mov
mov
pop
dec
stc
in
mov
mov
lcall
mov
mov
aad
popf
scas
loope
sbb
test
loop
fmull
cmp
inc
test
sub
jb
pop
dec
shll
popf
cs
jno
inc
push
sub
mov
cmp
jae
int
lods
pop
test
dec
cmpsl
sbb
int
mov
sbb
pop
std
xor
iret
or
sub
mov
push
push
xor
cmp
jns
les
mov
gs
les
inc
add
pushf
mov
fwait
mov
pop
jb
pushf
cmp
insb
stos
cmp
mov
or
mov
push
adc
sahf
mov
xor
test
add
lea
mov
pop
inc
cltd
cmpsl
push
or
cmpsb
push
xchg
mov
inc
xor
push
je
insb
jns
or
sub
aaa
mov
jle
lods
xchg
cwtl
dec
cwtl
scas
loope
ds
out
jp
sub
adc
movb
mov
push
pop
xchg
insb
inc
jbe
lods
jle
xorl
dec
daa
xchg
cmp
aaa
push
xchg
adc
push
out
in
ret
sbb
outsb
jmp
adc
jg
push
inc
in
inc
add
stos
cmpsb
and
jbe
imul
roll
ss
movsb
jns
push
or
test
int3
stos
ret
out
fadds
cmp
or
sahf
sub
lahf
lahf
push
mov
or
aas
negl
mov
ds
pop
lods
int3
les
mov
mov
not
cmc
xor
xchg
mov
in
xor
xlat
scas
fwait
repz
push
sbb
loope
adc
cmp
shr
dec
ret
ret
pop
and
sub
dec
test
xchg
adc
inc
dec
xchg
mov
xchg
shrl
jne
cs
in
negl
notb
nop
add
arpl
jns
fnstcw
push
add
test
jl
push
iret
inc
mov
jae
mov
adc
dec
inc
sbb
stos
or
leave
imull
pop
adc
fucomip
rol
jg
adc
inc
or
sub
int3
insb
psubsw
popf
int3
movsb
les
pop
jmp
push
xor
pop
cmc
lcall
xor
test
push
rcll
pusha
add
out
mov
add
repz
mov
xor
sbb
xchg
cmc
jbe
leave
decb
adc
ds
scas
mov
ja
leave
and
inc
stos
movsl
mov
and
pop
ret
cmp
jno
fnstenv
in
sub
push
sbb
xchg
sbb
xor
xchg
dec
imul
test
test
and
out
cmpsl
cmp
insb
flds
in
test
sbb
push
scas
aam
data16
cs
xchg
call
add
pop
loop
push
out
xor
push
adc
les
sbb
je
adc
aas
ss
loope
insb
out
sahf
push
int
cmp
adc
push
arpl
cmp
popf
insl
dec
lock
and
adc
bound
sbbb
mov
nop
cmpsl
outsb
imul
stos
sub
call
mov
add
loop
shrl
cmp
jo
pop
dec
mov
ss
lcall
jb
stos
xchg
push
push
lcall
and
jbe
and
xchg
xcrypt-ecb
cmpsl
sub
loopne
repnz
jp
jbe
std
inc
mull
xor
lahf
test
xor
lods
sbb
mov
aaa
nop
lahf
dec
mov
loopne
adc
push
scas
dec
insb
dec
fisttpl
call
cli
mov
shlb
pop
push
adc
xchg
sub
aam
cmp
int
adc
pop
mov
pop
and
jp
fwait
add
cld
mov
cltd
jo
scas
jno
adc
dec
mov
icebp
add
push
inc
lahf
mov
ret
xorl
daa
xor
rclb
and
ficoms
cmp
jle
addr16
push
push
aaa
arpl
inc
loope
fs
mov
mov
ja
fildll
and
imul
mov
stos
aad
xchg
loopne
js
inc
addr16
push
add
mov
sahf
andl
lods
sbb
ds
js
dec
xchg
mov
fdivr
int
or
sahf
jl
mov
dec
in
and
jp
cmp
popa
clc
jne
or
mov
inc
sbbb
int3
sub
sub
lock
sub
out
push
or
rclb
lret
rcrb
test
adc
dec
pop
push
lret
or
add
push
lods
adc
in
mov
pop
and
repnz
mov
pop
fs
pop
cmp
inc
mov
imul
sti
xchg
dec
xor
xchg
ficoms
flds
inc
mov
xchg
dec
pop
mov
pop
iret
loop
scas
nop
lods
icebp
adc
push
or
xchg
nop
sahf
push
cmp
les
xchg
push
pop
mov
and
adc
lods
sub
mov
insb
rcrb
dec
fnstenv
mov
lock
xor
sbb
inc
pop
jecxz
test
add
test
dec
mov
in
and
xchg
aas
pop
gs
subl
pop
push
ficomps
mov
iret
data16
bound
push
and
popf
inc
jns
out
dec
mov
in
stc
pop
imul
dec
cld
out
pusha
push
loope
negl
daa
test
and
hlt
les
out
xor
cmpsb
mov
sbb
movsb
sahf
shrl
pop
xchg
nop
sbb
xchg
mov
cmp
push
les
jle
lret
aad
test
mov
pop
pusha
fcomps
clc
lcall
mov
add
mov
cmc
rcll
sub
enter
jae
cmp
xor
shl
pop
fnstsw
jp
push
dec
aaa
mov
jns
sub
dec
rclb
pop
hlt
or
std
psubw
xor
fnstcw
pop
fwait
adc
xor
pop
xchg
insb
dec
jl
jbe
jno
scas
xchg
jp
inc
mov
cltd
pop
mov
push
pop
mov
daa
jae
iret
js
int3
in
out
jnp
cld
pop
sub
pop
push
pop
xchg
int
jno
or
sbb
cli
xchg
push
xor
js
xchg
push
or
bound
jecxz
adc
loop
shll
inc
outsl
push
xchg
sbb
sub
jp
mov
mov
jae
cmp
jno
and
mov
cld
repz
dec
mov
fldt
and
seto
cmpsl
call
test
jnp
cmp
pop
lret
aaa
lcall
jbe
inc
lahf
nop
sbb
and
cwtl
lret
test
roll
cld
les
lods
lret
or
lea
mov
sbb
cld
mov
in
push
aam
cmp
int3
push
jg
and
sub
fiadds
sbb
je
xor
mov
outsb
push
inc
std
in
adc
cltd
in
cld
fbld
inc
ret
iret
lods
adc
ret
pop
cmpsb
sti
iret
fnstsw
movsl
rcrl
lret
mov
enter
and
bts
int
out
fdivrs
stos
popf
push
push
test
mov
cmp
rcrl
push
loopne
loop
cmpsb
add
jmp
push
mov
ja
cltd
jo
lods
xlat
or
cmp
jb
sahf
dec
shll
es
xchg
rol
dec
int
test
repz
cmp
aam
enter
shrl
pop
push
or
fdivs
dec
inc
fcompl
xor
jno
daa
mov
jl
and
pop
push
loop
cmp
jle
inc
paddsb
jmp
cltd
cmovge
ljmp
fadds
or
pop
adc
push
mov
rcrl
push
lock
test
loope
repz
jno
jns
sar
and
or
aas
mov
jae
adc
clc
pop
out
rol
movsl
shrl
jecxz
pop
test
and
ret
js
jmp
enter
jmp
cmp
mov
xchg
out
dec
mov
stos
outsl
mov
jnp
and
adc
imul
mov
and
push
rolb
inc
ss
dec
mov
and
int
cmp
test
adc
and
jbe
push
stc
mov
arpl
sub
jmp
xchg
pop
cli
scas
add
and
ret
ficomps
jp
or
or
popa
xor
movsb
pop
jmp
sub
push
fstpl
es
sbb
inc
jmp
mov
leave
fsubrs
jp
pop
mov
loope
inc
ss
ss
mov
andl
neg
push
push
mov
stos
lahf
adc
aam
ret
in
mov
xchg
mov
test
and
mov
mov
ljmp
add
sbb
lods
push
cmp
cmp
xor
fdivr
stos
shlb
loopne
inc
pop
pop
jle
cmpb
pop
inc
pop
pop
inc
mov
lds
fdecstp
pop
add
adc
pop
lret
inc
mov
jge
push
mov
js
inc
iret
xor
pop
stos
cmpsb
gs
push
push
xchg
popa
enter
mov
ret
pop
cmp
les
xor
ret
mov
mov
mov
notb
out
shlb
pop
je
cmp
pop
fwait
repz
lcall
pop
idiv
in
mov
push
mov
mov
roll
inc
adc
lock
jg
dec
aas
lret
repnz
mov
push
daa
pusha
cld
fisttps
lret
sub
jle
jo
pusha
pop
loop
pushf
xor
cmp
sub
popf
or
insl
out
aas
push
mov
adc
inc
cmp
pop
in
cmc
test
push
unpcklps
or
add
loopne
pop
xor
add
fisubl
or
jp
addps
das
out
pop
sbb
into
pop
das
jmp
mov
scas
mov
int
ficompl
setne
outsb
loope
std
scas
xchg
test
ja
fsubl
ljmp
and
mov
stos
cmc
cli
mov
popl
mov
cmp
ret
imul
inc
test
mov
out
outsb
xor
lret
clc
fildll
outsb
fisubl
push
lret
sub
xchg
pop
scas
int3
shll
xor
mov
xchg
test
stos
ss
xor
outsl
add
out
sub
pop
int
popf
pop
inc
dec
stc
xor
xchg
idivb
hlt
mov
mov
sub
sbb
xor
pusha
adcb
mov
and
inc
and
jne
into
and
lods
dec
popf
lods
js
icebp
jge
add
js
push
or
jge
jmp
es
or
sti
xchg
mov
add
or
lcall
pop
sub
or
in
bound
daa
push
add
test
or
out
mov
cmp
pop
jbe
aaa
es
mov
shll
jecxz
sub
dec
sbb
cmpl
pop
dec
mov
data16
fidivrl
inc
mov
and
mov
lods
xor
addr16
adcl
aad
lcall
sub
pop
xchg
mov
mov
xlat
es
inc
xchg
test
aad
inc
mov
mov
dec
in
lods
sub
xchg
je
mov
push
fisubrs
pushl
dec
insl
sbb
cmpsb
pop
cltd
mov
mov
mov
push
jle
ja
push
jl
push
in
and
xchg
dec
or
inc
addl
jle
xchg
call
or
and
scas
out
pop
and
adc
fcoms
jp
mov
mov
pusha
mov
pop
fs
sahf
loop
inc
dec
imul
pop
jae
sub
leave
xor
cmp
dec
addl
dec
ds
lret
sub
and
jno
mov
leave
mov
push
in
lods
or
sub
xchg
mov
and
inc
xor
cmpb
loop
jl
sbb
sahf
mov
push
mov
mov
sahf
mov
mov
sarl
mov
inc
inc
jb
imul
pop
repnz
or
ds
sahf
sarl
daa
mov
pushf
cs
paddq
stc
sbb
dec
in
add
mov
push
pop
mov
xchg
cltd
xchg
mov
mov
iret
in
add
pop
scas
xchg
insb
ret
adc
mov
inc
xor
jae
push
sbbl
ret
push
cmpsb
insl
mov
pop
cld
push
adc
int
jne
movsb
jnp
or
push
clc
xchg
inc
adc
jge
data16
lea
or
in
mov
ljmp
xchg
mov
jo
sub
push
push
or
push
fcoml
push
test
mov
and
jno
movsl
loop
loop
out
xchg
xchg
sub
rcl
cwtl
sbb
cmpsb
or
lret
gs
out
pop
cli
push
test
add
push
lea
frstor
mov
push
push
es
inc
int
or
roll
jl
mov
outsb
out
dec
je
push
out
nop
push
mov
loope
push
sub
cmp
in
pop
push
sub
mov
cmpsb
pushf
dec
ds
iret
cmp
mov
icebp
adc
in
add
pop
aas
push
jge
imul
jns
or
ss
push
roll
je
sarl
lods
arpl
jg
mov
dec
sbbb
mov
test
bound
xchg
lahf
out
loope
add
push
mov
xor
movsl
pop
sahf
fcomps
js
popa
xor
lahf
out
inc
out
in
int3
into
mov
iret
cld
fwait
adc
stos
out
js
xor
cld
mov
subb
enter
mov
sbb
pop
or
rorb
sbb
mov
daa
add
in
notl
adc
ds
push
scas
sub
mov
ja
repnz
cli
ss
sub
jo
cmp
setno
testl
xor
inc
addr16
sbb
mov
push
test
mov
insl
cmpsl
sahf
or
clc
stos
dec
mov
add
lock
es
les
pushf
loop
loope
mov
xor
ds
jmp
mov
jg
add
out
sbbb
jno
lods
sbb
pop
pushf
in
xchg
mov
pop
push
sbb
mov
outsl
jns
mov
fwait
enter
jmp
mov
mov
fdivl
popf
lods
cmp
mov
sbb
test
pop
shlb
pop
jl
and
pop
and
jmp
xchg
pusha
mov
loop
mov
push
sbb
jl
adc
cli
cwtl
or
aas
mov
jl
sub
inc
ljmp
sbb
sub
repz
push
sbb
jp
adc
inc
jl
outsl
in
or
testl
xor
imul
fsubrs
sbb
xchg
fistps
cmpsb
jnp
test
shl
btr
nop
xor
jne
out
and
cmp
jp
push
jbe
mov
fildl
addr16
mov
repz
and
mov
fadd
stos
and
mov
xor
data16
jle
sbb
cmp
addl
xor
push
sbb
adc
arpl
inc
mov
mov
call
js
cltd
sub
test
insb
fldcw
xchg
js
mov
cmp
sbb
jmp
scas
imul
shll
or
mov
hlt
push
xchg
addb
xchg
sub
shrl
dec
jbe
stos
and
pcmpeqb
lock
out
inc
push
ja,pt
xor
inc
dec
adc
shr
data16
xor
cmpsb
out
add
push
in
mov
std
in
mov
jge
and
push
jmp
loope
push
fwait
add
dec
jo
cmp
mov
arpl
and
mov
shlb
jmp
push
pusha
cmpsl
add
cld
movsl
ffreep
daa
jnp
xor
imul
enter
mov
add
inc
dec
cmp
mov
call
rcll
popa
push
or
hlt
cmc
clc
int3
jns
push
div
pusha
push
jnp
pop
and
or
sbb
jo
xchg
int
pop
push
xchg
enter
rcl
mov
cmp
fwait
push
loope
fdivl
xchg
mov
xchg
or
mov
adc
clc
cmpsl
push
pop
loopne
mov
inc
stos
mov
cli
mov
roll
pop
mov
jne
dec
ffree
inc
aaa
mov
and
fidivrs
outsb
mov
shlb
pushl
bound
lods
ret
cmp
fs
push
arpl
dec
js
lret
and
and
and
fs
call
sub
or
gs
insb
push
adc
addr16
sub
shl
insl
ficoms
and
loope
xlat
push
scas
jo
fnstcw
jnp
pop
incb
mov
xor
jns
out
inc
cli
addb
jmp
andl
imul
or
xor
push
jae
push
pop
mov
mov
xor
lcall
mov
sub
sbbb
fxtract
cmp
or
negl
das
and
stc
xor
sub
stos
rcl
dec
mov
push
push
sbb
pushf
test
ds
aam
jg
scas
jae
pop
insb
push
sar
loope
sub
bound
jl
inc
and
int3
and
std
pop
ss
dec
pop
add
arpl
in
pop
scas
adc
stos
jae
or
pop
sbb
clc
fcompl
jmp
dec
push
lret
icebp
popa
adc
xchg
xchg
rcll
pop
xlat
jle
dec
arpl
push
lcall
rol
ret
fnstsw
out
add
aad
sub
inc
push
jl
ret
insb
pop
inc
xor
aaa
mov
inc
enter
push
xor
add
aaa
push
mov
icebp
aaa
sbb
test
xor
dec
cmp
cmp
jno
mov
clc
rorb
lods
cmp
add
xchg
test
dec
push
loopne
dec
xchg
fldcw
mov
outsb
or
inc
mov
jl
add
mov
in
popf
je
cmp
sub
adc
xchg
enter
in
pop
mov
ffree
cmpb
cltd
in
imul
jae
movsl
cmp
leave
fwait
pop
xor
and
sbb
cmp
sub
pop
inc
dec
test
xor
pop
loop
mov
mov
rorl
sbb
sub
inc
dec
mov
push
popf
lahf
xor
cld
mov
pop
hlt
adc
shl
xor
jp
jmp
lcall
mov
out
xchg
data16
fidivs
jae
push
or
aas
bound
clc
out
add
out
into
cmp
push
repnz
adc
repz
and
rcll
icebp
pusha
fildl
lret
xchg
movsb
push
push
pop
les
int
and
jne
sbb
sti
dec
ja
ret
add
imul
mov
push
inc
sub
add
xchg
into
mov
test
fwait
add
clc
sub
std
test
addb
push
lret
subl
mov
shl
cmc
jge
mov
shll
aam
and
lock
arpl
rolb
or
xchg
test
push
cmc
and
push
mov
cld
sbb
sub
mov
mov
test
xchg
stos
cwtl
pop
mov
mov
test
sbb
out
or
pop
js
cmc
in
cwtl
enter
cmp
sub
adc
rorl
out
sub
adc
xor
dec
pop
mov
pop
pop
int
rorb
sti
scas
repz
jo
adc
lods
sbbb
adc
aam
daa
xchg
push
mov
sbb
out
mov
popf
xchg
cmp
dec
incb
mov
sbb
ja
ja
or
lret
pop
sub
cmpsl
push
rclb
fisttpll
xor
xchg
dec
enter
mov
int
xchg
add
fwait
mov
inc
cmp
mov
mov
add
xor
lea
sbb
pop
fiadds
mov
cltd
mov
or
dec
shl
fmul
xchg
mov
sbb
jo
cmpsl
inc
pop
mov
mov
int
jns
sbb
in
or
and
call
push
negb
int
aaa
jle
xor
sub
push
insb
insl
mov
xor
lds
mov
add
pusha
sbb
pushf
repz
or
data16
je
push
sub
xorl
ret
icebp
lcall
jle
outsl
ret
gs
jns
sub
mov
and
pop
pop
pop
fwait
pop
je
pop
lds
jmp
mov
out
inc
push
fistl
nop
fwait
adc
loopne
aaa
bound
aad
adc
inc
test
push
hlt
xor
pop
es
call
cmp
xchg
xchg
gs
sub
push
out
fiadds
push
mov
pop
sbb
shll
cld
jecxz
fisttpl
mov
lods
pop
bound
sbb
cmp
test
dec
pop
popa
ror
outsl
inc
and
icebp
je
mov
sbb
outsl
lods
and
sub
dec
shll
lock
mov
lahf
mov
and
sbb
into
mov
push
inc
bound
sahf
mov
mov
cwtl
jbe
cmp
add
jecxz
sbb
xor
fstpl
fs
andl
and
lret
push
movl
sbb
pushf
sub
lahf
xchg
ret
jo
in
mov
fistpll
or
pop
test
push
shlb
test
test
pop
jg
jb
inc
popa
icebp
adc
push
fstp
cmpsl
sub
mov
call
push
stc
and
insb
add
int
adc
cmp
fbld
add
fsubl
cmp
test
sarl
into
jno
mov
mov
mov
fisubs
mov
adc
adc
arpl
mov
out
fsubrs
iret
ds
cmc
xor
cli
cwtl
add
cmp
sub
inc
jno
out
stos
fmull
jle
fldcw
fadd
mov
lcall
mov
getsec
inc
or
push
out
testb
mov
adc
mov
xchg
inc
outsl
int3
sbbb
sbb
cmp
cli
xor
ds
stc
addr16
push
mov
fadd
push
sbb
jo
xchg
leave
add
jg
cmpsl
nop
mov
addr16
pop
shrb
jmp
rcrl
and
jg
sub
jns
orb
inc
mov
pop
pop
sub
cmp
mov
sti
je
sbb
std
dec
aaa
arpl
jb
jp
dec
in
xor
enter
jg
mov
sbb
push
scas
ret
mov
xor
outsl
add
loope
xchg
sbb
aas
insb
lock
pusha
loope
jae
cmp
dec
inc
pop
cltd
dec
xchg
lock
fists
int3
ret
dec
xchg
or
fcomi
in
dec
mov
jecxz
stos
divb
adc
icebp
shrl
jno
jns
jp
adc
mov
mov
cwtl
push
pop
orb
repnz
push
int
pushf
fcmovb
mov
mov
andps
and
and
mov
cmp
jecxz
dec
mov
bound
push
iret
stos
in
inc
sub
sub
fldcw
lcall
sarl
push
dec
shr
pop
mov
fcoms
pop
push
call
mov
in
mov
adc
es
mov
ret
pop
enter
jg
mov
cmpsb
test
mov
and
xor
xchg
mov
std
mov
mov
stos
int
sti
adc
enter
push
ja
cli
adc
jl
addr16
xor
mull
movsl
cmpsl
rcrb
adc
stos
push
cltd
pop
add
sbb
test
mov
xorb
ds
arpl
inc
dec
call
testb
mov
jb
inc
in
sub
inc
push
push
ja
ret
mov
subl
ljmp
int
cmp
dec
inc
pop
sub
les
or
inc
mul
inc
in
or
movsb
xchg
test
sti
cmp
and
flds
std
jbe
stc
lret
or
or
imul
je
and
dec
inc
dec
andb
push
pushf
icebp
das
push
and
jl
in
xorb
mov
and
inc
pop
xchg
test
inc
in
sbb
sbb
clc
inc
jne
outsl
fmull
aam
sbb
insl
mov
rorb
xlat
push
retw
repz
dec
mov
movsb
lock
xchg
mov
push
cmc
adc
mov
gs
lds
inc
inc
into
adc
adc
or
call
and
lret
push
cmp
jo
add
push
inc
push
fs
iret
test
sub
jo
add
or
inc
addr16
negb
push
fs
sbb
ret
and
stos
imul
aad
adc
ret
insl
sub
mov
imul
pop
inc
jbe
hlt
cmc
xor
mov
jmp
push
mov
hlt
loope
dec
dec
roll
inc
lea
pop
into
pusha
insl
gs
push
sbb
arpl
pop
mov
aas
sahf
imul
xor
lds
jns
cwtl
mov
cmpsl
adc
or
xor
icebp
adc
inc
inc
mov
pop
jl
xor
lret
aas
js
iret
in
popa
cs
cwtl
fimull
lds
sub
xchg
inc
pop
testl
pop
in
inc
sub
lods
js
cmp
out
addr16
jg
inc
and
xchg
or
inc
out
add
int3
lods
rorb
pop
mov
jmp
xchg
bound
sub
jle
addr16
dec
jae
add
and
pop
mov
or
test
jge
aaa
adc
mov
pop
cmp
cmpsb
xchg
xor
fstpl
leave
mov
mov
ljmp
ljmp
mov
push
mov
sub
jecxz
ret
push
shl
fldl
mov
stos
pop
push
fs
movsb
or
push
dec
mov
dec
mov
and
aaa
lea
mov
mov
daa
add
push
iret
mov
in
repz
lahf
clc
cmc
pop
sbb
mov
mov
sbb
enter
arpl
test
add
test
in
pop
sti
ljmp
push
aam
dec
mov
fwait
divb
ja
aas
cld
cltd
mov
leave
inc
sarb
and
imul
out
mov
std
and
mov
adc
sub
cmpl
inc
add
sahf
cld
sbb
rcrb
lock
jmp
and
shll
add
jb
ja
icebp
iret
pop
stos
loopne
jmp
jns
jecxz
or
push
pop
dec
xor
and
xor
aad
scas
fdivr
dec
adc
fs
and
cmp
loope
icebp
fdivs
flds
popa
ds
cwtl
pop
notb
add
icebp
adc
inc
mov
rcl
inc
addr16
lds
jge
dec
sub
fisttpl
mov
add
fsubs
jge
lods
mov
jnp
lods
fadds
push
fwait
ret
xchg
inc
push
xor
movb
int3
mov
arpl
sbb
xor
sti
xchg
negl
adc
movsl
lods
into
jno
loopne
iret
jl
dec
push
es
roll
into
pop
inc
add
pop
sub
bound
repnz
pop
push
lock
or
mov
xor
lods
and
loop
mov
pop
push
jbe
cld
push
stos
test
cmp
jge
addr16
mov
jg
scas
incb
outsl
or
or
add
sarl
ss
nop
inc
test
repz
mov
imul
xlat
lock
cmc
testb
in
out
inc
inc
dec
stc
hlt
les
movsb
jmp
mov
inc
mov
or
nop
mov
push
enter
ret
sbb
inc
cmpsb
sbb
pop
rcl
movsb
test
and
push
lds
rclb
lea
mov
mov
cmp
pusha
sti
jecxz
xor
insb
repnz
hlt
pop
adc
out
sarb
and
cmp
arpl
push
cli
inc
push
cmp
jo
mov
inc
iret
cmp
mov
or
fwait
sbb
adc
xlat
mov
mov
mov
mov
inc
js
push
or
cwtl
ljmp
and
push
cmp
insl
xor
push
inc
dec
sti
leave
cmpsb
ja
mov
mov
or
sbb
jb
insl
add
dec
es
fistpll
push
mov
out
push
cmp
insb
add
push
adc
cmp
push
mov
outsl
cmp
jmp
aaa
adc
pop
push
bound
sarl
pop
arpl
cwtl
push
shll
daa
lea
shl
push
jge
push
or
adc
mov
xchg
in
inc
xor
push
and
xchg
test
inc
dec
jno
mov
pusha
lahf
sub
add
sub
fs
inc
pop
mov
mov
mov
shrl
and
push
and
testl
xor
jge
je
dec
xchg
repz
adc
into
dec
cmp
dec
orb
lahf
cmp
rcrb
sub
lahf
push
out
cltd
push
push
dec
dec
sbb
and
pop
ret
lcall
inc
or
push
dec
xchg
xor
xor
push
insb
fildll
add
cmp
jae
mov
pop
or
repz
pop
inc
sub
roll
mov
dec
mov
std
push
loop
fwait
cmp
adc
pop
into
aam
jo
dec
mov
repz
inc
inc
sbbl
movsb
not
sbb
dec
pop
aam
push
jae
pop
test
inc
xor
aaa
std
sub
cmp
xchg
outsl
push
jb
stos
mov
shlb
arpl
hlt
sub
and
and
addr16
push
inc
mov
fwait
insb
push
adc
popf
cmpsb
repnz
sub
and
xchg
push
pop
and
aam
jecxz
stos
divb
aam
add
rol
out
loopne
fisttpl
repnz
rorb
adc
xchg
iret
pop
dec
mov
or
inc
sahf
les
mov
xor
push
stos
pop
call
decl
bound
in
adcl
mov
arpl
inc
daa
and
cmp
mov
sti
and
shlb
or
fwait
and
xor
cmp
daa
and
int
sbb
xchg
dec
sub
and
stos
push
lds
fstpt
mov
push
adc
push
mov
xchg
mov
push
adc
mov
inc
aam
mov
insl
xor
in
mov
pop
inc
xor
orl
sahf
sarl
and
dec
das
mov
cmpsb
stos
cmp
cmp
call
pop
mov
scas
bound
and
add
dec
dec
loopne
dec
test
mov
xlat
jp
push
push
imul
inc
fs
add
adc
sub
cmp
idivb
je
popa
mov
jmp
scas
xchg
jg
fiaddl
sbb
ret
sub
nop
cmp
cmpsb
out
inc
in
pusha
ret
enter
aad
or
push
decl
pop
aad
stos
js
daa
out
in
daa
inc
imul
pop
js
stc
or
out
mov
pushf
sub
imul
and
jmp
aam
imul
int3
inc
dec
push
jge
jl
rcrl
sub
push
and
aam
cmp
fwait
inc
sbb
ret
push
fisttpll
mov
and
int
mov
lock
push
push
jmp
gs
mov
cmp
pop
test
incl
dec
repz
and
dec
aad
mov
jbe
ja
jp
aas
xchg
in
mov
inc
dec
arpl
int3
fsubrs
xor
lret
push
inc
xlat
mov
jnp
stc
mov
mov
inc
xor
mov
adc
push
fstps
pusha
jle
mov
faddl
dec
int
cli
jno
decl
sub
and
inc
or
dec
or
mov
inc
outsb
xor
mov
int
orb
jnp
mov
shrb
ret
add
fmuls
push
outsb
push
cmpsl
inc
push
mov
call
repz
mov
jno
xor
popa
movsl
addr16
movsb
add
add
repz
jle
push
into
and
iret
lods
pop
sub
imul
iret
loope
sbb
sbb
hlt
mov
push
inc
xor
outsb
ja
mov
cmpsb
std
xlat
test
push
inc
in
testb
inc
fists
cld
mov
push
push
je
dec
xor
outsb
pusha
movsl
xlat
mov
aam
insb
mov
hlt
into
aaa
fs
xchg
cmpsl
xchg
adcb
ss
cmpl
rcrb
push
push
loopne
dec
mov
mov
inc
add
aas
xchg
cmp
mov
lcall
test
cmpsl
lock
sbb
mov
xor
xchg
sub
mov
in
xchg
dec
xor
mov
loope
jmp
fldcw
insl
lcall
push
test
bnd
lock
outsl
sub
xchg
inc
call
xorl
scas
mov
mov
mov
int3
mov
mov
add
jno
faddl
cld
dec
sub
nop
xchg
push
ds
out
jno
mov
jno
jno
pop
lds
ficompl
add
xchg
jb
stos
or
xchg
sbb
pop
in
dec
out
push
sahf
pop
jl
rcrl
inc
adc
mov
ret
fnstenv
imul
sub
add
das
ret
mov
cltd
flds
jmp
jnp
int
test
paddd
jg
push
sbb
push
data16
jnp
inc
pop
cs
push
sahf
aaa
xchg
mov
scas
fs
sub
inc
push
fucomp
daa
pop
leave
aam
fwait
mov
dec
repnz
fnop
ret
das
or
cmp
leave
cltd
pop
pop
and
cmp
fcoms
and
enter
cs
push
push
mov
addr16
pop
orl
mov
adc
and
adc
lds
sbb
stc
xchg
lods
in
push
sbb
sub
popa
and
loopne
out
cmp
mov
imul
pop
ret
mov
loopne
sub
xchg
pushf
shlb
xor
add
scas
aas
das
xchg
rclb
jne
or
mov
add
xchg
jns
test
sub
pop
push
mov
fs
scas
pop
sub
xchg
call
hlt
aaa
push
jle
and
jbe
fcmovnb
mov
dec
rclb
add
pop
mov
mov
cwtl
sub
xchg
mov
fcomps
dec
xchg
sbb
sbb
ds
cmc
add
movsb
jbe
push
je
nop
lahf
bound
mov
cmp
mov
test
sbb
lret
popa
and
daa
cmovle
das
cld
fisttps
inc
cli
pop
rcll
sub
cmp
ficoms
xchg
stos
sti
sub
or
int
inc
es
out
hlt
sbb
xor
arpl
sbb
imul
jl
mov
push
scas
call
add
arpl
xchg
mov
and
popf
hlt
xor
and
cld
dec
ja
sbb
sub
push
push
sbb
fs
dec
data16
jmp
add
mov
jge
out
sbb
mov
mov
add
fs
nop
dec
aam
out
gs
adc
loop
jecxz
jle
iret
or
xchg
cli
loopne
popa
pop
orb
hlt
data16
pop
pop
mov
call
ds
dec
sahf
xchg
shlb
push
sub
lea
mov
jp
xchg
mov
jge
je
popf
and
lea
std
cmp
push
or
xchg
xchg
and
neg
add
push
lret
inc
cmpsb
xchg
dec
sbbl
clc
ja
sbb
fistps
sbb
repnz
aad
bound
fwait
mov
cmpsl
adc
jnp
lcall
push
je
inc
sub
cmp
jl
out
dec
mov
cmp
or
je
lods
cwtl
ret
sbb
mov
dec
stc
mov
xor
push
pop
pop
das
cs
xchg
out
dec
popa
jmp
inc
jne
rcr
mov
ret
xchg
push
loop
jno
bound
and
sbb
clc
aam
rclb
and
adc
xchg
je
cmp
add
adc
pop
cmp
out
push
dec
xchg
dec
inc
lock
xlat
in
mov
adc
dec
and
cmp
cmpsb
hlt
jle
xchg
pop
ss
sbbl
out
xchg
fstpt
jb
gs
mov
inc
push
jge
fwait
jp
stc
out
mov
push
dec
nop
fistpll
repz
ret
mov
shl
jg
mov
aam
scas
pop
roll
and
jns
ljmp
dec
pop
fnsave
or
sbb
jecxz
dec
cli
cwtl
mov
rcll
jl
daa
repz
cmp
rcrl
xor
cmpsl
xchg
dec
aad
insl
ret
outsl
loop
loop
cltd
adc
jno
cs
ja
repz
jno
sub
outsl
pop
dec
sbbl
les
subb
or
mov
test
dec
mov
push
adc
test
push
data16
fldt
xchg
jp
xchg
pop
pop
inc
or
cmp
ss
jecxz
mov
or
mov
dec
and
orb
fisubrl
out
popf
test
ljmp
fnsave
lea
imul
flds
aas
mov
inc
idiv
adc
cld
cmpsb
cld
xor
jecxz
mull
pop
cld
push
ret
push
sub
xlat
mov
jl
xor
in
push
mov
mov
daa
cmpsb
inc
jne
hlt
js
addr16
cmp
dec
or
lds
dec
mov
test
inc
sbbl
mov
test
lods
xchg
movsl
cmpsb
or
in
sahf
fldcw
aaa
mov
es
clc
jl
add
mov
mov
inc
out
adc
in
in
iret
or
insb
mov
nop
inc
stos
pop
pop
push
xor
push
out
and
mov
fucomp
std
pushf
test
dec
xchg
mov
inc
xchg
cmp
inc
mov
pop
mov
cmpsb
mov
loope
sub
add
mov
cmp
inc
cltd
outsb
inc
xchg
mov
cmp
mov
inc
push
push
dec
aas
xchg
cmp
cmp
xchg
push
gs
jp
sub
addb
jge
and
call
movsb
adc
cmp
rorl
daa
add
outsl
out
lods
mov
testb
imul
loope
sub
mov
cmp
shrl
or
inc
mov
and
dec
or
or
scas
sub
and
push
mov
ja
xor
out
push
cmpsl
das
push
ret
xor
sub
popa
int
es
cmp
pop
or
pop
sub
rcrb
test
xor
xchg
mov
pushf
jae
push
loop
fcomp
push
mov
sub
lcall
sub
mov
outsl
push
lahf
cmp
ja
call
xchg
mov
pop
stos
in
ret
mov
call
fmul
adc
pushf
mov
adc
dec
pop
adc
test
inc
stc
out
adc
andb
xchg
shl
adc
pop
idivb
mov
xchg
inc
out
xchg
imul
push
mov
sbb
push
jl
push
test
mov
loop
push
out
xorb
int3
and
push
test
sbb
xchg
inc
mov
pop
adc
lret
stos
mov
aad
jle
or
sahf
sub
sbb
ficompl
push
jl
movsl
imull
lcall
enter
jne
shrb
and
xchg
cmp
cmpsl
jno
fldcw
popa
sbb
cmp
in
sti
dec
sbb
fwait
add
push
fnstcw
pop
pusha
dec
pop
nop
loop
insl
xor
cmp
test
cmp
repnz
or
dec
sub
push
sti
pop
xlat
sub
sub
cmp
mov
cmp
sub
sahf
sarb
sub
mov
sub
jbe
enter
cmc
test
ljmp
rorb
jmp
push
aam
leave
xchg
shll
pop
int
or
pop
fstl
ja
js
cwtl
xchg
jns
stc
mov
pop
jle
pop
inc
mov
and
std
movsl
testb
xchg
ljmp
or
push
push
divl
pop
push
jg
pop
lods
sti
nop
cltd
push
sbb
adc
scas
jb,pn
je
in
inc
mov
sarb
clc
xor
inc
inc
rcl
mov
fnsave
aad
and
subl
push
push
mov
lods
cmp
stos
xchg
inc
lss
pusha
mov
mov
test
jp
push
in
xchg
jbe
or
mov
pop
sbb
aaa
xlat
and
jmp
shr
cld
add
lock
xchg
sbb
int3
adc
xlat
inc
pop
es
ffreep
dec
leave
insb
and
cmc
js
mov
pop
cmp
cmp
stos
lds
sbb
aad
rdmsr
inc
cltd
push
xor
jbe
xchg
adc
int3
mov
mov
adc
pop
mov
cmp
std
push
js
mov
or
mov
std
push
and
push
int3
lods
insl
icebp
mov
out
iret
xchg
sub
ret
test
jle
inc
into
ret
mov
xchg
insl
sub
popa
jmp
popa
pop
ds
mov
fsub
rorl
jl
decl
inc
pop
mov
push
cmp
loop
sbbl
cld
clc
cmp
inc
pusha
insl
xchg
scas
fcmove
ja
jne,pn
loope
add
inc
jns
mov
sub
ret
cmp
dec
inc
movsb
inc
fs
dec
repnz
aam
adc
rolb
push
lea
mov
sub
bnd
dec
xor
mov
ja
inc
xor
xchg
xchg
jl
sahf
jmp
addl
jge
add
adc
xor
dec
stos
add
out
call
mov
shlb
lock
test
add
fmuls
add
std
jo
push
xor
push
andb
push
jmp
push
outsb
inc
in
iret
jbe
mov
dec
cwtl
fsubrp
out
jnp
loope
imul
test
inc
repz
cltd
jbe
div
insl
dec
inc
es
aad
mov
add
cmp
dec
fadds
xchg
xor
pop
mov
out
testl
push
cmovnp
push
cmp
pop
out
ret
movsl
dec
add
or
testl
daa
subb
lods
xchg
xchg
jmp
cs
push
pop
cmc
and
dec
cmp
pop
add
test
jmp
pop
cwtl
sbb
xor
sub
xchg
dec
inc
and
jmp
dec
xchg
pop
imul
jp
mov
sbb
and
sub
cmc
mov
or
jmp
pop
sbb
stos
cmp
mov
jmp
shr
jb
mov
daa
sub
sub
jne
add
mov
lds
xchg
mov
sbb
xchg
popa
dec
sub
es
jo
stc
push
lahf
lods
xor
std
sub
lret
movsl
mov
fldt
mov
or
in
mov
aaa
jmp
jp
cmp
lods
scas
rol
cmp
ss
leave
add
jae
shl
push
add
mov
cld
mov
inc
push
cmp
jg
mov
jl
push
fldt
mov
cmpsb
or
cmp
push
fwait
dec
inc
fnsave
mov
push
lahf
dec
and
xchg
ss
lret
and
pop
or
mov
jg
out
repnz
and
popf
push
xchg
and
bound
inc
scas
dec
fsubs
stos
add
xchg
push
adc
mov
mov
lock
mov
push
push
notb
outsl
subl
jle
insb
repnz
jecxz
inc
aam
aam
jns
push
lods
dec
stos
fs
dec
sarl
sti
fs
lret
fildll
inc
cmp
adc
fldl
jp
mov
push
push
push
push
dec
mov
pusha
iret
and
cmp
outsl
adc
sbb
push
loopne
inc
pop
rcrl
ss
jno
inc
cmpl
dec
lods
adc
xor
mov
into
mov
sub
int3
js
shlb
jl
in
es
loope
inc
xchg
mov
test
incb
mov
and
cmc
shll
and
rcrb
and
inc
mov
mov
orl
pop
loope
jp
ficoml
es
jecxz
mov
jg
std
bound
and
repz
inc
fimull
fdivl
pop
pusha
adc
mov
sub
out
bound
or
and
mov
sub
test
adc
in
lds
jle
inc
lret
adc
fistl
std
or
popf
in
adc
mov
inc
outsb
gs
mov
js
fisubl
mov
adc
adc
cmpsl
arpl
mov
int3
sub
movsl
aad
flds
lret
sbb
mov
arpl
push
xor
ja
mov
dec
pop
js
fbstp
lahf
stos
shl
jge
shrl
orb
outsb
jbe
sarb
mov
adc
lods
add
out
jne
dec
and
dec
mov
xchg
cwtl
sbb
inc
les
sub
sub
add
sub
pop
sub
lods
inc
or
sub
mov
lcall
push
fists
cmp
or
out
adc
xchg
test
pop
popa
cs
test
jmp
xchg
lds
xchg
rorb
imul
inc
imul
pusha
mov
test
insl
lods
repz
sahf
jb
das
fwait
cmp
sbb
test
jle
rorl
std
out
jne
icebp
sbbl
fnsave
mov
test
mov
movsl
cmp
jns
int
cltd
ja
gs
sbb
cmpsl
test
xchg
xchg
push
iret
add
adc
xlat
mov
jle
inc
shrl
fs
aaa
inc
movsb
xlat
xor
pop
xor
sbb
dec
adcl
xor
xchg
cmp
cmp
cmpl
stc
jge
mov
loopne
icebp
cltd
enter
lret
xchg
aad
pop
out
imul
mov
xchg
dec
inc
addb
scas
lcall
lock
loopne
push
sti
add
rcrl
push
ficoms
nop
cmpsb
pop
pop
sbb
mov
jb
mov
inc
das
imul
pop
jmp
push
in
rcrl
xor
add
out
ja
sti
inc
jo
test
fcoms
sarl
xor
loopne
jae
std
adc
push
and
into
fwait
ja
cmpsl
xor
adc
es
push
ss
clc
xor
cmp
push
jecxz
adc
sbb
fwait
jmp
sub
sbb
repz
xchg
fisttpl
repz
lret
psubd
sbb
dec
inc
incl
adc
mov
add
jle
mov
jbe
sqrtps
jbe
mov
insl
jns
mov
mov
jmp
xchg
mov
cmp
pop
shrl
es
and
pushf
xchg
xor
fidivrl
addr16
mov
mov
lds
cmp
cmp
pop
popa
jge
mov
adc
mov
xchg
push
mov
sbbb
mov
add
adc
add
aas
push
adc
or
push
outsb
into
insb
in
fistpl
mov
cld
inc
repnz
inc
fstps
out
and
mov
cld
fidivs
cmc
mov
xor
out
sub
cmp
mov
shll
call
loop
add
test
xchg
mov
xchg
rcl
pop
xchg
xchg
cmp
push
xlat
pop
lock
sahf
dec
mov
adcb
sbb
and
arpl
push
pop
out
push
xchg
imul
mov
pop
xor
int3
adc
xor
or
testb
lret
cwtl
imul
es
mov
lds
int3
lds
leave
inc
bswap
arpl
push
andl
sahf
cmp
push
pop
repnz
repnz
cmpsb
sbb
and
add
test
jne
hlt
mov
dec
add
notl
daa
inc
pop
call
mov
pusha
jecxz
lods
sub
jo
ss
imul
adc
mov
mov
adc
dec
in
sbb
enter
into
clc
lods
mov
lea
testb
xchg
int3
nop
dec
enter
mov
out
xor
sub
add
add
adc
mov
shll
xchg
pop
inc
inc
sub
mov
cld
xor
in
shl
sbb
icebp
ljmp
adc
sbb
ljmp
movsb
add
stos
lahf
cli
xlat
mov
pusha
and
mov
mov
push
xor
lret
jnp
test
cmp
ret
hlt
push
iret
cmp
test
cli
add
mull
mov
sub
mov
aad
mov
jp
mov
ror
push
out
add
jge
icebp
loope
sub
adc
xlat
icebp
push
cld
and
pop
pop
adc
into
or
out
fs
stc
jp
icebp
pusha
mov
out
cld
insb
das
cmp
add
or
mov
sub
xchg
jl
outsb
mov
rolb
mov
cmpsl
xchg
imul
adc
adc
or
test
sbb
mov
and
leave
mov
cmp
imull
jno
jg
cld
test
adc
or
lret
push
sbb
push
xor
cs
push
mov
add
or
in
popa
ja
jmp
rclb
xor
push
negb
inc
add
mov
out
lods
test
pop
mov
into
clc
mov
cld
dec
mov
pop
xchg
pop
add
arpl
mov
insb
leave
cs
sbb
sbb
pop
sti
jle
cmp
dec
cmp
push
sub
push
xor
jb
adc
mov
addl
xchg
shll
fisttpl
cmp
xchg
inc
push
sbb
adc
loop
xchg
mov
mov
js
ja
sbb
adcl
inc
outsl
movsb
xchg
fs
lds
loope
js,pt
cwtl
loope
imul
les
cmpsb
and
pop
in
dec
lret
fsubl
imul
shlb
repz
mov
mov
iretw
xor
shrb
mov
push
jb
jne
mov
mov
adc
sub
xlat
dec
aas
xor
insb
imul
lock
test
imul
mov
loope
add
inc
or
jge
xchg
jle
ffree
jno
push
incb
jmp
int
mov
sbb
cmp
outsb
in
jno
jno
fists
loop
out
and
push
sbb
sbbb
sbb
gs
dec
pop
jno
jmp
les
stc
adc
pop
inc
xor
xor
xor
xchg
jl
out
xor
pop
std
fwait
jo
jo
fistpll
cmpsl
sub
adc
xchg
inc
popa
mov
mov
inc
lahf
arpl
sub
xorl
pop
pop
inc
cld
mov
cmp
lock
adc
loopne
in
push
sub
or
pop
fcomi
cwtl
xor
mov
push
incl
cs
xchg
or
xor
jmp
jp
push
aaa
jmp
pop
push
inc
lcall
sahf
andl
add
dec
gs
inc
ret
out
lods
mov
fwait
xchg
and
es
push
mov
pop
lret
lods
int
mov
fimuls
jmp
std
outsl
jmp
inc
dec
mov
loope
cmpl
cmpsb
dec
lea
xchg
cld
inc
sub
fisubl
jle
xchg
loopne
xor
call
or
out
pop
aas
in
xchg
pop
les
mov
imul
adc
test
movsb
ds
pop
enter
xchg
pushf
jp
int
jle
jl
fwait
fwait
es
dec
outsl
js
pop
and
mov
mov
pop
add
inc
out
lods
adc
mov
imul
cmp
mov
mov
test
pop
dec
fildl
push
adc
mov
les
pushf
cmp
mov
cli
or
rcrb
js
js
and
and
jno
dec
call
push
cmp
mov
arpl
xor
pop
ja
add
mov
int
mov
push
aad
adc
xchg
jl
mov
cmp
nop
mov
fidivs
in
fiaddl
cmp
or
mov
lret
sarb
pop
rcr
sbb
xchg
pop
popf
adcl
idivb
cmpsb
scas
out
subl
fimull
push
jge
adc
jg
xor
shll
ja
mov
adc
add
jno
add
xchg
aas
adc
cld
aas
add
xchg
and
rclb
int3
or
push
popf
xchg
stos
push
and
sahf
inc
repnz
arpl
scas
gs
lahf
cmp
pop
cld
push
sub
lret
icebp
inc
test
and
ja
mov
addb
and
aad
dec
mov
popf
jle
inc
mov
aam
lcall
ja
push
xor
jbe
cs
nop
xor
dec
icebp
aam
ret
adc
push
and
lret
mov
cmp
or
fstps
fisttpl
repnz
roll
repnz
mov
stos
insb
insl
lds
aaa
std
adc
sti
jo
lret
popf
mov
fstpl
jge
cs
and
pop
mov
std
inc
test
sbb
and
xor
xlat
push
and
lock
or
add
pop
inc
mov
scas
outsb
jmp
mov
adcb
pop
mov
xchg
movsl
arpl
enter
pop
ss
popa
adc
jb
mov
dec
xor
jl
adc
lods
lret
int
jno
enter
xchg
dec
xchg
dec
sbb
addr16
aam
sub
out
fmuls
in
mov
pushl
mov
mov
bound
dec
dec
mov
sub
pop
xor
mov
or
xchg
daa
inc
int
pop
mov
clc
leave
jno
add
cmp
cmp
lahf
jno
mov
jecxz
dec
push
add
icebp
cmpsb
inc
pop
out
arpl
ss
popa
mov
push
test
in
pop
std
icebp
xchg
inc
lods
fisttpll
adc
scas
add
and
dec
aad
lahf
and
mov
arpl
fnstenv
mov
outsb
ds
fmuls
add
outsb
sbb
jnp
data16
pop
cld
push
or
lret
dec
pop
in
scas
das
inc
stos
out
enter
int
jns
push
dec
sbb
mov
out
and
inc
mov
test
int3
jns
ljmp
movsb
mov
pop
bound
xor
push
lock
lret
dec
jno
dec
push
mov
cmp
mov
jae
add
in
insl
cmp
fdivr
in
test
jne
data16
hlt
mov
pop
push
xor
sub
jo
inc
inc
scas
mov
les
mov
jmp
imul
jmp
popf
dec
or
es
xchg
mov
dec
rolb
loopne
movsl
mov
rclb
outsl
arpl
sub
jbe
icebp
or
mov
jnp
mov
pop
pop
jns
lret
or
lahf
repnz
xchg
sbb
arpl
or
out
or
das
scas
adc
mov
dec
inc
sarb
push
frstor
fidivrs
mov
arpl
lods
dec
pop
test
ljmp
in
popa
aad
add
aam
inc
out
js
fstl
cli
and
jnp
xor
pop
xlat
sti
mul
fwait
sbb
sbb
sub
mov
andl
sbb
mov
scas
inc
mov
jo
scas
cwtl
mov
int3
mov
mov
adc
into
loop
inc
add
pop
push
idiv
pop
fidivrs
add
cwtl
cmp
xor
lahf
dec
orl
cmpsl
js
jne
cmp
insl
sub
daa
lds
ret
mov
adc
push
mov
jmp
sub
mov
sti
mov
jno
lret
xchg
cmp
mov
jle
xor
jp
adc
cmpsl
fiaddl
dec
sub
jle
or
pop
call
imul
leave
pop
add
push
and
loop
adc
pop
adc
mov
icebp
dec
cmp
mov
aad
hlt
ret
adc
mov
push
sti
xchg
aam
lds
cmpl
xchg
clc
mov
stos
mov
push
lods
daa
cmp
rcrb
nop
testl
fiadds
cmp
pop
je
sbb
out
xchg
adc
stos
push
lret
movsb
shlb
dec
mov
movsl
xor
and
frstor
adc
rorl
push
hlt
xchg
inc
xchg
cs
in
stc
repz
ret
push
mov
out
xor
add
sub
out
ja
push
push
push
es
sbb
stc
lods
mov
mov
cmpb
add
enter
shll
xor
xchg
movb
test
insl
fidivl
inc
rcll
sbb
mov
jmp
sti
rcl
mov
addr16
aam
cli
mov
fstl
pop
jb
pop
or
fidivrs
xor
aas
push
in
loop
dec
popf
or
rorl
inc
dec
mov
sbb
xchg
roll
and
mov
or
hlt
in
xor
and
in
sub
dec
xchg
int
nop
push
mov
push
pop
mov
push
mov
cmpl
xor
test
jle
es
fisttpll
mov
cmp
mov
aas
loope
leave
pop
ds
sub
jns
enter
loop
push
imul
mov
adc
sub
push
shlb
pop
enter
out
stc
add
scas
out
push
imul
sarl
mov
imul
sub
dec
jp
pop
imul
dec
push
jecxz
int
lcall
out
into
movsl
dec
sub
pop
push
in
push
xchg
push
loop
lcall
call
add
into
mov
cmp
shll
aad
adc
jbe
adc
xchg
push
jge
xchg
and
mov
cs
cltd
bound
pop
add
scas
dec
ss
mov
xor
pop
out
adc
lods
out
mov
sbb
pop
stc
cmpsb
inc
push
ret
cmpsl
jns
dec
or
ja
push
cmp
pushf
push
and
mov
xor
jae
sub
adc
xor
mov
inc
pop
xchg
jbe
lock
sbb
loopne
fs
xchg
pop
cmp
adc
push
push
mov
xchg
jmp
xchg
sbb
mul
fcompl
popf
scas
or
scas
sbb
dec
sub
push
lahf
dec
mov
jg
ljmp
jb
lods
cmp
imul
push
sbb
push
vpmaxsw
lods
jg
stos
ljmp
lcall
in
stos
dec
jne
push
ss
mov
loope
loopne
sbb
lcall
mov
adc
push
imull
jae
mov
rclb
lods
arpl
movsb
das
jno
shl
scas
cmpsb
add
xchg
sbb
stos
mov
jnp
out
xlat
in
xchg
cmp
cwtl
mov
and
lret
adc
lock
and
popa
and
int
pop
add
scas
sub
pop
sub
popf
push
fiaddl
sbb
sbb
clc
jae
pop
and
outsl
jle
mov
jp
movb
aam
outsl
xor
aas
xor
in
adc
outsl
xchg
int3
jg
test
call
mov
out
xchg
push
pop
insb
fs
mov
mov
jbe
mov
push
insb
repz
adc
sub
jmp
icebp
mov
fldcw
sbb
adc
dec
pop
push
gs
fadds
sub
and
shlb
xlat
ret
shl
push
push
es
movsl
out
mov
loopne
sub
mov
jmp
push
ss
mov
sub
lds
and
mov
fxam
or
adc
lds
sub
xchg
movsl
lods
mov
adc
out
and
adcl
pop
pop
int3
jmp
jns
ds
cmp
js
es
pop
les
push
into
stc
cmpsb
popf
jne
cmp
cmpb
aam
dec
negb
fstps
ret
out
sub
sub
das
pop
xor
push
mov
xchg
adc
mov
mov
mov
pusha
pusha
fldt
fcmove
popf
jle
pusha
lea
mov
mov
stos
hlt
inc
xchg
outsl
insl
mov
push
scas
cwtl
aas
push
fadds
mov
lds
push
dec
hlt
and
div
mov
mov
imul
and
sahf
lcall
jno
inc
dec
ret
arpl
cmpsl
mov
push
js
xor
push
outsb
xor
dec
and
popf
pop
mov
pop
sub
fstp
shl
lret
push
nopl
pusha
arpl
xor
ds
push
pop
stos
xor
mov
repz
pusha
adcl
jnp
sub
dec
xchg
or
sbb
or
inc
bound
jb
sbb
pop
and
clc
scas
and
in
inc
lcall
lret
je
add
push
xchg
sarl
aad
leave
negb
lock
xchg
sub
test
int3
push
int3
mov
and
aaa
insl
movsl
rorb
or
sub
cmp
xor
dec
lock
sbb
xchg
dec
xor
dec
popf
lods
flds
shlb
adc
into
fucomp
lahf
jge
and
push
test
bnd
int3
lcall
js
mov
push
xchg
es
dec
aaa
in
adc
rcll
dec
icebp
push
movsl
push
mov
mov
mov
xchg
sub
lock
jnp
fists
mov
movsb
pushf
out
adc
mov
cmp
idivl
xchg
ss
addr16
mov
ficompl
das
enter
fldcw
test
or
arpl
loop
loope
hlt
xchg
movsb
into
imul
cs
in
sbb
stos
mov
out
jle
cmpl
add
negb
stos
pop
in
je
stos
mov
push
roll
pushf
mov
outsb
pop
pop
aas
cmp
out
fdivr
inc
cmp
dec
notl
jecxz
cmp
jl
outsb
mov
js
repnz
movsb
lea
insb
inc
test
or
sub
ret
mov
cmp
mov
xchg
sub
test
test
scas
shll
fisttpl
mov
cli
jl
repz
add
xchg
jne
pusha
xchg
pop
xchg
mov
dec
cmp
addr16
rcll
sub
xchg
cmpsb
push
imul
jnp
lods
mov
mov
adc
cli
imul
lock
adc
push
ja
nop
jnp
jno
nop
stos
sub
inc
inc
add
mov
shl
das
scas
insb
add
sbb
xchg
or
xor
insl
mov
lret
add
imul
cltd
jbe
push
mov
rolb
adc
scas
xchg
pop
mov
stos
pcmpeqd
aas
insb
pop
push
repz
fcomps
js
gs
daa
xchg
jge
idivl
hlt
ret
not
data16
loop
test
mov
inc
pop
pop
and
push
or
mov
jnp
fstps
lods
rcrl
testb
leave
sbb
fsubl
inc
inc
movsb
rcl
sbb
sti
and
xor
push
or
push
push
pop
testb
sub
and
in
adc
sub
sbb
test
shlb
jo
dec
sub
mov
xorb
push
cmc
mov
pop
cmc
mov
inc
cltd
dec
xlat
cli
lcall
or
into
cli
jnp
in
mov
kortestb
dec
fisubrl
jnp
cmp
adc
jbe
std
std
jg
testb
push
mov
mov
insl
inc
pop
jo
lret
mov
add
jnp
sbb
or
inc
pop
inc
adc
andb
aas
sbb
cmp
xchg
mov
mov
push
js
pusha
imul
adc
cld
sbb
bound
cmp
and
push
lods
mov
mov
mov
sbb
nop
inc
add
popf
cltd
data16
repz
adc
dec
jae
fisubrl
mov
fldl
xchg
jne
sub
ret
push
sbb
mov
inc
in
jp
or
scas
adc
inc
xor
lcall
mov
mov
fdivrl
dec
data16
push
popf
std
cmp
shlb
dec
or
nop
sti
mov
cld
pop
aas
xchg
movsl
fcomps
jmp
std
jne
mov
xor
jmp
mov
out
mov
fbstp
fsubs
xor
je
cmc
jge
clc
in
add
cs
adc
mov
fsts
dec
pop
mov
jg
mov
stos
xchg
or
mov
xchg
push
mov
icebp
add
adc
loopne
pop
movsb
leave
dec
push
push
into
negl
dec
dec
aas
cmc
and
int
aas
or
sbb
sbb
lret
adc
daa
test
adc
stos
or
push
fwait
mov
or
sbb
pop
inc
ret
push
ret
jl
lds
mov
inc
push
jmp
idivl
sbb
pop
movsl
mov
jns
push
xchg
push
insl
lods
movsl
scas
js
fnstsw
sbb
leave
call
adc
mov
shlb
push
cmp
push
jmp
pop
sbb
mov
cmp
push
or
mov
mov
jmp
mov
cmp
xor
cmp
xchg
popa
inc
push
stos
out
lahf
xchg
dec
cmp
push
out
pop
fstpt
gs
jns
dec
repnz
hlt
cmp
clc
jbe
inc
sbb
cltd
jecxz
pop
fstpl
pop
subb
rolb
lcall
cmp
xchg
cli
pop
rclb
int
xchg
je
popa
aad
in
cmp
loope
push
pop
repz
mov
stos
enter
mov
mov
sub
mov
pop
inc
mov
les
adc
stos
jecxz
pop
add
xor
mov
sarl
mov
add
adc
cmp
mov
xlat
add
repz
xor
mov
inc
imul
or
mov
xor
push
in
rorl
pop
sahf
outsb
dec
lods
inc
int3
imul
xchg
sub
add
mov
adc
pop
popf
mov
adc
sti
leave
test
hlt
aas
cmc
shlb
repnz
mov
fwait
sub
xchg
pop
rol
out
push
add
clc
ljmp
mov
icebp
push
jp
imul
hlt
loopne
mov
addr16
sarb
arpl
lret
lds
mov
sqrtps
ss
inc
xchg
add
ljmp
enter
cwtl
jo
out
pushf
ficoml
mov
inc
clc
jecxz
lea
out
test
mov
and
rolb
cmp
push
lock
mov
inc
jno
loop
ss
or
pop
arpl
pop
ficoml
nop
dec
mov
clc
or
push
daa
cmp
mov
mov
dec
xchg
pop
jnp
push
sbb
mov
mov
mov
test
lea
out
test
or
daa
call
or
movsb
add
mov
and
cwtl
repnz
fcompl
or
dec
xlat
sbb
addl
cwtl
and
fninit
lahf
cmc
out
movsl
dec
jp
mov
jnp
sub
test
addr16
sti
sbb
int3
nop
pusha
movsl
testl
movsl
pop
pop
jns
outsl
subl
jecxz
sub
cli
adc
push
test
pop
jl
fsubrl
dec
cmp
dec
pop
icebp
enter
fisubrs
xchg
xchg
dec
loope
loope
jl
leave
add
adcb
insl
cli
lea
leave
mov
mov
mov
mov
mov
repz
insl
cs
dec
xchg
sub
mov
xor
inc
mov
inc
fsubr
push
or
or
daa
add
jmp
mov
push
mov
mov
rclb
sub
test
inc
fcomi
xchg
xor
outsl
and
into
cmp
sti
push
mov
imull
stc
scas
cmpsl
mov
sub
ds
jo
int3
lahf
cmp
pop
aam
ret
mov
and
and
gs
and
dec
and
arpl
mov
int3
and
cmp
scas
aaa
lods
cmp
dec
rolb
stos
lahf
adc
jno
xchg
xchg
mov
repnz
scas
mov
pop
mov
lea
das
ret
addb
mov
jmp
dec
sti
je
scas
js,pt
add
push
pop
mov
ret
test
icebp
pop
mov
clc
xchg
repz
cmp
inc
push
xorw
or
inc
mov
xor
pop
push
mov
lcall
inc
push
hlt
jge
xchg
xor
jbe
add
rcrb
in
mov
pop
add
jmp
adc
jns
push
add
idiv
stc
mov
mov
dec
out
mov
test
cmp
jo
fisubs
std
pop
push
ss
lret
jmp
sub
push
cmp
add
imul
jecxz
inc
mov
xor
add
cmpsb
orb
lds
push
fdivl
int3
or
int3
pop
out
cmc
add
and
clc
adc
push
inc
bound
sub
pop
gs
mul
or
ljmp
das
push
adc
push
out
jmp
push
and
bound
addr16
data16
and
fisubrs
mov
jae
push
test
adcb
ljmp
pop
test
insb
hlt
jecxz
xchg
mov
mov
lds
or
in
imul
inc
mov
cld
push
xchg
pushf
mov
jno
fs
xchg
inc
test
stc
cmp
rcl
pushf
push
sub
ja
jg
push
rorl
xchg
inc
cli
in
pop
daa
sarl
mov
pop
and
mov
add
pop
or
mov
inc
outsb
frstor
clc
popa
push
add
inc
rol
ja
jns
inc
fisubrl
shrl
mov
mov
push
add
jmp
inc
push
dec
adc
push
sbb
inc
add
pop
and
repnz
pushf
gs
adc
icebp
scas
jmp
xchg
jg
hlt
push
sahf
in
mov
cmc
sarl
shl
jle
cltd
pop
sbb
shlb
repz
mov
mov
and
pop
cmp
fs
dec
pop
sub
into
cmp
sti
jno
add
imul
xor
lcall
test
dec
in
test
pop
cltd
sbb
sarb
movsb
dec
add
mov
fcompl
test
rcl
jmp
stc
xor
sub
push
mov
or
mov
mull
and
out
popa
mov
stc
xchg
and
sahf
repz
mov
cs
adc
or
mov
or
fs
and
je
pop
push
sub
test
jl
xchg
aad
lret
dec
xor
loope
mov
xchg
mov
ss
push
pop
movsb
repz
sub
cwtl
push
adc
sbb
jae
pushf
adc
sahf
push
push
imul
fisubl
shll
in
and
push
iret
push
das
lret
addr16
out
fisttpll
or
aam
pop
sub
pop
rol
or
ljmp
ret
jno
pop
cmpsl
jle
push
inc
xor
fsts
hlt
icebp
xor
xor
inc
jbe
test
mov
mov
push
sub
outsb
mulb
adc
ss
test
pusha
jo
sbb
pushw
jmp
and
push
sbb
int3
les
jbe
or
and
icebp
fs
mov
jmp
jecxz
xor
xorb
arpl
cmpsb
aaa
iret
xor
cmp
add
cmpb
dec
and
jle
adc
and
jns
repz
inc
fs
and
dec
add
in
lahf
jg
lret
sub
cltd
add
clc
adc
cmp
pop
inc
in
xchg
das
repz
add
pop
lods
xchg
push
sbb
enter
adc
leave
sahf
adc
jnp
mov
cmp
subb
daa
in
push
mov
cmc
push
jbe
scas
fistpll
inc
daa
iret
mov
pop
adc
jg
cmc
lods
test
mov
popa
mov
xor
aam
movaps
inc
lret
rcll
mov
sarl
jo
fildl
cmp
mov
lods
rcrl
vaddss
lea
iretw
sub
mov
dec
jo
call
pop
mov
arpl
lea
mov
pop
dec
or
and
push
sub
adc
sahf
inc
mov
popa
lock
notb
outsl
adc
in
rcr
cs
push
ss
xor
jno
inc
mov
xchg
lret
and
loope
xchg
cmpsl
fildll
cs
jo
jne
in
xor
or
mov
scas
add
mov
xchg
popf
pop
stos
icebp
xchg
sub
sub
jo
movsl
out
push
out
clc
lcall
adc
bound
mov
xor
jne
xchg
jns
xlat
dec
cmpsb
orl
aaa
mov
gs
or
shll
sbb
out
outsb
xchg
int3
sahf
pushf
sub
mov
add
fidivrs
xchg
cmp
inc
scas
add
pop
shrl
enter
xchg
xor
repnz
test
and
jmp
in
mov
jne
adc
push
inc
mov
cmpsl
inc
and
adc
pushf
cwtl
cmpsb
dec
mov
mov
pop
add
cwtl
jne
popl
mov
push
and
cs
pop
push
leave
dec
jle
and
hlt
sub
fimull
ljmp
out
fstl
mov
in
and
add
mov
out
adc
mov
inc
jl
cmpsl
dec
mov
pop
leave
sub
mov
icebp
in
dec
fdivl
push
sub
addl
repz
insl
sub
pop
and
push
cwtl
sbb
pop
xor
fisubrl
pop
ss
sbb
xchg
sbb
xchg
ret
mov
xor
sub
mov
mov
mov
mov
pop
mov
add
mov
arpl
fstpt
and
push
mov
jmp
xchg
jg
fildll
and
push
imul
arpl
push
ret
scas
call
push
lea
sub
pop
jbe
mov
sbb
jecxz
lds
mov
or
push
jb
lock
adc
pop
xorb
sub
jle
pusha
leave
pop
mov
in
and
push
ret
aad
and
std
icebp
or
iret
sbb
push
sbb
cmp
daa
add
fwait
lock
jbe
push
shll
push
lods
das
shlb
inc
cmc
jne
cmp
sarb
jmp
pop
pusha
rclb
nop
jb
xchg
xor
stos
cltd
or
cmp
push
jne
sbb
pop
xchg
and
mov
xchg
je
pop
xor
sub
stos
pop
mov
or
sbb
fimull
lcall
inc
jge
sahf
jp
bound
mov
loopne
sahf
cmp
test
aas
cmp
and
xor
mov
imul
dec
dec
roll
mov
pop
mov
pushf
adc
add
or
out
cmp
test
mov
pop
pop
lcall
icebp
lcall
mov
fs
in
pop
and
or
xor
ds
test
jno
xor
mov
pcmpeqb
outsb
pop
lret
sub
ret
int
leave
ljmp
repnz
push
hlt
dec
mov
repz
out
mov
push
in
inc
adc
adc
in
cld
rorb
repnz
fidivrl
imul
adc
inc
xor
adc
inc
push
jg
cmpsl
int
or
fs
arpl
adc
call
add
mov
ror
and
jne
js
push
pop
mov
xlat
int3
mov
fs
lfs
cwtl
push
mov
ror
out
push
mov
xor
cwtl
popa
mov
imul
or
lock
jno
add
xchg
lret
dec
sbb
dec
stos
push
icebp
sbb
inc
adc
or
imul
mov
aaa
lahf
int
xor
mov
ss
inc
or
divl
inc
push
inc
adc
addr16
xor
jo
call
imul
sub
sgdtl
test
add
filds
push
loope
or
and
or
mov
mov
call
jne
push
inc
push
je
xchg
fadds
mov
xchg
dec
icebp
and
cmp
sarb
clc
xchg
push
test
mov
xor
fs
jmp
pop
sbb
xor
add
push
add
and
nop
ffree
cltd
xor
dec
fwait
xor
jae
mov
rorl
mov
scas
loopne
mov
add
out
loopne
das
mov
icebp
cmp
or
pop
lcall
inc
fs
enter
push
movsl
push
sahf
pop
pop
pop
sbb
inc
insl
sub
mov
jns
adc
sub
faddp
push
mov
sub
or
imul
xchg
jge
dec
mov
sbb
add
dec
fucomp
mov
adc
inc
pop
stc
xchg
repnz
nop
test
insl
sub
mov
xchg
or
test
jecxz
lahf
test
inc
leave
inc
stos
mov
dec
push
jno
sbb
push
mov
aam
jnp
int3
xchg
fcmovnu
push
sahf
dec
or
mov
xchg
out
cmp
stc
xchg
ljmp
add
movsl
dec
cmpsl
inc
xor
test
mov
out
out
cli
adc
mov
scas
out
push
mov
and
and
loope
dec
adc
sbb
xchg
or
sahf
aam
add
adc
gs
insl
push
inc
jl
stos
mov
imul
sub
outsl
pop
dec
popl
mov
sbb
test
dec
jp
pusha
xor
cmp
hlt
add
cmc
add
mov
cltd
cwtl
or
sahf
jns
je
jmp
adcb
inc
ljmp
andl
push
push
inc
sub
mov
repz
adc
sbb
mov
xchg
icebp
cld
and
mov
adc
gs
push
arpl
stos
pop
cmpsb
test
into
gs
enter
xor
dec
push
mov
cmp
cli
push
insl
jmp
inc
bound
xchg
mov
bound
pop
push
pop
push
mov
imull
xchg
xor
mov
sti
mov
testl
mov
out
jmp
sbb
dec
shrl
dec
inc
insb
adc
std
movsb
and
rcll
stc
mov
into
ljmp
enter
inc
les
add
lods
mov
pop
stos
jns
int
push
dec
pop
cmp
add
outsl
mov
fdivr
inc
fidivl
les
xor
sub
dec
push
std
lret
in
jbe
mov
mov
scas
jno,pt
cmp
fstl
sahf
shl
mov
mov
xchg
leave
addl
pop
jae
jmp
pop
xchg
hlt
and
in
jne
and
inc
mov
jg
sub
sbb
add
ffreep
ret
shr
mov
sub
addr16
aam
imulb
or
sub
mov
rcrb
cmc
adc
fldenv
jecxz
in
pop
in
sahf
mov
add
fwait
push
xor
imul
lret
shll
decl
inc
dec
clc
jne
sar
sub
pop
jle
adc
out
cwtl
add
sti
dec
sub
or
jg
xlat
lcall
mov
cld
add
mov
pop
sbb
pop
roll
arpl
roll
mov
aaa
and
roll
xchg
inc
lods
pop
gs
pop
dec
lret
in
adcl
push
inc
mulb
pop
popf
mov
and
movsb
pop
sub
fldl
fcmovnbe
fmull
cmp
hlt
outsb
ds
fldl
rcr
mov
icebp
cmp
add
adc
es
push
jnp
mov
fs
dec
xor
push
jo
outsl
pop
iret
jne
shr
mov
lret
add
cs
push
and
mov
xor
sbb
fidivs
lahf
jae
js
inc
xchg
and
ljmp
mov
inc
add
xchg
mov
loope
outsl
lcall
aas
aaa
negl
xlat
adcb
mov
cmp
inc
add
popf
mov
push
xor
aad
xchg
add
data16
push
adcl
jl
out
pop
rorb
out
out
mov
inc
and
xor
arpl
stc
cld
loope
das
dec
cs
xchg
roll
jg
xor
jle
mov
inc
mov
stc
mov
mov
mov
cmc
inc
rcl
leave
push
call
insb
xchg
push
lahf
push
lcall
push
jbe
inc
stc
mov
lret
mov
push
jmp
aas
int3
je
gs
sbb
pop
fwait
dec
or
cmpsl
mov
push
les
test
pop
jg
arpl
in
xchg
mov
cmp
dec
daa
repz
stos
cwtl
inc
xchg
push
or
insl
jecxz
mov
dec
add
sub
inc
ret
in
jp
fmull
data16
scas
or
out
or
add
mov
push
inc
mov
cmp
ret
xor
pushf
pop
adc
mov
jmp
loopne
push
popa
mov
jmp
or
adc
mov
jbe
pop
adc
sahf
icebp
push
cmp
and
ret
sub
mov
jns
mov
mov
cmp
dec
lret
push
dec
mov
outsb
jge
mov
cmp
jns,pt
arpl
xchg
fs
in
sti
mov
ret
out
cmp
negb
pop
mov
mov
ja
rorb
mov
xchg
shll
inc
inc
dec
lds
cmpsl
dec
push
fdivs
push
adc
scas
icebp
add
arpl
jge
and
lods
repz
fmul
inc
lret
mov
sbb
add
inc
fnstenv
pop
mov
mov
jle
add
push
fimull
mov
popf
scas
aas
lcall
fadds
inc
pop
push
jg
inc
fs
sbb
push
adc
int3
ja
imul
and
hlt
imul
faddp
pop
jnp
mov
push
cwtl
xor
push
shrl
cld
pop
pop
xchg
sahf
push
out
dec
push
jbe
mov
nop
fs
addr16
iret
ret
sub
data16
nop
and
mov
nop
ja
mov
jbe
js
subb
xchg
push
dec
icebp
in
cltd
in
test
add
and
push
subb
cmp
sbb
nop
ss
inc
je
push
cmc
jnp
mov
into
movsl
xlat
push
adc
aam
dec
dec
cmp
loope
or
sub
les
xchg
mov
inc
adcb
mov
mov
xchg
cld
pop
cmp
mov
push
mov
lea
movl
daa
cmp
cmpb
cwtl
adc
shlb
xor
sbb
addr16
popa
cmp
int3
shrb
and
dec
fsincos
lahf
mov
arpl
fildl
shl
les
pusha
aad
or
mov
cmp
fs
ret
add
inc
or
xchg
imul
inc
repz
std
rcl
inc
xchg
insl
jp
aad
mov
or
jbe
loop
adc
xchg
lds
insl
pop
jne
xor
mov
sahf
cld
cmp
lcall
test
lahf
fistl
adc
orl
push
arpl
stos
sub
xchg
add
cmc
pop
addl
mov
mov
cmpsb
sahf
xchg
ret
sbb
adc
cmpsb
xchg
jo
aas
pop
loop
lock
icebp
popf
imulb
cmp
rolb
jne
jo
int
imul
movsl
jnp
or
sub
loope
icebp
mov
push
push
iret
fidivrs
sub
lock
inc
sub
sub
lcall
arpl
mov
inc
out
or
and
enter
imul
sti
call
sub
aam
cwtl
ror
adc
pop
fisubrs
push
sbb
xchg
lds
iret
jl
clc
or
sbbb
lods
xchg
ljmp
xchg
repz
add
or
adc
mov
popa
mov
xor
and
xlat
in
insl
sbb
ljmp
inc
cmpsl
add
jle
inc
enter
fldl2e
scas
inc
insl
mov
or
push
lret
or
jbe
data16
aad
gs
popa
insb
dec
adc
subb
dec
or
mov
xor
stos
pop
testb
test
mov
mov
fwait
jl
jge
sub
sbb
inc
stos
pop
cmp
das
and
stc
mov
dec
or
daa
dec
dec
push
add
push
leave
or
cltd
les
repnz
lds
mov
and
mov
sahf
adc
cmpsb
repz
call
sbb
mov
push
mov
sub
imul
lock
mov
and
jnp
mov
mov
xor
out
mov
mov
movsl
scas
jns
mov
and
mov
jo
and
sub
pop
xchg
leave
dec
mov
jbe
scas
adc
cmp
xchg
pushf
clc
pushf
jns
inc
mov
xor
fdivs
inc
movsl
stos
xor
andl
dec
add
mov
mov
les
push
cmp
xor
and
dec
push
test
dec
jp
and
sub
stos
out
mov
xchg
lods
dec
pop
mov
adc
out
inc
inc
push
repnz
cld
sarb
clc
jl
idiv
leave
and
or
add
jnp
lret
adc
pushf
xchg
xchg
aad
and
inc
inc
adc
mov
or
in
adcb
mov
cmp
mov
jge
js
test
pop
fdivrl
sbb
adc
movb
mov
sbb
popa
lea
mov
push
mov
inc
ja
mov
scas
jle
xlat
lods
mov
mov
dec
mov
fistl
rclb
outsb
aam
pop
inc
and
cmp
adc
jne
mov
dec
cmp
xor
repz
gs
add
xor
xor
rol
add
cmp
insl
jp
pop
pop
mov
cmp
and
jo
aad
inc
int
cld
xchg
mov
sub
aam
pop
sbb
les
adc
push
orb
insl
adc
iret
jns
mov
js
sub
adc
int3
sub
inc
pop
ret
int
lret
and
jo
enter
add
rcll
jno
adc
outsl
xchg
jmp
stos
lret
adc
aaa
stc
lds
and
sti
dec
not
pop
sub
dec
dec
les
mov
jmp
cld
pop
add
jno
je
mov
in
and
dec
repz
repz
int
xchg
in
mov
cltd
sbb
rorl
cld
cmp
je
dec
sub
mov
push
subb
mov
mov
push
mov
push
cmp
addr16
dec
sub
jb
dec
rolb
aam
jmp
inc
notl
outsb
subl
leave
dec
pushf
pop
cwtl
int3
sti
sbb
add
jns
call
hlt
sub
inc
scas
movsl
mov
adc
or
push
out
out
inc
stos
jno
jl
dec
data16
mov
call
dec
iret
mov
stos
cmp
inc
add
mov
sub
repnz
cmc
and
add
mov
jle
neg
cmp
inc
jno
and
test
test
pop
repz
sbb
add
aad
sbb
loope
jnp
sbb
add
loop
lods
jae
and
and
sbb
pusha
lods
notb
loopne
pop
popa
xchg
insb
xchg
adcb
xchg
push
cltd
pop
xor
in
inc
cs
sub
sub
cs
out
sub
sbb
cmp
out
pop
pop
push
test
mov
sub
jb
icebp
cs
dec
dec
sbb
out
and
mov
in
lods
inc
jl
cmp
aas
sbb
fnstsw
jnp
and
mov
scas
and
cli
sar
rcll
ljmp
xchg
stc
sbb
in
stos
or
sub
ret
arpl
add
mov
scas
mov
xor
xchg
jle
xchg
rcrl
mov
cmp
fs
mov
lods
push
push
mov
mov
out
mov
cmc
ljmp
inc
imulb
pop
mov
jp
mov
scas
stos
and
cmp
pop
sub
pushf
test
and
fwait
sub
iret
add
sbb
xorl
push
scas
xchg
popa
pop
inc
into
fdivl
xchg
pop
rcrb
movsl
mov
adc
pop
sub
sahf
cmp
bound
lret
repnz
dec
cwtl
lret
rorl
jp
lock
out
je
and
mov
daa
andb
shrl
lds
add
rcrb
inc
outsb
cmp
dec
repnz
sbb
pop
aad
fnstcw
shl
jno
loopne
or
testl
scas
push
fcomps
enter
hlt
rcll
mov
inc
aas
loopne
and
out
jecxz
lds
out
adc
inc
xor
outsl
divb
sub
xchg
int3
mov
movsb
fistpll
stos
out
sbb
in
or
mov
dec
mov
aad
test
jmp
mull
or
mov
dec
or
pop
push
mov
ja
and
push
jecxz
cmpsb
push
xchg
js
repz
sbb
imul
ljmp
cmc
mov
mov
ja
imul
shl
cmp
ficompl
mov
xorl
lret
mov
hlt
pop
gs
fs
andl
scas
fstl
ficomps
popf
dec
jmp
adc
inc
cmpsb
sub
int
lds
in
lret
movsl
push
outsb
or
jns
xchg
xor
jge
add
mov
sar
mov
mov
test
add
sbb
cmp
inc
pop
mov
sbb
lods
adc
xor
imul
enter
ja
lret
push
jno
jmp
enter
lret
popf
nop
insl
flds
mov
call
dec
mov
xchg
rcrb
test
sbb
cmpsl
or
dec
sub
inc
ljmp
stc
or
sub
dec
mov
stos
push
push
in
mov
push
aaa
mov
loop
std
sbb
fbld
xorb
or
test
pop
enter
sbb
leave
mov
jo
xor
sbb
adc
jmp
xchg
shlb
adc
xor
mov
mov
jge
xchg
inc
xor
pop
inc
xchg
jne
popa
aas
fdivl
fwait
lock
fwait
pop
movsb
popa
cmpsl
int3
push
or
xchg
loop
mov
mov
cld
mov
outsb
mov
jecxz
test
sbb
add
cmp
pop
dec
aaa
inc
cmp
xor
imul
xor
pop
insl
inc
test
jno
mov
adc
add
mov
scas
pushw
mov
and
mov
loop
ljmp
pop
mov
rcl
mov
sbb
sbb
xor
jp
orb
ja
mov
push
jp
mov
or
push
pushw
cmp
mov
lods
pop
cld
add
xor
es
enter
daa
fwait
in
inc
add
mov
aam
pop
pop
popf
mov
movsb
push
incl
dec
rcrl
les
orb
and
mov
pushf
jecxz
xchg
cmp
sub
jle
sub
mov
pop
loope
fistpl
enter
sub
ljmp
push
shrl
xchg
pop
and
test
cld
and
mov
sbb
inc
inc
mov
lret
mov
inc
and
ja
xchg
and
adc
sub
cld
icebp
mov
adc
and
scas
jbe
dec
bound
pop
xor
xchg
mov
shll
repnz
inc
push
int
push
leave
sub
cmpl
mov
inc
clc
fildll
or
push
push
lods
fs
ds
xchg
mov
rcrb
add
in
mov
test
loopne
and
ss
jne
movb
jle
leave
or
rol
inc
jp
bound
cmpsl
ljmp
push
xchg
jecxz
or
adcb
dec
push
push
movsl
iret
repnz
push
dec
dec
mov
fldl
push
sbb
std
mov
add
inc
push
push
or
rcrb
push
sbb
inc
daa
call
ret
mov
fisttps
xchg
adc
mov
iret
push
add
pusha
fcompl
repnz
sub
in
xor
mov
inc
cmp
xor
dec
cltd
cmp
push
dec
loope
sub
cwtl
jnp
or
lods
cmp
stc
sbb
out
xlat
repz
lahf
mov
adc
ficomps
mov
in
test
jae
xor
fiaddl
inc
cs
imul
adc
and
sbb
fwait
gs
mov
pop
and
sbb
add
mov
pop
sbb
repz
fsubl
jno
fsubrs
imul
add
movsl
bound
ffree
or
mov
aaa
and
push
xchg
into
dec
inc
inc
mov
rorl
add
dec
mov
ds
test
pop
push
mov
cmp
jl
scas
cmp
loop
mov
mov
mov
lds
js
les
pop
aas
imul
xchg
push
or
mov
mov
aam
fs
addr16
and
and
cs
sar
insl
mov
mov
testb
or
pop
mov
pop
push
jecxz
mov
add
and
cmp
push
xor
cmp
or
lret
ljmp
jg
scas
lcall
inc
cmpsl
mov
add
push
xchg
call
repz
sbb
push
dec
mov
inc
adc
aaa
test
loope
mov
dec
sub
ss
popf
mov
cvtdq2ps
es
jecxz
cwtl
jo
pop
add
jmp
dec
aas
mov
pushf
or
pusha
lods
out
stc
in
mov
adc
xchg
mov
adc
mov
xchg
lock
cs
divb
adc
lds
arpl
dec
mov
and
mov
pop
push
push
ja
rorl
push
ret
test
jl
xor
and
xchg
in
in
into
push
jg
das
push
movsb
jns
jae
xchg
pop
xchg
mov
inc
adc
je
or
adc
shll
pop
push
push
and
adc
push
pop
int3
or
js
xor
lret
inc
and
adc
mov
out
add
jmp
and
cmp
or
pop
imul
jbe
in
pushf
xchg
mov
sti
sbbl
or
aam
pop
xor
cmp
mul
or
inc
int3
cli
into
sahf
and
adc
xchg
ret
out
and
mov
mov
add
xchg
add
fisttps
add
int
je
fcomps
orb
lock
push
pop
imul
push
not
jnp
sbb
adc
push
in
shl
pop
add
in
aad
test
in
push
adc
xchg
cli
inc
fdivs
dec
jo
mov
mov
cmp
test
sub
inc
ret
ja
lock
lret
push
lret
or
inc
cwtl
aam
dec
hlt
repnz
ror
mov
jmp
lcall
cmp
xor
aaa
mov
ljmp
sub
add
push
push
pushf
pop
mov
pop
rorl
fldl
adc
iret
in
aaa
push
lods
or
dec
sbb
sarb
pop
lds
mov
ljmp
adc
pop
outsl
bound
pop
push
hlt
push
lcall
imul
pop
xchg
push
dec
xchg
mov
mov
loop
xchg
arpl
inc
es
dec
test
shlb
das
in
cld
cmp
push
mov
add
push
adc
cmp
rcrl
arpl
call
push
push
mov
pushf
addr16
xchg
and
pop
loop
pop
sub
xlat
mov
cmpb
xor
lret
cli
fidivrl
loope
pusha
add
movsl
xchg
inc
jae
and
out
jae
lods
je
mov
movsb
or
add
dec
lods
repz
scas
lods
int
subl
popf
xlat
int3
mov
adc
push
ja
cmp
and
std
ror
ret
mov
mov
pop
sub
nop
cmc
lret
test
jmp
pop
xor
and
push
popf
scas
sbb
out
sarb
inc
les
mov
jge
sub
stos
sbb
pop
loope
xchg
xor
je
iret
pushf
roll
in
pop
adc
mov
mov
popa
ss
adc
lret
mov
mov
leave
out
lret
loope
in
mov
aaa
jmp
cmpl
jnp
mov
and
mov
sub
shll
jge
mov
mov
jb
jg
mov
stc
or
rcrb
loop
aas
mov
cmp
pop
dec
rclb
inc
xor
and
and
inc
movsl
pop
fsubrl
sub
xchg
push
cltd
adc
jo
push
cli
and
dec
dec
leave
test
das
sub
push
out
cmp
lods
adc
repz
ja
adc
and
sub
sub
sbb
and
aam
cli
dec
inc
add
nop
and
lods
lock
jb
xor
jnp
inc
sti
inc
mov
dec
jns,pt
andb
jecxz
aam
or
mov
dec
xchg
sbb
enter
and
mov
jge
add
rol
aam
aas
pop
pop
mov
inc
push
xabort
pop
inc
mov
pop
cs
adc
je
mov
ljmp
je
inc
nop
dec
outsl
cmpsl
pop
icebp
sbb
add
xchg
pop
std
js
or
xchg
ret
jmp
dec
andb
push
test
orl
leave
lret
add
gs
jne
sahf
cmp
repnz
dec
fs
pop
ss
mov
cmp
mov
imul
mov
xor
imul
repz
mov
cmpb
movsl
push
lods
or
xchg
ret
add
push
daa
bound
cs
icebp
ret
fidivs
imul
cli
in
push
lret
ljmp
push
ljmp
adc
gs
add
jbe
movl
or
mov
into
jge
sbb
clc
and
js
lock
loopne
push
pop
inc
sub
mov
and
aad
mov
nop
addl
xchg
ja
pop
dec
jae
xor
xchg
outsl
mov
data16
cmp
adc
push
je
add
out
and
insb
xchg
adc
mov
nop
mov
iret
inc
lods
sub
lods
cmpsl
rorl
fchs
inc
iret
test
or
dec
dec
cmpsl
jno
mov
jg
mov
enter
data16
pop
repnz
int3
test
aam
jo
loopne
sub
mov
lret
pushw
dec
jge
cmc
mov
xchg
arpl
into
sbb
stos
or
outsl
push
xorb
xor
pop
push
sub
jbe
das
mov
jno
ds
push
pop
xor
leave
popa
stos
jae
repz
je
aas
or
mov
mov
or
jne
inc
aaa
iret
jb
sbbl
je
fildll
call
es
mov
cmp
imul
push
leave
cld
jl
mov
and
lret
js
cld
in
outsb
rcll
cmp
adc
inc
mov
adc
mov
aad
mov
dec
mov
mov
push
mov
sub
mov
push
and
dec
sbb
popa
sbb
js
mov
mov
mov
push
or
pop
push
adc
std
dec
mov
sub
mov
ficoms
pop
sbb
mov
lcall
or
pushf
jo
rorl
insb
lds
lret
add
jg
sub
and
incl
int3
aas
sub
dec
push
mov
xor
sub
cmp
pusha
je
movsl
xchg
outsb
out
call
mov
shl
gs
shl
stos
xor
in
cmp
lods
and
inc
mov
mov
sub
and
sub
arpl
push
mov
xchg
addb
inc
and
mull
and
lea
push
adc
loop
xchg
js
fnstcw
iret
mov
mov
and
fists
and
rclb
push
mov
xor
ret
cltd
push
or
mov
lea
push
push
jns
aad
test
xor
fcomps
popa
push
sbb
adc
mov
scas
mov
das
xor
or
loop
ljmp
aam
dec
nop
in
ja
xchg
adc
repz
or
repnz
lahf
mov
out
lods
jnp
xchg
push
out
cwtl
fiaddl
jno
fmul
inc
add
mov
jnp
out
mov
mov
dec
dec
ficompl
pop
mov
stos
and
mov
lahf
mov
popf
out
js
push
orb
dec
xor
sbb
dec
inc
hlt
and
notl
xor
cwtl
leave
and
mov
mov
lcall
outsb
and
sti
sbb
push
cmpsl
scas
das
sub
sbb
ret
enter
mov
pmaxub
sub
into
cwtl
pop
mov
xor
xchg
aam
push
lds
jno
mov
dec
cmp
sbb
fisttps
shll
out
xchg
ja
outsb
popf
and
pop
gs
in
das
je
dec
stc
push
lds
add
sub
mov
leave
insb
ret
xchg
inc
js
nop
fimull
nop
jnp
push
mov
test
int
lahf
out
or
fistl
cmp
imul
mov
mov
mov
pop
popa
fdivrs
inc
cmp
das
data16
lcall
cli
mov
pop
xchg
add
mov
movsl
or
mov
addb
push
xchg
scas
xor
pop
div
insb
cmp
add
syscall
dec
dec
in
test
pop
neg
jnp
cwtl
dec
mov
leave
cmp
hlt
clc
mov
xlat
or
lcall
or
mov
pop
enter
addl
movb
insb
sub
test
pop
test
sbb
xchg
jbe
jo
fcompl
xor
cmp
push
inc
xchg
cmpsb
movsl
mov
in
insl
pop
fsts
insb
xor
xchg
icebp
cmp
aaa
push
pushf
out
imul
pop
xor
dec
in
and
and
mov
mov
pop
orb
or
fmull
add
sbb
jno
mov
or
and
xorl
sub
lds
cli
sbb
push
outsb
mov
xchg
inc
int3
xchg
aaa
fs
xor
or
test
xchg
adc
lock
bound
idivl
call
mov
icebp
int
cmp
and
sbb
add
cltd
inc
cmp
or
xchg
out
sub
or
cmpsl
mov
sub
ja
sub
mov
stos
dec
test
aaa
mov
cmp
ds
aad
adc
push
xchg
iret
pop
js
test
int3
repnz
adc
xor
adc
adc
lods
cmp
and
sub
iret
xor
cmpsl
loope
inc
arpl
mov
movsb
dec
mov
enter
push
inc
or
xor
push
call
repnz
fistps
sbb
mov
pop
jnp
lahf
mov
das
and
cmpsb
inc
push
and
mov
sbb
stos
inc
push
shlb
inc
lahf
dec
je
loop
les
mov
mov
cli
imul
mov
adc
in
stos
aas
fcomi
movsl
clc
hlt
xchg
mov
int3
add
clc
adc
mov
mov
mov
scas
push
fs
add
movsl
leave
and
sbb
ja
or
dec
in
test
mov
vextractf128
adc
xor
jmp
inc
repnz
sbb
std
jnp
pop
and
xlat
xor
cmp
addb
push
rcl
sbb
inc
jbe
es
loopne
add
mov
xor
ret
lcall
pop
pop
sub
movsl
movsb
cmp
psrad
pop
add
inc
xchg
jl
jno
in
cwtl
xchg
sbb
dec
fs
jmp
iret
jle
in
outsl
adc
mov
add
enter
jbe
or
stos
js
pop
xor
mov
ds
cmp
xor
jae
cmc
jne
into
outsb
sbb
je
icebp
ljmp
pop
fldenv
cltd
mov
cmp
and
and
je
push
repnz
imul
mov
es
push
out
loopne
push
cmp
lods
fdiv
mov
or
cwtl
dec
inc
xor
ljmp
test
imul
add
adc
mov
pusha
dec
das
inc
int
push
loope
cli
mov
xor
imull
jg
xor
insb
cwtl
pop
outsb
inc
fimuls
scas
cmpl
cli
test
mov
add
dec
aam
les
aas
test
and
mov
test
ret
in
sti
addl
add
je
jmp
out
jno
sahf
inc
call
ds
fdivp
outsb
aaa
inc
adc
or
push
mov
test
scas
mov
lret
int3
in
push
pop
cmc
ds
xor
lods
loopne
pop
xchg
out
cmpsl
ret
xor
aam
idivl
ret
popa
lds
sahf
jo
mov
mov
ss
dec
out
jne
fs
mov
push
sbb
xchg
jbe
clc
outsb
mov
adcl
pop
das
or
das
enter
jge
push
jae
xor
xlat
lret
mov
cmp
ret
popf
jg
mov
and
mov
inc
rcrl
iret
mov
lods
addr16
xchg
jno
xchg
jno
mov
mov
stos
jns
stos
mov
call
mov
and
mov
mov
std
sahf
add
cmc
xchg
daa
cmp
rolb
aam
ds
lret
jle
subl
scas
sbb
js
dec
jnp
fistl
rcll
sub
xchg
out
sarl
popl
dec
das
test
and
aas
or
call
push
out
insb
pop
xchg
out
xchg
mov
add
xlat
jbe
sub
xchg
pop
mov
out
stc
stos
xchg
dec
sub
inc
or
je
mov
sub
and
aaa
cmp
pop
nop
in
mov
loopne
aaa
sahf
sub
mov
loopne
adc
dec
xchg
std
sbb
imul
cs
sbb
mov
pop
add
addr16
and
test
xlat
inc
jae
adc
loopne
test
jecxz
cmp
pop
dec
mov
jno
test
in
or
xchg
mov
andl
sub
mov
lods
clc
gs
mov
adc
shl
xchg
lock
test
sbb
adc
pusha
je
mov
mov
jo
push
sbb
xlat
push
jl
pop
push
dec
sub
insl
and
xor
insb
mov
insb
aas
push
cli
lahf
mov
sbb
cmpsb
mov
rorb
mov
outsb
jp
jg
sti
nop
sbb
sub
insb
inc
xchg
cmp
das
push
mov
and
stos
outsb
jbe
or
mov
out
jae
mov
sarb
call
adc
test
jmp
cmp
cltd
leave
jns
pusha
ds
add
mov
cwtl
ljmp
lret
push
pop
sbb
xchg
add
inc
inc
mov
cmpsl
mov
shll
and
pop
mov
fmulp
and
push
mov
addr16
aam
imul
int
sar
outsb
ljmp
jo
cmp
shr
mov
repz
inc
mov
mov
mov
ljmp
mov
shrb
and
aad
cli
popa
cli
out
push
pusha
push
enter
lock
repz
sub
out
aaa
fisttpll
sbb
sarb
repz
xchg
add
mov
jae
jns
push
loope
inc
inc
pop
test
loope
push
or
iret
push
xor
push
insl
mov
sahf
movsb
xchg
xor
das
mov
jno
mov
clc
or
pop
inc
adc
movsl
xchg
test
pop
movsl
mov
shrl
repz
lods
mov
dec
pusha
push
shl
loope
sub
outsb
adc
or
jae
in
cmp
enter
jnp
shrl
mov
xchg
sbb
xchg
xor
push
iret
xchg
sub
movsb
arpl
gs
mov
subl
pop
test
or
cs
dec
adc
and
adc
lods
fwait
out
divb
mov
cltd
inc
fiadds
mov
sbb
mov
andb
push
aam
insl
jp
dec
mov
loope
mov
pop
sub
mov
mov
popa
dec
sub
xor
add
dec
xchg
bound
or
sbb
lods
daa
or
jns
cmpb
lods
enter
clc
jmp
jmp
or
adc
outsb
je
lods
or
push
fadd
test
pusha
pop
xor
orb
cwtl
sub
loope
and
push
lds
or
or
test
and
loop
imul
mov
movsb
pop
popf
dec
sbb
pop
ds
adc
add
test
popf
or
gs
sub
dec
aaa
add
pop
test
or
lds
inc
sub
pop
sub
out
in
or
jne
lret
leave
or
pop
jle
in
xor
dec
push
adc
cmp
mov
ss
mov
shl
mov
lea
movsb
and
jo
pushf
xlat
jb
add
gs
xchg
fwait
scas
fcmove
roll
mov
leave
xchg
or
scas
shll
shr
sbb
clc
or
int
dec
ljmp
fadds
push
mov
push
shrl
lret
push
xchg
mov
out
stc
xchg
daa
jg
test
negl
outsl
inc
push
jecxz
mov
sub
adc
fildll
or
adc
in
shl
add
mov
fwait
inc
enter
into
pop
and
inc
pop
pop
dec
orl
or
in
add
rorb
cmp
push
jb
loopne
mov
aaa
test
adc
ds
jmp
jae
mov
popa
add
jecxz
jle
insl
aam
sbb
pop
inc
or
fs
sbb
mov
and
dec
lea
or
inc
gs
js
push
push
orb
mov
fcompl
mov
and
xchg
and
sbb
xor
loope
push
xchg
and
jg
cmpsb
inc
add
or
faddl
fnstcw
lods
dec
ds
das
cwtl
dec
cmp
ljmp
add
popa
mov
insl
mov
fucompp
test
aas
mov
xchg
test
stos
mov
jno
faddp
popf
push
hlt
xchg
icebp
in
mov
jmp
dec
push
test
cmp
fs
pop
imul
repnz
add
jmp
push
les
fwait
movsl
cltd
xchg
idivb
pop
and
add
ret
orps
inc
jle
je
fcmovnu
pop
xchg
cld
out
and
sbb
in
push
bnd
dec
pop
flds
xor
xchg
mov
ss
outsl
test
push
add
sub
sub
iret
xlat
xor
mov
jmp
mov
sub
sub
dec
ret
sbb
mov
push
insb
cli
daa
xchg
out
aaa
stos
aas
into
or
out
ljmp
shrl
xchg
rcll
insb
lahf
jge
cmp
daa
mov
adc
push
js
in
inc
adc
xor
xorb
xor
adc
sbb
negl
daa
cmp
push
sbb
and
lahf
or
pop
sub
add
in
pop
xchg
xor
xorl
call
inc
pop
pop
dec
xor
fiadds
ret
cmp
xchg
xor
repz
dec
lcall
ss
inc
nop
out
inc
mov
inc
xlat
pop
and
sarb
aad
mov
out
fsub
loope
xchg
or
inc
jb
pusha
loop
mov
ja
aaa
or
leave
inc
and
mov
push
mov
dec
sbb
sarb
rorb
add
movsb
mov
stos
cld
aad
lret
add
and
adc
stos
int3
je
cmpsb
dec
pop
xor
adcb
sbb
xchg
fs
xlat
lods
fcoms
addr16
inc
es
aas
aad
test
or
ja
adc
push
push
jbe
popa
pop
loopne
xor
mov
mov
arpl
jg
sbb
or
or
sbb
mov
lods
aaa
stos
bound
daa
xchg
sbb
xchg
loope
xor
push
and
xchg
rcrl
pop
inc
ja
movsl
jecxz
xor
mov
imul
and
mov
aas
out
shrl
xchg
jo
in
mov
mov
lret
iret
cli
jg
pop
sbb
or
sub
je
inc
fsub
mov
xchg
mov
mov
or
mov
cli
push
movsb
push
cmp
mov
fstl
loop
ja
add
orb
rcr
lea
nop
mov
push
es
mov
xchg
add
and
cwtl
pop
enter
fisttpll
stos
fs
mov
cmp
lea
push
enter
orl
pop
inc
scas
xor
xchg
sub
lret
cmpl
xchg
xor
pop
call
mov
orb
mov
lea
loope
test
push
push
sbb
or
insb
adc
fwait
shr
pop
test
inc
sbb
test
hlt
popa
xchg
xchg
pop
cld
test
mov
pop
lods
add
xchg
pusha
mov
adc
push
pop
push
xor
clc
rorb
test
movsl
int3
mov
add
ljmp
sbb
inc
mov
aad
les
ljmp
imul
mov
outsl
cmpsb
mov
sbb
xorb
fistl
sub
cmp
inc
push
pop
sub
dec
dec
xor
jnp
or
jbe
xchg
out
inc
xchg
test
push
sub
mov
into
pop
jb
scas
mov
xchg
push
test
inc
ja
pop
mov
pop
mov
sbb
das
arpl
sub
pop
lds
mov
lcall
daa
iret
cmpsl
sub
sub
mov
and
add
or
jl
push
out
pop
test
jno
sub
rcr
pop
pop
xorb
clc
push
xchg
and
dec
fs
mov
lea
lea
jecxz
jnp
cmp
popf
in
into
dec
je
sbb
push
push
aad
mov
mov
push
cmp
mov
movsl
das
stos
dec
enter
pop
cmc
dec
inc
inc
loopne
jp
xor
sbb
movl
adc
mov
xor
scas
jb
dec
lock
cmpsb
jnp
lcall
inc
mov
aam
push
push
insb
xor
xchg
or
notb
inc
ret
clc
push
lret
nop
pop
repz
xlat
test
mov
in
outsl
sbb
fucomp
mov
xor
cmp
adc
jo
shlb
loopne
jg
add
sbb
push
mov
leave
sbb
scas
sub
dec
mov
jle
jbe
fstpl
pop
pusha
dec
lods
arpl
jg
mov
aaa
push
add
xor
sub
sub
imul
hlt
add
dec
mov
xchg
xor
mov
mov
adc
fsubs
xchg
shr
std
sbb
popf
and
stos
push
arpl
movsl
test
pop
xor
cltd
stos
je
loope
lret
loop
rolb
pop
js
xor
mov
xor
xor
cmp
scas
cmpsb
aas
mov
pop
ds
mov
rcrl
jae
enter
stc
lea
pop
testb
jne
and
imul
sbb
dec
gs
cmp
imul
imul
out
cmp
mov
in
sar
inc
cmp
ror
dec
push
pop
sub
test
shrb
mov
cmp
lahf
les
pop
sub
pop
shrd
xchg
pop
test
mov
inc
out
movsl
push
aas
dec
shll
hlt
xor
adc
sbb
movsl
pop
test
popf
xor
cmp
xor
fadds
xor
js
sbb
xor
dec
push
ret
sti
cmpsb
adc
stos
pop
adc
push
jo
mov
mov
adc
je
sahf
test
xchg
mov
daa
adc
xchg
daa
mov
and
sbb
clc
lcall
or
imul
cmp
pop
xor
and
fwait
outsl
mov
xchg
cli
push
lret
jmp
mov
call
out
xor
data16
push
pop
lods
jge
js
aas
mov
mov
mov
out
je
js
das
xchg
push
push
movsb
adc
ljmp
sbb
xchg
data16
sahf
jbe
push
adc
xchg
xchg
mov
push
inc
jp,pt
int
call
insb
mov
jle
or
lods
out
in
lea
sub
or
jno
jmp
bound
out
cmp
sbb
mov
mov
fs
push
jecxz
ret
and
mov
movsb
mov
mov
dec
push
decb
out
inc
adc
arpl
das
testl
rcrb
loope
jp
mov
push
imul
add
mov
mov
cmp
or
xchg
adc
dec
inc
hlt
cwtl
xlat
jl
in
xchg
cltd
mov
repz
adc
call
sub
lret
xor
out
fcmove
mov
imul
cld
mov
sub
out
out
xchg
pop
mov
sub
sbb
dec
jnp
pushf
stc
sub
int
ret
jge
nop
popf
jmp
jns
add
or
xchg
pop
and
mov
pop
sahf
mov
mov
and
dec
jb
cmpsl
stos
pop
inc
popa
aaa
xchg
mov
mov
out
or
add
popf
sub
cmp
data16
adc
leave
dec
sbb
cltd
and
dec
popa
leave
cmp
cmp
jbe
cltd
lcall
iret
and
out
faddl
stc
and
lods
jae
cmpsl
mov
test
jnp
add
sub
mov
lfs
add
insl
popa
add
sub
movl
jl
mov
or
sub
mov
aas
les
scas
jmp
push
int3
insb
mov
add
inc
sub
popa
mov
push
movsl
mov
add
ficoml
sub
shl
dec
xchg
mov
adc
ja
pop
cs
movsb
pop
fimull
ss
mov
sarl
and
ret
scas
xor
pop
shl
inc
mov
jp
add
jne
cltd
cmpsb
jns
pop
int3
mov
dec
xchg
jns
scas
cmp
xor
sti
int3
fistl
jnp
jmp
stc
pop
sbb
adc
jl
mov
xorb
sahf
ret
push
leave
mov
stos
test
xchg
pop
les
xor
aaa
push
fnstsw
adc
jge
sarl
or
or
adc
dec
ja
iret
outsl
mov
mov
data16
sub
pop
jge
in
mov
dec
sbb
dec
xchg
mov
cmp
mov
inc
sub
push
rorl
adc
inc
adc
jb
out
mov
lret
cld
xlat
mov
mov
cmpsl
mov
ds
mov
mov
pop
fidivrl
jns
or
dec
mov
sti
or
adc
vmread
rolb
jp
ret
movsb
xor
or
lret
add
jae
pusha
push
and
cmc
and
fadds
mulb
mov
iret
cmp
pushf
test
outsl
adc
xor
andl
in
lock
inc
shl
daa
push
mov
rclb
sti
dec
inc
lahf
stos
pop
mov
jnp
adc
inc
fisttpll
test
adc
mov
stos
sbb
js
mov
cmpsb
in
movb
or
dec
inc
aas
cmp
fst
ret
pop
sbb
cmp
add
push
outsl
sarl
repnz
mov
fnstcw
and
cld
scas
inc
aam
sub
in
lods
inc
test
mov
in
push
fidivl
in
inc
sub
pop
rcrl
mov
dec
in
xor
pop
arpl
cmp
dec
cmc
xchg
push
push
call
aaa
or
rcr
dec
push
ror
or
jle
mov
xor
and
adc
fwait
in
loopne
add
jo
test
sbb
cmc
sub
xorb
xlat
dec
sub
sbb
mov
scas
sbb
sti
jbe
push
jge
pop
inc
push
cmp
mov
mov
fisttpll
xor
sub
test
xchg
adcb
xchg
subl
enter
xor
cli
add
call
stos
pop
mov
int3
sbb
shll
push
cltd
out
out
jne
notb
add
adc
repz
cmpsb
aas
inc
xor
mov
std
push
or
idivb
and
xchg
or
mov
mov
fs
inc
sbb
adc
sti
mov
aaa
cs
push
in
lahf
loope
jle
sub
inc
fsubrl
and
loope
test
js
pop
ucomiss
jnp
dec
les
cmpsb
ljmpw
jmp
push
push
cmpsb
mov
pop
fisubrs
pop
test
addr16
mov
sbb
mov
mov
dec
lods
pop
mov
and
rorb
out
jnp
fists
outsl
jo
movsl
push
mov
cld
loope
push
jge
jo
mov
es
and
push
pop
adc
mov
repnz
inc
push
jbe
sbb
test
push
mov
add
fcmovne
mov
in
jnp
push
sub
cmp
mov
shll
inc
outsl
fmull
lock
or
popf
dec
adc
in
insb
mov
mov
rolb
ds
int
mov
fldt
and
dec
in
or
sbb
jmp
notl
xchg
pop
aaa
fisubl
xor
sbb
mov
inc
popf
shrl
outsb
mov
mov
inc
dec
aaa
fwait
stos
js
jnp
push
aam
mov
stc
fdiv
cmc
xchg
ja
push
push
in
cmp
lods
repnz
mov
xor
inc
jnp
test
mov
pop
stos
and
in
cmpsb
popf
insb
jecxz
dec
mov
cwtl
pop
or
insb
push
jg
in
push
rcrl
imul
test
push
mov
ret
shlb
in
or
sub
es
roll
fstps
lret
inc
jmp
inc
mov
icebp
or
gs
mov
and
insb
lods
mov
add
adc
outsl
or
jecxz
aas
popf
test
enter
push
fstps
xchg
jae
xchg
add
sbb
push
outsb
push
pop
fsubrs
mull
pop
rcr
push
adc
and
sarl
inc
les
inc
cmpsl
push
addr16
ficoml
cmp
loop
nop
mov
adc
adcb
insl
loop
iret
jmp
mov
sahf
pop
push
push
push
cli
orb
dec
sub
or
icebp
das
dec
loop
jge
mov
cmp
push
push
sahf
mov
outsl
fcompl
gs
push
pop
cli
inc
jp
les
cmpsb
out
scas
sub
aas
mov
test
push
loopne
hlt
push
jmp
sbb
fwait
mov
jg
cmp
lahf
dec
dec
mov
int
cmp
push
jp
mov
mov
loopne
inc
scas
sti
sub
inc
ret
movsl
gs
xchg
pop
out
loopne
imul
pop
dec
adc
sub
adc
and
fadds
cli
inc
jl
adc
call
fsubr
out
adc
and
cmp
cld
add
cs
dec
js
cld
and
jnp
out
inc
insl
fidivrs
xchg
dec
loope
lcall
leave
xchg
in
mov
imul
shlb
jb
jecxz
jmp
lock
insb
jo,pn
arpl
fcomps
loopne
fbstp
mov
mov
lcall
adc
sahf
roll
loopne
xlat
pop
mov
mov
jge
push
imul
jmp
fwait
out
clc
movsb
mov
mov
add
push
mov
sar
mov
data16
cmp
jecxz
mov
mov
inc
es
push
and
loopne
xchg
sub
test
scas
or
mov
adc
and
push
sub
cmc
sub
arpl
and
sbbb
inc
adc
and
mov
rol
add
dec
adc
lahf
sbb
sub
inc
lods
dec
jl
pop
pushf
pushf
push
adc
push
push
js
push
imulb
ja
adc
movsl
push
andb
int
and
addl
and
cmpsl
das
xchg
cmp
cmp
bound
loope
push
pop
sbb
or
clc
es
jbe
lds
dec
out
add
dec
cmp
push
fwait
repz
or
mov
inc
mov
add
xor
fmuls
dec
xlat
std
ret
push
push
lret
daa
addr16
push
loopne
shll
push
in
cmp
lds
or
xlat
test
icebp
sub
movsl
fs
sub
cmp
dec
imul
sub
dec
sub
mov
mov
jg
inc
add
xor
adc
and
je
push
xchg
mov
push
add
int
aaa
int3
push
sti
iret
data16
xchg
xor
jge
xorb
ss
jae
inc
dec
and
mov
add
dec
adc
fs
js
sbb
pop
dec
sbb
sub
cmpsb
cli
jl
mov
test
xor
xchg
and
arpl
push
cmp
movsl
and
int
add
mov
fwait
push
js
cmp
cmpl
xor
add
xor
sub
fisttps
divl
ljmp
test
push
ss
in
jae
std
adc
adc
data16
push
mov
extrq
adc
push
loop
xchg
pop
lret
and
mov
inc
stos
xchg
dec
fiaddl
test
add
sbb
or
add
das
and
fadds
inc
loopne
dec
idiv
jbe
or
mov
daa
mov
adc
mov
mov
in
mov
jp
ret
mov
aas
dec
enter
in
push
cmp
ljmp
cld
cmpsl
popf
xor
push
enter
sbb
adc
fidivrl
mov
sbb
fabs
daa
shrb
mov
loop
add
sbb
scas
mov
shlb
stos
add
movsl
imul
xchg
dec
mov
daa
and
daa
cmp
inc
mov
loope
and
pop
push
inc
popf
cmp
in
cs
popa
cli
sub
out
movsb
imull
out
cli
pop
pushl
pop
imul
rol
pop
stos
inc
xchg
sbb
cmp
jno
pop
push
add
jmp
imul
cmc
ret
xchg
loope
jo
rorl
jecxz
xor
mov
aad
div
outsb
adc
sub
cli
gs
xchg
xchg
jbe
mov
and
or
rcr
lret
dec
nop
pop
aad
ljmp
fdiv
xchg
mov
lods
mov
popa
out
adc
jecxz
jp
enter
movsb
loop
idiv
mov
adc
pop
inc
mov
mov
push
pop
mov
shrl
test
mov
mov
pop
jg
aaa
imul
shlb
fwait
std
sbb
lock
jle
sub
test
mov
sub
lea
arpl
adc
push
or
and
imul
xchg
lds
ss
ret
outsl
and
jno
sub
adc
fistpl
fstpt
mov
push
and
xchg
inc
fcmovbe
jg
cmpsl
inc
or
mov
cs
and
clc
fstps
xor
ss
add
stc
pop
jl
or
and
inc
dec
testb
int3
xchg
cwtl
cld
aas
in
xor
pop
inc
mov
int3
mov
inc
daa
lcall
mov
mov
test
mov
xchg
xchg
outsb
inc
stos
add
lods
fiaddl
popf
sbb
mov
call
mov
aaa
ss
js
imul
out
clc
xchg
adc
ss
jp
push
inc
cmc
ficoms
ret
lret
add
push
mov
jo
std
mov
lods
and
mov
push
dec
adc
inc
and
sub
test
lcall
cltd
inc
inc
lcall
mov
mov
pop
xchg
enter
pop
push
fst
dec
sbb
lcall
ficoms
ljmp
sub
repz
push
loope
xchg
push
cmp
mov
dec
and
mov
cmpl
jb
test
sub
cwtl
sahf
pop
stc
push
lret
sub
fcompl
in
mov
xor
stc
push
push
cli
aad
sahf
cmp
pop
mov
xor
sub
push
out
push
or
stos
or
xchg
pop
sbbb
repnz
out
jae
inc
cmpsl
push
into
adc
or
xchg
jo
adc
or
mov
aaa
int
jne
cmpsb
pop
lods
loop
mov
imul
sti
das
les
shl
test
and
cmp
fmull
mov
stos
push
sbb
jmp
in
xor
jno
cwtl
mov
shr
xchg
add
enter
leave
arpl
inc
aas
test
int
gs
daa
rcl
jbe
sub
push
arpl
and
mov
dec
jns
and
ljmp
xchg
and
dec
mov
jno
int3
pop
into
fisubl
lock
mov
pop
or
aad
test
push
popa
test
imul
clc
outsb
xchg
in
lock
jno,pt
lock
jl
pop
js
jle
xchg
mov
dec
popl
shlb
mov
je
push
pusha
jnp
jne
mov
pop
sub
and
or
imul
pop
cmpsb
xchg
push
or
add
and
xorl
mov
sbb
clc
rcll
leave
sub
cmp
xchg
inc
je
negl
or
cli
jge
lock
pop
xor
fs
cmp
pop
movsl
shrb
cs
xor
xor
add
mov
mov
pushf
lret
shll
push
pop
mov
jmp
xor
pop
daa
cmp
cmp
lea
adc
mov
push
call
sub
insb
pop
sub
or
frstor
mov
cmp
nop
aaa
cmpsl
loope
je
push
or
mov
in
add
jo
jb
add
lds
xor
mov
mov
mov
mov
mov
sub
mov
aad
pop
int
jae
pop
pop
out
adc
mov
pop
push
fwait
lods
shrl
jnp
addr16
sub
push
add
andb
int
or
sub
test
inc
add
setns
xchg
jo
dec
lods
xchg
add
out
movsb
xchg
lods
pop
xchg
sarl
sbb
lret
mov
subb
orw
sbb
xchg
or
loopne
pop
subb
fbstp
orl
xchg
dec
mov
call
cwtl
clc
lcall
and
test
cmpsb
cmpsb
nop
mov
ss
fildll
cltd
mov
pop
add
cld
sub
imul
and
testl
add
outsb
imul
mov
mov
test
sub
xchg
clc
mov
xorb
mov
pushf
insl
cmpsl
add
and
das
cmp
lea
arpl
into
jo
rolb
mov
iret
jnp
sub
mov
ss
pop
mov
mov
adc
xchg
mov
jnp
lods
es
jno
cld
mov
xor
jo
loopne
jnp
lret
popa
in
mov
push
mov
and
jb
test
sbb
hlt
iret
sbb
int
loop
xchg
ja
lea
mov
mov
shlb
popf
loope
iret
push
cmp
cmp
loope
cli
insl
aad
test
daa
iret
sub
push
sbb
mov
push
xchg
push
push
inc
xchg
stos
mov
lods
insb
xchg
data16
loop
cwtl
push
xor
loop
std
jp
mov
sub
js
mov
dec
jb
jb
leave
dec
add
sarb
lcall
inc
cmc
sbb
iret
lret
insl
aaa
push
fisubrl
jne
loope
jmp
push
pop
cmpsb
mov
lea
mov
adc
cli
cwtl
lds
ficompl
test
lods
sub
daa
sbbb
adc
inc
add
xor
lods
stc
mov
jnp,pn
or
dec
mov
imul
jmp
icebp
push
inc
mov
mov
cmp
icebp
fisttps
sbb
std
push
jnp
jle
and
cmp
fsubl
sbb
decl
daa
fimull
inc
test
test
xor
lds
fists
mov
inc
jnp
adc
lods
testl
scas
mov
pop
js
jmp
lds
out
bound
fsubp
movsb
mov
dec
testl
pop
dec
int
call
add
aad
daa
pop
and
les
in
aad
out
mov
out
mov
push
cltd
cmpb
jmp
rcrb
movsb
clc
mov
mov
jl
into
dec
sbb
sub
jo
lods
add
adcl
ret
scas
pop
aad
jp
call
daa
sub
cld
jl
adc
test
bound
es
add
jg
xor
sub
repz
std
gs
cmp
fs
adc
adc
mov
xlat
nop
xchg
movsl
sbb
add
outsb
xor
loop
stos
pop
testb
leave
xlat
add
outsl
jecxz,pt
add
sub
mov
cmp
mul
nop
cld
cmp
xchg
adc
lods
inc
sarl
add
repnz
rorl
inc
aam
mov
in
push
in
ret
jg
pop
lret
sbb
jne
pop
sub
sbb
xchg
negl
sub
cmpsb
xor
push
dec
inc
fs
clc
mov
out
adc
xor
dec
push
pop
pop
cli
rcr
mov
sub
or
aas
inc
sbb
and
pushf
jg
mov
pop
adc
jmp
pop
rcll
icebp
and
adc
into
stos
push
fwait
stos
mov
fmuls
sub
cltd
ret
sub
jne
repnz
out
dec
imul
pushf
dec
xchg
fstl
sub
mov
lret
sbb
leave
mov
pop
rorb
push
bound
push
sub
icebp
push
push
fstl
aad
push
jb
push
leave
cmp
addl
cmpsb
mov
and
cmp
sub
iret
stos
loop
mov
inc
movsl
insb
sub
cmp
mov
shll
mov
cmp
pushl
dec
mov
movsl
xchg
mov
dec
dec
scas
xchg
notb
imul
lods
movsb
imul
in
push
push
rorl
pusha
or
jmp
test
xchg
test
cmp
lock
add
push
mov
xor
adcl
and
je
cld
imul
outsl
sarb
cmp
shl
mov
jns
pop
push
test
inc
xchg
sub
flds
or
lahf
xchg
push
repnz
imul
xchg
aam
jmp
sbb
xorl
idivl
mov
fsubs
iret
out
jge
jns
into
push
addr16
inc
inc
enter
mov
iret
mov
jle
pop
and
mov
mov
and
sub
fdivl
movsb
and
ja
imul
movsl
leave
ret
das
clc
lds
mov
call
mov
xor
xchg
arpl
pop
or
jge
fadd
aam
adc
and
mov
bnd
dec
mov
sub
fstpl
mov
dec
jo
pop
add
popa
call
stos
pop
lret
je
sub
xchg
dec
sub
jbe
mov
sbb
xchg
fnstsw
sub
dec
cmp
dec
js
shll
pop
imul
dec
pusha
inc
xchg
pmulhw
xchg
dec
inc
bound
cs
sbb
stc
movsl
insb
pop
mov
movsb
mov
cmpsl
add
pop
sub
lods
and
outsl
push
xor
mov
add
cmpsl
xor
dec
push
or
add
cld
fs
test
movsl
xchg
xchg
jmp
clc
movsb
pop
add
loop
sbb
cmp
mov
in
or
imul
sbb
inc
pusha
mov
sub
aaa
scas
hlt
test
cmp
mov
scas
push
add
loope
dec
fldcw
das
xchg
cmp
iret
mov
add
cmp
cld
cs
or
xchg
cmpsb
adc
add
xor
mov
push
fists
inc
shl
pop
int3
into
test
adc
xchg
xor
ret
data16
imul
mov
arpl
push
fsubrl
adc
jbe
adc
adc
mov
push
pop
divb
jb
cli
clc
stc
jnp
cmc
rcrb
outsl
je
inc
adc
and
pop
or
cltd
insb
or
xor
loopne
sbb
mov
lea
std
sbb
jge
push
and
mov
push
das
add
inc
fsubr
pop
xchg
xor
xchg
imul
pop
fcom
repz
ljmp
out
int3
mov
xchg
pusha
je
arpl
test
adc
pop
fwait
or
addb
movsb
inc
pop
dec
imulb
cli
xchg
sub
insl
cmp
or
xchg
xchg
in
cmpsb
aad
adc
out
push
or
push
add
mov
imul
loop
test
dec
insb
fcoms
cmp
push
neg
xchg
aaa
pushf
lea
movsl
xlat
xor
lods
scas
cmp
dec
mov
loop
stc
push
xchg
cmp
sub
push
cwtl
movl
mov
icebp
pop
xchg
push
dec
pusha
mov
inc
cwtl
js
cs
sub
adc
jo
adc
pushf
jp
adc
push
push
out
sub
push
xchg
dec
subb
fistps
into
hlt
mov
adc
rorl
xchg
xchg
add
mov
out
sbb
or
sub
xchg
xchg
dec
and
push
stos
push
sbb
mov
cmc
int
xor
jnp
lds
outsl
cmc
lods
mov
adc
sbb
cwtl
lds
icebp
mov
cwtl
lods
add
test
push
jne
xor
xor
cmp
aam
ljmp
inc
adc
add
hlt
daa
je
jbe
add
dec
add
xchg
xchg
cmp
fwait
lods
loop
loope
cmpsb
inc
jne
jmp
inc
mov
mov
jnp
or
and
mov
andb
out
cld
cld
inc
dec
push
cmp
js
jecxz
mov
fldenv
sbb
add
jb
mov
jmp
xchg
les
inc
inc
mov
or
xchg
scas
or
mov
dec
push
cmp
mov
out
push
cs
sbb
jnp
push
mov
cmc
fisubrl
out
push
sbb
scas
xchg
and
into
jp
mov
leave
ret
enter
jge
xor
sbb
repz
adc
nop
fidivl
mov
xorps
lcall
adc
cmpsl
in
test
cmp
inc
push
xchg
sub
ret
clc
test
xchg
mov
sti
inc
pusha
push
cmp
orl
movsl
xor
ret
push
sahf
ds
add
int3
jns
repz
out
adc
hlt
mov
scas
add
mov
cld
mov
sbb
pop
pop
sbb
stc
jno
cmpsl
mov
sarb
pop
mov
fidivrl
mov
es
cli
sub
inc
add
cwtl
mov
nop
lods
aaa
pop
xchg
dec
mov
lret
pop
bound
scas
cld
iret
sub
adc
jmp
dec
push
cli
iret
jb
jb
sub
xor
aam
repnz
lds
fdivl
lret
pop
xchg
daa
mov
leave
aaa
mov
cmpsl
jp
rclb
loop
lahf
inc
int3
in
xchg
scas
pop
pop
push
push
mov
std
packuswb
xchg
add
and
sahf
imul
les
fldl
adc
inc
and
sbb
in
stos
jno
pop
ja
dec
shlb
mov
lcall
lods
sbb
add
dec
fstpt
xor
fstpt
rorb
or
or
and
sub
inc
mov
rcrb
sub
or
xchg
xor
popl
test
jns
dec
and
jmp
mov
cmp
add
and
push
ljmp
push
jecxz
mov
and
xchg
jno
loop
fidivrl
jecxz
lcall
ror
pop
repz
mov
jp
mov
lahf
xlat
and
loop
lock
sbb
adc
popa
inc
and
js
test
loopne
repz
push
inc
fstps
loop
jge
jnp
lds
mov
push
adc
stc
popf
adc
icebp
push
jp
repnz
lods
pop
or
int
or
lock
gs
jg
push
test
mov
mov
out
jp
call
loop
in
movsb
fisttps
mov
mov
fadds
lea
mov
cld
fldcw
adc
xchg
push
fdivs
fs
dec
pop
shlb
in
loop
dec
imul
xor
cltd
mov
inc
stos
test
mov
js
xlat
cmc
jo
jecxz
in
jmp
mov
sbb
shl
mov
rorb
out
adc
jmp
mov
inc
fwait
loopne
dec
cmpb
adc
fcom
xor
mov
test
rorl
cmp
test
mov
dec
dec
push
fwait
xchg
cmp
fdivl
jge
xor
fs
jp
imul
jns
cmp
mov
push
insb
inc
pop
ss
out
or
nop
adc
cld
mov
pop
xor
imul
mov
mov
loopne
fldl
mov
test
inc
aad
fistl
pop
dec
sbbl
dec
jnp
cmp
xlat
fwait
pop
mov
xabort
pop
lret
shl
lock
movsb
jecxz
push
mov
xchg
pusha
and
xchg
or
pop
adc
cmc
mov
or
stos
scas
or
mov
pop
sbb
xchg
sub
clc
inc
sub
inc
xor
and
and
mov
pusha
bound
icebp
push
aad
fmull
sti
mov
cltd
stc
pop
sub
jl
mov
xchg
cmc
cmp
nop
push
mov
incb
dec
mov
pusha
lock
push
bound
adc
fidivs
push
pop
mov
loop
in
lret
inc
xor
cmp
test
imul
sbbl
loope
xor
jmp
or
ja
in
jp
imul
mov
mov
daa
jp
pop
and
xchg
es
test
push
add
xchg
in
cmp
sbb
sub
aad
fcomi
loope
sub
xor
mov
pop
jl
mov
aaa
mov
pop
mov
loop
dec
jae
outsb
mov
sub
stc
movsl
scas
cmp
mov
out
int3
mov
lea
push
dec
and
mov
shll
jecxz
dec
sbb
mov
xor
movsl
imul
mov
daa
sbb
jl
or
pop
testl
sbb
fdivrl
mov
and
sub
rorb
inc
xor
adc
mov
mov
fwait
jge
jno
subl
jno
lds
ja
inc
out
mov
jmp
mov
lret
out
xchg
mull
imul
jl
gs
push
cmc
cld
cwtl
mov
ret
ds
jp
mov
pop
xchg
sub
mov
jne
or
pop
test
notl
ret
cmpsb
jo
jmp
jnp
fldt
dec
push
jle
fsubr
jecxz
scas
ret
jno
or
pushf
jbe
cmpsb
push
push
into
fsts
jbe
std
stos
adc
xor
lahf
mulb
add
stos
out
xchg
sbb
pop
jnp
push
movsl
lret
addb
aaa
into
mov
es
inc
cmp
in
repz
push
inc
mov
add
dec
sbb
dec
pop
filds
push
sub
das
dec
bound
pop
mov
xor
add
cmp
std
dec
into
mov
cmpsl
xor
dec
mov
mov
cli
push
rcl
aaa
ror
test
jno
mov
movsl
pop
cwtl
addr16
adc
int
clc
dec
nop
pushf
jno
add
cmc
into
fsub
aam
xchg
dec
dec
data16
bound
add
cli
inc
in
xorb
xor
xchg
mov
push
pop
and
mov
pop
mov
push
adc
and
xchg
outsb
enter
ret
cmpsl
cltd
pop
cmpps
test
popa
rcrb
add
lcall
jb
dec
lahf
imul
mov
mov
rol
stos
loop
cmp
mov
sub
cmp
or
adc
rorl
jo
icebp
sub
aad
movsb
fisttpll
sbb
adc
jp
ret
xchg
mov
sub
fistps
scas
aad
mov
into
mov
test
jo
mov
ret
add
cs
nop
push
fistpl
hlt
or
mov
and
adc
in
jecxz
shlb
wrmsr
mov
and
cmp
daa
or
sub
pop
jg,pt
cld
and
addl
out
daa
hlt
pop
enter
and
cli
popf
sti
ret
push
dec
fimull
push
inc
test
fidivrl
adc
loop
sub
int
in
fwait
mov
and
arpl
stos
inc
jns
call
aaa
jp
sbb
push
movsb
icebp
jmp
testl
cmp
pop
add
aad
jns
jno
xor
mov
daa
mov
subb
and
cmpsl
push
xor
nop
loope
lret
mov
pop
mov
cmpsl
outsb
sahf
loop,pn
cmp
call
iret
mov
fcoml
push
stos
lds
mov
sbb
clc
dec
push
test
jl
or
stos
je
or
or
int3
in
loope
or
sbb
or
ja
sub
jmp
and
jae
popa
ljmp
cltd
mov
xor
cmc
ja
adc
test
xor
imul
xchg
lea
push
push
fimull
dec
mov
dec
mov
cmp
dec
dec
movaps
ja
mov
rclb
add
jp
sub
jle
push
iret
xchg
jno
lods
inc
fcoml
mov
nop
shrb
pop
or
xor
adcl
movsb
or
roll
and
out
cmpb
popf
dec
insb
mov
fcompl
sub
xorb
and
adc
mov
jle
mov
mov
add
jns
mov
mov
push
stos
call
insb
xchg
imul
push
int
aam
pop
jbe
dec
push
push
push
add
sbb
iret
mov
int3
fldl
adc
adc
mov
jns
and
shl
mov
sbb
jecxz
pop
dec
pushf
jne
aad
pop
mov
dec
mov
sub
push
inc
test
sub
lret
jecxz
faddl
lock
ljmp
mov
mov
pop
adc
cltd
jge
fwait
aam
je
rorl
outsb
push
sbb
fistl
rol
scas
ljmp
clc
ret
and
popf
add
xchg
mov
add
adc
test
sub
nop
hlt
jecxz
push
jecxz
hlt
scas
push
in
test
push
xchg
jns
cmpsb
cmp
push
dec
xchg
rolb
lahf
jg
std
js
imul
xor
lahf
insl
imul
popf
pop
cwtl
jge
and
shrl
sbb
ret
or
js
cmp
add
or
mov
pop
cmpsl
xor
and
xlat
mov
jo
add
repnz
in
ja
rclb
inc
gs
push
push
mov
sub
incl
mov
shlb
jecxz
in
int3
pop
sbb
lods
nop
sub
jg
adc
leave
in
push
xor
mov
xchg
push
push
es
or
aaa
clc
pop
mov
pop
dec
arpl
xchg
ja
rorb
xchg
mov
pop
mov
outsb
jns
pop
pop
cmp
out
or
cmp
lods
sti
jmp
xchg
jbe
mov
and
cld
or
cmp
xor
lret
mov
and
mov
jge
scas
ds
fnsave
insl
mov
fwait
mov
sahf
in
push
xchg
cltd
mov
inc
in
push
or
adc
lock
push
cmpsl
xor
idiv
into
cmp
pop
lds
mov
ret
test
test
inc
fbld
pop
lret
test
ret
push
jp
cmpsb
dec
dec
aam
jmp
sbb
pushf
pop
mov
roll
adc
cli
sbb
in
sbb
movsl
lret
inc
in
adc
mov
xchg
stos
je
sahf
std
mov
and
push
cmpsb
das
insb
in
mov
shll
add
inc
cmp
outsl
jecxz
and
lods
loop
nop
out
cmp
aam
repz
imul
pop
jno
in
sub
mov
xchg
mov
rcrl
jmp
add
lret
mov
inc
sbbl
imul
or
shl
adc
mov
fistpll
sub
mov
xchg
das
cs
jne
movsb
mov
aaa
ret
jae
mov
sbb
pusha
pop
inc
ja
sbb
js
jno
cmp
gs
cmp
add
cwtl
fisubs
movsl
out
pop
inc
es
sbb
sbb
fisttpl
and
mov
bound
adc
fwait
dec
js
lret
sub
dec
mov
mov
inc
cmpsb
jno
mov
dec
push
movsl
addr16
jnp
ljmp
call
jmp
adc
hlt
lret
mov
int3
xchg
fcmove
cmp
iret
scas
xchg
in
imul
shl
outsb
lods
jo
mov
imul
xor
xor
mov
ja
mov
leave
pop
dec
lds
ret
cmpsb
push
mov
cwtl
xor
into
jne
or
inc
nop
stos
jecxz
inc
cmp
dec
shll
inc
or
rcll
xor
mov
pop
pop
sbb
mov
outsl
or
cmp
adc
pop
lret
push
jno
lahf
mov
shrb
xchg
test
lods
enter
or
imul
adc
popf
cmp
or
pop
xchg
dec
mov
outsb
sahf
jecxz
and
cwtl
ret
pop
xchg
daa
cmpsl
push
fs
scas
mov
push
daa
ja
inc
cmp
sbb
aam
mov
mov
lea
dec
mov
adc
cmc
inc
fisttps
je
lcall
push
jns
sub
sub
ret
jns
hlt
add
xchg
popa
adc
movsl
flds
push
jb
or
aaa
cmp
cmp
fs
scas
fidivl
rol
into
and
stos
push
xor
inc
pop
mov
daa
sub
out
pop
nop
popa
js
sbbl
je
in
fucomip
pop
daa
daa
sub
stos
mov
add
adc
sbbl
mov
imul
negl
scas
cmpsb
jns
int
ret
jns
outsb
push
adc
add
xchg
sbb
adc
scas
push
hlt
aad
push
xchg
jnp
add
in
hlt
and
test
loop
pop
std
rclb
fwait
push
imul
and
inc
xchg
push
adc
push
ja
movsb
mov
mov
push
jns
cmp
mov
scas
bswap
mov
mov
pushf
mov
mov
call
fldln2
inc
or
pop
pushl
lea
pop
sbb
clc
cvtpi2ps
cld
mov
xor
inc
rclb
popf
jae
cld
inc
and
pushf
dec
push
cli
mov
clc
xor
push
push
pmaxub
in
outsl
repnz
xor
mov
lcall
push
pop
pushf
in
pop
add
add
xlat
sbb
jmp
xchg
ret
mov
mov
out
movsl
inc
cwtl
or
pop
out
nop
stos
repnz
jle
shr
subl
int3
mov
test
lcall
mov
cli
adc
xor
cli
ficompl
mov
ficomps
pop
insl
int
in
ljmp
cmpsl
xor
mov
dec
ss
subb
les
ret
out
push
das
add
mov
adc
jl
xchg
sub
push
hlt
stos
or
push
mov
add
rcrl
loopne
mov
adc
aam
and
cmp
mov
cmpsb
push
sbb
popa
pushf
in
push
lock
mov
mov
shlb
shll
mov
sbbl
or
es
insl
xchg
adc
mov
inc
lahf
loop
lea
ss
dec
shlb
js
mov
sbb
cmp
and
shlb
cs
xchg
loopne
lret
mov
inc
push
lahf
xchg
jo
dec
enter
jns
cmp
insb
xchg
sbb
ds
xchg
dec
pop
out
pop
or
sbb
aaa
popa
fistps
lcall
add
mov
cltd
adc
xchg
cwtl
mov
fisttpll
ficoml
les
das
adc
out
pop
je
pop
pop
xchg
inc
sbb
rcrb
cmp
xchg
mov
movsl
push
pop
inc
lgs
or
fcomp
fs
and
pop
mov
dec
insl
and
xchg
xchg
jbe
cmp
adc
aam
loopne
out
mov
fnsave
cmp
mov
inc
jmp
cmp
inc
pxor
mov
stc
rcrb
xchg
sub
subb
and
movsl
popa
repz
rcr
mov
stc
xor
mov
hlt
mov
sbb
fidivrs
mov
xor
mov
sarb
add
std
les
jno
inc
arpl
sbb
xchg
xchg
push
push
fwait
std
adc
shrb
mov
jbe
scas
scas
out
loope
mov
stos
lcall
or
lcall
outsl
jge
jp
das
fcoms
sbb
mov
sub
sbb
add
dec
insb
shll
xchg
mov
cmp
pop
negl
add
xchg
cmp
xor
sub
and
lock
pop
xchg
inc
fcoml
adcb
jl
rorb
mov
popa
xlat
insl
sbb
or
pop
scas
dec
push
pop
adc
pop
push
cmp
stos
inc
push
mov
pop
rorb
out
fwait
int3
aas
insl
mov
pop
js
je
fs
cmp
mov
das
dec
xchg
inc
clc
ja
xchg
mov
mov
pop
orl
hlt
data16
es
mov
mov
iret
repnz
jp
mov
mov
insb
ds
in
aad
pop
lret
xchg
pusha
pop
bound
push
enter
sarb
adc
mov
jo
fs
add
andnps
or
mov
insl
xchg
test
push
inc
lods
add
sarl
shl
aas
lret
data16
hlt
repnz
mov
mov
jnp
movsb
push
and
stc
testl
mov
stc
addr16
in
aam
jl
cmpsl
into
jle
xchg
add
dec
xchg
jbe
add
add
cld
popf
mov
adc
cmp
clc
and
or
test
cmp
pop
imul
fimull
xchg
int3
mov
mov
cld
and
pop
pop
sbb
inc
xor
jns
cmpl
int
inc
jo
lcall
sub
imul
aas
sub
pop
sbb
iret
pop
dec
mov
bound
js
fcmovnb
inc
sub
and
insb
cltd
les
popa
mov
pop
fldt
mov
ds
ja
lret
gs
or
ds
jl
out
jo
mov
in
js
loopne
lret
xlat
xor
sub
je
cmp
mov
cs
lods
shll
orl
dec
mov
mov
call
les
lods
sub
push
clc
mov
test
test
iret
add
mov
cmp
mov
cmc
jmp
cmc
out
push
mov
jmp
pop
pop
into
mov
enter
jecxz
push
shlb
xor
inc
pop
cmpsl
xor
je
mov
xchg
mov
bound
outsb
xor
rclb
mov
adc
jp
cmc
data16
xchg
loopne
jle
mov
repz
std
jle
fwait
jge
push
dec
cwtl
les
fadd
lret
sti
movsl
sbb
jnp
xor
mov
lea
xor
dec
lods
mov
pop
mov
jmp
mov
insl
sbb
cwtl
mov
fistl
push
ja
adc
sbb
mov
jo
mov
js
in
fwait
jae
or
fs
aam
lcall
ds
enter
xchg
xor
xchg
loope
mov
mov
test
lcall
cmc
enter
jecxz
int
cld
mov
push
push
int
sub
inc
jb
mov
std
pushf
jge
mov
data16
in
xchg
push
dec
add
js
mov
cwtl
sub
jge
stos
push
cmp
dec
mov
out
insl
sub
test
das
dec
jb
ret
fadd
lahf
mov
repz
std
loop
leave
gs
into
dec
dec
pop
jae
xor
sub
fstl
push
push
bound
ja
mov
dec
loop
pop
dec
jo
loope,pn
push
idivl
xor
jae
fcoml
cmp
add
sbb
popa
add
mov
push
dec
jmp
lea
fsubp
je
sub
pushf
jns
push
cmp
out
cwtl
cli
aaa
inc
add
popf
outsb
mov
and
push
loop
je
add
sbb
inc
pop
shlb
sbb
gs
adc
push
mov
xor
mov
and
fcomi
xchg
inc
std
xorb
or
adc
jns
out
push
cltd
sarl
pop
adc
adc
stos
shll
adc
imul
jl
mov
es
adc
int3
cmp
insb
popf
sahf
mov
pop
adc
int3
imul
dec
cmp
xchg
dec
testl
test
push
and
in
call
lock
sbb
jnp
arpl
cmovns
inc
in
cmc
mov
inc
sbbb
jae
jg
push
cmc
pop
repz
jp
sbb
xchg
mov
pop
lret
cmpsl
outsl
ret
ret
xor
arpl
or
sahf
mov
cmp
pushf
cmp
outsl
je
test
jmp
mov
inc
add
mov
movsl
dec
icebp
movhps
inc
ret
lods
cmc
cmp
pop
cs
pop
addr16
jns
inc
fcompl
xor
xchg
mov
cli
ja
push
lret
in
mov
gs
lods
mov
inc
mov
fstpt
aas
or
clc
mov
push
pop
jecxz
loope
jecxz
test
push
imulb
push
dec
jnp
xchg
out
xchg
inc
xchg
xor
cmpb
iret
sub
idivl
cmp
mov
xchg
dec
mov
and
roll
outsb
imul
mov
jl
into
mov
lcall
loopne
nop
pushf
xor
mov
insb
and
rcl
addr16
out
pop
emms
xchg
pop
popf
mov
cmpsl
movsb
pop
les
andb
sarl
lds
mov
jle
je
add
bound
add
icebp
jecxz
cmp
jle
sub
cli
dec
data16
clc
adc
add
rcrb
xchg
out
inc
lcall
push
mov
mov
aas
cmp
xchg
repz
mov
es
sbb
fs
dec
mov
or
repnz
fwait
in
imul
push
or
mov
decb
jne
fistl
push
lahf
cltd
xlat
sbb
lret
pop
add
ret
dec
inc
dec
or
negb
out
push
pop
xchg
sub
ds
lahf
adc
cld
data16
stc
inc
lds
xchg
mov
xchg
sahf
dec
inc
mov
subb
add
into
jb
mov
div
cmpb
adc
lret
outsl
push
imul
sarl
add
ja
scas
hlt
leave
mov
cmc
outsb
xor
pusha
jecxz
or
dec
or
sahf
out
inc
mov
mov
lock
xchg
stc
mov
jae
dec
and
mov
mov
push
bound
nop
insb
in
in
jmp
lods
cmp
pop
mov
inc
cltd
cmpsl
into
addr16
popa
xchg
inc
mov
aaa
fsubrl
jl
sub
push
or
xchg
cli
xlat
cmpsl
dec
ja
call
push
push
sahf
test
js
aaa
lcall
cli
clc
test
push
sbb
outsb
sbb
loope
mov
in
dec
dec
ret
jbe
sub
lods
ss
or
jnp
call
ljmp
cmpsb
les
jge
cltd
jmp
clc
sbb
scas
inc
int
xchg
jle
pop
push
xchg
mov
out
ljmp
scas
inc
inc
sub
lcall
mov
adc
xor
std
jge
or
mov
sbb
lods
in
pop
popa
sbb
mov
inc
sub
xchg
dec
or
or
pop
daa
popa
mov
adc
test
add
cwtl
loopne
out
pop
add
lret
data16
stos
lock
imul
iret
mov
mov
adc
push
xor
icebp
mov
xchg
movsb
scas
lret
mov
mov
mov
push
int
sbb
lds
jmp
pop
xchg
repnz
jo
add
and
and
neg
mov
jo
pop
je
mov
cmp
mov
int
aad
jbe
jg
imul
mov
outsl
jbe
cwtl
loopne
imul
fstpt
dec
scas
aaa
cmp
add
arpl
pop
ds
inc
call
lret
lret
insb
pop
cmc
mov
hlt
inc
mov
or
push
lret
lret
mov
or
js
mov
adc
inc
sub
or
std
jle
xchg
cld
divl
cmp
inc
mov
mov
dec
test
cs
mov
xlat
test
adcb
xor
in
push
inc
fisttpl
sbb
mov
movl
insb
sarl
out
test
aaa
inc
sub
fwait
sub
pop
push
testb
cmp
cmp
imul
dec
mov
bound
popa
sub
neg
or
jo
mov
push
jl
mov
test
xor
movsl
mov
jp
mov
dec
cmp
pop
xchg
and
arpl
fmuls
mov
dec
scas
and
add
lret
push
pop
mov
cmp
ja
out
pop
inc
lock
xchg
mov
cmpsb
dec
repz
push
mov
mov
cld
adc
fstp
fnstenv
push
shll
inc
mov
inc
daa
adc
cmpsl
push
dec
fsubl
add
ljmp
test
fdivrs
xchg
fldt
pushf
or
test
mov
mov
jmp
or
inc
fwait
xor
jle
sbb
pop
xor
jmp
mov
push
xor
in
insb
add
xlat
inc
cmpsl
in
mov
fnstcw
xlat
and
loop
dec
xor
add
scas
inc
jne
shlb
rcr
mull
or
and
lcall
ucomiss
in
cmp
cmc
rclb
add
and
sbb
add
stos
loope
pop
shlb
shlb
cmp
mov
test
mov
scas
adc
jno
push
add
and
inc
daa
and
loope
xchg
mov
hlt
std
dec
jne
mov
add
adc
jle
insb
into
das
xor
imul
xchg
out
inc
les
aad
mov
sub
imul
jge
sti
cld
jno
fsubrs
fldl
mov
ret
pop
ret
nop
sbb
mov
das
dec
out
inc
xor
dec
and
cmpsl
xlat
jge
mov
lds
arpl
push
sub
pop
jno
fsubrp
ret
mov
pop
outsl
add
xchg
test
call
sbb
cmp
dec
insb
rorb
xor
dec
xlat
notb
dec
or
pop
mov
inc
test
lcall
mov
sahf
sub
outsb
and
jno
xchg
cmp
push
mov
add
push
sbb
js
pop
dec
cltd
push
rorb
jl
mov
add
pusha
divb
repnz
adc
mov
xchg
push
mov
movsb
dec
scas
cmp
push
push
and
mov
adc
sub
repz
cmp
mov
jmp
negb
adc
mov
lcall
out
jg
push
sbb
push
mov
aas
lahf
sub
out
sahf
outsb
mov
addb
lahf
mov
test
adc
mov
jae
fs
xchg
neg
scas
int3
es
cmpsb
cwtl
aaa
lds
mov
data16
or
xchg
lods
jb
and
jg
stc
stos
inc
aas
or
movsb
jno
cmp
sub
jne
mov
aad
enter
add
in
cmc
mov
ret
pop
xor
xchg
testl
fnstenv
inc
stc
jg
xor
in
cmp
mov
dec
stos
inc
adc
cltd
dec
aaa
xor
xchg
arpl
mov
sub
mov
stc
jae
dec
lahf
and
shll
hlt
inc
fidivrl
shl
jb
xchg
dec
ret
inc
push
pop
je
fisubrs
out
shl
lret
push
mov
mov
je
mov
or
outsb
lock
les
inc
dec
mov
push
movsl
faddl
push
add
popa
out
scas
pop
int
dec
bound
and
stos
mov
shrb
push
xchg
cmp
mov
xor
sbb
dec
dec
mov
add
xor
pop
fstpl
into
mov
pop
aas
flds
insl
or
mov
fidivrl
add
xor
mov
outsb
das
cwtl
or
xchg
out
cmp
scas
fs
loope
je
mov
nop
or
mov
icebp
cmovno
mov
jecxz
imul
shl
push
iret
or
mov
dec
cmpsb
movsb
cmp
or
icebp
hlt
mov
mov
ret
mov
xchg
ret
pop
pop
and
sbb
sahf
jp
lcall
cmp
mov
cmc
ljmp
push
xor
inc
cld
int
sub
mov
mov
imul
push
sub
repz
or
adc
or
mov
les
sarl
dec
icebp
bound
ljmp
push
loopne
mov
shl
jns
sub
flds
loope
das
ret
test
sahf
mov
mov
movsl
ja
mov
ja
push
lea
pop
outsb
sub
jl
scas
pop
mov
rclb
test
xor
mov
cmp
fldenv
sub
lret
sbb
dec
inc
rol
or
or
mov
jb,pt
push
push
mov
out
lds
and
inc
xchg
aaa
inc
jb
cli
or
into
and
js
test
cwtl
loopne
mov
rolb
mov
jle
push
sbb
cmpsl
fwait
jmp
stos
fsubl
dec
insb
inc
mov
jge
and
in
test
shlb
sbb
xchg
xor
mov
int
and
in
les
pop
iret
jno
xchg
push
rcr
jecxz
pop
mov
inc
pop
mov
mov
or
jl
and
ja
daa
les
sbbl
int
inc
mov
fwait
test
in
cmp
adc
jo
cmp
mov
push
je
scas
xor
xor
cmp
loope
mov
dec
daa
mov
mov
outsl
xchg
push
fildll
pop
mov
sbb
inc
mov
out
inc
lret
shlb
arpl
adc
push
sub
inc
adc
push
xchg
xor
push
or
pop
sub
and
xchg
shll
sbbl
in
xchg
iret
fsts
mov
cmpsb
imul
sbb
pop
adc
xchg
push
fsubrp
cmp
lcall
enter
call
std
mov
push
aam
dec
jl
cmp
or
addr16
dec
popa
outsl
pop
test
or
cs
int
out
xor
push
mov
imul
mov
cltd
jo
adc
fisttpll
jne
mov
or
push
mov
jo
fstps
dec
mov
mov
leave
or
cmc
aam
dec
fisttps
pop
xchg
aam
sbb
stos
movsl
mov
sub
mov
test
push
iret
mov
mov
push
data16
sbb
ficomps
sbb
je
pop
push
jmp
je
fdivrs
mov
stos
xor
lret
cmp
mov
sarb
mov
icebp
scas
pop
pop
loopne
lea
rorl
cltd
lea
pop
insb
push
mov
pop
cmpsl
xchg
xchg
sbb
xchg
add
dec
and
in
push
lock
test
shll
mov
add
repnz
pop
xor
sub
sub
push
movsl
sarb
xchg
outsb
push
and
mov
adc
mov
xor
xchg
xchg
movsl
mov
lock
fs
pop
cmp
cmp
lahf
dec
pop
and
push
sbb
in
mov
int
movsl
jns
jg
fldl2t
xlat
cmp
mov
cmp
icebp
jae
fdivs
mov
pop
jo
mov
cmp
pop
jmp
mov
pop
adc
mov
cmp
xchg
mov
data16
scas
fidivrs
push
push
stc
push
mov
mov
stos
popf
rcrb
mov
sbb
cmp
add
jp
mov
pusha
sbb
dec
adc
jbe
xchg
add
or
neg
into
ljmp
mov
pop
xor
mov
pop
adc
mov
inc
jle
sti
fs
bound
fimull
mov
ret
test
jbe
rorl
push
enter
or
in
ljmp
dec
into
push
mov
adc
test
sbb
adc
push
dec
leave
imull
push
sub
cli
jg
or
mov
sti
mov
sub
sarb
or
das
pop
pop
gs
mov
jnp
mov
out
in
dec
call
test
in
mov
mov
push
sbb
push
inc
stos
dec
xor
clc
sarb
fimull
cmpsl
lock
pop
cmpsb
inc
fwait
ja
idivw
out
repnz
loope
std
mov
jbe
or
aas
pop
jnp
das
sarb
sahf
jns
mov
and
mov
das
leave
mov
push
jb
pop
fcmovbe
mov
xchg
fbld
loop
mov
stc
adc
scas
mov
jbe
aad
jne,pt
lea
mov
mov
mov
ror
shl
test
cmp
frstor
lods
imul
mov
xchg
movsb
scas
es
dec
adc
or
push
insb
jne
mov
xchg
jo
or
jo
add
loopne
icebp
jns
cwtl
cmp
orl
pop
push
mov
jl
push
mov
mov
push
hlt
inc
scas
dec
fnstsw
imulb
popa
mov
mov
mov
or
jns
int
push
push
lret
int
mov
sub
mov
sub
jge
dec
dec
push
cmpsl
fstp
or
bound
sub
pushf
and
aam
add
insb
sar
andb
add
mov
inc
pop
into
mov
movl
lcall
add
mov
iret
inc
test
rcr
or
sarb
stos
addr16
cwtl
jl
je
outsl
or
decb
pop
fildll
push
sub
mov
jb
js
sti
cmp
push
cwtl
ja
lock
in
divl
mov
jno
subb
push
jecxz
data16
and
pop
inc
popa
stos
imul
outsb
cwtl
mov
inc
into
mov
cmpsb
lods
fsts
and
and
adc
pop
adc
je
mov
mov
inc
xor
cmp
insl
mov
jb
pop
jp
addb
add
mov
and
and
pop
or
adc
adc
out
std
add
mov
rcrb
push
add
dec
test
dec
scas
xchg
lret
int
test
pop
jbe
pextrw
pop
ret
and
out
lds
jge
and
int3
shl
sbb
sbb
and
test
adc
imul
idivl
or
mov
push
sub
aas
fs
mov
je
dec
adc
movsl
aaa
mov
movsb
out
or
or
jno
data16
mov
pop
xchg
and
jnp
cmp
scas
mov
sub
inc
jge
test
mov
pop
cmp
mov
aad
in
fs
test
xchg
clc
in
mov
pop
pop
insb
adc
int3
fiadds
push
xor
jp
inc
mov
std
lret
sbb
mov
cmc
enter
pop
sub
imul
ljmp
pop
leave
or
daa
mov
testl
push
jle
mov
pushf
hlt
les
dec
or
cmp
outsl
cs
xor
mov
leave
shrl
lea
jns
adc
jl
sub
jae
rolb
sbb
stos
mov
inc
nop
pop
pop
movsb
sbb
inc
cli
add
sub
jae
int
lahf
sub
mov
sub
repz
push
add
sahf
stos
sub
fsubl
push
push
fdivrl
pop
das
mov
repz
lds
cmpsb
lock
sahf
pop
repz
push
inc
jle
jp
push
mov
or
mov
xor
outsb
in
lods
popa
cltd
xchg
or
sti
loope
cmp
rcrb
sbbl
push
inc
lahf
mov
imul
push
mov
push
lea
add
jecxz
arpl
lcall
dec
adc
test
call
dec
addl
inc
test
mov
outsb
mov
push
ds
add
inc
xchg
fisubl
pop
ret
js
mov
xchg
lods
out
call
loop
pop
xor
push
testl
adc
xor
les
leave
idivb
mov
fcompl
aad
loope
pop
mov
into
test
icebp
pop
out
or
pushl
loop
cmpsl
andb
aad
inc
rclb
insl
mov
and
jo
mov
ds
push
push
push
pop
adc
add
pusha
fwait
mov
aad
in
scas
test
dec
scas
mov
shlb
in
pusha
xor
inc
adc
loop
aad
add
xchg
dec
sub
in
mov
pop
lock
push
out
push
xchg
push
mov
sahf
ds
push
and
in
cmp
inc
mov
and
into
mov
mov
mov
in
setp
ljmp
out
sub
fdivrs
bound
aaa
negl
inc
shr
add
jecxz
lahf
out
add
mov
cmpsb
loope
sub
sarl
adc
jle
sbb
es
xchg
mov
sbb
jmp
js
jbe
jbe
enter
fsubs
push
adc
movsb
shll
jg
jmp
shrb
lcall
call
test
jns
and
mov
add
add
dec
popf
dec
mov
int
or
out
inc
sub
jge
mov
and
fcmovnu
aaa
push
stos
adc
repnz
lods
cmp
jl
outsl
es
cmp
mov
adc
mov
dec
fwait
out
xlat
test
mov
mov
test
sbb
shrb
pop
mov
cmp
mov
jne
push
xchg
fimull
out
les
add
das
push
sbb
mov
push
push
add
inc
dec
lcall
and
pushf
out
fs
aam
aam
push
mov
xchg
aam
sub
lock
movsl
addr16
mov
clc
jb
fcoms
decb
xor
ljmp
add
inc
sub
cli
adc
push
jbe
ret
leave
test
pop
enter
ljmp
sbb
mov
sub
jae
mov
icebp
pop
sbb
mov
arpl
xlat
sbb
jae
or
dec
cli
pop
sub
data16
fwait
push
fsubr
and
adc
sbb
mov
movsl
xlat
fcoms
inc
cmpsl
repz
fwait
adc
jb
and
mov
popf
out
dec
ret
pop
sti
and
dec
repnz
hlt
mov
stc
mov
cld
pop
xor
sub
push
inc
pop
out
lock
cmp
gs
push
enter
popa
sub
pop
push
or
xchg
or
push
adc
out
ss
mov
std
fdivrl
dec
andl
insb
pop
jmp
jo
dec
cli
sbb
mov
dec
rorl
shlb
fsts
sub
arpl
push
and
xchg
out
xchg
inc
fxch
dec
loope
dec
xlat
std
pop
loopne
cmp
mov
inc
insl
adc
xor
and
das
ud0
xor
push
loop
push
and
ret
sub
sahf
xor
pop
ss
pop
into
add
mov
push
add
mov
cmp
out
jns
sub
fisttpl
mov
aaa
sub
mov
jo
fwait
inc
push
aam
inc
jo
js
test
inc
popf
addps
js
or
pop
xor
imul
or
sbb
in
push
push
andl
cs
enter
inc
push
data16
sub
test
popf
dec
push
test
cmp
adc
out
addr16
je
and
out
cmpsb
das
fmul
adc
xor
push
shll
imul
mov
ret
inc
push
aad
fmull
or
repz
xor
shrl
push
push
jge
pop
jl
xchg
rcr
scas
sub
mov
test
xor
mov
xor
lret
mov
mov
xor
add
mov
or
loope
ret
xchg
cld
mov
pop
xchg
jns
adc
insl
and
dec
js
cld
call
push
push
jmp
dec
mov
push
or
fildll
leave
push
gs
sti
ds
leave
mov
xchg
push
stos
cmc
movsl
sti
aas
add
dec
or
push
scas
and
or
lret
mov
shrl
test
shll
notb
test
push
out
pusha
inc
cmp
or
shrb
test
or
mov
sbb
cwtl
mov
mov
dec
in
out
into
and
mov
scas
outsl
xchg
and
mov
testb
add
dec
mov
test
sbb
cmp
imul
mov
xchg
stos
jmp
fnstsw
icebp
inc
hlt
pop
sub
std
gs
or
pop
xor
adc
jnp
adc
push
push
scas
divb
sbb
ja
xchg
xchg
sub
sub
idivl
sbb
in
fbstp
addb
jns
push
out
sub
ret
inc
or
push
cmpsl
add
test
scas
mov
dec
lahf
imul
mov
jae
jg
pop
push
xchg
jb
mov
shrb
lret
imul
cmc
jnp
scas
jb
cmpsb
jnp
fists
cmp
sub
outsb
push
push
test
leave
mov
adc
daa
fmulp
popf
mov
xchg
icebp
mov
aam
jg
repz
out
lods
xchg
js
mov
in
jmp
xor
add
sbb
test
inc
and
scas
fidivrs
rcll
pop
adc
scas
cmp
test
sub
push
dec
mov
insb
out
mov
les
adc
cwtl
add
inc
or
or
mov
mov
xorl
fcom
push
jae
into
mov
aaa
imul
mov
repz
push
cmpsb
dec
push
hlt
idivl
sar
cmp
cld
push
xor
cs
xchg
push
addb
les
push
pop
aaa
jp
mov
cmp
or
leave
repnz
inc
aas
mov
and
lret
jns
mov
push
leave
sub
movsl
adcl
rorl
xor
sar
inc
test
sbb
lods
dec
push
pusha
daa
das
or
jge
pop
stc
xor
test
inc
jne
jo
add
test
test
cltd
sub
fnstenv
addr16
cpuid
xor
pop
inc
ljmp
inc
out
cmp
in
jb
test
mov
sahf
pop
cmp
mov
jmp
jns
popf
or
jo
pop
sub
jmp
lods
lcall
and
pop
mov
adc
push
fdivrs
xor
cmp
jno
notb
pop
mov
push
sub
sbb
jnp
xchg
js
repz
stos
dec
sub
jbe
or
lret
pop
jcxz
clc
fcomi
js
mov
mov
lea
adcb
xlat
dec
fistpl
add
and
fwait
cmpsb
xchg
pusha
inc
pop
lcall
clc
adc
jnp
xchg
pop
insb
push
in
inc
xor
inc
xchg
mov
mov
add
pusha
xor
mov
mov
cli
pop
das
jae
nop
dec
inc
dec
lds
cmp
jns
sysenter
addr16
add
mov
mov
push
mov
mov
sbb
lret
lret
nop
out
bswap
adc
sbb
and
mov
scas
mov
xchg
addb
notb
xor
call
push
or
leave
inc
in
test
js
sbb
out
push
outsl
xor
push
mov
mov
rcr
outsl
aaa
pusha
insl
jbe
imul
add
mov
jb
rcrl
test
stos
sahf
lds
mov
sbb
rcll
mov
rorl
adcb
mov
enter
nop
sbb
mov
addl
cs
stos
sbb
data16
mov
fsts
mov
rclb
push
pop
cmc
das
fwait
inc
data16
ficoms
mov
mov
xor
les
mov
bound
inc
pop
imul
movsb
fisttps
daa
cmp
jne
pop
sbb
add
xchg
dec
inc
cmpsb
iret
pop
inc
inc
jg
push
out
jne
imul
mov
arpl
into
and
mov
or
adc
xor
xchg
lock
cmp
cmp
stos
lret
aam
clc
lods
icebp
subl
aam
lret
arpl
outsl
test
aam
rcll
jb
mov
cmpsl
popf
push
and
pop
aas
xchg
and
push
dec
test
cmp
fdivl
ror
xchg
lret
cmp
jnp
and
mov
jb
outsl
push
mov
add
ss
stos
xor
lret
mov
sti
xchg
arpl
test
loop
pop
clc
jns
out
adc
rol
mov
iret
and
or
push
sbb
test
scas
fnsave
xor
sub
outsb
mov
mov
in
out
add
jp
and
pusha
inc
ljmp
or
sub
sbb
push
dec
pop
das
out
adc
mov
jl
push
loope
fsqrt
les
lcall
fnstcw
dec
xchg
adc
push
mov
imul
add
xchg
dec
lods
rolb
movsb
ret
cltd
cmp
dec
out
aad
xchg
or
inc
cmpsl
stos
imul
ret
xchg
pop
dec
cmpsl
or
inc
mov
icebp
dec
xorb
adc
in
xchg
sti
in
loope
inc
mov
xchg
das
jo
mov
loop
mov
aam
mov
or
int3
sbb
jbe
mov
and
mov
pusha
xchg
adc
adcb
hlt
gs
icebp
and
iret
pop
popa
shlb
aad
repnz
and
xor
cmp
inc
std
inc
lret
sbb
jo
out
repnz
or
jmp
ds
jno,pt
pushl
dec
pusha
shrb
call
popf
movsl
inc
mov
jle,pt
pop
xchg
loope
mov
xchg
ss
lahf
outsb
push
cltd
iret
sahf
mov
sahf
jmp
imul
data16
daa
mov
repz
cmp
lea
test
test
stos
shll
and
pop
push
jl
rclb
mov
adc
fcmovnu
push
sbb
push
ffree
in
sub
mov
cmpsl
add
add
cld
jl
ret
xor
sbb
sub
pop
hlt
push
fdivrp
adc
rorl
jp
lods
inc
in
stos
pushl
cmpb
test
push
jg
cmp
test
ja
xorb
add
or
dec
add
mov
test
aas
test
test
pop
leave
pop
sti
in
ret
sti
xchg
push
xor
sbb
jp
ljmp
mov
xchg
adc
rclb
xchg
and
jo
push
idivl
sbb
loope
mov
pop
xchg
loopne
xchg
imul
cmp
cmp
mov
cwtl
inc
mov
sub
push
inc
push
cmc
cltd
jb
jp
in
adc
mov
dec
push
mov
push
rcll
leave
outsb
das
cmp
push
lcall
mov
inc
push
dec
xchg
add
out
in
sub
push
sub
jbe
test
lcall
subb
aaa
jp
pop
inc
pop
pop
cmpsl
outsl
int
sbbb
mov
jmp
fidivrl
inc
addb
ds
cmp
push
jle,pt
scas
stos
xor
xor
sub
ret
xchg
mov
dec
popa
mov
adc
in
in
test
mov
mov
or
ja
ficompl
lock
cmp
or
outsb
in
sti
in
and
adc
lds
loopne
and
xorl
jmp
sub
push
adc
xchg
and
sub
xor
test
xchg
jno
loop
test
test
les
xor
mov
and
mov
or
ds
aas
push
inc
int3
jmp
ds
inc
lea
mov
lret
cmp
xchg
pop
in
mov
sub
daa
les
scas
xchg
outsl
cli
fisttps
or
xor
mov
into
add
jns
rolb
pushf
scas
fldt
push
sbb
mov
movsl
gs
adc
dec
shlb
dec
ficompl
daa
jle
cs
sahf
movsl
test
push
or
arpl
cltd
pop
push
imul
mov
or
lds
fisttpll
mov
xlat
or
and
pop
pop
or
repnz
std
nop
xor
mov
cwtl
inc
adc
imul
push
jmp
sbbl
test
enter
mov
out
push
sti
das
out
jns
mull
cmp
sbb
and
adc
inc
mov
das
jns
pop
pop
mov
adcl
roll
xchg
xlat
cs
or
lds
jb
in
pusha
jl
or
sbb
pop
adc
and
int3
cmp
inc
es
add
mov
cmp
jno
daa
add
pushf
cs
xchg
mov
loope
push
and
inc
xor
push
f2xm1
imul
xchg
pop
loope
enter
pop
mov
mov
stos
or
ja
neg
ds
cmp
orb
out
lret
enter
or
repz
xchg
fidivl
xchg
outsl
jl
cmc
mov
mov
ljmp
ljmp
mov
test
out
pop
push
test
jbe
cltd
adc
iret
mov
mov
jp
test
mov
jnp
cli
fcomip
or
and
pop
stos
in
sbb
in
mov
adc
mov
xor
adc
sbb
and
into
stos
mov
add
dec
add
sub
inc
pop
sbb
shl
jge
inc
jae
in
xor
push
iret
cld
stos
xor
aas
enter
out
mov
mov
fs
pop
fsubrp
jecxz
pop
sbb
lds
imul
cmp
xlat
outsl
ret
dec
insb
dec
lea
mov
and
int3
push
cmpsl
cmp
insb
or
call
leave
ret
cmpsl
add
pop
push
lret
inc
lds
jp
leave
repz
xchg
push
scas
fdivs
and
xchg
in
ljmp
test
sub
cmp
sub
jbe
sbb
mov
in
xchg
in
xchg
jl
inc
fidivrs
test
xor
pop
je
ja
enter
ret
icebp
or
aam
rorb
sbb
sbb
or
push
add
or
mov
add
sbb
shl
mull
cmp
adc
push
cmc
adc
xor
and
mov
jo
lods
xchg
push
jns
inc
xchg
sarl
mov
rcrb
xlat
jns
xor
mov
cld
bound
ds
js
rorb
test
jl
out
std
mov
in
jmp
xor
inc
inc
and
out
lods
ss
jns
mov
pop
ud0
movsl
imul
and
pop
mov
stos
mov
push
pop
sbb
adc
fwait
out
in
sub
sbb
add
mov
lahf
or
or
nop
cmc
movsl
xlat
test
out
imul
adc
push
add
sbb
enter
imul
jbe
pop
adc
jno
lds
add
cmpsb
xchg
xor
aad
lcall
ss
fidivl
xchg
and
push
jns
scas
push
cmpsb
fs
subb
shl
clc
jg
daa
fcmovb
add
repnz
inc
pop
addl
movsl
gs
fisubrs
inc
mov
xchg
vpacksswb
xor
adc
sbb
sub
cmpsl
sub
je
xchg
xlat
aas
stos
sbb
test
add
and
xchg
sbb
test
call
xchg
aas
or
push
lcall
jb
leave
xor
lock
sub
lret
push
push
stc
xlat
jp
mov
dec
leave
test
daa
inc
inc
lea
test
imul
push
pusha
jp
data16
cmc
cmp
pop
xchg
cwtl
mov
loope
je
cltd
arpl
insl
dec
mov
rorb
je
mov
sub
mov
stos
push
hlt
and
sub
cmp
cltd
or
sub
ja
ja
xlat
dec
cli
sbb
idivb
push
push
mov
fdivrl
pop
loopne
mov
adc
dec
add
imul
das
sbb
inc
repz
cmp
sti
jl
lods
outsb
scas
js
test
leave
clc
push
inc
stos
loop
lods
jb
popa
jg
push
lock
pop
jne
ss
push
mov
stc
insb
mov
ds
fadd
xchg
stc
jge
aad
cmpsl
mov
mov
add
mov
mov
xor
lgs
mov
cmpsb
xchg
push
nop
out
rcll
jl
mov
mov
mov
or
cltd
cmp
lods
cld
sarb
mov
shrb
cmc
test
insb
jecxz
sahf
clc
scas
mov
inc
lret
out
popf
inc
test
lods
lea
lret
mov
sbb
jnp
ljmp
cmp
cmovae
in
push
cmc
sbb
loopne
daa
in
je
out
xor
jecxz
adc
fadds
stos
jb
imul
cmp
data16
xor
jmp
add
sarl
mov
rcr
ret
sbb
or
jae
mov
or
dec
lahf
jns
roll
xor
out
xor
andb
imul
mov
xchg
cmc
subb
adcl
mov
fcomi
mov
xor
mov
addr16
xchg
test
mov
rcl
stos
pop
pop
jb
fdivrs
or
dec
dec
repnz
jg
negl
lods
cmc
ror
ret
bound
jecxz
sbb
js
mov
sahf
xor
xor
add
leave
rorb
pop
iret
lahf
pushf
imul
mov
sub
or
xchg
fcomp
outsb
out
popl
in
xor
fcompl
xchg
mov
mov
iret
dec
jne
inc
jbe
frstor
movsb
mov
inc
adc
subl
lcall
ljmp
fdivrp
aas
jno
jle
movsb
or
add
scas
xor
or
push
sbb
inc
dec
loopne
lcall
fwait
mov
bound
inc
push
cmp
outsb
cmpl
jl
mov
jbe
jmp
add
jge
xchg
add
xchg
add
stos
test
pop
test
ds
mov
dec
repnz
dec
movsb
cmpsl
push
or
stos
or
stos
inc
cmp
add
jge
aam
xor
pop
dec
movsl
adc
adc
gs
or
mov
test
cmpsl
in
pushf
pop
push
inc
out
jne
push
fstpt
adc
cmp
sub
ljmp
fidivrl
repz
sbb
jmp
mov
push
cmp
jne
mov
mov
std
mov
inc
fs
mov
in
push
pop
push
jp
mov
loope
stos
adc
mov
and
enter
sahf
dec
add
jp
xor
fnsave
xor
dec
inc
movl
adc
gs
mov
idiv
stos
jge
jno,pt
loope
jmp
push
dec
dec
mov
jg
in
pop
shl
cmp
xchg
loop
add
inc
push
push
outsb
mov
pop
arpl
into
rorl
pop
cmp
xchg
inc
xor
pop
out
insb
aaa
cmp
and
lods
adc
lahf
jl
adc
arpl
out
jb
je
push
lds
dec
cmc
inc
mov
insl
mov
aad
rorb
dec
jae
jp
fs
dec
sub
enter
in
mov
sbb
sbb
push
dec
mov
inc
aaa
mov
sub
inc
add
cmp
xor
in
stc
outsb
inc
pop
fnstenv
out
mov
cs
or
nop
mov
nop
add
ja,pt
cwtl
iret
ret
dec
movsl
shl
pop
movsl
pop
jb
inc
rolb
xchg
sarl
xchg
jne
fs
xchg
decb
mov
scas
loopne
mov
xor
jp
pushf
dec
stos
mov
test
ret
xchg
inc
cltd
mov
icebp
mov
adc
stos
fcomp
call
repnz
mov
fidivs
adc
imul
push
and
dec
adc
or
ficoms
rcr
mov
bound
test
notl
cli
add
lret
inc
fsubl
lea
sti
arpl
mov
fs
mov
enter
nopl
jp
jge
in
js
iret
and
iret
es
jecxz
mov
out
sub
push
xor
out
rol
test
mov
ja
lret
xchg
add
ljmp
repnz
dec
sbb
jge
xlat
add
ja
insb
xchg
clc
xchg
jo
jbe
jb
pop
fiaddl
in
pop
pop
pop
or
pusha
stc
push
and
inc
addr16
repz
addr16
scas
sahf
cld
mull
dec
cmc
sub
mov
ficompl
cltd
cmp
adc
and
xor
imul
or
cltd
std
imul
pop
fnstcw
xchg
fldenv
in
mov
stc
adc
inc
adc
sub
ret
add
cmp
bound
mov
inc
cmp
scas
bound
mov
pushf
sub
lods
pop
jb
pop
fcomip
pop
inc
pop
sub
popa
xchg
mov
dec
je
ret
cwtl
andl
inc
inc
push
rep
and
jo
jp
outsl
dec
xlat
movsb
out
mov
mov
out
pop
jp
cmp
sti
addr16
xchg
aad
in
into
mov
aas
in
sti
scas
cld
cs
imul
fnstenv
scas
adc
mov
fsub
sbb
mov
lods
lret
xchg
ffree
sub
and
push
xchg
jp
daa
out
or
jb
xorl
jg
lret
gs
lea
sub
mov
push
js
jbe
arpl
aad
std
in
fmul
das
mov
jle
xchg
xchg
loopne
sbb
std
cmp
mov
dec
mov
ds
stc
push
jmp
pop
pop
cmp
sub
mov
into
cmp
pop
lret
mov
dec
xchg
sub
jmp
xor
xchg
add
cmp
mov
leave
dec
fnstsw
push
fwait
sbb
mov
fistpll
xchg
or
xchg
xchg
push
xchg
xchg
test
out
push
add
sti
jg
xlat
push
lock
cmp
call
inc
fwait
in
mov
incb
pop
addr16
sbbl
fwait
cmp
xchg
push
ljmp
into
addr16
pop
ja
xlat
push
mov
xchg
int3
test
fnsave
inc
fisttps
sub
dec
iret
push
add
xchg
ljmp
loop
and
out
xchg
cmpb
mov
or
ss
rorl
pushf
mov
push
in
or
jle
jne
xor
mov
xchg
leave
js
aam
inc
ret
xchg
jecxz
xchg
jb
mov
loop
jecxz
loope
add
cli
test
pop
xchg
stos
sbb
arpl
or
lret
and
pop
pop
or
xchg
sbb
outsl
lea
repnz
cmp
sti
pop
pop
ss
movsb
inc
cmp
sbb
sub
or
mov
add
ja
sub
add
fimuls
bound
push
dec
xchg
pop
inc
repz
inc
mov
enter
mov
ljmp
lds
fwait
adc
daa
out
cld
loopne
mov
dec
incl
jnp
mov
xchg
shrl
jl
or
int3
ss
scas
int3
xor
mov
popa
push
xor
movsl
dec
subl
xchg
loop
xchg
test
xchg
mov
fsubl
fwait
pop
fmuls
sub
pop
cmpsl
scas
adc
sub
add
mov
xchg
daa
jge
ljmp
inc
mov
addr16
into
fisubl
adc
scas
sub
push
inc
xchg
or
adc
jl
mov
loopne
xchg
lret
xchg
dec
cmp
loopne
lock
add
out
jmp
jo
xlat
dec
iret
or
ja
pop
lret
mov
dec
inc
jae
pop
fwait
or
test
push
mov
not
pop
xor
xor
fucomp
loopnew
addr16
xor
jmp
jo
cltd
push
out
loope
shlb
inc
lfs
sub
dec
jo
push
jecxz
inc
push
push
jnp
and
and
cmp
push
xchg
subb
aad
jp
add
sub
push
jmp
lahf
adc
dec
push
pop
adc
xor
cmp
fcmovne
cmp
xchg
add
aaa
movsl
insb
stc
cmp
mov
adc
xor
sub
jae
push
ret
or
shll
int3
repnz
push
push
sbb
adc
cld
shlb
loop
adc
stos
shrl
scas
mov
fsubs
sub
push
sbb
arpl
test
and
repnz
pop
in
cmp
repz
and
sarl
inc
push
out
sub
pusha
mov
jge
sbb
inc
je
inc
gs
int
jle
popf
insl
sti
popa
push
in
mov
push
fildll
lret
and
xlat
push
mov
inc
mov
inc
mov
jno
subl
pop
mov
es
cmc
insb
add
incb
lret
dec
mov
sbb
pop
loopne
je
inc
sub
enter
cmp
push
lret
pop
fdivr
test
in
jae
dec
andl
sarl
jb
mov
mov
pop
out
lahf
sti
mov
cmpsl
or
push
sub
push
jae
push
out
fnstenv
fdivl
das
jg
imul
mov
jecxz
hlt
fistl
test
in
cmp
jmp
aas
adc
inc
inc
test
movsb
cmp
les
fs
ds
insl
or
and
mov
pop
js
jmp
push
popa
ret
loope
mov
aad
scas
addb
jmp
or
add
cmp
push
inc
sub
push
clc
aad
ror
inc
out
std
aaa
ljmp
sub
or
popf
jl
and
and
and
push
cmp
pop
out
fisttps
sub
push
mov
ror
jne
ljmp
lret
scas
xchg
push
fmull
sub
rolb
iret
leave
add
in
push
push
das
sahf
push
inc
into
lds
jno
jecxz
inc
clc
jnp
jge
dec
out
fildl
pop
jae
pop
inc
pop
cmp
icebp
hlt
mov
or
adc
jmp
movl
stos
and
push
fucomi
outsb
faddl
out
in
mov
pop
push
inc
dec
ja
inc
repnz
fdivrs
mov
push
mov
jecxz
jo
in
dec
mov
sbb
bound
xor
and
pop
sahf
and
xchg
scas
es
cld
cli
lret
cmp
adcl
mov
into
js
bswap
xchg
sbb
or
sub
popa
lahf
fistps
aad
movsb
and
mov
pop
sbb
mov
sub
adc
adc
push
pop
pushf
and
dec
pushf
inc
cmp
sbb
push
das
mov
pop
dec
and
imull
adc
lret
inc
mov
call
test
pop
stc
adc
mov
in
out
cmpsb
aam
xlat
imul
mov
in
mulb
lahf
shll
push
out
mov
repnz
sbb
cmp
insl
int
mov
inc
aaa
mov
icebp
fwait
push
sbb
lods
pop
or
ss
xor
aad
pop
ss
cli
mov
arpl
mov
je
xlat
out
call
jo
imul
rcrl
pop
pop
mov
out
pusha
jae
jno
cwtl
cmovnp
xor
jne
jb
loop
jmp
icebp
ret
cmpsb
xchg
or
repz
lea
nop
je
ret
cs
dec
fimull
fisubl
xlat
imul
inc
sub
cwtl
hlt
add
adc
and
pop
xchg
in
xor
mov
xor
fildl
push
insb
mov
sbb
jmp
aaa
mov
mov
push
add
insb
ficompl
dec
rcrb
mov
es
cmp
mov
inc
insb
repnz
sub
pop
addr16
test
push
sub
and
or
adc
push
xchg
adc
in
das
adc
dec
jmp
lods
pop
ljmp
loope
icebp
pushf
es
pop
add
pop
in
insb
pop
xor
mov
lock
pop
push
rol
sahf
sub
dec
sti
xchg
movsl
lcall
fwait
nop
arpl
cmp
mov
or
lcall
push
sub
sahf
mov
idiv
out
add
cld
dec
jo
xchg
sub
jbe
shr
adc
push
inc
sahf
repz
cmp
mov
jmp
dec
andb
cmp
xchg
mov
scas
out
scas
sub
stos
dec
in
add
push
jg
cmpl
lods
call
or
jg
pop
neg
pop
call
cmp
push
jle
ret
adc
subl
test
inc
out
adc
mov
out
sti
sub
inc
add
insl
mov
xor
pop
xchg
pop
mov
xchg
add
lods
pop
sub
xlat
sub
sub
jno
dec
aad
xchg
pop
sub
shrb
adc
adc
lods
aam
or
pushl
push
mov
xchg
leave
adc
mov
fldenv
data16
adc
pop
imul
pop
imul
or
imul
in
jae
es
stos
test
mov
jb
ss
insl
sub
add
pop
aaa
mov
shll
wbinvd
mov
adc
lret
out
outsb
sub
jno
inc
or
cld
sbb
mov
mov
lods
lods
test
stos
mov
inc
addr16
or
cmpsl
out
ljmp
pop
push
and
outsl
push
mov
aaa
les
xlat
ljmp
inc
push
fabs
sbb
subl
cmc
xor
or
js
jns
pop
ja
inc
xor
inc
dec
adc
ljmp
pop
enter
push
xchg
adc
cmp
loop
and
pop
jbe
call
movl
and
and
cmp
cmp
jmp
sbbl
pop
bnd
inc
pushf
loope
xor
adc
xor
ror
adc
es
in
in
mov
sbb
test
xor
mov
sbb
in
mov
inc
or
mov
push
xor
sbb
add
mov
and
mov
fimuls
js
fs
pop
imul
enter
cltd
imul
ret
mov
jecxz
scas
or
sub
sbb
jg
out
mov
test
pop
and
mov
pop
int
call
ss
sarl
ficoms
out
in
imul
or
aam
aaa
add
outsl
add
int
cmpsb
int
xor
fxch
mov
sub
cmp
stc
shll
ret
push
jbe
cld
outsb
int3
dec
push
pop
scas
push
hlt
leave
jbe
gs
mov
mov
orl
jbe
xchg
xchg
pop
sbb
repz
sbb
cmpsl
sub
ret
movsl
pop
xor
pop
pop
and
pop
and
push
lods
xchg
imul
push
xchg
fnstcw
push
rcrb
dec
addr16
push
outsl
int3
imul
jae
push
in
mov
gs
outsl
inc
adc
pop
aaa
fwait
rcll
vmread
and
test
jmp
cld
dec
popa
push
aad
dec
mov
ds
xchg
xor
push
out
movsb
into
sbb
ret
jle
call
dec
bound
and
call
add
xchg
shlb
mov
cmpb
into
stos
push
cmp
ss
and
mov
das
and
or
mov
adc
mov
mov
xor
push
mov
iret
pusha
mov
fwait
unpckhps
mov
es
sbb
int
mov
in
push
mov
dec
addr16
inc
mov
cmc
cmp
scas
cmp
cmpl
loopne
xor
clc
addb
inc
cmp
jo
loope
pop
jmp
mov
xor
jo
filds
sub
test
cmp
subb
popf
aam
aam
xchg
inc
xor
mov
in
pop
es
dec
xchg
adc
jg
jns
push
and
lret
mov
mov
mov
int
add
insb
pop
pop
ror
xlat
movsb
pop
lret
dec
push
aad
sahf
addl
andb
sub
cmp
int3
dec
jl
sbb
push
cld
or
xchg
ja
fwait
iret
leave
pop
call
push
mov
bound
dec
lret
push
sub
in
ss
scas
arpl
xor
dec
mov
sahf
xor
fdivrs
cmpsl
dec
mov
cmp
mov
cmp
out
cmpsb
lahf
xchg
jp
fnsave
push
xchg
adc
in
insl
lock
fs
push
jge
or
xor
mov
add
and
sbbb
fld
insl
int
imul
sbbl
xchg
pop
in
enter
aad
shl
ret
mov
std
adc
add
inc
ds
pop
in
mov
sqrtps
fidivrl
fistpl
xor
adc
aas
or
cmpsl
cmpsl
leave
lods
jb
dec
dec
and
jbe
cmpsb
pop
adc
insb
hlt
jnp
pop
sub
and
mov
xchg
add
pop
mov
int
fs
ror
xor
jge
repnz
add
mov
dec
dec
inc
xchg
add
dec
ljmp
mov
push
fiaddl
test
stos
jle
push
pop
mov
cli
cmp
insl
xlat
mov
inc
frstor
sub
xor
lea
or
cmp
lock
dec
jmp
out
and
mov
or
mov
add
loope
adc
stos
outsb
popa
sbb
xchg
outsl
out
jle
push
shrb
aam
mov
jmp
fisttpl
popa
add
pop
dec
stos
movsl
jle
inc
mov
iret
adc
imul
fmul
jne
and
jl
stos
mov
dec
or
stc
out
jg
mov
cmpsb
cmp
imul
lret
inc
sbb
push
and
jg
leave
lds
mov
sahf
movsl
inc
xchg
or
mov
and
filds
addr16
pop
daa
jns
xchg
lcall
outsl
cltd
out
orl
stos
rclb
jecxz
mov
push
es
fisubrl
ret
fs
mov
mov
cmpb
jl
cmpsl
push
aaa
and
inc
mov
sbb
mov
idivb
stc
adcb
or
jmp
jbe
push
lret
mov
cmp
loopne
inc
push
xchg
xchg
mov
jle
push
hlt
xchg
loopne
mov
stc
xor
mov
loope
and
dec
pop
add
sbb
cmovnp
pop
lock
das
cld
and
push
xchg
adc
std
enter
mov
in
addb
icebp
or
daa
mov
shlb
aaa
jae
iret
dec
insb
xor
divl
cmp
dec
xor
test
sub
mov
xchg
xchg
in
cmp
xchg
push
push
lods
xchg
cmp
lcall
xchg
cmpsl
jmp
mov
lret
call
into
adc
push
movsb
sarl
lcall
jle
cmp
bound
test
jg
push
mov
mov
cmp
and
pop
mov
les
xchg
xchg
mov
sub
testl
gs
ds
orl
shl
or
int
mov
test
add
jl
jl
push
sub
out
les
outsb
inc
push
mov
xorl
gs
cmp
jge
jmp
mov
add
jmp
lahf
cmp
adc
dec
cmp
mov
xorb
dec
push
xor
lods
enter
popa
mov
stc
lahf
lret
das
mov
mov
scas
lret
mov
fdivp
and
es
adc
xor
into
adc
mov
xchg
or
cwtl
call
sbb
jne
mov
add
push
gs
inc
cmp
adc
cli
sarl
cmp
mov
pushf
pop
loope
lds
mov
dec
addr16
fs
lret
push
mov
lret
jg
daa
push
pop
sbb
mov
adcb
inc
cmp
dec
adc
dec
jns
pop
push
jb
movsb
out
pop
fstpl
dec
add
shlb
cltd
rcrl
ret
mov
test
mov
lahf
lods
xchg
or
adc
mov
ds
push
or
shlb
xchg
icebp
scas
sti
fcmovb
pop
fisubl
xchg
cmp
enter
sub
jmp
addl
addr16
push
lahf
cmp
daa
mov
test
or
ret
mov
lret
outsb
or
jmp
into
repz
lods
push
xchg
scas
frstor
ficompl
pop
mov
xchg
call
push
xor
mov
inc
inc
rol
push
mov
inc
int3
les
aaa
out
push
clc
xor
or
inc
sub
mov
movsb
fnstsw
into
cmpsl
shrl
aaa
pop
enterw
adc
dec
movsb
mov
mov
jb
daa
outsl
loop
pop
ds
jb
scas
dec
faddl
jbe
jne
idiv
cmpsb
fsts
push
bound
xor
loope
dec
lret
mov
imul
sti
jnp
pop
scas
xchg
or
fists
pop
stos
sahf
push
lds
aad
fildll
int3
icebp
xchg
fs
inc
jns
jns
push
arpl
daa
lret
xchg
pop
data16
push
cmc
lods
xor
in
push
loop
xor
dec
sti
sbb
sbb
xchg
fdivl
bound
test
add
xchg
push
movb
mov
xor
in
nop
cmp
xor
insl
into
call
push
ret
ja
adc
test
jne
test
inc
inc
and
mov
cmp
mov
jg
clc
sbb
pushf
icebp
xor
mov
push
cli
sub
adcb
ja
xchg
jbe
out
nop
xchg
lods
pusha
sbb
pushf
xchg
clc
sti
fldt
adc
addr16
aad
xor
xchg
loop
add
sbb
test
mov
in
jno
cmp
dec
out
xlat
adc
dec
cmp
ret
push
inc
sarl
xchg
fsts
pop
pop
cmp
pop
ficoms
outsb
mov
mov
loop
add
fiadds
scas
out
lods
ss
andl
add
xor
sti
mov
lcall
inc
je
sbb
out
cli
inc
and
pop
data16
lods
shrb
lea
int
xchg
in
xchg
dec
sub
push
mov
js
mov
movsb
ficoms
outsb
ret
xorb
and
sub
pop
adc
pop
fmulp
fnstsw
jne
pop
pushf
lock
dec
aaa
dec
fwait
or
int3
imul
inc
lock
mov
jge
js
lea
icebp
popa
pop
cmpb
cltd
div
xor
imul
add
add
jb
or
nop
and
xchg
cmp
xchg
stos
dec
push
leave
punpckhbw
fldcw
sar
out
mov
mov
mov
pop
mov
imul
fs
leave
sbb
push
dec
and
adc
adc
add
sbb
loope
mov
shr
stos
xor
sti
outsl
adc
mov
insl
mov
das
leave
mov
mov
push
cli
cli
xor
add
sub
pop
push
xor
cmp
jne
lea
jmp
dec
shlb
mov
adc
in
outsb
into
lods
scas
mov
adc
jo
inc
aam
repnz
ljmp
popa
das
rcll
xchg
out
or
push
push
push
xchg
adc
jb
test
mov
push
fwait
jp
mov
xor
add
xchg
or
insb
add
std
movsb
lret
pop
sbb
add
add
sub
lahf
sar
sahf
stos
mov
out
dec
scas
data16
mov
sub
mov
mov
sub
inc
fsubrl
mov
add
mov
mov
push
dec
pop
decl
insb
movsl
hlt
inc
sbb
lods
insl
ljmp
in
xchg
dec
cld
loop
mov
mov
jne
in
cltd
sbb
mov
mov
aas
in
or
mov
inc
pop
into
out
stos
dec
dec
sar
push
pop
fistpll
jae,pn
adc
cld
sub
out
out
test
arpl
fdivl
push
negb
movsl
dec
nop
xchg
icebp
jno
leave
ss
adc
fisubrl
push
xchg
or
mov
mov
xor
pop
imul
outsl
imul
jae
mov
sub
movq
dec
fildll
or
cli
mov
jo
test
mov
xlat
jbe
push
pop
jp
ret
mov
vmulps
sahf
adc
lret
addb
cs
sub
push
sbb
sahf
mov
test
stos
outsb
clc
pushf
popf
xchg
sub
roll
jae
lcall
and
test
es
pop
into
ret
dec
jle
or
sub
imul
mov
cmp
les
loopne
fstl
dec
test
imul
jl
divb
outsb
dec
mov
xlat
enter
sbb
lock
jl
out
pop
aam
xor
add
push
pop
imul
fadds
xchg
xchg
fnstsw
push
lcall
dec
jo
stos
lods
dec
lods
fimuls
xorl
sbb
sub
leave
sub
adc
mov
adc
pop
push
dec
insb
adc
fdiv
out
mov
jo
push
popa
aaa
lea
xchg
clc
in
test
clc
pusha
cs
mov
ljmp
push
scas
stos
push
cmp
negl
mov
jmp
push
movsb
jns
pop
imul
xchg
les
hlt
in
dec
add
push
add
and
out
add
scas
ret
aas
es
jmp
mov
dec
sbb
and
lods
dec
or
jecxz,pn
ja
jle
pop
dec
add
insb
notl
add
stos
mov
mov
push
jge
iret
xor
jae
leave
inc
mov
cmpsl
adc
mov
xor
dec
jnp
add
inc
enter
inc
daa
stc
arpl
shl
fdivs
rclb
loope
sbb
test
jmp
test
or
push
das
mov
stos
or
arpl
lahf
or
push
push
inc
mov
fisubl
mov
rcrb
pop
dec
mov
xor
add
or
repz
and
cmp
xchg
xchg
push
shlb
mov
test
repnz
mov
mov
icebp
pushf
jl
add
cmp
jecxz
xchg
mov
rorl
pop
push
sbb
movsl
dec
xor
adc
xchg
shlb
jecxz
popw
sbb
loopne
fstpl
xor
popa
mov
sbb
rcrb
dec
sub
icebp
movsl
test
repz
icebp
pop
mov
call
mov
mov
jae
sub
mov
push
mov
add
testb
aad
xor
subl
pop
pop
push
xor
int3
mov
xchg
mov
mov
cwtl
mov
out
movsb
loopne
pop
push
nop
xchg
xlat
add
inc
leave
out
adc
inc
push
aad
sbb
push
ljmp
fsts
mov
inc
xchg
out
xchg
stc
test
lret
rclb
and
psllq
dec
cmpsb
adc
dec
sub
cmp
add
insl
ljmp
es
arpl
fisubrl
bound
dec
mov
xchg
rcll
fstpt
lret
loopne
dec
xor
outsl
pop
xchg
scas
call
insl
imul
jmp
in
out
inc
push
mov
das
xchg
sbb
sti
cmp
jo
cmp
inc
rcll
adc
xchg
test
maxps
xor
hlt
js
andb
stos
push
inc
popa
and
mov
je
cmp
sub
sar
or
sarl
xchg
sbb
xor
and
and
in
out
push
mov
mov
fnstcw
test
push
xchg
adc
sbb
test
jne
arpl
ret
push
fwait
xchg
rcrb
xchg
hlt
sbb
icebp
and
fbld
jmp
pop
cmpb
push
addl
sti
pop
add
lds
inc
imul
pop
int
adc
push
clc
data16
mov
aas
dec
mov
loope
mov
enter
sbb
sbb
lret
mov
rcr
in
sub
movsl
leave
mov
scas
dec
push
nop
dec
out
push
mov
inc
mov
push
or
dec
mov
push
pop
inc
pop
cli
cmpb
jne
lahf
lock
sbb
jg
movsb
rorl
cld
les
mov
mov
pop
pop
inc
les
cltd
es
mov
pop
out
cmp
ret
xchg
adc
in
xchg
mov
or
es
jno
in
fcomi
pushf
addr16
les
jl
dec
in
xor
outsb
pop
loopne
js
xchg
lock
inc
jns
xor
xor
movsb
mov
fsubrl
pop
sbb
das
cmp
faddl
jno
inc
mov
pop
inc
aad
imul
sub
popf
or
in
or
lahf
lock
sti
mov
repnz
push
test
add
test
sbb
sbb
xchg
xor
cmp
dec
lahf
xor
push
add
bound
mov
and
xchg
inc
mov
in
pop
mov
and
outsb
cli
lea
mov
outsb
negl
xchg
icebp
sub
jecxz
dec
ss
out
cmp
push
cltd
fidivs
loope
mov
xor
stos
add
mov
inc
xor
js
mov
stos
mov
ljmp
das
popf
cmpsb
inc
sbb
cmpsb
daa
ret
mov
add
std
cwtl
jbe
add
aas
aas
daa
pop
ss
nop
enter
push
xor
xchg
test
sub
rcrb
es
adc
std
cmpsb
xor
adc
adc
xchg
jno
mov
lds
mov
push
sub
and
loope
in
sbb
and
je
pop
xchg
outsb
pop
sbb
lea
jmp
jnp
out
in
cwtl
in
notb
and
and
xchg
inc
pusha
je
stos
lgs
aaa
stc
mov
xor
sub
pusha
sbb
mov
adc
adc
insl
sbb
mov
in
mov
push
mov
movsb
xor
sbb
mov
xchg
inc
mov
jg
jecxz
aad
lahf
fdivr
jmp
cmp
int
cli
sub
adc
xor
imul
enter
int3
mov
clc
push
dec
dec
sbb
xchg
mov
shlb
jae
xor
xor
cmpsl
xchg
fwait
pop
fwait
leave
cmpsb
push
mov
add
xchg
dec
lock
jne
mov
sarb
in
pop
pop
stos
iret
pop
or
addl
imul
outsb
or
xchg
xor
jb
xchg
push
negb
dec
gs
icebp
ljmp
and
adc
pusha
cmpsl
ljmp
pop
inc
arpl
stos
add
push
movsl
mov
jns
mov
mov
mov
xchg
xchg
call
inc
lret
pop
mov
push
scas
add
repnz
pop
in
call
push
aas
add
xchg
add
cmc
dec
rcrb
sbb
rorl
lea
scas
lods
sbb
nop
push
mov
inc
mov
fadds
sbb
lret
lret
adc
pop
adc
or
aad
shl
xchg
mov
lods
push
mov
cmpsb
pop
jns
xor
adc
adc
popa
mov
mov
push
dec
ss
mov
adc
add
jno
mov
inc
shr
xchg
pop
jmp
scas
cltd
js
repnz
decl
mov
out
shrb
stc
mov
lahf
leave
xlat
lahf
inc
outsb
xchg
decl
pop
mov
mov
dec
aas
aad
jecxz
lods
scas
add
popa
outsl
test
in
sub
pop
gs
movsl
repz
mov
inc
cmp
in
lods
insl
pop
aam
sub
shrl
addr16
js
je
shlb
and
or
shlb
dec
adc
xchg
fucomip
jno
mov
dec
jb
pop
xor
lock
loopne
int3
std
mov
mov
push
inc
out
mov
and
nop
int
sbb
pop
adc
shr
dec
xchg
cli
fdivrl
scas
jmp
pushf
les
pop
mov
or
nop
mov
xor
mov
mov
stos
xor
inc
mov
ss
pop
sbb
outsb
jl
xor
in
sub
push
push
cli
movsl
sbb
adc
lods
call
and
mov
adc
pop
xchg
pop
push
aas
lods
sub
iret
jle
add
lea
addr16
jg
and
clc
sbb
daa
add
xchg
imull
push
mov
jle
pop
adc
ja
fcmovnbe
out
pop
dec
mov
mov
fimull
aaa
sti
arpl
lds
adc
jmp
mov
push
leave
inc
int
test
arpl
rcll
mov
out
imul
jecxz
push
mov
mov
std
sbb
pop
addr16
clc
mov
dec
roll
mov
pop
mov
mov
add
add
rcll
adc
and
xor
movsb
mov
add
sub
rorb
pop
sbb
ret
sbb
es
inc
pop
mov
and
arpl
loopne
sbb
mull
test
xor
or
ret
or
ds
mov
das
and
dec
int3
push
jo
mov
stc
xchg
or
test
out
loopne
push
cs
dec
push
pushaw
fnstenv
rcrl
xchg
pop
testl
cwtl
lock
fbstp
sbb
and
aaa
mov
inc
icebp
or
dec
push
fnsave
xchg
sbb
jne
mov
insl
scas
jne
pop
jmp
mov
icebp
icebp
rcrl
outsb
lds
pop
mov
and
in
movb
inc
cmpsl
rol
ret
mov
nop
inc
xor
cmp
and
xchg
push
shrl
cmp
cltd
pusha
loope
xchg
in
movsl
insl
repz
sub
push
xor
mov
push
sbb
gs
inc
iret
and
lock
sub
adc
mov
nop
inc
loope
push
adc
in
fsubs
icebp
rorl
mov
jae
test
shll
je
inc
adc
push
scas
sub
sub
adc
pop
push
adc
cmpsl
popf
test
shl
nop
xchg
test
stos
repz
jmp
mov
rol
int
sub
mov
jb
sub
clc
push
and
mov
pop
cmp
pop
nop
cmpsl
push
lods
lcall
cmp
cltd
inc
sbb
mov
xor
flds
dec
repnz
mov
fs
push
sub
push
xchg
lods
lahf
or
sbb
inc
inc
adc
sbb
test
push
cmp
xchg
stos
mov
xor
cli
jl
les
xor
xchg
jg
pop
icebp
push
ljmp
inc
push
mov
sub
lds
sbb
movsl
sub
ret
popf
inc
jmp
push
push
inc
or
jp
jns
mov
or
je
and
pop
movsb
xor
adc
iret
mov
sbb
fdiv
clc
adc
insb
popa
xchg
lods
add
insb
cmp
adc
adc
daa
mov
dec
dec
ret
loop
pushf
sub
sbb
fwait
dec
aaa
out
gs
jmp
ss
sub
je
inc
mov
mov
pop
sub
xchg
leave
add
loope
inc
adc
cmp
nop
dec
jo
push
mov
std
repz
and
cmpsb
jns
rcrb
stc
pop
push
js
xlat
aam
sub
fidivrs
rolb
add
stos
pop
sub
mov
test
lock
rcrl
adc
aaa
das
sub
xorl
or
rorb
repnz
leave
fstps
push
cmpl
idivl
inc
sub
and
es
lcall
pop
add
dec
popf
out
mov
pop
daa
out
pop
test
mov
rcrb
jo
inc
clc
dec
mov
ficoml
scas
cltd
outsb
add
repnz
push
int3
and
stc
cmp
lcall
and
sbb
daa
int
test
ss
int
nop
dec
mov
cld
js
loopne
mov
outsb
or
addr16
push
sbb
or
adc
popf
ss
pusha
jl
sub
pop
addr16
std
sub
inc
jno
scas
pop
push
push
xor
scas
pop
je
xchg
xor
call
jnp
or
mov
xchg
lret
or
push
pusha
jb
aas
push
dec
sbb
mov
fisubs
shl
addr16
popa
cmp
mov
loop
call
dec
add
out
and
divb
idivb
cmpsb
testb
insl
imul
test
ficoms
roll
mov
dec
jo
pop
xchg
xor
sub
push
ds
jae
xor
sbbb
fs
pop
mov
xor
lods
daa
jg
dec
sbb
sbb
rcr
pop
sti
js
add
fs
push
push
xor
lock
insl
mov
lahf
popf
cmp
std
fwait
ljmp
cmc
das
je
lcall
sub
sbb
repnz
rolb
test
sbb
lahf
fsts
movsb
dec
mov
xchg
sbbb
in
jl
popa
sti
mov
imul
push
jle
pushw
push
iret
jae
push
ret
pop
test
jbe
inc
mov
cmc
cmp
shrb
inc
je
inc
stos
fs
add
jbe
jb
mov
hlt
push
mov
fcomps
repnz
lea
push
xor
jnp
cmp
test
and
inc
cmp
and
insl
in
sbb
loop
or
mov
push
lahf
mov
cmpsb
icebp
arpl
pop
test
lds
or
mov
adc
bound
bound
insl
bound
aaa
popa
inc
mov
xlat
pop
imul
and
cwtl
adc
jp
xor
push
jmp
roll
std
push
lahf
mov
inc
loope
popa
jg
cld
adc
imul
stc
ss
mov
adc
in
lret
mov
lock
mov
lds
adc
lock
pop
xchg
iret
shll
loop
shll
mov
inc
inc
jge
in
adc
call
arpl
adcl
cmp
aam
cld
pop
cmpsb
xchg
mov
push
cmp
cmp
das
adc
or
loop
cmp
sub
pop
incb
aam
mov
inc
and
std
addr16
sbb
adc
sbb
fcmovb
dec
das
mov
adc
je
pop
jne
inc
cwtl
dec
hlt
sbb
test
shrl
mov
les
hlt
movsl
inc
les
cmc
movsb
mov
jo
sub
pop
or
insb
sbb
pop
pusha
stos
mov
std
stc
fidivl
lahf
mov
mov
out
xchg
outsl
or
daa
cmpb
inc
rorb
test
test
mov
xor
jle
andl
fadds
in
jb
lock
dec
insl
dec
outsb
ret
cmc
jmp
ds
hlt
in
push
jmp
mov
mov
test
andb
movsb
shl
and
gs
mov
frstor
mov
ds
ljmp
cmp
push
imul
push
and
jmp
lcall
adc
xor
jge
xchg
fidivl
dec
cmpsb
pusha
push
ljmp
inc
call
fldcw
popa
cmc
mov
fcomps
loop
mov
jb
into
jl
fstpl
xor
lds
fistps
xchg
push
xchg
rol
lret
push
add
ja
test
call
imul
push
imul
inc
enter
push
jnp
xchg
loop
inc
mov
xor
xchg
push
and
push
jno
jns
mov
cld
in
insl
movsl
and
push
insb
in
sbb
push
push
in
out
xor
mov
xchg
pop
jbe
push
cmp
or
pop
lcall
fldt
leave
push
sbb
mov
mov
inc
mov
lock
stc
xor
dec
xchg
pop
addl
test
and
imul
pushf
scas
clc
lret
in
xchg
int3
xlat
test
add
cwtl
testb
sahf
aas
dec
xchg
andps
out
in
iret
xlat
jle
in
insl
addr16
push
rol
and
push
add
or
adc
add
inc
sbb
daa
loope
fwait
je
in
out
ljmp
pop
adcb
movsl
xchg
dec
imul
test
mov
cmp
add
in
mov
pushf
pusha
cmp
and
stos
xor
in
aad
lods
jo
std
subb
inc
adc
pop
push
sub
dec
xchg
sub
cwtl
lock
repnz
sub
mov
inc
and
and
pop
sti
xchg
and
insl
and
cmp
push
cmp
inc
sti
pop
adc
push
enter
xor
pusha
in
shll
mov
les
arpl
inc
lret
and
movsb
mov
push
add
adc
call
push
or
adc
stc
add
testl
test
add
or
movsl
pop
inc
loop
pop
xchg
fldl
scas
dec
sti
mov
mov
arpl
movl
rcll
fwait
sub
push
fs
shl
xchg
fst
push
adc
and
cmp
ret
add
cs
ss
mov
adc
lods
pop
imul
movsl
jmp
les
push
adc
test
sti
mov
mov
or
mov
pop
sbb
mov
popf
std
mov
jns
fimuls
inc
andb
mov
aaa
dec
push
enter
test
fsts
adc
xchg
push
adc
xchg
xlat
add
orb
pop
test
out
mov
xchg
neg
scas
clc
sti
jb
popa
jg
cmc
xchg
leave
or
nop
fwait
inc
clc
and
in
cmp
stos
add
inc
push
dec
mov
cmp
sbb
subb
xchg
mov
negl
or
repz
xchg
nop
clc
adc
cld
das
call
test
and
cmc
pushf
test
pop
pop
mov
push
mov
push
movsl
addr16
pop
push
cmp
push
cli
idivl
daa
scas
stc
inc
cmpsb
shll
daa
jae
cmp
sahf
xchg
and
sbb
popf
xchg
cmc
mov
mov
insb
mov
dec
sub
push
repz
adc
scas
add
outsb
imul
xor
xorps
lods
pop
cmp
cli
add
clc
or
mov
mov
sub
out
push
xor
mov
or
bound
out
cmc
cmp
xor
cmpsb
aad
push
sub
dec
xchg
add
mov
clc
sbb
roll
dec
add
stos
sub
gs
subl
lock
adc
mov
cs
xor
sub
xor
xchg
sbb
aas
leave
xchg
adc
rolb
into
mov
test
cmp
shl
jbe
mov
lods
add
adc
and
imul
fwait
in
ror
arpl
repz
inc
rorb
outsb
push
inc
into
jo
dec
leave
mov
jnp
cltd
insl
cmpsb
popa
or
testb
pop
lods
movsb
loopne
adc
pop
jae
adc
adc
ret
out
mov
loopne
xchg
mov
adc
mov
or
cmpsl
je
lds
jmp
fwait
xchg
outsb
divl
test
inc
ja
pop
sub
hlt
cmc
aas
hlt
andb
imul
movsb
xor
sbb
ja
es
pop
dec
addr16
mov
xor
cmp
push
ljmp
bsr
mov
les
cltd
loope
jmp
xor
inc
enter
and
mov
test
in
push
addr16
mov
add
sahf
mov
add
out
stos
sbb
push
jno
mov
and
ja
mov
cmpsb
test
sub
xchg
sub
mov
xor
xlat
test
xchg
iret
dec
or
pop
mov
les
and
sub
push
cmpb
xchg
mov
adc
lock
xchg
mov
addl
loope
push
xor
or
jae
xor
int
fnstsw
adc
sbb
xchg
das
bound
lahf
mov
int3
add
and
mov
xchg
int3
div
xchg
mov
icebp
out
loop
xor
push
cmp
or
test
push
jb
push
push
fnstsw
push
loop
in
add
sbb
testb
imul
into
std
shlb
pop
xchg
xchg
and
mov
push
into
pop
xchg
decb
xchg
push
or
xchg
sub
xor
cmp
adc
or
lcall
les
popf
xchg
xor
mov
xchg
or
test
jb,pn
jnp
les
mov
push
idivl
cmp
ljmp
sahf
add
stos
shll
xorl
jg
fnstcw
iret
ftst
jo
mov
adc
andl
clc
bound
and
and
lcall
das
testl
bound
mov
mov
enter
iret
jbe
ds
xchg
clc
cmp
sub
out
sahf
ja
cmp
push
loopne
cmc
fistps
addr16
or
inc
ret
push
jg
test
adc
lahf
adc
ret
add
pop
adc
insl
lds
fldcw
mov
and
loope
jmp
fnstsw
mul
stc
pop
pop
adc
sbb
rclb
pop
adc
stos
movl
out
daa
call
jnp
push
pushf
push
xorl
incb
hlt
dec
movsl
push
ret
add
adc
andb
xchg
push
lcall
lret
pop
loop
xor
mov
add
cmp
int3
cmpl
mov
fdivr
pusha
mov
out
add
sahf
xchg
std
inc
pop
cmp
cmpsb
cmp
mov
mov
xchg
fucomip
jne
mov
loopne
sbb
sub
push
jns
test
push
cmp
sub
cmpsl
mov
mov
outsl
adc
and
xchg
test
add
sub
push
sub
ret
adc
cmp
mov
xchg
pop
xchg
jnp
jnp
enter
outsl
push
fnstcw
pop
scas
mov
ja
sub
jnp
cmp
sub
and
fs
add
clc
ss
daa
push
stc
loopne
dec
jb
jno
int
mov
test
icebp
rcl
push
loope
jl
pop
cld
mov
fwait
sub
sti
fst
mov
in
sub
ficoml
adc
sbb
int
mov
popa
xor
xchg
je
sti
xor
lcall
push
out
aam
inc
xor
and
dec
rclb
xor
adc
xor
cli
mov
lds
dec
xchg
add
jl
dec
in
jg
pop
cmp
fwait
int
shrl
mov
imul
ret
jle
ret
addl
mov
xor
adcl
jle
cmp
add
je
inc
lcall
out
mov
jb
mov
popf
call
imul
in
test
mov
adcl
lret
lahf
nop
int
pusha
mov
mov
mov
loop
mov
data16
sbb
in
cld
lea
shlb
or
xchg
xchg
imul
jg
stos
inc
scas
ret
jmp
mov
add
stos
mov
jb
pop
pop
push
jb
stos
fisttps
cld
push
shlb
xor
test
push
pusha
inc
xchg
testb
mov
adc
mov
fwait
ljmp
add
jo
xor
ds
xor
test
fldt
jo
pop
mov
sbb
cmp
roll
jg
ja
int
pushf
mov
mov
push
or
inc
inc
pop
add
inc
ret
insb
shll
mov
xchg
negb
test
in
dec
ret
in
nop
xorb
mov
pop
pop
fadds
icebp
nop
gs
and
mov
xor
cmc
and
les
stc
inc
fmull
push
jns
fimull
ret
mov
subl
adcl
inc
ret
mov
push
fmuls
lock
dec
cwtl
loopne
dec
xchg
scas
sahf
lods
pop
push
inc
jo
pop
inc
movsb
js
clc
shll
stos
cmp
pushf
addl
cli
cwtl
push
inc
scas
push
fdivl
dec
pop
out
xchg
mov
dec
dec
dec
outsb
cmp
pop
sbb
aaa
popf
divl
lret
cld
mov
jb
pop
or
add
sbb
ss
push
xor
loope
and
stos
sub
fwait
ss
sbbb
mull
inc
int
hlt
pop
call
pop
xchg
jp
push
ss
sarl
pop
fcomps
jp
imul
mov
xor
add
bnd
or
cmp
pop
xchg
ss
jg
int
int3
rcrb
es
pop
enter
not
inc
out
es
xchg
jmp
fdivp
xlat
xor
adc
movsb
cli
imul
cltd
xor
sub
test
data16
or
fwait
adc
cmp
fucomip
or
fidivs
xor
ljmp
rcll
repz
mov
mov
cmp
lret
mov
pop
dec
les
mov
fwait
mov
repnz
ja
lahf
ret
aam
lcall
data16
pop
in
adc
jbe
cmp
pop
fstp
incb
out
lahf
icebp
repz
or
ret
push
or
push
jge
xor
push
xchg
outsb
rcll
out
jb
xchg
sbb
pop
call
mov
add
stc
mov
or
xchg
mov
loop
aas
sub
mov
clc
outsb
outsl
sub
xor
cmp
scas
cmpsb
add
mov
jno
gs
mov
mov
das
leave
cs
cld
mov
lock
sbb
mov
fstpl
inc
sbb
sbb
xchg
das
or
add
jae
test
rcl
add
xchg
mov
or
xchg
push
sub
outsb
xchg
loop
icebp
mov
mov
push
icebp
jae
outsl
in
cltd
add
xor
sbb
les
sbb
adc
gs
mov
jb
sbb
iret
fs
repz
sti
xchg
pop
test
adc
aad
sbb
jg
aas
movl
mov
popf
push
loop
insl
jne
and
movsl
or
loopne
cmp
lahf
les
push
mov
rorb
jbe
adc
push
call
test
xchg
popa
outsl
cli
and
pusha
adc
dec
jg
data16
aam
push
xor
and
cmp
jp
adc
cld
add
pop
in
mov
lods
in
jns
and
cmc
jns
insb
or
int3
inc
dec
insl
or
jnp
into
in
iret
dec
or
movsl
lahf
sbb
cmpsl
lret
fwait
sub
lret
movsb
jnp
dec
xor
dec
int
cmp
and
cltd
add
gs
adc
pop
repz
iret
sbb
data16
fwait
push
mov
pop
push
in
xchg
std
mov
and
dec
xchg
and
mul
mov
les
inc
gs
pop
out
xor
mov
stos
loop
xchg
sub
push
inc
push
cmp
sbb
jmp
mov
push
es
xchg
adc
dec
bound
movsb
mov
adc
pushf
xor
lock
dec
rolb
jnp
dec
inc
test
jle
inc
xchg
ss
int3
not
cmp
push
xchg
sbb
push
out
jo
pushf
xchg
sti
xor
inc
imul
imul
add
aad
mov
pop
mov
imull
sub
addr16
ret
loopne
or
or
icebp
pop
ret
leave
cmp
dec
adc
xchg
mov
push
dec
stos
mov
xchg
pop
stos
pop
pop
lods
or
shl
lret
inc
push
inc
adcl
arpl
push
insl
jnp
out
mov
outsb
and
stos
es
xlat
adc
movsl
hlt
stos
rorl
xorl
das
pop
out
jecxz
sub
jmp
mov
cmp
imull
push
fbld
repz
jmp
jmp
sahf
push
push
sbb
pop
and
test
ret
jmp
leave
icebp
cwtl
mov
jb
fucom
xchg
ss
inc
pushf
mov
in
pop
inc
pop
jnp
push
test
clc
pop
ffree
jecxz
rolb
xchg
pop
inc
adc
hlt
enter
lret
repnz
scas
add
inc
scas
inc
roll
insl
lods
mov
pop
out
or
push
call
cld
xchg
sub
xor
mov
and
and
adc
loop
mov
mov
cmpsl
inc
adc
push
jecxz
fbstp
lret
push
mov
std
mov
xchg
stc
andl
or
mov
jmp
and
cmp
or
jg
lea
andb
push
pop
sbb
data16
push
pop
push
outsl
aas
jns
inc
insb
xchg
jnp
xchg
xor
mov
daa
pop
push
loopne
lods
in
insb
pop
fs
sub
adc
or
pop
mov
pop
xchg
xor
push
ret
cs
loopne
pop
and
pop
mov
out
scas
jno
in
popf
gs
sar
gs
push
push
and
das
in
cmpb
in
adc
imul
pushf
cltd
sbb
fldcw
add
shl
inc
jno
insb
pop
mov
pop
inc
jmp
lcall
jo
adc
aas
daa
dec
imul
pop
mov
adc
xchg
insb
mov
popa
fs
xor
movsl
fbld
scas
jle
into
jae
clc
jge
loopne
xor
std
lods
bnd
test
add
push
or
mov
pop
jno
cltd
mov
movsl
pushf
inc
insl
or
inc
cmpsl
ss
xchg
in
xlat
lret
shrl
inc
out
sbb
mov
out
loope
pop
inc
and
add
push
jmp
lret
inc
or
adc
cmp
in
jns
shr
jg
js
mov
das
out
loopne
loopne
rcl
cli
jecxz
push
test
ret
inc
test
and
addr16
inc
hlt
jp
mov
pop
test
lret
xchg
dec
mov
mov
cmp
gs
push
ror
adc
sbbb
xchg
dec
faddl
call
or
enter
sbb
sbbb
loopne
pop
popa
outsb
add
gs
cld
in
or
enter
out
cmp
jno
test
outsb
jne
mov
ljmp
or
arpl
cmp
dec
xchg
or
add
std
mov
inc
cwtl
shrb
ret
and
add
add
push
mov
xchg
inc
js
add
push
mov
iret
jne
jno
fidivrl
loopne
sbb
movsl
xor
cmc
mov
adc
je
jbe
shrb
xchg
repz
outsb
lock
les
inc
hlt
outsb
sbbb
fbstp
and
fbstp
mov
jmp
mov
add
cli
sub
jo
mov
sub
xor
fs
out
in
mov
dec
and
adc
pusha
fisttpl
jo
xchg
push
mov
or
mov
sti
into
js
mov
cmpsb
mov
stc
popf
movsl
xor
in
or
dec
ret
or
out
pop
jmp
outsb
pop
ljmp
mov
push
bound
cmc
inc
inc
insb
or
adcb
pop
mov
aam
mov
sub
mov
cmp
add
mov
ja
sub
xchg
repnz
xor
jmp
xchg
out
leave
rolb
xlat
push
or
hlt
rolb
movsb
dec
jns
fistpll
das
insb
mov
pushf
fsts
adc
sahf
in
lret
into
pop
sub
adc
inc
test
jg
and
ss
and
out
pop
cmp
mov
inc
mov
int3
and
lcall
jno
push
xor
sti
sbb
mov
arpl
pusha
xor
push
sub
outsl
idivb
cmp
imul
mov
mov
dec
xor
into
lret
and
mov
mov
push
std
inc
lret
leave
sbb
out
aaa
pop
les
sbb
fs
adc
xor
addl
in
push
pop
mov
xchg
mov
imul
lsl
roll
mov
xchg
xchg
dec
fbld
lcall
adc
pushf
jecxz
addr16
mov
mov
mov
cmp
xchg
test
test
dec
mov
add
pop
dec
push
prefetchwt1
mov
sbb
cmc
js
es
pusha
push
fucomip
or
stos
and
mov
pushf
aad
test
sahf
mov
jne
in
jb
cmc
sub
lcall
cmp
jbe
emms
out
hlt
push
scas
dec
pusha
pop
ja
out
out
mov
mov
clc
ja
mov
cmc
cltd
push
scas
ds
or
push
fidivrs
bound
cmp
enter
dec
inc
lahf
mov
or
mov
sbb
wrmsr
sahf
pop
rclb
iret
arpl
inc
enter
pop
in
clc
inc
mov
loopne
jg
lds
jl
or
inc
ja
jns
fcoms
mov
and
inc
and
shlb
dec
insb
in
into
mov
sti
push
inc
pop
mov
movsb
lret
cmp
lret
je
je
adc
add
mov
pushl
rol
es
cmc
sub
pop
cs
add
pop
outsb
and
mov
push
outsb
data16
push
add
out
imul
out
movsl
sahf
sub
sbb
mov
jno,pt
clc
dec
loop
pop
adc
mov
and
push
fcomps
cmp
in
mulb
jns
mov
sub
xchg
sti
xor
addr16
ja
mov
in
loop
notb
pop
std
cmp
dec
rcrb
divl
dec
rcrb
add
sti
lea
pop
push
pop
jl
lds
adc
cmp
aam
subl
xchg
mov
jno
sub
ficompl
popa
fwait
arpl
or
xchg
ja
mov
xchg
pusha
mov
shlb
lret
stos
cmp
inc
shrl
inc
enter
xchg
cmp
adc
insb
cmp
pop
sbb
xor
mov
pop
fs
imul
sbb
pop
out
movsb
mov
lods
bound
aam
je
fstpl
mov
cmpsb
jmp
daa
in
jae
cs
mov
incb
pop
adc
cmp
adc
fdivs
adc
push
push
test
dec
xchg
pop
cmp
inc
mov
scas
adc
mov
fnsave
push
shll
inc
xchg
xlat
divl
mov
cmpsb
push
inc
outsb
lods
inc
xor
mov
inc
sub
mov
push
xchg
adc
adc
jp
ljmp
outsl
imul
push
inc
scas
int
push
ret
mov
andb
nop
sub
fldcw
and
icebp
pop
adc
divl
add
mov
mov
jg
jnp
jae
jl
add
pop
lods
hlt
jl
and
gs
push
pmaxub
inc
sub
pop
push
jge
out
xlat
addr16
sbb
addr16
loopne
pop
jge
mov
cltd
fyl2xp1
mov
jb
dec
cmp
cld
sbb
inc
and
jbe
mov
add
clc
push
or
in
push
in
add
push
shlb
mov
pushl
enter
cmp
cld
inc
ss
xor
data16
dec
pop
add
rorl
js
js
dec
xorl
adc
icebp
leave
xorl
fs
scas
pop
and
sbbl
xor
inc
bound
andl
repnz
shll
dec
push
cmp
inc
xor
cmp
lret
lods
cmc
ja
sub
popf
push
jg
mov
popa
into
loope
in
sbb
cmp
sbb
test
add
push
nop
mov
dec
lret
ja
inc
mov
ss
popf
xchg
adcb
shrb
pushf
pop
or
push
and
xor
imul
rcr
xor
and
or
cmp
adc
rol
cmp
xchg
pop
push
push
and
mov
sbb
sub
in
fstpt
push
aad
aaa
loope
lret
sbb
jne
inc
add
bound
fwait
sbb
jmp
inc
push
mov
lods
or
cmp
movsb
mov
dec
int3
sbb
mov
xchg
aas
adc
xchg
test
loope
gs
xchg
mov
and
stc
movsl
pop
adc
push
data16
adc
lcall
hlt
xor
inc
stc
push
ss
repz
scas
scas
push
push
mov
jae
cmp
repnz
jnp
add
cmc
and
xlat
decl
mov
or
xor
fwait
jae
mov
insb
icebp
mov
loope
add
in
add
push
int
jbe
mov
pop
xor
sbb
rclb
aaa
fucomip
mov
mov
jo
les
dec
jo
dec
inc
inc
scas
xor
fsubrl
out
out
jae
int
pop
mov
shlb
jnp
pushf
pushf
mov
adc
sub
xor
dec
sbb
xor
dec
mov
fstps
or
sbb
dec
ret
push
cmp
scas
lahf
loope
call
in
test
push
inc
cli
or
dec
pushw
sbb
scas
adc
int
or
xlat
dec
in
cmp
cwtl
cmc
imull
mov
loopne
cmc
lea
mov
jo
mov
repnz
daa
jle
in
push
outsl
sbb
push
inc
cmp
sbb
adc
pop
lcall
outsl
shll
std
rclb
fs
mov
jge
add
test
sar
ss
cmp
and
mov
jns
lea
mov
sbb
mov
jne
push
xlat
fnstcw
mov
jl
cmp
xor
jae
jle
adc
cmpsb
and
incb
pop
gs
mov
pop
das
in
mov
iret
sahf
sub
adc
outsl
pusha
cld
or
mov
in
ljmp
fstps
mov
das
jle
pop
je
cmp
pop
cmc
adc
xor
ficoml
xchg
fiaddl
fcoml
mov
mov
sub
push
sub
xor
add
and
or
test
pop
outsb
fwait
mov
in
sahf
jb
cmp
cmp
outsl
addr16
xor
jns
aaa
jne
pop
ret
sub
xor
out
add
add
jbe
sahf
mov
fsubr
jl
mov
mov
scas
hlt
lret
adc
xlat
movsb
or
sub
mov
mov
imul
movsb
mov
push
repz
mov
mov
cmc
xor
lahf
mov
xchg
cmp
sub
add
mov
aam
mov
inc
lock
stos
pop
push
sub
lea
out
xlat
and
scas
sbb
xor
mov
and
xor
lds
and
mov
ret
mov
mov
sub
cli
jp
in
or
int
pop
cwtl
rcrb
lock
test
stos
cmp
aas
add
insb
ds
push
lret
mov
and
fdivrs
push
rorl
lcall
insl
outsl
lret
loope
addb
adc
or
stos
pop
scas
stos
iret
jns
rcrb
subl
insl
ss
repz
xor
mov
mul
add
jp
shrb
xchg
es
pop
dec
xchg
ss
pop
pop
cmovs
insl
fs
fs
pop
jno
sti
push
aaa
mov
adc
popl
inc
mov
hlt
xchg
pop
or
out
cmpsb
rol
pop
test
ret
arpl
ja
mov
insl
mov
xchg
adc
sbb
fcomi
sbb
xsha1
cmpsb
or
repnz
mov
nop
cmp
push
jne
xchg
test
and
and
jl
cs
xchg
mov
sub
sbb
jb
out
pop
push
pusha
pop
popf
push
movl
pop
add
in
loopne
sub
or
sbb
add
jge
mov
daa
add
out
push
jns
jns
rclb
mov
cld
pop
lods
fistpl
aad
mov
rorl
sub
test
mov
sbb
xchg
inc
pop
push
and
dec
cwtl
rcr
push
adc
sub
ja
cmpsb
lahf
movsb
and
pushl
stos
jne
jae
mov
jge
mov
and
xor
aam
jg
daa
sub
shrl
add
pop
rcrl
push
inc
sub
outsb
jecxz
xchg
in
xchg
loop
and
dec
loope
inc
xchg
test
cmp
dec
sbb
loopne
ret
cli
lock
inc
mov
and
out
jl
aad
sarb
das
aas
inc
sub
enter
and
scas
sbbb
pusha
push
sub
dec
lret
ret
stos
inc
in
aam
adc
mov
pop
ja
clc
cmp
xorl
mov
das
jecxz
xor
push
jg
add
push
add
or
push
mov
xlat
sti
dec
pushl
movsb
addr16
arpl
stc
cmc
mov
xorb
push
insb
lea
dec
cwtl
insb
xchg
mov
xor
pop
sbb
cmpsl
xchg
adc
es
sub
fisubl
cmp
jg
push
arpl
xchg
mov
xchg
popf
loope
push
add
cwtl
xor
dec
cmc
jne,pt
jmp
sbb
addb
add
in
lret
jne
push
add
scas
cld
xchg
cmpsb
mov
cmp
push
fs
or
inc
dec
xchg
stc
ret
dec
sti
push
xchg
jnp
hlt
imul
sahf
ss
ljmp
push
pusha
shrl
cltd
xchg
cmp
int3
jne
dec
rcr
out
add
push
movsb
iret
jmp
and
bound
adc
cmp
ss
rcl
mov
stos
lahf
mov
mov
sahf
or
inc
jg
lret
faddl
or
repnz
cli
xchg
jns
sarb
aaa
mov
dec
add
cmp
lahf
push
ret
dec
pop
mov
mov
in
cmpsl
rolb
mov
mov
sahf
lods
ds
jl
imul
mov
jp
sti
or
inc
jmp
hlt
cmp
filds
add
jo
insl
jns
cli
inc
lret
sbbb
add
sbb
insl
or
add
pop
jne
sbb
out
xchg
fsubrs
dec
je
lret
pusha
push
jbe
jmp
in
xchg
fildl
pop
add
jp
push
mov
pop
imul
pop
cmp
cmp
lahf
and
push
aam
xor
sbb
mov
or
mov
popa
sbb
or
pushf
mov
and
and
dec
popf
pop
mov
insl
iret
fisubrl
jmp
or
outsb
movsb
scas
xchg
daa
stc
push
xchg
mov
shll
into
mov
mov
jmp
pslld
pop
and
sbb
or
adc
adc
add
inc
xor
call
in
mov
mov
lret
ss
subb
mov
test
clc
mov
push
adc
or
adcb
test
push
xchg
mov
mov
mov
shld
add
mov
leave
dec
dec
scas
or
sbb
mov
mov
ret
leave
xchg
xchg
inc
inc
adc
mov
lret
lcall
mov
pop
aaa
nop
and
loop
arpl
pop
divb
or
adc
jle
and
fsubrs
push
hlt
add
fsubr
dec
inc
bound
jno
jecxz
hlt
insl
pop
add
addb
mov
in
mov
roll
dec
jle
cmp
mov
or
xchg
adc
mov
jns
cwtl
hlt
leave
jb
daa
aad
mov
inc
pushf
subb
test
sub
leave
xor
or
ret
sbb
mov
pop
dec
dec
icebp
pop
add
jl
leave
int3
fs
sbb
inc
jo
test
rorl
in
insl
mov
imul
movl
mov
rolb
jmp
in
push
aad
jp
adc
fimull
xchg
movsb
push
mov
imul
xor
jp
stos
jge
rorl
lods
dec
lds
jns
pop
out
loope
adc
cmp
loop
lahf
xchg
mov
sbb
imul
popf
xor
popa
adc
mov
pop
pop
pushf
mov
or
or
add
js
mov
ja
popf
dec
sbb
pop
xor
or
js
sar
mov
sti
xor
rol
mov
lea
in
pop
into
aam
into
insb
dec
or
mov
and
lret
push
iret
cmp
nop
in
int
lods
js
mov
xchg
mov
xor
popl
fld1
lods
test
mov
push
sub
sbb
sub
in
jle
xor
or
sbb
cwtl
jne
mov
mov
pop
jae
test
enter
xor
mov
mov
shll
add
insb
pop
jle
test
dec
pop
fnstsw
sub
enter
out
xchg
outsl
sbbl
adc
cmc
jp
cmpsl
out
out
daa
push
notl
sub
aas
pop
test
ds
popf
sub
adc
mov
mov
testl
xchg
mov
in
dec
imul
cmpsl
int3
mov
push
xchg
push
jmp
shrb
and
jmp
daa
cmp
adc
jp
pop
xchg
mov
jne
dec
andl
add
jbe
stc
mov
push
negb
flds
iret
xor
adc
sub
scas
sub
std
std
inc
xchg
das
adcl
mov
hlt
sti
sarb
mov
cmp
xchg
and
adc
cmp
or
repz
out
pop
adc
lea
and
add
in
mov
adc
sbb
dec
ret
push
orl
inc
dec
push
mov
test
add
adc
push
xor
mov
leave
jns
pop
sbb
into
fimuls
fwait
xchg
jmp
add
add
fidivl
aaa
jmp
roll
sti
pop
test
mov
xlat
and
push
or
rcr
lret
jns
mov
fstps
out
xlat
cmc
xchg
push
xchg
out
in
inc
push
and
xor
fwait
sbb
adc
fidivs
dec
or
std
jbe
push
fmul
pop
outsb
js
sbb
cmpsb
dec
cmc
dec
out
jl
inc
repz
inc
lods
sbb
orb
cltd
cmpb
pop
fwait
subb
xor
fstpl
push
jb
aad
fbld
addb
adc
mov
outsb
enter
hlt
mov
or
dec
loopne
pop
leave
pop
inc
jo
mov
es
xchg
insl
jmp
insb
mov
ja
inc
add
test
jge
inc
xor
and
lock
sub
or
pusha
fwait
sub
push
test
mov
les
icebp
add
and
test
fcmovne
enter
jo
adc
xchg
add
rcrl
cmp
mov
jl
mov
mov
mov
push
adc
adc
outsb
mov
add
mov
jbe
loope
xor
jne
jle
jbe
mov
add
sti
shll
add
outsb
ss
sub
adc
mov
popf
mov
shlb
mov
push
add
sub
push
es
scas
or
out
aas
outsl
das
lcall
fldenv
add
test
push
xor
movsl
xor
add
lcall
out
popa
or
dec
aad
cmp
push
outsb
arpl
jno
mov
movsl
gs
adc
shll
pop
push
daa
push
xchg
iret
cmp
pop
mov
adc
bound
xchg
test
jp
sbb
adc
dec
adc
imul
imul
pop
mov
cmc
inc
addl
add
inc
mov
mov
xchg
test
insb
push
shr
outsb
jns
outsl
sbb
test
ljmp
enter
dec
dec
aam
movsl
add
nop
rolb
inc
out
sbb
add
mov
sbb
or
out
cltd
mov
or
jnp
shll
sub
xor
mov
pop
cmp
rcl
rcl
and
ja
clc
in
push
push
test
les
test
addb
jns
call
mov
inc
jno
xchg
int3
scas
sbb
loop
mov
push
lock
inc
scas
pop
pop
insl
sarb
add
ja
cmp
enter
leave
mov
add
xor
mov
sbb
jg
jae
pop
jnp
inc
sbb
sbb
and
cmpsl
xchg
cltd
fimull
and
pop
mov
lret
lods
insl
and
call
pop
sub
scas
inc
jecxz
push
pop
inc
xchg
or
mov
xor
mov
pushf
addb
mov
loope
dec
adc
loopne
xchg
push
adc
xchg
scas
es
rolb
fs
incl
adc
decb
or
les
cltd
pop
jmp
popfw
daa
rcr
nop
add
scas
lea
shlb
cmpl
js
or
xchg
xor
xchg
dec
mov
pop
fs
scas
stos
lods
and
std
sti
lcall
out
stos
fwait
mov
out
loopne
fisubl
jnp
loop
ja
pop
dec
lret
cmp
mov
and
push
pop
cmpsl
popa
fistl
and
push
ret
pushf
mov
pop
add
iret
ret
ss
and
pop
in
out
aam
fdivrl
lds
and
add
mov
add
ja
or
sbb
add
xor
lods
jl
xor
xorl
lahf
xchg
repz
bound
mov
push
push
pushf
sub
adc
negb
imul
dec
or
mov
sub
test
sub
cmp
adc
dec
out
ds
les
aaa
sub
ret
add
fcomip
daa
leave
adc
add
test
mov
jo
imull
mov
es
pushf
js
cmpsl
push
lret
jecxz
push
mov
fbstp
dec
pop
int
in
mov
sahf
insb
inc
das
xorb
jmp
mov
mov
leave
ffree
jl
mov
push
cmpsb
pop
inc
or
lds
sub
sarb
mov
and
mov
cmp
push
jmp
sti
in
push
and
mov
test
xchg
pushf
aas
cmp
das
outsl
jmp
jmp
xor
push
add
fmuls
mov
fcmovnb
inc
cwtl
aas
fisubl
xchg
leave
sbb
fidivl
rcrb
ljmp
mov
ret
sbb
xchg
adc
dec
loopne
in
sub
fsubrl
test
sarb
adc
loopne
jne
rorb
insb
out
insl
pop
ret
lahf
das
push
js
pop
fmuls
sub
adc
xchg
mov
cmp
mov
lods
sub
dec
dec
je
mov
ds
mov
mov
jle
outsb
mov
sbb
shll
in
popa
movl
jno
fcoms
cmp
sbb
mov
pushf
les
iret
addl
stos
lret
leave
mov
push
push
jnp
adc
xchg
lods
add
dec
imul
sub
aam
xchg
cmp
pop
pop
sub
xor
pop
aam
sbb
cld
leave
into
mov
add
lret
outsl
bound
inc
and
mov
rcl
insl
pop
outsb
jmp
and
out
jl
mov
jo
cwtl
add
xchg
sub
les
lret
lods
cmp
loopne
or
adc
imul
mov
jnp
inc
enter
adc
imul
push
in
add
outsb
pop
ror
jmp
xchg
mov
mov
repnz
inc
dec
mov
fistpll
sbb
fcoms
adc
push
andb
mov
sahf
push
lea
adc
ss
sub
jecxz
shll
push
das
scas
repz
xor
push
mov
jne
leave
jmp
add
sub
scas
leave
outsb
mov
cli
mov
xchg
adc
pop
add
repz
mov
jge
xor
fldt
or
arpl
scas
cmp
outsl
scas
or
inc
pushf
lods
fwait
and
sbb
and
pushf
xlat
shll
ja
fs
inc
push
cmpsb
sbb
sbb
fs
and
fwait
rolb
mov
iret
das
out
adc
scas
cmc
and
lock
dec
inc
bound
sbb
iret
cs
dec
add
ds
xor
fwait
inc
add
adc
push
lahf
mov
xor
iret
jl
int
mov
jle
cmpsb
mov
mov
testb
and
loop
dec
jmp
add
arpl
adc
xchg
enter
pop
aam
leave
cli
int
mov
mov
je
cld
arpl
out
orb
or
cltd
aam
movsb
mov
popa
jb
jg
push
imul
lods
ja
push
or
addr16
lret
cwtl
shll
movsl
add
sub
fs
divl
jnp
dec
gs
xor
xchg
adc
jle
call
mov
sbbb
js
shrl
jb
ror
dec
push
fcoms
loope
inc
imul
mov
cmpsb
lea
ret
dec
aas
dec
sbb
cmp
add
push
repnz
mov
ss
dec
icebp
imul
mov
xchg
lret
adc
inc
pop
in
jae
cmpl
sbb
clc
push
mov
sbb
movsb
push
subb
scas
in
inc
jge
xchg
inc
xchg
push
mov
imul
loopne
add
in
pop
xchg
sub
das
jp
pop
lcall
rorl
dec
clc
dec
inc
or
dec
bound
push
pop
xor
mov
fmul
nop
imul
xorl
imul
jle
jl
jp
pop
cld
sbb
push
mov
pop
mov
mov
jecxz
sbb
shrl
mov
dec
sahf
pushl
sti
and
rcll
adc
pop
cmp
popf
inc
je
pushf
pop
mov
imul
push
sub
cmp
daa
aas
mov
loopne
cld
sub
fsubl
mov
xor
in
push
mov
xchg
mov
xor
or
and
movsl
ds
loopne
cmp
fdivrl
icebp
pop
les
pop
cmp
xor
repz
int3
das
hlt
ljmp
adc
pushf
mov
xchg
sarl
ljmp
sub
mov
in
popl
in
or
pop
fs
fidivrs
dec
jp
adc
pop
shlb
xchg
sahf
out
lods
aas
sbb
mov
ret
lods
xor
mov
jne
sub
fcmovnb
xor
pop
stos
inc
clc
movsb
das
bound
sahf
pusha
rcll
pop
or
push
in
repnz
xor
test
push
add
call
fsts
mov
jns
xchg
and
xchg
rolb
sahf
mov
and
ret
mov
sub
inc
shll
sub
cmp
dec
dec
arpl
stc
aad
xchg
das
push
movsl
xor
add
sahf
cli
xchg
arpl
das
js
or
stos
roll
jmp
dec
and
movsb
testb
add
inc
arpl
cmp
sahf
sahf
pusha
mov
jmp
jecxz
or
jecxz
dec
imul
sbb
fsub
loop
and
cs
or
pop
daa
dec
repnz
adc
mov
sbb
test
leave
fcompl
jo
xchg
xchg
repz
mov
cmpsl
test
in
std
ds
cmp
pop
outsb
pop
loope
scas
mov
insl
mov
popf
xchg
js
mov
inc
or
push
cld
mov
ss
rcrb
hlt
jae
or
rorl
out
fistpl
and
es
adc
push
lock
mov
and
dec
mov
jb
lret
mov
gs
stos
add
in
ds
sub
mov
ljmp
femms
scas
test
outsb
fwait
push
add
out
in
cmc
push
hlt
xor
cld
fs
loope
icebp
rep
pop
insb
loopne
in
xchg
and
loope
mov
jg
aas
push
add
repz
in
push
loopne
lret
cmp
js
out
sbbl
xchg
lret
inc
fisttpll
mov
xor
xlat
push
mov
lds
incb
mov
fsubrl
mov
or
lock
ds
cmpsb
cmp
jecxz
push
mov
pop
repz
cltd
rol
mov
bound
les
sbb
sub
ret
push
icebp
fucomp
aas
cwtl
xor
jne
bts
in
fldt
pop
cmp
nop
xor
xchg
mov
inc
iret
dec
cwtl
or
sub
fsubrs
call
subl
add
cld
test
notl
adc
sub
das
orl
outsl
in
scas
and
adc
iret
cmp
stos
push
lret
sub
outsl
mov
mov
cmpsb
mov
mov
dec
ss
sahf
lods
mov
int3
sarl
insl
fistps
pusha
jbe
mov
sar
mov
add
rol
pop
pop
fwait
mov
xchg
jns
scas
sub
in
mov
add
inc
aaa
mov
xchg
scas
xorb
mov
rep
jbe
faddl
in
jne
mov
pop
cmpsb
jmp
aas
lret
sbb
addl
mov
js
out
sub
cs
fildll
cmpsb
daa
shr
pop
mov
scas
sbb
mov
and
pop
idivl
filds
inc
mov
aas
daa
int
fldl
xlat
xchg
pop
jmp
mov
call
stos
jecxz
mov
pop
and
dec
jge
cmp
imul
xchg
dec
ja
mov
xchg
pop
lods
xor
jmp
xchg
test
sbb
and
icebp
xor
mov
mov
test
stos
lock
mov
mov
hlt
cmpsb
cltd
ret
dec
xor
lahf
pop
mov
mov
or
add
mov
imul
enter
test
sbb
sarb
pop
nop
mov
pop
outsb
dec
fidivl
lods
add
xor
adc
loopne
out
mov
mov
outsl
shr
xchg
jnp
xchg
pushl
add
add
fs
dec
push
fs
adc
xchg
mov
inc
movsb
sbb
data16
loop
cmovb
sbb
sbb
sub
or
and
dec
sub
es
pop
mov
cmp
sar
add
and
js
mov
daa
mov
inc
push
rcrl
sbb
movsl
pop
jge
clc
and
in
xchg
mov
mov
cmpsb
pop
std
adc
sbb
ds
jns
and
iret
lea
xchg
and
push
sqrtps
ror
xor
xlat
mov
pop
sbb
nop
jge
and
cmp
lret
push
xchg
dec
jl
iret
loop
mov
leave
adc
imul
jecxz
data16
pop
repz
pushf
bound
imul
adc
call
je
out
mov
sbb
inc
ret
nop
dec
jmp
push
mov
icebp
fildll
inc
jp
dec
cmp
fiadds
das
sub
mov
jnp
xor
ja
addr16
ss
orb
inc
jge
xor
sbb
or
add
inc
aas
fsubrl
lods
push
test
fistl
push
jecxz
cmc
cmpsl
cmpsl
aas
mov
mov
push
xchg
mov
pop
add
repz
xchg
test
les
push
push
xor
das
fs
add
scas
adc
lds
fisubrs
insl
int
mov
jns
push
inc
or
jbe
dec
cli
lret
mov
sub
test
push
test
out
pop
mov
fcompl
push
ds
mov
ret
adc
pop
mov
pop
nop
les
js
addl
push
adcl
mov
or
mov
cmpsb
mov
xor
shll
in
out
cmp
jl
fistps
cmp
and
dec
popa
mov
adc
sbb
add
js
fwait
in
and
inc
jle
push
mov
shrl
les
pop
jmp
adc
adc
dec
push
das
push
frstor
push
xchg
sub
lds
lcall
add
call
mov
cltd
jne
sbb
movsl
push
clc
shrb
js
mov
jnp
dec
inc
xor
fidivrl
and
mov
out
xor
movsl
popa
add
stc
loopne
xor
inc
clc
and
cld
pop
sbb
xchg
adc
inc
cmpsl
mov
mov
xchg
dec
lar
sbb
into
fsts
lret
sahf
sbb
lods
mov
mov
jbe
pop
dec
iret
aam
and
lds
jmp
out
adc
mov
aaa
into
dec
add
daa
push
pop
inc
insl
fldt
inc
push
lock
cmc
adc
xchg
mov
mov
mov
xchg
sbb
test
sub
xchg
sub
sbb
sub
outsb
adc
mov
adc
inc
jb
mov
lret
xchg
mov
ds
stc
lods
pop
fwait
xor
cld
inc
cmp
jnp
sub
push
out
xchg
sub
push
and
fmuls
das
push
jb
rorl
sub
dec
jns
mov
hlt
cli
fmul
int3
test
ja
out
in
inc
enter
sbb
pushf
push
cmpsb
hlt
icebp
fbstp
and
fcomps
push
or
popa
mov
xchg
mov
jmp
pop
xchg
sub
mov
hlt
jno
push
mov
xor
push
clc
repnz
loop
subl
int
lods
lea
lods
add
nop
sub
xchg
add
paddusw
mov
pop
sarl
jne
sub
out
fwait
scas
mov
ret
movsb
sbb
imul
es
idivb
das
into
lock
ret
loopne
fisttpl
cmp
cld
cmpsb
mov
lea
fst
jns
mov
cmpsb
lock
pop
push
lcall
xor
xchg
std
mov
mov
jo
cmp
inc
mov
rcr
push
xor
pop
icebp
dec
adc
fs
rcrb
lret
bound
inc
inc
les
test
mov
push
dec
aas
mov
inc
cmc
xor
aam
jae
xchg
mov
pop
jbe
ljmp
dec
addb
mov
into
mov
cwtl
mov
into
mov
pop
cli
mov
jge
outsl
xchg
addl
push
movsl
cmc
ljmp
xchg
dec
mov
mov
fbstp
mov
ljmp
mov
mov
push
mov
cmpsl
jecxz
dec
ret
cmp
xor
lret
adc
mov
xchg
test
add
jmp
pop
push
xchg
pop
add
adc
mov
dec
jns
sbb
xchg
lods
cld
js
sub
dec
jns
test
mov
jp
mov
loop
repnz
repz
ljmp
sbb
clc
sub
shlb
sbb
pusha
pop
xchg
cmp
sbb
rol
pop
mov
add
mov
data16
std
addr16
int
push
push
inc
cmpsb
fidivl
jnp
std
enter
mov
ret
inc
test
dec
aam
cmc
outsb
call
jl
pushf
fimuls
sbb
adc
sbbl
sub
adc
jl
into
fists
inc
movsl
cmp
mov
in
pop
mov
xor
outsb
ljmp
and
sub
imul
into
imulb
cmpsl
mov
xchg
jp
inc
testl
sbb
dec
arpl
not
dec
pop
and
and
cmp
xor
pop
ficoml
cltd
or
sbb
xchg
pusha
xchg
out
loope
popa
roll
int3
adc
pop
mov
sarl
sbb
xchg
and
sbb
js
insl
hlt
mov
cmp
dec
xchg
sbb
mov
sub
jmp
dec
push
xor
lods
xchg
call
fdivs
idivl
and
hlt
notb
cmp
scas
loopne
xchg
sbb
mov
daa
popa
adc
bound
mov
frstor
cmp
mov
fnstenv
shr
into
pop
sbb
inc
pop
pop
push
jae
in
or
negl
xchg
test
mov
in
xlat
mov
data16
sub
aaa
out
inc
pop
sbb
sub
stos
icebp
pop
mov
cmc
mov
repz
xchg
push
ret
mov
fidivl
stos
pop
pop
cld
std
in
ds
andb
mov
fnstcw
in
cld
stos
loop
add
jp
and
mov
mov
nop
add
dec
rorl
cmp
testl
movsb
rcll
jl
mov
and
outsl
nop
add
xchg
cmp
and
xlat
jmp
dec
dec
mov
mov
push
cli
outsb
xchg
out
pop
icebp
xchg
movsl
or
sbb
adc
or
loopne
push
dec
and
mov
or
push
lods
jg
mov
outsl
lds
test
inc
add
test
aam
lcall
cld
imul
divl
inc
mov
aas
dec
adc
out
std
inc
push
sahf
imul
pop
lcall
sbbb
xlat
add
mov
mov
push
cmp
mov
das
lods
jo
xorb
out
dec
xchg
adc
mov
fwait
scas
mov
in
call
xchg
ljmp
sub
adc
je
pop
sub
sub
shlb
xchg
insb
popf
lret
in
sub
adc
adc
and
xlat
and
stos
jne
movsb
aaa
adc
cmc
dec
mov
inc
jne
pop
xchg
push
inc
sbbb
sarl
popa
ja
pop
mov
adc
cli
in
dec
aas
fistpll
sub
outsl
sbb
mov
rcll
enter
test
fsubrl
adc
fisubrl
cmp
pushf
fildl
fs
lcall
mov
push
sub
and
sub
dec
stc
xor
jle
scas
cs
cmove
cmp
imul
ret
ret
mov
add
jecxz
pop
xorb
mov
pop
pushf
adc
add
cs
inc
mov
jl
mov
cmp
sti
adc
dec
adc
aaa
ficoml
or
sbb
loopne
out
inc
add
adc
repnz
mov
andb
mov
rcl
push
sbb
dec
sub
push
ret
lods
mov
mov
sbb
sbb
call
iret
cmp
push
shr
pop
ljmp
lcall
mov
dec
pusha
cmp
ljmp
cmpsl
and
jl
clc
adc
jecxz
adc
arpl
cmpb
in
int
dec
push
add
arpl
shlb
add
mov
ljmp
aas
fdivrl
push
mov
jns
xchg
adc
jl,pn
outsb
fcomp
pop
push
or
inc
in
and
pop
adc
xchg
and
inc
les
xchg
xchg
push
add
sub
ror
movsb
push
xor
ret
jecxz
mov
sbb
mov
mov
or
xor
clc
int
pop
lock
and
adc
or
dec
mov
shlb
adc
and
push
xchg
mov
push
jmp
test
push
call
and
jge
pop
and
mov
sub
loopne
pop
mov
popf
cwtl
jne
sub
push
inc
dec
jns
or
mov
mov
das
mov
cltd
xlat
sub
stos
fsub
adc
xchg
sbb
push
inc
ja
dec
and
push
jnp
loope
cli
fsts
repnz
xchg
jg
xor
stos
iret
out
outsl
cltd
dec
push
pushf
scas
jg
adc
pop
inc
inc
cli
sbb
shll
mov
ret
sar
bnd
ficompl
xlat
out
out
cmp
push
mov
inc
xchg
xor
sub
cmp
data16
mov
nop
mov
xchg
arpl
addb
loopne
mov
nopl
dec
mov
inc
cmpsl
and
and
out
loop
mov
push
test
out
test
into
js
xchg
out
jb
xor
aam
lcall
dec
mov
cwtl
mov
mov
cs
sub
stos
in
scas
add
sarl
sbb
pop
stos
xor
inc
inc
or
push
lea
orl
xor
sub
shll
cli
lsl
push
les
out
xlat
pop
pop
cmp
dec
push
mov
push
push
add
pop
sahf
cmp
in
inc
sbb
pop
test
xlat
out
stc
and
gs
ja
pop
push
cltd
xchg
orb
inc
fwait
lret
pop
aad
scas
fcomi
add
xchg
push
outsl
call
push
mov
push
ja
cs
xor
lret
push
sbb
andb
bound
shrl
movsb
pusha
xchg
and
mov
inc
and
mov
fdivl
jb
aas
pop
sbb
jno
loopne
aas
ret
cmc
push
inc
inc
aad
cmc
lcall
pop
xchg
repz
jne
inc
and
fs
mov
sbb
fwait
inc
std
and
push
mov
pop
sbb
es
sbb
pushf
jle
cmpsl
xchg
mov
push
lret
jne
lods
sarb
popf
jns
or
clc
mov
cmp
popa
mov
shl
jg
rcr
jg
sub
jns
sbb
mov
test
cmp
inc
lret
xchg
popa
dec
outsb
fwait
jns
in
addr16
mov
cwtl
pop
push
jno
jecxz
pop
and
sbb
scas
mov
mov
je
pop
inc
mov
cmp
icebp
inc
aad
adc
xchg
mov
pushf
sub
add
cld
popf
insb
ficomps
lds
into
popa
pop
jae
dec
sub
icebp
lock
cmp
cltd
ljmp
cs
push
and
fists
lock
notl
push
fldenv
inc
flds
push
and
inc
dec
jle
inc
data16
cmc
push
cs
scas
and
jp
xor
dec
and
sar
push
sub
mov
jae
out
mov
hlt
aam
jo
outsl
adc
stos
stc
mov
fistpll
in
pop
iret
jae
out
mov
cmp
movsl
cmp
xor
mov
xchg
adc
movsb
add
cmp
leave
sub
ds
xor
sahf
cmc
inc
test
ljmp
fs
and
add
pop
rclb
gs
lods
imull
es
shrl
test
add
mov
and
sbb
lahf
arpl
mov
push
xchg
leave
mov
enter
fistpl
rorl
fsubl
pop
inc
xchg
push
sub
call
push
push
outsb
pop
add
imul
mov
std
xchg
inc
add
aad
jns
lret
cmc
cmpsb
mov
bnd
xchg
sub
jecxz
pop
dec
cli
xchg
loop
test
mov
call
add
inc
repnz
call
sbb
push
pop
fnstenv
add
sub
dec
push
adc
push
nop
mov
cltd
and
ret
pop
out
inc
daa
ljmp
aad
inc
stc
dec
das
inc
xchg
fistpll
xor
addr16
cs
fwait
dec
lret
or
lds
jmp
and
xchg
mov
test
mov
pushf
into
lea
mov
fidivrs
repnz
mov
mov
movsb
into
cmc
add
push
mov
ss
imul
mov
leave
adc
xor
sub
out
lds
inc
inc
sti
jge
insb
pop
inc
push
test
pop
mov
ja
lret
jl
push
xchg
sbb
loope
push
push
inc
adc
add
sti
push
cmp
lret
outsb
inc
lds
inc
gs
inc
scas
in
adc
pop
push
out
sar
shll
test
pushf
test
ret
sub
mov
and
ficoms
push
loop
and
iret
sub
jp
mov
push
push
mov
fwait
push
lods
push
insl
loop
push
and
xchg
and
ss
pop
pushf
and
pop
dec
jnp
jns
frstor
push
jnp
jge
add
ljmp
lds
outsb
mov
push
push
xor
sub
in
outsb
mov
inc
pop
mov
lahf
xchg
repnz
enter
xor
iret
aam
aas
stc
xchg
push
dec
scas
cmc
div
dec
adc
mov
push
dec
jne
test
mov
mov
sbb
cli
jle
jmp
add
pop
xor
and
jnp
jbe
mov
into
push
pop
ret
or
sbb
and
jp
cmp
push
lret
mov
mov
push
or
xchg
inc
pop
ror
outsb
iret
and
cmpsb
pop
out
xchg
clc
stos
enter
sbb
mov
pusha
xorl
das
les
ljmp
pusha
ja
pop
mov
lcall
cmp
mov
mov
sub
rolb
pusha
jns
dec
fisubrl
les
jbe
imul
pop
movsb
or
jmp
cmc
inc
dec
enter
xor
and
dec
cmp
xchg
sbb
push
add
xor
out
pop
sti
mov
dec
lret
mov
mov
ljmp
mov
ficompl
pop
push
xchg
pop
clc
lahf
shll
test
jmp
sub
adc
aam
push
push
test
sub
js
push
add
lods
xlat
dec
mov
in
sbb
and
jle
dec
push
mov
jp
scas
push
sub
call
daa
adc
daa
xchg
dec
or
fiaddl
push
cmp
sub
pop
lret
or
push
ljmp
pop
jmp
rcr
dec
ret
xchg
leave
pop
testl
push
mov
and
mov
ds
mov
inc
sti
ds
lret
xchg
xchg
repz
push
xchg
ss
xchg
jnp
inc
and
stos
dec
xor
xchg
out
cmp
xchg
loopne
push
jle
fs
es
enter
adc
sbb
aaa
rcrl
dec
or
mov
out
hlt
mov
lods
ja
stos
cltd
mov
fisubrl
loopne
lea
fincstp
adc
adc
adc
jp
ds
and
mov
push
in
dec
std
cmp
sarl
or
inc
cs
xor
fdivrl
lret
mov
test
out
icebp
test
mov
pop
adc
out
xorl
test
cmp
add
int
fldl
in
xor
mov
mov
rcrl
mov
mov
daa
stos
xor
fcmovnbe
add
xlat
mov
mov
sbb
int
mov
or
lods
loopne
int
mov
adc
mov
lock
popf
clc
sti
mov
dec
inc
out
pop
std
pop
jl
mov
in
pop
and
sti
lret
repz
loopne
in
jg
pop
arpl
pop
sbb
ds
mov
cmp
sbbl
xchg
lret
in
fmul
popf
loopne
xchg
into
mov
lret
sub
stos
stos
arpl
arpl
dec
mov
sbb
imul
clc
sbbb
sahf
xor
loopne
push
push
add
jecxz
repnz
int
push
stos
outsl
cs
fcomps
ds
arpl
jae
xor
lds
ret
jmp
xor
push
pusha
and
insb
pop
cmp
lds
out
mov
arpl
sbbb
or
push
mov
cmp
push
pop
mov
bound
sahf
sub
inc
xchg
adcl
mov
aas
cmp
repz
xor
xor
test
dec
xchg
add
and
stos
lcall
test
lahf
xor
mov
dec
sahf
cmp
mov
js
sbb
sbb
push
cmp
mov
mov
addr16
inc
cmp
dec
inc
mov
or
test
popf
add
or
mov
jle
dec
pop
outsb
rclb
aaa
adc
test
jle
push
flds
mov
mov
sub
sub
das
mov
push
sbb
cmp
xor
cvttps2pi
sbb
ret
test
push
ss
vsubss
arpl
fisttpl
in
adc
mov
mov
imul
mov
shlb
ss
or
ds
jmp
jge
sti
push
int
insb
cwtl
sub
adc
fdivl
test
and
loope
cltd
pop
out
pop
loope
mov
and
icebp
pop
sbb
push
test
in
push
adc
mov
or
add
dec
jae
pushf
data16
fisttpl
es
xchg
mov
xlat
and
xchg
in
and
mov
repnz
das
iret
and
loop
cmpsb
fdivr
push
mov
and
fidivl
lods
pushf
pop
je
sub
stc
es
arpl
mov
adc
loopne
cmpl
xlat
pop
push
jmp
lahf
mov
cmpsb
cwtl
call
ret
leave
mov
lcall
push
mov
pop
repnz
jae
popa
ds
dec
and
xlat
fldcw
sub
pusha
in
es
imul
out
imul
sarb
and
es
fstl
xchg
mov
fistpl
ret
push
mov
into
xchg
fs
rdtsc
js
iret
or
int3
pushf
pop
pop
add
xchg
clc
outsl
mov
scas
jae
mov
cmc
xor
sbb
dec
adc
jns
das
insb
xchg
jmp
loop
pop
divb
push
rorb
test
xchg
mov
rolb
ds
test
mov
xchg
fcompl
fidivs
sbb
pop
aas
xor
sub
sub
lock
adc
lahf
pusha
and
xorb
mov
pop
mov
addr16
inc
insb
imul
pop
inc
into
push
rcrb
arpl
inc
std
jp
xor
test
add
and
push
or
cmp
xor
xor
clc
fbld
jnp
out
jne
sbb
aaa
jle
cmp
adc
inc
and
mov
cmp
mov
mov
or
movl
in
jmp
int
push
mov
js
jle
stos
rcrb
jb
xchg
adc
lcall
or
les
or
dec
pushf
cld
test
mov
ds
sub
pop
xor
inc
je
cmp
jno
insl
cs
xchg
addr16
test
ret
add
dec
test
xlat
pusha
add
dec
xchg
xchg
cmpl
add
stc
icebp
and
jne
mov
sub
push
jns
inc
enter
nop
pop
push
mov
fildl
dec
inc
fwait
into
rcl
jae
jg
sub
cmp
pop
xchg
pop
sub
push
frstor
ficompl
out
add
test
call
jg
shl
roll
push
out
sbb
sub
iret
sub
add
inc
movsl
dec
dec
jge
sbb
outsl
loopne
loop
fbstp
jns
push
dec
arpl
jae
mov
pop
movsb
sub
stc
in
mov
mov
jo
mov
in
clc
iret
imul
or
sbb
dec
xor
in
lods
in
lret
xor
fldl
int3
scas
pop
jno
push
out
cltd
jmp
add
or
icebp
out
pop
push
addr16
dec
xchg
das
add
xchg
subb
cs
xchg
inc
cmp
ljmp
lahf
imul
inc
aaa
repnz
ljmp
sti
outsl
in
imull
out
pop
loope
stos
inc
and
dec
ja
push
sahf
mov
pop
ss
jge
mov
sub
xor
pop
mov
push
and
cmp
pcmpgtd
xchg
lahf
scas
popf
push
nop
js
int
jmp
outsb
adc
pop
add
and
push
xchg
jp
shll
mov
movb
ljmp
nop
sbb
sbbl
fiaddl
sbb
cli
sub
imull
or
testb
mov
sub
and
mov
and
rcl
inc
and
pushf
push
stos
enter
fildll
and
mov
int3
into
and
sbb
pop
inc
shll
jecxz
mov
jae
xor
stc
mov
pop
testl
in
std
mov
or
inc
jmp
adc
mov
decb
nop
popa
cltd
xor
mov
mov
cli
lret
mov
add
pop
flds
out
or
sbb
sbb
jge
cmpsl
push
test
xor
push
imul
lea
fbstp
cld
shll
cmp
in
popa
jns
dec
jge
insl
shlb
xchg
add
ss
xchg
aas
ja
xchg
into
mov
mov
lea
pop
mov
push
inc
insl
das
lea
dec
fdivrl
je
mov
jae
aaa
jo
jmp
mov
repz
pop
es
test
jl
out
movsl
test
lret
decl
xorb
xor
mov
aad
mov
lds
sub
out
enter
adc
jbe
test
popf
mov
fsts
add
dec
mov
arpl
xor
mov
movsb
dec
jbe
cmp
fisubrl
int3
add
mov
jecxz
mov
add
cmp
nop
fstl
push
jg
push
xchg
pop
rcl
pop
inc
or
xchg
xchg
ss
sub
mov
push
leave
mov
rcll
iret
stc
imull
inc
mov
nop
mov
lea
add
cwtl
lret
lahf
dec
push
jbe
fdivl
popf
incb
jge
sub
xchg
pop
in
jo
jbe
int3
adc
es
jbe
cmp
es
add
arpl
rcll
mov
push
das
xchg
ret
dec
popf
out
inc
mov
push
jo
or
pop
in
sbb
lods
inc
mov
push
mov
and
test
jge
cld
insb
or
in
push
in
fsub
push
mov
pop
mov
aad
sbb
testl
leave
inc
jo
arpl
xchg
cmc
mov
jg
cmp
ljmp
les
nop
fmull
xchg
popa
xchg
loope
fstpl
fstpl
repz
xlat
rorl
ja
jp
cli
fs
sub
add
inc
outsl
push
scas
rorb
orb
repnz
test
mov
cmp
pop
pop
mov
or
pop
lret
mul
popa
stos
out
popa
loopne
xor
or
je
xor
hlt
les
scas
pop
dec
dec
insb
inc
mov
jnp
std
daa
mov
or
ljmp
or
mov
cmpsb
inc
bound
ret
hlt
inc
mov
add
mov
lret
jmp
popa
cmp
adc
sbb
paddusb
in
jo
fildll
pop
cld
cmpb
imul
dec
push
jl
mov
pop
dec
adc
jp
and
fldt
aam
scas
adc
std
push
xchg
shrb
adc
les
arpl
push
jne
insb
das
jecxz
dec
xor
shrl
mov
jnp
add
ljmp
jae
xchg
cmp
call
push
pushf
or
imul
xor
mov
mov
inc
repnz
idivl
bound
js
push
jo
push
push
push
es
adc
or
lret
mov
les
dec
jp
pop
inc
sbb
adc
dec
rdmsr
adc
cmp
fisubrs
fmuls
adc
out
subl
sub
xorl
cmp
mov
xchg
mov
mov
lea
dec
adc
inc
cmp
push
mov
or
jg
sbb
stc
cs
ret
aad
push
imul
adc
sbbl
test
sbb
sahf
test
push
inc
and
xor
lds
cli
jb
fcomps
iret
outsl
cmp
int3
and
sub
jae
cli
rorl
xchg
cmpsl
lret
cmp
and
imul
out
outsb
daa
cmp
bound
add
daa
or
jae
outsl
in
mov
cmp
pop
cwtl
imul
push
cmp
mov
inc
xchg
jl
add
mov
fists
jb
out
dec
jle
ret
pusha
and
xor
xchg
mov
and
lahf
and
in
adc
scas
add
and
add
pop
and
or
sub
inc
mov
int
cmc
cmpsb
dec
mov
mov
xchg
sbb
adc
fs
push
dec
fisttpll
mov
xchg
cmpsl
dec
push
mov
addr16
imull
daa
jae
mov
xchg
jnp
cmp
es
or
fwait
pop
fstps
aas
pop
pop
fs
fwait
add
dec
dec
push
mov
cmc
cmp
pushl
inc
aam
insl
inc
lea
xor
cmp
mov
dec
push
and
jne
xor
jmp
into
add
push
insl
fstp
mov
push
xlat
popf
dec
add
cmp
insl
iret
jnp
jecxz
imul
jae
jnp
pop
xchg
pop
fisttpll
inc
test
push
sbb
xor
jns
loopne
sarb
pop
test
sbb
or
mov
sub
jle
ds
xchg
bound
mov
outsl
pushf
push
outsb
inc
cli
xchg
pushf
sub
ss
int
add
jmp
out
push
jno
outsb
je
test
mov
push
mov
inc
mov
inc
pop
mov
fidivl
push
cltd
inc
inc
mov
cmovp
sbb
lock
cmp
int3
inc
sbb
lret
rorl
inc
sbb
jae
lods
xchg
das
jge
xchg
cwtl
push
daa
or
add
pushf
insb
cmpsl
mov
push
jae
sbb
push
push
pop
pop
add
lods
xchg
lret
sbb
stos
out
mov
mov
cmp
mov
mov
push
inc
mov
jg
sub
stos
xchg
add
xor
or
hlt
aam
fst
or
shl
jne
icebp
pop
movsb
xor
inc
sbb
cmp
repnz
in
test
pop
inc
jo
into
fistpll
cwtl
stos
add
pop
or
sub
int3
mov
xchg
mov
cmp
mov
mov
jbe
sub
aaa
fwait
ljmp
jge
stos
lahf
push
sbb
or
popf
xor
mov
movsl
gs
iret
mov
xchg
pop
ss
cmp
jp
leave
int3
and
pop
es
xchg
nop
idivb
imul
pop
scas
shr
pop
dec
movsb
mov
dec
hlt
jbe
insl
adc
movsl
cmp
jo
daa
imul
fnstenv
mov
icebp
push
das
or
mov
in
les
into
jmp
or
nop
jae
fmuls
ljmp
test
xor
stos
xor
adc
stc
ds
icebp
xlat
mov
add
xchg
or
ljmp
scas
sub
push
inc
mov
lods
leave
push
fstpt
rcr
out
or
cmp
dec
sub
ffreep
es
test
xchg
push
lods
push
test
cmp
loope
je
imul
add
sub
stos
testb
sahf
dec
push
outsl
fwait
push
outsb
cmp
fisubrs
hlt
push
imul
adc
or
pop
adc
pop
imulb
mov
sbb
mov
cmc
and
add
mov
pop
lods
or
cmp
rcll
or
jae
inc
ret
out
cmp
mov
imul
add
mov
jmp
movsl
enter
pop
add
shlb
and
clc
addb
xor
nopl
xchg
jnp
jg
push
std
mov
in
fucomp
mov
mov
lods
mov
fs
sarb
cld
daa
jb
stc
hlt
cmp
imul
enter
decl
mov
ret
in
add
xchg
pop
lret
mov
inc
in
dec
mov
mov
test
sahf
push
les
jge
add
cwtl
mov
lahf
push
sub
test
xchg
hlt
mov
cmp
and
adc
outsl
fdivl
jecxz
or
and
aas
mov
mov
rcll
cmp
sbb
lds
out
cmp
ret
or
std
inc
inc
pop
inc
lahf
push
add
dec
js
mov
mov
sbb
fnstcw
cmp
mov
dec
sbb
push
stc
push
mov
fmul
leave
inc
adc
push
or
call
mov
xchg
push
pop
mov
ds
aaa
repz
inc
jmp
mov
shl
jg
lods
jge
and
std
in
xor
daa
shll
pop
mov
and
out
push
fcmovu
es
mov
or
lds
mov
popf
xor
jp
mov
push
lret
pop
pop
push
mov
pop
push
fstps
int
cmp
cmpl
xchg
push
push
mov
fisubl
repz
in
pop
or
xchg
daa
xor
lds
push
out
adc
mov
mov
xchg
pushl
cmpsb
ja
hlt
lds
pop
lret
shll
add
shll
xchg
dec
std
pop
and
cltd
push
or
sbb
out
push
and
outsl
aad
mov
out
push
or
or
lret
sahf
mov
add
adc
movsl
popf
mov
enter
xchg
xor
test
out
sbb
add
jno
pop
cltd
cld
mov
idivb
std
and
or
xchg
inc
push
stc
adc
je
popa
inc
inc
pop
clc
ret
mov
call
movsb
popa
jns
test
test
fcompl
aam
nop
xor
cmpsl
push
into
in
shr
or
in
mov
or
fistps
cmp
xchg
std
sub
or
push
mov
or
out
sub
adcb
sbb
inc
mov
add
add
popf
jl
enter
and
push
in
add
out
orl
cmp
out
dec
bound
and
nop
jno
mov
or
sub
add
jg
popf
in
cmp
jg
cmp
xorb
jecxz
sbb
adc
ljmp
add
loope
arpl
popf
push
stc
mov
or
idiv
jb
mov
or
fisttpl
and
lahf
in
push
cld
mov
mov
int3
das
add
dec
push
les
sub
ror
xchg
inc
sbb
lods
sbb
icebp
test
mov
je
inc
adc
sarb
hlt
js
pop
cmp
add
cltd
roll
dec
scas
xchg
in
decb
icebp
sbb
jae
andl
xlat
cmp
add
and
jns
arpl
jbe
iret
addr16
add
push
or
jne
shll
cmpsl
ret
addr16
data16
in
mov
ret
fwait
pusha
sub
insl
push
dec
popa
push
and
stc
ffreep
fwait
mov
mov
jb
arpl
movsb
or
shrb
stos
in
adc
cmp
add
fisubrl
jb
xchg
mov
imul
sbb
dec
mov
div
repnz
call
hlt
pop
stos
mov
in
es
int
push
leave
arpl
mov
movsb
cmp
add
pop
inc
mov
sbb
pop
xor
daa
movsb
pop
inc
pusha
xchg
sub
lods
fucomip
inc
into
sbb
pop
das
or
stos
icebp
sub
mov
mov
pop
jl
xorl
out
popa
in
pop
dec
mov
or
in
lock
and
je
cld
jns
mov
pop
jnp
test
std
dec
cmp
add
test
jecxz
xchg
iret
and
ret
sub
rolb
jo
inc
jg
rorl
push
rcrb
mov
jnp
dec
aas
pop
cs
xor
out
and
xchg
test
jnp
push
jge
imul
iret
add
mov
js
shlb
dec
cltd
cmp
test
int3
mov
sbb
sbbl
mov
das
out
inc
fs
sbb
jbe
cmp
push
mov
push
xchg
push
mov
mov
loop
or
movsb
xchg
gs
jns
loopne
call
pop
sbb
test
cwtl
fucomip
shl
inc
or
shll
stos
sbb
xor
adc
jg
jp
jle
out
cvttps2pi
dec
imul
cmp
mov
mov
inc
fiaddl
jl
xor
mov
sub
ljmp
mov
pop
cmp
xchg
sbb
fnstenv
jecxz
cmp
pop
jl
xlat
in
sbb
fmul
xchg
cmp
int3
fdivl
pop
fimull
sub
cli
fimuls
in
pop
in
jbe
or
in
push
movsb
dec
xchg
push
mov
icebp
movsb
call
lods
jbe
sbb
mov
jp
loop
les
mov
pop
int3
cwtl
jg
rcrl
sahf
and
call
pop
xor
filds
stos
jb
out
or
cmp
pop
cmp
faddl
insl
outsb
popf
xchg
in
fnsetpm(287
cwtl
lock
dec
in
jge
sarl
and
movl
lock
pop
mov
repz
or
scas
fmul
cmpl
cltd
sbb
sub
insl
sub
out
aad
ss
sbb
pushf
sahf
rclb
jbe
mov
mov
fisttpl
mov
cmp
xorb
scas
repnz
pusha
or
clc
aas
pop
xor
rolb
push
rol
inc
stos
dec
xchg
das
movb
fistl
mov
pusha
clc
sbb
cmp
lods
inc
es
popf
lret
stos
adc
mov
inc
mov
hlt
inc
cmp
cmp
jne
xor
cmp
jbe
dec
pushf
inc
orb
test
daa
inc
lds
xchg
ret
lock
cmpsl
adc
dec
mov
push
test
mov
pop
or
test
sub
cmp
and
sbb
out
scas
xchg
imul
jecxz
sub
loop
pop
cwtl
sub
insb
ret
je
out
dec
and
mov
pop
sub
push
ret
xchg
or
test
cs
sarl
jo
into
xchg
lods
ss
loop
mov
dec
mov
jae
les
xchg
xchg
mov
in
pop
add
outsb
adc
mov
mov
or
mov
sub
outsb
mov
mov
out
cmp
lea
sub
mov
mov
les
mov
xchg
mov
inc
xchg
jbe
and
cmp
loope
ret
adc
into
sbb
cs
pop
ja
and
inc
dec
test
sub
jnp
or
into
push
repz
push
lods
scas
jp
sbb
mov
clc
dec
cmpsb
adc
arpl
push
cmp
sbb
sysenter
xor
cmc
lcall
popf
cmp
roll
inc
mov
rclb
pushf
pop
and
ja
mov
and
push
push
insb
outsl
add
xor
icebp
xor
outsl
push
xorb
mov
cmp
sbb
jmp
fcoms
stc
dec
xor
idivl
adc
repz
jbe
or
xchg
sub
xor
push
add
clc
jl
inc
adc
xchg
cmpsl
rcll
orl
enter
repnz
jl
push
mov
cltd
mov
iret
inc
xor
mov
sbb
lock
xor
aaa
sbb
push
daa
sub
jge
int3
lds
xchg
or
out
adc
out
dec
scas
insb
xchg
insl
ja
out
lcall
leave
add
ret
out
stc
dec
jb
add
int3
jbe
push
push
enter
mov
cli
sub
xor
testl
cli
ja
fnstcw
push
mov
sbb
addr16
push
xchg
sub
mov
insl
roll
adc
scas
lret
or
push
ss
push
pop
inc
fdivs
xor
xlat
cltd
gs
jecxz
jo
pop
js
cmc
pop
jl
mulb
lahf
mov
xchg
sub
or
faddl
push
scas
test
or
shlb
imul
lods
push
add
add
rorb
xor
fists
lock
cs
scas
lcall
xor
jge
add
xchg
imul
lock
rcll
cmp
cli
out
mov
sub
leave
lahf
xor
and
and
das
pop
xor
adc
aaa
les
int3
or
lret
cmp
repz
lea
shlb
xor
cmpb
add
mov
test
pop
rclb
xchg
rcll
into
pop
adc
std
push
shl
mov
cmp
adc
insl
push
cmp
push
std
pushf
add
pop
mov
es
dec
hlt
sub
mov
and
pop
out
outsl
xchg
out
je,pt
enter
sbb
mov
cmp
fisubl
ja
mov
xchg
dec
mov
lods
dec
les
fwait
sti
andb
jbe
and
push
xchg
push
and
xor
sbbl
loopne
xchg
movsl
mov
cwtl
out
and
pop
jge
scas
test
jp
out
and
enter
push
jns
mov
jmp
sbb
popf
xor
pop
pop
and
inc
shlb
aam
adc
dec
bound
xor
cwtl
mov
inc
add
lds
fwait
mov
fbld
mov
insb
frstor
jge
and
fnsave
xchg
xchg
or
pop
sti
fwait
fiaddl
push
pop
cli
fistpll
jecxz
sub
cmp
pop
pop
pop
std
movsb
dec
loopne
in
mov
pop
push
pusha
sub
push
mov
rcl
fbld
fdivrs
in
aam
sub
fsubl
out
pop
and
xchg
js
push
ds
inc
and
lcall
mov
enter
aas
jp
ss
inc
aaa
sub
mov
add
loope
push
lods
addr16
mov
movsl
out
movsb
push
test
add
mov
inc
sbb
daa
push
int3
xchg
test
mov
cmpsb
and
inc
fmul
xchg
test
xchg
addb
xor
loope
xchg
mov
clc
ret
rol
jecxz
jecxz
pop
or
fdivrs
dec
into
mov
cld
dec
add
dec
mov
fsts
enter
ret
add
mov
lds
pop
fbstp
aas
sti
push
push
inc
inc
mov
int3
sbb
pusha
mov
jno
mov
andb
jg
loop
cmpb
ds
addr16
pop
mov
mov
inc
cmpsl
and
jne
push
push
mov
jno
and
ror
imul
aaa
hlt
xchg
adc
cmp
mov
pop
sbb
or
gs
adc
or
pop
xor
negb
mov
xchg
dec
and
test
or
dec
test
mov
sub
daa
icebp
outsl
cld
inc
addr16
add
loop
test
loop
mov
fistpl
push
xor
das
xor
add
sub
cld
jle
cmp
push
mov
cmp
xor
popf
mov
stos
sbb
add
inc
mov
ja
loope
sarl
jnp
in
sub
dec
lret
jg
cli
cmc
fisubs
lods
push
push
out
and
in
insb
gs
shll
daa
or
mov
lahf
in
pop
popa
cmpsl
test
lahf
pop
test
jge
or
sbb
sub
pushf
aad
aad
pushl
leave
sbb
roll
or
sahf
sbb
pop
mov
or
ja
test
push
adc
add
sbb
mov
pusha
mov
mov
test
xorb
xchg
call
mov
sti
push
mov
sbb
out
inc
das
pop
cld
mov
xor
xchg
jne
push
push
fs
out
cmp
adc
mov
xchg
sub
jbe
bound
cli
cmpsb
or
push
inc
rcrb
cmp
das
movb
sbb
lods
outsl
mov
sbb
gs
cmp
xchg
cmpsl
iret
call
xor
mov
inc
pop
fimuls
push
mov
add
pop
push
or
cld
fildl
das
mov
movsl
cmp
sbb
sbb
in
ret
inc
imulb
xor
ret
sbb
rcl
sbb
bnd
pop
pop
test
cmpsl
addb
xchg
adc
std
test
ds
push
pop
or
pop
cmc
cmp
test
mov
js
sub
mov
push
sbb
popa
pop
fildl
push
leave
inc
push
jecxz
xor
clc
sbb
inc
mov
icebp
sbb
pop
pop
mov
xor
mov
shrb
adc
add
xchg
in
mov
in
mov
fistpl
insl
and
cld
push
jg
repz
jle
inc
pop
jnp
stos
popf
jns
subl
imul
out
mov
mov
push
sbb
xchg
andb
fnstenv
cmp
mov
add
dec
xchg
xchg
xchg
adc
xchg
ss
mov
dec
push
pop
dec
lods
outsl
push
push
ljmp
ljmp
push
imul
xor
arpl
mov
es
xchg
js
jo
imul
sbb
leave
pop
in
sarb
cmpsb
ret
lcall
scas
dec
out
push
ds
packsswb
leave
pop
test
dec
data16
jp
outsb
int
push
mov
inc
fadd
jne
cmpsb
icebp
daa
cmp
and
jb
adc
ss
setg
ljmp
fmul
push
pop
in
jmp
out
xor
sub
cmp
scas
mov
inc
call
and
and
loope
cmpsb
clc
bound
push
sub
sub
xchg
pop
rorb
sbb
dec
cltd
inc
fdivl
pop
dec
add
adc
jnp
add
mov
call
das
push
xchg
mull
pop
lock
iret
js
cwtl
adc
and
push
push
stos
xchg
inc
call
loop
popa
js
arpl
cmp
ret
icebp
sub
push
or
jb
xlat
jg
push
fs
lret
nop
mov
inc
pop
pop
dec
out
ret
fs
push
fbld
jo
repnz
imul
cmp
push
stos
sub
mov
daa
mov
and
shr
pushf
iret
pop
jle
sbb
cmp
daa
jle
fidivs
push
test
xchg
or
mov
inc
push
stos
xchg
pop
test
and
inc
xor
pop
inc
jmp
inc
xor
fs
push
mov
cltd
ror
and
adc
out
inc
repz
cmp
pop
sub
mov
dec
leave
out
push
xor
mov
jmp
mov
popf
jns
adc
sub
mov
leave
push
or
nop
mov
and
repz
jbe
sahf
add
stc
test
test
lret
lret
cwtl
ds
das
push
test
cld
jae
mov
in
sub
sbb
rcll
loopne
clc
fcoml
push
lcall
adc
cs
test
mov
or
sub
ret
mov
xchg
sbb
xor
jmp
not
fstps
pop
movsl
inc
rclb
in
cmp
shrl
and
sbbl
adc
test
pushf
stos
mov
daa
ljmp
sbb
aaa
inc
sub
js
popf
xchg
lods
xchg
mov
mov
sub
arpl
addb
movsb
dec
sbb
test
dec
and
stos
mov
and
lods
dec
movsb
scas
cli
push
out
jae
ret
fsubs
mov
adc
lahf
mov
mov
sbb
pop
shll
mov
mov
inc
xchg
stc
sbb
xchg
cmpb
addr16
push
insl
out
pop
mov
cli
cmp
push
fwait
jno
cmpsb
fcos
aas
pop
pop
lcall
jns
cmp
repz
pop
mov
push
xor
in
mov
cmpb
or
inc
or
push
xor
pop
cmpsb
mov
mov
mov
lods
and
ss
loopne
jae
ss
test
cmpsb
scas
sbb
cmpsl
pop
push
adc
clc
fs
adc
cs
mov
jecxz
sub
adc
dec
sub
fnstenv
ss
push
push
pusha
inc
mov
add
xorl
push
push
mov
jnp
fidivrl
mov
cmpb
mov
jo
out
fstps
fsubl
xor
cmp
mov
in
aad
jp
sub
push
push
cmp
and
scas
sbb
outsb
es
int3
js
rcrl
pop
cmp
div
std
inc
jae
cmp
movsl
mov
ja
fdivp
les
dec
lods
add
fwait
jns
sub
insl
or
rorl
roll
clc
test
pop
cmp
daa
sub
enter
into
fcmovnbe
rorb
and
jp
in
adc
lret
xchg
sbb
movsl
inc
inc
out
imul
mov
mov
cmp
das
fimuls
xor
dec
add
push
inc
in
push
clc
in
divb
dec
cmp
cwtl
fsts
dec
sub
lods
inc
push
xor
push
in
out
das
cmp
rcrb
mov
or
repz
push
out
sbb
cmp
jae
mov
call
sub
add
cmc
inc
dec
push
push
dec
jecxz
pop
flds
xor
dec
add
mov
mov
pop
out
xchg
xor
es
rcl
test
lahf
cmp
xor
imul
mov
add
fidivl
xchg
loop
cmp
add
xchg
xor
bound
lret
or
jmp
sub
inc
fistps
data16
stc
stos
dec
mov
push
and
add
or
mov
rcrl
filds
xor
stos
lods
xor
les
lock
xor
push
dec
lods
stos
das
js
pushl
nop
sub
cli
sbb
push
cld
mov
scas
dec
lret
dec
and
pop
mov
dec
int3
sbb
ret
fidivl
inc
or
inc
mov
mov
out
mov
cmp
ret
push
stc
loop
fnsave
push
inc
bnd
out
and
enter
or
cli
sarl
pop
push
xor
aam
jp
xchg
inc
push
aas
in
lahf
xor
mov
pop
ret
pusha
sarb
and
movsb
pop
popf
ret
push
movsl
aas
mov
cmc
aas
jl
jnp
in
nop
mov
aam
pop
repz
cmp
cmp
stc
mov
pop
cmp
mov
ror
jge
cmp
xor
bswap
das
dec
and
or
fdivs
sahf
adc
negl
sub
inc
mov
testl
mov
xor
pop
stos
push
add
xchg
adc
popf
adc
and
sarb
adc
push
dec
fcoml
add
fists
pop
cld
in
cltd
cmpsl
scas
or
jge
xor
fucom
xor
in
out
xchg
in
mov
test
bound
push
fadds
sbb
push
mov
inc
dec
dec
rorb
popa
or
inc
pop
gs
add
push
loope
loopne
pusha
lds
xchg
push
aam
movsb
ret
xchg
adc
sbb
push
adc
push
ret
jl,pt
popa
sarl
fs
cmp
mov
add
pusha
nop
fidivrs
add
or
jp
mov
push
jno
popf
enter
popa
cltd
sarb
cmpsb
mov
pop
push
imull
flds
subl
sub
mov
add
mov
jns
xchg
dec
sbb
jne
xlat
scas
popf
jno
mov
mov
lret
push
cmp
mov
and
mulb
push
test
xchg
mov
repnz
inc
mov
movsb
xchg
imul
cmpsl
fstpt
call
fildl
cmp
fisubs
push
stc
inc
cs
push
mov
mov
xlat
mov
in
insb
sub
mov
sbb
jo
sbb
aas
leave
mov
movsb
cmp
lahf
sub
inc
mov
sti
cs
jmp
dec
add
stos
sub
and
xchg
flds
icebp
sub
or
test
lahf
outsl
call
dec
cmp
enter
jecxz
mov
fwait
adc
pop
pushl
jns
jmp
sub
cmpsb
out
fldt
or
fisttpl
sahf
dec
push
mov
aam
mov
pop
jne
test
out
andb
negb
mov
add
push
lock
inc
outsl
sbb
bound
lea
or
push
or
inc
push
dec
mov
mov
test
scas
xor
mov
test
push
in
mov
shlb
inc
xchg
inc
mov
lret
cmp
stos
push
push
mov
and
sub
xchg
insb
cld
hlt
popf
call
lods
add
loopne
das
and
jmp
sti
add
fwait
cmpsl
sub
push
sbb
outsb
xchg
nop
push
add
aaa
xorb
jno
shll
push
or
sbb
cld
mov
repz
dec
xchg
ss
enter
mov
aad
cmpsl
mov
pop
mov
sti
leave
arpl
cmp
cmp
outsl
lret
gs
pop
aaa
out
stc
aam
dec
xchg
push
adc
les
adc
xchg
aad
push
push
cmp
stos
dec
push
scas
push
mov
repnz
repz
push
aas
les
fwait
inc
xchg
insl
xchg
xchg
fsubl
mov
ret
stos
or
cwtl
sbb
cli
int
popa
fsubrl
inc
ljmp
xor
daa
sarb
or
dec
stc
cmp
nop
add
cmpsb
or
pop
pop
inc
sbb
jns
inc
enter
addr16
xor
imul
ret
bound
imul
jl
push
in
lcall
fcomps
movsl
xor
mov
or
fwait
xor
jmp
sti
sahf
pop
into
or
aaa
xorl
push
loopne
popf
stc
jb
inc
cltd
xor
pusha
jne
imul
shl
out
push
jmp
aad
mov
sub
movsl
pop
in
cmp
cmpsb
push
jg
and
in
xchg
adcl
out
std
push
in
mov
lcall
movsb
cmp
dec
jne
ret
lret
std
shlb
addb
adc
stc
mov
pop
jle
iret
test
mov
ret
push
mov
xchg
inc
fmul
js
or
sub
xor
sub
sbb
adc
dec
fistps
sbb
jle
push
cmp
inc
mov
xchg
cs
sbb
add
adc
cli
fdivrp
mov
mov
cmp
sti
push
adc
dec
test
pop
ret
fildll
test
imul
fwait
mov
add
jbe
and
adc
pop
push
dec
enter
fwait
and
testb
popf
pop
rcrb
mov
push
mov
cmp
or
xchg
lods
icebp
add
hlt
data16
xor
leave
mov
xor
mov
ljmp
cli
xchg
mov
cltd
xchg
jle
stos
es
scas
or
or
call
cwtl
in
nop
fnstcw
mov
xchg
push
or
sbb
in
ljmp
cltd
dec
movsl
aas
insb
sbb
jmp
sbb
push
pop
cmp
inc
and
loopne
popf
stc
sub
not
ret
sub
in
jle
dec
movsl
repz
mov
or
cmpl
imul
rcll
roll
fs
jno
sub
or
sub
and
add
xchg
or
add
mov
pop
cs
aas
das
push
mov
loope
xor
out
arpl
sbbl
addr16
pusha
js
out
push
mov
mov
cmp
jne
add
imul
xchg
cmp
loop
jb
sbb
jae
sahf
inc
lds
sub
es
mov
lds
push
loop
inc
add
call
xchg
ja
lods
fsincos
inc
fcom
sub
sbb
or
outsl
fcomip
xchg
jno
fwait
adc
imul
push
jno
mov
dec
cld
sub
xor
lahf
scas
lock
ret
pop
xchg
push
or
mov
sub
xchg
into
jnp
and
or
mov
dec
daa
push
les
cmp
fisubs
jle,pn
ja
sbbl
stc
imul
adc
jno
mov
sahf
rolb
into
xchg
add
sbb
lock
int
jle
mov
or
pop
out
js
mov
cmp
mov
pop
xchg
fiadds
xchg
xor
dec
dec
sahf
push
or
ja
and
ss
jbe
out
test
mov
out
or
sbb
cld
dec
inc
pop
and
xchg
shrl
add
pushf
dec
add
outsl
enter
div
sbb
adc
ret
mov
adc
mov
testl
aas
test
pop
insb
jae
test
jb
mov
ja
xlat
inc
and
leave
mov
clc
movsb
mov
lret
inc
cli
jmp
ja
sub
sub
inc
into
sub
or
mov
pop
inc
mov
outsb
push
add
sbb
inc
out
scas
pop
or
inc
mov
xorb
inc
cmp
sbb
push
stos
xchg
push
test
fsubrs
int
xchg
test
jp
inc
dec
mov
push
cs
and
mov
mov
in
and
icebp
sub
xchg
stos
nop
mov
sub
lea
or
fidivl
cmc
movsb
ljmp
jle
pop
pop
nop
into
xor
cmp
das
push
dec
cmpsl
inc
pop
call
push
pop
push
mov
andl
sbb
ja
sub
push
lcall
xchg
ret
dec
sbb
aam
shll
mov
cs
and
pop
jo
data16
imul
je
ret
shlb
cmpsb
ficoms
jae
arpl
and
fadds
popa
psubusw
arpl
pop
out
imul
jns
jns
cmp
sub
push
rorl
mov
mov
xor
adc
flds
insb
inc
dec
sbb
icebp
and
dec
icebp
or
mov
test
mov
mov
sbb
adc
pusha
call
push
in
mov
sub
faddl
data16
mov
push
rcl
inc
mov
stos
ror
add
mov
or
arpl
and
idivl
or
or
inc
and
in
jae
cld
loop
aaa
jmp
cltd
pop
and
mov
push
dec
inc
add
sub
aas
mov
add
or
jmp
ret
add
orb
and
mov
xchg
cld
add
daa
xchg
sti
mov
in
adc
dec
add
push
mov
pop
insl
fucomip
push
push
lds
data16
imull
notl
push
adc
cs
ret
loopne
popf
ret
xchg
aam
imul
xor
movsb
bound
insb
das
sbb
in
cmp
or
push
sbb
pop
test
push
imulb
mov
lock
in
or
std
adc
loope
mov
scas
xchg
test
xchg
ds
loop
in
js
repz
in
mov
aas
cltd
or
jl
cmp
sbb
and
sub
adc
mov
pop
inc
outsl
fwait
sbb
jnp
std
das
fstl
ret
outsl
push
mov
pop
cmpsb
mov
pop
mov
and
xchg
push
hlt
cmp
add
rolb
xchg
into
hlt
stos
mov
adcb
adc
dec
and
ret
sbb
push
gs
in
in
leave
mov
and
popf
sbb
std
jmp
loopne
in
aad
xchg
inc
xor
add
aas
mov
sbb
jecxz
cli
mov
jns
xchg
and
daa
divb
js
shr
push
mov
movsb
cmp
mov
lret
sbb
sbbl
xchg
jo
push
and
pop
rcr
dec
jns
mov
jb
push
dec
and
shlb
or
add
stc
loop
nop
movsb
xor
inc
dec
xchg
mov
xchg
test
orb
ss
or
into
sbb
mov
dec
mov
sub
cmp
sbb
ja
sub
or
cmp
aas
push
dec
dec
xchg
das
les
adc
dec
fsubs
pop
mov
xchg
xor
loopne
dec
mov
push
test
xchg
jo
inc
cmp
aaa
jo
cli
push
cmp
and
pop
adc
in
mov
hlt
xor
stc
jle
jno
sahf
pop
jae
jb
sub
dec
dec
xchg
lods
sub
leave
es
imul
sub
or
xor
enter
pop
aam
sub
adc
jno
cmp
mov
cmp
push
jl
test
out
fisttpll
loope
mov
sub
jp
xchg
movsl
xor
cmovbe
or
movsl
fadds
arpl
divl
xchg
adcl
add
dec
dec
out
imul
outsb
pop
lahf
frstor
jae
and
pop
xchg
and
push
aad
out
bound
mov
aad
les
xchg
mov
rorb
out
cmpb
out
jbe
or
into
cmp
or
mov
inc
sub
loop
notb
jmp
pushl
cmp
popa
adc
iret
xlat
inc
sbb
fisubs
jno
push
pushf
and
lds
inc
jle
xchg
sub
js
jp
movsb
jnp
test
mov
sbb
shll
movsl
out
int
and
push
xchg
dec
loope
mov
mov
dec
add
mov
pop
or
mov
divl
loop
cltd
inc
jnp
movsb
xchg
fisubrl
lcall
mov
test
nop
adc
nop
outsb
xchg
iret
push
xlat
xchg
lods
add
or
std
xchg
push
add
dec
cmp
xor
mov
mov
mov
lret
loop,pn
imul
dec
mov
mov
fnstcw
add
inc
notl
addb
jp
xor
clc
pushf
cmp
dec
push
je
pop
jmp
lret
sub
xchg
ja
mov
sbb
test
sbb
pop
fs
outsl
fsubrs
adc
cs
orl
movsl
js
scas
hlt
popa
mov
out
xorb
mov
adc
enter
push
xchg
inc
test
jno
jmp
enter
enter
adc
pusha
mov
shr
xor
pop
and
jo
mov
xchg
or
xor
shl
inc
or
cld
jae
jae
cmp
push
aaa
pop
push
adc
or
xlat
scas
adc
icebp
pop
ds
xchg
repz
clc
xchg
insl
fucom
add
and
aaa
jmp
test
and
jle
cmc
push
fidivs
mov
daa
sub
in
fcmovnbe
shr
in
out
mov
push
add
pop
test
cmpsl
push
mov
mov
ds
in
xor
loope
jmp
mov
inc
shrb
jg
cmp
mov
adc
adc
ja
lcall
pop
outsl
lods
push
sub
cli
hlt
or
fnstsw
insb
rolb
mov
mov
or
xor
repnz
adc
in
in
fildll
je
gs
push
fsubr
lahf
mov
outsb
inc
xchg
jle
cmp
pop
sbb
xchg
repnz
sbb
repnz
mov
and
xor
jbe
pop
jbe
insl
pop
movsb
mov
andb
std
ss
daa
cmp
into
int3
adc
pop
sub
inc
js
addb
xor
ret
jae
lock
push
xchg
sbb
popa
call
mov
stos
and
mov
lds
mov
leave
sub
mov
push
lcall
mov
xor
mov
push
loopne
push
dec
jmp
pop
sub
addr16
dec
lds
les
sub
dec
mov
pop
add
mov
mov
shll
popa
adc
loopne
sti
push
jmp
jmp
int
and
dec
or
mov
xchg
push
in
cmpsb
cs
dec
nop
andl
xchg
push
lods
lock
dec
in
rolb
clc
mov
lret
sbb
movsl
fwait
sti
jno
xlat
fsubrl
cmc
scas
mov
pop
cmp
pop
jbe
xchg
and
jp
mov
in
test
xor
idivl
xchg
inc
leave
test
lods
push
jmp
sub
push
or
xor
fistl
lods
pop
push
sbb
pop
push
jl
mov
js
lahf
mov
je
jmp
cmpsb
mov
xchg
push
mov
xor
cld
xchg
aam
sub
xor
or
inc
inc
xor
jns
mov
xchg
test
enter
rcr
mov
and
sbb
mov
push
mov
xor
pop
push
iret
add
mov
jl
mov
pushf
loope
inc
enter
xor
mov
ljmp
cltd
pop
cmpsb
dec
xor
dec
mov
pusha
dec
not
into
mov
or
xchg
notl
sahf
test
int3
inc
rcrb
fs
jmp
and
xor
out
mov
mov
xor
aam
jnp
mov
hlt
test
test
fdivrl
xchg
push
cmc
insb
pop
cmp
aam
sub
mov
push
mov
inc
shrl
ud0
daa
jne
xchg
pop
insl
inc
inc
or
lcall
sub
jb
lcall
sti
test
dec
into
adc
sub
cmp
sub
and
lods
sub
into
pop
mov
pop
sub
jne
es
mov
xor
sbb
test
pop
in
lret
dec
pop
adc
ret
jbe
inc
pop
outsl
jl
ljmp
mov
shrl
pop
je
xor
mov
cmp
pop
aam
scas
mov
xor
scas
xor
dec
mov
jae
jo
lahf
daa
out
xlat
mulb
mov
ss
roll
mov
outsb
pop
test
pop
stos
aad
adc
test
out
fsubr
sbb
mov
aad
sahf
pusha
add
and
xor
imul
aas
xor
mov
in
adc
mov
lretw
incl
mov
add
dec
jne
and
add
addr16
test
shrb
xor
adc
xchg
pop
ljmp
sbb
push
mov
js
lods
iret
lret
ss
push
test
icebp
outsl
in
jge
js
test
sub
mov
pop
adc
popa
inc
inc
cmc
ja
push
cmp
test
mov
sahf
mov
xchg
test
jns
lahf
dec
push
mov
inc
xor
outsb
popf
js
sbb
push
mov
js
iret
mov
in
es
sub
push
push
pop
adc
sarl
mov
fstps
dec
jae
aad
es
fmuls
dec
inc
mov
push
dec
je
ljmp
popf
push
lods
pusha
aam
in
dec
sbb
jmp
lods
mov
pop
dec
sbb
rcl
mov
adc
enter
rol
jl
xchg
repnz
cs
dec
jbe
es
dec
addr16
cld
sub
loopne
and
push
lock
into
dec
pop
pop
pop
push
aas
sbb
jg
push
inc
dec
push
inc
cmp
cltd
mov
test
jmp
pop
pop
cmp
movsb
scas
arpl
mov
mov
fidivrl
mov
mov
sbb
mov
xor
push
sti
ret
mov
xor
and
fdivrl
inc
push
fidivrl
leave
jecxz
inc
sbb
stos
repnz
adc
scas
imul
sbb
stos
dec
out
sbb
loopne
xchg
nop
dec
pop
shrl
ja
cmpsl
arpl
sub
aaa
loop
sbb
or
in
dec
jae
subb
pop
pop
in
lahf
mov
mov
jp
cltd
hlt
xchg
fdivr
push
sbb
ss
ret
movsl
push
jecxz
divb
pop
int
cld
arpl
push
dec
sbb
xchg
add
pextrw
out
inc
outsb
lea
ds
stc
push
inc
enter
je
jae
mov
mov
ja
test
sbb
gs
jb,pn
xchg
inc
sub
sbb
mov
aaa
xor
cmp
stos
mov
sbb
push
pop
and
and
jg
cmp
out
leave
ret
jnp
sbb
cmc
adc
aas
mov
or
fnstsw
ret
inc
xlat
adc
sub
into
fisubrs
fistl
mov
mov
push
scas
ficoml
and
rol
jno
shlb
push
pushf
jae
lret
add
cmp
or
fldenv
pop
sti
push
or
fdivrs
scas
outsb
mov
pop
cmp
inc
cmp
xlat
pop
jb
nop
add
bound
mov
cli
in
sub
filds
sub
mov
lock
fisubl
xchg
and
sub
scas
scas
enter
aaa
gs
pop
mov
mov
mov
popa
xchg
andb
cmc
push
and
or
test
sbb
mov
pop
sub
cltd
test
fmul
adc
outsb
jno
adc
dec
imul
add
scas
loop
xchg
push
xchg
mov
push
add
cld
cmp
dec
mov
mov
pusha
add
mov
mov
adc
paddb
and
xor
mov
jl
fldenv
in
xchg
push
in
test
jns
rcrb
jo
rol
jno
adc
neg
adc
sub
aam
and
add
push
push
mov
test
fimull
shl
xchg
push
xor
cmpsl
jle
movd
dec
fcomps
adcb
jnp
shlb
mov
push
jb
and
pop
push
ficompl
idivl
jne
mov
or
stos
mov
lds
shr
dec
ds
js
cmp
and
leave
adc
data16
lcall
mov
rcrb
mov
adc
xlat
lret
lcall
dec
inc
mov
inc
mov
mov
push
idiv
subl
ret
xchg
andb
jo
das
xor
cmp
repnz
push
xchg
enter
push
or
test
add
xchg
xchg
ljmp
xchg
ja
sub
add
mov
ret
push
fsts
popa
rcl
fadd
ror
ret
bsr
cld
push
data16
daa
mov
addr16
sbb
add
pop
popf
ds
pop
mov
fldt
cli
dec
je
lds
or
add
movl
and
shll
or
mov
push
idivl
les
les
pusha
pop
popf
mov
mov
sbb
adcl
sarl
jb
inc
dec
dec
aad
mov
xchg
mov
fistpll
pop
jnp
sub
jo
mov
xor
jno
lahf
pop
lcall
cmp
mov
mov
xor
cmp
data16
int3
clc
sbb
jne
xor
mov
pushf
pusha
add
fdivs
jae
push
sahf
dec
pop
icebp
rcr
adc
add
pop
jns
or
adc
and
sahf
push
mov
into
sub
iret
jmp
bnd
in
icebp
ficoms
sub
push
mov
push
mov
push
xchg
out
mov
jae
sub
lret
pop
pop
xor
pop
cmp
pushf
scas
das
shll
out
cmp
fiaddl
mov
ss
fidivrl
scas
fucom
inc
lret
jne
or
sbbl
push
xchg
dec
iret
sub
repnz
mov
xlat
mov
xlat
out
lahf
mov
faddl
ja
fildl
cld
dec
or
in
andl
loope
add
dec
adc
cmp
push
icebp
mov
sub
ljmp
gs
dec
sti
push
aad
lcall
mov
ja
lock
jmp
ret
lret
pushf
lods
loop
leave
sti
xchg
add
cwtl
mov
mov
cmpsl
sbb
hlt
push
xchg
mov
add
sub
lds
jmp
sub
xchg
loop
inc
jns
in
cmp
pop
fcoms
adc
repnz
in
addr16
sbb
xchg
scas
push
lods
adc
outsb
fcoms
pop
sub
insb
adc
insb
jle
jg
lea
aad
popf
xor
cmp
jp
push
call
mov
addl
xor
lret
cmc
pop
lcall
iret
adc
inc
push
jno
push
mov
jns
loop
add
mov
ss
xchg
inc
ret
adc
cwtl
adc
lds
insb
pop
pop
jg
out
pop
xchg
cmp
loopne
fs
cltd
push
mov
test
aas
pop
mov
fwait
or
es
lcall
dec
shr
sti
jne
xchg
aaa
adc
mov
sbb
xchg
inc
adc
add
pushl
aam
dec
out
push
adc
sahf
in
vdivps
sub
pop
stos
mov
pop
mov
aam
das
or
leave
lea
xor
and
and
int
xchg
popf
lcall
js
fbstp
sub
or
push
jmp
mov
add
mov
mov
les
stos
xor
inc
add
icebp
je
popl
movsl
mov
int
xchg
aam
lock
adc
or
mov
aad
xchg
daa
jecxz
sub
not
xchg
cmp
sbbl
push
mov
out
notb
aas
lcall
push
and
push
rolb
add
pusha
gs
mov
repz
mov
push
test
jns
cmpsl
iret
xchg
test
mov
xchg
lods
jae
jl
mov
xorb
add
outsl
jno
adc
fistpl
mov
mov
div
cs
arpl
mov
push
lahf
stc
sahf
aam
pop
adc
or
repz
in
stc
push
mov
push
inc
pusha
sub
cld
mov
fnstsw
fsts
call
lods
jno
out
or
cmc
xor
and
out
in
cmc
je
mov
cmp
pop
call
and
and
ret
in
lock
or
dec
jne
popf
insl
stos
add
mov
dec
sbb
pop
mov
fdivr
pop
imul
mov
and
sbb
lods
fisttps
pop
xor
lds
jae
push
iret
in
mov
hlt
jno
add
inc
ja
mov
repz
xchg
and
push
nop
aaa
icebp
bound
inc
sub
test
lods
out
sbb
pop
adc
jno
sbb
mov
cmp
xchg
std
sbb
lcall
insl
mov
sbbl
sub
sbb
sbb
ret
mov
clc
mov
push
mov
cs
jge
mov
mov
enter
and
fldt
fildl
outsb
in
jns
jle
xor
cmp
out
or
mov
loopne
clc
jmp
sub
xlat
fistl
fdivs
mov
jmp
jmp
pop
add
in
scas
jle
fsubs
lods
pushf
pop
or
cmp
xchg
aaa
dec
int3
mov
xchg
fbstp
xchg
xchg
pop
cmpb
clc
xor
pop
int3
and
pop
icebp
inc
into
nop
jbe
cltd
pop
cmc
add
adc
add
mov
enter
push
push
or
jmp
push
data16
inc
jp
dec
jo
mov
and
roll
mov
dec
shrl
hlt
jmp
push
repz
mov
inc
cmpsb
out
test
xor
push
jmp
js
fs
outsb
mov
mov
cmpsb
loop
es
sub
xchg
call
insb
outsb
push
and
and
or
mov
dec
and
out
add
push
fisubl
pop
inc
cmc
inc
es
repz
lods
rclb
dec
mov
ficoms
int3
imul
insl
lahf
testl
dec
in
pop
rorl
xchg
or
mov
pop
lret
stos
into
xchg
stc
and
mov
lret
lea
out
cmp
inc
or
scas
stos
jp
or
stc
push
dec
test
xchg
sub
loope
int
jne
mov
and
negb
push
xchg
dec
outsb
daa
repz
iret
mov
fistpll
out
out
popa
pushf
pushf
shlb
bndldx
mov
mov
outsl
arpl
jno
aaa
pop
push
movsb
mov
sti
dec
jecxz
mov
jl
lock
pop
hlt
mov
sbb
jl
jae
inc
movsb
mov
sbb
pop
push
jbe
jns
clc
mov
int3
cvttps2pi
aad
in
push
sbb
call
scas
popf
call
inc
pop
push
mov
sbb
jecxz
aam
mov
ficomps
fxch
shlb
pop
aad
dec
sub
sub
push
xchg
add
pusha
inc
mov
jo
xchg
cli
push
xlat
sub
inc
jno
add
std
cwtl
jmp
xor
lds
les
and
or
es
xor
in
data16
or
mov
test
and
inc
mov
test
sub
mov
jecxz
adc
mov
call
sub
pop
push
dec
push
arpl
ficomps
into
cmpsl
mov
cmp
lock
ret
inc
cmpsl
pop
lock
xor
jg
add
push
jg
push
lods
test
ds
push
outsl
es
out
mov
sahf
test
clc
iret
pop
jbe
pop
dec
shl
pop
sub
xor
pop
push
int
fidivs
push
pushf
iret
push
or
inc
ds
inc
mov
fwait
pop
out
push
lret
or
scas
xor
mov
xchg
sbb
stos
inc
mov
fsubrs
jmp
add
repnz
mov
cltd
dec
pop
dec
jmp
lahf
in
icebp
pop
rorl
inc
loop
mov
rcrb
and
enter
xchg
inc
mov
push
popa
pop
jbe
push
int3
call
ds
imul
in
pop
dec
push
jns
pop
orb
outsb
fwait
xor
nop
out
in
jecxz
ja
nop
mov
adc
fisubs
and
cwtl
movsb
adc
leave
dec
adc
mov
lret
aad
out
stos
sti
mov
and
mov
cmpsb
cmpsb
in
rclb
push
xchg
jl
test
mov
add
dec
jno
sub
add
in
add
jnp
dec
xorl
mov
daa
mov
cmp
mov
mov
jae
push
or
movsb
imul
outsb
xadd
mov
addr16
mov
jae
mov
scas
cmp
inc
sbb
pusha
pushf
jge
add
ljmp
mov
loope
mov
std
ss
daa
sahf
dec
adc
jmp
stc
aad
popa
movsb
ret
mov
mov
sbb
xchg
fwait
sub
add
sarb
xor
jo
xchg
adc
push
sub
ljmp
cmp
fidivs
jb
pusha
cltd
pop
std
lret
aaa
adcl
shlb
out
dec
cmp
fdivl
mov
mov
stc
gs
fwait
inc
add
bound
push
xor
xor
imul
push
push
jnp
push
aam
movsb
xor
inc
pop
ss
das
or
pop
pop
fisubrl
rol
xchg
dec
rorb
or
pop
push
cmp
mov
in
popf
or
fisttps
xor
dec
icebp
cmp
jmp
test
inc
jno
aaa
sub
loopne
rcrl
sbb
ret
sbb
movb
mov
fistpl
mov
adc
sbb
pop
fsts
les
pushf
leave
scas
lods
loop
imul
repnz
jne
pop
push
or
pop
pop
test
and
lret
out
pop
sub
aam
js
fbld
adc
push
mov
xchg
pop
xchg
pop
xor
dec
jb
out
sbb
in
mov
es
repz
in
mov
out
out
adc
std
adc
out
sub
jbe
in
pop
sbb
pop
pop
push
xor
icebp
adc
ret
loop
in
loopne
das
loopne
pusha
dec
xor
pop
jge
enter
outsl
push
arpl
jle
add
mov
sub
adc
dec
ljmp
sub
jb
jp
in
mov
mov
lods
fdivl
daa
push
into
lods
dec
sbb
std
incb
cltd
sti
movsb
xlat
mov
hlt
dec
aam
xchg
push
cmp
xor
mov
adc
cmc
fists
pop
add
sub
data16
or
pop
dec
pop
pop
dec
jg
addr16
mov
xchg
push
lahf
ljmp
push
test
in
xor
aaa
add
mov
lock
xlat
mov
ficompl
or
or
movsb
in
aaa
dec
sub
testb
xchg
or
mov
fstl
cmc
fcoml
nop
enter
mov
xchg
pop
cmpsb
insb
mov
inc
pop
filds
xor
lcall
cli
hlt
lock
cmp
ss
add
loopne
dec
cltd
jle
sub
mov
jbe
je
push
jmp
pop
jp
sbb
xchg
push
jp
cmp
cmpsb
jbe
faddl
ja
imul
lods
sub
call
push
fdivrp
insl
stos
add
xchg
cltd
daa
icebp
fsubrl
fucomip
mov
or
mov
push
pop
jecxz
and
mov
cmpsl
movsl
xor
push
mov
add
mov
and
popf
cmpl
les
xor
push
mov
sti
mov
mov
or
mov
pop
movsl
mov
aaa
rcrl
or
stc
sbb
cmp
mov
andb
xor
or
cmpsl
das
add
dec
add
out
lods
and
out
dec
hlt
into
out
enter
ds
sub
xlat
iret
ds
sahf
fstpl
out
jae
jae
sbb
out
mov
scas
mov
popa
jns
sbb
dec
aaa
movsl
mov
sbb
stos
icebp
pushf
pop
rorb
imul
mov
mov
jb
stos
fdivl
rolb
mov
push
insl
inc
sarb
ficompl
aam
test
push
testl
mov
ja
adc
cmp
mov
loopne
sbb
fildl
js
rol
in
pop
cmpsb
cmp
adc
sarb
mov
xchg
repz
sbb
repz
sbb
hlt
mov
enter
inc
push
cmc
add
fstl
fcomps
testl
push
into
xchg
std
dec
xor
out
mov
in
xchg
imul
add
test
xchg
insl
and
adc
add
imul
inc
jb
repnz
mov
xchg
shl
push
xor
gs
xchg
and
jl,pt
and
leave
sbb
add
inc
mov
mov
push
pop
pop
mov
lods
jl
jb
jmp
jb
pushf
sub
ja
outsb
loope
dec
ds
mov
push
repz
movb
fistps
lret
stos
xchg
div
mov
outsb
mov
aam
sti
jge
dec
pop
fdivs
sub
and
or
ret
xor
out
add
enter
mov
rcl
mov
dec
push
and
pop
ret
push
sbb
xor
imul
fcomip
push
jo
or
push
pop
rcll
lds
movsl
outsb
and
call
jg
or
push
mov
jae
pop
lock
movsl
jmp
xchg
mov
xchg
jle
or
mov
inc
inc
mov
sti
cli
scas
jno
adc
add
inc
pop
sub
roll
psrlq
sbb
push
dec
or
pop
adc
lahf
sbb
fs
out
shlb
add
pop
or
sub
dec
mov
fcomps
inc
cmp
mov
mov
lahf
cwtl
cmc
cmp
cmp
pushf
insb
arpl
mov
cwtl
roll
iret
sub
inc
dec
and
sbb
sahf
rcr
fwait
xor
xchg
mull
pop
push
shll
loopne
cmc
cli
jmp
ret
and
jb
cmpsl
or
ja
shll
out
push
sti
imul
lods
and
mov
pop
cmc
and
incb
lds
jnp
daa
sub
shrl
movsb
out
insl
cmp
lock
lods
leave
push
push
stos
or
and
push
data16
jl
sbb
scas
insl
sub
int
inc
jne
xchg
out
add
push
push
pop
mov
or
sub
std
inc
xchg
int
arpl
jp
outsb
adc
mov
shrl
dec
and
hlt
or
sub
test
lock
in
pop
sbb
rcl
lods
jno
cli
adc
clc
add
jecxz
xor
test
icebp
lret
push
shlb
movsb
push
mov
dec
and
dec
add
cmp
std
jp
jecxz
fsubrp
jno
mov
movsl
ror
jl
lahf
in
out
lret
testl
push
xor
add
sub
adc
xchg
dec
test
push
pop
das
mov
adc
pop
mov
shlb
popa
jno
mov
inc
bnd
popf
daa
mov
js
jae
pop
jp
dec
mov
xor
in
add
mov
jp
imul
mov
into
jl
push
fs
add
xchg
pop
xchg
jle
mov
lods
add
push
lret
xchg
dec
outsl
mov
shl
lret
rolb
inc
cli
jle
sbb
loopne
mov
jecxz
push
and
clc
push
inc
inc
push
test
and
imul
add
dec
sahf
jp
pop
mov
std
xor
or
jae
orl
shlb
and
mov
dec
jne
testb
hlt
inc
scas
lea
clc
jb
mov
out
or
in
movsb
xor
aaa
jp
xor
pusha
add
in
scas
dec
jno
add
adc
push
jb
call
ljmp
mov
sbb
mov
mov
xor
hlt
sahf
mov
popf
movl
xor
dec
fwait
leave
or
loopne
sub
cltd
das
cmp
aam
int3
adc
sub
cmp
and
fdivr
test
push
mov
jmp
stc
ficoml
inc
movsb
push
lret
push
push
je
cmp
inc
sbb
stos
cmp
mov
jne
mov
pop
js
mov
jg
rolb
in
test
jl
xchg
call
lods
enter
adc
inc
fucomip
add
sub
cmpsb
aas
mov
jecxz
das
push
mov
push
cmp
xchg
outsl
mov
test
jle
test
ds
testb
enter
sub
enter
or
mov
cmpsl
jne
rcrl
sub
mov
ret
std
jmp
xor
fiadds
or
cmp
xchg
sub
sbb
add
cmp
ror
out
sbb
mov
loopne
mov
cld
std
repnz
ss
jge
xchg
repnz
and
movsl
xor
sub
ret
pop
cmpsl
add
xchg
daa
dec
loopne
dec
sub
lods
enter
nop
or
daa
aaa
in
push
mov
sub
insl
nop
sbb
dec
pop
hlt
xchg
in
rorb
sub
mov
lods
popa
stos
jecxz
dec
pop
sub
or
xchg
jae
or
xchg
jne
ss
das
test
in
fimuls
mov
lcall
or
adc
pop
adc
jmp
sahf
mov
xchg
leave
pushl
jne
lret
sbb
push
out
adcb
and
leave
adc
ret
dec
pop
pop
nop
daa
xchg
inc
adc
push
loope
repz
cmpsl
push
sbb
fwait
jmp
shr
das
mov
cmpsb
mov
je
dec
idivb
pop
clc
sub
jp
dec
hlt
push
push
push
ffreep
test
loopne
add
xchg
lock
mov
adc
movsl
fcom
loop
insl
jge
or
inc
pushf
frstor
pop
icebp
repz
or
mov
sti
mov
dec
rclb
les
jns
xchg
dec
or
ds
mov
cmp
cmc
test
iret
addr16
loope
cld
mov
jp
xchg
rcll
or
movsb
sbb
pushf
out
fidivs
xchg
pop
out
testl
sbb
cmp
leave
loopne
jecxz
inc
mov
mov
cmp
mov
int3
lret
outsb
and
pop
mov
out
sub
es
in
fcompl
inc
lret
mov
xchg
or
in
minps
jecxz
pop
adcl
add
fiadds
or
mov
jb
into
dec
mov
mov
pop
dec
dec
xchg
xchg
xchg
adc
inc
mov
pusha
outsl
lea
popa
stc
scas
aad
outsl
cmp
rcl
inc
sub
sub
cmpsl
dec
add
adc
cmp
out
push
sbb
xchg
xlat
sub
xor
roll
ret
xorb
pop
or
cltd
mov
xor
repz
pop
inc
pop
lret
sub
scas
xorl
stc
cltd
cmp
dec
icebp
jno
sahf
push
add
cld
inc
adcb
dec
dec
pop
lods
outsl
lcall
dec
fcompl
dec
das
and
ljmp
xor
shlb
lret
pop
fcmovu
mov
in
cwtl
or
inc
cmpsl
jmp
lds
sub
push
outsl
cmpsw
mov
inc
in
push
jp
out
daa
ror
adc
sub
clc
aas
in
mov
out
cmpb
pop
arpl
or
out
xchg
imul
or
hlt
test
add
mov
pop
push
cmpsl
dec
call
xchg
mov
xchg
jge
xor
std
xor
fcom
xchg
int
cmpsb
push
mov
in
pop
jbe
divb
jbe
lahf
icebp
dec
leave
lds
test
scas
jl
lret
push
lret
cltd
cmp
push
mov
nop
mov
mov
leave
cmp
push
push
add
jb
push
sub
mov
mov
enter
inc
shlb
cmpsl
test
leave
pop
adcl
mov
into
test
dec
dec
mov
sbb
sbb
mov
push
xchg
sbb
cmp
add
out
pop
jbe
lea
test
subb
xor
add
dec
push
xor
orb
jne
loop
popf
cwtl
mov
insl
fs
movsl
pop
add
inc
or
push
fldcw
jmp
sbb
fnsave
movsb
xchg
mov
out
push
inc
loopne
jae
sub
jecxz
imul
ror
shl
push
and
test
push
jge
jae
xor
icebp
fisttpl
pop
push
push
lcall
jb
test
jo
loopne
popa
setns
in
add
cmp
je
add
xchg
cltd
jne
adc
cmp
xor
push
push
jge
adc
pop
iret
lahf
sahf
dec
jbe
jecxz
mov
je
sbb
fwait
lea
jmp
mov
pop
shrl
mov
pop
sbb
xchg
inc
adc
sub
add
fsubl
fists
ljmp
ljmp
dec
xchg
cmc
lods
jl
repz
bound
jg
mov
dec
xlat
sbb
pop
sub
cmpb
cmpsl
inc
sbb
xchg
test
xchg
inc
xchg
aam
xchg
fsubs
sbb
testb
mov
rol
imul
in
pushf
cmpsb
pop
push
test
test
psrlw
or
inc
mov
mov
mulb
sub
cwtl
jns
stc
shll
jae
pop
xor
addr16
mov
fcmovne
push
mov
or
out
pop
and
xchg
pop
cmpsl
mov
insb
fidivrs
popa
adc
sbb
jo
outsl
sbb
mov
loopne
push
add
enter
sbb
int
gs
fcmovb
bnd
sub
int
jnp
add
loop
fisubs
inc
dec
stos
add
sub
ds
dec
push
add
shlb
push
mov
mov
aam
das
add
ljmp
inc
loope
gs
push
sub
push
stc
sub
inc
ljmp
adc
sbb
gs
adcl
cwtl
adc
shrb
inc
cmc
in
and
mov
jecxz
shrl
push
jno
mov
mov
es
sbb
cmp
enter
jmp
aas
in
push
adc
fstpl
out
and
inc
out
lods
add
xchg
aas
int
aaa
push
test
pop
rclb
jb
jb
jl
in
adc
in
out
mov
xchg
mov
pop
xlat
xor
mov
lds
xor
nop
pushf
xor
pop
or
mov
jae
pop
in
pop
pop
lods
push
or
movsl
fmuls
add
jno
pusha
popf
jae
mov
and
mov
pop
xchg
adc
dec
xor
pop
dec
adc
imul
push
push
aam
jne
mov
sub
pushf
jnp
xchg
mov
mov
repnz
cmp
jmp
ljmp
out
lret
imul
ret
nop
outsl
ja
mov
popa
divl
icebp
jb
pop
dec
xor
jg
pusha
fwait
pusha
xchg
pop
jg
scas
cmp
in
movlps
dec
mov
push
stos
enter
sahf
mov
push
fwait
cmp
fcomps
mov
call
add
clc
icebp
outsb
jl
scas
fnstsw
mov
repnz
inc
mov
pop
lods
xchg
xchg
lea
jo
add
pop
addr16
fs
pop
stos
std
mov
xor
xorl
xchg
jp
js
xor
lods
xor
icebp
insl
mov
test
scas
jns
fmulp
xchg
js
or
imul
das
imul
mov
into
push
mov
sbb
and
jne
push
or
cmpsl
out
sbb
adc
pop
sub
fsubrs
aad
sbb
test
and
popa
lock
sub
xor
mov
cmp
movsb
in
outsb
xchg
jp
notb
repnz
push
lds
or
and
adc
pop
dec
sub
clc
pop
mov
cmpsl
jns
pop
stc
icebp
mov
mov
addr16
mov
push
insb
cmpsl
xlat
xor
sub
sbb
adc
std
and
lds
fstps
xor
jnp
inc
clc
pop
repz
enter
loope
andl
cmp
sbb
pop
mov
xchg
test
sbb
push
push
not
cmpsl
and
cmp
cmc
or
mov
repnz
cmp
ss
fs
cmc
mov
lret
xchg
xchg
xor
adcb
gs
shrb
jmp
testl
stos
lret
into
popaw
jp
je
aad
push
mov
mov
pop
stc
fnstenv
pop
mov
out
stos
and
insb
mov
or
sbbb
mov
out
dec
test
jb
cli
xchg
pop
iret
mov
inc
lods
jecxz
pushf
sbb
jno
pop
or
dec
cmc
or
or
lods
out
data16
pop
adc
fimuls
pop
push
dec
cld
jae
xor
repnz
pushl
add
push
lret
scas
insl
outsb
xchg
ljmp
jecxz
mov
daa
mov
pop
lods
sti
add
xor
out
int
push
jne
jns
stc
dec
stos
dec
adc
ss
pop
jb
icebp
and
and
dec
dec
loop
push
setae
jg
mov
or
mov
sbb
cmp
ret
mov
rcl
lahf
les
add
pop
loop
imul
xchg
and
fs
sbb
push
mov
add
push
lcall
gs
cltd
mov
notl
fadds
fs
pushf
adc
hlt
sub
fldcw
fs
mov
sbb
fwait
xor
sbb
cmp
inc
lret
inc
ret
push
xor
pop
push
lods
outsb
scas
fstpl
cwtl
jmp
je
rol
pop
pop
push
mov
and
scas
adc
mov
adc
lods
jmp
pop
push
adc
test
cmpsl
aam
stc
sbb
enter
adc
fbld
imul
ret
mov
xchg
adc
scas
lret
or
mov
out
add
jge
stos
outsl
sub
xchg
pop
lds
in
sahf
mov
rcr
inc
iret
fsubrs
ret
jl
outsb
out
adc
add
sub
sbb
clc
int3
jl
test
mov
test
or
and
test
jnp
jmp
xchg
sub
sub
dec
les
lock
test
test
repz
shlb
pushf
test
mov
xchg
in
insl
aad
xchg
sarl
mov
xor
inc
shrl
icebp
mov
xchg
add
xorl
add
repz
jne
xchg
mov
test
dec
lret
inc
bound
lods
out
push
mov
push
cli
sub
xchg
sarb
fwait
xchg
clc
shrb
lock
call
fisttpll
lretw
add
rclb
scas
sbb
insl
mov
mov
pushf
out
sub
inc
cmp
fdivs
xor
lods
inc
data16
jge
sbb
or
popf
dec
and
mov
mov
movsb
and
bound
repz
arpl
pop
pusha
cs
push
sub
and
nop
mov
stc
bound
push
fnstenv
jno
addr16
pop
mov
xlat
push
jne
push
jne
out
sbb
test
cmp
insl
movsb
jbe
xchg
mov
loopne
outsb
sub
cmp
fdivp
add
das
cmp
dec
or
dec
jp
mov
pop
aaa
es
or
dec
pushf
jb
sbb
stos
push
cmp
sahf
mov
ret
dec
divl
cltd
adc
mov
adc
mov
mov
scas
nop
lods
push
or
out
push
addl
mov
sbbb
fnstsw
dec
cmp
cmpsl
rep
push
rorl
mov
in
adc
push
push
fcompl
lock
jae
inc
mov
xor
dec
cmp
cmp
test
sub
xchg
mov
xchg
jl
je
int3
sub
mov
inc
aam
mov
inc
cmp
mov
mov
dec
jno
xchg
mov
sti
and
or
sub
icebp
jge
lods
vcvtsd2si
sbb
push
mov
and
xor
out
dec
add
adc
cmpsl
and
xor
cmpsl
dec
movsl
pushf
push
cmp
fldenv
fdivrl
mov
sub
mov
in
mov
mov
pop
cmpsb
dec
jecxz
imul
inc
and
mov
mov
xor
pop
adc
sub
arpl
mov
test
push
push
inc
outsb
pop
imul
or
mov
out
jecxz
or
and
addr16
popl
loope
rclb
or
xchg
pop
packssdw
jo
mov
xor
test
cmp
push
adc
sub
sub
pop
push
loopne
stos
jle
in
popf
fwait
imul
fdivrl
in
test
or
loopne
movzbl
out
testl
cmp
mov
jno
add
or
movl
test
icebp
pushf
icebp
jl
sbb
adc
push
rolb
pushl
ffree
mov
js
pop
bound
shl
pushf
xor
push
or
icebp
inc
in
lret
inc
int3
stos
or
test
jns
lds
add
loope
inc
gs
push
shr
nop
jp
xchg
cmc
add
add
pop
loopne
xor
dec
mov
mov
pop
or
ljmp
imul
inc
in
xor
icebp
adc
cld
stc
add
mov
mov
hlt
pop
sbb
sbb
popf
mov
push
xchg
xchg
mov
div
out
cli
andl
jnp
xchg
bound
or
xchg
mov
cmp
ss
jmp
mov
inc
iret
push
push
insl
dec
sub
out
cltd
xchg
ret
cmp
mov
cltd
push
cmc
push
or
insl
fsubrs
sub
cltd
pop
movsl
mov
mov
call
arpl
lret
out
js
or
add
aaa
ds
out
mov
lods
fidivs
cmpsl
insb
sub
testl
or
insl
jb
sub
lret
cmp
mov
insb
testl
hlt
fmul
mov
push
push
fisttpll
dec
lock
dec
mov
bound
in
adc
sub
je
mov
lock
out
in
mov
repnz
lock
cmpsl
xchg
sub
popa
imul
and
and
notl
ret
in
in
mov
pop
inc
adc
xchg
pushf
in
in
daa
push
xor
and
jne
ds
mov
out
sub
mov
jbe
lea
int
gs
cmpsb
enter
daa
fdivs
mov
push
in
shlb
sub
pop
push
jbe
push
add
fstl
mov
mov
cmp
inc
sub
dec
lcall
add
add
xchg
sarl
sti
ret
jp
jp
aaa
jo
dec
test
sar
js
add
sub
xchg
cld
cmp
or
leave
sub
pop
mov
add
dec
mov
shll
mov
ds
inc
pop
add
das
out
add
shll
adc
adcb
push
notb
xchg
out
mov
lods
push
push
mov
cmp
cmp
imul
add
js
xlat
std
inc
lods
dec
fildl
and
pop
xor
daa
push
xchg
push
cmp
scas
sbb
ret
jmp
mov
push
es
fcomi
mov
movsb
lahf
inc
icebp
lds
and
xchg
jno
mov
sub
xchg
movsb
mov
pop
loop
add
and
stc
fwait
hlt
repnz
loop
sbb
cmp
loope
pusha
lods
pop
mov
imul
push
pop
lahf
adc
xchg
enter
cmpsl
mov
sbb
mov
sbb
or
sti
out
inc
and
repnz
lahf
movsb
ret
pushf
push
fs
icebp
iret
mov
popa
pop
divb
es
in
stc
mov
imul
lds
ss
mov
shlb
mov
inc
rcrl
dec
cld
jmp
cld
cmc
call
mov
jmp
test
mov
inc
adc
adc
push
jns
or
mov
in
jecxz
jmp
or
sbb
sub
mov
fnstsw
mov
jns
adc
aas
add
mov
cli
out
sbb
stc
testb
sahf
adc
mov
sti
xorb
out
aas
mov
jl
jl
in
mov
mov
insb
test
loopne
shll
inc
fldenv
push
out
mov
dec
cli
jle
rorl
cmp
push
dec
pop
hlt
dec
aad
popa
cmp
xchg
xchg
int
dec
sub
les
mov
iret
mov
dec
jg
push
call
dec
jo
fstpl
xchg
mov
sub
cmp
mov
int3
sbb
inc
imulb
sub
pop
cmp
sub
loopne
cs
cmpsb
pop
in
std
dec
or
clc
pusha
lods
ljmp
popa
icebp
cli
sbb
jmp
push
sub
sbb
in
in
push
rclb
xchg
inc
add
shlb
daa
adc
mov
movsl
push
dec
mov
lods
faddp
pop
inc
out
xlat
cmp
nop
aad
mov
cmp
xor
repz
mov
push
cltd
mov
fmull
and
or
insl
scas
fnstenv
lret
pop
test
lods
repnz
out
pop
dec
sub
xchg
dec
mov
into
push
jns
pushf
sub
mov
cmp
insb
mov
push
into
es
jmp
sti
rclb
idivl
or
int3
bound
cmp
jg
xor
dec
sub
cltd
test
ljmp
enter
sbb
les
mov
repnz
test
sub
pop
mov
popf
inc
sbb
mov
fildll
and
fs
add
orl
outsl
stos
mov
scas
std
sti
arpl
or
dec
pop
lods
aam
sub
scas
mov
xchg
pusha
and
fmul
fcoml
imul
rcr
dec
outsl
std
push
es
es
add
jne
rolb
lods
mov
stc
ficoml
insl
cli
adc
mov
adc
movsb
push
dec
bound
or
sbb
les
outsb
adc
mov
dec
mov
inc
and
jae
movsb
dec
loop
js
repz
cmp
scas
andps
sub
xchg
mov
sahf
cld
cltd
mov
dec
cs
and
inc
repz
mov
jecxz
mov
les
jae
insb
jno
mov
test
insb
jns
sbb
pop
hlt
nop
or
push
mull
cmpsl
ret
dec
adc
rclb
and
sub
and
test
xor
mov
inc
add
in
mov
lret
fisttpl
mov
insb
jne
push
mov
loop
jne
add
stos
inc
and
les
xchg
push
faddl
cmp
scas
notb
jb
ret
jbe
pop
daa
jo
or
mov
push
test
and
dec
mov
inc
jge
push
js
xchg
sub
call
je
cli
js
idiv
mov
push
sbb
xchg
rcll
pop
adc
inc
lret
dec
sub
ja
mov
mov
sbb
je
lahf
mov
xorb
or
mul
dec
inc
and
jb
into
cli
fsubrs
rclb
and
push
subl
clc
sub
inc
xchg
lock
test
dec
stos
pop
repz
jnp
xchg
mov
inc
sub
pop
mov
fsubrs
dec
push
mov
mov
rcrb
popa
adc
mov
es
or
xchg
mov
cmc
sub
cli
adc
lods
pop
out
inc
nop
fistpl
aad
add
mov
pop
mov
or
jne
cli
out
sub
ficompl
mov
pop
add
pop
dec
add
cld
add
push
arpl
fldt
xchg
cmp
mov
cmp
hlt
lret
mov
mov
inc
out
push
mov
push
or
stos
mov
cs
imul
popf
lret
stc
inc
movsl
mov
mov
popa
jl
or
fwait
mov
push
es
adc
xchg
jmp
xchg
lahf
sub
shrl
jae
sahf
pop
push
pop
add
lea
stos
add
add
lds
xchg
pop
ja
dec
mov
or
aaa
xor
test
in
jo
add
cmp
cmp
add
call
lret
mov
adc
imul
mov
jecxz
sbb
test
fdivl
mov
add
mov
stc
push
loopne
in
cmpsl
pop
lock
mov
mov
mov
mov
push
push
test
and
jbe
das
cmp
xchg
ret
mov
xor
mov
std
jo
ja
es
mov
dec
mov
mov
push
xor
std
push
push
stos
insl
cmc
and
xor
or
lds
les
cmp
mov
xchg
testl
dec
pop
xor
xchg
mov
lret
xchg
add
push
les
pop
sbb
pushf
add
dec
mov
cmp
xlat
fstpt
scas
add
aam
mov
push
aas
mov
in
mov
int
in
lds
mov
imul
add
add
fwait
push
inc
push
dec
xor
lahf
js
push
push
addr16
push
jae
add
lods
jl
xchg
or
jne
cmpsl
mov
fcoml
enter
roll
push
test
xlat
jae
rolb
movsl
sbb
dec
fstpt
xchg
cmp
inc
popa
lock
adc
pop
imul
notl
and
mov
lcall
or
push
xchg
xor
int
repnz
ss
add
int3
or
shr
or
rcrb
push
test
mov
add
add
cmp
mov
adc
test
lret
mov
lea
shlb
lods
ret
mov
jo
xchg
mov
mov
cmp
adc
add
mov
push
cmpsl
in
lea
sub
mov
xchg
call
add
sbb
rorl
xor
add
rclb
shr
ljmp
xchg
adc
popa
in
add
jecxz
pop
imul
mov
push
stc
ret
aaa
mov
and
sub
mov
js
addr16
pop
arpl
mov
out
sar
pop
adc
fnstsw
ljmp
xchg
sub
mov
jg
out
pushf
jo
mov
cltd
xchg
jbe
test
daa
push
xor
mov
push
fdivl
leave
or
out
outsb
mov
add
sbb
xchg
out
ret
in
aad
scas
xor
pusha
mov
syscall
repnz
fs
mov
lcall
push
aad
dec
mov
sbb
mov
pop
cmp
ds
jae
gs
les
addl
stos
fnstcw
pop
lods
bound
add
hlt
cmpsl
pop
repnz
loop
cmovg
loopne
hlt
dec
cmp
gs
and
adc
addr16
loopne
into
push
ja
in
cli
es
push
out
js
nop
std
mov
add
inc
prefetchw
add
xchg
and
fstpl
cmp
movsl
pop
xchg
dec
or
nop
mov
pop
or
add
jo
movsb
dec
data16
inc
std
push
push
ss
inc
cmpsb
ja
in
pushf
leave
mov
cmp
loop
lret
cmc
popf
inc
add
inc
mov
sub
cmp
sub
mov
push
and
aas
xchg
notl
cs
in
sub
inc
outsl
clc
push
sti
or
xchg
cs
pop
cmpsb
xadd
adc
mov
imul
jae
inc
dec
lods
sub
movsl
xchg
sub
add
lret
pop
push
rclb
adc
shrb
insb
adc
gs
and
movsb
in
pusha
test
lock
or
push
scas
into
dec
mov
cmp
pop
jle
imul
sbb
pop
iret
sbb
pop
adc
lret
cmpsl
xchg
pop
insl
scas
outsl
ret
and
lret
add
lcall
add
ljmp
or
add
scas
mov
adc
es
dec
movsb
pop
popa
inc
cmpsl
sbb
xor
addb
ja
jb
jg
xchg
imul
nop
jge
or
mov
pusha
mov
cld
pushf
fldcw
aaa
ja
cmp
ss
cmpl
cmpsb
subb
rcl
pop
sbb
fnstcw
jle
push
nop
pop
adc
scas
mov
push
xchg
push
pop
and
xchg
outsl
mov
dec
sub
sub
rcrb
test
cltd
jbe
and
out
push
jmp
mov
dec
sub
outsl
jl
insb
mov
cli
not
sbb
in
repnz
cmpl
outsl
stos
push
jae
jg,pn
pushf
add
mov
mov
push
sbb
ss
shr
adc
sub
rolb
fs
data16
jecxz
pop
cmc
pop
stos
fcom
je
outsl
jp
inc
popa
pop
ljmp
sbb
push
push
jecxz
xchg
xor
lret
cmp
and
mov
lods
inc
cmp
repz
lcall
out
mov
dec
dec
adc
xchg
xor
mov
inc
jge
push
jmp
addr16
insb
add
test
mull
ffree
shlb
clc
push
dec
scas
sbb
jg
pop
sub
outsb
into
inc
test
addr16
adc
inc
scas
push
mov
mov
mov
mov
pop
out
mov
adc
sbbl
sarb
adcl
out
mov
in
clc
push
mov
inc
push
lcall
jnp
pop
mov
pop
icebp
mov
inc
movsl
cli
mov
inc
xchg
fwait
out
faddp
es
pop
and
ljmp
lds
pop
jnp
outsb
pop
cmpsb
jp
inc
inc
xchg
das
xor
movsb
hlt
xchg
fwait
addr16
xchg
arpl
gs
mov
ret
jmp
fstpl
inc
sbb
push
mov
ret
or
push
subl
fcomps
aam
jg
je
jg
shrb
lods
mov
jmp
dec
fcmovnu
dec
jns
fcmovnbe
stos
addl
cmp
push
fadds
in
dec
mov
xor
and
mov
cltd
or
xchg
divl
sbb
mov
insb
add
xchg
lcall
pop
dec
mov
jg
xchg
sbb
loopne
jmp
into
xor
pop
lods
js
js
fadds
lcall
subl
popf
loopne
pop
andb
repnz
cmpb
adc
js
ja
insb
xor
cmc
jne
pop
jg
in
mov
fbld
mov
dec
fwait
imul
cmpsb
push
data16
add
out
outsl
jg
int
movl
data16
stos
and
xor
xchg
xor
daa
popf
push
sbb
sub
adc
icebp
dec
gs
push
je
cmpsb
imul
mov
in
das
pop
pop
mov
add
xchg
sbb
ss
add
inc
movsl
jns
pop
stos
mov
das
mov
mov
mov
repnz
in
and
jno
xlat
and
aad
inc
push
sbb
pusha
mov
lcall
xlat
loope
adc
mov
jno
add
pop
addb
xor
mov
mov
in
pop
mov
sbb
or
push
pop
aad
lahf
push
push
dec
fisubs
adc
add
add
cmp
inc
bound
jp
lds
cmpsb
xchg
outsb
leave
mov
lahf
push
imul
imul
jo
lahf
lods
cmp
mov
sub
mov
pop
popf
insl
lahf
rolb
inc
aaa
test
sub
subb
pop
mov
sti
iret
sub
pop
cvtdq2ps
inc
xor
inc
inc
sahf
cmp
mov
adc
sbb
add
and
pop
mov
clc
jp
cmc
lahf
sbb
fldl
mov
mov
mov
mov
repnz
je
sarb
mov
movsb
popf
xchg
fisubrl
out
push
loop
mov
jb
cld
mov
lods
outsl
mov
xchg
cmp
adc
jb
imul
sub
push
outsb
loopne
or
xchg
cmpsb
lret
xor
std
mov
leave
cld
inc
imul
gs
xchg
pop
loop
mov
in
into
xor
jns
aam
push
pop
adc
fptan
mov
add
sub
lcall
xor
clc
sbb
inc
rolb
mov
sbb
add
mov
sahf
push
or
and
cwtl
mov
push
fadd
sbb
mov
adc
leave
lods
jbe
push
jb
add
dec
xchg
dec
and
stos
adc
in
cs
add
push
lcall
and
lock
popa
test
cld
inc
sahf
xor
jmp
jge
mov
shr
push
in
adc
call
into
outsb
adc
mov
add
adc
ds
stos
mov
sbb
mov
cs
sbb
aad
sbb
sbbl
push
push
out
push
inc
inc
xchg
mov
faddl
test
icebp
data16
cmp
xor
add
adc
dec
pop
pop
jae
jmp
scas
dec
sub
addr16
mov
cs
sbb
jbe
mov
je
cmp
sti
cltd
jae
sbbb
iret
sub
call
inc
pop
incb
mov
lods
push
inc
rcl
inc
sahf
push
jl
subl
pushf
adc
ret
cli
into
pop
jge
xchg
pop
vandps
fstl
jp
xor
or
inc
int3
pop
cmp
popa
pop
adc
rol
lds
int3
mov
popa
jns
sub
repz
das
ljmp
xchg
lret
mov
mov
mull
mov
cwtl
movsb
aaa
lea
daa
imul
jo
arpl
cmc
mov
mov
pop
jo
or
test
lret
mov
dec
add
ljmp
jb
pop
dec
int3
jno
pop
les
adc
or
mov
in
adc
or
rcr
and
push
in
mov
jmp
pop
mov
loope
out
es
jbe
lret
aaa
into
push
pop
cmp
add
xchg
mov
or
or
sbb
or
fadds
cmp
in
pop
mov
and
stos
and
lods
ja
jne
insl
cs
jge
ss
cltd
mov
pop
in
scas
imul
loope
push
cld
cltd
es
imul
andl
stc
inc
loopne
pop
push
xlat
mov
shll
fcoml
xor
mov
iret
sub
mov
mov
mov
and
hlt
in
sahf
xchg
je
pushf
dec
mov
xchg
iret
sub
inc
sub
jmp
mov
inc
in
cli
jle
ret
jae
aam
inc
push
or
pop
pop
or
in
fisubrl
sub
ljmp
add
mov
or
std
push
inc
pusha
test
in
sbb
leave
jnp
shl
inc
xor
test
mov
cmp
mov
in
xchg
or
jmp
bound
call
out
pop
cmpsl
jl
jns
cmp
daa
inc
cmpsb
pop
nop
iret
xchg
cltd
test
mov
mov
movsb
mov
push
dec
lds
loopne
sbb
into
pop
mov
mull
movsl
sbb
cwtl
lcall
push
outsl
mov
aam
dec
outsl
mov
sub
loopne
push
add
xchg
push
jne
add
sbbb
and
fcom
bound
pop
in
adcl
sub
xchg
add
push
loopne
push
dec
shll
adcb
and
shrl
mov
popf
xchg
flds
data16
idivl
mov
inc
cld
lret
xor
ret
pop
fsub
mov
adc
cmp
movsl
dec
test
cmp
sbbl
fsubl
and
cmpl
stos
push
sbb
repnz
and
cmpsb
aam
sbb
xchg
cmp
lret
sub
jl
lcall
push
int3
mov
push
orl
jp
ud1
test
push
mov
xlat
ret
and
cmp
dec
sbb
and
cmp
jne
or
inc
jle
leave
out
in
pop
ds
add
push
xchg
loop
ret
sti
sbb
jmp
int
mov
jne
lcall
jne
sub
mov
mov
xlat
js
lods
mov
nop
xchg
das
ucomiss
cld
pop
push
scas
and
mov
outsb
pop
faddl
cli
push
sub
adc
jb
std
adc
shlb
cmp
cmp
push
jbe
dec
popf
sbb
in
mov
add
mov
aaa
jl
add
cmc
xchg
add
pop
push
ljmp
repz
push
das
jae
xor
dec
xorb
cmp
std
sbb
pop
add
sti
and
sti
dec
or
cmp
inc
fistl
iret
arpl
hlt
mov
cmp
adcl
in
sub
dec
mov
mov
ret
jp
imul
mov
insl
add
xor
popa
insb
xor
neg
cmp
movsb
cmp
jp
adc
pop
or
mov
mov
lahf
test
bound
pop
or
xor
push
aad
mov
shlb
ljmp
int
xchg
pop
outsb
xor
fs
fcoms
cli
sahf
ficomps
cmp
adc
repnz
xor
pop
ret
xchg
loopne
imul
inc
in
insb
jp
cmp
rorl
pop
pusha
stos
pop
jae
cmp
or
ja
push
dec
test
std
fmul
fwait
mov
pop
jmp
xor
imul
dec
popf
sarb
mov
inc
sub
lods
lea
pushf
lahf
lods
jmp
mov
inc
imul
scas
out
sub
loopne
mov
adc
js
sahf
popaw
mov
test
mov
leave
dec
mov
sbb
inc
xchg
cmpsb
gs
mov
xchg
paddb
xchg
in
shr
adc
sbb
add
leave
jo
movsl
lret
fimuls
enter
jg
mov
sub
push
aas
jmp
xorb
or
rorl
scas
movsl
sub
and
inc
mov
push
push
ficoml
mov
cld
and
jb
subb
loopne
mov
cmpsl
cmp
out
mov
paddsb
sbb
jmp
inc
mov
xchg
pusha
push
fyl2x
cmp
sarb
hlt
xor
les
loope
repnz
add
test
aad
sub
push
xor
icebp
int3
fwait
push
dec
out
and
cmp
dec
adc
lods
mov
jnp
xchg
cmp
mov
mov
pop
push
pop
adc
mov
ret
mov
or
xor
pop
push
xor
push
or
cmpsl
dec
shrl
aaa
shl
int3
es
mov
mov
pop
add
xor
or
jbe
shrl
sbb
mov
loopne
mov
fdivrl
mov
test
dec
cld
pop
cmp
mov
fbld
sbb
je
imul
ss
int3
push
jns
lcall
pop
inc
pop
es
in
adc
lea
cwtl
lret
inc
mov
fistl
mov
imul
xchg
ds
adc
push
push
insl
jno
push
in
xlat
xchg
movsl
jo
jmp
sub
push
sarl
mov
loop
sbb
sbb
adc
dec
test
xchg
hlt
dec
lret
inc
or
push
add
jno
mov
stos
cmp
imul
cli
cmp
out
mov
test
lret
in
inc
imul
or
add
aaa
repnz
cli
stc
mov
cmp
outsb
mov
jl
fstpl
out
push
outsb
shlb
jmp
mov
vpsubusb
fs
lea
fidivrs
sub
icebp
scas
xchg
push
setp
cli
jp
xchg
fisubl
mov
jnp
les
pop
lcall
lcall
aas
add
mov
fildl
mov
shll
add
ja
pop
mov
mov
inc
pop
pusha
and
push
icebp
lods
cmp
rol
inc
push
pop
inc
mov
xor
mov
imul
int
push
bound
pop
xchg
or
repz
cmp
and
pop
inc
mov
mov
jno
push
sbb
pop
fisubs
push
es
cwtl
pop
xlat
orl
mov
insl
xor
cmpsb
daa
mov
scas
jno
dec
mov
jg
xlat
mov
ror
addb
sarb
pusha
add
mov
xchg
adc
bound
and
rorl
fsubr
aad
ja
or
jmp
cs
out
jl
ja
divl
sub
cld
pop
aas
out
inc
cmc
jne
xorb
xor
cmc
push
dec
push
sub
jb
out
jb
das
xchg
sbb
ja
add
push
loopne
dec
daa
add
lret
mov
leave
dec
in
xor
sub
push
int
adc
roll
inc
clc
pop
mov
add
xchg
les
stos
sub
adc
mov
fbstp
jne
xchg
or
xchg
lods
or
pop
xor
add
push
inc
pop
ljmp
jmp
lahf
cwtl
inc
repnz
inc
or
and
mov
fistps
aaa
jae
or
test
sub
adc
sbb
ja
cs
cli
lods
jl
jge
add
adc
aam
test
outsb
out
sbb
dec
mov
test
pop
ljmp
das
ds
sbb
dec
or
pop
sub
push
mov
popf
into
fstl
xlat
clc
cld
outsb
adc
sahf
adc
orl
xchg
mov
or
mov
pop
jg
pop
xchg
addr16
push
lcall
push
xlat
aas
push
je
pusha
gs
lahf
popf
push
frstor
jmp
mov
lock
mov
jg
addl
lahf
xchg
xchg
sahf
shll
repnz
fisubrl
pop
jbe
sti
cltd
push
insl
ret
jl
inc
mov
pop
testl
imul
mov
ret
or
pop
das
bound
insl
clc
shrl
jl
repz
negb
lret
adc
loopne
sbb
fnstenv
and
inc
pop
aas
add
mov
movsb
popf
int3
xlat
sbb
mov
test
xchg
push
sub
xorb
jle
adcb
addr16
dec
iret
mov
add
push
fmulp
iret
jns
xor
xchg
outsb
sti
arpl
inc
dec
daa
pop
sub
xor
mov
mov
popf
add
pop
lods
ja
loope
mov
not
or
sub
and
add
cld
add
push
in
xchg
stos
repz
cmpsb
sub
leave
and
cltd
outsl
jns
fsub
movsl
add
loop
xchg
mov
mov
adc
push
xor
fmuls
mov
insl
push
mov
push
sbb
pop
rorb
imul
sahf
test
stos
addb
incl
xor
cwtl
sbb
xor
inc
les
pushf
add
cmp
int
pop
in
push
mov
fsubrl
sub
js
rolb
push
cld
adc
sub
mov
je
pop
rolb
cmp
sar
jnp
pop
or
inc
push
les
aaa
outsb
cmp
das
aam
xor
arpl
cmc
stos
sub
pop
mov
fsubs
jne
in
cmp
mov
sbb
arpl
and
pop
jge
inc
repnz
push
mov
or
pop
jmp
mov
or
and
cmc
popf
in
xor
je
or
xchg
ja
out
incl
dec
mov
and
mov
inc
in
inc
lret
adc
xchg
pushf
orb
shlb
add
out
mov
sub
sti
and
popf
sbb
shlb
shll
jge
sub
cli
jne
cmp
popa
cs
lea
adc
jl
mov
inc
jb
cmp
dec
add
dec
mov
mov
cmpl
pop
rcr
push
adc
popa
adc
xor
loope
stc
fsubp
stos
into
pusha
xchg
xor
push
or
movsb
adc
mov
cmpsl
jb
stos
xchg
jns
mov
or
lock
pop
xchg
pop
adc
sahf
mov
ljmp
loope
push
pop
xchg
and
cmp
inc
int
imul
push
clc
out
mov
int3
ror
mov
imul
mov
mov
mov
and
push
jns
jl
movsl
or
fmuls
shrl
fwait
pop
pop
pop
sub
add
xor
ret
push
cmpsl
and
mov
dec
and
lret
or
inc
pop
mov
in
mov
loope
cmp
push
iret
push
mov
mov
stos
sbbb
negl
fisubs
mov
sbb
xor
stos
push
shl
add
fnsave
mov
enter
sbb
xor
jp
xchg
push
cmp
icebp
lea
cltd
cmp
mov
outsb
dec
xor
push
push
cmp
cmp
std
repz
push
cltd
mov
jb
jae
mov
push
iret
jl
sbb
or
jecxz
lods
fwait
enter
add
pop
pop
mov
insl
out
pop
sbb
dec
cwtl
clc
mov
int3
inc
daa
sarl
ds
pop
cli
dec
bound
xchg
mull
mov
bound
xchg
sub
popa
shrl
in
add
xchg
inc
push
push
shlb
xor
movsb
sub
ljmp
cmpsl
jp
sbb
test
pusha
je
mov
mov
in
aad
push
lods
dec
fistl
jmp
pushf
scas
ror
xchg
add
outsl
addb
scas
mov
lds
loope
cmp
pop
or
icebp
xor
ret
sbb
sbb
mov
out
scas
or
mov
xchg
addb
mov
mov
leave
inc
cmp
add
push
gs
call
mov
cli
les
lahf
mov
sbb
inc
bound
sbb
stc
fcoms
mov
inc
in
jmp
jge
in
pop
and
push
and
loop
lcall
jp
outsb
stos
in
adc
orl
add
or
xor
add
dec
xor
pop
inc
nop
enter
mov
inc
push
push
jmp
imul
enter
inc
mov
mov
lret
icebp
or
sub
mov
sub
mov
test
or
xlat
push
out
fnstsw
mov
push
sub
cmpsb
xor
mov
hlt
inc
or
das
xchg
push
sbb
movsl
cmp
arpl
movsl
mov
outsb
insl
stos
ficoml
xchg
push
js
ret
push
mov
jle
or
popa
pop
adc
push
cmp
gs
stos
jae
or
int3
jg
adc
cmc
insl
xor
out
std
and
daa
inc
fsubl
addr16
dec
dec
fists
aam
repz
inc
or
xor
jbe
imul
pushf
sbb
mov
cmp
lret
jbe
xor
mov
and
ss
push
xchg
fstpt
inc
pusha
and
adc
idivb
aam
mov
sbb
lcall
lea
push
jecxz
in
sub
fstl
es
rcrb
cmp
xchg
std
sub
push
cmpl
cltd
lcall
pop
lret
enter
mov
sbb
es
out
or
push
cli
shll
mov
lods
scas
test
add
xor
aaa
mov
inc
push
iret
rcl
divb
xchg
mov
mov
push
cmp
mov
mov
cmp
es
inc
daa
push
ficoms
rcrb
data16
test
sbb
mov
push
push
push
sbb
addb
sub
add
pop
hlt
stos
jae
pop
xchg
int
push
mov
mov
add
inc
in
jbe
pushf
mov
add
in
push
or
xor
ja
mov
mov
iret
add
mov
sub
mov
mov
jne
in
call
js
cli
lds
jno
and
mov
sahf
scas
push
out
jns
xchg
mov
fnstenv
push
jl
mov
adc
or
into
js
cs
adc
xor
in
fcomi
mov
cmp
push
test
jbe
pop
jnp
add
pop
dec
push
mov
pop
aaa
ljmp
dec
test
sahf
ret
cwtl
xchg
sub
mov
xchg
and
iret
mov
in
jmp
cmp
add
pop
push
fidivrl
xor
pop
mov
mov
sub
dec
and
mulb
hlt
or
adc
jl
pop
dec
int3
or
push
mov
sti
inc
aad
iret
jl
jb
inc
pop
inc
mov
test
xchg
inc
xchg
cltd
lock
gs
in
stos
sarb
lret
into
and
cmp
sbb
movsb
dec
xchg
pop
or
cmp
and
loop
xchg
dec
cwtl
jecxz
inc
push
nop
inc
nop
sbbb
sub
imul
daa
bound
or
cmc
xchg
fstpl
lock
pop
mull
pushf
adc
jnp
aam
imul
sbb
push
pop
outsl
jns
dec
scas
test
in
mov
pop
inc
jle
inc
lret
lea
out
mov
ja
stos
jle
push
test
daa
ds
pop
add
int
xor
mov
push
mov
mov
popf
stos
divb
jp
xor
aam
xor
cmp
jno
xchg
aam
jnp
mov
sbb
push
sbb
cmc
xchg
in
sar
fisubrs
imul
sbb
cs
dec
mov
cld
mov
xchg
jo
jno
into
mov
or
jb
out
in
ja
mov
sub
pop
in
push
push
dec
dec
lahf
int3
and
cld
lock
lea
in
inc
lods
rolb
mov
rorb
std
inc
sbb
lods
inc
in
subb
pop
sbb
stc
sub
lock
enter
sbb
imul
gs
addb
xchg
xchg
dec
je
leave
cwtl
jns
data16
sub
mov
mov
aad
bound
addr16
pop
test
loop
mov
adc
push
xor
fldl
idivb
scas
call
test
jns
jbe
push
mov
sbb
sbb
cmpsl
in
and
xadd
in
mov
in
jo
rcrl
js
lcall
add
adc
frstor
push
fst
adc
adc
aaa
add
mov
fisubl
loopne
cmp
rcrl
pop
test
jmp
mov
jnp
dec
lock
scas
jb
inc
loopw
test
add
push
into
jbe
cmc
outsl
xchg
outsb
dec
in
popa
mov
dec
mov
push
pushaw
aas
loopne
fdivl
mov
std
icebp
mov
inc
xor
mov
mov
jmp
in
and
test
push
stc
xchg
mov
out
mov
mov
cmp
mov
test
jmp
sahf
int
mov
es
push
es
pop
and
cmpsb
lea
jge
cmp
xchg
pop
stos
mov
cmp
mov
loope
dec
sahf
xor
xchg
xchg
mov
sbb
xor
syscall
sbb
or
pop
add
xchg
fwait
xor
enter
cmpsb
cmpsl
dec
lret
dec
add
cmp
push
or
imul
cltd
mov
jl
xor
sbb
sub
or
inc
shlb
shlb
ja
mov
push
fmuls
loop
add
and
mov
mov
and
in
popf
mov
push
repz
pusha
dec
sub
jbe
dec
dec
cmp
sub
lcall
dec
mov
shll
xchg
sbb
dec
pop
push
mov
adc
mov
ds
pop
cmpsb
xchg
fcomps
repz
xchg
jle
in
lea
push
xor
loope
pop
and
add
mov
in
sbb
jns
or
clc
and
sahf
jmp
out
add
pop
push
mov
cwtl
push
movsl
xchg
faddl
sub
nop
mov
into
pusha
stc
or
jle
dec
mov
inc
and
dec
imul
fsub
sbb
push
outsl
and
jmp
sub
cltd
decl
in
push
gs
or
test
jno
test
pop
repnz
cmp
xchg
ret
dec
or
pop
xlat
inc
fisubl
fsts
add
shr
shlb
cli
ljmp
or
mov
fidivrs
pop
dec
xor
int3
fisubs
in
daa
cmp
aas
xor
out
testb
jns
test
push
jae
mov
ret
clc
xchg
pop
and
in
test
adc
dec
cmp
call
in
call
sahf
jp
and
in
sbb
jg
nop
mov
mov
mov
outsl
call
sub
inc
ja
dec
xor
addl
stos
mov
mov
mov
cmp
out
in
dec
stos
mov
fimuls
add
xor
lods
outsl
outsl
std
ret
mov
daa
imul
sbb
insb
enter
cmc
dec
in
test
popa
mov
jle
je
int
outsb
adc
pusha
fadd
cltd
inc
adc
xchg
sti
adc
xchg
jmp
xor
add
adc
popa
mov
call
inc
das
roll
es
and
mov
push
push
inc
push
pop
sub
add
dec
dec
test
xchg
ds
je
add
sbb
mul
sbb
cs
out
push
inc
into
mov
in
aad
aaa
loope
sub
repz
jle
rorl
sbb
lea
xchg
in
nop
sub
pushl
push
adc
lret
and
push
inc
outsb
int
jl
jno
sub
stc
push
adc
les
imul
in
push
ja
je
mov
test
sub
stos
stos
or
stos
out
movsb
jo
mov
ret
pop
shr
ljmp
vsqrtsd
pop
cmpsl
fstpl
jns
adc
or
test
cmp
lret
pop
stos
or
mov
fistpll
mov
js
rcrl
mov
test
fcmovb
mov
jno
push
ret
mov
pop
repz
jbe
sub
push
pop
mov
addr16
xchg
inc
dec
xor
push
dec
xor
and
mov
jmp
adc
push
mov
xchg
jl
inc
std
daa
jae
arpl
pop
inc
in
sub
ds
xchg
add
mov
or
push
cs
mov
pusha
adc
cmp
push
sub
inc
loope
mov
fistpl
out
jb
push
jp
and
push
imul
xor
jae
jmp
jle
out
nop
mov
test
and
fldt
mov
orl
add
loop
sahf
xor
mov
test
mov
dec
cmpsl
xchg
ret
sub
jo
push
jae
cmp
sub
pusha
push
scas
inc
fldt
push
inc
sahf
cmc
nop
out
cmp
aad
mov
andl
add
sub
cmp
inc
ss
jae
test
in
cmp
mov
xor
mov
xchg
out
movsw
lods
push
adc
data16
and
sbb
in
insb
mov
shll
jnp
xchg
mov
pop
push
rcrb
insb
push
mov
test
jbe
and
call
pop
mov
mov
pop
mov
xchg
ljmp
pop
sbbb
add
jno
xchg
cmc
push
xorl
sub
dec
rsqrtps
out
fwait
or
add
shrd
ds
out
and
iret
js
xor
and
jle
jg
dec
add
stos
test
cltd
push
sub
in
icebp
push
aas
pop
test
shll
xchg
test
dec
gs
ljmp
xor
cld
jecxz
jnp
sub
xchg
cmpsb
in
lds
inc
lea
sbb
call
inc
fsubs
into
adc
aas
std
ljmp
loop
lods
jecxz
mov
push
inc
lea
jo
scas
add
xor
sbb
sbb
stos
sbb
call
insb
or
xor
mov
pushf
adc
cmp
pushf
sub
aam
popf
ret
out
das
adc
test
pop
push
add
push
and
mov
adc
pop
pop
lods
add
js
repnz
mov
jne
loope
jge
mov
fs
lods
cmpsl
fdiv
xchg
jp
sub
ror
mov
cli
cmp
shlb
or
mov
xchg
dec
xor
push
inc
xchg
shrb
orl
punpcklbw
int3
into
cld
inc
pop
dec
out
js
jl
adc
mov
and
pop
and
bound
mov
and
stos
hlt
and
mov
js
sti
xchg
test
cltd
scas
fsub
mov
mov
jo
jp
je
jnp
ja
cld
inc
push
jp
sub
mov
jne
sub
std
mov
fwait
inc
jae
lar
es
push
push
dec
mov
adc
mov
pop
leave
mov
insl
xchg
jo
adc
dec
sbb
xchg
es
push
pushf
jbe
fisttpll
int3
sarb
out
inc
rclb
fcmovnb
fidivrs
dec
xadd
je
adc
dec
fists
inc
jle
imul
mov
es
insb
outsb
xor
xchg
jmp
or
imul
divb
mov
testl
sbb
xor
pop
jns
pop
inc
ret
mov
fstps
daa
cmpsl
mov
outsb
and
or
xlat
adc
xor
add
int
arpl
jl
cltd
orl
sub
mov
pop
cld
xchg
xchg
push
popa
lahf
jno
mov
push
cmovp
adc
jp
pop
movsb
stos
cmp
mov
mov
icebp
stos
push
mov
cmpsb
mov
nop
lds
mov
or
test
cli
loop
sub
ret
cmp
clc
mov
jge
out
jecxz
inc
je
fimuls
add
adc
movsb
mov
mov
inc
adc
outsb
mov
sub
push
jnp
mov
testb
lods
loop
push
dec
mov
xchg
sub
jg
imul
adc
jge
mov
mov
push
pop
sbb
cs
lods
inc
mov
sbb
xor
xchg
iret
sub
lock
movsb
pop
pop
stos
jle
mov
sbb
out
or
mov
scas
push
imul
push
cltd
sbb
and
add
inc
in
push
popf
nopl
xor
adc
insl
mov
mov
push
sbb
arpl
pop
arpl
dec
pop
jns
sarl
xchg
sbb
mov
out
mov
insb
add
je
jo
jne
loopne
das
sub
dec
dec
mov
push
dec
jge
js
decl
filds
fidivrl
ret
loop
cmp
add
out
mov
push
pusha
mov
rcrl
jg
mov
jge
aam
cmp
or
inc
mov
sbb
push
dec
lahf
inc
ret
adc
mov
enter
inc
jecxz
xchg
and
mov
sub
arpl
ret
cmovge
mov
dec
sbbl
jge
mov
inc
push
adcl
in
and
in
fwait
insl
cmp
mov
je
cmpb
push
sbb
out
adc
movsb
cmp
mov
inc
neg
add
push
inc
xor
lds
call
pusha
xchg
cmp
movsb
fnstsw
xchg
jecxz
adc
adc
in
in
mov
in
push
pop
pop
push
data16
ret
pop
je
push
dec
push
pop
loope
cmp
in
mov
imul
mov
xor
mov
cmp
mov
daa
dec
mov
mov
cmp
sti
out
ds
shrl
cltd
xlat
daa
and
loop
lock
inc
daa
xor
pop
mov
or
popf
pop
xchg
iret
addr16
lods
nop
add
outsl
rcrl
ret
pop
pop
push
stc
out
xor
int
sti
insb
xchg
in
pop
add
cmc
push
popa
adc
cmc
and
cs
mov
loopne
pushl
nop
mov
mov
push
ret
loopne
inc
inc
fisttpl
lods
dec
jbe
mov
sub
push
rsqrtps
mov
ret
scas
pushf
icebp
imul
repz
in
test
bound
aam
inc
fistpll
jo
fdivs
cmp
jae
mov
lods
mov
popa
jnp
iret
fmulp
insb
cltd
mov
and
mov
and
pop
adc
sub
jae
mov
mov
xchg
jmp
push
out
push
andl
pop
push
ss
or
dec
test
xor
in
in
sub
subb
leave
jg
stos
push
fstps
pop
inc
jnp
in
js
adc
mov
cmp
pushf
push
iret
and
jb
mulb
and
stos
mov
push
std
enter
fsubl
ljmp
scas
pop
out
cmc
enter
sbb
fsubp
rorl
test
xlat
push
icebp
in
mov
cld
cmpsb
xor
test
fcoms
jmp
pop
push
es
inc
add
cmp
cmpsb
mov
insl
andl
pop
mov
mov
pop
push
bound
in
aam
cmp
pop
stos
inc
or
js
and
jbe
xorl
push
scas
pop
aaa
addr16
sbb
sbb
arpl
dec
and
jne
mov
dec
or
in
not
in
cmpsl
push
and
stos
push
adc
in
inc
xor
rolb
jbe
inc
ret
rcrl
add
dec
jl
pop
out
sbb
insl
imul
adc
jo
test
mov
and
enter
sub
fidivrs
add
jmp
lret
push
cltd
pop
inc
stc
test
iret
push
adc
dec
mov
mov
je
lret
cmp
fldl
pandn
mov
clc
dec
dec
clc
cwtl
xorl
ror
pop
cmp
lahf
sbb
pushf
xchg
subl
aad
mov
sarl
adcl
out
fcomp
or
jb
outsl
mov
js
cmp
dec
push
jae
bound
push
iret
push
xchg
mov
loop
pop
pop
cmp
mov
adc
iret
mov
jge
loopne
or
jmp
mov
sbb
jle
rolb
stc
dec
inc
addr16
xchg
insl
cmp
imul
sbb
sub
mov
out
idivb
mov
sbb
push
xor
push
out
ret
mov
mov
xchg
push
jmp
xorb
hlt
sti
and
jle,pn
dec
and
dec
push
lret
add
push
push
aad
mov
adc
in
sbb
sbb
cmp
pop
jmp
hlt
aaa
or
shr
push
jno
mov
jo
sub
mov
ja
daa
cli
xlat
int3
jle
fs
in
sub
jae
jbe
int3
scas
loope
mov
movsb
xchg
std
cmp
outsl
jp
pop
or
mov
add
addr16
cmp
inc
mov
sti
bound
mov
add
scas
lret
leave
in
cmc
sbb
lods
in
cmpsb
add
fwait
insl
scas
das
loopne
rcrb
roll
xchg
push
mov
dec
fidivrl
cmpsb
mov
in
cli
daa
add
and
push
aas
push
sbb
into
int3
inc
dec
pop
sub
insl
test
and
jmp
sub
cmp
jg
pop
inc
ds
push
cmp
lods
jle
cmp
cmp
aaa
test
out
inc
cld
jno
lcall
movl
mov
addr16
inc
and
pop
cltd
jno
nop
daa
inc
shlb
or
and
sti
hlt
sbb
mov
mov
shlb
sub
sub
xlat
aas
movsb
jp
mov
adc
dec
sub
and
pop
mov
rclb
push
popf
pop
fildl
cli
test
inc
mov
dec
mov
jle
ljmp
enter
mov
mov
pop
xchg
fisubl
mov
orl
clc
hlt
jbe
popa
adc
lock
dec
mov
push
push
cwtl
ljmp
loope
adc
or
cmp
pop
jge
inc
sub
xchg
filds
mov
js
and
jb
xchg
lock
addb
lret
inc
sbb
adc
sub
addr16
mov
scas
xor
rolb
scas
xlat
sbb
scas
sbb
nop
jae,pt
jnp
out
pusha
ja
stc
ret
lock
inc
jp
mov
cmp
mov
lret
mov
outsl
fcmove
insl
push
inc
fdivr
mov
push
test
xor
lods
test
xchg
bound
subl
movsb
stos
bnd
sbb
push
push
cmpsb
imul
repnz
outsb
add
shr
aad
add
xchg
into
scas
add
ret
mov
rcl
inc
jle
xor
push
push
into
lret
iret
jnp
cltd
xor
arpl
push
and
cli
mov
sysenter
leave
push
int3
xchg
inc
fstpl
loop
mov
mov
dec
mov
mov
call
xchg
leave
push
cs
sub
outsb
outsb
cmp
xchg
inc
dec
out
imul
adc
pop
or
mov
int3
fwait
std
mov
push
mov
pop
stos
int
insl
in
xchg
adc
xchg
mov
sbb
pop
lahf
mov
xchg
or
jl
insb
imulb
pop
or
xchg
push
mov
bound
lahf
test
jl
fistpl
ret
fwait
xchg
adc
sub
addr16
jo
cmpsl
adc
imull
std
or
xchg
movsl
dec
mov
ljmp
clc
cmc
notb
fcomi
mov
push
or
and
fnstenv
jno
outsb
cs
ljmp
aad
ja
shl
lret
sbbl
jg
push
cltd
lret
aas
jns
pop
fimuls
pop
sub
std
mov
pop
dec
pop
push
ret
dec
push
jo
aaa
jg
imull
xchg
cmpsb
xchg
inc
cmp
mov
xchg
loopne
out
pop
mov
push
jno
out
cmpl
repz
xor
test
fdivs
mov
lods
sub
pop
mov
in
sub
pop
lea
mov
dec
push
and
mov
bound
loope
jno
push
xor
ficomps
add
sub
xor
int3
add
insb
jnp
sbbl
fcompp
dec
cld
movl
sub
cmpb
out
add
pop
inc
cmp
dec
adc
mov
mov
or
push
dec
push
inc
lahf
mov
push
fwait
imul
aaa
mov
mov
fsubp
out
jle
in
push
or
pop
inc
inc
jne
call
into
add
fwait
ret
xor
jmp
mov
add
and
addb
adc
mov
mov
dec
pop
xchg
inc
dec
sub
pushf
fisttpll
lahf
leave
sbb
xchg
cmp
nop
and
negl
test
jmp
push
mov
adc
mov
inc
pop
imul
or
cld
cmp
or
leave
aad
mov
imul
pop
pop
mov
les
mov
stc
adc
xchg
jne
mov
ret
fdivs
jle
test
into
popf
fwait
xchg
lret
mov
mov
cwtl
aad
inc
sub
mov
sbb
inc
jg
mov
cmp
pushf
or
sub
jnp
mov
scas
mov
lock
test
fistpll
push
xchg
insl
repz
and
in
andl
cmp
out
xchg
add
pop
outsl
mov
adc
or
out
sub
add
iret
popf
jl
sub
addr16
sub
daa
pop
and
out
inc
cmp
sbb
push
repnz
jne
fadds
xor
dec
sarb
aad
insl
fbld
and
je
lds
fiadds
jmp
cmc
push
xchg
adc
pop
or
loopne
inc
jl
je
mov
clc
nop
pushf
shlb
jo
into
mov
scas
and
lcallw
xchg
test
cmp
mov
repz
jne
les
push
std
dec
sub
pop
fcoml
xchg
jge
mov
cmp
cmp
test
xchg
jge
pop
fnstsw
lds
cmpsb
jge
dec
mov
jb
adc
out
inc
pushf
data16
hlt
lret
xor
out
repnz
inc
pop
hlt
notb
popa
and
andps
outsb
icebp
ljmp
and
xor
insl
out
iret
mov
in
pop
and
das
jl
fcoml
fmul
fldt
into
xorb
fisttps
fcmovb
xor
xchg
shrl
xorl
adc
mov
xlat
divl
int3
je
mov
lahf
jae
or
xor
mov
dec
pop
xor
jle
sub
add
icebp
stos
adc
pusha
pop
stos
inc
mov
out
xorb
shlb
mov
push
cmc
xor
movsb
jno
lods
mov
mov
pop
sbb
fwait
divb
mov
xor
out
cmp
mov
push
sbb
mov
lods
outsb
pusha
xchg
mov
add
mov
negb
push
mov
cmp
aaa
faddl
mov
emms
inc
lret
sub
cld
cmp
pushf
pop
movsl
pop
hlt
xlat
ret
dec
das
dec
rcl
jge
xchg
sbb
test
cmpsl
stos
sub
and
sbb
mov
add
in
jno
push
cmpsb
mov
fldt
mov
repz
fisubs
les
add
fs
and
dec
or
and
xor
ret
jns
cmpsb
mov
and
adc
out
pop
in
out
addl
test
insb
rorb
outsb
dec
out
cmpsl
xchg
adc
outsl
inc
jl
mov
lret
in
insl
adc
sub
loop
mov
nop
out
cmpsl
cmp
stos
stc
pop
popa
add
xchg
push
inc
mov
add
fcmovnbe
cld
xor
pop
daa
push
xor
cmp
jp
jecxz
inc
pop
dec
jnp
rolb
adc
pop
xchg
ret
test
xchg
out
sahf
xlat
imul
sub
mov
data16
xor
xchg
sahf
mov
add
lret
fadds
push
mov
jl
leave
rcl
pavgb
cmp
inc
sub
mov
mov
cmp
mov
mov
add
in
adc
call
or
xchg
out
mov
ljmp
cmp
inc
fs
jmp
arpl
outsl
mov
ds
out
ljmp
call
mov
cmovne
imul
mov
stos
data16
rol
xor
call
jns
mov
and
sbb
sub
pusha
cmpsl
hlt
nop
jns
xchg
mov
xor
dec
pusha
mov
mov
aam
sub
outsl
out
adc
stc
dec
mov
fcoms
in
scas
test
repnz
cmc
push
es
or
divl
sub
pop
sti
pop
sbb
or
outsb
push
imul
test
in
cwtl
mov
sub
push
mov
movsb
push
ss
lds
sbb
mov
fs
jg
sahf
insb
ss
mov
push
push
rcll
ljmp
lcall
mov
cmc
adc
movsb
repnz
pop
xchg
xchg
dec
jns
je
mov
sahf
xor
pop
mov
addb
hlt
or
dec
outsl
xlat
lea
stc
sub
jecxz
lret
jg
insb
inc
adcb
push
mov
pop
add
pop
adc
mov
jbe
jne
out
sarb
insl
nop
stc
mov
push
repz
in
call
or
std
lcall
ds
fistps
pusha
jmp
mov
popa
ja
into
data16
xor
cmp
fdivr
ret
rolb
aaa
mov
mov
mov
gs
mov
add
into
mov
push
daa
adc
mov
lea
add
add
sbb
jnp
pop
cmp
jae
fistps
add
daa
out
ja
dec
cli
fwait
popa
mov
shl
xor
outsb
popf
jnp
pop
jno
push
cmc
add
jmp
fcoml
pop
pop
outsl
xchg
push
inc
pop
push
sub
cmc
mov
aaa
je
stos
xchg
cs
adc
imul
or
ds
jo
mov
push
insb
lock
jge
fildl
popf
jl
jl
in
das
mov
and
xor
pop
nop
jge
and
mov
pop
or
dec
jl
push
push
fstpl
mov
pop
adcb
fildll
cmp
out
jne
dec
inc
cmp
stc
smsw
or
icebp
outsb
dec
sbb
push
mov
dec
nop
pop
scas
cmp
mov
xchg
mov
push
mov
adcb
mov
dec
movsb
fwait
add
jae
sti
push
ljmp
js
mov
cs
loopne
dec
lods
std
push
or
leave
rol
aad
aaa
and
ss
dec
push
mov
push
cmp
in
subl
adc
xor
inc
addr16
lret
inc
and
fldl
xlat
bound
jp
xor
cmp
push
leave
sbb
mov
rsqrtps
inc
fisubrl
lock
call
push
sub
or
jp
dec
daa
stos
neg
add
dec
neg
mov
aad
push
jecxz
fs
lods
pop
push
jl
and
jno
jns
mov
lds
pop
ds
mov
ja
fstps
out
test
aad
push
hlt
cmp
imul
push
sub
movsb
jne
xor
mov
pop
jbe
pop
jne
push
ds
jge
lock
aas
mov
dec
mov
in
cmpsl
in
outsb
add
sub
sbb
test
mov
dec
jbe
aaa
jg
and
das
fadds
sahf
call
mov
add
popa
mov
ljmp
nop
cmc
pushf
cwtl
push
sbb
mov
xor
or
outsl
add
mov
inc
mov
test
enter
lock
mov
sbb
pusha
lods
cmp
aas
sub
out
std
jg
daa
aam
inc
cmpb
clc
hlt
dec
in
mov
mov
mov
and
sbb
test
xor
stc
inc
push
dec
push
lds
dec
dec
pop
out
mov
test
ja
jo
popa
jmp
div
fsubrp
jmp
test
insb
sub
mov
inc
sbb
lret
in
and
push
xchg
lcall
outsl
add
dec
and
aaa
fisubs
test
mov
adc
rolb
cwtl
xchg
or
ret
lods
push
cs
dec
mov
lcall
adc
inc
mov
and
push
add
fcmovbe
shlb
sarl
addr16
pop
idivb
add
iret
je
xchg
aam
mov
cltd
inc
xchg
outsl
int3
sarb
pminub
test
and
icebp
sub
xlat
inc
jge
dec
pop
arpl
movsb
adc
xor
std
adc
lods
push
jge
jne
insb
mov
inc
and
mov
call
arpl
icebp
mov
inc
outsb
sbb
cmpsl
mov
add
es
jnp
push
add
aam
mov
leave
fcmovnbe
or
xchg
mov
imul
mov
and
dec
mov
ds
clc
out
inc
je
mov
lcall
sbb
addb
test
ljmp
dec
xchg
mov
and
mov
jmp
in
mov
test
clc
pop
adc
fistps
sub
loopne
lcall
lahf
loope
push
push
xorb
mov
mov
mov
repz
push
rcrb
mov
and
xchg
xchg
inc
fwait
int3
xchg
sub
inc
adc
shrb
fwait
xchg
xor
add
out
mov
push
mov
xchg
push
pop
add
mov
test
pop
dec
inc
out
bnd
nop
jne
pusha
cmp
ret
fs
rcl
pop
sub
push
xchg
fistpl
out
mov
into
decb
adc
std
jp
sub
mov
pop
icebp
xchg
pop
nop
jge
mov
loope
fmul
fldl
push
xchg
jmp
pushf
imul
aas
mov
enter
dec
mov
std
xchg
inc
stos
gs
xor
or
pop
jne
pop
nop
jmp
sbb
mov
data16
xchg
lods
pop
stc
imul
sub
insb
or
mov
pop
mov
push
cmc
pop
aas
pop
loope
adc
dec
lods
and
mov
xchg
jns
dec
and
ja
aas
lds
sbb
out
rcll
insl
repz
add
mov
dec
or
add
cmc
mov
jge
cld
pop
mov
xchg
push
cwtl
fdivrl
aad
lods
push
or
inc
mov
imul
out
or
fisubrl
sub
xlat
mov
sbb
into
xchg
dec
mov
nop
mov
jae
je
push
dec
mov
jo
and
xor
jle
loope
push
dec
or
jle
out
movsl
inc
adc
mov
fdivrp
pop
dec
aam
mov
inc
jne
add
lcall
leave
sub
movb
fisubs
rclb
in
stc
lret
mov
pop
sub
repnz
cmpsb
daa
shr
idiv
add
leave
mov
pop
sbb
mov
xor
cmpl
fwait
out
loop
xchg
jp
test
push
stc
movsl
stc
js,pt
jl
int
stc
cmpsl
push
lock
imul
jne
push
mov
xchg
add
push
ds
jae
inc
pop
inc
mov
addr16
mov
pop
test
leave
in
add
push
data16
pop
mov
rclb
lcall
sub
xchg
ja
cmp
add
sbb
mov
xchg
xchg
add
sub
xor
pop
adc
cmc
loope
push
repnz
inc
inc
test
mov
jnp
mov
xchg
mov
mov
mov
sbb
mov
cmp
std
cs
cmp
xchg
fwait
insb
fistpl
lds
xor
adc
pop
mov
fdivl
test
outsb
add
or
fildll
iret
adc
and
in
cmp
inc
add
pop
adc
cli
mov
push
mov
lea
imul
out
jb
cmpsl
push
ljmp
mov
pop
movb
in
out
fcoms
mov
push
addb
subb
jle
sub
gs
push
or
scas
lock
in
push
fidivs
das
and
mull
repnz
pushf
syscall
inc
sbb
inc
push
pusha
fidivrl
arpl
rep
jno
push
dec
aad
lods
cs
sbb
cmc
cli
test
xor
outsl
and
popa
ljmp
rclb
out
ret
mov
jbe
insl
inc
jge
mov
out
cmp
sbb
mov
cmovl
sbb
aad
js
pop
mov
xor
mov
fwait
xchg
icebp
in
jle
add
xchg
aad
cmp
xor
daa
fxch
fcomip
lret
mov
testb
xchg
inc
add
xchg
jl
push
ss
movsw
stos
mov
into
shrb
scas
in
push
mov
inc
cs
loopne
mov
mov
pop
or
add
adc
incl
and
xor
pop
push
inc
mov
repz
dec
xchg
lea
mov
ror
and
jmp
outsl
mov
lods
mov
pushf
insb
in
lret
mov
or
cmp
and
enter
roll
lcall
mov
add
mov
jb
fidivrs
push
jae
lcall
pop
xchg
push
sub
add
xchg
mov
call
xlat
pop
shll
sub
sub
and
inc
cmpsl
outsb
dec
shrl
jb
fsubr
pop
jp
fsubl
cmp
insb
popa
cltd
push
inc
scas
cli
xchg
xchg
push
xchg
add
mov
xchg
push
cmc
outsb
bound
lahf
jno
pop
xor
dec
call
sbb
das
cs
push
lods
mov
push
subl
ljmp
cmp
xchg
inc
test
ret
sbb
jmp
mov
xor
dec
jmp
mov
imul
outsb
icebp
add
push
outsl
xchg
popa
pop
ja
inc
into
mov
xchg
pop
jge
mov
in
insl
mov
mov
jmp
imul
or
fs
loopne
or
js
cmp
jnp
xorb
addl
jns
je
into
jecxz
dec
movsb
mov
xor
pop
lcall
jbe
add
sti
push
adc
xchg
lods
test
addb
les
cmp
test
in
in
aaa
into
movntps
movsl
test
lods
dec
push
push
les
push
into
stos
ss
push
stc
sti
or
loopne
std
lcall
hlt
rep
ret
prefetch
push
in
dec
or
push
xlat
mov
lahf
xchg
push
add
cmp
push
jge
xor
int3
imul
pop
hlt
pop
jns
aad
push
mov
mov
stc
cmc
sbb
outsb
xor
cmp
mov
hlt
in
jp
push
and
jmp
ljmp
xchg
aas
or
fldl
jns
or
mov
iret
push
mov
in
xchg
shl
ljmp
dec
xchg
mov
mov
pop
dec
xor
cmp
sub
es
push
fldenv
fistps
inc
out
xor
push
scas
mov
pop
ficoml
fwait
pop
pop
das
mov
adc
ljmp
or
loope
test
lock
cli
sbb
leave
imul
cmc
int3
xchg
mov
sub
and
jbe
pop
dec
fs
pop
jnp
ja
pop
and
sub
mov
ja
fwait
mov
dec
mov
nop
hlt
test
mov
ret
xchg
cmp
xor
popf
clc
movsl
sub
call
ss
mov
pop
mov
inc
sub
stos
xor
sub
inc
outsb
cli
inc
jl
mov
imul
and
andb
stos
jno
and
sub
insl
xchg
push
cmp
ffree
inc
add
mov
popf
xor
and
xchg
mov
dec
cmp
in
inc
lds
leave
adc
jbe
lods
fisubrl
data16
jp
dec
popf
iret
std
pop
cmp
jge
js
jne
sub
shll
shrb
pop
popa
mov
jmp
or
fs
lds
sbb
pop
adc
mov
sub
cmc
push
pop
repz
or
mov
push
jp
sar
cmpsb
adcl
mov
mov
loope
inc
incb
cmc
jmp
xlat
push
rcl
sub
bound
and
faddp
xchg
sub
stc
std
cmc
lds
dec
pop
jp
inc
shrl
arpl
ljmp
addr16
push
jno
push
aad
lock
cmpl
int3
aad
inc
mov
jp
push
sub
xor
inc
aam
push
jl
fisttps
sub
lds
mov
cmp
jmp
jl
mov
fistpll
pop
subl
loope
mov
movsl
push
xchg
mov
lods
popf
int
or
push
add
es
jb
movsl
adc
sti
and
jmp
add
mov
push
out
jo
adc
mov
ss
push
fnstcw
push
push
mov
lcall
mov
mov
sbb
sete
sbb
inc
gs
in
adc
sub
push
xor
sub
ss
or
fbld
sbb
push
int3
aad
mov
les
cmpl
jge
pop
jo
inc
inc
jg
movsl
mov
into
popa
add
mov
data16
cmp
enter
inc
mov
push
mov
popl
pop
mov
out
les
xor
jne
mov
xchg
cld
fs
or
xchg
inc
xor
mov
popf
or
out
jg
mov
loop
jno
pop
les
imul
sbb
mov
cmpsl
cmp
add
xor
and
dec
fucomi
push
cmc
mov
nop
mov
xchg
aad
daa
ljmp
jns
aas
aam
repz
and
xchg
mov
xchg
adc
in
mov
les
fwait
mov
and
pop
das
mov
fistpl
xchg
aas
pop
cmp
pop
mov
mov
out
and
push
push
fdivr
aas
mov
xchg
gs
mov
ror
in
xor
and
in
add
mov
mov
fdivrp
jg
mov
push
into
pop
out
and
inc
add
mov
out
pop
icebp
mov
icebp
jns
push
xlat
pop
mov
scas
cmp
inc
loop
jae
test
or
icebp
mov
pusha
adcl
mov
cmp
je
inc
fs
adc
mov
fldcw
fstps
push
inc
stos
scas
mov
int3
and
arpl
pop
jae
cmp
jle
imul
xor
setno
push
shlb
sub
sbb
mov
sbb
adc
jb
call
or
jno
test
insb
outsl
push
pop
jb
in
push
dec
mov
sub
les
imulb
loopne
sbb
cmpsl
jl
cld
pop
mov
movsl
fnstsw
mov
daa
test
testl
aam
mov
into
sahf
adc
das
pop
mov
in
push
xchg
mov
sbb
sub
pop
xchg
scas
xor
or
xchg
insl
dec
add
pop
enter
sbb
lret
test
or
adc
loopne
fucomp
lock
loopne
fiadds
jecxz
xlat
push
sahf
or
push
pop
or
andl
cmp
xor
mov
jmp
jg
out
sbb
or
cld
pop
stos
popf
adc
mov
pop
sarl
daa
cmp
mov
out
mul
popf
loopne
xor
aaa
in
and
push
cmp
arpl
adcb
gs
test
mov
loope
icebp
and
aad
inc
sti
cmp
mov
cmp
jl
cs
rclb
popf
mov
or
jo
notl
fs
dec
out
sbb
pushf
loopne
pop
inc
mov
lds
popf
sub
iret
jae
or
add
xchg
jne
inc
dec
ss
pop
data16
cld
push
mov
ror
fstps
mov
jecxz
push
loope
icebp
add
gs
add
sub
decl
inc
sbb
sbb
scas
pop
push
push
roll
xchg
dec
jle
mov
cmp
add
pop
or
leave
push
xchg
cmp
insb
xor
mov
xlat
cs
pop
dec
jg
int3
xchg
push
push
cmpsb
lret
jo
pop
je
and
in
clc
xor
and
filds
enter
lahf
aas
enter
lea
push
adc
xor
dec
mov
sbb
test
scas
jae
and
cmp
add
pop
adc
in
divl
mov
aas
sbb
dec
out
fsubrs
lcall
add
std
aam
sbbl
adc
das
loopne
test
dec
dec
loop
test
filds
push
js
push
xchg
jl
iret
dec
aas
mov
cmp
cmp
xchg
rclb
sarb
stos
sub
mov
adc
sbb
and
or
pop
jg
or
inc
mov
dec
lods
scas
jbe
loop
in
cltd
pop
aas
add
mov
nop
in
stos
add
sub
jno
or
and
cli
jne
inc
into
jp
pop
xchg
roll
push
imul
sbb
pop
pop
mov
mov
and
jo
pop
adc
adc
cwtl
xor
xcrypt-cfb
cmpsl
mov
mov
mov
movsl
andb
ret
xor
test
sbb
shll
push
push
fwait
xchg
roll
or
inc
gs
cmpsl
dec
faddl
incb
lock
adc
stos
push
dec
cmp
mov
lret
fcoml
mov
adc
or
jg
andb
inc
sahf
cli
lock
psrad
leave
adcl
xchg
and
dec
xorl
pop
or
mov
push
cltd
sarl
jle
sub
dec
xchg
inc
and
and
into
dec
mov
pop
or
ljmp
and
addr16
enter
sbb
jbe
ss
xchg
mov
shrl
in
push
jge
add
xor
pop
jecxz
xchg
jecxz
psllq
cmc
cmp
sbbb
mov
loop
rorb
mov
cmp
jb
mov
sbb
lock
repnz
std
int
int
je
mov
repnz
jmp
push
add
aaa
mulb
sbb
mov
sub
or
nop
out
sub
test
movsl
ss
mov
fldl
pop
mov
lret
sub
xlat
scas
add
jp
pop
dec
push
int3
daa
dec
mov
cmp
xchg
test
jl
je
push
add
pop
pop
cmpsl
inc
jl
sub
in
push
stos
test
push
test
jne
xchg
in
mov
nop
xchg
subl
jg
adc
mov
xchg
or
movsb
and
jns
xchg
js
mov
mov
pusha
adcb
sub
divl
inc
mov
int3
lret
mov
testl
loope
mov
jl
rcr
outsb
in
dec
mov
pop
xchg
aaa
mov
test
push
mov
imul
push
ds
mov
cltd
inc
dec
in
dec
ss
jno
testb
jle
in
inc
nop
jbe
mov
mov
and
insb
add
imul
dec
imul
insl
ljmp
push
fidivs
sub
pop
mov
add
ss
out
mov
mov
jne
mov
xchg
xorb
repz
fimuls
xchg
sbb
mov
adc
and
std
sbb
mov
andl
pop
fstpt
out
mov
jg
sub
gs
rol
cmpsl
mov
sbb
xor
inc
jne
lcall
int
pop
enter
test
adc
or
or
pop
adc
jecxz
pop
xor
sahf
jb
subl
dec
ja
add
popf
in
repnz
in
cmpsb
lods
pusha
sbb
pop
dec
push
mov
push
aas
inc
sub
lahf
push
fmull
inc
jecxz
pop
xchg
movsb
pushf
jne
incb
inc
js
inc
js
mov
dec
jg
cmp
jbe
sbb
xor
inc
scas
fildl
push
mov
xlat
sahf
cld
and
das
dec
insb
adc
fldl
sub
out
or
mov
push
sub
push
mov
dec
das
ja
das
or
cwtl
fs
jo
ss
push
sub
lods
in
push
mov
sbb
dec
or
loopne
sbb
xchg
in
and
cmp
sahf
pop
cmp
jg
adc
pop
jmp
sub
xor
fcom
mov
cmc
fs
int
pop
adc
sub
jl
repz
das
adc
inc
test
jns
adc
pop
and
aas
push
cmpl
subl
repnz
leave
pop
sub
jnp
jnp
pop
sahf
jmpw
push
inc
movsl
sbbb
mov
insl
fistl
loopne
ret
es
and
loope
ret
push
sub
pop
jbe
adc
and
sti
aaa
jp
mov
xor
pop
out
cmp
push
pusha
cmc
fwait
loop
mov
jecxz
loop
aaa
mov
add
stos
shll
jl
rcl
cmp
xor
xchg
fs
je
or
push
out
pusha
sbb
mov
xlat
dec
pusha
mov
jb
insl
push
sub
das
mov
out
and
mov
sbb
xor
sldt
mov
shlb
cmp
outsb
dec
popf
dec
push
fmul
cmp
fstl
fstl
loop
mov
pusha
xor
dec
jle
jp
jmp
aas
es
push
lahf
int3
dec
mov
cltd
mov
hlt
mov
push
and
and
ds
int3
popf
xor
pop
mov
hlt
test
lods
cld
and
les
les
sub
push
das
mov
stos
pop
inc
daa
cmp
xor
pusha
test
or
int3
mov
fistpl
lds
push
rol
test
cmp
mov
cmp
add
stos
push
popa
sbb
in
adc
daa
lret
jmp
ljmp
add
and
and
or
lds
adc
loopne
jecxz
imul
or
jbe
xchg
or
cmc
xor
and
mov
stos
cmpsl
mov
mov
cwtl
adc
mov
xor
imul
ja
mov
stos
mov
pop
in
adc
lods
arpl
popa
je
ret
adc
add
jecxz
mov
gs
imul
fisubl
mov
pop
rcrb
rcll
or
mov
ret
data16
dec
xchg
or
cld
pop
adc
sub
arpl
out
mov
decl
pop
dec
or
dec
xor
fldenv
lods
xchg
or
mov
pop
out
xchg
or
add
stos
fcomps
andl
xchg
jne
jb
sbb
fimull
jnp
popa
repz
popa
into
cltd
shll
fsubrs
int3
movsl
mov
xor
idivl
sbb
idivb
mov
sar
dec
faddl
xor
xor
je
or
dec
push
lods
ret
stos
cld
push
or
and
inc
xor
ret
pop
add
xchg
mov
inc
pmaxsw
and
lret
rcrl
cs
outsl
lds
mov
and
dec
in
cmpsb
add
adc
sub
cmp
jg
mov
inc
mov
xchg
aas
xor
xchg
mov
roll
cmp
lret
jge
and
int3
mov
xor
je
out
pop
mov
cmc
mov
push
bound
mov
test
jno
or
sbb
popf
dec
bound
sbb
dec
fstl
xchg
add
xchg
sbb
push
lock
jo
insb
icebp
push
sbb
sbb
jnp
out
into
add
cwtl
outsl
stc
cmp
inc
inc
arpl
push
jge,pt
cmp
sub
push
int3
jp
mov
std
fstps
fldl2e
aam
add
xor
mov
repnz
or
push
pop
repz
jg
pop
js
scas
aam
add
mov
lods
dec
add
jae
cmpl
scas
rolb
hlt
mov
shll
in
xor
scas
mov
into
pushf
bound
mov
sub
rorb
mov
mov
int
popf
sbb
das
cli
js
mov
int
xchg
and
cmp
je
sub
jnp
popa
cmp
fcomip
outsb
jmp
sub
add
in
loope
scas
cmp
cmp
shrl
bound
add
xchg
sbb
or
inc
fcompl
aam
popf
ret
mov
xor
or
pop
subl
sti
movsl
and
xchg
jl
sti
nop
cmp
adc
pop
mov
and
and
push
fsubl
sbb
xchg
push
js
adc
pop
xchg
ss
pop
push
xchg
in
xor
push
lcall
sti
and
cmp
adc
aad
push
je
push
stc
cli
mov
jae
idivb
or
ss
xchg
imul
dec
ss
add
lods
xchg
push
out
jne
or
lock
gs
cwtl
ljmp
lock
loope
dec
and
xchg
pop
inc
jge
mov
shr
jb
xchg
jge
xchg
out
call
int
shl
xchg
push
pop
aas
pop
mov
and
lea
jge,pt
fmuls
jl
xor
adc
and
pusha
xchg
nop
jecxz
cmp
fs
mov
mov
jno
mov
xchg
mov
nop
mov
pop
out
fsubrl
pop
sti
sub
stos
fmuls
enter
xchg
push
mov
pop
sub
jg
lock
cmpsb
mov
sarb
in
ret
sar
setns
inc
xor
pop
cmpsb
jbe
inc
sub
adc
pop
pop
outsl
pop
das
cmp
ret
addr16
sub
push
lahf
cs
js
xchg
sbb
lods
jp
jno
pop
adc
push
js
cmp
outsl
mov
xchg
adc
xor
loopne
jmp
sub
sub
loop
repnz
dec
popf
xor
cmp
ljmp
sub
nop
sbb
sahf
mov
mov
popf
sub
sub
loopne
push
clc
mov
mov
pop
pop
sub
ja
dec
sbb
lods
add
lahf
fdivs
pop
dec
push
es
mov
imulb
pop
push
inc
popf
adc
jno
in
stos
lret
sti
dec
fldenv
xchg
pop
push
or
jecxz
push
cmp
fcoms
lret
into
or
filds
pop
imulb
pop
mov
jns
nop
repz
xor
add
push
push
pop
cmp
dec
mov
lret
xor
js
pop
imul
and
insb
adc
arpl
and
xchg
scas
push
cs
test
loop
icebp
mov
aaa
add
imul
ljmp
add
mov
xor
push
inc
or
je
inc
push
jg
repnz
into
lods
and
push
mov
popa
and
out
jg
stc
mov
aad
pusha
xchg
cld
jp
ss
jb
dec
xchg
inc
and
shll
mov
in
sbb
cmp
adc
jns
stos
sti
xchg
ja
popl
jno
ds
sub
or
fisttpll
dec
flds
loope
sti
test
fidivl
cltd
mov
cli
pop
mov
les
iret
call
pop
xchg
cmpsb
or
movsb
stos
jmp
int3
std
adc
sub
test
push
push
pushf
in
imul
or
push
dec
cmc
lret
rorb
fiaddl
iret
push
pusha
movsb
lds
fnstcw
movsl
cmpsb
push
jbe
in
or
cmp
sti
cmp
xchg
in
stos
test
push
push
addr16
mov
add
xor
mov
add
adc
faddl
push
mov
mov
sti
out
mov
les
mov
out
or
pop
push
arpl
mov
mov
jo
call
out
mov
mov
imul
sbb
ficomps
imul
jae
inc
mov
imul
mov
pop
jnp
loop
cltd
fsubs
pop
gs
sub
mov
ja
add
inc
out
fnstsw
leave
sbb
xchg
ficomps
jnp
sahf
cmc
xor
test
stos
inc
in
and
push
pop
xchg
data16
cmpsl
mov
inc
dec
imul
leave
dec
stos
dec
inc
jo
lahf
in
lock
jmp
cmp
xor
fldt
gs
jo
mov
pop
mul
aas
mov
sub
repz
out
fs
xor
mov
jno
pusha
aam
cmovge
lret
fistps
adc
push
ds
icebp
mov
xor
cmp
daa
jp
addr16
pop
outsl
sbb
cli
repz
lret
sbb
andl
mov
aaa
scas
lahf
outsb
cmp
xchg
popf
and
lods
scas
or
or
cwtl
aam
xor
bound
les
fnstenv
sbb
call
roll
and
mov
rorl
imul
sbb
dec
lods
out
outsb
test
aas
sub
push
addr16
stos
push
loope
inc
add
or
mov
int3
mov
add
test
cmp
outsb
mov
fwait
arpl
xchg
fldenv
ret
ret
adc
fcom
jo
stc
push
sub
out
mov
add
fsts
jl
cmp
in
push
mov
insl
stos
jge
iret
sub
mov
and
stc
cmp
test
testl
adc
int3
int3
mov
jmp
cmpsl
lock
aaa
add
ret
adc
dec
jp
jo
sti
jge
cwtl
sti
sbb
ret
sub
ret
aam
push
pushf
jge
aas
and
lea
inc
cli
lea
rcrl
test
cltd
sub
dec
cmc
jecxz
adc
jmp
aas
mov
fsubrl
out
gs
int3
test
enter
aaa
rorb
hlt
sar
xchg
and
nop
dec
mov
dec
xchg
add
movsb
ret
scas
lahf
shll
xlat
rcl
mov
imul
xchg
push
lret
in
fsubrl
cltd
adcb
push
mov
cmpsb
pop
loop
sbbl
and
ja
dec
cs
sarb
sbb
jae
push
test
xchg
jae
xor
aad
sti
jg
cmp
repz
movsl
stc
add
enter
push
xchg
and
sarb
sbb
xor
mov
jge
push
sbb
aaa
jbe
loop
jmp
mov
int
cltd
jns
insb
inc
add
mov
iret
lods
inc
fwait
movsb
or
xchg
aam
mov
movsb
rcrl
insb
mov
fdivrs
ss
stos
cli
lds
adc
add
jnp
adc
clc
pop
sub
xor
jno
mov
inc
cmp
dec
sbb
pop
lods
test
call
pop
xor
mov
mov
fbld
add
xor
testb
mov
fisubs
mov
outsb
xor
lret
xor
mov
in
in
in
mov
jo
adc
out
decb
dec
jae
dec
loopne
insl
mov
test
leave
push
data16
lahf
push
xchg
mov
dec
mov
sbb
inc
int3
arpl
jp
sub
sub
mov
cwtl
and
dec
mov
aam
cmpsb
imul
cli
rolb
lahf
mov
das
pusha
mov
or
cli
pop
mov
sarl
mov
ds
popa
mov
lds
in
loopne
rcr
das
cmp
sub
inc
xchg
test
adc
aad
push
stos
mov
adc
and
or
sarl
mov
inc
mov
popa
mov
in
ljmp
jp
das
cltd
stos
movsl
cld
add
mov
mov
mov
xchg
push
addl
and
mov
lahf
xchg
add
sub
mov
mov
pusha
mov
sarl
hlt
or
and
sbb
push
insb
stos
mov
shll
mov
or
adc
ret
xor
jmp
fwait
push
cs
data16
mov
mov
xchg
testl
stos
int
push
push
inc
cmc
inc
mov
jmp
xor
test
int3
psrld
mov
movl
cmp
dec
inc
dec
mov
or
and
data16
imul
dec
loope
ss
loopne
fisubs
pop
test
push
sub
sub
loopne
ss
sti
fwait
pop
jl
xor
jbe
mov
xor
mov
add
mov
adc
jmp
jae
sub
ret
lcall
xchg
daa
and
inc
inc
scas
mov
sub
xchg
push
insb
lods
adc
push
sub
pop
mov
mov
inc
sub
ja
inc
xorb
mov
pop
mov
out
out
loop
and
in
sti
mov
leave
jnp
xchg
in
ja
out
or
lret
push
dec
insb
xchg
xor
dec
sub
mov
add
xchg
cmp
pop
bound
clc
pop
sarl
aas
jne
mov
xor
loope
les
inc
pop
aaa
rcll
mov
xor
and
in
pop
xchg
ss
sbb
and
mov
fidivs
mov
sub
and
push
sub
pusha
or
push
inc
fstps
jl
iret
mov
or
xor
push
or
out
jp
sbb
mov
lock
imulb
adc
loopne
sub
cmpsl
mov
mov
push
out
xor
scas
imul
inc
sub
xor
mov
adcl
pop
mov
add
cmpb
xchg
cmpsb
lds
in
dec
jns
pusha
add
sub
cmp
pop
decb
xchg
test
jnp
fwait
add
sub
pop
ljmp
add
and
push
addl
fimuls
into
js
and
js
popf
sub
mov
cmp
cmpsb
sbb
mov
jae
mov
mov
bound
int
scas
mov
mov
cmp
inc
inc
sbb
ret
sub
pop
sahf
sub
outsl
mov
jmp
mov
xchg
dec
mov
bnd
pop
dec
pop
pop
and
data16
mov
scas
jl
sub
sbb
xor
jp
mov
es
push
xor
sub
test
dec
aam
jns
ljmp
mov
test
into
push
mov
xchg
stos
adc
xlat
andl
lret
les
orb
ret
xorl
sub
and
lret
sub
and
loop
sub
mov
or
and
mov
aas
movsb
sbb
daa
pop
and
in
adc
xor
mov
ret
out
add
data16
or
daa
push
push
xchg
sbb
out
loop
cmp
cmp
lds
ret
fcmovu
fidivs
push
pop
push
push
sbbb
nop
mov
add
and
and
sub
pop
jg
test
sub
int
add
fcmove
and
jb
jmp
mov
and
push
xchg
mov
inc
dec
jmp
aas
mov
jb
mov
test
mov
push
ds
push
pushf
push
sbb
dec
js
push
adc
popf
int
push
rep
jge
out
inc
test
lcall
inc
sub
push
mov
jp
pop
pop
inc
jecxz
bound
icebp
xchg
push
xchg
lahf
mov
jl
inc
sbb
lret
jns
hlt
xchg
jnp
jnp
push
adc
cwtl
jmp
jle
inc
cmpb
mov
ret
les
jg
addr16
or
cwtl
sbb
cmp
pop
addb
cmpl
push
jnp
stos
pop
xor
aam
aad
push
push
lods
movsb
hlt
je
mov
mov
test
pop
sbb
rorl
je
scas
sub
push
jnp
mov
notb
pusha
out
cmpsb
mov
mov
mov
push
sub
sar
xor
minps
cld
push
lahf
addr16
popa
movl
test
lods
xlat
gs
ja
dec
or
cmp
std
xor
sti
mov
cwtl
dec
out
gs
and
sbb
mov
cmp
test
sbb
dec
push
daa
mov
cmp
mov
insb
pop
sub
pop
into
sub
outsb
lcall
xor
push
cld
or
and
jo
pop
mov
sub
mov
cmpsl
xchg
push
cs
jge
mov
sarb
xchg
dec
mov
push
int3
jns
nop
rorb
or
in
cltd
mov
xchg
xlat
test
ret
mov
mov
ret
stos
mov
nop
ds
pop
scas
pop
pop
dec
xor
outsw
push
enter
ss
pop
or
mov
lret
fwait
xor
arpl
fimull
inc
stos
mov
dec
insl
fwait
and
cmp
in
ljmp
push
jl
or
mov
aad
xor
dec
stc
xchg
scas
inc
push
ja
addl
dec
mov
int3
push
or
jnp
xor
push
sub
mov
mov
jle
sub
jb
inc
mov
vpmuludq
gs
inc
cmp
into
push
mov
imulb
aaa
mov
test
outsb
rorl
imul
mov
cmp
sub
loopne
inc
orb
jno
pop
leave
dec
jle
inc
mov
jecxz
cltd
ret
push
or
into
sahf
cwtl
dec
xor
jae
pop
pop
cltd
pop
fmuls
int
repz
nop
testb
pop
push
rclb
pop
fisubrl
cld
push
mov
cmpsb
pushf
jle
jecxz
iret
or
popa
lahf
mov
jl
lods
sub
in
adc
or
add
pushf
leave
or
leave
cmpl
xchg
mov
test
movsl
push
sub
or
push
dec
out
or
sbb
push
mov
mov
scas
mov
mov
mov
daa
inc
sbb
ja
mov
push
stos
gs
lods
aam
mulps
sub
fildll
icebp
into
subb
in
loope
push
or
out
lods
bnd
dec
movsb
mov
ja
jp
mov
mov
test
divb
testl
mov
sub
inc
mov
stos
push
sbb
jnp
mov
mov
lds
in
ja
jno
or
inc
mov
rorb
inc
jnp
scas
addr16
mov
cmpsl
fldl2t
cmp
adc
test
arpl
pop
mov
inc
rcrl
shrl
aaa
and
scas
outsl
mov
cld
mov
rolb
negb
jmp
out
ficoms
fwait
ss
or
leave
sub
pop
cld
rcrb
jle
imul
pop
adc
sbb
sbb
jge
fisttpll
mulb
sub
arpl
clc
les
add
push
test
mov
mov
xlat
mov
ja
mov
push
inc
dec
push
loope
fwait
test
xchg
and
add
call
sti
jge
je
das
movsl
cmp
into
xchg
pop
imul
mov
int
lods
dec
pop
shlb
inc
push
insl
jg
inc
dec
mov
shlb
lock
nop
popf
adc
psrlw
jg
lds
adc
daa
push
pop
hlt
jmp
movsb
std
into
data16
fistps
jno
ljmp
and
das
or
ret
jns
push
nop
cmp
push
in
ret
jl
sarl
jmp
ret
mov
add
int3
push
rclb
mov
cmpsb
in
cmpl
movsl
sub
vpunpckhbw
push
jmp
jl
cmp
das
shll
xor
dec
xchg
xor
jnp
addr16
push
js
xlat
std
xor
mov
leave
pop
cli
out
or
leave
into
jb
lock
subl
sbb
ja
or
dec
pop
sbb
fcmovne
cmpsl
out
mov
iret
cmp
shl
loopne
sub
sub
dec
xor
mov
rcll
ja
add
mul
std
sub
rorb
and
rolb
pop
sub
stos
xor
rorl
inc
in
pop
fiaddl
lret
mov
inc
or
xchg
and
fildll
ficoms
lock
jnp
popa
push
add
sbb
xchg
push
mov
cmp
push
lea
cli
pop
pop
pop
adc
out
stos
adc
aad
ret
and
jne
insb
cmp
push
fnop
test
xor
or
jae
push
inc
xchg
sti
push
jmp
mov
push
fimuls
lds
add
hlt
addb
xchg
icebp
push
js
mov
lcall
mov
or
loop
add
fmull
lea
sti
jno
lahf
add
mov
cmpsb
outsb
test
jns
repz
cmc
cmp
in
in
outsb
test
repz
push
mov
mov
aas
nop
sub
pop
mov
scas
icebp
test
movsl
mov
lods
scas
aad
inc
push
jno
push
or
cmc
cmp
pop
xor
enter
in
lds
inc
sbb
test
stos
imul
jmp
stos
addr16
daa
sub
das
sub
or
mov
xchg
dec
arpl
movsb
mov
pop
push
inc
inc
pop
add
push
cld
insl
fcoms
pop
push
mov
in
movsl
fcoml
mov
and
in
jno
scas
mov
adc
mov
dec
sub
xchg
ljmp
movsb
imulb
xchg
sbb
sub
scas
cmp
lahf
imul
movq
ret
mov
push
popf
nop
cs
jae
xor
mov
mov
xor
jl
pop
pop
cld
call
xchg
sub
adcb
xchg
adc
dec
testl
or
mull
insl
lods
sub
jmp
push
add
outsl
inc
not
jno
sub
push
pusha
pusha
out
xor
imulb
jmp
cli
repnz
call
mov
or
add
mov
sti
fwait
mov
push
repnz
mov
aas
jecxz
out
test
fistpl
xor
ja
lock
ja
pop
scas
test
shll
fldt
xorb
popf
push
imul
mov
test
pop
or
pop
dec
adc
sti
imull
test
sub
push
nop
xchg
inc
sar
cmp
jl
dec
add
inc
leave
xlat
push
sbbl
lcall
adc
fildll
jp
or
add
lahf
cmp
jo
pop
int3
fs
xchg
scas
imul
cmp
push
hlt
cmp
xor
outsb
push
lret
js
adc
arpl
je
ja
mov
sahf
sbb
insl
in
xor
es
cmp
dec
int3
cmpsl
adc
stos
ljmp
jae
insl
push
test
popa
enter
pusha
loopne
enter
cmp
inc
add
out
fldpi
jge
pop
loopne
xor
aaa
mov
xor
jmp
mov
rcl
sbb
loope
loop
rcll
sbb
push
or
mov
sahf
mov
push
cmp
mov
xchg
fildl
mov
adc
cwtl
js
pop
sti
mov
cmpsb
xor
adc
sub
pop
bound
icebp
aas
or
cmc
lock
pusha
mov
data16
pushf
clc
add
cmp
and
xchg
mov
and
mov
pop
sub
push
and
sub
push
mov
push
icebp
int
dec
mov
dec
cs
mov
insb
iret
int
sahf
dec
dec
pop
pusha
orb
mov
cld
inc
mov
iret
and
test
rcrb
cmpsl
ja
inc
adc
and
push
pushf
ds
dec
lahf
jae
in
test
adc
adc
pop
shrl
orb
xchg
cmp
dec
mov
jecxz
or
mov
jns
mov
stos
out
bound
mov
xor
add
mov
sbb
dec
enter
xchg
sti
loopne
ja
orb
jb
push
mov
push
movsb
cld
insb
mov
subb
loop
cmp
shrb
dec
mov
rclb
adc
push
outsl
fsubr
xchg
dec
mov
add
cmc
mov
das
leave
jle
mov
insb
fnclex
loope
stos
add
cmp
adc
and
daa
xchg
adc
jecxz
cmpsl
push
test
mov
fisttps
jae
stos
jbe
in
cltd
cltd
xchg
cmovno
lret
cmp
jge,pt
xchg
mov
in
inc
lods
test
imul
add
or
ds
cmp
push
xor
sub
imul
cmp
lods
daa
repnz
ror
fistl
cltd
push
xchg
roll
or
cmpsl
mov
mov
and
dec
fnsave
aad
push
mov
and
push
jns
popf
loop
jp
lcall
add
adc
sub
mov
mov
loopne
insl
movlps
and
push
pop
xor
jo
and
adc
cmpsb
ficoms
cs
enter
out
sbb
mov
imul
rcr
push
xor
shlb
push
lods
adc
cltd
xchg
push
sbb
cmp
int
loope
dec
dec
clc
xchg
dec
mov
pop
sbb
mov
push
mov
pop
push
in
adc
andb
fnstcw
fwait
ja
add
ljmp
cmpsb
lcall
sbb
rcll
jge
ljmp
jl
push
fs
sti
dec
imul
addr16
insl
adc
loope
aad
add
out
jno
lahf
pop
loopne
jl
std
imul
fnsave
pop
or
or
gs
or
repnz
cltd
repz
movsb
and
inc
shll
rcrl
scas
mov
out
mov
scas
pop
mov
popa
cld
mov
xor
lcall
xchg
in
jp
fidivl
xchg
push
dec
jmp
or
sub
mov
mov
enter
mov
aad
bound
sti
dec
out
xchg
push
arpl
pop
lahf
adc
fs
push
pop
pop
lret
shlb
in
mov
popf
jno
pushf
ljmp
mov
jne
les
push
push
pop
push
outsb
mov
dec
xor
ror
inc
mov
rcrb
fisubrs
les
add
loopne
and
cmp
sub
data16
dec
fdivr
movsb
int
push
lret
fadd
rolb
mov
mov
sub
pop
cld
clc
or
jmp
sbb
movsl
cltd
cmc
mov
cli
push
push
jle
sub
push
pop
lods
shlb
sub
mov
lea
pop
in
lds
xorl
roll
adc
dec
cld
xor
imulb
adc
xor
pop
mov
or
mov
pop
sub
mov
mov
xchg
lahf
adc
je
cmpsl
fisttpll
imul
xchg
or
out
js
cs
mov
fildll
adcb
jno
js
lds
dec
pushf
sarb
cmp
fs
lgs
cwtl
stos
sbb
dec
clc
je
cmp
pop
testb
aas
rolb
call
cmp
call
out
leave
adc
mov
push
outsb
cmp
in
xchg
pop
cli
inc
lea
mull
pop
cmp
jbe
test
add
movl
dec
xor
lret
orl
cmp
add
icebp
jno
roll
sub
pop
das
or
mov
xor
testb
hlt
jmp
lret
lret
mov
stos
or
push
and
popl
lods
pop
imul
cmpsl
cmp
cld
dec
movsl
out
and
push
adc
lock
sbb
dec
out
loop
mov
sub
sub
pop
xor
and
fmuls
pop
mov
xlat
popa
jge
wbinvd
and
pop
stos
mov
mov
mov
arpl
out
gs
pop
xorb
flds
fsubrl
inc
push
push
xor
shrb
or
mov
out
jb
push
push
js
adc
jo
mov
imul
dec
dec
aad
pop
xchg
stos
int3
adc
cltd
pop
ja
into
mov
testl
mov
scas
push
lods
mov
popl
mul
push
jmp
shlb
cwtl
rol
orl
std
dec
mov
jo
ret
scas
pop
adc
scas
mov
fmul
add
mov
les
popf
push
popf
pminub
or
out
into
dec
inc
sub
inc
call
sti
movsb
jno
pop
scas
mull
xchg
pop
pop
scas
mov
sbb
or
js
jns
mov
leave
inc
icebp
cmp
sbb
sub
jno
sbb
mov
cmp
jge
add
dec
sbb
ret
mov
xchg
cmp
insl
pushaw
mov
and
pop
int
lods
add
out
movsb
and
aam
push
push
std
ficomps
aaa
mov
xchg
or
lcall
xor
sbbl
sbb
inc
pushf
xor
inc
clc
push
dec
mov
mov
xor
cmp
scas
or
xlat
mov
cmp
popa
push
jo
or
xchg
sbb
xchg
jns
cmpsl
cmp
nop
insl
add
cld
lock
jnp
xor
cmc
cmp
jae
nop
cmp
push
mov
sub
xchg
jl
cmpsb
add
jae
shl
imul
and
addl
out
fs
repnz
aad
pop
hlt
and
lea
pop
cwtl
sub
xchg
mov
sub
sahf
push
repnz
ret
xchg
shll
push
or
bound
std
xchg
cmp
pop
cmp
dec
cld
fistps
jne
ljmp
cmpsb
push
xor
dec
sub
dec
test
cs
sub
adc
out
adcb
pop
fwait
in
sbb
mov
jecxz
jl
inc
cmpsl
xchg
lcall
cmp
iret
lret
popf
sbb
push
sbb
mov
inc
dec
test
adc
dec
rcrb
call
test
xchg
popl
cmpsl
or
jnp
repz
insl
imul
inc
leave
in
test
push
dec
stc
out
daa
push
nop
dec
fs
dec
fs
xchg
in
clc
and
popa
jb
xorl
sahf
jae
outsb
repz
pop
and
xchg
mov
jmp
inc
imul
repnz
push
cmpl
lods
sub
lock
pop
push
leave
cmc
jmp
cmp
xchg
pusha
or
fsts
sub
loop
inc
mov
sbb
les
cmp
mov
shlb
arpl
ret
xlat
xor
pop
adc
ja
les
push
pop
rcr
sub
sub
xchg
lock
fwait
and
addr16
jb
ds
test
repnz
insb
xor
popa
shlb
nop
sbbb
mov
std
stos
int3
shl
xor
dec
negl
push
bound
push
add
adc
repnz
or
test
rclb
insl
pop
jae
xchg
push
test
test
push
sti
inc
sub
add
repnz
std
xchg
or
out
lret
out
or
in
insl
inc
add
add
inc
jl
or
mov
xor
frstor
subl
jo
sub
jecxz
inc
inc
sub
xchg
idivb
in
popf
cmc
inc
pop
loopne
lods
popa
or
mov
lret
sbb
daa
push
fbld
sbb
and
mov
and
mov
aam
dec
repnz
lods
lret
in
mov
pushf
aam
jp
add
pushf
xchg
ja
sub
icebp
sub
imul
inc
jns
stos
jecxz
pop
imul
repz
sub
scas
aas
fisubrs
clc
xlat
lret
mov
mov
js
and
cltd
xchg
js
add
mov
push
mov
mov
call
jb
push
pop
repz
add
xor
xchg
fdivp
imul
aad
icebp
cmp
ja
xchg
fsubrs
push
push
dec
int3
aaa
sarb
inc
imul
cmpsb
enter
cmp
dec
subl
idivl
dec
in
outsb
repnz
int3
xor
jns
je
inc
dec
test
popa
loope
cld
and
mov
xor
loop
in
ret
xor
rclb
dec
inc
iret
test
xchg
pop
int3
cli
cmc
inc
jl
stos
sub
enter
in
xchg
outsl
cmpsl
adc
aad
push
rclb
ljmp
pop
out
mov
popa
jp
push
xchg
or
xchg
pop
mov
mov
jns
xchg
je
cmp
sub
add
mov
inc
ret
andl
lods
les
sti
mov
leave
dec
pop
xchg
inc
mov
mov
or
mov
into
mov
dec
mov
std
jbe
rcr
cmp
cltd
push
inc
add
adc
notl
jl
ljmp
out
cmc
imul
fldl
add
jnp
cmp
adc
add
das
xor
enter
sarb
sub
jp
lret
or
test
jp
jb
iret
pop
fldenv
ss
inc
inc
pushf
sub
repnz
fdiv
fildl
cwtl
test
add
fwait
int
in
aaa
inc
pop
pusha
aad
lea
fmull
movsl
pop
ja
imulb
sub
cmp
pop
xchg
mov
push
mov
pop
cmp
push
and
lcall
into
sub
out
int3
repz
and
pop
sbb
aad
out
xor
sbb
or
imul
sub
add
pop
sbb
movsb
jge
jae
inc
ret
xor
adc
adc
sbb
jl
leave
mov
ja
mov
pop
dec
adc
cmp
pop
insl
pop
xchg
clc
lea
cmp
mov
and
push
add
xchg
xchg
dec
dec
dec
inc
mov
inc
rcr
mov
sub
data16
dec
aas
adc
scas
lock
and
mov
ja
xor
add
mov
stos
scas
adc
pop
push
das
mov
clc
sbbb
pop
loop
or
outsl
mov
cltd
imul
push
adc
lds
cmpsb
jns
mov
scas
cmp
pop
testl
ss
inc
in
dec
dec
adc
dec
aad
xchg
movl
jle
dec
movsl
sbb
test
sbb
mov
mov
push
and
int3
jae
insl
inc
jmp
pop
xor
fmull
in
mov
fiaddl
xrelease
scas
shlb
stos
and
mov
aas
xchg
loope
jmp
cmpsb
dec
shrl
xchg
mov
test
add
imul
fnstenv
aam
mov
adc
inc
and
aad
inc
sbb
add
jp
daa
ret
test
pop
aam
mov
mov
cmp
sbb
scas
fs
stos
or
es
pop
test
jmp
jns
movsb
faddl
pop
mov
adc
xor
inc
pushf
icebp
mov
daa
in
lock
iret
mov
je
xor
xor
cmp
or
in
jg
movsb
mov
push
adc
sub
inc
shl
movsl
loop
xchg
cmp
xchg
out
mov
mov
mov
adc
ret
stos
mov
scas
pop
xorl
lret
rcl
call
fiadds
add
sbb
or
in
or
aas
sbb
mov
push
dec
mov
cmp
push
and
push
fcomps
or
xor
aad
addr16
js
sbb
mov
enter
test
mov
mov
jle
sub
into
push
xchg
dec
andl
jne
push
push
adc
nop
jns
test
and
lods
sub
push
mov
cli
fistpl
pop
and
add
xchg
sbb
cmp
xchg
arpl
mov
xlat
push
mov
add
cwtl
mov
es
imul
faddp
fidivrs
sbb
data16
pop
pop
cli
shll
in
adc
mov
xor
lods
lret
dec
pop
adc
sahf
and
sub
js
test
cmp
sbb
jl
insl
add
or
push
sbbb
cs
add
and
out
daa
lods
inc
aas
fs
sbb
out
xor
xlat
adc
sub
lret
ja
push
cmp
movzwl
mov
imul
mov
rol
movsb
int
vmovss
adc
pop
adc
popl
stos
lds
mov
pop
iret
rcll
enter
add
repnz
gs
popa
mov
xchg
mov
cs
cmp
imul
add
insl
or
aas
sbb
jg
in
cmpsb
xlat
push
movsl
jno
pop
loope
sbb
rorl
clc
cld
ja
pop
cmp
pop
cmp
jno
mov
adc
icebp
cmp
inc
hlt
mov
sbb
mov
lods
inc
inc
mov
fmuls
sub
insb
mov
adc
nop
jmp
shl
ds
xchg
jl
hlt
loopne
jecxz
push
sub
ficompl
push
aam
loopne
dec
dec
or
and
rorb
and
roll
jmp
fs
xor
xor
insb
arpl
adc
add
scas
mov
cmp
xchg
loope
addr16
xchg
pop
pop
xlat
push
push
and
mov
mov
stos
mov
imul
out
push
popa
xchg
lret
fildll
scas
jp
leave
stc
lock
negb
adc
mov
repz
push
cld
fstps
daa
jbe
pop
pop
cltd
inc
stc
xchg
test
arpl
mov
sahf
decl
adc
dec
pandn
mov
fcomip
imul
scas
or
dec
je
fsubp
shll
mov
xchg
jge
mov
lods
add
push
shr
fwait
cmp
cmpsl
fmuls
ljmp
loop
mov
sub
push
inc
in
sarl
sbb
loopne
xchg
das
mov
cmp
cld
mov
sub
idiv
aas
leave
addr16
mov
xchg
jge
cmp
mov
add
and
repnz
cmp
jge
jno
fwait
sbb
pop
repnz
bound
sarl
sahf
inc
mov
adc
adc
iret
dec
popf
or
fisubrs
mov
push
lret
jne
push
in
add
cmp
mov
out
pop
bound
sub
xchg
adcl
add
fimuls
sub
xor
adc
and
mov
cs
xor
mov
sti
pusha
mov
cmp
out
pop
add
jne
cmp
dec
std
xchg
jge
push
and
and
mov
imul
in
cmpsl
nop
pushf
push
xchg
or
fcmovnb
mov
cmpsl
test
jnp
movsl
sub
add
push
inc
mov
sub
mov
add
cld
repnz
in
fs
das
daa
cltd
pushf
cmp
das
lock
push
aaa
mov
lcall
add
icebp
ret
cmp
nop
leave
mov
lock
xor
sbb
push
mov
mov
pop
add
daa
movsl
xchg
jg
insb
sbb
out
mov
sti
push
sbb
lret
push
shlb
arpl
decb
cmc
orl
pop
inc
jno
outsl
hlt
mov
jl
mov
imul
adc
movsl
or
push
mov
fildll
inc
aam
mov
jmp
loope
cmc
inc
jle
sbb
lds
mov
addr16
push
jnp
sahf
orb
ja
int
mov
adc
xor
cli
lock
into
xchg
xor
int3
inc
shr
sub
dec
mov
hlt
test
sub
jne
js
andb
jno
xor
inc
in
ret
mov
jmp
jns
push
repz
imul
in
mov
mov
arpl
lret
jbe
loopne
sahf
daa
lcall
jae
mov
jl
jecxz
insb
jge
ret
out
out
mov
push
jmp
int
iret
mov
cmp
jg
rcl
outsb
push
push
push
push
dec
push
addr16
xchg
add
ret
loopne
adc
pop
sbb
sub
ffreep
inc
push
aad
jne
out
cmpl
stos
push
outsb
cmc
inc
dec
stos
shll
xor
adc
push
sti
jo
xchg
mov
push
loope
lea
aam
test
test
and
jbe
mov
pop
push
testb
xchg
mov
and
hlt
cmpsl
call
enter
fcmovnu
xorb
and
mov
cmp
or
inc
div
sbb
or
pop
sahf
or
scas
gs
pop
mov
dec
xchg
inc
mov
fdivl
test
and
test
ret
fistpll
popf
scas
ror
pop
jp
dec
insb
pop
xor
hlt
inc
pop
jmp
es
add
push
push
pop
jns
out
std
push
std
xchg
ss
rdpmc
jmp
mull
stc
rcr
leave
fsubl
add
mov
arpl
nop
ja
adc
mov
pushf
push
in
mov
jg
push
add
test
push
out
sbb
mov
push
and
iret
sub
mov
jnp
or
call
xchg
sbb
jecxz
cmp
out
call
mov
loopne
inc
mov
or
int
inc
insl
push
push
mov
ja
xor
mov
adc
aas
mov
mov
and
cltd
xchg
data16
inc
stos
mov
and
loopne
lcall
fbld
outsl
iret
jns
adc
mov
pop
scas
xchg
popf
pop
lahf
in
jecxz
pop
stc
in
fldt
popl
mov
mov
in
dec
int
dec
mov
aaa
cmc
fstpl
sar
xor
dec
fiaddl
imul
loop
jge
ret
es
jbe
push
icebp
mov
mov
mov
xlat
dec
sbb
jo
gs
xchg
pop
lods
push
lea
jl
nop
nop
lods
xor
xchg
sbb
out
loopne
sub
nop
out
cmp
cs
mov
fs
das
jp
dec
sbb
int3
jne
andl
pop
mov
mov
ja
repnz
xchg
jp
stos
divb
fs
mov
lret
out
dec
push
push
cwtl
int3
mov
rorl
dec
adc
in
mov
cmpsb
xchg
xchg
stos
mov
out
jbe
adcb
add
mov
outsb
clc
sub
xchg
rclb
pop
cmp
xchg
cmp
insl
ljmp
dec
pusha
cmp
pop
xor
nop
subl
mov
pop
mov
jmp
pusha
add
or
fcoml
dec
jno
dec
nop
and
push
jns
mov
add
xor
out
stc
ds
icebp
xchg
sbb
dec
push
loop
in
lds
xchg
je
pop
sahf
data16
mov
dec
loopne
movsl
and
inc
sbb
rcrl
cmp
adc
fstps
adc
mov
idivb
dec
gs
imul
js
or
dec
lds
adc
ljmp
push
push
sub
nop
push
iret
ljmp
loopne
cmpsl
sbb
stos
fincstp
lahf
test
mov
fisttps
push
shrb
xchg
xor
jge
mov
jg
push
mov
and
lret
sbb
mov
push
ret
insb
sti
movsb
mov
ja
push
out
mov
rol
insb
es
jmp
push
hlt
inc
lcall
cmp
or
mov
or
jmp
sbb
sbb
fistps
out
into
push
mov
jb
xrelease
cmp
jg
push
push
cmpsb
in
inc
xchg
xor
pop
loope
in
xor
push
fisubrs
dec
push
sbb
jle
sbb
xchg
ret
push
and
inc
mov
jecxz
pop
pop
addr16
xor
in
loope
cli
fcoml
out
fs
lea
push
cmp
pop
jecxz
nop
cmp
in
xor
cltd
pop
ret
mov
xlat
pushf
sbb
adc
std
mov
xor
sbb
imul
mov
bound
leave
mov
push
je
push
in
je
xorb
mov
sub
pop
in
adc
rol
idivb
outsl
rolb
ret
and
repz
movsl
test
sbb
sub
jmp
pusha
lock
pushf
popf
inc
daa
and
cli
repnz
call
pop
add
arpl
sub
xchg
jecxz
mov
mov
mov
aas
jns
in
add
inc
stos
add
pop
cmp
dec
pop
push
push
jmp
out
push
dec
mov
xchg
push
cmpsb
dec
lahf
sbb
fstpt
std
jge
xchg
ret
and
dec
test
stos
jle
outsl
lea
out
imul
inc
rorb
cli
cmp
fcompl
lret
mov
in
bound
push
cmp
mov
xchg
xor
push
shrb
pop
cmp
xchg
outsb
push
inc
rcrl
push
mov
push
add
xor
data16
jb
push
jo
pop
aad
jge
orb
sahf
adc
xchg
pop
mov
lds
pop
les
icebp
sbbb
repz
mov
nop
sbb
les
xchg
or
sub
cli
faddl
jp
leave
push
push
mov
aad
xchg
fwait
aam
mov
les
ret
pushf
pop
jmp
pop
mov
sti
shlb
dec
push
fs
adc
dec
cmp
mov
mov
lret
test
mov
dec
stc
daa
sbb
sbb
mov
adc
cmp
imul
pop
in
mov
lret
mov
sub
xor
jne
fcoms
jp
outsb
mov
scas
movsl
add
sbb
ror
jge
push
or
lea
insl
dec
aas
or
jecxz
out
xchg
cmpsb
rorl
add
xchg
loopne
int
call
add
clc
or
xchg
fisubrs
repnz
sarl
push
mov
mov
or
dec
icebp
ljmp
lds
rorb
ss
repz
lods
cmp
xchg
sub
in
bound
sbb
sub
sub
mov
pop
in
mov
js
inc
movsl
push
scas
pop
shlb
push
imul
rol
jp
sahf
and
imul
sbb
mov
fbstp
out
jg
pop
stc
xchg
outsl
cmp
or
aad
iret
mov
or
xchg
rcrb
sti
adc
sub
fistl
push
mov
fmul
cmc
loop
or
push
sub
inc
aad
ljmp
xchg
adc
stc
dec
xchg
loope
pop
push
sbb
jbe
lods
cmp
mov
shlb
addr16
sbb
mov
push
cmp
pushf
inc
stos
int
stos
add
negl
lds
das
lods
jg
testl
ds
cli
lock
xlat
jbe
sbb
lret
mov
xor
xor
mov
xchg
pop
mov
add
mov
pop
addb
mov
jns
xor
in
aas
insl
je
stos
pushw
dec
hlt
pop
push
leave
outsb
xchg
scas
xchg
outsl
mov
or
and
aaa
pop
fs
cmpsl
adc
fwait
outsb
jle
inc
sbb
loop
jmp
jae
push
stos
fucomip
add
adc
loop
jno
inc
xchg
sbbb
cmp
pop
and
sub
aam
sbb
xor
das
pop
fildl
repnz
xor
mov
adc
jp
mov
mov
xlat
add
pop
les
imul
test
es
jb
scas
popa
inc
pop
fnsave
dec
xor
dec
cltd
sbb
sub
jns
jnp
sti
sub
jge
and
imul
out
jle
xchg
push
bound
cltd
rcll
ret
sti
sub
cmp
sbb
loope
xchg
adc
imul
sub
dec
pop
fwait
xor
ss
dec
fdivs
popa
lods
cmp
dec
push
es
and
inc
push
xchg
pop
arpl
mov
jno
add
and
inc
adc
adc
mov
jge
sbb
sti
adc
inc
xor
js
pop
pop
pop
aam
sti
dec
sarb
mov
std
cld
xlat
mov
cmp
or
test
jnp
inc
fcomps
aaa
mov
dec
push
lret
xchg
push
repz
mov
xchg
jns
int3
and
sbb
ret
cmpb
not
sub
fiadds
popa
pop
in
sti
jge
adc
aaa
or
mov
icebp
jge
lret
std
mov
cmpl
sbb
xchg
popa
sub
sub
jns
mov
into
fwait
ss
lret
or
xor
push
call
setp
sub
sahf
stc
and
sbb
ss
ja
ret
sti
loope
jl
jne
fistps
cmp
add
test
cwtl
fiaddl
add
mov
out
sti
jg
std
cmp
jnp
mov
cmp
inc
push
mov
jno
sarl
aaa
xchg
sti
xchg
fwait
mov
sub
cmp
push
pop
push
push
outsl
incl
aam
lea
xchg
adc
adc
pop
adc
push
inc
jbe
cmp
out
test
lock
push
mov
jmp
sbb
faddp
sbb
inc
lock
int
sub
push
jns
rclb
push
cmp
dec
push
out
pop
mov
push
jnp
push
push
xor
mov
mov
sub
loope
jle
add
ljmp
je
pop
push
mov
pop
stos
sub
xchg
inc
cld
inc
jns
xor
into
aas
mov
jae
test
mov
mov
std
je
adc
scas
or
jecxz
cmpl
xor
rorb
inc
in
and
sbb
pop
hlt
jbe
mov
lea
hlt
test
les
divb
jge
cld
inc
add
fcomip
into
ss
sbb
cmp
ss
cmpsl
test
outsl
sahf
xchg
test
insl
jecxz
dec
mov
push
mov
push
lds
cmp
jmp
das
mov
or
jecxz
inc
adc
pop
jo
std
push
dec
inc
sbb
dec
lahf
cmp
int3
cs
or
in
jne
cmp
movsb
sub
pop
stos
xchg
gs
in
pop
push
jae
push
sbb
sti
mov
adc
insl
outsb
iret
bound
push
insl
sub
ret
cmc
xor
add
mov
mov
int
clc
mov
test
adc
dec
lods
negl
cltd
movaps
or
pop
push
iret
xor
lods
dec
lret
das
ds
testl
jl
inc
dec
stos
mov
lods
cmp
jb
mov
push
cmpsl
movsl
and
and
pop
pusha
xor
lahf
pusha
adc
jae
mov
std
arpl
dec
shlb
xchg
jl
inc
or
add
inc
push
addr16
jne
rep
cmp
jecxz
sub
inc
jne
in
cmp
jns
xchg
and
adc
stc
lods
and
push
mov
imul
or
jecxz
push
push
icebp
push
sbb
sbb
not
cli
inc
fucom
daa
stos
dec
mov
pop
in
stos
mov
dec
and
push
jb
aam
sbb
inc
call
sbb
aad
xchg
lds
mov
pop
adc
fnstcw
add
outsl
pop
ljmp
scas
insl
js
adc
into
pushf
adc
mov
loop
xor
sbb
outsb
adc
fnstenv
iret
flds
inc
jp
loopne
cwtl
dec
jo
mov
xor
in
lock
sub
and
out
loope
lods
push
loope
ror
and
adc
cmpsl
addr16
pop
es
xor
insl
aaa
roll
dec
cmp
js
push
mov
daa
or
mov
or
and
ja
fmuls
push
test
cmp
out
imul
adc
rcll
roll
rcrb
xchg
iret
jg
xchg
ds
loopne
and
add
nop
sub
aas
ljmp
mov
jl
xchg
push
mov
sahf
fbld
shll
and
fcoml
icebp
enter
and
dec
pushf
and
pop
xchg
and
dec
adc
lea
bnd
stos
push
movsb
jp
in
sub
hlt
stos
enter
scas
rcl
pop
sub
mov
inc
xchg
rcll
or
jle
bound
mov
jno
cmp
sbb
ret
test
mov
adc
loopne
pop
inc
jle
jnp
push
mov
fisttpll
mov
bound
add
movsb
pop
cmp
ret
fdivs
fstpt
adc
inc
nop
push
jl
mov
std
repz
pop
fwait
stos
out
aam
movsl
push
push
data16
ja
in
xor
mov
roll
jo
jnp
or
mov
aam
aas
push
lcall
mov
ficoms
in
mov
cmpl
fidivrl
lret
jae
cltd
orb
push
mov
xlat
popa
xchg
dec
adc
xor
imul
inc
out
pusha
mov
jl
inc
mov
jno
cmp
add
push
jno
jbe
sbb
jne
inc
jle
adc
cmp
fisttpl
cmpsb
mov
jp
mov
lods
add
xchg
or
xor
