je
mov
xor
push
inc
call
test
jne
mov
call
test
je
cmp
jg
cmpl
jg
jne
lea
push
lea
push
call
mov
mov
dec
jne
cmp
jne
lea
lea
call
cmpl
jne
lea
lea
call
cmpl
jne
lea
lea
call
mov
dec
jne
cmp
jne
lea
lea
call
cmpl
jne
lea
lea
call
cmpl
jne
lea
lea
call
mov
mov
add
movl
sub
mov
movl
mov
mov
lea
lea
push
mov
call
test
je
mov
mov
mov
add
cmp
je
cmpl
jne
mov
call
mov
mov
shr
lea
xor
mov
and
inc
shl
or
add
decl
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
xor
inc
pop
pop
pop
leave
ret
mov
jmp
cmpl
je
cmpl
je
cmpl
jmp
dec
je
dec
jne
jmp
dec
je
dec
jne
jmp
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
andl
test
jne
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
mov
push
push
call
test
pop
pop
mov
jne
push
call
pop
andl
lea
mov
mov
push
mov
lea
movl
movl
movb
call
mov
mov
mov
mov
lea
push
mov
mov
movl
call
dec
neg
sbb
inc
mov
je
mov
test
jne
cmpl
mov
je
testb
movl
jne
testb
je
jmp
lea
call
lea
call
jmp
push
mov
sub
mov
push
push
xor
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
mov
lea
movl
movl
mov
mov
mov
call
test
jne
pushl
lea
call
mov
cmp
je
mov
pushl
mov
pushl
push
call
mov
mov
push
pushl
pushl
push
call
lea
call
lea
call
pop
xor
pop
leave
ret
mov
mov
mov
test
je
mov
call
test
je
pushl
mov
push
push
call
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
push
mov
movl
movl
cmpl
je
push
lea
push
call
pushl
call
pop
pop
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
mov
sub
push
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jmp
mov
mov
dec
mov
shl
add
add
call
test
jne
test
ja
mov
test
ja
mov
test
ja
mov
call
neg
sbb
and
add
pop
pop
leave
ret
mov
mov
mov
shl
mov
sub
lea
lea
mov
sub
sub
cmp
jne
decl
mov
mov
lea
mov
call
test
je
cmpl
jbe
jmp
mov
lea
push
mov
or
lock
dec
jne
lea
test
movl
je
push
push
lea
movl
movl
call
mov
test
mov
mov
je
lea
push
call
test
pop
je
mov
test
je
push
call
test
pop
je
push
call
pop
pop
pop
xor
pop
ret
push
call
pop
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
cmp
je
testb
push
mov
je
mov
mov
push
push
push
pushl
push
call
pop
lea
call
xor
pop
leave
ret
push
mov
testb
je
push
push
push
pushl
pushl
push
lea
push
call
mov
add
cmpb
je
xor
push
inc
call
mov
test
je
mov
test
jbe
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
test
push
mov
je
mov
mov
push
call
mov
test
mov
je
mov
push
mov
call
mov
test
mov
je
mov
mov
push
call
mov
cmpl
mov
je
mov
cmpl
je
cmpl
push
mov
je
cmpl
je
push
call
add
test
je
mov
mov
call
test
mov
je
add
mov
mov
mov
mov
add
push
push
push
call
mov
mov
mov
mov
add
xor
test
je
cmp
je
lea
cmp
je
mov
mov
cmp
jne
jmp
mov
mov
add
mov
test
mov
jne
test
je
add
mov
test
mov
je
addl
cmpl
je
cmp
je
cmpl
jne
mov
mov
cmp
jge
cmpl
jne
movl
mov
cmp
jge
cmpl
je
mov
mov
xor
mov
mov
call
test
mov
jne
mov
mov
mov
mov
mov
mov
test
je
lea
cmpl
je
cmpl
je
cmpl
jne
mov
call
mov
push
call
mov
mov
mov
addl
cmpl
je
test
je
mov
mov
push
call
test
je
mov
mov
push
call
lea
call
pop
pop
pop
xor
pop
add
ret
push
call
add
test
je
mov
call
mov
mov
test
mov
je
add
mov
test
mov
jne
test
mov
je
add
mov
test
mov
jne
add
mov
test
mov
je
call
jmp
xor
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
mov
push
mov
xor
cmp
push
mov
mov
lea
push
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
call
lea
push
lea
push
mov
movl
call
add
push
lea
call
lea
push
lea
mov
mov
call
mov
mov
add
cmp
je
mov
lea
push
push
push
lea
push
push
mov
call
mov
lea
call
mov
test
jne
test
jne
test
js
cmp
mov
lea
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
mov
call
mov
lea
push
lea
mov
push
mov
call
add
push
lea
call
lea
push
lea
mov
mov
call
mov
mov
add
cmp
je
mov
lea
push
mov
push
push
lea
push
push
mov
call
mov
lea
call
mov
test
jne
test
jne
test
js
mov
lea
push
mov
mov
mov
push
push
call
cmp
je
mov
mov
xor
cmp
mov
je
mov
mov
call
push
mov
lea
call
mov
cmp
mov
je
mov
mov
mov
mov
mov
push
lea
push
push
mov
call
mov
push
push
push
push
xor
call
add
test
js
cmpw
jne
mov
mov
push
push
push
call
mov
lea
mov
mov
mov
add
lea
mov
movl
movl
mov
mov
push
push
mov
call
push
mov
call
test
je
mov
lea
push
push
call
mov
add
test
je
mov
add
push
call
add
test
je
lea
call
mov
cmp
je
mov
mov
push
call
mov
cmp
je
mov
mov
push
call
mov
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
mov
call
add
test
jne
mov
push
call
add
jmp
mov
add
call
mov
jmp
push
mov
push
andl
push
push
push
lea
mov
call
mov
pushl
mov
push
lea
call
cmpl
pop
pop
jne
xor
lea
call
pop
mov
pop
leave
ret
push
pushl
call
pop
call
mov
cmp
jb
push
push
push
pushl
mov
call
pushl
xor
add
adc
mov
mov
call
pop
mov
pop
ret
mov
test
je
mov
mov
mov
mov
mov
xor
ret
push
mov
sub
mov
andl
push
push
mov
lea
call
mov
test
je
mov
lea
push
lea
push
call
test
js
mov
test
je
mov
test
je
mov
mov
mov
mov
mov
mov
lea
call
pop
leave
ret
mov
push
mov
lea
call
mov
mov
push
add
push
push
call
and
neg
sbb
and
pop
ret
push
mov
push
push
push
lea
cmpl
movl
movl
jne
lea
call
mov
call
lea
call
pop
leave
ret
sub
push
mov
mov
push
push
push
xor
or
mov
lea
jne
mov
mov
lea
push
add
push
lea
movl
movl
mov
call
mov
test
jne
test
jne
mov
push
lea
call
mov
cmp
je
push
push
lea
mov
push
lea
movl
movl
mov
movl
mov
call
mov
mov
push
lea
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
test
js
mov
mov
mov
mov
push
push
mov
lea
movl
mov
mov
mov
mov
push
push
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
mov
push
lea
movl
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
lea
movl
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
mov
push
lea
movl
movl
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
test
mov
je
mov
push
mov
call
mov
mov
mov
push
call
test
js
mov
push
push
push
push
call
mov
test
je
mov
mov
push
call
lea
call
lea
call
xor
pop
pop
pop
pop
add
ret
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
movzwl
test
je
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
pushl
call
cmp
jne
lea
call
mov
cmp
jne
xor
lea
call
pop
mov
pop
pop
mov
pop
ret
mov
movl
xor
ret
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
jne
movl
movl
movl
mov
test
movl
jne
push
push
mov
lea
push
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
mov
jne
test
jne
mov
test
jne
mov
test
jne
push
call
add
pop
pop
xor
pop
pop
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
andl
mov
lea
call
cmpl
je
mov
test
je
pushl
mov
call
mov
mov
lea
call
lea
call
xor
leave
ret
jmp
int3
push
mov
and
sub
push
push
push
mov
mov
test
je
mov
mov
mov
mov
xor
and
or
mov
mov
jne
mov
and
xor
or
je
mov
mov
mov
push
mov
call
test
jne
mov
mov
mov
xor
mov
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
mov
mov
je
mov
mov
push
push
lea
push
push
push
call
mov
cmp
jne
mov
andl
pop
pop
pop
mov
pop
ret
mov
mov
mov
push
add
push
mov
call
test
je
jmp
mov
cmp
je
mov
call
test
je
mov
mov
push
mov
call
mov
and
add
or
je
cmpl
jne
mov
call
test
jne
mov
mov
mov
mov
mov
movl
movl
movl
push
call
add
jmp
mov
and
or
je
mov
xor
jmp
int3
push
mov
push
mov
mov
mov
push
mov
sub
test
jne
mov
mov
mov
add
push
push
push
call
add
mov
mov
add
push
push
lea
push
call
add
pop
pop
pop
ret
mov
mov
cmp
mov
lea
ja
mov
test
jne
mov
mov
cmp
mov
lea
ja
xor
ret
mov
jmp
push
mov
mov
test
jne
mov
mov
mov
mov
add
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
mov
cmp
jge
inc
mov
cmp
jge
xor
pop
pop
ret
mov
jmp
mov
mov
cmp
jae
mov
push
mov
test
je
mov
push
call
mov
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
test
jl
cmp
jge
mov
mov
push
push
call
mov
mov
xor
pop
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
test
jl
cmp
jge
xor
inc
pop
pop
ret
xor
jmp
push
mov
mov
test
jbe
mov
dec
mov
lea
cmpl
je
mov
mov
push
call
mov
mov
andl
mov
test
jne
xor
pop
ret
orl
orl
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
push
push
push
je
mov
push
movl
call
mov
add
cmpl
lea
jne
push
lea
call
mov
push
call
mov
mov
lea
lea
lea
add
cmp
jb
mov
lea
lea
lea
cmp
jne
push
push
push
lea
push
mov
call
mov
cmp
jne
pop
pop
pop
pop
add
ret
mov
jmp
lea
mov
mov
call
add
cmp
jb
mov
jmp
lea
mov
lea
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
mov
call
add
test
je
add
add
cmp
mov
jne
jmp
push
mov
lea
call
lea
call
lea
call
testb
movl
movl
je
push
call
pop
mov
pop
ret
push
mov
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
push
mov
movl
movl
movl
cmpl
jge
mov
test
jne
mov
test
je
push
call
test
pop
je
andl
mov
test
jne
mov
test
jne
mov
test
mov
jne
test
jne
lea
call
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
cmp
jge
xor
cmp
jne
testb
jne
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
mov
movb
cmpb
jne
cmpb
jne
mov
mov
lea
push
push
mov
call
test
js
mov
lea
push
mov
push
push
call
add
test
jne
lea
mov
mov
mov
push
push
mov
call
cmp
jne
lea
push
mov
call
call
push
push
push
push
call
orl
mov
mov
test
jne
test
jne
testb
jne
push
lea
movl
call
mov
mov
lea
push
call
add
cmpl
je
push
call
add
test
je
mov
call
mov
test
je
mov
mov
push
call
mov
test
lea
mov
jne
cmpl
je
mov
and
jne
test
jne
push
mov
call
push
lea
movl
call
mov
mov
call
mov
lea
push
lea
push
movzbl
push
push
mov
shr
and
push
mov
push
lea
push
push
mov
push
push
call
test
js
mov
mov
add
test
movl
jne
push
push
push
push
push
push
push
call
add
lea
mov
call
lea
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
testb
je
jmp
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
mov
xor
cmp
mov
mov
je
cmp
jne
movl
xor
test
js
mov
mov
push
lea
lea
movl
movl
mov
mov
mov
call
cmp
je
push
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
xor
jmp
mov
jmp
lea
movzwl
push
call
add
test
jne
cmp
jae
mov
nop
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
add
cmp
jb
lea
mov
xor
mov
mov
sub
mov
lea
lea
mov
movl
movl
mov
call
add
push
mov
mov
mov
call
test
jne
mov
cmpw
je
mov
push
mov
call
add
xor
push
lea
mov
call
lea
lea
push
push
mov
mov
movl
movl
mov
movb
call
push
push
push
lea
push
lea
push
call
mov
mov
add
test
jne
test
jne
test
js
mov
cmp
je
cmp
je
mov
mov
push
push
push
mov
call
lea
call
mov
test
jne
test
jne
nop
mov
xor
jmp
lea
nop
mov
cmp
jb
mov
push
mov
lea
mov
call
lea
call
lea
push
mov
mov
call
mov
mov
mov
mov
push
push
mov
push
push
mov
push
push
push
call
test
js
cmp
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
jne
cmp
lea
jne
mov
push
mov
call
mov
push
lea
mov
call
lea
call
cmp
lea
je
lea
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
push
push
push
mov
push
lea
cmpl
movl
je
mov
test
je
mov
mov
lea
mov
push
push
push
call
add
cmpl
movl
je
push
call
pop
mov
test
jne
testb
je
push
call
pop
pop
mov
pop
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
je
cmp
je
test
push
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
sub
mov
xor
mov
mov
push
push
mov
mov
push
mov
mov
xor
lea
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
test
jne
mov
pushl
mov
push
call
test
mov
jne
push
lea
mov
call
pushl
lea
call
test
pop
mov
je
pushl
call
mov
pop
mov
mov
mov
lea
call
lea
call
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
mov
lea
push
pushl
push
call
test
mov
jne
testb
je
lea
mov
mov
mov
lea
push
mov
movl
movl
movb
mov
push
call
test
mov
jne
push
push
lea
push
or
mov
call
push
lea
mov
call
push
push
push
lea
push
lea
push
call
add
test
mov
jne
push
call
cmp
pop
je
pushl
mov
mov
mov
call
mov
mov
xor
mov
cmp
je
lea
call
mov
pushl
mov
push
call
test
mov
jne
lea
call
pushl
pushl
call
pop
pop
jmp
push
mov
mov
sub
push
lea
push
push
call
mov
test
jne
push
call
test
jne
and
push
push
lea
call
mov
lea
push
push
call
test
jne
lea
push
push
pushl
call
add
test
jne
xor
cmp
jne
lea
push
push
pushl
call
add
test
jne
cmp
jne
lea
push
push
pushl
call
add
test
jne
cmp
jne
lea
push
push
pushl
call
add
test
jne
cmp
jne
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
and
jne
cmpl
jne
pushl
lea
call
cmp
je
cmp
je
cmpl
jne
mov
mov
lea
push
pushl
pushl
push
call
test
jne
cmpl
jne
lea
call
lea
call
xor
pop
pop
leave
ret
xor
lea
call
mov
jmp
push
movzbl
push
push
movzbl
push
pushl
mov
call
cmpb
mov
jne
xor
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
mov
test
movl
movl
movl
movl
jne
mov
cmpl
lea
jbe
xor
movl
mov
mov
mov
test
je
call
push
call
add
mov
addl
add
cmp
jb
testb
jne
mov
test
jne
cmpl
jne
mov
mov
subl
sub
mov
lea
sbbl
test
jne
mov
test
jne
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
mov
mov
push
push
push
push
call
mov
cmp
jne
mov
lea
call
lea
call
mov
mov
push
push
push
push
call
mov
cmp
jne
mov
test
movl
jne
mov
test
je
mov
call
push
call
add
pop
pop
pop
pop
pop
ret
mov
subl
mov
sub
sbbl
jmp
mov
test
je
mov
mov
mov
mov
movl
movl
jmp
call
push
call
add
jmp
push
mov
sub
push
push
push
mov
lea
push
call
lea
call
fldl
call
fldl
mov
call
fldl
mov
call
fldl
mov
call
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
pop
pop
pop
leave
ret
mov
mov
mov
mov
mov
ret
andl
mov
dec
mov
movl
mov
mov
andw
ret
push
mov
sub
push
push
mov
push
xor
mov
push
lea
lea
mov
mov
mov
mov
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
je
mov
lea
push
pushl
mov
mov
push
call
cmp
jne
lea
call
push
call
cmp
pop
je
pushl
mov
mov
mov
mov
call
mov
xor
cmp
mov
je
mov
push
call
cmp
je
push
lea
lea
mov
mov
mov
mov
call
cmp
mov
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
jne
mov
pushl
mov
push
call
mov
mov
mov
lea
mov
push
lea
lea
mov
call
test
jne
mov
mov
mov
mov
push
call
lea
call
lea
call
lea
call
mov
lea
call
pop
mov
pop
pop
leave
ret
test
je
mov
push
call
mov
push
pushl
call
test
jne
ret
mov
push
call
xor
inc
jmp
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
push
mov
push
andl
push
push
mov
push
call
test
je
andl
push
lea
call
mov
mov
lea
push
pushl
push
call
mov
test
js
mov
test
je
mov
push
push
call
mov
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
xor
mov
mov
mov
push
lea
lea
movl
mov
mov
call
cmp
je
mov
push
push
push
call
mov
lea
push
mov
call
mov
add
cmp
jbe
xor
mov
cmp
je
add
add
cmp
jb
jmp
lea
lea
cmp
je
mov
mov
xor
cmp
setne
lea
push
mov
call
mov
cmp
jne
mov
cmp
mov
je
cmp
je
mov
mov
cmp
mov
mov
je
cmp
jne
mov
mov
call
cmp
je
mov
mov
cmp
lea
je
mov
cmp
je
add
mov
call
mov
test
lea
je
testl
jne
cmpb
jne
mov
mov
mov
push
add
call
mov
xor
test
js
mov
mov
mov
xor
mov
call
lea
call
mov
pop
pop
pop
pop
add
ret
pushl
call
pop
lea
call
lea
call
lea
call
cmpl
je
cmpl
je
ret
decl
cmpl
jne
push
movl
call
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
mov
test
je
add
mov
push
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
mov
xor
push
push
mov
cmp
mov
mov
mov
mov
mov
mov
je
push
call
add
movl
testl
je
cmp
je
cmp
je
push
call
add
lea
call
pop
pop
pop
pop
add
ret
cmp
mov
mov
je
cmp
je
add
mov
cmp
lea
mov
jne
cmp
je
jmp
lea
push
lea
call
test
je
jmp
push
mov
mov
mov
push
xor
inc
cmp
movl
mov
mov
mov
movw
jae
andl
mov
pop
pop
ret
mov
mov
push
lea
push
push
push
push
call
add
test
je
xor
mov
jmp
push
mov
mov
push
mov
mov
shr
and
push
push
call
test
js
pushl
mov
push
call
test
js
pushl
mov
push
call
test
js
pushl
call
test
pop
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
pushl
call
test
pop
js
mov
mov
shr
and
push
push
call
test
js
mov
mov
shr
and
push
push
call
test
js
mov
mov
push
and
push
push
mov
call
mov
and
neg
sbb
and
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
push
mov
mov
cmpl
mov
jge
lea
call
xor
test
je
xor
test
js
lea
mov
mov
call
lea
mov
call
lea
xor
call
mov
mov
lea
mov
mov
lea
push
mov
mov
movl
movl
mov
movl
mov
mov
mov
push
push
call
test
js
mov
mov
lea
push
push
mov
call
test
js
cmp
je
mov
mov
lea
push
push
mov
call
test
js
mov
cmpl
jge
mov
mov
mov
lea
push
push
call
test
js
mov
cmpl
jge
push
call
add
cmp
je
mov
mov
mov
push
push
mov
lea
push
call
mov
cmp
je
push
call
add
mov
cmp
mov
jne
cmp
je
mov
lea
mov
mov
mov
mov
push
lea
lea
mov
movl
movl
mov
call
add
test
js
mov
push
lea
push
lea
push
mov
call
test
js
mov
cmp
jne
cmp
jne
mov
push
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
sub
push
mov
push
push
xor
push
mov
call
push
pushl
mov
call
test
js
push
lea
push
pushl
mov
call
test
js
cmp
mov
je
push
lea
push
pushl
mov
call
test
jne
push
lea
push
pushl
mov
call
test
jne
push
lea
push
pushl
mov
call
test
jne
xor
inc
test
movl
movl
mov
movl
movl
mov
je
movzwl
push
push
push
lea
call
pop
pop
push
pushl
mov
call
testb
mov
jne
testb
jne
test
jne
lea
mov
xor
cmpb
jne
cmp
mov
jne
mov
push
pushl
pushl
mov
call
pop
pop
pop
leave
ret
push
mov
andl
test
jne
pop
jmp
push
mov
mov
call
cmpl
je
mov
or
mov
mov
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpb
je
push
push
mov
mov
push
push
call
cmpb
push
je
mov
push
push
call
movzwl
push
push
mov
push
push
lea
movl
movl
mov
movl
mov
mov
call
mov
lea
mov
lea
add
mov
lea
lea
mov
mov
push
lea
xor
mov
push
lea
push
mov
mov
mov
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
cmp
je
mov
mov
cmp
jbe
xor
mov
jmp
jmp
lea
mov
add
mov
mov
test
lea
mov
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
push
movl
movl
mov
call
push
mov
mov
mov
movl
movl
mov
call
lea
mov
mov
xor
lea
mov
add
mov
lea
mov
lea
mov
mov
lea
mov
mov
push
lea
mov
push
lea
push
mov
mov
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
sub
jne
pop
pop
pop
pop
add
ret
mov
push
push
jmp
movsbl
and
ret
mov
test
jne
test
je
mov
ret
xor
inc
ret
xor
ret
mov
call
cmp
jae
mov
call
ret
mov
test
jne
mov
ret
and
ret
add
push
xor
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
push
push
lea
push
lea
push
lea
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
sub
cmp
jne
cmp
jne
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
mov
push
mov
push
mov
push
lea
mov
call
fildl
mov
sub
fstps
mov
fildl
fdivs
fstps
flds
fstpl
call
fstps
flds
call
mov
mov
mov
add
mov
fildl
fdivs
fstps
flds
fstpl
call
fstps
flds
add
call
fildl
flds
mov
fld
fdivrp
fxch
fstps
fldz
flds
fcom
fnstsw
fstp
test
jne
faddl
call
cmp
jl
cmp
jg
mov
fidivrl
mov
sub
mov
fstps
flds
fstpl
call
fstps
flds
call
mov
mov
mov
add
mov
fildl
fdivs
fstps
flds
fstpl
call
fstps
flds
add
call
fildl
mov
fdivs
fstps
fldz
flds
fcom
fnstsw
fstp
test
jne
faddl
call
cmp
jl
cmp
jg
mov
mov
imul
mov
imul
pop
mov
mov
pop
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jg
xor
xor
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
cmpl
jne
cmpl
jge
cmpl
jne
cmp
je
cmp
je
ret
push
lea
call
movl
pop
jmp
push
mov
push
push
incl
mov
mov
cmp
push
mov
je
mov
mov
mov
pushl
mov
pushl
mov
call
pop
leave
ret
push
mov
sub
push
push
push
mov
xor
cmp
je
mov
neg
sbb
pop
and
pop
add
pop
leave
ret
lea
push
push
lea
call
test
pop
pop
jne
lea
push
mov
call
push
push
call
test
js
lea
call
mov
test
mov
je
call
test
je
mov
test
je
mov
push
push
lea
push
push
call
mov
mov
push
push
push
push
call
lea
call
pushl
call
pop
pushl
movl
call
pop
pushl
call
pop
jmp
mov
pushl
mov
pushl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
cmp
ja
add
cmp
jb
mov
sub
jne
mov
test
mov
mov
je
mov
push
mov
call
addl
pop
mov
pop
ret
mov
mov
push
push
call
test
jne
pop
xor
pop
ret
push
mov
and
sub
push
push
mov
mov
cmp
lea
push
mov
jb
mov
test
je
push
lea
push
lea
push
push
push
movl
call
add
test
je
mov
cmp
jb
mov
mov
push
add
push
push
push
push
lea
push
mov
call
test
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
push
push
push
push
lea
movl
call
add
test
js
mov
mov
lea
push
push
push
push
call
add
cmp
ja
xor
mov
lea
push
push
push
push
call
mov
mov
mov
mov
add
sub
push
push
mov
push
mov
push
lea
push
push
call
test
js
mov
movl
movl
mov
test
je
mov
push
mov
call
lea
call
mov
test
je
mov
mov
push
call
mov
pop
pop
pop
mov
pop
ret
push
push
call
add
jmp
mov
mov
jmp
push
mov
and
push
push
push
mov
push
mov
push
pushl
pushl
push
call
test
mov
jne
test
js
mov
mov
call
call
mov
mov
call
push
mov
call
mov
orl
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
mov
xor
cmp
je
add
add
cmpl
jne
test
mov
mov
je
lea
push
call
mov
add
test
mov
je
test
push
push
jbe
xor
mov
mov
mov
push
call
mov
add
test
je
push
push
push
call
mov
mov
mov
add
add
cmp
jae
mov
jmp
xor
pop
pop
pop
pop
add
ret
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
jmp
mov
test
je
lea
jmp
mov
test
je
lea
jmp
mov
test
jne
mov
movl
movl
mov
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
push
mov
call
mov
andl
xor
mov
pop
xor
pop
call
leave
ret
sub
je
dec
je
dec
jne
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
mov
push
call
push
jmp
cmp
jge
cmp
jg
je
cmp
je
jle
cmp
jg
push
pop
mov
pusha
push
call
mov
lea
je
mov
add
cltd
xchg
mov
xchg
out
add
xchg
add
mov
add
sbbb
push
add
add
mov
push
outsl
add
pop
arpl
int
add
add
push
mov
add
push
push
push
push
lea
push
push
push
call
loop
jae
mov
in
add
aad
add
out
mov
stc
push
add
add
jno
add
add
jne
in
add
insb
add
lcall
inc
in
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
add
imul
add
imul
add
add
add
data16
xchg
sub
pop
push
push
lea
push
push
push
push
push
lea
push
push
call
lret
xchg
int
jge
mov
add
mov
lahf
pushf
mov
in
nop
jno
roll
cltd
add
pop
movb
mov
add
sub
pop
push
push
lea
push
push
call
faddl
add
ret
int3
add
add
rolb
add
mov
add
mov
mov
pop
add
add
xchg
iret
stos
mov
data16
into
sub
pop
push
push
push
push
push
push
call
add
mov
add
add
mov
test
push
cld
lahf
mov
push
stos
mov
xchg
push
incb
add
lea
add
jl
nop
pop
jb
pop
xchg
add
imul
lcall
add
in
lock
call
push
push
push
call
js
jecxz
aam
add
add
outsl
add
add
add
push
add
bound
rorb
add
push
js
addb
add
push
xchg
jb
int3
add
add
jno
movsb
add
hlt
push
pop
lods
int
mov
lret
add
xchg
xchg
jp
add
mov
add
hlt
lcall
add
push
push
lea
push
push
push
push
push
call
lcall
loop
add
add
js
add
and
jb
pop
add
push
jb
jnp
in
fidivs
ret
xlat
cld
add
int3
cmc
add
mov
roll
popa
pop
pop
xchg
ljmp
in
fdivr
lcall
imul
push
call
xchg
jnp
lret
add
lahf
lea
add
add
in
jne
add
loopne
lcall
add
add
add
add
add
jbe
sub
pop
jmp
push
push
push
push
push
call
lods
add
loopne
add
rolb
je
cmpsb
mov
icebp
add
mov
jo
icebp
add
addb
ja
add
add
addl
into
add
lahf
add
shlb
loope
add
push
add
movb
add
add
ljmp
lods
add
mov
icebp
fdivrp
popl
xchg
jae
sub
pop
ret
push
push
push
push
lea
push
call
pop
data16
in
add
shlb
add
add
rclb
js
sarb
sahf
add
fistpl
jb
aam
pop
cli
add
add
add
xchg
fs
sub
pop
mov
push
lea
push
call
add
add
add
xorb
jecxz
add
into
test
add
andl
fs
pop
negb
gs
test
jge
add
xchg
add
jne
jnp
add
out
ffreep
mov
addr16
jb
mov
add
insb
je
add
add
add
add
loopne
sub
pop
mov
push
push
push
push
push
push
call
add
roll
jl
add
jle
ljmp
add
lea
lds
ja
mov
lods
popa
iret
jae
movsl
cwtl
rorl
mov
add
int3
scas
add
lcall
pop
in
add
push
lea
push
lea
push
push
call
fdivr
add
add
push
popa
xchg
push
add
add
fldl2e
mov
xchg
add
jl
add
pop
add
in
jl
rcl
add
mov
loop
mov
add
mov
add
out
test
add
fists
cmc
sub
pop
add
mov
xor
push
push
lea
push
xor
add
rol
lea
not
sub
rol
ror
pop
shl
add
sub
add
pop
push
lea
push
call
mov
mov
add
add
out
add
lahf
in
mov
add
add
add
clc
add
add
test
add
lcall
mov
mov
jecxz
rclb
add
add
lcall
jne
call
push
lea
push
push
call
aam
add
add
lods
addr16
xlat
add
add
push
add
add
add
xlat
add
lcall
jmp
icebp
add
pop
mov
push
push
push
push
push
push
push
push
push
push
call
add
out
add
push
ljmp
add
add
mov
add
mov
add
add
pop
loopne
mov
mov
add
repnz
add
mov
add
lcall
inc
call
lea
push
lea
push
push
push
lea
push
push
lea
push
push
call
jge
fcmovne
cmpsb
add
push
add
pop
add
add
push
insb
add
add
jp
add
pop
fs
cmpsb
add
mov
mov
jb
add
add
add
pop
add
add
jmp
add
mov
aad
imul
cmpsb
mov
sub
pop
push
pushl
push
lea
push
push
push
push
call
jecxz
add
push
push
je
add
add
cbtw
shl
iret
add
add
xchg
cmp
add
out
movsb
les
bound
add
add
add
sub
pop
pushl
push
push
lea
push
push
call
pusha
xchg
shl
push
mov
add
add
jl
loop
add
lea
mov
add
lret
int
movsl
jl
add
loopne
add
sti
rolb
add
add
pop
xchg
mov
call
pushl
push
push
lea
push
call
enter
add
add
faddl
mov
sahf
push
add
add
imul
add
add
ljmp
mov
ret
add
scas
arpl
stc
imul
sub
pop
pushl
call
push
push
dec
push
or
inc
add
not
sub
sub
sub
shr
pop
add
inc
pop
push
push
push
push
call
addr16
xchg
fcmove
mov
call
add
mov
mov
add
loop
push
xchg
int3
add
add
xchg
fiaddl
add
add
add
gs
add
add
mov
add
pushf
je
fldl
cltd
ljmp
lcall
jne
push
push
lea
push
push
push
push
push
push
push
call
vpshufhw
jp
sbb
add
push
stos
pop
xchg
mov
jl
pop
rcll
les
movsb
pop
add
add
int
add
out
add
add
mov
push
call
add
int3
add
mov
jmp
add
pop
jnp
pop
mov
add
fs
leave
xchg
lods
mov
add
addb
sub
pop
push
push
push
shl
inc
add
push
or
inc
add
ror
sub
not
rol
add
pop
sub
pop
push
lea
push
push
call
add
add
mov
mov
push
add
popa
add
add
cltd
out
add
nop
add
pop
cli
add
roll
xchg
xchg
add
data16
aam
add
fimuls
add
popa
add
lcall
jecxz
les
pop
lret
sub
pop
push
push
push
push
call
add
fsubl
add
add
xchg
filds
jecxz
imul
sahf
add
add
leave
jbe
xchg
add
add
hlt
lcall
add
dec
jne
xor
xor
add
add
add
add
mov
xchg
in
add
cwtl
out
add
popf
rcll
jp
scas
add
mov
add
add
jne
sub
pop
call
push
push
push
push
push
call
out
mov
test
movsl
lret
faddl
mov
in
addl
push
clc
add
arpl
add
add
leave
add
nop
mov
push
fistpl
sub
pop
mov
push
push
push
push
push
push
push
push
push
push
push
call
add
add
stc
in
mov
add
mov
mov
add
test
push
add
add
add
fildl
add
mov
addr16
je
stc
push
fcompl
add
mov
push
push
lea
push
lea
push
push
push
call
out
add
imul
mov
add
je
add
xchg
repnz
fisubrl
into
add
ja
pop
pop
xchg
cmpsb
shll
in
call
add
push
push
lea
push
push
call
movl
add
jno
popa
add
popa
loop
in
add
fs
pusha
add
add
xchg
nop
std
addr16
cmpsb
add
add
cli
ljmp
test
push
add
sub
pop
add
push
push
push
push
push
lea
push
call
add
movb
popf
add
add
xchg
add
std
add
std
sahf
loope
xchg
jnp
add
addr16
gs
mov
jp
mov
add
les
stos
push
fmul
add
pop
mov
xor
push
push
push
lea
push
push
push
call
sahf
sarl
add
add
add
addr16
in
stos
sarl
add
into
xchg
add
test
hlt
pushf
call
imul
ljmp
mov
add
jne
push
lea
push
push
call
add
enter
outsl
add
add
jecxz
test
cmpsl
add
pop
add
add
add
add
add
leavew
add
rcrl
push
add
add
pushf
add
push
add
fldt
bound
xchg
add
mov
push
lea
push
push
push
push
push
push
push
call
outsl
add
fwait
add
out
shll
add
jae
add
add
add
add
in
add
add
mov
filds
jl
cli
arpl
std
cli
stos
mov
pop
xchg
jge
add
stos
addb
std
faddl
addl
mov
clc
lea
mov
add
add
jmp
loopne
mov
push
push
push
push
push
lea
push
push
call
roll
add
jb
stos
pop
mov
in
add
add
les
mov
cli
jne
add
add
add
cltd
popa
addr16
xchg
jl
mov
xchg
mov
xor
push
lea
push
push
push
push
lea
push
call
movsb
outsl
add
add
cmpsb
add
add
add
cmpsl
xchg
add
rcl
ja
enter
mov
push
add
add
add
fbstp
movsb
add
add
mov
jbe
add
rolb
jae
xchg
incb
add
add
sub
pop
add
push
push
lea
push
push
call
mov
push
push
add
jecxz
movsb
add
add
add
addl
call
add
add
add
cld
jmp
pop
push
xchg
mov
je
add
lock
add
push
push
push
push
push
lea
push
lea
push
lea
push
call
pop
mov
add
add
lock
sarl
rcr
fistpl
ja
pusha
add
add
fs
mov
mov
std
popf
mov
add
std
jmp
add
in
hlt
add
rolb
rclb
scas
fmul
add
mov
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
add
shl
stos
add
xchg
add
pop
fcomp
add
add
add
cmpsb
std
push
lcall
pop
add
add
sub
pop
mov
xor
push
push
push
push
push
push
call
add
imul
add
add
in
add
cmpsb
add
add
cmpsb
add
add
add
iret
sarb
add
lods
add
add
add
mov
add
clc
add
les
lock
into
add
mov
xchg
mov
add
add
sub
pop
push
push
push
push
push
push
lea
push
push
call
jb
push
add
add
jecxz
test
add
pusha
push
js
fldl
add
add
add
add
add
sahf
faddl
testl
add
out
mov
add
stos
fdivrl
push
leave
add
testl
sar
push
add
pop
mov
xor
push
push
push
push
push
push
push
push
push
push
call
add
add
push
out
fcompl
lods
cltd
push
push
pop
add
enter
cmc
jno
jge
push
add
movsb
mov
pop
fisubl
add
test
xchg
push
in
in
fdivr
lcall
enter
call
nop
add
lahf
add
sahf
xchg
add
pushf
cltd
shl
icebp
mov
add
data16
mov
popa
add
rcl
mov
add
add
mov
add
clc
pop
pop
push
sub
pop
rep
push
shl
xor
dec
pop
pop
push
sub
not
pop
mov
push
sub
inc
inc
pop
add
add
push
push
push
lea
push
push
push
push
push
push
call
cwtl
fwait
mov
add
mov
add
add
mov
mov
ficomps
cwtl
add
mov
xchg
add
push
add
push
ret
add
pop
jo
add
out
push
flds
sub
pop
add
push
sub
not
rol
pop
mov
push
push
push
lea
push
lea
push
call
add
mov
add
add
add
fsubl
add
notl
mov
popf
lock
pop
add
add
add
add
mov
pop
lock
roll
sti
add
add
add
xacquire
movb
in
mov
je
popa
add
add
sub
pop
xor
push
push
push
push
call
jmp
add
add
shrl
fnstcw
mov
add
add
xchg
add
mov
mov
add
mov
add
add
ljmp
pushf
jo
sub
pop
add
push
add
not
sub
shl
pop
mov
xor
push
sub
lea
not
pop
mov
push
push
lea
push
push
call
add
add
stos
lret
add
mov
add
add
lock
pop
xchg
add
addr16
test
xchg
add
add
lret
add
in
hlt
lcall
or
push
push
push
push
lea
push
push
lea
push
push
call
stc
jne
add
lods
add
xchg
ret
lcall
loop
add
xchg
add
add
mov
cmc
mov
add
jp
pusha
popf
cmpsl
int3
aam
stc
add
add
add
mov
add
add
add
add
add
jno
add
mov
pop
add
push
push
push
lea
push
push
push
push
push
lea
push
call
mov
fwait
scas
lds
lahf
pop
sti
iret
incb
xchg
add
int3
add
stos
add
add
mov
testl
mov
repnz
add
jecxz
mov
add
add
mov
ljmp
out
add
lods
nop
mov
fdivr
lcall
ret
pop
cmp
lea
push
push
push
lea
push
push
call
lcall
xchg
loopne
add
roll
lahf
jle
add
popf
xchg
pusha
add
lahf
push
addb
nop
add
mov
or
in
cltd
call
in
in
add
mov
push
push
ror
ror
inc
push
and
add
dec
not
dec
sub
sub
pop
shl
add
shr
pop
push
push
push
push
push
push
call
hlt
jp
int
push
add
incb
jbe
jl
add
add
add
aam
addl
jbe
add
add
subl
jnp
mov
lds
pop
pushl
call
push
not
lea
not
pop
push
push
push
dec
push
and
add
lea
add
sub
sub
ror
dec
pop
inc
pop
push
lea
dec
pop
push
push
pop
push
push
push
push
lea
push
call
mov
add
fidivl
pushf
rorb
mov
add
test
into
int
jecxz
mov
in
add
add
add
xchg
out
outsl
orb
add
mov
lret
loop
push
mov
mov
lcall
rclb
jecxz
pop
mov
push
push
lea
push
push
lea
push
call
or
push
fidivrs
addr16
xchg
jmp
add
imul
xchg
scas
add
mov
cltd
out
pop
add
mov
lock
lcall
push
push
call
add
add
test
mov
add
mov
in
jnp
add
add
jb
add
sar
add
add
add
add
test
xchg
sub
pop
mov
push
rol
pop
add
push
sub
sub
sub
shr
pop
add
push
push
push
push
push
push
push
lea
push
push
call
jge
in
xchg
into
lea
add
add
sbbl
stc
add
ret
mov
pop
fdivrs
loop
add
ljmp
xchg
mov
fiadds
stc
add
ret
sahf
inc
add
push
push
lea
push
push
push
push
push
lea
push
call
je
out
mov
jl
out
push
fdivl
mov
add
add
out
push
jle
add
in
add
bound
add
mov
scas
push
mov
in
adcb
lcall
jae
xor
push
not
not
shr
pop
add
push
lea
push
push
push
push
lea
push
call
add
add
add
in
gs
mov
add
test
push
call
jp
add
fsubs
out
add
in
call
adc
xor
adc
pop
cltd
adc
movsl
inc
loop
push
push
call
out
push
jp
add
add
test
loop
les
icebp
test
insb
add
add
scas
add
test
add
add
lret
add
add
add
add
lcall
add
push
push
push
lea
push
push
push
lea
push
call
jne
push
mov
lahf
outsl
movsb
movl
mov
mov
fistpl
test
mov
test
icebp
add
add
add
add
add
add
add
fidivrs
in
add
jae
rclb
enter
add
mov
add
in
in
add
push
pop
add
pop
push
sub
sub
pop
mov
xor
push
shr
add
dec
pop
rep
push
pop
mov
xor
push
inc
ror
pop
or
je
push
push
push
call
xchg
shll
add
pusha
jbe
fnsave
add
jecxz
add
nop
ret
popf
mov
add
stos
movb
pop
mov
push
push
lea
push
push
push
call
add
jnp
mov
xor
add
sbbb
add
add
add
in
je
fadd
push
std
sti
add
fistl
pop
call
fimull
add
lock
incb
mov
add
jmp
jns
sub
pop
xor
push
push
push
push
push
push
push
lea
push
push
push
call
add
add
movsl
xchg
pop
mov
xchg
add
ljmp
jle
add
roll
mov
add
lret
mov
add
mov
add
popf
movsl
add
cltd
movb
addl
add
jae
iret
lods
sub
pop
add
push
push
call
fucomi
mov
mov
push
add
clc
xchg
movsl
fistl
arpl
mov
mov
movsl
roll
testb
les
add
add
mov
ljmp
xchg
movb
add
mov
add
lods
fs
add
mov
rcrb
in
clc
lcall
push
sbb
adc
enter
out
pop
add
push
lea
push
push
push
push
lea
push
call
add
add
add
roll
pop
les
mov
pushf
in
add
leave
pushf
push
xchg
add
add
testb
movl
mov
pop
cmc
mov
xchg
push
add
add
add
rolb
hlt
push
inc
pop
push
mov
xor
push
push
push
push
push
lea
push
push
push
push
push
call
enter
cwtl
add
fwait
add
add
rolb
out
mov
add
add
push
mov
add
push
sahf
vpunpcklwd
add
add
mov
add
lock
push
push
push
push
push
lea
push
lea
push
call
add
add
xchg
mov
mov
pushf
add
jp
roll
mov
jb
int3
cld
add
jo
out
iret
pop
js
add
out
lds
movl
imul
mov
add
loopne
pop
push
xor
pop
rep
push
inc
pop
mov
xor
push
push
lea
push
push
call
add
ljmp
fcomps
jecxz
in
test
scas
add
add
add
movsb
fdivs
add
sub
pop
or
je
push
xor
inc
sub
lea
pop
mov
push
push
push
call
stc
add
jge
xchg
testb
mov
iret
xchg
jo
add
add
add
mov
add
add
add
lahf
mov
add
mov
flds
add
in
pop
mov
div
cli
add
add
jo
add
add
add
stos
out
std
add
pop
mov
loop
test
mov
mov
in
hlt
lcall
sub
movb
add
push
push
push
push
lea
push
push
push
push
call
mov
xchg
add
pop
mov
add
add
mov
cmpsb
mov
mov
shl
scas
xchg
add
pop
fdivr
add
add
mov
add
sub
pop
rep
pop
push
push
shl
push
xor
add
sub
add
sub
ror
xor
shr
pop
xor
sub
pop
push
dec
lea
pop
pop
push
rol
add
pop
mov
mov
push
ror
lea
pop
mov
jmp
push
lea
add
pop
push
push
sub
add
pop
mov
push
push
push
call
add
cmpsl
int3
mov
je
into
jne
lods
movl
add
add
in
xlat
test
rcr
xchg
cmc
add
ljmp
add
jne
add
andb
add
in
add
lds
addb
ja
add
pop
add
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
add
sahf
lret
mov
call
push
aad
pop
cltd
scas
int3
movsl
rolb
add
fadd
mov
push
mov
jle
notb
mov
add
add
add
mov
add
mull
mov
in
pop
lahf
nop
out
add
bound
xchg
push
push
clc
add
lcall
push
add
inc
rol
ror
pop
push
push
not
pop
push
push
push
push
push
push
push
push
push
call
add
add
lods
mov
jae
lods
add
ror
mov
mov
mov
add
into
jae
outsl
xchg
add
shlb
cmpl
mov
imul
pusha
push
call
push
lea
jmp
xchg
jle
jb
mov
add
mov
add
mov
add
push
add
xchg
mov
arpl
shrl
std
mov
mov
add
add
push
pop
movl
add
iret
stos
xchg
lcall
inc
cld
push
push
push
push
push
call
jmp
arpl
jb
mov
aam
out
add
add
add
add
add
add
ficoms
imul
add
lahf
add
mov
ror
add
les
addb
fiaddl
add
ficomps
lret
in
lcall
push
shl
sub
pop
pop
pop
push
sub
pop
pop
leave
push
push
push
call
mov
jns
add
push
mov
mov
in
add
add
notl
add
mov
roll
xchg
stc
lret
add
mov
sbb
add
add
bound
xchg
add
add
insb
jno
pushf
scas
sub
pop
ret
push
shl
pop
push
push
lea
push
push
call
mov
add
add
add
add
mov
cwtl
jp
add
add
mov
xchg
add
add
add
xchg
add
add
test
lcall
in
add
push
shl
pop
push
push
lea
shl
ror
pop
push
push
push
push
push
call
leave
jbe
mov
mov
test
add
mov
fsubrs
add
add
push
call
add
in
sarb
fstl
add
call
add
sub
pop
push
push
push
push
push
push
push
call
add
mov
mov
aad
add
xchg
add
add
mov
test
add
add
out
sti
add
leave
lods
add
add
mov
rolb
push
pop
add
std
mov
add
add
add
add
jno
add
add
lods
add
nop
sub
pop
push
movl
push
push
push
call
out
int
pop
mov
add
push
jecxz
popa
add
add
rolb
hlt
in
add
jecxz
add
lds
add
in
xchg
add
leave
add
jle
roll
mov
hlt
add
scas
add
xchg
out
add
lcall
inc
clc
incl
add
add
push
xchg
call
les
xchg
add
jle
pop
add
add
mov
je
loop
xchg
out
add
push
add
lcall
add
rorb
mov
in
clc
pop
mov
push
push
lea
push
push
lea
push
lea
push
call
bound
jno
add
enter
add
popa
ret
test
xchg
hlt
jle
add
std
andl
add
add
addb
mov
add
insb
aam
bound
jbe
lret
hlt
lret
lret
add
roll
push
add
pop
pop
pop
push
push
call
clc
add
mov
fadds
add
add
insb
add
les
add
in
insb
mov
lret
add
in
add
add
push
test
clc
lcall
push
sub
lea
pop
leave
ret
push
add
sub
pop
push
push
dec
pop
mov
add
push
sub
pop
push
push
push
lea
push
push
push
lea
push
push
call
fists
cmc
push
scas
jo
jp
add
add
int
roll
mov
arpl
add
rcl
mov
add
imul
push
add
mov
int3
mov
ja
bound
push
icebp
add
jae
push
movb
sub
pop
push
push
push
lea
push
push
lea
push
call
add
xchg
mov
stc
add
add
pop
mov
fcomp
hlt
jns
jle
add
imul
mov
lods
popf
jb
sub
pop
push
push
lea
push
push
push
lea
push
push
call
scas
popf
out
xchg
fildl
add
loope
push
bound
stos
add
add
mov
lods
add
add
add
pusha
pushf
add
fwait
arpl
push
cwtl
leave
test
shr
std
fiadds
sub
pop
testl
addl
push
shl
lea
ror
pop
push
push
add
pop
call
push
push
push
push
push
push
lea
push
push
push
call
add
jp
add
lahf
jae
add
add
xchg
popf
jl
add
add
add
out
icebp
sti
jge
add
add
out
xorb
call
add
iret
movsb
loope
add
add
add
pop
mov
xor
jnp
add
into
cli
std
data16
lcall
inc
cld
pushl
push
add
not
not
pop
push
push
push
inc
rol
pop
call
push
add
ror
pop
cmpl
jne
push
xor
dec
lea
pop
pop
push
push
push
push
lea
push
push
push
push
push
push
call
add
push
mov
add
pop
add
mov
hlt
mov
add
add
std
in
test
add
jge
in
add
nop
mov
push
xchg
nop
add
add
add
sub
pop
pop
push
xor
ror
pop
pop
push
lea
pop
pop
leave
push
not
dec
lea
pop
ret
push
push
push
call
add
sarl
add
sahf
mov
mov
addl
ja
xchg
add
add
test
in
clc
lcall
in
add
push
lea
push
push
push
push
lea
push
push
call
add
leave
les
cwtl
in
mov
pop
add
mov
shll
add
add
add
add
pop
mov
fbstp
test
mov
jne
add
jb
jmp
add
andb
jbe
add
mov
in
add
in
in
push
push
lea
push
call
push
mov
add
test
add
test
add
mov
les
jne
add
add
xchg
ret
pop
cmc
add
out
add
cltd
add
out
popf
imul
clc
add
push
pop
push
push
push
add
sub
sub
pop
movl
push
ror
sub
pop
push
call
push
push
push
lea
push
push
lea
push
push
call
add
add
add
shll
sti
add
pop
mov
mov
xchg
add
outsl
repnz
add
add
add
add
pop
push
call
push
not
sub
pop
subl
push
inc
ror
pop
cmpl
jne
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
add
jecxz
add
pop
jl
add
cmpsb
add
shr
iret
fwait
add
sti
ja
add
out
pop
in
add
lcall
push
add
sub
xor
pop
pop
pop
push
push
push
push
call
stos
add
push
pop
push
mov
add
cmpsl
xchg
jecxz
lea
add
xchg
add
add
add
int
add
flds
sti
add
fdivrl
add
add
data16
ret
jmp
jmp
stos
cltd
add
pop
fiadds
add
fiaddl
lcall
push
push
lea
push
lea
push
push
lea
push
push
push
call
popf
add
mov
out
add
mov
pop
ret
ja
jo
add
hlt
add
xchg
icebp
cli
mov
add
lds
in
cli
cld
add
add
sub
pop
leave
push
push
call
movl
shll
add
stos
arpl
add
enter
outsl
mov
xchg
mov
jne
add
add
jne
add
push
sarb
lcall
out
addb
add
push
lods
cltd
movsb
lcall
in
clc
pop
ret
push
rol
pop
push
mov
push
rol
add
pop
add
push
shr
not
pop
push
push
add
xor
pop
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
cmc
add
xchg
ja
iret
add
call
add
mov
insb
jp
add
lock
cld
add
mov
int
shrl
fdivrs
add
mov
add
add
js
lret
add
add
add
shr
jbe
faddl
lea
jb
lcall
push
push
push
push
lea
push
lea
push
push
call
test
xchg
int
out
add
add
add
push
cwtl
add
xchg
aad
xchg
mov
in
out
add
xchg
fwait
movsl
icebp
cwtl
lahf
lahf
add
push
fiadds
xchg
mov
pop
push
push
lea
push
lea
push
push
push
push
push
call
sarb
push
jmp
pop
add
scas
mov
pop
cwtl
testb
add
shlb
lret
add
sahf
add
call
bound
in
rolb
inc
or
push
push
lea
push
call
xchg
pop
add
lods
push
fcomip
movsb
jne
clc
jo
add
movsb
filds
lahf
movsl
pop
add
add
jp
fmul
clc
add
add
xchg
mov
jmp
add
movsb
mov
jmp
add
jge
add
add
les
out
jae
add
pusha
fisubrs
in
lock
lcall
inc
cmp
push
call
lahf
push
cmc
test
lea
add
mov
cmpsl
in
test
add
add
add
into
enter
js
call
lcall
call
lret
aam
or
inc
dec
pop
mov
shr
push
rol
rol
pop
add
mov
push
lea
push
push
call
jl
testl
pusha
iret
add
jns
add
icebp
test
add
in
icebp
add
xchg
notb
insb
addl
add
add
roll
sub
pop
mov
add
push
push
call
stc
add
out
add
push
add
push
movsl
add
add
mov
popa
mov
pusha
push
add
add
cmpsl
add
mov
push
aam
jns
mov
mul
add
add
addl
jbe
shrl
test
add
shlb
inc
add
add
loop
pop
mov
cmp
jne
push
add
inc
shr
pop
cmp
jne
push
dec
xor
pop
mov
push
push
call
add
add
ja
stos
movsl
mov
jecxz
lret
jae
pusha
out
adc
pop
test
add
lea
add
mov
fldpi
adcb
movsl
in
lds
fldl
mov
ret
xchg
add
add
fdiv
add
add
jno
in
clc
pop
movl
push
push
push
push
lea
push
push
lea
push
call
mov
add
add
mov
stos
mov
add
stos
add
push
scas
jl
scas
mov
jnp
add
pushf
mov
add
sub
pop
jmp
push
sub
pop
mov
push
push
call
jae
xchg
pusha
add
mov
cli
add
cltd
jl
add
add
mov
mov
add
pushf
rolb
add
add
jns
add
js
movsb
insb
imul
add
cmpsl
sti
gs
add
add
add
add
lcall
push
or
adc
test
add
add
xor
pop
mov
movl
push
xor
pop
jmp
mov
push
shr
lea
shr
pop
mov
cmp
jne
push
sub
shr
inc
pop
mov
push
add
lea
sub
pop
movl
push
push
push
push
call
add
popl
add
fstl
add
test
jnp
fcmove
add
scas
icebp
add
repnz
add
cmc
insb
xchg
add
add
mov
add
nop
lret
lock
add
lcall
xlat
or
add
dec
inc
jne
lea
push
push
push
push
call
add
pop
jae
add
add
out
add
add
add
jp
in
sti
movsb
scas
add
jge
mov
lock
out
pop
add
std
popf
into
fcompl
add
les
jge
addb
add
dec
js
std
pop
add
incb
jo
in
call
mov
cmpw
jne
push
shl
sub
shl
dec
pop
mov
push
push
lea
push
push
lea
push
call
mov
pusha
add
add
rcr
add
popf
stos
cwtl
add
add
push
test
icebp
add
rcl
add
jmp
push
addr16
test
popf
add
pop
sub
pop
movl
push
shr
inc
inc
pop
jmp
push
lea
push
push
push
push
push
push
call
loope
incb
cmpsl
subb
add
jne
jle
add
icebp
je
repnz
repnz
add
add
add
add
data16
add
pushl
pop
push
pop
mov
mov
push
add
sub
not
pop
mov
push
push
xor
push
or
not
add
shr
sub
sub
add
pop
not
pop
push
lea
pop
push
push
inc
not
pop
call
cmpl
je
push
push
push
sub
add
lea
not
ror
sub
dec
pop
lea
pop
push
pop
push
push
add
pop
call
cmpl
je
push
push
not
push
or
inc
add
sub
sub
lea
pop
not
rol
ror
pop
push
rol
inc
dec
pop
push
call
push
lea
push
push
push
push
push
push
lea
push
call
mov
add
jne
cmpsb
mov
add
cld
xlat
rolb
add
scas
mov
out
pop
add
jo
sahf
add
imul
add
pop
add
mov
addl
add
add
sub
pop
cmpl
je
push
push
shl
push
or
inc
add
sub
sub
shl
dec
rol
pop
sub
pop
push
push
lea
push
push
push
push
lea
push
push
push
call
add
xchg
jmp
add
pop
add
add
addl
rolb
xchg
add
fiaddl
leave
add
add
lahf
jge
addl
push
mov
add
mov
add
out
add
jmp
add
faddp
lock
js
in
add
add
add
add
in
fcompl
call
push
rol
sub
sub
pop
cmpl
je
push
push
add
sub
add
sub
push
and
add
xor
ror
sub
rol
xor
pop
shr
add
shl
add
pop
push
ror
pop
push
push
lea
push
push
push
push
push
call
add
mov
add
mov
addb
roll
mov
std
jp
negl
add
add
aam
cmpsb
pop
rol
add
mov
addl
add
lcall
int3
push
add
add
pop
add
mov
add
push
mov
rolb
data16
add
lcall
jmp
add
push
xor
pop
cmpl
je
push
push
shr
push
xor
add
ror
sub
pop
sub
xor
ror
pop
push
pop
push
push
push
push
push
push
push
push
push
lea
push
call
mov
add
add
stos
stos
iret
add
add
add
test
arpl
iret
fsubs
mov
add
mov
mov
aad
addb
add
push
add
jo
filds
inc
xor
ret
int3
je
push
push
xor
rol
shr
push
push
pop
add
rol
sub
sub
not
ror
pop
add
pop
push
sub
sub
sub
pop
push
push
ror
pop
call
push
push
lea
push
call
ljmp
mov
pusha
add
mulb
faddl
add
add
add
add
out
lock
jmp
movsl
test
add
xchg
add
std
out
gs
add
cmpsl
fnsave
add
mov
hlt
lcall
cmp
or
int3
je
push
push
add
add
inc
push
sub
add
shl
sub
sub
add
add
xor
lea
pop
sub
lea
pop
push
shl
pop
push
call
push
shl
pop
cmpl
je
push
push
not
lea
lea
not
push
xor
add
xor
xor
lea
rol
sub
sub
pop
sub
dec
rol
pop
push
push
push
push
push
push
push
push
push
push
call
add
add
push
addb
imul
ja
add
movsb
add
add
call
fildl
in
fiadds
icebp
pop
push
add
push
sub
rol
inc
pop
call
push
push
push
push
push
lea
push
push
push
call
push
add
fwait
add
fwait
mov
add
insb
add
add
mov
stos
add
add
jge
xchg
push
add
sub
pop
cmpl
je
push
push
inc
push
sub
add
sub
lea
add
rol
sub
lea
not
not
xor
pop
shr
not
inc
add
pop
push
inc
dec
pop
push
push
lea
push
push
lea
push
call
mov
addl
sub
movsb
add
roll
ljmp
mov
add
add
add
jge
push
add
subb
add
add
add
add
jp
mov
lcall
movsb
xor
add
ret
rol
sub
add
pop
cmpl
je
push
push
sub
push
or
inc
add
shl
sub
shl
pop
pop
push
push
push
push
lea
push
push
push
call
add
add
fadds
add
pusha
add
mov
aam
add
jle
jbe
mov
test
mov
add
mov
cwtl
les
push
add
leave
add
add
add
add
in
add
add
cli
into
sub
pop
push
call
push
add
pop
cmpl
je
push
push
shl
add
dec
ror
push
and
add
add
sub
sub
xor
sub
pop
shr
ror
pop
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
in
add
jle
add
add
xchg
mov
ret
add
in
add
cltd
add
movsl
add
rolb
lret
add
add
add
loope
push
movb
add
mov
add
imul
add
add
loopne
leave
sahf
add
add
bound
cli
jmp
add
pop
add
sub
pop
push
push
push
push
push
push
call
add
xchg
add
jp
fidivrl
xchg
add
lret
scas
add
add
push
add
rolb
fsubs
add
popa
clc
add
add
add
aad
jp
add
fs
lock
add
in
in
pop
call
push
push
push
lea
push
push
call
add
add
outsl
mov
add
add
add
iret
repnz
rol
add
in
pusha
lret
mov
out
fadds
add
add
addr16
xchg
int3
push
stos
mov
push
add
fildl
add
add
imul
sub
pop
cmpl
je
push
push
shr
push
sub
add
not
not
shl
sub
dec
sub
ror
pop
dec
pop
push
ror
add
not
pop
push
push
push
call
add
mov
fs
aam
scas
sarb
add
add
xchg
jl
pop
add
outsl
bound
add
pop
jo
in
clc
pop
call
cmpl
jne
push
push
push
push
push
call
add
add
push
fcompl
jbe
test
pop
into
loop
mov
add
add
add
je
add
lcall
inc
adc
add
add
add
inc
ret
sub
lea
pop
jmp
xor
push
push
push
call
pop
add
outsl
add
push
add
add
mov
loope
add
mov
add
sub
pop
pop
push
push
push
lea
push
lea
push
push
push
push
push
call
add
out
jno
mov
add
jmp
add
stos
pop
out
add
push
xchg
lock
add
pop
xchg
add
movsb
movl
add
sahf
add
mov
cmpsb
add
mov
xchg
repnz
xchg
rorl
in
fcompl
push
push
push
lea
push
push
lea
push
push
push
call
xchg
add
add
pop
cwtl
add
clc
lahf
arpl
mov
ffree
pop
data16
pop
lds
mov
add
add
pop
pop
push
add
pop
leave
ret
push
sub
inc
add
pop
push
push
inc
pop
mov
add
push
inc
pop
cmpl
jne
push
push
sub
push
and
add
shr
sub
shl
dec
dec
pop
shr
sub
shr
pop
push
ror
shr
pop
pushl
push
add
rol
shl
add
pop
call
push
push
lea
shl
pop
call
push
push
push
push
push
push
push
push
call
bound
add
lret
add
rolb
clc
push
cmpsb
jb
add
lret
add
stc
rclb
enter
mov
add
jo
in
add
addr16
add
push
xlat
xchg
xchg
xorb
test
add
add
cmpsb
push
jle
add
lcall
ret
pop
add
push
add
lea
pop
cmpl
je
push
rol
pop
cmpl
jne
mov
push
push
push
push
call
mov
mov
add
add
mov
add
in
xchg
movl
fisubrl
lock
mov
fldl
mov
add
out
jb
int
not
mov
push
xchg
sub
pop
call
push
push
lea
push
call
mov
add
add
add
stc
out
aad
add
repnz
pushf
add
jecxz
mov
add
add
lcall
push
not
add
add
pop
jmp
push
push
push
lea
push
push
push
push
call
add
add
push
insb
cmpsl
out
mov
xorl
into
cltd
add
add
mov
mov
in
cmpl
jne
push
push
add
add
push
xor
add
inc
not
ror
sub
rol
pop
add
shl
pop
push
lea
push
push
push
call
add
test
mov
mov
add
sahf
cli
popf
les
out
add
outsl
lret
add
loope
add
xchg
mov
mov
fwait
xchg
add
aad
je
add
stc
add
lcall
add
lret
jbe
imul
pushl
call
push
push
push
push
call
mov
int
ljmp
add
stc
movl
add
aam
add
fistpl
loope
pop
add
fcmovu
add
ffreep
in
jmp
in
mov
clc
clc
xlat
xchg
mov
out
add
rcrl
cmpsb
add
mov
add
mov
addb
js
sub
pop
push
push
add
sub
pop
call
jmp
push
push
lea
push
push
push
lea
push
push
push
call
rolb
repnz
test
jno
add
mov
popf
stos
add
stos
fwait
xchg
je
jb
lods
push
stc
out
in
in
aam
cmpsb
xchg
jge
add
test
mov
add
add
mov
mov
add
scas
jae
adcl
arpl
add
std
mov
mov
add
mov
push
push
call
divb
add
add
xchg
cwtl
imul
add
test
lock
add
in
add
clc
add
add
test
addb
les
add
test
add
add
in
pop
mov
in
clc
pop
mov
push
add
lea
pop
push
push
push
inc
shl
add
push
and
add
lea
rol
sub
add
dec
pop
inc
dec
pop
push
shr
pop
pushl
push
rol
dec
pop
call
push
lea
push
push
push
push
push
push
push
call
push
filds
popf
mov
stos
add
jo
add
xor
add
add
mov
jne
add
jb
imul
mov
iret
aam
mov
lods
mov
push
int
enter
in
loopne
call
push
push
add
shr
dec
push
push
pop
add
ror
rol
sub
sub
pop
rol
sub
pop
push
push
push
push
call
add
mov
les
pop
mov
jl
mov
mov
aad
in
add
in
shll
clc
out
scas
add
mov
xlat
xchg
lcall
lcall
jne
push
push
call
sahf
popf
add
push
shrl
add
fsubp
add
lcall
pop
test
ljmp
stc
addl
xchg
stos
jo
pop
add
xchg
add
les
add
add
in
test
add
mov
popa
loop
je
add
test
add
push
push
push
push
lea
push
lea
push
push
lea
push
call
push
add
in
out
cltd
add
ror
push
add
sbbb
add
add
repnz
lcall
in
loopne
call
push
push
push
and
add
inc
sub
dec
lea
sub
sub
sub
add
pop
dec
pop
push
dec
xor
inc
pop
pushl
call
push
lea
push
push
push
push
push
push
push
push
lea
push
call
add
gs
lock
add
add
add
js
rolb
cmc
popf
push
add
add
mov
add
idiv
mov
cltd
rclb
sub
pop
call
push
push
inc
inc
push
xor
add
lea
sub
pop
xor
shl
pop
push
add
ror
rol
pop
pushl
push
lea
push
lea
push
push
call
adc
loop
xchg
loope
add
add
add
add
add
add
mov
add
mov
faddl
popf
add
js
add
fisubs
add
add
sub
pop
call
push
push
call
add
add
add
outsl
add
insb
pusha
out
add
add
lret
add
loopne
xchg
xchg
add
pop
movsb
cli
add
mov
add
lods
enter
out
scas
add
mov
jno
add
add
clc
lcall
shrb
mov
loopne
push
sub
add
inc
shl
dec
sub
sub
dec
add
pop
sub
sub
add
xor
pop
push
push
push
push
call
sti
add
add
add
jns
cltd
ja
loop
add
jo
add
xchg
negl
movsb
lcall
pop
pushl
push
lea
push
lea
push
push
push
lea
push
call
lock
pop
lcall
xchg
pop
jge
jae
fildl
pop
in
insb
push
rolb
lods
add
mov
add
add
add
add
hlt
mov
jo
add
lcall
int
add
push
pop
call
push
push
lea
push
or
not
add
add
sub
lea
xor
pop
add
inc
pop
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
pop
ja
add
add
add
add
add
jae
add
mov
mov
mov
sub
pop
pushl
push
push
lea
push
push
push
call
add
js
loopne
add
cmpsb
ja
add
out
add
and
mov
iret
out
add
add
cmc
lea
popl
rcrb
mov
push
addr16
mov
jne
add
pop
shlb
cli
int
in
in
pop
call
push
push
push
push
call
add
add
add
stc
add
in
mov
push
add
add
sti
xchg
add
jns
fldl
mov
lock
lcall
shrb
imul
add
shr
push
or
not
add
add
add
sub
xor
shr
pop
dec
sub
pop
push
push
push
push
push
push
push
call
mov
add
fs
jmp
rol
lret
push
in
add
faddp
mov
add
add
pusha
lods
add
mov
push
add
stos
add
add
add
lods
je
add
add
add
pop
ljmp
testl
scas
pop
or
mov
push
add
add
cld
xchg
addl
fs
test
mov
mov
lret
fistpll
scas
sarb
add
xorb
jle
rcrb
je
mov
add
les
loope
add
xchg
mov
stc
jne
add
fdiv
lods
xlat
fisubl
imul
in
pop
call
push
sub
dec
pop
call
push
push
not
xor
add
push
sub
add
inc
sub
ror
dec
ror
pop
xor
xor
inc
add
pop
push
shl
sub
shl
shr
pop
pushl
push
push
push
lea
push
push
push
push
push
push
call
mov
std
nop
mov
xchg
add
add
add
std
enter
ficomps
xchg
add
lods
add
lahf
loope
add
out
add
test
mov
xchg
js
in
fcompl
ret
and
add
filds
enter
push
push
not
push
sub
add
not
sub
shr
xor
pop
rol
add
ror
pop
push
push
push
call
pop
idivl
add
add
jmp
ljmp
add
add
mov
cld
faddl
push
js
mov
cmpsl
cmpsl
add
add
jnp
add
imul
fldl
add
jne
push
push
push
push
push
call
addr16
fucomi
add
mov
mov
roll
add
mov
mov
outsl
xor
leave
stos
sti
leave
add
add
aam
mov
test
shl
add
mov
hlt
testb
push
add
ret
add
add
jmp
mov
lcall
lret
and
add
dec
pusha
pop
call
push
push
dec
inc
rol
push
or
inc
add
sub
sub
inc
pop
lea
lea
pop
push
push
lea
push
lea
push
call
add
sti
out
jae
ja
js
add
add
add
jo
pushf
add
add
add
enter
add
add
mov
xchg
icebp
add
add
pushl
push
lea
push
push
push
push
push
push
push
push
call
add
mov
pop
add
mov
in
addl
rolb
mov
add
push
test
add
ficoml
add
add
add
jp
andb
lahf
out
add
mov
push
add
roll
add
add
sub
pop
call
push
push
call
add
add
mov
add
in
add
mov
push
in
lock
add
add
add
sub
pop
lea
push
lea
push
push
lea
push
push
call
add
scas
mov
push
subb
pop
add
std
add
idiv
outsl
lods
add
cwtl
test
std
jle
add
add
out
jecxz
add
pop
aad
fwait
jle
in
in
lcall
call
push
push
sub
add
not
push
sub
add
sub
sub
shl
pop
dec
pop
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
mov
pop
jbe
mov
add
xlat
add
add
loopne
add
rolb
in
xlat
xchg
popf
add
add
lods
add
pop
add
add
popa
add
mov
js
pop
add
xchg
lock
notb
in
lret
xchg
iret
in
fdivs
in
fdivr
lcall
jne
call
push
push
push
push
push
push
push
push
push
lea
push
call
add
add
test
add
add
lock
add
add
add
add
popa
leave
add
push
testb
add
addl
push
push
rol
dec
push
or
inc
add
shl
ror
sub
add
sub
pop
add
sub
dec
ror
pop
push
lea
push
push
push
push
lea
push
lea
push
call
pop
mov
add
fcomps
add
fildll
xchg
add
cwtl
add
mov
cmc
add
pusha
mov
add
addl
add
add
add
lods
add
ja
pushf
add
add
mov
js
in
in
lcall
jne
push
push
lea
push
push
push
call
stos
jb
add
push
idivb
out
jle
push
add
repnz
xchg
ret
add
add
add
vpcompressw
add
jns
icebp
pop
bnd
push
in
add
notb
iret
add
cmpsl
fwait
add
enter
int
pop
add
mov
add
cltd
stos
sub
pop
call
push
push
push
push
push
push
push
call
testl
sahf
add
xchg
movl
add
add
mov
xlat
jp
mov
mov
flds
sub
pop
call
push
push
rol
sub
push
push
pop
add
rol
shr
shl
sub
sub
rol
add
pop
ror
pop
push
push
push
push
lea
push
call
mov
jmp
xchg
add
mull
fnsave
mov
out
push
mov
les
mov
stos
add
in
addl
add
sub
pop
pushl
push
push
call
incb
xchg
flds
jl
rcll
pop
mov
add
roll
mov
aad
push
scas
fwait
mov
mov
mov
sub
pop
call
call
push
push
shr
rol
inc
push
xor
add
sub
xor
sub
sub
shl
pop
ror
dec
sub
sub
pop
push
shr
add
pop
pushl
call
push
push
sub
inc
push
sub
add
inc
not
sub
pop
sub
ror
lea
add
pop
push
push
dec
add
push
push
pop
add
not
sub
sub
add
sub
inc
lea
add
shl
pop
dec
not
shl
sub
pop
push
sub
shr
rol
pop
call
pop
push
push
call
jmp
shrl
add
mov
xchg
push
arpl
add
in
stos
sti
pop
mov
clc
push
popa
xchg
add
scas
xchg
test
imul
mov
dec
jne
push
push
ror
shl
shr
sub
push
xor
add
rol
sub
xor
pop
inc
add
pop
push
push
push
call
enter
ja
arpl
add
xchg
add
out
pop
movl
loop
add
lret
add
add
nop
jge
add
add
add
lcall
jne
push
shl
lea
not
pop
call
lea
push
dec
ror
inc
lea
pop
push
push
push
lea
push
push
lea
push
lea
push
call
leave
add
add
add
stos
add
jmp
pop
out
mov
rolb
int
add
add
add
add
push
push
push
cmpsb
add
add
shl
push
nop
add
add
jnp
add
add
add
add
lcall
add
or
lea
push
push
push
lea
push
call
pop
add
add
add
add
mov
stc
add
add
xchg
xchg
push
xchg
add
sti
add
popa
je
add
add
in
add
add
loopne
enter
xchg
add
sbbb
insb
lock
add
idivb
add
out
add
shrb
in
lcall
add
push
lea
push
lea
push
push
push
call
add
enter
loopne
jbe
add
xchg
pop
add
jl
pop
add
jns
enter
add
xchg
add
add
add
into
mov
ja
lea
add
sub
pop
call
push
push
push
push
push
push
call
pop
add
imul
stos
test
add
mov
add
fstps
add
add
mov
mov
mov
xchg
cmc
xchg
ljmp
cmpsl
add
add
inc
or
add
test
in
push
lea
dec
sub
push
or
not
add
sub
ror
sub
shl
rol
pop
xor
pop
push
add
pop
pushl
push
shr
pop
call
push
push
push
push
push
push
push
call
lret
test
add
or
add
loopne
pop
mov
mov
add
mov
xorl
outsl
jl
fwait
in
mov
mov
fwait
pop
add
cltd
pop
add
cld
push
add
fstpt
lcall
call
push
push
push
push
call
xchg
mov
add
jnp
add
add
add
add
add
mov
fcoml
add
xchg
add
add
add
add
test
add
loop
add
push
lret
mov
mov
mov
stos
add
push
lcall
lcall
add
add
push
push
add
sub
push
or
not
add
add
add
shl
sub
shl
sub
pop
pop
push
push
push
lea
push
push
push
push
push
push
push
call
xchg
fadds
stos
jbe
out
add
jns
notb
rolb
add
add
jecxz
repnz
pop
popa
mov
add
add
add
pop
pop
jno
lret
add
mov
testl
add
add
jae
std
sub
pop
pushl
call
push
push
push
call
lods
in
add
add
add
jb
add
enter
addl
fwait
mov
sahf
movsl
add
mov
ljmp
add
push
add
pop
mov
testb
add
push
cmpsl
cmpsl
clc
mov
jbe
fdiv
add
hlt
lcall
add
push
push
pop
push
push
lea
pop
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
add
push
add
in
xorb
movsl
add
shrl
add
mov
imul
lret
leave
lds
add
add
add
pop
std
cmc
mov
lcall
add
push
inc
push
push
lea
push
call
mov
add
mov
add
add
fstpt
add
mov
add
in
mov
add
addr16
add
je
add
add
std
enter
into
pop
scas
stos
shl
xchg
xchg
mov
add
cld
aad
push
push
lcall
pop
call
push
sub
shr
xor
pop
lea
push
push
shr
lea
push
or
inc
add
not
shr
sub
ror
pop
lea
rol
lea
pop
push
dec
pop
pushl
push
lea
push
push
push
call
fiaddl
jae
sahf
lods
add
jne
pop
fadds
add
pusha
ficomps
test
faddl
sbbb
stc
add
enter
push
iret
out
in
add
fs
add
add
nop
mov
sti
jp
xchg
mov
xchg
hlt
mov
add
add
add
sub
pop
call
push
shr
pop
push
call
push
push
dec
push
sub
add
lea
sub
pop
add
dec
dec
pop
push
dec
pop
pushl
push
rol
sub
add
pop
call
call
push
push
lea
push
push
lea
push
lea
push
call
jmp
in
add
add
add
add
push
lds
add
push
add
addr16
add
insb
add
add
ret
add
add
loop
xchg
je
aad
pop
add
add
shl
lret
add
jecxz
loopne
add
sti
mov
shr
out
pop
pop
push
add
mov
add
inc
cld
push
dec
pop
lea
push
push
ror
push
sub
add
not
ror
sub
dec
xor
pop
pop
push
sub
inc
pop
pushl
call
push
lea
push
call
cmp
mov
push
popa
push
pop
add
mov
pop
jl
jns
xchg
mov
mov
cltd
fdivs
add
cmc
sbbl
mov
lods
pop
enter
add
roll
in
int3
add
push
add
lcall
add
push
push
lea
push
push
push
call
imul
rcrb
add
add
mov
loopne
push
stc
add
push
add
ljmp
add
add
push
pusha
cmpsl
lods
adcb
add
movsl
add
cmpsl
jns
jnp
cmpsb
sub
pop
push
push
add
xor
sub
ror
pop
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
mov
adc
int3
add
mov
push
mov
push
mov
repnz
fdivs
add
add
cli
add
sahf
jns
add
add
mov
pop
add
mov
add
movsl
stc
cmpl
mov
add
add
lcall
add
jne
push
push
add
sub
push
or
not
add
add
add
sub
lea
add
shr
pop
shr
inc
dec
inc
pop
push
ror
add
shl
pop
push
call
push
push
lea
not
inc
push
xor
add
rol
sub
dec
pop
inc
pop
push
sub
pop
pushl
push
sub
lea
add
pop
call
push
push
lea
push
push
push
push
push
lea
push
push
call
add
clc
push
mov
pushf
loopne
add
lods
add
testb
pusha
add
cmc
test
add
add
fiaddl
add
add
xchg
add
pop
cld
mov
je
in
test
add
add
add
mov
push
filds
lcall
shrb
push
lea
or
inc
add
add
sub
add
not
sub
pop
inc
pop
push
push
lea
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
imul
mulb
rcr
add
fadds
repnz
lods
add
fcomps
add
filds
mov
mov
add
std
lods
loopne
lret
add
imul
pop
pushl
push
sub
ror
shl
pop
call
push
not
pop
call
push
push
push
push
push
call
add
add
add
test
leave
loopne
push
fstpt
mov
int3
mov
add
cld
outsl
mov
add
lds
add
mov
jno
addr16
add
ljmp
add
add
mov
add
add
sub
pop
jmp
push
dec
sub
pop
pushl
push
lea
push
push
push
push
lea
push
push
call
mov
xchg
popa
add
add
movsb
mov
subl
lea
pop
jmp
test
in
push
popa
sar
mov
add
add
jl
jno
enter
add
outsl
add
push
push
mov
jae
add
cld
leave
add
aam
movb
and
push
rol
pop
jmp
push
push
xor
shl
push
and
add
inc
xor
add
rol
sub
lea
xor
lea
pop
dec
add
pop
push
inc
pop
pushl
push
sub
lea
add
rol
pop
call
push
push
push
push
push
push
push
lea
push
push
call
xchg
xchg
shlb
jecxz
rcr
xchg
mov
add
mov
movsl
pushf
arpl
add
filds
mov
roll
add
lret
add
add
xor
add
push
add
add
push
sbbl
fcomps
lcall
add
mov
lock
add
add
mov
pop
add
int3
lods
icebp
add
add
hlt
data16
add
add
bound
rol
in
add
in
jb
sahf
jge
ficoms
clc
lcall
shrb
popf
enter
push
push
or
inc
add
add
xor
lea
sub
sub
inc
xor
pop
xor
sub
pop
push
rol
pop
pushl
push
ror
ror
pop
call
push
push
push
push
push
lea
push
push
lea
push
call
fwait
roll
scas
push
std
add
add
pop
add
adcl
add
xchg
addl
add
push
add
bnd
loope
add
add
push
add
add
mov
cwtl
mov
addr16
add
faddl
lods
xlat
sub
pop
push
call
push
shr
sub
pop
leave
push
lea
push
call
add
add
pop
sahf
cld
test
mov
imul
pop
mov
add
add
ja
lahf
jbe
jns
iret
add
mov
int
in
clc
lcall
les
push
push
push
push
push
lea
push
push
push
call
ret
add
into
add
fucom
add
add
add
fs
add
fildl
test
add
js
aam
xchg
lea
rcr
lcall
mov
addl
pop
sub
pop
pop
pop
push
not
pop
pop
push
push
push
call
icebp
add
mov
add
add
add
add
add
add
add
xlat
clc
std
xchg
add
add
mov
icebp
lcall
adcl
fcmove
add
gs
shl
push
add
imul
add
pop
rolb
add
add
add
add
rolb
push
test
lahf
push
lea
push
lea
push
push
lea
push
call
pop
add
mov
add
mov
add
pop
add
scas
xchg
lds
out
negb
ljmp
loopw
incb
lcall
or
push
lea
rol
not
shl
pop
leave
push
sub
sub
sub
ror
pop
ret
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
push
mov
pusha
arpl
add
add
mov
add
stos
fistl
add
stc
cmpsl
xchg
addw
rcll
lcall
in
push
not
pop
cmpl
jne
push
push
call
add
push
sti
add
cli
cmc
cltd
mov
subl
add
xchg
sub
pop
mov
push
add
pop
jmp
push
pop
mov
push
shr
lea
add
pop
and
xor
push
push
push
lea
push
push
push
call
add
lret
add
outsl
loopne
movsb
incb
stos
add
add
mov
add
loopne
add
sti
orl
add
loop
mov
add
addb
mov
pop
aam
add
add
sub
pop
xor
push
dec
add
dec
pop
add
xor
push
push
push
push
push
push
push
push
call
bound
in
add
add
cld
imulb
imul
add
lock
jne
std
jae
mov
add
scas
add
mov
repnz
jo
imul
add
push
add
lods
add
add
subl
loopne
lcall
push
lea
pop
sub
jmp
push
push
push
push
push
push
push
push
push
call
fwait
mov
mov
scas
iret
cmc
fxch
add
add
movsl
scas
add
fnstcw
add
add
sub
pop
sub
push
lea
push
push
call
sarl
add
add
jnp
sahf
add
mov
add
jmp
ror
add
fsubs
push
in
add
incb
in
pop
push
fldcw
add
mov
pop
roll
xor
push
push
push
lea
push
push
push
push
push
call
ror
mov
add
add
add
add
add
add
jmp
cld
fiaddl
scas
mov
mov
add
lods
mov
jnp
ret
test
testl
add
add
loope
jmp
add
add
sub
mov
sub
pop
sub
push
shr
shl
shr
not
pop
cmp
jne
push
sub
pop
mov
lea
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
add
add
add
mov
test
add
pop
add
insb
add
pusha
jns
mov
std
xchg
add
add
lcall
jmp
mov
jmp
iret
inc
pop
add
sub
push
lea
push
push
push
push
push
call
out
add
pop
scas
fs
out
add
hlt
add
pop
mov
out
cwtl
mov
jae
add
je
xchg
cld
push
rolb
pop
add
add
sub
pop
pushl
push
push
call
jo
lea
add
aad
fs
mov
add
lret
xchg
mov
lret
push
pop
add
addb
add
add
add
pop
push
push
push
push
push
push
push
push
push
push
call
std
mov
mov
mov
add
nop
pop
pop
add
rolb
add
shr
loop
add
test
add
cli
aam
fsubr
jno
stos
mov
add
outsl
insb
xchg
add
lcall
jmp
incl
add
lea
push
lea
push
push
push
lea
push
push
lea
push
call
into
add
add
orb
pop
test
cmpsb
out
scas
add
push
add
add
add
fiaddl
mov
add
add
rorb
ret
add
add
imul
lcall
fdivr
cwtl
mov
add
addl
add
push
call
mov
lahf
add
xchg
rclb
pop
add
add
add
mov
insb
xchg
bound
lods
add
lods
shlb
stos
add
pop
add
jmp
imul
faddl
mov
shll
xchg
add
add
jne
add
mov
fsubr
add
lock
fs
pop
cmp
jne
leave
push
push
push
push
lea
push
push
push
push
lea
push
call
add
add
add
scas
xchg
jne
fwait
mov
mov
lret
lcall
add
lcall
add
push
xor
pop
push
mov
push
push
push
push
push
push
push
call
add
add
add
into
add
add
add
xchg
test
add
add
bound
pop
mov
popf
add
lods
movl
in
xchg
out
jno
rolb
jmp
lock
repnz
out
in
stos
push
out
popl
mov
in
in
add
push
rol
sub
rol
pop
push
push
lea
pop
push
push
ror
xor
add
add
pop
push
push
lea
push
push
push
push
push
push
call
add
add
add
fildl
fldenv
mov
stc
cld
push
add
nop
add
add
jne
movb
pop
pop
in
jns
imul
add
sti
jmpw
add
addr16
mov
testl
push
push
push
lea
push
call
adcl
add
push
push
add
add
scas
add
mov
add
add
add
push
outsl
mov
sti
shrb
mov
add
mov
jnp
lcall
add
xchg
push
add
filds
add
push
in
in
lcall
push
sub
lea
sub
pop
mov
lea
push
shr
ror
pop
sub
mov
push
lea
push
push
call
incb
lds
add
add
add
xchg
jns
outsl
add
mov
movsb
add
les
xchg
data16
jp
jmp
iret
add
lods
mov
ret
sub
pop
shr
add
push
push
call
jbe
add
scas
fcmovb
lods
mov
jbe
add
add
addb
movl
jo
fs
add
add
jnp
xchg
add
lret
xlat
arpl
add
add
into
mov
add
add
push
mov
rclb
add
add
add
addb
xchg
add
loope
js
sub
pop
mov
add
push
lea
rol
pop
mov
push
ror
dec
sub
pop
add
push
inc
pop
xor
push
push
push
push
push
call
clc
lret
add
cwtl
push
add
enter
lahf
mov
mov
clc
add
push
xchg
jo
mov
lahf
mov
add
add
xchg
add
nop
test
xchg
add
add
test
stc
push
xchg
add
sahf
mov
mov
icebp
aad
mov
lcall
xlat
push
rol
xor
pop
and
push
push
push
lea
push
push
call
in
loope
add
rcll
add
imul
incb
filds
add
popa
add
sub
pop
rol
push
push
push
lea
push
push
call
add
add
rolb
je
add
add
add
add
jecxz
add
loope
popl
stc
jno
mov
mov
jecxz
cld
test
in
in
pop
rol
push
push
lea
push
lea
push
push
push
push
push
call
add
test
xchg
flds
js
loope
add
push
add
add
add
jecxz
clc
add
scas
mov
mov
cld
mov
add
jno
add
pop
lods
xlat
mov
push
bound
call
add
bound
outsl
push
add
xchg
loopne
ja
sub
pop
xor
inc
push
sub
dec
add
pop
cmpb
jne
push
ror
sub
pop
add
cmp
je
push
add
add
ror
pop
add
push
pop
cmpl
jne
push
shr
add
inc
pop
xor
push
dec
sub
pop
pop
push
rol
not
shr
pop
pop
pop
push
inc
lea
not
pop
pop
pop
push
xor
pop
leave
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
call
test
idivb
add
fldl
in
call
add
add
mov
pop
icebp
add
add
jmp
add
pop
xchg
add
cmpsb
stos
call
add
add
lcall
or
push
push
push
push
push
push
push
push
lea
push
push
call
add
add
add
addl
addr16
cmpsl
add
lock
in
iret
hlt
add
lea
fdivrl
push
into
into
add
fs
add
lods
lret
add
add
leave
add
add
mov
add
out
fiaddl
add
ret
stc
add
sub
pop
mov
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
cltd
pop
test
add
add
push
mov
je
add
nop
jl
jp
rolb
xorb
add
addb
mov
shl
out
add
scas
add
push
or
push
push
call
mov
push
stos
incb
add
add
movl
loope
test
in
stos
add
sahf
jo
jp
add
fwait
add
push
test
scas
jb
mov
in
lcall
push
push
lea
push
push
push
call
add
mov
pop
add
int3
pushf
push
add
aam
mov
add
fs
stos
mov
add
testl
add
add
mov
aad
add
add
add
mulw
pop
push
lea
push
push
push
call
add
int3
xchg
enter
incb
shll
sbbl
testl
fcmovne
mov
ja
jne
mov
bound
lock
lcall
sbb
call
shl
dec
pop
push
push
push
push
push
push
push
lea
push
call
add
add
cld
add
arpl
hlt
data16
add
jbe
add
add
add
lret
sub
pop
call
push
sub
pop
xor
push
shl
pop
pop
pop
push
lea
push
push
push
push
push
push
push
call
add
mov
popf
push
add
cwtl
add
mov
ljmp
vcvtps2pd
add
fadds
in
add
lcall
pop
push
xor
not
pop
pop
push
sub
pop
leave
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
add
lods
jbe
add
pushf
pusha
add
int
add
jns
out
pop
add
xchg
addb
mov
add
add
add
mov
sub
pop
ret
push
push
push
push
call
divb
jbe
pop
add
jbe
add
loopne
add
addl
add
push
add
add
mov
add
cmc
addr16
pop
mov
push
push
push
lea
push
push
push
push
lea
push
call
xchg
push
add
add
int3
add
loopne
add
enter
add
jae
add
fs
ljmp
mov
jl
jo
mov
movsl
add
sti
call
add
add
testb
add
push
push
pop
push
push
lea
push
lea
push
lea
push
push
push
push
call
test
add
bound
mov
lahf
addb
add
add
flds
push
bound
int
xchg
mov
mov
scas
add
push
add
add
push
shr
mov
pop
push
mov
add
lds
test
xchg
add
push
sub
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
add
add
add
outsl
fiaddl
add
data16
mul
add
pop
add
push
mov
mov
add
add
add
add
add
in
add
lret
add
add
add
add
add
xchg
movsl
iret
push
xchg
outsl
roll
pop
mov
push
inc
add
pop
push
push
inc
pop
pop
push
sub
pop
lea
push
push
lea
push
push
push
push
push
lea
push
push
push
call
add
fs
mov
fisubrl
mov
add
push
loop
add
xchg
add
xchg
sahf
stos
roll
xlat
xchg
lret
xlat
in
jmp
outsl
outsl
xchg
add
add
add
ljmp
add
movl
add
addl
add
pop
aad
add
ljmp
int3
add
mov
cwtl
xchg
mov
subb
rcl
lea
push
call
aam
xlat
add
pop
add
add
js
testb
mov
mov
mov
add
add
add
in
fdivr
lcall
adc
fcompl
ljmp
sbb
mov
add
push
lea
pop
pushl
push
dec
add
xor
pop
popl
mov
push
lea
push
push
push
push
call
xchg
mov
insb
movl
iret
insb
roll
fadds
loope
outsl
repnz
add
jp
add
hlt
xchg
add
out
push
ljmp
jbe
mov
fsubr
shl
jecxz
mov
add
pop
add
add
stc
xor
push
push
call
in
mov
add
add
lock
fwait
add
out
add
mov
add
mov
fisubrs
add
loope
mov
bound
arpl
sub
pop
lea
push
rol
inc
pop
mov
add
push
inc
add
pop
xor
push
add
pop
rol
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
roll
add
add
add
push
loope
add
mov
loope
add
cli
push
add
cmpsl
cwtl
add
push
test
jle
mov
add
mov
add
push
test
add
adcb
enter
fistps
icebp
mov
scas
add
cmpsb
add
add
lcall
push
shl
xor
dec
pop
nop
push
push
push
push
push
call
add
fisttps
cmc
add
add
std
add
test
aad
xchg
test
mov
call
add
rolb
lcall
add
ret
jmp
push
add
pop
inc
push
push
push
lea
push
call
flds
cmpsb
stos
add
in
add
testb
outsl
mov
add
mov
pop
add
rorb
jns
imul
rolb
bound
int3
push
popl
push
jb
add
into
xchg
add
rolb
jb
xchg
add
add
add
cwtl
add
add
add
lock
lcall
push
not
pop
nop
cmpb
jne
push
push
push
push
push
push
push
call
add
add
add
mov
add
add
sahf
fstps
push
add
sahf
in
mov
jnp
push
fwait
jb
lock
add
shlb
stos
cmpsl
add
push
icebp
add
push
add
push
ja
push
imul
xchg
lock
add
outsl
sub
pop
add
push
lea
shl
shl
pop
nop
push
inc
inc
pop
nop
push
push
push
lea
push
push
push
push
push
lea
push
call
add
in
add
pop
add
jmp
add
test
mov
mov
add
add
scas
add
loopne
add
add
repnz
out
push
add
std
mov
fwait
push
add
add
add
call
in
mov
stos
les
lcall
inc
or
test
add
add
push
push
push
call
addb
mov
stc
add
cmpsb
add
jns
xchg
arpl
add
xchg
jmp
add
add
int3
pushf
cmpsb
cld
mov
mov
add
idivl
add
add
jge
jmp
outsl
lock
rol
in
lock
lcall
push
push
push
lea
push
push
call
xchg
loopne
les
cmc
add
mov
fsubrl
add
add
add
xlat
add
pop
push
push
add
mov
add
add
add
add
leave
ret
nop
push
mov
add
add
int3
mov
in
lcall
nop
push
lea
push
push
lea
push
push
push
push
push
push
call
addl
add
xlat
filds
push
add
mov
xchg
data16
imul
add
add
in
testl
sbbl
add
pop
add
cmpsb
sub
pop
cmp
jb
xor
push
push
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
push
call
add
add
add
in
add
add
add
add
add
test
mov
add
enter
add
mov
add
add
add
add
sahf
add
test
add
add
add
add
xlat
and
roll
add
pusha
add
add
testl
stos
pop
add
push
lea
push
push
call
add
jnp
push
add
rol
lahf
add
xchg
ret
pop
test
movsl
sbb
fcmovnb
push
nop
jbe
movsl
pop
stc
add
mov
xchg
jmp
je
stos
mov
in
hlt
pop
movzwl
push
push
call
xchg
repnz
mov
jne
xchg
add
add
jge
test
out
xlat
xchg
adcb
mov
in
clc
pop
mov
push
lea
push
push
lea
push
push
push
push
call
add
mov
rcll
jmp
imul
jnp
add
add
fs
mov
add
std
stos
jae
add
mov
fildll
ljmp
addr16
add
add
fadds
add
lcall
rorl
lret
sub
ret
call
xor
push
lea
push
call
cmpsb
cwtl
bound
out
scas
cwtl
xchg
push
mov
add
add
mov
lea
jge
fldt
cmc
mov
lods
loopne
ror
cli
pop
add
add
add
add
pop
push
add
jle
lret
cmpsl
sub
pop
xor
push
xor
shr
pop
shl
push
lea
sub
not
pop
xor
push
push
push
push
push
push
call
add
xlat
add
add
add
add
push
clc
add
add
add
xchg
add
jl
cmc
clc
add
add
add
in
mov
mov
mov
in
call
push
xor
ror
sub
shr
pop
xor
push
push
push
lea
push
push
push
push
push
call
add
jecxz
cmpsb
ja
mov
ror
popa
jmp
add
push
scas
rclb
ret
add
jb
movsb
int3
add
pop
jmp
gs
addr16
lcall
add
shlb
pushf
in
add
add
mov
add
add
pop
hlt
add
add
add
pop
shl
push
inc
shl
rol
pop
xor
push
push
push
push
push
call
add
enter
lods
arpl
popa
add
jp
mov
add
add
movsl
stc
aam
movsb
add
mov
add
add
xchg
push
lods
jle
movb
repnz
into
add
clc
ja
add
add
pop
leave
mov
out
je
sub
pop
mov
push
push
lea
push
push
lea
push
push
push
call
jb
add
xchg
pop
add
scas
jb
hlt
push
mov
shll
add
add
add
bound
add
test
mov
add
sub
pop
add
push
xor
lea
shr
sub
pop
pop
pop
push
push
push
call
iret
ret
mov
push
xorl
add
add
jbe
out
add
shll
cmpsl
cltd
add
testl
sarl
hlt
pop
pop
push
shr
pop
pop
push
add
pop
leave
push
shr
pop
ret
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
jle
popa
lds
add
add
ljmp
lds
jmp
out
testb
lahf
lea
arpl
popa
add
add
add
pop
jecxz
add
loop
call
add
aam
add
cmpsl
jmp
add
add
jmp
add
lcall
push
push
call
int3
add
add
add
test
mov
aad
addr16
mov
jmp
jbe
cwtl
mov
imul
sub
pop
mov
push
shl
pop
push
push
ror
lea
pop
push
push
shl
not
pop
push
push
push
push
push
push
lea
push
push
push
push
push
push
call
cwtl
lock
add
add
jbe
add
out
sahf
imul
push
push
test
leave
mov
add
xchg
sub
pop
mov
push
add
add
pop
mov
push
lea
push
lea
push
push
call
add
add
icebp
pop
add
mov
mov
add
add
add
add
roll
testl
add
add
add
ror
add
mov
stc
lcall
lock
lcall
jge
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
add
stos
jbe
add
shll
add
add
add
hlt
pop
scas
in
jl
mov
add
gs
cmc
addl
in
roll
add
add
mov
add
mov
add
jbe
ret
fdivr
lcall
rorb
test
or
add
ficomps
testb
jne
add
push
sub
inc
pop
mov
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
mov
add
movsl
add
out
pop
loope
pushf
jnp
add
lret
xchg
neg
imul
jae
in
xchg
lcall
dec
or
push
push
push
lea
push
push
call
add
add
add
add
mov
add
pop
add
add
add
add
in
add
roll
add
mov
add
add
ret
jnp
jae
arpl
add
add
mov
push
cwtl
sarl
lcall
pop
push
shl
shr
pop
inc
push
push
push
push
lea
push
lea
push
lea
push
call
movl
add
int
fmuls
add
mov
jecxz
nop
mov
cmpsb
fwait
add
lret
fbstp
add
jno
stos
push
int
mov
xchg
fldt
les
add
int
lcall
in
in
lcall
rorb
test
add
add
rcrb
rorb
and
add
mov
push
sub
dec
pop
inc
cmp
je
push
add
pop
test
jne
xor
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
jns
push
clc
fdivl
add
cld
addb
test
add
add
mov
add
lret
add
add
lret
add
hlt
sti
lods
xchg
in
fsubrs
in
fdivr
lcall
push
sub
not
pop
pop
push
lea
push
lea
push
lea
push
call
out
add
add
add
add
jmp
mov
in
add
add
xchg
mov
add
mov
push
mov
add
add
fiaddl
imul
xchg
add
add
add
add
add
add
push
add
sub
pop
pop
push
lea
push
lea
push
push
call
jle
aad
mov
rorb
push
add
icebp
movl
sti
jns
repnz
add
pop
mov
pop
ja
add
fildl
push
fiadds
add
fwait
mov
push
add
add
enter
add
test
jo
sub
pop
pop
push
not
ror
add
pop
leave
push
lea
sub
pop
ret
push
push
push
push
push
push
lea
push
push
push
push
call
cmc
in
scas
lods
mov
add
pop
test
jo
loope
jae
lods
add
inc
add
loop
rolb
add
lea
out
mov
in
fcomps
push
push
shr
pop
inc
cmp
jne
push
push
push
push
push
call
add
add
add
add
movsb
mov
push
in
iret
add
add
test
add
jmp
jmp
in
in
lcall
jle
push
push
lea
push
push
push
call
mov
cwtl
add
icebp
popa
jmp
jno
add
add
popa
xchg
ljmp
push
xchg
out
jle
add
add
cmc
add
add
mov
mov
mov
mov
test
jp
add
mov
add
add
add
jnp
add
sub
pop
mov
push
sub
rol
pop
test
je
mov
push
push
lea
push
lea
push
push
push
call
add
in
add
sarb
subb
pusha
mov
add
xchg
add
add
mov
in
add
gs
pop
add
cmp
jne
push
shl
add
rol
pop
mov
push
lea
xor
sub
inc
pop
test
je
push
lea
push
push
lea
push
push
push
call
mov
nop
pusha
aam
fsubr
add
add
fstl
add
jge
js
add
pop
iret
xlat
leave
in
fs
pop
mov
add
push
push
push
push
lea
push
lea
push
call
add
push
add
add
add
add
nop
mov
rclb
mov
add
loope
fstp
xlat
add
in
xchg
mov
les
add
roll
stos
sub
pop
cmp
je
jmp
push
push
lea
push
lea
push
push
call
add
add
jl
bound
add
jge
xchg
add
add
pop
into
add
mov
add
ljmp
jp
xchg
fadds
faddl
jmp
pop
into
add
lcall
rclb
push
call
in
in
stos
push
rolb
add
movsl
enter
xchg
push
mov
add
in
push
add
add
add
jmp
cld
add
lods
out
add
jl
add
add
jnp
add
jae
add
add
push
loop
add
fldl
subb
in
hlt
pop
pop
push
pop
pop
push
pop
pop
push
xor
pop
pop
leave
push
add
inc
pop
ret
lea
push
push
push
lea
push
push
push
push
lea
push
call
cli
lock
pop
lcall
loop
in
mov
faddp
add
add
jae
add
jns
ja
ret
add
push
add
jae
cli
add
fnsave
jbe
sub
pop
pop
push
push
lea
push
push
push
push
lea
push
call
fstpl
movsb
add
fdivp
xchg
ljmp
test
jle
incb
call
test
imul
pop
add
lcall
push
lea
push
call
stos
mov
add
insb
add
add
jge
pop
jl
jecxz
sub
les
in
jno
add
add
push
data16
add
in
add
in
clc
pop
pop
push
lea
push
call
push
pop
add
mov
push
jmp
outsl
add
mov
add
in
lods
fs
iret
add
in
add
add
xchg
cld
mov
push
arpl
add
add
leave
jb
in
clc
pop
pop
push
push
lea
push
push
push
push
call
cld
mov
add
add
xchg
add
jno
add
add
mov
add
stos
mov
add
add
scas
faddl
mov
int
sub
pop
leave
ret
push
lea
push
push
push
lea
push
push
push
call
leave
xchg
sbb
in
jne
outsl
add
mov
stos
add
add
add
popa
sti
mov
add
mov
add
add
add
add
add
loope
iret
mov
add
into
jp
out
push
cld
push
std
rolb
jno
add
add
scas
add
pop
push
lea
push
lea
push
push
push
push
push
call
add
ljmp
mull
jecxz
roll
popf
add
add
mov
arpl
jns
add
lods
cwtl
mov
add
rorl
add
in
fucom
incb
imul
add
lcall
push
sub
ror
pop
pop
push
push
lea
push
push
push
push
push
push
push
call
addb
mov
call
popl
mov
imull
mov
add
fmul
add
imul
xchg
pop
jbe
out
imul
test
add
repnz
add
add
add
lods
add
mov
lcall
leave
push
rol
ror
pop
ret
xor
cmp
gs
adc
and
adc
push
cmp
dec
xor
adc
jb
adc
cmp
mov
or
popa
xor
leave
mov
pop
dec
xchg
movsl
sub
movsb
dec
dec
lock
cmp
push
movb
mov
inc
pop
or
out
mov
es
sbb
aam
adc
dec
repz
les
mov
ret
mov
mov
pop
shl
and
xor
punpckhwd
sbb
cmp
mov
or
pusha
jmp
sub
movsl
jns
inc
je
lret
push
sti
fadd
incl
fiaddl
icebp
mov
dec
cmp
pop
adc
dec
aam
sub
icebp
fs
fwait
xor
scas
mov
push
out
addr16
lahf
cmp
js
test
sub
jmp
mov
std
stos
movsb
insb
mov
fists
jmp
mov
and
clc
mov
xchg
pop
test
mov
rorl
faddl
fisttpll
aaa
push
mov
mov
jl
lahf
jns
jg
mov
adc
inc
jae
adc
mov
jmp
aam
arpl
mov
aaa
mov
cmp
nop
and
sub
and
in
rolb
in
cld
pop
fistps
mov
pushf
ret
enter
ficoml
adc
sub
mov
pop
insl
jns
mov
and
xchg
sbb
cld
pusha
test
jge
fwait
add
mov
ret
addr16
rorl
jmp
push
inc
int3
dec
loop
inc
cmp
jmp
daa
das
in
mov
cltd
sub
inc
mov
rcrl
push
dec
in
adc
call
repnz
idivl
and
pop
fisttps
popa
sbb
xchg
stos
orb
mov
movsb
int
jmp
mov
addb
pop
xchg
lcall
les
sbb
dec
adc
loope
push
jns
jnp
pop
jb
xchg
sarl
aam
das
and
push
lods
rcrl
icebp
jbe
enter
xchg
test
adc
dec
int3
sbb
inc
push
xor
jb
jle
jne
mov
mov
out
or
push
mov
or
outsb
fistl
add
cmp
aam
jo
sub
inc
pop
or
repz
xlat
bound
lcall
mov
push
sub
rol
xlat
fnsave
sbb
mov
dec
jmp
stos
in
mov
mov
lret
inc
jns
adc
mov
xchg
push
mov
bound
inc
jmp
add
pop
push
stc
xor
loopne
adc
jae
mov
int
out
arpl
sub
jle
cltd
lret
adc
aas
stos
inc
jo
fdivr
addr16
test
pop
mov
sbbl
sbb
shrl
fwait
les
and
inc
aam
dec
jg
jle
les
mov
push
xchg
pop
cwtl
adc
fisubl
sbb
mov
mov
leave
inc
push
and
shlb
mov
push
jbe
cmovno
clc
ret
mov
outsl
shll
sub
mov
lods
into
sbb
jbe
xor
cmp
imul
add
pop
sbbb
outsl
loope
jbe
lods
fdivl
imul
add
cld
mov
enter
cmp
arpl
in
sub
mov
lret
std
cmc
adc
insl
fndisi(8087
cmp
mov
add
imul
clc
pop
sarl
push
and
mov
fadd
cs
enter
ror
fildl
loope
insl
inc
pop
jb
mov
mov
ret
add
cmp
push
int
jecxz
in
xor
add
mov
lcall
cld
xchg
push
movsb
sub
mov
lahf
out
dec
das
repnz
inc
ds
jp
cld
and
inc
sub
js
inc
and
add
shll
sub
cli
je
cli
imull
ror
xchg
jae
ja
sbb
das
repz
outsl
jne
shrl
xchg
lahf
in
or
fnstenv
cmp
xchg
out
movsb
lahf
xlat
xor
and
call
push
shll
push
sbb
xchg
push
inc
mov
lods
addr16
push
push
dec
pushw
mov
pop
lahf
push
or
arpl
lods
push
out
negl
xor
jl
rcl
fsub
xor
mov
add
fisttpl
push
push
mov
dec
dec
xchg
lods
repnz
dec
cmp
and
or
daa
int3
cli
lret
rcll
jo
sbb
scas
inc
and
push
sub
ss
add
jno
loope
adc
mov
icebp
jbe
cmp
sub
mov
sbb
push
sbb
xchg
fmuls
and
pushf
nop
cmp
andb
mov
jno
pop
jbe
inc
mov
lahf
pop
and
popf
mov
hlt
bound
jg
dec
pop
jo,pn
dec
add
js
inc
jns
inc
outsl
sbb
or
cmp
jmp
push
lret
lmsw
mov
roll
cmp
or
cltd
mov
dec
pop
push
sub
loop
adc
gs
push
xchg
mov
test
dec
jmp
sub
xlat
and
cmp
adc
daa
cld
inc
pushf
xor
stos
mov
pop
loope
adc
mov
les
mov
sub
int
xchg
jns
es
imul
sbb
xor
shrb
pop
push
gs
hlt
mov
sbb
xchg
and
dec
mov
out
cmpsl
push
fildll
ret
icebp
mov
pushf
xor
push
push
loop
fstps
jns
test
ret
ljmp
dec
movsl
pop
pop
fcmovnu
add
ffree
xchg
push
pop
mov
rorb
sub
or
mov
sarl
es
mov
mov
push
sbbb
pop
dec
mov
fidivrl
testl
push
push
sbb
clc
inc
mov
xlat
push
xchg
fildl
sbb
add
fs
sub
fidivl
push
fisubrl
js
mov
ret
mov
mov
imul
jle
mov
mov
aad
pop
mov
cli
push
and
rcrl
dec
mov
cmpsl
inc
cmp
dec
inc
movsl
stos
ffree
popf
pop
loop
sbb
jne,pt
adc
jne
xor
mov
push
ret
mov
push
sbb
sub
cmp
push
push
push
xchg
lahf
jp
cmp
mov
xor
cmpsb
lds
aaa
xchg
mov
sub
jge
pop
push
mov
jg
jp
cwtl
test
cmpsl
mov
inc
add
out
cmp
addr16
arpl
push
fs
cs
or
into
push
push
xchg
in
and
scas
mov
loope
call
cmp
mov
and
jae
push
outsb
cmpsb
xor
dec
xchg
outsl
xchg
andb
adc
clc
addr16
push
lret
icebp
icebp
and
sbb
adc
lods
insl
loope
test
in
aad
int3
cmp
lea
mov
push
fs
enter
sbb
pushf
mov
jo
push
pop
cmpl
cmpl
jno
mov
imul
xchg
adc
mov
pop
sub
push
mov
ja
stos
cwtl
xor
cmp
mov
or
cmp
lret
mov
sahf
mov
mov
pushf
imul
push
iret
cmp
loop
sti
push
bound
xor
pop
cmp
movsb
cmp
lret
adc
testl
dec
adc
in
push
push
inc
sbb
inc
popf
push
mov
inc
cs
sahf
fxam
xor
ljmp
jne
ljmp
mov
pushf
mov
inc
sbb
dec
adc
add
hlt
jge
sbb
push
out
adc
mov
and
fsubl
jp
or
cmpsl
sbb
nop
mov
jns
push
push
fcmovbe
outsb
xchg
xchg
push
fistl
lcall
nop
xor
sbb
xchg
xchg
pop
jnp
jns
out
imulb
das
lahf
push
subb
cwtl
ljmp
das
cli
bound
adc
mov
outsb
and
mov
icebp
dec
or
mov
inc
std
cmpsb
and
mov
repz
cmp
dec
ss
add
insb
push
out
popa
lret
lds
adc
xor
push
popa
lret
mov
cmpb
inc
push
adc
jle
ret
dec
or
out
loop
sub
or
cmp
lahf
cltd
inc
mov
lahf
mov
mov
jecxz
outsb
mov
je
xor
test
and
add
push
fisttpll
je
dec
cmp
ficompl
mov
push
inc
push
lds
std
pop
cmp
fs
inc
push
or
test
clc
adc
mov
movsb
push
jb
push
cltd
cmp
inc
and
loope
loope
jecxz
mov
adc
test
jnp
add
jns
inc
add
or
mov
xchg
loop
out
mov
add
in
into
rcll
movb
aad
cmpsl
ljmp
xorb
pop
dec
rclb
cmp
fimuls
fs
pop
jg
pop
ficoms
push
imul
jle
icebp
outsb
sti
addr16
sbb
lock
sarb
xlat
dec
mov
ror
dec
lds
push
cmpl
subl
jb
dec
pop
jne
mov
lret
mov
cld
lods
test
mov
ret
inc
cmc
jg
xchg
sbb
stos
dec
jg
mov
push
mov
dec
mov
aas
add
bound
repnz
mov
repnz
dec
sub
mov
addr16
mov
aaa
xchg
add
sub
gs
xor
push
mov
cmp
push
aas
adc
popf
and
pop
sub
xor
push
in
shll
aas
mov
push
push
jb
loope
popa
mov
sub
lcall
inc
cmp
and
ja
xor
ds
cmp
stc
lds
popf
sub
dec
jmp
rorb
subl
jbe
rorb
pusha
fildll
loopne
fbstp
dec
mulb
sbb
shrb
xchg
pushf
dec
pop
cmp
mov
fs
xchg
les
psrld
fwait
aas
rorl
das
fdivrl
dec
std
xor
jo
push
testb
pop
or
insb
jl
int
aad
mov
rcr
std
or
xchg
inc
pop
fisttpll
out
icebp
mov
sub
xlat
sbb
and
jo
js
cltd
push
xor
leave
scas
sbb
mov
lret
iret
out
fcmovbe
imul
jl
jb
mov
or
lods
leave
pop
inc
daa
sarl
jnp
arpl
shrb
dec
adcb
add
hlt
movb
sarb
imul
add
push
pusha
pop
pusha
sub
push
cmp
jecxz
imul
jb
sub
idivb
scas
jno
nop
mov
add
in
sarb
hlt
lahf
rcrl
out
out
out
loopne
jae
jge
adc
cmp
mov
jae
fsts
bound
xor
pop
mov
aam
ret
jp
cmp
jae
inc
push
sahf
ret
stc
xchg
mov
int
push
push
fwait
aaa
insl
inc
push
mov
test
push
je
inc
xchg
rolb
adc
pop
adc
push
xor
jne
mov
mov
repz
xchg
and
xor
mov
rorl
mov
xor
stos
or
bswap
movsb
xchg
pop
dec
xchg
test
dec
and
test
lods
popf
cmp
aas
bound
inc
jb
cmc
in
clc
jg
clc
repz
xchg
jg
xchg
mov
or
inc
jno
stos
xor
pop
add
mov
add
mov
or
out
sbb
jmp
mov
les
les
xchg
add
cmp
adc
jb
pop
pop
cmp
cmp
dec
mov
in
xor
pusha
xor
add
add
loopne
cmp
cmp
push
in
dec
sbb
push
rcrb
xor
mov
sub
inc
popl
push
inc
pop
inc
mov
cli
jmp
lods
cmc
lret
cmp
xchg
in
push
jne
in
aam
mov
fwait
mov
mov
mov
jle
add
lret
cmp
xchg
insb
pop
bound
and
stos
inc
fwait
in
and
rorb
in
in
add
and
rclb
cmpsb
and
mov
mov
adc
test
push
imul
out
imul
push
mov
xor
adc
pop
cwtl
pop
hlt
cmpl
xchg
les
pop
xor
movhps
dec
sub
roll
and
mov
pop
or
out
xor
pop
sub
adc
daa
gs
add
mov
or
jg
test
mov
lahf
cmp
mov
pop
pop
mov
xchg
jo
cs
repz
mov
dec
and
jo
xchg
dec
bound
cmc
test
push
pop
js
jbe
das
or
sub
fcmove
dec
xor
sub
out
testl
test
mov
and
pop
mov
jecxz
and
sub
aam
das
mov
add
sbbb
mov
scas
jg
inc
ljmp
add
cs
mov
jl
xor
pop
imul
cmp
repnz
rcl
inc
pop
and
in
jne
jg
fnstsw
daa
stc
and
mov
sub
leave
lea
testl
mov
fisttps
orb
xchg
scas
cmp
scas
push
mov
out
push
lea
scas
pop
xchg
ret
xchg
lret
filds
xor
out
push
adc
cli
inc
and
jno
mov
loop
mov
cmpsb
and
mov
cwtl
test
jecxz
jnp
inc
mul
xchg
pop
mov
js
xor
mov
inc
pushf
push
xchg
mov
jne
mov
xchg
pop
add
icebp
das
divb
int
inc
leave
and
nop
pop
dec
pop
gs
inc
adc
cltd
out
sub
loope
mov
mov
sub
lret
jno
xor
and
push
pop
jb
sbb
xlat
mov
cwtl
cs
in
pop
in
sti
sub
rcl
lea
out
push
stc
shl
mov
add
pop
push
fwait
dec
fldt
divl
mov
or
imul
pushf
in
shlb
cmp
sbb
jge
add
jne
add
imul
inc
xchg
push
notb
lcall
imul
pushf
mov
aaa
pop
iret
hlt
sbb
jle
pop
adc
sub
mov
mov
lods
inc
leave
incb
cmp
idivl
int3
aam
mov
dec
xor
push
mov
mov
adc
mov
clc
mov
nop
push
test
xor
jne
jae
mov
aaa
out
sti
ret
add
fldt
sub
js
cmp
cli
add
jl
arpl
rorl
outsb
int3
aad
in
xchg
jnp
movsl
icebp
add
mov
mov
or
call
aad
pop
cmp
push
push
xchg
xchg
xchg
stos
cwtl
pop
call
cs
mov
pop
cmc
add
push
xor
lret
loop
inc
push
adc
push
xchg
xchg
inc
inc
lds
jb
sbb
jno
sub
test
repnz
fwait
lods
lock
mov
dec
sti
cmp
insl
divl
aas
mul
adc
mov
push
leave
mov
xor
add
jmp
jg
cmp
jbe
ss
inc
jne
mov
mov
stos
add
sbb
mov
mov
adc
push
cmp
adc
frstor
int3
gs
pushf
repnz
add
adc
lret
psrad
mov
popa
dec
jmp
inc
test
push
loopne
lods
xor
mov
aas
out
lea
pop
inc
stc
sbb
adc
rcrl
xlat
push
push
out
pop
clc
inc
mov
scas
in
mov
dec
shll
dec
xor
sbb
jle
mov
rolb
jg
lahf
mov
push
and
out
arpl
xchg
shlb
fisttps
test
push
sbb
adcl
or
mov
and
pop
pop
jnp
pop
push
jmp
xor
aas
jl
and
repnz
cltd
pop
stos
andl
mov
add
enter
xlat
in
das
ds
outsl
mov
lret
arpl
jnp
jle
sbb
xor
lret
jae
lahf
popf
cmp
cltd
outsb
dec
push
js
xchg
cs
adc
add
pop
sub
in
cltd
mov
sbbb
sub
xchg
sub
mov
xchg
sbb
xchg
addr16
aad
add
push
jge
sub
add
shll
jbe
jecxz
bound
icebp
mov
mov
xchg
xor
dec
and
and
adc
daa
jecxz
std
movsb
adc
daa
pop
fisubs
decb
subl
js
and
pop
push
mov
fdivl
ds
in
push
fists
cmpsl
fcomps
cltd
pop
push
fildl
fcoms
or
repnz
sbb
xchg
jle
mov
sbbl
adc
sbb
cmp
call
repnz
and
mov
sbb
xchg
bound
cld
fwait
dec
mov
push
mov
jbe
mov
mov
rclb
xchg
add
fmul
lret
imul
push
mov
arpl
cmpsl
inc
inc
dec
imul
mov
cmpsb
movsb
sub
jmp
jle
cmpsb
ret
xor
push
negl
or
sub
icebp
das
int
cmpsw
nop
mov
adc
mov
aam
je
pop
mov
sub
and
pop
adc
subl
push
fnstenv
aas
push
popa
vcvtpd2ps
in
cwtl
lahf
lahf
movsl
and
push
imul
mov
pop
paddw
sti
cvtdq2ps
test
mov
enter
jge
aad
mov
pusha
mov
cmpb
push
jno
int
pushf
sbb
icebp
xor
sbb
fs
push
std
inc
jne
roll
loope
hlt
outsl
aas
fcoml
push
adc
icebp
mov
lret
mov
push
xchg
in
and
dec
fmulp
push
js
cltd
mov
mov
mov
iret
mov
cmp
movsl
cmpsl
push
hlt
mov
jle
dec
mull
pop
pusha
outsl
fnstenv
xchg
and
adc
repz
sbbl
push
sbb
scas
stc
imul
push
in
mov
out
lds
inc
out
jp
aam
pop
sub
ja
dec
adc
popf
fisubrs
jmp
ret
mov
addb
repz
push
insl
and
cmpb
sub
shr
loopne
out
jg
xchg
es
or
mov
aam
sbb
xor
pop
movsl
rcr
xchg
pop
inc
repz
push
bound
push
cwtl
jecxz
dec
cmpsl
or
and
dec
hlt
pop
sbbl
pop
cli
sarl
inc
jge
xchg
pop
add
inc
mov
sub
test
inc
mov
or
std
pop
movsb
push
adc
xchg
inc
or
or
dec
jge
mov
test
push
jns
movsb
push
adc
inc
sbb
sbb
data16
dec
push
filds
ds
mov
pop
mov
cmc
inc
pop
mov
fistl
xor
mov
xchg
mov
inc
shlb
lods
pop
fsubs
dec
mov
sub
rcrl
cmp
fs
scas
fcom
in
pop
dec
clc
jns
int
test
mov
es
mov
cmp
int
inc
or
ljmp
mov
or
lods
iret
ja
mov
ret
xchg
aad
not
xchg
out
mov
jle
incl
or
inc
cmc
inc
push
jne
cmpsl
loopne
test
pusha
movsb
cmp
xor
mov
sub
xor
daa
fnstcw
cld
pop
xchg
xchg
and
or
lea
cmpb
out
inc
or
stc
hlt
das
fwait
scas
push
aaa
lods
cmpsb
ror
mov
mov
dec
mov
pop
dec
pop
or
add
sub
xchg
jp,pn
jae,pn
in
rolb
popf
sbb
jae
sbb
divl
mov
fwait
cmpsl
outsb
mov
mov
cmc
mov
sbb
sbb
aad
fwait
sub
sbb
xchg
xchg
dec
mov
and
pop
test
outsb
enter
negl
pop
mov
adc
inc
std
call
mov
repnz
cli
xor
adc
cltd
movsl
and
push
dec
sbb
adc
scas
push
lods
add
ret
sar
dec
mov
or
xchg
loope
push
cs
lock
loop
dec
sarb
xor
fstps
inc
rclb
mov
movaps
mov
test
leave
int3
mov
xorb
adc
sbb
push
setg
jge
sbb
xchg
outsl
inc
cmp
lret
nop
push
div
xor
and
pop
adc
fidivl
lods
sti
out
leave
lods
scas
gs
aaa
js
mov
xor
cmp
mull
mov
sub
adc
je
or
mov
enter
cmp
dec
inc
sti
rcl
mov
jno
test
arpl
dec
jnp
icebp
dec
mov
fldenv
repz
loope
repz
addl
enter
mov
mov
mov
scas
test
aam
test
pushf
aad
dec
loope
out
mov
clc
inc
push
pop
and
cwtl
lret
repz
ljmp
pop
stos
xor
xchg
push
cli
mov
pop
pop
jns
pop
or
pop
jle,pn
sub
mov
xor
pop
dec
push
repz
addr16
shr
mov
fiadds
int
xchg
fwait
popa
aad
outsl
shll
jbe
jle
jecxz
icebp
xor
aaa
sbb
mov
popw
mov
and
push
rcr
pop
ljmp
push
les
movsb
int
imul
dec
inc
roll
int
mov
pop
sbb
imul
mov
repz
push
es
mov
cmp
out
push
add
test
pop
pop
out
push
outsl
cmp
repnz
sbb
cmpsl
lods
mov
inc
and
es
leave
cvtdq2ps
out
add
or
sub
cmc
xor
push
xchg
adc
idivb
int3
insl
push
sbb
mov
xchg
jmp
int3
iret
lods
shr
mov
cmp
mov
negb
pop
lock
lods
enter
lret
sbb
rolb
xchg
pop
das
ja
push
mov
lea
or
xor
xchg
std
and
fidivrl
sub
not
pop
pop
lcall
in
or
fcoms
in
sub
cmp
pop
pop
les
enter
fwait
dec
xchg
maxps
inc
std
int3
cwtl
pusha
jecxz
or
cmp
add
sub
arpl
or
dec
push
mov
mov
or
inc
cmp
mov
into
pop
loop
cmp
mov
bound
inc
shrb
iret
ret
ljmp
aam
mov
sahf
nop
test
es
shrl
scas
mov
or
imul
stos
outsl
stos
leave
add
xor
mov
inc
add
adc
and
and
int
dec
mov
mov
push
adc
outsb
dec
repz
jb
ds
sbb
cmc
xchg
sar
ret
push
fadd
fwait
mov
test
inc
pushf
push
sbb
nop
xchg
scas
sbb
test
dec
mov
sbb
jne
pop
xchg
xchg
ret
jmp
add
insb
data16
xchg
jle
or
xchg
and
lahf
xchg
pop
or
ret
mov
daa
adc
lret
xor
movsb
sar
mov
mov
jl
ljmp
cmp
add
js
sbb
sbb
stc
jge
out
ljmp
push
dec
je
int3
pop
ljmp
je
or
shll
fsubs
jge
mov
outsb
std
inc
dec
fimull
mov
mov
outsb
enter
sarl
jnp
xor
mov
lea
cmp
pop
sub
pop
adc
inc
lea
xor
je
cmp
pushf
sahf
inc
xor
adc
jp
add
roll
mov
push
push
sarl
shrl
ror
cmp
push
lea
mov
or
sbbb
ljmp
adc
ret
dec
sarl
xchg
leave
insl
out
jecxz
mov
cwtl
into
pop
std
pop
insl
or
add
inc
insb
dec
dec
mov
les
addr16
push
icebp
lret
aaa
push
fstp
ja
pusha
xchg
push
add
jns
push
fldcw
in
arpl
xor
sti
or
int
js
mov
test
xchg
xchg
subl
mov
mov
xor
mov
filds
enter
std
and
pop
shlb
jg
jecxz
jg
adc
xchg
mov
or
inc
dec
fnstcw
adc
insl
cld
push
mov
fisubrl
sbb
pushl
rclb
push
mov
lcall
adc
outsb
mov
lds
xchg
out
mov
mov
loop
cltd
xchg
inc
insb
icebp
jp
cmp
sub
xchg
xor
push
mov
and
mov
sub
loop
xor
jg
scas
push
mov
ss
pop
imul
mov
cwtl
aaa
push
add
dec
arpl
leave
dec
add
mov
mov
mov
mov
mov
mov
sbb
ss
or
mov
push
adc
scas
fsubrs
aaa
jge
js
cltd
fcmovne
gs
addr16
subl
hlt
and
mov
xchg
das
adc
insl
push
mov
xchg
sub
sbb
dec
sbb
push
out
fwait
push
mov
add
test
mov
pop
std
loopne
mov
idivl
mov
xor
mov
mov
movsl
xchg
mov
mov
and
lahf
adc
stc
or
dec
adc
xor
subl
imul
sub
fwait
loopne
xchg
jg
cwtl
clc
addr16
mov
push
fiadds
mov
out
rcll
fmuls
js
mov
sub
jne
rcr
loope
sahf
fcomps
fbld
outsl
aas
ds
rcll
sub
insb
mov
leave
or
jb
cmp
fmuls
jo
adcb
lock
adcl
retw
in
jb
dec
sbb
into
mov
test
ljmp
pusha
pop
lcall
orl
ficoml
xor
pop
dec
es
sbb
xor
shll
push
jno
xchg
mov
inc
xchg
jns
xor
lock
ss
lds
rclb
mov
inc
jne
ret
cmp
lods
lret
cmp
into
inc
add
jmp
and
jl
mov
adc
sarl
ljmp
hlt
inc
xorb
fcompl
inc
int
iret
cmc
push
pop
movsl
repz
cmp
mov
test
rorb
pop
es
mov
jne
pushf
sahf
sbb
adc
and
adc
aad
loop
repnz
std
clc
scas
mov
push
ja
inc
pop
xorb
ljmp
jno
cli
sahf
adc
push
jb
in
adc
int3
sub
je
mov
push
and
cmpsb
mov
aam
imul
ret
test
push
cmp
stc
sbb
mov
mov
ret
nop
mov
es
mov
in
jmp
xchg
mov
cltd
aam
mov
xor
fists
imul
pop
stc
aas
push
test
cld
arpl
enter
mov
outsb
inc
out
jae
jae
sbb
jne
xor
xchg
int3
cmp
xchg
dec
jp
inc
sahf
test
push
int
adc
push
fisubl
out
nop
jb
inc
ficompl
in
mov
jmp
jo
sub
or
in
movsb
xor
sbb
popf
mov
pop
mov
xor
pop
xchg
popf
icebp
push
xchg
xor
aam
sub
movsl
cmp
push
add
cmp
leave
cmp
ja
add
xor
repz
dec
fwait
sbb
aas
repz
ljmp
in
andb
xchg
psllq
add
or
out
fstl
inc
rorb
cs
xlat
fadd
lods
aad
and
imul
cmp
jb
mov
pop
mov
hlt
outsl
or
fdivrs
lds
int
sarl
adcb
jne
dec
sbb
into
pop
and
push
mov
xlat
repnz
lods
xchg
test
scas
xchg
mov
sub
call
pop
dec
fisttpl
adc
js
orb
scas
sub
imul
inc
cmpsb
sub
xor
jbe
push
fildll
aad
add
mov
xor
add
jns
xchg
push
rolb
pusha
jno
ja
and
ret
sub
std
pop
lcall
inc
jbe
push
sub
enter
jbe
cmc
lods
pop
pop
pop
aam
or
add
sbb
orl
leave
jmp
jmp
adc
jle
cwtl
lock
pop
sarl
cmp
xor
mov
push
xchg
sbb
push
mov
out
or
popf
mov
in
aaa
into
jo
pop
push
outsl
xchg
test
test
xor
js
sub
lds
push
mov
aas
push
fimuls
dec
ret
vcomiss
and
adc
push
icebp
fst
test
pusha
sbb
inc
ljmp
sub
lahf
scas
test
cli
jp
and
add
mov
shrl
rcl
jle
lret
mov
push
sub
xchg
dec
sub
and
xchg
and
mov
dec
fildll
and
dec
add
or
es
pop
pushf
lret
loop
ss
xchg
dec
mov
adc
ljmp
inc
inc
dec
mov
xchg
mov
fiadds
push
and
jno
ja
dec
pop
rorl
xor
dec
hlt
push
fst
loope
test
ljmp
adc
lret
bound
lock
adc
test
in
xor
adc
dec
gs
mov
mov
sub
data16
std
outsb
jecxz
movsb
cmp
cmpsl
mov
popfw
test
loop
ljmp
or
sub
out
cld
adc
ss
inc
pop
hlt
push
fnstsw
es
stos
dec
popa
or
sbb
lahf
insl
sbb
sub
lds
rcrl
test
sub
cmp
in
in
mov
add
sub
pop
fadds
pushf
jb
sahf
sarl
jmp
xlat
lods
cmpsb
add
inc
arpl
dec
mov
enter
int
sbbb
add
xchg
mov
add
aad
push
jae
cmp
pusha
sbb
and
je
sahf
pushl
sbb
jae
xchg
push
imulb
dec
cwtl
cmc
add
pause
in
mov
ror
lcall
in
adc
pop
add
rcrl
je
adc
mov
or
xchg
sti
mov
or
lea
ljmp
mov
sbb
mov
decb
mov
add
mov
lret
add
jmp
outsl
mov
cli
sub
popa
cmp
clc
ret
pop
jnp
jae
jg
jl
divb
ret
push
cmp
roll
aas
adc
mov
or
pusha
scas
mov
mov
ja
inc
inc
xchg
fsubrl
pop
es
jmp
fwait
mov
cmp
cmpb
int
pop
xor
push
pop
scas
or
xchg
movsl
jl
jae
movsl
adc
xchg
jne
int3
push
jl
jo
and
jnp
sub
insb
rcrl
ret
push
in
mov
cmp
xchg
xor
aad
add
xlat
aaa
xlat
imul
es
pop
hlt
cmp
sbb
mov
pop
scas
push
xchg
mov
nop
xor
mov
sbb
pop
nop
lret
je
cmpsw
into
andb
fcomip
dec
sub
push
xchg
mov
xchg
push
mov
into
lret
xor
pusha
aaa
adc
add
sub
fstl
enter
imul
cltd
jmp
dec
inc
pop
dec
cmp
lea
movsl
cmp
pop
jcxz
adc
test
leave
and
cmp
and
jge
insl
fists
les
pop
outsb
jbe
imul
mov
insb
fstl
adc
and
dec
out
scas
cmp
dec
push
cmp
movsl
mov
jb
adc
and
or
dec
ret
xor
sub
adc
sbb
gs
mov
repnz
ja
cmp
mov
outsl
xor
je
inc
ss
xchg
dec
xchg
sbb
add
jne
bound
sti
xor
cmp
outsb
dec
pusha
add
loop
lahf
cmpsb
pop
repz
lret
and
adc
push
repnz
xor
xchg
xchg
leave
and
fbstp
mov
test
inc
inc
lcall
mov
test
insb
xor
push
push
into
imul
bound
fwait
cmpb
and
stos
jb
ficomps
loope
lret
mov
xor
xchg
cmp
in
dec
sub
adc
mov
push
lods
pushf
cmpsb
inc
dec
mov
divl
lcall
insl
pop
enter
xchg
pop
imul
add
lea
cmp
mov
sub
jle
roll
fldt
add
cmpsl
pop
sbb
imul
or
movsb
jo
in
fdivr
cmp
fs
ficoml
cwtl
mov
out
xchg
mov
aas
adc
cmpsl
aam
xchg
add
clc
mov
push
enter
mov
mov
inc
push
loop
xchg
jbe
mov
xchg
js
testb
stc
imul
aad
mov
pop
push
movnti
xor
es
xchg
lds
push
leave
cmpps
push
mov
inc
lea
mov
fstpt
shlb
ss
xchg
shrl
leave
adcb
leave
arpl
xchg
repz
inc
jle
pusha
push
inc
leave
adc
xchg
in
sahf
jmp
mov
dec
mov
mov
pop
fptan
sbb
stc
in
adc
mov
mov
and
and
cmpsb
push
out
in
or
adc
repnz
ljmp
push
call
int3
and
ljmp
imul
xchg
stos
xchg
pop
cmpsb
loope
mov
pop
nop
mov
sti
aam
imul
xchg
adc
sti
inc
sbb
das
sub
pop
jg
xor
dec
add
sub
rcrb
add
add
sub
stos
mov
pushf
push
outsl
outsl
pop
imul
mov
cmc
push
inc
or
push
in
push
dec
cmp
sub
or
fisttpll
je
pop
insl
push
rorb
adc
mov
adc
sub
inc
jp
xchg
ret
ds
ret
and
test
stc
add
xlat
jge
xchg
pop
stos
xchg
xchg
fstpt
fnstenv
fcmove
xchg
xchg
and
ret
or
add
movsb
mov
sub
hlt
xor
adcl
pop
cld
xor
pop
insl
mov
mov
pop
lock
pop
negb
movsb
push
push
mov
and
mov
pop
leave
test
into
and
inc
add
xor
les
movsb
std
push
ret
mov
cld
or
push
xor
push
push
xchg
inc
jo
fs
pop
mov
mov
sbb
push
lods
push
cmp
les
mov
jecxz
ret
add
rorl
or
jecxz
mov
das
sub
push
hlt
mov
cld
mov
outsl
jnp
xor
mov
std
add
stos
mov
mov
xlat
xchg
repnz
mov
das
xor
imul
nop
sbb
repnz
sub
push
and
adc
or
aam
out
fwait
clc
mov
out
je
inc
cmp
add
mov
pop
mov
jae
cmp
xor
xchg
aad
xlat
dec
mov
arpl
lock
test
popa
pop
hlt
int3
mov
test
or
mov
fwait
repnz
lret
jno
adc
aad
inc
loope
nop
cmpsb
outsb
lods
mov
popf
dec
pusha
xor
dec
mov
sbb
dec
rclb
jo
push
pushf
pop
filds
sub
xchg
and
outsb
lahf
inc
imul
stos
lds
ret
jge
popf
mov
out
aad
pop
jp
leave
jl
gs
jg
testl
shrl
insb
jns
int
arpl
mov
sub
adc
lods
inc
sub
lea
arpl
in
add
test
mov
aad
nop
sbb
rclb
dec
aad
pop
aam
out
ja
std
jg
or
jb
pop
inc
push
adc
div
movsb
aas
or
pop
xchg
lock
adc
cmp
or
xor
shll
incb
cmp
inc
test
jmp
push
fcmovbe
arpl
lret
add
daa
js
mov
jne
fdivs
xchg
add
mov
scas
jg
jg
rolb
stos
iret
xchg
xchg
push
cwtl
in
mov
rcll
cltd
mov
das
push
sub
out
out
mov
fistpll
shll
sbb
pop
push
ljmp
xor
outsl
xchg
pop
inc
mov
out
movsl
rol
xchg
daa
loopne
test
cmpsb
jl
stc
inc
pop
lahf
push
mov
jno
mov
in
fs
loop
mov
test
ror
cmp
sub
movsl
dec
jbe
cmpsl
jns
adc
hlt
jp
mov
pop
repz
xchg
add
shll
pop
xchg
loopne
mov
lods
jo
sub
stc
adc
popa
push
xor
adc
jno
lods
movsl
cmpb
fdivrs
fnsetpm(287
mov
call
xor
sub
push
dec
in
xor
pop
push
fs
into
lcall
or
loopne
inc
push
cmp
push
call
xor
int3
xor
or
out
cmp
fwait
in
adc
xchg
fstpt
lahf
inc
and
scas
pop
add
fistl
roll
pop
mov
mov
xor
shlb
lret
cmp
xchg
cmp
or
mov
movzbl
xchg
sti
adc
push
jp
iret
jl
fidivl
js
xor
es
xor
ret
sbb
ja
mov
in
inc
stos
mov
ljmp
imul
cmp
mov
pop
lcall
add
idivb
les
mov
jo
fbld
aaa
add
movsb
scas
jecxz
xchg
lods
jbe
mov
xchg
pop
inc
pop
rcr
enter
lret
pushw
popf
and
jno
or
inc
jns
pop
push
and
dec
ja
jne
shl
dec
imull
insl
inc
adc
mov
xchg
insb
call
mov
mov
scas
popf
inc
imul
xchg
xchg
jl
fdivp
xchg
and
push
ljmp
mov
push
add
mov
cmp
movsb
roll
mov
inc
out
or
push
pop
jmp
arpl
mov
mov
jecxz
adc
repnz
xchg
and
jo
lods
arpl
idivl
ficoms
sub
cmp
ss
or
jae
rorb
cld
popa
das
iret
negb
stos
xchg
cmc
jne
sub
in
stc
test
pop
enter
dec
testb
pusha
xorb
in
fdivl
stc
cwtl
xor
jmp
daa
xchg
test
mov
sub
rol
mov
dec
hlt
je
rolb
add
push
and
cmp
jmp
lods
cli
shlb
mov
loopne
outsb
negb
fdivs
ljmp
cmp
cltd
fimuls
dec
cli
add
loope
xchg
and
hlt
or
sub
push
xorb
adc
icebp
sub
pop
mov
adc
mov
cmp
mov
in
pop
int
rcr
mov
outsb
pop
inc
les
fnstsw
stc
jmp
sbb
add
fwait
dec
gs
pop
sbb
mov
adc
inc
popf
jge
sbb
leave
sbb
iret
inc
jno
cmp
dec
cld
adc
nop
bound
enter
cmp
arpl
add
insb
mov
dec
xor
mov
lock
gs
lahf
es
xchg
lods
lea
pop
pop
adc
sti
insl
push
xor
pop
xchg
add
add
inc
idivl
dec
adc
fbld
das
add
pop
int
push
and
mov
push
adc
aad
lahf
adc
pop
push
and
std
sarb
push
mov
shll
cs
mov
loop
xchg
xchg
ja
or
aaa
sbbl
pop
pop
test
lahf
pusha
rcrb
push
ds
cmp
call
stos
xlat
jle
aas
decl
lret
push
dec
lock
mov
pop
stos
lret
adc
rorl
or
ret
jae
dec
dec
add
add
ljmp
push
pop
push
sahf
stos
push
or
pop
mov
addr16
lock
xchg
mov
sub
jge
in
push
clc
sub
jo
outsb
mov
insl
and
xchg
daa
rcl
testb
and
cs
nop
xchg
mov
incb
add
test
xor
neg
mov
cli
jnp
lods
adc
push
loopne
daa
sbbb
clc
mov
or
push
pop
test
lahf
pop
sub
mov
push
lock
xchg
insl
pop
pushf
leave
jb
inc
cmp
movsl
inc
jo
dec
mov
jb
int
push
popa
aaa
popf
cli
add
mov
mov
push
mov
mov
sbb
sarb
into
shrl
cmpsb
mov
mov
pop
mov
ffree
sub
xor
sub
les
popf
adc
arpl
pop
fisttpl
cmp
in
ds
adc
sub
jbe
xor
sbbl
sti
and
cmpsl
adc
mov
mov
jg
adc
jo
js
popf
push
dec
or
jge
sub
mov
fstps
subb
pop
push
stos
inc
mov
lahf
mov
mov
hlt
cmp
mov
mov
stc
js
ret
daa
jecxz
in
ret
pop
in
adc
xchg
ret
call
mov
mov
and
push
push
nop
sub
int
or
mov
js
mov
and
jl
dec
and
xchg
leave
iret
loop
outsb
pop
sub
bswap
ds
mov
es
cmp
insl
push
out
out
rorl
sbb
inc
mov
outsb
xchg
cs
ja
aaa
mov
mov
dec
ljmp
fwait
cmp
sub
je
loop
xchg
cmp
aaa
shrl
repz
sub
mov
pop
leave
push
into
das
push
rcll
pop
sub
add
cs
sub
mov
or
mov
xchg
mov
movsb
sub
pop
sbb
cli
mov
mov
test
mov
sub
int3
cmc
mov
mov
enter
fucomip
cli
mov
lds
mov
fisttpll
sti
test
jbe
jp
add
repz
or
push
das
lds
inc
add
adc
stos
pop
les
mov
pushf
test
lcall
xor
lret
and
jne
jl
lret
sbbl
shrl
jno
out
int
sahf
mov
adc
repz
cld
jmp
outsb
mov
jle
fs
add
enter
mov
cmp
dec
mov
mov
daa
arpl
rcrb
mov
cmp
mov
cmp
dec
mov
outsl
xor
shlb
sarl
sbb
enter
dec
ljmp
mov
rol
pop
mov
pop
ds
ljmp
add
rorl
adc
sahf
and
inc
cmp
test
ret
sub
jnp
aas
sbb
testb
aad
xchg
pop
movl
xor
inc
enter
das
ficoms
xchg
insb
push
test
adc
mov
mov
ss
in
dec
pop
add
adc
push
in
inc
and
cli
mov
push
sub
cmpb
jb
xchg
flds
xchg
dec
adc
dec
cmpb
inc
popa
cmc
xor
xchg
ficompl
or
lods
cmp
inc
xchg
pop
iret
xor
out
cmpsb
dec
ds
adc
cltd
pop
xor
fdivr
jg
dec
and
ljmp
push
sbb
or
fsts
outsl
out
xchg
adc
xchg
mov
jle
mov
loope
hlt
stos
jecxz
mov
jg
sbb
adc
mov
out
sbb
mov
mov
cmp
fs
and
add
pop
fwait
jno
jmp
scas
sub
push
push
xchg
ljmp
icebp
mov
and
ja
movsb
test
imul
lcall
adc
aad
jae
or
cmpsl
aam
shr
sub
test
dec
jge
jp
std
push
call
xor
cmc
sbb
das
aas
push
mov
ficomps
xchg
mov
loope
cld
and
into
mov
push
jp
pop
insb
sub
pushf
aam
ret
sti
std
lea
inc
cs
aas
dec
jp
faddp
mov
xchg
test
ds
daa
popa
sbb
mov
lret
sub
jp
pop
dec
lods
iret
add
rorl
inc
popf
push
and
scas
and
mov
nop
insl
dec
inc
sarb
push
xchg
xchg
or
xchg
mov
lods
in
mov
out
test
sbb
jp
push
sbb
aad
lea
jle
xor
pop
jl
outsl
shlb
pop
sub
nop
sub
mov
addr16
daa
add
sbb
mov
loop
mov
lret
dec
js
mov
mov
cmp
imul
fistps
sbb
pop
jnp
xchg
xchg
push
rcll
sub
test
jge
pop
cmp
loope
cs
fwait
add
sbb
in
mov
pop
push
sbb
cmp
pusha
push
lahf
adc
bound
mov
jae
lcall
dec
inc
sub
cwtl
fdivrl
xchg
roll
jo
sub
orl
flds
fiadds
je
js
sahf
mov
xor
push
iret
pop
push
call
in
push
inc
lds
xor
sub
scas
adc
in
test
sbbb
sub
cld
and
mov
push
jp
pop
lea
adc
cmp
xor
mov
mull
ja
in
xchg
mulb
inc
pop
aas
loopne
sub
cmc
mov
or
dec
ljmp
cmp
or
sbb
fcomps
inc
push
es
mov
lds
sar
xor
out
pop
add
sub
adc
ja
push
es
add
popf
out
push
mov
sub
call
daa
dec
fsubrl
cmp
ljmp
mov
jp
or
gs
mov
and
push
rcll
mov
mov
xchg
cltd
nop
jnp
cwtl
xor
das
and
push
mov
pusha
flds
outsb
stos
incl
xorl
enter
mov
xabort
scas
pop
filds
std
mull
or
mov
lcall
insb
inc
out
aas
inc
mov
xor
mov
push
sbb
mov
popf
lock
popf
jnp
or
mov
add
sbb
mov
mov
and
jecxz
clc
repnz
pop
mov
dec
lret
and
aam
push
js
aam
push
lcall
daa
lds
repnz
sbb
mov
adc
jg
xlat
cmp
sahf
mov
jle
mov
lahf
and
pop
mov
pushf
inc
lds
inc
xor
push
pop
xor
outsb
jg
push
sub
std
mov
adc
push
xor
movsl
jo
mov
sti
ficoml
notl
xor
cli
mov
add
jns
mov
cwtl
shlb
xor
in
push
xchg
dec
addr16
push
mov
mov
mov
mov
lds
and
jbe
dec
cmp
inc
frstor
call
jg
add
xor
xor
sub
push
mov
rcl
dec
xorl
icebp
pop
lock
in
lcall
push
mov
loopne
bound
out
arpl
movsl
out
leave
sbb
xor
xor
mov
cmp
addr16
fs
mov
popf
cmp
xor
clc
dec
ljmp
lret
loopne
sub
xchg
xor
daa
cli
mov
lea
jge
add
imul
mov
push
stos
popf
loop
gs
int3
and
and
ja
inc
dec
cli
data16
aas
cld
loope
mov
stos
pop
push
das
out
sbb
mov
cltd
fistps
pop
cmpsl
sbb
cwtl
mov
pop
aaa
aad
mov
add
xchg
test
popa
js
cmp
pop
mov
push
sbb
out
jp
loop
jg
xchg
sub
cld
pop
or
pop
add
add
and
cs
inc
add
jg
dec
aaa
mov
addr16
stos
inc
push
push
dec
push
scas
mov
mov
clc
outsb
sbb
shll
out
add
xchg
xchg
jp
jecxz
mov
xor
push
std
jg,pt
divb
dec
imul
add
add
int3
dec
imul
iret
sbb
xchg
sarb
out
push
fdivrp
ja
mov
mov
sub
cmp
push
jp
or
repnz
sahf
add
sbb
rcl
fisttps
inc
jo
xor
pop
loop
icebp
shrb
cmp
aad
inc
mov
addb
mov
push
pop
lcall
xchg
imul
dec
jbe
in
cld
rclb
insl
xchg
sbb
push
mov
sub
sbb
add
stos
jne
mov
or
pop
xchg
and
sbb
xchg
inc
pop
mov
pushf
ss
xor
push
jl
xor
jmp
pop
aas
ljmp
rolb
test
add
cmp
imul
dec
cmp
push
orl
push
call
sbb
pop
mov
or
mov
int
push
jge
dec
push
ljmp
imul
aaa
sbb
divb
ret
scas
jp
or
fisubrl
fmulp
push
sub
push
cmp
movsb
cli
push
inc
fxch
negl
mov
dec
jne
cmpl
fs
adc
mov
inc
mov
xor
rorl
xor
outsb
push
lret
pusha
imul
imul
cs
lret
fldcw
jl
scas
imul
mov
cmp
outsl
or
mov
ret
fstpl
mov
pusha
roll
idivl
pop
add
lds
hlt
mov
fisubrl
outsb
xor
pop
sub
int
dec
mov
sub
mov
mov
adc
ror
jne
loop
call
pop
cmpsb
pop
xor
pushf
test
sahf
mov
dec
ds
push
add
xchg
cmp
dec
nop
mov
xchg
inc
aad
lock
jb
loop
cmc
icebp
xor
push
test
add
push
shl
aas
adc
pop
aas
xorl
and
aad
imul
cmp
popf
mov
adc
in
mov
test
dec
lcall
stos
mov
xchg
popf
xchg
pop
dec
jno
pop
sbb
mov
lahf
push
add
pop
scas
pop
addr16
cmp
pop
nop
jecxz
pop
mov
push
add
lret
pushf
jae
out
mov
push
mov
aas
icebp
push
mov
cwtl
sbb
ja
sbb
cmpsb
or
push
xchg
rclb
push
repnz
fwait
stos
mov
jmp
lret
sub
add
dec
adc
xchg
push
sub
rorl
pop
sub
movsl
xchg
shrb
pushf
scas
cmpsl
cmp
mov
cmp
lret
fbstp
xor
and
mov
addr16
insl
push
jecxz
pop
arpl
inc
push
sbb
clc
aad
mov
and
mov
negb
cmp
nop
les
sarl
pop
out
jnp
test
mov
mov
inc
adc
xchg
daa
push
into
sahf
ds
mov
jl
push
testl
sti
ss
and
aam
divl
cmp
mov
ds
leave
test
xor
addb
je
nop
jns
xchg
xor
inc
enter
repnz
inc
xor
outsb
fnstsw
add
jbe
dec
inc
adc
jae
push
or
int3
rolb
movsb
aas
je
fildl
fcmove
mov
test
ret
popa
xchg
cmp
mov
adc
add
jl
fmuls
imul
and
shrb
or
ret
arpl
xchg
sub
jb
mov
jns
enter
xchg
mov
icebp
jp
cmp
pop
mov
psubusw
fstl
mov
ja
movsb
ds
bound
loop
jmp
xor
cmp
jae
stos
es
sbb
into
xchg
adcb
push
inc
fidivs
daa
sub
aas
xchg
sarb
test
call
xor
leave
adcb
notl
cmp
and
fmuls
out
insl
ja
sub
stc
inc
ja
cmpsl
sub
loope
jmp
push
add
les
ret
pop
das
and
mov
mov
xor
lret
aas
ljmp
jne
fsubrs
xor
inc
adc
outsb
in
pop
cs
or
or
cmp
jbe
inc
ljmp
enter
popa
lea
icebp
push
inc
mov
inc
sbb
subb
mov
mov
or
leave
jb
mul
insb
pushf
loope
call
mov
es
cmp
mov
sbb
scas
rolb
and
lret
movsl
cs
test
arpl
add
or
pop
arpl
mov
lret
mov
enter
leave
and
mov
jg
pop
push
sub
pop
inc
xlat
clc
jmp
mov
add
gs
push
and
adc
xchg
pop
push
sub
clc
loopne
jmp
xchg
iret
jns
pop
mov
and
fldenv
push
js
pop
pop
sbb
sub
sbb
inc
movsl
jne,pn
jmp
jb
mov
push
add
fistpl
loopne
push
xchg
rcrl
aad
jns
mov
cs
xchg
imul
in
sub
xor
adcl
cmpsl
andb
pop
scas
fwait
jge
mov
add
push
fwait
push
shl
push
movsl
sbb
adc
test
jo
cmp
jp
mov
cwtl
arpl
inc
xlat
add
nop
test
add
or
stos
xlat
aas
xlat
outsl
dec
xchg
pop
in
lea
xchg
hlt
dec
inc
rclb
pop
icebp
lods
xchg
aas
mov
loop
movsl
mov
push
sbb
jae
es
sbb
ljmp
pop
mov
mov
push
inc
xchg
clc
stos
call
je
xor
add
pop
cmpsl
mov
jge
mov
fmulp
outsl
dec
popa
mov
jns
sbb
cmp
fs
push
int
jns
fs
adc
and
cmp
jmp
sbb
imul
pop
cmp
add
stc
cmc
xor
xor
fs
pop
mov
dec
adc
fdivs
jae
popa
in
je
leave
mov
or
insb
fldt
fcoml
sub
dec
adc
sbb
test
fldenv
cmp
sahf
ljmp
pop
dec
and
aaa
shlb
and
jle
pop
mov
and
xchg
in
jae
popf
inc
push
and
sbb
mov
or
jmp
adc
je
dec
mov
fwait
sbb
fidivrl
pop
dec
loop
mov
or
imul
push
movsl
movsl
xchg
movsb
pop
xor
or
xor
and
out
sbb
dec
push
call
add
mov
testb
subl
mov
add
inc
adc
inc
inc
aam
or
call
stmxcsr
and
mov
fisubs
int3
sbbb
es
cmp
pop
out
sub
test
imul
ja
clc
cmc
mov
sbb
sub
idivb
mov
sub
pop
lcall
aas
lock
or
repz
test
sarb
das
pop
mov
mov
lods
dec
fsubl
ret
xor
lret
je
aaa
out
pop
ret
mov
imul
sub
test
lahf
sahf
push
fidivrl
ds
js
xorl
rolb
aad
xor
enter
testl
dec
inc
mov
outsb
dec
aad
hlt
lcall
mov
sbb
or
and
mov
jmp
jg
push
jno
xorb
mov
lods
gs
dec
hlt
scas
mov
pop
rolb
stos
add
clc
ds
gs
fldenv
imul
lret
add
adc
jo
std
frstpm(287
orl
loop
hlt
cmp
sbb
enter
push
hlt
and
cmpsb
in
sub
jnp
js
shll
divb
jge
sbbb
push
addr16
fistpl
sbb
dec
lock
cld
jns
inc
jmp
pop
sbb
inc
mov
imull
xchg
mov
cmp
popf
xor
loope
adc
arpl
dec
ret
pop
andl
jge
and
add
call
adcl
rolb
adc
shlb
jb
inc
les
cmp
cli
jmp
sub
daa
cmp
call
cmp
ret
adc
stos
cmp
les
popa
xor
push
adcb
sbb
ss
mov
hlt
xor
sbb
xchg
icebp
jmp
enter
adc
rcll
addr16
loope
xor
mov
mov
push
das
xor
and
cmp
dec
and
int
cmpsb
jmp
push
mov
jbe
dec
mov
jne
adc
imul
clc
aam
insb
sarl
mov
jns
lahf
sub
mov
shl
cmc
mov
iret
sbb
push
fmul
inc
xlat
fcoml
jmp
imul
imul
ds
pop
pop
in
lahf
lea
repz
ljmp
xor
jge
fs
sarl
sbb
out
cli
push
sti
xchg
cmpsl
jae
stos
mov
clc
test
lock
sub
sarb
stos
xlat
dec
minps
jp
and
cmp
pop
in
mov
ljmp
lds
mov
pop
insl
out
add
int3
cmpsl
ja
lahf
decb
popl
int
loop
or
mov
mov
fsubrs
jne
or
pop
add
fwait
lock
jnp
xchg
pop
ret
and
in
and
push
test
test
mov
popa
pop
xor
in
andl
in
dec
out
mov
mov
push
xor
and
add
mov
mov
fwait
imul
out
shl
in
or
pop
push
dec
dec
mov
cmp
addr16
or
in
sub
sbb
jns
lcall
cltd
mov
add
dec
rol
leave
shlb
mov
shll
push
mov
mov
mov
xchg
lods
out
mov
add
add
sahf
and
cwtl
and
add
bound
nop
mov
pop
sub
mov
pop
cmp
dec
lahf
js
or
out
sbb
je
push
mov
cltd
imul
push
insb
aas
fucomp
rorl
jnp
mov
sub
jle
xor
jns
test
scas
pop
clc
and
scas
movsb
push
and
in
pop
fwait
and
xchg
mov
xchg
adc
inc
ss
cs
call
sub
dec
jbe
push
mov
jne
sub
ret
imulb
lds
lcall
shrl
shrb
aam
and
mov
and
mov
mov
adc
insb
xor
repnz
xor
aad
cli
jne
sub
js
xchg
jg
sub
fdivl
addr16
push
or
mov
movsl
dec
shlb
dec
inc
test
sub
and
sub
jg
mov
and
xor
daa
scas
notl
ret
into
push
outsb
test
fsubr
outsb
push
mov
mov
sbb
xor
in
pop
dec
aam
stc
out
ja
aam
fs
inc
dec
andb
inc
cmpsb
pop
adc
sbb
std
cs
cs
leave
jg
lret
add
add
addr16
pop
cs
loop
out
ljmp
or
cltd
insb
fdivrs
stc
sub
test
sahf
dec
aam
ljmp
out
cmp
decl
insl
add
sbb
cs
addl
push
test
or
jns
pop
sbb
push
mov
and
test
ficomps
mov
mov
xchg
xchg
mov
mov
test
imul
push
leave
cmp
xchg
clc
sub
shrb
rcll
nop
fcoms
pop
rcrb
fldln2
xor
shll
lcall
xor
cmpsl
clc
adc
xchg
xor
xchg
xor
mov
sub
call
insl
adc
pushf
dec
inc
adc
fsubl
xor
out
dec
cmp
pop
jg
sahf
adc
inc
mov
cs
fdivrl
and
lods
mov
xlat
mov
mov
mov
jbe
ljmp
mov
jbe
mov
rclb
pop
mov
test
pop
push
pop
pop
sbb
inc
sahf
std
fldcw
sarl
into
decb
push
jo
xor
in
daa
data16
stc
pop
push
es
cmovbe
push
icebp
dec
ss
sbb
jecxz
xor
in
dec
xorl
adc
pop
insb
shrl
movsl
mov
or
mov
sahf
pop
dec
testl
outsb
jne
sub
pop
imul
repz
jno
repnz
push
pop
mov
dec
dec
inc
shll
mov
add
rcrl
lds
jmp
pop
mov
mov
mov
sub
aaa
mov
mov
push
xchg
imul
adc
sbb
inc
iret
sub
push
or
out
mov
mov
aam
jae
xlat
dec
in
lahf
ljmp
jne
mov
cltd
out
subb
and
packsswb
bswap
int3
xchg
jle
daa
enter
out
xchg
test
pop
xchg
int
add
and
xchg
xor
dec
aas
jecxz
insl
dec
push
sub
ljmp
out
push
repnz
xor
faddp
cltd
cld
or
or
pop
pop
add
and
imull
dec
cld
and
outsl
sub
cld
jp
sahf
pop
add
dec
push
cmp
or
nop
mov
jbe
sbb
jne
aas
add
push
lahf
js
pop
sbb
out
sti
call
out
lcall
in
ret
loopne
mov
cmp
add
sub
adc
fnsave
xchg
mov
fcmovnu
xorb
sbb
cmp
out
icebp
pop
test
or
pop
cmp
sub
out
pop
cli
lods
insl
lock
and
adc
clc
iret
adc
mulb
std
pop
inc
lods
sub
and
mov
mov
cmp
jmp
loopne
and
and
ds
mov
in
push
pop
push
xchg
cmp
sbb
test
lcall
xchg
add
enter
movsb
in
notl
hlt
fadds
aaa
sub
jb
jno
roll
std
fistpll
sub
pop
loopne
into
dec
fldenv
out
mul
filds
inc
xchg
loop
clc
lret
int3
push
roll
jg
fiadds
outsb
lahf
std
jae
rcrl
clc
cmp
mov
repz
repz
sbb
jne
insb
mov
out
test
add
dec
mov
sahf
sub
adc
cltd
xchg
scas
pop
add
mov
xor
fistpll
lds
ljmp
xor
nop
lahf
pop
sub
xorl
mov
inc
in
sbb
adc
testb
fistl
fsub
push
dec
in
test
add
stos
fistpl
test
cs
pop
stc
jge
xor
cli
mov
and
daa
mov
jo
pop
cmp
push
imul
mov
frstor
daa
addl
aam
ja
jmp
in
dec
insl
cmp
cwtl
lret
cmpsb
and
test
nop
push
add
insb
sahf
cmp
add
cmp
hlt
push
adc
leave
loope
std
and
mov
scas
pop
nop
imul
mov
stos
mov
mov
push
sarb
stos
jmp
push
mov
in
xchg
push
inc
icebp
xchg
imul
sub
test
or
jne
xchg
push
sbb
enter
dec
xchg
jno
daa
pop
lea
xor
pop
clc
jo
inc
dec
mov
adc
jbe
adc
enter
aam
cmp
sub
subl
jecxz
cltd
jecxz
ja
daa
push
ret
es
dec
test
data16
je
std
xchg
fiaddl
imul
sub
ljmp
jne
aad
push
adc
popa
xchg
lods
mov
push
fdivl
add
inc
adc
imul
inc
or
push
jg
aas
adc
mov
mov
and
int
pop
inc
sbb
dec
sbb
and
sbb
outsl
dec
in
jp
je
xchg
lods
sbb
sbb
outsl
or
xchg
jmp
xchg
xor
jbe
sbbl
lods
jbe
pop
addr16
popa
xchg
sarb
mov
xor
mov
shr
mov
stc
jmp
ds
mov
cmp
dec
mov
call
and
mov
mov
push
adc
test
mov
push
and
xchg
cmp
insb
pop
insb
cs
adc
scas
pop
aam
mov
push
out
push
push
cmpsl
int3
not
dec
dec
in
or
xchg
and
xchg
das
aad
mov
pop
icebp
push
clc
es
imul
xchg
mov
dec
add
mov
cmp
mov
pop
jo
xor
ljmp
imul
or
jbe
lods
cltd
scas
pop
repnz
test
mov
enter
pop
mov
jno
testl
aam
sbb
stos
mov
xchg
cmp
mov
lods
in
pminub
rorl
in
inc
call
in
pop
push
stc
or
insl
or
fwait
popa
cld
fisttpl
push
lahf
lea
cwtl
test
fstpl
mov
aas
xor
inc
roll
sbb
sub
cmp
xchg
fists
popa
imul
push
aas
jnp
call
movsb
lcall
outsb
icebp
inc
hlt
fs
fcomp
cwtl
dec
mov
das
out
ljmp
out
pop
div
test
arpl
mov
fcmovnb
pop
stos
out
fnsave
pop
mov
bound
dec
imul
or
loopne
mov
in
inc
add
mov
jp
mul
lock
lock
mov
shr
xor
dec
adc
adc
push
popf
xchg
das
int3
jg
xor
fistl
les
test
das
or
sahf
jle
xor
cmp
lahf
sbb
adc
ds
fisubrl
out
arpl
sub
iret
pushf
mov
mov
xor
push
mov
negl
cltd
xor
test
das
xchg
xchg
cmpsb
pop
popf
imul
push
jnp
lcall
pusha
bound
cld
pop
insl
sbb
push
adc
ret
and
mov
dec
sbb
int3
lds
mov
notl
dec
stos
adc
cmpsl
int3
inc
jg
mov
lahf
xor
lret
rorb
sbb
pop
mov
lods
or
ss
dec
sbb
stc
hlt
bound
mov
enter
mov
adc
dec
dec
fmulp
inc
int3
ficompl
mov
add
xchg
cli
add
inc
aaa
rcrl
int3
push
test
pop
aam
idivb
rclb
jle
jmp
push
pop
cmp
xlat
ficompl
and
roll
push
ret
jo
add
incb
xlat
push
or
lock
mov
outsb
lcall
jecxz
push
jp
jbe
out
inc
ficomps
or
pop
pop
data16
scas
jae
add
xchg
sub
mov
popf
sub
inc
or
dec
jns
xchg
dec
repz
cmp
cmp
test
inc
xchg
divb
adc
loop
cli
push
jo
int3
xor
jmp
lcall
int
rcll
daa
jnp
repz
pop
add
xor
mov
add
add
int
mov
mov
adc
mov
pop
out
or
xchg
mov
jbe
cmpsl
jge
imul
popa
cmp
sub
push
xchg
cs
into
xchg
xchg
ret
lcall
pop
mov
push
jbe
adc
mov
pop
pop
inc
inc
ja
jns
pop
mov
push
jae
add
jb
jge
pop
xor
hlt
scas
outsb
das
jae
in
fdivs
call
and
popl
les
stc
ds
js
jg
xorl
popa
test
mov
imul
xchg
inc
aad
dec
jae
clc
addr16
popf
xor
hlt
jg
mov
push
in
in
mov
out
aad
aaa
pop
inc
xchg
cmp
mov
notb
push
sub
xorl
sbb
mov
sub
hlt
xchg
fiaddl
mov
and
dec
pop
xorb
mov
and
loop
outsl
fildl
and
ja
iret
fcmovu
test
test
leave
xchg
mov
sbb
cmp
mov
test
rep
mov
mov
pushf
and
out
pop
out
scas
xorl
pushf
jp
data16
rcl
xchg
pop
faddl
stos
hlt
xchg
pandn
arpl
mov
cwtl
add
inc
mov
push
cli
dec
pop
mov
and
dec
repz
fistpll
imulb
loop
clc
repz
iret
sub
or
sbb
jno
insl
xor
aas
fists
test
push
loop
mov
leave
add
das
mov
dec
push
leave
mov
fnsave
add
call
xchg
or
mov
or
jae
adc
add
mov
out
in
loope
outsl
pop
dec
dec
mov
sbb
inc
mov
hlt
adc
scas
mov
mov
pop
in
mov
lea
icebp
lods
mov
cmp
test
icebp
dec
nop
inc
in
inc
test
clc
sbbb
jp
adc
add
push
fidivl
fwait
xchg
stos
inc
sbb
push
push
shl
shll
mov
fwait
loopne
and
orb
xor
xchg
js
sahf
xchg
aam
popw
xor
mov
rcrl
mov
addr16
inc
sbb
cmp
sahf
sbb
in
or
push
popf
insl
lcall
or
scas
dec
gs
test
pop
xor
sahf
clc
add
mov
xor
adc
and
clc
mov
cmpsb
and
mov
pusha
mov
sti
sbb
insb
ja
fwait
int
pop
sbb
adc
xchg
test
out
cmova
cwtl
sbb
iret
sbb
dec
inc
push
add
popf
in
repnz
mov
pop
xor
mov
jb
jl
dec
cltd
cmpsb
and
xorl
jns
and
and
jmp
add
and
fstpl
out
jne
jmp
insb
aaa
in
inc
add
dec
enter
outsb
mov
stos
cmp
in
push
lods
sub
mov
lcall
outsl
inc
adc
xor
pop
pop
aad
jno
pop
aaa
ret
data16
xchg
and
lahf
sbb
ss
in
aas
jns
dec
lea
and
cmp
insl
add
sbb
or
mov
repnz
adcl
adc
mov
push
stos
cmpb
rorl
rorb
sub
pushf
mov
dec
lds
shr
pop
mov
add
lock
jo
sbb
and
jecxz
jl
es
mov
push
or
mov
sub
popf
stos
fs
ret
mov
cld
insl
dec
jo
popf
test
es
dec
mov
or
cmc
aad
mov
add
mov
inc
scas
outsb
mov
incb
rcr
test
sub
rclb
insb
out
and
jl
mov
mov
sti
ret
iret
xor
mov
out
repz
lods
cmp
negb
mov
dec
dec
add
loop
push
aam
fcomp
dec
jb
sbb
fidivs
xor
mov
js
cmp
mov
push
push
and
push
cmp
das
xchg
scas
push
and
mov
arpl
mov
into
stos
and
test
xchg
jl
popf
fstpt
shlb
push
xor
push
sahf
inc
push
sub
iret
push
sti
sbb
fwait
mov
out
jg
mov
fsubrs
in
js
rcl
sbb
shl
lods
push
fisttpll
hlt
je
mov
xchg
jmp
clc
rep
cltd
and
in
aas
movsb
dec
dec
daa
adc
scas
ret
mov
arpl
cmp
adc
nop
arpl
sub
mov
ret
push
push
xchg
jle
loop
push
cld
mov
pusha
lds
push
and
add
push
div
clc
mov
shl
sub
aas
ret
sbb
aas
inc
out
std
mov
mov
shlb
bound
mov
pop
les
pop
jp
lret
mov
push
insb
adc
loop
xor
sbb
cmp
sbb
dec
das
push
sarb
add
aad
sub
push
xchg
shl
adc
inc
xchg
xor
std
add
je
and
loop
push
adc
outsb
stc
adc
dec
fimuls
fs
sbb
cs
pop
mov
clc
rcrl
mov
imul
iret
or
pusha
mov
fdivrl
repz
pop
cmp
jbe
data16
sub
dec
lods
push
or
pop
cmpsb
pop
push
xlat
dec
fldl
fcomps
pusha
repnz
sarl
scas
fcompl
jmp
jl
aad
js,pt
pop
loopne
pop
jne
xlat
xchg
and
ret
popf
mov
xchg
cwtl
and
gs
xchg
inc
nop
inc
dec
pop
sbb
cli
aaa
fs
mov
pop
repz
ljmp
xchg
imul
dec
hlt
mov
cwtl
jle
fsubrs
mov
jmp
decb
mov
sub
adc
lcall
fdivs
mov
mov
dec
add
dec
nop
add
into
dec
sub
out
pop
sbb
in
inc
leave
xlat
inc
jp
xor
xchg
insl
and
jbe
sbb
js
mov
pop
push
sarl
mov
adcl
mov
int
cmp
fsubrp
int3
inc
popa
mov
idiv
popa
push
movsb
mov
mov
mov
pushl
mov
nop
xor
outsb
stos
aad
mov
or
stos
subl
and
jecxz
sub
ret
sti
push
pop
mov
inc
ret
or
xor
cld
and
push
mov
gs
jl
insl
xor
jo
lahf
mov
fimuls
or
push
jo
push
cltd
xchg
adc
sti
inc
jp
ret
jge
lcall
lea
ljmp
inc
ds
shlb
repz
sub
aam
mov
rorb
mov
lods
xchg
sub
xor
pop
sub
xor
das
jecxz
sbb
sbb
cmpsl
inc
aaa
sbb
jns
xor
aaa
mov
or
xlat
ficompl
xor
insb
cmp
inc
or
data16
push
pop
adc
xlat
std
mov
dec
mov
add
int
xchg
pop
inc
sub
std
and
cmovge
mov
xchg
pop
jp
mov
fisubs
sbb
jmp
mov
rolb
arpl
std
inc
testl
mov
lahf
insb
jae
mov
fs
out
imul
lock
xchg
mov
jnp
fdivl
ja
jae
ljmp
mov
xor
pop
or
shld
stos
mov
call
addr16
or
and
pop
addl
mov
xor
repnz
cli
pop
mov
filds
sub
movsl
push
push
pop
push
mov
repnz
inc
mov
cs
sti
cltd
xchg
sbb
addr16
jns
test
out
push
daa
fidivrs
jo
jl
out
shlb
xchg
jnp
jns
out
stos
cltd
sbb
cmpsl
pop
xlat
popf
and
dec
and
pop
push
outsl
fdivr
arpl
dec
lock
jle
dec
xlat
cmp
pop
lods
jle
add
std
xor
dec
mov
sub
fisttpll
jns
mov
outsb
leavew
mov
fucomi
pop
push
imull
adc
subb
imul
mov
hlt
dec
sbb
jns
test
jne
xor
mov
icebp
nop
stc
rcl
xchg
mov
lret
into
mov
mov
ja
icebp
bound
pop
cltd
popf
sub
push
in
xor
sub
pop
push
jg
jns
adc
nop
mov
mov
adc
cmp
jmp
cmp
addb
repnz
or
sarb
sbb
out
cmp
pop
xor
push
sub
sub
es
mov
sub
sbb
push
xchg
xchg
clc
push
xor
xchg
mov
push
adc
jmp
and
push
sub
add
xor
inc
add
push
inc
mov
cmp
imul
add
jmp
and
jle
in
in
sub
jb
xlat
shl
fnstsw
push
adc
pop
push
sbb
xor
xchg
push
xchg
sub
xchg
xchg
xor
int3
imul
sbb
iret
adc
es
lds
gs
pusha
xorb
sub
push
mov
push
adc
jg
in
mov
xchg
mov
aas
or
mov
push
into
call
dec
push
rcrl
notb
js
push
icebp
ret
inc
sub
in
cmp
cmp
mov
test
and
dec
jbe
cmp
jle
and
sbb
add
xlat
xor
pop
cli
pop
mov
daa
sub
loope
sbb
dec
aam
out
test
mov
je
sub
test
lcall
cwtl
inc
or
xchg
stos
dec
fcomp
jg
imul
pop
mov
adc
loop
push
sbb
mov
lret
insb
push
inc
cmc
das
in
fwait
hlt
add
cmp
xor
adc
sarl
and
inc
jb
mull
icebp
push
shlb
std
xchg
cmc
dec
pop
jge,pt
cmp
test
in
pop
mov
and
insl
sub
jg
pop
insl
cmp
and
jno
cmp
iret
cmp
xor
fcmovu
movzbl
pop
mov
adcb
ja
push
xor
add
cltd
in
and
sbb
lcall
jo
ret
int3
push
addr16
mov
scas
mov
adc
inc
cmc
sub
and
sar
nop
jge
inc
sbb
push
outsl
fwait
and
add
das
add
ffreep
add
sub
aaa
push
xor
inc
and
push
sbb
scas
insl
or
adc
daa
mov
testb
sub
sbb
icebp
out
jne
cmp
jmp
mov
aam
jge
ret
and
push
iret
cld
leave
pusha
push
sub
lret
scas
sub
lret
push
cli
scas
shrl
fildl
lcall
dec
mov
adcl
aas
addr16
xor
pop
int
aad
loope
and
sbb
jge
lods
dec
pop
ret
jbe
jno
or
addl
out
adc
and
hlt
bound
repz
cmp
stos
movsb
inc
cmp
mov
scas
cmp
inc
jp
dec
xor
xlat
xchg
out
inc
dec
sbb
scas
into
out
inc
insl
ljmp
mov
push
in
out
sbb
sbb
add
stos
sbb
cmp
dec
popf
repz
cmp
mov
mull
gs
cmp
xchg
repz
dec
and
dec
nop
and
pop
ret
jnp
fimuls
and
nop
dec
sub
lret
mov
shll
rcr
jg
inc
or
adc
push
shll
mov
mov
mov
sbb
out
jge
imul
xchg
mov
addr16
lahf
ljmp
xor
fwait
push
test
sub
mov
cmc
mov
pop
inc
push
jmp
jne
fidivrs
sahf
or
or
call
rorb
adc
cwtl
inc
jl
mov
push
mov
insl
pusha
mov
xchg
xchg
mov
mov
loop
cwtl
jmp
cld
das
ficompl
clc
xchg
sahf
and
jg
sbb
cmpsl
pop
insl
cmp
fs
sub
je
pushf
adc
lock
mov
push
or
cld
pop
xlat
push
add
popf
adc
jno
pop
test
loop
mov
ja
mov
push
cmpsl
pop
pop
rcr
mov
cwtl
pop
rorb
call
je
mov
xor
fcoms
xchg
sub
jb
xchg
mov
inc
mov
sub
push
dec
xor
gs
loope
test
insb
cmp
xchg
mov
jecxz
dec
stc
sub
out
or
inc
stos
push
inc
leave
inc
mov
pop
aas
lahf
movsl
je
add
loopne
fcomps
lock
stos
push
testl
cld
push
cmpsl
ret
addr16
and
and
push
lds
ret
mov
mov
and
scas
jl
test
jne
xor
push
ds
jo
xchg
cmp
jnp
lret
mov
std
mov
lret
fistpl
xchg
cmc
mov
push
mov
rclb
je
or
rcrb
ret
lock
or
mov
or
and
push
push
pop
xchg
mov
insl
mov
shr
sbb
sarb
pop
rclb
ljmp
mov
in
pop
adc
in
imul
xor
cmpsb
push
jbe
dec
leave
bound
inc
and
cltd
sti
leave
cmp
cmc
jmp
cmpb
andl
push
mov
sarl
jb
mov
push
pop
mov
lret
sti
mov
je
adc
push
sub
rorl
movsb
loope
jae
xchg
and
inc
push
lea
add
mov
fsubr
xor
and
sub
cmp
or
nop
cmp
out
xor
lret
test
insl
cmp
arpl
pop
jnp
push
jg
inc
mov
and
adc
mov
xor
fcoml
pop
dec
cmp
je
sbb
iret
push
lods
pop
pop
nop
int3
cmpsl
aam
pop
loopne
ficompl
push
cmp
lods
scas
outsl
fs
cwtl
mov
pop
int3
das
mov
cmpb
out
mov
and
jg
bound
bound
inc
scas
test
jmp
stos
cmpsb
jle
loop
add
aad
or
insl
mov
fwait
sub
lock
push
mov
jmp
lahf
push
jb
fucomp
stos
andl
popa
mov
lret
aam
mov
adc
push
cmpsl
mov
sub
mov
mov
add
addl
add
je
pop
stos
sub
push
stos
push
mov
inc
pop
adc
jle
xor
sub
or
enter
pop
cwtl
mov
fcomp
idivl
stos
add
or
sbbb
icebp
xor
ljmp
movl
push
xor
push
add
out
nop
ss
scas
test
lret
ss
xorl
push
dec
xchg
mov
pop
adc
inc
add
or
push
cmc
imul
adc
push
sub
mov
imull
sub
gs
mov
sbb
push
mov
lret
dec
pop
lods
cs
mov
mov
cmpsl
cmp
and
xchg
js
jae
out
xor
dec
in
cs
aam
orl
ds
xchg
in
pop
sub
orl
pop
iret
stc
sbb
xchg
or
fs
pop
cmp
rorl
rorl
adc
xchg
test
mov
in
mov
or
dec
repz
sbb
mov
fs
insl
mov
sub
pop
fistpl
pushf
sub
sbbl
cmp
jae
sbb
push
cmp
mov
xor
mov
aam
lods
push
imul
insl
push
push
stos
push
add
ljmp
int3
add
std
popl
popa
and
cmp
enter
inc
push
punpckhwd
jle
out
or
mov
mov
jle
iret
add
gs
mov
xchg
dec
mov
cmp
je
out
jnp
cld
insb
clc
mov
jmp
lock
push
mov
stos
movl
pop
leave
push
stos
clc
xchg
icebp
sahf
push
sarl
xchg
dec
xor
fwait
push
inc
inc
fisttps
dec
mov
mov
repz
sbb
dec
cmpsb
fwait
loope
jae
std
mov
movb
and
jmp
ret
lret
ret
test
iret
addl
jne
ljmp
fldl
out
push
cmpsb
fldenv
sbb
mov
ljmp
movsl
sbb
jge
xchg
outsb
adc
adc
sub
sar
pop
pop
dec
das
pushf
sbb
inc
mov
xchg
leave
dec
push
test
sbb
pmulhw
cwtl
lret
cli
pop
sub
xchg
cmpb
loop
adc
xor
add
jle
mov
sbb
ficoms
lea
jmp
ja
jmp
pop
mov
mov
fldcw
mov
adcb
les
fisubrs
xor
add
aad
out
mov
repz
data16
dec
rolb
dec
or
out
int3
pop
outsl
ss
je
xchg
cmp
pop
lahf
shlb
jbe
push
xchg
or
sbb
mov
dec
bound
xlat
mov
pop
jne
xchg
sbb
lea
add
in
sti
xchg
test
cld
cltd
addl
dec
hlt
jae
insl
js
ja
push
in
aaa
push
xchg
sub
loop
mov
lds
dec
hlt
fnstenv
and
push
jg
fildl
xchg
stos
xor
or
in
jmp
dec
mov
cwtl
mov
and
daa
pop
and
or
mov
stc
mov
cmc
pop
or
mov
mov
cmp
jnp
jmp
in
out
mov
mov
inc
pop
sbb
stos
rcrl
in
dec
in
cmpsl
cmp
push
adc
mov
sbb
test
rorl
loope
xchg
xor
or
push
cmp
jne
shrl
add
cmp
jmp
aam
loope
sub
notl
pop
sub
xchg
jne
cmp
cltd
adc
movsl
push
adc
sub
int
push
in
lcall
pop
cmp
push
jg
loopne
fiaddl
leave
in
xchg
pushf
xor
test
int3
mov
and
dec
xor
mov
dec
mov
push
jecxz
es
jb,pn
and
dec
inc
fsts
jnp
imul
neg
adc
jbe
inc
roll
ljmp
call
stc
inc
sub
mov
push
adc
pop
jb
mov
lods
int3
inc
cmp
mov
and
subb
shll
inc
cmp
inc
jnp
jnp
imul
pop
arpl
js
scas
pop
and
icebp
jecxz
add
pop
jns
sarb
ret
jnp
loope
cwtl
inc
sub
sub
jo
jbe
add
leave
sub
in
pop
mov
ret
roll
jno
mov
dec
xchg
hlt
cmp
cwtl
lods
xchg
or
scas
insb
std
dec
pushf
ret
xor
shll
pushf
sbb
xchg
daa
add
inc
pop
incb
je
es
add
add
pop
pmaxub
mov
cmpsl
sbb
pop
dec
jmp
and
xchg
xor
std
popa
fcmovbe
loope
sub
xor
jb
cld
stos
stos
in
or
xacquire
sub
repz
or
xchg
lcall
out
jle
rep
push
sarb
or
add
xlat
insb
cmpsl
sub
inc
jge
in
pushf
mov
lods
dec
add
jecxz
or
inc
in
add
loopne
fdivrl
stos
adc
das
stos
xor
cmpsl
jnp
js
jl
test
mov
cmp
addl
aam
test
outsb
push
outsl
xchg
xor
scas
jae
lret
dec
cmp
cmp
jmp
rcrb
jp
lock
push
aad
and
pushf
mov
add
je
in
testb
je
xchg
dec
and
sub
inc
mov
jb
adc
sub
mov
xchg
push
enter
add
xchg
ret
xor
or
les
gs
push
sub
iret
call
jnp
scas
repnz
in
arpl
push
pusha
roll
push
inc
mov
repnz
jle
lds
and
xor
lcall
fldl
fdivrl
cmp
pop
or
mov
add
cs
jns
xchg
xchg
sbb
es
addb
and
data16
dec
dec
xor
sbb
fucomp
lahf
outsl
std
cmp
jo
adc
mov
ss
inc
cmp
sub
inc
mov
stc
push
cli
andb
cmpsb
inc
testb
inc
sahf
rorb
add
sub
addr16
rol
out
or
out
arpl
pop
and
adc
xor
pop
cwtl
xchg
sbb
sub
mov
mov
int
jmp
fwait
xor
cltd
sbb
gs
cmp
fwait
sub
daa
and
cmc
cld
push
shlb
lods
push
in
mov
es
scas
push
out
sti
sub
xchg
jg
jo
les
scas
cmpb
xchg
and
lds
enter
push
or
pushf
dec
out
mov
mov
in
or
sahf
mov
xor
shrl
aad
pop
syscall
cli
xchg
mov
cmp
shll
jbe
lcall
cmp
test
nop
mov
xlat
sbb
clc
mov
add
dec
int
adc
hlt
sbb
shll
mov
clc
mov
inc
dec
lods
add
mov
xor
repz
sbb
mov
mov
mov
pop
lock
or
stc
pop
pop
adcl
or
sub
pop
pop
in
lea
aad
call
push
pop
sti
add
fdivs
insl
cmc
aaa
mov
xor
jecxz
fcoml
mov
push
rorl
sbb
push
lret
jg
push
ret
negl
outsb
mov
jbe
add
adc
outsb
jb
cmp
xchg
xchg
cmpsb
popa
cmc
loope
mov
ficoms
xchg
adcb
ds
xor
cld
adc
into
mov
and
push
rclb
test
test
or
test
mov
mov
mov
popf
sbb
std
push
arpl
aam
hlt
mov
imul
xchg
and
scas
xchg
lods
push
frstor
and
sub
cmp
sub
scas
neg
push
pop
mov
stc
adc
jae
push
dec
sub
pop
mov
sub
jmp
adc
in
dec
and
or
push
mov
xchg
sbb
sub
jo
jmp
cmp
icebp
test
cmpsb
and
push
je
sub
inc
arpl
mov
jge
push
sahf
xor
in
sub
xor
jmp
ficomps
in
xor
mov
sub
imul
iret
push
aad
mov
mov
movsl
add
pop
out
xchg
jg
mov
movsl
xor
loope
inc
dec
loop
jno
fldcw
out
lods
jae
pop
aad
or
hlt
push
sbb
stc
push
rorl
xchg
and
cmpsl
pop
pop
mov
clc
ss
cmp
insl
mov
int3
ret
adc
and
mov
xchg
jmp
sub
mov
data16
sbb
sub
push
cmp
sbb
jne
sahf
das
jge
psraw
xor
xchg
mov
sub
inc
enter
in
aaa
outsl
or
std
xchg
mov
loopne
pop
lods
loope
and
dec
jne
dec
pop
mov
loopne
sahf
dec
js
in
int
sub
pop
jge
mov
cmp
lahf
sbb
or
adc
cmp
repnz
pop
les
pusha
xor
mov
call
adc
mov
jmp
and
jge
out
mov
stos
fimuls
in
dec
daa
dec
push
aas
in
cli
inc
iret
mov
clc
mov
xchg
pusha
xchg
add
lock
ror
sub
scas
push
fisubs
shrb
repz
jno
cwtl
jno
mov
scas
gs
stos
fcoms
and
dec
ds
jb
cmp
xchg
js
sub
mov
xor
jmp
movsl
push
push
andb
icebp
adc
jno
leave
lock
push
in
cmp
push
cmp
xor
mov
adc
mov
jbe
mov
movsb
and
call
adc
insl
push
add
in
out
in
mov
fwait
hlt
lcall
adc
mov
mov
sbb
sub
rcll
xchg
cltd
icebp
test
lcall
cmc
mov
mov
das
mov
mov
sbb
sub
mov
push
imul
xchg
xor
pop
ret
xchg
xor
mov
or
push
lods
mov
mov
sbbl
pushf
rcll
add
aaa
and
je
out
adc
or
fs
sbb
xchg
xchg
mov
cmp
push
fdivs
dec
push
jnp
mov
jmp
out
mov
jg
aaa
test
push
mov
jbe
nop
fwait
push
pop
push
cmp
in
push
jbe
nop
test
popf
es
cs
in
push
sub
adc
inc
ljmp
mov
test
cli
jnp
and
add
mov
outsl
jg
outsl
les
aaa
xchg
leave
rorl
cmp
dec
xor
pop
or
dec
roll
pushf
pop
popa
mulb
jp
jmp
rcl
xor
bound
fwait
mov
xchg
jge
adc
in
cmp
addb
fbstp
cmp
mov
in
sbb
lret
add
xor
cld
xor
cltd
jmp
pop
adc
iret
or
mov
dec
pushl
lea
adc
or
sbb
test
xchg
add
das
jecxz
or
sahf
jno
stc
xor
in
inc
mov
rcrb
in
fmull
push
or
lret
rolb
pop
iret
test
inc
subb
leave
mov
push
dec
add
sbb
jbe
fs
cmp
rcl
xchg
push
xchg
imul
add
xor
dec
repnz
mov
insl
pop
or
sbb
dec
nop
cmp
xchg
lahf
add
cmp
fimuls
loop
int
lahf
stos
mov
and
push
dec
icebp
jge
sub
js
cmp
xchg
sbb
lock
mov
test
jge
repnz
aas
pop
mov
imul
jl
sub
cmc
fwait
mov
and
ficompl
push
sbb
xchg
fimuls
negb
inc
sbb
loopne
jo
fldcw
adc
js
xor
sbb
or
push
scas
scas
int
stos
xchg
sub
pushf
loopne
sub
dec
mov
add
pusha
jb
mov
mov
movsl
stos
pop
je
pop
ja
sbb
dec
lahf
lcall
cmp
push
mov
mov
xor
leave
mov
jl
jmp
or
mov
dec
mov
in
lea
sarb
sub
shl
out
pop
sahf
mov
xchg
sbb
and
cli
fistpl
mov
push
pop
mov
or
jl
gs
iret
bound
sub
sub
push
dec
inc
in
cmp
ja
mov
jbe
lahf
or
xor
sbbl
push
mov
mov
out
xchg
dec
xchg
and
outsl
icebp
cmpsl
rcl
cmpsl
into
enter
mov
out
mov
fimull
cmpsl
movsb
es
leave
adc
xor
test
lds
sub
jnp
scas
or
push
and
mov
dec
sub
push
fmuls
inc
out
cld
lret
cld
jno,pn
sbb
inc
push
jb
mov
mov
sub
das
rorb
outsl
mov
rcl
cmp
xor
lods
arpl
jnp
in
scas
fisttpll
popf
fistpll
pop
mulb
add
pop
lea
pop
dec
out
sbb
hlt
cmp
and
jecxz
inc
lret
cs
jns
rolb
mov
sahf
cmp
fcmovu
jmp
sbb
push
or
and
mov
stos
pop
popa
mov
push
outsb
jne
dec
inc
sub
ds
stc
jle
add
xchg
push
push
mov
jmp
push
mov
cmc
add
call
mov
aad
incl
aas
lds
pop
sbb
pop
fistl
mov
jmp
xor
test
popf
fcomip
or
jbe
lret
rorb
neg
mov
add
inc
pop
loopne
inc
jo
rorb
add
mov
sti
sbb
mov
test
int3
mov
int
sub
pushf
jg
xor
fcoml
repz
ret
jno
push
out
mulb
gs
push
idivl
cli
adc
mov
addb
sbb
jae
sub
ljmp
inc
sar
push
ljmp
addr16
xor
xor
int3
xor
or
xor
sbb
pop
cmp
adc
or
ret
inc
dec
iret
cmpsb
test
jae
sbb
pop
or
jnp
cmp
je
sub
mov
xchg
sbb
mov
cmpsb
std
repz
jne
jno
mov
dec
fimull
roll
dec
fsub
jb
xchg
js
mov
dec
dec
test
fcomps
xor
push
lahf
bound
jno
add
sub
dec
cli
xor
daa
ds
dec
xchg
stc
imul
outsl
dec
ss
push
ds
inc
mov
sbb
lret
sti
outsl
out
repnz
push
push
imul
adc
or
fiaddl
xor
repnz
shrb
hlt
out
into
scas
shll
data16
cmp
insb
ret
lock
sub
mov
aad
int
cltd
sub
sbb
stos
out
adc
mov
xchg
xchg
mov
jnp
insl
mov
dec
mov
jg
dec
stos
jmp
adc
imul
pop
xor
add
out
std
mov
pop
pop
mov
jecxz
xchg
pop
fcomps
pop
addr16
loopne
and
test
push
psubd
push
lds
mov
adc
mov
fisubl
flds
fbld
jno
out
add
mov
cmp
jo
inc
jae
fcoms
notb
push
int3
sbb
and
cmp
xchg
fwait
pop
testb
fists
scas
adc
sub
or
jno
lock
xchg
jo
movsl
push
test
lods
cmp
push
iret
pop
enter
addr16
das
xor
and
outsb
repnz
rclb
add
in
movsl
cltd
mov
sub
xor
inc
lahf
sub
rorl
cmp
push
ja
insl
dec
imulb
lods
push
jmp
lcall
push
xor
in
fs
int3
sub
aaa
mov
ljmp
in
ss
mov
test
movsl
imul
inc
sub
stos
sbb
cs
xor
cmp
nop
inc
lahf
dec
inc
test
dec
mov
add
test
inc
fistpl
pop
mov
int3
mov
sbb
jno
ror
int
std
loope
movsl
int
int3
aas
cwtl
xor
iret
mul
in
and
pushf
scas
xor
gs
lret
xchg
sbb
cmp
stos
adc
jno
inc
pop
mov
xchg
mov
adc
push
test
and
int3
andl
ljmp
lret
cmp
push
in
xchg
sti
sbb
ret
aas
cmp
xor
mov
or
push
sbb
mov
and
or
pop
in
repz
pop
imul
out
sub
daa
arpl
out
sub
ret
aas
pop
aaa
loop
imul
sbb
rcrl
jb
popa
adc
lret
jbe
xchg
push
jl
push
push
mov
mov
stc
stc
lcall
add
inc
dec
mov
std
inc
add
dec
lcall
push
and
pop
adc
sub
sub
mov
pop
lret
xchg
cmpl
repnz
movb
sbb
mov
pop
push
pop
jge
mov
cltd
int
mov
nop
lcall
sub
or
xchg
aas
outsb
fxam
mov
outsl
or
imul
xor
cld
adc
or
fs
push
lods
repnz
dec
repz
mov
xor
and
adc
test
dec
dec
cs
insb
push
stc
fucomi
shr
push
int3
cmpsl
fimull
cmp
out
pop
cs
dec
jo
cmpsl
cmp
sarl
xor
lds
out
fisttpl
xorl
cld
dec
cmp
or
fsubl
dec
stos
pushl
jbe
cmpsl
push
or
xor
rclb
sahf
bound
mov
xchg
xor
mov
push
test
rolb
cmp
add
and
mov
cmpsb
push
ljmp
sbb
lcall
push
jle
jg
outsl
ss
faddl
les
adc
push
inc
orl
lock
jnp
mov
leave
mov
xchg
lods
je
adc
push
lret
outsb
push
lea
sar
filds
rorb
in
fcoml
cmpsb
mov
sbbl
and
fldenv
pop
jne
fs
and
shll
imul
cmpsl
popf
insb
xchg
or
mov
sbb
pminub
stos
and
int3
jo
shlb
dec
insb
les
jge
testl
pop
push
test
mov
imul
lds
mov
std
mov
xchg
lods
add
push
aam
and
sahf
mov
fiaddl
mov
stc
addr16
mov
pop
aaa
jae
cmp
mov
ficoml
fisubl
cltd
inc
div
xor
adc
xchg
fld
je
lret
xchg
movsb
xchg
add
mov
scas
ljmp
movsl
sub
leave
xor
nop
sti
inc
insl
rep
mov
shlb
dec
das
shll
jae
mov
sub
jo
xchg
adc
test
inc
sti
xchg
lahf
cmp
xchg
mov
repz
xor
cs
movsl
fstpl
cld
ljmp
dec
cmp
push
adc
jno
jbe
ljmp
loope
push
sbb
mov
pop
pop
mov
popf
or
mov
push
sbb
movsl
inc
sahf
repz
ja
sbb
inc
cmp
aaa
mov
loopne
add
add
aas
push
gs
cmpsl
xlat
jge
sub
fimuls
xchg
out
stos
mov
mov
mov
fwait
cwtl
outsb
sbb
cmc
mov
sti
mov
enter
sahf
into
sub
imul
and
add
loope
fidivs
in
lcall
cmp
xchg
inc
or
adc
scas
loop
xchg
sahf
pushf
sbb
cwtl
jecxz
mov
mov
imul
or
sub
rolb
or
sahf
mov
inc
xchg
xchg
add
mov
xchg
jne
lcall
or
int3
mov
xchg
push
or
imulb
pop
xor
add
pop
and
xlat
xchg
cmc
in
push
pop
imul
das
rorl
test
stos
call
std
cmp
inc
push
push
out
lcall
jnp
push
push
jl
xor
mov
ficoml
mov
das
xchg
jmp
dec
cmp
adc
int
push
adc
dec
mov
pop
insl
ss
divb
inc
push
fsts
cmpsl
pushf
adc
dec
mov
sub
adc
xchg
cld
cmpsb
mov
push
push
or
test
les
aas
mov
cmp
loope
pop
iret
adc
pusha
mov
mov
enter
inc
mov
outsb
jae
jecxz
adc
pop
pop
push
enter
int
aaa
push
movsl
pop
out
mov
int3
add
imul
lret
pusha
shrb
push
mov
and
xchg
fstpl
rclb
pusha
adc
imul
dec
dec
jle
fbstp
adc
fadds
arpl
ret
insl
mov
mov
lds
leave
xorb
inc
push
xchg
pop
sbb
outsb
pusha
push
pop
fcoms
jl
paddusb
shlb
lahf
arpl
add
dec
push
repnz
pop
icebp
inc
lret
push
add
sbb
xchg
xor
roll
inc
push
push
ja
mov
pop
movsl
loop
inc
movsb
scas
mov
lea
cmp
cli
je,pn
clc
dec
push
aaa
leave
out
fwait
mov
iret
xlat
mov
mov
or
mov
push
inc
int
jnp
push
dec
or
and
in
push
mov
push
add
mov
and
xchg
fisubrl
ljmp
sub
mov
inc
cld
and
adc
sub
pop
push
adc
inc
stc
mov
int3
andl
xor
pop
or
cmp
aaa
push
add
sti
pop
in
inc
fnstenv
cs
lcall
addr16
test
mov
loope
ficoms
or
or
das
pop
push
icebp
out
or
pop
ds
bnd
mov
jge
loopne
mov
movb
xlat
adc
jne
jb
nop
into
push
and
cltd
in
in
daa
fstp
enter
inc
cmc
rorb
cmp
jecxz
lcall
lret
adc
stos
jp
imul
fs
cltd
jne
das
mov
mov
arpl
repz
gs
adc
jbe
xchg
out
sbb
mov
inc
ss
xor
int
stos
in
popf
add
cmpsb
pop
cmp
insb
fimuls
sbb
mov
jb
les
jp
jmp
int3
imul
aad
test
sti
xor
pop
gs
or
cmp
add
negb
and
enter
frstor
dec
jg
dec
cmp
lods
fstpt
stos
out
test
cmp
out
fcomps
mov
push
dec
mov
jecxz
jge
sbb
in
inc
cld
pop
xorb
and
push
add
ret
imul
xchg
cmp
mov
cld
adc
in
push
jge
test
jge
or
sbb
mov
xor
add
ds
pop
cltd
les
leave
lds
je
test
fsts
lods
pop
fdivs
or
add
or
mov
dec
rcll
mov
scas
repnz
add
mov
cmpl
stos
sub
dec
push
jge
ja
and
inc
cmpsl
cmp
push
pop
jbe
movsl
orl
imul
mov
ljmp
add
ja
call
shll
and
adc
sbb
insl
fdiv
ja
jge
push
mov
icebp
xor
jmp
jno
jg
addb
xor
fyl2x
insb
into
mov
loope
add
cwtl
jmp
and
imul
adc
xchg
pop
ss
mov
cmp
shl
adc
push
dec
out
add
cmp
ljmp
jbe
loopne
cmp
add
dec
arpl
fdivrs
popf
mov
push
shlb
hlt
adc
push
stos
mov
mov
les
push
bound
mov
movsl
int3
push
jg
lahf
mov
xor
inc
and
repnz
inc
mov
movsl
das
mov
inc
push
dec
jmp
lret
shl
movsl
mov
mov
fidivrs
mov
insl
mov
sub
std
ret
jg
push
mov
insl
jecxz
pop
sbb
movsb
dec
out
in
xchg
andl
mov
or
push
sub
xchg
scas
xchg
loop
lea
aad
and
fcmovnbe
shl
fcmovu
out
enter
faddl
xchg
mov
aaa
enter
int3
mov
int3
mov
icebp
insb
add
push
lock
jl
dec
mov
leave
jecxz
rolb
out
or
lods
jecxz
mov
sub
subb
test
movsl
aaa
leave
gs
mov
data16
mov
xchg
dec
call
jb
adc
mov
or
adc
mov
adc
and
jne
push
fistps
pop
add
and
push
bound
xchg
fldl
lods
insl
add
lds
xchg
fldcw
out
jnp
push
pop
test
int3
int3
test
xchg
sbb
fwait
mov
xchg
sbb
or
test
fidivs
pop
das
or
mov
mov
insl
jae
mov
fs
or
mov
sub
inc
push
lods
cld
fldt
cmp
xor
mov
mov
mov
fimull
mov
cli
cmp
ficompl
or
test
popa
addr16
into
repnz
sbb
inc
cltd
iret
xor
out
fidivl
push
insl
xchg
loopne
das
popa
pop
inc
shrb
jnp
les
and
jmp
scas
pop
lcall
ret
pop
sti
add
pop
or
jp
mov
and
inc
mov
jne
mov
lods
xchg
addr16
out
pop
mov
push
inc
jne
jl
insb
mov
adc
adc
push
je
mov
and
dec
inc
aaa
shl
shl
les
mov
jmp
mov
paddusb
sti
ds
leave
pop
out
mov
cld
jb
movb
cmp
nop
mov
shl
xor
jno
xor
loop
inc
sti
pushl
dec
loope
push
cmpsl
imul
iret
int3
adc
stc
jo
adc
cmp
sbb
stos
mov
inc
das
daa
mov
fisttpll
mov
and
lea
mov
dec
jmp
xchg
xchg
aad
sbb
sbb
loope
pusha
add
cmp
pop
rorl
jge
lea
cli
or
addr16
out
insb
scas
cmc
xchg
dec
stc
mov
dec
or
mov
out
mov
xchg
push
sub
lds
push
mov
clc
test
aas
rcr
std
mov
xchg
into
sarb
es
cli
in
dec
pop
int
leave
pushf
fldcw
adc
les
push
jae
sub
mov
into
mov
iret
sbb
jnp
push
pop
jne
rcl
out
frstor
push
dec
aam
cli
pop
or
xchg
jge
test
sbbl
data16
loopne
sub
aas
cmp
repz
inc
push
loop
iret
in
mov
mov
out
sti
xor
popa
xchg
inc
fwait
adc
add
lret
lahf
test
stos
insl
rcrl
sub
xor
bound
jo
mov
in
shlb
repnz
insl
out
and
jle
jmp
push
and
ror
aaa
dec
and
out
lret
push
cmp
cld
shll
jns
and
inc
sbb
shlb
cmpsl
das
dec
add
ljmp
mov
fwait
pushl
mov
inc
clc
adc
rcll
push
mov
fnstcw
fwait
daa
jmp
js
or
sub
and
add
mov
pop
cmp
jle
push
dec
pop
sub
fisubrl
mov
mov
jmp
fs
mov
frstor
test
adc
imul
xor
fildll
push
or
dec
lods
mov
jmp
sub
loopne
adc
out
mov
stos
pop
out
xor
push
jno
insb
fdivs
mov
adc
insb
and
inc
cmp
aas
pop
into
std
int
mov
imul
mov
jl
mov
rcr
cmp
jae
dec
gs
mov
fistpl
mov
xor
leave
ljmp
ficoml
das
das
sub
xor
xchg
repz
mov
mov
lods
test
les
out
push
mov
fstps
mov
stc
or
mul
aad
mov
cmp
sti
mov
addr16
push
jmp
lock
cmp
mov
faddl
mov
in
data16
out
sbbl
mov
mov
push
push
gs
mov
mov
sbb
add
fsubrl
push
xchg
in
hlt
mov
addb
add
inc
jle
inc
dec
fucom
or
lahf
push
lea
push
or
sbb
outsb
inc
xlat
jle
dec
xlat
xchg
xchg
sub
pop
xchg
in
ljmp
pushf
repnz
dec
lock
fsubs
mov
shlb
cmc
enter
jbe
enter
ret
sbb
lock
push
mov
inc
push
cmpsb
roll
dec
loopne
in
bound
pop
fidivrs
xchg
push
and
mov
cmp
mov
pop
idivb
lea
pop
repz
out
aas
into
xchg
or
popa
adc
cmp
idivb
data16
test
call
xchg
sub
mov
cmc
pop
dec
ret
pushf
lahf
jb
cmpsb
repz
aam
xchg
shrb
leave
mov
sub
sbb
push
les
stos
ss
daa
js
mov
inc
cmp
jne
pop
add
mov
ja
scas
xchg
xchg
lret
mov
mov
jnp
cmpsl
push
jecxz
mov
dec
fsubs
push
shlb
dec
insw
into
adc
xchg
icebp
mov
push
test
mov
shlb
repz
dec
pop
test
sub
sub
sub
insb
lods
test
in
push
hlt
cmpsl
jg
xlat
loope
push
or
mov
add
lcall
mov
jbe
rcrl
push
and
les
adc
loop
mulb
push
fistpll
lret
clc
mov
jne
push
cmp
add
daa
cmp
fistpll
lret
add
sub
mov
pop
ja
jno
pop
data16
loope
jne
mov
popf
dec
in
loopne
adc
ljmp
cmp
sbbl
subb
push
stos
cld
add
out
mov
and
and
ret
jge
aas
pop
add
out
and
xchg
mov
jns
sbb
imul
cltd
test
call
cmp
push
repnz
push
stos
adc
jnp
mov
sbb
out
sbb
inc
xchg
or
mov
dec
enter
aad
movsb
popf
xlat
sub
sbb
enter
pop
jmp
movups
sub
into
mov
add
inc
push
cmp
stos
ljmp
es
fcmovb
xchg
aad
xor
test
imul
push
push
adcl
pop
jl
decl
inc
inc
mov
or
or
in
ds
incl
jae
and
push
into
mov
xor
pop
fdivrs
mov
cli
or
int
insl
and
popa
add
movsl
xchg
loopne
mov
push
insb
and
int3
rclb
xchg
push
mov
shrb
fistps
ja
mov
or
or
add
aam
in
rorl
and
fmul
cmpsb
out
popa
inc
sub
aas
xor
add
scas
adc
fdivrs
test
mov
sub
addr16
jns
add
adc
jg
push
mov
adc
test
add
enter
dec
iret
pop
mov
lcall
inc
dec
sbb
and
hlt
xchg
lods
lahf
je
insb
loope
xlat
test
jmp
push
jo
push
inc
test
in
jb
hlt
adc
stos
test
in
and
mov
scas
pusha
in
inc
mov
and
xchg
push
add
fdivp
mov
sub
not
inc
jbe
cmpb
pop
dec
xchg
in
cmpsl
rcll
sbb
pop
rorl
sbb
ss
or
sbb
and
inc
fcomi
ret
adc
cmp
scas
movsl
and
in
pop
mov
jbe
and
rolb
stc
cmp
test
sbb
nop
rorb
das
inc
shrb
add
std
and
or
subb
movsb
cs
sub
cmp
out
int
sbb
lock
xor
xor
scas
xor
xlat
pushf
imul
sub
scas
fisubrs
add
sub
sbb
and
cmp
dec
rcrb
subb
inc
clc
mov
test
adc
xchg
sbb
adc
in
fidivrs
popf
popa
add
or
mov
push
idiv
cmp
ja
cs
cwtl
sub
je
cwtl
daa
inc
jp
xchg
into
dec
stc
std
inc
mov
push
ja
inc
inc
cs
jmp
call
ret
daa
or
xchg
pop
fbstp
mov
popf
iret
in
movsl
ljmp
adc
inc
sub
es
push
test
jge
aas
loop
jmp
ss
mov
cmp
dec
gs
add
push
cmc
push
mov
pop
es
fstps
jg
test
lahf
sahf
sub
push
in
dec
and
fnstsw
add
lahf
sub
lods
sarl
movsb
jb
sub
int3
and
shll
aas
fwait
pushf
test
lock
cmp
fstl
into
xor
pop
push
jl
pop
hlt
cs
fadds
in
push
xchg
in
jo
inc
push
dec
sbb
pop
push
insb
push
mov
and
add
test
mov
lock
jnp
fwait
imulb
lret
and
rcrb
cmpsb
xchg
shlb
and
push
test
adc
out
xchg
push
xlat
push
pop
mov
inc
ja
das
push
jmp
push
div
outsl
rcrb
fiadds
xor
jge
sub
xor
out
dec
insl
inc
mov
push
sarb
mov
push
int
in
sarl
bound
mov
mov
or
push
or
jp
cltd
shr
aam
sub
mov
and
call
jge
mov
pushf
int
or
mov
and
fisttps
inc
test
sub
imul
sub
cmpsb
lea
jno
or
inc
mov
aad
add
dec
jnp
insb
mov
push
xchg
maskmovq
negl
adc
inc
jb
cltd
push
xor
or
cmp
add
repnz
repnz
push
mov
fs
iret
cmp
movswl
into
movsl
enter
insl
push
loopne
in
dec
rorb
scas
cmp
or
or
dec
and
popf
dec
mov
pop
push
enter
cmpl
sti
add
xor
jns
xchg
inc
sahf
sub
movsl
out
cltd
je
ljmp
std
enter
dec
enter
cmp
push
inc
shr
gs
lahf
pop
pop
xor
sbb
daa
icebp
pop
inc
in
xchg
jle
ljmp
popa
imul
scas
ss
xlat
cmp
sbb
mov
je
inc
mov
or
pop
outsl
pop
mov
fmuls
std
std
leave
lret
add
rorb
iret
inc
or
adc
sub
nop
or
lock
sbb
ror
mov
jns
jbe
inc
sub
mov
cld
cld
lcall
fdivrl
scas
dec
mov
add
xchg
mov
cmp
mov
pop
sti
divl
or
push
jge
xchg
dec
lahf
dec
ret
mov
out
sbb
cmp
add
out
jo
add
test
ja
xlat
or
mov
fsubrs
rorb
ds
popa
mov
sbb
inc
repnz
jbe
loopne
mov
fisubl
mov
cs
cmp
into
orb
jecxz
jg
je
enter
loope
xor
or
nop
fiadds
inc
lods
jmp
cmpsb
sub
xor
sub
leave
pop
or
inc
fwait
add
data16
mov
dec
inc
leave
mov
fs
inc
cltd
pop
mov
mov
out
pop
sbb
jno
lret
and
mov
pop
rorb
jnp
repnz
daa
mov
outsb
push
jge
test
pop
fists
mov
adc
xor
xchg
jl
cltd
popf
movsl
jl
test
inc
dec
fidivrs
fidivs
pop
push
cld
fbstp
pop
ds
loop
movsl
iret
sbbl
mov
arpl
xor
sub
das
leave
js
cmp
ss
orl
sarb
jno
leave
xor
xchg
sbb
scas
mov
inc
fisubrl
ficoms
push
xchg
xor
mov
shlb
inc
jge
cltd
mov
xchg
lods
xor
inc
push
mov
adc
shll
lods
sub
sub
ss
inc
popf
cwtl
sahf
push
mov
lock
hlt
sbb
mov
inc
ljmp
xlat
lcall
xor
cli
jp
jae
fnstcw
outsb
xchg
dec
std
cmc
push
popw
mov
inc
movsl
ja
xchg
ja
ja
adc
sbb
jg
jmp
pop
stos
subb
lds
cmp
cmpsl
push
inc
push
lods
stos
jge
fidivrl
add
pop
enter
pop
mov
aam
push
sub
add
adc
stos
iret
xchg
mov
repnz
xchg
cwtl
sub
pop
scas
or
loope
subl
std
xor
jecxz
push
lret
shll
xchg
mov
je
jmp
loope
clc
mov
add
stos
jne
cmp
mov
cltd
pop
das
and
test
push
test
faddl
cld
gs
clc
jb
inc
mov
push
aaa
notb
and
int
xchg
push
test
sbb
fcmovnb
mov
mov
pop
jecxz
roll
aaa
cld
lret
inc
mov
test
insb
ret
enter
adc
sti
add
out
lret
xor
clc
ljmp
cmp
sti
dec
popf
jp
sbb
stos
out
xchg
cmp
imul
xchg
adc
out
popf
lods
push
jmp
sti
in
loop
repnz
loope
mov
inc
addl
fsts
add
xor
inc
and
lea
scas
mov
xchg
mov
cld
dec
enter
pop
mov
push
mov
fidivs
mov
out
mov
nop
outsb
sub
add
aas
loope
jge
mov
mov
lret
sbb
push
pop
cmp
push
pop
aam
pop
andl
arpl
pop
int
dec
mov
adc
mov
fisubs
or
push
inc
stc
or
cli
or
dec
cli
xor
icebp
mov
add
mov
in
int3
pop
sub
mov
dec
bound
andb
test
inc
pop
imul
add
outsl
addr16
adc
outsl
sahf
imul
push
addr16
jbe
shlb
rcl
sub
pop
sub
inc
cmp
push
dec
xor
jecxz,pt
mov
jl
xor
pop
enter
fs
daa
mov
push
dec
xor
mov
mov
dec
push
cmp
stos
sub
mov
jbe
int
xchg
sbb
add
mov
rol
scas
imul
test
rorb
cmp
mov
aam
lds
xchg
push
stos
inc
ret
arpl
push
add
cmp
xchg
push
mov
iret
jle
mov
sahf
mov
sbb
pop
jns
gs
mov
xor
jl
loopne
or
xlat
push
dec
xchg
leave
in
lret
or
daa
iret
inc
test
push
and
popa
and
ss
xor
jnp,pt
shlb
jle
ficoms
std
outsb
hlt
ret
ret
mov
jnp
dec
xor
and
into
push
fwait
push
xchg
sarb
js
jmp
mov
jp
je
std
mov
push
in
mov
or
or
push
loopne
repz
shll
sbb
sbb
mov
addl
ljmp
sti
movsl
pop
sub
sub
out
pop
dec
add
fwait
cmpsl
mov
xchg
jns
push
sub
pop
stos
xchg
fwait
rcrb
in
leave
std
scas
sbbl
sub
popa
iret
jmp
jb
push
in
out
lcall
stos
jb
xchg
divl
mul
roll
int
call
add
out
idiv
sub
outsb
stos
ret
es
insb
stos
ja
push
enter
jecxz
cli
xchg
lods
dec
data16
cwtl
cs
pop
div
mov
jg
pop
popf
addr16
cmp
test
cwtl
xchg
pop
aas
xchg
and
sbb
sbb
push
push
mov
push
clc
dec
ret
or
push
xor
add
mov
inc
shlb
insl
addl
adcl
outsl
cmpsl
xchg
stc
cmp
xchg
dec
iret
into
je
xor
cwtl
dec
aam
and
adc
repnz
pop
in
xor
lods
or
imul
fldcw
jb
loopne
shl
push
cmp
stos
daa
lock
addr16
pusha
cmp
xor
adc
rorl
add
or
dec
cs
xchg
loope
push
out
stc
mov
pop
fisttpl
mov
inc
xchg
mov
jno
lret
sub
xchg
popa
mov
mov
in
dec
sarb
dec
add
pop
dec
repnz
das
out
mov
dec
sti
sub
mov
push
push
hlt
dec
in
mov
cmp
lds
adcl
scas
faddl
hlt
sub
or
nop
adc
sub
insb
jmp
cmp
popf
cltd
dec
mov
imul
xor
mov
stc
insl
or
and
into
push
js
mov
fidivl
sub
xchg
out
mov
lea
sti
cmpsb
jg
int3
mov
adc
xchg
ret
mov
addr16
std
sub
das
das
jg
das
jo
dec
or
push
dec
xchg
cmpsl
sub
jae
lods
ljmp
test
jmp
dec
jo
scas
cld
cmc
cwtl
ss
outsl
bound
jo
inc
inc
mov
push
inc
shlb
mov
push
dec
jecxz
fistl
fcomi
outsl
arpl
adc
jns
sbb
inc
in
and
dec
fistps
daa
test
mov
imul
push
jnp
out
push
nop
lods
add
sub
aas
or
push
dec
ljmp
mov
out
push
sbb
daa
xchg
aas
cwtl
stos
mov
mov
lock
test
lcall
movb
push
xchg
insl
imul
repz
and
or
sub
das
stos
dec
mov
nop/reserved
ljmp
fcmovb
sbb
pop
inc
dec
ds
and
in
sbb
push
xor
jle
scas
aam
std
adc
or
stc
imul
fisttps
sahf
test
ja
jecxz
mov
out
fst
jo
jo
dec
in
in
lods
xchg
pop
jecxz
xchg
adc
sbb
adc
sbb
loopne
xchg
in
mov
sub
cmp
mov
or
lods
adc
xchg
outsb
aaa
loop
mov
sub
push
notl
mov
iret
and
lcall
shlb
divl
mov
sub
clc
ret
fcmovnbe
das
mov
adc
or
pop
test
movsb
adc
add
addb
mov
aaa
in
sbb
mov
add
sahf
mov
sub
popf
push
pop
mov
in
or
clc
sbb
test
adc
test
inc
cli
hlt
xor
inc
adc
aam
lock
icebp
sbb
push
mov
push
mov
push
cmp
lds
jmp
mov
popf
dec
xchg
or
std
aaa
mov
push
test
fidivl
js
and
dec
outsl
lret
xor
test
sbb
andb
push
sbb
cmp
lods
mov
cmpsl
mov
stos
outsb
push
imul
and
jne
fildl
dec
mov
mov
xor
pop
int
js
adc
cmp
repz
jle
into
in
jge,pn
pop
das
mov
add
jb
pop
nop
mov
push
add
leave
ss
mov
icebp
loopne
dec
xor
dec
push
xor
popa
loopne
pop
adc
xchg
and
inc
adc
or
mov
inc
push
xor
daa
ss
pop
push
inc
xor
push
iret
lahf
mov
clc
daa
xchg
jg
ljmp
loope
imul
je
popf
xor
iret
push
xor
cmp
xchg
out
push
xor
pop
popa
movsl
test
dec
movsb
push
scas
dec
cmpsb
icebp
scas
cltd
pop
inc
pusha
pop
icebp
es
sbb
mov
sar
xchg
mov
es
cmp
repz
fwait
aam
jecxz
inc
sbb
mov
and
in
das
jne
xchg
addr16
les
sub
lcall
add
pop
and
imull
sbb
inc
insb
or
pop
nop
push
cmp
ret
scas
roll
add
and
xchg
lcall
fcomps
ret
push
nop
add
rcl
push
sub
in
xchg
lret
notl
das
rclb
adc
xlat
ret
inc
inc
jns
push
adc
mov
pop
pop
shr
orl
xchg
xor
adcl
sub
adc
mov
outsl
pop
xchg
mov
dec
adcb
or
mov
inc
imul
fisttps
cli
jo
mov
cmp
push
mul
pop
test
cli
add
testl
pop
push
mov
ja
xchg
stc
sub
inc
adc
mov
pop
fadd
cmc
push
repnz
mov
sub
sti
push
shrl
push
movsl
mov
xor
adc
in
movsl
shrl
add
rcr
mov
xlat
js
cltd
mov
es
jnp
add
pop
loopne
popf
mov
shrl
je
jmp
mul
xchg
movsl
addr16
cltd
inc
mov
inc
mov
push
lahf
cld
mov
into
bound
push
jne
lahf
ss
popf
loopne
loopne
in
das
pop
fdivrl
mov
pushf
pop
mov
cmp
pop
xchg
cmpsl
scas
cmp
mov
movsb
sbb
dec
push
push
sbb
scas
sub
lret
mov
sub
inc
movsb
adc
icebp
and
fiadds
inc
push
pop
inc
xchg
xchg
dec
xchg
clc
stc
mov
sbb
rclb
inc
daa
mov
inc
fs
scas
inc
mov
cwtl
lahf
movsl
rcl
insb
inc
lds
cltd
cmpsl
push
mov
xchg
mov
sbb
jge
push
aas
xchg
mov
faddl
ss
pushf
es
insl
jecxz
xchg
les
pushf
movsb
push
jo
inc
lret
jl
pusha
imul
test
sti
mov
lahf
dec
sbb
xchg
inc
sahf
mov
jbe
aam
movsl
in
imulb
aam
cmc
loopne
pop
daa
lods
dec
mov
mov
and
jnp
mov
or
dec
mov
inc
pop
sub
popa
fisubs
and
cmp
or
adcl
ja
push
jb
in
or
sub
test
cmp
test
test
mov
rcrb
jb
aam
mov
je
push
nop
lahf
cwtl
jecxz
push
daa
ss
add
test
and
ja
push
push
pop
popa
sar
je
or
pop
and
loopne
mov
pusha
inc
mov
mov
inc
nop
ljmp
loopne
pop
cmp
or
dec
test
insb
jns
rcrb
lods
jne
jmp
and
add
mov
add
dec
sbb
adc
shl
cmp
aas
cmpsl
jecxz
in
xchg
shll
das
pop
adc
loopne
lcall
inc
xchg
stos
icebp
adc
lods
popa
adc
mov
add
jecxz,pn
lds
dec
stos
push
mov
rorl
jbe
fisubl
enter
scas
sbb
sbb
pop
pop
ljmp
jecxz
cmc
lret
rorl
movsl
pop
lahf
mov
pop
jns
sbb
cmp
lods
out
xlat
psubq
loop
mov
roll
imul
stos
in
mov
xchg
mov
aam
ss
test
lods
add
repz
xchg
xchg
xchg
mov
lcall
sti
loop
test
in
sub
mov
push
into
push
xor
cmpl
fdivs
out
cld
cmp
outsb
dec
scas
mov
stc
rcr
sbb
jae
mov
xchg
push
and
and
jb
xchg
pop
jae
push
jg
jo
ljmp
stos
add
lcall
sarl
xchg
nop
out
repz
mov
out
insb
dec
repnz
jecxz
lea
scas
mov
mov
jecxz
xor
jmp
inc
loop
aam
pop
and
movsb
push
add
aad
jns
adc
fs
mov
mov
mov
xor
mov
xchg
addl
aam
push
jge
jns
adc
dec
loop
xlat
mov
mov
into
adc
icebp
aaa
lret
jnp
into
stos
jge
or
dec
add
jle
out
dec
push
jo
dec
push
add
mov
daa
daa
imul
add
cwtl
repz
or
jns
dec
lea
jp
loopne
das
popf
jp
test
addl
push
xorb
clc
lea
lea
ficompl
adc
sub
xor
mov
push
ss
gs
in
fdivrs
or
mov
jns
lds
push
fistl
aaa
cwtl
cmp
arpl
sbb
into
lret
add
clc
lea
hlt
sub
cmpsl
lock
les
test
dec
cmc
xlat
js
xchg
jae
enter
jg,pt
cltd
xor
cmpb
leave
mov
pop
cld
ljmp
jge
outsb
mov
enter
stc
cwtl
sti
cmp
pop
inc
cmp
out
and
dec
sbb
xchg
push
jns
add
lock
mov
add
aaa
movsb
xchg
xchg
data16
add
ret
clc
fistpl
add
mov
int
fldl
loopne
jbe
sub
xchg
inc
aas
clc
insb
mov
mov
les
adc
lret
inc
fwait
sub
shlb
js
jmp
push
xlat
jmp
arpl
out
jg
inc
dec
push
mov
enter
or
fwait
idivb
cmp
bound
lods
push
push
cli
add
movsb
in
cs
jmp
pushf
stos
in
das
xor
loop
push
sbb
mov
or
inc
out
out
jbe
lahf
pop
cmp
rorb
pop
mov
fwait
sti
xchg
adc
test
cmp
rcrl
adc
sbb
jae
std
inc
add
jp
lahf
fwait
sub
shl
dec
cld
pusha
mov
iret
dec
dec
insl
imul
ja
xchg
jmp
flds
jp
xchg
ret
push
or
cmp
leave
cltd
jb
das
mov
jp
js
shlb
fmulp
int
jge
push
xchg
dec
mov
jno
xchg
sbb
and
push
pusha
and
mov
lret
adc
shll
data16
sub
mov
lcall
lret
jp,pt
mov
repnz
out
pusha
into
fcmovbe
icebp
or
push
and
aas
mov
test
pop
xor
imul
fwait
jl
lds
mov
lock
push
addb
jmp
sbb
aam
push
sbb
and
std
dec
mov
cld
xchg
psadbw
dec
mov
cmp
sbb
mov
ljmp
ss
or
mov
sbb
js
dec
and
mov
xorl
adc
pop
ror
lret
dec
jb
sub
or
inc
push
in
inc
daa
push
dec
jle
or
aam
fdivl
push
mov
and
divb
push
sbb
std
and
push
pushf
inc
stos
cli
xchg
or
sub
add
fstpl
bound
push
mov
inc
fistps
add
adc
cwtl
sbb
push
iret
xchg
jl
jne
push
fcmovnb
mov
dec
vmovaps
pop
lods
imul
jne
xchg
mov
push
es
lock
dec
mov
mov
aaa
or
scas
push
loopne
sbb
shll
insb
mulb
and
lret
aaa
mov
loop
mov
jb
xor
ret
test
mov
ljmp
xchg
mov
jl
push
pop
scas
cmpsb
fs
and
jae
push
loope
sarl
fucom
push
jle
fsubrl
vdivpd
adcb
push
out
and
add
je
jg
decb
pop
ret
lods
stc
shlb
lret
pop
lahf
fidivs
jb
xor
pop
pop
and
pushf
test
cld
and
sbb
leave
pop
imul
mov
sti
fwait
pop
clc
inc
pop
fldenv
push
jns
clc
test
pop
pop
fisubs
mov
sub
das
xchg
jns
repnz
daa
jnp
stc
sub
mov
jne
movsl
inc
mov
aad
les
in
fcomps
push
jle
dec
fsubrs
pop
xor
cmp
and
sbb
pusha
xlat
loope
mov
mov
cmc
pop
dec
xchg
das
dec
or
ljmp
cmp
jle
ljmp
ss
push
mov
inc
sti
jmp
jmp
subb
ret
adc
push
pop
mov
call
call
or
loopne
add
push
jle
out
and
test
pushw
push
sahf
fiaddl
add
xlat
fwait
gs
lcall
inc
xchg
mov
xor
adc
dec
pushf
lods
xchg
stc
xchg
inc
in
add
jbe
jmp
stc
int3
movsb
inc
push
push
movsb
stos
and
add
sti
pop
jp
insl
xor
inc
dec
rcll
outsb
xchg
pop
fisubl
repz
pop
mov
sbb
outsl
mov
scas
data16
pop
xchg
add
data16
jno
dec
daa
stc
add
scas
mov
loopne
pop
jl
mov
sub
add
gs
jae
les
adc
inc
dec
addl
or
sub
stos
xchg
inc
sarb
or
ret
cmp
adc
sub
pop
push
mov
push
mov
add
in
pop
and
mov
or
cmpsl
xor
inc
nop
adc
out
lods
and
xor
push
incb
add
or
dec
call
lock
sahf
mov
fsubrs
adc
in
sti
cmp
pop
out
jge
inc
ftst
outsb
sbb
out
push
xchg
mov
jne
push
cmp
jg
inc
push
dec
add
stos
lods
call
cmp
adc
adc
jnp
add
add
loop
xchg
iret
pusha
sbb
sbbb
pop
dec
es
cmpsl
sbb
push
pusha
data16
fistpl
cmp
add
xor
pop
jbe
adc
pop
outsb
pop
jne
and
add
fdivp
fdivrl
mov
jge
loop
mov
jmp
frstor
xor
jns
mov
adc
mov
adc
sub
fisubrl
pminub
pop
psubsw
fwait
mov
scas
in
dec
and
and
inc
xchg
daa
outsb
in
and
stos
xor
sub
ret
or
xchg
insb
clc
mov
dec
push
std
lcall
sahf
aaa
sub
insl
add
push
pusha
cld
dec
or
rcll
add
dec
out
push
jp
and
inc
sbb
jp
out
aaa
jg
pusha
or
std
push
push
jae
xchg
aas
xor
cmp
xor
icebp
pop
mov
repz
jb
gs
stc
fstps
ljmp
mov
hlt
pop
xchg
lea
xor
pop
movsl
stos
pop
jo
jae
xorb
mov
fs
hlt
add
fdivrl
inc
and
sarb
movsl
push
dec
ja
mov
stc
stos
das
imul
fistpll
ja
fisubrl
sbb
or
mov
loop
mov
xor
cld
rcrb
add
xor
jae
mov
cmp
rorl
adc
mov
inc
lock
popf
pop
cmp
jo
in
loopne
mov
and
loopne
dec
ds
sahf
jnp
mov
ret
pop
out
push
nop
sub
pop
out
in
xchg
cmp
insb
imul
mov
adc
push
setnp
inc
jbe
loope
mov
xorl
mov
push
cmc
roll
inc
jb
iret
jecxz
cmpsb
dec
mov
push
int3
xchg
cmp
mov
jae
shrb
jecxz
ds
lds
out
movsb
out
xchg
adc
bswap
outsl
setle
iret
jle
pop
mov
clc
lcall
cld
sbb
lcall
jmp
pop
mov
jae
dec
jno
in
jle
nop
dec
mov
dec
int
jae
bswap
dec
mov
or
mov
xor
imul
out
and
nop
mov
add
pushf
push
sbb
pop
jl
jno
xor
inc
push
push
sub
sub
hlt
dec
xor
jbe
gs
xlat
adc
inc
sub
push
jbe
sbb
mov
lret
scas
sbb
push
jp
insl
jno
cmp
rorl
mov
movsb
fstpl
jnp
pop
in
adc
loope
xlat
mov
inc
negl
mov
dec
xchg
sbb
js
mov
adc
jp
push
cmc
in
filds
sbb
insl
mov
mov
cmp
and
stc
notrack
push
outsl
enter
dec
and
mov
fisttpll
popf
clc
mov
jecxz
push
movsl
push
mov
stc
pop
push
enter
in
fwait
arpl
sub
mov
dec
leave
and
cltd
ja
ror
xchg
xor
fbld
or
mov
push
bound
je
imul
or
push
pushf
dec
dec
into
sub
cmpsl
lock
movsl
dec
mov
push
sub
xorb
push
mov
pop
add
push
adc
cmp
lahf
xor
movsb
pushf
in
inc
and
loopne
movb
xchg
pop
and
push
fsubs
add
in
jmp
add
push
repz
imul
mov
stos
addl
loop
rolb
sbb
int
pop
pop
cltd
push
ljmp
or
lret
call
out
lret
je
and
call
or
mov
aaa
aad
sub
inc
pop
imul
push
push
sahf
or
xchg
mov
lret
inc
sub
inc
jge
addr16
push
lods
mov
mov
fnsave
icebp
hlt
sub
mov
xchg
aad
data16
jge
cwtl
push
or
daa
sub
mov
lret
dec
ret
stos
insl
xor
ret
pop
push
rcrl
shrl
jle
stc
jmp
push
jns
out
and
inc
sub
adc
call
pop
rcrl
not
mov
xchg
enter
ljmp
or
xchg
mov
call
mov
fcomps
xchg
nopl
orb
push
outsb
loope
aaa
mov
sub
ja
outsb
insb
add
mov
push
sbbl
or
enter
sub
lods
in
sbb
mov
sti
cwtl
inc
xor
pop
insl
add
cmp
gs
push
cs
out
pop
popa
cmpb
incl
mov
ss
rcll
mov
mov
subl
push
je
call
mov
and
dec
jae
jne
imul
insb
cld
cmpsb
add
ss
push
fimull
jmp
test
in
mov
push
insl
or
pop
in
mov
fidivrl
push
add
cltd
pop
pop
jae
jge
jbe
ds
xor
cmp
lret
loopne
lahf
jecxz
mov
roll
xchg
and
dec
jae
std
popa
aas
mov
lahf
addl
jnp
pop
and
pop
cmp
push
shll
sbb
sahf
push
hlt
outsl
fnstenv
inc
sub
add
sub
push
aaa
stos
mov
cmpsb
mov
cmp
mov
in
mov
jg
ja
outsb
fidivl
or
jl
adc
lret
jp
mov
aaa
dec
sub
popa
push
dec
sub
mov
push
push
jbe
pop
add
cmp
jp
in
ret
arpl
add
xlat
call
dec
push
imul
pop
push
je
xor
push
cltd
dec
lcall
out
cmpsb
inc
push
aam
jns
mov
and
popa
in
xchg
out
mov
filds
cmpsb
add
gs
and
ja
les
in
add
cmp
mov
and
sbbb
mov
jnp
and
mov
stc
jnp
into
adc
sbb
cmp
inc
in
mov
xchg
add
mov
mov
add
xor
sub
sub
ret
loopne
xor
arpl
sbb
je
jo
rcrl
lds
imul
mov
pusha
subb
decl
out
lods
xchg
jmp
rcl
xor
out
xchg
inc
into
aaa
mov
fldl
cli
mov
push
cli
sbb
push
cmp
mov
xor
adc
jmp
pop
cmp
mov
cmpb
cmpsl
pop
iret
jp
in
mov
ljmp
push
testl
fs
stos
movsb
mov
mov
dec
aam
or
test
xchg
sbb
pop
pop
je
bound
adc
cltd
cwtl
mov
mov
fsubrs
aam
or
fldt
scas
jle
in
sub
cmp
ret
xlat
cli
lret
test
stos
mov
lret
xchg
aam
out
setp
jae
mov
outsb
xchg
insl
and
or
out
push
in
aas
fldl
mov
out
gs
cmc
insl
mov
cmc
cs
and
pusha
ficomps
jp
lock
movsl
xor
jno
push
rcr
pop
cld
jmp
push
scas
daa
leave
sub
lahf
jae
or
loopne
cmp
movsl
push
inc
xor
mov
in
push
add
or
jno
and
in
dec
and
out
mov
mov
mov
dec
nop
in
ret
pop
sbb
addr16
jecxz
int
mov
mov
adc
jno
or
test
push
leave
out
incl
pop
add
fucomi
repnz
lret
mull
das
mov
test
mov
sub
or
push
pusha
call
or
imul
mov
movsl
sub
cmp
out
xor
add
out
js
adc
add
aaa
in
mov
mov
lea
incl
imul
test
loope
roll
stc
loop
call
call
sub
pop
aas
and
xorb
push
inc
rolb
movsl
stos
movsb
and
lds
cmp
pop
fisubrs
and
in
pop
and
sbb
les
sub
xor
imul
xchg
daa
push
ret
mov
xor
movsl
adc
cmpsl
nop
in
fsubrl
es
push
movsl
fs
repz
int3
and
dec
jmp
frstor
pop
xchg
adc
xor
cmpsl
scas
lret
jmp
movsl
jnp
mov
pusha
ret
mov
and
xchg
mov
xchg
inc
inc
sbb
mov
mov
jnp
lods
aaa
iret
in
xchg
popa
pop
inc
mov
dec
popf
inc
pop
push
cmc
adc
jnp
rcl
push
imul
mov
xlat
lret
xchg
jge
ds
test
mov
loop
xor
adc
sbb
mov
nop
inc
and
out
sub
cld
jge
call
test
adc
and
push
jle
mov
dec
sti
rol
outsl
aaa
jl
xor
push
mov
in
icebp
pop
push
xchg
sti
fcmovnu
mov
out
das
mov
cmp
scas
ss
mov
inc
and
sbb
or
xchg
dec
pusha
into
push
and
test
mov
andb
shr
cs
cs
hlt
pop
or
pop
sahf
sub
aas
call
les
fsts
jle
adc
and
int
jmp
inc
sbb
out
je
xchg
daa
jge
xor
mov
adcb
xor
and
insl
clc
xchg
out
jae
push
das
ljmp
fiadds
andl
xchg
lret
mov
test
rclb
lcall
push
push
out
xor
addb
ja
dec
and
sbb
aad
pop
mov
sbb
xor
mov
ss
push
or
sub
add
scas
xor
and
mov
jge
mov
addb
dec
stos
mov
fisubl
rorb
cmp
mov
popa
mov
movsl
aam
cmp
jl
mov
inc
mov
xchg
mov
shll
mov
pop
sbb
addl
xchg
add
lods
jmp
adc
mull
or
mov
cld
stos
xchg
inc
in
js
ss
out
call
dec
fucomi
in
mov
leave
jb
cli
enter
mov
pop
xor
sbbb
scas
pop
testb
fadds
jmp
mov
popf
jnp
fdivl
sbb
into
push
mov
adc
mov
jge
or
inc
and
push
ret
jecxz
das
shl
xchg
inc
inc
xchg
loope
pop
sbb
les
add
mov
add
stos
mov
ljmp
dec
mov
mov
clc
and
cld
inc
roll
cmp
and
ss
jns
les
pop
pop
call
pusha
jno
std
jmp
push
cmpsb
es
and
fisubrl
out
fidivl
insb
lahf
lods
mov
into
scas
loopne
add
loopne
roll
cmc
popa
leave
lea
inc
int3
push
and
cmp
jle
js
outsl
ljmp
xor
lods
xchg
cmpsl
mov
add
jmp
mov
pop
xchg
add
in
lret
inc
loope
fdivr
push
fstpl
sahf
mov
jns
arpl
aad
iret
or
shlb
outsl
push
mov
xchg
int3
adc
and
jb
arpl
aad
jne
ja
sahf
lock
sub
fwait
int3
pop
pop
dec
std
pop
pop
xchg
pminub
adc
mov
shl
mov
aam
dec
or
insb
xor
mov
loope
lea
jo
push
add
dec
cmp
inc
xor
push
in
or
xor
mov
lea
loope
loopne
xor
jmp
cmpsl
inc
jle
sub
or
dec
or
inc
sbbb
xchg
and
push
jle
or
hlt
cmp
xchg
sbb
mov
shrb
fiadds
out
lahf
adc
inc
xor
sbb
add
add
lret
scas
inc
or
cmp
sub
dec
in
mov
test
push
in
jnp
sub
xor
push
loopne
insl
dec
or
test
pop
movsb
sahf
int3
cli
lcall
mov
stos
push
stos
fcoms
enter
or
mov
or
dec
lret
dec
adc
fwait
inc
mov
adc
insl
pushf
andb
rorb
ss
mov
sarl
cmp
inc
int3
mov
mov
push
hlt
push
andl
fstpl
dec
jo
adc
mov
push
mov
fs
aad
lret
jp
fcomp
push
jne
cmc
das
pushf
jge,pn
dec
push
loop
jl
mov
fldenv
pop
iret
aam
iret
xchg
push
jge
jae
push
cmpsb
sti
aam
add
idivb
add
loope
gs
inc
adc
je
lds
xor
mov
push
or
mov
stos
aas
push
or
jbe
pushf
and
pop
lcall
sahf
lcall
lcall
push
jns
pop
or
test
mov
sbb
insb
popf
inc
movsl
mov
notl
push
push
pop
lret
cmpsl
or
dec
inc
and
lds
imul
mov
adc
fbld
jne
add
outsl
sbb
jbe
dec
call
sub
inc
mov
and
lods
addl
movsl
inc
loop,pt
mov
iret
add
and
popf
jg
loop
fcmovbe
inc
sbb
fsubrs
test
repz
lods
gs
into
pop
je
loopne
xchg
cld
faddp
int
in
test
leave
into
icebp
in
aaa
addr16
stos
jnp
mov
lds
push
and
loop
insb
out
mov
jmp
leave
or
dec
lcall
or
mov
sbb
and
inc
add
mov
xchg
cmpsb
push
xchg
insl
enter
mov
shlb
sbb
fstpt
enter
rcl
sub
lahf
fistl
pop
out
mov
sub
jle
js
call
out
xor
daa
jecxz
jae
pop
gs
or
adc
out
or
and
lods
roll
xchg
xor
cmp
pop
cmp
and
fmul
xchg
jo
adc
in
in
cwtl
out
adc
inc
stos
lret
das
jl
leave
pushl
xchg
stc
pusha
cld
andb
aas
xchg
or
cmc
push
out
and
in
mov
sti
or
cld
or
cmpsl
stc
lahf
in
adc
ficomps
jns
cmpsl
or
imul
out
dec
andb
pop
aad
cmc
xor
cmpsl
sub
stos
sti
movsb
jmp
pop
xchg
divl
mov
stos
push
and
jns
dec
jecxz
rolb
ja
and
jb
clc
fstps
addl
stos
ja
sub
inc
sub
dec
jl
inc
ret
cmpsl
xor
sub
adc
push
mov
dec
sub
arpl
dec
pop
inc
sbb
repnz
mov
shl
lds
fs
pop
test
sbb
mov
mov
jnp
sbb
mov
popf
xor
and
repz
mov
ds
scas
fwait
add
pop
and
jle
fwait
outsl
adc
out
flds
push
and
dec
push
pop
jnp
addb
stos
cmp
push
inc
in
mov
out
adc
xor
mov
push
push
inc
addl
mov
inc
int
add
cmc
mov
out
aad
out
jmp
addl
mov
pushw
mov
pop
and
mov
sbb
xchg
mov
inc
xchg
xor
scas
cmp
cmp
mov
sub
sti
lds
pop
cmc
and
inc
popf
mov
add
out
jno
xchg
rcrl
pop
xchg
jge
mov
pop
mov
negb
ss
into
push
adc
adc
popa
lcall
sub
stc
xchg
aas
cmp
imul
scas
push
sub
jmp
pop
pop
mov
adc
in
sbbb
outsl
testb
adc
or
dec
aaa
fsubl
push
stc
int
int
mov
inc
pop
sar
jmp
mov
pop
jmp
jecxz
out
ret
pushf
mov
xchg
ret
and
xor
pop
jle
inc
xchg
sbb
push
dec
dec
cld
scas
scas
sarl
fisubrs
xor
std
mov
imul
fwait
cld
push
test
push
pop
fbstp
sbb
fidivl
jmp
aas
mov
or
lods
mov
aas
jl
out
sti
repnz
call
mov
ret
inc
xchg
lret
jge
sbb
xchg
int
adc
test
inc
jmp
xor
xchg
mov
xchg
cmp
sub
sahf
imul
mov
fsubp
push
in
dec
out
fistl
imul
xchg
mov
aam
add
pop
and
sbb
xor
mov
lds
adc
mov
adc
pop
dec
loop
decl
jne
stos
lods
pop
je
mov
insl
sub
lock
rcrl
je
es
dec
sbb
and
and
mov
into
mov
popf
inc
jmp
fcmove
test
pop
mov
or
andl
cmp
or
fs
mov
xor
repnz
aad
inc
mov
jbe
and
push
fs
jnp
inc
ss
dec
jnp
imul
or
adc
neg
mov
jo
cmp
lcall
inc
mov
pop
ret
and
mov
daa
push
jae
push
fisubrl
cmpsb
adc
sub
scas
xchg
cwtl
inc
hlt
jno
mov
xchg
sub
jp
or
mov
mov
add
jo
call
xchg
test
or
in
testb
add
sbb
clc
out
xchg
inc
mov
inc
push
insl
mov
jo
popf
aaa
xlat
fbstp
inc
shrb
cmp
xor
xor
dec
stc
xlat
or
push
scas
mov
jo
dec
and
add
inc
or
in
pop
sub
pop
cmovge
insw
xor
cwtl
pop
rorb
rcrl
and
sbb
xchg
rolb
ss
xchg
sub
imul
or
int
es
xor
aad
psubsb
cltd
out
mov
std
rorb
ret
pop
sub
dec
es
loope
lret
call
cmp
push
push
jb
pop
adc
imul
jo
gs
std
idiv
and
sarb
mov
repz
lcall
add
jl
lahf
xchg
jae
sti
ja
push
xchg
jge
pop
test
push
xchg
add
fstpl
lea
out
in
movsl
add
pusha
jo
rorb
fisubl
scas
loop
mov
lds
xchg
sub
je
pop
mov
in
jbe
loopne
push
negl
mov
mov
push
push
sub
test
mov
sbb
roll
inc
stc
sarb
imul
lods
repz
ja
mov
sahf
or
xchg
add
push
lcall
iret
inc
adc
push
rolb
xor
ds
sbb
jb
xor
or
insb
enter
in
fidivs
inc
insl
mov
jno
lcall
jg
jb
adc
lods
pop
into
enter
adc
mov
ss
lahf
inc
jecxz
iret
xor
and
mov
add
xchg
or
adc
out
mov
add
sub
push
cmp
shl
pop
mov
xorb
decl
imul
mov
mov
push
and
test
push
pop
fs
scas
jp
cmpsl
xlat
mov
jne
fwait
inc
movsl
mov
daa
sahf
adc
xchg
int
repnz
insb
sub
pop
xor
adc
inc
push
call
mov
insl
sahf
jne
std
fdivrl
inc
scas
push
inc
jmp
aad
inc
lods
mov
imul
adc
pushf
or
mov
inc
das
push
push
mov
call
mov
insl
add
or
push
push
xchg
xchg
fcom
xlat
sub
fistl
jbe
dec
sub
imul
adc
out
mov
mov
or
aam
rol
xchg
and
jo
or
mov
mov
mov
sbb
fcompl
loope
inc
sbb
aad
push
hlt
das
dec
lock
enter
cmpb
xchg
push
dec
pusha
inc
fs
sahf
inc
cmc
cltd
and
stos
testl
sbb
loop
jle
mov
push
inc
lock
jp
adc
mov
xchg
in
ret
ss
push
mov
sbb
mov
cwtl
lahf
jbe
add
mov
jge
and
inc
test
out
push
out
scas
fsubrl
adcb
in
mov
aas
test
jnp
jmp
push
cmp
mul
fucomi
xor
call
scas
adc
repz
mov
lret
loopne
dec
xchg
out
ja
cmp
push
imul
bound
enter
cmp
push
leave
dec
pop
mov
mov
je
jb
xor
decb
rcrl
or
sub
das
aaa
jg
stos
xor
or
add
mov
lahf
jns
and
insl
mov
test
rclb
mov
cmp
or
ja
fcmove
sbb
xor
fisubl
xor
xchg
iret
pop
fs
push
mov
mov
lcall
jo
lods
mov
jb
pop
dec
test
fisubl
mov
jge
dec
and
jl
cmp
xorl
sbb
notl
pusha
jle
pop
xchg
adc
push
push
int
mov
arpl
leave
mov
std
std
xchg
ret
pop
cmp
mov
jp
dec
das
and
cmp
lds
add
push
sti
adc
push
adc
xor
jecxz
jg
imul
std
mov
rclb
rcrl
js
frstor
dec
and
mov
cmp
adcb
je
cmp
jne
xchg
inc
lret
xchg
mov
pop
cwtl
mov
loope
stos
or
stc
mov
pop
dec
jae
cmpsb
lret
xchg
mov
insb
sub
fadds
adc
ds
sub
jmp
jle
fwait
test
inc
push
rorb
icebp
mov
inc
scas
repz
add
jmp
adc
div
xor
or
sbb
mov
pop
jo
lds
xor
movsl
push
cmc
imul
mov
push
nop
mov
outsb
mov
xchg
sub
rcrl
jge
std
stc
push
adc
leave
lret
or
xchg
adc
xchg
mov
push
mov
aas
cmpsb
mov
lahf
arpl
es
inc
mov
stos
ret
test
or
arpl
adc
fistps
call
inc
js
push
sbb
mov
xor
scas
test
dec
testl
shll
xor
or
insl
scas
mov
fmul
aam
das
and
mov
mov
cmp
not
popf
mov
fidivs
sub
mov
dec
ret
cmp
lret
cmpsb
aaa
mov
pop
jecxz
lods
subl
inc
cmp
popa
dec
iret
jns
sbb
inc
pop
in
sub
push
inc
mov
xlat
sub
cmpsb
cwtl
mov
jae
sub
mov
sbb
and
inc
push
sub
xchg
cmp
sub
js
dec
sbb
ds
mov
repz
sar
cvtps2pd
fimuls
add
hlt
mov
fwait
mov
push
sti
fcoms
ficomps
adc
incl
inc
mov
xor
movsl
mov
jge
lcall
xlat
cmpsb
fcompp
inc
sub
fwait
cmp
pop
stc
mov
dec
mov
outsb
mov
cmc
and
push
push
inc
mov
adc
ret
mov
iret
add
and
sti
dec
sahf
pushf
ljmp
push
movsb
call
mov
movsl
pop
loope
sbb
cmp
sbb
and
mov
cmpsl
movsb
push
jecxz
enter
add
inc
xlat
pushl
mov
pop
xchg
sbb
mov
xchg
and
jl
ret
cmpb
sub
mov
les
insb
sub
add
movsb
add
xchg
lods
pop
loope
dec
dec
add
and
and
mov
xor
fidivl
pop
pop
outsb
in
xchg
es
or
cmp
mov
mov
xchg
jp
sarb
jne
mov
sahf
mov
ja
and
mov
loopne
sbb
aad
nop
ds
jp
and
xchg
lret
pop
fidivl
aaa
aam
in
gs
mov
jle
mov
sti
pop
jb
dec
cli
jo
inc
jge
repz
andl
push
pop
pushl
adc
cmc
lahf
dec
xchg
mov
inc
scas
ret
call
rcrb
fs
mov
pop
lcall
out
mov
test
mov
pop
lock
lock
in
mov
push
mov
cltd
repnz
std
or
fcoms
nop
push
cmp
pop
dec
pop
pop
sbb
mov
cmpsl
movsl
or
xchg
lret
cmp
leave
movsb
movsb
and
std
in
add
add
hlt
mov
inc
add
xor
rolb
pop
lock
or
cmp
out
mov
jb
xor
inc
lock
mov
mov
test
dec
stos
lcall
add
popf
addb
pop
jne
adc
pop
fs
inc
cmpsl
add
and
adc
cmpsl
notl
and
clc
jnp
fs
pop
out
adc
mov
test
add
cld
or
cmp
pop
sbb
shufps
mov
pop
pop
scas
shrl
lods
adc
test
jns
push
push
mov
cwtl
xlat
das
loop
dec
push
xchg
and
lret
out
leave
jmp
add
stos
int
lds
sbb
insl
sub
in
nop
add
in
dec
mov
push
pusha
out
mov
in
add
loop
pop
mulb
or
cmp
imul
enter
adc
ret
xchg
add
sahf
jmp
ljmp
pop
movsb
inc
ret
repnz
jbe
push
imul
outsl
hlt
cmpsl
into
imul
or
in
or
jne
jle
pusha
je
mov
push
popf
jbe
xlat
stos
stc
loopne
xchg
shrb
fldenv
shl
pop
rcl
jecxz
adc
pop
js
pusha
pop
arpl
leave
add
push
fsub
jbe
jnp
repnz
rcrb
repz
fidivrs
movsl
xor
and
inc
cmp
sub
sbb
mov
xchg
movsb
xchg
sub
sti
mov
inc
fimull
fwait
xor
and
mov
std
ljmp
rcrl
lods
jb
fwait
lds
jae
enter
adc
adc
jl
das
mov
push
lods
cmp
sub
sahf
mov
mov
mov
inc
cltd
xlat
cmp
sbb
aaa
fimull
loope
mov
fisubs
and
mov
aad
add
lods
jle
fdivp
scas
scas
sti
cwtl
std
mov
push
ret
repz
mov
inc
adc
psubusw
lret
inc
pop
stos
and
pop
das
orl
lods
les
arpl
cli
xor
mov
into
adc
sub
mov
jo
loop
negl
mov
cmpsb
push
addr16
lods
and
outsl
or
xchg
ljmp
push
sub
fucomip
lea
pop
mov
std
pusha
mov
mov
jbe
mov
stos
ficoml
hlt
inc
imul
fdivs
push
jno
jae
mov
dec
jmp
pop
push
xor
cmp
je
rcrb
dec
mov
cmp
lock
sbbl
pop
aam
xchg
mov
daa
bound
mov
jle
jp
sbbb
das
jns
data16
push
hlt
scas
jg
mov
xchg
xor
xchg
dec
enter
jo
shll
xor
pop
fisttpl
push
pop
push
push
mov
jb
out
fcomp
mov
test
fsubs
add
add
pop
cmc
jg
and
push
repz
mov
dec
dec
nop
dec
mov
xchg
jle
outsl
nop
add
dec
jne
xchg
mov
ss
aam
dec
xchg
clc
cmp
xchg
mov
aas
cmc
xlat
js
lahf
orb
cmpsb
pushf
ret
fisubrs
test
shl
and
jle
or
dec
sub
into
mov
mov
mov
and
pop
push
sub
mov
fidivrl
inc
adc
test
inc
insl
outsb
js
mov
mov
sub
test
push
xor
mov
and
and
and
mov
aaa
jmp
pusha
js
std
mov
cmp
test
mov
jbe
pop
mov
sbb
inc
das
xchg
add
call
or
jecxz
mov
cmp
sbb
or
xchg
cld
lahf
das
and
and
xor
shl
sub
and
gs
test
fisttpll
rclb
xchg
mov
and
bound
ret
xchg
ret
push
scas
stos
xchg
mov
or
xchg
lahf
movsl
gs
testb
add
xchg
ss
inc
mov
mov
nop
addr16
test
push
stc
xchg
jg
sub
dec
aad
inc
das
inc
mov
loope
cmpsl
xorl
fucomip
push
mov
incl
sbb
add
pop
and
pop
ret
shrl
in
icebp
fisubrl
cmpsl
pop
out
mov
cwtl
ret
xchg
in
add
and
or
int
rcrb
push
mov
popl
mov
dec
sub
and
testb
rclb
push
sbb
stos
stc
enter
ja
mov
pop
inc
and
bound
mov
inc
add
ret
add
inc
rorb
daa
sbb
fsubl
xchg
mov
xchg
stc
or
bound
xor
in
dec
push
aam
add
push
cs
popf
lock
mov
jb
insb
lahf
mov
test
ror
dec
or
cli
hlt
scas
pop
scas
xor
cmpl
movsl
jb
add
push
les
mov
fnstsw
movsb
int3
push
inc
movsb
adc
jns
push
push
pop
inc
xor
ss
adc
in
repnz
mov
xchg
shlb
insl
and
jae
pop
and
imul
std
sbb
xchg
out
lds
mov
cmc
mov
rorb
and
popa
inc
daa
push
scas
iret
loopne
xchg
cs
test
push
int3
loope
jl
xchg
or
lock
mov
jmp
mov
dec
adc
pushf
subb
dec
stos
gs
xchg
xor
nop
les
xlat
inc
mov
jle
and
dec
int
pop
sub
push
gs
sahf
dec
iret
jge
pop
mov
daa
loope
mov
stc
cwtl
jmp
push
sahf
scas
sub
call
xchg
mov
push
push
ret
jle
lahf
mov
imul
leave
add
add
fdivr
loope
pop
test
mov
or
sti
rcrl
in
in
icebp
push
sub
mov
test
aaa
inc
and
cmp
lods
jno
mov
inc
lret
rcll
ja
rorl
imul
pop
inc
mov
mov
and
cmpsl
popf
fbld
movsb
hlt
lea
imul
cmpsb
orb
cs
pop
mov
dec
test
pop
sbb
xor
dec
cli
lret
xchg
jl
inc
mov
shrb
cmp
pop
aad
or
das
or
stos
push
iret
mov
test
pop
xchg
orb
or
rcll
dec
mov
jmp
jecxz
jge
les
pop
mov
imulw
or
fisttpl
pop
enter
std
out
mov
xor
inc
xor
int
pop
daa
mov
outsl
fucomp
testl
fidivrl
jmp
mov
adc
jge
test
stos
shl
jl
sbb
push
sbb
inc
push
mov
push
and
fwait
cmc
fstpt
sbb
out
insl
mov
arpl
and
test
ja
inc
push
jle
xor
or
in
adc
insb
mov
dec
sub
mov
pop
push
loop
das
pop
popa
cmp
sub
in
mov
ret
push
sub
andl
jb
fcmove
ret
jne
mov
inc
xchg
pop
out
pop
mulb
push
mov
mov
sbb
mov
sti
xchg
hlt
je
jmp
sub
dec
push
mov
mov
aaa
scas
cmpsb
sbb
outsb
shrl
xchg
call
movsb
adc
and
mov
movsb
or
cmp
pushf
aam
cmp
xchg
lds
cmp
icebp
push
imull
cmpsb
lock
shl
movsb
inc
xchg
adc
call
insb
in
pop
adc
mov
js
inc
scas
cwtl
bound
lods
or
and
cwtl
jne
or
test
push
sbbb
aam
mov
sahf
xor
jl
jne
aam
cmpsl
jge
xor
and
punpckhwd
ds
imulb
inc
out
test
jo
sub
cs
sar
daa
pop
repz
xchg
push
or
movsl
subl
test
jecxz
out
dec
and
inc
js
cmpsl
push
out
cltd
pusha
xor
aad
jne
mov
sbb
mov
lods
out
outsl
xorb
arpl
adc
sbb
sarb
add
dec
cwtl
mov
jg
scas
mov
jp
push
fstpt
mull
in
adc
cld
mov
clc
or
sbb
dec
xor
mov
inc
xor
push
incl
cli
pop
mov
mov
pusha
es
adc
cwtl
jmp
and
scas
mov
sub
movsl
mov
xorb
or
stos
pop
in
repz
icebp
mov
mov
ret
inc
hlt
test
sub
in
imul
pop
insl
push
call
sbb
xchg
fisubrs
ror
out
cmpsl
and
xchg
and
mov
movsb
std
dec
xor
ficoml
jae
dec
iret
and
push
aam
cmp
pop
scas
daa
test
mov
inc
jle
in
aam
or
dec
mov
stos
das
xchg
hlt
mov
mov
sbb
gs
jp
dec
dec
pop
scas
fmull
dec
sub
lock
fistl
insb
add
pop
ljmp
xchg
inc
fwait
mov
mov
rorl
lods
push
push
outsb
leave
jecxz
pop
adc
cmp
shl
add
repz
jae
cld
mov
or
xor
loopne
push
mov
or
shll
fists
clc
jb
mov
inc
mov
or
xor
mov
adc
pop
push
push
jp
push
mov
sub
aam
pop
adc
or
dec
ja
aad
insl
dec
xchg
out
mov
ds
mov
fisttpl
mov
ljmp
xchg
imul
dec
repz
nop
mov
lods
inc
icebp
mov
and
aad
subl
movsb
imul
inc
in
mov
mov
outsb
mov
cs
and
jae
adc
gs
sub
mov
push
cmp
adc
leave
ds
je
daa
inc
iret
shl
enter
jg
out
out
les
into
lcall
pop
fdiv
cmp
jge
cwtl
loope
push
daa
lret
or
sub
jbe
adc
je
ret
in
ret
outsb
jp
sbb
addr16
icebp
dec
and
adc
dec
pop
dec
pop
aam
aaa
ljmp
and
pop
mov
in
and
sub
rolb
xchg
imul
jecxz
pushl
sub
mov
sbb
cmp
push
push
aaa
push
loop
adc
xor
fildll
jp
pop
call
fdivr
mov
dec
hlt
inc
adc
out
or
daa
xchg
and
cwtl
movsl
sbb
mov
sub
xor
pop
repz
xor
adc
test
xlat
fnstcw
inc
adc
int3
jl
test
in
cmp
add
mov
push
push
lods
mov
js
add
cltd
mov
test
int3
cmpsb
stc
ret
hlt
hlt
jnp
jmp
pop
ljmp
sub
int3
out
out
movsb
sub
das
ljmp
pop
or
push
mov
cmpsl
les
xchg
repnz
shll
mov
mov
mov
daa
mov
in
out
cli
jecxz
xor
mov
adc
xor
das
loop
out
cmp
ja
xor
pop
pop
and
sub
mov
clc
movsb
and
push
push
out
outsb
xchg
fwait
mov
arpl
mov
adc
pop
int3
fs
stos
sub
adc
xor
addr16
sbb
xchg
loope
jo
arpl
adc
shr
in
xchg
out
inc
xchg
insb
int
dec
out
adc
or
ret
inc
lds
sbb
xchg
push
sbb
in
imul
sarb
fwait
ljmp
xor
jmp
inc
adc
push
add
and
dec
je
cmpsl
pop
sbb
or
pop
movsl
cmp
push
inc
or
mov
icebp
lods
mov
stos
arpl
jg
or
test
mov
sbb
adc
add
jle
clc
imul
imul
roll
push
nop
ret
pop
stc
sbb
mov
loope
jp
pop
int
scas
sub
mov
adc
mov
ja
xchg
into
fcoml
cmp
sbb
xchg
push
sbb
jmp
add
and
xor
aas
mov
fs
ja
fs
mov
mov
mov
xchg
lock
add
add
jae
lret
xor
mov
ja
fsubrp
cmc
mov
cmc
test
pop
dec
adc
lods
stos
and
jae
leave
or
mov
pop
and
pop
mov
mov
push
or
mov
dec
mov
roll
outsb
rolb
imul
jl
mov
popf
xor
das
inc
ds
jmp
or
jne
xor
xchg
out
cld
fdivrl
add
push
mov
xor
pushf
cwtl
insb
sbb
lret
out
jo
ja
fldcw
sti
xchg
aad
stos
ret
xchg
dec
push
sbb
jmp
cmpsl
inc
popf
pop
pop
ror
or
cmp
jp
mov
dec
cmpsl
push
pop
cmpsb
std
cltd
and
mov
adc
mov
daa
sub
cmc
cmpsb
daa
test
mov
pop
in
std
iret
cmp
pop
jno
pop
jmp
add
es
sub
add
les
dec
cld
leave
jnp
imull
pop
movsb
insb
in
jno
imul
jle
mov
scas
pop
ret
movsb
clc
push
lret
pop
mov
stc
cmp
in
push
push
fs
fwait
cmp
lds
xchg
loope
xchg
xor
mov
jno
fxam
inc
xchg
sbb
inc
adc
sub
mov
lea
sbb
sub
call
lahf
sbb
mov
jp
dec
mov
mov
rcrb
in
adc
add
negl
das
shrl
fisttpll
xor
dec
lcall
jne
xchg
or
sub
cwtl
jge
lock
fidivrl
aam
dec
in
es
adc
sbb
addr16
rorl
dec
cwtl
or
clc
loop
mov
lret
sub
das
imul
js
sbb
out
movsb
inc
cmc
cmp
pop
faddp
xor
sbb
inc
iret
pop
or
xor
stc
pop
fstl
sub
pop
jae
xchg
int
push
in
lret
mov
shl
hlt
xchg
sub
addb
jge
and
push
lea
stos
cmp
push
jg
mov
sub
rcll
and
repz
cwtl
pop
inc
mov
cli
fisubl
push
repz
clc
xor
and
out
call
das
sub
mov
bnd
lcall
sbbl
xorb
mov
pop
xor
jp
iret
adc
sar
mov
and
stos
push
push
je
outsl
push
sti
inc
rclb
shrl
jns
pop
cmp
insb
int
loope
or
xor
mov
std
test
mov
adc
rcr
cmpsl
mov
imul
loope
pop
pop
ret
out
mov
mov
jp
xor
aas
xchg
jmp
daa
int
pop
xchg
sbb
dec
mov
lret
ljmpw
jp
xchg
cltd
pop
mov
sbb
mov
icebp
mov
push
daa
arpl
cmpsl
add
cltd
jbe
xlat
jge
cmp
movsb
and
enter
enter
hlt
jne
pop
jge
mov
fstps
in
dec
das
js
xchg
or
jae
arpl
mov
pop
and
and
cld
ret
and
outsb
jge
inc
xchg
pop
or
aaa
pop
mov
mov
adc
lret
call
jns
mov
addr16
or
scas
pop
pop
aam
sub
mov
adc
arpl
mov
push
sbb
fistpl
stc
mov
add
cmp
push
scas
push
sbb
aaa
add
sub
loop
xlat
inc
sbb
or
jp
lea
aam
repnz
loop
ss
lahf
fsubr
add
push
sbb
cmp
shlb
dec
repz
add
lods
arpl
insb
loope
jae
inc
mov
xor
lahf
into
jmp
or
fisttpl
pop
cmpsb
push
cltd
fildl
loop
shlb
pusha
pop
add
iret
aas
inc
xchg
mov
rcrb
mov
xor
or
cs
or
or
lock
movsl
xchg
stos
jne
mov
testl
or
jnp
fisubs
fimull
cmp
sbb
push
loop
imul
or
or
mov
or
test
ljmp
xchg
test
mov
cmp
and
or
iret
arpl
jp
xor
or
movsl
xchg
sbb
enter
insb
in
rcrl
xchg
xlat
push
dec
push
out
stos
jecxz
out
sti
scas
sarl
fimuls
add
push
xchg
in
pop
jo
adc
cmp
lock
cmp
mov
or
jl
adc
pop
outsb
insl
mov
adc
lcall
inc
sbb
inc
imul
and
nop
rolb
adc
jno
fidivrs
cmp
imulb
stc
sub
test
add
adc
xor
lds
pop
fisubrs
mov
cmp
pop
push
decl
push
sbb
and
into
test
push
inc
jle
out
mov
outsb
inc
push
imul
inc
xlat
dec
mov
mov
test
testl
cmpsl
cmc
cmp
es
cmp
aam
dec
adc
adc
push
imul
mov
iret
sbb
mov
out
and
testl
adc
aam
js
push
pop
mov
dec
push
push
push
xchg
push
sub
xchg
push
and
into
push
test
dec
ljmp
add
idivb
sub
daa
hlt
sbb
pop
jns
mov
pop
inc
daa
mov
mov
fimuls
cmp
cld
stos
cmp
adc
rcrl
bound
inc
mov
shlb
test
mov
and
out
out
out
lods
fldenv
jno
shrb
jmp
cli
stos
push
fisubrs
ret
mov
xor
mov
jns
cmove
stos
xor
pusha
xchg
mov
xor
mov
repz
bound
pop
push
mov
lret
push
jp
push
mov
loope
hlt
dec
push
mov
ds
push
lahf
push
push
xor
cmp
push
aaa
xor
repz
addl
jmp
movsb
cmpsb
lods
test
add
add
sub
jb
fnsetpm(287
fmul
mov
lds
pop
add
jmp
inc
pop
daa
add
hlt
mul
dec
mov
nop
lcall
movsb
mov
in
dec
cmp
loopne
xchg
fdivr
pop
cmpsb
addb
push
mov
icebp
flds
nop
lahf
loopne
jl
scas
pop
xchg
mov
imul
fmuls
lret
sbb
and
ljmp
and
out
adc
inc
pop
jne
das
ljmp
jle
mov
xchg
sbb
and
sub
pop
push
mov
fsub
cmp
aad
ret
dec
dec
push
test
ficomps
sub
xchg
enter
mov
mov
sti
jmp
xchg
loope
scas
mov
jecxz
int
lret
cltd
cmc
ja
shl
mov
shlb
add
jmp
scas
in
adc
adc
jp
insl
fidivl
stos
push
loope
sub
inc
out
sbb
cmp
mov
movsl
jle
xor
cmp
mov
sub
adc
sarb
das
jmp
repnz
out
fidivs
fsts
andl
cwtl
mov
incb
fcmovu
add
jo
dec
mov
dec
pushl
mov
mov
mov
pop
aad
push
fisubrl
pop
lds
add
pop
mov
je
packuswb
jno
loope
mov
lods
hlt
mov
fcoms
xor
xchg
adc
daa
inc
dec
jno
cmp
ljmp
test
mov
sbb
ds
xchg
and
sahf
mov
js
bound
sub
cld
cltd
adc
mov
push
xchg
pop
lods
test
test
mov
inc
jl
ljmp
dec
mov
mov
inc
rep
jl
sub
mov
aas
add
cmpsb
rorb
lcall
int3
insb
pop
dec
and
rcll
mov
ljmp
jecxz
inc
jle
xor
jecxz
or
push
adc
cmp
jbe
ret
sbb
push
jmp
sub
test
imul
and
pop
mov
hlt
outsb
jmp
mov
call
mov
loope
in
mov
cmpsl
lret
ja
dec
and
pop
jg
push
cmpsb
ljmp
xor
lock
push
jo
sbb
cs
insl
iret
push
fdivrs
sti
pop
inc
shlb
mov
daa
inc
xor
and
sarb
stc
hlt
mov
xchg
ja
sti
inc
pop
sbb
xchg
or
mov
cmc
out
sbb
sbb
clc
rol
sbb
outsl
and
out
xor
mov
cwtl
dec
outsb
mov
xchg
std
popa
or
and
or
scas
cmp
enter
movsb
adc
mov
mov
sbb
inc
insb
inc
cltd
push
add
test
idivl
dec
cltd
inc
pop
pop
cmp
jae
leave
sahf
shlb
dec
pop
rorl
shll
push
movsl
sahf
nop
pop
push
call
rcll
add
xchg
adc
pop
dec
mov
mov
cld
fbstp
mov
popa
ret
sar
mov
jbe
add
es
mov
in
mov
inc
jmp
cli
cmp
xor
dec
sub
aaa
push
push
push
xchg
js
xor
xor
dec
xchg
xchg
push
leave
cmp
leave
pop
subb
test
cmpsl
push
mov
push
sub
jl
push
loop
mov
es
mov
outsl
push
les
push
mov
cld
imul
or
inc
and
xchg
mov
jb
sub
mov
outsb
inc
and
jecxz
repz
loope
into
adc
jecxz
fimuls
push
shll
add
rorl
repz
sbb
add
jmp
lds
xlat
ficompl
jmp
xchg
test
push
lret
cli
test
pop
aad
nop
sbb
inc
adc
adc
scas
imul
pop
and
into
inc
cmpsl
ljmp
shld
xchg
ljmp
mov
aad
sbb
jecxz
imul
jge
xchg
dec
adc
adc
mov
das
sub
add
scas
icebp
jg
xor
cmpsl
lret
ljmp
outsl
and
jnp
adc
add
sub
testl
int3
test
arpl
lods
mov
in
test
imul
sub
jle
test
cmp
test
mov
jp
andb
sub
jb
ret
mov
lret
ss
sbb
mov
cmpsl
cmp
push
fnstcw
mov
dec
loopne
imul
es
rorb
cmp
jnp
inc
cmc
xor
xlat
pop
inc
mov
inc
push
and
shlb
nop
scas
mov
shll
pop
push
movb
or
jae
dec
nop
repnz
mov
adc
aad
test
and
hlt
sbb
mov
pop
outsb
adc
out
aam
inc
jmp
dec
pop
push
imul
and
pop
inc
lock
out
mov
add
sub
iret
sbb
add
jp
adc
or
popa
pop
dec
testb
dec
mov
cmc
faddl
sahf
ss
test
fs
dec
xrelease
loope,pt
or
mov
mov
outsb
push
dec
sub
and
stos
pop
jg
push
aad
mov
cli
sub
push
mov
lods
in
imul
mov
out
adc
icebp
cmc
or
adc
xchg
das
out
aad
test
or
ret
rorb
mov
fmull
mov
push
sahf
jne
mov
cwtl
or
mov
xor
push
pop
lcall
xchg
ds
imulb
xlat
pop
add
popl
pop
cs
xchg
ja
sub
xor
mov
in
and
in
int
cmpsb
mov
jg
jns
mov
mov
cld
leave
popf
push
push
mov
xchg
fstps
rorb
pop
test
push
push
ss
out
pop
pop
cmpsb
inc
nop
dec
mov
es
gs
jns
cli
mov
shrb
cmp
jb
or
sahf
sbb
sbb
rcrb
inc
inc
mov
imull
mov
mov
cmpsb
fwait
sbbb
int3
mov
fmuls
loop
pop
sbb
pop
ss
jno
cmpsb
stos
cmp
xor
pushf
loop
insl
js
and
cld
shlb
mov
cmpsl
lcall
inc
imul
xchg
or
ds
add
in
cmpsl
xchg
rol
xor
into
xchg
ds
out
cmp
ret
outsl
mov
outsl
mov
movsl
push
xlat
les
inc
cli
jb
inc
sbb
mov
add
mov
mov
stc
mov
push
mov
cmp
jb
in
imul
mov
fld
mov
test
rcr
out
sub
es
stos
dec
jg
and
jnp
push
inc
lret
scas
jmp
cmp
adc
mov
and
mov
jle
outsl
mov
in
andb
mov
adc
push
out
das
movsb
nop
sbb
fcmovbe
movsb
addr16
mov
dec
pusha
sub
iret
fwait
movsb
sbb
lods
mov
cmp
pop
and
das
cmp
inc
sub
gs
mov
enter
mov
mov
dec
mov
sti
scas
cmp
orb
shl
mov
inc
movsl
pop
cmp
jecxz
shl
sub
or
inc
pop
aam
mov
sbb
fwait
and
fstpt
xchg
and
inc
dec
xchg
fisubrs
hlt
test
sbb
or
push
jg
cld
and
cli
in
inc
add
inc
sub
test
rcrl
testb
lea
sbb
addr16
subb
iret
imul
jecxz
jb
mov
shlb
imul
xchg
sbb
sbb
rorl
clc
sahf
out
dec
push
fists
push
dec
rclb
or
or
jnp
xchg
sbb
repnz
inc
sbb
push
lods
pop
cli
sar
add
hlt
adc
mov
scas
ret
or
push
std
shl
fwait
push
insl
cwtl
stos
into
test
and
aaa
cltd
ja
addr16
push
mov
gs
lahf
inc
lods
lea
clc
jp
stc
push
sbb
in
lea
fwait
xor
nop
fildll
loope
or
sub
lcall
lahf
xchg
cmpsb
cmpsl
or
stc
lret
daa
push
out
leave
and
setp
mov
jl
and
push
cli
cmp
dec
jl
push
cmp
gs
inc
jb
cmp
and
hlt
cltd
push
mov
loop
fsubrl
sbb
fisubrl
jno
sbb
xlat
add
aad
jnp
ret
stos
add
shlb
loopne
mov
sbb
mov
add
mov
cmpsb
push
shrl
es
mov
pop
push
jbe
pop
mov
enter
mov
lahf
adc
add
sub
cli
scas
loope
cwtl
cmpsl
icebp
jle
insl
jns
lret
hlt
inc
inc
outsb
dec
pusha
pop
sub
push
lahf
pop
repz
pop
in
push
mov
scas
das
sub
aad
xchg
dec
neg
mov
sahf
jmp
mov
cmp
mov
mov
dec
adc
sub
xchg
leave
in
not
xchg
xor
pop
dec
or
sbb
xchg
lret
xchg
mov
adc
psrlq
out
xor
rcrb
xchg
jae
imul
mov
push
mov
or
cmp
sahf
xchg
int
mov
mov
add
jmp
xor
mov
inc
jb
pusha
push
sbb
push
test
arpl
push
add
outsl
cmp
inc
cmp
test
jnp
ljmp
pushf
sub
adc
mov
and
jno
sub
push
add
xchg
jno
dec
sub
or
push
and
ljmp
inc
subl
sub
mov
sti
aam
jmp
pop
ret
jmp
test
push
cmp
mov
daa
cmpl
cmp
aad
outsl
call
cmp
adc
pop
inc
mov
sub
dec
jb
in
adc
sub
aad
in
cwtl
mov
push
in
inc
jge
call
add
and
das
int
pop
outsl
ljmp
push
leave
leave
inc
mov
inc
aas
pop
outsl
mov
xor
mov
insb
push
mov
mov
mov
rcrl
xor
js
loopne
adc
mov
pop
dec
mov
repnz
push
dec
jle
and
stc
fwait
ret
ret
int
cwtl
xchg
push
mov
push
mov
mov
call
out
out
xchg
jb
iret
xchg
lcall
sahf
jnp
add
pop
mov
imul
push
fnstsw
inc
adc
xlat
scas
mov
inc
mov
push
push
bound
and
in
add
push
ret
sbb
std
sbb
insl
dec
ljmp
loop
outsl
lock
adc
cmp
inc
std
subl
adc
adc
cmp
iretw
sti
mov
adc
mov
out
test
adc
push
aad
mov
test
sbb
hlt
fcoms
push
inc
jae
jb
in
xchg
mov
aam
cmp
loope
sbb
mov
fwait
shl
fnsave
inc
xchg
jno
or
gs
pop
pop
inc
push
mov
lret
push
test
dec
aas
xor
mov
cmp
sahf
inc
mov
push
mov
loope
int
fistl
loopne
inc
inc
ret
push
sbb
or
push
jae
sub
insb
pushl
sahf
out
stc
mov
sbb
push
cmp
xor
or
push
cmc
xchg
adc
pop
movsl
ret
sahf
leave
pop
movsb
jnp
sbb
mov
movsb
js
adc
or
or
loope
mov
je
and
sub
inc
fsubl
call
idivb
adc
into
jo
push
adc
in
sbb
sbb
dec
inc
sti
fsubrs
sbb
test
cwtl
xchg
repz
aam
in
fwait
mov
pop
aad
int3
daa
inc
or
stc
jmp
test
pop
mov
dec
adc
mov
js
pop
dec
cmp
test
roll
push
loopne
pop
cmp
dec
scas
ja
push
push
cs
hlt
push
rol
jae
cmp
dec
xchg
popa
jle
fmuls
adc
sub
and
imulb
mov
outsb
mov
push
mov
pushf
pushf
in
adc
int
cmp
mov
js
push
loopne
ljmp
int
ja
mov
in
inc
jg
ja
push
mov
xor
jmp
roll
add
repnz
and
mov
xchg
push
add
pop
inc
and
cmp
mov
xor
mov
lea
aaa
mov
or
and
push
dec
lods
xor
je
out
push
jmp
jg
fsubs
mov
sub
pop
loop
or
jl
icebp
and
xchg
lret
xlat
and
int3
sub
jns
sbb
loope
inc
adc
pop
repnz
inc
push
push
dec
loope
fs
call
gs
mov
push
xchg
imul
loopne
push
std
cmp
iret
cmp
push
mov
xchg
inc
xchg
pop
in
in
dec
shll
adc
add
dec
add
shll
fldcw
xor
mov
sub
mov
decb
test
pop
test
mov
xchg
mov
or
mov
int
push
addl
or
rcll
jl
add
sbb
cli
in
mov
js
fidivl
pop
cwtl
cmp
aaa
xor
outsb
push
and
jbe
out
out
pop
jns
test
mov
adc
loopne
add
iret
sti
std
mov
daa
stos
and
lea
test
movsl
dec
xchg
jnp
inc
ds
push
lahf
mov
pop
inc
popf
ss
push
lahf
repnz
scas
mov
jl
xchg
xchg
mov
and
and
arpl
jecxz
adcb
stc
scas
inc
imul
mov
push
ljmp
mov
dec
testl
pop
int
into
and
push
loopne
testb
inc
xchg
sbb
mov
or
sub
clc
imull
pushf
add
cwtl
mov
adc
dec
sub
push
aaa
fstps
fsubl
add
xor
lret
das
cwtl
enter
clc
push
sbb
adc
mov
adcb
inc
ret
test
add
out
and
inc
push
sub
add
cmpsl
int3
or
lahf
adc
data16
lods
pop
push
sub
arpl
jae
push
jb
insl
mov
push
pop
inc
and
and
pop
out
fistps
mov
adc
inc
and
mov
mov
mov
mov
lret
idiv
and
pop
push
mov
loop
mov
dec
jle
pop
fisttpll
mov
and
dec
inc
or
push
nop
mov
cltd
les
xor
mov
fs
mov
dec
pop
rcl
xchg
cltd
adc
jecxz
ret
add
jmp
xchg
popl
aaa
or
movl
xor
enter
cmc
std
sahf
xchg
imul
jg
int3
int
inc
nop
sbb
xchg
and
loopne
xor
cmp
sbb
pop
jns
or
pop
add
shlb
or
adc
mov
adcl
pop
out
into
add
lret
xchg
pop
nop
fsts
pop
inc
mov
cmp
imul
jae
lcall
das
or
push
outsb
nop
scas
data16
jne
cwtl
push
adc
outsl
cmp
test
dec
pusha
pop
aam
in
pop
xchg
pop
xchg
movsl
outsb
aam
mov
mul
jle
jmp
sub
inc
pop
insb
pop
push
push
push
andb
jae
rsm
das
lcall
or
xor
sbb
shrb
push
in
aad
mov
or
outsl
loope
xlat
xchg
sahf
loopne
ficoml
repz
dec
mov
add
sbbb
ja
adc
fs
stc
pop
sub
scas
iret
mov
aad
stos
pop
aas
mov
inc
pop
arpl
dec
dec
cmp
mov
inc
outsl
xchg
cmp
enter
jbe
test
add
inc
push
clc
or
or
insl
les
or
or
and
jno
shrb
or
push
ds
push
jo
aaa
pop
sbb
sbb
vmread
sub
mov
pop
daa
mov
shrl
pushf
xor
popa
push
aas
loopne
xchg
ret
or
push
adc
fstl
jecxz
in
hlt
pop
mov
imul
xor
push
mov
call
jb
imul
lods
mov
pop
in
dec
out
add
repz
sarl
sbb
cmp
mov
pop
cmpsb
push
in
xor
inc
xchg
mov
daa
out
and
lret
leave
add
dec
add
insb
xchg
lea
push
add
popf
insb
push
add
cmp
jno
cwtl
call
jge
test
scas
mov
clc
add
xchg
enter
or
popa
sarl
out
stos
push
mov
ret
mov
xchg
cmp
push
mov
xchg
push
lcall
xchg
lahf
das
xchg
jne
push
pop
jecxz
icebp
xchg
adc
adc
cmpl
out
mull
movsb
push
dec
or
pop
je
mov
jns
mov
mov
sbb
lret
xchg
xor
pop
inc
mov
mov
test
mov
push
xchg
aas
xchg
jecxz
pop
aam
mov
ret
xchg
push
adc
push
int
cmp
aas
pop
in
stc
frstor
adc
push
int3
mov
pop
cmp
cltd
js
outsl
mov
fmulp
mov
leave
clc
push
mov
mov
arpl
movsl
adc
andb
xor
rorb
mov
jp
sub
rclb
or
add
clc
repnz
ds
decb
add
mov
inc
jmp
or
lcall
inc
xchg
xchg
out
cwtl
and
loope
push
push
fldcw
add
cli
cmpl
sbb
pop
aam
jo
inc
es
fs
das
and
fdiv
mov
fildll
xor
mov
add
or
mov
popf
in
sub
clc
addb
fistps
push
mov
arpl
add
xchg
test
movsl
add
inc
add
clc
xor
mov
mov
xchg
shlb
scas
les
arpl
pusha
dec
pop
jns
jns
sbb
push
push
pushf
lahf
sti
add
jbe
cmp
jo
cmp
fwait
pop
pop
mov
les
fcoms
mov
ss
xchg
mov
btc
push
mov
mull
in
xchg
sub
adcl
push
or
test
ror
shr
inc
fwait
cmp
jnp
inc
pushf
stos
int
out
stos
icebp
mov
mov
lock
popf
add
pop
jne
loop
fsub
mov
aad
cmp
add
push
mov
pop
mov
sti
or
popa
test
mov
rcrb
xor
aad
cmc
scas
movsb
sbb
mov
cwtl
loopne
scas
gs
mov
and
ja
int3
cmpsl
push
rep
mov
out
pushf
mull
stos
push
lock
dec
mov
mov
and
jge
inc
cmp
push
ja
and
add
or
bt
adc
sbb
jecxz
scas
sbb
test
mov
scas
jmp
jo
inc
cmpsb
mov
push
xorl
aad
outsb
add
sub
jge
mov
push
mov
aam
hlt
mov
pop
sub
movl
fsubs
idiv
test
cmp
mov
iret
add
gs
push
or
dec
out
xchg
pop
and
jbe
or
cmc
scas
repz
adc
fbstp
xchg
dec
ficompl
dec
pop
aas
dec
mov
mov
fdivl
push
jae
mov
pusha
mov
push
xchg
jnp
mov
mov
mov
stos
pop
inc
sub
dec
adc
inc
out
mov
add
mov
and
adc
add
leave
xchg
dec
xor
inc
aas
ja
xor
pop
adc
push
mov
jbe
cmp
je
in
and
lock
shll
add
movsb
dec
test
stos
push
es
and
adc
call
cs
jle
mull
dec
jmp
ja
and
xor
pop
outsb
loopne
inc
scas
or
sub
cli
outsl
and
jns
mov
inc
push
pop
pusha
das
push
push
push
or
jne
jne
push
jns
sti
lret
lods
fcmovb
push
icebp
pop
enter
repz
mov
push
add
or
imul
mov
test
sbb
fiaddl
add
adc
loop
pop
movsb
and
in
int3
sahf
aas
mov
mov
cmpsl
pop
aam
mov
out
outsl
fdivl
jae
cmp
notb
jno
jbe
cs
dec
push
test
inc
repnz
dec
stc
pushl
mov
enter
or
pop
or
jnp
xor
xchg
adc
arpl
mov
adc
jg
out
int3
mov
ret
xor
inc
push
test
pop
test
out
out
push
aas
add
scas
add
add
and
sub
cmp
inc
gs
push
ret
push
jmp
addb
adc
lea
adc
sub
in
dec
cmp
outsl
fisubs
bound
dec
cmp
cltd
cmp
jne
sub
mov
inc
push
stc
cmp
push
es
mov
cld
push
jo
out
in
clc
jecxz
cs
repz
test
out
dec
jns
adc
cli
and
jnp
nop
aad
add
fisubrs
lahf
sarl
add
or
xchg
popf
leave
arpl
in
test
jge
xor
jecxz
xchg
dec
cltd
dec
pop
mov
inc
jae
mov
daa
mov
jmp
data16
sti
dec
sbb
clc
jae
push
pop
pop
notl
pusha
aaa
jno
imul
xchg
push
out
xchg
mov
add
sahf
cmp
ss
stos
mov
andl
pop
sub
mov
fildll
in
inc
scas
js
dec
sbb
adc
adcb
or
adc
push
mov
sti
add
cmpsl
not
dec
popf
pop
sub
cmc
pop
jae
adc
enter
add
iret
push
cmp
adc
out
cmp
cs
cmp
fucomi
adc
cs
adc
bound
lods
lods
outsl
add
push
fnstenv
sbb
pop
pop
inc
popa
dec
mov
icebp
jo
ss
std
mov
push
mov
jge
fstps
jle
lcall
imul
jl
bound
mov
pop
push
xlat
jle
lcall
fiaddl
popa
mov
push
or
cmp
xchg
stc
pop
push
stos
pop
push
push
ja
xchg
lea
cli
les
pushf
in
mov
shlb
mov
fisttpll
aam
pop
mov
or
stos
mov
test
out
popf
ja
test
jae
and
addr16
sub
ficompl
or
push
push
stc
jle
pop
and
js
mov
add
lea
pop
dec
push
xor
cli
cld
push
js
imul
dec
xchg
mov
xor
loopne
ljmp
je
and
movsb
and
pop
add
ret
call
adc
adcl
adc
pop
repnz
pop
movsb
cmp
add
dec
and
mov
fstl
test
fsubs
leave
aaa
and
jl
cmp
cmpb
cltd
xor
adc
mov
js
ficomps
adc
inc
push
insb
push
adc
cltd
fstpt
ljmp
movsl
mov
cmpsb
mov
icebp
mov
sbb
inc
xchg
inc
addr16
hlt
arpl
in
iret
mov
pusha
cmp
call
bound
out
movsb
das
adc
pmaddwd
mov
out
push
or
jmp
push
push
lds
lret
push
push
push
or
dec
ret
ljmp
test
mov
xor
dec
xlat
add
pusha
xchg
adc
add
sarl
fistpll
dec
call
aaa
dec
or
xor
push
pushf
cmpsl
loope
adc
mov
xchg
sbb
jnp
int
jb
push
inc
xchg
pusha
pushf
aam
aaa
aad
popf
xor
lds
adc
cmp
and
dec
int3
and
call
mov
push
push
cmpsl
jg
stos
jnp
jbe
shrl
lods
cmc
jb
inc
fucom
xchg
stos
xor
popf
mov
pop
ret
cli
in
dec
js
mov
jecxz
fdivrl
mov
lock
in
lods
sub
dec
lea
dec
add
in
adcb
fcomps
in
and
es
add
jb
loopne
clc
jle
lret
pushf
adc
sbbb
jecxz
ret
xor
push
iret
cwtl
xor
cmc
test
gs
push
pop
adc
neg
pushf
fmull
adcb
xchg
xor
insb
adc
mov
pop
dec
lods
daa
in
in
inc
push
repnz
mov
dec
int3
je
cmp
pop
pop
or
mov
iret
outsl
popl
leave
adc
out
inc
pop
pop
push
jmp
sahf
mov
mov
mov
push
call
push
dec
data16
loope
pop
das
out
mov
xchg
in
cltd
dec
cli
xlat
test
enter
ljmp
jo
lea
and
cmpsl
dec
movsb
lock
out
inc
mov
sbb
dec
loop
push
cmpsb
pop
adc
mov
out
cltd
mov
cmp
push
dec
and
xor
cmpsb
add
pop
push
xchg
lea
sub
xchg
fnstsw
add
xor
mov
lea
or
sbb
popa
movsl
repnz
push
es
jo
or
and
mov
sti
mov
add
mov
jnp
lods
loope
shll
outsb
insl
mov
jb
jne
les
jl
push
or
mov
repnz
cmpsb
or
das
loop
or
dec
imul
push
arpl
ds
inc
stos
sarb
int3
adc
sbb
pop
xor
jae
popl
cmpsb
movb
rcl
aam
inc
pushf
xchg
cmc
add
add
mov
loope
lds
mull
lahf
cli
pop
dec
inc
or
outsl
xchg
add
icebp
fwait
std
mov
push
fcompl
jb
jmp
lret
and
out
mov
sub
stc
mov
xchg
xor
int
pop
imull
dec
fstp
jl
ljmp
femms
scas
dec
or
pop
push
inc
ljmp
jg
add
ds
jmp
cmpb
pop
movsb
icebp
data16
lods
in
mov
lds
lods
adc
mov
dec
xchg
fadds
les
test
dec
dec
adc
movsb
addl
ret
cli
pop
out
pop
push
div
ficoms
cmpsl
fisubs
mov
xor
push
and
jno
pop
lock
dec
ror
xchg
inc
lret
lea
pushf
inc
jmp
and
push
imul
popa
nop
jae
push
lret
adc
mov
aas
mov
xchg
add
lds
cmp
sub
repz
cltd
adc
sarl
test
pop
shl
xor
cmpb
adc
icebp
movsb
pop
nop
cmp
pusha
sbb
mov
dec
push
mov
ss
loope
xchg
push
cmp
lret
mov
sarl
or
mov
mov
cmp
inc
mov
nop
or
out
xchg
fsub
sub
sbb
cmp
xchg
mov
or
sar
sub
mov
jb
stos
mov
test
fisubrl
push
cmp
pop
add
movsb
mov
pop
push
out
or
aas
and
pop
mov
add
pop
push
adc
cmpb
cwtl
inc
xor
cld
sti
mov
jl,pn
or
je
dec
xchg
nop
fistl
int
stos
add
lret
and
divb
lcall
fldcw
enter
cmp
mov
mov
fisubl
inc
sti
call
push
mov
pusha
or
sbb
mov
mov
lds
mov
stc
sub
repnz
andb
sub
lahf
or
fs
jns
in
push
xorb
fists
aam
and
mov
lods
scas
mov
fcom
cmp
push
arpl
out
gs
push
xor
mov
fisttps
icebp
mov
ds
cs
cmpsb
stos
push
and
push
adc
imul
ja
adc
xchg
in
add
sbb
rclb
pop
out
in
aad
mov
pop
in
call
adc
sbb
add
mov
sbb
adc
and
addl
pop
xor
xor
or
inc
test
pusha
lret
xchg
push
cld
mov
jno
roll
jmp
lods
xchg
popf
pop
mov
adc
inc
xchg
and
dec
cmp
pop
push
jns
cmp
mov
cmp
jmp
cmovl
fmull
lods
mov
repnz
jp
jb
popf
jb
pop
dec
xchg
xchg
lcall
dec
jns
mov
push
jl
imul
adc
enter
cmpsl
push
push
outsb
xor
cmp
es
pop
jge
test
out
aas
rcll
push
out
loop
jge
fimuls
in
movsl
outsl
inc
cld
sub
mov
inc
notb
and
mov
inc
mov
or
xor
into
inc
jg
in
lcall
inc
push
inc
pushf
fadds
mov
pop
pop
pop
xor
push
outsb
data16
call
mov
std
sbb
inc
mov
out
les
cwtd
sub
lahf
outsl
das
sub
ss
and
mov
test
xchg
pop
xor
mov
test
pop
jg
pop
movsb
ss
jb
test
jle
jl
pop
xchg
fisttps
inc
scas
sar
movsb
clc
pop
pop
xchg
or
cltd
push
adc
jnp
frstor
push
jl
call
jae
adc
rcll
inc
sub
loopne
lcall
aam
popa
lret
lds
fs
inc
pop
push
mulb
pushl
pop
mov
les
or
mov
sbb
pop
inc
add
sti
xlat
push
fnstsw
cmpsb
fdivrl
push
in
add
mov
cwtl
mov
cmp
incl
cld
mov
cmp
or
xchg
fwait
mov
mov
icebp
ret
pop
push
je
leave
in
out
inc
popf
jge
cmp
jp
pop
xchg
jb
cmp
and
adc
sbbb
xlat
dec
sbb
adc
lock
inc
lods
jnp
les
test
sahf
aas
jo
cmp
inc
pop
push
cmp
mov
push
sbb
and
rclb
xor
mov
sahf
mov
das
sub
mov
adcw
sti
xchg
xchg
enter
inc
pop
outsb
pop
or
test
push
pop
mov
sbb
js
ret
jne
or
int3
imul
adcl
add
rolb
pop
xchg
dec
xor
outsl
xor
incl
popa
push
mov
and
adc
in
sbb
lods
and
add
jae
pop
int3
aas
mov
arpl
adc
push
mov
pusha
sub
daa
pushf
adc
jge
stos
add
rcrl
sbb
mov
popf
es
push
push
cli
sub
cli
aad
mov
mov
pop
xchg
insw
stc
cli
jmp
adc
sub
imul
or
jle
inc
ret
jno
ja
lea
or
dec
std
or
inc
loopne
mov
repz
fwait
test
shrl
pop
cmp
xlat
lret
ret
lahf
outsl
xchg
loope
jmp
shl
scas
jmp
sub
insl
and
pop
sbb
jne,pt
jg
or
jb
mov
xchg
aaa
fldcw
cld
push
push
adc
bound
xor
inc
sub
dec
adc
cli
mov
mov
pop
jno
mov
fdivrl
stos
sub
xor
out
clc
xchg
pop
sbb
repz
aam
jo
xor
icebp
idiv
fsubrs
xchg
ret
sub
cmp
dec
lahf
bound
test
loope
loopne
mov
loopne,pt
adc
test
cwtl
pop
sub
sub
pop
fcomi
addr16
rorl
adc
and
sub
mov
fsubr
mov
push
jae
dec
loopne
push
mov
cli
cmp
orl
jge
test
pop
jae
or
mov
roll
int
cmp
in
push
popf
jnp
jae
add
repz
or
dec
iret
jl
jne
out
imul
ja
sarl
push
lret
insb
dec
movsl
imul
mov
mov
pop
or
data16
push
in
dec
mov
xor
fcoms
ficoml
ljmp
test
test
into
outsb
dec
arpl
mov
iret
and
jo
dec
fs
scas
outsw
pop
jno
stos
mov
jnp
cmp
nop
clc
mov
mov
push
test
subb
cmp
roll
cmp
loopne
push
jo
lods
out
popa
pop
sti
xor
test
inc
inc
nop
add
gs
push
add
xchg
cmp
popf
fisttpll
aam
mov
or
nop
popf
push
sbb
roll
mov
repz
jge
les
push
js
icebp
neg
je
cmp
icebp
pop
mov
fwait
outsb
sar
ss
mov
cmpsb
out
push
dec
mov
dec
shll
inc
bnd
stc
gs
and
cli
repnz
pop
mov
dec
imul
ret
adc
add
mov
hlt
cmp
add
cltd
rcrl
out
popf
lcall
cmpsb
xchg
jge
and
cmp
cli
sti
popa
fwait
out
fxam
movsb
not
dec
mov
ficoms
cltd
sub
popa
shl
in
xchg
aad
cwtl
xor
lods
ret
fmul
add
xor
in
sbb
shlb
fwait
dec
fstpt
jle
inc
sbb
jns
xor
scas
pop
test
mov
cmp
gs
icebp
stos
ret
add
das
mov
jbe
adc
xchg
mov
push
in
dec
dec
nop
sahf
add
lods
cmp
inc
stos
mov
pop
test
scas
dec
cld
ret
daa
pusha
mov
idivb
arpl
push
mov
sbb
dec
pop
sbb
add
dec
mov
adc
jbe
hlt
loope
and
into
insl
aaa
and
in
or
cs
ss
out
ljmp
or
and
mov
and
fcomps
xor
lea
es
push
cmc
loop
nop
cmp
js,pn
mov
scas
xlat
mov
push
popf
dec
and
fs
dec
out
sarl
mov
xlat
cmp
and
fidivrs
push
icebp
xlat
push
lea
lahf
into
stos
push
into
inc
mov
push
jl
xchg
sbb
aas
mov
or
and
dec
mov
xor
mov
cmp
jo
enter
pop
hlt
inc
aas
insl
pop
gs
nop
divl
push
xchg
repnz
jno
int3
test
jmp
jns
cs
mov
cmc
imul
jecxz
sbb
add
jnp
mul
daa
dec
je
and
xor
ja
or
mov
jns
and
pop
adc
push
mov
icebp
in
negl
xchg
out
in
mov
jne
ds
outsb
fnstenv
lret
frstor
jp
jns
push
xorb
mov
add
loope
adc
mov
or
adc
xchg
movsb
leave
aam
imul
cmp
mov
imul
pop
test
test
int
cmpsl
dec
fbstp
rcrl
pop
mov
inc
aas
test
pop
dec
mov
add
out
ret
or
lods
adc
push
rclb
mov
xchg
clc
push
test
lahf
or
sub
bound
and
xchg
mov
dec
cld
out
dec
push
xlat
push
pop
sub
int3
jb
mov
lds
add
sub
jle
sbb
dec
jae
sbb
les
push
xchg
jb
dec
lds
lds
mov
xchg
loopne
fistps
fisubl
xchg
scas
cmc
xor
outsl
xor
xor
mov
add
divl
fidivl
and
xchg
addl
dec
movsl
pop
orl
test
and
pop
mov
out
pop
movsl
ja
sub
rcll
push
and
icebp
xchg
cmp
out
pop
and
sti
shlb
subl
int3
scas
xchg
mov
sbb
enter
mov
inc
sti
pop
pop
scas
std
rol
xchg
add
call
mov
jmp
movsb
xlat
xchg
movsb
mov
mov
push
testb
add
sub
xchg
mov
aas
notb
inc
aad
push
push
mov
cmp
xchg
pop
out
xchg
mov
gs
xchg
movsb
push
sti
or
mov
mov
bound
mov
cmpb
imul
adc
lret
scas
cmpl
jae
mov
adc
aas
xchg
push
cmp
add
push
test
stos
pop
lret
mov
and
or
jge
fnstsw
xchg
mov
in
sbb
push
sub
stc
repz
mov
int3
mov
xchg
dec
sub
rcrl
pushf
push
push
scas
movsb
aad
jmp
pop
push
out
cmc
lretw
push
lea
xorb
pop
mov
cli
insb
roll
cmp
mov
inc
andl
add
mov
or
push
and
mov
xor
int
sbb
pop
rolb
ja
cmp
mov
js
dec
pop
lea
sbb
stos
stc
mov
mov
dec
or
mov
or
xor
pop
mov
lret
push
xor
jae
and
dec
cld
cmc
dec
lea
xlat
adc
sub
sahf
enter
cwtl
pop
rcrb
pop
push
cmpb
cmp
test
lods
mov
jne
jp
and
sti
pop
and
pushf
jbe
mov
jmp
push
mov
jecxz
addb
repnz
idivb
cmp
cs
shll
ja
sbb
and
sub
sbb
dec
rcrl
inc
push
xchg
pop
sub
insl
pusha
or
pop
mov
cmp
int3
jne
pop
into
les
lcall
or
xor
mov
in
loop
push
xor
sub
mov
stc
sub
loop
movsb
repz
out
mov
cmp
or
mov
push
cmp
popf
mov
insb
xchg
in
add
jo
mov
sub
iret
pop
loop
int3
jg
imul
xor
test
sub
mov
test
mov
imul
jns
pop
push
rcrb
mov
xor
cmp
sub
sbb
sbb
test
out
mov
lods
data16
fmuls
jb
icebp
or
pop
push
add
pop
pop
dec
pop
jp
inc
out
shrb
movsb
cwtl
adc
lock
inc
pop
xor
int3
daa
add
sbb
in
mov
fcoml
push
in
pop
push
mov
pushl
or
inc
add
sbb
sti
lahf
mov
jae
shr
push
rcl
lods
in
movsl
xchg
fmul
add
push
out
jg
nop
icebp
mov
stos
cwtl
aas
out
xor
inc
sub
andb
mov
jmp
adc
movsb
and
xor
xchg
dec
push
dec
lods
xchg
dec
insl
inc
sub
fistps
pop
insb
outsb
pop
fxch
adc
pop
inc
sbb
fcomi
add
mov
dec
add
sti
mov
mov
cmpsb
imul
xor
cli
dec
xchg
dec
popa
jbe
mov
or
out
hlt
lret
mov
in
insb
hlt
je
mov
pop
pushl
lock
push
pop
dec
push
push
push
add
pop
inc
lret
xchg
aam
and
cmp
mov
loope
and
inc
movsb
inc
ja
xchg
xor
orb
fisubl
push
mov
loope
mov
mov
dec
mov
icebp
shl
push
ret
mov
fsubrl
dec
push
pusha
xor
xchg
sarl
leave
stos
ss
cmp
test
mov
iret
enter
jle
cmp
pushf
shll
jo
inc
daa
rcrb
sbb
lea
push
lock
mov
in
fstl
push
wrmsr
adc
mov
in
dec
adc
fcmovnu
pop
xor
push
enter
mull
jle
fildll
leave
add
xor
nop
jmp
xor
ljmp
ss
xchg
jne
mov
push
jae
cmc
icebp
pop
pop
mov
pop
cmp
test
in
pop
xor
pop
js
lret
popa
insb
adc
xor
in
rcll
pop
adc
mov
repnz
xorl
sti
fwait
daa
mov
aas
gs
pop
fwait
mov
fcmovnbe
mov
or
fildl
lods
mov
aaa
pop
dec
je
out
iret
das
xor
out
cltd
shrb
sti
je
lahf
jmp
dec
xchg
fstl
pop
mov
add
sub
sub
adc
test
pop
test
pushf
add
loopne
cltd
loopne
pop
fs
mov
ftst
lret
out
sbb
xor
pop
lret
int3
pop
imul
dec
push
cmc
lcall
int3
mov
int3
scas
out
mov
fdivr
ja
shlb
push
mov
ret
and
jnp
dec
xchg
pop
add
lods
fldl
out
dec
stos
inc
xchg
sbb
fistpl
insl
insb
shrl
mov
movsb
inc
fcompl
and
pushf
mov
mov
xchg
push
pop
lods
pushf
adc
mov
fsubl
in
std
pop
push
cs
pop
filds
repz
das
or
leave
inc
and
aas
or
xor
sti
pop
cwtl
mov
or
dec
cld
mov
xchg
cmp
ljmp
scas
mov
jb
movsl
dec
imul
add
rorb
in
or
push
lods
out
mov
inc
js
push
jnp
sbb
incl
pop
mov
inc
or
sub
in
adc
repnz
adc
mov
cwtl
aad
xor
pop
jmp
xor
xchg
insl
sub
cmp
rcr
repz
xchg
outsl
adc
xor
jae
pop
adc
jns
test
ret
mov
xlat
nop
clc
stos
xor
int
inc
sbb
and
out
jo
jg
cli
dec
shll
inc
cmp
lods
rcll
jmp
mulb
xor
insl
xor
mov
fcompl
sub
adc
dec
jnp
or
mov
sub
sub
dec
scas
aam
int3
pushf
scas
pop
fwait
or
cmp
fld
dec
fisttpll
sbb
jne
ret
xor
xchg
imul
push
mov
daa
fs
or
cli
loope
dec
mov
test
xor
push
adc
inc
add
jnp
jo
or
lods
sbb
insl
repnz
icebp
out
loopne
out
push
pop
jp
ss
add
imull
mov
dec
icebp
inc
mov
pop
cld
add
add
insl
cmc
mov
mov
arpl
xchg
in
cmc
dec
mov
mov
test
or
or
pop
out
fldt
dec
mov
cwtl
fucom
add
sbb
scas
dec
push
jl
fildl
mov
xlat
enter
icebp
xor
xor
sbb
andl
sub
dec
cmp
cmp
faddl
into
jns
jno
xchg
or
jb
enter
iret
subb
int3
pop
inc
pop
or
add
mov
and
ret
sbb
and
cmp
xor
fisubrl
in
inc
adc
lock
adc
mov
dec
test
push
lahf
in
push
sub
movsl
ljmp
or
test
jns
jl
sbb
inc
mov
inc
repnz
pop
push
icebp
testl
dec
cmp
xchg
xor
pushf
enter
mov
cli
pop
vcvtps2pd
jae
cmp
imul
sti
ret
fstps
outsl
xchg
lahf
xchg
mov
xchg
mov
cmp
pop
and
subl
or
in
pushf
push
stos
add
in
add
out
pop
fisubrs
mov
pushl
cmpsb
jno
outsb
inc
popf
xor
push
imul
pushf
rolb
xor
sub
push
test
insb
add
int3
push
and
test
leave
push
jbe
add
jmp
mov
mov
push
mov
movsb
or
dec
sub
pop
test
ficoms
and
pop
xor
inc
mov
and
iret
jge
sub
mov
mov
xor
sub
clc
in
ret
enter
push
xchg
ret
arpl
mov
pop
pop
push
lods
cmpsl
sub
faddl
mov
arpl
cmp
fwait
jp
push
push
cmp
mov
jae
out
sub
sub
cs
jge
dec
out
cmpsl
ret
sbb
cmc
dec
test
pushf
push
mov
mov
aaa
in
sbb
fmuls
mov
add
sahf
jns
mov
lea
jb
mov
or
pop
andl
xchg
fidivs
push
sbb
jb
add
subl
mov
imul
or
inc
inc
mov
mov
mov
jp
cli
dec
add
in
jb,pn
test
decl
pop
mov
add
jmp
pop
jnp
mov
xor
out
mov
mov
xchg
cmp
sbb
int
repz
test
mov
xchg
xlat
ficoms
dec
inc
xchg
dec
test
or
xchg
push
icebp
pop
sub
fnsave
xor
mul
and
add
leave
add
mov
das
add
loop
cli
nop
pop
imul
mov
adcb
imul
loop
lods
xlat
mov
mov
cli
xor
aas
cmp
aaa
stos
ffree
idivb
adc
pop
inc
sarb
pop
xchg
ss
test
loopne
in
inc
cs
iret
and
push
push
mov
xor
mov
fs
jle
int
into
je
pop
test
dec
jb
sub
and
mov
scas
mov
out
cld
or
inc
fs
sbb
shll
xchg
xchg
add
mov
daa
push
mov
pusha
inc
sti
sahf
dec
and
xchg
add
push
sbb
addl
aaa
je
xchg
fstpl
and
movsl
enter
shrb
imulb
lcall
pop
movsb
add
mov
dec
xor
sub
insl
jmp
ss
std
imul
or
repnz
shll
bnd
xorb
fsubrs
cmp
add
mov
cmp
xchg
mov
mov
push
dec
mov
data16
sbb
push
in
iret
hlt
mov
push
rorb
pop
fwait
rolb
repnz
mov
out
jo
dec
sbb
jge
sub
gs
clc
rol
aaa
sub
or
in
aaa
fwait
das
js
loope
jne
lahf
ftst
popf
dec
rol
mov
cmp
xor
call
cltd
test
int3
cwtl
insb
scas
fnstenv
data16
jae
insl
adc
add
cld
or
mov
insb
aaa
sub
mov
adc
shrb
and
xor
or
stos
cmpsb
mov
mov
vmwrite
dec
rclb
mov
push
mov
adc
movsb
xor
xor
jmp
int
jl
push
dec
mov
push
sbb
das
aas
pop
add
fstl
cltd
mov
in
push
and
jmp
loope
lock
push
xlat
lcall
les
and
loopne
add
mov
mov
mov
cs
imul
dec
roll
xor
repz
dec
rorb
adc
or
push
faddl
ds
adc
push
aad
mov
bound
movsb
mov
adc
ret
les
scas
ret
dec
dec
pop
sub
push
clc
aaa
mov
stos
inc
aam
loop
add
xor
push
subl
leave
sub
mov
inc
and
sbb
sti
jne
mov
inc
cmp
pop
fs
popf
inc
jne
pushf
push
add
push
mov
outsb
aam
push
aam
rorl
aas
into
in
ja
test
lea
into
mov
fisttpl
cmpsb
xor
repz
lods
rolb
dec
add
pop
mov
int
shlb
movsl
mov
stc
insl
sub
sahf
ret
pop
push
lods
cmp
xchg
mov
sbb
xor
sbb
jo
xchg
gs
push
les
rolb
push
push
out
push
icebp
sbb
es
jmp
or
sub
out
cmpsl
add
mov
sbb
mov
lcall
mov
xchg
cmp
add
insl
mov
je
shlb
jo,pt
scas
cmpsb
lods
dec
fisttpl
or
mov
pop
test
movntps
mov
mov
mov
stos
inc
shll
cli
xchg
cltd
out
inc
xlat
dec
js
scas
or
dec
rclb
pop
and
jmp
fstl
and
pop
repz
jmp
enter
ret
rcr
jno
lret
ret
push
imul
dec
aaa
call
inc
cmc
in
push
ret
js
out
mov
xlat
mov
rdmsr
es
inc
mov
sub
fiaddl
xor
out
xchg
sub
addr16
add
pop
adc
jp
and
cmp
mov
xchg
xchg
cmp
xor
adcb
jge
xor
sbb
cmp
sbb
mov
aas
xchg
adc
movsl
mov
push
imul
negb
movaps
xchg
mov
sbb
mov
inc
divb
shll
into
lcall
jmp
imul
pop
iret
xor
cmpsb
or
jo
and
xchg
jae
fsubs
outsl
scas
jmp
fsubrs
test
fisubrl
subl
sub
fsubrs
mov
xor
sub
push
aas
push
sarb
loope
push
pop
jg
daa
fsubrl
and
ret
out
fsubrp
insb
mov
imul
out
das
mov
fisubs
aas
mov
xor
add
push
repz
inc
outsl
dec
in
sti
mov
mov
xchg
pop
dec
lods
inc
pop
scas
dec
push
pop
loopne
into
mov
push
inc
lods
mov
stos
sub
in
cmc
lods
sbb
clc
leave
pop
inc
mov
push
sbb
mov
clc
mov
stc
pop
jg
je
jecxz
xchg
sub
out
popa
sbb
push
mov
lds
imul
je
mov
gs
mov
mov
clc
ljmp
nop
stc
dec
mov
shll
mov
jg
jle
adc
xchg
enter
lock
popf
push
daa
mov
push
cld
in
cli
xchg
and
or
push
ss
xchg
stos
pop
inc
loop
mov
or
mov
add
cmp
xchg
inc
stc
les
lds
jg
mov
fistl
push
pop
in
mov
bound
inc
jmp
sahf
dec
cmp
or
mov
sub
sarb
xchg
fwait
adc
loop
stos
push
clc
mov
pop
inc
dec
mov
ds
mov
xchg
push
cltd
push
fstps
push
inc
test
fwait
out
xchg
testb
stos
jno
push
scas
jb
pop
aas
fsincos
loop
lock
flds
push
xor
add
test
mov
push
and
xor
popa
xchg
arpl
and
jbe
imul
xchg
insb
cmp
push
add
inc
cmp
test
xor
jle
movsl
imul
notb
das
sbb
and
cs
test
js
dec
sub
push
ja
sub
out
dec
addb
enter
cmpsb
sub
fildl
outsl
mov
add
or
jae
dec
sbb
fucomip
xchg
add
jl
rol
or
cmp
xor
jge
jno
push
sub
sbb
lahf
sbb
and
rclb
cmpsl
nop
out
mov
into
pop
or
shlb
jnp
cmp
leave
adc
pushf
add
lea
pop
xorl
or
xchg
inc
push
xor
fs
inc
repnz
push
lret
loopne
cmp
movsl
mov
aas
dec
jmp
insl
cwtl
icebp
xor
sbb
mov
in
std
sbb
int3
xchg
push
mov
daa
addl
and
out
cld
and
rcl
pop
stc
mov
cmc
movsl
or
cmpb
xchg
imul
dec
inc
xor
inc
ljmp
pop
in
xor
push
mov
aad
dec
inc
jbe
out
xorb
out
stc
xor
inc
test
inc
cmp
cmpsb
div
lret
leave
pop
scas
sbb
xor
dec
out
enter
inc
add
fcomp
movsb
insb
inc
loopne
mov
fstpt
loopne
add
xchg
xchg
add
dec
imul
aad
inc
add
or
jle
add
ret
dec
sbb
pop
sub
or
test
jno
or
dec
adc
mov
adc
and
mov
push
pop
sbb
jb
sbb
sbb
mov
mov
lock
jae
int
sub
div
lahf
pusha
sbb
dec
jnp
aam
dec
and
xchg
rclb
out
enter
pop
repnz
imul
stos
or
shrb
add
mov
cmp
jb
mov
aas
mov
cld
xchg
adc
hlt
gs
mov
jle
lea
and
push
out
sahf
sbb
cltd
jmp
outsl
pop
orl
lods
cs
push
and
cmp
adc
aas
jo
jl
test
movzbl
bndldx
ret
adc
pop
dec
jae
mov
mov
clc
sub
and
push
leave
mov
sbb
neg
add
fbld
pop
es
frstor
xor
push
pop
push
mov
push
aaa
fwait
adc
popf
pop
stos
cli
xor
fimull
mov
lret
ret
pop
push
popf
jns
dec
xor
mov
aas
cltd
mov
leave
je
cmp
push
movsb
dec
jo
dec
stos
push
pop
fistps
xor
push
popf
mov
roll
push
cmpsb
sahf
mov
and
ds
xor
pop
movsl
push
stos
jge
outsl
ret
lahf
inc
push
jge
arpl
jae
mov
ja
jmp
dec
shll
scas
mov
mov
icebp
arpl
xor
add
mov
sahf
loopne
shr
mov
addr16
sbb
cmp
shr
gs
jmp
mov
mov
divps
imul
gs
xchg
cltd
test
pop
jae
lock
aas
dec
inc
sahf
hlt
add
mov
sub
pop
movsb
in
xor
enter
js
mov
bound
xor
imul
xchg
adc
jbe
xchg
js
inc
sbb
pop
icebp
jno
push
mov
mov
mov
inc
inc
dec
pop
lea
imul
mov
add
leave
sbbb
loop
mov
and
dec
iret
mov
fs
cmp
movsl
out
jb
cmp
sar
lret
pop
mov
jl
cwtl
fcmovnbe
mov
call
orb
cwtl
lock
addb
and
in
sbb
imul
fwait
addr16
fadds
mov
orl
mov
cmc
sub
mov
pop
nop
je
and
and
out
in
xchg
pop
addr16
push
test
cltd
imul
and
cmp
sbbl
lcall
mov
mov
cmpsb
pushf
lret
mov
mov
jbe
ds
jno
lcall
sbb
sbb
xchg
inc
rorb
push
jns
add
push
into
xor
mov
inc
shl
lcall
and
push
scas
cld
push
sub
aaa
jge
mov
mov
sbb
push
pop
in
rorb
pusha
shrb
mov
repz
andb
popl
pop
in
das
push
push
xchg
in
cltd
dec
adc
xlat
xor
xchg
frstor
cmpsb
jp
dec
dec
mov
popf
mov
xor
ss
popf
in
ljmp
ljmp
enter
sti
insb
out
sbb
lods
imul
pop
icebp
xor
sub
push
lods
mov
rcr
pusha
adcl
pusha
mov
sub
icebp
fsts
or
out
aaa
and
push
dec
dec
fucompp
push
adc
add
in
sbb
in
cmp
test
push
xor
dec
popf
fcoml
mov
repnz
jbe
add
clc
ret
lods
mov
cmpsb
je
sbb
jmp
xchg
xchg
pop
cmpsb
dec
mov
mov
pop
testb
scas
push
mov
je
ror
xchg
aas
ds
test
mov
push
pop
cld
sub
add
xor
pop
adc
je
add
ss
imul
pop
lea
sub
fidivs
imul
cmc
outsl
mov
pusha
jg
push
adc
arpl
sbb
add
loopne
stos
xchg
and
xor
sbb
xchg
lcall
aam
xor
insb
lods
div
orl
ss
lahf
out
xor
out
or
sbb
xchg
pop
push
sub
mov
inc
xor
jp
push
xor
sahf
fwait
lods
ja
xchg
mov
js
sub
sbb
sbb
test
mov
or
push
arpl
das
scas
xor
std
dec
lret
pop
mov
loopne
mov
pop
adc
rcll
push
jecxz
mov
enter
pop
mov
dec
pusha
mov
cmp
add
push
lods
sbb
mov
push
mov
sub
addr16
push
inc
mov
or
mov
into
cli
loope
cmp
ljmp
in
push
repz
jo
mov
ss
out
test
mov
pop
jo
xor
shll
pushf
lret
push
dec
hlt
fisttpll
pop
fsts
jmp
pop
inc
push
cmp
or
or
add
outsl
dec
inc
fistpll
loop
vdivsd
adc
push
fwait
jb
jp
adc
mov
xor
mov
or
mov
mov
push
mov
sti
iret
sub
les
xor
cmc
cltd
mov
and
pop
pop
cmp
xchg
movsb
loopne
lods
fs
push
jne
jae
inc
or
or
sti
loop
fbld
add
or
call
in
adc
mov
enter
push
cltd
add
or
xorl
fidivrl
xor
out
cmp
imul
lock
sub
movsb
cmc
testb
and
out
clc
sbb
cmp
push
mov
nop
leave
sub
imul
or
stc
adc
or
les
mov
xor
cmp
daa
pop
cmp
xor
sbb
mov
pop
or
sbb
stos
xor
rol
jge
gs
mov
and
and
add
je
mov
popa
and
mov
cmp
clc
imul
adc
pop
rol
dec
push
xchg
add
adc
imul
sbb
js
xchg
push
insl
jbe
dec
repnz
xor
jmp
and
jns
pop
cmpsl
repz
lock
popf
sub
arpl
xor
pop
xchg
xchg
push
std
push
fsubrl
sbb
iret
ficoms
xchg
xchg
pop
inc
push
lea
xor
cmp
adc
das
pop
sub
ss
pushf
fs
sar
popa
orl
jae
lea
aam
pusha
push
mov
xchg
or
lea
pop
adc
adc
sbb
push
pop
mov
and
adc
pop
aad
add
push
std
xchg
sbb
sub
sti
jl
movsl
fisubrl
stos
jb
add
imul
mov
jo
cmp
addr16
out
lcall
in
add
and
cmp
into
mov
pusha
aad
jecxz
mov
cs
adc
xlat
fsubl
fisubl
inc
aam
xor
push
push
mov
leave
push
nop
push
and
call
inc
ret
movsb
add
mov
xorb
pop
lea
xchg
cmovs
fsubs
cs
mov
sub
pop
movsl
mov
lret
jl
xchg
decb
loope
adc
out
je
movsl
jge
jo
out
jo
dec
clc
and
xchg
xchg
push
pop
aas
fildl
mov
test
loop
xor
pop
cwtl
nop
rorb
dec
imul
popa
cmp
jne
push
pminub
sub
popl
lods
push
push
ret
rep
cmp
inc
out
in
add
or
cltd
subl
jbe
les
mov
shr
push
mov
mov
frstpm(287
iret
or
or
dec
outsl
mov
add
mov
xchg
mov
xor
cmpsb
cmc
push
dec
mov
mov
mov
aaa
clc
mov
cmpsb
inc
push
fnstenv
jnp
sub
mov
arpl
mov
iret
mov
inc
test
and
test
in
inc
insb
aam
rcrl
mov
call
sbb
shll
xor
push
fwait
sbbb
imul
inc
mov
jmp
scas
sub
cmp
dec
add
mov
or
cmp
jae
cld
mov
add
and
movsl
xor
bound
xchg
xor
fistl
addr16
imul
jge
lock
cmp
cld
dec
push
sbb
adc
push
pop
mov
push
lds
fistpll
mov
int
arpl
push
lcall
lcall
das
add
xor
sub
rcll
push
in
and
push
push
pushl
test
dec
and
fstpl
mov
push
and
sub
or
sbb
dec
call
dec
iret
or
adc
lock
inc
sti
orl
popa
cli
wbinvd
xchg
notb
scas
inc
xchg
ljmp
mov
pop
sahf
push
leave
insl
mov
push
or
xchg
jmp
lea
pop
addb
scas
imul
ret
mov
lcall
lds
add
into
out
sbb
cs
adc
fnstcw
inc
or
lret
cmp
ror
sub
sub
and
std
loope
repnz
push
test
adcb
sbb
or
imul
add
leave
rcll
sub
push
sbb
lahf
out
rcl
pop
adcb
lock
insb
lds
mov
push
pop
xor
mov
lock
cmc
lods
and
aam
sbb
mov
lret
rorb
ficoml
and
sbb
loop
jnp
or
aaa
sbb
test
int3
and
add
push
mov
xlat
out
dec
mov
enter
nop
and
fs
xor
stos
pop
dec
sarb
inc
xchg
adc
scas
hlt
dec
adcb
push
hlt
ds
lahf
xchg
xor
test
or
mov
add
int3
mov
jne
or
or
inc
stos
xchg
sbb
sub
or
repz
add
jns
rol
test
ljmp
jo
xor
jnp
sarl
out
xor
in
sbb
test
sbb
inc
cmc
pop
dec
out
test
cmp
push
push
gs
xor
fldt
push
sbb
or
pushf
xor
jae
mov
cmp
xchg
fiaddl
or
inc
test
test
jno
imul
add
loopne
dec
stos
rcll
mov
adc
sahf
cltd
sbb
fmul
add
adc
testb
mov
cld
lea
add
out
mov
scas
pop
or
lahf
out
les
add
lret
push
scas
ret
mov
jno
pop
push
outsl
data16
fsts
cmpsb
fdivl
xchg
stos
sbbl
in
mov
add
cmp
or
filds
mov
dec
sarl
mov
jns
cmp
mov
mov
daa
pop
dec
inc
cmp
mov
fstl
inc
or
outsl
push
in
ret
mov
inc
sub
pop
cmpsb
push
test
cs
subl
and
dec
jno
jmp
jecxz
int3
xor
repnz
jne
out
int
nop
enter
lret
pop
pop
xor
movsb
lods
add
subb
xor
mov
cmp
push
andb
mov
scas
pop
jne
faddl
fmuls
and
pop
fdivrl
hlt
ljmp
daa
insl
xor
add
movsb
mov
mov
int
jmp
mov
jmp
leave
xor
pop
xor
loopne
fcmovne
xor
icebp
sahf
rclb
popa
fucomp
xor
cmp
jge
aam
mov
sub
aad
dec
or
ret
and
jne
dec
push
or
das
cmpsl
adc
inc
sub
add
inc
jp
mov
xchg
rclb
test
and
in
sbb
outsl
dec
sti
xor
sti
insl
jns
or
and
in
xor
arpl
and
in
push
and
cmp
inc
jno
jecxz
cmpsl
shrl
dec
jnp
call
shlb
push
and
or
mov
jae
subb
push
loopne
inc
cmpsb
and
sti
sub
xor
xor
fwait
enter
leave
xor
xchg
adc
fcmovu
dec
pushf
dec
mov
stos
xlat
jp
dec
mov
jne
jmp
sbb
push
iret
fisubrl
mov
out
cs
test
imulb
lahf
fnstcw
adc
push
sub
cld
or
and
rcll
addb
scas
dec
mov
sbb
xchg
int3
pop
add
sub
bound
je
arpl
jno
lods
sbb
out
insl
pop
jne
pop
xchg
cwtl
xchg
gs
mov
jmp
inc
dec
rorb
leave
add
data16
pop
adc
mov
push
test
cmc
xlat
in
xor
sti
outsb
mov
mov
cmp
bound
scas
sub
leave
push
mov
dec
shrb
xor
jns
xchg
stc
movsb
lock
xchg
mov
popf
sub
sbb
cmpsb
push
jne
adc
loopne
pextrw
and
jecxz
inc
jmp
and
add
mov
mov
cmp
push
imull
and
push
and
js
insb
stc
sbb
jno
loopne
adc
std
int
mov
vmovups
cmp
jae
popa
fldcw
loop
dec
and
les
mov
ret
jae
in
xchg
mov
pop
fucom
enter
or
test
dec
aas
xchg
das
out
test
and
push
int3
pmulhw
inc
lds
popf
inc
and
outsb
loop
pop
nop
dec
sub
shr
or
jae
xor
cmp
or
adc
or
and
mov
sahf
xchg
xor
je
test
or
pop
or
clc
pop
sbb
test
cmp
jno
inc
int3
add
adcb
push
cld
push
mov
or
sbb
jbe
fsubl
xor
test
mov
int
push
fsubr
push
clc
cltd
jb
sbb
stos
mov
ja
inc
sbb
rol
stc
pop
dec
enter
dec
lret
jno
pop
outsb
movsl
test
mov
push
mov
inc
inc
sub
and
mov
cld
jns
adc
push
iret
cli
mov
xchg
dec
ja
pop
jo
push
mov
inc
in
imul
shll
cmp
jo
clc
inc
in
xchg
add
out
bnd
mov
loop
idiv
cld
cmp
fst
das
mov
and
dec
push
add
sub
pop
pusha
mov
xchg
or
test
aaa
ret
cmpsl
aaa
popa
cmp
xchg
push
and
daa
push
adc
ret
in
int
jnp
test
std
data16
mov
sbb
cmp
add
das
jp
fstl
das
ffreep
sbb
fldcw
jb
into
outsl
mov
jo
frstor
jns
mov
or
clc
orb
lods
je
or
pusha
scas
into
sub
adc
mov
mov
push
inc
test
inc
sub
sar
dec
rclb
ja
lods
insl
int3
and
dec
inc
or
aas
pop
enter
jecxz
lahf
in
mov
add
push
and
dec
fnsave
sbb
push
icebp
or
aaa
push
xor
mov
aaa
xchg
cltd
jp
scas
ja
cmp
ds
loop
loop
cmp
mov
dec
fmul
xor
jp
cmc
call
jmp
leave
ret
in
shl
or
aam
dec
jb
adc
std
dec
andb
jbe
inc
fsubp
in
xor
out
mov
push
stc
push
jo
outsl
les
and
xchg
xchg
ret
inc
jle
fwait
sti
popf
in
xchg
mov
pop
jg
inc
mov
inc
in
inc
mov
popf
lods
sbb
bound
xor
dec
arpl
push
sub
out
outsl
enter
add
pusha
sahf
or
loope
mov
mov
subl
mov
clc
pop
in
xor
stos
sbb
jp
aad
xchg
or
lock
adc
xchg
ja
ja
aaa
out
push
adc
lods
fbld
push
scas
aaa
xchg
fcmovne
pushf
idiv
lcall
ret
add
mov
push
dec
push
jmp
lahf
mov
push
nop
aaa
jg
mov
cwtl
mov
mov
lret
out
jl
inc
add
sbb
jle
mov
mov
pop
lods
pop
aam
xchg
pop
xchg
movsb
sbbl
adc
into
pop
push
or
push
in
aam
mov
outsb
or
es
outsb
cmp
sub
lock
daa
mov
stc
push
adc
movsb
add
aad
dec
popa
jnp
adc
xchg
lds
shld
ret
push
cmc
in
jl
push
and
dec
xlat
add
into
lods
lock
orl
das
loop
add
add
cltd
xchg
pop
sahf
mov
sbb
roll
aas
fwait
xchg
incl
push
lahf
jle
mov
sbb
adc
loope
cmp
push
mov
insl
outsb
pop
add
add
xlat
push
or
cltd
sbb
out
jbe
popf
mov
out
popf
and
and
out
cmpl
sbb
in
push
and
push
iret
add
dec
lock
pop
stos
xchg
xchg
dec
adc
iret
push
lret
xchg
sbb
mov
sub
ja
add
adc
enter
pop
jl
xor
pop
or
mov
das
and
icebp
xchg
cmc
jnp
icebp
lods
push
sbb
pop
pop
mov
leave
ds
inc
jae
jno
ret
sbb
out
cmpsl
mov
sub
cmp
inc
sub
dec
flds
lahf
clc
sbb
rcrb
lds
lret
cmp
xchg
jae
mov
and
cmpsb
and
lods
nop
add
addr16
cmp
mov
scas
iret
sub
sub
pop
jb
and
push
add
pop
rorl
lock
dec
push
cltd
pop
lret
cli
out
and
push
sbb
adc
paddusw
xchg
je
sbb
ss
out
inc
cs
loop
inc
arpl
or
pop
and
push
stos
ret
mov
pop
jle
in
mov
repz
push
cli
mov
inc
push
icebp
pop
test
jmp
add
jecxz
push
loope
xchg
xchg
xchg
and
imul
scas
jnp
mov
jae
sbb
stos
sbb
in
mov
jp
lret
subl
sarb
add
inc
sub
inc
add
mov
pop
mov
push
sahf
shlb
fisttpll
push
pusha
rcrb
jb
lret
dec
daa
stc
pop
pop
out
es
hlt
bnd
int3
pop
enter
cmc
rorl
ret
hlt
adc
ja
sbbb
dec
jmp
inc
mov
mov
xor
mov
push
in
push
inc
mov
test
or
cmp
xor
adc
or
jns
sub
mull
jl
nop
xchg
xor
bound
rcrl
imul
add
jne
add
js
xorb
jae
mov
loope
pop
mov
dec
pop
adc
cmpl
inc
dec
xor
pop
cmp
sbb
pop
div
out
lcall
pop
xchg
mov
lods
mov
fldl
jns
add
push
jnp
dec
imul
jl
mov
fldcw
or
loopne
ljmp
mov
push
xor
pop
cmc
pop
cmp
sub
mov
div
test
daa
int
out
daa
hlt
xchg
jo
dec
fwait
sbb
push
jnp
in
jecxz
cli
pop
cmpsb
mov
push
push
dec
imul
pop
insl
sbb
push
xor
dec
jg
xor
mov
fs
clc
push
xor
fsubr
movsb
rcrl
jge
add
jae
gs
xchg
js
or
call
mov
mov
and
pusha
test
or
mov
lods
cli
push
mov
lcall
out
add
fisttpl
lds
fwait
movsl
sbb
add
sbb
jnp
pop
lahf
out
test
pop
ficompl
jge
push
lods
repz
imul
pop
mov
out
inc
jnp
add
sbb
movsb
push
or
nop
push
ret
jne
mov
jbe
jl
push
int
or
mov
jle
aad
push
cmpsl
shlb
fldl
add
add
mov
push
lods
mov
add
and
jmp
and
ret
lods
dec
sbb
cwtl
pop
call
lcall
push
mov
outsb
mov
push
dec
mov
inc
fdivrs
in
cmc
push
sub
out
jbe
cwtl
and
sbb
or
push
mov
mov
inc
pop
cwtl
xchg
pop
and
mov
shrb
push
js
mov
inc
arpl
sbb
push
jb
fdivp
sahf
pop
arpl
psllq
lret
test
push
mov
int
mov
mov
cmp
das
pusha
xor
aas
imul
out
push
mov
xchg
pop
outsl
inc
mulb
mov
mov
xor
ret
lahf
jmp
cmp
neg
outsl
mov
aaa
idivl
scas
sbb
inc
pop
xor
cmp
push
aaa
in
or
or
lret
insl
lret
cmpsb
mov
adc
mov
outsl
subl
clc
daa
bound
cmc
mov
cmp
pop
push
test
shrb
push
scas
xchg
push
shl
lea
imul
mov
clc
mov
sar
ss
cmp
add
movsb
loop
fidivrl
dec
repz
mov
insl
int
dec
jp
and
aaa
mov
and
jl
sbb
adc
xor
dec
insl
or
fs
aam
cli
xchg
xchg
cmp
inc
outsb
leave
mov
adc
cmp
sub
sub
xor
mov
in
lea
test
or
gs
outsb
loopne
out
and
push
aaa
outsl
jno
dec
lods
gs
iret
mov
inc
in
into
mov
ret
or
outsl
cmpsl
addr16
aad
xor
stos
lahf
fidivrl
mov
add
sahf
dec
pusha
rolb
mov
mov
outsb
mov
sub
push
mov
aad
sahf
cmpsl
mov
adc
push
sbb
test
sbb
in
inc
inc
pusha
shl
mov
add
or
in
imul
shll
leave
sbb
sbb
lock
test
mov
adc
sbb
add
adc
scas
in
mov
and
sti
push
jge
jl
pop
les
and
pop
adc
xor
mov
lahf
lods
sbb
jge
aas
sbb
inc
xchg
adc
jmp
movsb
pop
add
hlt
icebp
cs
in
and
cld
je
int
mov
sub
aas
sub
cwtl
mov
rol
mov
fimull
outsb
loop
fisubl
add
pop
test
pop
adc
out
stos
ljmp
popf
scas
es
dec
mov
gs
fwait
nop
shll
je
loop
add
mov
test
sbb
mov
mov
jge
daa
dec
push
xor
adc
add
sub
fdiv
scas
jbe
mov
sub
jecxz
mov
out
scas
sbb
es
lock
sbb
ret
dec
sti
call
adc
push
xor
and
call
lahf
push
mov
lcall
movsb
mov
clc
jnp
insl
nop
and
pop
xorb
dec
jge
jnp
jmp
fstpl
cld
dec
loope
jg
jb
sbb
jge
mov
sub
mov
out
icebp
out
pop
nop
pop
mov
ret
fisttps
hlt
push
leave
and
icebp
push
add
scas
das
daa
push
sub
mov
add
test
rolb
cli
in
mov
insb
and
out
cmpsl
xchg
and
jo
mov
fnsave
jno
cmp
cld
mov
ds
aad
add
outsb
ss
add
or
call
cli
cmpsb
ja
cmc
in
pop
push
xchg
das
mov
inc
nop
movsb
xchg
and
pop
xchg
dec
popf
dec
mov
and
icebp
lahf
cmpsb
cwtl
cs
stc
arpl
movsb
jg
inc
cmp
scas
cmp
sub
dec
cmpl
mov
lcall
leave
inc
lret
dec
cltd
fprem1
cmp
popf
jecxz
pop
in
mov
aas
push
sti
es
mov
lcall
outsb
js
sbb
or
sbb
dec
in
loopne
cmp
pop
xor
jp
shlb
out
sarb
into
ss
dec
enter
ret
cld
out
mov
dec
ficomps
push
into
mov
xchg
mov
daa
dec
push
add
ror
mov
or
mov
cltd
outsb
jp
mov
jo
in
loop
stos
repnz
push
popf
pop
ret
or
mov
repz
sar
xchg
int3
loop
push
mov
lret
andl
push
mov
rcr
stos
cmc
xchg
imul
cmpsl
mov
imul
push
inc
dec
jo
push
rcrb
imulb
nop
out
cmp
shll
push
mov
cwtl
int
pop
dec
dec
cmp
ss
cmpsl
mov
orb
jno
xchg
pop
mov
sub
sub
pop
mov
cmp
in
mov
mov
push
call
sbb
out
jecxz
fisttpll
call
out
test
test
adc
ljmp
add
popl
fwait
sub
dec
mov
stc
and
test
jbe
push
dec
sti
int3
push
data16
loop
jmp
pop
push
push
fdivs
loopne
sub
out
hlt
sub
xchg
fucomp
adc
mov
adc
scas
cmp
inc
dec
fwait
sbb
pop
xor
lods
cltd
and
xor
mov
adc
test
je
in
aad
outsb
mov
dec
leave
ficoms
sub
mov
pop
shll
mov
sbb
mov
cmp
xchg
pop
lds
or
stos
js
cltd
test
dec
fidivrl
and
and
xor
fnstcw
popa
dec
fistpll
pushf
repnz
pop
push
mov
inc
ljmp
jmp
lods
xor
mov
fs
call
jl
fnstenv
mov
xor
sub
fistl
lock
out
sub
mov
dec
ss
aam
mov
in
dec
loope
call
aaa
mov
jbe
mov
xchg
jb
mov
ss
and
sbb
int
into
push
in
jl
lcall
test
out
or
aam
les
sarb
fdivl
or
cmp
pop
jge
xorb
lcall
pop
pusha
add
lret
popa
inc
imul
jle
outsb
pop
in
popa
lret
push
scas
popf
lock
pop
mov
push
add
dec
mov
mov
scas
fcoml
cmpsb
popa
push
js
and
outsl
adc
mov
xchg
lret
sbb
sub
enter
add
sbb
add
add
out
out
aad
imul
fiaddl
mov
jb
mov
xchg
adc
loope
push
cli
popf
data16
and
dec
jb
mov
jns
adc
stc
jmp
mov
pop
adc
stos
test
cmp
iret
loop
push
pop
and
jo
sub
dec
adc
xchg
test
mov
lods
xchg
mul
jb
pop
mov
or
sbb
and
push
outsl
and
adc
fadd
or
mov
out
lahf
fwait
pusha
or
mov
fnstenv
ret
mov
jb
mov
daa
aam
test
enter
call
stc
out
mov
mov
cmpb
loopne
pop
dec
cmp
lcall
jns
aad
rcl
add
cmp
clc
xchg
jle,pt
cmc
in
les
xchg
cli
scas
pop
js
gs
xor
adc
lahf
data16
int3
sub
cmpl
xor
cmpsb
into
jb
lahf
insb
inc
sub
in
adc
jmp
cli
adc
push
push
cmp
sarb
out
mov
mov
cld
test
mov
lds
mov
jns
cmp
jo
les
jns
ret
cmp
movsb
outsl
cmpsb
or
dec
sub
leave
push
adc
jle
stos
cli
lret
mov
xchg
pop
lods
or
and
vorps
cmp
and
fcoms
sub
mov
ja
jo
ret
jns
test
xor
mov
inc
sbb
mov
js
jmp
into
dec
or
lea
loop
bnd
inc
call
pop
loopne,pt
pop
test
push
add
testb
mov
in
shll
frstor
popa
shll
cltd
jne
ljmp
rorl
pop
jno
xchg
iret
int
insb
push
dec
sub
cmc
xchg
mov
hlt
adc
mov
fldl
cli
dec
push
jge
ljmp
add
add
mov
insl
movsb
sub
fisubrs
outsl
sbbb
das
push
push
pop
sub
inc
lods
mov
adc
fisubrs
or
int
fists
sub
or
mov
shll
sbb
xchg
jb
inc
adc
dec
inc
inc
jnp
sbb
imul
sbb
lods
xchg
pop
jns
inc
into
adc
jg
sahf
fisttpll
sub
shr
mov
xor
dec
imulb
adc
ss
dec
push
push
xchg
and
sbbl
addl
cs
pushf
xor
fisttps
cmp
sbb
add
mov
dec
xor
test
pop
mov
cmp
fcmovnu
pop
add
xor
push
xor
xlat
repnz
iret
jbe
add
add
jb,pt
mov
je
pop
lret
mov
int3
mov
jmp
xor
xchg
xchg
lret
hlt
jp
insl
or
mov
sti
push
or
push
add
nop
push
lcall
mov
nop
and
fisubrl
fimull
mov
sbb
push
push
mov
imulb
idivl
sahf
mov
cltd
shrl
stos
out
push
add
adc
fimuls
daa
adc
outsb
or
cmp
sbb
or
aam
cli
jno
insb
adc
shrb
pusha
sub
push
add
xchg
fistps
sub
or
mov
xchg
mov
fildl
sub
xlat
pop
repz
push
repz
ja
pop
jle
pop
js
mov
sbbl
idivl
xchg
ja
sub
fldenv
inc
aas
and
js
xchg
daa
inc
or
arpl
or
addb
inc
lret
xchg
cmp
mov
add
dec
fldcw
xor
imul
sub
movsl
imul
cltd
fs
aad
lret
or
dec
mov
inc
ds
arpl
cmp
ss
std
and
ret
and
push
jns
and
inc
pop
addr16
fwait
sub
js
daa
out
or
dec
sbb
clc
push
sub
adc
and
sub
repnz
or
es
out
in
fcoms
sbbl
test
stos
hlt
js
out
sub
scas
loop
cmc
cwtl
mov
or
and
cmp
out
imul
lret
in
dec
gs
add
cltd
lock
ds
shlb
dec
inc
in
push
fistl
loopne
in
adc
cli
xchg
lods
lret
mov
outsl
shlb
repnz
sub
adc
inc
inc
outsb
addr16
jo
dec
fs
or
xor
adc
mov
lods
pop
lret
test
scas
adc
insl
pop
xor
jg
movb
and
lahf
lds
mov
cmp
xor
cli
add
call
sbb
xchg
cmp
fsubl
lret
xchg
or
imul
cld
inc
lahf
xor
in
cltd
lret
pop
add
dec
push
movsb
stos
and
imul
fs
push
push
popf
xor
jns
sub
jg
nop
lret
das
jmp
xor
sub
jg
mov
and
aaa
cmp
cmp
mov
xchg
xor
test
push
add
add
mov
cli
movzwl
repnz
pop
pusha
clc
and
enter
mov
testb
addr16
fcoms
mov
lret
adc
nop
scas
inc
mov
enter
xor
mov
adc
dec
add
jo
fwait
xchg
xor
mov
jnp
mov
xchg
mov
pusha
pop
lock
xor
test
outsb
fstp
xlat
ljmp
jl
cmp
loopne
adc
test
sub
jno
inc
add
mov
lret
sbb
cwtl
mov
pusha
mov
lods
jge
cld
mov
out
mov
mov
imul
adc
es
sub
push
jno
out
stos
or
fs
and
pop
adc
sub
inc
in
push
jns
pop
out
lcall
lods
sar
shlw
out
push
sub
mov
jle
hlt
test
inc
and
jecxz
cmp
mov
test
adc
lret
mov
out
movsl
fbld
dec
les
pusha
in
mov
or
jb
mov
dec
and
je
negb
popf
sub
pop
inc
repz
cmp
push
mov
inc
xchg
sbb
jecxz
pop
push
mov
scas
aam
je
jno
das
test
lods
data16
adc
push
push
push
rcr
in
fs
pop
mov
shrl
fwait
imulb
hlt
xor
out
push
mov
xor
es
lcall
out
or
cmpsb
cmp
dec
or
scas
lcall
jl
loopne
cli
cmp
or
out
jae
inc
xchg
insb
push
stos
cwtl
jno
inc
mov
lods
test
mov
xchg
mov
leave
sti
or
jmp
mov
pop
sarl
add
fimull
imulb
popa
in
cli
push
out
in
cmp
xchg
sbbb
in
cmp
inc
and
sub
shl
push
inc
ja
jge
lds
push
movlps
ljmp
sbb
xor
push
pusha
jl
ret
lods
testl
int3
loopne
clc
xor
fprem
dec
xchg
mov
insl
mov
xchg
scas
shrb
mov
xacquire
mov
test
sub
enter
xchg
cmp
mov
and
sub
shll
arpl
imul
mov
stos
cmp
xchg
add
adc
adc
sub
jns
xor
cltd
push
fcompl
sbb
sub
std
mov
push
pop
adc
rcrb
loopne
xor
aad
jnp
jp
outsl
sub
or
dec
cmp
mov
sbb
mov
adc
nop
jbe
aaa
xchg
data16
cmp
sub
cld
or
stos
ds
push
cmp
sbb
rorb
cld
cmp
call
in
in
pop
xchg
hlt
inc
fisttpl
dec
jbe
pop
dec
fisubs
fcmovu
cmpsb
pop
test
jmp
jmp
js
call
test
nop
sbb
fnstenv
push
cli
mov
notl
rcrl
mov
xlat
and
in
iret
cmp
push
repz
mov
xchg
scas
mov
push
push
mov
and
mov
mov
xchg
loope
dec
jge,pt
jge
stos
ffreep
daa
dec
call
xchg
negb
mov
add
xchg
sub
mov
flds
outsl
lcall
push
test
and
or
xchg
dec
ss
in
push
pop
jmp
out
ljmp
xor
jge
sbb
jo
in
xchg
add
std
cmp
lea
lahf
mov
jbe
push
fsts
xchg
push
scas
jecxz
dec
or
xchg
jmp
mov
adc
sub
inc
loopne
addl
test
stos
divb
lret
xchg
push
aaa
sub
cmpl
out
es
ret
jecxz
fbstp
call
lcall
lret
cmp
pop
mov
xchg
pop
outsl
ficoms
stc
lea
dec
sbb
fisttpl
lret
notl
sbb
fs
loopne
fwait
dec
leave
lods
jae
dec
inc
adc
jne
xchg
jo
scas
sbb
insl
mov
pop
pop
out
aad
pushf
dec
adc
imul
clc
fldenv
push
xchg
xchg
sub
rcr
aam
icebp
clc
xchg
popf
fistpl
mov
jnp
dec
mov
lea
xchg
add
mov
xor
push
rolb
fists
cmp
mov
divl
sbb
ljmp
and
sarb
cmp
xor
xor
lock
sub
xchg
jnp
cmp
mov
fcompl
dec
jns
xor
pop
sub
je
push
int
mov
push
sbb
cld
sar
sbb
je
testb
mov
jo
aas
scas
pusha
cli
gs
push
mov
or
or
inc
scas
into
icebp
imul
xchg
out
insb
adc
ds
fstpt
inc
imul
sub
movsb
mov
sbb
lock
dec
adc
out
test
cwtl
jmp
mov
repnz
repnz
int3
pop
xchg
inc
push
sub
xor
xor
repz
push
xchg
out
push
sub
push
push
out
aaa
inc
leave
push
or
mov
cmpps
or
sahf
in
mov
lret
add
aaa
imul
jnp
in
push
dec
jecxz
mov
cmp
push
shrb
addr16
adc
cmpsb
lret
and
mov
mov
in
pop
rcrb
in
rol
mov
xchg
std
scas
add
push
cli
ljmp
imul
and
sarb
and
mov
enter
aad
pop
decb
test
jp
jle
roll
test
mov
mov
cs
add
or
xchg
negb
mov
and
pop
sbb
xchg
mov
pusha
out
loope
sahf
ret
mov
lods
ret
dec
aad
dec
popf
sbb
xor
into
lds
xor
lcall
mov
pop
mov
inc
loope
and
mov
mov
xchg
lahf
je
push
out
mov
jecxz
test
push
sbb
push
push
pop
sbb
push
xchg
mov
hlt
push
out
out
or
mov
jecxz
mov
shll
jno
add
dec
jno
scas
mov
es
and
cmpsb
xchg
shl
dec
xor
jp
loopne
dec
mov
sub
mov
into
sbb
lret
cld
pop
sbb
inc
pusha
jns
sub
scas
xchg
clc
pop
idivl
out
push
popa
mov
les
iret
lcall
mov
popa
out
das
xchg
mov
sub
mov
dec
inc
jnp
jl
vmovhpd
pusha
inc
stc
xchg
sub
dec
cli
jnp
inc
push
mov
test
stos
xchg
cwtl
mov
icebp
jbe
in
xorb
orl
popa
fsubr
data16
in
jae
movsb
mov
mov
jecxz
adc
jns
xor
sub
cmp
test
inc
sbb
and
iret
in
loop
or
pop
cmp
sti
pop
inc
lahf
mov
insb
xchg
inc
xor
jo
sub
dec
or
or
insb
mov
jbe
sub
add
stos
push
mov
sbb
pop
cmp
mov
lods
rcll
and
je,pt
inc
imul
push
and
adc
jmp
pop
sub
and
adc
xchg
mov
push
jl
subl
xor
jle
rclb
pop
or
add
jo
xchg
je
jle
inc
adc
adc
cltd
jae
stos
lret
addl
loope
mov
pop
scas
sahf
jne
mov
push
add
ljmp
sbb
loopw
aad
xchg
jl
loop
pushf
add
sahf
dec
mov
sub
sbb
imul
roll
inc
sbb
mov
cmp
xlat
js
faddp
imul
les
jg
les
push
cmp
incl
xor
leave
fstpl
test
sub
xor
pop
jecxz
das
loope
test
inc
or
lods
inc
push
pusha
add
add
cltd
cltd
sub
xchg
jbe
adc
repnz
jns
lods
jp
or
jnp
cli
adc
add
aaa
xor
fbld
cltd
xor
shlb
fiaddl
cltd
mov
mov
mov
mov
sub
les
mov
pop
adc
adc
movsl
nop
adc
lods
pop
and
push
sub
push
push
loopne
sub
in
retw
push
cmp
arpl
add
mov
mulb
dec
enter
mov
test
mov
into
data16
orb
push
dec
inc
out
jle
rcr
and
sub
adc
mov
push
mov
inc
mov
ss
data16
mov
dec
popf
sbb
into
shll
dec
out
xor
int3
dec
fdivr
pop
mov
in
dec
sub
shr
hlt
or
push
mov
movsb
cmc
mov
ret
cli
ja
sub
pop
fsubrl
aad
inc
ret
and
outsl
clc
xchg
dec
jg
mov
cmp
mov
cltd
add
out
sahf
xor
cltd
in
inc
dec
flds
pop
int3
push
dec
fidivs
push
adc
fiadds
push
jl
sub
inc
or
push
push
xchg
jmp
fcomi
daa
fcoml
gs
outsl
xchg
ret
sub
mov
aam
xchg
dec
jle
push
cmp
add
jecxz
or
mov
cli
and
fldcw
pop
sbb
mov
sub
dec
push
adc
mov
lods
inc
mov
fstp
loope
pop
xchg
mov
inc
sbb
outsl
mov
jl
cmc
jo
push
roll
xor
and
and
cli
add
addl
aam
dec
mov
into
mov
and
mov
or
push
or
sbb
mov
and
into
or
xchg
cmp
jge
fdivp
subb
add
and
loop
or
rcr
stc
bound
pop
leave
roll
in
add
sti
xor
xchg
lods
scas
dec
jg
fs
into
pop
add
push
mov
add
mov
ss
sbb
sahf
inc
sbb
jle
mov
ret
jbe
inc
cltd
inc
mov
push
dec
sbb
xchg
inc
ja
out
push
lret
dec
outsb
inc
in
mov
int3
pop
iret
push
fidivrs
add
cwtl
xchg
add
arpl
push
cltd
cmp
adc
mov
pop
punpcklbw
sti
imul
ficoml
mov
lcall
setl
and
cmp
imul
into
mov
lahf
fwait
push
or
cmp
movsl
test
inc
sub
pop
test
cmp
jb
pushf
jecxz
fisubs
push
and
loope
cli
cs
sahf
pop
rclb
lret
mov
add
sbb
ret
pop
dec
sub
sbb
sti
dec
sarb
das
jg
movsl
xchg
push
xchg
out
pop
js
mov
mov
pushf
rorl
xchg
add
stc
test
das
popf
jb
adc
nopl
mov
shr
xor
sub
pop
call
in
popf
xchg
fdivr
cwtl
lea
dec
outsl
out
lahf
pop
jecxz
mov
cmp
sti
loopne
hlt
mov
adc
jb
dec
lahf
and
dec
frstor
arpl
lcall
inc
ds
cmpsb
pop
sbb
cmc
orl
sti
leave
mov
or
stos
mov
mov
pop
push
pushf
sbb
sub
add
test
cmp
jb
push
cmp
rclb
sub
je
stos
push
mov
adc
dec
repnz
or
pop
les
fidivrl
lahf
mov
dec
or
sub
enter
adc
add
pop
xor
push
mov
scas
pop
out
mov
push
in
pop
test
lods
fildl
faddl
out
xchg
lahf
sti
mov
or
and
call
pusha
dec
inc
push
cmp
pop
stos
jp
aas
jns
dec
jbe
mov
dec
push
xchg
mov
pusha
mov
sub
fcoml
xor
fidivrl
sbbl
negl
mov
push
and
lds
dec
lahf
dec
push
les
dec
sbb
jl
movntq
out
cltd
out
scas
push
lret
repnz
icebp
xor
fstl
in
jge
push
pop
push
mov
xchg
inc
inc
rorl
xor
mov
cltd
inc
fisubrl
cmp
test
mov
bnd
xlat
cmpb
arpl
jge
or
xchg
push
inc
es
in
hlt
push
push
mov
int
push
jmp
xchg
fidivs
imul
sar
testb
arpl
mov
cmp
cli
push
out
push
xor
faddl
xor
test
jne
test
or
push
clc
sub
cld
enter
or
movsb
inc
movsb
je
dec
rcrb
mov
add
mov
and
xor
loopne
dec
imul
ret
sbb
enter
dec
out
inc
out
jo
sbb
cltd
jge
cmp
xchg
dec
test
ret
sub
xchg
mov
xor
or
shlb
jecxz
repz
imul
out
xchg
mov
pop
repnz
pusha
ljmp
pushf
xchg
xor
adc
ljmp
in
mov
pop
movsl
and
xchg
adc
test
lcall
lods
dec
outsb
leave
push
sbb
out
pop
fists
xor
shr
hlt
mov
lds
cwtl
rorl
cmpl
ret
push
sub
mov
fdivrs
push
call
or
iret
int
in
push
jmp
lods
mov
cmp
adc
dec
xor
mov
imul
mov
test
push
sbb
push
in
inc
sbb
xor
mov
fistpll
mov
insl
repz
daa
mov
cli
sti
movsl
adcl
lret
jp
cltd
lods
inc
movl
mov
cmp
push
cs
pusha
int3
push
ret
add
sbb
fs
fstl
jg
and
jmp
scas
inc
aaa
cli
aaa
push
sub
orb
addr16
aas
push
fidivrl
pop
push
sti
sub
cs
popa
iret
aad
ss
sub
sbb
stos
sbb
or
jecxz
jecxz
inc
fs
sbb
jno,pt
xchg
das
cmp
cmp
and
popa
insl
out
insl
inc
sub
inc
cmp
loope
push
fbld
mov
sbb
add
push
scas
stos
pop
cmp
inc
cmp
imul
xorb
cld
popf
adc
push
popf
es
cltd
and
repz
lret
xor
test
test
add
push
jb
shl
outsb
pop
jmp
adc
out
xchg
das
mov
mov
aas
fdivl
scas
das
test
cltd
lret
push
gs
cltd
in
out
or
ds
lods
test
gs
mov
je
arpl
shll
imul
sub
inc
fmull
push
pop
dec
xchg
hlt
push
cmp
adc
daa
push
shrl
mov
mov
hlt
cli
adc
mov
mov
push
push
test
sbb
inc
fsubrl
inc
push
mov
scas
xor
and
ror
daa
imul
pushf
sbb
xchg
add
arpl
xchg
add
pop
shr
nop
xor
test
and
push
push
ss
stc
fildl
enter
mov
cmp
lods
outsl
xchg
xor
hlt
mov
das
mov
add
js
sbb
mov
inc
xor
lcall
incb
cmp
out
sbb
rcrb
pop
mov
dec
pop
enter
js
sub
jmp
mov
leave
lods
addr16
sbb
in
sub
out
lds
push
test
loopne
test
lahf
xchg
ds
loop
add
jg
push
or
lock
test
mov
pop
shrl
xor
jle
jo
out
sub
or
hlt
pusha
inc
adc
jg
enter
insb
jp
add
sbb
ficoms
xor
fistps
inc
rcrb
pop
pusha
stos
daa
out
push
or
mov
fisttps
sbb
jnp
std
dec
xor
jmp
mov
arpl
fwait
aad
das
cmc
push
mov
clc
or
lcall
jmp
sub
int3
pop
insb
xor
sbb
adc
imul
xlat
fnstenv
dec
nop
push
sub
pop
repz
xchg
jmp
xchg
out
jbe,pt
fnstsw
lcall
mov
popa
pop
mov
adc
inc
add
push
test
and
loopne
cld
adc
sub
mov
lods
adc
shld
lcall
or
ja
daa
xchg
popf
shrb
fsubrp
mov
outsb
dec
xchg
pop
adc
sub
loopne
xor
xor
xchg
fildl
add
pop
mov
ss
adc
in
loope
jo
ror
repz
ja
jae
jns
cmpsl
lods
mov
adc
bound
in
mov
push
out
or
ja
sub
add
push
fimuls
out
or
arpl
mov
in
add
imull
daa
add
lret
or
mov
lea
fs
push
jmp
mov
inc
pop
negl
mov
outsb
dec
pop
push
jp
cld
sti
mov
sub
pop
xor
mov
cmpl
popa
mov
jno
push
lea
popa
mov
repz
notl
xor
int3
cmpsb
add
jp
adc
cmp
cmp
js
pop
shll
icebp
push
add
icebp
adc
push
leave
test
sbb
jmp
in
xchg
movsl
mov
rcll
and
orl
insb
out
inc
dec
in
push
in
inc
dec
test
nop
subl
outsl
xchg
or
out
mov
jnp
push
cld
fcoms
sub
dec
sub
into
test
pushf
idivb
fimull
sahf
push
and
jmp
inc
dec
call
add
mov
rcrl
stc
shlb
jp
hlt
cmp
xor
push
lods
dec
jge
lcall
fs
or
xorb
mov
xchg
inc
scas
cwtl
lea
movsl
xor
add
stc
push
ds
add
jg
push
mov
lods
fs
ljmp
inc
sub
imul
xchg
stos
push
mov
mov
lahf
fbstp
faddl
xor
repnz
sub
jno
xor
jmp
mov
mov
popf
std
pop
xchg
mov
cmp
movsb
jle
repz
cmp
xor
lcall
ffree
outsl
mov
es
push
and
cmc
dec
lods
les
inc
popf
xchg
inc
aad
ljmp
push
mov
lret
inc
fmul
pop
jns
test
jnp
sbb
sbb
sahf
adc
stos
sbb
cwtl
jp
dec
shll
sub
add
mov
imul
and
movsb
mov
jbe
mov
xchg
inc
les
cwtl
fsubl
sti
xchg
mov
add
rorl
push
push
mov
xor
mov
xor
gs
loopne
and
jb
scas
jg
loope
push
mov
pusha
adc
push
sub
in
or
xchg
loope
outsl
pop
daa
in
add
int
enter
sti
sbb
jmp
pop
adc
inc
mov
mov
jp
repz
cmpsl
sti
cmpb
repnz
pop
jb
jns
fwait
pop
cmc
add
fwait
insb
dec
leave
xchg
dec
adc
movl
xchg
mov
mov
data16
xchg
dec
addr16
mov
xchg
xor
ret
xchg
movsb
mov
sti
nop
repz
sti
clc
insl
mov
sbb
ds
jg
scas
mov
pusha
dec
xor
fs
cli
lods
jb
addr16
mov
mov
or
in
mov
nop
adc
adcb
cli
out
lock
and
les
jo
ret
cs
cwtl
mov
xchg
cmp
out
lret
fnstenv
or
mov
mov
rcll
stos
and
fnstcw
or
xor
fldenv
xchg
aam
sub
add
and
adc
jnp
sbb
mov
icebp
aam
pop
jmp
pop
rcll
fcomps
dec
add
bound
pop
or
int
adc
adc
pop
arpl
cmp
cmp
in
es
jb
test
adc
xchg
xchg
mov
jb
xor
mov
mov
repz
stc
sub
popa
push
bound
cltd
push
outsl
ss
pop
mov
sub
xchg
outsb
in
and
rcrb
loop
push
cmp
sub
outsl
mov
sbb
jne
push
shrb
movsb
addr16
mov
add
jnp
out
arpl
inc
mov
test
xor
push
cmp
jne
jnp
adc
ror
ss
or
mov
xlat
jno
push
mov
jae
pop
mov
in
stos
int
leave
add
pusha
pop
pop
gs
lret
loopne
pop
inc
cmp
je
fsubs
imul
aad
loopne
outsb
in
xchg
lods
stos
inc
out
out
xchg
xchg
mov
adc
test
cmp
xchg
icebp
std
jo
push
fisttps
jmp
pop
out
and
xor
xor
mov
in
test
in
xchg
or
movsb
shlb
inc
jno
push
cli
mov
and
cmpsl
pop
movsb
lods
inc
adc
or
or
jmp
or
mov
xchg
inc
in
adcl
push
orl
xchg
shlb
je
lock
mov
ja
sbb
fsubrp
mov
push
push
pop
out
lods
shlb
daa
es
lcall
push
popa
jle
cs
fsts
pushf
pusha
aad
mov
gs
les
xor
jecxz
cmp
xor
aam
jno
lret
mov
iret
xor
cmp
je
dec
add
push
mov
aaa
int3
push
or
mov
cld
test
jp
mov
xchg
cmpsb
out
xchg
push
jg
data16
inc
dec
mov
mov
inc
xlat
lods
xor
sbb
movsl
je
jp
rol
roll
in
pushf
mov
lcall
cmp
cmp
add
jae
popf
enter
outsb
shlb
bound
mov
call
jmp
gs
mov
shrb
inc
push
cli
mov
jno
sub
test
shlb
arpl
adcb
xchg
cwtl
or
iret
arpl
cmpsl
and
cmc
inc
mov
pop
sub
sahf
popa
pop
lret
mov
loope
cmp
cmp
adc
xor
lods
mov
xor
and
add
enter
imul
imul
ljmp
pop
lods
aaa
jge
test
mov
sub
out
stos
pop
mov
ret
adc
fiadds
cmpsl
cmc
cmp
fsubrs
mov
inc
jl
dec
mov
jg
cli
hlt
add
xor
icebp
xchg
cmp
in
int3
mov
and
pop
lock
dec
or
inc
xchg
dec
adc
into
mov
insb
or
cmp
pusha
mov
in
jecxz
imul
mov
fnstsw
out
aad
rorl
out
out
cld
add
icebp
daa
push
aam
sub
pop
aam
fcoml
inc
xchg
xor
int
xchg
sub
mov
jle
xorb
mov
addr16
jle
dec
popa
loop
repz
out
mov
mov
pop
ffree
arpl
into
and
in
cltd
in
adc
ret
lods
leave
stc
inc
inc
mov
push
inc
hlt
inc
add
dec
inc
jns
ds
mov
divb
push
hlt
sub
dec
xchg
cmc
and
add
adc
cwtl
sub
sarl
insl
icebp
jecxz
cltd
pop
sbb
push
cld
xor
cmp
mov
sbb
jecxz
mov
push
std
cmpsb
flds
mov
pop
out
or
sbb
das
or
jo
cld
movsl
fisttpl
add
lahf
push
mov
lods
lds
add
aaa
pop
les
cmpl
dec
mov
mov
and
pop
mov
adc
out
inc
jge
shll
inc
dec
in
mov
xor
fstp
xchg
jle
adc
jb
in
xchg
mov
rcrl
jl
jae
lds
cltd
ret
aad
inc
or
into
sbb
enter
fisttpl
nop
cmpsb
lds
pop
dec
cmp
in
and
cmp
insb
mov
push
jnp
mov
out
adc
ja
in
ss
mov
add
ss
push
test
mov
adc
outsl
fildl
mov
xchg
lds
inc
dec
out
addl
pop
mov
cmp
loopne
fwait
in
out
xchg
repz
loope
mov
out
mov
xor
aaa
xor
fs
aas
mov
rcl
std
rcl
and
cmp
hlt
inc
mov
and
ret
mov
jg
mov
sub
cmpl
and
pushf
das
loop
out
adc
cs
mov
or
inc
ss
or
mov
dec
and
sti
add
jg
sub
jbe
in
stc
push
add
jmp
subb
ret
add
repz
cmpb
xor
adc
cmp
cwtl
std
jmp
iret
add
jno
jg
xlat
push
fsin
add
cmp
push
jbe
clc
and
mov
das
stos
test
popa
sub
fstp
xchg
int
xchg
dec
movsl
divl
jmp
xchg
mov
repz
push
outsl
sub
in
mov
sub
jnp
add
inc
jecxz
inc
fdivrs
xchg
test
lock
xchg
xor
pop
rcl
mov
fidivs
pusha
mov
sbb
fsubs
mov
outsl
mov
add
xchg
xor
mov
lahf
add
mov
ss
inc
inc
nop
leave
negb
inc
jbe
adc
inc
push
aaa
int3
std
adcb
cmp
lock
or
lds
xchg
push
imull
sbb
jnp
cltd
outsb
add
inc
js
repnz
rcrb
aam
sti
mov
std
nop
jno
arpl
push
add
mov
dec
lret
adc
adcb
cmpsl
in
insb
in
pop
and
push
je
or
sub
pop
jnp
jp
adc
dec
pusha
aaa
jmp
fcoms
sahf
pop
dec
add
or
mov
ja
loopne
aas
ljmp
sbb
add
out
sbb
and
mov
in
xor
sahf
enter
loop
fnstcw
sbb
cli
cltd
mov
iret
into
and
inc
pop
jae
or
inc
enter
push
inc
ljmp
sbb
pop
addr16
daa
cli
les
or
iret
or
aam
xchg
or
jns
insl
cmp
jmp
mov
xor
adc
in
sbb
sbb
les
pop
icebp
lods
jno
adc
xchg
mov
mov
inc
or
push
inc
xor
push
call
shlb
pop
inc
xchg
mov
mov
ds
push
ja
dec
or
sbb
mul
sub
lods
mov
in
sub
ret
sub
and
mov
ret
adcl
stos
dec
test
sbb
stos
clc
xchg
mov
loop
shlb
bnd
insl
pop
js
out
pop
orb
jb
es
or
push
jno
into
jnp
push
jg
aaa
mov
adc
aam
or
inc
mov
in
into
dec
adc
in
cmp
inc
add
lahf
mov
pop
or
mov
in
push
dec
inc
popa
pop
mov
ret
add
or
adc
mov
cmp
adc
pop
and
fbstp
dec
add
adc
xor
div
in
or
sbb
push
adc
sahf
pop
jecxz
in
cmp
dec
sub
push
cmpsb
push
mov
mov
and
dec
cwtl
jo
cmpsl
gs
std
sub
in
add
xchg
ret
inc
shll
out
adc
gs
adc
jg
mov
repnz
inc
mov
xchg
inc
mov
and
cmp
outsb
pushf
mov
filds
fidivrs
jns
mov
add
dec
and
fdivrl
movsl
cmpsb
push
out
sub
and
inc
mov
xchg
arpl
scas
adc
and
or
inc
and
outsb
or
arpl
inc
inc
vpsadbw
jp
dec
les
xor
fistpll
cmp
mov
sub
shl
pop
ret
jmp
cs
daa
mov
xor
xor
mov
loope
es
cltd
mov
xchg
cmp
out
ljmp
stc
add
enter
push
fistl
ret
jno
loop
shl
dec
adc
sbb
push
pop
in
bound
mov
out
mov
dec
mov
negb
xorb
mov
cld
iret
cmpsl
jno
iret
mov
dec
sub
fbld
enter
insl
mov
push
cltd
sti
call
jmp
mov
mov
xor
and
add
push
ret
push
es
add
jo
mov
xlat
mov
inc
test
dec
jbe
inc
js
mov
and
test
mov
addr16
cmpsb
fs
mov
adc
pushf
dec
call
test
adc
jne
inc
inc
push
jns
and
mov
out
in
movsb
in
push
sub
mov
xchg
inc
mov
push
call
daa
not
fdiv
fisttps
pop
testl
adc
inc
push
push
adc
sub
sub
lret
add
mov
test
popf
fwait
add
ret
jne
loope
cmp
cmpsb
in
imul
xlat
cmp
hlt
mov
dec
sub
scas
popa
xorl
push
cli
inc
mov
ret
pop
in
mov
mov
jmp
mov
jmp
test
pop
inc
shrl
adc
lea
push
in
std
adc
push
and
cmp
dec
dec
lret
add
push
outsb
hlt
xor
std
jmp
inc
add
negl
cwtl
jmpw
mov
push
lods
imul
or
sti
add
and
stos
mov
push
dec
imul
lock
test
out
mov
notb
sbb
push
add
mov
and
jge
add
fdivrs
jne
test
add
mov
xchg
sbb
sbb
loop
mov
nop
test
and
mov
out
dec
popf
or
out
test
push
mov
cs
push
cltd
inc
xchg
test
mov
push
xchg
mov
je
push
xchg
fiadds
xor
jg
mov
mov
aad
mov
push
lret
std
lret
cmp
cmpsl
mov
lret
cmp
aas
std
out
daa
mov
lds
fcmovb
movsb
test
add
xchg
pop
push
pop
out
cmp
notb
sbbl
sub
or
pop
cltd
je
stos
cmpsl
outsl
into
xchg
adc
push
sarb
in
out
mov
xor
mov
pushf
add
push
and
sahf
orl
clc
rorl
pushf
test
lcall
movsb
jb
in
insl
clc
pushf
pop
dec
sbb
push
inc
mov
xchg
cs
fsubr
xchg
es
jge
mov
mov
mov
sti
adcl
sub
cmp
adc
cs
movsb
popf
push
cld
cs
jg
or
push
add
clc
sub
mov
push
mov
cmp
rorl
in
fcomip
pop
out
and
push
dec
icebp
fsubl
push
sbb
aaa
sbb
sub
imul
xchg
repz
repz
shlb
sub
mov
rcl
or
jecxz
sbb
mov
dec
bound
sbb
xchg
popf
bound
mov
mov
mov
push
push
pop
loope
cmpsl
hlt
lret
cs
js
add
cmp
dec
fwait
sbb
popa
dec
outsb
mov
bound
or
orl
fs
mov
push
je
cmpsl
fs
inc
shlb
mov
jl
xchg
push
pop
jns
mov
pop
iret
inc
test
dec
fstl
nop
lock
stos
xor
repz
lock
out
lea
pop
js
fcmovb
mov
fisttpl
imull
xchg
dec
add
test
imul
xor
int3
xchg
sub
pop
out
cmc
mov
js
pop
push
out
loopne
test
adc
or
xchg
pop
mov
add
int3
push
push
lret
jne
popf
sub
movsb
andl
jns
sbb
jb
lock
repnz
pop
sahf
das
xchg
lret
xchg
shrl
and
daa
ret
popf
jo
out
cmp
or
dec
out
xchg
push
mov
jb
sbb
testl
outsl
mov
jae
mov
pusha
gs
add
pop
dec
fistpll
mov
mov
pop
mov
fldt
aaa
call
or
fsubl
inc
fildl
into
jo
loope
cmpsb
fmull
push
mov
out
in
mov
or
imul
dec
mov
cmc
mov
fcoms
mov
xchg
icebp
stos
mov
mov
pop
adc
inc
hlt
movsl
sbbl
inc
call
sbb
adc
inc
xlat
push
push
pop
xor
xchg
dec
movsl
leave
dec
pop
jns
mov
js
test
mov
lret
lcall
add
jnp
sbb
shrb
fistl
jo
inc
mov
bound
testl
rdtsc
dec
jmp
idiv
jbe
add
mov
push
mov
cs
fisttpll
out
movsb
lret
mov
mov
testl
xor
testb
jno
mov
out
adc
adc
add
xor
les
push
cli
adc
mov
mov
int3
xor
push
cmc
pop
mov
in
push
cld
cmp
add
outsl
jae
jl
ficomps
jb
mull
clc
push
out
xor
arpl
pop
shrl
xchg
dec
push
icebp
dec
sub
push
mov
pushf
or
lods
dec
or
cltd
xchg
xchg
adc
fsubrs
stc
jae
mov
leave
shrb
popf
inc
mov
push
outsl
jge
push
mulb
sbbl
nop
and
lahf
lcall
adc
test
mov
pushf
lock
xchg
ror
cmp
and
sahf
into
in
fistl
mov
xchg
mov
add
inc
loope
ret
sbb
movsl
and
xor
xchg
sub
mov
add
aad
mov
pop
int
or
mov
sbb
lret
int
cmp
adc
sub
add
or
pop
pop
loop
bound
jge
js
loop
inc
push
pop
xor
xchg
cmpl
push
jmp
push
je
andb
or
enter
mov
lret
xchg
fcomps
pop
cmpsb
rolb
mov
push
push
dec
lea
ucomiss
jle
sbb
mov
lahf
mov
push
jne
call
int3
xchg
sbb
dec
and
jmp
out
xorl
aam
outsb
mov
push
mov
shlb
filds
insl
cmp
ret
sbb
loopne
xor
adc
add
xchg
jnp
jle
jle
pop
or
sub
and
push
hlt
repz
add
into
xchg
dec
jle
or
pop
dec
jne
mov
cmc
shrl
es
bound
shrb
xchg
fistpl
sub
cld
mov
adc
sub
sbb
adc
ds
sbb
cli
push
lock
pop
loop
fidivrs
setns
xor
dec
hlt
cli
adc
and
je
lret
out
mov
mov
sbb
push
push
mov
xor
sub
test
cmp
gs
jl
inc
dec
sti
push
leave
pop
and
daa
and
xchg
cmp
add
mov
dec
xchg
popa
mul
fwait
mov
push
arpl
xchg
pop
je
xchg
sbb
cmpsl
outsb
int3
sbb
xor
push
stc
test
xor
adc
mulb
je
jl
mov
jnp
sbb
sbb
dec
push
jle
ss
jo
cmp
es
xor
pushf
sub
inc
fildl
pop
imul
mov
test
enter
or
lret
scas
repz
stos
pop
cmp
out
mov
xor
sub
lock
lret
push
test
pop
decb
and
jmp
mulb
dec
movsb
out
sub
pop
fidivrs
sbb
lahf
mov
insb
ljmp
cmp
add
bound
out
xor
jl,pn
arpl
cli
dec
push
fwait
add
jle
insl
hlt
sub
pop
int
retw
mov
sub
cmp
and
push
in
xchg
xor
cmpsl
xchg
mov
leave
ja
jno
cmp
icebp
loope
aam
stos
test
and
push
lea
divb
loop
xor
jns
adc
pushf
add
xchg
jae
push
je
jmp
jo
fisttps
mov
cmovo
jecxz
ficoms
std
xor
out
jmp
mov
popa
scas
mov
lahf
cwtl
fisttpll
mov
addr16
push
xor
pop
push
psrad
or
repnz
jmp
iret
xlat
sbb
ret
or
xchg
movsl
imul
pop
lahf
lret
mov
adc
push
mov
xor
popf
in
sti
out
mov
jge
xchg
lods
lods
xchg
or
cwtl
xlat
mov
inc
or
lea
jmp
inc
sbb
fnstenv
dec
mul
lret
adcb
leave
sti
test
lret
je
xor
mov
xchg
fs
dec
inc
sub
xchg
pop
adc
addr16
stc
push
lcall
lea
sarl
mov
or
addl
pop
push
bound
loope
enter
jno
bound
push
repnz
daa
daa
cmp
negb
ficompl
shrl
dec
fwait
vmptrst
and
push
push
fidivrs
clc
push
mulb
es
in
ficoml
arpl
and
mov
loopne
pop
dec
sub
cli
xchg
scas
int3
stc
add
pop
xchg
xchg
pop
roll
enter
popa
cmp
clc
lea
arpl
sub
mov
sar
add
inc
or
jge
xchg
repz
xor
xchg
outsl
xchg
push
cmovb
jge
xor
testb
and
test
xchg
ds
xchg
and
push
ret
xor
daa
aaa
cli
dec
push
and
int3
aad
mov
jb
xchg
add
lods
negb
push
xor
jp
aam
movl
aas
sar
mov
add
adc
lods
pop
pop
jecxz
add
std
lahf
fists
pop
hlt
aas
and
mov
fstps
sbb
jle
pop
jo
sub
push
aaa
cmc
mov
xor
xchg
rorl
lret
sub
aam
popf
ror
jnp
int3
mov
fmuls
bound
xchg
idiv
outsb
and
cld
repz
lret
shrl
roll
enter
int3
push
sbb
std
jne
xchg
xchg
pop
push
dec
movsl
mov
mov
mov
or
lds
in
pop
ja
loop
mov
adc
mov
cmp
adc
mov
cwtl
inc
fnstsw
cmp
mov
push
fcmovne
nop
ficoms
and
insb
and
dec
push
loop
xchg
ds
movsl
push
mov
push
test
fadd
ljmp
cmpsl
outsl
inc
stos
push
in
pop
push
dec
ret
and
daa
xor
mov
pop
adc
xor
cli
mov
push
stos
dec
ret
and
ret
out
pop
fistpl
int
mov
lea
int
outsb
pushf
out
xchg
xchg
lods
mov
mov
clc
and
test
repnz
push
data16
add
aas
pop
and
jno
xor
mov
enter
mov
fmulp
fwait
or
push
pop
scas
out
lods
cmp
addr16
shll
or
inc
pop
int3
adc
icebp
push
add
dec
pop
sbb
xchg
es
and
cmp
cmc
fnclex
inc
cld
das
and
push
sbb
jb
mov
frstor
dec
in
cmpl
mov
add
jmp
iret
js
jnp
cld
mov
sbb
sub
pop
in
inc
jne
roll
lock
popf
out
or
in
pop
insl
xchg
movsb
xor
jno
cmc
xchg
insb
stc
ret
repz
jae
divl
push
es
bound
fwait
mov
jmp
addr16
adc
test
xchg
pop
sarl
pusha
arpl
cwtl
daa
je
inc
mov
adc
jae
mov
cmp
xor
mov
in
mov
scas
aam
push
pop
repz
xor
sub
mov
cltd
sbb
fwait
cmp
repnz
sub
iret
test
add
mov
sbb
hlt
inc
nop
imul
mov
in
xchg
xchg
out
repnz
mov
mov
pusha
leave
cltd
jns
scas
xchg
mov
dec
xor
aaa
adc
in
stc
cmp
xor
xchg
push
add
cmp
jns
sbb
shll
mov
orb
lds
ja
inc
scas
mov
pop
cld
sti
and
add
aad
xchg
fs
push
stos
in
aad
ret
lods
jno
mov
lahf
mul
push
into
pop
jmp
popa
aam
push
lods
adc
add
rcrl
inc
lock
jg
dec
fadds
js
and
daa
push
inc
ja
push
or
mov
and
ja
loop
out
movsl
andb
icebp
sti
fsts
and
imul
mov
add
inc
pop
dec
fisubrs
movsb
test
stc
dec
int
xchg
sub
in
mov
repz
mov
xor
mov
addl
mov
lahf
gs
aas
adc
shll
aad
add
jno
ss
adc
mov
addr16
push
pop
pop
es
xor
push
ret
lock
dec
mov
loope
leave
cmp
mov
xchg
cs
mov
sub
xor
enter
mov
clc
ss
mov
arpl
movsl
pop
or
imul
loope
stos
orb
fmuls
push
xchg
inc
orb
jnp
inc
in
jb
mov
mov
ret
pop
xchg
fimull
popa
xor
lds
adc
jp
pop
pop
sub
rolb
repnz
jae
add
call
inc
dec
add
pop
cmp
sarl
sbb
clc
in
mov
pop
cmpsl
xchg
xor
fs
mov
mov
cmp
cwtl
aaa
push
xor
mov
xor
jl
cld
mov
cmc
jbe
test
aaa
sarl
arpl
mov
jecxz
and
mov
pop
push
lods
jle
mov
jno
sub
lret
test
mov
or
sub
pusha
aaa
xor
sub
or
sbb
fists
xor
xlat
xchg
fimuls
push
sarb
shl
out
jno
ret
lods
in
add
push
mov
rcrb
and
js
aam
lea
sub
lret
and
and
mov
mov
xchg
xchg
mov
push
iret
jp
xchg
push
mov
js
mov
pop
mov
inc
lret
ret
mov
jle
inc
cltd
fsubl
sub
jg
push
dec
add
addb
push
cwtl
sub
xchg
xlat
popa
mov
push
sub
nop
and
or
mov
jp
ds
cmpb
push
xlat
xor
loop
shr
sub
je
dec
lahf
clc
cmp
sbb
dec
mov
rcll
cld
outsl
pushf
push
or
push
loope
sub
fsubl
shll
les
sub
push
imul
stos
mov
mov
xor
cli
rcrb
mov
mov
int3
imul
aad
mov
sar
insl
xlat
fadds
and
dec
dec
movb
out
xchg
cmp
int3
push
pop
lcall
pushf
das
arpl
and
bound
sarb
je
cs
imulb
xchg
sub
cmp
test
fnstenv
push
cltd
outsl
sub
lods
loope
adc
iret
or
cmp
out
adc
lret
xchg
mov
inc
pop
mov
cmc
in
adcb
es
loop
inc
imul
mov
push
adc
cli
fisttps
pop
dec
in
les
in
dec
sbb
push
cwtl
ret
adc
mov
shrl
dec
mov
add
mov
xor
les
mov
clc
jmp
push
test
scas
into
test
sbb
in
fwait
dec
and
mov
movsb
pop
fsub
repz
dec
inc
dec
lea
push
xor
pop
inc
jle
cltd
inc
mov
jge
cld
mov
jnp
push
out
xchg
xor
repz
bound
and
scas
push
pop
adc
mov
xor
push
jns
jnp
test
cli
mov
cmp
inc
dec
lods
sbb
cmp
mov
mov
push
fldl2e
out
iret
mov
ret
sbb
lods
jle
fwait
mov
mov
xor
stos
movsl
shl
push
add
sub
test
push
mov
push
fwait
inc
cmc
xor
pop
movsl
add
sub
idivb
je
mov
adcb
push
negl
push
push
jo
out
lahf
popa
aam
adc
add
shrb
fdivrl
and
cmpsb
test
cmpb
iret
loope
rolb
cli
adc
xchg
mov
mov
jb
mov
cmpsb
dec
les
and
cmp
cmpsb
cmp
jmp
stos
push
sbb
out
iret
jmp
cmpsl
fildll
jp
or
lahf
xchg
jl
aad
inc
mov
out
and
insl
mov
sub
mov
iret
rcrb
insl
and
fdivr
leave
push
adc
jp
sbb
xchg
psrlq
add
cld
mov
and
hlt
fidivrs
pop
xor
mov
scas
jne
lds
jo
shll
adc
add
loopne
lea
push
mov
inc
xchg
mov
and
ljmp
cmp
stos
sbb
mov
inc
fimull
inc
sub
mov
add
cltd
adc
ljmp
stos
mov
gs
jae
fbld
xchg
xchg
test
pop
pop
aaa
dec
sbb
shll
cmpb
mov
pop
dec
neg
inc
ja
mov
out
mov
pop
inc
or
dec
fcmovne
ret
loopne
outsl
fs
ret
and
jbe
push
out
mov
icebp
jge
sub
insb
xchg
dec
jae
sub
pop
xchg
fwait
jns
mov
fdivl
outsb
gs
adc
inc
sub
xchg
test
inc
dec
dec
jmp
and
stos
xchg
ret
addr16
flds
shrb
out
pop
fsubrs
pop
fbld
shll
fwait
push
inc
or
mov
movsb
js
loope
inc
dec
jle
jbe
push
cmp
stos
aad
push
mov
shll
xor
xor
shrb
mov
lcall
and
scas
push
cmp
xlat
jo
int
popf
dec
xchg
fistl
add
mov
push
add
lds
sub
or
cld
jb
add
xor
push
adcb
pop
adc
sbb
xorb
xor
jl
and
adc
push
xchg
mov
push
cmp
shll
and
bound
hlt
rcr
nop
scas
xor
jns
adc
xor
sbb
imull
push
xor
lcall
xchg
add
jl
sbb
sahf
mov
add
or
xor
sub
icebp
push
mov
sbb
pop
cld
rcr
xor
daa
cs
loopne
mov
sub
push
mov
cmp
mov
aad
fisubrs
loop
lret
fisubl
jmp
fstl
pop
push
imul
stos
mov
xor
aam
xchg
push
pop
int3
mov
jmp
in
rorb
push
pop
ret
or
aas
inc
test
and
xchg
lcall
push
test
mov
or
mov
imul
fsts
sarl
xor
adc
mov
ds
add
jns
outsl
pop
xchg
sub
call
test
movsl
pop
inc
sbb
stos
dec
mov
jmp
leave
lret
loope
ljmp
fiadds
push
or
shlb
hlt
push
sbb
loopne
in
ret
cs
imul
or
int
es
mov
mov
es
test
or
sub
rolb
jns
stos
jge
mov
pop
jno
sbb
addr16
rorb
inc
flds
std
mov
pop
xlat
inc
pop
rolb
mov
cmp
lea
repnz
dec
sti
sbb
mov
bound
xor
xchg
sti
cli
xor
scas
dec
dec
fildl
rclb
leave
cmp
andl
push
jge
jge
xchg
out
mov
adc
pop
xlat
addr16
jge
bound
pop
cmpsl
in
jno
sti
and
sub
gs
imul
loop
jl,pt
aam
and
adc
stos
dec
cltd
scas
inc
add
pop
mov
adc
imul
in
orb
dec
lods
mov
sbb
mov
xchg
scas
mov
fsts
jbe
gs
outsl
xchg
outsb
xchg
aam
push
sbb
mov
pop
push
loop
je
push
push
pop
mov
sti
ja
cltd
jge
pusha
sbb
int3
jmp
add
pop
das
test
stc
lcall
and
adc
mov
hlt
fs
fs
sub
imul
int
hlt
add
lods
jbe
icebp
xchg
dec
bound
or
sbb
cld
xchg
std
fxch
xor
cmc
cmc
dec
jle
xchg
icebp
mov
mov
add
mov
xchg
aas
cmp
sbb
sbb
jecxz
jecxz
out
stc
jo
out
xlat
sbb
cltd
mov
cmp
scas
fldcw
repnz
cs
and
jmp
sub
popa
jns
xchg
enter
imul
pop
outsl
dec
in
imul
hlt
pop
push
fstpl
bnd
das
mov
mov
inc
adc
cmp
loope
sbb
sub
adc
mov
xor
pop
xor
outsb
data16
loopne
mov
fcmovnbe
lods
insb
push
pop
pop
hlt
jl
into
push
idivb
leave
cmpsl
cli
mov
mov
test
adc
push
mov
inc
arpl
xor
inc
add
insb
in
dec
jnp
shrb
movsl
aam
jg
ja
in
ljmp
inc
mov
in
scas
pop
popf
fimuls
cmp
fdiv
jecxz
dec
cmp
addr16
sbb
mov
mov
lret
pop
inc
cmp
sahf
fiadds
cmp
jle
adc
jae
cwtl
aam
jb
jo
sub
mov
outsl
add
push
movsl
fxch
faddp
movsl
pop
sbb
clc
es
and
rorl
jbe
loopne
or
nop
xor
cmpsb
mov
mov
inc
sbb
les
jb
cwtl
push
leave
add
mov
xchg
push
retw
push
add
dec
mov
aaa
dec
xchg
inc
mov
movsl
shlb
cmp
pop
in
mov
pop
mov
arpl
jmp
mov
adc
in
aas
scas
cmp
adc
pop
outsb
pop
fsubl
push
das
int3
adc
mov
cltd
mov
xchg
mov
and
inc
mov
aas
mov
mov
aaa
sbb
ret
jae
das
clc
sbbb
sti
dec
and
das
or
jne
push
adc
adc
lret
hlt
and
ja
cltd
pusha
shr
mov
or
ret
add
lahf
ds
nop
push
pop
aas
cli
sub
inc
stos
push
inc
inc
sub
sub
push
aam
ja
sbb
mov
aaa
jbe
fnstcw
in
adc
fldt
xor
mov
or
cmp
xchg
test
fs
xor
repnz
pop
xor
pop
jnp
sti
sahf
repz
sbb
loope
sub
xchg
into
jle
mov
and
imul
jns
out
sbb
arpl
pop
pushf
in
and
outsl
xchg
cmpsb
loopne
push
cmc
insb
inc
push
jne
loop
lcall
cmp
pusha
pop
mov
int3
xorb
js
inc
in
dec
push
dec
inc
std
pop
push
lahf
xor
int
mov
push
adc
adc
adc
ret
cmp
push
ret
decb
xchg
sarl
into
sbb
jae
add
ret
mov
sub
dec
notl
scas
loopne
out
lahf
cmp
mov
negb
mov
mov
negb
jecxz
out
add
lock
push
jno
sahf
es
jmp
adc
inc
pop
mov
mov
jmp
jle
frstor
xchg
andl
shl
imul
out
sarl
push
ficoml
pop
mov
push
lahf
push
mov
movsb
xor
inc
js
xchg
test
jle
test
and
subl
inc
jl
mov
jp
fnstsw
sub
mov
mov
ret
jae
or
sub
pop
pop
out
push
ds
cwtl
mov
cmc
fbstp
lock
and
xchg
repz
cmp
cmp
pop
jns
faddp
stos
ficoms
or
dec
nop
scas
into
or
adc
inc
dec
push
sti
popf
dec
aas
jmp
stos
scas
aam
mov
js
testb
push
lcall
ss
mov
adc
lret
xchg
data16
cwtl
ljmp
sbb
xchg
inc
and
out
iret
jae
in
or
scas
cmc
leave
pop
xor
inc
jg
test
aam
dec
jae
roll
dec
cmp
pop
aas
mov
inc
lds
mov
mov
js
jg
scas
bound
dec
xchg
dec
aad
push
xor
inc
sbb
pop
ret
jae
xchg
clc
clc
jb
movb
addb
inc
mov
cmp
push
out
loop
cltd
adc
adc
ret
stc
xchg
inc
je
dec
sub
inc
sbb
in
pusha
rolb
andb
pop
mov
mov
inc
shll
pop
andb
out
in
xchg
shl
dec
jo
shlw
or
mov
adc
pusha
pop
fimuls
push
push
into
add
popf
inc
es
fisttpl
sbb
hlt
aad
cltd
jnp
fs
mov
jmp
dec
jae
cltd
xor
fdivl
jp
int3
xchg
pop
sub
inc
shll
insl
insb
push
cmp
mov
push
icebp
popf
movsl
sub
fwait
stc
fdivrl
push
or
adc
add
movsb
je
push
cmp
mov
iret
mov
out
sahf
cltd
dec
dec
das
mov
pusha
pop
sub
pop
negb
mov
or
mov
ljmp
ret
push
test
xor
aas
fdivrp
fisubs
push
add
test
cmc
xchg
stos
iret
cwtl
repz
sbb
bound
inc
pop
rorb
gs
add
inc
xchg
ret
inc
popa
or
and
mov
fidivl
mov
sbb
cmc
inc
dec
into
data16
xlat
jno
or
sbb
and
sti
fwait
jne
aaa
xlat
and
mov
das
add
push
stos
inc
dec
cmc
fisttps
mov
mov
fdivl
jae
add
inc
subl
cli
mov
mov
add
jge
push
mov
push
sbb
xchg
rclb
and
ret
xor
notl
rcl
add
andb
sti
jle
fdivl
call
mov
dec
mov
clc
dec
cmp
popf
cltd
push
into
mov
xchg
pop
scas
js
push
fiaddl
cmp
xchg
shll
cld
aad
mov
push
sbb
out
xor
pushf
in
imul
sub
sub
and
add
jbe
orb
es
movsb
and
jae
lret
sbb
add
je
ja
sbb
mov
das
cmpsl
dec
test
rcll
icebp
outsb
or
cmp
mov
ss
sub
js
daa
test
js
imul
jnp
movsl
pop
cmc
popa
adc
fnsave
cld
mov
out
int
mov
aas
adc
xorl
jbe
das
stos
sub
out
xchg
dec
dec
test
outsl
add
fldcw
lahf
out
ss
xchg
jge
cmp
mov
cmpl
sub
scas
mov
xchg
inc
jbe
jge
std
mov
adc
loop
cwtl
stos
push
mov
test
sbb
dec
std
aam
ljmp
lahf
mov
push
repz
xlat
pop
adc
sbb
and
les
push
push
movsb
lret
sbb
pop
and
xchg
push
push
lods
sub
cmp
add
repnz
idivb
jp,pt
arpl
xchg
push
loop
push
fnsave
pop
sbb
dec
dec
test
mov
mov
rorl
mov
into
jmp
xchg
les
orl
flds
sbb
and
ljmp
in
jo
into
scas
or
loop
pop
mov
cmp
movsb
addr16
xor
mov
mov
dec
mov
adc
add
mov
cmc
aad
add
stc
aad
fistl
int
lods
cmovae
stos
call
or
inc
jbe
lret
sbb
cmp
cmp
xchg
jno
imul
out
into
dec
dec
dec
cltd
and
xchg
dec
mov
cld
xchg
sar
cmpb
sbb
push
cmp
cmp
mov
int3
mov
inc
dec
sarb
repnz
mov
leave
hlt
push
sub
lea
push
jnp
sbbb
mov
hlt
xchg
add
adcb
sbb
fsqrt
sub
lds
es
mov
cmp
inc
into
xchg
pop
mov
loop
inc
imul
and
mov
mov
lea
push
out
outsl
add
pop
adc
xor
outsb
pop
dec
pop
push
pop
insb
cmpl
sub
lret
cmp
bound
or
add
enter
mov
lea
icebp
das
add
mov
mov
mov
add
mov
push
mov
jecxz
stc
xor
jo
jge
pop
jo
ds
push
ds
jmp
sub
mov
les
test
add
popf
leave
mov
lock
cmpsl
sbbb
inc
xor
sub
cmp
unpckhps
leave
pop
sti
push
or
pop
pop
push
scas
xchg
lret
stc
or
mov
rcrb
leave
jmp
sub
pop
push
pop
call
or
jns
mov
mov
fisubrl
into
ljmp
test
mov
mov
add
and
jne
add
in
inc
xchg
lret
xor
jno
fnstsw
jb
inc
ret
adc
rclb
std
xchg
lcall
aas
shll
jno
mov
dec
inc
push
xor
cmpsl
aas
mov
push
jl
outsb
lcall
cmp
xchg
inc
stc
rolb
dec
lea
mov
clc
push
push
and
pop
in
testl
jns
mov
fisttps
jmp
faddl
mov
and
fisubl
dec
cmp
imul
scas
fdivrs
imul
push
mov
ret
and
inc
aaa
xor
popf
loopne
mov
call
and
cmp
cmpsl
xchg
and
add
fwait
push
addb
xchg
sbb
fisubrs
jne
jl
shlb
xchg
push
fs
ds
daa
dec
aas
dec
xchg
rolb
mov
fwait
xor
mov
xchg
or
sahf
inc
push
xchg
and
mov
imul
into
lods
xchg
adc
and
lcall
imul
push
cmp
addr16
and
outsl
mov
test
mov
xchg
sbb
inc
lahf
sbb
or
icebp
test
test
imul
lret
xchg
jmp
xor
sub
sub
jg
dec
es
jmp
imul
add
jle
inc
in
xchg
nop
pushf
dec
jle
or
jo
push
push
bound
adc
xchg
repz
push
and
in
loopne
add
sbb
xchg
mov
loopne
sub
insb
bound
pop
mov
cmc
popf
dec
xchg
imul
cmp
and
xchg
push
mov
mov
fbstp
mov
fmull
xlat
ja
sbb
push
lods
insl
js
dec
rcl
dec
icebp
loopne
fwait
push
and
ret
pusha
sarl
xchg
stc
mov
sar
sub
push
xor
lahf
out
mov
mov
inc
mov
test
iret
outsb
or
push
loope
les
pop
mov
mov
cld
sub
add
in
push
jnp
int
repz
or
mov
push
lahf
mov
out
bswap
lret
subl
hlt
jns
daa
xor
icebp
sub
leave
push
mov
push
xchg
lahf
cmpsb
dec
aam
loope
repz
out
test
fdiv
testb
mov
add
inc
mov
push
cli
mov
xor
or
lods
and
push
sbb
std
jb
out
push
rcrb
shrb
cmp
fistl
push
cmp
inc
adc
pop
pusha
loop
mov
jbe
pop
mov
test
ret
pusha
hlt
cmp
pop
xor
and
adc
out
dec
aam
aam
or
mov
test
cmp
push
mov
or
mov
xor
mov
lock
xlat
fstpl
dec
subl
iret
das
or
or
xchg
mov
or
mov
push
cmp
jp
iret
mov
mov
incb
les
add
pop
in
pop
cld
jno
call
and
mov
fwait
rorl
repnz
lret
add
les
pop
pop
imul
movsl
mov
cld
pop
sub
jne
mov
out
stc
test
mov
xorl
push
mov
and
push
fimull
out
sti
add
push
push
xbegin
addr16
add
int3
inc
arpl
outsl
jge
push
jbe
jecxz
or
shll
mov
add
mov
es
aam
or
popf
dec
roll
and
xor
adc
jns
sub
sbb
jmp
adc
cs
mov
cli
rolb
pop
data16
mov
or
xchg
adc
dec
sbb
bound
out
cmp
test
ds
bound
lock
pop
bndstx
dec
nop
jge
dec
xor
pop
xchg
jle
mov
dec
adc
imul
pop
xchg
push
ds
repz
ror
pop
add
push
lea
mulb
adc
jne
mov
jbe
rcrb
sti
enter
outsb
imulb
and
or
jne
cmc
adc
pop
lcall
scas
aad
push
or
jmp
mov
lods
shr
sar
pop
fimull
in
mov
aaa
push
aam
push
mov
cmc
dec
into
pusha
xor
lea
mov
sub
xor
aam
adcl
cwtl
insl
lods
cli
jge
mov
std
xor
or
adc
mov
sub
jnp
mov
lock
inc
push
icebp
int3
fcmovbe
psrld
jp
pop
shll
sbb
out
mov
loopne
mov
xor
mov
push
push
daa
xchg
aaa
lea
xor
stos
rorb
jno
ficomps
xchg
jmp
sub
fbld
lea
sub
mov
leave
sahf
test
inc
je
jo
xchg
daa
mov
or
cmc
cmp
movsb
sub
add
push
das
cmc
push
lds
movl
add
inc
mov
addb
cld
jb
dec
sbb
pop
pop
pop
daa
cwtl
ds
pop
mov
fstps
add
jl
mov
iret
scas
cltd
jns
enter
aaa
fs
push
jns
pushf
lods
arpl
call
mov
xlat
mov
jmp
movsl
arpl
xchg
xorl
add
sbb
and
adc
mov
dec
lds
lds
jecxz
push
fmull
push
cmp
inc
mov
les
cmp
and
lahf
dec
mov
pop
jb
es
pushf
cli
shlb
fwait
pop
bnd
jnp,pt
push
jg
xor
dec
orb
sub
insl
push
push
and
mov
fnsave
fsts
add
and
jnp
mov
push
ret
dec
movsb
dec
aaa
icebp
jg
push
and
pushf
mov
movsl
xchg
ds
das
lods
out
pusha
sbb
inc
lcall
test
cmpsb
push
out
cld
insb
icebp
test
cmpsl
cmpsb
cli
mov
inc
jnp
movsl
daa
loop
mov
push
flds
arpl
aam
fbld
adc
gs
jge
push
psllq
mov
cli
jae
cmp
pop
xor
out
rclb
jae
out
mov
mov
mov
push
icebp
pop
dec
ret
fisubl
mov
inc
mov
cli
test
cmpsl
dec
es
shrb
out
xchg
or
into
mov
in
sbb
nop
lret
mov
adc
movsb
ja
daa
inc
pop
pop
stc
mov
cmp
mov
mov
push
lcall
push
sub
pop
popa
jp
lret
int3
sub
jne
mov
in
mov
mov
or
ret
inc
fidivs
sbb
pop
fldcw
outsl
inc
divb
jp
fidivl
inc
dec
outsl
loopne
mov
push
add
dec
fdivs
dec
arpl
mov
xchg
mov
jne
outsb
and
xchg
push
xchg
sub
sub
js
enter
push
pop
clc
outsl
or
addr16
idivb
test
or
inc
cmpsl
fnsetpm(287
mov
leave
lods
xchg
shl
xlat
or
sbb
inc
push
push
test
ljmp
xchg
or
mov
pop
jno
fmull
int3
jb
jmp
cmpsl
add
lods
xchg
shll
jl
stos
jnp
das
jne
push
imul
stos
jae
and
rcr
mov
mov
lock
movsl
in
jl
int3
mov
loope
aaa
sbbb
dec
std
arpl
mov
mov
inc
and
lcall
and
xchg
cmp
scas
imul
or
adc
scas
or
leave
stc
ficompl
adc
aad
mov
mov
inc
sbb
jbe
inc
xor
test
inc
and
push
or
imul
out
pusha
push
test
ficompl
pusha
mov
and
bound
iret
mov
push
dec
and
mov
lods
cltd
mov
add
mov
fcom
enter
data16
movsl
sbbb
cmpsb
js
mov
mov
mov
push
jne
std
fwait
fwait
out
pushf
call
lcall
outsb
sbb
pop
into
cs
out
fdivp
stos
pop
and
int
or
loope
jg
ret
fimuls
xlat
sbb
sub
scas
add
imulb
mov
inc
loopne
pop
test
lea
fidivrs
adc
shll
es
and
imul
jne
stos
xlat
lret
in
js
sbb
mov
sub
mov
nopl
ds
pop
pop
bound
pop
push
mov
xor
jb
mov
lock
scas
push
jnp
lock
mov
cwtl
lock
sbb
leave
cld
xor
je
xchg
mulb
cmp
rcl
cwtl
int
jge
les
push
std
pop
mov
lock
mov
leave
add
pop
jno
adc
bound
inc
hlt
imul
xor
in
fdivs
add
stc
test
push
mov
dec
fsubs
shl
outsb
sbbb
add
jb
daa
adc
pop
push
call
hlt
xor
nop
adc
aad
lods
std
xchg
stc
push
inc
sub
sub
dec
pop
or
xchg
mov
lods
or
loop
xchg
inc
mov
and
daa
rcll
daa
pop
dec
sub
xchg
or
jecxz
add
push
push
test
shrb
lods
or
ret
lret
fdivrs
lea
leave
popa
shr
push
cmp
push
daa
adc
mov
int
cmpsb
in
daa
orl
xchg
pop
inc
jne
xchg
cwtl
mov
gs
lds
ds
jno
pop
cltd
and
jns
push
scas
lea
in
inc
xchg
cmp
mov
shll
add
inc
jno
push
jbe
jg
xor
cmp
jae
clc
sbb
inc
std
or
pop
xor
pop
js
add
ds
xchg
lcall
bound
mov
jns
pop
xor
loope
int
fists
or
push
push
jl
mov
mov
popa
pextrw
lods
inc
mov
add
add
shlb
scas
inc
push
mov
cmpb
popa
adc
inc
rcr
iret
fisttpll
gs
mov
test
out
dec
fldcw
fdivrs
mov
pop
scas
fs
and
and
ret
jl
adc
jae
sbbl
xchg
cmp
lds
pop
pop
ljmp
jb
fxch
sub
mov
rcl
mov
mov
adc
mov
mov
mov
test
xchg
or
clc
push
clc
mov
xor
adc
inc
int
pop
mov
jae
xor
mul
xor
ss
inc
in
scas
pop
adc
mov
and
jno
jecxz
popf
iret
or
mov
paddb
adc
adc
xlat
je
negb
adc
sbb
sub
fldl
daa
movsl
cs
mov
lret
push
imul
outsl
xchg
lcall
sbb
inc
lahf
xor
push
mov
aad
xchg
scas
jp
cmpsl
jp
popf
das
push
add
mov
insl
pop
adc
lret
int3
mov
rol
fsubl
cmp
iret
insb
pop
jle
mov
dec
imul
mov
sbb
adc
in
call
enter
out
int3
mov
mov
outsb
dec
add
out
jno
or
pop
cmpsb
lea
cmpsl
xchg
sub
in
xchg
pop
cmpsb
jns
jecxz
lret
bound
xchg
ljmp
ljmp
pop
popf
scas
push
dec
test
cwtl
rcrl
lret
insl
out
lahf
jle
pop
inc
test
psubq
xchg
xor
mov
push
or
cli
or
punpcklwd
or
jmp
adc
add
iret
out
cmpb
sbb
into
cld
popf
mov
cmp
pop
js
loop
out
scas
dec
sub
jge
adc
repnz
mov
leave
ss
jp
mov
iret
fidivrl
fdivrl
mov
push
aaa
fcmovne
cli
lock
fdivs
add
imul
cmp
mov
push
xchg
outsl
pop
aad
fnsave
add
mov
mov
cmp
inc
ret
int3
dec
sub
xor
push
sub
xor
xor
add
les
xor
cmp
fidivrl
loopne
into
fisttpll
insb
adc
jnp
bound
sub
cli
or
cmp
movsl
cmp
rorb
xor
cmp
add
lcall
out
push
fistpl
daa
movsl
jo
mov
sbb
movsb
or
repnz
in
cmp
lods
mov
xchg
and
rcrl
push
mov
cmp
stc
inc
imul
movsb
stos
pusha
gs
ret
outsb
lahf
sbb
mov
pop
mov
testb
mov
jg
lock
fistpll
dec
out
lea
lahf
pop
fldz
jo
mov
pop
test
pop
push
push
rcr
cmp
outsb
jne
jae
xchg
sbb
fisttps
out
and
xchg
bound
mov
mov
xor
xor
dec
xor
xor
insb
iret
and
subl
test
pop
aad
sub
subl
xchg
or
cs
jl
imul
mov
lcall
repz
xor
push
inc
cmp
dec
cmp
call
xor
mov
scas
mov
xchg
pushf
sub
push
in
mov
add
movb
push
pushf
inc
push
outsl
push
cmp
cmc
jecxz
pop
ror
add
fcomi
push
dec
adc
lcall
clc
sbb
sub
xor
jp
sarb
jae
jbe
fs
adc
push
cwtl
cmp
xor
cmp
jnp
and
adc
ret
and
jg
xchg
insb
cs
mov
mov
in
sub
mov
out
stos
je
mov
mov
leave
jns
mov
and
pop
jbe
js
push
int3
xchg
aaa
fcmovu
cmp
pushf
jae
pop
es
out
daa
int3
sar
xchg
cltd
out
mov
in
jnp
pushf
popf
shrl
fucomi
cmp
sbb
insb
dec
or
incb
xchg
dec
pop
mov
fs
aaa
imul
mov
pop
xchg
add
lea
mov
out
shll
pop
fcomps
or
dec
imul
popa
mov
adc
cmp
xchg
js
inc
fnsave
lds
push
stos
push
fsubp
ss
mov
sbb
push
pop
mov
push
sbb
push
stc
inc
pop
mov
int
push
addr16
divl
sarb
rcrl
movsb
sbb
add
push
sahf
das
push
mov
incl
push
mov
cmc
mov
jecxz
rcll
cli
pop
mov
lods
scas
add
add
pop
or
xor
adc
xchg
xchg
pop
fiadds
pop
add
and
imul
pop
mov
add
xchg
mov
sub
mov
xor
dec
lahf
negb
jbe
stc
es
std
outsl
stos
bound
jmp
sbb
daa
jo
jne
pop
pop
and
or
jg
andb
dec
test
sbb
dec
mov
cmp
push
mov
push
call
mov
mov
hlt
sti
xchg
mov
and
call
fmull
arpl
push
push
xchg
pop
sbb
loop
xchg
ja
dec
add
or
sbb
add
or
imul
movntps
push
js
pop
jae
mov
aad
icebp
inc
sbb
leave
jne
leave
adc
mov
iret
mov
dec
pop
icebp
xchg
pop
inc
mov
fstpl
enter
mov
nop
and
xchg
repnz
or
lahf
jns
lea
pop
or
popf
pop
sahf
nop
sbb
mov
movsb
les
pop
imul
pop
out
push
fs
mov
push
mov
lahf
mov
jo
ret
les
ret
insb
sub
cmpsl
and
xchg
jl
call
mov
sub
int
cwtl
je
test
xchg
sbb
mov
jecxz
add
dec
sbb
lret
mov
inc
push
sbb
adc
adc
mov
cmp
dec
test
adc
mov
jge
imul
ss
sbb
push
imul
or
outsl
sbb
pop
imul
sbb
scas
mov
sub
jno
cmpsl
scas
jnp
fcmovbe
inc
pushf
dec
cmp
in
inc
mov
cwtl
in
mov
pop
or
movsl
inc
push
or
pop
out
repnz
mov
jae
pop
into
bound
imul
jo
es
jns
xchg
movsl
cmp
ret
push
adc
mov
mov
fdivrl
or
inc
or
dec
movsb
pushf
add
es
push
aaa
sub
rclb
mov
xor
insl
xor
dec
sahf
xor
iret
pop
jle
xchg
mov
repz
xchg
push
lds
sub
cmp
push
xchg
test
test
jp
movsb
and
jecxz
in
out
mov
cli
jb
xor
sbb
test
scas
xor
addr16
dec
or
nop
aas
push
jno
pop
pop
aaa
dec
sbb
inc
orl
xor
dec
aad
inc
ljmp
and
add
out
dec
jle
push
jne
jnp
jle
call
jle
loopne
dec
inc
xchg
push
iret
loop
js
rcrl
int
testb
adc
cmp
subb
popa
push
push
mov
xor
icebp
fdiv
mov
std
popf
test
push
aas
xlat
add
ss
in
mov
je
pop
and
xchg
sbbl
inc
sbb
sbb
mov
scas
adcb
push
add
popl
test
adc
dec
mov
adc
sbb
jno
mov
cmp
sub
mov
mov
sbb
sbb
and
jnp
pop
addr16
out
lcall
fwait
jge
adc
ret
fs
outsb
xchg
inc
pop
mov
out
pop
xchg
fsts
add
push
repz
enter
rorl
pop
movsb
adc
pop
push
sub
cmpb
push
pushf
mov
dec
movsb
out
inc
xchg
lods
and
mov
xchg
fwait
or
or
jge
mov
dec
clc
test
inc
mov
pop
push
scas
cld
pop
and
xor
jne
rcr
dec
inc
fiadds
cmpsb
sbb
in
dec
imul
test
inc
jnp
pop
decb
or
cs
ret
or
xchg
out
in
ret
adc
es
dec
movsb
test
pop
test
mov
xchg
push
push
or
sahf
sbb
int3
mov
push
xor
pop
mov
std
loop
dec
push
icebp
movsl
xchg
mov
rorl
cmpsb
cmp
jle
mov
sbbb
lret
pop
add
movsb
xchg
jge
jle
sbb
xor
jne
movsb
xor
popf
or
mov
mov
mov
jmp
xor
movsb
fwait
pop
adc
clc
rcr
add
xor
mov
dec
mov
jg
jg
ds
mov
and
fucomp
mov
push
dec
shr
in
ss
daa
push
sub
xsaveopt
ss
pushf
dec
gs
xchg
dec
jno
loopne
xlat
push
sub
inc
fiadds
ret
xor
pop
and
cld
lods
mov
loope
xchg
fsubl
pusha
adc
and
inc
lcall
sbb
xor
es
mov
sub
jne
add
adc
pop
out
imul
pop
insb
mov
jg
scas
and
rorb
call
sbb
addr16
or
ja
scas
in
outsl
shrl
cmp
scas
cmp
or
cmp
out
pop
mov
pusha
sub
adc
mov
aaa
repnz
push
mov
lret
dec
callw
dec
inc
cmpsl
in
xor
icebp
dec
les
mov
movsl
push
pop
cmp
ror
adc
dec
scas
cmpsb
clc
push
fmul
lcall
fs
loop
sub
aam
inc
lret
stc
in
cmp
cmp
inc
add
push
enter
mov
femms
dec
movsl
sbb
jecxz
scas
xlat
adc
movsb
xor
xor
and
pop
xchg
xchg
test
out
jns
pusha
jbe
cmp
cmp
mov
dec
xor
jne
push
aas
nop
popa
insl
mov
in
xor
xor
jecxz
ss
mov
es
jecxz
or
dec
insl
sub
or
std
sahf
cwtl
repz
icebp
push
cwtl
int
nop
mov
jmp
xor
cli
loop
in
rol
mov
cmpsb
in
dec
stos
mov
push
or
push
xchg
adc
pop
scas
into
push
push
push
call
std
xchg
aaa
dec
aaa
lahf
data16
repz
fdivrp
mov
inc
jl
testb
and
lock
cmc
fcmovnb
xchg
lret
xchg
cmp
xchg
mov
mov
jns
pop
or
sub
aas
andl
dec
int
cmp
movsl
inc
fstl
pop
lock
das
subl
je
jae
lds
xor
ja
jg
das
les
dec
stos
jmp
pusha
lds
cmp
pusha
adc
jns
es
frstor
push
dec
mov
pop
std
add
fdivp
mov
or
mov
pop
pop
push
icebp
bnd
fiaddl
dec
jecxz
out
repz
inc
into
add
loopne
jo
ss
leave
movsl
loope
faddl
xchg
inc
inc
mov
sub
pop
push
stos
pusha
shlb
imul
mov
aas
ljmp
jge
xchg
and
daa
or
push
cmp
stos
adc
mov
sbb
mov
xor
xlat
js
enter
ljmp
cmp
adc
int
jge
adcl
pop
outsb
ret
pop
fsub
mov
cli
xorl
pop
stc
mov
into
dec
ljmp
repnz
sub
js
movsl
xor
add
jns
repz
and
pop
sti
and
scas
cs
jno
cwtl
mov
xchg
gs
sbb
push
roll
push
sub
popa
lds
add
push
iret
insb
mov
nop
xchg
nop
call
rcll
jnp
cs
lcall
and
clc
jns
push
rcll
pop
jo
cld
lods
push
pop
addr16
loope
loope
lahf
fs
fnstenv
xor
pop
lds
xchg
adc
sbb
fistps
aam
test
sbb
push
ja
je
or
mov
dec
xor
sbb
jbe
jae
inc
jb
dec
mov
js
cmpb
popf
mov
roll
fbstp
insb
sbb
sbb
test
out
mov
in
loop
test
rep
shrb
pushf
std
fldl
mov
lods
cli
adc
cltd
push
push
push
dec
cmp
and
push
fdivrl
sbbl
cs
repz
xchg
out
ljmp
and
xchg
pop
sbb
mov
int3
push
out
mov
pop
push
ss
aaa
jno
repz
jecxz
pop
xor
mov
mov
jle
dec
dec
arpl
mov
cmp
out
iret
xchg
shrb
push
and
push
mov
sar
xchg
pop
idiv
bound
mov
decl
adc
jge
or
loopne
in
das
andb
fisttps
mov
push
movsl
jmp
sti
ljmp
fwait
out
add
jl
and
int
push
sub
clc
add
aad
lock
cmp
sahf
lret
xchg
movsb
fwait
sub
rorb
xchg
inc
test
stc
add
je
fldenv
cwtl
xchg
loop
and
mov
dec
mov
push
cmc
lahf
out
cmp
push
sub
test
mov
add
pop
inc
adc
add
fwait
sbb
int3
icebp
fdivrl
data16
inc
jbe
push
xor
push
lock
push
xchg
nop
cmp
daa
pop
sbb
outsb
push
sub
nop
pop
movsl
fs
js
or
aam
arpl
sti
jne
aad
inc
sub
sub
or
mov
xchg
jmp
les
ja
imul
jg
es
lods
pop
and
jmp
in
shr
push
in
sbb
loopne
enter
inc
cmp
sbbb
xchg
adc
inc
outsl
fldenv
xchg
insb
ret
pop
imul
pop
mov
adc
sbb
call
rclb
lret
ljmp
jnp,pn
push
mov
popa
and
mov
bswap
iret
add
out
mov
lret
mov
xor
push
ret
pop
es
aaa
pop
sub
setb
xchg
arpl
into
xor
mov
shl
lock
stos
cwtl
ss
jmp
js
out
test
jnp
fists
fs
inc
scas
or
ret
cmc
xchg
xor
mov
stos
inc
sub
inc
jae
int
pop
xchg
test
cwtl
mov
fwait
mov
ss
push
js
xlat
imul
aam
pusha
push
and
mov
inc
gs
or
sar
je
sbb
adc
sbb
push
sub
pop
loop
push
rcrb
fwait
test
mov
repnz
and
pop
out
cmp
movups
in
sahf
shll
js
mov
xchg
inc
cmp
cmpsb
and
loope
cmp
popf
push
inc
mov
sub
ja
icebp
jle
das
mov
mov
pop
or
mov
test
mov
ds
sub
add
pop
ss
lds
stc
mov
xchg
or
in
push
sub
add
push
mov
push
push
out
int
or
jns
inc
adc
cmp
pop
loop
sti
in
mov
push
sub
xor
ss
sbb
addl
in
rorb
scas
inc
xchg
inc
js
enter
sbb
xchg
push
mov
stos
fstps
and
mov
pop
mov
test
mov
icebp
push
mov
out
out
jb
out
xor
push
xor
out
mov
imul
or
call
dec
cwtl
fdivrl
mov
popf
loopne
and
call
cs
xchg
sbb
inc
push
xchg
mov
pop
xchg
mov
out
inc
jns
jecxz
mov
rorl
xchg
mov
adc
inc
dec
int3
int
push
or
or
mov
sbb
mov
jp
xlat
push
jae
sub
push
push
mov
js
inc
mov
mov
jo
mov
sbb
daa
adc
arpl
cmp
int3
inc
aam
fcmovnbe
and
dec
pop
movsl
xor
push
inc
jmp
cmp
loop
add
sub
add
bound
pop
into
test
sarl
sub
push
push
mov
insl
fistpll
mov
stos
fistps
mov
and
jo
and
aad
aad
xor
mov
mov
push
push
div
jp
mov
inc
fsubs
enter
mov
sub
fdivr
testl
sub
mov
aaa
add
movsl
testl
add
lret
mov
xlat
cmp
loop
ds
inc
test
imul
loop
fsubr
mov
jno
clc
xchg
fldt
popf
fs
repnz
jmp
or
mov
ljmp
mov
sbb
lea
mov
fwait
std
mov
xor
addr16
jge,pt
call
mov
mov
out
lret
repz
psubb
mov
xchg
pop
jae
cmp
in
cs
int
sub
push
lock
ffree
daa
daa
shl
sbb
loop
stos
push
shll
jge
jg
sub
mov
ds
cmpsl
outsb
in
push
movsb
cmp
into
arpl
out
aas
push
or
push
out
dec
adc
loopne
inc
xchg
mov
mull
pop
xchg
cltd
sahf
sbb
aam
mov
popf
lock
jo
in
out
push
jne,pn
jmp
test
in
adc
adc
push
movsb
negl
add
in
mov
pop
lods
jns
cmp
scas
sub
fidivs
pop
jo
sti
adc
aas
push
sub
push
popf
push
out
cmp
cmp
mov
adcl
xor
enter
and
pop
icebp
xchg
and
cmp
js
ret
pop
ljmp
pop
scas
dec
mov
cld
aas
xor
mov
arpl
adc
lock
pop
dec
fcomp
sub
orl
mov
mov
pop
mov
xlat
xchg
out
repz
ja
scas
arpl
xchg
pop
mov
test
mov
add
or
cmp
jg
jl
lahf
imul
add
hlt
sbb
inc
scas
push
sahf
xor
xor
cmc
sub
fs
mov
add
add
dec
or
test
push
inc
xor
sub
fsubrp
icebp
enter
pop
jp
mov
rcrb
push
dec
lods
scas
aad
incl
js
adc
loope
jg
mov
dec
and
mull
xchg
pusha
and
dec
int
insb
out
popa
adc
mov
fiaddl
ja
sbb
loope
ja
iret
clc
aam
dec
ds
pusha
aad
jb
mov
ss
jo
dec
outsl
mov
jns
pop
xor
sub
xchg
jl
pushf
rol
loop
jo
outsb
das
push
jo
xor
fadds
mov
cmp
jg
push
add
das
xchg
jp
push
lcall
out
and
mov
cltd
jg
jp
popf
ret
je
mov
outsb
sbbl
add
cs
imul
push
test
cmpb
out
jp
pop
adc
mov
inc
leave
lret
shlb
cmpsl
shll
mov
push
cs
xchg
sub
pminub
das
scas
outsb
mov
movsl
xor
pushf
int
int3
push
insb
push
rol
mov
aad
popa
cmp
pop
loope
cld
aad
pushf
mov
pop
mov
pop
fldt
xor
clc
push
enter
push
fistl
pop
sbb
aad
hlt
mov
sub
lret
mov
sbb
lea
inc
adc
xor
sub
dec
push
push
ljmp
mov
xor
movsl
inc
fildll
mov
inc
cmp
daa
int3
dec
jl
out
inc
scas
xor
loope
xchg
add
jl
sub
dec
repnz
push
jge
and
mov
loopne
ss
xchg
cld
orl
sbb
dec
cld
enter
push
xchg
lock
and
xchg
push
xor
add
pop
jg
int3
fldenv
lods
mov
outsb
push
inc
sbbb
lcall
push
sbb
nop
cmp
call
int
lea
imul
outsl
incb
jo
add
push
and
rclb
jno
ja
sub
lret
jmp
sub
movsl
add
xchg
xlat
add
lcall
js
sbb
shlb
mov
shll
lahf
xchg
fcomi
rol
or
mov
aam
xchg
in
push
cmp
mov
loop
fadds
cmp
add
jp
cltd
adc
test
jo
and
mov
sub
clc
mov
sahf
movsb
pop
daa
test
mov
cmp
or
jmp
pop
pop
mov
sahf
jle
mov
imul
lds
xchg
test
xchg
lahf
hlt
xor
push
xor
gs
inc
int3
pop
adc
mov
divl
stos
cld
ror
icebp
dec
push
lods
mov
cmp
push
sub
xchg
cmpb
fstl
or
add
push
sub
adc
push
mov
fdivr
push
push
sbb
mov
sti
mov
in
push
pop
adc
rcll
or
sub
and
fisubrs
fwait
jecxz
in
xor
test
dec
outsb
in
js
xchg
mov
jg
inc
cmp
shl
cltd
fisubs
pop
in
mov
xor
ficompl
in
inc
adc
insl
cmpsb
or
mov
cmp
mov
jne
xchg
xchg
mov
out
jg
icebp
mov
push
in
lds
jno
sub
sub
repz
sbb
jl
jnp
cwtl
ret
andl
enter
inc
mov
aad
add
daa
nop
js
stos
shl
aam
test
dec
dec
jb
fs
test
mov
cltd
pop
inc
repnz
inc
inc
aam
mov
mov
roll
xchg
lods
imul
sahf
rcr
and
cmp
mov
mov
test
lcall
jp
sbb
loope
loopne
push
cwtl
addr16
jmp
mov
inc
inc
pop
cmp
movsb
dec
aad
xchg
clc
pop
loope
test
cmpsb
cmp
cltd
xchg
andl
push
out
xor
dec
int3
mov
jecxz
add
adc
stos
mov
and
pop
cmpsl
int
sbb
fisttpl
subl
test
push
mov
out
sbb
push
test
mov
push
cwtl
imul
sbb
cmp
enter
imul
cmp
scas
mov
pop
mov
push
add
cs
cwtl
sub
icebp
mov
dec
pop
std
out
mov
lcall
mov
hlt
inc
hlt
js
mov
fidivrl
mov
mov
pop
cmp
jno
aaa
cs
xchg
push
mov
cmpl
nop
jae
cmp
sbb
outsb
mov
jmp
in
sub
out
mov
and
push
sub
into
mov
lret
dec
push
push
aad
adc
pop
cwtl
mov
add
aas
or
int3
adc
ja
cmpsb
jo
sub
and
das
adc
mov
mov
push
cmp
fcmove
cs
mov
cld
push
or
scas
xchg
xchg
loop
push
ds
adcb
sbb
rorb
pop
inc
popf
dec
pop
ljmp
in
and
stos
pop
ljmp
fstl
ret
mov
push
jns
cmc
out
cmp
ret
inc
scas
pop
mov
jbe
pop
jmp
inc
js
dec
test
mov
and
or
add
fptan
xor
pop
es
stos
movsl
es
jmp
mov
shll
ja
push
std
data16
int3
xor
ljmp
fildll
ja
jmp
mov
add
pop
push
jbe
push
xor
lret
rol
imul
cmp
jb
fisubrl
cmpsl
lcall
dec
insl
mov
inc
outsb
jne
ss
lret
inc
in
xchg
mov
add
adc
or
mov
into
push
sbb
dec
arpl
xchg
mov
in
aad
not
cmp
scas
orl
mov
repnz
dec
lods
fisubrl
imul
in
cmc
sub
push
addl
outsl
rol
fstpl
lods
push
mov
lods
or
ret
mov
sub
cs
lock
aad
push
not
or
mov
pop
fcomps
jae
inc
cmp
adc
repz
cmp
fdivr
icebp
je
mov
call
mov
jb
mov
sub
sbb
cmp
stos
hlt
lods
jo
lret
xor
or
cmc
cmp
and
mov
nop
subl
out
jmp
xchg
imul
dec
xlat
mov
push
popf
xchg
seto
dec
xor
xchg
das
inc
fistpll
mov
lret
movl
inc
mulb
xor
add
bnd
mov
int
les
rcll
pushf
cmp
iret
sbb
es
push
push
inc
sbb
xlat
dec
mov
add
cmpsl
clc
cli
push
pop
mov
popa
push
ret
pushf
iret
jg
lods
sbb
outsl
xchg
mov
mov
or
inc
es
jecxz
add
and
sbb
mov
push
decl
clc
sub
pop
pop
inc
lods
lahf
jb
aaa
push
cltd
movsl
fcoms
cmp
or
sbb
adc
or
pop
stc
into
xchg
ds
cmp
xchg
add
jg
mov
ret
movsl
sar
inc
cmp
or
pop
mov
ret
roll
adc
sub
bound
xchg
add
test
rorl
stc
es
mov
ret
adc
xor
xchg
sti
cwtl
adc
xchg
inc
les
cmp
cmc
cmp
ret
mov
adc
fldl2e
push
mov
ficoms
stos
or
mov
sti
nop
fld1
fyl2xp1
mov
movsl
xor
dec
cmp
and
stos
int
mov
mov
dec
jecxz
mov
loop
inc
mov
push
sub
xchg
mov
dec
push
pop
xchg
cmp
mov
popf
mov
xor
dec
push
and
int
test
cmp
xchg
ret
and
je
ljmp
xor
pop
dec
daa
ja
inc
or
sahf
and
dec
dec
movsl
cs
in
push
mov
jo
insb
xor
jp
cmp
and
testl
fmull
add
push
add
stos
rcr
sahf
cmpsl
repz
sub
in
cld
ret
shll
lea
lret
jg
aaa
shl
sbb
sub
xchg
je
xchg
lahf
and
cmc
cli
mov
sbb
ds
inc
jae
lea
sarb
es
out
mov
daa
ja
dec
negb
mov
inc
sti
dec
aaa
or
mov
in
cmp
xchg
push
mov
ficoms
into
loopne
outsb
xchg
in
dec
jae
cld
loop
sarl
pusha
or
addb
es
sbb
jnp
mov
test
pop
bnd
inc
fidivl
leave
sbb
dec
ds
mov
push
movsl
mov
imul
aaa
pop
mov
push
mov
insl
loopne
ss
in
push
insl
shlb
jl
out
stos
test
jae
sbb
pop
mov
jg,pn
out
jmp
xchg
pushf
jg
lret
jle
hlt
pop
cmpsb
sbb
lcall
jb
push
stos
xchg
aad
sub
cmp
push
inc
imul
jp
int
popa
nop
xor
jmp
out
pop
fs
mov
pop
daa
je
loope
or
xchg
jg
fisubrl
sbb
shrl
cwtl
or
or
push
sub
or
insl
aaa
mov
push
hlt
cltd
and
aad
mov
push
dec
xchg
inc
fnstenv
fs
mov
pushf
pop
mov
xchg
pop
and
loope
fldcw
mov
je
or
das
int
push
push
leave
aas
xor
or
push
xor
popf
in
jo
ljmp
shll
jno
outsb
xchg
sbb
fmulp
mov
fcoml
pop
js
push
pop
ja
out
adc
jae
and
cwtl
adc
popa
out
pop
dec
sbb
xor
xor
jo
std
xor
rol
adc
pop
or
jnp
aad
and
xor
xchg
pop
mov
inc
adc
das
push
mov
pop
jo
jae
sub
scas
push
inc
ret
stc
iret
inc
dec
out
pop
out
in
sub
repnz
not
dec
add
imul
fbstp
inc
shl
sbb
cli
jl
and
sub
aam
and
pushf
movsl
fnstenv
and
mov
test
pop
inc
loope
or
adc
xchg
xlat
xchg
or
test
imul
loope
loope
popf
fistpl
cmp
leave
jo
outsl
int
sahf
loope
pop
dec
sbb
test
pop
lds
nop
xor
in
pusha
movsb
mov
pushf
push
dec
cmp
cmp
jae
jecxz
cmpsb
jecxz
push
mov
xchg
icebp
pop
lods
cld
push
mov
mov
dec
stos
sub
cmp
add
repz
inc
add
movsb
ds
sub
or
shlb
push
outsl
repnz
xchg
sbb
mov
xchg
test
pop
fdiv
push
data16
lcall
lods
push
add
or
ljmp
mov
sar
mov
adc
xor
ja
push
add
push
mov
rcrl
sub
test
icebp
xor
test
and
mov
popf
xchg
filds
inc
sbb
xchg
incl
pop
xchg
dec
push
or
ja
pop
jns
pop
lcall
mov
ss
imul
nop
add
movl
data16
add
call
loopne
mov
mov
out
iret
pop
and
pop
jns
mov
test
in
fdivs
shl
frstor
rep
dec
bound
enter
jle
insb
jb
bound
popa
xchg
movsb
int3
or
jnp
pop
sbb
sub
subb
adc
add
push
ficomps
xchg
xchg
cmp
mov
mov
sbb
lret
jo
out
ret
push
adc
pop
adc
mov
jg
sub
sbb
addr16
das
mov
adc
cmp
mov
into
jecxz
inc
out
dec
stc
pop
mov
pop
jmp
and
mov
inc
fcmovb
call
insl
mov
mov
jo
mov
inc
push
xor
mov
sbb
scas
push
int3
orb
inc
lock
divb
xchg
xorb
scas
aaa
xchg
ljmp
loop
test
mov
daa
scas
xchg
test
ja
jle
out
add
dec
sti
mov
push
in
hlt
mov
lods
fsubs
or
mov
int3
xor
stc
les
push
jmp
jg
xchg
push
fs
jnp
fidivrs
lods
or
popa
cli
adc
sub
xlat
test
jg
sbb
pop
cli
imul
adc
mov
and
add
push
add
or
rcrl
add
pop
test
xor
cmp
out
cmp
push
push
cwtl
or
pushf
and
cmp
cli
orb
scas
xor
outsl
jl
adc
lcall
aad
cli
add
cmpsb
sub
push
xchg
push
and
outsb
xlat
dec
int
loopne
jmp
sti
out
scas
leave
loope
cli
dec
cltd
insl
push
inc
shlb
sbb
das
in
popf
movb
sbb
pop
xor
fbld
mov
pop
cmp
jmp
pop
daa
jae
out
addb
jns
xor
mov
sbb
fsubrl
iret
out
pop
subl
xchg
or
xor
je
pop
pop
repz
push
or
jle
jle
jne
lods
jno
popf
and
mov
mov
mov
out
xor
pushf
push
call
dec
fisubl
lds
lea
sbb
scas
lods
scas
enter
push
subl
repnz
mov
test
push
ret
filds
jb
xchg
cld
push
scas
rcl
repz
js
shr
or
inc
mov
scas
mov
push
push
mov
sbb
xchg
xor
pop
enter
mov
ljmp
lret
js
sbb
sbbb
fldenv
test
mov
lahf
add
das
mov
call
mov
jmp
jl
lahf
div
in
and
sbb
add
inc
sbb
inc
dec
lock
mov
pop
shlb
lret
aam
test
mov
dec
lahf
jge
out
out
ret
mov
out
pop
popa
add
out
inc
mov
lret
fsubrl
jo
mov
xchg
leave
mov
mov
test
mov
jmp
push
xchg
xchg
test
int3
cmp
rcrb
inc
mov
incb
xor
sahf
jmp
inc
mov
and
int
inc
mov
rorl
adcb
push
mov
push
out
in
movsb
mov
mov
nop
adc
repz
sub
outsl
es
sahf
clc
inc
add
test
cmp
das
mov
add
ds
jecxz
cmc
mov
push
mov
jnp
imull
mov
jb
pop
cmp
loopew
mov
fadds
faddl
lret
je
and
mov
fs
shrb
aas
stos
cmpsb
inc
and
pop
mov
ja
inc
pusha
gs
pop
and
pop
mov
fidivl
out
iret
sbb
cmp
ja
push
push
in
xchg
in
push
sbb
xor
mov
push
jno
or
mov
jb
or
mov
dec
data16
and
inc
in
repnz
lret
xor
loop
dec
lret
scas
dec
xor
or
je
aaa
popl
stos
dec
imul
stos
fsub
push
adc
rcrl
aaa
cwtl
jno
js
lods
mov
mov
and
fucom
or
or
dec
inc
ss
jae
mov
popa
xchg
js
pushf
cmpsb
mov
mov
and
adcl
sub
in
pop
or
mov
mov
pop
in
subl
stc
jb
push
mov
inc
mov
fsub
and
dec
rcll
repnz
out
insl
cmp
in
mov
pop
mov
cmpb
es
fdivp
sbb
xchg
es
dec
pusha
dec
lea
repnz
ficoml
sbbl
dec
mov
push
fucom
cmpsb
in
subb
jns
rcll
add
cmp
jns
scas
cld
mov
adc
inc
jle
push
clc
aaa
ss
popa
xchg
mov
nop
sti
mov
cmpsl
and
mov
mov
mov
leave
sub
in
addr16
mov
in
mov
pop
pop
scas
inc
mov
xor
xor
addr16
and
lea
xor
pop
xchg
movsb
xor
and
inc
pop
inc
or
arpl
shr
roll
and
dec
cmp
std
push
jmp
ret
in
pop
push
push
mov
or
iret
dec
mov
idivl
dec
jmp
mov
mov
dec
pop
clc
enter
fildll
rclb
scas
mov
mov
enter
jle
cmp
cmp
js
sbb
sbb
test
pop
mov
adc
into
andl
and
pop
mov
xchg
test
cmp
stc
ss
scas
fcoml
js
lds
daa
dec
stos
dec
fistps
out
xchg
jl
xlat
mov
inc
xorl
pop
adc
inc
sub
cmp
jecxz
fidivl
in
mov
push
xor
insl
popf
xchg
cmp
push
add
pop
add
pop
outsb
mov
repz
insb
mov
popa
and
lods
add
sub
pusha
inc
iret
push
inc
inc
xchg
jecxz
inc
int3
enter
xor
xchg
inc
std
sub
test
add
stos
mov
cmp
pop
addr16
sub
aas
sar
mov
cwtl
js
inc
cmp
loope
sahf
nop
mov
adc
push
mov
imul
lcall
pop
fmul
sbb
push
stos
cwtl
cmp
addr16
test
addr16
mov
cmp
or
dec
lea
out
pushf
sti
ljmp
xchg
or
dec
sbb
jecxz
loop
sbb
pop
cmpsl
cmpsl
call
arpl
xor
lods
jg
std
jl
adc
and
aad
je
jge
add
rcrl
xor
cmp
xchg
scas
mov
xlat
mov
in
fs
in
jp
ret
mov
in
mov
std
sub
movsb
mov
dec
jns
in
xchg
mov
xor
inc
imull
ss
lock
dec
lahf
xchg
mov
sub
adc
xor
daa
mov
mov
shll
jne
jmp
sti
rcll
jo
jns
jl
pop
xchg
lea
mov
aam
jmp
sti
xcrypt-ofb
cmpsl
stos
enter
mov
and
lods
mov
movsb
fmuls
pop
sub
pop
ljmp
dec
mov
lods
adc
mov
lret
fsts
jmp
not
sub
or
mov
dec
jmp
insb
adc
in
jg
and
mov
stc
jno
adc
mov
jnp
mov
sti
mov
pop
lret
mov
jnp
xchg
outsl
bound
mov
incb
out
mov
call
std
jp
gs
sub
pop
push
nop
adc
pushf
roll
shll
sbb
in
popf
xchg
sbb
loope
insl
into
je
subl
inc
push
dec
cmpsl
int
add
or
pop
loope
jne
roll
mov
xor
xchg
fwait
xlat
xchg
or
repz
jle
mov
fs
into
lret
inc
ds
and
cld
cwtl
mov
and
mov
or
inc
scas
xchg
cmpsb
push
insl
out
cmc
in
and
pop
test
inc
pop
mov
hlt
xchg
dec
mov
fcoml
or
jo
jg
mov
fwait
sbb
hlt
aad
popf
mov
cltd
cmpsb
rcrb
data16
dec
cmp
scas
inc
jl
pxor
push
xor
xchg
mov
xor
fnstcw
xlat
mov
xorb
dec
pop
and
adc
and
popa
inc
cltd
stos
xor
gs
ficoml
into
aam
ficompl
rorl
xchg
mov
push
shll
mov
push
out
into
out
or
jne
lea
xor
insb
jno
push
and
mov
shrl
test
and
sub
ja
xchg
mov
int
std
cmpsl
shlb
pop
lret
push
pop
inc
mov
cwtl
sub
mov
into
xor
and
sub
mov
shlb
dec
stos
bound
lea
push
jnp
pop
or
sub
loope
imul
jmp
out
xor
fwait
xchg
loopne
loop
push
pushf
push
daa
xchg
mov
shll
mov
jae
sub
push
or
stos
xchg
jo
popf
xchg
loop
and
sbbb
inc
outsl
pop
out
inc
in
outsl
popa
mov
adc
mov
add
insb
fmulp
xor
jae
cmpb
xor
sub
xchg
sarb
mov
and
mov
icebp
fs
and
popa
sub
and
sub
push
mov
aad
neg
jo
pushf
popa
sbb
mov
ret
scas
shlb
out
xchg
dec
daa
pop
mov
ficoms
js
or
push
push
ss
xor
aam
repnz
fidivs
xchg
das
aad
nop
movsl
sub
xchg
adc
negl
jg
aas
add
jo
cmp
cmp
pop
mov
or
call
and
lahf
cmp
shrb
mov
roll
cmpsb
lds
sub
add
loopne
push
jo
push
push
outsl
sbb
je
mov
aam
inc
xchg
mov
fimuls
jno
add
fcompl
xchg
data16
cmp
xchg
dec
fisttpll
mov
sbb
xchg
pop
mov
out
mov
shl
fwait
pop
fisubs
inc
adc
fiaddl
pop
movsb
aaa
aaa
or
xchg
or
jmp
scas
shl
std
xor
sub
cmpsb
stc
mov
dec
ds
xchg
outsl
fldt
scas
lea
stc
adcb
sub
mov
mov
cmpsb
xor
stc
loope
loope
stos
lods
and
mov
scas
inc
arpl
push
xchg
jne
cld
xor
or
adc
lahf
loopne
test
jno
pop
push
mov
mov
lahf
fdivrl
mov
test
ret
xchg
data16
adc
xchg
or
bound
loopne
and
icebp
lcall
aaa
mov
pushf
pop
add
sub
movsb
fldl
xchg
stos
bnd
xchg
incb
jo
sub
inc
bound
or
dec
dec
cwtl
mov
adc
test
mov
inc
outsl
pushf
or
test
hlt
pop
push
inc
addl
aas
outsl
adc
adc
push
adc
pop
out
mov
aam
dec
stc
imulb
repnz
daa
push
pop
call
or
add
testb
inc
clc
clc
insl
pusha
push
out
scas
or
mov
fsubrp
and
lcall
repnz
out
inc
xor
add
mov
jnp
dec
adc
xchg
aad
aad
pop
jno
je
cvtps2pd
mov
das
mov
xor
add
pmulhw
push
xchg
outsl
sahf
jle
test
mov
sub
pop
jl
inc
mov
orl
cmc
jge
cmp
scas
hlt
sbb
outsb
sub
add
xor
push
cmpb
adc
jl
cmp
add
into
jb
jnp
inc
pop
roll
jb
stos
dec
and
aad
sbb
mov
int3
ss
enter
daa
sub
xlat
call
mov
das
xchg
pop
cmpsl
fstp
or
xchg
shrl
lea
and
mov
jb
mov
mov
sub
push
xchg
lods
movsb
jno
jnp
jle
pop
outsb
scas
push
mov
or
add
call
xchg
shlb
jns
imul
sarl
sub
in
adc
out
sbb
repz
popa
pusha
sbb
nop
outsb
loop
sbb
mull
xchg
jnp
cli
and
pushf
xchg
and
xor
arpl
xor
mull
sbb
insb
push
pop
mov
or
mov
addr16
sbbl
enter
lods
lods
and
add
ja
fdivrs
lcall
jl
dec
loop
das
int3
cs
push
or
push
mov
popa
pop
cmp
sarl
scas
jg
mov
mov
ljmp
lods
test
jo
adc
push
sbb
icebp
mov
xor
inc
jno
pop
xchg
testb
mov
lea
daa
jb
xor
jl
pop
fcmovnu
pop
sbb
subl
push
xor
dec
sbb
mov
int3
pop
add
mov
or
les
xchg
adc
adc
mov
xchg
sub
icebp
or
std
mov
pop
jecxz
out
dec
and
sub
out
movsb
and
mov
sbb
or
shl
into
ja
adc
popf
inc
push
sbb
jae
lea
xor
andl
stc
imul
cmp
aad
sub
das
ret
cmp
sub
repz
fcompl
lock
je
out
scas
in
int3
adc
ret
jmp
push
pop
or
ja
out
hlt
push
cmpsb
rorl
adc
jp
fst
popa
adc
ds
jno
cmpsl
imul
idivb
out
outsl
in
sub
jg
xor
cmp
xor
sti
mov
inc
jns
mov
dec
sti
out
mov
or
push
sbbb
pop
aas
faddp
loope
stc
add
inc
hlt
cmp
aam
fldenv
xchg
dec
hlt
mov
out
clc
rcll
or
in
jb
dec
adc
daa
enter
inc
in
push
test
adc
pop
rorb
mov
add
sub
fs
arpl
es
xchg
push
mov
xchg
fs
add
jl
mov
dec
dec
dec
push
rorb
inc
jge
jae
adc
push
out
lahf
insb
xor
nop
lcall
mov
jp
mov
call
mov
add
mov
pop
and
and
adc
mov
mov
pushf
loope
mov
daa
adc
mov
imul
xchg
pop
fwait
xlat
pop
jne
outsl
cmp
gs
mov
xor
outsb
rolb
lds
dec
pop
and
push
fcmove
arpl
jne
fnsave
stc
lret
jp
jmp
fisubl
xor
jmp
lcall
repnz
sub
fidivl
les
clc
lods
ret
movsl
push
jge
loopne
inc
fcoms
dec
mov
and
scas
in
ret
ja
or
pop
loopne
enter
dec
jae
out
cmp
jp
repnz
mov
adc
dec
scas
xlat
addr16
jbe
lods
repnz
lret
add
iret
or
fidivrl
sub
test
pushf
sub
dec
cwtl
xchg
out
inc
pop
clc
add
adc
cmp
dec
repnz
sti
sub
adc
mov
sub
add
or
cmp
cli
sub
dec
mov
push
cli
jmp
mov
ret
shll
mov
xor
cmc
jmp
dec
fisubs
daa
or
popa
test
in
in
mov
mov
xor
icebp
and
gs
in
loope
ja
outsb
push
ss
push
jbe
mov
cmp
je
and
dec
and
mov
inc
push
cli
push
jns
xchg
mov
xor
inc
and
jge
cmpsb
ret
and
add
pusha
ret
cwtl
xor
mov
mov
inc
fsubs
scas
push
dec
xchg
dec
mov
xor
push
out
jo
nop
lods
dec
cmc
mov
sbb
and
add
jecxz,pt
fnstenv
subl
add
mov
mov
lcall
mov
sub
ficoms
xor
pop
xchg
push
iret
sub
pop
loop
lret
inc
test
add
addb
shll
ljmp
cmp
cmp
int3
cmp
cmp
cltd
dec
add
xor
movsl
xor
adc
aad
int
xchg
xchg
cld
hlt
mov
das
mov
add
inc
cmpsb
push
dec
sub
sbbb
and
lea
push
pop
pop
or
sub
cmp
cltd
jne
dec
or
fidivrl
mov
sub
adc
xchg
out
cwtl
insb
push
cmp
fwait
xor
lahf
jae
push
shll
or
hlt
fsubs
loopne
pop
test
dec
push
xchg
pop
shlb
mov
shld
add
adc
jl
ffree
push
push
or
in
sbbb
outsl
test
fwait
jns
jno
lcall
or
lds
inc
push
or
insl
lods
dec
dec
cmp
inc
pop
loope
pop
pusha
mov
dec
inc
and
add
push
inc
sbb
push
ret
nop
pop
or
aam
jge
mov
imul
pusha
les
popf
lcall
or
mov
add
ret
mov
xor
or
cwtl
loope
sub
popf
shll
sbb
mov
test
mov
cmp
icebp
dec
sub
inc
mov
jmp
dec
push
or
sub
jns
ss
mov
add
mov
xor
mov
sub
lods
loopne
addb
or
mov
dec
dec
fcompl
bound
imul
out
dec
lock
jmp
xchg
sbb
mov
out
mov
repnz
insl
push
push
sub
inc
fwait
cmp
out
mov
mov
xchg
js
insb
cmc
lea
adc
mov
adc
mov
jmp
fidivrs
xchg
mov
jnp
and
pop
xchg
jo
aas
mov
pop
mov
mov
into
js
leave
jno
or
dec
aam
push
repz
mov
pop
out
pop
ss
lcall
mov
loope
cmp
lahf
sti
pop
lcall
mov
popf
mov
fisttps
pushf
adc
push
scas
cmp
ss
xor
test
sti
jbe
pop
ljmp
ret
cmpl
inc
loopne
or
aas
stc
adc
aaa
push
in
gs
ja
jno
test
pop
push
inc
jge
clc
and
outsl
iret
inc
popa
daa
adc
inc
adc
mov
dec
and
lods
sub
push
sub
pushf
cmp
dec
xor
adc
adc
das
sbbb
imul
xchg
sbb
popa
dec
test
add
mov
fidivrl
pop
jo
lds
imul
jno
push
leave
mov
adc
xchg
and
outsb
sub
test
aam
arpl
sub
test
mov
jo
filds
xchg
push
aaa
idiv
arpl
jecxz
ret
out
lock
into
push
fnsave
outsl
pop
sub
inc
movsl
int
inc
aas
sub
mov
sub
cmp
lcall
insl
jg
mov
mov
rcr
dec
lods
inc
xchg
in
pushf
xchg
xchg
or
jmp
push
pusha
inc
jg
push
pop
pop
imul
cmp
push
pop
push
fldenv
je
in
sub
jo
fcmovnb
dec
cmp
stos
addr16
add
jecxz
mov
sbb
jmp
mov
dec
lret
pop
pop
pusha
xchg
sbb
sub
hlt
fcmovnbe
mov
sbb
inc
pop
sarl
pop
cwtl
ret
adc
loope
cli
aaa
mov
push
mov
push
mov
fwait
xchg
inc
stos
adc
mov
lods
jbe
fcomps
or
lock
mov
dec
inc
dec
sbb
inc
mov
pop
jecxz
call
push
lcall
loopne
icebp
adc
adc
mov
mov
mov
inc
aas
xchg
stos
jo,pn
ret
mov
jecxz
and
add
sbb
mov
test
out
mov
lahf
lret
cmp
push
xor
ret
dec
repz
pop
les
add
pushf
sub
inc
iret
pushf
lods
fsts
ss
popa
loope
xchg
cli
inc
xchg
negb
pop
fcmovb
add
test
hlt
push
push
std
xor
test
pop
mov
and
push
add
andl
mov
adc
lods
into
scas
shll
mov
cmp
cmc
inc
mov
xchg
in
rcr
shr
ljmp
dec
push
loope
push
add
xchg
xchg
aad
push
lea
mov
mov
adc
out
mov
dec
out
js
and
and
cmp
add
dec
jno
sbb
sbb
inc
dec
shrl
fldt
xchg
cmc
cmp
dec
and
out
insb
in
fisttpll
adc
stc
pop
push
cmp
and
stos
mov
fists
push
xor
add
ret
call
inc
test
dec
xor
mov
mov
mov
or
xchg
sub
out
sub
pop
adc
and
xor
lret
pop
xchg
inc
xor
pop
repz
repnz
cmpsl
xchg
sbb
les
pop
xor
jnp
xchg
mov
nop
or
cmp
inc
adc
jmp
fwait
cmp
cmp
jecxz
xlat
mov
mul
or
pop
pop
pop
adc
test
pop
cli
arpl
cmpsb
add
inc
pop
sbb
outsl
xor
xor
xchg
fucom
mov
cmc
mov
jne
out
inc
divl
iret
pop
push
adc
addr16
dec
jbe
idiv
test
or
stos
xor
outsl
xor
lea
in
xchg
rcll
test
cmp
inc
adc
mov
jb
pop
icebp
push
jl
xor
in
lds
and
sub
mov
mov
ds
or
adc
jg
in
aam
in
push
jle
jno
inc
cmp
fnstenv
es
les
loopne
push
sahf
loopne
mov
lret
adc
mov
outsl
jb
sbb
push
lret
mov
std
dec
movntps
stos
fwait
stos
jg
movsb
ss
jbe
mov
int3
mov
insb
movsl
loope
or
jo
enter
pop
das
pop
sub
mov
jbe
ljmp
lcall
mov
es
shlb
mov
jbe
scas
popf
in
je
mov
mov
push
sbb
cmp
les
aam
sbb
arpl
cltd
ret
mov
sub
or
lods
fisubrl
es
mov
insl
lahf
shrl
data16
mov
sbb
pop
mov
add
adc
jbe
lret
mov
pusha
sbb
stc
sub
lcall
in
dec
mov
jae
lods
inc
enter
subl
mov
loop
mov
pop
fstpt
pop
mov
sub
jne
fdivs
fcompl
xor
jne
test
dec
mov
dec
popa
in
xchg
add
xchg
mov
push
sub
mov
repz
leave
in
sbb
roll
add
arpl
sbb
inc
pushw
inc
shl
sti
mov
lods
dec
jbe
sub
cmp
jo
test
mov
and
je
cmp
inc
jl
subl
mov
es
in
pop
xchg
mov
sbb
sub
or
pop
sub
sbbb
sbb
mov
lods
mov
push
dec
clc
sarb
dec
mov
stos
pop
and
mov
out
not
push
or
scas
inc
outsl
movsl
dec
inc
jp
dec
pop
add
mov
inc
gs
mov
sbb
and
mov
dec
pop
movsl
insl
inc
in
scas
lret
fists
cmpsb
js
add
fadd
xchg
fildll
dec
fs
mov
cld
in
push
xchg
out
sub
pop
cmp
cs
lret
sti
ss
inc
shrl
jl
dec
nop
mov
lods
dec
and
mov
incb
leave
outsb
push
push
add
cmp
data16
lahf
sbb
or
and
fdivr
jns
lods
cwtl
shrb
fs
hlt
ja
xchg
inc
ds
or
push
mov
movsb
adc
cmp
nop
or
or
or
pop
adc
inc
push
cs
ss
sbb
pop
ret
pop
push
int3
fdivrp
into
add
xor
cli
xchg
call
xchg
mov
dec
mov
testl
out
or
adc
mov
push
test
mov
or
pop
xchg
call
xlat
sbb
pop
lahf
push
repnz
stos
and
lret
in
repnz
pop
xchg
mov
mov
pushf
sarl
jecxz
rcr
leave
pop
jmp
sbb
inc
xor
pop
xchg
and
in
adc
sbb
jl
mov
adc
pop
jnp
nop
jle
mov
mov
add
enter
push
add
out
pop
xor
addr16
aam
xchg
mov
sub
in
mov
lea
adc
mov
mov
out
sbb
adcl
xor
loope
shl
dec
cli
xchg
jne
cmpsb
lret
cmp
jl
test
jns
lock
pusha
mov
sub
jns
push
and
inc
push
jns
add
aaa
jbe
dec
xor
add
subb
pushf
push
push
lcall
add
nop
sub
push
movsb
xchg
out
jns
imul
lock
inc
sarb
fsub
sarb
jb
fistl
gs
and
std
dec
rolb
iret
imul
rorb
lret
dec
paddsw
push
decl
loop
or
jge
and
btr
or
jae
xchg
xor
mov
inc
xor
dec
xchg
ffree
mov
jg
mov
popa
adc
inc
inc
xor
movsl
xchg
sub
lret
enter
popf
push
out
xchg
mov
jno
sbb
xchg
push
imul
out
inc
add
pop
repz
stos
in
adc
inc
xchg
in
std
cmp
mulb
sub
dec
mov
cmp
adc
and
pop
xor
xor
sub
xchg
in
cmpsl
cmp
subb
rcrb
jb
pop
jnp
push
cmc
dec
jne
movl
fwait
dec
btr
jb
adc
into
pop
loop
idivl
rolb
push
shl
jmp
cmp
sbb
mov
or
sti
sub
cmp
mov
not
rcrb
xchg
mov
mov
mov
loope
mov
push
loop
push
lods
lret
xchg
js
sti
in
out
je
push
push
mov
es
lds
push
dec
push
std
fdivs
mov
and
fld
inc
pop
pop
out
cld
pop
pop
es
es
xchg
pusha
mov
push
ffree
mov
cmc
adc
ljmp
shl
lret
icebp
fisttpll
jns
adc
sub
jo
sub
popa
add
lret
pop
mov
rolb
iret
sbb
insl
mov
mov
xchg
mov
jo
fisubrl
pop
es
pop
hlt
mov
out
pop
xchg
jle
aad
jb
cmp
std
cwtl
cli
hlt
adc
repz
and
xchg
int3
outsb
sbb
cmp
lds
loop
or
sub
xchg
pushf
loop
mov
stc
subb
loope
jb
dec
xor
push
pop
ret
aas
inc
jnp
enter
call
test
jg
ss
adc
icebp
loop
movsb
call
pop
pop
inc
dec
stos
test
push
cmpl
add
fstp
stc
cld
jne
push
cmpsl
inc
mov
mov
in
add
sub
div
jp
inc
repnz
popa
jmp
in
fildll
leave
pushf
inc
cmp
test
mov
sbb
daa
repnz
xor
lcall
sbb
add
pop
lret
jmp
aad
loope
pminub
daa
sub
imul
dec
lahf
adc
insb
stc
cmp
addr16
loopne
mov
or
addb
imul
or
je
and
in
ljmp
lea
lahf
xchg
add
jns
sbb
mov
into
dec
dec
int
scas
test
and
cmpl
sub
xchg
push
or
lea
cmc
mov
in
jle
adc
cmp
mov
faddl
jnp
sbb
mov
xchg
shlb
pop
add
dec
mov
mov
enter
repnz
add
dec
fs
pop
pop
xchg
ficoms
xchg
in
add
or
pop
movsl
insb
cwtl
or
repz
add
sub
iret
mov
cmp
xchg
outsl
neg
fildl
lods
mov
mov
xlat
fnstsw
aaa
pusha
mov
adc
cs
enter
ja
jnp
pop
ja
in
mov
cld
push
iret
push
sahf
ret
adc
xchg
rcrl
out
mov
out
repnz
outsl
cmp
outsl
lock
fmul
mov
mov
cli
xchg
out
or
jae
sbb
mov
js
inc
sbb
fmul
push
mov
push
jecxz
mov
test
jmp
ja
lods
adc
or
add
and
cld
inc
cmp
jl
jl
jecxz
enter
or
sbb
or
cmpsl
aas
enter
inc
es
inc
fimull
popa
push
inc
out
sub
adc
out
das
sbb
and
or
and
inc
mov
mov
xchg
leave
jo
add
dec
stos
jno
fs
lret
push
inc
sub
cmpb
xor
xor
fisttpl
fsubrs
pop
mov
fucomp
fcomi
xlat
dec
and
push
lods
dec
cmp
xor
push
mov
out
cmp
out
or
sub
push
bound
add
jns
loope
lret
mov
stos
data16
adc
mov
jp
lods
fmul
inc
jg
loop
lcall
pop
inc
cltd
xor
mov
sbb
xor
cmp
add
sahf
ret
mov
dec
frstor
shlb
jb
outsb
ret
push
loope
add
jne
std
push
test
sbb
andl
xchg
lret
mov
cld
lret
jle
aad
dec
ss
mov
mov
outsb
lds
icebp
inc
scas
dec
stos
or
in
popf
jecxz
lods
or
and
sub
push
push
or
cmpsl
add
hlt
loop
repz
add
clc
fsubrl
mov
test
push
je
jne
ljmp
imul
pand
sar
out
sahf
add
clc
imul
in
push
pop
ss
test
xchg
dec
scas
pop
xchg
xchg
jae
xor
push
fnstcw
mov
sbb
pop
fcoms
adc
fiadds
adc
adc
push
lcall
sub
dec
test
and
and
sar
and
add
call
ljmp
push
pusha
or
push
xor
popf
xor
dec
rclb
pop
lret
push
imul
push
test
sub
xor
and
pushl
inc
push
js
scas
stc
mov
iret
sbb
and
inc
test
mov
mov
lods
insl
add
xchg
mov
int3
or
cmp
gs
cmp
cld
push
and
pusha
push
fdivp
call
out
push
push
popa
repz
out
jo
push
dec
xchg
xchg
leave
inc
pop
xchg
add
add
mov
adc
push
sub
adc
fptan
and
mov
pop
je
in
jnp
stos
leave
imul
ljmp
pop
inc
aaa
cmp
hlt
and
popa
in
pushf
test
mov
cmp
fldcw
push
stc
jmp
rclb
pop
leave
and
movsb
fsubs
into
cwtl
ss
sbb
xchg
sbbl
mov
and
mov
addr16
movsb
test
fistps
lock
pop
push
dec
xchg
add
pop
pop
fdivr
sub
jle
out
sbb
aam
repnz
icebp
xchg
push
sub
mov
jb
jg
push
sbb
push
call
or
xchg
mov
or
pop
fildll
rorb
lcall
cltd
mov
xchg
or
fidivl
iret
lcall
dec
or
sub
xchg
scas
andl
repz
loope
pop
jae
jp
int
lds
cmpsl
stos
mov
mov
sbb
popa
rcrl
push
jae
dec
inc
pop
lret
lret
dec
push
lret
pop
fsubrp
mov
in
lcall
xchg
adc
xchg
popf
jle
fldt
and
scas
mov
insb
int3
push
cmp
adc
inc
testb
sbb
or
inc
pop
scas
div
jl
mov
mov
inc
sub
adc
dec
leave
pop
xlat
jns
dec
hlt
test
pop
cltd
aaa
sbb
jg
push
push
sbb
add
arpl
adc
jmp
xchg
cs
dec
int
sub
jne
adc
imul
pop
std
xor
in
arpl
mov
test
stos
stc
sub
pop
add
clc
enter
sarl
sbb
pop
mov
mov
and
nop
aaa
mov
inc
adc
adc
in
and
loopne
mov
fdiv
pop
adc
mov
push
out
bswap
adc
xchg
movsl
movl
std
clc
or
xchg
push
subl
jns
leave
cmpsb
inc
xchg
adc
ja
mov
mov
test
cmp
adc
mov
gs
sub
fs
mov
dec
jb
xchg
pop
sbb
fwait
lea
jle
mov
adc
cmpsb
popa
mov
pop
dec
hlt
cmp
in
call
cs
or
adc
inc
test
arpl
movsl
adc
movsl
xchg
sub
cli
rcl
push
inc
ret
lock
pop
push
jle
aam
out
jb
lock
pop
sarb
xchg
mov
aam
loope
inc
mov
scas
lcall
push
test
clc
xchg
mov
ret
xchg
lock
test
and
mov
adc
xchg
mov
jae
ret
stos
push
mov
sahf
lods
mov
xor
sub
jnp
je
sar
repnz
out
pop
in
inc
addb
iret
shrb
add
rorb
sbb
push
aad
cltd
addl
es
xchg
add
lods
push
adc
notl
xchg
mov
mov
jo
rolb
aad
pop
sti
jg
mov
call
lods
enter
jns
repnz
add
and
sbb
fidivs
push
mov
cmpl
loopne
cmc
rcrb
andl
pop
je
fcmovne
mov
xor
xor
adc
shlb
loopne
nop
sub
pop
dec
arpl
rcrl
jo
dec
and
mov
jecxz
mov
pushf
dec
mov
ret
mov
pop
mov
mov
mov
mov
call
add
mov
stos
arpl
mov
ja
cld
mov
sub
sub
xchg
insl
xor
outsl
and
cmpsl
cmp
dec
and
mov
lret
cwtl
inc
sbb
outsb
cmp
dec
jge
es
stos
fs
push
fnstenv
dec
add
jge
movsb
lods
sti
ljmp
lods
jle
pop
adc
stos
and
sbb
cli
mov
fbstp
mov
pop
cs
aad
pop
xchg
icebp
imul
aam
je
stos
mov
mov
or
sti
xlat
addr16
in
push
xorl
lret
iret
int
scas
and
xchg
pop
cmp
inc
fldz
mov
xor
dec
mov
mov
int3
mov
sti
or
cwtl
adc
jl
or
push
leave
or
outsl
sub
inc
stos
sar
mov
cmp
call
cld
jne
lahf
lods
in
es
pop
aaa
push
shl
outsl
xchg
push
lods
dec
xchg
shrb
sub
jnp
add
ljmp
pop
jp
aad
jae
inc
push
push
and
push
mov
popl
mov
cmp
pop
shll
cmp
xchg
sbb
insb
mov
fidivrs
jb
mov
mov
nop
test
mov
add
add
add
xchg
imull
int
xchg
subb
js
push
fistl
ljmp
in
adc
sarl
mov
or
xor
mov
bnd
add
scas
aaa
sbb
xlat
xchg
mov
dec
jmp
jg
mov
xchg
lret
je
mov
shl
pop
and
mov
mov
dec
push
call
adc
sbbl
test
outsb
pusha
pop
in
ljmp
push
sahf
mov
inc
pop
or
jge,pt
cs
or
sub
mov
mov
pop
insl
mov
test
call
adc
aas
and
add
pop
or
or
push
fadds
fidivrl
pop
xor
test
mov
xchg
int
xchg
scas
mov
jge
ss
inc
cmpsl
bound
dec
pushf
mov
sub
jmp
or
out
push
sub
out
addr16
popa
rcl
arpl
jno
mov
push
aam
popf
das
push
or
idivb
pushf
or
mov
scas
scas
icebp
setb
xchg
xlat
sub
repz
test
in
jae
sub
nop
pop
xor
outsb
fcoms
orl
movsb
xchg
mov
lret
xor
lahf
in
in
push
push
xor
push
sti
int
xchg
push
out
mov
dec
je
out
cmpsb
mov
pop
mov
add
filds
ds
sarb
inc
jmp
sbb
sbb
sbb
mov
in
push
clc
loopne
in
jae
jmp
jge
cmp
dec
daa
cmpsl
dec
pop
adc
ss
ja
push
pop
xchg
sbb
aam
mov
arpl
adc
fnstcw
push
sarl
fcmovb
mov
stos
push
iret
fwait
mov
inc
sbb
outsb
dec
or
cmp
ret
fldcw
push
ljmp
or
mov
outsl
out
push
shlb
xor
xor
popa
sbb
sub
aas
in
xor
push
ja
sbb
pop
adc
out
or
ret
les
mov
pop
sub
rcrb
xor
scas
int3
jecxz
mov
rcrl
insl
xor
jns
or
push
cwtl
dec
mov
jbe
fildl
mov
addr16
pop
aaa
cmp
fwait
test
int
imul
sbb
incb
mov
push
imul
pop
sub
repz
test
mov
loop
ljmp
movsl
stos
push
mov
outsb
addr16
aad
lret
fldcw
xor
clc
jle
repnz
stos
mov
mov
mov
pop
mov
adc
out
fisttpll
cmc
cmpsb
js
lods
outsb
dec
add
push
aas
xchg
xchg
fnstenv
test
sub
inc
jp
fadds
cs
je
adc
out
cmpsb
sti
xor
lock
mov
and
mov
add
hlt
dec
adc
or
int3
mov
and
xchg
clc
scas
mov
movsb
xchg
icebp
gs
sbb
mov
pop
js
popf
mov
mov
push
xor
push
dec
sbb
sahf
xchg
shlb
jbe
dec
mov
push
scas
imul
and
cmp
xorb
pop
imul
push
repnz
lds
clc
dec
leave
out
inc
xor
lret
aad
mov
or
pop
mov
hlt
sbb
mov
lret
inc
push
xor
addr16
movsl
xor
sarb
ljmp
dec
sbbl
mov
ds
cmp
int
push
xchg
push
jg
mov
pushf
mov
push
mov
mov
out
stc
dec
lret
pop
test
mov
xchg
xor
cltd
mov
sub
lcall
or
cmp
cwtl
or
pop
mov
das
std
push
xor
hlt
dec
int3
sub
pop
sbb
pop
inc
mov
or
add
and
push
cmp
stos
inc
stc
xor
xchg
add
push
jno
push
test
xor
mov
or
xor
push
adc
push
rep
inc
fidivrs
sbbb
xchg
daa
or
stos
test
mov
sbb
xchg
adc
movsl
jecxz
pop
mov
pusha
outsl
pop
imul
lret
mov
jno
xchg
lods
sub
addr16
scas
push
inc
out
js
cmp
int
dec
adc
test
inc
insl
adc
imull
push
in
or
and
pop
or
xor
popf
js
mov
push
xchg
fstl
imul
xchg
outsl
sbb
iret
int3
jmp
scas
arpl
dec
push
fwait
and
mov
inc
imul
rorb
mov
push
mov
bound
sbb
or
dec
push
arpl
sub
cwtl
cmp
xor
mov
mov
cli
rcll
or
add
clc
cmp
adc
push
add
mov
out
sub
mov
jb
mov
test
pop
das
mov
dec
add
xchg
outsb
out
test
lds
iret
xor
cmp
mov
aas
sti
cmc
iret
jb
add
and
aaa
adc
mov
in
mov
fdiv
sbb
aad
sub
hlt
in
push
sbb
and
inc
or
into
cwtl
fwait
push
into
dec
lds
les
popf
dec
mov
jae
xchg
std
pop
mov
scas
jge
fsub
mov
push
mov
pusha
sbb
jp
mov
mov
stos
fisttps
outsb
sti
into
frstor
jns
int
and
xchg
xor
pop
test
inc
or
cmp
ss
sub
push
bound
sbb
rcrb
shrl
sbb
sub
jl
adc
ret
mov
pop
push
scas
mov
mov
mov
test
popa
xchg
test
fwait
cli
push
jmp
and
cmpsb
mov
inc
stos
aas
ret
hlt
add
mov
cmp
sar
lcall
js
or
mov
out
mov
push
out
fcmovbe
xchg
and
pop
xchg
xor
jno
and
test
xor
push
stc
test
push
out
cld
jne
xchg
mov
xchg
lea
push
sbb
jno
push
arpl
dec
xchg
fidivl
in
ffree
clc
jl
jp
mov
xchg
xor
ds
ret
cs
das
pop
xchg
enter
and
mov
lock
sbb
sub
sbb
cld
mov
xor
push
cli
movl
js
test
push
lods
pop
cmp
jp
push
movsb
or
pop
cmpb
lret
pop
dec
mov
jne
xor
jbe
fistpl
jmp
mov
pushf
and
or
or
daa
mov
fcoms
adc
out
es
negl
adc
jle
fs
pop
lods
je
add
or
or
jp
sbb
aam
cmpl
push
dec
and
push
mov
dec
aam
sub
sub
jecxz
sub
mov
fcomi
out
mov
pop
pop
mov
into
jge
adc
test
dec
mov
das
sub
cmpl
bound
addr16
test
repnz
int
ss
out
xor
bound
mov
sbb
cmp
push
mov
adc
adc
xor
mov
mov
out
and
push
jmp
repz
cmp
les
es
aaa
orl
mov
mov
mov
sbb
sub
inc
loope
into
lea
mov
push
gs
sbb
jmp
std
inc
sub
addr16
push
adc
imul
ja
sub
mov
test
enter
jnp
cmpsl
cmp
adc
adc
jle
mov
ja
sub
dec
jb
cltd
testb
movsl
lods
mov
imul
adc
arpl
sub
in
js
int3
es
and
adc
scas
negb
add
mov
inc
and
push
sbbl
cmp
xchg
shr
xor
adc
and
pop
dec
jns
lds
cld
ficomps
inc
cld
sbb
loope
lahf
jp
mov
sahf
nop
les
jns
mov
or
jne
dec
push
mov
mov
dec
test
jle
addr16
inc
aad
scas
pop
lahf
lret
inc
adc
insl
lret
adc
push
pop
sub
adc
pop
dec
sarl
enter
bound
push
std
mov
push
into
insl
lock
xchg
stos
imul
in
jmp
out
hlt
mov
fnstcw
xor
push
xchg
daa
or
aam
pop
outsb
imul
xchg
test
loopne
aas
leave
lcall
cld
pop
lods
mov
mov
adc
inc
jle
lods
das
fildl
mov
fimuls
xor
push
sbb
imul
ret
push
pop
xchg
pop
pop
lock
adc
and
scas
push
xlat
ds
insl
sub
scas
iret
mov
insl
aaa
pop
fsubrs
scas
inc
das
mov
in
and
lds
int3
pop
loop
fsubrs
sbb
mov
out
sub
add
dec
sbb
cmp
int3
notb
xchg
inc
out
loopne
mov
repz
les
cmpsl
bound
ret
les
cmp
lds
insb
adc
pusha
xchg
nop
add
inc
sahf
in
and
imul
xor
lods
cwtl
stos
xchg
jnp
pop
xor
out
jnp
sti
lcall
push
jo
not
fisubl
inc
mov
iret
out
cmp
imul
or
mov
je
shll
pop
aaa
push
in
fsubl
and
ljmp
pusha
arpl
outsl
int3
sub
or
icebp
outsb
mov
xchg
hlt
or
fbld
cmp
adc
scas
cmp
movb
rep
es
adc
test
or
xorl
xchg
pusha
jno
fsubrl
addr16
dec
inc
out
and
aas
shr
pop
add
out
push
add
repnz
mov
add
out
stc
and
je
fisttpl
pop
and
test
pop
add
inc
cmp
pusha
adc
lods
sbb
cmpsl
push
loope
shrb
sbb
jne
pop
mov
ret
xchg
stc
cmp
sahf
jg
test
sub
or
pushf
pop
fisubl
jo
scas
jecxz
ret
addr16
cmp
aad
rclb
test
or
pop
stos
shrb
mov
fldenv
jne
sbb
cmp
xor
lcall
mov
ja
or
jge
push
xchg
jmp
mov
insb
ja
xor
xchg
or
daa
cmp
jmp
cmpl
notl
rcrl
jnp
pmuludq
ds
dec
stos
push
movsb
ds
xor
pop
cmp
jno
fsubrl
out
shlb
push
add
pop
pop
dec
or
push
test
ret
add
xchg
mov
loop
xchg
aam
mov
insb
scas
stos
lods
arpl
fistpll
aam
int
mov
dec
imul
sbb
sub
dec
ret
rcl
hlt
push
pusha
jecxz
xor
or
jnp
mov
xchg
mov
lds
mulb
outsl
aam
inc
dec
and
adc
out
fildll
dec
mov
fcompl
fistl
or
test
cwtl
mov
pop
xorl
sub
lret
jae
sbbb
into
mov
sub
test
repz
push
pop
lahf
repz
aas
jmp
add
mov
movsb
mov
mov
call
mov
popf
out
fs
aam
pop
pushl
addr16
or
dec
test
lods
mov
pop
fs
mov
outsl
inc
and
out
jo
mov
xor
and
shl
and
mov
inc
movsl
dec
test
pop
clc
loop
or
push
fldenv
inc
sub
push
push
jnp
dec
push
sbb
pop
lock
push
shl
loop
xor
push
pop
mov
iret
cmp
lahf
xor
mov
jne,pn
xchg
and
dec
cltd
dec
ds
dec
loope
fdiv
cmp
loopne
push
jne
lahf
sub
pop
ds
dec
push
or
pusha
movsl
enter
fldl
mov
test
int3
aam
cmpsl
dec
jp
icebp
orl
inc
ss
and
fnsave
lods
int
popf
inc
mov
cmp
fists
adc
cmpsb
pop
inc
movsl
cld
pop
mov
mov
cmp
fidivl
adc
cmp
addl
fs
jge
lahf
ja
sub
in
sub
in
or
xchg
xor
dec
dec
mov
jl
lods
lret
lds
sahf
inc
in
notb
fnstenv
add
xchg
bound
adc
or
and
push
add
shl
repnz
psubw
test
out
sbb
les
hlt
js
pop
insb
mov
jecxz
outsb
dec
push
aam
je
pop
adc
loope
mov
or
andb
adc
hlt
ret
mov
repz
sub
lock
js
fsub
imull
mov
and
sub
xchg
xlat
stc
push
repz
outsl
clc
aas
pop
les
mov
xchg
ds
pop
push
push
addl
iret
lcall
xor
pushl
aad
xchg
and
cltd
cmp
push
into
mov
mov
in
mov
push
inc
jns
outsl
popf
js
mov
pop
add
leave
les
sbb
sbb
mov
adc
or
pop
mov
mov
xchg
or
pop
femms
inc
in
ffreep
out
cmp
aas
inc
inc
cmc
pushf
mov
or
mov
mov
rclb
inc
inc
or
cmp
pop
fs
sub
int
es
jg
xchg
jo
iret
add
repnz
inc
mov
lret
jae
push
mov
xor
inc
lret
movl
je
rolb
sub
jno
shlb
jecxz
mov
scas
push
add
xor
lods
dec
je
xchg
mov
push
adc
pusha
fnstsw
pop
out
pushf
jb
scas
add
xchg
sbb
cmp
outsb
popa
pop
push
hlt
int3
or
repnz
movb
mov
aaa
in
push
push
pusha
sbb
arpl
add
aas
popa
mov
add
mov
and
cltd
inc
push
outsb
aad
mov
sub
lahf
out
je
inc
inc
mov
lcall
xchg
imulb
outsl
in
or
jae
dec
xchg
dec
xchg
fstpl
push
fdivrs
sbb
mov
movsb
xor
mov
daa
xor
je
mov
test
mov
lods
popa
jbe
sti
sbb
out
mov
inc
cmp
andl
push
fiadds
pop
cmc
sbb
dec
push
aam
xchg
sbb
shl
stc
jl
test
adc
fxch
dec
jno
push
iret
int3
decb
scas
xlat
inc
dec
xchg
enter
mov
adc
mov
push
lea
mov
and
pusha
xor
popa
jo
pusha
lahf
and
jb
aaa
mov
xor
aam
jns
repz
sub
sub
pop
pusha
aam
mov
or
in
mov
aam
cmp
testl
push
insl
pusha
sub
xchg
mov
negl
push
ss
adc
clc
into
cmp
sbb
mov
or
jp
shrl
cltd
popa
dec
add
cmpsb
mov
test
mov
mov
and
repnz
mov
push
jno
lcall
movsl
xor
in
xor
in
dec
decl
pop
cmp
mov
cmovne
test
add
jge
mov
rorl
fucomi
mov
xor
add
mov
mov
das
and
mov
icebp
fwait
or
xchg
repnz
lret
cmpsl
fcoms
lret
adc
pop
push
int3
xor
xor
scas
into
ja
xlat
sbb
lret
dec
pop
into
repz
inc
mov
xchg
or
fbstp
jne
inc
fsubl
pusha
or
mov
pop
repnz
lods
mov
sti
adc
lods
imul
lahf
loop
adc
cmpsb
das
call
cmp
pusha
sbb
fnsave
mov
sub
lret
or
icebp
lret
rcr
and
add
jmp
js
mov
mov
call
adc
ljmp
xchg
lds
adc
repz
fidivs
rcr
jae
and
cmp
cltd
mov
mov
xor
dec
add
xor
mov
jge
int
inc
push
out
dec
pop
sub
add
fildl
lahf
clc
cwtl
mov
outsl
popf
aam
fstpt
mov
xchg
lods
add
push
iret
enter
into
sbb
fsubr
lea
and
sarb
mov
stc
pop
adc
or
pop
add
cmpsb
shll
xor
xor
jp
test
cmpsb
ss
cmp
stos
neg
mov
mov
hlt
pop
cmpsb
push
clc
cli
vandnps
xchg
and
jmp
jbe
mov
cmpsb
frstor
lock
out
inc
negl
sbb
dec
notl
pop
cs
popa
popf
inc
arpl
pop
gs
push
incl
mov
test
sbb
mov
inc
mov
das
insl
fcomps
enter
mov
jg
lock
sbb
les
xchg
dec
imul
add
xorl
or
or
ljmp
loope
pushf
add
inc
or
cs
sbb
push
fstl
hlt
xlat
je
mov
dec
das
cmpsl
xorb
mov
out
stc
mov
xchg
xchg
cld
je
shrb
stos
jmp
cwtl
rclb
sti
sahf
test
push
fildl
cltd
cltd
ds
int
xor
lock
sahf
mov
rorb
xchg
sarb
ret
sbb
cmp
cld
cmp
fistps
pop
leave
add
shrl
sub
mov
push
call
imul
push
sahf
dec
adc
adcl
inc
das
mov
sbb
xor
or
iret
jo
stos
test
add
add
loop
jae
test
xor
adc
jp
or
insl
fdivrs
xor
in
loop
addr16
xor
fadd
xor
in
jno
mov
lock
dec
or
or
adc
lods
in
cmp
add
dec
mov
dec
fcomps
gs
aam
and
xchg
inc
js
pop
movsl
and
popf
add
xor
scas
out
movsl
imull
roll
or
fnstsw
into
test
push
push
sub
or
shl
xchg
inc
hlt
pop
jle
sbb
mov
ret
pop
shlb
push
xor
mov
cld
lods
les
ret
pop
mov
ljmp
add
cmp
imul
jmp
fistpll
dec
sub
xlat
mov
lret
out
test
data16
xor
divb
jmp
in
sub
adc
xchg
sub
fs
xchg
sti
mov
dec
xchg
and
jmp
pop
mov
sysexit
jge
sbb
pusha
and
or
mov
fsubl
stos
or
lret
repnz
js
dec
inc
sub
arpl
pop
pop
push
cwtl
mov
je
cs
pop
cmc
cltd
imul
imul
mov
loope
bound
inc
gs
data16
je
push
lock
test
repnz
bound
mov
iret
sub
jo
in
pop
movsb
add
inc
jl
imul
std
pushf
inc
andb
int
rorl
mov
scas
mov
and
div
or
out
hlt
sub
jno
ret
testl
lcall
xor
xor
mov
add
mov
lea
pop
sbbl
shll
adc
pop
inc
iret
testl
fs
adc
outsb
xchg
sbb
stc
fdivrs
cmp
or
imul
je
incb
shll
adc
fwait
ret
imul
xor
pop
lods
or
gs
cmp
repz
rolb
sbb
imul
outsl
daa
cltd
int
and
dec
iret
test
xor
and
mov
test
popf
cmp
stc
or
xor
int
roll
push
inc
push
outsb
imul
sub
test
mov
pop
push
cmc
lret
jg
int
test
aas
repnz
ja
lret
jecxz
and
fldt
sbb
addr16
mov
inc
cmovb
inc
jne
mov
into
icebp
pop
pusha
into
mov
jb
jns
cmpsl
or
arpl
mov
xchg
enter
popa
xchg
movsb
jo
and
pop
xor
out
adcl
aad
icebp
push
lahf
jb
test
les
roll
pop
jne
insb
jb
push
pop
in
lds
ljmp
cmp
mov
fisubl
mov
fsts
mov
mov
sbb
pop
push
xchg
pushf
dec
out
dec
fbstp
leave
in
or
xchg
cmp
sahf
push
xor
sub
xchg
aaa
and
packssdw
repnz
sbb
dec
xor
mov
sub
shlb
mov
push
xchg
out
shll
sbb
mov
insb
mulb
rcll
repnz
cmpsb
in
xchg
mov
push
sub
pop
add
aam
call
ss
xchg
in
mov
fwait
mov
jae
into
jmp
pusha
imulb
push
xchg
and
int
andb
and
test
sbb
jg
loope
das
xchg
push
leave
ret
sbb
in
fstpl
and
mov
imul
cmpsl
mov
cwtl
fcomp
arpl
adc
popa
mov
pop
xor
or
adcb
mov
data16
push
test
stc
xchg
pop
shll
loop
movsb
insb
in
or
mov
xor
sub
sahf
jecxz
push
xor
aas
stc
push
test
jne
xor
mov
sahf
mov
data16
mov
mov
mov
jmp
test
mov
in
mov
pop
js
jae
repz
push
jle
jae
pop
jmp
call
inc
enter
int3
adc
jb
sub
sbb
cmpsl
mov
cmp
pop
in
pop
mov
pop
ret
xchg
mov
iret
pop
hlt
push
nopl
in
add
xchg
lret
xchg
adc
dec
cmp
ror
idiv
ja
aad
cmp
sbb
cmpsb
aam
cmpsb
bound
xchg
dec
mov
shlb
xchg
xlat
sbb
jae
pushf
test
push
in
ret
arpl
xchg
sub
popl
js
js
cmp
mov
jmp
jmp
push
fidivrl
repnz
mov
and
fsubrl
dec
movsl
sbb
cmpsl
mov
xor
jl
push
jns
pop
xor
and
sbb
inc
cmp
dec
jb
ljmp
or
sub
jl
icebp
sub
cmp
fldcw
out
mov
cmp
inc
jmp
pop
aad
mov
insl
mov
rcll
xorl
scas
enter
or
xchg
iret
add
lods
daa
adc
and
rcrb
das
jmp
addr16
imul
cmp
mov
mov
mov
or
mov
test
nop
jg
jns
les
jle
cmp
imul
lret
daa
pop
outsl
data16
push
cs
int3
jle
ss
inc
xchg
pushf
js
inc
lods
pop
into
rolb
aam
adc
mov
jle
cmp
add
jb
movsl
add
divb
pop
dec
in
aam
dec
cmpsl
dec
je
stc
cli
repz
and
mov
adc
inc
mov
inc
in
aad
sub
mov
dec
mov
cmp
push
rep
push
in
push
bound
mov
mov
xchg
lret
pop
cwtl
outsb
adc
cmpsb
das
dec
push
mov
int
es
inc
mov
sbb
add
lret
push
inc
push
dec
xchg
stos
mov
fprem1
add
pop
sub
mov
lcall
cmp
mov
aaa
push
mov
or
lea
mov
into
mov
sub
jl
fwait
out
clc
mov
jbe
sbb
sbb
and
or
rcl
cmp
test
xchg
sub
aad
lret
aaa
outsl
or
cmpsb
mulb
xor
push
dec
insb
sqrtps
loope
dec
shlb
lods
fists
stos
mov
sbb
jle
adc
fcmovnb
fistps
dec
mov
mov
pop
push
ret
dec
outsl
mov
jg
push
mov
xchg
cmpb
leave
stos
xor
int
push
jp
aam
int3
pop
out
daa
ret
je
mov
cmpsl
add
cmc
in
mov
cmpsl
sub
clc
and
stos
mov
pop
sub
inc
leave
and
js
mov
lret
xchg
mov
sbb
mov
mov
jp
lret
mov
std
stos
fnstenv
mov
aad
std
mov
or
cwtl
pop
fisttpl
cmp
stos
sbb
andl
pushf
or
ss
scas
hlt
pop
ficoms
insl
and
xor
adc
aas
in
sub
push
add
ljmp
mov
loop
sbb
xchg
and
mov
popf
loopne
pop
nop
pop
fsubrs
ret
xchg
lea
stos
test
jo
and
xchg
or
enter
mov
xor
pop
push
pop
aas
loope
popl
imul
pushf
out
jno
rol
jp
sahf
out
push
sbb
mov
mov
out
stos
subl
and
outsb
adc
adc
mov
pop
clc
push
xlat
in
cmpsl
dec
lods
mov
pop
cwtl
into
std
sub
aaa
scas
and
mov
cmp
ficoml
das
pop
pmullw
sbb
les
pop
add
fucomi
jge
stos
sbb
aad
aas
push
add
xchg
and
dec
cmp
cltd
adc
push
cmc
imul
bound
shll
outsl
sub
sub
ljmp
fwait
jecxz
push
lcall
mov
test
add
pop
outsl
push
sbb
imul
jns
xor
popf
cmp
mov
sbb
add
mov
adc
xchg
movsb
test
sbb
insb
mov
jl
xchg
test
out
ret
stc
hlt
mov
in
aaa
cmp
aad
jo
add
daa
xchg
je
inc
and
in
pop
ret
cs
push
mov
push
push
outsl
out
ja
or
lea
mov
xchg
pop
fs
test
stos
sub
and
xorb
jno
je
or
push
sbb
xor
maxps
insl
or
fidivl
adcl
add
stos
out
loope
clc
ja
shlb
imul
jnp
fucomi
sbb
test
push
jns
xlat
mov
mov
fistpll
scas
das
pop
cli
jp
add
jbe
push
fisttpll
je
push
lock
lods
cmc
or
pop
push
xchg
out
and
lods
or
mov
mov
pop
dec
pop
mov
sbb
pop
js
cmpl
cmp
jne
fldt
push
mov
enter
xor
out
mov
scas
aad
inc
lret
pop
out
fldcw
mov
add
cmp
inc
scas
loop
cld
mov
adc
enter
js
mov
mov
dec
fisttpll
call
xchg
push
xor
scas
sbb
and
inc
mov
lahf
sub
jno
adc
aas
test
xor
xchg
jnp
jmp
cmp
mov
rcll
ret
mov
xorl
pop
push
sti
cwtl
enter
push
in
dec
xor
sbb
movsl
loop
in
cld
je
shll
lahf
jne
pop
les
and
push
outsb
loop
shlb
mov
cmpsl
subb
xchg
neg
and
jnp
testb
ljmp
cmpsl
xchg
mov
and
cmp
lea
loop
iret
or
and
sub
jmp
movsl
les
ja
xchg
sbb
xchg
aad
mov
cmp
push
add
shll
push
hlt
fs
popa
push
ret
mov
sti
jb
sbb
jle
repz
lds
xchg
inc
xchg
sub
xchg
lds
ljmp
fisubs
cltd
xchg
or
push
xchg
out
sbb
or
fucom
mov
lret
data16
pop
sbb
lods
loop
orl
cmpb
jbe
inc
leave
leave
imul
jmp
push
push
popa
mov
add
ret
xor
adc
xchg
mov
out
dec
pop
mov
or
mov
sti
mov
and
in
addl
pop
cmc
loope
push
mov
xorb
lahf
pop
cmp
xchg
out
gs
in
or
jnp
mov
addl
xor
cld
pop
ljmp
sbb
xor
stos
lock
xchg
pop
cld
xchg
pushf
mov
int
std
nop
push
mov
ljmp
sbb
loope
pusha
in
xchg
jge
add
sbb
jge
xchg
outsl
icebp
data16
cld
dec
jge
sub
push
enter
imul
pop
loopne
xchg
fisubs
sbb
mov
repnz
sbb
mov
out
xchg
and
mov
push
aas
push
stc
cld
ss
add
pop
loope
or
lcall
cmpsl
js
sbb
in
mov
out
lcall
cmp
lret
stos
loopne
mov
cmp
xacquire
imul
inc
rclb
mov
int
imul
idivb
ret
es
mov
add
out
incb
dec
add
mov
daa
mov
sub
inc
mov
or
cltd
in
lcall
push
dec
loopne
cltd
adcl
xor
in
inc
int3
outsb
repnz
std
and
pop
cmp
sub
lret
mov
mov
pop
in
pop
sbb
adc
pop
mov
or
ljmp
popa
subl
cmp
xchg
add
jp
cs
sbb
pop
subl
lods
jbe
sbb
sbb
outsb
dec
adc
xchg
sub
inc
gs
cmp
push
cmp
sub
push
loop
movsb
loope
mov
clc
sti
add
test
jl
dec
or
in
ret
pop
or
xchg
ja
outsl
jae
popf
outsl
mov
fdivs
xchg
mov
fidivrl
inc
bound
mov
jmp
mov
sahf
in
rcl
popa
cwtl
gs
neg
pop
xchg
cli
outsb
cmp
mov
lret
and
insb
aam
jae
fnstenv
mov
cmp
inc
cmp
test
sub
inc
movsb
lods
adc
shr
dec
fwait
push
dec
data16
orl
testl
mov
outsb
cmp
repz
ret
jns
add
mov
push
jge
dec
mov
jl
int3
jo
inc
push
sahf
mov
push
mov
call
sbb
fldl
xchg
leave
jp
sub
mov
jmp
subb
fnsave
mov
mov
adc
lods
xor
ss
call
outsb
push
push
push
daa
ljmp
rcr
mov
js
mov
inc
cmp
cli
push
add
mov
pop
xchg
aam
push
xorb
scas
xchg
pop
add
sbb
call
push
ret
cmp
push
push
stc
adc
les
stos
xchg
mov
inc
in
aam
dec
pushf
std
sbb
push
notl
mov
push
mov
jg
cwtl
pop
rcrl
out
rcll
test
addr16
inc
cmp
jns
inc
fldl
fxam
repnz
mov
test
pop
jne
std
es
jbe
mov
cmpsb
dec
sti
push
sub
and
cli
outsb
int3
mov
ret
adc
loope
dec
ljmp
es
and
or
dec
ljmp
imul
jae
fs
pop
fdivp
jmp
lods
jnp
push
mov
push
dec
aaa
or
lcall
xchg
ja
push
out
dec
xor
jae
push
add
fs
xor
add
push
jno
sbb
outsl
mov
jno
mov
repz
movsl
insl
data16
lods
sbb
jge
jae
cmp
xchg
in
xor
stos
add
push
xchg
ljmp
add
xchg
mov
push
mov
push
les
addl
stos
lods
in
mov
xchg
fcoms
testl
aas
mov
les
std
mov
jne
cmp
mov
clc
les
push
dec
xor
and
test
xchg
aam
ljmp
xor
std
in
mov
gs
dec
aas
not
and
jns
pop
jb
shll
stos
daa
insb
cmpsl
add
nop
sbb
xchg
mov
add
out
test
out
cltd
mov
mov
sub
or
ljmp
cmp
jno
xchg
sti
dec
call
loopne
testl
pushf
lret
pop
adc
lcall
and
jne
je
in
add
popa
xchg
mov
loopne
hlt
lods
sub
popf
dec
lds
call
lret
push
sub
mov
mov
xor
shrb
xchg
dec
and
mov
imul
push
ss
out
int
dec
sahf
scas
sub
pop
mov
int
gs
shl
dec
loopne
stc
or
fsub
sbb
xor
mov
fstl
jmp
ss
push
xchg
mov
out
imul
bound
xor
mov
repz
lods
cmp
jo
mov
push
shlb
xlat
int
sub
pushf
cmp
or
adc
add
or
mov
mov
inc
jl
mulb
lds
daa
jl
inc
mov
mov
fwait
pop
fsubrs
push
fldt
fdivl
jne
cmp
gs
insb
dec
fcompl
mulb
lods
pusha
hlt
cltd
inc
push
roll
cmp
sar
cmp
imul
lods
call
pop
mov
mov
mov
dec
sbb
stos
pushf
sub
or
and
cli
sbb
bound
inc
inc
or
addr16
adc
mov
jns
notb
adc
aam
and
mov
int3
test
sub
push
lcall
cmpsb
iret
dec
push
sub
jo
sti
ljmp
ss
sub
jp
push
mov
std
adc
mov
cmpsl
jns
sub
enter
adc
pop
push
add
subl
jb
sahf
xchg
sahf
stos
push
pop
out
sti
mov
out
popa
aaa
fdivr
inc
xchg
xchg
adc
stc
jb
stos
rcr
test
mov
mov
mov
adc
out
mov
pop
orb
jle
pusha
sbb
adc
mov
test
push
add
dec
popa
fists
out
xor
into
pop
daa
jo
cmp
insb
sub
pushf
repz
std
lods
shll
sub
outsl
test
pop
icebp
push
test
std
xchg
and
adc
sub
mov
add
adc
imul
xchg
pop
mov
cwtl
lcall
lret
je
lret
mov
xor
stc
out
ja
and
mov
ficompl
mov
lea
mov
fidivl
dec
pop
or
fiaddl
jae
cmp
xchg
sbb
mov
ja
add
sbb
rol
pop
pushf
xlat
and
mov
jbe
inc
add
fcmovnu
sub
dec
dec
adc
rcll
lods
orl
cld
ja
push
enter
xor
jne
repnz
dec
mov
pop
bsf
cli
mov
xchg
jbe
lods
pop
inc
fistpl
mov
or
jge
cli
mov
icebp
jns
or
cmp
jo
fildl
icebp
jmp
out
js
loope
shll
push
cmp
push
jmp
addr16
inc
ret
subl
mov
test
dec
out
fnstcw
jl
loope
cmp
inc
rclb
mov
aad
jno
cmc
inc
fbstp
fmull
fisttps
sbb
faddp
fildl
push
mov
ja
cmp
js
pop
aaa
push
adc
jle
jmp
jb
pop
cltd
push
mov
dec
mov
pop
mov
cli
nop
jmp
mov
enter
push
xchg
xor
insb
pop
push
mov
xchg
or
inc
xor
outsb
mov
js
or
sbb
imul
or
repnz
imul
test
jb
push
icebp
mov
mov
repnz
cmpsb
push
jl
in
xor
xchg
jnp
and
inc
push
add
movsl
jae
jne
sbb
test
fstps
into
push
in
or
and
movsb
push
mov
out
inc
xor
cwtl
and
sbb
jns
sahf
cld
mov
andb
enter
jle
mov
lret
pushf
jmp
mov
pop
push
out
mov
or
pop
pusha
sub
sbb
cmp
sub
sub
fistpl
mov
xor
or
xor
ret
into
cmp
dec
sub
adc
add
xchg
or
adc
ljmp
mov
xor
call
xchg
pusha
lea
sub
in
in
dec
ret
mov
stos
inc
pop
out
or
std
sti
push
jns
stc
jp
dec
mov
xlat
push
inc
lret
inc
out
pop
test
xlat
or
repz
test
lret
lret
mov
cmp
fildl
loopne
int
jmp
fucomp
or
or
dec
mov
aaa
nop
fwait
int
push
pop
clc
dec
or
icebp
test
xchg
movsl
popa
add
sbb
xlat
ss
jg
test
sub
stos
repz
dec
mov
ja
test
js
mov
fists
mov
es
aaa
rol
jno
xchg
repnz
pop
push
jo
int3
repnz
lods
push
xor
mov
push
clc
ja
xlat
loop
fldz
idivb
and
outsb
fmul
mov
adc
mov
pusha
aad
imull
loope
shlb
stos
cltd
or
loopne
xchg
pop
rcl
and
cld
jne
jge
add
inc
insb
lock
inc
and
mov
aaa
loope
adc
jecxz,pn
push
addr16
xchg
inc
mulb
ss
xor
movsl
pop
mov
mov
xchg
dec
dec
push
bound
jnp
dec
in
dec
loope
xchg
in
inc
cmp
filds
mov
dec
and
lock
test
ret
pushw
icebp
inc
out
adc
shl
imul
sbb
pop
aam
scas
and
and
aad
lock
adc
add
pop
out
xor
mov
mov
cmpsl
mov
jo
mov
rcll
rclb
fucom
and
or
xchg
bound
mov
cmp
sbb
mov
cmp
adc
pop
lods
les
inc
loop
pop
cmp
dec
js
iret
sbb
cmp
inc
adc
into
push
in
pop
fistpll
xchg
dec
mov
inc
mov
push
xchg
ret
xchg
xor
movb
sahf
lds
push
push
or
jb
mov
fcompl
dec
lahf
mov
nop
inc
jns
and
xchg
in
pop
cld
addr16
je
mov
lahf
push
cmpsb
xor
ret
dec
ret
sbb
push
cltd
adcb
mov
aad
ja
pop
std
out
pop
out
push
ss
ret
mov
mov
je
sbb
add
xor
mov
ss
push
push
mov
xor
loope
mov
push
int3
or
out
adcb
fs
push
sbb
push
pusha
add
jge
mov
or
dec
jle
add
mov
dec
jnp
adc
jno
pop
lret
lret
or
jns
push
rol
gs
out
jge
lods
out
mov
jmp
das
mov
loope
loopne
sti
stos
pushf
js
scas
mov
pop
test
inc
in
aas
and
xor
or
pop
data16
lahf
and
push
enter
push
fwait
popf
sbb
mov
xchg
pop
ret
mov
leave
push
mov
lahf
sub
push
xor
dec
aaa
mov
and
arpl
push
pop
cmp
and
das
test
add
inc
insl
jnp
xor
sbb
adc
push
stos
xchg
xor
xchg
pop
pop
sbb
or
sbb
notl
negb
ret
les
fs
cmp
sub
cmp
arpl
dec
jns
inc
sub
mov
xchg
cmp
pop
mov
sti
push
pusha
or
sbbl
inc
test
mov
xorb
lea
push
adc
ret
inc
xchg
jge
mov
popf
and
mov
inc
idivb
or
int3
mov
pop
fbld
or
sub
rcll
jge
mov
testb
je
arpl
mov
lea
sub
lahf
js
loopne
mov
mov
mov
lret
gs
test
cltd
jecxz
adcl
pop
cmp
ja
pop
or
arpl
dec
mov
fwait
inc
cltd
lret
cmp
jl
popa
aaa
xchg
popf
lret
cs
inc
imul
sti
dec
movsb
mov
mov
xor
out
icebp
aam
xchg
adc
pop
xor
inc
xchg
mov
fldenv
mov
pop
mov
and
mov
pop
pop
int3
inc
sub
int3
call
sbb
daa
imul
mov
push
or
mov
int
jmp
pop
stc
jo
bnd
mov
mov
shl
xlat
scas
sbb
repz
add
int3
add
pop
dec
cli
into
jb
inc
sub
and
into
mov
adc
pop
cmp
cmp
out
fistpl
lds
sub
and
push
inc
jge
sbbl
mov
addr16
jmp
jle
and
cmpsl
cwtl
cmp
inc
sub
and
and
inc
cmp
js
or
ds
lea
sub
popa
push
cmp
push
shlb
sbb
jl
popa
loopne
lret
xchg
jmp
jo
scas
sahf
ret
xchg
adc
adc
xchg
loopne
lret
and
and
mov
pushl
inc
xor
test
fs
mov
cmp
stos
aas
test
add
mov
in
lahf
dec
leave
lret
sub
push
push
sti
iret
arpl
ds
scas
movsl
ffreep
xchg
push
mov
mov
test
sub
mov
sub
outsl
adc
push
ret
dec
mov
ja
jmp
xor
xor
sub
sahf
fcoms
push
shll
dec
aas
loope
into
ljmp
popf
mov
scas
mov
ret
cmc
pop
movsl
or
mov
mov
cmp
jecxz
aas
dec
dec
inc
xor
popa
xchg
xorb
lea
sbb
and
cmpsl
es
imulb
inc
pushl
and
sub
add
push
daa
scas
xchg
fldl
add
aam
inc
and
lods
pop
lret
mov
scas
ljmp
les
sti
inc
aas
or
xlat
dec
and
cmp
add
adc
mov
adc
imul
and
subb
mov
jle
jecxz
mov
or
cmp
nop
enter
dec
sbb
scas
scas
imul
imul
pop
push
mull
push
pop
fdivl
cmp
inc
add
test
popa
inc
and
mov
xchg
adc
sub
int3
cs
bound
sub
adcl
mov
mov
mov
pushf
pop
or
xchg
ret
mov
jo
push
jno
dec
mov
stos
repnz
jb
mov
adc
xchg
fcoml
es
flds
das
bound
push
int
adc
mov
sub
push
sub
jmp
data16
movsb
decl
sbb
ret
adc
or
loopne
dec
xor
pop
sbb
sub
inc
xor
and
cmp
lahf
mov
sub
sbb
fs
test
test
pop
xor
jnp
lahf
jae
cld
pop
push
test
sbb
cs
cwtl
dec
rcl
rcl
fs
xor
dec
inc
sarb
cmpsb
mov
push
push
scas
stos
mov
push
or
inc
push
je
mov
in
xor
test
loopne
mov
mov
jg
push
cwtl
sahf
mov
push
cltd
mov
test
lods
inc
ret
or
sub
fwait
cmc
test
lret
adc
xor
sub
in
lahf
mov
inc
pusha
jecxz
xchg
mov
mov
cmp
xchg
mov
sti
test
xlat
loop
pop
ret
inc
inc
icebp
ljmp
pop
or
or
decb
leave
mov
mov
int3
jbe
mov
jns
mov
lock
cmp
addr16
les
push
idivb
aad
cld
es
and
into
int
adc
andl
or
lods
fadds
jo
gs
mov
les
mov
push
or
push
fcmovu
filds
lret
sub
cltd
xchg
scas
push
cwtl
dec
xchg
jno
push
push
mov
mov
sti
pushf
cmpsl
lds
jecxz
lea
ljmp
shlb
adc
mov
js
filds
push
jns
pop
ret
pop
js
mov
jno
mov
jae
mov
and
test
add
push
js
arpl
fisubrl
xchg
aas
movsl
imul
jle
jmp
aad
jbe
xor
iret
pop
lahf
repz
mov
dec
shrl
addr16
in
push
jo
mov
loop
adc
outsb
jmp
movsl
scas
cmp
add
xchg
pushf
or
cmp
xchg
int
add
shlb
lods
mov
push
adc
sbb
icebp
jno
unpckhps
aam
and
in
add
adc
push
fwait
js
mov
cmp
add
xor
iret
xor
rcll
xor
inc
add
mov
jg
enter
cmpsl
pop
adc
mov
xor
jae
cli
out
dec
sub
test
jg
insl
push
inc
cld
mov
or
aad
in
dec
sub
aad
xor
xor
stc
pop
ja
xchg
cmp
dec
ljmp
aad
imul
lods
jmp
jae
push
sahf
shrl
roll
add
mov
movsb
movl
and
fnstcw
xchg
call
push
pop
xor
dec
daa
aaa
mov
cltd
sbb
adcb
inc
push
jmp
dec
adc
leave
or
adc
xchg
adc
gs
pop
stc
push
out
ficoml
cmc
movl
es
sahf
pop
out
xchg
jno
sub
pusha
adc
in
rcr
inc
mov
adc
mov
in
dec
dec
xor
bound
movsb
into
inc
push
xchg
and
movsl
pushf
jae
mov
imul
mov
sub
inc
hlt
mov
and
jns
mov
movsl
inc
cli
repz
jmp
push
fwait
int3
ret
hlt
xadd
call
lods
sub
movsl
jne
dec
daa
xchg
fwait
loop
xchg
adcb
add
jo
jecxz
clc
cs
sbb
add
fimull
or
lret
popa
inc
bound
fbld
fprem1
or
xor
push
out
mov
pop
push
faddl
push
lcall
add
in
enter
std
xchg
mov
mov
test
sti
cmovl
sbb
inc
popa
out
xchg
cmp
int3
cmp
sub
dec
enter
push
les
loop
add
or
out
out
pusha
pop
shll
or
add
cmp
lock
cli
loop
sti
dec
jno
mov
mov
mov
hlt
jnp
je
adc
cmp
lods
ss
mov
add
loopne
aaa
mov
push
mov
cs
mov
ret
cmpl
push
daa
cmc
mov
cmp
push
pop
in
mov
cwtl
mov
xor
clc
enter
push
inc
std
test
aaa
sbb
add
xchg
loop
out
hlt
aaa
stos
push
add
jecxz
fsubl
push
jns
cmpl
push
and
cmp
mov
xchg
mov
inc
sub
in
imul
ja
sub
and
sbb
movsb
push
fcompl
xchg
pop
insl
cmc
push
test
xchg
mov
lret
sbb
pop
push
jge
les
in
subl
push
subb
cmpsb
scas
sub
mov
mov
rolb
or
mov
loop
push
sub
fsts
sahf
xchg
or
jecxz
mov
pop
pop
dec
dec
sahf
xchg
pop
pop
stc
hlt
xchg
inc
scas
inc
movsl
jmp
jae
roll
jae
fidivrl
decl
cltd
popl
iret
push
js
xchg
mov
inc
pop
je
stos
xchg
pop
icebp
jp
inc
push
adcb
loope
inc
xchg
ficompl
mov
mov
jae
bound
xor
fsub
mov
inc
scas
and
imul
inc
push
pop
dec
dec
out
scas
mov
mov
imul
arpl
fisttpll
or
arpl
xchg
loope
es
cmp
mov
inc
out
pop
and
fwait
aas
fwait
inc
test
and
xchg
ss
mov
jne
std
test
insl
xlat
movsb
mov
int3
aad
testl
adc
nop
xor
cld
insl
mov
mov
inc
add
out
outsb
out
adc
test
mov
mov
call
or
xchg
inc
inc
aad
mov
ret
mov
ss
sub
je
movsb
push
and
push
xchg
inc
mov
lock
lahf
shrb
xchg
in
rclb
mov
xor
pop
or
jbe
lahf
xor
sbb
mov
mov
push
rcrb
nop
jmp
es
dec
scas
out
adc
and
lahf
or
xor
push
test
add
test
enter
or
jg
mov
and
inc
inc
popf
inc
stos
popa
int3
dec
pop
xchg
pop
rcrl
test
xchg
sahf
push
fs
imul
dec
loope
cli
sbb
dec
mov
cmc
filds
cmp
sbb
push
lahf
inc
mov
dec
inc
and
test
ret
mov
outsl
xor
lahf
and
popa
or
and
push
pusha
mov
add
rcll
sub
ficoms
fnsave
loopne
daa
adc
sub
lods
inc
outsl
mov
cmp
cmpsl
sub
add
in
lods
xchg
daa
xchg
pop
push
rcll
push
int
lret
jmp
dec
push
lods
xchg
jb
xchg
arpl
cmpb
xchg
loope
std
mov
push
movsb
jle
jbe
adc
insb
xor
cmpsb
or
scas
vphaddubw
push
iret
mov
shlb
sti
outsb
out
stc
outsb
addr16
cs
pop
int3
mov
adc
cmp
ficoml
imul
mov
xchg
js
push
mov
push
ljmp
loopne
test
adc
pop
loopne
daa
mov
pushf
xchg
xchg
xor
shrl
out
xor
sub
insl
filds
push
pushf
push
js
lods
jbe
data16
or
enter
push
scas
scas
repnz
lods
lcall
cmp
and
pusha
mov
lret
dec
xchg
adc
push
shrl
pop
idiv
shll
test
mov
lahf
cmp
sbb
xor
push
xlat
mov
test
jmp
add
xorl
xlat
sbb
or
add
jno
clc
fucomip
scas
ds
mov
mov
pop
jp
jbe
and
add
inc
mov
mov
cmpsb
iret
es
mov
shl
sbb
push
in
les
out
shl
into
xor
mov
dec
in
in
dec
out
and
push
jnp
dec
push
sub
shlb
inc
adc
push
sub
adc
out
in
cmpsb
repnz
jg
into
and
mov
sbb
mov
cs
sub
imul
adc
ljmp
xchg
clc
out
sbbl
test
dec
hlt
mov
pushf
pop
inc
cmp
adc
in
adc
sbb
mov
jmp
cmc
sub
mov
inc
cmc
scas
jno
cmp
adc
push
dec
sub
insl
adc
and
loop
mov
aaa
fnsave
orb
leave
jge
int3
xor
adc
insb
fdivrs
cmp
pop
ret
xor
les
sbb
mull
inc
or
mov
sbb
sbb
sbb
imul
pop
mov
jns
pop
nop
push
jae
cmpsb
and
xorl
fnstsw
aaa
in
in
push
repnz
fadd
bnd
or
fbstp
pop
ret
sahf
cmp
imul
rcll
dec
es
out
in
pop
pusha
jae
scas
push
push
xor
push
bound
xchg
lcall
pop
sarl
mov
sahf
dec
xchg
xchg
jnp
dec
sbb
into
popa
inc
out
mov
sahf
push
sbb
neg
ret
data16
lahf
adc
xor
dec
adc
mov
pushf
dec
mov
cli
cmpsb
fs
stos
or
or
push
xlat
cmp
das
cs
fdivs
adc
je
sbb
xchg
sub
ja
mov
cmpsb
xor
jg
inc
adc
xchg
pop
push
add
es
and
iret
mov
mov
je
fsubs
mov
sbb
arpl
into
xlat
cmp
fidivs
daa
push
nop
jne
xlat
ror
repnz
das
push
xchg
loop
jge
fbstp
hlt
pop
mov
lahf
xor
dec
cmp
in
jg
jmp
add
and
sub
stos
sbb
mov
and
push
pop
iret
je
int3
xor
rclb
and
ror
lods
pop
mov
addr16
and
xchg
loop
ret
xchg
loop
scas
pop
std
dec
ja
mov
loopne
jo
sbb
ja
pop
mov
ja
and
gs
adc
aad
andps
jo
inc
and
cmc
mov
push
je
fs
mov
and
pop
repnz
xchg
movsl
xchg
adc
add
leave
inc
sub
jns
sbb
push
push
int
movsl
push
push
inc
and
fcompl
fsubr
inc
xchg
lods
gs
or
push
fbstp
into
fcoml
scas
sbb
mov
pop
test
inc
loopne
mov
repnz
fdivl
in
psubsb
jl
add
dec
mov
divl
mov
xchg
add
roll
jge
pop
iret
mov
imul
addb
sub
push
jno
dec
mov
cmp
shrb
pushf
inc
inc
lret
and
jns
adc
loope
stos
into
inc
sub
dec
mov
pushf
push
in
clc
cs
cmpsl
push
dec
dec
xchg
sbb
sub
gs
xchg
pop
cmc
adc
pop
shll
cltd
rol
stos
scas
mov
je
sahf
dec
inc
and
shll
xchg
jo
pop
sbb
dec
bound
push
rcll
repz
aaa
or
mov
xchg
sub
daa
mov
sub
mov
insl
out
mov
into
sub
mov
mov
cs
call
xor
shr
add
in
aaa
adc
xor
mov
loopw
adc
call
sbb
or
jo
lea
hlt
fimuls
pushf
mov
lds
sub
cmp
and
inc
lods
imul
lret
inc
jne
add
xor
sub
dec
cmp
stc
jo
and
daa
or
add
negb
and
insb
or
int
cs
scas
sbb
jnp
mov
jae
fsubs
mov
xor
in
lahf
sub
mov
jno
lock
xchg
leave
cmp
ret
les
jge
in
push
lahf
sub
out
cmpsl
mov
sub
xchg
inc
loopne
add
jmp
xor
jge
aas
sti
dec
mov
ret
nop
out
lock
cld
push
jle
aad
or
out
dec
push
jmp
lods
pop
dec
jbe
xchg
call
insb
mov
dec
mov
imul
lea
inc
ljmp
test
cmp
popa
sarl
mov
ds
test
adc
xor
jbe
shrb
in
xor
dec
in
ret
cmpsl
pminsw
into
out
lea
mov
mov
sahf
das
out
mov
out
pushf
mov
ret
xor
sub
jo
lock
jmp
rcrl
ja
jg,pn
mov
jno
dec
sub
and
inc
sub
push
add
stos
test
jmp
jmp
mov
and
rdtsc
sarl
jmp
pop
push
in
xchg
in
popf
mov
insb
jno
pop
pushf
iret
xchg
movb
mov
push
inc
mov
cmp
cpuid
test
mov
cltd
std
xchg
and
js
mov
loopne
hlt
mov
mov
xchg
std
js
gs
frstor
lods
addr16
cld
mov
lcall
xor
cmp
mov
hlt
xchg
je
adc
or
clc
pop
daa
repz
je
or
dec
mov
scas
pop
pop
mov
mov
xor
lods
scas
mov
xor
cmc
xchg
xor
pusha
lcall
push
insl
inc
mov
cld
repz
stos
repnz
daa
mov
fbstp
jle
mov
mov
inc
mov
mov
imul
jmp
cwtd
sub
dec
ret
popf
jno
add
xchg
and
mov
repz
jle
cwtl
js
jb
bound
mov
xlat
pop
les
enter
and
mov
lds
mov
pusha
not
sub
sbb
sar
imul
ja
jb
dec
rorb
popa
fstpl
push
xor
xor
call
sbb
dec
xor
in
sub
sahf
ret
pop
pop
pop
cmpl
jecxz
inc
fisubl
andb
cs
sbb
jecxz
imull
jb
push
movb
pop
lahf
insb
mov
adc
pop
pop
leave
inc
loopne
add
sub
push
dec
out
lock
fstpt
call
ss
mov
test
sub
call
xchg
adcb
adc
hlt
rclb
jg
pop
xor
iret
mov
push
std
loope
and
dec
sbb
je
insb
sbbl
pop
push
stc
jno
imul
sub
clc
cmc
pop
adc
jge
xchg
jns
adc
aam
sub
xor
icebp
in
jmp
and
add
sbb
jnp
mov
hlt
jg
sub
jmp
es
and
fldenv
xor
and
push
fmuls
insb
bnd
mov
inc
fmulp
dec
aad
xchg
cli
lcall
stc
ds
inc
lea
shll
sahf
dec
sub
sbb
xlat
ja
andb
jae
pushf
repz
xor
out
sub
fucom
in
mov
loope
mov
lds
mov
jle
out
mov
dec
jae
dec
or
inc
push
mov
inc
lcall
fiaddl
xor
notl
mov
js
cmp
inc
mov
and
in
cmpsl
js
inc
fnstcw
mov
push
mov
mov
jl
sarb
fcomps
or
jnp
push
push
mov
cmp
mov
xor
lds
jge
cli
sbb
xchg
aad
js
leave
inc
inc
or
or
cmp
push
bound
jns
scas
gs
daa
mov
aas
ret
das
xor
adc
inc
mov
in
fldt
add
pop
inc
mov
xchg
mov
popa
shlb
push
mov
insl
add
out
ja
rcrb
fistpll
arpl
outsb
mov
push
mov
mov
pop
aas
push
xchg
lahf
repnz
fdiv
jl
pop
movsl
dec
push
adc
fsubp
or
fwait
sub
test
fistpll
sub
sub
gs
cmp
and
mov
adc
push
jo
xor
mov
xchg
daa
js
dec
inc
sub
jp
mov
sub
addb
cmc
jbe
loop
inc
cmp
or
pop
and
cmpsb
sub
es
dec
mov
inc
test
or
in
sbb
mov
ficompl
mov
xchg
cmp
scas
jo
int3
pop
and
dec
sarb
fnstenv
sar
dec
sub
sub
push
insb
xlat
lods
adc
dec
push
jmp
cmp
jb
xlat
mov
lret
dec
jns
insl
lea
enter
mov
sub
clc
jno
rorb
sbb
push
dec
jmp
dec
pop
xchg
sub
push
sbb
pop
dec
mov
mulb
das
xchg
or
nop
loop
jns
lcall
dec
mov
or
xor
xchg
mov
inc
fstpt
push
and
add
mov
jne
push
and
clc
nop
int
aad
faddl
pop
mov
decl
insb
dec
fcoms
jl
imul
cwtl
pop
mov
movsb
adc
add
mov
out
lahf
sti
sbb
adc
inc
sbb
adc
dec
out
lret
sub
add
repz
sub
jno
mov
push
jbe
and
nop
rorb
mov
fsubs
ljmp
mov
stos
cmp
pop
int3
call
mov
mov
mov
fsubrl
xor
inc
xchg
jb
and
fnstcw
mov
jp
popf
cmp
inc
scas
int
leave
ds
push
inc
jmp
mov
jle
repz
insl
pop
push
outsl
fnstcw
sbb
stos
lods
fbld
jae
jle
add
xor
sti
xorb
pop
cwtl
add
das
leave
sbb
or
or
aaa
pop
sahf
std
sahf
xchg
or
xchg
sarb
push
fldenv
cmpsb
insl
xchg
inc
nop
daa
xor
test
cltd
sub
xchg
rclb
xchg
ja
sub
outsb
pop
cmp
mov
inc
pusha
fstps
sbb
mov
stc
inc
test
jge,pn
filds
adc
popf
xchg
pop
mov
in
xchg
aas
cmpsl
repnz
push
inc
loopne
and
and
and
jns
ja
xchg
mov
jge
cmp
icebp
push
jl
mov
mov
xor
pusha
sbb
add
addr16
nop
push
dec
inc
mov
addb
sbb
push
sub
adc
add
xchg
adc
jmp
idivb
fwait
pop
mov
bound
push
pop
arpl
adc
popw
daa
les
loop
dec
outsb
add
adc
movaps
fcoms
fwait
les
push
pop
scas
cmp
push
ds
inc
int
add
mov
popf
ja
scas
add
mov
stos
es
cmpsb
and
outsb
iret
push
cmpsl
mov
jecxz
mov
and
je
loope
inc
mov
ljmp
cmpsb
mov
push
fldt
sti
xor
fimull
cmc
inc
arpl
sub
sub
loop
aaa
mov
cmp
pop
adc
push
xchg
pusha
pusha
inc
mov
or
jnp
push
test
lcall
xor
sub
insb
jg
fisttpl
cmp
cmp
adc
mov
xchg
pusha
cmp
stc
adc
cwtl
mov
inc
insb
xor
mov
xor
dec
pop
mov
mov
mov
pusha
insl
jno
mov
mov
xchg
jmp
mov
insb
int
dec
imul
cmp
outsb
pop
mulb
mov
les
out
dec
ret
inc
xor
or
mov
xchg
lcall
inc
xchg
aad
leave
outsl
sarl
and
insl
pop
mov
call
and
outsl
adc
or
idivb
testb
in
or
add
xor
insl
std
mov
jbe
outsb
jbe
cmc
test
data16
pushf
ljmp
add
xor
mulb
movsl
out
and
dec
mov
and
insl
roll
push
adc
adc
dec
add
repz
mov
xor
jns
fidivl
xor
mov
fwait
idivl
mov
jg
adc
inc
inc
call
mov
cmp
js
jl
and
rcll
icebp
adc
outsl
popa
icebp
pushf
stos
or
cmp
pop
or
push
lret
mov
mov
mov
push
mov
jo
aam
cs
iret
lcall
and
insl
mov
mov
push
mov
int
push
out
repz
mulb
jmp
mov
mov
push
sti
xchg
and
pushf
outsb
les
push
mov
shr
push
and
in
int
aad
arpl
clc
test
scas
cmp
lea
sub
pop
scas
xor
inc
das
lods
xor
add
ret
pop
shlb
stos
xlat
movsb
mov
push
insl
xchg
or
adc
jo
add
mov
rorl
cld
test
xor
mov
pop
outsl
stos
add
out
xchg
ret
inc
ffree
movsl
cmpsb
in
sub
inc
push
or
or
mov
pop
and
xlat
mov
mov
sub
icebp
int
push
add
sub
dec
adc
mov
cmp
aaa
push
dec
icebp
and
or
lret
mov
icebp
jb
inc
mov
lea
jne
and
fldt
push
scas
jl
cmp
push
aas
add
push
test
or
ret
sbb
fdivl
subl
ficomps
lods
sub
push
xor
xor
imul
sub
xchg
stos
lahf
xchg
sbb
popf
pushf
mov
push
jg
mov
das
inc
lcall
ror
push
das
cwtl
jne
popa
pop
sbb
jb
test
mov
xor
cwtl
sbb
jbe
mov
js
jecxz
into
stc
hlt
pop
cmc
imul
add
sbb
gs
mov
lock
jecxz
push
lods
popfw
or
loop
xchg
ds
loope
xor
sahf
aad
cmp
dec
pushf
stc
or
roll
add
cmp
enter
dec
jmp
mov
push
daa
pop
inc
xchg
xchg
pop
cltd
or
pop
xchg
aam
jno
lods
icebp
add
movsl
xchg
pop
les
inc
add
lock
loop
mov
jnp
push
pop
xor
jb
imul
mov
sbb
jnp
or
stos
les
xchg
add
jl
adc
mov
mov
push
dec
jo
jl
imul
cld
mov
sub
mov
loopne
shlb
pop
sub
mov
dec
dec
pop
imul
or
xchg
in
imul
popa
adc
jb
inc
andb
add
lcall
cmp
mov
pop
movsb
push
imul
mov
lods
ss
xchg
xor
in
divb
xor
sbb
ss
sub
fcoml
mov
push
push
jecxz
lods
repz
add
adc
aas
mov
or
mov
jecxz
stos
mov
js
lods
nop
sbb
jle
mov
dec
mov
sbb
ficomps
push
inc
mov
ffreep
pop
mov
fs
dec
cmp
xchg
sub
in
cmp
xor
xorl
hlt
enter
mov
sbb
mov
aad
pusha
mov
xchg
inc
out
aas
fnstcw
mov
ja
mov
dec
addr16
xchg
or
out
icebp
dec
xlat
dec
lds
xchg
xor
mov
jo
gs
mov
insl
push
or
popf
dec
in
or
fst
and
sub
mov
ret
lea
pop
jnp
loop
jns
jb
pop
cli
std
orl
inc
jne
push
cld
inc
les
addr16
xchg
sub
inc
popf
add
aam
push
aaa
imul
or
sub
gs
mov
das
lock
pop
xchg
rcll
mov
hlt
dec
or
lahf
or
inc
ficoml
dec
or
leave
shrl
and
adc
leave
mov
jne
test
xor
mov
cli
xchg
insl
out
movsl
adc
lods
mov
cmp
xchg
adc
mov
orl
cli
outsl
pop
dec
lods
dec
or
jae
dec
and
push
call
cmc
inc
add
inc
jnp
xchg
test
iret
push
jl
xchg
dec
testb
and
or
xor
mov
mov
dec
push
xor
add
adc
jnp
stos
mov
insb
xor
pop
xchg
add
cmc
js
pop
add
push
je
or
sti
jb
push
pop
das
repz
push
cmc
adc
jo
stos
inc
lahf
fsubrs
mov
push
ffree
push
mov
xor
outsb
shll
jns
scas
daa
imul
filds
dec
test
or
cltd
adc
clc
fdiv
jae
add
or
pop
jns
fldcw
jecxz
adc
push
test
out
adc
les
out
mov
lods
xchg
lret
lcall
inc
js
sbb
lret
add
mov
pusha
mov
mov
aas
mov
test
mov
or
mov
out
arpl
data16
jecxz
sbb
jns
js
mov
jmp
xlat
mov
int
mov
stos
inc
je
and
popa
adcb
sbb
inc
cmp
or
cli
dec
push
inc
mov
dec
ljmp
xchg
push
dec
cmp
jmp
movsl
idivl
lods
cmpsb
xor
sahf
mov
dec
repz
fldl
dec
je
adc
hlt
and
mov
adc
jnp
movsb
xchg
jg
in
nop
test
mov
dec
or
pandn
mov
dec
scas
pop
fcomps
mov
mov
jmp
insb
shlb
shr
add
pop
sub
shlb
mov
cwtl
jl
sbb
sahf
fcomps
fldenv
mov
push
sbbb
clc
push
jge
sbb
pop
mov
mov
hlt
mov
xchg
cmp
stos
inc
lahf
hlt
sbb
sahf
je
sbb
hlt
xchg
push
inc
in
cmp
arpl
jne
rolb
mov
cmc
mov
dec
scas
ja
leave
sti
dec
cs
mov
shrl
scas
pop
dec
fs
mov
pop
test
or
jle
into
out
imul
enter
push
mov
sub
sub
clc
int
les
aam
dec
dec
and
fsubrs
outsl
shl
addr16
aaa
dec
outsb
mov
ja
mov
push
sbb
jne
and
ss
push
enter
aam
inc
mov
fcoms
mov
mov
dec
sahf
add
mov
push
pop
push
and
stos
mov
adc
add
adc
das
dec
and
add
pop
popf
push
test
jo
mov
adc
xchg
cwtl
jp
cli
clc
xor
movsl
push
mov
aas
inc
xchg
jecxz
inc
adc
sahf
addr16
in
test
mov
push
lock
lock
iret
mov
es
push
add
mov
sub
divl
mov
mov
dec
sti
and
fildl
inc
cmp
mov
cs
lods
dec
addr16
push
push
cmpsb
cmp
mov
insl
int
les
lea
push
test
sbb
adc
imul
ret
or
loop
daa
outsb
out
leave
dec
xchg
in
ficomps
add
cmp
lds
push
adc
out
orb
std
pop
adc
pushf
sbb
add
and
sbb
jns
insb
test
mov
dec
inc
es
fs
jmp
xor
pop
fsubrs
bound
add
sub
xchg
sbb
xchg
jne
inc
sbb
or
dec
sub
jg
jg
dec
lods
sbb
loop
mov
lea
or
das
in
sahf
iret
cmp
or
mov
fnstsw
push
leave
push
testb
imulb
lods
mov
dec
mov
movsb
shlb
leave
testb
js
hlt
in
sbb
stos
mov
leave
sbb
pushf
aad
inc
pop
cmp
outsb
mov
adc
out
das
lds
int3
loopw
mov
mov
movsb
pushf
cli
xor
adc
imul
push
jg
push
outsb
push
shlb
adc
dec
sbb
fidivs
sub
in
divb
ss
and
jle
dec
push
sbb
aad
sahf
cmpsb
je
adc
scas
mov
xchg
adc
cmp
call
bound
pop
dec
push
lret
cmp
push
add
fs
int3
push
mov
enter
js
int3
mov
push
or
sbb
popf
sub
stos
ja
out
jno
ja
cli
push
sub
pop
adc
lock
mov
arpl
clc
sub
in
nop
inc
xor
cwtl
je
subb
adc
iret
repnz
or
je
pop
das
pop
sbb
into
call
outsb
mov
cmpsb
adc
shlb
stos
shl
mov
call
push
notb
mov
cld
xchg
push
ja
test
lahf
dec
adc
cld
sub
push
inc
cmpsl
cmp
pop
and
in
xlat
xchg
pop
mov
sbb
lods
xchg
add
jns
xorl
loopne
ljmp
test
lods
icebp
inc
adc
mov
add
inc
lods
scas
sbb
out
aad
decl
cmp
test
movsl
roll
dec
xor
addr16
enter
mov
sub
shll
repz
aaa
jecxz
imul
lret
into
mulb
add
cmp
and
mov
mov
mov
cltd
loop
fcoml
mov
lret
jg
or
test
shlb
cmp
lahf
nop
push
adc
data16
xlat
inc
jecxz
les
jg
idivb
push
gs
jns
in
addr16
push
sbb
call
inc
xchg
add
mov
push
int3
mov
pushf
out
pop
fnsave
cwtl
dec
and
mov
add
xchg
ret
inc
jge
cltd
adc
add
int3
int
insl
mov
aad
push
jne
cmp
sti
shrl
shll
arpl
ss
adc
push
imul
xchg
sbb
roll
in
push
dec
pop
jmp
dec
cmp
cld
push
sub
fcoms
mov
lds
pop
cmc
jns
adc
sahf
fildll
sub
mov
leave
push
or
int
mov
jbe
out
jne
sbbb
movsb
int
fdivrs
iret
shr
js
aaa
lds
mov
mov
call
mov
repnz
push
mov
jg
xchg
stc
mulb
dec
xchg
js
in
jno
negl
icebp
push
pop
or
sbb
cli
xorl
mov
or
push
mov
into
jge
dec
cmpb
sub
dec
add
popf
xchg
sarl
xor
sub
cmpsb
ds
frstor
movsl
push
sub
mov
andl
jae
ret
rcrb
divl
mov
adc
dec
push
lret
hlt
ret
mov
dec
xchg
stos
iret
or
adc
das
lock
subb
xor
cmp
mov
mov
add
sbb
sbbb
cmpsb
rcl
jge
out
xchg
mov
inc
int
stc
lea
das
mov
js
loopne
testl
push
stc
dec
mov
repz
and
lock
pop
ror
add
mov
push
stc
sub
sbb
mov
mov
add
mov
bound
mov
mov
mov
adc
rorl
cmc
adc
jne
addr16
sub
push
pop
and
pop
mov
leave
dec
loop
sub
pop
fs
rcrb
arpl
jns
clc
pop
sar
xor
xchg
clc
add
clc
mov
pushf
leave
inc
popa
adc
jo
sarb
xchg
mov
imul
push
sbb
out
push
mov
cwtl
or
dec
jecxz
mov
scas
xor
dec
jmp
jno
dec
jno
and
pop
rcr
cmp
push
shlb
enter
sub
cli
outsl
lds
mov
das
sbb
add
adc
cs
jnp
xorb
push
fidivs
or
fs
mov
int3
cmpsl
adc
movsl
daa
push
popf
push
popf
out
cmp
mov
jp
mov
inc
aad
jp
and
add
and
jmp
lret
and
mov
js
xchg
and
loope
stc
dec
jnp
popf
jmp
push
les
std
cltd
pusha
jne
adc
push
les
mov
lahf
xlat
dec
inc
aas
fisttpll
test
xchg
dec
mov
push
push
jmp
cmp
and
dec
jns
aam
test
in
ret
mov
in
jnp
shlb
jle
inc
test
xchg
popf
ror
gs
pop
movsb
nop
popf
or
dec
add
dec
mov
add
xlat
data16
lret
xchg
cld
stc
pop
jmp
mov
pop
and
and
sbb
jno
lcall
mov
or
pop
cmp
push
aad
mov
mov
mov
mov
sbb
rclb
mov
fst
mov
cmpsb
jmp
das
cwtl
mov
cmp
push
push
dec
pop
push
mov
sbb
aad
mov
sub
ret
pop
ljmp
cmpsb
sub
mov
loope,pn
push
rcrb
or
test
add
fildl
fs
inc
and
jl
hlt
adc
adc
dec
add
pusha
xchg
loop
or
mov
rorl
aam
rorl
dec
lock
jmp
xchg
out
in
sbb
jmp
cmpsl
add
xchg
pushf
jp
or
gs
jecxz
mov
test
mov
pushf
imulb
mov
repz
in
pop
push
jns
xchg
fwait
mov
leave
fucom
and
sti
inc
sti
xor
mov
mov
add
push
test
xor
cmp
adc
icebp
cs
cmp
or
sub
das
dec
pusha
paddsw
test
xor
mov
aam
outsb
mov
fdivrs
enter
lret
add
pusha
jp
mov
mov
xchg
sbb
add
jle
lcall
fisubrs
rcrl
mov
dec
arpl
jmp
stos
xorb
sahf
addr16
or
or
push
push
sub
ds
addr16
in
or
sub
sbb
pop
xor
fldt
lahf
or
mov
lcall
std
rcll
pop
fdivrl
sbb
xor
jge
xor
dec
fst
add
jl
xchg
je
clc
movsl
dec
xchg
push
lods
xor
int
xlat
jno
cmp
push
or
pop
xchg
and
mov
cmp
in
daa
iret
cli
push
dec
xor
jge
adc
filds
aam
iret
cmp
insb
lahf
xchg
xor
dec
and
dec
in
popl
or
iret
inc
jg
das
jnp
add
insb
lcall
dec
test
rolb
sbb
outsl
push
push
fcmovu
xor
stos
repz
mov
xorl
xchg
jae
pop
dec
or
stc
add
pop
test
mov
std
inc
push
cmp
cmp
cmp
cld
pop
dec
xchg
sbb
adc
jmp
rorl
test
fimull
adc
mov
fdiv
add
sub
scas
xchg
gs
inc
mov
push
aas
xor
xlat
xor
pop
fidivrl
mov
fnstenv
sbb
xchg
push
ljmp
wbinvd
sahf
sbb
lods
and
mov
sub
or
aaa
cld
jp
pop
sub
jbe
rorb
leave
push
sbbl
cmp
adc
cmp
mov
popf
adc
mov
not
insb
pop
ljmp
movsb
mov
push
fsubl
je
cli
leave
xor
in
sti
frstor
ret
outsl
lock
fimull
mov
imul
xor
aad
enter
mov
push
fwait
imul
xchg
popf
loopne
or
aas
dec
pop
cli
lock
ret
jb
mov
dec
lret
rcrb
push
es
cmp
jle
and
stos
and
xor
gs
mov
outsl
xor
jge
leave
xchg
fnstcw
jns
inc
stc
roll
mov
or
jns
in
leave
mov
repnz
dec
pop
movsl
mov
xchg
inc
test
sub
mov
mov
mov
mov
add
sarb
cmpl
mov
dec
lcall
call
jnp
or
call
data16
mov
lret
add
ds
or
adc
lret
insl
or
int
xchg
cmpsl
or
iret
cmp
lcall
mov
push
arpl
decb
test
mov
inc
loopne
push
rolb
xchg
cmp
jmp
mov
push
jecxz
loopne
mov
out
std
out
cmp
lcall
xor
lcall
inc
clc
and
mov
pop
inc
inc
aam
pop
dec
sahf
cmpsl
ja
push
enter
push
arpl
testl
xchg
lret
bound
into
loopne
je
out
ret
icebp
push
pop
fdivs
mov
mov
hlt
inc
cmpsl
cmp
or
clc
dec
aam
aad
leave
jl
mov
pusha
fistl
arpl
push
insl
push
inc
in
mov
push
lret
sub
popf
sub
scas
xlat
mov
jae
cltd
jmp
or
pop
xchg
mov
xchg
mov
pop
int
shlb
les
and
mov
into
or
mov
scas
jmp
daa
jmp
sbb
in
scas
sarb
mov
or
inc
lahf
testb
sub
mov
mov
mov
dec
sbb
ficoml
pop
iret
inc
leave
mov
mov
mov
and
jne
fsub
ja
jl
mov
lcall
pop
push
push
adc
nopl
clc
sti
mov
push
js
in
aam
mov
xchg
xlat
fisttpll
lds
push
daa
inc
jge
lock
and
je
push
imul
nop
leave
jo
subb
lock
stc
loopne
jmp
mov
sub
add
mov
mov
out
dec
shrb
and
movsl
jp
and
loopne
jb
mov
es
pop
adc
xor
adc
sbb
stos
jge
sbb
jle
jecxz
js
xor
in
mov
jp
jno
sub
ljmp
stc
or
dec
dec
sub
or
les
mov
pushf
rcll
ficomps
lret
push
jl
mov
call
mov
mov
fcoml
movb
pop
decb
mov
popa
les
push
test
filds
dec
mov
pop
jmp
inc
mov
cs
or
mov
out
bound
mov
hlt
jge
in
mov
cli
xor
dec
pushf
scas
add
lods
push
jmp
mov
lcall
loope
sbb
nop
cmp
movsbl
out
in
jbe
add
push
testb
push
out
and
xor
es
xchg
sti
mov
jnp
ss
std
xchg
aad
bound
push
ljmp
inc
negb
pop
std
or
insb
push
mov
sub
sbb
jnp
or
jecxz
jne
rclb
sbb
push
and
add
test
pop
add
sbb
adc
lock
xchg
aam
loop
mov
mov
icebp
mov
adc
iret
adc
push
test
ljmp
in
loopne
and
mov
mov
fmul
cmp
mov
jno
inc
jbe
fldcw
add
fldl
lahf
fcmovnbe
sub
cmpsl
roll
pop
mov
mov
mov
sub
xchg
test
push
mov
cmp
sbb
outsb
imul
sbbl
sub
push
imul
in
jnp
outsb
jecxz
adc
mov
inc
pop
int3
jns
mov
lods
dec
mov
shl
jns
fisttpl
push
loope
pop
data16
mov
dec
xchg
movsl
sub
sbb
stc
out
xor
leave
testb
mov
xor
push
hlt
push
mov
adc
stc
sbb
test
and
loop
push
imul
movsb
popa
lahf
jge
cmp
mov
sbb
repz
sbb
and
popf
bound
dec
push
das
and
cmpsb
mov
and
pop
lods
repz
cs
clc
lret
push
orb
imul
ret
repnz
fld
add
push
push
mov
jl
cld
test
aas
jb
es
shr
push
cmpsb
and
lret
push
mov
mov
push
cmc
push
pop
jecxz
pop
cwtl
cwtl
and
mov
inc
jecxz
stos
pop
rcr
imul
jbe
test
add
push
mov
lret
lret
pop
and
movsb
xchg
cmc
in
test
movsl
test
jae
or
xchg
jae
sbb
add
inc
dec
cmc
sub
or
xor
cli
cmp
scas
add
cltd
sar
iret
or
cmp
sahf
jbe
xor
test
in
les
movsb
mull
pop
pop
fdivr
push
sbb
pop
das
in
cwtl
sete
fisubl
insb
adc
mov
lods
xchg
clc
push
repnz
loopne
push
inc
rcr
mov
daa
or
add
cmpsb
hlt
clc
push
jmp
pop
adc
pusha
stos
out
cld
push
cmp
ret
adc
test
std
imul
pop
xchg
cmp
in
std
pop
stc
jbe
outsl
fxch
cmc
in
xchg
testl
bound
sub
sub
in
and
push
dec
pop
pop
cli
scas
and
and
cs
xchg
cmc
arpl
inc
xchg
lock
and
push
lea
aad
aam
call
mov
ja
fbstp
cltd
sbb
inc
and
fdivr
fwait
mov
addr16
out
cmpsb
adc
xchg
xor
fnstenv
push
adc
mov
imul
sub
fists
mov
push
lret
sbbb
jmp
mov
adc
mov
lcall
xor
cmp
cld
cli
test
sub
fsubrl
xor
mov
mov
adc
sub
pop
iret
mov
lret
or
div
imul
xchg
rcr
divl
pusha
lea
inc
sub
inc
mov
fs
sub
mov
jbe
cmp
pop
mov
ds
in
mov
dec
mov
and
shrl
lahf
xchg
mov
lret
into
mov
and
sbb
shrd
lret
jmp
cmovnp
and
mov
inc
in
xor
dec
mov
std
cmpb
les
int
push
sub
jmp
imul
xchg
add
dec
mov
sub
rcrl
mov
mov
add
mov
stc
mov
xchg
sub
xchg
popf
lret
insl
aas
jnp
ds
inc
xor
je
xchg
outsl
mov
push
adc
mov
stc
fistl
mov
vminps
sahf
cs
pushf
lods
push
sbb
roll
in
inc
push
ret
inc
in
js
mov
xor
inc
js
stos
out
icebp
loop
enter
inc
ficomps
enter
push
idivb
dec
adc
dec
stos
sbb
xchg
add
mulb
or
fisubrs
push
adc
and
cmp
and
inc
mov
lret
inc
mov
mov
or
pop
dec
std
bound
enter
mov
push
ljmp
dec
in
and
jmp
lahf
in
pop
fwait
pusha
gs
xor
sub
sahf
fwait
xchg
ret
inc
ss
or
and
adc
push
xlat
xchg
mov
in
sub
sahf
out
xorb
test
out
dec
mov
aad
lods
push
or
mov
sub
bswap
dec
fisubrl
pop
xchg
mov
arpl
fwait
dec
js
outsb
inc
fcmovbe
lret
lcall
xor
mov
movsl
jnp
jb
mov
inc
les
pusha
jne
insl
cmc
add
cmp
je
xchg
sub
cmp
arpl
nop
test
mov
adc
dec
je
adcl
cltd
push
leave
push
cmc
ja
es
movsl
lods
cmp
push
inc
add
mov
add
cs
iret
mov
repz
ret
mov
adc
add
mov
add
and
adc
mov
or
and
stos
loope
xor
pusha
dec
sub
mov
repz
andl
aad
adc
xbegin
lret
inc
push
push
jecxz
sbb
mov
mov
push
gs
out
in
mov
xor
xadd
mov
mov
stos
divl
jmp
adc
popa
adc
pop
jbe
test
inc
lods
insl
mov
ret
mov
push
aam
jne
add
cmp
shlb
sub
fwait
in
push
rclb
fdivp
push
notl
mov
imul
shlb
out
punpcklqdq
xor
jge
sub
stos
ja
mov
sbb
add
sbb
lods
into
push
enter
push
jmp
cltd
or
pushf
xor
fadds
inc
gs
or
sar
push
or
and
jne
mov
cmp
movsl
mov
push
jns
out
dec
ja
lea
xor
adc
ljmp
sbb
mov
push
and
out
rorb
shl
test
dec
mov
fisttpll
sub
xchg
pop
push
xchg
xor
movsb
nop
decb
popf
std
jne
nop
popf
adc
stc
pop
inc
outsb
stos
lds
inc
and
cmc
jae
out
push
xor
sbb
nop
mov
cmpsl
xor
or
outsb
lahf
imul
int
cmp
bound
bound
inc
imulb
cmc
mov
cs
jle
rcll
cmp
aas
pop
gs
push
loop
jo
xchg
ss
iret
mov
ret
jns
cmp
pop
lret
movsl
push
xchg
sub
jecxz
test
mov
push
xchg
inc
mov
aad
rcrl
adc
push
test
test
push
pop
pop
bound
scas
sbb
in
icebp
mov
mov
cmp
mov
lcall
in
mov
sub
inc
fidivl
ficompl
shll
inc
hlt
push
sti
pop
in
ret
cmpsl
outsb
push
aaa
shrb
push
pop
idiv
fldt
xchg
mov
loopne
insb
sub
mov
push
xor
mov
cli
xchg
fisubrs
in
lods
dec
dec
ss
imulb
test
cmp
repnz
out
inc
les
pop
mov
cmpsl
xchg
enter
push
or
sub
lret
or
jae
ds
jg
push
aad
cld
fmul
fs
in
xor
in
pop
cli
sub
das
ljmp
fst
push
dec
sbb
xchg
orb
mov
lods
out
or
lret
inc
leave
stos
xchg
fs
cli
add
fstps
adc
xchg
xlat
pop
xor
subb
mov
inc
cli
iret
mov
sub
insb
subb
leave
push
les
lahf
sub
pusha
xchg
mov
loope
cmp
rclb
inc
jno
mov
mov
aam
pop
pop
xchg
adc
mov
mov
mov
pop
sub
mov
xchg
cmp
pop
jno
inc
inc
in
push
in
stos
bound
pop
xchg
dec
inc
pop
cmp
es
imul
test
movl
in
mov
loop
or
subb
jbe
mov
int3
inc
fstps
rcr
cmp
mov
xchg
and
pop
or
sub
test
jns
iret
dec
loopne
mov
nop
cmpl
mov
int3
push
frstor
mov
jne
subl
adc
addl
jo
in
ret
xchg
aad
cmp
arpl
outsb
lea
scas
push
mov
ret
or
sbb
icebp
lods
adcl
mov
pop
jge
pushf
mov
xchg
in
adc
leave
jge
jb
mov
ds
add
push
jnp
nop
push
sbb
pop
xchg
lcall
ud2
push
inc
cli
dec
sub
out
scas
daa
popa
push
xor
dec
outsb
adc
push
xchg
adc
ret
xchg
loop
call
outsb
inc
or
in
jp
fnstsw
mov
lcall
out
inc
dec
push
stos
dec
loope
stos
cmp
pushl
gs
data16
and
xchg
dec
ffree
notl
adc
mov
enter
cmpsl
pop
mov
call
shlb
fsubr
adc
jns
push
aam
hlt
sub
cmpsb
int
int3
test
and
fdivl
in
dec
push
push
insb
xchg
jne
subb
and
rorb
dec
push
mov
test
jle
mov
iret
jo
mov
and
pop
out
inc
fnstcw
ljmp
pop
lret
scas
fldenv
outsb
test
std
jle
arpl
add
xchg
pop
mov
push
mov
imul
push
loop
sbb
dec
cwtl
clc
mov
ljmp
jne
fwait
mov
loopne
stc
enter
push
adc
or
out
imul
nop
adc
lock
xchg
and
pop
sub
lret
xchg
jbe
sbb
call
bound
xchg
xchg
mov
fsubs
mov
xor
pop
fstp
xor
push
imul
pop
jmp
les
adc
js
mov
dec
adcl
push
add
add
pop
inc
or
notl
adc
insl
cmpsl
sub
sub
mov
les
push
pop
mov
xor
in
push
or
out
pop
cmc
xor
push
pop
int3
jl
dec
inc
jecxz
mov
xlat
data16
push
xor
adc
popf
fdivrs
pop
add
mov
xchg
iret
cs
jne
pushf
xchg
movsb
push
cmp
cmp
gs
popa
addr16
adc
scas
mov
mov
lea
in
dec
int3
cmc
imulb
mov
or
xchg
cmp
lahf
ret
fs
and
cmpb
lds
cmpsb
popf
repnz
xchg
int
lods
subb
mov
push
stc
aaa
xchg
cmp
pop
mov
and
ret
aaa
jecxz
fwait
dec
mov
pop
clc
stos
andl
mov
lret
and
sub
mov
pusha
xchg
sub
inc
inc
adc
jne
mov
rorb
mov
pop
and
dec
push
cmp
push
daa
outsb
mov
push
rorb
loope
cmp
scas
ja
sbb
xchg
cli
cmc
jae
lret
insb
out
cmc
shrb
add
jne
dec
cmp
xor
jae
mov
shrb
mov
stos
fldenv
lea
cmp
inc
fisttps
dec
mov
test
push
int3
cmpsl
cmpsl
idivb
sbb
jg
mov
out
insl
pushf
jbe
cmpsl
gs
imul
xlat
insb
mov
cmp
in
cltd
sbb
sub
testl
iret
mov
fsts
jmp
mov
ror
outsl
loop
mov
js
cmp
mov
cmp
cmovns
lods
fs
enter
lret
aam
iret
test
jle
call
adc
mov
add
enter
pop
stc
xor
loop
dec
xchg
jbe
xor
call
sub
sub
mov
gs
fsubrs
scas
and
movl
inc
int3
shlb
stos
movsb
icebp
int
das
stc
add
mov
and
cmp
add
cltd
lret
add
jp
outsb
gs
popf
push
int
sahf
or
lds
jmp
stc
sub
xchg
sbb
push
out
dec
or
cs
movsb
jno
xor
cmp
sub
sbb
fists
cmp
pushf
jle
mov
mov
sub
adc
push
mov
mov
and
or
push
clc
dec
pop
mov
add
inc
cmp
insl
push
jb
or
lret
loope
popf
nop
mov
pusha
jno
dec
loope
test
add
dec
ss
ja
cmp
xlat
cmp
adc
leave
flds
add
ret
xchg
sub
jnp
push
das
mov
hlt
cmp
ljmp
adc
sub
leave
cwtl
es
adc
ds
or
lds
bound
adc
fucomip
inc
push
jg
jo
pop
clc
movaps
and
push
data16
data16
loopne
xsaves
pop
fs
cmp
jne
mov
je
jl
loop
mov
test
leave
cmp
pop
dec
je
mov
daa
pop
mov
fisubl
xor
aas
or
or
out
repz
xchg
jae
mov
lcall
jnp
int
mov
repz
mov
lock
push
jae
dec
xchg
ficoms
mov
ret
mov
xchg
scas
mov
cmp
pop
dec
add
and
ret
xor
insl
dec
adc
fwait
aaa
mov
and
fwait
icebp
fs
sbb
call
mov
mov
push
pushf
push
jo
ss
hlt
test
mov
mov
and
sub
scas
xorl
out
mov
ret
sti
push
adc
sub
lret
pop
jo
call
pop
push
flds
insl
dec
cmpsl
jecxz
ret
sahf
out
stc
push
in
mov
dec
dec
mov
aad
cli
sti
scas
mov
js
cmp
sbb
rorb
push
lahf
cmp
inc
imul
stos
int3
cmp
fsubrs
adc
loope
ss
sbb
test
js
jp
ret
aaa
pop
stos
shr
mov
cmpsl
mov
cmp
cmc
pop
sub
pop
shll
out
xchg
testl
fcmovbe
lods
cmp
mov
push
aam
imul
mov
dec
jmp
or
mov
std
dec
je
fcoml
lods
sub
push
sub
icebp
push
jae
cmp
pop
push
cmp
test
lahf
xor
jb
mov
xchg
pushf
addl
enter
sub
std
repz
push
xchg
movsb
lret
adcb
loope
adc
sub
xchg
jae
cld
push
mov
mov
adc
les
xor
test
xchg
mov
xchg
jmp
ficompl
sarl
adc
or
add
cmp
pop
aaa
nop
aad
lahf
xchg
fucomi
inc
adc
test
cmp
call
outsb
mov
in
out
sbb
mov
xchg
jo
jne
xchg
mov
leave
jg
sbb
rcl
and
in
jp
aad
or
mov
mov
dec
add
push
push
out
and
cmp
push
std
or
nop
xor
lcall
dec
push
scas
push
call
test
xchg
lods
pop
cmpb
in
insl
xlat
jle
xchg
in
subb
add
push
ss
mov
fxch
ds
mov
cmpsb
pusha
dec
inc
dec
cltd
jns
sbb
lds
fldcw
pusha
add
cmp
pop
pop
push
sub
outsl
rcrb
je
sti
and
movsl
lods
mov
iret
shrb
push
pop
jge
xor
mov
aam
lret
or
in
repnz
sub
pop
cmp
sbb
jl
rorb
inc
aam
mov
cmp
frstor
mov
cmc
cwtl
lds
lcall
movsl
xchg
adc
mov
lret
stos
dec
fsubrs
insb
lret
out
jmp
push
fnsave
jbe
push
cmp
gs
dec
aam
nop
xchg
add
xor
mov
data16
std
jae
jl
fs
out
cmp
shlb
ja
push
or
test
xchg
jle
cmp
push
mov
popf
ds
mov
mov
outsl
popf
mov
cmp
xchg
lcall
or
adc
lret
push
jns
push
cmpsb
xchg
ja
cmp
outsb
and
cmp
fnsave
ret
sbb
cmp
and
pop
loop
gs
pop
das
jns
aad
push
dec
xchg
subl
xor
daa
pop
lret
int3
fs
js
mov
pop
ret
mov
pusha
add
cmc
mov
adc
push
int
lods
popf
xchg
jnp
or
add
in
cmp
jne
fcoms
dec
mulb
out
and
mul
push
mov
and
cmp
gs
or
sbb
aas
jp
fstpl
cmp
test
call
cs
dec
jo
add
push
arpl
xchg
xchg
sbb
mov
jb
rclb
ret
pop
mov
inc
cwtl
cs
push
push
pop
out
ficomps
aam
mov
aas
xor
nop
mov
aas
fistpll
fiaddl
jmp
or
gs
lea
popf
sbb
sti
mov
lea
sbb
je
sbb
mov
and
dec
push
jle
repnz
ss
cmp
out
jnp
fstps
mov
inc
daa
bound
push
jmp
sub
jmp
ljmp
shrb
int
inc
mov
push
rcll
add
cmpsb
push
xchg
scas
movsb
mov
pop
das
in
lock
jmp
push
enter
dec
adc
in
sub
in
mov
test
mov
xchg
mov
sub
ret
sbb
out
fimull
dec
outsb
fiadds
xor
xchg
push
jb
mov
push
or
ss
mov
mov
lret
dec
aas
stc
outsl
pushf
mov
sub
aaa
cltd
int3
es
int
push
dec
insl
inc
repz
fwait
inc
adc
push
rcrb
gs
in
int
test
out
and
or
pop
jle
add
xchg
push
add
add
dec
mov
push
xchg
fs
mov
setbe
adc
cld
xchg
mov
or
xchg
lds
or
adc
sub
jp
das
push
mov
sub
push
into
mov
inc
xchg
push
das
cmp
sub
repz
mov
inc
int
cmp
xchg
cld
mov
in
mov
pop
mov
pop
dec
xor
mov
jns
mov
add
mov
add
jae
xor
out
and
out
outsb
mov
dec
js
in
mov
dec
mov
xchg
mov
cmp
push
fisubl
scas
das
popf
fdivs
lock
and
out
sbb
shl
cmc
or
push
xchg
outsb
js
adc
jg
mov
jb
jecxz
ficompl
popa
dec
pop
xchg
in
roll
ja
ja
jl
loope
push
imul
pop
negb
out
mov
ror
mov
insl
stc
lea
je
pop
js
test
iret
inc
lret
sub
fcomip
jns
push
pop
faddp
sub
xor
fmuls
jns
cmp
inc
loope
mov
divl
add
out
xchg
arpl
subb
stc
rcrb
sbb
in
mov
ret
lcall
lds
mov
mov
push
outsl
or
jno
adc
pop
push
jecxz
in
pop
inc
push
out
cmp
cmp
xor
jne
mov
pop
mov
adc
adc
pop
stos
sqrtps
pop
mov
lret
jo
rolb
in
repnz
jns
cmpsb
mov
add
xor
push
mov
fisubl
dec
push
push
into
add
hlt
mov
xor
inc
and
or
shll
stos
push
pop
les
push
shll
lds
imul
jl
lods
dec
mov
outsb
cmc
test
xor
lret
mov
cltd
pusha
mov
push
fcompl
and
das
lea
les
or
mov
sub
arpl
push
mov
mov
int
pop
lret
fstpt
cmpsl
push
and
xchg
cmpsl
cwtl
jb
and
or
add
mov
clc
aad
jns
fldpi
cmp
xor
push
test
jp
sbb
ds
cwtl
and
push
popl
fs
stos
sub
add
bound
test
add
fs
push
adc
push
fldenv
addr16
jno
mov
mov
mov
into
mov
fimuls
push
aad
int3
arpl
xchg
lock
outsl
inc
adc
stos
adc
inc
sub
mov
shrb
aam
in
out
mov
popa
mov
xlat
addb
mov
jno
push
aaa
push
pushf
sub
xchg
ljmp
movsb
fmulp
jns
vmread
inc
mov
push
imul
sub
pop
testl
push
cmpsl
call
xor
ffreep
inc
sbb
stos
mov
sti
aam
fbld
outsb
arpl
xor
rorl
stos
cmp
jo
stos
sub
clc
roll
aad
cltd
jp
jae
jge
in
inc
mov
jl
dec
push
inc
inc
adc
js
out
test
dec
mov
and
orl
nop
mov
lock
fidivs
sbb
cs
cwtl
cmpsl
and
sti
fwait
outsl
mov
jns
js
cmpsl
fmuls
pop
cmpsl
mov
add
xchg
and
inc
or
test
and
xor
jno
or
cmpsb
pop
and
test
jae
sbb
dec
xchg
jno
in
push
scas
xchg
lret
jl
popa
std
xor
mov
shrb
sub
enter
pop
mov
add
mov
sub
push
pop
mov
in
ds
pop
arpl
mov
xchg
push
and
push
and
xchg
xor
ljmp
mov
xor
inc
inc
xor
mov
jmp
push
pop
insb
ljmp
or
js
call
ret
adc
dec
sti
stos
movb
mov
repnz
aad
ljmp
in
push
mov
in
movsl
jbe
into
add
shr
jns
push
ss
je,pn
clc
sbbb
in
shll
imul
imul
movsl
mov
adc
movsb
cmp
stos
jbe
sub
movsl
aam
xchg
int
popa
push
icebp
call
xchg
hlt
lds
ret
popf
gs
xchg
sbb
jge
sub
pop
arpl
lods
adc
pushf
or
dec
shr
test
cmp
ret
fistps
xchg
mov
push
or
mov
cmp
gs
jl
or
lods
and
push
movsl
rolb
outsl
sbb
dec
aam
fildll
cmpsl
xchg
jb
inc
test
and
les
add
sub
push
sub
gs
arpl
xorl
dec
mov
and
inc
inc
loopne
stc
push
sbb
lds
pop
subb
cmc
clc
sahf
pop
cwtl
insb
aam
orb
dec
mov
aas
lret
stos
and
loop
shrb
and
and
push
mov
sbb
fbstp
movsb
leave
daa
jmp
lret
lods
jbe
adc
xchg
pop
mov
lds
aas
out
shlb
sbb
jp
or
xchg
mov
ds
movsb
fadds
sbb
mov
sti
dec
in
ret
mov
andl
mov
pushf
mov
cmp
imul
leave
fisttpll
or
pop
das
ss
inc
outsb
jne
dec
in
test
cmp
int3
inc
loop
test
add
push
in
gs
sub
xchg
hlt
lods
test
clc
scas
lds
jg
dec
int3
add
pop
leave
sti
pushf
xor
xor
cld
neg
cmp
lock
lds
rorb
push
xchg
push
or
mov
cmc
jp
pushf
mov
mov
or
mov
aam
rorb
lcall
in
dec
stos
xchg
hlt
push
mov
xchg
adc
pop
inc
insl
lods
dec
aaa
fnsave
ret
jns
pushf
stc
lret
repz
jb
leave
mov
sub
lock
xor
pushl
xor
or
xchg
test
out
cs
test
cmp
mov
push
movsb
xchg
rcrl
inc
clc
adc
iret
jle
xor
push
jnp
test
lods
hlt
scas
cmc
jp
cmp
jl
cmp
fst
xor
mov
jo
fs
jno
ja
stos
cmp
dec
testb
bound
addr16
jl
mov
or
cmp
fnsave
inc
roll
call
cwtl
pop
cli
fdiv
or
push
out
pop
in
stc
cli
adc
fcom
ljmp
xchg
dec
xchg
scas
fisttpll
xchg
adc
mov
ficoml
mov
mov
xor
or
adc
cmp
sbb
bound
aam
pmulhuw
imull
lds
and
jge
aas
test
subl
jmp
jb
sbb
cmp
mov
repnz
mov
xchg
pop
pop
or
fcoml
cld
sbb
test
cmp
data16
mov
jg
mov
bt
pop
and
aas
repz
hlt
pop
ja
std
jl
shll
pop
inc
cmc
ja
or
outsb
dec
insl
outsb
xor
das
mov
movsb
push
jb
xchg
cs
or
pop
adc
sub
sbb
mov
movsb
dec
notl
test
mov
shll
jae
pop
jnp
and
movsb
cmpsb
and
jnp
sbb
aaa
or
jge
shlb
pop
imul
mov
lea
mov
pop
sub
iret
shrl
add
add
clc
dec
leave
xchg
jne
arpl
icebp
adc
popa
test
cmpsb
pop
inc
jbe
pop
mov
lcall
jmp
lahf
push
mulb
loop
fcmovnb
inc
dec
in
inc
iret
xchg
jle
cs
pushf
add
addr16
mov
sti
out
es
ret
inc
xchg
mov
add
frstor
jge
or
adc
jp
jge
sbb
lret
fldt
mov
out
and
xor
lock
insl
xchg
lds
inc
pop
sub
mov
lahf
imull
fstps
iret
adc
jecxz
js
addl
int3
cmp
scas
mov
sub
jge
and
aad
pusha
out
insb
scas
enter
addr16
stc
in
mov
mov
rorl
icebp
call
ja
sbbb
or
push
out
cmp
shl
inc
lret
or
lds
bound
push
nop
les
pusha
popf
or
dec
or
arpl
mov
frstor
xchg
add
sub
fstl
inc
add
dec
or
adc
sub
mov
dec
inc
lds
stc
xor
adcb
xchg
cmp
stc
mov
out
pop
icebp
mov
add
fsubrl
es
lahf
orb
jns
pushf
jmp
xor
stos
lret
das
ja
movsb
lret
mov
xor
mov
add
adc
les
jns
add
hlt
adc
jge
rcll
std
scas
cmpsb
rcrb
pop
lret
jns
in
scas
pushf
push
push
dec
jbe
outsl
inc
addb
fdivrs
enter
in
inc
out
mov
jo
fiadds
sub
push
jl
aam
sahf
sbb
jmp
lret
outsb
ja
ss
push
mov
pop
movsl
jp
xor
mov
cmp
pusha
add
pop
ret
hlt
and
adc
mov
cwtl
lods
xor
out
inc
shl
test
xchg
push
mov
adc
cs
add
out
pushf
clc
je
push
lods
sbb
js
xor
or
xor
mov
ljmp
ret
jnp
adc
mov
aam
xlat
dec
cmp
dec
enter
push
sub
inc
mov
sbb
lcall
jge
sti
lcall
sub
mov
inc
or
cs
lret
dec
int3
push
out
jnp
jecxz
xchg
mov
insb
sbb
sahf
add
jb
aaa
mov
rcll
enter
in
push
and
push
mov
fsubl
cmp
and
cwtl
jp
push
fidivl
movsl
jge
jg
xor
dec
mov
inc
sbb
adcl
mov
jo
es
mov
xchg
aaa
dec
xchg
ret
push
push
mov
shlb
push
sub
jp
stos
repz
xchg
and
bnd
pop
push
mov
aas
les
dec
add
testb
pop
std
cli
jne
sub
lahf
inc
xchg
rorl
mov
pop
ror
adc
cmp
xchg
insl
and
or
subb
jp
mov
jnp
loop
ret
call
loop
mov
outsb
push
jecxz
orl
test
scas
int
call
pop
adc
lock
jo
jb
fsubrs
in
mov
sbb
push
mov
pop
or
in
stos
xor
xor
push
cmp
pusha
jo
push
push
mov
and
jns
ljmp
push
mov
int
adc
fcomps
mov
xchg
push
test
ja
or
pop
jmp
sbb
jge
add
stos
mov
dec
test
pop
sbb
push
ret
ja
xchg
dec
add
mov
add
cmp
in
xchg
das
inc
xchg
pop
mov
addr16
popf
cli
je
pop
xchg
mov
sub
rcrb
rclb
test
andl
subl
repz
xchg
loop
lods
cmpsb
mov
mov
aas
fdivrl
in
add
aam
fs
shl
ja
aas
cmp
sarl
movsb
bound
fmul
mov
test
and
jg
dec
aam
cmc
jbe
shl
jns
adc
and
les
sub
dec
jb
dec
arpl
das
add
cltd
in
mov
jge
cmpsb
add
mov
in
adc
in
repnz
outsl
xor
push
addr16
fsubr
sub
mov
int3
jg
or
mov
inc
mov
cmp
inc
test
cmp
push
jg
xor
and
add
inc
and
jmp
jae
pusha
pop
cs
dec
stc
insl
ja
cmpl
cli
push
mov
je
xor
popf
xchg
inc
loope
xlat
push
dec
jecxz
pusha
out
repnz
fwait
xchg
cmp
cld
fwait
rolb
outsb
pop
rorb
shll
pop
lods
stos
adc
das
imul
fdivrl
leave
ficoms
stos
ljmp
into
and
cmpsl
push
aad
jecxz
cld
sbb
movsl
adc
sbb
push
xchg
xor
sbb
cs
shl
std
sub
xchg
and
mov
sub
add
mov
pop
xor
lcall
mov
outsb
dec
push
pop
mov
mov
push
jnp,pn
jno
insb
jnp
ret
je
and
sbb
sub
icebp
lods
call
cld
xor
rorb
sarl
or
test
and
ret
cmp
mov
lock
enter
lcall
adc
movb
iret
shr
int
pop
test
sbb
or
sbb
fisubl
in
push
mov
gs
xor
mov
and
xchg
add
aas
ds
xchg
sbb
mov
add
pop
push
adcb
sub
dec
nop
inc
rcl
cwtl
pusha
pop
jo
sub
sub
sti
push
loope
or
add
push
ret
mov
mov
pop
jmp
fwait
mov
cmp
lret
pop
pop
out
cld
cmp
rcrb
or
cmp
inc
ret
and
cs
sbb
imul
movsl
imul
adc
aas
push
add
sbb
inc
outsl
or
mov
adc
push
ret
test
dec
jg
mov
pop
pop
idivl
loope
mov
pop
push
and
xchg
sub
dec
push
jle
les
and
mov
mov
inc
andl
mov
fstps
xchg
and
xor
cmp
cmp
mov
mov
jns
or
jns
orb
push
jo
ret
jns
xchg
push
dec
in
gs
mov
and
add
icebp
data16
pop
sbb
and
jg
sbb
xor
xchg
mov
jmp
jnp
fwait
xchg
and
sub
fidivrl
cli
xchg
lea
lods
lods
lcall
mov
dec
aas
mov
or
test
cmpsb
xchg
pusha
dec
jbe
mov
xchg
in
fldenv
adc
xor
lds
mov
int
cld
movsb
push
imul
rcrl
cmp
test
push
dec
aam
icebp
ret
and
clc
and
mov
cmp
call
addr16
repz
xchg
adc
xchg
jb
movsb
nop
adc
mov
mov
dec
std
dec
mov
movsl
loopne
or
cld
scas
adc
gs
inc
sub
neg
pop
fmull
push
daa
ja
mov
add
imul
iret
test
lret
sbb
inc
xchg
cld
ss
repz
add
mov
cmp
hlt
add
pop
jns
xor
pop
inc
lcall
loop
std
in
lahf
ljmp
mov
xchg
sbb
adc
fildll
push
andl
pop
iret
das
loop
mov
dec
dec
in
rol
jmp
je
cltd
dec
je
jnp
lcall
push
jle
push
ficoml
inc
imul
cli
xchg
push
lahf
lock
aad
stc
inc
add
mov
mov
int
pushf
repnz
or
dec
mov
inc
pop
jno
aam
jge
bound
xor
dec
shll
push
or
popf
pop
sbb
ljmp
arpl
imul
dec
pop
fnsave
repnz
dec
inc
jecxz
push
les
push
cmp
sbb
imul
or
add
xor
inc
sbb
iret
addl
pushf
mov
pop
dec
or
lods
outsl
dec
push
hlt
mov
cmp
aam
fimull
aaa
and
mov
mov
cmp
jbe
into
out
cmp
test
or
test
cli
out
sub
jmp
shll
xchg
js
daa
jo
in
ficoml
hlt
pop
pop
mov
mov
fwait
pop
leave
lret
in
mov
mov
and
mov
leave
icebp
and
incl
sarl
cs
jb
rorb
add
test
xchg
and
dec
or
sub
cmpsl
mov
xchg
push
stc
inc
xchg
sub
aad
bnd
xchg
push
ljmp
insb
mov
pop
sahf
jl
or
dec
dec
jle
jp
cmp
shrl
cs
icebp
movsb
sub
mov
int
jg
cmpsb
add
mov
arpl
pop
add
out
repnz
out
aas
inc
shrb
clc
fistl
mov
pop
sub
pop
push
jge
sti
add
out
scas
hlt
inc
add
push
cld
jo,pn
mov
cmpsb
into
sub
sbb
add
push
leave
repnz
cmp
int3
push
xchg
inc
cmp
insl
pop
movsb
xchg
test
xchg
lock
mov
addr16
inc
insb
cli
dec
movsb
push
and
mov
in
mov
inc
fwait
pop
dec
pop
push
push
adc
mov
sub
xchg
mov
dec
adc
push
sti
sbb
shll
test
mov
push
xchg
addl
shll
in
adc
xchg
and
scas
loope
mov
mov
aad
inc
adc
mov
add
xorb
pop
inc
shll
jl
pop
mov
icebp
test
pop
ds
jb
xor
test
mov
or
std
fisubrs
lret
cmpsl
pop
into
dec
or
dec
fcmovne
leave
mov
cmp
or
out
mov
popa
cmp
push
lock
mov
loopne
into
sbb
aam
mov
pop
nop
mov
pop
loop
xor
repnz
or
pop
inc
cmpl
aaa
mov
cld
dec
int3
dec
mov
mov
jns
stc
pop
xchg
lds
rcrb
je
xor
enter
push
dec
loopne
int
xlat
jne
mov
ja,pt
lahf
inc
lds
shlb
adc
incl
outsb
imul
sti
arpl
push
sti
pop
out
xor
lret
push
std
mov
add
add
inc
pop
bound
stos
test
pushf
dec
fucompp
jmp
sahf
dec
std
lret
out
int3
jle
aad
ljmp
loope
pop
cmp
mov
repz
movsl
repz
mov
pushf
mov
jbe
lock
push
adc
imul
jne
sbb
xor
ret
daa
ss
aas
insl
push
fistpl
xchg
pop
pop
loope
mov
pop
mov
dec
mov
test
call
les
mov
dec
sub
and
aaa
das
xchg
inc
mov
jne
rcrb
mov
movsl
mov
xor
test
mov
pop
pop
xor
xor
pop
push
js
mov
js
test
imul
and
test
outsl
insl
orb
push
xor
mov
add
shll
in
cltd
pop
mov
std
aam
rcll
lods
cmc
std
inc
jae
jne
push
daa
ja
pop
or
sub
xor
pop
and
cmp
adc
movsb
hlt
lods
mov
and
int
mov
inc
aas
andl
adc
lret
sub
pop
xor
lds
sahf
jp
ret
inc
ljmp
aaa
cli
adc
addb
jcxz
ret
fsubrl
xchg
mov
sbb
pop
push
orl
fldcw
pop
and
fsubrs
push
xlat
lahf
pop
jb
pop
pop
add
iret
into
mov
jnp
cwtl
fildll
jmp
loopne
inc
cli
pop
sub
pop
mov
fisubrs
sbb
jnp
cmp
sahf
push
clc
cli
imul
stc
xor
cmp
out
hlt
add
pusha
jle
push
nop
jns
xor
fisubs
jmp
imul
adc
sbb
or
xor
ja
mull
sbbb
pop
inc
aad
insl
je
cmp
int
cmpsl
jl
cwtl
push
mov
adc
or
adc
push
push
nop
push
in
dec
and
sbb
push
shll
jns
out
orb
dec
dec
push
insl
push
cwtl
and
jae
sbb
mov
mov
cmpsb
mov
les
adc
pop
xor
scas
and
push
push
shlb
cmc
in
push
inc
repnz
out
mov
fstl
hlt
inc
push
and
loop
dec
adc
popf
inc
cltd
or
clc
orb
pop
fs
sti
scas
das
xchg
lods
mov
jle
jecxz
push
sti
sahf
test
fildl
pushf
push
lea
stc
cmpsb
in
ret
jae
jbe
repnz
daa
fadd
jp
dec
lock
jns
add
cmp
xchg
ja
xchg
xor
lods
nop
and
fcompl
push
and
add
aad
popa
popf
inc
mov
mov
lret
es
mov
jl
ret
sbb
sahf
pop
outsl
xor
or
xor
arpl
fmull
push
xor
xchg
jae
movsb
dec
into
fsubp
pushl
jg
lahf
ja
into
gs
cmpl
lret
sbb
and
mov
gs
pop
sbb
cmp
xor
cmpl
push
jo
push
movsl
or
mov
sti
mov
cmpsb
dec
ds
out
popa
jmp
sub
nop
cmp
cmp
xor
xor
sub
push
insl
push
jg
hlt
cmp
mov
mov
lret
cld
sarl
leave
mov
jle
shll
ret
das
imulb
jbe
lcall
inc
dec
aas
jp
fistl
adc
pop
cmpsl
jecxz
fs
mov
adc
rclb
xchg
mov
fdivr
outsb
jle
movsb
push
idiv
mov
adc
nop
repnz
mov
pop
pop
dec
push
lds
test
inc
sub
mov
pop
jmp
mov
out
sub
int
test
in
loope
cmc
xchg
jno
ljmp
pushl
sbb
sbb
adc
adc
shll
cs
clc
sbb
loopne
rcrl
call
inc
cwtl
jecxz
repnz
insb
scas
insb
xchg
daa
jle
xor
mov
inc
or
mov
cs
imul
adc
inc
pusha
pop
push
adc
in
sub
notl
mov
cmpsb
pop
mov
sbb
movsl
sub
add
imul
xchg
jg
iret
lcall
adc
gs
lahf
mov
repz
and
in
leave
lds
cmp
cmp
pop
jae
sbb
test
mov
cltd
clc
or
fdivrs
syscall
ss
cltd
loope
cmp
mov
jl
xor
fwait
push
adc
int
ficoms
fwait
arpl
out
or
and
cmp
into
mov
xchg
data16
push
jne
popf
jl
daa
pop
addr16
out
mov
xchg
push
and
push
shrl
lods
push
mov
je
mov
outsl
jp
push
lods
jmp
sahf
jg
xlat
push
fs
sbb
jo
movsl
fmuls
iret
enter
mov
add
push
ret
dec
test
mov
pushf
fmull
xchg
dec
movsb
push
add
data16
mov
pop
in
sti
pop
xor
ds
add
cmpsl
sub
mov
incb
mov
xchg
aaa
mov
mov
add
jge
mov
and
xlat
mov
cmpsl
sti
test
xor
mov
into
in
jno
push
js
mov
dec
mov
mov
adc
push
sbb
iret
dec
aam
insl
in
mov
sbb
xor
mov
popa
pop
fldl
stos
mov
push
sub
cmp
bound
imul
adc
shlb
push
xchg
xor
fwait
mov
das
loope
adc
push
jle
dec
mov
adc
loopne
test
shll
jns
dec
icebp
add
fs
imul
call
adc
pusha
push
cmp
call
jo
add
xor
ljmp
fs
add
jae
and
jb
out
dec
jl
dec
adcb
jmp
or
push
push
pop
enter
jle
and
or
push
sbb
shll
andb
sbb
repz
outsb
add
repnz
dec
and
xchg
daa
lods
cmp
or
dec
dec
xor
mov
dec
std
in
adc
and
fildll
icebp
inc
pusha
popf
dec
fadds
mov
jb
adc
pop
arpl
sbb
sarb
fucomp
cmp
adc
ret
fnstsw
lahf
icebp
and
mov
bnd
cwtl
pop
push
int3
lsl
mov
adc
cwtl
inc
mov
insb
loope
jns
xchg
fwait
and
jbe
jl
test
insb
mov
aam
test
call
test
std
out
jae
fstpl
lea
aad
jge
push
and
add
cltd
inc
aaa
movsl
jle
or
jae
bound
or
data16
dec
mov
in
push
xchg
fmuls
test
popa
fisttpl
stc
bound
push
push
pop
gs
inc
imull
mov
ret
jmp
aam
popf
shlb
jge
push
inc
fildl
fadds
popa
ja
or
imul
dec
adc
push
stc
mov
jno
shll
lds
add
int3
add
inc
jnp
mov
sub
insl
xchg
orl
lret
cltd
sbbb
iret
pop
loop
sub
xchg
and
add
outsb
cld
mov
jle
stos
arpl
add
mov
cli
inc
mov
jns
lahf
mov
mov
imul
dec
shlb
cmpsb
fisttpll
sbb
aas
cld
mov
addb
loope
arpl
clc
add
pop
cmp
adc
sbb
loop
daa
shlb
push
inc
push
das
repnz
imul
loop
cmp
push
shrb
mov
dec
and
test
js
sbb
test
mov
xor
or
imul
scas
mov
lret
mov
pusha
ror
mov
adc
test
dec
xchg
inc
jg
aad
mov
into
push
test
pop
mov
push
cmc
add
inc
fadds
adc
pop
xchg
ret
mov
inc
pusha
dec
adc
sbb
sub
inc
pop
arpl
cmp
or
sub
xchg
jbe
fstpl
inc
xor
pop
lods
fcompl
add
xchg
pop
mov
jmp
dec
sub
or
mov
cmp
data16
mov
sub
mov
das
sbb
cmp
outsl
faddl
xor
test
add
jnp
cli
pop
imul
jb
pop
or
fwait
repz
mov
xchg
push
jl
jg
xor
adc
xchg
mov
add
fildl
movsb
ja
sbb
ds
xlat
mov
mov
mov
addr16
xchg
pusha
lahf
lret
pop
cmp
jo
ret
xchg
xor
lods
dec
xchg
imull
les
mov
add
test
lahf
cmp
push
popa
lar
dec
push
inc
test
dec
add
sbb
push
inc
into
xchg
and
mov
push
fdivrl
mov
mov
inc
pop
mov
sbb
lret
sub
mov
jecxz
lods
push
into
mov
in
jno
test
push
adc
sbb
sti
call
and
add
jnp
movsb
inc
pusha
mov
stos
mov
js
notl
mov
sbbb
inc
inc
jne
cmp
cwtl
push
lods
mov
push
sub
sbb
push
popf
std
aam
out
imul
aaa
adc
dec
roll
jge
mov
cmp
ljmp
pop
push
stc
mov
fwait
push
inc
jb
inc
div
push
repnz
inc
and
and
int
addb
push
and
xlat
movsb
test
leave
icebp
pop
mov
mov
push
xchg
jnp,pn
jns
jae
xchg
inc
sahf
push
jle
mov
enter
add
loope
xchg
mov
test
popf
push
lahf
dec
mov
xor
fsubs
jmp
mov
stos
adc
or
flds
dec
inc
jnp
cmp
push
fdivrl
jo
mov
gs
cmp
dec
pop
and
popa
mov
mov
das
cli
test
xchg
mov
jg
add
sti
mov
push
cmpl
lds
xor
popa
rol
or
sub
lods
lea
cmp
pop
sub
movsb
add
loope
adc
jmp
mov
fistpll
add
mov
adc
in
clc
out
ljmp
mov
push
jg
adc
pop
or
fstl
pop
insl
add
jb
push
xchg
dec
jmp
stos
sbb
ljmp
aad
call
mov
dec
js
sbb
adc
pop
pop
jle
mov
cmp
sub
mov
mov
nop
mov
movsb
mov
dec
fbld
sahf
and
jge
xor
sbb
inc
lock
lds
mov
pop
cmp
iret
fldl
jg
sub
les
cmpsl
test
in
jg
xchg
divl
mov
push
adc
neg
mov
imul
xchg
lcall
sahf
popf
and
xchg
xchg
rorl
mov
lods
outsl
fdivrs
out
out
les
sbb
fidivl
jg
vmwrite
lock
addr16
mov
test
adc
xchg
out
adc
test
lods
push
mov
imul
xchg
xchg
dec
inc
je
je
pop
lcall
imul
mov
xor
ret
out
and
aas
mov
sahf
xor
incl
sbbb
xchg
test
idivl
ljmp
popf
sbb
pop
mov
pushl
dec
xchg
jae
leave
lahf
ja
mov
stos
and
in
dec
add
adc
insl
sub
out
stos
insl
add
out
test
sub
push
mov
es
adcb
and
mov
repz
sub
push
push
movsl
sarb
insl
out
inc
int3
jno
test
sub
mull
lock
out
stos
inc
dec
pushf
pop
std
cmp
mov
dec
sbb
adc
and
inc
loop
mov
and
pop
cld
push
ret
icebp
jle
xchg
mov
pop
push
sub
repnz
lea
cmp
jns
out
sub
mov
mov
inc
enter
xor
fsubrl
ret
cmpsl
das
lea
stos
sbb
push
movsl
xchg
shll
xchg
sub
xor
loopne
in
shll
add
sbb
mov
mov
push
jae
repnz
test
lods
inc
push
mov
mov
mov
mov
add
stos
scas
lds
pop
movsb
adc
lret
mov
call
addr16
cmp
mov
shl
dec
inc
es
ds
cmp
dec
mov
stos
scas
loopne
clc
pusha
inc
cmp
lcall
or
sbb
mov
jb
iret
rcr
out
add
adc
mov
xchg
cli
nop
sub
jle
push
dec
adc
dec
mov
xor
push
mov
and
dec
ret
dec
jns
mov
mov
or
loopne
xor
cld
fidivl
jp
push
xchg
add
inc
xchg
dec
clc
dec
sub
ljmp
sbb
ret
addr16
lds
dec
lahf
mov
neg
por
aaa
xchg
into
int
vmwrite
cmp
pusha
pop
and
adc
sbb
bound
clc
ja
enter
mov
out
mov
mov
std
and
jne
lret
push
push
push
add
lods
or
dec
lods
jmp
ss
cmp
es
out
push
test
lea
inc
jnp
pop
outsb
and
pop
pop
jno
and
dec
into
mov
repz
outsl
mov
add
xor
mov
and
cmp
out
dec
jle
subb
stos
ror
xchg
mov
sbb
mov
jl
insb
lds
sbb
int3
mov
cmpsb
lods
sahf
jns
bound
sahf
js
mov
call
jbe
subb
pop
or
data16
mov
sbb
xor
aas
dec
and
jle
add
test
aas
mov
stos
arpl
cmc
roll
mov
add
test
js
pop
pop
push
push
rolb
xchg
and
fs
test
test
xor
adc
cmp
inc
push
sbb
pushf
or
pushf
jmp
push
mov
mov
add
hlt
pop
imul
mov
sarl
xor
outsb
and
pop
mov
cmpsl
lock
stos
fldenv
in
in
fildll
mov
or
je
leave
pop
jecxz
imul
cs
ljmp
sbb
sub
lods
lcall
pushf
inc
adc
mov
mov
ficoms
in
push
jnp
pop
jno
xchg
movsl
or
das
mov
push
test
imul
inc
pop
dec
lahf
roll
insb
sbb
nop
rcrl
sti
sub
jno
cmp
test
sub
adc
cwtl
mov
mov
mov
lods
jge
dec
lock
and
mov
push
sbb
mov
aaa
cmpsl
xchg
repnz
adc
sub
js
pop
sub
inc
xor
and
inc
or
out
jg
cld
mov
push
cmp
xlat
push
roll
sub
jnp
je
pushf
in
hlt
test
cmp
je
hlt
test
dec
aad
stos
ss
stos
lcall
arpl
or
outsl
xor
iret
add
test
jne
lods
mov
jge
xor
lret
sbb
aas
std
xor
ja
xchg
fbstp
lds
aas
sub
popa
jp
mov
insb
mov
cmp
jb
insl
leave
mov
mov
cltd
pop
ret
sbb
push
insl
lock
push
mov
jp
pop
jnp
push
jo
cmpsb
jl
imul
movsb
loop
pop
repz
jbe
lds
fisubrl
sub
jmp
pop
orl
sbb
lahf
fwait
inc
pop
das
xorb
xchg
and
inc
enter
dec
clc
sub
icebp
loopne
cmp
and
lcall
lret
xlat
repz
bound
fcmovnu
lds
sbb
ret
adc
adc
pop
pop
mov
pop
mov
or
adc
fisttpll
out
lods
insl
lds
cld
jmp
cmpb
sbb
push
sub
popa
push
inc
or
adc
pop
sbb
add
mov
clc
and
outsl
inc
sahf
test
imul
sub
xor
dec
push
push
stos
lea
jle
sbb
inc
adc
mov
mov
and
addr16
mov
inc
das
daa
mov
xchg
adc
fcoml
or
fisttpl
fwait
add
mov
data16
pushf
pop
jecxz
mov
pop
sbb
test
and
sbb
enter
push
xchg
push
and
xor
sub
mov
in
fdivrs
das
adc
ds
xor
cltd
dec
ja
bound
add
xchg
push
sub
sbb
push
fidivrs
pop
dec
lds
and
fnstsw
psrlw
push
mov
idivb
into
lea
inc
insb
xchg
xchg
mov
test
pop
jle
jns
xchg
add
in
cmp
xchg
cmp
adc
cmp
jne
std
jnp
add
cmp
je
mov
repz
mov
jp
mov
ljmp
xor
lcall
lods
das
imul
pusha
out
aas
fldt
jb
xchg
inc
setns
jno
scas
and
loopew
repnz
or
shll
ljmp
imul
js
mov
pop
mov
repnz
pop
insl
xchg
push
or
rorb
int3
stos
cmc
stos
cmp
xor
mov
sbb
xchg
mov
pop
sbb
in
movsl
push
xchg
ret
rcrl
outsl
mov
call
orb
lea
lret
xchg
dec
ljmp
popf
cmp
mov
sar
lods
lea
dec
mov
mov
xor
int3
dec
adc
rorb
ret
push
mov
inc
or
jno
cmp
pop
int3
or
or
popa
pop
sti
dec
push
inc
outsb
fwait
push
sbb
xchg
dec
out
cmp
and
cmc
in
pop
jmp
adc
shll
lahf
pop
cmpsb
in
mov
mov
fstpl
popf
add
jmp
daa
enter
sub
xchg
push
popa
push
in
jp
divl
sbb
pop
xchg
push
loopne
idivb
jl
rorb
cwtl
xlat
or
or
mov
mov
xor
prefetchwt1
jp
and
mov
dec
xchg
xchg
popf
cmpsl
push
test
out
out
insb
out
cmpb
push
js
push
rorl
imul
imul
lea
popf
rclb
jnp
cmp
out
push
push
adc
lea
out
popf
data16
or
mov
divl
sub
hlt
rol
out
sub
out
jnp
scas
out
loopne
shl
dec
dec
inc
data16
shr
jo
xor
sbb
inc
mov
lods
sti
inc
ljmp
aas
dec
inc
cmpsl
loope
ja
xorb
push
mov
stos
repnz
mov
es
int
cli
bound
sbb
pusha
fprem
call
jns
mov
lea
jle
inc
and
push
mov
xchg
push
or
mov
adc
lods
xchg
sbb
mov
shrl
push
std
and
xchg
push
dec
aas
scas
xchg
and
imul
mov
fwait
arpl
enter
addr16
sub
cmp
int
pop
out
stc
cld
pushf
inc
xor
or
rorb
pop
clc
jnp
les
push
dec
loopne
sub
cmp
adc
arpl
cmp
hlt
or
rclb
out
out
mov
mov
cmp
push
sahf
mov
jp
push
pop
xchg
outsb
sub
fidivrs
loope
and
push
sbb
cmc
sahf
icebp
pop
xchg
ss
lret
pop
adc
adc
push
jp
xor
sub
add
jbe
enter
dec
imul
jae
add
push
cs
adc
cmp
add
and
in
or
sbb
ds
push
dec
gs
fdivl
repnz
sub
imul
insb
insb
stc
mov
push
cmc
scas
outsb
xchg
cmpsb
xchg
int
sub
adc
sbbl
decl
movsb
loope
repnz
jnp
data16
mov
subb
push
test
jns
nop
outsb
nop
mov
jecxz
add
addl
out
je
std
ror
scas
in
in
mov
scas
mov
icebp
fsubrs
xorb
cmpb
mov
pop
adc
imul
popf
jg
mov
push
xchg
cmp
lret
pop
xor
ss
aad
sti
mov
imul
cmpl
inc
out
adc
sub
mov
fmul
jns
mov
les
sar
push
jp
and
mov
xchg
aas
and
ss
push
pop
loopne
and
flds
sahf
addr16
push
mov
int3
sarb
sti
mov
inc
xor
mov
pop
mov
cmp
cmpsb
cmp
xor
lods
inc
scas
sbb
fisttps
sbb
loopne
mov
cli
in
add
cmp
aad
movsb
xchg
add
addr16
out
fisubl
adcb
push
sbb
inc
popf
or
dec
nop
and
sbb
mov
out
mov
les
and
mov
and
fistpl
push
sub
enter
mov
mov
dec
xor
jnp
inc
addl
lahf
outsl
filds
mov
inc
mov
xor
adc
mov
pop
or
lret
lods
sbb
mov
push
hlt
clc
mov
push
xchg
ret
in
xor
fdivrp
mov
imul
dec
dec
leave
pop
mov
in
push
mov
pop
inc
call
in
lds
call
lods
mov
pop
test
imul
lahf
arpl
jecxz
cmpsl
adc
or
nop
test
push
jmp
and
in
mov
mov
insb
cwtl
daa
mov
ljmp
mov
push
lods
jne
jne
sbb
test
iret
aad
push
lods
imul
popa
mov
sub
jno
jnp
test
lcall
xor
daa
imul
test
and
mov
aam
enter
xchg
cmc
outsb
mov
test
mov
push
loope
mov
push
pushf
ret
ss
bswap
flds
test
dec
push
lahf
lea
repnz
fs
into
bound
mov
shlb
inc
inc
out
insb
mov
and
jl
dec
and
jmp
mov
pusha
xchg
xlat
dec
or
jp
popf
inc
mov
pop
sbbb
divl
fimull
jl
sbb
mov
and
loopne
jbe
fdivr
push
adc
and
lahf
xchg
sub
mov
mov
outsl
mov
mov
sahf
add
add
clc
iret
inc
test
jns
cld
aas
incl
mov
ret
pop
lret
cmp
add
clc
mov
movsb
pushf
lret
cmpsl
mov
mov
jp
rcrb
mov
stos
addr16
push
imul
jo
shr
xor
jno
sbb
xchg
repz
mov
push
cmp
xchg
adc
sub
and
cmp
lret
and
lret
lods
mov
push
mov
cwtl
dec
rorl
mov
jns
shrb
mov
mov
mov
jl
sub
push
sbb
mov
push
lcall
lret
cld
and
inc
ret
push
std
mov
sbb
xor
aaa
xor
shrb
sbb
cmpsb
mov
jb
jl
mov
aaa
rorl
testb
fsincos
mov
lcall
jno
dec
and
cmp
dec
push
jecxz
call
fcmovu
lock
dec
neg
pop
testb
adc
in
adc
pop
push
push
jecxz
pop
mov
push
pop
mov
push
xchg
add
add
xchg
sbb
jle
or
testl
push
jle
add
add
and
aad
and
xchg
outsb
cmp
sbb
outsb
lret
into
cli
rcll
mov
add
lret
inc
fisttpl
xchg
mov
sub
mov
jo
jecxz
into
fiaddl
sub
roll
rcl
inc
xchg
xchg
xchg
pop
jnp
jle
and
mov
fsts
mov
addr16
std
mov
jns
ret
out
sbb
jno
and
sti
lods
pop
inc
hlt
cmpsl
sub
lahf
cmp
and
jb
jg
je
xchg
cmpsb
aas
inc
push
leave
add
jle
fs
test
mov
lods
test
push
sub
pop
sbb
cmp
test
clc
iret
mull
mov
jns
mov
xor
orl
mov
sbb
xchg
jmp
sub
push
xchg
test
sar
repz
add
cmp
in
adc
mov
das
and
inc
cld
dec
cmp
clc
sub
dec
pop
addr16
insl
bound
jbe
pop
ljmp
fidivrs
movsb
cmc
sub
andl
fsubr
mov
sbb
loope
hlt
daa
out
out
and
fneni(8087
and
xlat
mov
add
and
cmc
movsl
add
adc
loope
ficoms
inc
addr16
icebp
pop
inc
stos
iret
ficoml
pop
dec
pop
dec
xorb
xchg
shll
jp,pt
cmpsl
in
push
jo
or
scas
std
out
pop
cmp
popa
push
sub
and
add
dec
and
lret
mov
pushf
pop
out
and
cltd
shlb
cmp
test
dec
in
test
dec
out
ss
xorb
outsl
leave
push
jb
adc
iret
mov
testl
or
or
jle
push
out
fcoml
adc
pop
in
shlb
pop
jnp
mov
or
fdiv
ja
xchg
lahf
xchg
adc
cmp
pop
mov
cmp
cmp
pusha
cli
incl
repnz
push
cltd
push
and
fcmove
clc
inc
enter
fists
into
shll
dec
mov
shr
fsubrl
mov
inc
lds
imul
sbb
punpcklwd
loope
fdivrl
adc
mov
push
rorb
sbb
iret
inc
mov
pop
jle
sbbl
rorl
lds
and
leave
pop
les
push
xlat
dec
repnz
push
xor
ret
mov
add
cmpl
jle
add
sbb
jo
loop
mov
xor
pop
popa
push
inc
movsb
ret
dec
arpl
add
add
or
fwait
xlat
pusha
scas
push
push
cmovl
shll
test
test
arpl
inc
cmp
sbb
call
stos
dec
inc
mov
orb
test
and
lahf
jbe
jo
dec
dec
nop
xor
repz
cli
mov
xchg
fwait
cli
addr16
mov
shrb
cmp
std
xchg
xchg
ja
enter
shll
imul
xor
sub
mov
push
stc
mov
push
mov
out
inc
negb
push
fstpt
mov
outsl
fsubp
add
pop
push
clc
je
xchg
cld
jecxz
movsb
test
pop
jb
jge
inc
jle
cmp
xchg
aaa
ud1
jne
cmpsb
push
sub
xor
addr16
arpl
cmp
cld
negl
add
jle
mov
push
lahf
in
push
push
or
xor
insb
dec
ret
jnp
pop
mov
data16
lods
push
test
and
sbb
stos
xchg
shlb
jnp
sub
stc
dec
pop
mov
mov
scas
jge
test
xor
movsl
enter
pushf
push
lcall
pop
insl
pop
dec
out
fiadds
xchg
lea
loopne
movsl
in
or
add
push
and
mov
mov
loopne
ss
gs
sub
ja
scas
push
add
imul
or
or
mov
sbb
fucomi
pop
adc
jno
imul
sahf
push
inc
push
mov
jb
mov
fwait
xor
sbb
imul
mov
out
scas
sbb
add
adc
shll
and
mov
xchg
pop
push
add
push
push
fs
cmp
lods
adc
xchg
xchg
rcrl
lods
mov
mov
mov
sub
mov
ret
lds
movsl
add
mov
push
jge
movsb
push
add
mov
cltd
xchg
dec
aad
sub
imul
push
jo
repz
shrl
jne
sbb
in
inc
jne
jp
lods
adc
adc
lahf
out
cmp
in
pop
sbb
pop
push
das
jb
xor
pop
hlt
data16
mov
mov
xor
xchg
fs
stc
sub
mov
pushf
dec
sti
add
in
push
xchg
and
outsb
enter
push
mov
movsb
negb
shlb
dec
mov
mov
push
mov
xchg
push
test
aaa
xchg
in
popa
jb
xor
int
add
pop
mov
lret
mov
cmp
in
mov
lods
stc
jne
ljmp
mov
idivl
cmp
sbb
fsub
cwtl
std
and
pop
adc
adc
sarl
jne
enter
outsb
mov
adc
sub
lods
or
mov
imul
test
push
scas
hlt
ret
mov
pop
pushf
push
xor
mov
mov
call
or
xchg
sbb
cltd
mov
lret
cld
jo
stos
add
out
popa
sti
inc
rorl
fldt
fmul
pop
into
fidivrl
clc
dec
add
movsb
fmuls
jb
push
jnp
jb
outsl
fcoml
in
movsb
inc
mov
stos
lret
sahf
mov
ret
mov
enter
mov
std
or
inc
dec
mov
sbb
das
rclb
cmp
leave
or
push
jmp
loopne
or
or
xchg
add
sub
jl,pt
movsb
sbb
xchg
or
dec
jo
cmp
jecxz
inc
mov
add
or
test
push
mov
xchg
dec
add
push
cmp
lock
lock
iret
xchg
scas
les
mov
call
ja
mov
out
es
dec
dec
ja
imulb
lds
leave
and
sub
xchg
scas
and
es
jbe
lea
cmpsb
imul
out
rcrb
negb
lods
ljmp
sub
inc
out
lods
in
inc
cmc
lahf
enter
add
mov
dec
out
lods
mov
aad
pop
jnp
mov
ds
cmpsb
imul
sub
iret
clc
inc
mov
push
icebp
add
xchg
inc
and
jno
xchg
lods
mov
sbbb
ja
adc
daa
inc
mov
jb
cs
push
enter
adc
enter
dec
lret
ret
mov
orl
inc
flds
xor
daa
ret
loope
shr
out
shrl
insb
iret
inc
pop
loop
pop
xchg
cmove
mov
mov
test
jnp
iret
push
mov
push
daa
sbb
rolb
mov
test
rcll
cmp
jle
ds
mov
int
outsb
loop
jmp
fcom
sbb
test
in
clc
jo
pushf
ret
lock
lods
rcrb
pop
imul
out
adc
pop
in
mov
sub
jecxz
push
shrb
in
mov
sbb
sub
jmp
pop
stc
std
arpl
mov
mov
add
xchg
pushf
lret
or
ds
sbb
xchg
sub
out
aad
cli
jmp
std
ja
insl
pushf
iret
dec
jno
push
jmp
mov
inc
repz
jns
shl
dec
rolb
sub
push
mov
mov
test
in
pop
mov
cmpsl
in
pusha
add
sub
xchg
out
test
frstor
sub
repz
mov
push
test
jp
or
inc
sbbl
inc
mov
orl
lock
lahf
movb
dec
out
cmp
push
xchg
mov
or
push
mov
inc
movsl
jbe
mov
jecxz
add
or
add
xchg
fwait
add
lods
sbb
lahf
cmp
jbe
clc
cmp
pop
jno
jmp
mov
adcb
movsl
pop
insl
xchg
jecxz
test
inc
mov
sub
xor
repz
jb
and
out
inc
sbb
xchg
push
mov
subl
out
mov
sbb
sbb
gs
dec
push
loop
dec
repnz
and
scas
jle
pusha
test
push
lret
xor
mov
and
mov
add
push
add
adc
cvtps2pd
mov
insb
jmp
dec
cwtl
add
mov
push
mov
icebp
inc
jno
lds
pop
mov
movsb
xchg
and
add
mov
push
rcl
cltd
or
mov
stos
xchg
popa
cmc
jb
ret
fs
stc
ss
scas
sub
ret
ds
lcall
mov
xchg
mov
sti
loop
outsl
dec
jle
jno
jnp
sbb
dec
cld
and
xchg
xor
cmp
push
inc
gs
cmp
div
pushf
movsl
dec
mov
int
cmpsl
lcall
arpl
ss
stc
sub
addl
mov
shll
je
push
sub
ror
mov
and
unpckhps
jnp
adc
cs
filds
mov
lods
je
push
cld
xchg
sub
jmp
pop
sbb
mov
push
repnz
sti
in
mov
nop
lea
ss
popa
aam
clc
out
mov
pop
inc
fs
mov
mov
jg
sbb
inc
scas
out
fxam
frstor
sub
jns
push
out
mov
loope
sub
gs
rcrb
or
and
sbb
inc
mov
sbb
loopne
xchg
mov
push
jmp
dec
sub
cld
or
or
xchg
or
ds
xchg
jecxz
cmpsl
mov
fstl
mov
testb
popf
mov
inc
sub
push
in
dec
fisubrs
push
jl
add
xorl
loopne
pop
sbb
in
cmp
mov
inc
es
daa
sahf
pop
call
jae
imul
sub
xchg
pop
dec
jbe
and
addb
pop
hlt
test
repz
test
stc
jae
stc
jb
mov
and
dec
pop
arpl
leave
and
scas
cmp
cmp
stc
nop
mov
sbb
iret
lret
mov
push
ficoms
jle
sub
rol
cld
sbb
fmull
dec
jmp
or
pop
orl
xor
ja
daa
xor
sahf
orl
sub
cld
mov
cltd
jge
adc
les
js
sbb
cmpsb
pop
xor
ret
fmull
ret
sbbb
ret
add
fwait
adc
repz
mov
scas
aad
in
xor
inc
push
mov
xor
jo
adc
ja
adc
mov
cmp
sub
xchg
push
mov
pushf
jmp
mull
dec
das
enter
xor
xchg
add
movb
dec
ljmp
jnp
dec
bound
mov
insb
outsl
cmpsl
adc
outsl
xlat
cmp
sbb
mov
cmp
aam
je
add
cmpsl
and
xchg
out
pop
cmp
ss
add
and
mov
fstl
das
push
call
cwtl
and
mov
aad
cmp
inc
out
add
mov
xor
jle
mov
inc
mov
orl
push
sbb
jne
jmp
xor
in
ss
mov
xorb
fcoml
mov
in
inc
ss
mov
lret
push
sbb
repz
pop
les
push
pop
arpl
and
lock
xlat
or
sbb
add
imul
lret
sbb
sarl
stc
or
mov
add
mov
sbb
adc
xor
lret
or
push
or
adc
popf
test
mov
repnz
scas
test
xchg
xor
ret
fnstsw
lods
cmp
cmp
jno
lret
call
and
and
pop
xchg
push
adc
jno
repnz
outsb
dec
into
mov
jge
xchg
mov
mov
mov
xchg
loop
je
jg
cmc
add
pusha
loopne
sbbb
test
mov
sbb
out
shlb
lcall
in
add
sub
js
mov
insl
in
dec
cmp
test
or
or
sbb
dec
imul
jge
sbb
mov
mov
cmc
fidivrs
sbb
add
fstpt
divb
push
sub
cmp
lods
add
in
push
rolb
pop
xor
jns
jne
repnz
adc
cmp
mov
leave
adc
jge
xchg
icebp
cmp
aaa
sbb
ja
js
mov
adc
and
or
test
push
or
into
imul
call
add
idivl
inc
pop
inc
pop
push
add
cmpsb
lock
ljmp
outsl
lret
xor
dec
shrb
sbb
and
jo
ja
mov
mov
jge
pop
mov
xchg
adc
testb
ja
movsl
cmp
sbb
mov
roll
adc
cmp
cmc
or
push
lea
sbbb
mov
dec
sbb
outsl
and
das
lods
roll
adc
clc
cmp
clc
cmp
repz
dec
dec
hlt
aam
mov
shrb
stc
xor
fldcw
pop
add
inc
adc
mov
sahf
lds
pop
mov
add
sbb
cmp
cmp
outsl
jo
es
repnz
add
lock
jae
sbb
fsts
fldenv
je
xchg
call
mov
pop
and
lret
dec
push
push
aam
pop
cld
and
ljmp
ss
jno
clc
pop
aas
fs
cmp
dec
into
and
insl
sti
insl
add
nop
movsl
fdivl
mov
data16
les
popl
loope
repz
jle
pop
inc
push
mov
pop
ds
pop
cmp
mov
fmuls
mov
dec
push
ljmp
shrb
int3
mov
xor
mov
inc
mov
xor
dec
or
jbe
add
sbb
add
lea
loopne
push
in
mov
mov
add
insb
int
mov
push
push
andl
je
pop
xchg
pop
lods
mov
mov
hlt
scas
inc
and
movsb
push
shll
stos
jnp
stos
add
mov
shlb
pop
inc
int
jmp
and
fincstp
xchg
lock
inc
jp
nop
adc
mov
lret
rcll
loopne
pop
mov
jg
sbb
cmp
lret
xlat
bound
inc
inc
popa
divl
jmp
addr16
js
repz
inc
ljmp
dec
test
push
lock
mov
nop
fsubr
sbb
dec
push
mov
cli
or
pop
push
arpl
mov
sbb
push
lea
or
jnp
movsb
pop
sbb
scas
jmp
jle
pop
push
popa
add
mov
test
mov
cld
call
dec
cmp
stos
sar
fisubrs
sub
lahf
stc
in
imul
mov
add
cmp
cmp
fstpt
push
negl
xchg
pop
cs
rorl
loope
cmpb
adc
ret
cmp
mov
dec
mov
xor
pop
pusha
sub
aas
mov
cmp
aad
leave
xor
js
shrb
test
jno
cmpsl
xor
adc
lock
dec
jmp
sbb
addr16
in
mov
sbb
repnz
xchg
faddl
call
mov
jg
sub
pop
ret
clc
sub
ja
pushf
divb
fidivs
nop
xor
shlb
xchg
pop
shrb
dec
mov
cmpl
shr
sbb
adc
add
xor
lock
mov
mov
fadds
jmp
lahf
ret
inc
adc
ret
mov
js
insb
out
mov
test
sbbb
and
cs
xchg
inc
in
cs
andb
and
sub
adc
pop
push
popa
lcall
xor
imul
inc
jl
cmp
dec
out
insl
cmp
xchg
repnz
xor
rcl
imul
mov
pop
mov
mov
aad
push
pushw
xor
lret
lcall
pushf
dec
mov
dec
dec
punpckldq
jmp
jbe
mov
jp
loope
jge
mov
sub
pusha
pop
pop
adc
mov
fs
fiaddl
push
je
inc
test
call
xchg
jo
jge
in
cmpsl
in
je
enter
sbb
add
call
jbe
scas
cmpsl
cmp
dec
ss
dec
ljmp
inc
fdivr
and
fdivrp
notl
mov
or
sti
mov
pop
int3
mov
jge
push
lcall
pop
cmpsl
and
pop
cmc
addr16
mov
fldt
into
sarb
mov
jmp
and
push
sub
das
jnp
mov
add
pushf
lret
xor
pop
int
push
imul
js
lods
mov
sbb
cwtl
dec
mov
ds
push
cltd
sahf
and
insl
ret
push
xchg
es
iret
cmpsl
pop
xchg
imul
cmpsb
dec
mov
mov
sti
xor
iret
push
div
sbb
in
cltd
fs
lret
repz
push
push
call
lret
in
fnstsw
cmp
add
filds
jb
pushf
add
mov
or
hlt
mov
push
mov
pop
dec
sbb
cmp
cmpl
lea
inc
dec
inc
pop
xchg
fisubrs
out
pop
add
cmp
sbb
xchg
add
xchg
pop
jmp
push
jbe
xchg
loop
lcall
mov
pop
lods
stc
pop
sub
lds
cwtl
inc
insb
imul
push
clc
cmp
add
add
add
cmp
xchg
aam
sub
mov
cld
pcmpgtd
mov
shlb
pop
nop
dec
inc
pop
hlt
xchg
lret
test
cmp
sub
rorl
fcomps
cltd
rcl
push
mov
and
push
repz
mov
cmp
das
xchg
sbb
pop
sub
gs
cwtl
fdivl
ret
shrb
or
and
jp
repnz
jp
adc
sub
pop
add
sbb
mov
dec
dec
mov
inc
jge
andb
xchg
or
dec
sbb
pop
jmp
xchg
mov
jae
mov
mov
mov
faddl
xor
xchg
out
jmp
es
lss
pop
cmpl
lock
dec
push
shrb
dec
lea
fdivrl
xor
cli
mov
shrl
adc
push
lahf
bound
xchg
mov
inc
and
mov
cli
out
ja
mov
rorl
xor
andl
push
hlt
insl
rcll
ficompl
sbb
adc
testl
adc
push
lods
insl
cld
jmp
test
add
or
insl
ds
jge
adc
sbbl
insl
mov
lahf
xchg
xor
xchg
call
mov
les
push
sbb
cmp
xor
push
outsb
lock
sub
pop
mov
jle
fcoml
cld
lods
add
adc
xchg
adc
sbb
pop
or
or
int
rolb
in
ljmp
cmp
fwait
push
cmp
inc
ret
lcall
daa
int
sub
test
dec
imulb
neg
inc
push
pop
sub
outsl
je
pop
sbb
mov
movsb
pop
pop
xchg
sbb
icebp
sub
jno
or
data16
in
push
add
xchg
xor
jg
jl
imul
mov
clc
jecxz
adc
xchg
xor
pop
mov
into
out
pop
dec
sbb
lea
lods
sbb
mov
lcall
mov
jo
sti
sarb
dec
mov
inc
add
scas
test
out
fidivl
xchg
add
xchg
add
in
pop
cltd
fsts
push
cmp
js
xor
pop
xor
movsl
loopne
add
mov
sbb
fs
xchg
dec
cli
adc
mov
movsb
or
mul
xor
aad
dec
push
mov
jl
lret
dec
in
and
mov
pop
cmp
jne
iret
addl
xchg
scas
jae
jo
pop
andl
sbb
les
movl
shr
mov
inc
xchg
cmpsb
sub
jg
rcr
movsb
add
xchg
out
leave
mov
xchg
lcall
cmp
push
sti
sub
int
or
das
imul
mov
inc
hlt
add
sub
sub
mov
lahf
cmp
fidivl
or
jae
jnp
xor
push
outsb
push
mov
pop
scas
mov
icebp
push
pushf
adc
ljmp
adc
dec
dec
adcl
mov
add
cmpsl
push
out
mov
cmp
xchg
mov
enter
pop
aam
xor
stos
push
ja
jno
push
jl
je
fs
xchg
push
ret
adc
call
enter
test
jge
add
fldcw
mov
insl
std
inc
inc
mov
mov
insl
and
js
cmc
loope
in
andb
mov
xchg
inc
adc
add
cmpsl
mov
and
rcrb
sbb
addr16
dec
insb
aad
in
insl
fwait
push
call
mov
fimuls
int3
mov
xor
ret
mov
lret
imul
int3
out
xchg
inc
jl
lcall
jb
add
dec
andb
out
fdivs
lret
push
xor
xor
ds
das
cmpsl
aam
stc
mov
sbb
int3
cld
lea
xchg
push
cwtl
repnz
in
xchg
and
std
pop
addr16
and
std
test
xor
add
cmc
into
push
sahf
cmp
enter
mov
stos
je
adcl
testb
stc
lea
les
xchg
adc
imul
ret
je
sub
inc
mov
test
and
cs
pop
push
adcl
lcall
mov
jae
or
jbe
cmc
das
fcompl
jns
adc
cmp
cmpsl
xchg
lcall
mov
out
lret
xorb
mull
enter
lods
mov
outsl
call
pop
mov
int3
push
lock
mov
pop
xor
stos
outsb
add
jno
pushf
orl
pop
test
faddp
add
add
pop
fcomps
sar
imul
loope
mov
icebp
stos
ret
and
test
cld
xchg
xchg
mov
imul
inc
adc
mov
cmc
push
icebp
lods
loop
mov
int3
outsl
lods
adcb
pop
ja
fistl
test
push
mov
sbb
mov
sub
sub
xchg
pop
ljmp
mov
int
mov
inc
into
cmp
lods
jg
cmpsl
jge
mov
arpl
mov
pop
xor
ss
inc
stc
popf
stos
rolb
enter
mov
mov
je
lret
daa
dec
dec
aas
dec
jns
mov
icebp
sub
xor
xlat
jmp
in
xor
and
incb
adcb
xchg
cli
lock
call
push
push
out
lret
test
xchg
cwtl
or
adc
dec
sbb
pop
loope
cld
xchg
xchg
leave
int3
mov
xchg
mov
and
jl
imul
jmp
ljmp
cmpsl
pop
jl
xchg
xchg
cmp
xor
jecxz
rolb
mov
mov
adc
xlat
dec
popf
ficomps
cmc
and
jle
inc
aaa
repz
sub
dec
shrb
mov
out
cmp
fidivrs
mov
lock
add
sarb
sbb
push
xor
xor
aam
mov
xchg
mov
mov
add
sub
inc
cmpb
ljmp
je
out
sbb
mov
cmp
aas
clc
adc
scas
or
popf
insl
jae
and
xorl
scas
push
aad
jne
addr16
xchg
push
incl
nop
std
iret
int
arpl
sub
insl
cs
inc
jbe
lahf
nop
mov
cmpsl
mov
mov
jno
mov
test
sbb
xchg
in
sub
adc
das
outsb
fsub
mov
or
mov
and
mov
xchg
inc
pushf
sub
lock
mov
or
es
dec
out
pop
cmpb
sbb
add
popf
mov
sub
arpl
cmpsb
inc
mov
jae
insb
in
and
out
pop
xor
call
fwait
paddusb
imul
push
aas
pusha
push
dec
or
lcall
jno
inc
dec
data16
stos
fmull
mov
mov
sarl
sti
lods
sarb
lods
loopne
pushf
jnp
mov
rcrb
sub
adc
fdivp
dec
pop
push
stos
call
insb
icebp
mov
push
fstpl
and
dec
xchg
fnstcw
lret
push
repz
add
fnstcw
pop
mov
je
jno
and
imul
test
cmp
lcall
ficompl
mov
push
aas
xchg
push
mov
inc
mov
xlat
paddsb
inc
sub
rolb
xchg
sbb
orl
pop
enter
jmp
mov
enter
add
mov
mov
jnp
dec
xchg
scas
jp
and
aad
push
icebp
mov
fwait
mov
or
aaa
mov
xchg
mov
int
xor
mov
and
addr16
fstps
mov
add
mov
push
lahf
add
aas
adc
shl
fs
pop
lds
mov
push
mov
mov
pop
jge
repnz
aas
push
or
push
add
gs
add
ja
push
test
sahf
jecxz
test
rolb
das
adc
lahf
jmp
pusha
cmc
xchg
cmp
or
adc
cmp
jle
mov
jb
mov
shrb
xlat
pop
jae
pop
popa
into
orb
sbb
rorl
push
fsubl
mov
popa
mov
lods
mov
ja
or
pop
inc
out
aam
adc
scas
or
sbb
notb
dec
mov
dec
ret
fwait
cli
or
in
or
push
push
out
push
scas
push
xchg
hlt
lds
push
mov
xchg
andb
mov
popw
push
push
add
leave
sbb
pop
pop
mov
aam
push
mov
and
ljmp
or
xchg
pop
mov
out
xchg
ds
fistps
xor
dec
mov
int3
out
jmp
cmpsb
lods
test
mov
dec
mov
pop
jns
mov
es
mull
bound
movd
xchg
sbb
pop
and
mov
popf
nop
and
mov
mov
push
aad
jae
int
xchg
rcr
pop
call
jmp
mov
mov
mov
adc
mov
das
aad
pop
pop
nop
sbb
icebp
xchg
add
arpl
add
jp
hlt
jle
repnz
sub
sar
xchg
pushf
in
imul
inc
mov
enter
xchg
pusha
leave
and
mov
pop
pop
push
jnp,pt
std
inc
stos
mov
addr16
jle
add
add
sub
fwait
aas
stc
xchg
test
rorl
pusha
int
sbb
loope
sbb
sbb
js
in
scas
cmpl
dec
ljmp
icebp
pop
sahf
aaa
sbb
sbb
xlat
sahf
adcb
shl
mov
outsl
ret
idivb
das
xchg
cld
mov
scas
imul
push
mov
popa
jle
mov
nop
int
inc
std
ror
mov
push
pusha
aas
sbb
daa
push
ret
gs
call
and
outsb
or
imul
gs
mov
cmp
cmp
mov
nop
sub
orl
push
imul
pop
icebp
jo
add
out
lret
stc
dec
rclb
sahf
xor
xorb
popa
lds
add
cmc
pop
adc
bound
xchg
imul
sarl
testl
rcrl
pushf
movsb
mov
mov
out
fcoml
dec
mov
mov
out
clc
test
aad
push
in
or
test
jo
xchg
and
xlat
cli
pop
sbb
jl
push
outsb
iret
inc
mov
dec
mov
push
push
mov
push
and
xchg
shll
fisubrl
mov
mov
movsl
jmp
inc
mov
stos
pop
std
shrl
xchg
lret
test
popf
adc
push
fisubl
or
push
jae
cmp
rorb
xor
ret
lods
mov
push
test
xor
xchg
out
mov
in
bound
dec
mov
clc
sbb
inc
xor
nop
lods
xor
inc
jmp
dec
xor
push
add
inc
jp
test
into
cmp
and
insl
je
adc
or
push
into
xchg
pop
and
popa
pusha
ss
scas
mov
cs
mov
aaa
adc
test
out
lahf
ljmp
push
xchg
outsb
mull
cs
jmp
stos
call
ret
daa
or
or
cwtl
cmp
pop
pop
subl
into
mov
jns
fidivrs
ret
mov
movsb
push
inc
cmpb
xchg
fisttpl
adc
push
outsl
add
xchg
cmp
in
mov
inc
lret
or
add
mov
enter
push
fs
dec
jns
xor
insb
loop
push
and
outsb
inc
es
push
movsb
cmpsl
ds
cmp
push
push
jecxz
jg
cmp
fs
cmpl
mov
pusha
jno
outsb
cwtl
fwait
xchg
nop
add
outsb
adcl
jmp
loope
flds
in
dec
into
out
aad
out
mov
jle
addr16
jle
scas
ss
sbb
xchg
test
jo
pop
insl
cmp
mov
cli
mov
cmc
cltd
mov
enter
mov
in
andb
pushf
push
loopne
aas
les
fsin
out
xchg
ljmp
outsb
jbe
and
push
mov
rcll
roll
dec
cmp
mov
sbb
ja
push
lret
sbb
jp
push
or
jl
dec
jns
pop
cs
jbe
mov
fdivl
sti
das
sbb
insb
cwtl
adc
fwait
xor
inc
pop
out
pop
mov
push
jne
xchg
sbb
cmc
add
xor
fwait
or
sbb
xchg
das
out
pop
ret
xchg
sbb
cmp
loope
test
pop
jno
inc
add
sbb
xchg
loop
push
cwtl
fidivl
mov
jnp
inc
mov
enter
xchg
mov
inc
xchg
aaa
jge
push
sbb
mov
jle
scas
xorl
jns
loop
sub
rolb
cmp
mull
inc
scas
fxch
adc
int
addl
inc
mov
daa
pop
add
cmpsl
add
decb
or
gs
idiv
or
push
dec
movsb
test
rorl
loop
jno
adc
pushf
cmp
xchg
xchg
sarb
negl
sahf
xor
mov
shl
and
push
out
bound
lret
dec
je
or
ret
pop
daa
aaa
daa
pop
push
jge
push
push
outsl
adc
or
loope
xor
scas
int3
jo
xchg
xor
daa
mov
out
rcll
adc
lahf
xchg
bound
jo
cmp
lahf
dec
jp
sub
lock
leave
dec
pushf
adc
mov
out
cli
pop
sub
inc
xor
xchg
mov
outsb
leave
or
enter
and
jg
gs
mov
lods
popf
xchg
push
test
leave
xor
dec
xchg
xor
scas
or
in
mov
fsubrs
mov
mov
loope
pop
add
push
or
push
jl
popf
push
add
mov
mov
aad
or
adc
jb
scas
dec
cld
sbb
mov
mov
push
xor
adc
movsb
out
mov
xchg
cmp
lea
jb
or
subl
jecxz
pop
ja
dec
jno
sar
cmc
mov
and
cltd
jge
mov
sub
mov
pop
mov
loop
mov
nop
or
lahf
addr16
cmp
adc
fidivrs
xor
jno
cmpb
mov
jmp
add
push
mov
mov
out
scas
rol
jae
movw
fcoml
push
test
fisubs
mov
sub
push
lret
popl
cmp
mov
cmp
jnp
and
mov
jo
out
pop
pop
jecxz
pop
jmp
xchg
stos
pop
mov
dec
add
xchg
popf
aaa
mov
aaa
rolb
mov
lods
movsb
stos
cmpsb
test
fbstp
ds
push
dec
jmp
sbb
push
cmc
mov
int3
push
xor
cld
pop
pop
bsr
fimuls
sbb
ret
mov
inc
rcrb
xor
push
and
rdmsr
dec
jmp
fsts
mov
cltd
insb
insl
repz
mov
into
sub
in
sti
lock
outsb
dec
cmp
leave
jbe
lock
pop
sub
test
cld
cmp
or
push
jg
inc
divl
divl
leave
rorb
cmp
addr16
add
mov
cmp
xorl
cld
idiv
mov
sarl
or
and
jnp
aaa
or
adc
mov
lahf
xchg
shll
push
pop
jl
dec
enter
mov
in
rolb
push
fldenv
fstps
push
inc
in
mov
leave
lods
lods
mov
or
lea
lds
test
mov
sub
sti
pop
pop
jne
push
fwait
xchg
push
mov
adc
pop
mov
test
js
push
sub
inc
pop
push
sub
pop
dec
iret
sbb
cld
setg
pop
mov
xchg
xor
inc
divl
std
dec
punpckhdq
add
inc
mov
daa
pop
xlat
inc
std
push
dec
out
jno
mov
and
inc
lds
or
sub
movsl
sub
fistl
popa
inc
les
mov
mov
fcmovu
xchg
mov
cltd
mov
rcl
cmp
into
or
roll
fcoml
sbb
xor
adc
push
mov
shl
shll
or
lret
in
jne
fldl
aas
mov
xchg
icebp
clc
add
mov
clc
push
rcrb
jge
mov
gs
pushf
sbb
iret
lret
pusha
push
mov
mov
stos
in
xor
aam
adc
mov
cli
sahf
xor
mov
mov
mov
dec
fisttps
out
mov
rdtsc
xchg
mov
inc
pushw
dec
in
adc
xor
out
mov
test
je
mov
stos
leave
xchg
pop
inc
push
mov
scas
int3
mov
push
push
add
movsl
lock
jo
push
push
xor
xchg
stos
mov
nop
fs
ds
bound
dec
std
aas
vrcpss
mov
adc
jge
adc
sub
jnp
add
js
sbb
dec
sbb
xor
lods
loopne
leave
push
rolb
or
arpl
jmp
js
pop
jno
incb
out
test
or
pushf
scas
fcomps
shlb
stos
out
ds
dec
or
js
sahf
or
call
out
jl
test
loopne
test
mov
rcll
mov
stc
mov
stos
dec
aas
cmp
push
and
test
mov
cmc
int3
pushf
aad
mov
dec
jbe
xchg
outsb
push
fistl
add
sbb
inc
cmp
movsl
fcomp
add
cli
dec
fcoml
iret
int3
xchg
callw
ud1
mov
lods
inc
or
mov
idivl
mov
aaa
jns
pop
mov
imul
bndstx
cmp
fisubrs
and
push
jno,pn
arpl
mov
into
subl
add
das
mov
mov
bound
jo
add
outsb
inc
cs
push
mov
and
add
fdivr
popa
popa
fcompp
add
mov
ljmp
mov
pusha
xchg
xchg
push
or
mov
push
jae
mov
sbb
fs
subl
mov
sbb
mul
add
push
cmc
stos
and
jecxz
or
ljmp
dec
mov
dec
lds
cwtl
ss
nop
stc
add
jae
adc
mov
mov
sbb
push
ljmp
cld
pop
pop
mov
out
xchg
mov
andl
stc
mov
jae
std
aam
insl
push
cmp
dec
aaa
adc
jecxz
lds
jmp
in
pusha
adc
add
mov
roll
pop
or
lret
mov
add
dec
call
gs
pop
ljmp
loope
arpl
add
pop
popl
inc
shlb
adc
ja
sub
call
adc
mov
adc
loopne
mov
lods
jnp
dec
ss
lods
in
mov
aad
inc
xor
mov
xchg
adc
ja
adc
andl
jge
inc
insb
xchg
fwait
stos
mov
js
pop
scas
xchg
je
in
sbb
or
gs
inc
clc
je
out
stc
dec
push
jle
xchg
lods
mov
push
les
mov
jle
or
and
int
mov
arpl
dec
or
nop
or
xlat
jo
jle
xchg
push
add
fcomi
and
push
mov
inc
leave
xor
pop
inc
dec
cmp
push
xchg
xor
stos
cltd
scas
aaa
push
sub
pushl
leave
mov
out
cltd
jmp
sub
adc
rcl
in
and
js,pt
or
loope
or
icebp
mov
sarl
push
jmp
shrl
cmp
rcll
push
shlb
inc
adc
leave
pop
sub
sbb
and
shll
jbe
xlat
sbb
cmp
push
dec
push
mov
data16
jbe
xchg
lods
addb
inc
fdivrs
scas
lods
dec
push
loop
roll
arpl
rorl
cmp
xor
sbb
gs
sarl
pushf
outsb
jge
test
cmp
push
clc
adc
insb
sti
jns
popf
aas
jp
test
popf
out
pop
divb
dec
dec
adc
sub
hlt
and
shll
sahf
fcomip
push
fwait
out
or
loopne
insb
push
dec
add
mov
les
out
pop
clc
dec
lock
push
or
cmp
pop
aam
push
sbb
xor
clc
xor
adc
loopne
in
sbb
xchg
cld
sub
or
xchg
inc
dec
sub
xchg
cmp
sub
push
rcr
rol
mov
inc
mov
hlt
mov
arpl
pushf
mov
rcll
and
clc
inc
mov
icebp
mov
push
cltd
push
inc
dec
pop
icebp
loopne
imul
or
movsl
mov
lds
cmc
pusha
into
rcr
lock
jb
mov
stc
sbb
popa
mov
pop
in
mov
enter
enter
dec
bound
add
and
lret
adc
mov
adc
mov
adc
xchg
andb
inc
cmc
mov
movl
sub
cmp
push
jns
cmp
or
lret
scas
jp
loopne
sbb
lret
sbb
insb
lret
xchg
xchg
jnp
cmp
pusha
std
jmp
jle
sbb
cmp
sbb
test
int
cs
jno
sarl
outsl
inc
mov
sbb
fsubs
sub
lahf
or
je
jp
cmpsb
pop
pop
mov
popa
jnp
mov
test
dec
cli
in
out
or
add
pop
js
dec
fucomip
and
jb
mov
lock
or
or
mov
enter
ss
cmovg
insl
mov
mov
pop
or
jb
ret
pop
jb
rcll
popa
and
movsb
arpl
inc
decb
pop
and
inc
fwait
enter
test
out
xchg
and
gs
aad
xchg
add
cmp
inc
and
and
adc
jbe
rorb
jns
push
pop
or
pop
add
xchg
rcl
insb
jnp
dec
jnp
cmp
jl
xor
pop
push
pop
ljmp
rclb
push
sub
pop
divl
dec
outsb
ret
dec
or
aaa
xchg
int
cltd
dec
pop
ljmp
jge
sbb
inc
subl
ret
jo
mov
loop
or
stc
fmull
and
add
imul
sarb
push
lahf
add
inc
jae
inc
lea
xchg
stos
pop
cmp
adc
movsb
mov
push
jns
ljmp
fstpt
call
in
or
add
mov
dec
sub
scas
je
sahf
sbb
xorl
inc
movsl
sbb
inc
xchg
inc
aam
xchg
roll
adc
xchg
lods
leave
insl
popa
scas
sub
cmp
fmull
sbb
pusha
inc
or
or
fs
aad
sbb
test
mov
mov
in
sbb
pop
bound
inc
inc
jo
decb
rcll
jne
es
cmp
cmp
out
inc
xchg
sub
in
xchg
sbb
dec
es
mov
dec
dec
or
rcll
sbb
xor
mov
stc
push
test
push
popf
inc
sbb
and
les
setae
push
mov
adc
push
push
popf
sub
cmc
mov
or
je
mov
inc
mov
sbb
mov
mov
push
sub
add
pop
mov
bound
loop
cmp
add
ret
cmp
fwait
jb
lcall
ds
add
jb
jge
jg
jge
movsb
or
loopne
mov
push
out
mov
adc
pushf
cli
cmp
daa
test
adc
cs
dec
lods
mov
jb
mov
push
ds
hlt
mov
jns
sbb
aaa
bound
les
jae
roll
xor
pushf
mov
inc
call
sbb
inc
rclb
adc
fldt
xor
jno
das
fildll
sbb
and
jno
jecxz
int3
addl
repz
loopnew
les
push
xor
subl
arpl
adc
ret
call
ja
add
adc
dec
mov
mov
inc
push
ja
or
testl
iret
out
call
xor
mov
repz
push
mov
lcall
movsl
inc
xor
lcall
aad
repz
cs
inc
sub
adc
push
hlt
ljmp
inc
xchg
test
and
jge
or
lahf
pop
inc
xor
xorl
sti
cli
dec
mov
nop
pop
lock
push
ljmp
inc
add
fcmovnu
cltd
mov
sbb
mov
sarl
out
xor
pop
mov
cltd
scas
xchg
xor
push
cmc
dec
shrl
dec
test
mov
aas
sub
sub
lds
xor
lahf
or
hlt
bnd
hlt
mov
and
add
mov
push
mov
pop
adc
cmp
mov
lea
jp
ja
movb
lock
and
test
fidivrl
xor
jecxz
insb
xor
out
pop
test
cwtl
sbb
sahf
in
cmp
cli
sub
popa
xor
inc
bound
aam
std
mov
add
aad
mov
dec
cld
icebp
jno
test
arpl
xchg
aam
xchg
mov
cmp
push
or
dec
orl
pusha
pop
outsl
fisubs
cmp
scas
pop
test
mov
ljmp
nop
adc
std
push
or
jnp
mov
or
aaa
xchg
lret
addb
fcoml
fidivl
mov
mov
test
std
in
xorl
shl
xchg
mov
jp
test
xchg
inc
add
aad
in
lods
enter
sahf
mov
repnz
fistpl
jo
pop
xor
int
xchg
inc
test
pop
test
rcrb
lea
fldl
jne
pop
or
mov
jns
lea
jg
add
out
aam
stos
sarb
xor
popf
mov
lods
sar
mov
fiadds
cmpsb
les
inc
inc
or
orb
cmp
mull
insb
fwait
sbb
mov
mov
sahf
imul
xorb
loopne
cmpsb
repz
adc
in
in
cs
mov
rolb
xor
pop
fistpll
mov
loopne
xor
sbb
dec
in
sub
jge
sub
xor
push
aaa
shll
or
lret
push
stos
fwait
sahf
sbb
imul
lcall
jb
cmp
pop
outsl
loope
mov
mov
mov
xor
pop
fidivs
fidivs
jbe
mov
mov
out
inc
mov
cmpsb
test
mov
adc
jns
jne
addb
mov
pop
popf
xchg
push
cmp
mov
mov
lret
loop,pn
fimull
loop
int
mov
scas
mov
sahf
and
sbb
push
dec
lcall
dec
mov
adc
icebp
cmp
pusha
jno
jae
mov
cli
dec
adc
repnz
push
data16
inc
sub
push
je,pt
xchg
shrl
mov
enter
push
add
adc
dec
jnp
inc
sahf
sbb
jge
fs
ljmp
test
lea
ljmp
std
mov
pop
inc
mov
mov
sub
push
and
out
jecxz
es
dec
fnstsw
mov
addl
leave
fsubs
mov
cmpsl
push
js
out
xchg
bound
clc
test
pushl
xor
fldl
lods
mov
pop
sbb
cmpsb
cld
inc
outsl
mov
gs
push
mov
bnd
inc
push
mov
pop
jae
and
lea
and
xor
inc
idivb
or
aas
pusha
mov
mov
pop
mov
out
and
jmp
ds
fsts
daa
fldenv
jo
ljmp
sahf
and
mov
loop
xchg
in
xchg
inc
or
ds
add
int
mov
cmpsb
jno
or
push
iret
pop
jl
and
pop
xchg
push
xchg
mov
imul
adc
negl
int3
sarl
xchg
and
hlt
cs
cld
mov
in
jle
mov
stos
inc
lods
xchg
scas
push
or
aam
xorl
sub
jle
loop
lock
pusha
cmp
rol
push
shrb
gs
mov
out
movsl
cmp
fucomip
hlt
testl
pusha
fldenv
outsl
pop
lret
lret
mov
and
daa
add
mov
or
jae
push
movsb
lret
inc
xchg
push
or
jae
dec
add
mov
cs
cmp
sub
bound
xchg
nop
into
mov
cmp
xor
insl
dec
jge
shr
fisubl
lods
or
ret
push
jp
movsb
inc
inc
xor
dec
in
mull
cltd
ret
movsb
sbb
stos
cltd
push
xor
pop
or
je
adc
repnz
jae
lcall
mov
adc
jbe
jmp
out
xchg
cmp
scas
enter
inc
xor
lea
add
int
push
pop
orl
xor
les
dec
aad
xorb
mov
ret
mov
pop
fildll
jbe
inc
push
mov
ja
adc
in
daa
add
sub
mov
mov
fiaddl
and
push
jno
adc
bound
mov
lret
mov
outsl
decb
jne
std
jae
std
mov
divl
adc
inc
and
mov
pop
push
push
enter
adc
xchg
dec
outsb
mov
mov
imul
or
mov
or
aad
push
int
shll
sbb
xchg
jnp
rcrb
add
popa
rcr
sbb
rcrb
leave
xor
sbb
sub
pop
pop
shll
mov
jns
arpl
inc
lods
je
jg
pop
and
ds
inc
in
movsl
sbbl
push
jecxz
out
and
test
jge
jge
mov
ret
adc
pop
cli
arpl
jne
rorb
insb
inc
out
xor
adc
push
mov
movsb
movsb
ja
mov
xchg
popf
popf
dec
mov
dec
sub
mov
xor
and
fnstenv
push
ret
push
sqrtps
push
sbb
jo
jae
iret
movsl
sub
fdivrs
rorb
sub
shrb
popa
in
arpl
in
inc
push
pusha
popa
andl
stc
pop
lods
into
mov
pop
or
cmpsl
pop
ret
push
xor
std
jle
sti
inc
lods
sti
scas
pop
xchg
jp
push
jg
cltd
or
push
sub
data16
sub
pop
pop
adc
fcmovbe
jo
lods
jg
loopne
or
out
sbb
add
call
sub
imul
arpl
pop
movsl
add
call
arpl
or
or
jns
sub
cld
loopne
ss
or
xchg
stc
mov
sub
xchg
push
inc
fadds
mov
and
xchg
jle
xlat
movsl
cmp
lods
into
pop
repnz
dec
fs
lods
add
cmc
xorl
sbb
inc
adc
xchg
mov
adc
mov
cs
xchg
ret
or
fcmovbe
aaa
lea
xchg
and
push
jne
ss
pop
mov
mov
jns
xlat
cs
nop
xchg
rcl
call
jo
jmp
and
sti
jle
loopne
jbe
jbe
pop
sbbl
aam
add
pop
int3
jg
sahf
inc
rcrb
jmp
cli
fadds
daa
cmp
pop
out
mov
mov
cmp
pop
sbb
movsb
mov
pop
lret
call
popf
adc
movsb
mov
push
or
pop
out
and
push
and
outsb
test
cld
leave
cmp
inc
out
int
jo
mov
push
aam
fdivl
jecxz
out
pop
stos
mov
mov
stos
dec
push
xchg
xor
mov
out
xchg
fisubrl
sbbl
je
xchg
ret
adc
xor
fists
add
test
pop
push
cmc
cmc
xchg
dec
xorl
inc
xor
jecxz
cmp
daa
xchg
sbb
sbb
and
xchg
xor
notb
pop
push
daa
je
imul
lcall
into
in
mov
pop
mov
add
ja
jg
je
dec
cmpsl
jge
aam
mov
xchg
cld
mov
leave
xchg
cmpsl
pop
dec
pop
jnp
inc
add
push
inc
sar
les
add
xlat
add
scas
mov
in
adc
ja
int
jbe
in
dec
inc
ljmp
mov
mov
add
mulb
fmuls
jo
imul
mov
cmpb
and
lds
push
fcomip
repz
lahf
in
sub
mov
mov
sbb
xor
imul
cltd
cltd
std
xchg
jo
lea
add
les
movsl
lock
aas
fs
jo
pusha
sbb
call
push
les
pop
aaa
fstpl
lret
dec
es
push
les
xchg
scas
fnstenv
stc
jo
lods
icebp
jb
push
adc
ror
das
pop
popf
sbb
sbb
mov
int3
dec
out
lea
and
push
mov
ds
fsts
repz
jbe
cmp
call
sub
mov
movsb
lcall
push
xchg
in
stos
inc
sbb
or
adc
or
in
cmp
xchg
fnstenv
add
negb
outsl
lcall
mov
ret
jo
lret
aas
cmp
addb
sbb
aam
cmp
xor
notb
int
mov
mov
jnp
pop
shll
stc
enter
fninit
dec
fidivs
sub
mov
jbe
mov
xor
mov
or
push
mov
insb
push
scas
jne
cltd
mov
push
aaa
adc
dec
int
sub
call
lods
xchg
cld
test
cmp
iret
call
into
clc
push
xor
pusha
cltd
add
pushf
or
or
enter
ficoms
sub
sbb
cmpsl
shl
ret
dec
ss
push
cmp
ficoml
fstps
scas
inc
mov
push
std
mov
cmp
outsl
sub
xchg
clc
add
out
cmpsb
orb
cltd
imul
mov
aas
jecxz
or
push
and
inc
js
sahf
repz
jbe
cmp
and
sbb
dec
imul
sub
test
add
ss
ljmp
shl
lods
lock
add
xchg
aaa
addr16
mov
je
jo
iret
icebp
roll
test
mov
lock
inc
lods
or
add
call
fs
sbb
lret
movsb
pop
enter
mov
mov
push
push
test
mov
push
mov
pop
sub
xlat
adc
cmp
cwtl
add
notl
mov
inc
sbb
cwtl
mov
rol
and
ss
sub
inc
les
fsubrl
mov
xlat
dec
dec
ss
and
insl
lock
shrl
outsl
xchg
mov
and
cld
push
repnz
jp
xorb
sti
leave
xchg
fstps
fsubrs
ret
mov
test
bound
xchg
inc
inc
ficoml
and
pop
sub
and
mov
pop
sub
movsl
arpl
in
int3
data16
ja
hlt
mull
ljmp
adc
xor
jnp
jo
jae
lds
push
lods
inc
mov
and
mov
sbb
cmpsl
cmp
and
les
negl
mov
cmc
loopne
std
addr16
mov
lds
pushf
dec
aas
push
mov
push
mov
or
in
add
addr16
scas
rorb
mov
xchg
scas
push
cmpb
sarb
jae
arpl
mov
repnz
arpl
mov
dec
jno
dec
jl
xchg
xor
xlat
sbb
das
pop
lahf
ficoml
adc
cli
and
push
xchg
jg
add
mov
xorl
push
in
out
or
mov
jl
testl
pop
mov
insl
push
xchg
inc
jb
xchg
cmp
xchg
adc
mov
sbb
or
dec
ret
and
cmp
or
xchg
addr16
cmp
arpl
movsl
out
ja
sbb
aad
add
aas
adc
pop
mov
aam
xchg
jl
orl
fsub
dec
js,pt
mov
leave
xchg
les
cltd
movsl
cmp
xlat
sti
xchg
aaa
adc
lret
add
push
inc
int
add
mov
test
ret
jecxz
orl
repnz
jno
aam
sub
mov
daa
arpl
sub
cltd
movsl
rolb
cmpsl
fldcw
ds
shl
sahf
and
clc
pop
mov
stos
adc
filds
fwait
cmpsl
adc
sahf
les
adc
test
mov
loop
push
adc
sub
push
push
lock
fmuls
sub
scas
loop
dec
bound
mov
rorb
sbb
sysret
pop
pop
jns
loop
ret
ret
xor
mov
shr
fistl
mov
sbb
ds
and
xchg
mov
cmc
hlt
push
cmpb
outsl
sbb
jno
in
rcrb
pop
cmpsl
cmc
scas
mov
nop
adc
sub
sub
das
push
sub
or
out
fisttpll
fidivs
pop
jl
in
push
fs
mov
add
and
mov
push
ret
shlb
jmp
sbb
cld
movsl
jl
dec
test
andb
dec
xchg
fdivrs
cmovns
mov
imul
lcall
sahf
fsin
fistpll
xchg
dec
icebp
out
push
push
call
xchg
dec
mov
sub
imul
test
xor
ret
lock
jle
dec
xor
repnz
testb
mov
pushw
ffreep
jg
dec
xchg
mov
cltd
xor
sahf
jne
dec
add
fsts
mov
lret
xlat
loopne
cltd
out
mov
cmpb
xchg
orb
dec
adc
sti
shll
sar
cld
mov
scas
lds
cld
dec
ljmp
mov
jle
sbb
mov
mov
shlb
ret
push
cltd
adc
popf
shl
push
or
in
test
and
add
test
mov
lock
mov
insb
cmp
call
outsl
mov
jae
push
xchg
mov
xchg
mov
push
or
jmp
shl
inc
lds
ret
int3
cmpsl
sbb
jmp
js
cmpsl
jb
iret
insb
mov
aaa
call
push
adc
push
popa
movl
lods
pop
adc
ret
clc
mov
pop
pop
decl
mov
dec
je
or
test
daa
mov
dec
orl
outsb
mov
cmp
sbb
pop
sub
dec
xchg
insl
dec
or
xor
mov
imul
mov
push
jmp
xchg
mul
aad
or
dec
clc
int3
gs
in
mov
subl
fdivl
add
mov
dec
test
fldenv
mov
mov
mov
jae
xor
mov
or
fwait
or
loopne,pt
cmp
fucomip
insb
insb
xchg
ret
inc
jb
mov
and
push
push
jge
clc
inc
mov
cmp
jne
and
jecxz
fsubl
mov
pop
ss
dec
mov
gs
pop
pop
jge
in
outsb
pop
js
test
rcrb
pop
jnp
je
xlat
dec
test
fdivr
add
mov
outsl
loopne
sub
decl
jbe
pop
stc
stos
pop
fcmovnu
xchg
adc
shlb
push
xchg
movsl
cmp
lods
icebp
aaa
jmp
adc
ja
pushf
faddl
adc
loope
mov
out
aas
pop
decb
sub
jl
lcall
mov
loope
xor
addr16
and
std
xlat
inc
fst
xchg
inc
jl
adc
dec
insb
adc
jmp
jmp
push
pinsrw
stos
mov
push
mov
cmpsl
inc
js
dec
enter
aaa
xlat
cmp
xchg
pop
sub
int3
fucom
cmpb
xchg
stc
std
popa
int3
in
add
in
adc
test
scas
xor
inc
fmul
xchg
lcall
adc
adc
push
mov
addb
in
stc
stos
or
push
add
xor
pop
mov
cs
pop
pop
sub
pop
jo
fidivl
mov
out
sahf
popa
mov
lds
daa
add
jge
and
movsb
lret
sbb
jo
outsb
add
jg
push
inc
push
push
mov
aad
ror
and
mov
push
mov
insl
mov
or
cld
push
out
push
mov
call
mov
adc
and
fwait
pop
in
out
sti
iret
mov
xchg
adc
and
sbb
repnz
stos
fld
jne
leave
sti
data16
pop
dec
imul
xor
rcll
push
scas
mov
xchg
je
lea
adc
arpl
push
imulb
jmp
lcall
jmp
std
sbb
psraw
scas
in
popa
xchg
xchg
pop
lods
sbb
fstpl
pop
addr16
inc
push
mov
cmp
fcompl
add
jg
inc
adcb
cmpsl
shlb
pop
sbb
pop
xorb
loopne
cltd
adc
cld
add
jl
jnp
fs
in
in
add
mov
lods
mov
movsl
and
jecxz
jno
movsl
inc
stos
push
int
nop
btr
daa
ret
les
xchg
popf
pop
adc
fdivrp
or
in
or
xor
ds
adc
outsl
jmp
outsb
loope
and
xorl
push
or
negl
test
inc
push
cmp
jl
sub
dec
mov
cwtl
xor
adc
push
leave
push
lods
loope
add
cwtl
pushl
add
int3
ss
bound
push
iret
or
fisubrs
jb
insl
in
fldl
or
dec
or
in
shll
test
inc
shl
push
sahf
mov
push
into
cmp
imul
push
stc
aam
in
pushf
pop
mov
sub
mov
inc
sbb
push
dec
pop
cwtl
pushf
repz
int3
nop
out
push
fildll
into
push
push
mov
scas
out
jl
pop
insl
clc
rcl
and
fwait
mov
fcomps
mov
sbb
pop
insb
popf
cmpsl
cmp
add
sbb
add
push
lock
pop
lods
sub
adcb
dec
mov
jns
int
lods
jae
xchg
in
fldenv
push
push
jne
inc
xor
test
lock
insb
adcb
roll
insb
pop
aaa
cmpsl
stos
jae
pop
or
jo
xchg
cltd
js
popa
xchg
rol
xor
mov
sbb
mov
inc
adc
repz
test
pop
aad
cmc
fdivrp
inc
add
dec
es
inc
dec
xchg
dec
dec
jb
stos
pop
cmp
or
addr16
fistpll
cmp
cmp
xchg
stc
mov
xor
in
mov
pop
push
xor
rcrb
push
xchg
jbe
sbb
add
sbb
push
xchg
cs
add
sahf
cmp
adc
xchg
ja
and
lret
fildll
mov
jmp
aaa
dec
push
mov
cmpsl
and
stc
popa
addl
cmp
push
adc
sarl
xchg
pop
lock
inc
dec
sub
loope
fidivrs
mov
pop
lods
xchg
mov
pop
sub
testb
cmp
adc
xchg
xchg
fs
int3
xchg
fidivs
iret
xor
lea
cmc
inc
ret
jo
fwait
sbb
mov
xchg
mov
mov
push
jb
add
insb
mov
xchg
jge
cmp
xchg
sub
cmpsb
or
popf
das
aaa
sbb
xchg
sub
mov
add
popf
fxtract
jg
jns
xor
in
mov
lods
sbbl
jecxz
push
mov
js
add
fwait
dec
stc
cmc
lock
xor
xchg
pusha
into
cmpsb
adc
dec
mov
dec
pop
dec
aas
cmp
or
arpl
clc
scas
hlt
imul
aad
inc
lret
gs
ret
pusha
mov
pop
mov
push
mov
mov
push
std
in
repz
iret
es
fmull
push
inc
cmp
dec
movsb
mov
push
adc
jnp
rol
adc
add
xchg
or
aad
fs
leave
loop
popf
pop
loopne
bound
mov
cwtl
movsb
and
pop
test
push
xor
loope
mov
aaa
flds
adc
fstpt
lock
pop
into
and
hlt
jge
add
es
xchg
or
std
rcrl
cmp
mov
daa
xor
out
test
fscale
into
popa
dec
inc
xor
push
out
fildl
jle
inc
aad
orl
stc
repnz
xchg
insl
pusha
leave
jp
mov
test
add
push
aam
dec
sbbb
sarb
xor
jmp
sub
int
mov
lods
xor
mov
sub
fcmovu
and
add
cs
jnp
pop
aas
xor
jge
out
mov
cmp
jne
inc
and
inc
xchg
lcall
push
jmp
repnz
dec
pop
test
cmpsb
cmovno
lods
xchg
mov
xorb
sbb
cmc
mov
adc
push
mov
cmp
adc
inc
inc
jecxz
sub
pop
jo
iret
cmpsl
enter
xor
xor
fcomip
sub
scas
loopne
inc
mov
addr16
pop
lea
inc
push
rcrl
