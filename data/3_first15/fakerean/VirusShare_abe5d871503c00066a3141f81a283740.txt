sbb
add
mov
sbb
imul
push
lea
jle
push
xor
dec
xor
popa
sbbb
push
add
std
mov
add
inc
test
pop
push
pop
jmp
adc
and
fs
cld
hlt
sub
ja
shlb
cmp
enter
pop
aad
loope
aas
pop
mov
shl
cmp
cwtl
loop
or
jge
loopne
adc
xor
dec
cmpsl
cmp
fnstenv
addr16
in
adc
stos
xchg
addl
ret
out
loope,pn
int
and
adc
ret
shl
dec
loopne
out
jge
loope
out
dec
xlat
sbb
lret
pop
std
mul
push
xchg
jmp
test
push
jo
je
inc
insb
test
xchg
fnsave
scas
mov
nop
shr
test
mov
loop
pop
sahf
jp
add
mov
inc
cltd
repz
jae
pop
mov
push
rolb
mull
mov
or
rorb
cmp
out
stc
xor
daa
jg
jecxz
mov
push
xor
push
push
push
pop
jno
outsb
push
mov
sub
and
jle
pop
sbbb
jg
aaa
push
jae
test
xlat
lcall
mov
iret
xchg
push
sarb
scas
pop
insl
clc
loopne
push
out
dec
or
push
xchg
scas
cmp
pop
inc
lcall
aaa
jae
jp
imul
xlat
cmp
mov
idivl
add
rorb
xchg
mov
subl
leave
and
pop
sbb
and
mov
test
jo
jle
add
pop
sbb
cmp
sub
xor
lds
cmp
cmp
cltd
cld
ds
add
adc
andb
pop
jg
sbb
push
rcrl
dec
pop
sub
xchg
fwait
cmp
cltd
test
cmpsl
and
sahf
xor
cwtl
imul
pop
inc
leave
dec
cmp
push
lret
pop
xchg
repz
in
jp
sub
cmpsb
jns
ret
inc
icebp
jg
jp
mov
loope
lds
sbb
dec
rorl
jmp
mov
adc
jge
pop
mov
mov
fisubl
test
jge
das
loop
pop
lds
aaa
pop
jnp
mull
sbb
gs
repnz
cmp
lret
lea
or
sbb
inc
add
lret
and
pop
add
cmp
fisttps
cltd
jno
sbb
mov
xchg
pop
sbb
push
es
fmuls
std
mov
push
rcrl
add
xor
xchg
cmp
rol
mov
or
jno
inc
xor
sbb
adc
push
sub
xor
out
or
ror
push
rolb
mov
ljmp
mov
nop
push
rorl
ficoml
and
jge
stos
push
dec
ds
mov
testb
mov
sub
mov
pop
push
and
call
xchg
inc
test
nop
lcall
stos
xor
fs
or
mov
and
mov
out
push
lock
pop
lock
pop
ljmp
das
fwait
pop
aas
pop
mov
ja
push
lods
scas
and
repz
jno
xor
xchg
push
aas
inc
mov
lret
push
xchg
cmp
or
mov
insb
std
pop
in
adc
or
push
jle
sub
popa
pop
cmp
bound
mov
rclb
pusha
push
ds
aas
adc
sti
cmpb
test
dec
sub
imul
sub
aaa
xorb
addr16
mov
hlt
aas
or
sbb
iret
pop
insb
pop
mov
stos
in
mov
adc
cltd
std
mov
and
mov
nop
pop
inc
out
mov
or
push
pop
leave
jns
stos
mov
notb
mov
mov
test
mov
lods
dec
and
push
test
insb
jnp
push
shll
dec
dec
jne
sbb
test
repz
xor
jge
and
mov
popa
inc
jmp
mov
in
aam
es
pop
mov
and
add
addl
mov
mov
xor
cld
daa
in
inc
into
dec
mov
les
mov
xchg
notb
adc
out
inc
rcll
mov
add
mov
cmp
test
cmp
imul
xor
call
mov
divb
pop
cmpsl
fbstp
and
pop
ret
popl
dec
outsl
inc
inc
lods
adc
push
scas
sub
or
ret
push
cmpsb
pslld
sbb
pop
cmc
scas
cs
sbb
mov
aas
cmp
aad
scas
mov
addr16
lods
push
lret
mov
jp
jno
pop
ficoms
pop
test
movsb
dec
das
jbe
add
mov
mov
pop
and
mov
les
aad
imul
fcmovbe
cld
or
jo
add
mov
xlat
filds
jbe
dec
pop
js
fwait
mov
imul
imul
push
cmpsl
xchg
push
pop
jmp
add
cmp
xor
xor
lods
imul
lahf
jg
movsl
xor
xchg
push
sti
or
mov
mov
inc
sbb
addr16
int
cmp
andb
inc
or
pop
cs
loopne
and
insl
pop
mov
cmp
mov
jnp
adc
jge
daa
or
cmp
andl
inc
cs
xlat
enter
xchg
xchg
dec
dec
xchg
scas
ds
pop
movsl
inc
rcrb
cwtl
push
rcll
pop
popf
test
fldl
mov
testl
add
and
pop
xchg
aam
pop
ss
ret
addr16
jnp
lret
add
and
es
lea
mov
inc
dec
pop
pop
xor
mov
sbb
cmc
push
fsubrs
fdivs
repnz
push
jg
pop
sbb
sub
mov
lods
shlb
imul
out
xchg
add
mov
cmpsl
lds
and
pop
add
xor
out
jno
fisubs
adcl
repz
jl
or
dec
fstl
dec
lea
mov
pop
cmc
sub
inc
mov
enter
sub
or
push
lret
xchg
testl
push
mov
xor
das
loopne
pcmpgtb
xchg
jns
lods
mov
add
fidivs
mov
lods
inc
lahf
inc
mov
inc
dec
orb
lcall
add
jl
xor
cmc
ja
mov
inc
push
int3
jbe
movsb
xchg
loope
lock
ljmp
out
mov
aam
push
or
leave
mov
xchg
lcall
cwtl
in
xchg
dec
scas
test
clc
xchg
into
lods
sub
hlt
inc
pop
pop
dec
outsl
inc
in
dec
add
or
lea
push
dec
or
out
or
addr16
pop
rol
cmc
dec
pop
pusha
mov
pop
lret
repnz
sahf
xchg
pop
push
stos
movb
mov
lods
pop
mov
dec
dec
shl
cmp
xor
rcrb
jmp
dec
or
pop
mov
dec
loopne
jecxz
fcoms
mov
rolb
fpatan
ss
dec
fisubrs
data16
sbb
aad
sub
jg
dec
ljmp
orps
dec
shr
or
stc
inc
ret
sahf
out
dec
push
or
pusha
fcompl
lret
rcrb
repz
movsb
mov
or
pop
ret
pop
add
shl
sbb
call
mov
in
outsl
hlt
ljmp
daa
aas
daa
das
push
xor
xchg
and
pop
imul
jg
ljmp
test
push
decl
cs
dec
xor
test
push
dec
inc
cmp
push
jno
ss
adcb
in
mov
shlb
pop
int
in
xchg
jnp
movsl
jg
cli
inc
sahf
pushf
aaa
pop
sbb
inc
or
dec
dec
inc
dec
or
mov
and
xchg
sub
push
ja
out
push
adc
pop
xchg
lcall
jne
or
cmp
mov
jp
jb
pop
hlt
roll
jno
nop
std
lds
sti
mov
out
cmc
mov
sbb
xor
mov
add
jo
fsts
lods
push
dec
push
sbb
inc
insb
jecxz
jae
push
cmpsb
sub
scas
xchg
jo
jecxz
hlt
test
fstpt
punpckhwd
add
rcr
sti
cmp
mov
inc
add
sub
pop
lea
hlt
add
insb
daa
dec
push
adc
sbb
mov
aaa
push
imul
jnp
loope
je
les
es
pushf
adcb
mov
push
sti
fdiv
test
loop
jle
fs
mov
jp
xchg
jb
dec
dec
adc
ljmp
add
xchg
lea
adc
inc
cmpsb
xor
fcomip
ret
xor
popf
xor
push
sub
push
xchg
ja
mov
sti
pop
popf
test
mov
imul
sahf
into
xchg
dec
addr16
fistps
jb
rcrl
cs
rcrl
cmp
sarb
adc
mov
sarb
pop
mov
fucomip
sahf
sub
jne
fildl
je
jb
neg
mov
js
sub
imul
repnz
or
add
fwait
rep
cli
xchg
arpl
sbbb
jge
sbb
mov
inc
and
arpl
mov
sbb
or
cmpsb
mov
stos
push
inc
mov
cli
daa
les
mov
mov
inc
add
iret
xor
lds
push
test
pusha
sub
mov
shlb
scas
and
jg
jmp
mov
movsl
gs
mov
and
jo
js
or
fstpt
icebp
xchg
lret
stos
stos
mov
aad
and
jle
pushf
dec
das
push
lds
outsl
ja
add
adc
or
outsb
std
xor
sbb
fistpll
movsb
orb
dec
mov
xchg
add
jecxz
push
mov
roll
adc
movsb
hlt
inc
inc
sub
xchg
push
xor
arpl
rcr
or
fwait
les
outsl
lret
sbb
xchg
xorl
stos
aam
dec
clc
push
add
repnz
mov
sbb
mov
jmp
jl
jbe
popl
std
adc
sbb
and
scas
dec
in
jmp
mov
idivb
add
xor
push
add
lods
hlt
add
aam
fildl
inc
imul
cmpsb
lea
cmpsl
xchg
mov
aam
adc
lea
in
xor
and
mov
pop
lret
push
vunpckhps
jge
push
push
stos
and
inc
mov
push
scas
sbb
inc
pop
sbb
shlb
sub
and
xchg
adc
leave
stos
push
sbb
rorb
hlt
and
lahf
or
mov
jne
push
les
cmp
mov
js
pop
aaa
imull
or
xchg
aaa
jp
push
adcl
jae
or
jl
or
dec
mov
es
imul
out
sbb
or
mov
hlt
cmpsl
jnp
push
push
push
call
pop
repnz
push
loope
sahf
pop
pop
xchg
xlat
mov
mull
sub
jle
testb
or
sbb
leave
sbb
fiadds
mov
dec
fbstp
clc
and
sub
xchg
in
stos
sbb
mov
movsl
mov
jg
cmp
fs
cmc
adc
pop
xchg
sti
div
or
rol
inc
mov
out
ja
mov
sub
sbb
sahf
pop
push
call
cmpl
or
add
int3
adc
and
gs
xchg
fldl
cmpsb
loope
ds
ret
test
icebp
jae
mov
insb
ret
jl
std
in
pop
pop
pcmpgtb
jb
mov
es
push
lcall
sbb
push
mov
repnz
add
adc
or
xor
or
jle
fdivs
xchg
and
pop
and
add
mov
or
neg
fadds
mov
clc
pop
sahf
fstp
lods
sub
xchg
ret
jg
inc
cli
addr16
shl
repnz
shrl
inc
inc
xchg
ret
cmp
outsb
pop
call
sbb
in
mov
and
jg
stos
jp
fwait
movsb
andb
xchg
sti
and
arpl
xor
mov
xor
cmp
movsb
rolb
inc
repz
cmc
stos
js
and
je
mov
cmp
es
jg
jle
gs
cltd
les
or
dec
pop
paddd
xchg
inc
fnsave
cmp
popf
jmp
mov
lock
and
dec
arpl
repnz
imul
sub
fwait
add
cwtl
dec
daa
sbb
sbb
daa
rcl
or
popf
icebp
aas
mov
sub
push
adc
jns
call
push
inc
cmp
mov
les
cli
sub
data16
jae
clc
and
push
iret
push
and
cmpsl
mov
aas
pop
incl
push
std
je
cs
cmp
test
mov
aaa
sub
lock
xorb
pop
sbb
adc
std
jmp
lret
sbb
cmp
cmp
or
in
jae
addr16
popf
jp
mov
js
or
sbb
xor
push
lods
imul
inc
and
ds
push
xchg
inc
adc
enter
fstp
mov
mov
popf
xor
sti
jbe
test
push
inc
loope
push
popa
cld
pop
ja
mov
insl
push
or
jb
cli
mov
mov
shl
push
mov
aas
in
stos
call
lret
inc
inc
pushf
xchg
mov
jmp
test
es
popa
lds
rol
mov
aas
cmp
fcompl
inc
sub
gs
cmp
cld
pop
stc
mov
lock
call
lea
sahf
add
dec
mov
imul
mov
cmp
insl
xchg
loope
jns
out
cmp
add
sub
adc
push
or
mov
inc
bound
push
pop
pop
fstpl
mov
adc
xchg
inc
cmp
ficompl
pop
and
bound
add
push
pop
jno
enter
aam
jb
cwtl
sub
xor
dec
hlt
jne
ss
cs
and
fidivrl
repnz
mov
jb
xorl
dec
cmc
sbb
jp
lds
insl
popa
shrl
scas
dec
pop
jbe
push
add
mov
scas
iret
in
adc
adc
mov
xor
mov
test
ja
mov
jl
or
sarb
dec
cli
cmp
loope
pushf
mov
fnstsw
jmp
adc
stos
push
loopne
pop
inc
aam
adc
dec
or
lods
int
cli
mov
ljmp
je
cli
movsb
jno
xor
fsubrs
mov
sbb
adc
imul
xchg
xor
sarl
jle
imul
xchg
sub
sub
lcall
aaa
lret
jg
loopne
ret
jmp
sti
lahf
mov
mov
or
jo
sub
movsl
sbb
pop
inc
push
das
xor
shlb
pushf
lds
ffree
imul
andl
and
push
xor
mov
xchg
and
inc
push
push
push
popa
fs
ds
inc
ret
ret
out
cltd
fs
test
sbb
mov
push
arpl
outsb
xor
mov
jmp
xor
pop
sub
movsl
inc
mov
test
jo
mov
mov
mov
std
inc
shll
repnz
dec
int3
pop
scas
cmpsl
or
cs
rcr
pop
inc
inc
in
imul
imul
mov
daa
cwtl
and
mov
jmp
lock
adc
push
cmpsl
sbb
pop
les
mov
into
bound
popa
and
fstpl
lds
push
adc
ficoms
scas
stos
xor
mov
mov
cld
lret
bound
push
js
inc
cli
cmp
inc
mov
fildl
mov
and
pusha
pop
pop
xlat
iret
xor
add
stc
mov
push
fsubrs
data16
xchg
xor
popf
fwait
cli
sub
ds
std
sub
xor
inc
adc
mov
scas
push
xchg
hlt
lds
jg
lds
out
pop
or
pushf
or
push
add
mov
nop
sub
pop
scas
mov
pop
push
test
movsl
push
mov
aas
inc
pop
dec
scas
mov
test
insl
push
shll
lock
adc
into
std
lods
mov
fiadds
icebp
dec
das
sub
or
xchg
xor
fsts
daa
ret
sub
add
push
lahf
aaa
cmp
add
adc
push
adc
sahf
aas
lock
repz
mov
sbb
pop
ret
pop
mov
js
lods
xchg
xor
ficomps
dec
leave
scas
pop
outsl
mov
bound
shll
and
ja
jo
loopne
enter
int3
sub
mov
push
flds
or
aas
enter
cmpsl
in
add
aaa
stc
sbb
ss
frstor
lock
js
sub
or
or
in
pop
lods
dec
and
inc
xchg
rol
aad
cmc
add
scas
add
repz
in
insl
mov
ret
push
lds
pop
loopne
test
test
inc
rcl
inc
add
cmp
xchg
cmp
in
adc
je
or
mov
or
mov
sub
insb
cltd
xlat
bound
cmpsl
cs
aad
fisttpl
imul
or
icebp
addl
mov
fsubrl
pop
push
xchg
fstpl
test
lds
push
dec
repz
gs
xchg
sbb
insl
daa
jne
loopne
cmp
mov
xchg
dec
popf
pop
jbe
testl
xchg
and
xchg
cmp
outsb
mov
push
mov
loopne
jl,pt
sub
imul
mov
cmpsl
pop
arpl
dec
jbe
mov
jns
inc
out
xchg
fxtract
mov
fstpl
sub
adcl
leave
pop
mov
and
fimuls
pop
outsb
jp
jge
call
mov
xor
adc
sub
in
push
or
out
push
je
xchg
lds
cld
pop
xchg
mov
pop
dec
dec
mov
outsl
filds
out
push
andb
or
mov
sbb
cmp
sahf
in
lcall
jp
cld
sahf
divl
jle
cmp
outsl
mov
adc
cmp
movsb
in
repz
andb
jecxz
ror
push
jb
ljmp
addr16
loopne
ss
fisubrl
mov
jmp
cmp
add
movsb
ret
in
cmp
mov
pushf
and
test
call
or
movsb
mov
cmp
jmp
add
jg
into
iret
xchg
xor
push
jbe
out
jo
mov
lret
sbbl
cmp
push
pop
insl
inc
sbb
jbe
mov
pop
cs
icebp
mov
hlt
fnsave
adc
aad
nop
f2xm1
arpl
xchg
stc
lret
call
jge
sub
in
repnz
gs
popa
push
shlb
test
dec
sbb
mov
ret
mov
js
test
int3
xor
shl
xlat
and
mov
test
mov
out
mov
push
movsb
mov
cmp
pop
test
mov
jle
int
in
xor
in
push
pop
cmp
ret
mov
sub
stos
xchg
lret
cs
cmpsl
ja
adc
mov
dec
xor
cmpsb
imul
or
sub
push
mov
dec
nop
sub
scas
jns
arpl
add
cli
lock
pop
dec
xor
pop
cmp
out
enter
add
add
jo
sarl
mov
pop
imull
and
lock
or
jne
jmp
sbb
push
pop
adc
jae
jle
popa
sbb
xchg
xor
xor
xchg
mov
lock
rcrb
or
sbb
push
inc
add
nop
sarl
xchg
add
jno
xor
dec
scas
ss
and
adc
and
pop
loopne
xor
jge
or
imul
out
dec
stos
lods
popf
push
shlb
pmulhuw
mov
mov
dec
mov
popf
imul
out
in
dec
cs
insb
dec
xor
push
mov
xchg
nop
test
imul
xchg
jle
nop
cmpsb
cli
sbb
mov
cs
fisttpl
loopne
pop
xor
mov
dec
in
mov
repz
fcoms
test
gs
ja
mov
cmpsl
lret
leave
int3
fwait
imul
pop
mov
out
cld
push
jle
into
fcoml
ret
cmp
mov
sub
lods
xchg
mov
cmc
inc
adc
out
leave
adc
lock
fiaddl
mov
and
das
arpl
and
loop
xor
cmp
adc
inc
sahf
add
cmp
xor
and
aaa
add
adc
cmp
sub
inc
xchg
cli
push
imul
xor
xor
add
fisttpl
shlb
inc
popf
xor
mov
gs
inc
lock
sub
dec
iret
cld
clc
pop
fs
js
out
mov
jle
adc
jne
mov
pop
in
push
jns
loop
shrl
pop
mov
pop
clc
adc
sub
xchg
stos
sahf
xchg
mov
push
xor
das
scas
out
and
and
mov
loopne
jg
shlb
cmp
pop
pop
adc
lret
push
pop
movsl
in
orl
push
es
in
sub
or
sub
mov
imul
lods
mov
inc
test
dec
mov
pusha
sub
lret
pop
or
out
arpl
dec
inc
add
ja
js
clc
mov
shrb
into
inc
dec
xor
xor
dec
lods
es
pop
mov
jno
fcompl
shrl
imul
fnstsw
jno
xchg
pop
xor
cmp
mov
leave
je
xchg
cmp
pop
mov
jecxz
pop
test
jmp
hlt
dec
pushf
inc
push
rcll
add
lea
insb
inc
jb
xor
and
lcall
int3
hlt
mov
mov
sahf
pop
subl
lds
mov
mov
out
push
sub
aad
sub
xor
les
es
xchg
fstl
sub
mov
stos
enter
ret
bound
cmp
push
dec
cmp
inc
aas
mov
rcr
lcall
leave
mov
sbbb
inc
sbb
xor
sbb
leave
add
lods
sbb
xor
add
xchg
test
std
push
xchg
stc
sub
iret
jp
push
sbb
sahf
leave
cmp
dec
into
add
or
nop
jno
fs
loop
aad
mov
outsl
fwait
sub
dec
out
adc
js
sub
xor
ss
gs
scas
xor
jns
pop
mov
fisttpll
in
ljmp
dec
cli
pop
test
pop
sbb
cltd
cwtl
push
mov
xchg
cmp
movsb
mov
jg
cwtl
xor
pop
iret
incl
out
mov
loopne
mov
and
cltd
xchg
inc
arpl
jge
dec
push
cli
pop
gs
test
sbbl
xchg
bound
jmp
mov
jg
xchg
jg
xchg
aam
rcrb
xchg
mov
xchg
imul
mov
push
pop
in
sbb
nop
cli
ret
mov
pop
fidivrs
hlt
pop
add
push
mov
push
stos
xor
mov
mov
popf
fmuls
daa
loop
hlt
subb
shr
int
idiv
sbb
stc
aas
mov
dec
xor
xor
popa
aam
and
roll
lahf
fists
push
jbe
setle
sbb
mov
push
jecxz
push
add
aam
mov
mov
xchg
pop
jae
movsb
push
mov
add
stos
mov
call
jo
mov
push
lahf
pushf
outsb
movsb
inc
movsl
mov
shll
mov
jne
es
fidivs
or
or
jmp
adc
rol
cmpsb
lea
sti
or
int
lahf
and
inc
xorb
lock
out
mov
push
cmp
jns
mov
push
aad
stc
aad
je
and
sbb
or
push
add
rclb
add
dec
push
jecxz
jmp
repnz
scas
xchg
out
xor
jp
mov
xlat
jo
mov
sub
adc
out
pop
loopne
leave
ds
dec
sbb
inc
fcoml
mov
das
cmp
movsb
enter
mov
dec
pusha
xchg
pop
nop
icebp
rorl
lret
mov
dec
push
nop
addr16
hlt
jle
test
dec
or
mov
roll
sub
push
dec
push
jle
call
aas
fstpt
inc
adc
push
sub
imul
shll
push
into
and
and
scas
je
or
test
daa
icebp
and
ljmp
cld
lret
dec
mov
lcall
sub
xchg
xchg
mov
and
loop
add
mov
es
jge
mov
mov
inc
mov
and
sub
cltd
es
jmp
pop
enter
stos
pop
mov
mov
mov
insl
mov
fstl
inc
and
pop
out
and
repnz
out
cli
imul
inc
adc
cmp
gs
push
enter
dec
jp
cwtl
xchg
add
fwait
xchg
adc
sub
sbb
lret
mov
cld
in
ret
enter
pusha
fidivrl
in
push
xchg
jg
xor
dec
or
lock
rol
mov
ds
pusha
fs
xchg
ror
gs
pusha
mov
xchg
mov
xor
xor
jb
bound
icebp
jo
mov
loopne
fisubrs
daa
mov
bound
dec
das
sub
mov
loopne
pop
sbb
in
test
sti
add
rolb
and
movsl
push
iret
push
push
in
push
bound
cmp
sbb
dec
pop
mov
fcomp
mov
or
jl
sbb
out
addl
dec
xor
dec
into
es
stc
or
in
imul
rcrl
jmp
fwait
jno
addl
imul
out
lock
mov
ljmp
adc
jge
mov
xor
cmpsl
mov
mov
jns
sub
nop
movsl
or
inc
fmuls
pop
pop
push
dec
inc
out
aad
mov
outsl
aaa
pop
mov
or
cmp
sub
pushf
outsb
fisubl
cmpsb
mov
inc
cmp
cmp
and
cmpsb
jno
fninit
insl
outsl
shl
test
push
xchg
je
xchg
jle
inc
mov
pop
imulb
rol
jno
lds
cmp
xor
mov
add
dec
pushf
ds
cmp
push
loope
es
call
lea
or
int
test
insb
sbbl
out
cmp
jmp
adcl
mov
cwtl
out
sbb
stos
push
stos
adc
and
scas
push
in
or
sbb
sbb
sub
dec
adc
cmp
push
imul
lret
das
lods
fidivrs
jp
xchg
pop
cwtl
cmp
outsb
dec
dec
jmp
lret
hlt
or
cli
lock
xchg
mov
iret
cmp
ret
mov
sti
xchg
lock
inc
test
in
xchg
push
inc
inc
and
adcl
and
addr16
jo
cmp
enter
js
test
push
jle
adc
xchg
in
outsl
repz
jecxz
cmpsl
rclb
ss
cli
aaa
xor
and
enter
and
outsl
movsl
imul
sbb
setg
sub
bsf
stos
mov
push
sbb
push
or
mov
mov
enter
std
push
jle
xor
ret
lret
into
mov
movsb
inc
imul
adc
cmp
jne
sub
and
dec
inc
push
dec
sub
pop
add
push
dec
mov
sub
fsubr
aas
gs
xchg
inc
ds
aas
mov
leave
aas
out
test
push
inc
xor
dec
jo
pushw
sbb
das
adcl
movsb
rcr
ljmp
push
push
gs
jp
xchg
clc
xchg
out
mov
dec
mov
fisubrl
xlat
push
dec
leave
push
or
pop
into
aad
sub
outsb
daa
xchg
jl
fcomip
ret
fldcw
fldenv
pop
xor
xlat
fisttpll
push
sbb
out
js
jecxz
xchg
and
xchg
cli
xchg
dec
xchg
jecxz
aad
iret
mov
movsb
xchg
rolb
cmc
add
and
xchg
jge
xchg
out
push
addr16
pop
scas
fs
adc
and
inc
mov
sbb
ret
dec
arpl
fcomps
in
fildl
dec
inc
cmpsb
icebp
or
lods
sbb
mov
jbe
arpl
insb
sbb
inc
jne
inc
cmpsl
dec
int
cwtl
adc
pushf
jp
mov
mov
cmpsl
adc
xchg
gs
addr16
repnz
fwait
adc
mov
mov
call
ljmp
mov
xchg
mov
rolb
pop
xor
cld
pop
fisubrs
or
xchg
mov
adc
jo
xchg
sbb
arpl
sahf
lret
jmp
mov
inc
sub
jno
shl
xor
frstor
jg
sbb
jbe
xor
imul
add
out
je
push
push
and
das
scas
rcl
loope
push
popf
fsub
xchg
call
movsl
cmpsb
sub
test
or
rorb
sub
sbb
shlb
mulb
out
arpl
dec
scas
ss
enter
cwtl
add
mov
xchg
cmp
bound
adc
jg
js
faddl
inc
xchg
ret
pusha
ljmp
jnp
xor
add
mov
mov
mov
out
ss
les
push
jo
test
mov
push
jmp
pop
add
rol
xchg
add
fldenv
xchg
jmp
ss
js
jge
dec
xchg
cmp
push
clc
inc
lcall
lds
mov
fdivrs
sbb
imul
out
packssdw
js
fistpll
jp
push
or
out
lahf
aam
dec
mov
lods
popa
inc
inc
rolb
mov
aad
mov
jl
negl
push
jae
xchg
rorb
rol
pop
in
roll
adc
cmp
icebp
test
xchg
add
jl
and
movsb
mov
xlat
mov
xor
shr
adc
repnz
scas
mov
clc
push
loop
sbb
jne
xchg
xchg
aam
out
jbe
cltd
insb
mov
imul
mov
inc
shrb
mov
iret
pop
fucomip
xor
into
pop
cmpsb
sub
xor
cld
or
sahf
adc
dec
aaa
mov
or
imul
scas
outsb
adc
movsl
dec
sub
fisttps
rcr
flds
mov
fldl
sub
out
andl
jg
mov
pop
mov
loopne
sbb
ljmp
pop
dec
or
dec
cmp
jp
mov
cmp
cmp
mov
mov
jns
cmc
ljmp
mov
sub
in
mov
or
xchg
cli
jle
nop
hlt
mov
addr16
cltd
ret
out
pop
orb
mov
call
cmpsl
cmpl
and
cmp
adc
push
xchg
daa
dec
jns
test
mov
add
sub
ret
jl
in
dec
push
adc
shll
xor
fdivs
push
in
rcrl
sub
mov
imul
in
mov
push
sti
test
mov
lahf
or
ret
cs
mov
or
sbb
stc
push
adc
or
leave
insl
dec
lock
pop
notl
xor
mov
out
push
cmpsl
loope
sbb
mov
mov
xor
cmp
cmpsb
aas
int3
push
jg
test
jb
test
rorb
and
jp
xchg
inc
mov
xlat
sub
call
sub
cmp
or
test
push
jb
stc
push
xchg
jecxz
pop
mov
enter
push
mov
cmpsb
pop
stc
mov
dec
and
arpl
jge
in
sub
arpl
push
mov
add
bound
or
sbbl
dec
out
cwtl
and
xchg
aad
push
enter
clc
push
in
cmp
dec
adc
repnz
iret
jge
add
pop
pop
inc
push
test
pop
sub
fxch
jb
or
inc
lahf
sti
jecxz
xor
insb
push
stos
fimull
fildll
cmp
lock
push
scas
push
jnp
adc
call
mov
jge
push
stos
pop
inc
xor
loope
sub
iret
ja
mov
fcoml
jmp
fisttps
and
cltd
cmpsl
and
xlat
sub
jmp
dec
push
pop
inc
jo
lcall
xchg
xchg
daa
clc
outsl
popa
jo
cmpsl
mov
cmpsb
stc
sbb
lahf
push
test
push
lea
outsl
dec
or
jmp
fwait
rorb
iret
jno
push
addb
xor
fldt
mov
loope
stos
jns
cmp
or
das
aas
sbb
push
and
adc
aas
test
popa
insb
mov
and
mov
fbld
mov
jns
sbb
fsubs
pop
fnstcw
aaa
mov
lahf
popf
jmp
and
cmp
dec
in
jo
mov
push
jb
and
repz
mov
sarb
jbe
xor
into
je
add
ds
repnz
lds
ror
jmp
sub
sbb
xchg
xor
mov
push
inc
mov
xchg
mov
xor
add
xor
mov
lock
cmc
lahf
dec
mov
mov
xor
js
orl
xor
out
aad
mov
fnsave
lahf
xchg
out
movb
sub
push
int3
icebp
push
pop
jnp
xchg
outsl
gs
mov
jbe
cmpsl
add
mov
mov
mov
sbb
lods
lea
mov
dec
movsb
xchg
cli
imul
mov
das
mov
and
ret
adc
pushf
mov
and
adc
xor
mov
jb
outsb
add
repnz
xor
jmp
loope
ja
jb
fbstp
sbb
push
movsl
jle
mov
pop
in
push
add
adc
test
int3
shrl
out
in
dec
jns
and
int3
fistpll
dec
or
adc
paddusb
push
data16
mov
cwtl
or
mov
mov
clc
insl
xlat
ljmp
clc
cmp
stos
ret
pop
jne
popa
mov
push
adc
add
dec
int
push
jns
mov
data16
es
push
add
loope
xchg
dec
shl
xchg
int
xor
pop
mov
data16
sub
xor
add
mov
or
gs
sub
out
pop
push
movsl
xchg
in
popa
inc
add
xchg
call
stos
shr
or
lea
jnp
lods
cld
inc
nop
fsts
mov
fnstsw
cld
in
loop
pop
lods
push
cmp
xlat
xchg
negl
mov
mov
rcrl
ss
mov
or
add
push
jne
nop
fs
out
mov
hlt
and
push
mov
test
or
sub
xchg
dec
add
fistl
sub
jecxz
xor
pop
in
cmpsl
outsl
lcall
loope
adc
dec
pop
push
mov
or
pop
cld
inc
inc
pusha
out
in
stos
fs
lods
mov
cmp
cmp
decl
frstor
push
sub
mov
das
ss
jmp
ss
imul
add
shlb
lds
std
xchg
ror
push
pop
add
push
mov
xchg
sahf
mov
xor
inc
sub
pop
fstpt
clc
insb
inc
inc
sti
add
xlat
scas
pop
mov
inc
jne
sub
pop
cmp
je
scas
shrb
ror
stos
dec
pop
les
jl
inc
xor
push
xorl
xchg
dec
push
mov
ljmp
dec
add
ret
mov
xor
stos
out
cmpsb
cmp
push
cmp
and
pop
aas
lods
add
aad
out
xor
loope
loop
icebp
fxch
sub
mov
bound
jbe
loope
or
icebp
xrelease
enter
xchg
fidivs
add
loope
mov
inc
pop
data16
xor
dec
rcl
push
in
bound
call
dec
lea
add
test
sbb
sub
pop
je
das
add
fcoml
je
mov
imul
inc
ss
stos
cltd
popf
sbb
push
sbb
stos
sbb
ljmp
bnd
sbb
iret
lods
push
inc
orb
jbe
push
rorl
cmp
jo
addr16
mov
cmpsl
lods
rcll
loop
sub
ficoml
push
fcompl
ficomps
loope
dec
sbb
sahf
jmp
icebp
jns
icebp
loopne
out
fmull
push
dec
adc
mov
jbe
insb
jns
dec
mov
sub
leave
add
mov
push
mov
ds
mov
push
xrelease
fcmovb
scas
xchg
les
mov
inc
enter
inc
pushf
fadd
int
fs
xlat
mov
adc
loope
test
jae
lret
in
pop
dec
jg
outsl
dec
dec
lahf
cmp
pop
fimull
fcomps
cld
aad
stc
add
movsb
rcl
xchg
push
add
sarb
cmc
loop
inc
aad
leave
insl
test
mov
xchg
sti
inc
das
inc
jle
gs
mov
pop
or
xor
mov
dec
lds
pop
in
xchg
push
xchg
arpl
sub
or
jns
sub
loope
xor
and
stc
icebp
xor
mov
xchg
lds
das
adc
bound
add
mov
xchg
xchg
xchg
and
and
mov
jge
popf
inc
rcrb
push
add
cli
add
jmp
dec
jl
es
ret
xlat
gs
shr
xlat
add
add
ss
mov
cmp
and
insb
fisubl
stc
mov
push
rorl
lds
loop
adc
jo
adc
or
insb
jle
xor
push
shr
les
cli
loop
mov
xchg
scas
std
xchg
or
out
outsl
subb
inc
jecxz
mov
lock
jmp
or
js
bound
mov
imul
popf
data16
cmp
push
jl
xchg
into
add
jno
cs
maxps
int
call
imul
negl
insl
push
loope
add
mov
dec
shll
stos
push
pushf
or
jge
sub
rcll
enter
loopne
pop
or
or
out
iret
xor
lods
scas
cmc
cmp
push
sbb
outsl
aad
xor
pop
aam
mov
cmpsl
mov
or
aas
pop
jo
test
int3
jmp
jp
jmp
or
xor
ret
xchg
jmp
out
mov
jnp
jmp
enter
daa
jns
aas
pusha
aad
scas
sbb
popf
ret
xchg
xchg
inc
mov
mov
push
scas
sub
mov
sbb
sbb
jl
xchg
cmp
and
loope
sbb
push
or
jl
inc
sub
push
push
je
xchg
sub
inc
leave
call
inc
nop
inc
inc
sbb
xor
mov
addb
ffree
push
add
sub
iret
and
jge
xchg
sub
sahf
int
loope
adc
shll
faddl
imul
adcl
adc
xchg
fdivrs
pop
mov
roll
call
sbb
adc
push
jo
sti
inc
push
xchg
hlt
negl
inc
push
cwtl
out
jb
sub
imul
jg
mov
out
mov
imul
addl
or
sub
ljmp
sti
pop
loopne
fsubrl
cmc
adc
mov
loope
push
orl
stos
xchg
dec
bound
std
repz
mov
and
icebp
add
mov
jge
test
ss
test
add
cmp
aam
push
movsl
dec
pop
inc
addr16
dec
lods
mov
adc
xchg
xchg
mov
das
loopne
mov
inc
jae
adc
mov
adc
inc
cmp
jae
popa
sbb
in
dec
insl
mov
inc
mov
or
push
scas
es
and
mov
xor
jbe
ret
cmc
adc
push
xlat
or
scas
dec
mov
es
xchg
mov
into
xorb
bound
insb
icebp
fstps
repnz
push
mov
jne,pt
and
jp
pop
loop
fstpt
jle
divl
add
pop
mov
xchg
add
sub
ss
xchg
cmp
sub
pop
fstl
add
clc
xchg
and
jb
repnz
pushf
sub
xlat
add
cmpsl
arpl
popf
imul
int
cmp
arpl
and
and
mov
lock
xchg
mov
in
pushf
add
sbb
sub
xlat
loopne
sub
mov
idivl
sti
lahf
mov
orl
xchg
enter
test
and
test
and
xor
xchg
mov
cmp
push
fidivrs
bound
xor
push
mov
call
jbe
mov
dec
repz
hlt
or
push
add
icebp
bound
push
pop
ret
nop
adc
jo
push
nopl
xchg
dec
loopne
xchg
add
and
xchg
push
insl
mov
and
scas
lret
sbb
cli
sbb
xor
mov
or
in
sub
out
es
jne
fs
cmp
mov
out
iret
push
stc
sub
jns
jge
sbb
cmp
add
cmp
ljmp
outsl
cmpsl
mov
sub
sub
push
jmp
push
lock
cmp
sbb
bound
mov
push
fwait
push
cld
cmpsb
lds
into
int
mov
xor
jo
loop
sti
sub
sbb
in
or
adc
pop
jb
dec
adc
test
push
jo
arpl
out
push
call
movsl
inc
push
aaa
test
in
xor
lea
xor
outsl
dec
fsubl
xchg
nop
sahf
leave
mov
xchg
aaa
sbb
bound
sbb
mov
outsl
mov
xor
orb
aad
lret
pop
outsl
mov
dec
xchg
dec
jnp
jg
mov
mov
into
mov
push
pop
das
cwtl
andl
push
mov
xor
jg
loop
adc
pop
inc
sbb
movsb
push
cmp
fsubs
mov
or
shlb
hlt
enter
fistpl
xchg
adc
mov
cwtl
lods
cld
pop
or
lret
push
ds
insl
cwtl
lds
push
mov
mov
sahf
push
xchg
mov
push
mov
imul
xor
stos
repnz
adc
jbe
ds
mov
lods
lods
sahf
sbb
test
inc
loope
imul
inc
test
cli
out
sbb
lock
pop
adc
popf
or
pushf
cmp
fisubrs
popf
outsb
push
and
adc
subb
out
loope
jo
push
sbb
rorb
out
sbb
adc
arpl
popf
popf
inc
mov
shl
inc
inc
add
adc
test
int
popf
in
cmp
mov
fwait
jecxz
add
cli
cmpsl
lret
aam
cmc
sub
mov
adc
in
js
inc
lcall
xchg
adc
insb
mov
push
jmp
mov
xchg
int3
jp
jnp
andl
test
jne
pop
inc
cld
aad
cwtl
test
je
push
stos
jbe
cmpsb
fwait
cvtpi2ps
push
mov
movsb
outsb
cmpl
mov
les
repz
cmc
aaa
loop
sbb
daa
adcl
push
jl
jnp
aad
pop
or
inc
push
add
shrl
pushf
int3
push
push
into
notb
jmp
lret
sub
test
inc
fmuls
test
cmp
scas
jns
mov
sbb
fsubrs
ss
fcmovu
fiaddl
pop
push
jae
and
jmp
aas
and
decl
push
lea
sahf
cld
decb
pop
pop
pop
iret
pop
cmpsl
andl
xchg
insl
fisttps
in
repnz
pop
adc
mov
add
fnstsw
es
pop
add
mov
dec
rcll
xchg
stc
jo
mov
mov
pop
mov
pop
gs
sbb
cmc
add
jl
lahf
jne
xorb
and
leave
mov
stos
gs
mov
push
arpl
arpl
je
aas
movsl
notb
add
lds
push
iret
xor
in
xchg
jge
cmpsl
inc
jnp
pushf
jbe
add
cmp
inc
mov
fsubrl
repz
fs
lcall
ljmp
in
loopne
or
testl
jmp
lcall
daa
cmpsl
inc
bound
mov
test
stos
in
ret
add
imul
imull
aad
in
and
lret
sbb
extrq
dec
inc
movb
std
shl
and
or
sarb
sub
inc
ret
repz
push
popf
ds
outsb
sbbl
ja
xor
adcl
lds
pop
test
in
test
imul
jl
mov
test
xlat
dec
imul
mov
pusha
shlb
xchg
mov
and
aaa
xchg
data16
bound
movsl
xchg
sbbl
add
pop
xchg
jmp
mov
cmp
pop
call
mov
mov
in
pop
xchg
jge
sbb
dec
aad
push
mov
shrl
xlat
cmp
push
out
xchg
rcrb
dec
mov
jp
lcall
and
cltd
add
jmp
pop
stc
sub
test
imul
out
mov
sti
add
out
popf
push
jnp
popf
mov
inc
mov
mov
xchg
loope
rcrb
push
dec
inc
lea
sub
fsubrl
jl
xor
test
testb
adc
int
and
popa
mov
xchg
sub
mov
dec
addr16
js
shrb
sti
push
sbb
sbb
mov
mov
mov
mov
cmp
jno
fdivl
sub
fxch
ljmp
stos
int3
add
cld
sub
stc
jb
dec
pop
sub
outsb
xchg
lahf
mov
movsb
mov
lods
mov
sti
shlb
loop
or
in
popa
pop
test
push
dec
push
ss
bound
test
and
and
fistps
fcoml
lahf
add
push
sbb
mov
icebp
push
add
ds
cmp
sub
mov
inc
sub
pop
sub
shll
sub
icebp
sub
pop
cltd
dec
inc
pop
push
sbb
lret
sbb
pop
hlt
xor
stos
jne
test
pop
fisubrl
pop
imul
or
or
sti
or
jbe
mov
div
jo
adc
ljmp
jp
out
dec
lcall
fs
data16
sahf
test
adc
and
mov
repz
int
ja
mov
pop
aaa
push
mov
sub
push
sbb
push
jb
in
inc
mov
lock
mov
dec
jle
sbbb
inc
test
cld
sub
mov
fldcw
dec
rcrl
pop
mov
movsl
lods
popa
stos
sbb
xchg
jmp
jne
xchg
push
ficoml
mov
testl
notl
das
sbb
stos
lcall
jb
data16
arpl
pop
mov
es
or
sbb
sub
stos
in
movsl
inc
iret
xor
sub
cli
xchg
cmc
stos
icebp
jle
dec
int
jge
and
inc
addl
mov
cmpsb
mov
push
adcl
pop
mov
stos
mov
jecxz
outsb
or
xor
and
push
dec
cs
out
clc
inc
das
jae
dec
or
inc
sbb
xchg
mov
testl
aaa
sbb
cmp
gs
in
mov
sbb
std
sbb
into
loopne
das
mov
cld
inc
xchg
adc
out
cmpsl
subb
add
divb
pop
fs
aam
es
ja
sti
rorb
adc
ret
and
insb
jge
repnz
sub
add
jae
and
cmp
add
and
or
adc
mov
andl
jge
notl
leave
fld
push
repnz
arpl
mov
pop
lock
fdivs
stc
jns
adcb
jle
push
data16
inc
or
pop
jg
pop
and
in
pusha
mov
pop
add
dec
sbb
cmpsl
cmp
js
cmpsb
int3
mov
push
sbb
pop
add
fisttpl
inc
loope
sbb
cmp
push
addr16
mov
stc
loop
fcmovnbe
push
xchg
inc
push
jno
pop
cmpsb
mov
jbe
test
jo
movsb
cmp
lea
je,pt
or
cmp
xchg
mov
sahf
sti
test
cli
stos
imul
cld
mov
ret
lods
mov
stc
xchg
inc
dec
pusha
stc
jecxz
add
add
leave
daa
push
mov
jmp
jle
pop
out
es
sub
and
cmp
cmp
je
push
lahf
sbbb
lea
int
mov
pop
in
out
jmp
xor
pop
sti
cli
nop
mov
fmul
mov
push
jb
rorl
jno
and
and
pop
lock
int
cmp
sbb
xchg
in
shlb
mov
sbb
sub
fildl
jb
ds
fdivrs
mov
mov
leave
cmp
call
mov
push
push
xor
jnp
push
call
xchg
scas
push
jmp
out
test
js
pop
xchg
xchg
fwait
iret
mov
mov
cmp
or
in
pop
scas
cmpsb
mull
xchg
subl
add
mov
pop
sub
push
xchg
sti
stos
pop
jns
push
dec
mov
or
sub
inc
sub
mov
lods
pop
sub
push
pop
xchg
jno
scas
jp
xchg
jmp
cmp
mov
sub
das
out
cmp
mov
xchg
out
orl
dec
hlt
xor
inc
jno
repnz
cmp
cmp
and
pop
and
mov
or
lods
sbb
jno
sti
sub
push
les
cwtl
and
test
mov
scas
inc
cwtl
mov
inc
mov
pop
inc
pop
hlt
jecxz
clc
test
sbb
sti
mov
xor
popfw
stos
pop
fwait
cmpsb
adc
and
fstpt
mov
in
cwtl
cltd
cmp
ss
xor
cmp
ljmp
mov
bsf
push
cli
xor
lock
xchg
and
inc
std
xor
es
stos
in
iret
icebp
mov
in
sbb
lahf
jo
shl
push
cltd
mov
pop
ss
xchg
ja
bound
inc
xchg
aad
roll
jne
into
jno
xchg
sbbb
jg
mov
pop
push
mov
dec
mov
mov
mov
int3
shrb
cli
callw
jp
lds
jae
das
lock
xchg
dec
les
sub
xchg
cld
loopne
xor
in
stos
test
imul
jns
mov
fucomp
fstpt
pop
lahf
mov
sub
int3
cld
push
repz
cmc
sbb
fucom
mov
shlb
in
push
inc
out
inc
push
cmpsb
pop
test
out
dec
clc
dec
leave
gs
clc
dec
or
fistl
les
in
loop
clc
mull
decl
and
outsb
sub
dec
out
cmp
addr16
ret
jb
dec
subb
and
inc
iret
lcall
int3
jne
mov
jnp
popw
sub
xor
test
push
ja
cmc
test
rorl
shrb
jae
or
lock
jae
iret
jo
push
push
push
or
clc
and
movsl
sbb
inc
ret
scas
in
inc
addr16
inc
push
mov
mov
mov
push
cmp
mov
mov
out
adc
inc
fcoms
push
sti
and
adc
dec
and
jno
add
sub
divb
sub
jo
fisubrl
pop
loopne,pn
repz
mov
mov
lret
xchg
std
hlt
imul
or
or
ret
insb
xor
cmp
pop
adc
test
int3
jbe
fildl
push
pop
jmp
stc
mov
xchg
or
sbb
repnz
ret
sbb
add
inc
nop
dec
int
inc
pop
aam
mov
cli
imul
pop
lret
ret
iret
int
scas
mov
into
jb
jns
mov
jp
jmp
mov
add
or
xchg
inc
xchg
jnp
mov
lret
decl
popa
jecxz
mov
push
sti
cmpl
aaa
iret
enter
xor
pop
call
stos
jb
cli
int
xchg
xchg
clc
into
xor
cmp
leave
mov
ret
adcb
ds
lahf
pop
sbb
cmp
out
scas
push
mov
into
inc
sub
push
xor
lock
xor
bound
out
aad
fisttpl
add
xchg
push
out
dec
adc
fwait
adc
push
popf
lock
dec
stc
xor
cld
icebp
sbbb
sbb
cmp
add
shlb
stc
jae
and
lods
xchg
xchg
dec
add
and
imul
mov
loopne
fisttps
ret
or
mov
aad
pop
mov
or
jae
cmpb
push
in
lock
shrl
push
mov
bound
jbe
mov
repnz
arpl
fnstenv
fs
shll
pop
dec
int
cmp
daa
fiaddl
xorl
rcrl
testb
dec
call
cmovg
and
jmp
jns
pop
andl
pop
jle
cmp
and
pushf
lea
inc
cmp
and
sti
jecxz
inc
jb
insl
aas
fstpl
adc
mov
out
xor
xor
mov
xor
dec
dec
pop
push
lods
popf
mov
out
sub
jo
dec
shlb
or
outsb
pop
mov
pushf
lcall
cs
aas
pop
in
xchg
jbe
and
es
xor
mov
dec
sub
fcomp
leave
fwait
jb
lea
xorb
cs
mov
jl
xor
jmp
and
pop
in
std
adc
lcall
repnz
mov
push
push
insl
bound
daa
mov
cld
add
jl
dec
test
cmp
cmp
stos
loopne
dec
dec
lock
icebp
mov
xchg
push
or
push
outsb
mov
insb
mov
sbb
ror
mov
add
xchg
sarl
push
insl
std
insb
or
lret
js
push
sub
lds
mov
loope
push
ds
movsb
lods
hlt
stc
popa
jae
adc
sbb
fildll
addl
cmp
out
dec
int
lret
sbb
cs
ljmp
int3
add
loope
xchg
add
cmp
cltd
inc
mov
notl
inc
subb
xchg
sub
int
adc
push
imul
pop
inc
in
aaa
jns
pop
loope
cmc
jl
scas
stos
pop
pushf
xchg
int
movsl
cmp
cli
or
adcb
and
js
pop
loope
ret
jg
fstpl
pop
cltd
mov
mov
cli
inc
aas
cltd
xchg
jbe
xchg
and
sub
loop
dec
push
adc
iret
or
push
cmpsb
lcall
pop
xchg
fwait
hlt
add
mov
cmp
outsl
jo
clc
inc
pop
push
mov
shlb
sub
fwait
lret
mov
push
jge
push
xchg
cli
add
sub
stc
fisttpll
cs
mov
jo
jmp
mov
xor
cmc
push
inc
fcmove
mov
ss
scas
or
jns
int
mov
mov
ror
push
outsl
push
mov
rolb
push
cmp
push
imul
adc
push
cmp
xor
mov
dec
ret
fwait
lahf
jns
dec
xchg
mov
sub
inc
testl
in
push
lods
or
aad
ss
imull
pop
repz
rcrl
jb
ja
xor
out
pop
sub
test
mov
push
loop
push
pop
das
cmc
inc
add
mov
je
mov
xchg
or
test
xchg
es
ljmp
sbb
mov
cmp
push
pop
std
xchg
push
mov
rolb
outsl
pushf
out
jbe
inc
pop
int3
lcall
orb
sbb
shr
xchg
mov
shr
int
xlat
jp
jle
shlb
lods
ret
pop
imul
cld
mov
sbb
fsubr
push
es
xor
roll
push
jle
sub
lods
ljmp
and
jmp
pop
dec
jp
pop
test
aad
popa
jnp
subl
imull
sub
fldcw
stc
test
mov
xchg
gs
imul
mov
xchg
mov
dec
dec
fldenv
mov
in
and
iret
aad
dec
scas
ja
rcl
sub
mov
jle
xchg
out
sbb
pop
stc
repnz
jg
inc
or
cmp
adc
xchg
out
dec
inc
lods
mov
lcall
nop
sbb
ret
adc
jae
mov
jmp
push
or
mov
cltd
ficomps
push
mov
es
shl
mov
mov
jg
movsb
iret
aas
mov
and
leave
push
fsubl
jecxz
lret
pushf
in
fwait
xor
ret
and
inc
loop
fcoms
mov
adc
dec
fiadds
negb
pmulhw
dec
mov
inc
cltd
lret
cli
add
cmpsl
lahf
orl
mov
shrl
lea
ret
out
xchg
and
cmp
mov
faddl
ss
aaa
cld
test
push
mov
lret
inc
rcr
push
jecxz
lds
aad
call
inc
xchg
pop
pop
ret
lret
add
jno
rcll
cmp
sub
cltd
es
adc
je
testl
pop
out
into
or
mov
adc
je
dec
mov
push
push
ret
test
cltd
mov
pop
dec
insl
sti
mov
mov
adc
rcr
and
in
push
aam
mov
mov
add
outsb
xchg
and
or
add
mov
sbb
mov
push
jne
fucom
pop
mov
add
add
xchg
sub
jo
xor
jg
jne
rol
pop
fisubrl
pop
adc
xchg
mov
lcall
aas
inc
loopne
xchg
icebp
dec
lret
in
dec
fbld
cli
xchg
stos
icebp
mov
mov
adc
mov
or
push
mov
sbb
push
sbb
inc
sub
jb
pop
jge
jmp
cmp
cmp
push
jnp
jmp
inc
je
sbb
test
ljmp
jl
dec
test
ds
shlb
pop
in
pop
xchg
push
lret
add
push
int
cmpb
movsl
add
cmp
mov
out
imul
mov
xor
loopne
adc
lahf
and
insl
mov
pop
cmp
data16
test
cmp
inc
cmpsb
inc
repz
cmp
push
cltd
sti
insl
cs
rorl
jle
jle
js
jbe
loop
sub
mov
or
outsb
adc
je
mov
dec
pop
iret
xchg
das
das
mov
testl
xor
cmp
mov
lret
push
adc
lods
xchg
imull
adc
ljmp
mov
shrl
outsl
adc
jo
push
lret
mov
sub
and
pop
inc
scas
xchg
sbb
fnstcw
cmp
mov
xchg
jmp
movb
enter
stc
adc
int3
adc
je
mov
ljmp
into
jg
out
daa
int3
testb
imul
dec
jg
inc
vpandn
iret
repz
stos
cmp
icebp
adc
or
jae
sub
stc
sti
mov
push
movsl
mov
scas
lea
or
pushf
cltd
rcll
daa
inc
jb
sbb
xchg
xchg
ja
cmpsb
pop
hlt
enter
or
inc
cmp
je
rolb
xlat
push
scas
ret
jb
decl
add
jnp
sub
add
adc
bound
sub
and
lock
xor
in
xchg
jg
dec
imull
cs
js
jl
jge
and
test
push
dec
and
das
scas
sbb
xchg
dec
nop
dec
imul
adc
jnp
cmp
insl
xchg
jnp
dec
popa
loopne
mov
xchg
test
xor
cmc
adc
fwait
or
cmp
aaa
mov
or
mov
mov
or
enter
cmc
add
loopne
or
pop
cmc
addr16
pop
xchg
xchg
mov
fdivl
add
sbb
sbb
jecxz
inc
insl
fldt
clc
and
sbb
inc
insl
test
fdivrs
daa
mov
dec
pop
test
add
pushf
mov
or
or
xor
fdivrs
out
mov
lods
enter
cwtl
mov
xchg
or
imul
insb
inc
scas
in
mov
lcall
hlt
lahf
mov
insl
jne
inc
jge
mov
inc
in
rcll
push
xchg
sbb
push
aad
mov
icebp
push
outsb
in
sbbb
jl
pop
es
sub
arpl
push
push
xor
sbb
sarl
out
mov
cli
insb
int3
js
jecxz
adc
cwtl
adc
adc
cmp
pop
adc
jge
jp
add
and
cmpsl
fs
ret
pop
pop
fcomps
or
sbb
xchg
xor
adc
std
ds
inc
mov
sub
sbb
or
push
adc
pop
cmp
mov
test
cmp
leave
push
push
shll
cmpsl
and
jnp
cmp
or
cmp
and
aam
jb
lahf
xchg
stos
pop
stos
stos
jno
mov
aaa
movsl
pop
push
jp
jl
xor
inc
sbb
popa
pushl
lcall
push
fisubl
loopne
lods
cli
loope
divl
xchg
push
xor
mov
int
inc
push
rorb
push
mov
stc
sub
out
push
jbe
or
pop
xor
mov
loope
mov
dec
push
or
iret
sub
xor
stos
fbld
xor
ljmp
imul
es
aad
outsl
clc
icebp
inc
repnz
aas
loopne
sbb
mov
sbb
pusha
pushf
jns
ret
jmp
mov
aad
leave
mov
call
sahf
popa
xor
pop
dec
loop
inc
xchg
fsts
popa
clc
imul
enter
push
pop
int
or
mov
sbb
outsb
inc
insb
jne
test
fisubs
inc
loope
jmp
aad
inc
pop
test
ffree
push
rcll
hlt
push
ds
out
jecxz
pop
ret
push
sub
cmp
mov
sub
ljmp
sbb
in
test
or
repnz
and
sti
mov
adc
sub
adc
subl
stos
incb
adcb
inc
aas
test
sub
push
and
stos
orl
mov
test
into
cmc
icebp
add
inc
ss
cmp
cmp
in
lods
test
adc
xchg
das
shll
mull
add
or
gs
repz
dec
mov
mov
rcrb
xlat
scas
jne
repz
pop
js
sbb
mov
pop
inc
data16
mov
xchg
lcall
movsl
inc
cli
shl
add
movsb
test
movsb
mov
cmc
xor
cmpsl
push
lea
pop
mov
sahf
inc
mov
push
dec
jmp
and
into
insb
rorb
wrmsr
pop
addr16
jae
in
inc
push
jl
les
inc
jp
pop
testl
mov
xor
pop
sbb
xor
shll
lods
sbb
or
push
mov
mov
xchg
fcmovu
int3
push
add
rcll
scas
rolb
loopne
imul
mov
sarl
sbb
in
inc
sahf
sub
sub
loope
mov
xor
push
int3
cmp
lret
mov
jae
mov
push
lods
icebp
xor
push
and
cmp
out
movsl
dec
popa
xor
aaa
pop
not
jge
dec
sub
jb
fadd
fildll
lods
pop
daa
frstor
mov
sbb
sahf
or
das
add
jb
mov
cld
xchg
sbb
adc
fs
jl
cmp
cmp
jne
icebp
xchg
add
jecxz
scas
insl
icebp
add
mov
mov
imul
xchg
push
adc
cmp
lahf
repnz
sub
das
cltd
scas
cmpsl
push
sbb
js
in
shll
inc
push
push
lea
ja
mov
scas
daa
inc
scas
dec
add
jmp
shl
mov
jno
mov
adc
push
lea
push
adc
outsl
sub
rcr
push
xchg
mov
inc
xchg
or
push
add
icebp
outsl
idivl
call
add
movsl
jecxz
mov
mov
pop
stc
stc
popa
jns
sahf
push
pop
mov
mov
leave
mov
mov
daa
xchg
sbb
lret
add
lahf
push
push
inc
jmp
icebp
jb
insl
cmp
push
mov
negl
xor
movsl
add
xor
lahf
repnz
rclb
dec
mov
sub
cmp
scas
popa
pop
int
fwait
add
dec
dec
xor
sti
call
cmp
push
repz
sbb
in
mov
sub
or
or
stos
pop
test
fidivl
sbb
sarl
lret
ret
push
fsub
adc
push
mov
cmp
iret
or
dec
stos
lods
fistpll
fsubs
repz
repnz
fldcw
call
mov
shrb
mov
or
add
xrelease
sub
cli
and
dec
repz
push
push
jl
xchg
xor
sbb
cmp
or
rcl
xor
push
jb
jo
adc
jno
fstl
mov
push
dec
int
jns
insb
in
sbb
in
out
test
cmc
sub
push
lahf
fldcw
out
cmp
pop
inc
adcb
cltd
sub
popf
insl
xor
fsubrs
mov
mov
mov
mov
rcr
pop
jae
jne
mov
into
bound
xchg
pop
jb
sub
mov
js
mov
scas
mov
or
aam
aad
pop
mov
xchg
orb
mov
test
cwtl
mov
loopne
notb
and
cmp
xchg
cwtl
loop
sub
xchg
sbbl
inc
xor
jae
fimuls
scas
jnp
mov
xchg
fnsave
out
sar
ljmp
test
mov
push
sub
test
in
mov
daa
test
mov
mov
ljmp
push
jl
mov
dec
shlb
xor
mov
ss
jbe
mov
jmp
inc
jl
scas
icebp
push
mov
push
in
imul
decl
fcompl
lahf
iret
adc
fdivl
pop
inc
push
sbb
cmc
std
andl
and
pusha
jbe
lcall
aas
punpcklbw
in
mov
mov
jecxz
cmpsl
test
and
out
inc
xchg
cmp
lret
jmp
cmp
hlt
fmuls
cwtl
loope
mov
dec
inc
out
xchg
mov
rcll
lods
push
outsb
jg
pop
jp
jmp
xorb
in
cmp
dec
ficoms
movsl
adc
lea
pop
stos
mov
push
xchg
adc
inc
sbb
add
mov
mov
sbb
pop
inc
outsb
test
adc
sub
jo
inc
das
xlat
fwait
xorl
ljmp
push
sub
idiv
cmpsl
pop
inc
mov
icebp
icebp
aad
inc
sahf
mov
mov
rorl
sbb
and
into
cltd
mov
insl
push
fnstenv
cmp
insl
or
jae
cmp
inc
pop
enter
add
push
ret
aad
andl
push
inc
jmp
add
inc
jns
fwait
push
or
fnstcw
cmc
cmc
lods
out
test
sub
je
cwtl
dec
enter
jns
sub
andb
mov
test
test
mov
jbe
xor
fwait
add
add
jecxz
sbbl
lds
xchg
sub
loopne
mov
iret
cmc
add
push
es
subl
sbb
iret
mov
leave
icebp
in
mov
sub
mov
jge
mov
out
inc
mov
dec
hlt
xor
add
roll
loope
sbb
test
imul
xchg
cs
and
and
lret
scas
adc
pusha
pop
xchg
pusha
seto
lods
ss
jns
mov
lcall
mov
pop
nop
das
mov
incl
xor
rcrl
and
sub
cmp
pop
xor
pop
scas
addr16
mov
mov
pusha
into
xchg
jecxz
lahf
mov
cmp
arpl
movsb
pop
jl
mov
pop
test
inc
and
and
daa
bound
pop
dec
sbb
pop
hlt
sub
aaa
sbb
das
mov
imul
stos
sbb
pop
std
lahf
inc
and
jecxz
jecxz
mov
loope
test
cmp
mov
fstps
fucomp
and
aam
xchg
in
jle
fiaddl
push
or
mov
add
mov
xchg
inc
sub
inc
pop
outsl
adc
clc
in
dec
pop
jle
sub
mov
inc
pop
loop
sub
aam
sbb
sub
icebp
adc
push
xlat
or
adc
movsb
inc
push
cld
or
cmovo
jo
mov
adc
scas
test
or
test
iret
jns
or
pop
push
jp
add
inc
enter
mov
out
mov
call
icebp
xchg
or
ja
icebp
jle
enter
mov
lcall
gs
pop
test
sbb
push
hlt
pusha
xor
sbb
push
pop
sub
inc
mov
xorb
icebp
jl
sub
inc
mov
adc
cmp
jle
push
jae
xchg
rcl
xor
mul
imul
cmpsl
jg
mov
xchg
std
push
lret
inc
push
pop
in
mov
xor
cmpb
adc
cmp
xor
mov
sub
or
cltd
cmpsl
pop
adc
stos
xor
mov
mov
push
lods
sarb
mov
push
addb
rcrb
loope
dec
sahf
mov
enter
jmp
pop
scas
pop
inc
loop,pn
jae
or
xorl
jbe
and
in
cltd
es
mov
or
dec
inc
push
repz
pop
dec
inc
nop
mov
ret
cld
cmpsl
or
pop
rol
xor
jecxz
icebp
lretw
sbb
inc
in
sarb
in
ss
sub
ds
int
insl
add
jbe
test
or
jg
push
mov
pop
dec
es
mov
mov
and
cmp
pop
dec
xchg
call
cmp
repnz
mov
push
and
jmp
xchg
lahf
add
or
std
pop
ret
sub
lea
xchg
inc
mov
cmpb
adc
xchg
jecxz
pop
xchg
jns
inc
mov
xor
sub
inc
and
add
mov
xchg
out
fidivrs
or
adc
leave
cmp
jae
jb
add
mov
cli
repz
sbb
inc
mov
push
pop
cmp
dec
sub
adc
dec
rcl
jnp
mov
push
lods
inc
xchg
mov
mov
repz
lret
in
fldenv
outsl
aam
mov
push
sub
scas
and
xchg
fldenv
in
ds
cmpsl
testl
addr16
int
es
mov
arpl
icebp
cmp
jmp
dec
iret
jl
scas
push
std
and
pop
add
loop
cmpsl
pop
mov
mov
das
mov
pop
stos
fs
mov
sub
fimull
inc
xor
fisubl
jmp
xchg
dec
sbb
xchg
or
out
sbb
jl
jg
pushf
loope
add
dec
xchg
mov
sarl
lcall
xor
sub
cli
jb
xchg
xchg
dec
rcll
popf
shl
jl
shll
inc
mov
jg
in
pop
cmp
xor
sub
movsl
add
cmp
push
lahf
movsl
dec
dec
mov
mov
negb
cmp
loop
std
sbb
movsb
fildl
push
mov
push
aam
pop
rorb
fisubs
ljmp
xchg
outsb
movsl
out
push
stos
negb
xchg
jle
jo
push
push
inc
nop
adc
and
nop
insb
mov
push
mov
pop
cmp
into
xchg
adc
push
in
add
out
std
test
dec
shl
cmp
pop
popa
or
test
pop
sub
push
out
into
repnz
xchg
mov
push
cmp
dec
fst
sar
pop
ret
cmp
shl
aas
pop
push
xchg
xorl
inc
fldenv
and
lea
adc
mov
lret
sti
fidivrl
push
sbb
cmp
cmc
cmpsb
mov
fisttps
aas
push
pop
and
pushf
sbb
cmpl
iret
lods
mov
sub
mov
xchg
cmp
repz
mov
add
fnstenv
js
shr
fidivs
sahf
add
cmpl
bound
jae
mov
inc
hlt
cmp
mov
xchg
shll
mov
fcoml
es
addl
mov
pop
mov
jmp
outsl
xchg
or
out
push
jns
shl
testb
clc
ret
out
sub
daa
in
push
mov
cs
mov
ret
cs
sbb
dec
add
mov
repnz
arpl
rorl
stos
and
add
popf
cwtl
scas
insl
sub
inc
dec
cmp
mov
lcall
repz
or
cmpl
pop
dec
xlat
dec
pop
in
rcrl
push
fcomip
push
sub
sbb
inc
and
shrb
cmp
lods
test
loopne
fdivrl
data16
or
xchg
jo
mov
lret
lods
jno
xchg
push
sub
cmpsb
pushf
jge
repz
mov
xchg
int
incb
jge
icebp
in
cmp
push
dec
test
xlat
aad
push
test
andb
pop
cltd
int
dec
int3
adc
and
inc
mov
dec
push
mov
enter
add
lcall
inc
pop
shrl
leave
fcompl
push
mov
mov
push
fistpll
pop
mul
mov
leave
and
fbld
xor
pop
dec
pop
jno
jnp
dec
testl
sub
cmc
mov
xor
pop
idivb
mov
int3
sbb
and
scas
add
lods
inc
mov
pusha
or
inc
sub
out
sub
int3
mov
jnp
xor
lcall
out
pop
pop
scas
cmp
pop
lds
in
push
fldl
test
nop
sahf
or
shll
pop
mov
push
cmp
cmpsb
push
pushf
adc
xorb
inc
push
pop
add
scas
dec
dec
mov
add
mov
loope
jns
jne
dec
test
clc
cmp
inc
inc
lods
fcompl
add
dec
cmc
mov
push
push
cld
lret
sub
sbb
sahf
and
dec
js
or
out
and
sbb
fisubrs
fstp
jbe
or
imul
nop
xchg
lods
jbe
les
push
sarb
rclb
pop
sbb
icebp
test
icebp
movl
call
and
or
dec
in
mov
cmpsb
in
xchg
in
test
push
cltd
mov
lret
push
mov
call
jecxz
gs
lret
mov
adc
sub
cmp
push
xor
jae
jo
ss
pushf
pop
out
pushf
mov
repnz
and
add
mov
mov
repz
mov
xlat
rcll
inc
inc
pop
push
lret
cmp
add
sub
sub
xchg
out
imul
mov
mov
cmp
std
xlat
popl
shrb
cmc
enter
jge
js
sub
lock
adc
pop
out
xor
pusha
mov
ja
mov
mov
pop
inc
xchg
mov
orb
into
test
sbb
or
and
lcall
dec
jle
pusha
movsl
xchg
fstp
pop
mov
or
imul
imul
lret
testb
jbe
push
mov
xor
data16
rdpmc
movsl
xchg
sbb
xor
xlat
rolb
fistpll
adc
sti
scas
adc
pop
test
movsb
mov
push
fsub
outsb
lret
xchg
mov
das
jmp
jns
and
sbb
xlat
jmp
dec
leave
mov
inc
cmp
add
adc
xchg
cs
sub
xchg
movsl
or
xor
push
test
arpl
jp
pop
lahf
ficoml
cld
push
clc
outsb
and
out
xlat
inc
inc
cmp
rcrl
out
mov
mov
je
mov
sub
adc
bound
movsb
pop
loopne
xor
fistps
or
pop
fwait
clc
das
sub
cmp
dec
mov
or
popf
xchg
or
mov
pop
dec
ljmp
imul
cmp
addl
ja
jle
jb
popl
loope
bound
pushf
and
mov
push
xor
cmp
cltd
and
imul
iret
ds
rcl
imul
loope
data16
stos
mov
fistpll
call
jns
cmpsb
cli
scas
add
sub
inc
lods
lds
lahf
jl
rcll
in
inc
mov
push
in
imul
jl
pop
gs
push
cmp
sub
int3
inc
bound
fsubl
je
pop
jbe
jb
adc
icebp
xor
pop
xor
mov
mov
mov
jno
aam
aas
gs
sbb
nop
cmp
jge
sbb
mov
orl
scas
dec
push
ret
cld
dec
mov
adc
jge
sbb
mov
stc
in
inc
addr16
sub
inc
int3
fucomi
rorl
cld
push
mov
cld
ja
arpl
aam
in
and
mov
push
jno
ja
lods
cli
mov
out
pop
mov
out
jno
rclb
stos
movsb
addb
rorb
ds
or
or
mov
add
mov
sbb
xchg
hlt
out
popa
test
pop
inc
bound
inc
daa
cmp
xchg
repz
ss
mov
les
mov
add
push
je
mov
js
fdivrl
or
mov
sub
or
xchg
xchg
jbe
lock
out
flds
fdivl
pop
xor
inc
pop
or
repnz
lds
and
imul
cmp
sbb
icebp
add
sbb
lods
mov
jecxz
jb
sub
and
andb
inc
cmp
pop
dec
jmp
subl
sub
pop
repz
movsb
shl
clc
lret
push
out
rclb
adc
push
in
xcrypt-ctr
cmpsl
pop
in
ffreep
mov
iret
call
les
xchg
cmp
lock
ja
fsubrs
fnsave
and
jne
stos
xor
add
sbb
decb
and
adc
mov
mov
imul
sub
jb
xchg
repnz
pop
movsl
mov
or
fwait
jp
fisubl
xor
outsl
xor
insl
gs
call
stos
mulb
xor
xchg
pop
adc
xchg
inc
mov
insb
test
sbb
push
inc
ret
mov
mulb
aam
xor
mov
out
out
repnz
loop
push
daa
mov
daa
jne
pop
loopne
cmc
inc
adc
mov
insl
pop
addr16
sub
mov
mov
pop
arpl
rol
das
ja
sahf
lock
pop
inc
popa
mov
pushf
adc
jbe
mov
xchg
dec
mov
loope
jo
pop
test
push
sbb
and
enter
es
or
imul
call
les
cld
outsb
lret
mov
loope
std
push
mov
cmp
stc
rcr
adc
sub
push
push
ss
dec
insb
dec
add
and
jno
into
or
push
aad
mov
lods
lret
imulb
xchg
and
jl
jmp
pop
push
mov
inc
test
fbstp
mov
push
mov
pusha
test
test
aam
jmp
imul
jb
pop
lahf
push
mov
pop
fmuls
dec
icebp
jae
push
dec
sti
or
add
pop
popa
loopne
das
push
xchg
inc
mov
push
xlat
in
cmp
xchg
outsl
add
mov
xor
cmc
cltd
inc
lods
sbb
mov
test
ret
and
outsl
insl
imul
and
addl
sbb
mov
sub
lret
jge
sbb
lcall
icebp
mov
lcall
bound
ret
sub
and
or
rcr
push
fsubrl
data16
insb
sbb
iret
jo
fs
repnz
das
mov
ss
mov
fimuls
int3
loopne
jb
dec
repnz
cwtl
cmp
hlt
adc
loope
xchg
fidivrl
sub
xchg
cmp
sub
shl
popf
in
adc
mov
mov
mov
call
jbe
cmp
add
nop
ret
pusha
repz
add
push
js
mov
ss
cwtl
hlt
movsb
cmpsl
fisubrl
into
add
inc
imul
gs
mov
push
or
pushl
jle
stos
addr16
or
xchg
mov
aaa
inc
pop
adc
jl
adc
scas
inc
loope
lods
mov
inc
aam
cmp
shlb
int3
xchg
xchg
fs
mov
mov
jge
dec
sbb
shrb
push
int3
mov
imul
mov
outsb
or
jmp
inc
imul
push
sub
xlat
mov
inc
leave
sbb
movsl
push
movsb
adc
pop
mov
mov
jecxz
mov
aam
jmp
dec
cmp
aad
pop
pop
gs
clc
inc
nop
mov
sub
add
xor
test
insb
je
lods
ret
and
pop
and
out
adc
add
push
out
mov
jne
pop
int3
nop
push
lock
cmp
addl
out
pushf
sub
es
mov
xor
sbb
dec
dec
xchg
nop
loope
or
aas
clc
cld
or
out
sahf
test
push
mov
insl
adc
scas
xor
es
ret
cmpsb
xor
inc
lret
push
ffree
and
pop
dec
mov
inc
decl
push
test
adc
xchg
adc
mov
sbb
jecxz
jo
stc
cli
cmp
sti
sarb
pop
lret
mov
or
xchg
mov
and
nopl
dec
mov
lods
nop
sbb
or
cs
sub
out
js
mov
adc
repz
mov
stos
aaa
outsb
lcall
dec
fmuls
cli
xor
maxps
sbb
repz
repnz
mov
ret
mov
pop
add
jp
pop
push
rcll
pop
int3
ficomps
dec
cltd
xor
imul
pop
jecxz
xchg
push
sub
shr
inc
add
mov
sbb
lret
pop
pop
fisttpl
popa
cwtl
movsl
cwtl
add
dec
decb
cs
int
shlb
aam
sub
cmp
lret
sbb
cmp
push
repz
jg
lods
test
cld
jle
and
push
scas
cmp
jp
mov
ret
and
jbe
in
xor
call
stos
add
std
xor
out
jne
insb
push
push
lret
cmpsl
jno
inc
dec
in
out
mov
push
adcl
lahf
in
sub
icebp
mov
jle
repz
fisubrs
lods
rcrb
sti
mov
push
jno
push
jp
mov
iret
and
jns
bound
pop
xor
jmp
subb
dec
insb
push
pop
sbb
jle
dec
repz
repz
loopne
in
xchg
mov
stc
xor
add
add
add
js
push
les
inc
xchg
ret
pop
popw
and
daa
fsts
and
lea
xor
lds
lahf
fcomp
mov
stos
shr
mov
xchg
js
stos
inc
into
xchg
sbb
iret
jne
inc
sbb
fidivrs
jae
mov
adc
into
or
fnstenv
cli
sbb
mov
push
addr16
adc
stos
push
cwtl
pop
dec
nop
adc
aas
jg
sti
das
cwtl
sub
setae
hlt
scas
xlat
pop
jecxz
jg
lods
xor
fcmovnb
add
xor
lods
daa
push
mov
imul
push
xchg
pop
and
dec
mov
cmp
sub
adc
repnz
pop
int3
push
int3
aas
sub
and
scas
mov
and
outsl
pop
subl
mov
adc
cmp
imul
or
jno
sbbb
cmp
enter
ja
mov
cmp
test
mov
sbb
call
xchg
ds
cmp
xor
icebp
mov
push
movb
sti
mov
in
in
cmp
pushw
scas
cmp
cmp
fisubrl
ss
jo
mov
jae
lret
and
mov
jo
push
insb
bound
xchg
mov
xchg
shl
lds
pushf
mov
pushf
xchg
jl
xchg
add
in
test
cld
test
mov
xorl
dec
fsubrl
pop
jecxz
cld
sub
jmp
cwtl
xchg
orl
popf
sbb
adc
cmp
mov
mov
jnp
xchg
or
xchg
ret
je
ja
rcr
push
lock
mov
and
pop
outsl
mov
js
inc
or
push
xor
mov
dec
in
jnp
scas
into
cmp
les
dec
lds
loope
sbb
into
push
rcrb
scas
mov
sbb
add
lods
stos
lods
dec
fisubl
mov
scas
sub
jmp
cwtl
test
lcall
lret
imul
xchg
fisttpll
cmovns
sbb
add
xchg
mov
adc
sub
cmpsb
int3
das
inc
addr16
xor
pop
inc
repz
mov
pop
mov
cld
sub
mov
or
lcall
jecxz
lods
mov
test
scas
or
rcl
ret
or
fnstsw
lea
vhaddps
xor
or
int
mov
and
add
sub
faddl
out
notb
lods
pop
cli
pusha
pop
inc
pusha
xlat
js
lahf
mov
or
mov
pusha
mov
xor
fmull
jnp
std
scas
popa
int3
in
cs
aad
jge
inc
iret
fs
ja
adc
sbb
mov
imul
ljmp
inc
cmc
and
jp
dec
mov
xor
insl
xor
jmp
xor
jne
xlat
jl
cmpsb
aas
stc
push
iret
insl
sub
imul
cltd
loop
jb
pop
sbb
cltd
cmp
pusha
gs
cli
in
pusha
cmp
mov
ss
mov
into
es
xor
test
ss
lock
jnp
out
jecxz
dec
push
cs
lods
shll
sub
data16
test
nop
xlat
mov
adc
sbb
imul
rol
inc
mov
repz
imul
or
mov
outsb
sbb
in
fsubs
adc
mov
jl
jae
sub
int
enter
out
xor
lahf
push
jge
sbb
daa
or
or
pop
mov
mov
push
dec
jbe
sbbl
stc
rcr
mov
js
xchg
ret
loopne
lahf
lahf
push
push
mov
sbb
xchg
imul
inc
mov
jnp
test
fs
ret
loop
cmp
lock
aad
leave
outsl
push
pop
stos
dec
fs
add
outsl
sbb
or
test
sbb
cmpsb
cmc
cmp
add
push
or
nop
or
jb
js
xor
in
mov
sti
adc
push
mov
xor
dec
call
mov
xor
jmp
sbb
outsl
push
out
test
enter
cltd
mov
scas
out
cltd
xor
or
adc
pop
push
insl
mov
loope
mov
sbb
out
adc
jmp
dec
popl
and
cmpsb
das
fadd
and
stc
pop
pop
add
pop
iret
cli
add
mov
mov
cmp
cmpsb
pop
xor
clc
push
outsl
xlat
lret
js
shl
lods
pmuludq
push
fwait
imul
inc
cltd
mov
jmp
fidivrl
xor
ljmp
hlt
jl
mov
jecxz
push
shrb
jmp
imul
test
inc
ss
dec
andl
dec
jmp
xchg
enter
cltd
daa
jle
ss
inc
cmp
pop
pop
leave
mov
lret
cli
lahf
rclb
fldpi
mov
push
test
push
adc
push
and
aam
push
or
jb
sub
int
test
inc
cmpsb
out
jp
dec
popf
into
cmpsl
pop
daa
inc
xchg
inc
in
ljmp
ljmp
jg
or
in
jecxz
das
icebp
int
adc
std
mov
dec
ja
mov
hlt
ret
or
rclb
clc
jnp
roll
sub
sub
and
mov
and
cmc
shrb
cmp
and
dec
iret
stc
sbb
sahf
mov
add
fisubrl
push
push
mov
jne
repz
popf
mov
addr16
stos
sbb
adc
cmc
dec
clc
incb
mov
inc
outsb
addr16
push
mov
mov
xchg
add
mov
mov
gs
rcr
inc
pushf
or
add
add
pop
jo
and
inc
or
lcall
adc
mov
push
xor
jno
pop
lea
aad
adc
pusha
mov
andb
mov
bound
sub
sti
inc
cmpsl
jl
movsl
pop
push
rcr
inc
add
jle
aaa
jl
daa
int
dec
sbb
sarl
push
jp
xchg
adc
ds
mov
pop
repz
xchg
jp
fs
imul
push
lret
cltd
cmp
fiaddl
lods
xor
loopne
push
nop
orl
insb
xchg
push
mov
out
int3
scas
inc
or
fwait
pop
inc
arpl
push
cmp
pushf
aam
dec
or
dec
sub
js
dec
mov
mov
fldt
xchg
fsubp
xchg
subl
fsubs
lcall
push
out
inc
ljmp
daa
or
ss
lock
push
lock
test
cs
lea
pop
and
aaa
incl
scas
vpsubusb
repz
pushf
arpl
jge
es
jae
dec
scas
sti
stos
outsb
inc
cli
sbb
adc
xlat
stos
jecxz
sbb
int
roll
fdivr
adc
inc
mov
jno
push
inc
xlat
addb
dec
or
push
inc
addl
mov
sbb
adc
xchg
lock
push
mov
and
test
int
adc
and
stos
imull
fsubs
cmp
cmp
or
or
mov
inc
arpl
movsb
roll
xor
adc
fidivl
pop
add
xchg
flds
out
fnstsw
push
and
cmp
scas
subl
push
insb
ds
iret
jo
sub
aam
test
es
sub
sub
imul
lret
rcl
sar
in
sbb
cmp
jp
data16
jbe
pushf
jnp
mov
fucom
mov
mov
and
call
adc
jmp
adc
push
inc
sub
ror
and
nop
cmp
pop
cmpb
ja
inc
lods
adc
cmp
sub
rclb
arpl
cs
aad
mov
mov
jnp
xchg
add
lods
push
dec
sub
sbb
js
fxam
xchg
testb
and
xor
scas
push
push
repnz
lahf
repz
cmp
inc
popf
bound
sbb
fs
lcall
inc
inc
nop
in
mov
mov
jp
add
sub
sbb
test
imul
add
pushf
scas
dec
addr16
jne
mov
ret
sarl
add
push
and
sub
fbld
int3
xor
in
pop
fidivrs
rorl
mov
pop
push
lcall
insl
loope
arpl
push
push
in
into
ret
and
sbb
mov
mov
cwtl
repz
pop
fwait
out
ljmp
push
iret
js
jae
mov
ss
mov
mov
bound
incl
es
mov
mov
mov
push
push
add
cmp
inc
mov
aaa
mov
jle
popa
fs
sbb
mov
jmp
mov
mov
mov
insl
enter
add
popa
inc
cmp
lods
shlb
loop
pop
scas
mov
mov
orl
scas
jae
pop
aas
and
and
fnsave
cltd
aad
loopne
nop
dec
enter
int3
shrb
or
push
xor
pop
shl
xchg
and
gs
les
mov
ret
push
jno
in
les
cwtl
stos
inc
adc
xchg
inc
mov
pop
add
mov
loope
popf
lret
xlat
or
subl
pushf
pop
popa
xor
js
sub
push
jnp
add
push
out
call
ss
mov
xor
mov
or
insl
adc
xchg
insl
ljmp
aam
fdivrp
ljmp
jl
jl
mov
cmp
jmp
adc
xor
xlat
pop
dec
mov
jbe
mov
jecxz
cmpb
loope
out
lock
in
add
dec
mov
movsb
es
cmc
jae
in
sbb
push
aad
xchg
mov
enter
out
insb
push
ret
xorb
lret
pop
adc
sub
mov
push
mov
or
dec
inc
scas
inc
and
frstor
push
adc
pushf
lret
movsl
mov
arpl
fcompl
pop
mov
popa
push
push
sti
hlt
sub
push
mov
sub
dec
jae
cld
pop
mov
fcomps
cwtl
dec
dec
call
lret
add
movsb
nop
and
fbld
out
repnz
fists
scas
xchg
cmp
push
adc
or
sub
xchg
mov
inc
jmp
hlt
pop
adc
push
dec
insl
push
mov
push
bound
mov
dec
adc
enter
pop
movsb
mov
dec
xchg
nop
jo
mov
cmpb
pop
mov
push
pmaxsw
push
pop
xor
ret
push
fistps
iret
jle
leave
icebp
dec
sbb
lds
sub
out
stos
cmovae
aam
dec
fiadds
int
outsl
mov
aam
fs
and
cmpb
movsb
push
mov
inc
xchg
push
std
mov
cmp
mov
xor
std
mov
xchg
jmp
in
hlt
in
sub
repnz
jo
pop
adc
nop
loop
mov
push
sbb
pop
lret
xor
ljmp
mov
xchg
das
sti
cltd
or
lahf
loopne
mov
insb
adc
mov
add
insb
bound
cmp
test
mov
sbb
xor
dec
cmc
fadds
jmp
mov
xchg
mov
push
lcall
jecxz
dec
xchg
lds
or
fwait
in
stos
adcl
sub
aaa
dec
stc
in
gs
cmp
fstps
aas
mov
shll
call
and
dec
repnz
dec
jge
pop
test
xchg
push
dec
rol
rolb
mov
xchg
das
int3
mov
out
cmp
in
lea
sbb
xor
xor
and
push
jg
fs
lahf
pop
adc
shl
fmuls
ja
orps
int
xchg
dec
and
lret
push
inc
sbb
mov
int3
mov
bound
or
pop
bound
cmp
push
shrl
lock
jl
scas
gs
insb
adc
addr16
into
icebp
fsubl
jl
xchg
sbb
aaa
daa
mov
pop
or
cmp
les
mov
xchg
push
outsl
jmp
test
ja
bound
mov
xchg
aas
lcall
jbe
fstl
push
icebp
mov
and
jp
pop
push
stc
jl
dec
adc
mov
mov
imul
clc
fadds
xchg
fsubr
and
adc
popf
xchg
jl
test
sbb
lret
cltd
push
mov
fidivrl
jle
xor
mov
stc
adc
into
pavgw
es
or
aas
inc
data16
shlb
nop
pop
mov
lret
imul
jp
shrl
addr16
add
addr16
jne
or
jg
pop
lcall
popf
ss
dec
mov
lahf
jl
push
inc
mov
and
rcrl
mov
lret
xchg
jns
hlt
imull
movsl
shlb
mov
push
fwait
jecxz
cwtl
dec
out
mov
xchg
aas
dec
jmp
cmp
cmp
or
jnp
push
dec
adc
outsb
dec
adc
lahf
jne
cwtl
jb
mov
ret
xchg
fbld
cmp
adc
jp
jmp
imul
loope
movsb
std
push
jo
popf
out
roll
xchg
movsl
mov
adc
cwtl
shlb
and
cmp
cmpxchg
mov
jecxz
clc
and
das
outsb
cmp
scas
pusha
xor
stos
inc
jge
fisubrs
pop
adc
notb
lds
rcpps
dec
jp
push
js
mov
dec
add
and
or
adc
sbb
xor
jnp
adc
inc
loopne
sbb
sahf
lahf
ja
sahf
and
inc
movsb
iret
sub
lahf
adcb
outsb
movsb
out
sbb
fwait
adc
mov
push
pusha
loope
mov
imul
jmp
add
xor
mov
mov
push
insb
in
xchg
push
inc
jmp
push
loopne,pn
sbb
test
or
inc
or
ret
in
push
push
dec
push
nop
into
out
les
cltd
mov
xor
es
pop
clc
aam
dec
daa
inc
push
mov
negl
push
leave
rolb
sbb
ss
adc
pusha
call
adc
ds
aam
adc
lcall
sarl
push
xchg
cmp
xchg
xchg
pop
negb
shll
ja
jge
test
inc
xchg
jno
insl
jp
or
or
mov
shlb
data16
pop
lret
sub
gs
shrb
shll
stos
js
test
jnp
pop
les
inc
ja,pt
loope
into
xlat
or
pop
in
ja
sarl
adc
test
dec
aas
add
lahf
fdecstp
stos
adc
negb
ret
mov
xchg
add
jae
popf
mov
ja
xor
xchg
cwtl
mov
or
mov
xor
xor
or
cld
mov
mov
jo
scas
xchg
jmp
sub
and
nop
xchg
bound
es
or
mov
inc
jne
mov
mov
inc
add
cmpl
clc
pop
adc
mov
mov
call
cmc
mov
test
bound
fcoms
jb
ficoml
sbb
inc
xchg
jb
pusha
in
ret
or
cmp
jbe
out
xchg
inc
push
xor
lahf
inc
lahf
cwtl
push
ret
mov
inc
icebp
enter
mov
js
nop
stc
sub
mov
sub
xor
enter
sub
in
and
stc
fldz
cs
lret
in
stos
sub
add
mov
push
pop
pop
lret
fwait
pop
xor
xchg
pop
test
dec
cmp
mov
mov
push
rorl
push
jne
pop
or
adcb
pop
mov
and
in
shrb
ds
sbb
std
inc
das
and
inc
push
add
pop
cwtl
xor
or
lds
arpl
pop
mov
movsl
ret
xor
jne
ss
std
pop
cmpsl
jg
fcompl
xchg
pop
pop
jmp
xorb
adcb
xchg
pushf
sbb
push
xor
cmp
fs
lds
and
outsb
jne
repz
push
jb
ljmp
sub
and
xor
xor
fcmovbe
dec
xchg
imul
mov
shrb
jne
ss
je
sub
and
mov
idivl
jmp
in
int
fwait
jl
je
mov
sahf
jno
fimuls
nop
das
push
mov
jmp
sbb
out
mov
xor
push
push
jns
pop
mov
lds
inc
mov
jg
xchg
lock
cs
and
inc
cltd
jp
cmc
mov
adc
xchg
or
out
int
add
aad
adc
int
add
sahf
shrb
xchg
fstpt
mov
int
std
sti
xchg
lea
mov
mov
ds
pop
loope
push
dec
std
popf
pop
call
push
cltd
cmp
add
dec
cmp
psllq
sbb
les
stc
add
jne
mov
mov
outsb
adc
in
push
lahf
mov
or
mov
popf
jle
fnsave
nop
push
outsl
mov
dec
xchg
out
cmpsl
pop
insb
arpl
xor
fs
xchg
dec
movsl
test
push
mull
adcb
mov
out
test
leave
xor
jmp
outsb
cli
push
dec
in
aam
gs
jb
insl
out
and
fs
scas
pop
cs
icebp
lea
testl
pop
mov
scas
loope
mov
ficoml
sbb
scas
test
hlt
inc
mov
stos
inc
mov
sbb
add
mov
dec
xlat
jnp
jae
sbb
push
xchg
pop
sub
scas
out
mov
stos
out
xchg
call
sub
aaa
adcl
jp
lahf
hlt
les
sbb
dec
hlt
idiv
jo,pn
lret
adc
out
add
ss
dec
pop
mov
pop
scas
sti
ret
outsl
out
jnp
subl
and
lock
cmpsb
adc
daa
movsl
es
xchg
jb
mov
sub
sbb
sub
add
cmpsb
inc
push
inc
out
push
or
mov
dec
jno
xchg
pushf
mov
int
pop
push
or
lods
or
lret
fisttpll
or
dec
jecxz
sti
cmp
xchg
aas
add
sbb
pop
lahf
xchg
inc
hlt
in
inc
mov
xchg
add
test
shrb
push
test
pop
push
sub
ljmp
xchg
out
ret
lds
testb
mov
jge
fcoml
std
mov
sti
popa
icebp
in
add
sahf
ret
movl
jb
pop
fsubs
int3
adc
or
lods
loope
dec
inc
rcrl
sbb
insl
loope
mov
dec
cli
scas
into
fadd
or
imul
pop
ret
pop
cltd
sbb
hlt
pop
xchg
in
mov
scas
pop
or
out
jae
xchg
cmpsl
add
mov
jnp
or
ret
arpl
mov
add
fwait
and
and
fcomps
xchg
addr16
inc
scas
mov
ja
jecxz
mov
mov
mov
adc
xorl
or
les
jp
test
mov
mov
jge
xor
out
lock
out
sub
push
or
xor
push
jle
jo
addr16
pop
std
adc
cmpsl
sub
imul
iret
mov
cmpsl
jecxz
fnstsw
lods
out
das
and
add
or
adc
push
cli
xchg
ret
sbb
mov
push
sub
dec
xchg
addr16
inc
loope
out
out
fucom
cmp
push
jle
inc
aam
jg
xchg
cmp
into
das
mov
out
cmp
dec
ret
jns
xor
test
or
jge
mov
lods
and
sbb
or
cwtl
and
bound
pushf
popf
push
push
je
aas
lret
jae
daa
aam
or
popa
mov
cmpsb
push
lea
int
or
in
pop
sbb
push
insb
mov
mov
mov
les
int
and
das
cmp
add
push
sub
adc
lret
in
xorb
jp
cld
sub
cmc
inc
loopne
lock
out
dec
inc
push
shll
es
sbb
xchg
and
jo
cs
mov
jmp
in
jne
out
mov
mov
ljmp
push
inc
or
push
popf
sub
lcall
sub
push
dec
cmp
dec
push
pop
push
imul
mov
fsubl
mov
mov
push
fucomi
mov
cmp
mov
popf
loopne
xchg
lds
dec
push
je
ss
mov
dec
cmp
lds
or
pushf
lcall
inc
jns
cmp
jnp
xor
or
xor
ret
or
adc
xchg
sbb
inc
sub
mov
sbb
pop
outsb
out
lock
sub
ja
ljmp
nop
inc
pop
and
popa
xor
outsl
int
jb
shl
clc
mov
mov
and
sarb
ret
pop
ja
xor
cmpsb
mov
push
cmp
in
shrl
push
jl
ret
mov
push
std
jmp
mov
pop
xchg
sbb
cltd
ds
leave
shlb
cmp
adc
mov
ljmp
push
xor
push
push
icebp
adc
mov
stos
imul
les
scas
mov
jecxz
dec
out
add
mov
jge
aam
lret
nop
sti
hlt
aaa
fidivl
imul
insb
fldenv
mov
pusha
adc
xchg
call
enter
es
loop
and
jl
jle
or
std
sub
add
jae
js
xor
xor
push
ds
negl
das
bound
or
xlat
daa
inc
pop
push
cmp
shlb
cli
or
pusha
cmc
mov
or
inc
jb
adc
mov
popa
cs
and
fstl
lds
mov
adc
gs
int3
clc
adc
enter
mov
stos
dec
sub
sarb
fcmovnb
jae
pop
pop
pop
je
and
gs
stos
mov
cmp
or
and
dec
out
das
fistps
dec
pop
xchg
push
cwtl
mov
and
pop
int
icebp
movl
in
mov
shl
jno
mov
jecxz
xchg
and
push
push
push
punpcklwd
add
jnp
pop
jnp
pushf
mov
je
adc
and
cmp
out
jb
add
push
or
inc
push
fyl2xp1
test
das
mov
rcll
xlat
sub
fiaddl
sahf
mov
add
jns
rolb
xor
or
aas
push
lock
call
add
scas
mov
push
int
pop
imul
mov
outsl
jns
inc
xor
add
xchg
fs
mov
sub
inc
fldenv
in
pop
sbb
test
cmp
add
ss
mov
movsl
ja
mov
rorb
add
xchg
rep
aam
pop
sahf
leave
xchg
je
mov
mov
mov
lahf
incb
ret
mov
dec
cld
jns
pop
add
cmpsl
frstor
stos
sbb
mov
fldl2t
cld
sbb
push
inc
jae
mov
in
aaa
add
test
dec
nop
dec
xlat
cli
jecxz
jo
lods
push
test
sbb
jne
and
paddsw
jp
je
cmp
push
push
ljmp
movsl
dec
mov
cmp
jmp
add
fimull
aam
es
outsl
scas
imul
push
sub
arpl
mov
cltd
xchg
mov
xchg
iret
mov
fimuls
dec
cld
xchg
pop
int3
sahf
xchg
mov
adc
addr16
adc
das
lea
sub
adc
mov
enter
add
mov
push
mov
cmp
push
mov
sbb
push
loop
leave
lods
sarl
push
xor
mov
xor
in
pop
or
repnz
nop
xchg
lret
sti
jge
mov
pop
cmpsl
stc
fistps
jecxz
pop
arpl
jl
sub
les
jb
push
push
dec
aas
test
jg,pn
lods
push
adc
fwait
popf
pusha
nop
gs
pop
fsub
loopne
cld
les
sub
aaa
mulb
cmp
out
push
loopne
lret
dec
inc
aam
test
and
cwtl
out
scas
cld
fisttps
push
daa
and
sub
xor
jno
mov
inc
insl
mov
iret
jnp
mov
jl
mov
sub
fcmove
lret
sub
lret
push
add
out
clc
and
add
das
add
mov
push
mov
insl
arpl
dec
pop
iret
mov
xlat
daa
rdmsr
call
jnp
adcl
cmp
lock
inc
or
jmp
sub
push
cmpsl
add
cmp
bndldx
ret
ret
cmc
cld
ljmp
bound
add
scas
call
and
mov
fwait
push
mov
dec
ljmp
mov
daa
insl
dec
mov
fnstcw
add
xor
xlat
loop
cltd
testb
xor
jg
sbb
cmpsb
push
or
int
out
iret
sbb
sub
or
imul
fldenv
pop
ja
scas
rcl
or
cmp
fwait
cld
xchg
fidivl
dec
sub
fnsave
imul
xchg
inc
orb
xchg
fwait
mov
mov
add
push
imul
jbe
cld
inc
fs
push
dec
hlt
loop
dec
adcb
push
and
loopne
push
xchg
and
xor
int
rcr
add
mov
sbb
fs
add
movsb
andl
mov
mov
xor
push
into
jmp
jmp
mov
or
lods
or
pop
pop
xchg
adc
mov
hlt
cmp
pop
sti
test
stc
pusha
imull
std
popf
jp
loop
mov
inc
mov
xor
and
cmp
xlat
mov
out
test
frstor
or
xchg
jecxz
scas
ret
cmp
call
bound
cltd
lahf
stos
out
sub
addr16
cmp
lods
xor
xchg
lret
mov
cmp
cmp
loop
lds
mov
cmp
lret
mov
in
inc
out
loop
mov
repnz
das
xchg
xchg
push
xor
lock
jg
mov
xor
jae
jbe
call
in
pop
ja
push
mov
pop
mov
cmp
test
lret
imul
dec
mov
cwtl
decb
push
lds
or
leave
pop
mov
lods
sti
aad
leave
bound
push
inc
dec
xor
mov
mov
dec
rcr
mull
cs
arpl
bound
imul
inc
arpl
jo
adc
inc
test
inc
jecxz
test
or
dec
lods
pop
lods
mov
mov
outsl
ja
mov
loop
mov
or
mov
jae
cmp
lret
jle
push
dec
mov
mov
fdivrs
pop
outsb
and
fsubl
mov
cmp
xchg
xchg
pop
imul
pop
loope
into
daa
pop
sti
xchg
aaa
adc
sbb
shlb
mov
mov
push
mov
lcall
das
xchg
mull
ds
xchg
aam
sbb
mov
mov
push
inc
pop
shll
mov
popf
iret
mov
sbb
pop
icebp
aaa
imul
movsl
jmp
inc
ja
out
leave
mov
out
mov
mov
loop
jmp
add
mov
scas
xchg
test
addr16
add
ss
jb
loop
fwait
dec
jnp
movb
rorl
test
adc
popa
sbb
loopne
stc
pop
or
nop
jb
jge
and
rolb
mov
cmc
xchg
jb
dec
icebp
ljmp
ret
enter
insl
cmpsb
aam
adc
in
data16
scas
sbb
mov
push
lret
out
xchg
and
dec
hlt
lea
mov
outsl
pop
movsb
pushf
insl
ret
sbb
ret
bound
jecxz
ljmp
or
jle
mov
std
pop
xor
rorl
test
xchg
jmp
shl
push
pop
sbb
inc
and
lahf
stos
adcl
rcrl
jecxz
arpl
enter
inc
or
out
mov
or
lods
pushf
cltd
pop
ret
lret
mov
clc
movsb
add
movsb
ljmp
push
sub
and
mov
repnz
fdivrs
jne
leave
mov
insb
or
lock
or
arpl
push
xchg
in
mov
sbb
lock
int3
inc
push
aas
xchg
mov
pop
or
sbb
jl
insb
xor
or
sub
xor
xchg
jnp
xcrypt-ctr
cmpsl
lcall
mov
out
loop
stos
mov
add
idivb
mov
pop
ficompl
push
fsub
cmpsl
mov
xchg
xlat
mov
xchg
jg
test
add
or
sti
test
imul
loope
mov
ja
out
cmpsl
mov
or
or
shrb
lods
stc
rclb
out
enter
and
jle
mov
jle
push
mov
jae
int3
in
adc
jo
mov
imul
adc
pop
ret
sbb
xchg
in
pop
add
sub
push
aas
int
aas
mov
sbb
add
cltd
jb
jb
and
pop
daa
mov
fdivs
ret
add
fnstcw
stos
mov
xor
xchg
negl
xor
mov
and
push
shlb
fdivs
ror
and
lcall
shll
pop
sub
aaa
test
xchg
add
mov
mov
push
dec
cmp
or
rcrb
lcall
scas
sbb
insl
in
subb
pop
incl
or
mov
pop
pop
into
lds
lret
enter
add
lcall
jno
ljmp
sub
sub
mov
les
push
mov
push
push
cmp
mov
adc
in
sub
mov
pop
jbe
pushw
xchg
roll
mulb
jne
jo
sbbb
push
dec
orl
add
cwtl
in
pop
pop
jo
les
decb
inc
loopne
out
dec
aad
movsb
imul
into
pop
adc
sub
xchg
das
mov
repnz
negb
xlat
push
xor
xor
pop
or
std
pop
ljmp
idivb
and
lods
push
popl
lods
and
sub
out
pop
std
in
push
mov
jle
pop
jge
mov
mov
mov
pop
fbstp
add
lea
std
or
mov
adc
outsl
jo
xchg
cltd
stos
sbb
in
jl
aam
cld
push
add
mov
lock
adc
pop
jecxz
and
in
std
mov
xor
lea
call
aas
inc
stos
dec
dec
test
test
cmp
cmpb
xor
adc
lret
push
out
std
pop
xor
adc
xchg
into
pop
popa
mov
xlat
insl
or
dec
outsb
inc
pushf
or
sub
jl
stos
add
test
inc
push
fidivl
jg
jmp
addr16
in
push
push
push
orb
push
add
mov
adc
push
icebp
push
inc
negl
enter
mov
movsl
jg
lods
dec
or
cmc
pop
adc
es
icebp
add
add
les
cli
xor
sbb
mov
jge
into
cmpsb
push
ret
pop
jge
aas
xor
outsb
push
mov
lcall
pop
adc
push
mov
int
xchg
aaa
mov
adc
loop
out
cmc
insb
add
mov
pop
dec
pop
sbb
dec
cwtl
sub
iret
loope
mov
iretw
addr16
cmpsl
dec
and
test
mov
jp
addl
mov
and
lahf
cmpsl
fadd
jmp
and
sbb
or
arpl
mov
xchg
repnz
xchg
or
dec
rcrl
push
lds
fisttpll
sbb
mov
sbb
loopne
mov
fists
xor
inc
add
nop
mov
sbb
cmp
xchg
in
jns
in
or
mov
push
mov
xchg
pop
in
xor
aad
inc
jne
repnz
nop
pop
xor
dec
push
fnstsw
xor
jl
add
rcll
je
stos
sbb
icebp
sub
imul
sub
pop
push
outsb
js
in
mov
mov
mov
inc
inc
jg
sbb
mov
ss
sub
insb
pop
inc
cmc
xor
cmpsl
icebp
cltd
xchg
xchg
imulb
xchg
xchg
sar
jg
stos
leave
dec
mov
lods
jmp
adc
cmpsl
repz
cli
jo
push
int3
dec
lret
adc
test
dec
ret
sub
stos
inc
stos
jne
mov
sbb
push
or
pop
mov
adc
stos
mov
ds
jbe
ds
je
push
xor
leave
std
lret
aaa
xor
into
inc
shrb
xchg
sbb
or
repz
cmp
loop
pusha
test
pusha
adc
mov
jbe
stos
out
mov
in
fsubl
adc
pop
mov
lods
divb
jle
fs
or
fdivrs
inc
cltd
dec
in
insb
sbb
mov
loope
jg
mov
xor
lods
jmp
pop
fwait
jl
push
test
cwtl
cmc
inc
xchg
ljmp
inc
sarl
sub
mov
aaa
aam
int3
lods
addr16
jne
push
cmp
inc
out
mov
sbb
dec
sbb
cmpsb
lahf
fcomps
repnz
mov
add
rol
lret
xchg
jnp
leave
xchg
lahf
jae
mov
jecxz
add
dec
data16
mov
mov
push
or
aas
xor
stc
xor
enter
je
jno
ficoms
push
or
and
mov
out
arpl
dec
jmp
xor
jl
dec
std
add
imul
dec
int
shl
aad
add
xlat
or
fcomps
mov
mov
inc
mov
mov
ror
push
les
les
mov
popa
inc
mov
lret
cld
dec
fcompl
lods
pop
mov
mov
sub
into
add
push
js
pop
jno
pop
cld
xlat
in
imul
inc
repz
enter
lcall
in
ret
in
cld
cmpb
icebp
insb
stos
fisubl
adc
push
pop
mov
add
pop
cwtl
loope
inc
or
xchg
sarl
rcl
repnz
or
aas
bound
stos
ss
aad
jg
out
outsb
pop
jne
out
mov
inc
jl
cmp
jg
out
mov
bound
xor
pop
leave
mov
iret
ret
and
pushf
mov
out
sbb
sub
ja
push
jbe
mov
hlt
cmpsb
inc
mov
mov
xlat
scas
jnp
xor
inc
cmpsb
sbb
cld
js
cmp
add
xor
adc
mov
mov
adc
xchg
testb
inc
dec
xchg
ficoms
sarb
pop
inc
scas
test
pop
popf
cmp
jl
js
cmp
ret
pop
clc
mov
adc
sbb
sar
sub
inc
bound
in
push
mov
sbb
xchg
stos
xor
aad
imul
pop
in
fdivr
jbe
xlat
inc
xchg
out
xorl
das
scas
pop
aad
mov
pop
les
mov
loopne
add
jae
pop
negl
cld
dec
mov
lds
xor
orl
les
rcrl
in
imul
cs
pop
or
cltd
iret
adc
scas
push
or
scas
jae
aas
mov
cmc
add
or
lret
dec
push
jnp
xor
je
iret
xchg
scas
lret
shll
outsl
mov
jmp
xchg
ja
movsb
shll
cli
addr16
icebp
push
mov
ss
in
pop
fldcw
and
pop
dec
jg
push
insb
or
cmp
test
and
fwait
inc
mov
mov
xor
jbe
xorl
adc
push
fwait
mov
push
jo
dec
arpl
cltd
sbb
mov
insb
lahf
loop
ficompl
xchg
stos
rorb
in
push
inc
mov
movsb
ljmp
out
enter
addb
sbb
test
dec
xchg
pop
inc
out
cmc
adc
add
or
lods
rorb
mov
cmp
dec
or
dec
popa
push
add
push
aam
enter
mov
decl
xor
pusha
xor
lcall
in
aam
push
jle
addr16
jl
jg
push
dec
push
addr16
mov
jbe
lret
jp
adc
mov
mov
es
addr16
pop
push
jge
fistps
add
pop
sbb
dec
jmp
mov
sub
movl
lcall
cmp
mov
pop
add
xor
or
mov
cmp
repz
enter
pop
jo
rorb
stos
jne
scas
jle
test
mov
sub
in
inc
and
pop
gs
cmp
sub
movsl
lcall
sub
inc
mov
dec
lods
mov
pop
inc
in
in
dec
xchg
dec
cmp
fdivrs
lcall
xorl
or
and
xchg
cmp
mov
inc
icebp
pop
add
mov
ret
and
es
cmp
pop
push
mov
cmp
dec
xor
loop
lea
mov
adcl
lret
pop
jecxz
or
pop
or
ret
cmp
pop
rcll
push
or
cs
loope
adc
out
jns
xchg
jno
xlat
in
or
sbb
rcll
lock
jmp
addb
pop
call
sub
movsl
jb
lcall
pop
enter
sub
sbb
cmpsl
add
push
sbb
add
mov
cld
pop
shll
fucomi
incl
lds
cld
sub
insl
shr
cmp
aaa
push
xchg
xor
loop
not
in
movsl
dec
xor
pop
aad
sub
cmpsl
mov
xor
jmp
repnz
stos
mov
cltd
outsb
mov
add
daa
jmp
push
bound
jo
jmp
or
sub
xor
out
ret
inc
jp
out
scas
xchg
push
sub
addr16
hlt
xchg
inc
std
pop
lahf
out
hlt
stc
test
xor
loop
dec
fnstenv
and
adc
sar
xchg
sbb
mov
xor
cwtl
jp
add
xchg
lods
mov
push
fld
jge
pusha
cs
imul
shlb
mov
test
sbb
dec
mov
xchg
xor
push
xchg
sarb
mov
and
or
insb
imul
out
mov
jl
sub
add
ret
adc
shr
ljmp
push
out
out
punpckldq
mov
sbb
dec
sbbl
push
inc
daa
mov
sbb
mov
push
addr16
loopnew
push
neg
push
pop
adc
pop
cltd
sarl
push
cli
jnp
mov
push
cmp
push
add
adc
cmc
adc
popa
mov
mov
mov
dec
or
jmp
lock
adc
out
dec
out
sbbl
mov
inc
js
in
mov
cmpsb
adc
add
inc
in
inc
addl
cmp
cwtl
mov
movsb
cmpsl
jmp
cmp
adc
xor
xchg
jns
mov
jle
adc
push
dec
movsl
and
or
dec
xlat
dec
ds
and
shlb
xor
push
push
lock
pop
sub
fisubrl
fldcw
out
pushf
lcall
jg
sbb
aad
mov
inc
xchg
xchg
stos
lcall
push
and
adc
mov
cmpsl
jge
sarb
mov
cmp
cmp
xor
movsb
mov
pop
push
std
vcomiss
adc
xchg
sub
jge
push
outsl
pushf
stos
fcompl
push
pop
add
int3
mov
cmc
xor
dec
inc
pusha
cmpsl
scas
cmpsb
xchg
jnp
pop
push
dec
aaa
xchg
testb
sarb
dec
and
test
aas
jle
xor
jmp
push
mov
or
and
loop
ret
je
dec
inc
cli
xor
xchg
pop
js
iret
dec
repz
and
into
mov
push
cld
insb
jge
push
out
sbb
adc
movsb
les
mov
gs
hlt
push
fsubl
mov
jbe
int3
repnz
jbe
push
dec
clc
scas
adc
fdivrp
xchg
enter
in
lret
movsl
imull
repz
into
sahf
pop
mov
mov
mov
idivb
insb
push
inc
mov
dec
sarl
mov
xchg
bound
mov
adc
lss
insb
fsubrl
adc
mov
leave
movsb
xor
sbb
stos
sbbl
movsb
hlt
push
orl
xor
mov
mov
cmpsl
or
inc
cli
and
arpl
push
sti
mov
popf
inc
sti
mov
addb
inc
in
dec
popf
in
cmp
push
mov
pop
mov
test
lods
adc
mov
mov
pop
push
lock
int3
push
pusha
mov
shll
movsb
or
ss
test
pop
testb
xlat
inc
insb
loop
push
add
add
scas
xor
xor
dec
xchg
fnstenv
call
jge
cmpsl
in
pop
xchg
add
xchg
mov
dec
shrb
cmp
lea
push
andl
mov
fmul
popf
sahf
testl
loop
outsb
addb
xchg
repz
pusha
xchg
and
jg
scas
xor
sub
cwtl
and
xchg
xor
xchg
push
jge
xor
repnz
icebp
xor
push
mov
push
inc
mov
push
inc
inc
ja
xchg
out
mov
shll
push
test
hlt
jp
dec
es
jb
push
loop
mov
out
push
xlat
mov
es
jbe
jle
insl
xchg
sbb
adc
xchg
xchg
mov
mov
adc
out
xchg
lods
add
int3
inc
adc
repz
roll
iret
sbb
xor
and
into
sbbl
lcall
mov
inc
lds
ret
sti
jbe
or
mov
mov
push
adc
movsb
and
insl
xor
xor
push
sub
loope
stc
es
dec
lcall
add
nop
sbb
mov
rcll
dec
push
mov
push
imul
gs
jecxz
mov
pop
sub
notl
fcoms
loop
sbb
fisubrs
xor
pop
cli
pop
cmp
mov
sub
mov
cmp
and
icebp
sar
xor
lods
decb
jne
or
test
mov
rcl
and
push
mov
into
mov
pop
ficoms
lret
inc
or
dec
in
pop
push
add
or
mov
subl
out
fnstenv
and
fists
ds
jno
adc
inc
pop
cmp
fistl
pop
jbe
jno
inc
cs
les
leave
test
call
mov
enter
scas
lahf
mov
push
hlt
sub
rolb
pusha
add
or
sbbl
jo
sub
mov
fcoml
mov
test
int
cwtl
sbb
and
lds
and
xchg
ficoml
stos
dec
dec
popa
fsubs
inc
pop
jecxz
or
cmpsl
mov
jl
bound
mov
addr16
xchg
push
int
mov
jp
popf
adc
popf
cmovnp
inc
push
cmp
in
jb
xor
sub
inc
jle
dec
mov
in
stos
sbb
xor
jnp
adc
sbb
daa
stc
jl
insb
lods
sub
sbb
mov
jb
lods
cmp
dec
mov
or
lds
scas
push
mov
ret
ret
sbb
lahf
out
jno
push
or
jns
jge
or
stc
inc
mov
jb
mov
ror
loope
adc
xchg
loopne
andb
loope
icebp
jae
ds
and
jnp
out
adcl
lock
scas
leave
test
push
push
shlb
or
ds
in
mov
sti
add
decl
pusha
outsb
jmp
mov
mov
sub
sbb
mov
adc
dec
cmp
sub
pushf
mov
psllw
js
addr16
sub
addr16
xor
push
sub
dec
add
adc
mov
and
lods
scas
cmp
iret
je
xor
add
xchg
ja
pop
jb
xlat
add
xor
pop
mov
cmp
cmpsl
xchg
xor
stos
xor
pop
jnp
outsb
int3
xchg
push
cmpsl
sarl
cmp
push
lea
ret
sbb
daa
jb
jbe
mov
pop
int3
dec
aas
add
aam
out
ja
loope
mov
fnstsw
and
icebp
imul
pop
shlb
mov
in
loopne
mov
fisttpll
mov
aam
cmp
fcmovne
outsb
add
scas
or
pop
scas
cmpsb
mov
adc
and
enter
and
repz
shr
xor
pop
popa
mov
or
ret
cmp
add
xchg
lea
add
sub
in
aad
fcoml
insl
dec
inc
sub
fisttps
adc
and
inc
cwtl
push
add
mov
shrb
shl
push
fbld
lods
icebp
cmp
ret
sub
xchg
out
mul
imul
lahf
cmpsl
push
sub
nop
arpl
enter
test
movsl
push
sub
es
lds
jecxz
call
cmp
dec
sti
add
loopne
add
jnp
insl
lods
jmp
es
call
lcall
lahf
jmp
pop
es
xchg
jmp
pop
sub
int
sub
mov
les
test
iret
adc
test
test
fs
pop
push
nop
int
sti
and
inc
pop
inc
pushf
mov
je
int3
js
push
addr16
dec
shll
cs
clc
pop
cmp
mov
dec
scas
jb
push
test
int3
sbb
lds
aaa
mov
mov
dec
and
lock
cld
test
scas
push
je
add
rcrb
in
add
pop
push
in
insb
xchg
jnp
das
call
push
jl
lret
lods
stos
in
cli
xchg
es
out
lds
stos
jecxz
lea
sbb
test
ss
mov
pop
movsl
or
xchg
inc
mov
pushf
xchg
or
dec
ror
jmp
jecxz
test
and
lods
mov
push
jle
xchg
test
push
and
fbstp
inc
lds
pop
cmp
divb
mov
in
mov
shl
insb
pop
mov
xchg
jl
and
addl
movsb
out
pop
jne
dec
mov
sbb
fwait
les
js
int3
mov
add
sub
aam
popf
push
inc
mov
ss
jecxz
jne
push
es
lahf
jecxz
mov
inc
lods
inc
xor
adc
pusha
push
push
adc
and
mul
leave
xchg
sub
dec
jno
xchg
scas
jp
sub
xor
pushf
add
jno
outsl
jns
xor
rcll
inc
stos
xchg
stos
dec
push
cwtl
mov
aas
nop
inc
xor
imul
mov
cld
mov
lock
sti
jb
subl
xchg
xchg
add
hlt
cmp
clc
sub
jge
insl
out
cmpsb
jg
imul
mov
js
xchg
xor
stos
scas
lock
push
xor
adc
fcoms
sub
loope
push
mov
jge
or
outsl
ret
push
fidivrs
subb
mov
dec
dec
lea
xchg
xchg
ret
popf
lahf
test
sbb
sub
pop
cwtl
sbb
push
add
test
xchg
movsl
bound
push
mov
scas
mov
and
sbb
mov
xchg
mov
test
outsb
mov
test
aas
jns
lods
cld
jp
xchg
or
jne
dec
xor
and
pop
pop
pop
adc
sbb
mov
pop
cld
rcrl
mov
jge
outsl
sahf
sub
andl
daa
add
xchg
jmp
or
mov
out
daa
jbe
adc
imul
inc
jnp
xchg
pop
outsl
or
int3
push
add
sbb
push
dec
out
fisubrs
shll
fcmove
out
push
xor
or
sbb
inc
or
fisubs
mov
push
test
jns
push
cmp
das
mov
pop
repz
mov
daa
call
rcrb
push
sbb
lret
and
or
fstl
dec
mov
les
adc
ljmp
out
outsb
cmp
mov
pop
dec
mov
mov
push
addr16
cmp
shrl
xchg
jne
loopne
add
sub
add
xlat
pushf
dec
pop
icebp
push
push
lods
inc
fstps
scas
dec
jecxz
jecxz
insl
pop
cmp
dec
fcmovne
pop
test
int
cmp
xor
and
push
lods
jae
jb
lea
push
sub
sbb
ret
dec
es
repnz
es
inc
cmp
xor
mov
nop
shll
sub
jge
xor
mov
cmp
out
call
outsb
test
xchg
orl
sub
mov
jecxz
dec
push
loopne
pop
imul
xchg
repnz
mov
subb
add
insb
jno
inc
push
insl
pop
jnp
aam
jno
jbe
cmpsb
stos
sar
sub
mov
jl
and
mov
insb
daa
scas
imul
sub
xchg
mov
fisubl
push
and
loop
inc
jno
jnp
jae
jp
je
mov
mov
jg
fisubs
sbb
pop
pop
push
dec
cmpsb
mov
mov
push
adc
xor
jge
or
sti
pop
lahf
and
pushf
test
xchg
xorl
je
pop
push
popa
gs
push
or
adc
addl
add
popf
addr16
sti
sub
xor
outsb
mov
sbb
in
add
xchg
cmc
imul
outsb
sahf
stc
sub
in
sub
testl
push
loope
pop
add
jns
test
push
cltd
movsb
and
test
sbb
out
not
fdivrs
jns
out
cmp
sbb
push
push
lods
xchg
ret
mov
loopne
inc
push
cmp
enter
fsubr
cmp
mov
fisttps
sub
pop
xchg
daa
sbb
and
mov
into
jecxz
hlt
test
testl
insl
aas
cmp
push
push
cmp
or
mov
dec
pop
mov
push
lahf
leave
js
jo
lods
sub
xor
cmp
xor
or
jmp
pusha
dec
in
mov
or
dec
aas
inc
out
in
dec
sub
setae
dec
mov
push
jp
insb
into
les
or
ret
hlt
popa
sbb
popf
dec
jg,pn
nop
mov
out
ja
sti
xchg
cmp
loopne
or
push
js
icebp
fwait
lock
add
lret
and
mov
cmp
mov
jecxz
dec
dec
adc
mov
mov
or
mov
cmc
leave
int3
fwait
lcall
push
dec
and
imul
jno
push
fldcw
dec
mov
nop
loopne
bound
dec
push
lods
ret
xchg
and
sahf
and
mov
mov
pushf
sbbl
mov
mov
mov
lret
cmp
enter
push
xchg
mov
je
xor
jb
cltd
sbb
cmp
inc
daa
stos
leave
jnp
int3
cmc
sti
lahf
iret
repz
cmpsl
iret
cmc
popf
add
fisubs
clc
pop
fwait
fwait
mov
push
mov
lret
jbe
test
cmpsb
inc
insb
out
xor
out
sti
cmp
jns
stc
pop
icebp
mov
aam
jnp
pop
xor
das
cs
xor
inc
cmp
xchg
stc
cmp
mov
sarb
sbb
icebp
in
or
push
sbb
jl
adc
stos
negb
and
pop
pop
add
push
fwait
jae
pop
jns
inc
stc
pop
cmp
mov
test
pop
aad
cmpsl
and
mov
mov
xor
pop
mov
mov
imul
jmp
dec
push
fisttpll
jb
jmp
bnd
dec
mov
bound
mov
leave
pop
gs
mov
lock
cmp
cmc
sub
rclb
fnstenv
fwait
dec
pop
push
and
fwait
jnp
mov
ljmp
das
je
je
jle
and
loopne
popa
stc
fstpl
mov
jns
mov
jge
cli
jge
or
jcxz
cmpsl
pop
push
adc
psrld
xchg
sbb
out
test
xchg
dec
jnp
int
rcr
jns
outsb
xor
pusha
lcall
arpl
ror
cs
pop
pop
stc
and
sti
mov
mov
in
stos
jge
push
jb
cs
inc
lahf
pop
int
test
xchg
je
add
sub
imul
adc
popf
sbb
mov
sarb
outsb
lret
mov
in
fisubrl
adc
mov
fmull
gs
add
cmpsb
ja
sarb
rolb
or
cmp
jns
andb
add
adc
stos
cmp
mov
ret
call
mov
pop
incl
test
stos
sbb
jb
adc
scas
arpl
int3
pop
push
xchg
xchg
outsl
inc
orb
clc
frstor
mov
add
pop
in
cmp
popa
inc
or
xchg
inc
leave
lock
mov
push
imul
and
inc
mov
and
pusha
xchg
cs
daa
inc
jecxz
mov
into
adc
mov
in
lcall
lret
mov
dec
fwait
rcr
outsl
dec
inc
and
test
mov
push
dec
shll
xor
flds
lcall
inc
iret
pop
push
or
mov
push
pop
dec
sbb
lret
or
xor
cmpsb
cs
xchg
xchg
repz
fisubrs
jg
loopw
out
sub
ffreep
aam
inc
insl
imul
sub
imul
inc
stos
cwtl
arpl
xlat
add
loopne
fists
movsl
js
dec
mov
inc
int3
xor
fidivrs
jb
movsl
jnp
dec
je
addb
push
popa
clc
mov
lret
outsl
sub
lret
and
lods
dec
mov
sbb
fbld
adc
pop
lret
adc
pop
fs
ja
push
mov
sahf
shl
icebp
mov
push
outsl
or
mov
repnz
cmp
js
xchg
pop
and
mov
lahf
stc
mov
xchg
div
cmpsl
mov
inc
pushl
inc
dec
jl
insl
cmp
mov
dec
insb
xor
dec
dec
push
inc
push
stos
mov
popl
cmc
xor
pushf
icebp
jne
pop
das
dec
movsl
xchg
ja
xor
cmp
cli
in
push
shlb
and
add
icebp
aaa
adc
mov
inc
es
lods
negl
dec
cli
data16
fistps
movsb
jbe
orl
pushf
test
inc
fsubl
jne
mov
clc
sbb
adc
dec
push
cmp
mov
add
test
jecxz
push
mov
mov
mov
das
xor
adc
sub
mov
fisubs
out
or
lock
mov
inc
out
mov
call
ljmp
sub
out
out
jbe
test
lcall
push
pop
cmp
xchg
mov
mov
into
ret
dec
fmul
push
pop
adc
and
enter
clc
lcall
cmp
cmpsb
lock
push
shl
xorl
jg
movsb
pop
mov
or
adc
sbb
jae
sbb
fistl
pop
imul
xor
mov
xor
pop
inc
sub
xchg
xchg
lock
rorl
adc
repnz
xchg
loop
xorl
dec
mov
pushf
dec
or
and
shrb
add
pop
xchg
addl
cmpsb
ret
jb
out
lods
mov
jnp
ror
mov
cmp
popa
cmp
pop
lods
inc
test
scas
add
fnstcw
mov
adc
fsubr
add
xchg
sub
mov
adc
in
xchg
mov
out
and
cltd
mov
les
in
clc
add
dec
popf
lea
popf
add
lods
push
pop
mov
fs
adc
jns
mov
xor
push
mov
xor
in
ja
or
mov
popf
xor
lret
adc
jmp
add
shlb
cmp
rclb
xchg
add
loopne
loopne
data16
aas
pop
jno
add
rcll
and
jg
jmp
xchg
pusha
mov
cmc
mov
mov
movsl
lock
dec
movd
fstpl
jmp
lcall
xor
xchg
sbb
ljmp
sbb
sub
mov
sbb
dec
fsub
fwait
nop
in
xor
incl
std
leave
mov
lock
lods
mov
popa
mov
xchg
cs
push
sub
in
sub
xchg
adc
dec
xchg
fcompp
repnz
or
and
adc
lock
pop
movsb
cmpsb
xchg
daa
daa
sbbb
jg
lahf
lds
jle
cmp
xchg
outsb
retw
xor
es
call
push
mov
clc
jecxz
xchg
out
adc
mov
jp
mov
add
xchg
mov
cmp
fucomip
jno
and
loope
data16
lock
insl
lret
rcl
xchg
jns
inc
setne
pop
aas
lock
loope
adc
inc
push
cmp
xor
jecxz
mov
sub
jg
or
mov
aas
or
fldcw
sub
push
fcmovu
mov
xor
inc
or
xor
dec
repz
into
jg
shlb
cmpsb
mov
pop
shl
and
jp
adc
rolb
xchg
cmp
std
push
mov
mov
push
mov
lods
in
sbb
icebp
mov
flds
shll
pop
jnp
push
das
lea
dec
dec
sbb
fisttpll
aas
dec
arpl
les
adc
mov
xchg
xchg
dec
jp
iret
aam
arpl
loop
add
cs
push
pop
and
in
movsl
repz
adc
clc
mov
pop
imul
scas
xor
pushf
jb
lds
jnp
jecxz
pop
add
xchg
sbb
mov
cli
sar
rclb
xchg
fsubl
out
mov
and
sub
xor
notb
adc
pop
subb
into
mov
pop
jle
mov
jo
sbb
outsl
jecxz
aad
insb
imul
clc
xor
lcall
jbe
stos
dec
or
xchg
jo
popf
movsl
mov
jg
stc
in
jo
cmpsb
filds
jge
add
pshufw
or
movsl
out
int
das
xor
fstpt
outsl
xor
mov
ret
xlat
or
outsb
xchg
stos
pusha
stos
and
add
mov
mov
adc
scas
xor
cs
mov
or
mov
sub
jnp
ret
test
adc
xchg
mov
enter
jno
adc
ljmp
xchg
mov
push
or
fwait
leave
sysret
out
hlt
xorl
push
push
loopne
out
loop
hlt
cli
jne
push
mov
mov
jno
insb
mov
push
fists
jbe
int3
js
nop
jmp
and
es
pop
xor
movsl
shrl
xchg
jae
pop
xchg
dec
jae
insb
int3
jge
or
test
or
push
jae
inc
ret
leave
adc
sbb
add
lret
or
out
xor
push
sbb
loop
ja
std
push
jae
clc
adc
mov
and
shlb
xchg
out
jle
push
add
pop
jmp
dec
mov
hlt
int
into
push
ljmp
adc
sarb
lret
add
in
cmpsl
mov
addr16
mov
push
mov
push
adc
in
and
mov
arpl
jbe
cmp
ret
dec
xor
negb
cli
pop
xchg
bound
cli
stc
out
lods
rclb
je
notl
mov
stos
call
or
aaa
jmp
stos
pop
jmp
pop
cld
sub
push
mov
add
lds
ja
dec
sub
aam
movsb
pop
test
xor
and
rorl
dec
xchg
jns
aas
adc
cld
or
stc
inc
mov
or
xor
fdivs
jge
pop
sub
fists
mov
nop
iret
cmp
jp
test
mov
lds
sub
xlat
pop
add
pop
cmp
xchg
fs
jno
xor
jb
dec
in
sarl
push
test
fdivs
fwait
inc
add
arpl
xchg
aas
mov
out
dec
loop
mov
fimull
jg
mov
or
or
pop
mov
mov
fwait
and
sbb
jecxz
xchg
lods
fstl
xchg
push
es
iret
mov
jge
sbb
pop
out
enter
fstl
mov
adc
add
xchg
mov
ja
lret
mov
push
push
inc
or
sub
jb
mov
mov
loop
xlat
sti
jecxz
rorl
and
push
cmp
test
jmp
push
hlt
cmc
adc
adc
rcrl
jmp
adc
and
in
or
sbb
imul
stos
xchg
jo
lds
cmp
xor
scas
daa
mov
adc
lcall
rolb
xchg
rcrl
jbe
cmp
pop
out
pop
xor
or
iret
and
and
js
sub
adc
or
les
xor
test
or
inc
jno
ror
out
push
pop
cld
jg
push
push
mov
or
movb
jecxz
ja
xor
aam
mov
or
pop
call
mov
fcompl
and
in
sbb
mov
imul
push
mov
mov
dec
ret
dec
inc
lods
mov
inc
mov
mov
dec
cmp
and
pop
push
inc
add
mov
mov
les
cmp
movsl
push
in
dec
or
xor
insl
sub
es
mov
dec
inc
rcll
out
push
out
mov
mov
jge
push
lahf
insl
jno
and
jo
xchg
or
nop
inc
fidivrs
popf
paddw
and
icebp
fnsave
push
inc
mov
mov
push
scas
outsb
mov
sub
call
mov
mov
push
cltd
mov
mov
fisubs
test
sbb
cmp
sbb
mov
stos
cmp
out
xor
subb
cwtl
pop
add
cmp
hlt
pop
mov
faddl
imulb
hlt
mov
inc
imulb
das
adc
test
jb
adc
mov
in
inc
adc
test
pop
lods
fmuls
shl
push
fidivs
into
stos
mulb
outsb
daa
std
xchg
loopne
ss
imul
iret
or
push
loopne
icebp
imul
mov
xchg
nop
lds
arpl
mov
or
shll
pop
jne
fadd
sarl
mov
fs
xchg
out
mov
js
int
bswap
aas
lds
rcrb
cwtl
jno
xchg
and
mov
cmc
shll
pop
mov
test
daa
mov
repz
mov
loope
lret
incb
push
and
xchg
int
lock
cmp
enter
add
in
lret
test
or
dec
and
push
xchg
sti
mov
xchg
push
or
cmp
imul
jmp
or
shl
test
into
inc
int3
xor
cltd
sub
mov
add
cmp
sbb
xor
pusha
fadd
cmpsl
popf
pushf
ds
xchg
mov
push
mulb
push
iret
fidivrl
adc
outsb
iret
mov
test
sub
out
cld
imul
pop
lods
loopne
mov
ljmp
add
inc
push
out
and
mov
xor
dec
jne
loop
adc
jnp
adc
test
mov
mov
ds
test
in
lret
push
jns
adc
and
mov
ret
inc
imul
dec
das
adc
adc
jbe
xor
movsl
mov
mov
mov
sbb
mov
test
sbb
test
bound
insl
sbb
mov
in
mov
adc
repz
daa
loope
stos
int
mov
lea
xor
push
jmp
pop
mov
sbb
stos
jp
inc
mov
cmpsb
mov
bound
pop
loop
ja
mov
push
lahf
pop
jae
xlat
fisttpl
sahf
bnd
movsl
call
outsb
sbb
push
movsb
outsb
pusha
mov
dec
xorl
cmp
dec
scas
mov
dec
and
fstl
es
pusha
xor
ret
jge
jno
ljmp
lret
push
sbb
sar
push
ds
jo
insb
push
negb
xchg
gs
es
xlat
adc
cltd
cmp
mov
inc
pushf
mov
dec
test
jae
xchg
and
das
mov
in
pop
loope
ret
cmp
in
clc
mov
add
mov
push
pop
mov
jmp
movsl
add
xlat
jbe
cmp
arpl
cmp
es
xchg
mov
pop
arpl
aas
xchg
sbb
jp
adc
lods
dec
lods
dec
outsb
cli
leave
dec
int
daa
arpl
cmpb
test
mov
jbe
lahf
add
sahf
iret
dec
mov
push
cmpsb
int
xchg
xchg
mov
repz
mov
mov
cmc
xor
inc
outsl
adc
mov
fs
cmp
movsl
push
sub
or
xchg
lods
int3
mov
fnstcw
addl
test
add
fwait
in
push
add
movsl
mov
out
scas
xchg
fidivl
dec
cld
imul
leave
movsl
test
test
add
stos
dec
xchg
mov
sub
les
adc
loopne
shll
and
add
or
insb
fnsave
inc
dec
aad
jmp
lds
rcrl
adc
imul
mov
xchg
dec
jle
add
stos
and
jns
stos
push
nop
mov
xchg
mov
int3
lret
push
pop
dec
sti
hlt
popf
mov
mov
std
xchg
inc
stc
xchg
cmp
cmp
mov
xchg
and
aas
or
out
mov
hlt
lcall
mov
mov
and
sbb
negl
inc
leave
inc
test
jae
adc
xchg
in
jmp
nop
cmpsb
mov
insl
sahf
dec
sbb
push
jae
and
mov
jno
fdivr
loopne
nop
jp
mov
test
int
add
xor
sub
sbb
jno
xchg
dec
out
cmp
sbb
xchg
fbstp
ret
cmp
cmpsb
arpl
mov
mov
inc
add
lea
lahf
data16
cmp
aam
adc
lret
out
push
test
and
push
push
sbb
imul
or
movsl
sub
xchg
and
imul
inc
lret
stos
test
mov
sbb
cmpsl
add
mov
push
nop
push
dec
mov
psubusw
ret
xchg
inc
test
xchg
divb
adc
push
movsb
xor
cmp
out
gs
xor
mov
xchg
rolb
sbbl
sub
fdivrp
push
out
cmc
xchg
xor
mov
cli
push
sub
fwait
clc
push
sub
ja
insl
notb
pop
fistpll
cmp
loope
mov
cmc
fcmove
clc
push
pop
dec
clc
xor
sub
jno
jge
and
adc
mov
sbb
mov
dec
rolb
ja
mov
sbb
inc
push
inc
mov
out
lea
inc
ret
test
imul
repnz
and
fdivrl
jp
int3
lret
jge
daa
mov
dec
repz
addr16
jno
add
outsl
lcall
jb
fcmovu
data16
jb
mov
pop
testb
ds
lea
mov
movsl
lret
jbe
mov
out
in
ret
adcl
push
in
mov
xrelease
xchg
cmp
mov
jg
pushf
leave
test
adc
mov
insb
mov
or
mov
sbb
xchg
push
jae
inc
lods
adc
xchg
insl
add
mov
repz
es
leave
cld
aad
push
andb
inc
pop
sub
js
testb
invd
or
mov
rorb
dec
or
ljmp
xor
xor
mov
movb
rorb
aad
in
xor
inc
dec
incl
rcr
loopne
or
in
mulb
mov
cmp
mov
xlat
adc
mov
movsl
mov
inc
inc
rcrl
jp
rol
mov
ret
push
cmp
out
inc
fidivs
pop
dec
test
insl
and
fsubrs
mov
cmp
and
gs
mov
pop
loopne
int
cmc
outsl
ss
fldcw
into
add
ljmp
int3
rcrl
jo
lea
mov
or
jecxz
fdiv
xor
mov
or
mov
pop
mov
ljmp
lods
filds
cltd
jge
lods
stos
sbb
bound
jno
mov
mov
idiv
sub
xor
sbb
fistpl
pop
cmp
mov
xor
xor
mov
aaa
xchg
mov
repnz
sub
push
pop
jbe
push
sub
push
push
push
sub
mov
pop
push
imul
aas
js
pushf
pop
jg
jno
xchg
out
adc
leave
inc
imul
inc
push
cld
out
pop
gs
loope
push
mov
ror
mov
push
and
div
pop
leave
outsl
icebp
sbb
gs
ja
jl
das
push
repnz
and
xchg
sbb
lods
lret
aad
cmpsb
jmp
ror
aaa
mov
mov
xchg
sub
sti
adc
lcall
xchg
les
mov
sbb
mov
fdivs
dec
or
aas
popa
loopne
outsb
outsb
mov
pop
scas
jl
mov
les
pop
daa
xchg
lods
cmp
cmpsl
dec
imul
xor
inc
or
pop
icebp
mov
data16
dec
cmp
fdivrl
iret
xorb
push
mov
xchg
sbb
xchg
and
clc
xchg
or
xor
enter
lds
dec
out
leave
lods
mov
inc
lahf
mov
push
xor
test
insl
ljmp
clc
aam
jb
dec
std
lret
je
push
lods
loop
ret
notl
popf
sub
movsb
in
popa
outsb
out
sbb
add
xchg
push
xor
mov
sbb
pop
test
inc
xchg
cmp
mov
ret
pop
lods
jmp
shll
cwtl
imul
pop
stos
daa
xchg
and
xchg
out
dec
popf
add
fidivrl
sahf
lods
pop
sub
sbbb
fldcw
or
xchg
jmp
test
mov
movsl
fs
mov
imul
dec
fsubs
lock
fdivr
cmp
nop
pop
imul
sbb
mov
mov
mov
imul
cmp
or
sbb
arpl
push
mov
jbe
repnz
mov
jp
inc
je
jnp
mov
imul
iret
add
adc
hlt
int3
jb
adc
les
cmp
outsb
shll
xchg
stos
repz
sub
ja
inc
lret
jl
js
outsb
mov
and
dec
or
mov
pop
mov
push
sti
adc
jae
sbb
out
sbb
adc
test
mov
add
jp
lods
inc
bnd
jb
orb
dec
sahf
test
mov
mov
test
insl
pop
dec
gs
arpl
rcrl
subl
loopne
cld
fldt
and
sub
sbb
cmp
add
popa
dec
outsb
mov
aaa
jmp
in
cli
popa
add
mov
mov
shll
jmp
push
sbb
xor
pop
mov
mov
sbb
in
sarl
add
adc
fisubrl
aaa
js
sahf
out
xor
lods
repz
inc
ja
mov
mov
jp
jge
xchg
orb
push
in
mov
pop
mov
loopne
iret
subb
sarb
cmp
rolb
dec
arpl
mov
adc
sub
sbbb
inc
push
std
push
ds
pop
xchg
call
loopne
jmp
jp
mov
xchg
loopne
hlt
adc
bound
cwtl
loope
call
out
mov
enter
pop
icebp
xchg
mov
lcall
xchg
and
sub
rol
or
ljmp
add
xchg
dec
sub
inc
test
xchg
inc
ja
xor
lcall
cmpsl
or
pusha
repnz
ja
stc
divl
adc
adc
or
and
or
jl
fs
xchg
out
cwtl
sub
inc
test
mov
pop
xor
mov
cmpsb
movsb
push
and
int
popf
pop
and
xchg
cmc
xor
sub
and
test
filds
xchg
fbstp
fwait
or
bound
cmp
flds
in
jecxz
or
jmp
add
and
inc
popa
arpl
or
sbb
mov
adc
or
sbb
cmpsb
dec
push
jmp
xchg
daa
data16
pushf
iret
mov
movsb
outsb
mov
ficoml
in
dec
sub
sub
rol
pushl
jmp
cmp
dec
ss
dec
scas
sbb
lret
ss
gs
cmpsl
stos
aad
outsb
mov
popa
js
iret
pusha
inc
imul
test
pop
ror
sbb
jp
movsl
jp
test
sbb
mov
sbb
clc
outsl
les
or
aad
and
jl
adc
sub
mov
add
mov
inc
hlt
jb
pop
popf
push
popf
cmp
xor
jp
orl
lahf
add
test
xchg
mov
mov
or
inc
lret
subb
cltd
rcll
imul
test
jg
dec
pop
jne
lret
insb
rol
leave
inc
leave
dec
shlb
and
arpl
and
ja
insb
and
sub
mov
stc
idivl
testb
mov
sub
dec
test
dec
ljmp
mov
test
out
and
fistpll
inc
lret
push
inc
jb
mov
pop
xchg
dec
rcl
cmp
dec
pop
and
sbb
sub
mov
adc
xor
xor
adc
daa
int3
xchg
mov
mov
jge
movsl
lds
jmp
insb
lea
mov
fcoml
hlt
dec
outsl
aas
or
ja
mov
adc
xchg
aam
idiv
dec
stos
ficompl
pop
in
in
push
push
test
fcmovu
jo
xchg
out
mov
push
add
fldl
mov
pop
push
fsts
push
paddusb
jo
arpl
mov
push
add
jge
lods
rcll
cmp
pop
fidivl
sbb
push
jo
stc
inc
je
cld
cmpl
push
pop
jo
jge
cmp
imul
mov
mov
std
clc
adc
dec
lret
mov
movsb
jle,pn
ret
aaa
leave
adc
int
sar
lods
mov
sbbl
add
mov
push
add
inc
lods
out
jle
orl
push
imul
insl
push
fiaddl
mov
test
or
daa
mov
addr16
mov
outsb
movsl
enter
or
jle
inc
jmp
inc
negb
or
fucom
mov
adc
sub
inc
jp
outsb
jno
mov
cmpsl
lret
rorb
xor
pop
repnz
scas
push
xchg
enter
leave
jecxz
pop
inc
mov
sub
lea
divl
fdivrs
sub
cmp
cmp
sbb
sbb
mov
mov
or
or
dec
xor
std
sbb
push
leave
mov
jns
xor
in
loope
fwait
cmp
xor
daa
adc
sub
ljmp
pop
loopne
or
cmp
inc
loopne
int
loopne
push
out
fcomps
push
sarb
sbb
orb
xor
xor
mov
mov
cltd
jne
xchg
stc
adc
and
mul
sbb
sbb
adc
mov
or
test
popf
xchg
sub
adc
dec
cltd
xor
loopne
les
xor
mov
lods
pop
imul
xchg
arpl
std
jae
inc
add
sbb
movsb
insl
data16
xchg
jo
outsl
dec
push
ss
inc
and
shl
cmp
int
jecxz
enter
mov
jmp
es
enter
into
xchg
cmp
mov
mov
rep
scas
sarl
mov
hlt
or
mov
in
outsb
sbb
sub
dec
jmp
das
mov
fcoms
cli
sbb
xor
ret
jno
cmp
inc
rcrl
push
fnstcw
pop
pop
dec
data16
jecxz
sbb
in
xor
add
bound
xchg
mov
cli
aam
xor
xor
xor
lock
mov
sub
xchg
jmp
sbb
sbb
je
testb
mov
nop
and
sub
out
sub
clc
mov
sub
mov
out
inc
hlt
insl
das
aad
aad
movsl
aas
and
rcrb
dec
fidivs
pop
imul
cmc
xor
test
fisubrs
and
shlb
cmp
call
popf
jle
jnp
push
mov
lahf
sub
dec
and
xchg
pushf
popf
test
inc
sub
sarl
outsb
inc
sbb
pop
les
pop
cld
mov
fisubrl
xchg
mov
push
sub
cmp
push
and
mov
shrb
fnstsw
and
cli
sub
ret
pop
xor
inc
mov
scas
fisubs
dec
adc
rclb
mov
sub
mov
stos
push
insl
outsl
sub
adc
inc
mov
adc
mov
sahf
xor
jne
add
xchg
or
or
mov
cld
inc
jne
sahf
xchg
or
fcompl
lds
or
xchg
pusha
ret
mov
clc
push
lret
js
push
nop
cli
sbb
mov
fiadds
outsb
sub
int
dec
movsb
push
adc
xor
orl
and
test
mov
add
adc
push
nop
fwait
mov
push
cmp
push
jl
jecxz
or
scas
jns
out
xor
and
push
aad
pop
movb
dec
stc
dec
in
push
call
mov
and
les
insb
test
sbb
test
cmpsl
dec
push
insl
sbbb
pop
sub
jo
sbb
mov
hlt
mov
mov
aas
test
scas
lods
or
stc
pop
dec
das
je
pop
adc
fdivr
negl
lret
sbb
fisttps
or
int3
fnstcw
and
lods
cmp
jb
sub
cltd
fisttpl
mov
insl
cltd
or
popf
stos
in
aaa
sub
xor
push
in
sbb
lcall
rorl
sub
das
in
imul
stc
out
push
push
andl
add
mov
push
and
cltd
mov
dec
and
jo
add
push
into
outsb
adc
aad
dec
std
sbb
sub
fucom
inc
mov
add
popa
int3
out
fdiv
cmpsb
xor
sbb
addr16
ljmp
lods
out
jno
add
dec
mov
mov
pop
in
jp
dec
lock
sbb
adc
ds
pop
ds
aas
lods
push
imul
cmpsb
sub
push
jg
test
scas
jg
mov
lcall
rol
cmpsb
test
push
into
xor
pop
inc
icebp
and
imul
sub
sub
imul
push
lock
adc
pop
sahf
cmp
outsb
sub
in
ljmp
push
sub
cmpsb
mov
jnp
sub
in
sti
mov
mov
sti
stos
mov
fstpl
sbb
mov
adc
cmp
pop
push
push
push
push
sti
aad
arpl
popf
mov
cmp
test
js
stc
sbbb
add
subb
jae
pop
jmp
push
les
ret
fcom
dec
in
fcomps
mov
dec
jns
jp
lea
imul
fs
imul
xlat
jecxz
lret
cmp
in
pop
test
shlb
inc
push
popa
ffreep
lret
jp
lret
add
test
call
sbb
pushf
icebp
arpl
out
addl
ret
ret
mov
inc
in
and
mov
stos
add
rcl
sub
js
dec
fisttps
movsl
mov
and
mov
mov
fwait
sbbl
xor
clc
mov
mov
sub
rcrl
repz
movsb
pop
pop
pop
or
div
sbb
sub
dec
stc
fistpll
jbe
mov
into
and
out
and
pop
in
mov
repnz
les
or
mov
xchg
mov
in
roll
jne
inc
jl
hlt
adc
ret
call
ja
push
cmp
movl
sbb
add
jecxz
aad
roll
pop
cmp
adc
mov
inc
or
push
cmp
sub
out
add
imul
das
call
pop
sbb
pop
subb
dec
sub
shll
out
jns
movsl
fdivl
lahf
mov
mov
jbe
or
outsl
imul
pushf
popf
sbb
mov
dec
out
dec
push
enter
into
dec
push
sahf
mov
mov
jecxz
jb
into
pushf
sbb
mov
push
bound
cltd
imul
out
xchg
xor
andb
imul
outsb
sbb
popa
cltd
add
push
stos
pop
and
cs
lods
cmc
sti
stos
outsb
and
add
pop
push
iret
and
push
inc
cmpsl
xor
enter
add
adc
imul
or
mov
std
popf
repz
cmp
bound
add
fwait
popa
sub
mov
stos
sbb
fcompl
fidivrs
dec
xor
ljmp
out
dec
push
xchg
in
mov
adc
push
and
mov
repnz
or
enter
jmp
rcr
nop
fbld
fdivrl
add
xchg
rcrl
test
mov
pop
int3
icebp
push
mov
aam
cmp
sbb
pushf
divl
mov
dec
inc
mov
aas
int
cmpsl
aaa
mov
cmp
nop
push
jbe
jle
pop
sbb
shll
icebp
adc
sarb
movl
js
loop
es
sti
test
addr16
jge
andl
sub
call
pop
sbb
adc
adc
aaa
sub
push
add
mov
int3
jbe
sbb
mov
mov
je
clc
xchg
cld
pop
dec
pop
imul
repz
jecxz
inc
lret
xor
lcall
lds
dec
xor
in
jmp
jp
mov
mov
test
push
sbb
fdivrp
xchg
out
into
sub
loope
pop
out
inc
lret
mov
pop
pop
push
pop
mov
cmp
mov
pop
bound
shrl
pop
sbb
adc
inc
dec
insl
rcr
mov
movsl
arpl
xchg
jmp
xchg
cltd
or
jl,pt
jne
xor
xchg
mov
sub
xchg
clc
inc
roll
xchg
sbb
into
les
data16
fimuls
xor
jne
sub
movsl
mov
popa
jecxz
jno
cmpsb
jmp
adc
push
hlt
xchg
fs
jbe
loop
add
xchg
mov
imul
cli
mov
nop
or
or
into
movsb
ret
add
fists
sub
inc
sbb
and
push
jns
cmc
mov
aaa
xorl
lock
les
call
sarb
gs
test
xor
fsubr
arpl
mov
sub
hlt
cmpb
inc
xchg
mov
xor
or
aad
mov
mov
mov
push
mov
cmc
lea
stos
fistpl
in
jp
dec
adc
or
cmp
and
dec
call
and
popf
mov
mov
mov
mov
cld
push
sti
mov
pushf
fstpt
pusha
shlb
push
xor
lea
xor
jmp
lods
repnz
into
cmp
fwait
jle
in
fcmovnu
inc
xchg
mov
in
mov
xor
call
xor
cld
ret
pop
jmp
aam
movsl
push
mov
and
call
adc
dec
rcll
bound
jmp
fsub
or
sbb
rcll
adc
mov
push
scas
les
lods
leave
fdivrs
pushl
push
jle
lcall
mov
mov
outsb
xlat
and
mov
pop
leave
nop
or
lods
rcll
mov
ds
les
adc
push
shll
mov
clc
mov
push
add
cs
ljmp
sbb
mov
mov
xor
insl
xchg
fnstcw
hlt
jae
adc
andps
or
jmp
stos
insl
pop
lret
bound
ja
rcrl
cmp
inc
nop
stos
lahf
pushf
sub
add
adc
adcb
pop
inc
pop
xor
mov
cld
out
adc
dec
std
outsl
cmp
movb
adc
aaa
rolb
out
seto
shrl
loope
sbb
mov
inc
daa
lock
fsubp
and
or
push
scas
add
fldcw
shrb
outsl
cmp
ljmp
int3
test
pop
or
cli
jb
or
jbe
cmp
sbb
dec
jp
xchg
insb
test
aaa
jge
push
bound
cmp
dec
cmp
out
mov
out
xorl
xor
gs
in
and
push
aad
sbb
jle
jb
mov
xor
pop
clc
ds
addl
mov
push
sbb
mov
sbb
sbb
lret
and
shrl
or
sarb
push
and
insb
adc
test
mov
lea
cmpsl
lods
lahf
scas
insl
add
nop
xchg
mov
xchg
mov
add
enter
dec
outsb
pop
loope
daa
add
sub
pop
push
jp
adc
jmp
ljmp
cmpsl
adc
ret
out
adc
mov
add
lcall
in
mov
adc
push
jne
push
aad
adc
test
lds
push
or
es
or
sbb
xchg
cmp
incb
lds
inc
lds
outsl
into
cmp
cmc
cmp
or
mov
mov
adc
push
movsl
out
cltd
cmp
aad
jae
push
sub
scas
clc
loopne
ss
loopne
cmp
mov
imul
pop
push
rcll
stos
or
jp
addr16
pop
fcmovne
mov
mov
sub
mov
stc
into
dec
cmpsl
fs
movsl
dec
out
push
aaa
push
or
scas
sbb
sbb
dec
sbb
cmp
stc
cltd
insb
addr16
arpl
sub
push
out
fidivrs
pop
pop
add
shr
es
call
cwtl
inc
jg
and
cmp
mov
xchg
mov
pop
std
je
xor
sbb
ret
or
and
cmp
mov
sarl
fsubr
jle
pushf
jg
movsl
sti
push
or
push
mov
decl
jmp
add
lret
nop
or
testb
pop
jb
jl
popf
call
sub
jge
xor
stos
imul
test
jns
or
push
rcrb
mov
adc
js
enter
push
xchg
outsl
xchg
aad
ret
or
gs
lds
mov
or
fwait
lds
stos
repnz
fucomi
inc
jne
mov
xchg
gs
imul
lret
outsb
leave
dec
cltd
inc
cwtl
pop
jle
mov
cmp
jmp
jbe
rcrl
outsb
mov
aam
push
and
mov
push
sahf
orl
mov
cs
pop
jb
in
xlat
or
mov
push
jl
jl
push
xchg
ffree
jno
enter
roll
lods
fwait
xorl
js
aas
mov
sub
ds
and
js
into
sbb
cmp
fimuls
push
mov
xchg
cmp
and
jb
and
lfs
pusha
xchg
pop
outsb
pop
dec
mov
xor
pop
jmp
push
das
xor
mov
add
xchg
pop
and
popf
inc
call
popa
negl
mov
fwait
mov
cmp
xor
aaa
enter
leave
mov
xor
clc
dec
dec
mov
mov
xchg
fsubrl
push
sub
xchg
push
fildll
bound
jg
fstpt
and
mov
jne
insl
add
aad
mulb
sahf
stc
mov
jo
mov
aad
dec
loop
pushf
out
call
jno
jmp
lds
mov
shrl
pop
push
insb
add
dec
or
shr
mov
sarl
jl
popa
inc
scas
out
rorb
aad
mov
xor
popa
push
jae
xor
xchg
mov
pop
js
inc
xor
jne
pop
jns
mov
addl
nop
insb
mov
pop
pop
insl
rcrl
sbbb
jle
push
ret
cs
mov
cmpsl
sub
xor
adc
in
imul
ljmp
dec
iret
push
xchg
inc
fmull
and
loopne
pop
adc
adc
out
or
leave
fstps
lahf
enter
psubb
jbe
inc
aaa
mov
or
movb
pop
cltd
xlat
or
lods
stc
sbb
lahf
dec
std
js
xchg
dec
sbb
lret
iret
rcrl
sbb
aas
mov
push
call
mov
das
jb
js
shr
push
cmp
movsl
cs
ss
dec
jg
sti
and
mov
mov
inc
adc
xchg
test
lods
in
pop
push
or
scas
lret
es
sub
jb
nop
out
push
std
pop
adc
pop
out
xor
loope
xlat
and
sti
dec
sti
movsb
inc
jge
add
mov
addb
test
rcrb
sti
push
sbb
jg
inc
call
jmp
sbb
arpl
xchg
movsl
insl
pusha
outsb
daa
push
and
out
int3
adc
jns
lret
mov
add
lahf
data16
popa
push
mov
orb
adc
fwait
out
in
cli
mov
pop
and
ljmp
sahf
or
js
mov
fwait
call
pushl
std
xchg
rcll
fistps
addl
div
sub
mov
loop
lea
cs
xlat
mov
iret
jg
push
rcrb
aad
or
xor
imul
xor
stc
fidivrl
cmp
push
jo
rcll
adc
in
dec
mov
sbb
mov
enter
sbb
mov
pop
inc
scas
or
mov
add
mov
fstps
xor
out
lret
data16
in
in
add
inc
aam
pop
xchg
inc
sub
sub
pop
push
scas
movsb
out
sub
and
int3
leave
add
stc
or
addb
xchg
cmpsb
jnp
push
cli
mov
cmp
pusha
fistpl
dec
mov
sub
out
lcall
ret
aad
hlt
lea
push
fwait
jg
testb
pop
or
cmp
mov
aad
adc
and
xlat
mov
jns
sbb
mov
sti
push
pop
xor
push
adc
mov
xchg
stc
push
das
fldcw
adc
adc
mov
jl
lds
lea
mov
sub
icebp
cmp
mul
test
and
and
pop
inc
scas
mov
loopne
cmp
mov
adc
out
push
test
mov
adc
or
cmp
lods
pusha
pop
dec
into
fcmovnbe
out
lds
repnz
das
jns
pop
xchg
xlat
or
and
jo
xor
enter
jno
bound
loopne
xor
jno
xlat
cmpsl
pop
iret
inc
sub
dec
cmc
and
scas
scas
inc
push
push
jmp
xor
arpl
jg
push
in
test
test
or
mov
xchg
and
stc
push
mov
dec
fidivl
cmp
jnp
out
rclb
ficoml
popf
ds
scas
cmpsl
test
imulb
clc
sbb
xor
jle
adc
ja
pushf
jecxz
clc
sbb
sbb
adc
sbbl
cwtl
cmp
call
jnp
pop
ds
addr16
pop
jnp
sub
mov
cmp
sti
std
cltd
and
inc
scas
sub
int3
lcall
bound
xor
movsb
mov
cli
es
popf
add
icebp
mov
nop
jns
pop
jle
or
cli
sub
pusha
fiadds
inc
fildll
sub
add
xor
or
pop
pop
push
imul
pusha
pop
pop
mov
idivb
mov
shll
dec
adc
push
jge
jp
mov
mov
inc
add
cmp
daa
repnz
loope
dec
adc
out
sub
and
sbb
push
test
mov
cwtl
cmp
in
xchg
mov
cltd
pushf
pop
jae
push
sbb
add
pop
pop
mov
or
or
imul
repnz
test
outsl
mov
je
add
lcall
xor
add
int
mov
gs
push
mov
jae
mov
jecxz
push
lods
jns
lss
adc
mov
push
push
aad
push
stos
aas
push
rcr
mov
mov
xlat
push
in
leave
ret
push
cltd
data16
fsubrp
xor
outsb
out
lds
mov
xchg
inc
inc
and
ret
inc
mov
push
mov
sub
inc
mov
jne
jbe
js
lret
mov
cmp
in
in
push
das
flds
mov
sbb
repnz
pop
cmpl
and
clc
outsb
inc
sar
jmp
cmp
xchg
cltd
add
in
loope
jo
xchg
jge
xchg
mov
or
insb
mov
mov
ljmp
nop
arpl
lcall
mov
movsl
stos
std
lea
inc
mov
cmc
adc
scas
cmc
xchg
fnstsw
outsb
shll
push
jmp
icebp
cmp
cmp
stos
mov
push
roll
or
mov
mov
imul
sar
je
rcll
inc
test
mov
test
jmp
jmp
jne
jo
sub
lret
iret
loopne
mov
adc
fnstcw
cmp
sub
jmp
loop
dec
mov
jmp
push
es
clc
and
dec
cmp
ja
fsubs
sub
daa
call
mov
or
and
jmp
adc
xchg
mov
maskmovq
cld
push
outsl
xchg
lods
ds
cmp
mov
mov
dec
in
xchg
mov
js
lods
push
movsb
and
add
clc
sbb
add
xchg
sti
arpl
jmp
inc
mov
cwtl
test
arpl
xor
pop
mov
adc
xchg
cld
jnp
jge
add
xlat
xchg
pop
pop
rcrl
cwtl
or
push
bound
out
ret
ds
sahf
add
popf
je
pop
icebp
iret
cltd
xchg
sbb
xchg
js
faddl
jb
adc
dec
lock
mov
pop
ja
imul
inc
xor
cmp
andb
arpl
mov
add
cwtl
dec
lock
jge
imul
test
ss
inc
jns
adcb
sbbl
inc
in
shrl
jecxz
mov
js
sbb
xchg
dec
push
xchg
aam
pushf
pop
mov
jecxz
jbe
sbb
bound
cli
and
push
imul
push
out
loop
dec
dec
cld
or
push
dec
push
cmp
adc
mov
arpl
xchg
mov
mov
sub
cmp
int3
ljmp
aad
in
imul
cwtl
push
repnz
adc
outsb
push
popa
inc
sub
dec
or
sbbb
jno,pn
loope
adc
or
add
mov
add
mov
mov
push
stc
fsts
mov
nop
inc
or
jbe
adc
scas
aaa
inc
rorb
mov
insb
sbb
stc
or
out
mov
adc
mov
lcall
dec
push
dec
xchg
lea
sub
add
push
dec
pop
pop
dec
jne
push
ja
mov
fwait
out
adc
imul
dec
lea
jbe
not
enter
into
xchg
ffree
mov
dec
jo
imul
jo
add
mov
stos
stc
fiaddl
ds
lds
dec
imul
in
cmp
or
sub
xlat
pop
movsl
jmp
and
outsl
in
jle
pusha
sub
out
lcall
std
cld
jbe
pop
fcmovb
jnp
and
mov
je
fisttps
xchg
bswap
cmpsl
sub
imul
sti
enter
andl
add
fldenv
push
cmpsl
in
and
cmp
lods
in
mov
arpl
cmp
sub
mov
inc
aaa
jne
out
loope
jnp
push
fs
mov
pop
in
mov
mov
jecxz
cmpsb
push
xchg
cwtl
stos
repnz
mov
jae
lcall
mov
shrb
mov
or
add
xchg
xchg
jg
and
divb
jne
aaa
mov
xchg
popa
xor
and
jo
mov
cmc
in
sub
imul
sub
xchg
scas
adc
pop
mov
je
clc
je
adc
xbegin
mov
push
ret
stos
or
rol
sbb
jns
cs
scas
ss
xchg
jge
adc
cld
stos
leave
mov
mov
adc
aas
jle
adc
add
nop
rcll
push
push
mov
xor
out
leave
or
andb
cltd
fwait
int3
rcpps
sub
inc
inc
xor
repz
mov
movsl
outsl
mov
jbe
or
jb
andl
jae
aad
mov
xchg
lods
mov
fisubs
ret
stos
mov
imul
mov
jns
xor
mov
mov
mov
mov
mov
mov
int3
mov
pop
sub
mov
es
xor
xchg
mov
and
sub
pop
insl
push
or
inc
loop
push
daa
pushf
xor
mov
les
ror
mov
cmp
in
pop
mov
pop
mov
aad
and
fidivrs
or
and
loope
jae
xorl
inc
adc
jecxz
mov
sub
loope
or
loop
arpl
xchg
ficomps
push
cmp
or
mov
xchg
mull
pop
push
add
xchg
aas
jp
mov
and
xchg
cmpsb
loope
aaa
stos
inc
cld
ficoms
xor
xor
rolb
mov
jb
pop
inc
out
inc
adc
fsubrl
adc
jne
cmp
xchg
mov
lods
xchg
and
lods
mov
lock
das
add
adc
or
cs
nop
and
mov
ds
ds
fs
or
pop
out
or
test
inc
jmp
or
je
dec
lret
pop
mov
stos
adc
inc
dec
fisubs
push
add
cmova
inc
shlb
sub
pop
mul
mov
or
push
popf
inc
ret
pop
xor
mov
xchg
sub
movl
popa
sbb
imul
sub
mov
pop
dec
repnz
dec
push
inc
jp
mov
add
mov
in
adc
sarl
xchg
daa
stos
push
insl
mov
fistpl
icebp
xchg
inc
mov
mov
xchg
mov
mov
jg
jo
or
ljmp
fnstcw
mov
icebp
jl
enter
ret
repnz
mov
lods
dec
push
into
imul
in
jbe
int3
pop
jne
movb
push
adc
into
mov
xor
mov
stos
ljmp
adc
leave
and
outsb
aaa
out
sbb
ds
xor
push
out
inc
shl
enter
jno
xchg
cmp
daa
shll
aas
jno
fwait
mov
out
lcall
xor
push
cwtl
stos
stc
aad
movsl
gs
pop
push
inc
push
ljmp
add
or
xor
gs
mov
dec
ret
data16
arpl
adc
mov
pushf
out
mov
push
movsl
or
das
sahf
mov
jge
inc
es
pop
pop
or
ficoms
add
pop
cmc
or
pop
adc
lcall
inc
adc
icebp
xor
adc
dec
imull
pop
add
jle
sti
inc
jge
push
insl
jb
neg
jle
testb
scas
mov
lcall
pop
mov
aam
rcll
xchg
mov
fs
loopne
jge
es
pop
mov
leave
out
icebp
mov
aaa
shr
stos
sub
jno
fmuls
mov
shlb
rcll
cmpl
push
aam
imul
xchg
push
pop
adc
pop
int
dec
push
loopne
loopne
jg
gs
add
add
lock
shrl
in
and
jle
sbb
ja
out
dec
xchg
mov
insl
cmp
gs
daa
arpl
mov
sub
mov
repnz
jp
out
inc
mov
in
lock
adc
rcrl
lcall
jae
inc
pop
or
roll
shl
sbb
insl
cli
mov
ret
or
std
bound
into
dec
mov
lea
xchg
enter
das
imulb
loope
inc
cmp
pop
lock
mov
push
popa
stos
pushf
pxor
push
les
test
and
jbe
out
cwtl
and
shlb
push
cmp
ret
mov
jae
or
jno
out
mov
fistpl
imul
dec
fnstcw
shr
test
addb
mov
pop
addr16
inc
fs
jmp
addr16
jae
or
sbb
and
or
sarb
aad
mov
push
pop
outsl
out
xchg
sub
sub
and
ljmp
test
cmp
test
jl
mov
or
stc
test
push
fbstp
mov
jecxz
push
sub
dec
out
lods
dec
sbb
lcall
push
int
js
out
js
mov
lret
cmp
dec
and
push
push
fists
shrb
test
ja
aam
lods
into
jne
fdiv
xor
inc
add
inc
sahf
rorl
stc
sbb
lret
test
fwait
loope
xor
out
lret
std
xor
push
dec
push
lea
push
cmpsl
mov
and
fisubrs
stos
and
fcompl
ja
pop
jmp
pop
ret
sbb
jg
cmp
lcall
fstps
push
in
and
pushf
add
shl
hlt
and
mov
inc
cwtl
filds
std
sub
das
or
dec
cmc
cmp
jbe,pt
xchg
aaa
pusha
fdivl
dec
nop
shlb
jmp
icebp
pop
xor
push
mov
mov
pop
dec
xor
sbb
das
fwait
neg
push
sub
pop
bound
pop
ret
aam
adc
push
cmp
shlb
fmuls
sbb
shll
aaa
push
fidivrs
pop
sarl
repz
sysexit
sbb
add
ja
xchg
int3
mov
gs
sub
fstpt
pop
cmc
test
insb
sub
es
fistps
mov
clc
dec
mov
push
mov
push
lahf
xchg
into
aas
and
fidivl
sub
js
push
jge
aad
jo
stos
call
add
pop
push
lcall
lods
out
dec
jl
mov
std
sub
inc
sbb
sarl
sub
xchg
sub
pand
mov
or
int3
fstpl
jp
push
push
pusha
xor
mov
sub
push
enter
sar
pusha
lcall
pop
mov
mov
clc
and
fcmovbe
enter
inc
int
into
sahf
nop
in
int
sbb
sbb
sti
and
fildl
das
inc
pop
jecxz
dec
jbe
push
in
out
insl
call
cwtl
mov
adc
pop
ret
lret
sbb
out
arpl
jl
leave
imul
cmpsb
pop
inc
ds
jg
repnz
bound
dec
inc
ja
clc
outsl
xor
push
xorl
pop
ret
fistpl
xor
mov
fildll
dec
lcall
sub
and
mov
pop
pop
jns
neg
pop
fisubrl
test
test
gs
mov
xor
push
inc
repz
mov
cmc
push
jecxz
jp
ret
xor
dec
mov
mov
into
mov
pop
mov
cmp
int3
stos
jge
stc
mull
lods
push
jmp
and
jno
icebp
mov
imulb
lds
and
cmpsl
ret
je
jb
outsb
test
sbb
xchg
into
lods
leave
in
push
xchg
jmp
jmp
mov
xor
dec
testl
ds
jmp
push
nop
mov
xchg
fsubl
and
test
xor
inc
dec
mov
jo
mov
mov
stos
insb
cmp
int
or
cmpsl
imul
cld
mov
adc
dec
sbb
inc
insl
pop
sti
pop
cmp
sub
call
mov
addr16
add
movsb
stc
orl
jecxz
xor
push
lods
jl
test
mov
scas
notl
jno
add
or
push
loop
bound
mov
sbb
push
cmp
push
mov
push
rcrl
inc
jmp
xchg
mov
push
lds
dec
adc
jo
mov
daa
or
mov
lea
test
add
movsb
jno
adc
mov
mov
lods
sub
pop
pop
sub
mov
in
jbe
cmp
inc
mov
cmp
xlat
cltd
xor
xor
daa
dec
icebp
cmp
aas
pop
pop
push
movsb
pop
xor
fstpl
push
stos
aaa
push
mov
xor
in
push
mov
out
push
scas
lcall
mov
sbb
xchg
sbb
lods
push
sbb
jbe
into
daa
jg
dec
inc
cmp
negl
pop
stos
add
cmc
inc
xor
add
mov
xchg
addr16
mov
and
sbb
or
pop
lret
movsb
imul
mov
fcoms
adc
push
xor
filds
ret
jecxz
sub
dec
push
fstpl
int3
cmp
mov
mov
or
mov
inc
scas
ret
fs
inc
push
in
xor
sub
mov
int3
cmc
adc
ret
fldt
push
xchg
pop
push
in
and
ljmp
cmp
and
xchg
fisubs
cmp
cli
jl
mov
movsb
cmc
push
xchg
movsb
push
mov
push
test
or
adc
mov
jecxz
ret
js
popf
mov
fisttpll
adc
mov
jecxz
xchg
out
push
cmp
pop
dec
xchg
jns
push
sub
cld
and
pop
xchg
mov
xchg
mov
push
dec
aas
sbb
mov
mov
movsb
or
aam
outsb
xlat
xorb
add
stc
and
dec
sub
scas
gs
inc
jecxz
mov
mov
push
xchg
jne
push
mov
mov
inc
add
fidivs
and
ja
mov
adc
sbb
outsb
bound
test
mov
pop
sar
cli
or
mov
call
call
icebp
cli
or
into
jnp
int
dec
sub
and
ret
sub
jge
inc
cld
mov
pop
addb
sbb
push
add
cmp
movsb
lahf
xchg
mov
mov
xchg
mov
dec
lret
or
rcrl
test
adc
in
sti
int3
fcomps
fistps
xchg
fistpll
sub
es
addl
inc
mov
pop
xor
or
jge
push
imul
arpl
scas
imul
sahf
out
addr16
addr16
or
add
xor
mov
mov
stos
push
jg
pop
sahf
mov
mov
cld
push
or
jecxz
in
fstp
gs
and
pop
mov
rcll
movsl
push
pop
push
xchg
jo
lods
pop
lahf
lret
pop
or
test
mov
jo
xchg
clc
loopne
xor
pusha
sub
dec
loop
test
mov
loope
loopne
jp
ljmp
inc
sbb
and
mov
mov
inc
add
je
mov
sub
adc
pop
insl
das
and
pop
lods
sar
and
test
lret
outsb
push
xchg
arpl
mov
xchg
das
mov
cwtl
sub
jecxz
jo
fs
add
je
outsb
push
sti
stos
pop
outsb
rcrl
sub
fmul
jns
je
adc
add
mov
test
ret
mov
mov
mov
leave
jecxz
pusha
cmp
cmp
scas
adc
test
stc
xor
mov
mov
sbb
in
add
lods
scas
pop
cltd
or
push
sub
add
adc
xor
test
xchg
push
repnz
sub
test
adc
shl
xchg
ds
icebp
pop
outsb
arpl
or
lret
in
jb
add
xor
in
scas
cmp
rol
or
addb
lock
or
xchg
add
lret
outsl
aas
push
movsb
out
sub
pop
or
add
shrl
stos
or
imul
aas
stos
scas
sub
sahf
mov
insl
aad
push
mov
xchg
je
pusha
rcll
adc
rclb
pop
arpl
xchg
pop
pop
push
inc
loope
stc
outsl
jp
cmp
inc
cmp
gs
hlt
loop
sub
mov
sbb
sbb
icebp
push
aaa
mov
js
sub
pop
inc
das
je
nop
inc
sbb
test
testb
loop
fdivl
mov
xchg
jmp
sub
push
mov
popa
fs
rcll
and
lret
mov
insl
mov
aad
sub
loopne
cli
stos
call
dec
popf
jb
aam
js
sub
lcall
adc
dec
inc
mov
mov
xchg
out
sar
repnz
aam
movsb
dec
push
sub
xorb
add
in
mov
or
or
push
loope
push
xchg
adc
lret
push
jle
xchg
cli
xor
loop
out
inc
out
mov
iret
inc
sets
pop
cmp
lcall
mov
adc
push
xchg
push
out
push
adc
push
sbb
pop
mull
xchg
popf
mov
pop
adc
es
inc
pusha
jp
in
fidivrs
mov
fiaddl
xor
mov
push
jp
add
out
or
arpl
cmp
popa
pop
mov
or
cmp
xchg
sbb
pop
sbb
out
je
xor
ret
adc
pusha
rcrl
je
stos
dec
and
js
sbb
mov
out
jbe
and
xor
sarb
sbb
and
ret
hlt
inc
fs
jns
andb
xchg
jb
mov
mov
daa
dec
push
adc
aad
push
loope
push
enter
rorb
stc
xchg
lcall
div
rorb
mov
leave
cmp
ja
adc
imul
test
test
sarl
xchg
or
imul
inc
aaa
sbb
rcll
nop
push
jnp
loopne
dec
mov
cmp
push
jmp
cmp
test
mov
xchg
xchg
push
pop
mov
outsl
jmp
aas
dec
xchg
xchg
mov
mov
sub
sar
xchg
mov
mov
or
xorb
inc
cwtl
push
ss
inc
popa
ror
sub
jno
cwtl
in
mov
lcall
xchg
cmp
sti
rcl
lcall
pushf
loopne
addr16
xchg
inc
fldcw
pop
mov
xor
fidivrl
dec
cmp
or
add
imull
push
xchg
dec
popf
adc
icebp
sti
in
jg
lahf
pop
sti
imul
cli
dec
adc
cld
dec
jne
repz
lret
mov
xchg
push
hlt
jg
loope
scas
mov
mov
inc
loopne
data16
jno
shll
daa
pop
xchg
cmp
notl
sub
ja
cmp
test
iret
mov
inc
in
and
sub
push
sub
or
jg
jne
js
inc
loope
movq
adc
das
mov
rorb
test
je
stc
xor
or
rcr
scas
inc
add
xchg
aam
jno
add
push
adc
loopne
in
add
sti
jge
movsb
xor
mov
icebp
negl
sub
mov
push
pusha
cmp
outsb
xchg
pop
cld
mov
shrl
sub
jne
stos
push
fsub
pop
mov
pop
mov
mov
xor
divb
iret
out
xor
lret
loopne
out
test
gs
aad
aaa
mov
iret
bound
push
orb
adc
testl
mov
movsb
adc
popa
test
pavgw
fs
sbb
cmpsb
pop
rorl
push
push
notw
mov
xorl
stos
out
dec
jg
movsl
jae
pop
ja
divb
bnd
jb
xor
cmp
adc
clc
cs
fcomps
xor
pop
fs
aad
lcall
mov
cmp
rcll
das
sub
imul
arpl
add
imul
es
ficoml
xchg
aam
push
inc
mov
add
or
push
jmp
inc
xchg
mov
xlat
jmp
and
scas
mov
pushf
push
insl
jmp
imul
or
insl
pop
dec
das
cmpb
jne
mov
xchg
sahf
fistpl
repnz
idiv
push
sub
cmp
fs
dec
inc
mov
gs
insb
or
inc
cmc
sbb
push
add
fcomip
cmp
leave
add
xchg
push
cmpsl
mov
nop
mov
xor
adc
mov
adc
or
lcall
shlb
notb
and
xlat
in
ret
push
popa
and
iret
inc
push
xchg
pop
rolb
scas
dec
inc
push
jecxz
mov
push
mov
mov
jbe
std
mov
in
cs
out
lds
repnz
and
sbb
movsb
stos
mov
test
dec
xchg
sub
in
out
repnz
aad
mov
adc
sbb
loope
dec
outsl
outsl
xor
or
mov
insb
cmp
sti
cmp
xchg
dec
lret
nop
hlt
addr16
in
jb
test
cmp
aam
cmc
cmc
mov
sub
cs
dec
rorb
xchg
add
enter
cmp
outsl
das
popf
push
sbb
loopne
mov
and
push
jno
xor
jo
pop
test
cmpsb
call
pop
sub
pop
pop
lret
cmp
daa
mov
dec
sarl
sbb
ja
das
nop
xchg
dec
add
popa
cmp
test
in
xchg
popf
mov
int3
idivb
and
xchg
movsl
xchg
aas
test
sub
sub
pop
andb
int
rolb
cmc
pusha
and
mov
stc
into
fistpl
lret
flds
dec
loopne
mov
imul
rorl
and
loopne
or
cmp
mov
sbb
addb
movsl
jns
mov
mov
sbb
push
pusha
push
or
push
xor
pop
test
mov
sbb
inc
dec
mov
cltd
fcmovbe
cmp
lods
std
sub
andb
mov
mov
mov
stos
out
pop
jb
adc
inc
jl
aas
and
mov
sbb
dec
pop
popa
mov
push
inc
insb
pop
cmp
adc
cmp
enter
loope
pusha
xchg
pop
lcall
add
and
jno
jecxz
lods
bound
gs
jmp
push
dec
data16
sahf
repnz
add
lock
call
pop
jno
add
jle
ss
cli
push
and
imul
push
aad
push
testl
inc
jbe
into
mov
sti
add
jg
xchg
aad
xor
mov
inc
shll
ljmp
into
stos
cltd
lock
out
repz
mov
dec
lret
enter
sbb
enter
lods
and
ds
imul
repnz
xchg
xchg
adc
mov
aam
sbb
sahf
and
jo
pop
jecxz
pop
hlt
leave
adc
inc
and
add
lods
in
lds
add
lcall
jle
out
shll
cmpl
loope
add
mov
dec
out
cld
addb
and
xlat
mov
scas
cld
inc
lahf
push
lret
add
outsl
mov
xor
imulb
adc
jp
loop
add
icebp
inc
dec
mov
out
fs
in
pusha
adcl
or
stos
and
sub
and
out
or
hlt
aad
test
inc
dec
btc
faddl
cmpsl
mov
cmp
xchg
xchg
shlb
popf
jns
rcrb
inc
jp
pop
addr16
leave
fidivrs
cli
adc
out
add
or
inc
dec
rolb
push
imul
xchg
fistl
pusha
cmpsb
and
int3
aad
mov
adcl
xor
inc
leave
mov
pop
adc
inc
scas
out
mov
push
pushf
inc
add
nop
adc
adc
andb
out
pop
test
stos
jbe
repz
pushf
jb
mov
sahf
jae
mov
mov
imul
mov
ret
lret
imul
mov
pop
mov
sub
fisttpll
push
jp
sbb
cs
push
sbb
aaa
jl
xor
mov
jge
xchg
mov
pop
adc
movsb
push
testl
cltd
in
push
sbb
pop
std
xor
sbb
mov
dec
stos
pusha
pusha
adc
cmp
cmpsl
mov
call
andb
mov
mov
cli
ss
fnstsw
fcoml
and
and
xchg
insl
mov
add
je
fidivs
jecxz
mov
je
fcomip
jne
ss
lahf
jno
push
add
pop
jne
sbb
mov
shlb
testl
lahf
int
jg
mov
bound
sbb
dec
xchg
or
outsb
lcall
addr16
dec
sbb
inc
adc
lahf
shll
das
out
add
mov
fdivrl
cmp
nop
jnp
inc
inc
mov
cmp
stos
ljmp
dec
andb
mov
or
mov
adc
xor
push
xor
jle
vmread
push
inc
mov
ljmp
mov
test
lods
loopne
fcomi
cli
pop
sbb
mov
mov
pop
inc
adc
shll
pop
in
jl
sub
dec
pop
pop
test
add
repnz
popf
addb
jbe
mov
pop
jnp
imul
push
jno
dec
mov
xor
pop
cmp
rclb
test
jp
xchg
add
shrb
test
sub
fldcw
push
aam
inc
push
stos
jg
mov
pop
shll
das
nop
mov
hlt
je
push
ds
lahf
xor
sub
mov
aas
repnz
inc
test
jmp
xor
mov
cmp
stos
mov
inc
xchg
push
dec
push
mov
in
iret
test
fldcw
icebp
push
xchg
pop
push
in
imul
loope
shll
adc
jge
jns
fcmovb
les
shl
add
lods
aas
jns
pop
mov
stc
jle
testb
ja
stos
in
xchg
pop
and
xchg
push
inc
push
ja
xchg
xchg
movsl
mov
and
push
sbb
mov
dec
or
jecxz
aam
jp
cmp
mov
push
test
push
fsqrt
ss
hlt
pop
pop
sub
dec
xor
loope
lret
lcall
xchg
mov
pop
iret
and
xchg
leave
sbb
jnp
sbbl
loop
pop
dec
or
inc
adc
loope
and
decb
dec
lea
jo
jnp
imul
dec
adc
xor
cmp
rorb
insl
cmp
pop
push
out
ret
lret
daa
out
dec
and
xor
imul
mov
iret
mov
aas
mov
cli
add
sub
or
pop
scas
loopne
or
adc
mov
push
arpl
mov
popa
inc
aad
popf
mov
jnp
adc
mov
cmp
arpl
push
xchg
or
or
fucomip
outsl
xor
mov
mov
leave
push
nop
or
push
cmp
and
dec
or
sbb
pop
divb
pop
adc
mov
ja
ficoml
mov
xchg
pop
mov
push
in
fdivl
sbb
pop
in
cmpsb
ret
popf
inc
hlt
enter
pusha
or
add
enter
arpl
inc
mov
out
cmp
cld
xchg
sbb
jae
andb
outsl
sbb
or
shlb
test
pop
xchg
mov
cmpsb
lock
xchg
jae
and
lods
xor
fimuls
daa
sbb
jo
rorl
mov
insl
mov
leave
ret
xchg
mov
cwtl
or
or
addr16
out
rclb
out
cmp
and
cmpsl
mov
lea
mov
mov
xchg
call
insl
mov
dec
test
add
pop
sbb
repz
and
aad
sub
mov
add
stos
gs
cmpsb
add
sub
mov
dec
push
or
xchg
enter
lret
lods
mov
adc
repnz
aad
push
dec
pop
leave
in
xchg
mov
adc
lret
icebp
sti
fmuls
mov
mov
in
jne
pop
test
into
mov
jb
mov
roll
icebp
popf
jg
repz
push
sbbb
lods
mov
push
jg
repz
ja
dec
and
scas
fidivl
mov
xor
out
cmp
inc
in
or
call
daa
dec
xor
fst
xchg
mov
out
mov
dec
pop
test
xlat
mov
mov
push
or
lea
mov
mov
mov
je
call
and
clc
ret
inc
xchg
popa
fucom
lock
or
and
mov
push
cmp
add
inc
inc
xlat
idivl
pop
movsl
inc
adc
mov
jnp
outsl
fwait
into
insl
pop
mov
add
loop
push
jne
jge
push
sahf
sbb
xchg
xor
movsl
loop
jo
xlat
mov
cmpsb
fpatan
in
rcrb
or
and
mov
stos
daa
out
leave
stos
mov
dec
cmp
cmp
nop
mov
pop
es
shrl
and
add
push
fsubs
rcll
fiaddl
jne
add
dec
aad
je
popf
fimull
and
les
dec
mov
xor
pop
hlt
pop
xor
xchg
push
stc
mov
divb
push
sbb
adc
jbe
fdivrl
sbb
xchg
andb
fs
hlt
adc
add
xor
outsl
pop
rorl
in
hlt
sbb
cli
lret
in
into
add
jp
add
mov
xchg
pop
sahf
xchg
adc
mov
push
inc
dec
ljmp
popl
arpl
inc
test
pusha
pop
jg
mov
sti
nop
movd
pop
push
in
pushf
pop
lods
xchg
js
aad
lds
fidivs
cltd
xchg
orb
adc
pop
dec
dec
pop
shlb
sub
push
push
cmp
jp
jno
repz
movsl
fdivrp
pop
js
daa
xchg
jl
or
fucom
test
test
mov
loope
add
aam
in
lret
cmp
fcoml
push
nop
xorl
push
dec
sub
dec
xchg
sub
jo
push
and
add
and
es
int
cli
pop
sub
push
xchg
mov
stc
push
std
adc
pop
pop
push
sti
push
xlat
loopne
imul
mov
fcmovu
xchg
dec
negb
add
ds
sub
fiaddl
ss
mov
ret
xor
push
les
fdivrl
pop
add
push
popl
ret
gs
cmpsb
pop
sub
dec
cmp
jle
adc
shl
or
dec
cs
pop
inc
xchg
mov
icebp
sub
cmp
dec
push
adc
and
sbb
in
lods
push
sub
push
enter
lret
frstor
sub
dec
dec
push
mov
ret
pop
xor
sub
repz
shll
out
xchg
xor
cmpsl
pop
lods
mov
das
push
out
sbb
negb
ret
cmp
sub
lock
or
sbb
ss
lahf
add
js
inc
or
fwait
cltd
xchg
pop
sub
jbe
popf
inc
jbe
fsubrs
pop
or
cltd
pop
mov
outsb
in
lds
add
in
aas
pop
shlb
test
movsl
stos
add
push
push
or
iret
mov
adc
xor
sbbl
inc
add
jge
in
pop
in
pop
xlat
push
sti
jbe
jb
lods
mov
inc
pop
lea
pop
sbb
lea
shll
inc
fwait
in
inc
cmpsl
cmp
jae
cmp
sbb
adc
imul
cmpsb
lock
loopne
mov
fmul
mov
stc
fsubrp
dec
cltd
dec
adc
jb
xchg
sahf
cmp
std
xchg
inc
xor
sbb
xor
inc
mov
xchg
push
andb
mov
xchg
or
mov
cmp
out
jge
xchg
xor
fsubrl
or
cmp
les
out
xchg
mull
mov
adcb
push
idiv
cmp
pop
loopne
mov
popf
bound
dec
dec
pusha
dec
cmp
filds
mov
nop
popf
arpl
call
mov
mov
dec
jecxz
les
pop
sub
imul
add
mov
enter
push
incb
out
jns
scas
push
in
mov
mov
jo
shlb
shlb
add
inc
dec
popa
dec
xchg
adc
pop
ss
push
push
mov
adc
jl
pop
mov
js
push
leave
add
pop
cmovle
mov
lods
repnz
mov
test
sbb
add
push
dec
inc
jns
fldt
adc
xor
pop
inc
or
pop
dec
jl
xor
push
imul
or
je
inc
in
pushf
scas
icebp
loopne
fwait
daa
rcrl
stos
inc
pop
jb
sbb
mov
aas
imul
xor
jg
sub
inc
adc
cmp
pop
mov
into
pop
popf
mov
adc
xlat
pop
pop
jmp
jns
jnp
int3
sbb
inc
dec
xchg
scas
stc
stos
mov
movl
sbb
aaa
push
out
mov
xchg
insl
pop
fs
xlat
sbb
adc
mov
daa
cmp
rol
or
add
scas
in
sbb
jns
inc
fwait
mov
push
xor
or
cld
inc
fiaddl
insl
mov
dec
jne
jae
std
cld
rorl
push
dec
adc
sbb
pop
aad
inc
fldcw
insl
inc
cmp
and
aad
xor
loope
mov
jl
pop
aad
add
fnsave
mov
fisubrl
ss
push
test
xchg
lds
mov
enter
mov
add
aaa
paddd
test
out
dec
cmp
fs
cli
pop
inc
out
int
jno
repnz
mov
imul
popa
into
mov
fs
sbb
xchg
fildl
and
lods
add
add
pop
add
stc
pop
and
pusha
dec
ficoms
rclb
mov
jno
in
mov
mov
dec
xor
jo
test
insb
push
sub
mov
rcrl
lret
popf
jle
ret
adc
xchg
mov
dec
mov
mov
and
mov
xor
jge
push
dec
addb
mov
add
lahf
popa
daa
mov
pop
inc
dec
fldt
test
lahf
dec
jno
mov
mov
inc
dec
insb
push
or
mov
or
mov
cltd
mov
xchg
shll
push
push
push
dec
arpl
push
je
repz
dec
mov
fcompl
and
mulb
jle
mov
not
ret
dec
mov
jmp
out
fidivs
inc
pop
popf
les
jb
sbb
push
pusha
jmp
pop
dec
mov
clc
clc
or
push
es
aam
sbb
jo
lods
mov
ficompl
jl
xchg
push
movsb
pushf
das
cmp
aam
aas
mov
inc
aas
fldcw
lock
push
dec
std
inc
in
push
loope
xchg
popa
ror
mov
add
or
inc
mov
jmp
or
pop
test
cmp
shlb
pop
push
jge
dec
cwtl
xor
ljmp
xchg
loop
dec
add
fcomps
movsb
xchg
jnp
inc
or
stc
push
gs
sub
push
and
sahf
imul
mov
popf
xor
xchg
mov
dec
pop
mov
adc
lods
add
dec
jo
xchg
sbb
sbb
or
cmpsb
lahf
pop
cmp
jle
fwait
add
or
fdivrs
imul
jo
loopne
xor
outsb
mov
pop
dec
jl
dec
mov
add
insl
hlt
mov
icebp
mov
or
fdivr
fstp
push
sbb
dec
fildll
or
sbb
mov
addr16
cli
mov
addr16
and
xor
dec
xchg
int
xchg
cli
mov
cld
push
push
fisubrl
scas
popf
xor
xchg
sub
inc
and
add
jge
in
xor
int3
fwait
xchg
in
jp
loope
jnp
sub
pusha
fdivrl
sbb
call
add
cmpsb
leave
pop
dec
nop
iret
sbb
test
and
in
mov
divb
popf
mov
and
sar
out
lds
stos
jecxz
sahf
xor
out
into
je
cmp
mov
addb
movsl
das
xchg
add
ret
push
inc
add
xor
mov
pop
dec
mov
repnz
icebp
jno
inc
pop
mov
or
add
idivb
gs
pop
push
mov
das
add
pop
cmp
sub
add
lds
push
repz
pop
jns
call
arpl
pushf
sti
inc
iret
sub
xor
jl
jp
outsl
pop
mov
push
test
cld
in
cld
call
dec
push
ret
add
in
xchg
dec
mov
mov
jecxz
and
jecxz
jmp
and
pusha
vpinsrw
cmp
dec
lods
movsl
in
xchg
lahf
mov
jp
iret
les
jl
dec
pop
out
push
frstor
jl
cwtl
xchg
or
out
sbb
into
inc
rorl
mov
mov
fstpl
xor
xor
pop
cmp
mov
lcall
in
mov
xor
push
fcompl
sti
push
fidivs
or
mov
cmp
cmp
xchg
push
es
mov
mov
cmovb
sub
movsl
enter
lods
in
xor
insb
mov
orl
adc
xor
push
xor
xchg
and
push
push
mov
adc
ds
jne
mov
mov
adc
cwtl
mov
insb
ret
nop
pop
and
push
push
sbb
aaa
adc
mov
mov
push
test
pusha
push
popa
enter
test
mov
jge
ds
add
rcll
mov
shl
jmp
jnp
inc
mov
cli
lds
push
ficompl
subl
flds
mov
jmp
jbe
dec
sub
push
fisttpll
ja
or
fs
pop
jecxz
dec
pop
xchg
xorb
xchg
call
pop
stos
test
cmp
pop
loope
add
pop
xchg
pop
add
movsb
push
pop
pop
sub
sub
sbbb
out
fs
fbld
xor
sarb
outsl
xchg
mov
pop
jge,pn
cmp
ljmp
orl
mov
imul
push
call
sbb
popf
xor
out
test
jbe
or
rcrb
addr16
out
outsb
scas
pop
fisttpll
daa
adc
pop
loop
push
mov
fs
cmp
mov
fcomp
aam
mov
mov
and
add
pop
stc
ror
insl
cli
sub
clc
daa
ror
or
roll
adc
sub
cld
sahf
and
add
add
out
push
dec
int
pop
negb
pop
xor
rcr
jmp
adc
lret
in
out
aaa
rcr
sbb
shlb
and
fsubl
push
or
fisubrs
aam
dec
loop
test
sub
pop
sbb
std
mov
clc
sarb
mov
jno
xor
jmp
stos
cmp
pop
aam
shlb
leave
cltd
stos
call
addb
rol
mov
sub
fwait
dec
cs
adc
cli
fwait
in
jmp
ja
push
add
jne
fnstcw
nop
movsb
cmp
loop
ja
mov
stos
fstl
push
fdivs
jg
mov
loopne
test
leave
pop
push
fsubs
xchg
xor
testb
out
lods
loope
cmp
in
in
packuswb
aam
call
xlat
add
sub
ficomps
incl
sti
mov
cmp
jmp
fimull
pushf
add
and
push
xchg
add
addb
jle
test
sbb
test
mov
ret
and
pop
xchg
add
repz
pop
into
push
test
pop
ds
or
dec
push
mov
inc
xchg
test
cmc
outsb
inc
or
dec
or
insl
movsb
fdivrl
cmp
hlt
cmp
shll
fsubr
mov
call
jmp
stos
push
rclb
push
add
mulb
push
in
push
jnp
lret
add
stc
mov
cwtl
fistl
add
ds
negb
sub
cmc
mov
ret
xchg
out
mov
aam
in
jbe
outsl
and
cmp
jge
repnz
mov
xchg
add
mov
or
rorl
mov
outsb
push
cltd
mov
ljmp
fxch
jne
push
xchg
imul
cmp
mov
getsec
adcl
notl
cmp
dec
int
push
add
mov
cli
fcoml
je
rcr
clc
push
movsl
cmp
fsubr
dec
out
sbb
xchg
in
fldenv
andl
jnp
pushf
mov
xlat
mov
je
mov
push
rol
mov
adc
mov
rorl
enter
sub
sbb
push
sarl
xor
adc
mov
pop
ret
xchg
push
mov
xor
roll
aaa
add
mov
mov
xchg
push
jae
cmp
sub
js
repnz
jle
jle
jns
sbbb
ss
xchg
jno
xchg
popa
movsb
mov
inc
inc
adc
divl
std
cmp
cmpb
inc
push
pop
icebp
test
and
or
xor
aaa
int3
xchg
xchg
push
movsl
and
mov
pop
mov
sbb
mov
or
pop
or
arpl
pushf
cmp
sub
push
test
mov
xchg
sub
int
or
lahf
xchg
mov
push
ret
lods
or
xor
insl
mov
addr16
mov
lahf
out
sti
sahf
shrb
das
inc
shll
adc
mov
pop
les
bound
mov
or
sti
mov
addr16
out
xchg
pop
push
mov
add
cmp
js
ret
je
push
pop
push
ja
and
cmp
mov
test
pushf
addr16
pop
push
dec
xor
mov
jo
push
mov
cltd
loop
cmp
push
negl
lcall
push
dec
mov
lcall
mov
push
cmp
xchg
mov
popa
out
movsb
iret
cmp
inc
das
fsin
add
sahf
popf
jp
cmp
jmp
les
lods
stc
movsl
mov
into
adc
enter
push
fildll
adc
hlt
mov
sti
and
dec
xorb
mov
push
int3
popa
push
mov
xor
cwtl
inc
ror
mov
incb
lods
push
das
lcall
and
insb
push
mov
push
je
pop
cmp
stos
adc
jo
sti
adc
and
lret
jle
outsb
f2xm1
or
movsl
push
ja
sbb
bound
mov
xor
repnz
or
mov
mov
push
loopne
or
pop
dec
mov
cmp
sbbl
clc
inc
ds
sbb
outsl
mov
add
mov
cs
js
or
out
insb
lret
mov
or
ret
lcall
sub
pop
sub
add
pop
jecxz
push
add
and
movsb
bound
jmp
xchg
std
pop
push
pop
pop
aad
pop
nop
shr
dec
repnz
cli
dec
fwait
xchg
stc
and
aas
ss
sbb
popf
std
fcomps
hlt
fldenv
add
mov
loop
les
xchg
dec
and
cmpl
stc
dec
pop
sti
and
negb
mov
mov
add
xor
sbb
pushf
pop
pop
mov
jg
xchg
and
mov
stc
or
enter
popf
cltd
lahf
cmpsl
loope
int3
adc
addl
dec
popf
mov
sahf
sub
das
sbb
mov
lods
xchg
and
push
jp
mov
push
loopne
lds
mov
pop
dec
xchg
xor
mul
ljmp
sub
clc
mov
sbb
xor
xchg
pop
cltd
push
cmpsl
pusha
adc
sbb
test
adc
loop
cmp
xor
test
addr16
or
das
pop
xlat
sbb
ljmp
out
mov
jo
cbtw
or
sub
js
mov
pop
pop
adc
or
sbbb
pop
loopne
push
sub
pop
dec
bound
or
xchg
test
fdiv
xchg
cmp
mov
std
add
call
mov
js
sbb
jle
insl
cmp
test
or
iret
pop
mov
dec
mov
jbe
sbbl
divb
jb
lock
xchg
shlb
insl
mov
subl
pop
cmp
fistps
adc
rcrb
je
dec
int3
push
dec
adc
jge
or
xorb
lods
xchg
lea
xchg
mov
xor
mov
dec
notl
pop
test
cmp
test
cwtl
ljmp
test
xor
and
inc
and
aas
cmp
pop
push
stc
xor
jnp
mov
ljmp
jno
and
movsl
bound
bound
inc
dec
mov
and
sarb
inc
bnd
ljmp
cs
fxch
sti
add
inc
jnp
jecxz
dec
pusha
and
adc
cli
dec
outsb
jne
jbe
cmp
mov
or
je
imul
les
jmp
cmp
sti
aaa
fldl
jno
fstl
jnp
add
subb
sbb
dec
jb
sub
push
lahf
sbb
aad
fbld
outsl
adc
cmpsb
adc
idiv
pop
fdivrs
lds
mov
fidivrl
push
lret
sahf
popf
adc
jge
lods
pushf
sbb
dec
push
rolb
in
mov
rcl
xor
sbb
add
lods
and
mov
xor
movsb
pop
xor
fsts
mov
loop
popf
pop
sbbl
fnstenv
lahf
and
jb
and
mov
das
jmp
push
xchg
pop
aaa
mov
sub
loop
mov
out
jnp
test
stos
dec
in
mov
inc
xor
shlb
adc
xchg
sahf
or
mov
pop
cli
sahf
dec
aaa
das
scas
xchg
add
sti
out
sarb
call
in
sub
outsl
push
pop
sahf
call
fldenv
lock
jge
adc
psllw
in
mov
arpl
gs
xchg
sub
mov
push
mov
mov
adcb
jo
fwait
push
xchg
dec
mov
clc
sub
out
lds
mov
and
mov
pop
cmc
xchg
sbb
out
fisubs
cmp
mov
fnstcw
lea
les
cmpsl
nop
sbb
in
xor
sub
push
les
inc
aam
xchg
cld
xchg
add
dec
cltd
xor
add
std
dec
insb
test
jae
shrb
cs
scas
imul
sub
das
sub
mov
or
test
stos
add
clc
and
add
xchg
pop
ss
lds
stos
or
cmp
xchg
maskmovq
idivl
xor
fisttpll
js
xor
push
xchg
pop
je
imul
pop
pop
push
cmp
sahf
add
cmc
adc
pop
cwtl
add
add
mov
sbb
add
add
jo
cmp
cltd
repnz
sub
xor
gs
sbb
jbe
xor
inc
jl
stc
cmpsb
xor
scas
pop
arpl
scas
push
mov
iret
test
cmpsb
neg
mov
fstpt
mov
and
dec
mov
mov
stos
adc
fsubs
dec
loopne
xchg
push
xor
test
test
xchg
data16
scas
ss
mov
in
leave
jbe
push
mov
lock
andl
std
push
lods
addb
loopne
jmp
repz
pop
cmp
fisttpl
jl
stos
clc
scas
push
lret
dec
and
das
les
and
mov
imul
xor
pusha
loopne
lret
fidivl
subb
ja
xor
xlat
adc
dec
loop
dec
lcall
xchg
and
adc
loope
mov
sbb
imul
cltd
or
jo
mov
cmp
xchg
adc
inc
je
xlat
dec
mov
sub
loopne
stc
xchg
sub
ja
lret
push
fs
fs
inc
aaa
aaa
pop
pop
jne
mov
inc
cmc
loope
xchg
xor
pop
mov
outsb
pop
inc
icebp
mov
sbb
lret
pusha
add
imul
lret
mov
ficomps
cmp
and
divl
push
test
mov
xchg
mov
mov
ret
lods
jno
adc
adc
xor
push
push
sub
jecxz
xchg
in
push
push
and
push
xchg
sub
mov
test
mov
jae
rcl
fcmovu
fcmove
xor
dec
loop
xchg
mov
dec
xor
mov
jns
pop
or
icebp
outsb
mov
or
and
inc
xor
dec
popf
add
dec
dec
xor
stos
jo
mov
fldenv
pushf
and
je
or
mov
cld
cmpsb
jmp
dec
nop
dec
outsl
clc
or
and
sub
testb
mov
pop
mov
or
and
pop
dec
jae
xor
and
and
js
outsb
sbb
ljmp
mov
out
call
or
mov
fsub
cmp
add
mov
dec
dec
push
jb
and
shrb
jmp
fwait
out
in
aam
pop
push
dec
repz
push
andb
lods
pop
pop
clc
mov
cmp
mov
lds
int
stos
fsubrl
xchg
out
pop
rcrl
pop
call
popa
test
fistpl
xor
fcompl
jnp
pop
mov
inc
adc
cmp
std
push
out
int3
jbe
test
jb
xor
pushf
jle
lods
je
out
mov
xor
jbe
in
xor
fildl
scas
stc
fisubrl
adc
hlt
stos
dec
pop
cmpl
adc
fstpl
pop
int
pop
insl
ret
jecxz
cld
repnz
or
adc
add
lret
pusha
jge
adc
xchg
xor
sarb
add
enter
and
shrb
repnz
xchg
push
xlat
sti
pop
int
cmpsb
pop
lcall
enter
push
jg
xchg
arpl
test
dec
sub
xchg
xchg
jle
mov
andb
lock
push
cmc
cmpl
in
les
popa
test
outsl
dec
cmc
push
inc
push
test
popf
fildll
push
sub
test
jl
sbb
xchg
push
loopne
sarl
push
push
mov
ss
orl
xchg
outsb
mov
inc
fisttpl
je
sub
jmp
jp
add
mov
pop
inc
or
test
mov
dec
ds
inc
push
jae
cmp
cmp
ds
jo
push
shrl
add
mov
push
jge
cmpsb
outsb
int
je
sarl
ja
mov
add
fcmovnu
fstp
or
pop
adc
adc
sub
pop
push
xchg
sub
mov
xchg
and
cmpsb
dec
xor
inc
imul
loopne
cmp
scas
insl
rolb
inc
gs
jno
jns
mov
fdivr
popf
std
cmpb
mov
shlb
mov
sub
sub
dec
sbb
das
jne
push
jae
cmp
les
loopne
idivl
add
rsqrtps
adc
mov
sbb
fwait
or
pop
arpl
pop
sbb
ja
jne
xor
scas
sub
movsl
ret
push
mov
pop
lret
bound
movlps
lret
sub
jle
xor
xor
jmp
xchg
push
xlat
add
jno
sbb
enter
pop
je
arpl
adc
scas
pop
xchg
push
push
xor
add
in
nop
fcoms
cmc
movsl
push
clc
lea
das
mov
fsubl
into
mov
mov
fsubs
cmp
lahf
aaa
dec
flds
xchg
sub
sarb
clc
push
cwtl
xor
dec
shl
orb
xor
test
push
pop
add
iret
xor
push
mov
or
push
inc
and
stos
push
mov
int
push
or
cmpl
loope
add
cmpsb
subl
out
xor
fmul
xlat
push
mov
pop
mov
sub
jno
lret
push
jnp
ljmp
popf
or
aas
inc
push
inc
pop
incb
or
scas
shlb
pop
sub
jno
pop
fidivs
pop
int
std
lea
pop
enter
mov
enter
push
jecxz
popf
jle
adc
sbb
jp
out
cmpb
adcb
leave
imul
aaa
pop
repz
stc
iret
add
mov
bnd
pop
das
push
sub
add
adc
sub
fisttpl
arpl
stc
jle
jno
pop
mov
dec
cmpsb
mov
loop
out
loop
mov
or
mov
inc
in
mov
mov
arpl
mov
push
inc
cmpsb
xchg
into
cmp
lret
je
ss
jge
xor
jp
cli
les
pop
imul
mov
rdtscp
faddp
clc
mov
adc
cwtl
xor
pop
aaa
inc
sbb
add
lret
lcall
sub
ljmp
pusha
inc
sahf
mov
inc
pushf
inc
cmp
imul
inc
sub
xchg
or
lods
inc
inc
mov
les
inc
shl
lret
sub
fiaddl
mov
sub
pusha
subl
sub
fldcw
int3
into
pop
pop
inc
fldcw
xchg
adcb
or
imul
mov
mov
ficompl
insb
movsb
dec
adc
inc
mov
xchg
cld
scas
mov
xor
data16
imul
and
inc
dec
mov
jns
bound
test
dec
insb
and
mov
jecxz
xchg
pop
xchg
mov
ret
out
xchg
mov
repz
add
dec
sbb
cmp
xor
hlt
jbe
cmpsb
sbb
nop
xor
orb
lock
addb
testb
lods
jp
mov
push
xor
mov
popf
push
orb
lret
ja
fxtract
pop
out
mov
ljmp
sub
push
jnp
cmp
mov
sahf
push
scas
jge
pop
sbb
adc
adc
rcr
or
insb
stos
inc
jbe
xchg
adc
adcl
cmc
push
jl
push
stc
divl
rorl
insb
xchg
in
ja
push
rcrl
fsubl
xchg
loope
mov
das
adc
orl
add
in
xchg
rcrb
lret
cli
sbb
lods
jne
push
pop
sbb
inc
mov
rorl
sub
popa
adc
jg
aam
arpl
mov
ss
rep
sbb
rcll
fildll
pop
lock
jo
dec
popf
inc
sahf
jno
adc
xchg
adc
cmpl
into
lock
mov
inc
lods
int
mov
ljmp
aad
xor
push
mov
pop
movsl
jle
lcall
rclb
push
and
scas
insl
or
or
out
push
add
mov
arpl
cmp
sarl
cltd
pop
xor
dec
sub
dec
add
xchg
dec
add
adc
cld
dec
stos
cmp
cld
mov
lret
int3
outsb
gs
jge
and
add
jl
mov
ja
add
push
add
dec
in
push
ja
xchg
sar
pushf
pop
mov
popf
addb
sbb
push
lock
dec
sub
mov
mov
sub
repz
xor
add
and
loope
daa
xchg
pop
aaa
sti
lea
inc
je
cs
std
lock
test
loope
push
or
lret
and
pusha
sahf
add
sti
push
jge
cmp
add
inc
xor
daa
push
or
movsb
popa
mov
ret
shlb
faddl
inc
dec
inc
nop
mov
test
jne
leave
or
ljmp
rcll
add
ljmp
das
add
add
push
movsl
pop
push
inc
xchg
aas
jg
loopne
jg
mov
in
fsubs
lds
loop
js
out
neg
dec
lahf
adc
mov
cmp
jmp
or
jecxz
fimull
and
adc
aam
and
in
or
jl
insl
bnd
sbb
mov
mov
and
pop
rcl
stos
cmp
std
test
std
popa
sbb
sub
or
jg
pop
in
cmp
add
rcr
bound
add
fisubs
shl
and
sbb
push
cmp
or
pxor
lcall
fists
dec
test
jl
pushf
lock
adc
inc
mov
fsubrl
inc
les
xor
fstps
call
lahf
pop
popl
and
sub
stc
jns
xchg
push
lods
andl
mov
lret
jo
jl
and
ds
sti
call
xor
in
lahf
int
mov
imul
stos
and
add
ss
in
push
jle
jae
push
cwtl
dec
push
add
push
xchg
mov
sub
mov
sbb
insl
jno
mov
hlt
loop
adcl
into
push
pusha
jmp
inc
ljmp
fwait
mov
sbbb
xchg
icebp
into
mov
and
lret
std
mov
dec
pop
mov
mov
inc
in
dec
push
lods
movsl
mov
xchg
dec
dec
xor
ss
mov
cmp
repz
outsb
in
pop
cmp
mov
out
sbb
scas
fsubrl
insb
or
shrl
imul
jnp
fwait
lock
sbb
dec
int
xchg
andps
in
pop
add
loop
cs
icebp
in
pop
jecxz
jae
xchg
scas
ds
clc
pushf
jmp
mov
fld
aaa
lcall
lret
mov
insb
push
mov
outsl
jge
out
ljmp
sbb
repnz
shlb
push
in
cli
int3
loopne
dec
mov
pusha
cmp
inc
lret
mov
lods
mov
or
aas
or
scas
pop
push
cmpl
aas
arpl
filds
ljmp
mov
call
and
es
cmp
lret
fldcw
xchg
int
pop
pop
cmp
and
loopne
or
inc
push
add
inc
adc
sbb
push
test
dec
lret
je
fistpll
aad
xchg
lods
lret
xor
ss
adc
enter
and
insb
mov
adc
lret
push
mov
jle
ss
das
test
and
cmc
xlat
lret
or
push
add
mov
adcb
pop
pop
jne
insb
jg
out
andb
fbstp
xor
sbb
push
hlt
in
mov
lret
ljmp
js
mov
push
or
nop
push
ss
or
xchg
sub
repz
imul
or
fmul
arpl
inc
imul
enter
and
arpl
mov
jo
inc
sub
mov
sub
sbb
ds
cmc
aaa
jno
or
cmpsb
int3
sub
xor
outsb
xchg
ds
lcall
rorb
xor
shlb
sub
cmp
cli
xor
cmp
xchg
dec
xchg
mov
les
pop
lcall
imul
lds
inc
mov
mov
or
pop
or
or
jb
sbb
mov
and
fcomp
shrl
cmp
fwait
imul
mulb
popf
mov
sub
cli
hlt
addl
jl
jne
sub
mov
jns
sahf
dec
dec
xchg
add
push
pop
ljmp
js
pop
addr16
insb
leave
adc
or
ss
scas
push
out
add
jbe
pop
xor
mov
mov
lcall
mov
mov
jecxz
arpl
daa
xchg
cld
les
out
jp
cltd
dec
adc
cmc
in
mov
mov
ljmp
lods
or
inc
je
loope
mov
popf
add
cmpsl
xchg
jmp
enter
lahf
aam
mov
int
sub
adc
add
repnz
sub
clc
shl
lods
pop
sub
ja
mov
or
jp
fdivl
inc
adc
aam
sbb
icebp
in
not
jne
push
fisubl
mov
inc
in
fs
mov
add
gs
shrb
cltd
sub
dec
dec
ret
jne
pop
out
dec
jmp
int
in
popa
xchg
mov
jne
add
incb
orl
daa
rclb
shlb
adc
jge
test
imul
xor
test
test
xchg
aam
call
lahf
jge
lods
push
test
leave
lcall
jmp
pop
test
les
inc
imul
or
mov
das
push
rorb
dec
xor
mov
mov
cmp
pop
push
aam
mov
es
mov
inc
push
sti
out
mov
into
idivb
mov
lods
push
bound
in
insl
mov
xchg
shlb
fisubrl
xor
imul
jno
pushf
xor
imul
and
popa
push
bswap
mov
call
ffreep
add
sub
fbld
dec
std
cmp
jne
in
daa
movsl
mov
lds
outsl
sarb
xor
xchg
in
mov
jae
cmp
jp
mov
sarb
test
jbe
movswl
jmp
imul
adc
pop
pushf
jg
lea
dec
jmp
sub
jecxz
mov
push
gs
xchg
or
push
mov
rcr
jns
in
and
mov
inc
and
out
pop
lods
add
pop
xchg
sub
loopne
fisubl
push
fidivrl
and
sbb
cmp
push
cli
stos
lods
cmpsb
add
enter
mov
jg
adc
push
mov
inc
sbb
ret
testl
jb
push
bound
cmp
xor
outsb
je
inc
sub
pop
and
loope
push
outsl
cmp
jbe
mov
push
pop
popf
lods
adcl
dec
sub
ljmp
mov
data16
push
push
test
das
in
popf
insl
ds
add
mov
outsb
pop
lahf
lret
mov
sar
imul
cltd
mov
sub
lret
insl
in
or
lods
push
fstl
out
push
ror
xchg
fidivs
mov
xchg
mov
push
mov
test
cld
xchg
push
shlb
mov
movsl
iret
and
lcall
nop
and
ficoml
dec
jl
inc
jno
insl
inc
mov
ret
push
mov
pop
jp
popa
mov
push
pop
xor
popa
imull
inc
ljmp
fcoml
sub
dec
dec
xor
test
push
je
into
aam
leave
fcmovu
sub
add
std
ret
cld
mov
dec
push
orb
jle
mov
dec
fs
inc
mov
dec
jg
stos
push
loop
into
jae
movsl
xor
nop
mov
dec
or
pusha
insl
les
test
ss
mov
in
xchg
sahf
in
xchg
jnp
das
dec
adc
je
adc
inc
dec
mov
xor
ret
jne
outsb
push
fstl
js
test
add
pop
ss
push
cwtl
into
stos
es
stc
mov
je
jno
xchg
stos
cmp
scas
mov
fwait
lods
jnp
aaa
sub
add
out
pop
mov
call
imul
inc
cmpsb
cmp
ljmp
fbld
jbe
mov
in
xor
push
mov
mov
bound
mov
jle
shrb
mov
cs
jbe
jns
lcall
je
mov
jmp
out
jge
dec
xchg
inc
xor
test
shrl
or
jmp
dec
je
outsl
sti
popf
call
cmp
pop
and
mov
out
or
ret
dec
cmpsl
pop
push
shrb
xchg
sub
dec
mov
arpl
sub
add
in
pop
mov
rol
iret
mov
cmp
fldt
repnz
test
fwait
dec
icebp
xchg
int3
insb
imul
mov
out
and
pop
les
fs
mov
sbb
ljmp
or
into
adc
dec
xor
add
push
shrb
cmp
push
push
out
push
lret
jge
add
lds
out
aad
cltd
fdivr
and
or
dec
lret
add
fidivs
nop
fdivl
fldl
enter
mov
jge
js
sub
fisttps
and
pop
dec
std
push
outsl
jp
and
shl
xchg
scas
loop
xor
into
insl
test
cmpsl
push
xor
mov
mov
xchg
xor
scas
test
jp
mov
cld
ss
lods
xlat
sbb
push
ja
or
sbb
jne
outsl
out
push
push
add
pop
in
pop
mov
jge
sub
xor
jae
sub
mov
pop
out
dec
daa
or
in
loope
sbb
cmp
or
jg
and
mov
cmpsb
jo
je
mov
and
aam
jmp
push
sbb
push
movsl
jbe
xchg
jbe
cs
ds
xchg
mov
into
imul
push
xorb
bound
dec
push
insb
adc
mov
in
outsb
pop
jge
cmp
gs
ljmp
xchg
jge
jge
outsl
pop
adc
mov
adc
push
test
push
xchg
in
mov
lret
pop
stc
sub
fbld
sbb
fs
test
addr16
xchg
inc
pop
inc
mov
sbb
jg
into
pop
out
cltd
xchg
sub
cmpl
cli
shll
in
jns
adc
push
and
mov
pop
xchg
jns
mov
cmc
jmp
imul
dec
sbb
mov
int3
sub
jmp
mov
inc
push
adc
sbb
push
daa
adc
mov
and
inc
cmp
outsb
es
rcll
lds
xchg
mov
and
sbb
cmp
mov
cmp
pusha
mov
lret
rorb
fsts
jne
and
inc
gs
jle
xchg
loop
mov
leave
push
loopne
mov
fldt
push
pop
scas
movsl
mov
fucomip
mov
xchg
inc
rorl
fcoml
es
fisttpl
mov
or
das
int3
dec
imul
mov
mov
mov
jb
stos
ret
fistpll
pop
nop
mov
push
inc
iret
xor
inc
sahf
hlt
inc
fstpt
clc
in
jmp
sbb
cltd
in
sbbb
mov
out
pushf
ljmp
jne
negl
in
pop
jle
aad
into
test
adc
les
mov
and
xchg
popa
iret
mov
push
mov
sahf
lcall
or
mov
jo
jbe
push
cwtl
sub
subl
call
or
mov
loop
pop
enter
sbb
xchg
bound
mov
cmp
loopne
scas
xchg
xlat
cmpsb
jp
mov
push
add
add
xorb
xor
std
adcl
mov
push
jge
mov
pop
pusha
push
xchg
pop
clc
in
daa
mov
in
or
and
xchg
sbb
add
pop
scas
inc
outsl
popl
rol
cmpsb
ret
mov
out
jae
mulb
and
xchg
popa
sbb
xchg
dec
jb
das
fldl
sbb
adc
inc
cmc
and
lret
inc
pop
jl
imul
stos
shl
xchg
fimull
aad
xlat
add
sbb
imul
inc
imull
sbb
lret
or
loope
adc
lea
push
shrb
cmp
lret
push
bound
mov
dec
cmc
jg
inc
rcrl
sub
shl
sbb
outsl
mov
xor
cmp
xchg
adc
push
sbb
push
int
jnp
movsl
push
sub
imul
push
push
lahf
xor
mov
jl
call
movsl
xchg
ljmp
stos
fs
mov
iret
mov
faddp
int
push
xor
push
pop
dec
lods
ja
imul
or
arpl
push
or
push
and
leave
mov
lds
inc
sub
pop
adc
int3
outsl
inc
imul
mov
test
test
xchg
or
mov
dec
cmpsl
adc
push
fidivl
add
push
dec
dec
flds
mov
and
push
nop
jnp
cmp
jmp
ljmp
lock
mov
inc
gs
pop
ficoml
das
cmp
rolb
push
mov
mov
or
addb
dec
loopne
mov
dec
ds
pop
mov
ror
ds
or
push
mov
movsb
nop
int3
pop
mov
leave
xor
sub
icebp
mov
test
ds
mov
in
fcoml
sub
xor
sub
mov
ljmp
adc
xacquire
repnz
lock
inc
scas
mov
xchg
sub
sub
push
sti
dec
ljmp
insb
insb
pushf
xchg
dec
adc
mov
jb
out
fidivl
or
xchg
imul
leave
add
mov
push
lret
bnd
cmpb
repnz
pushf
pop
fisubrl
sub
enter
sti
clc
daa
mov
cmp
testl
int3
mov
sahf
and
lcall
arpl
dec
inc
cld
test
sub
dec
aas
mov
mov
jnp
xchg
mov
adc
aaa
add
out
push
or
loop
cmc
mov
test
adc
clc
xchg
xor
add
mov
mov
push
aad
pop
adcb
xchg
imul
mov
add
push
and
pushf
arpl
jmp
cs
or
bound
and
subl
insb
cmp
ds
pop
sbb
cwtl
and
sar
sti
push
push
call
push
or
leave
pop
mov
dec
insb
andl
addr16
outsb
aaa
loopne
repnz
sarl
out
stc
cli
aaa
shl
out
in
pop
ja
cmp
push
xchg
add
dec
inc
shll
mov
mov
adc
pop
inc
push
out
mov
or
fnstenv
nop
push
pusha
cmp
outsl
add
repz
sbb
fsubrl
gs
ds
out
int
add
push
inc
xor
lods
int3
jge
sub
dec
into
add
das
inc
roll
lea
pop
adcb
cmp
imul
hlt
cmp
lods
js
jmp
pop
add
inc
jge
jl
aam
push
or
or
mov
sbb
push
mov
xchg
test
movsb
dec
add
pop
outsb
adc
push
adc
or
data16
and
fsub
adc
add
stos
xchg
dec
rorl
adc
aaa
int3
test
cmp
inc
adc
mov
je
add
fsubrs
arpl
je
xor
inc
aad
jb
aas
xchg
std
ficompl
jae
jmp
int
jno
iret
in
and
sbb
loope
jo
gs
inc
xchg
jp
jl
pushf
sbb
dec
jle
pop
fildll
or
aam
addb
jbe
inc
inc
jb
enter
mov
push
push
movsb
push
inc
xchg
pop
fisubs
pushf
xor
sub
sbb
ljmp
and
or
cmpsl
xchg
cmp
lds
jne
dec
sub
je
add
xchg
xchg
lret
mov
push
inc
ja
pop
stos
mov
sbb
cs
aad
cmp
mov
lds
jb
sub
jno
mov
and
rcrb
inc
loope
mov
pop
in
mov
jo
pop
push
lret
pop
xchg
out
enter
inc
test
adc
les
inc
cs
out
xchg
xor
cld
pop
ret
std
in
push
push
mov
pop
test
rcr
ret
sub
jne
add
mov
cmp
cmpsl
mov
xchg
mov
push
ret
mov
cmp
daa
insl
mov
sub
mov
jnp
jmp
lret
add
lret
push
cmp
es
push
notb
xchg
jl
dec
popf
mov
inc
jbe
insl
movsl
mov
xchg
out
sub
out
and
xor
adc
mov
aas
and
insl
pop
adc
lret
fdivrl
rcll
enter
fcmovb
shlb
sub
xor
xchg
mov
rcr
mov
adc
mov
out
xchg
or
and
out
jns
jo
stc
and
jmp
lret
xchg
out
jp
roll
push
cld
adc
subb
pop
or
aaa
jno
pop
lods
add
pop
add
nop
es
leave
popa
imul
jbe
and
inc
cmp
pushf
in
push
fcoml
lods
cwtl
sahf
inc
rcrl
std
xor
stc
xchg
imul
jmp
xchg
sbb
fcoml
or
sub
sahf
js
js
push
xchg
fdivrs
adc
cld
inc
movsb
cld
inc
es
xchg
adc
lock
mov
iret
and
mov
shll
gs
outsl
mov
ds
les
fwait
call
cwtl
push
push
cld
mov
xor
subb
push
push
mov
aam
mov
jne
popa
mov
sbb
test
jg
sub
and
push
test
push
pop
inc
sti
mov
jbe
pushf
mov
pop
mov
das
jns
out
popf
mov
jl
or
mov
dec
sub
xchg
aad
into
inc
ss
int
cmp
jnp
jl
add
jbe
ljmp
icebp
or
test
lds
sbb
mov
xchg
lret
mov
and
outsl
cmp
fistpll
aas
and
imul
lods
loopne
loopne
pop
jo
adc
adcb
fcmovne
aad
xchg
xor
jnp
jb
xor
cmp
cpuid
mov
test
xchg
sbb
mov
dec
push
cmp
sub
std
inc
movsb
and
mov
flds
push
or
jg
sbb
cs
sub
sub
adc
out
inc
and
pop
add
or
repz
enter
rolb
es
negb
imul
push
out
and
out
lahf
add
xorl
repnz
mov
ljmp
insl
sahf
dec
pop
mov
xor
out
nop
addb
inc
cltd
xchg
jne
cmp
insl
and
mov
xchg
xchg
push
fidivrl
inc
inc
xchg
rorb
or
and
arpl
jns
dec
xor
and
subb
fwait
add
add
pushl
or
adc
pop
addb
in
mov
adc
pop
fdiv
decb
daa
iret
jl
or
jecxz
repz
in
push
sbb
das
jl
popa
dec
dec
push
xchg
aas
adc
movsb
mov
test
cmc
push
push
sub
push
insb
mov
xchg
cltd
push
sub
imul
stos
inc
mov
ja
xchg
pop
fidivrl
sti
sahf
leave
pop
sub
and
fbld
sub
aas
dec
add
sub
rclb
or
out
in
lea
push
lods
std
arpl
xlat
pop
popf
pop
mov
mov
arpl
jbe
lcall
lods
pushf
fxch
inc
pop
adc
add
pushf
lods
aad
cmp
addr16
pop
sahf
cmpsb
sub
adc
push
lahf
inc
jno
popf
xchg
inc
xor
push
lds
jle
ljmp
push
jecxz
xor
pop
cmpsb
dec
out
dec
sbb
cmc
add
xchg
xchg
mov
add
das
inc
test
pop
pushf
insb
cli
xchg
and
aas
test
mov
rcll
and
loope
imul
or
and
enter
call
sbb
jb
das
xor
inc
icebp
xchg
pop
es
or
xchg
addr16
and
dec
cmp
push
inc
test
adc
fdiv
aam
stos
mov
xchg
adc
jno
fidivs
sti
cwtl
mov
addr16
add
push
cmp
inc
adc
call
and
sub
in
fsubp
inc
je
lahf
dec
dec
fimuls
jle
jmp
gs
iret
add
in
jl
mov
mov
or
arpl
or
fists
in
flds
push
push
out
mov
out
popf
cmp
or
or
mov
jns
lcall
roll
push
mov
aam
cmp
les
push
push
sbb
scas
pop
addb
bound
in
cmp
adc
test
insl
cltd
test
hlt
cmp
enter
pop
xor
lret
sub
stos
in
pop
repnz
mov
jb
fstps
and
pop
jl
xchg
orl
pop
cmpsb
cld
sbb
lea
mov
cmp
test
push
jl
add
ds
jle
rclb
unpcklps
adc
add
mov
mov
jns
lret
cwtl
andb
loop
popl
push
std
pusha
mov
xchg
mov
xor
ret
xchg
ds
aas
ljmp
jbe
in
add
imul
outsl
mov
cmp
test
dec
cmpsl
add
xlat
testl
lcall
push
pop
add
ja
mov
enter
jmp
adc
and
lods
test
lods
dec
mov
sub
out
jbe
test
mov
out
push
jp
divb
scas
inc
fidivrl
out
push
sub
ds
mov
jo
adc
jns
xlat
mov
jbe
xchg
movsl
add
stc
stos
lret
loop
add
mov
push
dec
pop
sbb
jp
sub
popf
sbb
mov
inc
ja
shrb
test
mov
inc
and
icebp
aam
mov
jnp
adcl
sbb
fucom
xchg
push
cs
xor
and
je
lds
iret
in
into
loope
js
js
arpl
adc
imul
idivl
int
fldcw
aam
lods
jnp
xchg
jmp
xchg
xlat
movsb
fs
mov
jnp
pop
icebp
scas
add
mov
cmp
fbstp
and
gs
push
lods
inc
inc
ja
sub
shll
adc
cmp
mov
jnp
int
inc
cmpsb
gs
mov
push
loopne
lret
adc
or
sub
sub
test
and
jno
mov
stos
aaa
cmpb
enter
mull
inc
clc
inc
icebp
cmp
das
aaa
mov
adc
int
pop
jbe
xchg
inc
xor
inc
sbb
pop
fldt
sti
cmp
and
jle
xchg
insl
jmp
xor
mov
leave
jno
iret
test
imul
call
test
or
ficompl
mov
lds
pop
sbb
out
lret
pop
push
lret
push
or
leave
aas
inc
in
jo
loope
lock
mov
and
ja
inc
nop
cli
test
out
mov
sub
push
inc
jns
iret
icebp
adc
pop
jle
mov
push
xor
or
mov
iret
xor
cmp
dec
jge
xchg
mov
out
push
mov
cmc
mov
sbb
lds
ret
rcrl
mov
jge
mov
cmp
inc
jg
push
and
jb
cmp
popa
jno
dec
call
mov
out
movsb
adc
data16
out
sub
stc
jae
fnstsw
mov
xchg
adc
loope
dec
lret
mov
ja
jnp
mov
fsubrs
xchg
lahf
xor
lret
roll
adc
dec
push
in
jo
adc
loopne
sbb
pusha
cmc
xor
es
adc
fwait
sub
mov
stos
mov
fs
dec
lods
lahf
and
xor
popa
xor
shlb
scas
push
push
xor
mov
mov
jo
stc
xlat
cltd
pop
mov
xchg
fists
mov
and
aas
jb
push
test
dec
jbe
cld
fs
push
pop
fxch
test
sti
xchg
xorb
fsubp
mov
bound
je
mov
or
ljmp
popf
fs
loopne
or
mov
mov
pop
test
dec
mov
subl
cmp
in
xor
fadds
inc
jp
sub
push
sub
loope
aam
sahf
sub
xlat
sahf
adc
ret
sub
sub
in
inc
add
add
into
aad
test
nopl
mov
cli
jl
lds
lahf
push
xor
repz
cmp
loopne
push
mov
add
repnz
imul
jecxz
mov
cli
adc
das
xchg
sbbb
bound
outsb
xlat
in
xchg
loop
stos
dec
hlt
sbb
sub
testb
cmp
adc
and
dec
mov
in
pop
cld
inc
mov
push
push
mov
jecxz
cmpsl
inc
popa
stc
jns
movsl
in
jno
into
sub
es
aas
xchg
and
push
repnz
mov
jle
cmp
test
xor
add
mov
adc
hlt
in
inc
dec
fxch
arpl
imul
ds
and
les
test
test
add
mulb
aad
cld
pop
pop
fists
jecxz
mov
jnp
jnp
aam
mov
nop
dec
inc
rcl
pop
jns
in
jmp
jmp
in
lret
insl
mov
enter
out
mov
inc
enterw
dec
scas
sub
mov
sbb
rcrl
iret
adc
rcl
and
test
cmp
inc
ret
push
insb
aad
add
popf
push
cltd
jl
movsb
add
inc
ja
in
sub
cwtl
insl
pop
sbb
aad
sbb
or
xchg
xchg
stc
pop
es
add
sarb
popa
inc
insb
inc
mov
adc
jg
aaa
loope
in
cmpsl
fcmovu
in
mov
data16
or
add
aas
pop
mov
fisttps
push
je
jle
push
aas
jmp
and
sarl
jl
bound
lods
out
ret
inc
pushf
jl
jmp
or
repnz
dec
mov
mov
int3
jg
repnz
rcll
push
ljmp
lds
insb
js
lret
bound
dec
fcoms
cmp
jae
scas
inc
je
fdivrl
cmp
push
xchg
bound
cli
mov
mov
in
fdivl
xor
xchg
dec
or
cwtl
sbb
fnstcw
sbb
push
daa
in
call
dec
and
loope
lret
jp
cmpsb
mov
std
pop
daa
fistps
pop
adc
int3
mov
sub
sbb
push
pop
lret
jnp
cmpsl
ror
mov
mov
xchg
xchg
data16
fisttpll
mov
xchg
orb
pushf
push
mov
xchg
movsb
xchg
mov
repz
mov
scas
push
idiv
add
or
push
cmp
sbb
cmp
or
dec
or
movsl
movsl
adc
mov
or
sbb
test
push
mov
mov
lret
mov
dec
push
loop
push
cli
clc
lret
pop
xor
out
push
inc
fsubrs
push
out
pop
repz
ret
mov
push
out
mov
ja
std
xchg
mov
inc
add
cltd
mov
lock
push
fbld
bound
insb
mov
pop
ja
push
push
cmc
insl
xlat
dec
out
xchg
mov
jo
inc
ret
jp
push
pop
push
sub
dec
iret
and
repnz
loope
inc
in
rcrb
repnz
cmpsl
xor
cwtl
clc
addr16
and
stos
roll
popa
lret
mov
std
adc
mov
out
adcb
lret
ja
jb
addr16
and
scas
pop
inc
or
mov
xchg
jle
sbb
iret
push
stos
fmull
hlt
fidivs
imul
add
push
adc
movsb
outsb
inc
popa
push
jae
rcr
inc
fisttpll
dec
shrl
ljmp
nop
add
mov
xchg
cmc
and
sarb
adc
inc
mov
hlt
aaa
aad
into
shlb
pop
in
mov
mov
gs
cli
jle
sbb
xchg
popa
push
mov
bound
nop
movsl
out
test
pushf
test
in
jne
ljmp
pop
inc
sti
stos
add
push
mov
ja
ljmp
mov
inc
xor
subl
arpl
or
cmp
lods
aaa
fcmovbe
cli
sub
mov
mov
pop
lret
pop
or
sbb
sarb
outsb
dec
dec
jmp
shrb
xchg
das
adc
cmpl
insb
xor
cmp
dec
cmpsl
adc
xchg
jo
pop
lcall
repnz
sub
push
push
pop
cmp
lds
pop
pop
sbb
ds
mov
sub
or
in
push
mov
add
cmp
outsb
test
test
lret
arpl
ret
ja
dec
xlat
push
lcall
ljmp
fsubr
sti
mov
repz
or
imul
out
gs
div
dec
jnp
jno
fs
xchg
dec
sahf
leave
cmpsb
int3
jmp
xor
sub
imul
dec
shr
leave
adc
or
fcoms
repz
xchg
mov
pop
inc
mov
sub
test
jecxz
nop
bound
cmovle
lcall
mov
in
test
imul
sbb
jg
or
adc
fistpl
cwtl
or
push
mov
adc
je
test
inc
cwtl
pop
lods
test
cmc
mov
jbe
mov
scas
int3
loope
cmpsb
out
push
scas
cs
cmp
xor
or
shrb
cmp
push
sbb
and
add
mov
mov
inc
stos
jae
pop
cmpb
int3
push
dec
sub
movsb
xchg
sbbb
clc
movl
pop
sbb
mov
testb
xor
imul
push
xor
rcrl
lahf
inc
js
rcl
pop
movsb
imul
jecxz
add
mov
clc
sbb
out
add
test
adc
mov
test
push
add
cmpsb
xor
mov
mov
bnd
push
aas
mov
incb
mov
out
test
add
mov
xor
adcb
sbbl
lock
xor
mov
add
ds
ja
jg
and
lock
and
jmp
mov
push
dec
fimuls
hlt
orl
mov
subl
xor
cmpsl
cwtl
fs
mov
cmp
lock
push
sub
mov
js
rcrl
inc
inc
jns
add
dec
nop
xor
and
andl
and
add
fstpl
inc
jo
sbb
sbb
push
and
mov
hlt
cmp
mov
sti
imul
imul
enter
cmp
out
jp,pn
cmp
hlt
and
into
cmp
mov
and
lea
ret
and
mov
sub
aaa
lret
jae
shl
pop
idivb
testb
scas
and
adc
aaa
or
mov
jle
call
xor
sbb
fmul
ret
mov
lret
and
sbb
mov
imul
lret
insl
aam
fisttpll
mov
ret
pop
in
dec
sbbl
or
hlt
movsl
and
lret
mov
insb
push
sbb
imul
cmp
into
sti
jbe
sti
fs
mov
gs
xchg
inc
jno
pop
mov
lock
add
push
hlt
adc
jb
mov
std
push
jae
test
aas
shlb
fisttps
add
mov
xchg
lock
jg
das
fsubrs
sahf
adc
inc
sti
aas
in
outsb
js
inc
icebp
jle
scas
sub
mov
cmp
mov
mov
movsl
and
cld
fistl
jecxz
pop
addb
mov
daa
dec
ret
xor
and
inc
pushl
ffree
mov
imul
pushf
stos
dec
or
pop
xchg
test
and
pop
enter
movsl
and
and
int
add
in
pop
mov
mov
mov
push
sub
pop
mov
jae
nop
jb
jbe
pusha
sub
jecxz
in
cli
mov
test
iret
shll
sub
jp
subl
cmp
xchg
inc
mov
mov
and
adcl
xchg
pop
shr
adc
popa
mov
dec
cwtl
pop
add
in
incl
mov
dec
mov
xor
jo
mov
pop
imul
adc
mov
fstl
fs
push
mov
or
inc
mov
xor
xor
out
icebp
or
or
fs
lods
sub
cmc
mov
add
push
cld
bound
aad
mov
push
addl
lock
add
je
push
inc
ret
cld
jo
loop
inc
ljmp
cld
pop
pop
shlb
adc
pop
mov
add
pop
push
je
sub
sbb
pop
mov
in
outsl
insb
test
cld
addr16
pop
mov
iret
cwtl
and
mov
cmp
pop
jp
adc
pop
jbe
cmp
mov
pop
jg
add
mov
sbb
rcll
popf
int
or
adc
cmp
sbb
repz
adc
es
mov
mov
mov
sub
or
pop
frstor
mov
xor
adc
adc
push
pushf
jmp
xor
add
loopne
sub
das
addr16
pop
outsb
in
fidivrs
out
mov
repz
dec
fwait
cmp
or
scas
ljmp
and
mov
ret
lahf
lock
mov
push
leave
sbb
es
push
jmp
push
fildl
add
arpl
adc
xchg
lock
ret
dec
sub
in
cli
andb
push
lods
mov
inc
lcall
out
in
sbb
xchg
fsts
daa
in
inc
sub
pop
push
mov
lods
pop
add
test
xchg
mov
jnp
les
scas
or
into
sbb
mov
ficoms
les
push
test
cmp
push
cmc
lret
ljmp
pop
nop
push
sub
mov
push
mov
cltd
movsl
xlat
xor
jne
or
lock
arpl
inc
aas
addr16
ffreep
iret
xchg
pusha
jl
adcb
inc
gs
and
popa
xchg
or
inc
pop
xlat
es
in
sbb
mov
pusha
js
movsb
lods
lret
divb
push
test
mov
adc
sub
popf
jge
ds
or
nop
stc
into
js
sbb
push
pop
outsb
dec
mov
std
cltd
mov
sarb
inc
and
stc
mov
data16
imul
sbbl
and
aad
and
rclb
imul
lret
arpl
insl
shr
iret
dec
lods
pop
sub
jae
xor
lret
add
push
lods
repz
fldt
mov
pop
mov
dec
sti
push
test
dec
mov
in
cmp
xor
xlat
into
pop
or
pop
test
jge
stos
shlb
push
cli
insb
imul
out
subb
add
adc
add
lcallw
gs
les
idivb
fnsave
fwait
call
loop
jge
insl
test
sbb
ljmp
mov
sub
xchg
push
lahf
loop
dec
add
or
cmp
fcomps
mov
adc
stos
mov
lret
push
add
ds
dec
es
testl
cmpsl
pop
fcoml
loope
sbb
mov
sub
imul
ds
mov
lret
subl
cltd
jecxz
imul
enter
data16
push
mov
xlat
or
adc
sbb
rol
push
stos
push
jb
mov
xor
ret
out
cmp
cld
xchg
inc
jns
mov
stos
sub
scas
movsb
xchg
ljmp
movsl
adc
adc
into
jmp
sub
or
pop
sub
jno
ljmp
push
cwtl
test
sbb
daa
int
das
sub
cmc
xchg
push
mov
aam
dec
mov
xlat
jmp
arpl
cld
mov
mov
pop
mov
jns
lahf
jns
repnz
outsb
inc
stos
push
push
adc
ja
xor
inc
outsl
mov
mov
jg
pop
loop
cmp
inc
xlat
sbbb
mov
test
movsb
adc
sbb
out
imul
movsl
sbbl
imul
sbb
les
loope
xlat
or
or
jns
pop
pop
addr16
popf
lret
pop
push
xchg
add
test
mov
movl
sbb
cmc
xchg
rcrl
stos
lds
cmp
sahf
sub
push
and
bound
aas
movsl
repnz
mov
leave
xor
ficompl
out
jecxz
pushf
sbb
in
loop
lahf
in
pop
push
or
sub
cmp
push
mov
aaa
scas
fisubs
xchg
xor
mov
loop
jne
cs
fwait
pop
fs
jl
out
fsubrs
clc
adc
push
dec
jl
insb
cmpsb
std
sbb
cld
ljmp
cs
fs
lock
loop
adc
add
pop
fwait
or
jbe
jns
call
bound
adc
shrb
mov
or
ss
and
mull
jecxz
test
cld
sub
test
shlb
lcall
adc
imul
into
lret
or
mov
mov
and
cmp
in
add
addr16
int
sbb
loope
rcrl
inc
imul
clc
test
test
adc
out
xor
sti
lods
push
fwait
mov
popf
pop
mov
outsb
insb
js
addl
mov
lret
xchg
pop
nop
enter
push
inc
add
sbb
lret
mov
repz
popf
and
cmp
jecxz
iret
push
jecxz
aad
ret
mov
mul
subb
pop
add
stc
mov
cld
es
sub
push
add
shl
shll
jecxz
sbb
popf
outsl
xor
pusha
mov
mov
pop
fmull
dec
pop
or
hlt
lcall
cmp
push
xor
testl
int
dec
pusha
jns
imul
mov
sarl
adc
adc
adc
lcall
mov
mov
dec
addr16
and
repnz
sbb
jle
xor
enter
sti
pop
xchg
outsl
cmp
loopne
push
gs
pusha
pop
ficomps
xor
cmpsb
mov
adc
in
adc
in
fs
mov
jmp
cmp
adc
push
push
adcb
jp
lret
into
jmp
sub
addr16
lods
xor
jae
pop
cmp
jno
jle
and
mov
xorb
inc
out
pop
jg
inc
mov
or
inc
sbb
adc
mov
xchg
mov
add
call
adc
xor
hlt
test
lret
jle
or
xchg
cld
inc
mov
dec
mov
dec
js
push
lret
shl
push
shlb
ss
mov
xchg
ss
and
jmp
cwtl
shr
negb
mov
addr16
filds
xor
pop
xor
mov
and
lods
mov
push
jae
lea
incl
movsb
fsub
lahf
sbb
sbb
mov
lret
add
jne
push
push
and
daa
repz
or
sbb
cs
push
cmp
scas
mov
xor
cmp
pushf
test
mov
out
and
cmp
int
repnz
xchg
in
jno
out
cmpsb
pop
pop
hlt
adc
enter
lock
dec
fists
jnp
movsl
aaa
es
dec
sbb
jmp
cmp
xchg
jb
sti
les
dec
cmp
xchg
shll
aaa
adc
cmp
addr16
sub
hlt
jle
hlt
jl
cs
mov
lcall
loope
mov
pop
movsb
adc
cmp
push
mov
fisttpl
mov
movsl
cli
repz
test
aad
lds
inc
addr16
test
movb
call
xchg
ljmp
add
mov
pop
fiadds
fsubrs
testl
lcall
adc
fildl
notl
rclb
or
xor
push
out
popf
xor
insb
dec
cmp
fs
inc
data16
std
mov
ficoms
mov
add
cwtl
or
stos
sub
fisubs
outsb
mov
insb
xor
pop
daa
movsb
cmp
fcomp
jno
aad
add
test
or
mov
adc
add
ret
xchg
or
nop
mov
xchg
aas
push
jmp
nop
and
leave
sub
cmp
push
movsb
dec
std
xchg
sbb
mov
push
jmp
jbe
xchg
or
out
aad
mov
pop
fcomp
repnz
out
sbb
adc
lea
psrad
aaa
cli
mov
cmp
mov
les
scas
subl
fyl2x
and
push
adc
or
aad
push
scas
lcall
out
xlat
lock
adc
mov
movsb
xor
imul
jle
bound
ja,pn
pop
jl
jp
ss
outsl
inc
jp
fstps
test
jmp
xchg
into
mov
or
data16
subb
inc
das
sub
outsb
bound
xchg
fs
repnz
jbe
or
daa
ds
aaa
adc
in
pop
sub
jmp
and
lods
inc
adc
lds
xchg
cmpsb
and
add
adc
cmp
mov
mov
add
insb
movsl
ja
jbe
cmp
stc
repz
adc
push
and
scas
dec
sbbl
jg
cmc
inc
popa
push
adc
ret
fcoms
mov
mov
lods
clc
xor
out
pusha
rorb
into
roll
xor
cmp
adc
mov
push
inc
aaa
or
aad
insb
mov
pusha
leave
push
push
int
mov
adc
adc
cltd
sub
mov
or
mov
lea
repnz
mov
sub
data16
pushf
jns
and
adc
xor
pushf
test
inc
lock
rcrl
inc
sete
jl
ja
sbb
xlat
xor
popf
xchg
andb
cmp
loop
and
jl
jbe
sub
scas
xchg
xchg
cmp
es
adc
ds
out
lds
ror
mov
sbb
js
fsub
lret
push
bound
js
repnz
and
adc
ljmp
cmc
test
and
call
jne
inc
int
stos
jmp
insb
decl
inc
cmp
in
bound
fstpt
push
xor
xchg
xchg
inc
data16
pop
mov
jge
incb
andb
mov
pop
aam
call
cwtl
stc
divl
xorl
mov
lret
dec
jnp
mov
mov
push
mov
mov
fldcw
ja
sub
mov
repnz
movsb
shlb
fmuls
cltd
jecxz
adc
ljmp
sbb
mov
shr
sbbb
pop
pop
mov
lods
aaa
int
sub
ja
add
js
cmp
push
dec
bound
sub
inc
xchg
sbbl
adc
in
ret
dec
and
in
std
insl
mov
scas
sbb
inc
inc
push
sub
jo
lret
xor
and
jl
mov
test
add
sbb
pop
clc
xor
ret
bound
out
ljmp
shlb
or
push
bound
adc
mov
xchg
testl
inc
loopne
sahf
cmp
xor
cmpsb
add
popw
lock
inc
adc
mov
adc
sub
iret
orl
mov
repz
inc
sbb
push
popf
xchg
add
inc
mov
push
adc
fsubl
adc
in
test
mov
ffreep
add
cmpsb
xor
lcall
xlat
sub
xor
pop
pop
jp
jo
in
ljmp
scas
dec
call
je
or
push
jne
outsb
dec
cmp
jo
dec
arpl
pop
sbb
lahf
adc
jo
movsl
sbbb
out
daa
clc
inc
add
aad
jmp
inc
push
shll
nop
lods
pop
clc
sbb
jns
or
adc
sbb
lds
and
jno
ss
adc
jne
scas
jmp
xor
in
out
mov
fmul
pop
daa
mov
xchg
lret
loope
sbb
push
cs
xor
mov
out
data16
nop
cmp
in
mov
and
call
mov
aam
inc
mov
cmp
aas
lret
iret
sahf
and
cmp
xor
iret
cld
outsb
daa
add
mov
mov
lcall
daa
lahf
cwtl
cmp
ficoms
orl
or
xor
sbb
push
jae
test
repnz
in
cmpsb
mov
dec
cmp
fsubr
shrl
push
enter
pop
ljmp
push
and
les
dec
icebp
icebp
data16
mov
xlat
push
jo
sti
inc
push
ljmp
cmp
repnz
aaa
enter
cld
pop
fistps
xchg
mov
fdivl
frstor
jb
jg
ljmp
or
es
push
rorl
adc
cmp
stc
shll
mov
popl
jecxz
int3
jmp
movsb
lcall
jmp
pop
shlb
cmpsb
in
stos
jbe
cmp
mov
rol
rcrl
cld
sbb
cli
mov
lods
pop
insb
pop
test
dec
jg
inc
xchg
test
adc
push
jl
popf
add
pop
shrl
imul
pop
push
aad
outsl
in
insl
sbb
mov
push
ja
in
mov
dec
adc
hlt
daa
add
xlat
push
enter
test
outsl
mull
mov
stos
arpl
mov
aaa
and
sbb
mov
enter
repz
push
lret
pushf
bound
pushf
push
je
sbb
adc
cmc
scas
jge
pop
cmp
inc
leave
loope
and
movsl
mov
out
mov
mov
fildll
repz
fbld
lahf
adc
or
in
lods
icebp
mov
jns
mov
pusha
int
aam
sahf
mov
fidivrs
or
std
inc
scas
jnp
inc
andb
pop
out
sahf
push
ret
inc
sub
jne
shrb
cmp
hlt
xchg
popa
xor
fwait
push
xlat
mov
jnp
adc
insl
pop
sbb
xor
xor
xchg
ret
push
mov
sbb
push
and
adc
sub
lods
or
mov
cmp
jno
je
xchg
adc
out
mov
jae
push
movsb
clc
jmp
dec
mov
add
xlat
fwait
stos
mov
jl
xchg
ret
imul
sbb
mov
call
iret
imul
jbe
imul
repz
dec
jne
mov
xor
xor
sbb
sub
or
pop
pop
push
jno
cmpsl
fadds
mov
sub
dec
test
jg
dec
mov
arpl
cmp
imul
mov
cltd
or
push
in
inc
scas
push
scas
inc
imulb
divb
adc
int
xchg
gs
lret
clc
outsl
jmp
rcll
icebp
and
lds
dec
fdivrs
xchg
dec
in
mov
addl
test
fs
psubb
xchg
adc
inc
call
cmp
insb
add
nop
lds
adc
cld
movsl
cmp
aam
cmpl
pusha
and
dec
pop
mov
adc
mov
pop
xchg
push
loop
xchg
and
into
test
push
push
rcll
repz
dec
dec
rolb
and
lret
jmp
jg
addb
ss
fcompl
popl
dec
sbb
stos
xor
jno
fbstp
inc
cld
mov
pusha
and
pop
adc
insb
ficoms
sahf
fwait
int3
sbb
lock
mov
cmp
lahf
cmpsb
add
rcl
arpl
outsb
pop
inc
push
mov
pop
inc
xor
in
mov
push
pusha
sahf
pop
xor
xchg
push
pop
rcrb
jno
loop
bound
std
inc
adc
stos
leave
cmp
jl
sbb
pop
xchg
lea
je
xchg
sub
test
sbb
cmp
out
lock
dec
data16
in
ret
in
es
rolb
int
cmc
ljmp
adc
dec
mov
or
cmc
inc
insb
ret
hlt
dec
adc
mov
xchg
test
cs
cs
cld
and
cmp
xchg
popa
push
lahf
stos
mov
imul
je
stos
or
mov
aaa
xor
jae
mov
shlb
sarb
shlb
cli
cli
inc
out
xor
mov
dec
mov
sbb
in
sub
idivl
enter
test
cmc
mov
push
inc
std
ror
ficompl
lods
fs
inc
mov
sub
insb
mov
sbb
nop
fnstsw
negb
pop
pop
xor
test
fs
adcl
outsb
js
dec
fdivl
and
mov
xor
mov
jl
mov
ljmp
push
cld
push
dec
sub
xor
push
cltd
hlt
push
add
xchg
lds
sbb
cwtl
cmp
js
sub
xor
cmp
cmpsl
jl
movsb
jnp
jo
sub
sub
call
push
out
mov
or
or
je
dec
xchg
inc
into
sbb
out
je
mov
ret
push
imull
adc
adc
sbb
dec
push
pop
mov
arpl
xchg
cmpsb
sbbb
push
lock
jmp
add
add
shlb
sahf
cmpsl
vmwrite
mov
fisttpl
icebp
mov
jnp
inc
inc
jg
or
mov
pop
cmp
adc
rorb
lea
rorb
add
les
les
outsl
push
imul
and
xchg
lret
stos
cmpl
mov
stc
mov
stos
pop
std
mov
jmp
stos
icebp
push
imul
sub
addr16
jnp
jns
call
fimuls
push
les
cmp
std
in
lret
int3
or
mov
mov
fwait
mov
int
mov
adc
scas
mov
or
sub
inc
rorb
repnz
repz
xchg
fisttps
jb
xchg
xchg
fcoml
cli
movsl
or
bound
adc
movsb
jbe
inc
js
aas
mov
jnp
inc
add
lahf
mov
sti
push
and
xor
inc
out
iret
push
dec
add
test
push
rclb
subl
pop
dec
xchg
sub
mov
cmc
inc
or
mov
mov
dec
shll
jo
cld
push
adc
popf
aam
xor
jle
push
pusha
push
xchg
xchg
test
push
stc
mov
or
lock
mov
push
push
test
aas
dec
sbb
clc
push
cltd
or
inc
mov
mov
xor
xor
test
aad
add
loopne
rcrl
adc
setg
jmp
orl
icebp
adc
mov
imul
jg
xlat
sti
inc
fs
bnd
xchg
xor
mov
pop
jge
es
fnstcw
mov
cmp
xchg
aas
outsb
fildll
lds
movzbl
sub
sub
pusha
dec
fildl
cmpl
pop
or
bound
pop
and
cmc
dec
inc
call
dec
leave
loopne
outsl
stos
xor
pop
jge
or
add
cmp
aad
call
jle
sbb
xchg
pop
pop
dec
mov
aaa
testb
cltd
popf
dec
ljmp
fwait
out
addr16
dec
xor
push
lahf
sub
das
mov
stc
push
mov
xor
inc
insl
lods
imul
stc
scas
or
in
rorl
xor
push
push
cs
data16
cmp
out
inc
or
imul
lahf
pop
bound
pop
int
stos
scas
pop
out
dec
mov
jg
into
in
mov
mov
mov
adc
test
mov
out
stos
or
lahf
jns
pushl
imul
push
std
popa
push
dec
mov
mov
sti
dec
mov
rclb
xlat
adc
adc
pop
lds
fidivl
jl
ficoml
sub
in
dec
gs
sbb
mov
leave
jge
out
outsb
sarl
push
out
cmpsl
xchg
loope
mov
jp
or
arpl
loop
jb
dec
shlb
ret
cmp
push
dec
lret
sarl
faddl
xor
pop
test
pop
push
sbb
inc
xchg
sub
sub
inc
or
insl
inc
scas
push
je
mov
stc
fwait
cltd
push
rorl
mov
pop
pop
xchg
push
sbbl
or
hlt
cmp
and
sub
mov
test
test
xchg
loopne
jp
jbe
xchg
jp
xchg
scas
insb
je
mov
adc
mov
data16
pop
mov
outsl
xchg
mov
imul
dec
pop
inc
cmp
rcrl
or
and
js
movsb
fmuls
sub
sbb
push
mov
mov
fwait
outsb
mov
ficoml
iret
and
popf
js
adc
outsl
or
inc
add
data16
movsb
jecxz
ret
xchg
repnz
add
push
pop
mov
xchg
add
adc
lcall
mov
imul
pop
xchg
sub
mov
test
movsb
sti
inc
fisubs
or
stos
push
in
mov
in
nop
jb
es
sti
aas
sahf
xchg
test
lret
sub
mov
push
sub
insl
scas
imul
scas
jb
movsl
loopne
imul
xor
je
sahf
clc
dec
push
mov
jae
sub
out
pop
jle
inc
and
mov
xchg
fcmovnu
cmp
mov
add
mov
int3
shl
out
in
mov
call
and
popa
les
mov
xor
push
pushf
icebp
jl
nop
mov
push
int3
mov
insl
out
loopne
or
xor
int3
lahf
ret
loopne
shll
mov
pop
dec
ja
jb
or
int3
ljmp
and
cmp
sub
ret
sbb
sub
inc
push
mulb
rcll
lds
sub
jae
pushf
ss
mov
gs
adc
xchg
sar
dec
setbe
repnz
jle
cld
rcrb
add
cmp
jmp
fists
scas
adc
and
stc
adc
int3
dec
daa
push
mov
dec
in
pop
mov
pop
and
sub
jno
jmp
xor
roll
pop
jecxz
aaa
xchg
cmp
mov
inc
or
add
int3
popa
inc
fs
in
sahf
ret
inc
jne
ljmp
dec
mov
jle
int
mov
test
sti
mov
pop
data16
aad
lahf
or
sbb
popa
popf
cs
sbb
sahf
pop
sub
out
jp
mov
in
das
les
popa
xchg
into
mov
jge
xchg
or
jno
into
or
cltd
icebp
mov
or
xchg
roll
rcrl
lcall
add
dec
clc
imul
pop
icebp
xchg
sahf
push
xor
sbb
loopne
push
and
les
dec
jl
cmc
mov
jge
mov
pop
mov
hlt
add
into
int3
fsubrl
or
xor
test
sub
sub
pusha
jb
sbb
mov
jnp
pop
or
adc
inc
insb
lea
push
cmp
int3
daa
stc
std
and
push
sub
imul
out
arpl
push
daa
pop
or
add
xor
jns
fidivrs
lret
or
xor
pop
insb
xchg
hlt
adc
pop
cmp
mov
jle
sub
sahf
pop
xor
icebp
xor
sub
pop
mov
pop
loopne
jno
subb
mov
xchg
loope
adc
xor
sbb
pop
jbe
stos
cs
sbb
pop
jbe
popa
dec
cmp
rcr
out
lods
xchg
adc
lcall
mov
sarl
ss
outsl
and
test
fsts
xchg
repz
mov
mov
jne
add
mov
xor
loop
test
aaa
mov
stos
mov
xor
mov
jb
pop
add
xchg
popl
cmp
dec
out
push
dec
stc
xor
cmpsb
sbb
sarb
idivb
loopne
cwtl
dec
in
sbb
shll
add
into
shll
xorl
jne
dec
aad
ja
popa
std
movsl
adc
cmp
into
xchg
in
add
jmp
sub
popa
js
int3
sbb
das
fstpl
lock
lret
data16
inc
jle
iret
add
pop
mov
out
sbb
sarb
in
sub
insb
out
sub
cmc
xor
in
sbb
jno
add
jbe
sbb
in
shll
out
imul
add
push
and
outsb
pop
mov
adc
pushf
mov
and
scas
mov
hlt
dec
popa
jge
dec
or
add
testb
sub
lret
adc
mov
repnz
les
xchg
jno
xchg
push
popa
adc
aaa
mov
jl
andl
fistpll
cs
xor
ret
imul
movsl
lock
hlt
push
std
repz
mov
int
pusha
jecxz
pop
push
test
sub
mov
adc
lods
aaa
adc
mov
inc
pop
test
push
ret
icebp
mov
out
fnstcw
jle
push
imul
lahf
nop
test
outsb
jbe
add
push
adc
rcll
cmp
das
aas
cmp
xor
std
or
pusha
adc
xchg
mov
fldt
call
ljmp
pop
adc
xchg
js
pushf
push
jns
movsl
push
in
jp
push
mov
in
enter
aaa
rolb
lods
insl
adc
jmp
repnz
push
cmc
sub
fdivr
xchg
loopne
push
les
and
jp
mov
xchg
sahf
cltd
jae
or
sbb
cwtl
mov
mov
mov
jp
lret
sti
loopne
shlb
inc
sbb
inc
ret
xchg
mov
ror
cli
lret
xchg
out
inc
rcll
cli
and
push
jnp
fwait
mov
pop
repz
mov
fnstenv
stos
sbb
scas
testl
lret
add
test
push
or
push
adc
dec
jge
inc
fs
xchg
imul
and
outsb
rolb
pop
cld
es
jmp
ss
and
test
mov
test
pop
and
stos
iret
outsl
add
shll
insl
add
mov
mov
jg
push
mov
jb
or
mov
test
mov
shlb
jae
dec
add
sub
and
stos
jl
sarl
or
jmp
popf
fwait
cltd
xchg
outsb
sti
push
jo
xchg
mov
ret
adc
fsubr
shr
arpl
bound
insb
add
mov
dec
adc
add
push
jp
adc
icebp
fwait
subb
adc
mov
fdivs
addr16
dec
cli
mov
nop
rol
xor
cmp
mov
pop
int
aas
lret
mull
pop
adc
pop
shll
mov
mov
dec
xchg
cmp
jo
cld
jne
je
cmp
leave
ret
jne
mov
jbe
ss
or
mov
xorb
ret
inc
cli
sbbl
xchg
inc
jno
or
scas
jnp
push
loopne
lods
pop
push
push
jbe
clc
sub
lret
ret
shlb
rcrl
faddl
or
mov
dec
and
cmpsl
cltd
mov
mov
lea
fisubs
or
mov
sti
mov
push
outsb
jne
adc
outsb
adcb
ret
push
add
jle
scas
push
jb
inc
xchg
cmpsb
push
push
in
in
add
and
push
add
mov
shrb
mov
inc
cli
mov
jp
stos
jl
outsb
mov
test
pushf
mov
sub
push
addr16
push
in
mov
push
mov
loop
mov
and
mov
mov
jmp
shll
dec
frstor
fisttpl
sub
data16
jmp
mov
cmpsb
lock
and
dec
push
in
dec
mov
push
pop
jno
xor
mov
mov
push
mov
pop
push
jae
dec
xchg
hlt
mov
cmp
jecxz
ds
leave
addr16
data16
mov
adc
rolb
aam
sbb
jl
cli
out
inc
push
jns
aaa
das
jmp
cmp
sub
enter
inc
das
pop
in
dec
outsb
jge
and
mov
jbe
pop
sar
ret
gs
pop
jge
pop
loopne
adc
adc
xlat
cmpsb
mov
cltd
fwait
ja
icebp
fdivrs
sahf
pusha
es
sub
popf
aad
outsb
out
or
push
sub
add
sarl
test
in
cmc
negb
mov
sahf
add
add
jecxz
jns
gs
outsl
rol
fdivr
popf
cmp
shll
das
cwtl
jmp
sub
out
lods
mov
fldl
inc
es
pushl
pop
iret
xchg
ret
outsl
jo
jp
xor
push
mov
pop
js
push
testl
outsl
xchg
xchg
repnz
lahf
push
leave
fiaddl
jg
add
lret
push
add
and
call
lea
jg
fimuls
aam
fcoml
cmp
pop
push
xchg
sub
popf
fs
mov
push
xchg
jne,pt
aam
xchg
dec
adcb
aas
mov
leave
mov
out
xchg
es
mov
nop
jmp
sub
rcrl
jg
loope
pop
add
inc
add
leave
mov
testl
lods
test
sbb
call
and
dec
repnz
mov
add
push
inc
mov
sarl
leave
xchg
mov
adc
movsl
aaa
xor
movl
jecxz
push
mov
dec
scas
arpl
lfs
aad
ss
loope
subb
or
cmp
movsl
fisubs
out
add
fs
shlb
pop
inc
cmpsb
gs
bound
adc
mov
daa
sbb
pop
out
add
inc
mov
jne
add
sub
and
movsb
loope
outsb
ds
ret
gs
test
inc
dec
and
sti
fs
or
lcall
imul
adc
add
mov
rol
bound
pop
loopne
jae
inc
rep
mov
mov
xchg
push
xlat
sub
inc
sbb
aad
insb
xchg
arpl
push
int3
jns
sub
in
jnp
xchg
cmpsb
jmp
cmp
mov
mov
push
inc
ja
fs
ficompl
rcrb
popa
in
bnd
push
psubd
hlt
or
xchg
mov
repz
repz
aas
movsb
scas
int3
or
bswap
cmp
pop
shrb
xor
add
icebp
mov
in
rorb
push
dec
test
mov
jns
add
pop
dec
push
repnz
int3
sub
push
sub
fbld
les
sbb
mov
data16
mov
lods
lret
jecxz
add
push
jp
push
ss
xlat
ficoml
cltd
cmpsl
fidivrl
cmpxchg
xor
sti
adc
cmp
cltd
mov
xchg
xor
sbb
nop
insl
and
pushf
ds
sarb
out
fcomip
outsb
jb
enter
das
sbb
dec
in
push
xor
lret
test
pop
aaa
cltd
jmp
fwait
cs
cli
test
bound
push
repz
or
push
rorb
and
push
dec
or
lahf
mov
or
jbe
addb
bound
mov
fistpl
vpaddusw
push
movsb
lea
or
cmp
cmp
in
rorb
adc
xchg
orl
cwtl
imul
ret
call
test
xchg
xchg
imul
sbb
xchg
pushf
nop
stos
decl
sub
xchg
loope
or
cli
xchg
xchg
jmp
dec
sub
xchg
stos
dec
jl
in
mov
adc
push
sbb
sub
mov
mov
sbb
inc
cmp
sub
ljmp
jns
je
jl
inc
mov
mov
inc
loope
or
lea
cmp
enter
mov
jl
cltd
pop
aam
adc
xor
cmp
dec
cmp
pop
cmp
rorl
sbb
lcall
sti
orl
jne
jo
das
fstl
scas
fsub
out
jne
hlt
xor
and
mov
jg
arpl
je
jo
dec
je
popf
push
stos
test
xor
out
fbld
call
xorb
sub
cmp
int3
fists
add
lret
push
xchg
push
std
xor
mov
mov
imul
lret
test
cltd
scas
push
shlb
imul
pop
mov
dec
cltd
xchg
ss
out
jno
fisubrl
das
push
sbb
add
cltd
mov
jge
mov
sbb
xor
lods
dec
aaa
in
mov
mov
pop
scas
cld
sbb
push
dec
push
mov
xlat
jne
ss
aad
cwtl
adc
sbb
sub
lcall
data16
das
mov
xchg
and
roll
and
jmp
pop
fisubs
cmp
sbb
nop
push
xchg
outsb
jb
add
sti
push
lods
mov
roll
scas
xchg
sbb
fdivrl
push
bound
cmpsl
insl
test
and
lock
adc
ss
inc
daa
mov
xchg
fildl
jle
cmpsb
add
lea
mul
cmovp
ja
push
cmp
and
mov
push
imul
sbb
sub
mov
mov
sbb
sbb
insl
lds
sub
jg
ret
jns
add
sub
bound
and
inc
pop
scas
repnz
aad
push
add
icebp
inc
adc
xchg
dec
cs
flds
jmp
push
mov
xchg
cmp
cs
sbb
mov
push
push
pop
rcpps
push
outsl
cs
hlt
icebp
mov
es
es
adc
out
bound
outsl
and
mov
movsl
inc
pushf
test
or
movsb
sahf
mov
mov
arpl
insb
and
xchg
pushf
inc
mov
in
cwtl
stos
pop
mov
pop
xchg
inc
cmp
mov
xchg
nop
jmp
js
push
jbe
pop
sub
test
fs
jo
sarb
fwait
push
jl
xor
adc
mov
mov
aam
jle
and
push
mov
push
xor
movsl
lods
stc
stc
sub
lock
imul
popa
sub
push
out
adc
cmp
stos
std
jbe
pushf
movsb
out
pop
ss
mov
fbld
push
cmp
dec
in
mov
or
cltd
push
inc
jg
in
jne
adc
cs
mov
push
mov
cmp
sbb
stc
mov
sub
mov
xchg
xchg
insb
aaa
in
cli
aad
jmp
clc
mov
sahf
mov
or
cltd
push
adc
or
sub
xchg
mov
sbb
mov
sub
xor
dec
mov
scas
mov
nop
popa
and
or
test
out
movb
add
cwtl
dec
dec
sbb
mov
mov
adc
push
push
inc
faddl
mov
inc
das
fisubrs
jecxz
in
outsb
jecxz
loopne
mov
or
or
jecxz
ja
pop
adc
aaa
mov
mov
lds
cmp
adc
data16
addr16
test
xor
push
cmc
add
sti
cmp
fst
jne
es
cmp
stc
and
repz
shlb
arpl
and
mov
addr16
aam
mov
filds
xchg
je
pop
int
or
ror
inc
sbb
jl
jnp
mov
test
cmp
insb
scas
inc
cwtl
testb
jno
cwtl
mov
jl
mov
jmp
data16
andl
jl
scas
int
and
add
mov
aas
mov
cmp
jmp
dec
push
imul
pop
jmp
aad
mov
outsl
push
arpl
adc
pusha
out
out
lret
push
sub
adc
mov
fstpl
ror
shlb
loopne
sub
sbb
cmpsb
or
sub
hlt
arpl
test
js
ja
popf
cmp
sti
je
int
fisubs
lds
mov
or
aam
xchg
dec
xor
les
js
nop
jg
repnz
xor
les
js
scas
pop
mov
leave
stos
xor
mov
or
imul
sahf
push
aam
sbb
or
and
pop
mov
insb
fldt
pop
push
adc
inc
fbstp
insl
jb
jb
jo
and
fstps
jmp
cwtl
pop
jp
pop
pop
movsb
adc
jg
xlat
lcall
ret
ljmp
pop
pop
in
dec
loopne
jecxz
push
loopne
stc
pop
cmc
pop
xor
push
adc
xchg
dec
sub
adcl
xor
outsb
jl
sahf
ret
mov
outsl
push
out
pop
sub
pop
das
das
idivb
enter
mov
add
sub
jge
xor
push
push
mov
and
mov
push
lds
and
insb
aaa
lea
fdivp
pop
inc
dec
xlat
mov
add
outsl
insb
or
pop
xor
add
ljmp
fdivs
sbb
sub
inc
jmp
mov
jb
pop
mov
xor
sbb
mov
daa
test
ja
lods
push
cmp
pop
sbb
sub
inc
jbe
mov
int
pushf
idivl
cwtl
dec
faddp
sbb
fwait
xchg
push
hlt
cmp
loop
into
inc
ret
add
in
xchg
fs
shlb
addr16
movsb
jmp
push
pminsw
popw
mov
daa
nop
int
mov
mov
mov
push
or
je
jns
xchg
mov
cmc
xchg
lgs
adc
xor
sarb
daa
cmpsl
scas
clc
sarl
out
jp
cmpsb
out
negb
xchg
add
sbb
xlat
inc
sbb
push
daa
es
jbe
rorb
dec
cltd
aaa
jge
lods
mov
test
movsl
jo
rclb
cmp
push
push
push
test
adc
sbb
inc
mov
xor
xor
call
push
cld
add
sub
test
jmp
cmp
test
popa
stos
ss
nop
add
mov
popa
jge
add
sbb
in
push
jg
bound
std
adc
sbb
outsl
icebp
inc
xchg
int3
ret
adc
jo
jno
ror
mull
lods
jb
sbb
push
push
jnp
pop
pushf
outsl
inc
jno
push
movsb
push
ret
xorb
aad
dec
xor
sub
xchg
pop
mov
imul
stos
mov
out
inc
out
aaa
mov
rol
or
cs
repz
pop
int3
push
mov
rolb
sub
lods
mov
xor
jnp
daa
in
dec
mov
mov
or
hlt
cmc
jge
pop
push
mov
hlt
sub
int3
add
imul
lods
clc
rolb
add
mov
push
outsb
adc
or
loop
xchg
roll
cmpb
test
outsl
mov
inc
xor
cld
add
push
lock
sbb
xchg
sahf
clc
fucom
not
test
and
xchg
adc
cmp
ja
and
out
inc
out
inc
mov
push
in
into
cwtl
fucom
pop
data16
pop
bound
pushf
inc
xor
dec
mov
inc
cmp
push
leave
dec
pop
inc
iret
int
sti
pop
add
fisubrs
push
mov
movb
lods
jnp
mov
mov
cwtl
and
inc
cmpsl
add
or
lret
loope
out
xchg
lret
sub
les
rol
push
cwtl
inc
int3
xlat
dec
rcrl
jecxz
out
lods
adc
lods
add
cmp
push
dec
xchg
je
xchg
in
inc
jg
test
sub
lahf
fisubrs
mov
sub
in
push
fisubrl
xlat
pusha
int3
and
xor
jno
cmp
out
scas
scas
int3
insl
lock
xor
into
scas
repz
pushaw
out
add
inc
ffreep
sbb
dec
aam
insl
sub
mov
fcomi
mov
js
xchg
shll
mov
mov
adc
mov
stos
xor
lods
loop
and
xchg
mov
cli
subb
lahf
push
int3
and
aad
test
scas
inc
inc
jl
xlat
xor
sbb
outsb
std
stc
leave
mov
ja
jo
decl
or
xorl
lods
dec
xor
imul
push
frstor
dec
mov
xor
dec
xor
fwait
inc
nop
dec
ljmp
addr16
xchg
pop
lods
jg
popa
cmpsb
insb
mov
ret
outsl
push
cmpsb
inc
dec
cmpsb
aam
daa
adcl
pushf
mov
loopne
sahf
sbb
mov
or
dec
outsl
ffreep
clc
jecxz
push
pop
xor
xorb
jle
mov
fsubrp
shll
fisubrs
lods
test
jnp
cs
iret
jl
mov
pop
pusha
mov
jns
imul
cltd
dec
mov
roll
fstp
rcr
shll
inc
inc
cld
mov
cmp
sti
addr16
das
add
cmp
popf
aas
lcall
mov
jnp
pusha
mov
out
pop
stos
out
add
pop
addr16
insl
imul
or
and
mov
mov
fs
dec
js
mov
adc
sub
pop
out
push
pop
fsts
sbbb
jnp
push
xlat
mov
sub
jl
pop
push
repz
xor
dec
mov
inc
inc
repz
sarb
insl
dec
dec
and
push
roll
mov
icebp
aam
xchg
idiv
adc
out
mov
aad
scas
test
andl
arpl
push
jmp
ret
decl
loop
jae
sub
or
cmpsl
xchg
jne
dec
fwait
iret
add
or
mov
push
ja
xchg
jnp
push
enterw
imul
push
xchg
sub
mov
adc
out
pop
shlb
mov
mov
cwtl
out
or
jo
add
shr
push
in
loopne
lock
pop
push
mov
cmp
xor
mov
push
jecxz
cmp
int3
mov
mov
ret
clc
out
jmp
pop
xchg
xlat
inc
jp
push
push
push
inc
enter
push
stos
lods
movb
push
js
adc
mov
cmc
push
mov
into
add
je
jb
lock
lods
pushf
xchg
and
hlt
aad
jae
xchg
sbb
or
or
and
arpl
xor
imul
cmpsl
sub
shrl
frstor
mov
push
push
add
andb
hlt
ficoml
test
lds
repnz
outsl
jl
mov
dec
mov
sub
ss
dec
mov
sbb
mov
popf
or
enter
push
shrl
mov
mov
aas
in
jecxz
pushf
mov
sbb
andb
roll
dec
add
mov
lret
stc
iret
aam
push
mov
xchg
jbe
repz
aas
cmp
stos
adc
cld
sbb
cli
test
xor
aad
iret
jecxz
lock
mov
sub
dec
clc
sbbb
push
out
arpl
and
scas
enter
add
loope
sbb
loopne
fdivrl
test
popf
mull
jae
negb
mov
mov
sahf
lods
test
lods
daa
inc
and
xor
sarl
hlt
hlt
jae
test
div
xchg
pop
inc
inc
xor
test
in
pop
mov
mov
out
fwait
pop
loope
bound
adc
loopne
rcll
mov
lcall
dec
push
mov
in
push
adc
pusha
test
clc
adc
cli
movsb
jo
jae
cmp
mov
xor
cmp
pop
sbb
nop
lahf
popf
mov
test
imul
cmp
addr16
mov
in
es
jb
lock
repnz
sub
mov
sbb
pop
push
scas
or
adc
int
jmp
hlt
mov
mov
out
std
xrelease
adc
add
xchg
shrb
sbb
push
fisubs
or
mov
jmp
sbb
dec
adc
call
pop
repnz
imul
sar
shll
inc
dec
xchg
inc
dec
jae
adc
mov
cs
jbe
adc
loope
xor
sub
in
int3
xchg
and
and
stos
inc
fsubrs
insl
rcrl
mov
jl
pop
xor
sbb
xor
js
sbb
inc
sbb
pusha
xor
mov
imul
jnp
pop
cmp
mov
rcrl
xor
incb
sub
enter
mov
int
aam
jge
push
push
lock
mov
push
mov
dec
lock
pop
div
mov
ret
daa
fsubr
xor
jle
xor
es
hlt
aad
test
dec
jmp
test
mov
mov
jl
es
xorb
xchg
jp
imul
loope
in
lock
icebp
shrb
adc
js
mov
test
movsl
dec
dec
and
loop
or
wrmsr
test
fs
mov
loope
mov
pop
sub
pop
daa
mov
cwtl
push
aaa
adc
mov
jbe
dec
xor
cmpsb
gs
mov
pop
cmc
shrb
xchg
adc
fsubrp
xchg
mov
lock
fcoml
dec
mov
sbb
cmpsl
jecxz
lock
je
dec
jle
sahf
cmpsl
fwait
ss
push
mov
cmc
outsb
out
dec
inc
inc
filds
push
cltd
movsl
add
lcall
mov
lods
into
repz
jmp
dec
addr16
pop
leave
pop
adc
lock
add
gs
out
mov
int
std
mov
mov
jns
sub
jne
dec
imul
rcrl
xchg
arpl
testl
adc
movsl
sub
xchg
and
push
js
jb
or
lret
and
fdiv
mov
add
jne
pop
into
subl
test
add
dec
add
std
inc
push
test
lds
mov
sub
xchg
mov
ss
fnstenv
pop
mov
es
jbe
xchg
sub
jl
out
xchg
sarb
jl
mov
sub
and
mov
rcrb
jp
or
fadds
jge
loopne
xor
jb
xchg
xchg
push
ja
pushf
pop
jb
popa
aaa
orb
sbb
iret
mov
or
or
cmp
gs
mov
insb
out
mov
mov
movsb
sub
fcomps
xchg
jle
adc
cs
stos
xchg
dec
xor
testb
mov
cs
fisubrs
ljmp
fnstenv
sar
mov
test
and
pop
or
test
cmp
mov
cmp
fisttps
mov
mov
and
popa
sahf
sbb
out
in
cs
add
mov
fisubs
loopne
or
out
outsl
xchg
inc
xchg
jb
aam
fisubrs
sbb
pop
and
cmpsl
dec
mov
or
in
push
add
cmp
mov
jge
cli
adc
mov
pop
cs
jne
lea
test
lods
lret
jo
add
lcall
lods
pop
shrl
bound
sbb
push
and
imul
dec
pop
and
dec
int3
xor
int
push
mov
loope
mov
or
push
adc
lahf
and
dec
insl
pushf
sub
pop
ret
gs
pushf
lock
sub
adc
arpl
clc
lret
xchg
je
pop
add
sbb
jge
sub
fcoml
ljmp
xchg
test
xchg
scas
mov
mov
mov
mov
fisttpl
jbe
loopne
lds
ficomps
push
sahf
cmp
inc
or
or
inc
jne
repz
adc
out
pop
shll
sbb
mov
mov
pop
cmp
jno
inc
sub
push
xchg
jmp
cmp
es
cltd
pop
std
mov
xor
les
sub
mov
mov
push
fcoms
adc
cmp
xchg
lods
imul
sub
sub
cld
mov
out
mov
cld
adc
mov
test
bound
or
cmp
jb
shll
test
in
add
push
inc
addr16
aas
adc
lods
mov
les
ret
lahf
xor
inc
or
mov
dec
pop
out
adc
pop
pop
fbstp
nop
imul
pop
cmpsl
xchg
jge
jp
daa
jnp
fidivs
jle
jecxz
lods
rcr
xchg
int3
lea
or
iret
inc
mov
jno
add
fsts
ja
lds
jp
jp
fdivs
pop
or
push
jl
xchg
adc
aas
cmp
js
pushf
sti
lret
cmp
int3
add
lea
aam
mov
shrw
imul
cmp
sbb
lahf
stos
cmp
cmpsb
cmp
shll
add
cmc
ss
cwtl
je
gs
push
cld
xor
cmp
sbbb
mov
push
sarl
aaa
mov
and
pop
xor
stc
lea
sub
inc
cmp
call
fstpt
sbb
hlt
jbe
stos
in
out
notl
pop
dec
mov
dec
or
ja
sub
sub
popf
mov
jnp
inc
sub
scas
test
outsb
mov
lea
xor
cmc
mov
xchg
dec
jecxz
or
cmp
out
lret
mov
leave
xchg
or
push
sub
add
movb
lret
fisubl
lret
fs
dec
pop
adc
xor
sbb
pop
xor
mov
pop
fmull
jnp
les
lock
mov
shlb
lcall
dec
or
mov
push
out
mov
push
or
pop
xchg
inc
popf
or
mov
pop
add
xchg
int3
hlt
js
dec
cwtl
rclb
inc
push
shll
fsts
pop
mov
xor
pop
nop
enter
cmpsb
xor
aaa
sbb
mov
fcoml
xchg
sub
xchg
jl
sarb
sbb
nop
punpcklwd
aas
mov
xchg
push
and
gs
sar
push
push
mov
lods
xchg
std
pop
and
pop
xchg
rolb
out
inc
fstl
stos
fisttpl
adc
sahf
xor
cld
ret
insl
dec
pop
inc
je
add
jae
jns
xchg
insl
push
aaa
ret
not
adc
dec
and
aam
lods
xor
pusha
push
adc
loopne
lret
add
adcl
ret
rcl
cmp
cltd
inc
lcall
out
out
stc
data16
out
ficomps
das
sbb
pop
inc
sbb
arpl
cmp
fimuls
push
sub
mov
mov
push
cmp
push
lds
dec
cld
in
xlat
adc
xor
or
aam
xchg
mov
ficoms
rorb
adc
outsb
loopne
pop
std
icebp
imul
cmpsb
push
sub
sbb
sbb
mov
into
and
xor
jmp
imul
or
inc
xchg
mov
jae
jecxz
xor
sahf
xchg
out
int
dec
sti
sbb
and
mov
sub
pop
sub
dec
push
or
inc
imul
loope
rolb
aaa
daa
and
mov
ret
inc
imul
ds
inc
jbe
test
out
mov
rolb
dec
scas
sub
imul
cmp
sbb
push
dec
and
xor
xor
xor
movsl
mov
jno
cmp
push
inc
fcomip
popa
mov
in
rcrl
gs
imul
dec
pop
jmp
les
push
loope
mov
jecxz
pop
pop
pop
push
lret
dec
fimuls
dec
fmull
mov
aam
cmp
pinsrw
int
iret
cmp
mov
xor
int
bound
jecxz
xchg
push
inc
jnp
push
xchg
mov
and
mov
repz
mov
adc
in
cli
scas
or
icebp
fbld
adc
dec
mov
inc
fwait
or
xchg
stos
pop
es
fisubl
mov
repnz
aas
fimuls
xchg
cmp
into
mov
lea
shll
push
pop
loope
mov
sbb
inc
cmpsl
popa
dec
mov
mov
test
sbb
dec
fcompl
hlt
int3
lock
xor
aad
inc
push
or
cmp
push
pushf
mov
insl
inc
xlat
or
push
jp,pt
mov
mov
mov
adc
shr
mov
push
ja
into
xchg
mov
push
iret
movsl
imul
sbb
aas
addb
repz
mov
sbb
ja
in
jbe
mov
hlt
adc
pop
jl
out
inc
or
jb
xor
iret
scas
repnz
or
push
xchg
fcomi
pop
clc
sub
xor
repz
jg
mov
xchg
mov
pop
cmp
xchg
divb
adc
push
jae
cli
or
lock
stos
daa
and
outsl
out
inc
leave
pop
repz
sti
push
sti
repnz
jbe
cmp
mov
aas
mov
cli
enter
jno
mov
enter
mov
sti
out
xchg
pop
adc
dec
icebp
aaa
and
arpl
pusha
jo
clc
xchg
inc
inc
dec
and
inc
out
pop
lret
jp
fsubs
js
insb
addr16
sub
push
mov
in
cwtl
es
sub
cs
fdivp
shr
mov
mov
daa
movsb
mov
call
divl
push
popf
int
add
cmpsl
push
xchg
loope
in
into
push
sahf
xor
pop
xor
mov
pop
int
xor
lds
jno
xchg
fcoml
mov
dec
insb
and
fmul
or
mov
inc
mov
add
push
es
dec
cmp
push
das
adc
sub
pop
and
test
pushf
jl
xor
cmp
les
jl
in
inc
dec
jbe
das
stos
rclb
inc
das
aas
push
js
mull
cmpsb
jp
add
adc
ds
int
jge
pop
outsb
inc
rcr
mov
push
inc
shrl
aaa
xor
repz
shrl
out
add
cmp
cld
add
mov
jl
adc
rcl
cmp
add
jae
mov
pop
adc
fbstp
or
xor
pop
icebp
xchg
idivl
jp
insb
sbb
dec
push
jo
mov
sahf
shll
push
jge
loope
cld
mov
add
ljmp
popa
orl
jno
and
scas
pop
and
push
sub
das
adc
outsb
lahf
aam
push
ds
roll
stc
cmp
and
jae
cmp
lret
push
jge
adc
cmp
decl
xor
jns
or
mov
decl
inc
mov
xchg
mov
nop
mov
sbb
xor
clc
out
jecxz
push
repnz
fdivs
and
mov
dec
and
inc
sub
stc
jle
mov
pop
push
mov
es
sub
roll
out
push
lods
cmp
push
jmp
stos
cli
xchg
push
push
or
xlat
sub
popa
lahf
mov
jno
addl
xor
and
loopne
sub
bound
mov
mov
iret
fdivrp
lcall
dec
fmull
mov
push
add
mov
test
mov
fwait
mov
pop
or
push
out
test
pop
rclb
push
popa
sub
mov
leave
mov
and
sahf
mov
fiadds
sub
pop
mov
pusha
push
fstpl
push
and
movsl
inc
pop
xchg
aaa
inc
ffree
xor
add
and
les
xor
pop
lret
inc
loope
dec
pop
jp
clc
mulps
pop
fmulp
nop
enter
jle
sbb
dec
and
cmpsl
repz
xor
aad
ret
and
xchg
mov
cmp
arpl
lods
push
pop
lcall
js
cmp
arpl
mov
push
sub
filds
daa
fldl
dec
cs
mov
ret
flds
test
add
inc
pop
lret
fs
iret
movsl
rcrb
pop
adc
aam
xchg
mov
mov
jbe
cmc
rcl
adc
xor
mov
jmp
dec
out
in
out
sahf
or
jae
inc
lods
imul
jecxz
int3
push
inc
inc
enter
lret
push
cmp
dec
idivl
cmpsl
into
insl
aam
jo
xor
and
or
outsw
scas
jp
push
std
mov
adc
out
sub
mov
test
dec
iret
cmp
mov
fildll
mov
jno
pop
dec
mov
es
jmp
add
inc
or
daa
push
out
xchg
mov
add
cs
or
xchg
addr16
or
addr16
cld
daa
and
nop
mov
xchg
inc
or
in
pop
data16
fidivl
push
and
xchg
rclb
push
mov
or
or
adc
add
sub
xchg
push
jb
bound
mov
xchg
mov
sbb
popf
dec
adc
push
and
ja
mov
lcall
in
xchg
clc
les
sbb
push
sahf
mov
ficomps
in
xchg
lcall
cltd
and
cmpsl
and
mov
or
mov
jns
fsubl
or
leave
scas
out
pop
popf
loopne
dec
in
pop
leave
out
pop
filds
sbb
inc
mov
into
scas
pushf
xor
mov
add
fdivrp
mov
sbb
sub
jno
jp
clc
xchg
or
sub
push
roll
push
fldt
fdivrs
data16
push
jb
inc
sub
stc
in
subl
mov
subl
xchg
xchg
fbld
push
dec
aas
mov
jo
insb
mov
jl
add
push
xchg
in
cmpxchg
inc
mov
pusha
xor
mov
push
rcl
and
test
out
cmp
mov
push
sbbb
out
mov
sub
pop
lods
lret
outsl
leave
daa
fisttps
test
adc
add
push
xchg
cmc
sbb
mov
push
push
aad
sub
pop
push
movsb
jg
lret
scas
jae
test
loopne
mov
jg
and
add
xor
lods
sbb
aad
test
jmp
rol
lret
jmp
push
and
loope
dec
repz
sbb
lret
mov
jne
dec
mov
sbb
lret
xor
negb
or
mov
enter
dec
and
ret
cmp
nop
jne
sub
or
mov
out
inc
push
push
lea
jbe
sti
lahf
jne
popa
fcmovnb
jl
or
fwait
inc
popa
sub
testb
movsl
cmp
mov
ja
jns
popf
jae
push
js
xchg
adc
add
mov
sub
stos
ja
scas
stos
sub
imul
push
dec
pop
xor
cs
xlat
cmp
nop
notb
mov
fmulp
repz
push
cmp
push
or
es
sti
xchg
pop
dec
das
push
nop
mov
push
icebp
repz
lods
nop
jg
cmp
scas
sbb
out
push
into
inc
cmp
or
insb
jmp
and
fs
jae
ss
xchg
in
shlb
lds
idivl
subl
out
cwtl
and
lods
test
into
addr16
js
scas
popa
jo
pop
inc
ja
cmpsl
sbb
cmc
push
sarl
rorb
fisttps
int
mov
aaa
mov
pop
rcr
scas
hlt
dec
iret
insl
fdivrp
dec
and
xchg
mov
dec
mov
aam
cmp
jl
fcmovnb
popf
inc
dec
dec
pop
pop
xchg
dec
mov
and
lods
jmp
fdivrl
jo
nop
xor
ficomps
hlt
mov
sub
xor
jo
push
dec
pop
jge
div
pop
dec
daa
adc
jecxz
in
lret
sti
mov
enter
pop
arpl
dec
divb
pop
and
fsubr
fstps
mov
add
jg
cmc
sbbl
inc
xchg
pop
adc
dec
movsl
mov
in
repz
mov
pop
repz
cmp
cli
jo
sub
or
pop
lret
mov
push
push
xor
sbb
pop
out
and
sub
stc
cs
je
pop
inc
jge
cmp
sbb
insl
jo
sub
xor
lds
xchg
jnp
outsb
pusha
dec
std
xchg
cli
stos
std
rcl
inc
hlt
xchg
int3
inc
push
rolb
cwtl
ret
lods
lea
cmc
btr
lcall
jo
negl
ret
cmp
stos
xor
push
or
adc
das
xorb
shlb
int
jle
dec
ds
adc
imul
repz
call
pop
and
rcl
inc
lods
cmp
sahf
fwait
mov
sbb
inc
cmp
cmpsl
in
jnp
cmp
adc
leave
subb
push
pop
mov
mov
stos
or
and
std
add
add
jge
lds
pop
mov
and
test
pop
pop
movsb
mov
stos
js
insl
and
stc
rcl
sti
out
ret
mov
or
add
xor
xor
test
sarl
jl
add
dec
sub
dec
movsl
cli
out
add
cmpsb
adc
pop
outsl
jp
rcrb
mov
nop
fdivrl
cmpsb
inc
jmp
xchg
lds
mov
xor
sbb
pop
xchg
lods
inc
arpl
out
dec
sub
imul
lock
mov
and
mov
fistpll
jmp
fsubrs
push
ds
pop
mov
or
mov
fcompl
and
rclb
adc
daa
jmp
xor
inc
xor
sub
xor
es
sbb
add
cmp
in
insb
hlt
pop
cwtl
dec
sahf
lock
mov
andb
int
arpl
lahf
mov
popw
sti
pushf
shll
sub
mov
ror
fisubl
pop
repnz
sbb
or
fwait
enter
fdivrl
cmc
insb
cmc
cld
fstsw
inc
ret
nop
add
inc
bound
jae
adc
in
cs
div
inc
enter
loopne
cmp
inc
pusha
mov
sbb
xchg
in
pop
and
in
push
mov
scas
loop
fs
aas
loope
inc
cmp
mov
push
scas
dec
adcb
imul
mov
mov
loope
mov
xchg
cld
pop
fcoms
xchg
bound
mov
xchg
push
ficoms
mov
repz
mov
rclb
sbb
sub
or
aaa
lahf
jg
mov
add
fldl
inc
mov
adc
mov
sub
pop
push
enter
mov
enter
idivl
xor
xor
add
rorl
scas
jecxz
ror
or
mov
lods
lds
dec
hlt
arpl
movsb
mov
inc
mov
mov
pop
fdivl
movsb
push
loopne
jp
inc
inc
cmp
dec
mov
pop
test
loopne
int3
xchg
in
sbb
jb
or
popa
ljmp
test
and
aam
sbb
cwtl
xor
aad
sbb
fmul
loope
push
out
xor
jl
xor
xchg
ja
mov
push
inc
or
iret
jae
push
loope
lods
adc
loopne
scas
push
cmp
scas
cmp
xorb
cs
pop
or
shr
je
jbe
and
les
test
loop
fstpt
test
cmpsb
inc
lods
jne
scas
cmpsb
mov
nop
xlat
cmp
and
dec
and
mov
cmp
push
inc
xor
leave
outsl
jo
lods
sbb
fwait
jno
inc
xor
cmpsb
or
cmp
loopne
adcl
push
incl
inc
loopne
aaa
clc
movsl
xchg
dec
test
in
dec
inc
xor
mov
and
jg
scas
mov
insb
dec
test
push
pop
push
fs
mov
xor
enter
dec
push
ja
mov
lea
ja
sbb
flds
addr16
mov
cltd
sahf
std
mov
std
sti
or
mov
mov
or
orl
scas
lods
in
adc
xchg
sbb
stos
imul
inc
cmp
popf
les
push
lahf
fld
filds
xor
das
sahf
push
into
sbb
int3
hlt
mov
sub
lock
inc
and
cmp
jmp
fnsave
jmp
dec
mov
aas
pop
sahf
lods
cmpb
imul
mov
lcall
popf
les
and
bound
sub
or
idivl
cli
pusha
sub
test
fisubs
cli
cmp
lahf
cmpsb
mov
adc
fmuls
jg
lds
inc
push
into
imul
xchg
int3
int3
push
ss
jnp
repnz
mov
push
adc
jno
fstpt
sbb
mov
sbb
xor
pop
xchg
jp
in
push
call
dec
in
mov
inc
xor
outsb
xchg
jp
ret
roll
sbb
imul
shl
shlb
cmp
add
push
mov
dec
cmpsl
cld
rorb
cmp
push
mov
adc
iret
gs
lds
cmpsb
movsb
sub
cmp
push
mov
ret
cmc
notl
mov
dec
jmp
add
fisttps
je
sbb
daa
xor
push
push
clc
push
loope
push
jno
and
int3
adc
sarb
ds
mov
adc
mov
je
fisubrs
pushf
cli
imul
mov
xchg
roll
xchg
das
jecxz
pushf
sub
mov
iret
add
jmp
fmull
test
xchg
clc
daa
cmp
mov
shrl
xor
inc
fists
mov
jl
dec
js
add
jge
ljmp
movsb
push
jno
ficoml
hlt
dec
insb
ret
cmp
imul
push
cmpsl
aad
dec
adc
in
out
mov
pop
hlt
or
std
adc
mov
pushf
sub
nop
jo
vandnps
mov
hlt
cld
sub
dec
xchg
pop
cmpsl
push
xor
lret
test
xor
cmp
cwtl
mov
mov
cmc
xor
scas
push
sub
and
cs
adc
imul
mov
aad
out
pop
je
xchg
mov
stc
pop
bound
pushf
add
lea
scas
rolb
outsb
jae
jmp
jne
mov
sbb
and
mov
orb
mov
out
xor
dec
daa
sbb
xor
jle
push
int3
loope
pop
xchg
sub
inc
sti
pushf
clc
ljmp
pushf
icebp
dec
and
out
push
repz
mov
sbb
lahf
jb
sub
aaa
les
int
sub
out
push
loop
xchg
shr
into
lds
xlat
in
and
sti
lea
call
cmp
or
mov
push
add
test
rcll
dec
leave
cmpsb
mov
xchg
sbb
cmpsb
dec
adc
adc
fbstp
aaa
in
sti
xor
xor
xlat
stos
lret
or
sbb
dec
push
rorl
mov
shrl
jae
test
adc
cmp
mov
nop
push
sub
ss
mov
nop
xchg
hlt
cli
sti
gs
adc
push
jno
sub
and
push
mov
ret
sahf
fwait
std
lahf
in
movsb
loope
mov
xor
xlat
sub
rcr
out
cs
ss
sahf
mov
push
loopnew
sbb
push
push
inc
sbb
dec
repnz
inc
lds
dec
add
mov
pop
jae
inc
scas
mov
fst
inc
and
popf
mull
sub
and
out
push
subb
std
pusha
inc
and
daa
loop
mov
xchg
sbb
andl
outsb
dec
out
insl
sbb
cmp
mov
pop
add
outsl
cmp
adc
jge
into
roll
mov
sbb
in
ret
fnsave
pop
rorl
jmp
mov
stc
mov
test
push
ljmp
ret
inc
pop
mov
hlt
aam
test
cltd
mov
xchg
adc
icebp
sahf
push
test
pop
or
mov
fisttps
int
sti
jle
mov
scas
push
jne
fs
or
xchg
movsl
or
cmp
jbe
dec
inc
inc
jno
rclb
fadds
jecxz
xchg
push
cld
jp
rcr
pop
clc
orl
pminub
inc
stc
lods
sub
cmp
sbb
lret
sub
pop
shlb
std
xor
out
sbb
mov
and
call
sbb
push
push
iret
fwait
insl
fdivl
jns
xor
sub
adc
in
test
pop
xchg
pop
xor
and
pop
outsb
xchg
inc
xchg
pop
mov
out
and
dec
andb
hlt
das
push
or
jns
in
dec
xor
mov
xor
fisttpll
lret
and
dec
dec
repz
mov
pop
jo
shrb
adc
and
jle
rcr
test
push
pushf
sbb
cs
pop
jnp
sub
sar
rcrb
mov
pop
pop
fdivrl
cmp
icebp
add
test
mov
shrb
and
pop
xchg
lds
rolb
sbb
jl
jbe
repz
mov
xor
call
jmp
rolb
dec
or
jne
or
es
xchg
test
negl
cmp
mov
es
dec
push
sbb
jle
outsl
push
ds
popa
mov
push
xchg
test
or
repz
rclb
dec
xor
mov
lret
out
adc
push
cmp
stos
pushf
cmp
inc
mov
mov
sbb
mov
pop
repnz
push
movb
inc
cli
jmp
inc
icebp
fdivrp
sbb
iret
outsl
cmp
sbb
xchg
jle
mov
mov
xchg
and
icebp
sahf
xchg
mov
cwtl
pop
mov
insb
daa
push
inc
cmpsl
fnstcw
push
gs
xchg
xor
adcl
cwtl
xchg
movsl
adc
mov
mov
arpl
xor
adc
dec
sbb
adc
aaa
sbb
cmp
mulps
and
and
jb
shr
shrb
inc
dec
push
xor
cli
inc
xor
stc
test
push
inc
nop
enter
sti
jge
jb
gs
nop
adc
fxch
and
bndstx
scas
fs
test
test
ja
fdivs
test
daa
fcmovbe
ficompl
or
mov
or
repz
inc
inc
insl
ss
dec
lods
in
andb
popf
push
rorl
mov
jne
lods
outsl
mov
pop
push
cmp
mov
push
add
mov
rorb
dec
aas
dec
ljmp
enter
faddl
xchg
in
or
stos
scas
xlat
inc
mov
jg
lods
addr16
xadd
mov
jmp
xchg
addr16
push
in
adc
int
jns
gs
outsl
fsubrl
movsl
xchg
test
orb
stos
cwtl
dec
pop
add
pop
jnp
add
and
mov
mov
dec
repz
pop
adc
ds
lods
loop
add
adc
inc
popa
ja
mov
cld
imul
sbb
ror
adc
lcall
lods
mov
data16
mov
dec
leave
int3
push
xchg
xchg
and
push
sub
std
push
shrb
pushf
nop
hlt
out
sub
test
jmp
scas
adc
pop
inc
add
xchg
cli
fistpll
stc
cmp
mov
xchg
pop
ss
lds
inc
fcmovnb
imul
and
and
mov
jbe
cltd
jle
repnz
dec
xor
sti
cmp
notb
add
push
test
out
sbb
jg
push
orl
aas
pusha
in
and
sbb
jle
les
lock
xchg
or
lcall
aad
jl
test
inc
pop
add
dec
mov
adc
pop
in
hlt
push
sub
mov
xchg
dec
pop
add
jge
pop
in
bound
dec
adc
cmp
sub
rcr
pop
inc
sbb
add
mov
xor
xchg
jb
push
dec
inc
xor
and
push
out
shll
ss
sbb
cli
aad
iret
xor
icebp
lods
aas
out
orb
add
mov
pop
lds
dec
add
mulb
adc
pop
orb
xchg
int3
mov
nop
je
aaa
lock
dec
mov
subl
cs
adc
jmp
inc
mov
cmp
sarb
push
cmp
mov
fs
sbb
lret
mov
sub
movsl
sbb
sub
insl
mov
dec
cmpsb
mov
jns
hlt
cmc
mov
mov
add
scas
mov
dec
pushf
push
xor
aad
adc
add
lock
dec
xor
add
sub
insb
pop
or
sti
xor
jne
jg
and
sahf
inc
jno
mov
xor
dec
cmp
lret
es
sbb
sbb
xchg
dec
fistl
pop
inc
cmp
imul
test
cmp
mulb
inc
rcll
xchg
sub
testb
mov
out
into
sub
loope
jno
cmp
jne
cmpsl
daa
lds
test
loope
shll
and
sbb
pop
fldenv
or
int
arpl
icebp
xor
fcompl
fs
pop
stos
xor
jle
popf
lsl
xchg
mov
inc
xchg
mov
testl
mov
inc
enter
lock
lret
out
aad
xchg
cmp
arpl
out
das
cwtl
inc
adc
in
fcmovb
out
imul
cmp
inc
sti
repz
addr16
call
idivl
push
outsl
sbb
fidivl
xchg
dec
repnz
dec
jne
shrb
and
add
ds
add
loopne
outsb
mov
pop
mov
xchg
jb
in
xchg
imul
inc
test
movsb
xchg
ficoml
daa
mov
xor
fistl
jg
mov
nop
sahf
lock
and
cmc
fistpl
lretw
sub
fsts
push
rorl
sti
fidivl
pop
das
dec
push
into
lahf
sahf
xchg
mov
pop
js
add
je
fcoms
mov
push
dec
int
xor
pop
std
cltd
movsl
mov
loope
outsb
or
push
dec
push
xor
roll
jge
loop
and
rorl
dec
adcl
pushf
xchg
rol
or
push
bswap
scas
jmp
dec
or
mov
sbb
std
push
cmp
pmovmskb
adcl
and
dec
push
out
sahf
jge
pushf
or
fldenv
jmp
outsb
lock
scas
orb
daa
xchg
cli
inc
notl
ret
fisttps
adc
push
sbb
cwtl
fnstenv
or
ja
pusha
dec
push
pop
hlt
xchg
sbbb
clc
and
xchg
enter
dec
xchg
jp
arpl
and
mov
fs
cmc
push
sub
or
mov
add
cmp
out
test
sub
or
pop
add
in
add
inc
and
std
inc
lods
arpl
xchg
jge
movsl
outsb
sarb
jl
sar
sub
lahf
les
or
shr
xchg
idivl
mov
mov
push
jl
ds
xchg
jecxz
imul
sbb
mov
in
cmp
add
test
sbb
sbb
fisubrs
sub
or
dec
int
stos
sub
mov
fnstcw
jo
pop
lock
dec
prefetcht0
stos
data16
and
lock
and
ficomps
pop
lods
in
mov
lret
aaa
mov
sub
fisubrs
int3
push
jae
jecxz
fiadds
mov
dec
and
mov
out
xor
imul
out
push
jl
mov
cmpxchg8b
leave
dec
mov
dec
pushf
inc
and
add
dec
jg
jns
dec
jns
dec
test
divb
out
data16
xor
mov
mov
enter
test
inc
es
or
jnp
loopne
decb
das
mov
mov
fstpl
xchg
xchg
mov
sti
sub
mov
cmpsl
negb
mov
test
decb
or
into
in
sub
pushf
dec
adc
pop
push
push
shl
lods
mov
test
sarb
adc
mov
pop
pop
out
popa
rorb
iret
in
dec
adc
push
int3
mov
test
or
gs
mov
mov
mov
ds
sbb
aam
fdivrp
and
test
pop
add
mov
xchg
fidivl
pop
ffreep
inc
sbb
cmp
fwait
movb
repnz
dec
pop
push
xlat
lock
shlb
rclb
dec
sub
cld
subl
mov
sbb
xor
cmp
bound
xor
test
call
or
cmp
test
push
call
aaa
lcall
push
test
outsb
out
shrb
add
inc
out
testl
in
dec
mov
fs
das
and
mov
mov
or
mov
jle
or
pop
mov
orb
shrl
cmp
xchg
scas
aas
sub
push
lcall
cmp
inc
inc
and
fsubrs
jle
fadd
ja
mov
jl
out
push
jo
pop
xchg
adc
add
or
in
push
jbe
sub
xor
stos
pop
fcmovu
mov
cmc
inc
sbb
std
fimull
pop
out
leave
pop
insl
mov
int
mov
and
int3
xor
add
fcmove
hlt
jle
aam
testb
sbb
push
pop
and
fnstenv
es
jae
or
cmpsl
jmp
lds
shlb
movsl
jmp
xor
sub
jnp
push
push
xor
test
outsl
sbb
notb
fsub
dec
add
jb
test
sti
jp
push
xchg
add
out
cmp
pop
sahf
rol
xchg
in
lret
fiadds
daa
enter
insl
jp
dec
fnstcw
or
adc
std
rolb
mov
jnp
add
sti
out
mov
cmpsb
mov
cmp
pop
mov
dec
pop
mov
sti
movsb
sbb
sub
pop
lea
pushf
or
pop
mov
and
sbb
popf
add
mov
inc
int
inc
arpl
insl
in
and
mov
aas
pop
mov
les
loope
aaa
mov
leave
out
ret
and
inc
or
aad
cmp
mov
push
test
pop
add
push
ljmp
fildll
repnz
iret
inc
add
xchg
mov
dec
shll
stos
imul
mov
lea
ljmp
in
dec
lods
es
std
test
cli
sub
lret
jmp
push
cmp
es
mov
dec
es
imul
fsub
xor
jo
dec
pop
imul
cmpsb
sarl
test
pop
sub
mov
jecxz
mov
popa
test
jae
xor
ret
pop
pop
sbb
cmp
inc
movsl
add
xlat
xlat
inc
adc
xchg
dec
fsts
cmp
xchg
mov
mov
inc
inc
lcall
mov
test
aad
add
xor
sahf
cmpsb
or
sub
hlt
mov
jno
cmpsb
jae
frstor
insl
add
pop
add
and
lock
mov
pop
push
or
iret
sbb
fisttps
gs
cs
push
lock
dec
in
add
test
pop
cmp
and
rorl
movsl
lods
mov
or
sbb
imul
in
jmp
lcall
push
lret
and
jbe
rcrl
mov
mov
xor
aas
pop
dec
mov
and
out
das
in
sahf
int
popf
dec
xchg
test
int
test
lods
gs
loope
scas
inc
push
dec
loop
adc
cld
jp
mov
loope
stos
sbb
jae
clc
mov
inc
mov
adc
out
fimuls
cmpsl
xchg
jp
jae
mov
aas
add
pop
cmp
out
push
xlat
or
fisubs
negl
jnp
outsb
dec
popf
out
pop
jle
out
jmp
out
xchg
and
sbb
xlat
movsb
repz
inc
in
gs
fnstenv
pop
data16
in
mov
push
clc
pop
and
dec
pop
leave
test
lahf
testb
shll
je
add
xor
movsl
aad
daa
in
out
sbb
pop
inc
dec
scas
inc
jae
or
ret
sahf
out
out
inc
das
mov
cmpsb
movsb
gs
xorl
jb
aaa
repz
jl
outsl
xor
jecxz
ja
test
test
iret
mov
xchg
cmpsl
lock
fidivrl
mov
idiv
cmc
mov
dec
popf
xor
add
test
mov
test
jl
aas
adc
jle
mov
and
mov
lock
xchg
call
lcall
xchg
mov
dec
adc
repnz
ja
leave
rclb
sbb
adc
dec
insb
mov
push
aas
inc
clc
loop
cmc
sbb
mov
push
insl
cmpsb
sbb
dec
out
lock
mov
aaa
imul
mov
stc
ret
cltd
xor
adc
jmp
mov
mov
mov
popa
or
sahf
sbb
dec
clc
andl
in
fs
adc
lahf
lock
js
adc
repz
xchg
out
sti
popf
bound
sbb
sbb
popa
mov
xchg
dec
mov
mov
inc
gs
and
je
mov
adc
sub
scas
stc
fisttpll
les
pushf
mov
mov
adcb
aas
xchg
xchg
cltd
enter
ljmp
cmp
lcall
jbe
inc
loopne
adc
mov
fdivrl
insl
pop
fldt
rcrb
repnz
cs
jb
or
mov
cmp
push
pop
icebp
push
adc
mov
lahf
mov
sub
jp
loope
das
add
test
icebp
xchg
cs
shll
inc
jg
data16
adc
loop
loop
das
xchg
or
pop
iret
cmpsl
jae
xchg
pop
mov
jne
testb
dec
imulb
push
add
pop
xlat
ja
lret
sub
mov
lret
int
adc
adc
fstl
inc
and
jb
mov
xchg
iret
subb
outsb
fcom
or
inc
mov
add
stos
xor
ret
mov
cmpsb
aaa
filds
mov
cmpsb
push
cmp
fbstp
cmp
aas
arpl
inc
lods
cmp
lock
add
inc
xchg
adc
adc
xor
cmp
das
cltd
test
xor
test
shll
mov
das
xor
and
inc
cmc
outsl
clc
cmp
arpl
subb
fnsave
mov
mov
jg
std
mov
inc
stc
lock
mov
xchg
inc
and
inc
xor
sahf
sub
mov
js
pushf
je
lea
xor
dec
push
std
sbb
pop
inc
insl
bound
xchg
jbe
xchg
into
out
mov
push
mov
je
jno
xor
inc
add
or
out
pop
and
pusha
mov
nop
adc
stos
sahf
ss
fsubs
bound
jge
loop
or
or
addr16
scas
std
jnp
daa
pop
xor
lock
nop
fsubrp
mov
ljmp
arpl
ret
outsl
jle
daa
cltd
int3
pop
dec
nop
jmp
loop
sbb
or
orb
mov
xor
out
mov
mov
jl
aam
and
dec
xor
jb
ja
adc
adc
dec
sbb
jns
enter
and
sub
jae
and
cmp
fcmovb
xchg
testl
xor
data16
pop
mov
lret
clc
dec
jmp
idiv
js
mov
pusha
push
fiaddl
mov
insb
fbstp
leave
leave
out
js
jbe
sbb
fisubl
xlat
cmc
sub
jl
jne
loop
sbb
iret
shlb
sbb
shrl
jnp
shlb
test
adc
ja
mov
mov
pop
pop
test
jne
push
push
clc
das
mov
icebp
xor
mov
iret
add
cmpsl
xor
pop
and
pop
sub
push
jnp
jecxz
lcall
imul
adc
xchg
jae
mov
out
mov
fdivrl
enter
jo
add
mov
and
jge
popf
das
inc
push
push
insb
xchg
lahf
dec
adc
xchg
push
dec
xchg
stc
or
jecxz
adcl
in
pop
ja
movsb
or
sub
dec
xor
sbb
lret
sbb
xor
fcmovbe
pop
add
mov
add
sti
cmc
sti
pushf
xorb
adc
jg
sahf
pop
push
fldl
ja
pop
cmpsb
fnstenv
into
test
lret
fmull
addr16
dec
add
push
mov
das
ds
in
push
push
lea
nop
mov
popa
cld
mov
loop
jns
xor
pop
int3
jmp
les
pop
lret
jg
mov
push
rol
adc
inc
test
adc
enter
xchg
cmp
ret
pop
xchg
insl
shrb
lcall
mov
jle
adc
jle
loop
test
rcrl
pop
gs
test
pop
mov
ljmp
addl
ss
sub
xchg
inc
stos
imul
pop
xchg
push
xchg
xor
mov
pop
cmp
cmp
dec
inc
cltd
ret
pushf
cld
aas
mov
and
in
sbb
push
lock
push
and
sub
cmp
testl
jp
aas
cmp
out
cltd
movsb
sub
adc
xor
jge
out
dec
xor
dec
popa
outsl
in
in
xor
dec
cmp
dec
and
cmp
push
sbb
in
sub
test
jnp
pusha
mov
xchg
push
stos
aam
pop
insl
inc
cmp
sbb
int3
test
cltd
test
lods
scas
shrb
or
jp
cld
cmp
dec
shlb
out
dec
lods
clc
pop
dec
sub
mov
sbb
mov
notl
xchg
xchg
pop
or
mov
cltd
cmp
mov
mov
ds
jae
mov
aas
int3
loopne
std
xchg
aam
ss
into
jne
xchg
popf
push
push
inc
xor
pop
out
inc
jo
into
ja
and
adc
fldt
sub
mov
cmp
les
mov
lds
adc
and
iret
or
js
xor
mov
aaa
push
mov
enter
add
fsts
xchg
xor
push
sub
aad
xor
mov
inc
test
inc
mov
mov
lret
into
jns
stos
shr
pop
lahf
shlb
jge
fnstsw
clc
or
sub
fildl
push
pop
cs
xor
ficompl
push
mov
sub
push
cmp
inc
jae
scas
sub
data16
sbb
movsb
orl
sbb
pop
fsubrs
jp
sub
cli
dec
aas
jnp
jno
xorb
mov
mov
mov
mov
pushf
fisttpl
gs
add
notb
outsl
arpl
mov
push
icebp
rol
xor
in
sbb
mov
out
es
int3
add
push
cltd
insl
dec
repz
jl
test
fadds
mov
adc
cmp
cmp
inc
idiv
push
cmc
je
sar
add
dec
cmp
test
andb
popl
mov
cmp
dec
add
test
xlat
jo
pop
test
das
js
sti
outsl
hlt
sbb
xlat
orl
xlat
es
pop
jno
pop
movsb
sbb
cmp
xchg
mov
jno
ds
repnz
xchg
mov
jns
cs
mov
roll
ret
imul
add
cmpsb
insb
addr16
jmp
sbb
es
hlt
push
mov
jmp
xchg
dec
lret
cmp
movsb
or
rcll
sub
sarb
pop
lods
repnz
aaa
mov
and
into
out
fwait
int
or
mov
ja
pop
ret
hlt
mov
add
std
mov
push
hlt
mov
les
inc
jecxz
jae
fbstp
loopne
aaa
fldt
jl
addr16
pop
mov
add
out
cmp
lds
imul
and
lods
cli
cmp
mov
jne
add
adc
dec
inc
dec
inc
pop
in
dec
div
filds
mov
stos
in
xorl
leave
xor
fwait
mov
orl
or
lds
dec
mov
sbb
mov
hlt
xchg
divl
cmpsb
arpl
enter
aas
inc
in
and
jbe
pop
push
mov
bnd
je
mov
push
daa
pop
das
pop
xor
cmpsl
xor
cmp
cs
mov
xorl
cmc
out
pop
loopne
and
xchg
jo
cmp
adc
or
sub
movsb
or
adc
ficoms
dec
sarl
pop
cmc
jp
scas
mov
repz
mov
fmull
add
push
add
test
push
mov
fxch
and
fstp
test
aad
cmp
pop
xor
lock
jg
jo
fidivrl
daa
and
in
inc
nop
dec
jnp
in
and
inc
sub
xchg
or
adc
sti
dec
repnz
mov
add
and
or
lds
mov
add
repz
push
xor
cmp
sbb
fs
mov
clc
stos
test
out
jbe
inc
int3
repnz
cmp
pop
insl
add
lods
outsb
dec
adc
cwtl
shl
mov
lahf
das
or
mov
sbbb
jo
rorb
mov
jns
push
pop
scas
inc
or
clc
sti
mov
aaa
outsl
mov
cs
ljmp
repz
fs
sti
mov
loop
or
rcll
adc
shrb
fdiv
pop
std
sahf
jge
sbb
fdivrl
outsl
sbb
mov
int3
adc
ds
daa
xor
jecxz
orb
lcall
in
lods
es
pop
inc
es
mov
fs
hlt
stos
idivb
jecxz
dec
aas
scas
mov
daa
fwait
call
or
xchg
sbb
outsb
dec
lcall
jno
roll
scas
frstor
out
icebp
pop
mov
lret
sbb
add
jnp
jno
dec
xlat
mov
testb
iret
in
cmpsb
enter
call
push
std
fcmovnbe
addr16
jecxz
sbb
push
fcmovbe
sar
cmpsb
nop
int
mov
cmc
adc
add
sub
mov
jmp
xchg
mov
dec
js
mov
scas
repz
in
dec
or
shrl
dec
dec
cmpsl
fnstenv
push
loope
inc
and
loope
enter
rcr
xor
mov
cmpsl
mov
movsl
lock
inc
mov
push
negl
push
test
aaa
or
inc
das
or
and
mov
adc
sbb
fimull
in
xchg
cld
xchg
xchg
int3
xchg
sbb
mov
hlt
sub
test
scas
and
sbb
or
js
iret
imul
das
mov
mov
lret
and
fdivr
sbb
or
pop
or
mov
jbe
notl
sub
lret
cld
xor
sub
loop
xchg
roll
repz
ret
dec
mov
mov
popa
jle
pop
push
jg
fimull
dec
mov
stc
out
xchg
sarl
shll
jo
sbb
stc
sbb
cmc
mov
pop
add
outsl
sub
dec
adc
test
add
pusha
lahf
jns
test
xor
int3
inc
mov
push
sbb
mov
int
clc
sarl
aad
mov
xor
lahf
hlt
mov
in
adc
test
movsl
mov
add
out
mov
adc
add
scas
rorb
xchg
jb
fidivrs
or
in
adcb
out
lret
ljmp
mov
mov
repz
int
xor
dec
xchg
push
push
push
out
mov
mov
inc
and
mov
pop
mov
fisttpll
test
sub
sbb
jbe
dec
xchg
add
push
and
cmp
jl
push
pop
movl
loope
jbe
jo
push
push
jno
imul
or
pop
lock
movsl
int3
xchg
and
add
shld
sub
inc
push
scas
jl
rorl
mov
stc
sub
scas
jp
fiadds
sub
fimull
mov
and
inc
mov
cltd
push
das
cmp
mov
ja
into
pusha
mov
hlt
adc
int3
add
jae
pop
push
loope
or
pop
xchg
cwtl
mov
or
dec
jle
cmp
xchg
sahf
in
mov
sti
xchg
push
adc
push
negb
ja
rolb
push
clc
jge
jmp
movsb
cmp
xchg
dec
and
pop
repnz
icebp
adc
xchg
lds
mov
ja
cmpsb
lock
sahf
loope
inc
mov
stc
jmp
add
cli
jae
fwait
cmpsl
pusha
or
jg
fmull
inc
mov
stc
mov
leave
inc
push
xor
orl
loop
test
push
lahf
nop
sbb
pop
jno
push
scas
int
in
lods
mov
ret
xor
andb
data16
pop
cwtl
xchg
and
mov
and
pop
test
mov
test
ljmp
rcl
andb
mov
pop
roll
pop
mov
or
adc
cmp
jns
push
ljmp
popa
jne
pop
jb
push
stos
hlt
dec
imul
add
push
test
pop
test
mov
adc
cmp
push
imul
shlb
xor
rorl
and
jecxz
movsl
imul
addl
dec
xor
xchg
adc
std
push
mov
seta
mov
push
jmp
inc
mov
repz
or
xor
lahf
sub
loope
push
leave
loope
fs
adc
mov
adc
addl
add
cmpsl
mov
add
rcl
iret
dec
shll
inc
xor
lds
out
test
push
inc
cld
incb
sub
push
lret
movsl
pop
fildl
movsl
adc
mov
data16
jnp
scas
std
aas
fsubs
push
mov
int
and
jne
mov
idivb
pop
pop
sahf
fdiv
dec
outsl
fstl
fdivs
pop
pusha
push
aaa
testl
lea
jmp
jns
push
aas
cmp
mov
jne
rolb
mov
add
enter
popf
test
fnsave
cmp
cli
sub
xchg
add
cmp
push
fisubs
pop
and
xor
loope
lock
push
push
dec
in
pop
out
fsubp
rolb
jbe
mov
jno
dec
out
movsl
pop
or
pop
mov
mov
inc
rol
mov
xchg
shld
mov
dec
movq
dec
and
mov
jno
and
repnz
sub
outsl
or
stos
mov
pop
mov
iret
jp
pop
ljmp
fidivrl
sub
push
dec
leave
sub
push
aam
sbb
jns
mov
je
stos
push
cmpsb
cmp
dec
in
push
jp
movsb
fsubrs
jae
cmp
lods
pop
xchg
xor
pushf
mov
scas
f2xm1
das
ljmp
lcall
dec
loop
jg
xchg
cmpsb
bound
pop
sbb
mov
or
lret
sub
cmp
jb
shrl
sub
add
lock
jo
repnz
loope
jge
mov
or
cmc
hlt
out
enter
scas
dec
ss
xchg
dec
jns
push
in
dec
push
push
stc
xlat
int
iret
insb
pusha
jp
rolb
popa
cmp
leave
repz
pop
mov
xchg
lret
fs
add
jg
pop
adc
jns
mov
pop
js
es
icebp
sub
std
arpl
mov
jl
jne,pt
pop
scas
es
jp
aaa
dec
inc
inc
imul
enter
sub
and
andb
cltd
mov
pop
test
stos
jae
rcrb
push
rol
xchg
dec
aad
leave
sahf
sahf
pusha
rcrb
jne
shll
adc
and
imul
les
rol
arpl
scas
ds
scas
and
add
insb
scas
sub
xchg
outsb
mov
sub
cs
lahf
in
pop
in
cmp
xchg
aas
jns
or
pop
jno
sbb
aaa
fdivs
jb
test
or
addr16
jns
popf
into
xor
inc
cmp
rolb
int
mov
enter
dec
les
sbb
insl
xor
cmp
out
stc
test
mov
and
pop
mov
enter
out
pop
bound
adc
mov
pop
mov
adc
js
hlt
sbb
fcoms
ret
jmp
das
clc
stos
jmp
cltd
ds
movsl
or
mov
inc
mov
addr16
xchg
mov
cmp
mov
insb
stos
xor
add
sub
xor
imul
lahf
dec
jge
mov
sbb
push
cmp
sub
xor
lret
scas
int
movsl
mov
sub
lea
cli
bound
pop
movsb
jg
jle
jge
push
cmp
sbb
in
sub
sti
into
pop
and
out
sub
bound
add
or
stos
pop
mov
pushf
pop
sysret
inc
and
or
push
push
xor
nop
stc
pop
mov
fs
cltd
or
dec
out
push
push
pusha
lods
xor
imul
outsb
mov
arpl
jae
mov
mov
cmp
jg
subl
pminub
mov
mov
repz
cmpsl
imul
test
sbb
out
das
enter
outsb
int3
rorl
in
sub
lahf
outsl
pop
imull
inc
inc
jp
in
stos
mov
pop
pop
addr16
mov
xchg
add
test
cli
jl
mov
mov
mov
xchg
jl
mov
sub
stos
push
fiadds
shr
jne
movsb
popf
cld
xor
or
scas
std
pusha
int3
add
cmp
repz
inc
stos
test
les
xchg
dec
lahf
jg
fwait
inc
mov
mov
push
inc
insb
addr16
mov
jp
xchg
sbbl
movb
mov
arpl
das
and
fs
jbe
push
fidivs
mov
rcrl
xlat
and
ljmp
pusha
jbe
add
xor
inc
push
adc
pop
add
sbb
or
lds
pop
shll
sarl
iret
shrl
popa
sahf
xchg
push
int3
xor
mov
mov
cmp
sub
insb
jp
push
fisttps
jb
je
lock
lret
loop
push
and
and
mov
push
and
xor
mov
dec
test
sbb
rcrl
pop
pushf
faddl
pop
jno
mov
nop
pop
lock
inc
push
push
jns
shll
das
lods
adc
push
push
xor
or
in
mov
aam
or
and
mov
dec
les
sub
in
insl
or
mov
or
lcall
push
sub
orl
sbb
shll
bound
and
adc
das
popf
pop
scas
in
pushl
xor
pop
imul
je
jmp
in
jecxz
push
fs
jmp
int3
mov
adc
sti
jbe
push
cltd
pop
std
jno
push
cmpsb
inc
jg
call
dec
jbe
adc
stc
mov
sub
xchg
mov
jmp
out
xor
mov
or
inc
or
test
sahf
xchg
aas
cmc
mov
jmp
or
xor
shlb
mov
jmp
add
aam
fstpl
and
inc
dec
fldt
shll
prefetch
movsb
and
xchg
cli
cmp
push
imul
sarl
adcl
sub
mov
data16
subb
sub
push
mov
sahf
mov
jecxz
repnz
orps
cld
xchg
add
lret
pop
sub
adc
fisttpl
fs
add
xchg
fs
cwtl
jp
out
dec
jne
mull
enter
sbb
xor
and
jmp
add
lds
rcll
pop
sahf
push
call
aad
in
lahf
mov
mov
repz
fstpt
xchg
mov
divb
add
push
inc
jo
add
sbb
loop
pop
sub
rcrb
vandnps
pop
into
daa
xor
pop
popf
sub
imul
scas
fldl
ja
lods
jp
lret
adc
mov
test
outsb
adc
mov
fwait
rcl
bnd
add
push
lods
lret
mov
jns
hlt
repnz
and
add
jl
iret
jae
push
shlb
ja
xchg
jl
xor
shrb
pushf
fmul
stos
test
orb
jae
fsubrs
ja
push
jmp
push
cmp
jge
gs
or
adc
addr16
lds
cmp
and
pop
insb
dec
mull
xchg
mov
jg
bound
fnstenv
pop
mov
out
fnstcw
push
jecxz
or
test
iret
push
sub
mov
xchg
out
jle
jl
pop
lods
les
subl
decl
jae
inc
int
int3
cld
and
aam
cli
fs
or
push
insl
gs
adc
imul
sbb
lcall
pshufw
mov
and
sbb
mov
mov
out
pop
clc
fs
movsb
add
mov
xchg
icebp
push
test
sbb
movsb
in
sub
clc
stos
add
outsb
mov
aam
cmpsl
mov
ror
xlat
and
push
sub
stos
or
and
push
loopne
loope
xor
xchg
arpl
cli
xor
sbb
negb
repz
bound
sahf
ljmp
gs
xchg
xchg
push
jl
adc
jae
sub
push
lock
inc
hlt
orb
inc
loop
xor
dec
aam
es
sub
mov
out
or
sub
mov
movsl
insb
dec
cmp
mov
dec
xchg
mov
mov
mov
lret
mov
insb
je
and
add
pop
cmp
div
pop
or
leave
add
imul
xlat
add
imul
pop
xlat
jo
jge
jo
xchg
in
rclb
insl
imul
gs
xchg
dec
xor
call
push
arpl
neg
test
ja
push
mov
dec
jecxz
popa
ljmp
in
in
cmpsb
xlat
dec
divb
lock
outsb
or
dec
push
push
lret
pop
sbb
popf
inc
push
insb
arpl
js
push
icebp
leave
data16
cmp
jg
aam
xchg
roll
sbb
sub
cmp
add
clc
add
test
les
shl
xorb
push
fldl
pop
inc
nop
inc
in
nop
ret
rol
pop
sti
mov
stc
outsl
sbbl
call
js
push
jo
fisubrl
dec
popl
mov
push
xchg
push
and
dec
jnp
add
pop
out
adc
shlb
and
sbb
adc
bswap
and
pop
das
sbbl
leave
stc
dec
inc
mov
fidivrs
or
inc
and
mov
ficomps
sub
mov
pusha
add
nop
lock
rorl
repz
mov
lahf
movsl
mov
repz
xlat
add
cli
pusha
cmp
cld
in
jmp
jae
xorb
je
shr
or
and
sahf
push
imul
loopne
scas
push
push
iret
jno
sbb
clc
sub
mov
dec
sbb
dec
into
adc
dec
xor
mov
push
mov
jp
out
pusha
pop
movsb
addl
sahf
inc
push
les
mov
pop
push
add
or
popf
push
or
inc
sahf
xchg
fadds
pop
into
xchg
popa
mov
shlb
leave
jle
sub
ljmp
jecxz
xchg
mov
in
daa
aam
xlat
and
lret
push
fwait
sub
push
enter
out
cld
adc
mov
xlat
or
data16
push
add
push
jns
or
stc
pop
dec
sub
jb
push
xor
jno
xchg
in
std
lcall
add
cli
mov
outsl
dec
xchg
xor
je
sbb
xchg
inc
push
loope
xorl
outsl
cs
xchg
or
outsl
cmpsl
bound
xor
or
scas
sti
sub
aam
sbb
sbb
push
scas
xchg
lea
pop
mulb
enter
movsb
cltd
jle
lahf
cmp
movsl
push
mov
test
adc
stos
push
daa
pop
shrb
lret
adc
jne
aas
add
or
jno
fcoml
adc
and
pop
inc
jbe
fisttpll
dec
and
or
pop
inc
sbb
sbb
cmp
repz
push
fnsave
dec
lods
dec
jno
mov
loope
push
aas
popf
inc
clc
xchg
sbb
addr16
fidivs
lahf
push
outsb
stc
sbb
scas
cwtl
jae
jo
inc
test
add
mov
xchg
shll
scas
jmp
xor
into
cmp
adcb
out
popa
sbb
mov
daa
and
jbe
les
lahf
sub
fwait
call
pop
movsl
push
or
das
repz
or
cli
sti
mov
inc
push
xchg
stos
pusha
loopne
leave
rolb
test
pushf
imul
sahf
outsl
lods
mov
lods
imul
fs
mov
xchg
in
clc
mov
pop
inc
nop
inc
add
adc
movsb
lea
pop
shlb
out
and
ja
stc
add
mov
and
mov
rcr
fiadds
push
insl
std
push
idivl
pop
xchg
loopne
mov
out
mov
test
xchg
ret
and
mov
mov
and
das
out
fnstcw
jle
insl
movsl
cmp
je
push
mov
mul
aas
ret
in
mov
sbbb
inc
jmp
popa
add
popa
add
hlt
mov
and
or
xor
rcl
imul
cmpb
jno
push
pop
hlt
add
jo
pop
adc
mov
mov
xchg
cmpsl
shll
inc
mov
add
add
xlat
in
xchg
cli
es
out
ljmp
jne
xlat
cli
sti
mov
or
les
cmpsl
add
inc
pop
adc
add
clc
xor
cmpsl
inc
mov
enter
jg
divl
popa
nop
stos
mov
mov
or
add
fisubl
cmp
push
cmp
cwtl
out
jae
pop
jae
ss
sbb
xlat
lret
xorl
lcall
in
sbb
aaa
das
dec
pushl
mov
sbb
test
mov
mov
out
xchg
add
movsl
jp
push
push
cmpsb
push
or
xchg
loopne
out
fdiv
pusha
sbb
cmp
jo
sub
test
int3
inc
push
sbb
stc
leave
xor
int
and
or
fdivl
arpl
xor
movsb
insb
es
adcb
clc
mov
dec
hlt
mov
mov
pop
scas
push
xor
insl
mov
jle
xor
inc
sub
jns
dec
xorb
mov
pop
pop
insl
mov
sbb
aaa
xor
xor
decb
and
mov
rcrl
scas
mov
sbb
xor
outsb
lret
sbb
mov
xchg
pop
pushf
aas
xor
divb
popf
pop
mov
push
mov
ret
pop
inc
add
mov
lds
mov
sub
stos
lods
orl
aas
ljmp
mov
dec
clc
stc
cmpb
and
xor
xor
adc
stc
mov
jns
std
nop
cmpsl
mov
mov
cmp
push
stc
popf
dec
jmp
xchg
addl
pop
mov
movsl
imul
inc
shr
clc
adc
mov
nop
jnp
jo
xor
adc
push
popf
sahf
xchg
mov
adc
stos
and
push
jmp
cltd
test
popf
add
jb
pop
mov
cmp
jmp
enter
pop
mov
out
jmp
loope
mulb
scas
jg
mov
mov
inc
js
inc
ja
sbb
and
fcompl
push
sarl
sub
clc
inc
sbb
aam
movsb
push
loope
mov
sub
and
mov
cltd
adc
push
stc
mov
mov
xor
stos
test
and
addl
adc
add
pop
push
mov
or
pop
insb
pop
push
add
jnp
lds
arpl
mov
loop
lcall
jmp
dec
inc
fnstenv
and
into
pop
dec
scas
mov
testb
mov
lds
sub
mov
dec
push
pop
mov
jge
pop
je
hlt
and
mov
cmp
cwtl
pop
cmp
mov
dec
ljmp
adc
push
mov
popa
cli
pop
mov
movsb
pop
or
push
cmp
lcall
adc
rolb
jecxz
sub
cmpsl
cmp
rolb
fsubp
daa
xchg
lock
pop
inc
jae
inc
jne
daa
mov
xorb
dec
mov
insl
mov
cld
in
shll
pop
cmc
jno
jae
loope
pop
data16
mov
adc
pop
pop
xchg
mov
pop
push
inc
dec
out
fsqrt
mov
and
xor
mov
xchg
add
jmp
sti
xchg
mov
inc
sbb
mov
or
inc
fcmove
pop
xchg
in
sbbl
ss
cmp
push
stos
lcall
adc
aas
in
jb
ror
mov
xor
inc
andb
mov
lahf
nop
sbb
js
jo
jne
es
push
icebp
mov
fidivrl
jp
adc
jne
dec
std
xchg
imul
iret
inc
sub
into
sub
push
fcmovu
or
adc
stc
jae
mov
int3
lock
fwait
mov
xchg
shl
dec
mov
notl
push
mov
mov
xchg
outsb
mov
stos
xchg
jmp
daa
dec
push
xchg
mov
notb
arpl
shl
push
adc
clc
call
lahf
cltd
out
icebp
repz
inc
mulb
dec
push
std
fidivrl
stos
cli
add
xlat
mov
add
pop
call
jle
xchg
in
icebp
jg
subl
push
mov
lret
push
sub
lret
lods
mov
test
mov
xor
push
mov
test
sbb
in
dec
mov
imul
into
jecxz
xchg
or
or
test
cmp
pop
push
and
dec
add
fldenv
sub
in
jno
frstor
inc
sub
lret
push
fcoml
or
add
xor
add
or
fwait
cli
clc
sub
test
push
pop
xchg
mov
adc
xor
and
sbb
cmp
clc
mov
push
mov
jge
sbb
popf
xlat
insb
arpl
icebp
xlat
push
fnstenv
mov
testl
push
dec
sbb
repnz
jl
xlat
jecxz
push
sub
push
dec
mov
push
mov
xchg
rol
sti
in
xchg
cld
ret
pop
pusha
sub
stos
dec
xor
push
mov
dec
rcrl
mov
add
prefetch
sbb
jno
movsl
orl
mov
push
fidivrl
sub
push
mov
enter
pusha
leave
jmp
sub
sub
aas
popa
das
cltd
adc
in
mov
pop
scas
pop
dec
lock
pusha
mov
popf
or
sbb
mov
mov
and
cmpb
fisubl
adc
push
loop
int
pop
scas
dec
gs
push
pop
pop
jge
out
mov
leave
pop
jp
pop
nop
cwtl
fs
imul
loopne
andb
movsb
imul
mov
push
stos
pop
or
movsb
or
sub
sub
xchg
cli
inc
dec
in
fidivrs
sahf
jbe
or
mov
movsb
rol
ja
sub
cmp
pop
cmp
sbb
xlat
ret
in
mov
orb
icebp
mov
loope
repnz
or
andps
daa
into
lret
cmp
loope
aad
adc
mov
dec
mov
movsl
fs
lods
mov
mov
scas
jnp
cli
pop
pop
xor
mov
or
mov
loop
testb
jo
mov
sub
sbb
add
pop
jecxz
shlb
lds
test
imul
push
mov
pop
xchg
ret
dec
shll
sub
fisubs
fucomp
insl
push
sub
ret
lods
sbb
xor
pop
inc
cli
daa
imul
mov
mov
fnsave
lcall
or
xor
and
loope
and
xchg
pop
add
aaa
leave
mov
aam
dec
fstl
ss
lods
mov
inc
test
add
jae
xchg
mov
test
add
lahf
cmpsl
jl
mov
mov
fstl
inc
sub
pop
sub
add
pushf
lahf
insb
aaa
adc
adc
clc
and
jbe
test
fsubrl
mov
dec
loop
dec
and
out
xor
add
sti
pop
fistpll
les
aam
mov
mov
lods
andb
or
jnp
aad
ljmp
and
xchg
ret
xlat
jns
insb
lods
inc
cmpsl
lea
add
ret
jne
repz
mov
mov
push
imul
add
inc
arpl
aad
mov
or
icebp
sahf
je
cltd
mov
out
insb
adc
sti
jmp
xor
aaa
icebp
shr
xchg
jne
cmc
cmp
rcl
pop
jns
lods
jp
popa
sub
gs
dec
xor
jp
xor
aaa
or
or
jg
loopne
jo
xchg
or
jne
jle
in
pop
das
add
lahf
test
aam
and
pop
sbb
cmp
adcl
sbb
push
xchg
cwtl
into
movb
rorb
mov
dec
push
das
loop
leave
jmp
or
mov
push
xchg
jns
push
or
aad
jb
aaa
jo
or
sahf
xor
mov
andl
insl
popa
sub
pop
push
jge
lret
mov
xchg
push
test
mov
iret
dec
ja
push
dec
xor
inc
dec
and
push
cld
xchg
movsb
stc
mov
cltd
in
lret
jno
mov
js
loopne
lock
sub
ret
sbb
test
cmp
cmp
jb
or
rcl
movsl
mov
or
inc
jge
inc
adc
test
lea
dec
cmp
adc
in
xor
call
sub
mov
jbe
jg
cmc
sarb
pop
cmpl
xchg
cmp
push
addr16
jo
cmpsl
lds
xor
sub
sahf
xchg
je
cmpb
adc
xor
insl
xchg
xchg
fsubrl
in
frstor
push
imul
je
push
mov
mov
fs
and
add
imul
xchg
sbb
pop
stc
xchg
xchg
mov
into
inc
mov
in
adc
sti
repz
daa
pop
outsl
sub
mov
and
ret
xchg
out
lcall
pop
and
cmp
arpl
dec
pusha
mov
jl
in
jno
or
push
mov
push
movsl
lds
test
addl
fdiv
ret
jge
jl
shrb
adc
in
inc
lret
es
and
nop
lcall
jg
xor
inc
stos
cmp
mov
fists
dec
or
pop
repz
jge
addr16
test
sbb
rcll
xlat
dec
dec
mov
daa
btc
jmp
lea
push
push
sahf
pop
cmpsl
clc
lcall
mov
push
and
call
cmp
sub
mov
pop
pop
adc
rcll
dec
jl
int
ljmp
adc
inc
mov
jo
xor
mov
or
pop
ss
jo
inc
movsb
add
es
add
or
into
rcrb
and
repnz
lock
insl
fidivrl
sbb
insl
stos
cmp
jmp
xor
sbb
ss
cmc
lahf
popf
jmp
push
dec
bound
pop
out
loope
outsb
xlat
loop,pt
adc
or
sbb
sbb
loop
das
or
mov
xchg
push
sti
sub
out
push
mov
les
sbbl
mov
ja
inc
mov
sbb
repz
adc
sbb
xor
test
inc
hlt
pop
jnp
lock
push
aad
into
add
mov
sbb
and
lret
sub
xor
xchg
and
orl
fdivp
pop
shl
mov
add
js
cwtl
shl
int
sub
cmp
ss
movsl
addr16
adc
dec
mov
out
aaa
and
or
dec
jl
xor
push
mov
cmp
or
mov
out
popa
add
test
clc
dec
adc
aaa
push
jmp
lock
aad
es
xchg
lret
cs
or
cmp
test
sub
cli
pop
ds
add
sbb
call
add
xchg
cmp
ret
ja
fcmovnu
and
cmpsl
sbb
push
lahf
js
call
ret
stos
mov
jge
push
int3
mov
push
imul
das
xor
cmp
cs
sbb
xchg
add
jge
sub
cs
ljmp
xor
div
popf
inc
add
das
div
loopne
jecxz
imul
mov
int3
mov
smsw
sarb
push
test
clc
inc
imul
mov
jle
rclb
xchg
loope
sub
pop
ss
andl
push
dec
cli
into
hlt
cmp
jl
mov
jo
or
push
popa
jmp
sbb
mov
shl
out
inc
sub
das
mov
testb
sbb
xor
ret
sti
xor
or
jg
mov
sbb
test
sahf
dec
sbb
dec
pushf
dec
out
stos
adcb
test
mov
pop
mov
icebp
movsl
dec
dec
ffree
out
xchg
roll
pop
adc
ret
orb
cmpsb
fs
sbb
dec
pop
add
sub
psllw
data16
add
fwait
sahf
lcall
mov
fistps
inc
or
pusha
pop
in
scas
and
sbb
jno
pushf
jp
push
inc
imul
mov
lahf
xchg
adc
inc
mov
js
jmp
cmp
imul
mov
ja
fstl
stc
push
stos
xor
adc
shrl
mov
popf
nop
dec
mov
xchg
cld
clc
xor
adc
xchg
fbstp
push
fidivs
stc
sub
push
pop
sahf
sub
mov
lds
or
jne
inc
test
insl
mov
or
add
inc
popf
push
stc
icebp
aad
stos
test
push
jecxz
xchg
pop
sbb
imul
sub
mov
pause
sbb
and
sbb
popf
jns
pushf
cs
xor
push
adc
cmpb
fwait
mov
push
scas
xchg
inc
pop
mov
or
dec
stos
cwtl
insb
addr16
in
cmc
mov
loope
jno
xlat
push
cwtl
cwtl
mov
outsl
sbb
das
popl
mov
fsubr
jb
mov
mov
popa
std
inc
lcall
and
jp
inc
lods
popf
mov
lea
cmpsb
jmp
mov
xchg
and
or
sub
lret
sahf
and
inc
xchg
dec
xor
test
pop
int
adc
sub
mov
sbb
leave
insl
dec
ss
pop
mov
or
mov
repnz
and
scas
adc
sbb
or
mov
and
jns
cmpsb
insl
jbe
or
loopne
jge
mov
mov
imul
loop
jp
inc
ss
jp
cmp
pop
push
fdivl
and
mov
inc
scas
test
jo
jne
push
jae
cmp
push
mov
xchg
push
and
sbb
loope
ficoms
shr
ret
fs
adc
movsb
inc
add
add
xchg
popa
jp
adc
sub
inc
int
repnz
mov
or
aad
test
adc
xor
ja
pop
sbb
push
fnstenv
mov
or
jnp
popf
ljmp
scas
pop
leave
daa
pop
push
mov
shll
adc
xchg
outsb
mov
ret
cmp
outsl
mov
sbb
and
aam
in
mov
in
mov
cmp
outsb
pop
push
push
pop
dec
fists
fmuls
jo
mov
dec
and
pop
aad
insl
sti
sbb
shl
mov
mov
cmp
jp
add
push
push
in
imul
xchg
add
jne
scas
aas
out
scas
mov
enter
or
xchg
pop
scas
dec
lcall
rol
cmpb
adc
sub
adc
push
pop
jp
push
int
ja
rorb
data16
fcmovne
xor
xor
lahf
mov
inc
sbb
jne
popf
sub
lahf
xor
cwtl
test
jo
pop
pop
jnp
inc
lods
fwait
jge
pop
mov
out
ja
int
jb
ds
pop
imul
leave
add
and
into
xor
push
in
cmp
hlt
pop
imul
and
and
jp
outsl
add
fwait
shrl
xchg
jbe
sub
int
in
jmp
sbb
stc
cmp
addb
pop
sbb
js
pushf
jg
int3
xor
sbb
scas
insb
cmpsb
lahf
shr
inc
cmp
mov
adc
mov
dec
shrl
and
popa
jmp
hlt
jne
push
enter
sub
out
cmpsb
mov
add
sbb
mov
pop
xchg
mov
cmovle
push
add
adc
imul
sbb
push
xchg
lods
notl
xchg
or
sbbl
dec
rcrl
mov
pop
cmp
lcall
mov
enter
mov
dec
add
js
push
pushf
loop
mov
mov
sub
lahf
movsl
mov
xchg
cltd
test
xchg
adc
outsb
aam
cmp
cwtl
mov
push
dec
stos
push
sbb
imul
cwtl
jl
push
xor
xchg
fs
mov
hlt
dec
jmp
lret
mull
cmpsb
xor
mov
test
jg
fadd
fistps
dec
pusha
jne
adc
cmp
mov
jae
jne
sbb
scas
clc
sub
addr16
ret
xor
cmp
cltd
dec
imul
fcomps
or
sbb
adc
mov
xchg
mov
mov
or
and
test
push
cld
or
sbb
xchg
inc
cmp
inc
jle
mov
jecxz
jb
clc
cmp
rcrl
aad
ret
pusha
imul
aaa
push
mov
stos
xchg
fdivr
sahf
mov
push
jbe
xchg
cmc
dec
mull
mov
inc
in
push
or
mov
es
flds
push
add
add
mov
sub
mov
sub
dec
ret
add
stc
aaa
jmp
sbb
xor
jne
jle
or
xor
xor
inc
cwtl
loope
adc
add
pop
fwait
jmp
add
psrad
push
scas
or
enter
sub
shrl
jle
pop
sbb
je
xchg
movsl
mov
push
rcll
mov
jb
mov
add
add
ret
add
insl
sub
ja
xchg
cmp
mov
adc
ret
mov
cltd
or
dec
loop
in
jne
and
aas
dec
dec
test
jnp
xchg
ror
iret
insl
pop
clc
pop
push
and
jg
nop
test
imulb
mov
xlat
enter
fisttpll
adc
adc
loope
mov
stos
cs
jp
pop
ja
adc
ret
or
mov
inc
lahf
mov
and
sub
sbb
cmp
iret
sbb
stc
lret
or
loopne
ret
call
loopne
mov
dec
lcall
lcall
stos
scas
test
das
and
xchg
or
ret
sub
add
std
fidivrl
and
add
cmpsb
js
test
imul
sbb
push
sub
fldl
ds
cld
aas
pusha
insb
xlat
dec
push
popf
sbb
decl
jno
hlt
repz
fwait
xor
loopne
test
pop
mov
idivb
stc
jb
stos
into
rcll
test
adc
test
mov
jbe
mov
js
pop
inc
or
xchg
xchg
pop
push
push
fiaddl
mov
cmpb
stos
je
in
mov
in
sbb
sub
mov
enter
push
inc
inc
push
push
fdivrl
push
mov
jp
loop
adc
jns
adc
jle
lret
inc
out
fwait
mov
cmp
into
inc
rcrl
in
aas
js
sti
das
cmp
pop
pushf
jg
pop
loopne
cmc
lcall
pop
jb
xchg
leave
loopne
ret
xchg
mov
xchg
jg
xor
sub
push
xor
lret
pop
ror
scas
jle
ds
ret
lcall
inc
sbb
test
jecxz
push
in
clc
sarl
aaa
add
or
rol
hlt
aad
cmc
dec
ficomps
cmpsb
mov
gs
adc
popa
and
and
push
or
pop
cmp
adc
cmp
or
mov
and
in
push
cld
lret
scas
add
or
imul
adc
out
cmp
mov
rcl
dec
pop
sbb
mov
outsb
and
dec
fidivl
clc
push
pusha
movsl
fimuls
mov
popa
xchg
jo
call
and
insl
xor
test
sbb
orb
in
es
xor
xchg
jg
lea
fistpl
mov
mov
pop
dec
rcrl
add
cmpsl
inc
adc
and
or
push
loopne
into
cmc
call
test
mov
icebp
sbbl
adc
sbb
clc
in
fisubrs
dec
les
fsubrl
test
mov
mov
pop
scas
pop
out
jae
dec
dec
stos
dec
pop
fdivl
push
xor
sti
stos
sbb
xchg
repnz
cmc
fidivs
sarb
xchg
gs
pop
stos
inc
cs
mov
sbb
inc
mov
sbb
sbb
cmp
in
xabort
jns
jecxz
pusha
mov
dec
add
push
mov
mov
loop
das
cld
mov
int
jnp
sbb
rcll
insb
mov
fldcw
lret
insl
sahf
push
jmp
lcall
scas
push
mov
scas
dec
push
sbb
sbb
xor
pop
sti
jmp
and
xchg
mov
mov
add
fstl
mov
movsl
mov
sub
xchg
ret
rorb
cs
mov
clc
jne
pop
push
sub
jb
loope
fldenv
adc
in
pop
daa
add
sbb
lods
ret
fisttps
xor
adc
int3
push
aam
addb
out
clc
cli
andl
jae
push
lcall
inc
push
int3
pop
push
scas
push
ljmp
jg
mov
insl
fs
repnz
sub
add
fdivr
cwtl
cmpb
or
sbb
lods
or
mov
jl
pop
lea
int3
ljmp
dec
jl
adc
mov
loop
add
or
repz
add
push
adc
pop
adc
mov
fistpll
xlat
stos
ds
and
mov
push
xchg
inc
lods
xchg
lss
lock
fisubrl
enter
lcall
xlat
sub
mov
cmpl
inc
add
sbb
xchg
push
es
decl
jo
pop
sbb
rcrl
call
inc
pusha
rcll
and
call
xor
mov
mov
loopne
jb
and
xchg
jecxz
sub
cmpsl
inc
lret
repnz
sub
in
sti
loopne
loope
mov
pop
jp
leave
jmp
ret
sub
lds
int
xchg
shl
pop
cmp
or
mov
push
pop
cld
into
inc
xlat
pop
imull
in
jg
dec
inc
popf
lret
insb
ss
adc
imul
dec
pop
leave
adc
cwtl
inc
inc
jle
push
mov
adc
lahf
imul
hlt
in
dec
adc
adc
lcall
jbe
dec
xor
lds
cmp
jo
cmp
or
cmp
mov
stos
icebp
xor
jg
dec
cltd
cmp
dec
mov
fimull
mov
adc
mov
add
popa
repnz
push
xor
jae
jmp
out
repnz
mov
jp
cmpsl
and
pop
cmp
sbbl
pop
lea
ljmp
dec
ret
xor
xchg
addr16
ret
push
rcrb
xchg
dec
add
je
arpl
sub
add
mov
arpl
xor
or
bound
aas
mov
mov
xchg
add
adc
icebp
mov
imul
xchg
mov
cmp
cmc
inc
shll
adc
repnz
lahf
arpl
jno
aas
mov
sub
and
js
ja
sub
mov
sub
cmc
popa
xor
jmp
and
sbb
mov
sbb
cmc
push
imul
addr16
adc
and
xor
push
hlt
inc
xchg
xchg
push
mov
dec
lret
push
jae
sub
arpl
daa
hlt
sbb
dec
scas
mov
fs
and
popa
xchg
cmpsb
adc
imul
in
arpl
pop
jnp
sarb
in
das
add
add
pushf
or
or
shll
sbb
mov
lods
std
jmp
pop
mov
push
inc
xchg
in
and
aas
or
cmp
test
dec
xor
out
mov
dec
and
aam
out
pop
jmp
jne
push
cwtl
inc
lret
cmp
shrl
bnd
pop
add
mov
leave
pusha
cmp
adc
mov
roll
pop
out
push
call
mov
mov
mov
mov
sti
adc
push
gs
adc
dec
cmp
iret
xchg
outsl
xchg
popf
jbe
gs
insb
or
in
insl
jmp
dec
fcoml
xor
push
adc
arpl
ja
pusha
sbb
lods
orl
test
sbb
lds
sub
into
xor
push
mov
scas
push
xchg
xor
ror
and
push
scas
inc
das
sub
push
mov
cs
test
or
cs
out
cltd
sahf
ret
push
xor
fdivrl
push
jmp
sub
xor
ds
popf
or
enter
loopne
mov
sbb
in
aas
fisubl
xchg
jmp
outsb
out
xor
sahf
and
pusha
dec
sub
sub
mov
inc
xlat
mov
ds
cwtl
xor
ja
mov
push
add
inc
js
cld
push
mov
mov
push
pop
mov
pop
or
xor
lods
mov
in
daa
div
sbb
pop
adc
scas
in
dec
lock
mov
jns
or
mov
movsb
mov
movsl
ja
imulb
and
mov
push
decb
and
pop
aaa
test
mov
daa
mov
aas
arpl
mov
aam
mov
xor
testb
cld
xchg
out
add
mov
mov
cmp
mov
std
aas
iret
stos
fisttps
call
xchg
adc
jmp
xor
outsl
cmp
loopne
push
jmp
adc
push
jmp
pop
sub
jecxz
adc
mov
loope
and
js
sbb
cmp
pop
decb
or
jne
add
jo
pop
stos
stos
xchg
std
mov
jmp
stos
cmp
fidivrl
lods
push
jne
clc
aas
inc
adc
pop
iret
cmp
cmp
aas
ret
push
add
xor
arpl
imul
adc
cwtl
pop
in
push
rorl
adc
divl
ret
out
lret
xchg
lock
push
adc
pop
sub
sbbl
sbb
cmp
xor
cli
lcall
movsb
call
jp
pop
mov
jecxz
xchg
test
dec
jmp
jl
fdivl
test
add
mov
pop
enter
into
sahf
data16
adc
jbe
sti
inc
mov
sahf
adc
int3
sbb
stos
leave
int
hlt
aaa
mov
or
mov
mov
into
pop
leave
jmp
mov
das
std
ja
outsl
fsts
dec
sti
pop
bound
int3
pop
or
cmpsb
jo,pn
fmull
add
inc
ja
insb
jge
xor
add
cmp
jbe
and
imul
ljmp
movsl
enter
sub
mov
ss
scas
pop
jb
ljmp
in
popf
stos
lock
mov
mov
jp
xchg
sbb
daa
jne
ret
sbb
push
add
addr16
cmpsb
pusha
lock
xor
adc
lcall
mov
rolb
jnp
adc
mov
ljmp
in
dec
pop
cmpb
pmullw
sub
adc
sub
mov
mov
xchg
call
lods
iret
and
sub
arpl
repnz
lret
cwtl
ljmp
scas
sbb
jne
and
jmp
out
sbb
cmpsl
add
mov
mov
ljmp
jp
movsl
and
shrb
out
mov
js
dec
lock
xor
dec
dec
pop
out
and
xchg
xor
icebp
xchg
and
cmc
cmpb
daa
sub
nop
rorl
in
in
dec
push
aam
aaa
sbb
jae
lcall
leave
xlat
or
ds
mov
loope
in
int3
xor
lock
mov
subl
cs
dec
jp
out
xchg
pop
xor
push
xor
pop
pop
or
xchg
mov
or
mov
sub
xor
or
shufps
data16
mov
mov
sub
and
jmp
pop
mov
xchg
fwait
ss
stos
hlt
repnz
rcll
clc
repz
addr16
test
lret
shrl
popa
and
sub
pop
xor
mov
jb
pusha
push
std
mov
stos
ds
xchg
movsl
aad
mov
dec
aas
xchg
jnp
ja
mov
mov
mov
stc
je
cld
aaa
jno
popa
lret
int3
inc
cmp
mov
mov
jo
fstps
pop
pop
shll
sti
mov
dec
sbb
loopne
add
sub
sub
ss
jae
cs
mov
popa
or
movsl
cmp
xor
pusha
mov
mov
ds
push
andb
push
push
xchg
out
pop
dec
scas
mov
cmp
inc
push
ds
mov
pop
xchg
popf
jge
inc
aad
stc
imul
in
jnp
mov
adc
pop
sub
mov
pop
movsl
push
and
sub
fnstenv
call
out
call
jecxz,pn
fiaddl
and
cmpsb
jbe
mov
sub
and
ds
xor
cmpsl
in
jg
sbb
outsl
pop
hlt
into
mov
in
mov
scas
dec
push
call
daa
inc
imul
cmp
in
adc
xor
mov
inc
or
inc
jne
add
cmpb
xorl
sbb
mov
icebp
xchg
into
loopne
xchg
pushf
add
mov
test
pop
push
jo
popa
push
ja
stos
adc
test
lock
sbb
lahf
mov
leave
pop
mov
or
adc
inc
mov
lea
sub
ret
and
mov
insl
sbb
out
pusha
dec
mov
cmp
lret
sub
and
pop
test
les
add
inc
lds
cmpsl
inc
iret
mov
into
mov
fwait
jno
xor
pop
pop
mov
out
call
in
mov
je
in
lods
mov
mov
pop
arpl
mov
out
push
add
sbb
xchg
jo
outsb
inc
jno
inc
add
rcrb
std
sub
aam
sbb
stos
sub
pop
in
inc
pop
decl
push
mov
call
mov
adc
shlb
sub
xchg
andl
out
outsl
in
and
mov
mov
inc
push
push
inc
cmp
xchg
test
mov
xlat
je
imul
pop
add
gs
jnp
ljmp
cmp
stos
ss
sub
pop
mov
rclb
mov
addr16
mov
sub
xchg
xchg
sahf
fiadds
mov
jge
pop
lea
push
dec
or
xchg
out
int
dec
xchg
insb
shlb
jae
jp
out
cltd
fs
adc
cmc
jle
push
and
mov
int3
xchg
sub
pop
and
mulb
cli
sahf
sub
mov
notb
xor
sahf
mov
inc
mov
cmp
cli
pop
push
loop
push
jne
and
xlat
mov
in
jno
test
jbe
sti
push
ljmp
mov
pushf
mov
pop
or
cld
add
or
stos
aam
jge
and
leave
aad
imul
fidivl
add
or
push
dec
test
jo
sub
xor
filds
mov
jnp
out
mov
mov
push
add
test
jge
loope
lods
xor
fdivp
mov
push
xchg
fistpll
repz
mov
shlb
test
push
gs
add
lods
in
mov
movsb
xor
or
mov
into
and
sub
mov
jmp
lods
ljmp
sbbb
nop
and
sbb
mov
test
xor
lret
fldt
inc
sbb
shl
cli
das
add
mov
int
pop
js
iret
mov
sub
mov
jns
loope
jo
push
xchg
lret
stos
mov
pop
lret
or
das
ss
or
stos
lea
mov
jmp
lods
movsl
xchg
mov
push
lcall
inc
ret
imul
punpcklwd
out
dec
sub
mov
divb
inc
inc
mov
push
movb
lods
ja
jnp
mov
loope
imul
mov
cmp
xchg
sub
add
orb
ljmp
call
mov
sarl
jecxz
fnstenv
arpl
shll
xchg
bound
sub
and
xor
shr
shlb
xchg
aad
loopne
xchg
inc
insb
movsb
cwtl
insb
inc
rcrb
inc
xchg
add
push
mov
sti
jle
or
outsl
in
xor
test
inc
rolb
pop
or
scas
cs
out
adc
mov
cmp
and
sysenter
scas
inc
cli
fsubs
sub
outsb
mov
sub
leave
bnd
cli
xor
add
mov
in
inc
shrb
and
sbb
jae
lock
mov
push
add
cmp
lahf
inc
mov
sbb
outsb
push
pushw
fdiv
fldenv
mov
hlt
xor
ret
push
enter
out
mov
jb
inc
jp
push
jg
jge
out
or
sub
pop
push
xor
into
and
btc
pop
in
push
dec
sub
jg
or
sbb
cli
jne
aaa
scas
pop
stos
outsb
or
ja
jl
adc
dec
push
or
pushf
sbb
mov
dec
scas
lret
cmp
fistl
daa
cmp
stos
data16
xchg
rol
cli
sbb
xchg
lea
pop
mov
inc
cmp
add
je
mov
sbb
fcompl
jne
mov
or
xor
push
idiv
inc
pop
lea
sbb
jnp
adc
fcmovnb
push
ss
out
jbe
cmp
pop
sti
dec
subb
ficompl
cmp
pop
test
stos
jnp
dec
cs
sbb
in
lcall
cmc
xor
inc
les
dec
inc
cmp
movsl
dec
stos
loopne
fstpt
dec
push
pop
ret
and
cmp
xchg
stc
adc
lea
mov
std
pop
arpl
loopne
jecxz
xchg
lods
cltd
dec
xorl
stos
fwait
leave
and
jmp
icebp
out
push
mov
push
jnp
mov
stos
cmp
into
repz
mov
mov
fwait
lock
fs
and
xchg
push
sub
push
sbb
and
pop
and
or
jmp
or
cli
rcll
inc
push
mov
dec
dec
pop
dec
ljmp
and
jmp
imul
dec
icebp
cmc
lock
rol
fistps
mov
pop
imul
lock
mov
rcr
mov
or
lret
aas
push
sbb
mov
stos
gs
cmpb
sbb
push
into
mov
jmp
lods
sub
mov
hlt
cmp
cmc
cmp
stos
into
and
cmc
out
sbb
inc
imull
adc
cmp
or
or
outsl
mov
outsl
add
ret
testl
and
js
pop
or
stos
test
leave
mov
push
and
pop
add
in
push
cmc
add
hlt
cmp
lea
rorl
aam
sub
int
imul
hlt
or
mov
mov
cmp
dec
sub
enter
cmp
scas
dec
pushf
dec
clc
adc
push
cltd
rolb
cmpsl
add
fidivrl
fisttps
xlat
les
nop
and
ljmp
mov
sub
fbstp
idivb
inc
dec
insb
repnz
sub
outsb
dec
lea
mov
xorl
inc
cmp
pop
mov
mov
inc
sbb
jmp
pop
fs
pusha
std
pop
pop
orb
aam
add
and
stos
mov
sbb
cmp
loope
lahf
test
inc
rol
sbb
jne
dec
cmp
or
mov
xchg
add
int3
shl
lea
lods
jecxz
aam
mov
imul
ss
int
push
dec
push
rorl
or
sub
ja
cld
jp
push
fistpll
test
into
enter
jae
lcall
add
out
iret
or
dec
push
fs
adc
and
nop
cmp
outsl
add
jae
push
ljmp
repz
cmp
sub
ja
inc
xor
dec
xchg
add
pop
push
pop
push
adc
cltd
lret
dec
inc
add
aaa
mov
lods
fldenv
cld
outsl
test
cmp
call
cmp
mov
add
divl
and
cmpl
push
mov
ljmp
mov
hlt
ds
xor
out
lcall
pop
inc
lret
push
pop
arpl
lret
movsb
jno
dec
inc
inc
mov
adc
lods
insb
data16
icebp
stos
loop
pop
in
mov
jmp
mov
adcl
jnp
mov
push
lret
push
mov
xchg
loopne
cmp
in
cmp
cwtl
sti
xchg
pop
mov
jle
jne
repnz
loopne
and
jns
adc
push
add
sbb
mov
sbb
fistl
mov
in
adc
clc
adc
mov
sahf
imul
pop
jne
add
mov
jge
insl
gs
vmwrite
stos
decl
jns
mov
cmp
xchg
xor
pop
lcall
test
xor
xor
shlb
jecxz
pop
fldl
xchg
inc
mov
mull
fcompl
into
mov
cli
or
xor
cli
push
fisubrs
sub
fwait
inc
iret
cmp
out
loop
fmull
add
dec
xlat
lcall
push
push
mov
fmuls
stc
push
jp
push
pop
out
lea
gs
outsb
dec
ret
mov
les
and
dec
push
push
ret
ficoml
imul
jns
rorl
aad
lds
sbb
test
sub
cwtl
dec
xor
sarl
fnsave
popf
xor
scas
jns
mov
pop
cltd
add
lods
loope
mov
icebp
inc
mov
xorb
js
or
pusha
dec
cwtl
es
pop
ret
out
inc
mov
mov
jp
into
mov
sub
jecxz
add
jo
xor
jae
sub
xchg
daa
xchg
jb
std
sti
pop
push
xchg
out
dec
enter
fists
cmpsl
das
les
sub
xchg
and
jb
dec
pop
or
inc
inc
xchg
xchg
ror
sti
xor
jmp
dec
outsb
rcl
mov
es
inc
inc
test
jecxz
mov
pop
mov
mov
push
mov
mov
rorb
fldl
pop
push
ss
dec
pop
pop
jecxz
mov
popf
push
lret
mov
jge
iret
sub
push
xchg
push
fwait
mov
in
mov
mov
push
dec
mov
pop
hlt
or
dec
xor
pusha
and
xchg
cmp
add
mov
and
sbb
ficoms
add
int
cmc
xor
dec
cmp
pop
mov
push
mov
cmp
xlat
int
dec
jl
pop
jmp
in
jecxz
pop
lret
sbb
mov
lds
insl
fidivl
jns
mov
xchg
adc
pop
out
xor
iret
or
inc
jo
jno
xchg
cmp
sub
inc
sub
jae
mov
stos
stos
sbb
jb
mov
aad
cwtl
sub
push
in
and
lret
adcb
inc
ljmp
mov
in
dec
pop
mov
inc
loopne
movsb
out
imul
pop
test
cmc
stos
cmp
pop
dec
in
loopne
lods
lods
insl
cld
push
or
pop
jo
dec
gs
pop
xchg
fcomps
div
xor
sub
mov
nop
ficoms
mov
mov
sbb
xor
aaa
clc
jg
lods
push
cmp
adc
fwait
dec
xor
push
xchg
fdiv
divb
sbb
adc
add
stos
inc
aad
jmp
mov
pop
test
push
test
adc
scas
mov
pop
mov
add
adc
mov
gs
popa
mov
stos
adc
inc
sbb
push
test
mov
xor
xchg
stos
dec
mov
popa
jae
mov
ret
test
jnp
ds
inc
add
push
and
ss
out
aas
gs
adc
sbb
mov
jle
sti
sub
pop
jns
test
sahf
je
pop
sbb
call
daa
out
int3
out
lahf
xchg
mov
out
dec
pushf
push
data16
arpl
outsb
loope
xlat
sahf
push
scas
xchg
outsl
or
pop
sub
shlb
sub
and
mov
test
mov
int3
jg
jbe
jp
andb
xchg
sbb
pop
inc
mov
adc
inc
xlat
loope
push
aam
cmp
test
sbb
shl
push
jo
mov
or
mov
lret
movsl
fdivp
xor
stc
and
sub
rcrb
popf
aas
xchg
ficompl
and
insl
cmp
in
mov
inc
imulb
xchg
pop
daa
mov
setb
gs
loop
je
lcall
stc
dec
ljmp
mov
add
or
es
mov
add
ljmp
push
add
outsb
filds
mov
and
add
incb
lahf
in
ja
out
mov
outsb
mov
push
enter
fiadds
pop
xor
xor
inc
dec
out
cmpsb
dec
and
mov
inc
loope
add
call
aam
jne
cltd
add
pusha
sbb
js
adc
frstor
hlt
sbb
xor
aad
jg
cmp
jg
fsubp
inc
push
mov
dec
faddp
sti
mov
clc
xor
sbb
push
les
mov
sbb
and
push
dec
dec
or
call
cmp
lret
shrl
push
adc
sub
test
cld
mov
cmp
pop
pop
jns
jbe
out
push
aas
orb
push
and
pop
js
pop
adc
cli
sub
stos
mov
jecxz
popf
cmp
into
or
dec
add
andl
sbbb
leave
mov
outsb
sbb
bound
scas
cmp
fs
das
pop
je
mov
mov
adc
loop
inc
ds
xor
push
or
rclb
imul
lods
inc
mov
jecxz
mov
aad
pop
dec
mov
and
hlt
push
pop
jo
inc
add
push
cmc
dec
push
push
add
daa
sub
inc
clc
mull
or
fisubrl
lret
mov
pop
loope
mov
mov
pop
insb
jno
mov
cmp
shll
insl
roll
std
and
jnp
mov
js
pop
cmc
xor
cli
repnz
pop
sub
and
mov
out
sbb
xchg
xorb
mov
mov
add
fdivs
mov
cmp
sbb
xor
xchg
dec
lods
sahf
ret
add
mov
add
loope
outsl
test
xor
adc
pushf
cmp
adc
jb
orl
push
in
lcall
in
push
cmp
ja
ret
or
ss
cmpsl
sub
jmp
imul
pusha
scas
push
mov
into
std
mov
out
ljmp
push
cwtl
callw
jmp
mov
rclb
repz
sbb
js
push
rolb
xchg
inc
stos
imul
fidivs
aam
ja
add
inc
inc
jns
imul
sub
rcl
and
cs
ljmp
push
pop
jmp
cltd
mov
ret
xor
test
sub
mov
mov
xchg
cmp
push
fidivl
clc
adc
int3
std
xchg
pop
sbb
inc
in
or
es
cltd
insl
xchg
lahf
pushf
cmpsl
jbe
mov
leave
lods
aas
xlat
lds
and
cmp
or
cmp
add
mov
dec
int
iret
inc
pop
add
jl
movsl
sbb
imul
imul
xlat
dec
adc
jmp
xor
out
cltd
sbb
jge
das
ja
es
sbb
dec
jae
or
dec
or
call
insb
scas
jmp
push
jg
cs
pop
jno
shrl
dec
mov
cs
and
dec
push
es
popf
sub
mov
jg
and
inc
push
mov
push
int
outsl
andb
stos
cmpsb
out
mov
xor
loope
mov
mov
sahf
mov
rorb
inc
pop
mov
xchg
mov
jecxz
ljmp
push
les
pusha
push
xrelease
call
imul
test
xor
shrb
das
pop
dec
or
loop
xor
cmc
mov
jmp
lock
ficoms
mov
in
in
outsb
xor
add
pop
fiadds
xchg
aas
nop
movzwl
push
sub
fcmovbe
scas
or
insb
inc
int3
lahf
divb
mov
jle
dec
push
imul
mov
dec
cmp
cmp
outsb
mov
repz
lcall
pop
fidivrs
mov
insl
shrb
xor
adc
lcall
sbb
icebp
dec
and
sub
sbb
adc
mov
pop
lods
push
xor
dec
daa
push
incl
jmp
aaa
mov
sbb
push
cmp
std
popa
pop
lock
aad
dec
icebp
or
fldenv
out
sub
cmpl
into
or
cmp
inc
or
pop
hlt
pusha
mov
call
aam
or
divl
nop
xor
xor
add
dec
mov
mov
push
mov
or
cmp
xor
xor
fwait
push
lret
mov
leave
push
fadd
subb
ret
or
shlb
sub
push
and
jg
or
sahf
mov
xor
jg
xor
sbb
pop
push
sub
in
insb
pop
ljmp
jae
mov
xlat
cwtl
outsl
xchg
dec
lcall
xor
adc
dec
clc
sbb
jo
xchg
test
xor
sti
test
cmc
ds
jmp
in
inc
adc
mov
mov
pop
mov
mov
add
cmpsb
fnstcw
inc
cmpsl
cmpsb
cmp
insl
xor
stos
fucom
hlt
js
test
aas
into
sbb
sbb
add
jb
stos
mov
lods
fcomip
adc
jp
cltd
and
add
sbb
es
add
popa
daa
fdivrl
jge
add
ja
inc
push
lret
cmp
lret
mov
mov
call
or
adc
rorb
push
jmp
nop
icebp
ret
popa
push
mov
sbb
push
xor
test
and
cmp
lret
cmp
das
in
xchg
cmp
insb
iret
out
ljmp
subl
and
mov
in
push
dec
insl
xchg
inc
inc
jle
popa
and
fadd
mov
je
jns
rol
ror
sub
push
hlt
adc
push
add
push
jecxz
push
fcomp
lea
sahf
sarb
sbb
das
fsub
popa
das
aad
pushw
cmp
cmpsl
imul
fiadds
jmp
xor
sbb
or
sbb
mov
adc
outsb
sbb
mov
andl
aas
repnz
cmp
mov
adc
notb
adc
cmp
inc
or
jg
daa
push
ret
push
mov
out
jmp
aas
loope
scas
fdivrl
movsb
cltd
cmpl
dec
mov
dec
push
outsl
lahf
dec
mov
outsl
mov
mov
sbb
cmp
pop
push
shrl
cmp
je
in
stc
in
stos
sub
aam
lret
ja
repz
int
lret
stc
cltd
and
jmp
cwtl
cmpsl
adc
xor
sub
pop
out
ja
jmp
mov
push
mov
push
or
insb
outsb
jb
je
sti
imul
or
lds
js
bound
aad
outsl
jno
sbb
repnz
push
popa
mov
jnp
xchg
adc
mov
mov
popa
mov
pop
sbb
mov
xchg
add
pushf
dec
les
inc
pop
lea
andl
shl
dec
mov
cmp
aam
adc
sub
push
cli
push
inc
and
push
gs
outsb
pop
or
lock
push
add
aas
aam
jle
pop
fnstenv
cmp
daa
dec
scas
lret
xchg
add
jp
adcb
jae
test
xlat
ljmp
cmp
ljmp
mov
into
shll
mov
lea
leave
mov
mov
jg
adc
push
jg
arpl
jmp
lret
test
jae
xchg
rcll
sub
xlat
insl
lcall
andl
cmpsl
adc
ds
push
ljmp
mov
test
pop
fsubs
or
cmp
add
arpl
inc
lods
cld
cmp
push
and
mov
xor
cmp
mov
stc
outsl
mov
mov
xchg
cs
xchg
addr16
cli
xor
dec
dec
cmpb
adc
xchg
gs
dec
lods
pop
and
aas
scas
push
fisttpl
cltd
mov
cmp
sub
adc
inc
jo
mov
sub
lock
xor
clc
adc
clc
leave
xor
push
pop
hlt
dec
push
jnp
inc
sti
mull
xchg
mov
jecxz
cmpsl
mov
dec
or
js
cli
dec
pop
je
push
jge
neg
mov
add
fldenv
add
int
jecxz
int3
xor
sub
sub
add
push
ret
jge
ja
stc
pop
fstpt
pop
icebp
mov
cmovb
cwtl
dec
push
in
and
inc
jecxz
into
mov
clc
sub
cs
data16
push
adc
adc
in
jge
fisttpll
fs
bound
nop
dec
and
in
mov
jno
dec
jecxz
adc
lods
test
push
cmp
pop
movsb
adc
leave
repnz
cltd
mov
or
loop
sub
mov
mov
adc
sub
outsb
mov
mov
and
adc
dec
lahf
and
out
insb
push
js
mov
add
popl
mov
ds
aaa
sub
dec
sub
mov
std
sbb
push
jmp
dec
movb
pusha
lea
in
push
aaa
mov
ds
push
outsb
imul
lods
mov
push
in
sub
mov
or
and
push
pusha
popa
mov
addb
adc
cmp
dec
xchg
sub
jge
les
mov
adc
cli
fmull
dec
lcall
flds
mov
jp
cmc
xor
aad
fs
cli
dec
cmpsl
cmp
pop
pushf
add
lds
int
and
fdivrp
imul
adc
mov
addr16
notl
sbb
fmuls
pusha
dec
sub
imul
jp
push
inc
cmpsb
cmpsb
repz
test
pop
mov
pop
ljmp
fistpl
cmpsl
sbbl
mov
int3
cmpsl
jl
sbb
pushf
inc
dec
sub
mov
or
add
rcrl
fsubrs
adc
es
pop
fcompl
out
push
aas
xor
jmp
jmp
insl
arpl
dec
aad
scas
mov
in
lret
stc
mov
shll
dec
mov
pop
adc
pop
stos
repnz
daa
popl
stos
ffreep
filds
aam
mov
cmp
dec
mov
sbb
cltd
fs
pop
jmp
jle
rorb
cmp
scas
or
adc
out
push
cvttps2pi
xor
data16
cld
dec
xor
cmp
xchg
pop
data16
mov
xchg
pop
inc
fwait
xor
mov
lret
lock
popf
aas
cmp
scas
lds
ds
loopne
jecxz
pop
xchg
out
hlt
test
dec
push
xchg
ss
lds
jbe
cwtl
push
sbb
push
dec
popf
pop
adc
adcl
int3
pop
xor
push
fstpt
mov
rcll
jecxz
lea
xor
inc
mov
push
mov
xor
shl
xchg
xchg
aas
out
insl
xchg
scas
push
addl
roll
or
in
pop
jno
dec
lahf
pop
and
jl
in
call
gs
adc
in
repnz
pop
lahf
sub
cmpsl
pop
add
xor
jecxz
push
sbb
fs
clc
int
out
xchg
lods
repnz
mov
dec
dec
outsl
pop
adc
dec
pop
popa
aaa
push
fs
jg
fcmovu
sbb
jbe
jnp
out
sub
andl
aaa
inc
push
vmovntps
jo
fistps
cmp
push
ljmp
cmpsb
xchg
xor
fs
aaa
add
mov
sbb
jg
cmp
or
sub
arpl
and
scas
add
and
sbb
push
adc
sahf
mov
iret
lcall
fs
or
mov
rep
fstps
pop
pop
adc
xor
out
iret
adc
test
dec
into
sbb
pop
push
push
sub
dec
ret
not
into
sbb
sarb
shlb
arpl
rclb
fnsetpm(287
adc
shrb
pusha
call
sbb
ror
sti
and
push
or
cmpsl
lret
push
adc
inc
ret
cmp
mov
shl
xor
call
ret
sub
out
jne
lds
ss
mov
lea
mov
mov
cmpsl
or
scas
dec
rclb
pop
or
loopne
adc
std
mov
add
inc
aam
cwtl
gs
cmc
cmp
or
mov
and
rcrb
out
daa
test
or
ds
les
mov
stos
mov
jns
pop
mov
daa
sti
xchg
mov
mov
adc
test
test
mov
insl
jmp
ret
loope
lea
mov
cmp
cs
mov
shlb
in
push
icebp
pop
movsl
mov
rcrl
sti
dec
movsb
imull
mov
pusha
dec
ja
outsl
fcmovu
pop
ret
and
mov
roll
js
xor
cltd
sbb
or
arpl
or
imul
sub
daa
fstps
aas
sar
sub
mov
pop
push
xchg
mov
xchg
inc
or
add
add
lahf
hlt
loopne
mov
or
mov
outsl
cld
jno
mov
mov
cmp
orb
out
ljmp
repnz
call
pop
das
push
cmp
mov
jae
xchg
push
ljmp
adc
sub
mov
cmp
pop
add
mov
mov
or
jecxz
push
fcmovnbe
cmpsl
add
mov
cmp
pop
out
negb
inc
in
in
cmpsl
cmpsb
add
test
jb
cmpsl
aad
subl
mov
lea
int
int3
fsubrs
adc
jmp
js
xchg
pop
add
aas
dec
sbb
push
les
nop
add
xor
sbb
std
jbe
out
add
pop
sub
cmc
pop
pop
bnd
xchg
cmp
jne
pop
pop
xor
inc
bound
daa
adc
or
or
push
popa
sub
cmp
xor
inc
jmp
dec
lea
cli
repz
decb
fwait
push
adc
roll
pop
cmp
sbb
add
add
movsb
push
mov
js
sti
push
fnstenv
out
mov
out
push
mov
in
adc
mov
jae
cmpsb
mov
stc
mov
dec
lods
jmp
mov
jle
mov
clc
pop
mov
dec
sub
jg
call
adc
add
jb
das
in
inc
das
pushf
xchg
loop
push
push
sub
mov
inc
mov
mov
bound
or
movsb
enter
xor
stc
pop
mov
mov
xor
pop
pop
dec
add
int3
stos
test
sub
nop
and
lods
pop
or
mov
mov
jnp
dec
cmp
xchg
in
popf
cmc
xor
inc
outsb
out
int3
ss
into
cli
push
or
test
mov
lods
in
mov
cmp
pop
fs
inc
lds
mov
sub
mov
dec
pop
pop
fs
div
imul
int3
push
dec
pop
mov
xchg
pop
aas
nop
xor
lds
dec
cmp
ret
test
pop
mov
add
lea
mov
ret
pop
lahf
int
je
enter
push
jbe,pt
sahf
push
iret
or
adc
mov
push
xor
addl
jne
in
mov
pusha
xor
push
xor
pop
or
fstpl
data16
shlb
sbb
push
jbe
sbbb
cmpsl
addr16
aad
mov
mov
mov
xor
cld
jns
xor
pop
scas
sahf
adc
daa
mov
mov
cli
rclb
sti
xchg
and
test
xchg
test
xor
imul
push
int3
sbb
pop
mov
imul
jg
and
cmpsb
stos
xchg
into
sar
cwtl
int
mov
inc
or
lods
aas
not
nop
int
shrb
call
pop
pusha
cld
inc
xchg
pop
lret
add
push
xor
push
rcll
fidivrl
rorb
inc
fidivs
push
ss
xchg
into
mov
sbb
jb
xchg
jo
sti
sbb
mov
mov
lock
imul
fnsave
clc
or
xor
and
out
test
mov
int3
int
inc
mov
daa
xor
push
fdivrl
data16
fmull
mov
shlb
shll
jno
mov
ss
jmp
add
xor
data16
gs
sbb
in
into
cld
pop
test
or
pop
sub
mov
push
mov
icebp
add
cmpsl
cmp
leave
add
xchg
sub
inc
shlb
inc
cmpl
xor
cmpsl
mov
cs
jge,pt
sub
bound
xor
fstps
icebp
jne
pop
js
xchg
ja
or
sub
ljmp
sub
jecxz
sub
dec
out
sbb
std
ja
in
cmpsl
and
sbbb
addr16
adc
jne
xlat
xchg
adc
pop
jp
shlb
in
pushf
lea
cs
inc
pusha
movsl
jb
aas
movsl
pop
jl
push
repz
lea
sbb
cwtl
sarb
sahf
les
mov
lret
sbb
adc
stos
sub
xchg
pusha
sti
mov
cmpsl
shrb
push
add
mov
mov
cmpsb
mov
jae
jl
test
sarl
jns
dec
int3
jns
rorb
fcoml
loope
bound
inc
loope
test
loop
sub
jp
in
movsb
in
insb
popf
addr16
shlb
cmp
push
leave
enter
sub
nop
sub
mov
and
bound
sbb
test
cmp
mov
cs
xor
or
lret
addl
add
outsb
sub
repz
dec
fdivs
cld
mov
not
data16
mov
mov
in
sub
or
pop
fst
adc
lds
roll
rcll
sub
sahf
adc
and
test
or
pushf
mov
push
jno
lds
push
inc
hlt
daa
cmp
sbb
jno
adc
mov
pop
xchg
xor
mov
sbb
sub
pop
add
loop
arpl
xchg
stos
pop
xchg
shlb
cltd
sbb
pop
clc
mov
daa
mov
pop
test
add
xlat
scas
dec
lds
mov
xlat
insb
out
xor
lcall
testl
gs
inc
dec
jne
xor
stc
ret
orl
test
push
das
idivb
adc
sbb
mov
aaa
mov
clc
sbbl
push
arpl
mov
imul
arpl
xchg
jno
cmpsb
sub
mov
stc
sbb
mov
jge
adc
mov
xor
leave
idiv
hlt
mov
in
movl
imul
andb
adc
jmp
add
dec
dec
addb
lock
rclb
outsl
cmpl
pop
push
push
or
push
imul
cs
sahf
cmpsl
xor
pop
xor
dec
in
jne
pop
xchg
mov
pop
inc
dec
cli
test
push
loopne
mov
or
add
loopne
xchg
xchg
pushf
dec
shrb
mov
pop
sbb
inc
lea
sbb
stos
stc
lret
dec
fwait
fwait
jg
pop
push
xchg
sub
pop
mov
adc
aas
pop
stos
ror
lods
cmpsb
mov
xchg
and
pop
adc
rolb
mov
frstor
jns
xchg
scas
cmp
sbb
mov
jg
sahf
push
sub
fmul
inc
call
inc
mov
push
jmp
adc
stos
lcall
dec
movsb
mov
pop
addb
sub
mov
pop
sbb
outsl
loop
call
sbb
aas
pushf
fs
enter
movb
fildll
fmuls
es
jg
ljmp
hlt
pop
lea
inc
loope
aad
fnsave
mov
mov
pop
test
pusha
sub
aas
dec
pop
jno
pop
mov
xchg
sub
mov
mov
daa
imul
pusha
mov
sub
int
cmp
mov
pop
fmuls
inc
add
arpl
data16
idivb
arpl
jecxz
notb
jnp
mov
sti
cmpsl
idiv
mov
pusha
popa
or
dec
scas
clc
pushf
or
movsl
sbb
sub
or
aas
movsb
int3
ret
daa
push
mov
aad
nopl
cli
mov
movsb
popf
inc
jns
xchg
xchg
call
xchg
in
fldenv
rorl
xlat
pop
xchg
stos
pop
xchg
dec
push
std
ds
popa
icebp
and
pop
jae
lods
imul
mov
pcmpeqb
cli
lock
xchg
movsb
imul
jp
out
imul
jl
inc
adc
lcall
mov
push
jo
sti
mov
lds
cmp
push
xchg
test
das
jmp
lods
adc
shlb
dec
es
out
mov
test
mov
cmp
aam
imul
and
or
dec
adc
lods
inc
mov
pop
enter
sahf
dec
shrl
mov
jbe
clc
jbe
and
and
xchg
stos
cmp
sub
je
pusha
dec
icebp
cmp
mov
pop
dec
adc
mov
das
jmp
aad
pushf
and
daa
es
and
stos
ret
sub
pop
and
test
push
stos
jmp
inc
lods
test
mov
sub
aaa
dec
adc
mov
inc
out
dec
jb
test
adc
push
push
push
shll
cmc
popf
imul
daa
add
mov
dec
rcr
jmp
mov
or
xor
rcrl
mov
dec
jo
sbb
jno
or
test
pop
lds
sti
pop
push
stc
ds
xor
inc
lods
outsl
sbb
loop
sti
imul
vsubsd
lret
shll
stc
sub
add
ret
andb
jle
pusha
mov
outsl
sbb
mov
lock
sbb
adc
and
pop
shlb
dec
shll
iret
dec
hlt
jmp
shrb
aam
bound
jnp
sbb
pushf
clc
cli
push
add
ret
imul
ffreep
push
movsl
movsb
push
into
inc
xchg
icebp
xor
adc
dec
mov
ds
inc
jmp
addr16
jbe
roll
outsb
sahf
cli
cli
mov
testl
xchg
mov
ss
push
repnz
lahf
in
ss
sub
push
ret
and
push
mov
daa
pop
mov
xor
loop
nop
ret
lods
out
mov
lret
adcb
cli
sub
jae
sbb
jle
dec
divl
pop
sub
test
adc
insl
inc
out
jnp
sbb
jnp
xchg
or
xchg
add
push
adc
out
cs
sahf
jmp
js
inc
or
add
sbb
jb
jl
mov
test
xchg
int3
mov
ja
mov
loop
pusha
fld
jb
or
mov
add
scas
insb
mov
sbb
inc
lcall
jmp
sbb
mov
clc
lods
inc
mov
dec
out
fcomi
fldt
gs
sahf
lock
jmp
aad
daa
and
dec
mov
jnp
and
addr16
outsl
jbe
lret
frstor
aaa
push
push
test
test
loop
mov
sbb
jp
sub
xchg
imul
pop
aas
inc
push
popa
mov
cmpsb
in
pop
sub
stos
out
mov
jge
dec
cmpl
ss
xor
sbb
inc
inc
xor
push
and
sti
sti
mov
cld
loopne
sub
mov
outsb
sbb
add
scas
popf
rorl
cs
inc
xchg
cltd
mov
loop
call
daa
mov
fsubr
ret
lods
add
pop
aas
pushf
mov
sub
push
jmp
jbe,pt
sarl
test
out
lret
inc
clc
sub
dec
cli
pop
cmp
imull
mov
and
loopne
in
rcr
cmp
jmp
insb
jp
sti
add
movsl
lods
mov
cmp
cmp
mov
stos
and
ja
arpl
ret
icebp
hlt
push
aaa
adc
test
outsl
adc
test
xor
mov
in
xchg
call
lcall
xor
sahf
scas
arpl
or
mov
sti
xchg
lods
test
decb
push
inc
fsubrp
std
push
cmp
sbb
mov
push
push
movsb
cmpsl
jmp
mov
stc
iret
mov
pushf
xchg
fnstcw
mov
push
adc
sbb
mov
pop
cmp
mov
repz
je
bound
xor
movsl
out
jbe
push
cmp
xchg
sub
adc
mov
rolb
ret
js
popa
stc
mov
insl
push
das
add
mov
enter
fdivrp
adc
inc
fisttps
jecxz
test
mov
jg
iret
inc
sub
sbb
sub
clc
xor
xorl
mov
loopne
std
sbb
imul
ja
divb
add
and
fwait
daa
lahf
and
mov
inc
ret
cld
push
xchg
mov
sti
bound
ret
sbb
or
or
sub
sbb
int
jp
data16
fiadds
cs
mov
dec
je
inc
mov
adc
rcrb
pushl
clc
xchg
clc
fcomp
cmp
jo
inc
sub
xor
fs
in
scas
lods
and
into
mov
sub
mov
cmp
inc
jne
rol
rcrl
cmpsl
sbb
lds
test
insl
mov
xor
pop
push
aaa
rcll
stc
lahf
and
ret
or
dec
pop
dec
lea
popa
mov
push
pop
mov
punpckhwd
aad
pop
sub
and
data16
mov
jno
cwtl
scas
mov
das
leave
sub
and
inc
stos
int
mov
popf
jp
out
dec
dec
add
mov
cmp
push
rclb
mov
fiadds
mov
push
or
in
pop
movsl
xor
movsb
icebp
xchg
int3
shrb
cmc
adc
out
and
flds
leave
mov
insl
lock
std
push
pop
lock
xor
hlt
ja
xor
loope
pusha
js
movsb
jnp
cmp
cltd
fistpl
sbbl
ljmp
pop
and
orl
add
add
jl
sahf
stc
jae
inc
mov
mov
pop
push
push
fdivl
jmp
faddl
pop
pop
mov
orb
xor
pop
mov
cld
xor
mov
aad
push
push
jo
mov
dec
or
or
inc
test
movsl
and
aas
jns
dec
ja
in
int
mov
or
in
jl
mov
add
xor
xchg
cmp
or
lds
int
nop
and
and
fs
jle
xchg
clc
and
pop
add
mov
fldcw
scas
jne
jnp
sbb
shlb
xchg
pop
pop
add
xchg
push
adc
push
push
in
xchg
pop
sti
and
fisubl
jecxz
les
mov
mov
lods
test
mov
xor
movsb
xchg
jnp
cmpsb
xchg
nop
fcomps
push
push
mov
dec
adc
shll
push
jno
lcall
imul
out
out
and
lret
mov
lea
enter
adc
xchg
rclb
pop
ja
mov
aaa
jbe
push
jl
sbb
adc
mov
push
fnstenv
int3
or
mov
jno
add
loop
jmp
push
xor
mov
das
loopne
out
jg
lret
cmp
cli
mov
adc
movsb
mov
pop
in
pop
loopne
lahf
inc
jb
fwait
mov
in
aaa
fs
jmp
loope
movb
pop
xor
lds
push
push
cmc
push
or
mov
ds
push
sub
mov
aad
mov
sti
push
cld
pop
sbb
insb
nop
jno
in
sbb
lods
stc
lcall
out
jecxz
stos
xchg
mov
into
cmpsb
add
ljmp
dec
xor
cmp
dec
rclb
xor
jge
fnstcw
mulb
jbe
ret
inc
push
fmuls
pop
scas
add
mov
dec
adc
xchg
data16
and
jns
repz
in
mov
sbb
xchg
or
fists
push
add
fisttpl
add
jb
gs
mov
cld
mov
or
push
or
addb
scas
ljmp
xchg
sarb
cmc
push
cmc
cmp
das
ss
loop
in
mov
test
add
dec
pop
sti
inc
lret
inc
movhps
sub
adc
or
pop
sahf
or
mov
mov
push
in
pop
int
stos
pop
inc
stos
dec
movsb
mull
mov
mov
inc
andl
push
fwait
adc
xchg
cmp
repz
sbb
xchg
xlat
mov
popa
mov
aas
iret
sbb
fwait
in
push
mov
fwait
cmpsl
lea
mov
or
add
loopne
push
adc
xchg
adc
pop
sbbb
in
aaa
mov
add
loope
ds
mov
add
mov
mov
mov
lods
ret
es
dec
sti
xor
loopne
and
addb
pop
movsl
scas
shr
leave
push
fisttpll
dec
push
ret
arpl
mov
dec
scas
mov
add
jno
mov
add
or
jl
mov
imul
mov
mov
inc
js
adc
ljmp
adc
sahf
frstor
and
test
pop
pusha
out
aam
stos
arpl
adc
xchg
aam
cld
cmp
and
insb
push
loope
jge
fisubrl
cmp
stc
imul
fisubrs
insl
loope
mov
aad
jmp
sub
cmpsb
sub
ds
mov
xchg
and
icebp
nop
mov
inc
mov
pushf
push
xchg
add
mov
lods
mov
mov
outsl
mov
lds
mov
add
inc
pop
adc
cmp
inc
out
lret
push
shll
shrb
fstpt
sbb
mov
lea
outsl
es
mov
fisubrl
loopne
aas
movsl
xchg
jns
out
shrb
pop
push
leave
dec
jbe
mov
out
dec
setp
sub
pop
push
cmp
pop
dec
add
add
je
add
mov
fcomps
int
cmp
loop
and
leave
dec
aad
adc
and
lret
add
out
and
mov
call
jge
sub
filds
mov
mov
and
int
lea
pop
xchg
mov
lretw
and
add
popa
jo
pop
aad
push
leave
mov
ljmp
xchg
mov
das
popl
xchg
pop
fistl
outsl
int3
xchg
aas
jno
push
fnstsw
sbb
dec
and
push
pusha
mov
cltd
cmp
jecxz
push
les
mov
popf
or
pushf
icebp
push
xchg
cmp
pop
out
int
and
ljmp
int
jp
mov
repz
aas
cmp
or
test
fiaddl
movsl
cltd
out
dec
lea
fwait
loop
jmp
arpl
out
shlb
or
sub
bound
sbb
loopne
mov
jne
push
push
jl
test
jp
in
pusha
aas
idiv
inc
xor
mov
adc
add
push
dec
pop
jo
push
add
out
xchg
lret
inc
rclb
leave
in
push
inc
lahf
pop
mov
shll
insb
les
dec
mov
cld
cmp
call
cmp
jb
dec
into
pushf
jge
sbb
loopne
or
dec
dec
pop
sbb
lea
decb
cmpb
nop
fs
push
rcr
insb
mov
jae
dec
test
filds
fs
les
and
push
ss
pop
mov
lods
inc
fcos
mov
cmc
outsl
mov
xchg
sbb
xchg
pop
adc
jne
jmp
cmc
fstpl
jmp
aam
inc
test
adcl
icebp
xchg
stos
out
lods
jmp
loop
mul
cmp
mov
sbb
adc
call
push
push
jecxz
je
movsb
mov
in
arpl
lcall
mov
xor
lcall
or
pop
lret
mov
xor
and
xchg
addb
and
jb
andb
push
xor
cmp
add
cmc
xor
nop
push
mov
shll
and
push
imul
or
xor
jno
push
mov
xor
movsb
dec
js
loop
iret
rcl
nop
stos
cmp
gs
mov
sub
mov
adc
push
adc
testb
mov
dec
mov
in
fiadds
lds
push
cmc
xchg
jl
mov
subl
movsb
mov
jmp
push
push
into
orl
jno
inc
clc
mov
ret
les
inc
inc
faddp
insl
imul
ja
es
dec
nop
dec
out
push
mov
lret
xor
xor
gs
mov
push
push
fwait
xor
cld
adc
jmp
mov
bound
push
inc
inc
fidivrs
iret
addr16
xchg
fwait
aaa
mov
cmpl
pop
mov
mov
adc
push
pop
or
xchg
pusha
adc
push
and
das
nop
jbe
in
xchg
cmp
bound
icebp
pop
inc
mov
xor
mov
nop
dec
pop
jl
or
dec
add
push
stos
daa
sub
push
in
lret
cmc
jae
lea
scas
iret
ds
cmp
popf
pop
inc
xor
and
mov
pop
gs
js
mov
mov
jne
out
rep
sbbb
pop
and
clc
add
cmpsb
popa
mov
jmp
jl
les
xor
fsubrs
test
les
fstpt
xchg
pushf
stos
test
test
mov
in
cmc
in
icebp
les
cmp
mull
cmpsl
push
stos
mov
mov
imul
jnp
in
xor
pop
pushl
and
fwait
mov
push
scas
sub
pop
lss
pusha
and
jno
jle
push
mov
mov
lea
add
adcl
out
ds
adc
dec
rolb
sbb
push
ja
push
mov
sti
popw
adc
lret
xor
lret
sbb
clc
roll
add
xchg
xchg
shlb
adc
mov
shld
xchg
inc
mov
sub
jp
ljmp
add
inc
push
pop
insl
sub
scas
in
adc
pop
add
out
mov
iret
xchg
dec
or
daa
jle
add
js
dec
and
mov
cld
in
imul
addr16
je
and
dec
inc
mov
sbb
sti
or
pop
or
add
ljmp
pop
ljmp
jne,pn
sub
pop
and
orl
jge
test
ret
ja
mov
jne
das
enter
dec
mov
dec
xor
stc
mov
lea
int3
xchg
dec
pop
dec
push
cmp
stc
adc
mov
mov
lock
insb
popf
loope
popa
ret
and
movsb
sbbb
lds
jecxz
mov
int3
xor
mov
xor
mov
dec
pop
cmp
movsl
pushf
es
nop
or
mov
push
and
inc
xchg
and
inc
lret
mov
push
pop
fsubl
imul
mov
add
mov
in
je
stc
mov
call
push
cmc
in
or
mov
inc
dec
int3
mov
je
sub
cli
mov
lret
insl
rorl
adc
jg
xor
add
clc
jmp
jnp
pop
popa
or
repz
ja
dec
mov
xchg
jb
int
push
or
push
sarb
aad
sbb
imul
out
mov
test
xor
xchg
lret
xor
ret
mov
scas
and
movzbl
negl
cmp
push
adc
dec
mov
sarb
xor
rcl
or
andl
andl
jb
loopne
imul
jo
les
push
add
adc
dec
push
loopne
mov
sub
xchg
and
xor
into
cmp
data16
cltd
xchg
xchg
call
jbe
jl
mov
test
push
push
mov
fisubrs
sti
jg
mov
shrl
sbbl
sub
jecxz
mov
lahf
dec
lea
sub
xchg
out
daa
cmpl
lret
and
imul
cmc
add
hlt
lock
ds
inc
lods
enter
in
aaa
fidivs
jle
mov
scas
push
out
or
sub
dec
push
adc
aaa
add
xchg
jecxz
int
sbb
sub
in
mov
stos
mov
xor
add
jo
test
push
in
aad
test
int3
fidivs
jae
in
fmul
pop
mov
fcomps
inc
mov
cs
adc
in
mov
and
pop
and
cs
or
scas
pop
or
push
add
rcrl
pop
mov
mov
aam
mov
dec
in
test
loopne
lahf
in
outsb
repz
mov
pop
mov
xchg
pop
inc
shufps
lret
test
mov
test
scas
lds
scas
hlt
popa
data16
js
orb
jmp
sbb
xlat
pusha
jb,pt
jno
xor
pop
addr16
ja
xchg
loop
sbb
pop
ret
sbb
in
xor
shrl
xchg
es
clc
cmp
push
xchg
not
adc
dec
push
cmp
repnz
aad
xchg
daa
pop
push
gs
test
scas
mov
xor
sbb
add
mull
xor
stos
aad
cmpsl
cld
sbb
call
dec
or
sti
lea
stos
add
outsl
sbb
stos
sbb
inc
not
pop
out
cli
scas
sub
push
clc
aam
xchg
movsl
xor
shl
xchg
cmp
push
inc
outsb
loopne
and
xor
xlat
addr16
ljmp
mov
mov
bound
in
movsl
ja
mov
pop
push
mov
addb
pop
call
popf
push
js
and
cmpsb
mov
in
es
jmp
daa
add
pop
xchg
pop
or
jp
sbb
xor
call
mov
mov
test
push
test
fs
add
pop
stc
jb
clc
in
push
dec
cltd
jle
ret
push
in
es
cmp
adc
imul
rcrb
jmp
cmc
lods
sbb
xor
jecxz
movsb
sub
stc
jmp
lea
mov
push
xor
loop
pop
std
jo
and
xorl
dec
mov
pop
addr16
and
loopne
xchg
mov
or
fists
pop
outsb
mov
xchg
insb
jl
cmp
dec
pop
push
in
pop
fucom
scas
bound
cwtl
in
scas
cwtl
aaa
fidivs
inc
adc
xor
test
inc
and
ret
sti
mov
add
fsubrl
int
fdivl
cmp
test
pop
mov
cmp
sbb
sub
sub
push
xchg
xchg
push
out
daa
mov
fwait
inc
mov
add
adc
xor
mov
sub
pop
shlb
test
pop
hlt
sub
hlt
movsl
sbb
addr16
mov
mov
sahf
call
add
pop
xchg
inc
outsb
lock
mov
loope
jae
or
sbb
cltd
lods
mov
iret
stc
mov
sbb
or
call
outsb
xchg
xchg
push
xchg
cmp
xchg
in
lds
stc
dec
mov
cld
xor
not
movsb
test
cmp
lcall
xchg
fsubrl
les
mov
clc
loopne
and
sahf
jge
inc
es
js
bnd
movsl
outsl
cltd
aad
inc
outsb
daa
mov
pop
out
fs
fcmovnbe
cs
imul
arpl
jp
aas
cmpsb
les
lret
icebp
and
push
leave
and
scas
push
sti
in
xchg
push
aam
dec
mov
inc
out
repz
add
test
mov
scas
cld
pop
in
sub
add
es
push
fs
adc
push
or
lret
adc
push
ror
jecxz
imul
inc
repnz
pop
jo
jmp
js
jae
lds
push
jo
and
jnp
out
ljmp
mov
jg
pop
mov
jns
xchg
xor
push
pop
cmpsl
sbb
dec
xor
sbb
push
cmp
pop
dec
mov
ror
decb
iret
adc
or
rcr
insl
xor
and
in
xchg
and
popf
insl
dec
mov
jns
xchg
js,pn
into
aaa
cmpsl
les
add
das
fidivrs
xchg
mov
sbb
cltd
in
cmp
jnp
lods
mov
inc
dec
fisubrl
iret
rorl
fwait
incb
mov
xchg
jbe
inc
pop
mov
and
or
lahf
cmpsb
stc
jo
pop
inc
je
inc
sti
mov
xchg
decb
out
sub
mov
loop
test
xchg
ss
lods
fstps
push
arpl
mov
or
inc
data16
stc
push
fstl
stos
inc
xchg
and
jle
inc
test
stc
icebp
into
push
xorb
mov
aas
imul
xchg
xchg
scas
les
shlb
dec
xchg
test
adcb
lock
cmp
fdivl
push
jge
scas
pop
xchg
jecxz
xchg
sub
lahf
xchg
adc
mov
dec
leave
test
cltd
paddb
mov
inc
mov
lock
pop
sti
es
lret
sub
xchg
inc
pminub
loop
pop
stc
hlt
push
jae
fbstp
mov
xor
jnp
jae
lods
jl
data16
into
arpl
sti
xchg
adc
stos
inc
pop
ficompl
outsb
push
aad
xor
outsb
int3
imul
cmp
jmp
push
or
pop
test
and
xchg
cmc
sbbb
ret
mov
cmp
out
dec
xorb
adc
outsl
and
lds
sbb
add
jo
loope
add
jmp
jo
stos
mov
pop
hlt
mov
mov
leave
adc
adc
xchg
repnz
mov
jecxz
imul
clc
incb
imul
xor
xchg
insb
out
inc
add
scas
jmp
adc
mov
push
test
pusha
inc
in
mov
lods
aam
cmc
mov
push
adc
inc
insb
and
mov
xlat
mov
mov
fidivrl
std
and
or
movsb
in
inc
cmp
fstpl
jp
pop
xor
inc
loopne
leave
jnp
ds
ljmp
decb
or
jle
mov
adc
xlat
xchg
mov
mov
scas
adcl
pop
adc
push
add
outsl
aas
sub
movb
xchg
mov
mov
pop
mov
add
lcall
sub
sti
jl
jbe
lock
xor
mov
leave
in
fcmovne
or
mov
scas
shll
test
and
mov
addr16
jmp
sub
pop
jp,pn
shl
clc
lods
fisttpl
cwtl
sbb
add
roll
or
push
mov
jmp
adc
out
add
inc
shlb
pop
ljmp
jbe
add
pop
insl
or
push
fsts
fdivrl
mov
loopne
mov
mov
arpl
andl
div
mov
ret
dec
lcall
scas
std
add
arpl
add
icebp
pop
push
es
clc
rcll
xor
mov
push
mov
jb
cs
push
push
repz
jns
adc
mov
rcrb
mov
push
pop
and
mov
es
dec
xor
cmp
adc
mov
xchg
enter
insb
lea
xchg
cmp
fbld
loope
pop
inc
push
aad
imul
test
roll
dec
daa
addr16
mov
add
dec
push
inc
xor
aaa
and
ja
jnp
repnz
push
mov
pop
pop
dec
mov
push
pushf
js
sbb
and
jle
pop
xor
jle
lea
loopne
push
sub
mov
popa
pop
mov
cmp
addr16
clc
lcall
mov
cmpsl
adc
loopne
adc
mov
dec
mov
xor
and
test
pop
push
push
lock
lret
jns
adc
and
adc
arpl
pop
lods
pop
or
das
jmp
add
adcl
int3
insb
ficompl
and
lcall
jmp
mov
mov
cmp
dec
pop
mov
sub
push
fsubrl
mov
add
push
mov
mul
pop
pop
sub
dec
sub
fwait
cmp
mov
cmp
cwtl
push
pop
sub
pop
or
cmp
push
jne
sbbb
inc
adc
xor
shr
ljmp
add
dec
daa
jne
stos
xor
push
mov
mov
cli
fs
ljmp
movsb
inc
mov
jmp
mov
push
inc
xchg
mov
adc
push
scas
add
sbb
outsb
sti
mov
jp
mov
ss
inc
adc
cwtl
push
sub
jecxz
ds
xor
ret
cmp
adc
adc
sbb
mov
sub
mov
mull
cs
out
jmp
push
jo
in
cmc
ja
xchg
jecxz
imulb
xchg
scas
or
loopne
aad
in
pop
out
aad
sub
stc
mov
data16
xor
sbbb
scas
xlat
jne
jl
jecxz
rorb
xchg
or
cmp
iret
mov
stc
test
jmp
stc
cmp
inc
jg
in
lods
push
insl
lcall
mov
sbb
push
cmp
rolb
arpl
xchg
in
adc
cmp
aad
das
add
pop
add
sbb
popa
mov
inc
push
in
xchg
sub
sbb
or
lret
inc
cs
jle
jl
xchg
mov
les
cwtl
add
pushf
mov
adcb
mov
out
pusha
daa
popf
loop
inc
fwait
push
icebp
repz
je
in
sarl
add
out
inc
push
leave
cmpsb
sub
mov
arpl
and
xchg
push
call
dec
dec
sbb
mov
loop
mov
pop
imul
adc
mov
xchg
outsl
pop
scas
rcl
fidivl
and
loop
aad
clc
mov
imul
jne
mov
xor
jg
movsb
ret
pop
iret
cmp
divb
adc
pop
nop
jne
xor
push
jp
sub
xchg
push
mov
repz
dec
push
jae
arpl
jg
cmp
movsl
stos
rcrb
add
pop
sbb
dec
fisubrs
mov
push
and
in
hlt
imull
mov
shrb
movsl
popa
nop
push
movsl
call
cltd
outsb
cld
adc
fists
mov
shlb
pop
push
add
cmpsl
aad
icebp
xor
sub
loope
pop
pushf
call
inc
fnstsw
mov
lea
je
or
cmc
cmpsb
adc
push
pop
add
test
mov
pcmpeqb
shrb
lock
jle
xor
and
aaa
xchg
cmp
add
adc
xchg
dec
sbb
mov
test
ss
pcmpeqd
mov
pop
cli
sub
inc
dec
jb
dec
outsb
mov
dec
leave
and
or
or
inc
fldln2
mov
sub
je
mov
xor
or
add
adc
and
or
add
mov
pushf
cmpsl
xchg
dec
iret
cli
repz
aad
pop
mov
fnstenv
rcll
jo
lea
cmp
mov
pop
xchg
ss
mov
push
jl
jge
imul
lcall
and
test
jne
cli
stos
jg
jp
add
cmp
mov
sbb
adc
fidivrs
and
xor
pusha
sub
test
mov
outsb
cli
bound
mov
cld
arpl
push
jne
add
cwtl
jae
imul
mov
inc
mov
nop
mov
xor
and
pop
add
cmp
mov
cmpsb
xchg
cmpsl
incb
mov
addl
out
or
mov
dec
adc
push
inc
mov
dec
add
mov
les
icebp
xor
fwait
xor
push
iret
lods
popa
insb
dec
lcall
sub
jmp
sbb
gs
call
xchg
ss
pop
inc
add
gs
ds
mov
aas
packuswb
jb
cmp
or
cmpsl
push
sbb
iret
jl
outsl
jne
mov
sbb
jp
mov
pop
adc
cmc
in
call
or
imul
or
inc
pop
stos
je
aas
dec
sbb
sti
xlat
xchg
push
data16
and
fcomp
push
dec
pop
sbb
fcomps
mov
mov
dec
mov
xchg
int3
dec
sub
mov
data16
cmp
add
push
mov
and
ja
mov
jg
mov
inc
outsl
shll
pop
sbb
pushf
aaa
xchg
jmp
pop
and
or
jmp
jnp
pop
int3
ds
loop
call
inc
sbb
mov
repz
ficoms
js
xor
push
scas
or
fs
mov
cli
jb
sbb
dec
push
aad
inc
adc
add
call
in
mov
in
shrb
imul
loope
rcrb
inc
out
icebp
mov
pop
pop
cmp
adc
push
xchg
scas
xor
arpl
mov
inc
mov
pop
mov
adc
bound
sub
int3
lea
sub
mov
or
mov
xchg
lds
cwtl
out
aam
repnz
imul
add
sbb
jle
mov
enter
negb
cwtl
test
jg
push
push
mov
push
xchg
dec
inc
jne
sub
out
lods
xchg
inc
imulb
test
sbb
lods
jl
sbb
pop
sahf
sbb
das
mov
aam
mov
mov
cmp
sbb
add
fdivp
sahf
int3
shrb
sbb
sub
data16
sub
ds
ss
inc
mov
int
jnp
es
outsb
sarb
or
cmp
mov
aaa
shrl
cwtl
popf
repz
inc
aam
mov
shll
mov
push
lds
pusha
cmp
fwait
fdivrl
aam
cmp
push
popa
xor
ljmp
ja
adc
mov
test
cli
bound
or
cmp
mov
fwait
daa
aas
sub
mov
add
lcall
jmp
mov
out
jmp
jns
dec
into
pop
loope
insb
ror
jae
lods
add
in
insb
lahf
adc
push
sub
push
out
enter
or
cmp
mov
test
cmp
test
loop
push
sbb
pop
hlt
push
fwait
repnz
loope
cld
imul
gs
jge
stos
out
xchg
mov
or
cmp
aas
push
flds
mov
outsb
push
add
ss
out
xor
pop
sbb
xchg
push
pop
pop
sbb
test
idiv
insl
in
cld
jnp
add
mov
mov
and
sbb
test
sbb
and
jge
sbb
sbb
mov
push
leave
inc
inc
jmp
jb
ja
jl
push
dec
mov
xchg
add
lods
jp
push
mov
jnp
add
mov
xor
rol
das
push
sbb
mov
cmpsb
mov
lret
and
add
cld
in
xor
mov
out
pusha
cmp
sub
sbb
jbe
add
sbb
filds
jb
xchg
inc
inc
mov
aaa
in
mov
int3
insl
mov
xchg
lds
cmp
test
and
adc
test
add
ret
sti
ss
incb
pop
xor
insl
pop
jns
jp
cmpsl
popf
sbb
testb
pushf
xor
lret
addb
sub
les
xchg
fistpll
arpl
into
hlt
lea
push
xchg
nop
add
jae
cmp
cltd
jnp
into
push
cli
inc
lret
les
push
xchg
cmp
add
pop
test
aaa
aam
lods
jecxz
jge
mov
rorb
lcall
mov
mov
add
jp
out
int
imul
pop
mov
xor
sub
mov
adc
enter
dec
or
push
addl
rcll
mov
rclb
xchg
cmp
jg
jg
push
mov
ret
pop
push
cmpsb
dec
lock
fstpl
mov
scas
mov
test
or
test
cli
test
imul
ja
jl
cmpsl
push
mov
iret
mov
add
push
in
ds
rclb
pop
roll
adc
loop
sbb
adc
pusha
adcl
lcall
in
mov
adc
jo
mov
jmp
insb
xchg
fdivr
xlat
sti
xchg
insb
fisttps
inc
inc
mov
mov
into
xchg
pop
ja
and
daa
fsubrs
cmp
jg
stos
int
cli
hlt
mov
lret
lds
std
pusha
cs
fwait
mov
hlt
mov
lahf
leave
xchg
xchg
push
xor
jno
push
dec
cmp
or
jecxz
std
mov
iret
push
popa
or
sbb
adc
shlb
mov
pop
xchg
decl
and
mov
repz
dec
mov
insl
movb
jmp
mov
int
lock
or
push
psubq
push
popf
adc
movsl
nop
dec
pushf
and
test
int3
into
test
or
xchg
addr16
mov
inc
jg
loop
ljmp
outsl
into
nop
scas
pop
add
sub
adc
mov
cmp
cmp
sub
dec
and
push
jae
movsb
imul
out
movl
sub
or
mov
xlat
movsl
jg
idivb
nop
cmp
test
pop
xchg
out
xor
pop
xchg
rorb
stos
test
jg
bound
and
icebp
sahf
sub
adc
push
xchg
in
outsb
stos
pop
jo
std
dec
push
pop
sarl
inc
mov
lds
scas
ret
xor
jb
hlt
out
pop
push
int3
divb
and
rcll
jae
and
mov
jp
jnp
into
jle
popf
int3
sub
add
mov
jo
mov
xchg
rcrb
inc
popf
aad
leave
adc
outsl
mov
and
aaa
enter
push
and
sbb
repnz
cmp
cmp
mov
hlt
inc
test
out
test
shrb
mov
sahf
mov
push
scas
mov
mov
and
out
test
cmc
call
push
jo
outsl
iret
xor
ss
int3
inc
dec
clc
lret
sub
and
sbb
sbb
out
int3
cmpsb
cmc
lret
ret
movsl
push
add
cmp
ss
sub
orl
addr16
mov
cmpsl
xor
and
movsb
push
jb
orb
pushf
rcrl
jecxz
out
stc
cmpsl
addb
cwtl
out
je
pop
adc
mov
enter
xor
ja
mov
cmpsb
imul
xchg
mov
testl
ficoml
je
fwait
cmpsl
mov
out
cmc
fidivl
dec
sti
das
enter
or
imul
xchg
or
gs
orl
iret
in
mov
push
jge
fwait
push
or
push
gs
stc
inc
and
jnp
sbb
mov
mov
fcmovb
repnz
or
push
orb
lahf
sti
adc
sbb
dec
xchg
div
out
loop
inc
xor
leave
cmp
mov
notl
loope
insl
xor
add
leave
in
jecxz
mov
bound
sub
mov
lret
gs
js
or
scas
pop
jge
js
cmpsb
loopne
cmp
push
jb
repnz
adc
lods
mov
test
pop
jns
xchg
or
cld
call
addb
shl
shll
pop
scas
imul
ret
xchg
mov
aad
std
inc
addr16
jmp
rol
aas
mov
mov
neg
xchg
jo
test
sarb
lcall
popa
mov
pop
dec
fisubrs
jp
mov
imul
rep
cmp
add
pop
adc
cmp
jno
js
dec
inc
lds
das
ret
or
arpl
pop
cmp
scas
inc
cmc
stc
mov
add
mov
push
inc
dec
lods
jne
cmpl
rcll
shr
pop
cmc
push
pusha
push
std
lcall
xchg
add
add
aaa
aas
orb
mov
ret
idivb
stos
lds
pop
or
cs
data16
sbb
lahf
xchg
jno
or
cmp
gs
adc
lods
pop
insb
scas
jge
arpl
inc
dec
and
movsb
insb
mov
out
mov
inc
jns
adc
hlt
sbb
sub
cmpl
or
jg
adc
mov
in
pop
frstor
ret
aaa
adc
int3
sbb
jmp
pop
sub
scas
jmp
pop
stos
stos
sahf
push
jbe
pop
mov
inc
movsb
mov
rcr
jmp
xor
cmp
add
adc
jg
fists
std
cmpsl
push
mov
sbb
ret
mov
mov
inc
sub
xor
mov
inc
xchg
pop
nop/reserved
mov
das
sbb
add
xor
push
in
jno
mov
pop
out
sarl
push
pushf
mov
or
xor
das
fucomp
insb
adcb
inc
cltd
sbb
mov
dec
push
jl
daa
cmp
aam
dec
iret
jg
repnz
jae
mov
adc
aam
or
mov
scas
cs
sarl
and
mov
xor
mov
data16
lcall
lock
test
add
sub
xorl
js
xor
sahf
jne
popl
xchg
adc
loopne
out
pop
xor
movsl
or
inc
ret
mov
mov
jp
sub
pop
mov
jl
ljmp
add
lcall
lcall
in
enter
sbb
xchg
xor
pop
adc
xor
int
xor
roll
in
ja
xor
sahf
mov
pop
or
enter
mov
enter
and
or
lret
sub
mov
sub
lret
push
decl
dec
adc
sbb
nop
mov
mov
dec
divl
pusha
xlat
jp
call
sbb
mov
mov
imul
or
fwait
mov
dec
hlt
dec
cmp
mov
cmpl
or
or
xchg
mov
pop
je
negb
xchg
int3
push
or
sub
insl
nop
imul
aad
pop
lods
xchg
stos
mov
push
adcl
inc
int3
xchg
fsts
inc
pop
leave
js
mov
fbstp
mulb
dec
sbbl
hlt
mov
dec
cld
test
out
ret
and
xchg
sub
mov
cmp
mov
sahf
push
test
or
adc
jp
fnstcw
adc
mov
jl
jge
fldcw
jo
sbb
jmp
sub
cltd
cltd
shll
lea
and
loopne
in
jae
cmp
addb
mov
xchg
xchg
sub
std
je
and
jmp
mov
iret
roll
daa
jnp
test
std
mov
aas
test
repnz
jns
mov
mov
xchg
fbld
mov
pop
cltd
ret
scas
xchg
adc
cmp
fs
test
push
cmp
xor
test
jbe
push
mov
lods
adc
push
dec
adc
mov
stos
sbb
mov
mov
mov
add
pop
mov
dec
pop
mov
cmpsb
out
aaa
jle
xchg
mov
test
ss
dec
les
cmp
mov
outsl
pop
xchg
lods
mov
loopne
push
push
testb
enter
bnd
ljmp
sbb
daa
mov
stc
sub
fs
call
sub
xchg
iret
sbb
lahf
je
icebp
sub
in
sbb
orl
sbb
nop
and
xor
push
lods
inc
or
mov
arpl
leave
mov
iret
fistps
rolb
xor
jmp
and
inc
xor
adc
lods
out
test
add
popf
xor
sub
outsl
adc
pop
lcall
push
ret
mov
fidivrl
pcmpgtw
jecxz
dec
test
sbb
loope
pop
dec
test
mov
repnz
xor
xchg
mov
adc
imul
dec
xor
jge
lods
cld
pop
enter
dec
jno
adc
iret
hlt
repz
ficoml
and
lcall
xchg
pop
mov
fwait
loope
jecxz
sub
cmp
jnp
mov
jae
adc
or
push
loop
mov
lahf
inc
movsl
rclb
jae
nop
add
in
xor
adc
jo
movsl
and
lods
aas
fwait
aas
xchg
shll
xor
cli
test
clc
sbbl
xchg
jmp
sahf
sbbl
dec
and
fs
inc
push
leave
xor
pusha
ret
cltd
mov
fs
and
pop
dec
lods
pop
das
fdivrl
inc
jmp
push
xor
call
movsl
mov
or
pop
dec
mov
inc
adc
mov
arpl
outsl
mov
icebp
cmp
or
cmp
xchg
clc
mov
cmp
lea
add
mov
iret
in
xor
lcall
jge
lds
std
and
call
dec
adc
into
arpl
push
ja
sbb
jmp
sbb
jne
push
test
lods
mov
stc
repnz
and
push
int3
addr16
jecxz
sub
dec
add
lret
mov
inc
mov
cmc
xor
or
lock
lock
shrl
js
out
and
popa
and
pop
popf
jmp
shrb
and
xchg
negb
jae
fmuls
mov
mov
pop
jno
je
jmp
mulb
jnp
xchg
add
mov
pusha
js
add
rol
cli
sbbl
jmp
jp
mov
out
mov
jnp
push
sbb
scas
repnz
jp
push
add
in
stc
hlt
iret
add
sub
lds
jecxz
jno
fs
lods
cmp
imul
add
add
adc
and
push
mov
pusha
outsl
imul
pop
lock
movl
addr16
repnz
jle
pop
fsubrs
sti
inc
nop
push
nop
sbb
cld
hlt
cmp
addr16
fsubl
mov
movsl
xchg
aad
push
pop
loop
aam
xor
add
sbb
inc
jo
pusha
mov
mov
jns
out
pop
add
cli
sbb
mov
push
lret
pop
stos
mov
pop
pop
sti
jbe
add
imul
outsb
ret
loope
sti
mov
cltd
sbb
xchg
imul
in
sbb
xchg
out
xor
insb
sti
lods
test
mov
jns
ss
sub
imul
cmp
cmpsb
dec
sub
and
and
loop
jns
mov
mov
mov
lock
mov
loop
std
out
cltd
fstps
add
out
or
cmpsb
sbb
sbb
mov
mov
jbe
inc
mov
mov
and
sti
ret
xchg
sub
pusha
cmp
jle
stos
and
leave
xchg
push
or
push
xor
jecxz
out
je
and
xor
loopne
xchg
mov
adc
mov
enter
stos
add
xor
jmp
inc
xor
movsl
dec
jno
lcall
xchg
push
cmc
orl
cmp
pop
push
aaa
rorl
add
int3
hlt
shll
push
push
jp
mov
rcl
inc
in
imul
xor
popf
jb
sub
das
and
roll
outsb
cmp
adc
sarb
and
pop
int3
aas
lea
mov
xor
inc
inc
ja
cltd
aam
and
push
iret
sti
and
icebp
ja
push
jge
arpl
fwait
or
fs
rcll
mov
mov
and
orb
adc
xchg
cld
xchg
sbb
aas
jecxz
ljmp
andb
out
andl
lea
jle
test
lret
nop
ret
add
cmc
dec
sbb
aas
sbb
or
adc
and
nop
scas
sub
test
mov
mov
and
rol
xchg
popf
cmp
jmp
jle
fstpl
xchg
jno
outsl
xor
mov
imulb
adc
loopne
push
jp
push
loope
in
ljmp
sbb
dec
repz
xchg
mov
in
sub
push
mov
sub
lahf
mov
mov
push
daa
push
ds
inc
stos
push
stos
stos
out
mov
mov
mov
addr16
adc
push
sub
shlb
sub
cltd
outsl
sub
jno
add
jb
jo
aad
sarl
test
push
repz
xor
add
jne
pop
stos
inc
dec
add
and
mov
aam
addb
mov
stos
sbb
ljmp
and
mov
push
mov
mov
sbb
xchg
pop
mov
inc
dec
xchg
xchg
insb
stos
imul
imul
stos
cmp
mov
dec
push
arpl
inc
mov
jb
enter
sbb
outsb
test
rcrb
push
paddw
out
aas
nop
push
inc
sub
adc
mov
mov
cmpl
cs
test
movsb
jmp
loopne
add
jmp
sahf
sbb
or
mov
popa
mov
testl
iret
mov
xchg
cmc
rclb
jno
or
xchg
nop
pop
out
pop
aam
mov
mov
mov
sti
sti
mov
mov
popa
nop
popf
mov
cmc
pop
xchg
jns
inc
adc
xor
mov
aas
sbb
stos
cmp
dec
xorb
dec
popa
add
or
sub
or
popf
push
dec
js
jle
jg
or
in
cld
js
shl
int
stc
sub
arpl
outsb
fs
out
inc
loop
push
jmp
lcall
push
loopne
and
lahf
pushf
add
jle
xchg
int
orb
lret
daa
push
inc
adc
mov
rcll
clc
and
fdiv
sti
das
pop
or
cmp
pop
mov
push
imul
std
cmp
xor
mov
jle
dec
and
in
mov
fsubp
mov
sub
or
mov
mov
push
sahf
or
sub
pop
or
ficoms
adc
pusha
pop
stos
daa
sbb
inc
sbb
je
stos
sub
push
repz
mov
jnp
iret
mov
shrb
and
pop
sub
scas
int
mov
bound
mov
jmp
insl
mov
cmp
dec
scas
add
ja
idivb
and
aam
test
pop
imul
leave
dec
inc
out
stos
push
inc
ss
out
xchg
data16
test
jae
insl
sbb
mov
lcall
and
push
leave
testb
dec
cmp
jmp
push
jle
and
add
xchg
cli
into
cs
mov
sbb
test
xor
mov
ljmp
dec
andb
mov
fidivrl
aad
push
mov
mov
add
push
in
cmp
fstpt
loope
in
insl
aad
jne
outsb
clc
mov
ljmp
mov
mov
lods
clc
es
aaa
inc
test
pop
pop
or
int3
dec
mov
sub
adcb
push
aas
loopne
xchg
repz
jnp
scas
dec
iret
mov
loope
lahf
pop
push
add
cmp
gs
adc
das
sub
inc
sub
push
aam
xor
out
jb
push
mov
fnsave
pop
ljmp
iret
xchg
jg
lods
jg
mov
popf
adc
pop
and
fisttpll
pop
cwtl
add
loope
dec
jg
xchg
cld
pop
aaa
loopne
xchg
cld
xchg
sti
ljmp
sub
loop
into
xlat
sbb
mov
scas
inc
xchg
mov
jo
sti
out
lds
es
inc
adc
inc
pop
call
shlb
sbb
hlt
push
mov
mov
ret
stos
pushf
dec
xchg
dec
xchg
inc
cmp
hlt
shr
push
cmc
dec
jo
push
iret
sbb
adc
jl
outsl
das
pop
mov
add
or
fs
ds
push
sti
mov
xchg
and
xchg
popa
cltd
ret
outsb
movsb
leave
xor
pop
jp
cs
loopne
adc
loop
jbe
mov
pop
jne
loope
inc
cwtl
cwtl
addb
shrl
cli
sbb
mov
lgs
sub
aad
xlat
loopne
mov
fcmovnu
dec
inc
add
sub
loope
sub
dec
repz
cmovle
adc
xor
mov
cwtl
out
mov
mov
pop
std
inc
in
rorl
cmp
adc
iret
icebp
outsb
mov
xchg
pop
push
lret
mov
cmp
jg
negb
mov
xor
movsl
sub
out
in
cltd
mov
and
push
decb
mov
fldl
dec
inc
cmp
cmp
mov
add
or
hlt
adc
jge
dec
lock
aas
ljmp
lods
out
jg
cmp
incb
negb
pop
sarb
xlat
jecxz
xor
call
arpl
sbb
push
int3
adc
xlat
push
ret
mov
mov
js
aaa
xchg
aam
mov
clc
inc
addr16
inc
mov
inc
xchg
std
les
fnsave
sti
push
testb
inc
mov
pushf
pop
xor
dec
push
inc
mov
loopne
pop
pop
inc
xchg
test
lcall
fiaddl
je
sbb
pop
jg
lret
int
cmp
fstpl
dec
cmp
jge
test
mov
out
inc
jecxz
in
call
inc
shll
xchg
push
ljmp
jecxz
sub
sub
xchg
je
ficoms
lods
or
daa
jge
push
fdivrl
add
rolb
pop
sub
push
loopne
mov
inc
add
repz
adc
scas
sti
lods
adc
jo
pop
sub
loop
add
xchg
pop
xor
aad
xchg
lock
mov
sub
adc
dec
popf
push
sub
mov
subl
jp
rclb
mov
add
push
push
into
xchg
cmp
or
xchg
js
pop
aam
das
insb
int3
fnsave
mov
xor
sub
and
in
call
mov
sub
adc
arpl
fdivs
fwait
mov
sub
jl
dec
jmp
lcall
das
adc
ds
sahf
xchg
sarb
les
in
clc
push
jo
or
cmpsl
sar
and
xor
je
mov
cmpsb
mov
pop
mov
imul
in
and
xchg
mov
or
add
lcall
or
fists
mov
in
mov
jmp
xor
outsl
inc
cli
sub
cmpsb
cmp
insl
jne
jae
aaa
shl
cmp
fdivs
cli
loope
lea
pop
cmp
pop
sub
pop
aam
adc
jno
jecxz
pop
mov
cld
sahf
push
mov
dec
loopne
add
xor
fwait
xor
ret
push
mov
xor
dec
mov
ret
mov
adc
out
adc
loop
jg
add
mov
insl
fwait
dec
jl
pop
cli
cmpsl
shrb
xor
int3
mov
pop
int
xor
lods
ds
adc
or
cltd
popf
cs
and
cltd
dec
xchg
shrl
lret
add
inc
xchg
add
push
imul
push
push
jmp
mov
stos
sbb
ret
cmp
sti
sub
sbb
xchg
aas
cmpsl
movsl
dec
xchg
in
fistpl
jo
insl
insl
inc
std
test
rol
inc
dec
adc
jns
mov
dec
test
cmp
adc
mov
dec
push
cmpsl
add
and
jecxz
pusha
mov
mov
mov
scas
cltd
and
aad
and
jae
pand
mov
mov
dec
pop
adcl
out
jg
pusha
in
fistpll
data16
out
inc
xchg
call
cmp
aas
adc
in
xor
lods
cld
push
test
enter
cs
cwtl
lods
or
imul
and
xchg
dec
dec
dec
push
outsl
insb
ja
loopne
mov
into
jb
push
xchg
aam
jbe
enter
jo
rorl
xor
mov
pop
inc
rcrl
mov
ret
test
scas
aam
in
cmc
sub
mov
in
inc
pop
xorl
imul
or
mov
xchg
xor
add
addr16
outsb
stos
cmp
inc
add
push
xchg
push
js
dec
sub
sub
vdivps
int
cmp
adc
push
aam
cmpsl
clc
mov
lcall
fistps
fdivs
dec
movb
jno
or
xor
adcb
jl
dec
cld
shrb
cltd
aam
xchg
call
add
mov
subb
jmp
sbb
xor
cmp
testl
or
repnz
mov
data16
fcom
stc
cmp
jb
and
jns
fsubrl
mov
xorl
pop
movsl
cltd
mov
sbb
aam
push
aad
mov
sub
dec
scas
das
xor
xor
or
shll
inc
aaa
test
inc
lods
nop
jb
xor
fbld
loop
out
jmp
stos
ja
mov
scas
dec
mov
std
jbe
jecxz
cmc
insb
rolb
loope
and
test
xor
add
cmp
in
push
jns
sbb
int3
pop
inc
dec
lret
xor
adc
arpl
push
sahf
jae
hlt
add
ds
cld
bound
outsl
popf
stc
testb
adc
fistl
mov
xchg
xchg
add
xor
jo
scas
and
jmp
pusha
ljmp
negb
jne
enter
push
cli
push
fsubr
jle
bnd
adc
ret
sbb
and
sbb
ja
mov
jle
inc
jle
dec
mov
mov
imul
push
kandnb
leave
std
outsl
xorl
enter
push
js
enter
mulb
lods
jl
jmp
test
sub
adc
add
aad
dec
cmp
dec
sub
jbe
push
insl
jb
shll
xor
push
sbb
fs
outsl
or
test
enter
pop
push
cli
adc
mov
rcll
dec
jne
ficoml
push
jmp
push
cmp
dec
sub
cwtl
mov
cmp
popa
sub
dec
pop
push
dec
test
push
adc
lahf
lock
outsb
and
loope
and
mov
fsubrl
gs
cmp
sbb
fldt
dec
adc
add
sub
jp
dec
adc
faddl
xor
or
dec
jnp
insl
lock
cmpsb
sbb
mov
lcall
sub
push
xorl
addr16
inc
cmc
repnz
pop
ficompl
subb
lods
sti
mov
add
les
ja
ret
mov
lcall
and
sub
cmpsb
push
cmpl
xchg
hlt
push
ret
adc
jmp
ret
popf
lret
lret
outsb
ret
pop
and
popf
loopne
jecxz
xlat
jne
cmp
add
push
sub
inc
sub
std
repnz
subb
insl
dec
mov
repnz
and
mov
or
lds
jne
adc
bound
into
cmpsl
addr16
loopne
cmp
insl
test
lods
pushf
lret
outsb
gs
sbb
insb
jno
aaa
ds
test
or
out
and
or
push
lret
shrb
pop
sbb
dec
mov
pop
pushf
jg
enter
sbb
movl
sbb
xchg
outsl
pop
dec
push
inc
mov
loopne
sbb
xchg
and
sbb
or
movsb
xchg
test
xchg
das
push
aaa
jae
cli
mov
mov
das
jecxz
mov
lret
and
lret
mov
jle
sub
imul
out
sub
das
aas
lahf
leave
fstl
outsl
pop
xchg
jecxz
int3
xor
lcall
or
sbb
push
and
dec
xor
imull
adc
and
mov
fbstp
stos
mov
test
and
jge
gs
xlat
lret
cmp
out
dec
rorb
dec
in
or
adc
mov
inc
xor
sub
mov
mov
add
ss
push
lcall
xor
mov
sub
xor
aam
fmul
push
sub
lcall
ds
mov
mov
sub
ss
sti
pusha
fwait
aad
nop
mov
stc
cltd
sbb
sub
add
xchg
mov
loop
loopne
sub
ljmp
cmp
sub
loopne
mov
cmp
rcll
xchg
or
or
dec
and
xchg
cltd
mov
stc
int
adc
sarl
call
pop
pop
jecxz
aam
dec
push
scas
popf
mov
xor
ljmp
adcl
xchg
xlat
leave
mov
nop
test
xchg
mov
repnz
mov
movsb
mov
aas
loop
mov
or
mov
or
push
popl
sub
ss
jle
out
lcall
or
mov
mov
jge
mov
pop
pushf
or
fsubl
sub
insb
aam
or
iret
pushf
and
sub
jae
loop
neg
out
mov
push
xchg
push
pop
xchg
jecxz
in
xor
mov
dec
add
mov
adc
mov
pusha
fstps
ja
ret
or
bound
out
sahf
cwtl
xlat
aam
bound
divl
jecxz
sub
das
aam
dec
adcb
xchg
hlt
orb
mov
adc
push
mov
inc
aaa
adc
inc
inc
dec
hlt
add
addr16
stos
aaa
mov
push
popf
xor
bound
jmp
addr16
push
addb
imul
jb
enter
jmp
cmpsl
out
cmp
push
jno
rolb
imul
jae
nop
push
sub
adc
xor
loope
pushf
lds
outsb
enter
jbe
sub
stos
movsl
lret
cmp
lds
mov
fsub
cmp
xor
or
mov
xorb
fisubrl
adc
mov
adc
dec
cmp
imul
push
and
dec
imul
ficompl
sahf
mov
cmc
sub
icebp
repnz
xorl
push
fldl
fcmovne
cmc
pop
push
inc
div
cwtl
cmp
fsubl
inc
push
mov
sbb
jno
aam
ret
adc
cmp
sbb
mov
sub
fwait
xor
and
sbb
nop
sbb
push
int3
jb
cmp
ja
lea
jno
movsb
fistl
icebp
popf
aad
dec
mov
imul
adc
enter
xor
cmp
xor
or
ss
shrb
arpl
xor
fstl
repz
sbb
rolb
inc
rcrb
inc
stos
imul
jl
scas
adc
outsl
aaa
fdivrl
push
lcall
test
rclb
push
cmp
jns
int3
dec
fstpt
add
adc
adc
cmpsl
mov
jp
hlt
mov
mov
test
cmc
sbb
cmp
adc
insl
lret
int3
fistps
or
dec
in
cmp
pushf
sbb
stos
fsubr
ljmp
mov
jecxz
cmp
scas
pop
cltd
jb
sub
pop
adc
cmp
pop
dec
jl
push
sub
jns
in
jg
cmp
shll
loop
push
jl
int
cmpsl
or
cmp
sahf
scas
mov
ljmp
xchg
test
jecxz
inc
mov
and
cmpsl
ret
mov
pop
add
push
sub
insb
pop
dec
mov
fnstsw
mov
gs
clc
xchg
adc
push
data16
jns
pop
fdiv
inc
sbb
jle
pop
sub
lock
sub
push
lea
pop
mov
test
test
dec
push
inc
imul
std
dec
int
negb
add
jne
sub
inc
fists
cmp
pop
mov
sbb
loopne
dec
sbb
out
hlt
mov
sub
push
mov
mov
cmpsl
pop
adc
xchg
push
and
and
xor
fdivrs
mov
loop
cmpsb
shlb
rol
int
fsubrl
mov
fwait
pushl
or
and
shl
ret
popf
out
sub
xor
adc
sarl
inc
add
aaa
dec
movsl
das
sub
ss
jge
pop
and
xchg
lret
sbb
hlt
sbb
mov
push
sbb
inc
cli
mov
jg
movsb
mov
push
adc
popf
xchg
sub
push
iret
add
jno
enter
call
repnz
mov
jp
sub
mov
cli
lods
cmp
and
xor
gs
rcrl
add
mov
cmp
dec
in
xchg
jle
push
cmpsb
fs
mov
cltd
pop
sarl
xchg
jo
fldenv
out
outsb
fistpl
or
cmpsl
in
jo
jecxz
out
push
subb
jae
dec
and
jno
fwait
enter
lret
inc
lret
outsl
push
push
outsl
cmp
aad
mov
and
aaa
mov
pop
in
out
pop
add
lods
push
hlt
roll
mov
orl
jns
rcl
mov
movsb
sub
mov
inc
iret
mov
cld
cli
xchg
mov
adc
push
add
test
mov
cltd
jle
negl
das
outsl
imul
movsb
and
popf
sub
clc
or
sbb
mov
push
jle
sahf
mov
shlb
mov
pusha
insb
or
jae
cmpsb
les
jge
cmp
ds
adc
push
jbe
dec
leave
andb
inc
aam
scas
mov
mov
push
or
sbb
cld
dec
mov
fidivrs
movsb
push
les
jae
cltd
adc
mov
test
mov
fcompl
sahf
xor
pop
clc
jns
adc
xor
sub
lret
outsl
mov
insb
mov
sbb
adc
dec
pop
movsb
adc
loope
int
mov
push
sbb
adc
sub
andl
ss
pushf
jbe
xchg
mov
das
sahf
loop
xchg
arpl
pop
clc
fisttpl
mov
jmp
les
ret
mov
jnp
adc
adcl
mov
aaa
lahf
mov
pushf
push
push
cmpl
adc
shl
inc
daa
iret
or
or
dec
shlb
hlt
rclb
inc
cmp
orb
mov
or
stos
ret
scas
mov
adc
sbb
imul
jp
rcll
dec
jne
call
jp
insb
add
scas
mov
xchg
pop
test
pop
xchg
in
add
inc
mov
test
xchg
nop
insb
cmpsl
sbb
push
int3
minps
int3
into
push
insb
pop
mov
int3
mov
sub
xchg
movsb
test
jmp
xchg
and
bound
pop
mov
icebp
cld
movsl
mov
loop
add
push
mov
mov
dec
dec
divl
dec
loop
sbb
pop
pop
mov
mov
mov
or
cs
or
sbb
outsb
rcrb
xor
xorl
cltd
loopne
adc
jle
mov
mov
fwait
sbbl
test
dec
dec
sbb
mov
xchg
xor
dec
sbb
int3
pop
cmpsl
xchg
std
pop
xor
aad
popf
test
cmpsb
dec
mov
fimuls
inc
jo
mov
xchg
sub
cmpsb
inc
outsb
test
jo
call
jg
adc
sub
add
das
fsubr
cmc
pop
repz
add
add
lods
stc
test
push
cs
adc
testl
xchg
inc
pop
push
jno
popl
mov
cltd
int
pop
dec
stos
dec
pop
jo
sbbb
mov
ret
pop
push
ss
int3
xor
or
xor
xor
xchg
or
xchg
dec
imul
repz
fldt
xchg
xor
sub
nop
ret
jp
pop
xchg
imul
pop
cltd
jp
add
jbe
into
aam
xor
pop
cli
mov
mov
scas
fnsave
loopne
jp
push
push
jb
addr16
jp
fucomip
shlb
sub
xor
push
push
fcoms
push
and
ds
test
mov
mov
xchg
pop
sub
mov
add
mov
fiadds
sub
lods
in
sbb
je
movsb
lods
test
insb
lds
shrd
mov
mov
outsb
aam
jmp
push
insb
inc
icebp
cmpsl
nop
aas
add
mov
push
test
enter
in
and
mov
dec
push
pop
je
or
jns
xor
sbb
dec
mull
cmp
repz
cwtl
pop
pusha
outsb
inc
aas
test
stos
or
adc
js
add
int3
fnsave
stos
dec
xchg
xlat
es
inc
cmp
jns
das
mov
in
push
testb
dec
aam
fs
mov
sbbb
inc
lcall
lcall
into
pop
loope
cmp
dec
test
or
mov
add
iret
jae
test
icebp
dec
xchg
sbb
sub
push
stos
int3
stos
arpl
jbe
and
inc
addr16
lret
les
cwtl
in
lcall
sbb
jecxz
sub
mov
lcall
pop
mov
hlt
cmp
fisubl
adc
hlt
fcompl
xchg
into
pop
inc
mov
adc
and
mov
pop
aad
push
sbb
fnstcw
mov
repnz
add
stos
lcall
inc
out
jbe
pop
adc
jb
testl
cwtl
xor
xchg
mov
xchg
jge
xor
mov
add
pop
jae
xchg
jmp
lahf
push
pop
call
pop
mov
fisubrs
pop
and
mov
and
xor
sti
push
sub
add
xor
lds
out
mov
data16
mov
pop
jnp
ret
pop
sti
test
fdivr
inc
not
lods
fcoms
je
les
lret
mov
dec
int
jnp
mov
xor
fcmovne
push
mov
movsl
es
adc
jbe
dec
das
addr16
push
test
call
aas
in
lcall
xor
jbe
sub
push
mov
push
les
cwtl
out
mov
fildl
adc
cld
out
fwait
cmp
sub
xor
std
mov
ds
fstps
repnz
lock
rcrb
addr16
rcll
jnp
pop
xlat
rolb
lahf
test
pushf
repz
push
adc
fisubs
lock
dec
push
pop
xchg
sahf
add
adc
jecxz
xor
ja
rcl
popf
cmp
pop
loopne
push
sub
mov
pop
imul
fnstcw
std
jno
add
aam
ret
pop
fidivl
shr
dec
call
pop
sbb
in
xchg
jae
sbb
sbb
nop
add
sub
sbb
mov
cvttps2pi
push
add
mov
in
cmp
sbbl
in
int3
adc
aas
inc
xchg
push
insl
nop
je
sbb
insb
jbe
aad
dec
push
jmp
push
jno
mov
gs
scas
test
rolb
pop
mov
pusha
adc
pushf
jmp
lcall
and
stos
adc
lahf
sbb
inc
cmp
xorb
aad
sbb
sbb
mov
mov
jb
sub
popa
sbb
rol
jnp
xchg
testl
rcrl
pushf
mov
out
jo
xchg
out
in
xor
xor
pop
mov
sbb
insl
mov
iret
xchg
mov
stos
jnp
fs
push
sbb
add
mov
jne
xlat
or
dec
sub
jmp
dec
mov
push
ja
push
out
das
mov
cmpsb
cltd
jp
xchg
scas
hlt
test
push
sub
stc
add
int
outsb
sub
sbb
cmc
shrb
decb
fs
jno
mov
in
insl
and
dec
in
pop
dec
mov
icebp
inc
gs
or
imul
xor
aad
rcr
jl
inc
add
imul
daa
cwtl
xor
iret
xchg
lahf
jg
add
adc
mov
popa
jns
test
mulb
cwtl
lret
adc
and
aas
mov
icebp
xor
movsb
out
in
cmp
stc
xor
xlat
sbb
imul
sub
xor
jecxz
add
gs
xor
sbb
dec
mov
mov
and
jae
orl
lcall
pop
mov
and
stos
shrb
jg
sbb
sbb
xlat
lea
and
push
sarl
in
xlat
rorb
sub
dec
movsl
jmp
or
vpackusdw
mov
xor
sbbb
pop
xlat
pop
lcall
and
pop
pop
sbb
repnz
inc
xchg
jg
dec
sahf
inc
or
add
clc
adc
and
jge
jae
je
inc
jecxz
mov
push
movsb
and
mov
out
mov
jb
pop
movsb
dec
adc
or
push
pop
add
vcvtps2dq
aad
dec
xor
mov
jecxz
out
stos
jg
psubsw
jg
inc
xor
inc
aad
push
jo
sbb
jnp
mov
iret
jae
jmp
in
rolb
fildll
mov
pop
sti
pop
bound
sub
std
nop
jge
xor
xchg
scas
lods
xor
fidivrs
dec
aas
adcl
lret
sbbl
pusha
pop
push
aaa
cli
and
gs
mov
cmp
insb
xchg
aaa
out
insb
jge
out
cmp
insb
push
jmp
pusha
fdivl
lods
ja
ror
cmpsb
lea
cmp
ljmp
daa
mov
push
adc
mov
or
lock
jno
loopne
shrl
xchg
lret
rcrb
dec
int
in
arpl
fcmovnbe
loopne
call
or
dec
inc
pop
inc
pop
cwtl
push
divl
dec
and
iret
addr16
daa
daa
mov
sub
mov
sub
lods
int3
aam
inc
popf
icebp
ss
or
mov
inc
call
push
adc
cld
inc
test
pushf
jns
sbb
sbb
orb
sahf
lcall
sar
inc
xchg
mov
outsl
mov
into
xchg
add
mov
rclb
jecxz
andb
xchg
mov
adc
sub
ror
test
jne,pn
in
jmp
fnsave
test
shll
mov
adc
addr16
loope
imul
pop
xchg
jle
ja
mov
jo
mov
dec
aad
jbe,pn
ljmp
call
js
sbb
ja
jg
mov
rcrl
lahf
add
xor
ss
pop
stos
addr16
in
inc
push
jp
stc
push
movsb
jbe
in
inc
jbe
clc
pop
pop
daa
mov
or
ljmp
xchg
ror
not
leave
adcl
call
sub
or
inc
xchg
pop
repnz
jae
je
mov
ret
repnz
jg
mov
ljmp
loope
mov
dec
mov
outsl
add
js
add
lahf
adc
mov
cmovno
test
mov
test
mov
push
pop
jae
mov
push
cmc
jecxz
fldenv
mov
sbb
add
stos
mov
inc
xchg
jo
pop
data16
xor
lea
xchg
ret
jb
cmp
lcall
jle
rcrl
std
in
add
bound
mov
std
add
dec
pop
xchg
mov
into
jo
ror
dec
dec
add
push
popf
in
insb
or
pop
sbb
ja
fdivr
inc
sbbb
hlt
nop
loopne
subl
loop
xchg
dec
or
jg
xchg
add
fimull
mov
pop
aad
loopne
jb
orl
cmpsl
fistpl
cli
flds
dec
inc
hlt
cs
idivb
adc
add
mov
aam
adc
shrl
push
lea
test
jbe
cmp
push
mov
sbb
iret
loopne
stos
test
cmp
xchg
sub
mov
jns
sti
mov
mov
arpl
xchg
pop
xchg
ret
stos
fnstcw
mov
mov
inc
inc
dec
loop
dec
fimuls
inc
aam
pop
sti
pop
fistps
pushl
repz
jge
inc
loopne
jp
sub
mov
test
cwtl
cmpb
add
call
push
out
setns
int3
mov
dec
and
fsubr
sbb
jbe
sbb
xlat
jbe
jg
dec
aad
hlt
inc
xor
int
jl
mov
sti
pop
mov
mov
adc
std
lods
mov
dec
mov
out
in
call
jp
lea
jg
lret
pop
jnp
cmp
rorl
outsb
cwtl
test
add
inc
inc
test
cmp
xor
test
inc
int3
and
mov
jl
jne
adcl
movsl
mov
push
imul
mov
push
inc
push
ret
bound
insb
pusha
mov
outsl
dec
testb
fwait
mov
hlt
pop
std
scas
xchg
push
mov
jnp
test
dec
add
pop
pusha
jle
jno
test
xchg
test
adc
imul
les
cmp
psubb
xor
mov
sub
adc
push
arpl
cmpl
mov
fcoml
fidivrl
pop
pop
adc
jecxz
add
or
es
add
xor
popf
ss
xor
jmp
outsl
push
es
shrl
pushf
add
test
dec
je
mov
leave
cs
rol
jae
mov
xor
dec
inc
cmp
sub
xchg
ds
popf
jbe
cld
lods
imul
shll
ret
aaa
inc
test
fnstsw
dec
in
nop
ret
sbb
push
in
cmp
inc
cmpsl
pushf
xor
ja
mov
xor
push
mov
dec
std
xchg
mov
lahf
ficoms
inc
jmp
in
jnp
push
fst
xor
std
ficoml
mov
repz
add
js
push
push
pop
jmp
fs
sub
jle
mov
sub
mov
addr16
out
pop
jl
mov
pushf
adc
sbb
jae
inc
cs
and
mov
aam
xchg
jle
push
lods
bound
sub
push
sti
sub
push
loop
sub
outsb
insb
cmovno
out
cmp
mov
inc
hlt
sbb
xchg
rcrb
daa
repz
sahf
fwait
xor
out
ret
ljmp
test
icebp
leave
dec
je
add
addr16
xchg
sbb
xor
inc
xchg
in
inc
ljmp
sbb
lret
mov
and
setbe
sub
inc
dec
cmp
dec
mov
ds
cltd
out
ljmp
fidivl
shrl
jl
dec
popf
shll
sub
pop
sub
cmpsb
in
mov
sub
decl
mov
inc
pop
inc
cmp
adcl
ret
leave
push
arpl
in
jmp
mov
test
jbe
jb
mov
mov
dec
in
cmp
mov
dec
subl
lea
xchg
sbb
pop
xorl
out
cld
inc
shrl
fnsave
cli
and
and
mov
sbb
jnp
dec
mov
mov
mov
pop
repz
andb
adc
pop
aad
sahf
fs
fstp
push
cmp
push
clc
xor
in
rorl
fnsave
int3
cmp
pop
mov
je
jo
inc
addr16
xor
loop
xor
push
mov
std
push
push
push
test
repnz
test
cs
adc
sbb
mov
lock
ror
aas
fs
leave
sahf
lcall
dec
sbbb
mov
cltd
incl
jo
idivb
popf
adc
popa
push
clc
adc
outsl
pop
and
adc
inc
test
in
ret
fsts
out
xchg
loop
pushf
out
notb
xchg
fsubp
ds
jnp
mov
icebp
pop
popf
mov
mov
out
or
sub
mov
into
pop
fdivr
ljmp
orb
pushf
push
pop
or
dec
out
sahf
out
ss
loop
sbb
dec
fmul
push
lcall
mov
repnz
or
jns
cmp
adcl
or
pusha
out
and
out
rolb
mov
jg
pop
pop
mov
or
adc
mull
repnz
out
or
int3
pop
pop
in
xchg
dec
mov
jecxz
dec
pop
adc
dec
sbb
cwtl
out
xchg
or
dec
xchg
xorl
arpl
cmp
or
adc
scas
pop
lea
scas
mov
mov
fldcw
addr16
leave
fwait
mov
test
lahf
and
in
insb
lret
lea
pop
movsb
dec
lods
mov
jl
scas
pop
sarl
jnp
sarb
adc
adc
dec
imul
xchg
insl
dec
pop
adc
mov
repz
sbb
les
xlat
in
mov
jmp
xorl
je
pop
clc
ret
or
roll
cmp
mov
jmp
adc
sub
dec
add
fisubs
xchg
mov
lds
mov
shrl
mov
lret
pop
jae
loope
test
inc
ds
insb
pop
push
pop
mov
add
cmp
nop
nop
adc
inc
push
insb
adc
jge
or
ficoml
shrl
jmp
xlat
cwtl
sbbl
jp
cmp
jmp
hlt
and
jne
pop
mov
pop
movsb
fsubr
jmp
add
adc
decb
hlt
or
shlb
enter
xor
je
add
cmovne
inc
out
and
add
scas
dec
jnp
testl
cs
push
jo
pop
push
js
push
pop
mov
andb
sub
jbe
and
sub
push
pop
leave
loope
fdivr
repz
cld
pop
dec
cs
mov
gs
loope
mov
sbb
test
int3
or
dec
mov
mov
daa
mov
jecxz
iret
xor
mov
mov
adc
cli
clc
cs
mov
sub
cmp
xor
movsb
rcl
sarb
add
xchg
xchg
sub
addr16
xlat
gs
sbbb
cmp
test
mov
std
or
addr16
enter
mov
aaa
stos
sbb
push
sbb
xchg
jmp
je
scas
in
popa
push
pop
mov
add
add
mov
lahf
sub
sub
cmp
lods
test
xchg
push
lea
adc
out
das
std
into
or
inc
repnz
adc
fisubrs
jns
cltd
jne
pop
inc
or
jns
hlt
in
bound
in
stos
sahf
imul
xorb
loopne
pop
jo
les
and
push
push
sbb
jle
daa
mov
mov
ror
rcrl
sbb
jnp
outsl
adc
sub
cmp
loopne
adc
mov
jecxz
jg
xchg
jns
es
sbb
xchg
pusha
fstp
daa
jge
lar
stc
repz
mov
adc
jb
lret
push
es
or
cltd
xchg
and
jl
pop
jne
pushw
enter
in
out
pop
add
das
xchg
cltd
push
roll
mov
pop
push
psubsb
adc
jl
fstpl
inc
mov
incl
repz
insb
faddl
mov
js
out
adc
dec
adc
dec
or
push
andb
sub
sarl
pop
stos
mov
mov
pop
dec
test
mov
inc
enter
or
rcrb
mov
pop
fmul
inc
cmpsb
sbb
push
call
or
stos
std
mov
iret
test
and
jnp
repnz
lret
sbb
aas
shlb
mov
ficomps
pop
sbb
pop
ds
push
test
add
adc
lret
dec
push
out
sub
idivb
dec
movsl
outsb
dec
mov
jne
int
xchg
dec
cmp
mov
hlt
orl
xchg
xor
nop
fcomps
clc
mov
jp
mov
dec
out
push
xchg
adcb
pop
je
pusha
pop
cltd
and
mov
les
and
nop
sarl
xchg
lcall
xor
lret
xchg
adcb
or
fildl
inc
jbe
xor
stos
mov
inc
mov
and
inc
sahf
rep
sahf
test
sub
jns
push
mov
ja
clc
movsb
mov
fimull
add
or
mov
mov
stc
jl
fnstcw
or
shrl
mov
sbb
and
or
jbe
push
and
xchg
gs
shlb
stc
add
stos
jbe
fwait
cltd
mov
xchg
sbb
adc
xchg
mov
aam
and
fcmovu
dec
jnp
add
pop
arpl
das
add
cmp
shl
out
fld
cmp
es
mov
add
bound
jmp
xorl
jae
in
cmc
inc
sti
jnp
push
cmp
xor
lods
in
xchg
into
xchg
stos
add
jle
daa
adc
pop
push
sbb
sbb
incb
aad
insl
push
push
out
or
bound
addr16
aad
jp
lea
rol
sub
ja
int
dec
lods
cmc
add
pop
pop
in
push
aad
outsl
adc
jo
cmp
mov
fucom
int
cltd
and
dec
mov
push
or
adc
mov
jne
sub
aas
pop
xor
jp
aaa
in
aaa
inc
scas
adc
in
les
in
add
mov
sbb
mov
jl
push
lods
or
mov
adc
xchg
push
pushf
jmp
pusha
xchg
jmp
hlt
js
lock
sub
clc
dec
pop
sbb
stos
ret
mov
imul
aas
mov
inc
adc
mov
push
arpl
push
or
mov
mov
push
inc
dec
mov
sub
and
pop
xchg
xor
cmpsb
mov
pop
divb
ss
mov
dec
clc
jmp
in
loopne
loop
jge
cmp
adc
xor
mov
pop
cld
fmull
mov
jbe
mov
jg
push
pop
cmp
dec
push
mov
inc
sbb
push
cmp
int
sti
ss
mov
dec
lods
nop
mov
xchg
pop
dec
lods
filds
push
ds
repz
xchg
jg
pop
sbb
sub
fidivrs
lret
sub
ljmp
pop
jbe
call
add
lret
in
loopne
call
dec
imul
roll
and
mov
jp
mov
lods
bnd
leave
xchg
add
mov
filds
dec
testb
pushf
stos
mov
jb
pop
fisubs
mov
in
push
loopne
or
mov
daa
adc
cld
xchg
jle
mov
hlt
sarb
cltd
xor
or
add
orl
sbb
arpl
mov
scas
mov
push
mov
call
data16
adc
jnp
pop
mov
or
ret
jo
ret
in
push
call
and
imul
mov
ljmp
add
adcb
cmpl
pop
jl
sbb
jg
andb
mov
xchg
push
cmc
or
xchg
jg
or
arpl
jle
popf
clc
pop
outsl
sbb
js
adc
mov
or
push
orb
push
pop
pop
pop
jmp
outsb
jecxz
outsl
xlat
enter
insb
push
and
push
not
mov
xchg
pop
and
popf
mov
or
lret
pop
xlat
mov
inc
ret
sahf
mov
jecxz
dec
dec
jg
push
add
dec
mov
fiadds
js
dec
out
or
cmc
fildl
popf
dec
cmp
aad
cltd
stos
addr16
loopne
sub
push
sub
pop
shrl
or
xchg
dec
cs
shlb
push
sbb
ret
lock
jge
mov
dec
mov
sbb
aam
lea
xor
push
pop
xchg
pop
push
jg
lahf
imul
cmc
jnp
mov
loop
loop
jbe
pop
sub
sub
lds
cmp
sub
data16
les
lock
mov
xchg
pop
and
push
push
add
test
in
ja
jle
mov
sbb
dec
sub
ret
mov
mov
aas
push
fidivl
arpl
repz
gs
add
subb
andb
mov
rcrb
or
pop
sbb
push
jle
adc
add
lcall
cs
mov
jl
push
xor
pop
mov
adc
mov
push
jg
shlb
cmp
ss
pop
sti
or
cmp
inc
pop
hlt
sbb
sbb
xor
loopne
adc
shll
icebp
cmp
mov
pop
dec
mov
adc
jmp
subb
fisttpll
cmp
mov
test
mov
inc
jb
int3
int
addr16
sub
pusha
pop
push
xor
movsl
and
iret
dec
push
out
andb
das
je
add
addl
xlat
or
pop
mov
cwtl
arpl
sbb
or
sbb
test
add
test
mov
aas
repnz
push
cmp
in
inc
sbb
adc
enter
xor
aad
loop
repnz
adc
mov
cwtl
xchg
mov
sub
imul
mov
ret
int3
std
int3
aas
sbb
out
call
push
add
mov
loope
cmpsl
lds
inc
inc
push
js
fxch
cld
ret
inc
lods
pop
cli
and
push
push
shl
ret
mov
adc
jmp
rcr
mov
stc
dec
or
repz
jge
xchg
fimull
push
jmp
fisubrl
std
xor
pop
xchg
mov
or
and
xor
stos
les
push
cwtl
or
fdivs
sbb
mov
xchg
fmulp
pop
adc
daa
sub
js
std
lret
repz
sbb
loopne
incl
outsl
test
adcl
out
jmp
dec
nop
in
jo
inc
sub
in
push
jo
lret
imul
dec
mov
xchg
stos
pop
and
aas
into
mov
cmpsb
xchg
push
mov
jns
or
sarb
jecxz
push
mov
not
add
mov
cmp
insl
xchg
push
adc
daa
sbb
jo
push
pop
pop
movsl
or
sub
or
pop
add
scas
ds
mov
push
pop
cmp
cmp
sbbb
test
je
cmpsb
arpl
sarb
mov
mov
dec
arpl
push
cmp
into
cmp
pop
out
fsubrs
aad
push
mov
dec
addr16
and
add
mov
sub
aas
imul
imul
xchg
jbe
push
sbb
pop
insl
mov
cmp
fnstenv
inc
push
or
sub
loope
xor
xchg
imul
sbb
popf
fidivrl
inc
push
mov
movl
cwtl
cmp
mov
out
enter
in
popf
inc
sti
dec
in
xor
loopne
or
imul
popf
loope
clc
add
test
popf
xorb
xor
mov
dec
mov
sbb
inc
out
add
arpl
test
call
jmp
mov
test
dec
sbb
mov
lods
lahf
mov
outsl
sbb
xlat
js
les
jecxz
movsb
mov
inc
cltd
push
mov
xchg
dec
adc
clc
andl
lret
nop
pop
mov
addr16
push
into
inc
clc
insl
cli
loopne
sarl
out
test
fcomps
cltd
mov
gs
lea
test
into
cmpsb
jp
xchg
andl
xor
loopne
loope
pop
rcl
inc
aas
pop
inc
cli
ss
pop
ffree
in
mov
cmp
cmp
in
out
flds
add
cmp
xlat
stos
int
push
push
rorl
mov
sti
mov
ljmp
jmp
xchg
dec
mov
in
sti
mov
add
shll
hlt
imul
mov
negl
mov
mov
jnp
loop
sub
in
mov
fimuls
fwait
pop
lock
push
daa
and
or
ret
jg
imul
movzbl
test
lret
dec
popa
out
xchg
xchg
and
adc
jae
lcall
icebp
pushf
test
outsb
outsb
push
sub
xor
movsl
sbb
jge
sahf
jmp
dec
adc
jmp
push
mov
addr16
dec
mov
adc
in
int3
xlat
push
leave
sbb
lods
jo
mov
and
repnz
int
ret
sub
mov
cmp
jns
and
sub
inc
pusha
lahf
les
adc
stos
scas
ds
pop
push
jnp
cmpb
daa
xor
jo
lcall
mov
cmpsb
sbb
mov
inc
xor
push
pop
and
dec
andl
or
push
ror
insb
incl
add
das
imul
scas
pop
pop
nop
mov
jmp
neg
sub
or
jmp
sti
or
loopne
and
jge
mov
mov
mov
je
test
mov
neg
push
fsubr
adc
jg
mov
shlb
imul
mov
sub
std
add
sbb
enter
out
cmpsl
je
jl
push
shrb
jbe
xor
mov
mov
arpl
movsl
lcall
aas
xor
jle
inc
push
data16
xchg
add
jae
leave
add
ja
or
or
imul
mov
cli
jecxz
lea
xor
pop
pop
repz
xchg
out
shrb
cmpsl
jle
jo
mov
mov
scas
pop
sbb
mov
pop
mov
scas
pop
leave
lahf
xchg
push
outsb
fisttpll
or
cli
data16
cmpsb
jg
dec
push
or
sbb
fildl
jnp
push
pop
movsl
xor
outsl
inc
int
test
jbe
and
pushl
lods
xchg
ficoms
mov
jne
lcall
xlat
fisubl
or
xchg
xor
pop
lret
rcll
lods
sbb
inc
xchg
lret
jno
aad
pop
stc
movsl
stos
lahf
mov
jmp
out
test
sbb
lret
outsb
sbb
push
leave
or
mov
sbb
push
pop
sbb
add
hlt
pop
ret
popa
test
fldl2e
gs
and
xchg
out
outsl
jl
push
enter
and
inc
and
scas
adc
imul
les
jl
add
sbb
inc
push
roll
mov
cmp
push
mov
lret
mov
or
jbe
pop
pop
outsb
cmp
pop
sbb
xchg
fdivl
into
out
inc
stos
je
ret
push
dec
add
xor
mov
lret
pop
mov
dec
jnp
sub
mov
dec
mov
pusha
mov
ss
and
aas
aam
mov
out
lret
dec
xchg
push
push
xor
cmp
inc
pop
arpl
insl
and
adc
fs
lock
lcall
pop
std
sbb
xor
mov
mov
mov
ds
jbe
mov
push
sub
jmp
mul
pop
inc
movsb
fcmovnu
frstor
mov
add
xor
data16
or
jb
ja
xlat
pop
aam
es
stc
lods
lock
sbb
lds
pop
into
in
xor
loop
sbb
fistpll
add
jge
jecxz
push
mov
es
jmp
jo
push
sbb
movsl
sub
cld
mov
pop
push
movsl
std
xor
stos
xchg
jb
dec
push
inc
bound
pop
xor
dec
or
xchg
push
ja
pushf
add
xchg
test
cmp
pop
xchg
inc
inc
mov
push
rcrb
scas
or
mov
fs
mov
inc
cmc
xor
mov
push
sub
cmp
mov
decl
jl
dec
stos
cmp
rolb
xchg
lock
cmpb
sub
cmp
xchg
hlt
pop
adc
test
pop
cmpps
sbb
lret
jne
xchg
mov
mov
lock
adc
es
iret
adc
movsl
arpl
outsl
push
lock
mov
mov
outsl
mov
rcr
jnp
subl
xchg
push
push
mov
inc
and
inc
imul
int3
ret
fists
mov
repnz
int3
popf
les
popa
lcall
in
xchg
inc
cmc
aaa
out
mov
dec
xchg
inc
jns
adc
ret
stc
pop
into
stos
inc
repnz
into
sarl
xchg
adc
hlt
xrelease
pop
int3
xor
cmp
out
pop
pop
fildl
cmp
sub
cmp
sub
cs
fisttpll
out
xchg
cmpsl
xchg
popf
sub
lahf
mov
xchg
in
inc
dec
es
xor
inc
or
mov
repnz
cmp
cmc
outsb
fcompl
jae
nopl
xchg
out
imul
sub
mov
lret
sbb
xchg
mov
mov
jbe
cmpsl
pop
fisubrl
and
sarl
es
je
sbb
rclb
inc
xchg
nop
ja
xor
fistpl
sbb
xor
imul
loope
jle
cmpsl
rol
mov
mov
out
enter
out
inc
daa
inc
loopne
pop
and
les
lds
lcall
jnp
shlb
call
icebp
addr16
jge
jae
or
movl
mov
es
mov
mov
loopne
xchg
lcall
and
es
cmp
and
xchg
imul
pop
fsts
mov
mov
dec
and
rol
je
mov
in
imul
daa
sbb
mov
push
jne
pop
lcall
addr16
xlat
filds
push
stc
insl
mov
loope
into
xor
add
inc
sbb
xlat
fldt
cmpsl
loop
inc
xchg
les
cmp
ficompl
cmp
lahf
cmp
ja
movsl
xor
fwait
rol
lock
jle
inc
jl
in
add
adc
mov
dec
push
push
leave
xor
ds
pop
push
loopne
jecxz
and
aad
ja
stc
fisubrl
sbb
push
fsincos
sbb
es
jmp
sbb
pop
cmp
pop
stos
dec
push
xchg
mov
sub
int3
cli
ret
dec
bound
fwait
cmpb
and
jmp
pop
cmp
clc
loope
mov
fisubl
mov
scas
dec
sti
jl
xor
aam
mov
or
push
out
cmp
aaa
sub
cli
fildl
xor
xchg
movsl
into
imul
arpl
cmp
das
int
imul
xor
rcrb
in
push
mov
dec
push
push
and
mov
pop
ljmp
ss
repz
mov
fisubrs
jae
nop
jb
mov
jae
mov
jo
pop
outsl
cld
sahf
sbb
xor
or
aaa
loop
ds
jae
inc
sti
rclb
jl
cmp
pop
call
arpl
into
pushf
fistpll
je,pn
adc
cmpsb
lret
add
pop
fs
mov
inc
pop
push
lds
test
cmp
pusha
xchg
push
aaa
xor
ror
push
inc
dec
std
pop
aas
sub
jg
nop
ret
aas
push
shl
dec
and
cs
sbb
pop
xor
inc
xor
xchg
mov
adc
lods
mov
movaps
icebp
repnz
fisubs
pop
pop
pop
push
cli
pusha
and
les
inc
push
xchg
cmpb
dec
mov
sub
jmp
xor
lahf
addl
and
jb
gs
inc
adcl
in
mov
test
dec
pop
cmpsb
test
xorb
and
rcll
sub
push
cmp
sub
adc
and
loopne
and
addb
xor
into
push
jl
xor
or
mov
add
sbbb
and
sarb
ljmp
push
push
jb
cld
scas
dec
add
dec
mov
rorl
dec
aaa
or
pop
jbe
sub
add
arpl
xchg
out
xchg
arpl
lea
mov
cli
adc
mov
dec
xor
or
add
cmp
jl
notl
call
js
pop
push
mov
fldenv
stos
shr
pop
loopne
inc
clc
jne
decl
fmull
jno
repz
je
mov
sahf
push
insb
mov
sbb
insb
or
sarb
imulb
and
pop
daa
add
cmp
mov
mov
sub
cmpsb
arpl
adc
sub
lret
mov
xor
or
loopne
xor
mov
notb
lret
push
mov
imul
pusha
push
cmc
jb
mov
fidivl
adc
mov
cmp
and
jae
test
mov
sbb
mov
loopne
xor
rcrb
out
out
xchg
cmp
pop
push
inc
sbb
movsl
cmp
loopne
stos
push
test
xchg
sub
dec
pusha
ficompl
xchg
jecxz
push
js
adc
xchg
mov
mov
test
testb
pop
scas
es
adc
sbb
std
scas
lret
loop
in
pop
push
sahf
push
aaa
hlt
mov
movsl
xchg
sbb
cmp
add
ret
stc
aaa
lret
pusha
cltd
out
sbb
mov
int
bound
std
aaa
shll
add
lret
popf
call
lret
inc
push
addb
xchg
jb
arpl
add
repz
mov
lock
int3
push
jns
popf
ficoms
inc
fdivl
and
mov
mov
xor
ret
in
mov
into
jg
ret
xchg
xchg
ja
jg
nop
fwait
in
inc
and
cmp
add
inc
ja
push
xlat
ret
fnsave
shrb
xor
push
cmpsl
push
ds
mov
pop
lods
mov
xor
into
roll
or
mov
jl
pop
das
push
popf
data16
popf
aam
add
test
mov
popf
xlat
pop
fdivrl
fimuls
scas
subb
jo
cmp
and
push
scas
les
pop
sub
scas
call
out
les
jmp
adc
leave
rcl
jno
sub
in
ja
mov
sbb
mov
mov
insl
jmp
je
cwtl
loop
mov
fsubrs
adcb
cmpsb
jl
xchg
xor
jge
cmp
insb
dec
popf
mov
in
call
or
in
and
ret
lock
xorl
ret
mov
scas
or
out
aam
aas
jge
push
cltd
out
pop
inc
push
fsubrp
jns
push
pusha
mov
pop
in
inc
je
movsb
insl
or
cs
out
or
movsb
xchg
fcomps
test
mov
jmp
add
xorl
filds
outsb
jne
adc
jmp
xor
mov
loope
arpl
mov
dec
sub
cmc
pop
sub
cmp
es
inc
sub
fcoml
inc
lock
inc
jae
pop
cmp
int
test
jns
and
mov
dec
xchg
mov
pop
stos
pop
inc
stos
incl
push
adc
test
xchg
das
mov
ss
lahf
mov
push
cmc
jnp
leave
sahf
jae
out
pop
xchg
scas
mov
aam
jmp
push
cmp
movzwl
movsb
dec
fimull
je
mov
push
out
lret
repz
cmp
mov
cmpsl
mov
sbb
loope
xchg
sub
xor
push
lods
xchg
sbb
sub
repz
push
mov
xorl
xor
stos
inc
repnz
pop
in
sbb
and
repnz
imul
fsubrl
xor
push
jo
jns
and
fcoml
jb
pop
aaa
clc
dec
sbbl
sahf
lret
mov
fldln2
mov
fwait
out
sbb
gs
sahf
push
add
stos
mov
jp
cld
stos
adc
outsl
mov
in
pop
sub
lcall
fcoml
iret
lods
lret
clc
std
cwtl
adc
jnp
into
mov
roll
scas
stos
sub
out
mov
mov
xchg
fisttpll
mov
push
sarb
push
jp
fldt
jae
daa
xlat
cmp
test
pushf
push
sbb
nop
neg
sbb
dec
push
dec
ja
add
roll
lea
popf
push
int3
cmpl
push
jns
cmp
mov
xchg
jmp
sbb
fidivrl
sarl
or
negb
shrl
adc
sub
fcompl
out
inc
sti
sbb
push
xlat
aas
xor
pop
inc
leave
lock
add
das
mov
jo
add
sub
stos
fadds
rcrl
dec
call
push
push
add
mov
pop
nop
jne
add
in
rcrl
aad
mov
int
imul
loopne
in
ds
jae
insl
pop
andb
nop
unpcklps
add
mov
mov
aad
pop
fisubs
pop
lods
in
ret
addr16
imul
cmp
xchg
mov
sbbb
loop
call
xchg
lcall
add
test
out
cmpsl
add
sub
sbb
aas
mov
stos
dec
cmpsb
mov
frstor
mov
je
setnp
adc
lahf
sub
mov
repz
ljmp
xchg
add
inc
loope
cmp
andb
out
sub
cmpsl
mov
imul
or
mov
orb
sub
aad
sub
jbe
fbld
jg
xchg
xchg
inc
int3
and
pushf
sarl
stc
xor
cld
sbb
mov
sbb
xchg
rclb
scas
dec
insl
sti
iret
insb
dec
cmp
ret
into
shll
fwait
subl
scas
sahf
lret
test
dec
sub
ret
popl
in
ret
mov
push
mov
lock
test
popa
cli
les
aas
inc
push
add
lcall
ret
pop
sbb
pop
call
inc
int3
lret
cmp
or
add
mov
sub
lods
xor
les
xlat
cmp
and
or
mov
push
push
in
pop
mul
into
inc
mov
xlat
imul
pop
inc
cmovne
testb
jo
mov
loope
xor
xor
les
idivl
mov
sbb
stos
pop
pop
mov
inc
push
nop
pushf
rcll
xchg
push
pop
into
addb
and
jne
inc
in
adc
sbb
sahf
fldenv
scas
int3
insb
adc
js
cmpsl
sahf
cwtl
popf
jecxz
dec
and
icebp
repz
mov
mov
test
test
pop
aaa
pop
and
add
xchg
dec
pushaw
pop
sbb
call
mov
ja
sbb
neg
pop
dec
sub
cltd
inc
adc
add
negl
lods
dec
jg
or
push
cmp
add
xchg
mov
cmpl
ficompl
push
sub
int
mov
scas
add
dec
je
mov
mov
mov
mov
mov
jae
inc
pop
add
into
mov
jb
xchg
sbb
xchg
jnp
sarl
xchg
and
fisubrl
mov
cs
mov
cmpsl
lahf
fstpt
loope
insb
xchg
pop
sub
test
sub
es
lcall
cwtl
or
add
dec
adc
pop
lock
test
jmp
cmp
cld
lcall
mov
dec
mov
fcmovb
test
push
test
ret
negl
mov
bound
pushf
int
push
inc
movsb
jns
loop
js
jle
pop
lea
ss
pop
or
cld
xchg
fs
sub
add
push
lds
enter
jb
outsb
sbb
in
mov
mov
fdivl
lea
lds
mov
jle,pn
fcmovb
fwait
cmp
xlat
inc
or
pop
dec
into
mov
mov
pop
mov
rolb
xchg
pop
movsl
jl
pop
or
jle
jae
hlt
leave
xchg
jg
jp
rcrb
xchg
test
lahf
push
mov
mov
push
in
adc
lods
xor
pop
jmp
cmp
loope
push
jae
xor
push
bound
cmpsl
push
out
roll
bound
and
jns
inc
sbb
jns
popl
mov
jmp
dec
pop
adc
in
aaa
jecxz
cmp
inc
cmp
pop
pop
clc
int3
fs
test
stc
jp
or
adc
mov
xor
aad
outsb
aaa
push
adc
xchg
mov
pop
or
inc
insl
js
pusha
mov
repnz
insb
sub
push
popa
shll
sbb
mov
pop
lahf
repz
xchg
push
jp
sbb
sahf
cmp
xchg
dec
xchg
mov
inc
cmp
imul
mov
add
inc
xchg
pusha
fldcw
jecxz
outsb
and
sahf
call
mov
sub
ds
insl
jno
and
outsb
pop
xor
mov
push
jecxz
jb
mov
jo
notl
or
xorb
mov
andb
bound
add
psrlq
stc
cmc
hlt
sub
xchg
jp
pop
insb
outsb
movsb
loopne
test
mov
push
outsb
xchg
cmc
ret
jp
dec
mov
loop
loop
fwait
jne
icebp
push
loop
int
js
sub
fyl2x
pop
stos
dec
pop
add
mov
mov
xor
cld
cld
cmp
lods
repnz
ss
mov
and
adc
push
adc
pop
xor
xchg
mov
inc
into
js
aas
mov
pop
xor
fldt
in
mov
and
sbb
dec
fs
xor
xchg
push
cmpsb
int
add
mov
or
int
push
pop
adc
lret
mov
leave
add
les
lea
cmp
ja
push
dec
not
loope
pop
lret
mov
lods
sbbl
sahf
pop
push
ret
lcall
cs
je
pop
in
pusha
inc
scas
test
sarl
xor
and
popa
and
inc
push
fcomps
out
pop
pushl
and
dec
shl
insl
das
lret
cli
divl
xchg
adc
mov
out
jmp
stos
cmc
rorl
clc
int
cmpsb
pop
push
mov
shll
push
in
mov
dec
lcall
leave
test
out
jle
ss
pop
adc
sub
cmc
jp
cli
ss
cli
lds
jge
out
mov
cmp
int
loopne
out
cmp
lret
inc
pop
arpl
test
arpl
pop
mov
mov
cld
inc
mov
out
dec
adc
aas
push
mov
jmp
mov
out
movsl
mov
mov
push
jae
fs
popa
je
inc
dec
pushf
cmpb
adc
insb
pop
sbb
mov
cmpsl
negb
adc
adc
xor
mov
sahf
jge
xor
movsl
pop
push
add
cwtl
in
lcall
and
lods
and
jnp
sbb
or
cmp
rcl
rorb
cvtps2pd
push
mov
mov
pushf
adcb
mov
push
aam
sbb
lods
enter
cmp
xchg
xchg
or
pop
sbb
cs
pusha
ljmp
cmc
cmpsl
and
mov
or
mov
ljmp
shr
push
daa
jne
out
repnz
and
push
xchg
sbb
nop
outsb
clc
into
mov
pop
cmp
insl
mov
ficompl
rcll
icebp
sbb
sbb
loope
scas
data16
lea
test
mov
aaa
sahf
sub
lods
scas
call
mov
cmp
cmc
pop
bound
dec
mov
fsubrl
inc
mov
sbb
scas
pop
fwait
in
adc
adc
or
pop
repnz
sub
repnz
add
imul
icebp
mov
fildl
pushf
iret
fcomp
pop
sbb
pop
cltd
xor
xchg
cmc
pop
iret
fwait
push
inc
js
inc
mov
mov
mov
aad
addr16
stos
mov
push
int3
aaa
dec
xchg
xchg
leave
je
loop
pusha
jae
mov
subb
inc
test
sub
dec
mov
or
sbb
lods
aad
xchg
mov
icebp
iret
jae
mull
aas
mov
pop
dec
xor
dec
out
and
and
or
adc
sbb
and
decb
sbb
lock
divps
jae
cli
test
or
test
xchg
imul
xor
mov
mov
aad
out
shrl
inc
cmpsl
stos
sub
paddd
sub
rcrl
ror
pop
imull
sbb
dec
movsb
arpl
cmp
dec
or
rorl
mov
dec
scas
je
and
decl
jl
ror
cli
jp
and
cmp
pop
mov
add
mov
fbld
push
inc
outsl
mov
repz
lods
jmp
pop
dec
jp
push
jecxz
stos
loope
stos
jmp
cmp
adc
sub
cmp
notl
mov
push
fs
or
mov
jo
xchg
mov
loop
mov
repnz
pop
sub
jmp
nop
sti
jecxz
and
xchg
sub
mov
loop
jle
scas
dec
mov
mov
cmc
lcall
fldl
or
ret
jmp
mov
jmp
movaps
fcoms
outsl
add
push
sbb
test
adc
loope
out
bound
or
popf
repz
enter
push
and
adc
outsb
xor
lcall
jne
movhps
xlat
mov
lods
mov
dec
cmp
int
movsb
sub
lds
push
fld
xchg
popf
enter
aad
xchg
int3
movsb
arpl
imul
in
xchg
dec
imul
sbb
lahf
or
xchg
inc
sbb
in
cmpsl
push
mov
aas
jbe
lods
in
sahf
and
rcrl
rclb
mov
jle
int
std
shll
jbe
sbb
cld
test
dec
cmpsb
jg
xlat
bound
out
and
out
flds
push
repz
loopne
mov
inc
sar
mov
imul
mov
cmp
sbb
enter
bound
mov
cltd
aaa
and
add
mov
adc
stc
inc
pop
les
idivl
xor
xor
add
test
mov
fisubs
xor
dec
loop
and
cmc
jl
cltd
mov
aaa
stos
fs
inc
cmpsb
adc
insl
ss
dec
test
pop
cmpsb
xchg
mov
mov
ret
xor
push
outsl
cmp
or
rcrl
shlb
sarl
stos
inc
sub
jno,pt
fcoml
das
and
jne
pop
iret
rorl
xor
inc
lret
js
gs
popa
cltd
adc
pop
xor
ficompl
xchg
xchg
xchg
mov
aad
imul
and
call
insl
data16
int
mov
cmpsl
cmp
jmp
pop
adc
fcompl
jmp
sbb
adc
sbb
pop
jp
stos
or
mov
push
ss
inc
mov
in
push
sbb
mov
mov
or
push
add
mov
pop
mov
mov
mov
lcall
pop
mov
push
lea
xchg
dec
movsb
pop
or
xor
cmpsl
arpl
add
mov
pusha
xlat
fdivl
add
pop
push
je
mov
int
fadd
jo
pop
cmpl
jne
scas
cmp
and
push
or
cli
inc
mov
add
dec
xchg
iret
dec
cmp
cmpsl
rcll
pop
sbb
mov
cmpsb
lahf
xor
outsb
jl
loop
inc
rcr
inc
test
and
int3
cmp
mov
mov
sbb
xchg
aam
sarl
sbb
jmp
inc
adc
ret
xor
cli
pushf
mov
les
cmpsl
mov
push
adc
enter
sbb
xchg
rorl
or
jns
mov
out
jnp
mov
clc
sbb
and
xor
aad
sbb
cli
jns
orb
or
dec
cmp
inc
sub
cmp
and
sbbb
mov
mov
add
cmp
adcl
loope
mov
shrl
push
lods
movsb
push
ror
push
push
lcall
decl
push
mov
js
lods
ljmp
push
aad
xor
pop
data16
loop
mov
shrb
and
sbb
push
in
or
les
adc
popf
das
dec
lret
fsubr
and
pop
int3
repz
pushf
fstpt
sbb
movsl
push
dec
test
imul
push
mov
hlt
inc
outsl
add
sar
pop
mov
jecxz
mov
mov
je
sub
lea
shrl
and
mov
xchg
inc
rcrl
sbb
jecxz
sbb
add
dec
repnz
jae,pn
test
test
push
or
leave
cs
iret
or
and
jo
mov
jne
sbb
rclb
mov
jge
push
pop
push
jmp
mov
xchg
out
je
in
cmpsb
aam
mov
xor
movzwl
cmp
lods
ret
andb
inc
xchg
mov
jp
out
cwtl
scas
or
insb
mov
and
inc
call
arpl
cmc
ret
cmc
xchg
fcompl
das
lcall
pop
mov
das
sub
stc
xor
or
pop
sahf
dec
jbe
mov
imul
in
dec
push
daa
push
nop
dec
in
sub
in
aas
and
jbe
dec
xlat
sarb
pop
rorl
fsubrl
inc
cmpsb
std
adc
imul
jbe
in
shrl
xchg
fstpl
inc
cmpsl
nop
mov
xor
fs
loopne
mov
pop
test
jmp
adc
loope
lods
push
push
mul
mov
add
pop
pop
loope
dec
push
ret
rol
cld
jno
pushf
dec
iret
lods
fwait
mov
aad
mov
andl
imulb
mov
xchg
and
mov
push
out
push
add
mov
stos
mov
popa
pushf
or
cmp
stos
scas
inc
mov
repnz
pushf
lret
sbb
aad
ja
scas
pop
leave
jg
cmp
data16
pop
pop
ret
sarl
jbe
or
icebp
jne
lret
mov
adc
cltd
out
xor
aas
cwtl
pushf
scas
xchg
add
loope
fcmovb
pop
outsb
jae
dec
pop
repz
cmp
sub
and
rcrl
aam
add
scas
cmpsb
rsm
mov
adc
jecxz
add
fiaddl
or
sti
mov
into
lahf
imul
adc
adc
jg
mov
hlt
popf
fdivr
aam
add
roll
in
push
loope
movsb
aad
and
fistpl
nop
inc
jle
bound
mov
imul
jmp
lds
xchg
pop
push
movsl
ret
incl
mov
sahf
mov
dec
xchg
stos
test
adc
sub
fdivl
adc
movb
dec
jb
shlb
cwtl
popa
inc
and
push
cld
sbb
mov
xchg
ljmp
add
xchg
inc
out
lods
sbb
jg
mov
lds
inc
jle
rolb
inc
and
sbb
xor
rol
addr16
xchg
inc
ja
scas
mov
cli
mov
mov
fdivp
out
xchg
shll
xchg
aaa
or
add
xor
ss
xchg
mov
pop
and
fs
pusha
std
sub
adc
dec
cmp
adc
push
loop
xchg
js
shl
in
ja
jns
jnp
xchg
repnz
dec
decl
out
outsl
mov
out
and
movsb
add
adc
push
add
cmc
addr16
mov
or
movsb
xor
and
test
clc
push
cld
sub
jmp
jbe
and
and
mov
test
mov
insl
sbb
cwtl
rcr
ficoms
leave
mov
mov
movsb
xor
in
push
call
push
arpl
cmp
arpl
insl
mov
rorl
lahf
jno
cli
add
xchg
leave
retw
shrl
lcall
lret
bound
adcl
shlb
jns
dec
lret
dec
std
inc
mov
movsl
mov
adc
inc
xor
jne
mov
pop
cld
pop
lret
lds
adc
push
icebp
mov
xlat
lret
mov
cmp
pop
dec
packuswb
mov
mov
xor
hlt
adc
cmp
cmp
aas
add
pop
icebp
testl
dec
or
xchg
jle
push
lods
lds
jecxz
aaa
sub
jbe
cld
ja
mov
jmp
insb
repz
jae
cltd
sub
mov
pop
cwtl
fmull
hlt
cli
aam
cmp
movsb
pop
sbb
lret
aaa
aad
mov
sahf
sub
cmp
pusha
dec
imul
sahf
jb
ds
dec
and
or
jb
pop
stos
and
jp
sbb
or
jg
mov
fbld
aam
pushf
mov
imul
xor
loope
rclb
in
rcr
rcrb
mov
gs
push
test
iret
shr
cmpl
jmpw
out
sub
jmp
xchg
mov
push
mov
push
or
daa
xchg
sub
sub
rcl
dec
cli
dec
jecxz
popa
inc
int
ss
push
push
or
loop
sub
cmpsl
xor
cmp
push
mov
mov
cmpsl
mov
out
testl
mov
and
push
and
mov
jge
lahf
movsb
ja
out
xorl
push
xchg
push
test
mov
mov
and
dec
cmp
pop
popf
push
jo
jmp
lret
push
adc
jo
out
es
fsubs
pop
mov
enter
iret
xchg
imul
cli
ds
jle
and
cli
rcl
push
rcrb
adc
add
pop
repz
imulb
dec
push
popa
idivb
call
in
ds
negb
or
jge
inc
fidivrs
jbe
movsb
outsl
add
shr
mov
mov
sub
leave
mov
xchg
in
and
loope
push
outsb
dec
jb
loopne
lahf
outsl
shll
decb
pop
stos
dec
push
lahf
jno
adc
mov
mov
mov
push
sbb
pop
rcll
mov
jp
adc
push
cli
inc
out
lock
pop
or
push
leave
jg
jns
lds
mov
push
fwait
mov
inc
mov
popw
push
pop
jg
or
out
push
add
dec
sub
mov
iret
xlat
ret
sahf
adc
or
sahf
sub
int3
movsb
std
icebp
das
jbe
cld
mov
and
inc
cmp
push
fmul
insb
les
js
int
add
push
fbld
push
pop
xchg
call
dec
loope
pop
imul
cltd
pop
rolb
inc
pop
jbe
mov
orb
int3
sbbl
xchg
dec
cli
jb
pop
cli
sbb
jp
out
jmp
mov
inc
dec
cwtl
cmpsl
xor
and
in
dec
icebp
fwait
push
adc
push
mov
add
adc
mov
outsl
inc
adc
fs
pop
lret
test
pusha
sti
inc
sbb
in
push
sbb
and
aaa
sbb
inc
testb
pop
les
inc
cltd
outsb
fdivl
adcb
jg
bound
dec
out
mov
hlt
in
jbe
lret
push
and
stc
fucomi
stos
xor
or
mov
stc
jp
std
mov
jnp
dec
mov
cmp
fxch
push
mov
dec
push
sub
mov
int
aad
fcomps
andb
adc
in
movsb
pushl
mov
pop
sti
scas
shl
out
xor
insl
cmc
sub
mov
jo
arpl
adc
lret
mov
xor
outsb
pop
mov
xlat
mov
and
jmp
jb
dec
out
dec
mov
test
mov
movsb
shl
vpmulhuw
aam
push
int
xchg
mov
jecxz
clc
xor
out
pop
cmp
dec
xor
cmp
bound
les
adc
dec
mov
ss
movsl
mov
xor
sbb
inc
mov
enter
leave
xor
in
add
js
mov
out
adc
insb
out
push
xlat
movsl
mov
cmp
cmp
leave
mov
xor
clc
xchg
cmc
fnstcw
add
sub
push
xchg
hlt
ret
sbb
or
jns
push
js
push
mov
gs
aam
dec
daa
out
and
or
sub
jno
std
or
sbb
popf
mov
test
sbb
shll
xchg
push
filds
xor
ret
xor
xchg
mov
xchg
ss
xchg
and
dec
xor
add
mov
mov
or
lds
test
fs
js
or
dec
pop
lret
cmp
xchg
sahf
jmp
cmp
dec
loopne
xor
sub
mov
out
fisttpl
das
les
or
in
adc
xor
jo
fcomp
lret
sar
xchg
popa
inc
xchg
or
pop
sbb
imul
ss
inc
inc
mov
mov
bound
fldt
xor
out
cmp
rorb
push
and
xchg
jbe
inc
ja
mov
rcrb
out
jp
xor
cmp
int
mov
lahf
inc
adc
in
dec
add
fidivs
sub
dec
daa
adc
push
jle
dec
sbb
outsl
xorl
sub
std
push
fs
sub
cmc
jle
mov
ja
lahf
dec
shrl
in
dec
les
xchg
daa
inc
mov
sbb
test
out
inc
sub
in
lret
or
ja
add
and
into
lahf
daa
push
fsubrs
add
jns
push
jecxz
mov
fstpt
fiadds
mov
daa
aam
jbe
cmp
jge
sbb
shl
ret
or
mov
gs
mov
pop
enter
push
push
andb
cmp
mov
sbb
dec
sbb
lock
jle
out
out
xor
adc
dec
mov
rcl
insl
ss
adc
adc
lret
and
mov
pop
mov
mov
sub
inc
adc
mov
adc
addr16
xchg
cltd
jnp
mov
xchg
mov
imul
lfs
aad
or
mov
movl
inc
push
mov
roll
xchg
in
negl
cmp
inc
testl
decl
push
adc
stc
xchg
inc
stos
fwait
mov
cld
pop
cmpsl
xchg
outsb
xor
or
leave
popa
leave
adc
mov
mov
cmp
sub
xchg
test
lock
hlt
outsb
decl
cmp
mov
jo
addr16
js
shlb
mov
or
mov
mov
and
lahf
lea
sub
pop
sub
mov
cmpsb
push
notl
adc
push
and
ret
addr16
mov
out
xor
fidivl
dec
ljmp
icebp
xlat
dec
pop
mov
pusha
rcll
stc
data16
jecxz
xlat
jno
mov
inc
xor
test
lcall
shrl
mov
insb
jo
insb
xchg
push
fisubrl
mov
push
sub
loope,pn
jle
dec
cmpsb
pop
inc
push
xchg
int
or
test
add
cwtl
shrb
int
loope
mov
lock
scas
test
in
adc
jne
add
rorl
dec
call
xchg
xrelease
aaa
in
pushf
sub
inc
divl
inc
ficoml
ret
xchg
loop
add
adc
jbe
jnp
cmp
mov
stc
out
mov
mov
insl
jmp
call
test
inc
pop
and
mov
mov
inc
jp
jne
xchg
jmp
xor
into
sub
std
pop
out
iret
xor
xorb
movsb
push
shr
ds
xor
lds
in
xchg
data16
dec
sub
mov
leave
mov
xchg
popa
jno
pop
inc
pusha
insb
push
fidivl
insb
push
sub
test
cld
fistpl
sub
lcall
les
mov
mov
sub
loop
out
add
jb
xlat
dec
or
loopne
jp
test
fs
stos
sub
push
mov
sbb
mov
rcll
loopne
pop
fdivrs
mov
lret
adc
call
xor
test
loopne
dec
sbb
rcr
gs
in
adc
jb
cld
mov
xchg
pop
jb
cmp
mov
fistl
cmp
cwtl
or
push
push
scas
rclb
mov
imul
nop
push
in
pop
stos
cwtl
outsb
mov
insb
adc
icebp
push
pop
shll
sub
aad
test
call
push
int3
rolb
or
mov
jne
fwait
pushf
in
rorl
xchg
icebp
test
sbb
aad
inc
loopne
pop
push
xchg
lods
mov
imul
les
hlt
lcall
int
arpl
stc
jb
addb
int3
push
jle
mov
mov
or
mov
cli
icebp
cmp
inc
lea
push
aaa
dec
adc
xchg
mov
nop
rcll
push
outsb
sbb
dec
mov
mov
sub
lret
push
and
js
jb
pop
filds
call
insb
xchg
lret
in
xor
rcr
or
push
movsb
cld
aas
cmp
out
pop
test
jns
or
jne
push
dec
into
mov
pop
aas
lcall
or
mov
xchg
xchg
cwtl
cld
hlt
and
es
sbb
inc
lock
insl
ret
jmp
out
mov
xchg
sbb
sbb
jae
sub
or
inc
mov
outsl
mov
lret
dec
add
in
mov
test
pop
mov
insb
or
dec
ds
popf
addr16
xor
hlt
cs
test
dec
cmpsl
arpl
jae
xchg
cmp
pop
cli
inc
insl
sub
roll
xchg
sbb
sub
push
lahf
jae
psraw
and
mov
push
sbb
or
dec
movl
jmp
mov
repz
mov
repz
fcomps
enter
test
dec
sbb
popf
dec
nop
es
jle
mov
andl
jno
inc
adc
xor
loope
add
aam
sbb
mov
lret
fdivs
mov
xchg
sbb
bound
outsb
ds
push
xchg
dec
bound
insl
mov
xor
inc
ds
push
ds
xchg
xor
dec
xchg
bound
and
xor
sbb
add
xchg
mov
lds
ljmp
sub
jge
int3
in
inc
pop
jge
stos
cmp
ss
jl
inc
push
imul
daa
int3
cmpb
lret
out
cmpsl
push
cmp
sub
movsl
subl
iret
mov
xchg
andb
mov
cli
dec
int
shl
jmp
mov
rcr
xchg
mov
dec
mov
adc
and
dec
cmpsl
icebp
insl
mov
cwtl
cmp
and
cwtl
subl
int3
fsubrl
jnp
push
fwait
inc
mov
sbbb
rcl
mov
pop
add
imul
add
or
jb
sub
push
adc
aam
icebp
loop
cmpsl
sbb
cmp
int3
jp
in
into
inc
mov
and
fstl
std
iret
ret
sbb
cld
jns
or
mov
sbb
xor
pop
cli
imul
cs
pusha
cltd
std
pop
push
mov
xchg
or
dec
xchg
push
ror
mov
dec
ret
push
lods
arpl
xor
sub
and
cmp
repnz
not
dec
dec
mov
pop
xchg
into
stos
cwtl
xchg
xchg
inc
dec
xor
pop
and
test
movsb
or
dec
cmp
clc
mov
sti
jg
out
sub
jb
bound
dec
cmp
in
outsl
jae
loope
xchg
jle
jge
aad
and
call
les
or
mov
in
mov
loope
leave
fistl
push
mov
bound
xchg
push
cmpsl
sub
cwtl
fadds
or
dec
lods
xor
addb
sub
inc
shl
mov
sbb
leave
push
mov
push
std
inc
dec
mov
cmp
popa
les
cmpsl
insb
push
push
or
mov
shr
jecxz
mov
pop
cmp
sub
pop
jb
arpl
lret
or
mov
or
in
xlat
movsb
add
rorl
jmp
es
inc
insb
mov
pop
stc
fxch
sbb
and
dec
loopne
sub
es
scas
roll
mov
lea
pop
jmp
lret
jg
cmp
pop
dec
push
mov
pop
push
xlat
mov
shlb
loopne
ret
pop
push
mov
dec
les
les
addr16
lods
adc
jmp
cld
add
or
mov
xor
push
push
sub
scas
das
push
mov
sbb
dec
in
xor
std
cmp
push
push
jecxz
icebp
or
repnz
ret
adc
ljmp
inc
rol
setg
push
adc
add
jmpw
inc
into
sbb
or
xchg
mov
dec
in
rcl
popf
sub
cltd
mov
pusha
aaa
push
push
insb
mov
andl
jge
or
fst
mull
xor
cld
rorl
mov
fisubs
loopne
and
lcall
shll
jbe
pusha
adc
xchg
jmp
push
lcall
leave
lds
adc
jb
push
insl
movsb
mov
fistpll
mov
in
and
adc
jecxz
ret
cmp
mov
imul
and
in
loope
fs
mov
inc
mov
inc
lods
or
ret
cwtl
mov
add
stos
loop
jae
fs
inc
sub
lock
inc
xchg
add
adc
sub
shlb
iret
les
adc
lea
in
push
dec
mov
adc
sbb
pop
cmp
xchg
lods
or
push
adc
in
push
les
rcr
pop
in
mov
repz
cli
fldl
push
xor
pop
xchg
push
cmc
xchg
ret
mov
push
mov
test
jle
mov
popa
mov
cmp
pop
xor
push
enter
fadd
in
or
adc
mov
int3
and
out
pop
sbb
jge
push
addr16
stos
inc
stc
xchg
aas
inc
pop
push
jecxz
cmp
and
mov
fimull
and
out
add
adc
or
mov
or
imul
lahf
lds
cmc
fistpll
lahf
ficoml
test
js
popf
aas
jne
stos
pop
pop
scas
mov
push
je
rcll
les
cmpsl
pop
and
ljmp
inc
cmp
out
lods
and
faddl
mov
mov
xchg
and
cmpsb
aaa
xchg
ret
lods
ja
loopne
jmp
in
test
outsl
imul
cltd
ret
dec
or
dec
xchg
xor
aaa
aas
int
sub
fdivrs
jl
pusha
cmovle
jle
inc
into
mov
enter
das
inc
lds
int3
adc
sub
stc
lock
bound
mov
je
inc
mov
and
pushf
mov
sub
lahf
out
mov
addl
add
jmp
imul
xchg
push
lods
pop
xchg
out
mov
mov
insl
leave
xor
out
mov
push
jae
and
lahf
mov
pop
in
and
jno
push
xchg
push
pop
xchg
cltd
dec
push
pop
cmpl
mov
mov
adc
add
mov
sbb
negl
ss
bound
mov
add
rcrb
cwtl
lret
dec
clc
pop
and
push
jbe
push
leave
lcall
out
orl
and
and
xchg
outsl
pop
jmp
scas
jb
xlat
mov
repz
jge
pop
out
or
popa
and
lcall
scas
or
and
sub
imulb
rorb
dec
shl
mov
test
test
fldl
push
insb
inc
dec
fnstsw
or
aam
ss
sbbb
cmpsl
fidivrl
sbb
das
out
and
fcmovu
daa
mov
frstor
leave
mov
mov
clc
jle
add
cltd
jnp
sub
mov
inc
sbb
pusha
dec
stos
add
mov
insb
push
test
adc
aad
mov
leave
push
call
stos
in
mov
shlb
outsb
outsb
sarb
shll
ds
leave
les
insl
mov
pop
leave
data16
cmpb
rcrb
mov
out
jae
cmpsl
out
xor
jnp
mov
mov
mov
pop
pop
daa
mov
aaa
dec
adc
and
and
jns
in
sub
push
cmp
sub
push
mov
jae
lret
hlt
outsl
xlat
mov
jge
hlt
ljmp
shlb
or
jge
scas
dec
rolb
pop
cmp
iret
divb
ffreep
xor
adc
nop
ficomps
pop
pop
push
sub
or
jge
and
in
xchg
aas
call
inc
mov
xor
insl
fmuls
pop
xor
scas
sbb
xor
clc
iret
cmp
cli
xchg
out
and
sahf
mov
sbb
mov
ja
aam
repnz
dec
mov
add
out
push
lea
dec
mov
push
push
testb
adc
leave
dec
inc
sub
jmp
sarl
cmp
in
cltd
popa
aad
cmp
test
lret
xor
stos
mov
mov
xor
inc
sahf
loope
data16
aad
fwait
sarb
cmpsl
mov
and
out
fdivrs
lea
loopne
dec
test
mov
xor
dec
add
adc
and
jae
add
lock
jge
fsubrl
ret
test
mov
inc
sbb
repz
mov
cmp
pushf
xlat
ljmp
lret
cwtl
fidivl
adc
push
cmp
pop
fistps
leave
push
push
xchg
jg
adc
aad
dec
rclb
out
jp
ss
push
adc
fiaddl
scas
dec
cli
test
cmp
mov
sub
mov
lcall
ds
push
pop
push
cmp
jge
fmuls
stc
pop
jne
xor
std
jl
punpcklbw
and
pop
add
xor
mov
pop
push
add
jno
lret
imul
inc
xchg
stc
mov
lea
jnp
cmpsl
pushl
scas
mov
daa
fiaddl
or
ja
idivb
cli
in
or
jmp
jo
cmp
mov
imul
rcl
push
mov
jle
xchg
add
jl
pop
add
rcll
sbb
shll
subb
dec
cmp
cmp
sub
push
inc
iret
je
leave
stos
dec
mov
mov
xlat
push
lahf
incb
cld
int
test
scas
dec
js
ficomps
mov
lcall
repnz
push
mov
cmpb
out
jge
mov
test
cmpsb
jne
loope
adc
mov
pusha
fwait
push
pop
add
aas
xor
sub
mov
mov
cmp
cmc
pop
mov
movsb
and
ret
jno
roll
push
dec
mov
jb
into
stos
adc
jecxz
call
push
call
pusha
pop
outsb
push
ret
mov
out
shll
add
inc
mov
jp
add
imul
mov
test
cmp
fisttpl
xchg
mov
pop
sub
rcl
loop
adc
sarl
jns
jno
add
imul
push
fwait
clc
and
push
and
sbb
xchg
dec
mov
sbb
pcmpgtb
mov
mov
xor
xchg
jno
ss
sub
divb
aam
push
rcl
pop
adc
setl
fisubrs
fildll
movsb
sbb
push
adc
inc
jb
push
push
jmp
testb
popf
arpl
jne
sbb
mov
mov
pop
xor
mov
xlat
cwtl
pop
shl
mov
sub
gs
fistpll
repz
scas
iret
push
sbb
loop
fmul
jns
orl
lods
cmp
insl
sarl
orl
ljmp
dec
pop
data16
jmp
cltd
adc
or
stos
out
ret
mov
outsb
mov
push
leave
pop
inc
outsl
push
test
push
test
scas
xchg
nop
push
mov
mov
int
pusha
xlat
addl
pop
aaa
fcomp
jno
in
pop
jl
cltd
xchg
fldenv
jnp
clc
das
sbb
mov
cmp
jg
cmc
fnstenv
iret
xor
mov
loope
arpl
dec
repnz
nop
inc
repnz
push
mov
mov
int
pop
mov
ds
cltd
pop
pop
mov
call
adc
xor
xchg
cltd
jecxz
sbb
stos
pop
ds
jno
cmpsb
jp
pop
push
ret
ret
jle
les
or
xchg
iret
movsb
fucomi
jo
push
jno
in
in
aam
push
jge
aaa
pop
inc
mov
push
jl
mov
call
mov
fwait
imul
jge
mov
loop
cmp
push
aam
add
es
mov
add
outsl
pusha
sbb
arpl
hlt
sub
int3
mov
inc
call
push
add
out
mov
mov
sbb
adc
ljmp
pusha
push
cmpsl
shl
sahf
jp
xchg
ljmp
jns
out
pop
dec
roll
jmp
call
jl
aas
sub
out
jle
iret
jecxz
push
push
mov
test
jge
sti
sub
loop
dec
int
dec
sub
lcall
inc
popa
push
mov
je
xchg
inc
xlat
jp
mov
cli
pop
or
jne
je
stos
pop
adc
daa
push
test
sar
test
adc
sub
adc
icebp
inc
push
loope
push
push
sbb
dec
std
aam
ljmp
stos
ror
mov
xchg
dec
mov
pop
mov
and
in
dec
out
or
imul
pop
fcom
dec
adcl
mov
imul
mov
ss
lcall
and
cltd
add
dec
sbb
xorl
or
push
sbb
or
jp
arpl
adc
xchg
movsl
cwtl
mov
in
jo
mov
push
xor
sti
ljmp
fadds
pop
sub
ljmp
sub
mov
lahf
pop
add
sbb
imul
dec
lods
jle
into
sbb
negb
adc
popa
je
mov
les
ljmp
push
and
das
and
or
mov
rcrl
lods
cmpsl
push
loop
xchg
cwtl
sub
jae
pop
push
stos
mov
aad
sahf
mov
mov
xchg
and
mov
mov
mov
xchg
add
repnz
jmp
cld
cmp
mov
mov
sub
cltd
cmp
pop
mov
imul
push
out
inc
or
fldcw
ja
jbe
test
push
or
iret
outsb
idivb
or
jno
cmc
inc
ljmp
pop
ret
cwtl
lret
jo
loop
js
lret
popf
daa
jns
sti
jp
cmp
fnstcw
pop
dec
in
mov
xor
mov
ret
push
fistl
xchg
lds
cmp
dec
or
pusha
leave
dec
mov
iret
bound
xor
insl
rorl
sarb
hlt
mov
sahf
sbb
js
lods
das
pop
mov
dec
and
mov
mov
sub
push
inc
pop
xchg
xlat
lea
or
lret
inc
nop
lds
xor
xor
fadds
jl
clc
pop
insb
stc
push
cld
iret
int
dec
or
push
or
aas
test
lahf
push
ljmp
scas
jae
rclb
rolb
scas
inc
jle
scas
and
popf
lret
je
fsin
mov
test
cs
push
jo
xor
mov
popf
data16
iret
ds
mov
test
loopne
pop
popa
add
or
dec
mov
adc
and
dec
jne
imul
mov
sub
fldt
add
test
sbb
and
stc
inc
addb
into
push
scas
fmuls
fcomp
add
inc
ljmp
jg
inc
sbb
jle
and
xchg
loopne
gs
pushf
pop
sbb
pop
cmp
or
sbb
sub
mov
adc
mov
push
mov
jmp
jnp
je
cmpsl
jb
xor
icebp
adc
inc
lahf
mov
rcrb
dec
adc
pusha
in
or
jno
inc
add
dec
fucomi
repnz
cmp
mov
test
dec
mov
adc
fcomps
jbe
sub
push
fadd
pop
jae
inc
into
scas
cmpsb
and
scas
std
and
lret
mov
fldenv
sbb
fsubr
scas
in
loop
cwtl
loope
popf
push
xchg
and
xchg
cmp
ss
lea
inc
jecxz
cmpb
leave
jne
sbb
mov
add
out
add
int
in
mov
cmp
ljmp
and
inc
out
lret
and
dec
or
xchg
js
lret
mov
pusha
repz
push
add
pop
mov
loop,pn
popl
mov
push
pop
dec
pop
push
icebp
imul
mov
and
ja
push
sbb
adc
xchg
aam
mov
sbb
cmp
push
adc
mov
and
push
das
aas
inc
mov
and
outsl
das
xor
sbb
mov
les
inc
stos
dec
divl
jl
dec
test
mov
xor
pushf
dec
cmp
inc
mov
out
pop
stc
out
test
shl
cmpsl
subl
add
push
inc
js
enter
insl
hlt
jmp
dec
addb
jmp
and
cmpsb
cmp
mov
mov
cmp
cwtl
and
add
stc
or
cmpsb
push
mov
in
cmpsl
mov
or
adc
inc
xchg
outsb
cmp
sub
call
adc
int
imul
push
es
sarb
out
or
push
add
pop
insl
aam
push
enter
sbb
sub
fsts
xor
adc
jbe
imull
mov
mov
leave
and
lods
leave
mov
cmp
lods
and
cltd
fldenv
push
loope
les
test
and
dec
push
pusha
add
xor
data16
pop
dec
vmwrite
xchg
cld
pop
daa
xor
push
outsb
hlt
or
xchg
repnz
cmpsb
mov
sahf
lods
orb
or
std
push
cld
sbb
pop
filds
out
out
in
sbb
mov
rcrb
mov
gs
cvtdq2ps
rclb
and
enter
insb
jbe
sbb
gs
or
pusha
fldcw
inc
repz
or
adc
lcall
push
sub
sbb
sbb
mov
repnz
lods
jl
imul
mov
or
inc
jg
mov
pop
rcrb
ret
jg
mov
cmp
es
aas
and
sti
insl
ja
ja
popa
or
addr16
push
xor
les
cltd
sbb
ja
mov
and
dec
add
push
jae
pop
push
iret
adc
push
jbe
mov
add
push
xor
jb
fsubl
movsb
fwait
jo
add
mov
inc
cmpsl
sub
adc
jne
lret
pop
or
jbe
mov
sub
jb
or
cmp
and
mov
imul
ds
arpl
sahf
imul
test
mov
stos
pusha
fs
shl
cmp
adc
xor
jecxz
int3
cmpsl
test
xor
dec
adc
out
clc
in
stc
xor
xor
enter
pop
lcall
cmp
dec
int3
jecxz
sbb
hlt
cmpsl
roll
shl
decb
push
data16
or
gs
repnz
mov
xchg
testl
dec
rcrb
pop
xchg
loopne
xchg
leave
popa
repnz
jb
inc
lods
jne
xor
repz
lock
inc
adc
cmpsb
inc
or
hlt
xor
inc
jl
mov
scas
test
inc
jnp
test
out
push
mov
sub
pop
and
xchg
pop
mov
inc
es
out
outsl
add
xor
test
das
dec
mov
add
mov
pop
jbe
jnp
stos
test
call
pop
and
xchg
inc
in
cmpsl
decl
jno
cmp
mov
in
cmp
push
jbe
jecxz
sti
mov
jmp
inc
ficomps
call
mov
les
mov
mov
outsl
fildl
aas
xlat
daa
loopne
cmp
out
ficoms
mov
jle
xlat
pop
pop
sarb
mov
inc
adc
shlb
test
lds
ret
sbb
jb
into
mov
pop
cwtl
mov
enter
fadd
or
popa
mov
test
dec
adc
dec
stos
jmp
pop
stc
adc
pop
cmpb
adc
push
pop
jle
add
out
sbb
call
pop
pop
jno
pop
iret
insl
jo
ja
mov
popa
js
clc
out
imul
push
and
iret
and
and
aad
pusha
scas
call
cltd
mov
lcall
fldt
fsubl
pop
orl
push
jae
xchg
lods
xchg
fistps
mov
dec
ret
leave
mov
shll
loope
setae
xor
aaa
outsl
pusha
pop
jo
mov
jge
nop
je
push
cli
ja
js
in
popa
stos
pop
mov
sub
js
add
inc
inc
xor
jp
das
mov
js
inc
rorb
jp
aad
inc
xchg
int
pushl
mov
xlat
mov
mov
mov
lret
repz
jae
jle
sbb
add
inc
daa
xchg
sub
sub
adc
add
repz
stos
int3
or
call
jae
sahf
neg
sbb
push
mov
and
lret
sbb
mov
xchg
stos
pop
loop
pop
fisttps
imulb
cld
fisttps
xchg
dec
outsl
aad
xor
add
fstpt
adc
out
xor
lcall
mov
inc
jbe
sti
push
sbb
cld
xorb
in
je
pop
sti
add
cwtl
sub
or
sbb
lock
xor
clc
push
xor
mov
add
outsl
jb
insb
in
repnz
pop
pop
jo
mov
ss
in
movsb
xchg
ret
loope
popf
jnp
mov
movsl
mov
xchg
fists
mov
xor
rcr
dec
xchg
sbb
xchg
enter
xor
mov
ljmp
dec
pop
fstps
mov
mov
inc
or
xor
into
fldenv
adc
sahf
xchg
sbbb
lahf
inc
lret
sub
or
push
lods
mov
sbb
jge
push
stc
dec
iret
scas
mov
sub
add
inc
dec
aam
iret
cwtl
pop
cmp
mov
lock
lcall
or
xor
popa
xchg
lahf
pop
sahf
popa
mov
add
lahf
insb
ljmp
push
jae
in
and
sub
aas
push
jb
adc
mov
test
sub
and
stc
inc
xchg
jno
jbe
insb
inc
addr16
shrl
ja
add
dec
jne
cmpb
fwait
cmp
sti
cmp
and
jb
push
adcl
int3
fnstsw
jno
cld
daa
lods
loope
mov
lock
add
xor
lds
mov
push
cmp
dec
movsb
and
jl
push
ret
in
add
test
inc
out
lret
call
shlb
push
outsb
lret
jno
and
popf
call
xor
mov
addr16
mov
add
rcrl
cmpsb
sbb
jo
xchg
fdivr
cmpsb
mov
sbb
insb
mov
jle
push
lods
int
pop
enter
mov
adc
mov
lods
repnz
pop
lock
loope
jecxz
call
aas
cltd
mov
call
mov
mov
into
stos
int3
or
iret
dec
clc
hlt
gs
adc
out
fcomp
bound
mov
ret
push
fstps
and
sub
ficomps
fstcw
fwait
sbb
test
adc
mov
sub
lret
lret
insl
pop
xlat
push
aam
ds
repz
inc
enter
push
in
sub
mov
orl
std
ds
pop
mov
adc
bound
loopne
xchg
repz
shl
xchg
out
pop
push
push
lds
ret
pop
mov
shl
mov
in
rorl
mov
loop
repz
cmpsl
pop
sbb
lods
xor
filds
ret
dec
add
push
cmp
inc
push
xchg
sbb
ja
ss
add
sbb
xor
negl
mov
lds
push
repnz
test
out
jg
jae
add
lock
add
push
pop
mov
mov
sub
mov
mov
shlb
pop
scas
pop
mov
mov
xchg
ljmp
repz
mov
cltd
cmp
outsl
out
in
xchg
jle
xchg
je
inc
add
in
stos
jbe
jge
aaa
push
inc
loopne
fs
pusha
sub
repnz
loop
dec
cmp
xor
jg
fbld
orb
daa
sbb
out
and
cmp
fs
inc
mov
cmc
fstl
addr16
in
add
mov
and
xor
dec
dec
aad
mov
xor
push
das
push
fwait
push
jb
sub
rcll
cltd
and
inc
xor
add
mov
mov
sub
xchg
inc
ljmp
mov
pop
ljmp
jmp
insb
mov
push
fdivr
inc
push
popa
mov
fiaddl
fldcw
ljmp
clc
mov
movsb
jl
dec
xor
mov
daa
ret
xlat
adc
or
hlt
cmc
gs
jbe
xor
fcmovbe
xchg
test
int3
aam
sbb
fnstcw
and
outsb
push
push
inc
cli
sub
fnstcw
add
out
mov
cmp
cmc
rcll
add
jecxz
sub
sbb
in
repz
jmp
xchg
pop
std
xchg
inc
test
mov
mov
fxam
lds
push
mov
ja
push
jle
sub
loop
out
pop
inc
xchg
and
sub
dec
push
in
rcrb
cltd
clc
or
cmc
into
scas
and
dec
and
xchg
shlb
mov
movsl
cmp
inc
xchg
xchg
and
pop
je
jg
jle
shlb
mov
sarb
movsb
xor
add
sub
xbegin
and
movsl
fadds
cs
fsubrs
jmp
sub
mov
rcl
or
cld
sub
sbb
push
cmpsb
push
cmpsb
lcall
ds
mov
in
ja
xor
xor
lret
add
shrb
test
icebp
jl
inc
pushf
add
mov
lcall
loopew
ja
jbe
pop
dec
pop
dec
xchg
add
or
xchg
or
jae
cmp
loopne
mov
loopne
dec
cmp
jns
xchg
jno
in
out
mov
sub
ret
dec
out
mov
sarb
and
sub
dec
mov
aaa
sub
ljmp
push
nop
aam
idivl
sub
clc
pushf
push
pop
pusha
loope
out
ret
std
pop
flds
into
jo
push
test
xor
pop
sub
daa
cli
xor
cltd
movsl
sub
int
mov
fcompl
inc
sarl
fiadds
inc
xor
add
lods
sub
jge
xchg
test
icebp
incl
xchg
adc
pushf
into
pop
xchg
cmp
xor
inc
xor
notb
adc
pop
mov
cld
sarb
fildl
cwtl
lds
imul
in
gs
jecxz
pop
dec
xchg
orb
js
insb
in
cmc
rol
push
pop
add
dec
cmpsb
sbbb
mov
cmpsl
packssdw
cs
cmp
pop
fidivl
jp
cmc
lret
dec
stos
in
int
push
arpl
icebp
adc
xor
jne
pushf
dec
inc
jecxz
lea
outsb
xchg
pop
xchg
pop
frstor
adc
xor
xchg
lret
scas
push
xor
fsubrs
cmp
jmp
jne
icebp
out
ja
adc
cmp
cltd
mov
pop
push
cmp
mov
inc
mov
xor
mov
aad
sub
filds
ret
fistpl
xchg
ret
sti
mov
pop
xchg
cmpsl
adc
test
or
push
sbb
insb
stos
test
jno
cmp
dec
pop
or
sub
bound
lahf
iret
cmp
ds
or
mov
cmpl
rorb
sti
push
sbb
push
inc
jno
add
mov
pop
pop
mov
lcall
adc
fbld
loope
hlt
xor
sbb
push
inc
fnstenv
sbb
shrb
or
push
mov
adc
mov
adc
scas
xor
insl
in
int3
cmp
xor
pop
fdiv
in
lahf
mul
sub
roll
stos
or
test
insb
in
sub
inc
cmpsb
xchg
sub
dec
hlt
jmp
adc
andb
jp
icebp
sbb
pop
decb
mov
cmpsb
cmp
rolb
xlat
ss
out
push
xor
add
mov
aam
stos
aad
mov
or
pop
insb
arpl
into
pop
push
arpl
das
imul
pop
inc
sub
sbb
push
push
mov
int
sbb
in
dec
jno
mov
pop
insl
inc
cmpsb
stc
mov
adc
aam
ss
daa
and
pop
popf
pop
in
pop
inc
cmp
xchg
inc
fnstcw
iret
add
or
push
inc
pop
adc
mov
bound
adc
sbb
icebp
pop
mov
adc
cwtl
pop
out
loopne
mov
out
pop
sbb
push
ja
aas
out
jmp
fnstsw
xor
arpl
mov
les
insl
push
inc
or
push
clc
lock
sbb
mov
test
mov
loope
hlt
aad
xchg
dec
cmp
or
int3
sbb
push
loopne
call
cld
and
stc
imul
inc
fwait
lock
ds
sub
cmpsb
test
ret
movsb
inc
out
mov
scas
adc
or
push
push
clc
pushf
popa
jge
repnz
jmp
in
jle
iret
pop
lret
out
xchg
push
mov
lea
ret
jns
jecxz
push
outsb
dec
ret
mov
cmpsb
test
xchg
push
test
adc
adc
mov
xchg
mov
dec
jge
mov
ret
lea
jle
adc
dec
ret
mov
lcall
inc
js
sbb
loop
aas
xor
cmpsl
and
cmp
jns
adcl
fnsetpm(287
inc
into
lds
pop
rcrl
scas
mov
or
inc
das
mov
test
pop
push
pop
push
mov
stc
push
leave
mov
pop
xor
inc
shl
inc
jae
pop
adc
and
push
or
lahf
clc
push
xchg
pop
pop
pop
rcr
jno
sub
adc
loope
ds
pop
les
aam
cmp
xor
icebp
jo
mov
int3
pop
stos
out
add
sti
cs
fwait
es
adc
jg
js
cmp
out
and
cmpsl
mov
aam
push
mov
jg
repz
jp
mov
scas
stc
jl
adc
pop
test
cmp
lret
lds
jecxz
notb
adc
nop
mov
adc
into
xlat
inc
and
ret
jno
push
cmp
sbb
imul
mov
es
sub
movsb
ficompl
hlt
pop
sub
js
hlt
sbb
lea
pop
test
sbbl
in
sbb
pop
loope
fxch
bnd
lcall
setnp
jp
xchg
std
imul
sbb
sbb
push
jl
lahf
rcrl
into
addr16
std
out
pop
iret
push
ret
dec
sub
adc
pop
rcrb
repz
fisubrs
movsl
jg
aas
je
mov
adc
jl
insl
icebp
aad
inc
mov
or
jl
test
jp
push
add
mov
add
pushf
mov
jmp
push
jl
call
jg
inc
cltd
push
addr16
jno
xchg
cmc
stos
fldln2
iret
dec
inc
sub
cld
loope
cmp
cmp
sub
pop
adc
or
and
cwtl
ds
xlat
movsb
fstl
mov
pop
cmp
aas
push
jecxz
mov
pop
adc
xorb
jg
ficomps
mov
mov
insl
mov
inc
out
push
mov
in
stos
jl
outsb
cwtl
mov
jp
or
dec
pop
mov
jno
xchg
mov
or
testl
lret
cmpsl
das
pop
cltd
xlat
std
mov
repnz
fldln2
rorl
xor
sbb
ja
bound
pop
rolb
shll
sub
mov
int
pushf
push
cs
cmc
push
mov
cli
in
clc
push
mov
test
pop
dec
mov
push
movsl
jo
or
vmread
aaa
xor
sub
jne
mov
jmp
out
fnstsw
scas
xlat
jns
cmp
fs
repz
popf
sub
inc
add
xchg
push
sub
lods
xchg
stos
stos
aas
int
pop
pusha
decl
mov
fwait
dec
adc
push
ljmp
add
pop
je
push
xchg
inc
push
jl
xchg
jmp
int
movsl
sub
lahf
shlb
imul
jae
icebp
xor
sbb
call
adc
and
jo
outsb
ret
out
cmp
stos
mov
rcrl
jno
out
and
cmp
xchg
cmp
sarl
cmpsb
mov
iret
iret
aas
shll
sbb
dec
mov
pop
xor
xchg
jl
jecxz
ja
pusha
sub
lret
push
orb
pop
xchg
dec
popf
mov
inc
dec
cmpsl
insb
mov
sbb
lea
pop
push
jg
daa
lcall
add
loope
push
and
int
int3
or
movsl
aam
xchg
pop
sbb
add
scas
lds
filds
or
std
push
out
fldt
mov
mov
iret
xchg
outsb
add
pop
or
dec
jle
inc
mov
test
imul
ja
push
mov
sbb
push
std
xor
push
addr16
pop
mov
rcr
adc
stos
rcr
movsb
sub
and
inc
in
add
dec
jb
adc
sbb
lahf
aaa
dec
cmpsl
dec
mov
cmpsl
arpl
push
ljmp
vpsraw
scas
dec
dec
cmp
mov
test
cwtl
ret
mov
iret
dec
cmpsl
sub
sub
dec
xor
test
rcll
add
insl
lahf
dec
cmc
cmpsl
mov
push
out
rorb
mov
pop
fistpl
add
mov
ss
jp
and
stos
andl
add
out
fmull
pop
mov
jae
fbld
push
or
stc
xor
add
mov
mulps
xchg
bound
mov
stc
lcall
mov
adc
xchg
ja
out
mov
jbe
and
and
add
jmp
mov
and
ja
lcall
xor
inc
leave
xor
push
and
test
mov
ret
ljmp
jnp
mov
add
iret
mov
dec
push
sbb
inc
mov
fistps
cmpsl
test
rorl
into
inc
mov
ret
scas
sub
lods
fs
push
mov
lock
cmp
aad
pop
mov
sbb
mov
adc
and
pusha
in
aaa
jg
push
movsl
push
daa
pop
xchg
hlt
fcom
xor
sti
sub
inc
add
insb
push
sbb
js
stos
es
mov
xchg
xor
js
dec
mov
in
xor
aaa
rol
lahf
idivl
aad
pop
cmp
test
stos
ljmp
xchg
mov
incl
outsb
xor
popa
or
sub
aam
xchg
sub
inc
daa
add
aam
inc
mov
insl
icebp
pop
lahf
mov
pop
inc
inc
ds
leave
pop
lret
add
push
movsb
aad
and
sbb
iret
push
iret
dec
mov
icebp
pushf
stos
pop
xor
push
jae
inc
cmp
or
mov
dec
xchg
dec
mov
lods
inc
sahf
and
aaa
and
xchg
int3
leave
inc
mov
sahf
fdivs
xor
adc
jno
lea
idivb
iret
mov
aad
add
dec
aad
cli
fwait
mov
imul
movsl
sub
inc
sbb
lahf
jge
pop
adc
js
jmp
mov
cmpsb
imul
jecxz
fs
jae
aaa
sbb
and
mov
jl
sarl
inc
sbb
hlt
cmpsb
scas
cmp
or
mov
add
arpl
mov
mul
sahf
pop
push
ret
hlt
adc
sub
xchg
ret
fucomi
mov
cs
mov
cmpsb
addr16
cwtl
mov
outsb
sar
adc
scas
mov
jmp
rorl
sub
stc
aad
inc
and
pusha
lock
scas
imul
cwtl
jo
pop
lret
dec
int3
push
mov
fs
or
fwait
rcll
movsb
dec
or
jo
mov
ret
xchg
cld
enter
ret
inc
aam
pop
and
xchg
pop
out
pushf
test
scas
dec
sub
jmp
jae
xchg
push
and
roll
and
rol
cmp
sarl
pop
sub
pop
jge
nopl
pop
dec
mov
in
in
or
inc
xchg
cmp
dec
fldt
movsb
ret
and
ja
jns
or
cmp
xor
fidivl
mov
push
call
out
mov
jecxz
add
leave
xor
sbb
stc
adc
dec
sub
mov
out
data16
sti
sahf
sub
xor
sbb
cmovp
mov
int
xor
dec
xor
pop
je
out
loopne
add
ljmp
sbb
add
orl
leave
dec
jno
outsb
xor
cmp
inc
shrl
xor
mov
xor
fs
add
inc
xor
xchg
jbe
or
adc
aas
xor
fidivrs
out
loopne
xchg
movsb
fidivs
inc
subl
lock
cmp
movl
mov
sub
cmp
inc
add
test
je
lret
sub
fimuls
push
lock
loope
sbb
test
popa
in
xor
je
and
stc
and
movsl
push
and
xchg
insb
or
lds
repnz
adc
addl
pop
ror
cli
adc
xor
jo
mov
lret
sarb
int
pop
dec
add
inc
sbb
aaa
adc
mov
mov
inc
adc
aaa
mov
arpl
test
adc
cld
mov
cmpl
add
cmpsl
outsl
cltd
out
xchg
add
lock
out
adc
sub
fisttps
and
or
inc
push
gs
pushf
xchg
or
nop
xchg
imul
aaa
push
pop
cmp
mov
into
jecxz
in
mov
dec
xor
jle
push
sbb
outsl
cli
repz
xor
and
jae,pt
pop
into
mov
popa
loopne
setnp
das
sub
sbb
or
nop
sbb
popl
ds
popf
lcall
mov
pusha
flds
and
inc
jae
lods
sahf
xchg
mov
mov
insb
cmc
inc
rcr
pop
push
int
scas
cltd
inc
outsl
gs
incw
rcrb
pop
push
inc
xchg
iret
jp
shlb
xchg
cs
or
cltd
xchg
inc
cld
adc
mov
shlb
jmp
roll
xlat
cmc
cltd
sbb
sti
jg
loopne
mov
outsb
cmpsb
movsb
es
push
andb
aas
popa
mov
pop
movsb
repz
test
fstps
test
xor
lods
jp
push
fisttpll
xor
andb
push
repnz
dec
das
aad
loop
push
push
adc
shll
mov
rorb
stos
inc
cwtl
pop
movsb
lods
xchg
scas
pop
in
sub
int
add
inc
and
orl
mov
cmc
fsubrs
jg
aaa
addr16
xor
les
cmpb
mov
scas
mov
push
cmp
sar
mov
cmp
pusha
std
inc
pop
lret
pop
add
cltd
adc
out
dec
aaa
pop
hlt
jg
in
pop
ss
xor
sti
lahf
out
test
sbb
stos
mov
aad
sahf
push
xchg
mov
out
push
xchg
jno
repnz
lock
sub
adc
gs
dec
cmpsl
cwtl
test
or
ja
mov
mov
ss
adc
sarl
test
rcl
jb
sub
adcb
lret
jno
push
lods
pusha
dec
push
repnz
fcoms
mov
pop
mov
mov
divl
flds
add
mov
shlb
lret
cmpsl
jns
pop
dec
movsb
jbe
pop
popa
mov
mov
push
sub
cmp
sub
xchg
fistpl
mov
xor
fldcw
or
sbb
pop
cmp
or
push
sbb
jno
or
ljmp
adc
xchg
push
test
add
imulb
cli
pop
ret
push
pop
je
movsb
xchg
mov
add
data16
cvttps2pi
dec
add
shrb
pop
sbb
adc
mov
insb
inc
aas
pop
icebp
cmp
pop
push
mov
mov
sub
js
jge
adc
sbb
add
and
push
mov
pop
xor
pop
jl
js
outsl
fiadds
cli
add
sti
adc
or
in
daa
jb
dec
push
cs
jbe
dec
sar
or
flds
mov
lret
dec
and
insl
imull
mov
push
test
xchg
push
dec
inc
out
push
adc
adc
pop
xor
push
lahf
int3
xor
movsl
mov
into
cmp
cli
in
xor
mov
jbe
dec
cmp
lock
cmc
mov
mov
js
or
add
fisttps
in
pop
pop
cmc
test
sub
sbb
leave
lret
mov
je
and
out
out
ja
mov
ret
xlat
and
mov
push
lret
or
sub
das
lret
je
test
lea
fxch
add
mov
insb
pop
xchg
nop
adc
mov
xor
mov
add
popf
push
aaa
sbb
mov
call
push
pop
leave
notl
mov
mov
add
das
ss
add
popf
data16
cs
mov
adcb
jecxz
xchg
sub
pmuludq
mov
addr16
and
cmp
loopne
xchg
mov
and
sbb
inc
mov
aad
xchg
inc
insb
add
cmp
mov
push
jno
in
sub
decl
sub
add
xchg
outsl
push
jl
jge
rorb
lret
pop
fildl
and
outsb
xor
jbe
scas
pop
mov
inc
xor
dec
mov
ret
mov
mov
or
or
call
int
jmp
test
cld
rolb
mov
mov
mov
push
and
test
xchg
hlt
mov
lock
xor
mull
leave
pop
mov
popa
insl
or
xchg
cmpsl
mov
movsb
cmp
or
mov
shrb
movd
rolb
add
rcrb
cs
outsb
ss
sti
add
lock
xor
inc
lods
nop
test
test
sub
pop
fdivl
daa
aam
pop
cltd
sub
rorb
movsl
mov
jo
jmp
mov
nop
sub
aad
cmp
adc
loop
adc
xchg
rcrb
fcmovne
fs
stos
imul
fmull
mov
add
loopne
call
loop
mov
dec
jle
lret
mov
shrl
jns
rclb
adc
aad
jns
ds
aam
data16
add
xchg
dec
push
sub
mov
dec
sub
out
pop
push
faddp
sub
mov
xchg
shlb
mov
xor
jle
cmpsb
int3
mov
inc
loop
shl
in
cmpsl
jg
int3
sbb
mov
ss
imull
sbb
push
nop
inc
pop
jae
inc
jns
pop
sar
iret
mov
push
sbb
mov
popa
jmp
mov
pop
add
leave
mov
pop
pop
xchg
test
dec
clc
gs
rorl
and
push
mov
jb
pop
or
mov
pop
inc
cmc
add
sbb
mov
inc
adc
roll
pop
add
lea
pop
hlt
sbb
pop
stc
pop
and
test
xchg
pop
mov
in
inc
lea
nop
inc
fists
rcrl
push
mov
ret
fcomps
sub
std
lods
pop
jl
push
inc
sti
std
and
mov
jb
mov
es
mov
jns
ja
loope
std
jmp
sub
out
test
lods
pop
ds
mov
addr16
lods
inc
and
nop
mov
inc
push
fs
inc
push
in
aaa
cmpsl
or
jo
aaa
push
inc
std
pop
sete
jl
adc
sbb
test
xor
movq
test
ficomps
add
adc
push
jle
sbb
jae
pop
sti
or
sub
stc
enter
lea
ja
and
cmpsl
into
pop
mov
scas
jecxz
or
fisubs
mov
insl
leave
xor
repz
icebp
das
jns
inc
inc
shr
push
add
mov
xchg
cmpsb
xor
add
clc
hlt
je
inc
xchg
movsl
jge
pop
sti
lret
sbb
pusha
dec
add
inc
mov
fabs
push
adc
push
fisubl
inc
in
dec
rcrl
pop
lock
jnp
dec
inc
push
push
xchg
adc
outsb
test
hlt
mov
ljmp
mov
or
cmp
inc
adc
and
pop
sub
sub
cmp
mov
rcrl
hlt
and
cltd
mov
cmp
fwait
add
xor
sti
xchg
push
ror
push
gs
sbb
scas
fdivrp
jns
mov
lret
sbb
mov
in
rorl
rcll
xchg
and
mov
push
push
mov
pop
jnp
leave
aad
es
xlat
mov
cmpsl
push
jb
daa
das
aam
sbb
sbb
lcall
xchg
xor
mov
in
fsubs
and
pop
call
into
push
int3
loopne
stos
xchg
jae
jno
cli
pop
movsl
fs
stos
add
xor
and
rolb
add
xchg
hlt
push
movsl
in
and
dec
mov
pop
fisubl
out
jg
mov
dec
xchg
pop
subl
shll
cmp
int3
inc
mov
lcall
jecxz
popf
mov
xchg
mov
pusha
in
scas
ds
or
cmp
shlb
ficomps
add
ja
into
inc
cmp
sbb
cmp
adcb
mov
or
and
dec
popa
fdivl
stos
mov
mov
jne
cmp
cmp
daa
pop
cmpsl
jp
dec
stos
daa
das
sbbl
sbb
movsb
lahf
test
xchg
lods
or
in
jp
addr16
leave
dec
lret
or
sbb
fs
lock
insl
bound
in
jl
movsl
in
push
lcall
out
cmp
pop
int
push
dec
cwtl
push
xor
sbbb
mov
push
lock
sub
mov
and
jp
cwtl
and
mov
adc
push
nop
insl
lahf
mov
mov
cwtl
and
daa
xchg
inc
inc
inc
bound
sbb
shll
mov
sub
sbb
lret
xor
pop
int3
mov
test
outsb
and
mov
aad
lea
sub
or
les
cmpsl
dec
pop
fidivrl
inc
jp
pop
insb
xor
xchg
in
sbb
and
rcr
insl
and
shlb
mov
or
xor
incb
mov
pop
imull
mov
inc
jno
mov
test
mov
aad
push
inc
ret
lret
push
andb
inc
sub
mov
sbb
in
faddl
inc
mov
xor
insl
xchg
daa
xchg
adc
mov
sahf
jbe
pop
sbb
stos
test
insb
mov
dec
xchg
inc
or
push
mov
adc
out
in
insb
inc
mov
lret
push
and
call
xor
dec
leave
ljmp
ret
push
in
push
cmpsb
stc
and
add
insb
and
cmc
fs
mov
in
aam
clc
jmp
data16
out
mov
mov
outsb
mov
stos
or
orb
jge
repnz
sub
loopne
in
push
pop
test
lock
fsubs
cmp
lods
pop
ss
push
jmp
int
cmpsb
rorb
cld
loopne
ss
lea
fdivl
xor
arpl
mov
mov
push
dec
sar
lds
xor
inc
addl
inc
jae
xchg
stc
inc
sbb
repz
xchg
pop
mov
aas
lcall
lret
sbb
push
fwait
push
mov
insl
insb
jae
loope
push
xor
std
ret
jae
in
test
mov
jns
xchg
outsb
out
push
and
mov
xorb
inc
subb
cmp
cmp
cmp
ret
cmpsl
mov
sub
mov
psrld
cld
pop
push
mov
mov
out
pop
daa
dec
adc
cli
xor
stos
stc
std
xchg
je
lock
mov
sbb
xor
adc
ss
lock
mov
pop
fbld
mov
nop
test
adc
scas
mov
pop
jnp
mov
ljmp
aad
push
inc
inc
shl
pushf
or
adc
inc
dec
lods
jmp
test
xchg
sub
pushf
repnz
or
pusha
lcall
push
nop
jns
pop
mov
enter
jecxz
hlt
or
jnp
pop
cmp
aas
pusha
scas
fisttpll
sub
and
frstor
push
mov
or
mov
push
xchg
ficoml
push
je
ret
pop
into
push
stos
sub
cwtl
bound
pop
jbe
push
mov
mov
xchg
lock
cmp
test
setbe
ret
mov
adc
inc
inc
add
pushf
cmc
cli
mov
mov
adc
sar
pop
xor
outsb
push
push
sbb
adc
mov
das
mov
arpl
mov
jge
enter
cltd
int
push
inc
jecxz
test
imul
add
fucomp
stos
repz
mov
out
xor
and
outsb
mov
sbb
inc
ss
mov
mov
repz
inc
shll
sub
and
out
call
xlat
xorl
xorl
test
push
loop
or
cmp
mov
xchg
fdivs
dec
fadds
mov
pop
jge
xchg
outsl
adc
lock
mov
inc
int3
add
xor
outsl
aam
sub
jp
lcall
cmp
ss
scas
loopne
clc
lods
std
jmp
xchg
divl
dec
stos
das
hlt
push
jo
mov
and
or
out
lds
es
shrb
adc
xchg
shrb
orl
enter
data16
cmpsl
aaa
dec
jmp
push
scas
jno
lahf
xchg
xor
xor
repnz
imul
inc
cmpsl
lock
mov
rcll
jbe
out
inc
xor
mov
ret
inc
adc
test
add
lods
mov
insb
cmpsl
outsl
mov
nop
jae
test
dec
and
mov
cmp
cs
dec
hlt
pop
bsr
xchg
scas
mov
insl
mov
clc
in
inc
xor
adc
aam
loopne
inc
mov
xor
les
xchg
scas
pop
imul
mov
mov
fdivs
insl
cwtl
popa
adc
insb
scas
pop
div
add
jnp
cwtl
xchg
fldt
mov
cmpsb
and
pop
mov
or
jb
inc
sbb
fcmovbe
stos
pop
out
call
test
xor
sti
icebp
sbb
lcallw
xor
sbb
mov
xchg
xor
jns
mov
stos
cmc
test
jne
inc
iret
idivl
inc
cs
jns
cmpsl
adc
lcall
fsubs
adc
aas
jl
xchg
dec
jae
jmp
push
jae
xor
jnp
addr16
in
lods
outsl
or
out
xchg
sbb
int
mov
loop
inc
adc
dec
int3
lahf
pop
lret
mov
sbb
enter
sub
pop
mov
add
add
sbb
jecxz
in
xor
insb
dec
in
dec
stos
add
jns
lods
mov
xor
fdivl
mov
sub
adc
pusha
arpl
sub
push
mov
sub
aaa
fsubs
sbb
pop
lods
push
aam
jl
test
xor
adc
mov
mov
imul
push
xor
and
pop
pop
and
imull
es
gs
jle
pop
sbb
jl
enter
jmp
das
and
push
sub
mov
and
xchg
adc
jne
or
xchg
mov
hlt
aad
sbb
stc
addr16
ljmp
add
or
sarl
lahf
mov
jmp
int3
pop
mov
cmp
lea
mov
fbstp
cmp
je
insl
add
inc
arpl
enter
jge
adc
fsts
add
fldcw
hlt
dec
frstor
adc
mul
push
push
xlat
adc
popf
rcll
xor
jecxz
lds
rorl
sbb
pop
call
xchg
sahf
inc
rol
fs
jmp
jmp
enter
popa
jmp
and
pusha
inc
adc
in
xor
sub
fdivr
fldcw
arpl
cmpl
push
jne
or
lods
jne
lret
pop
and
addr16
pop
mov
lds
inc
stos
add
jbe
rolb
aam
adc
mov
mov
jb
adc
test
sub
or
sub
adc
lcall
lods
or
in
add
xor
repz
pop
in
and
in
sbb
out
outsl
subl
or
inc
popa
in
mov
out
sbb
push
movups
jne
aad
adc
xchg
pushf
jb
or
das
jp
dec
dec
cwtl
cmp
jae
or
jnp
icebp
mov
xor
int
mov
fucom
cmpsb
adc
test
imul
js
das
or
mov
repnz
add
aad
sbb
aas
lock
loope
das
sti
jns
push
movsl
push
jo
cmp
inc
js
xchg
shlb
adc
lahf
mov
adc
adc
arpl
sbb
pushf
jbe
xlat
jle
cmc
lock
mov
enter
push
inc
fldcw
pop
mov
int
out
sbb
sub
and
and
cld
sub
sub
loope
fldenv
sub
lock
insl
adc
test
cwtl
jmp
jle
jns
pop
fstpt
nop
rcrl
xchg
jbe
cmc
mov
lds
pop
pop
fs
lret
adc
imull
loope
imul
movsl
ret
jbe
pop
int3
ret
cli
leave
repz
imul
fldl
jno
xchg
cmp
adc
sarb
addr16
cmp
cmovne
mov
push
sbb
icebp
mov
daa
loopne
inc
fisubrs
scas
mov
in
pushf
dec
ss
and
ret
add
xlat
clc
mov
jo
popa
int3
inc
cwtl
in
fsubs
cmpsl
xor
aad
in
push
sub
mov
jmp
cmp
movsl
mov
sahf
rcrl
sbb
pop
cmp
or
daa
add
xor
ljmp
int
push
mov
sub
push
sub
ds
fs
fs
int3
sbb
mov
out
inc
es
cmp
lea
inc
pop
repnz
adc
lods
inc
filds
loop
adc
adc
jns
jbe
int
idiv
mov
mov
jns
dec
inc
addr16
aas
orb
fwait
adc
sub
std
cmpsb
scas
dec
insb
adc
popa
test
jo
dec
fs
dec
dec
mov
push
in
lock
lods
je
cmp
cltd
cmpl
sti
popf
mov
sbb
dec
pop
cld
cmp
or
jg
xchg
dec
mov
fistl
jge
xchg
jae
call
cmp
addr16
xchg
xchg
or
mov
push
mov
xor
ret
inc
add
xchg
std
adc
jns
mov
sub
adc
push
outsl
jge
mov
sub
popf
add
fmul
dec
scas
outsl
adc
xchg
hlt
push
in
es
cmpsl
imul
sbb
xchg
dec
push
lock
les
inc
enter
xchg
hlt
mov
mov
dec
es
xchg
leave
push
lods
cmp
mov
jl
adc
pushf
scas
pop
stc
mov
xchg
mov
ds
inc
jbe
daa
imul
mov
jno
fmul
aad
sub
inc
je
pop
add
inc
xchg
or
adc
jecxz
rol
jns
jp
push
insl
repz
push
movsb
call
mov
sub
rcll
mov
sub
adc
pop
xchg
and
out
inc
xlat
dec
pop
in
cli
cmp
data16
cmpsb
sti
push
xor
cmpsl
pop
lods
xorb
scas
mov
leave
push
lods
sbb
mov
mov
xchg
and
and
lcall
and
sbb
inc
daa
push
pop
leave
mov
leave
inc
xlat
pop
nop
arpl
push
pop
mov
adc
fistl
and
pop
sbb
cmp
inc
repz
test
sti
mov
xchg
mov
imul
out
js
pop
add
cwtl
pop
jns
push
aaa
jne
lcall
push
cmc
inc
lods
push
or
enter
scas
js
loopne
cmp
sub
cmp
rol
dec
cmpsb
add
pop
add
push
adc
xor
pop
hlt
push
or
ljmp
outsb
mov
dec
mov
hlt
in
data16
adc
lret
cltd
sbb
or
or
or
jl
mov
pop
pop
dec
shlb
xchg
jp
mulb
jo
andb
aam
dec
mov
orl
dec
cmc
mov
mov
or
push
cmp
xchg
stc
cmc
mov
add
jge
lods
jb
push
cmp
mov
scas
adc
in
mov
test
sub
ljmp
fidivrs
scas
cltd
mov
scas
sbb
cli
out
xor
repz
jnp
inc
sbb
dec
inc
add
sub
pop
inc
test
sbb
push
movsl
sub
daa
addr16
jo
lea
xor
jg
dec
loopne
xchg
or
fnsave
pop
ljmp
adc
xlat
inc
inc
pop
enter
or
xor
xor
jmp
in
pop
dec
or
leave
or
pop
lcall
sti
mov
jp
adc
xchg
decl
jne
out
or
mov
out
xor
xchg
dec
fildll
cwtl
sahf
lcall
pop
lret
ljmp
mov
adc
jg
jmp
dec
push
stc
mov
mov
mov
add
bound
scas
pop
xchg
mov
add
daa
ljmp
dec
push
dec
sbb
jno
fisttps
inc
mov
iret
jno
pop
bound
cmp
fcomps
mov
and
jnp
dec
sti
data16
arpl
adcb
out
or
jns
test
in
mov
xor
dec
fsubl
imul
fsubr
cmc
cli
les
jo
mov
xor
and
jbe
push
pop
add
xchg
xor
addr16
cli
hlt
add
leave
sub
aam
jl
rcll
call
ja
xchg
and
pop
int
lret
xlat
popa
push
test
or
hlt
adc
movsb
out
aaa
jno
fsubrl
int3
hlt
adc
xchg
cmpsl
push
clc
aas
dec
or
dec
jne
repz
add
cmp
push
xor
aam
loope
sub
out
sarb
out
movsl
dec
inc
push
mov
lods
fcoml
sbb
loop
dec
loop
pop
std
daa
pop
aad
loope
fsubrs
xor
inc
add
jbe
jge
push
adc
mov
pop
dec
sarl
mov
or
or
inc
shll
inc
adc
lahf
xor
stos
in
outsb
fnstcw
push
out
cli
jne
popa
inc
push
gs
mov
pop
xor
ficoms
andb
jge
enter
or
in
mov
jmp
xchg
jg,pn
idivb
push
mov
mov
cmp
in
jb
cmp
repz
loop
mov
enter
jecxz
or
aad
mov
cli
lret
test
push
cmp
repnz
scas
or
mov
fimuls
xor
cmp
jae
add
test
cmp
out
dec
jmp
jbe
fisubs
or
out
xchg
inc
xor
mov
loopne
movlps
push
outsb
dec
mov
les
data16
icebp
movsl
jne
enter
sub
orl
jno
in
cmpsl
sub
sbb
lods
or
fnstcw
xor
movsl
in
gs
sahf
mov
mov
cmc
jns
cmp
cmpsl
lock
fidivs
cmp
cwtl
and
push
dec
inc
loope
or
dec
mov
jg
push
rclb
test
mov
adc
outsl
jne
es
push
fldl
xchg
or
sub
inc
je
adc
loope
cmpsl
ljmp
aaa
lods
lcall
add
stos
jecxz
add
andl
xor
mov
xchg
cmp
hlt
bound
je
outsb
jecxz
mov
cmp
mov
adc
mov
sti
repnz
inc
enter
jl
dec
mov
hlt
loopne
sub
jb
lds
addr16
mov
mov
xor
scas
mov
stos
add
xchg
push
into
negl
pop
fimull
enter
lcall
push
push
dec
popa
loope
xchg
bound
xor
sbb
add
jne
jge
mov
jb
sti
repz
xchg
insb
test
sbb
repz
and
dec
andb
lock
dec
pop
mov
cmpl
push
pushf
sbb
shr
mov
jmp
lods
je
add
aad
pusha
sub
shlb
rorl
xor
dec
jmp
and
mov
dec
lahf
divb
sahf
pop
cltd
loope
cmp
jne
lods
sahf
lods
or
add
sbb
dec
xor
jle
inc
ja
mov
jecxz
lret
fistl
inc
mov
sub
shr
sub
xchg
movsb
push
xor
mov
cmpsl
sti
sbb
int3
fdivr
mov
cmp
out
inc
push
mov
lock
dec
or
jb
je
sub
shl
add
xchg
repz
or
daa
iret
jbe
add
cmp
repz
and
and
bnd
xchg
ja
push
xor
sub
xor
arpl
arpl
xchg
fists
cmp
call
scas
mov
mov
xor
stos
inc
push
push
pop
cmp
scas
jg
lret
sahf
popa
insl
xchg
fdiv
loopne
mov
shl
dec
cmp
adc
push
icebp
xchg
push
mov
mov
push
rorl
pop
xchg
dec
jl
xor
scas
mov
ja
ds
jle
adc
sbb
cmp
jmp
sbb
test
sub
scas
movsl
pop
adc
das
jb
xchg
dec
mov
pop
inc
dec
mov
or
pop
cld
xor
loop
iret
adc
sti
and
fisttpl
mov
mov
add
mov
addr16
cmc
icebp
cmp
cmp
push
jecxz
mov
inc
call
push
sub
mov
xchg
daa
pop
mov
pushf
call
out
xchg
inc
push
fidivrs
cmp
xor
aas
ret
dec
je
cmp
ds
lret
bound
mov
or
fmul
adc
sbb
pop
jb
jl
cmp
lds
inc
dec
ret
roll
scas
and
cmpsb
dec
subb
cmp
mov
cmp
rcrb
adc
or
cmp
gs
ljmp
addl
cmp
sarl
mov
push
sbb
inc
das
push
les
or
xchg
push
aaa
and
or
inc
je
jno
cmp
xchg
push
push
ret
mov
mov
es
mov
sti
adc
mov
jp
shlb
jle
int
xlat
push
ret
nop
dec
rcll
xor
xchg
pop
mov
sahf
dec
cmpsl
cwtl
movsb
fldcw
pop
sbb
sbb
xor
add
mov
push
jge
or
aam
nop
aas
pushf
out
mov
sahf
add
sub
int3
lds
shrl
mov
inc
shr
dec
dec
jbe
mov
sub
and
outsl
cmp
and
cld
repnz
cmpsl
jo
pop
and
sub
jmp
xor
ljmp
jb
cmp
scas
loop
cli
pop
into
or
lds
sti
inc
push
push
popa
push
outsb
outsl
and
negb
mov
repz
aas
fildll
in
pop
sbb
test
in
or
jle
push
fsubr
lods
test
sti
mov
fidivs
and
and
mov
pop
sub
or
loopne
into
mov
ret
rolb
insl
das
repz
in
fsubrs
ret
mov
sbb
lods
cmpsb
mov
test
or
cwtl
stos
xchg
push
push
out
push
lock
repz
sbb
sbb
jne
push
loopne
xchg
in
out
sahf
fldenv
sub
pop
rcll
add
xor
mov
mov
out
xor
and
repnz
out
pop
bound
sbb
out
add
scas
pusha
ss
mov
jmp
lds
repnz
nop
lods
jae
jecxz
inc
adc
clc
clc
mov
seta
mov
nop
jns
add
pop
nop
xor
in
cmp
test
push
inc
pop
mov
add
pop
lock
xchg
jmp
or
mov
cmp
mov
dec
dec
in
jbe
and
add
rcrb
jl
push
bndstx
lret
add
leave
incl
xor
push
pop
xchg
mov
arpl
xlat
pop
xchg
push
ret
inc
int3
test
sub
icebp
add
dec
or
orb
mov
mov
andb
nop
mov
call
cmp
sub
bound
loopne
push
jge
gs
xchg
xor
cmp
sub
pop
cmpsl
sbb
mov
arpl
mov
xchg
xor
movsl
mov
cwtl
in
dec
stc
jg
std
aad
adc
stos
push
pop
stc
cmp
out
jb
sahf
mov
xor
pop
movsb
xchg
shlb
in
xor
in
dec
jp
mov
nop
and
pop
pop
push
imul
inc
push
sbb
lea
hlt
jns
or
rcrb
lds
and
les
sbb
inc
loop
ja
or
pusha
addr16
mov
sar
fbstp
jecxz
sbb
jle
popf
mov
mov
or
mov
fxch
lds
xor
jb
jne
push
pop
fsubl
cmp
push
mov
cld
scas
fwait
mov
adc
add
xchg
mov
enter
mov
jmp
and
in
mov
out
inc
insb
orl
push
mov
ss
jae
out
call
cmc
dec
and
mov
xchg
jl
mov
and
push
sub
cmp
pop
rcll
bound
or
cltd
mov
fs
inc
icebp
pusha
cmp
movsl
cld
inc
dec
stc
addl
int3
stos
push
xchg
push
popf
or
adc
les
jnp
pop
js
inc
aam
sbb
jp
std
cwtl
sar
adc
inc
add
popf
pop
add
sbb
int3
js
push
xchg
and
aam
cmpsl
sarb
bound
mov
stos
cmp
daa
xchg
push
les
pop
lods
jns
jne
jecxz
shll
shlb
rolb
sub
pop
or
inc
xor
add
fimuls
ljmp
jge
dec
xchg
cmpb
lret
xor
adc
mov
lret
and
or
sub
mov
jae
divb
mov
fildl
icebp
out
dec
mov
cld
sub
mov
addb
daa
push
outsl
and
pop
cmp
nop
in
out
push
xchg
pushf
pop
loope
jle
repz
cmp
out
jbe
mov
int
imulb
rorb
jo
or
mov
sarb
repnz
jg
flds
enter
mov
or
pop
lods
lret
dec
stos
pop
and
jle
test
sbb
and
sub
pop
pop
push
dec
jecxz
cmpb
int3
mulb
pop
outsb
aad
sbb
and
rorb
or
in
leave
xor
fistpl
ud1
mov
jp
push
xchg
add
sub
and
push
lahf
movsl
mov
popf
mov
cwtl
mov
xchg
push
jo
cmpsb
xor
arpl
pop
iret
adc
jecxz
mov
sti
jmp
pop
leave
add
mov
add
mov
in
cmp
cmp
sbb
dec
push
cmp
jo
call
cmp
subb
mov
mov
fmuls
mov
sarb
out
je
or
pop
test
jo
bound
xchg
cmp
fidivs
and
and
pop
cmp
inc
add
inc
add
lock
loope
inc
scas
dec
dec
loopne
nop
sbb
andl
testl
mov
jle
mov
push
mov
inc
int3
bound
stc
push
xchg
or
xchg
fwait
ss
add
xchg
mov
xlat
mov
mov
mov
in
adc
lahf
mov
insb
insl
pop
add
jle
sbb
aaa
cmovb
jecxz
or
pop
fsubrs
lret
subb
pop
es
jne
fsubs
xchg
dec
push
outsl
fisubl
sub
or
lret
adc
mov
mov
xchg
xchg
fidivrs
pop
pop
pop
jmp
sub
shlb
xor
dec
clc
subb
fisttps
js
xor
movsl
jne
addr16
inc
das
add
adc
pop
outsb
adc
jle
aaa
inc
or
push
outsl
lods
adc
xchg
sub
test
arpl
out
mov
jne
or
push
dec
pop
jl
cmp
ret
icebp
nop
pop
xor
decb
fwait
mov
das
hlt
imul
pop
outsb
mov
aad
icebp
lret
xor
push
std
aas
xor
in
imul
sbb
cld
pop
out
stc
stos
pop
fsts
aam
or
xor
fisubs
pusha
inc
sti
inc
lret
push
inc
push
jmp
mov
iret
inc
jle
pop
pop
sub
and
cmp
in
outsb
cmp
dec
jle
and
ljmp
cltd
mov
lahf
push
xor
xor
inc
rcrb
mov
mov
in
jbe
leave
mov
or
pop
xchg
add
inc
push
ret
xchg
cld
lret
xor
mov
ja
mov
sub
dec
adc
mov
push
xchg
add
jg
xchg
and
jmp
dec
popa
jg
and
ljmp
pop
mov
sbb
lds
cmpsb
pushf
pop
pop
add
cltd
loopne
mov
xor
push
std
adc
jecxz
test
xchg
cmpb
sbb
xchg
imul
out
iret
adc
push
fistl
dec
mov
adc
sahf
cli
js
test
add
mov
imul
push
sbb
out
mov
sub
sub
cwtl
popf
lcall
jno
lock
and
pop
stc
push
cltd
add
sbb
cmp
cmpsl
xchg
xchg
lods
das
loope
add
fidivrl
in
jg
or
leave
stos
or
lahf
fcomps
pop
pop
testb
xlat
mov
test
sbb
adc
dec
cmpsb
in
js
dec
dec
mov
mov
fistpl
and
out
cmp
stos
sbb
sub
andb
cmp
adc
pop
subb
aam
push
clc
push
rorb
push
lret
imul
adc
das
arpl
or
fbstp
xchg
inc
mov
push
lods
ljmp
inc
mov
movsl
mov
iret
testl
ja
int
aas
stos
es
in
out
add
xchg
lret
pop
pop
mov
and
pop
pop
scas
lds
lret
movsl
fnstcw
xchg
xor
or
in
add
xchg
mov
jmp
add
sbb
jl
popf
xchg
mov
movsl
mov
lods
inc
insl
lock
jae
push
les
xchg
mov
inc
cmp
inc
sub
and
sub
xchg
jge
loopne
and
pop
popf
leave
or
lods
insl
aaa
push
aam
push
push
sti
xor
sub
aaa
sbb
in
gs
inc
in
inc
ljmp
or
dec
aas
and
pop
dec
sub
push
aam
es
sti
dec
add
popa
inc
pop
loopne
nop
push
scas
aad
xlat
add
loop
mov
add
clc
fs
sub
xchg
inc
sub
mov
sub
imul
pop
repnz
mov
mov
ja
jge
inc
mov
xor
cmpsb
test
lret
jg
divl
or
jno
lret
sbbl
xchg
repnz
andl
inc
fucom
outsl
sbb
push
insb
and
jae
jno
lds
push
adc
std
sub
cmpsb
addr16
leave
in
popf
sbb
sarl
scas
test
data16
push
fs
and
jp
stos
gs
int3
xchg
add
mov
lahf
into
icebp
ljmp
scas
pop
inc
xor
and
sbb
nop
xchg
stc
xchg
cmpsl
sahf
dec
cmp
leave
aam
push
je
out
jp
sbb
sbb
flds
ss
negb
aas
sbb
mov
mov
and
inc
mov
pop
imul
fcomip
xchg
sub
mov
sbb
xchg
insl
mov
movsl
insl
xor
mov
outsb
into
xchg
scas
mov
push
rcrl
sub
pop
sub
div
cmp
or
cmp
rcl
adc
test
mov
leave
addb
jg
add
sbb
dec
flds
daa
xor
pop
fistl
mov
inc
adc
or
gs
mov
repnz
inc
mov
mov
into
mov
sti
sbb
test
in
ficompl
in
or
push
mov
outsl
testb
das
fpatan
adc
sub
mov
and
adc
lods
or
mov
lock
dec
fwait
xchg
and
jb
mov
ljmp
push
popf
add
les
sub
pusha
repz
jnp
add
cmp
arpl
lods
and
les
xchg
pop
std
in
sbb
test
loop
sub
xlat
aaa
icebp
xlat
outsb
ret
mov
mov
xchg
movsb
or
and
lock
je
repz
push
cmp
loop
push
outsb
jp
xor
out
pop
dec
mov
pop
and
pop
jne
or
mov
mov
rorl
lods
out
xchg
ljmp
inc
ds
or
in
xchg
pop
sub
mov
pushf
inc
mov
adc
aad
or
movsl
jbe
cld
xchg
shl
aaa
outsb
dec
mov
add
sbb
inc
add
lea
sub
adc
lret
push
xchg
outsb
leave
fmul
xchg
pop
shrl
iret
rclb
push
push
inc
bound
inc
pop
ror
pop
daa
add
testb
clc
cmp
mov
sar
js
ret
rcl
mov
shlb
and
dec
sub
or
es
sbb
pusha
xchg
jno
enter
push
aaa
pop
xchg
sbb
sub
push
cld
pop
mov
std
xlat
ret
fwait
inc
std
or
js
pushf
inc
mull
mov
call
sub
mov
imul
jecxz
test
push
icebp
sti
test
sub
dec
icebp
and
sub
dec
popf
mov
mov
xchg
mov
cmpsb
jl
jmp
lock
sbb
std
mov
shrl
negl
mov
rol
lds
xchg
iret
rclb
pop
fwait
cli
imul
or
cmc
into
pusha
test
andl
into
xchg
scas
js
or
sbb
fisttpl
lcall
stos
std
dec
ljmpw
push
mov
into
je
push
pop
outsl
inc
popfw
leave
outsl
jne
in
pop
mov
cmp
cmpsb
or
jno
stos
insl
inc
jmp
mov
push
insb
mov
pop
xchg
js
jle
push
out
pushl
push
cli
mov
sub
loopne
push
jns
pop
js
push
fisubl
push
push
mulb
add
mov
inc
mov
scas
fildl
imul
dec
mov
daa
add
sub
es
aad
mov
add
xchg
and
orb
jnp
es
in
mov
lahf
adc
mov
xchg
xchg
and
clc
pop
jmp
daa
and
push
popa
sub
mov
xchg
insl
shrb
add
pop
hlt
testb
jns
dec
ds
addb
push
adc
testl
movsl
sub
scas
aad
sbb
out
dec
lahf
icebp
popl
aam
pop
dec
insl
mov
popf
psrlw
cmp
inc
out
lahf
push
ljmp
ds
and
inc
mov
cli
scas
adc
jl
mov
and
mov
ret
stc
lret
sub
or
jne
xchg
aaa
push
shrb
xchg
inc
scas
or
rcrl
iret
dec
outsb
out
arpl
jp
xchg
push
ret
xor
out
popf
xchg
cmc
xchg
fimull
sub
in
mov
push
outsb
jb
ret
push
fidivrl
fidivrs
add
int3
popf
ja
jmp
pop
sbb
shl
inc
push
mov
js
add
leave
inc
sbb
xor
sbb
pop
cmpsl
push
and
fwait
insl
cmp
inc
outsb
sti
xchg
xchg
in
cmpsb
lahf
repz
push
scas
push
in
out
sbb
int3
xchg
aad
les
rcrl
pcmpeqw
mov
jns
jb
inc
or
mov
inc
ret
fwait
aam
cmp
mov
insb
sahf
mov
movsl
mov
repz
xchg
cmp
fsubrl
ja
sub
and
xchg
dec
inc
sbb
test
mov
jnp
in
cli
outsl
pop
push
test
ret
xchg
mov
popa
mov
fistpl
jge
sbb
js
jnp
cmp
rcll
adc
incl
sub
and
loop
movl
inc
pop
and
icebp
lds
rclb
pop
rorb
jno
jne
imul
jle
repnz
ret
dec
out
hlt
test
push
xor
or
xchg
inc
pop
jns
mov
or
add
iret
gs
lret
dec
in
sbb
in
out
cltd
cmp
fldl2t
out
mov
mov
jle
push
lds
sub
mov
js
inc
pop
fidivl
inc
jg
flds
cwtl
pop
xor
insb
cld
gs
fbld
xchg
mov
jns
sbbl
xchg
xchg
fcmovnbe
mov
loope
lea
inc
xor
pop
stos
scas
loopne
xchg
lret
lcall
inc
dec
es
int
add
aaa
cmp
sbb
mov
jns
adc
mov
inc
mov
and
fmuls
rclb
push
ds
xchg
mov
dec
movsb
rcrl
lea
into
dec
out
je
cmp
push
push
cwtl
repnz
lret
and
sbb
out
mov
jbe
cmp
int
mov
xchg
push
mov
mov
sub
dec
lea
xchg
pop
pop
jns
fs
jne
pop
push
xchg
mov
fisubs
mov
push
andl
cmp
in
push
push
jns
pop
loop
loope
push
scas
retw
jae
stos
in
fisttps
xchg
xchg
add
in
push
mov
mov
fcmove
in
mov
xor
adc
daa
cltd
jmp
cmp
adc
aad
fisttpll
and
daa
test
dec
pop
loope
pop
mov
fidivl
stc
rcll
cmp
ljmp
lahf
fistpll
scas
lods
or
aam
decl
rcr
in
fiadds
aam
cmp
loop
rcrb
test
repnz
aas
js
mov
outsb
mov
mov
xlat
hlt
stos
xor
jge,pt
clflush
cltd
daa
loop
sub
test
mov
sbb
push
inc
lcall
arpl
or
mov
cmp
ret
mov
stos
daa
xlat
int
pop
pop
fwait
es
into
push
loopne
sbb
jecxz
test
pop
adc
mov
inc
bound
ret
outsb
dec
gs
mov
cs
pop
cmpsb
push
push
pop
mov
or
div
incb
scas
popa
test
pop
in
sbb
mov
pop
aam
mov
iret
sbb
jge
mov
sub
xor
pop
or
fcoml
pop
inc
je
jl
jle
bnd
pop
dec
aas
popf
push
or
lret
mov
dec
xchg
cmp
mov
mov
repnz
cmpsb
mov
adc
fwait
arpl
dec
inc
mov
fldt
add
sub
xor
hlt
nop
push
sbb
and
mov
jnp
jge
jne
push
cmc
loopne
mov
lahf
cld
mov
pop
inc
dec
xchg
int3
jge
ret
ds
pop
xchg
insb
out
xor
mov
addr16
in
inc
stos
pusha
push
mov
cltd
xchg
or
shl
or
aaa
xchg
add
add
movsb
sbb
je
sub
xor
xor
push
adc
negb
lea
dec
xchg
mov
xchg
sub
mov
xor
dec
and
push
movb
pop
nop
xchg
daa
push
enter
mov
jno
aad
and
lock
inc
xor
sub
mov
xchg
cmpsb
pop
icebp
sub
adc
push
enter
jmp
mull
sbb
pop
add
sbbl
or
leave
mov
push
sbb
aam
adc
xchg
adc
test
xchg
inc
mov
sbb
leave
adc
xchg
sbb
or
daa
cmp
mov
push
mov
dec
push
mov
lret
push
and
vmovdqu
mov
lds
adc
in
sub
ss
lds
sub
xor
cli
jmp
mov
fstpt
lret
faddl
rcl
pop
dec
shrb
jge
sbb
jmp
add
jns
xor
test
sbb
cmp
mov
fwait
out
movsb
mov
dec
dec
mov
mov
push
sub
xor
mov
or
mov
cmp
repnz
push
pop
xor
gs
cld
dec
leave
fistpll
shlb
push
sahf
jp
sbb
aaa
in
cld
jo
sub
int
xchg
mov
call
cld
in
fstps
jne
mov
scas
dec
push
int
and
xchg
xchg
sbb
jp
enter
aas
in
fwait
int3
push
nop
cmp
outsl
mov
or
fwait
mov
mov
push
lahf
out
dec
sub
dec
adc
popa
jae
sbb
sub
and
sarb
xchg
adc
mov
mov
push
cli
mov
popf
add
push
stos
dec
add
push
xchg
push
cmpl
add
imul
sbb
sbb
in
mov
js
cltd
sahf
pop
jb
push
leave
jg
movb
push
xchg
cltd
xorl
sbbl
adc
mov
cmpsl
mov
push
adc
nop
sar
xchg
orl
shlb
rorb
aaa
lcall
inc
push
jge
jmp
and
aad
cmc
dec
or
xchg
xchg
bound
pop
ja
ret
out
cmpsb
adc
mov
jle
mov
adc
sbb
push
cmp
jne
loop
push
sarl
addl
repz
daa
mov
lea
push
or
lea
stc
mov
out
cmpsl
jnp
fsubrs
sbb
loop
inc
insb
mov
popa
insl
bound
xchg
inc
and
add
iret
push
shll
out
aam
popf
mov
fsubrl
mov
test
in
out
lret
jg
xchg
fmul
fs
xchg
les
test
mov
inc
mov
fs
pop
push
adc
rorb
sbb
sbbl
mov
mov
mov
test
pop
pusha
rcrb
mov
inc
mov
out
jmp
testb
call
xorb
mov
lret
or
push
outsb
stos
dec
push
mov
data16
pop
mov
scas
mov
cwtl
inc
inc
ds
test
jmp
pop
idivb
inc
into
mov
add
inc
dec
stos
fists
js
jg
xchg
hlt
sbb
jno
dec
xchg
gs
ds
mov
in
sbb
or
mov
loope
cwtl
jns
sbb
xor
mov
ss
xchg
lods
mull
push
xchg
arpl
sbb
clc
int3
jne
mov
lret
mov
test
stc
and
popf
leave
shrb
xor
adc
mov
cmp
mov
cmp
call
xchg
hlt
mov
push
add
es
jbe
loop
jnp
nop
inc
test
in
cld
fisttps
lahf
in
test
sub
push
jnp
jl
xlat
dec
mov
xor
cli
outsb
cmc
shll
pop
cs
fdivp
push
cmp
dec
sub
clc
out
lcall
mov
xchg
or
cmp
aam
cmp
in
iret
xchg
mov
in
mov
inc
test
and
fidivrs
imul
in
loope
movsb
xor
scas
ja
mov
shrb
pop
lahf
in
xchg
xor
pop
cmp
ficoms
pop
mov
aad
xor
add
mov
push
aam
outsl
mov
leave
xchg
or
mov
stc
mov
xchg
loop
div
mov
mov
or
jmp
call
pop
mov
inc
xchg
out
lret
jecxz
ljmp
dec
dec
dec
mov
daa
jl
xchg
in
jae
jg
push
stos
test
adc
mov
nop
jge
andl
bts
mov
xor
inc
cmp
sbb
pop
lds
int
xchg
and
out
cmp
dec
sbb
and
bound
and
fbstp
imulb
adc
mov
cmc
dec
push
xor
cmpsb
push
pusha
outsb
adc
and
out
mov
mov
and
jg
adc
dec
insb
inc
jne
xchg
pop
mov
lcall
xchg
inc
add
bound
add
lods
xchg
sub
or
les
int3
push
mov
mov
xchg
push
loope
mov
lahf
fists
cld
mov
mov
iret
aaa
add
pop
lret
inc
daa
cmpl
fistpll
pusha
cld
mov
xlat
test
inc
test
les
mov
es
push
dec
or
adc
mov
not
clc
iret
or
cmp
add
push
mov
cmp
pop
mov
push
pop
pop
mov
jg
sbb
int3
cltd
bound
out
loopne
sti
jb
movb
push
lret
mov
add
lret
xchg
pop
add
mov
js
sti
cmc
dec
clc
sub
jno
xorb
push
mov
push
lock
inc
and
ljmp
test
insl
sbb
cmp
or
jg
push
adc
out
mov
add
icebp
repnz
cli
jno
mov
shrb
fs
dec
cmp
mov
sub
lret
jno
jo,pn
mov
repz
adc
jbe
lods
push
lods
fwait
push
sbb
jne
push
mov
jne
mov
pop
mov
lahf
xchg
cmpsb
jge
adc
jmp
inc
outsb
xor
fucomi
xchg
stos
push
jb
fists
adc
or
add
fwait
stc
jno
inc
test
out
loope
lahf
rcrb
pop
dec
clc
dec
fst
aad
dec
lock
les
inc
mov
push
xor
loop
sti
lods
pop
imul
dec
jge
dec
add
mov
inc
push
dec
or
and
xchg
adc
mov
push
mov
nop
mov
adc
lods
bound
push
cmp
sti
mov
sbb
dec
fmulp
int
jo
sub
xor
andb
dec
mov
outsb
fcomp
xchg
mov
sub
les
loop
lock
jp
xchg
sbb
or
fimull
and
ja
add
mov
fdivs
icebp
lea
pop
pop
xor
std
xchg
pop
fs
mov
pop
dec
inc
jg
xchg
ret
insl
into
mov
push
add
fadd
fstps
jmp
mov
fwait
sbb
loop
dec
or
xor
leave
shl
leave
outsb
js
push
jge
cs
cmpsb
int3
mov
scas
cmp
add
or
xor
push
call
inc
sbb
or
movl
xorl
inc
enter
push
sbb
inc
pop
or
cli
cmc
mov
int
lret
mov
sbb
sub
gs
mov
inc
inc
mov
pushf
jge
mov
leave
or
js
inc
lahf
add
mov
ljmp
outsb
lcall
notb
insb
inc
xchg
lret
fbld
pop
jmp
inc
cs
and
nop
lret
and
das
push
dec
xor
jg
int
mov
mov
jbe
cmp
mov
add
aam
inc
pop
mov
out
mov
mov
rolb
inc
dec
adcl
xor
rorb
fcoml
fdivl
add
adc
xor
sub
and
cmp
mov
inc
outsw
lods
call
hlt
in
in
sub
rol
sbb
xchg
jne
xchg
js
add
jge
adc
outsl
mov
add
es
adcl
lods
mov
lcall
jns
stos
nop
repz
fcmovbe
push
inc
fcmovne
mov
std
pop
or
mov
and
je
imull
xor
jp
adc
in
cltd
mov
xchg
and
sbb
push
inc
ds
sti
mov
xchg
dec
lahf
jmp
xchg
push
inc
jns
mov
push
loop
xchg
push
cld
mov
mov
mov
mov
xchg
lcall
add
fdivp
cwtl
sbb
xchg
int
hlt
inc
xchg
mov
sbb
lahf
sub
scas
lods
pushl
jb
jg
imul
xor
ret
or
cli
xlat
jo
or
imul
adc
xor
xchg
jb
int
lods
ficomps
cmc
cmpsl
cmp
adc
pusha
ret
jl
scas
int
imul
scas
pop
xor
int3
pop
outsl
lret
dec
dec
inc
adc
leave
xchg
icebp
imul
cmp
gs
addr16
fadd
push
mov
repz
xor
ret
cltd
imul
pusha
inc
call
lods
or
outsb
adc
orb
imul
mov
jle
jge
push
in
xchg
jb
fstpl
dec
mov
imul
mov
dec
push
scas
es
mov
shl
or
mov
adc
xchg
fsubs
fstl
adc
jle
cs
cmp
pop
out
into
fstl
mov
jae
add
inc
mov
adc
pop
push
and
andb
mov
cwtl
ret
out
dec
lods
outsl
pop
mov
das
jo
scas
subl
gs
gs
sti
into
xorl
mov
aam
pushf
xor
add
mov
jg
add
movsl
xor
out
mov
rclb
fcmovb
cmp
aas
loop
imul
or
mov
ss
ds
ret
out
jge
and
mov
jge
xchg
scas
dec
sti
add
mov
push
adc
mov
jg
mov
mov
pop
lahf
insb
lea
sbb
and
in
mov
lea
adc
rcr
and
fcoml
in
jmp
jne
outsb
and
xchg
cli
aad
lret
and
cmp
es
ljmp
push
js
outsb
jno
mov
insl
ficoms
cmp
es
int
cltd
movl
and
stc
inc
mov
jns
mov
xchg
sub
push
mov
sbb
push
stc
addl
fnsave
leave
sbb
add
sub
ja
or
leave
inc
call
clc
iret
mov
dec
in
mov
xchg
hlt
pop
inc
and
je
cmp
and
std
iret
aaa
movsb
cmc
sub
aaa
mov
aam
mov
test
xchg
hlt
xor
xor
mov
mov
movsl
push
lcall
sbb
mov
push
test
push
pop
pop
pusha
stos
rorl
movntps
popf
adc
xchg
cwtl
ret
adc
mov
jno
pop
rcrb
xchg
andl
fwait
dec
jb
xchg
xor
sub
xor
sub
mov
pop
loopne
sbb
push
lds
push
mov
inc
inc
mov
jb
cmp
and
test
cmp
push
movsb
xchg
loope
pop
repz
lea
push
pushf
dec
stc
lret
sbb
stos
lcall
add
clc
jle
pushf
and
mov
das
pop
ja
enter
lcall
pop
icebp
pop
jns
iret
mov
jno
imul
xchg
adc
jo
out
subl
inc
push
pushw
push
push
adc
push
inc
daa
outsb
test
and
dec
inc
out
repnz
shll
xor
jp
daa
sub
pop
das
repnz
mov
adc
int
jbe
xor
jg
out
lahf
or
loope
aad
cmp
xor
sbb
ljmp
jo
in
inc
push
jne
mov
xlat
or
cmp
push
mov
clc
in
and
cs
cwtl
or
lret
mov
outsb
sti
fimuls
pop
xor
xchg
pop
push
mov
cmp
lea
sub
inc
jle
shll
mov
lcall
dec
test
out
push
jecxz
sar
daa
mov
int3
fsubl
out
jl
int
scas
mov
xorb
adc
test
jnp
mov
shl
sub
or
cmp
das
mov
mov
or
sbb
sub
pushf
rcrb
cld
not
inc
sbb
rcr
js
stc
mov
arpl
shll
test
mov
insb
sbb
pop
mov
mov
int
aas
push
loopne
jns
cmpsb
add
pop
jecxz
data16
dec
jmp
or
jne
add
xchg
lea
pop
mov
xchg
inc
inc
loope
cltd
and
cmp
insb
mov
outsb
mov
js
xchg
pop
adcb
add
mov
xchg
in
adc
pusha
mov
pop
ret
outsb
inc
and
xchg
test
xchg
push
into
adc
fs
lea
cmp
movsl
bound
in
in
and
fldt
sub
mov
sub
xor
xchg
cli
and
pop
lods
push
cmp
not
or
repz
sub
fisubl
add
leave
mov
xor
cmc
sub
xchg
dec
jae
xchg
mov
hlt
cwtl
sti
dec
imul
adc
mul
mov
test
mov
cmp
mov
stc
stc
or
dec
ret
xlat
adc
or
sub
popf
frstor
mov
jl
dec
jecxz
dec
xchg
add
jnp
mov
cld
cmpsb
cmp
mov
outsl
rcrb
adc
or
in
sub
lods
push
test
cmpl
into
xchg
or
xchg
stc
sub
out
mov
inc
mov
ret
insl
inc
sbb
cwtl
out
aam
mov
adc
cmp
jno
in
cltd
sti
fucom
into
lods
sbb
xchg
js
jg
add
sub
push
mov
in
add
cmc
pop
lcall
mov
fcmovbe
addr16
mov
jnp
loope
lock
xchg
mov
leave
popf
pusha
outsl
loop
mov
mov
mov
test
lods
cmpb
xchg
mov
sub
push
fnstenv
inc
dec
inc
outsl
push
repnz
push
ss
or
adc
fcomps
sbb
inc
jae
mov
xchg
lock
sub
filds
add
pusha
pusha
adc
test
aad
movsl
test
pop
dec
jl
iret
xchg
cmp
inc
dec
orb
or
dec
cmpl
mov
int3
lods
adc
mov
ds
jno
es
imul
pushf
sbb
inc
push
mov
filds
push
push
fidivrl
and
cld
outsl
sbb
lret
cmp
sub
mov
dec
addr16
hlt
or
jns
pop
leave
test
pop
gs
pop
aas
stc
or
lods
xor
in
mov
or
mov
icebp
xor
adc
sub
gs
inc
mov
out
xchg
jnp
xchg
out
sub
mov
out
jge
bound
sub
hlt
jno
inc
test
sbb
push
ja
mov
je
es
dec
jne
rorl
andb
jecxz
rcl
mov
xor
mov
dec
aaa
das
inc
mov
dec
pop
fistpll
lods
pusha
das
and
add
lods
aas
into
sahf
rolb
sub
gs
sub
jo
pop
push
pop
mov
mov
scas
pop
xchg
data16
jl
jne
xor
fwait
adc
mov
sub
addr16
jns
hlt
and
push
imul
xchg
xchg
xchg
mov
mov
mov
mov
sub
sub
jmp
out
adc
mov
add
punpckhwd
pop
mov
jecxz
push
in
mov
mov
push
or
pop
out
call
sahf
jb
into
fiaddl
sarl
and
dec
imul
push
je
sbb
test
notb
daa
pop
sub
jns
pop
cmpsb
es
push
outsb
pop
pushf
lods
xchg
insl
push
ror
loop
and
xlat
das
jp
jnp
inc
call
push
lret
add
scas
repz
xlat
daa
enter
cltd
inc
adc
rcr
push
push
shlb
pop
inc
sti
push
daa
xchg
inc
dec
mull
xor
leave
lahf
jns
scas
cmp
adc
sarl
sbb
fucomp
inc
dec
add
hlt
les
dec
outsl
aad
test
lahf
mov
jns
cwtl
in
pop
adc
sahf
dec
or
cmp
mov
jae
ror
aam
fwait
sub
adc
out
and
aaa
daa
pop
xor
xor
pop
rcll
jno
push
jo
add
enter
out
outsb
push
mov
add
mov
sbb
pusha
cltd
movsl
jne
push
add
lods
std
insb
xor
pusha
int3
iret
aas
mov
sbb
mov
xchg
sahf
xlat
and
sub
push
inc
and
ja
and
out
and
pop
mov
inc
cld
xchg
push
jno
fidivl
mov
mov
aam
flds
lret
ret
lods
mov
fdivrl
aad
sbb
jbe
jo
sbb
iret
sbbb
adc
cli
cwtl
cmp
out
sahf
gs
sbb
mov
cmp
popf
cmc
icebp
int3
lds
les
xchg
sbb
and
fwait
mov
and
cmp
fsubrl
dec
je
aaa
addr16
cmp
or
mov
pop
jmp
stc
inc
sub
mov
fbstp
adc
sub
inc
je
ficoms
push
jae
and
push
stos
push
iret
rorb
jo
aas
add
jne
xchg
mov
mov
sar
hlt
push
mov
repz
nop
xchg
push
dec
dec
add
in
jmp
push
mov
aam
aad
jns
pop
jecxz
push
add
xor
iret
mov
fwait
sbb
push
dec
popf
cmpsb
xchg
movsb
jbe
fstps
fldcw
push
sub
cmp
push
jns
mov
push
adc
adc
adc
mov
push
out
andb
xchg
cld
mov
xchg
sahf
jle
loope
decl
sub
in
ja
or
pop
pop
xor
push
rcll
adc
xor
lods
adc
pop
pop
arpl
add
adc
xchg
cmp
out
popa
dec
lea
inc
and
sub
clc
mov
insb
and
stc
jle
xchg
mov
mov
jl
rcrl
pop
test
dec
xchg
dec
mov
inc
sbb
in
mov
jge
fxch
cli
cwtl
inc
es
push
xor
jp
hlt
stc
sub
or
lret
ljmp
cltd
or
cmpsb
pop
in
inc
xlat
cmp
cmpb
lods
xchg
insl
jp
out
mov
mov
xchg
nop
cmc
push
jbe
or
orb
pop
les
jne
lret
mov
dec
push
pop
sbb
addl
jae
aaa
scas
pop
mov
ret
adc
lods
fidivs
lea
sti
stos
ret
inc
cli
inc
push
add
aas
mov
fists
cmpb
jmp
loop
sub
enter
fs
inc
das
leave
into
iret
pop
movsb
mov
out
call
das
cmp
pop
jge
and
addr16
iret
pop
fimuls
or
cmp
xchg
scas
mov
fwait
sub
loopne
mov
fsubl
lods
imul
outsl
fidivl
add
inc
pusha
mov
shl
and
daa
test
push
push
mov
ja
hlt
cltd
jp
or
sub
fs
cld
push
cmp
cmpsl
adc
out
jp
mov
and
lret
shrl
int
push
jmp
pop
jg
negl
add
mov
pop
mov
stos
sti
jp
cmp
ret
sbb
sbb
push
imul
fstpl
aas
push
xchg
fs
push
scas
sbb
cmp
or
push
xchg
push
mov
imul
mov
fiadds
cli
or
inc
fbstp
add
jle
sbb
decb
cmc
mov
add
sahf
xor
adc
rolb
sub
fcmovnb
aas
ja
dec
stc
pop
orl
ret
shr
repz
rclb
fsubrs
enter
cmpb
pop
mov
cmpsl
cmp
push
add
mov
int
stc
jl
jg
mov
outsb
aaa
mov
stos
imull
movzbl
aas
mov
cmc
loop
dec
aam
imul
add
xchg
fwait
lods
loope
outsl
push
movsl
pop
sahf
sbb
scas
jge
push
xor
gs
pop
add
jne
cmpsb
ss
lods
push
movlps
push
inc
or
hlt
inc
mov
xchg
adc
mov
ja
sbb
sub
mov
rcll
mov
sbb
and
shrl
sub
or
adc
jle
mov
sub
stc
or
xchg
pop
cltd
scas
adc
shrb
cwtl
mov
fbld
or
scas
insl
xchg
data16
sub
jno
mov
or
sahf
mov
push
jo
ret
adc
ss
inc
lcall
fdivs
add
out
test
push
stos
dec
lods
mov
adc
or
dec
pop
gs
jecxz
fldenv
outsl
or
neg
push
pop
add
push
mov
and
cmp
mov
lods
and
cmp
add
out
inc
xor
xchg
pushf
aas
cmp
dec
jle
clc
inc
out
aas
stos
mov
sbb
pop
cmp
dec
jp
std
mov
loope
xor
xlat
cmpsb
lods
ror
test
int3
and
sbb
insb
daa
or
psrld
in
adc
nop
and
or
inc
xor
xchg
jmp
int
adc
add
jbe
xor
daa
es
dec
inc
adc
xor
es
adc
incb
fisubs
test
mov
stos
lcall
es
xlat
pushf
stc
and
pop
sub
sarl
xor
push
scas
popa
arpl
data16
subb
xorb
notl
xchg
push
and
push
shr
cmpl
loop
call
lcall
enter
les
sbb
mov
mov
add
adc
fbld
xchg
cmc
mov
mov
adc
fsts
addr16
mov
pop
popa
inc
std
and
inc
add
add
xchg
outsb
pop
cs
gs
push
cmp
mov
movsb
flds
js
xchg
cltd
xchg
or
fdivrs
dec
jmp
shlb
add
mov
movsl
je
xor
leave
outsb
xor
cmp
imul
xor
gs
pushf
pop
add
jns
outsl
int
test
imul
ss
scas
gs
dec
xchg
mov
out
xchg
or
mov
lret
outsl
jne
mov
mov
in
dec
dec
cmp
sub
loopne
insb
cs
shlb
sub
push
jl
push
cld
mov
pop
push
xchg
insl
cmp
push
add
xchg
iret
or
jg
ret
cmp
aas
lods
mov
fcomps
jb
inc
sub
pop
and
mov
mov
and
cmpsb
jno
cli
nop
and
cmpsb
jae
or
imul
andb
mov
adc
int3
jns
xchg
fdiv
push
or
in
push
cmc
adc
out
movsl
cmp
mov
lret
sbb
arpl
lods
xchg
inc
add
out
xchg
adc
adc
nop
test
push
mov
ljmp
xchg
cmpsl
fiaddl
xchg
dec
jl
shl
in
xor
mov
xchg
not
add
push
lods
imul
imul
pop
movsl
lods
mov
xchg
aaa
cmp
mov
cld
jg
mov
repz
push
pop
scas
xchg
push
aam
shlb
inc
stos
scas
xlat
leave
stos
cwtl
mov
jno
pushf
sarb
xchg
subl
xchg
xchg
pop
aad
sbb
push
daa
xor
mov
shrl
pop
adc
push
jne
adc
mov
fcomp
pop
popf
in
xor
pushf
push
pop
mov
lds
xor
movsl
les
fsub
and
sbb
xchg
push
and
insb
mov
add
cmpsb
popf
divl
xor
mov
mov
stos
xor
jg
out
xchg
mov
popf
rcll
imul
pand
mov
repz
jl
in
xchg
cwtl
or
mov
outsb
push
stc
pop
jno
call
std
ja
dec
xchg
nop
fcmovnu
shrb
int
add
sub
or
sti
push
shlb
dec
stos
push
adc
lret
jns
or
xchg
add
ljmp
vcvttps2dq
mov
mov
mov
xchg
fst
sahf
push
push
jmp
imul
lods
adc
fnstsw
ja
dec
out
mov
pop
or
ja
lds
mov
jg
push
xor
mov
xchg
pop
lds
pop
addr16
sbb
mov
dec
inc
fbstp
or
xor
mov
inc
or
call
and
gs
dec
cmp
dec
incb
pop
add
in
jnp
cmp
mov
out
shll
not
mov
dec
push
adc
fadd
xor
mov
aad
ret
mov
fsubl
xor
dec
inc
dec
std
outsb
push
mov
std
rcrl
xlat
xchg
stos
mov
scas
rcrb
sbb
pop
jo
addr16
mul
jg
jmp
sbb
faddl
inc
sbb
in
subl
jmp
fcoml
mov
sbb
aam
or
sarb
add
mov
jg
sbb
mov
pop
lcall
add
jo
sub
std
jb
repnz
jo
mov
out
test
in
stc
idivl
mov
adc
aad
orb
shr
jb
adc
xchg
mov
icebp
dec
lret
fmull
dec
jp
inc
loop
mov
xchg
or
xor
orb
in
cmp
adc
mov
dec
je
cmp
sub
aad
negl
add
shll
mov
test
lea
pop
test
mov
inc
sub
and
imull
incl
lods
leave
sbb
lea
mov
shll
pop
sbb
outsb
sti
add
ds
dec
dec
jge
rclb
inc
adc
push
in
out
sahf
mov
cmp
push
mov
push
pop
xor
pop
mov
ret
jne
fiadds
cmp
lea
jo
jns
cmp
dec
lret
jecxz
xlat
in
push
add
or
int3
mov
fisubrs
lret
dec
sub
and
lret
jae
cwtl
ss
cmp
je
mov
leave
dec
pop
icebp
and
inc
repnz
clc
mov
hlt
loope
in
sbb
jle
adc
adc
test
hlt
lds
mov
mov
dec
xchg
sbb
data16
int3
into
jb
jl
fldcw
adc
cwtl
add
and
out
add
lods
pushl
mull
push
pop
jo
mov
cmpsb
sahf
push
push
iret
sub
rcrb
sarb
out
push
aaa
jnp
and
cli
ud1
fwait
pushf
pop
xchg
fwait
cltd
subl
cwtl
sbb
jne
cmpsl
adc
push
imull
xor
sahf
inc
inc
mov
leave
lcall
cli
inc
cli
adc
xor
inc
mov
push
push
sbb
push
das
nop
andb
mov
cmp
andl
shr
outsl
popl
and
push
adc
or
cmp
fwait
stos
adc
cli
mov
outsb
aad
loope
hlt
stos
mov
and
je
rolb
sbb
xchg
mov
repnz
cltd
jle
shll
jmp
mov
adc
and
mov
dec
mov
pop
push
loopne
ja
pop
pop
pop
out
subb
sub
pop
pop
pop
movsb
faddl
cmpsl
bnd
bound
lret
mov
push
jbe
mov
xor
adc
fldl2t
lea
add
lahf
xor
pop
cmp
lds
xchg
jnp
or
and
pop
div
movsl
cmc
mov
pop
fstp
sub
pusha
xchg
xchg
fcmovnb
shrl
sub
dec
adc
jnp
mov
aas
sbb
mov
in
testl
jno
xchg
mov
outsl
ja
es
test
addr16
push
outsl
shrb
insb
mov
jae
push
mov
or
jge
add
lods
sarb
add
jo
insb
mov
lcall
mov
pop
testl
popf
in
fistps
mov
arpl
jecxz
pop
lahf
pop
popa
push
or
jnp
scas
inc
sti
ja
and
pop
adc
xor
cmpsb
mov
mov
mov
inc
mov
dec
das
sub
fcmovne
test
inc
sbb
bound
push
cmp
sub
aas
sbbl
insb
sti
cmp
ja
aaa
mov
rcr
out
fdivs
push
scas
sub
dec
mov
testb
or
pop
sbb
sbb
or
jae
ret
daa
sbb
icebp
jno
cmpl
stos
mov
pop
adc
xchg
sub
push
mov
test
test
xchg
repz
push
dec
popa
pop
adc
daa
mov
out
push
push
inc
or
mov
shlb
xchg
insl
test
mov
push
imul
sub
lea
add
push
fsubrs
pop
neg
pusha
bound
inc
inc
neg
scas
jge
xchg
push
daa
dec
fwait
mov
mov
pop
mov
sub
shl
xchg
jnp
movsl
inc
aas
or
fstpl
sub
sub
pop
sub
sbb
mov
ret
es
xor
stos
test
xchg
js
xor
fs
in
and
in
mov
xchg
xchg
xor
pop
popa
out
push
cmpsl
cli
jp
pop
jmp
xor
sub
jle
mov
fdiv
jae
xchg
fs
mov
es
push
pop
cli
sbb
cmp
outsl
xor
push
xor
mov
pop
ficomps
popf
popf
cmp
mov
cwtl
cmp
dec
or
fimull
enter
sub
fadd
inc
sub
xlat
jg
stos
pop
inc
pop
add
ds
mov
jns
ja
push
or
fstpt
cwtl
xchg
mov
xchg
inc
lds
pop
loopne
cmp
sub
sub
aad
cwtl
jnp
push
xlat
hlt
and
cmp
jnp
je
and
mov
popa
jns
push
dec
xchg
push
out
cs
fdivr
test
scas
std
ljmp
xchg
push
cmp
popf
jns
loop
cmp
push
fstl
mov
decl
push
mov
test
add
jmp
push
sub
add
jg
add
cwtl
rcll
aam
sub
cmp
pop
add
cmp
sbb
loopne
mov
cmc
adc
mov
or
add
cmp
lret
sti
add
into
push
cmc
jb
jo
outsb
rcr
ret
sbb
or
jle
adc
pop
rcr
or
jmp
shrb
push
jae
clc
or
or
shrb
push
nop
repnz
sarl
xchg
xor
sub
sbb
fsubs
sbb
nop
std
push
mov
test
jns
jl
das
mov
add
nop
push
test
jmp
mov
xchg
shlb
fisubl
test
nop
and
stos
in
add
sub
sub
pop
sub
pop
cmp
dec
shll
jg
cmp
ljmp
cwtl
xchg
inc
adc
inc
das
and
loop
inc
mov
lcall
xchg
mov
pop
out
mov
pop
adc
inc
jae
xchg
out
jno
lcall
dec
in
scas
fldl
pushf
push
cmp
loope
sub
jbe
and
xor
in
lahf
push
sbb
mov
sub
test
mov
cmp
in
mov
dec
in
sti
xor
clc
mov
gs
out
int3
jl
ljmp
test
inc
sbb
fstpt
aaa
ja
inc
jl
lods
inc
sahf
inc
dec
add
and
fwait
pusha
pop
mov
aaa
dec
mov
outsb
movsb
pop
pop
fisubrs
jnp
stos
jno
cmpb
fadds
testb
das
cmp
add
pop
insl
xor
test
add
jo
ljmp
push
repnz
pushf
inc
outsb
mov
pop
lods
mov
sahf
pop
outsl
ds
fs
adc
push
aas
test
getsec
rorb
jecxz
sbb
repnz
ja
iret
dec
js
jno
lea
sbb
mov
pushf
mov
adc
popa
dec
jl
shl
cld
and
int
scas
inc
jle
fstp
xchg
xlat
sbbb
and
add
xchg
jb
sbb
scas
cmc
adc
lcall
lods
xor
bound
les
jp
mov
xor
pop
mov
fmuls
jge
negb
jo
pop
adc
pop
repz
or
and
out
pusha
lret
jnp
pusha
mov
cmp
nop
and
xor
push
aad
imul
sbbb
data16
cmpsl
fcompl
into
ret
insb
rorb
aam
jns
sti
xor
jge
xchg
sub
je
xchg
or
pop
pop
test
cmp
jl,pn
mov
scas
ds
std
hlt
dec
and
rol
add
icebp
xlat
sub
fldl
popa
adc
cli
xor
decb
dec
inc
push
test
add
pop
sbb
outsl
fidivl
in
or
cli
adc
cmp
pusha
mov
mov
sub
gs
fistpll
mov
in
lock
repz
test
shrb
push
push
jle
mov
push
cmpsl
adc
aaa
or
add
shl
insb
mov
inc
into
popa
sub
cmp
cmp
pop
or
test
sub
outsb
sbb
testl
addr16
stos
push
fmul
notb
sub
mov
pop
out
iret
pop
sahf
xlat
ljmp
rorb
mov
lods
or
lds
push
add
adc
lea
into
cmp
xchg
cs
negl
sub
adc
add
push
cltd
lret
int
dec
imul
sbb
xchg
cmpsl
mov
inc
mov
imull
jne
es
or
popf
daa
ficoml
idiv
mov
fdiv
scas
cmp
sub
dec
into
ljmp
bswap
mov
mov
in
movsl
lods
jg
call
cmp
jae
mov
pusha
stc
pop
sti
adc
xor
icebp
pop
mov
stc
inc
xor
jbe
movsl
shlb
add
fwait
add
add
ret
or
and
pop
push
jecxz
shl
rcll
jecxz
mov
hlt
xor
xchg
out
push
sbb
andb
ds
dec
imul
int3
push
cltd
mov
cmpl
or
mov
aam
cmpsl
xor
dec
or
insl
es
cmpsl
or
lea
dec
jl
test
daa
and
in
pusha
push
adc
out
adc
lods
sbbb
xchg
jecxz
out
aas
test
lret
clc
es
mov
mov
test
cmp
xorl
jg
and
pusha
pushf
mov
ficomps
jo
stc
inc
push
loope
call
push
stos
sub
rclb
add
jne
dec
fisttpl
ja
jmp
cmpsl
inc
clc
add
idiv
icebp
and
jo
adc
mov
and
movsb
mov
cmp
and
adc
lret
scas
sub
cmp
adc
adc
mov
inc
scas
sbb
icebp
push
mov
in
inc
mov
push
push
pop
sbb
movsb
lret
in
xchg
popa
sub
sbb
inc
lds
imul
fs
in
bound
sbb
movsl
fcoms
add
or
add
adc
xor
ret
xor
popa
sti
cmp
rolb
jg
test
cmpsb
pop
bound
push
dec
xlat
sub
out
sahf
jbe
incl
ret
notb
pop
inc
scas
push
lods
filds
push
lret
mov
dec
int3
adc
cmc
jns
mov
lret
pop
das
adc
mov
cld
add
or
rolb
sbb
xor
and
lods
lds
rcl
test
sub
or
sub
sbb
dec
aaa
sahf
orl
push
xor
jo
or
dec
xor
into
pop
jno
dec
dec
or
jns
and
stos
mov
data16
xchg
mov
data16
arpl
sarl
mov
repnz
push
outsb
lcall
or
repz
xchg
fucomi
data16
iret
jae
bnd
pop
fcompl
jae
jl
mov
into
adc
jbe
jne
xorl
ljmp
or
repz
repz
xchg
mov
ss
mov
loopne
mov
adc
inc
push
mov
insl
jbe
hlt
adc
add
jecxz
inc
es
lods
mov
jno
mov
mov
mov
add
lock
mov
xor
or
lret
das
lahf
les
pop
leave
lret
sbb
xchg
jns
cld
or
daa
xorb
test
in
fmuls
sar
cmpsb
jno
mov
lea
lods
inc
mov
mov
mov
testl
movsl
shll
add
in
or
outsl
or
adc
mov
dec
mov
inc
mov
and
pop
sub
xor
ljmp
pop
or
outsl
cmp
mov
ficoml
scas
sti
hlt
xor
scas
mov
dec
pop
cmp
sub
popa
out
outsl
and
dec
fisubrl
popf
lods
push
add
sbb
ds
adc
cmp
das
jno,pt
pop
andb
aas
push
jno
pusha
clc
iret
movl
popf
cmp
pop
fidivl
xor
sbb
decl
pop
xlat
push
loope
repz
dec
pop
cmc
mov
pop
cmp
cld
mov
call
test
subl
arpl
popa
out
adc
push
xor
push
push
mov
mov
xlat
and
fistpll
push
or
pop
xor
jmp
in
lret
es
adc
pop
mov
cltd
inc
cmc
or
inc
test
cmpsb
inc
test
pop
movsl
rcrl
push
cld
lock
sahf
mov
push
ret
pop
push
mov
xor
and
orb
nop
and
cmpl
pop
xlat
or
push
cs
or
loop
outsl
dec
pop
loop
mov
lods
mov
enter
cld
sbb
mov
push
push
loopne
xor
or
mov
add
out
outsb
pop
xor
xchg
into
mov
sbb
rorb
xchg
insl
sub
stos
pop
mov
loop
cltd
inc
dec
lahf
pop
pop
call
adcl
xchg
fistl
pop
or
jns
mov
mov
movlps
cmp
push
movsl
ljmp
mov
mov
sub
scas
ffree
sbb
xchg
inc
popf
mov
sbb
aas
pop
and
mov
xchg
mov
push
insb
jg
add
insb
enter
and
sbb
lods
out
test
mov
pop
frstpm(287
int
xchg
lock
jns
push
add
scas
test
and
jge
xor
push
mov
std
xchg
call
mov
xchg
dec
or
jg
out
shl
call
xor
outsb
popf
mov
jg
mov
inc
adc
jbe
mov
pushf
testl
nop
dec
mov
sti
outsl
mov
sbb
inc
fmuls
mov
repz
pop
xchg
lods
mov
push
push
add
add
xchg
arpl
dec
dec
mov
out
mov
xchg
mov
push
imulb
out
add
mov
inc
and
mov
pop
pop
aaa
out
cmc
mov
pop
sbb
and
jp
xchg
jp
cmc
addl
push
sbb
mov
push
dec
dec
push
jmp
adc
sbbl
or
scas
push
cmp
xchg
nop
pop
daa
jg
iret
ja
mov
push
orb
jo
iret
stos
sbb
fnstsw
movsl
adc
out
enter
xchg
fldl2t
jb
add
ss
ss
cmp
cwtl
les
mov
in
or
int
lcall
cld
pop
test
xchg
push
cmc
enter
jle
clc
fadds
pop
pusha
shll
or
sbb
loopne
das
outsb
mov
adc
lds
in
fsubrl
cmpsb
mov
sti
mov
orl
shrl
scas
movsl
adc
jb
pop
pushf
ret
sbb
dec
mov
mov
ret
xchg
and
pop
fisttps
push
adc
sub
inc
shll
sbb
out
sti
inc
cltd
cmpb
mov
mov
cmc
lret
js
push
dec
cmpsl
inc
sbb
mov
mov
push
push
mov
rcpps
add
add
or
lret
enter
push
mov
dec
jle
sbb
ja
mov
xchg
fsubrp
mov
and
and
dec
out
pop
push
cmc
arpl
push
mov
lret
aaa
xor
mov
add
cmc
adc
pushf
mov
loop
push
mov
cmp
es
push
mov
inc
sti
bound
mov
call
sbb
add
xchg
call
stos
jg
mov
lret
mov
xor
cmp
pop
mov
xchg
outsb
gs
sbb
mov
loope
mov
and
imul
jecxz
cmp
xor
add
hlt
jno
shr
outsb
mov
push
sub
xor
add
mov
int
aaa
mov
sbb
sub
xchg
arpl
inc
js
push
lahf
test
pop
xlat
shlb
pushf
imul
push
pop
xchg
mov
leave
imul
dec
inc
int
std
js
in
ficomps
xorb
lods
outsl
loopne
sub
add
push
mov
pop
xlat
and
int
mov
rolb
repz
mov
int3
add
arpl
dec
pop
mov
sbb
fdivrs
xchg
ret
dec
jbe
mov
ret
inc
pop
jne
aas
add
mov
push
add
add
mov
popa
aas
sub
ja
ret
dec
cmp
cmpl
daa
outsb
jnp
and
ret
adc
mov
xchg
sub
pop
add
movsl
pop
das
bound
jecxz
andps
jp
inc
jl
hlt
jle
adc
or
dec
mov
movsl
and
cmpsl
mov
inc
andb
js
sbb
fdivl
xchg
pop
in
sbbb
pop
ja
mov
mov
jno
or
inc
mov
in
test
cmp
push
add
adc
rcrb
push
sub
pop
mov
jae
and
aaa
mov
pop
xchg
outsb
push
xor
aad
sub
cmp
aas
movsl
xchg
pop
clc
in
js
jns
addr16
mov
push
imul
cmp
cltd
orl
fnstsw
xchg
jp
adc
ficomps
js
push
dec
mov
mul
data16
pushf
pop
test
fucomi
push
mov
pop
mulb
and
scas
and
into
sub
rcrb
in
xchg
mov
jle
cmp
add
dec
xchg
daa
add
cmpsb
fidivrl
in
and
cmc
cmp
rolb
cwtl
adc
fwait
adc
pop
mov
and
cmp
negb
and
push
pop
xchg
pop
jp
or
enter
and
xchg
das
add
insb
scas
add
movsb
ja
push
jmp
test
xchg
sahf
pop
loope
fildll
adc
in
ret
push
add
jmp
test
xchg
movsl
cmp
and
jbe
dec
mov
or
dec
jle
pxor
push
gs
push
ret
or
and
js
fsubl
aas
add
outsl
dec
out
sbb
push
xchg
ja
ljmp
adc
inc
out
in
out
dec
xchg
mov
xchg
or
cli
cmp
outsl
repnz
pusha
test
pop
adc
fidivs
mov
push
jge
dec
aas
mov
sarl
icebp
mov
push
repnz
outsl
inc
lret
sbb
cld
and
xchg
dec
cmp
mov
push
mov
push
push
cld
mov
xor
inc
nop
push
addb
outsl
pop
clc
fldl
insb
sub
addr16
jno
xchg
cmpsl
pop
je
in
jg
inc
sub
push
scas
mov
dec
fstp
out
dec
and
scas
jb
sub
incl
jb
push
xchg
mov
sti
pop
jecxz
das
mov
sub
jge
cmp
lods
push
rorb
ja
pop
xchg
xchg
mov
cmc
and
or
mov
stos
push
add
sarl
inc
jo
pop
ror
int
mov
jb
or
les
dec
loope
lret
cmp
xor
mov
push
out
inc
lcall
dec
sub
pop
xchg
or
mov
adc
and
push
xchg
cmp
cmp
dec
movsb
add
iret
inc
imul
jmp
pop
cmp
jne
jne
push
fnstenv
fsubrp
call
cmpsl
ja
and
out
mov
aad
aad
jno
dec
xchg
xchg
sbb
mov
dec
xor
ss
pop
test
pop
mov
add
jp
xchg
shll
cli
xor
pop
jno
add
xchg
movsb
in
pop
inc
adc
pop
cmpsl
lods
mov
leave
das
rcrl
xchg
push
fistpll
push
leave
pop
push
push
in
xchg
jb
mov
or
dec
pop
stos
add
xchg
push
sbb
mov
mov
gs
cmc
push
lahf
jbe
jo
fldcw
inc
push
test
test
test
scas
adc
popf
idivl
mov
aam
xor
fmull
cmp
xor
clc
sbb
leave
push
dec
add
adc
pop
adc
jp
mov
loop
je
enter
push
pop
xor
pop
xchg
dec
jnp
dec
pop
cmpsb
pop
scas
icebp
setnp
dec
loope
sub
ds
pushf
push
dec
aas
add
incb
imul
pop
pop
arpl
cltd
aad
leave
imul
mov
mov
cld
jle
push
test
notb
test
add
and
xchg
ret
push
mov
mov
cltd
or
fcmove
add
xchg
mov
push
jbe
test
add
jb
lcall
into
lods
mov
addb
cld
arpl
pop
fmul
ss
xchg
sub
lock
loope
mov
rorb
pop
jge
sti
loop
sarb
inc
insb
pop
add
subl
pop
test
cltd
pop
outsb
sbb
dec
test
adc
mov
testb
xlat
ja
in
in
cmp
jg
jecxz
push
lahf
ret
outsl
jbe
in
test
add
mov
test
or
int
nop
movsb
mov
mov
imul
cli
or
pop
adcl
jmp
jp
lret
inc
xor
xor
mov
popf
insl
out
outsb
mov
jbe
and
xchg
sbb
call
jo
sub
mov
pop
aaa
cli
or
jne
aas
cmp
fists
jp
leave
mov
nopl
mov
stos
pushf
cmp
js
lcall
jg
xchg
cmp
loop,pt
or
movsl
cmp
fs
arpl
dec
call
repz
fstpt
in
pop
clc
xchg
push
dec
mov
jne
cmp
stos
lcall
cmp
mov
rcrl
xor
iret
xchg
lock
xor
aad
jl
sub
js
inc
jae
sbb
lds
xchg
stos
mov
cmc
xor
xlat
mov
or
cltd
mov
push
push
jl
jmp
ljmp
or
cmp
push
mov
add
add
mov
pop
xchg
xchg
push
mov
ja
jle
loop
adc
push
or
jecxz
push
xor
gs
adc
ja
lahf
test
fcomi
ljmp
dec
cmp
arpl
andl
int
addr16
gs
add
or
and
popf
aad
aam
xchg
push
and
pop
gs
movsl
lods
leave
fs
stc
sbb
cs
lret
add
xor
xlat
add
sti
pop
packssdw
xchg
mulb
sub
sarb
xorb
dec
cmp
imul
cmpsl
mov
lods
popf
cmpsl
or
dec
ja
int
lahf
jp
push
jbe
fidivrl
push
addr16
sbb
mov
or
orb
lahf
scas
pop
sbbl
mul
dec
push
xor
inc
pop
sti
cmp
lahf
rcrb
pop
and
xor
fadds
sub
fimull
out
mov
sahf
pop
dec
shlb
xor
inc
dec
fucom
and
out
and
mov
push
mov
lcall
mov
fstpt
pop
gs
shrl
movsl
xor
incb
divl
adc
imull
xchg
lds
in
ret
mov
sbb
mov
push
fiaddl
insl
and
hlt
aaa
inc
xchg
dec
ljmp
pop
dec
gs
rcrl
pop
call
test
push
aad
mov
rol
push
lods
push
int3
fs
jg
bswap
enter
or
bound
daa
pop
or
jle
adc
dec
add
pushf
adc
mov
xor
addr16
mov
loope
dec
outsb
inc
push
cmp
sub
ja
xchg
and
or
xchg
aaa
and
js
xchg
push
sub
iret
adc
add
lods
iret
cmp
lock
add
cmc
pop
gs
add
xorb
xchg
dec
xor
cmp
ror
adc
xchg
cli
xchg
adc
lret
divb
add
adc
sti
pop
repz
push
cmp
mov
sbb
mov
cld
xchg
inc
imulb
sbb
adc
jp
mov
addr16
cmpsb
ds
adc
xchg
arpl
jmp
ss
inc
xor
add
lods
or
jb
test
jno
in
jnp
and
lcall
adc
pusha
mov
add
vmread
cwtl
aam
pop
lea
xchg
loop
and
insl
xor
add
and
sbb
scas
jo
xchg
pop
sbb
lret
xlat
test
and
jbe
mov
xchg
out
mov
js
bound
pop
shlb
dec
push
cmp
ss
xchg
sub
inc
xchg
mov
mov
cmpsl
dec
xchg
es
inc
push
jp
sub
dec
push
push
fchs
xor
js
push
pop
mov
mov
inc
mov
xchg
jnp
mov
inc
fadds
enter
mov
fsubl
mov
mov
imul
cwtl
dec
dec
and
lcall
data16
xchg
js
cld
cmp
inc
cmpb
inc
outsb
push
push
stos
push
push
mov
adc
dec
or
sbb
pusha
mov
movswl
stos
jo
iret
xchg
mov
aas
mov
jl
out
daa
xor
inc
repz
fwait
and
cmp
pushf
cltd
pop
xchg
fbld
or
adc
nop
mov
pop
adc
or
jo
fsubr
cmpb
or
mov
insl
push
in
xorb
jge
add
lcall
outsb
scas
push
mov
into
mov
mov
add
mov
cltd
jno
int
cmpsb
leave
divl
aas
in
pop
xor
mov
ret
pop
mov
xchg
jnp
dec
sub
leave
popa
adcl
pop
sarl
shrl
lret
loope
fcomi
mov
cmp
mov
mov
inc
jo
movsl
add
pop
push
cs
jmp
cltd
packuswb
pop
fcomi
pop
aas
mov
daa
adc
jae
add
das
out
inc
push
scas
data16
fwait
sbb
cli
and
dec
cmpsl
std
imul
ss
pop
mov
test
adc
push
xor
push
xchg
jg
push
push
int
mov
repnz
bound
mov
lea
cmpb
aad
pushf
mov
xchg
shlb
mov
cmp
daa
mov
in
adc
pop
leave
sbb
mov
mov
enter
shlb
mov
push
rcrb
jns
xlat
mov
jnp
or
xor
xor
cmpsl
dec
push
popf
out
fisubrs
pop
in
iret
ret
test
stos
mov
sub
and
and
jnp
loop
aaa
or
jp
ret
addb
stos
jbe
jg
in
inc
dec
test
mull
in
jo
pop
push
inc
jge
mov
push
mov
cmpsb
sarb
mov
gs
push
dec
mov
cmpsb
inc
jb
test
packssdw
fcomps
or
cmp
out
clc
mov
data16
aad
jp
mov
xor
xor
fmull
push
sub
adc
or
popa
das
jmp
in
mov
ja
lahf
scas
call
outsb
fucomp
or
sbb
pop
popf
repz
pop
mov
sbb
je
jae
adc
fdiv
sbb
aaa
ljmp
cld
mov
xchg
cs
fisubrs
and
mov
and
pop
sbb
cmp
xor
xorl
fimull
subb
andb
ret
mov
jae
mov
push
xchg
mov
adc
bound
cmc
out
out
test
mov
inc
cmc
sbb
pop
inc
xchg
push
clc
cmp
ljmp
lods
rcrb
in
mov
and
xchg
sub
outsl
out
fwait
lods
jmp
sbb
sbb
js
xor
add
cmp
and
js
lret
mov
jnp
mov
cltd
std
leave
pop
lret
loopne
add
push
cmp
testl
mov
shll
aaa
imul
mov
fsubrl
push
mov
jo
fisubrs
sahf
cmp
adc
cmp
mov
sub
fucomip
test
jno
dec
out
aas
cmp
cwtl
or
jnp
in
out
pop
nop
mov
sahf
cmp
pop
clc
sub
ss
sub
mov
mov
sub
cwtl
stos
mov
es
js
lock
inc
or
jnp
inc
mov
jmp
mov
hlt
mul
add
xchg
mov
rol
dec
std
lahf
or
fisubs
adc
andl
and
xor
clc
mov
imul
dec
cld
push
sub
or
cmpsb
pop
in
bound
cmp
lods
adc
or
cmp
dec
and
out
loopne
mov
call
ret
insb
mov
or
pop
aam
jecxz
push
add
xchg
imulb
lcall
mov
adc
test
mov
sub
jb
mov
mov
dec
pop
xchg
and
pop
xchg
mov
adc
out
in
in
loopne
or
mov
or
push
subps
fsubl
ret
cmp
into
jo
fldt
out
push
shll
or
cmpsl
cmp
pop
out
sbb
adc
div
sbb
rcl
pop
int3
repz
sbb
rcll
xor
test
sub
out
mov
cmp
dec
xlat
fstpl
mov
jb
insb
rclb
mov
push
push
lcall
dec
mov
jae
mov
bound
ljmp
jb
pusha
imul
add
pop
lock
or
inc
mov
xchg
mov
inc
and
mov
sub
in
pop
ss
sub
lcall
clc
jmp
mov
cwtl
cmp
and
gs
mov
andl
std
sbb
jge
xor
mov
and
les
sub
repnz
pusha
mov
jo,pt
push
and
pop
mov
popf
sub
shll
pushf
pusha
test
adcl
mov
dec
mov
xor
and
aaa
mov
loope
sbb
sub
stos
mov
sbb
ret
and
addl
inc
pop
rcr
adc
lods
and
and
out
ds
mov
and
scas
test
testl
adc
sbb
fadd
je
loope
sarb
loopne
add
sbb
mov
adc
xor
dec
into
in
pop
pushf
pop
ja
loope
fisubrl
sbb
push
stos
inc
fldl
jmp
xchg
mov
cli
scas
push
pop
push
add
mov
xchg
in
adc
in
mov
aaa
fldl
int
jge
pop
xor
jbe
popf
xor
test
call
bound
mov
fistpl
int3
xlat
and
xor
sbb
add
cmp
and
into
pop
mov
cmp
inc
bound
push
jmp
push
mov
cmpsl
lcall
out
rorl
push
jmp
icebp
decl
aaa
mov
mov
nop
mov
mov
mov
and
and
lret
jae
js
jmp
mov
sti
add
xchg
and
nop
cmpsl
add
jns
and
push
les
and
sbb
inc
je
and
sbb
dec
xlat
clc
cmpsb
mov
xor
push
or
adc
fisubrl
insl
cmp
adc
sbb
push
cmpsb
inc
std
mov
xor
mov
aad
add
or
xor
mov
in
inc
lea
call
insl
icebp
lret
or
sbb
aam
push
rcrb
jp
pop
fstpt
inc
inc
cmp
gs
cmc
mov
inc
aam
xchg
mov
adc
repnz
jp
test
pop
out
out
xorb
xchg
and
lcall
scas
repnz
pop
sbb
aas
pusha
push
xchg
push
push
fiadds
mov
mull
mov
cmpsl
push
mov
xor
adc
scas
push
inc
mul
add
test
mov
mov
enter
dec
mov
inc
xchg
daa
pop
dec
dec
push
add
or
popa
fisttps
add
repnz
jecxz
cs
gs
cld
mov
fnstsw
add
push
jg
in
sarl
xchg
cli
test
mov
stos
sbb
jnp
cmpsl
mov
mov
jle
leave
into
rcrl
scas
inc
xor
push
ret
mov
jge
lock
mov
pop
enter
cmpsb
cwtl
je
int3
mov
dec
inc
imul
and
sarl
and
push
jae
jo
and
push
insl
movnti
mov
adc
fdivl
addr16
fists
aaa
adc
mov
sti
rcr
or
clc
push
mov
add
push
pop
lea
push
pop
int
mov
and
popa
loopne
push
sbbl
stos
jb
mov
cmp
test
test
dec
jmp
out
and
loop
xchg
lret
inc
dec
cli
in
ja
lahf
or
and
je
std
stc
jbe
sahf
ds
cmc
std
push
lds
mov
mov
jge
lret
jg
gs
sub
sub
push
dec
push
insl
test
push
xchg
lcall
in
pushf
inc
mov
cmp
mov
mov
fdivs
xchg
ret
fdivs
jecxz
mov
sub
mov
mov
add
in
jns
pop
xchg
decb
mov
insb
add
jo
outsb
enter
outsl
leave
cmp
adc
insb
sti
sbb
dec
fistpll
mov
dec
mov
fwait
jb
std
mov
leave
sub
push
in
stc
out
or
sti
cmp
adcb
fwait
test
or
jle
out
cmp
cmp
loope
xchg
or
push
or
cmpsl
and
pop
jb
pushw
mov
aad
adc
daa
mov
test
and
and
loopne
xchg
inc
pop
imulb
mov
sub
adc
push
mov
ret
lea
adc
dec
adc
mov
ret
fldenv
cld
dec
imulb
add
lods
ljmp
imul
and
outsl
push
in
and
xor
mov
mov
xchg
enter
mov
cmpsl
in
mov
in
fidivs
mov
fnstsw
adcb
clc
inc
push
stos
ljmp
dec
pop
mov
test
push
sub
or
mov
and
sti
jl
fsubrs
xchg
clc
shlb
test
insl
aaa
lcall
ja
cmpsb
mov
mov
and
shlb
rcrb
cmp
mov
mov
int
and
icebp
pushf
int
mov
inc
inc
adc
out
jl
pop
sub
out
fs
jg
sbb
sbb
jbe
sub
cmp
cmpsb
lods
ret
cwtl
or
cmp
clc
mov
dec
pop
adc
insl
shll
adc
dec
inc
jmp
call
jnp
fwait
cwtl
ficoms
mov
pop
sub
mov
pop
subb
mov
inc
pop
jns
push
inc
stc
out
gs
jmp
push
pop
add
add
sahf
out
shll
pop
idivb
icebp
lcall
mov
pop
mov
pop
xchg
cmp
daa
adc
dec
ret
fcmovnbe
je
mov
pop
and
aaa
and
cmpsb
mov
jno
leave
lea
adc
fnsave
gs
inc
inc
and
test
add
ds
sbb
dec
sub
jg
cltd
rcr
push
cmp
sub
div
sbb
into
xor
stc
cwtl
lock
movb
scas
jl
aad
pop
pop
in
lcallw
in
mov
mov
inc
imul
dec
call
dec
aam
push
cmpsl
cmp
and
in
iret
mov
xor
push
jnp
push
or
cmp
in
fiaddl
js
pop
sbb
lods
mov
cmp
aas
add
mov
jl
xchg
and
test
cmp
dec
roll
dec
test
inc
dec
and
dec
jge
ja
xchg
in
jmp
clc
or
adcb
cwtl
clc
or
ret
movsb
sbb
mov
and
sub
cmp
xor
cmp
inc
xor
inc
mul
enter
imul
xchg
fistpll
jle
insl
addb
rol
xchg
hlt
pushf
mov
insl
lock
add
pop
pushf
inc
mov
cmp
loop
leave
push
shl
jmp
stc
in
jp
sub
gs
repz
sub
mov
mov
cwtl
sbb
andb
repnz
pop
sahf
mov
js
mov
sbb
inc
cltd
movsl
cltd
and
jnp
inc
outsl
js
out
scas
adc
push
sahf
pop
sbbb
loope
mov
inc
or
orl
or
addl
dec
test
push
sub
ret
sbb
mov
mov
insb
adc
sbb
inc
ja
add
or
sahf
push
fnstcw
sti
pop
sbb
std
aaa
out
inc
xlat
ljmp
inc
pop
push
repnz
add
int3
and
arpl
pop
pop
imul
jle
scas
leave
mov
mov
jl
mov
outsb
bound
stos
int
cs
scas
insb
jno
mov
das
into
jo
inc
aas
hlt
mov
push
stos
sti
jecxz
jne
jge
cmp
in
je
push
out
stos
xor
dec
nop
push
add
bound
cmovb
sub
mov
test
sbb
xor
pop
or
adc
fldcw
cwtl
push
cs
jno
pop
cmp
and
mov
rcr
das
mov
negb
push
xor
nop
ds
inc
aam
mov
xchg
pop
dec
daa
cs
adc
add
js
leave
push
xchg
ficompl
les
ja
scas
xor
cmpsl
fisttpl
cltd
jo
xchg
imul
pusha
xchg
mov
negb
les
mov
in
inc
outsl
and
cmc
pusha
mov
stc
mov
push
push
je
adc
pop
pop
inc
inc
dec
sbb
lret
jne
push
jo
ljmp
xor
mov
sbbl
movsl
adc
sub
xlat
push
cmpsl
test
in
sahf
and
sub
int
in
outsb
push
aad
fcomi
lea
add
in
je
test
lods
xchg
mov
xchg
out
push
mov
pusha
icebp
xchg
data16
sbb
pop
inc
outsl
out
mov
adc
jns
in
jns
pop
push
sbb
mov
sarl
add
mov
inc
subb
lock
mov
loope
dec
pop
dec
cs
out
xor
outsl
xchg
das
push
pop
sub
mulb
insl
imul
stos
and
adc
mov
aad
dec
xor
lock
add
dec
pop
sbbl
ljmp
lods
and
pusha
scas
xor
mov
adc
or
in
std
xor
sbb
sub
adc
pop
imul
loope
ja
out
jmp
stos
test
push
push
lret
mov
adc
xchg
popf
subl
jmp
jp
xor
sbb
or
sub
in
xchg
jmp
dec
add
mov
pushl
loop,pn
stos
lcall
rcrl
sub
lcall
out
into
jb
sar
mov
push
int
in
and
sub
fldenv
movsl
cmp
testl
pop
mov
push
xor
push
push
std
and
xor
jb
lods
in
jno
or
test
pop
sbb
lcall
add
push
test
pop
popa
xchg
fists
push
out
ret
int3
cmp
into
xor
xchg
push
dec
int
dec
push
dec
jno
xchg
mov
pushl
sub
mov
lock
daa
sbb
sbb
call
jo
lock
push
push
push
hlt
out
test
pop
mov
adc
push
mov
mov
jg
mov
cmp
cmpsb
push
cmpsl
pop
js
cmpsl
inc
std
inc
sub
cmp
or
lock
pusha
and
cmp
ss
sbb
fwait
inc
fdivr
xor
jmp
push
popf
sub
cld
sahf
movsb
jle
xlat
mov
add
scas
aas
les
aaa
in
js
lods
pop
enter
loope
lcall
xchg
jmp
clc
inc
push
pop
inc
scas
jae
out
sbb
and
xor
std
add
imul
lea
outsl
call
loopne
nop
ds
xor
data16
cmp
movsl
adcb
ljmp
mov
or
or
lcall
jo
cmp
xor
std
adc
hlt
xor
xchg
dec
addr16
jge
and
inc
testb
and
imul
mov
sbb
outsl
loopne
rcll
icebp
pop
cwtl
outsw
pop
out
dec
pushf
mov
xlat
shlb
fistpl
js
sub
or
push
adc
sub
rcrb
loop
clc
xor
mov
ret
cmpsl
loopne
xchg
push
repz
shl
mov
sbb
push
nop
stos
mov
cs
sub
jp
cli
testl
jmp
xchg
cmp
jmp
cld
xchg
mov
icebp
roll
adc
adc
mov
sahf
pop
in
ljmp
stos
mov
movsb
pop
push
inc
sbb
outsb
fcoms
icebp
repnz
nop
mov
push
pop
dec
lds
in
fisttpll
addr16
leave
xor
adc
cmpsl
aaa
in
addr16
shll
jle
gs
and
jo
cmp
aas
and
cmpsb
faddp
or
sarl
loop
in
int
dec
or
dec
xchg
cld
xchg
jge
out
dec
scas
xchg
pop
and
push
adc
leave
pop
bound
dec
shlb
pop
addb
in
mov
xor
and
fisubrs
testl
sub
pop
loopne
outsl
mov
jns
cwtl
inc
cmp
sarl
xor
inc
incl
jne
cwtl
data16
cli
ljmp
jl
cli
stc
fucomp
pop
and
cli
pop
in
mov
dec
mov
lds
das
imul
push
jne
sbb
stos
mov
pop
ret
mov
pop
data16
jo
sbb
mov
mov
or
adc
or
and
jmp
push
xchg
adc
jns
rol
sbb
and
loop
sbb
cmpb
xchg
arpl
xchg
les
xor
fwait
mov
jle
xor
inc
push
push
push
in
or
cwtl
call
insl
scas
and
pop
add
mov
jl
test
and
inc
out
push
fwait
and
inc
pop
pop
dec
add
adc
and
cmp
push
pushf
scas
dec
subl
sbb
outsb
dec
jecxz
mov
cmpsl
push
imulb
or
repnz
cltd
pop
xlat
cmpsl
lret
addb
ds
sub
xchg
mov
lods
outsb
aam
mov
iret
popa
mov
push
loopne
ljmp
into
fisubrl
lret
push
mov
hlt
insb
test
faddl
push
push
in
mov
bound
sbb
mov
sub
cwtl
mov
inc
mov
loop
or
dec
inc
in
lods
mov
out
mov
jle
imul
push
push
cmp
pop
xor
lret
clc
inc
aaa
shlb
test
sub
push
fcmovnu
xlat
in
inc
mov
mov
mov
ljmp
push
mov
in
iret
or
sarl
shr
inc
inc
orl
das
popf
sbb
push
pop
push
leave
mov
mov
push
cmp
shlb
or
and
inc
and
push
ror
in
sub
dec
mov
es
aas
push
jl
sbb
lret
ja
fbld
and
bnd
mov
jb
dec
sub
xchg
push
mov
sbb
lock
xchg
pop
adc
mov
dec
jne
stc
pop
leave
in
push
ret
popf
and
repz
sbb
xor
es
mov
adc
lret
inc
lahf
jp
push
mov
call
icebp
xor
and
push
push
sub
int3
sub
dec
cmpsl
sub
cmp
sub
sub
bound
adc
pop
mov
insb
push
and
out
sub
ficoms
dec
call
leave
and
mov
mov
adc
scas
loope
outsb
iret
sbb
xchg
pop
jl
xor
scas
cs
int
xor
xchg
dec
xchg
out
add
sbb
unpcklps
mov
push
test
push
adc
dec
jbe
loop
orb
inc
adc
sub
jp
and
test
mov
sti
dec
mov
insb
imul
jp
aad
pop
jne
movsb
mov
push
lock
adc
add
test
mov
sbb
lock
mov
orl
dec
cmp
outsb
clc
out
lret
testl
popf
xchg
adc
dec
ror
and
sub
cmpsl
cs
out
fdiv
or
movsb
in
push
pop
xor
and
mov
movsb
cs
xchg
dec
adc
aas
mov
enter
jnp
mov
lret
xchg
stc
jl
lea
inc
fpatan
xlat
or
rcl
mov
into
orl
divb
ret
aad
pop
jp
je
test
add
das
sub
std
gs
mov
mov
loop
cmp
pusha
stos
add
aaa
xor
test
out
xor
cmp
insl
cmp
clc
pop
add
fidivrs
fldcw
out
loope
sbb
pop
fcoms
enter
inc
pop
cmp
arpl
inc
or
add
jge
xor
imul
cli
sbb
mov
pushf
pop
mov
pop
inc
dec
jb
jne
jb
sarb
mov
pop
xchg
fcoml
xor
sub
pop
cmpsb
imul
xor
cmc
lahf
hlt
mov
icebp
negl
lahf
ljmp
pop
daa
pusha
dec
das
sbb
push
and
push
jno
jo
sub
add
cli
xchg
sahf
pop
ret
push
insb
mov
pusha
in
mov
in
es
cli
lods
push
fwait
sub
fbld
push
lods
lret
movsl
cmp
mov
iret
inc
jecxz
xchg
mov
jl
in
jns
nop
js
sbb
pop
mov
in
rorb
xor
mov
mov
in
sbb
cmp
add
sbb
addb
jp
pop
cmp
gs
xchg
adc
cld
push
outsb
dec
xchg
imul
into
sbb
cld
inc
mov
adc
pop
sti
test
ficoml
sub
enter
in
aas
push
jmp
dec
xor
out
mov
out
xchg
mov
mov
pop
push
loop
mov
aaa
movsl
and
inc
aad
insb
mov
repz
add
inc
mov
shr
jae
pop
fists
mov
cmp
push
xlat
sbb
sahf
ja
jae
scas
push
sub
pop
shrb
lret
out
and
loop
lea
xchg
adc
xchg
mov
and
iret
out
lock
std
inc
adc
sbb
out
ret
lret
dec
mov
ss
sti
or
mov
inc
sbb
call
cmp
cmpsl
mov
pop
dec
xchg
imul
dec
inc
xchg
jl
lret
iretw
inc
cmp
sub
xchg
mov
pusha
jb
stc
test
aad
dec
xor
inc
daa
xchg
iret
cmpsb
sub
pop
xchg
outsb
fcompl
in
xorl
ret
and
popf
ds
pop
int3
pop
push
fldl
aas
daa
stc
mov
or
xor
add
xlat
lods
jno
insl
inc
pop
dec
invd
jbe
pop
ret
mov
dec
add
push
in
stos
and
ror
jbe
push
pusha
int3
push
in
insl
out
dec
stos
stc
mov
pop
shll
mov
sub
cs
sub
fucomp
in
adc
adc
in
cli
test
sbb
xor
movsb
imul
lcall
test
mov
adcb
mov
push
inc
inc
mov
shrb
dec
loope
push
jae
aas
andl
into
jge
pusha
sbb
mov
das
lods
daa
pop
int
adc
sti
cwtl
int
fistpl
outsb
push
cmp
dec
xchg
fiadds
xchg
pop
xchg
or
data16
ficomps
fcmovnbe
pusha
hlt
sbb
jb
jmp
mov
int3
lahf
jbe
aaa
pop
enter
mov
int
rolb
sbb
add
mov
xor
and
add
add
and
jo
cltd
adc
popa
mov
pusha
lcall
scas
stos
out
pop
mov
fisubs
in
mov
cmp
inc
sub
mov
or
out
jae
lahf
pop
je
hlt
mov
and
int3
push
xor
addl
pop
mov
movb
or
cld
and
inc
pop
hlt
jg
cmc
sub
or
inc
or
inc
sbb
movsb
imul
clc
sbb
jb
clc
ret
lock
ds
mov
pop
adc
lret
in
mov
push
data16
sahf
mov
stos
insb
cld
inc
pop
sbb
mov
push
fsubrs
push
and
xchg
outsb
or
pop
jns
cmp
push
sbb
inc
sahf
fmull
mov
or
jae
jp
ss
ja
fs
cmp
xchg
xchg
push
mov
scas
lods
out
inc
sbb
jp
mov
leave
shll
int3
pop
mov
fnstenv
test
test
dec
lret
dec
lods
adc
mov
xchg
adc
adc
mov
xchg
in
rcrl
mov
dec
stc
add
xchg
imul
push
call
pop
dec
cli
fdivl
adc
pop
int3
and
or
sub
adc
xchg
cmc
pop
jo
push
rclb
push
jp
xor
xchg
inc
int
clc
stc
xor
loop
mov
aaa
pop
leave
outsl
out
leave
dec
jae
lea
push
add
scas
cmp
push
and
rclb
xor
pop
cmp
mov
outsb
in
inc
mov
jb
inc
mov
pushf
frstor
ret
xchg
jbe
rolb
out
stos
inc
pop
sbb
pop
mov
inc
dec
stos
inc
xchg
addr16
fwait
xorl
xchg
sub
mov
mov
inc
jle
ss
mov
mov
xchg
jo
jno
pop
cltd
push
in
insl
clc
xchg
outsl
jno
out
outsb
faddl
push
and
lods
mov
pusha
cli
out
jns
jge
clc
cmp
enter
dec
loope
mov
add
test
mov
xchg
aad
inc
aad
sub
lea
sbb
ret
shll
xor
inc
stc
fwait
and
pop
dec
insb
cmp
pop
mov
push
ss
leave
aas
push
lods
negl
pop
dec
mov
imul
add
jb
mov
imul
jo
dec
hlt
addr16
lods
mov
aam
jo
add
mov
inc
les
lcall
rcrb
cli
mov
leave
dec
jg
xlat
mov
mov
in
nop
cwtl
jg
lods
lret
sti
sub
or
lret
mov
jae
leave
pop
sub
jle
jns
lods
lds
dec
mov
movl
lret
test
adc
andl
jo
pushf
xor
jg
jno
pop
movsb
out
aad
cmp
fwait
scas
push
mov
adcb
out
ret
dec
and
push
sbb
popa
push
aas
mov
ret
in
pop
and
xchg
data16
lock
jne
daa
jmp
sbb
mov
add
dec
add
fwait
ret
rorb
stc
repz
jp
inc
fsubs
adc
mov
rcll
mov
addr16
addr16
xor
pop
scas
bound
jmp
jne
out
dec
dec
das
jge
loopne
cwtl
enter
aaa
les
mov
sub
cmc
mov
dec
in
or
ret
xchg
dec
sbb
fwait
and
cwtl
nop
mov
mov
in
ja
xchg
aaa
sub
dec
cmpl
insb
fisttpl
ljmp
das
mulb
pop
cwtl
aaa
push
call
mov
push
imull
adc
sub
rcrb
pop
out
popa
pushf
stos
jno
xor
adc
popl
loopne
stc
loope
or
aaa
ss
xor
fdivp
imull
dec
pop
dec
push
push
pushf
clc
add
mov
jnp
scas
repnz
push
daa
idiv
or
pusha
in
sub
orb
sahf
das
stc
and
call
stos
lahf
cmc
sbb
pop
cmp
in
dec
cli
xor
xchg
rcrl
jns
xchg
adc
bnd
fidivl
in
add
push
adc
mov
rcll
lcall
mov
inc
mov
dec
or
dec
aas
jl
test
lods
dec
in
adc
xor
in
cmpsl
mov
scas
sbb
cld
lahf
inc
push
pop
ret
sti
xor
out
ljmp
xchg
pop
dec
in
xchg
imul
push
xchg
sbb
jb
mov
test
pop
int
movsl
movsl
inc
push
leave
push
xor
cmp
cltd
add
push
sbb
jecxz
pushf
sbb
movl
mov
cmpsl
dec
fwait
loopne
frstor
jp
stc
pop
ficomps
fisubrl
mov
movsb
call
pop
inc
mov
mov
cltd
movsb
and
inc
fmull
push
mov
popa
ja
in
xor
push
cltd
sbb
and
mov
les
mov
out
jo
icebp
sbb
jne
pop
out
push
dec
mov
sti
mov
data16
lahf
xchg
push
push
mov
outsl
xor
dec
mov
jecxz
push
xchg
adc
stc
cmp
dec
insb
lcall
fstpt
mov
inc
and
push
faddl
icebp
in
out
cmp
lret
inc
data16
ret
fldcw
cmp
pop
cwtl
jecxz
xchg
push
fs
push
pop
push
pop
xor
pop
in
xchg
cmc
push
push
and
push
push
pop
sbb
aam
aad
arpl
xchg
out
inc
inc
mov
and
lea
std
lds
mov
loope
sub
xor
and
xor
test
cmp
fnstsw
sub
or
js
out
xchg
hlt
xchg
mov
sub
ljmp
nop
jl
mov
jnp
mov
push
xor
je
xchg
or
pushf
inc
comiss
stc
test
dec
xchg
cmp
mov
mov
push
dec
mov
jp
inc
les
aam
mov
negl
cmp
jge,pn
cmc
xchg
sbb
ror
xchg
push
jo
or
aaa
mov
mov
je
dec
or
mov
cmc
in
std
daa
mov
mov
repnz
orl
lock
cltd
push
mov
xchg
ret
adcb
lret
jle
mov
sub
cwtl
pop
cvttps2pi
incb
ja
xchg
lahf
xor
lea
adc
sbb
pusha
xor
cmpsl
idiv
push
mov
mov
push
and
mov
bound
insl
outsb
das
js
out
push
rol
in
push
lret
and
jmp
test
in
inc
jmp
sub
fisubrs
mov
add
mov
popf
movsb
add
lahf
xor
mov
ja
xor
sub
add
out
inc
jecxz
jp
xchg
jns
cmpsl
push
inc
xor
dec
loop
mov
mov
lods
mov
ds
addb
out
adc
and
adc
pop
mov
jo
lods
jno
enter
mov
jne
scas
pop
and
xchg
in
sbb
bound
rcr
mov
xor
loop
or
xchg
nop
cmpsl
inc
xor
int
test
pop
jmp
adc
and
xor
mov
jmp
or
aad
ss
mov
push
insb
dec
push
inc
scas
mov
jae
or
xor
faddl
loop
sub
and
jae
test
jmp
pop
pushf
mov
sub
sti
jle
rolb
in
insl
push
and
lea
dec
adc
mov
dec
icebp
xor
xor
mov
sub
daa
dec
inc
jecxz
in
mov
stc
fwait
negl
rorl
fldenv
popa
out
out
or
sti
push
add
shr
data16
jnp
and
xchg
mov
sbb
inc
cltd
mov
push
adcb
add
lds
jae
lahf
add
das
push
xlat
cmp
pop
dec
out
sbb
shll
mov
cmc
aas
sub
add
out
cmp
mov
jmp
pop
push
test
cmp
push
adc
aas
aaa
sub
push
fucomip
cld
in
pop
hlt
cwtl
js
popf
cltd
repz
daa
outsb
or
addl
or
add
gs
jne
pop
xchg
lret
cmpsb
test
jns
jl
jl
loop
dec
add
out
mov
sbb
in
pop
mov
add
fnstenv
push
mov
cmpsb
fwait
icebp
push
cmp
fs
jne
or
insl
sti
out
push
xchg
idiv
xor
pop
push
mov
mov
mov
sub
dec
addr16
aam
lods
stos
xchg
dec
and
adc
inc
stos
bound
push
fs
or
pop
bound
sub
xchg
add
loop
mov
dec
mov
fcomps
mov
js
stos
sub
sbb
ja
hlt
xor
jb
push
dec
inc
sub
imul
dec
inc
mov
mov
gs
add
lret
into
dec
dec
scas
pop
shl
pop
cmp
mov
jns
add
lret
shr
push
mov
or
sti
out
jnp
fstps
add
cmp
fcmovbe
fcmove
adc
clc
test
or
sbb
mov
jns
iret
mov
jnp
jne
xchg
outsl
jb
leave
jns
ret
movsb
jge
leave
cltd
add
aad
xchg
gs
mov
aaa
daa
push
mov
shlb
cmpsb
mov
roll
sti
in
repnz
outsl
jg,pt
sub
push
lahf
cs
fistl
or
out
lret
lock
int3
std
push
fidivrs
xchg
ds
out
xor
and
cmp
loop
sbb
xor
icebp
pushf
out
mov
fmul
xchg
cwtl
adc
mov
cli
add
addr16
subl
push
nop
push
or
mov
push
sub
jecxz
mov
mov
jbe
scas
test
fimull
repnz
scas
sbb
xlat
enter
ss
imul
inc
adc
push
inc
xchg
dec
movsl
dec
cmp
add
shrb
iret
jo
punpcklwd
int
fists
mov
dec
fnstenv
sahf
or
adc
and
sahf
inc
aas
mov
mov
push
mov
cld
push
fucom
jle
lret
xchg
sbb
and
or
pop
push
in
mov
xchg
sub
aad
jmp
mov
mov
movsl
mov
sub
ja
cmp
dec
outsb
and
mov
imul
xchg
insl
loope
int
cmpsb
add
in
test
sub
add
rcrb
in
cmp
jne
sbb
pop
xchg
mov
inc
iret
addr16
gs
push
inc
jle
push
xor
fiaddl
aad
insb
jp
push
mov
mov
jp
xchg
xchg
gs
mov
test
mov
or
ja
stos
bound
shl
leave
bnd
int
or
rol
xor
add
mov
push
fadds
mov
mov
jp
jg
mov
gs
lods
sub
mov
mov
adc
stc
jo
xchg
dec
inc
push
cmc
sub
mov
ret
pop
jge
xchg
lods
jge
pop
ss
cmp
or
mov
mov
push
mov
out
bound
aam
cwtl
dec
add
dec
shrb
adc
xor
inc
dec
ja
repnz
fwait
cmp
mov
and
xor
ds
arpl
in
cmp
sub
jns
mov
bound
fsub
cmp
mov
xor
scas
cmpsl
sarl
cld
xchg
mov
in
enter
lea
cli
cmc
add
cs
lods
repnz
aam
mov
into
hlt
push
push
les
mov
mov
pusha
test
iret
push
lret
sarb
icebp
push
mov
pop
insl
lret
mov
mov
mov
icebp
scas
xor
mov
xor
or
ljmp
xchg
xor
ret
inc
mov
shl
shlb
ss
pop
add
xor
jne
mov
movl
sub
imul
rcrb
clc
andb
xchg
jo
pop
pop
ficomps
sbb
mov
sarl
cmpl
xchg
sub
in
movsl
inc
push
std
ret
arpl
lcall
adc
lcall
fidivs
popa
push
insb
sahf
inc
setnp
stc
and
jmp
out
cmpsl
les
rcr
mov
daa
mov
and
dec
mov
or
les
icebp
std
dec
dec
mov
lret
sbb
sub
ret
or
arpl
mov
pop
in
mov
xchg
and
sub
ja
xchg
lods
adc
mov
and
inc
mov
clc
insl
sbb
pop
sub
jb
xor
cmp
fdivrs
pop
cmp
mov
das
test
jmp
mov
push
loopne
xchg
jae
or
mov
mov
gs
out
dec
or
cmp
sti
insb
add
mov
idiv
push
add
popf
adcl
or
pop
rcrl
aas
or
pop
and
xorl
fisttpll
sti
mov
jnp
ret
push
mov
adc
dec
popa
cmp
add
mov
addr16
jb
adc
cmpsb
inc
mov
fcompl
mov
inc
sbb
shl
xor
iret
jae
sub
pop
adc
xchg
dec
pop
mov
clc
xchg
rol
add
cli
add
js
pusha
in
repz
movsl
mov
xor
rcrb
iret
sbb
out
sbb
cmp
addr16
out
push
mov
xor
sarl
das
jb
scas
out
mov
jne
add
dec
push
cli
insl
xchg
dec
or
push
repz
inc
pop
cmp
and
xchg
mov
mov
sti
jecxz
ss
xchg
pusha
inc
pop
fmuls
or
repnz
lahf
mov
sub
loopne
jo
inc
mov
xchg
subl
and
adc
fistps
xchg
ja
insl
xchg
pop
jae
jge
xchg
test
dec
push
cmp
push
mov
push
imul
in
or
inc
mov
push
pop
sub
cmpsl
loope
test
cmp
fistps
and
fistpll
in
sub
iret
mov
jne
gs
pop
mov
add
jmp
ret
aaa
insl
jne
enter
cmpl
and
pop
dec
icebp
mov
stos
shll
sti
or
ret
inc
loop
ljmp
andb
lahf
ret
inc
xchg
sub
rcrl
and
push
ret
sbb
aad
lods
add
in
push
cmp
cmpsb
loope
cmp
add
push
jb
push
jg
mov
xor
in
sbb
pop
mov
lea
test
jg
fs
sarl
int
ds
mov
xchg
test
lahf
fcoml
rclb
cmp
addr16
sar
insl
mov
mov
addr16
in
aam
popa
adc
shr
xchg
nop
inc
adc
mov
lods
adc
jecxz
mov
cli
call
jne
and
jmp
frstor
scas
lret
sysexit
push
add
xchg
push
xlat
sbb
xchg
lods
jle
jle
push
testl
inc
rcrb
add
xchg
loop
imul
adc
cmp
mov
mov
and
pop
mov
orb
jg
test
lar
gs
shlb
mov
rcrb
pop
mov
and
into
push
ret
inc
jl
adc
xchg
fstl
mov
mov
xchg
dec
pop
xchg
das
cmp
pop
into
xor
inc
push
xor
repz
repz
aaa
mov
fisubs
pop
jecxz
lods
outsb
xchg
aaa
idivl
repnz
pop
mov
movsl
mov
jl
mov
cmp
pop
mov
orl
mov
cmp
inc
fisubl
push
lret
inc
dec
cmp
cmpsl
fcoms
movsl
ficomps
mov
xchg
movsl
mov
mov
pop
jo
imul
sbb
xor
daa
pushf
sbb
jmp
cld
sbb
xchg
into
into
out
loopne
cmc
sar
cmpsl
ret
or
mov
fdivs
jb
fbstp
push
or
in
mov
imul
and
dec
mov
pop
and
or
jecxz
dec
popa
stc
aas
lcall
imul
mov
in
xchg
mov
nop
jle
loopne
inc
mov
in
jnp
push
xor
mov
pop
lods
out
fwait
inc
push
pop
stos
pop
pop
aaa
lock
mov
stos
dec
pop
fldl
sbb
gs
sub
pop
fwait
rcll
andb
dec
pop
cmp
mov
daa
aad
jmp
push
lret
stos
xor
add
dec
mov
movb
add
sub
test
je
pop
mov
jno
jne
sbb
mov
cmc
dec
fisttpl
xor
cmp
loope
sbb
inc
dec
fnstcw
sbb
sub
jl
fldenv
or
push
mov
jbe
jmp
add
cmp
dec
sbb
cld
ds
sbb
sbb
mov
inc
lea
aad
jne
out
rcrb
dec
test
sub
xor
outsb
mov
jp
cmpsl
lcall
pop
iret
sub
and
mov
cmp
push
daa
negb
or
fiaddl
lods
sahf
mov
js
cmpsl
inc
addr16
mov
pushf
jae
lret
into
push
clc
dec
fdivl
jge
daa
push
xor
inc
inc
leave
rcrl
mov
cmpl
or
pop
rcll
xchg
mov
adc
sbb
xchg
and
shlb
xor
pop
push
fsubs
jmp
jae
adc
jg
lahf
fisttpll
scas
push
leave
mov
adc
add
cmp
xor
fstpl
push
lds
mov
mov
movsb
push
stc
dec
or
push
pop
or
fistps
push
mov
data16
popa
ret
enter
call
loopne
fsub
mov
fnstenv
cmpsb
cltd
and
mov
xchg
xchg
int
ljmp
dec
adcl
xor
cwtl
jns
in
nop
jg
jb
fiaddl
mov
mov
aaa
sub
xor
fs
pop
enter
cmc
dec
int3
mov
outsl
pop
outsb
inc
aad
js
add
lret
sub
mov
dec
and
dec
add
mov
ljmp
fistpll
xchg
outsb
jno
cld
xchg
inc
cmp
in
mov
fimull
dec
inc
dec
inc
lret
mov
sbbl
inc
call
mov
inc
sbb
sbb
jp
test
arpl
ss
repnz
pop
cmp
xchg
xlat
test
mov
jnp
push
jp
xchg
enter
enter
mov
push
je
jge
pop
ret
jne
mov
sarl
lea
dec
xchg
mov
sub
and
cmpb
roll
pop
aaa
jb
mov
or
or
lds
pop
sahf
andb
dec
jns
ret
pop
push
out
cmp
fsts
les
sub
pop
push
setle
iret
in
leave
or
and
popf
pop
adc
mov
push
jmp
addl
sbb
mov
push
in
enter
int
popl
mov
rep
fstps
cmp
in
add
outsb
xor
int3
or
xor
jo
xor
mov
jmp
mov
fcoms
sub
push
add
lret
insl
pop
sub
shlb
xor
out
aas
stc
add
stos
jb
xor
rolb
les
das
loopne
cmc
clc
xchg
sub
jb
sahf
dec
push
cld
sub
int
inc
push
insb
jl
mov
sub
gs
pop
data16
repz
cmp
imul
mov
xchg
xchg
jmp
inc
xor
ds
loope
push
in
divb
xor
mov
scas
fs
xor
cmp
aas
popa
mov
jg
jp
xor
adc
sbb
sub
add
aad
sbb
stc
into
pop
push
rcr
add
jo
mov
gs
lea
repz
pop
cmp
ss
js
loope
lcall
mov
movsl
jmp
or
sub
jp
lret
sub
dec
xchg
lret
mov
push
dec
in
push
adc
enter
mov
fwait
mov
sbb
or
cmpsb
ret
cld
sub
cmp
out
mov
imul
cmp
sti
mov
div
movsb
and
push
dec
dec
into
movsb
popa
aad
pop
orb
aaa
cmpsb
leave
push
popa
rorb
jnp
incl
xchg
ss
jg
adc
xlat
adc
popa
mov
push
ljmp
inc
sub
cmp
dec
lods
mov
xchg
lods
mov
sbb
fcoml
out
shl
add
jecxz
add
jle
fcmovbe
sbb
pop
cmc
outsb
sbb
dec
and
adc
lahf
fs
dec
push
add
jge
xchg
sti
jno
xchg
je
dec
lcall
out
cs
in
out
push
loop
fstps
sbb
mov
aaa
or
dec
cmp
arpl
cmpsb
pop
iret
repnz
arpl
lds
idivl
and
into
dec
push
in
push
add
bound
or
sahf
out
stos
sbb
cltd
lret
jns
fistl
shr
addl
dec
cmp
push
test
adc
inc
stc
jae,pt
int3
cmp
jae
punpcklbw
jns
xor
clc
mov
pop
pop
lret
adc
movl
fsub
cmp
mov
fcoms
and
das
pusha
mov
sbb
iret
jb
outsl
addr16
arpl
pop
jne
loope
mov
hlt
adc
and
test
mov
jbe
lret
xchg
mov
test
fstl
xor
repnz
dec
outsl
xor
push
pop
repnz
pop
lods
sub
out
pop
repnz
jl
outsl
pop
or
outsb
lds
adcl
ja
test
xchg
fdivrs
call
jp
mov
jge
sahf
sub
inc
jg
adc
jae
repnz
stos
insl
or
dec
and
cmp
jo
cmpsl
jl
xchg
int
lret
xchg
movsb
lcall
std
pop
out
push
imul
call
cs
and
mov
inc
out
pop
add
pop
xchg
mov
mov
sbb
lret
in
pop
push
push
test
mov
or
cli
xchg
sbb
stc
pop
arpl
cwtl
jle
mov
repz
xchg
lahf
pop
fcmovnu
into
mov
stc
mov
aad
out
test
or
push
and
fstps
pop
cmp
and
xor
mov
adc
sub
repz
imul
out
cltd
xor
pop
dec
lods
sub
adc
rorb
shr
imul
push
add
lret
mov
jp
add
test
mov
jmp
mov
pop
fdivrs
sub
jae
add
xchg
pop
xor
jge
mov
push
outsb
ds
inc
test
imul
jl
outsl
lcall
dec
mov
cmpsl
dec
lret
jnp
and
frstor
or
inc
adc
or
lret
nop
or
subb
sbbl
movb
ja
push
repnz
ja
add
fcomi
mov
in
pop
xchg
out
sbb
fisttpl
mov
sbb
push
jbe
out
lret
xchg
xor
sbb
sbb
xchg
lods
inc
cmpsb
es
es
xchg
mov
dec
repnz
pop
push
frstor
movsb
jae
inc
or
jmp
popf
xlat
and
std
ret
mov
xchg
pop
inc
push
es
sbb
enter
jp
jp
pop
enter
inc
mov
ds
jg
imul
pop
xchg
lods
adc
inc
outsb
push
xor
dec
insb
cld
mov
sti
mov
stc
loope
loopne
and
std
repnz
add
push
xor
adc
pop
pop
lret
iret
call
lods
inc
lods
cmp
cmp
gs
xchg
and
push
sub
pushf
cmp
lea
jle
or
cmc
mov
mov
aam
bnd
inc
inc
mov
xchg
add
jle
fwait
shlb
xchg
pop
mov
jp
sbb
or
pushf
stc
pop
ja
xlat
cs
xchg
in
adc
adc
xor
pop
icebp
xor
arpl
mov
shlb
adc
add
fnstenv
ret
fisubrl
movsl
push
divl
mov
rorl
int
fisubs
sub
push
aaa
add
adc
and
mov
jb
scas
pop
jle
pop
xchg
mov
outsb
adc
mov
add
ficompl
cmp
sahf
cmp
fisttps
fsts
pop
das
cltd
ds
adc
int3
mov
push
jg
repnz
mov
fmul
bound
mov
jge
in
pusha
and
scas
test
sub
pop
mov
jmp
mov
fistps
int
jnp
or
sub
ss
and
push
push
test
mov
inc
cmp
movsb
call
mov
pop
inc
push
lock
dec
dec
pop
dec
rorb
mov
push
imul
adc
enter
out
mov
inc
loope
out
jp
decb
sub
pop
dec
push
mov
cmp
lcall
cli
ret
sub
adc
adc
ror
movsb
jge
jb
in
mov
jno
outsl
mov
add
lods
ds
mov
popl
fdiv
inc
add
xchg
inc
sbb
add
int
mov
popl
lret
jecxz
lret
pop
imul
rcrl
xchg
ja
sub
jnp
xchg
mov
dec
test
adc
lods
mov
mov
lods
loope
sti
movsb
lods
sahf
dec
xchg
js
jae
inc
xchg
cmp
stc
in
das
pop
sti
out
aam
stos
mov
daa
shll
out
xchg
je
pop
mov
and
loope
push
xchg
adc
add
lret
iret
jns
pop
jbe
push
int3
or
out
aad
mov
stos
das
mov
mov
imull
pushf
frstpm(287
pop
dec
mov
sub
shll
rcrl
lea
mov
test
mov
mov
push
xor
data16
out
ret
push
push
iret
xchg
sub
fst
lcall
ret
sub
aam
rolb
aad
ss
xor
out
in
popa
push
push
into
cmp
sbb
mov
into
push
inc
mov
out
and
adc
adc
push
or
repnz
dec
jno
add
and
and
jno
mov
fnstcw
sarl
aas
pop
std
cmp
cmc
pop
rolb
mov
mov
pop
cmp
aam
cmp
xchg
or
adc
jmp
pop
rol
mov
dec
dec
cmc
fimull
xchg
mov
pop
dec
mov
push
sub
cmpsl
sbb
or
pop
cwtl
cmc
fcmovnu
jp
and
int
mov
dec
lods
bound
ds
xchg
inc
mov
xchg
aad
clc
xor
ds
jecxz
loop
inc
mov
or
fimull
lds
test
js
sbb
les
loope
lret
add
push
scas
scas
test
dec
jnp
ret
in
hlt
sbb
inc
clc
sbb
mov
cmp
push
sub
pushf
adc
decb
pop
or
xchg
push
mov
adc
xchg
fidivrs
push
inc
cs
adc
cmc
sub
nop
mov
andb
dec
jp
insb
fxch
sti
cmpsb
xchg
pop
dec
dec
cwtl
add
lods
dec
into
sahf
jb
ljmp
out
stos
imulb
arpl
cli
test
nop
pop
sub
fwait
and
ds
pop
imul
cmp
pop
ljmp
jo
adc
out
or
sar
and
lahf
mov
cmp
loop
inc
sti
inc
fwait
sub
or
es
scas
divl
fwait
ja,pt
and
jmp
mov
push
js
cmp
push
lds
xchg
jl
es
mov
rolb
xchg
shlb
jp
into
or
fimull
pop
es
mov
in
enter
cmp
and
mov
pop
mov
out
in
frstor
lret
das
addr16
pop
and
push
lcall
int
or
ds
loopne
push
cmp
cmp
jno
jmp
nop
cmp
jg
cs
cmp
lds
or
cmpsb
sti
out
shrl
jo
int3
push
loopne
jb
pop
add
pushf
cwtl
sbb
mov
int
out
aaa
adc
decl
sub
daa
xor
enter
pop
mov
in
fyl2xp1
in
sub
dec
lret
xor
fwait
jle
sahf
mov
or
inc
les
xor
sbb
aas
jno
cli
fs
out
cmp
sub
mov
or
ret
sub
insb
hlt
mov
sub
sbb
mov
sbb
mov
xchg
fisubl
notb
int
mov
push
inc
repnz
and
mov
dec
cmc
and
mov
mov
sub
jecxz
loope
out
mov
cmc
xor
jmp
cmc
mul
xchg
push
out
out
push
sbb
and
adc
sub
pop
and
cmpsb
dec
sub
cltd
xor
cmp
mov
cs
lea
popa
stos
jne
sarb
jne
push
lock
imul
popf
es
cmpsb
mov
adc
mov
dec
into
mov
inc
adc
jmp
scas
lea
stc
movl
pop
push
idivl
dec
push
inc
rcll
and
js
pop
adc
jns
dec
clc
test
inc
add
and
insb
push
mov
jl
loopne
inc
test
dec
and
cmp
add
lahf
push
inc
cmp
stos
adc
mov
cld
ret
sub
xor
and
insl
gs
and
xchg
pop
dec
inc
not
je
lret
inc
xchg
aad
cli
ljmp
ss
mov
xor
dec
repnz
lea
mov
imul
dec
dec
mov
cmp
out
fmull
pop
fidivs
push
push
mov
jbe
ljmp
add
dec
rclb
xor
inc
stc
or
shlb
cli
addb
mov
xchg
aaa
xor
outsb
popf
jl
add
adc
scas
dec
or
neg
daa
roll
sbb
test
or
fldt
imulb
je
push
dec
rcl
mov
add
lods
and
cli
movd
push
xchg
sub
adc
sub
aas
pop
mov
mov
mov
outsb
popf
adcl
loop
ja
push
icebp
dec
xor
jle
icebp
xchg
inc
leave
test
mov
and
jno
xchg
add
mov
sbb
mov
xchg
sbb
mov
jecxz
mov
inc
outsl
shrl
sbb
aad
pop
js
cwtl
sbb
mov
aad
insl
or
mov
leave
in
mov
or
mov
push
cmp
cmp
mov
leave
inc
les
xor
lcall
test
pop
movsl
push
iret
mov
ror
cwtl
and
mov
push
scas
and
mov
mov
and
sub
xchg
mov
push
xor
lahf
xor
in
jg
repz
pop
xor
loopne
mov
sbbb
lods
xor
xlat
or
sbbb
mov
aas
hlt
and
notl
out
pusha
xchg
fs
xchg
or
into
mov
and
add
cmpsl
jbe
jl
and
cwtl
jl
rclb
mov
sub
push
fisubrl
inc
push
lea
lds
mov
std
sub
pop
ja
out
in
imul
mov
cmp
jge
ficomps
mov
test
imul
fisttpll
ror
mov
xlat
out
imul
bound
pop
nop
push
jno
add
lods
imul
sti
xchg
fcmovnu
mov
push
mov
jl
lock
dec
push
push
push
push
pmaxsw
pop
sub
mov
jp
rcr
in
xchg
xor
mov
or
hlt
lock
enter
push
lea
cmp
xlat
and
push
insb
pop
mov
mov
mov
les
cltd
scas
inc
jle
mov
clc
lods
ds
fiadds
and
daa
fnsave
decl
decb
add
sbb
cltd
lock
or
cld
cmp
mov
jno
loopne
rolb
ljmp
pop
and
sbb
mov
jg
sbb
idivl
nop
scas
jbe
pop
jmp
negl
outsb
xchg
rclb
test
out
dec
dec
dec
pop
xor
dec
push
imul
sub
xchg
cmc
aas
and
lods
jl
add
mov
stc
cltd
iret
sbb
pop
xchg
dec
jnp
out
or
js
inc
icebp
jmp
test
mov
xchg
mov
xor
popa
jb
test
and
jne
popf
mov
jne
jo
ds
xor
xchg
mov
mov
in
cmp
call
and
test
xchg
adc
pop
stos
cmpsl
leave
cmp
and
es
add
jno
push
scas
icebp
popf
inc
popa
xor
repnz
fpatan
mov
sahf
insb
add
jle
mov
mov
clc
cmp
or
mov
mov
lea
push
in
mov
cs
inc
pop
daa
pop
sub
test
fnstsw
sti
mov
ret
pop
out
add
loop
sbb
mov
cmp
out
and
inc
jo
loop
pop
daa
pop
mulb
insl
jge
imul
data16
test
in
adc
stc
lahf
xchg
cmpsl
push
pop
popa
add
cs
test
test
sbb
xor
pop
shrb
test
int3
or
enter
mov
mov
dec
out
daa
decb
cmc
ljmp
dec
icebp
ds
je
sbb
ret
in
and
dec
enter
mov
sub
lret
mov
push
add
and
cmp
dec
add
mov
loope
mov
shrl
inc
testl
jmp
shll
xchg
cltd
std
jns
icebp
and
clc
into
movsl
dec
imul
mov
jl
cmc
pop
pop
or
jbe
jmp
sbb
out
mov
lcall
hlt
fisttps
and
lahf
cld
mov
jae
ret
aad
imul
int
fisubl
cmp
test
fldt
mov
pop
and
sar
mov
xor
arpl
dec
or
fnsave
stos
dec
mov
jo
scas
cld
pop
xchg
lret
imul
fcmovb
cmp
sbbl
dec
dec
cmp
xor
mov
fisttpl
adc
mulb
add
pop
xchg
movsl
dec
lahf
imul
jae
push
lcall
test
cmp
sub
cmpsb
lret
xor
andl
fistpl
mov
ds
push
pop
jo
pop
and
jmp
or
xchg
out
out
add
fistps
inc
inc
sti
xchg
xor
mov
lahf
or
jecxz
mov
inc
dec
out
gs
mov
cmp
lea
lods
int3
int3
ret
cwtl
jecxz
incl
mov
sahf
pop
mov
popf
inc
imul
fidivrs
aam
pop
mov
mov
sub
cs
mov
cmc
jle
loop
jp
in
int
cmp
push
mov
sbb
add
pop
jbe
jl
pop
int3
addr16
aaa
insl
daa
or
daa
iret
pushf
sub
push
inc
mov
pop
mov
and
cwtl
xchg
xor
mov
push
jge
aaa
fwait
loop
mov
ljmp
mov
and
cmpsl
in
or
sub
pop
xor
iret
cmc
data16
inc
mov
xor
pop
mov
inc
rorb
movsb
jl
mov
repz
push
and
cmp
in
lock
in
xor
inc
scas
out
clc
push
xchg
sub
pop
lahf
cmp
pop
loop
cmp
rcl
sub
ds
xchg
mov
lret
jmp
imulb
xor
fisubrs
sbb
sub
mov
outsb
out
in
in
fmuls
cmc
sbbb
cmp
or
mov
lock
xchg
test
mov
pop
pop
rorl
movsb
fwait
out
pusha
adc
push
inc
out
adc
xor
sahf
enter
mov
cmpsb
mov
scas
lods
sub
or
cmp
ficoms
in
and
in
cmp
enter
xchg
and
cs
fisubrs
sahf
aas
adc
push
in
shl
or
lahf
fwait
pop
dec
mov
stos
test
push
lods
ljmp
and
or
ss
sub
add
sti
out
xor
mov
dec
add
iret
sbb
adc
ljmp
and
adc
mov
ret
mov
leave
sbb
add
in
mov
bound
sbb
sbb
pop
incl
mov
push
mov
jmp
ss
mov
shlb
cltd
data16
ja
mov
stos
jno
inc
push
xchg
cmp
insb
jno
scas
mov
ds
sub
lret
push
pop
leave
les
inc
test
adc
dec
jnp
push
wbinvd
inc
int3
mov
push
ds
pop
mov
mov
pop
arpl
hlt
les
xlat
fsubrs
or
stos
les
xlat
insl
dec
xchg
scas
cmp
and
jb
pusha
shll
hlt
test
pop
cli
mov
pop
or
stos
mov
andl
xlat
inc
repz
daa
repz
mov
cld
inc
cmpsl
int3
cmp
xchg
mov
hlt
les
dec
push
sub
add
jns
stos
loop
and
jo
sbb
bound
push
repnz
in
call
cld
jp
cwtl
xchg
jb
sub
ljmp
push
decl
repz
dec
stos
mov
mov
inc
jl
and
aas
sbb
ss
push
nop
iret
imul
jg
jle
jmp
add
out
sbb
in
push
cmc
sbb
outsb
adc
out
sub
cmpsb
mov
into
notb
push
jge
jnp
inc
adc
lods
leave
lods
mov
jp
test
sbb
push
jle
jbe
xor
mov
ds
addr16
iret
fimull
xchg
pop
push
xor
shlb
repnz
sub
pop
mov
cmpsl
lea
jle
pop
adc
add
repz
pop
insl
xor
lret
fbstp
xchg
sbb
popa
add
pop
shll
aaa
mov
inc
test
bound
sbb
xchg
pusha
fwait
nop
xchg
xlat
lock
ss
outsb
add
mov
imul
call
dec
sub
cld
jmp
jg
ljmp
mov
mov
xlat
inc
cmpsl
ss
repnz
xchg
and
mov
insb
jns
sub
xchg
xor
mov
or
jecxz
cli
jnp
sbb
mov
sbb
push
dec
rolb
cltd
sub
jmp
enter
cli
in
dec
insl
ja
insl
cmpsb
inc
test
push
push
test
xor
adc
test
les
lret
push
clc
and
ret
cmp
je
fdivp
cmc
xchg
push
push
cmp
adc
xor
nop
js
mov
stc
aaa
mov
sbb
jnp
std
mov
push
iret
cmpb
push
gs
scas
push
jg
mov
mov
arpl
andb
out
sti
sub
notb
pop
fwait
and
into
mov
enter
cli
sbb
dec
frstor
addl
mov
dec
xchg
push
mov
inc
in
adc
in
push
push
adc
fadds
scas
add
mov
int
int
lret
jmp
sub
bnd
mov
loop
push
inc
mov
adc
imul
jns
cmp
loop
cld
jo
jb
loop
in
psrlw
inc
cltd
cmp
pop
fistpl
pop
jle
stos
insb
pop
mov
sbb
cltd
mov
sbb
test
jae
mov
lret
jmp
movsl
mov
mov
adc
jle
cmc
pop
push
call
sahf
add
clc
aad
and
dec
inc
ffree
sub
imul
adc
cmp
inc
enter
addr16
cs
mov
push
pop
fwait
inc
cli
ret
cmp
mov
and
pop
dec
dec
dec
mov
xchg
in
lods
scas
loope
je
sub
push
and
adcl
mov
sub
cld
fmull
xchg
pop
mov
mov
xchg
xor
add
shlb
jb
rcl
shrb
int
dec
stos
cltd
push
or
dec
xchg
int3
int3
ljmp
lock
cld
inc
aaa
int3
push
fmull
add
movsl
mov
or
or
inc
mov
arpl
jbe
bnd
push
xchg
enter
adc
or
lods
xor
out
test
scas
mov
cld
addb
cmp
stos
out
push
mov
call
mov
xchg
call
pop
push
stos
inc
jle
sti
mov
xchg
pop
sbb
add
ret
mov
xor
cltd
test
xchg
clc
scas
insl
inc
imul
out
adc
loope
insb
mov
rcrb
cmc
loopne
or
imul
xor
push
rclb
ret
jecxz
iret
inc
cmp
rorb
jmp
mov
adc
fiadds
cmp
aam
adc
push
mov
lods
rol
pushl
fistps
sarl
cmp
mov
mov
in
and
xor
adc
push
test
jecxz
fs
and
mov
mov
cmp
out
pop
inc
shll
mov
pop
jge
mov
dec
enter
inc
lret
out
ljmp
pop
sbb
dec
mull
outsb
xor
out
imul
fldenv
mov
or
push
pop
hlt
mov
faddp
pop
adc
jge
mov
xor
cmp
shll
mov
popf
xor
dec
inc
lods
cs
jbe
inc
lods
test
je
xor
sbb
mov
lods
sub
negl
in
or
insb
cmp
mov
inc
add
loope
ffreep
push
mov
in
lahf
mov
mov
xchg
pushf
divl
ljmp
std
push
xchg
popf
cmp
xchg
jp
stos
inc
jl
outsl
out
add
push
lahf
mov
dec
sbb
in
mov
pop
scas
mov
add
or
mov
in
das
xchg
test
jb
and
int
out
cmc
or
rcr
or
and
pop
and
into
imul
mov
jl
cmp
movsb
in
pushf
xor
sbb
xchg
daa
xor
adc
jnp
inc
enter
sub
pushf
stos
stos
xor
out
bound
dec
and
or
test
dec
adc
jg
int3
shl
jp
push
out
shl
je
jne
mov
cmc
scas
add
jmp
and
jle
mov
fisubrs
es
jmp
aaa
out
fwait
stc
xchg
enter
int3
sub
cs
lods
les
sub
pop
xchg
push
scas
push
add
enter
pop
pop
xchg
or
in
push
cltd
lahf
dec
stos
lods
mov
lock
outsl
fs
xor
adc
cmp
mov
fsubrp
mov
subl
imul
jno
data16
mov
adc
imul
push
xchg
or
mov
xchg
pop
jae
mov
mov
cmp
mov
mov
pop
sarl
stos
rcll
and
cmp
rcrb
ss
loopne
andb
call
rcl
int
aaa
adc
add
dec
movsb
ljmp
test
add
cmc
dec
hlt
push
cmp
fcomip
data16
add
gs
and
jne
ja
inc
mov
push
insl
cmc
sbb
xor
mov
lds
dec
aad
cmp
cmc
adc
test
mov
sti
jle
mov
shlb
cmc
dec
jle
adc
pushf
push
hlt
jecxz
outsl
int
pop
shrb
xchg
push
mov
int
adc
add
ds
fs
in
iret
mov
xor
cli
aas
imul
xor
loope
data16
push
mov
mov
in
fs
fwait
inc
sub
lods
rolb
sub
pop
xchg
and
dec
mov
sbb
js
jns
mov
xchg
push
fucomi
int
ss
andb
out
dec
sub
inc
test
push
xchg
sub
loopne
xchg
inc
mov
leave
inc
sub
or
int3
jp
insb
mov
and
jle
sbb
movsb
or
and
mov
or
out
int3
dec
jl
inc
mov
hlt
add
fisttpll
stos
push
les
pusha
jnp
xchg
loopne
cmp
jne
mov
stos
insb
pop
iret
out
icebp
scas
movsl
insb
mov
mov
xchg
pop
fwait
in
mov
add
push
fistl
adc
fsubrl
or
fsts
or
dec
shll
adc
or
pushfw
adc
fldt
adc
push
adc
jmp
test
and
push
mov
xchg
mov
hlt
add
das
sahf
outsl
in
adc
or
xor
filds
test
jl
cwtl
iret
xorb
sub
incl
loope
shlb
scas
mov
sub
lret
shrl
or
xor
mov
shrl
xchg
mov
int3
xchg
mov
arpl
das
push
ljmp
in
cmp
aaa
scas
imul
and
adc
iret
push
mov
xor
jbe
dec
xorb
addr16
lcall
std
imul
ja
mov
je
sbb
or
rorl
inc
popf
insl
sub
int
push
mov
or
push
into
pop
jmp
outsl
rcll
negb
in
js
rorb
jp
cwtl
lods
call
sbb
jo
adc
cmp
ret
out
pop
sub
sbb
adc
xor
test
xchg
add
lret
dec
push
scas
push
je
mov
fimuls
lcall
scas
pushf
pop
fsubrs
divl
push
fwait
mov
xchg
mov
add
inc
pop
call
mov
es
stos
inc
jbe
jle
test
mov
cmpsl
add
sbb
push
stos
out
movsb
call
pop
push
negb
mov
aam
push
movsb
test
popf
movsl
jp
lcall
inc
mov
xor
sub
inc
sti
dec
call
add
xchg
int3
je
push
aad
sahf
sbb
out
les
jnp
push
push
jmp
or
or
or
cmp
and
pop
cmp
incb
xlat
sbb
xchg
adcb
ficoms
fsubp
and
movsl
fisubrs
rclb
mov
lret
push
pop
add
lret
lock
fdivp
jl
nop
push
jns
out
lahf
jnp
xchg
mov
sub
ret
cmpsb
pop
inc
xor
out
jl
imul
sbb
inc
ja
icebp
dec
dec
xor
or
loop
test
sbb
push
inc
xchg
cmp
sti
add
add
idivb
in
sub
test
pop
inc
dec
add
and
xchg
add
mov
cmp
xchg
and
pop
pop
mov
push
mov
push
inc
frstor
cmp
lods
ret
pop
push
xchg
insl
jbe
jp
roll
je
pop
cmp
mov
outsb
pusha
lret
or
cmp
and
inc
add
sub
dec
popf
pusha
pop
or
inc
daa
pop
dec
inc
jae
push
sbb
sbb
mov
lds
js
xlat
sbb
stos
dec
cmp
mov
sbb
je
mov
add
inc
sub
jge
add
lret
push
pop
mov
aam
sahf
leave
push
push
xchg
mov
and
pop
pop
out
outsb
xchg
mov
sarb
jmp
dec
and
out
loopne
inc
repnz
xchg
jnp
jge
out
jns
sub
in
iret
mov
sbb
inc
jecxz
or
sbb
xchg
adc
sarb
into
sbb
std
loope
lds
stos
mov
out
popf
sbb
and
lret
inc
or
fnsave
push
in
int
into
stos
test
std
andb
pop
jecxz
lods
mov
inc
incb
push
mov
lret
jne
and
inc
push
testb
inc
imul
pop
sbb
and
mov
xchg
xchg
or
imulb
dec
inc
push
add
xchg
shl
sarb
lret
and
rolb
fisubrs
xchg
fsts
sbb
and
mov
movsb
rorb
hlt
test
cmp
test
mov
mov
push
mov
ret
mov
loopne
sahf
pop
outsl
cmpsl
push
lds
sbb
test
add
mov
or
pop
pop
mov
ror
cs
push
ljmp
add
inc
subb
adc
cmp
push
push
sub
mov
test
int3
cs
push
and
test
mov
and
pop
fdivr
bound
gs
out
push
jne
addl
sbbb
sub
dec
cmp
lahf
dec
jae
pop
insb
add
dec
addr16
stc
and
insl
cmpsb
lock
ret
clc
xchg
sbb
and
mov
dec
xor
add
scas
adc
or
dec
pop
in
dec
adc
paddusw
fbld
jl
arpl
es
mov
imul
icebp
jne
lahf
pop
imul
dec
addr16
into
xor
jle
jge
lock
mov
xchg
popf
call
sub
cmpsl
sbb
add
fstpt
push
sub
leave
repnz
mov
fisttpll
xlat
dec
in
sub
xorl
sub
int3
cwtl
and
movsb
sti
insl
dec
mov
and
sbb
ret
mov
mov
sub
xchg
insl
xchg
fldt
inc
dec
aad
cwtl
mull
test
shlb
shrl
or
jae
pop
sbb
xor
xor
jnp
aas
test
xchg
inc
clc
sbb
insb
movsl
dec
pop
mov
inc
xchg
dec
out
pop
inc
sbb
jnp
adc
push
fistpll
adc
das
dec
sbb
shlb
insb
mov
add
push
jp
jecxz
push
adc
mov
pushf
xor
push
rorb
and
mov
out
xchg
not
adc
cmp
or
cmp
frstor
sbb
push
cmp
insl
xchg
cmp
pop
fidivrl
push
dec
dec
leave
push
sar
neg
aam
xchg
clc
stos
dec
xlat
mov
les
scas
mov
mov
jl
jae
mov
xchg
sub
inc
sti
pop
add
inc
cmpsl
test
shl
scas
sbb
inc
add
xorl
scas
cli
cltd
nop
pop
out
test
out
shr
mull
jle
push
loop
call
jbe
aaa
xchg
dec
mov
fldt
fildl
cmp
int3
mov
int
iret
flds
adc
aaa
mov
sub
mov
jp
dec
aad
adc
mov
je
inc
adc
test
push
scas
jg
in
repz
dec
rol
int3
xor
jns
xchg
insl
or
xchg
push
mov
pop
loopne
adc
cmp
fst
leave
inc
shrl
ja
push
mov
roll
push
xor
xchg
lods
icebp
icebp
add
outsl
mov
push
mov
xor
inc
push
xchg
add
arpl
ficoms
sub
sub
push
pop
inc
xor
fisubrs
es
mov
push
sahf
pushl
loopne
mov
mov
lret
push
dec
push
mov
fwait
mov
xor
mov
movsb
push
aaa
pop
xchg
lret
test
lcall
inc
js
std
and
xchg
inc
loop
ljmp
nop
xor
mov
sbb
xchg
std
mov
in
mov
hlt
adc
add
imull
sbb
inc
mov
dec
sbb
lret
rcrl
cmpsb
and
mov
mov
jle
cmp
ret
push
jo
pop
fldt
lds
cmc
jns
push
inc
movsb
and
dec
lock
push
or
or
or
shll
push
ret
imul
dec
loope
xor
pop
testb
outsl
push
or
sub
call
f2xm1
dec
popa
nop
leave
cmp
dec
push
mov
pop
inc
aam
sahf
imul
dec
mov
inc
pop
mov
subb
insb
push
adc
mov
lret
inc
xor
ficoml
mov
add
cld
mov
mov
sahf
pop
jno,pt
cmc
jmp
add
imulb
int
mov
push
jns
arpl
dec
fidivs
pop
dec
jl
sbb
sti
lcall
ret
fs
jge
cmp
mov
cmp
div
cld
xlat
imul
mov
ds
lahf
cmp
pop
jge
sub
add
enter
data16
mov
cmp
fstpl
std
xor
mov
icebp
push
xchg
pop
pop
ficompl
push
push
xor
mov
aam
aam
fsincos
mov
mov
or
dec
testl
ret
pop
jmp
fimull
push
sub
inc
xchg
push
movsb
mov
lods
cltd
loope
mov
repz
push
dec
imul
pop
mov
fstp
inc
ljmp
jne
xchg
push
lds
subb
jmp
or
mov
xchg
outsl
out
sahf
in
inc
pushf
dec
out
imul
lods
sub
in
sub
sbb
xchg
aas
mov
leave
jg
cmp
lods
fs
lahf
imul
xlat
pop
jbe
sahf
shr
cmpsl
cmpsl
xor
pop
inc
dec
into
icebp
lea
ds
lods
bound
cmpsb
std
pop
pop
fldcw
addr16
push
mov
daa
aam
dec
daa
cli
popf
mov
divl
pop
scas
insl
jbe
jb
mov
dec
data16
repz
mov
fistps
xor
xor
push
sbb
mov
xor
out
dec
xchg
aam
ficoms
jge
mov
addr16
push
in
mov
lock
jmp
das
in
or
dec
fwait
lret
imul
push
sbb
fsts
mov
sub
shll
dec
inc
stos
test
dec
inc
int
and
hlt
cmp
into
shll
inc
jmp
in
mov
push
jge
dec
hlt
into
pop
dec
mov
rorb
add
pop
inc
jns
stc
dec
in
fistpll
push
hlt
cmp
repz
or
les
shrb
popa
pop
insb
add
pop
push
add
test
xor
nop
mov
inc
imul
jg
adc
pop
imul
mov
jmp
inc
sahf
popa
adc
dec
divl
hlt
xchg
sti
fwait
mov
test
ss
inc
xor
pop
int
cwtl
int
pop
call
movsb
out
ret
insl
stc
mov
je
jo
lahf
mov
out
ja
adc
push
xchg
movsb
mov
ret
or
xchg
push
int3
enter
sbbl
xchg
shr
dec
cmp
das
pop
andl
jmp
cmpsb
jnp
fcomi
adc
sbb
scas
mov
and
sub
and
aaa
sbb
sarb
sub
sbb
test
sub
inc
xchg
xor
jae
imul
and
pop
test
add
nop
sarl
in
xlat
mov
cmp
jns
enter
shll
inc
test
popa
fucomip
and
je
repz
ja
pop
xchg
push
pop
icebp
cmp
adc
push
cmc
push
sbb
fdivl
and
mov
push
add
inc
les
xchg
push
pop
jnp
into
test
pop
or
iret
dec
sbb
push
lea
inc
xchg
adc
inc
mov
int3
fmulp
mov
fmuls
xor
xor
jge
int3
sub
sahf
shr
mov
repz
data16
add
jmp
push
jo
gs
aam
push
inc
or
fsubs
pop
sub
test
mov
imull
test
mov
arpl
push
mov
and
mov
movsl
in
ret
jns
xchg
rcrl
rcl
cmpb
xor
xlat
mov
cli
imul
fidivrl
mov
cmp
mov
inc
imul
sbb
lds
push
shl
fwait
lock
mov
xchg
cld
es
cmp
fisttps
pop
bound
lret
gs
mov
lock
cmp
and
mov
mov
aaa
loop
cmp
or
sahf
sbb
add
mov
cmp
aad
popa
movsb
cmp
cmp
add
jne
cmpsl
iret
cmc
and
imulb
mov
mov
and
add
mov
jg
adc
lcall
cmp
movsb
dec
movsb
mov
jge
fdivrl
aas
jge
dec
dec
cmp
and
xchg
mov
loop
mov
outsl
call
cmp
jp
outsb
mov
mov
movsl
cmp
divl
mov
sub
inc
repnz
loopne
dec
rcrl
scas
sub
test
pop
lcall
in
cmp
pushf
shrb
andb
out
rcll
mov
sbb
outsl
pop
xor
arpl
das
add
jno
jno
adc
repz
add
mov
lret
push
lods
mov
stos
subb
pop
inc
push
sub
jp
ds
jo
and
hlt
mov
inc
mov
mov
lea
mov
or
pop
icebp
lds
push
rcll
and
insb
xlat
mov
sub
ret
stos
pop
sub
push
dec
pop
call
in
scas
jo
test
push
jmp
cmp
imul
push
lret
mov
add
or
jl
adc
daa
cwtl
lret
pop
xchg
fimuls
pushf
ret
sbb
mov
xor
xor
jbe
or
xorb
sarl
test
jns
add
test
fildl
dec
lsl
hlt
loope
cmp
and
push
sub
or
sub
rcl
notl
enter
jp
sti
das
repnz
cmp
fdivrs
xor
add
cmc
xlat
mov
mov
fcom
cmc
inc
push
or
loop
mov
fisubs
or
push
mov
lret
jae
data16
rorl
divb
jl
mov
push
xor
ds
push
mov
les
shrb
mov
aaa
test
rcrl
in
fldcw
cli
ret
loope
dec
jae
insb
mov
int
mov
daa
sti
sub
pop
mov
push
xchg
enter
lea
push
mov
daa
repnz
adc
pop
movsl
adcb
inc
fisubrs
shl
push
into
stos
cld
fidivrl
mov
popf
repz
pop
cmp
js
mov
shrl
cmp
xor
xchg
inc
mov
ret
ss
cmp
lea
mov
mov
add
mov
into
sub
pop
cmc
int
push
add
mov
sbb
mov
sub
xor
loope
mov
pop
lcall
add
push
pop
test
sub
int3
subl
mov
lods
xchg
in
xor
or
push
cld
stos
xlat
xchg
das
push
rcrl
fnstenv
clc
jns
lock
test
push
mov
sub
movsb
inc
and
mov
aam
daa
sahf
jecxz
popa
fidivrl
push
sbb
add
pop
fnsave
jb
sbb
add
add
jne
cmp
inc
aaa
add
or
cmp
arpl
sbb
push
mov
outsb
movsl
inc
add
dec
sbb
sbb
loopne
fimull
repz
lds
lret
rorb
xor
dec
dec
push
inc
jb
dec
cmp
lds
imul
jb
sub
iret
mov
fisubl
cld
inc
pop
dec
outsl
jp
jle
mov
xchg
cwtl
mov
inc
dec
cmp
lea
jmp
nop
mov
dec
lods
push
fidivs
mov
push
sbb
or
insb
mov
sti
add
jne
repz
divb
pop
outsl
fildll
fidivs
lret
push
mov
dec
dec
hlt
jbe
cmp
inc
js
clc
dec
mov
sbb
lcall
into
inc
out
mov
xchg
inc
pop
bnd
jge
mov
cli
adc
dec
jp
push
xor
rorl
daa
mov
fildll
fs
loopne
push
es
mov
pop
outsl
dec
mov
and
cmp
lea
leave
push
adc
sub
outsl
ds
mov
movsb
dec
pusha
insl
imul
inc
out
sbb
sarb
xchg
xchg
add
rcr
or
sub
aaa
add
aad
sbb
xchg
shrl
cltd
fistl
fisttpl
repz
scas
inc
sbb
xchg
movsl
inc
bound
repnz
in
shl
xlat
dec
sti
ret
jp
sbb
les
data16
addl
jnp
in
aad
xlat
or
add
mov
xchg
loopne
ja
sbb
add
cltd
imul
cmpsl
adc
pop
sti
orb
cmp
or
arpl
sub
rolb
fwait
pop
ljmp
or
loope
xchg
pop
mov
add
inc
xor
and
dec
mov
push
andb
pop
jg
cmpsb
stos
movsb
mov
stc
or
xlat
aas
push
xchg
mov
cmp
inc
pop
out
xchg
xchg
sbb
dec
push
sub
jle
pop
test
jbe
pop
pop
imulb
ret
push
addr16
test
ss
loop
popf
lret
inc
lea
cmp
pop
push
popf
ret
loope
lahf
stc
lcall
push
call
clc
mov
scas
jo
loope
ficoml
cmp
push
rcl
dec
sub
mov
sub
in
cmp
xor
xchg
pop
mov
push
popa
and
scas
imul
cmp
mov
sub
inc
pop
out
dec
sub
or
mov
ret
jg
test
pop
lea
stc
vmovd
or
sub
ss
addb
hlt
mov
fbstp
in
aad
cld
addr16
mov
push
push
jo
mov
push
in
pop
int3
pushf
test
inc
mov
dec
fisubs
ljmp
mov
ret
in
dec
mov
mov
adc
cld
test
sub
xchg
sub
cltd
mov
and
mov
out
movsb
out
push
fidivrl
in
pop
call
fidivl
sbbl
push
jle
jp
call
scas
add
sbb
out
mov
test
add
inc
cmp
sub
push
push
push
push
mov
outsb
pop
push
adc
inc
dec
cmp
xor
aam
out
daa
jge
dec
fisttpll
dec
aad
dec
jne
rorl
negl
fcomps
or
push
mov
iret
in
testb
into
xchg
sub
lahf
push
int
jns
xchg
nop
cmp
mov
sahf
cmp
pop
or
sub
mov
pop
mov
jmp
push
insb
dec
sub
fnstcw
cmp
xchg
pop
stos
jb
dec
adc
out
pusha
inc
jle
mov
shl
sub
mov
xlat
mov
jg
pop
pop
jle
mov
pop
pop
fwait
movsb
addr16
pop
mov
outsb
cmp
leave
xor
shr
fstl
imul
mov
lcall
fnstsw
sbb
adc
dec
pusha
in
jae
shrl
popa
cmp
xchg
mov
mov
pop
mov
jno
push
and
sti
mov
out
test
cmp
es
mov
out
add
sarl
xchg
je
xchg
xchg
pop
dec
dec
xlat
dec
lea
xchg
aas
decl
xor
mov
and
jge
std
data16
xchg
in
sub
aam
aaa
add
repz
faddl
xor
sub
mov
std
fidivl
or
xchg
clc
fnstsw
jnp
mov
divl
cmp
mov
add
inc
int
stc
mov
sub
ret
stc
aad
lea
adc
mov
cs
fistps
cwtl
adc
fdivrs
shrl
mov
fwait
cld
adc
xorb
lds
jb
mov
mov
fimuls
aaa
mov
add
xor
pop
fiaddl
inc
cmp
xor
pop
jl
mov
nop
push
jecxz
sbb
xor
mov
xchg
push
sub
leave
aas
mov
adc
iret
xor
mov
add
ficompl
loope
fcmovnbe
lods
ss
push
xor
mov
sarb
push
cli
subl
push
test
cmp
repz
ss
mov
pop
jae
out
mov
cmp
inc
mov
mov
dec
jb
sbb
dec
and
in
fimull
into
stos
lcall
push
test
dec
cmc
andl
xor
ds
iret
xor
aam
jmp
ljmp
mov
and
mov
jo
out
cmp
mov
inc
cmp
loopne
mov
loopne
lahf
ficoml
fucom
mov
mov
mov
xchg
and
pop
std
in
xchg
cmp
lahf
xchg
cmp
loop
mov
mov
cmp
mov
int3
xchg
in
mov
xchg
loope
inc
or
js
xor
ficoms
stos
cmp
jne
movsl
mov
xor
push
hlt
and
lods
aam
out
push
in
jmp
jns
push
bound
std
add
in
push
daa
jl
aad
aas
sub
loop
pop
sahf
add
cld
out
mov
pop
inc
fstpt
pop
in
sbb
test
jp
adc
xor
dec
pop
outsb
cmp
xchg
sub
adc
mov
dec
jns
sub
jecxz
js
xchg
sub
jne
int3
repnz
movsb
sub
sbb
sbb
mov
jno
pop
rclb
and
jg
nop
flds
bound
jge
lcall
dec
out
or
repz
outsl
pop
pop
dec
inc
das
sbb
cmpsb
pop
push
jnp
mov
push
sub
scas
jl
inc
dec
inc
push
dec
xor
pop
xor
add
arpl
mov
pushf
test
shl
fwait
mov
sub
in
test
mov
pop
xchg
test
push
mov
pop
or
or
int3
clc
xchg
stc
cs
push
add
js
push
sbb
fcomp
mov
xlat
push
sbb
fcompl
aad
movb
std
cmp
xor
lret
sub
sbb
pop
lds
lcall
sub
sbbl
lock
mov
lock
xlat
and
cmp
in
leave
inc
mov
mov
aad
jp
push
in
or
lock
jecxz
cld
ja
popf
das
inc
hlt
jle
jp
test
lret
adc
stos
mov
out
subb
xchg
jnp
pop
sar
push
xchg
and
pop
out
mov
pop
fwait
in
out
jno
xor
push
das
fwait
test
push
sbb
mov
inc
push
in
iret
add
jb
aas
mov
mov
hlt
jne
outsb
push
out
popa
adc
pop
fwait
jl
imul
add
popa
lahf
inc
bound
dec
scas
into
dec
mov
test
push
ret
adc
add
xorb
xor
mov
jnp
mov
adc
jnp
sbb
imul
pop
cmpsb
push
adc
xor
jl
add
xchg
lods
lods
mov
imul
repz
mov
lods
fcoms
mov
dec
aas
ja
xchg
mov
lds
sarb
imul
sbb
and
cmp
sbb
jmp
loopne
addr16
shrl
push
insl
es
in
lcall
jmp
in
insl
shlb
jmp
sarb
fistps
and
xor
jl
cmpsb
popf
repnz
in
mov
push
lea
popa
ret
outsb
dec
jo
sbb
xlat
inc
xchg
out
mov
push
stos
adc
leave
add
xchg
fists
mov
aad
repz
lret
out
in
add
cli
popf
xchg
jne
testb
sahf
inc
xchg
mov
fidivl
scas
orl
fnstenv
jmp
daa
inc
xchg
fnstsw
ss
jp
jp
dec
int
sti
jle
dec
xor
rcl
inc
fisttpll
jo
shl
idivb
pop
ljmp
xorb
mov
pop
shlb
je
sbb
lcall
int
fadds
int
fwait
jmp
jno
lods
mov
jnp
aaa
push
or
mov
jb
lds
loop
mov
xor
cmp
push
lods
notb
dec
je
lods
cmp
pop
pusha
cmpsl
mov
xchg
out
ficomps
mov
jbe
fcomi
adc
insb
aas
lret
xlat
fadd
sbb
sub
call
xor
push
inc
cmp
jb
pop
std
in
shrl
push
into
nop
cmp
xor
shl
inc
jmp
stc
xchg
aad
outsl
mov
sub
mov
iret
xchg
jae
push
dec
xchg
popf
fisubs
sub
mov
or
mov
test
lods
add
test
orl
pushf
aad
pop
lock
cld
xchg
mov
addl
mov
in
jge
popa
mov
mov
push
imul
jmp
jle
out
mov
stos
mov
incl
in
and
cmp
shl
cli
pop
pop
rorl
xor
lcall
aas
adc
fs
sahf
lods
push
or
lods
xchg
mov
les
out
mov
lcall
add
cmp
sbbl
inc
sub
mov
inc
push
pop
lcall
into
inc
jno
jp
ja
aam
sbb
and
sbb
popf
out
cmp
sbbl
sbb
stc
sbb
sub
imul
dec
or
repnz
xchg
sub
cmpsb
mov
mov
lahf
mov
inc
inc
adc
int
addr16
or
xchg
dec
add
sarb
push
jne
in
mov
xchg
mov
and
aaa
out
ja
fistpll
sub
push
data16
inc
mov
es
insl
popf
dec
cwtl
gs
dec
push
lea
jne
outsl
xor
nop
sbb
dec
add
popa
mov
jnp
pushl
popa
and
add
mov
sbb
sub
sahf
adc
loopne
int3
inc
xor
adc
pop
sub
xor
add
test
cli
mov
add
lods
stos
aad
or
push
mov
jge
arpl
aas
inc
popf
in
popa
jl
pusha
mov
das
push
xor
jl
addr16
cmpsb
adc
mov
jno
pop
clc
pop
das
iret
popa
add
sub
ljmp
dec
addl
out
sbb
pop
fwait
call
lds
adc
loopne
es
pusha
in
aad
push
mov
or
f2xm1
fldcw
jb
xchg
push
sub
adcb
pop
std
test
cmp
xchg
or
sbb
bound
cmp
adc
test
and
js
xlat
daa
cmp
das
out
or
mov
mov
dec
add
add
testl
data16
pshufw
xor
movsb
popf
mov
fdivs
mov
andb
out
jle
je
fs
test
je
and
icebp
mov
pop
jp
adc
shlb
push
imul
ret
addl
add
aas
inc
stos
ficompl
add
pop
test
adc
in
add
xchg
mov
inc
int3
dec
and
jecxz
inc
mov
jns
scas
adcl
mov
push
add
mov
jno
lods
push
push
dec
inc
daa
jnp
and
in
ret
repz
add
xor
jae
int
inc
jl
hlt
bound
fcoms
fidivs
dec
push
add
dec
sbb
fstps
push
cmpsb
in
mov
adc
mov
jp
ret
test
sub
inc
xchg
lock
les
push
cld
test
dec
cmp
push
and
jns
cmp
jmp
aas
and
fs
dec
fisttpl
sahf
adc
xchg
pushf
scas
into
shll
push
pop
test
test
and
mov
ror
into
rcll
out
push
je
jb
push
jg
mov
adc
in
incb
dec
push
andl
iret
or
mov
mov
out
fucomip
test
cs
lods
inc
sub
pop
lcall
sbb
xor
pop
out
push
fiaddl
popa
cs
pop
je
and
add
int
fcoml
push
sub
mov
mov
pop
dec
pop
or
out
add
inc
cmp
add
int
in
cmpsb
icebp
pop
jae
pop
je
push
push
repnz
lods
push
mov
stos
jmp
pop
sub
cmp
insl
out
negl
outsb
adc
ret
jg
push
movsl
loop
dec
stc
add
into
xchg
pop
push
pop
cwtl
nop
jno
push
jmp
stos
icebp
movsb
pop
das
mov
mov
adc
pop
inc
jns
cld
out
in
cs
aaa
add
in
stos
arpl
mov
and
ss
test
sbb
shrb
fcos
cltd
sub
jecxz
out
in
push
push
out
dec
loop
xchg
test
push
repz
jmp
xchg
negl
inc
add
xchg
push
aas
inc
imul
sub
shlb
int
cli
jno
add
insl
in
sahf
aad
je
jg
lods
das
mov
fdivs
sbb
sub
roll
inc
into
push
inc
adcb
add
cmp
xchg
sub
adc
icebp
cmpsl
jmp
les
push
jle
mov
add
dec
das
or
jbe
and
sub
jo
xchg
pushf
mov
rep
inc
mov
jmp
pop
cmp
pop
inc
push
fcmovb
sub
or
insb
pushl
rcrb
mov
test
into
icebp
mov
fisttpll
repnz
mov
fwait
mov
inc
xor
or
cvtpi2ps
idivl
lds
insb
cmp
pop
adc
ficoml
pop
sbb
rcll
pop
pop
push
into
push
arpl
rcl
loope
fs
iret
sbb
insl
fcoms
cwtl
pusha
dec
pop
inc
dec
push
push
xchg
fidivs
xor
mov
stc
das
les
sbb
and
jmp
sahf
test
mov
pop
shl
out
mov
imul
mov
scas
rorl
sbb
test
push
mov
push
stos
addl
shrb
lods
and
in
dec
xchg
leave
sbb
add
xchg
insl
loopne
lret
addr16
jae
mov
mov
push
pop
push
mov
and
je
sbb
into
fwait
dec
mov
pop
in
cmp
loope
xchg
push
mov
push
std
lock
jae
sarl
sbb
ljmp
add
in
fnstcw
cmp
jl
dec
mov
adc
sub
sub
js
xor
xchg
cmpsl
xchg
xor
out
sbb
inc
nop
push
and
mov
icebp
push
push
lcall
dec
adc
aaa
out
add
lds
testl
cmp
cmp
and
pop
adc
jne
cmpsb
pop
dec
fidivrs
sub
add
push
fbstp
dec
jle
ss
out
mov
cmp
addb
push
stos
hlt
lar
xor
lock
into
int
xchg
or
mov
jne
xchg
movsl
add
scas
movsb
daa
popf
clc
cmp
insl
shlb
pop
fimull
cmpsb
test
jp
bound
cmp
xor
xchg
inc
jno
aam
add
outsb
enter
prefetch
or
and
loop
ret
pop
pushf
xchg
aad
mov
daa
jmp
mov
lcall
mov
arpl
pop
jg
mov
adc
shrb
ud0
cvttps2pi
inc
adc
fbstp
out
lret
push
mov
cmp
mov
orl
jnp
je
sahf
xchg
out
add
sbb
into
mov
stos
inc
xchg
mov
movsb
shll
or
xchg
jno
fwait
cmpsb
push
out
xlat
jno
xchg
popa
xor
addr16
add
and
jp
push
in
dec
push
clc
in
scas
push
pusha
dec
push
xchg
jae
mov
rcrb
cmpsb
mov
mov
enter
add
les
sbb
xlat
aas
icebp
cmp
push
cmp
les
dec
add
mov
out
adc
outsl
push
cmp
and
subl
jbe
xor
dec
mov
mov
iret
insb
xchg
push
lret
aas
pop
xchg
sub
inc
xchg
lahf
mov
sbb
ret
push
push
xorl
insl
adc
sbb
lret
mov
dec
mov
pusha
cmp
cmp
mov
stos
xchg
push
test
stc
mov
es
mov
inc
leave
pop
jns
test
nop
push
push
jbe
daa
adc
in
je
das
cmp
fisttps
xchg
or
aad
test
sub
xor
fs
pushf
xor
cmp
dec
notb
movsl
scas
and
int3
fdivrp
sub
icebp
ja
jge
test
test
rol
jns
jno
push
testl
xchg
repnz
lret
inc
xor
pop
lret
mov
lret
pop
pop
push
cli
in
movsl
cli
add
stos
jns
cld
imul
mov
les
sbb
das
cmp
xlat
sbb
sub
sub
push
es
sahf
cwtl
mov
push
scas
mov
cmp
into
mov
ja
ljmp
mov
pushf
jl
xchg
out
data16
icebp
xchg
jbe
icebp
mov
fsubrl
flds
cmpsl
adc
mov
sti
frstor
test
pop
scas
inc
sbb
aas
jg
addl
dec
dec
hlt
sub
mov
pop
sbb
mov
sbb
inc
push
loopne
scas
push
outsb
mov
or
in
xor
rclb
xor
arpl
mov
icebp
clc
push
sbb
lret
test
pop
icebp
xchg
roll
jo
inc
cwtl
mov
mov
iret
lds
sub
testl
loope
imul
call
mov
xor
mov
out
int3
jne
pop
pop
imull
ficoms
xchg
shl
hlt
push
sub
push
out
mov
mov
sbb
dec
sub
gs
and
cmp
in
push
lods
out
out
xor
jb
mov
movsb
jbe
es
insl
or
sbb
pop
cmp
jb
jb
rol
std
inc
adc
xor
xchg
dec
test
insl
jbe
inc
sub
cmc
int
scas
insl
lds
jmp
adc
add
dec
add
mov
movsb
fldt
cli
mov
sbb
mov
jb
dec
std
pop
jns
xchg
xor
push
idivl
pop
fcoms
or
mov
add
lret
push
lret
incl
sub
subl
iret
cltd
jae
aad
sub
jno
movsl
outsb
mov
xorb
popa
fs
ret
aad
pop
push
xchg
clc
gs
pushf
fnstenv
cmp
aam
push
icebp
lret
fsts
xor
loope
scas
inc
push
push
adc
sbb
outsl
xor
call
xor
pop
cmp
push
insb
sbbl
push
mov
mov
loopne
adc
mov
and
push
aas
lds
lock
jnp
imul
aas
int
push
dec
add
mov
pop
dec
hlt
mov
mov
push
inc
fcmovb
pop
js
cmp
test
jmp
les
mov
mov
je
adc
and
lret
adc
lea
std
clc
or
pop
mov
subl
ret
ja
addb
jle
gs
xchg
mov
cmpl
sti
insl
cmp
test
jnp
call
pop
push
dec
fisttpl
pop
push
ret
pop
rol
and
imul
xchg
test
inc
dec
sbb
je
leave
and
cmpb
scas
mov
enter
js
fnstenv
push
lahf
fsubp
jnp
pop
xchg
rcrb
ret
sbb
lret
xlat
mov
dec
cmp
sbb
rol
adc
in
add
imul
rcll
cmp
xor
loope
sahf
sbb
shrl
test
cmp
jecxz
adc
mov
lahf
lret
pop
ja
inc
repz
and
add
pop
std
out
jbe
iret
loopne
fcoms
scas
mov
jge
xchg
cmp
insl
mov
fucomip
and
and
sbb
xchg
orl
xchg
loop
pop
mov
and
sub
ds
rcll
jecxz
pop
mov
cmp
sub
push
pop
mov
aas
dec
sbb
fsubl
lock
enter
push
int
dec
mov
rol
jg
outsl
int
pop
pop
addr16
out
stc
inc
pop
stc
rolb
sti
stos
dec
jno
mov
sbb
sub
push
rcl
cmpsl
adc
testl
loope
inc
push
scas
cwtl
out
pop
jecxz
inc
pop
sbb
adc
insb
or
test
sbb
loop
jae
outsb
inc
into
inc
pop
mov
jle
icebp
aaa
rolb
xchg
test
cmpsl
xchg
data16
jno
fldz
stos
add
inc
out
jmp
xchg
adc
pusha
in
mov
push
in
xor
xlat
cli
sub
fsubs
push
mov
mov
lret
lock
dec
insl
ja
sbb
push
cmc
daa
lret
cmpsl
aas
push
and
push
pop
adc
dec
and
mov
scas
xchg
ljmp
adc
dec
loop
or
mov
cmp
dec
inc
xchg
lahf
fs
cmp
jae
jnp
aam
mov
xchg
mov
gs
sub
sub
or
jbe
jae
dec
xchg
data16
pop
xchg
lahf
in
adc
xchg
xchg
ret
cmp
jle
adc
xor
cmp
xor
dec
add
movsb
stc
roll
arpl
scas
pop
or
scas
sbb
cmp
bound
movsl
arpl
xchg
push
mov
sarl
je
cmpsl
or
mov
in
pop
inc
jp
ss
add
fsin
push
cmp
jl
icebp
pop
lods
jbe
test
xor
adc
jae
adcl
sbb
add
or
dec
add
pushf
cld
and
and
add
fidivs
movsl
shlb
rclb
fisttpl
aas
mov
mov
cmp
ds
lea
test
popa
sub
adc
sbb
lret
movsl
stos
je
push
add
fnsave
hlt
jo
lods
mov
pop
cmpl
in
push
arpl
ss
loopne
xchg
jge
clc
dec
in
fiadds
shlb
pushf
cli
xlat
outsb
test
rclb
push
scas
sub
ljmp
xor
sbb
mov
mov
clc
lcall
inc
xchg
push
jp
pop
lret
out
jb
sbb
jo
pop
cld
dec
hlt
pop
mov
pushf
fidivl
push
shrb
dec
xor
sub
mov
test
xor
xchg
push
xor
outsb
mov
lret
cli
leave
loopne
outsb
xchg
insl
hlt
aam
or
sub
shll
push
mov
arpl
lock
cmc
clc
sub
adc
jmp
mov
xchg
jb
inc
ret
loop
adc
pop
push
mov
jne
shrl
push
and
es
push
dec
mov
fsts
outsl
lahf
test
test
jg
pause
xchg
test
or
sarl
in
fcoms
and
call
test
sbbb
scas
in
shl
dec
add
mov
stos
cmc
cltd
insl
and
mov
js
inc
ret
add
xor
dec
dec
jge
inc
ja
lahf
setb
in
sbb
xchg
stos
iret
cmp
data16
mov
ror
lret
push
dec
pop
xchg
neg
cmc
insl
icebp
stos
and
pop
pop
xor
test
add
sub
push
mov
popl
arpl
stos
cmp
cld
enter
xor
sbb
sbb
outsb
mov
insb
mov
pop
or
jno
mov
mov
inc
mov
jbe
cltd
mov
sub
je
dec
fs
out
inc
mov
push
jns
lret
cli
mov
fdivl
icebp
mov
inc
jo
pushf
ljmp
cmpsb
push
push
inc
lock
lods
aas
popa
rclb
push
push
and
inc
in
add
flds
cmp
mov
add
xor
push
mov
stos
je
ds
mov
mov
cmpsb
je
pop
jb
mov
xchg
or
jb
test
movsl
sub
and
cmpb
daa
aam
push
lret
push
shrb
or
xor
test
ds
cmp
cmp
inc
fists
addr16
out
mov
pushf
arpl
add
loope
dec
orl
jge
mov
test
xchg
or
push
push
mov
jae
in
add
mov
or
mov
pop
in
xchg
push
imul
cs
jl
gs
xor
lret
cltd
jmp
cmc
jb
pop
and
outsb
jp
cltd
lea
push
mov
xchg
adc
mov
push
aas
loopne
cmp
pushf
enter
jp
jae
in
mov
shll
fmull
xchg
jo
jge
dec
cmpl
pop
inc
mov
wrmsr
loopne
adc
push
mov
push
cltd
xchg
adcb
mov
das
xchg
xchg
push
das
shrl
xor
sbb
jbe
ficoml
fimuls
inc
push
mov
xlat
sti
fisttpl
xorb
movsb
adc
mov
xchg
sub
fisttps
cmpsb
or
test
jge
fcomps
ficompl
dec
pop
adc
popa
lods
push
pop
popf
add
test
sbb
adc
mov
mov
js
add
or
es
rorb
and
mov
jge
es
pop
mov
push
dec
xsha256
jle
outsb
les
gs
mov
ljmp
fcmovnu
pop
jbe
xchg
pushl
and
stc
push
push
arpl
mov
mov
outsb
fwait
je
popa
mov
jle
add
push
jl
inc
sub
or
dec
shll
mov
std
out
xchg
add
xchg
inc
and
js
ud1
daa
fwait
sbb
mov
retw
push
sub
les
scas
mov
stos
inc
mov
std
jecxz
pop
mov
xchg
lret
mov
pop
fwait
rcr
cmp
sub
rcrl
inc
stos
sbb
push
cmp
repnz
cmp
jg
xor
mov
mov
movsl
mov
scas
iret
and
popa
popf
and
jmp
pop
inc
cld
inc
sub
xchg
add
mov
jbe
call
je
mov
add
sbb
movsb
inc
adc
xchg
ffree
jns,pn
in
out
mov
mov
or
xadd
cs
jno
es
xor
rcrl
ja
addr16
repz
xor
pop
mov
mov
scas
out
jns
in
push
nop
fcomps
pusha
loop
jl
shl
mov
outsl
rorb
pop
cmp
pop
push
loop
cs
sbb
enter
in
andb
mov
out
push
pop
stos
cmp
mov
and
int
and
decl
lret
jae
push
aad
ss
lods
popf
push
and
inc
pop
xor
adc
ds
mov
gs
fstl
cmpsb
outsb
es
inc
insl
inc
lods
sbb
mov
test
cld
inc
fwait
shll
xor
int
push
cmp
shlb
mov
pop
lret
call
fistpll
arpl
pop
xchg
rcr
push
inc
daa
arpl
ljmp
and
sub
pop
mov
dec
dec
lods
push
or
into
jmp
xchg
leave
scas
loope
leave
adc
imul
sbb
rorb
add
adc
sbb
sbb
roll
out
mov
in
out
movsl
aam
notl
cltd
ss
mov
jbe
pop
jmp
testl
or
push
push
rol
sub
dec
loope
push
cld
sahf
popl
fdivrs
inc
addr16
ljmp
jle
xchg
xchg
or
jg
js
push
les
leave
rorb
test
pop
pop
xor
sbb
shll
mov
and
pop
int3
mov
cmc
mov
insb
mov
pop
xor
ficomps
or
ss
mov
lcall
fiaddl
cmc
pushf
sti
sbb
shll
ss
inc
inc
arpl
xchg
or
sbbb
mov
sti
fadds
sbb
cwtl
sarb
xor
cmpsl
mov
xchg
stos
dec
mov
push
lret
mov
je
ds
pop
mov
testl
mov
xchg
mov
dec
xchg
push
cmp
or
xchg
adc
int
shlb
push
xchg
mov
jns
add
sub
aad
cmp
jp
xor
push
in
notl
add
cmovle
aaa
outsl
rol
push
mov
push
int
pop
cmp
xchg
push
push
in
adc
dec
jg
or
jl
cmc
cmp
cmpsb
lea
aam
scas
xchg
ja
in
push
pop
pop
shl
gs
mov
imul
push
sbb
nop
jmp
paddq
push
pushl
push
fldcw
movsl
je
jbe
out
ficomps
fwait
addr16
shr
sub
sbb
dec
jne
out
sbb
scas
mov
adc
jl
jo
std
or
pop
dec
and
mov
adc
add
test
repnz
addr16
test
cmpsb
jg
enter
or
addl
jl
arpl
xchg
add
lret
sbb
sub
nop
push
loop
xchg
pop
push
repnz
or
sub
xchg
test
dec
push
ret
jb
imul
inc
lds
aam
sbb
adc
or
mov
out
xchg
iret
jo
cltd
pushf
cmp
bound
mov
fdivrl
pushf
hlt
lds
push
stc
sahf
fcmovu
aam
pop
lret
sub
push
sub
xor
out
nop
dec
stc
jp
nop
repz
mov
jns
push
cwtl
arpl
outsl
pop
iret
lahf
xchg
test
mov
movsb
and
xor
sbb
jae
jnp
push
pushf
shll
dec
xor
jnp
es
lods
xchg
dec
jge
mov
sbb
loopne
arpl
vpsrld
mov
pop
cltd
cmpsb
aaa
mov
lods
dec
cltd
cmpsb
or
push
das
xchg
insl
cmp
gs
mov
insl
push
mov
lods
jg
or
sbb
ret
test
popa
jmp
pop
negl
mov
test
in
xor
push
push
add
dec
je
fimuls
and
xchg
std
lea
xor
lea
push
cmp
jne
out
imul
or
jns
sarb
pop
in
add
dec
ss
loopne
add
mov
outsb
sub
test
xchg
bnd
add
add
bound
inc
gs
rcrl
call
sub
movsb
outsl
testb
or
cmp
in
jnp
mov
xor
cmpsl
mov
dec
cmp
sub
or
sub
cltd
int3
jle
lcall
loopne
adc
addr16
push
fs
repnz
lahf
inc
lods
pop
or
push
mov
adcl
in
and
mov
popf
repnz
sub
cs
dec
test
mov
inc
jno
mov
jp
mov
std
dec
ljmp
sbb
mov
jns,pt
out
stos
les
outsb
pand
add
add
rcrb
push
mov
sti
out
or
xor
or
mov
nop
je
push
data16
test
aam
fwait
dec
decb
cli
addr16
dec
and
ja
int
add
cli
sub
push
cmp
adc
in
scas
std
jle
sub
jge
aaa
inc
ljmp
mov
gs
addr16
sub
repnz
jmp
sub
sub
adc
mov
js
fstp
es
ljmp
notb
cmp
stos
sbb
mov
testl
loopne
ret
aad
inc
inc
inc
cmp
es
paddd
add
mov
ljmp
adc
mulb
scas
jbe
addr16
xchg
mov
add
xchg
call
fwait
sub
cmp
and
insb
scas
in
popa
inc
lret
sbb
mov
pop
dec
fwait
or
mov
arpl
iret
pop
cmc
ret
imul
in
pop
push
test
inc
pop
hlt
mov
and
push
loop
orb
pushf
inc
lds
xchg
cld
jnp
mov
sbb
lret
xchg
mov
push
icebp
pop
jle
rclb
mov
mov
sbb
into
roll
fnstcw
push
insl
jbe
push
push
sahf
or
sub
fsubl
dec
insl
imul
add
insl
xchg
push
mov
rolb
adc
data16
stos
bound
sub
jne
inc
lock
mov
sti
pop
xchg
xchg
lret
jmp
xchg
adc
xchg
lret
ret
jp
mov
test
test
xor
cmp
cld
pop
test
mov
rclb
jns
pusha
imul
or
inc
lods
push
pop
insb
or
fs
xchg
icebp
cmp
pop
int
mov
xor
and
lahf
imul
fimuls
xlat
mov
fadds
sub
les
push
xchg
repz
jl
jg
sbb
std
lcall
jo
and
mov
push
insl
iret
hlt
sbb
ss
pop
pusha
pop
pop
mov
dec
frstor
ret
sub
out
xchg
mov
stos
outsl
fwait
mov
push
enter
bt
xor
lahf
xchg
xchg
ficomps
movsl
xchg
xchg
push
int3
clc
adc
pop
cmp
fnstcw
cs
jmp
dec
and
out
xlat
mov
subl
psrad
jns
sbb
xchg
mov
or
mov
sbb
dec
frstor
incl
pop
pop
pushf
addr16
cmp
adc
sub
fcoms
push
cwtl
adc
dec
lcall
push
push
arpl
mov
inc
int3
dec
add
out
xlat
insl
push
sbb
test
jno
pushf
lcall
dec
pusha
shll
mov
cmp
push
into
je
es
pop
ja
jmp
or
add
xchg
lret
push
mov
call
enter
outsb
in
pop
mov
pop
pop
push
ss
adc
retw
hlt
adc
push
out
dec
das
jae
inc
jo
sar
xor
cmc
cmp
push
fdivrs
pop
lret
adc
jl
outsb
inc
mov
aam
out
mov
leave
adc
lahf
movsl
faddl
out
push
mov
jecxz
stc
nop
pop
xor
jge
mov
movsl
fmull
and
out
push
xchg
mov
xor
mov
std
movsl
lods
cmp
jmp
jae
dec
mov
call
in
jg
shl
loope
mov
push
push
shl
sarl
dec
lcall
inc
jecxz
dec
add
pushf
cld
mov
inc
push
push
push
in
dec
xchg
jbe
inc
popw
or
cmpsl
shrl
ds
pop
xor
lods
popf
repnz
sbb
jae
pop
mov
xchg
xchg
pushf
mov
pop
call
sub
lock
push
push
fnstenv
movsl
mov
mov
pop
add
incb
sub
pop
repnz
push
js
addr16
ret
pop
or
adcb
sub
in
add
dec
mov
nop
inc
nop
mov
test
jo
enter
sbb
adc
mov
xor
xor
push
cli
lahf
lods
cmp
cmp
jmp
cli
mov
movsl
jno
les
and
out
repz
xor
or
fisubl
mov
sbb
sahf
mov
jbe
inc
mov
mov
push
cld
mov
jns
mov
mov
xchg
mov
xchg
push
jle
data16
cmp
and
mov
mov
ret
sub
clc
xor
ss
sbb
out
mov
movsb
mov
or
sti
mov
cs
out
cmpsb
nop
gs
ja
movsb
shll
xor
jb
lret
bound
aaa
pop
mov
js
pusha
and
mov
add
lret
pop
mov
adc
sub
sub
leave
dec
test
xchg
inc
fnstenv
mov
mov
shl
aaa
test
scas
xor
inc
ds
xchg
mov
xchg
adc
mov
int
cli
std
in
in
jecxz
mov
andb
push
scas
cmp
fsubl
jbe
jge
and
sub
daa
icebp
mov
das
add
inc
mov
cmp
dec
out
rorb
cmp
adc
mov
mov
mov
mov
mov
mov
shlb
scas
insb
shrl
mov
ja
dec
data16
pop
adcl
and
or
mov
hlt
mov
shll
mov
mov
cmc
call
push
adc
and
pop
inc
pop
sbb
movsb
push
das
aam
imul
pop
iret
in
dec
pusha
adc
and
dec
cld
sbb
fildll
int
jle
inc
adc
add
cmp
push
bound
sbb
inc
out
mov
dec
cmp
inc
cmp
popf
bndldx
jle
inc
xor
imul
loopnew
addr16
xchg
and
dec
mov
ljmp
pop
mov
mov
ss
lret
jne
scas
sub
xchg
cmp
out
ljmp
shrl
shlb
pop
cmp
out
lds
out
out
sbb
in
aad
xor
xor
adc
dec
scas
andb
out
pop
add
incl
ss
inc
jle
push
outsb
rorb
mov
setle
pop
test
mov
xor
push
xchg
scas
pop
cmp
xor
cmp
push
popa
popf
test
add
popf
data16
loop
cltd
ljmp
push
test
inc
aam
mov
and
cwtl
dec
test
roll
es
cmp
repnz
aaa
je
out
xchg
scas
movsl
in
pop
mov
cmpsb
xchg
popa
adc
xor
gs
push
testb
rclb
cld
push
cld
fucomip
lret
pop
xor
xor
sub
push
pop
shlb
js
xor
int3
lret
or
jbe
sub
and
xor
cmp
movsb
jecxz
ljmp
test
push
mov
jl
or
test
mov
cmpsb
xchg
mov
mov
shll
arpl
and
js
loop
pop
mov
hlt
orb
daa
test
xor
test
orl
jae
pop
sbb
pop
frstor
lret
ret
cld
mov
inc
mov
outsl
inc
xchg
sbb
mov
pavgw
sbb
pop
and
bound
std
jmp
pop
ss
iret
popa
loopne
jle
jo
mov
cmp
xadd
int
mov
xchg
xchg
xor
pop
pushl
fwait
adc
hlt
pop
xor
pop
cmpsl
mov
sub
xor
sbb
pop
or
pop
and
ja
shll
jge
popa
lds
mov
mov
fmul
add
lods
decw
add
jae
jle
popf
ds
add
sub
push
and
movsl
pushf
aaa
pop
nop
daa
xor
xor
imul
cmpsl
int3
xor
pop
fildl
inc
xor
movsb
sti
push
mov
aas
mov
add
cli
mov
mov
jae
stc
push
mov
xchg
fwait
in
enter
mov
sbb
pop
xor
aaa
shl
cmc
stos
xor
mov
xchg
lea
pop
test
les
or
adc
or
or
es
loop
and
jmp
adc
sub
fdivs
stos
cmpsl
lea
xchg
push
divb
ret
inc
arpl
xor
jle
jno
jne
jae
jecxz
or
out
stc
sub
jno
fabs
in
push
sub
scas
mulb
add
mov
cmc
shrl
jl
in
sub
paddsw
mov
sbb
pop
pop
adc
mov
mov
sbb
xchg
ljmp
in
fnstenv
push
lcall
sbb
xor
sub
outsb
out
lret
in
js
cmp
ss
and
imul
push
cli
dec
add
dec
stos
xchg
inc
add
sti
and
bound
xor
cmp
movsl
push
ret
xor
pop
pop
aaa
pusha
int
cmp
jle
jae
push
lds
adc
popf
test
xor
pop
xchg
xchg
push
ret
popa
jp
fstps
and
add
pop
add
scas
push
int
lea
gs
movsb
mov
pop
hlt
or
sbb
sbb
adc
xor
das
mov
dec
popf
enter
ret
inc
rcrb
je
movsb
into
inc
pcmpeqw
cvtps2pd
add
push
sti
rcr
popf
jno
mov
aad
arpl
fdivrl
lea
in
add
xchg
inc
sbb
and
dec
or
lods
mov
out
mov
lds
add
adc
or
scas
sub
mov
xchg
pop
lods
push
loope
sbb
aam
inc
fs
cli
movsb
fs
leave
adc
shrl
clc
or
es
jmp
pop
fadds
jnp
push
sbb
js
out
mov
jl
es
xchg
mov
test
cmp
sbb
ret
ljmp
push
imul
rol
enter
into
sahf
outsl
inc
int3
test
mov
movsl
fdivrp
call
cmp
dec
insl
mov
ror
jg
inc
call
jno
mov
lcall
jge
mov
xchg
mov
cltd
pop
arpl
ss
push
push
ret
shrb
or
pop
stos
aam
xchg
lock
loop
xchg
and
into
sbb
in
lahf
adc
cmp
and
push
mov
dec
ret
or
inc
cmp
jns
sub
mov
repz
out
jbe
or
mov
cmp
stos
add
call
mov
out
js
and
xchg
jmp
mov
fldcw
je
std
cmp
cmp
xor
xchg
orb
push
jae
shlb
sahf
js
pop
push
jl
mov
cltd
jbe
insb
pop
in
lahf
fimuls
sbb
push
inc
or
sub
fdivrs
cmpb
add
out
int
es
in
inc
cmp
out
shl
mov
call
cmc
cmp
std
push
sub
add
ds
jge
loopne
pop
in
xor
mov
sub
shlb
cmp
push
add
inc
test
push
sbb
mov
gs
loope
arpl
js
or
dec
jno
mov
inc
mov
sub
xor
jge
pop
push
sub
stc
sbb
loopne
xchg
and
lret
push
lahf
xor
xchg
clc
and
and
pushf
sbb
push
pop
in
js
xchg
or
push
jg
pop
pop
out
xlat
xchg
mov
pop
mov
mov
into
testb
fstl
sub
punpckhwd
das
inc
fmulp
addb
mov
insl
lret
mov
stos
mov
pusha
adc
push
cwtl
sarb
push
cmpsb
lock
or
inc
or
movsb
lock
mov
mov
pushf
shl
outsb
adc
pop
and
ss
les
sbb
adc
push
rclb
add
cmpsb
mov
fwait
dec
xchg
dec
pop
leave
pop
in
hlt
in
mov
and
int
es
sahf
xchg
add
in
mov
push
pop
mov
xorl
test
fstpt
adc
mov
xchg
pushf
mov
jg
jbe
jg
or
cld
pop
xchg
mov
aam
movsl
sbb
dec
mov
movsb
cmp
clc
addr16
stos
pop
enter
jge
mov
in
loope
hlt
ss
or
mov
mov
sub
ds
ljmp
mov
popf
xor
xchg
or
aas
scas
mov
push
dec
jb
cmc
sti
cs
data16
mov
sub
jle
mov
lock
pop
ds
or
pop
jbe
mov
jp
iret
xchg
rolb
pusha
in
push
push
lds
pop
ret
xchg
arpl
xor
pop
scas
sbb
idivb
pop
mov
push
notl
cmp
pop
mov
sub
jno
aaa
xor
out
dec
jb
cmp
mov
lods
mov
mov
xchg
fisubrl
dec
dec
sahf
jecxz
add
push
push
pop
or
inc
shrl
ljmp
add
adc
pusha
cmp
mov
push
loop
sbb
daa
jmp
jge
out
jl
xor
and
sub
add
mov
lcall
popf
sbb
mov
sub
jmp
dec
inc
lock
dec
jmp
and
pop
cmp
nop
das
mov
loope
aas
icebp
aam
rcrb
mov
lods
or
sbb
xchg
test
mov
insb
repnz
and
adc
mov
sbb
xor
inc
dec
pop
out
xchg
repz
mov
pusha
sbb
mov
scas
mov
and
dec
xor
or
ret
mov
add
push
roll
add
mov
fldl
mov
inc
subb
adc
les
adc
xor
xchg
ret
scas
scas
movsb
pop
les
leave
mov
jbe
flds
gs
adcb
or
and
mov
jle
adc
add
push
mov
xchg
mov
inc
sub
sub
lods
or
arpl
cmc
add
xchg
mov
int
int
jle
pop
xorl
jl
sub
daa
fidivrs
dec
xchg
and
lea
test
adc
adc
into
jbe
sub
aad
outsl
fstl
out
dec
cwtl
push
test
add
push
push
push
or
je
int
cmp
jo
sub
and
ljmp
cmp
out
sahf
jno
lods
ss
fmull
adc
pop
dec
mov
pop
sbb
sbb
popa
out
arpl
add
ret
pop
aad
push
and
les
stos
sbb
lea
xor
fsubrp
push
jnp
mulb
aas
sub
aam
std
aam
repnz
andl
sar
mov
xchg
ret
jnp
mov
sub
enter
push
int3
stos
dec
jmp
lods
lcall
jno
sbb
movsb
jmp
fdivrl
inc
mov
cmpsl
jno
imul
or
push
push
stos
iret
negb
xchg
pop
sbb
popf
push
fs
or
je
into
mov
fnstenv
cmp
mov
mov
mov
sbb
cmp
sbb
inc
lret
imul
call
adc
shl
sbb
fcomip
iret
addb
out
adc
jecxz
clc
out
sti
jg,pt
stos
and
scas
xor
inc
jnp
rcrb
repz
push
into
push
and
cmp
jo,pt
mov
or
sbb
jne
pushf
dec
jl
jne
xlat
xchg
insl
imul
enter
out
dec
test
andl
shll
rolb
mov
mov
or
in
test
pop
mov
push
mov
and
stos
das
xor
or
add
xor
xor
xor
sbb
cmp
shrl
rorl
cmpsb
jp
sbb
mov
out
aad
jecxz
stc
aad
pop
inc
sahf
sub
repnz
mov
decl
adc
dec
faddp
inc
pop
in
into
jg
cmpsb
lcall
std
mov
imul
or
pop
je
lods
mov
cltd
fnstcw
xor
xchg
rcrb
in
adc
sbb
push
mov
adc
xor
mov
push
stc
lcall
mov
insb
push
xchg
call
jb
pop
push
dec
fnstcw
pop
leave
xor
add
mov
into
cltd
cmp
insl
jg
lahf
xchg
sbbl
mov
lret
rol
int3
sbb
pop
xor
scas
dec
loope
ljmp
mull
shrb
mov
and
lods
add
cmp
pop
cmp
sti
pop
lret
push
pop
inc
loope
dec
lea
ja
repz
pop
imul
jae
shl
out
sub
out
cwtl
sub
out
outsl
out
hlt
es
and
std
push
add
inc
adc
xor
loopne
add
shl
rolb
cli
sbb
sub
pop
push
js
shrb
push
rcrb
int
add
gs
mov
stos
ja
call
or
xor
addl
lea
arpl
pop
mov
repz
or
mov
dec
fsubr
pushaw
jns
sub
fiaddl
icebp
jno
cltd
jl,pn
div
out
movsl
or
sub
cli
mov
iret
xchg
inc
sub
iret
je
pop
in
push
or
imul
mov
and
add
mov
or
divb
mov
jbe
mov
cmp
std
cs
jle
inc
push
cmp
out
sbb
dec
jns
aam
inc
push
cmp
call
or
dec
xor
xchg
mov
repnz
cmc
cmp
inc
aam
fdivrl
pop
sub
push
stos
sbb
ss
mov
stos
fs
sub
ja
cmp
ret
jae
xor
cmp
mov
jb
adc
pop
ret
mov
pushf
enter
test
shrb
rol
sub
arpl
sub
lods
push
jae
popf
movsb
insl
pusha
adc
mov
mov
das
incl
add
jecxz
js
cmp
mov
xchg
pop
push
rcr
mov
test
mov
das
leave
push
push
add
pop
mov
push
lods
mov
addr16
std
cmp
arpl
jge
outsb
pop
decl
adc
js
out
hlt
cmpl
pop
sbb
in
pop
test
and
fsubrp
out
and
lret
les
lods
lret
sbb
rcll
lock
stc
add
cmp
imul
dec
and
popf
lret
inc
and
push
and
addb
mov
add
xchg
mov
rorb
js
nop
xchg
lock
arpl
out
iret
xchg
fsubrl
jle
push
or
nop
aad
bound
sti
mov
bound
lahf
pop
outsl
sahf
outsb
mov
rorl
cmp
and
sub
push
cld
lcall
scas
jae
jecxz
js,pt
inc
pop
mov
mov
loopne
in
lahf
lahf
stos
cmp
push
add
loopne
jmp
pop
xor
mov
repnz
xor
push
xor
and
dec
lds
sub
rclb
add
cmp
cs
orb
push
and
xchg
pop
xor
jno
out
sbb
ror
imul
sbb
push
mov
gs
sahf
pop
jno
test
mov
xor
push
mov
imul
das
orb
dec
jae
jmp
outsb
orl
sbb
dec
popf
mov
sub
popa
bound
std
dec
sub
cmpsb
sbb
add
test
mov
fidivl
mov
shll
es
mov
jb
repnz
sahf
mov
sub
stos
cmc
push
or
pusha
lods
outsl
mov
sbb
hlt
stos
and
divb
notb
push
in
fstpt
out
mov
lret
ficompl
arpl
cmp
jo
push
std
stc
inc
xor
test
push
add
mov
iret
stc
repnz
mov
adc
leave
in
lcall
push
dec
popa
nop
aaa
jl
rolb
fwait
xor
mov
or
arpl
xchg
shlb
xor
shl
dec
cmc
int3
nop
shrb
cld
xchg
cli
icebp
loope
cmpl
addr16
fcmovu
shll
addr16
int3
fdivl
sub
out
mov
fisttpll
es
fisubs
stc
lret
xlat
insb
xchg
insl
in
jmp
inc
pop
pop
lahf
les
xchg
test
cmpsb
aas
adc
push
pop
ljmp
mov
add
xor
icebp
das
and
jo
roll
mov
push
pusha
nop
jl
mov
pop
push
or
les
incb
cltd
scas
mov
and
jge
test
pop
outsb
outsb
imul
mov
jns
test
lds
mov
in
or
ss
daa
push
adc
xor
sub
jp
cmp
and
movsl
gs
into
test
scas
shlb
xor
roll
stc
mov
fisttps
ds
sar
jne
int
xchg
les
inc
insb
dec
mov
dec
mov
jp
ja
jp
leave
mov
add
mov
lds
jmp
pop
mov
xchg
lcall
test
cmpsl
out
addr16
or
mov
loopne
cmpsl
push
stc
mov
ficoml
shl
stos
fdivrs
add
stos
mov
dec
cmp
inc
jb
data16
push
or
fcompl
adc
int3
sbb
or
mov
inc
std
fsts
cmp
outsl
loopne
jecxz
jo
sahf
sub
xor
jmp
sub
pusha
xchg
jmp
stos
jle
loope,pt
test
mov
pop
push
pop
push
sbb
adc
or
mov
push
push
scas
out
inc
xchg
pop
ljmp
stc
cs
dec
add
add
stos
mov
aas
mov
dec
lea
pop
bound
sub
add
dec
rcl
xchg
pop
loope
xchg
push
ja
mov
xor
sarb
xchg
frstor
inc
push
enter
jnp
xor
and
roll
fwait
dec
pop
in
adc
adc
or
idiv
xchg
mov
xchg
test
in
ror
mov
dec
xor
dec
fwait
sub
decl
fwait
inc
imull
stos
or
pop
repnz
cmp
mov
shll
cmpl
les
lahf
int
addr16
in
cmc
insl
cmp
sub
push
mov
sbb
xchg
stc
fdivrs
les
mov
out
inc
enter
popf
roll
pop
aam
cwtl
mov
aad
test
stos
test
jge
jae
dec
cmp
outsl
xchg
mov
loop
jb
pop
jo
push
and
popa
sbb
sub
js
arpl
mov
adc
lret
sub
and
sbb
cmp
outsl
pusha
dec
cmp
jecxz
rcll
in
clc
cltd
jmp
cmc
sbb
sub
gs
inc
test
xlat
rcrl
enter
iret
sbb
and
sbb
pop
popa
xlat
outsl
xchg
test
sub
push
push
sahf
negl
jge
stos
dec
mov
pop
mov
outsb
adc
push
and
add
sbb
jbe
inc
cmp
xlat
add
rcrb
loopne
aad
repnz
call
sub
add
jmp
pop
je
mov
inc
pushf
js
in
outsl
mov
xchg
or
fldt
cmpsl
stos
mov
pop
pop
mov
jge
imulb
out
jecxz
xor
sub
xor
pop
bound
sbb
xchg
push
inc
das
push
movsb
xor
xchg
sbb
scas
pop
inc
sbb
jno
imul
xchg
cmp
lret
jmp
mov
bound
pop
cs
xchg
cmp
test
pop
das
aam
scas
cmp
cld
inc
lret
xchg
movl
mov
add
add
mov
scas
in
and
aam
out
in
cmp
add
sub
cmp
jne
in
push
icebp
jnp
sub
pop
mov
xchg
test
leave
xor
shlb
daa
repnz
fs
xchg
in
push
daa
jne
push
add
inc
sbb
bound
mov
xchg
add
inc
xchg
jecxz
cmp
jl
outsl
cmp
jp
test
rorb
insb
push
mov
arpl
test
mov
cld
push
pusha
pop
popf
mov
int3
mov
mov
nop
sub
mov
add
push
or
mov
out
push
lock
insb
fndisi(8087
cmp
mov
or
xchg
mov
xchg
outsl
sub
xor
mov
iret
or
lret
fadds
push
or
xchg
aad
arpl
lods
xchg
jo
enter
lret
mov
mov
mov
xchg
push
rolb
and
aad
pop
and
xor
mov
repz
rorb
xor
icebp
bound
call
popf
mov
mov
addb
cld
fmuls
fdiv
jnp
mov
popf
jb
inc
dec
lods
in
movsl
notl
dec
push
or
cltd
fcmovnb
scas
aam
push
call
fsubl
sub
int3
mov
jg
jo
push
xchg
jae
inc
cmp
mov
pop
mov
jnp
cld
pop
fiaddl
xor
imul
adc
add
or
pop
out
jmp
scas
mov
sti
sub
mov
xchg
or
mov
movl
loope
sub
pop
push
sub
mov
mov
dec
mov
in
sbb
sbb
test
cmp
mov
ljmp
lret
mov
add
dec
push
cmp
es
or
sbb
cmc
mov
mov
cmp
stos
jae
and
sbbb
pop
push
aaa
mov
or
mov
ja
push
sbb
inc
scas
push
mov
jmp
bound
push
ret
xchg
mov
cld
mov
in
ljmp
imul
push
mov
jns
ss
lea
adc
push
lret
out
add
ret
add
rorl
mov
xchg
or
js
fidivs
lret
out
xchg
fstl
mov
enter
sub
sub
xchg
lods
xor
call
sbb
jbe
les
cld
sbb
mov
icebp
jg
push
xorl
cmp
aas
cmpsl
outsb
mov
mov
stos
es
mov
cmp
std
cmp
dec
or
mov
std
mov
or
aaa
jge
cmp
sub
mov
test
fldt
int
mov
xchg
cmp
cmp
out
in
insl
and
movsb
fisubrl
into
jne
push
xchg
sub
stos
adc
mov
scas
dec
pusha
jno
push
imul
stos
fcoms
xchg
lea
mov
jbe
pop
xor
sbb
sub
pushf
cmp
cmpsb
sbb
mov
pop
mov
mov
rcrl
push
fstl
jnp
sub
pop
sub
jecxz
andb
addb
movsb
rorb
fcompl
jecxz
add
add
test
sub
sub
push
add
and
insl
sub
mov
push
sbb
fstpl
pop
stos
adc
pop
test
lcall
in
push
mov
lcall
out
imul
mov
and
jne
xor
outsb
xchg
int3
movsb
es
call
fildll
pop
dec
repz
mov
out
enter
daa
outsl
mov
aam
jns
or
call
cltd
popf
mov
dec
addl
mov
sbbl
jnp
or
lds
fwait
lahf
dec
rolb
jge
inc
scas
xchg
sti
dec
mov
jbe
xor
test
movsl
aam
push
sbb
nop
jne
aas
push
push
pop
lret
stc
lcall
scas
mov
clc
jg
sub
sub
cli
outsl
cwtl
sbb
jb
mov
push
push
push
repnz
inc
or
loop
nop
push
and
lods
jl
lcall
outsb
les
lods
push
jmp
push
add
mov
sarb
mov
xor
clc
and
popf
int
xchg
jle
sub
or
loope
xchg
int3
fiaddl
jne
push
jmp
cld
push
cmp
sub
or
stos
pop
sbb
pop
fsubs
je
pop
mov
sbb
mov
xor
mov
push
enter
cwtl
sbb
fxch
adc
dec
xchg
mov
lock
mov
pop
xlat
mov
pop
repz
dec
outsb
scas
push
jne
leave
pop
pop
sbb
cmpsl
adc
push
xor
out
xchg
divl
pop
or
fdivrl
js
lods
push
lahf
shlb
das
and
stc
jmp
adc
push
mov
movsb
jb
push
xlat
es
push
jbe
dec
adc
cwtl
add
popa
stc
inc
xorb
dec
and
mov
xchg
jb
adc
es
jnp
cmp
popa
or
sbb
rep
mov
mov
mov
fadds
out
jl
iret
ret
mov
ds
into
inc
sub
loop
sub
and
test
sub
shrb
sarb
imul
pop
adc
lcall
mov
or
inc
insl
dec
xor
sub
ret
roll
ja
call
or
or
cltd
div
je
xchg
jne
and
and
in
mov
rolb
lods
jb
out
sbbl
inc
xor
dec
mov
das
dec
sbb
pushf
das
into
in
mov
scas
push
add
jnp
mov
test
loope
iret
push
mov
lea
pcmpeqb
pop
fldenv
pop
fdivs
xchg
sbbb
outsb
inc
mov
lahf
lods
ja
cmp
rcr
add
cmpsb
dec
mov
mov
xor
cmpsb
cmpb
and
lret
into
jbe
sub
loop
and
mov
cmovae
lcall
push
lret
dec
xchg
addb
call
pop
push
int3
and
push
xchg
ds
mov
sub
in
push
cld
jnp
lods
sbb
in
lods
jns
inc
dec
and
lret
lea
mov
pop
ds
push
mov
cmp
jg
je
push
inc
scas
mov
js
test
gs
pushf
push
sub
outsb
sbb
insb
fdivrs
cmp
jns
dec
fisubrl
fmulp
xchg
jo
cmp
ret
in
add
loope
jge
adc
xchg
mov
test
mov
fidivrs
fwait
scas
inc
mov
imul
push
mov
and
fcomps
mov
push
pushl
out
dec
popa
pop
jbe
inc
pop
inc
xor
mov
and
test
cli
mov
sub
pop
mov
jbe
mov
dec
mov
sbb
enter
iret
inc
mov
dec
popf
xchg
stos
ret
int
sub
leave
dec
and
sbb
adc
dec
rcl
test
jne
pop
test
stos
imul
cld
sbb
or
fwait
inc
lahf
loope
outsb
jo
mov
inc
mov
cmpsb
inc
scas
stc
arpl
imul
jb
rcrl
pop
dec
mov
mov
rcl
mov
push
fstps
dec
cmp
jmp
lret
sbb
add
pop
cmpsb
bnd
gs
leave
or
in
mov
pop
leave
popl
rcll
out
rcl
rcrl
or
sbb
mov
fidivrs
add
mov
jnp
arpl
lods
jae
push
lret
out
stos
sub
int
cmpsl
add
adc
mov
fwait
into
repnz
and
push
push
hlt
rorl
inc
pop
mov
fstpt
data16
jne
lods
jb
hlt
cmpsb
jae
mov
lea
sbbl
jmp
ja
movsb
cmp
sub
sub
in
ficoml
out
inc
aas
jmp
cmp
cmpsl
sub
rolb
add
fwait
dec
xlat
stos
out
into
and
movsb
dec
inc
push
dec
out
push
push
xor
fistps
lcall
xlat
std
imul
fidivrs
lock
lea
cld
scas
cmp
leave
and
and
adc
xchg
loop
movsl
cmp
cmpsb
faddl
adc
pop
push
rcr
pop
adc
xor
fidivl
test
sahf
push
and
jp
add
mov
pusha
test
imul
add
add
popa
mov
out
js
sub
xor
mov
icebp
jle
outsb
inc
jno
pop
test
outsb
les
hlt
jecxz
adc
push
adc
sti
xchg
sahf
mov
mov
push
push
lahf
add
loopne
subb
ret
xlat
lods
lods
pop
sbb
imul
xchg
jnp
popf
push
pop
pushf
lret
inc
xor
in
xor
loope
in
inc
jae
or
repz
lods
cltd
mov
popf
pop
mov
lret
mov
push
jp
pusha
jae
push
mov
jge
insl
xchg
pusha
mov
sbb
nop
inc
fdivl
or
insb
je
sbb
mov
jg
xchg
push
or
mov
scas
testl
mov
mov
mov
rclb
sub
js
xchg
fsubrl
sub
popa
xlat
or
stc
lock
cwtl
mov
cmp
fisubrl
std
pop
jo
jnp
popf
dec
sub
bound
leave
aam
push
push
clc
pop
jle
jbe
jae
mov
aam
arpl
cmp
cmp
in
shl
testl
cmp
dec
divb
lock
lds
mov
lea
xchg
ficompl
sub
xor
xor
jge
cmpsb
sub
aam
lret
sbb
jnp
mov
add
scas
push
cld
std
imul
rorb
mov
int3
iret
mov
mov
stos
clc
subb
or
add
imul
das
adc
in
mov
dec
movsl
sbb
xchg
sbb
lea
es
mov
dec
dec
loope
fwait
leave
call
shlb
stos
add
lret
cltd
movsb
sub
iret
inc
push
clc
xchg
lock
mov
ss
mov
cmp
xor
xor
or
add
data16
inc
jbe
xchg
es
add
in
push
xor
add
or
sbb
testb
fwait
mov
ljmp
ficomps
inc
cmc
mov
sahf
xchg
mov
lret
rclb
adc
and
sbb
shrl
cmpsb
add
sbb
int3
les
subl
pop
test
mov
xor
rclb
jnp
xchg
inc
les
pop
mov
mov
jbe
pop
loopne
mov
test
xchg
lods
stc
rcll
clc
xchg
push
and
lods
enter
cmpsl
push
data16
imul
xchg
xchg
addr16
aaa
pop
iret
sub
arpl
jecxz
mov
or
xchg
pop
add
mov
add
mov
ss
lahf
add
mov
cmp
push
xor
ja
mov
xchg
or
aad
xchg
and
xchg
lds
mov
lea
cmp
outsb
cmpsl
into
mov
mov
arpl
lret
dec
mov
pop
cmp
mov
cli
push
mov
stos
lods
stc
popf
mov
repz
jmp
or
mov
lock
scas
inc
sbb
xchg
xor
cmpsl
push
mov
lret
das
adc
mov
mov
stos
xchg
mov
push
scas
cs
cmp
nop
add
dec
jmp
cwtl
mov
and
std
imul
test
out
mov
cli
push
cs
push
shrb
inc
lds
dec
inc
test
or
jb,pt
jnp
pop
or
std
xchg
call
lret
dec
push
xor
inc
and
sahf
jmp
fstpt
xchg
xchg
push
jge
push
xchg
dec
stos
out
cmp
out
sub
mov
sti
fdivrp
in
bound
sbb
imul
leave
addr16
xchg
xor
in
f2xm1
mov
in
jmp
inc
into
mov
jg
cmpb
sub
lret
jmp
icebp
cwtl
sub
adc
mov
cs
push
cmp
sub
rorb
scas
inc
loop
lret
stos
adc
adc
in
leave
inc
jge
lds
fistps
ret
xchg
out
mov
cld
enter
inc
pop
or
xor
pusha
xchg
mov
cmp
cmc
lcall
xchg
dec
insl
sbb
ret
aaa
in
repnz
push
push
xchg
adc
faddl
push
lock
insl
push
std
mov
fmull
xor
cld
and
aam
dec
sub
and
or
and
sbb
jns
outsb
xchg
push
mov
add
cmp
pop
arpl
dec
mov
insl
icebp
scas
mov
in
fisttpll
mov
adc
sbb
sbb
repz
dec
daa
pop
inc
orb
mov
mov
jbe
in
outsl
test
xlat
dec
movsb
out
out
rcrb
hlt
leave
icebp
pop
mov
cld
js,pt
cmp
add
ja
icebp
out
sbb
cmpsb
jge
stc
jno
mov
shlb
ja
sub
bound
pop
aam
hlt
jle
das
cmc
mov
lock
cmpsb
gs
cmc
ss
push
xchg
lret
gs
pop
cmpsl
arpl
dec
mov
mov
aam
mov
push
fstl
adc
movsb
and
xlat
je
int3
pop
in
out
sbb
mov
jmp
test
mov
mov
repz
sahf
lock
push
mov
clc
gs
in
cmpsb
dec
daa
jne
test
enter
jmp
inc
leave
push
pop
cli
mov
test
push
sbb
mov
xchg
flds
push
mov
sbbb
cmpsb
inc
call
std
push
jmp
mov
sbb
movsl
shrb
sbb
lods
rcr
sbb
pop
lret
in
jle
inc
call
mov
aam
xor
lret
push
outsl
xlat
mov
out
shlb
jp
pop
lock
repz
xor
adc
mov
and
jle
push
xchg
in
xchg
and
addr16
arpl
mov
or
roll
sbb
push
xor
xor
and
fnstsw
mov
adc
movsb
mov
dec
sub
inc
and
jecxz
stos
fsubr
ds
mov
sbb
stc
outsb
negl
insl
push
push
inc
jp
mov
aas
outsb
fisubl
in
mov
es
scas
inc
div
pop
lea
mov
add
and
lock
push
je
rcrl
mov
mov
ja
clc
add
add
fldenv
out
and
sbbb
sbb
add
adc
fs
mov
adc
mov
ds
sti
and
push
jbe
inc
fnsave
pop
pop
adc
and
xchg
sub
ja
jl
pop
xor
add
leave
dec
imul
fidivs
xor
loopne
add
cmp
gs
add
cmc
push
sbbl
cli
push
test
and
push
or
xor
mov
adc
sbb
sub
or
xlat
cmp
ljmp
test
insl
sub
jle
inc
leave
push
ret
mov
xchg
sbb
test
push
adc
pusha
int
sub
jl
rorb
leave
push
cmp
xor
fisubrs
mov
inc
shl
mov
xor
adc
xorb
out
cmp
inc
jnp
sarl
repz
loopne
jbe
jb
jo
adc
clc
dec
xchg
sahf
xor
add
test
pop
cmp
xchg
or
xchg
test
mov
mov
jns
pusha
in
mov
inc
inc
xchg
sti
xchg
jge
xchg
inc
pop
sub
xchg
cwtl
pop
popf
and
mov
sbb
cmpb
int3
pop
push
mov
ja
movsl
cltd
ja
mov
add
rcll
imul
jo
push
push
cmp
and
and
add
mov
sbb
push
push
mov
push
xchg
inc
add
fbstp
gs
sub
sbb
adc
push
test
mov
or
dec
insb
movsb
mov
ljmp
push
mov
ret
dec
inc
roll
push
ljmp
jecxz
lahf
mov
inc
popl
jno
and
gs
adc
add
int
rorl
pop
pop
cmp
add
jp
inc
cmp
mov
dec
adc
xchg
mov
or
sub
lock
inc
jg
negl
dec
adc
sbb
jne
test
sti
jge
cmpsb
shlb
mov
test
aaa
fldcw
sbb
mov
xchg
insb
inc
test
push
mov
lds
je
push
mov
data16
fstp
mov
sbbb
cmp
and
lcall
jecxz
and
lsl
pushf
ja
ds
push
mov
int3
fidivrs
lahf
mov
mov
mov
dec
rorl
mov
push
push
cmp
sti
pop
add
mov
push
add
psubd
outsl
jbe
add
adc
stos
fnstenv
add
sbb
enter
popf
repnz
push
and
cmp
mov
loope
je
cmc
imul
leave
test
xor
movb
xor
notl
push
aam
push
iret
pushf
sbb
pop
movsb
cld
das
push
or
call
out
cli
jp
push
pop
xchg
mov
inc
add
push
mov
push
ret
int3
negl
mov
pop
cmp
iret
xchg
and
shlb
jbe
push
cld
mov
dec
out
sub
inc
popa
stos
aaa
jae
or
jno
bound
sti
lret
and
ja
fisubl
lock
sub
mov
push
das
cs
xlat
inc
jmp
je
rcrl
jnp
hlt
idiv
shlb
jecxz
or
mov
lds
popa
and
lock
sub
cmpsb
dec
or
mov
cmpl
movsb
lret
push
iret
lahf
and
cmp
pop
jno
xor
sbb
pop
loop
xchg
cmp
xchg
jecxz
stc
popa
xor
adc
scas
and
mov
test
mov
shl
xchg
xorl
sbb
es
mov
in
test
std
pop
cmp
mov
and
das
mov
push
mov
out
outsl
pop
out
sub
adc
enter
mov
shl
and
nop
ss
ret
cmp
sbb
ret
iret
fs
pop
dec
jge
add
orl
push
or
outsb
stos
cmp
dec
stos
xchg
jmp
out
jp
cmc
mov
pop
test
push
sub
adc
insl
mov
addr16
addl
cmp
das
test
pop
adc
sub
xor
pushf
mov
gs
hlt
test
aam
xchg
jmp
mov
sub
or
fwait
lods
jns
jo
push
add
cwtl
insl
cmpsb
adc
jle
imul
leave
jge
push
dec
mov
loopne
in
addb
sti
xor
mov
movsl
lret
cmp
push
fs
popf
mov
stc
push
jl
push
pop
and
mov
inc
push
call
dec
inc
jl
adc
xlat
mov
xchg
push
and
mov
jno
ja
aaa
insl
nop
mov
dec
loopne
sbb
cmp
pop
or
call
in
sub
stos
inc
stc
jne
leave
push
stc
repnz
mov
fisttps
dec
sub
and
sub
imul
fstps
lret
ja
jbe
push
xchg
js
cmp
sahf
mov
jne
inc
lods
stos
mov
lret
or
push
mov
in
ds
jb
cwtl
pushf
adc
xchg
xchg
pop
fisttps
out
adc
pop
fcoms
adc
sarl
mov
add
mov
xor
jmp
mov
lret
rolb
enter
lcall
inc
lcall
lea
mov
or
push
outsl
adc
rorl
dec
outsl
push
dec
sub
loope
xor
mov
pop
fmuls
dec
in
mov
or
xlat
outsl
xchg
movsl
pop
jb
int
pop
cli
std
mov
sub
icebp
fstl
test
test
add
inc
gs
xchg
sbb
xor
fsts
mov
arpl
jp
jnp
xchg
or
push
cld
mov
jg
sbb
fildll
incb
in
sub
stos
mov
cltd
aam
jne
ror
push
xchg
das
jbe
fadds
push
sub
push
inc
into
or
push
ljmp
cmp
jmp
sub
pop
adc
push
sbb
stos
sbb
mov
stc
inc
int3
jns
dec
mov
jne
xor
push
and
push
pop
fnsave
inc
dec
cmp
ftst
repnz
push
test
bound
add
mov
lret
insb
inc
mov
imul
roll
shl
test
cli
add
int3
lods
cld
ficomps
int
push
test
mov
adc
dec
addr16
inc
push
and
inc
stos
leave
in
mov
stc
push
and
iret
hlt
inc
sub
ret
jp
dec
sub
push
xchg
or
jmp
inc
mov
lock
inc
and
loopne
aas
dec
xchg
push
lods
repz
pop
add
pop
enter
and
les
test
test
shrl
push
iret
push
popf
push
loop
sbb
mov
sub
pop
fisubs
inc
jae
mov
push
xor
push
aad
std
cmpxchg
stc
dec
xchg
or
add
andb
mov
popa
imul
mov
cli
sbb
loopne
out
movsb
mov
mov
jge
in
sti
lock
sbb
loopne
push
jg,pn
imull
sbb
icebp
and
arpl
imul
out
mov
mov
jne
loopne
lds
xor
jo
in
in
pop
push
decb
imul
inc
sub
rol
or
popf
mov
scas
pop
aad
or
or
xor
test
icebp
shlb
jbe
lcall
sbb
lahf
lds
inc
and
scas
xor
out
cmp
scas
xchg
movsl
dec
or
test
add
scas
pop
scas
and
cmc
adc
cmpsb
lahf
insb
std
stc
jl
sbb
call
leave
ficoms
adc
mov
dec
adcb
sub
sub
push
mov
outsl
adc
sbb
sbb
outsb
ljmp
stos
pop
jne
mov
xor
mov
fistl
mov
cmp
mov
cli
loop
jo
mov
mov
lcall
or
mov
stos
daa
sbb
inc
scas
sarl
sbb
out
ret
movsl
jb
stos
lods
ret
pop
mov
fs
mov
or
or
leave
iret
aas
mov
or
test
call
add
out
cmp
mov
xor
leave
sbb
or
cmp
inc
scas
mov
xchg
std
into
ljmp
adc
xchg
dec
mov
cwtl
fs
sub
lods
mov
adc
std
jp
iret
test
cmp
sbb
jnp
sub
jnp
add
push
repnz
sub
ss
inc
push
bswap
shr
in
cmp
add
mov
pop
push
fiaddl
inc
lea
and
or
cld
xor
loop
adcl
decb
lret
aas
pop
cwtl
cmc
fsts
jno
or
fcoms
jns
jns
je
out
imulb
in
in
iret
pop
xor
les
adc
fwait
push
or
cmpsl
fdivrs
and
dec
adc
int
add
cwtl
adc
lock
and
mov
cmp
xlat
cli
mov
in
cmc
sahf
repz
add
fisubl
fisubrl
adc
push
dec
or
out
int3
cmp
mov
xorb
push
addb
mul
mov
adcb
mov
bound
loopne
mov
add
fld
jae
pop
cld
pop
addr16
out
dec
arpl
mov
outsb
incb
and
bound
movsl
push
add
adc
xchg
mov
mov
mov
out
pop
add
inc
push
pop
lds
test
xchg
jnp
push
lds
mov
lods
jb
fstl
sbb
dec
push
inc
leave
aas
mov
loope
daa
in
jne
inc
les
das
lret
fsubrs
mov
xor
cmp
andb
popa
das
xor
pop
popf
test
and
lds
lahf
add
and
jb
mov
and
pop
push
icebp
sbb
pop
inc
scas
push
xor
pusha
lret
shr
xor
push
fiaddl
or
ret
sub
call
insl
sbb
loope
out
xchg
insl
or
loop
sbb
fisttpll
pop
mov
ror
add
inc
adc
add
pop
lds
pop
push
dec
sub
fstps
pop
xor
push
rcl
add
xor
push
stos
sbb
xor
sub
test
ss
out
dec
mov
push
inc
lea
das
pop
jb
lods
sarb
push
orps
push
xor
aas
inc
popf
out
pushw
movsl
daa
cmp
ljmp
rol
jb
loopne
lods
xchg
sbb
cmp
jb
movsb
fs
aad
test
movsl
lods
fs
sub
dec
adc
jmp
push
sarb
dec
and
sete
test
fidivrs
je
fldl
adc
aaa
or
leave
dec
inc
lock
and
push
out
jns
sbb
cld
cmc
inc
push
mov
push
cmp
and
jnp
aas
jns
push
and
test
mov
ds
inc
inc
sti
add
pop
pop
mov
sub
ljmp
jl
and
xchg
sbb
popa
ret
pop
loope
xchg
cmp
ljmp
movsl
mov
ss
jg
nop
cld
out
adc
sti
sarb
jg
arpl
popa
jnp
jcxz
lods
data16
xchg
data16
rolb
mov
add
cmp
inc
out
addr16
aaa
icebp
jae
ror
pop
fnsave
mov
fcoms
aam
loop
call
out
shrl
pop
aas
dec
js
test
sbb
cmp
je
mull
inc
cmp
in
iret
sub
das
pop
shrl
lods
aad
out
cmpsl
and
lock
mov
mov
subb
xchg
mov
pop
repz
and
std
mov
pushf
mov
lods
lods
bound
mov
ljmp
fisttpl
lret
cmpsl
push
pusha
lcall
aas
movsl
loopne
das
cld
mov
addr16
ljmp
mov
mov
push
push
adc
inc
shrl
dec
popf
cmp
cmp
add
jae
and
fimull
mov
cmp
in
sbb
xor
cmpsl
sbb
jnp
repnz
out
dec
adc
loop
lea
mov
sbb
pop
push
sbb
bound
gs
js
xor
in
cwtl
sbb
adc
mov
scas
mov
lds
lock
imul
int3
aaa
or
add
out
jne
dec
scas
lock
cmpsb
shll
mov
test
cwtl
sbb
lds
jb
or
mov
out
popa
mov
and
ljmp
push
vpsraw
loope
mov
adc
mov
xor
pop
ret
jae
nop
lret
mov
sti
xorb
pop
rorl
sarb
negl
lret
loopne
and
mov
pop
add
and
outsl
mov
sub
fistpl
stos
fs
and
xor
xchg
in
pop
stos
or
push
out
outsb
mov
push
inc
jecxz
xorl
cmpl
jne
fwait
xchg
rcrl
jbe
push
ljmp
or
rclb
out
xor
fiaddl
mov
fcomps
lahf
xor
xchg
repz
mov
or
mov
inc
int3
inc
in
mov
lcall
rolb
or
out
xor
or
loope
dec
jl
push
mov
dec
pop
das
adc
and
adcl
jl
stos
shrl
shrb
pop
mov
pop
imul
adc
push
xor
mov
ret
int3
test
adc
fldt
mov
jno
mov
sub
inc
dec
sub
or
leave
in
mov
dec
jns
ret
pop
imul
pop
mov
popf
xor
out
push
sarb
pop
pop
jle
cmp
pushf
inc
push
and
sub
les
test
leave
inc
push
jecxz
jno
stos
out
daa
dec
stos
in
xchg
jb
and
adc
call
icebp
jbe
jne
mov
or
cmp
es
lock
cmp
xchg
rcll
mov
lds
sbb
leave
push
pop
fwait
mov
in
imul
jo
cld
insl
int3
test
xor
not
loop
cmp
daa
inc
xor
js
jle
cs
pop
adc
and
adc
pop
je
jno
or
test
mov
mov
cmp
push
adcl
jmp
lock
and
shlb
mov
fldcw
mov
fs
pop
push
mov
repz
sub
add
and
das
jno
cmp
shlb
xor
sub
fs
mov
bnd
stos
xor
mov
adc
movsb
mov
shrb
sub
in
stos
inc
loope
jp
adc
loopne
jno
imul
mov
cmp
cmp
jmp
loopne
adc
xor
out
push
imul
mov
ja
push
out
bound
movsl
gs
ret
fcmove
push
lret
dec
push
ret
cli
daa
mov
cmp
push
enter
mov
and
notb
add
in
xlat
push
sar
imull
repz
push
in
loop
mov
int
daa
push
pushf
int
push
xchg
loopne
inc
xor
push
xor
pop
int
or
stos
and
int3
or
xor
cwtl
xor
xor
cltd
test
sbb
mov
mull
rolb
jecxz
fsts
into
jns
xchg
inc
or
loop
jge
shll
push
xor
ror
shll
test
mov
cmp
ja
or
ds
aam
js
pop
sub
mov
lahf
add
cmp
push
sbb
inc
shll
cmpsl
jle
fisttps
cs
fwait
outsl
xchg
add
sbb
adc
xchg
popl
sub
lods
or
cltd
mov
and
mov
je
cld
or
inc
adc
jg
inc
lcall
call
popa
jecxz
fmulp
pop
mov
xchg
aaa
fucom
xchg
sbb
mov
dec
rorb
mov
sarb
stos
push
inc
out
dec
cmc
clc
or
imul
enter
fstps
mov
gs
push
adc
nop
std
aad
sub
xor
push
push
sbb
mov
cmp
fprem
sbb
lahf
sbb
iret
xchg
push
mov
cwtl
ds
push
shlb
inc
scas
mull
xchg
mov
mov
fwait
xchg
popf
and
cmp
stos
push
aas
fs
pop
rep
xchg
sti
aas
inc
dec
adc
iret
dec
pop
icebp
test
jmp
mov
loopne
push
imul
jae
out
sub
outsl
push
xchg
lcall
jle
andb
gs
inc
js
adc
outsb
cmp
popf
add
mov
cltd
ljmp
mov
xchg
push
call
ja
jecxz
insl
ffreep
iret
xlat
cs
div
ss
mov
mov
sub
in
dec
cmpsb
pop
leave
push
and
mov
jecxz
les
aad
int3
or
gs
hlt
nop
js
sahf
jae
inc
pop
sub
jle
xor
cmpsb
scas
out
pusha
pop
inc
mov
cmpsl
es
test
arpl
cmpsl
enter
sub
and
mov
test
loopne
insl
jge
inc
leave
push
and
and
loopne
loop
test
addr16
repnz
inc
push
add
xor
imul
inc
popf
xor
add
mov
imul
pop
lods
xor
push
jno
aas
lret
dec
mov
push
aad
jecxz
ret
rol
and
insb
mov
jge
mov
jae
mov
push
jge
addr16
mov
and
shlb
lea
test
mov
test
sub
adc
inc
cld
adc
icebp
jmp
fidivl
fs
sub
cmc
pop
pop
nop
xlat
sub
mov
xor
xor
bound
mov
fwait
arpl
xchg
jno
in
pop
mov
pusha
int
push
orl
push
cmp
mov
add
mov
std
or
dec
mov
out
sete
mov
dec
mov
cmp
xor
int3
sbb
insb
lea
lret
loop
rolb
loop
cmc
mov
movsb
clc
or
dec
dec
lods
push
push
push
ss
push
mov
mov
fldenv
jl
fsts
inc
shrb
sbb
dec
xchg
imul
mov
pop
mov
scas
jecxz
mov
rcl
mov
sbb
push
lret
pop
test
xchg
xchg
inc
movb
mov
mov
les
outsb
and
test
push
aam
out
arpl
sub
sarl
leave
inc
jnp
sub
cmp
sub
idivb
pop
aam
push
adc
cld
dec
mov
dec
and
sub
pop
mov
mov
sbb
adc
inc
mov
mov
dec
hlt
xor
shll
rcll
mov
mov
je
clc
dec
lock
mov
es
imul
or
dec
stc
test
sti
scas
pop
mov
cli
arpl
daa
mov
cmp
sbb
int
jno
jecxz
adc
rclb
jb
add
sub
sti
nop
mov
in
ret
mov
xor
jo
and
xchg
mov
pop
jge
sub
inc
and
push
and
push
push
add
or
imul
adc
or
mov
aas
pop
mov
std
pop
sbb
loop
fsubr
pop
clc
push
sub
pop
out
jmp
sub
mov
mov
loopne
sub
je
pop
sbb
or
sub
cld
cmp
test
in
test
sahf
test
and
out
sub
cmp
jne
mov
inc
mov
add
andl
aaa
cs
or
cwtl
pop
notb
adc
call
xchg
lds
cmc
cmp
adc
les
adc
jle
push
push
fdivrp
std
cwtl
sti
cmpb
mov
xorb
loope,pt
scas
dec
mov
ja
ss
push
outsb
mov
adc
movsb
ljmp
mov
lgs
and
inc
movsb
or
movsb
jl
inc
and
mov
lahf
pop
jns
and
inc
std
mov
insl
push
pop
rcrl
subb
popf
testl
or
outsb
rcrb
cmp
sub
or
xor
cmp
popa
mov
add
add
sbb
andb
jmp
mov
push
jl
shlw
dec
jnp
lods
xchg
mov
fcmovu
cli
sbb
scas
mov
mov
subl
cmc
repz
sbb
xchg
fldt
push
push
sbb
js
cmp
dec
aas
movzbl
dec
hlt
cmp
ds
stos
js
mov
jo
add
adc
push
adc
movsb
ret
sub
jle
add
ja
mov
dec
sub
pop
jp
fs
sahf
hlt
xchg
stc
popa
sub
jmp
inc
fcomps
int
orb
dec
rorb
cmp
and
repnz
and
insb
sarb
push
nop
cmp
add
scas
sbb
decl
pop
cwtl
jnp
stos
loopne
movsb
subb
rorl
lods
stc
loope
imulb
repz
insl
xlat
ffreep
adc
lods
lods
inc
pop
popf
or
xor
mov
mov
roll
fs
repnz
jne
add
cli
fnsave
lods
adc
movsl
jl
in
push
and
pop
dec
mov
mov
or
aam
mov
ss
sub
and
mov
loopne
cwtl
jmp
or
add
jmp
adc
xchg
mov
push
mov
repnz
sub
insb
loop
lods
rolb
sbb
lock
pop
cmp
xchg
data16
clc
push
lock
ss
pop
jne
daa
push
repnz
cmp
inc
testb
mov
xchg
inc
adc
add
mov
arpl
addr16
aam
sub
clc
in
mov
outsb
dec
in
mov
lock
int
inc
mov
test
es
cs
mov
mov
gs
dec
out
jp
scas
xchg
arpl
push
sub
insl
xor
cmp
inc
sub
out
in
jae
shl
mov
fmull
mov
out
js
xchg
add
and
repnz
fisubrs
test
mov
and
xchg
push
add
sahf
cmpsb
int
sti
ret
lds
pcmpeqd
orb
filds
mov
repz
inc
jge
jns
ljmp
sti
mov
sbb
xor
jg
je
lea
cmp
mov
scas
pop
lcall
dec
xor
sbb
nop
clc
push
add
jge
mov
pop
int3
jbe
ror
jg
iret
adc
and
popf
insl
es
jo
fcoml
lahf
test
adc
iret
movsl
sbb
xchg
icebp
add
cmp
sbbb
scas
incl
jo
pop
jno
push
pop
push
movsb
daa
cmpsl
nop
js
mov
andl
iret
loopne
mov
inc
decl
xchg
pop
sub
or
pusha
out
cmp
ss
aam
mov
pop
add
lret
sahf
dec
adc
and
int
push
arpl
sar
ret
adc
mov
cmp
insl
lock
scas
dec
jp
xlat
pop
dec
dec
shlb
mov
ret
call
add
decb
lcall
shll
loop
jnp
insl
pop
out
sub
adc
je
roll
mov
cmp
stos
pusha
call
inc
inc
inc
push
lret
or
sbb
push
mov
push
aad
push
ja
pop
scas
in
movsb
pop
xchg
hlt
jb
pop
mov
xchg
push
ret
pop
fiadds
negl
inc
cltd
sbb
aad
int
arpl
xchg
stos
in
rclb
inc
sub
sub
rol
jns
test
gs
mov
stos
push
pop
cs
jle
jecxz
ljmp
je
sub
or
test
jo
mov
outsb
push
shrb
mov
sbbl
mov
xchg
lea
or
mov
xchg
imulb
into
jmp
dec
mov
movsb
ljmp
mov
mov
cltd
cmpsb
mov
test
ret
sub
mov
mov
cmp
pop
js
mov
lock
shrb
mov
lcall
jmp
cmp
add
and
mov
lcall
scas
mov
shrl
jns,pt
add
rcrl
adc
arpl
daa
mov
sub
xlat
insl
cmp
cli
mov
pop
mov
fidivs
int
inc
lock
mov
sbb
jmp
jg
inc
iret
lods
or
push
shr
jno
mov
rcll
sub
mov
push
adc
sub
pop
jg
cli
lods
add
jle
mov
sti
pop
pop
xchg
mov
adc
arpl
xor
add
sbb
mov
xchg
and
pop
push
dec
es
ficomps
shll
push
mov
push
cmpsb
push
test
and
push
icebp
and
in
daa
sbb
out
sub
aas
dec
cmpsl
mov
jmp
addr16
mov
popa
cmp
inc
stc
pop
mov
dec
ficoms
pop
and
sbb
jo
mov
jno
mov
push
sbb
loop
std
cmp
xchg
imulb
sub
stos
mov
mov
xchg
sbb
or
jp
mov
arpl
or
and
cwtl
sbbb
arpl
in
adc
inc
pop
adc
leave
adc
or
pop
scas
lret
ja
jmp
add
test
xchg
ret
dec
and
cli
dec
adc
dec
jmp
adc
or
pop
int
stos
nop
in
inc
lcall
sub
out
push
loopne
mov
popf
mov
pop
adc
mov
mov
repz
jbe
popf
imul
sbb
lret
pop
loopne
repz
sti
stc
mov
or
push
mov
fstpl
js
add
leave
insb
xchg
push
dec
lods
icebp
mov
sub
and
push
faddp
fdivrl
mov
xchg
push
sub
hlt
add
dec
fbstp
loope
mov
jmp
scas
mov
or
mov
or
sub
xchg
ja
dec
or
xor
dec
lret
xchg
stos
mov
push
mov
lcall
sahf
mov
nop
sub
mov
adc
pop
cmp
or
in
sahf
lret
lods
lcall
and
jb
jecxz
pop
ljmp
adc
mov
rclb
scas
stos
out
cmpsl
pop
jle
bound
sub
cmp
mov
mov
jp
inc
and
jns
outsl
insb
cld
pop
inc
mov
in
scas
test
daa
lods
xchg
dec
dec
test
in
pop
int3
es
iret
inc
dec
ret
cmp
push
mov
xchg
mov
or
push
add
stos
fsubrp
xchg
add
fildll
fistpl
xchg
in
jl
lret
push
in
test
mov
cld
repz
and
sub
aas
lods
xor
inc
dec
in
lds
mov
lcall
icebp
jns
sbb
mov
xchg
sbb
movsb
ret
jns
daa
jae
push
cmp
pushf
xor
cli
add
cmp
mov
aas
add
dec
pushf
xchg
xchg
pop
add
or
push
rcr
mov
sti
inc
movsb
mov
mov
call
sub
inc
adc
jae
sbb
mov
xchg
and
push
fldt
jl
ret
iret
js
jnp
sub
hlt
xlat
sar
xchg
cmp
cld
add
inc
adc
mov
and
add
add
and
push
adc
mov
push
jecxz
pop
dec
dec
je
mov
jno
rclb
lds
cld
movsb
cwtl
loope
or
push
call
mov
pop
and
adc
mov
fisttpl
sbb
mov
ret
mov
and
mov
gs
jae
adc
scas
dec
imul
mov
and
cli
pop
lcall
movl
dec
in
dec
test
inc
mov
movsl
and
pop
aad
or
inc
inc
cld
aaa
out
add
push
cmp
movsl
dec
dec
testl
pop
xchg
add
lds
and
mov
mov
mov
rorl
sub
lcall
aaa
in
dec
push
insb
cld
in
pop
cltd
mov
mov
in
movsl
and
and
sbb
mov
testb
test
push
ficoml
pushf
add
dec
push
arpl
and
adc
stos
cs
pop
jge
mov
lahf
pop
push
mov
or
repz
jno
jmp
pop
out
pop
or
cmp
cs
jae
xchg
shlb
daa
ds
sub
repnz
pop
pushf
mov
adc
and
or
arpl
cmpsl
insb
adcl
out
sub
scas
inc
mov
ds
adc
cmp
ljmp
outsb
fsubrs
or
jo
shl
test
cmc
inc
call
test
in
jbe
add
mov
jg
stc
lret
cs
loopne
xlat
cmp
cmp
out
stos
insb
mov
inc
aas
pop
push
scas
xchg
push
and
push
push
fs
in
mov
mov
pop
and
popl
mov
cwtl
push
inc
int
les
push
jp
inc
jae
and
sbb
sbb
int
sti
stos
xchg
ds
adc
icebp
lock
lret
orb
adc
mov
sub
jle
stos
jae
aaa
xchg
int3
stos
cmp
aad
xor
sarb
xchg
ljmp
mov
fsubrs
push
mov
jg
rcll
inc
push
or
pusha
add
fsubrl
gs
dec
sub
out
call
pop
das
rorl
or
imul
lret
jecxz
mov
cld
jo
sarl
out
aas
subl
pop
and
inc
pop
inc
push
stos
add
pop
adc
fldcw
dec
ret
and
push
add
sbb
stc
lcall
jg
xchg
lcall
xchg
or
insb
and
imul
add
cmp
mov
rcll
sti
hlt
imul
loope
scas
lcall
and
mov
jle
outsb
aaa
data16
adc
mov
pop
xchg
cmc
lea
shl
out
mov
cmpsl
mov
push
mov
mov
sub
ds
add
lods
cmpsb
popf
mov
sysenter
lea
mov
sbb
jge
cmp
subl
lahf
push
sub
cli
push
xor
pop
mov
add
push
cli
leave
dec
fmuls
jno
cmp
xor
addr16
test
in
in
into
adc
out
mov
push
pop
in
and
loope
insb
xor
arpl
pushf
movsb
inc
add
pop
or
or
lret
push
xlat
loop
rclb
sarl
sub
sub
adc
insl
jp
or
and
arpl
jbe
jb
xor
add
int
scas
mov
add
dec
test
mov
pop
xchg
mov
scas
data16
call
leave
shll
dec
sub
in
bound
test
dec
popa
xchg
lret
sub
push
add
add
sbbb
mov
sbb
popa
xor
movl
add
adc
ficomps
push
mov
xor
xadd
jecxz
jecxz
mov
dec
sbb
aas
ret
mov
jno
bound
cwtl
jo
into
inc
jle
sub
dec
mov
rcll
aas
xchg
mov
add
xor
mov
in
mov
into
js
stos
and
out
cwtl
rcr
mov
sbb
mov
or
jo
stos
push
call
stos
loope
int
sarl
sti
adc
nop
fs
dec
fwait
out
adc
adc
sub
std
hlt
push
sbb
out
incl
push
cs
push
push
dec
mulps
push
adc
lret
sbb
lcall
sbb
mov
add
decl
jae
push
pop
shll
data16
xchg
push
pop
adc
adc
sti
mov
and
loope
push
mov
dec
jmp
inc
adc
dec
adc
cmp
bound
sti
mov
push
fstpl
dec
enter
sub
insb
sahf
aas
pop
mov
mov
jbe
pop
scas
xlat
pushf
jno
pop
clc
mov
loop
lret
jmp
int
mov
xor
pop
xchg
mov
pop
lods
jg
xchg
shr
nop
pop
push
or
push
push
ret
lret
adc
js
rcr
movsl
pushf
gs
and
leave
pop
or
std
aas
sub
decl
clc
popf
je
sbbb
fs
sub
je
cltd
push
ds
hlt
rcrl
sbb
cmp
adc
cld
lea
pop
idivb
scas
pop
xchg
cwtl
enter
sub
scas
mov
xor
das
in
lahf
ret
cmp
pop
out
ds
xor
inc
mov
push
jae
je
inc
add
and
lret
or
aad
pop
mov
dec
mov
cmpsl
es
jb
testl
jmp
sbb
je
or
jle
mov
les
nop
mov
fiadds
sbbl
xchg
mov
sub
fwait
xchg
nop
loopne
sub
jbe
cmpsl
push
cmp
dec
and
dec
inc
test
jns
bound
sbb
out
clc
add
pushf
lods
imul
test
aam
or
incb
in
push
fidivrl
movsb
xchg
or
loop
mov
and
testb
lahf
cwtl
hlt
in
in
or
sahf
aas
and
outsb
sahf
inc
repnz
call
dec
dec
mov
xchg
cmpl
cmp
dec
ss
bound
rolb
and
and
sub
xchg
sbb
cmp
popf
icebp
in
pushf
jle
inc
dec
les
ret
arpl
inc
ret
sbb
add
loop
lods
mov
shr
xorb
and
push
rcr
pop
push
jbe
ror
aaa
cld
adc
dec
arpl
xor
mov
sarl
adc
pop
call
add
lods
dec
cld
jo
xchg
dec
inc
pop
mov
aam
cmp
cmp
pop
movsl
sbb
sub
repz
mov
iret
addr16
aam
sbb
sti
in
mov
lods
in
sub
pop
lods
outsb
cltd
popf
mov
lret
cld
mov
imul
fs
jne
pop
out
push
add
pop
push
xchg
mov
jns
jbe
pop
fcomps
xchg
shl
nop
loope
in
xor
out
jns
lock
cmpsl
mov
out
mov
dec
popf
movsl
mov
fistps
pop
mov
popa
and
adc
pop
mov
loopne
adc
clc
jne
jne
repz
popf
sbb
sub
sbb
das
enter
jp
adcb
cmp
xor
fmul
fnsave
push
mov
lock
js
jmp
push
sbb
pop
scas
out
pop
scas
shll
xchg
into
rcr
adc
mov
repz
imul
pop
imul
in
jp
xchg
mov
inc
sub
fdivrs
sbb
cmp
xor
mov
std
stc
mov
jbe
dec
add
loop
sbb
repnz
xchg
xor
insb
xchg
xor
jbe
inc
aas
push
das
icebp
fadd
adc
jno
add
loope
insl
andb
test
xchg
repz
out
test
fmul
mov
xchg
in
mov
movl
sbb
lcall
adc
aas
clc
cld
mov
scas
jb
add
rcll
lea
dec
jle
inc
mov
scas
push
mov
xor
xor
into
xlat
sbb
hlt
fsubr
mov
jle
mov
and
cmp
cli
orl
add
pop
mov
jns
popl
rol
push
push
xchg
xchg
ljmp
mov
adc
jnp
enter
icebp
pop
imul
xchg
in
sbb
bound
int3
mov
popf
mov
sarl
mov
mov
jae
lret
sbb
or
out
aad
mov
stc
xchg
inc
xor
adc
adc
pop
mov
lret
fidivs
pop
ljmp
int
roll
int
sbb
dec
sub
movsb
adc
mov
pop
sbb
das
inc
aam
sbb
xchg
jae
mov
ss
push
aam
push
adc
sbb
sahf
adc
aaa
aas
dec
pop
mov
push
inc
ret
out
sbb
and
hlt
push
xor
jl
outsb
cmp
xor
cld
or
cs
ss
imul
dec
rcll
dec
jg
jo
mov
pop
cli
out
bound
jb
lods
pop
lret
jne
sub
gs
lahf
out
dec
cltd
aad
sbb
std
mov
aaa
mov
pushf
idiv
adc
pop
int3
fucomp
add
call
cmc
lods
int
mov
and
or
push
push
pop
or
push
mov
das
push
mov
fnstcw
loope
clc
adc
lret
xchg
icebp
shrl
call
adc
insl
imulb
add
ror
mov
xchg
adc
inc
cmp
enter
mov
insb
inc
insb
push
mov
mov
push
lods
fmuls
enter
sbb
shrb
mov
xchg
movsb
dec
bound
imul
mov
xor
cs
pop
inc
insl
inc
lahf
je
negb
andl
cmp
inc
xor
hlt
push
or
sbb
sub
xor
add
shll
in
ds
jmp
adc
ja
adc
iret
dec
mov
xchg
and
int
lods
pop
pop
adc
sbb
shrd
jmp
xchg
fs
arpl
xchg
sub
pop
sahf
jno
push
jg
addr16
cld
negb
fsubrl
inc
fimuls
daa
xchg
jno
push
jb
fwait
push
xacquire
lret
in
aas
dec
bound
adc
jo
pop
mov
push
repz
adc
push
add
lds
into
fiaddl
cmp
mov
idivl
cld
pop
pop
xor
mov
add
sbb
insl
fwait
mov
push
sbb
cli
lea
scas
loopne
lock
aad
bound
and
clc
jge
addl
lcall
xchg
xchg
inc
pop
mov
sbb
movsb
push
mov
ja
cmpb
int3
pop
sbb
lods
out
call
adc
push
ret
lods
sbb
ret
pop
jb
lds
bound
leave
ds
cli
ss
jle
and
cmp
dec
out
iret
sub
adc
outsb
js
add
les
sbb
push
xchg
pushf
je
cmp
push
test
inc
xor
out
jle
sub
xor
cmp
jns
in
adcb
add
mov
cmp
or
adc
cmpsl
mov
mov
mov
repz
inc
jle
dec
ss
pop
inc
fs
push
mov
sub
iret
sub
xor
sub
pop
push
mov
inc
stc
and
dec
mov
int3
push
mov
jg
mov
int3
shlb
cmp
or
cmp
popf
sub
mov
dec
jb
call
mov
push
popa
cld
std
lock
insb
sbb
and
bound
sbb
jge
mov
mov
ret
repnz
enter
hlt
cld
mov
xor
lea
sub
add
sub
add
int3
pop
aam
xchg
mov
and
and
mov
aad
mov
and
cs
scas
std
lahf
jnp
shrb
jecxz
sub
leave
push
cmp
pop
sbb
lods
xchg
lock
xor
fs
or
scas
jno
jne
out
shrb
stc
dec
int
ret
add
scas
daa
add
nop
sbb
outsl
xor
rorl
cmp
div
gs
ljmp
ds
pop
mov
pop
mov
mov
xchg
inc
pop
scas
xchg
xor
fisttpll
push
jl
push
sub
lods
mov
mov
shr
ficomps
in
mov
and
pop
add
adc
inc
sub
push
lock
or
mov
cld
incb
decb
fwait
inc
movsb
stos
int3
jmp
adc
adc
insb
inc
popf
into
pop
or
xchg
inc
push
xchg
imul
mov
jne
cmc
das
dec
jne
js
loop
push
dec
ljmp
mov
ja
sahf
arpl
jp
push
stc
and
gs
adc
add
mov
enter
sub
sbb
loopne
push
xchg
fsts
mov
aaa
add
insl
lret
divl
inc
aaa
punpckhbw
mov
stc
lock
inc
xlat
subb
clc
sub
xor
ja
pop
or
lret
xchg
out
sti
notl
fstpl
movsl
mov
fsubrs
mov
push
cli
nop
mov
movsb
std
and
popa
scas
push
ja
outsb
jl
in
movsl
jbe
std
and
ja
fisubrs
adc
mov
add
push
mov
or
xchg
ficoms
sbb
in
insl
out
imul
fs
fcmovbe
mov
dec
adc
jecxz
ja
ja
jnp
mov
adc
inc
dec
std
or
fptan
loope
xchg
push
aad
add
adc
ds
sbb
add
incl
das
test
add
jbe
fldz
jp
pop
shlb
mov
xchg
int
dec
ja
mov
std
xchg
mov
int3
dec
jge
xchg
icebp
push
mov
ja
loope
movsb
xchg
jnp
sarl
lods
test
pop
push
lret
loopne
andb
pop
cmpb
inc
insb
fiaddl
gs
imul
mov
mov
sub
mov
or
out
push
fdivr
das
mov
aaa
add
cmp
pusha
lcall
ror
and
je
mov
rcl
rcr
dec
test
cmpl
inc
fwait
mov
adc
fdivr
xchg
or
mov
add
repz
scas
cmp
test
mov
test
mov
je
in
mov
push
xchg
pop
adc
bound
scas
sub
int
adc
aas
stos
loop
shl
sbbb
pop
xchg
or
xchg
sahf
or
es
sub
add
sarl
insb
paddusb
or
daa
dec
gs
mov
xor
sub
adc
mov
lock
outsl
xor
inc
fcmovnu
mov
das
sahf
fsubrl
fdivl
popf
inc
scas
cmp
loopne
dec
movsb
ljmp
inc
scas
repz
xor
dec
or
push
xchg
mov
shrl
inc
xor
stc
dec
pop
or
mov
out
fcoml
mov
sub
mov
in
jmp
ja
in
mov
stc
mov
mov
pop
pushf
xor
outsb
imul
cld
fcompl
sahf
dec
cld
mov
xchg
dec
stc
inc
sub
ja
aaa
xor
movsb
inc
lods
mov
xchg
cmpsl
or
jge
aam
mov
sub
xchg
adc
add
xor
push
xor
add
jne
or
bound
js
lods
test
cmp
lea
les
adc
in
xor
das
push
dec
imul
or
xchg
mov
mov
push
adc
jae
repz
cmp
mov
test
clc
faddl
cmpsl
cmpsl
loopne
lods
and
test
pop
outsl
and
fidivrl
push
mov
adc
mov
push
pop
insl
dec
lods
xchg
mov
out
pop
xchg
cmp
mov
inc
push
push
test
pop
mov
jmp
les
xchg
cmpsb
pop
ljmp
adc
sbb
pop
test
bound
and
mov
jp
xchg
movsl
inc
lods
aad
movsb
rolb
xchg
pop
int
and
hlt
sbb
inc
dec
adc
mov
mov
je
lcall
rorl
pushl
push
lock
mov
inc
cmpsl
inc
sarb
add
ljmp
out
cmp
sbb
mov
mov
jmp
inc
add
out
mov
roll
mov
and
dec
jns
mov
mov
in
test
or
jo
xor
fdiv
mov
in
mov
jmp
clc
mov
push
mov
fstpl
outsb
daa
cmpsl
jno
or
leave
mov
xchg
inc
mov
in
pop
add
mov
adcl
jle,pt
push
jp
sbb
sub
cltd
ret
cli
inc
jbe
hlt
adc
push
inc
data16
jge
or
push
movsb
xlat
adc
add
pop
icebp
cmpsb
mov
hlt
sub
pop
movsb
cmc
mov
xor
mov
dec
in
push
xchg
cmc
inc
lahf
sbb
xor
ljmp
movsl
leave
ljmp
xor
out
or
daa
mov
add
outsl
add
fcmovb
sbb
sbb
or
rcr
push
push
jle
adc
mov
movsb
jp
stos
gs
bnd
jg
pusha
je
sbb
imul
xchg
mov
jmp
inc
xorb
cs
cltd
dec
push
sub
or
jo
or
loope
pop
shr
arpl
ss
mov
dec
sub
inc
cmp
shlb
in
cltd
ds
outsl
adc
xor
mov
in
cli
push
ljmp
aam
or
and
cwtl
out
sub
in
out
icebp
das
test
xchg
ds
lret
cltd
push
xor
mov
fists
cmp
cmpsb
imull
sti
inc
xchg
mov
push
mov
sbb
andl
cltd
loope
imul
or
or
inc
mov
es
push
cmp
jb
xchg
sbb
je
dec
or
icebp
popf
jl
adc
hlt
jbe
jg,pn
or
cmp
testl
sub
and
xor
lcall
incl
leave
mov
aad
lret
mov
repnz
lock
mov
call
pop
rcrl
pop
stc
pop
xchg
xchg
scas
sub
movsb
dec
xor
mov
js
pop
add
daa
ret
aaa
sub
cmpsb
imul
dec
mov
aaa
mov
idivl
xor
mov
push
shll
lods
sbb
in
insl
jecxz
loopne
rcr
call
dec
cmpb
mov
cmc
lds
mov
mov
push
ljmp
cmpsb
popa
imul
jo,pt
sbb
adc
lret
movsl
scas
je
mov
push
sub
ja
in
lahf
dec
push
sub
xor
mov
push
out
pop
pop
popf
xchg
rcll
stos
pop
arpl
jb
jne
sbb
jne
ror
popa
shrb
adc
ss
and
push
scas
iret
dec
push
lock
rorb
fwait
pop
mov
xchg
inc
sub
daa
dec
std
leave
inc
mov
gs
or
jmp
inc
addl
lahf
push
xchg
xor
inc
xchg
jge
xchg
arpl
mov
int3
push
je
push
and
cmp
cs
jo
clc
dec
sub
in
pop
sub
shrl
mov
adc
sub
xor
lret
arpl
hlt
and
dec
cmp
loopne
dec
jo
int3
and
or
inc
or
push
mov
ss
pop
shrl
gs
pop
outsl
dec
pop
cmp
pop
sahf
gs
add
add
add
stc
push
sub
pop
scas
mov
or
icebp
sarb
stc
pop
das
in
stc
ljmp
faddp
add
pop
es
add
std
mov
dec
lahf
mov
and
push
push
popa
mov
jno
popf
test
stc
push
push
stos
cli
popa
mov
popa
adc
scas
cli
and
mov
adc
inc
out
jne
fcmovne
pop
test
mov
cmp
mov
mov
jns
jno
push
cmp
data16
xchg
call
test
dec
pop
mov
lea
jp
out
cmp
push
and
pop
cli
sub
pushf
pushf
xor
xor
sbb
iret
fildl
ljmp
ret
les
sbb
cltd
xchg
pop
cwtl
jns
hlt
dec
fnstsw
sub
xlat
cmc
push
imul
fsub
lahf
mov
cmp
popf
std
mov
xchg
gs
pop
push
mov
rolb
orb
shll
dec
testb
push
mov
or
push
push
pushl
std
test
fimull
fsubrs
test
test
stos
pop
in
dec
pop
cltd
nop
in
and
mov
sub
scas
test
dec
ret
xchg
mov
idiv
lods
daa
out
jo
je
xchg
lret
and
sub
inc
arpl
fiadds
rol
cwtl
jb
pop
or
test
xor
cwtl
shl
cwtl
stos
sti
sarb
sub
jnp
cmpb
and
cmp
iret
xlat
inc
mov
rolb
shll
fwait
pop
sbb
jl
int
cmp
xor
dec
and
scas
mov
adc
in
fcoms
cmp
adc
or
lods
cmpsl
fcoms
out
xchg
cmp
jp
lods
arpl
addr16
cs
aas
add
clc
jne
mov
mov
stos
std
popf
sbbb
call
and
lcall
mov
fcomi
pop
lcall
gs
xchg
insb
jp
cli
dec
jle
mov
outsl
and
fstpl
jge
stc
rorl
popa
fistpl
loope
inc
cmpsl
jno
xchg
dec
or
mov
and
push
test
add
lds
jg
out
jne
in
int
sub
jne
sbb
jne
xlat
push
rcrl
into
out
addb
arpl
mov
repnz
cmp
jbe
jns
out
adc
ja
jbe
mov
mov
sbb
stc
ja
cld
ss
inc
xchg
xor
push
testl
test
jmp
xchg
imull
pushf
mov
inc
or
aas
imul
xor
sbb
scas
xchg
lock
and
mov
mov
push
push
popa
fnstcw
mov
clc
arpl
sbb
std
test
adc
adc
js
cmp
gs
cs
cmp
jl
mov
out
cmp
out
je
add
pop
rcrb
mov
add
cmp
dec
mov
push
outsl
fwait
les
mov
popf
mov
dec
shlb
loope
dec
push
es
call
aam
adc
ss
notl
ljmp
ja
sub
leave
add
dec
repnz
lods
push
pop
loop
pop
or
loopne
imul
mov
pop
or
rclb
lret
sbb
mov
repnz
sbb
add
shll
loop
mov
add
push
push
mov
std
sbb
cmpsl
inc
or
mov
sub
sahf
mov
outsb
push
rcrl
repz
lods
xchg
or
pop
cmc
jne
sbb
insl
fsubr
jg
push
xor
aam
lret
paddb
fmulp
fcmovu
addr16
mov
xor
rolb
mov
pusha
repz
inc
out
leave
cmp
movsb
add
shll
adc
test
addr16
pushf
adc
jbe
mov
xchg
imul
adc
sub
pop
sbb
push
pop
ss
dec
js
lea
push
add
fsubrl
mov
jg
inc
pop
push
dec
push
out
push
adc
push
xlat
sbbb
cmpsl
sub
add
jns
sub
icebp
lret
push
lods
push
mov
jmp
sbb
test
in
outsb
cmc
cmp
loopne
inc
lds
je
push
pusha
xor
jg
jecxz
xlat
mov
dec
shlb
mov
daa
lea
aaa
pop
dec
cmp
shll
cmpsb
mov
sub
fwait
ja
icebp
fwait
push
or
xor
jae
cmpsl
fstp
sahf
dec
mov
movsl
shl
push
lock
dec
aad
xor
dec
push
dec
and
sti
pop
cld
fimuls
xchg
xor
je
inc
mov
cli
or
dec
push
ss
daa
xchg
imul
hlt
cmp
lods
add
int
pop
bound
xchg
adc
pop
leave
adc
cmpb
xor
iret
aad
jmp
cmp
mov
xchg
pushf
imull
fistps
xor
mov
insl
mov
dec
ljmp
push
xor
shl
sub
mov
lret
cmp
push
add
cli
dec
xchg
cltd
cmp
sar
aam
or
mov
out
add
arpl
pop
mov
sahf
roll
pop
mov
jmp
push
jae
or
jb
rol
cld
xchg
fwait
pop
or
cmc
dec
repz
adc
ret
pop
cmp
pop
push
cmp
fistpl
jge
sub
cmp
notl
adc
es
pushf
cmp
dec
mov
xchg
and
mov
aad
push
adc
sbb
adc
and
fsub
push
lcall
fcmovne
mov
lods
pcmpgtb
and
cli
loopne
jg
out
mov
mov
mov
add
pop
mov
cmpsl
mov
xor
out
mov
andl
outsl
push
inc
inc
popa
xor
mov
jnp
mov
ret
push
fcmovnbe
das
dec
mov
inc
jecxz
mov
add
push
lock
rdtsc
xchg
mov
jle
lods
sbb
jae
lock
mov
mov
add
xor
fdivs
jge
out
inc
mov
mov
mov
sahf
movsb
dec
sti
std
pop
mov
hlt
test
pop
outsb
int3
push
push
fs
mov
adc
scas
mov
lods
negb
and
enter
xor
cmp
lock
adcl
inc
cmp
fsubrl
in
xchg
or
andb
mov
pop
or
sbb
shlb
dec
hlt
push
jle
loop
jl
js
ja
xchg
jp
mov
mov
movsl
mov
push
dec
movsb
iret
fistpl
xor
lahf
or
lea
ret
outsb
shlb
cli
sub
add
loop
aaa
pushf
popf
rcrb
mov
pop
int3
pop
pop
neg
and
sbb
data16
test
dec
jmp
and
mov
mov
or
xchg
cs
mov
lret
mov
dec
mov
mov
sbb
push
xchg
ljmp
xorb
not
xchg
lcall
ret
cmp
pop
mov
lods
xchg
sbb
dec
stc
loop
pop
or
push
loope
adc
hlt
pop
mov
pop
push
xchg
xchg
jne
stos
call
lret
lods
xorl
or
pop
enter
mov
mov
aam
mov
les
insl
and
int3
aad
jl
les
rolb
lods
push
adc
gs
jle
sub
jmp
insb
ss
xor
movsl
xchg
and
shrb
icebp
iret
inc
das
mov
sbb
das
push
enter
jp
xchg
shlb
cmp
shlb
ljmp
pop
cs
mov
scas
sbb
test
cmp
inc
ja
sub
jo
dec
xor
sti
cld
cmc
mov
es
ds
pop
das
push
cmp
andb
jne
hlt
mov
and
mov
xor
stos
push
xchg
mov
lret
push
adc
outsb
sbb
out
jge
add
sub
inc
sbb
jbe
enter
incl
jle
movsb
sbb
rcrb
jmp
adc
inc
lods
add
mov
push
cmp
mov
cmp
cmp
fistpll
mov
mov
inc
cltd
aam
xchg
mov
pop
jne
adc
into
cmp
out
fidivrs
mov
sub
xor
or
jp
jge
add
mov
repz
dec
scas
or
ljmp
push
push
sbb
mov
ret
fwait
jno
stos
dec
rclb
or
cmp
jno
and
jp
mov
mov
pop
mov
decb
enter
push
cmpsb
sbb
ss
dec
xchg
mov
jae
mov
jmp
mov
or
and
sbb
test
rorb
aam
xchg
ret
xor
inc
xchg
daa
ret
dec
pushf
je
jle
or
aas
fs
out
mov
out
inc
mov
mov
push
push
int3
repnz
sti
dec
inc
xor
cmp
xor
mov
sbb
dec
pop
stos
lods
xchg
cld
jp
pushf
or
fisubl
dec
cli
sub
in
adc
pop
jmp
mov
pop
mov
jl
lds
int3
mov
insl
jle
cltd
test
sbb
mov
jo
std
sbb
inc
mov
dec
adc
notb
xor
or
and
add
cmp
xchg
xchg
and
clc
adc
mov
push
movsb
cli
jbe
or
mov
inc
int3
insb
sbb
adc
inc
add
add
mov
and
cmp
in
pop
mov
insb
xorl
mov
enter
xlat
push
ljmp
and
lea
aas
jne
dec
pop
dec
sar
xchg
mov
pop
rorl
inc
fistl
xor
movups
mov
daa
cmpsb
data16
jmp
cmpl
movsl
adc
inc
inc
lret
lea
inc
fcmovnbe
int3
mov
icebp
xchg
test
add
jge
jo
gs
jno
dec
inc
je
mov
push
dec
mov
xor
fisubl
pushf
cmc
test
jp
data16
jp
in
jp
jbe
ret
push
cmp
repnz
ret
push
sub
rorb
stos
sti
sbb
push
pop
aaa
jno
popf
push
mov
pop
sbb
arpl
fidivl
movsb
xor
movsb
and
loope
stos
imul
inc
addr16
test
fisttpll
inc
sbb
xchg
pop
mov
xorl
je
push
dec
loop
test
mov
dec
or
dec
add
pop
addr16
sub
mov
test
lock
sti
int
or
add
rorb
inc
jns
loop
xlat
out
int3
mov
arpl
mov
xor
fsubl
add
ljmp
xlat
mov
mov
adc
ror
aas
add
mov
in
ret
sbb
sbb
jg
mov
xchg
into
adc
ret
rolb
push
cmp
mov
cmpsb
pop
loopne
out
inc
cmp
xchg
sub
mov
sarl
repz
cmp
xorb
imul
mov
xchg
call
adc
shl
lock
test
cmp
imul
loopne
in
dec
addb
in
jmp
fwait
mov
cli
scas
mov
cmp
insl
or
rcll
mov
int
dec
sub
lods
jle
dec
and
loop
popl
and
paddd
sbb
add
mov
push
bound
xchg
or
test
push
xor
fwait
push
jle
shrb
ja
lods
dec
popa
stos
push
dec
xor
pop
mov
and
add
das
add
xchg
cld
rcrb
dec
sub
push
das
stos
imulb
fsubl
inc
add
cmp
and
xchg
rcrb
aam
cs
insb
jb
inc
lods
jmp
mov
push
es
arpl
xor
cwtl
mov
mov
sbb
add
bound
gs
test
push
int
jno
xor
in
mov
push
lret
aad
insl
into
adc
inc
pop
ljmp
cld
adc
or
insb
and
std
pop
mov
outsb
into
mov
pop
das
add
jno
shr
mov
pop
sbb
xor
jecxz
stc
mov
insl
inc
outsl
jbe
daa
xor
sbb
xlat
and
mov
mov
pushf
push
adc
sbb
lcall
test
pop
stos
in
mov
mov
add
lret
jno
and
mov
or
fsubl
movsl
push
push
mov
out
lods
or
mov
daa
or
and
mov
dec
mov
xchg
rorl
mov
rol
cmc
xor
mov
lods
es
je
jns
ficompl
or
movb
xchg
adc
sbb
enter
inc
fstpl
popa
or
ror
mov
dec
mov
cld
sub
lret
mov
cltd
mov
jbe
mov
jg
ficomps
add
push
and
ret
in
and
dec
push
mov
and
pushf
jns,pt
add
sub
ret
cmpsb
notb
scas
push
aam
repz
push
lock
push
clc
loope
jp
sub
idivl
jmp
stc
pop
push
sbb
push
mov
mov
sarl
sbb
inc
pop
inc
xor
call
sahf
xor
test
inc
scas
mov
jle
fucom
psubq
mov
addr16
add
in
mov
into
int
iret
in
imul
les
in
rolb
or
or
push
imul
jg
test
aad
cs
pop
push
add
addl
xchg
inc
xor
cmpsl
add
and
xchg
dec
std
outsl
daa
pop
into
xor
fucomi
pushf
mov
cmp
push
lret
je
test
jb
outsb
sub
cli
insb
in
inc
pop
je
jp
shrl
cmpsb
cmp
arpl
mov
add
add
dec
push
and
sbb
sbb
test
cmp
popa
mov
loope
dec
movsb
ds
mov
jmp
cmp
inc
andb
xor
in
xor
mov
cmp
out
je
or
cltd
add
dec
or
jbe
popa
mov
mov
ret
mov
jl
jmp
sub
pushf
push
aas
xor
inc
cmc
and
cmp
scas
aam
test
jmp
mov
pop
push
rcrl
adcl
test
cmp
xchg
test
es
hlt
testb
pop
mov
push
sti
in
hlt
pusha
std
ret
into
sbb
loop
in
jbe
outsl
lret
lods
mov
sahf
add
bound
js
cltd
xor
push
xchg
cmp
sbb
mov
jg
dec
add
je
enter
jae
ret
inc
mov
lret
imul
popf
mov
sbbb
scas
sbb
popa
mov
xlat
or
sbb
cltd
rcrl
and
subb
jmp
or
push
das
or
push
sub
shll
mov
inc
adc
mov
mov
and
mov
xchg
push
cmp
mov
mov
jbe
xchg
outsb
and
stos
movsb
fwait
sub
int
into
xlat
outsl
call
inc
ss
push
test
test
sub
repz
fildll
pop
pop
jg
cmpsl
xchg
pushf
popa
int
and
inc
sti
stos
add
sahf
int
aaa
aaa
or
adc
loop
mov
stc
and
cld
xchg
mov
xor
ja
cmc
lret
ret
sti
shll
aas
jnp
mov
icebp
jno
insb
cmp
lahf
shll
mov
or
add
and
mov
stos
nop
pop
stc
int3
in
enter
nop
mov
jns
cmp
push
inc
mov
lea
pop
cmc
andl
pop
inc
xor
push
xorb
sub
mov
pop
adc
mov
cmp
mov
scas
into
stc
mov
shlb
xchg
std
iret
cwtl
pop
outsl
lret
sub
jb
scas
adc
call
inc
cmp
sub
fmul
scas
xchg
jge
and
xchg
xor
mov
and
dec
stos
jno
and
xor
fldcw
rorl
aam
cld
xchg
cs
push
adc
mov
jmp
int3
imul
dec
jge
adc
test
mov
inc
inc
stos
mov
cmp
or
jb
rclb
pop
lahf
lds
xor
or
mov
jns
fmuls
cmpsb
fisubl
inc
fwait
xchg
jns
pop
mov
xchg
sbb
mov
mov
xchg
add
popa
pushf
pop
mov
rcrb
mov
addr16
dec
test
push
stc
pop
ficompl
pop
insb
jbe
test
jge
dec
out
dec
mov
and
data16
dec
mov
or
in
push
dec
push
repnz
lods
pop
in
dec
stos
dec
clc
adc
and
dec
mov
mov
mov
jg
mov
hlt
fmulp
shl
push
cmp
test
mov
xor
push
lods
incl
mov
push
cmp
adc
lcall
aas
cmc
imul
add
adc
pop
mov
outsl
pushf
mov
in
stos
in
pushf
daa
jb
and
jecxz
mov
sub
cwtl
or
cmp
int3
dec
adc
int3
xlat
jmp
gs
or
imul
hlt
cmp
nop
cmp
jge
stos
imul
or
loope
cld
jmp
xor
sub
mov
xchg
fstps
insb
nop
movsb
xor
shlb
out
cmp
inc
popf
hlt
mov
leave
adc
fnstsw
push
sarl
mov
dec
out
adc
xchg
int3
add
in
cmp
pop
and
aad
ljmp
jmp
jecxz
shll
data16
sti
cmp
pop
dec
in
fs
add
clc
add
xor
mov
cmp
dec
xchg
mov
xchg
mov
pusha
bound
aaa
mov
cmp
mov
xchg
push
orb
sahf
popa
add
add
mov
in
int
bound
cltd
jno
repnz
aaa
pop
mov
mov
popa
repz
ss
cmp
mov
or
das
popa
mov
cmp
push
sub
mov
pop
imul
fimull
and
xchg
jne
push
or
mov
out
xchg
or
inc
mov
lds
push
jmp
sbb
sub
jae
pop
fcomps
movsl
adc
dec
mov
popf
cmp
push
push
jmp
xchg
repnz
mov
dec
push
dec
dec
adc
mov
sub
sbb
cmpsb
bound
subl
pop
xchg
std
sbb
test
sub
mov
inc
lahf
daa
or
addr16
or
mov
mov
sub
sahf
lods
in
clc
and
das
pop
sub
jne
mov
or
xchg
inc
bound
loopne
out
jne
fldenv
and
dec
in
mov
and
lds
movsl
fcoml
xor
das
icebp
or
pop
inc
gs
mov
addr16
fistpl
les
or
xor
setb
sub
std
jo
cltd
rorb
fcomp
jne
xor
jnp
stos
movsl
cmpsb
test
pop
mov
outsl
sbb
lcall
adc
loopne
movsl
ret
push
and
lcall
dec
notl
xchg
fnstsw
daa
sbb
daa
mov
fistl
outsl
scas
jl
mov
mov
xor
aad
push
in
xchg
sub
loope
or
xchg
jl
pop
add
mov
xchg
test
movsb
dec
fcompl
iret
inc
sbb
decb
clc
pop
push
sahf
xor
cld
mov
mov
lahf
sub
mov
cmpsl
cmpl
xor
ja
push
mov
push
lock
mov
xchg
je
je
or
mov
popa
orb
pop
and
sbb
aaa
xlat
cli
aas
mov
aaa
push
outsl
ss
sub
mov
orl
insb
pop
push
mov
test
out
sbb
lcall
lods
jecxz
inc
insb
or
repnz
fld
push
and
jecxz
sbb
dec
jns
cld
movsl
jp
pop
addr16
enter
in
xchg
lds
xchg
mov
sbb
leave
mov
or
cwtl
rcl
outsb
jle
inc
jnp
rolb
aaa
sahf
mov
sub
adc
fwait
pop
push
mov
outsb
xchg
push
push
sub
addr16
rorb
rolb
aaa
inc
aas
lds
flds
xlat
mov
popa
xchg
adc
lods
scas
mov
adc
rcll
fdivrs
and
cli
jg
mov
pusha
test
jae
adc
pusha
test
lcall
adc
pop
or
sbb
cwtl
xchg
repz
mov
enter
shl
jbe
inc
loope
mov
push
pop
fidivs
cmp
outsb
in
jl
xor
fstps
cmp
xorl
xor
add
inc
shll
ljmp
push
lret
push
jmp
ret
dec
call
out
add
pop
pop
stos
fdiv
adcl
lods
pusha
sub
jne
stc
iret
dec
outsb
lods
cmp
pop
cmp
xchg
push
mov
jle
sarb
shll
sbb
add
pop
or
inc
lret
sub
sbb
pop
jno
int
inc
adc
jo
push
pusha
enter
lcall
shlb
or
jbe
std
mov
push
mov
hlt
call
dec
sti
dec
push
adc
add
or
int3
mov
ja
and
and
lods
fsubl
lods
test
ljmp
and
dec
repnz
arpl
clc
faddp
xor
cli
fisttpll
cmp
sbb
cmp
xor
fistps
repnz
enter
pop
adc
hlt
popf
fstps
sbbb
jmp
call
inc
out
xchg
rclb
cmp
mov
int3
and
test
push
in
popf
push
dec
roll
dec
ds
cmp
mov
enter
jp
lret
popa
and
mov
add
dec
jbe
dec
push
mov
ljmp
stc
je
jb
mov
sbb
iret
ss
sub
inc
test
xor
sbb
add
sbb
sub
mov
inc
gs
fidivrl
loope
cwtl
packsswb
adc
dec
sbb
cmp
imul
and
shlb
cs
pop
sbb
cli
fsub
and
dec
push
sub
into
cwtl
loop
mov
sub
fcoms
jb
and
ds
mov
jmp
pop
stos
repnz
jne
imulb
adc
push
xchg
enter
mov
adc
loope
jg
in
outsl
hlt
ss
lea
in
xor
test
mov
pop
xchg
sbb
mov
aad
insb
sub
mov
imul
mov
dec
lods
or
or
adc
stc
aad
or
push
dec
outsb
lods
std
xor
cmp
lcall
inc
mov
or
xchg
dec
or
jmp
pop
dec
movsl
fists
push
and
adc
dec
shrl
pop
jp
cmc
xchg
sahf
mov
pop
jae
sbb
push
daa
jb
push
jns
leave
mov
or
push
in
outsb
pop
or
je
lds
pop
mov
out
scas
inc
and
cmp
lods
test
test
arpl
or
adc
and
mov
sub
insl
in
mov
subl
sub
xor
mov
lret
sbb
int3
or
push
xchg
mov
mov
call
pop
fstpl
mov
xchg
repnz
sbbl
jg
lods
popf
pop
cwtl
repz
and
xor
mov
iret
or
adc
add
testb
shll
sbbl
cmp
sub
rclb
aam
mov
addr16
xchg
icebp
lahf
pop
jge
data16
fbld
push
es
sub
mov
mov
popf
fdiv
lret
ja
in
je
jg
cmpsb
subb
adc
in
add
xchg
dec
mov
and
xchg
xchg
shrb
dec
and
cmpsl
mov
enter
out
xorb
sub
pop
js
inc
mov
addb
or
xor
test
out
test
jg
push
in
push
sub
pop
xchg
jmp
jbe
insb
ja
int3
dec
lods
and
outsb
pop
gs
outsl
std
shll
mov
adc
pmuludq
ret
adc
cmpsb
xor
inc
push
lcall
in
jmp
sbb
dec
inc
mov
sti
mov
int
and
xchg
scas
das
mov
lret
or
ficomps
sbb
inc
insb
push
or
movsb
mov
pop
outsb
cltd
jp
or
mov
sub
fdivs
xor
popa
dec
mov
xor
idivl
ljmp
shl
movsb
or
or
rcll
mov
aam
dec
jecxz
add
or
jns
negb
cmp
xor
add
insl
jbe
pop
cmp
insb
jb
sub
loop
fwait
mov
and
dec
xchg
xchg
xor
jno
inc
orb
ljmp
dec
and
repnz
outsl
sbb
in
dec
lret
iret
mov
adc
pop
ja
mov
inc
loopne
orb
cwtl
in
or
dec
adc
rclb
jge
push
jmp
das
mov
xchg
lea
mov
jle
pop
out
mov
or
sbb
pop
mov
xchg
adc
jne
loopne
mov
lods
fnsave
adc
xchg
cmp
push
outsl
xchg
sbb
test
cmp
clc
ja
cwtl
ljmp
in
fsubrl
mov
enter
fcoml
pop
jmp
shrl
or
hlt
push
lret
cwtl
sarb
idivb
pop
rcrb
jns
adc
xchg
shll
pop
in
dec
add
push
add
or
sahf
aaa
lods
aas
les
mov
push
xor
es
sbb
pusha
cmp
xchg
les
and
cwtl
pop
icebp
push
dec
lea
adc
ss
cli
mov
int3
fldl
in
pop
shll
test
ficoml
xchg
inc
int
push
shrl
addl
mov
cmpsb
mov
loope
xor
cmp
xchg
rorl
sub
dec
xor
fmull
xor
or
mov
xor
mov
mov
clc
pop
stc
jb
roll
fisttpll
xchg
das
fldt
in
pop
lea
sub
mov
and
sbb
lods
shlb
lock
shrl
pop
dec
je
xor
mov
les
mov
out
mov
es
subl
mov
iret
outsl
pop
stos
lea
push
jecxz
fsub
test
fstl
shrb
lahf
inc
add
rcll
cmp
fstpl
sub
rorl
inc
notl
sbbl
shll
xor
mov
aam
lods
mov
xchg
inc
and
mov
adc
add
sub
outsb
xor
xchg
cmp
sahf
push
ja
arpl
cltd
mov
ret
push
or
inc
test
sbb
iret
xchg
or
sahf
je
scas
sbb
mov
cmp
or
test
bound
in
add
pop
outsl
jl
dec
adc
leave
mov
mov
push
stos
adc
mov
xchg
repz
lret
mov
aam
inc
and
pop
mov
add
inc
jmp
into
mov
mov
sbb
jno
shlb
ss
hlt
cmc
scas
shlb
out
xchg
adc
push
xchg
adc
ja
std
repz
loope
and
xchg
fcmovbe
push
add
push
pop
inc
fcoms
cmp
xchg
rol
clc
xchg
adc
movsl
push
scas
or
push
bound
adc
mov
sbb
test
call
lret
lahf
mov
sub
cmpsl
push
or
out
das
lods
addl
and
and
push
iret
movaps
test
stos
fwait
or
test
sub
jbe
lret
xchg
cwtl
bnd
pop
mov
cmp
cmp
call
data16
xchg
iret
cld
aad
fdivl
ret
or
sub
fs
or
dec
adc
sub
fildll
pop
je
push
cltd
inc
add
addr16
push
in
push
aad
xor
pop
mov
data16
mov
inc
sahf
jns
mov
movsb
mov
xchg
clc
cs
adc
inc
rorl
aad
lock
dec
and
ss
lret
ss
xchg
lret
fs
push
adc
pusha
cltd
mov
out
push
shl
mov
fsubrs
out
pop
into
movsb
fldl
and
fistps
add
or
adc
lods
cmc
push
xchg
push
shr
shll
or
mov
cmp
xor
jae
les
jb
dec
repnz
out
cmpsb
repnz
jmp
lds
into
jmp
popa
adc
inc
jne
xchg
xchg
jnp
xor
fdivr
test
push
push
mov
dec
fcompl
jns
imul
mov
inc
lds
pop
ds
arpl
pop
push
and
lods
xor
cmp
xchg
xchg
sbb
xchg
xlat
adc
addb
inc
or
push
xchg
jg
bound
xchg
jg
jg
xor
icebp
gs
icebp
addb
andb
sbb
lds
test
jle
jle
sub
in
xor
rolb
fimuls
mov
loope
pop
or
stc
repz
fcomps
enter
leave
mov
scas
add
out
sub
repnz
mov
fisubrl
cmc
jae
shl
add
aad
pop
popa
xchg
std
out
loopne
clc
mov
push
ret
mov
rcl
cwtl
jle
xchg
pop
jae
xor
mov
xchg
lcall
mov
clc
imul
mov
shl
dec
inc
add
or
and
mov
enter
js
cwtl
scas
pop
out
xchg
out
dec
adc
cmp
outsl
cli
dec
cmpsl
or
mov
push
pushf
inc
mov
and
sbb
out
cld
enter
cltd
insl
push
pop
push
in
mov
dec
int3
popf
pop
sub
pop
mov
repnz
or
dec
mov
in
sbb
adc
mov
cmp
lret
add
and
popf
out
push
jle
in
popa
mov
mov
movsl
jge
stos
iret
xchg
faddl
movsb
sub
and
pushf
stc
and
cmp
and
lret
scas
xchg
sbb
push
loope
add
jne
cmp
and
and
arpl
cwtl
inc
mov
mov
jae
pusha
ficoml
mov
dec
ja
mov
jmp
sub
sub
push
dec
out
dec
mov
dec
je
mov
test
in
jle
mov
mov
jp
mov
adc
mov
adc
cmp
cli
mov
xchg
xchg
add
stos
xor
push
push
jb
xor
mov
push
jae
add
add
outsl
mov
clc
adc
dec
ljmp
pop
jg
loopne
inc
aas
sub
jle
mov
xchg
sub
inc
mov
lahf
adc
push
ss
jo
adc
rcrb
jmp
xchg
adc
inc
js
sahf
mov
loopne
movsl
ljmp
js
cmpb
cmpsl
leave
dec
inc
xchg
push
imul
test
add
fidivs
out
cld
andb
cmp
cli
pop
xchg
dec
sbb
pop
fcomi
scas
ret
shll
rorb
fnsave
jmp
inc
data16
add
dec
mov
dec
add
lret
movl
fstps
das
adc
jbe
jle
cs
cmp
jne
mov
dec
mov
scas
sarl
lds
push
jle
cmp
jo
sbb
cld
adc
or
leave
out
leave
add
dec
or
rcll
jge
bound
in
add
test
outsb
push
lea
push
lret
or
pop
outsl
sti
fstpl
xchg
mov
add
scas
mov
xchg
jecxz
fsubrs
inc
adc
in
push
adc
adc
cld
mov
lret
push
pop
push
lcall
jno
mov
cmp
push
push
es
fcompl
lock
int3
sbb
inc
xchg
jne
scas
pop
decl
sub
xchg
cmp
test
loop
jae
lret
sahf
jmp
cli
test
sub
jge
dec
jo
mov
ljmp
jbe
sar
pop
jae
pop
inc
push
push
mov
push
jmp
in
and
int
ljmp
scas
int3
fbld
or
cmp
lret
add
lock
in
inc
jl
incb
fldenv
or
out
aas
cmc
pop
mov
mov
inc
arpl
bound
in
repnz
rcr
sub
lea
iret
xchg
push
dec
xchg
in
js
jmp
mov
inc
out
push
inc
push
mov
pop
dec
adc
mov
or
mov
push
or
mov
das
adc
jbe
loop
dec
mov
hlt
fnstenv
cmpsl
pop
mov
incl
xor
xchg
cmpsl
inc
mov
push
fadds
cmp
sub
inc
fs
sub
xchg
cli
ds
jbe
addl
in
ficoms
fisttps
mov
pop
cmp
fstpl
sbb
add
xchg
xlat
pop
ret
je
mov
push
xlat
add
ret
xchg
jg
test
clc
inc
fwait
adc
fdivl
sbb
mov
lock
shl
cs
inc
xchg
aaa
cmp
mov
jae
mov
out
ja
dec
push
aaa
hlt
dec
inc
ret
and
mov
stos
imul
fwait
and
ror
mov
daa
xchg
push
ss
push
call
adc
repz
push
out
adc
pushf
lock
inc
sbb
pop
xor
mov
inc
insl
mov
sbb
movsb
add
sbb
xchg
call
lods
shlb
adc
das
fimuls
or
add
fisubrl
ret
test
push
test
sbb
push
and
enter
pop
and
jae
dec
test
mov
mov
jmp
xchg
repnz
push
jo
sub
paddsb
pop
mov
fistpll
out
ljmp
jp
popa
dec
cltd
push
insb
ss
jne
das
sub
xchg
jo
cmpsl
fcmovne
jmp
dec
jle
sbb
fisttpl
jnp
mov
inc
shr
addr16
out
adc
ds
sbb
push
jecxz
xor
ss
daa
xchg
gs
xchg
aam
insb
mov
xor
xchg
mov
add
shlb
adc
jb
stc
mov
stos
add
and
xchg
or
fists
out
push
cmp
push
dec
inc
mov
mov
inc
hlt
fcmovnbe
push
pop
sbb
jmp
mov
mov
mov
jecxz
xor
xlat
sbb
into
incb
xchg
lcall
mov
and
pop
mov
jg
cmp
pop
stc
sbb
sbb
xor
stos
adc
xchg
ja
sub
movb
xchg
stos
stos
in
mov
mov
mov
loopne
leave
mov
sarb
aaa
sti
nop
stos
add
xor
leave
xchg
push
jecxz
adc
xor
push
rcll
in
add
add
repz
ds
cmp
je
xchg
push
daa
pop
lret
aaa
mov
cmp
push
jns
pop
dec
add
add
jge
sbb
in
pusha
lahf
clc
push
loope
mov
xchg
aad
imul
fucomi
dec
ret
pop
stos
dec
inc
xchg
mov
popa
arpl
fimull
test
mov
nop
or
mov
arpl
call
inc
das
lock
jmp
into
daa
sbb
mov
bound
in
out
or
pop
fsubrl
inc
je
xchg
inc
cmp
xchg
aaa
in
and
cmp
cmpsl
cmpsl
mov
stc
imull
jns
aam
mov
mov
movsl
push
iret
jg
mov
adc
mov
sbb
and
icebp
in
shll
xchg
jns
push
dec
pop
inc
cs
sahf
inc
cmp
adc
data16
mov
sbb
push
rol
scas
add
in
push
mov
stos
push
pusha
sbb
and
jg
inc
jne
push
in
pop
out
sbb
cltd
insb
pusha
mov
adc
fcmovnu
xor
jnp
inc
sbb
mov
test
ret
push
ss
fcmovne
fsubs
or
xor
pop
std
adc
scas
push
push
jg
mov
std
adc
es
adc
mov
pusha
sub
mov
adc
push
fsubrp
or
stos
sbb
pop
sbb
xor
addr16
lock
xchg
lcall
cmpsb
or
ljmp
pop
jl
sahf
lea
stos
rcrl
pop
cli
sub
sub
outsl
add
imul
divl
jo
sti
jecxz
lahf
daa
loop
add
ljmp
mov
in
cli
bound
push
stc
or
fcoml
enter
ret
loope
cld
orl
inc
pop
add
scas
xchg
cmc
rclb
xchg
loop
clc
jb
pop
lea
and
mov
jmp
fwait
inc
pop
sub
sub
xchg
mov
or
cmp
push
push
mov
das
pusha
imul
add
dec
pop
xor
loopne
xor
lret
mov
or
lea
gs
clc
jne
push
js
jnp
and
jbe
or
std
cwtl
pop
jle
cmp
daa
out
push
clc
jno
xlat
mov
fimull
sbb
pop
adc
pop
jl
xorb
inc
and
test
jnp
mov
jne
in
mov
inc
pusha
cmpsl
mov
pop
aas
xor
add
shl
aas
mov
mov
int
cltd
dec
fwait
insl
jo
repnz
loop
sub
in
lock
subl
fidivl
and
out
dec
imul
call
outsb
cmc
lods
pushf
outsl
daa
xor
adc
call
xor
jne
push
xchg
jmp
xchg
and
mov
add
push
xor
adc
jb
inc
aas
sbb
xor
dec
push
mov
xor
push
andl
scas
in
pop
cld
iret
adc
ss
push
adc
movsl
fwait
aam
popa
mov
or
pop
mov
lret
scas
ja
icebp
fyl2x
push
sub
repnz
sub
add
cmpl
fxch
mov
rcr
jbe
ss
out
std
mov
add
and
mull
xchg
lods
loop
or
bound
sahf
push
dec
es
rcl
adc
mov
not
mov
lods
sahf
mov
clc
rorb
pop
mov
ret
lock
xor
xchg
push
fldcw
inc
or
or
pop
push
dec
leave
ret
adc
in
jb
sti
dec
call
sahf
int3
push
lcall
xor
and
dec
pop
mov
push
push
ret
inc
dec
outsb
mov
int
les
jecxz
xor
push
shr
add
lods
mov
clc
addr16
cld
mov
jno
mov
cmp
fildll
movsb
add
mov
inc
rol
test
push
xor
push
pop
in
repz
push
ja
mov
adc
loopne
pushf
push
rcrl
mov
mov
das
jb
and
pop
je
or
lret
js
push
jns
and
js
scas
add
les
xlat
in
lret
mov
mov
mov
mov
pop
push
movsl
pushf
clc
repz
cmp
pop
xchg
push
or
cmp
jle
xor
and
shll
inc
into
xchg
call
dec
repnz
in
out
fld1
mov
jae
fs
xchg
sub
pop
loopne
js
out
xchg
jg
adc
out
inc
mov
jmp
dec
fwait
push
ret
arpl
add
and
shrl
mov
mov
add
pop
subl
and
or
out
cli
cli
and
test
es
sbb
pop
sbb
int3
push
xchg
rcl
loop
testl
xchg
pop
iret
shlb
jb
push
fcom
ljmp
inc
xchg
repz
das
les
cs
xchg
and
inc
int
mov
rclb
insb
lret
pushf
cmp
ret
mov
push
aaa
imul
add
pushf
or
mov
mov
lahf
push
and
out
arpl
xchg
faddl
fisttpl
adcb
addr16
fstps
andb
dec
pop
imul
insl
aad
and
xchg
pushw
clc
insl
lea
pop
pop
or
push
xchg
bound
pop
mov
xchg
jl
xor
lea
in
mov
sbb
fldenv
dec
inc
ja
jle
adc
daa
fisubrs
std
add
pop
jb
adc
jge
adc
xchg
pop
jnp
cmpb
cmp
xor
or
psubsb
pusha
push
push
lods
lret
pop
mov
mov
pop
mov
pop
mov
jle
mov
xlat
or
ja
mov
or
or
into
arpl
add
jns
faddl
data16
test
push
in
test
mov
xor
fs
shlb
sbb
shl
mov
jno
pop
jg
fs
or
js
testb
fsubp
push
cmp
sbb
push
mov
lret
cwtl
cltd
hlt
push
test
loop
dec
push
jle
xchg
xchg
aas
mov
mov
mov
in
xchg
jmp
test
or
adc
out
aaa
cld
push
adcl
repz
xor
scas
ljmp
adc
popa
sub
mov
loope
xchg
cmp
lds
or
pushl
leave
insb
adc
or
fnstsw
and
fwait
push
mov
daa
test
xchg
mov
sti
mov
fistpll
mov
in
add
sub
cmpsb
xor
or
dec
mov
add
dec
push
fwait
or
jns
int
mov
cmc
dec
out
fs
sbb
sub
pop
enter
and
orb
mov
adc
and
push
xchg
pop
insl
jae
jmp
lods
add
out
jmp
mov
scas
imul
xchg
jecxz
xor
insb
dec
push
pop
jecxz
call
jmp
or
push
or
pop
push
pop
sub
add
not
mov
icebp
repz
pop
or
and
mov
adc
enter
mov
insl
leave
lock
mov
in
push
mov
jmp
cmpsl
push
inc
pop
push
mov
and
jecxz
lods
xor
jle
jecxz
jmp
icebp
push
jno
and
cmc
ja
je
jmp
movsb
push
push
xchg
out
adc
or
push
lcall
fwait
jbe
lret
push
das
xor
sbb
movsl
mov
dec
mull
adc
out
inc
ret
cmp
xchg
xchg
pop
xchg
lcall
and
dec
xchg
cmpsl
mov
out
dec
sti
or
jge
or
push
sti
adc
inc
icebp
movsb
pop
cwtl
mov
inc
sbb
mov
add
rclb
xchg
fdiv
fldenv
mov
cld
jecxz
in
icebp
test
insl
pop
cmp
xor
lret
xchg
cmpsl
sbb
add
mov
mov
aad
add
repnz
add
ficoms
adcb
pop
daa
iret
xchg
mov
mov
push
pusha
jbe
cmpsb
add
mov
or
cmp
ds
je
jnp
sarb
add
and
popa
jo
adc
in
cmpl
mov
psllq
xchg
sbb
add
and
add
mov
test
cmp
inc
sub
arpl
orb
inc
cmp
add
int
xchg
fsubr
in
add
and
mov
and
leave
mov
mov
mov
cltd
hlt
cmp
adcl
add
fs
test
leave
icebp
jbe
movsb
lods
pop
cltd
cmp
pop
lret
mov
jle
pop
push
movsl
cmp
cmc
in
add
jne
xor
push
mov
je
scas
pop
sbb
es
test
fdivr
cmpsb
je
jle
test
push
cmc
add
cmp
or
and
sub
pop
cmp
jl
cs
xchg
pop
std
jns
repz
cli
nop
dec
jo
popf
dec
mov
dec
push
adc
loopne
movsl
cmp
ljmp
mov
mov
mov
incb
in
and
insl
push
push
aas
adc
call
mov
mov
jl
dec
mov
gs
dec
mov
or
add
adc
jle
mov
sahf
inc
int3
test
push
es
push
jecxz
test
fidivrl
sbb
pop
inc
pop
mov
rorb
sub
and
int3
adcl
mov
cmpsb
dec
inc
mov
fisttpl
add
xchg
cmpsl
push
divl
push
push
negl
mov
call
cwtl
pop
int3
mov
les
add
testb
xor
outsb
es
fwait
xchg
out
cwtl
pusha
or
out
push
loope
bound
int
jne
testl
xor
jnp
xchg
inc
dec
xchg
dec
adc
adc
jp
cmc
adcl
dec
fcoml
jmp
aaa
mov
push
mov
push
xchg
xchg
or
adc
jo
dec
sub
cmpsb
mov
js
aaa
adc
mov
xchg
rorl
push
dec
push
pop
cs
lahf
ret
cmpl
adc
test
test
std
lahf
mov
mov
sarb
lods
das
gs
cmc
es
sbb
xchg
push
ret
into
sahf
add
mov
push
mov
dec
outsl
mov
lret
popf
les
bound
jg
std
dec
or
push
daa
int3
in
lcall
decb
mov
add
dec
cmp
cltd
add
or
sub
aam
jl
int3
bound
aad
sbb
ss
dec
ficomps
sub
movsb
aam
mov
loopne
jae
pop
pusha
call
pop
mov
xor
sub
cmp
cmp
movsb
ror
push
dec
outsb
stos
lret
les
push
mov
mov
add
rolb
mov
inc
push
stos
into
imul
shlb
rcll
cmp
incl
sbb
cmpl
jb
add
rorl
ret
mov
arpl
or
inc
mov
repz
iret
ja
push
shrl
and
pop
mov
js
xchg
cld
dec
mov
flds
bound
push
int
push
dec
dec
push
mov
cmp
or
push
mov
and
in
repz
sti
cmp
jb
mov
xchg
add
inc
lret
sub
fsubrs
cwtl
fs
cs
sbb
fadd
cli
sahf
push
aaa
sti
subl
mov
push
out
push
dec
xor
iret
dec
adc
int
push
jns
in
mov
xchg
cs
mov
xchg
push
sub
and
xchg
addr16
fwait
xchg
pop
dec
imul
testl
cli
dec
pop
add
test
lret
das
dec
fdivrl
jne
cmpsb
fstps
lahf
sbb
adc
pop
pop
or
lahf
sti
push
cmp
xchg
orb
imul
jns
pop
cli
mov
lods
dec
jbe
inc
cmp
cmpsb
int3
outsb
hlt
notl
sahf
mov
adc
rcr
fists
call
push
inc
push
pop
add
and
test
jmp
enter
mov
pop
loop
daa
mov
arpl
sbb
imulb
xor
ret
test
sbb
push
lds
or
lahf
jge
jl
cmp
es
fstp
jnp
or
rorb
outsb
jns
xchg
push
jne
mov
xlat
iret
dec
sub
adc
out
mull
inc
adc
fwait
negl
pusha
icebp
jno
leave
xor
inc
ror
sbb
push
mov
fwait
lods
mov
fiaddl
je
mov
hlt
stc
dec
pushf
in
into
cmpsl
sub
fxch
movsl
fidivl
pop
enter
pop
dec
mov
jmp
rolb
ja
fidivrs
mov
lcall
mov
sub
aad
pop
pop
or
xor
sti
aas
xchg
dec
mov
jp,pt
inc
movsl
popa
xchg
popa
inc
adc
xor
pop
fcmovbe
mov
mov
xchg
iret
stos
mov
push
int
sbb
adc
insl
dec
fwait
pushf
cmpsl
repnz
pop
sub
clc
pop
sbb
dec
ds
repz
xchg
sbb
stc
into
in
fnstcw
outsl
std
movsb
mov
fs
sub
sub
cltd
and
sti
scas
data16
divb
and
inc
push
aaa
scas
mov
test
cmc
add
jle
rcrb
push
jl
jae
rcrl
in
insb
pop
cmpsl
add
pop
push
clc
cmp
sarl
mov
stos
repnz
pop
mov
pusha
ds
xchg
jl
xchg
sub
jp
mov
pop
add
loope
mov
mov
mov
stos
jb
cwtl
mov
leave
ret
js
xor
xchg
les
jne
push
xlat
xchg
cmp
adcb
mov
jecxz,pt
jne
sub
outsb
shrl
lea
dec
jmp
mov
cmc
dec
fiadds
xor
rcr
jnp
mov
adc
pop
daa
sbb
jb
popf
add
push
dec
cmp
aaa
sti
idiv
sbb
mov
xchg
in
ja
test
addr16
das
xchg
sub
incb
xor
xchg
addr16
in
adc
daa
popa
push
out
mov
cmp
xlat
xchg
movsl
clc
xchg
testb
testb
in
iret
in
jmp
shll
sbb
xchg
aam
leave
rcr
sub
dec
sbb
js
pop
mov
push
jmp
xchg
jle
gs
cmp
mov
outsb
cmpb
popf
clc
xchg
pushf
rorb
pop
inc
and
adc
mov
mov
shlb
test
inc
cmp
fs
rol
inc
add
sbb
jbe
or
arpl
arpl
iret
rcrb
mov
insb
fildl
hlt
or
stos
test
xchg
push
enter
sub
adc
dec
pop
out
mov
mov
leave
pop
aas
mov
jp
sahf
sarb
movsl
push
sbb
out
negb
in
mov
xlat
std
adc
jns
mov
inc
loopne
repz
notl
icebp
cli
jo
adc
fs
pop
mov
dec
pop
sbb
in
popa
mov
mov
xor
cmp
push
call
or
lret
push
int
dec
adc
xchg
arpl
sub
jg
lret
xchg
mov
dec
mov
sarb
fdiv
add
pop
ret
and
xchg
cltd
jmp
xor
mov
ljmp
inc
push
xchg
cmpsl
iret
adc
xchg
inc
mov
orb
and
pop
jno
imul
inc
mov
inc
or
cmpsb
je
and
lcall
inc
push
fs
xchg
xor
rolb
push
scas
mov
cmp
outsb
loope
test
lock
xchg
mov
stos
dec
pop
cmp
jmp
xchg
push
pop
add
les
xor
bnd
mov
cld
psadbw
or
mov
push
not
sarl
pop
cmc
sarl
pop
dec
into
imul
jae
movl
xor
cmp
adc
daa
jp
jo
outsb
ja
fucomi
and
cmp
popa
imul
pop
mov
jbe
bound
out
lds
xor
es
lea
add
push
adc
pop
mov
nop
or
sub
sub
insl
ss
pop
lock
shlb
sub
pop
stc
or
out
lret
cld
pop
jecxz
mov
lock
inc
pop
sbb
loope
cwtl
loope
xor
mov
ret
jnp
mov
loope
xor
js
xor
ffree
or
push
dec
aas
xchg
mov
mov
mov
pop
jbe
add
iret
addr16
testb
cmp
iret
test
cmpb
add
add
into
sbb
ret
sbbl
mov
xor
and
mov
lret
cmp
jno
test
mov
aam
add
nop
std
sarl
das
xorl
xchg
mov
xchg
imull
pop
das
mov
jg
or
push
sbb
xlat
shl
in
mov
negl
pop
sbb
iret
xor
idivl
dec
push
mov
in
xor
xchg
ret
jnp
je
int3
sub
lret
jl
cmp
jnp
add
das
scas
popf
dec
inc
xor
xor
sub
xor
mov
sub
cmp
inc
push
fmuls
dec
bnd
scas
leave
pushf
rolb
cmp
scas
pushf
xor
inc
push
arpl
subb
fistps
ljmp
test
inc
test
xor
add
les
ret
shl
pusha
sub
ss
sub
cmpb
dec
stc
ret
mov
stos
jbe
pushf
mov
popa
and
sub
sbb
lahf
mov
push
pop
cwtl
push
pop
cli
in
pop
test
adc
push
pop
fs
or
js
jge
pop
sahf
hlt
out
add
jne
mov
xchg
push
xchg
add
mov
sbb
pop
pop
sub
sub
popf
in
clc
push
add
cmpb
mov
adc
add
pop
push
insb
add
mov
cwtl
and
popf
pop
dec
xrelease
jnp
cltd
sbb
mov
outsl
fmull
mov
fldcw
jb
push
pop
jae
loopne
das
push
inc
add
inc
mov
xchg
cmp
jp
mov
popa
ret
push
pop
xor
or
jne
mov
push
loope
xchg
jl
mov
xor
loopne
repnz
cwtl
push
in
cld
out
test
enter
push
iret
into
xlat
rcrb
pop
test
mov
iret
pop
pop
mov
into
xchg
js
push
loope
flds
push
divb
jp
imul
or
xchg
loopne
std
fcoml
mov
sti
jns
cmp
mov
cmc
lods
xor
cmpsl
xchg
gs
cmpsb
sbb
push
jns
push
cmp
add
pop
push
shlb
sahf
pop
popf
insb
in
popf
push
loope
xor
xchg
xor
sub
push
shlb
test
loop
cmpsb
loope
add
sbb
add
jbe
sbb
xchg
and
jge
mov
in
into
adc
aaa
add
mov
fwait
lcall
xchg
dec
test
aad
shl
and
arpl
fmull
jl
pop
mov
daa
jnp
push
test
or
mov
cmp
mov
or
fstps
mov
dec
xchg
lods
fcmovne
inc
sbb
inc
pop
int
xchg
jl
adc
mov
gs
test
xchg
out
test
mov
pop
mov
lret
mov
mov
dec
mov
data16
sbb
mov
rcrl
cmc
push
push
lods
callw
mov
fs
mov
dec
ja
mov
pop
outsl
mov
test
adcb
enter
mov
mov
ret
push
test
cmpsb
test
push
add
mov
xor
pusha
mov
stc
sbb
xchg
mov
pop
mov
gs
inc
ljmp
xchg
scas
cs
adc
add
insl
xchg
mov
ret
imul
mov
clc
out
pop
in
jae
pop
rclb
sbb
nop
cmp
push
fisubrl
xchg
dec
adcl
inc
leave
outsb
xchg
nop
add
mov
enter
pop
add
out
push
nop
push
dec
lcall
outsb
add
dec
fwait
gs
repnz
shll
dec
fwait
sub
adc
inc
addr16
repnz
mov
leave
and
ja
xchg
dec
dec
jo
inc
push
xor
gs
mov
push
inc
mov
inc
out
dec
movsl
adc
push
add
mov
or
sarl
xchg
sub
xor
or
push
push
lods
outsb
orl
mov
and
les
jno
sub
daa
push
pop
test
insl
or
pop
aad
pop
push
and
enter
sbb
sti
scas
or
pop
sbb
add
adc
and
add
ret
hlt
repnz
xchg
inc
inc
fimuls
fstp
ficoml
adc
lds
adc
fs
mov
pop
dec
jnp
or
mov
and
xchg
push
sarb
daa
fwait
pop
or
adc
ss
in
pop
sti
dec
fisttps
pop
cltd
mov
mov
insl
enter
add
inc
arpl
add
pusha
lods
mov
enter
dec
xor
xchg
scas
test
fwait
mov
mull
and
mov
mov
ret
mov
int3
rorl
mov
jge
pop
repz
js
lods
add
daa
out
pop
add
sbb
mov
jno
cmpb
or
pop
adc
mov
push
mov
movsl
push
xor
sub
nop
rclb
testl
lcall
dec
pushf
filds
xor
lea
push
icebp
into
pop
pushf
dec
outsl
xchg
jo
jle
mov
fsubs
jl
insl
lahf
xor
es
mov
enter
insl
dec
lret
mov
in
es
xchg
mov
cmp
or
sbb
daa
adc
mov
hlt
cmp
imul
sub
in
popa
nop
add
ss
test
je
xchg
and
and
pop
aas
mov
call
nop
mov
fs
cmp
sbb
mov
lds
push
nop
cmpsb
sub
fisubs
fistl
xchg
ret
dec
mov
outsb
imull
jnp
sahf
push
jl
stc
pop
inc
sti
mul
loope
push
sbbl
push
in
sbb
outsb
fsubp
andb
int3
int3
aam
push
test
mov
movsb
dec
ja
outsb
enter
mov
adc
pop
sahf
or
and
dec
cmc
sahf
leave
dec
seto
scas
mov
jg
enter
stos
cld
mov
xorb
pop
adc
mov
push
dec
imul
add
adc
aaa
enter
mov
mov
pushf
or
stc
lock
les
dec
pushf
lret
mov
adc
add
pop
ret
jb
repz
stos
and
paddusb
pushf
xor
xor
test
out
dec
mov
xor
mov
mov
adcb
mov
xchg
inc
cmp
scas
inc
pop
stc
sbb
adc
lods
lock
filds
jb
cmp
mov
ret
xchg
xchg
cmc
sbb
imul
push
fiadds
xor
cmp
mov
xchg
scas
adc
lea
pop
imulb
adcb
imull
mov
pop
dec
lods
mov
mov
jl
test
mov
mov
aaa
movsl
cli
jecxz
shlb
subl
cli
cld
dec
mov
hlt
add
jle
push
insl
test
adc
xor
data16
popl
das
fdivl
xor
jecxz
fistpll
lods
cmp
add
aaa
xchg
mov
inc
ficoml
jnp
jo
mov
jne
shrb
inc
outsb
pop
jns
int
xchg
cmp
cs
cwtl
mov
push
fimull
je
and
lds
dec
test
lock
addb
icebp
js
arpl
xor
adcb
and
int3
mov
addr16
adc
sarb
test
out
cltd
loopne
xor
and
xor
push
pop
mulb
dec
mov
lcall
pushf
mov
or
push
dec
add
xor
mov
fsubl
xchg
cld
iret
or
xor
pop
jmp
pop
popa
sbb
push
mov
dec
test
jmp
fistl
and
mov
insl
jge
es
cmpsl
fcomp
add
mov
add
in
data16
jbe
xor
aam
inc
sbb
mov
adc
cmp
leave
in
cmp
daa
aam
xchg
subb
pop
or
adc
gs
xchg
sub
cmp
gs
ret
adc
rolb
std
xor
mov
mov
imul
dec
xchg
mov
mov
movsl
jo
jl
pop
jne
mov
cmp
xor
add
dec
dec
cmp
iret
call
arpl
loopne
add
insl
and
popf
push
push
mov
pop
std
inc
mov
add
and
ja
fistpl
in
lret
push
fisubrs
ret
jl
xor
and
mov
std
push
or
sub
js
stc
jp
dec
pop
dec
mov
xlat
or
clc
and
mov
mov
xor
pop
push
pop
popl
xor
scas
inc
hlt
movntq
jp
mov
daa
cs
sub
push
mov
xchg
pop
cld
stos
in
push
int
scas
mov
popf
pop
out
inc
test
inc
popa
mov
stos
adc
test
out
dec
pop
insb
jb
cmp
aas
mov
mov
mov
pop
fistps
das
xor
cmpl
loop
andb
push
lahf
lds
inc
cmpsl
sti
jp
je
adc
enter
sub
xlat
sub
push
stc
data16
fnstenv
dec
dec
sar
call
rcr
or
aam
imul
push
enter
cli
and
jne
dec
push
add
cmp
loope
and
insb
je
adc
push
imul
movsl
jne
mov
lods
adc
sbb
in
inc
push
insl
lock
dec
fucom
adc
insl
movsb
test
dec
out
in
add
adc
xor
movsb
add
ror
ljmp
movsl
push
mov
mov
push
mov
dec
mov
test
and
sub
xchg
scas
cmp
cld
or
imul
jge
fstp
or
orl
xchg
xor
jno
mov
sbb
cmpsb
pop
andb
sub
rorl
pop
jae
ret
iret
xchg
iret
les
ss
test
les
or
sti
mov
mov
ficoms
jecxz
dec
orb
popa
in
jnp
mov
aas
mov
aas
mov
mov
fidivrs
pop
cmp
repnz
xor
add
incl
mov
pop
jge
in
xor
cli
cmpsb
movsl
jno
add
push
inc
xchg
jge
imul
cltd
out
fidivrs
rcrl
es
rcrb
push
in
icebp
ds
push
sahf
mov
pop
pop
push
sbb
cli
pop
lcall
sub
adc
inc
cs
mov
cltd
adc
pop
pop
sub
push
insb
jo
sbb
jle
push
aas
and
fsubr
push
push
lods
inc
cli
es
jno
out
stc
pop
push
arpl
xor
push
inc
fmul
es
hlt
dec
push
imul
arpl
push
ret
aad
xor
cmpsb
ljmp
outsb
fidivrs
out
mov
add
cmp
daa
pop
repz
sub
stos
pop
mull
in
in
inc
rorl
popf
sbb
pop
int3
cmpl
and
stc
sub
and
inc
test
into
outsl
or
or
jle
repz
stc
fsubrl
sarl
ficompl
adc
mov
xchg
cmpsl
xchg
xor
jle
lds
fyl2xp1
test
aam
xchg
sub
sbb
sbb
xchg
xchg
pop
mov
lret
cmpsl
addr16
in
jp
lods
push
hlt
mov
bound
add
mov
xchg
jb
loop
in
mov
aad
sbb
push
lds
cld
mov
std
lock
dec
dec
popa
sub
movsl
jmp
test
subl
mov
mov
idivb
int
mov
pushf
lods
je
pop
loope
das
push
hlt
mov
fidivl
fwait
xor
in
sbb
imul
xchg
xchg
aaa
js
outsl
repnz
jp
test
cld
fcom
iret
mov
mov
ret
cmp
dec
sbb
add
mov
imul
es
scas
cmp
mov
aam
leave
xchg
xchg
out
ds
xor
cmp
cmpsl
push
or
dec
cmc
adc
add
jnp
fildll
pushf
pop
jl
lret
into
fdivrs
xchg
roll
mov
and
add
mov
pop
repnz
imul
xchg
es
xor
fs
fs
daa
jmp
gs
xchg
loop
adc
fstps
aas
push
dec
xchg
ret
inc
push
dec
mov
adc
dec
ljmp
bound
push
sub
pop
sub
stos
xchg
pcmpgtd
fs
int3
push
inc
movsl
scas
cmpsb
mulb
mov
add
lahf
fmull
sub
and
push
jb
mov
hlt
adc
mov
and
xchg
mov
negb
popf
out
call
xchg
add
jbe
jno
push
adc
rolb
das
loope
fdivrs
xchg
mov
inc
cmp
push
int3
aad
push
std
push
xchg
lcall
icebp
gs
aaa
xchg
mov
push
loop
mov
sub
testl
aad
jl
in
dec
cmp
jb
ds
mov
mov
jg
sti
lock
ret
pop
dec
mov
or
sbb
fs
dec
hlt
lahf
inc
cmp
jl
loopnew
sbbb
jns
xor
jmp
cmp
xchg
pop
pushf
push
ret
clc
std
sub
and
rorb
xchg
leave
xlat
insb
lock
xlat
dec
ja
dec
ret
mov
fstps
xchg
adc
in
out
iret
fwait
sbbb
inc
adc
jmp
andb
jp
dec
lahf
sbb
les
push
movsl
nop
inc
lcall
enter
sbb
xchg
scas
out
jae
rcrb
inc
sub
into
rcl
sub
imul
push
dec
or
or
push
sbb
pop
jmp
sub
or
int3
stos
pop
clc
insl
add
push
pop
out
adc
mov
lret
xor
jp
sti
ficompl
les
aas
in
mov
fs
mov
movsb
push
xchg
scas
jne
sub
je
adc
rcll
xchg
sti
or
icebp
and
ret
fisubs
pop
cmp
push
or
inc
inc
lret
push
pop
xor
out
dec
xchg
xchg
lods
mov
cmp
xor
inc
aad
adc
add
inc
dec
dec
push
push
mov
pushf
mov
sbb
iret
ret
mov
add
adc
ret
int
push
mov
popa
jle
pop
testb
sub
repz
das
adc
cmpb
sbb
jecxz
xchg
rdpmc
sarb
mov
rol
inc
mov
cmp
je
mov
ss
cltd
pop
lea
jl
leave
filds
mov
lret
pop
lock
fdivrl
ret
pop
inc
repnz
push
or
push
inc
push
sbb
cli
fidivrs
mov
cmp
fisttps
es
imul
repnz
sub
shll
jp
jp
in
sub
imul
cmc
enter
aas
xchg
mov
dec
jo
xchg
mov
xor
push
xor
lret
and
jg
aaa
in
push
pop
ja
aam
stos
sub
jb
mov
push
repnz
mov
pop
out
and
sbb
in
test
mov
test
jns
dec
dec
sbb
jmp
rcll
out
cmp
imul
xor
sub
mov
sbb
loopne
jge
in
cs
push
adc
jge
sbb
xchg
shlb
popf
pop
jge
push
mov
push
push
dec
fmul
daa
push
negl
aam
icebp
jp
mov
push
xchg
in
fwait
mov
roll
push
sub
mov
in
or
imul
test
pushl
push
icebp
outsb
insl
sbb
dec
aaa
fldenv
js
pop
rclb
sarl
imul
xor
xor
mov
dec
push
repz
roll
outsl
jne
aaa
mov
mov
add
mov
mov
ss
daa
test
insl
add
cmpb
lret
jae
sahf
pushf
push
and
bound
push
cmp
cmp
int3
jge
jmp
jne
sub
stc
xor
hlt
decl
filds
inc
sbbl
adc
stc
jge
imul
cmp
loopne
insl
sub
scas
xor
fistpll
or
xchg
push
mov
dec
mov
sub
jp
add
xchg
repz
mov
xchg
inc
clc
pop
sbb
pop
add
inc
flds
sub
or
js
stc
inc
push
add
lea
insl
xor
in
in
call
scas
or
xchg
xor
push
cmpsb
or
adc
or
pop
dec
ss
xor
mov
inc
orb
dec
cs
decl
addb
xchg
test
shlb
out
rorl
mov
outsb
adc
rorb
xchg
sbbb
pushf
les
mov
or
jge
xchg
mov
ja
mov
sub
pop
es
sbb
leave
jle
mov
inc
fcmovne
mov
call
xor
mov
int
negb
scas
icebp
dec
ljmp
cwtl
inc
icebp
inc
movsl
lods
pop
std
lods
aad
and
fstp
pop
xchg
cli
aas
fistpl
inc
push
pop
out
push
and
sbb
stos
test
lea
sti
cmpsb
mov
fistpll
in
jle
test
test
rcrb
outsl
ss
pop
mov
das
xor
lmsw
sahf
push
push
nop
cmp
inc
hlt
aam
call
lods
mov
add
hlt
loop
dec
dec
mov
sub
dec
dec
adc
sub
insl
push
int3
mov
adc
dec
cltd
repnz
v4fnmaddss
shlb
and
in
mov
cli
jmp
adc
pop
sbb
cmpsl
ret
inc
push
xchg
jmp
les
aam
push
test
test
call
sti
jg
cmpsl
dec
xor
pop
jno
mov
ret
push
mov
add
into
cs
jp
inc
mov
sbb
into
mov
xchg
push
or
pushf
mov
inc
out
in
sti
cwtl
ljmp
sahf
mov
out
jl
int3
cmp
cltd
sub
add
xchg
ja
inc
bound
jl
xor
push
in
rcrb
das
pop
dec
pop
push
push
mov
pop
sti
movsb
inc
sub
push
jl
or
fists
cmpsb
mov
mov
cmp
scas
pop
in
mov
jnp
in
cs
push
loop
rorl
in
cwtl
arpl
rorb
imul
and
clc
jbe
add
outsl
pop
mov
fsubs
xchg
clc
pop
pop
mov
xchg
fidivrs
std
adc
idivb
push
loopne
push
xchg
scas
jb
lahf
jns
sbb
gs
out
cmc
inc
pop
popa
mov
mov
mov
sarb
cmp
jmp
push
cli
or
jle
jmp
sahf
mov
cmp
fwait
or
add
ds
cmc
and
roll
dec
jns
nop
mov
rorb
lods
sub
mov
mov
mov
lret
ljmp
cwtl
sarl
sbb
sub
sbb
mov
sbb
scas
insl
scas
negl
in
jecxz
call
loope
xchg
jle
adc
cs
jbe
pop
push
out
ds
pop
stos
jecxz
mov
cmp
pop
jae
pop
sub
push
xor
outsl
dec
mov
mov
mov
div
jge
ljmp
push
lock
push
jns
mov
scas
pop
pop
lods
fisubrs
push
imulb
xorl
movsb
mov
fdivl
test
outsb
and
sub
stc
mov
push
xor
jecxz
sti
ds
jne
hlt
addr16
cmc
add
or
dec
dec
adc
repnz
xchg
pop
mov
rol
push
mov
out
sub
push
lcall
lock
fldt
add
js
mov
mov
push
pop
pop
inc
push
pop
or
les
shll
clc
fdivl
scas
iret
add
xor
out
inc
and
adc
sub
lock
repnz
cmp
leave
ds
sti
adc
jl
cmp
sbb
int3
leave
std
lock
sub
adc
pusha
mov
cmp
in
push
jns
inc
cli
xlat
cmpsl
add
xor
lcall
add
data16
in
xor
mov
sbbb
aas
shlb
rorb
and
pop
mov
cmp
xor
pop
push
inc
subb
jle
lock
pop
mov
mov
hlt
dec
xor
sbb
dec
int
or
test
pushf
enter
stos
insb
cmp
out
mov
mov
popf
cmp
mov
inc
push
stos
push
popf
xor
pusha
pop
imul
add
dec
sub
aas
push
add
clc
push
fwait
ja
stos
das
sbb
int
je
jae
mov
push
fists
lods
subb
xor
sub
sub
into
dec
pop
pusha
shrl
in
std
pop
movsb
sub
pop
add
or
test
testb
repz
out
inc
cmp
or
out
pop
xchg
and
adc
dec
das
shlb
mov
add
cmc
xor
xlat
inc
sub
lock
loope
lock
xor
dec
sahf
sbb
jp
jbe
test
iret
in
push
dec
and
inc
movsl
call
test
add
stos
imul
push
xor
adc
into
addb
pusha
or
pop
mov
int3
jge
inc
inc
inc
out
xchg
jne
xchg
mov
push
xchg
out
stos
jb
pop
rol
mov
cmp
insl
dec
ret
lahf
add
in
iret
lock
push
test
jne
fistl
imul
cmc
cs
mov
stos
xchg
dec
ret
punpcklbw
lods
jp
inc
lods
stos
pop
xor
dec
add
jo
adc
scas
outsl
sbb
shlb
sarl
outsb
cmpsl
mov
loop
mov
jmp
jecxz
in
jp
out
dec
in
outsl
sbb
negl
xchg
dec
pushf
xor
cmp
fcmovnu
fsubrl
inc
xchg
and
out
sub
push
fldpi
pusha
jg
add
or
je
xchg
mov
adc
lret
push
mov
sbb
and
stos
in
notb
jmp
pop
shrb
lret
sar
ffree
or
cmpsl
imul
call
insb
adc
es
dec
decb
repz
subb
out
jmp
mov
push
scas
jg
rol
xchg
mov
push
cwtl
xor
adc
mov
push
fwait
push
adc
call
push
xor
xlat
pop
pushf
rclb
and
ds
fcmovu
sub
pop
hlt
aam
sub
js
add
jp
daa
xchg
cmpsl
xchg
pop
test
inc
cmp
cltd
in
adc
popa
jecxz
xlat
mov
loopne
iret
jne
orb
decl
outsl
hlt
adc
data16
aas
push
jno
mov
in
popa
push
add
pop
mov
mov
sub
bound
int
int
mov
es
xchg
std
push
pop
mov
sbb
pop
mov
addl
rol
mov
stos
into
sbbl
push
mov
sub
imul
in
dec
inc
je
loopne
hlt
lahf
pop
dec
out
aam
push
add
inc
hlt
xchg
cmpsl
mov
frstor
inc
enter
jns
push
les
frstor
out
sub
scas
pop
cmp
es
enter
mov
cs
mov
push
dec
outsl
jbe
sahf
push
sahf
psubsw
ret
mov
pushf
andl
je
cmp
push
cmp
mov
mov
jae
bound
stc
and
int3
lods
cmp
xchg
jb
pusha
lock
jecxz
add
inc
outsb
xor
fwait
jo
ljmp
rorb
cmp
cwtl
mov
aas
data16
mov
lret
movsb
or
xor
jb
outsb
pop
or
push
or
pop
pop
and
inc
lock
pop
jge
adc
lret
sbb
inc
xor
pop
icebp
and
cmpsl
daa
les
inc
dec
mov
mov
xor
mov
ljmp
xor
imul
fsubr
sub
push
jl
xchg
mov
inc
pop
lods
aam
dec
fs
das
daa
jo
pop
pop
push
add
addr16
mov
daa
hlt
into
xor
fcmovb
outsb
loope
jp
push
xchg
out
mov
jmp
mov
out
and
in
js
lods
mov
mov
arpl
or
outsl
fimuls
add
sbb
psubq
lods
push
dec
pop
adc
sbb
notb
jge
imul
enter
cmp
divb
add
adc
subl
mov
in
push
xchg
daa
fdivrl
mov
lds
mov
dec
popf
cmp
mov
cmp
or
dec
ljmp
outsb
mov
lahf
ret
dec
xor
sbb
mov
jle
push
shlb
mov
leave
cmp
push
inc
inc
test
push
ret
ffreep
les
sahf
mov
xor
pop
or
pop
adc
push
subl
adc
fnstcw
js
cmp
lods
sub
or
mov
into
cmpsl
insb
or
cmp
jb
mov
jns
leave
ljmp
mov
adc
sub
or
pop
inc
int
or
cmpsb
out
stos
pop
cltd
jecxz,pt
sub
sbb
mov
mov
in
arpl
pop
or
aas
jl
aam
jae
xor
maxps
inc
lcall
imul
cmp
stos
mov
jmp
aam
rol
rorl
addr16
iret
xchg
int3
push
out
fcoms
es
pusha
pop
dec
rcll
adc
add
cmp
enter
xor
sbb
pusha
nop
int
ret
jbe
movsb
cwtl
test
xlat
mov
gs
sbb
lods
scas
aaa
adc
loope
cmp
shlb
bound
dec
mov
movsl
ja
gs
dec
adcl
pushf
pusha
sub
xorl
sbb
cmp
pop
add
pusha
inc
lods
hlt
or
pushl
push
jmp
fsubrl
ret
and
popf
dec
add
add
loope
xchg
or
out
sub
mov
adc
jnp
fwait
xchg
arpl
das
sbb
flds
imulb
pop
test
stos
jmp
mulps
xchg
push
sub
dec
sub
es
dec
push
fs
pusha
dec
addb
cmpsb
mov
or
push
inc
cli
cmp
add
shr
stos
std
popf
dec
xor
sbb
mov
scas
or
outsl
push
cmp
into
pop
lret
stos
jp
adc
out
stc
lret
pmaddwd
jbe
dec
bnd
fildll
das
pop
push
aad
or
aad
push
aaa
bound
fucom
imul
cmp
xor
push
mov
mov
fnstsw
stos
popa
xlat
cmp
int3
sub
in
cmpsl
sub
add
add
pop
pushf
mov
sub
jp
dec
dec
cmp
dec
mov
push
jp
inc
popf
out
and
lcall
nop
pop
es
jno
popa
sbb
repz
jle
push
sbb
arpl
mov
push
fnstcw
outsl
and
pusha
std
jmp
adcb
sbb
mov
or
ds
das
lock
inc
sub
mov
mov
fdivrl
int
repz
xchg
or
and
stos
sub
lcall
add
movlps
lea
inc
repnz
xchg
faddl
fwait
imul
add
aas
test
sub
mov
mov
outsb
sbb
adc
clc
cli
test
and
or
lods
jne
sub
dec
xor
or
add
loop
add
add
ss
nop
mov
dec
mov
sarb
mov
jb
jp
jge
or
push
cmpsb
push
push
lock
repz
mov
fidivrl
xlat
cli
xchg
cmpsb
loopne
and
cmc
ss
sbb
out
mov
xchg
fcompl
pop
xchg
roll
adc
add
imul
lea
out
xor
inc
adc
iret
outsl
add
cmp
xor
and
movsb
pop
inc
pop
xchg
push
ret
fmuls
cld
or
add
jecxz
dec
cmpsb
add
sub
insb
es
lcall
std
test
test
incb
lret
dec
mov
push
lea
sti
push
ret
test
or
or
fiaddl
stos
sahf
shr
pop
icebp
xchg
ja
dec
mov
mov
mov
out
mov
insl
stos
xchg
leave
mov
xor
add
jno
nop
mov
mov
insb
jecxz
xor
pop
inc
insb
divl
gs
jbe
add
push
lcall
and
push
imul
mov
mov
pop
jns
call
ret
cmp
dec
in
mov
cld
loopne
cld
mov
inc
das
andl
mov
test
mov
imul
lock
loope
lods
lret
and
xchg
adc
lods
or
in
sbb
inc
push
cmc
arpl
pop
dec
outsl
push
fldenv
dec
add
xchg
xchg
hlt
daa
mov
das
rcrb
cmp
adc
jge
xchg
int3
xor
into
xor
outsl
movl
push
in
pop
xor
stos
adc
into
lret
push
xchg
lahf
clc
sub
pop
stos
leave
fstps
jno
pop
jnp
in
ljmp
cs
add
pop
xor
fcompl
testl
stos
cmp
in
bound
bound
mov
mov
adc
movsb
add
xor
push
add
mov
jb
incb
inc
mov
imul
daa
pushf
and
stc
sbb
mov
push
mov
mov
sub
fst
mov
cmp
mov
loop
sti
and
pop
sub
lods
add
mov
dec
fildl
mov
xchg
adc
fists
sub
cs
xlat
call
lods
push
pop
out
pop
fstpt
sub
and
fstl
and
out
jge
jo
xchg
js
jecxz
stos
outsl
lods
dec
and
jbe
sti
je
inc
mov
cmc
xchg
addr16
dec
js
or
js
cmp
into
mov
push
xor
or
add
xchg
and
sbb
test
mov
jne
pop
mov
testb
xor
jecxz
aaa
andl
add
jl
jo
push
outsb
loopne
xchg
loope
stc
clc
jecxz
cmpl
insl
xor
or
cmp
ja
mov
cmp
imulb
dec
lret
adc
cmpsl
inc
and
inc
movsb
push
hlt
dec
jmp
dec
mov
jmp
icebp
mov
cmp
push
cmp
push
fcomps
rolb
fidivrl
jbe
xchg
bsr
xchg
jge
mov
adc
rcll
pop
sbb
into
test
ret
enter
cld
iret
xor
loop
clc
pop
addr16
push
or
and
fs
jmp
fs
call
xchg
scas
rcrl
sub
sub
shlb
pop
cmp
jbe
cld
mov
dec
push
dec
out
out
and
push
aam
jno
sbb
fisttpll
jl
pop
cmp
push
outsl
cmp
pop
mov
add
das
push
cmp
bound
xor
xchg
cmc
out
mov
imul
mov
cmpsl
pop
sbb
dec
pop
push
pop
adc
cwtl
sbb
ja
test
sbb
push
xor
lahf
lcall
mov
push
rcrb
xchg
into
ljmp
addl
inc
add
mov
push
in
dec
lcall
and
inc
lret
in
sbb
sti
jno
rorl
imul
pop
icebp
ret
sub
push
sbb
xor
mov
nop
dec
lret
sbb
faddl
push
dec
outsb
cmp
aad
rolb
out
cmp
ljmp
push
and
incl
pop
scas
outsb
imul
mov
cmp
ljmp
add
call
mov
sarb
xchg
push
xchg
arpl
nop
push
xchg
les
sbb
xchg
pop
adc
jg
lds
jmp
and
pop
jge
fwait
pop
sbb
daa
jmp
xchg
call
rep
sbb
test
std
pop
je
mov
sub
ljmp
pusha
add
push
fisubs
pop
shlb
aaa
jl
push
lods
push
sub
fwait
les
fcomip
jne
and
mov
dec
fistps
cs
dec
clc
movsb
clc
hlt
enter
push
adc
mov
mov
xchg
and
push
stc
imul
push
adc
rcrl
pusha
out
push
pop
popf
in
aas
or
mov
xchg
jge
cmc
inc
pop
shrb
add
add
les
sub
repnz
les
push
fcomps
in
int3
clc
shlb
mov
sbb
sub
es
lods
mov
cmp
aam
negb
push
clc
int3
xchg
outsl
xchg
push
repz
call
dec
mov
inc
xor
popa
mov
insl
sbb
std
mov
mov
push
mov
mov
in
mov
mov
sahf
cmp
arpl
fucomi
insl
and
stos
push
xor
sbbb
adc
mov
or
movsb
lret
testb
ret
fadds
xor
std
pop
and
lret
inc
ret
test
add
fdivrl
pushl
and
mov
outsb
mov
into
mov
and
mov
ffree
adc
jo
orb
jg
pop
mov
loop
jns
and
ds
adc
pushf
xor
adc
cmp
and
push
add
stos
jg
jne
dec
push
jae
pop
lea
inc
out
fdivs
xor
jle
or
outsl
mov
pop
ficompl
pop
fiaddl
scas
fistps
push
cmc
push
shlb
add
cmc
arpl
sub
in
rorb
xor
and
jbe
inc
scas
pushf
jp
stos
aad
jb
mov
mov
xchg
int3
popf
das
mov
stos
cltd
xlat
and
sbb
adc
inc
int
enter
adc
and
and
ret
sbb
mov
repnz
rcl
stc
cmp
ja
sti
pop
cld
aaa
sbb
jnp
xabort
rolb
jecxz
cmp
in
les
xor
mov
js
push
int
inc
sub
call
jmp
fstps
xorb
sbb
pop
imul
into
adcb
movsb
test
rcrb
cmpsl
call
orl
fisttpll
and
jl
scas
mov
notb
imul
imul
mov
in
jl
pop
pusha
jp
shlb
xchg
jmp
sbb
clc
lods
shll
adc
pop
dec
or
push
jg
ror
sbb
cmp
inc
enter
push
pop
push
mov
out
mov
mov
and
and
dec
xor
jl
inc
pop
dec
fstp
or
jecxz
dec
cmp
js
in
sub
xchg
frstor
xchg
xchg
lahf
outsb
cwtl
mov
and
pushf
push
rcrb
mov
into
cmc
aam
inc
or
std
jle
cli
addr16
aaa
fldenv
mov
cmp
fbld
adc
sti
xchg
sub
dec
ds
mov
fnstsw
repz
and
xlat
lret
sub
jg
mov
fldl
sbb
mov
fsubs
inc
jae
adc
jb
and
movsl
arpl
imul
test
dec
jle
xchg
mov
fcompl
es
insl
xchg
ja
cmp
cmp
test
jbe
lret
pop
lcall
insb
lcall
iret
js
fimuls
xlat
xchg
push
lods
jb
push
or
mov
pop
js
xchg
dec
ds
jo
add
imul
sbb
fcomps
fadds
das
push
imul
inc
push
inc
mov
pop
insb
mov
jge
xorl
adc
shr
icebp
pop
jbe
pushl
inc
int3
dec
xor
cld
jns
push
cltd
out
jbe
adc
mov
int
pop
frstor
or
adc
nop
xor
mov
jecxz
test
or
shrb
int
pop
lock
xchg
or
sbbl
int3
pop
sbb
jnp
sub
les
outsb
xor
adc
enter
push
xchg
cmp
cmp
lock
lret
inc
stos
movsl
imul
lods
xlat
mov
cmpb
add
int
fldt
iret
sbb
jns
adc
xchg
jge
sti
mov
rorl
adc
sbb
into
out
pop
fstpt
subl
xor
rcrl
xchg
or
leave
cmp
jnp
psubq
and
lea
mov
add
ljmp
loopne
mov
mov
sbb
xor
ja
dec
adc
flds
sub
dec
adc
pop
popf
insb
xor
loope
pusha
insb
jb
add
and
lds
movsl
lret
jl
push
enter
add
inc
adc
test
mov
add
lret
lods
fsts
adc
dec
jmp
hlt
out
adc
pop
ja
xor
outsb
and
pop
cmpsl
cwtl
jae
inc
test
out
jb
push
hlt
out
adc
pop
in
xor
push
pop
add
xchg
imul
mov
sub
pop
rcll
lret
cmpsl
cwtl
in
jno
out
fmull
mov
cmp
push
xor
sbb
push
xor
xor
sbb
xchg
int3
hlt
or
pop
and
xor
dec
lods
or
sbb
push
sbbb
bound
hlt
push
dec
cmpsl
fsubrs
adc
dec
ficoms
idivl
mov
xchg
or
int3
xchg
aas
dec
jbe
inc
fdivrs
adc
mov
push
sbbl
cltd
xor
cmc
sub
mov
mov
mov
leave
sbb
fstpt
int
sub
aas
and
hlt
leave
jp
cmp
dec
cmovle
mov
lock
adc
xchg
xor
repz
inc
gs
adc
cmpsl
xlat
scas
imull
push
mov
jecxz
jp
cmc
xchg
or
dec
or
sbb
xchg
lcall
ror
pop
add
jae
push
cli
push
xchg
add
xchg
sbbb
cltd
sub
imulb
in
sub
cmp
incl
mov
sbb
pop
adc
lret
inc
xor
mov
hlt
repnz
lret
pop
in
cmpl
aam
and
mov
ljmp
int
jmp
in
add
in
lods
adc
xchg
adc
push
sub
sbb
xchg
pop
mov
les
push
or
jb
jl
or
adc
arpl
test
movsl
cmp
out
or
js
insl
xchg
mov
in
es
sub
dec
scas
pop
push
inc
icebp
push
mov
dec
fwait
adc
dec
clc
xchg
arpl
popf
inc
or
lcall
lods
orb
loope
std
jne
sub
inc
cli
mov
and
pop
int3
fistl
incl
add
popa
mov
fiadds
test
aad
jne
cli
lock
inc
cmpsl
icebp
icebp
mov
dec
scas
bound
and
aaa
stos
shll
inc
cwtl
mov
dec
or
dec
cmc
test
in
bswap
call
lock
in
inc
pushf
in
add
jecxz
mov
loopne
sub
xor
inc
rcll
outsb
sbb
fwait
mov
jae
push
sbb
and
es
cmp
dec
jge
leave
mov
js
cmc
dec
ljmp
lds
sub
fldcw
cli
sbb
imul
dec
mov
jecxz
inc
pop
das
xchg
sub
les
mov
hlt
sbb
xor
fisttpll
aad
in
jge
mov
nop
pop
mov
fs
jecxz
cmpsb
out
popf
int3
leave
fpatan
jae
mov
mov
insl
pop
outsb
sbb
insl
pop
sub
jb
testl
cmpl
sbb
out
aaa
ja
mov
fdivl
inc
jnp
fsts
push
fs
test
insl
loopne
and
pop
pop
and
sbb
jge
les
movsl
mov
xchg
mov
pop
xchg
inc
cmp
add
aam
inc
dec
jge
or
jmp
aam
mov
push
jo
enter
lods
int
call
sbb
imul
in
xchg
and
sbb
jno
jle
sti
and
into
mov
jge
ret
inc
fs
out
mov
ja
outsl
popa
arpl
sub
fistpll
sbb
add
and
add
adc
rclb
or
inc
push
out
and
pop
sub
arpl
sahf
xchg
cmpsb
and
or
out
sbb
push
ud0
push
stos
sti
xchg
insl
mov
xor
hlt
sbb
ljmp
inc
cmpsb
pushf
loop
mov
incl
aas
jmp
pop
push
push
pop
mov
cmc
sarb
sbb
or
pop
out
xlat
cmp
scas
shrl
pop
jb
insl
mov
mov
inc
gs
sahf
mov
dec
add
jae
ds
inc
stos
dec
cld
and
int3
xchg
lods
mov
mov
stos
jl
shr
jmp
addb
loopnew
lock
dec
push
pop
jle
mov
mov
in
loope
mov
mov
pusha
mov
int3
ret
fidivl
add
repz
mov
sbb
pushf
adc
cmc
push
andl
cmp
xchg
ret
std
lret
adc
cs
fldcw
into
das
jmp
and
xchg
fs
sahf
divb
push
jnp
cs
pushl
in
scas
pop
push
dec
push
xor
outsl
mov
mov
mov
aam
and
xor
sbb
dec
iret
loop
test
into
mov
daa
roll
es
sub
cmp
call
sbb
pop
ja
jno
ss
pop
pop
cmp
fisttpl
bound
sbb
adc
ds
into
and
cmp
fldcw
dec
data16
jge
insl
jnp
or
stc
roll
ds
lods
rol
or
push
sub
stos
jne
xchg
mov
pusha
and
mov
xor
push
addl
loopne
icebp
and
cli
xchg
and
ss
mov
push
sbb
mov
and
ret
adc
add
ljmp
leave
lret
adc
xor
test
cmp
cli
inc
sub
sbb
mov
xchg
cli
fs
ret
aaa
or
mov
in
xchg
je
imul
stos
xchg
ret
push
mov
sti
clc
lcall
pop
pop
push
loope
sbb
add
call
in
fsubrp
pop
push
sar
repz
jo
sti
test
adc
movsb
jecxz
or
hlt
aaa
lret
and
jle
leave
sbb
xor
mov
sbb
push
repnz
jp
insl
cwtl
sub
and
mov
and
shlb
mov
aas
pop
fcomps
xchg
xor
test
js
mov
jge
into
inc
mov
add
jge
and
adc
jns
jle
xlat
stos
sub
adc
xor
and
xor
mov
inc
sub
std
aam
inc
dec
sbb
sbb
pusha
xor
lret
mov
push
inc
mov
mov
or
ljmp
jb
insl
push
ret
movsl
mov
sarb
adc
mov
incb
and
aas
or
push
movsb
int
daa
bound
jecxz
mov
mov
dec
shrb
jl
in
xchg
std
inc
and
test
cmp
movsb
scas
jnp
xchg
dec
stos
jae
and
adc
std
pushf
inc
popf
cmp
ja
jns
gs
adc
and
push
movsb
xchg
dec
cmp
and
test
int
inc
ljmp
cwtl
inc
add
clc
loopne
in
aad
adc
inc
cmpsb
mov
adc
and
push
adc
jns
imul
dec
mov
pop
inc
or
or
mov
sbb
cmc
dec
icebp
int3
xor
push
push
pop
mov
and
enter
stos
stos
out
stos
daa
cmp
inc
sbb
push
scas
xchg
sub
or
jo
in
or
push
cmpsl
dec
enter
mov
gs
ret
cmp
inc
call
dec
inc
mov
mov
cmp
sub
pop
out
outsl
outsl
xchg
int
sti
add
and
cli
sub
inc
movsl
std
jle
ret
or
xorl
adc
loop
mov
rorb
outsb
cwtl
xor
push
adc
fsubrs
sub
pop
mov
dec
adc
movsl
sub
jae
pop
mov
or
mov
adc
add
jl
cltd
sarl
cmp
sub
arpl
pushf
cmpsl
cli
jae
push
jne
mov
cmove
add
pop
mov
dec
lods
mov
dec
jg
stc
mov
loop
inc
and
pop
fwait
xchg
mov
and
adc
push
or
outsl
mov
outsb
lahf
icebp
repnz
or
or
pop
jae
andl
add
push
adc
push
cmp
add
adc
cmp
cli
inc
dec
jnp
pop
addr16
loopne
mov
shl
xor
and
outsb
push
shl
xchg
pop
mov
scas
sarl
mov
ficoml
aaa
xchg
out
nop
inc
rcrl
pop
cli
xchg
xor
xchg
lret
lock
int3
adc
cmc
idivb
hlt
add
mov
shlb
not
mov
push
pop
fwait
test
and
cmp
test
inc
lret
out
mov
xorl
xchg
orb
adc
sahf
jmp
cmp
shlb
sbb
mov
lahf
fiadds
orl
scas
xchg
mov
stc
mov
cwtl
ja
push
hlt
or
mov
cmp
sarl
in
ror
jl
sbb
add
xchg
xchg
sti
lock
sahf
adc
cmp
sahf
sahf
lods
jmp
cmp
orb
sbb
divl
js
cmp
mov
pop
aaa
int3
dec
outsb
in
mov
in
add
sub
int3
push
cmp
out
push
mov
and
shrb
sbb
pop
push
movsb
insl
push
push
pop
mov
out
dec
cmp
mov
adc
cld
pop
mov
add
fiadds
xor
jg
jecxz
jecxz
cmpsb
imul
or
cli
fstp
ds
or
or
mov
jo
out
ljmp
into
lahf
popa
xchg
cmp
dec
loop
cli
insl
out
and
ret
mov
sbb
lret
bound
pop
and
mov
xchg
add
xor
sbb
jecxz
pop
xchg
pop
idiv
push
pusha
add
sbb
cmpsl
adc
jns
hlt
xchg
jp
jns
lea
adc
pop
jbe
inc
or
leave
jle
shll
mov
fs
mov
rol
mov
mov
pop
mov
lds
in
inc
mov
add
cmpsl
mov
addr16
inc
fsubl
jo
shl
repz
mov
loope
popf
cli
stos
std
mov
push
hlt
ret
cmp
testb
imul
popf
push
sub
xor
into
xor
mov
xorl
inc
aaa
into
ja
std
testl
insb
mov
pop
mov
pop
rcrl
jnp
nop
loope
xor
xlat
mov
test
jbe
cmp
sbb
cmpsb
sbb
dec
cmp
sbb
fnstcw
and
cmpsb
xor
ja
inc
repz
jp
orl
das
fadds
fs
outsl
xor
test
std
fnsave
faddl
add
and
rcll
xor
or
adc
mov
cwtl
dec
adc
std
mov
pop
push
in
imul
sbb
out
sbb
mov
inc
mov
lock
leave
push
push
add
and
xchg
gs
xor
int
mov
push
xorb
lahf
xchg
mov
leave
jns
gs
cmp
jnp
int3
adc
lock
adc
mov
shrl
bound
sbb
enter
dec
jb
xor
jge
inc
inc
lret
mov
int3
inc
sbb
dec
lods
and
bound
mov
testl
pop
xchg
cmp
push
xchg
mov
push
mov
loope
push
pop
iret
mov
cwtl
jle
mov
lock
xor
cld
and
push
leave
out
lret
mov
lods
jl
cwtl
sti
cmpsl
sub
and
sbb
and
sti
test
mov
test
xchg
add
fsubrs
ret
movsb
mov
add
std
in
sbb
ret
in
leave
movsb
loop
jmp
mov
push
mov
mov
inc
pop
lahf
push
or
inc
lods
in
and
fdivp
int3
sar
fadd
aam
add
sub
jge
inc
sahf
push
mov
pop
inc
ret
clc
jns
scas
mov
jne
aaa
fisttpll
out
leave
aaa
fsubrl
adcl
push
les
ja
pop
shrb
lock
xchg
mov
fs
fcoms
and
icebp
mov
jo
push
ja
dec
mov
test
jg
sbb
lods
xchg
aad
imul
out
mov
push
jnp
mov
fisubl
pop
ljmp
pop
divl
lea
aad
inc
imul
cmp
addl
test
pop
mov
pop
loop
dec
cld
add
cltd
add
repnz
lret
pusha
fisttpl
test
jle
mov
stos
or
mov
sub
pop
loopne
enter
push
in
xchg
adc
pop
and
call
and
dec
xchg
mov
mov
xchg
movb
mov
js
cmp
stc
cmpsl
pop
pop
repnz
inc
pop
nop
add
mov
dec
push
por
mov
inc
sbb
push
lahf
and
in
dec
and
sahf
lcall
out
pop
and
sub
mov
iret
xor
dec
cmp
idivb
lods
pop
cmp
pop
pop
les
push
adcb
insl
mov
dec
jp
sarb
insb
and
hlt
ret
negl
sti
and
movsl
lods
xor
add
iret
dec
cltd
push
push
insl
or
std
xchg
push
popa
dec
fsubl
pop
push
test
fistpll
jbe
adc
jne
xchg
cmp
cmp
pop
jmp
into
xchg
mov
sahf
scas
adc
or
fwait
mov
dec
xor
test
push
divl
sbb
or
xor
ret
xchg
cld
cmpsl
pop
sbb
sbb
cwtl
sbb
repz
shrl
adc
gs
jmp
popf
fsubs
cmp
pop
sbb
adc
scas
jecxz
pop
sub
or
popl
xor
sub
ds
mov
cld
cmc
or
ja
adc
dec
and
or
dec
add
int3
mov
mov
sub
andl
iret
ja
mov
cli
or
ja
xor
inc
adc
push
mov
lcall
das
out
adc
pop
xor
cli
pusha
mov
loopne
mov
jbe
add
jo
xchg
in
dec
push
outsb
aas
and
inc
negl
mov
jmp
movswl
pop
adc
aad
fisubrl
xor
jmp
fidivl
fistpll
xor
mov
inc
xchg
xchg
cmp
fcompl
lods
mov
cmp
movsb
xor
fdiv
ss
dec
mov
xchg
rcl
cld
arpl
fiadds
jp
add
push
jno
sub
insb
test
loopne
rol
aas
or
ret
test
or
xchg
imul
addr16
outsl
pop
push
push
js
push
jnp
push
or
push
inc
sbb
push
cmp
inc
adc
xor
xchg
into
cmp
mov
cltd
mov
repz
fiadds
in
sar
out
dec
in
and
xor
xor
es
adc
pop
and
test
push
scas
mov
jl
les
fwait
dec
mov
push
xor
and
das
xchg
adc
ficomps
dec
push
xchg
mov
pusha
xor
add
dec
mov
and
mov
sahf
cmc
pop
push
repnz
mov
daa
sbb
mov
mov
inc
test
movsl
lds
test
in
jmp
popa
stos
pop
fwait
jne
daa
movsb
shrl
outsl
push
mov
mov
mov
aam
xchg
push
ljmp
leave
mov
jb
out
cltd
out
cmp
jns
out
mov
xor
stc
or
fisubs
je
jmp
pop
push
dec
push
sbb
not
xchg
adc
dec
and
fs
insb
fimull
daa
aaa
or
xchg
push
dec
jbe
ret
add
sti
mov
inc
or
push
out
test
fwait
nop
mov
test
mov
adc
arpl
aaa
and
mov
sbb
fidivs
lret
adc
test
or
cld
xchg
sbb
cmpsb
das
ds
push
jnp
hlt
cld
jge
add
jns
repz
or
int
mov
cmpsl
std
xor
loopne
mov
mov
sbb
fs
xorb
xchg
leave
sahf
pop
pop
sub
mov
popf
pushw
xlat
fldt
ss
cld
mov
mov
stos
mov
int3
in
in
xlat
idivb
sub
ret
cmpsb
cwtl
xchg
inc
mov
pusha
sbb
lret
or
adc
loop
lahf
ja
adc
sub
fcomip
mov
xchg
push
jmp
sub
movsl
outsl
push
sub
dec
test
mov
jae
icebp
out
and
adc
xlat
jecxz
sbb
cmp
cltd
dec
pop
sub
jb
hlt
out
js
xchg
addr16
push
add
les
cli
cltd
loope
cmp
cltd
cmp
xorb
adc
and
ss
mov
push
pop
add
inc
stc
cmpsl
rorl
loopne
pushf
jp
iretw
or
mov
stos
mov
sbb
xchg
outsl
hlt
mov
pop
imull
stos
shl
jno
jb
and
sub
mov
test
inc
xor
je
adc
adc
lret
ret
call
jo
into
cmpsb
adc
or
push
jp
cmp
xor
sti
mov
sarb
dec
or
cmp
and
fidivl
adc
pop
mov
jbe
add
dec
adc
push
pop
ret
call
jle
mov
and
xlat
fwait
sahf
jmp
or
scas
loopne
idivb
xchg
add
loop
and
in
and
and
push
push
mov
addb
repz
cmp
ret
cltd
cltd
xchg
sbb
imul
loop
jl
add
mov
xor
jle
cmp
lahf
pop
add
ficompl
push
pop
call
jb
test
push
add
inc
pop
pop
mov
add
cltd
lahf
fdivl
leave
pop
cmpsb
enter
fnstsw
fwait
pop
xor
add
add
loopne
lcall
mov
adc
addr16
pushf
pop
movsb
mov
xchg
iret
sarl
sbb
loope
loopne
mov
adc
imul
aaa
aad
pop
mov
mov
ljmp
rol
cmp
aad
out
arpl
mov
orb
test
lock
outsl
pop
out
add
sub
fimull
imul
lock
dec
dec
mov
inc
int
add
xor
sub
adc
call
jo
dec
pop
lock
bound
inc
pop
stc
xchg
js
jle
lds
outsl
cmp
xchg
or
insl
and
ja
or
mov
cltd
mov
js
lods
mov
xor
adc
ret
aaa
pop
add
test
mov
xor
test
add
sti
and
sbb
rolb
cmpsb
mov
test
cmc
jo
sahf
lea
loope
push
stos
xchg
lret
jne
jo
stos
sahf
das
and
adc
in
dec
outsl
jne
mov
imul
adc
out
or
mov
int3
call
cmpsb
clc
push
ret
inc
sahf
loop
inc
test
mov
es
nop
cld
xor
sahf
out
mov
pop
mov
iret
or
push
inc
xor
xor
sub
dec
sbb
mov
bound
dec
cmpsb
stc
add
ja
mov
pushf
xchg
jge
mov
cmc
insb
popa
insb
mov
inc
cwtl
pop
push
add
repz
pop
sbb
or
push
cwtl
scas
aas
in
mov
mov
sub
in
mov
insb
mov
dec
in
imul
and
dec
stc
dec
into
mov
fdivrl
push
dec
sub
cmp
inc
test
daa
movsb
pushf
push
scas
lcall
jae
xchg
add
lret
gs
mov
lock
jmp
jnp
arpl
mov
sub
mov
arpl
jle
cltd
aas
cmp
push
popl
dec
xchg
cmp
loopne
xchg
fs
push
jp
jg
addr16
lock
mov
std
fyl2x
jmp
jb
mov
out
addr16
aad
pop
add
push
sar
xlat
add
test
pushf
add
adc
jp
in
pop
cltd
pusha
cld
push
sub
inc
mov
scas
sti
lret
push
push
repnz
subb
add
fstpt
and
lret
aas
mov
mov
push
sub
xchg
lock
add
pushf
mov
les
mov
negl
and
fisubrl
cmpsl
sub
mov
jae
ret
cmc
imul
in
inc
mov
les
lea
or
fisubrl
sub
ja
movsb
jl
insb
ret
xchg
scas
sbbl
orl
mov
ss
sub
in
push
into
push
sbb
push
pop
imul
dec
pop
mov
or
loop
lret
mov
or
fs
ljmp
push
outsl
daa
mov
or
pusha
fsts
fwait
out
jl
mov
stos
shrl
popa
mov
out
movsb
stos
mov
mov
mov
movsb
lss
lods
jae
mov
je
iret
flds
inc
dec
jle
dec
add
arpl
insl
push
push
xor
in
shl
imul
pop
fnstsw
fs
cmp
push
fldt
xchg
adc
out
addr16
sub
shll
sub
notb
lret
dec
icebp
rcrl
pop
data16
mov
je
adcl
div
mov
popl
lds
outsb
dec
add
das
push
fnstcw
adc
into
repnz
cmp
les
fwait
cmp
mov
iret
fwait
or
add
xor
orl
and
cmp
shlw
inc
dec
adc
mov
js
enter
stos
cmc
xchg
jne
es
mov
sub
jl
inc
mov
mov
cmp
lods
ret
mov
scas
pop
testl
pop
cltd
lahf
push
pushf
cmp
xchg
mov
out
mov
add
and
cmp
ret
cmp
je
cmp
pop
insb
or
dec
lds
aad
inc
adc
mov
shrb
stos
inc
aad
sub
xor
mov
outsb
add
or
cmpb
loopne
adc
lcall
jb
loope
lock
cmpsl
sbb
ljmp
loop
pop
ffree
or
push
pop
mov
jle
mov
xor
popf
mov
aaa
cmpl
or
xchg
scas
xchg
mov
aad
imul
ret
xor
out
aaa
das
cmpsl
loop
rorl
fistl
lret
ficoml
adc
ja
pop
add
pop
sbbl
pop
mov
push
subl
sub
loope
fimuls
adc
ret
mov
sub
jg
jmp
mov
in
and
cmp
mov
push
pop
enter
pop
xor
jmp
movsl
inc
shrl
sub
add
ficoms
iret
inc
or
mov
and
repz
popa
test
lds
xchg
ljmp
add
sub
push
out
ss
and
mov
cmc
push
mov
mov
ds
sbb
call
pop
mov
jbe
inc
fwait
lea
xor
sbb
cmpsb
sarb
cmp
push
insb
stc
in
dec
aam
mov
imul
and
bound
jae
mov
sub
push
mov
stc
testb
pop
gs
xor
fadds
xchg
mov
add
sbb
out
imul
jp
jecxz
ss
ljmp
mov
sbb
mov
xor
loopne
or
add
jmp
push
es
cmpsl
bound
clc
fcompl
imul
pushf
enter
cmp
push
sarb
dec
pop
in
fistpl
outsb
push
insb
mov
jecxz
jl
icebp
xlat
aaa
sub
es
adc
mov
jge
dec
mov
dec
cld
inc
mov
loopnew
adc
addr16
mov
ja
dec
sahf
pop
pop
fwait
enter
adcl
bound
cltd
cli
aad
push
stos
mov
sub
mov
sbb
jmp
int
push
cmp
test
mov
shrl
mov
adc
mov
movsb
hlt
sti
pop
loopne
enter
dec
popf
inc
in
adc
cld
lret
fdivrs
mov
movsl
pushf
in
xor
fists
movsb
ds
or
lods
dec
test
divb
or
outsb
je
lret
mov
and
fbstp
mov
sbb
scas
pop
add
lret
aam
sti
cmp
orb
das
mov
xor
add
shrb
clc
aaa
std
or
ja
cmc
add
popa
mov
jge
sub
or
sub
insl
dec
sub
xor
lret
testl
adc
aas
pop
insb
mov
xchg
sbb
mov
lea
pop
adc
fiaddl
xor
imul
ret
js
repz
push
lds
popf
adc
fdivr
daa
pop
test
loope
lods
addr16
mov
incb
popa
xchg
popf
lret
pop
mov
lods
mov
les
sbb
int
fucomip
repnz
sbb
scas
push
das
rcr
dec
xchg
inc
lcall
push
imul
or
inc
cmp
cltd
stc
adc
fidivrs
sub
push
push
add
xchg
test
iret
bound
inc
outsl
shld
inc
lock
xorb
jl
out
pop
addr16
push
xchg
push
fwait
sub
outsb
stos
popf
sub
jnp
popf
adc
xor
xchg
out
cmpsb
sub
stos
or
fwait
lock
loope
movsb
roll
mov
mov
jecxz
inc
pop
lods
jno
jg
test
sub
mov
mov
mov
jp
cmp
loope
fwait
mov
push
cmp
sbb
mov
negl
daa
mov
in
pop
push
stos
jle
adc
icebp
insb
or
sbb
and
jb
fcompl
adc
dec
sub
imul
adc
jnp
xchg
aaa
movsb
dec
scas
push
add
aam
ljmp
mov
jge
sbb
inc
jle
jmp
je
xor
cmc
cwtl
out
cmp
fldt
or
orl
sbb
neg
adc
add
mov
std
cmp
xchg
and
adc
ja
jl,pn
adc
mov
ss
sbb
or
fistpl
add
or
push
cmp
enter
or
ja
imul
and
xor
push
push
fldt
jmp
dec
or
lahf
stos
pop
aaa
sub
sbbb
pop
outsl
adc
test
push
lahf
mov
adc
clc
dec
mov
test
subl
adc
gs
mov
and
xor
fsts
pop
cli
scas
and
movsb
push
dec
fcmovnu
mov
cmpsb
mov
and
push
add
into
mov
mov
je
bound
dec
outsl
shrb
decb
iret
js
test
sbb
div
and
outsb
mov
push
mov
loop
dec
addl
inc
mov
bound
push
cltd
jnp
mov
cmp
inc
repnz
cwtl
mov
lret
hlt
ja
or
pop
in
cmpsl
adcb
push
push
xchg
inc
xchg
xor
lahf
xchg
sub
fwait
xchg
cs
pop
shlb
sbb
into
sbb
dec
mov
push
cs
sbb
or
daa
call
and
and
mov
aaa
mov
xor
push
pop
in
mov
mov
inc
jle
dec
pop
sahf
inc
xor
ja
test
idivb
cmp
push
xor
pop
xor
out
mov
pop
jmp
and
xchg
test
cwtl
pop
jl
add
or
cli
stc
movsl
in
fwait
sahf
push
cmp
pop
jmp
mov
loop
pop
inc
and
out
pop
mov
push
add
stos
cmp
cltd
add
dec
and
xor
mov
adc
push
mov
fmull
inc
outsl
into
add
insb
pop
inc
test
pop
mov
add
sti
sub
xor
jae
jecxz
add
je
lods
mov
cld
data16
dec
sbb
mov
sub
mov
mov
adc
dec
cmp
mov
cmp
loop
repz
out
sbb
mov
xor
mov
sbb
or
insb
out
mov
rcrb
inc
jne
sub
ljmp
add
mov
out
pop
gs
pusha
add
mov
dec
inc
test
orl
aas
pop
xchg
push
cmp
popf
stos
call
mov
or
lahf
and
cmp
mov
sarl
cmpsb
adc
pop
test
jns
mov
sub
pop
pop
lds
mov
mov
inc
dec
lcall
out
les
xlat
pushf
nop
xchg
imul
cmp
mov
adc
cltd
movsb
test
insb
gs
adc
jbe
pop
aam
scas
dec
mov
test
pop
in
dec
push
add
mov
lahf
pop
cltd
push
repz
adc
and
enter
sub
lahf
adc
adc
dec
mov
cmpsl
iret
cmp
ret
int3
rcll
cmp
fcomps
dec
data16
adc
outsb
adc
es
add
mov
inc
lea
ret
xor
out
dec
add
jns
std
sbb
ret
mov
out
test
iret
mov
enter
daa
inc
inc
jecxz
adc
dec
shrb
xor
inc
dec
inc
mov
ds
loope
mov
mov
or
jns
movl
adc
outsl
push
mov
fsubrs
pushf
cld
mov
jns
adc
inc
shlb
cmp
data16
inc
popa
cmp
inc
push
mov
cmp
sbb
lea
rolb
push
dec
mov
jnp
dec
inc
popa
lahf
add
mov
sub
mov
xchg
mov
dec
and
adc
push
sub
test
pop
out
cmpsl
shll
popa
mov
stc
and
xor
push
sbb
and
pushl
cld
pop
testb
jbe
sub
aad
push
jmp
ss
mov
jno
xchg
into
jmp
adc
adc
adc
loope
add
fisubrl
ret
sub
popa
push
cmp
imul
test
cli
faddl
iret
out
inc
stos
mov
and
stos
jmp
pushf
add
loop
and
ds
push
dec
inc
ret
inc
push
mov
xlat
insb
push
movsl
dec
xlat
dec
xchg
sarl
scas
cwtl
xor
inc
fisttpl
lock
mov
ss
int
imul
and
rcll
adc
dec
inc
mov
push
dec
xchg
fldt
inc
loope
push
mov
inc
lods
test
ja
test
shrl
cmp
scas
xor
je
add
aas
and
xchg
push
test
andl
imull
cmp
cwtl
xorl
aam
pop
popa
jae
and
mov
int3
ja
sbb
dec
imul
rcl
and
imul
push
lahf
popf
xor
imul
dec
jl
sub
add
nop
loop
mov
gs
push
mov
addl
pop
adc
rorl
push
insl
add
test
adc
add
lods
pop
jo
push
cmp
add
sahf
mov
mov
pop
roll
and
push
xchg
sub
add
mov
or
popl
fidivs
in
mov
adc
cmp
xchg
jnp
adc
stos
sub
xchg
out
or
movsl
idivb
pop
enter
rclb
dec
pop
or
movsl
fistpll
outsb
add
xchg
sar
hlt
sbb
adc
pop
pop
popf
fs
imul
mov
iret
pushf
mov
ret
cli
loopne
imul
push
mov
jns
andl
fmuls
inc
sub
dec
dec
into
stos
or
and
inc
roll
pop
jg
adc
loop
ds
sub
pop
enter
fstl
stos
adc
inc
xchg
or
xchg
mov
test
mov
dec
es
xlat
mov
mov
inc
add
into
mov
lods
dec
and
push
pop
adc
in
dec
pop
or
and
mov
pop
enter
mov
xchg
rol
outsl
mov
jnp
add
outsl
dec
fcom
sbb
adcl
sub
sbb
hlt
jmp
fisubl
lahf
push
imul
sbb
cmp
sub
sub
or
push
in
mov
jno
rolb
mov
and
imul
in
jns
hlt
push
roll
rep
outsb
xchg
sahf
mov
or
jns
and
inc
jbe
jo
mov
jp
pop
jecxz
or
mov
xchg
pop
jge
or
mov
aad
inc
into
sahf
arpl
and
and
xchg
arpl
mov
test
add
or
les
mov
loopne
xchg
and
icebp
pop
add
imul
repz
xor
xchg
daa
imul
cld
cwtl
insl
vpsubq
das
add
stos
jns
push
mov
cmpsb
mov
jbe
repnz
mov
sbb
cli
into
stc
sub
pop
aaa
push
mov
push
fwait
scas
shrb
pop
xchg
mov
loopne
mov
sub
push
sti
push
mov
push
push
es
push
xchg
lods
or
jge
pop
mov
adc
xchg
aam
lret
les
test
and
je
xchg
jae
fmuls
inc
imul
arpl
adc
mov
pop
shl
xchg
or
mov
ficompl
jmp
xor
popf
pop
jbe
fprem1
int3
mov
xchg
addr16
sbb
adc
mov
push
fildl
repz
adc
sbb
fldt
adc
cmc
or
in
pop
and
jp
and
pop
repz
lock
outsb
mov
add
jecxz
outsl
jecxz
lods
add
dec
vcvttsd2si
xchg
mov
nop
xor
sbb
stos
dec
or
lahf
dec
xor
pusha
pop
mov
xchg
iret
mov
fs
jmp
cmp
cltd
mov
push
loopne
pop
sub
xor
xchg
pop
sub
leave
aas
cmp
dec
outsl
aaa
outsl
xchg
xlat
imul
jbe
xor
loopne
jmp
xchg
rorl
sbb
je
cmp
enter
and
push
jmp
push
gs
mov
repz
gs
sub
outsl
mov
mov
xchg
add
add
xor
pop
in
stos
mov
lock
mov
std
inc
scas
cmp
icebp
loope
jns
xor
mov
pop
out
add
push
rcl
cmp
mov
popa
push
push
cs
lods
fstpt
repnz
bound
gs
push
or
call
in
jbe
mov
pop
aaa
rorl
call
or
sub
sbb
cmp
jne
mov
js
sub
popa
jno
pop
les
pushf
mov
mov
aam
adc
pushf
popa
jmp
cld
inc
mov
enter
push
mov
adc
addr16
cmp
rcl
fisttpl
ret
cmp
jge
dec
cmp
cmp
aam
adcl
in
bound
popf
aam
mov
xchg
insl
ret
fwait
jecxz
sbb
mov
and
push
pop
push
inc
dec
orb
lret
mov
xchg
lcall
xchg
or
sahf
mov
or
sbb
or
sub
xchg
push
xor
dec
xchg
mov
add
fs
mov
jecxz
mov
cltd
inc
rcrl
mov
xchg
adc
les
add
inc
popl
inc
mov
int3
sarb
dec
add
adc
lods
dec
movsl
enter
test
jl
jo
lock
testl
sti
or
mov
aaa
push
lcall
gs
adc
push
pop
xor
aaa
push
dec
movsb
cli
and
inc
mov
std
sub
ret
dec
inc
xchg
clc
std
jp
inc
lods
sbb
sub
add
enter
shrl
into
mov
inc
jb
add
and
out
jmp
ss
xlat
mov
or
push
out
and
imul
movb
pop
fninit
repnz
xchg
xor
sub
and
jl
xchg
fstps
mov
nop
ret
ds
out
sbbb
dec
and
ret
push
outsb
dec
xchg
mov
lds
shll
adc
lahf
insb
clc
sti
clc
add
xchg
jb
cmp
xor
fsubr
in
cmp
mov
mov
enter
ds
sub
lcall
dec
inc
sub
and
aam
roll
push
xchg
cmp
repnz
psubusw
sub
mull
in
jne
jb
cmc
lods
jecxz
leave
jbe
mov
cmpxchg
sub
loop
dec
cmp
adc
cmpsb
or
dec
xchg
inc
mov
ret
adc
int3
jge
xchg
xor
repnz
cli
bndldx
fistpl
xchg
or
repnz
inc
in
push
or
add
aad
jae
push
mov
test
aam
movsl
mov
pop
imull
insb
pop
sahf
xorl
scas
sahf
jo
push
sbb
aas
fbstp
ljmp
pop
std
ja
popf
push
sub
lods
jae
das
orb
adc
mov
pop
inc
push
imul
pushf
nop
add
add
aad
mov
shrl
shrb
xchg
cmc
cmp
and
lds
shlb
fsubrl
adc
leave
bound
sub
and
jbe
inc
ficoms
sbb
repnz
sbb
mov
mov
scas
je
add
inc
lods
stos
xchg
mov
out
and
push
sub
push
dec
dec
lcall
push
pop
je
mov
nop
outsb
push
lock
or
addr16
xchg
shlb
lahf
jp
mov
mov
sbb
add
mov
push
xor
dec
add
inc
mov
aas
sbb
mov
loop
fbstp
les
xor
mov
cmpsl
mov
js
lcall
mov
xchg
xchg
dec
enter
mov
jae
add
imul
pop
lahf
repz
lea
push
ret
clc
aam
and
insb
xchg
rorl
loop
mov
mov
aaa
js
dec
push
je
lcall
sbb
jo
or
fs
in
testl
xchg
cmovo
push
scas
hlt
pop
mov
mov
push
sbb
icebp
or
das
fs
sti
lcall
cltd
in
out
ret
frstor
adc
pop
inc
lods
lds
inc
mov
lahf
or
cli
push
mov
loope,pt
out
jg
sub
int3
jl
jae
inc
dec
xchg
push
loope
pop
aad
jo
aas
jne
sbb
or
or
outsl
into
sub
es
mov
cmp
notl
xchg
mov
pop
xchg
mov
sub
xchg
pop
xorl
sub
xor
jbe
in
js
jo
jmp
adc
sub
fmull
fucom
inc
lahf
adc
and
or
sbb
jecxz
out
aam
loop
cltd
nop
mov
cmp
dec
mov
xchg
jo
adc
add
shrb
jb
pop
cmpsb
adc
sbb
mov
xchg
cli
push
sub
idivl
adc
sbb
pusha
loopne
movsb
dec
scas
push
stos
xor
in
stos
add
pop
mov
adcb
cs
out
dec
cmpsb
lods
jne
mov
dec
xor
icebp
repz
cmc
dec
mov
cmp
inc
push
add
mov
adc
outsb
xchg
pop
fildll
pop
push
and
xchg
ret
mov
sahf
std
pop
movsl
aas
jmp
sbb
cmpsb
add
mov
sub
push
xchg
or
and
and
lods
leave
inc
cld
data16
adc
mov
ret
xchg
mov
push
into
mov
loope
pop
icebp
mov
dec
adc
leave
aas
or
adc
aad
std
jae
jg
ficompl
insb
ds
jo
repnz
cmp
cld
sti
xchg
xchg
adc
ja
or
je
inc
pop
mov
xor
mov
ret
fnsave
rcrb
dec
xchg
push
push
aas
mov
pop
push
inc
stc
sbb
mov
adc
mov
fcoml
fwait
pop
movsl
jl
aaa
dec
dec
mov
cmpsb
sti
cmp
mov
push
push
adc
es
sub
push
ss
push
sbb
mov
inc
cmc
mov
enter
aaa
orl
and
fs
sbb
and
lods
cmp
xchg
mov
pop
test
stc
pop
daa
or
in
sub
insb
imul
jae
imul
fbstp
into
imul
aas
movsb
cli
sub
ret
pop
ljmp
mull
rep
xchg
lea
jnp
lds
mov
pop
repnz
pop
cltd
test
out
repnz
lock
add
xchg
ss
aas
mov
mov
jnp
scas
xor
add
or
fistpl
dec
imul
mov
ss
xchg
roll
mov
dec
sarb
mov
insb
xchg
jmp
xchg
fbstp
leave
and
movsl
or
mov
push
sbb
fmuls
and
lcall
cmp
push
test
jp
mov
jg
jge
xchg
loop
sti
dec
les
sub
mov
jo
js
sub
dec
arpl
test
into
leave
iret
xlat
ret
push
in
frstor
sbb
aam
cltd
lock
and
dec
lret
clc
sbb
xchg
mov
xlat
mov
rcll
xchg
pop
sbb
sahf
jnp
imul
outsb
lea
out
stos
xlat
dec
fsubs
adc
orb
nop
daa
or
cmp
jge
jne
cmp
pop
inc
xchg
cmpsl
bound
dec
scas
cwtl
cmpsb
mov
fiadds
xlat
mov
addr16
icebp
push
pusha
jno
mov
cmp
inc
pushf
lret
mov
mov
cmp
dec
rorb
nop
or
push
push
dec
mov
mov
xor
pusha
in
outsl
inc
jne
stos
mov
and
push
outsl
mov
ja
mov
adc
decb
sarb
adc
mov
sbb
mov
fisubrs
mov
add
icebp
rclb
push
dec
jecxz
add
loop
lret
push
fwait
and
jae
cs
mov
lods
loop
jmp
enter
rolb
mov
and
aas
faddl
xchg
repz
inc
sbbl
test
jno
pop
in
pop
jbe
cld
test
mov
or
mov
outsl
test
mov
add
lret
iret
cmp
and
cmp
jbe
inc
enter
loop
or
or
cmc
push
push
rorl
inc
mov
mov
aas
sbb
xlat
fstpl
cmp
push
inc
cmpsb
sub
push
cmp
gs
andb
push
and
es
pop
or
sbb
jmp
shlb
fdivs
ror
sbb
dec
adc
xchg
mov
les
inc
mov
pop
jmp
or
dec
ret
iret
es
mov
and
jg
lcall
pop
jl
jne
mov
jg
mov
xor
adc
xor
adc
push
mov
xchg
xor
push
stc
or
pop
stc
inc
adcb
ret
ret
inc
pusha
loop
mov
daa
cltd
jnp
pop
repz
add
dec
int
es
jecxz
imul
add
outsb
popa
imul
mov
xchg
and
dec
mov
inc
jbe
and
push
pmaddwd
lahf
push
mov
hlt
stos
cmp
sahf
pop
scas
imul
dec
xor
mov
xchg
cmp
rorl
and
lods
inc
jge
popf
and
push
cmp
xor
and
jnp
loopne
and
jae
sbb
adcb
cmp
sahf
pop
add
sub
mov
loope
sahf
mov
gs
xchg
and
adc
out
add
push
xlat
shl
sbb
mov
popf
push
mov
pushf
je
xor
adc
movsl
mov
dec
push
sbb
adcb
out
lods
inc
push
enter
sti
andl
mov
adc
xchg
cli
cld
lods
mov
cmpsb
in
jae
mov
lsl
cmp
dec
mov
sub
loop
xor
in
loopne
push
imul
rcrb
orl
mov
sub
add
cs
pop
stos
dec
add
test
xchg
fadd
lods
fstpt
mov
es
imul
in
popf
sti
cld
push
sbb
dec
inc
in
xor
fiadds
mov
jno
xor
xchg
sbb
lcall
cltd
cli
mov
add
sti
popf
out
test
xor
sub
push
in
mov
or
loopne
cmpsl
adc
sbb
loop,pt
orb
enter
bound
mov
mov
mov
test
add
dec
loope
sbb
or
or
mov
push
cmp
mov
jo
bound
aaa
adc
xchg
add
insl
out
and
shrl
mov
sti
xchg
fisttpll
pop
inc
ret
out
adc
pop
aad
out
or
cmp
cld
stc
cwtl
mov
int3
mov
cmp
lods
mov
mov
xchg
fadds
push
jnp
xchg
lds
pusha
shlb
ret
clc
cmp
stc
pop
stc
andl
in
mov
imul
pop
dec
inc
into
pop
aas
popf
sbb
leave
push
dec
dec
xor
call
rclb
mov
mov
or
stc
aas
dec
scas
loopne
jno
call
ja
lock
push
jne
inc
mov
mov
push
sbb
sub
cwtl
das
inc
mov
inc
addr16
and
or
mov
add
lret
jne
stc
jns
sbb
adc
andb
sahf
and
lcall
fisubrl
cld
sti
int
ficoml
xor
pop
push
aam
in
into
or
cmp
mov
mov
jne
mov
cmpsl
pop
dec
mov
pop
fst
shufps
jmp
mov
lret
pop
ret
es
imull
dec
fbstp
cwtl
pop
mov
push
ds
mov
push
push
cmpsb
or
and
andb
cmp
sub
outsb
out
mov
outsl
dec
xchg
ja
inc
movsb
roll
adc
lods
fsubrl
fsubl
addr16
mov
pop
jbe
pushf
inc
cld
or
outsb
dec
icebp
cmp
fwait
or
addr16
test
mov
fcomp
mov
inc
add
test
cmp
mov
push
lea
outsb
xchg
jbe
adc
ljmp
cmp
pop
adc
mov
iret
adc
push
dec
sti
sbbb
ficompl
dec
mov
pushf
and
sbb
aad
stc
xchg
sub
xor
or
loope
sub
mov
into
sub
adc
cmpsl
inc
mov
test
xchg
inc
dec
inc
push
jmp
mov
cltd
mov
imul
xor
or
stos
int3
lcall
push
push
sub
dec
mov
jge
lret
pop
cli
xchg
cmpsb
dec
daa
mov
lods
dec
ret
sahf
pop
pop
cmp
inc
xchg
mov
daa
addr16
add
popa
cwtl
xchg
in
std
hlt
into
scas
test
xchg
pop
jmp
sbb
lock
inc
jae
pop
push
bound
xlat
xchg
gs
sahf
lret
cvttps2pi
jns
cmp
scas
mov
xchg
mov
out
lods
sbb
or
or
test
adc
xor
push
push
push
lds
xchg
stos
repnz
jle
pop
pop
adc
jl
mov
shrl
adc
or
pop
sub
call
pushf
xor
icebp
shrl
xor
lret
xor
push
jae
adc
xchg
mov
sar
pop
lea
mov
jecxz
lods
xchg
les
xlat
adc
xor
and
fwait
mov
dec
std
es
pop
lret
jbe
jnp
jo
inc
icebp
lock
test
adc
es
mov
cmp
rolb
movsb
pop
nop
pop
rclb
mov
pop
xchg
dec
pop
mov
cmc
cs
mov
es
mov
adc
mov
or
dec
mov
push
fcmovnu
ds
inc
cmp
jo
aas
jle
mov
mov
mov
xchg
repz
inc
imul
fptan
addr16
aad
ret
cmpsb
cmp
repnz
jp
jge
sub
add
iret
ja
xchg
add
and
or
mov
int
imul
or
lret
ficomps
aaa
rclb
push
pushf
and
cli
addr16
aad
out
jg
add
pop
push
aam
lcall
push
dec
pusha
cmc
and
jl
iret
cli
lret
out
and
and
inc
sbb
xchg
and
xor
out
mov
daa
push
rcrb
jne
ja
popa
icebp
in
cmp
std
nop
ret
sbb
rcrb
inc
xchg
pop
sub
ja
push
jg
lret
cmp
aad
ss
fwait
xchg
leave
mov
cmp
adcl
pop
xchg
dec
frstor
in
repnz
rcll
loop
or
or
in
sbb
jns
repnz
fcompl
call
add
popf
dec
test
movsb
mov
repz
xor
push
out
scas
addr16
aas
in
jmp
xchg
daa
and
insl
ds
mov
cltd
add
fcmovne
and
pop
lahf
mov
dec
or
pop
lods
lcall
xor
cltd
pop
repnz
xchg
bound
xor
sub
das
mov
shll
inc
lret
xchg
popf
jnp
cwtl
jp
into
test
stc
dec
pusha
cmpsl
adcb
jecxz
mov
test
imul
sbb
roll
mov
inc
push
jae
xor
in
hlt
das
sbb
push
stc
out
mov
mov
out
pop
stos
js
xchg
pop
pop
imul
cltd
mov
lea
dec
test
mov
fildl
sub
mov
mov
mov
or
sub
sub
inc
xor
movsl
call
lods
scas
dec
add
jbe
mov
xorl
and
aaa
pop
arpl
mov
push
dec
xor
cmp
dec
nop
aam
mov
fwait
mov
xor
dec
and
xchg
sbb
mov
test
fwait
xchg
push
or
fcomi
mov
cmp
mov
mov
push
test
ret
adcb
fcoml
mov
mov
test
mov
aas
es
xor
jl
andb
mov
sbb
clc
movsb
fstl
adc
fisttpl
lock
dec
das
enter
jo
xchg
mov
jge
mov
xchg
mov
enter
jne
fistpl
out
insl
out
sub
outsl
lds
pop
add
mov
adc
add
in
ds
cld
push
xchg
aas
xchg
sbb
dec
mov
pop
mov
lea
fistps
pop
outsb
dec
rcrl
and
push
fnstsw
mov
rcrl
sub
sbbb
pop
out
rorb
xor
lods
dec
js
jae
push
xor
mov
fisubl
ret
push
mov
inc
cmpsl
call
std
jle
test
enter
jnp
and
pusha
roll
pop
pop
stos
or
scas
ret
sti
sub
xchg
sbb
clc
add
popa
mov
inc
dec
test
jecxz
sbb
loope
adc
popf
and
fists
cmp
push
frstor
mov
push
xor
jno
cmove
xchg
arpl
pop
lock
mov
incl
lahf
data16
pop
dec
inc
and
sbb
shrb
xor
pop
sbb
cltd
inc
and
inc
cmc
mov
mov
addl
lods
sahf
jle
daa
ret
bound
fldl
insl
nop
das
test
mov
loop
in
mov
sbb
dec
add
mov
lret
xchg
or
mov
mov
aas
xlat
push
popaw
and
cltd
les
dec
mov
lcall
push
shr
push
push
stos
pop
ja
ja
scas
stos
fistps
xor
pop
into
scas
cmpsb
add
dec
aad
mov
loopne
mov
iret
cmp
add
xchg
or
int
xchg
lock
test
dec
add
loope
push
add
sbb
cwtl
dec
sbb
imul
scas
adc
lret
fwait
xchg
inc
int
sub
sbb
jl
push
push
imul
adc
mov
or
imul
loop
pop
in
cltd
data16
test
add
inc
push
enter
xor
in
adc
les
in
add
cld
lods
add
jne
pop
xchg
xchg
decl
fsts
lahf
rep
out
or
mov
pop
add
mov
arpl
mov
xchg
test
fnstsw
mov
mov
xchg
xlat
in
sbb
xchg
movsl
arpl
and
add
imul
outsb
aam
call
mov
sub
shlb
cmp
pop
mov
shlb
aam
xchg
adc
sbb
xor
or
pusha
aaa
add
mov
mov
push
and
les
sbb
dec
dec
xor
dec
xor
push
dec
out
adc
cmp
negb
xchg
sbb
xor
jnp
mov
cmpsb
pop
hlt
aad
cmp
or
pop
pop
sub
or
mov
clc
call
fdivl
jp
test
pop
push
scas
testb
lea
jle
jmp
clc
mov
loop
test
push
clc
mov
adc
mov
imul
jl
pop
cld
daa
adc
dec
insl
rcll
inc
adc
push
push
jecxz
add
loop
rcrb
cmp
ja
mov
sub
xchg
xchg
in
bound
lock
or
ds
movntps
push
stos
test
rolb
sti
loopne
or
sub
inc
mov
lret
inc
ljmp
pop
mov
and
jae
jle
and
dec
aas
sbb
adc
pusha
push
stos
sub
push
imulb
das
test
cmc
inc
rcr
mov
std
inc
call
outsl
xchg
rcrb
cmpsb
jae
cmp
or
adc
pop
icebp
stc
push
mov
mov
mov
aam
pop
dec
push
mov
ret
movsb
cmpxchg
add
lods
lahf
fdivl
pop
test
mov
dec
mov
int
fistpl
sub
and
jbe
jb
cmpsl
add
mov
jb
mov
loope
jns
and
mov
insb
gs
daa
call
rcll
sbb
mov
adc
sahf
pop
pop
sbb
or
int
cltd
cmpsb
mull
addr16
pop
jle
dec
daa
xor
stc
push
out
sbb
pop
and
fisttpl
or
pop
cmp
and
neg
movsl
js
int
outsb
dec
xorl
push
xorl
and
mov
push
jae
ds
aaa
mov
sbb
lcall
jp
pop
cwtl
fstpt
mov
cmp
jecxz
lret
jb
jg
add
jb
jb
je
dec
fs
mov
out
adc
jecxz
sarl
pop
aam
lock
xchg
rclb
ljmp
pusha
mov
jl
mov
bound
push
jno
jl
adc
dec
mov
popa
enter
fwait
push
popf
roll
dec
jp
dec
push
cmovg
pushf
pusha
pop
push
adc
sub
sbb
mov
in
sub
and
mov
dec
pop
fdivrl
jg
push
shl
mov
test
je
fcoml
loop
ja
outsb
dec
fidivl
adc
outsl
aam
or
lods
sbb
push
gs
outsb
bound
mov
stos
lock
jmp
sbb
ds
aad
jae
stos
jbe
push
addr16
loopne
ja
dec
xor
mov
aam
mov
shrl
jno
movsb
movsl
ja
pop
inc
add
inc
cli
shl
sbb
push
pop
or
pop
clc
jno
addr16
sub
xchg
test
push
aad
ret
enter
pop
pop
add
test
aad
ret
pop
push
loope
fidivrl
testb
add
adc
add
mov
cmpb
lea
popf
daa
and
cmp
rclb
es
mov
test
mov
divl
or
add
mov
pusha
fcmove
idivb
sbb
adc
inc
xchg
sbb
clc
jecxz
es
xchg
lahf
xor
or
or
push
outsb
push
stc
mov
cmp
sbb
ret
sub
js
pushf
mov
out
adc
mov
push
xchg
mov
daa
stc
inc
jnp
pop
mov
dec
enter
mov
pop
xchg
in
out
dec
and
jl
stc
cmp
fisubl
inc
stc
inc
jns
push
xor
mov
es
inc
cs
cmp
or
incb
popa
sbb
or
adc
loope
adc
cmp
xor
fisubrs
xlat
orb
dec
dec
fnsave
cmc
in
js
mov
lock
aaa
dec
data16
add
aad
rcrb
or
inc
cmpsb
mov
inc
and
loopne
stc
mov
addb
imul
sub
in
in
out
dec
call
test
jno
mov
mov
cltd
mov
xor
jmp
mov
adcb
loope
repnz
fmulp
fwait
cmpsl
sbb
int
pop
sbb
or
fdivrl
clc
xchg
std
outsb
mov
insb
jno
sub
int
aam
enter
loop
xchg
into
cmp
fwait
pop
adc
dec
xor
push
mov
mov
mov
xchg
test
inc
lret
ret
pop
push
cltd
sub
sbb
mov
in
sbb
or
mov
lahf
mov
add
mov
js
ss
jg
and
std
fsubrs
in
xor
filds
mov
xchg
cli
fnstcw
rcrl
jbe
sbb
roll
ret
or
mov
out
dec
xchg
adc
jmp
aad
xchg
sub
lcall
ftst
aad
test
mov
jne
cmp
jae
ficoml
aaa
cmp
repnz
out
bound
std
push
jg
cld
dec
mov
aad
jmp
js
pop
movsl
pop
mov
aas
testl
enter
xor
sbb
cmp
rorb
je
mov
cwtl
and
inc
lret
fdiv
cmp
inc
add
out
shll
loope
data16
imul
pop
mov
mov
push
pushf
shlb
jae
mov
outsl
pop
mov
aas
ret
dec
sahf
movsl
adc
test
loopne
mov
mov
jmp
into
and
loop
bound
jno
xor
push
test
xchg
jg
mov
hlt
push
mov
sub
lods
jne
xchg
mov
cmpsb
mov
mov
rorl
clc
mov
xchg
jl
divb
inc
aam
jge
test
push
adc
mov
sbb
sar
adc
mov
movsb
pop
mov
mov
sbb
xor
aad
gs
dec
xor
xchg
int
js
pushf
cltd
stos
aas
sbb
aaa
outsl
scas
ja
sbb
dec
mov
mov
imul
adc
loopne
sbb
mov
or
xchg
sbb
push
frstor
sbb
dec
lock
add
lahf
or
imul
inc
mov
dec
mov
pop
cmp
popa
ror
enter
xor
shl
mov
fs
loope
outsl
fnstenv
sub
arpl
cwtl
mov
es
jp
pop
push
roll
ljmp
rorl
addr16
imulb
xchg
mov
loopne
jle
pop
cltd
aam
test
push
fidivrs
movsl
insl
in
scas
dec
mov
movsb
mov
xor
hlt
cmpsb
push
inc
leave
sti
mov
adc
push
mov
out
mov
sti
lds
push
js
or
repz
aad
fcomps
jmp
inc
pop
mov
mov
mov
shlb
stos
fsubr
cli
ds
or
loope
sbb
out
mov
in
rcrl
pop
pushf
nop
outsl
xchg
or
pop
jl
hlt
lods
mov
pop
push
add
popa
fnstenv
popf
and
push
sbb
int3
call
jmp
inc
jbe
xor
jmp
dec
cmp
add
inc
into
ss
push
arpl
jnp
div
jge
imul
std
leave
js
inc
xchg
inc
or
fnstsw
push
cmp
aas
imul
mov
icebp
sub
pop
mov
jg
xchg
sbb
inc
mov
mov
loopne
int
cmp
call
inc
jns
dec
andb
int3
scas
fbld
push
pop
loop
xchg
xor
or
push
xor
adc
loope
int
mov
and
movmskps
pop
push
xchg
pushf
movsb
mov
loop
xchg
jmp
nop
cltd
dec
mov
enter
test
sar
push
inc
mov
dec
mov
inc
lea
div
add
mov
jb
inc
cmp
or
and
adc
ret
pop
xor
jnp
ljmp
jbe
ja
rol
push
add
adcl
cmp
mov
or
pop
and
and
xchg
imul
imul
mov
fisubrl
repz
jmp
ds
out
or
scas
adc
into
mov
lahf
add
daa
lock
call
clc
stos
in
das
pop
lret
mov
push
rcl
lock
xor
in
adc
out
xchg
scas
and
mov
fwait
stos
lds
jmp
lcall
shrb
mov
out
pop
ss
xor
push
dec
sbb
fistl
cwtl
loopne
mov
repz
and
std
sub
popf
loopne
call
rcll
in
movsb
push
aam
adc
das
mov
pop
scas
push
and
ret
fs
pop
sbb
xchg
dec
push
xchg
fstps
popa
xor
xor
cmpsl
repz
sbb
xchg
jbe
mov
pop
mov
adc
iret
pop
sti
js
scas
jle
mov
or
in
pop
cmp
lods
adc
push
cmp
adc
dec
or
repz
xchg
xor
icebp
aaa
in
aad
sti
push
sbb
inc
cmpsb
xchg
xor
fistpl
add
insb
xchg
jmp
pop
std
cmp
shl
out
out
std
or
fistl
xchg
data16
imul
lret
cs
inc
loopne
loopne
in
mov
aam
aaa
loopne
xchg
cmp
push
cmpsb
adc
mov
out
xchg
in
mov
int3
xchg
shlb
sbb
mov
push
pushf
rol
loopne
lds
pop
pop
mov
jo
xchg
js
scas
mov
mov
xor
pop
into
add
pop
jo
jns
pop
fcoml
add
xchg
mov
jmp
clc
sbb
lcall
inc
push
sbb
outsb
aaa
lret
mov
repz
popa
outsl
jb
nop
dec
or
aad
cmp
aad
pop
inc
ljmp
lcall
jns
pop
outsb
outsb
leave
fs
sbb
push
lahf
sub
xchg
insb
loopne
mov
ds
push
jns
inc
mov
pop
fdivs
in
mov
sub
pop
icebp
lahf
inc
dec
mov
add
xchg
xor
mov
dec
push
je
add
pop
add
inc
popf
pop
jmp
rorl
roll
test
outsl
xchg
test
in
dec
xchg
imul
gs
movsb
cmp
dec
push
jbe
popf
insl
pop
lret
sahf
pop
cld
jns
aam
mov
jp
rcr
rorl
test
adc
push
jg
push
lret
arpl
jo
shlb
jnp
div
cmp
dec
push
sub
jl
xor
jp
jae
sub
js
inc
sub
nop
cli
fildll
inc
pop
pop
pop
push
out
xorb
dec
sub
pop
popf
call
out
pop
test
inc
or
rcrb
add
mov
inc
jno
or
xchg
pop
cli
jbe
fisttpll
dec
movsl
sbb
and
dec
pop
in
imull
push
and
inc
mov
les
pop
dec
mov
pusha
mov
add
or
xchg
cmp
aaa
jno
xor
clc
sti
nop
mov
lods
scas
mov
cwtl
cmp
cld
or
adc
mov
sarb
arpl
cmpsb
mov
pop
jecxz
repz
pop
sbb
shll
cmpb
jp
sub
pop
pop
sub
mov
jno
mov
int3
add
adc
jl
cmpsl
es
mov
pop
cli
sub
dec
inc
cmc
decl
dec
add
repz
xor
out
dec
frstor
add
mov
cmpsl
pop
outsb
stos
pop
push
je
or
dec
pop
sub
jnp
bound
out
mov
jmp
sahf
sbb
dec
insl
push
in
inc
test
sub
xor
pop
aas
outsb
push
pop
push
aaa
loop
pusha
das
xchg
xlat
cli
jp
jbe
scas
nop
xchg
clc
test
fstl
rcrb
sub
mov
jg
rorb
mov
adc
lock
std
outsl
repz
pop
fsts
jne
lahf
xchg
adc
xchg
cmpsb
and
pop
mov
shll
pushf
jo
aas
jb
xor
pop
xchg
cmpsb
jge
dec
xor
jmp
ds
dec
sub
mov
cmc
lret
aas
incl
shlb
mov
dec
mov
xchg
andb
mov
mov
mov
pop
jmp
mov
cwtl
cli
imul
fs
and
addb
jbe
movsl
pop
rorb
mov
sahf
push
push
icebp
jb
xchg
pop
cmp
icebp
enter
gs
mov
loop
sub
shll
ffreep
loopne
mov
out
sarb
mov
push
push
bound
imul
xchg
cmp
push
in
mov
ret
ljmp
add
mov
jo
mov
push
pop
in
pop
inc
adc
or
bound
das
dec
cmp
xchg
in
loope
ds
mull
push
faddl
sub
imul
adc
push
fadds
and
roll
push
cli
insb
mov
scas
es
addr16
cvtdq2ps
xchg
cs
mov
das
mov
jo
or
sbb
sbb
fnstenv
int
pop
cmpl
jg
cmp
rorb
aam
jmp
inc
fnstenv
push
cmpsl
nop
xchg
xchg
and
sar
ja
in
push
inc
add
loopne
jo
rcrl
cwtl
mov
and
adc
notl
sarb
daa
outsb
cmp
dec
add
cmp
mul
pop
mov
call
cmp
add
and
cld
leave
mov
popf
ja
ficoms
cmpsl
aad
dec
call
xchg
pop
arpl
mov
es
out
dec
sti
mov
mov
sub
jns
mov
loopne
pop
xlat
repz
lods
pop
jmp
rolb
add
gs
lret
push
add
in
sub
adc
or
xor
mov
jne
jo
rcrl
inc
repz
xor
cltd
out
pop
ja
sub
push
in
ljmp
add
adc
mov
dec
cltd
add
jmp
pop
aas
cmp
push
notb
push
adcl
daa
or
mov
mov
dec
pop
mov
push
mov
fdivs
push
push
lods
sahf
mov
adc
cmp
cli
sbb
add
out
jbe
fildll
in
jno
decb
lods
push
ret
or
mov
scas
mov
cmpxchg
scas
push
movsl
nop
jge
lcall
lret
jns
pop
daa
or
js
jnp
filds
popf
fwait
jmp
jp
jl
out
int
mov
aam
xor
cld
outsl
cmpsb
push
add
fldl
dec
jl
push
sahf
andl
rcrb
sti
and
out
jbe
mov
in
rclb
jg
aaa
pop
test
rolb
je
dec
int
xchg
mov
popaw
lret
mov
popf
mov
test
dec
fdiv
jo
jge
mov
lea
loope
bound
repnz
push
dec
sarl
xor
mov
rcl
iret
enter
xchg
movsb
cmp
shrl
les
xor
xchg
fwait
gs
jmp
cmp
inc
pushf
cmp
cmpl
arpl
aas
xlat
and
and
stos
xchg
jle
mov
mov
jl
xchg
fwait
push
sahf
mov
or
xor
push
sbb
mov
lea
scas
cltd
fsts
stos
negb
dec
and
push
imul
jbe
or
fcoms
add
enter
push
ret
movsl
lods
cmp
mov
sbb
sahf
and
sbb
fincstp
sbb
stos
add
xchg
add
xchg
mov
sub
sub
out
call
stos
call
stc
stc
arpl
fidivs
jecxz
mov
mov
lods
stc
mov
inc
insb
dec
xorb
lahf
decb
pop
aaa
mov
repnz
pop
xchg
in
filds
outsb
sbb
push
fists
jae
test
mov
jb
inc
xchg
int
fs
mov
push
mov
push
negl
es
add
loopne
out
cmp
cwtl
stos
daa
bnd
xchg
xchg
fldl
repnz
stc
popa
test
dec
cmp
ror
cli
jge
xor
popa
inc
lahf
mov
mov
aaa
mov
sahf
adc
mov
andb
mov
sti
mov
lods
or
ds
add
mov
pop
or
cmc
ja
loope
cltd
inc
adc
popf
es
mov
arpl
fstpt
je
or
lahf
sub
addr16
nop
xor
mov
dec
xor
inc
and
fs
xor
mov
lds
mov
cmp
in
in
lods
rolb
dec
or
push
dec
push
shl
std
mov
jge
mov
jne
mov
pop
or
add
fsubl
fiadds
insl
into
fdiv
dec
mov
cmp
dec
sahf
pop
nop
cltd
pop
jae
repz
imul
adc
cmc
ja
arpl
jecxz
rcl
add
loope
lds
pop
mov
lods
mov
xchg
iret
movsb
and
inc
ja
je
lods
jb
xchg
stc
and
mov
movsl
cwtl
adc
xchg
lods
and
sbbl
jbe
push
or
lret
les
leave
push
mov
dec
jbe
addb
inc
xlat
aaa
mov
test
sar
xor
in
ret
inc
dec
xor
add
in
mov
mov
push
sub
pushl
push
popa
jbe
sbb
loope
or
movb
sahf
incb
cli
cli
xchg
mov
dec
dec
jae
cmp
pop
fcmovu
ljmp
jecxz
popf
cs
out
out
repz
imul
icebp
lods
loope
jnp
pushf
push
sub
inc
mov
lods
stos
adc
ds
sarl
mov
or
div
inc
sub
sbb
mov
enter
sub
inc
push
mov
fildl
scas
xchg
bndstx
mov
sub
cltd
jno
fsubrp
jl
mov
sub
hlt
cwtl
mov
fs
adc
dec
push
iret
ja
sti
mov
orl
adc
push
nop
mov
pop
mov
inc
push
mov
xchg
sbb
jp
cmpsb
test
pop
mov
aam
bound
jle
cmp
or
loop
push
popa
in
idivb
jbe
mov
invd
idivl
or
mov
inc
xor
mov
mov
pop
push
insl
test
insb
xchg
cmp
xorb
cmpsb
cmp
mov
nop
lods
fdivl
jo
mov
std
xchg
push
popa
xlat
mov
push
mov
or
jo
mov
rclb
xchg
outsb
cmovg
nop
pop
test
fimull
cmpsb
inc
les
lods
add
dec
stc
xor
cmp
add
xchg
sub
lret
and
push
inc
push
adc
mov
xchg
aad
adc
push
xor
mov
sbb
jg
jp
push
xor
push
inc
notb
add
mov
lcall
aaa
scas
jns
cmp
xchg
sbb
pop
shll
les
sbb
pop
cmp
cli
push
out
xor
or
pop
xchg
add
fadds
push
addr16
cld
cmp
std
lods
and
pop
inc
cmp
push
lock
dec
rol
jae
dec
xor
sub
lcall
or
xlat
sti
xor
dec
sbb
xchg
mov
xlat
lds
push
pop
jle
and
mov
arpl
cwtl
out
andb
mov
cs
mov
aad
das
cs
inc
push
dec
ficoms
rclb
loopne
lcall
movsl
jno
xchg
pusha
and
jo
push
inc
inc
notl
mov
adc
xchg
xchg
arpl
jmp
cmp
pop
daa
les
mov
or
xchg
lods
jg
ds
mov
inc
push
jp
and
jb
test
and
cmp
cwtl
xchg
shrb
mov
dec
adc
fcomip
xchg
xchg
rorb
xchg
repz
subl
lods
adc
push
dec
cmp
out
aad
adcb
das
rorb
push
sub
adc
or
dec
xor
cmp
xchg
paddq
xor
cvtps2pd
pushf
sub
inc
pop
data16
and
and
cltd
xor
mov
pop
lods
push
inc
idivl
pop
mov
fwait
mov
sbb
mov
mov
sbb
insb
fisubs
dec
inc
gs
mov
mov
sbb
fwait
dec
addr16
pop
pop
lahf
mov
daa
mov
lock
xchg
and
pop
ja,pt
daa
lds
inc
andb
arpl
sti
xlat
cmp
push
sub
or
lret
inc
cmpsb
adc
insl
and
and
or
stos
ds
pop
pop
dec
lock
adc
addr16
icebp
xchg
popa
push
mov
bound
mov
xor
xchg
addr16
lock
push
dec
xor
push
or
pop
sbb
jne
jecxz
js
dec
push
push
fwait
add
out
cmpl
aaa
loope
fwait
aad
xor
fs
dec
fsubrl
leave
pop
xchg
mov
pop
inc
pop
pop
outsb
daa
pop
repz
fisubrl
mov
daa
add
mov
mov
jbe
mov
in
inc
scas
out
lret
into
jg
push
jae
xor
push
insl
pushf
jb
daa
call
dec
lock
int3
daa
in
jno
in
loop
xchg
mov
mov
popa
mov
mov
arpl
out
loope
enter
add
mov
jle
sub
mov
into
hlt
mov
cmp
jge
jno
pop
ds
negl
call
lahf
add
jno
mov
adc
sub
std
sub
fwait
bndstx
xor
xchg
pop
ret
sub
shrd
mov
xchg
icebp
bound
shlb
mov
loop
mov
addb
push
das
jns
sub
stc
loope
push
and
inc
call
jns
ret
lds
jbe
add
mov
loop
dec
sub
nop
cwtl
dec
jp
js
and
sti
sub
hlt
mov
subl
cld
ds
sbb
mov
push
int
pop
mov
jb
fstps
cmp
stos
ljmp
adc
or
fsubs
dec
repnz
cmp
test
sarl
cmc
add
inc
fadds
inc
outsb
mov
test
inc
jo
xor
xchg
ljmp
pop
ret
mov
push
jmp
imul
aad
dec
pop
mov
sbb
lds
sub
out
xor
xor
fimull
dec
in
std
shll
mov
imul
dec
mov
loopne
arpl
cmp
cmc
mov
sbb
popf
rorb
jno
cld
shlb
xchg
inc
adc
jae
dec
mov
xchg
loope
cli
out
rcll
xor
std
or
cmp
hlt
adc
cld
mov
cmp
fcmovbe
out
sbb
ja
lret
jg
mov
imul
jb
enter
sub
out
dec
shll
sub
push
mov
inc
push
adc
xor
mov
stos
pop
loope
jns
adcb
push
mov
int3
cmp
push
shlb
popa
outsl
add
jo
ljmp
pop
stos
in
pop
je
lods
jne
call
add
mov
pmuludq
iret
fldl
pop
ds
iret
std
ss
pop
mov
and
adc
add
flds
jnp
fisttpll
add
test
jns
js
add
or
add
jb
ljmp
movsl
jbe
inc
xlat
jp
adc
and
and
sbb
mov
sub
loopne
std
sbb
bound
into
jl
test
leave
push
inc
lods
xor
or
mov
xchg
in
inc
in
mov
les
pop
ja
jns
divl
daa
push
lret
push
daa
mov
clc
push
and
add
xor
jmp
mov
cmp
push
shll
inc
and
sub
jmp
cmp
lahf
ret
inc
xor
fs
or
punpcklwd
jo
inc
pop
stos
sbb
lods
in
jp
add
add
mov
inc
inc
in
inc
mov
xchg
es
data16
inc
jmp
push
adc
call
clc
sbb
mov
push
inc
mov
fwait
dec
push
fwait
mov
xor
sbb
inc
jle
sbb
pop
xlat
pusha
ljmp
or
adc
xchg
hlt
xchg
mov
out
xchg
add
sub
bound
adc
xchg
out
sub
cwtl
mov
sub
mov
test
jnp
cltd
push
push
aad
fcoml
mov
pop
loopne
jge
jecxz
adc
inc
add
mov
sbb
je
jbe
repz
leave
mov
jnp
mov
into
rcrb
addr16
cld
nop
dec
push
pop
inc
into
xchg
out
sub
and
loope
bound
negl
lahf
mov
popf
add
int
test
adc
jnp
xchg
addl
sub
sbb
push
test
popf
pop
mov
push
gs
aam
das
dec
icebp
clc
dec
loope
aaa
pop
sti
lret
mov
shl
js
mov
std
lcall
imul
xchg
cmc
daa
xlat
rclb
insb
sarl
test
mov
aas
cmp
cwtl
sbb
xchg
ficomps
loope
nop
vpunpckldq
push
dec
stc
daa
out
imul
and
xor
mov
adc
idivb
add
mov
jnp
mov
and
fldl
sarb
out
mov
into
pop
pop
testb
hlt
mov
insb
sub
xor
xor
div
mov
stos
inc
dec
mov
mov
xor
sbb
test
das
ds
jmp
mov
rclb
pop
orb
adc
stos
aas
and
imul
enter
mov
lahf
jg
leave
push
pop
outsb
mov
std
mov
mov
fldt
nop
nop
leave
imul
in
fists
jmp
ja
adc
jno
cmp
add
arpl
inc
push
out
add
xchg
sbb
dec
mov
stc
jnp
jecxz
daa
fidivl
pop
lds
outsl
fwait
mov
dec
hlt
ret
xchg
subb
pop
in
popf
stos
cwtl
sub
arpl
and
inc
add
popa
xor
pop
cmp
shlb
xchg
sub
push
imul
arpl
push
cmpsl
aaa
jnp
dec
lods
ret
cmp
fstpl
xor
adcb
ljmp
cmp
sub
push
std
repnz
into
ficomps
xor
xor
lds
push
mov
dec
jp
enter
mov
stos
shll
je
mov
pushf
pop
in
notb
cli
push
add
out
add
mov
xchg
push
mov
fstl
les
pop
repnz
mov
cld
lods
mov
out
mov
pop
stos
inc
dec
stos
cmovnp
xchg
add
pop
ljmp
data16
nop
or
sbbl
dec
cmp
es
adc
push
mov
fildll
lret
inc
lds
mov
bt
mov
lea
ja
push
mov
mov
loop
mov
subl
fwait
insb
sbb
lock
out
dec
dec
xchg
repz
js
std
sbb
pop
lds
pushf
dec
mov
pop
fstpt
pushf
clc
ljmp
movsb
mov
xlat
std
cld
adc
jb
adc
in
jo
out
xor
adc
rcr
lahf
mov
xchg
xor
cmpsl
inc
xchg
mov
inc
inc
in
test
mov
and
dec
mov
loope
push
aaa
inc
dec
movsb
lret
cmc
lret
push
daa
xor
add
adc
shrb
jnp
mov
bound
add
mov
xchg
movl
mov
rorl
lret
and
or
or
roll
push
in
mov
andl
mov
and
pop
loopne
test
dec
ret
inc
loopne
mov
cmp
daa
xchg
ror
xchg
jne
ljmp
jbe
lea
lock
jb
imul
jge
movsl
push
int3
pushf
add
ret
xor
and
lock
add
sbb
pop
data16
js
sbb
scas
cmp
fbstp
inc
mov
data16
sub
dec
addr16
inc
cmpsl
loopne
sub
mov
fidivrs
mov
pop
jmp
iret
enter
insl
outsl
jl,pn
divb
cmp
mov
nop
push
and
and
jg
mov
lahf
out
sbb
adc
popf
jecxz
sub
stc
inc
movsb
sbb
and
hlt
xorl
mov
inc
push
imul
es
jns
jmp
xor
es
sbb
inc
lock
into
inc
xor
push
imull
hlt
mov
stos
fmul
cli
jl
mov
int
aas
mov
out
mov
call
cmp
mov
inc
mov
pop
leave
call
sbb
rcll
pusha
adc
and
or
sbb
fs
jmp
push
ret
pushf
ljmp
xchg
add
mov
xchg
or
or
pop
les
daa
dec
orb
lret
adc
cmpsl
int
fsubrp
push
mov
decb
fisttpl
imul
jle
fiaddl
push
pop
push
mov
dec
push
jge
adc
stos
or
adc
pusha
unpckhps
cltd
sub
sub
lods
lcallw
mov
ja
push
ljmp
sub
jle
mov
fildll
jb
inc
sbb
aad
fbld
and
and
cld
sub
mov
mov
daa
sbb
jno
scas
jl
mov
push
and
dec
not
adc
lret
jl
push
inc
pusha
sub
or
imul
push
xchg
test
je
inc
jle
or
sub
and
ret
fs
mov
fidivrl
in
xor
mov
packsswb
or
test
int3
call
fidivl
jns
hlt
and
jae
sbb
call
cld
inc
sub
push
jp
inc
mov
adc
outsl
stos
pop
and
jmp
dec
add
jle
insb
sti
out
jge
mov
jmp
dec
insl
insl
push
jne
push
arpl
mov
ds
adc
jae
jecxz
and
xchg
aam
mov
and
loop
add
add
leave
nop
jge
push
xchg
addr16
cli
or
cmc
mov
adc
cmp
into
fs
xor
loopne
pushf
ds
add
xchg
or
push
add
mov
cwtl
imulb
jb
outsb
and
pop
inc
mov
cs
lcall
mov
dec
scas
xorb
ss
and
and
and
jno
xor
and
inc
mov
insl
aaa
xor
clc
fst
mov
lret
push
pop
mov
lock
sysenter
mov
orb
adc
jmp
les
repnz
inc
xor
ljmp
out
dec
push
dec
push
scas
call
sub
mov
sbb
fs
das
jmp
xchg
and
mov
push
out
in
jge
lea
orl
pop
orl
xor
xor
push
test
mov
sahf
popf
mov
in
mov
je
jbe
adc
fwait
adc
cmp
fildl
push
std
or
sub
dec
and
in
sbb
push
push
jge
sbb
lret
lret
stos
sub
das
inc
jo
mov
lret
xlat
hlt
bound
push
adc
ror
push
dec
add
mov
cmp
dec
insl
cmp
jbe
push
stos
call
jp
leave
inc
dec
mov
push
ret
cmc
daa
push
adc
push
inc
pop
xchg
mov
fcmovne
shll
mov
push
cmp
mov
mov
adc
lcall
test
inc
out
out
pushf
mov
fst
sub
in
jns
mov
imul
jae
push
mov
xchg
mov
pop
lods
aad
jb
lcall
dec
push
xchg
xorl
pusha
jns
sbb
fmuls
sbb
pusha
pop
mov
push
cmpsl
adc
adc
and
cltd
cmp
cmp
sub
pusha
fcmovu
jg
inc
out
outsl
xor
cmp
fisubrs
sub
or
test
mov
and
int
cmpsb
sbb
lods
push
mov
xchg
dec
popf
out
ret
int
hlt
inc
nop
mov
int
in
push
pop
mov
stos
lahf
int3
jmpw
es
sahf
dec
outsl
sahf
jmp
aam
push
insl
outsb
mov
jbe
test
fidivrl
stos
mov
sbb
stc
test
fdivrl
mov
mov
jno
sbb
add
pop
call
add
clc
andb
je
mov
lahf
fprem1
mov
movl
jno
in
es
je
push
sub
pop
ficoms
fistps
add
or
jle
inc
pop
mov
test
add
lods
repnz
adc
sti
cmc
stos
into
fldcw
adc
or
ret
mov
or
mov
push
sbb
xchg
ret
lahf
pusha
cmp
fcompl
test
mov
test
in
aad
pop
cmpsb
rorl
cmp
mov
mov
add
out
shrb
xor
lea
fbld
inc
lahf
xchg
xor
mov
std
and
lea
out
or
repz
dec
xchg
push
nop
mov
add
push
rorl
aas
mov
test
push
adc
xchg
cmp
cmpsl
sbb
loop
push
cld
ret
iret
cmp
inc
cmp
push
ljmp
lods
mov
out
cmpsb
xchg
inc
decb
rcr
jae
xor
fs
scas
jmp
mov
mov
push
shlb
call
push
cli
addr16
cwtd
enter
fadd
je
xchg
inc
mov
push
jecxz
mov
ja
mov
dec
cmp
lret
mov
call
pusha
pushf
or
add
sbb
add
mov
pop
rcrl
or
jno
adc
clc
inc
xchg
mov
jp
mov
push
mov
adc
aaa
call
sub
push
mov
cld
and
or
fdivl
test
movsl
sub
sbb
clc
imul
mov
cmc
loopne
mov
fs
sbb
inc
mov
sub
lods
sub
cs
cmp
test
add
cmp
push
mov
ljmp
xchg
pushf
test
dec
push
aad
cmp
inc
mov
mov
dec
clc
push
cwtl
push
imul
sub
rclb
scas
addr16
push
jmp
into
and
out
je
or
pop
repnz
out
outsb
and
repnz
movsl
sti
insb
test
cmpsb
and
lret
adc
xchg
cmp
xchg
xor
sahf
jg
lret
add
and
clc
jge
jge
add
fimuls
mov
or
and
mov
lea
adc
das
xor
leave
pop
loop
xorb
add
jge
pop
stos
outsl
mov
jmp
call
xchg
clts
xchg
orl
jp
out
scas
movsb
mov
movsb
fs
add
push
mov
pop
inc
xchg
loopne
xor
push
or
sbb
mov
or
sub
mov
or
cli
dec
ffreep
dec
dec
repz
inc
add
enter
jno
adc
adc
popa
inc
xor
mov
cmp
cli
pushf
icebp
cmpsb
dec
loop
aaa
lret
call
or
in
les
and
xor
jo
pop
jne
push
pop
lods
pop
xor
mov
sub
pop
push
rol
scas
adc
arpl
arpl
je
scas
hlt
cmpsl
gs
andb
sbb
inc
rorl
subl
orl
and
cwtl
cmp
push
mov
push
xchg
or
shll
stc
ja
push
push
and
sbb
jns
pop
mov
pop
sbb
loope
popa
push
add
clc
push
sub
add
mov
out
mov
xchg
pop
nop
mov
add
jge
xlat
jb
mov
popa
enter
pop
sbb
in
dec
xlat
pop
ret
arpl
outsl
into
rcr
rcrb
mov
sbb
dec
push
inc
cmp
adc
dec
aam
in
inc
jmp
imul
or
and
out
addr16
ljmp
cmc
imul
push
pop
mov
and
jb
push
pop
shlb
push
arpl
daa
xor
xchg
jl
inc
jecxz
push
js
cmp
mov
sub
lahf
cmp
cmp
mov
mov
stos
xchg
xchg
sub
pop
push
mov
cmpsb
out
out
pop
cmp
xor
push
icebp
shr
pop
xorl
xchg
adc
mov
mov
out
adcl
sub
pop
xchg
imul
push
sub
push
mov
sbb
mov
sub
out
inc
loopne
leave
out
out
ljmp
add
and
mov
and
push
fldenv
cmp
ret
dec
xchg
sti
les
lret
dec
aam
push
mov
inc
into
or
sahf
rolb
lret
fs
icebp
sub
cmp
nop
cmp
or
jbe
add
xchg
fdivrp
mov
and
fisttpll
pop
test
shrl
aas
rcll
jg
adc
std
push
sbb
jle
movhps
push
jecxz
pop
and
popf
xor
push
jnp
stos
jmp
cmp
out
test
aas
ss
loop
mov
mov
inc
xor
cmp
cmp
sbb
jg
outsb
es
in
jl
stc
ja
dec
in
bnd
dec
shrl
jne
out
adc
and
imul
or
lods
adc
xchg
enter
sbb
mov
test
push
int3
mov
mov
fbld
sbb
sahf
dec
and
cltd
cmp
lock
lock
mov
dec
loop,pn
mov
xchg
iret
push
add
clc
stos
sub
gs
push
mov
stos
ret
jb
in
bound
fdivs
mov
jge
jp
push
cltd
gs
and
pmulhw
pop
call
mov
mov
sbb
pop
xchg
push
roll
push
inc
ror
lods
pop
cltd
push
xor
fdivp
jmp
push
mov
mov
mov
xchg
mov
push
jnp
pop
push
aas
add
sti
leave
pushf
xchg
nop
push
or
xor
cmp
stos
scas
add
sbb
ret
dec
push
insl
adc
stos
mov
out
cltd
xchg
inc
add
testb
mov
loopne
push
std
jp
movsb
fnstenv
adc
in
jae
lock
adcb
jle
lods
add
jo
sub
mov
cltd
test
test
sub
outsl
fwait
push
loope
cli
mov
out
cmp
cli
in
cwtl
js
xchg
call
jmp
or
mov
ss
or
scas
mov
add
dec
jne
fstpl
sbb
mov
pop
cmp
sar
mov
mov
fisubrl
rorb
aad
sub
lods
sub
sahf
mov
mov
stos
sbbb
xchg
loopne
dec
ljmp
and
pop
inc
push
stos
jns
mov
sbb
jne
mov
and
dec
pop
xchg
adc
push
xor
ficoml
jp
inc
popf
lret
pop
mov
push
scas
ret
jne
lods
pop
push
vpavgw
mov
add
jae
dec
sub
bound
cmp
jns
loope
push
mulb
add
pop
lea
mov
add
jecxz
fildll
push
sub
lods
jecxz
xlat
cltd
push
shlb
stos
dec
xor
fiaddl
lods
mov
xchg
or
or
xchg
fs
inc
xchg
push
clc
push
imul
outsl
mov
cmp
sbb
mov
or
repz
xlat
push
movsl
in
inc
pop
adc
mov
scas
andl
cmp
in
test
dec
adc
mov
ret
xchg
lret
xor
push
mov
ljmp
movsl
fisubl
jge
cmc
dec
dec
and
icebp
arpl
xlat
lcall
pop
jb
jmp
outsb
fwait
mov
bound
mov
and
fildl
jb
cmp
inc
inc
xor
outsb
daa
mov
jns
xchg
rcl
sti
imul
cmp
outsl
mov
jp
push
pop
hlt
mov
iret
adcb
cmp
or
aas
out
aas
cmc
fldcw
jmp
fstpt
mov
cmp
outsb
in
repz
ds
pop
insb
jecxz
int3
push
pop
in
fisubs
push
test
or
outsb
or
dec
cs
stc
dec
ret
fs
pop
dec
xchg
sbb
cwtl
popf
xorl
notb
add
jne
xchg
adcl
test
imul
inc
std
mov
iret
jno
addl
call
push
les
test
pop
pop
adc
and
cs
cmp
push
sbb
mov
adc
test
mov
cld
roll
pop
pop
ret
iret
inc
xor
mov
orl
and
movsb
or
push
jno
loop
leave
add
adc
cmc
test
and
stos
and
pop
cli
xor
leave
addl
cmp
adc
dec
sub
xchg
js
xchg
push
dec
stos
push
dec
in
sbb
push
pop
jp
mov
rcl
fwait
mov
out
or
lret
mov
pop
call
popf
icebp
mov
mov
test
imul
jge
mov
jmp
mov
jl
repnz
mov
test
into
sahf
add
or
mov
xor
mov
add
cmpl
inc
lcall
mov
psrld
fdivs
aam
lret
cmp
push
xchg
in
cmp
mov
jg
sub
jne
and
push
xchg
loope,pn
in
adc
or
test
stos
cwtl
push
popa
xchg
les
pushf
jg
cs
pushf
cmp
pop
xlat
push
clc
pop
add
dec
sub
dec
pop
jp
push
es
sub
dec
mov
push
xchg
in
jg
fidivrs
popf
pop
mov
in
divb
inc
cvtps2pi
into
push
jae
gs
outsb
repz
ljmp
inc
out
push
bnd
loopne
aaa
mov
mov
ret
iret
dec
adc
int3
add
fprem
jmp
ds
add
push
mov
cmp
stos
fisubl
vdivpd
dec
dec
movsb
loopne
and
fs
rorb
mov
dec
insb
mov
into
dec
dec
popf
sub
fcomps
dec
push
scas
imul
fdivrl
icebp
int
inc
lret
cmp
xor
bnd
jae
iret
xlat
push
jl
std
arpl
add
dec
xchg
divb
js
mov
push
fcomp
inc
xlat
stos
ljmp
lcall
nop
ljmp
test
repz
lock
ljmp
mov
loope
dec
push
sbb
sbb
pop
ficoms
and
insl
push
pop
movsb
mov
xor
or
scas
popf
sub
mull
sub
mov
shlb
inc
ret
dec
pusha
cmp
pop
pop
cmp
inc
sub
pop
add
pop
js
jg,pt
out
sub
cmpsl
cmpsl
mov
jbe
scas
loope
cmp
or
mov
cmpsl
jae
leave
iret
dec
lock
dec
pop
outsb
adc
insl
mov
push
sbb
pop
subl
sti
mov
xchg
xchg
imul
pop
in
rcrb
mov
cli
pop
adc
cld
push
rorb
mov
fs
jb
loop
and
sub
pop
jne
and
cmpb
pop
in
inc
test
push
repz
pusha
fisttpl
pop
and
mov
int
rclb
mov
outsb
nop
pusha
pop
cltd
mov
sti
jmp
scas
int3
repz
jp
pop
in
jp
cli
pop
call
pop
mov
in
push
lds
cmp
in
mov
jb
rolb
lret
push
cmpsl
add
pop
or
ds
pop
aam
mov
mov
lock
mov
add
dec
jnp
mov
call
subl
mov
xor
aam
xchg
cmpl
or
shr
cmpsb
mov
mov
jmp
stc
jno
push
out
das
inc
bound
es
push
out
jg
xlat
push
lds
jno
dec
dec
and
adc
inc
pop
data16
lock
test
jp
addl
lods
sti
or
mov
and
add
or
insl
jmp
mov
jg
mov
sti
loope
or
cmp
sub
into
inc
dec
cmp
pop
cld
sahf
xor
lret
mov
mov
stos
shll
and
lret
dec
shll
inc
add
out
movsl
mov
jecxz
lock
jg
or
aam
fcoml
out
pop
out
ja
jnp
ficoml
cltd
lds
filds
mov
jno
test
dec
mov
lods
and
sub
inc
push
xor
stc
scas
dec
out
sbb
scas
fbld
inc
pop
sahf
mov
jne
adc
in
cmpsb
cmp
aam
adc
lahf
int
ljmp
loope
dec
mov
push
dec
sub
lds
jl
sti
or
push
jbe
xor
jae
pop
lock
sbb
push
das
movsl
mov
pushf
cltd
mov
mov
mov
mov
or
pop
jg
pop
mov
fcmove
mov
jne
idiv
sub
xor
adc
inc
mov
xor
clc
es
std
adc
inc
jae
cmp
cmp
adc
insl
les
jbe
jmp
and
dec
out
ljmp
std
xchg
fwait
mov
ja
mov
notl
xor
pop
or
mov
mov
xchg
mov
xchg
xor
jg
adc
nop
js
enter
mov
scas
int3
jecxz
enter
lret
fwait
arpl
jne
sub
fdiv
cmc
faddl
jne,pt
add
out
leave
call
inc
jmp
rorb
jg
xorb
imul
cmp
jae
or
in
fmuls
into
sti
movsl
ret
cmp
push
xor
xlat
cwtl
or
jns
or
add
insl
test
shrb
push
out
mov
lods
cmp
dec
into
xchg
addr16
repnz
frstor
cmp
jecxz
sarl
pushf
sub
in
loope
and
cmpl
dec
sbb
je
sub
adc
cmp
inc
dec
test
imul
sbb
xor
andl
pop
cmpsl
minps
push
sbb
pop
push
bound
xchg
mov
lods
mov
mov
ja
xchg
jecxz
lret
dec
fidivs
icebp
push
dec
jnp
pop
xchg
adc
test
int
pop
fdivr
and
xchg
and
stos
fidivl
pop
jmp
outsb
or
ja
dec
or
rorl
xchg
dec
sti
rcrb
decl
testb
jmp
mov
or
pop
sbb
push
adc
pop
xchg
add
adc
hlt
sub
push
pop
lret
mov
sub
pusha
sbb
loop
gs
xchg
in
pop
add
fisubs
mov
sub
fldt
repz
subl
jo
push
gs
cmovl
shlb
fsubl
sbb
addr16
mov
push
shlb
js
add
mov
icebp
loope
repz
pop
xchg
sub
in
add
int3
insl
mov
mov
aam
jl
xor
fdivs
jmp
push
mov
mov
push
insl
push
mov
scas
jne
or
fwait
jg
sub
jne
push
sti
push
test
ds
mov
dec
fwait
or
je
mov
add
xor
repnz
fs
stos
sbb
or
lods
pop
mov
in
imul
xchg
xchg
fwait
and
lcall
push
inc
es
dec
icebp
out
pop
mov
insb
add
mov
daa
push
aas
addr16
cmp
ret
mov
xchg
or
xchg
lods
cmpsl
and
xchg
jno
scas
out
adc
loope
scas
pop
sub
cmp
daa
pop
movsb
mov
mov
loope
adc
sbb
jmp
pop
call
xchg
pop
jmp
idivb
push
xchg
fcmove
cld
push
lea
pushf
push
clc
pop
fs
xchg
dec
outsb
push
adc
inc
fmulp
inc
jae
adc
jl
push
adc
xchg
mov
out
ja
cmc
hlt
arpl
cwtl
xchg
push
pop
lds
int
lret
leave
mov
repnz
popa
dec
adc
push
dec
ljmp
pop
mov
cmpsl
lret
scas
fidivrl
ljmp
lods
cmp
add
dec
dec
add
cmp
mov
inc
fwait
aas
loop
mov
inc
mov
dec
out
push
sub
mov
mov
xor
pop
sbb
test
xor
xlat
xlat
lods
add
test
cld
cmp
pop
add
mov
dec
popa
and
jmp
xor
cmp
cmp
add
jge
and
push
xchg
inc
cwtl
cmp
and
inc
jbe
add
sahf
xchg
xchg
aas
xor
xor
pop
xchg
int3
push
pop
cmpsl
xor
xor
xchg
sti
xchg
rclb
push
adc
pop
and
push
jns
notb
dec
clc
cmpsl
cmpsb
mov
loope
or
and
ss
adc
jnp
push
movsl
cmp
adc
negb
bnd
or
sti
sub
mov
push
pushf
push
and
add
scas
jl
repnz
shr
inc
decb
cmp
lds
xor
fistpll
sbb
cmp
push
data16
cmpb
pusha
movsl
and
shrl
and
insl
lcall
jecxz
and
fldenv
and
sbb
jne
xor
xor
jp
punpckhdq
adc
popf
repz
or
mov
xchg
dec
in
and
cltd
sub
adc
mov
lahf
jl
inc
dec
push
push
adc
and
ja
lcall
iret
push
imul
ret
sbb
inc
ficomps
outsb
rolb
fistl
imul
stos
mov
stos
call
cmp
inc
fdivrs
lock
mov
push
and
leave
push
repz
popf
sahf
push
rol
in
mov
xor
jl
test
bswap
jns
ja
sbb
in
mov
inc
es
sbb
fwait
inc
or
lret
ret
jl
xor
mov
mov
test
sbb
fdivl
movsb
call
jg
notl
stc
mov
cmp
loope
notb
mov
mov
add
lock
cmp
add
pop
aaa
movsl
and
outsl
lea
xchg
clc
jae
adcb
in
test
cmc
lahf
stos
insl
push
xchg
testb
in
les
or
movsb
aaa
stc
xor
lods
repz
ljmp
cli
xchg
jle
jge
jle
jo
sub
dec
dec
mov
jmp
push
outsb
cmp
adc
fs
xchg
jo
sahf
jecxz
jecxz
adc
std
xorl
jge
nop
nop
comiss
sbb
addr16
aaa
sub
or
insl
mov
fstpt
add
pushf
xorb
add
and
repnz
cmp
mov
mov
mov
adcl
mov
das
push
inc
pop
inc
stc
push
aam
cmp
jg
sbb
in
jmp
fsubp
mov
insl
insb
and
cld
cltd
xor
cmp
pusha
or
jnp
js
out
mov
addl
fldl
push
pop
cld
jl
lock
enter
add
pmullw
fcmovne
xchg
sub
xchg
cmpsl
ss
jne
rcl
adc
daa
cmp
add
pusha
addr16
loop
pop
aad
push
dec
add
pusha
test
jnp
lods
repnz
aaa
inc
xorl
stos
test
ret
rorl
jle
dec
or
inc
in
sti
daa
pop
adc
jns
adc
bound
rcll
aam
ffree
mov
sbb
cmp
repz
mov
out
adc
dec
loopne
jge
cmc
loope
out
cmp
pop
adc
xor
push
inc
mov
sub
jns
outsl
clc
xor
loope
xlat
cmp
xchg
fidivrs
rcrl
cli
repnz
in
lds
ljmp
mov
stc
dec
push
mov
lods
xor
xchg
in
dec
sbb
sub
loopne
and
or
clc
mov
arpl
pushf
and
enter
dec
push
mov
nopl
or
jge
leave
incb
inc
fsubl
addl
aam
les
cmp
mov
inc
in
and
adc
xchg
xchg
push
sbb
or
adc
fcmove
lret
cmp
lret
divb
int3
push
mov
fcom
rol
mov
popf
outsl
push
and
xchg
sbb
jb
cmp
jmp
outsl
mov
loop
jl
mov
out
cmp
out
out
out
fwait
adc
in
jg
daa
sub
cmc
int3
and
jmp
and
cmc
mov
iret
mov
cmp
call
out
daa
pop
in
out
push
push
arpl
jns
mov
lock
out
jb
cmp
pop
mov
aas
fidivl
test
out
mov
or
adc
xchg
ret
mov
je
mov
sub
jno
mov
cmpsl
sub
dec
int
int
mov
mov
lods
cwtl
pop
add
xchg
xor
loop
fwait
adc
add
fistl
sti
clc
loop
sbb
scas
fstpl
ret
movsl
xchg
leave
dec
test
xor
mov
pop
mov
adcb
xor
mov
iret
pushf
hlt
insl
ss
lods
repz
cltd
inc
push
xor
fcoml
int
jge
movsl
push
fldlg2
xor
mov
imul
cmp
aam
pop
jg
std
popf
xchg
dec
pop
imul
or
cmp
pop
add
xchg
mov
or
mov
insb
or
mov
xor
mov
out
adc
inc
xchg
cwtl
hlt
cmp
arpl
sbb
nop
in
push
pop
in
scas
mov
mulb
cld
ja
outsb
pop
xchg
es
fstps
and
pop
movsb
cld
mov
rclb
pop
push
mov
dec
jp
inc
xchg
inc
in
jo
scas
jns
sbb
mov
jno
jp
sbb
sub
and
stos
lret
movsb
or
popa
jb
jnp
fs
loop
sbb
pop
dec
lods
scas
mov
ljmp
sub
aad
mov
dec
mov
int3
daa
fwait
js
outsb
push
jns
aas
mov
int
hlt
inc
pop
cwtl
lock
adc
inc
cmp
cmp
mov
das
iret
scas
out
clc
mov
ret
mov
notl
pop
pop
stos
in
int3
inc
xor
pop
sub
sahf
gs
jnp
das
pop
cmpsl
iret
pop
lea
stc
iret
xchg
and
aaa
sarb
stc
jmp
sbb
dec
scas
add
cmpsb
out
jae
push
dec
fwait
out
inc
ljmp
cltd
loope
mov
add
iret
push
lock
jmp
jb
nop
xor
push
lods
imul
cmp
sub
addr16
lcall
and
cmp
mov
pop
js
xchg
pop
jmp
repnz
inc
pop
leave
insl
inc
es
pusha
xchg
sub
pop
mov
push
fistpll
jp
dec
jl
mov
and
push
push
sti
pop
scas
xchg
cmp
sub
es
jnp
mov
and
mov
in
outsl
outsl
mov
aad
mov
and
xchg
popa
mov
mov
cld
je
push
insb
add
outsb
iret
fcoms
sub
int3
addr16
jno
inc
pop
lret
sbb
aaa
mov
and
je
push
js
pop
insl
orl
push
mov
fnsave
es
and
inc
pop
rsm
push
xor
imul
rcll
lret
xchg
inc
je
fiadds
orb
xor
int3
out
push
out
test
fidivrl
mov
das
outsl
ljmp
mov
mov
sahf
pop
push
hlt
sbb
inc
cmp
jne
jl
or
jmp
mov
outsb
mov
das
jno
jmp
out
je
mov
test
rcr
ljmp
pop
out
scas
addb
pop
enter
fcomp
dec
aas
mov
sbb
jle
push
jecxz
cmp
push
iret
inc
int
lret
mov
push
fwait
dec
les
mov
cmpsl
iret
pop
sbb
xchg
sub
cmp
cli
mov
iret
inc
idivb
test
push
or
ja
xlat
xchg
xlat
push
stos
mov
dec
mov
outsl
jnp
stos
mov
push
out
add
jp
pop
mov
out
shl
mov
push
push
out
mov
sbb
add
popf
out
jns
int
pop
adc
shlb
loope
inc
cmp
mull
xrelease
inc
sbb
test
out
sub
aaa
dec
daa
dec
sbb
inc
loopne
dec
inc
inc
arpl
movsb
dec
test
je
scas
bound
cmp
mov
aam
in
or
orl
iret
loop
sbb
ds
jne
xor
subb
cmp
fucomp
or
sub
popa
frstor
fsubrl
test
sub
sbb
jbe
insb
je
mov
mov
mov
aad
sub
inc
inc
movsb
aas
pop
cmp
jmp
dec
je
decl
out
sub
cs
jp
pusha
ljmp
sbb
sbb
lea
mov
repz
push
ss
negb
jnp
cli
pushf
mov
mov
pop
in
xchg
mov
test
in
movsb
xorb
pushf
inc
sbb
in
and
jmp
mov
into
adc
xchg
sbb
stos
cmp
insl
pushw
dec
sbb
lods
mov
push
inc
leave
stos
cld
xchg
or
out
outsb
mov
jge
mov
fwait
sahf
fwait
cmp
and
insl
repnz
fistpl
xor
lods
mov
push
adc
mov
xchg
fnstenv
sbb
mov
pop
ja
outsb
jl
dec
rcrb
add
or
xchg
jmp
btc
mov
inc
aaa
push
pop
jbe
xchg
cld
dec
jne
inc
xor
push
dec
sbb
xchg
je
xor
loop
push
icebp
js
xlat
jns
cmpsl
adc
repnz
xchg
ficomps
add
add
leave
out
outsb
push
jmp
hlt
lcall
movsl
mov
pop
mov
pop
adc
shll
pop
cld
dec
xlat
fwait
stos
xor
mov
mov
jge
mov
pop
iret
out
pop
sarl
bound
pushl
scas
push
pop
mov
lret
pop
lcall
jle
ds
mov
insb
or
ljmp
mov
lea
dec
xchg
xchg
aas
jmp
subb
xor
loope
sub
test
fisubl
push
xchg
and
push
sbb
and
cmpsb
pop
mov
mov
push
add
sbb
jg
test
xchg
jecxz
mov
mov
test
into
testl
sbb
shlb
push
in
loop
mov
mov
fwait
lahf
inc
stc
mov
fcom
shlb
int
dec
cmp
dec
mov
push
dec
call
add
mov
mov
or
iret
or
imul
fidivrs
inc
outsb
xor
xchg
pop
inc
cld
and
cmp
out
cli
add
pop
dec
jl
stos
cwtl
lret
shll
iret
adc
hlt
xchg
cmp
test
and
lret
sub
jne
or
cmc
xchg
test
pop
int3
dec
sub
sub
xchg
jmp
loop
inc
ja
push
pusha
clc
sub
xorl
sub
mov
in
mov
push
and
hlt
jno
hlt
aam
shlb
popf
loope
dec
out
mov
das
push
sbb
pop
jne
fldl
and
xlat
test
or
sbb
fwait
cmp
xlat
or
clc
jnp
repnz
hlt
movsb
call
sbb
pop
jo
and
mov
push
xor
mov
pop
sub
aas
and
push
mov
ljmp
addr16
cli
sub
scas
enter
jmp
lods
sarl
cmp
sti
ficoms
sar
pop
fisttps
lret
adc
ror
or
xchg
jne
insb
add
out
xlat
movl
imul
mov
xchg
add
in
cs
sbbl
test
push
notl
rcll
mov
enter
scas
lret
insl
pop
adc
fwait
insb
jae
sbb
pop
sbb
jmp
fstps
mov
les
int3
fsubp
sub
cmp
push
mov
push
pop
jmp
lcall
movb
mov
xchg
push
push
movb
cmpsl
sti
mov
gs
test
mov
scas
adc
mov
cmpb
and
jmp
pop
jbe
jge
pop
mov
dec
cld
jae
xchg
lret
mov
ljmp
cmp
loop
inc
inc
into
movb
dec
popa
shlb
cs
sahf
xchg
pop
cltd
dec
int
cwtl
ja
jecxz
subb
sahf
subl
repz
xor
outsl
arpl
insb
addr16
cmp
pusha
stc
mov
lahf
mov
xor
jle
xchg
jge
jb
xor
iret
push
jne
xchg
clc
or
scas
and
or
push
addb
scas
jge
push
scas
arpl
cmp
mov
add
xchg
out
call
fcomps
scas
fisttps
addr16
loopne
mov
push
mov
xor
out
sub
icebp
lret
xor
sti
clc
sub
dec
mov
dec
out
call
sbbb
cmpl
mov
lds
je
out
imul
and
lahf
cmp
jl
or
mov
xor
aas
mov
and
cmpsb
dec
sub
icebp
addr16
mov
cmp
popf
loopne
fistpll
dec
jle
push
mov
inc
xchg
addr16
inc
test
insl
mov
dec
fnstcw
fcoml
pop
cmpsb
mov
xor
add
or
les
xchg
mov
imul
lcall
fsubs
cli
mov
js
inc
jl
test
ljmp
cs
cmp
andl
test
hlt
aas
js
adcb
ds
notl
jb
xorb
das
mov
lock
pop
lret
pop
jge
xchg
icebp
jns
xchg
and
outsl
cmp
mov
test
cmp
cli
lock
mov
movsl
lret
dec
cwtl
and
inc
ss
das
aaa
pop
and
mov
int3
out
sbb
mov
inc
pop
popf
pop
jb
insl
lods
jg
pop
pop
test
addr16
js
test
orb
lods
mov
lods
orb
out
sbb
rcrb
out
dec
movsl
scas
cmc
iret
in
test
sub
dec
lret
stos
inc
mov
jmp
out
out
push
cmpsl
out
out
lret
cmc
das
aaa
pop
lods
cmp
jp
dec
stc
fidivrs
stos
arpl
inc
sbbb
aaa
push
push
and
push
outsl
out
add
or
push
leave
insl
xchg
pop
push
movsl
scas
loopne
jp
arpl
jbe
out
aas
lahf
pop
lcall
mov
icebp
sub
jp
xchg
mov
pop
mov
ljmp
mov
mov
repz
or
xor
xor
push
adc
lret
cmpsl
jg
cmpsb
xchg
cmp
sti
outsb
loop
mov
jle
pop
fwait
mov
ficoml
and
jns
adc
jne
add
dec
sub
daa
stos
std
lcall
lods
outsl
sahf
test
cwtl
and
jne
rcr
aam
add
mov
lea
scas
insl
xor
add
aas
out
rolb
cmp
xchg
push
sbb
cwtl
dec
cld
ficomps
mov
negb
xchg
inc
dec
cmpsb
test
movsl
aam
int3
mov
ror
sbb
inc
pop
lret
cmp
dec
data16
mov
or
push
dec
jns
ret
add
int
push
stos
inc
jnp
jmp
test
imul
stc
mov
lahf
stos
push
call
pop
jl
push
icebp
das
jmp
pop
dec
bound
in
repz
mov
mov
jbe
xchg
cs
sub
and
cli
jg
jb
in
bound
and
pop
nop
xchg
out
jns
xchg
rcrb
jecxz
fs
adc
adc
push
jg
in
cmp
mov
sub
or
xlat
mov
popf
dec
lret
inc
mov
jg
jge
movsl
sbb
add
jmp
jno
push
cmp
push
test
mov
xchg
jno
fs
adc
push
fiaddl
mov
insb
push
pop
dec
das
add
mov
cmp
test
sub
push
movsb
pusha
shl
cmpsl
xor
mov
bound
mov
cli
sub
pop
mov
pop
push
ljmp
pop
ljmp
mov
mov
push
jno
rcr
jmp
cmp
adcb
push
pusha
imul
dec
pop
test
clc
loop
jne
sbb
xchg
ja
std
aam
sbb
dec
nop
icebp
out
xchg
sub
push
in
inc
sbb
jnp
jge
les
out
mov
fdivs
sub
cmc
push
shlb
pop
sub
addl
xlat
call
pop
dec
stos
and
iret
mov
jb
or
add
gs
mov
insb
fimuls
jmp
dec
stos
lea
mov
or
gs
mov
test
sub
mov
pop
js
sub
mov
std
mov
test
cli
dec
push
sbb
mov
jns
cwtl
mov
xor
push
jp
lret
add
push
out
sbb
out
dec
jo
inc
test
fnop
xchg
xchg
sahf
testl
aam
getsec
sti
mov
arpl
sbbb
and
test
inc
mov
jl
stc
cmp
lods
pop
xchg
xor
dec
outsb
xchg
mov
pop
inc
outsl
js
push
outsl
mov
cwtl
push
jmp
or
insl
fistps
cmc
xor
pop
je
lea
enter
push
repnz
sbb
in
aaa
mov
jne
pop
push
mov
andb
ss
aad
jne
jno
mov
mov
shr
hlt
push
sub
addr16
popa
movsl
popa
scas
inc
aas
les
pop
sbb
roll
adc
inc
inc
cmp
in
pop
mov
push
cmp
jmp
add
xchg
insb
mov
gs
adc
and
cmp
fistl
pop
jo
leave
or
cli
imul
push
ja
loop
call
leave
aad
mov
cmp
mov
and
scas
jno
cmp
pop
cltd
xchg
sbb
stos
mov
in
outsb
lock
lea
das
push
mov
and
lea
dec
leave
ss
ss
mov
sub
cmp
ja
jp
movsb
pop
xor
fs
mov
jmp
mov
les
out
lock
xor
inc
mov
movsb
and
daa
push
push
ja
pop
lods
dec
stos
aaa
xor
lods
lock
sub
mov
stc
lock
aaa
push
xchg
push
inc
xor
bswap
xchg
jp
xchg
iret
push
mov
aaa
jge
mov
btr
outsb
shrb
repz
ret
out
inc
hlt
test
inc
add
pop
fists
rclb
cltd
stos
sarb
sahf
mov
aad
sub
jecxz
out
cmp
push
pop
mov
push
rcrl
xor
cmp
pop
xchg
test
push
push
pop
push
sbb
test
dec
jg
dec
pop
mov
mov
add
in
push
adc
or
pop
push
sbb
pushf
pop
adc
popa
or
aas
pusha
movsl
mov
dec
fadds
add
dec
jae
scas
fcomps
int
add
fmull
call
mov
mov
out
mov
loop
mov
xor
roll
jnp
cmpsb
lret
sub
jnp
je
sbb
rorl
cmp
xor
cmpb
and
fidivl
xchg
lds
mov
or
ficoml
push
fisttpl
mov
adc
test
sbb
mov
jne
cmp
jge
dec
sahf
out
cmp
cmp
les
scas
and
das
flds
sbb
mov
inc
sub
xchg
xlat
out
mov
rcr
add
outsb
sub
das
mov
ja
les
repz
xor
add
sahf
or
fldcw
imul
jmp
pop
adc
out
push
cmc
mov
cmp
ja
mov
movaps
add
dec
lods
mov
repz
jnp
cmp
or
xchg
push
lock
subl
and
pop
mov
repz
cmp
push
sub
mov
fs
fists
fwait
inc
cmpsl
pop
ds
or
or
aad
ljmp
dec
mov
pop
clc
cmpsb
aas
sbb
jnp
insb
xlat
sbb
aas
xchg
sub
dec
call
in
mov
je
outsb
mov
stos
std
mov
int
xchg
rclb
dec
lods
ljmp
lret
dec
add
out
test
cltd
popa
insb
rclb
sub
jae
testb
pop
test
xchg
adc
cmpsb
fmull
cmpsb
mov
popl
test
mov
or
inc
xchg
mov
inc
or
and
ffreep
mov
bound
xchg
enter
sbb
add
mov
std
pop
mov
lret
jae
lret
test
xor
adc
mov
add
lock
xor
xlat
mov
in
push
in
repz
cmp
adc
push
mov
ret
sub
rcll
jb
sti
xchg
cmp
lret
inc
or
fimull
testl
jle
lret
mov
lods
inc
pop
mov
popf
or
pop
adc
jnp
lret
les
xor
pop
movsl
insl
or
cmp
sub
inc
mov
jp
pop
inc
mov
out
fiadds
sbb
xchg
adc
jmp
movsb
mov
pop
push
mov
pop
adc
test
xchg
xchg
push
iret
cmc
cmp
xlat
adc
cmp
sbb
adc
rol
adc
jle
test
push
push
jno
inc
mov
mov
fmuls
fildll
sbb
mov
into
mov
nop
dec
mul
mov
cwtl
sub
int
aaa
adc
lret
lock
push
in
push
jg,pn
imul
mov
mov
pusha
lds
bts
or
lds
mov
pop
pop
repz
cmp
lahf
sbb
add
fs
jl
in
dec
fsubs
sbb
out
cs
mov
xor
ret
test
and
into
mov
xchg
ret
jl
call
dec
xor
or
mov
cmp
xchg
outsb
lods
aaa
pop
pusha
mov
pop
scas
mov
mov
cmc
xchg
jmp
jle
pop
shrb
xor
pusha
sub
inc
cli
out
fwait
xor
mov
insb
inc
out
jmp
hlt
imul
mov
and
sbb
adc
push
lret
pop
popl
cmp
sub
mov
mov
mov
xchg
mov
mov
sub
dec
lret
outsl
adc
dec
sbb
or
dec
xchg
test
add
data16
xorb
mov
add
and
and
shll
mov
inc
sbb
fcomps
loope
pop
test
mov
xchg
imul
xchg
push
je
out
xorb
pop
leave
inc
cmc
jg
xchg
mov
insl
add
push
in
cltd
push
add
fwait
push
mov
mov
push
lock
int
cmp
les
pop
int
sbb
pop
push
jns
inc
mov
insb
popf
gs
notl
cmp
rcl
adc
imul
ss
data16
pop
sahf
cmpsb
add
out
jp
sub
jbe
loopne
mov
fnsave
cmp
and
test
repnz
neg
jo
movsb
mov
lret
cwtl
rorl
lea
pop
jecxz
and
mov
push
add
xchg
push
repz
mov
repnz
imul
insb
inc
stos
daa
adc
pop
repz
or
lock
ret
sbb
ja
iret
es
mov
xchg
dec
xchg
int3
dec
loope
mov
jo
mov
add
sub
cwtl
roll
cmpsb
jae
sub
mov
loopne
addr16
lcall
sbb
xor
add
cmp
mov
inc
adc
jle
mov
pop
idivl
inc
jnp
repz
dec
adc
sarb
dec
ds
mov
mov
mov
sbb
es
sub
xor
push
enter
movsl
sti
push
fldlg2
ljmp
mov
jecxz
pop
loope
pop
add
movsb
clc
mov
gs
daa
jo
stos
add
adc
out
and
push
pushf
push
movsb
fs
lea
cmp
dec
and
fldl
xchg
movsb
rol
jmp
mov
mov
or
lahf
pop
dec
out
jge
and
or
int3
add
cs
dec
mov
mov
pop
lcall
fsubrp
add
popa
fsubrs
stos
xchg
cmp
sub
pop
mov
ljmp
mov
fdivrp
lahf
stos
sub
mov
out
rolb
cmp
lods
dec
adc
popf
inc
jmp
lea
negb
push
sbb
ja
jecxz
aaa
adc
push
cmp
in
ss
xor
fisubs
dec
or
fdivrp
pop
push
enter
or
adc
xchg
push
push
cld
lods
out
pop
rcl
fcom
ret
orb
dec
mov
mov
adc
dec
sahf
add
lret
inc
into
push
cmpsb
mov
imul
addl
lea
xor
push
add
pop
arpl
push
lods
cltd
lea
cmp
xchg
pop
add
or
pop
out
and
clc
adc
lcall
lock
mov
test
mov
aaa
mov
arpl
push
jl
cs
in
arpl
fcmovne
xchg
mov
push
or
mov
leave
testb
or
cmp
mov
or
adc
fildll
div
dec
filds
mov
jae
test
lds
roll
scas
pop
jmp
lock
sbb
in
out
mov
mov
sub
pop
test
into
cwtl
out
divl
data16
sub
dec
mov
fmull
lods
sub
cmc
cwtl
out
jnp
add
gs
xor
sub
jae
movsl
cli
daa
bound
test
mov
xchg
jne
cwtl
dec
and
fcompl
cwtd
dec
loop
or
push
pop
fucomip
decl
inc
pop
jno
push
std
ss
fiadds
mov
fimull
cmp
mov
mov
mov
lahf
fistpl
inc
adcb
xchg
mov
add
scas
xchg
cs
dec
sub
jg
mov
xor
shlb
lea
lods
jmp
push
or
xchg
mov
stc
data16
xchg
sub
leave
adc
mov
lock
outsb
mov
push
inc
pop
or
dec
fsubrl
aad
pop
dec
mov
cmp
bound
dec
sahf
or
cmp
dec
and
aam
daa
stc
jno
jl
nop
dec
shrl
ss
jnp
loope
fdivl
orl
xor
in
mov
add
repnz
inc
rorb
lret
xchg
xor
lcall
loope
rolb
mov
xlat
mov
mov
insl
xchg
mov
shll
cmp
decl
push
fsubrs
inc
dec
jle
into
dec
lea
cli
adc
fcoms
push
sbb
and
jmp
or
insb
decl
dec
add
jge
loop
mov
xor
leave
inc
mulb
lret
mov
add
inc
xchg
adc
scas
das
imul
jl
sub
push
pop
int3
mov
subl
mov
dec
sbb
push
out
pop
mov
add
hlt
gs
push
pop
cld
dec
pop
notl
mov
xor
adc
in
dec
xchg
dec
loope
add
icebp
push
imul
addb
push
push
pop
das
jl
xchg
testb
cmp
sub
mov
pop
leave
or
jg
lds
mov
mov
pusha
mov
aad
es
inc
xor
adc
inc
loope
xchg
lcall
mov
cli
cld
xor
movsb
xchg
push
movsb
add
push
rol
outsb
imul
cltd
aaa
sahf
or
cmp
mov
dec
dec
das
pop
push
jle
push
mov
xchg
pop
fldenv
int
sbb
sbb
dec
mov
adc
int
cmp
les
imul
xor
iret
dec
dec
add
xchg
je
nop
fimuls
pushf
mov
xchg
sbb
in
not
loopne
cmp
cmp
rcrl
mov
adc
in
sub
insb
push
int
sub
icebp
in
mov
leave
lods
mov
rorb
mov
repnz
in
ja
pop
add
mov
incl
push
inc
and
outsb
ja
mov
push
lds
hlt
add
pop
inc
fldcw
push
pop
push
outsl
pop
push
mov
inc
test
pushf
mov
lods
xor
test
add
cmpsl
mov
xchg
shrb
loop
lock
lret
int3
mov
xchg
in
shlb
sti
jns
movd
int
sub
adc
pushf
jl
loopne
mov
mov
ljmp
mov
shl
enter
add
ret
xor
and
scas
scas
push
testb
and
xchg
or
ss
sbb
rorb
inc
push
mov
push
sbb
sarb
add
dec
xlat
push
lods
cmp
fisubs
vextractps
aad
pop
movsl
sub
add
fnstsw
clc
jp
cltd
or
mov
dec
xor
outsl
sarl
inc
out
icebp
inc
pop
fcoms
test
sahf
pop
pop
inc
arpl
arpl
inc
jnp
cmp
inc
leave
mov
sbb
enter
cld
jg
movsl
and
or
gs
mov
nop
adc
das
stos
sarb
add
aas
scas
sti
push
dec
and
repnz
or
mov
add
rolb
sub
sbb
sub
clc
push
cmpsb
jmp
pop
or
push
loop
dec
mov
dec
add
shl
lea
mov
lret
ret
psubusb
xchg
imul
rcrb
adc
sbb
inc
insb
imul
test
shl
dec
pop
daa
mov
inc
cld
call
nop
enter
xchg
scas
popf
jno
mov
xor
pop
outsl
arpl
loope
cmp
in
adc
cmp
pusha
andb
dec
jbe
push
movsb
mov
cmp
test
pop
add
xor
insl
clc
mov
inc
inc
pusha
scas
in
inc
push
jle
lods
test
imulb
sahf
dec
fdiv
cmc
fs
inc
ss
fs
cmc
mov
faddl
xor
ja
cwtl
jae
adc
mov
test
addr16
adc
hlt
cmp
mov
mov
cmp
pop
jmp
jns
push
and
adc
or
lds
gs
mov
xor
sbb
sub
out
adc
ds
mov
sarl
cmp
pusha
xor
out
lret
aaa
les
andb
je
rclb
cltd
sbb
and
cmp
mov
cltd
fdivl
pop
or
jecxz
das
popa
xchg
or
and
enter
xchg
mov
push
cli
outsl
jb
mov
fstpl
and
in
popa
shll
js
loop
pop
fidivrl
add
cmp
sub
int3
inc
idiv
push
mov
or
sarl
sub
mov
clc
sbb
xchg
in
adc
in
xchg
daa
pop
and
loopne
shll
add
mov
outsl
sbb
cmp
adc
stos
cmpsl
das
pop
stos
jns
pop
in
lea
je
in
mov
sub
lock
outsl
icebp
push
and
cmp
ret
pop
jne
sti
sbb
jge
outsl
or
push
aad
imull
or
mov
fwait
les
jg
cmp
add
inc
repnz
push
push
sbb
xor
ficoms
jb
loop
arpl
out
push
cltd
and
mov
out
dec
fisubrs
push
mov
push
push
jae,pt
pop
call
rcrl
sti
leave
or
testl
popa
push
and
outsb
aad
xorb
inc
ljmp
dec
sub
jp
shr
sahf
mov
push
shl
ljmp
sub
stc
adc
addr16
aaa
push
leave
in
pop
and
dec
jg
adc
icebp
jmp
cmp
aad
or
das
ja
xchg
mov
lock
cmp
xchg
js
xor
xchg
insb
aas
or
add
sahf
mov
aaa
pop
sbb
cmp
shll
mov
dec
test
shl
ds
outsb
icebp
imul
push
cmp
and
shrl
aad
sarb
andb
cmp
mov
pop
andl
icebp
mov
ffree
out
pop
enter
pushf
mov
jb
and
imul
push
leave
fstps
aam
mov
mov
fidivrs
ss
dec
xor
pusha
xchg
jle
push
sahf
pop
mov
sub
cmp
sbb
inc
inc
test
pop
add
sahf
pop
notb
out
jb
enter
inc
icebp
jp
jge
insb
xchg
fwait
adc
mov
jns
mov
insb
mov
xchg
push
stos
mov
sarl
push
repnz
jns
adc
cmpl
imul
arpl
sbbb
sub
scas
iret
mov
imul
cld
sbb
lods
mov
enter
aaa
data16
jbe
inc
dec
inc
mov
mov
cld
mov
and
cmp
push
jg
rcrl
aaa
or
push
mov
cmp
mov
movsl
mov
xchg
aad
jbe
mov
or
xchg
loopne
mov
std
mulb
repz
mov
jae
test
mov
mov
nop
cwtl
cmp
or
inc
daa
add
lret
andb
pmullw
insb
or
ret
dec
xor
add
push
or
scas
dec
rcrb
mov
xchg
lds
or
rorb
stc
sbb
jle
aad
jecxz
cmp
setl
cmp
lret
mov
shrl
nop
xchg
les
shll
pop
adc
daa
mov
xchg
jo
mov
cmpb
sbb
jg
cmpb
insl
ds
xchg
lods
repz
iret
cld
add
cmp
repnz
into
cmpsb
imul
ljmp
or
sti
icebp
repnz
mov
cs
inc
cmc
enter
push
orl
mov
test
lds
fcom
push
sarl
jecxz
mov
xchg
int
xchg
jecxz
xlat
xchg
pop
enter
lds
xor
ret
fcoms
xbegin
jns
jae
and
mov
push
dec
or
daa
mov
xchg
xor
les
dec
mov
sbb
xchg
sub
push
or
insb
hlt
mov
pop
nop
ljmp
loopne
insl
mov
dec
lret
adc
xchg
and
hlt
lea
dec
pop
jbe
addr16
popf
iret
pop
in
test
pushf
sbb
aad
scas
icebp
and
sub
inc
cmpsl
add
lret
hlt
dec
cmp
jbe
repz
inc
or
or
jge
inc
sub
cmc
mov
xor
sbb
sbb
icebp
ljmp
fcmovnb
imul
adc
std
add
pusha
dec
dec
fdivl
imul
dec
cmp
test
rol
imul
lea
dec
xor
test
add
sub
es
sbb
jo
outsb
pop
or
mov
sahf
cmc
mov
idivb
insl
and
fcomps
enter
lds
adc
pop
in
or
gs
fistl
scas
push
mov
mov
sbb
xchg
push
or
imul
fcoml
icebp
xchg
cli
xchg
mov
lods
stc
mov
jns
andl
xchg
test
sub
test
pop
roll
icebp
repz
in
je
sub
sub
call
sub
test
call
jge
mov
adc
dec
mov
in
dec
in
dec
inc
std
xchg
out
push
std
and
inc
dec
aam
xor
push
decb
adc
enter
or
movsl
shll
les
pop
mov
mov
push
xchg
repz
mov
xor
mov
rcrl
and
xchg
je
xor
cld
mov
pop
xchg
jle
je
mov
xor
mov
push
jp
sub
inc
inc
lret
aaa
scas
scas
lods
mov
idivl
mov
je
mov
push
and
push
jnp
mov
mov
std
cmc
cmp
mov
test
popf
xchg
out
test
test
or
in
popa
inc
mov
xor
push
and
mov
int3
xor
out
scas
sub
dec
pushf
int
jmp
test
mov
and
leave
sub
sbbb
mov
mov
xchg
loope
jbe
cmpsb
mov
divb
iret
lods
repnz
mov
add
pop
jge
inc
test
push
mov
mov
xor
in
jl
pop
add
rolb
lahf
stos
fstl
add
out
fs
fsubrp
flds
push
imul
lds
sti
fcmovb
pop
incb
or
repnz
push
cmpsb
shll
fs
push
jbe
and
faddp
add
les
push
incl
jp
jmp
cld
cwtl
mov
icebp
pop
or
cmp
inc
xchg
mov
loop
and
mov
jl
and
iret
repnz
mov
xchg
dec
jns
mov
push
jae
shrb
cmp
jnp
ds
mov
int3
fsubs
or
ret
test
cmpsb
cmp
loopne
int3
les
out
add
lock
insl
add
sbb
fsts
and
lret
dec
mov
popf
or
push
loope
inc
hlt
icebp
xchg
rclb
jl
adc
in
sbb
add
cmp
stos
into
loop
push
mov
int
loope
push
sub
shl
in
gs
sbb
mov
lret
fdiv
jo
call
mov
xor
jns
or
mov
pop
jp
adc
daa
out
mov
dec
xchg
pop
das
idiv
call
pop
stos
fs
sti
mov
popf
ds
insb
and
cmp
repz
xor
mov
or
add
mov
add
jg
popa
sarl
outsb
mov
loope
mov
push
adc
sbb
mov
jno
cltd
xchg
dec
fdivrp
xchg
jne
jne
dec
cli
aam
push
enter
shlb
pop
out
pop
cmpsb
fistpl
fucomp
mov
test
push
jnp
cli
xor
imul
push
iret
data16
xchg
loope
sbb
rorl
ljmp
cld
sbb
jmp
pop
pop
ss
lahf
das
fsubrl
mov
push
sti
mov
inc
add
xchg
mov
outsb
mov
mov
bound
mov
addr16
mov
mov
mov
or
leave
bound
cli
jae
inc
popa
xchg
addl
adcl
imulb
or
adc
inc
xor
cmp
xor
decb
pusha
jns
loopne
outsb
jns
stos
dec
hlt
fcoml
or
arpl
xlat
int
mov
fstl
push
add
push
xchg
sbb
fdivl
int3
test
decl
and
inc
rorl
or
add
add
sub
or
sbb
jecxz
lret
jecxz
aad
or
addr16
es
adc
loop
push
mov
mov
enter
adc
mov
mov
int3
dec
lock
mov
or
jge
out
inc
sarb
sub
mov
sti
pop
dec
ljmp
in
sbb
ret
xor
pop
inc
insl
mov
mov
sbb
cmpsb
push
sub
mov
cmc
and
sahf
cmpsl
leave
fnstsw
pop
inc
es
dec
dec
pop
xchg
xchg
pop
push
imul
push
out
into
out
adc
or
lods
in
mov
dec
jo
lods
mov
loop
jl
dec
mov
add
divb
ret
rol
pop
loop
and
push
mov
pushf
imul
mov
aam
cmp
jns
test
sub
jb
repnz
mov
int3
dec
fdivp
add
mov
jo
loopne
adc
out
sahf
mov
pop
adc
fcoml
cmp
test
cld
idivb
cmpsb
adc
or
lea
push
stc
sbb
xchg
inc
in
aad
ud2
data16
in
popl
rolb
pushf
je
fwait
cmc
sub
ds
sub
push
jae
dec
test
sub
push
jle
ret
rol
out
int3
xorl
cmpsl
push
popa
out
call
ret
mov
dec
sbbl
cmc
cwtl
inc
sbb
in
out
lahf
cwtl
test
rolb
xor
data16
cmp
outsb
jp
es
xchg
dec
fdivrl
jno
jb
fsubs
or
adc
sbb
jno
jmp
sbb
add
in
mov
push
pop
ror
push
mov
out
jge
outsl
cmp
mov
in
mov
xor
aas
mov
insb
or
cmpsl
sahf
jp
subl
mov
inc
cmpsl
xor
mov
int
shlb
jmp
push
sub
lods
sbb
es
dec
mov
test
out
enter
mov
lods
call
jmp
outsb
pop
mov
xor
push
push
pushf
mov
sub
mov
rolb
cli
xor
dec
arpl
shrb
lahf
js
mov
lahf
out
push
push
push
push
fcmovbe
mov
xor
nop
cmc
jp
or
add
popa
les
xor
adc
dec
hlt
pop
insl
mov
shll
sub
sub
mov
mov
or
adc
popf
les
test
xchg
mov
test
arpl
stc
out
xchg
adc
adc
sbb
cmp
and
jmp
movsl
lea
pop
pushf
cli
push
ret
xor
bound
arpl
push
out
fidivs
std
std
or
hlt
js
cmpsl
loopne
add
sub
cmp
xchg
lock
test
cmp
push
adc
xor
mov
and
pusha
aaa
jnp
dec
repz
lods
mov
or
repz
in
fdivl
popf
dec
shlb
add
sbb
add
clc
jg
cmp
inc
aad
shlb
fwait
and
mov
jb
aam
add
dec
test
fisubl
cmp
dec
mov
add
and
xchg
pop
mov
mov
inc
push
jbe
into
cmpsb
in
shl
or
xchg
inc
mov
ss
rcrb
sub
jno
cmp
push
add
std
mov
mov
xor
hlt
aad
sahf
pusha
cmc
fldcw
sbb
and
shlb
out
jecxz
insb
mov
inc
xor
inc
addl
idiv
cmp
ret
clc
jmp
into
je
sub
fucomip
inc
add
dec
icebp
xrelease
pop
fwait
mov
pop
cmp
pop
pop
scas
loop
jg
dec
push
das
mov
adc
push
cmpl
loope
ja
mov
out
rol
jmp
pop
cmp
imul
add
in
jle
or
fcmovne
aas
xor
push
mov
cmpsb
push
adc
add
aad
push
and
outsb
out
cmp
movsb
insb
jns
push
nop
clc
mov
inc
cmp
divb
out
xorl
cwtl
cmp
cwtl
mov
loop
dec
jae
in
sbb
pop
mov
std
jmp
pop
mov
idivl
xor
xor
addr16
iret
repnz
mov
jg
mov
pop
or
clc
xchg
xor
nop
hlt
addb
sub
sub
outsl
rep
clc
mov
add
xchg
sub
adc
jecxz
push
mov
or
bound
hlt
sbb
and
dec
bound
xchg
dec
es
ljmp
div
or
cmp
sti
out
outsb
loopne
nop
in
andb
jb
jb
stos
mov
mov
sbb
fwait
mov
mov
lret
hlt
icebp
shll
or
mov
inc
pop
jo
popf
dec
popa
xchg
mov
rcrl
test
insl
imul
lock
xchg
std
inc
mov
std
xchg
sbb
xchg
sub
ret
es
push
pusha
dec
mov
les
outsl
push
dec
or
sub
test
mov
daa
and
xchg
stos
inc
add
lcall
into
lret
push
dec
cmp
or
lods
fisttps
pop
pop
push
pop
arpl
xor
stc
inc
aaa
ss
mov
lret
daa
sbb
divb
inc
cmp
jecxz
add
adc
leave
lea
sbb
lret
idivb
ss
scas
out
fsubs
jl
imul
ss
mov
inc
mov
xorl
lahf
sub
loop
insl
and
enter
dec
in
push
xchg
test
in
aam
dec
nop
adc
or
cltd
jnp
in
fcompl
popf
out
les
mov
ss
aam
cmpsb
in
and
push
push
outsl
jno
movsl
ds
rcll
je
test
and
xchg
cmp
sub
punpckhbw
xchg
clc
dec
adc
mov
dec
mov
cmpb
mov
lret
sbb
sub
fisubs
and
popa
enter
cltd
dec
sub
or
lods
xor
mov
je
xchg
test
scas
cltd
mov
sbb
mov
ja
sbb
aaa
repnz
fwait
cmpsl
mov
pop
sub
ret
pop
cmp
inc
pop
adc
fildll
pop
inc
or
mov
jle
jl
leave
cmc
cli
stos
scas
inc
jp
lods
sahf
mov
push
cwtl
aad
mov
imul
movsl
hlt
mov
add
cmp
pop
lods
jno,pt
mov
push
ret
icebp
push
loopne
mov
in
mov
mov
lahf
add
ret
mov
mov
sub
xchg
jns
push
popa
lret
sub
jb
fisttpl
and
mov
pop
and
clc
jmp
out
push
lcall
fstpl
cmc
negl
movsl
inc
sarl
fwait
stos
lds
cmp
pop
call
pop
mov
hlt
xchg
aas
movsb
stos
ret
mov
imul
or
cmpsl
jmp
add
lods
icebp
lahf
sbb
jl
mov
shrb
sti
stos
dec
or
stc
mov
mov
sub
mov
pop
sarl
repz
lds
push
rcr
jne
hlt
or
notb
cltd
cmp
xor
or
and
aam
shlb
in
xor
lcall
xor
test
inc
sbb
cmp
leave
jno
adc
fcom
aam
and
mov
cli
int3
cmp
jge
jns
mov
cld
shrl
loopne
repz
push
sbb
sub
cmp
inc
sub
jo
mov
pop
mov
aad
imul
mov
sbb
cmp
aas
mov
add
daa
dec
call
shl
in
test
test
stc
jo
and
push
rolb
jle
add
push
cli
or
jmp
fisubrl
jge
and
mov
sahf
ret
or
inc
cmp
cmp
jb
fildll
inc
aam
push
repnz
pop
rol
insl
sub
andl
add
jne
sbb
push
jmp
jge
add
pushl
fnstcw
xchg
xor
jle
mov
pop
xor
pop
lea
pop
cld
pop
pop
inc
xchg
or
jns
and
sbb
adc
int
ffreep
insl
fucomi
mov
lock
addr16
push
jns
mov
ftst
lcall
dec
cmp
push
pop
daa
pop
std
jecxz
mulb
push
std
fidivl
xlat
lcall
test
fstpl
inc
inc
clc
test
cs
stos
scas
and
cs
xor
sub
sub
aam
dec
sti
jne
lahf
lock
and
bound
xchg
mov
test
repnz
inc
iret
ret
in
mov
gs
test
and
nop
dec
imul
xlat
mov
loop
dec
rcrl
cmp
and
push
mov
pop
enter
mulb
rol
pop
mov
ret
fs
fcmovbe
jl
pop
sarl
enter
test
add
adcl
push
lcall
out
mov
aas
mov
gs
cmpsl
shrb
dec
dec
dec
in
mov
mov
mov
shlb
add
sbb
and
xor
data16
jp
pop
add
fstl
shll
out
jo
ror
jae
push
cltd
jnp
adc
fisttpl
ret
pop
cli
in
inc
mov
fmuls
out
jo
inc
je
mov
and
jecxz
push
mov
xor
jmp
aas
mov
pop
and
imul
mov
xor
lea
ds
mov
sub
sub
mov
aam
insl
xor
sbb
jne
dec
cltd
xorb
scas
push
fistpll
xchg
aas
mov
sub
mov
mov
and
mov
inc
push
lock
imul
inc
push
push
jae
pop
addr16
cmpsl
mov
push
mov
sub
or
xor
call
scas
negl
pop
mov
and
pop
stc
repz
mov
lods
imul
jns
lods
xor
das
insb
lea
or
mov
jmp
cmpsb
mov
pop
sahf
and
fcomi
lahf
lds
iret
xchg
add
test
jg
outsl
mov
mov
adc
scas
movsb
push
mov
sbb
out
fidivs
and
mov
lret
cmp
push
and
stc
es
out
repz
sbb
lret
jne
aam
sub
jns
adc
movsl
adc
divb
push
fcomp
and
stos
jbe
ror
jnp
dec
scas
lods
dec
fwait
cwtl
nop
dec
mov
lret
mov
mov
or
dec
add
scas
ret
xor
mov
and
popl
ljmp
test
ja
jne
cmp
xchg
sub
ja
sub
outsb
adc
call
lds
mov
cmpl
ret
jp
dec
dec
mov
jns
mov
mov
lods
jns
sbb
subl
cmpsb
or
sti
mov
sub
mov
pop
divb
hlt
lea
pop
cmc
lahf
in
shll
pop
adc
jns
mov
mov
aaa
lsl
mov
repz
or
pop
inc
fst
mov
insl
insb
repz
adc
cld
stc
adcl
adc
jl
pop
mov
xor
sbb
rorb
daa
pop
inc
es
fldl
or
lods
pop
or
popa
popa
jecxz
xchg
mov
test
in
add
sarb
xor
or
xlat
addr16
call
adc
mov
xor
js
iret
push
jg
push
pop
shlb
xorl
pop
iret
inc
or
into
imul
icebp
dec
aas
mov
out
or
scas
push
jns
dec
dec
sub
sbb
testl
ret
inc
jmp
test
pop
daa
test
dec
imul
ret
jg
and
insl
mov
out
jo
dec
int3
outsl
adc
leave
jns
call
shll
xchg
orb
push
xchg
lea
les
xchg
fcomip
aam
sub
mov
lret
int
adcl
mov
jo
je
jl
js
cmpsb
mov
cmpsb
jns
xchg
shl
lahf
mov
mov
mov
sub
add
in
je
adc
cmpsl
jb
jae
pop
and
jnp
mov
fs
hlt
fidivrl
repnz
addr16
xor
sbb
loopne
sbb
mov
fidivrl
testb
fwait
push
mov
inc
popf
cmp
fildll
xchg
lret
mov
mov
jmp
jns
pop
lcall
pushf
ds
ds
testb
mov
push
xchg
in
sbb
dec
add
aam
arpl
sub
cmp
xchg
movsl
int3
inc
dec
lcall
mov
pop
jo
xchg
and
xchg
cmp
fstp
and
ljmp
mov
adc
mov
outsl
mov
stos
aas
scas
xor
clc
inc
or
fcoml
ret
enter
nop
inc
and
mov
push
insl
adcb
mov
dec
push
cmp
jno
sahf
inc
cwtl
leave
dec
out
mov
push
add
incb
in
pop
fsubr
xor
aas
inc
dec
mov
xchg
xor
inc
dec
cmpsl
sub
dec
cmp
mov
sarl
push
adc
cmc
insl
aaa
addr16
cmp
cmpsb
cli
icebp
jne
pop
xchg
and
mov
sbb
push
lret
mov
jecxz
mov
jns
loope
lea
and
jns
pop
rcrb
enter
or
xchg
pop
mov
pop
loop
dec
comiss
leavew
rcll
xchg
and
test
cmp
ljmp
push
xchg
fs
mov
pop
cmpl
adc
mov
push
ljmp
and
cmc
in
xor
jns
jns
jne
das
dec
pop
lcall
lret
inc
mov
add
pusha
ds
or
inc
lock
insb
les
xchg
aas
inc
push
xor
cltd
loop
xchg
mulb
lds
add
inc
icebp
outsb
push
pop
inc
sti
pop
xor
sti
cmp
dec
in
pop
into
pop
or
out
xchg
push
icebp
notb
int3
ljmp
enter
jp
xor
scas
xor
mov
inc
aaa
rcl
in
shl
roll
les
dec
dec
std
sub
pop
or
and
xor
mov
and
sub
cmp
mov
xor
mov
dec
ret
mov
dec
push
out
jo
jae
clc
adc
icebp
sub
inc
add
sbb
movsl
push
jge
inc
jge
push
or
adc
test
mov
mov
adc
mov
outsb
mov
das
data16
pop
inc
fstpl
pop
push
sub
ret
mov
stos
dec
and
outsb
ficompl
and
ret
aas
mov
mov
test
repz
test
mov
sub
js
cmp
mov
inc
dec
mov
lods
in
mov
ljmp
and
sbb
out
icebp
cli
and
push
out
fs
std
pusha
dec
pop
inc
mov
jbe
jecxz
loop
jmp
sbb
or
adc
xchg
shll
pop
push
mov
pushf
inc
sbb
scas
inc
mov
pop
cmp
sahf
cmp
lods
cmpsb
dec
cmp
loopne
out
pop
hlt
jb
stc
out
push
fcmovnb
scas
aad
or
dec
bts
and
out
xchg
cltd
jl
lods
xor
out
stos
sti
imul
orb
lcall
jg
rcl
sbb
jle
fs
xor
pop
mov
sbb
jp
cmp
sbb
sbb
mov
push
in
insl
sbb
fstpl
stc
popa
scas
adc
insl
lahf
mov
xlat
out
rorb
fs
jmp
cmp
mov
push
jl
push
jp
fdiv
push
fcompl
fisubl
hlt
loope
outsb
subl
mov
gs
dec
in
xlat
ret
in
add
test
scas
inc
push
ss
shl
out
std
and
mov
sub
mov
lret
and
xchg
test
lea
xchg
mov
cmp
pushf
push
jnp
jb
mov
lea
sbb
fdivr
push
int
jmp
xchg
in
enter
xchg
inc
test
or
or
aaa
xchg
lea
lahf
jp
pop
shrl
icebp
jbe
pop
fucomip
inc
cmc
test
cs
pop
mov
cmc
stc
jl
sbb
icebp
inc
lahf
xchg
out
arpl
and
sub
sbbl
loope
sbb
daa
dec
cmpb
cld
insb
sbb
cmpl
out
ret
xor
adc
fucomp
xchg
sub
ljmp
pop
je,pt
xor
push
jecxz
push
fnsave
sahf
push
mov
cmp
adc
ja
or
fstps
pop
call
test
push
xchg
sbb
add
adc
mov
shrb
les
aam
fdiv
xor
xchg
sar
push
cmp
incl
bound
and
dec
cmpl
mov
insb
add
jbe
sub
mov
lods
add
stos
pop
cmp
aaa
xor
ljmp
jnp
sti
sbb
mov
add
lds
enter
pop
or
pop
add
inc
in
inc
xor
jmp
jne
cmp
sub
sahf
jb
or
cmp
loope
sbb
test
insb
jne
jecxz
inc
jle
loope
sbb
add
dec
aad
idivb
inc
mov
fists
dec
jno
jp
jae
and
lahf
bound
adc
inc
sub
sbb
jl
push
fsts
or
mov
cmp
aam
cmp
out
push
dec
lods
aam
or
and
jmp
adc
jae
mov
test
adc
inc
aaa
rorb
arpl
xchg
movsb
sbb
imul
xor
pop
loope
inc
pop
cltd
xor
push
push
dec
pop
pop
xchg
dec
push
lea
test
out
dec
decb
jg
push
add
lret
mov
testl
test
pop
mov
mov
push
push
lret
aam
mov
in
adc
inc
imul
pushf
xor
nop
or
and
test
xchg
xor
mov
enter
xchg
mov
mov
push
adcb
sti
lahf
sti
sub
xchg
xchg
aam
dec
mul
mov
stos
or
ret
sahf
mov
sbbb
xchg
mov
int3
inc
sbb
sbb
push
das
push
pop
sbb
hlt
imul
mov
add
pand
orb
sbb
mov
jl
stc
adc
arpl
push
and
xor
test
sbb
xchg
addr16
loop
in
test
bound
lds
inc
adc
pop
jb
add
push
cmp
push
ljmp
ret
fsubs
sub
cmp
push
inc
xchg
call
sub
mov
in
jge
add
pop
jecxz
leave
jp
or
add
cli
enter
pop
lahf
mov
lock
icebp
and
sbb
call
imull
push
dec
xchg
push
out
mov
push
xchg
mov
out
sbb
or
cmc
sub
daa
push
outsb
xor
pop
scas
xor
lods
lock
dec
xor
inc
inc
push
cmp
nop
jle
xor
adc
sub
lds
sbb
mov
push
js
out
sub
and
pop
adc
sahf
ss
adc
add
xchg
sarl
mov
sarl
in
imull
movsl
sbb
xchg
xor
dec
mov
test
or
cmp
sub
jnp
mov
bound
leave
aas
pop
inc
mov
xchg
and
jne
loope
pop
movsl
jns
mov
or
mov
push
insb
mov
and
xchg
adc
dec
popa
cwtl
xlat
or
call
jne
orb
and
pop
mov
pushf
push
imul
xor
jp,pn
mov
movsb
cmp
pushf
mov
inc
push
lods
cld
in
inc
lcall
leave
outsl
cmpsb
in
jp
scas
int
sub
push
cmp
cmp
int3
push
nop
xchg
gs
add
fdivs
test
ret
dec
mov
jp
pop
cmc
das
add
sub
in
pop
push
jge
mov
adc
test
add
sti
lret
pop
adc
pop
test
dec
jb
mov
lret
fs
sbb
fstpt
and
ljmp
cmp
jmp
add
lock
call
cwtl
jb
ret
xor
dec
outsl
ss
and
jmp
out
xchg
mulb
leave
pop
push
push
sub
in
stc
mov
pop
or
insb
jb
cmp
xchg
mov
push
popa
aam
adc
pop
and
pop
inc
fucomp
fdivrl
test
test
push
pop
fsubs
pop
mov
lcall
ds
out
imul
mov
push
int3
dec
lahf
js
sub
add
pop
xchg
lods
push
fdivrs
test
xor
jne
jmp
cmp
imul
mov
insl
notb
addr16
xchg
daa
jecxz
insb
add
cli
xor
push
mov
in
outsl
in
and
pop
arpl
popa
sbb
xor
icebp
push
leave
push
add
mov
push
inc
mov
inc
dec
sub
sbb
mov
repz
adc
es
ret
sbb
repnz
jle
iret
ds
sbbl
out
clc
sub
rclb
movsl
xchg
xchg
or
inc
cmpsb
adc
xlat
sbb
inc
mov
or
adc
test
push
je
dec
test
cli
jp
and
jbe
movsl
xor
pop
pop
fnstsw
xorb
movsb
negl
push
cltd
push
in
loop
push
pop
out
jmp
xor
cli
mov
das
xchg
push
sbb
push
or
push
popl
fsubrs
pop
add
test
xchg
insb
push
or
add
push
xchg
decl
data16
shl
ljmp
sub
or
dec
lods
push
incl
cltd
push
jmp
dec
in
add
jmp
dec
rorl
aas
xor
push
xor
in
inc
outsl
addl
out
mov
cs
sbb
dec
pop
rcrl
push
jmp
lock
lods
repz
adc
frstor
sti
mov
lods
hlt
mov
mov
pop
inc
stos
push
rorl
lock
insb
dec
xor
loopne
shrl
pushf
cmp
or
xor
adc
lret
add
pop
subb
push
adc
mov
jmp
inc
inc
leave
nop
inc
jle
test
out
aam
or
movsl
xchg
scas
cmpsl
dec
test
frstor
test
bound
imul
in
and
rorl
sbb
outsb
jns
fcom
imul
xor
sub
push
sub
and
jo
aam
dec
fwait
mov
push
adc
lods
cli
outsl
cmpsl
mov
sbb
pop
stos
or
shl
clc
lret
cmp
push
dec
xor
cmp
fisttpl
ret
sub
out
inc
xor
shr
ret
and
dec
pop
cmp
xor
aaa
xor
sbb
adcl
jnp
pushf
test
cltd
outsb
dec
xor
ficoml
scas
pop
push
fwait
rorb
jmp
inc
in
aaa
shrb
xor
cs
xchg
insb
mov
pop
loop
push
mov
rolb
mov
das
int
sbb
fcmovu
and
fsubrl
les
sbb
add
popa
xor
xor
test
push
repnz
cmc
adc
mov
xor
ljmp
pop
lret
scas
jnp
lock
pop
adc
jecxz
add
in
jnp,pn
cmpsl
sub
jecxz
jns
sub
add
jbe
data16
int3
int3
mov
push
mov
pop
push
pop
cmp
mov
mov
sbb
cltd
inc
popa
dec
insb
popa
add
loop
inc
call
cmc
mov
insb
adc
int3
les
ja
out
cmp
in
push
adc
stos
rclb
idivl
test
je
cmp
pop
int
xor
test
jnp
cmp
sbb
xchg
adc
gs
sti
mov
dec
push
and
xorl
push
mov
sub
data16
ret
in
dec
dec
push
jmp
in
jne
add
sti
and
jg
out
xchg
dec
fbld
mov
std
dec
test
cs
pop
cs
dec
int
test
push
cltd
cld
add
xchg
sub
xchg
xchg
fidivrl
xchg
call
loop
es
and
mov
stc
insb
cmovg
mov
cmp
push
jle
mulb
pop
hlt
pop
push
loop
gs
pop
hlt
fwait
mov
out
icebp
fildl
sahf
xor
lods
xor
pop
and
and
fidivrl
xchg
ret
pusha
xor
std
sahf
out
leave
in
and
fiaddl
daa
imul
repnz
xchg
ljmp
es
ljmp
mov
mov
xor
ret
scas
sub
xchg
repnz
sbb
xor
imul
repnz
sub
cmc
fwait
icebp
mov
mov
mov
add
add
pop
jl
mov
divl
fwait
lret
push
scas
add
fimull
add
inc
jp
jecxz
inc
imul
das
mov
vucomisd
shlb
fmul
pop
cmp
jecxz
cmpsb
jg
outsl
or
fmuls
cld
cmp
fwait
mov
mov
add
out
sti
in
imul
in
jbe
leave
mov
xchg
and
push
or
mov
adc
jg
fadd
push
cmc
sub
movsb
ljmp
pop
and
lods
cs
subb
in
ds
pop
cli
push
and
aam
jno
push
sti
jecxz
xchg
daa
call
cmp
call
xor
push
inc
jmp
ds
mov
jl
ds
cs
andb
jmp
test
out
xlat
divb
loopne
popa
jae
mov
xor
mov
int
addl
cltd
xlat
xor
rorb
mov
hlt
mov
adc
and
jne
inc
out
dec
push
jp
rclb
shll
dec
dec
xlat
jbe
xchg
je
push
cwtl
jecxz
inc
jo
xlat
mov
lods
pop
std
adc
pushl
mov
cmp
dec
xchg
jge
scas
aam
icebp
rcr
sahf
fisttpll
adc
js
sub
jnp
ds
mov
jbe
jmp
xchg
jb
arpl
loop
stos
std
ljmp
inc
cli
sbb
dec
jno
insl
bound
add
std
adc
cmp
sub
pop
pop
jecxz
inc
xchg
sbb
insb
movaps
fisttpll
jmp
mov
imul
xchg
frstor
in
cli
out
and
sub
aaa
in
xchg
aam
std
adc
call
add
std
scas
lods
push
rcl
mov
and
xor
push
lds
pop
add
cwtl
cmc
jnp
mov
jp
add
outsl
test
iret
jne
mul
mov
pop
inc
xor
sub
fiaddl
out
sub
dec
shll
cmp
jle
add
lahf
add
out
pop
xchg
pop
dec
test
mov
jecxz
data16
mov
sar
push
xchg
lea
popf
mov
lcall
push
jne
iret
out
adc
sub
pop
dec
ja
sbb
insb
cwtl
add
lahf
add
stos
outsl
push
xor
insl
movsl
xor
cmp
push
dec
cmpsl
mov
mov
push
pop
xchg
repz
dec
jl
fists
cmc
cmp
setae
es
aam
xchg
enter
lea
mov
add
clc
icebp
pop
xor
ds
outsb
dec
mov
pop
xor
loope
mov
push
imul
jns
test
cpuid
std
repnz
xor
xchg
test
mov
in
in
pop
aas
dec
ret
adc
lahf
push
lret
mov
dec
cmp
sbb
xor
repnz
pop
nop
sti
rcr
out
sbb
ret
mov
repnz
cmp
ja
scas
out
push
scas
add
jecxz
pop
hlt
movsl
push
fisubs
shll
aad
xchg
lods
xor
push
dec
add
neg
into
movsb
push
push
xor
in
movsl
nop
bound
lds
pop
cmp
mov
dec
mov
cmp
popa
xor
dec
into
sub
imul
pop
pop
and
imul
push
out
mov
ret
pop
aas
imul
mov
xor
or
out
rcrb
push
mov
fistpl
faddl
shl
or
add
gs
fstl
pop
dec
mov
and
jp
mov
and
xchg
sahf
outsl
or
adc
push
add
cld
shrl
mov
rcr
test
mov
sbb
pop
bound
les
xchg
jmp
test
inc
rcll
loop
pop
xchg
imul
pop
cmp
pop
outsb
cmpl
repnz
sub
mov
sbb
popa
fs
js
repz
pop
mov
add
cmp
mov
pop
ret
in
push
iret
sbb
insl
aad
lods
mov
roll
jns
add
jns
mov
or
inc
les
ds
cmpsl
ret
xchg
mov
rcr
ret
add
and
xchg
sub
mov
aad
in
jecxz
mov
add
outsl
roll
push
or
mov
and
cmpsl
cmc
dec
cli
je
adc
icebp
std
xchg
out
aaa
push
adc
cmp
inc
mov
outsb
int
nop
cmp
sub
sbb
dec
dec
mov
xor
push
mov
out
jle
outsb
sti
mov
mov
dec
test
or
sbb
aad
and
addr16
or
test
cmpsl
call
sbb
mov
outsb
mov
xchg
arpl
mov
jmp
sbb
inc
pop
call
push
fcoms
je
popa
mov
adc
fsubl
fisttpl
xchg
sti
in
or
pop
ret
cmpsb
xchg
xchg
cmp
xor
pop
popf
mov
lods
push
xchg
jp
mov
xor
or
data16
loope
push
test
jl
xor
mov
inc
std
sbb
jno
das
or
inc
sub
sbb
jmp
inc
add
push
push
and
and
ja
fistl
or
xchg
cmc
add
push
add
mov
insl
xlat
lea
xchg
fwait
bound
test
sti
repnz
adc
and
cmp
push
xchg
loopne
rep
jecxz
mov
cmp
or
mov
cmpsb
fwait
jne
xchg
push
xlat
mov
sbb
subl
xchg
int3
test
call
imul
add
mov
sti
js
sti
fisubs
fcomp
xor
iret
adc
mov
fsubrs
enter
notb
dec
fsubl
pop
jns
and
lock
jae
test
mulb
mov
pop
mov
shrl
cmpsb
adc
out
mov
jo
jl
gs
int3
jge
insl
xor
mov
mov
mov
adc
loop
loopne
dec
je
adc
xchg
movsl
push
test
js
movsb
and
cwtl
ljmp
aaa
iret
lret
icebp
dec
push
enter
adc
popa
int
inc
stos
jns
je
ret
pop
jp
cmp
in
out
repnz
fldcw
xchg
fbstp
daa
xor
mov
in
iret
std
mov
mov
jmp
in
and
std
fwait
jg
pop
lods
xor
stos
add
or
cld
dec
shrb
je
jmp
ds
jg
es
ret
sahf
xchg
lods
roll
outsb
jecxz
or
aad
add
stc
mov
xchg
xor
and
pop
pop
stc
mov
jmpw
js
add
push
jmp
or
mov
jmp
popa
pop
xor
or
or
insb
ja
enter
pop
or
cli
mov
mov
adc
cltd
pop
lods
arpl
and
xchg
gs
adc
fsubl
icebp
loop
cmp
cmp
pop
movsl
pop
in
pop
inc
daa
inc
into
mov
xchg
int3
lcall
inc
shrl
aas
enter
aad
leave
ljmp
add
mov
add
add
sbb
and
pop
movsl
pop
jp
or
xchg
push
cmpsb
mov
faddl
loope
not
or
or
mov
sub
cwtl
stos
inc
dec
adc
shrb
int3
xchg
movsb
sub
xchg
je
imul
rcll
movsl
jo
xchg
sbb
mov
std
lea
xlat
add
cmp
mov
aas
arpl
test
mov
movsb
pop
test
xchg
mov
in
sbb
sub
imul
mov
push
lahf
sub
popf
sbb
sbb
ss
lods
ljmp
fs
sbb
sub
push
insl
fdivrl
sbb
in
icebp
jbe
jb
data16
lret
std
repz
pop
xchg
repz
push
or
fwait
aam
out
test
sbb
test
lahf
dec
pop
in
roll
mov
aas
pop
loop
out
add
aam
add
push
adc
cld
and
fs
jno
movsb
divb
repz
jle
insl
pop
dec
mov
loope
adc
ljmp
jecxz
mov
dec
xor
add
add
dec
pusha
nop
int
mov
xorb
rorl
dec
pop
or
lds
sbb
dec
movsb
dec
mov
xchg
fdivrs
sbb
jmpw
cmp
mov
out
ret
push
fwait
pop
mov
sti
int
mov
mov
std
sub
xor
pushf
mov
stos
lret
sbb
dec
into
jp
pop
or
pop
sbb
xlat
sti
arpl
out
xchg
pop
xchg
mov
insb
test
sarb
push
sbb
pop
jecxz
push
cmc
mov
popf
nop
pop
lea
mov
fcomip
jl
mov
cmpl
imul
mov
sub
or
add
pop
jg
cld
jge
push
jbe
xor
push
iret
cmp
inc
filds
or
repnz
in
jp
xlat
adc
xor
cmp
add
pushf
inc
aaa
test
out
jp
incb
bound
aas
or
sahf
pop
mov
aaa
ret
fdivrp
push
outsl
jnp
es
sarb
ljmp
dec
cmp
adc
gs
lret
loop
jge
and
mov
xor
inc
inc
adc
test
jo
pop
push
mov
arpl
dec
aam
popf
adc
iret
stos
int3
jecxz
testl
decl
inc
add
mov
movsb
pop
xchg
popa
mov
mov
push
sarb
xor
lods
divb
dec
pop
jbe
testl
cmpsl
adc
rcr
or
push
fidivrs
sub
push
lahf
shl
shrl
add
jle
xor
imul
xchg
shll
mov
jmp
cmp
enter
or
mov
sbb
mov
das
mov
mov
add
stos
movsl
orb
xor
pop
cmp
xchg
pop
push
in
or
das
outsl
or
aas
fsts
jnp
xlat
mov
mov
iret
sbb
xor
iret
std
rcrl
and
or
enter
mov
pop
test
pop
std
jle
lods
loopne
test
mov
repnz
push
cmc
out
aas
fsubl
out
iret
fcoms
xchg
in
push
movsl
push
inc
test
or
rol
in
cmp
stos
iret
dec
loopne
adc
jae
lcall
mov
or
mov
pop
loope
sub
mov
sub
lea
xchg
xor
out
inc
into
insb
sbb
popf
dec
pusha
xor
xor
push
xor
mov
mov
sub
arpl
jns
push
out
jae
test
or
jmp
jmp
add
arpl
pminsw
jecxz
movsb
lock
sub
pop
in
adc
lods
lea
fsub
out
sbb
pop
and
inc
sbb
popa
dec
sbb
jge
cltd
insb
stc
dec
pop
and
pop
test
in
cmp
jmp
addr16
mov
cmp
push
sub
mov
push
xor
bound
loopne
mov
lock
sbb
fs
cmpsl
adc
das
imul
mov
xchg
dec
repnz
mov
lock
sbb
mov
or
cld
cli
lock
jo
loop
sti
mov
mov
push
xchg
xchg
dec
arpl
popf
pop
mov
ret
iret
fcmovnbe
mov
and
jbe
pop
repz
in
fs
popf
repz
inc
fildll
cltd
jns
mov
pop
pop
shl
mov
sbb
sbb
arpl
loop
mov
testb
jb,pn
loopne
xor
rolb
fimull
lret
pop
cmp
lcall
rclb
jmp
fs
scas
les
shll
jb
outsb
pop
insl
pop
nop
jl
inc
adc
sub
and
out
xor
lret
sub
test
and
inc
pop
nop
lods
dec
ljmp
or
ret
stos
pushf
cmpsb
mov
ja
cmp
stos
push
or
loopne
fcmovbe
jmp
cmp
mov
nop
imulb
inc
ja
fnstsw
lahf
arpl
jae
mov
xchg
push
out
add
aas
cmp
xor
pop
aas
inc
add
leave
adc
mov
in
ret
leave
pop
and
pop
push
in
test
imul
push
fsts
sub
fiaddl
xor
lea
cld
adc
cld
jp
sbb
repz
movsl
xchg
jp
pop
cmpb
mov
repnz
daa
sbb
pop
mov
enter
out
sti
xor
pushf
rorl
iret
lods
xchg
cmp
jecxz
cmp
test
sbb
sub
push
call
xchg
call
hlt
mov
lea
cmp
and
sub
mov
enter
jp
inc
aam
lods
mov
loop
or
test
mov
inc
scas
or
jnp
jle
out
sub
mov
fdivl
and
push
movsl
mov
add
inc
mov
fists
in
cmpsb
dec
sbb
shlb
inc
test
lods
dec
mov
jns
push
add
dec
dec
xchg
repz
shrl
mov
and
xor
mov
aam
sbb
push
xchg
xor
jl
rcr
jle
stos
imul
out
fxch
push
scas
dec
cmp
fiaddl
mov
out
addr16
cld
ljmp
vpsadbw
and
lods
adc
repz
sbb
mov
add
scas
leave
call
into
cmpsl
mov
sbb
add
int
shll
subl
mov
push
inc
pop
je
lds
adc
cmc
adc
push
mov
hlt
adc
ja
mov
cmpsb
xor
shlb
jb
test
jae
mov
add
sub
dec
mov
and
in
shlb
cmp
mov
inc
jecxz
das
icebp
fisubrl
data16
mov
inc
dec
enter
outsl
int3
cmpsl
cmp
mov
push
push
movsl
jnp
outsl
dec
sahf
mov
ljmp
out
testb
aaa
dec
jle
mov
mov
sbb
inc
stos
shrb
mov
mov
andl
jno
push
or
fsubrs
or
ds
mov
and
insb
dec
inc
and
fmul
out
fcoml
out
addr16
push
fisubrl
nop
insl
mov
arpl
push
push
xor
inc
pusha
stos
cmp
outsl
jbe
shrl
cmpsl
and
dec
lret
xlat
or
iret
ret
pusha
sub
cmp
jo
lods
sbb
or
inc
mov
repnz
adcl
mov
and
inc
mov
cmp
dec
and
inc
lods
shl
repnz
ljmp
lea
dec
daa
sub
or
cwtl
scas
sbb
scas
xor
pop
adc
mov
fisubs
incl
out
scas
adc
mulb
jmp
lcall
std
inc
mov
flds
push
std
in
out
and
and
int3
test
mov
xor
mov
mov
fdivrs
cmp
sbb
and
cmpsl
jbe
push
and
rclb
popf
mov
sarb
mov
mov
out
push
into
xor
dec
jb
xchg
jb
adc
gs
cs
mov
cld
test
add
sub
mov
xchg
cmp
pop
out
adc
xchg
ficoml
push
int
mov
or
je
jl
xchg
adc
hlt
sbb
arpl
push
push
push
xchg
cltd
xchg
jbe
sahf
xchg
ds
push
sbb
cwtl
pushf
push
loope
loope
scas
add
das
mov
shlb
adc
adc
je
pop
add
dec
ja
xlat
or
cmp
xchg
pop
divb
jnp
shlb
pop
add
outsb
jbe
adc
xchg
pop
sub
ljmp
imulb
mov
jno
lret
jno
add
jle
das
jnp
mov
fsubr
dec
ret
push
lahf
jp
out
addl
and
out
dec
testl
xor
mov
dec
inc
das
dec
add
pop
std
inc
lds
inc
mov
jle
cwtl
lcall
and
sahf
pop
sarl
mov
xor
jb
call
aaa
xlat
icebp
loopne
pop
xor
gs
or
nop
jae
pop
mov
cmp
mov
test
or
lds
mov
push
out
xor
jnp
cmpsb
cld
add
mov
push
xchg
xchg
fdivs
gs
push
pop
mov
mov
ljmp
inc
xchg
lds
enter
pop
js
gs
testb
cmpsb
push
jle
and
sub
lcall
rcrl
repz
in
insl
add
sbb
xchg
jbe
push
int
and
mov
je
dec
sbb
pop
mov
ret
mov
in
lret
shll
jns
mov
pop
int3
pop
lahf
jp
jecxz
fldenv
popa
or
sub
outsl
add
push
pop
sub
xchg
mov
mov
addb
fildll
pushf
lret
pop
fwait
inc
push
lods
mov
rorl
dec
xor
lods
jp
lret
mov
pop
lcall
cli
xchg
cs
shlb
daa
add
int
pop
test
pop
jecxz
mov
insb
sti
sbb
mov
icebp
ret
push
lods
push
hlt
or
cmp
fnstsw
mov
mov
push
sub
jmp
incl
adc
int3
xchg
insb
push
aam
adc
aaa
inc
sub
aaa
sub
les
mov
out
dec
int3
icebp
cmp
bound
mov
sbb
lea
sbb
out
jne
sub
pop
pop
rcrb
flds
sahf
cs
lods
dec
addb
pop
aaa
js
mov
push
aam
push
ds
dec
and
dec
scas
push
mov
aad
movsl
push
mov
cmp
push
push
inc
lods
jnp
sbb
lea
dec
out
icebp
xlat
call
push
or
out
fs
rorl
dec
in
int3
cmpsb
jmp
pop
sbb
xor
into
pop
fidivl
mov
sti
mov
fnstenv
ljmp
push
cld
cmpsb
aad
push
mov
shrb
fwait
cmp
mov
inc
dec
xchg
repnz
outsb
jp
jns
clc
aas
mov
outsl
ljmp
xchg
pop
xchg
fiaddl
pushf
xchg
inc
cmp
jb
mov
pop
in
test
fwait
lods
mov
push
ret
xor
cmp
sbb
test
dec
cld
and
cmp
mov
loope
push
cmpsb
lods
imul
or
out
and
jmp
pop
cmp
aad
test
je
movsl
jo
sub
popa
mov
jmp
cli
xchg
cmpsb
and
inc
push
add
mov
orl
ljmp
adc
mov
hlt
sub
pop
dec
xchg
mov
shlb
inc
cmp
mov
mov
mov
out
out
leave
js
clc
sahf
mov
adc
jne
xor
hlt
xchg
imul
sub
out
adc
loope
jo
jae
dec
fistps
andl
insl
enter
loop
pop
int3
and
imul
stos
movsb
out
out
outsl
movsl
mov
sbb
dec
add
mov
or
lahf
js
insb
push
popa
mov
fidivrs
cli
jo
jmp
cmc
imul
popf
repz
jo
add
mov
es
inc
sub
fistpl
cwtl
mov
and
and
iret
xlat
xchg
dec
push
arpl
cmp
cmp
js
retw
push
xchg
xor
xchg
cmp
cmc
and
shl
cld
aam
add
shll
jecxz
mov
int3
shl
pop
sbb
add
or
jmp
mov
gs
jmp
movsb
push
les
or
inc
cld
das
fidivs
gs
cmp
jo
nop
rolb
push
in
jg
notb
fwait
push
xchg
rolb
pop
xchg
ljmp
sub
repnz
int3
pop
loopne
stos
fwait
sbb
push
xchg
lea
mov
mov
lea
xor
mov
shl
mov
mov
push
cmc
and
in
pop
stos
sbb
stc
incb
imul
xchg
xchg
fisubrs
adc
sbb
lea
cmp
adc
lock
fsubs
scas
xchg
shrl
stos
jg
lods
in
cmp
mov
jp
mulb
mov
mov
pop
xchg
sbb
jl
xchg
data16
mov
dec
scas
and
pop
stc
ja
sbbb
in
push
das
cli
mov
mov
loop
xchg
cmp
adc
and
xchg
imul
cmpsb
sahf
or
sub
out
hlt
cmp
movsl
lret
movsb
daa
jg
pop
mov
inc
pusha
pop
addb
loopne
lahf
dec
ss
mov
pop
sbb
push
sbbl
adc
ret
or
dec
xchg
stos
jecxz
cltd
xchg
push
cmp
xchg
scas
mov
sbbl
jo
lcall
out
test
mov
ffree
aam
call
sbb
pop
arpl
xchg
lret
outsl
xchg
inc
inc
daa
cmp
jp
mov
pop
repz
sarl
les
inc
adc
add
iret
pushf
lret
jmp
fistl
push
push
push
out
pop
pop
gs
mov
push
cmp
push
mov
repnz
dec
hlt
sub
xlat
inc
je
jmp
dec
loopne
pop
int3
fistl
imul
data16
inc
js
cwtl
cmp
out
cltd
xor
mov
lret
outsl
jecxz
out
sarb
jp
clc
or
je
sbb
inc
jb
popf
stos
sti
dec
cltd
ljmp
mov
xchg
push
or
fs
mov
xor
in
push
in
arpl
jecxz
rcll
dec
dec
enter
js
mov
mov
cli
pop
xchg
roll
jl
jg
dec
dec
imul
into
and
mov
ds
enter
movsl
or
pop
nop
loopne
inc
movsb
lahf
fdivrs
stos
pop
ds
pop
cmpl
add
mov
mov
add
jmp
xchg
add
xor
call
aam
cmp
pop
fstpt
pop
jae
push
out
ljmp
cs
xchg
push
bound
addr16
scas
outsb
out
popf
pop
pop
insl
lea
cwtl
es
subb
pop
popf
clc
mov
iret
ds
inc
add
dec
int
cwtl
ret
pushf
stc
dec
cmp
jo
cwtl
mov
xchg
cmp
cmp
aas
movsl
lods
rolb
jp,pt
shrb
sbb
cli
or
dec
pop
clc
les
pop
outsl
mov
xchg
cltd
je
stos
stc
dec
out
fimuls
repnz
mov
into
leave
and
fsubrs
push
push
xor
shrl
or
add
int3
mov
iret
insb
inc
cltd
mov
jl
mov
les
pop
xchg
in
addr16
mov
fbstp
cmpsl
cmp
int3
popa
jo
pushw
inc
in
pop
jo
add
cmc
emms
in
popa
mov
jle
into
adc
adc
sub
adc
sub
sub
or
lret
push
jnp
std
sub
pop
cmp
push
and
pusha
push
push
jge
int
and
mov
sub
adc
addl
pop
push
xchg
jle
inc
int3
and
pop
cltd
mov
xchg
xchg
adc
rcrl
fstpt
dec
push
sbb
aaa
adc
and
sub
jb
mov
jo
imul
enter
inc
les
mov
cmp
fldpi
adc
dec
lods
test
add
mov
push
sbb
lahf
sub
fldt
mov
pop
pop
push
pop
std
stc
inc
cmp
js
cmc
sbb
xor
lcall
daa
jb
testl
pop
fnsave
mov
push
mov
ffreep
inc
xchg
adc
les
shl
mov
cld
push
in
add
cmp
and
mov
push
arpl
orl
xlat
push
inc
jne
out
xor
fistpll
insl
lahf
sbb
lock
add
inc
sbb
fs
mov
loope
adc
aaa
mov
inc
cltd
mov
mov
ja
sbb
add
shl
rcrb
aaa
call
mov
out
test
xor
loop
mov
push
pop
loopne
mov
stos
push
lahf
inc
jno
insl
stos
push
mov
sub
adc
mov
aaa
cmp
add
xor
sbb
daa
mov
mov
ds
outsl
xchg
sub
or
mov
xor
cmp
push
addr16
pop
hlt
lds
xchg
mov
xchg
dec
sub
insl
or
xor
aaa
pop
dec
sbb
rorb
dec
mov
jg
xor
test
sub
jns
xchg
xchg
lcall
xchg
sti
push
mov
fs
out
inc
sbb
and
data16
add
insl
popf
fbstp
int
xchg
or
mov
or
cld
testl
or
pushf
sub
ds
and
cmp
sbb
sub
int
aaa
dec
and
ret
inc
or
mov
cltd
add
bound
jnp
leave
movsb
stc
test
clc
adcb
push
and
inc
into
or
out
insb
dec
test
jge
mov
in
leave
pop
sbb
sbbb
xchg
or
data16
repz
mov
or
sahf
jl
or
push
or
jecxz
lret
mov
mov
or
xchg
bound
stc
mov
add
pop
push
pop
pop
adc
mov
in
data16
sbb
inc
rcll
adc
add
mov
es
mov
es
xor
push
int3
add
lds
pop
fwait
xchg
ljmp
push
pop
adc
ljmp
push
push
cs
icebp
add
xor
cmc
je
lods
jno
repnz
mov
stos
outsb
cmc
lcall
mov
lock
sbb
and
sar
pop
jmp
stos
jnp
ficomps
cmp
or
test
enter
xor
dec
pop
loop
dec
mov
scas
lods
mov
jno
lods
pusha
pop
pushf
in
jbe
ret
mov
lcall
mov
sub
or
stos
mov
repnz
pushf
push
mov
inc
mov
push
fidivs
inc
jecxz
mov
in
iret
jmp
fiadds
ret
int
inc
push
ret
inc
hlt
iret
mov
cwtl
aaa
mov
clc
inc
pop
cmpsl
or
push
jns
lock
xor
mov
daa
sbb
pop
test
loopne
pop
popf
dec
jg
scas
fstpt
pusha
outsb
lods
hlt
adc
dec
push
inc
xor
jp
call
mov
cmp
sub
pop
sbb
jae
mov
testb
orl
xor
enter
fstpl
xchg
mov
dec
or
neg
in
sbb
mov
hlt
repnz
iret
inc
clc
xor
out
mov
cmp
dec
mov
add
std
enter
enter
xor
mov
and
stos
mov
js
stos
xor
jge
cmc
hlt
loope
push
xchg
mov
ror
xor
sub
mov
out
insl
sti
mov
mov
call
pop
sbb
mov
imul
nop
xchg
or
dec
xchg
cmpsl
notl
ret
jp
jecxz
mov
js
fdivs
out
subb
pop
push
cltd
ss
idivl
ja
das
cmp
mov
adc
fidivrl
outsb
mov
test
outsb
into
push
mov
mov
inc
jne
hlt
sahf
or
test
mov
sub
xchg
ljmp
mov
cmc
or
repz
js
iret
cmc
cmp
add
push
in
ds
jl
in
adc
loop
fs
sbb
mov
push
sub
jno
pop
add
ror
mov
xor
test
jb
xchg
ret
fcmovnb
push
aad
mov
adc
push
adc
mov
icebp
test
lcall
jle
jno
pop
mov
sub
inc
sbb
xlat
or
xchg
sub
cmp
inc
imul
jnp
push
push
mov
jne
scas
out
dec
lret
sub
mov
cmp
push
or
xchg
popf
daa
cmp
or
pop
xlat
popa
pop
arpl
sbb
fstps
mov
shr
dec
adc
sbb
or
push
push
loopne
les
pusha
adc
and
es
addr16
push
xchg
push
mov
cmp
pushf
sbb
pcmpeqd
push
test
lret
scas
pop
pop
ja
adc
pop
imul
xor
adc
in
lcall
daa
call
daa
mov
lahf
add
ja
popa
outsb
adc
aam
xchg
les
div
ds
dec
inc
inc
jg
stos
or
out
sbbb
inc
repnz
or
cmp
nop
add
inc
jns
pop
inc
xchg
stos
cld
xchg
movl
clc
cmp
mov
call
imul
ret
xchg
pop
jle
out
mov
mov
push
jge
out
xor
mov
fsub
sub
and
pop
jo
xchg
aaa
mov
push
pushf
mov
into
fcomps
xchg
cmpl
les
mov
sbb
insl
xchg
push
lret
pop
lock
mov
pop
mov
mov
xchg
jmp
cmp
pop
add
mov
sbb
jmp
out
mov
mov
push
shll
or
stc
andl
cs
iret
pop
cltd
xchg
test
push
adcl
push
mov
insb
test
jae
push
add
push
les
repz
push
pop
and
push
fsubs
cmpsb
cmp
add
icebp
mov
mov
aas
test
inc
hlt
mov
stos
ret
jg
xchg
xor
out
dec
pop
arpl
and
push
decb
jae
jg
out
inc
or
lock
scas
add
sub
mov
mov
std
sbb
rcrb
lods
push
leave
movsb
add
mov
int3
cmp
out
mov
inc
cmp
popf
ljmp
loop
inc
data16
aam
or
add
jnp
add
adc
mov
sub
divl
js
inc
popa
and
enter
sub
pop
in
pop
test
idivb
rcll
sarb
scas
test
xor
into
std
out
mov
push
or
sbb
mov
insl
sub
add
imul
cld
loope
pop
inc
xchg
xor
sbb
rcrb
or
out
popa
lds
cmp
pushl
inc
push
imul
add
bound
lea
sbb
mov
fsts
aad
pop
out
mov
in
fld
cmpsb
movsl
and
call
jl
fs
int3
jbe
negl
jb
jmp
dec
mov
test
mov
adc
popf
stc
xor
aad
jp
ja
cltd
inc
out
jmp
push
test
fcom
lea
mov
mov
sbb
sbb
add
out
ja
push
mov
cli
mov
test
xchg
xchg
lods
jle
leave
addr16
xor
push
xchg
pop
loopne
repnz
mov
enter
les
jmp
ret
sarb
cwtl
mov
dec
sti
fidivl
imul
sbb
and
ss
lods
dec
fisttpl
icebp
ret
xor
jle
push
xor
jae
push
sti
xchg
into
dec
add
adc
mov
dec
sub
jg
pop
aaa
repz
sbb
out
das
repz
mov
lahf
aam
in
jo
iret
dec
jae
int3
sbb
cs
mov
xor
sbb
cmp
popf
pop
push
mov
xlat
sub
icebp
popa
mov
ljmp
stos
aam
repz
loope
stos
popf
in
or
pop
sbb
add
mov
mov
in
mov
add
ljmp
fsub
push
fcomps
dec
fiaddl
mov
pushf
push
cli
test
sbb
push
and
dec
stos
mov
mov
repnz
push
repnz
pop
dec
mov
mov
sbb
dec
xor
jae
push
cmovo
lea
mov
xchg
adc
ffree
mov
fs
dec
push
stc
mov
inc
mov
shll
je
fldl
sub
stos
cmp
subb
shl
xor
and
loop
out
loope
xchg
xchg
popf
jae
je
movsb
dec
lahf
mov
test
jl
bound
add
loopne
fdivrl
mov
or
pusha
test
idiv
sub
ljmp
xor
bound
pop
lret
add
into
imul
dec
repz
adc
or
pop
arpl
iret
daa
call
fwait
mov
jmp
jg
jno
add
sti
loop
push
push
push
push
scas
and
scas
xor
pop
jl,pt
aad
bound
inc
sahf
sti
rcl
jp
push
cmp
repz
and
add
jl
cmpsl
lods
mov
dec
and
fcomps
cltd
mov
das
and
cmp
loop
sbb
push
jmp
jbe
mov
cld
jmp
mov
pop
jns
lea
ret
addr16
or
push
push
int
ja
push
inc
push
sub
dec
mov
clc
cmpsb
je
lret
xchg
mov
or
int
or
clc
jae
or
dec
pop
enter
pop
loope
stc
mov
inc
pop
test
push
xchg
push
test
push
and
xchg
jo
and
mov
push
fisttpll
or
movsb
sbb
dec
push
mov
dec
or
sub
scas
inc
push
lods
xchg
and
inc
jne
sub
ja
pop
ret
dec
cmpsb
ret
outsl
jbe
shr
jo
xor
sti
cmpsb
lret
insl
je
or
ret
roll
fidivl
shll
ds
pop
lods
in
cmp
push
cmpb
mov
setns
pop
push
push
ds
daa
test
xor
jecxz
aam
xchg
pop
adc
xchg
sbb
mov
xchg
fcmovb
xor
aas
aas
lahf
add
aam
jb
movsb
movsl
in
mov
into
fistpll
or
int
fwait
and
sbb
outsl
adc
push
jecxz
lods
dec
pushf
ds
xchg
dec
outsb
cmp
movb
movsb
flds
pop
stc
mov
mov
stc
aad
adc
imul
dec
mov
movsl
mov
aad
outsl
and
jne
pop
fs
mov
ret
jmp
icebp
movsl
jg
hlt
sub
loopne
pop
sti
mov
xchg
mov
fmull
cs
mov
mov
xor
lock
pop
popa
sbb
jnp
pusha
int3
outsl
test
std
xor
aaa
pop
mov
pop
mov
or
cmp
adc
pusha
cwtl
push
daa
les
mov
fwait
push
add
aas
aam
mov
xchg
cli
loopne
xchg
inc
pop
push
xchg
xor
mov
or
pop
sbb
and
xor
cmpsl
inc
pop
mov
rorl
cmp
sbb
popf
loope
sbb
mov
cmp
fwait
sub
xchg
sub
cmpb
pop
pop
jmp
mov
gs
adcl
pop
cmp
or
xor
leave
and
cmp
jecxz
xchg
cltd
loop
jo
inc
pop
and
iret
adc
sub
adc
add
popa
movsl
mov
or
jmp
incb
sti
xchg
cmc
adc
adc
inc
insb
fstp
xchg
jae
jl
cmp
mov
stos
or
es
pmullw
dec
je
outsb
sbb
add
ds
push
xchg
cmp
sub
fnsave
xchg
pop
fistl
and
movsl
cmp
int3
cmpl
sbb
fisttpll
jae
lods
inc
lcall
incl
inc
lahf
cmp
sub
insl
icebp
and
mov
push
ss
xor
fwait
mov
popf
sbb
push
lock
outsl
subb
aas
jmp
mov
into
jns
xchg
vmwrite
mov
mov
cwtl
fwait
addr16
stos
fmul
push
mov
in
in
mov
jl
loope
js
call
roll
mov
xchg
mov
fsubrp
jne
sarl
mov
cmpsb
icebp
mov
xchg
adc
push
aam
jae
jp
cmp
rorl
rcrb
mov
pop
mov
dec
or
xchg
xchg
dec
out
aad
lret
imull
outsl
add
mov
cmp
jns
clc
out
inc
das
sbb
add
adc
push
test
xchg
add
pop
std
lret
outsb
aad
and
nop
and
sbb
sbb
xchg
jno
sbb
mov
sub
and
cmp
sub
xor
addr16
lret
and
vhsubps
xchg
adc
adc
inc
sub
pop
xchg
sbbl
and
xchg
test
ss
mov
outsb
cmp
push
cmp
rcl
rcrb
push
cmc
in
dec
leave
dec
xchg
push
fstps
clc
ss
adc
jl
mov
add
sbb
test
cmpb
test
test
out
pop
mov
adc
lock
or
cltd
clc
cltd
push
jle
clc
out
lretw
pushf
inc
in
jge
dec
repnz
mov
hlt
push
int3
test
aas
jb
das
jnp
add
pop
gs
sbb
cmp
mov
sbb
inc
sbb
adc
jmp
loop
pop
repz
add
xor
scas
and
nop
cs
cld
or
shlb
add
cmp
cwtl
out
lahf
mov
xor
mov
cmp
loopne
sarl
sub
jno
sub
cmp
int3
sub
fiadds
pop
rcl
push
mov
fcoms
jg
bound
lods
repnz
push
test
std
pusha
sbb
inc
test
add
mov
into
imul
xchg
push
push
add
mov
inc
mov
imul
out
aam
mov
icebp
call
pushf
sbb
inc
jae
inc
rolb
movsb
pop
push
jecxz
shl
fwait
mov
mov
sub
sub
mov
sub
dec
adc
pop
pop
dec
push
out
imul
and
mov
sbb
dec
cmp
mov
push
dec
divb
cwtl
sub
xchg
das
inc
xchg
inc
cmp
cmp
lock
jmp
pop
lcall
sub
cmp
pusha
movsb
mov
daa
cmpl
stos
push
sbb
jo
outsl
cmp
inc
pushf
lcall
lahf
loopne
cmp
mov
and
cmpsl
xchg
mov
push
jb
xchg
fsubl
pop
fbstp
sbb
push
push
add
repnz
jmp
subb
or
xor
mov
mov
out
icebp
push
adc
loop
dec
add
mov
dec
and
fmull
sti
and
pop
test
cmpsl
es
iret
push
adc
inc
pop
and
mov
mov
xchg
stc
into
sub
loopne
sbb
pop
icebp
iret
cmp
call
imul
mov
jbe
cmpsl
sub
repnz
in
mov
es
in
mov
loopne
lods
dec
movsl
fdivs
pop
mov
jmp
add
adc
lret
push
movsw
fdivs
inc
cmp
push
std
xchg
xchg
sbb
push
jno
inc
loopne
out
adc
ljmp
push
scas
push
jecxz
sti
imull
lahf
fstpt
sub
icebp
sub
mov
repz
das
iret
cwtl
iret
out
test
inc
rol
add
mov
enter
stos
sti
mov
mov
mov
adc
pop
sbb
adc
fsubl
aad
mov
push
fdivrs
add
fwait
sub
inc
inc
aas
daa
lret
xor
fsubr
clc
or
aam
add
dec
pop
dec
js
mov
into
sti
enter
jne
out
push
adc
es
out
rcr
jae
or
mov
ss
jmp
clc
inc
xchg
sub
mov
and
xor
pop
dec
jecxz
pop
mov
cwtl
pusha
cmc
xor
out
cmp
mov
lods
popa
lods
jmp
jp
sub
or
adc
and
inc
mov
cmp
pushf
mov
fisttps
push
xchg
xlat
lret
lcall
jmp
lahf
inc
cmpsl
or
sti
insb
int
and
pop
push
aad
cld
add
mov
sub
leave
sub
ficoml
xchg
push
pop
dec
cmp
insl
std
mov
fcoml
sbb
pop
cmpl
xlat
rorb
mov
jbe
lcall
imul
scas
das
popa
cmp
jp
pop
jge
je
es
and
mov
inc
lret
loop
outsb
inc
and
rcrl
sar
lret
addr16
push
arpl
aad
or
ds
inc
addr16
push
cmpsl
fstps
jle
inc
dec
pushf
mov
dec
add
inc
leave
jl
mov
jbe
fcompl
out
xchg
enter
xchg
aam
push
mov
cltd
dec
cli
sub
mov
into
mov
adc
popa
sub
in
movb
mov
nop
sub
xor
jb
stc
lods
push
cmp
sbb
hlt
mov
and
adc
dec
mov
scas
jmp
nop
push
inc
mov
scas
daa
jge
sbb
enter
xchg
pop
jns
mov
dec
movsb
clc
mov
stos
xlat
mov
adc
mov
adc
lret
dec
push
adc
fsts
mov
fsts
inc
and
mov
in
mov
dec
jne
pop
adc
iret
push
cmpb
mov
in
or
pushf
les
rcl
shrb
or
mov
out
addr16
leave
xchg
clc
push
jne
and
sub
das
mov
ret
in
mov
ss
pop
xchg
inc
sub
lods
push
stc
mov
fldt
icebp
aad
ljmp
and
jg
push
push
push
call
test
shll
lea
mov
call
add
jl
pop
and
mov
adc
cmp
xchg
mov
aas
lret
sub
out
bound
cmp
xchg
movsb
xlat
daa
pop
lret
inc
lods
xchg
xchg
cmp
jb
pop
xchg
cld
jns
add
or
popa
addr16
inc
ror
aas
and
add
sahf
arpl
adc
mov
push
decb
jecxz
icebp
mov
in
push
outsl
insl
xorb
lcall
mov
lods
fidivrl
pop
les
cmpb
mov
inc
xchg
cwtl
push
icebp
jle
lock
cld
out
adc
jmp
sub
mov
jo
addb
inc
test
pop
inc
pusha
repz
lods
mov
sti
inc
push
jle
cli
add
push
add
movsl
mov
cs
std
outsb
and
jns
add
xlat
insl
add
sahf
adc
push
call
mov
sbb
xor
xor
sahf
xor
xchg
sub
fsubp
negl
pop
cltd
popa
or
mov
lock
cld
mov
leave
push
sbb
insl
and
or
aad
insl
cmp
mov
lods
lock
enter
jecxz
mov
int3
sahf
insl
ja
int3
xchg
pop
pop
xchg
fnstsw
mov
mov
and
ja
test
sbb
or
inc
sub
inc
jmp
hlt
mov
mov
push
sbb
xchg
sub
insl
xchg
xorb
xor
lods
push
ss
adc
sarb
hlt
test
aad
test
mov
sbb
in
fsubs
add
xlat
stos
mov
scas
call
bound
imul
lret
or
mov
cmp
cmp
test
rcrb
xchg
dec
pusha
fadds
jne
jge
daa
rolb
mov
xchg
bound
sub
push
sbb
cs
push
xor
paddsb
es
mov
sub
flds
int3
frstor
mov
push
and
adc
pop
push
inc
mov
xlat
cmp
inc
jne
popl
cvtpi2ps
fwait
or
jbe
pop
xchg
dec
popf
sahf
push
cmc
nop
test
pop
mov
dec
sub
fs
fisttps
xor
aad
pusha
fistl
enter
sbb
sbb
loop
loopne
lds
aas
call
cwtl
sti
lods
pop
out
xor
in
cli
rcrb
jmp
pop
clc
xor
cwtl
aad
inc
dec
shl
pop
dec
mov
dec
dec
pop
das
inc
loopne
int3
test
cmp
lahf
and
adc
pop
stos
cmp
and
adc
fcoml
in
arpl
sbb
sbbl
cmpsb
dec
pusha
mov
bound
push
test
push
cli
jnp
mov
pop
pushf
xchg
in
leave
xor
adc
jne
sub
popf
das
pop
loop
mov
into
cmp
aam
xorb
arpl
inc
lahf
mov
sub
popa
stos
mov
lcall
sub
adc
mov
lret
sub
scas
sub
dec
repz
sahf
lret
shrb
das
mov
inc
int
sbb
add
xchg
mov
pusha
jmp
xor
pop
popa
push
jecxz
pushf
dec
rcr
mov
call
xchg
rcl
cmp
outsb
int3
xlat
cmp
sbb
fidivs
cmc
adc
ret
jg
mov
cmpb
lret
into
jmp
sar
cmp
test
inc
pop
hlt
mov
aaa
stc
mov
lahf
xchg
neg
mov
pop
pushf
xorb
in
leave
stos
push
les
scas
jne
mov
add
or
mov
and
call
sahf
jmp
pop
mov
push
mov
fstp
jns
movzbl
xor
fcoms
imul
pop
stc
out
cmp
push
pop
xor
hlt
out
xchg
mov
mov
in
std
shll
ret
imull
add
jecxz
int
and
xor
aad
shll
iret
outsl
pop
xor
nop
repnz
xor
xorb
adc
pop
ror
add
inc
adc
test
stos
dec
sbb
jae
push
push
inc
jecxz
shrl
push
jbe
jbe
push
loopne
dec
xchg
xchg
sbb
pop
jno
push
mov
mov
inc
cmp
sbb
sbb
dec
cmp
iret
add
cmpsb
xor
xchg
loope
push
inc
std
cmp
mov
aaa
loop
mov
push
cld
jbe
inc
ret
lock
jmp
mov
and
cmp
push
sbb
xchg
pop
out
xchg
rorb
jns
stos
xor
ljmp
jmp
pop
mov
and
mov
cmp
fnstenv
arpl
jne,pt
push
aas
je
or
rorb
inc
shrb
clc
xor
faddl
lahf
or
test
ret
call
inc
adc
testl
fiadds
loope
nop
xchg
decb
mov
jmp
scas
mov
out
mov
test
scas
mov
xchg
lahf
shll
mov
test
push
mov
inc
movsb
xor
adc
or
push
leave
out
add
adc
mov
jns
imulb
add
aaa
pop
ljmp
or
fcom
jo
shrl
lds
cmp
pop
inc
xor
fidivrl
dec
cld
jge
scas
test
enter
mov
in
out
gs
rclb
adc
jl
adc
mov
sub
push
das
adc
jno
ja
frstor
mov
cmp
pop
xor
sbb
cmp
mov
mov
lahf
in
push
sti
daa
xor
dec
movsl
sub
xchg
sbb
jbe
lods
xchg
enter
sahf
mov
mov
jo
pop
cltd
jle
aam
data16
dec
mov
adc
xchg
fstl
pand
es
xor
test
and
orb
loopne
cld
mov
jb
push
cmp
sarl
push
fnstcw
and
pop
cs
xor
jge
mov
jne
jle
stc
fisttpl
xor
cmp
popa
pop
cld
lret
pop
xchg
mov
xor
mov
xor
sub
int
in
dec
xchg
iret
xchg
dec
and
dec
loopne
sbb
dec
mov
sarl
jmp
jbe
mov
and
sti
mov
add
fnsave
subb
dec
xlat
cltd
sbb
stc
adc
pop
fsub
mov
aam
mov
lahf
and
mov
aaa
ljmp
push
or
fbstp
ljmp
xchg
adc
fwait
jno
mov
orb
and
cmp
fisubl
lock
fsubrs
popf
out
xor
aas
mov
pop
dec
mov
push
sbb
jmp
xor
or
sub
xor
roll
xor
inc
mov
fs
test
cld
stos
xor
sbb
ss
cmpsb
cltd
mov
loope
notl
call
push
or
addr16
imul
and
pop
mov
push
adc
hlt
adc
imul
arpl
and
add
cmpsb
jae
sbb
std
sub
or
stos
fsubrl
inc
and
cmp
sbb
movsl
pop
scas
cmp
fistps
mov
jo
rorl
mov
mov
es
jmp
mov
push
add
in
or
les
scas
push
rorl
mov
jne
aam
test
xor
sti
fstp
xchg
icebp
sub
out
popf
add
pop
int
or
cmp
js
jp
jne
pop
mov
push
jae
dec
push
out
loopne
xor
test
xor
inc
lock
cmp
xor
push
add
cmpsb
and
cmp
dec
jge
xchg
lret
into
sbb
inc
out
and
dec
imul
fdivs
xchg
mov
sbb
mov
adc
clc
push
cmp
push
push
icebp
pop
ljmp
flds
xor
adc
repz
adc
outsl
pop
adc
cwtl
xchg
inc
movsl
pop
ja
ret
loopne
rclb
xchg
out
jmp
dec
cmp
lret
push
loopne
in
mov
out
pusha
cmc
fnstsw
es
pushf
in
pop
int3
xchg
jl
movsl
xchg
lret
pushf
mov
pop
xor
jbe
adc
pop
xchg
jle
sbb
arpl
cwtl
and
add
cld
ljmp
cmp
mov
rcrb
subl
lahf
lock
sbb
lods
xor
lea
xchg
cmpsl
mov
in
inc
mov
outsb
je
inc
or
xor
dec
aam
xor
aas
mov
in
dec
mov
gs
mov
adcl
push
xor
cmp
sub
decb
push
aad
iret
enter
data16
sbb
scas
ja
adc
and
adc
mov
mov
xlat
cbtw
xchg
and
cmp
pop
imul
rorl
and
loop
outsl
mov
xor
insb
push
testb
pop
adc
inc
arpl
add
repz
daa
js
inc
mov
popa
fwait
rcrl
shlb
jno
in
inc
adc
pop
addb
add
nop
mov
ret
mov
in
stc
jg
mov
jle
ret
adcl
or
xchg
push
push
xchg
js
mov
xor
outsl
mov
mov
ja
outsb
push
or
cmp
jecxz
jecxz
ljmp
mov
pop
jae
stc
push
and
cmp
ss
pop
jo
pop
adc
jo
mov
pop
push
mov
sub
icebp
push
rolb
lods
aad
gs
jns
inc
fwait
push
xchg
and
int3
xorl
inc
pop
sti
and
outsl
stc
cmp
loop
pop
dec
mov
cs
data16
push
mov
xor
sar
xor
mov
cmpb
push
imul
xchg
adc
test
add
mov
mov
xor
ljmp
popf
or
xor
cmp
fsub
sbb
cmp
inc
mov
fdivl
mull
out
push
mov
dec
and
or
push
push
add
sbb
push
jl
inc
jae
add
fwait
push
adcb
mov
inc
mov
lea
and
jnp
or
push
sub
xchg
loope
lock
xchg
fs
xchg
jo
adc
mov
and
aas
xor
movsl
add
scas
pop
and
call
jge
cmp
test
rorl
fisttps
mov
loope
or
sbb
pop
jp
popf
popf
jle
jge
cwtl
or
dec
in
lret
mull
popf
mov
ja
jbe
pop
sahf
adc
xchg
leave
inc
dec
inc
movsb
pop
aas
stos
adc
mov
pmullw
popf
testb
shrb
call
movb
sub
sub
lock
ret
mov
jno
gs
mov
mov
xchg
xor
lahf
loopne
adc
pop
or
and
and
imull
jb
insb
cmp
rcrb
fbstp
popf
dec
add
aad
repz
out
lahf
lock
mov
icebp
dec
aam
addb
addl
stc
jnp
repz
and
in
ss
sub
out
xor
subl
jp
mov
test
jge
fcoml
sub
arpl
mov
repnz
cld
sbb
lds
and
jp
daa
imul
sub
into
mov
sbb
out
pushf
sti
or
daa
pushf
pushf
ljmp
push
mov
jp
xchg
xor
mov
iret
or
lods
xor
add
push
push
mov
sub
or
scas
jbe
repnz
sub
push
rol
nop
add
ja
push
inc
lds
adc
xor
mov
int3
mov
mov
inc
aad
iret
pop
and
ja
incl
mov
dec
je
xorl
int3
lahf
scas
mov
cmpsl
iret
or
std
fldt
ja
dec
mov
sbb
mov
add
rcll
adc
xchg
test
cwtl
jb
testb
jno
mov
sbb
lahf
jmp
push
stos
fldl
cltd
and
mov
adc
xlat
cmpsl
jl
enter
and
lods
hlt
or
ret
sbb
jb
add
mov
in
fwait
jnp
loopne
addb
mov
mov
sar
adcb
pusha
jp
lahf
fisttps
ljmp
xchg
das
loopne
cmp
xchg
subl
mov
xor
inc
popl
jmp
and
and
cs
fcomps
adc
push
cltd
fldenv
cmp
mov
outsl
mov
hlt
js
rclb
rcrb
jle
leave
sbb
xchg
or
lret
or
sbb
push
push
jle
mov
std
cwtl
inc
addr16
cwtl
add
lock
pop
pop
movsl
mov
adc
cmp
cmp
push
insb
pop
mov
adc
loope
sub
push
and
mov
lds
xor
mov
test
aam
mov
jge
and
das
add
out
jecxz
sub
inc
cmp
dec
lret
adc
xchg
test
pushf
pop
nop
mov
mov
imul
jge
int3
dec
jge
pop
xchg
ljmp
ljmp
mov
in
adc
xor
pop
fisubs
jmp
inc
shrd
or
enter
out
jb
lret
imul
popa
jmp
popa
out
mov
int3
inc
fiadds
mov
icebp
js
cmovnp
mov
mov
frstor
inc
add
xor
cmp
pusha
or
fisttps
int
dec
lret
scas
inc
push
aaa
xchg
aam
dec
add
adc
adc
or
int3
das
int
loopne
lods
xchg
lds
mov
arpl
popa
cmp
xor
int
dec
sub
push
xor
sub
mov
cmpsl
push
push
xchg
sub
xchg
lahf
jp
xchg
dec
push
add
imul
jb
dec
aad
lcall
daa
push
fldt
sbb
cmp
daa
sub
arpl
rcrl
jns
xorb
xor
test
inc
jnp,pn
inc
into
iret
lcall
or
outsb
stos
mov
pop
aaa
mov
les
push
sahf
movups
and
xchg
ret
loopne
test
lds
sbb
push
pop
test
dec
outsb
cld
cs
push
push
into
test
mov
out
or
ret
jne,pn
add
lea
jne
dec
push
pop
sub
inc
in
push
loope
ret
sarl
fsubrs
sahf
adc
sub
inc
shll
scas
sbb
std
fadds
xchg
push
inc
in
test
cmp
xor
adc
push
icebp
push
lret
pop
aad
or
cmp
ss
cltd
fs
and
ror
popf
lcall
loop
ds
int
mov
fidivs
mov
cmpsl
sbb
jmp
je
sbb
movsl
sbb
dec
sub
pop
pop
sbb
push
fwait
pop
inc
fsub
mov
mov
outsb
popf
repnz
aam
popf
cs
xchg
jb
cmp
shrl
adc
mov
fwait
sbb
movsl
into
test
mov
sub
jnp
mov
ret
xor
adc
lea
popf
js
push
jns
imul
sub
fdivl
jb
xchg
sub
xor
xor
push
xchg
adc
push
popf
cmpsl
xor
inc
test
das
movb
jb
ljmp
xlat
sub
aaa
pop
ljmp
fistps
bound
lcall
mov
lcall
or
mov
sub
call
loop
fucomip
add
ja
or
adc
fstpt
dec
push
hlt
test
leave
imul
cmp
mov
cmc
mov
dec
sbb
adc
jge
sub
jo
lret
jne
cmp
fcompl
cmp
cmp
mov
fcom
pop
aaa
pop
out
data16
sub
lock
jge
std
adc
jmp
out
lahf
ds
sub
or
cmpsb
je
cmp
negb
ficoms
loop
push
add
cli
push
loop
dec
shr
jl
loopne
jge
and
xor
sub
mov
sub
imul
movsb
xchg
xor
or
scas
dec
nop
cmpsl
xor
xor
mov
hlt
test
adc
xchg
xchg
aam
or
jp
mov
jg
ds
movsl
jo
les
and
popf
adc
arpl
jbe
dec
aaa
outsl
cmp
or
adc
loop
push
xor
lret
sbbl
mov
mov
int
pop
sub
outsb
pop
mov
popw
pop
sub
pop
push
ds
in
iret
mul
xchg
push
push
std
add
push
movsl
adc
test
fld
push
jne
sbb
int
or
loope
fsub
sub
adc
jbe
int3
dec
cmp
adc
fmul
fdivrl
fistpll
mov
jo
cwtl
push
or
dec
xchg
xchg
pop
imul
fdivrl
jmp
lods
mov
shll
and
fisubl
sbb
fdivr
push
imul
aam
stos
call
jp
test
jae
aad
movsb
sub
cmpsb
adc
sbb
or
add
jae
insl
xor
cmp
out
repz
and
push
sbb
dec
dec
jp
rorb
fcomps
hlt
cwtl
sub
xchg
fsubs
push
push
outsl
in
sarl
subl
add
enter
mov
ret
fistpll
dec
scas
insl
pop
cmp
cmp
outsl
nop
jmp
stos
jb
add
fisttpl
into
arpl
std
pop
ret
orl
inc
stos
js
dec
pop
mov
dec
mov
addr16
pop
std
or
sbb
or
daa
repnz
jecxz
jae,pn
aas
mov
rcll
jmp
fwait
sbb
add
bound
xchg
and
iret
and
outsl
idiv
idivw
cwtl
mov
mov
mov
dec
mov
fsubl
xor
cmp
push
call
xchg
das
pop
mov
popa
ja
cmp
gs
scas
scas
shl
inc
mov
inc
mov
dec
stos
adcl
cli
jb
xchg
cmp
pop
das
xchg
push
int3
or
sahf
xlat
ret
daa
jo
xor
cmp
add
sbbl
or
enter
and
pop
movsl
mov
mov
jns
push
lods
push
or
pop
lahf
push
mov
mov
xor
add
jmp
fsubrs
jo
add
push
lods
pop
aad
int
in
aad
jns
sahf
std
sbb
outsl
es
lfs
cmp
mov
lret
mov
stc
pop
lret
add
xchg
leave
and
stc
push
cmpsl
mov
cltd
mov
sbb
mov
push
in
mov
aam
mov
jae
lds
insl
call
sbb
xor
lcall
xor
loope
fists
dec
mov
xchg
dec
xor
inc
push
jle
mov
push
imul
bound
push
pushf
hlt
jns
sub
add
sbb
gs
movsl
fcmovu
inc
sbb
lret
fs
sbb
or
xor
cltd
andb
arpl
rorl
jns
into
cmp
sub
pop
outsl
jo
ljmp
add
fwait
add
cmpsl
xor
loopne
stos
xchg
or
mov
es
pop
dec
rep
or
fsubrl
lret
adc
sarl
jle
or
fs
sbb
push
jmp
lahf
std
and
adc
into
adc
or
dec
xorl
repz
dec
pop
or
jo
iret
das
lock
dec
fldt
movsl
inc
pop
jg
add
nop
jp
inc
out
dec
xchg
nop
add
jo
insb
mov
sub
aaa
fs
lahf
stos
jmp
and
outsl
or
lret
into
xchg
dec
mov
js
andl
shlb
repz
xlat
add
frstor
sbb
in
dec
je
xor
xor
dec
lcall
movsb
push
cmp
fwait
cmp
push
out
in
jmp
mov
dec
cli
in
add
ret
and
ja
dec
jecxz
mov
cmp
je
push
push
cltd
sub
and
pop
and
shlb
movl
fwait
int3
lret
insb
jne
in
aad
fisubrs
or
mov
or
or
mov
adc
imul
cmp
mov
xchg
jecxz
mov
add
shll
lret
cmp
insl
out
mov
add
pop
or
leave
pop
out
roll
sahf
testl
mov
xchg
mov
ljmp
pop
loop
inc
aad
jmp
rorb
add
mov
loop
adc
jmp
mov
lods
mov
cmp
inc
cwtl
add
xor
pushf
dec
jbe
jb
xor
fs
mov
xchg
sub
imul
dec
mov
cld
mov
mov
inc
lret
mov
cmp
xchg
loope
outsl
inc
add
inc
mov
xor
ret
dec
int3
jne
and
mov
scas
popf
mov
hlt
push
stc
int
cmp
inc
mov
sbb
outsl
or
iret
out
push
xor
and
movsl
or
in
sub
cmp
arpl
and
stos
xor
lret
ljmp
inc
rolb
xor
pop
push
addr16
stos
cwtl
sub
mov
stos
jp
inc
and
into
dec
inc
lods
divb
jl
int
cmp
mov
mov
or
loopne
outsb
inc
pop
jae
lds
scas
fidivs
and
int
bound
pop
sub
scas
cmp
xor
test
fbld
stc
inc
fmulp
les
ficomps
sbb
rolb
push
out
arpl
push
test
out
jmp
leave
loop
out
fcomp
pop
popa
addr16
jp
mov
push
push
cmpsl
incl
aad
or
into
cmp
jl
imul
push
jbe
mov
and
mov
jecxz
mov
xchg
dec
fistpl
mov
movb
repz
dec
sahf
pop
lods
adc
mov
roll
xor
in
mov
fistps
into
dec
rclb
out
stos
xor
add
in
cmpsl
fwait
scas
ficoms
test
jne
mov
lea
push
or
lods
xchg
sbb
jno
movsb
repz
pop
imul
cs
sbb
lds
aaa
mov
inc
xchg
and
fnstenv
pop
add
mov
push
sbb
scas
dec
inc
jp
ss
push
fdiv
jns
mov
repz
shll
loope
mov
outsb
mov
decb
int3
xor
cmp
sub
and
sbb
xlat
fistpll
or
ret
mov
ljmp
and
xchg
mov
gs
in
leave
aad
inc
popa
loope
arpl
lret
test
ja
sub
popa
clc
and
mov
mov
pop
jae
shrw
and
lods
mov
mov
xor
pop
inc
sub
out
push
sahf
mov
cld
bound
lahf
outsb
xchg
addr16
xchg
add
scas
push
push
mov
or
pop
inc
xchg
rcll
and
sub
scas
int3
dec
sub
negb
push
and
pop
sarb
push
xor
test
insb
andb
clc
mov
xchg
mov
push
in
loop
pop
cmp
dec
sub
mov
jae
and
cwtl
add
out
mov
sahf
data16
cmp
xchg
cmpb
sub
clc
je
jnp
push
pop
inc
mov
sub
xorb
cmpsl
pop
or
aas
add
and
jmp
mov
test
sub
sub
adc
rclb
cmp
scas
pop
outsl
dec
pop
cltd
ficomps
or
loop
mov
rcrb
xchg
insb
inc
leave
push
rorb
and
shlb
dec
negl
movsb
xchg
inc
xchg
cmp
loopne
mov
call
mov
xchg
aaa
aaa
or
fs
cmp
adc
outsb
jl
out
stc
dec
cmpsl
sarb
fnstcw
xchg
lahf
sub
or
mov
mov
sahf
jno
mov
arpl
mov
aaa
stos
cmp
in
ss
sbb
xchg
add
adcl
sahf
mov
clc
pop
sub
mov
push
fists
fcomps
daa
add
jne
pop
imul
pop
jnp
loopne
and
or
loope
dec
repnz
and
aam
cmp
xor
xchg
push
push
out
sbb
mov
aad
xlat
into
popa
pop
push
int3
jb
repz
das
loopne
jle
ret
dec
pop
pop
pop
mov
in
adc
pop
lret
pop
sbb
test
push
hlt
inc
mov
lea
icebp
aaa
xchg
pop
add
js
mov
sbb
mov
push
sti
dec
icebp
xlat
or
jmp
add
outsl
xor
mov
push
fistps
fs
rcrl
aam
imul
inc
test
sub
cltd
addl
sbb
push
mov
ret
aas
in
pusha
mov
sub
sbb
je
adc
icebp
mov
aas
jbe
xchg
push
pop
cwtl
mov
cmpsl
imul
xchg
aad
scas
inc
shll
mov
lods
repz
inc
jecxz
aaa
sahf
cmpsl
insb
cmp
inc
repnz
fs
ret
rcrb
movsl
mov
mov
sbb
imul
aad
pop
inc
xor
lret
pop
out
xor
aam
sarb
xlat
inc
orps
filds
mov
rclb
mov
sub
cmc
inc
cmp
popa
push
test
popa
je
mov
add
and
xorb
push
adc
ja
imul
jae
pop
jp
repnz
das
loope
and
in
and
pop
sub
fstpl
sbb
mov
xadd
scas
nop
dec
sub
mov
rcll
sub
in
add
sub
fcoml
cmp
cwtl
sub
dec
rcrb
cmc
shll
sub
dec
shrb
pusha
rol
dec
add
mov
call
mov
mov
xchg
or
addr16
xor
dec
cmp
popa
ds
fcomip
sbb
push
xchg
jae
mov
test
push
ss
fadds
testb
inc
cmp
add
cmp
or
pop
fwait
xchg
add
xor
mov
and
popf
jb
jnp
push
test
sti
negl
outsb
pop
adc
imul
jle
or
mov
nop
rcll
and
lret
push
cmpsl
xchg
lea
xchg
and
dec
mov
jge
movsl
shll
cs
xchg
ss
pop
addr16
repz
cld
imul
int3
popa
xor
clc
in
call
mov
js
inc
lahf
into
por
insb
push
add
cltd
mov
and
add
cmp
aas
sub
cmc
jns
andb
cld
xchg
cwtl
jp
jae
adc
leave
mov
fisubrl
clc
dec
and
push
subb
xor
adc
mov
imul
cltd
xor
jae
mov
inc
xchg
aas
pop
lods
repz
gs
push
mov
fists
jo
clc
and
adc
mov
jecxz
fsts
out
loopne
scas
test
pop
sub
or
jmp
jp
sbb
aam
loopne
shll
scas
sbb
decl
loopne
xor
sub
add
lahf
jns
js
fs
stc
push
dec
mov
mov
dec
cmp
loopne
imul
lds
lahf
adc
lcall
std
jl
xor
mov
stos
loop
xchg
popf
mov
scas
aam
loopne
inc
xor
fsts
bound
ljmp
in
xchg
jg
popl
rclb
ds
dec
and
or
mov
xchg
leave
dec
shrb
push
ljmp
cmp
sbb
xchg
mov
repz
cli
mov
mov
sbb
push
sbbb
pop
shrl
dec
push
mov
xlat
mov
adc
sbb
xchg
xchg
sbb
push
inc
in
jecxz
fadd
pop
push
stos
inc
push
or
clc
mov
lea
mov
icebp
and
inc
and
pop
out
loopne
dec
orl
mov
mov
mov
shll
out
sbb
cwtl
xor
outsb
pop
repz
call
jns
psllq
fistpl
sbb
push
jbe
dec
cltd
and
mov
jmp
jbe
mov
lock
add
inc
add
pop
lahf
xchg
lcall
out
stos
notb
dec
decb
or
movsb
dec
outsb
mov
cwtl
jp
repz
xchg
and
bswap
inc
inc
mov
push
mov
in
adc
test
xadd
in
mov
arpl
fildll
and
sahf
jp
jmp
mov
push
test
nop
and
pop
mov
xor
mov
cmp
jne
into
fldcw
outsl
sarl
jl
fistl
xchg
mov
pop
mov
movsb
xchg
jbe
sbb
push
add
sbbb
mov
push
jb
callw
int
cmp
leave
push
mov
jecxz
scas
sbb
adc
neg
adc
insl
pushf
btr
divl
fwait
inc
xchg
ds
fwait
repnz
or
adc
jge
pop
fidivs
ret
or
outsl
es
add
cvtps2pi
in
fcompl
std
aad
mov
mov
dec
bound
jg
mov
mov
dec
cmc
popf
idivb
stos
outsl
lods
jb
outsb
mov
addr16
or
std
sbb
or
mov
out
dec
push
js
xchg
lea
cmp
mov
push
test
jno
into
xchg
rolb
test
inc
imul
icebp
aam
sub
xor
loop
adc
iret
hlt
lds
pop
cltd
fisttpll
fcompl
clc
jl
jecxz
je
adc
lods
sbb
adc
mov
mov
mov
rcl
out
addl
add
push
xor
ret
xchg
loopne
aaa
sbb
mov
mov
and
cmp
pusha
popf
call
arpl
subl
arpl
sbb
adc
popf
leave
add
jb
push
js
or
sub
fistps
xor
push
jns
rorb
shrb
jl
stos
push
or
std
pop
mov
jb
pusha
jnp
mov
push
xor
in
cmp
jnp
jnp
scas
pop
insb
fs
fdivrl
adc
xchg
add
jb
sub
div
insl
mov
popa
sub
shrb
xor
push
pop
and
jge
iret
mov
xchg
push
pop
in
pop
xchg
sub
add
test
popa
repnz
in
sub
or
inc
shlb
mov
or
push
leave
jg
es
adc
cld
or
popf
mov
and
add
jbe
or
test
adc
push
inc
addb
cli
fstpt
push
push
lods
dec
test
cld
lahf
dec
jo
add
sti
mov
or
add
fucomp
ret
pop
sbb
pop
mov
insb
mov
arpl
push
mov
and
cs
mov
cld
sub
ja
movl
jo
aas
arpl
mov
and
out
xchg
push
xchg
aaa
inc
adc
sbb
mov
unpckhps
cltd
dec
cmp
mov
std
push
xchg
mov
fisubs
fidivrl
sub
sub
dec
push
inc
mov
pop
jp
mov
mov
aaa
lock
dec
in
jns
fisttpll
lret
stos
cmpsb
mov
xchg
push
loop
push
mov
cltd
sar
adc
jl
stos
xchg
lahf
lret
dec
sbb
dec
hlt
add
or
mov
test
cmp
ret
into
inc
mov
or
dec
ja
out
cs
jmp
mov
inc
and
in
cmc
mov
or
cwtl
jp
es
insl
lods
test
bound
inc
add
xor
cmp
gs
out
or
lea
ds
fists
jl
xchg
xor
mov
nop
inc
and
xlat
test
dec
iret
out
clflush
pop
fisubs
sahf
adc
push
repz
mov
je
push
push
push
sbb
loopne
scas
lock
inc
and
sarl
dec
popa
imul
sub
fcompl
push
stos
les
out
iret
popf
sahf
adc
mov
testl
dec
xchg
mov
imul
mov
mov
test
out
arpl
sbb
punpckhbw
jno
jae
adc
mov
and
jp
pushf
cmpsl
mov
bound
or
loopne
stc
in
arpl
cmc
pop
scas
scas
or
cld
shl
das
pop
mov
mov
or
nop
fwait
xchg
rcrl
mov
mov
pop
mov
inc
add
and
push
jl
fisttpl
mov
pop
outsb
fdivr
add
jp
pop
pop
and
lcall
insb
hlt
call
data16
popa
in
rcrb
pop
adc
lds
and
outsb
xchg
jmp
jns
in
outsl
cs
cmp
jae
and
xchg
arpl
cmpsl
insb
jns
push
notb
scas
add
and
xchg
or
insb
add
mov
fimull
jge
cltd
mov
and
lahf
hlt
xor
mov
dec
add
in
push
test
lea
js
ljmp
mov
cmp
push
cld
xor
pop
cmp
cmpsb
add
scas
leave
shr
adc
pop
lock
addl
into
cmpb
push
aaa
pop
or
adc
dec
inc
or
call
dec
adc
mov
jle
iret
gs
adc
aas
cmp
cmp
icebp
mov
xlat
cmc
or
aas
and
arpl
les
and
data16
sub
lcall
data16
je
imul
ficoml
jp
lods
loopne
fwait
or
xorb
repnz
cmc
push
xlat
cmp
fcoml
mov
clc
mov
jge
xchg
jbe
ljmp
das
pop
pop
nop
cmpsb
popa
mov
leave
repnz
lcall
jno
adc
data16
testl
or
lret
push
mov
mov
enter
popl
cmc
stos
add
jo
leave
lock
add
das
push
inc
in
test
repnz
dec
pop
stc
mov
fldcw
xchg
inc
mov
std
cli
out
stos
rcrl
mov
and
xlat
sbb
and
sub
int3
shl
cmp
inc
popf
mov
ret
nop
mov
arpl
push
jno
mov
dec
mov
sub
jns
and
mov
movsl
js
jb
mov
xor
call
sbb
push
loop
sbb
repnz
mov
adc
out
lock
mov
cld
in
xchg
jo
mov
or
lea
adc
mov
pop
jmp
cmp
mov
nop
xchg
loopne
lods
mov
cwtl
sub
divl
pop
or
lods
push
or
fiaddl
xchg
movd
mov
push
lcall
cmp
sbb
pop
mov
lods
mov
cmp
sub
roll
mov
repnz
fcmovnu
pop
cmp
ret
ds
popf
cltd
gs
ss
outsb
sub
xchg
das
js
jl
push
pop
imul
into
sbb
dec
addb
and
dec
mov
fcmovnb
das
sub
cmpsb
repnz
in
std
pop
sub
popl
pop
jge
inc
lods
divl
jmp
mov
inc
leave
or
jnp
push
xor
push
out
insl
pop
lahf
shrb
ret
jp,pn
fs
push
xchg
lds
cmp
call
sub
mov
subl
addl
sub
mov
lret
int
nop
cwtl
fs
in
and
sbb
lock
cltd
scas
cmp
xchg
mov
outsb
or
cmp
and
mov
push
add
sub
cmpsb
cmpb
inc
les
jne
push
cli
xor
imul
bound
test
jp
jno
add
imul
in
fbstp
push
cmc
imul
mulb
xor
or
mov
sbb
cmpsb
pushf
sub
sub
jne
imul
push
sub
stc
sbb
pushf
pop
dec
fs
ja
xchg
testb
mov
xchg
pop
add
arpl
scas
daa
inc
pop
push
push
shll
xor
test
lock
inc
lret
mov
add
mov
cmp
pop
inc
jns
pop
insl
xor
lcall
das
mov
mov
imul
clc
and
mov
jle
lea
mov
mul
or
jb
int3
mov
push
daa
push
sarl
inc
push
aam
sbb
lahf
cmc
subl
int
outsl
inc
dec
pop
pop
dec
dec
lcall
int3
xchg
or
lea
jnp
fistps
xor
int3
pop
aaa
ja
lods
xor
add
mov
mov
mov
push
mov
dec
jl
add
push
mov
test
jno
arpl
mov
inc
fistl
sub
adc
mov
xor
jne
xor
lods
fistpl
arpl
add
hlt
sbb
push
mov
ffree
mov
dec
adcb
jns
leave
add
insb
xor
shrl
dec
dec
mov
imul
add
testb
sbb
inc
and
add
sahf
pop
sub
xor
cmp
and
add
ljmp
sub
sub
jb
mov
movsb
cmp
ret
lods
ja
xchg
pop
test
or
js
pop
xchg
int
xor
inc
in
call
push
loope
stos
movsb
cmp
aam
lea
mov
hlt
aaa
lds
sub
and
dec
ret
or
addr16
inc
mov
cmpsl
mov
or
or
cmp
jmp
ficomps
test
jno
bound
pop
push
xchg
lock
popf
popf
enter
imul
mov
loope
inc
in
insl
repnz
jg
fbld
or
xor
pop
jecxz
xchg
xchg
test
cmp
repz
mov
test
cmpsl
sbb
pop
mov
lea
lret
subl
dec
push
adc
xchg
popa
sub
mov
xor
or
cmpsb
sbb
jmp
add
add
adc
dec
jle
shlb
mov
sar
test
mov
pop
cmpsl
mov
xchg
bound
pop
movsl
cs
adc
lods
jae
in
sub
enter
jnp
mov
stos
xchg
adc
roll
mov
jg
and
lahf
testb
sahf
jge
inc
push
push
rcrb
adc
loope
test
js
arpl
dec
and
les
into
mov
ljmp
xchg
out
cmc
mov
adc
sahf
mov
movsb
inc
sub
addr16
sub
push
sbb
cwtl
fdivrs
push
inc
jns
in
imul
xor
lahf
push
test
xchg
mov
sarl
es
lcall
pop
mov
test
cmp
or
shlb
inc
jmp
add
jo
pop
pop
ss
shl
xor
movl
jne
sub
mov
shll
cwtl
cli
loopne
mov
inc
insl
push
shlb
jl
xchg
cmp
into
and
xor
xor
out
sbb
stos
rcll
loopne
popf
ss
xchg
popf
pop
leave
push
fstpt
xchg
out
jbe
jg
das
pop
push
jb
fisttpl
adc
mov
ds
add
and
or
adc
xchg
dec
and
mov
mov
pushf
pop
dec
icebp
hlt
daa
decl
push
fldt
mov
data16
repz
xchg
sti
mov
push
xchg
pop
loopne,pt
or
pop
xor
outsb
xorl
nop
lods
inc
add
mov
mov
add
and
push
inc
jno
xor
push
push
mov
lcall
push
jl
jp
icebp
bound
adc
jbe
clc
aad
popf
mov
pusha
mov
cwtl
stc
jp
sbb
ljmp
test
jg
stos
mov
adc
loopne
mov
mov
mov
mov
popa
loop
adc
cld
out
xchg
xor
jp
xlat
dec
mov
movsl
fs
jmp
xchg
mov
lods
cld
jle
mov
out
dec
jecxz
sub
sub
mov
mov
fistpll
int3
stos
mov
pop
sub
popf
lret
cmpsb
movsl
imul
inc
jnp
jnp
jecxz
data16
push
frstor
aam
mov
xor
ret
cmp
jne
fidivs
dec
lods
leave
inc
adc
sbb
xor
pop
cmp
pushf
dec
in
and
fildll
int
lcall
popa
scas
jne
cmp
imul
mov
lods
and
push
mov
mov
push
pusha
jmp
aad
aam
dec
nop
cmp
outsl
adc
xchg
xchg
sub
cwtl
push
popa
scas
ljmp
jno
popf
push
es
jae
add
add
out
inc
xchg
cli
fs
in
fists
lods
jle
fcompl
rolb
jl
or
or
pop
jle
cmp
add
sub
popa
test
dec
jle
or
mov
mov
sbb
inc
aam
scas
xor
ds
xchg
leave
pop
cmpsb
outsb
xchg
mov
mov
imul
lret
je
pop
call
adc
pop
cltd
xchg
dec
sahf
mov
loop
adc
mov
daa
adc
fwait
das
arpl
out
lcall
nop
mov
xchg
adc
inc
cmp
xchg
pop
fisubrs
add
push
mov
sub
xor
enter
add
push
int3
into
in
and
lahf
inc
outsb
mov
shlb
lods
mov
push
es
pop
movzwl
and
jb
or
mov
outsl
outsb
decl
loop
shll
test
stos
push
xchg
test
pop
ljmp
cltd
fs
pop
out
out
and
dec
shl
les
sub
or
pop
pop
pop
fucomi
int3
dec
adc
sbb
and
xor
jmp
pop
mov
test
stos
sti
shl
cs
gs
adc
jp
mov
push
pop
imul
push
cmp
int
movl
push
jmp
hlt
mov
adc
push
cmpsb
repnz
xor
loopne
sbb
lret
outsl
xchg
decl
sbb
aaa
push
gs
add
fs
cli
rorb
sbb
imul
mov
sarw
inc
dec
mov
adc
fistps
mov
mov
inc
rcl
cmpsb
lahf
movsb
subl
mov
push
stos
fstpt
in
xorps
loop
adc
scas
into
cmc
push
imul
jg
jnp
add
adc
xchg
cmp
mov
and
out
xor
test
int3
add
xor
mov
xor
scas
xchg
sub
jmp
aaa
add
in
out
add
jne
sbbb
std
pop
pusha
and
or
popf
int3
out
push
jg
lret
and
pop
ja
addr16
pop
and
dec
in
outsb
data16
lret
imul
cltd
ret
cmc
nop
into
pop
aas
sti
data16
lods
shl
mov
rorb
fbstp
loop
mov
cmpsb
mov
enter
add
push
jne
sub
jns
out
jle
push
pop
mov
pusha
loopne
and
shl
flds
mov
jno
lods
adc
lcall
pop
mov
add
mov
mov
cmp
and
pop
loope
xor
add
mov
lcall
je
inc
and
sbb
mov
cmpsl
push
call
xor
outsl
dec
rorb
stos
hlt
pop
sub
push
push
pop
clc
inc
mov
xchg
mov
jmp
cld
sbb
outsb
sub
mov
mull
iret
popf
insb
adc
test
sub
mov
xorb
ja
dec
add
jae
mov
icebp
sahf
scas
les
xchg
movsb
dec
push
inc
inc
xor
movsb
daa
popf
insl
dec
out
sbb
mov
fwait
cmp
add
bound
int
pop
sbbb
jbe
pop
adc
adc
imul
outsl
das
dec
add
cmp
cltd
out
pop
jo
mov
cmp
andl
aad
mov
stos
cltd
aad
stos
sbb
mov
aad
jns
call
jp
cwtl
and
les
mov
push
xchg
mov
ss
xlat
xlat
sub
sub
mov
addr16
loope
aam
ljmp
ret
mov
and
fsubrp
xchg
sarb
cli
in
repz
inc
aam
int3
cmpsb
pop
sub
mov
fwait
insb
add
arpl
pop
mov
jo
lret
mov
add
popf
jnp
shr
imul
mov
xchg
aad
jmp
mov
pop
ja
adc
adcb
xor
adc
lahf
inc
addl
addb
out
xchg
push
scas
in
pop
fsubs
es
push
arpl
jp
aad
pop
dec
data16
outsl
divl
movsb
mov
ret
push
push
sub
sbb
or
jb
test
dec
jg
jle
mov
dec
iret
aad
adc
mov
sahf
sbb
or
or
cmp
lods
add
shl
pop
out
lcall
sub
sub
or
xor
fcmovu
mov
sbb
repnz
jns
test
in
adc
pop
pop
pop
cwtl
mov
lods
push
inc
jb
mov
pop
mov
mov
fisubrl
gs
pop
jp
sbb
xor
rcrb
push
xchg
imull
or
dec
shll
inc
lods
repz
push
std
cmc
repnz
insl
invd
jno
dec
xor
cli
imul
out
mov
cld
add
push
jl
cld
les
outsl
sbb
mov
jb
lods
add
jecxz
mov
xchg
and
stos
lea
cmpsl
mov
pop
jmp
xor
mov
inc
mov
scas
sub
push
fwait
dec
cmpsb
aad
imul
mov
std
popf
mov
js
jg
push
xor
repnz
int
rcrl
repnz
aad
mov
cmp
mov
loop
in
stos
fnstenv
gs
inc
pop
or
js
movsl
xlat
xlat
dec
sub
insb
fisubrs
cltd
ficompl
dec
adc
rcrl
rcrb
stos
sti
gs
loopne
jnp
cmovg
fs
xor
lcall
mov
mov
dec
sub
ret
stos
and
cli
ja
out
fstl
cmp
mov
cli
xor
and
xor
mov
out
cld
gs
push
xchg
je
loop
push
in
or
cmp
push
add
push
adc
and
cld
cli
ficomps
or
xchg
mov
cmp
fs
fisubs
xor
jae
fidivl
test
push
mov
lahf
jg
xlat
xor
sbb
mov
sub
dec
loope
jg
xor
pop
or
mov
push
in
sub
jnp
icebp
or
fcompp
aam
and
pop
shrd
mov
das
jns
mov
popa
mov
das
dec
pop
pop
push
lcall
pushf
enter
sub
loope
adc
jmp
insl
orb
cmp
mov
fisttps
push
jp
mov
push
cmp
jae
pmaxsw
test
adc
xchg
insb
mov
je
insb
inc
xchg
mov
add
pop
imul
data16
repz
aad
add
mov
push
das
mov
cmp
int
enter
jo
jbe
and
mov
add
jp
inc
and
or
loopne
call
adcl
aaa
dec
xchg
adc
push
ljmp
fcoms
enter
ds
mov
stos
dec
dec
push
pop
mov
fdivl
push
push
add
test
cmpsl
inc
pop
repnz
fs
stos
sbb
shlb
adc
push
std
mov
test
out
shrl
xchg
push
pop
scas
adc
dec
jp
mov
or
add
jbe
xor
sbb
xor
pop
mov
in
cltd
xchg
xchg
stos
movsl
xlat
lret
sub
test
xor
jne
ljmp
mov
ret
dec
pop
js
int
and
cld
pusha
and
push
mov
pop
imul
push
cmp
and
mov
and
adc
outsl
inc
pop
mov
pop
aad
aam
push
jmp
jnp
es
call
stos
jmp
push
rorl
lods
mov
in
mov
loopne
dec
xlat
aaa
testb
ret
imul
push
push
cld
test
push
inc
addb
push
jmp
xchg
das
dec
leave
inc
scas
loop
sub
and
jle
dec
cmpsl
ret
xchg
repnz
dec
out
or
imul
cmp
cwtl
mov
push
mov
jno
mov
jne
xor
jb
mov
mov
xchg
mov
adc
rorl
gs
shr
ret
shrl
lds
push
stos
adc
clc
push
icebp
ret
hlt
mov
sub
pushf
mov
xor
pop
fwait
push
mov
call
xchg
and
and
add
inc
rcr
fisttps
shlb
aam
and
rcll
or
lahf
push
inc
vpmadcswd
cltd
jnp
sahf
cmp
add
xchg
outsb
jle
iret
xor
push
xchg
lcall
rcl
pop
or
pop
cmc
sbbb
or
outsl
es
push
lods
xor
xchg
mov
jge
test
clc
jbe
and
jle
in
lock
rcll
mov
ret
cmpsl
pushf
xchg
sbb
out
popf
cld
sub
das
clc
rorl
jg
inc
or
mov
cmp
pop
cmp
push
push
dec
mov
adcl
test
lret
cld
pop
add
adc
and
jge
out
lods
mov
push
jg
inc
addl
loop
fs
pop
xor
fistps
ljmp
and
push
in
rcrl
iret
lahf
mov
std
insl
ljmp
jecxz
adc
push
cli
lods
nop
sarb
add
mov
mov
or
mov
fadds
or
xchg
mov
mov
cmp
or
imull
enter
xchg
mov
sub
mov
cmc
jp
ja
push
in
push
xchg
pop
pushf
mov
outsb
lds
or
xchg
aam
pop
cmpsl
arpl
mov
sti
cmc
enter
pusha
dec
jg
filds
push
mov
movsl
in
inc
and
dec
lods
push
add
push
fs
or
push
xchg
xor
fdivl
aad
fidivrl
add
and
imulb
pop
push
lret
cmp
movsb
repz
push
cmp
push
ja
test
push
push
jns
lret
xor
call
mov
cmp
push
pop
cmp
loope
sbb
rcl
arpl
jp
jo
sbb
addr16
adc
jp
push
cld
or
in
lcall
in
pop
movsl
jmp
jg
xor
ss
lahf
jp
ja
cmp
out
xchg
int3
mov
sarb
fwait
xor
mov
cli
cmp
inc
mov
xlat
hlt
inc
sahf
cmpsl
mov
in
or
cwtl
jae
int3
cmp
mov
ds
addr16
icebp
mov
mov
sub
cmp
arpl
call
movsw
add
dec
sahf
mov
mov
call
les
push
loopne
pop
out
cltd
push
add
cmp
ret
cwtl
out
lret
or
add
and
add
inc
je
dec
pop
negb
in
push
dec
xor
jg
shl
mov
stc
ret
fwait
adcb
push
or
movsl
jg
push
fisubrs
mov
sub
sar
cmc
pop
insb
test
call
push
cmp
call
aam
rorl
add
push
aas
enter
jno
fistps
movsb
push
fcmovnbe
sub
inc
jp
inc
rcrl
dec
mov
stos
and
in
cld
mov
and
pop
push
sub
pop
pop
jecxz
dec
aad
or
mov
pop
dec
out
adc
insb
mov
daa
in
into
icebp
das
filds
popf
dec
or
mov
add
pop
sarl
sbb
dec
jle
sarl
sti
xor
jo
or
jae
fsubs
xor
cmp
xchg
mov
mov
mov
stos
fiadds
sbb
lods
jbe
scas
pop
ja
les
cli
cmp
inc
mov
and
fsubrs
xchg
mov
adc
mov
add
sub
mov
pop
sbb
daa
lcall
rcrl
addr16
pop
test
sbb
lock
fbstp
mov
shl
cmp
scas
test
mov
lea
ja
mov
repnz
jns
jne
jne
jle
loopne
enter
outsb
jo
mov
mov
cmp
daa
dec
mov
push
push
jmp
fistl
and
push
jno
js
xchg
repnz
or
sbb
ficomps
sti
pop
or
fidivs
subb
pop
sbb
ret
mov
imul
or
push
mov
sub
jg
push
call
and
add
mov
mov
insb
xchg
push
and
add
lds
sbb
addr16
or
mov
push
std
icebp
adc
ret
pop
jno
fwait
pop
push
inc
xchg
outsb
jp
movsl
jecxz
mov
bound
pop
push
sub
pop
adc
pop
xor
ss
mov
loope
dec
addb
fnstenv
jge
add
sub
fdivrl
sub
push
add
jb
dec
test
rcrb
xchg
push
popa
or
add
mov
xchg
cli
xchg
mov
sub
addl
cmpsb
sub
mov
fmull
bound
pop
fprem1
fsubrl
testl
outsl
sbb
pop
or
jmp
sahf
into
xor
and
aad
das
adc
scas
mulb
or
in
std
out
push
call
push
aam
idivb
or
push
movsb
cmp
dec
sbb
mov
jb
ja
mov
push
cltd
mov
lea
nop
adc
lcall
repnz
test
mov
in
les
push
jecxz
mov
loop
sarb
insb
cmp
xor
orb
push
rcrl
pushf
xchg
push
rcrl
mov
jo
push
mov
out
mov
push
xchg
js
mov
test
cmp
push
repnz
fists
mov
in
mov
pop
xchg
in
or
jae
adc
ret
jmp
mov
inc
cmpsl
mov
fwait
xchg
push
hlt
fcmovu
fidivrs
icebp
rol
push
lods
repnz
pusha
sbb
lods
ss
and
data16
mov
mov
idiv
xchg
xchg
xchg
lahf
jmp
mov
cmp
push
adc
mov
clc
cltd
scas
dec
jp
mov
mov
push
or
stos
ds
xchg
daa
cmpsl
and
push
push
das
leave
push
sbb
cltd
cmp
cmp
adc
add
sbb
outsb
jecxz
jmp
or
scas
int
ja
push
clc
xor
test
jns
mov
or
mov
xchg
push
xchg
mov
daa
into
mov
jp
sar
pop
xor
lret
int3
cmp
inc
mov
adc
cld
sbb
and
lret
divl
sub
jns
add
cwtl
xchg
mov
loop
notl
jmp
arpl
push
sbb
les
inc
in
cmp
mov
pushw
gs
jns
pop
inc
pop
or
sub
fs
pop
inc
int
test
mov
cmp
add
push
leave
leave
jns
fldenv
popa
stc
adc
test
jmp
test
xor
inc
js
lock
jg
cmp
mov
adc
inc
dec
dec
test
jo
ljmp
xlat
jl
push
clc
mov
adc
mov
loope
fcmovne
mov
ret
dec
rol
sarb
lds
jl
sub
jne
push
jbe
repnz
add
mov
imul
push
mov
imul
xchg
in
fbld
icebp
mov
adc
lods
adc
mov
cmpsl
and
cld
imul
ss
or
int
sbb
xlat
mov
scas
sbb
stos
push
arpl
lock
cmp
mov
sub
iret
shll
test
cmp
popa
les
incb
push
icebp
int
insb
inc
nop
push
push
subl
inc
fisttpll
mov
cld
shlb
aam
stos
aad
xor
cmp
mov
jno
sub
stos
mov
dec
mov
cmp
mov
iret
inc
dec
mov
iret
popa
cli
jbe
mov
xor
test
push
insb
sarl
push
cmp
sub
daa
into
ja
pop
loopne
and
insb
jp
pop
inc
jle
push
cmp
sbb
call
repnz
jae
dec
dec
push
mov
int
mov
xchg
bound
loope
push
sub
into
xchg
inc
push
bound
iret
jae
rorb
mov
popa
mov
aas
or
test
sti
nop
fwait
mov
jo
or
sahf
movsb
inc
jecxz
loope
out
movsl
out
icebp
addb
das
inc
iret
cmpsb
mov
andb
inc
sub
daa
or
bound
out
fsubl
sahf
cmp
inc
inc
push
cld
loopne
leave
inc
lret
xchg
fwait
push
scas
sarb
mov
testl
not
in
jnp
mov
int3
es
repz
xchg
test
jo
notl
xchg
mov
mov
and
pop
mov
cwtl
pop
push
adc
xlat
adc
sub
stos
xor
mov
popa
pop
mov
sub
out
mov
mov
sbb
mov
int
mov
mov
ret
or
cmc
add
movsb
pusha
movsb
jne
sbb
cs
xor
inc
pop
idivb
mov
jno
ficoml
xlat
inc
shlb
shll
pop
pusha
popa
call
arpl
xchg
call
int
fidivrl
xchg
fnstsw
int
iret
iret
or
xchg
cmp
mov
ss
mov
or
ja
sahf
outsb
sub
xchg
lahf
inc
cmpsl
add
jns
add
cltd
add
jnp
out
mov
data16
or
ja
inc
xchg
jbe
es
mov
leave
cld
xchg
inc
test
pop
das
jne
dec
arpl
repz
lods
into
adc
loop
out
test
jo
jns
dec
out
and
addr16
push
dec
movsb
jns
stc
loope
or
sub
push
orb
lea
or
mov
jno
loopne
fcmovb
mov
mov
lret
lods
push
mov
adc
mov
mov
jl
movsbl
cmp
inc
cmp
lds
and
cmpl
pop
mov
dec
mov
daa
in
mov
dec
push
pop
xor
test
not
fs
pop
js
or
jno
mov
clc
aam
inc
sub
rcrb
mov
xor
lock
cmp
pop
es
mov
add
push
ret
stos
or
incb
pop
cld
or
jg
push
inc
jecxz
je
xor
inc
ffreep
int3
jne
test
mov
dec
cltd
inc
pop
lods
sub
push
jle
call
and
lods
pop
lods
mov
or
cmp
xor
sbb
dec
lret
mov
xchg
call
je
inc
sbb
push
fs
jle
jae
je
out
dec
in
outsl
dec
jne
and
cmpsl
push
fimull
inc
pop
lret
and
icebp
or
xor
sub
je
jne
ret
mov
jne
mov
lea
loop
lods
and
add
ss
loopne
and
leave
inc
fwait
mov
adc
popa
fdivrs
mov
popa
push
mov
insb
jl
xor
push
sti
cmpsb
leave
push
insl
imul
add
sbb
fnstsw
jno
fnstsw
adc
out
push
cld
sub
push
xchg
mov
movsl
add
int
dec
lret
jmp
bound
lds
mov
mov
inc
add
mov
inc
movsl
cwtl
mov
clc
mov
mov
sub
add
or
sbb
jo
in
adc
test
mov
xchg
stos
sarb
cli
cltd
sub
inc
sti
cmp
testb
fidivrl
mov
int
sbb
dec
mov
push
adc
push
pop
sahf
sub
vpaddsw
jge
pop
add
nop
inc
fs
nop
movsb
cmp
popf
xchg
out
inc
cmp
xchg
arpl
push
push
sahf
cmp
pusha
cltd
adc
add
push
iret
adc
mov
or
inc
push
jg
xor
loopne
xchg
xchg
idivl
cmp
pop
daa
adc
add
fistpll
lods
push
push
stos
jns
into
xor
out
xchg
xor
jle
hlt
inc
sub
call
in
xor
cmp
ss
push
or
jecxz
push
cwtl
or
mov
cmpl
add
lea
jg
adc
fdivrl
popa
cltd
and
test
cmp
pop
push
je
xor
mov
and
jae
and
cmp
adc
ljmp
stc
insl
into
xchg
mov
popw
cmpsl
dec
push
mov
push
push
or
dec
push
aam
dec
fsubr
xor
es
push
xchg
movsl
pop
xchg
jge
pop
es
sub
lods
jno
shlb
cld
mov
dec
cld
pop
sarb
sti
sbb
mov
mov
xor
or
adc
adc
and
cmpb
ss
xchg
and
shlb
mov
jo
int3
jle
subl
push
push
int3
cmp
adc
imul
loop
mov
jecxz
andb
dec
popa
mov
shll
shlb
jno
in
inc
mov
and
aam
xchg
out
popf
inc
loop
ja
in
imul
fmull
mov
movsl
fdivrs
add
sbb
xor
dec
ljmp
shll
jle
jbe
mov
sub
push
cs
jge
mov
jo
daa
into
add
push
pop
pop
sub
sbb
mov
push
xchg
push
pop
pop
sbb
std
fiadds
fists
pop
push
mov
imul
outsl
test
cmp
out
mov
pop
or
data16
pop
cs
test
cmp
popa
add
sbb
pop
cltd
xchg
stos
sbb
push
jge
push
or
inc
push
mov
pusha
pop
xchg
dec
incl
xor
ss
and
pusha
sub
fdivrs
inc
in
jle
or
int3
xor
jno
scas
in
lahf
out
dec
push
out
xchg
mov
cmp
jae
gs
sahf
jg
xchg
dec
sbb
gs
mov
loopne
hlt
aad
cwtl
sbb
pop
and
mov
imul
leave
out
test
loopne
cmp
or
adc
push
or
xor
fildl
lds
neg
sbb
push
mov
icebp
mov
add
jg
push
cmpxchg
mov
test
jp
lcall
fbld
daa
inc
push
push
into
push
sbb
test
inc
mov
mov
sub
cmp
cmp
cs
cmp
or
aad
cld
cmp
dec
test
vminss
mov
mov
pop
mov
xor
aaa
adc
mov
sbb
push
imul
iret
jge
and
out
sbb
xor
mov
and
xlat
fistl
push
outsb
adc
mov
cmc
mov
js
popl
scas
mov
aaa
and
xchg
mov
pushf
repz
enter
jecxz
inc
push
mov
xchg
imul
frstor
mov
cmp
les
jp
mov
ret
add
les
xor
cmp
sub
cmp
mov
into
je
es
jge
mov
inc
push
stos
push
int3
sbb
cmp
dec
push
aad
aaa
push
or
sbb
mov
cmp
cld
pop
out
aaa
das
add
arpl
orl
xlat
cmpsl
xor
add
cmp
pusha
in
jbe
sbb
mov
inc
add
or
dec
xor
cmp
sub
clc
addr16
or
xchg
cmp
cwtl
ficoml
inc
or
clc
jae
push
push
mov
idiv
mov
mov
or
push
enter
sub
jp
push
mov
xor
cld
add
push
arpl
sti
adc
add
xor
stos
repnz
test
popl
xchg
addr16
pop
jo
pushf
mov
push
std
cmp
inc
dec
xchg
out
in
enter
lahf
and
mov
ret
sarb
test
out
cmp
sti
xchg
and
cmpsl
mov
sbb
leave
fwait
popf
cmovnp
je
inc
clc
movsb
dec
in
mov
andl
push
insb
mov
dec
out
inc
ret
pushf
ss
push
inc
ret
push
push
push
mov
and
dec
insb
arpl
sbb
push
out
jno
loope
rcl
jg
sub
push
scas
mov
jmp
adc
out
das
xlat
push
mov
and
es
out
in
push
jl
test
shlb
sbb
fcmovu
test
add
adc
sbbb
and
sub
das
push
adc
pop
pop
pop
lar
scas
xor
fsubrl
cmpsl
mov
dec
and
jmp
add
adc
pop
add
pop
dec
repz
jecxz
sub
xchg
imul
mov
cwtl
fstl
push
in
lret
inc
das
sub
push
in
dec
sub
rolb
push
xor
fsubrs
push
mov
clc
fldt
test
sbbb
jae
mov
sbb
or
fcompl
cmp
push
xchg
mov
or
pop
icebp
sbb
insl
mov
inc
add
pop
mov
pop
xor
ficoml
pop
shl
sarl
xor
idiv
and
test
inc
pop
sub
jl
mov
and
cltd
xorl
filds
popa
push
gs
rorb
xchg
and
mov
lods
orl
subb
mov
popa
jnp
pop
loope
sbb
xor
sub
fucomip
je
cmp
dec
cmpsb
fisttpl
sbb
inc
cmpl
add
outsl
mov
sub
stc
mov
cwtl
mov
mov
xor
xchg
sub
out
pop
xor
cmp
push
outsb
dec
imul
xchg
in
je
xchg
les
mov
fmull
push
mov
cltd
push
cmp
insl
jmp
and
push
lock
pushf
leave
outsb
pusha
xchg
jle
mov
mov
jo
sub
xchg
mov
inc
fs
cmpsb
lods
mov
mov
mov
jnp
sbb
rol
sbb
test
shld
pop
pop
ja
scas
ljmp
jp
add
subl
jp
sbb
or
addr16
or
js
cmp
bound
lcall
lret
js
addb
in
mov
out
in
sahf
mov
mov
notl
push
inc
addr16
add
mov
cmp
xor
lahf
dec
andb
and
adcl
lahf
inc
mov
lods
jo
jno
cmp
es
mov
ljmp
scas
nop
push
dec
ss
cmp
push
sub
lcall
fistl
inc
pop
cmp
xchg
sub
scas
repnz
loop
fs
adc
in
cmp
ret
inc
lock
mov
mov
cmp
cs
popf
cmp
jp
leave
mov
pop
mov
or
fcompl
adc
xchg
jecxz
sbb
leave
jne
fsubrl
adc
pop
mov
outsb
pop
popa
xchg
scas
test
jp
data16
daa
lock
mov
add
mov
out
faddl
adc
or
cmp
or
dec
repz
push
andb
addb
pop
mov
push
mov
movsl
mov
call
ds
mov
jb
mov
fsubs
sub
pop
test
sub
into
push
add
jecxz
xchg
arpl
ss
mov
shll
jne
mov
pop
mov
repnz
mov
frstor
icebp
pop
data16
xor
fmuls
fists
repz
lea
popa
cmp
addl
ljmp
hlt
add
xor
adc
sub
mov
pop
push
test
and
cmp
ret
cli
dec
and
out
pop
loop
sbb
fidivs
add
push
stc
idivb
lret
leave
jecxz
jg
mov
cli
and
inc
cmp
imul
jge
mov
aad
xorl
push
mov
out
cmp
fs
and
inc
mov
insl
sub
and
insl
ss
adc
add
mov
out
repnz
and
cwtl
jge
js
pop
jo
add
cmp
mov
mov
loopne
movsl
lea
cmp
ret
jp
mov
lret
shl
aaa
and
push
sbb
imul
adc
scas
or
mov
mov
stc
push
mov
in
pop
xchg
cmp
sub
popf
or
aaa
in
xchg
push
dec
cld
leave
shr
pop
xchg
mov
movb
testl
adc
insb
inc
arpl
mov
aas
push
mov
scas
dec
rclb
mov
and
xor
data16
inc
sbb
repnz
xor
mov
das
push
shl
rcll
loopne
ffree
sub
inc
cmp
jne
in
mov
lods
inc
and
cmp
daa
jo
ljmp
pop
xchg
fstps
inc
and
data16
xchg
cmc
in
loopne
mov
mov
xchg
ror
pop
jno
ds
scas
push
push
cmp
dec
lea
les
dec
fisubs
or
sbbl
adc
mov
jb
mov
xchg
bound
mov
mov
pop
mov
mov
test
cli
inc
sbb
lcall
pop
dec
test
add
xchg
fsubp
jge
daa
mov
mov
xor
cmp
jmp
insb
lds
add
xchg
add
push
jmp
pop
cs
test
pop
sub
inc
test
and
cwtl
push
out
adc
push
fsubrp
mov
ds
loopne
subl
xchg
pop
or
and
dec
sbb
mov
hlt
in
xor
stc
bound
pop
test
fldcw
dec
inc
fwait
push
adc
mov
sysenter
mov
arpl
and
xchg
xor
test
adc
dec
rorl
fstl
xlat
int3
mov
xchg
in
mov
cmpsl
push
cmc
hlt
fcmovnu
sbb
xor
dec
sbb
mov
jg
int
mov
inc
or
mov
inc
push
cmc
pushf
aad
push
repnz
and
push
dec
je
pop
ja
jg
adc
cmp
inc
pop
jl
out
arpl
int
sub
push
mov
mov
inc
jmp
sub
or
ret
dec
popa
jb
dec
cmp
push
push
and
lret
or
aaa
and
int
pop
mov
inc
push
pop
dec
jmp
sub
xor
pop
lock
mov
mov
push
jmp
mov
push
test
inc
in
fwait
out
adc
mov
pop
push
loop
xchg
data16
shld
das
lahf
jns
adc
into
sbb
je
push
sub
or
or
or
andb
lcall
divps
sub
es
xbegin
inc
adc
lahf
push
popa
lret
adc
jbe
xchg
xchg
scas
and
dec
mov
sbb
xchg
adc
pop
jmp
jns
aad
into
les
enter
jg
test
popf
add
sbb
out
pop
mov
and
jnp
fs
lods
popf
inc
dec
testl
xchg
mov
pop
sub
mov
or
jl
sti
rcr
clc
adc
aad
jecxz
js
xchg
popa
push
test
rorb
cmp
ret
fnsave
or
ja
sbb
mov
cs
xchg
mov
mov
sti
push
add
outsl
jbe
cwtl
jl
fisttpl
inc
lock
out
out
push
aas
add
mov
mov
pusha
pop
and
test
setae
mov
sbb
pop
dec
ss
mov
int
inc
xor
xchg
mov
sbb
movsl
mov
xchg
mov
jb
shll
inc
filds
loopne
add
cmpsl
je
or
jle
push
add
or
paddusw
inc
imul
add
cmp
sbb
bound
sbb
jl
loope
and
out
xor
xor
hlt
mov
push
mov
sub
out
jb
and
mov
int
adc
mov
movsb
pusha
jbe
xlat
sub
bt
lcall
dec
inc
xchg
pushf
dec
movsl
push
aaa
loope
inc
ret
out
outsl
and
xor
add
pop
pop
cltd
or
stos
cs
adc
and
test
push
sahf
loope
mov
jle
mov
cmp
xchg
mov
and
cmp
movsl
push
pop
push
lods
or
cwtl
in
out
adc
pop
mov
sub
mov
fucomi
mov
mov
js
bound
mov
fcompl
fsubl
jl
popa
jae
or
call
icebp
push
pop
jnp
inc
mov
xor
adc
cltd
imul
icebp
mov
mov
movsl
stos
mov
out
scas
addb
jecxz
xchg
cli
push
pop
addr16
lds
mov
xchg
sub
xchg
xchg
repz
mov
dec
stos
lods
dec
pop
mov
cmp
add
pop
bnd
mov
les
shlb
aam
fs
in
jp
jge
test
or
sbb
outsl
push
cld
js
mov
iret
aam
js
mov
jl
sub
mov
jle
shl
cltd
cltd
fisubrs
cmp
xorl
sbb
ffreep
fs
stc
mov
sub
mov
mov
stos
subb
and
push
mov
call
dec
das
xchg
jecxz
or
xchg
push
bound
push
incl
mov
sbb
or
addr16
xor
popa
stos
test
scas
push
call
cmc
rolb
test
xor
pop
jo
movsb
inc
cmp
fmull
cs
inc
loop
push
add
ds
cmp
pop
scas
rcl
clc
mov
scas
or
xchg
dec
push
cmp
sbb
xchg
rorb
loopne
arpl
cmp
mov
jne
imul
mov
gs
test
cld
mov
rorb
and
insb
pushf
adc
es
mov
outsb
cltd
cmp
iret
popf
lret
cmp
and
test
xlat
dec
js
adc
push
pushf
hlt
add
cmp
enter
push
add
ret
nop
shlb
std
arpl
cwtl
jmp
mov
call
cltd
pop
shlb
adcl
adc
jne
jne
test
mov
cmc
repnz
loope
mov
daa
loopne
insl
jg
pop
cmp
add
xor
addl
inc
ret
pop
xor
scas
add
sub
icebp
mov
das
xchg
out
out
cwtl
jg
aas
inc
in
fsubrl
out
add
idiv
rorl
repz
jno
xor
push
clc
sub
pop
int
das
dec
dec
test
push
addr16
scas
sarl
cs
jno
inc
push
mov
movsl
dec
andl
dec
cmpsb
xchg
mov
push
mov
or
sbb
mov
sarb
inc
rorl
adc
stos
mov
lods
arpl
mov
and
mov
ja
jp
or
dec
testl
adc
in
add
negl
add
lods
lea
push
push
mov
pop
mov
adc
mov
mov
dec
insl
mov
jecxz
xchg
jge
addl
mov
stc
sbb
push
add
add
rcr
mov
ja
mov
adc
jne
xor
jno
aaa
mov
les
push
mov
or
mov
pop
jb
add
pop
ret
jb
dec
jl
ret
mov
cltd
adc
test
pop
inc
sahf
test
sbb
aas
roll
cltd
dec
sbb
pop
pop
imul
aaa
xlat
inc
ss
dec
mov
or
add
xchg
call
test
in
mov
xchg
stos
test
jae
insb
arpl
add
in
xor
xorb
add
in
aad
fstl
jg
mov
push
jl
push
sub
sub
mov
cwtl
mov
mov
add
sbb
push
adc
imul
and
lret
push
jmp
pop
stc
xor
pop
movsb
mov
test
fwait
outsb
loopne
out
and
filds
xchg
pop
mov
pop
push
stc
or
jns
or
fisubs
push
ljmp
and
push
sbb
hlt
rep
xchg
mov
aad
insb
clc
lods
jmp
sahf
mov
movsl
cmp
sub
inc
jo
cmpsb
add
xchg
cmpsl
xchg
ret
cwtl
lea
aad
adc
test
xchg
mov
rorb
mov
cmp
fs
pushf
mov
mov
mov
add
mov
test
leave
jb
jl
popf
stc
jp
gs
mov
insl
iret
test
jmp
inc
in
mov
mov
daa
jae
mov
out
xchg
xchg
sahf
push
lods
and
bound
mov
icebp
subb
aaa
inc
shrl
mov
mov
int3
and
push
cmp
inc
scas
je
popf
imul
int3
dec
mov
sub
gs
aas
clc
mov
loope
ja
push
mov
fidivl
in
pushf
inc
outsb
repz
repz
test
inc
xchg
add
imul
push
xchg
mov
inc
pop
push
js
mov
sub
loope
cmova
jp
dec
sti
insb
mov
popf
push
daa
pop
xchg
mov
push
mov
inc
popa
pop
adc
mov
cltd
mov
adc
sti
popf
xorl
or
enter
test
pop
fnstcw
push
xchg
data16
stc
gs
sbb
out
mov
icebp
outsl
jno
icebp
mov
cld
and
flds
bound
out
fwait
outsb
arpl
test
mov
mov
cltd
dec
mov
scas
mov
rcl
int3
sbb
mov
shrb
or
dec
sbb
daa
mov
mov
aam
cld
and
xchg
add
enter
mov
inc
add
stos
cmpsl
outsl
sub
cmc
xchg
jo
pop
dec
int3
cmpsb
fsts
add
cwtl
pop
into
cli
or
in
in
pop
shlb
cmp
adc
dec
das
push
scas
adc
arpl
mov
inc
test
jbe
xchg
fcoml
loope
pop
ss
sub
icebp
pop
ffreep
add
ja
jmp
push
fisttpll
add
xchg
jo
cmp
cmp
adc
imulb
shrb
mov
stos
push
dec
jnp
lds
jl
ficomps
jmp
mov
mov
push
dec
dec
and
js
xchg
sbb
dec
xchg
add
cmpsb
or
jnp
fbstp
ret
jae
push
int
mov
testb
push
mov
xchg
pop
idivl
jecxz
pop
ret
xor
or
icebp
out
lds
adc
pop
xlat
mov
mov
pop
inc
dec
les
hlt
push
lahf
imul
mov
sbb
lret
fidivrl
popf
lret
dec
cmp
xchg
mov
xchg
mov
inc
add
adc
sti
xchg
jmp
bound
rcrb
pop
cmpsl
mov
test
sahf
xor
into
xchg
ds
ja
cmp
push
push
add
lock
adc
cmp
lea
rcrl
ret
imul
dec
mov
or
mov
push
and
mov
fisttpl
cmp
push
cmp
push
cmpsl
jl
gs
les
fidivl
xchg
push
push
inc
add
sbb
adc
cwtl
add
out
fbld
xchg
pop
pop
mov
jle
notb
mov
outsb
loope
popa
dec
mov
aaa
pop
std
sub
mov
dec
push
adc
sbb
mov
shrl
lret
mov
idiv
cmp
out
cmp
rcl
in
dec
stos
sti
pop
out
daa
mov
sbb
mov
mov
out
cwtl
hlt
aaa
mov
sub
scas
jb
mov
sbb
sbb
orl
add
xor
push
push
das
es
dec
pop
stos
xor
dec
mov
loopne
inc
push
sub
test
test
pusha
pop
sub
xchg
inc
das
jp
cwtl
int3
jmp
fucomip
clc
mov
push
xorb
sub
mul
sub
sub
mov
mov
jnp
clc
mov
popa
xchg
push
adc
sub
aam
cmp
xlat
cmp
fucomi
std
dec
sti
mov
lcall
push
movsb
notb
dec
enter
cmp
jae
and
stos
sti
or
pop
and
aam
mov
ret
stos
push
cmp
xor
popa
jmp
fucomi
mov
add
out
lock
movsl
push
bound
adc
dec
or
rcll
inc
fnsave
push
xchg
test
clc
into
sbb
and
fdivr
jo
fsubrp
push
ss
fisubrl
xor
rcrl
xor
mov
jge
sbb
fisubrl
fisttpl
in
shll
mov
imul
dec
and
cli
test
xchg
into
cmc
icebp
pop
rolb
fstpl
mov
jg
mov
add
xor
pop
insl
push
add
push
ror
jecxz
bound
push
ficomps
cwtl
das
sub
clc
cmp
xor
popa
cli
or
inc
lods
out
mov
andl
imul
mov
std
mov
xchg
push
jno,pt
xchg
sbb
sbb
int3
pop
shr
xlat
sub
lret
leave
fiadds
rclb
ja
loopne
mov
cmp
shll
addl
lcall
cwtl
xor
mov
pop
in
push
fsubrl
jge
rcrb
pop
pop
push
adcb
mov
mov
or
xor
mov
loop
fmulp
test
xchg
cltd
xor
xchg
and
out
lock
sbb
mov
mov
dec
mov
fistps
movsb
pop
arpl
leave
aas
cmp
and
pop
xchg
push
xchg
insl
lret
inc
push
jnp
adc
loop
movsl
call
sahf
xchg
inc
sub
xchg
outsb
pusha
repz
aaa
pop
rcrb
jae
xchg
sub
xor
inc
test
mov
xchg
lea
and
push
sub
xor
sbb
mov
orl
add
in
fcmovb
in
xchg
scas
mov
xchg
pop
ficoms
and
mov
call
cmpsb
pop
in
enter
and
movsb
pop
fxch
imul
data16
daa
sar
inc
dec
pop
outsl
scas
mov
dec
rorb
add
fisttpll
sub
inc
lods
out
xor
icebp
mov
inc
or
cli
cmp
test
sub
jno
cmpsl
xchg
jl
sub
lods
daa
popa
xlat
cmp
sbb
fistpll
lea
std
fbld
adc
clc
xor
jg
mov
or
daa
jp
xor
adc
imul
out
ret
gs
inc
stc
lret
out
outsb
in
sub
jle
sbb
xchg
jp
out
adc
addr16
and
sar
jne
iret
mov
out
push
xchg
sbb
xor
mov
inc
adc
adc
pop
and
nop
jns
negb
jecxz
push
xchg
ss
mov
xchg
test
sub
dec
xchg
repz
sahf
aad
stc
push
fsubl
and
loope
pusha
sub
cmp
sub
adc
push
insb
sub
push
stos
push
icebp
jg
cwtl
or
and
and
cs
popa
cmp
cwtl
dec
mov
jl
xchg
xchg
sub
xor
lret
push
nop
icebp
das
xlat
mov
dec
xor
and
mov
push
inc
push
repz
stc
xchg
into
or
mov
sbb
data16
andl
mov
push
pop
push
push
mov
jns
orb
pop
call
pop
loopne
xchg
sbb
mov
push
adc
jae
mov
lret
cli
xchg
js
mov
leave
jnp
push
out
pop
or
jecxz
xor
jmp
ret
hlt
mov
jl
icebp
or
mov
addr16
xchg
sti
jo
fmulp
enter
cmp
cmpsb
je
and
nop
cmp
and
mov
mov
inc
xor
inc
test
aas
imul
cmpsb
jmp
stos
loop
xchg
decb
andb
adc
pushf
fsts
mov
mov
or
dec
rcl
mov
add
in
popf
add
pop
pop
decb
push
pop
scas
push
je,pt
sub
jnp
pop
pop
ret
jne
push
dec
into
movsb
push
repz
xchg
jp
pop
xchg
neg
or
xchg
aad
mov
add
sbb
in
repz
aad
xchg
mov
icebp
mov
xchg
in
cmp
jns
cmp
rorb
mov
in
sarl
movsl
xchg
lret
cli
mov
lret
popa
je
aas
mov
cs
es
stos
and
dec
mov
dec
pop
sti
mov
push
or
sbb
xor
outsb
clc
inc
xchg
lods
scas
mov
shrl
push
cltd
in
mov
inc
mov
and
push
punpckldq
insb
sub
mov
aam
push
and
or
cwtl
insl
xlat
or
or
rcrb
aad
inc
ss
ror
hlt
inc
shlb
and
sub
jnp
jo
inc
into
dec
and
pop
outsl
push
punpckhdq
lods
jle
clc
mov
cwtl
cmp
popf
jmp
add
mov
ffree
mov
mov
call
scas
andl
stos
sub
aaa
loopne
popf
insl
jmp
lret
inc
test
dec
ljmp
mov
int
sahf
mov
fstps
loop
hlt
cmpsb
cmp
and
mov
dec
std
inc
xchg
pop
icebp
fs
addr16
dec
add
repnz
adc
jno
push
mov
sarb
push
mov
mov
mov
mov
stc
sub
pop
fxch
mov
xor
movsl
mov
fildl
dec
mov
dec
push
fimuls
cmp
rorb
sbb
xorl
push
jmp
loope
cs
out
ja
fadd
xor
sbb
and
scas
loop
cltd
sti
xor
aaa
lods
ss
add
mov
mov
out
or
jmp
dec
inc
dec
pop
test
cmp
stos
mov
pop
out
dec
mov
and
sub
lret
fisttps
and
cmpsl
xor
test
notl
ret
into
push
cld
jno
xchg
or
sti
fistpll
in
loope
cmp
out
and
fidivrs
push
mov
ret
jo
aaa
lock
mov
int
cltd
loop
push
gs
dec
adc
dec
sub
hlt
test
mov
movsl
sub
and
sbb
mov
mov
xchg
mov
out
enter
je
in
mov
cs
cmp
push
pop
dec
repz
cs
loopne
test
push
xchg
ds
repz
lods
bnd
ss
nop
leave
jecxz
pusha
nop
scas
aam
cmpsb
arpl
fistpl
cmp
mov
cmp
fcomps
cvttps2pi
sub
mov
cmp
nop
test
pop
jne
aad
aad
into
ss
push
adc
xor
xchg
leave
mov
sbb
loope
and
push
leave
mov
sti
xchg
lods
pusha
pop
and
and
xor
jmp
pop
push
mov
std
pop
mov
and
cltd
mov
in
xchg
and
vunpckhpd
loopne
xchg
xor
int
pop
jb
fcom
movsb
inc
dec
push
lods
xlat
cmp
cmp
mov
jne
cmp
push
int3
lahf
shlb
push
sub
and
push
jg
clc
std
inc
pop
and
out
mov
dec
fsubrp
xchg
insb
std
or
hlt
dec
loope
mov
jae
data16
jne
xchg
invd
pop
sbb
xlat
shl
sbb
cmp
xchg
mov
pop
mov
sbb
cmp
mov
cmp
lds
adc
lcall
dec
and
push
mov
xor
adc
fidivs
rorb
sarb
psubsb
aam
xchg
jae
jbe
pop
outsb
dec
lret
push
pop
out
dec
jnp
dec
call
add
les
and
dec
or
jne
mov
test
addl
xchg
ror
dec
in
repnz
push
dec
ret
outsb
pop
jns
inc
push
pop
sub
cmp
sbb
daa
inc
adc
cmp
lea
fs
pop
lret
mov
xchg
decl
insl
sbb
jbe
pop
push
ror
invd
xor
cmc
cmp
pop
lahf
sbb
mov
add
out
and
popa
adc
loop
outsb
das
sub
mov
and
mov
mov
popf
mov
aad
xor
stos
icebp
xor
pop
push
rsm
and
ss
pop
cwtl
bound
fbstp
xor
xchg
movsl
jne
jne
mov
xchg
dec
mov
inc
pop
adc
mov
and
or
inc
push
aam
xchg
sub
dec
bndstx
repnz
push
jl
xchg
adc
inc
test
lahf
inc
xor
and
mov
lcall
cmovnp
inc
mov
cmp
in
dec
pop
ja
fisubrl
sbb
xor
lret
pop
push
pop
inc
or
ja
jb
addr16
add
fistps
push
pop
xchg
jae
push
xor
mov
push
mov
adc
jb
pop
cli
cltd
add
sbb
sbb
popf
xorps
test
lods
adc
or
pop
push
sbb
in
nop
aaa
ret
imull
mov
dec
addr16
es
xor
ret
adc
mov
mov
faddl
repz
mov
push
and
mov
jge
clc
dec
cmc
aam
loope
sarl
mov
std
xor
sarl
pop
mov
mov
jne
jg
cmp
jmp
mov
scas
pop
xchg
mov
int
test
xor
jecxz
sbb
in
pop
rclb
addr16
cli
pop
dec
pop
out
test
add
test
push
lcall
rorl
cmp
loopne
aaa
inc
mov
xchg
inc
and
and
je
out
lahf
jp
js
pushf
mov
sub
pop
xchg
test
lret
inc
shl
addb
mov
enter
adc
arpl
out
jo
aaa
mov
pop
mov
or
inc
jb
cmpsb
cmp
mov
inc
shr
inc
call
ds
mov
xor
push
lock
adc
insb
rdpmc
das
xor
dec
pop
dec
push
sbb
mov
shrb
in
ret
jmp
mov
or
addr16
loopne
push
pop
push
sbb
xchg
jmp
mov
push
scas
arpl
push
sub
adc
aas
xor
hlt
jo
or
test
negl
pushl
lcall
mov
repz
call
mov
jnp
jns
pop
mov
sbb
movsl
imul
inc
lods
jnp
add
sub
les
cmpsb
es
ffreep
shrl
inc
mov
fisubrl
jle
jp
jecxz
fs
in
fs
iret
scas
pop
adc
sub
call
fldenv
cs
orb
pusha
lds
movsb
xor
mov
jecxz
or
push
mov
push
inc
sbb
and
mov
jecxz
xor
les
cltd
xchg
sub
and
jb
fs
lret
js
dec
mov
iret
push
add
cmpsl
or
jno
je
divb
mov
addr16
jb
pop
jle
xchg
adc
les
jle
mov
mov
movsl
call
xchg
pushf
jle
inc
cltd
loope
imull
fmull
cmc
out
div
add
cmpsb
push
cltd
or
stc
aad
stc
mov
mov
sub
push
add
add
xchg
mov
cs
aam
inc
or
xor
imulb
sub
mov
cmpsl
test
pop
mov
in
and
lret
out
xor
into
aaa
cmpb
test
mov
cwtl
call
and
mov
insl
cmp
push
mov
cmp
ret
push
sbb
jbe
xor
flds
ret
loop
pop
adc
pop
add
jecxz
dec
sbb
repnz
push
jno
jns
cmp
insb
aam
lods
lcall
xor
jnp
pop
insl
inc
xchg
imul
inc
stos
loopne
incb
xchg
cmpsl
mov
pushl
in
jmp
test
roll
ljmp
out
mov
cmp
dec
ds
hlt
mov
pop
mov
iret
jnp
jg
mov
or
sbb
outsb
sbb
loopne
push
mov
sub
pop
out
xchg
cltd
subl
mov
xlat
fdivr
lods
mov
jo
inc
inc
ss
dec
sbb
fwait
ljmp
xor
daa
inc
mov
dec
and
movsl
cltd
sbb
jmp
stos
inc
push
or
or
cwtl
push
dec
push
or
addr16
mov
stos
inc
repz
aas
mov
mov
jmp
jae
cmpsb
loope
adc
and
in
mov
loope
rcrl
dec
fildll
mov
pop
out
dec
cwtl
je
lock
xchg
or
and
push
adc
jge
pop
cmpsl
repnz
xor
aad
inc
fst
push
test
leave
imul
aaa
sub
aaa
fcmovne
aas
aas
mov
lret
movsb
arpl
lcall
rdtsc
xchg
and
push
xchg
cmp
fnop
mov
mov
into
adc
cwtl
xor
dec
or
in
scas
call
mov
jle
pop
xor
xor
in
mov
daa
adc
xor
xchg
adc
icebp
mov
fsubrs
sbb
lret
rorl
dec
add
xchg
das
add
pusha
xor
lock
sti
or
jge
repnz
jge
int3
mov
mov
in
subb
out
ret
xchg
js
fisubs
int3
mov
movsl
add
mov
xchg
gs
inc
fmuls
loope
and
movl
pop
jl
add
xchg
lret
adc
or
cmp
sti
xchg
test
aas
loop
das
movsb
push
xor
shrb
clc
das
fisubrl
dec
mov
ret
or
cs
icebp
cmpsb
jnp
fcomps
aaa
out
sub
pushf
mov
dec
dec
xlat
jecxz
cmp
adc
movsb
outsl
jae
xlat
lahf
in
pop
fwait
rcrb
xor
insb
fistl
sbb
mov
adc
fxtract
cmp
sbb
push
mov
xchg
pop
out
cmp
les
ljmp
daa
add
inc
add
into
cwtl
pop
and
hlt
mov
push
loop
xorb
out
inc
pop
jmp
cs
out
das
ret
movl
adc
aaa
stos
xchg
movsl
rorb
jle
or
lds
movsl
sbb
movsb
mov
es
fstpl
sub
sbb
cmc
aad
frndint
lock
adc
sbb
or
movsl
push
dec
sti
stc
fsubrs
push
mov
add
and
pusha
add
pop
hlt
and
inc
adc
mov
mov
mov
movsl
pop
mov
pop
or
outsl
mov
leave
jl
push
out
mov
mov
sbb
jnp
test
ret
push
sbb
inc
pop
repz
push
loopne
jno
or
fldl
or
adc
inc
sub
mov
int3
fmuls
rorb
adc
xlat
xchg
out
xor
fsubrl
ss
in
cmpsl
out
test
sub
aas
inc
int3
jge
xor
int3
xchg
cmp
insb
sahf
dec
push
testl
dec
cmpsb
mov
cmc
fs
cmp
outsl
mov
aaa
loop
jp
add
int3
inc
mov
mov
rorl
mov
test
mov
or
cmp
jae
sbb
mov
sti
pop
add
imul
inc
pop
ss
sub
add
lea
ja
sub
pop
ja
hlt
sti
bound
push
aas
rcrb
in
dec
scas
xchg
jg
push
sbb
sar
jmp
mov
jo
outsl
push
adcl
dec
aas
je
movsb
nop
movsb
lods
and
shrb
add
mov
xchg
lods
fwait
xchg
sbb
sbbb
push
sbb
sbb
std
mov
shl
mov
jbe
sbb
and
int
outsb
movsb
mov
inc
cmp
ret
dec
ret
repz
divb
pop
and
scas
insl
outsb
int3
movsb
mov
lcall
fnstsw
cmp
cmp
test
insb
mov
fwait
pop
call
mov
in
inc
mov
jmp
mov
call
clc
ljmp
xor
js
addl
cwtl
shlb
xchg
out
in
add
push
adc
mov
pop
pushf
jae
dec
outsl
out
call
pop
orb
lret
shll
add
loope
mov
jecxz
sbb
jnp
mov
js
out
popa
bound
call
or
push
adc
int3
and
push
adc
out
mov
cmp
enter
cmc
mov
repz
adc
xor
pop
sbb
sub
mov
jp
aas
loop
sub
sbb
or
mov
and
mov
push
dec
test
inc
xor
jmp
cld
cli
push
mov
movsb
pop
incb
inc
cld
xchg
sub
mov
xchg
jae
or
xor
test
mov
into
fcomp
sub
notl
xor
mov
xlat
xchg
jg
sub
or
xor
dec
ret
dec
js
out
mov
add
xor
or
inc
ret
dec
out
add
pushf
loopne
lret
cs
loop
cld
lret
and
mov
add
push
fdiv
fdivr
inc
orl
pop
in
daa
sub
or
mov
bound
mov
cmp
scas
movsl
rcll
mov
out
mov
scas
and
sub
push
mov
arpl
mov
mov
stc
fadds
dec
dec
dec
rcl
icebp
sub
dec
jne
je
into
cmp
cmp
push
dec
jp
fcompl
xchg
rcll
or
push
cmp
rcl
pop
inc
es
mov
jl
mov
xor
repnz
adc
sub
jnp
mov
mov
cmp
lret
addb
xor
es
cs
orb
xor
into
shr
dec
insb
xchg
das
mov
add
dec
xor
xor
mov
pop
lret
push
aaa
push
cwtl
dec
sbb
inc
xor
stos
push
nop
into
fstl
mov
enter
add
stos
add
sub
xor
js
aas
call
mov
and
mov
test
sbbl
dec
sahf
test
jns
or
in
lock
or
inc
add
dec
les
dec
addr16
ja
or
gs
shlb
mov
fs
jge
push
loope
sarb
shrb
adc
dec
inc
popf
dec
mov
pop
push
and
push
or
jp
jp
loopne
je
sub
sub
in
sbb
inc
frstor
repz
adc
xor
xchg
std
jb
sbb
cmp
mov
int
xor
mov
pop
push
lea
es
loopne
popl
mov
xchg
adc
xor
int
lar
xchg
pop
or
mov
jg
xchg
add
mov
out
sti
mov
and
and
outsl
mov
jo
inc
sub
and
or
fisttpl
mov
bound
gs
lahf
sbb
mov
mov
pusha
sbb
das
push
sbb
jge
out
xor
iret
gs
mov
in
scas
sub
fcomps
adc
lods
mov
sarl
xor
inc
lahf
fneni(8087
fidivrl
stos
cmp
adc
mov
in
push
jecxz
mov
bound
sbb
iret
in
sub
pop
pop
sbb
test
xchg
jo
dec
sahf
and
adc
push
cmpsb
pop
loopne
in
jecxz
nop
push
dec
jns
insb
or
sub
xchg
adc
ret
push
pop
adc
xchg
mov
sub
scas
sbbl
ja
lods
cmpb
lock
in
leave
jle
mov
jl
sub
push
sarb
or
icebp
sbb
cmp
cmp
in
stos
cmp
sub
add
clc
xor
inc
scas
gs
add
je
sbb
jmp
es
hlt
cmp
or
adc
xor
sub
imull
cmp
rcr
xor
maskmovq
notl
fdivrp
or
push
sbb
das
mov
jge
std
jp
jbe
push
test
outsb
adc
push
push
adc
sub
rcrb
push
push
dec
data16
enter
xor
cmpl
aad
ds
lock
data16
inc
dec
inc
and
dec
mov
or
out
mov
add
fwait
stos
cwtl
xchg
hlt
ret
in
cmp
adc
mov
pop
in
jno
cltd
cmp
ja
jge
cmc
jmp
mov
iret
out
inc
fwait
jmp
out
lret
cmc
test
dec
cmp
adc
cs
xor
push
popl
sahf
jno
jns
sub
movsl
or
inc
fildl
insb
jle
mov
fstpt
loope
in
pop
divl
outsl
call
mulb
and
pop
mov
mov
mov
aam
mov
jp
ss
mov
jbe
mov
add
inc
adc
test
xchg
adc
xchg
xlat
hlt
lea
ds
int3
pop
cmpsb
or
adc
inc
xor
push
pop
jle
stc
daa
adcb
int3
outsl
sbb
jno
popa
lret
fcmovnu
dec
jle
arpl
repz
aad
inc
fwait
xchg
dec
xchg
adc
xor
mov
test
adc
cld
fdivrp
cwtl
mov
adcl
cwtl
pop
test
or
les
add
cli
jae
imul
sub
add
push
jp
pop
bound
adc
mov
and
mov
sub
push
xlat
aam
xor
adc
sub
mov
xor
add
push
es
loop
push
inc
mov
mov
inc
push
adc
or
dec
ljmp
test
fidivl
sub
inc
pop
mov
repnz
cli
jg
push
mov
and
arpl
jp
xchg
jmp
dec
das
or
icebp
inc
pop
mov
xchg
inc
leave
jl
daa
cmpsl
mov
data16
jg
iret
out
imul
shll
ret
jns
pop
iret
adc
test
sub
pop
and
sbbb
ljmp
test
ds
lret
inc
lods
inc
std
shll
adc
add
test
aam
mov
add
fnstsw
dec
xchg
ljmp
lret
xor
adc
mov
add
ds
cltd
cli
jmp
sbb
jecxz
clc
outsl
in
inc
mov
rorb
mov
pop
repnz
iret
sbb
sbb
add
addl
addr16
pop
pop
inc
mov
pop
xchg
xchg
popa
adcl
sti
cwtl
or
int3
mov
les
aas
es
mov
adc
or
cmpb
movsb
dec
xor
jecxz
sti
stos
cmp
fldt
jg
cs
and
subl
inc
stos
mov
adc
jg
push
sub
dec
and
sub
and
dec
pop
ret
xor
dec
jbe
ret
aaa
insb
sarb
dec
inc
rol
inc
xchg
jns
imull
je
jnp
add
inc
dec
mov
incl
push
cmp
and
int3
xchg
int3
sub
insl
mov
ret
imul
es
sbb
mov
idivb
aas
ret
xor
dec
das
xor
mov
sti
xor
push
aad
mov
add
sbb
jmp
cmp
out
out
cld
fs
bound
in
in
dec
dec
mov
test
dec
mov
enter
pop
outsl
dec
fcomip
jg
pushf
mov
imul
or
mov
nop
push
mov
lods
mov
fs
cmp
push
addb
and
push
pop
push
mov
lods
sbb
or
rclb
inc
xor
jle
lcall
gs
inc
fs
scas
mov
aas
sub
add
aam
mov
xchg
cmc
sub
jg
mov
rorl
jae
dec
adc
ss
cs
jae
jl
and
dec
push
sub
int3
xchg
lods
stc
cs
jae
mov
adc
arpl
clc
cmp
sahf
popf
or
sbb
pop
incb
std
fldt
ret
sbb
ficomps
iret
or
gs
jle
das
xor
cmp
xchg
lahf
jg
cmc
adc
jge
jae
xchg
mov
mov
psubw
stos
sbb
fcoms
cli
jns
push
icebp
xor
sub
jmp
sbb
lds
jb
mov
out
mov
inc
add
sbb
mov
es
movsl
mov
stos
xchg
xchg
in
das
ficomps
insb
gs
movsb
cmpsb
cmp
push
adc
call
jb
sti
aaa
orb
add
or
jae
imul
daa
jmp
bnd
or
popa
shlb
inc
aaa
jecxz
lock
cs
mulb
les
adc
into
sbbl
mov
xchg
push
aad
and
cltd
push
lea
adc
lods
sub
push
popa
or
and
out
nop
hlt
add
jmp
mov
and
push
jmp
int
or
adc
fcmovb
xor
lods
cltd
std
adc
push
stc
imul
xchg
sbb
loopne
js
sarl
push
mov
pushf
loopne
inc
mov
jg
bnd
mov
test
adc
hlt
sbb
dec
lcall
sub
mov
jns
lods
mov
lret
cmp
sub
movsb
fldcw
mov
pop
and
push
push
movsl
fisttpll
xchg
mov
pop
xor
inc
and
inc
loopne
pop
fistps
fisubrs
inc
lods
add
cld
lods
xor
notl
jae
cmp
lahf
adc
repnz
shll
push
test
push
cmp
stos
mov
andb
cmpl
sarb
jge
in
stos
sbb
dec
testl
mov
bound
lock
stos
out
dec
repz
das
cld
mov
mov
mov
jns
add
jmp
fwait
fs
add
rclb
incl
xchg
popa
fnsave
mov
out
adc
mov
jnp
test
push
mov
sbb
dec
cmpsl
mov
idivb
nop
outsl
jns
xchg
sub
push
push
sbb
jg
popf
mov
jbe
dec
mov
out
fiaddl
sub
ja
dec
sbb
lods
out
sahf
out
pop
mov
dec
into
addr16
jo
fisttpl
xchg
adc
ljmp
movsb
cmp
test
test
divl
lods
xchg
mov
push
xor
fwait
pop
lret
popf
xor
sub
sbb
jbe
js
add
cwtl
lret
xchg
push
aas
inc
mov
xchg
mov
faddl
std
int
pop
repz
sub
dec
in
dec
adc
pop
and
mov
movsb
add
mov
or
arpl
mov
lods
xchg
movsb
std
scas
call
outsl
test
pusha
dec
pop
jmp
cltd
mov
mull
inc
mov
int
sub
xchg
sahf
sub
push
jmp
sbb
pushf
xchg
fsubr
cmp
fucomp
movsb
jge
pop
push
icebp
xchg
push
add
add
sub
fisttps
mull
call
sbb
shrb
into
adc
inc
or
inc
ror
fucomi
mov
push
fwait
jbe
popf
loopne
shll
xchg
jnp
imul
mov
jb
inc
mov
test
repnz
stc
sahf
mov
mov
es
and
pop
shr
push
nop
fcmovu
repnz
add
sahf
out
push
mov
jo
loope
out
xor
ret
pusha
cli
mov
inc
push
insb
dec
jecxz
cli
mov
inc
and
cmc
leave
jge
mov
mov
sarb
pop
inc
mov
cmc
xor
fdiv
add
repz
push
repnz
jne
or
cmp
push
cld
shlb
jno
mov
mov
ret
and
fwait
mov
dec
cltd
js
in
pushf
adc
mov
or
xchg
int3
bound
test
cmp
inc
jae
lds
jecxz
loopne
pusha
and
push
lret
lahf
cld
icebp
adc
fcoml
xchg
fdiv
inc
pop
in
stos
dec
xor
xchg
dec
addr16
mov
rorl
ss
adc
sbb
push
push
fdivl
sub
mov
clc
nop
jle
pop
sbb
inc
mov
test
pop
mov
movsb
xor
mov
jle
pop
inc
push
pop
dec
xor
jne
icebp
je
out
push
addr16
push
cmp
and
into
jp
aaa
into
pop
push
cs
in
sbb
mov
inc
cmpsl
cmc
xchg
jmp
pop
cli
dec
les
sbb
push
and
xchg
pop
ret
xchg
loopne
aam
jle
cmp
int3
bound
js
repnz
add
mov
outsb
add
das
jae,pn
daa
push
mov
cmc
add
jecxz
loop
xchg
and
fists
mov
das
ja
cmp
add
repnz
mov
nop
daa
lods
fdivs
jecxz
pop
jmp
jl
repnz
pop
add
or
dec
mov
mov
rcrl
pushf
sahf
sbb
push
adc
xlat
pushf
fcomps
push
cmpsb
aaa
xchg
push
xchg
loope
lcall
xchg
sub
mov
in
js
jecxz
in
fdivrl
aad
pop
jbe
mov
add
xchg
in
mov
or
mov
push
jb
ss
push
and
test
inc
or
mov
stos
add
mov
out
jmp
mov
in
iret
outsl
mov
mov
roll
xchg
mov
xchg
fnstcw
mov
push
jne
roll
mov
push
inc
sub
out
inc
inc
lcall
adc
sbb
adc
xor
scas
ret
imul
leave
aaa
std
js,pt
data16
notl
pop
inc
addr16
sbbl
push
ficomps
inc
add
push
jbe
ss
sahf
gs
lret
and
mov
test
mov
push
cmp
or
inc
push
das
xlat
mov
sub
test
stos
fcomps
mov
xchg
sbb
sbb
or
jecxz
push
idivl
inc
scas
mov
adc
push
pop
pop
xchg
sbb
pop
xor
jae
add
scas
mov
dec
and
das
add
adc
adc
loop
bound
pop
cmpsl
outsb
mov
push
aas
addr16
mov
lods
push
mov
lock
enter
jmp
inc
push
addl
lret
int3
sbb
push
mov
adc
inc
mov
mul
dec
lea
js
jmp
rolb
lock
cli
pop
movsb
int
adc
cmp
push
and
aas
mov
sub
sub
mov
cmp
jg
jl
or
sbb
insb
movsb
jnp
push
add
ss
and
mov
fcomps
sub
sbb
jecxz
mov
lret
les
cltd
or
scas
push
pop
arpl
das
in
popf
xor
divb
cmp
cltd
and
cltd
xorl
mov
std
in
mov
xchg
les
push
nop
shr
sbb
pop
in
call
lret
ficompl
mov
mov
andb
mov
sarl
lods
popa
fld
or
pop
mov
jg
cmp
out
cltd
stos
in
scas
mov
mov
subb
and
sub
lahf
fstpt
fnstenv
jp
cmp
lods
push
imul
push
sub
jmp
inc
scas
fmuls
mov
jns
mov
sbb
jmp
mov
fiadds
pop
std
stos
mov
addb
test
jmp
sbb
dec
pop
pop
std
mov
popf
jp
aas
test
gs
mov
push
adc
jp
outsl
daa
dec
mov
push
loope
sti
aaa
inc
push
in
xchg
pop
push
add
mov
xchg
std
dec
cmp
sub
scas
cmp
or
sbb
jmp
pop
dec
mov
dec
or
xchg
xchg
iret
in
xchg
pop
xchg
out
dec
pop
and
int3
aaa
adc
cltd
out
xchg
popf
clc
and
inc
mov
fcom
jnp
xor
int3
aam
pusha
mov
fadds
jmp
in
sbb
push
xorb
mov
aas
or
xlat
lds
daa
adc
je
push
ss
cmc
lds
cwtl
cmp
lea
es
or
dec
cld
inc
cli
cltd
stos
and
or
imul
in
sbb
push
loop
pusha
int
adc
push
mov
push
mov
cli
cltd
jl
pop
subb
xor
pop
jbe
inc
andb
add
cmp
mov
gs
dec
pop
sbb
xor
pop
xor
arpl
mov
daa
hlt
cmp
sub
inc
or
scas
shl
push
mov
shlb
rol
cbtw
int3
pop
fildl
ljmp
imul
je
into
scas
jo
js
push
daa
mov
lahf
add
subb
cmc
ss
cmp
popa
xchg
ret
cmp
xor
call
jmp
sub
jne
xchg
pop
jns
xor
jecxz
roll
ja
aad
ja
idiv
out
in
xor
dec
rolb
inc
icebp
push
sub
int
xor
sub
arpl
cli
ret
sbbb
lret
pop
dec
sub
lods
stos
in
movsb
mov
lcall
or
aas
jne
fdivrs
xchg
xchg
lock
push
xor
fdivrs
mov
and
je
xchg
cmp
lea
out
jg
mov
sbb
jg
push
sbb
jbe
push
cltd
push
sbb
dec
pop
iret
adc
out
das
mov
js
movsb
xchg
in
aas
negb
mov
mov
lcall
clc
jb
jo
popf
and
jne
outsb
or
mov
cs
push
mov
jbe
xor
loope
xor
rclb
pusha
out
mov
push
or
mov
mov
cmpsl
mov
gs
sbb
or
aam
out
js
adc
sub
or
cmp
push
pusha
pushf
mov
dec
xor
fcoms
loop
call
xchg
jge
sub
aas
orl
or
dec
adc
mov
test
aam
lea
jle
mov
push
outsb
mov
lods
bound
stos
popa
lods
mov
mov
data16
jmp
je
push
sub
push
addr16
xchg
fisttpl
sbb
lods
pop
pop
sub
push
xlat
dec
clc
rclb
movsl
fcoms
sub
out
iret
sub
mov
lods
sar
sbb
lods
stos
icebp
jp
ret
push
or
rcr
cmp
inc
xrelease
inc
insl
ss
jge
xchg
jo
push
cmp
sub
jmp
pop
pop
loope
ror
mov
mov
fwait
inc
xor
stc
mov
cmc
pop
dec
test
imull
mov
add
sub
cwtl
cltd
adc
hlt
ret
add
jecxz
cmp
mov
dec
jns
pcmpgtb
cmp
in
js
ds
cmpsl
dec
call
push
and
adc
call
push
pusha
jmp
xchg
pushl
adc
or
cmpsl
bndstx
jne
scas
xor
inc
jle
mov
stos
ss
adc
sub
adcl
pop
dec
jnp
push
cli
ss
jae
ljmp
mov
add
push
mov
popa
flds
enter
sqrtps
out
lahf
sbb
icebp
cmp
or
dec
jecxz
test
mov
in
push
inc
sbb
fsubrl
cltd
movsb
inc
lcall
adc
jg
sbb
mov
adcb
outsl
cmp
fldt
jb
xchg
jmp
or
mov
call
or
mov
int
lea
cwtl
leave
xchg
cmp
and
pop
pop
or
loope
loop
fwait
lods
add
mov
fldenv
mov
jle
lret
fistl
test
test
add
aad
lcall
cmpsb
cmpsb
inc
lret
es
std
or
sbb
test
int
daa
mov
sbb
int
push
fildl
neg
jl
icebp
in
je
mov
fildl
movsl
outsl
xlat
inc
adc
stos
xchg
aaa
cltd
xchg
pop
das
ffree
and
sub
idivb
add
popf
je
fs
push
or
stc
dec
nop
cltd
xor
fxch
adcb
out
add
pop
inc
mov
lock
test
dec
xchg
mov
or
xor
scas
data16
aaa
mov
jae
add
lea
lds
stc
cwtl
gs
xchg
push
aaa
in
pop
pushf
pop
mov
adc
pop
icebp
or
mov
iret
mov
aam
cltd
fdivl
cmpsb
cmp
dec
lods
mov
mov
mov
loop
out
pusha
imul
jmp
pop
scas
mov
enter
out
repz
xor
xchg
ja
adc
mov
test
ja
jo
in
fiadds
addb
cs
sbb
inc
jmp
add
cmp
push
imul
cmp
fstl
add
inc
out
push
clc
sub
xor
mov
lret
sub
scas
pop
out
arpl
movl
pop
int3
imul
lods
sub
loope
inc
sub
mov
sub
push
out
ljmp
or
lea
cmp
xor
mov
cmp
insl
sahf
jmp
or
xchg
pop
add
cmp
out
xchg
out
loope
inc
xchg
icebp
push
mov
ret
mov
or
fs
in
lret
jg
xor
mov
push
xchg
pop
popf
add
jo
push
ret
jbe
int3
inc
leave
jae
loop
and
push
cmpsl
mov
in
test
and
data16
xchg
test
test
add
xor
cmpsl
mov
sarb
out
pop
sbbl
mov
cld
jbe
cmp
jmp
cmp
mov
outsb
repnz
pop
shll
inc
and
mov
mov
jl
cli
arpl
add
nop
addb
pop
push
add
dec
in
mov
ret
ja
sbbl
fwait
sbb
js
test
or
mov
aad
mov
cld
into
mov
leave
insb
fnstenv
push
mov
inc
mov
dec
pop
xchg
aad
incb
cltd
pop
inc
mov
call
loopne
dec
mov
mov
sbbl
xchg
mov
aad
out
in
jns
dec
int3
mov
and
test
jl
loopne
sahf
add
push
cmpsb
sub
fdiv
jae
adcb
and
cmp
cmpsb
orl
cmp
sub
in
imul
lcall
inc
cli
js
jno,pt
in
mov
mov
ss
jle
cmp
fcompl
mov
ja
in
pop
mov
adc
outsb
aaa
xchg
mov
inc
roll
cmp
sbb
out
ret
std
int3
popa
es
insb
lret
jno
movsl
inc
xchg
stos
jge
pop
adc
cltd
inc
addr16
stc
push
pop
sbb
mov
mov
sub
cmp
aas
mov
and
xor
xchg
dec
notb
fidivs
jae
loope
arpl
push
pop
es
add
out
jge
dec
ret
adc
insb
xor
movsb
inc
mov
ja
lds
outsl
es
repnz
test
hlt
sti
ss
stos
xor
mulb
push
sbb
xchg
mov
lds
shrl
dec
xchg
pop
sbb
ret
mov
popf
mov
push
add
daa
adc
jo
scas
add
sbb
pushf
test
bound
mov
mov
xchg
out
fdivl
push
or
imul
idivb
push
inc
adcb
push
cs
cs
ss
setp
fsubs
and
pop
pop
mov
inc
loope
push
addr16
jp
push
jns
test
lret
loope
scas
adc
sbb
je
shl
jne
inc
lods
idivb
pop
ret
and
mov
mov
in
lds
pusha
mov
xor
lods
lods
ror
or
jo
sbbl
shr
xor
mov
stos
fmull
inc
add
lock
sub
scas
mov
int3
push
xchg
add
subb
cltd
dec
out
sub
or
mov
mov
pushf
jmp
rcll
inc
fninit
cmp
cmp
mov
iret
rcrb
incl
xor
icebp
icebp
not
mov
mov
or
push
aaa
and
iret
mov
outsb
sbb
add
xor
addr16
dec
push
push
mov
sub
scas
ret
arpl
divb
sub
lret
cmp
cwtl
out
outsb
sub
jge
fsubrs
pop
mov
adc
inc
mov
cmp
push
insb
inc
stos
aam
adc
cmp
dec
sbb
aaa
loopne
sub
push
pop
fstcw
in
sub
shll
scas
test
cmp
mov
sub
push
pop
aad
jp
mov
jnp
mov
mov
fwait
or
lea
into
cmpsb
cmp
jecxz
outsb
mov
out
pop
xor
adc
jnp
cmp
inc
cmpsb
jg
mov
jnp
loope
pop
xchg
pop
scas
loop
call
mov
pop
dec
addb
je
daa
lock
fsts
insl
mov
daa
push
dec
rol
rol
mov
roll
inc
int
xchg
xchg
jp
xchg
mov
mov
sbb
gs
fmuls
dec
jae
rep
clc
mov
cmp
pop
sub
fwait
push
xor
scas
jae
test
or
xlat
mov
add
stos
mov
sbb
add
arpl
xor
cmpsl
mov
imul
xchg
jns
int3
jle
sbb
push
fisubl
test
ja
sbb
mov
jl
jb
rolb
or
sub
out
adc
je
lock
repz
or
push
jg
xchg
inc
mov
push
sti
mov
cltd
aad
clc
rorl
jne
pushf
std
cmpb
inc
in
std
lret
test
push
mov
sub
jecxz
int3
push
outsl
jl
mov
mov
mov
mov
dec
iret
out
outsb
inc
jg
rcrl
push
mov
bound
sub
ljmp
xor
xchg
adc
rcrl
xchg
cmp
ficoms
jl
xchg
ds
out
in
and
push
repz
hlt
inc
xchg
shr
loope
add
sbb
or
loop
mov
cmpsb
arpl
xor
lret
mov
daa
sbb
sbb
push
mov
sbb
lret
pop
add
cmc
xor
ja
addl
mov
sbb
cmpsb
cmp
cs
and
ret
jo
cmc
dec
or
dec
mov
cmp
sti
add
mov
sbb
outsb
push
jne
hlt
sbb
cmp
mov
inc
hlt
sahf
mov
out
add
dec
jle
dec
mov
push
ficoms
adc
jmp
push
outsl
rcrb
lret
push
call
sub
aas
cmpsl
popf
repz
sbb
cmp
add
xor
mov
scas
xor
mov
lfs
mov
mov
jmp
sbb
js
js
xorl
xchg
js
inc
mov
add
mov
xchg
mov
mov
adc
xor
fs
loop
xor
xchg
cs
or
mov
cli
imul
insb
cmp
adc
fs
mov
into
xor
cmp
jb
aas
fidivl
std
int3
movaps
xchg
mov
js
mov
and
ret
xor
push
dec
fs
push
clc
shrl
out
xchg
rclb
mov
nop
dec
je
out
mov
mov
enter
adc
dec
pop
and
in
mov
stc
add
cmp
test
into
mov
inc
sub
mov
shr
leave
insb
aam
pusha
mov
cmp
jns
mov
xchg
repz
jo
push
adc
mov
fsubp
inc
iret
sbb
or
push
mov
stc
pop
jmp
cmpsb
xchg
mov
pop
aaa
push
xchg
or
mov
fwait
cmp
jle
icebp
or
sub
ss
mov
push
and
imul
mov
insl
and
or
and
imul
scas
inc
test
cwtl
push
sub
xchg
adc
adc
stos
jbe
inc
jne
jl
xor
lods
xor
lret
push
sahf
pandn
push
push
fwait
jne
out
fwait
and
dec
jae
or
hlt
jb
push
stos
out
jo
jne
pop
sub
into
fbstp
mov
jge
xor
mov
sub
test
jle
imul
testl
adc
cmc
pop
inc
enter
pop
call
add
mov
int
add
or
cmp
test
pusha
je
pusha
sbb
incl
fnsave
outsl
push
and
dec
or
push
std
loope
push
push
xchg
inc
cmp
pop
mov
out
sub
fcmovbe
insl
push
ja
cmpsb
in
out
in
sbb
sbb
mov
jecxz
cs
adc
mov
and
fimuls
mov
lds
mov
xchg
sub
inc
loope
sbb
fsubl
cmpsb
mov
cli
push
mov
pop
mov
rcrl
dec
addb
dec
pop
inc
dec
or
lcall
mov
push
ror
mov
xor
pop
js
jle
mov
test
sub
int
sub
jnp
mov
loopne
ret
mov
jbe
xchg
data16
jle
push
jecxz
addl
lcall
repz
or
fcmovb
data16
mov
mov
mov
std
imul
pop
mov
cs
sub
mov
push
xor
add
dec
push
mov
lds
incl
push
inc
cmpsl
je
cld
jl
outsl
call
push
pop
flds
adc
lahf
lret
or
pop
mov
ss
popl
or
jns
jge
xor
aad
dec
sub
or
sbb
xlat
mov
sbb
mov
mov
mov
jne
sub
mov
jno
sub
rolb
mulb
push
shlb
mov
pop
fsubs
push
jge
hlt
das
pop
mov
sahf
or
dec
jge
std
sar
adc
pop
xor
mov
or
dec
ljmp
adc
imul
aaa
dec
addr16
test
les
push
push
fucomp
roll
push
out
pop
or
cmp
inc
mov
rcrl
pop
fs
dec
ror
jo
xchg
fsubs
sbb
lock
and
mov
jns
addb
sbb
lret
cmpsb
mov
add
xchg
adc
shlb
mov
pop
fcmovnb
push
xchg
sahf
rcr
mov
mulb
stos
outsl
adc
jo
idivb
lods
dec
add
push
call
fldl
mov
cmc
dec
or
int
cmp
jecxz
and
xor
pop
lret
dec
aas
cmpsb
popf
dec
mov
fldcw
clc
test
ja
push
sti
test
pop
dec
push
and
mov
shlb
dec
xchg
imul
inc
push
mov
aas
bound
addl
dec
add
add
mov
stos
inc
sub
xlat
pop
test
xchg
icebp
mov
or
jl
popa
and
mov
cmpsl
xor
idivl
add
fs
ja
test
push
pop
hlt
or
xor
test
inc
pop
xchg
adc
push
mov
enter
jns
sub
int3
inc
inc
add
sub
rorl
or
inc
aam
mov
xchg
add
jg
imul
jne
cwtl
in
outsb
pop
adc
or
mov
shlb
data16
inc
ds
shrb
shrl
repnz
mov
lods
sub
int3
rcl
popa
pop
and
and
into
daa
adc
mov
das
pop
aas
xchg
jg
mov
test
xor
pop
sbbb
mov
adc
xchg
mov
mov
or
out
psllw
fists
or
and
cltd
pop
or
lods
das
cmp
add
pop
scas
js
ret
mov
cmp
lock
aas
pop
aas
pop
js
movsb
loop
xor
std
xchg
stc
iret
mov
insl
sub
sahf
sbb
and
inc
sub
addb
or
sub
mov
or
cmp
mov
pop
out
fcomps
jg
sub
inc
shll
and
and
push
push
mov
in
ds
ja
nop
sbb
fistps
movsl
sahf
jno
mov
fmull
xor
jb
int
clc
test
cltd
push
loopne
pop
leave
mov
pop
or
test
cmpsl
les
lods
and
sbb
cwtl
cltd
orb
inc
lods
stos
add
scas
fiaddl
cld
pop
mov
mov
or
lret
push
and
repnz
mov
dec
pop
lds
push
mov
dec
mov
xor
loopne
bound
in
clc
pop
pop
in
rolb
and
insb
rcl
sub
loop
fcmovu
cmc
sub
mov
xchg
arpl
int
outsl
sub
mov
cmp
xor
mov
xlat
cmp
dec
roll
cmp
push
test
or
and
inc
mov
jge
xor
repz
aad
adcl
adc
outsl
sub
mov
pop
jo
gs
dec
adc
out
test
ret
add
xor
out
aam
mov
dec
pop
xchg
jmp
aad
nop
inc
sbb
insl
imul
aam
stos
das
enter
jmp
fiaddl
add
xchg
sub
fwait
mov
xchg
pop
pop
imul
inc
xchg
xorb
mov
repz
add
sub
je
push
cmp
das
in
and
jmp
pop
filds
scas
jecxz
xor
cmp
inc
lret
pop
push
hlt
mov
dec
enter
mov
cli
scas
inc
jp
xchg
cwtl
push
xor
mov
and
and
bound
out
jp
shll
cmp
push
imul
daa
loop
push
inc
ret
pop
imul
je
xor
aad
push
pop
xor
dec
nop
pop
outsl
repnz
outsb
shll
push
in
xlat
jae
dec
xchg
dec
enter
pop
mov
or
xlat
push
mov
fs
mov
jns
or
dec
xor
hlt
sub
inc
in
mov
push
xchg
out
fwait
xchg
mov
sub
xlat
xor
test
push
or
sub
fmuls
adc
scas
das
aaa
dec
sub
je
or
adc
xchg
stos
push
pop
aad
test
in
mov
int
mov
outsb
cmc
xchg
lret
rcrl
mov
push
pop
in
pop
and
jmp
out
loopne
sarl
loopne
js
shr
pop
dec
movsl
cmpsl
dec
pop
and
sub
mov
out
sbb
lretw
lock
push
into
daa
pop
mov
inc
push
or
inc
ret
push
sbb
cmpb
push
or
out
addr16
loope
lcall
popa
lds
ret
xchg
dec
mov
push
dec
negl
mov
sti
and
lret
mov
jae
mov
push
bound
pop
rorb
jmp
out
mov
lea
scas
push
inc
lret
cmpl
cmp
js
mov
cmp
imull
int3
inc
xor
xchg
outsb
mov
int
lret
inc
sbb
jge
xor
xor
cld
mov
sbb
int
movsl
movsl
ficompl
test
or
mov
fldt
cld
insl
mov
lea
movsb
mov
out
shrb
lret
push
inc
js
jb
jnp
ja
ja
xchg
add
jb
fs
rorl
inc
insl
hlt
or
or
mov
movsl
mov
pop
sub
add
ficoml
and
insb
sbb
pop
outsb
xchg
lahf
call
rcl
sbb
in
and
and
adc
push
push
jo
mov
into
out
jnp
xlat
lds
mov
std
in
jns
mov
inc
fsub
dec
cmp
fildl
push
jl
dec
push
pushf
cmp
imul
dec
lret
sub
mov
insl
mov
mov
sti
call
pop
ljmp
add
dec
inc
lcall
cmpb
push
imul
dec
inc
leave
cmpsl
mov
mov
js
inc
cld
dec
xor
mov
aam
xor
cmp
data16
popa
push
pop
clc
repnz
xor
in
sbb
in
aad
cwtl
push
push
out
mov
ljmp
mov
stos
sbb
mov
mov
scas
cmp
xorl
in
rorl
mov
jbe
call
jns
inc
xor
lods
out
mov
sbb
sub
loop
int
adc
pause
rcll
pop
clc
jmp
loopne
cltd
aad
pop
jmp
pop
xor
data16
dec
mov
loop
fdivrs
scas
jle
out
fcomps
divl
test
inc
or
add
jle
xor
popf
mov
pop
sub
out
and
scas
rorb
mov
pop
mov
push
or
loopne
adc
js
and
jge
dec
inc
and
js
or
sbb
lret
dec
cmpb
xor
add
enter
es
filds
mov
mov
add
into
imul
or
push
xor
test
pop
inc
test
aad
je
and
or
hlt
lock
mov
test
xor
jmp
mov
loopne
push
and
test
ret
dec
js
push
inc
ret
iret
pusha
in
push
cmc
rorl
or
bound
in
mov
add
cmp
lea
xor
shrb
pop
pop
cltd
push
lcall
jle
js
add
lods
jg
fld
out
lcall
ljmp
add
jb
stos
shrl
cmp
xchg
xchg
test
xchg
push
sub
mov
into
cmp
xchg
mov
push
pop
xor
mov
cmp
add
div
insb
mov
lahf
mov
popa
inc
aaa
movsb
mov
hlt
mov
sbbw
cld
jp
in
nop
sub
ss
adc
jno
jmp
and
faddl
aaa
push
mov
lods
adc
mov
sbb
mov
cld
pop
dec
cs
add
inc
sarb
dec
fmulp
and
mov
test
xlat
enter
aad
xchg
pop
push
hlt
leave
clc
mov
sub
pop
aad
xchg
pop
in
fisubs
jg
mov
rcrb
mov
cmpsl
xchg
pop
xchg
push
dec
test
scas
jl
and
pop
sbb
bound
aad
mov
les
lcall
fwait
pop
jo
lock
xchg
jecxz
xor
jmp
lods
scas
mov
test
or
dec
dec
jmp
push
rcr
dec
jo
and
shrl
ljmp
dec
cmpsb
decl
loop
sbb
imul
xor
mov
ret
inc
imul
push
ja
mov
lods
lock
xchg
mov
mov
bound
fdivl
inc
mov
mov
mov
xor
sarb
les
dec
cld
sub
pop
and
ja
in
sub
inc
fstpl
xor
lret
ss
push
mov
pop
pop
cli
scas
aad
jae
loop
sub
rcrb
pop
rcrl
loop
xchg
dec
mov
xor
jle
xchg
imul
pop
ret
mov
shlb
xchg
jecxz
xchg
ljmp
and
pop
xor
inc
inc
push
xchg
inc
xchg
xor
ja
push
shr
inc
loopne
sbb
loope
adc
jae
push
sbb
add
leave
fs
cmc
inc
fnstcw
hlt
lock
jg
mov
lahf
xor
test
sbb
jo
mov
orl
call
and
into
out
xor
bnd
add
mov
adc
inc
das
xchg
xor
loopne
xor
lahf
pop
xor
imul
aad
movl
pop
enter
push
cltd
inc
inc
mov
sub
loope
mov
push
mov
xor
aam
and
call
imul
mov
dec
push
sbb
ror
lea
fsubp
subb
mov
leave
data16
fwait
clc
pop
sub
scas
notb
inc
movsl
fdivr
mov
hlt
repnz
adc
sahf
clc
hlt
mov
xor
xchg
inc
pop
repnz
pushl
sub
xchg
pop
mov
scas
insl
lea
mov
mov
or
jnp
jae
roll
sbb
jle
jb
aaa
inc
outsl
dec
adc
sbb
sub
aas
mov
test
mov
push
movsb
or
push
std
clc
movsl
jmp
sbb
mov
push
ret
sbb
dec
pop
jbe
movsl
mov
iret
jle
cwtl
sub
push
in
arpl
jbe
addr16
mov
movb
fcoml
stos
jno
pop
inc
push
into
cmp
int
or
push
stc
lahf
out
xor
ds
cmp
sbb
inc
jl
in
lcall
lods
sbb
in
shll
rorb
pop
out
pop
dec
dec
aad
adc
dec
call
icebp
frstor
aad
xlat
or
xchg
jns
lea
cmpsb
push
lret
pop
ljmp
sbb
jo
and
dec
cltd
mov
mov
adc
cmp
mov
sbb
popw
stc
test
clc
and
loopne
lcall
push
fsubl
or
leave
mov
popa
jle
roll
imul
jge
xor
enter
ss
pop
cld
mov
into
jno
mov
insb
sub
and
mov
pop
inc
test
rolb
pop
jb
push
scas
cs
ss
scas
sbb
add
sbb
in
nop
pop
xchg
daa
pushf
add
push
sub
push
lcall
pop
lea
pop
mov
nop
jecxz
mov
aam
cmp
xor
mov
shlb
xchg
call
faddl
or
les
jmp
jp
jmp
cmp
mov
inc
cmc
or
add
test
push
repz
xchg
ret
call
cwtl
jmp
mov
sbb
fmull
adc
sbb
aas
inc
popf
mov
push
lcall
push
adc
or
jge
mov
stos
fldenv
pop
add
add
pushf
sub
nop
fiadds
js
sub
adc
sbb
loop
xchg
outsl
cli
mov
or
adc
adc
outsb
cli
repz
cmp
inc
outsl
out
imul
cli
adc
ret
out
dec
pop
jge
lds
dec
dec
inc
jg
mov
adc
inc
bound
fmul
lock
sahf
adc
jne
fidivrs
in
xchg
div
decb
inc
pop
adc
or
fists
cld
pop
mov
pop
sbb
fs
push
into
xchg
fcmovu
xlat
sbb
or
dec
or
dec
aaa
mov
lods
cmpsb
xlat
mov
xchg
sbb
add
shlb
jg
clc
pop
mov
pushf
inc
pop
ss
pop
pop
test
insb
mov
jmp
ljmp
pushf
or
mov
pop
leave
das
sub
pop
or
arpl
test
push
mov
roll
mov
cld
icebp
pop
pop
nop
xor
bound
jmp
xchg
cmpsl
pop
push
push
pop
mov
or
arpl
jae
pop
pop
add
sahf
test
inc
mov
sbb
dec
pop
lcall
pop
mov
inc
add
in
incl
cwtl
mov
add
inc
xchg
or
orb
xor
movl
and
pushf
fiadds
cmpsl
dec
push
bound
sbb
lods
repz
imul
xor
pop
and
in
call
mov
add
add
sbb
test
xchg
fcmove
xor
stos
aaa
mov
enter
mov
loopne
arpl
adc
sarb
cmp
fwait
cwtl
lods
dec
sub
jle
push
and
mov
cmpsb
push
inc
mov
data16
mov
dec
pop
mov
and
stos
nop
paddq
sarb
sahf
outsb
sbb
pop
fs
test
dec
insl
sub
jp
jmp
sub
xchg
stos
cmp
mov
insl
inc
popa
stc
mov
pusha
mov
mov
mov
jle
add
mov
xor
add
cmp
jbe
es
cli
cld
inc
test
mov
mov
inc
mov
pop
cmpsb
xor
popa
pop
ds
sti
lods
dec
in
inc
xchg
xchg
lahf
add
sbb
insl
sbb
arpl
xchg
adcb
xchg
scas
cmp
rorb
fs
lods
inc
aaa
or
jmp
ljmp
inc
gs
std
mov
addr16
dec
inc
mov
daa
fwait
mov
in
dec
jb
cmp
push
cmp
andl
les
xchg
and
shl
mov
out
dec
nop
dec
push
out
inc
push
dec
push
inc
dec
mov
jb
push
cmp
iret
gs
insb
jo
fisubrl
shll
jge
in
pop
das
mov
pop
jno
ss
cld
jge
lcall
rolb
ds
andps
ja
mov
test
push
in
aad
mov
mov
stos
lret
shll
cmpsb
add
jl
mov
mov
js
psubw
sbb
icebp
ret
push
mov
je
mov
xor
lcall
hlt
pop
jo
hlt
pop
dec
in
scas
jno
mov
ljmp
sub
xchg
xor
in
add
loopne
gs
pushf
jb
nop
jg
roll
xor
fdivs
and
push
mov
fisubrl
pop
add
cmp
mov
mov
mov
push
sbb
push
and
das
cmpsb
xchg
cmc
gs
cmp
add
arpl
dec
shl
mov
push
mov
lret
popa
jo
mov
stos
lds
jecxz
add
dec
and
sub
sub
les
ret
fcmovnb
inc
into
sbb
insb
adc
nop
mov
lcall
sti
stos
dec
pop
out
jl
movsb
sub
sub
cmpsb
mov
jno
push
add
loope
mov
xchg
dec
jno
mov
xchg
mov
test
sub
aad
push
inc
jns
sub
sub
mov
das
push
addb
pop
pop
lods
repz
jo
call
xorb
inc
mov
sbbl
xchg
mov
xor
jle
xlat
pop
mov
and
les
push
fisubl
popa
cmp
pop
imul
add
into
inc
in
fcmovnb
fs
scas
jle,pt
cmp
xor
adc
xchg
xor
andl
push
jp
sbb
aaa
mov
and
pop
mov
add
jnp
sahf
jnp
pop
xchg
cwtl
mov
adc
xchg
inc
test
xor
adc
adc
pushf
lods
out
addr16
push
loop
int3
lret
ret
sub
cmp
xchg
loopne
into
or
ja
jns
ja
xor
jle
add
xor
jl
sub
sbb
dec
xchg
cmp
fdivrs
add
add
mov
and
sub
addb
aad
or
pop
sbb
imul
add
movsl
pusha
pop
gs
js
push
daa
lock
add
inc
into
adcb
scas
or
cmp
mov
mov
into
ret
jecxz
add
push
adc
mov
mov
hlt
inc
out
dec
inc
aam
mov
dec
outsb
popf
imul
push
dec
sub
fcoml
cmp
cmp
mov
xor
mov
das
loopne
sub
hlt
jecxz
lea
or
ljmp
sub
xor
xor
push
out
lods
daa
pop
insl
sarb
mov
mov
cmp
and
dec
mov
jbe
aad
lret
pop
sar
out
cmp
aas
mov
inc
or
lea
mov
mov
push
jmp
es
sahf
xchg
and
inc
xor
neg
cwtl
mov
arpl
mov
xchg
jae
pop
pushaw
rcr
cmp
lds
mov
lock
daa
lods
scas
jno
push
xchg
dec
cld
out
jne
dec
das
adc
mov
cmp
xchg
ljmp
pop
and
lds
sbb
xor
pop
outsl
dec
cli
xor
cmp
push
leave
pop
into
ljmp
enter
lea
pop
sbb
dec
push
jecxz
jg
imul
adc
cmp
jecxz
popa
or
lahf
jmp
mov
out
gs
lahf
jmp
xchg
cwtl
xchg
or
jmp
pop
pop
call
lds
add
outsb
mov
jbe
xlat
dec
jmp
cmpsl
jge
inc
mov
mov
mov
jb
jnp
jns
xchg
ljmp
ret
adc
sbbl
push
insb
or
mov
jmp
sbb
and
int3
jnp
mov
push
xchg
push
dec
inc
fadds
jbe
sbb
cmp
mov
xchg
data16
ljmp
ds
insl
cmp
add
lock
and
out
add
adc
fcmovne
jle
ret
inc
dec
xlat
pop
sti
lcall
lcall
pop
fbld
pop
add
push
mov
insl
mov
out
xchg
movsb
cmp
das
mov
xchg
sub
add
mov
mov
fisttpll
inc
fisubs
xchg
scas
mov
repz
add
ret
cltd
je
rol
push
mov
rcrb
dec
mov
xlat
clc
inc
jmp
mov
adc
cmc
imul
js
divb
mov
lret
mov
mov
mov
push
adc
dec
imul
std
or
xchg
jno
idivl
jmp
pop
mov
lcall
jmp
test
inc
sbb
jle
or
inc
cmc
std
push
cwtl
es
mov
ret
mov
sbb
repnz
repz
lcall
jnp
push
in
fadds
loop
cli
mov
lret
push
shrl
sbb
xchg
rep
mov
mov
fisttpl
mov
arpl
and
mov
and
xchg
xchg
mov
or
test
jg
aam
call
fldenv
lret
lods
inc
push
mov
int
int
jecxz
xchg
pop
pop
xchg
sub
inc
mov
jmp
sbbb
bnd
jg
pop
stos
cmp
adc
lret
or
xchg
loopne
stos
dec
fisubrl
shll
sub
repz
or
imul
xchg
pop
divl
pop
popf
or
ds
jo
lods
sbb
outsb
lahf
jle
mov
popa
std
adc
xor
stc
push
push
dec
xor
mov
xchg
repz
daa
test
pop
rorl
push
xor
sub
mov
push
and
loopne
cmp
cmpl
fbstp
push
das
add
std
mov
adc
ret
lea
lods
pop
mov
addr16
and
shll
es
or
mov
dec
sub
pushf
bound
daa
jns
aam
aas
pop
fucomp
sub
cld
inc
xor
cmp
mull
outsl
add
sahf
pop
cmp
aas
shrl
push
sub
mov
or
push
dec
xor
mov
xor
jb
mov
les
add
test
xchg
jl
movsb
lods
pop
push
out
ds
fs
es
and
push
fldcw
int3
rol
shll
in
sbb
jno
xor
loope
sti
std
stos
out
les
mov
pop
pusha
movsb
jnp
xlat
jge
pop
ret
adc
daa
dec
clc
sbb
and
cmp
iret
repz
movsb
daa
push
sub
cmp
xchg
out
and
adc
lfs
jnp
sub
inc
xlat
es
mov
sbb
mov
rcrl
scas
aas
xchg
sbb
jno
cmp
dec
dec
int3
dec
mov
push
inc
mov
push
push
pushf
and
add
ss
aaa
xchg
xchg
iret
fstpl
outsl
mov
mov
add
inc
push
push
jb
jg
cmp
cmpsb
hlt
test
repnz
pusha
cmc
aaa
cmp
add
or
hlt
pop
ficompl
xor
adc
mov
or
jmp
xchg
inc
imul
mov
mov
dec
jg
out
addr16
push
mov
jo
or
add
scas
mov
mov
mov
or
mov
sbb
jbe
stc
or
mov
or
push
enter
scas
imul
test
inc
insb
and
rclb
cmp
gs
sub
xor
and
jmp
cs
and
cmpl
stc
xchg
cmp
push
mov
cli
in
pushf
jo
outsb
and
lods
mov
pop
imul
mov
adc
pop
or
arpl
popf
ret
aaa
negl
fs
pop
je
cli
mov
test
and
enter
jo
dec
movsb
jbe
add
cmp
xor
rcrb
xor
es
cmpsl
divl
adc
out
mov
inc
int
push
jmp
imul
push
jmp
cmpsl
and
or
gs
mov
lock
dec
and
aas
daa
es
scas
sbb
jle
xchg
pop
es
stc
jb
mov
pop
gs
inc
ljmp
out
scas
subb
and
fidivs
mov
sbb
fildll
xor
push
dec
popa
lods
jnp
push
test
mov
xor
iret
sub
cmp
out
jb
lods
sbb
jbe
jle
gs
das
mov
imul
and
bound
pop
daa
movsb
jo
jnp
inc
jle
scas
sub
push
cmpb
jbe
shr
mov
mov
loopne
les
mov
push
mov
daa
in
loopne
dec
add
mov
test
sub
rclb
test
pop
pop
xlat
pop
mov
out
shl
bound
xchg
iret
pop
xor
pop
jl
add
mov
inc
lds
stos
iret
in
inc
dec
mov
xor
test
cli
lret
cmp
nop
fisttpll
rolb
mov
inc
cltd
mov
or
daa
push
out
and
pop
mov
testl
and
inc
jmp
fists
cmp
mov
rcl
les
sbb
outsb
dec
sahf
sbb
mov
fiadds
push
xor
and
add
sbb
jp
int3
lret
jo
aam
iret
ja
loop
pop
cs
xor
mov
dec
sub
add
or
dec
or
loopne
loopnew
out
test
mov
mov
xchg
lret
add
mov
int3
sahf
dec
enter
jecxz
clc
mov
daa
daa
xchg
pusha
gs
mov
xchg
jl
push
lock
mov
movsb
or
out
ss
movsl
lods
and
imul
dec
test
cltd
out
lcall
inc
cmc
jp
jle
into
and
ficoml
sbb
scas
inc
fs
nop
imul
xor
mov
jne
roll
cmp
outsb
adc
push
rcl
frstor
jle
inc
mov
inc
ljmp
push
xorl
mov
aas
fcompl
cltd
jecxz
aad
jge
adc
jae
pusha
in
leave
xor
loope
gs
mov
sti
cmpb
mov
lea
xorl
dec
dec
test
sub
mov
and
outsl
jecxz
mov
mov
jo
inc
andps
cmpsb
stc
sbb
in
mov
je
add
imul
inc
cmp
sar
aam
ret
xor
jg
addr16
mov
add
subb
stc
out
rcrb
iret
cld
mov
shl
repz
cmpsb
sub
in
clc
cmp
repz
lods
jg
call
mov
push
scas
out
jae
xor
sti
xchg
cmc
inc
outsl
push
loope
or
daa
je
cli
ficoml
call
mov
add
popf
inc
jae
mov
and
push
pop
jle
scas
es
cmpsb
movsl
cmp
aam
add
lahf
inc
push
lods
lods
orl
jmp
int3
xchg
pop
lods
movsb
sbb
fcompl
pop
mov
arpl
in
pop
pop
test
cmp
mov
jae
jb
mov
jge
sahf
les
push
repz
popa
repz
dec
adc
dec
adc
in
pop
dec
stos
movb
js
pop
and
sub
cli
add
lods
int3
cmp
int3
ror
push
outsb
adc
outsb
mov
adc
mov
sbb
outsl
addr16
pusha
out
xlat
in
imul
icebp
sbb
insb
pop
add
mov
mov
or
jle
push
jne
loopne
cmpsb
push
les
mov
sbb
jp
stos
inc
adc
mov
aaa
test
pop
js
mov
into
and
push
dec
in
in
mov
into
or
sub
jnp
inc
adcb
rclb
mov
in
in
jmp
jne
mov
flds
pusha
cmpl
inc
movsb
lcall
dec
and
fs
inc
popl
push
mov
aad
mov
push
sbb
mov
lea
shrb
clc
dec
fisubrs
jecxz
lds
sti
push
inc
aas
out
jae
repz
enter
lea
or
dec
call
in
pop
gs
xlat
fisubs
add
add
scas
add
movsb
push
clc
dec
repnz
test
sbb
rcll
sbb
add
dec
mov
xor
inc
push
mov
and
mov
sbb
xchg
rol
cld
cmp
mov
loopew
inc
scas
push
dec
and
adc
hlt
cltd
scas
idivl
dec
push
lret
sub
out
jns
aas
pop
add
das
push
jge
xchg
mov
jmp
adc
lret
xor
js
fiaddl
jp
aas
cmpsb
in
or
lock
aad
sub
call
arpl
xchg
mov
lcall
pop
mov
mov
les
mov
cld
cmp
or
int
popa
int3
jp
cmp
iret
sarl
xchg
mov
cmc
adc
adc
int
sub
sbb
pop
push
and
cmp
mov
push
in
repz
std
pop
mov
shrb
xchg
aam
fcmovu
push
into
pop
xchg
shll
push
mov
or
shrb
or
outsb
addr16
jmp
xor
xchg
lea
xchg
inc
imul
adc
ja
leave
shrb
loopne
and
roll
inc
imul
lahf
loope
jns
mov
stos
lods
dec
test
jmp
sbb
aam
xor
jmp
daa
or
mov
mov
sbb
insb
or
push
xor
icebp
pop
dec
xchg
sub
push
push
ret
xor
gs
pusha
xchg
popa
cmc
cs
aam
out
int3
dec
test
cld
cmp
sub
push
fnstcw
xor
cmpsl
pusha
fnsave
mov
test
out
sub
jnp
dec
push
xor
pusha
cmc
pop
pop
loop
fs
frstor
push
outsb
inc
and
insl
cmp
sub
popa
xchg
mov
enter
pop
pop
inc
jo
pop
jbe
add
mov
shll
or
call
pop
insl
std
stos
out
push
scas
inc
push
mov
scas
dec
adc
leave
out
xchg
inc
mov
rolb
cmp
mov
add
call
pop
dec
jae
loopne
insb
stc
fidivrl
mov
daa
lcall
fidivrs
xchg
das
outsl
or
lahf
ss
xchg
push
lret
fcomp
mov
sbb
dec
sti
fs
stc
push
test
jb
icebp
jl
add
pop
mov
cmp
add
ficompl
mov
add
mov
addr16
out
mov
push
dec
movsb
shlb
std
cli
jbe
pop
cmp
lret
jg
mov
xchg
push
mov
xchg
subl
lods
jp
insl
nop
repnz
mov
sbb
jg
leave
mov
loopne
sbb
insl
loop
xor
cmp
das
ss
test
or
nop
leave
iret
mov
mov
sub
loope
adc
fs
push
mov
inc
jp
enter
dec
subb
or
pop
cmp
lods
mov
jmp
pop
pop
aam
cmp
rcl
cs
push
sbbl
fidivs
cwtl
push
das
dec
out
addb
jmp
fdivr
clc
bound
nop
out
lahf
sub
mov
icebp
or
mov
inc
fidivs
push
sub
out
movsl
daa
push
scas
test
iret
orb
shl
mov
inc
or
out
cld
dec
xchg
push
fs
xor
xor
aaa
data16
stos
dec
xor
pop
inc
inc
aad
rcl
pop
cmpsb
jnp
mov
mov
cmc
mov
fnstcw
pop
fidivrs
xchg
in
pusha
cmp
shlb
mov
jo
mov
or
jae
ss
xchg
gs
hlt
pusha
outsl
int
cmc
mulb
fwait
cmpsl
addl
ret
jecxz
imul
dec
or
jne
dec
sub
cmc
test
mov
stc
jp
cmp
out
call
xchg
enter
push
popa
ljmp
or
gs
es
jbe
clc
and
data16
cld
mov
jbe
jno
ss
xor
mov
aas
adc
jle
add
fwait
iret
pop
stos
push
jo
stos
decb
adc
sub
enter
js
test
test
int
mov
xor
mov
sarl
gs
jp
call
imul
and
mov
iret
scas
cmp
test
mov
lods
and
and
insb
out
out
aas
jno
pop
sub
adc
mov
fisttps
enter
hlt
stos
jecxz
jnp
push
mov
clc
adc
jae
pop
or
test
dec
push
xor
mov
cld
pusha
mov
lahf
or
inc
xchg
ljmp
cltd
clc
iret
mov
daa
jmp
ja
fwait
nop
jae
clc
popa
mov
in
mov
inc
jmp
adc
sti
in
fsubl
pop
lods
and
lret
jmp
scas
arpl
push
dec
mov
add
mov
jns
fdivrs
xchg
orb
call
jp
sahf
fidivrl
cmp
filds
lock
out
cmc
test
add
jbe
cmp
adc
aam
out
lods
sub
ljmp
inc
fisubs
pop
adc
scas
std
cmp
mov
mov
out
sub
xor
loope
ret
cmpsl
add
fadd
addr16
imul
outsl
xchg
inc
push
mov
dec
test
push
cmp
inc
leave
jbe
addb
mov
add
xchg
in
out
ss
stos
cli
lock
movsb
inc
outsl
es
cmp
mov
push
in
sub
movsb
cwtl
js
test
stos
icebp
mov
or
xchg
push
pusha
mov
enter
inc
js
roll
sbb
mov
adc
jo
imul
mov
adc
aad
sahf
dec
imul
pop
cmp
add
leave
sub
xor
jno
cmpsl
mov
and
dec
jnp
mov
dec
daa
repz
xor
inc
cmp
insl
lock
rolb
clc
das
or
push
enter
cltd
shll
pusha
mov
and
cli
sub
push
jecxz
fldcw
xor
testb
in
enter
pop
fwait
divb
in
lea
iret
or
mov
add
pop
pop
daa
in
jl
in
test
adc
out
insb
jecxz
cmovg
push
aad
jl
loopne
inc
dec
or
pop
call
shr
movsb
or
xor
out
jns
lcall
into
adc
mov
pop
scas
add
inc
test
clc
cmp
cmc
cmpsl
adcl
mov
pop
popf
or
js
das
inc
test
mov
add
mov
sarl
repz
push
imul
repz
ljmp
in
scas
mov
mov
popf
stos
aad
in
mov
inc
test
in
insb
sbb
pop
flds
push
lods
pop
mov
adc
xchg
mov
inc
or
pop
sbbl
cmp
hlt
cmp
xor
mov
testb
in
repz
lock
pop
stos
test
dec
test
mov
mov
add
sbb
xchg
repnz
in
add
out
int
and
jl
fwait
out
sub
test
mov
sbb
mov
add
sub
out
xchg
mov
jbe
mov
adc
jl
cli
xchg
out
inc
cmc
jg
xor
jg
sbb
scas
pop
movb
xchg
xor
mov
repz
or
xor
jp
in
pop
hlt
sbb
and
sub
pop
iret
and
test
lea
sbb
lret
and
aam
mov
cmp
pop
insb
jb
lds
pop
push
mov
mov
shll
sbb
sarl
pusha
mov
adc
add
jecxz
sub
and
cmp
adc
pushf
ror
pop
mov
mov
or
dec
sub
sub
shlb
cli
lret
cli
es
mov
jl
loope
inc
mov
fwait
arpl
inc
or
cmpsl
movsb
aaa
std
xor
repnz
lods
jne
mov
std
in
test
and
stc
pop
push
out
sub
sbb
pop
jnp
movsl
jmp
insb
std
push
cmp
push
adc
out
insb
outsl
fdivs
mov
push
fdivr
in
mov
int
xchg
aam
stos
xor
cmc
cs
movsb
cwtl
loope
mov
jecxz
jnp
lea
test
test
sahf
cmp
and
std
xchg
cmp
xchg
mov
in
mov
icebp
aas
cmp
outsb
dec
shll
xchg
imul
loopew
inc
enter
dec
add
mov
in
cmp
roll
add
adc
js
arpl
inc
dec
aad
cwtl
jne
inc
adc
test
and
xchg
cmp
mov
out
mov
addl
cs
mov
sub
mov
es
fwait
cli
scas
mov
dec
repz
xchg
xchg
cmc
stos
cmp
insl
and
aam
jmp
pop
adc
dec
sub
and
cmp
xorl
enter
fimuls
mov
cmp
movaps
aas
mov
sbb
rorb
imul
cltd
add
and
jg
pop
ljmp
mov
outsb
cmp
ret
cli
ret
push
pop
pop
in
and
jl
or
ret
mov
mov
sbb
jg
pop
jmp
adc
leave
jae
aam
shrb
enter
mov
cmp
inc
gs
mov
mov
pop
scas
int3
enter
pop
in
adc
and
cmp
jbe
mov
pop
xchg
adc
es
fcompl
clc
push
pop
mov
loopne
or
ja
fs
popf
ret
pop
mov
and
into
mov
loopne
mov
add
loop
cmp
out
inc
sub
xlat
ljmpw
shrl
adc
rorl
lahf
repz
jp
popa
push
or
pop
lock
mov
or
in
and
ret
cmp
mov
push
out
jbe
outsl
roll
xor
test
jae
clc
sbbl
aas
and
pop
pop
stos
loop
inc
dec
negl
mov
das
hlt
ret
dec
cmc
dec
pushl
inc
imul
ret
xor
daa
pop
and
mov
push
sub
sbb
lds
movsb
pop
sub
fucomi
xchg
pop
xlat
cmp
xchg
addr16
fcoms
fdivrl
pop
jl
or
pop
xor
mov
mov
out
inc
xchg
imul
mov
mov
insl
push
push
popa
imul
shl
pop
mov
in
faddl
inc
xor
mov
imul
std
adc
mulb
pop
add
adc
sahf
mov
popf
imul
es
adc
push
faddl
lret
mov
in
popf
cs
enter
sbb
std
fisttpl
xchg
sub
inc
dec
jne
adc
dec
xchg
aad
sub
cwtl
adc
dec
clc
mov
lcall
out
into
mov
cmp
sub
outsb
jb
insb
push
inc
push
popf
jecxz
jo
add
xchg
shr
clc
mov
xor
mov
xchg
jne
add
sahf
pop
pop
cmp
and
nop
fistps
movsb
aam
adc
imulb
scas
outsl
lret
xor
pop
xchg
dec
and
ds
pushl
sti
mov
or
into
add
sub
out
jo
add
xchg
mov
mov
cltd
add
dec
jle
or
xchg
jbe
lahf
push
int
js
or
mov
fildl
dec
arpl
sbb
clc
mov
loopne
mov
cli
rcr
mov
add
add
aas
std
mov
imul
mov
adc
dec
test
pushf
jmp
sbb
fld
outsl
pop
aam
shll
dec
iret
add
testb
xor
sub
out
popf
push
arpl
push
inc
sbb
sbb
jmp
cltd
shrb
and
inc
addr16
lcall
mov
mov
ret
cmp
jg
mov
arpl
mov
mov
mov
ja
andb
jno
mov
mov
push
stos
sbb
shlb
pop
outsl
inc
cmp
jle
xor
add
shr
sbb
lock
mov
lcall
jmp
movsb
fmull
push
mov
push
jecxz
scas
movsb
cmc
out
jo
lock
int3
xchg
xchg
das
pop
loope
fs
shl
and
bound
jp
cld
fidivrs
rorl
jne
fmul
mov
fucomi
ljmp
push
mov
pop
cmp
hlt
int
cs
pop
ret
lahf
xor
jmp
pushf
add
jne
rolb
xchg
sbb
xor
daa
std
lods
popa
aaa
xor
int3
jge
movsl
insl
add
inc
or
cmp
sbb
cld
mov
pop
mov
scas
push
sbb
add
push
test
jne
sub
ret
xor
mov
std
cltd
dec
add
cmp
or
mov
rolb
dec
popf
inc
push
mov
fidivrl
sub
icebp
fnstcw
cld
testb
xchg
pop
jne
xor
and
inc
or
and
mov
mov
xchg
fsubrl
mov
adc
jg
loop
jae
mov
cmpsl
push
iret
stos
jae
xchg
mov
mov
test
jmp
pop
jp
aaa
stos
mov
cmpsl
cli
icebp
in
data16
pop
in
out
test
fbld
movsb
dec
lret
pop
cmp
gs
cmpsb
cmp
pop
dec
mov
mov
pop
or
jge
adc
cltd
push
xor
xchg
sub
shlb
in
pushf
adc
js
and
jmp
or
jno
not
out
sub
sbb
push
add
cmp
repnz
mov
mov
or
pop
lcall
insl
sbb
jl
lcallw
movsb
jno
lods
mov
xor
sub
or
mov
movsb
cld
hlt
add
outsb
imul
fnstcw
xchg
imul
in
push
mov
idivb
pusha
outsl
stc
xchg
inc
std
fsubrp
popa
dec
xchg
mov
mov
fs
mov
out
cltd
ret
inc
jno
jp
sbb
inc
mov
fwait
xchg
shll
xchg
orl
inc
fwait
dec
xchg
xchg
push
daa
daa
loopne
dec
ret
pusha
lea
mov
into
dec
orb
push
daa
dec
addb
or
inc
pop
cmpsl
cltd
ss
outsb
push
shl
dec
sti
out
xor
xlat
aaa
inc
push
or
dec
dec
in
or
mov
jbe
popf
jae
inc
jmp
lods
xchg
loop
out
ret
ret
scas
xlat
aam
fildl
dec
arpl
pop
xlat
orl
in
daa
jmp
lds
bound
sbb
ffreep
push
jnp
hlt
stc
fdiv
and
cmpl
call
imul
mov
lods
test
out
inc
lds
xchg
arpl
push
std
fadd
jb
xor
les
imul
ss
add
mov
push
arpl
mov
adc
sub
fcmovnb
test
xor
sbb
ror
fcoms
into
push
aaa
data16
rorb
adc
jmp
ljmp
xchg
adc
sahf
add
imul
aad
dec
push
lods
fnstsw
adc
or
sbb
in
inc
mov
mov
inc
and
repz
daa
mov
gs
iret
dec
test
cmp
dec
and
ss
dec
jo
test
dec
ss
sbb
lock
xchg
mov
ret
dec
rclb
mov
sbb
mov
mov
bound
pushf
rolb
mov
subb
mov
les
fnstcw
mov
sbb
and
rol
inc
loop
test
subb
leave
fnstsw
inc
mov
cmp
adc
mov
mov
fisubs
mov
cmp
orb
mov
mov
sub
mov
stos
in
ljmp
in
movsl
push
xor
pop
dec
push
jnp
xchg
dec
mov
testb
xchg
mov
mov
mov
jo
or
mov
scas
xchg
shll
mov
and
mov
frstor
aas
andb
xor
adcl
cmp
cwtl
lock
mov
das
in
inc
and
sub
mov
test
sahf
fs
pop
fnstcw
dec
repz
jno
ret
repnz
pop
clc
fnstcw
lods
in
out
popf
rorb
xor
leave
sub
and
repnz
je
or
ljmp
xor
nop
pop
loop
decl
mov
shrb
js
and
mov
push
int3
or
jno
and
cmp
lret
xchg
mov
popaw
mov
mov
test
jmp
fidivrs
lds
out
out
dec
and
orl
enter
stos
imul
pop
mov
in
popa
sub
ds
and
rcrl
popa
fidivrs
jns
sub
cs
rcll
jbe
jo
mov
inc
mov
cmp
push
ret
mov
lds
lods
mov
int
movsb
xchg
loope
mov
call
xor
ret
sbb
pop
subl
mov
arpl
cmp
push
xor
cmp
repz
in
cmpsb
sub
lock
pop
popf
addr16
arpl
and
pop
push
test
fdivl
sub
scas
stos
in
frstor
sbb
mov
in
popf
mov
add
fs
dec
xchg
push
aad
fstps
jns
insl
and
or
in
mov
xchg
push
iret
xchg
lret
add
stc
lods
adc
into
sbb
lret
fnstcw
addr16
fstpl
addb
lcall
mov
insb
outsb
incl
bound
mov
subb
cmp
stc
mov
imul
pop
mov
flds
mov
push
sbb
cmp
xchg
dec
mov
sub
adc
mov
sbb
lret
leave
cmp
sub
mov
in
mov
int
xchg
mov
ret
mov
mov
lods
and
dec
inc
es
je
push
frstor
fnsave
and
add
pop
fsub
fldl
push
sub
jge
adc
inc
xchg
inc
xor
jnp
sub
mov
push
dec
add
cltd
and
cmp
jl
lea
je
and
icebp
stc
push
les
loopne
fdivrl
lahf
lods
pop
adc
mov
repz
sub
out
add
cwtl
xchg
lret
pusha
push
mov
or
int
add
out
pop
mov
fidivs
inc
lods
ficoml
out
insb
repnz
lds
or
xor
sbb
loope
jbe
adc
dec
mulb
xor
je
pop
and
out
ret
sahf
inc
mov
out
add
jnp
enter
sub
mov
outsb
or
enter
fadds
shlb
shll
sbb
jecxz
out
sti
roll
mov
adc
shlb
cld
adc
es
sub
sti
nop
call
out
add
mov
pop
insl
mov
xchg
dec
andb
data16
or
fcomps
mov
xchg
sbb
adc
jns
or
into
push
jnp
adc
inc
in
cli
sarl
out
fsubs
and
mov
add
or
test
mov
or
roll
xchg
xchg
mov
push
push
outsl
ret
lods
push
jle
push
jbe
sub
movsb
sub
es
sar
aaa
hlt
xchg
mov
mov
add
xor
or
mov
hlt
mov
jae
jbe
enter
stos
mov
mov
push
fs
nop
sbb
mov
lods
sbb
divl
stos
or
jecxz
shlb
lods
in
leave
sbb
and
inc
rcll
mov
pop
mov
lods
test
imul
sub
jns
jl
jl
push
push
and
and
mov
test
push
sbb
ljmp
xchg
jl
out
js
mov
call
pop
adc
jnp
leave
mov
int
inc
sar
mov
out
dec
jge
sbb
push
pop
faddl
jg
enter
popf
mov
movsb
sbb
std
mov
cmp
xchg
addr16
or
outsb
and
mov
loopne
fsubp
cld
add
pop
mov
outsb
cmp
cmpb
adc
or
mov
jg
xchg
pop
mov
push
mov
or
mov
cltd
shlb
sub
push
jmp
loope
mov
xchg
jg
pop
cltd
or
out
mov
js
pop
sahf
mov
das
xlat
insb
push
sub
adc
gs
or
xchg
ficomps
push
cs
int
sub
das
mov
inc
push
or
mov
adc
sub
pop
and
sbb
faddl
fwait
push
hlt
imul
bswap
pop
lret
push
fwait
cltd
sub
pop
mov
sub
insb
flds
mov
mov
xorl
ret
xchg
jge
push
fistl
xchg
sub
or
rorl
stos
cs
std
or
inc
inc
lea
or
inc
dec
arpl
add
cmp
int
sub
lret
sub
adc
fdivp
ja,pt
pop
xchg
adc
dec
mov
pop
call
cmp
aas
mull
fs
sub
adc
stos
std
add
hlt
fucom
lea
mov
mov
cmp
es
fnstcw
roll
adc
jmp
mov
push
adcl
pop
xor
xor
mov
push
mov
or
pop
dec
repnz
xor
in
adc
fs
add
aas
push
xchg
jge
ss
jnp
xor
aad
sub
mov
xor
or
sbb
pop
call
or
xchg
mov
jecxz
bound
or
mov
in
and
iret
jno
int
stos
aaa
sub
into
sub
in
mov
dec
inc
dec
fisubrs
push
xor
add
add
add
out
or
ss
jmp
lret
bound
sub
addr16
das
fwait
or
inc
btc
mov
xchg
pop
ret
xchg
hlt
cmp
jns
pop
shll
idivl
push
mov
or
push
push
mov
cmpsb
pop
call
shrb
jge
push
cmc
cmp
jg
les
lret
aad
sub
ss
pusha
test
pushf
lods
lds
pushf
mov
aam
pop
push
ljmp
xchg
jmp
add
fbld
sub
orl
fnstsw
inc
movsb
jmp
orb
fistps
sar
ficomps
inc
mov
lcallw
or
shll
mov
cmpsb
out
mov
xchg
lds
adc
mov
dec
scas
and
stc
mov
mov
mov
cli
dec
addr16
jp
push
dec
es
cwtl
fnstenv
stos
ljmp
rorb
and
push
inc
jne
jne
add
jmp
rolb
mov
sub
ret
les
or
lret
arpl
cmp
jns
pop
mov
fsubs
in
jp
nop
sahf
xor
xchg
test
outsb
outsl
push
xlat
xor
arpl
and
mov
pop
scas
adc
lret
cmp
dec
add
cs
push
aad
mov
xor
das
sahf
sbb
movsl
inc
mov
mov
jle
xor
push
and
outsl
jns
popa
out
pop
data16
out
push
lods
push
mov
add
fists
dec
sub
push
mov
lods
mov
fwait
sbb
dec
shr
jp
jno
aad
push
mov
or
pop
cld
mov
scas
push
int
dec
fisubrs
cmp
xchg
mov
adc
stc
orl
adc
xchg
outsl
inc
jb
cmpsb
stos
mov
sbb
push
mov
xor
clc
imul
adc
sti
fs
push
inc
mov
scas
add
add
mov
push
in
das
push
push
mov
fidivs
jmp
adc
shll
xchg
ja
dec
jb
or
sbb
push
adc
pop
sbb
std
fldt
xor
mov
clc
jge
fistl
sbb
pop
das
jae
mov
clc
inc
mov
adc
xchg
pop
dec
popa
shrb
mov
sub
outsl
add
jnp
into
and
mov
push
push
gs
int3
jp
popa
dec
push
lret
stos
sti
mov
sub
iret
fstpt
xor
or
cmpsb
push
mov
sti
scas
xchg
sub
jns
xor
push
cwtl
mov
jp
lds
loope
insb
fidivs
add
cltd
sbb
or
hlt
hlt
add
xor
in
iret
cmc
push
add
sub
pop
pop
jb
in
setnp
mov
cmp
or
jg
mov
hlt
stc
es
jmp
into
push
xchg
and
aas
push
add
jno
and
fmuls
push
cld
stos
out
mov
inc
lret
daa
dec
jb
sub
mov
sub
mov
xor
mov
fst
stc
add
ret
adc
cld
and
mov
cmpsl
shll
sub
imul
lahf
cmpsb
jle
into
fneni(8087
enter
in
mov
jnp
subl
or
or
int3
imul
imul
pavgw
fimull
stos
mov
inc
scas
or
mov
push
clc
push
out
es
or
mov
icebp
and
cwtl
inc
add
add
sub
popf
sub
xchg
cs
sub
loopne
add
test
push
cltd
sbb
adc
and
jb
test
pop
push
pop
cld
inc
out
les
arpl
cwtl
xchg
and
stos
mull
inc
and
pop
push
movsb
iret
push
push
icebp
adc
sbb
adc
mov
mov
mov
push
mov
int
adc
cltd
std
scas
sbb
cmpsb
leave
sub
in
int3
mov
iret
into
icebp
xor
xchg
push
xchg
in
bound
lds
mov
in
fdivrl
cli
sbb
loopne
sbb
pop
inc
xchg
adcl
push
cwtl
pop
sub
addr16
sti
test
into
test
cltd
xchg
ja
ja
sub
cmpb
fnsave
aad
inc
call
cmp
sbb
popa
in
cmp
into
sbbl
cmc
popa
in
jns
pop
or
and
adc
cmp
lahf
or
out
and
ret
inc
lret
inc
pop
mov
adc
test
jb
adcb
int
push
stos
lcall
dec
pop
sahf
lds
push
outsl
shrb
cli
or
and
loopne
dec
aad
cmp
cwtl
addr16
mov
sub
mov
sbb
pop
dec
inc
les
mov
cmp
ret
ljmp
pop
sahf
inc
and
and
push
xchg
adc
pop
and
fcoms
sbb
inc
push
or
out
cmc
inc
das
push
add
cmpsl
js
xchg
out
pop
dec
pop
lods
jo
jp
in
mov
mov
sahf
movsb
out
dec
jmp
jae
cmc
jg
popa
mov
xor
cmp
scas
lods
gs
push
jecxz
idivl
ss
adc
cmp
mov
addb
xchg
scas
aaa
enter
into
sbb
mov
pop
ja
xor
mov
adc
jmp
dec
ret
fadds
out
lret
cltd
mov
insl
mov
push
sub
aam
add
sbb
xchg
push
mov
shlb
push
fstpl
bound
popa
subb
mov
sarl
dec
arpl
push
fldcw
scas
pop
sub
scas
rcr
inc
rcrb
int
cmp
dec
dec
adc
sub
aaa
ja
mov
or
sbb
imul
adc
jb
or
jmp
out
sbb
pop
push
fidivl
jns
xor
xor
stos
pop
ljmp
cmp
xor
xadd
scas
sarl
mov
xlat
mov
outsl
mov
push
push
imul
and
sti
and
jp
pusha
aam
push
insl
mov
xlat
push
push
cmp
test
xor
jo
scas
cld
out
jmp
xor
bound
mov
ret
xor
sarb
gs
notb
and
in
lahf
mov
push
jno
cmp
mov
jo
pop
sbb
pop
fisubrl
mov
test
fdiv
cmp
aas
idiv
adc
stos
setns
xor
mov
mov
int
adc
ja
out
dec
popf
into
push
movsl
setg
mull
mov
xor
subl
xchg
scas
pop
les
push
sub
shll
into
rcrb
ja
test
mov
lahf
or
movsb
and
int3
movsl
lods
pop
std
sbb
mov
scas
mov
out
push
fs
in
icebp
cmc
cmp
pop
push
fdivrl
das
pop
dec
inc
cmp
divl
sub
out
dec
dec
gs
cmp
stc
andb
pop
and
rcrl
mov
jge
inc
jle
xor
jle
xchg
ficoml
lcall
cmp
add
or
xorl
dec
ljmp
push
fstl
in
push
in
es
adc
mov
mov
loopne
in
lods
fimull
popa
cld
and
std
dec
add
xchg
dec
inc
repnz
adc
movsl
or
jnp
adc
push
fcomps
dec
in
mov
dec
mov
xchg
inc
shlb
ljmp
cmpsb
adc
cld
ficomps
mov
loope
mov
jge
and
rcl
xchg
jno
jns
test
sbb
mov
fucomi
out
daa
mov
das
imul
jne
xchg
jmp
sub
pushf
nop
mov
pop
out
roll
push
mov
clc
in
idiv
leave
jne
mov
push
int3
mov
mov
aam
fistpll
fwait
out
cld
push
jp
shlb
lcall
push
xchg
inc
sti
scas
push
data16
mov
pop
adc
push
fildll
dec
insl
dec
push
jns
or
lea
xor
inc
rorb
nop
int3
aaa
shlb
fmuls
xchg
out
notl
cli
cltd
inc
mov
scas
fnstsw
or
call
jno
movl
je
adc
sub
mov
subl
icebp
cmp
aad
add
outsb
cwtl
adc
jno
aas
pop
push
jle
gs
sub
or
and
rorl
je
jno
xchg
call
pop
sub
pop
jp
fstps
test
pushf
out
add
jo
inc
cld
les
test
mov
inc
xchg
std
mov
sti
xchg
dec
mov
xchg
pusha
popa
ja
push
or
mov
pushf
and
push
lret
sarl
stc
sarb
sub
inc
sub
mov
sbb
call
sbb
sub
jno
sti
fidivl
cmp
xor
cmp
mov
xchg
mov
and
fistl
sub
mov
decb
push
push
sbb
or
fcoms
fcmove
aaa
loopne
mov
movsb
sbbl
mov
sti
sti
dec
in
or
int
xchg
jmp
pop
add
test
and
leave
or
xchg
jnp
scas
or
push
push
dec
jle
mov
sarb
and
ljmp
dec
xchg
ror
out
es
fmull
mov
xchg
clc
popf
js
xchg
cmp
mov
in
lret
mov
stos
sub
sub
push
and
std
mov
int
fs
add
xchg
jl
insl
jp
xchg
jle
dec
ds
sub
stos
push
pop
enter
push
jecxz
movsb
mov
stc
mov
aad
rcr
xor
imul
scas
ljmp
arpl
stos
cs
movsw
jb
data16
dec
js
mov
mov
imul
add
addl
lcall
push
into
pusha
int
dec
js
cmc
push
int3
bound
and
clc
fs
xor
adcb
cmc
call
add
repz
lea
inc
repz
stos
lock
jecxz
movsb
cmp
dec
or
daa
and
pop
faddp
shlb
flds
pop
je
add
cs
loope
and
mov
adc
outsl
mov
inc
outsb
lock
xor
ds
aaa
push
inc
data16
mov
mulb
jecxz
pop
xchg
jp
ja
scas
repz
popf
shr
jo
or
int3
mov
push
subl
les
or
mov
pop
stos
gs
and
lock
loopne
mov
int3
jae
dec
int3
sahf
ja
adc
inc
adc
and
dec
xchg
sti
sub
jecxz
mov
jno
les
mov
inc
jb
xor
mov
xchg
lds
out
sbb
pop
mov
out
xor
lds
mov
mul
addr16
mov
adc
or
cmp
mov
xor
psubd
fidivs
movsb
inc
cli
or
jp
jae
iret
and
push
shlb
fistl
sub
testl
pop
adc
js
loope
es
inc
inc
lea
jecxz
fists
out
push
es
ret
jl
cmp
inc
rol
mov
cmp
je
clc
xrelease
mov
mov
mov
aas
and
adc
add
and
pushw
jp
popf
xchg
stos
rorb
rol
dec
test
sbb
pop
loopne
sub
movl
pop
imul
adc
mov
scas
cmp
lods
outsl
lods
sub
adc
inc
adcb
jb
dec
sbb
add
lea
inc
ss
fwait
pushf
mov
mov
mov
jb
ss
mov
add
mov
add
lods
not
rclb
pop
lds
dec
fnsave
rolb
ss
data16
lods
mov
add
xchg
xor
xor
mov
out
faddl
out
xchg
sbb
sbb
mov
dec
and
mov
cmp
nop
push
insb
mov
ja
leave
push
dec
mov
in
in
test
mov
mov
loopne
cs
and
jnp
inc
adc
mov
and
jp
out
or
ljmp
or
inc
bound
xor
mov
shl
aas
loope
fsub
mov
fadds
fisttpl
sbb
add
jo
sub
push
add
ss
sbb
mov
rclb
enter
ret
fidivrs
sub
cmc
imull
pusha
jae
fs
mov
cmp
scas
cs
gs
in
or
movsb
repnz
and
dec
cmpsl
xlat
das
fistpl
jge
push
mov
lds
xor
mov
push
in
mov
jp
pop
pushf
mov
cmp
inc
add
imul
cli
loope
cmp
sbb
bound
pop
push
in
inc
movsb
stos
xchg
mov
shlb
out
add
sub
jp
inc
and
xchg
outsl
and
push
scas
xlat
jmp
dec
cmp
mov
jecxz
jl
mov
jge
jp
adc
popf
pop
adc
xor
icebp
cs
shll
jns
xchg
ss
mov
xchg
aad
fisttpll
sahf
sbb
cld
data16
jne
dec
xchg
pop
nop
leave
mov
push
mov
mov
and
xlat
es
xchg
mov
xchg
ss
jg
lahf
aam
movsl
insl
jbe
movsb
dec
jge
adc
or
inc
sub
test
pop
adcl
cld
xchg
pop
mov
out
mov
cmc
arpl
sti
addr16
loopne
sahf
push
adc
mov
inc
outsl
clc
into
xor
dec
xchg
and
rcll
xchg
pop
inc
aad
dec
fisubrl
pop
hlt
sbb
das
jecxz
cltd
adc
lods
xchg
cmp
sbb
fldenv
push
leave
call
popa
inc
ljmp
inc
adc
call
ret
inc
test
push
loop
addr16
cmpsl
add
fstpl
cs
push
adc
hlt
cmc
sub
rcll
xor
push
lret
lock
loop
cmp
stos
mov
cmp
mull
outsb
pop
xchg
sbb
or
jg
jl
iret
mov
cli
int
jge
cs
or
mov
xchg
xchg
insl
jae
or
pop
icebp
mov
fcompl
xchg
test
mov
sbb
lock
mov
inc
ja
mov
dec
mov
mov
jbe
mov
repnz
xor
enter
pusha
add
pop
lcall
jb
sbb
ret
stos
inc
hlt
dec
push
pop
aaa
mov
fs
mov
mov
addr16
dec
cmp
lods
lds
insb
pop
into
xor
leave
and
out
notb
jae,pn
lods
lock
imul
rcrb
test
test
lret
fdiv
sarb
icebp
fldcw
scas
xlat
popf
lods
jg
jecxz
imul
or
add
sahf
insl
fisubs
mov
lret
stos
outsb
loopne
test
inc
sarl
and
pop
cmp
insb
decl
mov
dec
idivl
mov
pop
push
or
adc
or
push
outsl
fcomi
lods
xchg
jne
inc
sar
inc
lds
popa
mov
adc
fcmovnu
icebp
das
pusha
and
std
test
shl
lret
xchg
test
adc
push
loop
out
mov
andb
jle
mov
ret
add
dec
leave
pop
jns
ficoms
dec
sub
imul
test
jo
out
adc
sbb
testb
mov
fisubl
fs
pop
mov
xchg
jle
xchg
sub
sub
daa
push
sbb
mov
inc
mov
jb
lds
mov
or
stos
ret
loop
or
mov
mov
ficomps
sbb
testl
adc
cmp
cmp
mov
xchg
pushf
push
sahf
scas
adc
push
test
faddl
pop
adc
sub
jo
in
sbb
inc
dec
clc
ljmp
loope
inc
or
and
rorl
insl
je
fs
xor
std
popa
inc
or
xor
jg
inc
aas
sti
mov
arpl
int3
push
push
jmp
and
rol
adc
insl
push
insl
jnp
outsl
pop
mulb
sbb
dec
push
fucom
imul
decb
leave
adc
sahf
fsubrs
push
stos
enter
pop
xchg
cmp
sub
int3
push
and
mov
add
xor
jno,pn
jle
fdivrs
pop
pop
in
pop
jo
mov
mov
sahf
mov
jmp
scas
mov
aam
scas
clc
mov
arpl
sub
jp
add
scas
xchg
push
subb
gs
lret
jnp
daa
jnp
jmp
dec
adc
sbbb
mov
jnp
add
popf
inc
xchg
mov
or
xchg
push
sub
cmp
insl
test
gs
lods
fisubrs
mov
push
inc
sub
daa
and
ljmp
or
jae
mov
cmpsb
push
cmp
pop
pop
push
aad
xchg
adc
xchg
sbb
in
mov
test
fwait
add
in
adc
mov
pushl
mov
mov
and
aaa
inc
movsb
add
jle
xchg
dec
mov
lret
push
or
mov
and
rcl
adc
call
movsl
push
cs
pop
popf
into
jne
pushf
dec
mov
cmp
int3
in
aad
ficompl
dec
stc
js
ror
sbb
and
ljmp
jae
fs
fwait
movsl
popa
movsb
xchg
xchg
out
in
cmp
daa
adc
inc
aam
out
adc
cs
sbb
inc
gs
test
cmp
jg
int3
pop
mov
cwtl
and
push
adc
loopne
xor
xchg
daa
jnp
xor
pop
cmp
mov
mov
inc
or
popa
adc
dec
out
cmp
pop
push
addl
fidivrl
icebp
loope
mov
and
mov
out
cmc
int3
lcall
ret
repnz
sub
cltd
and
jmp
imul
jmp
add
xchg
ja
aad
lods
or
or
inc
mov
or
hlt
ljmp
mov
jle
cmpsl
enter
gs
push
push
pop
xor
xor
testb
sbb
lahf
out
mov
or
xor
jns
mov
fwait
int3
scas
scas
repnz
clc
cmp
pusha
stc
repnz
arpl
ds
fists
dec
pop
xor
mov
lret
mov
mov
das
rclb
fmuls
daa
push
cmp
and
dec
sbb
scas
stc
dec
cmc
call
and
lds
hlt
fucom
pop
loop
cli
test
mov
dec
push
fists
fisubl
movsl
cltd
jb
mov
aas
jmp
call
and
addr16
frstor
data16
ljmp
stc
fidivrs
js
sbb
das
ret
mov
in
push
js
lret
sub
rorb
push
mov
repnz
xchg
test
out
sbb
les
adc
outsl
cmp
add
das
fisubrl
outsb
xor
aas
and
call
xchg
push
jmp
pop
push
mov
mov
fwait
push
and
inc
pop
pop
jbe
add
inc
loop
dec
sub
pop
pop
sub
push
sub
sbb
add
or
xor
adc
lahf
xlat
push
adc
inc
mov
insb
sbb
lods
or
add
dec
ficompl
xor
adc
shlb
push
loope
sti
sub
cltd
mov
cmp
add
sahf
ror
rorb
cltd
add
pop
pop
push
iret
add
call
cmpsb
dec
bound
mov
push
lea
and
dec
xor
out
add
or
cmp
in
js
sbb
int3
sbb
or
roll
mov
out
pop
repz
data16
stos
mov
aaa
pop
scas
sbb
cmp
repnz
loop
les
inc
dec
xchg
xlat
cli
adc
es
lret
lret
jno
or
int
pop
jmp
or
mov
cwtl
mov
or
inc
jns
push
add
ja
lret
adc
sub
and
add
sahf
dec
aad
fisttpll
xor
add
cs
dec
loop
jp
in
xchg
out
out
push
or
and
mov
jecxz
in
das
fisubrl
test
pop
pop
das
xchg
push
pop
or
cmp
pop
and
arpl
stos
sti
xor
sub
pusha
inc
mov
and
out
das
out
aam
mov
or
xlat
insb
inc
jg
cmp
and
and
mov
popf
arpl
pop
push
insl
adc
mov
add
stos
sbb
inc
stos
das
xchg
push
ds
movups
mov
das
in
inc
mov
scas
jg
inc
dec
cmp
xor
and
das
jp
lock
stc
imul
mov
pop
ret
outsl
shll
fdiv
das
pushf
mov
add
fdivs
stc
test
mov
or
into
aam
lods
inc
and
mov
jbe
cltd
cli
adc
mov
int
sub
std
push
sub
scas
pushf
mov
mov
fildll
ds
cmp
outsb
stos
sti
cmp
sbbb
sub
sub
popf
or
xchg
or
out
adc
sub
or
stc
in
push
pop
pop
lret
sbb
leave
clc
dec
mov
xchg
dec
dec
icebp
fucomp
pop
inc
test
sarl
push
add
add
into
inc
inc
sub
sti
pop
push
jnp
xor
insb
cld
lahf
mov
mov
mov
fst
or
jnp
mov
mov
adc
sbb
mov
pushf
push
jo
jnp
mov
out
arpl
jecxz
add
mov
push
push
inc
daa
and
xchg
lods
lods
mov
and
mov
sahf
dec
adc
or
mov
cmp
push
fisttps
xchg
outsb
shr
ja
shl
ljmp
mov
and
jp
outsl
aas
sub
dec
popa
jo
cmp
push
mov
jb
jmp
xor
sbb
xchg
lods
lods
loopne
imul
mov
mov
in
inc
or
add
stos
mov
inc
aam
in
xchg
mov
or
nop
leave
jge
js
scas
test
mov
jb
sbb
nop
rclb
fs
sbb
jno
addr16
iret
mov
test
push
in
loopne
or
cmp
bound
or
pop
cs
and
inc
shl
sbb
or
jp
scas
adc
mov
xchg
fdivrs
xchg
mov
cmp
and
adc
fwait
mov
sub
cmp
xchg
ss
sahf
push
xchg
cmpl
adc
js
lods
insb
adc
ds
and
ror
lods
ds
inc
mov
bound
dec
jnp
lcall
mov
sub
ljmp
mov
mov
mov
fwait
orl
leave
int3
cmp
jmp
mov
add
sahf
mov
fldt
fsts
lcall
mov
and
adc
andl
xchg
scas
dec
xchg
movsl
xor
insl
jne
vmovaps
shrb
into
inc
xlat
jle
std
push
ss
sbb
je
jl
repz
xchg
dec
inc
pop
jb
push
push
mov
ret
fimull
getsec
stos
cmp
outsb
xor
mov
jne
out
cmp
inc
cmp
cmp
cmpsl
mov
shrb
xchg
icebp
cli
inc
xlat
std
sub
movsl
dec
xchg
lea
sbb
lret
addr16
es
xor
jnp
mov
dec
loop
stos
and
mov
imul
xchg
fcmovu
insb
push
std
rcrl
cmp
popf
sub
and
ss
or
cmp
sub
or
dec
xchg
lock
push
mov
popa
mov
add
pop
out
lahf
dec
in
and
or
aad
popa
push
enter
sti
push
or
push
push
and
aam
mov
in
push
enter
mov
adcb
in
lret
jge
pop
scas
adc
sbb
leave
xor
jmp
sub
cmpsl
fldcw
jle
int3
inc
cltd
mov
cli
insb
sub
dec
andb
pop
inc
inc
push
cltd
mov
push
in
bound
cltd
mov
inc
shrb
lahf
les
jae
lcall
push
mov
pop
mov
testb
repz
insb
pop
cmp
xor
xchg
cmp
dec
ja
mov
call
in
sbb
outsl
add
sub
repnz
adc
addr16
cmp
jle
fisubs
cmp
in
xor
add
xchg
emms
fidivrs
out
push
std
std
inc
hlt
jnp
push
mov
add
popf
shrb
sti
mov
ret
pusha
ss
xchg
shlb
addb
aaa
pop
push
or
inc
jbe
cwtl
out
adc
sar
adc
inc
pushf
push
stos
xor
lahf
pop
or
cmp
lahf
les
cmp
or
xchg
xor
mov
int
mov
out
jno
insl
sbbb
shlb
cmp
das
mov
outsb
ficomps
outsl
sti
pop
inc
jmp
and
dec
dec
imul
test
sub
or
in
sub
or
mov
loop
es
test
fsubrs
mov
mov
xchg
iret
inc
or
dec
push
into
add
jne
adc
cltd
mov
jnp
mov
and
iret
jp
mov
dec
mov
test
movb
jge
js
cltd
xchg
mov
pop
mov
lea
push
inc
push
shrb
pop
inc
xor
push
gs
cmp
aad
sbb
sbb
ds
les
mov
test
stos
adc
xor
jge
lods
mov
jne
adc
jp
ss
mov
repz
daa
mov
repz
jns
shrb
out
xchg
mov
cmc
jg
pop
enter
push
dec
ret
or
jge
or
fdivrl
adc
mov
fisubl
mov
data16
test
mov
mov
mov
push
outsb
mov
aad
fsubl
mov
dec
sbbl
or
out
loope
push
rolb
and
das
pop
inc
push
paddb
sub
mov
dec
sti
lret
jmp
xchg
lods
in
push
adc
mov
sbb
mov
jl
or
jo
or
inc
test
fcompl
push
repz
out
jmp
rorb
fisubrl
sbb
pop
mov
lods
pop
mov
test
out
das
hlt
inc
data16
in
inc
mov
sub
ljmp
fidivs
mov
adc
leave
dec
insb
inc
lea
in
cld
movsl
lret
leave
pop
sub
or
pop
insl
movl
lret
shrl
scas
dec
subb
in
mov
add
xorl
dec
xchg
mov
inc
mov
in
mov
aaa
cld
sbb
stc
and
ljmp
lods
loopne
lods
loope
lock
sub
rcl
aaa
and
mov
sbb
push
pop
leave
jmp
push
push
int3
subb
push
inc
cmpsl
dec
inc
neg
fwait
cwtl
xchg
xor
imul
das
sahf
aam
rclb
inc
lcall
loope
rclb
mov
push
daa
pinsrw
pusha
jle
push
mov
or
in
mov
sbb
movsl
and
lods
and
repnz
pop
andl
rcl
cmpsb
inc
std
or
sub
jg
mov
xchg
call
push
sub
sbb
cmp
neg
test
jp
stos
mov
mov
gs
pop
loope
adc
inc
rcrb
pop
lcall
mov
xor
hlt
das
outsl
mov
jb
sub
mov
enter
pop
aas
xchg
push
dec
inc
jge
test
shll
pop
js
xor
inc
out
cmpsl
or
xor
pop
shlb
add
call
rorl
dec
adc
bound
pop
cmp
imul
jbe
mov
push
call
fistl
sub
inc
pop
int
sti
mov
or
or
in
mov
jge
dec
rolb
out
push
xchg
std
in
cmp
jno
push
cmp
cwtl
push
hlt
leave
dec
xchg
mov
ja
ret
shrb
jmp
movsb
or
lcall
movsb
cmpsl
jno
sbb
ljmp
or
jg
pop
xlat
adc
mov
pop
rorb
lea
or
lea
jge
push
daa
mov
dec
out
add
xor
cmp
out
jno
and
and
rcll
iret
push
test
sahf
arpl
jmp
push
insl
bound
xchg
push
push
push
repnz
cmp
adc
jge
addr16
mov
inc
repnz
cmp
fcompl
lcall
imul
jne
in
aad
pushf
lods
frstor
ret
daa
mov
mov
xchg
lret
dec
in
movhps
pop
arpl
and
pop
xchg
nop
mov
iret
mov
in
cld
rorl
fldenv
mov
xchg
aas
adc
clc
mov
icebp
jg
cmc
dec
pop
mov
data16
ret
int3
push
test
sti
mull
stos
cmpsb
out
inc
push
fdiv
adc
adc
or
aaa
shlb
cli
xor
in
push
pop
mov
insb
jno
jge
add
and
lret
pusha
adc
test
ljmp
inc
fnsave
lds
leave
out
push
jle
arpl
daa
xor
divl
call
mov
sub
jg
dec
mov
outsl
mov
push
inc
xchg
xchg
inc
push
sub
and
cmpsb
inc
pop
cmpsl
mov
and
fprem1
cmp
movsb
and
xchg
sti
scas
mov
adc
push
in
imul
sub
lods
stos
test
sub
sbb
push
clc
push
fistpll
sbb
push
mov
movsl
xor
mov
mov
les
in
and
and
cwtl
shll
jno
mov
sahf
add
jge
cmp
adc
pop
or
cmpsb
fimuls
call
mov
add
xor
repz
call
sahf
fmull
lods
hlt
lret
cmc
pop
jge
insb
jl
xchg
inc
out
inc
and
xor
mulb
mov
mov
cmp
flds
cwtl
movsl
or
stos
ds
sub
int
add
insl
and
dec
jns
hlt
inc
leave
pop
call
mov
ljmp
sbb
icebp
jg
jecxz
dec
and
xor
lock
push
adc
fstps
movsl
mov
dec
pop
orl
add
cld
sbb
cmc
mov
add
popf
enter
rcrw
pusha
dec
sahf
in
add
pop
inc
sub
aas
jb
sub
adc
pop
stos
xorl
push
in
push
mov
inc
inc
fbld
out
fbstp
ja
cmp
ficompl
filds
in
std
add
add
jne
push
mov
xchg
mov
mov
adc
idivl
cmc
and
aas
mov
push
jg
ljmp
test
or
fs
aaa
adc
lods
pop
roll
adc
push
mov
push
mov
nop
add
inc
sbb
mov
mov
cli
das
xchg
mov
cmp
cwtl
lods
sbb
mov
lds
add
ds
test
das
gs
and
or
inc
or
mov
ljmp
aad
dec
cmpl
inc
ss
push
xchg
mov
push
lods
sub
jo
and
pop
xor
adc
mov
xchg
jnp
adc
movsb
sahf
mov
xchg
xchg
push
push
mov
adc
cmp
adc
pop
sub
add
jne
push
mov
decb
mov
sub
sarl
or
inc
lret
add
cltd
imul
and
xchg
fsincos
in
sbb
les
pop
jecxz
sub
mov
pop
lea
add
pop
sbb
mov
cmc
jecxz
insl
insl
pop
push
es
mov
and
sub
clc
push
inc
fistps
push
loopne
jg
movsl
fucomi
jno
add
hlt
push
xor
imul
jge
and
jmp
xchg
xor
jp
mov
rol
negl
mov
enter
jo
cmp
ret
fmul
divl
jns
or
mov
pop
cmp
imul
insw
jae
and
cmp
or
sbb
dec
mov
test
mov
sub
mov
cmp
sub
pop
xchg
push
inc
cmpsl
repnz
scas
mov
imul
sbb
subl
mov
pop
stos
sub
dec
insl
mov
push
push
push
enter
shll
insl
lret
mov
pop
or
pop
aam
sbb
daa
test
int3
or
cmp
cmp
dec
xor
imul
ss
cmpsl
xchg
leave
icebp
clc
xlat
fiaddl
decb
sti
mov
sarb
in
xchg
and
xchg
xchg
sub
pop
xchg
inc
xor
add
lods
rolb
fstps
pop
mov
in
sub
dec
ret
mov
out
add
mov
lahf
fimull
rclb
out
cmpsl
sub
rcr
das
dec
roll
adc
sbb
scas
andb
push
lcall
gs
adc
and
mov
push
xor
push
inc
inc
inc
jnp
leave
cmc
mov
sarl
pop
scas
dec
test
mov
aam
sbb
or
fidivrs
jmp
mov
mov
mov
dec
dec
pop
enter
fstps
mov
xchg
or
or
cld
mov
sbb
sahf
test
rorw
cmc
sbb
lea
iret
mov
mov
push
xor
data16
cld
vmovntdq
int
ja
adc
enter
jmp
scas
xor
mov
mov
push
test
sti
out
cmp
pop
dec
gs
jecxz
push
in
pop
push
push
inc
mov
push
pop
jae
dec
dec
nop
ja
push
push
or
push
dec
insl
xlat
outsl
inc
test
sub
cmc
pop
in
hlt
in
imul
sbb
xchg
xor
add
test
jmp
popf
add
mov
shl
mov
pop
int
int
push
cmp
adc
popf
stos
imul
enter
imul
lock
mov
add
jge
loopne
jp
testb
in
dec
rcr
mov
push
mulb
scas
bound
ljmp
jae
push
cmp
ret
ja
sub
loop
push
test
or
ret
pop
test
xchg
std
adc
out
mov
and
add
nop
sub
jo
ds
std
icebp
in
xor
sub
int
ja
outsb
pop
pushf
mov
out
sub
iret
xor
dec
fstpt
ljmp
xchg
mov
mov
aam
jbe
ds
iret
lock
cmp
dec
gs
fcmove
add
rclb
inc
aad
ds
dec
cmpl
inc
and
xor
push
push
and
out
adc
add
or
mov
rcrl
iret
push
stos
call
xchg
push
xchg
lock
xchg
mov
int
push
xchg
sbb
or
sub
mov
mov
inc
std
sbb
bound
jmp
jle
addl
adcb
adc
sti
or
push
jnp
and
dec
mov
bnd
dec
ret
cs
xchg
add
pushf
movsb
mov
add
test
adc
add
cwtl
mov
lcall
adc
repnz
fadds
mov
mov
fwait
inc
stos
mov
add
rorl
mov
lcall
dec
and
mov
add
xor
leave
lea
add
lret
mov
jne
push
in
test
mov
push
xor
jmp
dec
jecxz
sub
mov
scas
ljmp
mov
or
addr16
add
sbb
popa
cmp
mov
xchg
xor
pop
shrl
dec
leave
cmp
pop
push
out
and
adc
xchg
popf
cs
dec
mov
xchg
loope
mov
xchg
xchg
test
adc
xor
dec
repz
cmp
test
hlt
ss
ja
fbld
dec
push
or
iret
aam
loop
dec
mov
add
stc
jge
int
fs
pop
cli
xor
stc
ljmp
mov
adc
push
fmul
adc
mov
sbb
lahf
in
sub
and
and
test
push
add
sub
add
repz
jmp
sbb
dec
aad
pushf
bound
sub
pop
jne
sbb
loopne
sbb
jg
andl
cmp
mov
sbb
repnz
and
fsubrp
ljmp
rorl
push
push
aad
push
cld
and
sar
lahf
inc
mov
push
sbb
sbb
push
hlt
push
icebp
cmp
repnz
mov
cmpsl
test
sub
fbstp
sarl
test
pop
verr
int
jo
pop
mov
aaa
push
lret
mov
popf
ss
pop
jecxz
aaa
push
stos
fistps
fs
andl
or
jno
adc
add
adc
into
inc
mov
decl
xor
mov
cli
inc
stos
jns
test
xchg
xchg
fld1
xlat
push
xor
pop
xor
mov
xor
sub
mov
xor
and
jne
call
mov
sub
stos
stc
add
jge
sub
cmp
popa
imul
in
pop
push
aaa
push
pop
and
mov
into
and
and
popl
push
adc
xor
mov
shll
shll
ja,pn
inc
jae
icebp
lods
lods
das
arpl
call
pop
push
push
xchg
aam
in
inc
push
push
dec
add
dec
insb
add
out
test
or
push
dec
mov
push
sahf
inc
scas
test
add
fnstsw
insb
adc
mov
popf
xor
add
dec
dec
lods
sbb
in
inc
stc
lods
test
fwait
cmp
push
dec
and
cmp
movsb
sahf
addb
pop
add
push
clc
or
push
pop
in
cmp
push
idiv
jp
rorl
sbb
insb
dec
fdivr
or
lret
dec
lret
out
cmp
mov
mov
pop
or
and
inc
in
in
push
add
insb
dec
add
scas
insb
rcr
testl
scas
sbb
addl
push
pop
loopne
add
aam
push
insb
sub
ljmp
popa
inc
xor
rol
inc
sbb
mov
xor
scas
sbb
cmp
sub
imul
out
mov
push
ljmp
mov
std
push
std
dec
cmp
xor
dec
and
add
pop
dec
das
ljmp
daa
jae
mov
push
mov
lods
inc
cmp
lea
repnz
pushf
mov
adc
mov
dec
fcompl
pop
pop
shrl
std
pop
xor
dec
pop
shrb
aaa
pop
cld
ds
xor
pop
shl
fwait
xor
clc
sbb
imul
scas
popf
fcoml
push
hlt
adc
into
mov
dec
stos
sbb
adc
adc
mov
jo
dec
dec
bound
adc
pop
shll
hlt
xchg
xchg
mov
nop
jecxz
into
insl
pop
pop
or
push
idivb
mov
push
negb
sbb
jle
jmp
cmp
ret
dec
xor
push
push
aam
sbb
ss
addr16
fwait
int3
cmovg
arpl
into
fsubp
sbb
push
lock
inc
xchg
pop
xchg
loop
sbb
das
andl
xor
push
cmp
stos
iret
sub
mov
push
and
dec
mov
or
push
xlat
out
jo
int3
inc
loope
mov
leave
inc
add
mov
push
push
ljmp
cmpsb
dec
out
fldt
fwait
insl
push
sarb
mov
ss
ret
inc
xchg
and
icebp
sti
xor
or
cltd
jno
mov
jmp
or
out
cmc
inc
dec
add
imul
cmpb
fisubs
das
lret
sub
cmp
hlt
in
mov
cmp
clc
jecxz
jae
cmc
jne
cmpsb
xchg
xor
add
bound
lods
lods
xchg
inc
sbbb
adc
insl
pop
or
mov
inc
leave
stos
cmp
xor
mov
rcrb
or
cmp
es
pop
add
pop
push
cmp
dec
repz
data16
push
jno
mov
and
adcb
cmp
xchg
insb
mov
pusha
sub
shrb
fwait
cmp
mov
push
sbb
dec
push
incb
sub
xlat
aad
cmp
mov
mov
pop
mov
and
test
in
fisubs
mov
push
pusha
stos
test
fidivl
jmp
xor
out
xchg
andl
cwtl
fwait
or
imul
jge
pop
xlat
adc
xchg
pop
lret
sub
cmpsl
pop
push
fsubrl
scas
adc
addl
js
sbb
fsts
xchg
mov
push
and
mov
xor
pop
sti
sbb
or
or
and
jecxz
test
je
fwait
xorb
adc
rcll
in
mov
pop
ss
int
xor
insb
neg
pop
ljmp
xchg
push
lret
mov
testb
mov
mov
insl
xchg
add
sar
roll
dec
aaa
rorl
in
mov
cwtl
pop
adc
add
cmp
pop
inc
cmp
arpl
pop
add
cmp
or
addb
add
std
inc
lret
add
insl
xor
mov
ja
movsl
cld
int
pop
push
into
push
shll
sub
inc
or
and
inc
mov
int
jno
push
sahf
arpl
insb
cwtl
fs
push
inc
sub
mov
push
fs
in
add
mov
dec
sbb
add
cmp
clc
fcmovne
faddp
mov
out
daa
mov
xor
sub
sub
sub
stos
dec
pop
adc
nop
pushf
push
rcrb
out
sub
and
sbb
cmpsb
cltd
jmp
push
dec
mov
jae
jno
mov
cmp
add
cltd
xchg
bound
les
and
xor
test
mov
out
aam
adc
mov
inc
or
ss
sbb
jne
mov
xor
gs
ja
mov
push
sbb
or
fs
and
clc
xchg
cmp
inc
xor
pop
test
lret
jb
mov
sbb
dec
jp
pop
sub
inc
fsub
and
pop
add
push
sub
xor
daa
int
cltd
or
icebp
pop
pop
xchg
fsubrs
aad
lret
rcr
ss
mov
faddl
xchg
push
into
push
xchg
out
jge
mov
rorb
sub
cmpsl
mov
cltd
push
dec
cmovb
mov
push
inc
pop
inc
push
std
sti
sub
test
jbe
mov
and
mov
lock
je
and
xor
add
mov
loop
out
repnz
cmp
add
repz
int3
push
fiadds
fcomip
cld
or
aam
fcomip
mov
icebp
sbb
jns
mov
lock
sahf
aad
mov
inc
mov
inc
divl
xor
xchg
sbb
cli
push
mov
icebp
addr16
in
int3
jecxz
shlb
jecxz
inc
xor
cmc
out
or
lret
fdivl
pusha
aaa
divl
jmp
sbb
aam
and
mov
push
popa
add
das
pop
cmp
jl
popa
pop
int
push
push
inc
es
and
lock
and
jbe
mov
test
cmp
lods
jecxz
or
push
xchg
add
pop
adc
adc
imul
sahf
add
dec
sub
pop
sub
jns
stc
add
sub
cltd
sub
sbbl
lea
mov
add
jno
pop
xchg
cmp
hlt
inc
jecxz
push
addl
inc
mov
iret
sub
jg
push
outsl
adc
call
loopne
sbb
jno
mov
and
pop
int
cltd
jae
ljmp
inc
lahf
pushf
xchg
or
cs
stos
lret
xchg
adc
or
in
notl
push
push
cmp
sbb
pop
mov
arpl
or
cli
lahf
jg
fdivr
outsl
and
sbb
inc
arpl
inc
xchg
push
fcomps
sbb
xchg
add
hlt
in
imul
or
mov
mov
loop
xor
fiaddl
addl
add
movsb
pop
sub
imul
adc
jge
int3
xchg
das
mov
pop
or
mov
adc
dec
mov
push
jno
loope
out
mov
iret
cmp
scas
loope
and
mov
fistpl
pop
cmpsb
lds
jge
dec
inc
mov
xor
in
add
mov
shll
mov
cltd
add
jnp
daa
mov
leave
inc
jne
aam
mov
mov
jb
fistl
test
push
xor
shrl
imulb
lds
jae
test
xor
je
push
inc
or
ss
xchg
xor
xor
cmp
mov
sbb
or
rcl
test
loop
les
negl
fimuls
leave
mov
mov
negl
jle
mov
repz
jns
mov
or
dec
jge
std
stos
mov
jae
mov
or
leave
pop
lret
testl
data16
xchg
dec
loope
inc
mov
hlt
fimuls
clc
inc
iret
jle
addr16
sbb
sub
icebp
or
sub
cmp
in
repnz
jmp
cli
test
adc
adc
ret
or
pop
jae
mov
push
pop
lods
or
cwtl
pushf
imul
sub
popa
repz
add
aam
sysexit
out
nop
inc
cmp
rcrb
lods
adc
outsb
and
xor
lcall
pusha
das
push
orl
mov
stos
sub
lahf
out
or
sub
and
pop
mov
addb
pop
repnz
mov
cmc
fildl
adc
sbb
sub
xor
push
add
shll
loopne
xor
cmp
inc
mov
jle
push
xor
pop
or
sub
imul
aad
mov
add
add
iret
jp
inc
dec
jo
jns
sbb
scas
ret
xchg
scas
std
pop
xchg
lret
jle
call
clc
cli
jno
xchg
loopne
je
adc
xor
push
jg,pt
xor
xchg
outsl
scas
sbb
testb
pusha
mov
adc
add
push
cld
adc
fisubs
mov
imul
lahf
xchg
add
cld
jb
or
out
call
xchg
cltd
cmovg
add
dec
cmp
mov
xor
xchg
fisttps
sub
scas
xchg
lret
push
movsb
xor
xchg
sub
andb
xchg
and
sub
ljmp
cmp
sarl
inc
fnsave
lret
mov
mov
fcomi
dec
jp
pop
fsub
mov
into
mov
stos
cwtl
cmp
jb
jne
jmp
aas
fistpll
mov
stos
ret
jle
lcall
lcall
mov
pop
xchg
dec
cmp
enter
and
icebp
mov
mov
lcall
cmpsb
sbb
sub
cmp
adc
fisttps
jp
mov
jg
int3
std
push
fs
inc
dec
test
sub
push
scas
sbb
call
pop
nop
dec
sahf
xchg
movsb
push
xchg
pop
add
call
sbb
xor
push
out
adc
mov
gs
out
outsl
repnz
pop
out
adc
cltd
inc
fmul
imul
xchg
cmp
lret
xchg
cs
lea
rclb
ror
sbb
int
xlat
rorl
negl
fbstp
popa
cmpb
mov
mov
lcall
jle
jmp
cmp
cli
and
shrl
xorl
imulb
repnz
xchg
lahf
insb
jo
je
pop
and
incb
daa
and
mov
dec
cmp
adc
sub
lret
push
sti
or
repz
sub
jle,pn
nop
jo
xchg
ret
cltd
mov
xor
push
jmp
jle
int
icebp
and
insl
lretw
mov
sub
sub
outsb
data16
cmpsl
xchg
jo
cmp
mov
and
ret
mov
mov
push
adc
pop
inc
cs
add
mov
jbe
std
mov
push
cmp
jmp
in
cmp
out
jnp
shrl
inc
mov
sub
sbbl
mov
sbb
mov
dec
xor
mov
adc
sahf
lahf
nop
movsl
les
loopne
inc
pop
loopne
add
imul
sar
in
fsubrs
jle
in
sbb
jle
in
lcall
lret
jge
sahf
jp
jecxz
xchg
add
jle
dec
clc
push
adc
div
sarl
xchg
xchg
mov
rorb
push
adc
cmp
mov
mov
adc
sbb
sbb
add
mov
inc
bound
ret
and
sbb
lods
jns
and
in
ret
mov
mov
mov
add
es
pop
jge
lods
aaa
je
fs
fisubl
andb
pop
int
movsb
mov
inc
aam
push
test
ret
push
les
push
icebp
cmp
movsl
loopne
gs
insb
xchg
add
outsl
pop
push
mov
xor
lock
cwtl
and
fstl
xchg
xchg
outsl
les
loop
mov
std
cmp
pextrw
sub
sbb
aam
push
aaa
mov
daa
aas
pop
push
shll
clc
ss
mov
in
or
je
push
negb
add
and
insb
xchg
add
subl
stc
imul
sbb
add
jmp
xchg
pop
pop
lea
push
insb
orl
mov
mov
mov
mov
pop
jbe
test
enter
repnz
jnp
push
sub
cmp
lods
push
insb
hlt
pop
dec
add
and
nop
ss
xchg
pusha
mov
xor
call
or
pop
xor
xlat
xor
bound
shrb
pop
hlt
push
cmpsl
lea
xchg
cs
push
js
rcl
lods
cmpsb
test
xor
pop
jbe
push
int3
cmp
test
and
fadds
mov
xor
fstpt
popa
insl
adc
bound
shll
xor
inc
lret
scas
fcmovnbe
movsl
les
mov
ret
xor
fsts
mov
test
lea
add
notb
lret
enter
xchg
xchg
jno
jae
push
pop
mov
jge
inc
push
push
out
js
addl
inc
es
or
mov
jo
jns
out
lds
popf
clc
push
xchg
test
and
add
jb
ret
or
pop
adc
dec
test
ss
sbb
clc
mov
lret
xor
rep
xchg
cmp
js
mov
jl
icebp
arpl
adcb
fimull
sub
xor
int
iret
test
push
mov
push
adc
imul
xchg
cs
jmp
loopne
ret
add
xchg
in
lret
stos
inc
outsl
xor
movsb
or
icebp
lret
clc
test
sub
push
mov
mov
mov
jbe
ret
cld
mov
sbb
js
xchg
repz
mov
stos
or
loopne
and
jecxz
xchg
das
mov
addr16
scas
dec
sahf
mov
loope
sub
cmpsl
inc
aam
jnp
mov
stos
insb
flds
call
pop
xchg
sub
fistpll
jb
mov
pop
and
ds
subl
shll
addr16
test
repnz
xorb
and
cmp
mov
iret
push
jg
mov
xchg
jmp
cmp
in
cmp
bound
cld
push
inc
xchg
fisubrs
cmp
inc
scas
pop
push
movsl
mov
aam
or
or
in
and
leave
loop
mov
xchg
cmp
int3
sbb
xor
ljmp
sbb
std
arpl
test
push
and
add
shrb
and
and
in
ret
mov
rorl
adc
mov
scas
scas
test
jmp
shrb
xchg
add
insl
sbb
xchg
lahf
out
mov
cmc
push
xorl
xorb
jl
subb
mov
push
nop
movl
push
int3
out
popf
dec
ret
sub
rcrb
int3
sbb
push
in
out
xchg
mov
insb
and
push
push
mov
dec
test
jnp
jnp
or
out
or
add
cmpsb
pop
out
mov
inc
push
test
ret
ds
jb
sub
pop
push
gs
aaa
jno
sub
scas
scas
addb
rcll
sub
test
call
mov
fcoml
mov
mov
in
or
sub
out
sub
jb
push
fwait
jmp
push
push
jl
mov
inc
iret
xor
cli
insb
sbb
aaa
out
add
mov
fsub
push
inc
pop
lds
and
ss
outsl
jl
data16
out
mov
into
mov
dec
jae
jae
call
inc
int3
scas
jecxz
pop
inc
out
jbe
pusha
mov
or
subb
js
loope
mov
mov
pop
jmp
sbb
adc
mov
lods
stc
movsb
push
arpl
out
movsb
orb
hlt
mov
cmp
sbb
out
inc
sub
pop
shlb
push
cmp
mov
push
rolb
mov
xchg
pop
lods
ret
pop
cmp
outsl
mov
mov
shll
popf
hlt
push
out
frndint
or
mov
jne
pop
or
and
push
jp
int
add
mov
add
sub
pop
or
mov
jbe
and
push
out
xor
xlat
sti
fadd
movlps
mov
fcmovbe
push
sub
adc
mov
pop
insl
sar
lcall
mov
xchg
add
mov
xchg
sub
cmpsb
cmp
xchg
out
imul
call
ret
cmp
and
out
xlat
push
sub
pop
and
adc
pushl
and
loopne
enter
add
cld
pop
rorb
in
sub
cmp
int3
push
inc
mov
lret
mov
arpl
dec
dec
cmp
xchg
or
mov
mov
lahf
lahf
lret
pop
sbb
cmpsb
out
mov
loope
popa
add
rcll
dec
mov
nop
push
push
into
addr16
and
stos
aad
pop
sub
xor
cmp
xor
or
outsl
je
push
sahf
out
mov
sbb
xchg
aam
arpl
cld
sub
push
sarb
dec
adc
insl
add
pushf
lahf
mov
add
pop
icebp
adc
jmp
mov
adc
cmp
flds
call
and
mov
inc
xor
dec
pop
fiadds
hlt
pop
xchg
cltd
inc
loop
mov
test
adc
jbe
adc
sbb
bound
lods
icebp
pop
lods
movsl
cmpsb
pop
mov
sub
pop
sahf
sbb
shll
movsl
dec
push
add
inc
movsb
icebp
inc
lret
repnz
fsts
je
add
in
cmc
ror
or
jmp
das
fyl2xp1
cmp
arpl
mov
fwait
xor
push
into
dec
add
push
inc
cs
aam
js
popf
cmpsl
lcall
mov
pop
cltd
lret
popl
mov
int
in
adc
outsb
in
xorb
enter
mov
xlat
popa
in
inc
stos
add
mov
mov
xor
shrl
inc
pop
aas
dec
xchg
mov
fisttpll
mov
aas
lret
push
inc
xchg
dec
and
fbld
mov
cmp
popf
xor
pop
sub
pushf
cmc
push
shl
clc
dec
ret
pop
adc
mov
arpl
inc
pop
dec
fstps
pop
loop
mov
jnp
inc
mov
or
repz
in
lods
stos
mov
pop
cmp
int
jbe
out
pushf
and
mov
jns
xor
mov
push
xor
fsubrs
cmp
movsb
push
fisttps
es
stc
and
movsb
xor
mov
lahf
es
inc
jne
inc
fwait
jmp
push
sti
repnz
dec
mov
insl
loopne
repz
in
aad
sbb
std
mov
jg
push
adc
lret
in
mov
push
and
dec
mov
adc
sbb
inc
test
or
call
dec
fstp
and
dec
dec
aad
mov
scas
fisttps
test
pop
rcrb
lods
popf
add
out
bound
xchg
aaa
xchg
xchg
lock
adc
xlat
xchg
jl
lea
popa
fldenv
ss
jno
jmp
mov
outsl
xchg
dec
lret
push
adcl
inc
cmpsl
stc
jecxz
sahf
inc
mov
mov
sub
arpl
xor
test
hlt
fsubrs
adc
mov
into
hlt
or
inc
stos
pop
dec
fdivrl
adc
mov
mov
and
aam
out
jno
imul
lret
in
mov
call
pop
je
movsb
ljmp
pop
loope
jle
inc
sub
adc
sbb
xor
xor
xchg
mov
mov
sub
decl
fcomps
xchg
mov
gs
cmp
dec
lret
scas
rorl
ljmp
jmp
sub
stos
cmp
sbb
in
in
je
cmp
xchg
add
jo
dec
je
or
mov
pop
dec
fbstp
jae
adc
add
not
stos
xchg
ljmp
mov
rcrb
mov
inc
sarl
in
push
jg
int3
dec
adc
jbe
bound
xchg
pusha
lret
cmp
int3
inc
or
sbb
sub
push
fimull
aad
cmp
push
int
repnz
jo
mov
out
ret
sahf
push
repnz
or
outsl
and
dec
stc
shrb
fwait
push
or
aas
jmp
je
divb
inc
mov
stc
mov
stc
adc
mov
sub
test
sub
jae
mov
add
jne
mov
jmp
rcll
sbb
fsubs
lret
mov
mov
push
sbb
adc
mov
cmc
es
setbe
repnz
daa
mov
pop
out
jmp
scas
push
out
pop
in
lea
ja
mov
mov
les
cmp
enter
adc
cmp
jbe
jmp
xchg
leave
fimull
pop
inc
xchg
mov
insl
iret
gs
lcall
mov
xchg
sub
mov
inc
fiaddl
push
xor
lcall
adc
adc
std
push
fsub
bound
fxch
fnstenv
out
pop
inc
inc
hlt
or
dec
dec
lock
orl
or
inc
push
inc
mov
in
addb
hlt
shll
or
jno
pop
mov
pop
mov
cmpsl
cmp
xor
lods
xchg
push
cs
dec
and
xchg
int3
sub
icebp
dec
dec
iret
cmp
jle
inc
pop
clc
pushl
ja
jge
xchg
mov
aad
test
popf
addr16
fldl
mov
adcb
fdivp
xor
das
xchg
rcll
and
mov
inc
add
jb
push
xchg
push
sub
ret
inc
hlt
xor
mov
fcmovb
adc
lcall
loop
mov
dec
call
inc
lea
enter
aaa
xor
fstpt
pop
test
pop
inc
inc
pusha
and
inc
inc
sub
je
jb
cltd
roll
jmp
das
push
or
cli
cli
aad
xlat
stos
inc
dec
js
ds
in
repz
sbb
jno
jl
sub
sub
push
cmp
jne
push
dec
pushf
nop
add
cmc
repz
popa
gs
outsb
hlt
xlat
pop
mov
pop
cmpsl
insl
fistpl
jmp
mov
and
add
add
sub
cmpsl
nop
fstpt
pusha
in
fdivl
jmp
jge
mov
mov
sahf
adc
adc
push
lret
push
outsb
ret
insb
pop
jl
push
dec
imull
movsl
add
pushl
mov
stos
pop
popf
loope
sub
jnp
add
cmp
ds
push
pushf
add
cwtl
sbb
mov
dec
testb
lcall
movb
in
xor
pop
jne
push
cmpsb
add
mov
les
mov
scas
hlt
pop
push
push
pop
push
mov
lahf
cmp
icebp
bound
addl
sbb
int3
ss
out
mov
mov
mov
clc
ljmp
jae
pusha
sahf
ja
dec
js
push
stos
mov
xorb
or
fdivl
jno
cmp
inc
adc
bound
inc
adc
loope
je
xchg
mov
dec
or
jmp
push
aad
out
mov
arpl
sbb
xchg
ja
dec
frstor
data16
add
fdivrl
xchg
cmp
inc
out
mov
clc
inc
or
pop
dec
adc
cwtl
xor
arpl
addb
bound
or
rcrl
pop
mov
call
test
rcl
daa
repnz
rorl
mov
cli
lea
dec
mulb
lahf
sbb
lret
and
and
dec
pop
mov
mov
xchg
das
insb
outsl
mov
dec
fisttps
lcall
inc
inc
jno
dec
sub
fildl
imull
lods
into
out
cli
cmp
sub
pop
les
mov
xchg
push
mov
test
pop
mov
mov
dec
sbb
push
sbb
mov
jge
mov
stos
push
inc
decb
pop
jl
fsubp
imul
adc
adc
hlt
sbb
adcl
mov
fs
lds
stos
aad
jns
mov
sbb
test
cwtl
popl
js
mov
into
dec
sub
add
jg
inc
pop
je
sub
xlat
fidivrl
xchg
mov
jge
pop
sbb
mov
in
cmp
dec
inc
mov
sbb
xchg
cmpsb
gs
jae
loop
in
push
lods
test
stos
push
push
jo
daa
movsl
pextrw
mov
dec
inc
sub
je
aas
mov
cmpb
xor
cmpsl
mov
pusha
out
test
cltd
mov
dec
in
fistpll
or
inc
jp
mov
dec
jne
mov
push
sub
test
aad
cmpsl
fisttpll
incl
imul
orl
scas
out
orl
jmp
push
xor
das
adc
shrl
mov
cmp
push
push
push
xlat
xchg
xor
mov
orb
mov
incb
sub
pop
cmpsb
dec
mov
sbb
xor
xor
mov
xchg
fwait
clc
xchg
daa
loop
xor
push
mov
xchg
dec
push
test
mov
mov
cmp
cmp
lret
stos
insb
sub
cmp
push
mov
pop
and
fs
stc
jno
hlt
and
fisubrs
jmp
or
mov
pop
mov
pop
fildl
mov
sahf
shll
js
push
push
dec
insl
out
pushf
push
pop
mov
add
mov
sub
sub
push
test
mull
sahf
sbb
lret
add
xchg
loopne
add
shrl
std
add
mov
lds
ja
rcll
push
adc
lahf
scas
cs
mov
gs
cmp
leave
ja
aaa
inc
sbbl
pop
inc
cmpsb
cli
cmp
and
outsl
mov
loop
push
out
sarb
mov
lret
les
lcall
gs
push
sbb
add
int3
jmp
xchg
movsl
int3
xor
jb
xchg
into
mov
xchg
push
sub
js
jne
aas
cmp
pushl
loope
add
cwtl
and
out
push
xlat
inc
mov
xor
xchg
lds
xor
cli
pop
and
pop
stc
scas
lds
fs
fwait
test
adc
pop
dec
adc
push
ss
sbb
lock
scas
sbb
pop
out
bound
push
xchg
cwtl
fistpl
adc
inc
inc
cld
std
cmc
inc
adc
aaa
arpl
daa
scas
incb
mov
adc
scas
mov
aaa
in
scas
inc
ja
push
mov
mov
icebp
cmpsb
lahf
adc
std
ja
icebp
aas
xchg
sarl
mov
jl
lret
es
push
and
aaa
inc
mov
and
cltd
add
xchg
stos
jg
mov
imul
mov
sar
movsl
or
adc
movsl
jle
push
mov
out
dec
xchg
cmc
lock
sar
and
cmc
iret
adcb
xlat
aam
mov
sub
shr
sbb
es
in
in
insb
in
jbe
push
dec
movsb
outsb
mov
push
imul
and
pop
imull
push
adc
ret
pop
sub
test
pop
jle
push
in
and
dec
imul
jmp
push
lahf
add
cltd
push
push
inc
in
subb
adc
push
adc
lret
inc
or
stos
lock
dec
xchg
dec
cltd
dec
in
pop
push
lret
xchg
push
cltd
or
and
push
sahf
imul
mov
or
inc
leave
xor
mov
push
jmp
andb
cld
out
or
cmp
fdivr
cmp
inc
decl
cmp
jmp
std
mov
jmp
mov
clc
sub
in
je
adcb
xchg
das
out
cmpsb
stos
jae
cmp
sub
cmpsl
aas
jbe
sti
add
stc
cmp
cltd
iret
scas
pop
notb
clc
sub
sarl
loop
rolb
movsb
ss
pop
and
xchg
mov
inc
adc
shrl
stos
xor
xor
stc
mov
mov
inc
lock
outsl
push
mov
bound
rcrl
aaa
mov
das
sbb
int3
mov
and
jae
and
out
adc
andl
nop
add
push
in
loopne
dec
lock
arpl
in
js
push
fwait
add
leave
idivb
cwtl
and
in
push
lock
mov
push
shrb
pop
xchg
stc
push
cmp
lret
les
icebp
mov
mov
dec
dec
push
lahf
pop
cmc
mov
xchg
mov
inc
enter
out
hlt
outsb
cmc
or
sub
sbb
mov
pop
lret
int3
sbb
les
sbb
pop
cmp
cld
outsl
shl
jo
push
loop
cmp
push
sti
sahf
rorl
mov
xchg
cld
pushf
ss
push
daa
lds
lret
aam
mov
in
mov
aas
loopne
aad
jg
mov
add
iret
cmp
cmpsb
leave
push
shl
cmp
sub
push
mov
add
cmp
fisttpll
movsl
lcall
xor
mov
aaa
icebp
jge
call
mov
add
sti
loop
call
les
sbb
mov
fidivl
jmp
inc
inc
add
mov
dec
mov
lds
jae
pop
xor
mov
lcall
rcl
jns
inc
mov
sbb
or
add
psubsb
int3
jg
in
mov
testl
ds
cmp
mov
test
aas
sbb
mov
push
insb
repnz
loopne
leave
mov
lods
xchg
pushf
xor
push
shll
outsl
inc
xchg
pop
and
mov
loope
cmc
inc
pop
bound
cmpsb
inc
mov
add
jle
fnsave
jg
cmpsb
dec
jne
std
cwtl
fcoml
lods
xchg
inc
jle
inc
ds
mul
mov
pop
call
or
fstl
push
sahf
outsb
bound
mov
inc
ss
lods
xlat
push
imul
push
int3
fs
dec
xor
imul
dec
sub
mov
jo
das
sbbl
pop
mov
dec
mov
mov
mov
add
test
push
xor
jge
sahf
xchg
fwait
sub
mov
sbbb
mov
lods
aaa
adc
orb
push
ud0
sbb
fwait
mov
mov
sub
sbb
add
mov
mov
ficomps
dec
mov
and
or
mov
aaa
pop
ja
int
mov
xchg
xor
jge
inc
sub
cmpsl
int
add
jae
xchg
vcvtpd2psy
popa
in
call
push
jnp
pop
xorb
push
pusha
pop
dec
mov
mov
loope
push
aaa
aaa
pop
shll
add
adc
lods
stos
mov
cmp
in
sbb
sub
es
mov
or
fiaddl
xlat
rcrl
or
xchg
les
or
cmp
aad
and
add
jmp
mov
cli
rcll
repnz
push
int
lret
mov
or
cmp
popf
lods
imul
sbb
sub
das
hlt
sbb
sahf
sub
or
scas
test
les
inc
push
jne
test
test
inc
mov
inc
nop
out
lret
and
je
add
shlb
cmp
rolb
cltd
add
icebp
mov
jl
mov
jle
mov
popf
cld
lret
jmp
jmp
mov
mov
pop
mov
cmp
sbb
insl
sub
std
sub
pusha
sbb
loopne
addr16
repnz
adc
fidivrs
ss
sbb
mov
pop
jbe
xchg
sbb
fists
lods
fstps
mov
push
lcall
stc
lcall
cs
push
andl
cmp
icebp
dec
xchg
arpl
jp
xchg
movsl
push
jmp
and
stos
pop
jno
mov
cmc
stc
pop
mov
fnsave
or
jmp
xchg
scas
dec
push
jecxz
add
adc
loop
ss
fimull
sub
or
inc
xchg
sbb
sub
cld
call
push
push
mov
push
fsubrl
outsl
ret
push
mov
adc
push
adc
dec
sbb
mov
dec
pop
cltd
xchg
jecxz
fwait
bound
outsl
lcall
and
rcl
loop
rorb
insl
dec
jns
inc
push
mov
or
push
aam
mov
dec
popa
adc
sub
mov
inc
adcl
push
pop
push
mov
pop
push
test
dec
int3
sub
dec
rcr
ret
js
mov
ret
pop
mov
addl
xchg
in
cmp
push
add
jbe
fldcw
test
jb
lods
mov
in
lods
mov
ds
sub
or
jge
pop
decl
inc
data16
stos
mov
movl
enter
mov
mov
add
cld
in
js
jge
xchg
pop
fsubs
jns
adc
push
cmp
mov
mulb
iret
aad
cwtl
inc
loope
inc
test
jb
jl
cmp
or
sbb
add
ret
pop
adc
mov
cmp
test
bound
mov
mov
or
insl
and
mov
mov
pop
aas
movsb
fdivp
fiadds
test
add
mov
adc
lahf
sahf
mov
ljmp
adc
pop
cmp
test
dec
pop
ret
scas
mov
sbb
rcll
push
xor
cmp
enter
jo
mov
or
ljmp
inc
push
mov
aam
cmpb
sbb
mov
sub
add
scas
adc
sub
fs
jp
ret
xchg
adc
enter
mov
jnp
lret
jne
jecxz
xchg
mov
arpl
nop
xorb
cmc
loop
cmp
mov
sbb
dec
lods
fs
xorb
shlb
push
arpl
cmpsl
scas
bound
mov
xchg
aas
inc
adc
pop
jge
lods
push
out
mov
repz
cwtl
imul
fldcw
mov
cmpl
jmp
mov
inc
add
cmp
rclb
aas
pop
movsb
out
add
jnp
out
mov
mov
xor
into
es
jp
lcall
mov
mov
jnp
inc
lock
xchg
jno
dec
jl
adcl
cwtl
aas
pop
push
cli
sub
jb
jnp
sub
fsubs
adc
pop
or
and
jge
clc
mov
push
jmp
pop
cmp
in
leave
push
fcmovb
dec
das
sub
sbb
dec
loopne
lods
lods
jmp
test
push
ja
push
and
sbb
outsb
jae
cmp
mov
cmp
inc
xchg
mov
fistpl
lahf
int
xor
push
outsb
push
add
xlat
lahf
enter
jge
loopne
mov
xchg
cmp
or
lret
rol
mov
or
xor
and
sti
fs
jnp
mov
push
mov
scas
test
or
push
insl
dec
repnz
mov
out
mov
pop
pop
xor
stos
dec
jl
int
int
fdivrl
call
ljmp
decl
mov
sti
aaa
inc
lea
and
mov
push
push
sub
aad
pusha
pop
rcr
pop
mov
ret
lahf
insb
jne
push
pop
int
push
loopne
pop
inc
or
cmp
jl
insb
and
xchg
push
jl
push
imul
mov
rol
xchg
lahf
sbb
mov
or
mov
inc
jecxz
fisttps
icebp
aas
aas
movl
dec
push
sub
pop
xor
out
outsb
je
js
imul
lds
das
pop
sub
or
jo
scas
in
mov
mov
adc
gs
push
jne
pop
xchg
pushf
stos
imul
mov
rorl
jmp
out
cld
inc
je
loop
scas
insl
push
add
sti
adc
aad
data16
aam
cs
ljmp
ds
jo
cmp
fnsave
enter
xchg
in
xor
and
je
or
jg
jns
imul
shll
ret
sub
jle
cmp
subb
jne
jg
mov
sbb
pop
sarb
sbb
lahf
ds
lcall
or
sbb
xchg
pop
cld
fmull
add
in
lds
xchg
mov
pop
jb
cmpl
mov
outsl
rcr
or
shl
adc
jecxz
cld
scas
js
inc
and
arpl
pop
or
loop
mov
xor
lret
lods
jnp
int3
jb
les
mov
cmp
adc
incb
lahf
pop
mov
sbb
cs
xor
test
loope
add
mov
pop
mov
adc
movsb
ret
push
xchg
testb
adc
mov
inc
pop
sbb
pop
fisttpl
fadd
sbb
sbb
xchg
xchg
ds
test
es
aad
sti
cmpsb
subb
jo
outsb
mov
cmpsl
cld
loope
fcmove
fisubl
cmp
testb
push
mov
jno
data16
dec
cmpsb
int
fcompl
ljmp
in
mov
popf
mov
subb
pop
adc
cmp
push
and
bound
xor
xchg
mov
in
push
bound
addr16
and
pop
mov
and
je
cmp
inc
xchg
dec
cmp
mov
push
mov
int
pop
pop
adc
xor
into
popf
dec
fstl
lahf
int3
add
lods
mov
js
aad
adc
popa
lahf
mov
xchg
and
ss
push
nop
push
int
fs
add
into
or
xchg
xchg
jns
stc
daa
cmp
pop
mov
jne
mov
mov
es
mov
enter
and
ljmp
aas
test
adc
in
dec
mov
dec
lcall
insb
stc
movsb
scas
lods
add
sub
dec
sub
js
cmp
cmpl
dec
mov
pop
dec
push
cmp
push
sub
popf
out
js
and
lret
ret
xor
xchg
cmpsb
clc
icebp
ja
push
sahf
dec
pop
fisttpl
sbb
xchg
clc
fadd
sbbb
into
push
push
push
inc
sbb
loope
pusha
int3
gs
lods
cmp
fidivrs
pop
jl
cmp
pop
in
sbb
imul
or
xchg
cli
lcall
pop
cwtl
mov
xor
cmp
xlat
cmpsb
or
test
pop
cmp
stos
inc
insl
push
and
pop
lcall
cld
fcoms
ljmp
cmpsb
add
or
cmp
into
sbbb
iret
leave
sbb
dec
jmp
leave
mov
mov
jp
dec
icebp
hlt
mov
fbld
addr16
popf
pop
clc
in
lock
mov
dec
addr16
sbb
fwait
mov
outsb
pushf
lea
jl
mov
lret
cli
in
or
jge
lds
cmpb
adc
daa
jb
aam
xor
out
dec
fwait
shlb
xor
jbe
es
addr16
or
mov
mov
lahf
shlb
push
xor
dec
rcll
mov
xchg
movsl
lds
xchg
test
cmpsl
pop
inc
jge
ss
imul
stc
push
rolb
gs
bound
pop
sahf
xchg
mov
inc
jnp
push
cmp
fwait
adc
push
les
mov
scas
sub
lret
xor
mov
xchg
lahf
js
cmp
inc
repnz
mov
andl
or
xchg
arpl
imull
xchg
insl
xchg
outsb
hlt
stos
cmp
xor
call
hlt
push
std
dec
sahf
idivb
mov
push
mov
leave
mov
push
push
pop
ret
out
repz
add
and
fcmovnu
cmp
mov
push
xorb
jecxz
mov
in
shll
je
cli
pop
sbb
arpl
dec
jbe
pop
dec
cltd
test
mov
mov
lods
ja
in
mov
sbb
aad
fists
bound
icebp
sub
loop
dec
cld
jl
movl
nop
inc
movsl
mov
call
adc
andb
pusha
inc
cmp
mov
adc
or
sahf
cs
sbb
mov
and
xchg
leave
dec
pop
or
les
add
jb
and
sub
sbb
pop
fs
ret
push
pop
xchg
mov
sub
pop
push
push
sub
pop
jns
or
js
popa
cwtl
or
test
popf
into
int
testl
loopne
xor
push
pushw
cwtl
movsb
mov
sub
into
dec
xor
cmp
xor
rcrb
mov
js
aaa
pop
out
jg
bound
int3
mov
push
add
test
in
test
ret
das
and
or
test
bound
lret
fists
ljmp
in
into
faddl
adc
icebp
sahf
sar
cwtl
mov
or
push
mov
pusha
xor
pop
mov
add
jb
xchg
or
lods
loop
sbbl
dec
stos
dec
and
cmp
dec
sbb
inc
xor
imul
loopne
adc
stos
aam
cs
push
sbb
dec
inc
or
enter
pop
push
hlt
sub
push
jecxz
push
out
out
xchg
xor
inc
ja
mov
mov
mov
adc
adcb
orl
sarb
iret
mov
push
and
mov
call
or
in
je
adc
lods
cmp
pop
test
push
push
out
pop
push
or
sub
and
mov
int3
in
xor
mov
je
shl
ja
int3
stc
sbb
xchg
pusha
lea
dec
mov
xor
sbb
mov
or
ds
shrl
sub
add
or
incl
sub
adc
mov
fwait
adc
mov
out
add
sbb
inc
xchg
fisttpll
dec
repz
mov
dec
das
outsl
adc
notb
test
clc
js
jle
out
pushf
stos
lods
jbe
ret
outsl
push
icebp
test
mov
jle
pop
pop
xor
add
xor
jno
sub
test
negl
jg
or
xchg
jle
lcall
add
xor
push
cmpsb
shll
push
daa
bound
je
ss
sub
and
into
es
sub
cmp
out
lcall
xchg
gs
pop
mov
stos
xchg
aas
and
add
jmp
push
stos
icebp
or
setge
mull
scas
add
stos
test
xor
and
inc
cmp
aad
sub
cmpsb
mov
dec
scas
dec
iret
pop
js
mov
or
jp
dec
add
repz
or
push
fwait
dec
jp
push
pop
pop
aaa
xchg
stos
inc
inc
lds
fdivs
test
in
ficompl
mov
test
in
push
push
jg
lret
add
lods
cmpsb
outsl
in
stc
add
enter
xor
leave
mov
aam
pop
cmp
mov
std
sbb
lcall
int
mov
xor
push
mov
sbb
int
test
pop
push
jp
aas
shlb
inc
stos
inc
jne
xchg
loopne
sti
fistpl
mov
in
jne
mov
pop
fisubrs
inc
hlt
ds
mov
push
adc
out
mov
jmp
popa
data16
test
ljmp
jae
mov
push
aad
jmp
ret
movsb
sahf
xchg
repnz
push
xchg
lds
push
lods
push
movsl
iret
pop
pop
in
mov
addr16
lods
mov
sub
pop
das
call
fistpll
mov
cmc
inc
add
leave
jnp
adc
mov
add
fwait
cmp
shlb
out
pushf
dec
sub
xor
fs
push
ficomps
cli
cmp
imul
add
push
cs
cmp
xchg
pop
int3
lock
clc
movsl
repz
lret
inc
cmp
jb
inc
int
lods
movsb
cmp
sbb
pop
xchg
xchg
jns
pop
sahf
xchg
sbb
imul
mov
push
xor
mov
sub
lods
out
push
or
sbb
dec
ss
mov
je
add
pop
inc
aas
jne
and
cs
scas
xchg
or
jge
call
sub
dec
xor
mov
in
enter
mov
sbb
stos
and
sti
cmc
inc
and
xor
push
outsl
leave
mov
imul
fcompl
push
adc
movsb
inc
push
rorl
adcb
into
pop
mov
shlb
dec
cmp
inc
mov
sbb
dec
and
faddl
gs
and
stos
loop
aaa
shrb
aad
xchg
addr16
mov
cs
jne
scas
pop
roll
shrb
add
insl
jg
cmp
in
sbb
in
shlb
lods
mov
insb
stos
hlt
test
jmp
push
and
popf
testb
stos
pop
in
xor
jmp
xchg
mov
sbb
scas
fcmovb
push
stc
ds
cmpsb
sbb
push
sbb
push
sbb
sarb
bound
push
sub
add
cmp
pop
pop
push
dec
cmp
adc
mov
push
pop
insl
push
jne
test
inc
add
pop
pop
mov
pop
popf
sub
adc
insb
xchg
cwtl
sbb
test
push
xchg
aam
push
ss
mov
sub
int3
mov
add
sbb
mov
add
stc
or
mov
inc
pop
subb
in
std
xor
sbbb
popf
mov
int
mov
mull
pextrw
test
shlb
rcr
sub
in
rolb
dec
dec
ds
lods
ret
movsb
addr16
mov
jnp
xchg
lods
mov
jl
xchg
mov
fdivr
xchg
movsb
aad
push
xchg
les
cmp
jle
cmpsb
jge
push
fldz
xchg
idivb
aam
dec
mov
and
testb
mov
xor
sub
xorl
leave
jae
or
pop
call
xchg
dec
xchg
aas
movsl
sbb
test
pop
add
movsl
repnz
push
loopne
xchg
sbb
int3
pop
enter
pop
and
jnp
add
pop
cmp
lcall
in
push
jl
sbb
mov
add
popf
imul
xchg
sub
setne
adc
pop
dec
xor
sarb
mov
mov
lahf
xor
cli
loop
xor
lahf
or
imul
jle
dec
int3
lret
xchg
pop
xchg
mov
xor
cmp
movsl
sub
and
stos
cmp
mov
sbb
int3
adc
mov
ds
xor
mov
cs
mov
int
gs
enter
cltd
inc
pop
cmp
mov
cld
nop
inc
cmpsb
sub
jle
sub
jle
push
mov
es
std
xlat
push
sti
adc
dec
test
test
out
or
adc
add
js
shll
sahf
out
mov
cwtl
and
lds
cmp
xor
dec
sbb
lcall
popa
mov
cwtl
dec
xchg
or
cmp
pop
aad
int
push
fnstsw
cmp
cmpsl
in
sub
mov
or
dec
mov
je
mov
mov
jmp
out
imul
daa
cld
ss
cs
xlat
inc
lahf
inc
adc
and
outsl
outsb
leave
fnstsw
aad
pop
mov
gs
jbe
jae
lahf
sti
mov
jns
inc
decl
nop
jne
mov
inc
inc
add
mov
and
inc
daa
mov
lcall
into
rcll
negl
movsl
push
push
popa
pop
xchg
aas
outsb
std
jo
push
bound
dec
sub
lahf
mov
fmulp
mov
pop
lock
pop
loop
xchg
mov
loope
aad
and
es
test
sti
test
pop
mov
mov
lahf
aaa
icebp
ljmp
mov
insb
mov
sbb
or
mov
lods
notb
and
mov
mov
fwait
xorb
push
pop
cmp
gs
jmp
lods
push
cwtl
iret
xor
add
xchg
sti
icebp
push
jae
into
ljmp
mov
jp
sub
push
xor
mov
adc
mov
mov
push
arpl
jl
ret
sbb
mov
sub
lret
jecxz,pt
je
pop
jae
fwait
ficoms
cmp
dec
push
repz
lods
jp
cli
dec
mov
jbe
filds
mov
cmpsl
and
xchg
or
ss
adc
mov
sub
inc
push
dec
add
mov
push
cwtl
cmc
insb
mov
cmpsl
xor
stos
sub
cli
je
dec
loop
ds
shlb
jbe
mov
loop
loopne
and
loope
stos
cmpl
cmp
dec
outsl
psllq
fsts
or
nop
cli
js
rep
sub
mov
mov
pop
into
lods
adc
out
pop
xor
sbb
and
enter
shrb
sub
xor
inc
push
lods
mov
xchg
das
jae
and
pop
and
ffreep
inc
push
sub
loop
call
packuswb
mov
dec
cmp
and
mov
mov
pop
pop
jmp
pop
push
inc
adc
out
jns
mov
cmpl
dec
adc
loop
int3
xor
adc
fidivrs
jae
jecxz
push
lods
push
rol
mov
sbb
sbb
test
sti
pop
es
stos
and
fs
or
enter
inc
loopne
ljmp
push
dec
shrl
cltd
dec
stc
mov
andl
push
jne
adc
insl
or
fmull
mov
subb
xor
setge
ror
sub
dec
and
jmp
std
negb
in
call
fs
mov
test
ret
mov
pusha
dec
shll
testl
roll
sti
adc
outsb
loopne
adc
call
addr16
mov
and
pop
mov
test
sbb
je
xchg
sahf
cs
inc
mov
shl
or
mov
mov
ljmp
or
jecxz
fidivs
mov
push
jo
ja
xchg
pop
dec
fistpll
insl
je
ret
fwait
xchg
out
cltd
mov
test
adc
inc
xor
push
cltd
dec
sahf
dec
pop
lcall
cli
add
inc
mov
pop
and
cmp
fdivr
lds
sub
sbb
mov
mov
nop
cs
ljmp
aas
adc
push
xchg
inc
cpuid
cmp
aam
ja
icebp
xor
ret
push
xor
dec
dec
jo
xchg
dec
subl
daa
lret
jmp
dec
sub
out
das
xor
cmp
ficomps
ja
bound
aaa
sti
push
inc
lret
into
push
mov
pop
stos
mov
hlt
mov
popa
out
sti
test
data16
mov
and
loop
iret
inc
cmpsl
add
repnz
jno
or
fsubr
jmp
leave
hlt
shlb
add
xor
insb
and
cld
and
add
imul
push
sbb
push
sbb
sub
sub
sarl
cli
mov
js
or
sub
shlb
cli
sbb
call
fiaddl
cmp
sbb
pop
shrl
xor
mov
mov
lret
in
push
daa
push
fs
and
push
push
and
dec
inc
lods
jne
xor
cmp
int
inc
ret
popa
or
or
sbb
sti
sub
xchg
jle
or
adc
xor
cli
or
mov
sub
aaa
fcoms
mov
fstl
push
out
addr16
jge
mov
cwtl
mov
cmp
pop
xchg
jmp
jecxz
sub
xchg
test
pushf
pop
imul
lahf
add
jmp
sbb
mov
mov
mov
aas
xor
sbb
cmpsb
mov
in
xchg
sti
movsl
xlat
out
jnp
push
xchg
iret
pop
inc
mov
iret
data16
out
cmc
inc
pop
pop
jnp
mov
push
pop
pop
push
xchg
ds
dec
cmp
popa
popw
jp
popa
dec
mov
push
cwtl
and
stos
pop
push
repnz
and
mov
xchg
ljmp
aas
mov
mov
adc
pushf
je
decl
xchg
fidivs
cmc
lcall
sbb
cmpsb
fwait
jmp
cmp
mov
scas
jb
push
cltd
fidivs
push
inc
xchg
jnp
cmp
pop
inc
daa
add
test
sbb
adc
dec
lea
mov
orb
inc
pop
daa
popf
cmpsl
jae
test
cmp
mov
mov
mov
sub
mov
dec
repz
sub
cld
pop
jne
cltd
addr16
data16
fcompl
imull
pop
cmpsl
popa
fidivrl
pop
push
pop
test
shll
inc
into
cmpsb
xchg
movsl
ret
jge
mov
cld
out
loope
inc
nop
and
or
cmp
mov
out
dec
cli
mov
xor
mov
mov
mov
popf
dec
ss
notl
movl
loopne
xchg
lcall
push
cmpsl
rcll
clc
xor
push
in
into
dec
jbe
outsb
test
mov
cmpb
pop
stc
mov
mov
push
mov
pusha
cmpl
sub
jg
mov
jo
xchg
mov
addr16
push
imul
ss
and
push
jmp
mov
test
lret
in
cmc
mov
xlat
fists
loopne
ljmp
frndint
mov
stos
mov
int3
rorb
jl
in
pop
fstpt
pop
dec
pop
xchg
fxch
sub
outsl
cltd
imul
insb
cmp
push
test
pop
pop
daa
adc
xor
imul
push
jne
adc
xchg
daa
mov
push
lds
sbb
push
xor
and
xchg
icebp
cld
push
lret
sti
mov
lcall
mov
sub
inc
addb
outsl
out
pusha
es
sub
out
cli
xor
bound
insb
orl
push
cmp
add
leave
shl
add
jbe
pop
clc
mov
mov
xchg
jecxz
pop
adc
pop
jbe
cmpxchg
mov
xor
lahf
test
nop
imul
aad
dec
lods
xor
cmp
sbb
inc
and
pop
xor
loope
pop
insl
icebp
push
inc
pushf
int3
arpl
jne
lock
out
adcl
testb
pop
cmp
xchg
cmp
pop
and
inc
and
sub
mov
cmp
adc
in
jge
stc
push
push
test
dec
in
jo
dec
mov
fdivl
out
int
loopne
popl
adcl
arpl
inc
test
outsl
push
adc
pop
inc
push
ret
pop
popf
int
shl
out
adc
test
clc
xor
push
cmpsb
jmp
and
lds
sbb
inc
inc
cmp
or
enter
push
cmpsl
sbb
cmpsl
mov
cld
loop
iret
hlt
test
hlt
fwait
mov
jg
dec
xor
ret
loopne,pt
jb
sbbb
sbb
gs
into
cmpl
mov
lds
cld
insl
sbb
cmp
pop
pop
lcall
js
fs
adc
adc
out
add
sbbb
lods
fcoml
xor
test
or
push
mov
cmpsb
icebp
pop
int3
cmp
add
lret
arpl
push
fisttps
mov
rolb
mov
or
cmp
dec
sbb
into
inc
adc
and
daa
jmp
cmp
xor
leave
mov
push
inc
and
ss
or
xor
loop
or
cmp
or
add
inc
jne
mov
and
dec
inc
cltd
jl
cmp
pop
lret
jle
in
gs
jbe
repz
loopne
mov
idivl
mov
mov
sub
jl
mov
pop
dec
xor
mov
or
jo
imul
ficomps
mov
addb
rcrl
sbb
repnz
mov
sbb
loop
mov
mov
mov
fs
dec
mov
aad
push
xor
jmp
sub
mov
scas
pop
in
mov
sub
add
addr16
rol
aaa
sub
mov
repz
nop
xchg
or
sar
or
adc
mov
inc
cltd
jg
push
jnp
js
cmp
or
loop
jmp
test
jne
or
inc
int
test
inc
lea
in
out
scas
mov
xor
jle
insb
mov
jo
stos
adc
and
enter
arpl
mov
cmpsl
sti
inc
adcl
subl
inc
jnp
mov
dec
mov
cmp
repz
push
mov
or
scas
push
push
stos
les
shr
outsb
fcomp
adc
push
sbb
daa
cli
inc
pop
sbb
jmp
cmp
xchg
sub
cld
pop
repnz
mov
mov
pop
add
inc
test
hlt
sbb
icebp
sarb
xor
imul
push
test
cwtl
push
in
jae
adc
pop
mov
xchg
mov
in
cmc
loope
dec
dec
arpl
out
ljmp
popa
imul
sahf
pop
dec
dec
jecxz
xchg
push
test
pop
cmp
fwait
jne
xor
xor
xchg
sbb
inc
jae
cmp
int3
test
pushf
adc
mov
je,pt
ds
mov
arpl
notl
int3
addl
lods
dec
cld
dec
popa
addr16
imul
arpl
sti
sub
out
jmp
pop
add
or
mov
lret
push
iret
or
fisubl
insb
mov
ret
loope
pushf
sbb
xor
xchg
fimuls
inc
mov
pop
nop
loopne
out
adc
pop
mov
and
dec
sbb
adcl
cmp
jns
mov
inc
sbb
daa
add
xchg
mov
mov
leave
outsl
and
push
and
xor
fbstp
pushf
sub
popa
sbb
push
hlt
nop
mov
mov
testl
dec
jge
nop
mov
out
cltd
mov
push
xchg
jg
icebp
icebp
mov
outsl
cmpsb
xor
cmp
cwtl
pop
pop
sarb
push
cmpsb
sub
dec
jle
ss
outsb
xchg
sub
xor
leave
mov
setnp
subl
shll
inc
add
lods
insl
dec
jae
pop
adc
or
shr
adc
enter
gs
and
add
xor
add
inc
mov
adcl
scas
test
xchg
shll
movsb
inc
sbb
dec
inc
test
daa
push
sub
loop
ds
stos
ljmp
jg
in
movsl
mov
xor
mov
out
push
xor
adc
je
jbe
cltd
sbb
divps
xor
nop
outsb
or
dec
add
js
ss
dec
addr16
lret
mov
pop
frstor
adc
push
cmc
test
pop
aam
push
or
mov
jns
iret
inc
mov
or
das
mov
jo
lods
cmc
push
add
test
xor
popf
rcrb
mov
enter
pop
inc
jg
notl
xchg
push
cmp
mov
jae
push
lea
movsb
xchg
push
push
insl
mov
arpl
in
cli
lock
inc
jae
sub
push
push
in
jbe
jp
jb
idivb
mov
or
push
xor
mov
cmp
pusha
popa
lret
test
into
mov
jnp
push
push
mov
int3
test
jl
push
xor
fiadds
repnz
test
repz
xor
pushf
rolb
and
les
daa
xchg
jae
loop
sarl
mov
bound
pop
enter
and
cmp
xor
cltd
cmp
setb
daa
add
sti
aas
adc
fisubs
jp
jg
and
js
push
mov
imul
xchg
in
jns
cmp
sahf
jp
dec
ret
mov
mov
lea
test
xor
xchg
iret
pop
mov
scas
ret
jae
insl
jle
sbb
push
inc
int
ja
inc
push
lahf
and
ljmp
mov
pop
lock
sub
push
lret
ss
ja
push
movsb
mov
cmp
xor
add
fwait
dec
cmpl
pop
sub
cmpsb
bound
mov
xchg
xchg
inc
adc
in
mov
call
mov
scas
cmp
mov
fsubrs
xlat
sub
xchg
ret
std
push
out
sahf
jno
push
or
mov
popa
inc
adc
adcl
inc
xchg
mov
imul
jnp
js,pt
into
dec
sub
sbb
mov
xchg
push
mov
push
jl
sub
insb
pop
push
and
cmpsl
cmp
dec
arpl
shrb
and
jnp
and
scas
imul
xchg
pop
shr
cs
fildl
nop
imul
mov
scas
or
push
xor
sbb
xchg
mov
rolb
dec
push
rorl
xor
enter
cmp
xchg
inc
lea
sbb
or
lahf
dec
jl
lods
ljmp
mov
push
je
ret
sbb
and
and
sbb
aas
pop
fmuls
lods
inc
pop
inc
out
mov
pop
subb
mov
lahf
flds
dec
movsb
push
push
hlt
sub
stc
fadds
jmp
repz
fcmovb
stos
cmc
notl
scas
stos
jbe
push
cltd
repnz
pusha
jle
cwtl
mov
xchg
mov
fmul
lods
loope
aas
pusha
fdivrl
xor
push
insw
lock
or
fistpll
mov
jnp
cli
sub
jle
cmp
jae
jp
dec
inc
xor
test
push
and
test
imul
ja
arpl
imul
int3
mov
ja
jg
iret
xchg
dec
dec
jne
sarb
stos
push
aam
cld
outsb
ret
hlt
lret
pop
sarb
sub
jmp
movsb
sub
inc
lea
mov
mov
jmp
pop
lea
mov
jne
dec
fcomps
sub
mov
rorl
inc
rcl
jns
stos
hlt
repz
movsb
out
das
lcall
pop
rcll
push
adc
and
loope
cmpsl
loop
sti
adc
adc
in
leave
sub
mov
sbb
cmp
push
xchg
mov
loope
or
and
inc
adc
lods
sub
cmp
cmpsb
aad
xchg
adc
addr16
xchg
bound
xchg
insb
loop
testb
aad
and
mov
mov
jecxz
roll
xchg
andl
pop
frstor
jae
out
pop
movsb
ja
mov
adc
fwait
in
xor
sub
inc
push
test
cli
enter
or
cmpsb
cmpsb
movsb
scas
cmp
jl
cmp
and
cmovnp
cmp
jmp
flds
or
or
loop
mov
mov
mov
add
addr16
data16
cld
xlat
das
add
jmp
dec
scas
sahf
das
lahf
mov
dec
add
or
aam
dec
adc
aam
push
lret
cmp
mov
inc
sarl
lds
push
pop
rorb
inc
addr16
mov
jp
add
inc
sbb
jp
jb
inc
mov
mov
mov
xor
push
arpl
xchg
and
ret
ss
dec
jmp
jecxz
dec
inc
sub
push
push
pop
fdivs
lods
fisubs
cwtl
xlat
fdivs
mov
push
xchg
xor
add
aad
dec
inc
mov
call
xorl
jle
jmp
loopne
stos
clc
mov
jmp
aas
add
add
arpl
mov
es
inc
push
inc
into
fwait
stos
push
dec
pop
push
sbb
outsb
adc
jb
loope
jmp
fsts
pop
pop
xchg
imul
cmp
inc
or
add
push
dec
test
pop
adc
mov
sub
lods
aad
pop
aaa
das
ja
mov
test
fs
in
leave
or
rorb
mov
jns
sbb
push
dec
popa
iret
int
lods
rclb
mov
mov
xchg
push
testb
xor
dec
loope
and
les
sti
jecxz
test
shrl
loopne
jbe
jp
sub
dec
push
dec
sub
popa
adc
dec
jbe
movsb
aad
lea
xor
mov
inc
xor
les
jo
sub
add
inc
push
mov
sbb
sub
xor
add
test
push
add
xor
mov
scas
cmp
sti
jno
cli
lret
mov
sbb
and
movsl
xchg
push
je
not
ss
leave
sarl
clc
stos
fisubl
jge
sub
mov
aaa
mov
sti
sbb
xor
adc
jne
mov
add
in
mov
addb
and
push
orb
dec
das
jno
fxtract
inc
sti
mov
adc
incl
nop
popf
mov
addr16
cmp
push
push
mov
rorl
mov
movsb
and
stos
sarb
scas
jge
mov
xchg
lret
pushf
ds
sub
test
xchg
cmp
mov
out
pop
add
xchg
cli
imul
mov
adc
lea
push
xchg
xor
mov
int3
ss
sar
dec
jecxz
adc
mov
push
scas
push
or
pop
bound
jmp
arpl
jnp
int3
jecxz
or
shlb
div
in
lods
inc
mov
inc
xor
stos
inc
orb
cmc
mov
out
pop
xchg
jmp
or
or
adc
pop
mov
not
or
mov
lods
bound
dec
cmp
iret
fsubp
mov
pop
mov
cmp
dec
movl
sti
adcb
iret
cmpb
sbbl
fld
cs
push
sbb
mov
or
ja
icebp
pop
push
out
imul
jae
mov
and
xchg
adc
adc
jnp
bound
mov
out
out
nop
and
xchg
in
mov
push
insb
mov
ret
mov
cwtl
cmpsb
xchg
test
push
xchg
inc
decb
sub
xchg
ja
mov
stos
loope
popa
sub
je
xor
mov
lahf
std
lret
mov
ret
sbb
xchg
outsb
cltd
jo
mov
sbb
dec
jge
loop
mov
popa
dec
inc
sbb
enter
into
movsl
mov
jbe
inc
leave
cltd
jno
dec
add
jnp
mov
data16
aaa
les
je
les
push
and
leave
add
jl
cwtl
js
jbe
and
rclb
mov
rcl
mov
out
mov
sub
jmp
cmpsl
push
fxch
dec
and
nop
sarb
xor
xchg
add
test
lret
into
leave
mov
shrl
cmp
jbe
sbb
jno
push
fadds
push
sub
dec
in
inc
sti
std
inc
fimull
xor
jle
sahf
sbb
lds
push
mov
xor
fcmovbe
pop
or
stos
ret
stos
sbb
push
in
data16
push
mov
pop
xchg
add
cmc
cld
divb
insb
imul
mov
jns
call
ffreep
mov
out
mov
adcb
jmp
sbb
mov
adc
add
jg
sbb
in
aad
mov
rcrl
sub
jp
jecxz
lods
addr16
adc
or
pop
int3
sub
xchg
adcl
add
mov
fcoms
sub
mov
and
xchg
andb
push
js
inc
push
xchg
xor
cmpsb
and
mov
jl
repnz
xor
loopne
add
imul
rcrl
cmp
adc
xor
jae
push
adc
inc
fwait
es
pop
xchg
out
lret
adc
daa
lret
lcall
dec
sub
jmp
div
xchg
in
sbb
inc
push
jp
lock
sahf
cmpsl
push
add
je
mov
inc
ja
rep
lahf
cmp
lcall
jge
pop
ror
aad
test
xor
push
adc
sub
inc
sub
shll
xchg
and
push
cmc
sub
iret
mov
test
mov
and
xor
mov
fcmovne
jns
push
aad
cmpb
pushf
cmp
mov
and
insb
jge
mov
in
or
inc
mov
push
into
add
push
xchg
push
rcrb
dec
fdiv
subl
outsl
mov
test
pop
repnz
jmp
mov
arpl
mov
mov
popa
cmc
ljmp
sub
adc
mov
shrb
adc
mov
loope
sub
lock
in
or
popl
pop
xor
push
lock
dec
in
push
addb
add
push
pushf
cld
cmp
sbb
fildll
xor
imul
frstor
mov
loop
mov
pop
adc
fidivrl
pop
pop
fidivs
cmpsb
scas
scas
test
daa
cmpb
stos
jmp
cmpb
shrb
jle
out
arpl
and
mov
push
sub
inc
adc
or
cwtl
dec
push
lret
aas
ljmp
aad
test
xchg
loope
jo
dec
popa
out
bound
push
mov
adc
push
gs
mov
out
cmp
pop
inc
stos
jae
jg
addr16
jmp
test
mov
jp
movsb
imul
les
pusha
cmp
pop
and
xchg
adc
mov
or
xchg
mov
in
in
js
mov
and
dec
movsb
xor
add
add
push
mov
movsb
addr16
push
out
pop
inc
fbstp
popa
xor
sub
hlt
mov
ret
sbb
mov
shl
shrb
push
adc
inc
dec
or
or
xchg
fildl
in
stos
sbb
lret
jno
jbe
ret
ret
iret
and
or
add
ds
mov
je
lods
jle
xchg
push
ss
xchg
es
mov
pop
ficoml
ljmp
push
popa
addr16
xor
push
outsb
test
mov
push
into
daa
outsl
sub
pop
je
jnp
lcall
mov
lods
or
fnsave
pop
mov
cli
mov
inc
sbb
mov
or
mov
in
jae
das
les
ret
aas
aaa
sub
cld
dec
xor
enter
loopne
cmp
mov
popf
popa
pushf
jecxz
xchg
daa
xorb
test
cmp
mov
mov
and
mov
fs
pop
push
mulb
push
outsb
add
jne
dec
mov
ffreep
mov
inc
sbb
fbld
in
lock
push
pushf
dec
jl
lods
cmpsb
nop
lcall
inc
ffree
and
rolb
cmp
arpl
xchg
jbe
scas
fimull
or
pop
mov
inc
ljmp
inc
push
jb
pop
jl
xor
fdivrl
in
nop
pusha
push
adc
lahf
mov
jne
add
aam
sub
jg
outsb
add
push
sbb
int3
xchg
sbb
lods
adc
repnz
add
xchg
jnp
dec
popf
inc
xchg
mov
loopne
clc
sarb
ret
pop
adc
fiadds
iret
push
mov
pop
aam
or
fwait
xor
add
push
loopne
xor
pop
outsb
incl
orb
cmpsb
mov
dec
jne
int3
or
popa
adc
mov
data16
cwtl
ss
test
jmp
ret
sub
jno
mov
sub
pop
xor
stos
fnstsw
lea
xchg
test
dec
dec
ror
dec
mov
cmp
cmpsb
outsl
adc
sti
lahf
inc
pop
xlat
push
je
mov
cwtl
nop
test
pop
inc
mov
or
jnp
xorb
imul
in
and
jmp
shr
xor
rcll
fadd
pushf
repnz
or
cli
and
push
repz
mov
outsb
cmpsb
in
dec
pop
sti
xor
fdivrl
sub
mov
js
int
sub
mov
xchg
mov
pop
and
cmp
or
cmpsl
pop
cmp
loope
syscall
stos
call
lock
or
test
rclb
jmp
and
push
push
jne
dec
fldl
cmpl
leave
xor
lods
imul
fwait
mov
sbb
cld
mov
shrb
mov
inc
xchg
push
push
rclb
xchg
mov
addb
dec
js
out
call
jge
fidivl
aad
fnsave
popf
pop
push
push
bound
sbb
rcrl
pop
pop
xchg
data16
xor
pop
divl
mov
insb
repnz
shl
imul
ret
popf
sbb
fmuls
sbb
mulb
push
push
jmp
push
adc
out
push
data16
insb
jbe
jecxz
aam
mov
adc
jg
mov
out
subl
or
adc
xchg
call
clc
jl
lret
inc
jno
push
cmc
inc
jge
add
mov
inc
stc
add
mov
pop
mov
jge
fsubl
or
and
mov
sub
mov
orb
ljmp
mov
dec
out
inc
mov
imul
push
fidivs
inc
les
lret
repnz
mov
xchg
out
into
test
fbld
idiv
push
cltd
jne
push
lret
nop
add
fadds
adc
shlb
xor
dec
or
insl
lret
cs
xchg
notl
jle
shlb
push
adcl
ja
pop
int3
sbbl
push
iret
outsb
pop
sub
pop
inc
dec
sbb
inc
mov
pop
movsl
push
or
xlat
aad
mov
inc
out
dec
push
push
adc
sub
xchg
cmp
mov
xchg
arpl
lods
in
jno
mov
sbb
mov
mov
int
mov
mov
cs
outsl
push
enter
pusha
test
dec
lahf
ret
push
pop
push
out
mov
sbb
dec
mov
js
out
dec
or
inc
repz
mov
ret
push
and
pusha
or
pop
sub
mov
movsb
pop
imul
or
sbb
mov
mov
pop
mov
adc
lahf
xor
ja
sub
pop
fldcw
mov
lods
sar
insb
or
jecxz
icebp
push
add
cmp
inc
push
mov
inc
sub
loopne
dec
std
and
xchg
mov
clc
dec
roll
sarl
dec
adc
ret
pop
mov
shrl
cmp
pop
cmp
and
xor
std
fwait
xchg
pop
push
inc
pop
fmuls
dec
sub
fbld
movsb
cmp
testb
xor
xchg
pop
cmp
dec
decl
jmp
xchg
mov
shrl
stos
xor
addr16
push
ja
xchg
xchg
mov
fsubs
shll
in
sbb
lahf
xchg
jne
push
pop
pushf
fnsave
pop
mov
adc
pop
or
lret
shrb
sti
pop
inc
jl
xlat
add
mov
je
cld
push
roll
adc
fs
adc
cs
dec
jecxz
jmp
test
ret
jl
inc
bound
and
int3
sbb
dec
mov
popf
push
xor
lods
ret
push
outsb
or
xor
mov
lahf
cmp
xor
inc
shrb
sti
fiadds
cmp
adc
in
addr16
lock
je
adc
jne
dec
and
cli
add
jl
mov
in
xchg
mov
xor
cmp
aas
xor
jle
and
in
xchg
push
xchg
and
cmp
ja
lods
jae
mov
and
sti
loope
jl
mov
mov
test
add
dec
jecxz
jp
repz
cs
pop
dec
jl
cmp
xchg
cmp
mov
pcmpeqd
pop
cmp
push
rcll
xchg
xor
mov
or
lds
sub
shlb
sbbb
out
gs
shrb
add
outsb
out
sub
push
or
sar
adc
fwait
idivb
fcoms
faddl
mov
fstpt
jb
mov
cmp
dec
pop
adc
ds
mov
outsb
mov
test
inc
fnstcw
push
push
and
and
xchg
cmpsl
pop
or
adc
xlat
test
das
insl
mov
fistpll
and
loop
gs
popa
cmp
lahf
divb
sbb
aas
aad
lods
sub
push
fists
lds
icebp
mov
adc
sbb
jbe
mov
xchg
xchg
mov
cltd
xchg
mov
sub
mov
mov
push
jmp
out
aas
mov
or
ret
mov
dec
xor
add
lods
test
sub
out
cmpl
js
outsl
fmull
arpl
insl
xchg
push
xor
or
jge
add
or
test
inc
mov
mov
rcl
and
xor
xchg
push
ret
mov
jne
inc
or
scas
aas
dec
loopne
lea
mov
adc
cmpsl
bound
push
test
mov
push
and
sub
and
lds
lahf
out
ss
cmpsl
pushf
pop
cld
xlat
aad
xor
dec
cs
dec
push
mov
sub
test
mov
xchg
cmpsl
lds
into
sti
xchg
and
in
and
rolb
insl
stos
hlt
mov
xchg
add
mov
dec
popa
mov
in
xchg
sbb
mov
xor
inc
pop
std
xor
pop
enter
outsl
add
jl
enter
in
bound
mov
mov
gs
sbb
sbb
and
stos
mov
movsb
and
lds
cld
ret
fldenv
add
sub
or
cmc
and
dec
stos
nop
push
enter
scas
pop
push
xchg
stc
std
std
and
out
sbb
int
ja
imul
in
pushf
mov
push
test
push
scas
loop
xchg
cmp
comiss
push
daa
pop
testl
xchg
mov
cmp
lret
sub
popa
mov
mov
pop
mov
lcall
cli
test
lret
xchg
mov
or
je
jmp
xchg
or
or
movsl
xlat
cmp
imul
rep
mov
in
es
cld
cmpsl
pop
mov
push
loop
dec
rorl
rclb
movsl
lret
adc
add
dec
scas
rorb
jecxz
mov
hlt
stc
test
inc
aam
pop
push
mov
arpl
rolb
mov
pusha
test
in
cmc
pop
pop
into
jno
cmc
sahf
pop
data16
and
cmp
dec
xchg
sbb
sub
sub
cmp
xchg
das
test
adc
popa
jbe
inc
inc
repnz
ret
xchg
pushf
or
aaa
outsb
jno
movsl
roll
add
test
sub
push
xor
clc
push
mov
push
sar
fstpl
xchg
gs
adc
inc
or
push
cmp
int
mov
push
xchg
add
sbb
mov
dec
movsb
xor
jnp
incb
int
cmp
notb
pop
push
and
pop
stc
in
fdivl
jno
call
cmpsl
insl
mov
add
pop
push
jp
dec
jo
inc
pop
adc
sbb
and
jecxz
push
xchg
cld
paddsw
loopne
cwtl
dec
insl
cmp
out
in
add
cmp
inc
inc
mov
jg
movsl
jnp
mov
dec
fcoml
repnz
lea
sub
or
push
movsb
fcmovnbe
icebp
inc
pop
sbb
movsb
push
loopne
incb
adc
adc
rcrb
and
mov
cmp
pop
in
jp
sbb
xor
scas
scas
or
dec
dec
mov
cmp
fsin
and
rclb
arpl
rcl
shl
xchg
mov
fsubp
out
fidivs
adc
pop
ret
adc
jmp
call
and
jle
pop
fsts
dec
push
fldl
or
mov
daa
lret
inc
lret
incl
testl
sbb
adc
mov
dec
ss
outsb
insl
sbb
in
add
fs
inc
mov
xchg
or
loope
daa
jb
xlat
leave
xchg
mov
loope
jp
jmp
cmpsl
push
xchg
pusha
mov
adc
cltd
bnd
lock
cmp
sbb
stos
fisttps
pslld
rolb
sub
lock
mov
std
in
jne
subl
jl
clc
xor
or
cmp
xor
rcrl
xchg
xchg
dec
fistl
adc
cmp
iret
sbb
mov
hlt
lock
imul
add
insl
lods
push
fcoml
scas
ds
cmp
bound
fnstcw
adc
lahf
adc
aam
push
arpl
ljmp
cmc
and
inc
arpl
pop
lods
mov
sub
mov
mov
in
cmc
or
jns
stos
in
mov
push
in
or
out
imul
and
cmp
push
ret
jmp
clc
idivb
hlt
mov
insb
cltd
in
pushf
push
shlb
push
bnd
mov
lea
bound
test
imul
push
jb
and
pusha
and
sbb
jns
shr
icebp
inc
mov
fnstsw
jne
cmp
inc
pusha
mov
inc
add
xor
fstp
inc
scas
adc
sub
addr16
movsb
sbb
xchg
pop
cmp
cld
mov
jno
andl
mov
xchg
movsl
fwait
test
out
les
pop
mov
dec
add
jmp
mov
mov
das
mov
dec
adc
mov
xchg
das
mov
lret
cwtl
negb
lods
lds
cmp
mov
xchg
mov
out
bound
mov
mov
and
cmp
aaa
cwtl
mov
lock
cmpsl
cmp
adc
repnz
cltd
add
mov
adc
or
test
xor
mov
push
push
sbb
push
jnp
mov
mov
pusha
lds
adc
or
add
fucomp
sbb
xchg
mov
je
cmpsb
pop
js
mov
ljmp
pushf
arpl
inc
into
inc
data16
fnsave
lock
dec
or
arpl
and
pop
dec
adc
sahf
lret
ret
ret
xor
mov
sub
in
lods
push
adc
adc
mov
mov
cs
imul
in
cli
or
loope
jbe
lcall
jb
stos
and
pop
mov
pop
pop
pop
movsl
jno
mov
enter
push
cmp
out
pop
clc
cmpsl
jae
xchg
dec
jmp
mov
sahf
xor
mov
mov
outsl
pushf
xchg
fcmovbe
jne
push
icebp
test
jecxz
mov
aam
sbb
sbb
pop
subl
outsl
or
sbb
xor
inc
pop
insb
mov
das
mov
shl
push
ds
stos
push
mov
sbb
pop
jmp
std
cmpsl
addr16
sbb
fidivl
mov
mov
loope
test
mov
insb
clc
dec
sbb
outsb
mov
sbb
in
inc
fdecstp
mov
cmp
test
popf
call
pop
addr16
int3
dec
mull
sbb
lcall
push
push
or
cltd
lret
or
outsl
int3
jmp
insb
cmp
mov
xchg
cmp
or
popa
xchg
sub
repnz
nop
jp
xchg
pop
cmp
mov
loopne
int3
test
inc
pushl
inc
cmp
or
cmp
push
cmp
or
mov
or
mov
cmp
sub
xor
pop
ds
out
inc
shlb
lret
shlb
jne
add
xchg
pop
dec
add
adcb
mov
enter
adc
int3
in
push
rclb
push
in
add
jnp
or
push
popa
adc
dec
lcall
andb
fisubs
inc
fwait
and
fnstenv
in
stos
cmp
scas
ficompl
dec
jmp
stos
daa
scas
inc
add
add
push
or
pop
xchg
jle
inc
scas
push
mov
mov
or
jl
add
shlb
icebp
mov
or
out
dec
mov
push
mov
mov
fcoml
lret
in
pop
pop
fs
movl
jp
arpl
ss
dec
sub
cmc
xor
mov
movsb
addr16
xor
lret
sahf
ror
and
mov
loope
xchg
iret
mov
sub
cli
loop
into
rclb
add
fcoml
pop
and
jns
xchg
sbb
cli
jge
cmp
cmp
cli
pop
sbb
dec
xor
adc
pop
add
pop
xor
push
jmp
aaa
dec
in
mov
inc
jbe
xlat
add
je
mov
lock
xchg
cmp
sub
mov
arpl
and
cld
std
sarl
push
fidivrs
sub
jmp
inc
mov
repnz
cmc
jb
fisttps
pop
stc
xchg
dec
faddl
pop
pop
jl
int3
pop
das
in
fs
loope
dec
adc
adcb
push
cmp
int
fldt
sub
psllq
push
shll
adc
inc
imul
mov
lods
test
daa
mov
push
fs
push
sub
jo
mov
and
sbb
pop
xor
stos
shlb
xor
iret
in
cs
sub
and
lock
loop,pt
insl
mov
cmp
jbe
imull
popf
out
mov
aas
xchg
stc
xchg
popf
testb
pop
push
cmp
lret
insb
adc
xchg
and
imul
test
mov
enter
mov
and
lahf
push
xchg
sbbb
call
sub
fildll
enter
shrb
fsubs
stos
gs
jge
daa
imul
aad
hlt
mov
lret
and
cltd
jae
adc
js
je,pt
dec
sarl
fildll
or
je
loop
shrl
mov
sbb
out
insb
lret
dec
repnz
adc
push
popf
cmp
inc
enter
pop
aad
sbb
insb
mov
cmp
push
mov
xchg
out
sub
lea
fwait
test
insl
jl
sub
cmp
cwtl
shlb
out
sub
in
in
push
lds
and
or
in
leave
pop
movsl
aas
add
into
pop
inc
pop
lret
popf
ljmp
or
pusha
xchg
in
ficoml
sahf
lods
ja
mov
jno
mov
pop
cmpsb
inc
xchg
and
and
lea
or
dec
pop
lea
jbe
cs
in
out
stc
jno
fadd
push
repz
aad
pop
fwait
stc
cmp
stos
mov
dec
xor
lds
xchg
cwtl
out
enter
out
lahf
test
adc
fnsave
aad
ja
dec
sarb
fucomp
data16
sbb
mov
enter
cmpsl
imulb
inc
mov
mov
rcrb
movsl
out
adc
out
flds
stos
xchg
aad
fucompp
scas
inc
fprem
lret
packssdw
xchg
cwtl
fsubrl
fsub
jne
jno
inc
mov
cmp
push
dec
push
outsb
cwtl
in
adc
repz
pop
and
xor
insb
add
cwtl
mov
icebp
and
dec
movsl
outsb
cltd
out
fdivrs
mov
outsl
adc
dec
mov
leave
sbb
hlt
paddusb
bound
sub
insb
and
mov
and
mov
repz
fidivs
loopne
jecxz
pop
incb
jl
push
arpl
fs
cmp
add
ret
add
jo
pop
mov
dec
out
das
add
mov
in
fidivl
jb
xchg
mov
imul
ret
push
xchg
pop
cld
cmp
shld
fiaddl
inc
sub
shlb
insl
insl
mov
sti
cmpl
cs
adc
jge
mov
xchg
cltd
stos
xchg
rcl
pop
int
mov
xor
sti
push
fs
in
les
inc
xorl
cmp
in
enter
pop
test
cmp
pop
push
jae
xor
pop
rcrl
cmc
out
jg
mov
outsw
dec
test
adc
jb
in
add
lcall
and
xchg
cmp
sti
stc
mov
xor
in
sbb
jecxz
jbe
std
jmp
and
mov
mov
mov
sub
dec
xor
es
mov
jge
xchg
mov
sub
push
and
inc
hlt
jge
push
int
push
jb
repz
xchg
inc
aad
xchg
pop
mov
arpl
daa
inc
dec
push
jno
outsl
nop
xor
mov
out
and
mov
ss
add
sub
jbe
sub
adc
add
pop
push
cmp
adc
and
push
repz
cmp
inc
sub
cmp
stos
cli
lods
cmp
or
sbb
imul
not
inc
adc
pop
jg
xchg
push
and
int
in
xor
xchg
xchg
scas
repz
cmpsb
loope
jo
push
sub
or
xchg
sahf
mov
mov
add
push
into
into
jge
iret
es
xor
std
mov
push
lret
mov
cmpsl
push
loop
push
negb
ret
xchg
pop
inc
mov
enter
lret
in
dec
insl
sbb
inc
cld
jle
cli
push
push
cli
add
ljmp
fwait
sub
pop
cli
decb
mov
cli
gs
les
xchg
lcall
lods
mov
jmp
and
lret
add
decb
fdivs
insl
out
in
lcall
fnstcw
push
aad
fbstp
xchg
inc
stos
lea
sbb
adc
lret
or
stos
popa
adc
push
xchg
out
push
mov
in
fsubs
ss
int3
fidivs
daa
push
cli
xchg
cmp
lret
movl
ficoml
cltd
add
add
pushf
loopne
push
or
add
les
cmovnp
scas
loop
fs
dec
pop
addr16
lock
jge
xchg
inc
imul
mov
or
xor
inc
flds
stc
enter
mov
push
pop
push
push
mov
imul
int
out
mov
adc
push
xchg
addr16
cmp
push
and
add
fbld
in
inc
dec
jnp
std
add
pop
fsubr
pop
cmp
jo
ja
outsb
xchg
pop
mov
pusha
stos
add
je
xchg
lea
pop
cmp
inc
arpl
xchg
sub
imul
jle
clc
sarl
addb
dec
rorl
jecxz
sub
push
mov
xchg
fisttps
inc
es
mov
sbb
jge
sub
push
fdivl
lods
add
dec
loope
push
pop
sbb
dec
mov
pop
inc
ret
pop
push
sbb
lods
shlb
xchg
and
cli
xor
out
pop
pop
iret
cmc
mov
inc
pop
and
inc
pop
mov
dec
cmp
pop
aaa
cltd
or
or
mov
in
jb
int3
mov
js
mov
sub
adc
xchg
add
mov
insl
adc
js
mov
call
hlt
push
shlb
lea
and
outsl
ret
push
loope
mov
pop
divl
sbb
mov
mov
xchg
xlat
lsl
pusha
pop
cwtl
mov
xorb
shl
movsl
shrl
mov
xor
jnp
push
enter
pop
or
iret
sbb
adc
rcrl
push
mov
xchg
cs
outsb
insl
mov
mov
call
push
sub
pop
pop
pusha
daa
popa
loope
repz
adc
stc
mov
lock
call
or
popf
mov
adc
je
sub
dec
repz
xor
add
mov
cmc
xlat
xchg
mov
in
cltd
mov
icebp
jl
pop
xchg
sbb
dec
movsl
jmp
adc
adc
cmp
subb
inc
sbb
lods
jge
das
outsb
xchg
cmp
push
enter
sub
repz
mov
pop
inc
sti
xlat
in
jecxz
pop
push
and
pop
addr16
enter
sbb
mov
add
xchg
mov
imul
pop
inc
mov
fidivrl
sbb
or
ja
pop
mov
cwtl
mov
adc
push
dec
mov
add
lods
sub
or
jmp
dec
in
loopne
ret
and
sub
mov
stos
mov
xor
or
sbbb
mov
jne
and
rcrb
mov
test
fwait
xchg
enter
sbb
fsubr
adc
mov
outsb
icebp
lods
pop
sub
mov
test
xor
ss
inc
mov
movb
mov
jge
xchg
lahf
jbe
das
hlt
into
rorl
icebp
and
addr16
inc
rclb
dec
icebp
jae
dec
mov
ds
mov
mov
out
cltd
mov
inc
push
cld
fst
scas
pop
dec
je,pt
es
pop
sbb
xchg
pmovmskb
aam
add
cmp
mov
icebp
push
jecxz
dec
add
push
in
xor
out
pop
imul
lods
jmp
inc
xchg
mov
jne
rcll
jp
sbbb
orps
add
push
sar
das
push
pop
adc
pop
push
aas
add
dec
popa
jle
sbb
mov
and
add
test
addr16
jae
push
mov
shll
sbb
jnp
xchg
or
jns
std
cmp
adcl
jge
sahf
mov
or
xor
adc
sbb
in
xor
push
inc
es
int
stc
xchg
enter
mov
insl
or
push
or
call
mov
lcall
scas
xchg
mov
sarl
mov
stos
dec
xlat
stc
stos
jg
icebp
and
pop
lahf
dec
push
mov
jo
adc
cltd
jo
mov
mov
inc
test
das
test
push
sbb
bound
js
mov
aaa
push
imul
hlt
mov
jb
xchg
dec
outsb
cmp
dec
mov
je
adc
mov
xor
adc
fs
cmc
je
arpl
push
jp
sti
movsl
gs
pushf
inc
mov
mov
push
dec
add
xchg
inc
pop
movsb
mov
imul
aam
stc
frstor
pop
call
sbb
outsl
sub
xchg
call
xor
jg
xchg
sbb
push
mov
loop
popf
pop
ljmp
jge,pn
sbb
stc
hlt
cmp
inc
mov
fdivs
subl
out
rcr
pop
pushf
stos
push
mov
loopne
cli
push
push
repnz
push
mov
popa
fwait
or
xor
fcomps
xchg
adc
sti
daa
cmp
addr16
xor
out
pop
inc
jl
mov
fistpl
jae
cmp
cmp
dec
iret
and
cld
jp
mov
pop
repnz
push
mov
jg
jnp
add
clc
mov
mov
dec
lea
out
pop
push
out
inc
xchg
sbb
xor
add
mov
mov
shr
in
sub
push
imul
xor
jb
movsl
mov
pop
push
ret
adc
cmpl
aas
subl
cld
or
dec
lea
push
inc
cmpsb
ret
int3
fisttps
or
jl
subl
adcb
daa
mov
ret
adc
sbb
mov
cmpsl
xor
fmuls
lret
or
sub
in
sbb
mov
test
in
aad
jp
insl
add
mov
and
in
sub
aad
cld
sbb
repz
adc
cwtl
das
xchg
test
or
xlat
loopne
fidivs
mov
mov
sub
fdiv
into
mov
cmc
lmsw
mov
shlb
cmc
xchg
sbb
sub
icebp
fcomi
jle
push
jb
dec
aas
iret
lea
and
sub
scas
and
push
dec
sti
mov
fdiv
or
mov
mov
je
les
mov
in
aaa
mov
lret
adc
mov
lret
adc
lea
scas
or
pusha
mov
adc
leave
icebp
and
fldl
movsb
test
inc
lods
cmp
mulb
lea
test
pop
sub
int3
sahf
leave
cmp
inc
sub
cmp
sbb
adc
adcl
mov
out
in
jl
dec
pop
push
test
push
jns
push
jp
mov
xchg
scas
inc
cwtl
mov
push
bound
bnd
stos
test
js
adc
cmp
sahf
jp
inc
js
xchg
pop
push
cmp
into
jp
repz
sub
jle
movsb
jecxz
sbb
int
sbb
lret
dec
loop
frstor
pop
lahf
cmovl
lea
pop
out
push
inc
sub
pop
test
cli
lcall
xor
sbb
adc
jns
shll
test
out
cli
fcmove
adc
mov
or
mull
xchg
mov
pop
inc
scas
sub
mov
push
jae
aad
cmp
pop
add
inc
push
pop
add
les
data16
mov
pop
mull
lock
out
lret
sub
inc
shll
sbbl
xchg
inc
pop
call
hlt
icebp
fidivrs
subb
cmp
repz
lret
mov
bound
mov
fstps
mov
jne
xlat
inc
push
mov
dec
mov
cmp
push
xor
in
sub
aaa
or
and
xchg
mov
in
sbb
fisttps
jne
js
ret
jg
ljmp
popf
sahf
sub
imul
sbb
and
xchg
dec
or
ficoml
repz
mov
lods
jne
xchg
inc
jno
jmp
mov
jg
mov
mov
pushf
testl
push
stos
adc
mov
or
push
inc
loope
dec
xchg
roll
and
adc
addr16
xlat
xchg
in
std
sahf
sbb
in
in
jg
cs
adc
adc
sbb
repz
pop
test
and
and
inc
or
jp
cmp
shlb
out
lret
add
mov
cs
mov
mov
inc
test
call
push
subl
or
xchg
xchg
mov
cmp
test
scas
shlb
lods
ss
shlb
push
push
ljmp
int
pop
ljmp
int
pushf
pop
imul
add
dec
enter
sbb
mov
dec
jle
das
adc
test
inc
mov
subb
xor
pop
and
mov
xchg
mov
mov
sbbl
mov
xchg
mov
cs
push
insb
push
jge
and
cmc
sbb
into
ds
inc
sub
mov
xchg
loop
push
movsb
lds
push
mul
cltd
fwait
add
jb
or
push
sbb
lods
dec
xchg
mov
jmp
inc
mov
mov
iret
rol
les
and
adc
dec
mov
push
jecxz
mov
xchg
push
mov
add
sub
push
psubb
pop
xor
mov
mov
lods
and
xor
pusha
xchg
jle
push
adc
push
outsl
sub
lods
ljmp
out
add
add
jb
dec
stc
lret
add
aam
push
mov
ja
xchg
and
push
jecxz
mov
fs
cld
popa
mov
xor
roll
repz
mov
out
dec
mov
cwtl
or
adc
jmp
inc
mov
aaa
sbb
out
pop
jno
cld
or
test
inc
fdivrl
loope
cmc
and
mov
dec
lock
test
repz
cwtl
adc
jae
push
push
and
std
stos
and
jle
popf
jb
loope
pop
and
add
sbb
inc
jo
add
les
cld
ss
xchg
ja
hlt
xchg
and
daa
rcr
lods
sbb
enter
shlb
pop
inc
in
mov
sbb
addr16
aam
add
insb
mov
push
mov
arpl
push
mov
xor
add
mov
xchg
icebp
jb
xchg
mov
movsl
xor
cmc
or
cmc
fisubs
ja
sub
xchg
test
fistl
scas
adcb
pop
test
out
dec
repnz
sbb
mov
mov
cmp
mov
imul
cmc
loop
out
or
cltd
iret
push
jne
sbb
push
in
push
mov
es
inc
xchg
in
shlb
lods
mov
or
incl
push
cmc
sub
test
fcomi
jns
loope
jnp
mov
jecxz,pt
xor
inc
cmp
aas
xchg
nop
xchg
xchg
jb
dec
fs
call
jge
mov
cmp
mov
pusha
sti
mov
cmp
mov
add
das
xor
pop
cmp
dec
adc
decl
push
cltd
cltd
inc
mov
or
out
out
sar
xlat
mov
shrl
push
inc
test
cmp
or
je
mov
push
add
mov
loop
imull
xchg
cmp
loope
scas
lock
dec
push
cmp
movsb
mov
int3
sbbb
jne
sub
jno
je
ds
xchg
mov
lods
sbb
cmpb
sbb
pop
arpl
jl
int
push
mov
pop
pop
mov
or
push
mov
sub
arpl
sub
xchg
mov
mov
nop
fsts
sbbb
lods
or
pop
das
xor
imul
loopne
aad
shl
pop
loopne
jle
negl
rcll
jmp
pop
cli
mov
nop
xor
push
sbb
jbe
xlat
inc
or
or
jle
aam
pop
pop
sub
lahf
and
mov
test
pop
add
sub
into
fdivp
insb
jb
add
jecxz
into
mov
mov
mov
xchg
clc
rcll
pop
xchg
mov
or
in
push
sbb
cmp
adc
add
dec
xchg
jg
insb
push
xchg
and
xchg
sbb
xchg
imul
stc
mov
cld
stos
sub
dec
aaa
xchg
aad
popf
inc
fildl
jns
cmp
imul
cmp
mov
mov
xor
jbe
jae
xor
test
stos
pop
cmp
adc
stos
out
pop
repnz
arpl
cmp
add
out
scas
mov
jecxz
xlat
xchg
lea
mov
sbb
or
xchg
arpl
les
fcoms
sbb
adc
add
inc
add
lea
out
inc
xchg
sub
mov
xchg
inc
nop
mov
aaa
aam
xor
lret
sub
and
adc
mov
iret
enter
xor
dec
out
mov
clc
stos
dec
sbb
or
mov
pop
les
dec
jl
add
inc
or
xor
sbb
or
cmp
mov
cs
movsl
sub
pushf
data16
xchg
testl
fistl
bound
jecxz
push
pop
xor
fld
xlat
int
sbb
jp
ja
subb
adc
repnz
int
fs
fisttpll
fs
mov
out
lret
jae
mov
pop
cmp
and
loopne
add
sbb
test
bnd
aam
lret
sub
pop
push
in
mov
sbbb
jg
sbb
shll
gs
cmp
jp
jo
loopne
popa
add
xor
inc
dec
or
add
lds
and
mov
cmp
sbb
dec
cmp
shlb
std
mov
sbb
pop
cmovnp
push
push
pop
and
or
pop
inc
ret
mov
in
add
sbb
stos
sbb
mov
and
pushf
sub
jp
adc
mov
mov
fisttps
nop
mov
add
leave
adc
add
insb
or
cld
sahf
lods
xor
shl
add
loop
dec
les
cs
push
fldcw
aad
mov
mov
dec
add
add
jo
imul
mov
add
sarl
and
repz
add
inc
cmp
shll
int
mov
std
mov
mulb
mov
inc
mov
clc
xchg
ret
xchg
les
or
jne
ret
lods
fwait
addb
push
stos
mov
mov
pop
inc
out
stos
pop
or
fucomi
pop
in
xchg
imul
inc
sbb
fiaddl
out
pop
loop
mov
stos
test
cli
ja
xchg
sub
add
add
dec
stos
push
mov
fmul
push
popf
pop
sbb
cmp
sbb
mov
cmp
popa
filds
stos
rcll
sub
sub
jb
mov
jmp
adc
lock
sbb
aas
je
fstpl
ds
or
sbb
sub
sbb
fldcw
test
and
adc
ret
nop
cmp
dec
pop
cs
loope
jo
xchg
and
add
sar
shrb
or
xlat
mov
sub
shrd
dec
ljmp
in
pop
cwtl
lods
in
sub
aaa
mov
icebp
mov
and
mov
jo
cmpsb
xor
or
icebp
dec
popa
inc
std
or
cwtl
jno
and
cld
sub
test
xchg
mov
out
sub
call
insl
mov
lret
jbe
adc
rcr
rorl
cmp
ror
aas
leave
and
xchg
sbb
or
mov
mov
clc
out
mov
xor
push
pop
adc
lret
push
jo
pop
sbb
cmc
cmp
fidivrl
rcrl
loopne
or
push
clc
add
add
sub
xor
push
mov
daa
xchg
pop
rolb
pop
xchg
or
sub
adc
pop
mov
pop
into
mov
pop
xchg
lock
xlat
test
cmp
pop
jne
daa
jl
pusha
jns
and
mov
mov
xor
xor
pop
sahf
bound
pop
aaa
aaa
cli
out
mov
lret
std
or
jo
in
scas
pop
fmull
pop
cltd
out
in
xor
je
scas
jbe
push
data16
push
fcomps
xor
push
popf
shrb
lods
call
lret
repnz
jb
dec
ss
test
jge
add
in
js
sub
imul
out
cmova
mov
das
or
fiadds
jae
fnstenv
decb
dec
jge
loop
xchg
clc
mov
in
fdivs
mov
pop
insb
xor
mov
mov
push
ds
adc
test
jl
insl
repnz
ds
or
mov
jmp
jg
lret
je
gs
pop
andl
push
xchg
jne
xor
nop
jne
sbb
or
rolb
xor
push
fsubrl
lahf
fs
test
popf
repnz
or
jge
mov
movsl
or
mov
inc
js
roll
jno
and
les
lea
push
dec
dec
jge
or
cwtl
inc
mov
je
or
pusha
scas
mov
ret
adc
mov
test
sbb
mov
cmp
mov
ja
loop
outsl
sub
sub
fsubr
movsb
sub
and
rorb
int
jb
inc
inc
add
pop
mov
push
insb
adc
jmp
mov
dec
lods
inc
sbb
push
enter
mov
test
xchg
js
inc
insl
and
mov
sub
lods
popaw
in
pop
andl
adc
dec
test
push
dec
movsl
mov
xor
pop
dec
shll
xchg
mov
aam
adc
rdmsr
push
push
jbe
into
inc
dec
icebp
cwtl
fwait
aam
scas
jmp
stos
mov
xchg
mov
or
loopne
outsl
pop
push
mov
shll
xchg
dec
lret
lcall
mov
dec
xor
loope
mov
scas
sbb
mov
mov
imul
stos
push
mull
push
fimull
mov
push
fidivrs
std
push
and
xchg
and
test
adc
lahf
fwait
dec
adc
adc
pop
sbb
jmp
imull
push
imul
aam
addl
loop
lcall
and
or
or
mov
fstpl
xor
and
pop
lret
mov
imul
mov
pcmpeqb
inc
movsb
mov
data16
xchg
jp
cmp
stc
ljmp
aam
adc
aaa
mov
jns
dec
minps
push
mov
adc
jae
mov
cmp
bound
cmpsb
jo
cs
je
jp
xor
inc
jmp
sub
test
mov
fcoml
and
mov
lcall
sub
xor
sti
push
jmp
mov
or
inc
xchg
jo
or
pop
pop
jns
mov
loope
int3
shl
jae
push
insl
jle
lods
mov
pop
and
roll
push
mov
cmp
mov
inc
push
in
and
and
jl
sbb
arpl
in
sbb
and
push
aam
movsl
xlat
jno
dec
xor
jmp
imul
add
stos
out
jae,pn
push
aaa
xor
arpl
inc
lahf
aam
std
cmp
pop
testb
pop
cli
lret
mov
std
les
xorl
jbe
ds
mov
subb
arpl
or
in
stos
or
fstpt
mov
jl
jno
jo
pop
scas
and
mov
cli
dec
pop
inc
mov
sarl
daa
cli
xor
lods
shll
in
mov
xchg
in
mov
movsl
cmp
dec
outsl
fmuls
sub
std
adc
inc
cmp
loope
fsubrl
ljmp
jg
sbb
sbb
stos
jne
inc
xchg
xchg
test
out
inc
cmp
icebp
jnp
pop
push
jle
dec
cmp
xor
je
sbb
jle
shrl
dec
rcrl
xor
dec
scas
and
or
iret
sbbb
jmp
dec
pushf
insl
pop
iret
in
sub
lods
imul
mov
push
test
addr16
test
add
arpl
cmp
xchg
sbb
dec
jmp
pusha
test
push
ja
into
push
mov
ret
arpl
jl
icebp
jp
stos
jae
insb
or
les
cmp
mov
jne
in
rcll
lahf
inc
imul
mov
mov
ljmp
lods
mov
sub
mov
sti
in
sub
icebp
lret
jle
insb
cmp
push
jb
mov
bound
xchg
cli
pushf
dec
add
pop
fld
icebp
mov
lret
mov
pushf
mov
adc
cmp
mov
and
push
dec
bound
jl
pusha
cmpsl
xchg
idivb
mov
shrb
push
cld
fmuls
pop
pop
test
push
popl
mov
icebp
out
xchg
push
xchg
clc
andb
out
lret
mov
cmpsl
enter
notb
inc
cld
jle
sbb
pusha
aad
dec
aas
lret
pop
std
sbb
fisubrs
mov
jmp
mov
mov
xor
or
gs
jmp
out
lret
lea
add
mov
scas
sbb
pop
mov
enter
cs
les
gs
mov
jno
push
cmpl
and
lods
scas
hlt
lods
jbe
pusha
sbb
push
inc
pushf
dec
inc
insl
lahf
ja
cwtl
adc
inc
ss
push
lods
push
cmp
mulb
lock
add
out
daa
mov
add
xchg
int
pop
jp
sub
mov
lcall
pop
push
sbb
hlt
cmp
xchg
and
jecxz
mov
push
fistl
lods
push
clc
pop
les
xchg
jmp
and
pop
lds
in
jle
int
cli
jb
xchg
out
outsl
or
cs
jle
int3
lea
xlat
in
mov
pop
mov
mov
dec
xchg
add
xor
jle
or
mov
in
iret
ja
sar
sbb
fists
push
imul
adc
addl
lods
push
xchg
cltd
and
ror
and
adcl
adc
jmp
sbb
imul
insb
das
subl
mov
add
add
dec
cmp
in
cli
xchg
mov
cmc
add
cmp
pop
mov
cwtl
ss
ljmp
mov
scas
fsubrl
and
test
loopne
sbb
in
mov
mov
mov
jno
inc
sbb
aam
mov
add
outsb
xor
imul
clc
jle
repnz
incb
xlat
cmp
jmp
dec
fldenv
movsb
clc
loopne
and
div
and
loope
int3
adc
sahf
out
lret
call
jo
push
add
pop
imul
inc
mov
decl
test
lahf
jg
adc
push
dec
into
sub
insl
add
dec
scas
cltd
pusha
push
fistps
and
or
stc
cs
and
sbbl
inc
les
dec
add
out
xor
icebp
dec
sbb
inc
sahf
call
cmp
cmp
addr16
jge
das
test
outsl
in
cmp
push
sub
cmp
outsb
cmp
pop
arpl
pop
faddl
xor
or
dec
out
stc
jl
add
lods
popa
or
push
xchg
jae
inc
mov
mov
mov
std
jae
mov
imul
dec
into
addr16
popf
cmpsb
testl
stos
addb
cwtl
xchg
mov
xor
dec
bound
pop
push
call
imul
ds
in
jmp
aaa
stc
repz
jno
out
cmp
inc
test
push
mov
xchg
lahf
mov
pushf
push
test
mov
jmp
jmp
lds
ss
fbstp
push
cli
std
push
mov
pop
or
mov
lods
pop
push
mov
pop
inc
mov
mov
add
test
aam
ds
push
sub
aam
movsb
jnp
pop
nop
jp
dec
es
pushf
cmp
and
pop
mov
xor
mov
sbb
adc
jp
pop
pop
xor
and
in
jmp
dec
or
dec
push
fcompl
ret
and
lods
inc
push
lods
add
mov
push
jns
fisubrl
mov
call
test
stos
push
ret
cmp
jp
inc
lods
popa
cwtl
aaa
jne
int
bound
inc
and
loop
adc
cmp
fs
imul
jmp
xor
adc
cmp
orps
mov
ja
inc
int3
testb
sarb
jbe
call
jne
push
rorb
jecxz
push
fsubr
jae
jp
jb
sbb
mov
xchg
scas
stc
inc
push
or
movsl
inc
inc
in
out
ficompl
xchg
fcmovu
fucomp
fcompl
lcall
fstl
movl
mov
add
cmp
orb
cs
outsb
push
mov
imul
and
and
out
mov
mov
es
int3
adc
add
in
xchg
pop
cs
inc
sub
into
loope
dec
jecxz
loope
sti
shll
imul
or
mov
sub
sti
test
pop
enter
sub
hlt
push
pop
aaa
mov
movsl
rolb
imul
and
dec
xchg
cmp
mov
xchg
ret
push
xlat
inc
inc
iret
fadd
loope
mov
and
pop
or
popa
mov
jge
jb,pn
lds
sub
add
lock
cli
sbb
cmpsb
and
add
dec
scas
sub
push
lret
sbb
add
pop
add
adc
insb
jge
fmull
xor
inc
add
leave
cmp
inc
dec
push
cmp
mov
pop
adc
fidivl
gs
ja
push
clc
xchg
inc
push
insl
movsb
inc
lods
ret
lahf
adc
push
sbbl
int
push
call
test
sbb
loope
xor
xchg
cmp
stos
xor
mov
mov
ljmp
ja
mov
in
adc
sub
xlat
mov
rcll
std
mov
std
adc
stos
xchg
imul
mov
popa
sub
mov
ss
fstpt
hlt
or
scas
cmp
sub
and
jo
ja
out
xor
pushf
cmp
andl
jae
cmpsl
rcrl
addb
test
popa
pushf
stos
cmpsl
arpl
movsl
mov
mov
mov
sub
mov
push
xchg
mov
in
fildl
std
enter
jns
rclb
and
ret
and
inc
jg
jae
add
popf
cli
lret
cwtl
sbb
in
sub
test
outsl
lea
xchg
cmp
inc
sbb
loope
sub
lret
jmp
sbbb
daa
imul
addb
add
inc
xchg
ljmp
cmp
sbb
or
das
fldcw
and
leave
int
movsl
mov
mov
inc
ficompl
cli
iret
push
mov
push
or
adc
dec
push
jp
les
mov
jp
push
enter
pop
js
fisubs
enter
and
cltd
stos
push
sbb
sbb
cmpb
xor
push
into
inc
adc
push
adc
pop
push
jmp
je
icebp
mov
sar
cwtl
lahf
mov
divl
popf
cmc
mov
cmc
cmpsb
push
iretw
push
cmpsb
inc
incl
and
jbe
das
popf
jnp
jg
mov
fsubr
pop
pop
call
gs
cltd
stc
dec
fcoml
sbb
notb
mov
mov
stc
cmp
dec
daa
push
jp
aad
push
fidivs
pop
xchg
xchg
stc
or
fwait
sti
fldenv
jne
mov
cmc
jecxz
push
lret
loop
jbe
xsha1
cmpsb
mov
pop
sti
scas
xchg
out
shlb
ja
clc
jne
cli
out
and
inc
xchg
out
neg
scas
dec
add
pusha
call
addr16
mov
dec
arpl
andb
ja
movsl
ja
ret
mov
lret
sub
movsl
cmp
in
imul
mov
in
test
call
aam
lods
inc
jne
jl
outsl
push
dec
xchg
mov
add
pop
repz
cmp
cmp
ljmp
xchg
sahf
mov
test
pop
cmp
mov
inc
stc
pop
adc
add
pop
pop
enter
fbstp
mov
movsl
cmp
sub
dec
inc
add
cmpsb
add
push
bound
clc
pop
sbb
mov
sbb
das
sub
xor
icebp
fimull
call
sub
jns
ret
mov
mov
ss
mov
push
mov
inc
cmp
and
ret
packssdw
mov
cld
les
pop
sub
dec
roll
test
fnstenv
mov
repnz
ret
cltd
ror
out
iret
lret
push
stos
mov
insl
sub
lock
jge
jge,pn
adc
cmc
out
mov
jle
stc
dec
int3
out
fistpll
aam
enter
in
out
jmp
dec
hlt
dec
or
dec
aad
mov
shll
inc
jbe
ret
add
mov
adc
and
mov
mov
stos
xchg
shr
int
mov
movsb
jle
lahf
lock
leave
pusha
inc
pushf
dec
adc
mov
shl
outsl
xor
sbb
lahf
aad
in
pop
ret
cmp
repz
sti
pop
and
sarl
lock
clc
or
inc
ja
enter
ljmp
xor
fs
icebp
adc
sub
in
dec
pop
cmp
out
push
sub
pop
sahf
jo
push
jmp
adc
cmp
push
add
mov
clc
sub
mov
sub
inc
lret
push
repz
sti
sbb
rorb
cld
arpl
mov
imul
adc
or
test
xor
popa
orl
xor
cmp
insl
inc
cmp
sub
data16
mov
mov
adc
aaa
sub
cmc
add
shrb
incl
orw
and
into
hlt
ljmp
mov
gs
xchg
mov
aaa
fildll
cmpsb
test
cmp
add
int
mov
cwtl
shrl
movsb
xchg
insl
and
movsl
inc
pop
movsb
xor
add
stos
in
daa
mov
adc
into
icebp
and
add
xor
sub
jmp
fucomp
pop
pop
imul
jbe
pop
testl
std
ja
es
pushw
mov
fistpl
nop
xor
pop
insb
jle
mov
jecxz
adc
ds
insl
popa
and
ss
shl
inc
nop
loope
les
cli
jne
pop
out
cmp
aas
inc
cltd
mov
pop
stos
dec
data16
inc
stos
xchg
cmp
lret
lcall
mov
pop
fdivrs
inc
adc
fdiv
cli
test
sub
cmpsl
jnp
push
dec
ja
xchg
dec
aaa
sar
and
aam
cs
out
add
mov
xor
mov
push
pop
ja
mov
stc
sbb
or
cmp
ljmp
loope
dec
jmp
add
scas
data16
sbb
std
mov
int
into
and
cmp
addr16
push
ja
jne
mov
iret
xor
ss
adcb
mov
mov
lods
lret
stos
xchg
fwait
inc
mov
cmp
aam
lds
sbbl
dec
adc
je
xchg
sub
jne
insb
sbbl
inc
in
and
mov
sarb
popf
lds
fstl
mov
add
or
aaa
movsb
stc
push
xor
cmc
jbe
stos
push
pop
xlat
inc
out
or
dec
adc
daa
sbb
aad
rcrw
stos
js
pop
add
xor
sbb
fdiv
or
jg
mov
and
pop
aas
jnp
repnz
cmp
lods
arpl
test
adcl
mov
pop
or
lods
or
xchg
cs
jne
faddp
push
shl
loop
mov
and
fstpt
xchg
popf
sbb
scas
mov
xchg
xor
jecxz
pop
test
push
dec
clc
mov
or
dec
dec
mov
lret
rcll
push
push
lret
fsubl
or
add
imul
fidivrs
int3
adc
sub
test
xchg
fbstp
sub
xchg
mov
mov
xchg
xor
in
popf
loop
clc
pop
mov
data16
xlat
inc
inc
js
call
cltd
mov
fcompl
dec
fistps
sbb
stos
mov
and
push
cwtl
jge
xchg
mov
scas
xchg
pause
andb
outsb
add
sub
mov
mov
lods
adc
jnp
insb
xor
mov
sbb
push
sti
or
and
sahf
add
jns
cmp
push
aaa
mov
test
xor
fisttpll
sbb
push
lret
addr16
ret
and
jnp
mov
stos
bound
aad
jnp
mov
sbbb
pop
leave
push
scas
cltd
ljmp
dec
sub
mov
xor
or
inc
cmp
jbe
cmpsb
clc
push
mov
lea
xchg
jecxz
popa
push
and
imul
iret
ja
xlat
add
sbb
mov
add
pop
or
icebp
and
mov
sbb
arpl
sbb
aad
jmp
jnp
scas
mov
mov
ret
addr16
inc
lea
dec
push
test
ja
sub
dec
test
cs
jl
int3
inc
inc
pop
adc
repz
out
add
mov
loopne
out
inc
jne
imul
stos
xchg
or
popa
or
jp
xchg
dec
ror
sti
fisubrs
out
dec
lcall
lods
adcl
dec
push
mov
add
es
xor
mov
cld
inc
add
jbe
mov
rcl
mov
daa
add
pop
stc
std
lcall
fst
les
push
add
ljmp
jae
cmpsb
out
mov
push
mul
push
cli
imul
ljmp
fidivl
mov
repnz
aaa
push
cmpsl
mov
shlb
cmp
incl
mov
ret
sub
mov
jno
ficoml
add
mov
js
bound
call
push
jne
es
roll
cmpsl
or
push
loope
in
add
jecxz
mov
ja
fsts
lods
into
dec
jg
scas
jnp
sub
inc
mov
movsl
pop
or
pop
inc
dec
push
rorb
inc
cmp
in
mov
outsl
mov
xchg
in
mov
outsb
pop
pop
cltd
sub
cmpsl
mov
mov
jns
std
mov
jne
out
inc
movsb
movsl
pop
repz
aas
enter
repnz
pop
xor
mov
xor
aas
xor
rcrl
xor
nop
xor
aam
shr
mov
insb
push
and
dec
mov
mov
ljmp
out
fprem
mov
ljmp
idivb
idivb
push
and
call
pop
cwtl
mov
adc
repz
mov
mov
mov
and
stc
or
jo
and
push
arpl
test
mov
push
repnz
jbe
cwtl
ret
lret
sarl
rcrb
sub
js
fwait
pop
mull
rol
mov
lods
mov
and
dec
arpl
fistps
inc
add
pop
adc
ret
push
movsl
in
movsb
hlt
sub
cmp
in
fdivrp
int
ljmp
nop
xchg
xchg
movsb
ffreep
fmuls
into
shlb
gs
pop
adc
mov
jne
hlt
daa
repz
inc
and
adc
in
jae
in
call
mov
repnz
jns
or
inc
incb
or
pop
sbb
jns
lods
loop
std
pop
jbe
mov
icebp
fistps
nopl
pop
push
cltd
nop
clc
nop
lods
dec
jl
xchg
in
xchg
mov
popa
lret
notb
subl
iret
xchg
insb
cmp
cltd
add
jns
and
cmpl
scas
lret
sbb
jno
dec
push
sub
popf
repnz
xchg
mov
insb
aam
aas
jecxz
iret
shl
jl
push
jg
jg
daa
mov
scas
xchg
test
mov
fwait
sub
clc
mov
lret
ficoms
sbb
push
imul
in
out
call
ficoml
push
popf
or
push
stos
inc
call
lock
movsb
inc
jno
push
pop
adc
mov
hlt
lea
mov
scas
push
sub
pop
sub
sub
sub
lods
into
pop
lret
stc
jge
mov
pop
sbb
mov
adc
push
or
shlb
pop
popa
repnz
clc
cwtl
mov
adc
mov
xchg
in
out
pop
sbb
push
dec
push
cli
sub
and
push
jg
adc
and
jne
rolb
sbb
push
fmul
out
in
cmpsl
mov
and
fstpl
mov
mov
movsl
lock
rcrl
ret
shl
cmp
sti
jmp
mov
imul
jns
ret
xchg
sub
pop
mov
and
lret
sub
out
mov
ret
rcrl
sbb
pop
gs
jge
imul
stos
mov
add
mov
ret
aas
scas
data16
or
cmovns
stos
sbb
cmp
and
adc
add
cwtl
sub
mov
xchg
jns
int
scas
mov
dec
loopne
xchg
fdivs
mov
sub
in
test
cwtl
pop
xchg
imull
lds
daa
mov
aaa
dec
sar
jo
sub
and
cmpsb
lret
dec
incl
cwtl
or
jo
popf
ss
mov
push
sbb
and
xlat
cmc
cli
mov
fildll
cmp
jmp
xchg
in
adcb
call
aas
jae
pop
mov
push
mov
or
outsl
cld
cmp
mov
mov
aad
push
and
or
xchg
iret
xchg
push
pop
xchg
push
jle
cmp
fwait
mov
mov
fxam
das
xor
mov
shr
and
push
aad
into
xchg
cmp
pop
scas
sub
xor
pop
sarl
xorl
pop
or
cmp
sti
or
icebp
loopne
cmp
filds
xchg
icebp
arpl
push
call
push
cmpsl
out
mov
andb
xor
or
mov
je
inc
and
in
mov
testl
inc
outsl
pop
xor
xor
adc
shr
jae
pop
ret
mov
sub
enter
enter
push
movq
shrb
add
pop
pusha
lds
mov
sub
scas
mov
in
or
push
mov
movsl
sbb
xor
adc
and
or
mov
cmp
lret
sbb
pop
rcrb
mov
xchg
outsb
sbb
xor
add
ret
lods
test
lret
rcrb
push
push
push
push
pop
jge
mov
subl
popa
aas
mov
jne
cmpsl
js
mov
xorb
repnz
repz
or
push
fcoml
ds
repz
int
inc
mov
popa
push
mov
xor
ficoms
movsl
sbb
lahf
mov
imul
inc
arpl
xchg
push
push
out
aam
pusha
sub
ljmp
mov
dec
lret
imul
dec
push
lods
and
in
pop
mov
cmp
cmpsl
or
xor
xor
les
inc
push
icebp
int3
stc
jb
mov
inc
jno
xor
inc
fistl
aas
inc
mov
sub
dec
dec
dec
scas
not
add
call
sub
into
out
xor
cmp
fbstp
ret
scas
xchg
fwait
and
popa
pop
jge
jmp
test
or
loopne
jno
dec
mov
dec
inc
sbb
mov
test
pop
mov
loopne
pop
dec
jmp
cmp
push
jno
dec
xchg
shrl
mov
arpl
aam
pop
mov
xchg
das
add
lcall
orl
xchg
xor
jne,pt
addr16
and
insl
dec
loopne
popa
cld
xchg
xchg
jmp
mov
in
addr16
sub
stos
pop
arpl
lcall
sub
clc
adc
faddl
push
jnp
ret
jp
fs
aad
sbb
or
imul
fdivs
ret
js
stc
sub
push
std
jnp
pop
or
mov
sti
mov
enter
dec
lcall
jecxz
ss
jmp
sbb
scas
ret
imul
adc
testl
jge
rcll
dec
mov
ss
xchg
test
in
mov
iret
and
xchg
nop
out
shll
mov
mov
jne
cwtl
mov
lds
mov
cmpsl
sub
sbb
popf
dec
stos
push
jp
and
aam
sahf
repz
aas
loopne
push
dec
or
push
scas
jp
push
push
aas
mov
or
pop
push
lret
lret
xchg
test
imul
adc
add
xor
push
out
and
add
shlb
lahf
adc
out
and
mov
sbb
out
shlb
movsl
push
pcmpgtw
inc
pop
cmp
je
mov
clc
loope
xchg
enter
xchg
scas
rolb
inc
push
mov
mov
out
dec
ffreep
pop
and
push
mov
xor
add
jecxz
stc
insb
xor
xor
imul
imul
repz
movsb
or
ficoml
flds
fiadds
inc
jmp
mov
divb
cli
shlb
xchg
pop
inc
mov
stc
arpl
adc
lret
addb
ret
fldl
push
dec
jmp
mov
loope
dec
jnp
mov
mov
out
scas
inc
mov
std
sub
mov
sub
nop
mov
push
pop
loop
les
stos
lret
inc
add
pop
stos
mov
xor
jne
insb
and
inc
pop
loope
mov
mov
cmp
cmc
cmp
mov
and
dec
aad
insl
xchg
fbstp
cmpsb
mov
fwait
in
icebp
data16
cmp
mov
cmp
pop
enter
mov
ljmp
sub
movsl
sbb
dec
addr16
push
insb
adc
jae
inc
daa
popf
ret
sub
dec
pop
pusha
lods
pop
push
sbb
fnsave
repnz
jge
inc
push
inc
in
jae
fdivrl
lret
sub
push
ret
xor
fimuls
or
les
imul
inc
pushl
pushl
outsl
sub
fxam
shll
ja
out
cmp
mov
sub
mov
loop
sub
fcomi
imul
std
in
insb
lret
mov
lahf
lock
cwtl
shll
push
cmc
pop
xor
cmpsb
or
sub
fcmovne
pop
test
adc
std
push
movsl
pop
xchg
call
cmp
lea
pop
push
lret
loopne
dec
ror
pop
imul
or
mov
scas
xlat
lcall
shll
jo
cli
mov
jmp
fisttpll
insb
mov
sbb
xchg
xor
ret
ss
test
and
jb
ret
jae
push
and
out
sbb
or
jp
pop
nop
movsb
dec
int
push
shr
xchg
test
ja
mov
pop
orb
ljmp
aam
repnz
xchg
std
testl
pop
mov
repz
test
mov
push
das
xor
cmp
or
dec
ret
pop
xchg
test
mov
push
mov
push
xchg
mov
or
or
dec
mov
adc
push
sub
mov
es
lds
mov
or
icebp
inc
out
mov
fcom
push
or
xchg
adc
loop
pop
nop
jl
pop
cmpsl
add
jae
inc
mov
fcmovu
cmp
filds
repnz
jle
cmp
fcmovnu
mov
loopne
and
movsl
push
cmp
push
push
cld
idivl
dec
test
cmpsl
ss
pop
aam
push
adc
mov
mov
push
mov
lahf
jnp
addr16
push
lahf
sub
xchg
push
fistps
dec
gs
sub
mov
cmpsl
cmp
in
add
lret
jmp
std
inc
xor
shlb
push
rcrb
lea
fcomps
inc
mov
leave
push
pop
ret
push
xchg
xchg
inc
mov
or
cmpsl
fimuls
test
stos
or
inc
jp
mov
mov
cli
adc
cmpb
push
lods
xchg
aam
stos
aad
insl
push
adc
jno
mov
lds
dec
in
sub
subb
pop
dec
call
sub
fistps
mov
out
xchg
pop
stos
sbb
mov
jg
daa
cmpsb
shll
xchg
push
jno
ljmp
leave
popa
aas
xchg
aam
lcall
std
pop
sub
clc
lods
js
mov
mov
cli
mov
push
sti
lods
repnz
push
test
aad
outsl
ljmp
add
mov
xor
in
loope
iret
fwait
outsb
push
adc
push
push
ja
loop
add
push
and
pop
adc
paddw
adc
mov
push
push
pop
and
lds
stos
fnsave
int3
cwtl
das
add
call
pop
push
out
faddl
or
inc
leave
inc
movsl
daa
push
add
pop
cld
daa
addr16
pop
into
cs
scas
jne
push
pop
sti
mov
lret
ret
rclb
les
cmp
sub
and
fld
xchg
pusha
popf
test
adcl
pop
int
lds
push
add
clc
xchg
dec
in
pop
sub
inc
sbb
pop
mov
cmp
and
mov
push
cmp
and
call
scas
cmp
and
jo
pop
fcoms
or
out
mov
in
in
lret
xchg
inc
les
cs
pop
xor
aaa
pop
xlat
add
jmp
push
outsb
fnsave
clc
fstps
cmp
ret
pop
push
mov
xchg
outsl
add
dec
sbb
and
jns
adc
mov
gs
lahf
movsb
push
lods
jo
ljmp
sbb
and
mov
and
mov
orl
cmc
xchg
xchg
jno
pop
dec
fcomp
inc
xchg
add
in
or
mov
fisubrs
sub
mov
mov
outsl
sbbb
mov
adc
shll
sbb
jne
js
fwait
or
lcall
test
aam
and
mov
mov
cmpsb
pop
sub
popf
jl
aam
in
inc
push
push
sbb
jnp
data16
sub
xchg
sbb
mov
imulb
imul
mov
mov
mov
aam
iret
adc
fsubrs
dec
or
lds
fiaddl
sbb
mov
scas
fst
dec
mov
sti
leave
lcall
adc
mov
push
and
call
xchg
and
inc
jmp
shrb
dec
iret
inc
out
pop
xor
jl
mov
inc
mov
ret
sbbl
insl
addr16
insb
dec
push
sahf
jecxz
std
ja
push
xor
outsb
mov
mov
xchg
inc
mov
mov
mov
jecxz
mov
and
sub
repz
jnp
es
jge
cmp
lds
mov
pop
add
dec
mov
sbb
dec
or
mov
js
clc
and
repnz
stos
jmp
sti
mov
pop
dec
xor
sbb
inc
add
sbb
mov
pop
jmp
cwtl
adc
ret
dec
cmp
sub
int3
lcall
into
fwait
and
jb
imul
adc
cmp
cmpsl
stos
sub
ljmp
stos
cli
cmc
push
or
fwait
jne
cwtl
adc
xchg
cltd
filds
inc
sbb
adc
jnp
push
add
mov
mov
inc
std
lcall
iret
jge
das
sbb
inc
add
cmpsl
push
dec
and
inc
int3
mov
out
fdivrs
mov
mov
mov
dec
gs
xor
or
and
cmp
in
mov
lock
dec
addr16
xor
outsl
xor
insl
push
sbb
cmp
lds
fcom
inc
add
fstp
adc
mov
mov
xchg
in
and
lds
cmpsb
pop
test
push
sbb
jne
fstps
cmpsb
add
enter
lds
addb
imul
insb
dec
popa
cmp
je
dec
sbb
sub
outsl
popf
lods
adc
fsubrl
inc
mov
sub
pusha
pop
std
cmp
mov
push
sub
inc
mov
out
pusha
in
pop
ret
lcall
mov
push
lret
dec
mov
pop
test
pop
push
rorb
adc
shr
lahf
icebp
fcomps
fdivl
cmc
mov
mov
mov
add
mov
ficoml
or
cmp
fwait
xchg
jmp
pop
stc
push
mov
push
cmp
lods
add
jp
scas
loopne
sub
inc
pusha
and
sbb
add
inc
push
cmp
stc
push
jno
mov
add
movsb
mov
push
xorb
adc
std
inc
out
movsl
xchg
cmp
xchg
stos
loopne
push
add
sbb
and
jecxz
jg
imull
pop
mov
enter
call
mov
mov
out
xor
sub
andl
pop
notl
sub
mov
negb
stos
imul
lods
mov
pusha
push
add
dec
pushf
inc
fsubrl
sub
test
cmpsb
push
stos
icebp
xchg
pop
repnz
sbb
push
mov
les
les
bound
dec
pop
fidivl
pop
adc
mov
dec
sbb
mov
andl
bound
adc
mov
push
mov
mov
lea
mov
mov
stc
pop
jg
mov
jns
les
rorl
mov
rcr
popa
push
fnsave
add
ljmp
jge
outsb
pop
pop
sbb
adc
mov
lret
mov
cmpsl
xlat
mov
mov
subb
loopne
popa
mov
adc
dec
adc
xor
lods
sahf
adc
fldcw
cmp
call
lcall
out
add
sbb
sahf
mov
test
or
fdivs
or
and
and
jg
mov
or
pop
push
pop
cmp
bound
jne
or
cmpsl
pop
addr16
loope
cmp
test
shlb
xchg
jl
fisttps
mov
sbb
ficoml
and
or
lods
mov
xor
clc
repnz
aas
fs
mov
xchg
mov
addr16
ss
lcall
xchg
xchg
sub
mov
xor
jbe
xchg
jns
add
repnz
inc
xlat
fbld
rclb
stos
push
adc
mov
sub
movsb
mov
test
aas
call
lcall
pop
clc
xor
pcmpgtb
sbbb
mov
outsl
cmp
cmpsl
fildll
and
hlt
mov
cmp
in
daa
lods
jmp
gs
fsubs
jb
xchg
out
cli
inc
xchg
xchg
rolb
bound
paddusw
testl
ficoms
push
pusha
jge
mov
dec
sub
push
and
lahf
mov
pushf
scas
dec
mov
loope
in
das
cmpsb
repz
sbbb
insw
jle
in
out
fldt
sti
lock
dec
lock
in
push
sub
scas
mov
mov
scas
adc
enter
push
inc
cld
jle
xor
xor
pop
int3
push
mov
lret
cmp
sti
jo
push
mov
mov
mov
sub
pop
mov
mov
push
dec
mov
lods
test
sbb
xchg
push
cmp
cmp
cmpsl
fidivl
fcomp
adc
pop
mov
lock
aaa
pushf
sbb
dec
or
daa
loope
lds
dec
add
xchg
shr
or
popl
pop
hlt
jne
movb
add
mov
sbb
das
mov
pop
cmc
push
orl
jnp
sub
sbb
cmp
ja
or
inc
push
sbb
jo
jl
push
loopne
sub
mov
imul
pusha
xor
scas
movsb
jmp
inc
add
imul
mov
push
hlt
jae
mov
loope
lods
out
mov
stc
or
jo
mov
test
xlat
dec
fisubs
mov
mov
jl
std
push
xor
xor
out
jg
cld
or
je
stc
xchg
and
cmc
js
mov
in
xor
gs
xchg
je
mov
jmp
insl
sbb
push
icebp
jl
popw
icebp
in
adc
add
popf
jmp
iret
daa
movsl
adc
mov
dec
cmp
addl
cmp
adc
jecxz
les
cmp
jo
call
dec
fs
int3
xor
and
pop
dec
notb
sti
popa
in
shr
jnp
inc
xlat
in
add
dec
lods
jl
xlat
or
rclb
rcrb
dec
fstpl
jno
leave
xchg
mov
lret
xchg
push
jae
adc
icebp
orl
gs
popa
pop
insl
jg
or
das
aad
push
fldt
lret
cld
dec
sub
jnp
test
jno
and
push
jmp
pop
mov
enter
and
fiaddl
shr
mov
loop
fimull
jmp
sub
jo
daa
fwait
inc
xchg
fdivs
aad
and
les
shll
fdivrl
jo
les
subl
popf
sahf
daa
mov
add
xchg
mov
pop
dec
mov
jno
cld
lcall
fs
cmp
out
xor
imul
fnsave
in
xor
stc
and
shrl
push
sub
int
adc
popa
orl
fimull
lcall
pop
rorl
sbb
xor
jne
mov
mov
xchg
arpl
rol
aas
test
sbbl
cltd
and
xchg
jb
into
add
je
mov
add
jmp
sub
mov
or
dec
decl
pop
and
fwait
test
lcall
fmuls
dec
and
int3
mov
out
test
movsb
pop
or
inc
add
adc
in
ds
in
stos
stos
or
fbstp
and
jle
cmp
jp
sbb
push
data16
inc
jle
data16
add
pop
stc
ret
xchg
clc
mov
scas
sahf
or
sub
xchg
sbb
scas
fisttpll
xchg
scas
iretw
mov
cwtl
pop
mov
dec
sarb
or
icebp
sahf
sbb
mov
and
push
addr16
pop
popf
in
daa
xchg
in
sbbl
dec
int3
xorb
push
in
std
pop
lret
mov
sbb
stos
jo
pop
dec
jp
mov
mov
cmp
push
popa
push
sub
jne
test
pop
and
dec
sub
ret
outsl
cli
xchg
mov
mov
mov
std
out
add
les
rcll
xchg
dec
mov
loopne
dec
inc
xor
inc
cli
push
pop
imul
cmp
rcrb
insl
pop
mov
loopne
push
and
inc
repnz
adc
add
shlb
add
cmp
ret
mov
or
cmp
jge
jecxz
dec
loope
lea
int3
in
and
fsts
jnp
addr16
aas
pusha
pop
push
mov
mov
or
pop
jne
lds
adc
inc
loope
mov
lcall
jne
aam
and
lock
pop
mov
and
mov
dec
fst
setl
fiadds
clc
cmp
subb
or
jns
bound
push
sub
es
xchg
sbb
notb
lds
dec
aas
mov
and
jns
mov
jmp
sti
jp
cld
leave
inc
jno
push
push
sub
nop
push
idivl
dec
jmp
clc
and
mov
sub
xacquire
inc
stc
push
bound
mov
in
jbe
popf
jge
mov
sub
jecxz
inc
ds
ret
xor
daa
les
fstpt
cmpsb
das
psubsb
pop
xor
adc
jnp
les
mov
out
enter
cmpsb
sbb
or
shl
icebp
lcall
mov
mov
aad
push
push
scas
cld
mov
fsubrs
mov
les
jb
and
out
adcb
cmp
dec
pop
mov
inc
test
inc
outsb
fs
sub
and
fwait
daa
out
cs
add
cli
xlat
xchg
mov
aaa
inc
movsl
test
jb
leave
xchg
std
shlb
ret
adc
popa
inc
pop
scas
loope
loope
mov
mov
fidivrs
xor
loopne
push
push
dec
jbe
add
lcall
xchg
addb
mov
push
sbb
mov
stos
or
lds
sbb
adc
or
std
lret
and
loope
mov
rcrl
xchg
jmp
pop
push
lcall
or
dec
imul
fadd
sarl
jg
and
aam
push
and
or
and
dec
inc
dec
pop
mov
push
mov
lahf
gs
aad
mov
sub
xchg
inc
dec
sub
jae
out
loope
aas
andb
push
inc
or
mov
outsb
dec
sbb
cltd
imul
ljmp
lahf
aas
xor
je
in
int
mov
ds
or
repnz
fidivs
into
mov
hlt
stos
cs
dec
mul
push
xchg
fsubrp
xor
cmp
and
lret
or
mov
xchg
mov
pop
jbe
stc
scas
mov
jmp
outsl
inc
mov
in
into
push
and
mov
xchg
push
cmp
lock
stos
out
fdivs
cmc
cmp
xchg
and
fs
je
stc
lock
pop
das
int
adc
inc
push
enter
mov
cmpb
call
push
lods
sbb
rorl
sub
add
or
mov
mov
inc
stc
push
adcb
subb
sub
push
std
js
cmp
push
mov
outsb
test
mov
jg
cmpsl
pop
fstps
shrb
xchg
cmpsb
adc
sti
lcall
inc
jbe
inc
inc
lods
jl
mov
clc
fidivl
add
dec
mov
sbb
sub
psraw
fs
ljmp
nop
mov
mov
adc
cmp
add
daa
and
jo
and
icebp
cmp
jno
pushf
mov
xor
mov
xor
testb
je
xor
push
rorb
mov
sub
fxch
test
mov
mov
lea
lock
dec
add
fs
cmp
mov
pop
outsl
or
mov
into
daa
mov
out
sub
movsb
cmp
sub
mov
and
fdivp
aad
jns
sbb
mov
add
ss
cwtl
lahf
push
xor
mov
mov
or
sub
mov
mov
inc
add
xchg
scas
pop
icebp
sahf
jmp
bound
mov
test
lahf
or
inc
lret
sub
cmp
mov
or
int3
negl
sbb
and
aad
out
loope
jns
push
hlt
add
mov
inc
ss
xchg
scas
imul
jne
lods
out
das
mov
add
lret
fldcw
cltd
out
xorb
xchg
clc
or
or
dec
std
dec
aaa
dec
sahf
mov
mov
and
std
or
outsb
adc
push
jle
jecxz
jne
add
imul
outsb
jne
xchg
cmpsb
enter
or
bsf
outsl
cwtl
loop
orb
mov
jl
es
and
jo
inc
or
or
mov
fwait
add
mov
sbb
inc
fs
mov
decl
fsubrl
fwait
mov
jae
in
stc
testl
inc
aad
push
jae
mov
jmp
dec
sbb
dec
xor
in
addr16
fwait
insb
pop
sbb
int
push
int
nop
daa
sbb
inc
fsubr
pop
dec
mov
les
jmp
sub
daa
lret
mov
lea
aad
fildll
cltd
shl
and
je
push
lea
ljmp
add
push
add
xor
mov
rolb
test
xchg
xchg
sahf
sbbb
dec
ret
pusha
andl
pop
inc
loop
add
xor
mov
das
and
push
dec
adc
fstps
pusha
aam
push
mov
pop
sub
cli
xlat
int3
fsubs
icebp
dec
adc
mov
popa
stc
ret
addr16
shll
adc
scas
cmc
call
ljmp
mov
ret
mov
inc
push
movsbl
gs
or
scas
jmp
aas
inc
int
add
push
shlb
jb
mov
test
jne
arpl
scas
xchg
push
mov
xor
or
call
cltd
pushf
lahf
dec
jbe
flds
ds
imul
jne
fidivrl
inc
jne
sti
sub
xchg
adc
repnz
insl
dec
sbb
push
add
push
jmp
mov
jmp
mov
addr16
dec
pop
xchg
fidivrs
jno
outsl
add
jmp
rcll
pop
and
fmuls
push
inc
inc
jl
xor
dec
fs
sub
insb
push
cmp
mov
dec
cmpsl
jo
aad
adc
cmp
popa
sbb
imul
push
ja
scas
sbb
mov
inc
fadds
in
sbb
into
sub
sub
rcl
sub
push
dec
mov
test
sbb
add
cmp
xchg
adc
push
lds
iret
jl
call
int3
lret
cmp
gs
popf
fwait
fwait
jmp
inc
dec
jmp
or
cmp
mov
cmp
mov
mov
push
jb
sbb
cmp
pop
test
jg
int
push
fdiv
mov
pusha
xchg
stos
mov
insl
subl
mov
cmp
push
mov
leave
or
add
test
xor
aad
out
xlat
add
mov
push
sbb
mov
or
test
pop
cwtl
or
aam
out
xchg
js
rol
inc
sbbl
mov
sub
lods
test
popf
jo
mov
xchg
xor
fs
sub
push
sahf
into
nop
daa
jg
imul
pop
lahf
in
insl
negb
and
jmp
neg
ret
orl
femms
xchg
std
loopne
hlt
repz
or
das
leave
mov
push
scas
cmp
adc
jecxz
mov
adc
jnp
es
xchg
fcoml
test
ss
mov
icebp
cmp
push
icebp
insb
stos
or
add
push
or
aad
or
inc
inc
mov
sub
pop
pop
cld
pop
jg
add
add
out
movsl
push
sbb
in
cli
jo
out
dec
jo
xchg
add
sub
shlb
in
fnsave
movsl
pop
jo
cmpb
mov
dec
and
xchg
es
das
cmp
push
push
inc
add
pop
add
cs
ds
shlb
das
loop
fdiv
cmc
arpl
data16
testl
pop
mov
adc
insl
cmp
mov
mov
lods
popf
mov
sub
popf
add
dec
adc
mov
cmp
mov
pminub
mov
dec
sub
daa
pop
roll
mov
jae
outsb
push
lods
cli
cwtl
mov
jns
repnz
jecxz
push
daa
mov
movsb
and
popa
imul
pop
mov
jns
jle
js
mov
lahf
in
jno
cwtl
or
or
xor
repnz
add
sbb
jmp
xor
xchg
sbb
pop
repnz
jnp
cmp
jge
mov
xchg
stos
popf
and
xor
addb
iret
lods
fsubrl
mov
jmp
scas
mov
js
jb
inc
call
xchg
push
fwait
push
sub
push
adc
cltd
pusha
dec
xchg
stos
adc
add
shlb
test
cmpsl
out
jmp
movsl
push
xchg
dec
imul
rcrb
and
in
pop
cltd
jo
sar
inc
aam
imul
xlat
ret
imul
add
pop
in
jo
test
shll
jle
mov
repz
xchg
int3
lods
inc
test
xchg
push
repz
fnstsw
push
outsb
mov
mov
stc
fnstenv
mov
cmp
incb
sub
add
test
push
call
xor
stos
cltd
ds
fs
mul
xchg
lods
negb
add
lock
pop
cmp
jl
imul
into
mov
out
bnd
push
outsb
xor
and
hlt
loopne
scas
dec
int
movsl
les
adc
pop
inc
outsl
jae
mov
sub
fwait
dec
mov
imul
xor
xchg
push
sub
inc
adc
pop
jne
lcall
fisttps
jbe
mov
aam
pop
out
lahf
mov
arpl
mov
jnp
mov
mov
xchg
inc
mov
in
add
mov
sub
and
nopl
shr
fcoms
mov
and
les
xchg
sbbb
mov
mov
lods
arpl
mov
loope
xor
cmp
jle
testl
pop
xchg
pushf
lods
hlt
outsl
mov
arpl
mov
dec
insl
in
mov
pushf
in
mov
xor
push
mov
mov
rclb
test
jmp
adcb
popa
dec
jb
mov
call
xor
fidivs
cmpsl
inc
jecxz
icebp
mov
pop
pop
pushf
sbb
pop
inc
sub
movups
or
add
lods
xchg
or
xchg
xor
xchg
adc
in
xchg
mov
stos
iret
test
sbbb
sub
inc
movsl
sbb
popa
loope
hlt
dec
push
sub
sahf
dec
mov
mov
cmpsl
sahf
sbb
test
cmp
les
data16
popf
fdivl
call
ret
push
imul
pop
adc
xor
test
ret
add
and
and
cmp
fadds
fcmove
jns
out
stc
cmp
adc
xor
push
movsb
int3
mov
push
adc
jnp
mov
fcomps
pop
stc
mov
add
shl
sarb
loopne
or
hlt
repz
shl
jns
add
and
out
xor
ret
lea
cwtl
cmp
cli
pushf
in
fistpll
sub
pop
xor
icebp
jp
push
arpl
cmpb
and
mov
into
aas
pop
jmp
adc
inc
push
xchg
add
adc
adc
inc
cli
dec
movsl
dec
sub
popa
mov
sbbl
aad
imul
xchg
xchg
mov
xorl
scas
mov
daa
dec
jbe
clc
rcll
xor
push
leave
sti
ds
mull
mov
adc
call
imul
mov
jb
inc
out
mov
popa
pushl
jecxz
out
mov
cmp
sub
jae
cmp
sbb
push
xchg
push
vmread
in
nop
in
xorl
fisttps
mov
movsl
or
cld
repz
lea
push
cmp
enter
fwait
and
mov
jmp
push
jns
xchg
mov
ficoml
pushf
ja
xor
fs
mov
fidivl
vshufpd
frstor
inc
lods
cmp
sbb
lahf
insb
lds
aam
jmp
test
sbb
dec
imul
add
rcrb
pop
push
in
xchg
imul
and
inc
aam
iret
cmp
stos
rcr
out
xor
into
xorl
jmp
push
jne
adc
outsb
lcall
lret
adc
mov
xor
pop
test
mov
mov
dec
aam
xlat
daa
lea
cs
xor
stos
fiaddl
jp
jno
jns
call
mov
jge
test
jle
test
jmp
xchg
gs
dec
inc
shll
xor
movsl
xor
adc
sbb
mov
jno
or
pop
aaa
lods
pop
mov
fisubrs
and
cmp
push
cmp
sbb
lods
cli
lods
mov
xchg
setle
mov
dec
mov
add
sbb
add
sub
xadd
movsl
rclb
sub
movsb
pop
inc
shlb
jecxz
pop
arpl
jle
pop
xchg
jg
xchg
loopne
lods
sub
push
mov
outsl
stos
data16
popa
pop
es
adc
or
out
sbb
or
ret
lods
pushf
dec
outsb
xor
aad
stos
and
jp
mov
shlb
mov
adc
mov
jle
fcoms
xor
ficomps
lods
mov
insl
icebp
cmp
or
mov
dec
or
movsb
in
or
sub
idiv
stos
ds
aad
test
xorl
std
out
adcb
out
sbb
push
mov
popf
iret
fnstsw
cmp
fwait
push
and
xchg
les
cwtl
stos
mov
imul
jno
ds
add
pop
hlt
cwtl
nop
cwtl
loope
sub
xor
or
jns
sbb
cwtl
roll
leave
jmp
xchg
fldcw
shrb
bound
imul
js
jnp
push
fidivrl
ljmp
icebp
mov
jecxz
mov
enter
jb
jge
stc
pop
mov
sbb
dec
pop
mov
enter
addr16
sbb
ds
mov
mov
mov
filds
xchg
sub
add
shll
popa
cmp
adc
jg
pop
andl
sahf
add
inc
add
enter
fisttpl
xchg
sbb
ret
fwait
cmpsl
cmp
push
mov
repnz
pushf
pop
sahf
in
inc
cmp
outsl
rorl
sbb
push
gs
test
mov
adc
std
sub
xchg
in
mov
mov
repnz
sbb
xor
add
fdivs
fprem1
or
push
movsl
jle
push
inc
pop
and
outsb
cmpl
es
xchg
fdivs
test
inc
sub
dec
scas
repz
test
sarb
lds
jb
pop
pop
repnz
inc
ffree
pop
mov
pusha
scas
les
ss
xchg
mov
jbe
jbe
add
in
lods
jbe
stos
icebp
sub
push
test
mov
fwait
adcb
push
call
pop
outsl
cwtl
into
and
adc
pusha
or
xchg
adc
pop
xor
vpcomud
paddsw
mov
imul
jbe
jne
andl
das
mov
sub
pop
push
movsl
das
stos
iret
jle
pop
hlt
fnstsw
lret
mov
pop
adc
popf
mov
rcrb
std
mov
adc
insb
sbb
outsb
js
or
push
jne
xchg
pop
pop
ds
cs
sbb
jmp
inc
sarb
lods
je
aas
shrl
fidivs
adc
add
add
stos
mov
nop
xchg
cmp
je
into
or
into
mov
stc
sbbb
out
mov
inc
repnz
loopne
and
sub
adc
inc
or
xor
jae
out
in
mov
xchg
cwtl
jne
push
dec
cmp
inc
xchg
mov
addr16
shrb
adc
dec
xor
mov
das
adc
faddp
push
add
xchg
gs
fistpll
daa
test
pop
ljmp
jno
aaa
push
jnp
test
rclb
push
pushf
push
jno
fmuls
les
mov
mov
cld
sbb
inc
jl
leave
mov
cmp
mov
imul
imulb
mov
fcom
mov
imul
std
adc
inc
add
mov
ljmp
push
add
dec
and
cli
inc
adc
scas
mov
mov
adc
stos
xor
mov
ds
push
in
push
mov
cltd
mov
mov
adc
pop
loope
pop
mov
lods
js
hlt
and
lret
leave
js
mov
mov
mov
push
scas
add
adcb
loope
jno
and
loope
sbb
jae
stc
push
and
mov
mov
fs
scas
add
pop
add
int
loope
push
loopne
jl
mov
call
push
stos
xorb
js
loopne
sbb
push
or
dec
and
and
jge
stos
popa
mov
cmp
loop
mov
ljmp
das
enter
aaa
movsb
push
scas
jp
insb
lods
fsubl
push
and
xchg
add
and
repz
mov
jo
test
mov
jnp
shlb
in
je
cld
dec
sbb
fisubl
mov
fmulp
loop
lods
xchg
mov
sbb
iret
loop
jb
xor
lods
aaa
aad
mov
push
xor
jne
push
inc
call
cmp
andb
ficomps
adc
fists
xchg
jg
decb
push
les
data16
pop
ret
cmp
or
push
int
sub
mov
inc
jno
mov
mov
jl
pop
and
repz
andb
jge
pop
out
test
xchg
mov
pop
jbe
rcll
adc
test
mov
cmp
mov
lahf
add
jmp
push
cs
cmp
mov
xchg
es
push
adc
cli
stc
or
jnp,pn
lock
incb
shll
or
sbb
inc
cmc
jnp
inc
xor
or
jnp
mov
test
fldl2t
pop
outsb
jno
sub
inc
inc
test
aam
fstpt
scas
lods
pop
es
cmpsb
push
pusha
mov
add
mov
cmp
into
lret
mov
sbb
movsl
and
std
push
mov
out
outsb
fwait
xchg
dec
xor
sub
ret
lahf
fsubs
and
xor
sub
xchg
mov
adcl
in
sti
notl
jmp
or
mov
daa
add
dec
jmp
sub
fsub
repnz
or
pusha
adc
mov
and
sahf
push
roll
xor
push
dec
sbb
shrb
push
mov
loop
pop
xor
shl
dec
jae
pop
pop
rolb
xor
sbb
shl
ds
sub
mov
push
movsl
mov
sahf
jae
int
inc
lret
lahf
icebp
sbb
dec
int3
popf
cltd
ret
xchg
push
or
jl
loopne
mov
lds
sbb
adc
pop
lret
pusha
clc
fnstsw
test
dec
inc
dec
fildl
aad
sub
insb
sub
cli
imul
mov
xchg
in
imul
cmp
add
shrl
loope
mov
ds
mov
sbb
fcmovnbe
add
fcomps
mov
xchg
mov
jns
xchg
out
pop
xorl
iret
std
and
xchg
mov
sbb
push
cmp
insl
add
xchg
fnsave
sbb
ljmp
mov
xchg
push
scas
fs
mov
fs
outsb
leave
mov
cmp
dec
sub
test
loope
lods
mov
aam
pop
int3
add
ret
sahf
cmc
jge
lods
cld
enter
dec
mov
add
sub
rorl
loope
lahf
fwait
dec
call
mov
popf
insb
psubusw
push
mov
std
xchg
xchg
xchg
xor
fstpt
fimuls
pop
movsl
in
mov
dec
mov
emms
adc
and
adc
cmp
mov
jl
in
loop
gs
mov
lods
and
sub
movsl
mov
add
fists
outsl
call
xor
add
sub
adc
adc
ficompl
cmp
dec
push
mov
xchg
jecxz
out
or
pop
pop
repz
or
dec
xchg
testl
shlb
mov
std
gs
jl
lret
and
mov
rolb
leave
push
push
outsb
xchg
lods
inc
aam
loopne
mov
ljmp
fcom
lds
ret
mov
mov
js
call
inc
fs
cmp
cmp
pop
mov
movsl
pop
push
loop
shrl
scas
mov
dec
sub
mov
daa
mov
out
in
rep
xchg
int
push
adc
adcl
loop
or
xor
cmp
in
test
pop
out
rcrb
pop
sarb
jmp
out
xor
lods
and
jg
xchg
and
cmp
add
adcb
push
mov
mov
insb
enter
push
cmc
pop
push
aaa
test
jns
lea
dec
fidivrs
stos
sub
mov
shll
fs
push
sti
jecxz
push
pop
shlb
inc
cmp
repz
ds
push
js
dec
jl
outsb
imul
cmc
addw
xor
cmp
sahf
test
add
xor
test
cmp
pop
mov
loopne
mov
jge
push
jp
mov
jmp
sbb
xor
aaa
movsl
rclb
clts
mov
fwait
push
and
dec
mov
into
sbb
jne
pop
ret
popf
mov
jmp
mov
mov
lahf
sub
leave
sub
sub
ret
cmpsb
in
jbe
sahf
jmp
and
mov
aaa
jl
or
adc
outsb
dec
int3
pop
pushf
xchg
into
js
dec
test
ja
sbb
stc
rol
dec
mov
and
loop
mov
xor
jb
and
jns
insb
inc
mov
stc
push
mov
push
test
add
daa
mov
sub
and
rorb
fcmovbe
jmp
ds
sbb
inc
and
xchg
xchg
push
add
adc
mov
pop
test
add
jle
divb
les
mov
cld
add
jge
jg
mov
add
jno
and
pop
out
andb
mov
xchg
dec
mov
sarl
test
xlat
fsubp
repnz
dec
mov
or
adc
push
aaa
sub
loop
add
inc
int
pop
mov
hlt
add
sub
mov
adc
daa
sub
pop
lock
int3
stos
leave
adc
icebp
adc
fdivl
mov
push
sbbb
fstl
mov
and
jbe
mov
cmc
sbb
addb
rorl
aaa
push
mov
ud1
mulb
mov
pop
inc
jmp
aas
jno
shr
and
mov
dec
add
mov
std
push
popf
shrl
and
into
adc
or
cli
cs
mov
xchg
sbb
push
inc
lods
mov
scas
jp
cmp
xchg
outsl
mov
add
loope
sub
fcmovnb
outsl
addr16
cmpsl
in
mov
repz
lret
aaa
xchg
filds
push
aas
jnp
aaa
dec
out
ss
inc
mov
add
mov
push
cmc
add
jbe
fsubrl
jl
inc
cmp
mov
sahf
push
jmp
dec
dec
loopne,pt
inc
iret
dec
jmp
push
mov
mov
xor
stos
mov
mulb
mov
movsb
jecxz
pop
shrl
rclb
cmpsb
push
jp
adc
es
add
xlat
hlt
test
loop
sbb
and
out
test
enter
out
cwtl
pushf
xchg
and
incb
repz
insl
inc
push
hlt
gs
mov
push
dec
sbb
inc
cmp
insl
sar
das
bound
mov
negb
cmp
cmpl
xchg
cmp
lret
inc
test
insb
sbb
cmp
lahf
iret
dec
jmp
xor
nop
dec
xor
mov
or
xor
and
pop
loopne
or
mov
fldcw
sbbb
test
lods
ret
stos
cmp
cmpsl
mov
push
dec
and
icebp
cld
cs
or
cmc
and
inc
repnz
dec
xchg
and
jl
push
in
cmpsb
and
movb
mov
ret
push
sbb
add
addr16
push
mov
in
aad
push
jns
mov
dec
push
daa
sub
out
clc
and
mov
jne
push
imul
xor
jno
daa
mov
and
ljmp
iret
repz
movsl
ja
int3
jmp
dec
xor
jo
inc
cli
dec
jae
push
pushf
fdivl
push
jge
inc
loopne
pop
stc
das
mov
les
adc
jbe
scas
fdivrs
nop
repz
mov
xchg
scas
sbb
movsl
jbe
mov
sub
nop
pop
lods
ret
dec
enter
mov
mov
push
push
in
sub
ret
jge
or
jecxz
test
inc
idiv
jae
inc
outsb
xor
sub
push
sbb
mov
or
mov
dec
aaa
xchg
jmp
jge
cmc
pop
daa
sbb
add
loope
iret
mov
loope
xlat
adc
mov
les
mov
rolb
jecxz
cmp
push
fs
pop
pushl
ljmp
sub
dec
int3
add
lcall
mov
adc
in
sub
stos
cmp
xor
cmpsb
std
cmpsb
xchg
pop
imul
mov
ret
pop
std
push
sbb
mov
adc
rcr
or
adc
int
nop
cmpsl
mov
mov
xlat
push
cmp
bnd
push
or
es
sub
adc
xor
cld
out
xchg
dec
lahf
cs
push
bound
inc
lret
xchg
dec
sbb
mov
mov
add
pusha
mov
fbld
add
popf
pop
sub
loopne
jmp
call
stos
jnp
daa
loope
pop
mov
aaa
stos
add
xor
vmovq
jns
mov
adc
mov
nop
jmp
test
push
push
push
ljmp
fstps
and
cmpsb
and
nop
mov
daa
shll
jae,pn
push
inc
addb
sub
inc
aam
inc
push
and
das
sahf
pop
sti
icebp
jae
call
stc
or
lods
jmp
xor
aad
and
fs
sub
cltd
push
mov
jle
cmp
sub
cmp
mov
js
cmpb
imul
out
ja
std
sti
out
adc
pop
sbb
mov
jmp
lock
mov
sub
jp
scas
lods
mov
xor
loope
movsb
xor
mov
rep
dec
pop
mov
test
sub
jnp
je
mov
inc
pop
pop
daa
add
jo
jmp
push
icebp
pushw
aas
iret
pop
xchg
pop
ja
imul
out
cmp
mov
cs
jge
or
jae
fists
aas
pop
cmp
sub
dec
rcrb
dec
adc
jge
ds
add
or
push
movsl
dec
jmp
mov
into
pop
es
xchg
xchg
hlt
pop
fisttps
les
dec
aaa
or
push
mov
push
cmpsb
mov
inc
movsb
xor
push
jne
jge
imul
and
xlat
imul
popf
sub
cmp
ss
add
sahf
push
aas
outsl
pushf
je
dec
aad
ds
std
sbb
out
insb
push
cmp
aad
stc
sbb
rorl
fisubrs
adc
inc
rorl
jne
scas
movsl
sbb
enter
lea
push
popf
or
mov
test
out
inc
imul
adc
xchg
insl
test
sub
push
cmpb
add
pop
pop
mov
push
leave
ja
hlt
push
fnstcw
and
or
shlb
fstpt
pop
sbb
insl
out
fwait
dec
popa
dec
add
sbb
adc
aad
inc
lds
xchg
into
push
push
or
and
pop
adc
or
data16
inc
cmp
ret
sub
inc
jo
jp
dec
jnp
hlt
push
mov
fbld
mov
js
sub
dec
test
test
mov
std
clc
repnz
add
rorl
scas
cli
bound
je
pushf
add
stos
test
arpl
xchg
mov
dec
pushl
popf
cld
sbb
sbb
sbb
adc
mov
mov
pushf
subb
mov
popw
mov
lods
stc
shrl
pop
add
js
sbb
aas
push
nop
into
sub
pusha
xorl
sub
and
or
into
sarb
jnp
insl
xor
test
pop
mov
sub
pop
inc
lcall
mov
mov
scas
push
xchg
mov
dec
add
idivb
mov
cmp
inc
out
aaa
movsb
enter
mov
pop
xchg
pop
call
inc
and
jle
movsb
fs
cmp
movsl
outsl
or
dec
pop
push
rcll
cmp
jbe
and
loope
outsl
or
push
cmp
dec
pushf
sub
lea
fists
repz
incb
out
lret
push
pop
sub
loopne
insb
loopne
daa
lock
lret
imul
push
mov
xchg
and
ja
lret
jmp
iret
fs
test
mov
adc
aam
pop
push
scas
sub
std
pop
test
xor
fisubl
enter
inc
leave
pop
dec
fadds
dec
sbb
loopne
xchg
mov
test
jno
cwtl
shlb
push
lret
int
push
fs
push
fildl
repnz
addr16
mov
or
nop
xchg
pop
test
shlb
arpl
inc
ljmp
pushf
popf
rcrb
pop
aas
dec
pop
outsb
add
mov
xor
mov
cmpb
cmc
jp
jb
sbb
dec
push
shll
test
and
or
jmp
fiadds
push
jae
pop
mov
jb
outsl
xchg
das
mov
lret
inc
xchg
mov
out
loope
subl
mov
test
mov
aas
xor
mov
inc
inc
cltd
jae
int
rclb
xor
gs
jmp
add
sbb
cmpsl
sub
mov
adc
testl
cmp
ss
dec
popa
popa
inc
fsts
jne
imul
push
or
out
mov
xchg
push
test
jecxz
cli
pop
fdivrs
mov
jo
and
dec
lret
jbe
sahf
popa
test
mov
data16
dec
and
neg
rcll
loope
sbb
xor
mov
stc
mov
lock
out
insb
xor
daa
and
fstp
inc
stos
push
xor
sub
mov
call
xor
xchg
and
cmp
pop
ret
out
sti
pop
loopnew
xor
sbb
std
push
adc
push
test
and
push
adc
pop
xchg
dec
sub
push
sti
sbb
inc
cmp
add
iret
stos
sub
mov
inc
sbb
jnp
lock
lods
into
lock
pop
add
dec
inc
sbb
je
je
cmp
clc
movsb
xor
cmpsb
imul
aam
arpl
out
adc
shrb
test
out
jge
cmp
hlt
insl
sbb
fnstenv
js,pt
dec
shrb
imul
lds
jns
xchg
leave
cmp
lock
xchg
test
push
mov
ds
ja
jb
mov
sub
std
pop
testl
ljmp
mov
add
fstpl
dec
inc
mov
cli
pop
gs
pop
adc
xchg
les
mov
push
lret
scas
dec
aas
push
int3
decl
push
fstpt
pop
sbb
out
cmp
mov
pop
mov
dec
mov
and
gs
lock
mov
fldenv
inc
jns
mov
adc
stc
imul
or
jle
loop
and
inc
jbe
and
sbbl
popf
inc
cmp
loopne
xlat
imul
cli
aaa
sti
mov
fwait
mov
rorb
gs
in
cmp
lea
add
mov
shl
jl
inc
xchg
push
jb
xor
mov
mov
jo
xchg
pop
sahf
jle
mov
push
or
mov
jmp
stc
jle
seto
or
das
cwtl
ljmp
mov
mov
ss
pusha
outsb
inc
in
push
dec
jmp
test
push
mov
andb
pop
movsl
mov
ret
dec
push
insb
aas
add
gs
jae
push
pop
adcl
mov
dec
pusha
xchg
jmp
jae
mov
dec
jecxz
aad
push
add
enter
test
shrl
out
movsl
cmpsb
aaa
inc
add
ds
push
scas
jg
stos
call
sbb
shlb
dec
enter
and
repnz
sbbb
jae
cmpl
jge
insl
inc
dec
negl
loopne
xor
lods
xor
mov
xchg
std
repnz
fiaddl
or
and
jg
hlt
das
xchg
add
adcl
sbb
leave
rorb
or
lods
out
clc
mov
outsl
cmp
pop
out
push
pushf
mov
enter
or
jg
ljmp
mov
fbstp
jbe
jns
int3
negl
mov
test
push
push
or
enter
mov
inc
sub
mov
ljmp
add
mov
cmp
arpl
es
cmp
push
mov
lret
lods
cld
dec
push
and
js
inc
xchg
push
mov
pop
hlt
stos
repz
pop
pop
lea
and
enter
imul
cmp
cltd
xchg
aad
inc
in
stc
jae
ja
sbb
adcb
fildl
mov
out
jg
pop
sub
push
rcl
xchg
push
dec
fs
xor
in
aas
jp
mov
out
dec
clc
mov
cltd
jo
and
jge
in
rolb
pop
inc
dec
xor
addr16
iret
lods
cli
imul
fwait
push
clc
jae
pop
out
aam
cmpl
ficompl
jl
ret
pusha
adc
mov
enter
pop
pop
cmc
dec
push
je
enter
clc
pushf
cmp
test
call
clc
xor
hlt
insb
mov
flds
xor
mov
fcomps
sbb
and
js
loope
mov
dec
xor
ljmp
sub
push
pusha
jb
sub
cltd
movsl
aam
xchg
stos
inc
test
sbb
sub
pop
pop
cmp
ss
jmp
jae
js
out
es
lock
pop
mov
xchg
in
pop
aad
mov
sbb
push
test
mov
dec
int
dec
shlb
cmpsl
adc
sub
stc
testb
bound
jmp
mov
outsl
sub
fldt
or
fidivrl
dec
mov
inc
pop
leave
sbb
clc
pop
xchg
cmp
scas
stos
andb
add
lds
xchg
xchg
sbb
shr
insb
sbb
jne
jmp
mov
sbb
inc
jl
adc
push
ss
int
ja
adc
inc
lcall
enter
int3
les
mov
sub
mov
jae
cmp
jns
ret
pop
cmp
arpl
pop
inc
pushl
sbbb
xor
cmp
sahf
xor
scas
aad
cld
data16
push
sti
aam
fistps
jbe
pop
cmc
push
sbb
jns
pop
outsb
sar
dec
pop
iret
jnp
in
or
das
cltd
and
cmp
dec
fmull
or
leave
jne
incb
adc
pop
loopne
sub
inc
lret
aas
shrl
dec
xor
aas
loopne
mov
push
jg
xor
xchg
xor
mov
adc
mov
jle
sbb
lds
inc
push
mov
cmp
icebp
call
leave
fidivrs
js
enter
adc
enter
jl
ret
ja
pop
fdivr
mov
push
xchg
shll
cmp
in
sbbb
jno
sub
mov
add
in
mov
fldt
lock
or
pop
xor
jge
push
movsb
adc
cmp
ja
lock
pop
mov
mov
int3
cmp
and
inc
dec
aaa
xchg
jnp
dec
pop
mov
add
xor
mov
pop
add
popa
or
adc
jmp
cwtl
nop
dec
movsl
imul
cmp
mov
rcl
ret
mov
leave
and
fnstcw
hlt
imul
lea
enter
push
out
fs
xchg
xchg
repnz
cld
shl
jbe
mov
sbb
aas
lock
mov
sbb
mov
cmpsb
xchg
sbb
xchg
add
or
in
or
push
loope
aam
daa
cltd
mov
pusha
jl
xchg
cwtl
jae
sti
in
repnz
xor
test
leave
mov
jae
aam
inc
scas
or
xor
sub
jae
aam
add
push
imul
mov
aaa
sbb
imul
mov
cwtl
call
sbb
pop
incl
push
sarb
pusha
test
or
shrb
mov
cmc
jmp
into
inc
cmpsb
loope
add
ret
pop
push
int
jmp
aam
pop
jae
lods
inc
mov
fadds
lcall
mov
push
mov
lods
ror
push
dec
stc
aad
cmp
push
dec
fldt
or
and
das
xchg
in
jb
aas
and
in
xor
pop
adc
mov
cli
cltd
int
xor
mov
sub
mov
rorb
call
sti
and
fiadds
bound
xor
std
jbe
pusha
adc
inc
in
cmp
cmpsl
jno
push
add
push
jmp
push
push
out
mov
aam
rcrl
into
xchg
nop
cmpsb
out
data16
push
cltd
outsb
sbb
and
in
lret
outsl
les
shl
js
lods
jl
pop
repz
dec
pop
fcmovbe
leave
sub
dec
inc
dec
or
inc
xor
daa
push
loop
and
in
and
xchg
mov
lods
pop
fs
out
int3
mov
jmp
fwait
aam
add
or
repz
push
fcomi
and
outsl
fwait
adc
add
push
xor
mov
or
sbb
dec
in
mov
stc
call
mov
mov
inc
punpckhwd
andb
mov
pop
cwtl
outsb
insl
test
xor
dec
aaa
xchg
fxch
adc
out
les
in
add
or
inc
or
ss
imul
into
pop
add
and
push
xchg
mov
adc
adc
mov
popl
cmp
push
pop
stos
pop
mov
popa
fdiv
mov
jbe
cmp
xchg
int3
fists
bound
jbe
test
pop
xor
test
xchg
test
or
adc
ljmp
hlt
sbb
jp
mov
test
add
sub
mov
mov
cmp
jo
mov
in
stc
outsl
dec
enter
pop
mov
inc
inc
push
jecxz
aas
xor
adc
xchg
xor
or
sbb
pop
dec
dec
push
add
movsb
lea
into
or
fildll
xor
adc
mov
sbb
and
jno
int3
mov
mov
testl
push
call
xchg
mov
outsl
push
or
std
cmp
lock
xor
mov
xor
lods
aad
cmpsl
dec
sub
dec
jge
jnp
inc
je,pt
push
dec
out
ljmp
xchg
dec
jbe
inc
pushf
sub
fmuls
xor
cmp
or
outsl
jno
cld
imul
adc
xor
push
scas
inc
in
pop
imul
add
push
ss
jbe
xchg
movntq
outsl
sub
lret
push
fs
rcl
mov
iret
add
cmp
outsl
imul
test
hlt
pop
jg
out
shlb
xor
rorb
push
in
xor
out
hlt
dec
mov
or
mov
add
and
ds
pop
arpl
adc
cmp
sbbb
mov
inc
dec
pop
inc
jg
add
data16
rolb
adc
clc
aas
jmp
or
dec
mov
shr
mov
xchg
bound
dec
test
push
pop
pop
push
push
adc
xor
push
sbb
mov
mov
dec
or
cld
out
fimuls
stc
in
lret
and
xchg
push
xor
out
mov
push
sbb
icebp
fisubl
or
lea
das
bound
andb
inc
push
fsubrs
sarb
cwtl
out
push
xor
push
outsl
inc
lds
pushf
sbb
push
xchg
jbe
out
pop
shlb
std
mov
leave
jno
mov
dec
mov
je
in
pop
jle
mov
cmpsl
ret
sarl
jp
push
arpl
test
icebp
loopne
gs
push
dec
or
adc
or
sub
mov
iret
jb
xor
push
mov
insl
ret
lds
popl
pop
aaa
popf
mov
jge
push
das
fs
and
leave
cld
sbb
xchg
cld
insb
lods
cli
rol
scas
or
sarl
mov
out
loop
mov
les
adc
out
or
inc
ja
shlb
test
sbb
lods
ja
pop
lret
add
add
outsl
ljmp
testl
dec
repz
fnstenv
push
mov
or
xlat
add
mov
push
iret
nop
mov
aam
loopne
pop
push
icebp
ja
mov
int
test
mov
fimull
dec
jb
inc
xchg
xchg
sub
and
popf
xchg
mov
imul
jbe
push
in
add
ret
frstor
cmp
arpl
or
mov
rcr
in
jg
mov
sbb
push
movsb
cmpsb
dec
mov
xor
or
out
mov
mov
jle
insl
dec
scas
in
in
in
daa
dec
mov
push
mov
bound
mov
shll
inc
sub
arpl
ds
jmp
push
cmp
jl
adc
ret
rcr
loop
adc
dec
adc
lret
mov
and
mov
xlat
js
lret
out
mov
outsb
pop
sub
das
sub
pop
js
pop
or
sti
inc
cli
out
dec
rcrl
in
xchg
jns
lods
inc
adc
dec
popl
sub
loope
insl
mov
xchg
daa
es
push
sub
cmp
rcll
test
loop
insb
loopne
fidivs
xor
fs
scas
nopl
cmp
inc
jg
mov
inc
jg
fwait
sbb
adc
and
int
xor
mov
inc
insb
or
ljmp
jbe
mov
mov
cld
out
adc
aad
lods
dec
test
ljmp
cmp
fiadds
sub
fnstcw
pop
cmpsl
add
sub
lea
dec
test
adc
push
imul
cltd
sbb
js
dec
sbb
inc
sarb
and
inc
pop
jg
pop
lahf
or
and
push
out
inc
push
adc
or
in
stos
shlb
inc
out
pop
jnp
and
push
sub
outsl
mov
inc
push
xchg
mov
dec
xchg
ret
push
sarb
js
mov
xchg
movsb
outsb
pop
cli
mov
xor
sarl
shrl
cmp
dec
push
mov
xor
jp
pop
loop
inc
scas
xchg
and
out
movd
sti
xor
std
fnstsw
cmp
mov
test
pushf
shrl
test
push
xchg
pusha
push
mov
adc
push
pop
sbb
adc
popf
mov
fcoms
lods
xor
inc
sub
xor
xor
les
inc
push
sbb
cmp
in
mov
jg
dec
inc
cmp
inc
mov
push
xlat
out
mov
testb
add
pop
inc
in
adc
mov
fadds
xchg
in
imul
int3
or
cmpsb
insb
jg
push
sti
into
cmc
inc
in
dec
js
push
mov
xor
sub
push
jmp
pusha
sahf
ja
mov
shll
js
rolb
or
push
and
lea
jo
push
lods
lods
repnz
xchg
mov
sbb
mov
adc
sub
adc
fwait
out
out
push
sub
fisubrl
sarl
ljmp
jle
mov
sub
nop
inc
loope
adc
adc
lods
jo
mov
nop
or
add
fstps
add
mov
lret
fcoms
mov
inc
mov
xor
xor
into
pop
pop
mov
cli
out
sbb
jl
je
test
in
testb
jnp
jmp
dec
test
pop
bnd
jns
mov
push
stc
inc
popf
xlat
cld
sub
loopne
add
jge
ja
lret
mov
push
js
sub
push
sbb
inc
jmp
mov
sbbl
cmp
enter
aas
fisubrs
adc
insb
cmp
and
enter
cmp
mov
xchg
or
jge
pop
and
cmp
lods
pop
xor
sbb
push
stos
mov
cli
ficompl
sub
mov
aas
shlb
popa
outsb
fbstp
ss
insb
nop
addl
and
adc
es
sub
jp
clc
dec
jg
je
shlb
lock
lret
pop
lgs
or
fs
filds
scas
insb
lret
mov
orb
push
push
cmp
mov
orb
mov
sbbl
push
sub
mov
das
addl
mov
xchg
xor
je
insl
scas
loopne
popf
pop
jl
ret
jecxz
mov
and
imul
and
movsb
nop
xorb
aaa
jp
and
lcall
lahf
mov
int
sti
push
mov
nop
fidivrs
leave
lods
pop
mov
sti
hlt
fisttps
xor
test
bound
jg
out
in
stc
dec
andb
jle
adc
sub
daa
mov
outsb
fsubrs
sbb
and
or
loopne
int
push
inc
addb
js
fwait
mov
mov
mov
jno
rorl
out
or
pop
test
mov
out
frstor
adc
cli
cmc
mov
lcall
dec
into
pop
icebp
icebp
stos
lods
xchg
mov
or
ja
test
icebp
xchg
cmp
cli
es
ss
mov
or
lret
neg
jbe
pop
xorb
xlat
int3
sti
xor
in
movsb
enter
in
icebp
loope
rorl
sub
or
aad
xor
add
adc
popf
ja
adc
daa
and
xor
cmp
push
test
rcl
repnz
inc
xor
lds
icebp
stos
mov
icebp
jmp
jno
jge
mov
js
cmp
test
sub
mov
cwtl
sub
push
stos
add
out
testb
mov
lret
pop
pop
leave
mov
dec
aas
cwtl
mov
and
sahf
gs
lret
pop
test
add
fstpt
jecxz
sbb
pop
lods
adc
xor
das
push
push
out
push
insl
repnz
repz
and
xor
adc
xchg
inc
xor
test
pop
dec
push
das
inc
jne
or
into
mov
pop
sub
mov
xchg
sub
or
and
jb
dec
loop
and
push
add
dec
sarb
add
push
xor
sarl
add
xor
fistpll
aam
push
pop
pop
insl
cltd
std
cltd
jbe
ljmp
add
and
rcrl
fdivrs
jp
xlat
sahf
out
mov
in
orb
jecxz
lret
cmp
or
loop
ds
int
outsb
testb
cmp
pop
inc
inc
cmp
mov
stos
stc
lods
cmc
lds
mov
cmp
test
daa
and
mov
mov
push
push
push
xchg
mov
js
insl
or
jno
clc
ret
dec
jo
push
clc
mov
mov
push
push
or
pop
sbb
lret
mov
inc
jle
or
jmp
leave
out
stos
outsl
cltd
out
int3
in
mov
mov
js
aad
dec
pop
addl
daa
jne
and
mov
andl
mov
sti
push
out
add
adc
or
loopne
pushf
jo
cmp
mov
addr16
ljmp
xchg
jecxz
add
sti
test
cmpsw
push
xlat
fstpt
xchg
outsl
xor
fdivrp
roll
xlat
imul
scas
aaa
mov
inc
sub
cmp
push
mov
shll
jne
mov
adc
fsubrl
rol
push
add
cld
gs
xor
sar
pop
pop
ret
cmp
mov
xchg
mov
aam
push
sti
es
ja
push
mov
stc
adc
inc
lock
aas
push
ret
xor
cmp
mov
inc
xchg
out
mov
dec
dec
sub
add
jo
sbb
adc
insl
cmp
cmpsl
scas
and
sub
lods
sbb
lock
push
push
aam
mov
sbb
test
mov
jb
mov
inc
xchg
jae
push
mov
nop
ret
pop
xorb
pop
sub
sub
mov
and
rcr
ljmp
inc
push
negl
rcr
add
fbstp
and
mov
mull
push
pop
fucomi
sbb
popf
pop
sbb
outsb
sbb
ljmp
pop
inc
fidivrs
ret
pop
nop
inc
fstpl
sbb
dec
and
outsb
mov
xorb
dec
addr16
pushf
mov
mov
sub
shll
out
jg
pop
fiadds
mov
out
popf
es
and
sub
jno
js
jle
addr16
adc
adc
lods
pop
xor
lods
xor
mov
gs
daa
push
int3
pop
ss
add
mov
jo
mov
rcrl
test
push
jp
mov
je
mov
int
mov
xchg
or
mov
icebp
bound
lret
xchg
jle
data16
adc
xchg
out
and
cmpsl
fs
data16
push
addr16
adc
ja
adcl
or
mov
fcompl
xchg
inc
fwait
jecxz
cli
jno
cs
insb
icebp
mov
adc
in
xchg
inc
push
dec
dec
lods
loope
or
push
jg
inc
lds
int
mov
dec
or
test
imul
mov
jmp
xchg
push
xlat
pop
sub
push
stos
ds
sbb
jb
inc
inc
pop
testb
out
ret
jb
or
lods
clc
fs
pusha
scas
jo
fdivr
mov
adc
or
fcomp
out
pop
add
pushf
inc
aas
mov
or
jp
add
mov
mov
fnstsw
add
das
and
xor
test
loop
cmp
ljmp
lds
push
mov
mov
add
aas
fdivp
out
mov
jb
mov
push
add
and
jp
cmp
inc
roll
movsb
loopne
pop
ljmp
orb
dec
pop
and
push
add
sbb
or
jl
arpl
push
push
incl
ret
ja
and
add
fidivs
cmp
ret
int
hlt
imul
pop
movsl
cli
pushf
cs
xor
mov
fcmovnu
mov
inc
dec
pop
je
or
jp
lret
mov
mov
mov
dec
out
int3
movntq
out
fwait
ret
scas
outsb
or
imul
mov
pop
xchg
jae
imul
dec
dec
jmp
sbb
mov
dec
fistpll
outsl
cmp
fcompl
adcb
pop
repz
lds
cmp
jbe
mov
cmp
xor
imul
lds
mov
out
cmp
pushf
pop
inc
cmpsb
stos
mov
adc
pop
or
cmp
inc
insb
push
add
push
push
sbb
dec
xchg
fnstcw
adc
daa
ljmp
lods
inc
pop
mov
fwait
mov
je
mov
sbb
cltd
gs
or
push
test
int3
test
or
movsb
xchg
or
scas
das
adc
lock
shrb
cmp
sub
inc
nop
push
test
shll
mov
adcl
dec
jp
lds
roll
xor
rcll
cld
test
fmuls
in
sbb
jno
dec
ret
dec
cmp
es
cmp
mov
pop
mov
and
repnz
push
out
xor
jb
divl
hlt
mov
inc
sarb
in
pop
in
or
out
or
stos
sbb
mov
nop
mov
or
cmpb
xor
jecxz
cmp
outsl
or
fistpl
push
lahf
add
xor
jge
or
cld
sbb
add
mov
sbb
pop
and
jg
xor
mov
aam
scas
stos
and
xchg
jg
jb
jne
cmc
xchg
xchg
push
sbb
inc
fcomp
fldl
cmp
clc
pop
je
cmp
lcall
xor
and
dec
pop
add
adc
dec
or
insb
push
and
add
push
aam
mov
jb
pop
xor
insl
add
pop
setnp
aam
push
pop
jg
xchg
and
dec
test
pop
sub
stos
add
push
loope
jmp
outsb
cmp
rcr
xchg
mov
sahf
mov
add
sahf
stos
or
and
inc
cli
xchg
aad
movsb
loop
cmpsb
enter
lock
push
sti
lahf
push
add
xor
loope
push
arpl
or
fstp
pop
cld
aam
loopne
push
mov
and
cmp
movb
fimull
inc
popa
jle
loope
mov
push
je
and
fucom
sbb
ja
test
sub
cmp
dec
xchg
mov
mov
out
movsl
cltd
mov
sub
hlt
test
push
cltd
push
and
jo
push
sbb
test
movsl
test
or
aam
pop
setnp
ss
xchg
or
xchg
arpl
imul
pop
ja
and
js
sahf
daa
fsts
iret
dec
fndisi(8087
mov
dec
adc
adc
int
mov
sahf
mov
mov
movsl
ficompl
adc
dec
sbb
mov
rcrl
rorb
aas
pop
outsl
rol
int3
cltd
mov
fisubrl
add
hlt
fs
sbb
les
and
inc
push
and
mov
mov
pop
jne
in
add
mov
enter
dec
ja
cwtl
inc
loop
jne
sarb
subl
stc
xchg
xor
cmc
push
sub
sub
iret
mov
es
push
cmpsb
das
fs
push
xchg
ret
cli
pop
mov
adcb
xchg
pop
mov
cmp
jmp
add
scas
add
sbb
lahf
clc
sub
jno
jns
dec
shll
in
repz
inc
mov
imul
mov
pusha
cmp
push
sub
adc
inc
sub
loop
out
push
sub
ret
or
mov
jno
test
adc
and
jmp
and
lret
or
add
pushf
pop
cmpsl
data16
cmpsl
inc
xchg
mov
sbb
push
int
xor
adc
jae
js
sub
daa
test
push
in
jg
or
jg
into
xlat
in
jp
mov
xor
stos
dec
scas
dec
sbb
ljmp
out
test
and
pushf
inc
or
cld
sbb
scas
xchg
test
mov
imul
jg
sarl
cwtl
push
lcall
iret
in
jmp
sbb
loopne
mov
outsb
xor
mov
pop
cmp
adc
das
fstl
lret
movsl
push
in
faddp
push
orl
ja
mov
jmp
jle
in
push
sub
xchg
cmpsl
xchg
and
jp
lea
jle
mov
pop
xor
jmp
cmp
fldcw
inc
xchg
gs
imul
mov
dec
scas
or
mov
and
mov
xchg
sub
or
aam
popf
cs
insl
hlt
push
hlt
call
cmp
dec
dec
popa
cmp
pop
fldcw
cmp
and
inc
jl
popa
sbb
lds
daa
inc
inc
xor
dec
cli
sti
cmpsl
xchg
cli
inc
fwait
add
loope
xchg
cmpsl
sbb
cmp
nop
inc
cld
xchg
push
xchg
enter
mov
jne
jl
sub
pop
sub
fsubs
sbb
sbb
das
mov
in
push
pop
sub
push
mov
sbb
lds
adc
and
jns
sub
scas
adc
testb
mov
es
cli
and
insb
sbb
shr
mov
and
dec
sub
or
in
pop
jge
jmp
out
cmp
popf
mov
sbb
dec
mov
or
or
or
inc
xor
addr16
add
scas
mov
add
sbb
jg
call
push
pusha
cli
cwtl
sbb
leave
loope
lods
sub
movsb
mov
mov
imul
fwait
das
push
sbb
daa
das
add
test
scas
inc
dec
mov
mov
sbb
push
sub
xchg
mov
mov
push
aas
push
jge
sbb
push
lea
sbb
inc
sub
mov
dec
mov
sub
stos
sub
adc
maxps
add
sbb
mov
add
arpl
call
mov
mulb
int
iret
mov
aaa
push
test
cmpsl
loope
mov
mov
gs
adc
pop
icebp
xchg
ljmp
mov
push
pop
xor
fisubs
mov
jnp
fsubs
outsl
adc
inc
lock
pop
cmc
sbb
enter
cmp
cmp
stos
push
fidivrs
jecxz
insl
loope
ss
aaa
test
ja
sbb
fisttps
push
jle
mov
subl
xchg
sbb
scas
mov
sbb
test
out
in
pop
out
sbb
lods
movsb
das
ret
pusha
sbb
cmc
push
mov
lea
and
lahf
addr16
loop
aam
out
outsb
inc
adc
or
xor
pop
sbb
loope
in
lret
aaa
mov
mov
les
and
and
sti
sti
jmp
mov
out
sbb
add
pop
mov
sarl
push
push
fwait
jbe
and
jo
adc
pop
out
in
imul
call
jmp
cmp
sbb
jae
xor
mov
jle
and
mov
mov
mov
adc
sbb
shl
insl
js
pop
enter
int
hlt
xchg
outsb
pop
sarl
mov
mov
rcr
xorps
in
mov
data16
movsb
xchg
repz
push
jnp
notl
mov
xor
imul
jb
cmpsl
or
push
cmp
mov
int3
es
push
ja
outsb
cmp
and
inc
mov
add
mov
sbb
add
outsl
lret
cmp
push
les
mov
jnp
push
mov
sbb
ja
fs
sub
clc
pop
dec
addr16
repnz
es
sbb
daa
or
mov
pop
xchg
loop
dec
xchg
je
mov
les
clc
jb
xor
xchg
mov
cmp
push
roll
subl
push
xlat
not
dec
cli
xchg
dec
inc
pop
and
jbe
push
lahf
mov
or
xor
adc
xchg
mov
mov
or
ret
sbb
adc
push
pop
aad
scas
inc
sbb
xlat
and
daa
sti
and
xchg
add
outsl
sbb
ret
mov
nop
pop
sub
imul
cmp
popa
jmp
mov
in
jne
pop
lret
push
push
jbe
cmp
sarl
shr
mov
testl
loop
pop
sbb
fstpt
and
fstpt
out
jo
push
pop
out
cld
jns
mov
inc
dec
fidivs
inc
mov
cwtl
enter
and
sub
add
ja
mov
jns
insl
fistl
int
pop
aam
dec
mov
add
lret
pop
outsb
pop
xchg
and
out
jo
enter
dec
loopne
jbe
push
notb
pop
cmp
pop
daa
lret
test
shlb
mov
jcxz
pushf
mov
roll
pop
shl
push
mov
pop
add
xchg
xor
sbb
nop
jg
bound
jmp
movsl
in
ss
mov
lret
lods
mov
and
loope
sub
xchg
mov
shl
jae
jbe
bound
test
inc
xchg
jno
test
lret
shlb
dec
mov
das
fcmovnu
cmp
inc
shll
std
inc
imul
pop
fidivrs
cli
arpl
stos
or
mov
lds
imull
adc
out
push
rorl
push
adc
stos
test
popa
insb
inc
push
dec
lret
adc
adc
dec
test
add
xorb
call
add
mov
das
dec
sub
xchg
jmp
inc
add
and
iret
push
imul
push
push
test
mov
arpl
xchg
mov
lea
in
xchg
jge
jecxz
fyl2xp1
popf
repz
aam
inc
pop
aaa
dec
shl
test
dec
pop
imul
or
cld
lcall
jbe
sub
push
jb
sbb
jne
push
adc
lods
shld
adc
int
mov
sahf
jge
in
jg
mov
cmp
sub
xchg
xchg
pop
push
jg
push
and
mov
mov
cmpb
dec
cmc
hlt
cmpsl
adc
and
mov
mov
add
mov
test
insb
mov
push
outsl
nop
jo
mov
and
into
sbb
popa
data16
jae
sub
xchg
aas
dec
stos
mov
pop
xorps
inc
shlb
mov
pushl
in
jae
in
or
cwtl
push
cs
xchg
ja
shll
lock
jl
sbb
test
xor
sub
in
pushf
gs
js
xlat
fbstp
shrb
pop
jmp
jo
mov
jo
jg
ret
into
enter
sbb
lods
shll
shr
rcl
hlt
inc
gs
fdivs
xchg
icebp
fdivl
cltd
xlat
lret
or
jnp
lret
adc
ret
ficoms
xchg
push
testl
in
cltd
cmp
ds
clc
inc
mov
push
and
push
ja
dec
sar
cmp
mov
pop
icebp
mov
das
sub
mov
push
rcrb
pop
cmp
loope,pn
stc
add
jbe
or
mov
iret
leave
fs
sub
sbb
jle
adcb
xor
push
hlt
out
adc
and
ret
pop
out
fmull
sbb
xchg
jle
pop
mov
lds
sub
cmp
sub
cmp
push
jb
inc
daa
mov
gs
push
cmp
or
xchg
lods
sub
push
popf
mov
fiadds
lret
movsl
cmp
inc
js
orl
inc
in
dec
xor
testl
mov
gs
and
in
xor
or
insb
adc
xchg
pop
call
test
push
cs
mov
sub
mov
inc
pusha
pop
jnp
add
jmp
mov
ficoms
cmpsb
aam
adc
imul
push
sub
or
cmpsb
cmp
jnp
adc
enter
cmp
jmp
int3
rcrb
mov
insl
fnstsw
lock
inc
cli
inc
xor
sbb
ret
fs
xorl
faddl
adc
xchg
lods
dec
cs
jmp
fnsave
ljmp
xchg
dec
sub
hlt
lods
sbb
sub
add
imul
cmpl
mov
inc
sub
push
adc
add
jp
icebp
xor
into
xor
or
cmp
mov
insb
imul
mov
adc
in
lock
iret
cmpsb
lods
jg
dec
loope
xor
fidivrl
mov
push
fwait
mov
adc
push
xchg
jb
data16
inc
jno
loop
cmp
lahf
dec
bound
dec
mov
or
add
cmpsl
std
fidivrs
push
sahf
mov
insl
shlb
jns
rcll
lret
adc
push
popa
repz
pushf
cmpsl
pop
imul
adc
jne
mov
cld
lret
mov
push
je
adc
lcall
imul
in
add
sar
vprotq
mov
lds
movsl
mov
cmpsl
mov
mov
dec
xchg
fists
pop
mov
cmp
inc
nop
inc
fisubs
jbe
imul
lahf
jecxz
mov
mov
fidivl
push
insl
es
and
test
imul
jo
inc
mov
mov
or
xchg
je
push
fisubrs
push
mov
or
arpl
iret
sbb
test
and
fldcw
xchg
std
adc
push
xor
dec
popf
data16
mov
or
mov
and
bound
icebp
inc
pop
push
div
cli
dec
jmp
lds
js
cmpsb
cmpsl
sub
mov
hlt
sbb
cmp
movsb
xchg
or
scas
daa
pop
cmpsl
movq
cmp
xchg
cwtl
xchg
cmp
test
jmp
imull
push
lods
mov
mov
cmp
inc
mov
repnz
mov
loop
arpl
lods
jnp
push
dec
fisttpll
adc
movsl
sub
mov
inc
push
aad
inc
shll
dec
and
sub
fwait
inc
and
cmpsl
arpl
sub
pop
xor
lods
incl
ljmp
test
fldl
jne
mov
cmpsl
sbb
push
sbb
lods
mov
clc
nop
sub
jp
push
scas
dec
mov
addb
je
cmc
sbb
mov
imul
out
lahf
jmp
arpl
das
xchg
in
pusha
add
and
mov
lds
adc
fiaddl
pop
rclb
jl
jecxz
sub
jmp
sub
fwait
and
or
add
je
jle
cli
cmp
ficompl
mov
movsl
inc
loop
push
mov
adc
xor
rcr
sbb
test
pop
push
pop
inc
popa
mov
pavgw
fistpl
call
les
cs
mov
jnp
cmpsl
xchg
lock
imul
mov
test
cmpsl
push
fdivs
pop
xlat
pushf
add
jge
dec
add
push
push
push
outsb
in
sti
loope
cli
pop
sub
vmovmskps
scas
pushf
cli
out
insl
cmpsl
xchg
dec
and
cmp
ret
test
xchg
icebp
sub
pop
cmp
and
lods
cwtl
add
xor
mov
dec
mov
push
nop
adc
rorl
mov
push
pop
in
mov
loope
aaa
cmpsl
cmp
jnp
jb
inc
push
jae
dec
and
mov
adc
pushf
pop
fsubr
xchg
mov
adc
cmpsl
je
push
mov
pop
in
jae
xchg
xchg
mov
pusha
xor
sub
sti
repz
adc
daa
pop
sub
lcall
cmp
and
xlat
mov
ror
and
stos
mov
int3
fcompl
nop
aad
jns
fld
or
xchg
mov
in
insl
out
xchg
mov
cwtl
in
lea
lea
or
mov
call
rcll
pop
adcl
push
std
dec
pushf
pop
cli
test
cmpb
pop
dec
jle
mov
xor
add
xor
bound
imul
jne
clc
leave
xchg
jecxz
push
mov
mov
jge
fsubrl
mov
mov
mov
sub
cld
add
push
sub
jge
stc
pop
and
and
loop
loope
test
shrl
dec
lret
pop
ret
aas
call
fcoml
push
xor
in
add
xor
inc
mov
ret
dec
daa
hlt
xor
jbe
shlb
aas
push
ljmp
sbb
cmp
adc
fidivs
insl
jbe
rolb
dec
js
push
aaa
cwtl
lock
gs
divl
loope
jmp
pusha
movsl
push
movsl
lahf
cld
fucomp
xor
ljmp
sarl
rcll
fisubl
mov
lahf
mov
or
dec
sbb
push
lods
fcomp
push
sbb
or
outsb
jp
push
negl
xchg
pop
add
lcall
jge
xchg
lcall
dec
in
lahf
sahf
pusha
or
loop
je
or
cli
iret
and
andl
xchg
lods
pop
cmpsl
and
sub
ret
mov
inc
ficompl
cmpsb
scas
xor
mov
add
add
lahf
aad
pop
pop
mov
sub
repnz
and
pop
test
sub
fsubrs
and
icebp
inc
lret
decb
add
mov
test
push
divb
outsl
or
cmpsl
cli
popf
jne
cmpsb
iret
lahf
adc
or
cmp
mov
mov
addr16
insl
inc
jns
jge
pop
scas
sti
push
incb
clc
cmp
aas
call
xor
or
stc
lds
popa
loopne
sbb
clc
dec
jbe
jne
iret
int3
jg
add
jl
in
xchg
sub
pushf
inc
jge
int
mov
dec
js
pushf
lock
bound
movsb
jmp
or
inc
fimuls
cmc
and
scas
jns
xlat
fcmovnu
sub
flds
scas
xchg
and
xchg
int3
cmp
adc
aam
add
jnp
push
arpl
mov
or
push
xor
xchg
pop
sub
lea
js
sub
cmp
xor
mov
subb
dec
shll
sub
xlat
jle
addr16
std
xchg
mov
iret
dec
add
xchg
xor
aad
jo
cwtl
int3
je
adc
movsl
bound
pop
cwtl
and
or
loopne
push
jmp
inc
push
dec
sbb
clc
push
pop
cmp
lds
rsm
das
or
neg
pop
mov
cli
pop
fs
das
shrb
push
cmp
pop
add
xchg
pop
test
jns
mov
sub
mov
mov
pop
xchg
leave
jae
or
addr16
jmp
dec
sub
xchg
aam
cmpsl
aam
jle
jo
clc
xchg
cmpsb
add
mov
mov
sbb
rol
ljmp
out
stc
xor
xchg
int
jns
and
jmp
mov
fadds
xchg
xchg
dec
inc
pusha
ficomps
inc
in
adc
daa
mov
or
das
mov
fldcw
push
lds
movsb
pop
fsubr
les
inc
pop
push
test
add
and
outsl
mov
das
or
jae
popa
add
jge
mov
add
leave
bound
dec
dec
stc
cmpsb
fildl
xor
lahf
pushf
roll
shrb
test
xor
sbb
pop
pop
mov
inc
loopne
push
pop
ret
adc
mov
fsubrs
jns
mov
xor
cmpsl
in
imulb
lds
in
arpl
lds
xchg
push
or
outsb
mov
fcompl
inc
aas
pop
lret
cmp
out
adc
dec
pop
stc
xchg
push
mov
push
jg
negb
mov
xor
jo
out
test
jne
dec
sbb
nop
stos
lods
xchg
inc
loopne
loopne
and
sbb
imul
nop
dec
outsl
ud0
and
mov
mov
cmpsl
loop
mov
fstpt
arpl
loop
mov
cli
clc
and
in
push
xchg
aad
scas
push
aam
push
les
dec
outsb
push
cmpsb
add
gs
not
lods
dec
out
mov
inc
jnp
lret
push
lods
jo
mov
js
adc
pop
mov
xchg
jg
movsl
mov
arpl
inc
dec
incl
std
mov
cmpl
xchg
mov
mov
pop
rcrl
lret
stc
lret
xchg
sub
or
xchg
testb
insl
pop
jne
xchg
imul
dec
inc
mov
andl
push
out
jns
lods
test
push
daa
mov
dec
mov
sbb
xchg
and
jmp
push
pushf
enter
les
add
aas
ret
rcrb
scas
xchg
cmpb
das
aaa
pop
out
dec
mov
sbbl
test
pusha
sub
jmp
push
loop
repnz
pop
pop
and
in
les
sbb
aaa
pop
sbb
inc
mov
out
lahf
xor
cmpb
pop
sahf
fdiv
sbb
mov
fsts
fwait
into
loope
sub
das
sti
jp
xchg
mov
mov
add
in
mov
push
cmpsb
xchg
ffreep
call
mov
adc
test
aaa
mov
movsl
ss
leave
sbb
mov
pop
mov
jo
aaa
scas
mov
cmp
sub
test
ss
movsb
adc
test
mov
jg
outsb
inc
cmpsl
imul
mov
aam
cltd
sbbl
mov
fmull
push
mov
dec
push
stos
ss
nop
imul
rorb
pushf
in
push
and
sahf
sub
xlat
aaa
mov
test
sbb
cmpsb
push
jo
data16
add
and
rcrb
aad
scas
mov
jle
loope
sub
or
std
push
insl
add
outsb
lods
repz
in
cmp
push
ret
out
xor
nop
add
push
push
aaa
dec
jne
and
sub
and
jne
pop
or
lock
sub
testl
aad
push
xchg
aas
xchg
push
sbb
lods
and
add
dec
xlat
push
add
push
mov
test
dec
loope
out
inc
and
pop
jbe
sub
push
mov
inc
xchg
pop
inc
push
ds
ss
ffree
mov
cmp
mov
lds
jno
mov
pop
xor
jl
sub
dec
adc
inc
or
xchg
or
sub
pop
xor
add
movsb
call
in
mov
cmp
in
movsb
push
jl
orb
push
xchg
pusha
xlat
inc
mov
and
mov
mov
push
dec
call
icebp
outsb
loopne
xor
out
ret
jo
pop
cmpl
adc
and
add
fs
mov
sbb
push
call
ret
jns
test
sbb
xchg
addr16
mov
lods
inc
jmp
cmc
push
test
inc
add
les
xchg
je
aaa
or
jno
cwtl
testl
mov
xor
mov
mov
mov
inc
cmp
movsl
loopne
inc
scas
cmp
cmpl
xchg
mov
adc
iret
pop
fiadds
inc
pop
test
stos
loop
out
mov
cmpl
in
mov
xlat
xchg
lock
iret
pushf
pop
call
in
scas
jo
adc
imul
adc
adc
xor
adcb
pop
setns
xchg
stos
ret
lret
sbb
mov
push
stc
adc
push
inc
jne
adcl
cwtl
mov
es
sbb
dec
loop
cmpsb
sub
js
xor
inc
std
cld
fldcw
inc
jnp
push
push
jo
shrl
or
ret
test
in
ss
pushf
test
xorb
aaa
jl
pop
ret
mov
xlat
mov
outsb
sub
fwait
or
rcr
iret
fstpt
loopne
insl
pop
jp
sbb
or
mov
mov
cld
lods
push
ss
lea
in
stos
loop
xor
fdivl
cmp
fidivs
cmpsl
add
in
les
test
push
lods
sub
push
subl
popa
and
out
popf
pop
lcall
sub
pop
push
lock
ret
lret
imul
mov
push
mov
insl
xchg
lds
stos
dec
scas
lea
iret
outsl
enter
sub
cmp
movsb
in
ljmp
inc
arpl
ds
push
xchg
loope
push
jecxz
in
loop
jle
cmc
cmp
in
call
popa
mov
pop
jb
sub
insb
call
lods
mov
repz
ret
nop
scas
iret
xor
sub
inc
out
lds
xorl
cld
mov
mov
or
or
cmpsl
cmpsl
jge
add
xor
test
hlt
es
and
clc
push
xlat
fsubl
daa
push
pop
add
sub
jns
cmpsl
inc
jnp
out
fisubl
mov
outsb
in
bound
xchg
popl
popa
popf
mov
dec
lret
aam
jae
es
dec
pop
xchg
jle
or
fildll
inc
jo
out
mov
xor
mov
dec
push
inc
sbb
bound
xchg
sarl
xchg
data16
pop
mov
lods
pop
cli
sbb
popf
xchg
ret
insb
cmp
ds
rcrb
aas
rorb
push
insb
rcrl
push
mov
cld
pop
in
aas
mov
jno
mov
in
int3
sbb
inc
cltd
sbb
test
pop
lahf
mov
push
mov
cmp
mov
dec
ja
xor
add
nop
lea
hlt
loope
pop
movsl
lahf
mov
or
cli
and
xor
pushf
in
push
mov
add
fsubs
dec
cwtl
cmp
lods
push
pusha
or
mov
and
fbld
sub
mov
cs
in
mov
dec
add
clc
jns
mov
add
ret
cmp
mov
jno
xorl
inc
push
adc
and
and
inc
cmp
out
adc
mov
mov
ja
outsl
scas
mov
inc
dec
neg
jmp
in
sbb
sub
push
out
jno
adc
sub
les
sahf
scas
xor
std
sub
shl
pop
mov
xchg
push
xor
or
hlt
popf
imul
xorl
clc
std
rorb
adc
ds
xor
sbb
in
pop
jle
or
dec
sub
ja
stc
cmp
in
push
pop
and
mov
sti
lods
cmp
clc
dec
inc
jo
mov
and
nop
mov
inc
popf
cmp
icebp
dec
popa
pop
and
xchg
cs
push
xor
rclb
rcrb
cs
adc
xchg
xor
and
imul
add
jb
mov
imul
add
push
js
out
push
jae
mov
sbb
xlat
pop
xor
data16
push
gs
test
jmp
adcl
or
repz
imul
add
adc
jns
sub
out
push
movsb
sub
xchg
mov
aam
and
movsb
adc
xchg
sbbl
mov
repz
dec
mov
lret
mov
inc
loopne
pop
cwtl
mov
test
dec
loopne
and
iret
mov
xor
icebp
in
loopne
sub
lods
movsl
cmp
xlat
out
jp
loopne
or
sbb
push
mov
xchg
push
dec
pop
dec
fsubs
cmpsl
mov
xchg
ljmp
lahf
mov
int
and
mov
fildll
mov
call
arpl
rcrb
es
jbe
dec
pop
movb
cli
loope
lock
xor
imulb
dec
jmp
and
jnp
ret
pop
repnz
test
or
mov
insb
add
sbb
call
sub
and
loop
pop
adc
xchg
and
cli
xchg
or
pushl
popl
jmp
movsb
cltd
sub
xchg
repz
les
lock
call
cs
std
mov
jp
sub
fsts
xor
sub
cmpsb
test
jne
shll
ds
adc
test
push
shll
mov
adc
outsl
call
in
stos
in
aaa
sbb
loop
and
rorl
clc
adc
cmpl
cmp
iret
addb
lahf
pop
fbld
leave
in
inc
jmp
add
or
mov
ret
inc
xchg
hlt
sbb
and
push
scas
int3
sbb
nop
add
sub
adc
sbb
lret
clc
ret
sbb
mov
adc
icebp
repnz
xor
mov
mov
xlat
and
loopne
or
aaa
sbb
adc
cmp
lahf
pushf
push
enter
push
testl
adc
movsl
movsb
or
out
cmp
push
mov
xchg
pop
insl
gs
cli
pop
mov
push
pushf
adc
lods
xlat
xchg
mov
sbb
aaa
fsubs
loope
inc
fmulp
inc
sbb
lahf
enter
or
out
jno
push
lret
mov
bound
pushf
xor
and
stos
std
fidivl
or
test
sbb
adc
ficompl
push
int
cmc
adcl
add
sbb
mov
fistpll
pushf
aam
fwait
jmp
and
call
nop
push
jmp
xchg
sbb
add
sahf
mov
xchg
int
fwait
pop
inc
mov
repz
and
dec
dec
sbb
mov
loop
stos
sub
popa
sahf
xchg
jae
gs
ret
inc
ja
adc
xorb
movsl
add
daa
testb
movsb
inc
movsl
xchg
in
mov
imul
mov
xchg
xchg
pop
mov
jo
aad
rcr
int
mov
push
test
loope
xchg
aam
sbb
adc
hlt
loope
insl
lds
stc
xchg
mov
inc
loop
cmp
pmulhuw
inc
stc
sti
xor
mov
hlt
dec
imul
mov
xorl
aaa
mov
lret
test
cwtl
jbe
mov
or
lret
fdivrp
mov
loopne
outsl
or
dec
aam
xor
add
mov
rolb
mov
fwait
mov
fwait
xchg
jecxz
jns
movsb
test
add
dec
movsb
pop
notb
bound
dec
arpl
jmp
pushl
jp
sbb
stos
cmp
mov
pusha
out
add
outsb
fdivp
jmp
andb
adc
fnsave
aas
cld
les
fucomip
lods
pusha
fadd
adc
push
in
popf
adc
shll
pop
mov
mov
jl
push
shll
sbb
sbbb
pushf
and
movsl
jecxz
xchg
stos
xchg
andb
cwtl
or
xor
cmp
js
mov
aad
mov
call
or
sub
cmpl
dec
push
adcl
jo
cli
clc
pop
repnz
outsb
push
mov
or
mov
lea
cmp
rcr
mov
lea
mov
out
jns
jle
lcall
andb
sbb
jb
rclb
fldt
ror
addr16
mov
popa
jge
jl
jo
movsb
push
mov
push
lret
or
movsb
sbb
mov
sub
shlb
sbb
call
sbb
das
rolb
iret
cli
out
mov
lahf
arpl
push
xchg
or
idivl
jge
stc
mov
lods
les
sbb
es
mov
bound
lods
mov
xchg
insl
mov
mov
xor
jno
addb
movsb
mov
mov
and
push
push
cltd
dec
dec
jbe
adc
xchg
idivb
scas
xchg
mov
mov
jne
xor
sub
in
or
imul
movq
dec
jge
addr16
lods
jo
sbb
lds
and
cmpsl
push
fcoms
test
ficoml
ljmp
in
xor
and
aaa
je
inc
addr16
sub
xchg
xchg
ljmp
dec
cmp
cmp
inc
jns
add
stc
in
pop
sub
ljmp
cmc
out
mov
test
and
sbb
outsl
dec
sub
or
mov
enter
cmovae
xchg
sahf
push
xchg
ret
movsb
loope
sub
pop
inc
sub
ficoms
mov
lock
and
fsts
lret
mov
add
pop
repnz
or
pop
pop
mov
mov
mov
dec
push
pop
inc
push
inc
jne
cmp
push
mov
imul
mov
sub
sub
cmp
fcomip
push
lds
sbb
mov
jle
add
inc
mov
push
std
pop
popf
sub
lods
mov
f2xm1
mov
or
roll
dec
mov
cmp
sysret
adc
imul
and
adc
lahf
arpl
fwait
inc
pop
gs
bnd
psubb
or
add
lea
das
das
pop
adc
push
push
cmp
add
je
jg
mov
adc
mov
imul
gs
jno
mov
add
in
in
int3
mov
push
das
insl
cmpsb
out
sub
fiadds
sbb
bound
cmpl
dec
icebp
insl
roll
ret
pop
cmpsl
shr
lock
mov
pop
loopne
sub
stc
jge
imul
mov
cwtl
adc
add
xor
lea
or
loope
or
ljmp
push
xchg
out
sbb
lods
fldt
jg
outsb
jecxz
jae
psubusb
lahf
jb
gs
push
push
insl
test
xchg
ja
xlat
or
jae
mov
or
jb
and
mov
xor
in
call
adcb
es
repz
mulb
adc
inc
xor
les
inc
cmp
or
decl
push
xor
lahf
lods
sbb
and
sub
in
mov
out
cli
inc
fs
push
jp
rolb
inc
xchg
mov
add
cmp
stos
inc
leave
pop
mov
add
lahf
sbb
pop
jbe
sub
popa
mov
cmc
or
jp
test
adc
lods
out
jne
nop
sbb
lahf
test
push
sub
push
jno
lods
stc
push
mov
in
cltd
loopne
movsb
adc
pop
rcll
jp
xor
push
arpl
test
cmp
ret
fstpt
mov
loop
cmp
inc
dec
add
push
aad
xor
call
add
fidivs
icebp
sti
xor
jg
dec
and
xchg
push
cmp
dec
sbb
dec
aam
and
cmp
ss
and
popf
cmp
mov
aam
mov
adc
fwait
adc
sub
fsubl
lahf
jmp
out
xchg
cmp
sarl
int
sbb
insb
out
add
gs
push
sub
push
push
and
push
jno
mov
cmp
cld
xchg
loop
cmpsl
and
aam
mov
inc
outsb
rcrl
cwtl
nop
jg
xchg
outsl
dec
and
out
loope
data16
out
scas
add
inc
lea
ljmp
xor
imul
icebp
dec
mov
icebp
mov
sbb
mov
fldt
int3
dec
jecxz
xchg
dec
dec
ss
insb
push
and
ficoms
lods
or
ljmp
jae
out
xchg
mov
adc
mov
inc
mov
inc
out
adc
inc
inc
mov
adc
push
out
imul
scas
push
mov
inc
jbe
jle
add
sti
ficoms
xlat
test
in
or
sarb
popf
or
mov
and
jmp
sbb
outsl
jmp
or
js
pop
push
jge
mov
test
fbld
push
lret
jno
outsl
loop
dec
stc
hlt
push
dec
adc
insb
jge
rorl
ret
mov
inc
cmp
mov
outsl
push
out
je
fs
jb
jp
mov
cs
xchg
xlat
je
dec
add
pushf
in
inc
imul
jge
mov
daa
jbe
cmp
mov
ljmp
sbb
int3
jg
jo
add
leave
add
cld
lcall
jle
scas
pop
pop
or
mov
add
fstpl
int3
les
sub
hlt
pop
jge
jg
or
out
sub
xchg
push
les
push
add
jno
dec
std
jp
sub
xchg
mov
cmp
cmp
ds
in
mov
outsb
popl
int3
clc
rcrl
cli
sarb
inc
std
lahf
or
les
aas
data16
pop
jne
data16
dec
xchg
aas
pop
lea
mov
pop
ljmp
push
add
lret
cwtl
mov
pop
aam
adc
sti
cmc
movsl
pop
mov
data16
out
mov
mov
adc
fwait
dec
scas
sbb
pop
test
test
pop
lds
in
cmp
addl
adc
repz
xor
dec
clc
fisttpll
rolb
addr16
test
and
cmpsb
mov
fsubl
mov
in
push
xor
jmp
pop
ficomps
xchg
mov
mov
fdivl
mov
les
orl
and
jns
arpl
mov
lret
fldl
insb
arpl
xchg
shl
jo
sti
xlat
inc
mov
push
rcrb
jno
sub
adc
sti
out
add
jno
add
dec
idivl
aad
xorb
push
fidivs
out
lret
or
xorl
and
mov
push
addr16
xchg
loope
dec
pop
xchg
out
add
mov
mov
cmpsl
mov
sub
icebp
rcrl
sub
sbb
mov
or
fsubs
roll
pop
mov
xor
mov
stos
lods
loopne
sub
lret
insl
xchg
xchg
xor
push
cmpsl
cltd
std
adc
mov
addr16
stc
insb
aad
sub
cmpb
ja
test
lret
fs
das
ds
and
push
sbb
gs
push
repnz
sub
popf
pop
xor
mov
dec
jmp
xchg
or
push
int
fcmovnb
or
stos
cmpsl
test
push
xor
nop
ljmp
adc
movb
sbb
add
pushf
xchg
sub
popa
cli
push
js
adc
ja
mov
mov
xor
leave
mov
movsb
lods
jmp
dec
jno
xlat
fs
pop
xchg
xor
rep
mov
lds
mov
push
mov
xor
mov
mov
fcoml
in
add
xchg
jns
jno
adc
jecxz
pushf
mov
scas
ja
add
sub
leave
add
fs
xlat
icebp
sub
insl
xor
aad
je
ds
and
adc
icebp
jnp
repnz
xchg
cli
stos
mov
loop
ret
sbb
nop
jmp
push
push
ret
xor
fldl
aad
test
sub
lcall
test
mov
cld
or
sub
or
roll
add
call
cs
jp
mov
enter
dec
sub
mov
dec
stos
mov
lret
xor
lods
xorb
pop
push
mov
mov
jle
mov
and
into
push
mov
adc
mov
pop
arpl
add
lds
inc
push
push
xor
cmp
mov
and
mov
push
jg
insl
dec
cwtl
jl
outsb
movsb
and
sub
mov
jle
push
push
sub
divb
aaa
jns
dec
sarl
jbe
call
adc
popa
mov
shrl
iret
addr16
adc
decb
sbb
cli
lods
push
pop
insb
jmp
pop
push
ret
mov
mov
jl
sub
or
dec
push
pop
ror
mov
inc
repnz
push
dec
dec
inc
out
test
mov
pop
sarl
jo
pusha
adc
test
scas
inc
loop
test
clc
scas
cltd
out
inc
xchg
jle
sbb
cmp
xor
enter
outsb
rcrb
jmp
jbe
mov
sbb
inc
bnd
mov
iret
push
cwtl
mov
sbb
jge
mov
xchg
lcall
xor
lret
dec
cmpps
push
outsl
pop
into
scas
pop
dec
inc
popf
xchg
dec
rcr
loope
mov
jge
pop
xor
repnz
jmp
fsub
lahf
out
cmp
adc
enter
jne
sub
xchg
mov
aad
xor
or
mov
sub
xor
jge
icebp
jl
jle
ret
and
mov
lods
add
mov
pop
pushf
sub
imul
ret
mov
jb
je
popf
and
xor
add
mov
dec
xchg
pop
jge
inc
movsl
lret
sbb
lods
sub
sti
out
adc
xor
es
xchg
pusha
jbe
mov
rol
xchg
pop
adc
enter
lds
jle
pop
push
xchg
das
cmp
mov
sbb
ror
xchg
xor
xchg
mov
pushf
out
push
dec
rorl
imul
xor
mov
cmp
subl
inc
scas
xor
inc
test
sbb
pop
xchg
xor
sbb
fwait
in
shlb
lds
inc
aam
fisubrl
jne
enter
imul
loopne
shrb
pusha
pop
xor
mov
sbb
mov
push
add
imul
dec
mov
inc
je
mov
sbb
lret
aas
test
jns
xlat
imul
sbb
adc
lds
je
or
stc
hlt
andl
in
rclb
shl
adc
mov
mov
bound
xchg
insl
push
outsl
jg
push
lret
fsubrl
jnp
dec
loopne
aam
add
cld
adc
testb
not
sahf
movsl
push
cs
movzbl
inc
adc
jl
sbb
xor
imul
add
mov
xchg
push
or
push
pop
inc
jo
negl
les
leave
movsb
sub
cmc
push
iret
mov
jno
rcl
int3
sub
add
xchg
pop
rolb
cs
mov
jp
lds
jge
data16
jnp
xchg
xor
lods
jmp
les
cmpl
sahf
sti
shlb
inc
lods
call
adc
sbb
pop
hlt
repnz
xor
pop
loopne
int3
dec
jne
je
cmp
out
cld
cmp
movsl
jp
pop
mov
sub
lahf
and
ficompl
push
push
add
xor
mulb
in
add
xor
mov
sar
or
mov
xor
cmp
add
pop
adc
sub
test
les
lods
loop
xlat
push
xchg
lds
inc
movsb
adc
mov
mov
inc
popl
lods
lcall
pop
sarb
aam
push
xchg
and
roll
lahf
test
shlb
jmp
adc
mov
fcomps
bound
pop
mov
addl
dec
movsl
sbb
incl
xchg
fildl
je
mov
mov
sub
mov
cltd
mov
out
push
cmp
shl
repnz
cmc
mov
add
jp
push
fcmove
pop
rep
pop
cmp
adc
std
enter
mov
push
lds
test
mull
inc
stos
and
aas
into
cltd
dec
dec
insl
stos
and
mov
in
into
cmp
inc
push
cmpsl
pop
int3
adc
mov
dec
cmpsl
psubd
jns
fisubrl
cli
push
faddl
cs
pop
scas
cmpsl
test
es
orb
dec
sub
jb
adc
ss
and
pop
shrl
pop
mov
push
inc
fwait
pop
pop
or
loop
aad
test
daa
ds
iret
and
mov
mov
iret
jb
adc
xchg
push
js
xor
dec
cltd
mov
mull
push
mov
xor
in
push
stos
sbb
and
or
int3
xor
hlt
add
cwtl
pop
out
xlat
mov
inc
adc
call
push
pushf
or
lahf
jp
rorb
imul
or
ret
sbb
es
jbe
mov
mov
push
push
mov
insl
fsubrp
sbb
adc
or
and
pop
lds
inc
mov
sbb
ret
lods
xor
cmpsl
sbb
int3
shrl
jne
out
sub
adc
lcall
mov
cld
push
mov
cmc
in
lods
or
loopne
loopne
jl
xchg
xchg
cltd
into
adc
ljmp
or
pop
jl
cld
add
or
enter
movsl
cwtl
or
js
xchg
ret
bound
cmp
xor
out
stos
dec
pop
ret
orl
adc
sub
aam
fistps
jl
dec
ljmp
and
sbb
or
fcoms
movsb
sub
sub
out
cwtl
loop
push
outsb
sbb
jl
lds
jo
shlb
adc
daa
push
je
clc
add
out
out
imul
imull
jbe
add
push
jge
xor
and
in
add
mov
dec
cmc
sbb
fwait
push
mov
mov
pusha
mov
jle
enter
and
fisubl
cwtl
hlt
or
jnp
or
or
add
insb
ja
popf
pop
sbb
push
dec
adc
into
mov
sub
lret
jle
enter
js
pop
inc
adcb
imul
arpl
mov
push
testb
stc
jns
mov
mov
testb
mov
and
push
repnz
pop
dec
test
lock
mov
cmc
gs
mov
jge
insb
loopne
arpl
pop
cmp
push
sbb
insl
addr16
jp
cmp
out
int3
lock
push
adc
out
shlb
mov
sub
out
fnstsw
cmpsl
cld
xchg
jb
jl
sbb
out
outsb
pop
xor
push
pop
inc
pusha
push
jmp
dec
dec
add
pop
repnz
pop
rcll
loope
cmp
add
data16
fdivrp
xor
popf
add
cmpb
mov
push
fstps
fldcw
dec
out
and
hlt
outsl
sbbl
mov
sub
fidivs
dec
cs
push
jne
out
jno
movsl
pop
jg
inc
test
loop
bound
or
fcmovb
xchg
jmp
xor
fstps
fmul
outsb
icebp
test
dec
daa
and
cwtl
lods
loope
stos
push
inc
sti
push
inc
sub
inc
xchg
sarl
mov
push
add
pusha
cmpsb
rcrb
push
int
xor
js
in
stos
mov
jns
dec
les
pop
or
or
roll
mov
sub
pop
pop
into
pop
add
or
mov
pop
cmp
fldl
pushf
jno
pop
mov
aam
or
out
pushf
push
jge
arpl
negb
test
mov
ljmp
outsl
std
fbld
jge
loop
mov
add
mov
lods
jne
adc
jmp
pop
mov
xor
jo
mov
push
sbb
rdpmc
dec
jmp
iret
and
in
mov
je
jne
mov
inc
sbbl
inc
pop
dec
lods
mov
mov
scas
enter
arpl
dec
aas
sbb
iret
loope
push
leave
inc
mov
in
sub
or
movsl
out
sbb
ja
shrb
adc
adc
mov
push
outsl
adc
lock
and
mov
icebp
data16
inc
sbb
lods
dec
insl
pop
dec
pop
shl
mov
pop
push
pop
mov
lods
fwait
mov
mov
push
pop
movsb
aaa
xor
in
test
outsl
pop
cmc
sub
sti
dec
pop
scas
xchg
xor
push
adc
or
in
fnstenv
mov
loopne
jle
sub
xor
mov
cs
shll
jecxz
and
and
cwtl
loopne
xchg
and
jge
movsl
sbb
cmpsl
stc
adc
stc
pop
xchg
mov
mov
aam
test
push
xlat
push
inc
jne
jne
push
lods
adc
mov
mov
cmpsb
lods
std
fwait
and
fcompl
and
lds
xor
inc
iret
scas
fdiv
scas
jne
es
sub
xchg
cmpsl
sahf
and
add
cmp
aas
jmp
shll
xchg
adc
sub
and
dec
dec
mov
mov
push
dec
aad
enter
lret
mov
or
movsb
pop
nop
ljmp
fs
xor
call
adc
mov
imul
into
bound
aaa
pop
sbb
test
push
dec
push
mov
outsb
cltd
aam
cmc
sahf
xchg
cltd
lods
pop
scas
xchg
or
sub
insl
fs
push
push
insb
sbb
mov
cmpsb
cmp
sbb
jno
mov
sahf
sub
rcrb
ds
int
xor
cmp
adcl
cmp
popf
adc
mov
jae
xchg
jo
add
sub
shll
insl
push
loope
pop
xchg
fs
jg
arpl
sub
cltd
push
mov
fisttps
hlt
mov
xchg
fcomps
and
mov
cs
dec
rolb
ljmp
pop
testl
cmp
and
mov
sarl
add
ljmp
popf
dec
imul
jne
mov
pop
pop
jl
fcmovnbe
jge
popf
push
add
aas
push
movsb
inc
psubusw
xchg
or
or
cli
lds
lahf
pop
pop
sub
in
iret
inc
pop
cmp
and
push
out
xor
push
test
ja
lds
nop
mov
iret
mov
cmp
mov
mov
dec
mov
cmpb
dec
push
push
test
aam
ljmp
jne
xchg
mov
dec
fistps
das
shl
cmp
int
or
faddl
pop
xchg
fsubrs
xchg
sahf
sub
xchg
jmp
mov
dec
idivb
add
or
int
adc
xor
stos
test
jbe
pop
mov
movsl
mov
cmp
push
sahf
test
addr16
ret
mov
loop
gs
push
scas
inc
repz
or
icebp
jb
loopne
lea
call
cmp
lds
pop
mov
shl
cmp
sarl
or
sbb
dec
xlat
enter
mov
into
jnp
or
lcall
mov
xchg
jmp
jmp
mov
das
mov
jle
popf
loope
xchg
and
sbb
push
pop
xor
hlt
cltd
adc
cmp
mov
jae
mov
in
fistpll
dec
mov
out
push
dec
gs
out
sub
pop
dec
mov
add
movsb
fistps
dec
adc
mull
push
aad
mov
and
mov
loope
int3
jl
imul
in
xor
mov
adc
test
xchg
mov
mov
rclb
push
mov
loop
bound
dec
shrl
xor
mov
mov
ljmp
stc
xor
jge
mov
stos
mov
jle
sahf
ljmp
xor
and
rcl
es
js
rorb
jl
jmp
repz
mov
sarl
shld
mov
je
int3
sbb
out
cmp
mov
pushf
call
cltd
enter
sub
push
push
repnz
push
dec
fistpl
inc
leave
xchg
pusha
jns
in
mov
xchg
rcll
push
test
adc
jp
outsl
pushf
data16
xchg
test
repz
jmp
lahf
mov
mov
adc
lds
enter
pop
lret
or
xor
cs
out
cmp
sub
lcall
aas
push
adc
bound
out
jl
cmp
jmp
sbb
and
push
sti
or
add
inc
das
in
js
jnp
daa
sub
in
shlb
dec
enter
shl
ljmp
dec
pop
dec
mov
mov
inc
cwtl
mov
push
rolb
jge
les
mov
push
addr16
nop
fstl
js
pop
mov
sub
psrad
stc
cmpsb
jne
mov
rcll
jno
outsl
lock
mov
popa
shlb
in
mov
push
vaddsd
lea
mov
pop
adc
jecxz
mov
jb
shlb
mov
dec
or
leave
fmull
dec
lea
inc
xchg
insb
add
xchg
mov
ror
xchg
cmpsl
int3
xchg
mov
and
jno
xor
adcl
lret
ret
cld
fwait
out
dec
imul
or
dec
enter
mov
sbb
stos
ss
inc
xor
cltd
cltd
cli
in
cmpsl
xor
inc
fsubr
sbb
lret
fsubrs
mov
push
jg
shr
mov
fnstenv
mov
clc
cmc
loop
iret
test
inc
push
xor
sub
cs
push
xor
divb
pop
test
ret
ds
jmp
dec
nop
jp
pop
mov
andb
mov
fs
cmp
adc
cltd
pushf
push
push
jns
pop
shrb
cmpsb
xchg
fsubp
sbb
into
out
jae
test
xor
pop
xchg
jbe
call
push
push
sbb
xchg
add
mov
imul
daa
xchg
std
insb
outsb
in
test
outsb
jle
inc
inc
in
dec
lds
stos
jae
in
xor
add
xlat
insl
and
or
mov
or
cltd
enter
sub
int
js
imul
movsl
or
cmp
mov
mov
mov
lds
movsl
aam
push
sti
shlb
push
xchg
push
xchg
mov
pusha
jae
in
popf
in
fcoml
mov
out
jb
sub
ud0
mov
jl
inc
loopne
out
outsb
lret
mov
hlt
sub
repnz
fs
jmp
pushf
pop
clc
out
dec
mov
fucomi
nop
dec
mov
movsb
push
inc
aad
xchg
mov
inc
push
push
lods
pop
sub
jne
bound
insl
inc
pop
iret
xchg
xchg
pop
xor
fld
or
mov
lods
iret
popa
icebp
dec
and
dec
xor
adc
adc
fsubr
jo
and
enter
dec
ljmp
cmp
xchg
push
mov
shl
push
mov
cs
hlt
adc
aam
sbb
shrb
mov
adc
in
insb
push
adc
jb
cmp
ficomps
lds
sub
cmpsl
cmp
fwait
mov
push
icebp
mov
xchg
jg
xor
pop
add
sub
mov
enter
addr16
adc
out
or
jp
push
shll
repz
xchg
xor
bnd
xor
out
dec
xlat
cld
call
or
and
lods
xor
dec
add
leave
push
in
sti
rcll
mov
and
push
jge
adc
sbb
lret
notl
dec
dec
inc
pusha
jne
xchg
dec
and
das
sbb
insl
popa
add
inc
sbb
dec
mov
cltd
outsb
scas
gs
and
out
fstpt
rcrb
addr16
leave
add
call
xchg
clc
and
jge
pusha
inc
lahf
mov
mov
lcall
xchg
stos
dec
in
cltd
int3
pop
cmp
push
xchg
push
mov
adc
mov
sbb
jl
jp
mov
aad
mov
ficomps
push
mov
sahf
into
fisubrs
mov
jecxz
cmp
repnz
loope
or
push
and
push
xchg
mov
xor
movsl
test
cmp
xchg
or
sti
lahf
mov
sti
cli
enter
movsb
fcom
fildll
scas
push
push
xchg
pop
push
cmp
call
adc
mov
imul
dec
mov
sbb
rclb
das
loope
inc
jle
lret
cmp
cwtl
ret
sub
xor
jbe
xchg
inc
out
movl
mov
je
icebp
ss
in
pop
push
mov
idiv
mov
bound
push
outsb
es
clc
rol
in
dec
in
and
add
add
ret
inc
push
jns
outsb
lods
push
shll
fmul
movsb
nop
hlt
gs
add
jb
iret
fists
imul
lods
jns
les
fisubs
cli
xchg
sub
jne
inc
lods
stc
jg
dec
add
sbb
stc
mov
push
push
pop
dec
jmp
call
inc
xchg
xchg
sti
cs
mov
mov
and
stos
cmp
scas
dec
xor
test
mov
aas
and
adcl
push
push
mov
stc
repz
add
mov
xchg
icebp
insl
mov
lcall
xlat
adc
mov
shlb
mov
xchg
xchg
jae
ret
jne,pn
rolb
sahf
orl
sti
dec
cmp
test
dec
lahf
out
xchg
nop
sbb
jecxz
mov
out
psubusw
cmpsl
lret
pop
jge
adc
mov
mov
push
shlb
inc
xor
xor
loop
jmp
or
pop
mov
push
xchg
dec
popa
mov
int
xchg
mov
repz
int
inc
xchg
mov
and
or
shl
add
bound
mov
adc
fidivrl
cmp
ret
divb
jnp
cmpsb
pop
fildll
leave
xor
in
test
and
movsl
sbb
mov
mov
jo
mov
adc
mov
push
ja
ss
mov
pop
call
mov
das
mov
mov
xor
lea
adcl
lret
xchg
sub
stc
ja
jo
int
push
ret
xor
dec
push
ror
cltd
clc
and
insl
adc
dec
sub
rol
aam
mov
adc
mov
pusha
or
fwait
popa
insb
cmp
adc
jne
popf
xor
pop
cmp
cmc
es
fsts
jp
inc
cmpsb
jns
ds
cltd
push
mov
xor
sahf
mov
imul
add
mov
std
lret
xchg
sbb
cmp
xchg
test
int3
sub
out
notl
out
fwait
jmp
push
movsl
std
movsb
sbb
dec
shr
out
xor
cs
test
cmp
test
mov
gs
jle
xchg
jmp
aas
inc
mov
repz
std
rorb
shrl
fxch
mov
mov
cmp
mov
mov
ja
fimuls
mov
movl
leave
test
out
mov
mov
push
movl
mov
cmp
jecxz
out
loop
sbb
orb
rolb
ljmp
clc
inc
es
cmc
test
ljmp
add
cli
data16
pop
sub
int
leave
subps
call
adc
fisttpl
add
adc
outsl
or
dec
push
stc
cmp
jge
bound
adc
popf
into
cld
xchg
sbb
mov
addb
push
icebp
mov
mov
xchg
mov
dec
rorb
or
repnz
cltd
test
mov
push
jae
pop
mov
cmp
in
push
add
and
lret
or
jle
into
pop
fdivs
fistl
lds
nop
xchg
xor
fdivrp
aad
lahf
jne
add
shrl
je
addr16
dec
addl
inc
cwtl
adc
dec
push
add
cmc
loop
outsl
mov
out
imul
in
repz
and
cld
test
cltd
test
cmp
jb
pop
aad
out
fdivr
jmp
outsb
mov
mov
add
push
fnstcw
daa
lret
push
fwait
les
xchg
das
stos
jns
add
jbe
outsl
sbb
sbb
add
sar
lds
movsl
adc
mov
int3
mov
fistpl
rcr
push
ljmp
lret
pusha
stos
shll
fcomps
scas
dec
daa
lret
loop
scas
out
pop
rcrb
cmpsb
out
enter
mov
jae
pop
xchg
xor
icebp
mov
cwtl
adc
int3
cltd
or
ss
incl
lea
adc
call
dec
sub
xchg
sub
movsl
repnz
outsb
add
loop
mov
mov
push
add
dec
sbb
js
adc
mov
call
ret
or
je
fwait
adc
dec
lahf
xor
cmc
sbbl
stc
xchg
pop
mov
mov
mov
sbb
or
loop
outsb
aad
imul
repnz
popf
inc
mov
mov
jne
ja
rcll
mov
and
push
or
xor
out
shrl
mov
pop
sbb
pushf
leave
mov
or
sub
movb
insb
leave
inc
dec
inc
cmp
inc
mov
or
test
dec
divb
jno
fldl
and
fwait
xchg
call
decb
pusha
outsl
inc
push
xchg
push
lods
push
lods
in
repnz
sahf
int
lcall
shl
loop
add
stc
ljmp
das
cwtl
jecxz
xor
pusha
mov
pop
test
pop
mov
push
push
popa
movsb
into
cld
adc
mov
nop
or
sub
sbb
adc
icebp
sub
mov
sbb
sbb
jl
mov
and
je
push
adc
push
sbb
cmpl
cmp
stc
imul
adc
inc
mov
repnz
fsts
cwtl
or
inc
adc
in
ds
push
push
add
push
push
mov
push
jne
sbb
push
iret
aam
mov
lods
sbb
mov
fldl2e
fmull
xchg
loop
ljmp
mov
aam
jbe
add
jmp
outsl
call
in
pusha
leave
cmpsb
sub
aas
lret
adc
add
pop
mov
in
and
shr
test
insl
aas
and
sbb
xor
aad
mov
push
sub
call
lds
cmp
jl
test
mov
pop
sub
mov
or
jnp
jno
cli
mov
inc
sbb
pushf
call
cmp
cmc
in
pop
insb
test
push
adc
mov
xchg
js
jbe
mov
mov
packssdw
fists
jp
mov
mov
aas
pop
jl
sub
add
into
xorl
pop
mov
pop
xor
xlat
ror
lret
push
fs
jge,pn
jmp
cmp
pop
loope
pop
adc
sbb
push
or
imul
pop
scas
and
jmp
inc
addr16
push
jle
cld
jle
inc
adc
lods
xor
add
int3
stc
mov
xor
xchg
out
push
jns
mov
mov
lea
sbb
icebp
lds
or
pop
mov
dec
nop
cmc
out
cmp
out
in
pop
test
enter
sbb
ficoms
jmp
add
aad
lods
sbb
inc
jne
lret
sahf
adc
or
fwait
insb
mov
mov
lahf
sbb
pop
stos
xchg
stos
sbb
aam
dec
in
xchg
into
les
mov
xchg
fs
enter
cmp
sbb
xchg
insb
and
loopne
sbb
cmpsb
iret
mov
push
mov
test
loop
adc
rcrl
sbb
mov
or
sarb
insl
popa
in
pop
lds
mov
push
jo
stos
gs
add
sub
scas
hlt
fwait
movsl
push
sbb
push
xchg
ja
mov
imul
dec
sbb
and
jl
pop
jge
jne
cli
leave
jae
lods
ja
out
inc
push
scas
mov
cmpsl
popf
test
push
pusha
sub
push
xor
test
sbb
mov
mov
ja
pushw
negb
push
pop
cmpsb
pop
xchg
out
xchg
sub
fmulp
sti
scas
aam
cmp
lods
and
or
cmp
mov
loope
and
adc
or
dec
lock
sbbb
sub
mov
lods
cld
push
cmp
test
jle
cmpl
pop
popf
sbbl
sbb
jns
xchg
or
loop
ret
jmp
dec
mov
push
shrb
xchg
arpl
sub
imul
aad
push
push
pop
xorb
jp
or
gs
ss
repnz
jp
inc
xor
aas
sar
fnstsw
mov
cmp
loop
add
es
mov
xor
xchg
insb
mov
jmp
dec
stc
sub
or
into
xchg
cld
mov
idivb
adc
loope
fistl
add
cltd
adc
and
arpl
lret
rdmsr
mov
inc
fsts
ljmp
loope
fstp
ds
scas
dec
mov
push
jp
jle
jnp
push
xchg
inc
out
mov
arpl
int
jae
mov
idivb
jns
mov
xor
push
repz
nop
mov
stos
push
xlat
jl
push
dec
adc
sbb
outsl
lret
mov
mov
fmul
je
sbb
pop
push
jle
movl
js
or
push
inc
dec
mov
adc
xchg
push
push
cmpsl
iret
nop
or
push
dec
fidivrl
popf
add
ret
cmp
rorl
push
xchg
lret
movb
push
adc
jb
pushw
jl
jne
cmpsl
push
daa
insb
or
sbb
inc
mov
aad
rcr
pop
and
aaa
dec
data16
test
cmp
jge
mov
in
add
cmpsl
xor
and
mov
mov
mov
or
lods
int3
mulb
push
out
js
nop
jmp
test
xchg
dec
pop
sbb
cmp
in
rcl
cmc
add
adc
xor
xor
mov
adcb
jbe
mov
ja
enter
lds
aad
ss
jnp
xchg
test
jl
mov
pop
sbb
js
pop
inc
loope
adc
mov
popf
dec
ficompl
mov
dec
fisttpl
fsub
pop
iret
scas
movsl
sti
fisttps
mov
shlb
lock
mov
adc
hlt
das
js
fs
push
faddl
subl
jno
sbb
es
pop
mov
adc
shlb
sub
imul
xchg
push
popf
out
xor
jl
mov
pop
adc
adc
cmp
jno
and
ret
mov
mov
pusha
mov
adc
bound
ljmp
jnp
loop
emms
lret
dec
in
movsb
out
mov
imul
stc
insb
mov
pop
loope
xor
lods
scas
stc
nop
loope
push
imul
movsl
cmp
lahf
dec
mov
out
add
push
stos
mov
mov
loop
in
sarb
insl
and
gs
loopne
call
push
push
int3
push
idiv
adc
jo
aam
mov
jo
xchg
ret
mov
jbe
insl
cmc
jb
aam
decb
ja
and
or
ror
pop
clc
sub
sub
filds
dec
idivb
xchg
add
mov
xchg
pop
dec
shrb
cmpsl
push
pop
cli
cs
out
jno
clc
flds
aam
push
jecxz
sbb
gs
jmp
xchg
shrb
in
adc
movb
outsb
or
pop
outsl
in
cltd
in
stc
sub
push
or
outsl
std
fnstcw
sub
jnp
jge
fildl
cmpsb
xchg
arpl
dec
xlat
test
cmpsl
adc
sti
sbb
nop
inc
out
xlat
loope
mov
pop
js
syscall
mov
hlt
cmpsl
loop
stc
int
and
lock
sahf
and
pop
add
cmpsb
xchg
jge
inc
pop
out
hlt
dec
adc
cwtl
fbld
xchg
jno
mov
jmp
xor
mov
fcmovnbe
cmp
cmc
dec
test
insb
loop
xor
icebp
jle
add
test
mov
dec
push
hlt
mov
mov
push
push
xor
and
cmc
insb
jno
arpl
lods
pop
sti
push
loope
sbb
enter
jno
ja
repz
sub
lahf
loope
push
loop
dec
dec
inc
jne
lods
jnp
popa
int3
imul
test
lods
xchg
mul
push
das
movsl
loopne
jmp
adc
dec
jb
rorb
mov
push
aam
xlat
test
mov
clc
in
sub
sti
sub
add
fs
mull
mov
push
fcomps
cmp
loope
out
aaa
sbb
pop
xchg
icebp
mov
pop
cmp
out
test
adc
cwtl
mov
and
jge
aaa
cmc
pop
dec
arpl
jno
lcall
lret
add
ds
cmpsl
mov
xchg
icebp
add
push
shlb
cmpsb
ja
addb
sbb
fdivr
sub
scas
cmpsb
xchg
mov
test
andb
mov
ds
xchg
inc
cmpl
test
fidivrl
xor
lcall
hlt
push
mov
push
test
cmpsl
jmp
lahf
pop
or
push
or
sub
js
clc
push
fwait
sub
sub
mov
shl
push
mov
in
add
dec
cmpsl
popa
in
sub
test
dec
xor
cmp
ljmp
and
inc
mov
cmc
ja
jg
push
sbb
imul
xchg
lds
movsb
adc
sti
xchg
xchg
mov
cld
stos
mov
xor
cmpsb
fwait
pop
inc
sbb
push
mov
mov
popa
xchg
sub
ljmp
dec
lock
push
lock
xchg
add
leave
ja
flds
in
cmp
dec
das
mov
popa
imul
jo
gs
daa
repz
xchg
sbb
aas
inc
xchg
les
sbb
popa
mov
mov
cld
xor
ss
int3
enter
pop
imul
mov
shrl
add
lret
movsl
pop
in
outsl
xchg
int
sub
idivb
push
insl
push
mov
out
push
xor
mov
loopne
incl
out
jb
dec
mov
mov
sbb
xor
jbe
in
sub
mov
sub
xor
es
notb
mov
sub
sub
clc
push
frstpm(287
outsl
lahf
fimuls
lock
xchg
div
mov
loop
dec
jbe
jg
sbb
dec
ret
rolb
pop
mov
or
sbb
mov
test
enter
shlb
addr16
xchg
mov
das
push
pusha
cmp
mov
out
hlt
xchg
fwait
sub
stos
sub
push
test
pop
mov
loope
sub
add
fwait
clc
mov
adc
jb
nop
jle
mov
in
xchg
daa
sub
xor
mov
push
push
pusha
dec
popf
or
adc
dec
xor
addl
dec
xchg
add
sub
mov
jmp
sbb
mov
shll
dec
test
ss
and
adc
fsubs
pop
loopne
adc
fwait
insl
cmp
pop
scas
fidivl
adc
and
dec
sub
shrl
dec
dec
mov
into
or
mov
imul
cld
call
hlt
aaa
stc
jae
nop
cld
pop
fs
xor
nop
test
push
jo
xor
int3
mov
lret
orl
lods
test
mov
fcomps
lret
lods
mov
pop
dec
add
dec
jge
je
sar
negl
adc
jecxz
cmp
mov
jl
add
or
lret
cli
and
mov
add
aad
xchg
aad
fdivrs
push
loope
add
sbbb
cltd
icebp
clc
loope
lret
push
lret
stos
adc
or
mov
xchg
mov
jmp
lahf
std
mov
jnp
je
xchg
movsb
add
push
lcall
fwait
inc
xor
add
inc
mov
aad
fiaddl
cmc
adc
adc
and
cmp
hlt
enter
inc
jge
cs
mov
pop
lods
aaa
inc
cmp
jecxz
lcall
and
outsb
test
jmp
loopne
or
mov
outsl
xchg
out
xbegin
adc
pop
movsl
sub
xor
jns
jle
inc
data16
or
adc
pop
inc
push
mov
adc
jecxz
dec
cmp
lock
jp
cmp
aaa
and
sub
ret
lret
dec
or
xchg
in
and
inc
xor
data16
sbb
xchg
neg
sbb
dec
push
and
inc
pushf
mov
dec
pop
mov
lds
push
fmul
jb
cmp
push
arpl
adc
rcll
data16
sub
cmc
leave
or
jne
mov
sbb
adc
stos
pushf
aam
sub
mov
fstpt
or
hlt
aaa
dec
hlt
lret
stos
incb
sbb
out
pop
aaa
fwait
push
or
jns
jmp
ss
xlat
or
xchg
push
jmp
sub
sub
push
fisubl
jno
sub
test
mov
int
stos
es
dec
gs
mov
lret
adc
inc
stos
dec
push
mov
add
ljmp
jecxz
pop
fsubrl
adc
sbb
inc
imulb
dec
inc
xor
mov
push
add
sub
jecxz
add
in
inc
mov
cmp
add
aad
dec
and
jmp
adc
jmp
jne
pop
addr16
add
lcall
xor
std
xchg
xchg
jns
mov
mov
outsl
test
jl
lret
sahf
add
bswap
and
lret
dec
lock
cmpb
push
cmpsb
insb
sti
pop
imul
pop
mov
push
sbb
rcll
stos
mov
rcrb
mov
imul
sbb
push
popa
xor
mov
cli
frstor
pop
push
xchg
pop
or
sti
aaa
jl
xor
xchg
movsl
fnstcw
in
test
dec
or
or
bound
lcall
sbbl
dec
arpl
out
fwait
cltd
out
xchg
xchg
enter
cmp
imul
add
fnstcw
fwait
mov
lcall
into
and
ljmp
push
sbb
lock
fcoml
shll
lock
pop
outsb
icebp
mov
add
repz
cli
pop
pusha
push
push
xchg
je
cs
sbb
mov
sti
push
add
cmp
lret
das
rcll
loope
out
mov
mov
enter
lea
pusha
dec
push
cmp
aas
dec
and
xchg
lret
ret
fcmovne
push
sbbb
cmp
sub
dec
jp
or
aam
enter
out
push
pop
and
mov
cli
scas
out
mov
shr
sbbl
mov
pop
mov
inc
fbstp
and
aaa
enter
stc
xchg
outsb
ljmp
dec
enter
or
push
push
mov
dec
inc
into
mov
das
pop
adc
cmp
mov
loop
push
push
xor
outsb
test
jne
push
test
inc
ss
es
gs
cmpsl
lcall
add
out
addr16
roll
adc
je
jae
loopne
adcl
push
out
sub
adc
cwtl
sbb
loop
sub
into
decb
das
xchg
mov
push
int3
xchg
push
xchg
mov
mov
cs
xor
iret
iret
xchg
dec
mov
lock
sub
add
xor
jnp
movsl
imul
jmp
lods
pop
cmp
and
popa
xor
mov
mov
or
add
mov
mov
test
ss
and
xchg
cmc
les
pop
pop
popa
int3
adc
lds
mov
lock
out
rorl
mov
into
fwait
jnp
aas
pop
rolb
into
sub
loop
and
mov
xchg
and
in
scas
shll
data16
int3
jp
scas
jmp
sahf
das
push
xchg
call
mov
lock
pusha
xchg
mov
dec
loope
hlt
dec
sub
js
scas
xchg
mov
dec
jo
dec
pop
inc
push
lods
or
pop
pop
mov
sub
sub
cmp
dec
into
sbb
jb
dec
in
jl
outsb
cs
lods
out
std
mov
sbb
jne
or
in
lret
call
or
jae
gs
cltd
aaa
aam
pop
popf
out
dec
js
outsb
mov
jne
add
fsub
mov
loope
inc
scas
fisttpl
mov
mov
cli
push
nop
lock
adc
lret
xchg
gs
into
hlt
or
loopne
xor
fldt
and
add
xchg
cmp
xor
lahf
or
inc
inc
repz
cmp
pop
and
xchg
xchg
sbb
lods
jbe
jnp
adc
pop
fistpll
jg
cmc
loope
dec
lret
aam
cld
in
lret
js
ja
add
pop
xor
ss
cs
inc
push
pop
minps
jp
or
cmp
xchg
mov
js
ss
sbb
lods
xchg
push
call
xchg
cmp
lods
and
push
xchg
pop
push
rcll
mov
or
add
jl
js
stos
xchg
fists
sbbb
repz
inc
test
adc
int3
dec
xor
push
outsb
fcoml
or
jo
sbb
fsub
jns
sarb
push
bound
mov
inc
je
popf
orb
add
rcll
pop
test
xchg
addr16
add
mov
mov
mov
pop
jnp
cld
mov
inc
addr16
mov
mov
out
and
push
lret
mov
rcl
jl
ds
or
les
dec
aas
cmpsb
jb
and
mov
jge
push
loope
mov
or
sub
jne
cltd
insb
imul
repz
jle
repnz
mov
lahf
jae
pop
add
icebp
orb
lods
lret
lahf
jge
in
insb
jnp
repnz
dec
call
cli
adc
mov
lock
int3
add
shrb
xlat
cwtl
int3
addr16
lret
mov
or
jmp
js
push
or
inc
leave
jmp
stos
sbb
gs
pop
adc
jne
pop
and
lcall
jne
ret
push
jae
imul
daa
imul
mov
pop
dec
cs
or
mov
add
mov
cmpsl
mov
xchg
mov
pop
sub
out
pop
sbb
xor
ljmp
icebp
movsb
mov
push
loop
inc
mov
loop
sub
cmpps
fldl
lds
bsr
fisubl
ljmp
adc
dec
or
or
sbb
mov
pop
xlat
push
mov
add
push
lea
cmp
mov
inc
insb
inc
sbb
loope
fnstenv
mov
in
movsb
xor
sub
adc
pop
jb
lea
cli
sbb
bound
mov
mov
jle
lock
rcrb
into
lret
add
push
adc
push
or
repz
and
aas
cmp
fidivrs
dec
mov
mov
mov
inc
cltd
and
push
mov
inc
dec
dec
mov
rcrb
inc
scas
push
negb
ja
inc
call
cltd
test
dec
pop
mov
mov
movsl
and
dec
sub
ret
mov
lahf
adc
pop
mov
loope
fsts
adc
stos
in
fistpl
pop
repnz
add
rclb
sbb
xlat
mov
adcb
insl
pop
push
push
xor
mov
mov
jecxz
mov
sbb
sbb
fbstp
xor
jnp
daa
mov
sbb
pop
pop
lret
notb
push
data16
and
push
nop
fbld
mov
mov
adc
scas
sbb
inc
js
mov
shll
aaa
arpl
mov
je
push
and
std
imul
mov
and
mov
in
jbe
sub
push
scas
cmp
push
mov
dec
shrl
push
les
aad
movb
sarb
icebp
cmp
pop
faddl
sahf
nop
jae
cmp
outsl
dec
cmp
xchg
push
jb
mov
inc
mov
ja
cmp
dec
xchg
clc
scas
loope
push
movsb
xchg
scas
pop
xchg
jae
cmp
ret
add
sbb
xor
insl
lds
cmp
jo
jno
sbb
inc
roll
enter
mov
push
das
cli
mov
lahf
jae
sbb
in
add
in
xchg
or
jge
mov
sub
jp
aad
xor
ss
push
push
daa
pushf
and
jns
cmp
ret
and
jp
bound
js
rcrb
xchg
cs
adc
sbb
in
mov
or
call
lods
xchg
lock
jno
repnz
adc
dec
sub
addr16
out
and
pop
adc
hlt
ss
mov
mov
sbb
cli
or
dec
cwtl
dec
or
fcmovbe
imul
mov
dec
aaa
aas
sbbl
sahf
jne
jle
dec
out
and
push
sbb
mov
test
xchg
enter
adc
ud2
fsub
sbb
adc
xchg
cmp
and
jp
jle
pop
xchg
scas
fsubp
test
pop
test
test
lcall
xchg
jg
in
rcr
mov
sub
mov
loop
jne
enter
mov
sbb
inc
xchg
ljmp
push
adc
js
or
sbb
ljmp
cli
inc
cmpsb
insl
and
pusha
std
orb
adc
lret
sbb
sub
inc
gs
int3
jmp
pop
dec
fwait
loopne
push
out
add
pop
iret
clc
sbb
test
int3
imul
jge
push
xchg
lret
cmp
pushf
add
lea
jns
and
cli
ss
je
pop
inc
sbb
sub
ror
xor
jns
into
pushf
stos
stos
stos
inc
and
int
jae
jmp
push
fucompp
jge
inc
cmp
sbb
inc
xorl
mov
aas
mov
das
addb
dec
out
shrb
xor
nop
sub
int
pop
mov
notb
pushl
ret
pushf
mov
ret
xor
fsubrl
cmpsl
xchg
and
loope
mov
mov
test
sarb
insl
xor
add
fildll
adc
aaa
push
fmul
xor
mov
adc
inc
lcall
mov
ja
lods
ret
pop
dec
dec
dec
pushf
aad
dec
stos
mov
dec
add
sub
pop
test
mov
or
push
mov
lret
shl
movsb
scas
cmp
pop
jp
out
test
xchg
xor
or
lods
repz
out
out
xchg
int3
gs
xor
dec
loopne
decl
inc
int
push
lods
ffree
mov
sbb
adc
jno
popa
clc
sub
mov
mov
mov
lock
xchg
push
add
or
pop
cmpsl
push
inc
pop
pop
push
jne
pop
jmp
xor
sbb
lock
add
stc
out
lods
cmc
outsl
arpl
ja
push
iret
xor
test
out
inc
ds
mov
adc
aas
push
mov
cmp
sub
sahf
sub
jle
dec
inc
sub
int
add
xchg
arpl
lcall
inc
aas
into
push
xchg
xchg
and
adc
inc
and
ss
jnp
cs
jecxz
mov
lahf
stc
dec
sub
lahf
sbb
lea
pop
lods
les
mov
lock
in
ljmp
pop
rcrb
or
insb
ror
sahf
jge
inc
push
and
pushf
adc
xchg
xor
add
in
xchg
push
movsl
jo
ja
push
pop
scas
inc
mov
outsl
mov
mov
dec
add
pop
mov
jno
push
and
and
mov
sub
ret
pop
cmp
add
push
sub
add
add
outsl
adc
sbb
inc
push
lds
in
sbbl
and
push
ss
jae
cmpsl
imul
hlt
ret
insb
fldlg2
mov
push
dec
pop
lock
mov
in
popa
mov
add
leave
push
mov
fs
loopne
aaa
jns
movsl
push
sahf
call
dec
mov
pop
fadds
movsl
scas
xor
pop
loop
jle
push
testl
jae
xchg
stos
sub
imul
jo
xchg
mov
sub
les
pop
in
sbb
xchg
sbb
dec
pop
push
das
mov
stos
pop
and
push
lods
jbe
into
test
xor
pop
cwtl
mov
xlat
sahf
mov
push
adc
push
insb
stc
jp
imulb
adc
js
pop
mov
xlat
cmp
xor
sbb
sbb
fdivrs
aad
sub
add
cmp
std
xchg
addl
out
mov
inc
in
bound
cmp
bound
mov
inc
xor
xchg
hlt
and
ffree
in
add
mov
iret
add
int
fucom
ss
xor
clc
xchg
rclb
push
mov
cmp
xchg
jmp
stos
cltd
popa
fcomp
jecxz
add
push
sti
repz
aas
or
or
rcrb
enter
add
mull
cli
test
aad
pop
xor
fwait
xor
cmpsb
pushf
jbe
mov
sub
jle
inc
pop
stos
push
xor
cli
lods
push
inc
cmp
jmp
push
out
out
jns
xchg
jae
and
inc
popa
iret
mov
mov
push
js
test
push
lds
shrb
cmpsl
lret
in
leave
dec
push
rorl
add
jle
xor
out
int
mov
dec
or
xlat
cmp
push
jae
add
xlat
mov
ficoml
pop
push
mulb
dec
aam
xchg
add
lea
dec
enter
mov
dec
add
dec
sbb
mov
cmp
mov
mov
jo
rcll
jl
push
cmp
inc
mov
lahf
out
pop
jo
test
jl
fs
and
ret
xchg
lcall
out
subl
cli
or
jge
mov
popa
outsl
sbb
mov
inc
or
addb
xchg
push
add
lret
imul
cmp
cltd
mov
cmpl
popa
add
inc
stos
add
sub
xchg
in
loopne
push
iret
dec
dec
dec
mov
and
pop
icebp
push
push
sbb
outsl
test
sbb
sti
pusha
lock
mov
fcoml
aaa
js
cltd
fwait
mov
jno
sahf
lds
dec
dec
mov
repz
xchg
pop
andb
pop
cmp
mov
push
rorb
inc
stos
mov
out
add
mov
dec
inc
push
mov
mov
popa
arpl
inc
or
adc
jmp
mov
cmp
push
inc
aaa
mov
js
jl
jns
dec
push
pop
enter
test
fwait
jbe
jo
pop
out
inc
lahf
xor
call
in
jmp
adc
push
js,pn
pusha
cld
pop
neg
jle
mov
sub
pop
jne
sarl
fimuls
pop
inc
je
xchg
es
out
aaa
in
push
jge
jg
ret
inc
xchg
cwtl
xchg
xchg
das
cmp
and
lods
es
add
jp
adc
jo
dec
sti
push
fwait
cmpsl
out
mov
add
lods
dec
lret
mov
aas
jge
outsb
push
dec
fs
pushf
sub
sarb
pop
pop
sub
xchg
pop
xchg
xchg
dec
inc
fidivrs
cmp
fldt
cmp
cmc
adc
cmp
xchg
cmc
subb
mov
ficoms
std
lock
push
test
lock
fiadds
fiadds
or
sbb
in
test
insl
ftst
dec
outsl
dec
cmc
mov
fcmovnu
out
mov
test
dec
ds
sub
pop
call
movsl
jle
mov
mov
cltd
ljmp
mov
pop
imul
inc
cmp
push
shlb
push
jae
push
cltd
xor
inc
xchg
movsl
add
or
lock
cwtl
test
pusha
rorl
jmp
adc
jmp
loopne
jl
push
mov
dec
mov
sbb
clc
mov
cmp
lods
sbb
jbe
ja
xlat
mov
sub
mov
jmp
mov
jmp
loopne
pop
inc
dec
adc
mov
push
ret
cmp
or
push
adc
push
xchg
pop
test
xor
insb
sub
addr16
out
push
sub
mov
testl
aaa
jp
and
rorb
test
arpl
fisubrs
sub
sbb
mov
dec
mov
loopne
push
lret
cmc
push
fldl
out
mov
insb
lret
pop
jecxz
cld
sub
ljmp
mov
cmpsb
mov
dec
stos
shll
popa
incb
adc
cmpsl
or
cmp
and
add
enter
rcrb
call
ret
push
push
jne
cli
out
add
push
xchg
and
imul
int3
xchg
or
mov
inc
xchg
and
int3
cmp
negb
imul
pop
rcrb
jbe
js
add
cmc
outsl
add
repz
dec
inc
clc
push
popf
adc
jge
mov
cmp
adc
mov
xchg
daa
mov
pushf
mov
ficomps
dec
inc
lret
repz
cltd
sbb
jg
loop
add
popf
cmp
aam
lock
in
mov
and
xlat
daa
cs
push
jno
dec
std
dec
xor
bound
cltd
mov
xchg
sarb
push
cltd
leave
lock
mov
dec
lret
sbb
aas
xchg
hlt
mov
stos
scas
fisttpl
lock
fld1
jmp
mov
cmp
out
or
push
and
fadds
adc
daa
xchg
icebp
jns
mov
or
adc
mov
test
fisttps
pop
shl
out
xchg
mov
pusha
cmc
fs
jmp
cmp
cmpsl
mov
popa
mov
mov
cmpsb
dec
sub
pop
jle
add
xchg
mov
hlt
xchg
movsl
nop
dec
dec
cvtdq2ps
or
out
inc
js
mov
sub
inc
arpl
add
inc
jbe
rclb
push
inc
incb
and
in
ljmp
xchg
lds
cmp
rcr
sahf
dec
inc
cwtl
lahf
into
bound
push
shll
sbb
xchg
mov
lock
adc
and
test
jg
xchg
out
push
movsl
vmovdqu
push
ret
dec
dec
fmull
mov
enter
xchg
stc
add
in
mov
and
pushf
cmp
dec
pop
enter
pop
push
fstl
insl
cmp
and
lahf
sbb
shlb
cli
xor
outsl
xchg
jbe
inc
cltd
les
jecxz
dec
or
sbb
push
jmp
fsts
pop
mov
and
outsl
pop
sbb
or
mov
cmp
je
xor
ljmp
loop
imul
insl
pop
mov
ljmp
mov
call
cmp
stos
ljmp
fs
pop
push
stc
cmp
test
addr16
ljmp
fwait
movsl
in
mov
shrl
mov
loope
push
movsb
cmp
inc
int
jmp
cmp
roll
arpl
ret
adc
adc
out
sub
mov
sbb
push
cmp
inc
adc
out
gs
cmp
movsl
cmp
or
frstor
pusha
clc
dec
push
in
add
nop
mov
fsts
aad
lods
int
or
inc
xor
inc
pop
lcall
dec
push
add
mov
xchg
lahf
dec
xchg
jae
cmpsb
mov
jnp
and
clc
pop
dec
or
imulb
nop
aam
cli
in
cli
sbb
sbb
cmpsb
in
sbb
scas
out
es
fsts
cmp
std
or
mov
push
cmp
cmpsl
fiadds
test
add
pop
push
shrl
fucom
lret
lds
cmpxchg
and
pop
and
ss
psubusb
test
mov
daa
mov
jnp
jg
ret
jl
pop
stos
jne
jge
dec
pop
arpl
sbb
mov
mov
out
rclb
pushf
insb
sbb
testl
js
aad
dec
popf
jb
pop
ljmp
sbb
mul
pop
fwait
or
mov
mov
fwait
aam
repz
mov
pushf
idivl
fdivl
jmp
pop
cmovnp
or
sub
stos
test
add
repnz
paddq
insl
jl
cltd
add
testl
jno
push
dec
fistps
flds
push
call
jecxz
divps
mov
lock
inc
push
scas
mov
cmp
in
leave
loope
xlat
push
aaa
dec
sbb
rorl
and
adc
add
mov
mov
aaa
jge
sti
add
in
hlt
xor
ret
dec
sbb
cld
je
fwait
inc
dec
xlat
jge
mov
jmp
xor
adc
les
push
das
lahf
fdivl
mov
fs
push
imul
test
mov
imul
lock
lods
or
or
pop
and
lds
xchg
outsl
ja
jge
sti
cwtl
xor
pop
jbe
hlt
aad
pop
or
daa
insl
and
jmp
dec
cmpsl
jbe
dec
push
fidivrl
mov
stc
mov
ds
pusha
jae
pop
inc
lds
lahf
stc
mov
lds
stos
jae
dec
fstl
pop
push
mov
mov
dec
hlt
pop
lret
fwait
mov
shll
and
dec
inc
push
loope
push
mov
loop
mov
mov
shlb
mov
sub
adc
clc
rorb
push
test
test
mov
popa
xchg
sbb
mov
outsl
jl
in
outsb
cmp
or
push
fs
xor
movsl
dec
xchg
cwtl
mov
push
icebp
xchg
mov
xor
add
popl
mov
adc
fisttpl
ret
lret
ret
loopne
jg
sahf
inc
rcl
fwait
jbe
push
shlb
iret
jbe
out
push
cltd
xchg
out
pop
stos
sarl
dec
std
push
ljmp
mov
cmpb
stos
pop
cmpsb
cwtl
aaa
mov
sub
cmp
mov
and
inc
fsts
mov
repz
out
addr16
pop
jbe
push
scas
inc
jae
or
call
mov
movsl
mov
inc
lods
loopne
lahf
mov
jg
out
fstps
out
cld
pop
jge
fimull
jecxz
jg
push
xchg
into
and
mov
jo
cmp
mov
jo
fldt
or
insl
rorb
dec
mov
js
je
push
push
daa
push
les
xchg
or
push
xchg
mov
das
pop
pop
adc
es
mov
repnz
ret
mov
inc
imul
dec
aaa
aam
out
cs
add
insb
sbb
iret
jmp
cld
scas
pop
cmpsb
mov
fs
rol
imul
ret
adc
inc
out
aas
xchg
pop
xlat
inc
push
dec
push
push
push
inc
xchg
aaa
lret
stos
pop
les
add
and
ud1
xor
mov
and
push
jecxz
rcrl
loopne
flds
push
aas
adc
lcall
scas
adc
and
lahf
push
mov
int3
cld
sbb
xor
mov
bnd
cmp
xor
mov
arpl
push
out
daa
jmp
add
jo
mov
pusha
xchg
xchg
xor
test
nop
fidivrs
dec
or
out
ret
dec
pop
inc
rolb
pop
test
wrmsr
cmpl
xor
leave
inc
and
sub
daa
ret
pop
lods
push
clc
ret
adc
push
pcmpgtw
rcrl
int
xchg
cmp
out
je
inc
and
sub
push
xor
xor
stos
or
cmc
xor
ret
ljmp
addr16
xor
and
add
enter
ret
in
mov
cmp
and
xor
lods
fwait
and
add
inc
xor
lods
inc
push
mov
xchg
out
negl
dec
ss
pushf
inc
mov
push
sbb
jnp
nop
roll
dec
mov
xchg
ror
sub
add
mov
es
jmp
push
cmp
out
xchg
cmp
ds
or
sub
sbb
dec
test
xchg
out
inc
fsts
push
lea
sarl
inc
sbb
mov
or
mov
jmp
outsl
cli
sbb
inc
lahf
mov
pop
mov
sbb
xchg
cmp
mov
loopne
sub
idivl
stos
add
outsb
aas
std
or
insb
dec
cmp
bound
xchg
in
js
xchg
insl
test
pop
xor
or
push
push
test
into
cs
ss
jae
mov
dec
loopne
or
insl
movsb
outsl
andl
cmc
xor
mov
mov
push
div
inc
shlb
bound
adc
pusha
ret
jno
push
je
mov
mov
push
dec
stc
inc
aad
fs
xor
jae
loopne
and
sbb
xchg
insb
ds
into
pusha
cmp
es
mov
rcl
sbb
push
adc
out
or
insb
out
pop
jge
daa
and
ret
pop
in
xchg
arpl
popf
mov
xchg
in
aaa
add
fisubl
mov
cmpsl
xchg
in
jmp
imul
mov
daa
xchg
jmp
add
cmpsl
push
cmp
or
xchg
or
mov
nop
push
push
jae
dec
add
cltd
ljmp
js
fdivr
faddp
xchg
adc
mov
fnstsw
push
cmp
xlat
in
mov
int3
cmc
in
pop
mov
inc
dec
loop
aad
flds
inc
icebp
add
sbb
push
mov
aas
adc
movsl
out
data16
ret
sub
addr16
data16
mov
xlat
in
and
lods
daa
jno
or
bound
les
les
lcall
insl
and
add
add
jecxz
ja
jecxz
push
mov
pop
and
out
pop
push
push
jmp
les
xor
test
outsl
fnstsw
in
pop
xchg
mov
mov
or
cmp
roll
inc
push
mov
dec
cmc
add
sub
pop
mov
adc
xchg
add
orl
cltd
aaa
lods
inc
mov
pop
push
mov
add
in
xchg
sub
rorl
or
pusha
data16
inc
sub
pop
push
gs
mov
mov
xchg
jo
jmp
stc
ficompl
and
and
fisubrs
stos
cmpsl
inc
and
sbb
insb
in
sarl
cmpsl
jl
out
inc
cmc
lret
pushf
add
ljmp
cmp
lahf
cs
jle
cmp
adc
repnz
sbb
je
out
clc
ljmp
push
mov
and
mov
repz
aas
sub
call
adc
cwtl
insl
inc
xor
mov
leave
lahf
sub
mov
xchg
xor
pop
dec
jp
icebp
mov
movsb
in
stos
fwait
and
shll
in
lea
pushf
adc
rorb
cmp
jg
aam
nop
adc
push
gs
pop
mov
insb
test
push
xor
sub
ror
or
test
xor
repnz
or
movsb
pop
add
iret
mov
dec
lret
call
inc
loop
add
arpl
adc
mov
xor
add
fsub
hlt
daa
mov
out
std
cltd
inc
mov
mov
dec
movsb
cmc
add
cli
sbb
push
in
mov
lgs
cmp
shll
or
mov
test
fstpt
andb
pop
icebp
lret
in
imul
adc
ret
push
xchg
mov
cmpsb
xchg
add
adc
ljmp
push
sub
int
mov
pop
subb
movsb
cs
jbe
adc
addr16
jb
loope
in
cli
cmc
sub
test
inc
lods
mov
in
xchg
xor
cmpsb
cmp
inc
or
pop
or
call
arpl
aad
cmpsl
mov
sub
or
fbld
add
mov
cmc
and
and
lea
dec
push
cmp
mov
dec
mov
fildl
sub
mov
es
xchg
daa
xchg
push
popa
arpl
cs
stos
imul
inc
sub
clc
out
sub
mov
mov
mov
dec
add
cmp
mov
xchg
mov
pop
jne
mov
mov
dec
adcb
rclb
xchg
aaa
push
jmp
push
outsb
xor
jmp
and
lret
xchg
cwtl
xor
mov
push
lds
scas
xchg
mov
sbb
lods
mov
bound
mov
add
jecxz
xor
push
data16
cltd
popa
dec
dec
inc
bound
xor
int
jbe
mov
mov
dec
stos
imul
add
int
shlb
adc
cs
xchg
les
call
jbe
inc
dec
xchg
or
fisttpll
outsl
js
loop
lock
in
xchg
mov
pop
imul
cmpsl
fists
pop
mov
aas
xor
mov
fsts
incb
mov
notl
lcall
xor
les
pop
xor
lods
jno
dec
mov
dec
dec
in
jmp
mov
push
pop
xchg
or
mov
lds
push
xor
push
mov
cmp
jne
test
pop
mov
xchg
pop
jl
pop
sub
daa
pop
xchg
xor
sarb
out
xchg
in
loope
jmp
loope
adc
push
xchg
xchg
mov
jo
mul
lcall
and
iret
inc
fwait
in
cwtl
and
mov
aas
or
mov
les
sub
mov
repz
dec
xchg
pop
cmc
or
int3
scas
sub
and
repz
adc
jl
mov
sbb
leave
cmc
test
cwtl
hlt
mov
sar
dec
mull
rorl
adc
pop
ror
jl
ret
icebp
inc
push
and
adc
add
rolb
scas
js
enter
push
or
hlt
cmp
orb
sub
add
insb
push
fmull
test
loopne
in
lret
shlb
insb
mov
adc
das
inc
aaa
fidivl
cmp
mov
xor
lret
and
sub
imul
sti
movsl
cli
rorl
mov
pop
cmp
sub
jo
add
rorl
or
je
xchg
sub
xchg
into
in
xor
jl
leave
fldenv
out
adc
jno
out
int3
enter
fdivr
mulb
pop
or
inc
movsb
clc
adc
lret
lea
and
jb
mov
mov
cltd
es
mov
xlat
je
aas
add
cmp
jns
adcl
inc
cmp
int
fwait
cltd
inc
hlt
push
add
inc
idivl
stos
scas
and
daa
push
mov
or
neg
dec
ds
jp
movl
xor
push
adc
gs
orl
jmp
adc
inc
sub
jl
jno
pop
imul
push
mov
fs
adc
imul
dec
rcr
repz
sub
lods
and
push
es
hlt
jg
dec
jbe
nop
adc
lods
lret
lods
repnz
clc
jge
test
mov
pop
cld
mov
dec
popf
sbb
mov
andb
pop
lds
dec
add
mov
das
lea
push
and
xchg
pop
int3
ja
sub
mov
fmul
xor
ds
loop
out
pop
movsb
cmpb
loopne
add
push
xchg
sub
and
push
int
shlb
xlat
loope
out
aas
aas
pop
cmp
lds
hlt
xchg
sub
and
jge
push
jmp
pop
push
adc
dec
subl
testl
int3
sub
movsb
sbb
stos
xchg
mov
shlb
cld
sub
ds
push
inc
push
sub
push
stc
cmp
loop
push
mov
or
loope
out
cmp
pushf
push
pop
xchg
rorl
or
inc
ror
in
cltd
mov
pop
mov
inc
fbstp
add
hlt
mov
cmp
mov
jbe
movsl
imull
xchg
inc
push
mov
push
mov
sbb
cli
or
iret
mov
or
mov
add
ret
add
ljmp
stc
bound
lods
mov
cs
mov
lods
mov
dec
ret
loop
int3
sub
fldenv
add
xlat
dec
hlt
mov
int
and
daa
ss
adc
scas
push
ja
negb
mov
in
sub
lds
ficompl
lock
mov
jl
pop
test
or
jl
ja
xchg
aam
lret
enter
sbb
jg,pn
adc
inc
aas
pop
push
adc
flds
cmp
jle
xor
std
lcall
inc
scas
xor
divb
xor
adc
aaa
jo
pushf
dec
mov
inc
cltd
inc
pop
dec
xchg
xor
adcb
into
fidivrl
movsb
sbb
loop
lock
sbb
pop
cwtl
dec
pop
or
arpl
inc
mov
or
inc
add
sub
sbb
lret
pop
stc
and
aas
out
jne
jns
fistpll
xchg
and
loopne
xchg
cmpsb
add
test
aam
sub
in
add
inc
lret
push
mov
movl
addr16
daa
clc
mov
cmp
mov
or
out
rcll
push
and
in
sbb
arpl
out
sahf
in
mov
xor
hlt
fdivl
cmp
imul
xchg
test
in
pop
cmp
aam
lea
sub
adc
dec
sti
jmp
xchg
add
arpl
icebp
mov
loope
xlat
mov
mov
orl
pop
or
sub
decl
jnp
pop
add
inc
mov
pop
outsb
adc
test
dec
xlat
popa
aam
mov
pop
inc
adc
mov
mov
mov
dec
jbe
sub
xchg
push
add
push
jl
xchg
lret
jne
test
xchg
mov
mov
dec
add
sub
pop
dec
aaa
fcmovnbe
push
fisttpl
imulb
clc
neg
ja
das
ret
andb
add
push
cmp
pop
xchg
sbb
out
pop
sub
jns
or
dec
cmpsl
xchg
ret
pop
or
xor
pop
fldt
out
lcall
out
mov
jge
jmp
lret
cmp
scas
sub
cmpsl
adcb
xchg
push
push
aas
pop
les
repnz
add
int
out
movsl
dec
pushf
in
fprem1
addr16
mov
inc
iret
and
pop
dec
or
popa
mov
adc
pushf
cltd
mov
andl
dec
ljmp
cmpsl
jb
pushl
xchg
xlat
xor
clc
inc
sub
jae
enter
fcoms
test
jmp
das
mov
xchg
pop
cwtl
cmp
outsb
inc
test
mov
inc
add
fcmovne
in
mov
cli
dec
adc
xor
dec
data16
insl
sbb
mov
cmpsb
mov
mov
sub
xchg
fisttps
ret
add
adc
pop
jo
aad
test
xor
cmp
mov
pop
xor
cmpsl
push
jl
mov
arpl
push
or
es
lds
mov
fstps
jnp
popa
hlt
int3
jl
lea
es
jb
push
mov
shll
fnstsw
adc
and
pop
push
lahf
xlat
cmp
xlat
or
leave
xchg
cmp
jle
jne
mov
shll
je
and
jl
sar
fcos
cmp
dec
cmp
push
stos
dec
push
inc
mov
loope
pop
cmp
lds
lret
insl
lcall
jbe
xlat
xchg
sbb
xchg
mov
addb
mov
popl
pop
sub
lret
cld
dec
xor
cmp
pusha
add
sti
dec
inc
xor
mov
mov
insb
xchg
or
adc
mov
pop
mov
sbb
mov
filds
sub
jecxz
insb
loopne
cld
into
scas
fs
add
negl
pop
hlt
jbe
push
loope
xchg
or
jnp
dec
jnp
pop
jmp
adc
lea
js
aam
mov
int3
test
imul
xchg
jbe
xor
pop
sbb
movsb
sub
dec
inc
cmp
dec
repnz
mov
pop
aam
pop
iret
call
mov
mov
cmpsl
push
pop
pop
inc
mov
decb
xchg
sub
fistpll
daa
dec
xchg
int3
sub
add
mov
orl
cld
icebp
nop
aad
sub
adc
rcrb
popa
adc
pop
mov
push
push
lret
movsb
divb
and
add
ss
add
xchg
cmp
lcall
add
fstpl
gs
arpl
dec
enter
adc
mov
jno
cld
xlat
xor
lea
aaa
nop
inc
xchg
pop
lret
xchg
sahf
fwait
sub
xor
sub
xchg
xor
mov
push
xor
hlt
dec
out
push
xchg
dec
jbe
add
xchg
out
mov
sahf
push
shl
mov
xor
sbb
out
jmp
fcoml
adc
nop
outsl
and
ds
add
rcrb
fistpl
lahf
dec
sahf
icebp
adc
pop
xchg
aad
pop
xor
enter
arpl
lods
pop
iret
shrb
or
push
jle
add
xchg
int
stos
loopne
xor
iret
sub
or
out
outsb
cmp
mov
cmp
jbe
fwait
mov
ljmp
or
jecxz
cwtl
scas
xchg
xchg
ja
mov
dec
lea
pushw
rcrl
push
int
test
gs
rcll
sub
loope
push
mov
rcrb
js
xor
jle
add
scas
sbb
jmp
test
rcrl
adc
push
mov
push
in
into
in
pop
xor
xchg
dec
pop
enter
pop
aad
test
sbb
sbb
rol
fcomip
fdivp
cmpsl
xchg
and
fcoms
sub
xor
bound
call
iret
in
lods
test
lods
xor
fldcw
mov
xchg
push
into
in
add
or
inc
dec
sub
pop
push
jbe
push
adc
ljmp
and
mov
or
fildll
cltd
push
bts
iret
sbb
sub
movd
sub
lahf
xor
cwtl
cmp
and
xchg
mov
loopne
in
flds
push
sub
stos
adc
xchg
push
jnp
cs
inc
lock
icebp
leave
sub
jnp
jno
rclb
jge
jno
cwtl
dec
fstl
push
dec
jmp
dec
movsl
dec
test
jl
inc
divb
jns
scas
inc
push
mov
dec
aam
push
fs
in
outsb
outsb
push
aaa
push
scas
scas
shl
es
cltd
or
arpl
mov
inc
in
and
pop
lcall
dec
or
jns
xchg
dec
mov
fs
cld
loope
addr16
pop
xor
stos
cmp
repz
fldcw
aam
iret
xor
mov
mov
mov
andl
fisubs
orl
test
pop
in
xchg
pop
pop
data16
cmc
out
ds
bound
mov
notl
adc
push
jne
sarb
std
jge
cmp
push
xor
mov
mov
push
add
and
adc
or
idiv
jne
out
inc
or
mov
pop
aas
jle
adcb
push
fdivl
adc
pusha
icebp
sbb
jp
dec
jl
and
test
roll
mov
aam
sub
dec
pop
pop
add
pop
lds
dec
lds
mov
xchg
movsb
cltd
push
ja
or
call
push
daa
add
xchg
mov
pop
stos
pushf
loope
ret
push
mov
or
jecxz
sbb
mov
pop
icebp
sarb
test
push
into
adc
push
lret
les
xchg
int
ds
jns
dec
xchg
jle
inc
int3
loopne
lahf
jle
pop
ja
jae
mov
cmp
adc
jge
pop
or
lods
cs
mov
xor
test
inc
subb
mov
xchg
pop
fsubl
outsl
fisubrl
test
lret
xchg
cltd
leave
or
push
repnz
mov
data16
or
imul
sbb
iret
lock
stos
pop
frstor
cli
push
jno
out
jp
ja
mov
mov
pop
insb
aas
mov
lods
mov
xchg
sub
outsl
test
mov
cmp
mov
jne
bnd
sahf
jne
test
mov
sub
arpl
jle
xor
xchg
stc
enter
dec
out
mov
icebp
xchg
shl
test
fldt
ss
lea
nopl
inc
bound
and
jmp
lds
cmpsb
repz
dec
scas
inc
sbb
jecxz
movsl
and
fidivs
jecxz
push
sahf
mov
sti
mov
cmpsw
or
mov
rol
jmp
jo
nop
arpl
imul
xor
fstl
xchg
test
shlb
addr16
stos
pop
add
fwait
pop
push
cmpsl
dec
outsl
inc
add
add
adc
mov
inc
ljmp
jp
les
sahf
jmp
pop
mov
adc
ljmp
dec
sbb
add
xchg
jp
cmc
sbb
dec
sub
inc
lods
out
hlt
ja
mov
sti
cmp
push
cmp
jp
jecxz
cs
jle
or
xchg
sub
and
pop
sub
mov
xor
aad
and
dec
sbb
push
out
lret
mov
jp
daa
push
mov
outsb
mov
lret
cwtl
les
fs
inc
out
add
cmp
insb
dec
loopne
hlt
pop
add
cmp
cmpsl
pop
out
jns
bound
xorb
pop
sbb
ret
lahf
dec
lea
insb
loopne
mov
push
cmp
cmp
in
addr16
popa
mov
icebp
ja
mov
mov
imul
cmp
stos
xchg
inc
ljmp
pop
sub
loop
std
ljmp
jge
push
shll
cmp
push
stos
or
push
je
fisttpl
cli
lods
cmp
sbb
jo
push
popf
test
mov
mov
pop
mov
cwtl
in
outsl
dec
shlb
cli
dec
push
xor
ljmp
mov
sub
subb
loop
adc
scas
inc
or
mov
jp
rclb
mov
xor
lods
ret
sbbl
adc
mov
add
add
mov
in
lahf
mov
out
mov
insb
adc
inc
mov
cmpsl
movsl
inc
call
cmp
pop
mov
push
sarb
sbb
ficomps
lds
mov
cmp
mov
test
js
shrl
lds
and
adcl
xchg
inc
pop
cmp
xor
in
or
add
dec
dec
pop
jbe
and
cmpsl
fwait
repz
fsub
popa
push
sbb
rcll
mov
jmp
dec
add
aas
mov
add
inc
nop
sti
out
out
aaa
inc
out
add
insl
push
push
pop
push
cmp
dec
gs
lahf
push
mov
push
loope
ret
sbbl
call
or
addr16
fsubr
pop
xchg
in
shrb
jmp
mov
cmp
fldt
rcll
push
inc
mov
xchg
fmulp
jle
inc
jp
into
aad
jo
mov
mov
jg
xchg
jne
aas
xchg
sbb
lcall
mov
add
push
out
or
xchg
mov
mov
std
mov
mov
loope
xor
adc
lcall
mov
outsb
lods
out
xorl
xchg
cmp
pop
loope
mov
roll
sbb
sub
push
mov
cld
pushf
adc
lock
add
stos
setbe
inc
cmp
mov
in
fsts
mov
call
dec
xchg
ljmp
in
push
push
cltd
pop
call
adc
punpcklwd
mov
xchg
ror
inc
loop
popf
inc
jmp
insb
frstor
push
fisubrs
nop
loop
jl
sub
dec
cmp
in
orb
arpl
fucom
add
dec
inc
xlat
and
icebp
insl
int3
mov
testb
dec
cmp
je
jle
int3
mov
lcall
stos
outsl
test
pop
mov
push
lea
outsl
popf
ljmp
clc
outsb
dec
and
pop
test
jle
dec
imul
cwtl
mov
add
mov
inc
adc
notl
and
rdmsr
mov
or
cmp
mov
add
push
push
dec
into
jge
ss
dec
cmp
xchg
mov
hlt
and
jnp
mov
and
loope
lds
cmp
js
out
mov
cmp
cmpsl
jne
mov
cmp
cli
pop
inc
jp
nop
lods
jno
sub
mov
jecxz
lret
in
jns
jns
les
xchg
dec
std
mov
mov
add
lock
add
cmpsl
pop
cmp
push
filds
into
inc
push
mov
xor
shrl
sub
sub
adc
pop
add
cld
lret
mov
shl
xchg
test
jno
movups
adc
decl
andb
mov
aad
fsubs
sub
mov
je
pop
fwait
test
insb
shrb
mov
sbb
xchg
push
lcall
and
mov
stos
cwtl
movsb
xorl
inc
lcall
push
test
push
mov
inc
enter
stos
jp
push
rclb
test
sbb
dec
loopne
in
in
imul
push
fisttps
hlt
iret
out
jns
push
pop
rclb
aad
imul
pop
push
int3
inc
loopne
ficompl
cli
icebp
or
jbe
pop
dec
inc
cmp
les
int
mov
andb
pop
lret
cmc
aam
jns
jae
pop
push
cmpsb
inc
imul
mov
mov
loop
addb
shrl
clc
push
push
mov
imul
pop
fwait
inc
or
cltd
add
mov
jns
mov
push
into
aad
pop
inc
xlat
xchg
dec
leave
push
sahf
test
dec
loope
fadd
in
mov
mov
imul
stc
push
or
inc
enter
adc
mov
loope
mov
popf
bound
fisubrs
lock
add
popa
pop
mov
cli
loop
mov
leave
jg
adc
mov
lea
test
cmp
mov
rcl
aam
add
cmp
ret
dec
cwtl
sahf
mov
jae
jae
popf
xor
inc
call
dec
inc
cmp
xchg
push
out
add
rclb
push
mov
jp
dec
les
cld
sub
push
fimull
in
or
int
dec
jb
jns
dec
and
lock
dec
rorl
sbbb
mov
scas
daa
dec
push
int
cmp
xor
cmpsl
sbb
ret
fistpll
hlt
out
jmp
loopne
xor
lods
les
mov
inc
push
test
ret
lcall
arpl
insl
cmp
add
sub
xor
cli
xchg
pop
xchg
mov
icebp
xchg
mov
sub
add
je
inc
push
and
add
negb
out
jae
lret
cmpsb
movsb
mov
lret
orl
stos
rorl
lcall
push
xor
and
sarl
push
push
std
jo
notl
stos
dec
mov
fcomp
fidivl
jb
mov
jp
loopne
arpl
test
dec
rorb
shl
pop
pushf
insl
gs
ljmp
jmp
xchg
mov
inc
aad
add
sahf
lahf
push
out
lea
ds
sub
fcmove
jp
int3
jns
inc
inc
xchg
mov
dec
inc
imul
je
pusha
dec
push
lods
push
fcmovnb
es
and
push
jecxz
sbb
bnd
rclb
int3
fimull
and
cwtl
out
and
test
push
adc
push
pop
sub
insb
mov
dec
jns
loop
jl
xchg
arpl
repz
sbb
add
add
popf
mov
ds
push
shrl
ja
imul
pop
ljmp
aas
je
pusha
ss
movsb
xlat
inc
mov
lretw
cmp
jl
sbb
push
pop
pop
dec
mov
test
jns
pop
push
sbb
iret
mov
dec
pop
fs
movsb
inc
ljmp
jne
cwtl
fs
lock
mov
pusha
stos
xchg
loope
dec
lret
or
cmp
sbb
xchg
ret
add
insb
mov
cwtl
sbb
outsb
sub
sahf
ret
pop
sub
add
int
mov
bnd
jno
mov
sub
xchg
data16
js
inc
lret
ja
imul
dec
push
inc
xchg
mov
mov
jp
es
adc
adc
popa
push
out
sbb
ss
pop
iret
mov
mov
pushf
jle
or
movsl
cmp
jo
popa
push
dec
fmulp
sub
rcr
or
mov
xor
sub
es
dec
les
aaa
mov
jns
clc
ret
loop
inc
data16
sbb
adc
xor
jne
jns
cltd
scas
scas
out
jno
imul
push
xchg
jg
cwtl
mov
insb
out
or
push
sub
and
pop
sbb
dec
loope
sub
fidivrl
push
xchg
dec
jns
popa
and
call
or
loope
jmp
out
lret
dec
or
pop
std
inc
hlt
pop
daa
mov
fwait
adc
lahf
pop
xchg
test
loopne
imul
cmp
movsb
xchg
pop
pop
pop
daa
cmp
mov
loop
mov
mov
push
lods
insb
and
dec
or
sub
out
adc
dec
repnz
jb
imul
sbb
mov
mov
in
push
lahf
scas
movsl
push
lret
sbb
inc
lcall
xor
pusha
clc
loope
and
xchg
aam
xor
jg
fisttps
inc
adc
sti
mov
ds
or
aas
mov
loope
rorb
sbb
aas
xchg
loop
push
push
pop
pop
mov
addr16
mov
scas
pop
lods
mov
xor
mov
fldenv
sub
pop
and
and
pusha
test
int
and
fsubl
dec
push
outsl
mov
dec
loopne
jno
adc
push
adc
mov
push
fs
cmp
cmp
adc
stos
leave
iret
and
or
dec
mov
push
mov
sub
je
sub
lcall
out
mov
std
mov
jle
mov
mov
push
xor
or
inc
loope
ss
bound
jle
jecxz
jg
in
lahf
loope
inc
xor
inc
cmp
sbb
mov
mov
xor
pop
movsb
fwait
test
orl
xor
and
push
dec
mov
filds
repz
aam
leave
jle
loopne
ljmp
push
xchg
dec
bound
pop
sbb
pusha
shll
andb
or
mov
dec
inc
addr16
cltd
and
in
cmpsb
pop
jnp
push
clc
cltd
movsl
jb
je
pushl
icebp
je
loope
inc
mov
mov
shl
jge
sub
xlat
sub
es
add
add
mov
stc
xor
xchg
xor
fisubs
cli
sub
mov
dec
fbstp
jle
mov
pusha
and
stos
loope
sbb
cmp
jmp
arpl
push
xor
mov
or
push
mov
mov
bound
and
sahf
lahf
in
mov
xchg
mov
or
inc
mov
cmp
xchg
and
jae
mov
mov
xchg
mov
mov
icebp
pop
popf
cltd
arpl
or
xchg
lcall
pop
movsl
push
arpl
jg
mov
push
rcr
inc
jne
cmpsl
mov
cli
cltd
push
mov
xor
or
popa
dec
mov
adc
loop
ljmp
xchg
mov
cli
or
outsl
mov
int3
pop
fs
gs
test
ds
lcall
add
lods
stos
mov
out
mov
adc
xor
jno
xor
push
adc
push
ja
lock
mov
adc
jnp
mov
out
test
int
adc
jge
sub
hlt
or
add
test
std
dec
mov
xchg
pop
js
pop
negl
jnp
sub
mov
dec
xchg
mov
negl
push
add
out
push
test
iret
or
testb
inc
mov
inc
sbb
ja
inc
push
xchg
or
ficompl
pop
and
cmp
ss
mov
mov
dec
sbb
xor
test
std
outsl
sti
stc
stos
add
fcomps
int
fdivl
cmpsb
pop
icebp
jecxz
sub
movsl
loopne
jg
int3
dec
xchg
mov
js
bound
test
andb
jp
cmp
insl
dec
das
cmp
mov
dec
aad
jb
pop
add
ss
loope
xchg
int
pop
test
and
add
notb
addb
xchg
je
sub
dec
inc
xor
sub
int
lret
mov
imull
or
push
cmpb
fiadds
in
inc
je
mov
div
sarl
and
and
scas
push
arpl
xlat
jne
mov
mov
lahf
scas
ret
push
je
aas
ja
pop
xor
inc
push
sahf
in
jmp
lret
mov
in
cli
push
mov
and
repnz
lds
dec
add
test
xchg
adc
ds
ljmp
lret
shrl
jae
mov
push
and
mov
xchg
sti
xchg
insl
rolb
je
cmp
jmp
fcom
lods
shrl
rcrb
je
mov
mov
mov
aam
xchg
sbb
cmp
je
rorl
hlt
mov
add
dec
and
mov
out
aas
add
push
jno
mov
or
aas
xchg
mov
in
mov
std
jp
inc
jle
sub
cld
xchg
call
loopne
xor
adc
inc
pop
jb
mov
push
and
dec
sub
push
mov
mov
cmp
pushf
sbb
sbb
xchg
cmpsl
jns
sbb
pop
lahf
aam
cmpsl
in
movsb
mov
stos
mov
xchg
pusha
mov
mov
stos
popf
xor
inc
lcall
test
lods
hlt
dec
cmp
fbld
sbb
popf
mov
jb
popf
push
fcoml
sbb
inc
les
adc
pop
pop
cmp
cld
pop
pop
sub
jb
xchg
and
incb
gs
cltd
push
es
push
or
popl
clc
decb
enter
pop
xor
cld
jbe
pop
and
push
fistps
inc
dec
add
add
rorl
movsb
inc
pusha
cwtl
cmp
popa
push
lret
sahf
lods
inc
mov
dec
jo
mov
pop
dec
pushf
mov
daa
push
inc
pop
aaa
sbbb
push
mov
xchg
out
or
cmp
pop
cmpsb
mov
jae
data16
jno
push
add
xlat
loope
sahf
jle
sahf
sub
mov
sahf
mov
cwtl
enter
cmp
mov
jge
testb
pusha
ds
adcb
das
push
rorb
or
int
push
push
mov
aas
aam
movsb
fidivrl
into
pop
jnp
outsb
data16
stc
fisubl
push
enter
add
pop
sbb
lcall
sbb
mov
mov
andl
or
or
fs
cmpsl
jno
gs
arpl
sbb
push
pushf
enter
pushf
cli
stos
jecxz
fnstcw
loop
xor
movsl
push
lods
cmp
mov
mov
cmp
lods
and
add
daa
gs
xchg
push
out
adc
fisubrs
sbb
shrl
shlb
popa
rcrl
outsb
cmc
in
lock
xchg
pop
adc
repz
xchg
icebp
xlat
mov
dec
ljmp
sub
mov
pop
jb
fstps
aad
std
sarb
bound
mov
mov
inc
jecxz
loopne
ljmp
mov
pushf
js
mov
mov
xchg
lds
std
cmc
inc
lret
pushf
clc
push
cli
aaa
or
cmp
push
iret
push
ret
sub
mov
imul
dec
imul
int
lods
stos
sbb
jmp
mov
adc
out
scas
push
inc
lret
mov
loopne
shlb
and
or
and
push
mov
rolb
dec
push
or
fs
sbb
mov
or
push
and
rcrb
into
inc
pushf
andps
fdivl
subb
mov
out
psubb
out
sub
mov
jge
and
sysexit
sbb
cmp
inc
jg
xorb
jge
addr16
iret
inc
cmpsb
cmp
js
fbstp
lock
aam
fs
js
lods
out
jmp
andb
inc
sti
pusha
das
add
xchg
repz
cmc
push
sub
cmp
cld
ds
jo
xorb
push
xchg
fucomp
xor
xchg
hlt
fnsave
mov
pop
mov
mov
mov
dec
cwtl
shlb
jmp
mov
test
bound
mov
stos
fimuls
cltd
inc
cwtl
xchg
ss
push
in
cmp
xor
or
stc
pusha
adc
fucom
add
sub
xchg
js
adc
and
aad
dec
dec
es
sarb
dec
jmp
dec
movsb
inc
mov
fwait
out
mov
call
fcomps
mov
scas
popa
inc
loop
xor
arpl
xchg
repz
cmp
dec
pop
cs
adc
adc
mov
sbb
mov
xchg
add
aas
loope
fs
iret
pop
mov
in
adc
ficoms
add
ljmp
enter
cmp
sbb
aam
lea
inc
ret
lahf
push
jge
ja
ljmp
mov
inc
fwait
mov
and
popa
add
inc
imul
sbb
xorb
rclb
shrl
xor
and
fisubs
insl
movsl
arpl
fs
negb
in
add
cli
add
add
js
jl
fs
lahf
cmpsl
movd
xchg
sbb
arpl
jbe
data16
dec
fisttps
cmp
mov
xor
xchg
cmc
jl
xchg
sbb
fs
dec
pop
add
jp
sbb
mov
xor
fsubrl
dec
insb
int
push
lcall
push
stc
add
bound
add
popfw
xchg
xor
dec
mov
imul
filds
jne
ret
adc
inc
cmc
mull
and
pop
mov
icebp
mov
xor
movsl
lret
sub
or
leave
stos
rcr
xchg
sar
jmp
rcrb
filds
mov
dec
shlb
sbb
adc
jne
dec
orb
jnp
inc
insl
mov
sub
sbb
jne
inc
arpl
daa
xchg
cmp
popa
and
mov
inc
sbb
push
or
jae
fmuls
gs
sub
inc
cltd
fsubl
lahf
aaa
xchg
rcrb
xchg
in
mov
adc
iret
xchg
cmp
mov
leave
lret
mov
mov
or
cmp
push
popf
xchg
mov
mov
mulb
or
frstor
ja
mov
cld
dec
cmpsb
cmpl
loop
pushf
in
push
das
cmp
sub
sbb
shrl
xor
std
add
cmp
fdivl
test
stos
or
add
add
sbb
cli
cmpsb
push
mov
pusha
pop
cmpsb
push
jle
or
cmp
dec
je
aad
lret
rcll
scas
adc
inc
pop
aas
in
popa
cli
int3
jecxz
ljmp
ja
jp
and
inc
or
pop
shrl
jmp
cmp
ffreep
pop
xchg
in
push
sub
mov
ss
pop
addr16
push
mov
in
jnp
frndint
lret
sti
mov
test
jle
loop
jne
nop
and
divb
pop
cli
sub
inc
xchg
mov
iret
add
jo
imul
and
cmpsl
aam
add
ja
jne
nop
rcll
stc
addr16
push
mov
ljmp
loop
leave
mov
add
or
mull
pop
mov
pop
popa
jo
imul
pop
mov
pusha
inc
adc
into
in
cmp
mov
je
pop
pop
mov
nop
test
into
mov
and
lods
push
dec
mov
inc
jb
xor
lahf
into
aam
fistpll
cmp
pop
lea
stos
shrl
and
sub
ds
add
sbb
ds
push
int3
sbb
cwtl
adc
arpl
in
lcall
and
mov
iret
mov
jne
dec
inc
lret
xlat
inc
push
ret
inc
dec
adc
lock
jnp
jae
add
out
add
push
mov
loop
cmpl
push
cli
or
outsb
cmp
add
cmc
hlt
fstps
and
shr
les
mov
mov
sahf
xchg
in
cmpsb
dec
mov
ja
insl
adc
insl
xor
xchg
inc
arpl
sti
ficoml
clc
std
mov
cld
mov
out
lock
mov
sbb
andl
repz
jecxz
sub
or
movsb
inc
dec
jle
jno
jnp
pop
jbe
jmp
or
insb
xchg
pushf
andb
push
push
or
cmp
mov
sahf
das
push
js
cmp
add
ss
cmp
int3
cmp
and
das
jne
cmpsb
cmp
fdivrl
xor
imul
xchg
inc
xor
xchg
cmpsb
stos
out
int3
shl
xlat
ss
jnp
mov
or
ss
xchg
ds
stc
push
je
inc
push
dec
mov
in
sbb
mov
arpl
sub
dec
lret
out
ret
lcall
inc
call
addr16
aas
adc
in
scas
jle
cmpsl
decl
div
fistps
mov
inc
push
fs
addl
mov
xor
pop
fisttps
jl
xor
dec
insl
call
xor
xchg
scas
aas
or
mov
mov
lcall
dec
es
xchg
jg
insb
ret
imul
fidivl
cmp
push
hlt
popf
lea
jo
std
mov
sti
sbb
dec
dec
pop
aaa
xor
popf
push
std
xlat
mov
pop
sbb
mov
in
outsl
in
clc
stos
or
test
es
fsubl
in
push
dec
jmp
ja
into
add
push
xchg
insb
or
dec
sbbl
arpl
pop
jne
push
xchg
mov
and
mov
inc
out
roll
push
sub
sub
sbb
mov
push
push
mov
push
ja
dec
cmp
or
inc
push
push
adc
lock
adc
in
pusha
out
mov
bound
dec
testb
mov
push
push
int3
cmp
mov
call
in
outsb
jle
pextrw
subb
jl
xchg
add
xchg
xorl
int
push
cltd
imul
sub
xchg
xor
lret
out
pop
jne
call
adc
imull
cmp
clc
jns
out
into
adc
sub
dec
je
dec
xorb
fsubrl
sbb
out
push
adc
add
xchg
mov
nopl
cmpsb
aad
fiadds
out
cmp
pop
rolb
ljmp
or
cmp
mov
ljmp
std
add
call
push
insl
sub
lret
inc
cmp
ret
nop
push
xchg
and
cwtl
mov
dec
adc
jmp
aad
jb
fnstenv
sub
cmp
adc
cmp
gs
sub
mov
inc
sub
jno
add
lret
and
icebp
lds
in
push
dec
or
icebp
movswl
add
sub
dec
nop
mov
div
sbb
cmp
imul
movb
cmp
andl
sahf
movsl
push
or
mov
decb
pop
stos
pop
sub
scas
daa
dec
mov
mov
flds
jp
push
in
pop
dec
loopne
sub
movsl
xchg
inc
sub
shrb
pop
sub
pushf
dec
mov
ret
hlt
je
out
sbbb
mov
jp
dec
ret
clc
mov
push
xor
out
sub
dec
scas
stc
das
push
cmp
mov
ljmp
lahf
xor
movl
push
and
and
xchg
icebp
iret
daa
dec
aaa
jo
sbb
jg
xor
loopne
test
daa
sahf
in
pop
push
push
sbb
enter
sbb
lods
mov
cltd
mov
popf
or
mov
inc
in
cmc
inc
cmp
jnp
push
iret
aaa
lods
stos
lea
dec
add
jmp
arpl
sub
idivl
aaa
stos
hlt
xor
subb
cmp
lds
aas
mov
fimull
icebp
mov
jg
mov
cmp
adc
pop
cld
mov
mov
outsl
lret
and
push
lods
pop
push
add
rorb
cmp
inc
sahf
pop
xor
mov
adc
mov
xchg
add
push
loopne
out
xchg
in
push
and
in
or
cmpl
ss
adc
sbb
push
xchg
cmpsl
sbb
gs
aad
loopne
cld
and
or
mov
movl
stos
cmp
push
mov
out
adcl
fimull
lcall
push
cmc
mov
push
push
fucom
loope
cmp
test
and
call
fsubrs
in
scas
jg
cmp
test
mov
dec
sub
ret
mov
hlt
in
sbbl
push
jae
mov
pop
mov
rep
sbbl
push
push
imul
sbb
lret
jmp
jb
scas
xor
aaa
jb
pop
or
adc
scas
mov
loopne
fisubrs
sub
add
insb
fidivrl
daa
push
push
mov
and
in
add
lar
sarb
lret
mov
add
mull
push
leave
stos
inc
xlat
movsl
shll
js
fcomip
loope
jg
and
pop
xor
cmp
cltd
sti
and
test
in
xchg
dec
mov
mov
jb
movsl
into
and
int
add
fistpl
sub
sbb
scas
push
mov
js
ljmp
ljmp
cmp
ret
rorb
mov
and
pop
dec
dec
xchg
stos
or
push
sbb
push
pushf
sbb
and
jns
int3
addr16
sbb
jae
popf
jo
mov
stc
bound
inc
and
shr
test
icebp
xchg
pop
adc
or
push
rcl
xchg
jmp
aad
cmpsb
test
sub
fwait
mov
mov
dec
enter
inc
push
mov
mov
lahf
sub
sbb
xchg
jb
cmp
pusha
xchg
push
call
stc
lock
mov
mov
mov
sbb
push
movsb
add
daa
xchg
sbb
sbb
cmpsb
popa
test
fdivl
testl
insb
leave
xor
xchg
sub
dec
ljmp
push
pusha
or
insl
mov
push
arpl
mov
ljmp
das
test
int3
sub
sbb
add
inc
fstl
je
mov
add
cltd
aas
xor
loopne,pt
ret
xor
mov
iret
test
mov
dec
xlat
add
jl
adc
mov
dec
push
dec
mov
xchg
outsb
in
test
sbb
pushf
inc
mov
fstpt
sbb
cwtl
xor
mov
leave
popa
es
sbb
test
sub
cmp
mov
and
push
sub
icebp
xchg
sbb
fisttps
mov
xchg
aaa
ret
sub
insb
test
das
sub
shll
sub
movsb
adc
xor
iret
inc
or
jbe
sbb
mov
pusha
dec
fs
and
lcall
pop
xchg
inc
adc
jbe
sbb
jae
nop
jge
dec
dec
push
pop
xor
aam
mov
icebp
jbe
cli
push
mov
xchg
out
mov
adc
sbb
test
lcall
jl
jle
mov
jg
mov
and
and
je
cmc
rcrl
outsl
sbb
notb
cmc
cmpsl
sarb
jbe
mov
dec
mov
icebp
in
and
xorb
js
or
sbb
rcrl
insb
lods
pop
dec
xor
dec
adcb
pop
test
lret
add
mov
sbb
and
ret
sub
shrb
mov
or
into
mov
clc
mov
cmc
jg
es
std
dec
jle
cwtl
call
and
cld
or
cmpsl
xchg
or
cmpsl
jmp
out
sub
iret
js
lcall
lods
outsb
test
mov
and
push
push
mov
out
mov
dec
idivl
pop
lahf
jbe
sbb
js
das
hlt
pop
aad
xor
jae
cli
add
dec
xchg
fwait
mov
rclb
cmp
stos
cltd
jl
push
jmp
push
out
add
shrl
testl
mov
rcr
mov
ret
inc
pop
add
cmp
into
dec
inc
and
shll
pop
inc
mov
jp
cmpsb
outsb
outsl
push
sbb
fldcw
sbb
xchg
mov
mov
sub
push
loop
fiaddl
movsl
mov
in
ret
gs
mov
movsb
push
cmp
inc
sbb
mov
cwtl
test
or
push
adc
cmp
das
sbb
int3
push
sbb
js
add
mov
mov
test
mov
pop
or
ljmp
add
out
xchg
cs
mov
jecxz
dec
mov
mov
sub
mov
ret
call
xchg
bswap
sub
int3
or
sar
test
xchg
push
pop
loope
xchg
xor
mov
add
xlat
mov
lods
out
lods
sub
mov
loop
or
xchg
pop
fdivrl
cmp
xor
mov
ds
mov
adc
jbe
ss
dec
push
hlt
nop
dec
mov
adc
imul
mov
dec
dec
mov
cltd
pop
sbb
insb
pushf
nop
arpl
push
jns
and
aad
mov
pop
push
jbe
pushf
nop
mov
icebp
hlt
nop
pmaxub
adc
jns
xchg
lock
add
out
dec
xchg
dec
sub
and
pop
or
cmpsb
hlt
inc
cs
mov
add
push
mov
addl
mov
setne
sbb
adc
ss
in
lret
repnz
cmp
mov
mov
xor
jbe
rol
cmp
jl
stos
dec
testb
or
scas
cmp
andl
cmp
ljmp
jo
sbb
lods
xchg
pop
shrb
jp
int3
aad
sbb
adc
cmp
inc
sbb
push
sub
cmp
xchg
cmc
or
pop
arpl
je
insb
insl
shll
jmp
and
xor
pop
mov
inc
test
xchg
es
lret
faddl
fisttpl
mov
out
es
iret
lret
add
cmp
jbe
sbb
or
mov
jo
xor
push
and
xor
bound
mov
mov
imul
loope
sub
jmp
adc
and
bound
inc
imul
add
push
loop
jp
xchg
test
inc
add
outsl
mov
out
cmp
aad
lret
sbb
ljmp
sbb
inc
fcmovbe
push
addr16
int
adc
ret
xchg
adc
repz
in
mov
imulb
fildll
jl
cmp
sub
push
push
arpl
xchg
ficoms
sub
mov
cmp
xchg
mov
fcomps
sbbb
inc
add
cli
mov
add
pop
cmp
andl
mov
mov
rcll
in
cmp
int3
and
insb
je
popa
fnsave
cmc
loop
adc
sub
cld
out
pop
sub
mov
pop
adc
pop
inc
pop
add
or
shlb
pushf
fldt
cltd
dec
notb
stc
test
sub
ret
ljmp
nopl
fwait
push
ss
sub
mov
loop
aam
mov
jecxz
add
cltd
repnz
pop
mov
pop
or
ret
and
mov
xchg
cmpsl
jo
inc
add
inc
add
mov
xchg
inc
jle
adc
stc
testb
movsb
popa
sub
add
loop
pop
lea
adc
push
inc
push
movsl
loope
out
and
mov
jle
mov
test
sub
inc
xchg
leave
insl
cmc
jb
xor
loop
adcb
xchg
nop
push
adc
rorl
push
lcall
dec
stos
mov
sbb
ss
or
mulb
cmp
mov
enter
mov
adc
and
cltd
mov
pop
lods
popa
mov
sub
loopne
mov
mov
inc
xchg
mov
push
test
add
cwtl
cmp
imul
int
lea
aas
add
repz
and
push
xchg
jne
lcall
sub
imul
push
and
jmp
pusha
add
cld
cmp
fisttps
sub
xor
add
sbb
xchg
and
mov
mov
mov
or
mov
loope
adc
movsl
filds
sbb
jb
add
stos
xor
enter
je
fsubrl
and
or
in
xor
push
adc
xchg
dec
out
sub
jl
mov
adc
incl
test
aaa
jne
mov
dec
ret
adc
inc
adcb
dec
mov
mov
inc
add
sbb
mov
bound
gs
cmp
pushf
inc
xchg
jno
fwait
or
sbb
fs
adc
lret
vmaxps
test
mov
cli
pop
sbb
outsl
mov
nop
mov
aas
iret
pop
sti
insb
ficoml
lret
cwtl
popl
insl
lret
xchg
or
adc
or
int3
ss
dec
pop
adc
stos
inc
rcrl
ret
cmp
jmp
scas
add
js
xor
jb
inc
popf
pop
mov
sbb
inc
imul
js
mov
sbb
loop
xlat
and
xchg
cmpsb
bound
jns
inc
jb
pop
or
int
btc
iret
jg
jo
inc
sub
xor
mov
xchg
fcompl
negl
inc
push
jge
mov
sub
adc
push
push
jmp
mov
inc
mov
mov
dec
push
inc
jae
push
jns
loop
mov
stos
mov
addl
pushf
lock
rorl
mov
xchg
jmp
sbb
pop
sbb
pusha
outsl
add
aad
xlat
jno
clc
ret
mov
mov
or
push
or
pop
pop
fsubrl
push
in
mov
or
jne
mov
sbb
pop
push
sbb
pop
xor
bound
dec
arpl
adc
push
sub
jge
xlat
mov
and
pusha
sbb
bnd
enter
mov
and
ljmp
and
outsb
lock
leave
mov
or
test
and
cmp
aam
push
cmp
cwtl
int
sub
jmp
inc
sub
je
mov
in
es
xchg
sub
push
shl
scas
insl
ret
and
movsl
add
push
div
arpl
in
sub
mov
mov
call
call
dec
sub
lcall
imul
sbb
add
loopne
adc
xorb
adc
mov
fs
push
dec
jp
mov
push
scas
jge
push
pop
ds
inc
imul
sahf
or
notb
inc
jl
cmp
mov
in
pop
add
mov
mov
fsts
mov
icebp
lods
negb
jmp
adc
loope
loope
out
dec
cmc
dec
xchg
xchg
or
mov
out
pop
les
scas
jl
mov
cmp
jae
pop
xchg
je
stc
insb
cmp
popa
ja
bound
ret
ficoml
or
rolb
test
and
in
sub
sub
mov
fsubl
mov
jbe
xor
divb
pop
inc
sbb
or
dec
popf
fmull
aas
jecxz
jge
sbb
jp
jo
sbb
sbb
scas
pop
das
cwtl
mov
rorb
jmp
xchg
inc
mov
push
ret
out
sbb
sub
fisubs
mov
jl
rcrl
pop
jmp
pop
adc
and
ds
jecxz
shll
test
stos
adc
adc
ficoml
inc
lcall
mov
stc
stos
mov
iret
xchg
popf
mov
mov
push
pusha
mov
cli
data16
jle
insb
iret
xchg
cmp
loop
loope
pop
mov
repz
fwait
aam
mov
and
call
int3
call
out
test
or
cltd
jno
nop
in
sub
xchg
in
pop
out
xor
lcall
in
subl
cwtl
into
das
sbb
enter
xchg
cmp
addr16
enter
push
push
mov
dec
sbb
out
ficoml
dec
mov
add
mov
insl
inc
xchg
cs
sub
inc
adc
push
lcall
lds
pop
inc
int3
xlat
inc
mull
cmp
icebp
inc
loop
aad
push
mov
push
adc
xlat
lret
movsb
mov
cld
sbb
mov
inc
fwait
inc
jmp
dec
cmc
aad
push
or
stos
cltd
movsb
xchg
ds
out
in
cmpsb
add
mov
lea
icebp
scas
xor
in
dec
test
push
stos
mov
clc
or
jnp
fs
pop
xchg
mov
pusha
or
int3
xor
fprem
test
sbb
mov
jmp
pop
push
faddl
push
pop
fistpl
push
test
jne
fld
fisubs
fs
inc
or
dec
add
mov
clc
fbstp
jns
pusha
mov
push
outsb
or
movsl
es
mov
mov
mov
mov
jmp
jnp
inc
jge
pop
push
int
cmp
sbb
icebp
and
xor
arpl
cmpsb
xor
test
xchg
lock
mov
stos
push
shlb
pop
xor
jmp
sbb
mov
into
dec
and
int
ss
pop
ja
cmp
or
and
aaa
into
dec
mov
mov
mov
sbb
or
or
dec
pop
mov
adc
mov
add
adc
in
adc
iret
cld
ret
mov
push
adc
jge
lret
lods
int
inc
mov
or
fisubrl
jmp
addl
insl
adc
mov
dec
orl
fimull
inc
mov
adc
ret
femms
ds
sub
jmp
jmp
xor
cld
xor
xchg
lods
and
mov
inc
push
sti
jnp
pop
push
into
push
adc
cmp
mov
dec
pop
mov
insb
adc
push
sub
shlb
imul
lcall
repz
jmp
pop
cmp
and
xor
push
xchg
jae
orb
pop
outsl
jne
lea
stos
push
stos
aas
movsb
mov
xor
mov
dec
stos
jg
pop
dec
scas
jbe
fmull
into
flds
popa
mov
sbb
inc
test
mov
mov
loopne
dec
xchg
inc
test
and
iret
jo
pop
clc
les
das
lea
insb
fadds
out
xchg
xchg
gs
dec
scas
inc
xor
sarl
pop
into
mov
outsb
inc
fisttpll
inc
loopne
cld
add
ret
enter
mov
xchg
inc
inc
cmp
cli
dec
push
mov
cmp
pop
insl
jne
xor
or
or
jbe
fnstsw
in
cmpsl
out
pop
jmp
aad
jbe
lret
or
jnp
jge
xor
ret
fdivrs
and
and
outsl
pop
out
movsb
push
les
and
sbb
es
outsl
push
dec
push
fdivrl
aam
adc
or
andb
cmp
xchg
lds
lcall
inc
test
xchg
add
pop
fdivl
aad
rclb
and
cmp
inc
in
sti
je
push
in
stc
test
inc
bnd
scas
daa
xorb
sub
insl
push
into
pusha
push
mov
mov
fbld
or
mov
inc
xchg
jg
lock
xchg
and
add
aas
mov
loope
dec
lea
sbb
fdivrs
movsb
fcomp
jmp
ljmp
stos
mov
loopne
jmp
mov
dec
or
pop
jp
insl
inc
lds
xor
int3
shll
mov
stc
clc
sbb
jle
test
dec
inc
mov
aad
loope
dec
stos
push
dec
mov
pusha
subl
jne
je
cmc
cmp
addl
jl
imulb
jnp
adc
adc
insl
lea
clc
xchg
imul
outsl
movsl
orl
cmp
inc
or
cs
fcomi
adc
xor
ljmp
sbb
shrb
ja
jp
mov
jl
sar
out
sub
add
jbe
imul
pushf
adc
cmpsl
xor
lret
bound
push
lods
push
lock
cwtl
pusha
mov
sub
lods
rorl
sub
lret
xchg
jns
add
pop
mov
imulb
jnp
mov
sbb
jb
jecxz
daa
pop
jo
scas
inc
and
and
jmp
cmp
ret
push
mov
fldl2e
add
add
xor
push
arpl
inc
daa
and
leave
push
dec
das
test
mov
add
mov
cmc
rcll
das
inc
adc
sbb
mov
and
mov
push
mov
arpl
adc
jge
or
mov
frstpm(287
sbb
and
sarl
mov
aas
mov
mov
push
cmp
dec
int
popf
mov
or
sub
data16
lahf
in
push
mov
xchg
call
mov
mov
lods
pop
cmc
adc
sub
pop
test
js
cmc
sbb
aas
or
sbb
sar
loop
sbb
in
fimull
fwait
out
or
iret
fs
mov
lea
inc
mov
hlt
xchg
cmpsb
or
sbb
and
or
test
test
mov
addr16
adc
mov
pushf
mov
add
inc
add
or
xor
mov
inc
dec
cmpsl
sbb
lods
inc
add
aaa
ret
mov
cmpsb
xor
sahf
fmuls
push
lahf
inc
mov
lcall
nop
push
push
inc
jge
mov
rorl
movsb
push
movsl
jbe
sbb
popf
xor
pushf
pop
mov
dec
jmp
lret
mov
push
xor
testl
loop
not
xchg
fimuls
notl
pop
xacquire
lods
cmp
neg
cmpsl
repnz
xor
lret
vunpckhps
xchg
push
in
movsb
sarl
rorb
stc
jns
push
add
xchg
jae
push
movups
call
push
lcall
iret
bound
ljmp
mov
mov
popf
xchg
fs
cmp
in
mov
dec
adc
jns
jp
push
or
in
sub
jo
rclb
and
inc
clc
std
insb
outsl
cmp
leave
xor
enter
xchg
jmp
pushf
cmp
sbb
jl
jbe
addr16
mov
jne
pop
fisubs
xor
sub
movq
xchg
rcrb
aas
push
cmpsb
aam
adc
lret
mov
fidivl
or
inc
test
ss
inc
dec
or
jo
mov
shl
or
or
dec
pusha
outsb
cmp
xchg
cmpsb
gs
fnstsw
cli
aad
aad
push
incl
rol
movsb
fdivrs
dec
mov
repz
into
sub
sbb
movsb
jge
or
in
in
pop
xchg
popa
stc
cwtl
sbb
pop
push
dec
jge
push
ds
dec
dec
mov
scas
adc
push
push
pop
mov
xor
cmp
fnstenv
mov
repnz
dec
ljmp
insb
mov
xor
sbb
push
mov
push
add
repnz
cmp
jae
das
mov
push
mov
dec
ret
lcall
sbbl
push
or
mov
dec
mov
in
xor
inc
jle
dec
pop
popa
inc
or
imul
add
xor
shrl
and
mov
sub
jge
into
add
sahf
pop
mov
ds
das
in
sbb
popf
lock
stc
push
push
pusha
mov
and
push
xor
aas
stos
ja
fs
mov
mov
mov
gs
jle
jnp
fcmovnu
xchg
adc
jle
push
cmp
pop
lods
rclb
inc
in
and
and
int3
xchg
mov
mov
ret
dec
out
cmp
cli
mul
sbb
mov
bound
sub
mov
paddsb
mov
fwait
movsl
lock
pop
movsb
nop
test
pop
popa
adc
arpl
cwtl
adc
mov
inc
in
adc
mov
inc
les
push
xor
sbb
xchg
mov
stos
jp
xor
es
adc
xorb
dec
leave
pop
rorl
cmp
push
push
incw
popa
sub
lea
xchg
es
aaa
mov
mov
pop
dec
or
jne
ret
aas
mov
add
mov
in
push
or
sar
movsb
cmp
aad
xchg
mov
inc
cwtl
dec
adcb
lods
repnz
imul
push
jne
xor
inc
pop
add
inc
sbb
dec
push
imul
cmp
push
dec
stos
xlat
push
pop
pop
cmp
jp
cs
jge
cmp
leave
test
xchg
arpl
das
lret
stos
cmp
ror
xor
xor
mov
mov
and
sbb
inc
add
and
rcll
add
aas
and
addr16
and
stc
notb
xor
nopl
imul
ret
xor
jae
push
xchg
bound
sahf
mov
ljmp
jl
test
lods
or
fdivrl
fildll
in
out
pop
mov
negl
inc
fwait
movsb
dec
jg
dec
xchg
sbb
pop
push
jb
mov
jns
mov
push
mov
cmp
aas
mov
pop
nop
aaa
add
jle
into
clc
jle
outsl
mov
fadds
inc
call
pop
mov
push
adc
push
cltd
pop
aad
adc
scas
add
xor
int
jecxz
jp
popf
cmp
xchg
ja
lods
pop
addr16
sub
push
int
cmc
fidivl
sahf
ds
scas
in
dec
popf
cmpl
inc
and
sub
rcll
fistps
sbb
mov
adc
fbstp
mov
ds
clc
iret
pop
add
mov
imul
mov
dec
lret
inc
sbb
push
inc
test
imul
std
dec
inc
xchg
aas
xchg
loopne
int
rclb
ljmp
mov
aad
add
cltd
arpl
lods
rep
mov
or
xor
les
rolb
cmp
ss
repz
xchg
sarl
cmp
incl
inc
dec
dec
loop
clc
das
popf
add
push
movsb
add
mov
cmpsb
repz
testb
fists
jo
xchg
dec
mov
mov
repz
jno
movb
xchg
jne
mov
push
xor
lods
pop
xor
cltd
outsl
test
or
int3
cltd
or
or
sarb
mov
add
or
inc
aad
sub
xchg
int
xchg
ret
das
jge
lahf
sbb
jge
aad
loope
sub
gs
cwtl
mov
sub
rdpmc
js
add
cmpsb
popf
and
popa
test
mov
enter
adc
inc
cltd
fwait
aaa
test
in
repz
and
faddl
lods
arpl
xor
call
pop
push
andl
ja
inc
adc
pop
stc
lods
stos
ja
cmpsb
cld
sahf
test
das
add
aam
lock
or
scas
fsubl
mov
out
mov
insl
imul
adc
sbb
js
enter
push
sti
jmp
stos
psrad
out
adc
outsb
adcb
icebp
jge
fildl
sbb
mov
adc
insb
xchg
out
push
jb
or
imul
fisubrl
inc
ret
movsb
push
std
or
xchg
adc
mov
sub
fwait
pop
sbb
imul
and
imul
cmpl
xorl
pop
out
dec
dec
into
out
movsl
lods
sub
adc
xchg
outsb
cli
stc
mov
adc
push
inc
fldz
jbe
or
jmp
jo
fsubl
inc
inc
xor
iret
and
push
sbb
ja,pt
clc
xor
and
sbb
mov
subb
xchg
or
dec
xor
mov
ja
add
jecxz
inc
negb
inc
out
pop
adc
icebp
jp
lods
inc
cmc
mov
xor
je
rcr
xlat
cli
loop
rolb
insb
jle
inc
int3
or
inc
stos
mov
jns
sub
lcall
cmp
stos
pop
into
mov
js
xchg
jae
aad
jecxz
mov
das
int3
into
mov
aam
mov
adc
jle
pop
fbstp
xor
int3
out
icebp
jns
mov
lcall
or
fdivrs
pop
or
sbb
lcall
dec
ficoml
or
mov
add
sub
insb
out
icebp
ret
mov
sbb
insl
push
pop
fsubrl
ret
push
dec
dec
push
cmp
aam
fisubrs
fistpl
pop
push
pop
dec
into
cmp
repz
lock
cmp
cmp
mov
bound
das
shll
jecxz
sbb
push
pop
cmp
les
cmp
adcb
jmp
mov
add
icebp
fsubrs
cmp
fsubs
aas
test
lcall
call
push
inc
std
iret
mov
fwait
out
and
scas
rcll
aas
sbb
inc
xlat
push
xlat
and
push
lods
out
adc
sti
sbb
sbb
enter
xor
lcall
xchg
insl
pop
mov
cmc
mov
jg
cmpsl
popa
pop
or
out
addr16
xchg
push
daa
outsl
pushf
xchg
sbb
xor
mov
cli
ret
push
adc
xor
inc
test
lahf
cli
xor
sbb
movsl
mov
mov
xchg
stos
pusha
mov
sbb
jl
int3
jmp
mov
insl
repnz
jnp
mov
sub
aad
dec
mov
jp
add
pop
add
cmpsl
mov
jae
ss
lock
adc
jl
test
sbb
and
pop
add
sub
or
mov
dec
and
test
pushf
or
push
mov
sahf
adc
cli
xchg
popa
sbb
mov
jmp
ret
rolb
fstps
dec
push
aas
jp
push
dec
in
stos
or
xor
xor
inc
sbb
movsb
jns
movsl
test
inc
inc
test
fs
aas
jb
add
inc
pop
hlt
int3
push
xchg
loope
mov
daa
mov
push
push
mov
jnp
mov
pop
mov
addr16
jbe
dec
xchg
adc
test
jae
add
out
mov
rorb
xor
dec
lret
sub
data16
mov
int
mov
mov
dec
movsl
and
in
xchg
out
imul
cmc
or
mov
or
adc
call
ret
dec
in
add
outsb
idivl
aad
mov
xor
subb
inc
mov
lahf
ds
xchg
sub
xor
ljmp
or
mov
scas
test
imul
fcomps
ffreep
pop
push
shl
jp
sub
inc
sub
in
fidivrs
xchg
jns
test
pop
xchg
xor
int
adc
ficoml
cmp
push
stos
mov
inc
add
or
and
jmp
mov
and
mov
or
dec
enter
inc
test
add
dec
test
pusha
or
sbb
int3
fcoms
pop
mov
cmpsl
mov
push
repnz
xor
push
call
jnp
fmulp
pusha
sti
hlt
or
fdivl
clc
movsl
inc
sub
sarl
addr16
pop
cmp
xchg
test
outsb
leave
cmpsb
sub
mov
fsubl
jmp
cwtl
ret
inc
rorb
aaa
jmp
push
in
xor
bound
jp
or
loope
movsl
xchg
gs
inc
sbb
je
test
fisttps
jmp
push
icebp
dec
fs
sub
es
or
inc
cli
xor
lea
xchg
and
pusha
pop
push
and
and
loop
loope
and
js
adc
imul
or
inc
subl
xchg
sub
sbb
lock
aam
stos
jnp
mov
xor
ret
xchg
cmc
and
adc
push
mov
enter
repz
scas
inc
adc
punpckhdq
stc
adc
cwtl
mov
mov
mov
pop
jecxz
dec
inc
cs
out
mov
lret
mov
push
xchg
dec
inc
jecxz
push
cmp
or
ja
mov
push
aas
mov
and
shl
jmp
out
rcl
clc
mov
test
pop
movsl
mov
fisttpll
into
mov
ret
lahf
xor
add
push
lcall
inc
int
fists
push
pushf
pop
imul
pop
push
xchg
pop
push
ret
fsubrs
lret
xorb
clc
jecxz
xlat
fiaddl
bound
cmp
cvtpi2ps
stos
or
xlat
and
inc
scas
rorb
das
repnz
push
push
push
jle
loope
pop
jmp
mov
sbb
movsb
dec
cmp
stos
or
inc
and
cld
pop
in
sbb
dec
sub
test
fcoms
popa
sbb
and
scas
jns
into
mov
lods
in
outsb
lods
cmp
and
dec
adc
fstpl
xor
imul
insl
cltd
add
scas
push
aaa
cs
jge
cltd
rorb
dec
sbb
js
mov
jmp
stc
lret
jp
cmc
xchg
inc
xor
jg
mov
lea
cmp
test
out
ja
xchg
inc
and
inc
insl
adc
shll
pmulhuw
imul
jmp
jle
cwtl
cmp
sub
xor
shld
dec
xchg
imul
cmp
repz
sbb
sbb
pop
jg
pop
scas
test
xchg
cmp
aaa
insl
stos
aam
mov
lods
cmpb
xchg
cmp
jnp
out
into
addr16
fnstcw
cwtl
add
mov
mov
inc
jg
adcl
clc
loope
pop
mov
jo
cmc
pop
xor
push
std
sub
inc
xchg
pop
insl
or
mov
or
into
xor
sub
xchg
enter
xor
lret
leave
push
or
dec
xchg
ja
mov
cmc
movsl
sbb
cli
and
bound
fmulp
movsb
adc
outsl
cmpsl
push
ret
jno
push
jmp
js
mov
cmp
xorl
ret
push
and
adc
in
bound
movsb
int
arpl
jmp
and
mov
daa
push
push
or
test
lds
jmp
fwait
rcrl
mov
out
xor
aam
movsl
popa
inc
xchg
repz
out
xor
mov
cmp
and
das
xchg
add
mov
mov
inc
pop
iret
in
and
aas
fistps
sarb
mov
jnp
mov
ret
out
pusha
orl
repz
or
sub
xchg
pop
pop
or
imul
dec
jge
call
stc
in
enter
cmp
lret
pushf
lret
sub
sub
mov
outsl
sub
sbb
bound
dec
dec
rcll
jge
loopne
call
mov
in
sub
loopne
movsl
push
mov
inc
mov
pushf
adc
das
xor
jae
popa
add
xchg
cmp
dec
add
inc
jae
int3
cmc
andl
lods
mov
mov
mov
mov
adcl
or
jns
inc
push
rcl
lret
repnz
popf
sbb
xlat
hlt
sti
jl
fbstp
mov
ljmp
in
push
mov
pop
lret
lahf
add
test
test
jb
aaa
inc
xchg
and
jmp
add
stos
aaa
enter
les
adc
sbb
cmp
je
or
jno
xchg
fmull
stos
jmp
out
xchg
test
push
dec
sub
and
ljmp
cmp
iret
outsl
lock
and
ljmp
cltd
gs
sbb
inc
outsb
outsl
aam
and
add
sbb
add
sarl
sub
lret
sub
push
jns
test
sbb
fmull
cmp
fidivrl
dec
fs
loop
push
pop
or
imul
dec
pop
mov
or
sbb
and
mov
xchg
int
out
lcall
add
xor
pop
outsb
call
cld
pop
adc
add
push
aas
cmc
inc
in
adc
cwtl
repz
mov
test
hlt
sub
sbbb
repnz
aam
leave
lahf
fs
pop
mov
fdivrs
add
jecxz
xchg
jp
inc
cmp
sub
sub
xchg
pusha
sbb
inc
arpl
test
jl
xor
and
js
mov
outsb
xor
lods
lods
lds
ret
mov
inc
and
sub
arpl
popa
sub
je
dec
and
push
ficoms
jno
add
nop
push
mov
pop
push
jmp
xor
aaa
xlat
cltd
ss
movsb
fstps
mov
hlt
cmc
inc
leave
test
scas
fcomps
push
mov
and
xchg
xchg
into
add
lock
jmp
xchg
inc
cltd
repz
mov
pop
xchg
mov
mov
mov
dec
pushf
jne
in
inc
std
inc
cmp
push
fstl
shrl
or
mov
pop
test
ret
cmp
push
loope
xchg
push
dec
in
cltd
xchg
aaa
fisttpll
xchg
sub
or
scas
outsl
push
mov
es
xorb
repz
in
mov
test
xchg
jmp
shll
cld
mov
enter
jge
arpl
pop
dec
push
loopne
and
outsl
pop
lock
adc
add
inc
inc
sub
sbb
lret
xlat
sub
cmpsb
push
push
pop
cli
andb
xor
add
pop
adc
pop
subl
lcall
int3
mov
les
stc
shlb
xchg
fld
xor
cmp
imul
das
dec
adcb
and
mov
add
pop
dec
jns
aam
nop
mov
es
adc
cmpsl
addb
cmp
add
std
cwtl
out
sar
xor
jle
rcrb
mov
js
mov
ret
xchg
pop
jns
movb
daa
fstl
scas
and
mov
pop
mov
xor
adc
rcrl
sub
mov
pop
outsb
push
mov
jle
cltd
aam
mov
mov
fsubr
add
aaa
jbe
lock
lods
add
pop
stos
push
jmp
fists
fsubr
mov
cmp
test
jp
sub
scas
insl
xor
add
jge
xchg
cmp
pop
sbb
inc
push
dec
cwtl
cmp
mov
jle
add
sbb
js
insl
cltd
jg
pop
daa
leave
inc
jo
cmc
mov
adc
enter
add
xchg
movsl
roll
dec
jle
ljmp
rclb
inc
inc
xchg
and
inc
or
adc
sahf
xchg
insb
outsb
sub
inc
lahf
std
xchg
add
int
andb
jle
sub
sub
lods
in
adc
mull
dec
add
xchg
subl
dec
scas
test
out
pusha
dec
add
mov
adc
lret
push
xlat
addl
xchg
in
cmpsl
inc
mov
mov
jmp
fsubs
sti
popf
in
push
sbb
adc
std
pushf
fdivrp
mov
in
shrl
leave
xchg
push
mov
into
repz
pop
imul
fnsave
push
sub
mov
movsb
dec
sbb
xor
in
test
push
add
je
dec
frstor
jne
ds
cli
inc
mov
iret
mov
xchg
mov
outsb
adc
push
or
and
or
test
dec
push
push
daa
rolb
int
and
push
xchg
dec
push
jmp
push
and
jle
mov
test
or
fstl
mov
inc
and
adc
int3
es
push
mov
xchg
pop
pop
add
test
mov
movsb
leave
rclb
xchg
je
pop
mov
adc
hlt
pop
push
sbb
push
xchg
pop
push
sbb
mov
decb
call
cli
ja
iret
jnp
mov
sub
sub
into
jno
adc
adc
mov
out
mov
and
xchg
movsl
add
mov
stos
lahf
aas
stos
xchg
sarl
inc
and
cmpsb
mov
cmp
lea
sbb
adc
bound
loope
inc
test
ret
insl
xchg
ror
lods
rcr
mov
sbb
xor
cltd
adc
jbe
shrb
data16
ds
xor
push
stc
dec
push
sub
lock
xor
cltd
or
xor
adc
js
imul
mov
mov
and
push
push
pop
pop
pop
sbb
lds
xlat
shl
mov
mov
add
xor
push
loopne
mov
lds
repz
push
pop
pop
push
mov
out
insl
pop
jecxz
ja
xor
pusha
cmp
call
imul
fsubl
out
inc
cmp
cltd
jae
int
sbb
arpl
cmp
adc
sbb
dec
cmp
mov
fdiv
lret
leave
xor
cltd
test
cwtl
jmp
ss
clc
adc
jns
push
nop
jecxz
lahf
pop
ss
in
xchg
jne
push
mov
push
lea
jecxz
mov
pop
fnstenv
fisubrl
dec
cwtl
cltd
lock
mov
clc
push
pop
popf
add
inc
das
cmc
jne
pop
aam
rorb
inc
fcmovnbe
jbe
or
xor
xchg
or
lds
mov
enter
aad
loope
dec
mov
or
sbbl
xor
rorl
xchg
nop
enter
rolb
sbb
pop
notl
cmp
mov
push
addl
loope
aaa
and
fldenv
pop
loopne
fnstcw
pop
push
or
insb
push
mov
sbb
subb
imul
dec
cmp
pop
push
dec
insl
inc
mov
mov
inc
mov
inc
pop
popa
shrl
mov
dec
arpl
ja
xor
sbb
adc
into
xchg
or
mov
fldl
insl
test
and
pop
cmpsb
sahf
dec
jnp
or
out
sbb
push
lret
jnp
ret
mov
dec
sub
mov
cltd
dec
xor
inc
testb
push
mov
shll
cmc
test
push
mov
push
js
adc
out
mov
addr16
sbb
leave
movsb
sahf
mov
xchg
ds
test
and
mov
stc
mov
mov
adc
push
jne
mov
jo
fcomip
jl
std
data16
sub
jne
mov
shll
xchg
stc
mov
jl
iret
aaa
popf
inc
mov
orl
add
out
movsb
inc
and
je
mov
or
inc
rclb
fistps
jge
es
mov
jge
gs
push
stos
pop
and
dec
add
xor
sub
mov
xchg
add
les
mov
xor
xor
fs
mov
mov
lret
call
enter
lcall
int3
or
xor
stos
lret
inc
addl
enter
mov
call
pop
jnp
pop
sub
sti
and
xchg
xchg
jnp
cmp
inc
or
cmp
decb
jecxz
clc
jbe
fmul
add
aaa
inc
jns
adc
xchg
cmp
stos
mov
fdiv
or
ljmp
icebp
mov
and
dec
ljmp
jo
aam
lahf
dec
mov
fistpll
aam
jne
popf
ljmp
shl
ja
push
mov
push
xor
ss
or
popl
aam
sahf
bound
imul
adc
jle
mov
fucomi
mov
xor
mov
mov
pop
sub
xchg
call
inc
mov
xor
pushf
or
popl
ja
sbb
adc
xchg
gs
int3
adc
and
inc
inc
xchg
cmp
add
inc
repz
push
iret
adc
xchg
addr16
adc
mov
testl
and
insl
imul
adc
ds
mov
xor
pusha
jge
inc
dec
movsb
pushf
lods
in
dec
xchg
repnz
or
icebp
popl
sub
rclb
sub
mov
sti
xlat
ss
popf
aam
add
loopne
xchg
iret
int3
mov
push
xor
dec
jbe
cltd
lret
outsl
pop
sub
xchg
sub
sahf
nop
mov
mov
insb
cmp
fstpt
mov
mov
fmuls
je
cwtl
pusha
pop
inc
mov
enter
pop
fidivs
lret
inc
in
stos
xchg
js
adc
adc
adcb
js
or
push
shl
out
xchg
ja
aad
push
dec
sbb
push
lret
ljmp
js
adc
xor
push
aam
bound
or
ja
notl
adc
fwait
push
fwait
xchg
sub
fldln2
lock
xchg
lcall
add
faddl
das
push
notb
adc
popa
inc
sti
mov
and
pop
push
inc
xor
dec
clc
ds
shll
stc
xchg
mov
andl
ds
sti
push
mov
call
xchg
jns
fwait
sbb
bound
xor
or
adc
xor
jmp
lock
jo
fisubrl
cmpsb
out
ficompl
sarb
mov
fs
jns
sbb
push
adc
mov
push
or
fwait
xlat
lret
add
push
add
or
and
hlt
pop
dec
mov
fisubl
jns
xor
js
push
sahf
sub
movsl
mov
ljmp
lret
lret
mov
lcall
sbb
repnz
sub
adc
cpuid
cmp
sub
pop
mov
add
in
cmp
pop
jmp
jle
movb
insl
imul
xchg
and
stc
inc
pop
ss
imull
jle
inc
mov
scas
jle
jbe
rolb
adcb
pop
adc
and
js
out
push
jb
adc
rcrb
push
iret
xchg
test
push
and
idivl
and
pop
cmpsb
aas
mov
ss
push
stos
pushf
jne
outsb
jp
cmpsl
sbb
jnp
test
and
ja
andb
mov
and
sahf
imul
jns
adcb
inc
sti
gs
sub
insb
xor
sbb
or
push
cmpsl
pop
push
mov
push
out
addr16
mov
dec
pop
add
loope
dec
inc
dec
push
fsts
imul
loop
mov
xchg
add
push
inc
sub
movsb
mov
xchg
pop
inc
push
hlt
mov
addr16
fbstp
arpl
xchg
hlt
aas
iret
daa
sub
js
dec
jns
shll
jl
pop
mov
and
dec
mov
mov
or
adc
repnz
sarl
inc
or
add
jo
stos
jmp
pop
sbb
stc
addr16
pop
push
sbb
rol
dec
push
inc
pop
divb
adc
xlat
pop
pop
pop
add
in
sar
andw
int3
icebp
fdivl
icebp
mov
in
mov
int
dec
push
cmpb
inc
aad
pushf
mov
sub
mov
sarl
repnz
call
repnz
stos
pop
sub
leave
mov
inc
ja
lods
mov
jns
or
dec
out
stos
ret
sti
push
dec
and
push
sub
inc
xchg
adc
dec
jle
movsb
loopne
push
movsb
popa
adc
mov
roll
add
out
sbb
or
or
xor
je
sti
push
aaa
mov
pop
fisttps
in
stc
repz
add
adc
and
testl
jno
inc
xchg
mov
xchg
sbb
inc
or
fidivl
sub
push
jne
pop
add
add
jg
movsb
pop
ret
jbe
push
sub
das
jl
sahf
ds
ret
popf
inc
rolb
fwait
mov
out
xor
rcll
nop
cmp
pop
adc
pop
cmp
mov
sub
in
out
mov
dec
and
testl
std
stc
das
pop
aaa
mov
cli
xor
fwait
mov
ficompl
pop
das
fs
add
fwait
pop
push
mov
test
push
adc
jg
inc
out
jb
xor
cli
es
into
je
sub
sbb
idivb
mov
aam
and
in
mov
mov
js
lea
cmp
add
lods
mov
and
xlat
lahf
push
repnz
mov
mov
cmpsb
mov
xchg
es
mov
mov
push
cmc
mov
out
arpl
xlat
add
mov
outsb
add
push
test
es
and
jg
jmp
gs
sti
frstpm(287
idivl
mov
rcl
and
das
inc
pushf
add
enter
lahf
jb
lods
js
ds
sub
nop
addb
jae
push
mov
push
jno
dec
xor
popa
and
lret
pop
aam
test
jbe
or
jp
add
fldl
ds
mov
cli
arpl
nop
sbb
fsubrs
in
or
pop
icebp
out
popl
mov
push
or
xor
push
pop
push
lret
rol
pop
scas
es
das
cmpsb
arpl
sbb
mov
sbb
adc
test
aaa
mov
jb
jns
in
xchg
add
aam
push
test
rcll
or
sbb
imul
sarb
push
test
shll
mov
decl
cmc
xlat
out
mov
push
js
xchg
pop
push
mov
xchg
cld
shl
enter
or
or
sbb
mov
pop
or
jb
mov
mov
adc
es
rcrb
xchg
mov
push
push
jb
mov
lret
xor
sbb
iret
sti
mov
inc
xchg
insb
or
icebp
in
mov
std
imul
popf
xchg
sarb
fnsave
in
pop
imul
mov
push
jbe
sbb
inc
dec
outsb
dec
push
mov
xlat
inc
stos
add
outsl
dec
cli
sub
add
sbb
pop
arpl
inc
hlt
fdivrs
ss
int3
push
fnstenv
gs
add
out
daa
stos
arpl
push
jae
les
add
cwtl
mov
sub
outsl
jb
outsl
mov
and
mov
int3
dec
out
cld
int
push
lret
stc
dec
or
jmp
fcompl
mov
loop
jne
cwtl
sbb
gs
pop
fimuls
jb
dec
stos
fs
sub
inc
push
mov
loop
es
cli
jp
sub
mov
inc
test
dec
insl
jmp
insb
cmp
xchg
and
mov
pop
test
xchg
inc
fistps
cli
ret
ret
dec
and
and
loop
or
in
push
loopne
inc
xchg
sub
xor
sub
xchg
cmpsb
inc
jge
inc
notb
xlat
adc
pushl
aam
nop
xchg
sbb
jo
xchg
push
std
mov
mov
pusha
pop
ret
push
mov
in
scas
add
fs
xchg
adc
and
cmp
and
out
inc
fcoml
or
mov
mov
outsl
sbb
imul
enter
mov
sarl
inc
push
cmpb
pusha
adc
shl
mov
mov
mov
sub
sbb
and
pop
pop
and
pushf
aaa
jb
lock
sbb
mov
cmp
adc
cmp
pop
xor
insl
add
call
cld
xchg
sti
mov
stos
divl
sbb
xchg
out
clc
call
add
out
jae
fidivrs
xchg
data16
xchg
xor
popa
lea
loopne
pand
sbb
cmpsl
inc
mov
in
aam
movsl
push
stos
adc
je
cli
cmp
push
dec
ss
mul
mov
stos
xchg
push
mov
inc
pop
pop
sub
fsubs
repnz
mov
mov
lods
leave
outsb
mov
sub
out
xor
ret
or
aaa
adc
lods
mov
push
out
cmpsb
pushf
pop
pop
stos
mov
and
out
fdivr
or
inc
in
sbb
xchg
cld
ret
js
pop
je
movsl
gs
outsl
dec
mov
pop
and
adc
daa
cmp
mov
nop
inc
sbbb
dec
pop
insl
daa
mov
pop
push
mov
jno
mov
xchg
ret
jp
mov
inc
stos
push
sub
push
test
adc
test
mov
pop
clc
out
shlb
enter
dec
sbb
dec
mov
test
aas
lret
mov
fildll
outsb
arpl
es
mov
ljmp
push
dec
sub
bound
or
mov
mov
mov
test
dec
stc
or
jmp
icebp
and
ds
out
adc
fadds
cwtl
je
push
pop
addl
lcall
fisttpl
leave
push
cmp
sub
mulps
stc
outsb
push
sbb
adc
inc
push
inc
loopne
bound
cld
mov
sub
idiv
pushf
inc
js
dec
jbe
xchg
mov
lods
popf
in
scas
daa
pop
mov
loopne
adc
movsl
mov
repnz
pop
sbbb
lahf
mov
cmpsb
push
pop
pop
outsb
roll
mov
mov
mov
rcll
push
icebp
stos
aad
cmp
mov
addb
scas
pop
adc
int
xlat
mov
jb
pusha
mov
xchg
dec
and
jecxz
data16
push
fwait
cmp
cmp
insl
xchg
mov
lahf
fdivrs
popa
int3
pusha
clc
add
mov
rorl
sbb
push
fimull
fs
lods
outsb
test
mov
je
mov
dec
jo
rcrb
imul
fisubl
xorl
jge
add
stos
in
cmp
pushf
loope
lea
scas
pop
xor
mov
out
rcl
gs
pop
cmp
xchg
jl
popa
mov
mull
adc
xor
shlb
and
pop
fcoml
xor
jne
pop
sub
idivb
xorl
sbb
dec
xor
aam
mov
inc
bound
jns
in
or
inc
cmpb
cmc
sbb
loope
daa
es
push
aas
sahf
pushf
push
dec
adc
mov
pop
and
dec
sbb
adc
inc
decl
popa
sbb
cld
incb
xchg
jb
lahf
cmp
outsl
sbb
lret
mov
mov
int
and
lret
aad
xlat
xor
mov
adc
icebp
xchg
inc
sub
sbb
je
sbb
sahf
repz
push
iret
repnz
push
inc
lock
dec
daa
aas
dec
bound
sbb
push
jecxz
xor
xchg
xchg
add
divb
shl
inc
dec
arpl
inc
and
mov
cmpsl
xor
inc
scas
sub
outsb
jge
fdivrs
sub
mov
push
mov
inc
mov
std
xor
clc
jb
and
in
sbb
sub
and
ret
jp
jecxz
cli
int
ja
fidivs
out
ja
js
out
xchg
insb
xor
sarb
mov
inc
add
pop
inc
fildll
mov
push
adc
leave
out
adc
pop
dec
lret
xchg
push
popa
addl
enter
movsb
nop
inc
mov
pop
pop
push
lods
or
push
nop
adc
sub
push
out
and
adc
push
mov
push
inc
and
leave
push
std
lea
test
lock
push
and
jg
imul
pusha
out
fwait
clc
pop
inc
enter
out
push
mov
int3
sti
and
sbb
das
repz
push
adc
repnz
cmp
mov
fcomps
sahf
fdivrs
or
sbb
int
stc
mov
or
dec
pop
loopne
xor
jmp
xchg
add
sub
iret
or
sahf
lods
pop
or
cmc
test
xchg
mov
sbb
imul
jb
xor
add
dec
roll
sub
mov
lds
lds
cmpsb
aam
fldt
or
push
imul
and
xor
mov
gs
scas
sahf
or
pop
std
xchg
add
and
outsb
arpl
mull
or
sbbl
lahf
lock
adc
arpl
push
es
jb
scas
jb
scas
test
out
mov
push
shlb
cli
jge
movsb
pop
adc
xchg
dec
jle
or
ss
fwait
push
add
sub
jns
movsl
mov
mov
outsb
je
xchg
fwait
push
mov
jb,pt
fsubs
negl
jle
pop
inc
jnp
dec
mov
int3
and
sub
adc
and
xor
adc
das
in
adc
pop
mov
jle
pop
jae
les
lea
mov
in
insl
hlt
add
and
sbb
arpl
push
mov
lods
mov
filds
add
xchg
pop
sbb
pmaxsw
out
or
xchg
pop
lock
and
cltd
dec
leave
mov
or
xchg
or
dec
stc
cmpsl
out
pushf
or
mov
and
mov
jle
mov
js
mov
cmpl
xlat
orl
xlat
iret
or
lret
hlt
mov
shlb
jno
xchg
xchg
or
push
or
jb
cld
mov
pop
mov
cmp
shll
rcrl
adc
pop
jle
jnp
cmp
push
ljmp
fstpl
adc
notb
push
sbb
pusha
lock
mov
mov
loope
inc
test
fimuls
daa
mov
jg
fwait
xchg
lret
pcmpeqb
sti
xor
test
fimuls
cli
add
notb
mov
shlb
imul
xchg
cmp
into
jecxz
sub
cmc
lock
inc
mov
mov
push
pop
jmp
data16
mov
movsb
inc
into
inc
mov
push
test
mov
mov
popf
sub
out
inc
into
std
cwtl
adc
sbb
sub
loopne
sbb
into
mov
loopne
out
pusha
xor
jae
in
inc
pop
jbe
dec
push
mov
sbb
cmp
bnd
fldl
mov
xor
test
test
cmpsl
mov
ljmp
inc
sbb
shlb
sub
aad
mov
ret
je,pn
pop
lea
test
into
mov
lgs
sub
xor
shlb
movb
jne
lods
movsl
pushl
push
ficomps
sub
and
popf
cld
pop
cli
add
mov
inc
movsb
adc
add
sbb
push
stc
test
adc
fists
dec
pop
mov
aaa
jo
cmp
mov
scas
out
stc
adc
inc
sti
xchg
addr16
mov
and
cmp
dec
sub
gs
jl
iret
sbb
stos
and
pop
mov
orb
icebp
imul
cld
lods
jle
cld
or
sbb
cs
and
subl
rorb
sbb
stos
nop
mov
out
das
rol
loop
mov
movsl
fistps
jno
faddl
test
add
add
cs
pop
cmp
dec
mov
enter
enter
push
push
mov
inc
mov
mov
je
pop
xlat
fsubs
push
pop
lods
test
pusha
push
insb
jp
mov
mov
jne
add
push
loop
es
or
mov
lods
push
loopne
cmpsb
aam
inc
sbb
scas
int3
cli
movsb
mov
jnp
jecxz
dec
in
or
inc
hlt
and
mov
fwait
loope
mov
jge
sub
xchg
pop
or
jae
xorl
add
and
cmpl
sbb
push
add
xchg
dec
in
xchg
cld
mov
sub
xchg
sub
popf
sub
stos
loope
rcll
xchg
lret
push
shll
idivb
repnz
mov
hlt
push
add
sti
mov
inc
pop
pop
shrl
xchg
int3
cli
mov
dec
add
ljmp
sbb
aam
enter
loope
xor
test
loope,pn
imul
clc
inc
jne
add
sbb
stc
dec
mov
ja
mov
movsl
inc
aad
out
ss
lock
sub
cld
sub
xchg
add
testb
mov
jmp
addr16
xor
add
mov
push
inc
insb
fisubrs
fs
pop
out
rol
xor
lcall
iret
and
mov
cmp
ja
movsb
lret
mov
out
jg
faddl
and
cwtl
and
jb
addr16
xchg
or
xchg
sbb
push
sar
sub
cmp
pop
mov
sub
or
mov
jns
lock
push
into
fdivp
ds
jno
test
pop
scas
pusha
inc
outsl
imul
mov
cmp
lods
in
jle
inc
repnz
test
pop
aad
inc
xlat
mov
out
and
clc
stos
mov
std
xor
loope
loopne
inc
fbstp
dec
pop
add
or
sub
arpl
sahf
fmull
and
sbb
dec
mov
jmp
pop
mov
shll
jno
jnp
lahf
repz
dec
repnz
cmp
or
out
mov
xchg
adc
vpermd
out
sub
xchg
sub
es
outsl
cmp
jo
cs
xchg
inc
popf
lods
mov
std
iret
and
popa
loop
xchg
push
adc
in
out
xchg
cli
adc
clc
xor
cs
push
test
inc
jge
inc
mov
mov
sahf
mov
les
adc
lods
jno
insl
jmp
rcr
lods
ret
imul
xchg
inc
or
das
test
repnz
repz
mov
mov
dec
lret
popf
popf
test
jo
push
jno
mov
inc
fcoml
mov
mov
dec
mov
shrl
test
add
jg
cmp
mov
xor
sub
jns
es
mov
fadds
and
mov
cmc
insb
xchg
repz
push
sub
inc
xchg
scas
or
mov
sub
pop
and
je
cmp
jl
in
xor
mov
cmp
sti
scas
jb
ret
push
aam
fdivrl
fldcw
pop
push
test
or
or
sbb
inc
jle
shlb
btc
into
mov
jo
int
incb
lock
dec
lcall
mov
stos
int3
add
sub
jmp
fimuls
lods
popa
rolb
divl
push
aad
dec
mov
jl
rcrb
cmp
xor
xchg
mov
mov
mov
mov
and
jnp
xor
jae
dec
or
inc
je
dec
push
lea
push
sbb
test
mov
and
mov
xchg
sbb
in
pop
xchg
push
andl
movsb
adc
sbb
cs
xchg
scas
sub
cmp
push
je
mov
mov
sbb
jg
stos
iret
fsts
mov
mov
xchg
xchg
fadds
and
ret
xchg
jmp
cmp
or
addr16
or
sbb
add
icebp
out
xor
stos
insl
xchg
and
dec
sub
rcrb
in
add
cmp
pop
shlb
pop
dec
in
popa
lret
iret
push
cmp
outsl
rolb
into
sub
cli
lcall
push
jmp
pop
sbbw
hlt
test
adc
jb
popa
loop
adc
add
mov
and
or
sarb
adc
sbb
inc
sub
jg
push
out
mov
jne
pop
shlb
ret
mov
out
xor
push
inc
inc
stos
lret
jo
adc
sarb
inc
pop
imul
push
cmp
xchg
cmc
cld
ret
mov
dec
or
rclb
jbe
or
shll
aas
test
outsl
std
popl
mov
cmp
xlat
add
pop
je
pop
cmpsb
out
divl
out
sub
add
ret
and
jne
mov
pop
inc
jge
inc
mov
mov
adc
add
cmp
sbb
pop
sbb
and
inc
mov
imul
xor
and
cmp
inc
addb
mov
mov
adc
sbb
or
add
cmc
sub
sbb
jg
cmp
les
wbinvd
les
andl
mov
daa
push
fs
jbe
inc
mov
imul
ljmp
nop
jae
outsb
imulb
adc
popf
addl
cmp
leave
movsb
scas
jnp
xchg
test
fistps
pushf
push
xor
sbb
pop
test
out
cwtl
add
cmp
ds
aam
jmp
pop
shrl
pop
das
es
pop
hlt
mov
or
sub
add
xlat
inc
jge
dec
jo
push
js
aam
gs
jno
flds
jmp
pop
lahf
movsl
pop
in
in
into
pusha
pop
fsubs
dec
aad
mov
cmp
in
stos
dec
lds
xlat
push
movsl
push
insl
and
sub
cmp
dec
stc
mov
int
out
jmp
push
lds
push
int3
or
xor
jae
popf
jns
push
nop
call
pop
es
fwait
sbb
bound
sahf
push
mov
jmp
out
xchg
fldt
jmp
mov
bound
loop
cmc
ss
out
and
data16
aam
jo
sub
add
test
add
pop
jge
mov
adc
inc
cltd
rol
movsb
lcall
push
fimuls
dec
inc
dec
xor
or
cwtl
add
cmp
and
pop
jne
ljmp
rcrl
inc
sub
ds
xchg
inc
mov
out
pop
xor
inc
movsb
xchg
lret
out
dec
shrb
cld
lds
lea
hlt
ret
dec
mov
in
orl
insb
or
xchg
cli
or
adc
mov
add
out
sub
addl
mov
aad
fmull
push
xlat
cmp
cwtl
mov
mov
lods
nop
mov
jnp
div
sub
repz
mov
shlb
loopne
sbb
inc
push
testl
popf
lret
iret
sti
mov
fisubrl
mov
add
insl
pop
leave
mov
pop
cwtl
shl
fbstp
push
cmpb
pop
movsb
or
pop
sbb
pop
mov
inc
cltd
lods
lcall
and
mov
ja
push
or
aad
in
xchg
loopne
loop
mov
iret
mov
add
push
mov
pop
sub
dec
cmpsl
subb
leave
xchg
and
das
pop
add
sbb
aam
sti
sbb
push
nop
or
dec
dec
xorl
sub
cmp
icebp
sbb
not
ss
test
jo
jno
jnp
and
mov
lods
nop
imul
fnstcw
sahf
ret
adc
clc
sysenter
outsl
jg
push
push
or
push
jo
js
pop
mov
sub
sbb
push
shrb
jle
aas
shr
adc
xor
sti
les
arpl
push
lahf
or
adcl
test
jmp
sub
aas
sub
lret
dec
inc
mov
movsl
mov
xor
jmp
mov
in
daa
mov
jmp
pusha
push
fdivl
cli
adc
stos
test
adc
mov
rol
or
out
iret
lret
scas
or
in
mov
mov
shl
rcr
repnz
xor
xor
loop
inc
cmc
movsl
lret
std
pop
pop
mov
pusha
bound
inc
movsb
into
xor
or
fmul
mov
mov
fnstenv
pusha
xchg
lea
dec
popfw
sub
push
aam
pop
lret
pop
mov
mov
sbb
rcrl
cmp
add
jbe
or
emms
jne
mov
sbb
mov
in
cmp
inc
xor
test
in
inc
pop
inc
push
fcompl
adc
movsb
ds
xor
scas
stc
test
sti
jne
ds
push
aas
shlb
stos
cmp
pop
jmp
adc
pop
or
jle
mul
adc
fwait
fimuls
lock
in
adc
ss
outsb
hlt
push
sub
mov
inc
fimuls
mov
lds
sbb
flds
adc
cmp
mov
xchg
ss
ret
inc
scas
or
in
ret
mov
mov
pop
cmpsl
cmpsb
adc
lods
jne
sub
dec
sbb
orl
jo
xlat
cmp
xchg
mov
pop
cmp
cmpb
stc
popa
fcoms
or
out
sti
lea
aaa
test
push
xor
aam
inc
jne
cwtl
mov
inc
ss
sub
inc
cld
and
ds
add
ret
push
mov
clc
pusha
cmc
adc
adc
call
jg
std
sub
pop
dec
push
frstor
stos
adc
jns
adc
lea
jae
icebp
pushf
and
mov
xchg
inc
js
hlt
jno
scas
ret
call
mov
loope
xor
aad
popf
xchg
cmp
mov
push
fcmovu
mov
xor
add
test
add
push
mov
push
mov
mov
sub
adc
ret
gs
addr16
push
add
mov
push
adc
push
lds
and
in
aad
or
inc
adc
out
clc
inc
jmp
push
pop
xor
jge
pop
icebp
lahf
test
dec
loop
mov
sbb
imul
sarl
xor
inc
test
fisubrl
cmp
movsl
js
fsubr
movsl
ss
cmp
cld
mov
ja
mov
cmp
loopne
aam
stc
push
jg
adc
jp
inc
inc
jne
mov
cmp
addl
or
xor
pop
cmp
sbb
lods
ffree
sarb
mov
push
popa
jbe,pn
push
xor
jmp
ret
sub
push
push
std
xchg
adc
repnz
push
add
mov
push
cmp
adc
cmp
adc
push
inc
add
xchg
pop
into
or
movsl
out
pop
cmp
lret
mov
movsl
mov
lret
cltd
testl
add
push
and
mov
scas
arpl
inc
jno
mov
push
cmp
aam
movb
jae
lock
xor
push
fistpll
movb
add
leave
or
rep
jne
mov
adc
lds
outsl
das
jnp
mov
xor
inc
icebp
enter
sub
inc
pop
std
xor
lret
pop
cwtl
stos
xor
adc
ljmp
popf
dec
jns,pn
xor
mov
icebp
scas
std
mov
lret
pop
dec
pop
jge
sub
inc
fwait
movsb
cmp
mov
cmpsl
repnz
fsts
shl
mov
inc
out
push
mov
and
nop
movsl
mov
xor
pop
jmp
fbstp
shrl
mov
ret
sbb
lea
jmp
cmp
cwtl
int3
int3
push
dec
or
imul
loope
adc
or
add
xchg
aam
insl
mov
pushf
in
jae
or
adcb
int
inc
fiadds
cs
int
test
add
xor
sbb
mov
pusha
and
fsubl
insl
and
push
or
xlat
push
or
mov
lahf
mov
mov
cltd
cmp
loop
mul
push
rorl
leave
test
es
jl
movb
adc
std
inc
sti
pop
repnz
mov
pop
add
push
cmpsb
shll
xor
bound
sub
pop
inc
jns
cmpsb
out
add
mov
or
jecxz
ret
mov
push
dec
push
mov
pop
mov
in
cmp
xor
push
lcall
inc
fisubrl
adc
repnz
test
fsubrs
fistpl
jno
pop
mov
push
xchg
inc
pop
sbb
mov
mov
popf
xor
push
jbe
jne
cmpsb
jae
dec
in
inc
aaa
add
push
mov
je
dec
ret
push
aad
icebp
imul
push
stos
jno
popf
test
inc
leave
mov
insb
inc
lahf
arpl
mov
lock
adc
mov
into
jno
js
insl
aam
cmp
les
push
add
sar
repz
dec
into
imul
dec
cmpsl
mov
sbb
jp
insb
mov
bound
data16
dec
mov
push
inc
mov
or
lods
movsb
lods
into
arpl
jnp
add
je
inc
dec
add
inc
sbb
inc
lds
mov
mov
pop
and
insl
stos
loopne
repnz
jg
sti
and
push
clc
xor
inc
iret
mov
fs
pop
add
cli
into
sbb
lret
movsb
mov
jne
int
mov
iret
adc
aaa
xchg
nop
sbb
jb
jge
dec
repz
xchg
pop
push
out
repz
sbb
add
jb
enter
lretw
push
mov
jae
and
add
mov
pop
push
arpl
and
out
inc
cwtl
push
ss
cmp
subl
mov
sti
lahf
adc
xchg
inc
inc
add
add
inc
jae
adc
push
sub
xor
lret
or
fdivrp
or
ja
mul
test
jne
push
popa
mov
icebp
and
ja
icebp
addr16
and
mov
dec
mov
cmpsb
rcll
int
mov
outsl
cld
lock
jae
pop
call
ja
xchg
push
hlt
cmp
mov
inc
sub
gs
pop
xchg
jge
imul
lahf
and
jge
rcrl
cmpsl
ljmp
lock
lcall
inc
and
xchg
imulb
and
jae
cmpb
jle
pop
fisubrl
fnstenv
stc
pop
js
hlt
mov
mov
pop
adc
inc
daa
jl
pop
sbbl
mov
mov
faddl
jmp
cli
xchg
mov
pop
jo
repnz
jns
nop
add
jnp
sbb
lret
loope
add
insl
fdivs
movb
mov
in
rorb
push
shlb
or
mov
sbb
adc
daa
loopne
and
pop
adc
or
xchg
xlat
xchg
pop
jecxz
mov
push
xchg
mov
mov
and
lods
addl
popa
mov
sub
aas
adc
or
sub
out
lret
gs
inc
mov
cs
mov
mov
push
sbb
fs
test
int3
popa
sti
fiaddl
push
dec
shl
mov
mov
mov
dec
loopne
pop
vcvtss2sd
fs
mov
pusha
cwtl
ss
push
loope
xchg
ljmp
fdivrs
xchg
lcall
mov
sbb
jo
jno
xchg
dec
scas
or
jo
rolb
pop
cmpsl
adc
xchg
enter
xchg
or
xchg
adc
aam
out
sbb
mov
ljmp
xor
dec
jne
push
xorb
fdivl
fidivrl
or
adc
icebp
cltd
stos
outsl
sar
aad
in
lds
mov
dec
cmp
push
lahf
push
inc
sbbl
xlat
std
cmp
in
lahf
adc
lods
arpl
cwtl
inc
jnp
push
jp
cli
jns
cwtl
out
ds
sbb
mov
mov
movsb
cmp
cmp
mov
pusha
xchg
inc
dec
dec
add
push
or
push
cmp
add
jl
test
sahf
ljmp
add
pop
sbb
dec
sbb
sbb
cld
push
repz
add
lods
mov
jecxz
gs
dec
sub
adc
jg
fsts
lods
sub
stos
daa
repnz
insb
xlat
adc
in
jo
dec
call
fsubrl
aam
jne
dec
mull
lds
rep
rclb
mov
scas
in
test
aas
push
sbb
shrb
mov
pop
xchg
clc
das
xor
pop
lret
mov
lds
jne
cmc
dec
mov
cmp
scas
and
pop
imul
test
fdivrp
sub
fiadds
popf
loop
dec
cmpsb
jnp
add
sarb
dec
add
fsubrp
in
mov
dec
sbb
ds
ja
outsl
adc
and
fisttpl
mov
xor
adc
pop
jecxz
add
or
and
bound
rorb
popw
outsl
fcmovu
mov
add
xor
aas
inc
pop
jge
xor
pop
ja
and
push
sub
test
inc
pop
cmp
adc
jl
cld
cwtl
lea
sti
cli
push
mov
or
stos
push
jg
mov
test
and
xor
inc
cmc
push
cmp
loope
mov
or
pusha
and
and
inc
xor
aas
mov
or
test
repnz
add
popa
fstpt
enter
ja
out
or
adcl
divb
and
pushf
mov
dec
movb
mov
lret
ret
jno
jo
and
push
hlt
inc
mov
adc
call
sbb
cmp
sbb
sti
xor
cld
sahf
xor
xchg
or
sbb
subl
jmp
jns
ret
pop
adc
stos
xor
scas
shl
jno
dec
cli
call
adc
xchg
push
out
jmp
push
test
out
imul
imul
and
cmp
xor
leave
out
sbb
or
clc
shl
daa
popf
cmp
mov
xchg
pop
mov
nop
fdivrs
mov
xchg
cmpb
sub
cs
jb
and
or
movsl
test
divb
or
adc
and
loopne
sbbb
cs
mov
lea
stos
stc
iret
inc
outsb
jge
mov
mov
jmp
pop
fcomi
lret
xchg
sbb
and
inc
aas
and
std
je
pushf
push
cmp
inc
lcall
add
scas
xchg
int3
jle
jne
xchg
pop
mov
ss
in
in
mov
or
lcall
mov
and
and
daa
jbe
aaa
fwait
mov
add
test
cmc
jle
pop
dec
stos
mov
sub
mov
imul
mov
pop
data16
mov
lahf
out
xchg
push
shl
js
repz
lods
movlps
test
push
or
popa
and
inc
outsb
shll
mov
lret
or
movsb
mov
and
sahf
pop
rcll
cmpl
sbb
push
and
cmpsl
inc
int3
lock
cltd
push
fstps
push
icebp
jno
ds
mov
shlb
xchg
pop
cs
out
sbb
cmc
in
dec
mov
and
jge
pusha
fcomps
out
rcr
mov
and
xchg
jne
jp
aam
lret
cwtl
jb
jno
outsl
cmovnp
es
addr16
add
lods
cmp
clc
cmp
mov
daa
nop
jb
pusha
mov
mov
sub
scas
mov
aas
add
mov
aad
call
fcomi
inc
scas
lods
pop
in
sub
cmc
or
add
inc
add
push
lds
mov
shr
mov
jno
inc
xor
jge
push
pop
cmp
push
sub
cmp
sub
or
push
xor
decl
repnz
sbb
stc
imul
mov
jg
lahf
call
pop
push
dec
fs
data16
xchg
repz
sub
and
cltd
sub
cmp
jb
stos
push
mov
mov
sub
cmpsl
fnsetpm(287
push
jg
mov
inc
out
adcl
and
dec
pushl
les
cli
jecxz
movsb
jnp
push
mov
aas
and
jp
dec
iret
xchg
push
cli
jae
test
xchg
inc
int
adc
stos
fcoms
add
pop
ficomps
mov
lock
and
imul
add
jecxz
movsb
sub
imul
and
pop
and
inc
js
push
loope
shl
cs
adc
cmc
cmp
mov
mov
imul
dec
imul
prefetch
sub
push
loope
test
popa
add
cwtl
dec
fwait
test
daa
push
pop
pop
xchg
and
inc
inc
pop
mov
aas
add
xchg
test
xchg
push
dec
jnp
sbb
mov
jnp
fcoml
pop
mov
lock
loope
mov
or
jl
into
enter
sbb
cmc
add
jl
adc
out
jno
adc
push
xchg
lret
pop
mov
adc
test
push
sarb
shr
mov
and
pushf
fldcw
inc
mov
insl
call
xor
mov
mov
pop
test
test
mov
flds
adc
jmp
pop
sbb
cmpsl
mov
fcmovu
fsub
or
hlt
mov
test
rcll
push
push
in
xchg
inc
mov
adc
add
cmc
in
ja
adc
cmp
std
lahf
fadds
scas
jl
adc
cmp
jecxz
out
mov
xor
arpl
stos
dec
cmp
lods
and
imul
insl
adc
adc
into
and
pmaddwd
inc
and
cmp
jne
jo
jae
cld
lds
push
enter
inc
xchg
lret
jnp
fidivs
movsl
push
push
movsl
xchg
leave
js
filds
fwait
cmp
lret
push
dec
repz
jge
out
xor
inc
xchg
sbb
lock
xor
pop
sbb
outsl
or
repnz
cli
insb
mov
adc
enter
and
cmpsb
lds
enter
adc
iret
add
divb
imul
cmp
fwait
xor
xor
fstl
add
sbb
inc
xor
sbb
repnz
lds
push
sti
push
mov
xor
int3
sarl
xchg
xlat
xchg
mov
bound
and
add
rclb
jle
lcall
inc
sbb
repz
lcall
add
cmpsb
jae
push
push
addr16
mov
cmpsl
aad
in
mov
mov
dec
iret
sbb
mov
cld
inc
push
inc
add
cmp
clc
jo
lock
out
js
mov
lods
daa
popa
in
loop
push
xor
cmpsl
insl
out
pop
dec
jl
xor
lret
aam
inc
ret
fcomp
lds
out
bound
xchg
icebp
pop
cmpsb
cmp
call
je
stc
lret
ljmp
aam
sbb
mov
lahf
scas
sub
lahf
aaa
jno
pop
jl
rcrl
or
je
leave
ficompl
jmp
inc
jle
out
mov
mov
mov
jne
push
lcall
push
out
daa
ret
leave
mov
jl
inc
lcall
cmp
inc
cld
loop
or
icebp
pop
popf
test
jp
hlt
sub
mov
das
in
jae
add
and
jne
in
and
out
cmp
loop
cltd
popa
faddl
xor
dec
mov
or
pop
push
or
inc
int3
std
mov
hlt
out
dec
pop
scas
or
hlt
mov
fsts
push
xor
sbb
cmp
hlt
xor
test
cmc
pop
pop
add
push
shl
je
mov
inc
ljmp
fsubp
jo
push
dec
scas
loop
or
out
stos
cltd
push
jmp
bound
add
out
imul
add
subl
or
push
mov
scas
shlb
add
enter
and
cld
lock
cmp
push
dec
gs
xor
fadds
bound
lret
fwait
enter
jne
call
test
in
clc
mov
xchg
cwtd
sbb
daa
fwait
mov
sub
imul
aam
mov
mov
lods
xor
jb
mov
movsl
movsl
fisubl
add
mov
dec
push
iret
insl
mov
mov
js
pusha
rcr
icebp
jae
dec
pop
dec
test
lea
sub
add
lret
push
test
ljmp
mov
dec
push
dec
sbb
pextrw
push
rolb
xchg
inc
lret
lret
jae
cmpsb
das
fsub
add
jmp
cmc
pop
cmp
dec
sbb
or
lcall
rorl
mov
rol
dec
repz
mov
xor
in
add
sarb
in
jnp
out
mov
aaa
lcall
or
mov
loope
sub
xor
frstor
sbb
adc
stc
adc
outsb
mov
mov
sbb
mov
scas
imul
loop
xchg
push
shll
test
fistl
or
iret
rcrb
xchg
fs
jg
mov
fs
cmpsl
lods
add
inc
test
dec
pop
inc
jle
dec
subl
das
xchg
pop
test
sub
push
mov
loop
mov
enter
cmc
jo
lods
cmp
jmp
and
test
pop
add
inc
lds
mov
fucom
pop
and
gs
jo
jb
fsubrs
jl
and
ret
add
leave
push
nop
cmp
mov
sub
inc
mov
movl
xchg
aas
dec
push
jnp
mov
mov
pop
xchg
and
xchg
ret
pop
mov
jl
iret
loopne
aaa
add
ss
hlt
dec
sbb
sub
push
test
add
rcrl
in
push
fisubs
fisttpl
js,pt
sbb
fsubs
inc
push
mov
mov
jne
xchg
cmp
bound
ss
mov
lds
sbb
repnz
ja
cmp
mov
push
mov
addr16
enter
jecxz
shrl
ret
test
inc
adc
or
pop
jecxz
jl
imul
in
inc
aas
dec
lahf
stos
jl
in
xchg
push
push
outsl
stos
mov
cltd
dec
cmpsl
aad
jnp
xor
dec
mov
enter
cmp
jle
scas
jecxz
cmp
or
pop
push
lcall
sbb
gs
pop
and
mov
pop
xchg
adc
pop
pop
aam
outsb
bound
push
pop
pop
sub
out
aam
les
lret
mov
jl
cmpsb
in
sub
out
or
dec
je
cwtl
or
jno
fs
push
enter
mov
insb
sti
xor
dec
jae
rclb
add
les
push
jg
fs
pop
push
xor
filds
sti
test
pop
jecxz
jmp
pop
divl
iret
imul
pop
cwtl
stos
push
and
ja
cmc
pop
clc
mov
and
scas
mov
and
iret
rcll
out
clc
xor
and
out
icebp
mov
fsubrl
pop
push
ss
testb
ss
testl
jge
cmp
pop
mov
sub
outsb
xchg
ret
push
ror
xorb
gs
cmc
push
in
addl
enter
add
mov
cmp
cmpsl
test
jmp
inc
stc
fadd
xchg
xor
in
sbb
imul
stos
pop
mov
andl
xchg
dec
mov
push
jg
mov
inc
popa
push
xor
mov
pusha
bound
lea
dec
shll
inc
mov
cmp
shr
shrl
pop
ret
mov
lods
inc
push
jge
fisubl
cld
mov
mov
fstpt
lock
and
mov
in
jg
xchg
aaa
lret
pop
xor
and
push
xor
adc
jno
inc
inc
fstps
enter
jo
cmp
pop
into
push
fdivrp
add
adc
mov
test
sub
jp
fisubrs
dec
sub
les
iret
shl
jae
sbb
jo
dec
fnstcw
lods
and
popf
mov
int3
pop
push
adc
inc
dec
pop
enter
pop
mov
push
out
lcall
cmp
mov
push
dec
pop
jg
xor
ja
test
jno
add
repnz
shrb
sub
fildll
leave
out
mov
scas
stos
inc
lcall
bound
mov
loope
lea
pop
push
jp
push
fsubrl
cmp
cmpsb
dec
imul
and
inc
dec
inc
gs
js
xchg
ds
aas
xor
pop
sarl
add
and
jno
arpl
sub
imul
mov
adc
add
ljmp
mov
lods
xor
lcall
lods
scas
les
push
mov
in
int
mov
jmp
jmp
inc
clc
sbb
scas
cmp
dec
cmp
das
adc
stc
sbb
cmc
out
jnp
in
leave
ss
sub
mov
mov
out
imul
outsb
int
sbb
jbe
or
repnz
icebp
cld
testb
pop
insl
sbbb
out
scas
icebp
dec
xchg
lods
insl
or
decb
cli
hlt
sub
cmc
in
mov
xor
and
cli
jnp
shrb
out
shrb
push
out
andb
add
movsb
sahf
daa
pop
cmp
or
push
cli
enter
notb
push
cmp
add
pusha
ljmp
int
xor
ficomps
in
mov
mov
ja
sbb
imul
jae
jmp
dec
fstpl
jl
jae
fsubr
sub
movsl
call
roll
aam
aad
cmp
ja
mov
fstpt
jns
sbb
js
push
mov
cmc
jl
in
push
inc
popf
sub
mov
xchg
ljmp
add
rcr
subb
je
mov
cmp
les
sub
inc
and
fwait
in
pop
test
ds
cmp
movsb
std
stc
pop
nopl
pop
add
out
inc
xor
inc
pop
cltd
inc
mov
ret
mov
aas
dec
fnstsw
cli
sub
rcr
push
test
jb
addr16
mov
jmp
decl
dec
mov
rclb
imul
push
sbb
push
or
dec
mov
sbb
ss
or
outsb
test
dec
leave
mov
mov
cmp
cmp
pushf
fisttpll
mov
ljmp
in
xchg
mov
out
cs
sub
inc
jne
push
fdivs
arpl
dec
sub
out
jle
adc
jo
add
push
cmp
popa
pop
call
in
xchg
jno
fstps
cmp
sub
xchg
fsubrl
scas
xchg
filds
in
loopne
xlat
movsb
xor
pop
scas
pop
orw
mov
dec
sub
std
dec
shll
add
shll
xchg
orb
sub
mov
pop
push
hlt
jp
jle
loope
pop
out
push
inc
shrl
and
test
jae
pop
ljmp
xchg
pop
push
les
jg
push
cmp
sbb
dec
std
repnz
sbb
scas
daa
cmp
out
or
pop
mov
mov
in
sub
push
sub
fsubr
leave
dec
in
push
xor
push
lret
in
mov
lock
les
mov
xor
int3
test
lock
pop
aad
add
xchg
xchg
cld
push
push
adc
lcall
cmpsb
push
xchg
int3
jl
popf
iret
inc
popf
in
adc
pop
pop
cmp
or
xchg
jp
cmpsl
in
lock
pusha
lea
adc
jnp
sbb
xchg
push
mov
fwait
mov
sub
xlat
data16
push
dec
gs
mov
sbb
xlat
mov
andb
aad
push
test
not
aas
sbb
add
sti
mov
or
and
inc
out
stos
add
adc
push
adc
shlb
rcr
arpl
sbb
shlb
mov
inc
inc
xchg
cmpsb
pop
jnp
cmp
push
add
push
add
mov
xor
xor
mov
jns
sbb
out
adc
shl
int3
das
or
push
pop
add
cmpb
ret
out
das
aam
mov
jae
mov
gs
dec
outsl
flds
sub
inc
mov
xchg
aas
fdivrs
fiadds
mov
fld1
gs
cmpsl
int
js
jmp
pop
cmc
dec
mov
mov
int3
mov
or
mov
es
lods
xchg
pop
call
into
fsts
mov
rclb
orb
fcmovb
push
mov
outsb
cmp
leave
paddq
push
inc
jmp
call
adcl
scas
jae
stos
fwait
pusha
sbb
iret
xor
das
fmul
ret
andb
sbb
or
mov
sub
inc
mov
mov
cmpsl
fcmovbe
lock
mov
loop
xlat
je
test
cmpsl
mov
or
ss
or
xchg
or
mov
popf
inc
sub
imul
cmc
bound
insb
imul
xlat
push
pop
test
das
xor
clc
push
cwtl
mov
shll
dec
sub
insb
push
inc
xchg
enter
xchg
in
shlb
or
imul
stos
add
mov
fdivrs
popf
pop
out
and
mov
push
sbb
bound
jl
xor
dec
stos
cmp
adc
pop
xchg
jno
sbb
int
mov
cmp
mov
mov
mov
test
dec
mov
sub
icebp
cmp
popf
insl
enter
gs
call
xor
int3
loopne
push
xchg
pop
pop
insl
loope
inc
jecxz
xchg
dec
add
fnstenv
sub
js
lahf
mov
std
mov
xchg
cmpsl
dec
push
xor
iret
fisubrs
fldt
icebp
imul
sub
push
aas
mov
sahf
pushf
mov
rolb
cmp
lret
test
xlat
jns
mov
std
xchg
and
rolb
dec
xor
sub
mov
push
add
cltd
pop
push
shrb
arpl
fildl
sahf
push
stos
movsl
stos
rorb
cmp
int3
movsb
insl
stos
imul
popf
sub
mov
mov
push
xchg
repnz
sub
inc
sti
addb
adc
in
jbe
and
xchg
mov
jne,pt
pop
inc
movsb
insl
in
jle
lods
subl
imul
jmp
adcl
inc
addr16
jecxz
mov
or
cmp
pop
and
mov
or
iret
iret
loopne
pop
dec
test
mov
int3
lret
lret
ret
push
adc
push
push
jns
cli
push
outsb
add
sarl
mov
jb
inc
movsb
clc
andl
push
xor
pop
mov
dec
xor
sub
mov
std
stos
mov
add
dec
test
push
cmp
in
fwait
add
mov
aad
mov
cmc
notl
lods
std
leave
inc
xlat
jne
sbb
daa
hlt
imul
test
push
jg
mov
cli
push
fidivrl
in
fisttpl
mov
stos
xorl
and
mov
stos
add
mov
cmp
mov
stos
push
and
and
jl
mov
jns
out
pop
leave
imul
movsl
push
lret
icebp
cmp
and
out
je,pt
jmp
lock
sub
fistpl
or
xor
push
clc
adc
js
fmull
or
add
cmp
push
mov
mov
mov
cwtl
inc
pop
cmc
hlt
scas
movsl
dec
pop
dec
bound
add
xchg
mov
mov
mov
addr16
jge
cmpsl
xchg
pop
and
leave
popw
nop
rcrb
inc
dec
in
sub
repnz
xchg
xchg
popf
and
jns
dec
pusha
mov
mov
jo
jmp
jg
xchg
aad
xchg
or
cld
mov
aas
sub
push
mov
test
fistps
inc
and
testb
out
pushf
outsb
dec
jns
or
aaa
imul
jg
jge
mov
pop
cmp
sub
dec
mov
cmc
push
cmpsb
cmpsl
test
pop
jmp
fucom
mov
xor
arpl
cmc
fsubr
jmp
fs
inc
jae
fwait
leave
dec
adc
aaa
int3
outsl
push
loopne
in
js
jecxz
sub
push
and
push
pop
int3
ljmp
and
add
rorb
subl
inc
xchg
lahf
je
push
in
fiaddl
loope
adcl
pop
add
subl
and
cmp
inc
add
push
sbb
call
mov
mov
test
mov
jecxz
push
jae
pop
jbe
mov
pop
xchg
cmpsl
ds
fistpll
pop
icebp
popf
mov
aam
or
jle
xchg
add
incl
push
data16
xor
lea
mov
pop
mov
lods
rclb
mov
clc
adc
aas
cmp
mov
rcr
test
push
dec
mov
bnd
jae
xchg
mov
fcoms
xlat
sub
mov
ljmp
es
lret
xchg
clc
xchg
repnz
jb
insl
popa
push
xor
sbb
data16
inc
mov
movsl
mov
xor
sbbb
xor
cli
jp
lods
or
or
fcom
call
gs
xchg
jle
repz
sub
ss
xor
fstpl
add
mov
into
mov
jo
roll
xor
js
mov
loope
xchg
mov
cs
rorl
enter
inc
pop
jmp
std
push
fdivr
ja
pop
shrl
fdivl
mov
inc
xor
pop
mov
clc
daa
jnp
mov
sahf
mov
pop
dec
mov
adc
push
stc
add
xchg
loopne
out
outsl
aaa
clc
int
insl
inc
mulb
pop
jne
fcos
movsb
xor
xlat
sbb
mov
inc
mov
dec
fisttps
mov
lea
sarl
mov
add
xchg
dec
arpl
cmpsb
push
push
stos
mov
xor
push
test
lret
pop
pop
push
pop
xor
jecxz
xchg
pop
fiaddl
push
mov
push
push
icebp
push
movsb
loopne
cwtl
cwtl
lea
imul
pop
daa
addl
and
sahf
aad
ss
mov
mov
pushf
inc
out
icebp
mov
sub
addr16
mov
mov
cmp
push
push
inc
data16
arpl
and
mov
push
dec
mov
fnstsw
jg
mov
out
inc
clc
testl
test
cmpsb
mov
lcall
mov
movsl
dec
lahf
xchg
dec
outsl
roll
loopne
and
sub
sbb
inc
aaa
cltd
add
pop
scas
sub
inc
pusha
out
or
mov
xchg
sub
lods
sub
sub
xor
loopne
jae
lcall
sbb
jne
xchg
mov
fwait
mov
lds
cmp
or
decl
shlb
adc
pushf
addr16
dec
or
stc
push
mov
adc
out
xor
fs
and
scas
dec
xchg
shl
inc
dec
mov
sub
fdiv
jecxz
xor
enter
dec
cmp
mov
subl
loopne
scas
popa
popa
test
inc
xor
pop
movsl
enter
add
movsb
jbe
jae
aaa
jae
jb
inc
push
or
pop
aaa
out
iret
dec
cmpsl
jo
enter
shrl
dec
mov
dec
add
xchg
mov
push
cmp
or
xchg
aas
fwait
outsl
mov
rolb
sub
cmp
popf
sub
roll
add
push
mov
popf
flds
mov
mov
data16
in
mov
xor
add
push
lret
push
or
dec
call
and
stos
lock
push
out
out
test
loope
cmp
cmpsl
in
xchg
mov
add
xorl
dec
addl
lea
cmp
test
push
push
das
lret
pop
jg
xchg
push
jne
and
add
js
push
push
std
sub
in
pop
mov
andb
inc
dec
dec
stc
loope
cltd
rcl
push
pop
cltd
jne
mov
jl
outsb
enter
mov
cmp
nop
add
shl
cmp
decl
sub
shl
enter
and
loope
popl
lock
les
jp
mov
adc
jne
lahf
enter
insb
and
inc
or
shlb
call
jl
test
push
cmp
xor
cmc
ljmp
leave
aas
dec
rorl
fistpll
push
call
xchg
adc
cmpsb
test
mov
mov
mov
mov
cmc
rcl
sti
xchg
cli
sub
jecxz
xchg
pop
adc
sbb
mov
ret
lahf
xor
push
aad
shlb
insl
inc
or
xchg
dec
mov
sbb
cli
sarb
jae
das
cmp
lods
loop
mov
int
add
sub
cs
and
cwtl
test
stos
add
repz
sahf
test
add
sbb
lret
fs
mov
dec
ret
inc
shl
sti
sbb
clc
sbb
daa
mov
pop
jl
cld
bound
fcmovu
sub
cltd
pusha
push
hlt
xchg
fistps
lock
mov
mov
in
imul
addr16
and
push
aad
xor
test
test
pushf
cmc
or
sbb
insl
mov
add
jl
stos
movsb
lcall
or
outsb
test
cmp
out
sbb
cmc
insl
push
lea
loop
xchg
leave
addb
out
sub
bound
lods
dec
adc
mov
stos
and
cmpl
pop
push
repz
negb
stos
fidivl
shll
loopne
cmpb
loope
push
aas
cmp
lret
push
mov
lret
jg
mov
add
fistps
in
ja
rcrl
mov
add
fnstcw
rcll
jge
fimull
sub
das
sub
sarb
push
shll
inc
add
jmp
sub
add
fs
lea
nop
test
pushf
lods
jge
js
xchg
sbb
xor
push
test
divb
roll
sub
popa
in
loope
adcl
out
mov
sub
lock
or
mov
xor
das
pop
lods
push
push
sbb
mov
adc
jbe,pn
jnp
mov
adc
mov
jno
mov
jmp
lret
stos
mov
scas
repnz
mov
insl
jae
sub
iret
adc
mov
dec
cltd
lahf
mov
out
xchg
les
mov
lret
shll
mov
pop
lea
sub
lret
push
push
lods
outsl
fldt
jns
sbb
hlt
jns
pop
stos
jno
mov
xchg
jge
jne
inc
cmp
nop
xor
mov
mov
or
and
addb
mov
jbe
mov
mov
in
adc
xor
adc
jl
pop
negb
sbb
insb
int3
adc
dec
mov
daa
jg
lock
inc
stos
mov
pop
sbb
mov
pop
mov
vsubss
mov
ret
lods
add
shll
jl
xor
cwtl
lods
loopne
fsts
mov
mov
jb
int
inc
cmp
push
int3
jp
lcall
adc
sub
cmpsl
inc
sbb
aas
dec
sub
xchg
clc
imul
cmpsb
xor
sbb
out
jne
xchg
fucomp
int
or
push
mov
lock
push
mov
lock
cmp
lret
mov
xor
and
fstpt
jb
fwait
push
dec
mov
leave
sub
lods
jle
dec
cmpl
imul
push
hlt
push
push
aad
pop
enter
pop
dec
jge
sti
sub
pop
arpl
stos
sbb
loop,pt
std
xor
sub
loop
test
jl
stos
mov
outsl
hlt
incl
cmc
into
call
cltd
divb
gs
js
scas
loop
dec
push
inc
sbb
push
fisttpll
gs
dec
fwait
sub
scas
dec
jnp
aaa
nop
cmpl
dec
mov
mov
into
mov
mov
std
push
sub
cmc
push
pop
push
mov
aaa
es
push
stos
add
pop
and
add
push
pop
jmp
test
dec
xor
iret
xchg
scas
cli
xchg
arpl
add
xchg
dec
test
cmp
out
mov
xchg
icebp
pop
imul
mov
lret
dec
jbe
mov
pushf
push
or
xor
test
adcb
ljmp
lret
lret
push
nop
jne
insl
ret
outsb
and
jne
imul
push
push
push
push
jne
dec
scas
cltd
fnstsw
add
in
push
into
lret
and
cltd
inc
icebp
xchg
shll
repz
xchg
sahf
jae
push
jmp
or
pop
xchg
cmp
pop
or
test
divb
out
xchg
les
cmp
aad
sti
jl
pushf
jb
push
lahf
xor
clc
jbe
inc
mov
adcl
add
mov
sub
fld
cli
daa
pop
xchg
test
xchg
cmp
lods
mov
add
jns
dec
adc
les
adc
mov
lock
xchg
pop
push
mov
mov
rcll
jp
mov
xchg
popf
loope
lcall
nop
adc
jne
cmpsl
lock
mov
movsl
xchg
add
mov
push
dec
mov
icebp
lds
dec
das
xor
sahf
call
lock
aaa
xor
and
addr16
and
add
les
je
inc
aam
mov
jle
imul
cld
in
out
loope
mov
fcomip
cmp
or
div
mov
fcompl
mov
rclb
add
clc
popf
repz
add
testb
adc
cltd
push
push
xor
mov
xchg
jb
mov
dec
sub
in
mov
in
mov
sub
fwait
dec
in
jb
mov
leave
cltd
sbb
pop
dec
into
dec
cwtl
jnp
mov
loop
sub
push
sarl
mov
iret
insb
scas
popa
or
fldenv
stc
pop
xor
cmp
lcall
rep
lods
mov
xchg
rclb
pop
lret
mov
icebp
fidivs
add
sbbl
mov
ret
pop
notb
xor
dec
pop
and
in
shlb
xor
jp
aad
add
pop
jmp
scas
push
inc
push
lret
daa
and
fimuls
adc
jo
jbe
rorl
xchg
sub
sahf
ljmp
lret
arpl
inc
pushf
stos
xchg
shr
icebp
mov
cltd
notb
xchg
sbb
call
fdivrs
jnp
stos
or
repz
xchg
xchg
xchg
fimull
fimuls
pop
push
cs
dec
jnp
mulb
mov
les
scas
ss
lret
gs
jecxz
cvtps2pi
push
cmp
cltd
aam
mov
and
mov
into
ja
std
dec
das
rcll
cmp
push
lahf
push
add
adc
adc
out
push
push
add
mov
push
and
mov
das
mov
repz
pop
jg
dec
sar
inc
adc
xor
out
addr16
scas
rcrb
pop
mov
iret
xlat
fsubrl
mov
dec
subl
jge
das
repz
or
xchg
push
mov
in
rcrb
xchg
mov
shll
test
fxam
sbb
shrl
dec
ljmp
jl
mov
dec
or
aaa
mov
dec
test
outsb
cmpsb
mov
rcll
iret
jae
cs
mov
inc
or
jg
std
fdiv
mov
ss
dec
enter
mov
push
xor
mov
dec
inc
lret
out
jecxz
popf
mov
and
and
adc
xchg
xor
adc
stc
pop
push
sbb
ss
xor
loopne
out
xchg
and
xchg
fiaddl
and
mov
lret
or
push
mov
out
adcl
lret
je
adc
push
leave
dec
jnp
ljmp
xchg
aas
imul
sub
pop
fcmove
clc
sarl
outsl
in
test
les
dec
inc
ficoms
scas
loope
jnp
sbb
popf
lahf
push
mov
jge
add
and
fsubp
xor
hlt
jmp
push
iret
jmp
dec
jno
push
sub
aas
push
popf
adc
lahf
sbb
adc
test
pop
inc
xorl
dec
and
mov
fwait
stos
ds
aam
imul
sub
std
int
sub
repnz
and
lds
jp
jg
push
pop
sbb
jge
in
rcll
xor
xor
sbb
xor
cmp
lods
sub
jl
inc
sarl
imul
cmpsl
addl
mov
inc
jo
add
ret
pop
push
addr16
sbb
movsl
in
icebp
mov
add
mov
xor
cmp
add
stos
and
cmp
xchg
cmp
cmp
or
dec
jae
push
xchg
pop
xchg
push
mov
jbe
imul
icebp
loopne
lds
sub
and
jb
das
mov
xor
into
lret
xor
mov
jbe
loope
test
in
data16
int
ljmp
sub
loopne
or
ss
out
push
test
mov
xchg
cmp
sahf
imul
xor
jbe
mov
scas
arpl
push
pop
out
xchg
bound
pop
inc
xor
jecxz
dec
aaa
pop
pop
lock
ss
outsb
imull
clc
insb
aas
sub
dec
jg
mov
cs
loop
lahf
jl
adc
mov
xchg
cmpsb
inc
gs
xchg
ret
or
or
xlat
mov
ret
push
xor
int
dec
mov
xchg
cmp
bound
gs
in
add
adc
sbb
mov
push
iret
sub
push
lock
dec
outsl
fldl
pop
icebp
sub
or
xor
lods
test
jne
test
addb
shr
popf
cs
push
scas
addb
stc
jbe
inc
pop
inc
int
pop
aaa
cmp
mov
pop
mov
pop
mov
jle
sahf
adc
push
dec
popl
sbb
xlat
push
in
pop
push
xor
pop
shlb
jns
xor
push
xchg
add
pushf
popa
push
push
adc
cwtl
shr
pop
mov
cmp
lds
fstpl
sbb
push
mov
imul
adc
or
call
sbb
mov
cmc
fcoml
in
cmp
loopne
mov
push
loopne
cmpsb
mov
lcall
ss
pop
jnp
xor
arpl
xor
lahf
lret
cmpsl
cmpb
mov
movl
movb
push
rcr
add
pop
gs
and
mov
and
lds
push
mov
mov
mov
push
sbb
mov
dec
out
adc
rorl
mov
cmp
aad
inc
pop
outsl
mov
testb
jecxz
dec
enter
das
jb
inc
cli
fs
jb
lods
mov
mov
movsl
cs
adc
adc
mov
jae
sahf
add
sub
cs
adcb
pop
iret
adc
cmp
mov
mov
inc
enter
xchg
push
sbb
xchg
dec
iret
aas
cmpsl
loope
adc
les
add
loopne
push
jne
lock
xchg
js
imul
and
dec
inc
pop
sbb
xor
fnstenv
std
scas
cmp
xchg
idivl
jns
lahf
jno
jl
mov
xchg
adc
loope
push
push
dec
mov
imul
hlt
notb
jb
ljmp
adc
js
cmpsb
mov
pop
ss
jmp
iret
mov
xor
and
push
fs
dec
lock
int3
or
ja
push
lods
dec
inc
pop
mov
push
mov
hlt
push
cwtl
lods
add
ret
cltd
js
mov
jl
adc
cmp
pop
jne
sub
iret
inc
and
mov
add
mov
xlat
xchg
movsb
sbb
aas
test
fwait
dec
ljmp
pop
cmp
mov
adc
inc
and
inc
cltd
dec
jmp
sbb
popl
adc
push
aam
push
sarb
sbb
mov
xlat
daa
std
and
sub
in
mov
nop
xor
xchg
ss
pop
adc
test
mov
dec
fisubs
repnz
scas
mov
jnp
mov
das
jle
inc
and
jbe
inc
cmp
push
lret
test
add
cmpsl
cmpsl
mov
push
lcall
lds
xchg
cmp
es
in
inc
shr
push
gs
mov
push
push
inc
add
lea
out
or
mov
fs
sub
push
or
mov
xchg
repnz
movsb
lcall
adc
push
btc
and
daa
mov
xor
stos
fmuls
mov
in
clc
aas
sbb
push
mov
aaa
inc
cwtl
fildl
xchg
movsb
xor
jbe
sahf
daa
push
shll
sbb
jecxz
cmp
sub
push
icebp
cmp
scas
dec
enter
cli
imul
cltd
imul
adc
xorb
mov
shr
sub
push
fwait
jp
pop
cltd
mov
scas
mov
aad
mull
dec
enter
loope
ljmp
mov
leave
cmp
dec
push
add
mov
daa
adc
in
inc
sbb
outsl
cmp
mov
jge
or
mov
jecxz
mov
je
inc
push
fstpt
lds
mov
outsb
daa
dec
test
inc
lea
push
sbb
sbb
test
jg
jns
pop
insl
imul
and
aad
fisttps
setge
push
sbb
push
ljmp
fcoml
jae
ds
xor
jmp
pop
mov
and
xchg
push
adc
push
lret
cmc
cli
jg
fsubs
rol
jbe
das
pop
jecxz
dec
and
xlat
pop
in
jno
jbe
adc
adc
push
push
xor
lods
lahf
cld
rclb
js
push
pop
imul
fsqrt
lea
call
push
jb
ds
in
mov
pop
aam
mov
jnp
pop
cmp
rolb
loope
cmpsb
out
outsl
inc
leave
clc
test
xchg
shll
aad
iret
mov
das
sbb
dec
or
pop
mov
xchg
in
pop
mov
out
sbb
cmp
loop
push
push
push
cmp
jge
adc
clc
cmpsl
push
js
out
lret
out
mov
push
mov
sbb
mov
loop
fbstp
and
xor
pop
jnp
pop
xchg
das
xchg
xor
insb
mov
inc
xchg
cmp
jge
test
aam
cwtl
mov
push
popf
das
int
and
cs
push
xor
adc
jns
das
push
daa
pop
mov
sbb
test
mov
jo
cli
mov
test
fsubs
inc
cmp
adc
jmp
push
or
adc
gs
arpl
push
lahf
jns
out
xchg
xlat
or
or
mov
popf
shrl
cmp
aas
xchg
mov
pusha
cs
in
inc
jge
cmp
imul
inc
loop
inc
jge,pt
insl
call
lock
pop
ljmp
xor
inc
pop
sub
jno
insl
cmp
div
testl
fisttpll
nop
mov
sbb
xchg
mov
cmpsb
mov
xchg
add
dec
movsl
lods
and
enter
repz
adc
mov
xor
or
adc
xchg
cmpsb
les
cmp
xor
cmp
insl
xor
push
push
bound
sub
ret
or
fmull
es
icebp
cld
shrb
mov
add
scas
push
shlb
jno
cmp
sbb
and
test
dec
xor
push
orb
out
js
mov
mov
sbb
pop
ss
xor
xlat
ja
sub
cmp
mov
cmp
mov
movsl
mov
xchg
push
jae
arpl
outsl
jb
inc
cmp
pusha
in
jecxz
or
ret
inc
or
push
repnz
push
int
stc
les
jb
sub
addl
fdivl
xchg
in
xor
add
and
and
jle
fdivrs
ja
and
xchg
pop
sub
dec
lret
cmpb
xchg
cmp
lcall
jne
or
pop
fmul
or
out
jne
pop
adc
push
sbb
mov
jl
add
and
pop
lahf
xchg
push
cmp
popf
js
push
add
cmp
loopne
sbb
stos
mov
pusha
outsl
ficomps
outsb
adc
jmp
mov
or
and
icebp
cmp
outsb
push
dec
xor
lret
jbe
aas
loopne
or
divl
filds
lcall
movsb
fnstsw
movsl
movsb
popf
mov
fsubrl
cltd
pusha
clc
outsl
out
dec
mov
popf
cmc
aaa
push
mov
insb
sbb
dec
add
jae
mov
out
daa
test
sbb
push
mov
stc
sub
popf
adc
out
sbb
cltd
jecxz
xchg
xor
pop
inc
inc
xchg
pusha
jle
insb
mov
mov
sub
sub
jp
push
mov
imul
jae
in
push
and
push
fistl
shl
and
mov
fadd
in
jae
push
cmpsl
scas
adc
pop
or
orl
mov
pop
mov
pop
rcrl
pop
jns
push
scas
cmpsb
add
pop
push
cli
sti
xsaves
nop
jb
sbb
sub
adc
orl
movsb
push
mov
sbb
inc
das
nop
add
test
popf
and
xchg
fmulp
lea
cltd
add
lret
fsub
bound
fcomps
xchg
mov
mov
js
adc
dec
adc
loope
push
pop
mov
data16
mov
inc
dec
xchg
fnsave
xchg
jno
sbb
push
dec
out
add
sarb
fwait
dec
xor
jne
adc
into
adc
sub
and
popa
in
push
sti
xchg
dec
icebp
call
mov
cmp
stos
mov
mov
inc
mov
xor
mov
sub
jns
mov
mov
div
mov
fs
fwait
inc
stc
jl
scas
hlt
lock
dec
xchg
mov
adc
insb
test
pop
sbb
jb
test
jns
mov
mov
jp
movsl
lods
lock
popa
or
test
aam
dec
xor
fisubrl
hlt
mov
adc
icebp
dec
popa
pop
mov
or
icebp
push
jns
call
fisubrs
std
in
jmp
add
inc
movsb
cmp
arpl
icebp
gs
xchg
push
sub
notb
out
cmc
test
xchg
int3
imul
pop
jno
ss
popa
fisttpll
test
outsl
das
icebp
fcomi
ss
in
loope
cli
sbb
stos
xor
fnstsw
cmp
call
dec
mov
xor
dec
jl
push
mov
loope
test
mov
cmc
push
pop
loope
pop
std
out
sti
rcll
or
test
mov
adc
addl
xchg
pusha
push
jne
sahf
mov
cmp
mov
or
xchg
mov
mov
dec
lcall
sbb
mov
pop
test
mov
pop
sti
aad
xchg
fbstp
and
in
dec
orl
ljmp
popf
mov
div
mov
sahf
xchg
out
xchg
imull
in
sti
sbb
fsin
push
sub
out
cmpsl
imul
dec
pop
adc
xor
mov
outsl
inc
push
push
push
xchg
das
inc
mov
dec
daa
leave
dec
movsb
addr16
sarl
adc
ja
pop
mov
mov
ss
lret
add
ret
lret
je
into
loope
adc
xchg
jb
int3
xor
pop
mov
adc
sub
div
popa
aaa
jecxz
and
loope
out
dec
dec
add
jl
notb
add
rorl
dec
subl
imul
xor
inc
movsl
or
int3
out
push
sbb
daa
out
pop
mov
ret
outsl
or
movsl
sarb
cmpsl
adc
bnd
out
mov
xchg
movsb
scas
add
sbb
inc
iret
jp
idivl
lock
dec
mov
xchg
iret
scas
push
idivl
outsl
pop
pop
xchg
jmp
or
pop
cwtl
or
cwtl
jbe
inc
pop
ss
adc
cld
add
ss
ficompl
sbb
add
clc
rcrl
jae
adcb
lcall
pushf
xchg
adc
pop
adc
lret
popa
xchg
movsb
outsb
mov
inc
mov
xor
insl
or
adc
sahf
push
fiadds
dec
xchg
into
adc
call
shll
cs
notb
mov
push
jae
in
addr16
mov
stos
ret
mov
xor
dec
jp
pop
rcrl
cmp
xor
rclb
dec
popa
mov
mov
bound
divl
std
mov
popf
fcompl
mov
mov
mov
jp
pop
sub
and
xor
push
sub
outsl
pop
loop
xor
add
cmp
ret
ss
inc
out
mov
fimull
loope
lret
aam
lock
xor
cmc
jge
test
out
insb
add
leave
push
stc
xchg
loopne
jmp
ds
adc
sbb
xchg
jecxz
jle
xchg
sub
cmc
dec
dec
push
in
popw
out
ss
nop
into
in
sub
repz
pop
out
cltd
dec
aaa
jne
xorl
out
adc
push
adc
icebp
iret
adc
pop
mov
mov
and
cmpsl
sbb
jbe
cmpsl
and
iret
push
sub
mov
imul
in
or
and
int3
and
fstps
ja
inc
mov
inc
or
fdiv
pop
mov
and
loope
fdivrl
cwtl
hlt
jno
lea
sbb
and
call
iret
xchg
rcrb
jmp
inc
cld
aas
stos
sub
ret
int
dec
popa
mov
dec
and
jnp
nop
and
xchg
loope
or
pshufw
pop
jle
jecxz
and
and
out
xor
adc
sub
jne
push
repz
pop
push
sbb
or
loope
cs
xchg
out
scas
add
dec
mov
xchg
push
ja
lret
inc
mov
icebp
das
outsb
arpl
ret
mov
sahf
sbb
test
jg
add
or
or
or
jns
inc
daa
outsb
aas
pop
movsl
and
push
cltd
sti
outsl
jbe,pn
xor
pop
jo
int
call
aad
sbb
repz
test
jmpw
dec
aad
inc
inc
ja
or
pop
cwtl
sbb
cli
ljmp
and
test
add
sub
adc
or
aam
popa
add
fs
scas
jbe
mov
test
call
loopne
sub
mov
and
arpl
pop
inc
psrld
jp
dec
cmp
adc
fs
clc
idiv
mov
cld
loop
outsb
mov
ret
sbb
add
mov
outsl
aas
dec
xchg
jae
push
shll
sub
sub
mov
push
iret
dec
jp
sub
adc
jl
aas
ret
lods
pop
push
adc
shrl
push
or
out
lcall
jns
push
int3
icebp
push
stc
in
arpl
imull
stc
jle,pn
add
daa
fbld
mov
push
or
or
mov
lods
pusha
fcomps
jae
imul
sbb
jno
and
fs
fwait
jns
push
enter
or
aas
lcall
loope
pusha
scas
repz
xor
mov
repnz
aas
mov
in
sub
mov
adc
pop
mov
aaa
popl
dec
push
ljmp
mov
loop
iret
xchg
cld
sahf
push
jnp
vpackuswb
loopne
in
jne
inc
xor
ja
sbb
push
sub
pop
mov
stos
out
or
or
mov
fucomp
xor
add
in
imul
cwtl
sbb
ror
orb
mov
test
cmp
push
mov
add
sahf
mov
ss
inc
out
mov
pop
sbb
jno
sbb
and
cmpl
cmpb
pop
dec
jnp
insl
pop
xor
dec
mov
xor
movsl
cs
mov
int
xchg
inc
lea
pop
ret
or
insl
sbb
sub
adc
or
add
into
mov
jge
push
ret
addr16
mov
fwait
pop
push
sarl
pop
lret
dec
or
mov
dec
inc
push
xchg
loopne
loop
cwtl
xor
sbb
aaa
sub
mov
stc
out
jmp
push
cmp
in
push
xchg
insl
cmp
add
in
mov
popa
pop
daa
mov
and
aaa
aam
xchg
cmp
pop
imul
lcall
scas
mov
dec
fmull
jb
std
out
push
bound
mov
ret
ret
xchg
ret
in
pop
dec
adc
pusha
movsb
xchg
sbb
jo
or
scas
xchg
and
arpl
out
ficomps
xchg
not
shll
mov
aad
je
insb
mov
mov
sub
inc
repz
or
cmc
dec
cmpsb
adc
push
shll
mov
lahf
cmp
xchg
ljmp
and
idiv
arpl
xchg
hlt
vorps
sbb
mov
sbb
notl
sti
mov
push
adc
lock
or
sbbl
add
stos
notl
test
leave
push
test
sbb
stc
loop
lret
pop
outsl
dec
push
fnstsw
cli
mov
lock
fisttpl
mov
shl
sbb
and
jp
inc
sbb
push
xor
scas
add
scas
cld
jl
and
dec
in
cmp
cli
enter
sbb
cmp
pop
aaa
lds
push
cli
adc
jp
leave
in
jg
into
cmp
xor
aam
lcall
jae
aam
dec
les
push
in
nop
add
push
std
aad
fisubs
jnp
lds
adc
sub
ja
mov
jmp
mov
cmc
leave
and
cmp
rolb
jae
jle
inc
sub
push
push
andb
in
mov
icebp
or
sbb
push
mov
inc
shl
push
jno
aaa
enter
aad
gs
jge
insl
dec
pop
pop
cli
cld
push
mov
pop
cmp
cmp
shr
enter
es
mov
pop
xor
push
popf
and
or
cli
jge
cmpsb
push
or
or
ja
add
cmp
inc
das
pop
ret
push
or
jp
sub
push
push
push
adc
in
insl
dec
enter
dec
movb
stc
cmp
ds
inc
or
jns
popf
pop
outsl
aas
dec
ljmp
xchg
lds
into
call
inc
cmp
sub
add
aad
sbb
pop
fcomi
std
mov
les
test
push
sbb
f2xm1
pop
rorb
rorb
orl
cmp
rol
mov
xchg
mov
mov
addb
ficomps
popf
adc
imul
jns
xor
sbb
test
jo
int3
dec
movl
mov
push
rorl
mov
out
inc
repnz
insb
incb
data16
loope
and
in
xchg
das
mov
lock
and
xchg
pop
mov
loop
xchg
and
pop
aad
jmp
insb
cmp
cs
and
pop
roll
aad
pop
xor
mov
xor
test
insl
negl
xor
nop
inc
xor
ds
arpl
add
jecxz
lcall
pop
mov
stc
add
je
movsb
xchg
fisttpll
push
sbbb
movsl
lods
push
mov
xchg
jge
mov
mov
addr16
and
cld
xor
mov
xor
cmp
or
sub
lahf
das
fidivs
add
fidivl
cmc
test
cwtl
popa
push
aam
cld
rorb
push
jge
pop
movsb
jl
int3
in
push
gs
cmpsl
adc
push
negl
lcall
or
push
bound
in
test
rcr
orb
mov
adc
xor
jo
jmp
sahf
je
mov
pop
sti
sbb
inc
out
push
push
out
mov
out
imul
xor
leave
push
test
bndldx
stc
lahf
les
cmp
dec
pop
ljmp
pop
xchg
cmp
mov
dec
inc
enter
jo
imul
outsl
das
imul
mov
insb
nop
cmp
cli
movsb
ret
rol
clc
cmc
xor
sub
xchg
fcmovnbe
and
push
lahf
shll
mov
mov
mov
or
lock
and
and
addl
push
sarb
insl
scas
std
pop
and
int
xor
adcl
loop
adc
jne
out
cmp
mov
enter
pushf
out
test
shl
and
mov
mov
cmp
pop
cmpl
aas
ficomps
and
jae
or
or
xchg
jle
push
mov
mov
lcall
xlat
mov
aad
inc
jecxz
das
mov
jle
data16
popa
clc
es
leave
adc
or
jl
sub
cs
test
fwait
adc
sub
push
out
nop
int
push
ret
ret
push
mov
and
lock
iret
bound
or
nop
enter
push
cmp
or
sti
data16
fucomp
mov
test
xchg
dec
shrb
xlat
pop
sbb
mov
loopne
loopne
inc
mov
adc
mov
or
test
cmp
stc
insl
int
jmp
pop
jno
fstl
jne
push
or
mov
das
cmp
mov
in
mov
cltd
adc
cmp
outsl
inc
xor
fldl
mov
jg
lcall
js
aad
rcll
mov
pop
mov
pop
test
adc
cltd
add
fadd
rolb
test
inc
jle
and
push
inc
inc
repz
sub
aas
push
iret
mov
daa
idivb
push
jne
fbstp
add
jne
jle
scas
mov
dec
lret
jae
sbb
inc
sbb
jne
out
inc
mov
add
popa
outsl
das
cli
or
mov
rcrb
rolb
mov
mov
mov
shlb
fistl
sarl
lret
add
in
pop
sbb
add
cli
call
out
adcb
xor
in
icebp
cmpsl
cmp
outsb
xchg
jne
lds
add
imul
ljmp
std
and
sub
repnz
ret
sbb
mov
out
push
push
cmpsl
jne
fists
pop
cmp
or
add
add
cmp
or
adc
movsb
mov
mov
xchg
xchg
enter
outsl
lret
mov
lret
inc
inc
hlt
call
idivl
mov
rcrl
sub
sahf
push
test
bound
test
adc
sbb
in
push
shl
jo
mov
int
in
jb
das
into
arpl
xlat
pushf
es
repz
dec
out
fisttpll
pop
cmpb
and
pop
and
xchg
jbe
int3
and
xor
imul
sbb
or
shr
lcall
pop
pop
adc
in
xchg
push
pop
inc
je
jae
inc
dec
loope
mov
and
cli
pop
add
xor
sbb
fisttpll
das
outsb
insl
mov
int
popa
mov
mov
jne
test
gs
shll
pop
sbb
in
in
and
mov
sub
stc
out
pop
jmp
loop
jnp
aas
in
mov
in
aad
pop
and
and
cwtl
push
sub
mov
fucomp
or
test
inc
les
add
ret
in
lea
fwait
xor
pop
cs
int3
xor
xor
or
loopne
scas
out
jno
or
cmp
jae
scas
inc
adc
ljmp
ja
fdivr
mov
push
mov
test
out
clc
jne
in
cmp
stc
dec
std
sub
or
pushf
mov
lods
jno
pop
mov
sbb
call
mov
aaa
and
dec
mov
jb
dec
pop
push
mov
jo
adc
mov
push
lea
mov
cmp
in
aas
lock
andb
pop
stos
adc
dec
imul
lea
mull
dec
jge
shr
lret
or
add
cs
add
shrl
mulb
scas
push
jne
scas
jno
xchg
leave
add
sbb
shlb
push
xorb
xchg
lods
and
pop
mov
mov
cli
cmpb
push
push
push
aad
cmp
pop
jo
dec
cmpsl
fs
cltd
cmp
add
inc
mov
sbb
bound
sbb
mov
cmp
sbb
mov
rclb
leave
test
sub
test
pop
lcall
ret
lea
and
pop
pop
or
mov
cmp
xchg
push
cmp
mov
push
enter
jle
jle
push
imul
shrb
std
fs
pop
subl
loope
idivl
js
outsb
adc
mov
ss
jnp
xor
repz
push
jl
xchg
pop
arpl
pop
out
mov
int3
js
add
xor
xor
cwtl
pusha
mov
popf
cmp
jl
insb
incl
ret
cmp
fcomp
mov
fdivrs
pop
xor
push
dec
and
movsb
lret
insl
dec
jns
xchg
sub
lds
out
loope
arpl
dec
cs
dec
mov
add
or
incl
repz
mov
xor
in
aaa
add
dec
add
aad
xor
insb
mov
push
test
cmp
cmc
jmp
das
dec
outsl
sbb
or
dec
and
inc
adc
push
push
pop
mov
and
btr
out
adc
xchg
lds
sub
enter
add
or
jmp
hlt
mull
mov
mov
jecxz
cld
inc
xchg
rclb
add
jge
int
pop
pop
jg
dec
push
js
out
ret
jno
mov
xchg
movsb
xchg
inc
pop
cmp
lahf
bound
daa
sbb
mov
stos
in
out
xlat
lret
scas
xchg
ret
outsl
sub
xor
jae
mov
xchg
loope
loop
add
pop
outsl
pusha
rcll
loopne
jnp
mov
xor
push
push
xchg
lret
ja
pop
movsb
fmul
jb
dec
imul
adc
inc
jge
xor
ja
pop
addr16
jno
mov
mov
sub
push
xor
push
js
push
and
in
jl
leave
mov
pop
ret
jmp
into
in
in
stos
fisttps
sti
xor
sbb
out
fnstenv
bts
xchg
mov
int3
repnz
sub
lods
xchg
lods
mov
inc
jge
pcmpeqd
iret
loope
test
push
bound
cli
mov
aas
adc
adc
ljmp
push
lods
js
std
add
nop
dec
repnz
mov
jnp
sbb
popa
adc
sbb
or
jecxz
push
xor
out
xchg
xchg
arpl
cmp
std
pop
test
mov
xor
aas
ljmp
xchg
in
out
push
mov
lcall
pop
or
shrl
lods
or
adc
xchg
sub
or
xchg
sti
out
shr
xor
push
loope
or
les
cmp
imul
and
fisttps
in
sahf
and
xor
push
in
popf
or
pop
push
and
adc
and
mov
mov
and
or
repnz
cmp
sub
add
ret
xor
pushf
push
in
inc
add
es
ljmp
mov
rcl
das
cmpsl
sub
mov
in
fmul
mov
or
rcr
cmp
fcompl
push
xor
dec
aam
std
repz
in
rorl
std
mov
mov
push
popa
fwait
loop
jmp
mov
xchg
or
fwait
out
pushf
repz
xchg
mov
les
push
rcll
xor
xor
fs
mov
cmp
or
imul
sbb
mov
mov
push
xchg
mov
iret
mov
inc
jg
sbb
gs
and
mov
cmp
idiv
sub
in
adc
and
js
mov
xchg
inc
cmc
xlat
andb
fwait
in
adc
sbb
xchg
shl
mov
or
cld
movsb
mul
cwtl
cmp
push
add
jno
sbb
jno
rcll
addr16
sbb
ss
dec
cmpsl
fildl
pusha
and
xchg
xchg
fwait
insb
inc
sub
mov
inc
push
fistl
adc
sub
dec
ret
xor
cli
sub
in
inc
dec
cmp
pop
dec
dec
leave
sub
data16
mov
sbb
add
insb
mov
jg
lods
push
cmp
sub
out
push
movsl
in
inc
mov
ja
inc
add
aas
push
fists
test
subl
jnp
mov
mov
cs
cmpsl
int
xchg
jmp
mov
add
lahf
jno
bound
pop
inc
in
cli
push
hlt
add
repz
stc
out
inc
popl
sti
sub
in
insb
sbb
hlt
imul
adc
stos
cwtl
adc
outsl
pop
pop
pop
mov
mov
mov
fs
repz
idiv
add
mov
gs
mov
filds
cli
dec
cs
ret
decl
pop
int
nop
jnp
jb
adc
subl
cmp
xor
cmp
sti
xor
xorl
out
bound
arpl
fdiv
cmp
addr16
add
call
lret
call
add
pushf
pop
mov
pushf
lock
jmp
push
fisttpl
push
mov
movsb
add
shrl
or
test
lret
push
scas
cltd
xor
jmp
outsb
inc
sbb
push
sbb
jne
fwait
movsl
mov
pop
push
xchg
mov
sbb
stc
inc
xchg
popf
andb
inc
imulb
repnz
xor
sub
push
jg
and
popa
cld
flds
jmp
mov
lods
push
add
inc
stos
sbb
movb
imul
mov
mov
aaa
mov
push
ss
pop
mov
outsl
mov
nop
and
dec
xor
test
push
xorl
mov
or
adc
push
push
out
or
sub
mov
mov
cmp
fldcw
ja
nop
or
into
insl
jg
mov
xchg
fstpt
pusha
jnp
xor
aad
sbb
cmp
push
and
iret
lahf
inc
xchg
cmp
aas
pop
sbb
mov
bound
sub
inc
out
stc
dec
sub
mov
pop
stos
add
js
push
xchg
push
cmpsl
lcall
xlat
das
mov
sub
pop
xchg
mov
mov
js
inc
mov
adcl
out
arpl
mov
movsl
push
mov
stc
lods
pusha
fs
mov
orb
ffreep
and
scas
std
push
stos
mov
jle
dec
cmp
test
filds
jp
and
popf
pop
fistpll
mov
hlt
sub
jmp
stos
lods
icebp
ret
pop
dec
sub
inc
mov
cmp
xor
out
imul
dec
sub
inc
mov
popa
dec
lea
shl
xor
push
cmp
cmp
jb
in
cwtl
outsb
repnz
test
pop
rorb
fimuls
scas
ds
or
lret
mov
adc
mov
test
test
mov
lahf
in
mov
pop
mov
outsb
jle
cmc
subb
jmp
dec
rorb
jecxz
lods
mov
icebp
in
xor
cld
add
sub
pop
cmpsb
push
in
outsb
push
into
push
lods
and
inc
pop
sub
test
dec
and
gs
jnp
lock
into
mov
or
leave
aas
xchg
idiv
icebp
iret
xor
test
pop
push
xlat
xchg
mov
xor
in
adc
sub
nop
mov
mov
or
mov
xchg
jge
jle
mov
cmp
sbb
js
mov
insb
stos
and
adc
xchg
scas
sub
dec
aad
inc
scas
cmp
std
and
test
pop
adc
sbb
xor
xchg
mov
es
mov
cmp
daa
call
orb
xlat
and
lcall
cs
sub
sub
pop
sub
int
push
loope
push
or
cltd
cld
push
inc
xchg
fists
push
lahf
mov
mov
mov
xor
fs
iret
mov
in
sub
dec
mov
in
push
xor
cltd
loopne
inc
xchg
rcll
stc
cmpsl
xor
inc
cmp
mov
pop
aaa
insb
jmp
pop
lahf
and
mov
int
test
into
mov
ja
jg
lcall
mov
add
lock
sub
push
pop
icebp
insb
shlb
mov
loope
inc
fimull
mov
mov
stos
and
push
xchg
paddsb
jnp
sbbb
nop
push
jmp
lods
mov
rcll
push
jmp
movhps
idiv
and
dec
cld
jo
pop
add
divl
movl
out
lcall
mov
in
movsb
adc
nop
push
insb
mov
pop
cltd
lret
inc
out
xchg
sbb
mov
add
jnp
mov
decb
pop
jb
or
nop
sub
sub
jb
out
mov
dec
sbb
jno
mov
mov
mov
inc
loopne
mov
cli
lods
rclb
sbb
adc
incl
fs
aaa
mov
jns
push
inc
pusha
arpl
pop
adc
push
jmp
inc
adc
jno
adc
and
pushf
dec
or
cmp
jo
push
adc
jle
mov
rcll
cmpsl
es
sbb
jecxz
inc
jbe
mov
das
ja
dec
add
cmp
out
ss
test
add
insl
cmp
mov
ficompl
cmp
jecxz
movsb
in
arpl
out
mov
push
dec
test
cmp
jno
repnz
mov
shl
or
mov
xor
jns
adc
clc
push
push
dec
into
add
sti
dec
scas
out
adc
jecxz
cld
push
daa
mov
sub
jge
leave
pop
mov
aad
aad
jo
jns
mov
mov
or
inc
icebp
mov
mov
cmp
adc
pop
push
pop
dec
xor
out
popa
lods
into
mov
das
push
push
jno
je
movsl
jmp
pop
jo
push
xchg
rolb
mov
aad
jmp
mov
ficoml
jp
mov
test
xchg
push
mov
xor
iret
push
jge
enter
push
inc
add
dec
ror
ficoml
sbb
xlat
and
xchg
push
push
jge
repnz
cmp
xchg
push
push
cmp
rcrl
test
sub
xor
mov
mov
fisubrs
push
mov
aam
jns
adc
pop
push
xor
xchg
stos
stos
xor
xchg
pop
repz
cmpsl
sar
adc
enter
test
shll
scas
icebp
pusha
or
jecxz
cmp
pushf
imul
inc
ds
pushl
adc
filds
cld
inc
das
nop
arpl
push
mov
push
fistps
dec
sub
addr16
sub
mov
loopne
mov
cld
xor
mov
repz
or
nop
movsb
je
and
movsl
push
stos
xchg
test
ss
into
leave
cli
fs
mov
cltd
xchg
dec
cli
in
aad
add
adc
fsubr
aaa
rcrb
roll
mov
popf
sbb
jle
inc
xchg
mov
icebp
and
cli
rcll
sub
test
jp
in
cwtl
pop
inc
shll
repnz
insl
jbe
mov
shrb
xor
mov
pop
subl
or
in
jnp
pop
icebp
divl
push
pop
adc
sbb
int3
and
lock
cmp
pop
sbb
lods
popa
jb
stc
inc
sub
stc
jo
out
inc
jp
cmc
fadd
inc
adc
dec
xchg
into
inc
fistps
fadds
imul
stc
adc
mov
sbb
cltd
stos
or
lock
hlt
push
mov
xchg
and
add
jb
pop
jo
inc
xor
push
mov
mov
les
push
cwtl
mov
jno
les
xor
jmp
clc
inc
jecxz
push
sub
in
dec
pop
pop
mov
sti
sbb
push
sub
and
fdivs
aaa
repz
sub
cli
repz
sti
mov
and
cmpsl
inc
mov
lret
or
clc
jp
lret
mov
test
cmp
push
dec
xchg
xchg
push
pop
cwtl
test
sbb
mov
jae
js
ret
in
mov
push
call
das
xchg
pop
lds
lret
xor
out
mov
add
sub
orb
pop
mov
dec
fcomi
out
mov
jp
xor
cmpl
pop
push
outsl
aas
xchg
dec
xor
mov
dec
mov
xchg
cwtl
pusha
rep
ss
sbb
sub
fmull
xchg
lods
cwtl
cwtl
shll
or
sub
out
xchg
adc
add
xchg
mov
dec
mov
cmp
adc
push
sti
sbb
push
xchg
sbb
fists
in
or
or
or
imul
bound
rcrl
insb
popf
mov
mov
scas
movsl
pushf
mov
sub
xor
xor
dec
test
and
lds
fdiv
dec
lcall
or
inc
jnp
jnp
jne
std
mov
mov
call
or
cmp
cltd
or
jbe
pop
push
lea
cwtl
insb
mov
mov
dec
cli
inc
sbb
jno
and
dec
or
fcomps
fistpll
ja
lods
sub
mov
inc
in
cmp
mov
clc
jmp
ljmp
lcall
test
fwait
pop
stc
and
inc
mov
sub
jb
adc
jb
xor
ss
cmp
push
cld
jle
aad
pop
in
or
add
out
jbe
shl
xchg
push
repnz
adc
clc
pop
repz
pop
pop
filds
cmpsl
jne
lds
xlat
mov
jmp
inc
out
mov
popa
xor
cmp
jb
mov
jg
addr16
notl
and
ds
cmpsl
xchg
adc
cli
push
rolb
mov
dec
fwait
out
and
cwtl
jnp
push
jns
inc
sub
lahf
sti
push
adcl
inc
mov
movsl
popa
jno
pusha
shll
cmc
push
hlt
push
fbstp
aas
sbb
push
in
jg
cmpsl
mull
inc
xor
mov
in
cli
cmp
arpl
dec
pop
ja
mov
lods
jbe
sub
rorl
loop
xor
jo
push
ficomps
ljmp
aas
mov
imul
pop
xchg
and
mov
imull
test
fwait
out
adc
cs
aas
mov
test
inc
insl
pop
cmpsl
push
xor
sub
out
or
mov
push
out
push
aas
cmp
enter
data16
outsb
mov
out
xor
pop
ret
sub
push
push
jle
xchg
fwait
jmp
subb
and
mov
jnp
icebp
test
ljmp
sarb
mov
gs
sbb
mov
or
cwtl
mov
scas
lret
sbb
jbe
scas
popa
fdiv
mov
enter
inc
mov
jbe
inc
andl
repz
cmpb
aaa
movsl
scas
fadd
xchg
fiaddl
mov
pop
jnp
test
adc
insl
cld
sbb
insb
add
hlt
das
jb
lea
xchg
mov
gs
push
mov
clc
push
fwait
lock
pop
aas
cs
mov
pop
jmp
out
dec
cltd
outsb
movsb
adc
xchg
add
inc
int
push
xlat
gs
jmp
fsubr
xchg
cmp
pop
xchg
pop
outsl
test
jno
add
xchg
pop
dec
mov
xor
mov
js
jl
inc
or
fucomp
xchg
subb
int3
addb
adc
mov
sbb
rorb
call
divl
cwtl
mov
test
xlat
mov
adc
gs
in
xor
or
cmp
adc
mov
dec
mov
cld
imul
push
lea
leave
push
cs
jp
inc
xchg
jle
or
pop
fldt
xor
mov
ficoms
hlt
das
loop
sbb
pop
sub
andl
push
or
enter
mov
std
push
jmp
fisubrs
into
rorl
dec
pusha
insl
mov
push
mov
and
dec
test
arpl
je
insb
imul
shr
sbb
fsubp
push
imul
mov
gs
add
and
mov
mov
dec
in
inc
jg
sub
arpl
push
cmpsb
int
pop
lods
in
lret
push
mov
xor
mov
call
lahf
mov
loope
inc
cmp
push
add
inc
cmp
and
or
and
shr
jmp
dec
cmp
mov
sbb
xlat
cmp
gs
dec
clc
add
add
cmp
fdivrl
cli
push
push
outsl
outsl
cld
dec
pop
in
inc
sub
lahf
out
scas
xor
and
sub
sbb
cs
mov
or
es
aam
cmpb
out
arpl
aad
inc
dec
inc
mov
andb
inc
in
int
lret
dec
adc
sbb
or
popf
in
adc
call
push
mov
mov
xchg
scas
or
push
or
cli
xlat
loopne
cmp
mov
rcl
lods
push
adc
push
and
cmpsl
jne
inc
push
jmp
fincstp
xor
add
push
push
add
cmc
dec
adc
icebp
imul
fadd
add
push
xchg
mov
js
cmp
or
jno
mov
lock
push
lock
add
xchg
ret
xchg
mov
cltd
and
jae
leave
push
in
push
outsb
frstor
ror
addl
mov
repnz
xor
inc
bound
jns
push
hlt
nop
xchg
gs
mov
clc
insb
rcrl
leave
push
lea
xchg
shr
enter
or
inc
aas
xchg
lcall
xchg
shll
mov
mov
fimull
and
or
out
test
add
in
xchg
mov
cmc
mov
daa
mov
jne
and
mov
call
add
stos
sub
add
xor
jg
sub
popf
push
mulb
js
pop
ljmp
xor
stos
lret
cld
in
addb
mov
pop
and
nop
mov
xor
lcall
jle
sbb
enter
arpl
push
jge
ss
mul
fimuls
cli
shrb
rclb
scas
push
xlat
inc
popa
imul
mov
xor
pop
adcb
jecxz
xor
push
xchg
adc
push
mov
call
jge
add
sub
scas
push
xor
mov
push
cmp
flds
in
jecxz
dec
imul
or
ja
inc
iret
and
cmp
mov
shlb
and
jle
xor
adc
cmp
in
dec
xchg
lock
mov
data16
and
mull
push
jne
push
xchg
inc
out
adc
lods
mov
inc
ret
jo
adcb
mov
cmp
sub
mov
pop
push
jbe
lock
or
mov
data16
xlat
fstps
sub
je
stos
xor
sahf
jns
add
push
fiaddl
mov
mov
bnd
xchg
push
and
push
in
mov
popf
dec
ficomps
and
xor
repz
push
lcall
fs
inc
adc
filds
mov
xor
inc
fs
lock
lock
push
movsb
and
cmpl
push
mov
lret
jne
popa
adc
push
retw
test
adc
rcrb
push
jmp
fistps
or
xchg
mov
push
sbb
push
lods
repz
mov
cli
xor
dec
xchg
cwtl
mov
xchg
and
lahf
add
dec
jecxz
mov
loopne
dec
scas
inc
aad
jg
hlt
sub
adc
int3
and
fidivl
out
inc
pop
movsb
insl
pop
js
lods
dec
sbb
shrl
cvtps2pd
pop
outsb
cmp
xchg
jp
sub
add
jmp
test
lods
mov
imul
enter
mov
popf
je
inc
mov
jnp
aam
shl
mov
mov
sti
mov
in
push
ss
inc
xor
or
or
lds
hlt
cmpsl
fists
sub
fwait
mov
xor
fildl
enter
xchg
aas
push
lret
js
and
sbb
or
inc
lret
fidivrl
ret
mov
test
leave
mov
or
lcall
ljmp
or
pop
mov
and
out
hlt
loope
aad
shll
clc
mov
pop
adc
dec
insl
or
adc
mov
loope
lods
xorl
lea
lret
sbb
cmp
inc
icebp
xor
leave
inc
aas
xchg
xor
add
inc
out
sbb
gs
daa
xor
xchg
jp
das
icebp
or
dec
xchg
and
subl
mov
adc
mov
push
adc
push
xchg
push
or
aaa
mov
add
and
fstpt
mov
push
add
or
sub
xchg
sbb
cld
push
orl
jle
insl
jge
stos
inc
test
or
xchg
idivl
xor
mov
mov
add
dec
aam
scas
subl
dec
add
int
mov
fimuls
or
and
aas
out
xchg
sbb
mov
mov
lahf
rorl
stc
pop
mov
xchg
and
add
xchg
cwtl
cwtl
imul
rclb
adc
or
mov
push
pop
jno
dec
ret
pop
push
mov
dec
mov
fwait
dec
and
out
adc
jle
fwait
or
dec
daa
js
push
hlt
adc
mov
dec
cmp
lods
mov
jae
jo
fnsave
scas
je
push
inc
mov
pop
lret
xchg
add
pusha
pusha
mov
jmp
pop
dec
cmpsb
imul
arpl
int
aaa
inc
push
mov
mov
jl
stos
jge
mov
adc
ds
adc
popf
mov
je
sbb
out
fisubs
popa
mov
pop
mov
and
xchg
xor
and
xchg
pop
fsubl
and
ljmp
mov
jle
bound
fcomip
imull
adc
out
daa
jg
fxch
aad
and
xor
shrb
jge
je
inc
lret
mov
pop
inc
jae
and
scas
xor
inc
nop
dec
neg
in
cmp
mov
cmp
arpl
dec
cmpsl
and
std
pop
jbe
ds
jp
inc
test
loope
push
cs
xchg
push
inc
jns
lds
cld
cmp
cmp
mov
jne
jl
jae
sub
divl
int
inc
fcom
iret
pop
mov
leave
sbb
jno
out
fwait
lret
fbld
mov
adc
push
addb
ss
pushf
mov
sub
jle
push
stos
add
repz
and
cli
ja
pop
adc
cmp
ds
outsl
and
xchg
mov
stos
inc
fcomp
and
cmp
sbb
xchg
xchg
or
in
xlat
test
xor
jg
mov
adc
mov
gs
out
jo
fldenv
adcb
dec
or
mov
jge
and
fildll
orb
jae
fdivrs
add
std
pop
adc
push
pop
pop
hlt
mov
das
imul
sti
xchg
das
shlb
jo
jp
sub
mov
int
sbb
cmp
add
test
sub
movsb
cld
rol
push
call
shl
dec
xor
sbb
push
iret
repz
rcll
fistpl
xor
out
jae
aad
cmpsl
or
mov
lret
sbb
lds
lds
and
dec
jg
and
lea
in
loopne
jbe
js
sbb
dec
xacquire
or
cli
mov
adc
pusha
mov
daa
xor
cwtl
scas
mov
inc
popa
sub
lcall
push
lods
scas
popf
push
pop
or
push
push
in
rorb
push
or
into
cmp
xor
stos
dec
xorb
test
jb
out
jle
outsb
fsub
rorb
cmp
scas
loop
fildll
dec
sete
inc
sbb
dec
add
push
mov
push
and
aad
cmpsl
mov
jne
jne
fidivs
or
lea
movsb
xchg
mov
aas
inc
cld
push
lds
xor
das
loopne
notl
xor
aas
nop
mov
lock
push
jno
loope
mov
lahf
andl
cld
cld
xchg
lret
or
and
push
xlat
lret
lods
insb
cltd
data16
fidivrs
sti
mov
adcl
lods
sbb
jg
cltd
in
inc
sub
push
inc
add
sub
fwait
add
es
mov
adc
add
sub
cmp
aad
jnp
ss
mov
daa
js
mov
mov
cmp
xchg
pop
push
pop
push
push
js
int3
repnz
je
leave
mov
rorb
cmpsb
sar
dec
inc
idiv
push
into
dec
sub
fidivrs
mov
mov
es
sbb
nop
dec
ficoml
jno
ja
loop
add
jno
lea
mov
push
cmpsl
stos
aaa
loope
test
xchg
sbb
xchg
fisubrs
scas
ffree
dec
jp
je
inc
rcll
lods
arpl
mov
call
adc
stos
pop
or
mov
scas
mov
mov
ret
or
jmp
pop
fistps
leave
and
scas
nop
fsubs
push
sub
cmp
adc
xchg
push
inc
pop
pop
stos
cvtps2pd
repz
pop
enter
call
adc
push
mov
clc
jae
jb
je
jle
out
xchg
iret
bound
out
pop
in
or
xor
pop
stc
sub
inc
pop
lea
sahf
mov
shll
jle
sub
pusha
mov
jp
mov
cli
aam
mov
jp
wbinvd
loopne
out
loopne
leave
adc
ret
xchg
mov
arpl
xor
test
add
or
call
cmp
jmp
cltd
cmpsb
mov
fldenv
fdiv
ret
hlt
insb
lahf
mov
cs
pop
cmpsb
sub
adc
xchg
repz
and
pop
je
dec
jge
sub
aam
or
or
stc
mov
mov
and
loopne
adc
das
mov
pushf
inc
cmpsl
xor
add
cmp
dec
iret
and
push
jg
mov
add
jb
fs
mov
push
frstor
sbb
jmp
jp
aaa
adc
mov
or
and
push
cmp
in
cmpsb
into
lahf
add
sub
sub
mov
pushf
mov
add
lret
adc
push
xchg
int3
xchg
mov
mov
sahf
ja
aad
xlat
sbb
cmpsl
lods
mov
loope
rclb
xchg
sub
sbb
cmpb
jge
dec
std
add
add
push
and
nop
sub
mov
mov
pop
loopne
ret
dec
adc
cmpsb
cmp
scas
in
add
cli
add
xchg
call
aas
cmc
jne
mov
bound
nop
outsl
scas
mov
cmp
xchg
sti
sbb
push
xchg
out
mov
pop
xacquire
imul
sbb
mov
jge
lret
pop
push
jo
mov
add
daa
sbb
sti
addb
dec
insl
jbe
cmpsl
jmp
pop
jge
cmp
cmp
sub
fdivs
imul
xlat
int
fnstcw
push
and
and
adc
int3
setno
arpl
int3
push
lret
js
fwait
mov
jnp
lea
cmpb
add
aam
or
rclb
xor
stc
mov
jecxz
fs
cli
enter
outsl
dec
inc
ret
jno
mov
add
cmc
prefetch
or
loopne
sbb
or
xor
lahf
lock
in
push
mov
ss
js
aam
stc
pop
ja
dec
cmp
insl
xor
icebp
pop
dec
jo
outsl
cmpsb
stos
popa
ljmp
mov
fisubl
scas
xor
or
mov
and
jp
sbb
outsl
or
adc
int3
js
aaa
jno
fldl
fisubrl
and
dec
xchg
mov
push
sarl
push
mov
adc
cmp
mov
cmc
mov
scas
cld
jns
imul
fldt
sub
xlat
jno
inc
mov
add
and
push
roll
mov
add
or
xchg
imul
adc
gs
lcall
add
adc
loopne
mov
push
std
ljmp
mov
inc
lret
xchg
pop
imul
pop
test
mov
out
aaa
je
repnz
and
jb
and
call
cs
cmpsl
stos
ds
movsl
push
mov
insl
rorb
ljmp
scas
leave
pop
mov
sarl
cmp
in
pop
xor
clc
call
mov
xchg
inc
outsb
gs
adcb
jg
enter
dec
insl
and
aad
in
leave
mov
enter
jno
adc
xchg
push
jae
cmpsb
cltd
xor
jecxz
sbb
adc
lds
inc
les
outsl
in
je
mov
sti
jnp
fwait
adcl
mov
out
loopne
dec
inc
mov
adc
xchg
mov
push
pushf
loop
int3
lods
add
and
ljmp
test
inc
mov
mov
cli
cs
dec
outsl
push
xchg
pop
je
es
pop
stos
lods
mov
cmp
cmp
cmp
int
jno
in
aas
lcall
cmp
lds
adc
negl
cmp
sahf
and
mov
add
fsub
mov
dec
clc
into
pop
jge
outsb
jmp
push
aad
aad
test
or
scas
inc
push
popf
inc
loop
sub
cwtl
and
bound
jmp
dec
pop
mov
add
cwtl
add
sbb
push
lods
sahf
sub
sbb
jne
fsubs
loope
or
xchg
jnp
movsl
cmpsl
mov
xchg
rcrl
mov
inc
xor
pop
enter
cmc
and
es
lret
test
jecxz
imul
dec
mov
jp
mov
inc
xchg
shll
or
inc
std
jecxz
icebp
jp
es
sbb
sub
mov
pop
cmpsb
int3
movsb
xchg
jp
sbb
jp
cmp
pcmpeqw
sub
pop
sahf
dec
cmp
lret
pop
adc
and
stos
test
inc
sbb
mov
dec
mov
mov
mov
ds
rclb
insb
std
adcb
ficomps
jmp
pop
lock
sbb
pop
sbb
int
lods
jb
loopne
sbb
jl
bound
sbb
mov
mov
in
push
aam
std
or
and
mull
das
sbb
fcompl
push
orb
mov
mov
movsb
notb
xor
xchg
dec
or
sahf
pusha
pop
loop
pop
lds
data16
lds
sub
mov
xchg
xchg
mov
insb
imul
ja
adc
fistpl
mov
adc
pop
cmp
mov
icebp
push
lods
cmc
mov
jge
and
jle
cmp
sbb
cld
lea
ds
rorb
pop
adc
repnz
push
insl
cwtl
push
mov
stc
xchg
out
inc
xor
sub
push
out
add
sub
mov
xor
in
push
lods
mov
stc
rcll
jmp
idivl
int3
add
mov
insl
fs
or
adc
les
xlat
mov
fwait
ret
cltd
push
xchg
and
push
loope
icebp
js
pusha
jo
scas
cltd
push
mov
mov
cmp
int
adc
jae
aaa
sub
mov
or
ficoms
jg
je
jo
xor
fildl
int
gs
movb
pusha
add
inc
arpl
loope
xlat
out
shr
hlt
xchg
clc
adc
out
div
in
jne
mov
mov
jp
adc
and
flds
out
pop
je
dec
pop
and
cmp
js
adc
sub
push
pop
out
mov
jb
mov
fistl
in
in
xchg
mov
lahf
cmp
into
hlt
xor
sarb
mov
xchg
out
add
pop
ds
jns
pop
cmp
adc
cmp
dec
mov
mov
ret
movsl
mov
add
rolb
out
jnp
pop
cmp
jbe
cmc
hlt
aam
jg
shll
pop
ljmp
ljmp
fs
iret
scas
lahf
jae
fisubs
push
jmp
ret
inc
lret
xchg
not
int3
subl
mov
enter
jo
inc
adc
mov
fdivrl
push
push
jg
movsb
mov
xchg
xchg
sub
jp
dec
sarb
push
push
les
dec
mov
cmp
icebp
test
push
cs
test
cmp
orl
mov
xchg
lea
xchg
cmp
int3
rclb
sarb
xchg
stos
test
inc
outsl
mulb
mov
out
xchg
mov
scas
jbe
ud0
cwtl
movsl
aas
das
outsb
xlat
jge
divl
adc
mov
mov
jg
push
testl
lret
mov
jb
pop
sti
out
push
pop
mov
push
cmpsl
mov
mov
scas
inc
jmp
dec
push
les
rol
or
push
or
iret
addr16
sub
xchg
test
addr16
xchg
jno
cs
or
clc
cmp
imul
les
pushw
insl
popf
xchg
repnz
lret
and
shl
cmp
out
sti
incb
not
cwtl
mov
pop
das
mov
jge
pop
out
mulb
lcall
popa
adc
and
and
fs
xor
aam
push
pop
fidivrs
rorl
repnz
mov
push
orl
adc
fwait
mov
jbe
and
outsl
xchg
sub
dec
inc
mov
stos
imul
mov
dec
and
add
mov
fwait
test
psadbw
incb
pop
outsb
sub
xchg
dec
mov
sub
shll
je
add
mov
mov
mov
push
int3
or
sbb
sarl
pop
pop
add
stos
dec
xchg
inc
sub
rcrl
and
clc
cld
mov
out
subb
xchg
cld
stc
mov
sub
pop
outsb
mov
test
xchg
nop
aas
pop
cmpsb
add
pop
leave
cs
out
je
xor
sub
xchg
add
sub
cwtl
mov
into
or
dec
stos
out
call
or
roll
sti
jbe
or
shrb
sub
add
jp
jns
xchg
sub
fdivrs
fidivrs
mov
mov
mov
sub
xor
xor
cmp
cmp
cmp
pop
cmp
adc
jb
es
ficoml
scas
ffreep
sub
test
xor
scas
into
int
jb
inc
movsl
jnp
dec
adc
jecxz
push
dec
xlat
lahf
push
adc
aas
pop
scas
sbb
pop
rcll
push
and
into
imul
inc
cltd
mov
test
and
dec
hlt
inc
or
xorb
outsb
dec
daa
dec
pop
jae
aas
inc
xchg
gs
push
jno
inc
push
xchg
jmp
fsub
pop
xor
xchg
fnstenv
and
adc
or
stos
push
pop
dec
xchg
lahf
mov
adc
xchg
loop
cwtl
sbb
movsb
dec
push
adc
mov
scas
nop
in
ffree
lret
pop
roll
shlb
dec
aas
jl
and
insl
cmc
dec
repz
mov
add
xor
pop
jb
cmp
dec
push
int
inc
enter
ret
mov
push
int
cwtl
les
test
pop
imul
inc
int
cmp
ret
adc
in
daa
pop
mov
mov
jbe
rorb
scas
insl
in
pop
push
inc
pop
sbb
sub
mov
stos
xchg
out
pusha
mov
scas
icebp
jne
sbb
enter
adc
out
clc
pusha
fnsave
or
push
push
addr16
arpl
ret
test
sbb
xor
add
cmpl
imul
sti
xchg
insl
leave
inc
fwait
xchg
mov
jg
adc
lds
ljmp
cs
or
pusha
mov
push
iret
push
aad
xor
fildll
mov
push
xlat
sbb
dec
or
and
fisttpl
mov
arpl
fisubrl
mov
loopne
insb
adc
movsl
and
mov
repz
add
and
test
stos
xchg
aam
imul
in
push
mov
xor
pusha
cmpb
jmp
mov
jge
mov
pop
lahf
mov
lret
push
mov
imul
iret
inc
and
jnp
mov
leave
nop
jmp
and
mov
xor
int
ja
in
add
sarb
insl
xor
notl
jl
pop
bnd
lcall
adc
jl
test
dec
add
rcl
cld
inc
cmp
int3
push
cmp
stos
lret
push
push
outsb
test
fcmovnbe
add
std
inc
sbb
mov
ret
into
movb
inc
repz
popf
mov
aam
test
mov
cltd
cmpsl
mov
popf
outsb
sar
fldenv
in
out
imul
jge
jecxz
jb
add
pop
aas
sarl
and
dec
js
scas
push
imul
sub
dec
sahf
push
xchg
cmc
loop
outsb
fistpll
test
cli
sub
sub
rcr
adc
dec
lods
in
int3
cs
inc
jns
pop
pop
xor
lcall
in
pop
dec
dec
stc
inc
cmp
and
into
fs
shrb
inc
sbb
cmp
fxch
repz
clc
mov
sbb
movsl
push
mov
or
out
nop
pop
jge
mov
arpl
adc
lret
push
pop
jge
adc
mov
into
push
jle
push
inc
clc
fldcw
fiaddl
or
aas
push
pop
dec
movsl
mov
and
sbb
mov
lret
lock
jne
inc
out
scas
jmp
test
xchg
push
test
sahf
faddl
stc
push
test
adc
mov
xor
adc
jle
pop
or
mov
pusha
push
xlat
push
push
sub
clc
mov
mov
pop
lret
pop
pusha
jg
mov
out
scas
mov
jns
jmp
sub
add
xchg
imul
imul
and
fs
sbb
mov
ret
mov
mov
pop
fs
loop
in
inc
mov
jle
jne
fs
or
enter
cld
xchg
test
int3
or
out
pushf
test
repnz
add
aad
and
rorl
sub
jne
or
mov
mov
sub
xor
or
fldt
inc
cmp
and
add
in
sub
dec
and
push
or
iret
pushf
xor
aad
popa
leave
xor
cmpsl
fidivs
add
ljmp
mov
push
mov
mov
mov
rcl
mov
and
pop
push
fdivp
cli
sub
das
cmp
mov
sub
popa
and
and
into
pop
daa
pop
mov
pop
xchg
cmp
sbb
out
pushf
adc
adc
xor
mov
outsl
add
leave
sub
pop
roll
mov
dec
sbb
cmp
push
insl
repz
aad
mov
xchg
loopne
cs
cs
pop
inc
stos
xorb
jns
fists
scas
pop
sti
jne
lret
lea
les
lret
popf
sbb
or
inc
fldl
jo
mov
jno
sub
loopne
mov
jne
mov
pushf
mov
repz
test
push
incl
shlb
mov
fsubr
add
idiv
scas
xlat
inc
and
xchg
fidivrl
xlat
data16
faddl
jmp
and
jae
enter
push
mov
cmp
xor
addr16
orl
in
in
aaa
icebp
cmpsl
fs
stos
lods
jno
repz
popa
rorl
stc
xchg
xchg
mov
loope
cs
insb
ficomps
addr16
and
jmp
dec
jg
aam
sub
insb
inc
dec
push
aam
adc
hlt
scas
mov
addr16
push
hlt
dec
and
mov
pop
cmp
inc
test
or
inc
int
movsb
les
push
jecxz
xor
lret
call
std
sub
xchg
es
repnz
push
dec
push
or
lock
mov
rol
lods
mov
sbb
notb
rcll
ss
cmp
cltd
and
mov
inc
sub
push
outsl
mov
adc
mov
and
in
scas
mov
xchg
ljmp
bound
je
xchg
pop
jmp
mov
lcall
add
ja
leave
adc
das
adc
jmp
lcall
and
movsl
mov
jne
push
orl
aad
xor
cmpsl
add
cmp
movsl
iret
jne
std
xchg
adc
loop
mov
leave
mov
mov
dec
pop
ret
inc
in
arpl
jnp
and
cmpsb
stos
fsubr
mov
popa
or
and
in
std
loop
push
stos
fcoml
sbb
cmpsb
icebp
jns
jmp
mov
cmp
and
add
xchg
sub
scas
jecxz,pn
sub
mov
pop
decl
push
adc
mov
outsb
mov
rclb
mov
pop
dec
pop
and
out
push
push
daa
xchg
mov
or
cmpsl
lods
lahf
sarb
mov
push
xchg
jge
mov
mov
icebp
out
das
or
cld
push
lahf
call
lods
rcrw
xor
mov
insb
in
outsl
movsl
scas
notl
in
push
mov
xlat
sti
pop
cmp
pop
xchg
mov
fmull
out
xchg
nop
les
loope
and
cmpl
mov
push
cli
push
or
mov
daa
lock
mov
push
aad
or
pop
sbb
rorl
or
mov
fistps
and
lds
dec
cmpb
das
aas
sub
and
aas
rol
mov
shlb
jnp
fbstp
incl
pop
dec
mov
aaa
cmp
ficoml
lods
sti
call
push
cltd
push
xor
sub
or
add
push
pop
xor
cs
pop
stos
lods
out
cs
lahf
or
xor
daa
shrl
js
or
push
out
xchg
mov
stos
and
sbb
inc
xchg
imul
shlb
mov
outsl
push
iret
pusha
push
lds
ret
cmp
and
push
push
dec
int
popf
xchg
jae
setbe
js
cs
cmp
pop
dec
dec
pushl
mov
mov
in
mov
insl
pop
jmp
dec
mov
sahf
jl
frstor
cs
test
and
lahf
int3
pop
pop
jnp
int
testl
or
jmp
int
rcll
bound
cld
cli
arpl
mov
jno
leave
dec
mov
loope
out
mov
in
xchg
pop
arpl
int
push
stc
or
mov
adc
mov
icebp
sbb
add
lret
sti
pop
xorl
popf
xchg
adc
lahf
push
add
push
lds
push
inc
pop
adc
dec
and
dec
pop
jne
lahf
sarb
cs
lea
cmp
mov
or
push
addr16
pop
int3
dec
sub
dec
or
stos
jns
cmp
lret
ja
push
subb
mov
scas
and
in
aad
and
or
sub
arpl
pushf
mov
xchg
call
mov
roll
fdivl
push
dec
shrb
sub
adc
lret
and
out
cmpsb
mov
rol
bound
popf
imul
es
aad
int3
xlat
push
push
fnsave
outsb
xchg
cmp
mov
fwait
in
pushf
or
mov
jg
jb
cmp
icebp
fisubrs
dec
aam
cmc
mov
adc
push
mov
mov
fdivl
push
jne
das
int3
push
push
and
cmp
imul
loopne
movsl
loope
adc
ret
testl
add
cmp
xor
arpl
cmp
mov
in
mov
loop
test
pop
jecxz
fstpl
pusha
orb
or
add
ds
mov
pop
push
sahf
clc
lahf
xor
jno
jge
iret
cmpsl
push
pop
cmp
jnp
and
jp
or
mov
push
pop
insb
mov
add
fnstsw
cld
stos
sbb
jne
pop
mov
mov
push
jmp
lds
push
iret
mov
mov
aas
xchg
pop
scas
movsl
cli
mov
xchg
sbb
insb
mov
sbb
push
adc
mov
xor
in
pushf
push
dec
bound
xlat
pop
push
add
jae
pusha
mov
fsubs
out
mov
bound
adc
in
xchg
pavgw
test
scas
fildl
lret
add
insl
cmp
pusha
and
xor
jmp
cld
fsubr
imul
xlat
jnp
notb
fstpl
and
mov
jmp
and
pusha
mov
mov
mov
pop
xchg
push
add
xor
and
xorl
lock
fdivl
shrl
lcall
mov
clc
push
js
fdivrs
pop
dec
adc
ss
mov
dec
pop
adc
xchg
and
iret
loop
in
lret
and
xlat
mov
lcall
cmpsl
fwait
mov
push
inc
add
dec
dec
lahf
repz
ss
mov
sub
cmp
lret
mov
sbb
ja
jno
in
dec
mov
mov
imulb
xor
push
movntq
out
sar
lea
xchg
fcompl
insb
fmul
jmp
dec
imul
jne
sbb
sti
adc
jmp
mov
gs
inc
popa
fwait
lock
je
pop
shll
les
inc
inc
call
out
add
and
adcb
inc
ds
pusha
inc
mov
xlat
fldt
cmpsl
pop
mov
daa
cmpsl
cmp
jno
pop
add
push
pop
xchg
aas
push
inc
jle
nop
jns
ficoml
cmc
mov
jmp
stos
sub
cli
mov
inc
inc
int
ret
sti
mov
outsl
divb
outsl
sbb
inc
add
mov
cltd
inc
shlb
jg
setle
jns
pop
daa
xorl
jle
rcll
xchg
add
gs
shrl
ds
pop
and
outsb
lahf
mov
mov
iret
pop
in
mov
lahf
aaa
cmp
or
pop
cmpsb
leave
scas
cs
ljmp
add
add
lods
jge
movsl
sbb
fstps
fs
dec
je
inc
lds
pop
outsl
mov
loopne
jo
mov
addr16
in
loop
pop
cmp
movsl
aaa
jnp
cwtl
std
arpl
in
sub
pop
push
and
scas
sub
jecxz
sub
sarl
sub
jle
cmc
js
out
jb
add
lock
ret
rcrb
insl
dec
outsb
movsb
adc
incb
in
mov
mov
repz
lock
lret
inc
out
sbbl
fimull
sub
jns
or
xchg
ret
andb
sbb
or
sub
sbb
sahf
add
rcrb
mov
inc
inc
mov
mov
sbb
xor
popa
andb
cltd
stc
sarb
es
out
adcl
push
pop
mov
rcrl
testb
pop
dec
scas
cmpsb
scas
sarb
mov
sbbb
test
adc
xchg
test
stc
jb
loopne
jp
iret
sbbl
jle
into
and
xchg
pop
in
je
xor
sub
shlb
insl
or
jne
push
std
cmpsb
std
into
cltd
push
lock
fsubp
cld
inc
jmp
pop
cmpsb
mov
arpl
into
mov
andl
int
pop
jns
ret
jns
rsqrtps
test
push
addr16
lcall
xchg
adc
add
pusha
and
cwtl
xorb
cmp
sub
jp
push
mov
js
addr16
arpl
icebp
inc
pusha
das
mov
cmc
addr16
gs
gs
and
or
leave
sbb
or
sahf
sti
mov
int3
jle
insb
sbb
imull
andl
lahf
lds
dec
cmpl
inc
or
inc
or
dec
dec
fnsave
arpl
arpl
repz
mov
cmp
je
loop
cmp
jge
push
cmp
int3
and
pop
mov
orb
add
inc
jns
add
pop
divl
imul
addr16
xchg
in
cmp
inc
xchg
int
mov
nop
es
cmp
or
add
pop
push
pushf
in
sub
push
inc
jae,pn
dec
test
inc
ss
stos
shlb
inc
ja
stos
mov
in
push
cmpsb
add
stos
sbb
mov
inc
cmp
repnz
sub
aaa
xchg
mov
xchg
out
mov
xlat
adc
xor
dec
imul
lcall
filds
cmp
imul
pop
mov
jl
cmpsl
pop
and
divl
pop
dec
mov
or
lret
stos
pop
aaa
sti
pop
test
test
imul
ja
mov
inc
xchg
inc
fiaddl
insl
imul
lods
mov
hlt
mov
push
push
bswap
inc
push
or
xorb
mov
pop
daa
push
sbb
fwait
cmc
test
leave
addr16
jp
cmp
pop
in
mov
pop
cmc
mov
mov
into
pop
clc
jle
xor
adc
aam
push
wbinvd
mov
into
pop
dec
sbb
stc
roll
mov
mov
jge
push
sarl
and
adcb
fdivl
adc
mov
frstor
lods
xchg
or
mov
add
cmp
xchg
shlb
sub
mov
mov
jg
cmp
mov
mov
ja
imul
imul
scas
or
add
stos
in
mov
xchg
jbe
cmp
pushf
sbb
mov
lahf
stos
mov
jnp
out
push
sbb
sti
or
gs
clc
test
lds
and
insl
nop
or
jmp
mov
adc
add
cmp
adc
testb
lea
imul
add
sbb
inc
mul
je
test
cltd
sub
jne
popf
sub
cmpsb
sub
aaa
lods
dec
call
data16
add
fxch
dec
dec
and
addr16
in
jle
sub
icebp
loopne
shlb
in
cmp
inc
adc
mov
xor
nop
aad
pusha
inc
jecxz
push
sti
jmp
sbb
insl
dec
add
leave
sub
out
xlat
pop
push
jb
inc
sub
pop
mov
push
cld
lods
add
rcl
jbe
and
add
cmp
lret
leave
pop
out
mov
daa
push
xchg
push
add
dec
and
xor
mov
sub
mov
test
movsb
insl
or
mov
stos
or
test
out
dec
push
shrl
test
dec
test
outsl
lret
lea
dec
pop
push
ret
mov
iret
mov
cs
inc
cltd
fcomps
ss
add
cmpsl
and
les
andl
xor
repnz
mov
jl
xchg
pop
scas
dec
mov
sbbl
jge
lcall
test
lahf
sahf
popa
outsb
or
test
jecxz
and
sbb
push
mov
cld
adcl
mov
mov
sbb
mov
cmpl
scas
outsl
icebp
push
scas
xor
stc
pop
fldenv
int
mov
push
stc
pop
ffreep
jno
jb
push
xchg
push
or
test
xor
rclb
sbb
sbb
jno
pop
and
repz
lock
push
mov
testb
inc
dec
and
pusha
xchg
adcl
mov
add
aas
arpl
mov
and
fbstp
inc
outsl
sti
xor
icebp
sbb
pop
push
inc
nop
dec
loope
mov
push
das
xor
jne
xchg
lods
add
jno
inc
dec
sarl
cmpb
xchg
insb
cmp
sbb
fcmovnu
and
or
push
push
loop
ror
dec
push
sbbl
loop
xchg
in
xchg
sbb
jbe
cltd
inc
pop
pop
lahf
lret
scas
jo
mov
pop
lea
out
sbb
jbe
adc
inc
mov
xchg
icebp
pop
push
iret
xor
push
xchg
out
sarb
pop
inc
imul
pop
jne
adc
sub
mov
fcompl
dec
leave
sub
das
jb
lods
add
inc
pop
cld
sahf
pop
lahf
pop
jle
fxch
adc
cmc
lds
lods
shrb
call
xchg
imul
jbe
jecxz
jb
les
ret
pop
xor
inc
pop
repz
adc
adc
dec
pushf
in
mov
sahf
mov
das
dec
mov
jmp
push
add
lea
push
int
lock
fistl
add
movsl
adc
or
push
add
dec
js
adc
cmp
or
iret
add
inc
cmc
mov
cmp
or
dec
sub
add
and
xor
repnz
pop
mov
das
in
mov
xor
gs
pop
ficompl
jae
dec
and
shl
sub
int
insb
sbb
sarb
inc
inc
mov
jae
sbb
scas
arpl
fisttpll
push
repnz
aam
test
mov
pop
sbbl
movsl
lahf
outsb
popa
leave
mov
bnd
adcl
ret
and
in
hlt
push
lock
jnp
xchg
shll
adc
mov
xchg
mov
mov
sub
xchg
jecxz
adc
shl
fnstenv
adc
movsb
addb
sub
mov
jb
insl
add
and
sub
out
int
xchg
cmp
xchg
push
ret
ret
ja
mov
adc
ret
pop
xchg
xlat
dec
ss
lret
xchg
shlb
cld
add
insb
xlat
cltd
sbb
jle
lods
adc
push
mov
pop
into
or
jb
out
lahf
nop
loop
jmp
cmpsb
mov
mov
sub
push
shrl
push
xchg
fisubrl
fadd
loope
lret
mov
or
dec
flds
adc
mov
pop
roll
pop
imul
xchg
jecxz
or
jmp
ret
mov
xlat
and
or
jge
aaa
out
and
push
cmp
adc
mov
adc
ja
push
cmc
je
outsb
xchg
push
sahf
lret
ror
inc
or
shl
out
sbb
insl
mov
dec
out
mov
inc
xor
in
xor
cltd
in
int3
stos
xor
insb
icebp
sub
faddl
movsb
stc
lret
ss
ds
adc
int
mov
sti
pop
lcall
out
mov
pop
mov
jle
push
adc
pop
adc
clc
in
add
in
inc
push
leave
mov
push
pop
sbb
xor
mov
add
fstl
outsl
fstl
cmp
sbb
adc
fisubl
add
jo
lea
xchg
or
icebp
xor
stos
dec
pusha
shld
jb
icebp
sub
arpl
jl
out
test
sub
stos
jmp
andb
gs
cli
scas
add
popf
jg
cmp
add
xchg
jno
aad
icebp
sbb
xlat
mov
inc
xor
cltd
jmp
mov
ret
sbb
int
push
inc
ficompl
mov
clc
sbb
in
push
mov
jns
sti
jl,pn
addb
lcall
popa
push
mov
jb
xor
jmp
pop
push
adc
loopne
int
mov
jo
pop
xor
sub
jp
inc
pushaw
sti
lods
jno
popa
pop
in
jae
pop
ret
sub
mov
repz
divl
insl
jne
repz
rorb
in
fimuls
shlb
movsb
xchg
movsl
push
dec
mov
xor
inc
dec
fsubl
loop
popa
data16
mov
leave
add
fists
inc
jb
aas
cmpsl
es
dec
enter
cmpsb
clc
sub
mov
xchg
ficoms
sub
dec
js
and
in
push
sub
in
dec
push
out
sbb
dec
aas
mov
jae
sbb
loope
inc
lock
cwtl
mov
lahf
dec
sub
ficoml
sti
cmp
loopne
insl
mov
daa
sub
sub
cmp
ficompl
sub
fnstenv
mov
cmp
aam
sub
movsl
add
daa
pop
add
and
cmp
mov
in
mov
enter
push
and
es
std
push
dec
push
jmp
sbbb
test
inc
xor
and
lret
xor
jmp
pop
add
popa
negl
cs
fsubl
sbb
lock
out
add
push
cli
in
sub
cltd
test
arpl
fs
std
leave
testb
push
popf
sbb
lods
ja
mov
lahf
xor
cmpsb
loop
loopne
mov
xlat
sbb
jnp
sbb
or
mov
loope
aaa
lahf
clc
xchg
or
adc
and
mov
inc
and
fimuls
sbb
popw
lods
fwait
call
mov
and
rorb
stc
dec
mov
ret
jle
sarl
mov
mov
xor
aas
adc
fists
mov
cmp
filds
andl
and
loope
jle
push
in
icebp
add
imull
ljmp
cmp
dec
adc
adc
stos
bound
push
push
mov
icebp
pop
pop
mov
mov
pop
mov
inc
push
cmpsl
jle
cwtl
adc
in
dec
or
test
out
js
adc
sarb
adc
xor
cli
in
cli
aas
repz
jbe
sbb
push
ret
hlt
mov
jmp
sub
cmp
add
add
cmpsl
jae
and
pop
and
cmpsl
dec
das
xchg
fdivl
push
push
pushf
dec
stos
push
fnsave
jae
sti
mov
aaa
insl
cmp
dec
mov
repnz
inc
into
repz
ret
jmp
mov
jp
jp
pop
jbe
push
andb
std
in
cmp
lds
test
sbb
lcall
dec
stc
enter
inc
mov
mov
and
decl
scas
push
inc
fcomip
clc
pop
insb
push
pop
xor
inc
js
adc
daa
pop
pop
jnp
movsl
sbb
dec
ret
mov
test
mov
cmc
push
outsb
inc
or
int
pop
aaa
mov
into
aaa
lock
xchg
dec
loop
jae
pop
xor
or
fwait
mov
push
mov
inc
xor
fdivrl
pop
jg
out
cmp
inc
int
or
and
pop
xor
xchg
in
mov
sbb
test
add
or
jnp
pusha
sub
mov
adcb
shrb
jp
outsb
jg
inc
insb
bound
mov
dec
call
inc
sub
outsb
fmull
mov
sbb
and
mov
mov
je
das
cmp
int
pavgw
popf
in
inc
in
push
in
jl
cmp
mov
test
inc
test
inc
sub
mov
and
popf
fisttpll
shl
jmp
jb
lcall
inc
dec
addl
xlat
push
sahf
les
and
mov
lods
int
adcl
stos
jp
push
movsb
mov
pop
repnz
pop
icebp
pusha
push
xlat
add
pop
jb
mov
add
mov
inc
pop
loop
pop
movsb
outsl
dec
pop
xchg
and
xchg
pop
das
test
jbe
push
xchg
cmpsb
test
push
add
dec
pop
bound
mov
dec
and
add
paddusb
adc
aas
push
mov
ret
in
sti
loope
outsl
sti
xor
insl
je
cmpsl
out
icebp
je
mov
idivb
mov
fwait
loopne
cmpsb
sub
adc
jo
mov
jge
or
jge
xchg
das
nop
iret
sbb
pusha
in
imul
jns
mov
inc
cld
pop
cwtl
or
aad
stos
sub
std
aad
sub
or
testl
xor
sbb
mov
add
aam
lds
sarl
push
rorb
or
mov
xor
shrb
aas
jb
movb
fcoms
sbb
les
cmp
xor
inc
and
mov
or
pop
arpl
comiss
mov
jl
push
inc
out
adc
mov
mov
dec
pop
xor
ja
in
in
and
pop
ja
jecxz
mov
incb
xor
movsb
pop
mov
mov
andb
hlt
addr16
dec
dec
mov
lods
jmp
ror
popa
stc
dec
testb
add
jne
sti
mull
push
xor
mov
push
sarb
add
inc
fcmovnbe
mul
rolb
xchg
inc
adc
mov
sub
fisttpll
jo
loopne
sub
add
adc
inc
dec
lds
mov
mov
insl
inc
and
or
mov
xchg
icebp
test
dec
ror
rorb
and
mov
mov
inc
mov
push
mov
jl
jmp
mov
pop
and
inc
pop
outsl
stc
ret
jg
lock
pushf
adc
sar
mov
mov
pop
jns
mov
dec
repnz
jbe
fadds
jbe
jp
testl
shl
ficomps
clc
negl
pop
cs
imul
pop
pop
fisubrs
sbb
push
xor
dec
ficoms
test
out
or
dec
sub
jne
rorl
and
pushf
pop
andl
aas
cltd
cld
shl
hlt
fiaddl
cmp
sahf
adc
adc
or
fdivr
iret
dec
pop
stos
and
jmp
int
jecxz
notl
jg
movsb
push
pop
sarl
test
scas
and
sbb
sub
fwait
lea
stc
cld
xchg
leave
sarl
add
add
clc
std
mov
popa
addl
jo
xor
insl
into
jns
mov
pushf
jecxz
or
js
mov
cmpsl
xchg
fcmovu
or
inc
aaa
je
adc
jmp
repz
lahf
jns
imul
iret
xchg
stos
xor
sub
stos
jae
xlat
outsb
in
xchg
sub
aas
addr16
sbb
sbb
and
mov
rorb
jl
ret
loopne
push
mov
add
adc
pop
or
push
cmp
add
mov
in
gs
sub
aas
clc
leave
popa
popf
mov
test
adc
test
cli
xchg
pop
lcall
out
push
or
fstpt
nop
fmull
leave
repz
sub
add
loop
xchg
sub
pop
mov
cmp
test
mov
in
adc
push
pop
mov
movsb
xor
adc
mov
int
jge
or
pop
xor
shlb
or
leave
hlt
fcomi
insl
test
sub
mov
insl
add
mov
loopne
movsb
pop
enter
adc
stc
out
cwtl
jl
cmp
cmp
inc
xchg
mov
js
out
orl
test
jmp
jnp
aam
aas
and
mov
mov
dec
cmp
mov
loopne
dec
scas
nop
inc
cli
ja
xchg
in
imul
movups
xchg
les
dec
push
repnz
xchg
rcll
test
xchg
xchg
cmp
pop
xor
aad
add
ljmp
cmpb
stos
jp
mov
ja
popf
and
and
scas
sbb
orps
into
jae
mov
and
add
data16
mov
adc
dec
and
popa
xchg
push
mov
popa
mov
mov
scas
push
or
bsf
mov
sub
insl
aas
aam
jnp
push
loopne
fsts
fistl
rcll
xchg
lahf
mov
pop
and
imul
sub
and
ret
sub
xchg
ficoms
pop
cmp
enter
inc
mov
or
dec
incl
jb
dec
lods
loopne
cs
mov
loope
mov
loope
mov
leave
xchg
hlt
xlat
sbb
mov
insl
and
push
test
xchg
dec
hlt
leave
fucompp
adc
in
sti
inc
push
iret
push
and
jne
pop
xchg
in
push
fldcw
idivl
and
stc
lahf
push
addr16
je
mov
lods
icebp
cmp
mov
mov
sub
aam
cmp
cmpsl
cmpsl
inc
dec
cmp
out
popl
sbb
inc
fildl
jmp
push
pushf
push
out
aaa
daa
cmc
imul
or
and
addr16
cmc
inc
bound
mov
add
and
les
sbb
mov
mov
call
push
xchg
mov
out
imul
and
sbbb
mov
fimuls
or
shl
ficomps
fwait
aad
jns
xor
push
ja
and
ds
imul
and
test
in
inc
jle
mov
es
mov
sub
cltd
xor
xchg
mov
fsub
fisttpl
push
and
adc
into
andb
xorl
fs
inc
nop
cld
dec
xor
int
jne
dec
xchg
adc
jp
mov
sahf
inc
pop
push
sub
cmp
scas
xchg
fs
inc
jl
mov
loopne
dec
insb
xor
push
jno
repz
imul
hlt
mov
cmpsl
mov
mov
data16
negb
pop
ja
adc
cwtl
es
lods
loopne
adc
je
addb
jg
push
mov
lret
jo
flds
sbbb
cmp
out
scas
fdiv
test
lret
xor
adc
repnz
push
loop
movsl
mov
cmovge
arpl
lcall
or
cmp
stos
in
mov
xchg
lret
jmp
icebp
shrb
push
ret
ja
jo
rcrb
leave
mov
push
shll
idivb
je
repnz
sbb
cltd
cltd
stos
adcl
cmpsb
dec
adc
scas
lds
in
in
xor
rorb
popf
test
and
mov
in
sub
add
rorl
gs
adc
nop
movsl
push
mov
pop
xchg
pushf
mov
pusha
add
inc
pop
loop
cmp
and
and
mov
insl
fisubrs
add
fstp
sbb
dec
mov
subl
mov
popa
sbb
cmpsl
and
loop
in
movsl
popa
cld
mov
sar
jge
imul
mov
jae
dec
lret
iret
xor
pop
mov
cs
push
or
das
neg
data16
arpl
and
dec
int
decb
or
push
scas
icebp
pop
addl
aad
loope
daa
in
sbb
imul
popf
dec
clc
mull
subb
or
loope
jns
cmpsl
pop
popf
cmc
adc
fcomps
mov
push
dec
repnz
jb
je
push
sbb
in
push
jp
mov
stc
add
shlb
test
jae
fists
jg
or
nop
loopne
inc
iret
mov
mov
fldcw
into
repnz
push
sbb
fs
adc
sub
sbb
das
out
loop
cmpsl
mov
add
cmc
mov
jge
add
mov
sarb
scas
movsl
pop
xchg
fcmovu
das
pop
or
insb
test
iret
js
fcompl
sub
push
sub
gs
inc
sub
in
shlb
cmc
adc
jns
push
shlb
or
or
push
xor
nop
addr16
imul
inc
pop
sti
testb
push
mov
push
pop
inc
cwtl
push
xor
dec
inc
jmp
cwtl
scas
insl
ljmp
cmpsb
in
aad
and
adc
or
xchg
inc
outsl
fidivl
jmp
mov
adcl
insb
lods
or
mov
xlat
and
loope
sbb
push
mov
inc
xor
lods
iret
push
sub
or
rol
pusha
fildl
xchg
cs
push
and
sbb
push
sub
xor
daa
pop
cmc
dec
cmpsl
xchg
cmp
ljmp
out
pop
lods
inc
add
push
jbe
and
mov
mull
mov
pop
cs
lret
insl
sbb
jnp
jge
les
or
xchg
ds
push
jbe
shrb
sbb
cmpsb
loop
pusha
mov
ss
sbb
stos
lds
sub
jp
sbb
sub
test
daa
mov
imull
sar
cmp
jl
lret
fwait
mov
stos
push
push
cmc
sub
fs
call
xchg
sbb
aaa
or
add
popa
int3
pop
fwait
inc
mov
xor
sbb
scas
add
mov
addr16
xchg
mov
loope
inc
pop
test
push
jbe
xor
mov
aas
cmp
xchg
sub
sbb
test
pop
or
incb
stc
add
xchg
cli
clc
fsts
jnp
int3
pop
add
repnz
js
iret
pop
test
pop
call
sti
scas
adc
aas
mov
outsl
js
lds
arpl
sub
xor
pop
jg
fidivrs
rorb
icebp
mov
mov
aas
loopne
inc
das
jmp
mov
xchg
xor
adc
sub
ds
sbb
jmp
fst
inc
pop
sbb
sub
ror
xor
mov
out
lahf
sub
sbb
mov
lods
inc
pop
mov
cmpsl
xor
sar
outsb
mov
jo
ja
dec
and
push
xor
sbb
int3
fiadds
fwait
aaa
and
jp
rorl
mov
cmc
cmp
mov
mov
subb
repz
dec
negl
sbb
push
adc
jbe
cs
iret
test
loopne
repz
push
jae
sbb
push
mov
fucomip
pushf
les
xchg
mov
xchg
enter
and
test
xorb
repnz
pop
xchg
xchg
loopne
sbb
pop
jle
jge
mov
mov
incb
in
mov
pop
orl
mov
pop
adc
ret
dec
in
imul
add
dec
int3
dec
dec
mov
dec
mov
pop
arpl
popl
cmpl
mov
sub
xchg
adc
arpl
xor
loop
mov
and
bound
fidivs
sti
inc
dec
clc
push
inc
push
fimuls
xchg
ss
into
jne
or
fsub
testb
xor
cmpsl
popa
cmc
data16
ss
lds
pop
leave
mov
mov
pop
sti
repnz
xchg
inc
xchg
mov
xor
dec
jno
push
dec
lret
add
add
cmpsb
bound
cmp
lods
ficoml
add
and
sbb
xchg
popa
mov
jl
add
pop
idivb
jl
xchg
aaa
int3
cmp
inc
std
jmp
ds
test
lcall
add
xlat
lock
pop
lcall
sub
loopne
inc
pop
scas
loop
inc
cwtl
das
sbb
mov
push
addb
out
jae
sub
imul
movsl
insb
push
jno
hlt
daa
jbe
pop
and
push
mov
adc
bound
hlt
push
sbb
lea
mov
mov
sbb
stos
ja
test
cmpsb
into
rcr
inc
adc
pop
xchg
ds
mov
sub
inc
mov
in
or
or
pop
jecxz
adc
xor
jmp
lds
in
lret
popf
lret
dec
adc
jmp
cmp
nop
push
adc
mov
stc
movsb
in
pop
mov
xchg
lods
jo
xor
pop
aad
lcall
popf
and
in
int
std
or
adc
cmpsl
aaa
insb
call
inc
jg
pushf
pop
std
dec
sub
test
mov
enter
or
adcb
js
mov
jp
jns
mov
lods
or
mov
mov
jecxz
stos
sahf
fstps
inc
mov
fistpll
dec
mov
xor
dec
mov
inc
js
mov
inc
movsl
jmp
inc
int
movb
cmp
lcall
fadd
push
inc
aas
out
cmc
pusha
inc
push
pop
mov
iret
jns
push
shlb
rol
or
mov
dec
mov
fcomi
out
fwait
jl
jns
pop
aam
pop
cmc
fcompl
ljmp
shll
fucomp
mov
add
ljmp
cli
or
popa
outsb
jno
sti
inc
or
xchg
scas
sbb
mov
loopne
daa
push
mov
mov
pushl
fs
out
arpl
mov
sbb
rorb
test
cmp
mov
fidivl
insb
pop
or
xchg
fnsave
ss
stos
push
aam
jg
lds
adc
call
insl
or
mov
loop
adc
out
xchg
cltd
xchg
add
fdivrs
iret
dec
movsb
sbb
ret
rcl
sbb
xor
mov
and
sub
inc
or
fildll
adc
stos
lods
adc
xor
pop
dec
gs
popl
pop
ficoms
xor
push
icebp
pop
in
loopne
jno
cmp
jmp
decb
and
sbb
cli
jnp
or
out
fisttpl
movsb
xchg
add
or
xchg
fisttpll
mov
and
fistl
dec
sbb
dec
pop
test
push
test
iret
xchg
sbb
sub
mov
and
add
add
jno
or
dec
push
cmp
mov
adc
inc
mov
pop
jno
rcll
imul
mov
jge
sbb
ficoml
mov
test
cmp
ret
sub
sahf
fnstcw
or
mov
adc
mov
xor
add
adcb
outsl
outsl
stos
xor
and
fldl
sbb
push
sbbl
pop
inc
adcl
xchg
ret
push
push
rorb
mov
enter
adc
fwait
popl
mov
inc
cmp
xor
stos
loopne
sbb
rorl
ja
inc
cmpsl
inc
sbb
in
in
test
sub
jmp
lcall
sub
hlt
gs
mull
movsl
das
dec
aam
popf
push
xchg
insb
pop
adc
push
inc
sbb
jecxz
ja
mov
dec
jb
jmp
mov
sub
data16
mov
cld
xor
or
fwait
inc
lods
push
cs
sub
mov
aas
addr16
inc
lds
fwait
push
and
fs
xor
ja
popa
sti
mov
xlat
imul
inc
sbb
daa
adc
loope
xchg
in
adc
xor
push
dec
or
es
pop
stc
mov
inc
loopne
sbb
inc
mov
push
or
xchg
sub
xor
dec
xlat
push
push
imul
iret
test
mov
icebp
inc
lods
into
jns
xor
mov
jne
in
add
jg
lahf
std
mov
or
mov
dec
in
mov
xchg
jp
mov
cmp
dec
mov
stc
out
mov
inc
in
cltd
mov
dec
stos
pusha
rorl
push
mov
dec
gs
pop
lods
jle
fsubrp
mov
lret
or
in
cmp
inc
sbb
fimull
dec
dec
fistl
addb
mov
pop
pop
lock
cmp
addr16
adc
pop
in
sub
insl
imul
mov
mov
out
push
pop
cmp
into
adc
and
sbb
je
pop
cmp
loope
fistps
popf
popa
stos
jge
or
fiadds
pop
sub
cli
outsb
mov
inc
or
push
mov
out
mov
mov
jp
divb
sbb
in
pop
enter
lcall
inc
adc
sbb
pop
fucomip
sub
mov
addr16
notrack
in
scas
dec
xchg
push
es
or
mov
cmpsl
inc
xchg
pop
add
pushf
and
jmp
push
lds
sbb
add
cwtl
test
dec
repnz
fldcw
cmpsl
andps
ror
pop
push
dec
ds
pop
sbb
mov
test
mov
jnp
push
mov
stos
nop
jns
adc
outsb
std
aam
sarl
fwait
test
jmp
lock
in
jl
into
cmp
and
es
cmp
push
mov
stc
push
jo
xor
loopne
ds
mov
push
imul
fldt
aaa
sti
aad
call
arpl
and
xor
sub
insb
mov
cmp
xor
pushf
jno
lahf
sbb
cs
inc
shlb
loopne
fwait
pop
mov
hlt
stos
jb
aas
or
and
sub
push
sub
dec
inc
adc
xor
pop
push
pop
jno
or
xchg
adcb
jne
mov
xchg
ja
shl
and
cmpsb
push
jle
pop
inc
sti
mov
fadds
fcom
inc
addl
or
push
sub
mov
jl
push
lret
jbe
lds
jbe
adc
arpl
int3
popf
test
in
lods
outsb
xor
in
adc
mov
jg
dec
mov
or
int
fs
pop
lahf
clc
xor
aaa
push
iret
inc
mov
and
jg
xchg
adc
inc
movsb
movsb
cmp
stos
repz
inc
mov
mov
mov
flds
inc
mov
mov
adc
dec
pushf
ja
dec
push
test
push
mov
cli
xor
adc
test
push
xlat
shrl
daa
mov
loopne
rolb
pusha
jge
mov
icebp
pop
jno
test
or
add
xor
push
fwait
call
dec
out
cmp
sbb
xor
sub
cwtl
add
and
inc
lea
movsl
adc
xchg
mov
cli
and
xchg
je
sub
pop
push
std
push
sar
cmpsl
mov
lods
stos
add
mov
outsb
popa
and
inc
and
jge
and
adc
nop
stos
and
aam
lock
mov
fcomps
les
fcoms
inc
call
rcrb
subl
dec
jle
arpl
jecxz
cmpsl
cmp
mov
xor
fldcw
push
push
inc
pop
lock
xchg
imul
jno
inc
out
lea
dec
loope
loope
mov
loope
push
adc
push
xchg
pusha
add
sbb
add
pop
inc
jle
mov
repnz
pushf
pop
fs
fs
push
mov
shrl
mov
mov
push
test
imul
pop
stc
icebp
xchg
push
inc
cmpb
xchg
into
cmp
out
leave
push
das
stc
sub
jl
push
aam
mov
arpl
lea
test
add
xchg
jle
mov
push
push
iret
and
push
push
out
push
cmp
cmc
mov
cwtl
mov
std
mov
inc
add
flds
jecxz
mov
cmc
pop
leave
dec
pop
das
sarb
pop
add
repz
jns
arpl
call
aaa
ds
mov
iret
cmp
mov
mov
shll
push
cmp
adc
jle
inc
push
lret
stos
mov
and
xchg
cmpsl
or
and
sub
aas
sub
mov
lcall
loope
xchg
or
sbb
into
les
inc
mov
scas
xlat
and
das
cs
or
mov
mov
sbb
mov
and
adcb
popl
addb
aaa
data16
jno
int
jae
and
aam
jns
scas
nop
push
cmp
adcl
flds
jne
idiv
hlt
jg
imul
sbb
push
loope
lea
ds
pop
cmpsl
fiaddl
jb
sub
mov
mov
jae
ljmp
cmp
fdivl
ljmp
enter
insb
out
std
arpl
outsb
cmp
mov
paddd
pop
xchg
negl
addl
stos
xchg
cmp
mov
nop
shll
negb
push
sarb
add
fnstenv
mov
jl
mov
into
mov
add
aaa
std
push
ja
jmp
push
sub
lods
cmp
bound
pop
fadd
cmpsb
outsb
dec
lods
add
lds
sub
ss
imul
and
gs
add
cmc
daa
mov
lcall
out
mov
cmc
ja
xor
dec
push
in
shl
pop
rcrb
dec
sbb
je
aaa
sbb
hlt
ret
clc
inc
mov
and
sbb
push
lock
adc
pop
clc
pop
xorb
mov
jne
push
dec
leave
dec
loop
pop
sub
int3
pop
mov
mov
cmpsl
scas
mull
lods
pushf
int3
cli
lret
ljmp
lods
cmpsl
fisubs
xchg
cmc
scas
enter
cmp
jle
pop
cs
xchg
mov
rcr
icebp
sarb
ret
cltd
out
cmp
out
fidivl
jbe
shlb
sub
outsb
test
xchg
stc
xchg
outsl
xchg
mov
sarl
add
lret
pushf
dec
cltd
pop
dec
and
lea
push
push
xchg
adc
sub
shl
push
and
lret
xor
or
jae
lahf
rolb
xchg
leave
ljmp
fisubrs
or
nop
mov
fdivl
test
xchg
testb
repnz
and
sub
stos
push
sahf
sub
addr16
ret
rcrb
int
adcb
sub
dec
dec
xchg
cmp
es
outsl
gs
xor
lcall
or
fbld
and
std
push
xchg
xor
negb
gs
fs
es
test
mov
imul
out
out
sbb
test
mov
imul
stc
xchg
ret
cmp
in
into
imul
jecxz
or
cwtl
stos
into
or
or
in
outsl
adc
dec
jb
rcll
dec
adc
mov
inc
sti
insb
insb
mov
push
cmp
cs
mov
xchg
mov
push
cmp
sub
mov
and
inc
jg
scas
rcll
hlt
xor
push
into
and
push
lods
incl
inc
xchg
pop
addr16
and
pop
cltd
lock
fists
repnz
mov
nop
jo
jnp
fdivrp
mov
adc
xorl
fldcw
sbb
push
int3
in
pushf
inc
arpl
mov
inc
rorl
cmpsb
rcr
test
mov
fildl
or
jmp
lcall
test
dec
xchg
xor
xchg
lods
scas
cmpsb
pop
maskmovq
testl
cmp
mov
adc
test
mov
dec
andl
xchg
push
xchg
enter
or
pop
jge
mov
neg
xchg
lahf
loop
daa
adc
scas
xchg
scas
into
add
pop
push
cmp
addl
repz
pop
pop
mov
xchg
mov
inc
mov
cmp
lods
fnstenv
mov
xchg
sub
mov
out
xchg
fdivs
sub
mov
sub
in
idivl
aam
cmp
pop
arpl
or
bound
into
sbb
mov
js
add
ret
push
adc
cmp
mov
ret
pop
sbb
mov
push
xlat
and
scas
test
lret
xor
inc
add
sub
lods
cli
sbb
shlb
push
pusha
sub
outsb
cwtl
stos
mov
fisubl
mov
cltd
popa
or
rcl
scas
xor
mov
xchg
movb
iret
cmpb
aas
les
cmp
xchg
fs
fidivs
push
add
mov
jmp
pop
test
adc
int3
jb
sub
cmpsb
test
mov
cmp
sub
cmc
jle
mov
das
cmpsl
pop
mov
dec
inc
aaa
xor
bound
inc
hlt
xchg
test
push
movsb
sti
push
add
cs
outsl
ret
add
cs
mov
aad
xchg
fistl
inc
ds
push
test
push
mov
ss
notb
ja
mov
adc
movsl
out
and
pop
or
std
shll
mov
andb
shlb
push
xchg
and
xchg
mov
fiaddl
jp
lods
hlt
out
dec
out
testl
inc
shlb
popf
fsubs
cmp
or
test
les
sub
out
cwtl
dec
bound
and
in
jecxz
lea
mov
jmp
push
push
mov
enter
leave
sbb
push
out
cmp
leave
loopne
jbe
mov
aad
cmc
fmuls
mov
push
or
jae
sbb
sbb
mov
cmp
add
dec
rorl
sbbl
pop
inc
ljmp
inc
adc
xchg
add
mov
cmp
push
lock
or
xchg
inc
imul
into
stc
fs
loopne
mov
js
lods
jae
or
jge
iret
xor
leave
sbb
xchg
mov
xchg
clc
push
test
xchg
shlb
xlat
push
imul
int3
aam
rorl
test
mov
and
xchg
push
sahf
sahf
jne
jbe
leave
das
inc
push
movsl
lods
push
pop
ja
and
loopne
jge
jp
outsl
adc
les
das
add
sbb
cmp
inc
xlat
cmp
sbb
bnd
fcompl
popf
in
and
test
aam
sbb
xchg
ret
faddl
lea
inc
mov
mov
mov
into
mov
inc
pop
sub
xchg
push
sub
mov
dec
xor
dec
ja
push
sub
orl
sbb
enter
ja
or
push
imul
dec
mov
mov
aas
fcoms
into
nop
gs
mov
lret
test
aaa
lahf
mov
stos
lock
lahf
jns
jge
cmp
popa
pop
test
fdivs
dec
imul
xacquire
hlt
repnz
dec
jb
fldl
sbb
mov
scas
data16
or
aad
mov
stos
jbe
imul
ds
sub
sub
stc
stc
divl
lods
scas
clc
xchg
sub
sub
push
stos
sub
mov
daa
repnz
insb
pop
push
or
xor
jb
push
xchg
fistpll
ja
imul
call
sbb
sub
aaa
data16
cmc
leave
aad
imulb
mov
call
jns
jno
mov
cmp
cwtl
mov
add
das
inc
push
int3
push
mov
enter
add
cld
sbb
js
xchg
sbb
push
cmp
mov
sti
xchg
pop
subb
add
aad
xor
lods
adc
push
push
bound
pusha
cs
out
dec
arpl
or
jp
mov
out
sbb
imul
shlb
jnp
jnp
fwait
aas
test
ret
pop
mov
add
cwtl
das
pushf
sbb
xor
xor
cmp
push
stos
xlat
cmp
mov
push
lret
mov
mov
push
cli
mov
inc
mov
fiaddl
es
xchg
xlat
inc
int
adc
in
add
xchg
pop
mov
dec
jp
cmpsl
test
push
push
jge
push
fnstsw
mov
ja
cmc
bound
mov
xor
insb
rcll
dec
pop
jle
movsl
push
loopne
adc
xchg
mov
adc
xchg
idivl
sub
jle
xchg
shrl
shld
jne
lds
dec
adc
xchg
xchg
out
cmc
loope
out
and
movsb
push
inc
sbb
sub
lahf
push
insl
cmp
pop
inc
notb
pop
ror
pop
iret
mov
xchg
xchg
out
dec
xor
xchg
aam
lcall
dec
inc
or
dec
sarb
jo
cmp
lods
mov
arpl
mov
fcomi
cmpsb
cmpsb
lds
and
mov
mov
rcll
add
loopne
sub
out
jge
pop
jg
into
nop
test
and
jnp
or
aas
imul
rol
popa
fisttps
fisubrl
sub
mov
shl
add
and
xchg
lods
add
pop
pop
imul
jb
icebp
mov
add
cmp
mov
push
sbbl
jns
hlt
push
add
shrl
popf
cmp
icebp
das
aad
xchg
xchg
scas
mov
cmp
int3
jnp
loopne
int
pop
add
pop
mov
inc
loop
call
xchg
ljmp
jmp
out
lods
outsb
out
sti
pop
jne
enter
loope
push
into
roll
jo
xchg
mov
xor
mov
pop
lret
adc
inc
lock
aaa
add
sbb
adc
in
cmp
adc
fldt
sbb
dec
pop
mov
nop
ss
cltd
daa
hlt
icebp
mull
mov
andl
scas
inc
jle
lock
cs
sbb
aas
int
stos
xchg
pop
stos
mov
push
enter
dec
pop
ljmp
sar
mov
jmp
add
pushf
leave
ret
jnp
push
out
shlb
sub
fimull
adc
das
xchg
inc
mov
cld
mov
jle
cmc
std
sub
dec
lret
mov
mov
cmp
jmp
inc
dec
fmulp
inc
mov
push
cld
adc
shrb
jl
xchg
jno
lea
or
out
adc
imul
fisubrl
pop
xor
addl
sti
or
dec
dec
das
pop
jne
inc
sarl
cmp
lds
sbb
mov
enter
jg
aad
and
icebp
mov
fists
mov
lds
mov
rcl
push
push
cmp
inc
int
stos
insl
xchg
pushw
pushf
dec
push
jle
dec
or
cmp
mov
leave
push
jno
or
pop
ds
xchg
out
popl
in
xor
and
sahf
xchg
out
movsb
xorl
cmpsb
add
ret
mov
loopne
fcoms
cld
xor
or
bound
imul
sahf
outsl
adc
fs
add
push
inc
inc
popl
shl
mov
decb
cmp
jae
sarb
outsl
outsb
rorl
mov
notb
insl
fldt
mov
mov
sarb
mov
push
sub
xchg
insb
xor
sbb
in
fistpll
je
mov
mov
ficoms
test
mov
sbb
cmp
sbb
add
leave
jge
je
xor
pop
mov
mov
mov
test
pop
cmp
or
loopne
or
and
popa
sbb
mov
xor
pusha
pushf
dec
iret
loop
xlat
jne
imul
pop
mov
popf
cmp
xorb
mov
xchg
mov
ret
daa
outsb
xchg
pop
popa
pusha
pop
or
mov
xchg
cli
jae
adc
loope
loope
jns
in
xor
sahf
cmp
loopne
mov
jb
or
sbb
fwait
in
mov
in
insl
mov
mov
xchg
test
ficomps
jo
rclw
movb
int
jb
cmp
push
sti
adc
loope
jl
xor
inc
aad
push
pop
inc
jg
and
push
fdivrl
roll
adc
loop
sarb
xchg
mov
xchg
pop
mov
pop
mov
movsl
dec
add
fwait
lods
add
cmp
xor
iret
pushf
jecxz
fcoms
mov
lods
dec
or
jge
pop
cmp
mov
dec
test
inc
or
inc
adc
out
dec
cmp
out
jo
mov
cmp
jmp
push
lods
and
ss
mov
and
mov
push
xchg
not
shl
jle
or
pusha
mov
xchg
mov
pop
pop
in
add
pop
outsb
or
or
fisttps
pop
mov
xchg
adc
ficoms
ds
icebp
cmp
fldl
aas
push
cld
fstps
js
push
andb
mov
adc
popa
mov
fidivs
adc
icebp
mov
xchg
cmp
lahf
les
lret
cmp
cmp
pusha
outsb
icebp
out
outsb
inc
insb
cld
inc
mov
xorl
js
rorb
mov
cmp
xor
stos
sbb
xchg
jae
pop
cmp
shl
xchg
cmp
iret
into
push
jg
adc
out
ja
inc
mov
inc
pop
out
enter
mov
ja
idiv
lea
and
cs
inc
ret
fisubrs
out
ljmp
scas
ret
inc
insl
push
punpckldq
adc
sbb
leave
outsb
aam
xchg
shlb
lods
add
sbb
jbe
and
mov
xor
icebp
mov
pop
ja
xor
jl
leave
mov
nop
call
mov
fcomp
movsl
mov
add
repnz
jge
ljmp
lret
sub
sahf
add
mov
pop
cwtl
sub
xor
mov
scas
test
aad
dec
xor
in
or
jecxz
adc
jo
mov
cmp
iret
xor
fwait
xchg
cmp
sahf
pop
push
insl
pop
imul
mulb
repnz
movsb
lea
mov
mov
or
jp
inc
adc
pop
int3
mov
xchg
loop
ret
xchg
lock
jne
jp
mov
rcrb
jnp
lahf
scas
inc
pop
into
jg
fwait
add
push
ss
xchg
insb
jp
and
xchg
xor
outsl
add
test
cmp
mov
sub
sbb
jecxz
push
jecxz
loope
out
lret
xchg
rcrb
imulb
and
mov
pop
addl
and
and
mov
jmp
mov
sbb
insb
adc
js
scas
sub
imul
ret
push
mov
daa
adc
and
popf
lods
test
jle
aas
pop
lock
outsb
pushf
pop
jl
leave
xchg
in
push
lret
xor
fisubrs
pushf
clc
mov
lock
xor
roll
addl
pop
sbb
in
in
sub
xor
jbe
fidivrs
pop
outsb
ss
jns
jb
shrb
mov
repnz
sub
adc
outsl
and
mov
orb
data16
xor
pop
pushf
mov
inc
mov
or
adc
cmp
jge
jecxz
lods
dec
pop
and
aad
jl
sub
pop
or
adc
jmp
xor
cmpsl
lds
scas
stos
sti
gs
mov
sbb
xor
adc
mov
movsb
orl
jnp
push
adc
pop
or
add
lret
popa
push
std
mov
es
test
lret
dec
push
push
ds
out
out
shrl
dec
fistpll
xor
lock
cmp
je
sti
movsb
pop
jmp
dec
mov
lahf
mov
fchs
mov
dec
mov
scas
scas
int
add
ja
cli
push
pop
and
mov
sub
arpl
jne
pop
enter
push
jae
das
mov
dec
jno
jmp
ljmp
ja
sbb
dec
fidivrl
jbe
adc
lret
xchg
pop
push
cs
test
test
add
movsb
and
jnp
mov
sub
dec
xchg
imul
inc
inc
dec
xor
xchg
push
jmp
dec
pop
xor
dec
test
push
add
push
gs
dec
shll
xchg
outsl
sub
js
ljmp
cmpl
sub
sti
notb
mov
ss
mov
xchg
inc
popl
add
mov
gs
ljmp
xorl
sub
roll
pop
add
and
cmpsb
imul
pop
cmp
xchg
imul
enter
and
inc
jbe
cmp
sub
push
bound
cld
mov
pop
xor
repz
or
pop
mov
push
into
clc
and
in
jne
outsl
xchg
sub
mov
sub
mov
push
int3
dec
in
add
lock
into
adc
out
int3
je
push
hlt
iret
aam
hlt
xor
dec
hlt
rol
inc
or
add
dec
call
xor
pop
loope
adcb
xchg
sbb
dec
sti
pop
jnp
es
cmp
das
gs
push
jae
cmp
lds
lret
imul
out
subl
add
scas
lcall
and
and
daa
sub
icebp
lds
adc
or
aaa
inc
pop
in
outsb
and
fdivrs
and
inc
sub
int3
inc
jle
pop
sbbl
je
dec
test
pop
aaa
ja
stos
xor
lret
test
lahf
jbe
scas
mov
xor
sahf
xchg
int
sbb
mov
mov
fwait
aas
inc
and
push
js
les
mov
push
mov
mov
jl
push
lcall
xchg
mov
mov
mov
hlt
xchg
mov
imul
xor
xor
mov
sub
clc
mov
daa
inc
xor
fldl2t
xlat
add
xchg
cmp
push
mov
repz
mov
xor
cmpl
fnsetpm(287
mov
fucomip
movsb
xor
mov
test
mov
repnz
das
mov
push
es
push
int
cmc
mov
add
stc
loope
scas
adc
push
sarl
pushf
add
sbb
mov
mov
fcmovnb
sbb
lds
dec
xchg
rcll
sti
data16
je
jae
dec
ficoms
dec
inc
icebp
push
das
mov
unpckhps
mov
cmp
enter
aam
push
inc
add
loop
xchg
bound
lea
nop
rclb
scas
ja
fstpl
pop
pop
xchg
xchg
sub
sub
movsb
add
mov
push
sub
idiv
ss
cmp
mov
arpl
cmpl
scas
inc
bound
nop
cli
xor
mov
mov
fs
dec
pop
mov
lock
pusha
sub
adc
int
mov
mov
xor
mov
pushf
imul
arpl
inc
fs
xor
ljmp
jge
idivb
jmp
push
push
arpl
stos
sahf
cmp
dec
dec
dec
clc
lea
dec
dec
jo
out
inc
jb
mov
aad
test
cmp
out
dec
stos
js
pop
jb
sub
aam
xor
push
lods
mov
adc
fs
pop
sbb
sub
inc
sub
pop
push
insb
push
out
into
insb
bound
push
mov
push
das
dec
sub
sbb
fwait
dec
mov
push
mov
popl
sahf
sbb
pop
mov
inc
push
ljmp
insb
subl
insl
cmp
xchg
cmpb
inc
jg
mov
mov
rcrb
xchg
xchg
inc
dec
cmp
lcall
xchg
adc
sahf
sub
push
rcrb
push
xor
jge
pushf
inc
ret
jne
fwait
xor
jae
cld
adc
inc
lret
bound
add
and
repnz
xchg
jmp
add
xchg
mov
jmp
xchg
inc
aam
in
sub
xor
mov
xchg
pop
dec
fidivrl
shl
sub
pop
clc
mov
cvtpi2ps
lds
push
lret
int3
add
pop
mov
pop
aad
mov
jg
rorl
aad
ss
ds
out
add
mov
add
dec
movsb
adc
jb
imul
xchg
mov
loopne
ficomps
decl
add
xchg
add
lcall
and
sbb
movsb
bound
lea
cmpsb
pusha
cmp
je
mov
fwait
es
pop
fcomp
jo
faddl
insb
add
cmp
xchg
orl
movsb
mov
psraw
mov
lcall
leave
subl
inc
popf
pop
add
test
sub
mov
ja
mov
in
pop
mov
and
xchg
sbb
adc
mov
xor
dec
cmpsl
mov
xlat
ljmp
lods
adc
imul
insl
stc
xor
sub
xchg
loop
inc
icebp
stc
add
adc
icebp
xor
fs
xlat
neg
ja
out
add
xor
je
enter
push
test
mov
sbbl
sub
sbb
scas
jns
sti
iret
add
jae
cmc
inc
add
dec
adc
addl
fwait
clc
lret
jno
cmc
out
xlat
jp
sbb
mov
inc
pop
jp
mov
or
daa
or
inc
inc
js
insb
fs
dec
push
mov
std
jnp
ret
mov
lock
clc
xchg
arpl
cmc
and
test
jecxz
cmp
jb
mov
and
aad
jge
pop
adc
jle
rorb
xchg
mov
jmp
jns
or
pop
dec
roll
pop
pop
or
or
xchg
int
mov
add
cpuid
fcomi
adc
imul
mov
sub
jp
enter
inc
pop
test
jp
popf
fbld
xchg
xchg
dec
in
mov
sbb
leave
xor
jl
loop
test
in
inc
dec
mov
xor
roll
ss
inc
out
fisttpl
dec
pop
jecxz
aas
jle
test
lahf
fstps
sbb
rclb
xor
push
dec
dec
or
out
mov
pop
dec
cmpsl
sub
jne
inc
cmp
dec
sub
jp
loopne
loope
rorb
enter
fcmove
pop
fidivrs
pop
inc
imul
test
dec
jne
js
pop
cltd
dec
cwtl
out
sub
aas
push
test
popa
imul
out
inc
sub
out
add
sahf
jg
andb
sbb
jnp
movl
jnp
jae
clc
and
or
in
mov
int3
dec
mov
mov
lds
mov
mov
or
cmp
lret
out
fstpl
sub
inc
push
fdivrs
or
xchg
push
sti
out
in
or
and
in
out
sub
xor
xor
and
jp
push
mov
fs
daa
sbb
push
lret
xor
or
js
or
dec
xchg
lods
cmp
movsl
insb
and
loop
std
std
mov
cmp
icebp
add
ja
mov
mov
jmp
into
add
aas
iret
pop
or
sbb
jno
mov
test
iret
clc
cmp
inc
inc
xchg
pop
and
inc
data16
mov
push
xchg
bound
xchg
pop
es
push
cmp
dec
mov
mov
mov
lcall
sbb
and
adc
push
lock
stos
xor
pop
push
jg
inc
sbb
out
mov
pop
and
mov
pop
test
scas
out
push
sti
and
rorl
fmul
sbb
xor
sahf
push
incb
into
idivl
stc
fwait
add
out
jnp
rorl
sub
mov
mov
test
ds
adc
rorb
mov
dec
xor
sub
fists
jp
xchg
leave
test
out
push
pop
sahf
hlt
inc
adc
xor
iret
shlb
out
mov
mov
lods
ds
ss
iret
fucomip
cmp
xchg
push
mov
and
stc
mov
imul
fwait
mov
cmpsl
mov
dec
mov
insb
sti
ret
cmpsb
std
mov
sahf
adc
pop
bound
pop
outsl
insl
sbb
pop
mov
mov
in
in
scas
adc
mov
daa
fsubr
ja
cmpsb
mov
rorl
fisubrl
call
cmp
aad
mov
les
sub
pop
and
int3
sbb
push
and
mov
std
outsl
mov
outsb
inc
cmpsb
jle
and
sbb
lds
mov
je
mov
repnz
inc
aas
adc
mov
sub
adc
outsb
mov
cmpsl
aaa
inc
mov
or
mov
jg
push
jp
fs
loop
fisttpl
je
mov
cwtl
mov
out
inc
xchg
adc
jmp
inc
out
mov
nop
adcb
push
or
inc
jns
aas
out
xchg
xchg
into
push
xchg
sub
jmp
shr
and
adc
popf
pop
cltd
sbb
cmpl
shlb
sbb
or
pop
sub
in
mov
inc
dec
mov
das
decb
out
push
sub
imul
test
ds
scas
ret
dec
andnps
and
xchg
xchg
lods
lods
mov
inc
aaa
outsb
push
push
cmp
and
pop
bound
add
dec
aad
fs
ljmp
pop
inc
xor
push
shll
ret
xchg
dec
in
mov
pusha
jecxz
jle
push
imul
and
xchg
sub
push
test
add
sbb
shl
aaa
ret
je
mov
dec
clc
jl
sbb
iret
sbb
mov
jecxz
jmp
fstpt
jmp
xchg
cmc
jge
pop
and
dec
jmp
out
cmp
mov
popa
dec
xor
and
add
rcll
rorb
inc
inc
mov
xor
and
dec
roll
lds
js
imul
aas
sahf
xor
scas
push
stos
mov
fadd
cwtl
jge
sbb
call
test
rcll
sbb
push
hlt
or
cmp
call
xchg
mov
mov
enter
dec
sub
mov
sub
movl
rclb
sub
and
cmp
xchg
pop
icebp
sarb
les
sub
fistpll
xor
out
fucomp
dec
mov
inc
pop
es
inc
pop
sub
add
lock
jno
je
xchg
shrw
mov
mov
push
mov
inc
sbb
stc
and
out
jecxz
aaa
dec
mov
pop
mull
lods
adc
ret
lahf
mov
test
mov
aaa
and
out
add
pop
pop
mov
stc
ss
mov
sbb
mov
sub
shrl
lea
push
pop
int3
push
cmp
mov
sbb
pop
les
push
imul
sub
jo
dec
xor
dec
adc
push
shrb
lret
fcom
jne
add
mov
pop
pusha
out
lret
les
push
sar
sub
shr
or
lock
out
int
and
cmpsb
and
mov
jmp
fimull
cmp
lea
fldt
pop
inc
cmp
lahf
add
cmp
in
xchg
or
jp
mov
dec
cltd
mov
pop
mov
inc
cmp
push
stos
adc
adc
fwait
sub
xchg
out
int
mov
cmp
cmpsl
inc
xlat
cmp
aad
rcr
inc
push
pop
out
push
push
or
push
pop
std
jp
fs
jg
rcr
gs
jns
pop
and
xor
aam
xor
adcb
push
xchg
int
pop
roll
cmp
pop
lods
lret
or
cld
inc
dec
das
fsubs
sub
mov
pop
lahf
mov
cmc
je
jl
mov
add
xlat
outsb
xchg
cld
mov
cwtl
loope
out
mov
jno
aaa
sbb
and
lret
jb
pop
in
call
sub
or
mov
test
jo
inc
addr16
jns
fstps
ja
fsub
mov
pusha
inc
and
pop
pop
pop
lcall
pop
pushf
inc
sti
adc
mov
lahf
test
xor
mov
cmp
jecxz
pop
add
mov
push
cmp
xchg
js
mov
mov
dec
dec
adc
sbb
sbb
pop
mov
dec
jbe
stc
xchg
adc
je
cmp
pop
movsb
sub
or
bound
andl
or
jmp
xor
sbb
aam
dec
add
mov
xchg
int3
addr16
xchg
ss
iret
adc
and
leave
call
ljmp
jns
stc
out
movsb
sbb
insb
repnz
popa
mov
fwait
sbb
in
lds
jo
lea
or
sub
daa
dec
pop
lods
xor
jmp
add
jp
insb
mov
out
je
leave
add
sbb
mov
fistpl
rcll
addr16
test
mov
fisubrs
lret
xor
cmp
mov
sbb
cmc
out
xchg
cmp
insb
add
lahf
sbb
jecxz
fdivrp
and
cld
stc
xchg
or
push
xor
sub
push
fildll
add
add
push
or
mov
out
out
insl
pop
ja
popf
daa
mov
add
mov
addl
dec
int
dec
sbb
xor
mov
int
adc
mov
sub
sub
jecxz
cs
int3
mov
pop
cmp
nop
das
pop
popf
out
cmpsb
mov
xchg
mov
bound
lret
into
sbb
inc
mov
inc
es
roll
repnz
push
bound
mov
repz
xor
xlat
push
jb
and
mov
out
xor
mov
insl
xchg
mov
jp
adc
stos
sti
jno
push
cmp
aaa
xor
in
pop
xor
cmp
and
pop
lods
dec
cmp
outsb
sahf
mov
aad
rcrl
and
sub
pop
std
lods
aaa
lret
lcall
jle
lods
push
xchg
ret
ljmp
add
mov
jbe
dec
push
mov
push
pop
sbb
mov
cmp
adc
mov
in
decb
dec
sbb
jno
xchg
and
mov
out
iret
mov
outsb
jns
xor
pop
xchg
std
mov
xchg
sub
insb
xchg
cmp
je
faddp
cmp
imul
out
fmul
jge
jnp
int3
jmp
aas
adc
ds
fiadds
sahf
mov
je
pavgw
adc
sub
aam
adc
movsb
dec
mov
fcomps
push
xchg
or
bnd
lahf
cmp
push
push
mov
jne
out
mov
arpl
test
jo
insb
ja
mov
sub
mov
sbb
push
dec
out
xchg
sub
in
scas
cli
add
and
mov
xor
cmp
add
mov
jbe
aaa
cmpsl
ret
mov
xchg
movsl
mov
lods
pop
lret
jl
test
test
dec
push
ds
jne
xchg
add
or
js
arpl
cld
cli
sbbl
fnstcw
add
popa
or
inc
or
push
and
jbe
dec
daa
push
aad
mov
repz
dec
arpl
jle
mov
push
jae
pop
xor
xchg
mov
movsl
inc
mov
les
pop
popa
or
fidivrl
jb
cmp
ja
daa
shrb
insb
enter
bound
sahf
shlb
pop
lahf
or
or
mov
lds
movsl
lret
pop
scas
cmp
jp
movl
stos
rcrl
jno
fistps
cmpsl
push
daa
sbb
cmp
jae
lock
out
or
sub
or
mov
imul
loope
or
cmp
mov
es
dec
aaa
stos
rcr
es
and
push
nop
sub
or
faddl
push
test
lods
icebp
dec
jmp
jb
xor
sub
push
jb
loopne
mov
sub
push
jb
std
mov
pop
jno
adc
popf
cmpb
push
pushf
cmc
cmp
mov
fwait
loopne
jno
dec
ja
test
icebp
pop
scas
cmp
cmp
ljmp
add
mov
xchg
aaa
push
xor
cwtl
in
pushf
pop
pop
and
pop
pop
cmp
add
loope
xchg
xchg
xorl
jo
mov
xchg
test
arpl
movsl
jo
cli
neg
mov
adc
jmp
jp
mov
out
fmuls
dec
scas
inc
xchg
xorl
cltd
sbb
pop
pusha
cmc
mov
jbe
aad
xchg
sub
sub
jecxz
mov
push
stc
adc
pop
jg
cmp
jmp
insb
inc
out
mov
jno
outsb
sti
subb
sbb
rcll
xchg
jae
lret
cwtl
in
jmp
sub
inc
les
loop
in
pop
test
mov
insl
cmpsb
mov
mov
sbb
shlb
mov
jg
stc
jb
test
mov
mov
inc
shrb
dec
add
movsb
mov
ljmp
imul
bound
add
into
ret
inc
out
ret
mov
push
inc
out
rep
roll
mov
and
or
xchg
inc
shrl
or
dec
ss
add
adc
fldenv
icebp
faddl
pop
cmp
sqrtps
push
cmp
pushf
sub
icebp
xor
mov
lods
push
fnop
cmp
hlt
add
jp
out
xor
mov
dec
xor
lock
popa
repz
cmp
pop
push
test
dec
add
pushf
repz
xchg
push
mov
ss
mov
push
outsb
loopne
pop
push
lret
xlat
bndstx
sbb
push
leave
mov
out
fiaddl
in
daa
sbb
mov
mov
pop
jnp
jl
push
inc
cmpb
cld
ljmp
negb
pop
fs
fucom
ja
popa
push
iret
in
cmp
stc
mov
adc
push
mov
repz
adc
fstps
inc
inc
in
mov
aaa
addb
loope
scas
lret
test
loopne
test
sub
push
pop
outsb
add
mov
or
imul
jle
jb
push
pop
int3
jge
jnp
pusha
test
rorb
xchg
aas
sbb
leave
sbb
cli
mov
xchg
mov
sub
mov
and
int3
xchg
pop
outsb
and
push
mov
cmpsl
jmp
lret
daa
push
mov
fmuls
inc
ja
les
call
movsb
shrb
mov
gs
movsb
test
aad
xchg
into
mov
xchg
cld
clc
mov
imul
jne
mov
xor
sub
mov
ss
adc
cmc
sub
leave
mov
movq
mov
cmp
ret
mov
fbld
adc
popf
add
adc
adcl
sbb
rclb
test
sub
cmp
popf
add
cli
es
jp
mov
mov
push
cmc
fdivr
lods
inc
adc
into
outsl
test
cmc
test
aaa
clc
lods
enter
in
pop
int3
hlt
dec
out
stos
lds
mov
or
mov
jp
pop
js
loopne
fwait
or
mov
fwait
stos
pushf
fs
decb
dec
jmp
pminub
cltd
loopne
mov
out
sbb
mov
add
outsb
mov
cmc
jo
mov
mov
call
inc
inc
addr16
inc
setg
push
test
out
in
pop
or
pop
vpmulhw
adcl
stos
cmp
add
in
mov
sbb
subl
lods
ds
std
sbb
inc
push
jnp
in
push
mov
stos
arpl
loope
enter
and
jno
mov
mov
fs
or
mov
dec
xor
xor
outsl
lods
mov
gs
xchg
test
add
push
es
test
sub
popf
sub
jnp
mov
pop
push
lahf
leave
fdivl
jbe
xor
xchg
jnp
pop
sub
mov
jle
fstl
dec
andl
inc
fwait
push
cmp
cs
sub
mov
daa
mov
cmp
mov
adc
cmc
cmp
mov
outsl
lret
push
subb
enter
ss
popf
pop
sbb
pop
xor
fisubrl
pop
xchg
push
stos
xchg
es
mov
into
fcmovbe
xchg
ret
pop
mov
adc
dec
mov
mov
jp
sahf
adc
insl
mov
xchg
inc
mov
mov
dec
sbb
xchg
push
daa
mov
jmp
dec
inc
sub
hlt
int
dec
rcll
call
fists
popa
mov
push
aad
jne
push
pextrw
insl
jae
and
addr16
and
lods
mov
dec
jbe
adc
fists
add
mov
in
inc
xor
sbbl
inc
je
repnz
sbb
push
lods
or
push
fadds
push
mov
scas
stos
data16
aad
int
and
or
pop
push
cld
cs
or
or
sahf
jmp
testb
dec
xchg
movsl
repnz
jno
outsl
or
loopne
loop
test
xchg
inc
sub
push
ljmp
or
xor
cmp
pushf
add
mov
xor
and
jb
call
cwtl
and
movsb
loop
cld
out
outsb
sarb
or
aad
lock
or
aad
or
scas
sub
fldl
mov
push
lahf
jecxz
or
dec
pusha
push
insb
icebp
inc
xchg
in
cli
jge
cmp
stos
lock
mov
and
es
jle
mov
std
into
xchg
ds
pop
cmpb
mov
fidivrl
fmull
fsub
shlb
cltd
fistl
jp
pop
ficomps
notb
shll
gs
std
mov
fs
aas
push
add
push
pop
xor
std
xor
std
adc
pop
enter
push
xchg
stc
imul
mov
add
push
mov
xchg
fcoml
cmc
pop
push
mov
and
mov
cmpsb
mov
add
clc
jle
dec
inc
cmp
jmp
stos
or
ja
xchg
into
aad
adc
iret
ss
daa
iret
cmpsl
js
lock
xchg
or
stos
subl
ja
stos
and
dec
pop
xor
mov
sarb
xlat
inc
das
mov
push
push
out
and
int
hlt
gs
test
mov
and
test
fadd
inc
mov
cmpsb
pusha
rcrb
popa
fistps
sbb
lret
pop
cmpsl
in
pop
dec
push
cmp
mov
cmpsl
jbe
aaa
push
int
imul
lret
lahf
add
bound
pop
lcall
cs
cmp
popf
jnp
daa
adc
push
or
aam
push
imul
out
outsl
push
jno
adc
fadds
mov
xlat
rcr
pusha
ss
mov
cmpsb
shrb
jge
and
inc
std
dec
movsl
stc
daa
jecxz
fdivrl
icebp
rcrl
out
cmp
out
out
arpl
push
add
inc
test
mov
inc
in
sub
loope
add
insb
fadd
pop
xor
es
icebp
in
jb
insb
in
pop
in
insb
insl
cwtl
lds
mov
mov
lods
jo
andl
repnz
xchg
push
mov
ja
cld
iret
js
and
div
dec
clc
sub
jl
call
pop
clc
adc
jg
pop
stc
ljmp
sub
adc
dec
adc
pop
jl
cltd
test
movsl
insb
std
dec
lds
pop
inc
gs
xlat
std
pop
pop
cmc
mov
clc
push
jmp
xlat
ficompl
xor
insb
pop
and
or
imul
pop
mov
shr
push
shrl
sbb
dec
shrl
test
movsb
xchg
fildl
and
mov
lods
arpl
scas
enter
lods
es
mov
es
push
cmp
inc
xchg
cmpsl
test
sbbl
xchg
jns
or
scas
push
int
dec
jl
pop
addr16
pop
orl
mov
mov
nop
inc
add
xchg
sub
movsl
lods
mov
test
mov
jbe
jbe
cmp
dec
mov
xor
mov
adc
pop
mov
es
adc
pop
mov
stos
or
add
xchg
or
shr
fwait
dec
cmp
sub
cmp
dec
repz
xor
aas
mov
lods
xchg
mov
push
ss
sarl
les
inc
cmp
fadds
adc
xor
jg
xchg
mov
sub
test
adc
jmp
repnz
into
cltd
push
cmp
or
xor
les
adc
xchg
test
icebp
push
iret
cmp
cwtl
mov
movb
loop
fsts
pop
adc
pop
lahf
cmp
andb
outsl
nop
test
xchg
push
sub
sahf
pop
stos
inc
fimull
cmpsl
mov
iret
pop
pop
iret
mov
xchg
filds
ret
cmpl
fwait
mov
push
pop
stc
loopne
jmp
fstps
and
pusha
cmc
scas
pop
dec
fmull
cmpsl
mov
adc
and
scas
fs
pop
pop
aas
push
inc
ljmp
insb
cmpb
cmpsl
cmp
adc
jnp
stos
dec
xor
pushf
popa
ljmp
mov
add
add
rcll
ret
and
mov
push
insl
rcll
mov
pusha
cwtl
popf
movsl
leave
cli
mov
int
cwtl
push
cmovae
je
sub
dec
mov
pusha
push
aaa
push
push
xchg
aaa
pushl
ficoml
mov
cli
add
xchg
das
test
mov
dec
popl
jg
cld
or
xor
inc
jne
jecxz
sbb
out
xchg
lods
lret
mov
cmp
mov
out
and
xor
cmp
mov
mov
cmpsl
xorl
insl
mov
repnz
xchg
lds
mov
aad
mov
movsb
gs
mov
aaa
fisttps
leave
xchg
adcb
mov
xchg
cli
pop
jl
fcmovb
xchg
jp
loopne
dec
das
mov
pop
sbb
pop
fs
imul
dec
jg
out
ljmp
out
es
enter
push
or
aas
daa
test
or
dec
mov
xor
or
push
mov
jno
scas
cmp
iret
or
adc
cmp
push
inc
mov
lds
xchg
leave
and
loop
jg
loop
sbb
jge
fiadds
or
adc
mov
xor
int
or
clc
icebp
push
outsb
ss
mov
rcr
cmp
dec
incb
sbb
repz
roll
mov
sti
stc
mov
lret
jp
lds
inc
push
jl
adc
push
mov
xor
iret
mov
add
mov
xchg
lahf
data16
outsb
jns
pop
and
adc
mov
push
imul
sti
cli
std
lods
cltd
movsb
pop
pop
adc
mov
mov
jle
jbe
in
add
mov
push
lcall
jge
sub
adc
test
and
pop
jns
dec
and
in
sub
aad
xchg
insl
dec
pop
jo
push
cmp
aas
adc
push
push
in
cmp
mov
lret
in
pop
sub
icebp
aam
out
lahf
push
pop
dec
pop
mov
andb
lods
adc
hlt
mov
outsb
sub
lret
aam
push
out
add
je
gs
pop
fnsave
cmp
popa
aaa
xchg
sub
push
ja
sarb
fiaddl
orl
gs
add
ja
sbb
xchg
pop
test
mov
daa
sbb
mov
insb
lods
frndint
addl
loop
ja
add
pusha
sbb
inc
mov
sarl
gs
sbb
mov
mov
mov
adc
or
rcrb
pop
repz
fs
das
cmp
xchg
or
push
pop
push
xor
pop
cmpsb
mov
mov
cwtl
cltd
adc
insl
scas
mov
and
testb
int
and
leave
andb
repz
push
adc
les
sub
adc
cmp
xchg
loopne
call
pop
push
nop
add
jecxz
fidivs
push
sbb
das
incl
addr16
ja
leave
loopne
sti
ja
mov
out
cmp
in
pushf
mov
pop
jne
mov
xor
es
inc
test
pop
aam
mov
insb
sub
push
dec
pop
popf
les
repnz
ja
out
lods
push
in
fsubrs
cmp
mov
sbb
pop
std
sub
inc
shll
sub
adc
cmpsb
aaa
ljmp
aam
mov
jecxz
lret
dec
fildll
icebp
imul
mov
pop
ficoms
and
add
imul
imul
pop
xchg
jb
push
pop
mov
cli
out
sti
test
push
popa
mov
movsl
push
popa
xor
stos
jbe
sahf
out
test
clc
idivb
repz
cmpsl
sbb
dec
fistps
jnp
xchg
scas
dec
mov
cmp
cmc
shl
or
sti
mov
imul
push
mov
icebp
pop
sbb
js
jmp
arpl
xor
mov
andb
int
pop
add
xchg
adc
mov
loope
scas
or
dec
xor
push
dec
xchg
insl
in
es
and
jmp
lea
jmp
pop
pop
xor
push
cwtl
sahf
sub
sbb
icebp
mov
cld
fsqrt
dec
daa
insb
shl
dec
imul
int3
out
cmp
push
push
mov
aas
jge
imul
pop
or
fcmovne
jmp
ds
mov
jb
inc
adc
dec
cmp
add
enter
adc
sub
xlat
ds
out
leave
mov
jecxz
fisttpl
cli
xchg
lea
rorb
in
xchg
push
pop
insl
shlb
aaa
pop
std
xor
pop
or
insb
imul
pop
pop
dec
push
mov
rorl
jbe
jbe
in
jp
mov
loope
aad
and
lods
cmc
lods
adc
out
scas
mov
add
and
aas
dec
or
xchg
inc
cmp
and
pop
adc
cmp
rclb
loopne
jl
inc
sti
es
mov
push
or
gs
mov
xor
lds
adc
sbb
loop
ss
push
jno
and
or
mov
das
pop
add
fsubl
jnp
les
lock
lods
movsb
in
aam
pop
out
mov
hlt
push
cmp
xor
daa
jmp
les
call
hlt
out
cs
negl
add
push
xchg
test
icebp
and
push
xor
std
mov
mov
mov
xor
push
movsl
into
xorl
lods
jmp
jecxz
cli
add
push
push
pop
inc
inc
add
rcrl
movsb
cmp
xor
mov
movsb
sub
mov
pop
lcall
jno
mov
in
inc
mov
cmp
pop
shlb
add
adc
mov
fnstcw
shll
sbbb
dec
lds
cld
imul
sbb
adc
in
hlt
or
sub
mov
and
sbb
xor
arpl
xchg
jno
or
js
sarb
sub
mov
fcmovnu
mov
arpl
pop
adc
cmp
sub
pop
enter
push
xchg
movsb
test
xor
aad
fidivs
test
repz
mov
pop
repnz
xchg
imul
inc
cmp
or
test
add
repz
sub
pop
xor
jecxz
dec
xchg
sbb
inc
mov
lret
or
mov
pop
data16
dec
out
imul
adc
repz
in
stos
mov
xchg
inc
mov
sbb
mov
aas
ja
xor
dec
call
mov
jge
xchg
xor
stos
and
aam
je
xor
sti
sahf
sub
pop
pop
out
movsb
mov
lret
xchg
adc
sub
enter
test
lahf
mov
add
xchg
adc
lret
xchg
pop
mov
add
add
jl
xor
dec
sbb
pop
scas
pop
mov
inc
popa
and
hlt
int3
in
es
cmp
xor
movsl
loop
dec
jp
jmp
pop
jmp
pop
cmpsb
xlat
jp
sub
jecxz
sub
jle
or
sub
inc
fistpll
ret
cltd
leave
mov
lret
es
inc
sahf
imul
push
inc
adc
das
sbb
mov
xchg
push
scas
pusha
loopne
pop
mov
rcrb
pushf
adc
adc
pop
and
mov
out
or
test
push
ret
out
ret
test
pop
xchg
mov
or
jp
cmp
push
mov
imul
insl
sub
xchg
mov
dec
ljmp
leave
lock
int
icebp
loopne
mov
mov
push
std
sub
xchg
pop
loopne
inc
mov
int
add
ficoml
in
mov
in
sub
and
mov
xchg
mov
dec
insb
sbbl
and
xchg
inc
aaa
pop
outsl
inc
je
in
sbb
stos
test
out
outsl
fildl
xor
nop
testl
and
jecxz
out
xor
data16
cltd
movsb
sub
mov
ljmp
pop
xor
pushf
lret
fcoml
dec
mov
xor
push
fsts
or
mov
iret
mov
cmp
dec
in
mov
sbb
sbb
dec
pop
scas
xchg
jp
cmp
xor
jle
cmp
mov
in
cwtl
sub
nop
fcmovnb
xor
add
dec
addr16
jle
pop
jp
push
xlat
in
ret
jmp
jl
add
inc
adc
pop
push
out
lods
mov
pusha
cs
cmp
xor
sub
push
push
shlb
test
jno
adc
cmp
inc
loop
xor
or
addl
in
icebp
xor
mov
loop
mov
arpl
sub
mov
mov
adc
movsb
negb
sbb
fmuls
in
pop
adc
in
nop
fistpl
sbb
inc
clc
xchg
shl
mov
pop
stos
pop
add
insl
in
sti
mov
aas
jno
daa
scas
mov
fdivl
shlb
xor
sub
xchg
sbb
jp
fidivrs
and
insl
jne
test
cmpsb
ja
lret
cmp
inc
jbe
clc
mov
xchg
cmp
and
mov
push
icebp
dec
push
jg
mov
xchg
push
hlt
jns
mov
arpl
test
xlat
push
repz
fwait
aam
int3
fsubrl
xor
inc
add
cltd
xchg
inc
gs
jge
icebp
mov
push
sbb
mov
clc
push
xchg
push
jle
adc
fmuls
stc
inc
aad
mov
adc
ja
bound
xchg
inc
sub
and
imul
mov
cmpsb
push
insl
repnz
and
xor
lock
add
jp
sub
dec
out
mov
cmpsb
sub
lea
xor
inc
mov
jbe
repz
inc
loop
cs
xchg
subb
lock
add
test
mov
mov
pushf
popa
jnp
push
dec
ljmp
sahf
movsb
jp
into
jne
dec
cmpsb
inc
aad
mov
das
xchg
ljmp
cmpsb
xchg
je
test
cli
pop
dec
xchg
cmp
mov
call
outsb
push
test
repnz
dec
loop
add
cmpsl
and
scas
dec
shll
mov
sub
loope
mov
out
sahf
cmp
adc
sub
lods
add
adcl
xchg
in
mov
ds
or
mov
sahf
xor
daa
inc
test
adc
xchg
jecxz
jmp
ja
into
mull
cmpsl
cld
test
clc
push
rcrb
gs
rorl
xchg
mov
xor
jnp
xchg
aad
cs
js
ja
scas
je
cld
icebp
mov
cs
js
pushf
in
inc
les
pop
xchg
imul
cmp
sbb
mulw
and
sbb
adc
and
enter
inc
in
add
inc
loopne
adc
dec
or
mov
add
mov
outsb
in
shr
dec
cmp
fxch
and
repnz
and
cmp
lahf
push
adc
jns
test
sbb
xor
shlb
lods
loopne
jb,pt
pop
xchg
fisttpll
xchg
push
icebp
arpl
stc
fistl
adcl
xchg
movsl
xchg
lock
outsb
push
mov
iret
repz
mov
push
rcrl
inc
pop
movsl
enter
mov
mov
clc
mov
adc
pop
xor
lret
aaa
inc
movsl
rcr
pop
jnp
sub
js
xlat
xchg
sbb
lahf
sbb
arpl
mov
adc
ja
and
xor
repz
cli
arpl
lcall
lds
arpl
movb
arpl
cli
int
push
loope
push
out
and
fistpl
xlat
xchg
inc
lock
jbe
loope
pop
ret
mov
pop
xchg
sahf
cmc
clc
push
add
jns
jne
dec
insl
dec
fildll
sub
add
call
arpl
lret
fdivl
outsb
ret
mov
jmp
inc
sahf
xchg
daa
movsl
jno,pn
or
in
xor
add
mov
cmpsl
mov
push
sub
jg
sbb
push
shll
test
movsl
jne
xchg
cmp
data16
or
adcb
sbb
test
test
and
dec
mov
mov
cmp
mov
test
clc
inc
jle
clc
loop
jb
in
je
jge
repz
data16
lea
shlb
cltd
cltd
add
loop
dec
xchg
scas
jmp
call
cmp
pop
sbb
lods
fistl
jge
lahf
or
sbb
fadd
jns
pop
sub
filds
popa
jbe
pop
and
jae
fst
setae
testl
xorl
or
insb
icebp
inc
mov
scas
in
dec
testb
xchg
xchg
add
jmp
inc
scas
xor
mov
hlt
pushf
xlat
movsl
dec
aas
mov
lds
das
cmp
jecxz
out
inc
xchg
and
lret
dec
fstl
pop
push
push
stc
test
or
jecxz
add
inc
xchg
dec
jnp
loop
sbb
ds
mov
outsl
jo
pop
push
rol
iret
and
push
jecxz
xchg
imul
stc
mov
jp
adc
mov
xchg
orl
mov
fcoml
fbstp
push
frstor
sub
stc
out
aas
xchg
es
orb
test
mov
mov
xchg
inc
fildll
enter
icebp
in
data16
jp
imul
int
sbb
shll
sarl
es
pop
mov
ret
loop
int
sbb
xchg
sarb
jmp
mov
sub
fmull
jne
lcall
mov
jg
mov
mov
fcompl
xchg
leave
mov
inc
sbb
leave
sbb
cmpb
hlt
lret
outsb
out
ret
pop
in
sahf
repz
into
filds
sarl
or
ds
or
adc
bound
adc
add
std
push
fdivl
push
pushf
shl
sbb
sti
pop
cltd
or
shrl
xor
lds
and
mov
add
dec
mov
dec
or
call
lret
hlt
sub
or
lcall
addl
dec
mov
mov
push
fcmovne
repz
mov
cld
mov
fiadds
into
xchg
lods
cmpsl
pop
pop
sbb
push
cmpsb
mov
js
cmpsb
lock
mov
leave
ljmp
sbb
les
sbb
jo
ja
jno
cmpsb
cld
mov
xor
insb
inc
dec
mov
ss
adc
xchg
dec
xchg
test
inc
inc
js
and
mov
nop
ret
fsubl
adc
mov
movsb
xor
pop
adc
mov
addl
daa
xchg
pushf
inc
jns
cwtl
gs
push
bound
adcl
and
bound
pop
mov
or
es
popa
xor
sub
popf
jmp
sbb
xchg
push
xor
repnz
adc
xchg
jb
pop
mov
add
int3
out
fldt
test
movsb
or
jg
pop
pushf
pop
cmp
xchg
inc
jne
mov
mov
in
push
mov
cltd
and
test
inc
out
add
fistpl
loope
push
mov
sub
sub
das
sbb
cmp
inc
pop
ljmp
sub
mov
dec
out
les
imul
int3
call
mov
and
fs
mov
popa
bound
pop
mov
push
das
sti
clc
xlat
mov
test
adc
arpl
lret
js
lahf
adc
cmp
cmpsb
xorb
nop
xchg
jge
jg
test
scas
test
aam
lahf
pop
call
push
cmp
adc
dec
and
and
cmpsb
punpcklbw
mov
mov
ret
ror
pop
test
or
les
lods
fcomp
push
das
jp
pop
cltd
and
aas
inc
ds
lock
push
lret
in
fsubrl
pop
out
add
mov
int
dec
adc
adc
xchg
inc
lcall
adc
sbb
cmp
ljmp
push
popa
add
jg
add
or
cmpsb
sbb
in
push
lret
movsb
fcoms
popf
fstpl
fdivs
clc
stos
pop
ror
in
jns
ja
mov
popf
int3
ljmp
inc
cld
cmp
mov
or
es
or
jae
and
xlat
mov
jge
xor
fxch
push
lahf
sub
fwait
mov
xorl
mov
rcrb
cmp
sbb
inc
pop
loop
movsb
xchg
fs
and
mov
inc
popa
rcrl
js
ret
rolb
shll
lods
xchg
jne
and
mov
jl
adc
xor
lret
mov
sub
or
incb
addb
ss
cmp
and
stc
enter
inc
lahf
pop
mov
mov
sar
adc
lock
inc
dec
int3
les
inc
icebp
outsl
icebp
pop
push
sub
push
sub
out
xor
shlb
aas
mov
decl
lods
addr16
and
test
sti
dec
mov
hlt
incl
mov
mov
std
aaa
jmp
sbb
xchg
cmp
frstor
popf
xchg
and
sbb
and
and
ret
aam
push
dec
sub
icebp
add
or
loop
ret
mov
leave
sub
ret
pop
pop
les
mov
jb
inc
jmp
xor
mov
outsl
int
sbb
adc
out
xchg
mov
into
stc
lret
test
adc
adc
xor
jbe
cmpsl
and
mov
xorb
xchg
in
inc
ret
mov
cmpsl
mov
mov
dec
fcmovnbe
xorb
xor
inc
stc
mov
pop
int
dec
inc
loopne
cmpl
stos
xor
mov
stos
xchg
xor
inc
fidivs
aam
stos
sub
ret
hlt
add
jmp
dec
loop
adc
mov
add
add
sarb
sbb
mov
loop
and
imul
dec
sti
ficompl
xlat
popf
scas
jne
fstpl
not
stos
jbe
lods
push
dec
xchg
outsb
and
xchg
inc
push
xchg
in
out
xor
jmp
or
fnstsw
outsb
inc
mov
cmp
push
andb
add
push
addl
sub
ret
addb
inc
flds
jnp
les
ficomps
jo
sar
sarb
mov
xor
pop
aad
cmp
dec
movsl
les
inc
sbb
push
bound
loop
les
inc
fadds
pusha
loop
test
push
jp
and
leave
sbb
into
lcall
lret
jg
dec
ja
push
test
fnsave
mov
rclb
mov
test
mov
hlt
adc
xchg
mov
stc
pop
icebp
lock
sub
mov
sub
xor
idivb
jbe
adc
xchg
push
sub
enter
ficompl
push
lock
out
shrb
inc
scas
adc
mov
xchg
mov
sub
in
aaa
dec
xorl
inc
test
rol
add
repz
lret
cmp
sti
mov
mov
sbb
mov
xchg
cmp
dec
lock
xchg
dec
jp
int
outsl
sbb
cmp
pop
ret
loop
adc
xchg
scas
xchg
decb
ss
inc
das
rclb
inc
adc
push
das
ds
lods
repz
mov
mov
xor
clc
lock
pop
dec
setbe
ret
movsl
jmp
inc
cltd
push
shll
cmp
xchg
mov
out
cmp
out
out
cmp
xchg
push
loop
shlb
insl
mov
sub
push
addb
push
mov
scas
loope
sbb
out
out
fldenv
xlat
subl
mov
jp
push
lret
xchg
orb
dec
xchg
inc
pusha
mov
shll
add
or
inc
data16
mov
lret
pop
stos
push
add
dec
adc
rorb
cmpl
jbe
xchg
and
cmp
mov
inc
cltd
push
cmp
adc
push
sti
mov
cmc
mov
push
or
daa
pop
add
push
pop
sub
pop
mov
aas
out
pop
and
mov
ror
push
mov
jne
in
dec
adc
and
outsl
push
dec
lock
movsb
scas
movsb
adc
jle
outsl
or
enter
stos
mov
stos
and
mov
push
dec
cs
les
mov
mov
mov
dec
lods
in
hlt
jne
add
nop
push
mov
push
adc
mov
pop
adc
mov
xor
icebp
xor
out
xor
test
das
pop
cltd
pop
cmpsl
lods
aas
test
mov
fiaddl
call
inc
ficoms
mov
jns
jne
lret
mov
fldenv
leave
lret
out
repz
stos
aam
push
fidivrl
xchg
stc
cmp
cmp
inc
test
fdivrs
sti
push
add
pop
bound
inc
xorb
cmp
lret
fcompl
jb
int3
add
out
in
sub
mov
mov
jl
adc
stc
lahf
pop
aam
jmp
adc
mov
je
out
xlat
mov
dec
arpl
inc
mov
stos
lds
icebp
dec
lret
lahf
cmp
dec
fisubrl
xchg
push
addr16
cmp
xchg
dec
adc
add
mov
or
or
aam
fcomps
lret
repnz
xor
bnd
fistpl
enter
xchg
dec
insb
dec
push
sahf
sbb
hlt
fwait
push
je
pusha
idiv
fidivrs
dec
negl
xchg
mov
es
mov
pop
cmc
pop
sti
inc
out
fadds
mov
dec
push
in
or
pusha
fidivrs
jbe
not
shlb
xchg
xchg
fstpl
xchg
or
inc
jp
js
je
pop
pushf
mov
fsubs
pushf
xor
pusha
subb
push
stos
jmp
cmp
xor
cwtl
and
aam
pushf
jno
push
mov
mov
and
int3
cltd
lret
sbb
and
push
pop
xor
add
fldl
addl
sbb
mov
cmpsb
mov
or
and
jbe
jl
pop
lret
add
pop
rcl
mov
lcall
insl
dec
cmp
cmpsb
data16
fimuls
lods
test
stos
pop
loope
jmp
pushf
jne
mov
mov
rclb
xlat
jae
mov
push
cmpsb
pop
mov
je
jns
adc
jnp
in
inc
aaa
daa
ror
pop
jne
lret
inc
stc
sub
push
in
fsubr
jnp
testl
mov
mov
test
aad
adc
adc
popa
cmp
xorl
push
mov
stos
jp
js
jo
jge
inc
sbb
pusha
sarl
fbstp
int3
call
dec
or
adc
lods
pop
sbbb
pop
and
pusha
cld
dec
jbe
and
addr16
das
jne
pop
lret
xchg
movsl
and
sub
sbb
and
and
ret
icebp
push
movsl
push
push
mov
dec
in
iret
movsb
xchg
jge
arpl
rol
push
repz
enter
adc
outsb
jns
sub
pop
test
cmc
addr16
clc
mov
inc
test
sub
push
xor
sub
sbb
insl
imul
mov
loopne
repnz
gs
xor
mov
leave
mov
cmp
adc
aam
jle
popa
pushf
sub
imul
sub
aas
fldenv
mov
cmp
fwait
jnp
movsl
jecxz
shlb
nop
fiaddl
outsl
adc
pop
jbe
pop
loope
mov
outsb
cmp
test
dec
fildl
imul
ljmp
lea
push
inc
fsubl
add
cmp
xor
sti
stos
cmc
xor
dec
sahf
test
adc
movsl
cs
icebp
mov
pop
xchg
aad
adc
pop
popa
sbb
sub
or
xor
and
jmp
ja
or
dec
dec
jle
jmp
imul
sbb
in
sbb
sub
pop
flds
mov
shlb
popa
mov
mov
push
sub
dec
push
inc
xchg
adc
into
adc
into
jb
sbb
ja
fnstcw
push
sub
and
xor
and
pop
jnp
call
add
imul
and
int3
cmp
mov
lahf
dec
cmpsb
push
push
leave
stos
dec
push
add
and
imul
divl
sub
imull
or
dec
into
rclb
inc
jp
scas
in
repz
scas
in
mov
sub
loop
lret
jnp
add
pop
ja
or
xchg
scas
stos
xchg
lcall
int3
rclb
push
fwait
or
rcll
dec
mov
xor
lret
xchg
scas
push
inc
sbb
inc
add
rep
nop
sub
push
jne
adcb
cmp
jge
aad
xchg
cmpsl
cli
push
mov
lods
pusha
test
mov
sbb
dec
push
mov
mov
push
pushf
mov
fcoms
imulb
cmpsb
dec
mov
jb
ljmp
pop
mov
ljmp
sahf
out
xor
lds
rcl
pop
clc
inc
push
inc
xchg
xchg
ja
dec
out
xchg
loopne
push
xor
xchg
jg
cmp
xchg
stc
xchg
xor
cmp
jb
fcmovne
inc
push
mov
movsb
scas
adc
ja
lods
aad
pop
loope
pop
punpckhwd
fisttpll
inc
in
iret
shl
sub
cmp
shll
mov
into
dec
adc
push
sbb
jle
test
mov
inc
shl
cli
adc
adc
iret
mov
cs
sbb
dec
pop
test
and
mull
call
push
cltd
inc
xorl
call
popf
cmpsl
and
jg
dec
mov
dec
jg
mov
gs
sti
push
mov
lahf
mov
jae
jne
repz
sub
stc
mov
cmp
jb
pop
movsb
shll
in
or
inc
or
add
fistps
jmp
jle
enter
or
mov
lret
adc
in
push
jmp
daa
jp
xlat
rcpps
sahf
js
push
sbb
sub
inc
push
dec
das
adc
mov
insb
jp
loopne
mov
pushf
popf
test
cmpsl
sbb
cld
lcall
xor
or
push
std
and
pusha
daa
cld
pop
adc
xor
stos
jmp
mov
jbe
insb
jae
jb
std
mov
xchg
pushl
pop
shl
mul
imul
xchg
cmp
or
outsl
pop
push
pop
jp
sub
push
test
pushf
add
push
xchg
mov
js
jp
xor
inc
jge
loop
jo
ja
mov
push
xor
sbb
push
cmp
sbb
cmp
cmc
std
ret
sti
inc
jp
ss
out
adc
je
cmpsl
lods
dec
xchg
mov
push
xchg
ficoms
cmc
lret
iret
xchg
mov
or
inc
sub
dec
sbbl
adc
fimull
sub
cmp
movl
and
cmpsl
insb
pop
je
and
push
mov
cmpsb
pushf
lock
in
and
lock
out
adc
and
mov
dec
mov
sbb
sbb
sbb
pop
insb
rclb
xor
or
jle
sub
sti
pop
imul
sub
test
pop
in
int
pop
xchg
repnz
push
mov
ss
add
mov
jno
sub
call
mov
frstor
cmc
lret
sbb
pop
jae
ret
jne
mov
mov
iret
adc
pop
push
sbb
lds
sbb
mov
push
out
mov
int
mov
jno
pop
movsb
xchg
mov
mov
xlat
push
xor
fldcw
shl
xchg
adc
cmp
or
cwtl
cmp
das
cltd
mov
rclb
sti
or
arpl
sub
xchg
cmpsb
adc
je
icebp
dec
iret
cmpsl
lods
popf
and
pushf
stc
mov
test
rorl
and
cmp
fs
xchg
mov
inc
push
inc
dec
inc
add
out
out
xchg
sub
jl
mov
in
lahf
cmpb
mov
fadds
xchg
fucomip
mov
fwait
pop
push
aam
mov
shlw
sbb
xchg
sbb
xor
lock
in
pop
mov
sbbb
movsb
adc
push
js
xchg
xor
jl
xchg
loopne
dec
mov
push
or
test
xchg
xor
push
xchg
fmulp
cwtl
hlt
xor
je
xor
cmp
mov
fnstenv
insl
xchg
or
mov
call
inc
mov
popa
ss
rol
shll
es
mov
mov
out
adc
cli
das
test
xlat
loopne
fnsave
in
or
addr16
add
dec
ss
pop
js
lret
test
nop
enter
incb
jnp
mov
inc
ljmp
jge
xor
enter
shl
dec
xchg
testl
mov
xor
or
xor
jge
pop
out
pop
incb
push
aam
mov
mov
jg
sbb
xchg
dec
pop
ficompl
test
cmpsl
inc
int
pop
into
les
rcll
fidivrs
inc
xor
jmp
repz
sbb
sub
dec
inc
sub
pop
add
lock
aas
cvtps2pd
dec
pusha
cmc
stos
xor
xchg
daa
test
jbe
call
pop
jg
cmp
inc
cmpb
jle
rorl
cli
shl
outsl
imul
pop
xor
pushf
pop
out
add
sub
addb
mov
fwait
mov
mov
mov
stc
and
and
xchg
mov
adc
adc
push
ss
inc
loop
push
push
adc
xor
xor
inc
in
adc
push
aam
into
pop
sub
cmp
sbb
mov
mov
imul
sbb
xor
push
jle
jmp
aaa
outsb
pop
add
jg
test
test
fsubrs
inc
push
js
test
iret
mov
jmp
adc
cvtdq2ps
sahf
add
insb
mov
mov
sti
pop
adc
cld
cltd
bound
mov
int
leave
push
adc
stos
fs
push
push
adc
inc
pop
xchg
inc
rorb
inc
into
pop
subb
lahf
sbb
xchg
cmp
xchg
fcmovb
cmp
push
stc
cmp
mov
jl,pt
jle
xchg
fiadds
iret
pop
aas
ret
movsb
clc
lret
popa
loopne
dec
push
fwait
lcall
jecxz
sbb
xchg
pop
jo
int
lahf
imul
out
push
ja
jg
stc
mov
sbb
ljmp
jp
jle
sarl
rorl
fstpl
stc
int3
mov
movb
pop
mov
pop
out
mov
adc
ljmp
add
pop
xchg
push
aam
inc
push
ret
and
cmc
adc
insl
push
mov
and
ret
push
adc
mov
into
mov
cmpsb
daa
adc
aam
push
sbb
jge
and
jge
nop
xlat
and
and
sub
xchg
pusha
adc
push
stc
jp
je
loopne
and
ja
aaa
sti
fisubrs
jp
jg
dec
xor
repz
pop
sub
movb
mov
sbb
mov
mov
push
int3
pop
push
cmc
adc
push
pop
test
mov
adc
je
and
aas
shrb
add
js
dec
jbe
or
lods
pop
test
jg
push
sbb
stos
rorl
loope
fldt
jge
add
sub
pop
mov
inc
adc
xchg
fdivrp
sub
outsb
lahf
test
testb
mov
jnp
stos
jo
xchg
ss
jne
mov
inc
xlat
push
pop
mov
mov
xlat
jb
jne
xchg
gs
xor
addr16
ret
and
jae
mov
and
in
gs
push
sbb
or
lods
shlb
cmp
mov
repnz
call
aam
jmp
leave
or
ss
mov
repz
ret
int
aas
hlt
nop
push
add
add
cmpsl
sahf
mov
push
cld
inc
cmp
jmp
lea
ljmp
sbb
test
rcrb
daa
mov
loop
in
aaa
inc
dec
aaa
xor
jmp
and
jo
lret
popa
lods
add
add
enter
push
push
outsb
addr16
cmp
lea
push
cs
aad
and
rorl
cmc
sbb
add
jmp
xor
cmpsb
jns
jl
fmull
scas
mov
and
imul
lahf
mov
pop
outsb
and
std
xor
push
mov
ja
subl
int
data16
mov
adc
pop
das
ret
idivl
out
sub
cmpb
dec
xchg
push
or
sub
or
xchg
hlt
push
out
enter
hlt
adc
daa
mov
sti
stos
pop
aad
out
dec
movsb
adc
lea
mov
and
pop
xchg
jo,pt
scas
add
pop
out
pop
popf
fwait
loop
aaa
push
movsb
xor
inc
loope
shlb
test
jp
in
insl
testb
xchg
les
scas
lcall
pusha
mov
push
aam
mov
aaa
sbb
inc
pop
es
jae
in
in
sbb
in
add
adc
dec
sub
imul
ljmp
xor
mov
or
and
insl
mov
cmp
mov
jne
test
add
xor
or
lods
jo
add
test
xchg
push
repnz
cmpb
icebp
dec
and
cld
adc
dec
shl
in
mov
inc
imul
sbbb
enter
dec
aad
sahf
daa
xchg
xrelease
testl
xchg
pop
and
cmpb
mov
or
jp
outsb
dec
lret
ja
insl
push
xchg
xchg
stc
jbe
mov
push
cli
loope
sub
cs
jno
leave
sar
or
sbb
fstpl
and
cmp
fiadds
dec
or
dec
or
dec
ja
insl
pop
pop
fiaddl
add
push
add
pop
push
adc
xchg
add
dec
mov
iret
nop
push
and
mov
xchg
and
or
int3
sti
aad
adc
sbb
or
pop
xchg
add
pop
fsubl
push
bound
outsb
push
pop
iret
aas
fiaddl
xchg
adc
lahf
daa
pop
push
sti
lret
les
nop
in
addr16
xchg
popf
dec
in
mov
testl
sub
push
xor
add
and
or
popa
sbb
mov
idiv
and
lock
outsl
daa
add
ja
mov
xchg
nop
adc
fdivrl
movsb
xchg
fsubp
mov
xlat
pop
mov
sub
cmp
hlt
adc
movsb
cmp
jle
and
movsl
cmpsl
inc
xchg
jnp
ds
aaa
repz
mov
popf
jo
pop
or
les
cmp
lea
cld
iret
clc
out
addr16
mov
ja
in
push
sbb
sahf
loope
and
jmp
jno
or
clc
ds
inc
in
in
mov
neg
lahf
xchg
subl
rolw
rol
test
ja,pt
ret
sti
cmp
xchg
out
ss
ljmp
adc
testb
call
out
cld
pop
adc
jne
cmp
dec
dec
adc
sub
xchg
loop
dec
insl
mov
mov
xchg
and
sbb
lret
and
and
aaa
and
mov
nop
out
aas
xchg
pop
mov
incb
jno
add
cmp
bound
mov
jge
fists
mov
lock
push
adc
call
dec
jg
push
inc
mov
mov
sub
jp
xchg
inc
fistl
fwait
jne
inc
xlat
gs
push
shlb
fwait
add
rorb
out
mov
ret
mov
and
aad
movsb
dec
xchg
in
ret
into
inc
sbb
lods
inc
mov
imul
pop
lea
xor
daa
fadd
gs
sub
push
jmp
adc
aad
mov
out
xor
mov
push
loope
fwait
sub
dec
sbb
ja
sbb
int
negb
sub
dec
pop
dec
fisttps
sub
ficoms
mul
jg
xchg
or
int
add
aad
iret
cmp
out
out
mov
and
xor
jg
loopne
pop
inc
adc
add
pop
adc
pop
pop
cmpsl
xor
mov
js
sub
sbb
jnp
enter
jo
fnsave
hlt
jge
cmpsl
outsl
add
fisubs
mov
jne
ret
add
mov
int
xchg
dec
insb
popf
mov
cwtl
mov
jle
in
xchg
sub
cmp
insl
ret
dec
in
push
enter
aad
jne
imul
pop
push
xchg
sti
adc
push
test
adc
push
or
cmp
into
js
or
push
mov
movsb
mov
mov
aam
mov
pop
adc
or
pop
sub
cli
jle
addl
jle
and
jge
mov
loope
dec
pushf
push
add
mov
jle
or
cli
jp
sbbw
sbb
mov
enter
or
je
out
xor
repz
aas
sbbl
dec
sbb
inc
into
dec
xor
mov
adc
ret
jne
fcompl
shrb
insl
xchg
xor
push
fidivrl
dec
test
out
outsl
jo
into
mov
push
lret
xlat
insb
mov
cltd
sub
push
jp
or
inc
jnp
scas
add
mulb
pop
xor
mov
stc
adc
jns
pop
dec
rcl
popa
pop
dec
mov
sub
or
fidivs
aad
andl
inc
cmp
or
cmc
scas
movsb
adc
push
dec
into
cmc
push
fnstsw
inc
hlt
dec
icebp
xchg
mov
xchg
test
push
lods
add
xchg
mov
cmp
das
rorl
fisubl
loop
inc
sahf
sub
je
mov
repnz
lea
mov
je
push
sysret
loop
jae
icebp
mov
das
test
dec
imul
pop
fs
mov
negb
add
or
out
add
xchg
dec
sbb
loope
bound
ud2
aad
pop
test
or
jae
lret
rclb
cmp
dec
sbb
mov
fsts
sahf
clc
cmp
mov
xor
mov
sbb
push
mov
cltd
adc
mov
mov
pop
xchg
mov
mov
fildll
cmp
adc
adc
xor
test
not
es
lock
dec
fwait
dec
push
out
adc
into
cmp
cld
jg
push
jbe
push
cltd
and
and
out
addr16
mov
sbb
push
pop
lahf
out
ret
fstpl
in
or
fcomps
pop
xor
nopl
mov
cltd
push
ljmp
xor
es
sub
rolb
sub
sbb
jb
jae
lahf
test
repz
in
movsl
mov
inc
hlt
sbbb
push
cli
je
xor
cmp
fs
jl
orl
mov
std
sbb
sbb
add
pop
mov
pop
fistpl
arpl
pop
cmpsb
fistpl
cmpsb
xchg
jo
in
insl
add
mov
test
sti
jo
push
lahf
call
cltd
movsb
shlb
lret
inc
lcall
or
adc
jp
xor
xor
xchg
popf
jecxz
mov
sbb
testb
pop
dec
and
sub
sbb
add
outsb
mov
stos
add
push
stos
pop
ret
rcrb
pop
in
pushf
mov
pushf
pushf
or
xchg
loop
pop
inc
push
cmpl
loope
fdivrs
jl
outsb
in
jle
xchg
push
fisttpl
subl
add
inc
jns
mov
repnz
insl
mov
out
cmp
xchg
jg
sub
test
jo
nop
or
sbbl
mov
cmp
jb
jge
cmovne
xor
xchg
jae
dec
andb
mov
xchg
enter
lret
js
dec
test
scas
mov
es
mov
in
lahf
dec
cmp
insb
xchg
dec
xor
inc
dec
push
adc
and
imul
repz
xchg
and
mov
push
es
pop
xor
jge
mov
xor
jle
jge
js
js
mov
lcall
push
addr16
out
std
and
or
xor
fucomip
adc
cli
mov
xlat
stc
add
sbb
jle
inc
imul
fwait
inc
aaa
sbb
xor
scas
or
mov
ret
dec
addr16
clc
push
jns
popf
lds
pop
cmp
ja
lcall
fs
outsl
mov
movsl
addr16
or
sub
cli
loope
das
cs
add
adc
lea
jl
fwait
pop
adc
cmpsl
push
test
cld
fcom
lret
outsl
daa
xor
xchg
xor
cmp
subb
and
rcll
push
push
shrb
or
and
sbb
hlt
mov
or
sbb
cltd
dec
or
aad
mov
test
push
stc
mov
outsb
mov
push
jo
fcompl
cmpsb
mov
mov
loopne
fildll
sbb
inc
shlb
push
imul
hlt
shlb
push
dec
xchg
push
sbb
fnstenv
enter
jmp
je
xor
pop
subl
scas
fwait
cmpl
sbb
int
pusha
xchg
test
mov
jbe
or
push
clc
repnz
cmpsl
test
jmp
aas
xor
mov
mov
mov
stos
adc
add
outsb
push
js
and
mov
subb
inc
sbb
fwait
dec
fdiv
mov
int
dec
xor
les
insl
xor
ret
nop
ror
push
ds
push
push
adc
sti
adc
out
push
fcmovb
leave
std
xchg
dec
gs
lret
mov
lahf
lods
sbbb
out
cli
imul
push
cmc
ds
scas
aad
enter
xor
xor
jbe
out
xor
fldl
xorl
aam
in
dec
mov
jle
inc
outsl
sbb
xlat
test
push
les
xor
add
cmp
cltd
arpl
or
in
inc
mov
pop
in
ds
xchg
pushf
mov
push
inc
lret
mov
and
jbe
ret
jecxz
fwait
push
sbb
in
push
fisubrl
dec
inc
add
fs
or
push
jge
hlt
lret
sub
and
lcall
in
xchg
ret
or
sub
cmp
pop
inc
cltd
inc
jg
lret
cmp
lods
std
pusha
pop
aam
mov
pop
loop
clc
call
or
xlat
das
or
push
repz
cwtl
jle
mov
mov
push
mov
push
imul
pop
and
fldenv
inc
fst
fmull
jbe
dec
jb
lret
xchg
inc
pop
call
stos
push
mov
sbb
mov
das
dec
ret
rcl
and
sub
or
or
out
xchg
test
stos
pop
stc
mov
ret
or
sti
test
jnp
sub
std
imul
pop
ja
ss
push
insl
mov
mov
push
and
divb
push
xor
add
repnz
in
mov
jge
xchg
add
add
loope
cmp
aad
jg
cmpsb
xor
inc
and
xor
inc
mov
fdivl
adc
lret
dec
mov
jmp
enter
out
jg
push
fdivl
and
test
ret
add
fistpl
rolb
cmp
out
mov
std
add
movsb
jo
int
stos
lahf
or
mov
imul
xor
mov
clc
adc
sbb
mov
mov
aas
mov
sub
popf
movsb
sarb
mov
mov
xchg
mov
jno
fisubrs
mov
mov
add
std
sub
pop
sahf
ds
and
mov
mov
jp
push
movsl
dec
lret
push
ret
mov
ljmp
push
push
addl
add
and
stos
bound
inc
ret
dec
xorl
push
imul
push
pushl
jb
lods
test
cltd
or
lahf
aaa
add
outsb
sahf
filds
icebp
jg
into
fcomps
pop
fmuls
js
ja
in
xchg
rcr
sub
or
mov
jb
inc
in
pop
and
or
cmp
pusha
mov
mov
movsl
sub
aam
jecxz
push
pop
lea
bound
mov
loopne
fsubrl
xor
lret
dec
xor
mov
scas
ret
pop
or
ficoml
and
push
push
fldenv
jecxz
out
sahf
mov
fsubrs
bound
sbb
sahf
inc
cs
dec
push
ds
addr16
sub
mov
mov
and
pop
adc
and
xchg
xchg
sbb
pop
xchg
call
xor
insl
fstps
mov
pusha
pop
inc
jle
sbb
inc
xor
push
mov
mov
lea
lds
push
pushf
mov
inc
cwtl
out
jno
cld
hlt
int
and
sbb
mov
push
dec
sub
fs
cli
out
inc
push
bound
or
dec
les
cli
fistps
cld
imul
sbb
sub
jbe
shlb
mov
jp
inc
arpl
daa
and
mov
xor
or
sarl
flds
inc
adc
or
je
inc
pop
cmpsl
andb
push
jns
testb
es
aas
movsl
mov
mov
adc
push
xor
sbb
xor
cmp
mov
incb
inc
cmc
cli
xor
data16
nop
mov
cmpsl
push
cmpb
ljmp
out
loope
or
cltd
pmaddwd
fwait
lds
jmp
mov
out
push
mov
fnstenv
scas
or
mov
lcall
mov
in
inc
adc
inc
sbb
or
inc
fldenv
mov
fs
sub
lods
xchg
jns
daa
stc
hlt
inc
mov
pop
jle
dec
push
xchg
ljmp
jne
int3
movsb
out
mov
lds
je
cwtl
mov
pop
iret
subb
in
icebp
cmp
push
pop
dec
fnsave
stc
in
aam
sub
xchg
xor
jb
inc
cmp
in
push
mov
fadds
mov
sbb
pop
into
pushf
ds
and
sub
loop
push
mov
jne
jl
ljmp
fstps
cmp
dec
fistps
out
push
je
nop
inc
fsubrp
push
push
shll
into
or
jns
ljmp
jge
cmp
sbb
leave
lock
jl
push
or
ret
cmp
jmp
dec
or
sbb
xchg
adc
pop
repz
rcr
cltd
or
lret
dec
loopne
repz
in
in
mov
rcrl
cwtl
cmp
int3
jle
call
scas
pop
push
mov
out
repnz
sub
lret
adc
add
ja
test
enter
cmp
aad
mov
inc
mov
jno
sub
stos
push
lods
xor
les
ret
mov
iret
mov
dec
sub
pop
sarl
stos
xchg
pusha
add
outsl
pop
dec
negl
insb
inc
cltd
int3
and
dec
movsb
dec
push
pusha
lret
and
into
dec
ret
inc
shrl
std
jbe
les
lret
or
fstpt
pop
hlt
insl
loope
daa
push
cltd
stc
add
out
jns
insl
scas
sub
jge
in
shlb
out
in
gs
lods
sti
mov
cmp
leave
adc
imul
jge
lret
push
repnz
cmpb
jge
jg
cwtl
mov
cmpsb
mov
addb
pop
in
sub
xchg
adc
mov
imul
xchg
xor
and
sub
pop
enter
js
iret
jp
aaa
popa
dec
xchg
xor
shlb
adcl
stos
jno
outsb
sahf
rcrb
pop
mov
adcb
enter
inc
pop
cmp
insl
insl
lahf
jbe
mov
out
fwait
push
inc
imull
sub
les
adc
aad
jp
pop
mov
loopne
pop
flds
sbb
in
mov
mov
orb
or
cmp
jnp
repz
out
dec
add
sub
mov
js
or
cmpsb
je
mov
pushf
mov
pusha
add
inc
sub
repz
pusha
mov
xchg
rol
mov
pop
sbb
and
mov
sub
aam
lahf
add
jl
arpl
xchg
mov
inc
mov
dec
aad
xor
movsb
les
pop
mov
and
sbb
mov
fsubl
repz
dec
lock
and
xlat
push
rclb
movsb
lods
mov
movb
arpl
jl
sub
jmp
int3
push
mov
out
sub
repnz
push
pop
push
mov
lcall
cmp
inc
mov
jo
inc
and
js
inc
idiv
nop
shll
xchg
pop
jns
std
bound
mov
into
fs
mov
jmp
sbb
cmp
imul
loope
daa
sub
outsl
and
xchg
enter
mov
xchg
jnp
mov
mov
push
adc
mov
inc
mov
shl
mov
sarb
pop
aas
pop
arpl
mov
jle
push
pop
cld
xor
ds
pop
or
and
pop
sub
scas
inc
push
daa
pop
jnp
les
daa
xor
fs
mov
imul
push
div
ret
ja
xor
xchg
push
dec
std
push
stc
ret
neg
xlat
shrl
sub
lret
pop
dec
fsubs
insl
sbb
int3
aaa
ss
sbbb
insb
xor
sbb
lods
pop
sub
dec
or
fndisi(8087
sbb
pop
and
mov
cld
xor
xor
mov
vandps
fwait
mov
push
xorl
out
sub
cmp
jnp
aam
or
push
xor
in
jo
or
arpl
imul
xor
lcall
and
mov
lahf
pop
cld
sbbb
insb
sbb
jnp
lret
ljmp
nop
inc
xor
aad
addr16
repz
bound
lds
arpl
push
icebp
ret
pushf
cltd
lock
rclb
sbb
pop
add
fwait
jo
sbb
xchg
fdivrs
shl
push
xlat
js
js
xlat
xchg
and
push
aam
popa
add
std
mov
aas
dec
dec
out
test
pop
xchg
call
sahf
int3
jge
pop
adc
out
adc
xor
jmp
jge
push
lret
out
test
shl
pop
pop
jp
mov
mov
mov
sub
loopne
xchg
mov
jbe
addl
pushf
lret
addl
push
cs
sti
xor
pop
pop
lea
xor
push
jo
cltd
mov
dec
ljmp
int
call
pop
repnz
mov
and
lods
push
icebp
xchg
popa
pcmpgtb
xor
leave
push
jns
mov
jecxz
jne
inc
sub
xchg
adc
cld
xchg
jmp
bound
inc
mov
ljmp
adc
inc
or
dec
xor
jecxz
xor
push
jg
jae
or
insl
mov
dec
or
mov
add
orb
push
cmp
cmc
xor
jecxz
adc
test
data16
ffree
xchg
inc
push
lret
jl
add
adc
shlb
incb
nop
lods
and
mov
arpl
mov
adc
loope
adc
mov
out
xor
lods
adc
ds
outsb
aaa
add
ret
xor
mov
lock
popf
into
imul
fs
xchg
pusha
andl
xlat
xor
loopne
bsf
cmpsl
into
inc
xchg
out
cmpsb
inc
xor
push
cld
and
cli
lods
test
in
cmpsb
addr16
leave
sbb
lods
mov
mov
xchg
mov
into
cmpl
xchg
xlat
sbb
pop
add
push
inc
cmpsb
inc
mov
lcall
mov
aaa
fsts
in
sahf
ss
andb
into
aas
dec
idivb
mov
fisubs
push
xlat
orl
in
mov
pop
xor
pop
pop
mov
mov
dec
fwait
mov
adc
cmpsb
adc
aam
dec
add
sbb
push
rolb
dec
xchg
roll
push
add
push
push
int3
pop
jno
int3
or
or
jg
outsb
jmp
mov
mov
xor
sub
push
and
xor
adcl
or
loope
cmp
jb
xchg
sub
lods
test
xchg
bound
fdivr
sbb
mov
jno
adc
popf
dec
cmp
cmp
sbb
scas
movsb
enter
inc
inc
pop
mov
rol
clc
mov
pop
idivl
mov
cli
mov
out
js
lahf
jns
xchg
adc
ja
sub
push
out
inc
mov
iret
bound
loopne
sub
insl
sbb
dec
imul
arpl
adc
xchg
arpl
push
inc
ucomiss
cmp
loope
push
movsb
push
push
in
loopne
xchg
sub
dec
mov
cmp
or
jmp
aam
dec
lds
sub
pop
icebp
ja
and
jle
mov
mov
or
into
arpl
xor
scas
mov
dec
xchg
sarb
jecxz
scas
inc
imul
bound
stos
cwtl
or
nop
pop
daa
pop
adc
sar
mov
movsl
fstps
lret
sub
push
lcall
mov
data16
lcall
ror
mov
push
sub
pop
aaa
out
subb
dec
out
es
adc
adcb
push
jmp
das
push
rolb
lret
loope
xchg
outsl
and
push
adc
mov
pop
push
inc
test
cmpsl
fcomi
inc
sub
inc
adc
push
and
sub
outsb
and
aam
xchg
ljmp
push
jo
lea
pop
mov
jns
sub
dec
add
aaa
mov
icebp
test
lods
addl
adc
rolb
shlb
push
in
imul
push
adc
push
movsl
cmp
cmpsl
sub
dec
mov
fldenv
iret
mov
in
repz
adc
jno
add
inc
mov
sub
mov
inc
or
inc
push
mov
pop
or
fistpll
in
aas
push
stc
pop
lahf
ds
orl
mov
lcall
xorb
dec
fwait
mov
pop
xchg
dec
pop
test
mov
std
mov
mov
inc
xor
inc
sbbl
hlt
jl
mov
outsb
sbb
pop
add
sti
movsb
mov
or
add
pop
js
imul
clc
adc
xor
aam
xchg
xchg
mov
popl
mov
mov
jne
sbb
aas
push
ret
hlt
sub
sub
aad
cltd
test
xor
sarl
loopne
xchg
mov
loop
lods
mov
or
adc
xor
lds
popf
bound
loopne
push
jle
fildll
pop
cli
mov
sub
mov
push
mov
icebp
pop
add
mov
aaa
and
sti
xchg
or
test
sub
add
mov
cld
xchg
xchg
les
cmc
fsubl
gs
das
inc
xchg
lds
in
mov
cmp
mov
lret
adc
lcall
push
xor
jnp
pop
imul
stos
lahf
test
jnp
shl
mov
test
adc
dec
or
push
sbb
xor
dec
data16
jns
mov
std
sbb
mov
xorb
fsubrs
sbb
pop
pop
loop
test
and
push
inc
cmp
sub
sub
jnp
ret
inc
fstps
in
shrb
cli
mov
fld
push
test
in
add
add
outsb
insl
arpl
or
ja
push
and
daa
scas
imul
je
xor
pop
dec
in
lods
inc
testl
in
lahf
das
and
cmp
cli
add
jo
add
mov
adc
hlt
pop
push
enter
mov
movsl
in
lock
jbe
inc
in
sarb
adc
mov
icebp
lahf
out
lds
xchg
pushf
icebp
in
movsb
jge
shlb
addr16
mov
inc
xchg
repz
not
pop
arpl
and
push
xchg
mov
mov
jg
or
ds
sbb
ret
lds
js
and
and
adc
movsb
xlat
inc
mov
and
inc
and
inc
daa
cmc
xor
aaa
jbe
out
popa
jecxz
ds
gs
test
mov
mov
mov
pop
lret
and
pop
test
push
jno
movsl
adc
pop
and
insb
xchg
inc
mov
std
xor
jnp
cwtl
das
jno
jg
sub
cmpsb
pop
cld
adc
js
aad
lret
cltd
jecxz
push
push
ja
push
push
jecxz
push
in
xchg
orb
outsl
loop
sub
sbb
pop
sbb
inc
fimuls
push
mov
je
fsubrl
int
out
rol
mov
cmpsl
sub
add
or
jo
repz
dec
scas
pop
xchg
filds
cwtl
and
popf
or
fildl
inc
adc
and
mov
pop
jmp
std
jae
aad
into
cmp
insl
movsb
cmpsb
ljmp
sub
popf
mov
in
push
add
jne
addl
adc
adc
js
push
shrl
in
jb
cmp
or
jae
sub
repnz
lcall
dec
std
add
jl
mov
sub
inc
adc
push
enter
divl
aam
push
cmp
lahf
mov
enter
adc
pop
push
xchg
sbb
stc
das
stos
in
jge
pusha
shr
icebp
adc
mov
add
cmp
add
sbb
cmpl
add
and
mov
cmp
push
ret
and
dec
movsb
iret
pushf
jge
inc
jae
add
into
inc
dec
dec
cmp
xor
add
cmp
pop
xor
jmp
mov
xchg
xchg
fdivp
sub
sub
lock
das
xor
pop
pop
jbe
push
dec
fcomip
stos
jg
mov
xchg
shll
xor
repnz
movsl
shll
mov
xor
xchg
test
cmc
stos
inc
push
fsubp
out
sti
push
mov
dec
fdivs
popa
inc
xor
xor
push
adc
inc
sbb
test
dec
sti
or
nop
sub
mov
aaa
pop
rcrl
jae
add
add
outsb
addr16
fwait
subl
sub
ds
or
mov
je
decb
out
push
add
jbe
mov
jae
add
sti
add
mov
aaa
cltd
cwtl
adc
or
mov
fcmove
xchg
and
pushf
ja
and
add
in
jne
pop
pop
inc
adc
fadds
mov
insb
fwait
sbb
adc
fwait
push
cmp
in
leave
popl
inc
push
xchg
push
xchg
sbb
pusha
pushf
xchg
mov
push
lods
sub
pop
sub
mov
inc
call
in
leave
inc
xor
stos
test
lret
inc
xor
sbb
push
xchg
ror
xchg
ss
mov
shrl
loopne
pop
aas
shl
popa
ret
ljmp
outsl
lea
or
push
mov
push
jb
xor
dec
cmc
xor
xchg
sub
ss
mov
clc
inc
mov
push
ljmp
cmp
int
fs
inc
shll
lods
cmp
orl
hlt
jp
shll
pop
data16
shll
xchg
stos
dec
adc
fisubs
pop
jl
dec
sbb
test
pop
shrb
testb
cwtd
xchg
xchg
sbb
dec
inc
cwtl
cmp
inc
pop
add
jbe
fs
jp
out
test
lods
jnp
aas
fsubs
imul
add
sub
jg
push
inc
push
fidivl
cli
mov
xchg
mov
out
ret
jl
jmp
jg
shrl
test
fcmovbe
inc
subb
stos
insl
pop
xor
mov
cmp
mov
jmp
mov
inc
jge
cs
mov
in
adc
pop
lret
sub
popf
xor
mov
loop
push
repnz
and
cmp
mulb
fisubrs
int
adc
imul
mov
cld
xor
xor
jg
notb
or
jmp
fs
pop
inc
or
lock
test
push
cmp
cli
fst
push
jno
fcomps
add
xchg
xor
cwtl
xorb
pop
adc
dec
ja
sub
cmp
in
add
push
imul
lods
xchg
ret
icebp
add
outsb
sbb
xchg
mov
iret
je
mov
xchg
or
icebp
and
stos
jo
cmp
aaa
pop
fldl
inc
dec
mov
mov
add
or
orb
jecxz
inc
rorl
sub
xchg
pop
addr16
shll
stos
push
pop
xchg
in
mov
mov
add
inc
jl
insb
hlt
mov
fs
add
cmpsl
adc
repz
mulb
cmpsl
test
imul
add
cmpsb
cmp
xchg
test
jmp
cmpsb
int
out
jne
inc
imul
fstpt
jne
inc
sbb
es
je
adc
jo
pop
mov
adc
sub
iret
orl
push
in
rcll
insb
pop
cmpl
push
adc
sub
test
and
outsb
dec
notb
and
pop
cld
xlat
push
pop
sbb
lods
push
int
sbb
inc
ss
fdivl
cs
imul
sahf
ljmp
andb
popa
mov
mov
sub
xchg
pop
push
xor
pop
testb
jecxz
dec
xor
fucomp
gs
mov
xchg
out
xchg
loope
sti
and
cld
push
mov
lcall
mov
sahf
mov
add
and
les
sub
andb
idivb
xchg
rcrl
or
or
sub
inc
mov
adc
aad
aaa
cmp
pop
inc
das
ljmp
cli
rolb
sub
andb
jmp
push
lods
pop
addr16
mov
ret
popf
mov
jge
cmp
out
aam
xchg
cmp
or
xor
inc
aam
pop
push
mov
in
or
xchg
daa
cld
mov
pop
popf
pop
ja
and
sar
clc
cmp
mov
std
out
mov
inc
aas
ret
arpl
pop
movsb
mov
fdivl
xor
xorb
nop
popa
pop
shlb
cltd
mov
and
xchg
push
adc
jmp
ja
jb
jns
dec
jbe
clc
xlat
lahf
and
daa
cld
test
cmp
scas
std
add
jmp
pop
pop
adcb
inc
lock
fcompl
and
repz
dec
adc
scas
jmp
mov
leave
push
xchg
popa
ds
gs
mov
cltd
scas
loope
xor
jecxz
ficoml
mov
inc
fists
enter
std
cmp
lds
sbb
pop
pop
push
adc
and
dec
xor
cmpsb
cmpsb
pop
lret
xlat
lcall
inc
push
jmp
cli
dec
movsl
mov
sarb
jmp
mov
pop
cltd
gs
pop
ret
mov
dec
pop
mov
sub
aad
call
mov
clc
push
cmp
xor
fwait
lock
test
sbb
and
xchg
js
mov
and
dec
testl
and
mov
add
xor
or
addr16
lret
fimuls
sbb
data16
xchg
sbb
cmc
add
cmc
xchg
in
pop
loopne
push
push
inc
in
xchg
into
ss
pop
adc
mov
fstps
rclb
stc
shrb
pop
adc
pushf
or
out
pusha
lock
xchg
sub
mov
xchg
inc
ds
or
ret
pop
push
pop
jnp
mov
jl
xchg
mov
push
sub
mov
mov
mov
testb
stos
mov
fbld
aas
out
xchg
mov
ljmp
enter
xchg
outsb
addr16
jne
repz
xor
cmp
testb
ja
nop
les
adc
mov
das
into
in
mov
movsl
sub
jg
jae
xor
lcall
cmp
icebp
or
mov
adc
xchg
addr16
mov
fisubrs
ret
mov
adc
or
dec
mov
fbld
mov
sub
bound
xor
lock
mov
shll
jb
sbb
mov
loope
adc
arpl
testb
jbe
iret
scas
jmp
jns
jecxz
mov
scas
ss
push
sbb
cld
sub
sbb
adc
inc
add
cmp
push
addr16
sar
push
jge
dec
pop
lock
testb
sbb
xchg
dec
cmp
insl
mov
repnz
xchg
jmp
outsl
xor
lcall
xchg
adc
es
out
push
inc
insl
and
or
mov
cmpsb
sub
cmpsl
js
mov
int3
shrb
inc
out
rcr
data16
mov
mov
mov
ror
sub
sbb
or
sti
mov
lods
mov
es
dec
push
pushf
rorl
mov
outsb
push
jne
lret
mov
jnp
cli
jmp
dec
imul
int
mov
test
or
xor
iret
out
aaa
sbb
mov
pop
push
mov
loop
jns
mov
inc
push
int3
loopne
mov
and
int3
adc
lret
in
push
out
xchg
les
test
fnstcw
and
out
xor
jnp
call
xchg
sbb
inc
add
lock
aaa
sbb
les
shll
push
aam
fwait
cs
cltd
xor
adc
lret
xchg
clc
jecxz
sbb
xchg
repz
cli
add
xchg
or
insl
cmp
cli
fsubr
xor
or
adc
test
fistps
push
enter
and
mov
sbb
mov
push
lods
push
mov
enter
insb
push
insl
jle
push
push
ja
push
dec
orl
sbb
in
in
cld
lock
cmp
scas
cmpsb
stos
mov
xor
cmpsl
in
push
insb
adc
jecxz
addr16
mov
lock
pop
mov
xchg
push
sbb
pop
sub
mov
icebp
sub
pop
ret
xchg
pop
add
ds
pop
aam
cltd
adcl
insl
inc
xor
call
inc
jg
cmp
shr
mov
ja
and
mov
pusha
sti
xchg
mov
mov
lock
fistps
sarl
mov
nop
adc
pop
cmpsl
or
adc
sbb
push
mov
xchg
adc
jbe
call
mov
sbb
add
pop
xchg
and
mov
push
push
ret
dec
cli
test
loope
xorb
add
cmp
in
clc
pop
mov
fwait
ds
insl
imul
sub
leave
fnstenv
ret
je
add
xor
jb
mov
adc
mov
mov
ss
add
fldt
inc
pop
push
shrl
ds
xchg
cmp
push
pusha
pop
adc
ja
inc
fsubr
cwtl
ljmp
cmp
mov
out
inc
cltd
and
cwtl
out
cmp
es
je
stos
adc
sbb
mov
ret
push
rorb
add
lock
gs
pop
mov
into
jnp
cmp
pop
jg
loop
jp
sahf
push
jne
fnstsw
add
pop
mov
push
stos
and
repz
xor
aad
test
push
sub
jecxz
les
or
out
test
sbb
inc
xor
cmc
xchg
outsl
push
adc
fcoms
and
int
and
movsb
push
fldt
test
movl
out
xchg
daa
cmpsl
xor
test
xlat
cmp
repz
movsb
cld
scas
sar
push
sti
js
pop
sarb
and
ja
call
lret
and
fsubrl
mov
xchg
repz
fcmovu
jle
shll
push
add
jae
emms
data16
mov
notb
les
mov
loop
mov
or
mov
mov
mov
data16
dec
inc
adc
in
xchg
sahf
dec
jo
cld
in
fmul
pop
xor
or
jbe
repnz
sbb
stos
lds
mov
xchg
lods
cld
xor
bound
push
les
jl
fs
add
adc
xlat
aas
pushf
cmp
mov
ds
int3
jae
test
divl
insl
mov
xor
shrl
xor
daa
jnp
add
les
ret
icebp
and
popf
mov
push
xchg
cmpl
and
data16
into
in
inc
pop
sahf
jno
xor
pop
rol
fsub
std
hlt
mov
inc
mov
pop
mov
gs
xchg
mov
and
mov
daa
mov
je
fstpt
gs
aaa
sti
dec
std
shl
or
adc
imul
pop
or
xor
pop
push
adc
lds
lret
xor
xchg
sahf
aas
adcb
xchg
rolb
mov
out
iret
int
int
push
pop
cwtl
push
dec
out
dec
push
shl
bound
or
test
xchg
mov
mov
shlb
mov
ja
lcall
push
out
jne
or
pop
adcl
dec
stos
lods
int3
test
lods
loopne
ja
push
and
jecxz
repz
ret
jp
dec
stos
rorb
mov
in
popf
pop
aam
bound
imul
cwtl
inc
mov
in
out
mov
lods
subl
int3
push
xor
mov
popf
xchg
add
repz
xchg
fisubs
sub
sub
mov
pop
cmpsl
dec
push
stos
sbbb
pop
nop
xor
adc
pop
mov
sub
js
jb
ds
adc
or
mov
mov
mov
outsl
sbb
mov
shlb
mov
lock
popf
addr16
cmp
pop
mov
test
mov
mov
js
pusha
inc
push
ljmp
or
push
insl
push
mov
int3
lahf
pop
inc
dec
adc
lea
cmp
xor
sbb
xor
pop
cmp
lods
or
jns
repnz
stc
cmp
rol
fnstsw
pop
mov
mov
and
adc
fistl
push
out
pop
adc
je
and
pop
sbb
test
jge
add
stos
add
push
mov
dec
pop
jge
adc
aaa
xchg
cld
jle
jbe
dec
imul
inc
fldenv
or
jmp
lock
mov
cmpsl
or
cmp
daa
mov
ljmp
and
fsubl
xor
outsl
or
and
sbb
xlat
cmpsb
jb
ja
out
arpl
sub
jp
fnsave
xchg
sbb
pop
inc
sub
rorb
or
lahf
les
int
and
mov
jne
sub
addr16
add
sbb
jl
sbb
inc
cli
jg
movups
scas
std
mov
dec
inc
sub
rorl
hlt
test
cwtl
push
push
fisubs
xchg
dec
shll
fadd
fwait
mov
dec
jae
std
xchg
push
pusha
xor
jne
out
cmp
imul
in
inc
xor
enter
les
xchg
out
or
jo
xor
mov
mov
inc
daa
mov
mov
mov
dec
jge
fs
outsb
add
subb
into
in
cmpsb
icebp
xchg
dec
ret
leave
popf
lods
dec
in
es
push
xchg
popf
cmpl
daa
jl
lock
and
mov
jl
push
fsubs
arpl
mov
stos
repz
xchg
mov
int
and
fnstenv
stos
testl
lock
sbb
cmpsb
scas
dec
mov
out
cmp
jno
add
rcrb
xchg
imul
ret
in
scas
pusha
jae
sbb
jbe
push
sarb
dec
push
jne
in
bound
pop
ss
and
push
subl
mov
fcoml
popf
xchg
repnz
into
pop
aas
dec
sbb
sbb
fwait
jle
pop
std
mov
gs
xor
adc
xor
xchg
std
push
repz
shlb
fsubl
lock
mov
lea
std
cmp
pop
or
rolb
mov
cmpsl
xrelease
hlt
xor
dec
xor
movsl
in
and
movsb
lods
jmp
mov
popa
popf
mov
cltd
push
dec
cltd
and
icebp
aam
insl
adc
mov
leave
jl
sub
fwait
sahf
pop
cmp
mov
mov
jno
lods
mov
js
mov
xor
in
in
ss
push
das
lods
xorb
sub
lods
or
imul
stos
ds
or
mov
xchg
jle
sahf
mov
out
mov
incb
pop
aaa
das
insl
scas
add
out
xchg
push
xchg
pop
not
mov
push
imul
clc
enter
repz
push
sbb
comiss
push
hlt
jno,pt
clc
ss
rclb
jge
rorb
mov
and
jo
imul
incl
loop
into
mov
xlat
arpl
mov
std
cmp
lods
mov
in
inc
out
repz
cmp
pop
or
xchg
jne
mov
or
push
add
hlt
xor
mov
adc
arpl
loop
insb
test
popl
xchg
mov
and
popa
xchg
mov
mov
xor
jg
shlb
pop
mov
leave
fidivl
mov
lea
inc
inc
fucomip
in
push
test
imull
dec
pop
or
xchg
in
idiv
sarb
cmc
inc
pusha
adc
cmpsb
pop
mov
jb
popa
dec
mov
dec
das
xor
movsl
mov
movntq
and
fsubs
popa
pop
push
xchg
inc
cmp
jp
mov
sarb
outsl
pop
mov
push
push
pushf
outsb
imul
jg
mov
cmpsl
dec
stos
hlt
xchg
jp
push
sbb
sbb
dec
inc
or
arpl
lock
lret
pop
cltd
mov
cmp
lock
popa
lret
fdivs
jle
mov
cmpb
scas
scas
leave
addr16
popf
xlat
cmp
xor
loopne
rcrb
sbb
xchg
shlb
sbb
arpl
push
cltd
dec
sahf
enter
push
or
jo
adc
mov
add
or
pushf
fistpll
jg
addb
into
test
dec
cld
inc
mov
je
fwait
cmp
nop
xchg
in
repnz
inc
push
imul
push
or
dec
paddsb
mov
lods
cmp
ret
or
jl
loopne
adcl
bound
cmp
add
ret
add
in
xor
pushf
xchg
test
scas
inc
push
ret
pop
rcrb
fdivs
inc
cmp
jo
imul
and
jecxz
das
add
in
cld
pusha
pop
xchg
add
jb
sub
loopne
pop
cmp
mov
hlt
adcl
fstpl
in
sub
cmp
lods
pop
mov
test
dec
and
sti
dec
or
test
xlat
push
sub
imul
mov
shr
lock
rcrl
cwtl
loopne
xor
fwait
xchg
dec
test
rclb
sub
popf
lods
cli
push
push
test
jmp
lock
pop
inc
jnp
sbb
sbb
sub
cmpsl
subl
lahf
adc
jb
push
fnstcw
sti
cmc
xorl
inc
insl
aas
xlat
ret
jae
pushf
jbe
andb
push
add
jmp
inc
insl
insb
fsubs
mov
fiadds
std
rep
repz
jg
inc
daa
or
xor
lea
imul
jae
out
aaa
clc
imul
inc
leave
rorb
inc
add
std
insl
int
push
shlb
mov
lret
dec
stos
fisubl
neg
sbb
mov
pusha
out
sub
cmp
sub
mov
jno
inc
and
mov
sub
lods
jl
push
adc
pop
sbb
xor
mov
or
adc
cld
mov
xchg
test
std
xchg
mov
mov
push
shll
mov
out
fidivrl
hlt
sbb
clc
fucomip
aas
xor
loope
push
inc
lahf
mov
xchg
add
js
inc
aam
adc
inc
mov
mov
out
push
roll
inc
jne
mov
mov
xor
xchg
mov
sbb
pop
inc
pslld
outsl
fstpl
add
into
movsl
mulb
adc
lea
inc
xchg
mov
cmp
aad
mov
es
loope
inc
and
stos
vmovupd
notl
sub
mov
mov
dec
popf
fstpt
fisttpll
lds
bound
pop
jb
movsl
mov
mov
popl
test
movsb
xor
loop
hlt
push
cmpsb
hlt
mov
sbb
add
lcall
and
clc
cltd
es
push
or
loop
mov
sbb
fstl
xchg
pushf
data16
jge
es
cmpl
bound
insb
sub
or
mov
inc
movsl
popl
adc
push
es
cmpsb
ret
aaa
push
push
sarb
sbb
xorl
sub
jno
xchg
jmp
push
push
mov
lods
loope
js
inc
dec
sub
insb
mov
ficompl
xor
sbb
jl
xor
xchg
int
ljmp
jmp
and
sub
mov
lahf
aam
adc
mov
sti
xor
jbe
orl
add
jno
push
cmp
outsb
or
xorb
pop
rcll
adc
ljmp
daa
mov
fildll
push
dec
std
in
decl
lock
cmp
test
rcll
dec
inc
das
add
in
negl
cmp
popf
sub
add
and
repz
outsb
and
ret
push
addb
clc
fwait
inc
or
pop
scas
pop
in
dec
inc
or
sub
xor
jo
mov
lcall
xchg
push
lock
jmp
pushf
repz
nop
xchg
mov
pusha
out
stos
pop
outsb
out
pop
mov
sbb
nop
and
ja
ljmp
adc
les
add
jno
call
push
or
rolb
insb
pop
hlt
sahf
sbb
sub
mov
dec
cmc
sub
das
sbb
mov
or
mov
gs
xchg
mov
sbb
ret
jns
data16
push
jmp
xchg
push
jge
mov
push
push
dec
add
jae
cmp
jge
xlat
add
shr
and
mov
pop
mov
or
inc
and
gs
stc
popf
pusha
mov
inc
mov
subb
insb
outsb
mov
jo
sbb
ret
dec
fimuls
add
addr16
jo
enter
rcrb
xchg
xchg
mov
stos
test
or
iret
sbb
pushf
xor
aad
push
scas
push
aad
shl
popf
setns
xchg
mov
in
sar
push
dec
or
jge
sbb
sbb
pop
jl
mov
dec
popf
pop
adc
push
xor
mov
notb
and
adc
xor
pop
pop
pop
push
ds
aam
iret
cmc
sub
or
inc
loopne
int
or
divb
ds
outsb
mov
sub
mov
repz
cmp
pop
mov
outsb
or
lret
push
inc
sub
xor
arpl
inc
and
inc
iret
sahf
test
jnp
or
in
out
cmp
fs
fninit
pushf
add
jmp
pxor
daa
scas
mov
sbb
inc
int
sbb
sbb
setnp
mov
xchg
out
mov
outsl
testb
jle
jg
hlt
int
rclb
inc
in
dec
loopne
inc
dec
imul
in
call
xor
dec
loope
sti
pop
in
lods
jp
js
and
cmp
out
jge
cmp
pusha
arpl
sbbb
pushf
movsl
leave
and
mov
cwtl
bnd
in
lods
lods
mov
leave
mov
inc
rorl
xchg
sarl
scas
sti
push
push
stos
jp
outsl
mov
xchg
cmp
lock
pop
arpl
pop
insb
add
rcl
dec
pop
aam
xorb
jnp
dec
aaa
push
loopne
pushf
pop
fwait
xor
mov
fstps
fbstp
or
mov
push
ffree
stos
or
mov
xor
out
and
inc
xor
in
sub
or
sub
dec
loopne
pop
xchg
test
pop
ja
cmp
pop
test
jb
cmp
sbb
dec
sub
movsb
rcll
cmp
xchg
mov
aaa
adc
mov
addb
sbb
push
rcrb
pushf
iret
dec
fisubl
fimull
mov
mov
lock
lahf
xchg
sahf
cli
fistpl
dec
scas
pop
adcb
adcb
test
sarb
add
sbb
sub
gs
sbb
cmp
jnp
mov
arpl
mov
push
loopne
xchg
movsl
ss
in
subl
ficoms
and
mov
fxtract
daa
sub
jo
jecxz
jo
inc
adc
fsts
movsb
mov
mov
pop
lcall
pushf
xchg
mov
das
mov
sub
ret
ret
in
push
push
xlat
cmp
movsl
xor
cmp
dec
mov
fwait
sbb
dec
clc
icebp
lahf
arpl
jno
decl
jl
mov
jecxz
pop
xor
arpl
xor
jbe
js
and
shlb
shrb
dec
jne
sbb
lods
add
inc
ret
dec
arpl
rcrb
insb
jmp
cmp
loop
andb
test
subl
sub
ja
mov
jno
xchg
test
mov
inc
idivl
xchg
inc
fs
pusha
scas
mov
sbb
pop
mov
fs
sub
push
stos
and
xor
lret
stos
out
lea
sbb
roll
mov
das
or
jno
out
jnp
lea
xor
push
sub
pop
fldt
enter
or
fwait
pop
push
jno
xchg
test
fyl2x
call
inc
daa
sahf
mov
lcall
sub
ret
sub
adc
or
jb
xor
es
jns
jo
loope
rorb
divl
or
add
cmp
das
subb
mov
push
dec
test
xchg
repnz
jns
pop
test
sub
adc
push
ljmp
dec
aam
mov
sub
loop
les
cld
lahf
lea
scas
orl
out
xor
movsb
cltd
ffree
pushf
add
popa
mov
pop
movsl
outsb
cmc
xor
pop
cld
and
shrl
cmpsb
cmp
mov
mov
push
adc
xor
das
div
enter
fbstp
sbb
pop
push
lahf
std
sbb
cmpsl
ret
or
std
xchg
xor
cmp
dec
hlt
stos
fnsave
sbb
scas
sbb
subl
iret
pushf
adc
fsubs
mov
xor
js
cld
cmp
push
push
push
lods
int
cli
dec
add
mov
dec
jo
jle
sbb
pop
xor
fprem
and
mov
inc
mov
xchg
inc
repz
std
add
mov
repz
xchg
xchg
sahf
inc
mov
push
jmp
inc
dec
clc
lahf
rorb
inc
cmp
inc
push
jns
pop
sbb
fistpl
push
fwait
adc
mov
mov
scas
mov
cmc
fsubrl
push
cmc
scas
cmp
or
arpl
pop
stos
addr16
sbb
movsb
sbb
iret
sarl
sti
aad
mov
adc
lds
mov
cmp
jge
jae
cltd
mov
xorl
xor
cli
jno
jno,pt
jb
es
or
lods
in
pop
imul
pop
pusha
xchg
mov
int
and
outsl
out
dec
lret
inc
adc
clc
add
cmpl
mov
es
repnz
jne
sbb
push
icebp
cmpsb
or
adc
sbb
mov
jo
aas
mov
sub
shrl
jbe
int3
insb
outsl
sbb
mov
stc
push
xor
sub
jge
sub
cmp
dec
imul
enter
mov
mov
pop
xchg
xchg
jge
repz
and
xchg
mov
cltd
cmc
data16
imul
je
push
out
outsl
sub
stos
mov
mov
lods
sti
mov
sub
push
xor
push
mov
jae
xchg
mov
adc
cmc
mov
adc
fdivr
gs
hlt
xchg
add
out
sti
add
cmpsl
xor
sbb
sbb
add
dec
push
fidivrs
fld
cmp
adc
cld
icebp
lods
jmp
or
push
popf
fildll
divl
jp
pop
scas
les
lea
mov
fadds
xchg
and
push
lret
inc
sbb
jg
test
cmp
mov
inc
sbb
jnp
mov
lods
mov
mov
mov
sbb
rcrl
inc
jo
rol
push
cld
outsl
sbb
sub
or
pop
lds
ss
lds
imul
mov
mov
pop
add
push
jg
outsl
not
mov
jno
xchg
aas
inc
push
cmpsb
push
xchg
jo
jne
xor
sbb
mov
inc
test
sub
xor
cltd
fdivrs
sbb
cmp
sub
push
les
inc
cltd
stc
sbb
pop
jno
pop
dec
lret
cmp
mov
xchg
lahf
enter
xor
lods
mov
xchg
inc
icebp
cmp
xchg
in
cltd
jne
mov
sub
es
mov
adc
sbb
inc
dec
out
imul
das
mov
inc
sub
lods
sub
push
xor
fmull
mov
push
lcall
or
or
pop
bound
push
jge
lret
push
sub
aaa
cld
int3
xor
shl
les
mov
mov
mov
je
xorl
loop
jle
divb
pop
xchg
push
lahf
icebp
mov
sub
bound
mov
jne
outsb
sbb
mov
jo
fsubrs
in
mov
mov
dec
hlt
cmp
aad
mov
stos
jno
mov
sub
xchg
lds
xor
fidivrl
xchg
mov
repnz
or
movsl
ja
jg
hlt
sbb
cmp
insb
xor
push
add
xor
mov
xchg
sub
sub
adc
cmc
push
push
out
addb
pop
fcmovnb
outsb
xor
cmpxchg
lret
sbb
mov
jnp
sub
mov
sarl
imul
or
stc
xor
clc
cs
sub
in
cmp
stos
dec
jmp
add
or
sbb
cwtl
js
lea
or
stos
lcall
or
push
loope
arpl
inc
xor
lods
push
cmp
rorl
imul
subb
aad
cwtl
xor
xchg
outsb
loop,pt
sbb
jno
insl
cmp
cmp
sub
in
mov
mov
rolb
fsts
fbld
xor
ret
and
sbb
mov
xor
repnz
in
or
test
jge
ret
movsl
out
inc
std
aas
dec
xchg
outsb
mov
ljmp
push
ret
pop
and
mov
ret
repz
sbb
aam
iret
outsb
aas
push
jg
movsb
cld
push
lds
sar
mov
sbb
sbb
into
testl
add
sub
ds
push
add
pop
mov
inc
sbb
push
ret
mov
or
push
movsb
inc
lret
repz
sahf
mov
mov
mov
sub
clc
pop
hlt
mov
mov
andl
mov
pop
sahf
inc
pushf
fstpl
push
xor
pop
dec
mov
inc
fwait
mov
js
xchg
adc
roll
iret
cmp
fdivrl
shl
lret
and
xchg
xor
or
lods
mov
cmp
lahf
repnz
and
scas
fdivs
cmp
shlb
push
adc
jo
insl
mov
pusha
mov
mov
repnz
mov
filds
sahf
incb
js
xchg
push
push
call
inc
xchg
push
sub
out
jo
or
fsubrs
xor
js
addr16
mov
jno
pop
jnp
icebp
pop
gs
sub
cmpb
inc
pop
das
rolb
ljmp
cmp
sub
sub
std
rolb
adc
jmp
mov
mov
aad
jmp
cltd
xor
push
dec
fs
mov
in
pusha
and
pop
adcl
or
mov
lret
mov
and
movsb
lret
faddl
push
inc
fnstsw
push
orl
lds
mov
clc
pop
stos
pop
das
std
dec
jge
ljmp
and
and
mov
xchg
or
sub
mov
push
imul
pusha
ja
or
xchg
xchg
shrl
inc
xchg
loop
pop
sub
cmp
ficoml
or
imul
pop
gs
jae
std
ss
dec
mov
jle
xor
scas
ficompl
js
aam
in
pop
cmp
jge
push
rolb
dec
stos
imull
pop
dec
mov
mov
lcall
loope
xlat
add
es
lcall
call
mov
out
lcall
arpl
hlt
mov
aad
scas
pop
pop
and
push
dec
mov
jbe
in
adc
scas
xchg
jb
jno
inc
mov
xchg
popaw
jge
xchg
push
in
icebp
pop
xlat
test
not
inc
loope
jle
out
fstpl
insl
inc
mov
and
mov
test
rcl
shll
cwtl
pop
sub
sbb
popl
arpl
outsl
adc
add
sbb
or
add
ret
mov
adc
js
pop
push
ds
jg
ja
pop
int
popf
out
push
repz
sub
pop
push
ret
xchg
nop
mov
mov
popf
pusha
rolb
jmp
add
lods
cmp
cmp
out
mov
sbb
xlat
inc
pop
mov
int3
mov
fisubrs
and
pop
gs
call
movsb
fdivrl
pop
fs
fxch
sub
mov
mov
add
movl
scas
sbb
xchg
and
push
push
lcall
out
mov
jae
bound
call
xor
cmp
insb
mov
enter
xor
ficoms
inc
jecxz
jl
ffreep
xor
or
fwait
les
iret
xchg
sahf
pop
rorb
mov
and
xor
mov
test
push
enter
mov
push
inc
adc
dec
gs
sub
mov
xchg
inc
dec
in
add
clc
pop
push
push
inc
dec
bound
out
mov
fwait
pop
or
test
cmp
in
insl
mov
push
pop
sub
stos
adcb
pop
inc
inc
imul
ret
xor
mov
insl
int3
arpl
shrl
mov
cmp
pop
pusha
pop
mov
fsubr
test
lcall
dec
xor
add
insb
loopne
je
insb
mov
pushf
jae
jge
cmpsb
enter
xchg
xor
lret
push
and
out
in
pop
mov
jns
lcall
lret
adc
cmp
repnz
jg
inc
insb
rol
push
xor
inc
addr16
pop
and
adc
out
jb
pop
cwtl
adc
lods
loopne
out
pop
mov
pusha
inc
les
sti
rcrb
rol
ds
pushf
es
add
out
cld
jg
es
inc
lock
int3
or
add
clc
int3
mov
sbb
std
inc
negb
dec
jge
xchg
cmc
push
cltd
ljmp
movsl
push
xchg
lea
jp
cwtl
mov
pop
lds
popa
jnp
add
jno
fstps
xor
mov
dec
std
out
pop
adc
adc
pop
popa
stc
lcall
loopne
int
pop
test
lods
lods
sub
pushf
lret
mov
addr16
mov
loopne
add
fildll
cmc
jmp
sub
mov
adc
dec
add
push
sub
push
add
push
xor
aam
repnz
fldl
mov
stos
fwait
push
neg
inc
test
cmpb
pop
push
pop
sbb
jp
xchg
nop
iret
cmp
or
jp
pop
sbb
cmp
dec
mov
js
mov
mov
cmp
jecxz
in
out
pop
or
sahf
in
xchg
mov
fadd
pop
sub
jle
inc
ja
mov
arpl
mov
imul
subl
sub
imul
mov
loope
jno
call
test
mov
movsb
push
sub
add
std
inc
add
cmp
mov
pusha
cmp
cwtl
mov
inc
sbbb
sti
dec
and
enter
out
jae
dec
loop
push
in
std
adc
aaa
lock
leave
rcrb
call
jnp
shll
dec
ret
inc
out
leave
frstor
outsb
out
ds
xchg
iret
add
or
loope
mov
sub
dec
cmp
push
adc
dec
mov
sub
loope
outsl
xchg
int3
shrb
daa
jns
lret
xchg
adc
cmp
loopne
icebp
aaa
test
lock
jmp
mov
lods
cltd
scas
enter
xchg
jg
stc
pop
clc
call
orl
mov
jg
dec
dec
std
push
aas
loopne
es
jae
lods
jno
mov
lcall
test
nop
and
sbb
pop
outsl
inc
fwait
push
test
push
sub
pop
daa
aaa
xor
aas
test
in
push
out
popf
mov
testb
in
icebp
pop
insb
xchg
pop
fmuls
lret
and
or
insl
sbb
inc
out
sub
and
xchg
loope
or
xor
jno
add
lods
scas
dec
add
daa
setnp
lret
or
aam
jo
xor
pushf
mov
lods
dec
mov
in
mov
mov
jge
mov
push
xchg
jg
test
cmc
xchg
jp
aas
call
lods
adc
push
hlt
loopne
shufps
imul
jg
bound
xlat
adc
stc
cwtl
sbb
je
cld
mov
dec
inc
gs
aam
push
xor
in
in
movsl
daa
insb
push
lea
pop
push
aaa
cmp
pop
adc
out
loop
jg
nop
inc
aaa
lret
inc
leave
pop
sub
sti
sub
xchg
push
pop
adc
pop
fidivl
int3
pop
push
push
lahf
mov
fcoml
rcrb
cmp
or
mov
int
loopne
xchg
jno
sub
fidivl
sti
test
lods
inc
xor
sbb
mov
inc
std
push
mov
cwtl
insl
inc
mov
push
mov
push
and
xchg
mov
inc
in
movsl
mov
icebp
xchg
push
sbb
out
dec
adc
sub
adc
fucomip
roll
insb
pop
incl
inc
mov
and
and
imul
inc
lret
xor
add
push
dec
push
pop
jecxz
movsl
mov
hlt
sub
das
stc
cmpxchg
rolb
int
xchg
repnz
push
es
ret
pop
xchg
mov
inc
dec
data16
mov
sti
pop
std
cltd
icebp
jns
push
arpl
or
and
sbb
add
mov
clc
sbb
cs
pop
testb
xor
sti
xchg
outsl
and
in
pop
adc
jnp
sub
mov
xchg
addb
push
daa
movsl
sbb
pop
add
xchg
pop
dec
push
adc
cmp
adc
sub
xchg
or
test
ror
cmp
mov
mov
scas
stos
lods
and
jo
dec
lret
adc
dec
and
jmp
push
cmp
iret
push
dec
imul
xor
fucom
cmp
repz
jecxz
daa
movsb
pop
dec
add
fs
test
sub
mov
add
ljmp
out
pop
mov
sbb
fs
icebp
aam
adc
xor
mov
and
xchg
outsb
outsl
mov
pop
xchg
adc
jmp
cmp
sti
adc
idivb
pop
lret
cli
mov
data16
inc
dec
js
add
outsl
and
mov
push
fdivl
pushf
addb
and
shll
xchg
adcl
movsb
lret
fildl
xchg
xor
xchg
push
fucom
aaa
cli
xchg
pop
mov
jo
mov
or
mov
jp
ss
cmpsl
in
divb
lods
push
shll
bound
add
mov
lods
popf
lock
cltd
pop
add
xchg
out
xchg
pop
ja
rorl
cli
lahf
lahf
mov
pop
mov
push
jo
mov
call
push
xchg
jb
dec
stos
sub
popf
sub
dec
mov
xchg
ret
in
rorb
or
es
jne
mov
jb
cmp
mov
es
shll
mov
xchg
cmp
or
xorb
mov
inc
shll
scas
fwait
stc
outsl
xchg
sub
cmpsb
shlb
pop
stos
loopne
lds
sub
cmc
cmp
jg
dec
mov
sub
call
sahf
scas
lahf
adc
push
lock
and
out
test
sti
mov
or
testl
mov
andl
std
test
call
jb
and
movl
into
jecxz
push
in
bound
dec
mov
adc
mov
mov
cs
cs
dec
imulb
mov
in
add
ljmp
sub
cltd
loope
mov
ss
loopne
mov
push
or
out
sarl
pop
adc
add
pop
xchg
nop
ss
sbb
xlat
adcb
inc
icebp
insb
cmpsl
ret
and
push
into
stos
leave
paddsb
dec
lret
into
mov
mov
push
pop
fsubrl
adc
in
out
xchg
add
sahf
cmp
jno
loopne
test
mov
jno
inc
dec
mov
sbb
scas
mov
fidivrs
and
adc
cmp
xchg
push
aas
adcl
sbb
sub
mov
mov
pop
or
xor
fsubrp
and
pop
shl
xor
adc
stos
adc
das
xchg
orl
push
test
arpl
out
jbe
dec
cmp
stos
loopne
jl
js
ja
rcrl
xchg
mov
add
aad
or
adc
or
mov
es
paddq
sahf
dec
addr16
aas
cmp
mov
xor
jbe
test
add
sbb
cmp
lret
dec
cs
and
ss
mov
add
jb,pn
pop
repz
mov
push
movsl
dec
leave
js
fidivs
js
subl
jbe
xchg
and
xchg
mov
mov
ss
fiadds
dec
jle
jle
ret
xor
out
xchg
pop
or
jmp
inc
dec
addr16
bound
jp
sub
push
xor
dec
mov
hlt
adc
mov
jb
loop
adc
push
add
xor
ljmp
cli
push
mov
dec
jecxz
mov
mov
rol
je
inc
cwtl
pop
loopne
or
scas
cli
movsb
or
dec
cmp
in
test
adc
cld
ds
pop
pop
clc
and
stc
xor
jnp
lock
testb
jae
mov
push
jno
das
movsl
pushf
xor
stos
in
lods
out
jno
jns
int3
mov
mov
or
push
loope
pop
jp
dec
jmp
cmpsb
inc
movsl
sub
push
aaa
cmp
iret
cld
outsb
push
xor
sarl
addl
clc
lods
ss
insb
pop
jecxz
cs
xchg
out
jae
lret
jno
dec
ja
mov
loope
inc
aad
pop
pop
decl
xor
hlt
aaa
push
add
push
and
in
push
sub
out
call
add
mov
xchg
cmovo
mov
inc
jae
xchg
xchg
rcpps
stc
jne
push
nop
lahf
test
ret
push
test
shlb
aaa
das
jne
int
xchg
pop
ror
ret
xchg
adc
push
aam
xchg
in
rcll
sub
pop
dec
out
add
rcrb
imul
mov
xor
jb
popa
cmp
sbb
bound
xchg
push
inc
out
rclb
or
daa
adc
push
aad
nop
clc
jge
pop
fcmovb
xor
jmp
std
push
loope
push
jge
xor
sbb
lods
hlt
mov
sbb
rorl
and
jno
or
cmp
in
xor
jp
aaa
jns
pop
popa
push
repnz
add
clc
stc
pop
push
sbb
inc
andl
sbb
shrl
cmp
xchg
daa
add
lret
and
adc
or
push
xor
insb
int
jbe
pop
push
inc
xlat
pushf
inc
pop
cmp
pop
jmp
mov
inc
aas
push
pusha
addr16
test
push
inc
bound
and
cmp
xlat
pop
sub
add
lahf
dec
xchg
cmpsl
or
cmp
and
movsl
dec
cltd
adc
fsubl
or
bswap
bound
jb
aad
pop
inc
subl
sbb
mov
int
ds
in
sub
dec
xchg
nop
mov
mov
jbe
push
or
pop
lret
aam
jle
dec
ljmp
jnp
xchg
lods
mov
sbb
cs
cmc
xor
jl,pn
outsb
mov
pop
jmp
test
mov
mov
push
jle
popf
out
dec
lds
je
pushf
loop
cmpsl
cli
cmp
cltd
sub
and
lods
pop
dec
incl
out
xor
mov
or
ret
insl
sub
rorl
inc
jl
js
imul
loope
push
ss
fmuls
test
add
mov
incb
pop
lods
mov
dec
push
cltd
inc
add
ret
add
or
jmp
push
push
outsl
xchg
ret
mov
pop
aaa
push
mov
cmp
sub
js
pushf
sub
js
push
mov
mov
andb
int
mov
andl
dec
sbb
pop
or
lret
mov
andb
hlt
loop
inc
pushf
das
cmc
add
nop
lcall
and
xchg
xor
add
std
or
jns
andl
dec
out
enter
fs
jo
or
jl
lea
loope
pshufw
pop
inc
ret
adc
cmpsl
fwait
outsl
jge
or
ret
pop
dec
inc
mov
call
fldcw
jns
pop
movsl
cltd
xchg
incl
fs
xchg
rep
xorl
adc
test
cwtl
lret
inc
pop
cmp
inc
out
lcall
out
jns
es
lods
out
pop
fstpl
adcb
fcmovu
int
insl
popl
stos
pop
or
mov
mov
js
xor
pusha
cmpsb
inc
hlt
aas
clc
inc
imull
xlat
out
pop
mov
fnstsw
out
mov
push
push
xchg
jb
hlt
clc
inc
negl
or
or
dec
adc
lea
jbe
adc
xchg
inc
aaa
mov
xor
stc
inc
xchg
mov
test
add
addb
mov
test
push
insb
stos
or
mov
scas
inc
in
push
arpl
adc
xchg
inc
std
adc
adc
outsl
jne
xchg
inc
iret
les
sar
inc
push
xchg
inc
adc
or
jno
xchg
das
ja
mov
mov
mov
adc
adc
jo
negb
inc
test
ss
xchg
mov
inc
add
cld
jae
jl
js
xor
idivb
mov
jmp
sbb
cmpl
sbb
es
jle
xchg
push
aam
sub
mov
inc
push
jl
mov
sub
sahf
sbb
scas
call
sbb
inc
in
lcall
jecxz
out
aas
pop
mov
mov
xlat
add
and
xor
mov
call
cltd
sub
movsl
fisubrs
cmpl
pop
repz
dec
adcb
dec
mov
arpl
cmpsl
adcb
scas
sbb
lods
xchg
and
push
enter
test
sbb
popf
add
push
mov
pmaxsw
das
mov
pop
ds
cmpb
pop
insl
add
jbe
mov
aam
ja
stc
sbb
repnz
pop
out
mov
xlat
jb
jmp
popa
sub
mov
ja
adc
repnz
orl
std
outsl
jge
or
sub
movl
push
and
adc
adc
adc
int
cmpsl
cwtl
push
call
das
cmp
fdivrs
or
iret
jg
push
call
inc
and
mov
in
xor
mov
adc
rolb
fisttps
adcb
fwait
ljmp
je
mov
dec
movl
scas
sub
mov
scas
int
pop
mov
ror
lcall
push
cmpsl
addr16
nop
iret
sahf
jl
push
and
mov
clc
pop
mov
inc
xchg
cmp
adcl
add
or
cmp
jecxz
mov
mov
xor
jae
imull
popa
je
lret
adc
sti
inc
push
lods
mov
out
ss
mov
xor
mov
mov
adc
pop
mov
inc
mov
inc
xor
fs
xchg
pop
push
mov
cmpsb
dec
mov
lods
add
xor
jno
cmpsl
mov
push
lret
frstor
mov
int3
inc
ret
push
jge
push
xor
adc
xchg
or
outsb
lret
add
inc
ret
fwait
add
jo
sbb
and
mov
or
push
xchg
pop
jns
jbe
cmp
push
adc
divb
fsubrs
push
cmpsl
cmp
push
mov
pop
outsb
sbb
cmp
gs
and
push
test
mov
xchg
stos
int3
popf
jecxz
xchg
leave
xchg
call
popa
dec
xor
into
dec
cmpsl
jle
xchg
movsl
xor
or
cmp
inc
out
mov
jmp
into
inc
dec
xor
imul
das
xor
mov
mov
jno
nop
out
aad
fisubrs
in
sbb
xchg
into
outsl
lods
fsubrs
sbb
lcall
xchg
pusha
pop
and
loopne
jl
iret
cmp
adc
fcoml
outsb
xchg
xor
jecxz
and
test
call
dec
addr16
insb
mov
cs
ret
mov
pop
jne
jg
dec
adcl
xor
ja
adc
repnz
shrb
enter
lret
ja
outsl
pop
sbb
cltd
mov
mov
adc
das
adc
mov
cld
or
aaa
scas
or
xchg
pop
test
inc
ds
pop
xor
cmp
and
push
add
xor
stos
sub
fnstcw
dec
mov
icebp
fyl2xp1
cld
or
loopne
movsl
mov
fcompl
daa
ret
cmp
cmp
sub
loope
dec
add
ja
shlb
test
mov
std
ret
loop
js
fildl
pop
sub
jle
cmp
xlat
mov
notb
aam
ja
testl
add
and
mov
xor
mov
in
es
inc
push
add
je
daa
dec
aaa
stc
clc
pop
jmp
fcoms
outsb
pop
xchg
push
xchg
std
push
or
sbb
jns
adc
les
and
pop
xlat
cmpsl
cli
xchg
stos
stc
sbb
test
sbb
jae
add
icebp
adc
shlb
jmp
push
inc
std
test
mov
repz
hlt
leave
add
cmp
loop
pop
ss
scas
out
push
push
jns
lahf
xchg
js
jae
mov
mov
pop
inc
sbb
sbb
or
adc
jns
test
lcall
cmpsl
add
mov
mov
sahf
cmpsl
mov
popf
push
pop
addr16
fwait
xchg
scas
sub
pop
fs
sub
outsb
add
inc
push
jl
aad
nop
adc
pop
popf
sbb
je
aam
lret
arpl
aam
cltd
pop
xchg
enter
and
out
pop
inc
lods
lcall
scas
pop
inc
cmc
lcall
loope
inc
in
and
movsl
stos
inc
fwait
mov
dec
jo
les
imul
xchg
addr16
es
jo
std
push
and
push
rcrb
in
push
jns
inc
jb
aas
sub
and
ret
fldcw
lds
js
inc
mov
xchg
push
sbb
xchg
mov
sub
mov
mov
or
push
ja
dec
iret
xchg
pop
call
aaa
out
lret
add
cmp
in
ss
or
or
push
mov
or
int
fsubl
sbb
je
jo
xor
or
inc
mov
xor
mov
sbb
mov
jecxz
inc
in
mov
out
mov
outsb
push
dec
sbb
and
call
jmp
jb
push
cmp
sahf
cs
xchg
mov
push
mov
cmp
xor
int
aam
push
mov
dec
push
jecxz
mov
push
fwait
cmp
jmp
xor
cwtl
aas
jle
test
addb
aas
lods
mov
mov
shlb
iret
jo
jbe
daa
lahf
jbe
stos
sbb
sbb
mov
sub
push
mov
mov
dec
fdivr
test
cmc
out
push
pop
mov
sub
mov
loop
or
or
xor
sub
scas
fwait
pop
push
add
adc
gs
push
adc
dec
jp
inc
mov
sbbb
xchg
pushf
sbb
addr16
aad
mov
popf
inc
inc
ffree
jge
test
pop
subl
test
in
adc
add
xchg
test
dec
pop
xchg
cs
adcb
enter
xor
xchg
int
pop
arpl
jne
jns
scas
mov
mov
jno
rcrb
add
and
add
xchg
xchg
movb
imul
divb
repz
stos
xor
push
cmp
outsb
mov
push
push
xchg
sub
mov
mov
ret
jmp
das
aaa
ficompl
imul
xor
cld
in
sbb
adc
sbb
pop
cltd
dec
movl
lret
out
shrb
mov
sbb
or
mov
inc
popa
stos
push
int3
xchg
ljmp
dec
mov
push
shll
mov
ret
roll
xchg
lods
mov
ret
sbb
pop
mov
xchg
mov
cltd
addr16
jl
sbb
lret
mov
jns
mov
repnz
pop
pushf
jecxz
mov
and
imul
jmp
xchg
mov
jo
mov
sub
cmc
xchg
lret
mov
mov
jae
pop
pop
mov
adc
out
inc
cmp
int
and
and
mov
xor
mov
sbb
ret
xlat
arpl
imul
aaa
inc
ljmp
lods
add
les
repz
fsubrl
push
mov
mov
add
lea
nop
movsl
loopne
mov
into
or
popa
jb
and
hlt
insb
xchg
sub
sarl
add
imul
push
cmp
idiv
dec
dec
ja
and
xor
out
pop
push
xchg
dec
or
jbe
inc
lcall
pop
cli
fstp
outsl
xchg
pusha
dec
cmpsl
and
mov
sbb
push
pop
mov
fdivl
ret
in
test
xchg
and
test
or
in
out
sahf
pop
xchg
add
mov
dec
mov
pushf
jecxz
stos
das
push
inc
xchg
and
rclb
cmp
add
and
mov
fstpt
aad
jp
leave
sbb
dec
cmp
cmpsl
mov
push
fstps
push
sti
lret
mov
mov
or
mov
jns
pop
out
or
push
inc
mov
add
mov
mov
sbb
mov
in
dec
push
pop
loop
roll
ret
scas
xchg
or
mov
insb
xchg
ret
push
cmpl
adc
or
outsb
call
popa
and
pop
or
stc
repz
jecxz
rolb
into
scas
and
mov
xchg
leave
pop
into
cmp
add
mov
and
into
cltd
sub
in
push
xchg
mov
movsb
cwtl
jmp
mov
xchg
pop
pop
idivb
push
shr
mov
call
scas
inc
mov
imul
mov
adc
je
adc
cli
lock
jnp
pop
fisubrs
outsl
scas
pushf
repz
sbb
xor
jge
imul
sahf
rorl
test
pop
push
insl
aad
pusha
insb
push
dec
out
xor
mov
inc
mov
mov
daa
cld
gs
add
mov
mov
fldenv
push
mov
sub
outsl
fimuls
arpl
or
aas
or
lods
push
lea
repz
fisubrs
and
pop
push
xor
mov
outsl
jnp
mov
xchg
pusha
push
fistpl
xchg
fnstenv
dec
xor
adc
gs
xor
xor
mov
push
std
shlb
jg
jo
jge
test
and
rcrb
cmpb
adc
xchg
and
fxch
mov
ss
mov
and
push
insb
mov
adc
jae
les
push
lcall
sarb
ja
jecxz
jne
testb
xchg
mov
mov
pushf
push
cmp
mov
jae
cli
mov
sub
xor
inc
jmp
mov
jnp
in
into
pushf
jb
out
jb
mov
push
push
sbb
sub
dec
leave
add
sarb
and
xchg
fnstenv
scas
clc
ret
lcall
mov
rcrl
inc
int
std
jmp
pop
aad
in
push
cmp
movsl
xchg
ds
test
or
xchg
sub
pop
pop
hlt
aad
and
inc
xchg
mov
mov
je
xor
fidivs
mov
cmp
xchg
cld
inc
and
repz
ficoml
xor
rolb
jl
pop
inc
lahf
push
cmpsl
pop
test
pop
shl
cld
mov
imul
cmp
push
test
into
cmp
push
mov
and
adc
add
std
cmp
cmp
mov
jb
daa
xchg
push
or
xor
testl
inc
mulb
ror
sbb
outsl
xor
jbe
rorb
test
adc
sbb
push
cltd
cmp
shll
pop
lods
ret
cmc
mov
dec
or
jp
mov
out
jb
daa
aam
dec
pop
imul
lret
xchg
mov
jmp
inc
mov
sub
jmp
lahf
xor
movsb
lret
xchg
adc
cwtl
pop
test
bound
and
jmp
sub
push
test
lock
add
mov
lret
mov
xchg
imul
push
or
mov
or
dec
or
pop
pop
xchg
fadd
xlat
cli
add
sbb
sub
dec
jns
testb
xor
mov
mov
sbb
xchg
adc
push
lds
jno
inc
lcall
xor
xchg
sub
push
hlt
test
or
pop
fmull
std
mov
orl
push
imul
dec
das
movb
mov
call
das
stc
sbb
lock
push
fldl
sarb
movsl
dec
and
scas
jmp
jl
dec
jae
lret
sti
aas
and
sub
mov
mov
pop
movsb
cmc
xchg
sub
pusha
stos
jae
sub
test
cmp
fsubs
rorb
sub
lock
push
mov
lret
arpl
mov
dec
icebp
ss
push
push
adc
popa
sbb
lret
and
daa
enter
jle
add
jbe
xchg
movsb
inc
or
outsl
lahf
jg
out
mov
stc
lret
outsl
sahf
jl
sub
sbb
mov
pop
cld
push
in
shl
mov
or
fcoms
push
add
movsb
arpl
call
enter
xchg
push
fcmovne
jl
ss
popa
add
xor
cmp
std
fsubs
jae
mov
les
daa
iret
mov
data16
stos
imull
jbe
lock
dec
negb
pop
clc
sbb
sub
adc
add
xchg
scas
mov
jb
lcall
sarb
jmp
push
xor
fs
mov
and
dec
adc
or
xor
stc
arpl
mov
sub
mov
cli
sbb
lret
jmp
ja
add
test
in
in
mov
add
sarl
shrb
mov
dec
jg
mov
or
inc
mov
sub
dec
gs
aas
push
loope
sbb
addr16
adc
mov
dec
push
arpl
negb
fnstsw
icebp
fcmovb
mov
iret
and
je
roll
mov
xchg
lcall
stc
jnp
jp
das
fdivr
push
and
jno
xor
icebp
push
out
mov
shlb
cli
neg
jbe
jecxz
jbe
cmp
pusha
mov
sub
cltd
pop
xor
stc
and
add
pop
iret
stc
dec
js
out
loopne
mov
and
jl
int
filds
mov
push
dec
scas
leave
dec
inc
icebp
dec
mov
insb
inc
mov
das
or
pop
mov
xchg
cmp
adc
enter
pop
cltd
mov
lea
xor
lods
mov
xor
jae
aas
stos
int
testl
or
or
and
sbb
push
push
jmp
and
xor
pop
or
cld
scas
rcrb
lahf
ffree
sub
xchg
roll
push
dec
test
adc
addr16
and
inc
jp
xchg
add
dec
jnp
push
dec
ljmp
sub
test
lret
mov
test
test
cmp
je
xchg
add
sub
cmp
shl
mov
andb
imulb
loope
xchg
push
inc
cmpsb
dec
loop
rep
and
or
sbb
xor
test
out
xor
sbb
and
ljmp
cmpsb
or
push
leave
sbb
insl
mov
push
xor
and
mov
pushf
xor
repnz
cmp
std
ljmp
dec
je
sbb
dec
fdivs
pop
stos
adc
repz
mov
outsb
xchg
loop
stos
xchg
and
lcall
mov
xchg
adc
js
dec
loopne
xchg
stc
popa
sbb
popf
lahf
cmp
inc
sbb
pop
shrl
inc
add
repnz
cmp
lods
xchg
adc
adc
arpl
stc
fldcw
xlat
pop
popf
mov
rcrl
icebp
push
fisubs
or
jns
int
fnstcw
test
scas
aaa
lcall
in
lock
fistpll
pop
sbb
xorl
cmpsl
sub
mov
daa
cmp
push
mov
mov
sti
pushl
lock
push
pop
inc
push
jae
sub
ljmp
xor
dec
leave
aaa
or
mov
movl
repz
jp
adc
aas
add
sub
dec
xor
add
sub
and
fmuls
jo
sbb
push
mov
outsb
loop
lods
ret
sbb
repnz
pop
arpl
xor
fs
jns
push
add
lahf
int
mov
xor
repz
in
xor
mov
sbb
add
frstor
les
cs
sbb
outsl
in
adcb
mov
leave
out
xor
xor
jle
cltd
fwait
sahf
push
cmp
scas
sub
div
pop
push
movsb
pop
loopne
lea
xchg
xor
dec
in
pop
xchg
adc
lods
enter
inc
ja
stc
adc
insl
fmuls
mov
ds
sub
icebp
cltd
les
sbb
xchg
inc
sar
xor
lahf
repnz
jl
js
dec
inc
or
jge
nop
inc
cwtl
scas
jne
sahf
data16
cmp
or
pop
cmp
sub
jo
scas
pop
add
leave
aaa
popa
add
aaa
pop
push
push
sbb
and
cmp
inc
clc
ds
icebp
sbbl
bound
insl
adc
ljmp
sub
cmp
adc
imul
and
add
push
cwtl
jnp
lcall
repz
outsb
sub
jae
gs
jle
leave
in
rcl
mov
outsb
push
rclb
inc
jg
clc
lods
loope
test
xchg
or
popa
fldz
push
inc
jp
call
jno
or
ss
push
jbe
pop
pop
and
out
stc
cmp
push
adc
jge
dec
enter
mov
in
repz
jl
xor
push
clc
or
int
in
mov
add
add
ret
jae
cmc
test
add
cli
cwtl
insb
in
or
js
pop
cwtl
jo
rcrl
push
adc
outsb
lret
push
into
cmp
shl
enter
sbb
add
out
inc
mov
xor
lcall
int3
jae
sbbl
mov
faddp
dec
jecxz
dec
inc
sub
dec
push
mov
push
stc
or
sub
cmpsb
pop
jnp
addr16
jle
xchg
fildl
mov
dec
push
mov
or
nop
and
shr
mov
dec
fdivrs
sbb
clc
xor
lock
ss
insb
cmp
enter
xor
dec
cmp
icebp
or
sbb
hlt
lock
in
push
cmpsb
fimuls
mov
in
ljmp
arpl
out
add
dec
rolb
and
cli
jmp
jbe
daa
jnp
cmpsb
fcmovne
add
jle
mov
pop
jno
je
fidivrs
xlat
lret
imul
xor
stos
add
ja
sub
adc
mov
mov
xchg
aaa
jmp
cmp
aaa
icebp
xor
js
jl
sub
or
inc
lea
mov
bound
mov
mov
inc
sub
add
xchg
repz
std
jno
outsb
subb
sub
lea
in
mov
mov
push
xor
test
pop
inc
imul
bound
xchg
add
xorb
push
aam
xor
lret
xchg
jp
les
adc
pop
push
mov
fldt
mov
dec
ret
dec
adc
aad
push
mov
bound
jae
adc
test
bound
rorb
lahf
jge
jmp
arpl
add
inc
xorb
jmp
add
insl
ret
nop
pop
jae
testb
sub
sbb
push
jle
add
sbb
push
cltd
mov
sub
in
int3
jge
push
fldl
rclb
mov
js
popa
push
mov
lods
jg
xchg
imul
sbb
inc
pop
js
pop
mov
adc
pop
aas
jle
adc
fsubl
mov
and
mov
subb
pop
mov
fadds
adc
xchg
xchg
sbb
lods
mov
data16
out
sub
into
dec
mov
xchg
in
jns
mov
sbb
lret
rorl
or
push
in
dec
and
pop
inc
xchg
mov
push
scas
or
mov
xor
mov
add
adc
lds
xchg
pop
mull
xchg
xor
test
ja
push
mov
outsb
ja
out
ja
clc
shlb
out
mov
ljmp
stos
mov
icebp
outsb
mov
jge
out
add
sub
rcrl
jp
add
in
idivl
into
xchg
sbb
in
popa
jg
inc
inc
fmuls
xchg
push
jne
xchg
dec
int
mov
jp
jo
sbb
popa
lret
push
in
adc
cmpsb
pushw
pop
jo
mov
ljmp
shrl
adc
inc
pop
mov
xchg
mov
addr16
sarb
mov
sub
popa
roll
cmp
or
in
cli
push
push
shrl
cmp
movsb
stc
adc
cwtl
lods
mov
iret
fnstsw
std
mov
lods
test
mov
dec
test
pusha
in
and
dec
sbb
out
add
iret
pop
lock
inc
shlb
adc
xor
iret
xchg
push
mov
repnz
lret
into
and
cmpsb
imul
or
mov
mov
mov
mov
add
out
jb
lahf
mov
jno
out
pushf
push
ret
mov
cltd
jne
mov
xor
std
in
mov
jl
push
lret
dec
pop
andl
aaa
and
xchg
jge
lods
das
mov
adc
test
jnp
jmp
or
push
aad
mov
rcrb
subb
decl
jmp
pop
call
xchg
ffree
mov
lds
and
enter
pop
out
sarb
aam
xchg
pop
xorl
call
ret
push
movsb
pop
ja
xchg
mov
shll
cld
shl
push
xchg
and
in
lods
cmp
pop
add
leave
mov
rclb
flds
sub
clc
repz
mov
sti
sub
push
jne
mov
popa
fnstsw
jns
dec
pop
push
imul
pop
or
xor
aas
je
xor
xchg
mov
pop
dec
in
test
arpl
mov
dec
addr16
push
jb
xor
fsub
call
imul
jp
int3
shrd
cmpsb
sbb
hlt
cmp
test
jbe
jns
inc
cvttps2pi
ret
sub
mov
stc
or
xchg
adc
xlat
mov
push
sti
enter
lcall
add
lea
mov
mov
mov
push
lret
xor
or
inc
xor
add
iret
in
sbb
test
hlt
inc
icebp
jnp
je
xchg
test
adc
mov
and
rolb
test
test
adc
lahf
es
int3
push
pop
jle
inc
mov
sbb
imul
inc
sti
mov
xchg
xchg
enter
fstpl
iret
pop
mov
test
or
outsb
data16
call
mov
sbb
xchg
and
jb
ja
sbb
push
xor
inc
and
mov
es
sbb
ret
scas
enter
bound
adc
xor
jns
pop
add
jg
test
or
lea
rol
xor
cltd
dec
subb
dec
dec
xor
ss
jae
enter
js
clc
push
fimuls
rcrb
arpl
inc
jle
stos
push
xor
lret
sbb
pop
mov
icebp
lock
jp
pushf
iret
push
xor
add
and
dec
mov
dec
jb
out
and
adc
ja
jno
pop
fwait
push
mulb
pop
out
inc
pop
into
cmp
push
sub
jns
or
test
cmp
sub
add
xchg
sbb
cld
jbe
mov
cltd
bound
movsl
xchg
fmul
inc
inc
cs
fdivr
sbb
sbb
mov
and
cld
inc
inc
fwait
imul
loope
loope
cmp
imul
sbb
jmp
inc
inc
into
mov
out
push
idiv
aam
out
test
xor
pop
inc
out
and
inc
mov
xor
xor
imul
dec
mov
mov
mov
out
aas
mov
xchg
ljmp
ss
repz
repnz
mov
sbb
push
into
push
fcomps
add
aam
adc
popf
jo
repnz
aaa
jge
mov
mov
lret
int
lret
push
push
stc
pop
loop
stos
pop
gs
iret
arpl
sub
js
push
and
cmpsl
push
dec
in
push
or
sahf
loop
clc
dec
sbb
fimull
aam
cmp
xor
sbb
stos
gs
in
sub
mov
testl
out
fcomi
int3
sub
xchg
xor
fwait
jmp
pop
add
dec
repnz
cli
and
jnp
fwait
sbb
fldt
rol
aas
sbb
inc
ss
pop
mov
fbld
mov
sbb
loope
jbe
mov
jb
xchg
add
lea
jo
clc
push
inc
mov
xchg
cli
out
dec
inc
es
cltd
int
test
aad
imul
cmpsl
lods
rorl
clc
push
orb
fldt
and
push
jbe
mov
pop
daa
or
sbb
pop
into
insb
out
addr16
mov
cmp
and
pop
mov
imul
out
pop
xor
cmp
pop
outsb
arpl
repnz
jo
idivl
pushf
push
outsl
fistl
popf
cmp
or
jo
lea
fistl
rcll
or
jne
rorl
jecxz
cld
pop
cmp
jnp
aam
mov
rcl
dec
push
adc
jns
into
icebp
cmp
fs
popf
adc
fistps
dec
pop
outsb
ret
pop
mov
or
jo
pushf
imul
clc
loope
ljmp
into
pusha
lea
fdivs
lcall
adc
and
std
sbb
loop
aad
fucomip
imul
cmp
mov
mov
call
xchg
cmpsl
add
test
fmuls
sar
shrl
or
adc
roll
loope
pop
add
push
mov
jbe
cmp
sbb
repz
pop
lods
cmp
lods
push
mov
fidivl
jno
fistps
jl
fstpt
push
jp
data16
pop
lea
push
out
cs
push
dec
pop
mov
cld
aaa
mov
push
mull
pop
adc
imul
shlb
inc
or
adc
lds
test
adc
adc
leave
jmp
test
cltd
push
mov
push
cld
fwait
mov
mov
cmp
lods
jmp
test
add
sub
stos
out
daa
mov
push
pop
icebp
into
xor
mov
adc
and
cmpsl
xor
cmp
inc
sub
pop
enter
add
cltd
jne
stc
dec
aas
and
jo,pn
sbb
jl
lock
or
fsubrp
and
dec
sbb
cs
mov
jo
sub
lock
pop
je
mov
push
lods
int
lret
fstl
daa
fwait
push
outsl
and
push
ret
out
sahf
pop
add
push
clc
stos
sbbl
inc
jns
les
sub
fdivr
mov
test
cmp
push
out
cwtl
shlb
dec
stc
imul
fsubl
inc
dec
popa
subb
fwait
ja
lret
cwtl
scas
jge
jb
push
enter
adc
add
sbb
sbb
mov
push
test
sarb
push
stc
test
inc
jbe
add
xchg
inc
imul
loop
push
pop
jo
mov
and
mov
or
pushf
jbe
mov
pxor
mov
les
stc
jb
jne
mov
inc
pop
jne
or
loop
cs
test
fwait
inc
mov
pop
add
adc
pop
test
lret
out
mov
jecxz
dec
xchg
mov
clc
push
sarl
mov
lret
leave
dec
or
out
pushf
test
jge
das
das
xor
mov
in
pop
xor
jb
bound
mov
mov
pushf
insl
xchg
jle
jno
ds
aam
in
fwait
pop
xchg
ljmp
lock
pop
out
nop
and
dec
push
lahf
test
imul
jne
iret
stos
push
movb
mov
outsl
fwait
cmpsl
stc
enter
divb
push
sahf
movsb
cwtl
jb
xor
movsb
sbb
cmp
jg
mov
idiv
outsb
mov
jmp
mov
iret
shlb
add
sbb
and
outsb
in
addr16
out
push
jle
inc
mov
mov
xor
sahf
and
and
push
loope
in
xchg
adc
out
adc
sub
sub
stc
clc
push
sbb
ret
push
aam
data16
lea
mov
fwait
xchg
ljmp
xor
int
add
dec
fisubs
js
push
loop
imul
aas
sti
sbb
shrb
xchg
pushf
cmp
push
xchg
inc
dec
sub
mov
push
inc
rcrl
mov
mov
movsl
fimuls
pop
lods
xchg
arpl
sbb
lahf
xchg
sti
jmp
in
push
add
or
jae
adc
imul
mov
je
mov
cmpl
adc
adc
shlb
iret
and
loope
push
int3
push
pop
mov
push
mov
aad
xor
mov
xor
clc
stc
popf
sbb
sub
cmpb
and
xchg
mov
out
sub
pop
ret
stc
mov
popf
pop
sub
xor
fwait
jg
shll
and
pusha
xor
push
insb
xchg
sahf
clc
sti
data16
cltd
and
into
dec
rcll
dec
imul
lea
js
pop
jle
lock
xor
mov
pop
and
sub
add
ret
xchg
sbb
cmpsb
and
pop
popa
icebp
and
pop
es
xchg
hlt
sbb
in
loope
mov
cmpsb
fs
jl
fstpt
lahf
ret
loopne
ffree
dec
ss
inc
cmpsl
mov
lcall
dec
in
fucomp
adc
xor
clc
enter
sub
push
dec
movsb
mov
jp
mov
push
and
test
or
test
push
hlt
ret
pop
sbb
rolb
mov
stos
dec
push
dec
mov
rorb
mov
adc
js
push
mov
dec
jnp
mov
fxch
ja
xor
mov
test
jae
and
mov
push
std
adc
mov
pop
cmp
adc
roll
and
mov
mov
movsl
jns
test
dec
loopne
test
aaa
loope
jb
jno
push
out
repnz
push
and
pop
mov
mov
popf
adc
lea
or
pop
cmp
dec
lea
das
xlat
and
popa
mov
push
jl
sbb
lds
mov
out
lcall
push
pop
in
lods
lahf
jns
push
mov
cmp
insl
loopne
xor
sti
mov
pusha
pushf
dec
push
sbb
rol
sti
out
mov
mov
sti
inc
cmp
mov
je
sbb
test
adc
jne
ud2
dec
add
jnp
lods
fisttpl
iret
mov
xor
sub
or
subl
sub
sarb
mov
imul
jne
xor
jp
call
inc
push
rol
dec
and
sbb
xchg
push
ficoms
or
and
adc
les
mov
mov
xor
sub
fcmovb
fcomps
xlat
adc
inc
leave
mov
faddl
sbb
es
imul
mov
adc
adc
jbe
mov
add
mov
clc
mov
pushf
cld
rorl
add
arpl
pop
or
xor
xor
xchg
addr16
daa
pop
push
sbb
daa
push
lret
out
pop
cmpsb
aad
mov
cmovp
fsubrs
dec
repnz
das
mov
das
je
lea
mov
jo
mov
pop
enter
pop
pop
jmp
push
int3
sti
jne
push
into
mov
and
sbb
mov
add
and
mov
scas
lahf
daa
mov
mov
pop
hlt
and
inc
ja
fsub
push
cmp
cmp
into
cli
movsl
adc
negl
push
and
imul
pop
loopne
loope
inc
imul
rep
mov
or
ds
imulb
es
leave
xchg
mov
jg
test
pop
arpl
fildll
mov
adc
scas
cmp
push
out
inc
bound
pusha
jge
mov
data16
jbe
fcomps
push
dec
outsb
test
add
and
pop
sbb
mov
and
cmp
cs
xchg
mov
xchg
jno
mov
ja
iret
xchg
push
mov
gs
sub
insb
daa
cli
rclb
subl
jecxz
clc
mov
cmp
and
mov
cmpsb
loopne
popa
xchg
lock
outsl
sub
out
es
arpl
push
ljmp
shll
and
aad
lds
loope
inc
push
jl
adc
sub
inc
lods
ja
xor
or
es
push
dec
popa
lods
mov
push
mov
call
mov
jbe
lock
xor
data16
fstps
loopne
sub
mov
xchg
aam
js
popf
mov
sbbl
shl
in
xchg
lcall
fcmovne
lret
xchg
repnz
mov
sbb
dec
int3
aam
mov
push
adc
cmp
inc
and
add
test
adcl
inc
or
mov
sbbb
inc
xor
inc
cli
es
pop
lret
inc
clc
sbb
psubq
xchg
xchg
dec
insb
sbb
xchg
push
shll
int3
or
bsr
fwait
dec
mov
ret
mov
sub
adc
pushf
or
lahf
jge
or
cmc
es
or
pop
out
lret
test
int
pushf
faddl
add
cmpsl
fcomip
xor
cmp
xor
pop
out
mov
leave
jecxz
jecxz
and
xchg
in
or
arpl
sahf
mov
insl
jge
add
push
push
int3
ja
rdpmc
mov
rorl
cmp
push
stc
ljmp
add
mov
idivb
scas
mov
out
jb
adc
mov
jo
test
or
inc
insl
pusha
stc
sbb
outsb
incb
xlat
lahf
adc
xor
mov
jg
xchg
stos
pop
sbb
inc
pop
enter
sub
js
out
sarl
icebp
mov
xchg
or
mov
fsubrl
fs
add
movsl
out
or
dec
jae
popa
push
xchg
aaa
repnz
test
aas
nop
pop
shll
pop
xlat
pop
js
iret
daa
inc
adc
jg
ret
stc
lock
fists
inc
and
and
pop
inc
ret
les
push
fists
xor
into
adc
xchg
js
sbb
outsb
mov
push
and
out
xchg
mov
imul
and
jbe
popf
pop
test
jecxz
inc
dec
jbe
hlt
mov
pop
int3
xchg
xor
lcall
mov
cmp
jp
into
fs
das
loop
lods
shl
leave
loope
fidivrs
cmp
or
xchg
movsb
xchg
push
pop
jp
mov
add
je
inc
sbb
stos
mov
cmc
mov
and
mov
cmc
das
ret
mov
push
or
or
movsl
lds
mov
push
sbb
dec
aas
and
mov
sub
aam
int
popf
and
dec
add
push
pop
mov
lea
mov
ja
lret
cmp
jp
sbb
ds
or
lcall
xor
mov
dec
xchg
xchg
fildll
inc
push
sbb
xor
test
cmpsl
test
mov
movsl
or
fsubrl
dec
test
mov
icebp
stos
sub
in
dec
push
loopne
div
mov
scas
mov
lcall
and
add
or
xchg
fisubl
sbb
stos
inc
loop
adc
das
stos
or
jbe
sbb
popf
rcl
dec
and
arpl
int3
sbb
dec
xor
es
add
and
cmc
imul
sbb
mov
mov
add
mov
inc
fdivs
push
leave
insl
mov
xlat
push
iret
sbb
pop
xor
cli
xchg
ret
mov
jmp
lods
push
sarb
test
mov
imul
cmpsb
lcall
push
das
jmp
divb
xor
bound
jno
sbb
add
aam
out
xchg
pop
sarl
adc
dec
sbb
jno
fnstsw
pop
stos
dec
xchg
addr16
add
test
ret
jbe
sbb
dec
stos
mov
sti
outsb
in
jmp
data16
out
xlat
sub
roll
ds
cmp
push
push
inc
pushf
cmpsb
pop
add
cmp
xchg
xor
ss
movb
pop
cmp
iret
jg
hlt
push
fdivp
adc
mov
pop
dec
jmp
test
les
lahf
push
dec
fs
mov
push
stc
push
sbb
pushl
xor
push
jae
mov
jb
shll
cmpl
mov
xchg
or
push
sbb
jl
pop
cwtl
bound
jnp
xchg
jb
sar
dec
push
inc
lock
out
add
sti
loope
insb
stos
fld
decl
loop
xor
fbstp
repz
inc
hlt
sbb
jge
cmpsl
out
push
addr16
js
sub
sub
loope
adc
test
xchg
xchg
inc
dec
ss
out
mov
push
push
push
xchg
cmp
das
outsl
xor
lock
test
mov
xlat
arpl
jge
insb
scas
cs
lods
pop
pop
xor
jo
jbe
sbb
jge
xlat
jnp
cmp
insl
mov
popf
sub
add
push
xor
out
das
mov
pop
and
pop
inc
adc
xor
out
inc
test
pop
xchg
mov
and
sub
add
popa
and
in
sarb
jmp
nop
out
mov
daa
push
scas
add
cs
lds
aam
mov
mov
and
push
fisubl
jns
cmpsb
mov
jmp
add
cmp
xchg
das
xor
ljmp
lret
push
stc
mov
sahf
in
repnz
mov
fmull
add
or
xor
pop
dec
outsb
cmp
out
test
push
int
push
fldcw
lods
dec
pusha
pop
fst
sbbl
push
sub
daa
mov
add
mov
in
or
jne
dec
add
inc
js
sub
out
or
sbb
or
out
xchg
scas
xchg
pop
out
sbb
dec
pop
mov
mov
jnp
cmp
in
popf
fs
loop
xor
sbb
pop
mov
cmp
sub
and
pop
in
lret
bound
fs
movsl
xor
aaa
fidivrs
dec
in
sbb
outsb
dec
adc
std
nop
pop
jge
iret
cld
sbb
fdivl
dec
mov
xor
jmp
jbe
adc
movsb
out
test
dec
or
sub
xchg
lret
sbb
mov
leave
sbb
or
mov
or
aas
cli
mov
cs
mov
in
stc
ficomps
mov
lret
add
mov
xchg
sub
cwtl
outsb
ljmp
adc
std
xchg
jecxz
sub
nop
jb
jns
mov
iret
cs
outsl
outsb
faddl
mov
clc
xor
ljmp
shl
in
sarl
cmpsl
pop
xchg
repnz
dec
imul
pusha
and
add
idivb
mov
je
and
jmp
cltd
xor
jl
xor
movb
sbb
dec
cmp
rcl
rolb
xlat
and
xor
sbbb
insl
mov
sahf
mov
nop
sbb
inc
in
in
or
jbe
sub
jns
fsts
push
fucomi
fwait
aam
or
test
scas
addr16
popf
call
xchg
es
or
aad
jno
lods
or
sbb
insb
shrb
outsl
dec
cmp
xor
arpl
leave
push
and
sub
pushf
into
mov
mov
xchg
push
lods
cmc
add
xorl
dec
and
fstpl
cltd
daa
movsl
in
or
in
dec
aad
sbb
push
syscall
xchg
add
push
add
insb
dec
mov
aaa
inc
idivl
inc
sub
xor
lret
pushf
lcall
inc
popf
dec
dec
dec
xor
jno
cmp
xor
scas
popa
pop
or
imulb
push
dec
sbb
sbb
jmp
mov
adc
stos
dec
fld
jne
or
mov
adc
jmp
pop
dec
adc
pop
out
jae
add
jl
sbb
in
jns
cmp
fnsave
testl
cmpsb
test
jecxz
movsb
aam
out
int3
pop
dec
popf
es
adc
pop
inc
nop
jbe
mov
int
xchg
xchg
push
sarb
lea
mov
adc
inc
sub
sub
loope
outsl
and
out
sbb
adc
or
sub
sub
xor
cmp
mov
bt
or
out
mov
push
jg
popa
dec
push
xchg
push
rcr
push
mov
mov
push
push
pop
cwtl
jg
push
in
jle
stc
sbb
jle
add
mov
jecxz
sub
mov
test
ss
xchg
add
into
sbb
lea
repnz
mov
mov
xor
ljmp
push
fsubrp
dec
inc
dec
cltd
jg
test
cltd
xor
cmp
inc
mov
jg
and
add
inc
lretw
enter
and
push
jg
sub
and
mov
mov
xchg
push
pop
or
mov
lcall
push
imul
dec
xchg
divl
popf
add
jae
aad
cmp
add
dec
data16
pop
push
popf
sbb
mov
jne
add
xchg
add
xlat
enter
ja
lds
jecxz
mov
cld
cmc
insl
rcr
mov
imul
ret
lods
outsl
test
adc
cmp
fdivrl
into
cmpsl
mov
sbb
adc
js
fdivr
loope
aas
aas
cmp
outsl
hlt
xor
ja
pop
data16
cmpsb
sahf
add
sahf
pop
push
xchg
daa
movsl
fbld
mov
fldenv
sub
add
repz
push
inc
lcall
xorl
cld
add
add
add
dec
add
cmc
pop
int
div
lret
and
in
inc
test
push
popf
add
cmpsl
dec
jne
fmul
ljmp
jp
pop
lock
cmp
push
add
cld
mov
inc
pop
add
outsb
femms
fsubrl
jo
sub
xchg
fimull
sub
cmpsb
popa
push
sub
jb
sbbl
mov
add
mov
mov
ja
and
cli
xchg
xchg
jle
jb
mov
into
push
jo
mov
js
andb
dec
jo
sbb
cmpsb
jge
sbb
jmp
iret
mov
lock
or
mov
dec
jmp
add
or
push
fxch
ret
fidivrs
mov
cmp
mov
fld1
mov
and
mov
das
stos
inc
push
mov
mov
xor
fisttpl
or
xchg
push
roll
mov
fisubrl
test
aad
das
jns
call
push
mov
inc
fisttpl
or
adc
mov
xlat
add
sbb
loopne
loope
orb
daa
push
cmpsb
into
add
mov
dec
call
add
push
lahf
lret
pop
jecxz
xor
les
pop
sub
adc
nop
cwtl
inc
and
repz
nop
adc
nop
push
push
sbb
lods
xor
cmp
lods
hlt
push
lds
mov
xchg
push
sbb
xchg
mov
lock
sbb
insl
adc
filds
mov
popa
imul
mov
aaa
push
adc
lds
sbb
movsb
push
adcb
outsb
xchg
leave
shl
loope
enter
sub
data16
mov
fistl
insl
sbb
sbb
cmp
xor
xor
mov
cmp
mov
dec
or
cs
add
pop
fs
movsl
push
imul
fisttps
hlt
dec
pop
mov
repz
push
pop
fdivl
inc
repnz
pop
les
cmc
outsl
xchg
fdivrl
xor
jo
push
fstps
inc
adc
add
inc
in
cli
inc
shrb
pop
into
add
add
jg
mov
pop
and
pop
adc
mov
xchg
dec
mov
and
imulb
repz
aaa
in
mov
pushl
xchg
jae
dec
xor
dec
sti
lods
mov
cmp
les
fsubrs
fisttps
xor
lret
rorb
mov
in
fs
sbb
add
sub
xor
ljmp
stc
bnd
dec
add
std
outsb
push
pop
sbb
rcll
mov
lret
or
test
lds
out
fdivs
jno
pop
xchg
mov
fucomp
addl
stc
shl
clc
add
and
sub
addr16
je
pusha
lret
or
inc
lea
push
push
push
ljmp
mov
rcl
mov
cld
mov
orl
ja
xor
lcall
or
pop
movsl
lods
adc
ret
sbb
scas
cs
or
or
in
or
test
push
test
frstor
mov
leave
inc
xor
xor
inc
notl
roll
push
inc
sbb
mov
out
inc
jecxz
sarl
xchg
mov
cmc
daa
adc
lods
push
add
sub
cld
ja
dec
pop
je
filds
or
jp
cmpsl
ds
push
mov
scas
shr
mov
stos
repnz
jbe
loopne
cltd
lcall
cmp
cmp
mov
jnp
rcrb
call
jno
mov
scas
xchg
inc
push
loop
imul
in
shr
outsb
mov
daa
testl
sbb
outsb
int
mov
jae
jg
adc
cmpsl
xchg
sarl
push
shrb
sbb
les
mov
mov
inc
inc
xor
fdivrs
pop
nop
and
mov
loop
leave
out
pop
jp
push
jnp
jne
push
cmp
push
outsb
mov
ss
or
mov
xchg
and
je
lea
outsb
addr16
ljmp
mov
dec
into
in
rorl
es
cmp
adc
lea
adc
inc
pop
fnsave
aas
leave
aas
test
es
mov
out
and
sub
xchg
xor
repz
pop
jbe
inc
jne
daa
xchg
test
mov
adc
xor
add
mov
mov
imul
sub
jecxz
adc
mov
xchg
ret
bnd
jbe
subl
adc
hlt
loop
sub
arpl
pop
dec
imul
cmp
test
xchg
lret
xchg
cld
insl
les
gs
mov
pusha
fistpll
popl
rcrb
lea
add
mov
mov
adc
lds
inc
dec
push
mov
dec
jge
test
lret
sub
aam
or
cmc
or
or
adc
jbe
lret
cmc
mov
into
xor
mov
mov
mov
or
dec
pop
push
push
xor
mov
rcrb
lods
push
pop
jle
pop
movsl
andb
sahf
shll
pop
mov
arpl
in
adc
dec
inc
pop
jnp
ds
fld1
in
adc
out
xorb
repnz
insl
rcrl
xor
cmpsl
mov
xchg
xor
mov
mov
cmpsb
shlb
stos
inc
popf
aas
dec
sbb
inc
mov
jl
shlb
dec
mov
sub
out
ret
test
xchg
imul
add
lods
push
aad
adc
call
or
cmp
sub
into
xchg
pop
and
cmc
mov
cmp
add
aas
mov
mov
push
outsb
out
dec
push
pop
sub
in
andb
loope
and
in
fs
aad
mov
hlt
mov
or
add
sbb
in
rcrb
add
ljmp
lcall
push
xchg
test
push
std
jae
jl
and
add
sahf
and
pop
out
mov
push
push
out
dec
int3
fs
sub
mov
or
xchg
cmovno
imul
ret
pop
xor
cmpsb
add
cvtdq2ps
sbb
push
shrl
stc
mov
dec
xchg
push
push
jbe
push
sbb
jbe
gs
and
pushf
push
push
mov
jno
or
cmp
mov
xor
jnp
in
hlt
aaa
cmc
jecxz
add
push
add
ret
pop
lcall
lods
movsb
sub
imul
pop
sbb
ja
mov
pop
mov
in
pushf
scas
push
in
lds
popf
mov
mov
mov
dec
ljmp
cwtl
bound
addb
mov
or
shrb
push
mov
lock
test
lret
gs
mov
into
ja
and
pop
movsb
pop
scas
insl
xor
push
or
push
out
mov
sub
scas
ljmp
clc
aaa
enter
sbb
int3
lahf
loopne
in
dec
aas
xor
and
sub
xchg
aaa
or
fistpll
call
jb
imul
ds
inc
rcrl
push
in
pop
cld
xlat
push
repnz
repz
sub
pop
mov
rolb
cmp
arpl
stos
pop
iret
gs
sub
neg
cmp
mov
mov
dec
xchg
enter
mov
pop
mov
decl
xor
or
sbb
test
pop
and
fwait
pop
mov
dec
movsl
sbb
dec
fisubl
cmpsl
jg
data16
mov
and
out
sbbl
ret
add
mov
out
cmp
or
pop
out
out
test
and
stos
xor
jae
in
xor
mov
orl
or
lea
jg
xor
add
mov
mov
dec
pop
mov
sti
in
iret
shll
mov
lret
arpl
in
movsb
jae
add
pop
push
je
repnz
adcl
inc
jl
jbe
std
push
push
jo
push
mov
push
jns
jmp
and
loopne
iret
loopne
out
push
arpl
dec
add
sub
xchg
clc
js
outsl
adc
and
and
mov
ds
pop
mov
push
and
push
push
cltd
insb
sub
xor
jnp
jbe
xor
lods
adc
outsb
push
aas
dec
out
call
push
fwait
or
sbb
pusha
ret
sarl
push
mov
xor
jae
sub
aad
mov
ror
xchg
push
or
mov
scas
mov
cmp
xor
lcall
ljmp
sub
cmpb
out
mov
xorb
ss
repz
sub
lahf
sbb
enter
mov
mov
movsl
pop
xor
sub
mov
icebp
bswap
or
ds
out
add
jb
and
mov
ja
or
dec
and
arpl
inc
xchg
lods
adc
mov
adc
mov
stos
aas
xor
std
sbb
fisttpl
adc
inc
jnp
aam
sub
mov
das
stc
pop
inc
cmp
or
mov
and
cmp
mov
ss
inc
shlb
scas
addb
test
and
fistl
into
sub
xchg
xor
jno
movsb
daa
jae
dec
cmp
int
cmp
pop
ret
or
xchg
mov
pop
scas
mov
cltd
pop
fsts
aam
sbb
insl
das
inc
push
cmpsb
mov
fdivs
push
in
fs
mov
out
cs
gs
jecxz
mov
mov
and
aad
mov
pop
mov
and
and
inc
shl
fcom
cld
mov
mov
add
xchg
pop
jae
pop
bound
inc
lock
xor
sub
xchg
mov
rcr
sbb
loopne
and
psrlw
cltd
ret
xor
je
sarl
into
call
jle
cld
pushf
adc
xor
sbb
xor
sbb
sub
dec
and
dec
shrl
inc
pop
xor
loope
push
and
push
jmp
ljmp
and
out
lret
leave
sahf
cmp
in
popa
dec
and
dec
shl
scas
shlb
ds
cmpsl
sub
divb
repnz
scas
insb
xchg
push
and
or
cmp
jp
test
pop
aam
fdivs
loop
imul
mov
in
stc
int
fdivr
inc
xchg
addr16
pushf
adc
inc
or
outsb
imul
add
in
pop
or
inc
ds
sbb
xchg
inc
sbb
fdiv
repz
adc
iret
mov
je
aas
xchg
mov
xor
inc
and
lods
and
sbb
xor
sbb
mov
pop
inc
das
mov
or
sbb
inc
fchs
repnz
sbb
ret
andb
sbb
ds
mov
add
mov
adc
mov
out
ret
jle
sbb
mov
pop
cwtl
pop
out
add
popa
sbb
cmp
sub
cmp
xlat
jp
je
cmp
out
push
sbb
ficoms
sbb
push
mov
inc
jge
test
push
push
repnz
popf
push
mov
cmp
pop
jnp
push
add
pop
add
sbb
sub
mov
imul
test
ja
shrl
cmpsl
ret
mov
clc
pop
idivl
adcl
rolb
stos
dec
push
sub
xchg
popf
stc
imul
outsl
dec
cmp
pusha
dec
xor
es
clc
xchg
jge
lahf
testb
cli
daa
pop
fldl
push
fmull
xabort
push
xorl
pushl
push
inc
mov
popf
outsl
xor
dec
rcrb
ret
mov
dec
lcall
fidivl
mov
mov
loop
xlat
and
sti
ds
gs
jle
xlat
sbb
movsb
add
pop
arpl
fcomi
pop
xchg
inc
sub
dec
inc
jne
aaa
ds
push
bound
pop
cmp
out
pop
sub
or
rcrl
lods
push
mov
pop
dec
cmc
jb
inc
mov
dec
xchg
div
stos
jle
and
adc
and
mov
mov
std
cmp
jbe
inc
lahf
inc
dec
cmpsl
and
cmp
dec
movb
movsl
fnstenv
fidivl
cmp
sbb
les
mov
notl
dec
shrl
loopne
or
jle
rorb
das
cmp
mov
xlat
pop
das
stos
sub
shll
scas
out
cltd
mov
ret
mov
loopne
add
adc
jl
lea
dec
rclb
test
mulb
and
push
sbb
mov
scas
xlat
in
test
cmp
xlat
inc
inc
mull
sub
jp
and
jbe
in
jecxz
outsb
xchg
xor
adc
out
mov
aas
push
outsb
insb
mov
xchg
add
mov
sahf
test
xor
out
lock
jmp
subb
sbb
loop
mov
test
sbb
mov
push
pop
inc
movsb
push
mov
xchg
or
loop
jge
mov
or
mov
sbb
fcmove
test
fcmovbe
mov
jns
cmp
add
fisttpl
xchg
clc
enter
mov
lods
pop
inc
mov
mov
or
shrl
stos
shll
ljmp
dec
mov
out
sub
jle
mov
nop
and
pop
jae
fldcw
aam
pop
cmp
lds
mov
jne
dec
int
je
addr16
fistpll
gs
xor
outsb
jg
cmp
push
rcr
xchg
loopne
call
cmp
loop
cmpsl
jl
ds
aas
cmp
lods
pop
vmovq
rcr
dec
xchg
fwait
test
lahf
xchg
pop
cmp
push
dec
out
push
jb
incb
pop
jb
shll
js
xor
push
add
inc
loop
cmp
sub
ret
daa
loopne
dec
adc
inc
idivb
mov
jle
mov
xor
sbb
cli
outsl
pop
jae
xchg
scas
adc
sub
add
cwtl
add
sbb
roll
mov
repz
int
repz
aaa
xchg
xlat
sub
inc
xchg
les
sbb
imul
push
aaa
addr16
es
in
push
popa
push
in
pop
cwtl
adc
xchg
pop
fisttpll
xchg
cmpsl
les
ret
lds
jno
cmpb
fistpl
mov
popa
subl
out
lahf
rclb
int3
pop
cmc
inc
pop
clc
call
pop
stc
inc
outsl
add
imul
into
or
mov
test
inc
cmp
lcall
adc
lock
and
ficomps
shll
flds
iret
or
mov
adc
rcll
loopne
rol
aam
pop
inc
loope
push
fs
inc
scas
rorb
into
push
xor
dec
push
mov
out
adc
rcll
push
ss
pushf
cltd
enter
inc
int3
mov
into
scas
mov
sete
mov
nop
sbb
testl
sbb
add
dec
pop
jmp
call
sub
scas
cmp
stos
inc
fisubs
gs
mov
outsl
jo
fnstenv
out
mov
add
test
mov
mov
int3
jg
mov
add
ret
sahf
mov
popa
loop
ret
insb
sbb
lods
mov
jge
aas
push
mov
xor
rcrl
pop
xlat
mov
xchg
xor
mov
inc
push
in
push
jnp
stos
andl
and
dec
mov
and
mov
sub
ds
sahf
daa
inc
mov
bound
movl
jno
into
aaa
addr16
mov
xchg
lods
mov
insb
push
mov
push
sbb
dec
imul
repnz
aam
decb
aaa
or
push
push
out
stc
sbb
adc
test
shrl
aas
and
and
push
out
rcrb
pushf
movsb
fldl
iret
int3
mov
arpl
and
cmp
fcoml
stc
push
sub
shl
out
inc
xor
outsl
leave
out
fcmovbe
mov
cmovns
mov
shll
iret
jg
jno
cmp
or
sbb
xor
or
ss
sub
ljmp
add
jp
imul
xchg
pop
jbe
leave
ja
jp
mov
mov
je
adc
adc
je
inc
fsubp
int3
add
mov
clc
addr16
jg
orl
cwtl
aaa
fsubrp
or
dec
test
cli
or
jns
xor
stos
dec
fs
lcall
out
mov
xchg
mov
jmp
push
jne
rclb
aad
cs
push
push
push
pop
mov
and
jno
call
push
insb
push
push
xchg
psraw
popf
insb
adc
jns
jl
inc
iret
xchg
out
adc
div
inc
adc
push
fsts
cmpsb
sub
int3
leave
mov
push
cmp
js
lock
test
and
stos
leave
mov
fistps
push
dec
adc
rcrb
mov
cwtl
xor
push
sbb
mov
add
lret
sti
arpl
cltd
ja
and
mov
pushf
rorl
pusha
and
add
int
adc
lea
sub
cmp
imul
test
std
sbb
mov
pop
insb
ret
leave
jle
fs
dec
jecxz
ja
dec
clc
inc
bound
mov
push
mov
mov
push
pop
pusha
popf
jp
and
shlb
lahf
dec
pushf
icebp
movsl
xchg
cmpl
dec
ss
insl
rcl
mov
cwtl
imul
iret
int
adc
jle
call
push
jb
sbb
cmp
enter
movsb
xor
jae
cli
and
and
and
mov
or
cmp
pop
rclb
divl
mov
jmp
sbb
sbb
xchg
mov
inc
test
push
inc
int3
popf
clc
cmp
sbb
and
adc
pop
leave
lea
pop
sti
push
dec
pop
inc
jbe
hlt
pop
cs
xchg
cmp
dec
bswap
pop
jne
movl
mov
test
imul
dec
inc
mov
lock
inc
js
xor
xor
dec
jp
rcrb
mov
jae
push
push
xor
insl
jbe
inc
inc
lods
jo
scas
push
dec
or
and
dec
sub
mov
sbb
hlt
outsl
daa
xchg
sbb
dec
push
ret
xor
dec
lods
addr16
fmull
inc
out
sbb
pushf
adc
ret
sbb
sbb
xchg
sbb
xor
push
int3
imul
mov
and
hlt
xor
lcall
pop
fiaddl
sti
sub
sbb
lods
add
dec
xor
mov
andl
mov
sbb
movsl
popa
and
into
fstl
xchg
push
adc
sbb
jae
repz
mov
testb
scas
pop
xchg
jp
cmp
test
loopne
and
movsb
add
mov
outsb
movsl
iret
jns
jl
pop
xor
scas
clc
pop
adc
ja
sbbb
loopne
inc
pop
push
push
mov
adc
dec
call
mov
or
lods
add
inc
push
es
movsl
inc
arpl
out
cmpb
lahf
mov
inc
jmp
out
push
fists
or
stos
pop
mov
pop
and
imul
pop
push
ljmp
mov
fadd
fwait
add
repz
stc
test
ja
bound
add
movsb
push
mov
std
and
incl
mov
cld
imul
cmc
adcb
outsb
dec
xchg
mov
andl
in
mov
aad
or
mov
aas
sti
shl
jp
jo
fsts
dec
repz
mov
jns
mov
xlat
fistpl
aam
push
dec
lods
push
mov
push
pop
imul
cld
dec
hlt
stos
dec
loopne
push
mov
push
punpckhwd
add
jg
inc
lret
out
iret
fisttpl
mov
or
jne
pop
jmp
and
sbb
scas
push
xchg
test
pop
loopne
inc
xor
add
add
dec
sub
mov
inc
clc
pusha
mov
imul
add
cmc
mov
pop
xor
imul
and
inc
jp
dec
repz
push
movsl
sahf
xchg
popf
mov
fbstp
add
rcrl
ja
cmp
sub
xor
outsl
pop
jl
out
pop
pop
test
popa
push
or
xor
fisubs
outsl
pop
fmulp
insb
and
movsl
test
sbb
lods
push
add
test
cwtl
jge
jg
cmp
jle
mov
mov
inc
in
stc
cmp
or
jns
push
das
aad
mov
jb
stos
and
sub
mov
outsb
addl
ja
mov
stos
movsl
imul
lcall
dec
cmp
push
fmul
and
dec
xor
shlb
mov
mov
clc
sbb
cmp
xor
aaa
pop
pop
jbe
pop
mov
add
inc
jae
lea
xchg
and
gs
dec
sbb
pop
cmpb
je
inc
and
push
jg
push
sub
dec
aaa
xor
or
fwait
or
add
pop
fistpl
sbb
bound
pop
popa
ja
or
test
mov
movsl
das
je
mov
incb
sub
mov
sub
pop
jne
fcompl
je
subl
dec
xchg
sub
and
xchg
add
sub
mov
mov
inc
mov
or
sbb
inc
test
sbb
jns
cs
imull
test
ljmp
adc
cmp
notb
shl
push
sbb
cli
les
mov
in
add
add
adc
mov
hlt
mov
or
clc
imul
push
adcl
lods
mov
in
sti
mov
cmp
inc
test
mov
jmp
rol
mov
cli
lock
xlat
and
push
mov
sbb
dec
jp,pn
lahf
jge
notl
in
cmp
xor
rcll
xor
or
mov
add
sbb
out
jo
test
test
push
rdmsr
xor
ret
icebp
mov
je
cld
jp
cmpl
push
mov
pop
lods
mov
push
test
dec
dec
sbb
add
pop
ret
mov
add
mov
sbb
mov
subl
fs
dec
push
lahf
mov
mov
jne
jo
add
mov
in
in
jns
sub
movsl
fs
mov
jns
pop
into
nop
cmp
or
cli
in
lock
jmp
arpl
xor
nop
push
push
mov
or
mov
xor
sub
cmc
cmp
sarl
mov
pop
ret
jae
jl
fildl
or
xchg
inc
inc
push
pop
push
ret
sub
jmp
dec
push
arpl
imul
pop
pop
push
dec
push
hlt
dec
cmc
push
nop
mov
dec
dec
or
adc
add
jp
jbe,pt
sub
add
cmp
mov
mov
jns
mov
shll
ret
xor
das
aas
lock
and
inc
add
data16
mov
adc
sbb
and
inc
and
and
mov
shll
push
xor
inc
daa
mov
dec
dec
enter
stos
dec
out
aad
ljmp
rorl
pusha
cmp
or
jne
xchg
or
jg
pusha
pop
inc
push
push
cmp
ljmp
add
jg
addr16
aas
lret
xor
mov
setbe
pop
dec
jne
insl
sub
shlb
sub
and
adc
push
stos
mov
jns
and
sub
divb
jg
test
mov
push
je
jecxz
jmp
cmp
leave
mov
pop
mov
mov
movsl
sub
jno
mov
cmp
inc
jb
mov
dec
ficompl
inc
sub
push
xchg
pop
es
push
fsubl
pop
inc
mov
jnp
jle
cvtps2pd
fcomi
cli
aaa
test
pop
push
insb
pop
out
xor
jnp
xor
xor
xchg
jl
add
xlat
fs
test
jp
add
cmp
bswap
loopne
out
xor
push
imul
pop
jae
stc
and
stos
sbb
xchg
icebp
xlat
lea
in
test
mov
ret
scas
mov
xchg
sbb
add
or
fsubrs
xchg
push
mov
lcall
lods
add
les
sbb
xchg
nop
dec
sbb
sbb
sub
imul
and
inc
sbb
push
inc
pop
cmc
or
add
jae
push
inc
scas
push
jg
cmp
lcall
xorps
ror
mov
adc
pop
cmp
es
sub
jmp
push
daa
sub
mov
ret
insl
adc
call
call
inc
cmpsl
pop
or
xor
fadds
and
xchg
test
int
xorb
bound
xchg
push
push
mov
fsubl
cmp
in
inc
out
cmpsl
imul
or
jecxz
mov
inc
pop
shlb
xchg
andps
mov
imul
in
or
pop
jo
out
pop
bound
test
aam
cmp
xor
mov
jmp
mov
push
les
outsl
mov
and
cmpsl
inc
mov
pop
jecxz
and
mov
pop
fnsetpm(287
push
loop
aam
leave
je
mov
pop
xor
push
or
xchg
aam
daa
sub
jns
js
inc
data16
cmpsl
sub
outsl
ret
scas
xor
adc
sti
adc
add
push
aas
cwtl
or
add
sub
imul
movsb
test
xchg
adc
das
js
push
jmp
sbb
ds
mov
cwtl
or
sahf
and
ja
adc
and
into
into
pop
in
sbb
sahf
cld
out
jae
mov
sbb
in
lahf
shll
hlt
cmpsl
xchg
add
imul
arpl
add
sbb
outsl
pop
or
ret
int3
iret
into
push
add
or
insb
iret
rorb
inc
adc
outsl
lds
das
pop
movsl
in
push
movl
movsl
pop
and
and
or
push
int3
mov
scas
pop
aas
arpl
pop
gs
dec
mov
mov
fildl
cltd
stos
std
std
insb
cmp
scas
repz
push
sbb
push
xor
adc
pop
push
scas
mov
rorl
inc
in
arpl
xchg
lret
dec
xchg
jecxz
mov
mov
sub
rcrb
ret
sbb
test
cmpsl
pop
jle
mov
mov
push
enter
pop
inc
divl
mov
pop
push
sbb
test
pusha
outsl
pop
dec
loope
or
aam
and
mov
in
loope
jmp
fwait
sbb
adc
inc
sbb
lods
xchg
ja
mov
or
je
xchg
pop
iret
jp
mov
xchg
sarb
sub
pop
pop
scas
stos
dec
fmull
push
mov
sub
pop
popf
mulb
xor
cmp
aas
enter
dec
push
mov
push
lea
arpl
push
cs
adc
ret
or
pop
xchg
outsl
xlat
pop
ja
jl
pop
sub
jnp
inc
pop
push
test
into
aam
mov
fadd
fsubs
mov
rolb
jl
or
testb
inc
les
mov
lahf
pop
xorl
pusha
mov
xor
jno
pop
movsb
popf
xor
lahf
fadd
pop
in
jne
sbb
jl
sahf
clc
addr16
cmp
lcall
dec
mov
sub
movsl
andb
pop
aas
sbb
xchg
imul
cmp
xchg
push
mov
adc
ffree
adc
sti
lea
stos
mov
sarl
pusha
jb
add
sbb
adc
mov
call
lods
lcall
xor
or
stc
pop
lcall
adc
das
xor
mov
imull
ret
xchg
in
add
cmpsb
adc
scas
dec
aam
mov
mov
xchg
push
push
xor
or
fwait
sbb
cmc
cmc
or
outsl
add
pop
sahf
stc
mov
orb
sbb
mov
jle
imul
cmpb
dec
and
pop
pushf
in
or
stc
sbb
bound
sbb
pop
pusha
out
inc
cmp
stc
int3
mov
imul
lret
mov
fadds
jae
lret
mov
push
lret
xor
pop
xor
pop
inc
fcompl
lds
or
es
dec
sbb
cmpsb
push
xchg
dec
xchg
outsl
mov
icebp
outsb
setp
xor
push
mov
mov
jl
dec
inc
ret
mov
pop
in
push
ss
push
data16
sub
pop
dec
jl
ljmp
ficoms
or
pop
jnp
and
xchg
add
sbb
enter
outsb
add
sbb
loope
pop
jmp
sbb
pop
cmp
stos
out
jne
stos
sahf
mov
mov
push
adcb
or
pushf
int
lcall
cwtl
add
insl
adc
lock
data16
add
cmp
xlat
inc
sbb
test
daa
cmp
adc
ja
cwtl
inc
mov
lcall
inc
pushf
mov
shrb
mov
jne
das
adc
xchg
jbe
pop
int
fstps
mov
and
out
cli
cmpb
inc
sbb
cwtl
sti
xor
mov
stos
cmp
and
loopne
push
xor
pushf
fs
and
add
cmp
jle
mov
xor
jg
sub
mov
jbe
jecxz
int
sbb
mov
ljmp
sbb
xchg
jg
test
push
or
push
push
lahf
lahf
fistpl
iret
scas
clc
mov
or
outsw
dec
jg
outsb
aaa
xor
xlat
addr16
test
fwait
push
xchg
xchg
cmp
in
int
dec
stos
dec
dec
push
or
sub
sub
inc
cmp
inc
mov
mov
ret
and
rol
xchg
in
cmpsl
jb
push
jge
enter
mov
xlat
jns
fisubl
pop
mov
enter
xchg
andl
mov
insl
out
call
hlt
loopne
mov
or
mov
scas
pop
outsb
adc
scas
cmpl
cli
inc
clc
dec
xchg
pusha
icebp
pop
sbb
sbbl
subl
add
imul
mov
imul
out
lret
test
or
test
aad
mov
xor
jle
and
fsubs
call
outsb
or
push
push
arpl
jl
in
ss
pushf
sub
sub
loope
subl
add
cmpsl
add
jns
call
xchg
shr
int3
fcoml
xchg
mov
shrl
mov
xor
iret
call
addr16
cmpsl
sbb
outsb
sarb
inc
push
test
sarb
loop
push
call
fadd
mov
jge
shlb
les
aam
mov
jns
mov
sub
pop
fstpt
fdivr
pop
xor
cmc
pop
push
out
scas
cmc
dec
movsl
mov
repnz
push
dec
popa
sub
cli
jg
movsl
inc
jo
iret
sahf
mov
ret
insb
push
mov
push
mov
xor
nop
dec
stos
js
jns
into
jge
aad
call
sbb
adc
test
jo
ss
push
push
icebp
mov
sub
mov
aas
stc
orb
and
insb
mulb
test
out
cmp
clc
bound
mov
cwtl
push
push
imul
sub
out
inc
int3
cmc
jl
jmp
pushf
int3
xor
cbtw
in
mov
int
call
sub
pop
push
rolb
pop
pop
adc
cmpsl
or
jl
and
mov
jp
xorl
test
ret
add
lods
out
sbb
ja
mov
jle
sub
mov
test
dec
fs
push
and
repnz
in
mov
mov
fistpll
lea
lahf
arpl
pushf
aam
add
and
out
aaa
push
or
stos
jmp
iret
xor
lods
cmpsl
lds
cmpsl
in
push
push
xor
xchg
outsl
pop
ficomps
insb
mov
jecxz
mov
addb
sbb
into
push
incl
repz
mov
push
jg
popa
xor
je
jo
cmp
ret
popa
cmpsl
mov
inc
adc
sti
std
jmp
dec
aas
push
loop
lods
mov
pushf
dec
or
sub
sbb
lods
add
mov
das
int3
je
outsb
fmull
insb
pop
mov
mov
pop
out
xchg
cmpsl
insl
cmp
insb
pop
dec
push
mov
pop
dec
jge
add
in
in
aas
mov
sar
sub
push
movsl
mov
mov
xlat
and
or
sub
scas
repnz
gs
mov
cld
jge
mov
inc
insl
int3
mov
stc
and
ficoms
lods
je
jno
inc
ret
bswap
in
add
lret
lret
repnz
leave
in
add
int
pop
mov
loopne
mov
outsb
stc
xchg
sbb
adc
iret
jecxz
stos
insb
ror
add
cmc
push
repnz
aam
jp
push
sar
xchg
jae
icebp
insb
in
mov
outsb
cmp
mov
adc
ja
adc
cltd
dec
ret
out
and
fidivl
xchg
fdivrp
daa
add
loopne
mov
das
out
dec
mov
data16
aad
out
mov
ljmp
cmpsl
cwtl
js
adc
lret
add
test
xor
inc
scas
popf
std
sbb
push
pop
pop
or
push
push
mov
and
cmp
cmp
daa
xor
stos
mov
inc
mov
in
adc
hlt
xor
fwait
push
jne
dec
in
lods
add
mov
lcall
test
pop
and
outsl
pop
and
or
loope
sub
bound
mov
mov
ficoms
xchg
mov
daa
jne
mov
inc
jne
xor
push
push
and
mov
inc
popf
add
movsl
xchg
mov
mov
es
adc
rcl
mov
hlt
aam
mov
movsl
mov
pop
shll
iret
inc
enter
lock
arpl
clc
jbe
inc
inc
cmpsb
inc
or
subb
je
lods
lahf
imulb
les
faddl
push
stos
dec
adc
leave
es
add
cmp
xchg
out
addr16
jbe
xchg
mov
xor
int
pop
mov
int
and
push
jns
ds
dec
loope
cld
loope
cmpsb
lds
and
inc
and
pop
pop
aas
mul
int
jae
mov
push
dec
push
xchg
mov
sbb
dec
div
sub
ss
pop
sub
or
cli
jns
or
add
out
nop
push
test
scas
lahf
jb
dec
fildll
out
or
dec
fwait
xlat
jg
inc
dec
lret
out
lock
fistpl
cmp
lods
cli
es
movsl
lcall
fsubp
add
dec
sbb
mov
out
mov
lahf
cmp
pop
in
cld
xchg
stos
mov
jnp
test
sub
nop
jns
lcall
and
sub
jns
hlt
cmp
jle
mov
lahf
test
loope
cwtl
lods
sbb
mov
jno
mov
cmp
pop
fnstsw
stc
les
fstpl
aad
push
outsl
xor
int3
insb
pushf
sub
test
mov
push
cmp
push
movsl
jo
scas
push
sub
nop
mov
popa
loope
and
or
inc
test
push
push
aam
enter
sbb
cmp
les
cmp
or
cmp
test
or
js
mov
push
or
dec
jae
test
dec
push
push
pop
inc
in
adc
mov
sub
push
mov
cmp
pusha
xchg
jnp
clc
push
in
sbb
ss
inc
xor
xchg
and
flds
sub
xchg
inc
add
movsb
push
mov
sbb
ss
sub
hlt
cs
dec
nop
add
shrb
pop
mov
shrb
mov
popa
test
mov
sbb
jle
es
cmp
sub
sti
push
fwait
pop
adc
mov
iret
fimull
sbb
sbb
cli
outsb
rorb
lock
sbb
mov
daa
addr16
adc
ja
push
xor
in
inc
lahf
inc
sbb
mov
xor
pop
into
inc
pop
mov
insb
test
add
dec
lock
fisubrl
pop
and
add
and
cmpsl
pusha
cmpsb
add
addb
mov
add
inc
sub
cmp
in
or
shrl
roll
aaa
sbb
lret
jae
rorb
xchg
xlat
inc
cmc
push
cwtl
jmp
push
leave
inc
or
add
sbb
sahf
mov
or
stos
mov
sub
xchg
cmp
les
cwtl
int
push
mov
sbb
xor
sub
jmp
mov
add
fidivl
xchg
data16
or
pop
dec
out
mov
insb
sub
mov
imul
icebp
inc
test
out
into
mov
cli
fs
sahf
push
repnz
and
pop
cmp
pop
das
push
js
jg
xchg
xor
lock
dec
mov
jbe
notl
push
ljmp
xchg
xchg
mov
mov
repnz
fmuls
aaa
int3
leave
negb
cmp
pop
mov
jle
jns
clc
or
setl
popf
lret
or
mov
pop
pushf
jne
int3
pop
mov
add
and
mov
or
ja
push
push
mov
mov
push
mov
fisttps
fs
add
lea
and
js
in
sbb
jp
cmpsl
rolb
adc
bound
rorl
fbstp
mov
cmp
addl
mov
pusha
xchg
sub
xchg
int3
outsl
mov
pop
and
mov
mov
ret
add
lret
xchg
cli
pop
xchg
hlt
stos
ret
push
ja
scas
aad
add
lods
mov
dec
jb
mov
test
lea
nop
add
push
ret
mov
je
sub
test
ds
push
bound
jmp
sub
jmp
and
lret
ret
test
js
lret
fimull
jmp
rcll
pop
aam
jmp
in
imul
inc
fistps
mov
in
add
jbe
faddl
int3
test
mov
jno
ljmp
push
mov
cmp
test
push
jmp
xorb
dec
mov
sbb
push
pop
push
dec
scas
mov
add
xor
ret
std
loope
dec
pop
fwait
mov
sub
or
mov
fnstcw
sbb
inc
mov
mov
mov
shrl
lock
psubd
lock
adc
lods
and
adc
jecxz
push
cmp
dec
cmp
mov
mov
mov
cmc
mov
push
mov
lock
out
out
and
cld
xchg
jle
xor
fcom
xor
insl
xchg
xorl
insb
xchg
stos
xor
or
mov
shll
xor
or
cmpsl
cmp
insb
rcrl
int3
mov
mov
lea
cmp
popw
push
add
out
movsl
cmp
or
lahf
dec
adc
or
or
popa
cvtps2pd
idiv
xor
push
xor
stos
push
jecxz,pt
sbb
or
outsb
add
adc
jb
sub
retw
or
lcall
xlat
imul
mov
mov
and
cmpsb
icebp
push
xchg
add
jmp
out
sbb
push
sbb
dec
out
mov
scas
pop
xchg
mov
add
sub
in
fwait
xchg
hlt
mov
or
sbb
jns
xchg
jp,pn
pop
jae
sub
sub
shll
mov
cmp
xor
test
mov
incl
fcmovbe
xor
pop
nop
pop
cltd
lods
lds
sti
and
fwait
lock
loopne
fld
gs
xchg
push
jmp
xchg
adc
xchg
data16
cmc
in
adc
dec
loope
pop
movsb
rorl
mov
push
test
rorl
push
jb
repz
negb
loope
lea
mov
mov
push
test
in
inc
stc
shll
cmp
sub
jns
cwtl
and
xchg
fidivl
sbb
add
jge
pop
jg
mov
jbe
dec
fbld
aaa
or
mov
sbb
push
mov
sbb
sbb
xor
sarl
mov
filds
cli
xchg
mov
out
testb
stos
jp
fisubrl
jle
fmuls
mov
fistpll
dec
mov
pop
pushf
dec
lock
xchg
or
fs
jmp
mov
add
adc
lds
inc
cwtl
aad
in
push
int3
loope
mov
lret
pop
ret
mov
rcll
out
das
into
mov
push
add
mov
mov
ret
popa
or
popf
jb,pt
push
in
clc
popa
or
out
dec
mov
pop
pop
jle
cmp
out
scas
sbb
mov
fsubrs
das
into
lcall
pop
test
lea
push
std
out
out
inc
test
cmp
movsl
adcb
adc
or
sbb
test
xchg
pop
testl
push
bound
push
push
pop
xchg
dec
das
xchg
shlb
enter
push
in
jecxz
xchg
stos
mov
or
xor
jle
lods
cmpsb
mov
xchg
insb
and
dec
and
js
push
fisubl
lock
or
int
aaa
daa
cmp
lock
out
into
jns
mov
jne
test
data16
or
sarl
add
pushl
jp
js
add
mov
stos
sub
inc
andb
in
pusha
inc
sbb
div
mov
add
and
or
jo
push
out
jl
mov
push
sbb
xchg
cmp
ficompl
lock
addb
mov
dec
cmp
xor
sub
mov
mov
sub
test
cmp
scas
fwait
dec
pop
lcall
movsl
fdiv
pushf
xchg
jg
push
out
add
dec
xchg
adc
adc
leave
nop
push
sbb
xchg
arpl
je
jecxz
mov
pop
sub
and
roll
push
fimull
jge
bound
xor
mov
fsubrs
and
adc
ret
jecxz
in
or
dec
dec
in
aaa
xchg
test
loop
jmp
in
sbb
and
ss
jecxz
dec
jb
mov
mov
sbb
es
add
sbb
inc
cmpsb
jge
push
icebp
subb
jle
dec
fistpll
adc
mov
pusha
mov
mov
sahf
push
add
xchg
lods
and
rorb
lock
xchg
pushw
int
or
jne
jp
imul
into
out
cmp
mov
push
stc
rolb
gs
push
mov
mov
push
mov
bound
stos
sub
adc
mov
fwait
repnz
mov
cmc
sbb
scas
int
mov
mov
lcall
test
ljmp
xchg
lds
adc
mov
leave
mov
nop
arpl
faddl
xchg
ds
mov
xlat
or
or
icebp
int
shrb
pushf
adc
loopne
sbb
mov
xor
pop
add
xchg
test
dec
sahf
ds
bound
sub
je
or
sbb
jle
xor
scas
cmp
pop
dec
testl
frstor
jp
cmc
test
jg
push
dec
adc
repz
jp
push
fildll
ljmp
in
xchg
cmc
mov
sbbb
in
push
adc
test
sub
and
fdivrs
pusha
inc
jae
lock
sub
subl
lods
ret
into
and
jmp
add
or
cwtl
mov
pop
push
enter
loop
sub
mov
icebp
xchg
lock
repz
mov
lret
mov
xchg
arpl
iret
mov
cmpsb
cmp
in
movsl
jmp
outsl
movsb
bound
incl
sbb
mov
xchg
mov
test
adcl
test
insb
shrb
setb
mov
adc
test
aaa
jp
ss
push
int
cli
pushf
movsl
pushf
dec
push
es
sbb
out
rcrl
ret
loopne
push
testl
enter
pop
outsl
mov
inc
inc
xchg
pop
stos
fnstsw
sub
jne
sub
pushf
cmp
out
sahf
mov
in
ljmp
sub
cli
shrb
test
aaa
shr
mov
in
cs
sub
sub
out
jbe
repz
xchg
mov
lret
xchg
xchg
ror
ret
ja
push
rcr
stos
sub
sbb
movsl
test
pop
adcb
push
pushf
dec
dec
push
inc
xchg
lcall
and
jmp
fcomip
in
or
inc
out
dec
adc
clc
push
ja
xchg
mov
mov
loop
cltd
andb
fidivl
icebp
jnp
cmp
add
jge
rorl
cli
add
out
outsl
filds
cmc
cmc
sbb
in
mov
clc
stos
sbb
push
pop
scas
scas
ljmp
in
insl
dec
adc
je
jg
push
jmp
leave
sbb
out
fst
mov
xchg
sbb
daa
imul
xchg
xor
les
aaa
movsl
cmp
scas
js
xor
std
jnp
outsl
mov
sbb
jmp
movsl
jmp
js
adc
or
sub
hlt
or
lods
jg
push
rcl
dec
mov
push
or
sbb
adc
cmp
adcb
cmp
icebp
lret
pop
sub
loope
dec
shrb
dec
fadds
into
push
stos
out
add
dec
jnp
test
push
mov
pushf
test
or
mov
js
pop
es
pusha
lahf
pushf
mov
sbb
arpl
xor
jg
jb
test
cld
xchg
lahf
lods
mov
jmp
in
xor
and
add
ljmp
inc
repnz
and
cs
xchg
xchg
mov
add
pop
adc
push
or
clc
jo
mov
sub
bound
out
int3
ljmp
lods
insl
sbb
add
loopne
xchg
fisubl
outsb
movzbl
and
int
int3
and
mov
cli
push
addb
cmc
pop
push
les
cltd
inc
idiv
lods
inc
jge
addb
dec
imul
fldl
xor
push
fdivl
pusha
ss
pop
jmp
call
add
lea
pop
test
insl
xchg
leave
lret
mov
push
into
fldcw
dec
mov
rcrb
fldt
xor
jo
xchg
mov
mov
xor
jae
sub
mov
jb,pn
dec
mov
sarl
popf
and
dec
pop
adc
stos
in
lods
sub
sbb
fidivrs
das
mov
push
add
insl
incl
fists
out
mov
cld
rolb
or
xchg
imul
loopne
insl
in
adc
aam
jbe
fdiv
adc
stc
mov
adc
out
pushf
sbb
or
insb
pop
push
xor
icebp
jecxz
cmp
adc
push
sub
jmp
sbb
les
sbb
hlt
movsb
cmp
cld
movaps
repnz
pop
mov
cltd
addr16
xor
jp
mov
pop
mov
adc
inc
jns
xor
cmp
inc
sub
lret
mov
ja
jns
cld
push
scas
outsb
xor
dec
insl
out
arpl
jnp
imul
adc
mov
xchg
ljmp
xor
cmp
ret
sbb
cmp
or
pop
lods
jb
lret
xchg
sub
mov
mov
cmpsb
xchg
add
jl
je
mov
lock
bound
xchg
std
call
test
dec
mov
add
bound
pop
push
das
inc
shll
jecxz
mov
test
mov
dec
push
mov
jbe
add
pusha
aad
data16
and
xchg
xor
das
xchg
in
insl
jbe
fsubr
mov
andb
fucomi
sbb
adc
mov
jg
sub
mov
xlat
iret
sarl
inc
or
xchg
or
dec
icebp
fisubrl
lret
cmp
adc
xor
cli
sbb
cmp
clc
pop
mov
mov
push
push
xor
outsl
aaa
ror
int
inc
je
stos
lcall
mov
mov
fldenv
inc
mov
and
inc
inc
or
push
inc
or
adc
pop
mov
pop
je
push
inc
stc
fcoml
xchg
rorl
xlat
xor
das
fisttpll
pop
fs
sbb
dec
fldcw
mov
fdivl
or
xchg
ret
test
mov
out
sahf
arpl
hlt
lea
pop
and
js
mov
cld
push
pop
jo
out
movsl
mov
jne
inc
jno
loope
scas
xor
xor
jno
jl
sbb
mov
out
mov
sub
and
or
or
jno
imul
mov
xchg
outsb
xchg
xor
sbb
jmp
pushf
jb
inc
sar
test
test
pop
shl
push
mov
sub
in
add
push
dec
inc
push
sub
sbb
push
mov
adcb
loop
int3
or
shll
jo
add
mov
inc
xchg
sahf
in
inc
clc
jmp
pop
leave
and
aaa
gs
mov
decb
repnz
out
mov
lods
mov
cld
push
out
and
mov
popf
jmp
mul
rcrb
cmp
or
lock
mov
adc
ret
fstpt
inc
mov
push
push
and
sahf
pop
std
inc
or
mov
cltd
data16
dec
ss
mov
out
mov
ljmp
cmpsb
cld
test
and
fstps
jno
pushf
or
jo
add
ds
adc
jno
ss
out
push
pop
aas
jmp
push
push
lahf
xor
nop
gs
pushl
inc
leave
test
sub
movl
divl
pop
rclb
fidivrl
ret
scas
jp
fs
add
popf
sub
out
jae
inc
and
mov
and
pushf
popf
inc
aam
mov
cmp
sub
cmp
inc
push
outsb
stc
sub
pushf
mov
xor
mov
ds
rcl
add
cmpsb
jecxz
add
sub
mov
outsl
enter
repnz
ds
and
lea
push
add
jl
push
jg
ds
scas
in
outsb
test
lds
cmp
mov
leave
sbb
mov
nop
jmp
aas
jno
cmp
pop
movsl
xchg
repnz
lock
inc
scas
arpl
bswap
es
jb
push
jno
test
jmp
lret
or
or
aas
push
mov
pusha
rclb
std
or
jno
sub
subl
jmp
lret
roll
sbb
arpl
test
orl
push
inc
cwtl
inc
cmpsl
enter
or
and
fidivrs
enter
ret
clc
sbb
push
aaa
dec
fs
inc
jno
std
lret
xor
dec
pop
mov
xchg
pop
push
cli
lods
mov
mov
out
mov
aad
lcall
lods
xor
movsb
sub
pop
aas
sbb
pop
mov
cmp
or
xorb
popf
inc
rol
jb
in
clc
jno
xchg
fcompl
mov
rcl
sbb
fdivp
enter
adc
sub
cmp
ret
sub
push
out
call
jmp
mov
inc
or
pushl
jno
je
adc
das
pop
adc
loopne
repnz
dec
stc
xor
sbb
fldcw
lock
xorb
dec
mov
adc
xchg
and
test
lock
test
cmp
adc
mov
inc
or
mov
mov
js
test
adc
and
sub
jl
xor
popf
cli
sbb
mov
cmp
dec
outsl
loop
popf
lcall
lods
ja
jae
cmp
inc
loopne
sahf
test
sbb
xchg
sub
push
outsb
cmpsb
gs
and
inc
insb
push
inc
cmp
stos
mov
fmuls
push
cmp
jp
push
xor
jl
or
pop
data16
stos
shll
fcmovu
push
aas
pop
or
testb
mov
outsb
add
ja
mov
or
into
mov
fadd
xchg
insb
xchg
push
and
cli
ret
cmp
inc
jne
adc
les
dec
inc
mov
push
les
pop
sbb
and
loop
test
jb
out
std
push
pop
dec
or
enter
inc
in
insb
icebp
push
mov
dec
mov
cmp
insl
cmp
rcrl
mov
mov
and
jb
int3
sahf
xchg
in
fsubs
inc
addb
insl
insb
cmc
push
and
sti
lcall
das
sarl
adc
jle
aaa
sbb
cmp
dec
pop
lods
sbb
sub
inc
shll
dec
xchg
clc
int
jns
or
mov
ss
outsb
dec
add
cmpsl
shlb
pop
test
pop
sbb
lcall
fadd
pusha
mov
repnz
pop
cli
push
les
pusha
mov
fdivrl
sub
int3
dec
subl
xchg
and
sub
ja
and
jb
outsl
mov
jne
sbb
xchg
daa
jb
in
movsb
inc
dec
push
adc
fwait
repz
mov
sbb
xor
arpl
loopne
fimuls
mov
lock
ljmp
outsb
rcr
mov
pop
sub
mov
dec
mov
pop
iret
sahf
rcrb
dec
mov
aaa
js
add
rolb
or
addl
jle
rcrb
mov
jno
add
fcmovne
sahf
imul
sti
mov
iret
xchg
add
rolb
cmp
xor
jmp
scas
les
add
test
push
sahf
xchg
out
popa
xor
lcall
ret
sbb
jne
imul
pop
xor
lods
jecxz
mov
popf
fcomi
xchg
or
pusha
inc
dec
dec
das
xchg
imul
inc
inc
popf
stc
mov
pop
push
push
add
cmp
sbb
lahf
scas
push
jl
mov
adc
push
call
fisubrl
out
xchg
jne
xor
or
mov
test
shlb
mull
mov
lret
xor
ficoml
cmp
orl
pop
fldl
sub
adc
js
imull
aad
mov
ja
aad
fiadds
insl
out
js
xor
sub
or
cmp
out
mov
xchg
ja
cmp
test
rclb
daa
aad
push
mov
lret
and
movsl
mov
xor
fldt
adc
jns
jecxz
test
insl
sub
fnsave
sub
cs
pop
jns
cmpl
jmp
cmp
inc
inc
jns
push
mov
cltd
aam
push
fcmovne
xor
jne
lea
pop
mov
push
mov
add
or
popf
inc
pop
push
movl
ret
lret
pop
cltd
aaa
cmp
dec
push
scas
and
movsl
dec
sub
jb
add
xchg
ror
dec
dec
pop
lods
cld
insb
jmp
loopne
sbbl
aaa
rcll
pop
hlt
xlat
pop
inc
push
jnp
inc
les
sbb
cmp
sbbb
rcrl
xchg
movsb
lahf
cmpl
jno
aam
lret
shl
imul
cmp
pop
push
loop
add
addr16
jmp
xor
ret
adc
jge
push
in
or
addr16
mov
and
pop
inc
jle
sub
cmp
jl
shll
ds
add
dec
cmp
mov
hlt
scas
sub
test
xchg
dec
cmpsb
push
loope
or
je
push
inc
lock
fcmovnb
add
daa
cmp
sub
push
dec
clc
in
daa
jno
push
cmpl
add
cli
push
sbb
hlt
sbb
mov
mov
inc
subb
and
mov
cwtl
hlt
hlt
push
pop
rcll
xchg
popf
dec
xor
and
jg,pt
and
push
sahf
xchg
enter
and
int3
mov
mov
mov
pusha
jns
xchg
mov
push
dec
xchg
mov
adc
push
ret
inc
mov
pop
dec
fildll
fstl
adc
popf
mov
push
ds
mov
pusha
sbb
insl
fs
iret
mov
in
jl
lock
pushl
pop
push
mov
test
decb
inc
ljmp
icebp
sub
sarl
inc
mov
scas
int
add
js
lahf
dec
fmull
fmuls
lea
aas
test
pop
rcl
int
aas
sbb
push
int
xor
dec
jmp
out
jecxz
out
or
push
lea
dec
push
adc
or
push
rorb
mov
imul
add
lahf
imull
adc
mov
mov
and
jp
mov
repnz
sub
lcall
push
fidivs
jge
mov
iret
adc
mov
and
lcall
cmp
popf
lods
in
pop
mov
push
cmp
out
pop
sbb
jo
or
insb
pop
jno
adc
jmp
mov
mov
pop
out
fildl
jne
filds
xchg
fs
push
cmpsl
aad
insl
imull
nop
imulb
or
inc
push
cmp
cwtl
outsb
dec
leave
js
lds
outsl
xor
cmc
inc
aam
scas
out
lods
mov
and
pop
add
pop
rcr
xchg
not
test
daa
out
or
xchg
push
je
test
mov
xor
out
dec
push
inc
push
lock
daa
pop
and
hlt
sub
sarl
hlt
cmp
jne
cli
xchg
shll
repnz
pop
push
mov
xor
jns
out
cmp
or
les
push
push
movsb
test
sbb
lret
lods
lret
add
mov
mov
jecxz
idivb
mov
hlt
push
ret
js
dec
mov
add
cwtl
rcr
xor
sbb
jb
subb
jge
jno
clc
sbb
fstpt
inc
add
movlps
movsb
pop
outsl
adc
movsl
push
jl
pop
insb
mov
xlat
push
inc
cmp
sahf
stos
ss
mov
adc
outsb
lods
sarl
mov
inc
cs
out
jge
sbbl
dec
or
mov
cmpsb
mov
cmp
dec
pop
jge
int
sbb
nop
repz
xor
call
mov
mov
rcl
push
xor
push
fstl
mov
xchg
ss
and
mov
ret
popa
loope
push
scas
fldcw
dec
shlb
std
rcl
repnz
push
mov
xor
mov
push
or
iret
fisubs
adc
jp
repnz
adc
mov
aas
cwtl
in
jle
aad
xchg
or
popa
fs
lahf
imul
mov
mov
xchg
mov
loope
mov
sub
adc
fdiv
out
inc
mov
aas
inc
adc
les
jb
hlt
enter
fld
jmp
xchg
mov
in
ficoml
jo
in
ja
out
xor
in
sbb
ja
mov
mov
lcall
pop
pop
dec
jp
inc
push
sbb
adc
adc
xchg
xchg
cmp
push
cs
mov
addr16
mov
xchg
ret
ss
mov
sbb
jo
push
inc
mov
outsb
ficoml
lds
or
iret
outsb
dec
cmc
or
loop
pusha
mov
lret
dec
push
cltd
filds
cmp
mov
loopne
icebp
flds
or
scas
out
movsb
xlat
mov
xchg
sti
lods
or
jnp
addr16
les
push
mov
sub
aad
push
cld
mov
lds
cmpl
scas
push
push
mov
cmp
loopne
lcall
jecxz
xchg
addb
inc
pushf
pop
pop
std
inc
dec
mov
jne
inc
and
jp
testb
insl
and
xrelease
pop
mov
lret
in
cmp
sub
or
pop
mov
clc
xchg
push
int
sbb
mov
xor
sti
mov
loop
enter
aam
outsb
cmp
sub
aad
push
xchg
cmp
jbe
and
mov
cwtl
aad
and
sbb
or
sub
loopne
lret
xchg
cwtl
inc
sub
in
sub
cs
and
shll
sub
lock
lret
fisubrl
inc
out
shrl
nop
popa
out
loopne
mov
lret
jge
negb
push
inc
sbb
add
clc
repnz
dec
lret
inc
mov
cmpsb
and
pushf
test
fimuls
lret
lods
shll
insl
lret
cmpsb
fsubs
dec
mov
jge
push
lock
push
sbb
jns
add
das
cmc
lahf
pop
inc
out
dec
std
insl
xchg
and
popa
sbb
add
sub
mov
adc
out
lret
repnz
mov
popf
jecxz
adc
call
out
inc
pop
lods
loope
pop
sub
jl
xchg
dec
cs
jmp
mov
adc
out
pop
mov
add
lret
inc
pop
xchg
loope
sub
lcall
cwtl
cmp
xchg
repnz
testl
pop
dec
std
mov
sub
sbbb
ret
xor
mov
push
sbb
add
insl
filds
ds
jmp
xor
movsl
std
xchg
shrl
cltd
xor
push
push
pop
ficoml
icebp
push
cmp
xor
in
cmp
testb
xor
jle
push
xor
dec
das
jl
xorb
pop
out
push
cmp
sbb
stos
in
std
or
mov
test
sbb
std
dec
adc
sub
movsl
cwtl
mov
jns
in
dec
pop
xlat
pop
push
sbb
fs
mov
cli
mov
jmp
int3
aaa
push
test
cld
push
jecxz
inc
cld
std
imul
roll
testl
mov
sub
pusha
sahf
pop
mov
test
cmc
xchg
shrb
sahf
jbe
divb
leave
inc
mov
sub
cmp
movsb
shlb
push
sub
cli
dec
mov
inc
mov
aas
add
cmp
aad
jns
push
jnp
mov
xchg
push
push
incb
test
mov
push
add
jnp
xchg
and
js
push
jmp
or
pop
push
les
pop
lds
xchg
push
jp
stos
not
jbe
int
cwtl
jns
jmp
flds
aam
test
cld
xor
and
or
push
mov
xchg
xchg
or
add
cmp
js
lea
ret
pop
or
jae
push
mov
fwait
inc
addr16
mov
push
sub
repnz
dec
or
cmp
cmpsl
out
jnp
ret
lcall
mov
ljmp
xchg
aas
fwait
cmp
scas
and
push
pop
test
xor
inc
jmp
pop
fisubl
pop
cmp
lea
dec
popf
gs
add
dec
inc
out
push
jns
ljmp
or
mov
push
jne
pop
es
dec
or
insl
sbb
adc
movsl
ret
push
push
incb
mov
insl
sub
aad
movsb
iret
out
push
out
jns
lods
push
pop
or
icebp
int3
aaa
add
cli
mov
enter
mov
stos
cld
jne
outsb
pop
stos
xor
mov
lcall
aad
std
mov
ficoms
pop
push
rcl
lahf
and
push
cmp
leave
xchg
jle
jo
out
aas
xchg
adc
adc
insb
mov
dec
mov
jle
add
clc
out
sti
pop
mov
outsl
lods
mov
xor
pop
es
xlat
mov
adc
mov
int
repz
jnp
xorl
je
out
into
xor
push
xchg
sub
sbb
fsubs
lods
and
jge
xor
sbb
jo
pop
aam
loop
xchg
xchg
stc
das
sbb
pop
jae
sti
mov
jmp
add
ds
mov
inc
push
jae
cmp
pop
loop
xchg
pop
fisttpll
bound
add
pop
xchg
cltd
jae
pop
or
jns
lock
cmpl
inc
inc
xor
icebp
into
sub
cmp
mov
rorb
xor
sbbl
xchg
in
out
int3
in
xor
adc
inc
pop
addr16
adc
out
arpl
fldcw
jns
stos
xchg
xor
cs
sbb
cmpsl
pop
pop
push
jns
in
push
loopne
mov
out
pop
addr16
fimuls
movsb
shll
xor
mov
and
fxtract
pop
mov
mov
push
jmp
ret
mov
or
les
nop
shlb
bound
mov
std
shrl
test
xor
fwait
bound
xor
lods
outsb
mov
jge
es
cmp
dec
jbe
add
push
dec
sar
xrelease
sbb
lcall
sub
fidivs
aam
mov
inc
xor
push
insl
out
ss
out
insl
xlat
fildll
cmpsl
pop
and
gs
jle
jg
cwtl
inc
lret
push
or
push
jl
shll
imul
push
stc
aaa
data16
sbb
divb
xor
adc
add
sbb
jno
lock
clc
ljmp
pop
mov
jo
xchg
jnp
cld
pop
mov
inc
loop
inc
andb
data16
xor
lret
mov
jns
int3
add
sub
add
out
push
sub
push
add
lcall
cmpsb
adc
sbbl
insb
jecxz
cmp
push
lret
jns
mov
outsl
inc
dec
leave
inc
cmpsb
dec
idivb
std
lret
fcmovnu
xorl
js
xor
xchg
add
lahf
scas
dec
aas
xchg
outsl
fsts
push
jns
sub
dec
movsb
cld
xor
test
push
rcl
stc
xor
push
push
lret
rolb
mov
mov
fnsave
or
cli
jae
test
jno
mov
mov
es
push
jle
xchg
mov
mov
in
jae
mov
je
adcb
pop
je
test
popf
jae
fwait
loopne
inc
jno
or
mov
cmp
xor
loopne
lret
adc
bnd
movsl
mov
fwait
mov
es
into
out
insb
nop
mov
repz
lret
pop
das
aas
sti
mulb
stos
jne
jo
in
sub
sbb
imul
xorl
mov
push
outsl
jns
sti
jmp
or
push
or
std
mov
xchg
cmp
in
into
adc
sub
add
lcall
fidivs
jbe
dec
insb
xorb
jecxz
mov
stos
lods
inc
push
jle
mov
or
sarl
in
xor
sahf
cli
mov
filds
mov
outsl
adc
xor
popa
ret
stos
je
mov
push
fidivs
adc
and
into
xor
and
loope,pt
xchg
dec
mov
shll
jbe
adc
adc
out
jo
shlb
cmc
add
xor
out
shl
mov
mov
mov
pop
out
std
or
push
mov
or
sbb
fwait
cld
stos
ljmp
mov
mov
lea
bound
lret
cmp
xchg
cmp
mov
xor
and
inc
pop
outsb
arpl
mov
aaa
repz
push
in
or
test
cmc
inc
mov
loopne
les
sub
lret
aam
sub
aam
inc
loop
adc
scas
lcall
cmp
xor
clc
inc
cmp
jl
fisttpl
cmpsl
jbe
and
cmp
sub
ret
loop
cmp
bound
aam
pop
insl
dec
scas
shlb
pushf
or
call
sbb
mov
shrl
push
jecxz
mov
cwtl
push
mov
dec
jle
mov
jnp
movsl
and
pop
lret
sbb
jbe
test
cld
add
mov
in
cs
mov
dec
aad
mov
sub
or
mov
scas
mov
adc
mov
lea
mov
and
push
mov
decl
movsb
cmpsb
lock
add
adc
nop
pop
sub
repnz
jge
add
jle
imul
dec
mov
mov
mov
adc
arpl
sub
es
and
mov
xorb
outsb
push
xchg
pop
mov
scas
xlat
mov
lret
or
outsb
adc
ret
cmp
clc
repnz
inc
pop
dec
dec
cmp
imul
movsb
dec
mov
xorb
in
jge
fwait
xchg
fcomi
ja
test
push
std
add
loope
sub
mov
orl
repz
sub
adc
ficomps
and
or
dec
inc
subl
add
nop
ss
cwtl
mull
ds
add
push
jge
adc
shlb
fdivr
mov
rcrl
push
lar
ret
stos
jnp
cwtl
mov
jl
mov
mov
out
cld
push
jae
jl
loop
push
mov
in
xor
jno
pop
jmp
sub
sahf
xchg
dec
fwait
lret
cmpsl
or
lock
sahf
inc
or
repnz
stos
cmp
lahf
fbstp
into
insl
cs
mov
pushf
sbb
in
loope
sbbl
mov
push
out
test
jp
cmpsl
pop
ret
fdiv
push
xchg
movsb
mov
jge
shll
in
xor
sub
scas
dec
fildl
jne
sti
sub
repz
sub
int
push
dec
cs
add
or
in
jae
in
ficoms
mov
fisubl
fisubl
scas
push
cli
fdivs
xor
aad
xor
fbstp
mov
sbb
imul
repnz
insl
push
mov
and
clc
cs
out
sub
push
or
dec
sbb
imul
sbb
cltd
xchg
sti
dec
cmp
ja
sbb
dec
mov
push
pop
jge
nop
add
inc
fnstsw
and
pop
mov
mov
imul
mov
aas
cwtl
adc
lds
jne
scas
cmpsl
mov
xchg
pop
mov
lahf
dec
and
jmp
pushl
mov
fsubl
xchg
xchg
cmovbe
add
jae
mov
sti
add
sti
mov
bound
adc
jle,pt
cld
mulb
fs
aas
aaa
aas
insl
icebp
repnz
outsl
adc
push
mov
sti
xchg
and
loope
xorb
pop
push
ss
ds
mov
add
ret
outsb
mov
xchg
xchg
dec
push
jl
jl
out
nop
ror
lods
mulb
pop
ret
xchg
inc
je
sub
push
xchg
cwtl
shll
adc
out
jae
pop
dec
and
mov
loope
pop
stos
push
es
aam
dec
jns
outsb
hlt
cs
int
inc
or
push
mov
inc
popa
fwait
inc
test
xor
mov
xor
das
gs
jno
xchg
aad
scas
sbb
mov
xchg
and
push
out
push
les
test
ret
cld
jns
loopne
scas
lret
and
int
fsubs
enter
ss
out
rcr
xorl
in
insl
sahf
mov
test
test
scas
rcll
adc
add
mov
insb
mov
fimuls
lret
or
inc
cli
add
sbb
les
pop
cmc
cmpsl
jle
stc
or
mov
xchg
and
lcall
mov
or
out
pushf
push
jg
popf
mov
lret
stos
pop
out
inc
cli
neg
mov
or
jbe
int
jp
outsb
jb
lcall
int3
or
jecxz
push
les
mov
mov
mov
and
push
leave
testb
sahf
and
mov
loop
lret
sbb
ljmp
jne
sarb
imul
sbbl
enter
rclb
jnp
divb
fwait
pusha
mov
fcoms
mov
pusha
in
test
scas
in
sbb
in
mov
out
mov
xor
sahf
jp
mov
sbb
push
or
ljmp
out
dec
mov
out
hlt
cmovo
jbe
lcall
mov
add
push
les
das
mov
jl
inc
jo
add
sahf
aam
inc
js
stc
and
js
ja
mov
leave
or
jne
lahf
cli
mov
xchg
add
pop
dec
jmp
xor
cmp
mov
stc
mov
adc
mov
push
mov
shrl
aad
pushf
or
aam
and
jl
xor
test
mov
inc
xlat
adc
inc
add
adc
andb
and
mov
cmp
int
xorl
xchg
jo
sub
mov
clc
and
sti
dec
push
adc
lret
cmp
xchg
ds
fldenv
inc
pop
xor
adc
mov
call
aaa
sbb
or
icebp
movsl
leave
jbe
nop
cmc
mov
fiadds
or
mov
mov
jb
push
mov
std
movb
push
lds
data16
jns
dec
jmp
pop
fisttpll
inc
push
jns
mov
cli
jp
pop
lahf
mov
add
sub
sahf
adcl
inc
and
popf
and
push
mov
mov
inc
push
jl
xor
insb
je
ljmp
repnz
notl
push
or
in
jns
push
clc
inc
jbe
jno
imulb
xor
pusha
pushf
adc
lds
scas
xchg
sub
jecxz
add
mov
dec
adc
mov
xchg
jb
fiadds
mov
orb
in
jg
mov
rcll
sub
fxch
loop
enter
icebp
int3
adc
mov
inc
mov
dec
arpl
sub
pop
push
cmp
es
inc
rorl
mov
jge
sbb
and
cmc
or
out
sub
or
xchg
dec
xchg
cmp
imul
sbbl
inc
pop
subl
dec
push
orb
sbbl
mov
xor
or
xchg
lahf
or
mov
xor
sub
pushf
add
out
push
jo
inc
xchg
arpl
or
cmpsl
popf
pop
loopne
sbb
dec
dec
mov
xchg
dec
test
jmp
sub
pop
mov
out
sbb
jns
adc
data16
imul
es
push
cmp
lods
mov
mov
sbb
jecxz
jecxz
jmp
xor
and
jns
mov
lods
leave
xchg
mov
lret
iret
movsl
subl
repz
jmp
roll
push
in
jmp
movsl
loope
jno
add
mov
mov
shrl
iret
mov
and
mov
lods
or
dec
dec
enter
mov
push
leave
lods
mul
out
sahf
push
or
sub
ljmp
pop
loop
add
dec
jmp
lock
inc
jge
mov
repz
dec
pop
sub
icebp
sti
mov
xchg
bound
shlb
mov
jbe
call
pop
xchg
je
jne
cmc
push
decb
insl
mov
xchg
and
adc
inc
negb
stos
pushf
mov
ljmp
imul
jne
sarb
xor
add
jmp
mov
sub
rol
xchg
and
jl
out
jbe
mov
scas
inc
das
leave
pusha
push
mov
ret
fdivl
insl
aad
rolb
mov
out
orb
mov
or
xlat
inc
mov
fmuls
test
hlt
lock
movsl
jne
and
fwait
sti
push
in
and
cmp
in
inc
enter
lea
mov
jae
and
pushf
scas
jns
out
sub
sarl
adc
xchg
iret
or
shrb
ret
jmp
cmpsl
cmc
loopne
pop
push
adc
inc
imul
adc
cmpb
jns
sub
out
loop
insb
add
inc
cmp
mov
dec
xchg
xlat
jbe
sbbb
lret
pop
add
jg
mov
inc
shrl
mov
cs
lods
pop
in
data16
add
sbb
scas
lock
sbb
data16
cmpsb
push
jno
cmp
adc
rcll
inc
or
mov
outsb
hlt
sti
lods
mov
and
xchg
mov
pop
mov
sbb
xchg
push
lea
sbb
pop
pop
dec
repnz
dec
adc
mov
inc
mov
jbe
cmp
mov
inc
repz
mov
fwait
mov
push
test
fs
orb
lret
int3
loope
rclb
scas
pop
imul
pop
mov
xchg
push
xor
push
into
jb
int3
xchg
sub
sbb
aam
or
dec
xchg
pop
pop
std
loopne
mov
jmp
ret
fcomip
mov
cltd
xchg
mov
sub
stc
std
sub
into
fucom
rcl
jecxz
js
pop
jno
movsl
xor
fists
or
ds
dec
dec
test
lret
inc
stos
leave
jmp
shlb
jle
mov
push
inc
sahf
dec
sbb
push
inc
push
mov
subl
mov
cmp
xor
jo
loop
jns
mov
or
dec
mov
test
scas
cld
bound
jle
mov
sbb
test
movsl
cmp
fisubs
dec
or
mov
movsb
dec
sub
and
loopne
sub
sbbl
push
xor
xchg
scas
test
push
mov
push
addr16
dec
mov
pop
rcrb
loope
mov
cs
mull
or
mov
adc
test
inc
inc
shrb
or
gs
test
bound
inc
sbb
push
and
iret
cmc
lods
push
mov
xor
sbb
gs
cld
out
adc
es
out
dec
leave
sti
pushf
mov
mov
jg
push
int
pop
fisubrl
mov
out
dec
into
sbb
sbb
xor
mov
xchg
mov
jno
loop
fnclex
nop
scas
xor
mov
pop
push
dec
loop
or
and
insl
gs
xchg
cmpsl
jnp
push
cmp
faddl
pop
or
pop
imul
dec
xrelease
jmp
iret
xor
adc
leave
shrb
jecxz
push
adc
enter
ja
cmp
cld
mov
out
cmp
fstpt
pop
into
xlat
jl
sbb
enter
aad
jno
xchg
fcmovnb
popf
push
push
lods
or
in
loope
fdivr
mov
jge
pop
cmpsl
mov
arpl
xchg
jmp
pop
xchg
cs
inc
mov
xor
scas
and
stc
es
test
notb
test
dec
data16
shll
pop
mov
gs
mov
rep
js
lret
pusha
imul
push
sahf
scas
add
out
test
sbb
fistpll
jp
repz
sub
iret
cmpsl
js
scas
aaa
pusha
test
out
inc
rcll
mov
xor
and
sbb
xchg
push
cmpsw
jle
jmp
add
nop
jae
scas
roll
xchg
adc
cwtl
jp
addr16
push
cmpsl
cmpsl
aas
out
mov
les
fadds
cmp
insb
mov
movsb
cmpsl
cmc
out
ljmp
jecxz
test
stc
fcoml
or
or
bound
push
dec
adc
in
movsl
outsb
stos
jnp
mov
mov
xchg
fdivr
insl
xchg
cld
add
add
fimuls
push
imul
out
lea
mov
xlat
sub
jbe
cld
jne
outsb
lret
dec
sub
lods
cmp
inc
adc
mov
imul
mov
aas
cmpsb
fdivrs
les
add
mov
dec
cmp
retw
mov
dec
sbb
cltd
push
jp
insl
cmp
int3
outsl
lcall
xor
mov
or
xchg
in
cmp
mov
imul
test
test
mov
lea
mov
testl
pop
xchg
nop
int3
je
fldt
fldt
aaa
cmp
dec
inc
xchg
rorl
movsl
pop
mov
rcrb
jp
cmp
pop
pop
aam
icebp
shll
shrl
dec
fmull
sbb
or
push
cmp
leave
sbb
insb
ret
cmp
xchg
pusha
pop
in
sbb
mov
mov
inc
punpckldq
xchg
inc
push
inc
mov
out
or
xlat
mov
jmp
test
stos
sti
mov
ja
fs
sub
loop
inc
int
dec
cmpsl
add
xorb
leave
addr16
sbb
addr16
jmp
lock
in
not
mov
xlat
mov
iret
das
loopne
stos
mov
xchg
jcxz
pop
xchg
mov
pop
sub
ss
mov
sub
jbe
aam
xchg
push
and
push
je
inc
fucomip
push
pop
iret
out
and
bound
lds
lods
adc
nop
popa
mov
adc
sub
pop
push
mov
je
aaa
addb
and
ljmp
in
in
cmp
cmpl
adc
push
or
lds
repnz
mov
push
sahf
adc
mov
cld
rcrb
or
cmp
es
or
jecxz
sbb
mov
xchg
cmpl
xchg
rclb
subb
jmp
xor
mov
jb
cmp
clc
jp
or
sti
jp
jne
iret
pop
push
in
xchg
lcall
repnz
test
insl
inc
push
push
sbb
bound
sbb
leave
leave
mov
push
mull
sub
sbb
sbb
add
push
mov
push
iret
js
fistps
xchg
outsl
xchg
jae
or
add
test
int3
lea
iret
push
pop
jo
leave
xchg
mov
ja
data16
repnz
hlt
fs
test
push
pop
repz
mov
xchg
in
mov
call
jl
fisubrl
cmp
icebp
shl
add
dec
xor
mov
rcll
cmc
mov
scas
testb
inc
popf
pushf
lea
in
pusha
sub
test
int3
mov
and
dec
mov
in
xchg
mov
mov
xlat
push
xchg
and
xor
xchg
aad
test
add
fcomps
mov
repnz
dec
xchg
aas
cmp
ljmp
dec
xor
lock
lcall
movsl
inc
sbb
arpl
cmp
rcll
sub
enter
xor
daa
test
xor
pop
jno
push
mov
push
xchg
sbb
push
cmp
pop
adc
imull
mov
mov
push
and
outsl
bound
lods
popa
lahf
mov
imul
xor
loopne
mov
sbb
jo
push
xor
fistpll
jge
mov
mov
pop
pop
cld
xor
fsubrs
push
fcomp
mov
xor
mov
pop
cmp
jmp
loopne
in
inc
inc
imul
jnp
xlat
xor
mov
repz
roll
xor
ret
insb
sub
test
sbb
frstors
addr16
testl
rcll
aad
stc
fsubrl
pushf
fisubrl
addl
jno
cltd
dec
js
jecxz
std
xchg
ret
lahf
pop
lret
mov
inc
loope
fwait
or
stos
push
jp
int3
repz
inc
cmpsl
mov
imul
cmp
in
and
jb
out
mov
ja
lahf
fwait
outsl
add
dec
xchg
out
adcl
out
push
add
mov
or
inc
pop
mov
mov
jns
pop
insb
ror
shrb
sub
jns
imulb
in
movsb
notb
rcl
outsl
roll
lret
test
dec
mov
adc
dec
cmp
fcoms
ds
es
outsl
mov
cltd
andl
or
cli
or
aaa
lret
pop
out
pop
das
jae
jne
or
push
xchg
inc
pushf
rcrb
leave
cmp
xor
iret
cmp
push
mov
mov
and
ss
xor
mov
xchg
jmp
cs
lret
addl
loope
mov
outsl
sahf
cmp
fsub
adcb
sub
cli
in
push
push
sarl
mov
lcall
ret
addr16
pop
cmpsl
icebp
and
fdivp
add
push
lds
sbb
mov
xchg
pop
cmp
jle
adc
jo
or
loop
jno
ret
cmp
jl
dec
int3
insb
mov
bound
jae
adc
dec
and
pop
xchg
or
test
mov
out
cmpsb
sahf
jmp
clc
repnz
add
inc
pop
dec
sbb
movsb
je
push
xor
bound
inc
pop
addl
addr16
jbe
sub
cmpsb
leave
notl
push
dec
cmp
push
test
fstl
rol
mov
fldenv
mov
dec
add
sbb
and
lods
inc
cmp
jl
scas
mov
loop
push
lock
push
out
test
push
mov
out
cmpsl
xchg
idiv
popf
dec
jg
jl
mov
push
mov
movsb
fistl
adc
call
adc
dec
or
mov
dec
push
pusha
out
popf
xchg
cmp
push
pop
cmp
notb
outsb
gs
les
fcoml
icebp
lods
add
repz
pop
mov
or
xchg
in
inc
cmp
sub
xlat
pop
jbe
mov
push
cmp
sub
and
sarb
adc
inc
sbb
cmpsl
jmp
mov
pop
out
or
sbb
mov
push
imul
js
pop
and
mov
popf
cltd
push
mov
out
cltd
inc
xor
push
adc
lcall
hlt
jnp
rolb
xor
mov
and
mov
jp
fcoml
mov
test
add
dec
fs
popa
or
sub
pop
sub
cmp
or
sub
push
push
rcl
dec
mov
cmovb
mov
das
sub
dec
adc
in
mov
fsubl
scas
xchg
call
js
rclb
pop
stos
xor
in
cwtl
push
sub
sub
cmp
mov
mov
mov
outsb
jg
adcb
add
add
je,pt
jae
sbb
inc
or
adc
or
add
das
addr16
test
loopne
xor
stos
and
pop
push
or
mov
add
push
or
icebp
mov
jb
mov
mov
mov
cmp
mov
jp
sub
jmp
je
and
int3
rcrl
test
je
je
test
aam
das
jnp
adc
pop
imul
rorl
addb
idivb
inc
dec
lock
lret
push
iret
jle
mov
cmp
inc
inc
mov
inc
jle
ret
imul
xor
xor
shll
ja
mov
adc
jno
dec
push
fwait
push
insl
movsb
xchg
ljmp
pop
das
mov
stc
push
std
jbe
push
pop
call
pop
sbb
mov
xor
cs
lods
gs
sub
imul
mov
fistl
decb
xchg
mov
aad
jl
sbbl
pusha
insl
stos
pop
f2xm1
inc
fidivs
leave
mov
push
jmp
out
mov
mov
and
lods
jb
fsubr
mov
pop
aaa
cmpsb
popf
icebp
loopne
pop
outsb
lret
or
sarl
push
or
aam
dec
test
inc
enter
not
xchg
and
cmpsl
sub
add
inc
or
cmc
testb
or
and
pop
jno
lret
in
cmpsl
mov
xchg
test
enter
or
xor
adc
pop
cmp
out
dec
pop
lock
sbb
in
fdivrp
fcomi
lods
xor
adc
sub
dec
popa
mov
cmpsb
fcoml
int
cmc
loop,pt
jl
cmc
dec
jae
mov
arpl
stos
scas
and
daa
sti
and
sti
mov
inc
fwait
imul
xor
and
push
sbb
mov
push
out
xorl
andb
jg
push
lods
xchg
decl
sub
mov
cmp
pop
fldenv
jbe
mov
xchg
es
icebp
mov
leave
pop
cmpsl
xor
sub
cmp
pop
icebp
aaa
sahf
pop
adc
lret
mov
push
mov
cs
scas
insl
hlt
movsb
jns
out
fists
add
fwait
popa
dec
fsubrl
repnz
loopne
arpl
fsubr
adc
cltd
aam
push
add
add
cmpsl
sub
xor
inc
push
sub
aas
mov
jno
aad
mov
clc
add
sub
pop
fcomp
iret
std
test
in
mov
mov
jp
lock
mov
sub
imul
ficoms
insb
cmp
add
inc
leave
sbb
jmp
loopne
ds
bound
out
std
mov
aad
or
sub
cs
cld
mov
out
add
ret
mov
shlb
loop
in
cmp
sub
adc
scas
imul
inc
add
xor
jbe
xchg
and
mov
enter
add
mov
add
pusha
out
mov
mov
push
adc
or
mov
pop
jnp
or
push
sbb
pop
pop
fcmove
push
mov
cwtl
movhps
mov
mov
cs
xchg
xor
int
popa
int
shlb
dec
mov
orl
push
adc
jle
ffreep
jne
pop
or
bound
sbb
pop
insb
fwait
sbb
lret
push
arpl
test
mov
adc
mov
ljmp
pop
push
cmpsb
jb
stos
in
movsl
jne
jo
mov
and
incb
data16
mov
sbb
mov
ljmp
xor
fs
cld
aad
pushf
lcall
mov
cmp
cmp
push
sbb
mov
je
cli
div
sub
sti
loop
adc
mov
shrl
and
or
iret
rorb
pop
mov
in
cmp
outsl
mov
mov
inc
inc
repnz
mov
ficompl
hlt
jge
pop
or
ja
test
pop
xor
call
mov
mov
and
imul
sbb
fnstenv
repnz
pusha
iret
dec
subl
mov
or
fs
push
stos
pop
dec
test
outsb
mov
mov
stos
outsl
out
add
pop
mov
stos
aam
cmpl
fucomip
mov
hlt
enter
cmp
lods
jne
pop
push
xor
mov
cmpsl
mov
mov
das
push
pop
add
push
aas
lret
cmp
and
mov
jg
insb
mov
cli
nop
pop
cmpsl
add
adc
loope
pop
movsb
rorb
xchg
pusha
dec
pop
mov
insl
dec
dec
lods
rolb
ljmp
mov
inc
in
data16
xor
xchg
mov
push
mov
xor
cmpsl
out
sub
pop
lods
pop
loope
push
jae
repnz
mov
dec
xor
stc
out
and
mov
mov
jge
shl
xor
mov
fmuls
jns
repz
mov
inc
loop
pop
xchg
out
pop
or
fst
mov
in
pusha
inc
rol
cltd
lea
adc
dec
push
outsb
cmp
sub
faddl
enter
and
pop
jl
adc
test
sbb
repnz
int
sahf
dec
sub
pop
jp
gs
cltd
call
or
push
sub
cmpsl
pop
in
subb
call
aam
inc
mov
adc
inc
pop
int3
insb
mov
push
daa
sbbl
xlat
add
cltd
std
and
mov
cld
jge
jge
shll
jg
insb
push
adcl
cmp
xchg
mov
mov
and
mov
les
jne
jp
shll
dec
cli
stos
and
sub
mov
or
add
inc
movsb
and
mov
push
fbstp
outsl
addr16
pop
mov
mov
adc
xchg
negb
mov
inc
mov
clc
fcomps
pop
jo
jecxz
es
rcl
adc
pop
mov
adc
clc
mov
mov
rcr
insb
xchg
mov
adc
mov
dec
push
sub
add
repz
lret
mov
pop
add
cmpsb
mov
sbb
insb
or
jb
loop
dec
jmp
div
sub
xlat
mov
les
pop
stos
ret
adc
pop
insb
aaa
cwtl
xchg
and
cmpsl
add
dec
inc
or
push
xor
aaa
sbbl
arpl
push
mov
pusha
je
nop
aaa
repz
daa
inc
cltd
jle
stos
mov
jne
mov
dec
jle
mov
test
inc
xchg
pop
mov
sub
mov
cli
mov
and
test
lret
add
or
adc
stos
outsb
sbb
sti
sub
in
aaa
mull
outsb
jbe
inc
and
mov
xor
push
sbb
pop
fstpt
inc
cmpsb
stos
xchg
mov
js
sub
movsl
mov
mov
jae
cmp
sub
xchg
ja
cwtl
data16
dec
cmp
mov
fstpl
std
push
mov
mov
xchg
cmp
xor
lods
sbb
clc
and
jb
jp
repz
wbinvd
sub
mov
pushf
mov
insb
insl
fs
adc
or
fs
mov
cmp
fs
mov
cltd
cmpsb
aaa
ret
dec
mov
imul
imul
jno
push
or
push
xchg
pop
sbb
xchg
mov
push
mov
and
add
push
outsl
or
shlb
pop
mov
mov
insb
pop
mov
sti
xorl
xor
fs
mov
mov
push
movsl
sbb
sti
das
imul
and
mov
cld
inc
jns
dec
dec
test
mov
cmpsb
iret
jmp
insb
rolb
popa
mov
mov
ja
int3
jg
dec
movsb
cmovbe
pop
fsubrs
pop
out
scas
mov
xchg
insb
add
dec
mov
xor
inc
fnstenv
and
jns
es
sbb
pusha
cmp
rcr
xlat
push
js
movsb
mov
mov
mov
in
cmp
adc
or
lods
dec
shlb
fs
cmp
cmp
mov
stos
cmc
cs
jp
sub
popa
jne
fdivl
xchg
pop
adc
jmp
add
les
mov
fs
cs
cmp
fldcw
sub
xor
out
outsb
mov
push
pop
add
xchg
imul
pop
pcmpeqb
and
mov
push
je
out
xlat
out
pop
sub
jnp
int
imul
sub
ja
push
push
shl
sub
and
mov
mov
popa
fstl
bnd
imul
icebp
pop
pushf
cmc
push
decb
call
fbld
out
stos
or
aad
sbb
imul
into
popf
dec
notl
and
ret
add
ret
push
clc
xchg
push
rcrb
out
push
dec
in
or
std
outsl
sub
inc
pop
lcall
idivb
jae
ja
pop
xchg
sti
or
fimuls
push
lret
in
mov
stos
scas
xor
push
mov
rcr
cwtl
mov
cmp
leave
jae
push
mov
or
mov
add
push
ds
mov
lds
test
sti
dec
decl
jmp
adcb
add
inc
lea
jo
sbb
add
cli
mov
ret
jle
scas
push
adc
mov
aaa
lcall
push
mov
rolb
xor
add
jno
sub
aam
xchg
into
jns
jmp
lods
xchg
jne
mov
aam
addr16
dec
ret
or
push
add
cli
shrl
fwait
adc
mov
push
pop
bound
lods
into
xchg
cmp
inc
dec
call
sbbb
sbb
sarl
test
jge
idiv
xor
xchg
lret
iret
jle
loope
and
sub
push
or
mov
cmp
sbb
int
daa
scas
sub
ret
sti
data16
mov
jl
mov
aas
movl
int
mov
push
hlt
fcmovnu
leave
xor
shll
or
shrb
outsb
xchg
xor
push
push
in
pushf
inc
xor
sub
lds
in
cmpsl
dec
dec
dec
push
jnp
inc
lcall
testl
cld
xor
pop
inc
and
inc
cmp
jge
lock
inc
and
mov
fcmovu
js
ja
clc
inc
xchg
popa
lods
xor
push
cmp
push
lret
adc
emms
inc
push
mov
push
cli
ret
mov
das
sahf
mov
aad
ret
inc
lret
stos
addb
shl
adc
test
sbbb
jae
aad
stos
xor
mov
pop
push
mov
movsb
push
dec
ret
iret
out
push
pop
gs
ja
ret
icebp
test
xor
adc
and
and
mov
mov
dec
sbb
fwait
cmp
dec
push
test
out
ds
and
test
sbb
push
aas
shll
outsl
mov
aad
mov
stos
push
out
inc
mov
jae
enter
test
or
add
cld
ja
mov
pop
ja
pop
add
jbe
xor
aad
addr16
mov
hlt
in
xchg
xor
push
cmovae
xor
xchg
mov
das
adc
test
xor
push
xchg
and
pusha
cmpsl
jo
loop
pop
imul
mov
pop
fists
xchg
iret
fwait
aas
inc
pop
mov
int
mov
insl
and
decl
cmp
mov
insb
and
ret
xchg
test
push
arpl
sti
sub
rcll
jge
inc
xchg
aad
mov
stc
push
jne
je
dec
and
xor
bound
and
mov
xchg
push
mov
pop
int3
adc
inc
shll
lods
rorb
xchg
movsb
push
out
xchg
jp
in
hlt
or
loopne
fstps
shrl
cmp
lods
aam
xchg
outsb
nop
dec
int
sbb
jno
idivl
or
jne
ret
jmp
setno
dec
fcomip
je
std
insl
push
dec
jae
mov
push
aas
or
bound
test
or
cmp
push
call
mov
psadbw
scas
cmp
int
or
xchg
mov
std
xchg
or
push
mov
and
std
mov
std
dec
cmp
dec
mov
adc
mov
punpckhdq
js
sti
cld
add
adc
push
cmpl
sti
push
cmp
jge
mov
movsb
mov
popa
pop
jno
fbstp
ljmp
push
ljmp
test
aaa
jmp
mov
mov
push
jnp
out
push
stc
sub
add
in
icebp
jnp
imul
and
fs
fs
lods
sub
and
cmp
cmc
lret
lods
negl
iret
jmp
in
inc
cmp
mov
cltd
repz
aam
sti
ds
jo
push
leave
sbb
pop
mov
adc
sbb
jns
mov
repz
loopne
cmp
outsb
ds
out
fwait
sub
xchg
push
mov
xor
cwtl
or
push
insb
xchg
adc
ret
shll
push
fsts
sub
mov
mov
or
clc
mov
fadds
push
adc
adc
mov
adc
push
sub
stos
cmp
mov
inc
out
pop
jecxz
es
dec
sub
cmpsb
imul
mov
or
data16
adc
and
leave
fmull
pushf
or
inc
arpl
cwtl
mov
cmc
mov
mov
sti
cwtl
hlt
fs
mov
sbb
pop
push
bound
inc
fsts
xlat
xor
daa
adc
lcall
bound
outsb
sbb
cmp
lods
push
pop
add
push
cld
mov
insl
loopne
outsl
sub
insl
jmp
push
inc
sbb
das
xchg
cmp
cmp
ror
mov
ret
xor
push
pop
imul
push
scas
bound
mov
and
cwtl
jo
lods
ret
mov
fs
lds
adc
lods
roll
stc
in
cmpsb
decl
repnz
push
movb
xchg
sti
and
in
mov
outsl
xchg
nop
test
out
add
xlat
mov
ljmp
jnp
xor
xchg
add
adc
jo
jp
ljmp
sbb
out
push
dec
pop
fcomps
and
js
push
out
movsb
das
outsb
pop
lahf
icebp
mov
push
mov
sub
xchg
mov
fidivs
pushf
inc
dec
jg
xchg
in
fsubrp
loop
mov
in
inc
js
adc
nop
adc
push
xor
imul
ss
fcomp
pop
jle
adc
mov
out
fxch
cmp
adc
mov
dec
aaa
lds
add
inc
pop
mov
mov
push
imul
xlat
ret
pop
xor
dec
inc
in
mov
aas
mov
das
lods
mov
sbb
pop
je
test
jmp
loopne
adc
test
imul
and
fisttps
sar
sub
mov
or
aas
sarb
or
or
fldt
dec
imul
ja
call
or
out
xchg
lods
or
int
mov
mov
inc
add
cld
inc
add
jp
popa
sub
test
sub
push
cmpsl
test
mov
pslld
inc
inc
mov
xor
daa
sub
imul
andl
js
jno
mov
loop
or
popf
push
rcrb
sub
or
lods
cld
jg
iret
cmp
add
and
das
xor
pusha
cmp
inc
loope
daa
push
in
popa
mov
ret
adc
mov
leave
dec
mov
orb
xchg
adc
jnp
mov
adc
dec
xor
lret
sbb
xchg
mov
dec
push
dec
jmp
jns
sti
ja
les
aad
or
lret
in
xor
test
sbb
aam
pop
sbbl
sbb
scas
nop
movsl
push
sbb
cmc
gs
and
cli
or
clc
push
mov
push
idiv
test
cwtl
test
in
pop
jl
out
jmp
lds
idivb
das
jle
ljmp
add
test
jg
dec
cmp
lock
or
xchg
ljmp
xchg
out
mov
loopne
xchg
orl
rcl
inc
pop
je
pop
outsl
notl
and
leave
jae
dec
fwait
jnp
jl
adc
mov
es
push
adc
mov
fsubl
hlt
pop
xchg
mov
pop
sti
insb
pop
ret
leave
imul
dec
mov
gs
xchg
xchg
adc
test
dec
xor
and
sti
dec
push
in
add
sub
leave
add
adc
mov
dec
xorl
jnp
sub
jge
shrb
xchg
add
or
outsl
mov
xor
out
insb
push
add
lods
lods
pop
and
adc
mov
inc
clc
mov
iret
push
std
cli
inc
mov
xchg
mov
andl
jno
pop
adc
push
ja
dec
cmpsb
mov
jno
mov
lcall
bnd
adc
fimull
cmc
mov
cmpsb
mov
out
test
cmp
push
mov
cmpsl
cmp
orl
pushf
pusha
ljmp
loop
or
push
and
mov
jl
mov
shrb
je
lods
add
or
inc
jbe
pop
or
push
call
xchg
stos
loopne
mov
jge
push
adc
mov
jb
mov
cwtl
in
psubd
inc
and
mov
dec
jnp
repz
inc
outsl
notl
cmp
and
stos
iret
adc
mov
xchg
popa
push
sub
xor
jns
vsubps
mov
jae
dec
adc
lcall
bound
sub
stos
mov
push
pop
push
or
cmp
pop
or
ret
arpl
and
xchg
dec
inc
scas
cs
jge
daa
fwait
xor
xor
maxps
js
rcrl
sarb
fcompl
pop
adc
rorb
jge
int
je
inc
pop
pushf
mov
out
mov
xchg
and
ret
and
sub
mov
mov
in
xlat
xchg
mov
je
daa
loop
sbb
push
clc
push
sbb
addl
adc
rorb
scas
fldcw
frstor
sbb
xchg
call
inc
mov
jl
fistpl
push
xchg
lea
int3
mov
mov
lea
orb
sar
js
ficompl
push
xor
jl
cld
inc
dec
fs
push
fwait
sbb
jns
leave
lds
shrl
les
push
into
in
push
lods
add
repz
dec
ljmp
into
inc
into
imul
xchg
push
jb
xacquire
out
ret
mov
js
xor
and
loopne
jp
test
fidivl
sub
mov
inc
aaa
xchg
xor
in
sbb
push
loop
sbbl
xrelease
mov
jnp
jmp
jecxz
mov
xchg
mov
ja
jo
outsl
rol
inc
or
jno
add
jae
mov
scas
sub
xchg
push
das
addr16
xchg
in
xchg
sahf
lret
xchg
mov
or
dec
fistl
cmp
and
cli
fsubrp
lock
sub
movsl
sub
std
call
dec
fsts
inc
push
rorb
daa
data16
int3
insl
movsl
pusha
outsl
lods
rorl
mov
in
push
shlb
pop
mov
int
mov
aas
sahf
sbb
mov
cmc
out
bndstx
lret
ret
xor
imul
outsl
stos
cwtl
sbb
mov
add
push
nop
and
push
jmp
jno
mov
mov
ds
xchg
cltd
cwtl
sub
fisubrs
cmc
adc
clc
add
sbb
jns
pop
cmp
data16
shl
aaa
push
push
ret
rorl
nop
and
out
push
jbe
mov
adc
xor
or
jl
pop
cmpsl
inc
dec
inc
or
cmpsb
mov
xor
addr16
or
pop
lea
lret
fcmovnbe
xor
int
xchg
sbb
mov
rep
ficomps
shrl
sbb
jo
lds
xor
out
mov
cld
call
rcr
pop
dec
jecxz
bound
xchg
andl
mov
lret
pusha
sub
sbb
cli
cld
push
xchg
push
jle
test
aam
ret
repz
imul
cmp
cmpsl
inc
shr
ret
fistpl
ret
les
mov
sbb
mov
stos
ljmp
in
iret
add
movl
movl
pop
or
jmp
mov
shl
pop
aam
into
mov
stos
xlat
in
xchg
jle
or
lahf
arpl
leave
mov
pop
push
mov
mov
lods
mov
mov
pop
and
xchg
repz
sub
adc
xor
push
add
iret
mov
or
cltd
xchg
mov
mov
mov
sbb
stos
lret
push
xchg
dec
inc
fmul
aad
jle
aaa
outsl
or
sbb
mov
aad
inc
aad
ljmp
cmp
insl
cmpsb
jmp
and
adc
bound
jns
stc
xchg
movl
mov
pop
jl
mov
fistps
inc
lods
jl
mov
out
sbb
lea
mov
or
and
ss
aas
inc
scas
sbb
scas
out
fimuls
je
rcl
cmpsl
xorb
ljmp
imul
pop
test
jmp
jbe
fs
xchg
mov
in
scas
daa
add
mov
fnop
pop
dec
and
push
stos
adc
push
pop
push
lods
enter
mov
clc
add
xor
frstor
dec
push
pushf
mov
or
or
lods
je
outsb
sbb
shll
xchg
out
sbb
jo
mov
mov
test
jle
sub
cmpsb
movsb
jne
dec
lods
hlt
out
jge
in
mov
cmpsl
test
fisubrl
clc
adc
nop
pushf
sbb
or
add
sub
test
in
out
cmp
push
jmp
inc
pushl
lcall
inc
mov
xchg
or
pop
dec
and
or
pusha
loopne
lea
sbb
adc
or
in
mov
std
repz
scas
jle
stc
mov
pop
movsb
movsb
out
and
sbb
dec
mov
mov
mov
popf
xchg
jle
or
cmp
mov
lds
pop
or
and
xchg
jne
stc
int3
frstor
jbe
scas
push
fcomps
mov
mov
jge
rcrl
aaa
mov
cmp
hlt
cmc
in
push
popa
lret
in
adc
jo
xor
dec
inc
jge
in
shll
insb
fwait
nop
mov
cmc
enter
in
add
ss
mov
adc
pop
rolb
dec
roll
sar
jp
mov
enter
sub
gs
add
xchg
mov
leave
mov
pop
test
push
sub
cwtl
or
sbb
mov
mov
sti
cmp
jo
addr16
and
dec
imul
and
mov
pop
out
jle
adc
daa
and
pop
ds
adc
inc
jno
out
adc
sub
push
adc
popf
xchg
leave
hlt
pusha
mov
mov
mov
push
sahf
fistl
or
out
repnz
inc
xlat
jnp
pop
faddl
aam
rcl
adc
ret
push
mov
stos
mulb
fisttps
add
aas
pop
bound
pop
ss
xor
ficompl
mov
es
dec
or
test
call
inc
pop
sbb
pop
stos
les
fcoms
sbb
mov
adc
jge
stos
xor
or
jge
icebp
xchg
dec
xor
xchg
add
pop
pop
pusha
jo
push
mov
mov
xor
addb
cmp
inc
mov
xor
outsb
icebp
iret
enter
adc
mov
testl
fwait
inc
mov
cld
jns
push
pushf
or
lods
mov
mov
mov
roll
icebp
lock
xlat
out
cmp
inc
push
ds
add
mov
fisttpll
mov
push
dec
sbb
pop
mov
mov
lods
xor
jmp
or
std
daa
mov
pop
adc
push
loop
icebp
mov
dec
outsl
ds
clc
xchg
add
jg
lahf
cmp
mov
xchg
mov
ljmp
aam
push
outsb
jno
mov
adc
popf
xor
rolb
xlat
or
imul
fcmovu
jecxz
pop
pop
cmpsl
ljmp
xor
jp
xchg
jne
ficompl
add
pop
lahf
or
mov
adc
push
sub
ljmp
insl
ficomps
scas
fstps
dec
push
test
dec
mov
pop
and
ljmp
lea
test
push
xchg
out
cmp
xchg
and
mov
loop
or
inc
cmp
dec
out
sbb
test
fdivl
pop
iret
mov
pop
jnp
test
aad
jg
add
sub
sbb
xor
xchg
rcl
dec
clc
cld
ja
sub
popf
pop
jp
add
insb
cmp
data16
insl
cwtl
push
push
mov
push
popa
or
xchg
xchg
mov
lcall
push
sub
ja
scas
pop
je
or
mov
mov
sub
or
js
dec
out
movsl
aad
add
or
cmp
sub
cmpl
cltd
fnstsw
inc
dec
sti
lret
cmp
hlt
data16
push
fistl
je
inc
cmp
dec
inc
ds
orb
jno
fnstenv
or
ss
pusha
mov
pop
push
sub
xor
sti
inc
push
call
loope
push
mov
das
dec
mov
into
test
fdivs
inc
push
xor
scas
and
pop
jmp
cli
jae
add
imul
ja
pop
cli
jns
movsl
scas
and
movsb
out
int
aaa
push
jl
fwait
add
xchg
pop
das
inc
psubw
cmp
out
lgs
aam
clc
and
loope
lret
adc
xor
adc
test
pop
das
repz
enter
std
jg
pop
movsl
inc
mov
inc
push
inc
jmp
popa
popf
jp
cmp
sahf
mov
push
lock
ljmp
lret
cmc
adc
push
es
sub
dec
hlt
fdivrs
cmp
or
jbe
int
cmp
jns
jmp
int
inc
sbb
ficompl
test
ret
jmp
addr16
rcrb
pop
and
cmpsl
fsubl
and
jle
and
sub
xchg
sbb
jne
stos
sub
outsb
sbb
scas
jge
rorl
sbb
dec
stos
andb
popf
xchg
cwtl
ret
mov
xchg
or
scas
cmp
or
sub
aaa
inc
cmp
fistpl
outsb
sbbl
fildl
push
add
std
jg
xchg
addr16
stc
xchg
jb
ljmp
adc
imulb
loope
xor
sub
jne
xchg
jno
comiss
in
cmp
dec
mov
cmc
shll
jge
fs
mov
stc
lock
mov
aas
inc
xchg
icebp
shld
popf
lcall
jmp
shlb
dec
sbb
fstps
pop
repz
push
jo
add
cmp
jg
fisttps
pop
adcb
andb
mov
and
out
pop
cltd
inc
mov
sbb
xchg
push
rcrl
mov
mov
scas
sub
push
xchg
mov
add
and
mov
or
jb
and
cmc
inc
pushf
cli
aaa
stc
orb
add
mov
rolb
inc
stos
adc
popf
push
xchg
icebp
xchg
xor
and
stc
ss
pop
lods
pushf
xchg
bound
aas
inc
stc
sub
or
mov
add
lods
mov
pop
aaa
pop
insl
dec
arpl
sbb
rcl
mov
pop
arpl
fimuls
sbb
testb
ljmp
cmpsl
xor
fld
sar
lods
jb
std
outsl
imul
lds
xchg
cvtdq2ps
mov
fiadds
pushl
dec
in
pop
pusha
and
les
in
ret
push
adc
inc
mov
adc
icebp
dec
xchg
mov
repz
and
mov
out
sub
fndisi(8087
pop
push
xchg
jns
xchg
cmp
jns
scas
shlb
je
in
jmp
sbb
and
movsw
pop
cmpsl
in
sub
mov
stc
mov
mov
xor
or
adc
mov
mov
mov
sbbb
mov
or
pop
aad
mov
push
icebp
sub
popf
add
out
dec
or
lret
lret
xchg
lahf
loope
inc
andl
jmp
das
sub
jnp
or
ret
pop
sub
push
movsl
pop
mov
xlat
jns
pop
sbb
xor
sub
add
das
out
idivl
repnz
push
subb
rorb
addr16
stos
scas
int3
je
mov
mov
aam
sbb
out
jbe
pushf
pop
pop
lahf
add
dec
mov
add
jb
or
sti
dec
sbb
and
xor
pop
lret
sbb
mov
or
call
jns
mov
popa
pop
push
loope
loope
movsb
push
mov
loope
cmpsl
lea
adc
pop
or
mov
inc
xor
in
jnp
sbb
sub
mov
push
imul
or
push
xor
stos
jp
dec
out
ss
into
xchg
fwait
mov
xchg
scas
cmp
inc
sti
xchg
es
inc
add
add
sub
mov
and
sub
push
xchg
into
xchg
repz
adc
in
cmp
xor
lret
pop
cs
sbb
add
mov
inc
sub
in
inc
movsl
xor
pop
pop
lea
imull
lea
cmp
stos
dec
icebp
int3
sbb
das
out
pushf
iret
jmp
aaa
in
pop
movq
sbb
jle
push
lret
pop
idiv
dec
mov
sahf
cli
pushf
and
addb
int3
popaw
mov
pop
dec
lods
aaa
int
flds
shrb
dec
cwtl
loope
lock
mov
jbe
jne
lcall
push
rclb
clc
and
outsb
jmp
lock
cwtl
mov
shl
mov
xor
fwait
daa
das
outsl
arpl
mov
xor
les
rorb
or
imul
pop
jp
xchg
xchg
leave
jmp
repnz
mov
sub
push
gs
sti
or
in
adc
sub
in
in
inc
jo
adc
lcall
ja
int3
pusha
ficoms
arpl
repnz
and
and
stos
insl
jg
prefetcht1
rcrl
push
cli
in
lret
jnp
push
in
dec
fcomps
inc
push
cmp
cltd
aaa
push
int3
scas
ss
sarl
adc
mov
das
and
mov
jl
ss
sub
rcr
mov
sub
ss
andb
movsb
call
bound
push
out
lock
cmp
sub
icebp
lea
decb
dec
fidivl
push
lock
cmc
popaw
sbbl
mov
cli
out
fistps
push
and
push
dec
movsl
mov
jg
sbb
incb
inc
or
rcr
in
inc
in
dec
inc
stos
insl
mov
adc
push
test
xchg
adc
sahf
mov
pop
jno
xor
mov
dec
call
lods
adc
lods
sti
dec
mov
push
scas
aad
cmp
pop
mov
push
cmpsb
mov
ljmp
daa
rcr
shll
mov
push
rcll
pop
orb
stos
sbb
mov
in
and
rcr
sahf
pop
push
mov
pop
or
adc
cmp
sbb
fs
mov
stos
cmp
push
scas
sub
mov
fcoms
lret
sub
gs
jno
mov
adc
das
push
stos
cmp
pop
mov
mull
or
sub
xlat
out
call
shrb
fisttpll
push
or
inc
push
mov
test
and
mov
or
ret
idiv
and
jb
outsb
pavgw
lock
mov
ss
or
scas
push
push
xlat
jno
mov
js
mov
in
and
mov
das
mov
and
push
jae
xchg
insb
sub
sbb
sub
push
or
stc
xchg
mov
loopne
xchg
scas
repnz
cli
inc
dec
mov
mov
pop
mov
jmp
xchg
mov
aaa
cwtl
inc
add
insl
xor
xchg
sub
popa
pushf
mov
in
je
inc
and
cmc
lcall
lea
or
ret
cli
std
cmp
ret
cwtl
aaa
push
inc
mov
jbe
sub
sub
pop
test
int
jns
lods
adc
stos
inc
rcrl
inc
pop
pop
movsl
cmp
js
jp
mov
sbb
fmul
lock
icebp
call
xchg
mov
sub
mov
arpl
sbb
or
in
in
pop
das
shlb
mov
pop
and
cmp
sahf
push
jecxz
in
add
adcl
arpl
pop
ret
adc
pop
fstl
xchg
xlat
xchg
push
inc
inc
aas
iret
test
push
push
bound
cwtl
jmp
xor
dec
mov
or
vcvtps2pd
int
jnp
daa
mov
orl
in
insl
clc
and
cmp
sti
mov
lret
pop
fmull
subl
out
es
and
adc
cs
stos
adc
lahf
bound
and
inc
add
dec
and
in
into
imul
sub
push
fnstenv
inc
xor
mov
mov
sub
stos
jbe
out
add
subl
jno
push
add
jecxz
scas
fistpl
pop
pop
add
dec
sbb
shll
jle
and
pop
frstor
mov
mov
stos
mov
add
pop
xchg
mov
mov
xchg
aas
mov
imul
jb
inc
lds
arpl
out
push
ds
xchg
mov
insl
je
cmp
aas
mov
movsb
mov
push
in
cmpsl
xchg
push
sub
mov
ret
mov
fsubl
ja
push
scas
int3
or
push
fidivl
add
mov
loope
in
xchg
daa
dec
les
inc
pop
rorl
and
daa
cld
pop
push
jns
jecxz
outsl
add
push
cltd
push
pop
cmp
pusha
cs
cwtl
mov
aad
repz
in
xchg
mov
dec
mull
xchg
sub
movsb
adc
add
sbb
jp
mov
ja
adc
out
sub
shll
pop
rcll
loop
cmpsl
cs
lahf
cmp
or
jo
mov
outsl
popa
mov
loop
cmp
mov
sub
stos
imul
jae
lahf
ret
push
or
dec
or
je
aaa
inc
gs
mov
add
push
mov
sub
das
push
hlt
jge
test
shlb
outsb
in
add
jg
aam
sub
dec
jne
sbb
mulps
push
incb
xorl
cmc
aad
inc
sub
add
enter
pop
lahf
or
aaa
cmp
and
pop
loop
hlt
pop
aas
inc
lcall
sbb
ljmp
xor
jecxz
iret
in
jmp
cmpsb
inc
outsb
push
pop
and
pop
xchg
jne
xchg
jb
push
mov
sub
in
and
jmp
movsl
es
push
and
pop
gs
mov
notb
adc
cli
jne
das
mov
into
mov
fidivrl
xchg
mov
xchg
sub
pop
outsl
cltd
sti
xchg
push
imul
sub
notl
movsb
sub
mov
adc
inc
loop
inc
into
pop
push
inc
mov
int
mov
or
jne
push
icebp
adc
xor
pop
pop
ffreep
inc
iret
inc
push
inc
and
icebp
push
test
bound
cmp
adc
jmp
mov
push
jp
es
adcb
gs
xor
sub
mov
jnp
xchg
sbb
imul
mov
mov
out
in
jp
dec
mov
jp
and
loopne
or
and
mov
insl
mov
cmp
dec
pop
add
mov
test
inc
cmp
loope
dec
add
fistpll
xor
sub
xor
fldl
sub
mov
push
and
movsb
fldt
dec
std
and
adc
xor
mov
sbb
leave
fst
addr16
pushf
ja
in
call
clc
mov
push
cmp
test
xor
mov
movsl
inc
sbb
xor
fsubr
add
shll
pusha
lods
mov
xor
mov
push
adc
jg
sub
movsl
pmovmskb
lock
cwtl
xchg
in
or
jmp
add
pusha
jl
push
fxch
enter
ljmp
xchg
inc
mov
mov
scas
or
mov
fbld
pop
add
ror
or
pop
js
sub
mov
insb
cli
outsb
vandps
jg
gs
inc
inc
add
rcll
mov
adc
push
jge
mov
add
cltd
cmpsl
ret
pop
fs
mov
mov
pop
daa
movsb
or
pop
hlt
hlt
or
mov
xlat
jbe
fwait
repz
lcall
jl
inc
addl
pop
add
xchg
push
mov
call
push
scas
dec
xor
pop
sbb
fistpll
cmp
pop
insl
dec
enter
adc
lock
insb
movsb
inc
jg
push
xchg
fistpl
xchg
es
push
not
inc
dec
xor
addr16
shlb
imul
call
mov
clc
add
xchg
add
jp
shr
cli
jbe
sbb
adc
scas
jo
xlat
rcl
sub
xor
push
and
sbb
icebp
shrl
push
push
aad
in
fcomps
pop
add
adc
cmpsb
cmp
pop
mov
mov
sub
push
jmp
xchg
add
dec
lea
jae
inc
popf
xor
jmp
je
xor
sbb
xchg
mov
repnz
cmp
inc
inc
inc
test
scas
jae
mov
lret
sbb
test
mov
adc
xchg
movsl
xchg
adc
jg
dec
pop
dec
pop
dec
outsb
cmp
loopne
mov
jg
out
inc
in
ljmp
sub
fs
insb
or
bound
cmp
data16
fs
mov
ret
inc
incl
fdivs
add
leave
pop
inc
xor
push
push
cli
jnp
mov
fs
outsb
push
xor
lods
pop
ret
mov
adc
je
in
dec
ds
mov
ffreep
popf
aas
test
cwtl
out
int3
into
pop
scas
or
jg
pop
push
mov
dec
jl
jge
adc
push
dec
mov
push
fs
pop
fcom
push
xor
lret
mov
xchg
xchg
mov
jge
lret
sbb
and
dec
jb
stos
rcll
aaa
jns
shl
pop
jmp
das
add
fidivs
cld
or
jo
repnz
loope
push
movsb
push
lds
inc
sbb
mulb
push
popl
or
out
nop
adc
sub
inc
outsl
leave
jno
dec
in
in
mov
imul
je
mov
xchg
and
xchg
ret
inc
pop
das
add
or
enter
xchg
adc
mov
xchg
int
fistpll
lods
in
addr16
adc
in
imul
ficoms
in
sub
dec
inc
xor
dec
arpl
push
imull
push
enter
mov
pcmpgtd
fucom
ss
jnp
push
test
push
dec
and
pop
aas
jg
jno
aas
mov
sub
pop
ret
fcmovnb
dec
inc
xor
xchg
mov
jg
addr16
ja
xor
dec
cli
test
cmpsl
testl
test
cmp
mov
push
leavew
imul
in
aam
and
mov
in
test
sbb
jl
xor
inc
cmp
jmp
mov
mov
mov
inc
jg
hlt
or
frstor
stos
inc
xchg
out
jb
jbe
mov
sarl
xchg
mov
leave
lret
outsl
mul
jmp
mov
xor
jp
call
sbb
lds
and
imul
inc
push
push
xchg
mov
mov
insl
in
xchg
les
test
add
ret
inc
cmp
testl
push
add
fisubrs
sub
cmp
adc
sub
and
nop
fmul
mov
ja
test
negb
jns
std
cmp
inc
mov
movsb
cmp
call
in
pusha
adc
std
aaa
adc
das
xor
mov
jmp
out
mov
rcl
inc
imul
and
loop
adc
dec
inc
push
xchg
shrl
or
gs
in
pop
ljmp
fiadds
ror
daa
addb
xchg
mov
dec
and
int
pop
dec
lret
scas
ret
sbbl
nop
lret
stos
push
pop
pop
sarb
mov
bound
lods
fwait
inc
icebp
xchg
fwait
pop
add
repz
fucomip
fs
lods
adc
sub
jl
jge
les
push
or
xlat
dec
rorl
push
xchg
icebp
add
ret
xor
js
jp
shlb
push
cli
push
push
test
aam
add
mov
sub
sub
js
fwait
sub
dec
movsl
das
mov
mov
sti
add
mov
insb
decl
ret
outsb
xchg
pop
cmp
ret
adc
mov
shr
in
mov
mov
daa
lods
cmp
push
xchg
inc
in
enter
sbb
iret
lret
cmp
imul
push
lock
sbb
xchg
ljmp
or
test
xchg
jnp
sti
mov
sahf
add
xchg
dec
and
mov
call
ret
pop
lret
hlt
in
aam
push
pop
cmp
or
jbe
popf
sbb
mov
jnp
lahf
out
jbe
out
mov
jno
pop
mov
and
lret
dec
cmc
sbb
cmpsb
fmuls
nop
aam
sbb
xor
loope
loopne
cli
jp
or
icebp
in
divl
out
cwtl
or
iret
dec
imul
cmpsl
jmp
xchg
mov
or
and
inc
push
fstpl
jle
cmp
movsb
cmp
push
pop
loope
repnz
cmp
int3
jmp
push
add
xchg
cmpps
jecxz
out
pop
push
je
roll
adc
push
sahf
jg
mov
mov
jl
xor
cmp
adc
or
adcb
lret
jae
xor
dec
xchg
cmp
leave
das
loop
daa
xor
cmp
gs
sub
fldcw
idivl
lret
ret
push
shrb
dec
repnz
stc
lahf
lret
fldl
rcl
std
mov
out
lock
mov
cs
pop
aaa
mov
les
jmp
add
ds
test
movsl
fstps
cld
jg,pn
inc
imul
mov
mov
hlt
xchg
idivl
xor
ljmp
mov
in
iret
sbb
mov
sub
cmpb
ret
iret
loop
and
movb
js
pop
adc
iret
loope
or
shrl
mov
cld
in
jecxz
test
xor
stos
repnz
testb
cmp
and
pop
jg
xchg
fs
insl
mov
es
ds
cs
mov
outsb
jno
ja
stc
mov
in
mov
sti
lret
mov
mov
jp
aam
movsl
loopne
xchg
push
shl
and
xor
push
xchg
fcompl
std
add
lds
movsb
addb
lock
jns
dec
pop
pop
mov
lret
std
push
jne
insl
push
jae
movsb
adc
fs
cmp
cmp
cmp
scas
cmpsb
cmpsb
cwtl
or
ror
orb
adc
fwait
out
orb
or
in
inc
movsb
and
int
jo
xchg
adc
cli
mov
das
xor
loope
inc
jnp
nop
cmc
stos
inc
repz
mov
xor
incb
cmp
test
out
mov
jge,pt
lock
mov
daa
rcrb
jo
adc
ja
xchg
pop
popf
jnp
push
fcompl
mov
adc
sbb
fwait
loope
icebp
xor
cwtl
push
xor
fs
je
jle
fwait
push
scas
adc
lock
inc
lods
inc
mov
addr16
pop
rorb
push
ja
out
into
mov
mov
fbld
int
sbb
sub
mov
push
pop
mov
xlat
cli
jo
mov
mov
sub
movl
pop
xchg
pop
out
in
fcmove
mov
jg
cmpsl
lods
xor
lea
popa
lret
pop
push
adc
fiadds
xchg
mov
in
add
scas
dec
mov
popa
push
push
shll
or
stos
sbb
pop
pop
dec
adc
inc
cmp
lds
dec
ficompl
inc
fwait
popf
or
mov
ret
dec
adc
pop
es
fwait
jns
dec
dec
sub
mov
aam
outsl
std
test
mov
dec
mov
lods
cli
ds
xor
add
inc
mov
sub
xor
ret
pop
jp
sbb
fmuls
pushf
fs
pusha
stc
add
int
sub
rclb
pop
and
fcomps
mov
mov
mov
outsb
xor
mov
xchg
je
xchg
ljmp
push
sbb
test
sbb
ret
addl
jne
cmp
pop
mov
jmp
in
and
dec
jge
xor
or
nop
mov
or
xor
push
test
rolb
mov
pop
shlb
in
lock
xchg
shll
xor
outsl
pusha
cmc
int3
mov
cmp
aaa
jp
jle
xorl
out
lods
in
inc
arpl
fildl
out
mov
fcom
add
xchg
cmp
pop
push
cltd
out
cmpsb
cld
fwait
into
push
or
push
shl
adc
in
aam
push
out
lret
jl
outsb
int
test
pop
dec
xor
std
cwtl
push
loopne
fwait
and
mov
jae
xor
mov
inc
cmc
xchg
and
lret
cmp
xchg
cli
movsl
sub
jmp
jmp
ja
push
je
mov
add
in
stc
ds
iret
dec
lods
les
bound
popf
or
shl
sbb
insl
push
or
cld
mov
jg
int3
push
mov
dec
hlt
add
aas
mov
adc
xor
and
xchg
jg
in
into
mov
sbb
push
cli
fs
push
dec
push
int
push
repz
fistpll
pop
push
and
mov
dec
sub
xchg
add
jmp
or
aas
ret
mov
jmp
inc
or
divl
lea
inc
std
lret
add
aad
dec
ret
push
mov
jne
dec
sbb
sbb
clc
jl
idiv
pop
xor
jecxz
sub
xlat
enter
and
rcrl
rclb
sbb
lahf
fdivrp
jecxz
adc
aas
jno
xor
cmc
stc
jle
xlat
leave
jns
clc
push
test
iret
leave
lea
lds
mov
ffree
sbb
jecxz,pt
das
imul
loop
mov
pushf
aas
incb
cli
mov
sahf
pop
call
mov
fdiv
not
fdivrp
ljmp
xor
aad
dec
mov
cld
pop
ffreep
sub
jg
jno
stos
mov
push
mov
pop
xchg
sub
sbb
mov
cs
out
outsl
dec
mov
jnp
cmpsl
mov
repnz
cli
cltd
scas
out
mov
mov
xchg
lcall
loop
clc
enter
movsb
pavgw
adc
mov
out
cmpsb
pushf
test
js
aam
incb
lock
std
cltd
push
jno
xor
shll
fldl
iret
fldl
imul
test
popa
sbb
dec
fdivs
xchg
mov
rcll
mov
out
sub
cmpsb
cmp
std
test
push
and
xlat
aad
mov
dec
push
cmp
mov
das
xor
jae
adc
int3
fwait
jp
test
fwait
xchg
sub
fstl
fwait
mov
mov
cmp
mov
les
mov
cltd
jg
sbb
int3
mov
rol
jmp
jno
addr16
imul
xchg
into
mov
xchg
mov
add
mov
arpl
gs
fidivrl
out
test
js
adc
fdivrl
std
mov
push
and
push
into
mov
fmuls
add
cmpsl
sbb
mov
stc
fdivl
mov
sbb
pusha
leave
or
xor
push
adc
sarl
or
int
jle
cmpsl
inc
xor
mov
mov
sub
cmp
lds
mov
dec
inc
nop
push
cmp
rol
cmpsb
es
mov
inc
ds
scas
sbb
xchg
int3
xor
push
std
sahf
mov
std
jmp
sbb
cmpsb
sbb
imul
mov
insl
add
mov
mov
jmp
pop
fdivrs
cmp
sbb
sbb
dec
sbb
xchg
ljmp
les
sub
push
popa
jmp
out
das
mov
sub
add
mov
imul
imul
inc
push
cmp
fistpll
sbb
jmp
add
push
sub
mov
dec
mov
clc
bound
mov
or
bound
stc
xchg
pop
pop
sbb
push
outsl
mov
call
inc
daa
xor
push
inc
jge
cmp
lds
mov
mov
mov
mov
jo
lret
cmp
sahf
xchg
mov
mov
sbb
jbe
add
lods
shl
or
daa
cmc
leave
iret
pop
mov
push
cli
out
mov
ret
xchg
dec
cld
gs
inc
popa
fucom
xchg
jno,pt
jne
adc
jne
xchg
sbbb
push
jl,pn
test
cmp
push
mov
adc
and
movl
mov
in
or
aad
push
jge
fnstsw
cmpsb
xchg
sub
inc
imul
cltd
mov
xchg
xchg
test
pop
inc
dec
pop
pop
jb
les
clc
dec
jge
push
hlt
mov
xchg
xchg
adc
cmp
fdivrs
or
mov
jo
jae
adc
in
and
aad
cmp
cmc
into
test
xor
xchg
xchg
cli
lahf
mov
repnz
mov
jne
pop
cld
roll
lcall
fisttpll
dec
add
inc
mov
call
or
cld
arpl
inc
jecxz
fwait
lods
test
add
ss
scas
inc
xor
mov
push
loop
insb
xchg
adc
in
lds
mov
bound
shll
and
sbb
and
sahf
mov
push
mov
lods
mov
jno
jb
xor
int3
and
pop
mov
data16
std
and
mov
inc
iret
in
push
hlt
push
rclb
cli
xor
jnp
push
mov
xor
and
mov
int
jmp
or
sbb
add
xchg
mov
mov
lds
mov
sbb
vmovsd
cmp
loope
sub
and
cmpb
sub
mov
push
fsubr
inc
sub
in
lea
add
inc
ja
sbb
data16
push
push
ret
pusha
xchg
push
fldz
test
cmpsb
jp
pop
push
aam
loop
mov
test
cmpsb
mov
icebp
pushf
push
dec
xchg
out
test
xor
imul
imul
or
out
inc
and
outsl
fbstp
and
nop
loope
nop
xchg
hlt
std
jnp
test
nop
and
xchg
mov
ficompl
adcb
adc
and
ds
or
mov
les
cmc
sbb
hlt
push
stos
cmpsl
std
or
push
cwtl
rorl
lds
mov
lods
lea
xor
pushf
es
inc
rcl
insb
pop
das
jnp
cmp
push
mulb
jecxz
and
sar
dec
sbb
movsl
dec
pop
out
in
mov
cmp
insb
mov
sbb
es
dec
mov
fwait
push
sub
pop
ret
cmpsb
push
xor
inc
xchg
adcb
jae
shl
cmp
in
sahf
mov
dec
inc
inc
adc
and
std
mov
cmp
mov
lcall
out
mov
cli
out
lret
xchg
xor
mov
fsubl
and
cs
iret
out
and
subl
xchg
mov
cmp
push
or
data16
mov
lcall
dec
push
cs
popf
xchg
stc
in
mov
testb
jge
push
fwait
mov
daa
out
ds
cmp
cmp
ffreep
aam
cwtl
xchg
xlat
mov
add
push
mov
inc
xor
cmp
or
push
cltd
sbb
dec
mov
or
fists
mov
xlat
dec
dec
outsb
add
js
insb
cmp
mov
loope
mov
mov
frndint
add
fwait
je
fimull
stc
push
push
xchg
lea
mov
bound
cmpb
inc
dec
or
xchg
mov
jge
sub
xorl
ds
loopne
into
rcll
push
test
andb
fs
inc
insl
xor
lret
mov
dec
xor
cmp
or
je
fdivrl
pop
adc
imul
xchg
out
add
andl
push
iret
ja
daa
loope
outsb
lea
xchg
inc
mov
sbb
nop
lock
bound
mov
adc
sub
xor
jnp
clc
sub
cmpsb
and
push
and
mov
out
xchg
into
aas
xchg
sub
call
and
cli
xor
dec
test
pop
sbb
call
outsl
push
data16
cmp
push
int3
push
xchg
mov
push
adc
js
push
inc
fucom
data16
outsb
mov
ja
jp
lods
push
inc
xchg
scas
lahf
adc
mov
mov
sahf
and
push
sub
gs
push
cwtl
repnz
mov
and
pushf
or
cltd
aad
fiaddl
push
mov
cs
or
cmp
aas
inc
frstor
sub
xchg
mov
aas
sbb
mov
stos
inc
or
mov
test
pop
ja
jo
loope
jp
stos
fdivrl
sbb
lods
movsb
daa
mov
imul
ds
dec
cltd
pop
imul
inc
inc
and
xchg
adc
xchg
pop
or
arpl
or
xor
mov
sub
dec
and
insb
inc
pop
and
pop
cmc
int3
rolb
push
and
inc
cmpsb
and
outsl
mov
fmul
gs
fs
xchg
or
cmp
lods
jae
and
js
sub
mov
dec
ljmp
adc
push
cltd
jb
fcom
add
imul
dec
nop
push
or
add
xchg
add
ret
mov
dec
sbb
jns
leave
add
mov
jbe
test
or
cmpsb
cli
outsl
out
mov
repnz
pop
test
cmp
aaa
xor
loope
aad
xchg
aaa
int3
sbb
js
inc
pop
filds
das
mov
ja
lds
xor
adc
push
out
lods
movsb
mov
or
sti
outsl
movsb
pusha
xor
loopne
aas
outsl
bound
mov
xor
imul
sub
imul
fs
adc
ljmp
push
push
push
int3
jnp
add
push
mov
xchg
pushf
sbb
lods
pop
adc
mov
cmovl
not
leave
pop
lret
ret
dec
push
in
iret
inc
pop
loop
repnz
cmp
mov
mov
and
inc
nop
mov
dec
loope
add
bound
xchg
stos
mov
push
cmp
xchg
push
popf
in
out
mov
push
sub
stc
mov
mov
sbb
das
test
cmpsl
ja
out
sub
scas
inc
xor
and
fmull
inc
mov
xchg
add
insb
adc
cmp
mov
xchg
jne
sbb
ret
leave
adc
dec
xor
jmp
pusha
xchg
mov
repnz
sbb
mov
out
pop
cmpl
xchg
fiaddl
jg
inc
out
inc
xor
sbb
outsb
enter
jecxz
push
mov
or
popf
inc
cmp
gs
movsl
cld
or
addl
jp
imul
adc
mov
in
pop
and
adc
shrb
sbb
sub
sarb
and
add
xor
xchg
push
roll
sbb
fsts
jl
pop
sub
jo
rcl
sahf
imul
clc
mov
sbb
pop
or
push
xchg
lahf
inc
int
sbb
ficomps
pop
repnz
fnstsw
inc
jae
cmp
push
les
lea
cmp
lods
dec
aad
lds
cs
mov
das
lahf
sbb
ret
scas
popf
cmp
xor
xchg
mov
fcomi
sbb
xchg
jno
xchg
add
cs
push
cmp
cld
frstor
and
mov
jle
enter
nop
xor
mov
cmc
in
add
xor
out
jns
ret
pop
sbb
cltd
rclb
cmp
js
out
jge
lods
jp
data16
mov
pushf
pusha
in
ss
xchg
mov
pushf
incl
out
xchg
lcall
mov
sbb
stos
or
out
adc
mull
rcll
push
stos
fs
fwait
jge
push
jle
xor
bound
mov
jbe
inc
jno
adc
dec
dec
jecxz
repz
mov
rcl
jg
cltd
cmp
jb
xchg
mov
dec
xchg
mov
arpl
icebp
sbb
aaa
cltd
dec
shrl
jmp
push
shll
pusha
lret
test
xchg
lcall
mov
and
leave
stos
adc
xchg
pusha
xchg
push
roll
sub
mov
out
mov
mov
fsts
push
jge
jnp
xor
imul
out
and
not
lea
std
ret
lcall
inc
ljmp
imul
push
cmpsb
xchg
push
mov
repnz
orb
sbb
add
add
pop
out
adc
xchg
test
or
clc
jo
xchg
fwait
das
sti
inc
push
fs
out
ret
scas
sub
mov
orb
sahf
jle
mov
pop
mov
sub
imul
add
push
imul
fs
fdivl
adc
adc
jb
mov
push
adc
je
stos
jge
jnp
fiaddl
ljmp
aas
pop
and
out
incl
or
jg
jl
out
dec
push
shll
popf
in
xor
scas
lods
adc
stos
xchg
xlat
cmpsb
xlat
out
aas
xchg
xchg
repz
add
stc
add
xchg
out
daa
mov
dec
lds
jne,pt
insl
pushf
push
imul
mov
mov
sbb
sub
mov
stos
cld
ljmp
mov
mov
push
xchg
push
orl
adc
and
sahf
mov
sub
dec
add
mov
jp
lahf
sub
in
in
xor
mov
rcrl
int
pop
pop
cmc
fidivl
and
and
adc
movsl
lods
pop
insb
adc
pop
lret
inc
pop
les
push
sti
cmp
or
adc
and
int3
int3
jmp
mov
test
icebp
in
test
mov
sub
mov
cmpsb
pop
add
aad
lret
pop
loope
pusha
add
rcrb
insb
mov
cmp
inc
cld
dec
lea
adc
mov
hlt
filds
cmp
fs
sub
in
cmp
icebp
mov
jnp
insb
bound
mov
ror
add
push
shrb
into
mov
daa
cwtl
fldt
push
dec
xchg
push
adc
dec
vxorpd
sub
jns
daa
loopne
dec
fildll
inc
mov
xor
sub
mov
cmpsb
in
add
popa
mov
sub
pop
lcall
das
jbe
xchg
movsb
ror
mov
xlat
add
dec
sbb
cmpsb
add
sarl
push
sahf
stc
in
sub
and
or
mov
mov
nop
push
or
lret
int3
dec
xor
in
and
xor
adc
loopne
sbb
not
pop
pop
pop
ret
jbe
pop
dec
mov
adc
pop
ret
sub
dec
aad
pop
sbb
sub
ss
mov
pop
std
pop
and
jne
nop
mov
bound
bound
scas
inc
jnp
sub
dec
sbb
inc
pop
xchg
lds
add
cld
inc
xor
push
jne
out
imul
data16
sbb
nop
dec
sarl
loopne
jnp
push
icebp
push
mov
rorb
test
lock
cmp
mov
loope
fdivl
stos
gs
or
jl
imul
in
add
pop
call
sub
add
std
mov
pop
test
fimuls
xorl
xchg
ss
sub
stos
inc
or
lds
add
aaa
sub
mov
xorl
mov
sbb
push
sbb
stc
add
scas
lahf
shrl
aad
ror
mov
mov
cmp
orl
sbb
and
test
inc
cmp
lock
sahf
push
pop
dec
xor
adc
jne
add
cmpb
adc
int3
mov
mov
and
cmp
pop
and
or
cmp
aas
pop
mov
mov
fimull
fisubrs
jae
pop
jle
jecxz
add
sbb
pop
inc
jbe
imul
pop
popa
or
ja
push
pop
aad
lret
mov
push
sbb
push
sbb
pop
xchg
sahf
scas
fdivs
dec
roll
dec
in
rcll
cmc
xor
xchg
loopne
adc
cmp
dec
pop
jecxz
pop
mov
sbb
adc
fildl
mov
fisubrl
shlb
subb
loop
xor
das
ficoml
in
loop
idivb
lods
mov
mov
in
dec
mov
mov
jg
inc
mov
pop
je
sti
or
sbb
or
sbb
inc
add
jns
mov
push
jb
shll
inc
movsl
test
and
mov
dec
sub
mov
lret
adc
dec
mov
aad
fstpl
xchg
ret
rolb
mov
in
loopne
cmp
pushf
adc
inc
mov
sub
inc
mov
into
rorl
dec
adc
fnstcw
addr16
push
roll
call
lods
pop
xchg
and
fstps
xchg
es
pop
mov
adc
je
fwait
jp
subl
imul
lcall
mov
leave
lahf
stos
jno
mov
push
mov
pop
in
aaa
arpl
push
cs
lock
inc
cltd
jecxz
cmp
lock
pop
aaa
sub
ret
inc
jge
adc
jne
arpl
inc
jle
sub
stos
and
lea
xchg
aam
sbb
imul
int
hlt
stos
pop
fdivr
pusha
sub
xchg
in
dec
addl
loope
inc
jg
jne
rep
ds
enter
fldt
jge
cli
mov
sbb
lods
cmpsl
dec
and
lods
test
push
outsl
adc
dec
loope
and
jge
inc
lods
ja
dec
push
int3
aaa
imul
dec
stos
push
sbbl
push
popf
lcall
or
mov
add
stos
push
mov
mov
arpl
push
lods
inc
push
sahf
push
lods
cmc
jl
cwtl
loop
dec
add
jne
imul
test
movb
sub
lret
jecxz
or
shrl
sbb
outsb
fcoml
jl
repz
in
cmc
adc
add
insl
stc
lods
mov
xchg
xchg
add
cmp
pusha
cs
push
gs
or
mov
loope
jl
movsl
test
push
mov
add
aam
push
popf
mov
arpl
adc
movb
leave
push
sub
xchg
push
mov
add
cmc
cwtl
shl
nop
mov
dec
arpl
adc
sub
jmp
hlt
test
lods
ret
or
int3
sbb
xor
mov
data16
gs
sub
dec
sbb
scas
sarb
pop
adc
loop
xchg
je
iret
ss
push
iret
dec
vcmpsd
sarb
jmp
lahf
lcall
sbb
scas
adc
and
dec
out
cmp
lds
jp
and
scas
mov
inc
addl
rorb
js
adc
dec
vmread
imulb
pop
add
dec
fsts
jl
inc
or
popf
pop
stos
mov
es
xchg
inc
adc
jge
js
add
test
inc
jecxz
mov
test
dec
sub
mov
std
mov
clc
ljmp
faddl
mov
popa
imul
add
or
xchg
pusha
fistpl
mov
ret
sbb
cmp
hlt
mov
pushaw
fstl
add
loopne
inc
or
ret
push
lahf
scas
pop
cmpsl
mov
pop
test
pop
sti
or
lcall
mov
dec
mov
lods
pop
fiadds
adc
test
rcl
and
sbb
pop
int
sbb
aaa
inc
mov
add
pop
mov
ljmp
jg
fs
mov
and
stc
out
sbb
or
notb
lods
push
cmpsl
lods
dec
pop
stos
ret
je
xor
icebp
add
jl
pop
cs
or
fld
dec
add
les
jns
les
call
pop
ljmp
or
push
sub
sub
fdivrl
jno
lds
mov
pop
adc
add
sub
stos
lea
and
adc
jmp
std
cltd
jo
sub
pop
int3
pop
insl
ljmp
mov
insl
or
test
or
into
sub
mov
lahf
call
shll
push
inc
es
mov
sbb
mov
loop
daa
jp
jl
in
ja
mov
dec
ljmp
pushf
test
mov
fdivl
insb
jbe
out
push
mov
std
test
out
leave
adc
test
adc
iret
xchg
mov
adc
aaa
in
in
je
and
insb
cmp
mov
adc
cld
pop
xchg
mov
icebp
sbb
dec
jb
aad
sbb
leave
pushf
adc
sarl
hlt
cmp
mov
and
jp
jmp
mov
test
lock
aaa
pop
push
mov
fsubrs
inc
jp
cmpsb
les
mov
mov
mov
mov
pop
cmp
out
adc
dec
or
scas
mov
mov
push
cmp
daa
dec
cmp
out
rolb
xlat
arpl
insb
outsb
stos
icebp
dec
push
and
clc
popf
aas
cli
outsb
lds
mov
or
fldl
push
sub
jge
inc
ret
xchg
dec
vmread
or
push
jmp
cli
int
fs
and
ret
push
mov
xchg
mov
add
rcrb
enter
fildl
out
imul
stos
arpl
pop
sbb
xor
movsb
push
xchg
ljmp
lret
xor
or
loop
pusha
mov
mov
mov
mov
ljmp
fs
push
xchg
gs
addr16
jecxz
mov
cmp
sbb
push
push
inc
cmp
mov
or
lahf
push
inc
mov
jp
xor
xor
repz
pop
jmp
add
xchg
sbb
xchg
add
lret
test
adc
loope
in
add
popf
and
jne
jns
adc
xorb
inc
xlat
sbb
enter
xchg
xchg
mov
sbb
xorb
inc
hlt
aaa
loop,pt
sbb
jl
in
roll
add
jl
mov
mov
mov
incl
mov
mov
dec
dec
out
aas
mov
jbe
sub
call
lcall
lods
test
or
xchg
lcall
push
pop
aaa
push
push
pop
sub
shll
jbe
jmp
test
lret
stc
or
mov
push
or
push
lret
add
std
cld
and
jno
fcoms
in
addr16
fmull
cmp
rclb
pop
jae
add
idivl
ss
shlb
push
cmp
and
inc
movsb
iret
test
cmc
js
js
mov
pop
pop
aas
jo
inc
popa
xchg
jecxz
ret
cmpps
out
cmc
pushf
sub
in
sbb
xchg
push
sub
pop
mov
mov
sbb
cwtl
icebp
mov
sarb
fmull
or
dec
scas
mov
pop
dec
popf
inc
mov
jae
xor
bound
mov
or
fdivr
out
sbb
ficompl
jno
mov
or
add
insb
sbb
test
mov
leave
jecxz,pn
jno
push
xchg
lods
push
je
cmpsl
xchg
mov
add
out
imul
repnz
pop
popf
dec
push
movsl
mov
aam
mov
push
cmp
stos
push
xchg
lahf
stos
mov
dec
sbbl
fs
daa
xor
adc
push
sub
repnz
outsb
adc
bound
or
mov
fisubrl
dec
adc
mov
ljmp
icebp
ds
in
pop
cld
outsb
gs
inc
sbb
not
leave
pop
lods
add
outsb
add
das
ret
xor
inc
sub
add
inc
addr16
pop
sarb
dec
mov
hlt
xlat
sbb
fmull
and
stos
lods
xlat
mov
cld
arpl
lods
jp
lahf
pop
addr16
xchg
xchg
push
sbb
sbb
test
iret
movl
xchg
repnz
sub
sbb
movsl
fstps
testb
mov
pop
shll
sub
scas
je
or
mov
fmuls
popa
adc
xchg
loopne
sahf
es
mov
mov
pushf
mov
loope
xor
mov
gs
out
dec
imul
std
push
loope
iret
cmp
das
dec
mov
data16
cltd
aad
push
mov
lods
pop
outsl
fdivrl
aam
in
xchg
popf
add
dec
pop
cld
jmp
pop
xchg
and
cmp
jle
mov
mov
sbb
add
or
scas
pop
push
dec
es
add
out
fbstp
mov
fnstcw
out
xor
or
cs
stc
enter
insl
imul
mov
nop
mov
push
sti
test
aas
cmp
and
mov
jo
mov
test
fmull
xchg
popf
shll
sbb
vcvtss2sd
imul
adc
lcall
popf
sub
mov
lahf
pop
push
adc
cli
in
mov
int3
addr16
bound
iret
lds
dec
push
pusha
ss
cld
mov
jno
push
fwait
dec
mov
add
arpl
sbb
mov
mov
add
hlt
rclb
push
adc
jo
mull
inc
jmp
sub
dec
xlat
out
sub
test
idivl
out
or
insb
xchg
adc
mov
or
and
sub
mov
inc
push
inc
adc
mov
push
rorl
dec
lcall
add
frstor
lods
sarb
dec
in
loopne
std
sub
jne
iret
andl
xor
enter
dec
xor
and
cmp
mov
push
pop
xchg
push
push
pop
jne
push
ret
push
jecxz
fwait
cli
mov
push
fwait
cmp
mov
xchg
mov
push
out
cli
pop
pop
mov
icebp
jge
mov
iret
pop
dec
adc
aas
jbe
cltd
mov
xor
push
jbe
fs
ljmp
cmp
ja
push
insl
push
andl
mov
pop
push
xor
push
out
negb
add
add
ret
sub
iret
lcall
cli
fucom
mov
pop
in
jl
sub
xor
cmp
mov
adc
push
inc
stos
or
sbb
loope
sarb
arpl
lods
or
mov
hlt
aaa
xchg
or
mov
shl
push
jae
adc
daa
fisubrl
sbb
fiadds
movsb
int3
or
sub
xchg
std
xor
sub
out
sub
outsb
stos
inc
lds
sub
or
es
cmp
aam
sub
inc
les
push
sub
mov
push
push
repnz
aas
sbb
js
dec
popa
cli
pop
mov
xchg
jl
ficoms
loope
sbb
push
adc
outsb
inc
aaa
pop
sub
stos
dec
out
test
setp
rol
jae
sbbl
jecxz
test
sub
gs
fwait
xchg
sub
ror
push
inc
jg
fcmovb
fwait
and
adc
and
gs
call
je
pop
ret
mov
movsl
mov
mov
xchg
jo
and
mov
dec
adc
jnp
cmp
xchg
xchg
popa
in
or
xor
sbb
incl
ds
lret
ja
mov
push
int3
or
bound
in
outsb
and
jne
adc
sub
sar
fstl
in
es
inc
lods
stc
inc
xorl
lods
inc
mov
pop
add
xchg
jge
stc
prefetch
xchg
sbb
popa
dec
or
cmp
mov
xchg
sbb
addr16
push
push
ljmp
add
pop
push
adc
adc
cld
mov
push
sahf
ret
lods
add
in
loopw
aaa
pop
ret
ret
incl
push
xor
movsl
xchg
sbb
popf
pop
mov
call
add
imul
jecxz
add
jb
or
lods
jecxz
lods
lock
mov
xchg
popaw
jl
arpl
fwait
arpl
pop
insl
gs
push
xor
imulb
jne
mov
mov
addr16
popf
shll
push
in
test
scas
loopne
sbb
stos
mov
sbb
andl
cmp
js
xor
push
mov
sarb
stos
clc
mov
stc
fucomip
lahf
mov
mov
xor
enter
pop
insb
lret
push
ds
cmp
sub
insb
jne
mov
in
xor
pop
and
xor
mov
aam
ds
das
lds
xchg
jmp
sub
inc
jg
and
dec
out
stos
loopne
push
das
mov
subl
loop
mov
xor
ljmp
aad
xlat
shrl
jp
adc
jb
jecxz
pushf
adc
mov
pushf
pusha
pop
mov
lods
movsb
sub
xchg
xchg
daa
inc
filds
xchg
xchg
scas
pop
push
popa
and
cmpsl
pop
pop
outsb
stos
pop
mov
fwait
repz
jno
test
imul
pop
push
pop
adc
inc
xchg
gs
cmp
dec
mov
je
jmp
roll
aaa
mov
or
sbb
jne
and
arpl
jb
mov
out
loop
jl
pop
adc
cs
inc
popf
aaa
shlb
dec
mov
cmc
xor
pop
push
rolb
pop
daa
xor
jecxz,pt
cmp
mov
xchg
pop
pop
inc
jl
pushf
mov
dec
jmp
xchg
lret
mov
shrb
lea
sarb
scas
loope
adc
push
xor
mov
cmp
add
dec
pop
insb
xchg
hlt
call
mov
inc
and
jle
mov
rolb
cmp
mov
dec
dec
mov
inc
and
fdivrs
enter
mov
pop
imul
mov
xchg
mov
adc
hlt
xor
push
popl
and
arpl
jnp
xchg
rcr
dec
jmp
addb
clc
and
xor
lret
lea
into
dec
dec
inc
es
les
push
xlat
mov
adc
clc
lahf
xchg
push
mov
xor
fidivs
jno
aad
stos
lods
out
jmp
fwait
add
js
dec
mov
and
rcrb
sub
xchg
gs
jmp
pushf
pop
cltd
jns
mov
xor
mov
xchg
and
sbb
cld
fidivrl
mov
xchg
flds
push
rorb
or
lock
repz
adc
mov
mov
lods
imull
add
add
jae
sbb
fildl
loopne
in
xor
xor
loope
jg
aad
imul
jle
and
and
in
and
ud2
adc
sub
mov
add
push
test
aas
mov
data16
pop
cmpl
mov
dec
or
sarl
das
and
in
and
mov
stc
push
repnz
push
push
pop
pop
inc
inc
xor
int3
orl
mov
je
push
pop
cwtl
adc
in
mov
cwtl
jns
and
and
inc
shll
fisubs
push
add
fidivs
cmp
and
jns
insb
orl
leave
cmp
jle
lods
arpl
mov
test
inc
and
cmc
aam
adc
xor
mov
push
cmpsb
int
ljmp
into
in
mov
cmp
or
push
stos
inc
mov
mov
ja
arpl
sbb
insl
adc
mov
pop
cmp
out
jb
enter
or
cmp
std
add
lret
cltd
sub
das
addr16
mov
loopne
sub
test
push
or
xchg
and
xchg
inc
xchg
or
xor
jne
and
or
sub
int
xchg
pushf
lods
jecxz
and
dec
icebp
and
pusha
test
js
jno
negb
int3
push
insl
in
leave
ret
mov
cmc
mov
or
sahf
dec
imulb
mov
imul
repnz
mov
adc
and
not
mov
pop
xchg
pop
les
cli
xchg
pop
ljmpw
clc
cmp
jnp
sti
mov
pop
push
add
mov
push
adcb
mov
jbe
repz
aas
sbb
xor
jge
add
test
divb
test
mov
xchg
fistl
xchg
mov
jb
push
iret
dec
idiv
arpl
dec
xor
adc
aaa
pop
and
push
sbb
and
adc
push
mov
mov
inc
dec
fisubrs
mov
adc
cmp
mov
push
or
xchg
scas
mov
sbbb
mov
mov
stos
sbb
into
fbstp
dec
aas
xchg
cmp
cmp
repz
inc
ret
mov
sbbl
daa
xchg
jae
sti
cs
jae
movsl
jne
jnp
loopne
pop
in
insl
jne
jbe
cli
dec
pop
cmp
xor
add
push
xchg
pop
or
aam
or
in
cld
push
jno
imul
dec
insl
xor
or
bound
je
sbb
jo
and
inc
imul
xor
inc
push
add
push
mov
icebp
lds
mov
add
jno
stos
push
jae,pt
sbb
cmp
push
xor
addl
jecxz
jecxz
and
or
aad
ljmp
xor
clc
push
pusha
loop
or
sub
cmp
add
cli
pop
cmp
dec
and
enter
cmpsl
fidivs
jmp
addb
xchg
push
cmp
rorl
pusha
and
add
mov
push
add
lods
jecxz
inc
xchg
sbb
cmp
loope
and
sbb
adc
movsb
dec
xor
addb
aas
and
cmpl
xor
int
scas
mov
mov
cmp
inc
sub
insl
lea
rcll
jne
xchg
pop
mov
mov
iret
mov
jp
ds
cld
sti
adc
aas
sub
push
inc
xor
fistl
jne
or
inc
mov
mov
xchg
lods
ret
cmpb
je
insb
cmp
sbb
int3
sbb
insb
sub
xor
or
xor
dec
cmpb
add
decl
push
scas
notb
imul
and
test
ljmp
rolb
xlat
into
test
out
sub
iret
scas
or
push
mov
lcall
mov
cmpb
sub
xchg
xchg
sarb
jmp
mov
or
adc
xchg
scas
inc
mov
pop
ss
sbb
dec
cmp
rdpmc
push
push
push
mov
mov
sbb
or
stos
mov
cmc
ret
mov
iret
scas
mov
jge
jae
test
inc
scas
fcmovnu
and
cmp
dec
out
jne
pusha
lock
or
fisttpll
rol
in
adc
mov
ficompl
jno
sti
rclb
jns
mull
frstor
xor
inc
cli
jle
popf
leave
les
mov
cmp
xchg
scas
stos
out
mov
mov
and
sub
enter
or
cmp
add
das
or
xor
xchg
sbb
sub
mov
xor
xchg
adc
cmpsl
or
sub
lock
mov
mov
loop
push
jecxz
jae
push
lods
movb
in
cwtl
in
cmp
imul
imul
ret
stos
sub
outsl
inc
addr16
push
dec
pop
sub
data16
mov
aaa
fbstp
push
setae
fildll
je
loope
mov
es
jmp
call
ja
ret
add
xor
mov
jno
jl
push
sbb
mov
fs
xchg
cmpsw
pop
pop
arpl
xchg
mov
jg
push
popf
shll
cmp
mov
ret
rorb
mov
addr16
ds
rcll
mov
adc
mov
test
insb
pushf
ret
or
sbb
xor
cmp
push
or
ja
cwtl
or
movsl
mov
sahf
hlt
pop
bound
jne
pop
lret
mov
push
sub
stos
mov
push
mov
mov
imul
outsb
clc
xchg
push
cltd
push
dec
cmpsb
gs
cltd
xor
mulb
aas
ret
rorl
neg
xlat
pushf
mov
je
lock
cld
pusha
test
arpl
jmp
in
mov
cld
add
es
data16
adc
outsb
xor
loopnew
adc
dec
cwtl
xor
fldcw
sub
jo
sbb
jnp
fnstsw
into
sbb
inc
dec
outsb
aad
pop
aad
aas
cmp
outsb
cld
pop
lea
inc
ja
xchg
adc
sbb
pop
test
and
jge
adc
scas
int3
xor
jg
aas
jmp
pop
call
jbe
jmp
sbb
icebp
sahf
mov
sub
mov
addb
shrl
inc
jl
int
fcoml
lea
xchg
aas
shlb
inc
push
int
rdtsc
pop
xor
inc
int
inc
sbb
mov
ret
mov
andb
mov
sti
setl
and
and
outsb
adc
repz
std
cmp
adc
inc
push
or
xchg
dec
push
es
mov
mov
sbb
jne
mov
push
test
cmc
sbb
mov
mov
mov
add
xchg
fwait
je
xchg
pop
or
in
out
push
icebp
ss
addl
pusha
loope
mov
outsl
mov
pop
jle
jbe
imul
jl
subb
popa
repnz
popa
adc
fwait
lods
loop
xor
cmp
sub
addr16
cmp
xchg
aam
mov
cmp
fidivl
cmpsb
mov
mov
pop
pop
sbb
sbb
pusha
bound
inc
je
sbb
cmpsb
movsl
filds
aaa
pusha
xlat
es
mov
cld
jl
cmp
es
sti
ret
jg
mov
add
inc
xor
gs
insl
mov
ljmp
push
lret
dec
push
adc
jns
cmpsl
adc
adc
cli
hlt
in
or
or
int3
popa
cmpsb
mov
pop
or
push
dec
xchg
jne
cmp
aaa
jmp
push
jl
mov
cwtl
fwait
insb
inc
in
loopew
and
fsubrl
sbb
or
mov
cmp
lock
addl
jns
repz
fildl
push
xor
mov
sti
pop
aas
push
pop
cmp
cmp
or
mov
lcall
xchg
mov
jns
test
push
leave
aas
in
sub
pop
fcomps
or
shll
cld
or
inc
cs
cmp
roll
lahf
sahf
pop
and
loope
notl
mov
add
xlat
sub
mov
out
add
cmp
jns
jmp
mov
shlb
adc
out
jno
addb
xor
repz
push
cmp
pop
adc
aam
adc
sub
mov
movsl
ret
add
or
add
sbb
arpl
xchg
lods
mov
jecxz
add
pop
pop
repz
popf
sbbl
adc
pop
xchg
test
inc
sub
imul
repnz
sbb
ds
movsb
pcmpeqb
ret
mov
lcall
sbbl
daa
inc
sub
xchg
loopne
test
and
ds
adc
xlat
mov
pop
mov
jl
adc
loop
pop
inc
cmpsl
sti
pop
or
data16
repz
xor
int
and
push
cltd
out
mov
or
or
sti
push
dec
and
push
jno
aas
xor
gs
jmp
out
pop
shll
outsl
hlt
leave
fxam
mov
out
cmp
adc
loop
aad
shrb
xlat
lret
cmp
or
push
fdivrl
mov
jecxz
or
sub
fimuls
outsb
imul
repnz
test
inc
push
ja
jo
jno
lahf
ret
sub
hlt
cmp
imul
mov
jg
jle
mov
jecxz
cmc
nop
push
pop
pop
loop
out
add
repnz
mov
push
xchg
mov
sbb
adc
pop
stos
and
scas
ja
sub
test
jg
adc
jbe
adc
mov
lea
fdivrs
push
mov
xchg
sbb
fildl
mov
xchg
push
cmp
subb
dec
dec
mov
aad
inc
jno
sub
notb
jmp
call
movsb
adc
cs
out
scas
xchg
and
pop
ret
jl
pop
pop
lods
mov
adc
test
xchg
popa
inc
push
loop
xor
in
in
imul
push
dec
outsb
dec
sbb
es
lahf
lds
scas
dec
push
push
sub
jl
mov
mov
mov
add
push
and
lock
popa
adcb
lock
mov
out
and
or
int3
mov
das
scas
rcll
mov
sub
es
add
inc
sub
shl
lahf
mov
dec
sbb
sub
cmp
dec
fwait
mov
inc
clc
mov
icebp
inc
push
dec
pop
adc
repnz
or
inc
call
or
je
inc
inc
outsb
jecxz
pop
mov
add
mov
push
icebp
xchg
jg
jl
jecxz
and
shr
sbb
mov
call
or
dec
jo
mov
pop
imul
push
xchg
enter
shlb
pop
fnstcw
pop
push
loop
sbb
scas
test
test
js
pop
aad
dec
sti
mov
inc
sbb
shlb
fdivr
sbb
addr16
pop
popf
cwtl
pop
jl
fimull
inc
scas
xchg
test
cmpsb
mov
in
loope
sbb
js
bound
mov
test
orb
movsb
dec
cld
leave
push
sbb
cs
test
cli
adc
fisubs
outsb
icebp
fldcw
loop
xchg
xchg
gs
scas
aas
lock
flds
xlat
adc
lds
in
test
jl
mov
jge
dec
mov
outsb
lock
movsb
cltd
cld
js
cmpl
add
push
fsubrl
add
push
stos
fisttpl
lahf
add
xor
sub
jmp
push
fcomps
add
aam
xorb
push
mov
xchg
mov
pop
xchg
popa
cmp
subb
cmpsb
sti
negb
dec
hlt
xor
xor
dec
adc
jmp
sbb
dec
arpl
jp
adc
test
adc
shrb
aad
adc
stos
pop
pop
rcrb
repz
dec
jae
or
fsubrs
fucomp
sbb
xchg
inc
inc
jne
fdivrp
sbb
insb
rol
aad
inc
dec
rclb
pushf
frstor
inc
mov
or
jns
popa
sarl
jl
push
xlat
adc
call
ret
add
mov
push
xlat
outsl
mov
mov
mov
nop
sbb
je
aad
std
ret
xchg
std
adc
sbb
stos
mov
lea
out
clc
pop
sub
or
sbb
inc
loop
jmp
fidivs
mov
dec
push
cmpsl
add
cmpsl
pop
xor
pushf
ss
testl
arpl
xchg
pop
int3
mul
mov
mov
dec
out
sub
push
or
fldl
sbb
mov
cmp
jecxz
iret
rclb
es
push
lock
mov
dec
adc
inc
shlb
push
ja
dec
std
das
add
lods
pop
mov
shlb
inc
sub
mov
push
or
push
dec
mov
enter
or
sbb
sbb
flds
jmp
pop
outsl
pop
movl
mov
in
or
lcall
xchg
iret
dec
pop
shrl
hlt
cwtl
adcl
daa
inc
out
sahf
testl
pop
xor
out
mov
aad
pop
pop
dec
push
enter
cmpsb
add
out
lcall
xor
or
push
shrl
mov
out
movsl
push
cmp
scas
push
testb
sub
pop
roll
add
mov
mov
mov
pusha
jbe
outsl
scas
pushf
repnz
jb
movsl
mov
pop
scas
adc
xchg
pop
out
lea
frstor
test
nop
cmp
test
aas
sub
mov
rcll
andl
jl
cmp
adc
fldenv
adc
jge
sbb
fs
cmp
jnp
adc
cld
jns
xchg
clc
movsl
mov
shll
into
fdivp
sbb
xchg
loope
adc
testl
dec
mov
pop
repnz
or
pop
fs
fwait
add
push
lods
in
clc
mov
ss
xor
sub
or
and
lods
cmc
jns
stos
mov
mov
cs
movsl
insl
es
mov
sbb
xchg
inc
stos
leave
push
negl
add
stos
inc
or
mulb
mov
inc
jecxz
jge
es
cmp
pop
inc
xor
cmp
leave
and
mov
push
in
and
sub
cmp
aas
mov
mov
pop
lahf
test
sub
movsl
imul
cmp
jp
mov
gs
or
shrb
ficoms
sub
lods
lock
mov
ret
popf
rcr
sbb
pushf
out
cmp
aas
mull
loop
loope
mov
sahf
pop
push
mov
push
pop
sub
in
repz
icebp
stos
dec
pusha
push
mov
sarb
aam
jecxz
inc
cmp
call
imul
mov
push
in
ds
xor
scas
out
scas
push
lcall
out
xlat
cltd
cmp
mov
or
div
insl
sub
in
not
sub
scas
lea
and
pusha
cmp
inc
lods
cmc
fisubl
mov
bound
sbb
int3
stos
push
mov
fimuls
sub
js
leave
mov
call
in
mov
repnz
std
pushf
pop
cmp
push
cltd
cmp
repz
hlt
mov
dec
jae
adc
mov
sub
in
mov
inc
pop
mov
and
sarl
sbb
and
mov
repnz
sub
push
pop
push
shlb
repnz
push
lds
rclb
mov
les
jmp
mov
xor
add
out
mov
popf
into
xor
clc
test
mov
cmp
das
lods
ficoml
inc
or
mov
mov
ja
pop
mov
or
mov
je
sbb
aam
dec
add
jae
fcom
add
or
jnp
inc
xchg
dec
aaa
pop
pusha
dec
push
mov
dec
imul
loope
adc
cmpsl
mov
sti
mov
data16
lcall
and
les
pop
push
push
int
loope
call
inc
pop
inc
mov
sub
push
ds
fsubs
arpl
outsl
mov
decb
sub
cs
mov
aaa
insb
loop
pushf
insb
mov
int3
mov
and
je
xor
adc
cmpsl
sti
imul
sub
cli
jg
ja
mov
leave
loop
fcomp
inc
pop
mov
inc
and
push
and
cmp
or
mov
cld
inc
sbb
mov
arpl
jbe
mov
stos
jp
sbb
sbb
mov
inc
stc
jbe
stc
data16
scas
mov
ss
rcr
aas
out
sahf
in
jp
inc
jecxz
cmp
scas
sub
in
cmp
popa
mov
mov
fnstsw
mov
add
mov
stos
cmpsb
dec
or
iret
sbb
fildl
mov
xchg
out
leave
mov
dec
mov
jne
adc
add
mov
ja
int3
or
aad
add
daa
mov
mov
sti
jae
jae
and
std
repz
pushf
cld
nop
adc
lods
test
add
addr16
jl
adc
sahf
mov
jno
loope
pop
iret
das
cmp
cwtl
dec
sbb
sub
cld
mov
fs
jge
mov
pop
xchg
pop
mov
push
in
xchg
std
rol
push
push
pop
add
xchg
scas
jp,pt
mov
test
cli
lock
jne
and
cmp
push
fs
and
insl
mov
push
jnp
addr16
sub
xchg
inc
imul
hlt
adc
adc
into
jl
pop
mov
lods
ror
repz
and
aas
das
jnp
dec
xchg
mov
or
ret
jne
xorl
shl
cmpsb
xchg
inc
xor
cwtl
adc
sub
rclb
pop
cmpsl
sub
xchg
sbb
in
lahf
jns
and
adc
adc
push
ja
dec
inc
idiv
sub
popf
test
push
xor
in
push
push
inc
push
push
call
out
jno
sub
iret
push
in
mov
loopne
dec
xor
fistpll
in
push
push
add
shrl
mov
frstor
jns
xchg
fisubrl
mov
iret
xchg
xchg
add
mov
add
pop
loopne
pop
pop
pop
pop
sbb
pop
inc
lret
aas
out
mov
sbb
push
mov
or
push
outsb
push
outsl
aaa
cmp
and
movsl
iret
das
pop
sbb
testb
push
mov
cmp
fists
mov
mov
inc
mov
mov
in
sub
xchg
ret
iret
ffree
push
jle
scas
push
imul
cmpl
push
adc
cmp
lock
or
adc
daa
std
test
out
adc
int
sub
adc
fwait
mov
les
xor
cld
pop
push
pop
test
lcall
ljmp
pusha
pusha
xchg
and
repnz
inc
fs
xchg
das
cld
imul
jge
cmc
insl
cs
adc
or
icebp
fsts
mov
xor
lret
inc
mov
cmp
stc
xlat
mov
call
lock
dec
xor
add
push
dec
xor
sub
test
add
dec
bound
jbe
mov
jge
idiv
loop
arpl
das
xchg
int3
jae
aad
daa
and
mov
bound
cmp
mov
push
shrl
sub
aas
adc
mov
scas
sub
add
inc
and
jnp
mov
jl
lea
icebp
jg
jmp
imul
int
das
aas
rcrb
jge
notl
daa
fwait
stos
aad
iret
bound
lea
or
lret
xlat
sub
mov
daa
inc
int
xchg
lret
cmp
mov
add
jno
mov
stos
call
hlt
daa
jb
mov
das
nop
aaa
jo
test
push
and
xchg
push
xor
mov
arpl
mov
cmpsl
sarl
or
lods
jae
cmc
mov
push
mov
stos
push
icebp
sub
icebp
loopne
and
inc
lock
lock
push
das
or
jecxz
sbb
jp
cmp
repnz
push
je
and
insl
mov
rclb
das
xchg
insb
cs
inc
ss
lods
movsl
mov
dec
jnp
arpl
add
subb
lds
pop
xlat
fsts
xor
push
movsl
aaa
mov
push
call
jb
jno
std
jge
cmc
or
fisubrs
jp
stos
popa
adc
cli
xchg
int3
mov
aaa
lods
and
add
mov
jb
sarb
dec
sub
jmp
dec
out
or
fsubr
xorl
fwait
xchg
xchg
cmp
cmpsb
dec
inc
add
mov
jo
js
lock
mov
adc
sbb
mov
push
mov
cmc
add
mov
sar
loop
in
shll
rolb
xchg
mov
rcl
stos
mov
stc
mul
je
mov
in
mov
loope
fists
sbb
fisubrl
add
add
scas
mov
loopne
push
lret
aaa
inc
adc
fadds
xchg
add
sbb
int
add
daa
dec
outsb
adc
shrb
leave
std
mov
clc
push
or
mov
jl
jecxz
decl
data16
cs
popf
adc
add
in
ret
test
and
mov
cmpsl
cmp
scas
jl
stos
dec
arpl
lret
cld
stc
int
and
ret
sti
aaa
jae
leave
das
add
jmp
pop
lods
and
inc
jb
sti
jge
inc
mov
or
push
imul
sahf
imul
mov
sbb
mov
mov
inc
stos
inc
jo
insl
ret
mov
cwtl
jb
add
or
test
in
es
sub
shll
mov
add
in
jp
mov
adc
mov
fimull
mov
xchg
lret
hlt
repnz
jb
mov
insl
pop
lock
xchg
mov
cltd
mov
pop
mov
xchg
mov
pop
inc
push
mov
enter
test
xchg
or
push
push
dec
or
pop
jg
sar
lock
test
add
ret
sbb
push
aas
sub
daa
test
xchg
jne
push
dec
fiadds
dec
xor
sbb
sbb
rcrb
jb
mov
mov
in
int
inc
fistpll
inc
jns
push
or
iret
push
loope
mov
add
sbb
ret
mov
inc
cld
test
cmp
mov
push
mov
inc
push
loop
jnp
popf
inc
add
jecxz
inc
jge
and
addb
subl
mov
push
stos
xor
outsb
pusha
ret
loope
xchg
pop
iret
test
and
inc
jecxz
cltd
jl
arpl
inc
jmp
mov
jl
fdivs
jae
push
bound
pop
sub
insl
ja
js
or
bound
iret
inc
das
mov
mov
pop
fnstsw
mov
aas
inc
adc
ja
pop
jecxz
cltd
lds
or
xor
pop
lcall
pop
sbb
pop
pushf
cmovo
or
cmp
jmp
das
jmp
jbe
and
sbb
rclb
cwtl
addr16
lds
and
ret
cld
jb
loope
mov
repnz
push
cwtl
ficoms
mov
lcall
ret
test
lahf
test
pop
xchg
xlat
and
adc
add
repz
leave
push
pop
dec
xchg
jmp
mov
add
and
adc
push
repz
mov
pop
dec
pop
pop
xor
pop
mov
shlb
adc
mov
jl
xchg
pop
cld
sub
clc
lock
fs
nop
fistpl
xor
popf
xchg
jecxz
stos
add
mov
xchg
insl
sbbl
sbb
xchg
je
sub
loopne
xor
ret
push
rol
hlt
inc
popa
push
dec
xchg
lock
pusha
pop
mov
dec
dec
add
loop
push
jg
out
enter
push
stos
sbb
mov
and
xchg
outsl
lea
stos
addl
mov
xchg
adc
sub
cltd
or
or
fst
or
xor
push
adc
sbb
jb
sbb
pop
fs
sbb
mov
arpl
adc
pop
cmp
int3
pop
add
dec
cmpb
dec
and
imul
xchg
adc
leave
fchs
xchg
xlat
pop
mov
ljmp
add
lock
or
lods
pushf
popa
and
adc
addl
sbb
sbb
out
adc
fistps
sub
mov
divl
popf
test
cmp
rol
subb
push
inc
dec
cmc
xor
pop
lods
bound
mov
lret
int3
cmp
push
mov
and
rcrl
pusha
pop
hlt
imul
leave
pop
cwtl
sbb
xchg
and
cmpsl
and
icebp
jno
ss
mov
jl
jo
in
cmp
incb
push
lret
add
pop
inc
data16
shr
sub
add
lds
dec
push
xchg
repnz
push
add
nop
xor
inc
sub
cs
xchg
xorb
mov
push
test
jmp
cmp
inc
pusha
sub
push
int3
out
jp
clc
dec
mov
repz
adc
enter
das
xor
push
mov
push
and
cli
std
aam
dec
sub
cmp
gs
lret
lcall
mov
xchg
mov
push
sub
dec
xor
xchg
aam
sbb
mov
ret
mov
pop
lcall
ja
in
ja
xchg
clc
cmp
movsb
lret
aad
dec
push
out
mov
sbb
shl
popf
xor
push
shlb
aas
loope
sbb
mov
daa
or
cmpsb
xchg
mov
adcl
cs
pop
jp
movsl
out
lahf
sbb
mov
adc
addr16
xchg
shr
jge
pop
fsubs
xchg
lret
scas
sbb
jmp
fimuls
movsl
in
incl
push
mov
negb
or
ret
mov
jge
cmp
je
mov
lds
add
add
push
inc
jl
sub
das
test
in
sub
fldenv
js
mov
lds
mov
ret
stos
mov
inc
das
mov
sbb
dec
mov
xor
mov
push
add
mov
xchg
push
dec
rorl
adc
jg
lcall
pop
outsl
xor
dec
jp
mov
adc
data16
mov
cmp
pop
icebp
jmp
aas
push
mov
xor
jl
jecxz
test
stos
xlat
daa
pop
rclb
ljmp
std
cmpsb
add
pushl
cmp
add
stc
std
lret
add
pop
jmp
xor
or
pop
stc
in
in
push
fcmovu
xor
nop
jbe
cld
out
push
adc
fnstsw
int
loope
sbb
push
inc
rcll
dec
clc
xor
lret
pop
imul
fiadds
daa
jb
in
gs
negb
dec
vmovntps
sbb
out
and
imul
icebp
pushf
jae
sbb
in
mov
and
jns
mov
sub
xchg
test
fwait
jecxz
lea
or
jl
das
pop
repz
cmp
clc
lock
ds
push
mov
repnz
fs
fistl
cmc
mov
ljmp
enter
inc
dec
div
ret
ljmp
xchg
add
cmp
sub
xor
jecxz
push
add
pusha
insl
cmp
outsb
mov
out
test
hlt
imul
mov
mov
sub
daa
in
aad
pop
insl
push
xor
cmp
pusha
out
mov
ds
andl
cli
mov
sahf
leave
cmp
outsb
ds
xchg
xchg
mov
cwtl
inc
push
mov
and
lret
or
mov
mov
scas
jbe
sarb
xchg
dec
movsb
icebp
mov
mulb
and
fisubs
jns
and
in
imul
pop
jae
sub
outsb
add
pop
cmpsb
mov
pushf
mov
or
mov
adc
js
dec
sbb
jbe
inc
cmc
call
ret
jns
or
sub
or
rcl
mov
push
bnd
jo
and
or
add
adc
add
adc
sti
pop
and
fwait
nop
mov
jp
cli
add
popa
sbb
sbb
inc
xchg
or
stos
mov
popa
inc
std
imul
sbb
mov
mov
lods
das
sbb
fdivs
or
adc
std
or
repnz
adc
ficompl
scas
mov
mov
sbb
jle
xchg
call
jle
cli
fadd
cwtl
js
inc
cmp
jb
sbb
ret
cld
aam
jno
ret
aad
cmp
push
adc
mov
jecxz
icebp
sbb
inc
test
adc
leave
dec
jo
jno
orl
sahf
mov
push
shlb
sub
jae
mov
icebp
mov
inc
xchg
mov
sbb
mov
xor
mov
xorb
push
movsb
xchg
out
cmp
lock
lahf
cmp
adc
adc
lret
repnz
sbb
stos
movsb
test
call
rorl
jg
adc
ss
test
scas
lcall
push
cmp
jmp
imul
lock
in
popa
xor
pop
sbb
ret
lock
ss
inc
les
mov
jb
js
ss
ss
pop
mov
or
enter
jle
cwtl
clc
or
lock
inc
jge
sbb
das
and
sarb
sahf
mov
repnz
jae
or
xchg
stos
sti
andps
nop
mov
loopne
jbe
lds
jle
imul
int3
daa
dec
or
idiv
sbb
mov
pop
cltd
jmp
stos
push
into
mov
xor
jecxz
xor
mov
jp
push
into
push
jne
aad
push
rolb
add
xchg
add
jbe
xor
mov
iret
mov
xchg
fmul
lret
ds
mov
leave
pop
jo
pop
xchg
out
pushf
cwtl
pop
rcrb
mov
addr16
cli
addl
dec
push
pop
sub
jne
stc
enter
adc
pop
adc
inc
dec
ja
inc
mov
in
mov
adc
xchg
xchg
jb
xchg
mov
out
hlt
out
pop
sbb
adc
das
adc
sub
cld
je
iret
test
test
push
js
mov
test
mov
sub
in
aaa
inc
pop
cltd
xlat
aam
sub
fldl
jnp
and
out
push
mov
popa
dec
dec
rcrl
les
push
push
int
xchg
jo
cs
mov
aam
dec
aas
inc
xor
repnz
add
xchg
dec
into
mov
daa
inc
call
push
call
pmulhuw
mov
out
xchg
push
nop
dec
push
dec
xchg
adc
cmp
dec
popf
sbb
outsl
xchg
xchg
mov
inc
stos
jae
movsl
mov
xchg
xchg
mov
shrl
fucomi
hlt
cs
daa
pop
lea
or
popf
fdivrs
aaa
add
xchg
mov
xchg
cmp
jmp
jbe
lock
add
cmpl
rol
iret
and
popf
xor
inc
sbb
xlat
stc
push
xor
mov
mov
test
adc
cmpl
scas
fidivs
lock
arpl
popa
sbb
sbb
fucomip
rclb
push
mov
daa
sbb
std
adc
test
stos
subl
mov
fisttps
mov
pop
outsb
jge
mov
movl
xchg
shll
clc
mov
inc
jnp
ss
test
icebp
daa
mov
sbb
aaa
ljmp
stos
sahf
xchg
inc
lret
xchg
push
sbb
test
pop
push
mov
sbb
jno
out
gs
icebp
pop
in
and
sarl
shlb
int3
mov
push
hlt
std
jmp
icebp
scas
dec
sub
push
pop
dec
pop
xchg
cld
or
fnstsw
adc
or
adc
int3
sti
xor
cltd
push
inc
das
enter
cmpsl
data16
add
call
inc
cmp
sahf
test
in
pop
nop
adc
test
pusha
or
mov
inc
inc
movsl
in
repz
daa
xchg
and
fimuls
and
stc
test
or
dec
mov
cmp
gs
xchg
and
or
test
mov
into
or
xchg
insb
mov
js
xchg
adc
cmp
pusha
and
mov
mov
sub
cli
mov
cmpsb
fsubl
arpl
ljmp
stc
sahf
adc
int3
movsb
sbb
push
aad
mov
into
mov
addps
pop
pop
push
add
fwait
mov
sbb
pusha
test
xchg
jl
and
mov
mov
sahf
insb
sbb
or
daa
and
mov
mov
and
jo
jae
or
xor
aad
sbb
mov
mov
int3
fmull
mov
pop
or
fisttpl
push
cmp
das
in
decl
iret
cmp
repz
mov
pushf
mov
daa
add
xor
ret
jbe
rcrl
fsubs
inc
imul
jo
sti
scas
lahf
cmpsb
addr16
mov
ja
mov
out
stc
pop
ljmp
ret
imul
fbstp
mov
cld
popf
outsl
lret
es
lods
push
test
mov
popf
pop
mov
insb
push
aas
dec
and
jne
idivb
push
xor
sti
push
loopne
xchg
add
and
jp
cmp
pop
inc
push
addl
stc
stos
lret
lods
mov
mov
fsubr
ret
mov
fstps
test
pop
es
mov
jns
decb
dec
sbb
jae
nop
add
popf
jae
jno
int
into
push
push
sbb
mov
xchg
pusha
push
out
adc
mov
fwait
sbbl
pop
push
out
pop
mov
movsw
cmpl
lds
repnz
pop
aad
or
std
shlb
mov
sbb
sbb
sbb
adcl
pop
data16
inc
inc
xor
mov
mov
jns
test
daa
add
adc
mov
in
rclb
jae
repnz
jne
popf
push
into
cmpsb
add
jmp
or
and
inc
xor
cmp
mov
mov
inc
or
lods
fsubl
mov
daa
jb
mov
std
push
and
pop
push
out
je
jle
lea
xlat
cmp
ret
dec
sbbl
pop
mov
fisttpl
mov
adcl
nop
pop
pop
and
dec
icebp
rcll
out
mov
shrl
xlat
std
std
fistpl
fisubrl
sub
clc
lods
mov
lea
pop
and
imul
mov
lcall
ja
fimull
fidivl
jle
push
mov
dec
mov
xchg
stos
mov
lret
dec
jne
imul
imul
outsb
dec
jl
imul
pop
faddl
aaa
testb
or
push
mov
lret
fisubrs
divl
xor
std
lcall
mov
mov
jle
testl
push
jmp
outsl
adc
and
jmp
sub
sbb
call
cmp
outsl
xchg
cmp
outsb
sahf
or
cld
mov
adc
in
popa
cmp
scas
sahf
sbb
out
mov
or
push
push
fldt
push
xchg
adc
jl
xor
lock
imul
add
pushl
test
fstps
pop
cwtl
fcmove
addl
loop
cli
daa
xchg
jle
sub
inc
scas
test
into
inc
orb
out
mov
or
bswap
out
subb
xor
jne
adc
sbb
aas
fisttps
sbb
roll
shrl
push
enter
add
lret
daa
mov
jns
push
pop
es
je
inc
cmp
push
inc
jmp
mov
xor
jb
dec
fstpt
mov
popa
push
gs
pop
push
adc
sbb
mov
mov
cltd
ret
mov
ret
pop
dec
rorl
into
inc
mov
sub
push
mov
and
test
mov
and
mov
movb
xchg
shl
mov
arpl
mov
push
and
ret
sahf
jge
jp
dec
lcall
std
lret
lods
imul
pop
adcb
fcoml
push
sub
sbb
ljmp
imul
add
rcrl
cli
fcoml
mov
mov
mov
and
ss
mov
cld
ffree
mov
pop
dec
dec
pop
sub
sbb
xor
dec
jle
or
sbb
inc
int3
loope
mov
mov
sub
jbe
cmp
mov
lahf
mov
cwtl
cmp
test
and
pop
mov
mov
xchg
mov
mov
or
pushl
xlat
add
movq
and
insb
inc
insb
or
jbe
mov
repnz
out
jp
xchg
mov
xchg
ljmp
mov
sbb
jmp
call
mov
pop
lods
scas
orb
insl
cwtl
inc
sarb
cwtl
in
in
mov
sub
ss
mov
or
jb
mov
rcll
cmp
lcall
sti
sbb
out
mov
sbb
repz
outsl
dec
rep
push
lock
push
adc
xchg
pop
adc
pop
loopne
xchg
inc
dec
mov
mov
mov
jno
pop
movsl
xchg
jbe
sub
xor
xchg
dec
mov
ss
mov
roll
ret
xor
into
lods
insb
or
jbe
push
loope
mov
fisttpll
xchg
jl
mov
or
std
mov
and
mov
or
call
xchg
flds
inc
xchg
inc
gs
xor
add
sbb
mov
mov
add
push
ret
iret
outsb
loopne
lahf
mov
or
int
push
sarl
aad
loope
mov
jp
inc
sub
out
xchg
add
sbb
scas
and
jno
test
sbb
push
addr16
push
ret
add
add
push
jno
pop
cmp
sarb
pop
jle
inc
dec
popa
cmp
cmp
mov
xor
js
push
sbb
mov
and
fs
fsubp
cmp
rolb
fstps
jmp
sti
aaa
push
cmpsl
in
cmp
cmc
imulb
jbe
sbb
and
cld
mov
mov
mov
push
jns
cmpsl
mov
test
sub
push
jo
test
sub
inc
push
mov
pop
adc
push
dec
hlt
mov
sahf
adc
movsl
xchg
jmp
in
test
int
mov
mov
popa
cmc
and
mov
mov
cltd
fs
js
nop
inc
and
push
mov
lods
cwtl
pop
mov
js
in
pop
les
lock
and
insl
sahf
mov
adc
jl
test
cmp
pop
fs
imul
sub
and
outsb
mov
scas
insb
out
negb
sub
mov
dec
inc
lods
cmpsb
nop
inc
push
mov
dec
repz
mov
xchg
out
jp
adc
push
pop
jo
test
out
sahf
pop
mov
sub
popa
lods
mov
div
into
lds
icebp
xlat
out
cwtl
ds
jo
je
lds
sub
cli
push
insb
stc
bound
lahf
pop
out
mov
loopne
or
jg
and
int
into
repz
push
imul
stos
sbb
mov
inc
mov
sbb
mov
and
pop
lock
inc
mov
aas
lcall
scas
inc
push
push
hlt
into
jle
int
jbe
pop
mov
inc
mov
int
rcr
imul
aam
dec
or
test
mov
sub
stos
test
or
sub
fadds
repnz
adc
mov
jne
sbb
pop
fdivrl
mov
xchg
push
cmc
cmpsl
aad
pop
or
push
hlt
in
mov
push
das
lock
scas
in
je
adc
pop
pushf
mov
and
stos
add
ja
jbe
push
mov
std
adc
mov
scas
dec
outsb
ljmp
sub
pushf
cwtl
xchg
fwait
push
out
test
mov
into
cmp
imul
pushf
and
cmp
inc
sti
mov
sbb
dec
adc
dec
mov
pop
mov
and
cmp
mov
and
mov
dec
push
rcrb
in
out
mov
or
sarl
sbb
and
push
into
add
in
adc
cmc
mov
jbe
sub
pushl
mull
inc
out
dec
xchg
pop
int3
ret
sbb
push
cmc
clc
sub
push
and
mov
mov
repz
das
rolb
xchg
cmp
pop
iret
frstor
jmp
sbb
cwtl
mov
add
xchg
pop
es
xorb
fists
xlat
hlt
mov
into
out
push
loop
cmp
in
rorl
push
cmp
push
addr16
pusha
push
repz
out
imul
mov
add
jecxz
inc
inc
jecxz
sbb
shlb
cs
jmp
sub
ljmp
icebp
xchg
dec
inc
xchg
mov
pop
xor
insb
inc
lock
pop
or
scas
add
lea
movsb
out
mov
or
xchg
rcr
stos
adc
or
mov
cmp
xchg
leave
add
pop
sub
lahf
dec
ljmp
and
fsubl
cld
clc
gs
cmp
push
in
xchg
loopne
jmp
ret
dec
xor
cmp
jl
or
cmp
hlt
dec
imull
lret
movsl
shrb
decb
sbb
sti
xchg
in
cmp
bswap
push
push
push
xlat
sbb
cs
dec
sbb
lods
shll
mov
popf
lret
addr16
nop
mov
mov
pop
icebp
sarl
out
movaps
sub
sbb
lret
xor
mov
ret
fidivs
adc
cld
pushf
les
sbb
xor
sarb
jnp
movsb
pop
mov
xchg
insl
jmp
int3
sbb
fbld
addr16
push
add
in
aas
sahf
cmc
cmp
sbb
pop
out
sbb
pop
xchg
into
add
insl
xorl
mov
pop
adc
push
fcmovnu
popl
fisubl
test
push
inc
inc
cmc
ret
dec
and
and
jb
out
mov
das
pop
out
pusha
fbstp
pop
leave
mov
shll
popf
notl
movsl
cli
nop
scas
add
xchg
mov
cmp
or
repz
stos
jp
in
xchg
push
in
or
in
daa
mov
cmc
dec
out
mov
jge
xor
inc
mov
fcoms
loopne
lret
push
xor
xchg
sti
or
rorl
or
ret
push
jmp
pop
roll
jne
movsb
mov
or
pop
sbb
add
or
push
sbb
mov
mov
or
push
insb
mov
gs
jg
aad
in
in
or
pop
cmp
aam
mov
test
xchg
aam
mov
or
push
mov
ror
lods
test
lret
sbb
call
dec
ss
cli
dec
or
repz
jae
scas
daa
pushf
mov
lcall
pop
push
subb
cwtl
and
loope
xlat
and
nop
cwtl
aam
loop
ficomps
cmc
in
dec
xchg
lret
cs
sub
fwait
lods
cmc
mov
sub
xor
jmp
mov
cmp
inc
repnz
jb
push
aas
popa
jle
xchg
dec
push
cmp
xor
insb
fildll
xlat
ljmp
rol
popf
leave
leave
inc
or
int
fidivl
movl
rcr
mov
pop
pushf
imul
jge
mov
mov
or
nopl
mov
lock
dec
outsb
fdivrs
lods
ljmp
and
insl
and
lea
cmp
pushf
xchg
pop
aam
loopne
idivl
aam
lods
movsb
aad
and
sub
and
roll
scas
sbb
xchg
lahf
clc
test
sti
in
fmul
lock
push
mov
jecxz
sub
sub
or
mov
mov
stc
cmp
sbb
or
aas
insb
icebp
xchg
push
inc
hlt
sbb
outsb
sbb
rorl
shlb
movsb
xor
dec
movzwl
sti
lret
jmp
ror
inc
mov
push
cmp
push
loope
xor
or
pop
xchg
ja
jge
pop
sub
xchg
mov
insb
inc
lcall
out
repz
xor
jnp
xchg
xchg
or
inc
mov
xchg
jp
push
cli
clc
in
fstl
mov
mov
fsubr
das
xchg
jns
ss
fsubr
xor
jge
push
in
add
add
outsb
xor
mov
daa
dec
cmpsl
popf
les
fwait
cmp
jl
cltd
fcoml
popf
jno
andb
lcall
cmp
aas
std
and
icebp
mov
mov
sti
mov
call
shrb
cmp
pop
xlat
cmpsl
mov
or
add
fcompp
loop
sbb
aad
pop
sbb
test
sbb
out
mov
cwtl
rep
rolb
repnz
pop
push
lods
popa
jle
imul
inc
jle
cwtl
cmp
sub
adcb
mov
jmp
pop
xor
or
push
fidivrl
negl
xchg
jp
stos
addr16
nop
aaa
add
xor
scas
jbe
pop
mov
je
fildl
fcomps
or
xchg
lcall
repz
in
pop
in
test
push
aam
inc
and
repnz
aad
jno
jno
xchg
sarb
sub
rcrb
pop
pop
adc
jbe
out
cs
mov
cmpsl
loop
test
lods
stos
fs
sbb
ja
xchg
enter
inc
adc
lods
inc
dec
pusha
adc
cmp
jl
int3
xchg
test
xchg
cmpb
sub
or
xor
repnz
mov
mov
jnp
notl
add
fcomi
fbstp
leave
add
jbe
lea
jle
push
movsb
icebp
sub
xor
cmp
pop
scas
xor
test
out
cmpsb
and
repnz
xor
roll
xlat
hlt
cmp
repz
sbb
or
dec
fs
dec
cmpsb
je
mov
and
mov
cmpsl
nop
outsl
aaa
jmp
insb
cmpsl
jmp
jg
push
dec
gs
call
xor
ja
test
or
pop
ss
jmp
and
mov
jge
mov
push
aas
mov
mov
std
or
jb
ffree
cs
cmp
xchg
ja
stos
xchg
pop
jle
sub
xchg
push
shll
xchg
sahf
dec
paddusw
cmp
sub
arpl
mov
daa
enter
imul
inc
inc
cwtl
fs
sbb
imul
sub
xor
xchg
adc
gs
dec
push
xchg
mov
adc
mov
sub
jnp
repz
aam
push
fistpl
mov
mov
jb
mov
jb
pop
or
jle
out
mov
enter
pusha
icebp
sub
sbb
lds
cmp
and
pushf
int3
push
sarl
outsl
jae
mov
repnz
loop
mov
mov
pop
push
fcoms
imul
inc
jle
jl
sti
mov
inc
popa
test
xor
pusha
dec
stc
out
lock
shlb
test
add
inc
stc
sub
stos
mov
in
add
mov
xor
leave
mov
sti
mov
popa
xchg
mov
lea
addr16
add
cmpl
sbb
add
inc
imul
out
jl
or
add
xlat
push
jne
das
push
dec
divb
mov
push
testl
xchg
xchg
fxtract
and
dec
ja
nop
inc
dec
cltd
adc
dec
hlt
push
in
icebp
loope
push
lret
std
and
popf
lret
fs
lods
mov
addl
aas
or
and
xor
mov
enter
pop
imul
sub
sahf
aam
in
jg
sub
mov
sub
dec
cmpb
daa
jbe
mov
push
sbb
mov
add
jg
mov
cmpsl
sti
jb
xor
push
mov
aaa
jg
jp
mov
xchg
xlat
jle
mov
test
js
fimuls
popa
ljmp
cwtl
psraw
push
jb
and
loope
mov
roll
inc
lds
sbb
mov
negl
pusha
mov
int
mov
mov
jns
clc
and
xchg
hlt
rcr
aas
fs
bound
pop
xchg
pop
or
cli
outsb
fwait
cmp
inc
arpl
and
inc
sete
mov
jge
sub
fistpll
out
sarl
mov
loop
mov
dec
loope
pusha
addb
loopne
jp
aad
cmpsl
cltd
dec
add
icebp
sbb
push
std
or
mov
inc
jns
jp
adc
xchg
add
es
test
adc
fistpl
aam
out
int3
cmp
pop
add
addb
aaa
jmp
dec
lods
pop
andl
mov
xor
mov
inc
pop
sarb
pop
xchg
into
es
ror
in
and
sub
hlt
push
dec
shr
cmp
addr16
jo
push
cltd
mov
or
cmc
test
repz
rorb
mov
add
int3
stos
cltd
rorb
push
push
mov
xor
paddusw
lahf
stc
leave
or
xor
sbb
or
add
jle
sbb
and
call
gs
dec
cltd
insb
out
test
mov
popf
mov
adc
mov
stos
pushf
xchg
gs
cs
inc
shrl
jb
outsb
mov
xor
jb
pop
aas
out
inc
xor
and
inc
mov
sbb
mov
or
jp
cltd
mov
mov
std
scas
repnz
mov
imul
push
pop
add
lock
hlt
loopne
sub
xor
fsubl
sbb
stos
adc
pop
push
xchg
mov
jl
adc
addl
jge
es
mov
rclb
jmp
into
repnz
xor
ret
clc
jmp
mov
das
mov
jno
inc
inc
movsl
dec
pop
ljmp
jge
icebp
mulb
lret
ret
jl
jp
lock
jno
dec
inc
or
jge
fs
pop
sbb
popa
call
rcl
pop
sub
dec
mov
nop
xchg
repz
dec
mov
xchg
push
call
jg
or
cmc
lds
sub
leave
jb
mov
std
fmull
mov
add
jnp
out
cmpsl
inc
in
sub
dec
aad
mov
or
push
outsl
insb
dec
xchg
cmp
hlt
loop
jno
pop
outsl
push
in
out
fmuls
mov
xor
push
inc
jns
dec
jle
sub
mov
push
mov
nop
gs
mov
mov
addr16
and
hlt
shl
dec
int3
mov
or
inc
lret
xchg
xor
and
xchg
aas
int3
mov
mov
adcb
cmp
pop
test
sbb
xlat
testb
icebp
pushf
and
and
mov
nop
cmpsl
lock
sbb
pop
int3
inc
pop
lret
rorl
fstpt
les
push
push
xchg
subb
push
pop
out
inc
int
mov
jl
or
xchg
pop
js
data16
test
dec
pop
xchg
adc
cmp
jmp
pop
sbb
pop
cmp
outsl
mov
jmp
test
lods
cltd
lods
or
lock
ret
fcmove
and
pushf
jp
ret
and
sarl
lret
adc
or
movsl
out
out
jp
sahf
jle
repz
js
popa
jmp
sbbb
jg
cwtl
outsl
jmp
jge
adc
call
xchg
aam
jmp
arpl
dec
pop
add
mov
shr
or
in
add
sbb
xchg
mov
flds
mov
lahf
notb
and
push
addr16
lret
xlat
add
or
pop
fldl
movsb
or
add
mov
out
sub
push
out
insl
jb
pop
adc
negb
xchg
mov
adc
fdivp
nop
ljmp
sti
or
push
and
iret
mov
push
mov
popa
movsb
leave
and
jae
pop
in
push
sbb
and
stos
pusha
xor
outsb
arpl
and
mov
in
xor
pop
bsr
and
mov
push
leave
lea
arpl
jl
push
aas
jns
cwtl
or
shlb
add
xor
mov
lret
lahf
xchg
test
pop
iret
scas
scas
and
jp,pt
pop
in
insl
popa
faddl
int
fptan
adc
xchg
mov
int
xchg
inc
xchg
pop
mov
arpl
pop
andl
mov
in
int
imul
sbb
mov
mov
shrb
js
jns
push
invd
jns
inc
xchg
push
imul
mov
sbb
adc
pusha
sti
pop
arpl
sub
sub
movsb
mov
sub
mov
sbb
rcll
or
mov
cmp
rclw
mov
mov
inc
addr16
aas
jl
les
aam
test
push
sahf
sahf
testl
in
insl
aam
jbe
cmpsl
inc
push
leave
jno
mov
sti
jmp
xchg
pushf
xchg
dec
idivb
movsl
imul
add
mov
bound
outsl
icebp
or
jnp
out
in
push
adc
aas
jecxz
push
sub
fidivl
mov
mov
jge
ret
push
mov
add
mov
or
add
cmp
cmp
jecxz
imull
fidivl
adc
stc
jmp
insl
pusha
in
lock
mov
mov
in
jo
add
test
inc
adc
shll
insl
movsl
fld
out
cmp
call
ljmp
leave
cmp
mov
es
cmp
jmp
clc
jmp
push
pop
add
cmpsb
aad
addr16
adc
lds
and
inc
mov
lcall
pop
mov
jmp
cwtl
and
inc
hlt
insl
cmp
out
cmp
in
repnz
in
mov
and
adc
loope
arpl
xlat
leave
rclb
fwait
in
aaa
out
pushf
dec
xchg
and
lods
inc
addb
sahf
or
mov
add
ljmp
fs
faddl
test
into
dec
cmp
out
mov
jae
cltd
mov
in
lcall
mov
in
out
adc
jge
fmulp
mov
xchg
popa
popa
lea
sub
in
cmp
pop
ret
pop
pop
jmp
xlat
or
hlt
call
rolb
pop
popf
push
and
in
and
add
mov
lods
dec
lock
lock
xor
imul
dec
ficompl
push
lahf
repnz
pop
push
and
imul
test
test
add
xor
pop
xchg
ljmp
rcr
div
fcompp
aad
imul
outsl
mov
cmp
lea
lret
pop
inc
mov
push
pop
inc
push
inc
ljmp
and
fidivl
sub
int
add
mov
cmpsb
cmp
out
out
dec
clc
sub
sbb
bound
lds
adc
gs
outsl
sub
stos
push
scas
idivb
out
add
lret
test
cmp
pushf
sbb
es
xchg
jge
shll
fs
jnp
jge
sahf
jb
aas
test
jae
mov
loopne
push
mov
les
rcr
data16
inc
icebp
insl
pop
shl
gs
jnp
loopne
test
xchg
mov
cwtl
aam
xor
cli
stc
rcl
cmpsl
stos
mov
addb
shll
stos
out
sahf
jge
loopne
js
dec
movsb
pop
loope
pusha
and
fs
nop
mov
sbb
or
xor
mov
sub
mov
iret
loop
mov
sbb
lock
jmp
cmp
inc
jmp
movsl
aaa
xchg
cld
jmp
adc
mov
jo
div
add
sub
rolb
int3
int3
pop
in
ret
gs
call
cld
mov
into
xchg
sbb
jno
cmp
xchg
push
or
cmp
xchg
push
arpl
enter
push
fidivl
jbe
xor
popa
adcb
hlt
mov
and
lret
icebp
jns
mov
imul
xchg
ja
les
clc
push
jnp
push
int3
pop
cld
fdivl
push
aam
add
xor
das
add
es
mov
xchg
iret
icebp
repz
lea
jp
xlat
stc
fs
loopne
pop
jl
std
js
cmp
push
mov
fldt
push
jg
stos
jle
mov
or
lods
inc
xor
bound
cmp
ss
leave
dec
fildl
xor
repnz
popw
and
adc
or
jle
xchg
mov
cltd
adcb
cwtl
push
mov
add
popf
outsb
and
fwait
xchg
pusha
push
in
jmp
loop
faddl
pop
popl
lahf
inc
lret
xor
add
shrl
dec
xor
push
cltd
mov
rcl
pop
movsl
cmp
mov
fstps
bound
sub
mov
sbb
lret
repnz
je
dec
les
cld
xorb
or
leave
das
rcrb
dec
mov
stos
and
add
outsb
lret
shlb
sub
aaa
mov
fcompl
and
lcall
sub
lahf
jo
movsb
lahf
cmp
dec
lret
sbb
push
pushf
dec
loope
sub
jge
pop
fs
push
xor
je
xchg
repnz
cmpsb
xchg
fisubrl
popf
or
loope
sub
xor
or
xor
jnp
fistl
lds
push
cmpb
fiaddl
stos
js
ret
sub
xor
test
enter
pop
nop
inc
lret
lcall
pop
cwtl
lods
cld
push
ret
or
imul
into
jge
ret
mov
daa
and
adc
and
push
cwtl
shll
sbb
mov
sar
lods
jmp
test
jno
cltd
xchg
daa
addr16
and
hlt
sub
ja
mov
leave
test
fstps
sub
mov
fsubrl
out
sbbb
mov
pushf
filds
xchg
addr16
decb
stos
push
xor
decb
data16
mov
scas
das
std
add
lret
fldcw
mov
mov
in
sbb
or
add
mov
dec
xchg
sti
fiaddl
rcr
inc
add
stos
cmpb
sub
mov
stos
mov
inc
insb
pop
inc
jnp
mov
cmpsl
popf
scas
es
jecxz
mov
test
mov
push
and
movsl
nop
imul
push
aam
mov
nop
xchg
mov
xchg
inc
pop
add
xor
repz
jge
shrl
pushf
rol
or
ds
ret
push
push
out
incb
sbb
mov
push
mov
test
push
stos
jmp
lods
sti
jne
pop
mov
pop
sub
pop
sub
pop
or
mov
sti
jp
xchg
fs
jl
dec
cli
and
in
into
loop
adc
add
jle
fdivrs
mov
lret
inc
sbb
test
cmp
inc
es
sbb
cld
stos
mov
dec
imul
in
jno
push
sbb
outsb
mov
jl
insb
inc
jecxz
data16
mov
xor
xor
das
mov
xchg
push
pusha
xor
cli
mov
dec
jne
loope
jl
popw
dec
sti
or
sbb
dec
fadds
mov
pop
shl
push
ror
push
mov
or
testl
in
xchg
out
mov
lret
sub
xchg
pop
insl
sbbb
int
sbb
push
sbb
add
repz
sub
adc
out
push
and
add
mov
fnstsw
fnstenv
mov
cmc
inc
clc
sbb
lods
jp
pop
lds
ud2
pop
mov
scas
mov
mov
scas
jmp
in
call
repz
out
jne
sbb
lret
daa
stos
sar
jne
repnz
dec
inc
sahf
ror
mov
xchg
mov
addr16
and
mov
xor
mov
cld
les
adc
in
sub
aad
fdiv
cmp
sti
inc
adc
ja
mov
aad
pop
or
push
fisubrl
jp
xor
mov
aaa
ss
out
cs
or
movsbl
shr
mov
push
push
lret
mov
aad
clc
pop
les
mov
call
cli
cmpsl
hlt
lgs
js
shl
add
fistpll
aaa
in
fwait
jnp
imul
mov
adc
iret
mov
arpl
and
dec
cmp
cmp
push
cmp
adc
popa
mov
push
push
inc
xor
dec
loopne
lock
inc
dec
lcall
xchg
cltd
pop
arpl
xor
int3
and
mov
clc
fidivrs
aas
jb
lods
dec
aam
dec
orl
sub
mov
pop
daa
filds
sbb
adc
into
sub
test
cmp
adcl
pop
and
pusha
push
add
and
data16
fsubl
pop
xor
insb
sbb
dec
shll
test
pop
mov
sub
cmp
pop
jl
add
ret
loopne
mov
mov
lods
push
fmulp
leave
repnz
pushf
xor
and
cmpsl
cmpsl
data16
clc
dec
pop
aad
sub
mov
lock
mov
repz
cmp
fisubl
shlb
imull
shll
popf
shlb
sbb
pop
xchg
pop
mov
movl
adc
jp
cmp
push
lods
ss
dec
stos
pop
jmp
mov
jp
data16
xchg
cwtl
aad
shll
xchg
int3
popf
scas
and
fildl
pusha
sbb
push
inc
icebp
ret
sub
push
inc
js
mov
hlt
cmp
adc
into
aam
dec
and
jge
fdivrs
cltd
mov
test
loop
imul
outsb
mov
icebp
or
jne
adc
adc
lret
mov
les
mov
out
fs
insl
ja
lds
add
gs
fildl
adc
dec
lea
enter
shrl
rolb
enter
lahf
cmp
fwait
mov
fs
or
cmp
mov
fs
pop
incb
jns
mulb
mov
mov
cmp
jp
ss
mov
jno
rcll
fcoms
iret
dec
lret
les
sbb
test
push
lock
xor
rol
jae
ret
or
out
mov
xchg
lods
iret
cmp
push
push
icebp
lods
xchg
jo
xchg
cltd
shlb
push
roll
or
stos
mulb
sbb
dec
xor
pop
inc
or
sub
and
xchg
repnz
aas
mov
cmpsl
mov
inc
add
movntq
sbb
lea
sbbb
sahf
insl
int
divl
pop
adc
mov
adc
hlt
xchg
jne
movsb
sub
add
add
aad
std
je
cmp
lret
out
mov
push
repnz
xchg
into
fdivl
sbb
cmpxchg
mov
mov
lods
mov
xor
test
sti
enter
outsl
or
repz
ljmp
testl
adc
sbb
pushf
pop
cmpsb
aaa
and
mov
cltd
addr16
lds
mov
repz
nop
inc
insl
jno
jbe
inc
stos
pop
adc
xor
push
or
jae
mov
mov
jo
sbb
aaa
in
mov
pop
inc
inc
sahf
outsl
and
test
jle
pop
mov
mov
int
je
idivl
mov
lret
push
adc
pusha
imul
shr
insl
xchg
mov
inc
imul
stos
adc
out
dec
repnz
into
pusha
push
popa
call
js
popa
adc
inc
sarb
xor
sbb
fmull
cltd
or
xor
ror
nop
fisubrl
or
mov
sub
outsl
test
mov
dec
lock
inc
sub
mov
inc
daa
jl
jnp
lcall
leave
mov
movsb
or
testl
das
js
pop
test
rolb
mov
stc
fs
pop
mov
das
test
xor
std
arpl
clc
xchg
out
mov
inc
mov
addr16
incl
cmpsb
push
or
and
mul
and
fsubrs
pop
dec
cltd
stos
rolb
insb
add
in
mov
add
cmp
aaa
into
dec
pop
lret
mov
cmp
push
sub
mov
iret
bound
dec
cmc
lock
mov
lret
addb
pop
rclb
inc
insl
push
jbe
cmp
shr
jg
lahf
ja
xchg
xor
repnz
int3
mov
jno
mull
mov
lods
stc
sub
fs
lahf
arpl
or
incb
xchg
out
insb
mov
stc
mov
push
shr
mov
xor
inc
jge
adc
hlt
in
sub
jmp
or
cmp
pop
and
mov
push
lock
sub
fisubrs
adc
lods
xchg
roll
mov
lret
or
pop
dec
rcrl
std
push
je
insl
inc
clc
cmp
xor
push
and
mov
repnz
push
push
imul
jnp
enter
in
mul
movsl
pop
sub
jns
cmc
and
xchg
and
outsb
mov
adc
xlat
cmc
iret
mov
mov
add
imul
mov
jnp
fs
inc
test
sbb
out
sbb
scas
shrl
lret
sub
clc
lock
and
lcall
sahf
jmp
add
sbb
inc
jb
loopne
lock
rcrb
pushf
cmc
stos
push
cmp
cmp
xorb
xchg
imul
jge
xchg
clc
mov
sahf
stos
movsb
dec
jb
pop
lock
jp
ret
shr
dec
test
nop
and
ja
sbb
mov
sub
sub
jno
into
sub
xchg
int3
push
out
mov
adc
jl
xchg
iret
daa
and
insl
add
pusha
mov
mov
sbb
mov
xchg
jns
inc
ret
dec
inc
sbb
dec
push
lods
icebp
xchg
cmp
dec
aaa
cli
ljmp
in
adc
scas
testl
pushf
xlat
pop
push
or
xchg
cli
loopne
outsl
push
sub
lret
xlat
adc
adc
adc
call
fcomi
shrl
mov
push
jnp
inc
cmpsb
inc
stos
in
xchg
lock
jb
cmpsb
xchg
pop
rorl
mov
inc
sbb
insl
push
fwait
pop
push
lahf
mov
mov
sbbb
movsl
jg
pop
xchg
addb
cmp
sub
push
aas
jae
cmp
out
xchg
iret
sub
mov
mov
pop
pop
imul
or
and
in
stc
inc
mov
push
fs
fnstsw
pop
dec
inc
out
inc
push
push
or
fistpll
sbb
push
cmp
mov
negl
adc
add
cltd
push
dec
or
xlat
mov
sbb
jle
loopne
fstpt
repnz
pushf
cwtl
jns
stos
dec
jmp
adc
pop
or
xor
jp
clc
fwait
cs
jmp
adc
xchg
jp
jecxz
cmp
cmp
mov
cli
inc
jp
std
std
rcl
test
cwtl
pop
mov
xchg
repz
mov
pushf
xor
aas
lcall
and
mov
leave
iret
and
xchg
add
jns
cmpsl
aad
sbb
sbb
lock
push
addr16
xor
jp
gs
xchg
stos
add
arpl
jle
sub
int3
jl
cmp
and
cs
jl
popf
test
ret
rol
inc
enter
addr16
cmp
inc
push
popa
xor
sbb
shrl
cmp
or
idiv
add
outsl
and
popa
or
cmp
or
rcrb
gs
mov
inc
icebp
das
jp
lea
lcall
bound
pushf
sub
jae
pop
fldenv
shl
ljmp
fisubrl
shrb
lret
sub
popa
lahf
jno
dec
enter
lods
test
bound
test
dec
jne
addr16
add
push
xchg
enter
iret
adcl
adc
gs
dec
mov
add
xor
cwtl
jl
xchg
out
call
dec
fbstp
roll
cmp
and
hlt
mov
in
lods
sbb
fdivs
in
mov
out
sbb
dec
jae
xor
iret
fs
push
addr16
pop
pop
sbb
mov
sbb
jle
rolb
data16
clc
je
movsl
push
mov
sbbb
out
fs
neg
xchg
int
or
cmp
lret
mov
xor
int3
rcl
add
push
or
xor
aad
dec
xor
roll
mov
add
outsl
jg
ss
lahf
sbb
dec
sahf
pop
sub
loope
clc
sti
pushf
xchg
and
and
push
ss
and
or
aaa
and
fldcw
sbb
fidivl
fdivl
xchg
jg
ret
or
data16
adc
xchg
mov
rclb
push
push
stos
repnz
inc
lds
lods
das
xor
scas
inc
stos
mov
faddp
or
and
xor
cmpsl
xor
inc
ret
jb
xchg
inc
mov
cmpsl
mov
push
fdivrl
daa
das
fdivs
xchg
ret
jno
push
popa
mov
or
xor
jb
in
mov
jo
pop
adc
mov
xchg
dec
adc
xor
mov
stc
pusha
imul
adc
mov
xor
sub
test
cmp
mov
sbb
push
adc
icebp
or
cmpsl
stc
jmp
xchg
jg
ljmp
aad
add
imul
mov
xlat
jp
inc
dec
push
xchg
sbb
cwtl
push
sbb
or
or
push
popl
push
and
mov
std
cmp
shl
imulb
inc
imul
or
pop
adc
imul
mov
outsb
outsb
ja
mov
cmpsl
ljmp
stos
dec
ret
fistl
mov
jo
jmp
pusha
and
daa
in
aaa
ljmp
pop
sbbb
jl
mov
ret
or
jb
or
jo
mov
dec
xchg
sbb
scas
cmpsb
scas
repnz
push
xchg
test
mov
push
lea
pop
xchg
pushf
je
mov
pusha
in
add
inc
sub
push
cmpsb
jg
lock
aas
into
mov
pop
add
orb
popa
pop
popf
jecxz
add
push
mov
jo
movsb
cmpxchg
cmp
outsl
mov
in
push
or
or
pop
popf
in
and
mov
cmp
enter
shrl
sbb
pop
inc
daa
gs
mov
sub
push
mov
arpl
movsb
cltd
xor
fdivrs
xchg
into
fstpl
dec
popa
repnz
lret
xor
xchg
data16
inc
xchg
sub
popa
ja
pop
test
ja
push
xchg
repz
xchg
jmp
pop
filds
jno
int3
cmpb
jbe
inc
nop
cld
dec
int
pop
mov
ds
push
popf
mov
lea
mov
jbe
icebp
pop
push
sbb
or
scas
mov
and
clc
dec
subl
mov
fsubrl
addr16
aaa
jl
cmc
movl
popa
popa
mov
xchg
mov
ja
mov
mov
lret
leave
lock
das
xchg
push
mov
dec
pop
aas
mov
sub
sti
push
sub
mov
shrb
jnp
adc
scas
das
mov
cltd
mov
xlat
mov
aas
out
adc
mov
sbb
lods
xor
gs
xor
cld
fiadds
int
outsl
pop
fldl
sub
popa
dec
push
sub
fsubs
fnstcw
mov
mov
push
popa
sbb
add
pop
sbb
pop
sarl
cmp
sbb
mov
ljmp
test
fucomp
jp
and
push
xor
sub
ja
and
ljmp
shl
daa
lret
add
xchg
push
and
cli
sub
test
les
sbb
pop
mov
ret
mull
jo
sbb
mov
enter
cwtl
imul
lret
dec
or
lret
inc
sbb
mov
imul
shrb
cmp
dec
ljmp
dec
test
xchg
lods
lret
inc
mov
sub
stc
out
pop
fistl
xor
mov
and
mov
add
fists
sar
popa
xchg
pop
inc
popa
dec
out
jae
jl
cmpsb
and
push
push
xchg
cli
mulb
test
ret
scas
testb
pop
xchg
pop
push
mov
aad
and
xor
imul
stc
jb
jecxz
pop
xchg
les
adc
and
sbb
in
push
clc
sbb
fsubs
add
jae
jno
add
jp
cmpsl
in
jge
out
aad
addr16
xor
and
outsb
cmp
hlt
movb
les
enter
sbb
sub
cwtl
adc
jle,pn
cmpsl
or
fld
in
push
lock
mov
mov
mov
pusha
fwait
je
int3
ret
popf
int
mov
cmc
inc
fsubrs
into
add
daa
es
push
or
call
sub
fdivrp
sbb
cmp
push
sbb
dec
xchg
add
lret
or
lcall
jb
push
sub
cmp
loopne
jg
mov
je
pop
fsubs
out
xchg
or
mov
imul
mov
xchg
fnstenv
sbb
lds
sub
add
lock
push
push
inc
mov
push
add
xchg
add
mov
sahf
adc
jbe
xor
idiv
and
int3
jno
sub
cmp
sti
push
pop
std
jecxz
out
frstor
loope
pop
leave
cmp
sub
pop
sub
push
and
bound
add
mov
js
aaa
aas
inc
or
cltd
push
mov
ss
push
and
mov
sbb
jg
mov
xchg
imul
lahf
les
xor
mov
dec
test
cmpl
mov
xchg
int3
xchg
das
jno
add
cmpsl
inc
in
scas
pop
pop
test
mov
mov
mov
or
jb
movsl
in
sub
adcl
test
xchg
mov
outsb
or
rcrb
stos
jle
inc
lea
test
pop
dec
insb
push
clc
testb
jl
out
jmp
in
mov
arpl
imul
pop
cmp
or
test
call
insb
aas
and
push
enter
mov
insb
ja
addr16
push
cwtl
int3
lahf
stos
arpl
stos
add
fbstp
dec
jae
outsb
clc
jp
stos
fisttps
inc
xchg
outsl
mov
fists
cwtl
fsub
push
xchg
inc
add
lock
inc
push
push
cmp
je
cmc
xchg
ss
out
mov
mov
mov
test
sub
mov
mov
mov
xor
add
jns
push
sbb
push
clc
or
call
mov
pop
sub
repz
jbe
push
sub
imul
cmp
mov
dec
xchg
mov
and
sbb
mov
loop
mov
push
into
sbb
mov
and
mov
dec
cmp
stos
in
mov
xchg
outsb
fs
mov
ds
xchg
push
sbb
dec
pop
xor
fucomi
ret
add
adc
dec
scas
dec
in
in
pop
fstl
les
ja
adc
and
cmp
clc
iret
mov
ss
dec
mov
jbe
in
cmp
dec
mov
repnz
pop
mov
xchg
adc
cmpsb
out
jmp
push
mov
loope
jl
orb
xchg
inc
mov
push
testb
ret
mov
pop
mov
icebp
sbb
flds
mov
je
sbb
js
leave
jns
in
ja
repnz
out
and
xor
jnp
ret
pop
sbb
stos
xor
aam
push
test
xchg
or
push
imul
cmp
xchg
xchg
bound
cmp
dec
adc
inc
arpl
addr16
inc
sub
push
leave
sahf
bound
mov
cmp
les
push
pop
cmp
hlt
or
insb
test
es
xchg
es
dec
dec
dec
pop
xor
popa
js
mov
sbbb
dec
fstpl
rorb
push
mov
and
mov
ss
in
mov
lods
xor
in
subl
mov
mov
sti
push
int3
or
jbe
dec
push
cmp
dec
mov
mov
cmpl
fcomps
in
in
sbb
sbb
fiadds
lea
lcall
leave
loopne
test
push
or
sbb
pop
and
inc
leave
add
sub
inc
jge
add
fbstp
push
cmpsb
dec
sbb
in
mov
pop
inc
mov
mov
daa
push
movsl
arpl
faddl
es
lcall
idiv
lret
push
lea
xchg
insl
lods
imull
lahf
cld
jbe
pop
fcoms
scas
loope
pop
setb
cmp
mov
aaa
lods
push
adcb
nop
sbb
ss
hlt
lret
lea
xchg
jb
scas
xchg
or
sbb
cmp
movsl
inc
add
in
bound
in
pop
jge
add
mov
jmp
add
outsb
das
clc
sbb
loopne
movsb
xchg
xchg
jno
testl
add
push
cmp
mov
adc
mov
mov
add
mov
sbb
in
adc
and
inc
out
insl
jg
or
cmp
dec
pop
mov
mov
lcall
xchg
out
testb
jns
js
inc
in
cmp
iret
outsl
or
cmp
lldt
adc
addr16
and
idivb
ret
xchg
and
push
mov
cs
or
jp
and
cmp
add
dec
mov
cmp
mov
cli
jne
in
xor
stos
fnstcw
or
clc
mov
js
dec
pop
or
pop
sub
outsb
xchg
cmp
add
cmpsl
fimull
jb
mov
inc
and
adc
call
adc
hlt
adc
sbb
sub
cwtl
mov
cwtl
fwait
mov
stos
jbe
sti
shlb
cltd
jns
enter
dec
inc
mov
pop
rolb
add
leave
add
addl
and
mov
js
enter
xor
dec
inc
sbb
in
xchg
xchg
cmp
lods
mov
sub
adc
mov
cmp
sti
nop
je
idivb
js
test
dec
dec
popf
jecxz
jne
leave
pusha
out
pop
stos
insl
and
xchg
jbe
insl
mov
inc
push
mov
int3
mov
xchg
movsb
insl
cmp
cld
or
xor
adc
xchg
sbb
repnz
sbb
jg
jle
cmp
iret
jo
or
out
movsl
test
loop
push
stos
es
xchg
test
dec
xchg
movsb
cli
dec
or
cmp
andl
cmp
xchg
negb
push
sbb
dec
out
das
lahf
out
push
xchg
dec
cmc
cmpsl
xor
fnstenv
loopne
and
leave
mov
out
loopne
out
jns
imul
daa
mov
mov
push
mov
orb
and
dec
xor
sarb
push
out
sbb
push
js
notl
inc
jecxz
and
enter
fadd
dec
cmp
lea
mov
gs
cmp
sub
shl
stos
sbbl
dec
xchg
ss
popa
sub
xchg
nop
sbb
lock
loope
jg
lods
dec
addr16
sub
mov
mov
rol
pop
fcompl
mov
sub
out
fst
or
mov
inc
xor
fwait
outsb
inc
sub
push
mov
jbe
inc
dec
adc
ret
dec
mov
add
add
push
movsl
dec
pop
es
popf
mov
xor
test
push
mov
mov
pusha
icebp
iret
sbb
jp
mov
es
sbb
pop
icebp
mov
lcall
cmp
cwtl
cs
push
mov
or
mov
jge
mov
pop
test
sbb
xchg
push
leave
jb
cmpsl
cmp
jnp
ljmp
pushf
inc
inc
ret
cmp
push
loop
pop
push
mov
xor
sbb
adc
mov
or
clc
jmp
stc
fdivrs
nop
sbbl
pop
mov
sahf
inc
aam
scas
mov
js
inc
add
adc
in
push
inc
pop
xor
outsb
out
cmp
adc
inc
mov
daa
push
test
inc
sub
push
lds
mov
or
mov
pusha
es
dec
imul
mov
mov
int3
mov
and
inc
mov
xchg
lret
les
sbb
adc
cs
add
mov
ja
add
adc
inc
dec
jg
dec
loope
imul
xor
nop
lods
cmp
lret
inc
or
pop
jg
or
dec
cmp
push
sbb
xchg
mov
lock
sbb
insl
jmp
cmp
ljmp
ficompl
cmp
pop
insl
xchg
test
mov
dec
and
cmp
push
movsb
push
gs
outsb
mov
dec
xchg
stc
jno
sbb
mov
movb
gs
mov
mov
ret
mov
js
mov
push
xchg
xchg
lcall
mov
icebp
imul
xchg
nop
xor
iret
imul
insl
movsb
shr
sti
and
or
stos
mov
cwtl
sub
addl
mov
lods
ficomps
jmp
stc
in
mov
adc
shll
mov
mov
xor
push
xor
mov
sarb
push
lcall
lock
mov
imul
jmp
loop
outsb
and
push
pop
push
popf
push
test
jnp
mov
push
or
loope
arpl
idivb
ljmp
stos
fsubl
push
pop
sbb
add
jp
inc
out
mov
rol
fstps
jl
out
into
cmc
js
inc
jne
stc
pusha
push
sbb
clc
sbb
shrl
clc
scas
inc
sub
ljmp
or
add
insl
or
mov
inc
mov
mov
mov
add
mov
repnz
push
cmp
jnp
orb
ds
and
xor
arpl
xor
fs
pop
sahf
mov
adc
or
push
mov
out
iret
je
mov
sbb
rcrl
leave
cmp
fstpt
mov
jno
cmpsl
xlat
int
call
sub
inc
outsb
popl
fs
outsb
and
cmp
mov
pop
mov
mov
loopne
imul
outsl
dec
cmp
xor
mov
cmp
fmull
iret
lods
inc
push
sbb
pusha
mov
jge
movsl
or
xchg
push
lahf
cltd
lcall
movsb
cmpsl
sbb
lret
cmpsl
cmpsl
loop
adc
lods
dec
and
iret
notl
cmpsb
aam
xor
jae
js
out
mov
mov
dec
fstps
jb
test
xor
cltd
xchg
sbb
call
call
mov
or
leave
sbb
jo
notl
fdivl
leave
xor
into
or
fstps
xchg
push
pop
les
dec
push
cmp
cmp
push
and
sbb
pop
adc
jns
inc
or
inc
jb
cmp
jnp
aam
stos
mov
jbe
sbbl
std
xchg
cs
jge
sbb
push
xchg
cmp
pop
movsb
test
push
push
cli
loop
add
or
add
cmp
push
cld
push
xlat
xor
js
mov
dec
xor
ret
test
cld
mov
iret
sbb
sbbb
push
or
inc
ret
push
lcall
ljmp
mov
fdivrs
mov
fsubp
sbb
push
and
push
les
push
sbb
pop
mov
stc
repz
rclb
jecxz
inc
repnz
jle
mov
sbb
in
mov
push
fwait
pop
dec
sahf
mov
in
fiaddl
jp
pop
inc
sbb
mov
mov
push
or
pop
xor
inc
repnz
pop
mov
pop
mov
loopne
notl
sbb
push
fisubrl
mov
setp
scas
sub
fstp
aad
add
scas
dec
pop
fs
push
in
xor
sbb
in
aas
push
hlt
jg
ds
das
insl
cld
jl
mov
in
xor
push
mov
sub
fcmovu
or
je
mov
push
push
xchg
adc
mov
cld
leave
mov
fstpt
xchg
mov
out
cmc
cltd
push
inc
inc
mov
stos
mov
sbbl
ljmp
sub
inc
into
xchg
inc
jbe
test
push
xchg
lock
stos
mov
sbb
jne
dec
jbe
jne
cmc
jne
pop
icebp
xor
fcomip
popa
sub
pop
orb
cmpsl
clc
call
lods
add
mov
loop
or
xor
dec
push
cmp
out
dec
cmpsb
int3
mov
sti
xor
iret
mov
push
scas
cmp
lcall
fsubs
or
jle
mov
mov
cmp
xor
std
mov
scas
movhps
test
jnp
xor
jbe
sbb
popa
in
pop
inc
lret
mov
std
aas
dec
dec
ds
lahf
mov
inc
xchg
add
insb
shlb
add
sahf
shr
mov
or
repnz
int3
repnz
add
push
negl
into
push
das
ret
xchg
scas
inc
push
cmp
lahf
push
sub
cltd
clc
rolb
mov
xchg
stc
test
int3
cwtl
xchg
xchg
cmp
or
ficoml
add
pop
pusha
addb
push
sub
dec
cld
aad
fs
push
hlt
push
pusha
stos
inc
inc
fistps
mov
out
addr16
aam
push
mov
decb
stos
mov
in
jg
xchg
xchg
loop
fisubrl
jno
mov
dec
in
sbb
negl
in
jbe
movsb
lds
loopne
dec
jns
je
mov
movsl
inc
xchg
mov
repz
mov
mov
jns
insl
inc
xchg
add
lds
push
mov
fwait
push
fadds
popa
cwtl
and
out
sahf
lcall
rclb
and
fsub
ds
fmuls
pop
cwtl
inc
or
cmc
clc
sbb
pop
ljmp
sar
fldl2e
sahf
dec
iret
movl
mov
ja
std
inc
inc
xor
repnz
push
dec
pushf
push
cmpsb
popa
jne
mov
inc
rcr
mov
ret
push
hlt
xchg
js
mov
in
xchg
xor
sub
aad
jne
xchg
jae
inc
cmpsb
and
ljmp
xor
sbb
adc
aas
mov
js
out
int3
xchg
push
sub
icebp
fisubl
mov
mov
mov
lods
rcr
insb
mov
mov
lcall
mov
cmp
sahf
inc
jg
imul
xorl
sbb
sub
push
lea
aaa
jnp
leave
pop
push
mov
imul
sbb
sub
pop
push
xchg
inc
cmpb
inc
jne
bound
add
mov
fisttps
add
add
cmc
mov
mov
xor
das
aam
inc
cltd
push
mov
testb
mov
das
mov
cmpsb
or
mov
fidivs
int3
scas
in
fidivrl
xor
mov
xchg
mov
sub
lock
sbb
pop
test
fs
mov
testl
jge
pop
xchg
leave
push
out
jnp
sbb
mov
pop
imul
push
enter
mov
adcb
mov
and
lcall
or
icebp
mov
push
js
mov
test
inc
pushf
inc
roll
pop
cwtl
xchg
sub
in
dec
push
fnstcw
fwait
aad
xchg
xchg
sub
xor
xchg
mov
push
cwtl
pop
jo
das
imull
mov
mov
test
hlt
inc
lcall
mov
int
add
add
jnp
cmpsl
or
std
adc
pop
cmp
fsubl
leave
ds
inc
xor
iretw
xor
and
aaa
mov
cs
push
cmp
xchg
dec
popa
rorb
icebp
sub
addr16
xor
out
fs
sahf
dec
pop
jo
cmc
cmp
scas
mov
out
and
cs
inc
push
fimuls
mov
inc
je
nop
jmp
rcll
push
jl
movsl
mov
ror
ss
imul
mov
out
jecxz
adc
out
add
in
je
mov
leave
rcll
cmp
addr16
sub
dec
cmp
aam
and
dec
dec
movsl
push
sahf
lds
fcompp
sar
xchg
lret
mov
cmp
loopne
pop
inc
jmp
push
and
inc
scas
inc
and
scas
mov
xorb
icebp
fdivr
clc
or
in
ret
int3
das
inc
outsl
and
mov
and
jl
in
dec
leave
nop
xor
ja
jbe
cmp
lds
jmp
leave
push
pop
jns
cmp
or
add
les
insb
xchg
push
cmpsb
cmp
lret
out
mov
lcall
notb
sbb
xchg
addr16
std
jb
clc
clc
icebp
push
clc
iret
inc
mov
sbb
jno
gs
push
ja
adc
sbb
and
jmp
jb
fdivrl
ljmp
mov
lock
push
mov
sbb
or
rorb
cmpsl
xchg
addr16
sbb
stos
sbb
push
mov
dec
sbbb
out
lock
in
adc
out
aad
jno
jmp
push
aam
ror
jp
jecxz
mov
test
or
data16
sbb
dec
repnz
mov
lret
mov
mov
push
cltd
xlat
inc
rcrl
fs
bound
enter
hlt
or
xchg
xchg
sbb
ret
pusha
ret
mov
es
lods
xor
mov
fisubl
cwtl
and
or
xor
inc
push
jecxz
dec
shrb
jecxz
popf
add
pop
cwtl
inc
mov
popa
adc
js
loope
xchg
call
xor
pop
or
lods
fidivs
fxch
pop
mov
push
pop
mov
jl
outsb
sbb
std
pop
setl
sub
dec
push
xchg
push
push
push
es
push
xchg
inc
aas
mov
mov
xchg
jecxz
xchg
dec
pop
cmpsb
jns
lods
call
ss
sahf
dec
add
in
dec
pop
xchg
int3
fwait
and
push
sbb
push
cmp
daa
enter
mov
jecxz
sbb
xor
sar
or
sbb
and
out
mov
cmpsl
pop
aas
push
jns
and
dec
mov
aaa
subl
pop
mov
cmpsl
sub
pop
mov
pop
loop
popf
leave
mov
rolb
add
mov
jge
in
inc
ret
mov
jle
or
shll
sbb
clc
clc
scas
jg
int3
out
cmpsb
shl
mov
cmc
mov
cli
es
xor
cmp
mov
add
push
push
lock
jae
arpl
sub
bound
mov
inc
sub
iret
sub
jmp
jle
cmp
dec
xlat
jb
inc
or
inc
jl
pop
xor
sub
pusha
push
shll
out
stc
iret
mov
push
push
stc
daa
mov
pusha
jnp
iret
pop
stos
daa
mov
jp
inc
jno
sbb
in
mov
inc
lahf
js
mov
jo
imul
xchg
inc
fcmovnu
add
push
dec
ja
jo
test
out
jp
add
out
nop
ja
xchg
mov
call
mull
pop
mov
test
mov
mov
data16
mov
cli
jno
mov
xchg
pop
dec
js
sbb
les
xor
iret
push
sbb
iret
mov
add
das
sub
leave
stos
adc
dec
les
cwtl
xchg
fidivs
je
pop
mov
push
rcrl
inc
fstpt
or
xchg
xchg
ss
jns
je
rorl
jbe
fwait
cli
mov
mov
outsl
jecxz
out
xlat
push
lock
iret
ret
or
xor
adc
jle
into
cmp
clc
fistpll
mov
sti
push
dec
call
shrb
fstcw
cmp
push
repz
fstps
shrb
cmp
jle
mov
ljmp
dec
fists
pop
mov
enter
mov
cli
imul
and
shlb
fisttpll
testl
pushf
mov
sub
push
loope
pop
fbld
out
mov
and
lock
lcall
jno
cld
icebp
fimull
pop
shll
sub
or
stc
dec
lea
ss
repz
or
sub
out
out
jge
push
jecxz
cmpl
xchg
add
nop
leave
stc
jp
or
pop
in
mov
mov
addr16
mov
lods
adc
pop
inc
dec
popa
inc
push
mov
mov
xchg
iret
jnp
mov
add
les
cmpsl
outsb
clc
sbb
sbb
loop
mov
lock
jge
adc
pop
insb
bound
cmp
filds
fnsave
dec
push
dec
adc
cmp
jnp
pop
nop
mov
cmc
push
mov
push
cmc
and
std
setbe
push
es
pop
mov
loope
stos
negl
fisubrl
lret
call
rorb
call
add
fdivrs
inc
icebp
add
lahf
sub
xchg
jae
dec
ret
mov
stos
and
notb
xor
scas
lea
jecxz
dec
jp
je
lods
push
ret
sub
cmp
adc
mov
pop
stos
testb
sub
or
add
hlt
das
pop
inc
push
xchg
push
push
push
inc
ficoml
jbe
aad
mov
loopne
test
inc
das
and
out
and
aam
mov
aad
js
or
jne
jno
data16
cli
xor
insl
push
mov
fstpt
pop
idivb
mov
stc
inc
dec
mov
stc
sub
ficoms
in
insb
adc
or
imul
mov
shll
mov
ss
pop
xchg
out
pop
shrb
mov
cmpsb
movsl
sub
or
xor
dec
stos
adc
ljmp
fs
push
push
shrl
xor
out
mov
mov
stc
xor
dec
dec
pop
popf
push
jg
mov
pop
xchg
sub
and
repz
cld
push
push
sbb
mov
mov
pop
jecxz
aam
imul
add
xorl
pop
push
mov
out
sbb
outsb
mov
mov
or
lret
mov
leave
inc
and
jbe
lea
mov
mov
lahf
dec
test
push
ja
sbb
fxch
loopne
andl
jmp
enter
lock
fsubl
dec
iret
sbb
fcomps
icebp
les
add
dec
insl
mov
xchg
adc
nop
sbb
outsb
inc
cltd
dec
inc
popl
aas
xor
es
ds
xor
and
adc
das
adc
sub
out
ljmp
xchg
inc
jl
shrb
push
mov
dec
cmp
lea
pop
pop
ss
cmp
leave
adc
adc
jl
mov
lcall
xchg
sub
outsl
cmp
lcall
scas
xchg
loope
stc
jg
dec
mov
aam
mov
lods
out
in
push
xor
gs
jbe
mov
pop
sbb
pop
jmp
add
fsts
push
jl
dec
pop
xor
inc
fstpl
jl
dec
push
sub
or
in
add
jle
pop
jl
stos
popa
cmp
jge
pop
fisubs
out
psrad
enter
rcr
jmp
mov
xlat
repnz
loop
inc
jno
fdiv
and
imul
ja
cmpsl
pop
or
inc
xor
xor
push
push
mov
fldl
pushf
or
fwait
jb
xor
sub
xchg
or
cmc
loope
xlat
cltd
jno
push
xor
sbb
sti
pop
mov
jns
fs
xchg
gs
cmp
cli
pop
sub
xor
sub
jno
bound
repz
mov
mov
fs
xorb
vpsraw
mov
notb
jns
mov
push
int3
fisttpl
dec
inc
inc
mov
add
loope
call
xor
outsb
and
inc
ret
scas
inc
mov
xchg
mov
add
dec
aam
or
testl
sub
mov
jmp
shll
push
pop
fmul
and
xchg
sub
xchg
jns
outsb
mov
in
cmovl
push
test
sub
dec
fidivrl
fiadds
mov
movb
int3
xchg
or
cmp
imul
sbb
add
ljmp
and
and
movsl
incb
pop
adc
sub
push
popf
xchg
push
dec
mov
int
sahf
stc
sbb
sbb
push
jae
movsl
cmpsl
aas
ss
lea
mov
test
nop
ja
shll
pop
sub
add
gs
push
mov
pop
jno
mov
pop
mov
stos
insb
mov
sbb
or
int
aaa
int
push
mov
xor
and
arpl
jae
rolb
mov
and
mov
push
pop
push
mov
and
push
mov
clc
inc
orb
cmp
dec
cmpsl
fwait
scas
or
pusha
mov
xor
bnd
push
mov
sub
jnp
adc
mov
push
xor
push
sub
cli
xor
pusha
mov
xchg
sbb
mov
nop
out
jl
xchg
inc
imul
mov
insb
outsl
loopne
int
test
xor
adc
mov
jge
inc
fstpt
adc
push
push
mov
push
fwait
adc
add
dec
iret
push
xor
or
js
mov
mov
scas
leave
xchg
inc
dec
inc
enter
nop
sub
mov
and
es
push
popf
mov
push
cmc
nop
outsb
inc
cs
neg
push
xlat
sbb
sbb
jne
push
add
dec
xchg
cwtl
mov
jns
in
mov
mov
or
fsubs
xchg
sub
or
dec
mov
inc
das
test
fdivr
inc
add
loope
mov
addr16
dec
enter
push
dec
mov
lahf
arpl
push
ja
add
out
clc
xchg
xchg
adc
aaa
mov
mov
js
cwtl
mov
jle
push
pusha
imul
lcall
cltd
les
cmp
call
test
das
or
shll
loopne
xor
ja
jae
je
popf
mov
or
jmp
shrb
loop
clc
jne
mov
lods
cwtl
fisubrs
cltd
mov
pushf
rclb
sbb
pop
scas
pop
sbb
ficompl
jo
sub
and
mov
pop
loope
adc
jo
pop
repnz
xor
adc
aas
pop
jp
in
cmp
lahf
lret
les
xor
push
xchg
imul
enter
out
movsw
cmpsb
add
cmpsl
or
pop
mov
flds
or
repnz
mov
add
aaa
add
lret
xor
clc
outsb
ret
pop
repnz
or
aad
add
pushf
out
sbb
mov
into
les
movsb
cmp
lock
inc
test
gs
lods
xchg
cld
sbb
jg
dec
sahf
push
jb
push
ja
sbb
pop
xor
repz
mov
repnz
outsb
sub
or
inc
cmp
fsub
jmp
adc
fwait
push
mov
roll
cwtl
dec
sarb
adc
loope
mov
pop
xor
add
sub
adc
jl
pusha
xchg
lea
test
imul
pop
lea
pop
mov
inc
leave
outsl
sub
sub
test
fadds
clc
jmp
mov
pop
jo
adc
push
imul
dec
dec
aaa
adc
test
mov
popf
inc
inc
push
es
and
push
or
popf
mov
dec
test
lret
xorb
xorb
leave
mov
rcrb
push
orl
out
popa
popa
cmpsl
test
push
cmp
mov
jno
pop
fadds
cltd
or
out
jb
pop
into
clc
or
ficoms
adc
iret
pop
jbe
in
divb
popa
insl
lahf
fldt
and
cmp
jecxz
xchg
mov
int3
cmp
dec
or
sub
sub
aad
mov
push
dec
or
jg
sub
aaa
push
dec
xchg
or
addl
adc
outsl
je
xchg
scas
or
jp
pop
mov
cmp
fldenv
and
ret
scas
xchg
iret
xor
pusha
fdivl
pop
or
xlat
push
pop
mov
sub
add
ss
and
out
and
jl
subl
push
dec
outsl
cmp
clc
rclb
test
mov
jo
inc
sub
cmp
cmp
mov
or
repz
mov
sbb
jl
loop
popf
xchg
aad
movsb
call
out
in
popa
cmp
call
mov
pop
loope
mov
int3
mov
sti
pop
push
bound
decb
xchg
call
add
pop
dec
fmul
push
mov
outsb
push
sub
pop
je
aas
xor
adc
jge
clc
mov
mov
pop
in
outsb
bnd
int3
arpl
add
popl
fldl
push
xor
das
stos
mov
daa
imul
jne
xor
das
dec
inc
sbb
iret
jo
mov
or
out
mov
jp
push
lahf
mov
in
jb
push
adc
jle
push
popa
sbb
mov
arpl
jnp
inc
repz
lea
push
mov
loope
imul
xchg
cmp
jmp
sbb
sbb
dec
cmp
pop
xchg
jo
and
dec
push
pop
push
mov
mov
cmp
inc
mov
cld
iret
stc
lea
stos
cmp
bound
mov
adc
shlb
loopne
xchg
insl
add
jnp
lock
mov
inc
sub
push
or
das
ret
jge
and
aas
xchg
inc
insb
in
gs
gs
sahf
add
cwtl
lock
das
rol
jb
shlb
jnp
lock
push
mov
pop
scas
mov
jae
push
call
sti
cmpb
stos
and
add
jl
lcall
cmp
outsl
enter
sub
mov
repz
xor
xor
leave
mov
out
xor
cmp
sbb
out
arpl
stos
jno
push
outsb
push
divb
dec
pop
out
pop
out
pop
mov
mov
sub
aaa
cld
and
inc
mov
into
or
dec
dec
scas
jge
outsl
sti
ja
nop
addr16
enter
mulb
and
cmpsb
int
push
cmpsl
pop
mov
sbb
pop
iret
push
stc
sbb
pop
cmp
and
mov
inc
ret
addr16
fstpt
sbb
or
jp
rcr
lret
mov
mov
cmpsl
shlb
cld
insl
pop
push
nop
cmc
xor
inc
ret
cmc
jb
dec
mov
xlat
outsl
and
std
inc
adc
xor
ret
notb
mov
mov
repnz
mov
pop
sub
sub
push
pop
fs
mov
test
sbb
push
inc
jae
pop
ja
xchg
mov
rclb
dec
cmpsb
out
fidivl
ret
mov
ljmp
jb
movsb
xor
adc
xchg
ljmp
pop
repnz
addr16
cltd
xor
pop
js
aad
mov
mov
call
bswap
adc
and
or
cmp
lods
int
pop
loop
jns
inc
notl
mov
scas
sarb
mov
pop
aaa
in
mov
sbb
arpl
push
ret
jo
out
xor
xor
fcoml
in
jp
shlb
mov
add
sarb
inc
pop
inc
cmc
test
cmp
lret
loopne
addr16
mov
jnp
je
inc
push
xchg
and
mov
mov
movsl
bound
lea
mov
out
push
cmc
fstl
mov
clc
aaa
sahf
xor
sub
xor
sub
and
push
scas
stos
lds
mov
jp
mov
in
push
repz
sbb
mov
and
xor
push
fldl
rcrb
daa
mov
xor
add
jmp
inc
aas
lods
xor
push
arpl
push
ds
dec
jb
and
jb
aaa
jb
or
pop
xchg
push
adc
sbb
std
sub
mov
enter
pop
sbb
and
test
xchg
mov
int3
xor
or
cmpsl
add
cvtps2pi
stc
lods
rclb
scas
inc
cwtl
cmp
adc
inc
dec
enter
pop
sbb
mov
sub
pop
inc
sti
outsb
mov
bound
dec
push
and
nop
jl
movb
mov
lods
pop
cmpsl
ss
mov
js
xchg
daa
sahf
pop
cmp
push
or
lcall
divb
lret
leave
cmp
bnd
dec
popa
rorb
jmp
jle
imul
adc
int3
fwait
out
ljmp
dec
pop
ret
iret
into
rolb
adc
lods
pusha
int
insb
and
xchg
push
roll
mov
jne
ss
in
cmpb
std
dec
or
mov
push
aad
pop
fs
xchg
mov
ja
out
push
sbb
pusha
cmp
sbb
sub
dec
aas
scas
imul
test
pop
and
scas
mov
cmp
dec
in
in
xor
pop
scas
xchg
xor
push
cmpsl
cmpl
subl
sub
stos
shlb
add
in
mov
add
les
test
enter
cmp
mov
and
fcompl
pushf
and
movsl
ja
lock
ljmp
add
rcll
adcl
and
cltd
sbb
test
test
or
push
push
add
cmp
inc
popa
sti
and
arpl
mov
std
lods
lods
mov
sbb
rcl
mov
sub
enter
inc
imul
push
adc
pop
push
insb
in
pop
es
aam
sub
and
pop
pop
pusha
je,pt
shlb
xor
inc
sub
and
lret
rcrl
mov
pop
push
and
fiaddl
add
loope
dec
jl
xor
pop
daa
subl
sahf
and
les
sub
lret
leave
arpl
testb
add
clc
imul
adc
mov
into
inc
loopne
in
gs
scas
dec
fsub
pushf
mov
add
andb
int3
push
adc
xor
sahf
sarl
mov
dec
sahf
dec
es
push
out
imul
movsb
sbb
fwait
loope
stc
push
xchg
dec
inc
outsl
addr16
iret
dec
idivl
sub
cltd
and
negl
addr16
push
loopne
jnp
stc
and
pop
adc
cltd
stos
mov
push
ret
shll
sbb
add
xchg
in
dec
jp
ja
dec
cmp
or
hlt
mov
int
ljmp
push
cmpsl
cli
mov
outsb
lods
int
aas
in
jnp
gs
nop
jns
cmp
je
jns
shl
std
jp
les
lret
add
inc
xchg
lea
mov
cltd
xchg
adc
or
mov
outsb
add
jo
or
fs
sub
mov
fiaddl
inc
add
mov
push
cltd
std
xor
cmp
les
lahf
sub
popa
fistps
stos
dec
dec
sub
or
add
ja
addl
dec
push
out
add
outsl
lret
mov
stos
out
in
lret
movsl
sub
jno
movl
mov
adc
adc
fisubrl
int
cmpsb
fbstp
mov
in
sub
cmp
mov
xchg
jp
mov
nop
fadds
lcall
xchg
loopne
cmp
or
xor
je
pop
fs
adcb
sbb
jecxz
cmp
sub
repnz
dec
xchg
sub
sub
sbb
addl
into
add
mov
aam
push
push
jo
mov
out
or
cmc
inc
mov
out
cmp
or
cmp
xor
rcrl
dec
xor
jmp
jno
in
mov
loope
jnp
mov
in
mov
push
pop
cmp
xor
cmpsb
add
mov
stos
ficoml
scas
shll
sbb
pmaddwd
popa
jno
fnstsw
lds
mov
jno
ret
cmp
or
push
dec
jns
push
jl
leave
jecxz
shlb
push
out
test
fstpt
icebp
or
mov
mov
addr16
jl
hlt
inc
push
frstor
bnd
dec
aad
lods
adc
pushf
insl
or
and
scas
lahf
mov
push
gs
orb
jecxz
push
daa
or
adc
cmp
sbb
mov
xchg
add
push
es
test
jg
xchg
push
cmpl
or
or
xlat
pop
test
dec
or
ljmp
and
loopne
and
lret
xchg
dec
in
ret
mov
and
sub
cmpsb
and
sub
scas
add
ficoml
push
in
out
stos
mov
push
adc
dec
cltd
jo
outsl
stos
outsl
add
push
rcl
and
dec
data16
jne
repz
cmc
hlt
add
jo
cmp
cmp
adc
push
ror
std
fs
ja
rcpps
push
xchg
fcomps
lret
arpl
inc
pop
xchg
pop
aaa
fcoms
rolb
xor
sub
push
clc
push
cmp
sbb
fs
inc
pop
test
scas
pop
outsb
push
in
mov
add
xchg
ljmp
idivl
cmp
and
xchg
loopne
cld
push
adc
and
test
xor
xchg
push
fsubrl
xor
adc
pop
sbb
mov
in
or
ja
in
mov
cwtl
ss
fbstp
pop
int
scas
and
push
in
ret
pop
mov
negb
enter
cli
leave
ljmp
incl
daa
clc
insb
jg
jnp
shl
out
cmpsb
xchg
and
es
xchg
sbb
out
mov
pop
jnp
push
mov
jl
push
jg
mov
incl
jmp
jmp
mov
cli
adc
or
popa
mov
and
jb
adc
mov
test
dec
xchg
loopne
test
movb
mov
add
out
loop
or
aaa
in
pop
adc
jl
jp
rcrl
push
pop
cli
testb
sbb
mov
mov
jle
xor
jmp
test
aas
lods
mov
push
dec
scas
pusha
jecxz
ret
jp
pop
out
push
adc
jp
xchg
das
or
pushf
jge
xor
ficoms
xor
imul
daa
aam
and
xor
add
xor
int3
push
daa
lds
movsl
aad
push
imul
adc
movb
cli
inc
ja
sub
jnp
stc
jae
jnp
xchg
andl
ds
jb
push
adc
mov
rclb
lgs
xchg
and
ret
mov
jmp
clc
push
cmp
fdivr
repnz
pop
sbb
popa
cmp
push
lea
jge
stos
jl
add
jge
stc
inc
or
stc
adcb
lods
adc
movsb
dec
xchg
aam
fucomp
lods
or
mov
fsubrs
hlt
and
xor
jmp
cmp
cs
adc
push
push
outsb
mov
sbbb
dec
cltd
cmp
sbb
push
clc
imul
clc
sbbl
out
roll
adc
dec
push
pusha
ljmp
shl
cmpsb
mov
pop
cmp
test
dec
ljmp
and
push
add
enter
adc
inc
std
stc
xor
mov
or
cmp
sbb
movsl
ljmp
sbb
int3
scas
mov
pop
dec
mov
clc
mov
ja
adc
clc
push
sbb
mov
rol
clc
les
shll
cmp
stos
fsubrl
lds
jecxz
add
mov
leave
xor
jle
in
int
sbb
clc
inc
add
test
inc
es
mov
xor
xchg
mov
xor
sub
sbb
pop
mov
mov
cmp
enter
mov
add
cwtl
xchg
xor
jp
mov
sbb
jge
jae
dec
dec
call
xor
xlat
cmp
adc
push
jp
or
enter
iret
pop
mov
test
or
decb
sub
xchg
rep
subb
push
lods
insl
cmpsl
pop
or
adc
xor
push
test
xchg
test
imul
dec
in
scas
xchg
mov
mov
sbb
jl
scas
xlat
mov
fcomps
pop
in
inc
and
mov
jnp
js
pop
test
enter
sub
xor
xorl
inc
in
cmp
adc
jae
mov
jmp
mov
imul
cmp
into
stc
rclb
iret
jg
xor
data16
pop
mov
or
inc
mov
dec
cld
gs
mov
int3
add
scas
enter
scas
aad
dec
jp
push
mov
cs
frstor
loope
loop
and
shll
inc
ret
fstps
jo
mov
cltd
bound
je
xchg
inc
lods
sbb
jmp
push
jb
ret
dec
addb
mov
jbe
sbb
bound
aam
in
add
cmp
push
or
sbb
idivl
push
pop
in
rcll
arpl
push
jno
push
arpl
repz
bound
test
jne
or
repz
pop
data16
mov
push
pop
xor
lcall
fildll
pop
xor
push
cmp
push
jb
leave
jl
pop
in
adc
xchg
push
mov
inc
xchg
mov
adc
cli
pop
clc
andb
adc
or
mov
or
sbb
fld
sbb
jne
faddl
inc
mov
xchg
xchg
jmp
xchg
cmc
inc
stos
insl
leave
test
daa
push
xchg
push
sbb
push
sbb
add
jmp
cmp
mov
popf
imul
pop
arpl
pop
mov
mov
iret
out
push
push
inc
xor
scas
pop
sbb
push
test
xchg
mov
test
or
inc
int3
add
sub
loope
aad
xchg
scas
pop
das
cld
jns
sbb
sub
dec
test
movsl
lods
push
fsubs
jmp
adc
inc
xchg
add
inc
push
dec
mov
fidivrl
ss
add
push
or
stc
xchg
adc
mov
out
push
push
mov
loopw
push
xchg
xchg
cmpsl
pop
cmpsb
jge
mov
mov
mov
imul
shlb
pop
gs
mov
test
adc
xor
mov
add
jnp
mov
and
mov
test
out
cmp
fisttpl
popa
jb
mov
add
rclb
ret
in
mov
inc
cmp
jmp
jo
mov
mov
mov
fsubl
adc
inc
lcall
icebp
cmpsb
cmp
push
xlat
add
popa
lahf
push
repnz
repz
iret
clc
mov
rorl
jae
test
adc
test
out
xor
faddl
xor
nop
scas
xchg
mov
test
test
mov
aas
cltd
adc
fwait
fwait
mov
sub
sbb
adc
sbb
cmp
adc
mov
das
loopne
mov
xor
xchg
xchg
sub
or
js
addr16
fsubrs
stos
aas
jl
mov
inc
es
sbb
xchg
inc
push
sahf
fs
pusha
mov
imul
insb
xor
loopne
sbb
sub
sub
mov
mov
mov
movsl
xorl
sub
roll
xchg
cltd
aad
int
mov
jecxz
je
fnsave
dec
dec
hlt
dec
mov
jnp
push
in
rorb
ret
outsl
popf
and
aas
adc
cmp
xor
and
in
cmp
and
and
loop
test
or
fs
jle
jns
xchg
int
pop
inc
mov
in
xchg
sbb
or
imul
roll
add
mov
fisubl
fnstcw
enter
lock
leave
aas
test
cmpsl
or
inc
cmpsb
out
ret
pop
dec
lock
xor
or
add
pop
or
dec
mov
xchg
fsin
dec
in
mov
enter
cld
push
mov
into
sbb
ss
dec
push
sub
push
dec
cmp
iret
xchg
cmpsb
lcall
pop
mov
pop
stos
arpl
cmpsb
ss
mov
jns
js
nop
mov
bound
stos
mov
mov
movl
xchg
push
pop
lds
add
push
pushf
or
push
cmp
xchg
ss
dec
aaa
xchg
or
pop
pop
jns
mov
cltd
fmull
sbb
cwtl
xchg
fistpl
mov
and
mov
adc
js
in
scas
lahf
or
mov
and
xlat
and
dec
stos
mov
mov
jmp
ret
pop
dec
push
add
push
data16
out
test
bound
add
lds
lcall
jle
pop
and
and
fcmovnbe
iret
xor
pop
xchg
mov
shlb
and
inc
je
call
mov
xchg
inc
cltd
xchg
cltd
lahf
push
dec
andb
push
jnp
jmp
pop
test
hlt
ret
inc
dec
lss
sbb
dec
stc
and
and
mov
lds
hlt
xchg
or
shl
add
mov
ss
scas
add
jmp
or
push
pushf
loope
mov
ret
pusha
aas
adc
xor
push
rcrl
cltd
sti
add
aad
outsl
scas
xchg
rolb
jg
push
cmp
dec
mov
lcall
je
fimuls
dec
xlat
jb
aaa
je
outsl
int
add
sub
pop
adc
sbb
fstpt
insl
out
loope
iret
lds
xor
test
push
dec
out
xchg
or
inc
scas
nop
sti
stos
pop
pop
out
mov
test
lock
neg
add
call
aaa
inc
jp
xchg
xlat
dec
fstl
sbb
pop
imul
out
nop
sti
pop
add
mov
push
cld
mov
or
sub
or
inc
push
push
imul
popa
in
xchg
mov
sub
dec
adcl
clc
pop
jge
gs
mov
ret
lea
mov
loope
decl
mov
mov
pushf
pop
jb
shlb
fadds
push
and
lods
lea
hlt
daa
add
mov
rcr
ds
jp
cmp
cwtl
sub
xor
std
and
mov
push
sub
dec
imul
adc
or
test
adc
int3
ret
in
jae
pop
std
fnsave
into
mov
add
mov
clc
xor
xorb
push
pusha
xor
dec
jg
ret
insb
stos
mov
shrl
cmpsb
hlt
xchg
fwait
pusha
fisttps
lock
mov
adc
sbb
inc
cmp
dec
lock
sbb
or
pop
xor
fldt
stos
mov
jge
out
das
sub
cwtl
fs
andl
push
inc
insl
cmpsl
call
loopne
repz
jo
jge
jle
pop
lock
shl
loopne
das
lret
jl
dec
nop/reserved
in
fcoml
xchg
das
cmc
mov
sub
cmp
jne
pop
add
fldcw
aam
sbb
ficoms
inc
mov
pop
insl
push
xchg
faddl
mov
dec
pusha
sub
pop
cmp
ss
jno
into
loop
cli
cmp
sbb
mov
out
xchg
pop
mov
lret
in
adc
aam
dec
xchg
mov
pop
mov
inc
fsts
add
loop
xchg
pop
rorl
pop
scas
or
popf
repnz
notl
ss
lret
pop
pop
jle
jmp
popf
push
test
pop
testl
cmp
test
nop
xor
cltd
jge
and
clc
sub
pop
jecxz
scas
out
int3
mov
mov
in
ljmp
mov
sub
and
leave
pop
add
int3
cmp
test
call
fdivl
push
aam
movl
inc
mov
lret
jne
loop
aaa
inc
jae
rcll
lahf
sbb
sti
fcmovb
adc
popa
out
push
cmp
dec
mov
das
std
sbb
sub
cmpsl
movsl
dec
fcomp
out
lods
icebp
test
loop
iret
lods
jl
nop
mov
mov
push
or
xchg
fbld
pushf
ds
push
aaa
iret
in
inc
repz
jo
inc
leave
or
aam
xlat
mov
stos
js
adc
cwtl
out
add
push
dec
mov
nop
rcl
mov
in
std
std
mov
mov
fdivl
xchg
mov
mov
or
mov
andb
inc
xor
inc
rorl
mov
jnp
jl
mov
cmp
stc
jnp
add
dec
ljmp
mov
jl
xchg
xchg
pop
loop
pop
pop
paddd
mov
lods
mov
mov
insl
inc
sti
mov
mov
push
rcrl
jne
scas
jo
xor
sub
cmp
adc
jne
lret
lcall
imul
aam
repnz
bnd
inc
lods
sbb
lcall
jecxz,pn
mov
hlt
and
push
cli
out
jnp
cmp
inc
mov
rorl
insl
rcrb
lds
push
lock
jns
outsb
int
mov
sub
aam
xchg
cmp
repnz
add
or
push
ret
fcomi
or
push
jle
or
insl
or
fs
sbb
xorl
data16
fidivl
mov
movsl
mov
adc
maxps
jg
pop
lahf
inc
sti
in
imul
adc
push
cmpsb
sbb
les
mov
lcall
jmp
stc
push
hlt
in
fdivs
test
cmp
jnp
xor
adc
dec
sahf
jl
or
sbb
jle
jecxz
cmp
cmpsb
andb
jmp
andl
data16
fcomi
mov
sub
mov
lds
aam
ds
fscale
mov
jmp
out
mov
xor
inc
loope
pop
je
or
ret
iret
mov
add
dec
sbb
dec
fisttpl
mov
sub
ss
jecxz
sub
jno
outsb
dec
movd
add
dec
stc
pop
sbb
sbb
sub
fimuls
mov
sbb
fsubr
pusha
sbb
mov
push
fldl
push
push
loopne
test
cmp
pop
push
out
xchg
div
and
fbstp
stos
jbe
sbb
push
scas
pop
aas
cmp
scas
shll
fistps
sub
pop
outsb
dec
cmp
outsb
cwtl
xor
lds
inc
cmpsb
daa
ret
inc
outsl
cmp
aas
out
adc
movsl
pusha
sub
imul
sbb
mov
mov
fwait
add
je
jb
in
aam
sub
shll
xor
jnp
ret
mov
mov
fmull
dec
fisubrs
fidivrs
sbb
xchg
mov
das
adc
xor
cli
int3
cli
cmp
lods
mov
inc
xchg
addr16
test
pop
mov
jnp
xor
xor
pop
jae
les
mov
or
sub
pop
jae
call
mov
movsb
lods
jg
add
fisubrs
dec
js
cltd
inc
data16
test
inc
fsts
adc
push
cmpsl
sbb
jg
jle
aas
in
scas
or
push
add
addl
fwait
icebp
mov
push
xor
popa
ds
jbe
pop
sbb
pop
pop
sub
inc
cmp
cwtl
adc
xor
xchg
mov
repz
xchg
xchg
xor
adc
mov
das
pop
repz
je
sbb
jae
adc
jbe
xor
inc
sbb
inc
sub
rcl
and
pop
inc
testl
adc
sahf
add
movsl
addb
jmp
pusha
adc
jo
test
mov
xor
add
pop
pop
pusha
mov
adc
mov
push
imulb
add
jp
mov
fs
cli
or
dec
dec
cmp
idivb
inc
mov
divb
int
mov
stos
push
bound
mov
cmp
mov
inc
mov
add
mov
inc
mov
ret
aad
inc
push
lahf
dec
sti
mov
es
sahf
sub
ss
pop
add
mov
mov
cltd
xor
xor
out
movsl
or
les
enter
xor
push
pop
mov
inc
xchg
cltd
jecxz
jo
call
and
ret
rorl
ss
cltd
dec
ds
out
aam
rol
xchg
aaa
push
xchg
cmp
mov
dec
pop
sub
sub
repnz
xor
incl
aas
lcall
push
scas
xchg
lcall
test
sub
mov
testb
xchg
sub
inc
call
neg
sub
addr16
mov
and
test
pop
je
insl
push
dec
cmp
das
inc
fwait
cmpsb
lcall
fs
rcrl
ret
mov
outsl
push
sub
cmpl
ds
shrl
stos
cmpl
xchg
push
stos
sub
push
push
sbb
pop
cmp
ss
adc
jle
leave
mov
enter
add
sbb
jns
mov
inc
sti
xchg
stc
ss
pushf
and
or
int3
add
jae
notl
cltd
addl
fcompl
mov
imul
xor
xor
jo
mov
repz
jmp
lods
fnstcw
pusha
in
mov
pop
xor
mov
cmpb
adc
mov
mov
sub
incl
push
fs
or
iret
inc
mov
dec
inc
outsb
enter
loopne
lods
mov
add
push
xchg
mov
mov
or
pushf
inc
mov
add
sbb
gs
mov
movsl
xchg
lcall
arpl
adc
dec
call
jp
movb
jno
cmpsl
or
dec
jne
repnz
adc
and
and
inc
cltd
inc
mov
xor
mov
jo
repz
cmp
ss
xor
xchg
movsb
inc
push
es
movsb
sbb
mov
test
shlb
outsl
mov
adcb
loopne
scas
xchg
pop
inc
mov
sbb
outsb
sbb
fdivl
lret
adc
stc
testl
jg
iret
push
les
imul
rorl
dec
clc
inc
stc
sub
pop
cmp
push
outsl
leave
call
lret
loopne
xchg
pop
pop
rclb
iret
arpl
decb
mov
movsb
fwait
imul
jge
mov
pop
dec
jmp
pop
jne
les
sbb
add
ja
fiadds
mov
mov
outsl
mov
shlb
sahf
outsl
or
loope
stos
fs
dec
pop
decb
sahf
mov
dec
xchg
sbb
imul
lcall
arpl
js
call
pop
jmp
in
sub
loope
loope
adc
push
pop
stc
push
out
and
cld
popf
sbb
cltd
pop
insb
cs
out
cmp
aad
pop
rorl
mov
imul
sar
into
mov
or
inc
jno
pop
or
and
lock
test
jmp
pop
inc
arpl
mov
insl
test
add
imul
pusha
daa
push
hlt
sub
imul
loope
mov
out
ljmp
test
xchg
sahf
cmp
jp,pt
push
aas
cmp
xor
jle
mov
ret
nop
mov
and
mov
in
cmp
outsb
pushf
fildll
jl
and
xchg
outsb
scas
jge
repz
sub
cld
out
xchg
hlt
pop
das
addr16
pop
dec
mov
shr
xchg
rcll
into
cmpsb
add
movsl
pop
js
pop
sub
fstpt
aam
push
pop
inc
jge
sahf
int
and
repz
stos
shlb
cmc
aaa
daa
or
xorb
jno
sub
push
mov
inc
scas
mov
pop
fwait
dec
iret
cmpsl
xor
clc
fwait
lods
inc
loopne
ret
jg
outsl
testl
sbb
mov
arpl
mov
popf
push
mov
dec
lock
enter
xchg
sbb
mov
out
lcall
or
mov
sbb
daa
inc
fldenv
push
push
jmp
aam
mov
xor
dec
hlt
or
xor
clc
inc
xor
jge
sub
mov
xor
adc
mov
pusha
scas
push
ret
icebp
xorb
lret
iret
orb
ret
cmp
inc
dec
push
jb
das
inc
lcall
xor
in
mov
idivl
into
ret
out
cmp
fwait
push
popf
sub
ja
or
xchg
std
out
stos
int
push
push
int3
scas
ja
xchg
aas
and
pop
ja
lret
rolb
mov
icebp
add
sbb
cmpsl
sahf
xchg
cli
nop
nop
mov
push
movsl
adc
mov
fidivrs
into
popf
imull
jl
dec
test
or
rcrb
fnstsw
test
pop
aaa
xor
pop
mov
scas
mov
ficoms
leave
shrl
jne
bound
shl
into
lcall
mov
in
sub
push
pusha
cmpsb
stc
mov
push
fwait
ja,pt
rcrb
push
inc
mov
xchg
xchg
idivb
xchg
sub
mov
out
fidivrs
pop
mov
cmp
mov
mov
addb
jmp
push
adcl
sahf
call
hlt
jecxz
adc
jbe
les
rcl
mov
push
add
xor
xor
das
loop
daa
xchg
mov
xlat
sbb
jg
cmpsb
fcomp
leave
adc
pop
adc
aad
pop
int3
loop
test
jg
xchg
sbb
xor
outsb
popa
sbb
addr16
hlt
sub
loopne
ss
mov
mov
lods
sub
andl
imul
xchg
andl
lds
les
sbb
cwtl
mov
repz
lahf
pop
add
call
test
cmp
fldenv
cltd
xor
fmull
cmpsl
mov
cmpsb
adc
inc
andb
lret
popf
ret
xlat
dec
xchg
fwait
les
pop
movsb
test
sub
inc
sti
and
mull
movsl
sar
insb
mov
mov
mov
insb
dec
pop
inc
xchg
adc
cli
fbld
cmp
ja
jmp
fidivl
outsl
lret
pop
xor
inc
stc
jmp
addr16
es
xor
sbb
or
lds
sub
orl
aaa
imulb
and
addr16
xchg
or
jnp
aas
pushl
bound
push
jl
push
xor
cmp
fwait
js
inc
inc
push
pop
es
cmpsb
hlt
stc
ss
arpl
add
pushl
jmp
popa
adc
call
sub
adc
pop
lret
mov
hlt
into
jmp
hlt
mov
xchg
jb
push
lret
sarb
push
scas
xchg
inc
pop
in
or
and
mov
xchg
cmpsl
aad
and
push
in
lret
popf
adcb
out
ljmp
dec
and
cmpb
xchg
xor
sti
jmp
xor
or
lret
daa
out
pop
cltd
pop
and
push
jo
sub
xchg
ret
test
cmp
js
cmp
aas
call
les
cmpsb
testb
into
lock
xchg
sub
jmp
imul
cmc
sbb
cmpsb
arpl
pop
ss
call
into
loop
jmp
movsb
adc
inc
lea
icebp
notb
pop
inc
pusha
lds
push
hlt
sbb
aad
xchg
sbbb
and
loope
mov
dec
mov
je
add
cmp
sahf
movsb
dec
bound
xor
lret
xchg
mov
add
jmp
mov
cmpsb
insb
mov
int3
or
fcoml
loope
into
xchg
cmp
pushf
jl
add
xchg
insl
and
in
sbb
add
and
cmp
xor
sub
cld
ss
or
ljmp
mov
mov
push
dec
les
imul
popa
inc
fwait
lret
cmp
loope
pop
xor
mov
cmpsb
sarl
fs
lea
pop
bound
stos
mov
das
outsb
enterw
inc
out
and
xchg
sti
xchg
cmpsb
incl
outsb
test
insb
mov
inc
cmp
push
inc
lret
push
cwtl
sbb
add
fwait
scas
outsl
aas
pop
lods
jle
jmp
lea
and
cmp
and
adc
lods
or
sbb
leave
test
es
in
cmp
mov
cmp
or
lret
bound
and
dec
jge
dec
push
test
dec
inc
sub
and
and
inc
lock
dec
cwtl
fldl
aad
fdivrs
xor
push
out
ret
into
daa
xor
sub
icebp
call
dec
mov
dec
jo
lret
sbb
adc
das
xchg
shl
int
push
rorl
xor
rsqrtps
fwait
pop
je
dec
and
mov
or
es
sub
mov
inc
cmp
or
xor
das
mov
repnz
jmp
mov
movsb
jle
mov
out
lahf
xchg
mov
jb
sub
lcall
mov
mov
push
push
add
adcb
divl
and
push
movb
inc
test
jmp
or
jmp
cmp
push
mov
adc
push
jnp
gs
imul
iret
dec
lods
arpl
push
pop
test
pusha
hlt
roll
push
dec
mov
sbb
dec
mov
leave
ficompl
mov
sbb
rclb
das
or
ficoms
sarb
int3
pop
ja
jecxz
movsl
rcll
mov
cmpsb
leave
ds
sbb
leave
aad
stos
xchg
rorl
hlt
and
mov
pop
or
repnz
push
cmp
pop
add
push
imul
sbb
mov
add
xchg
sbb
xor
outsb
jnp
dec
and
ljmp
adc
mov
pop
sbb
mov
jno
js
xlat
jb
repnz
mov
jno
sbb
xchg
jnp
std
ret
loope
in
arpl
rol
dec
cmp
and
fistpll
add
ljmp
sbb
xchg
mov
bound
and
sbb
inc
xor
sub
cld
or
les
xorl
jl
and
adc
mov
mov
jg
and
popf
xor
add
into
jno
inc
or
inc
or
xlat
adc
fcmovnu
xchg
je
push
jl
push
mov
and
in
mov
mov
push
xchg
loopne
call
sub
ret
push
jne
jns
mov
shrb
or
outsl
loope
ja
jmp
cmpb
pop
sub
int3
lea
fucomip
push
stos
mov
cmpsl
jbe
cltd
inc
and
mov
jno
out
orb
xor
push
adc
mov
je
mov
shll
push
push
xchg
inc
and
adc
add
sub
aam
and
out
call
xchg
aad
stc
lcall
lock
icebp
pushf
sub
inc
xor
ss
inc
lea
inc
push
out
data16
dec
fidivrs
int
lcall
inc
fnsave
jmp
insb
add
xchg
mov
sbb
outsb
jecxz,pt
jns
lods
daa
pop
mov
sbb
out
lahf
dec
push
cwtl
jae
inc
add
xor
out
jbe
jge
rorb
aas
ret
pop
outsl
aam
fcomip
pop
sbb
xor
dec
cmp
hlt
mov
add
lret
pop
jae
out
xchg
jl
loopne
repnz
push
add
movsb
aad
fwait
push
add
mov
xchg
fisttpl
shll
add
sti
mov
popf
push
pop
cltd
lahf
xchg
and
xor
lods
push
xchg
mov
mov
repnz
sub
or
and
cmp
addb
inc
ljmp
dec
stos
inc
ret
fwait
stos
test
shrb
lods
mov
ret
divl
jnp
test
ljmp
lock
repnz
inc
dec
or
je
dec
jns
cmpsb
xchg
inc
add
sub
mov
pop
mov
mov
jns
sti
jno
incb
adc
cltd
insl
jne
cmpsb
fninit
jnp
mov
jg
in
push
aas
sbb
jle
xor
imul
rorb
les
ja
imul
xor
int3
lds
cwtl
adc
out
inc
int
jge
push
mov
adc
sbb
sub
imul
jmp
inc
pop
xchg
sbb
orb
xchg
jge
mov
fisttps
rorl
ficompl
adc
jb
and
dec
movl
pop
push
ljmp
push
inc
or
mov
aaa
lds
bound
out
xor
ja
fcomps
in
xor
mov
fistps
and
or
jmp
jno
mov
inc
mov
fmull
ljmp
xchg
sbb
push
ss
mov
fldt
das
test
or
pop
push
fisubrl
imul
fimuls
add
pop
gs
fs
cmpb
popf
lret
mov
ud1
push
test
enter
adc
call
cmovno
sub
jae
popf
sub
movsl
rcl
inc
aaa
inc
das
sub
out
mov
cmp
jae
loopne
cltd
dec
dec
ljmp
jne
inc
jmp
popa
outsb
dec
mov
fisubs
enter
ret
mov
aaa
icebp
pop
jg
mov
das
cmp
xchg
xchg
repz
inc
adcb
lea
adcl
xor
pop
pop
fadds
stc
movsb
dec
mov
mov
lret
shll
popf
mov
sti
icebp
jmp
test
push
js
mov
lea
sbb
cs
fistps
stos
cmp
cmpsl
mov
cmp
pop
mov
in
pop
or
xchg
stos
or
lcall
pop
cmp
mov
xchg
loopne
xor
scas
cld
dec
divb
fstpl
mov
jmp
xchg
sub
add
push
sbb
push
imul
stc
fldcw
push
xchg
jecxz
roll
push
insb
ljmp
lret
mov
mov
jmp
mov
pusha
xchg
mov
cld
xchg
push
punpckhwd
mov
scas
push
dec
mov
mov
push
jecxz
lahf
out
xor
aas
into
jae
mov
push
lahf
mov
sub
mov
into
mov
xor
stos
xorb
inc
and
xor
pop
aas
and
sub
out
stos
adc
test
lods
jns
arpl
mov
jne
mov
arpl
jns
jne
sbb
push
and
mov
pop
sub
imul
mulb
pop
xor
ss
xchg
ljmp
sub
cmpsb
inc
mov
jmp
sub
scas
movsl
stc
mov
inc
dec
ja
and
jge
pop
clc
cmpsl
leave
fst
xchg
mov
pop
jg
sbb
maskmovq
negl
cmp
lahf
mov
push
xchg
fs
shll
mov
sbb
cmpsb
mov
popf
adc
adc
ja
pop
and
push
cli
sub
insl
and
aam
push
rorb
das
mov
lea
mov
and
ret
jno
fcomi
ds
fwait
jo
xchg
jg
and
andl
dec
xchg
out
pushf
clc
and
shll
das
cwtl
and
sbb
fdivrs
daa
insl
imul
es
mov
aaa
sarb
adc
test
sbbl
aas
popf
rcr
in
into
push
cmp
outsb
inc
imul
adc
lea
adc
sbbl
out
push
scas
adc
push
cwtl
push
ficomps
xchg
and
sub
jge
xor
inc
pusha
mov
sbb
pop
jne
push
add
mov
repz
cmp
sahf
lcall
jo
movsb
xor
jmp
inc
ret
in
jl
outsb
cmp
inc
sub
and
mov
nop
test
dec
pop
pop
in
into
in
out
loop
push
or
clc
jb
repnz
mov
pushf
xor
pop
out
adc
mov
xchg
pop
mov
scas
add
mov
in
xchg
cmp
flds
mov
xlat
sti
stos
popa
int3
or
push
xchg
cmp
js
jge
aaa
stos
mov
daa
lret
mov
lods
push
sub
ret
imul
cmp
and
into
jo
xorb
lret
bound
js
call
ja
mov
mov
inc
insl
movsb
int
sbb
popf
add
enter
and
pop
daa
push
hlt
fsubrl
sti
dec
data16
test
mul
mov
mov
movsb
dec
add
lret
mov
out
mov
ja
in
aad
or
mov
cmp
mov
in
test
scas
pop
sbb
mov
rcrl
push
xchg
rcrl
ret
stos
inc
test
or
mov
xor
shlb
xchg
cmp
aad
loop
fistl
xchg
lret
adc
imul
imul
mov
jl
jg
mov
dec
aad
imul
sti
insb
or
add
pop
lds
push
cmp
mov
pop
sbb
outsl
es
sub
loopne
rcr
pop
addr16
scas
movl
push
and
mov
cmpsl
add
fsubl
adc
xor
add
push
fs
or
loopne
mov
pop
cmp
xor
xchg
jle
test
mov
mov
ljmp
sbb
pop
push
in
and
jmp
stos
outsl
jns
jno
or
push
insb
mov
add
stos
repnz
adcb
jne
sub
mov
aam
jecxz
inc
xor
mov
add
sbb
popf
sub
or
ja
dec
or
loope
aam
xchg
ret
jae
sub
dec
orb
outsb
mov
dec
or
cmp
ja
imul
and
js
mov
pop
inc
jecxz
fsubp
mov
cmp
mov
sub
out
jge
lcall
jg
in
shl
in
stos
xor
rol
stos
inc
ljmp
pop
xchg
loop
mov
aaa
fimuls
jle
loope
mov
andb
xchg
jbe
hlt
push
hlt
sarl
mov
ljmp
leave
mov
fldenv
xor
push
lods
lcall
sbb
lcall
inc
daa
sub
inc
popa
test
adc
and
fs
xor
imul
addl
cmpsl
and
xor
jmp
push
sbb
into
xor
push
xor
adc
scas
mov
loopne
repz
inc
icebp
sbb
in
dec
jne
js
outsl
pop
ds
or
mov
add
imul
lret
dec
adc
fldt
sbb
call
ficomps
in
and
mov
aas
cmp
lea
divb
mov
loop
jo
add
xchg
ret
mov
cmp
mov
jno
push
push
xchg
mov
je
mov
xchg
out
push
mov
sub
cmp
cli
mov
sbb
loop
jae
pushf
fsubs
cmp
adc
cwtl
aam
scas
jmp
dec
call
push
aad
push
test
sbb
mov
rolb
jo
dec
sub
adc
jl
mov
and
xor
jnp
fidivl
adc
fwait
out
bound
lret
fistps
sbb
mov
lret
adc
add
mov
xlat
fldt
xor
mov
inc
xchg
jns
add
pop
mov
test
lret
mov
loop
in
jno
jecxz
cmp
aam
scas
xchg
or
dec
es
bound
push
in
aaa
or
dec
in
jno
cltd
ret
daa
addl
xlat
leavew
lock
imul
in
fsubrs
iret
sbb
int
cmp
les
pop
aam
fwait
and
subb
mov
sahf
js
adc
fs
scas
push
ds
mov
lds
pop
mov
mov
stos
or
xchg
mov
fists
int
mov
add
xchg
pop
call
xchg
or
inc
xchg
dec
dec
popa
enter
movsb
lods
inc
adc
stos
jecxz
ds
mov
cld
jl
mov
or
mull
add
mov
xor
mov
movb
rcll
lret
aad
imul
jae
orb
cmc
mov
flds
repnz
inc
mov
add
stos
outsl
test
jnp
lcall
push
enter
cli
orb
add
dec
sbb
mulb
aad
shrl
push
mov
jmp
scas
mov
dec
pop
shrb
idivb
push
or
mov
cld
xor
int
mov
ds
addl
movsl
pop
add
imul
pop
add
cmp
iret
inc
cwtl
jns
insl
cmp
out
mov
shrb
dec
pop
mov
jg
shr
xchg
incl
arpl
arpl
mov
lahf
mov
aas
dec
je
lretw
sub
mov
cmp
out
shrl
xor
outsb
out
mov
imul
push
inc
mov
xchg
xchg
ss
sbb
enter
aas
hlt
jbe
ret
mov
push
and
addl
std
into
scas
aas
movsb
xlat
les
pusha
sbb
ds
stc
cwtl
adc
and
jge
shlb
test
iret
lret
out
popf
clc
popa
fcmovne
inc
mov
bound
push
mov
test
in
rcll
pusha
sbb
aam
movsl
into
pop
sbb
xchg
mov
xor
fists
cltd
loop
pushl
push
cmp
js
push
inc
push
dec
jns
bound
sbb
mov
add
sbb
add
and
das
xor
adc
lock
inc
fs
les
adc
insb
arpl
mov
mov
xor
std
jo
sarb
mov
xor
stos
xor
sti
mov
lret
repz
and
ret
mov
xlat
mov
xchg
fsubs
aam
call
sub
decl
sbb
sbb
lods
in
jmp
fwait
mov
test
push
xorl
inc
sub
in
and
dec
cld
psllw
imul
dec
lods
test
sub
add
repz
iret
inc
in
cmc
adc
shll
insb
xor
cmp
sahf
daa
xchg
cmpsl
xor
add
in
mov
push
jg
lds
mov
inc
lea
push
inc
jo
fisubrs
jecxz
xchg
cmpsl
xlat
sbb
mov
test
aad
and
push
insb
movsl
adc
jl
add
pop
adc
out
mov
mov
rcll
pop
sti
fdivs
jne
stos
popf
inc
sbb
xor
bound
jno
dec
insb
inc
mov
insb
mov
hlt
jecxz
push
xor
sbb
lret
mov
shl
jl
rol
add
dec
pop
cmp
es
mov
jns
mov
and
adc
imul
addr16
pop
mov
out
mov
fiadds
cmp
pop
mov
dec
mov
rolb
or
cmc
xchg
fcmovbe
aaa
iret
xchg
mov
sub
sbb
inc
arpl
aaa
movsb
push
jae
cmc
scas
lea
ja
push
inc
xchg
aam
push
in
cli
loopne
gs
jne
lods
cld
xchg
mov
cmp
adcb
stos
add
dec
in
imul
insb
hlt
sbbl
xlat
push
adc
mov
test
push
adc
cwtl
inc
sub
rclb
mov
je
fstp
xchg
in
pop
out
aaa
dec
ja
sub
add
jp
hlt
mov
pop
lods
ljmp
testl
add
push
jbe
and
loop
pop
fldt
and
and
popl
lea
jmp
div
cmp
jb
sub
mov
inc
arpl
jp
or
test
lods
daa
ret
sub
dec
and
out
push
dec
lods
mov
dec
jmp
jb
into
add
subl
and
dec
sbb
mov
dec
adc
adc
jno
add
leave
cmpps
clc
lea
dec
stc
lcall
xor
sub
leave
aaa
pop
adc
cld
sti
and
outsl
ss
aam
ss
arpl
scas
lods
pop
sub
xchg
jnp
in
cltd
shlb
mov
lret
mov
sub
inc
out
or
mov
jle,pn
xchg
push
sub
rorb
imul
call
stos
aaa
sub
adc
imul
xchg
scas
arpl
dec
pop
insl
idivl
rcll
hlt
in
sbb
sub
adc
mov
cmp
mov
dec
sbb
fs
test
bound
pop
std
push
or
outsb
loopne
sub
in
lcall
js
mov
cwtl
fistl
insb
lods
and
fnsave
sub
gs
mov
int3
or
cmp
adc
cwtl
fdivl
lret
adc
push
popf
inc
pop
ss
mov
sahf
imul
jmp
mov
daa
jnp
mov
xlat
jp
insb
pop
dec
push
shll
and
mov
xchg
jle
add
ret
sbb
lea
mov
insl
mov
inc
fwait
cmc
jmp
test
pusha
jle
xchg
adc
jmp
push
movsl
jge
inc
fld
sahf
dec
push
jb
or
add
jns
pop
lds
stc
scas
testl
xchg
fidivrl
or
mov
mov
rcr
mov
cmpsb
setle
and
xchg
adc
call
lcall
or
les
or
add
add
xor
adc
movb
pop
fsts
pop
cli
xor
je
jns
mov
jmp
test
clc
push
add
ja
mov
int
sahf
sub
cmpb
ds
das
sbb
pusha
pop
push
std
xorb
sahf
shlb
les
fstl
sbb
jb
lods
pushf
call
in
mov
scas
insl
aaa
call
loope
or
ss
stos
pop
jb
add
mov
movsl
enter
out
testl
popa
je
and
xor
ds
xchg
fadd
ret
daa
inc
mov
add
unpckhps
or
or
into
mov
add
mov
or
shll
or
pop
lret
stc
or
enter
cmp
popa
jle
es
imull
push
xchg
cmp
dec
xchg
out
and
movsb
cmp
jecxz
adc
fnstcw
fcmovbe
cld
pop
push
xor
aam
xlat
jnp
scas
cltd
jns
popa
push
icebp
je
lret
dec
je
repnz
repz
lock
lock
pop
cmp
push
lock
out
scas
dec
test
add
fnsave
lret
outsb
mov
addl
sbb
loop
dec
xor
push
iret
jae
in
out
imul
jo
lock
repnz
add
ret
sbb
lods
mov
or
jo
and
push
lahf
lods
sub
movsb
cmp
mov
das
std
pusha
mov
daa
ja
mov
mov
mov
outsl
jp
icebp
popa
ffreep
push
pop
fmulp
jp
lods
js
add
mov
sbb
aas
mov
popf
cmpsl
in
dec
cmpl
sub
sar
stc
cmp
pop
dec
enter
mov
fstps
mov
or
cli
popf
sub
push
push
cmpsl
lcall
dec
and
jne
dec
xchg
loopne
fs
mov
mov
inc
mov
lock
pusha
pop
xor
adcl
adc
call
xor
adc
sub
pop
push
dec
mov
cwtl
js
mov
pop
movsb
jbe
mov
data16
adc
cmpl
sti
imul
xor
int
jecxz
mov
movsl
stc
repnz
push
enter
adcb
test
mov
or
stos
in
xchg
xchg
bound
test
jbe
imul
lods
add
mov
ret
fists
sahf
and
xor
push
sbb
and
dec
adcl
jmp
mov
dec
push
xor
mov
jnp
xor
lret
in
jge
cmp
ss
mov
daa
mov
cmpsl
js
imul
jmp
mov
dec
xor
sub
in
mov
pop
mov
lret
push
pop
in
lret
mov
mov
arpl
pop
ja
jmp
enter
test
mov
or
mov
es
mov
shrl
mov
push
xchg
sub
mov
insl
xchg
inc
mov
lods
jl
scas
inc
jbe
mov
movsb
icebp
outsl
repz
mov
popf
or
pop
mov
dec
outsb
es
test
out
outsb
cmp
mov
je
add
push
scas
test
cmpsb
dec
js
outsb
adc
popf
fldcw
popf
std
aam
inc
in
jecxz
repnz
xchg
xchg
repnz
inc
out
sub
in
push
lcall
cmp
xor
push
mov
rclb
xor
cmp
or
sub
jbe
punpcklbw
xchg
cmpsb
lcall
daa
or
ds
add
jno
rcll
or
sub
push
inc
fs
orl
je
inc
lds
xchg
imul
loope
insl
out
outsb
xlat
dec
int3
movsb
mov
and
scas
xchg
cmp
je
sti
ret
repnz
loop
out
enter
sbb
adc
test
jecxz
pop
in
shlb
jae
js
inc
xchg
xlat
pop
mov
aaa
mov
xchg
loope
and
jo
xor
mov
mov
mov
mov
adc
xchg
lods
pop
in
sub
cvtps2pi
xchg
push
inc
mov
jno
push
add
jge
sbb
fcomps
push
pop
inc
mov
xchg
stos
add
or
fdivl
arpl
test
ret
outsl
push
lds
call
push
pop
fs
popf
dec
hlt
jnp
dec
jg
and
mov
mov
aad
xor
movsl
insl
adc
xor
mov
lret
fldcw
movsl
iret
pop
outsb
pop
cmpb
push
stc
aam
adc
push
into
or
push
push
jne
loop
and
test
mov
lds
push
mov
out
xchg
stc
push
sti
dec
push
stc
clc
setno
pop
movsl
aad
pop
cmpsl
imul
sbb
lcall
and
loope
push
jecxz
js
stos
inc
inc
out
bound
call
fimull
or
cmp
aam
sbb
xchg
mov
dec
xchg
dec
jge
sarb
or
fdivrs
adc
leave
xchg
mov
cmp
ja
jne
adc
hlt
outsb
and
in
bound
sub
aas
out
push
out
sub
jmp
inc
aad
add
orl
ror
sbb
xchg
loopne
cmpsl
shrb
dec
cmpsl
movsb
mov
mov
not
xor
fisttpll
gs
test
pop
pop
add
mov
test
mov
add
inc
daa
bound
loope
out
pop
ljmp
test
adc
ficomps
inc
repnz
ret
mov
push
ss
push
adc
das
testb
fcompl
in
cs
cld
adc
or
sbb
iret
mov
add
push
int3
jmp
inc
js
fistl
fistps
filds
mov
inc
mov
daa
loop
clc
push
push
inc
enter
and
pop
out
mov
pop
push
push
cltd
das
out
leave
xchg
mov
lds
pop
aad
out
add
cmp
out
jbe
js
pop
cwtl
in
int3
lahf
push
jbe
cmp
xchg
pop
xor
inc
pop
mov
lret
xor
inc
cmp
xchg
jb
sbb
aam
pusha
ret
lods
in
inc
push
pop
cwtl
daa
mov
jl
dec
cmp
out
jne
mov
mov
sbb
mov
sub
fxch
sub
cmp
cmp
out
cmp
xchg
repnz
test
sbbb
mov
out
test
and
popa
fdivl
xlat
imul
sub
popa
rcll
jae
cli
scas
lock
mov
adc
xchg
fsubrl
pusha
sub
and
xchg
xchg
pop
adc
lea
stos
sub
or
sahf
scas
inc
loope
push
push
lahf
xchg
or
xor
sub
jmp
ret
fimuls
scas
mov
push
icebp
push
mov
and
iret
sbb
or
sub
leave
ret
stos
adc
push
mov
xchg
inc
mov
pop
rorb
movsb
push
add
sbbl
xor
cmp
insb
adc
add
add
imul
insb
cs
xor
dec
sarl
popa
pop
adc
je
mov
stos
out
xlat
aad
in
out
adcb
and
lahf
outsl
inc
add
lret
ror
xchg
nop
test
push
test
push
sbb
lahf
or
fldenv
lea
and
jno
inc
cli
mulps
outsl
lods
mov
fs
mov
xchg
push
lret
mov
enter
sahf
ljmp
or
cmpsl
addb
icebp
or
mov
inc
nop
and
or
mov
push
dec
dec
xor
sub
aas
dec
scas
push
cmp
xchg
push
jno
enter
sub
sbb
in
xchg
cwtl
add
xchg
xchg
lock
dec
subb
mov
pop
cmp
addr16
sbb
cltd
ljmp
es
fincstp
lods
pusha
fdivrl
test
push
data16
cmp
aas
out
mov
stos
or
jp
ficoml
push
add
dec
push
cmp
lods
xor
push
and
lods
cmp
outsb
xchg
dec
adc
fisubrl
sub
inc
inc
pop
jmp
inc
jnp
jp
xchg
mov
aaa
jmp
mov
mov
mov
jne
cli
fwait
xchg
lds
sbb
test
xchg
xchg
es
jmp
cmp
or
cwtl
ret
jbe
test
int3
leave
and
adc
scas
bound
imul
in
add
ss
pop
dec
lods
sbb
adc
push
iret
add
pop
xchg
add
mov
std
jne
mov
push
stos
xor
fisubs
aas
jmp
xor
mov
clc
xor
clc
xlat
or
addr16
mov
push
or
fisubl
movsb
jg
pop
aam
nop
arpl
outsb
sub
rclb
xchg
ljmp
dec
push
push
cmp
inc
aam
add
mov
pop
int3
dec
add
xor
push
jmp
sub
dec
xchg
imul
je
xchg
pop
ljmp
dec
add
fidivrl
cli
outsb
mov
dec
or
das
loop
or
xchg
pop
lahf
out
mov
or
mov
test
jge
cmpl
pop
filds
lock
shlb
sub
stos
sub
push
aas
xor
lods
and
dec
cmp
loopne
aaa
fld
stc
sub
sub
xchg
sahf
sub
ljmp
sub
in
sti
jnp
jg
lea
jo
int
xchg
test
push
jae
imul
and
daa
and
mov
dec
mov
xor
inc
mov
adc
imull
jle
aad
lods
iret
por
aas
ret
cs
jo
mov
mov
xchg
jmp
scas
pop
mov
push
call
add
adc
push
cmpsb
mov
inc
sub
dec
insb
adc
inc
xchg
xchg
dec
ss
mov
in
scas
inc
dec
push
sbb
jecxz
mov
movsb
adc
fucompp
mov
sub
popa
imul
xchg
gs
rclb
jle
out
mov
cmp
test
repz
fidivl
jp
loope
sarl
jne
inc
lea
and
les
int3
test
fisubrs
lock
xchg
iret
js
ret
adc
je
cmpsb
data16
push
or
call
jge
out
xchg
sbb
pop
lret
mov
dec
dec
lret
popa
pusha
jmp
adc
int
je
push
and
test
mov
jmp
cmp
adc
shll
xorl
daa
mov
pusha
lods
mov
lahf
jno
outsl
jmpw
cmp
loopne
ret
jns
push
adc
subl
movsb
stos
js
iret
jne
cltd
push
repz
adc
pop
psrlw
adc
das
test
adc
sahf
ret
adc
mov
and
and
loop
pusha
xlat
lock
in
or
mov
in
aam
das
push
jae
aam
and
pushf
pusha
add
pop
sbbl
jp
shrb
ds
fcmovnb
push
fnstcw
sbb
mov
icebp
mov
incb
mov
mov
sub
nop
jo
fbstp
pop
xor
divl
sub
nop
cltd
test
add
adc
cmp
add
add
sub
icebp
in
lds
lret
je
and
jecxz
cmp
mov
pop
jl
popf
adc
sbb
roll
ds
and
arpl
addl
xchg
scas
jg
mov
in
xchg
test
fildl
pop
cld
push
push
fcompl
mov
es
cmp
adc
jp
mov
pusha
adc
inc
leave
aad
cmc
add
loopne
out
push
aad
js
ja
lods
loopne
cwtl
pop
dec
or
nop
xor
ja
add
cs
test
cld
mov
push
arpl
push
repz
repz
mov
scas
rcll
mov
mov
jae
fnsave
add
jns
push
or
das
adc
mov
push
xorb
jne
mov
ljmp
ror
std
push
daa
fidivl
out
cwtl
js
sarl
or
mov
mov
jb
jg
cs
fdivs
jecxz
pop
rcl
and
mov
mov
xor
mov
dec
sbb
mov
addr16
out
rcr
lds
aas
iret
aaa
pop
push
out
rcl
pusha
jl
dec
popf
jmp
daa
sbb
xchg
in
es
xor
jo
insb
notl
cs
adc
outsb
movsb
mov
mov
mov
in
or
cld
jl
mov
out
jmp
imul
sahf
jns
ljmp
lahf
arpl
mov
gs
jmp
fwait
xchg
ljmp
pop
js
mov
js
jl
jecxz
lcall
fdivrl
or
inc
icebp
jp
test
lock
jg
add
push
popf
je
fwait
pop
sbb
mov
pop
inc
or
shlb
ficoml
jmp
iret
scas
fistl
test
push
or
fcomip
mov
jb
mov
push
rcll
adc
push
xchg
dec
mov
cmpsl
mov
push
mov
pop
cmpb
dec
jecxz
sbb
fsubrs
push
inc
dec
or
test
cmp
cmp
scas
cwtl
pop
pop
or
loope
pusha
or
insl
xor
loope,pn
mov
call
pop
xor
popa
mov
push
adc
fs
xor
les
or
popf
xor
daa
iret
nop
mov
ds
push
lahf
shl
mov
scas
mov
push
mov
fists
cld
cs
dec
popa
aaa
and
push
push
lods
xchg
repz
sbb
add
cmpsb
cmp
and
les
sub
xor
adc
xchg
xor
pop
mov
push
leave
pop
xor
xchg
sub
mov
sub
mull
xchg
into
mov
xor
xchg
cwtl
stc
mov
cmpsl
int3
add
pop
mov
aaa
in
popf
push
pop
push
lcall
sbb
aas
arpl
mov
mov
add
mov
add
imul
mov
dec
xlat
mov
jle
sbbb
inc
pop
mov
jp
push
or
cli
or
scas
and
scas
push
xorb
cld
jne
or
fwait
std
mov
xorb
push
sbb
mov
mov
push
rcrb
sbbl
es
int
dec
loop
cmp
adc
cmp
xor
sbb
add
addl
mov
push
aas
inc
pop
sub
ljmp
sti
lea
mov
dec
cld
sbb
popf
outsb
repz
aad
adc
jo
mov
dec
adc
loope
push
nop
ficoms
iret
es
push
dec
je
adc
out
mov
push
jmp
ret
ja
repz
insl
xchg
push
bound
dec
out
outsb
xor
movsb
out
lods
mov
imul
dec
stos
inc
lret
loopne
or
and
sbb
in
loopne
imul
mov
aam
lret
push
cmp
scas
das
jmp
pop
lods
mov
mov
sbb
mov
addr16
cwtl
mov
push
jecxz
out
mov
std
imul
push
js
sbb
popf
sub
jo
push
mov
js
mov
mov
es
cmc
sbbl
fldt
adc
cmp
jle
mov
sub
and
in
inc
cmp
sbb
sub
insl
rcrl
add
mov
int3
pop
push
lods
mov
mov
or
xor
icebp
hlt
gs
mov
adc
in
mov
dec
call
fnstcw
imul
jne
dec
idivl
mov
jbe
adc
inc
jae
enter
aaa
scas
push
jns
movsl
mull
inc
inc
shrb
imul
aad
sub
push
repnz
pusha
decl
mov
pop
ja
mov
push
sub
enter
cli
mov
in
test
andb
cltd
movl
xchg
xchg
arpl
pextrw
inc
jns
ljmp
lcall
out
pop
imul
and
insl
dec
xor
or
mov
lcall
stos
insb
roll
mov
pop
fsubs
inc
add
mov
xor
jns
jg
jno
repnz
shrb
lds
mov
xor
xor
or
mov
sub
decl
xchg
jge
loopne
aas
jmp
mov
pop
movsb
sub
mov
pop
out
jmp
jmp
arpl
nop
ljmp
mov
faddl
clc
mov
decl
sarb
mov
xor
xchg
cs
xlat
scas
push
pop
mov
mov
lret
hlt
fistpll
and
adc
mov
jbe
testb
movsl
push
mov
cmp
pop
notb
and
into
xlat
xor
pop
xor
push
sbb
mov
stc
out
jecxz
inc
fistl
cmp
lret
mov
out
pop
lds
inc
sub
scas
stos
imul
xor
in
fidivrl
sbb
dec
stc
lret
push
jno
test
cld
inc
push
les
dec
mov
mov
loope
mov
movsb
sbb
fadds
arpl
rol
jb
jo
inc
faddl
xor
sahf
pop
popa
aam
cmp
dec
jbe
fimuls
xor
in
adc
xor
sti
pop
xchg
popf
cli
xchg
addr16
imul
mov
movsb
or
or
pop
mov
cli
lods
clc
addb
cwtl
jns
sub
jge
outsl
lods
lret
iret
pop
pop
test
imul
xor
test
sub
dec
add
ficoms
cmp
cwtl
cld
fisttpll
adc
xchg
movsb
jae
insl
jle
inc
push
xor
lret
or
push
sti
mov
jmp
stc
and
xchg
adc
or
int3
adc
sbb
aad
stos
jg
imul
xchg
xchg
adc
mov
fisubl
mov
imulb
jg
lretw
push
push
adc
fwait
push
sbb
and
push
and
call
loope
fiadds
scas
mov
aam
lret
jle
ds
push
inc
inc
imul
mov
lock
outsl
out
insb
aam
std
add
fbld
lret
xlat
xchg
and
ret
dec
jmp
jecxz
pop
adc
xchg
testb
dec
ret
mov
out
adc
call
idivb
push
xchg
xor
out
inc
rcr
fisttpl
sahf
mov
ss
mov
fs
sbb
fstl
sub
roll
lock
cmp
dec
sub
ljmp
fbstp
cmp
cmp
mov
push
mov
pop
xchg
into
daa
sub
jo
adc
mov
lods
dec
pop
jbe
push
dec
gs
mov
lock
outsl
cmp
and
jp
dec
test
mov
mov
aaa
sbb
mov
push
test
mov
outsb
jno
cs
data16
in
and
mov
adc
and
or
movsb
test
add
xchg
cmc
mov
or
jl
test
and
lret
or
cmc
dec
and
mov
xor
xchg
pop
fnsave
mov
fdivrs
jae
pop
adc
mov
flds
faddl
add
inc
add
sub
add
das
mov
test
dec
repnz
or
sub
jge
adc
xchg
cld
popa
sub
sbb
sub
pop
adc
lahf
cmp
jae
sub
sbb
stos
xor
lret
ret
daa
ret
outsl
loope
mov
adc
mov
fwait
push
pop
lea
mov
fdivrs
xor
aam
dec
fwait
jp
mov
inc
mov
dec
movsb
leave
sbb
push
mov
push
ljmp
mov
adc
aad
or
mov
cs
pop
ror
loop
jne
xchg
or
in
dec
add
pop
or
das
adc
adc
lcall
pushl
mov
arpl
in
loopne
dec
gs
scas
mov
lock
mov
push
mov
push
pop
xchg
int3
jmp
outsl
jp
mov
cmc
mov
addr16
pop
sahf
jbe
or
mov
mov
fcmove
mov
movsb
das
insb
loope
mov
out
sbb
addr16
push
or
ret
mov
aad
pop
adc
pop
dec
push
mov
int3
arpl
mov
data16
in
mov
adcl
inc
jge
test
cmpsb
pop
mov
rcll
dec
pop
inc
add
and
jl
and
loop
jnp
popf
icebp
jl
jnp
jns
sahf
jmp
pop
aam
stc
fiaddl
dec
cmp
push
enter
mov
popf
inc
mov
xor
sbb
xchg
outsl
icebp
fs
shll
cmpl
pusha
jae
flds
mov
test
jb
pop
jmp
or
ja
incl
push
pop
pushf
lock
xrelease
imul
orl
mov
xorl
lods
mov
dec
mov
out
fdivrl
cmc
lea
mov
sbb
ss
jl
call
push
push
inc
fmul
daa
imul
mov
mov
cmp
mov
daa
pop
std
push
jle
addb
xor
sar
sub
mov
not
cmp
and
adc
ds
cmpsb
xchg
xor
js
sbb
xchg
rclb
jno
icebp
xchg
jns
inc
mov
sub
xor
stos
fmulp
les
repz
ja
jo
dec
pop
inc
push
fbstp
and
or
jns
jmp
sub
fdivl
and
push
lds
int
jmp
cmpsb
push
jne
add
in
gs
ror
xchg
mov
addr16
mov
ror
mov
sub
imul
or
test
shrl
jecxz
adc
sub
outsb
movsl
inc
adc
mov
xchg
js
imul
orb
lcall
and
out
cmpsl
es
mov
add
cmp
and
test
daa
and
mov
mov
add
in
dec
inc
or
or
loope
bound
jge
ret
cli
adc
les
out
shrl
mov
and
imul
shrl
ljmp
mov
cmp
inc
aaa
fbld
sti
subb
sub
push
stos
pop
mov
push
pop
bound
jp
add
sbb
push
ret
lock
xor
inc
test
pop
lret
sub
outsl
xchg
arpl
aam
loopne
into
pop
scas
pop
xchg
pop
cli
mov
adc
pop
movsl
movsb
aas
pusha
add
outsb
sbb
sbb
jecxz
mov
xchg
inc
data16
call
shlb
lcall
sti
loopne
jo
pop
scas
mov
mov
in
nop
mov
mov
mov
push
adc
push
jecxz
test
jmp
outsb
jbe
loop
inc
xchg
shrl
xchg
out
ss
repz
aad
add
jmp
data16
bnd
xchg
imul
loopew
adc
in
adc
sbb
int
xchg
movsl
int
fstpt
cmp
push
push
pop
add
sbb
fiaddl
add
call
cmp
dec
dec
jbe
cmc
ret
xchg
enter
mov
mov
xor
imul
add
sarb
sub
aad
xchg
cli
jg
add
jecxz
movsl
test
fwait
shll
push
loopne
or
adc
pop
adc
sbb
cmpsb
ds
in
repz
loopne
lock
popf
outsl
ret
mov
xchg
sbb
pop
pop
mov
xchg
mov
int3
jbe
mov
std
xchg
mov
lea
subl
cli
xor
cmp
pop
test
cmp
xor
mov
lock
repz
pusha
cmp
mov
and
mov
mov
imul
fnstsw
mov
mov
ror
cmpsl
xor
cltd
out
push
xchg
test
nop
dec
cmp
shr
adc
popl
imul
lcall
sbb
jae
js
xchg
mov
fadds
cmp
cmpsl
adc
sub
cmpl
in
mov
xchg
inc
pop
jmp
dec
jecxz
icebp
mov
leave
cwtl
fcoml
lahf
lods
fadds
xor
sbb
sub
sub
push
cmpl
fdivl
sahf
pop
xor
xor
cmp
pop
xchg
cmc
adc
hlt
lods
jae
push
roll
jno
add
jne
mov
in
push
push
int3
addl
mov
test
fistps
das
jecxz
cld
cmpsl
cwtl
xchg
mov
xor
inc
sbb
fidivl
hlt
sti
movsb
cmp
pop
pop
xchg
sbb
xchg
pop
pop
pop
push
pop
and
aam
ret
insl
fsubs
or
xchg
lds
aaa
shl
or
adc
scas
dec
pop
popa
jbe
and
mulb
sub
sub
mov
lahf
push
pushf
mov
xchg
fnstenv
cmp
xor
xlat
pop
xor
sti
test
fists
mov
cmp
ljmp
dec
ficoms
xor
inc
mov
xchg
pop
cmp
pop
pusha
pop
stc
push
jecxz
rclb
insl
and
aam
pop
mov
dec
and
ja
imul
lahf
jns
std
cmc
pop
dec
xchg
nop
imul
xchg
call
lcall
adc
mov
sub
dec
mov
shrb
xchg
xchg
leave
or
fsub
repz
ud1
mov
jecxz
inc
lahf
cmpsl
dec
pop
xchg
mov
and
scas
cld
lods
adc
pop
mov
xor
pop
sub
idivb
stc
add
sti
jge
mov
cmp
mov
jo
jle
adcl
jnp
cmp
cmc
je
pop
jnp
sbb
mov
jne
jbe
mov
mov
repz
xor
mov
mov
sub
pop
popa
mov
outsl
push
sbbb
aas
cli
lds
bound
jge
clc
xor
je
mov
push
dec
pand
aas
cmpsl
adc
xchg
aad
ret
push
rorl
and
ljmp
mov
enter
mov
and
dec
mov
mov
addr16
jg,pn
mov
or
push
mov
aad
gs
xor
pop
mov
adc
jnp
mov
push
clc
insl
clc
dec
mov
int3
sahf
push
dec
pop
ficompl
adc
jb
inc
fs
pop
stc
andl
jmp
push
out
ret
hlt
mov
xchg
mov
xchg
dec
pop
adc
test
jne
add
xchg
fmull
and
daa
mov
daa
or
mov
jle
pop
fs
cmp
add
or
push
mov
mov
mov
sub
jge
jo
inc
pop
enter
xchg
data16
rcl
mov
les
rol
stc
out
aam
mov
jg
add
sbb
test
das
dec
jge
lds
dec
repnz
mov
dec
mov
mov
mov
das
and
add
adc
and
xchg
pop
fnstcw
out
leave
out
mov
mov
ds
ljmp
loope
ljmp
inc
inc
xchg
inc
int
cs
adc
test
mov
iret
xchg
add
test
test
sub
push
sbb
mov
and
mov
fisttps
push
jbe
mov
jne
into
mov
xlat
fidivl
imul
add
inc
jmp
lret
fs
popf
sahf
imul
sbb
sbb
fs
shl
in
inc
leave
pop
xchg
jecxz,pn
inc
sbb
daa
jmp
call
mov
movsl
adc
movsl
outsb
jbe
fs
mov
pop
data16
jbe
sbb
pop
je
int
hlt
mov
push
jnp
lahf
std
loope
rcrl
fimull
xchg
xor
mov
jne
leave
dec
subb
xor
ja
call
mov
into
in
mov
lock
dec
enter
mov
xor
inc
add
stos
push
mov
jg
movsl
shll
dec
sti
test
lods
mov
and
fs
jl
fisubs
outsl
mov
fcoms
sub
sbb
ret
mov
dec
out
arpl
rorb
lods
mov
cmp
mov
js
cs
cmp
push
loop
xchg
pop
pop
imul
pop
fs
pop
adc
addr16
mov
xchg
adc
cmp
dec
shll
out
mov
fsub
add
bound
mov
jl
adc
daa
cmp
lret
shrb
push
pushf
adcb
int
pop
push
icebp
mov
inc
iret
dec
inc
inc
mov
sbb
sbb
call
rcrl
mov
arpl
lock
pop
cmp
sub
addl
and
mov
mov
and
jecxz
xor
sub
lcall
adcb
cmc
jl
movsl
add
mov
jb
das
mull
insl
pop
add
pop
jnp
scas
or
stc
movsb
or
cwtl
inc
lock
mov
sub
int
mov
mov
aaa
stos
jae
rclb
in
jnp
lcall
mov
inc
cli
pop
in
inc
sbb
mov
sbb
xor
leave
jle
pop
shrb
lock
sub
lahf
daa
lea
fsub
bound
pop
sti
and
mov
imull
repz
inc
rcrb
sbb
push
jb
pop
out
dec
lret
jo
mov
scas
push
ss
pop
adc
jno
cltd
or
mov
aam
mov
aas
das
loop
mov
inc
ljmp
pop
jns
or
sbbb
pop
mov
std
pminub
xor
mov
sahf
mov
push
out
pextrw
js
add
scas
push
xchg
pop
stc
std
in
jb
and
inc
xlat
aad
aam
mov
into
aad
shrb
js
aaa
sbb
lahf
hlt
ljmpw
xlat
and
mov
sub
repnz
sbb
sub
dec
jle
mov
inc
scas
sti
in
jle
hlt
xlat
mov
std
xchg
test
sbb
scas
lret
popf
ss
popf
je
jle
inc
cmp
les
mov
xor
or
dec
inc
into
jo
int
out
ret
adc
repnz
les
cmc
and
out
fisubl
pop
sbb
je
mov
and
pop
cmpsl
cmp
push
push
xor
pop
xchg
rcrb
pop
mov
subb
mov
pop
sbb
inc
mov
popf
daa
push
cltd
or
dec
loope
ja
add
sub
dec
sbb
repnz
mov
sbb
ja
xchg
in
push
test
inc
push
sbb
mov
in
mov
push
cmc
mov
inc
and
lcall
shll
mov
add
rcrl
loopne
xchg
rol
les
or
aad
hlt
fmul
cli
xchg
cmp
sub
xchg
sub
fildl
mov
int
cmp
push
push
inc
jns
sbb
cmp
scas
cmp
add
jnp
iret
xchg
sub
in
int
and
mov
add
pushf
addb
stos
popf
imul
sahf
pop
in
lcall
sub
cld
mov
cmpsl
mov
adc
shrb
jle
lea
sub
mov
ds
rolb
xchg
in
inc
arpl
pop
daa
sbb
mov
or
je
push
ss
test
ja
mov
lock
mov
and
mov
pop
sbb
ret
adc
mov
stos
sbb
popf
xchg
xor
adc
add
sbb
or
lods
arpl
xor
and
push
sub
aad
scas
inc
insl
cmpsl
lahf
lods
adc
add
dec
mov
mov
shlb
ss
cli
nop
pop
aad
das
or
xchg
scas
adc
dec
pop
push
or
xchg
adc
rcll
repnz
push
pusha
dec
fstpt
stc
sbb
push
inc
mov
add
insl
mov
stos
shll
std
ret
push
jo
and
push
call
cmp
jmp
jno
fistpl
dec
bndldx
in
or
and
pop
movsl
jae
push
insb
xor
lcall
sub
pop
xchg
into
dec
std
mov
daa
push
ljmp
add
fnstcw
lret
scas
sub
ds
and
lods
or
mov
rcrb
dec
pop
jecxz
cltd
rol
jae
mov
pop
sbb
test
adc
cmp
mov
xor
mov
out
fsubrs
cmc
ja
int3
pop
js
sub
test
leave
adc
mov
movsl
or
out
daa
pop
cmp
aas
lahf
mov
cmp
stos
adc
fstl
sbb
mov
and
xchg
lods
mov
sbb
adc
and
jo
test
mov
xchg
and
lods
aas
int
imul
cli
sbb
jbe
lods
sti
xchg
adc
add
sbb
dec
xor
mov
ret
loop
or
dec
xchg
or
sbb
mov
dec
rcl
push
test
mov
out
testl
jmp
push
popa
mov
call
xchg
sbb
cmpsb
sbb
and
lret
in
xor
sar
lods
push
sub
mov
fwait
sub
inc
movntq
dec
lea
in
lcall
hlt
fidivrl
xchg
das
mov
mov
pop
adc
push
pop
adc
adc
push
mov
adc
loope
sub
gs
addr16
cmpsl
scas
push
or
lds
popa
aad
mov
xor
popa
add
mov
mov
xchg
es
aam
add
cs
adc
and
adc
iret
ret
inc
mov
arpl
xlat
and
bound
popf
jl
mov
nop
mov
cs
std
loopne
add
dec
mov
xchg
cmpsb
adc
mov
dec
fstpl
cmpsl
imul
jl
sahf
cmp
cwtl
or
gs
outsl
hlt
xorl
ds
hlt
push
mov
adc
in
stc
movsb
rolb
jbe
fwait
sub
test
add
mov
mov
rcr
dec
jne
flds
fsubrs
pop
call
jne
inc
xor
add
jmp
inc
dec
jnp
xchg
gs
cli
out
jmp
dec
xor
add
xchg
bound
dec
adc
xor
or
ljmp
jecxz
js
xchg
test
inc
sbb
int
sbb
and
or
dec
shlb
and
pop
aad
stc
jle
cmp
std
cld
mov
fcompl
jnp
mov
push
cmp
adc
adc
inc
test
dec
mov
and
sahf
pop
jecxz
sbb
or
adc
push
dec
pushf
add
in
cmp
das
shlb
mov
cltd
push
outsb
sti
pop
sub
cmp
sbb
cmp
fdivr
sub
inc
add
aas
cltd
and
fstl
insl
adc
lret
jge,pt
fcmovnb
shl
inc
dec
in
jb
stos
stc
xor
ljmp
dec
call
repz
mov
sahf
push
fstpt
movl
and
mov
fisubs
cmpsl
rcl
ret
mov
xor
add
inc
sub
xchg
pop
shr
out
add
mov
jbe
and
lock
outsb
mov
push
sub
cmp
popf
xchg
js
pop
int3
mov
loopne
adc
ljmp
cmc
mov
ret
push
cmp
repnz
pop
sub
dec
adc
sbb
sub
roll
and
dec
jge
push
fisubrs
sub
pop
jo
popf
jle
fnstcw
sub
jp
push
scas
adc
push
dec
jp
mov
stos
fdivrs
jns
into
repnz
mov
lret
pop
addl
sub
orl
mov
pusha
push
enter
and
dec
ret
or
cs
inc
addr16
cld
cmpsl
dec
nop
push
pop
icebp
xor
subl
pop
pushf
cmpsl
xor
iret
movsl
fldcw
in
and
rcrb
xor
lea
hlt
shlb
inc
pop
sub
cmp
outsb
je
mov
xchg
pusha
or
fnstenv
and
mov
popa
sahf
jl
scas
ret
daa
enter
mov
pop
mov
imul
movsb
cmp
in
or
cwtl
mov
mov
adc
jnp
xor
gs
pop
sahf
enter
xchg
test
pop
fadd
cmpsl
pop
popf
sbb
sbb
mov
or
int
adc
ja
mov
sbb
add
mov
lret
mov
movsb
inc
sahf
push
xlat
lea
inc
sub
cli
mov
xchg
push
cmp
lea
lahf
push
and
mov
lock
outsl
jl
mov
test
fs
add
insb
jp
bound
ds
xor
movsl
add
sub
mov
call
pushf
push
jbe
xchg
push
add
inc
cmp
in
dec
inc
add
inc
jae
stc
cmp
insl
pop
xor
fisubrl
out
push
pusha
jmpw
out
leave
sbb
mov
gs
imul
icebp
push
fcoml
mov
lock
dec
or
shl
fucom
and
xlat
add
pop
xchg
aam
sub
out
jae
ss
ffree
pop
daa
ja
int
or
pusha
xchg
pushf
pop
cmp
xor
dec
lea
test
mov
and
add
push
daa
xchg
add
jp
out
enter
lods
push
sub
ret
sti
or
std
icebp
inc
out
into
lods
fcmovb
xchg
inc
adc
and
es
sub
in
pusha
daa
jl
and
popf
lahf
scas
inc
push
push
movsl
sbb
jl
fdivrl
call
int
jbe
sub
inc
stc
inc
or
aad
jbe
add
and
jo
sub
dec
jns
push
adcl
lret
adc
mov
and
ljmp
xchg
jle
sub
xchg
fsubr
inc
jnp
out
push
rcr
pop
test
mov
pop
bound
and
stos
push
pop
js
sbb
ja
fs
rcl
test
cmpsl
xchg
mov
dec
fmull
add
bound
add
mov
fwait
pop
mov
call
mov
lahf
out
vmovhpd
addr16
pusha
and
fst
mov
pop
add
cmc
and
sbb
dec
add
call
imul
pop
fcomps
push
mov
dec
mov
add
gs
ds
mov
cld
test
jmp
adc
mov
dec
push
fisubrs
dec
push
jmp
fiadds
mov
sub
and
ja
in
add
ret
push
imul
repnz
or
jg
iret
cli
icebp
sbb
popa
outsb
xor
scas
push
and
lods
mov
and
jg
leave
in
or
pop
inc
jnp
pusha
in
jne
mov
jmp
jmp
aas
stos
ljmp
mov
add
pop
ja
jp
js
mov
test
pop
jg
mov
pop
cmpsb
ljmp
push
jmp
mov
cwtl
xchg
leave
in
jne
inc
dec
stos
subb
test
shll
aaa
fcoms
add
test
mov
loop
inc
inc
in
faddp
xchg
lods
sarl
sbb
dec
push
sub
std
sti
inc
mov
test
lcall
cmc
inc
jl
or
mov
pop
adc
mov
mov
xor
inc
sub
mov
fildl
mov
jnp
fs
adc
mov
dec
jmp
ja
lret
adc
aam
xlat
adc
add
subl
adc
fdivrs
mov
cmp
iret
fidivrs
in
movsl
cmp
mov
xor
in
jg
mov
mov
pop
cmp
mov
arpl
mov
loope
test
pop
sub
sbb
jnp
pop
xchg
mov
add
mov
dec
pop
les
mov
addr16
push
loope
jg
outsb
fstpl
push
add
mov
lods
sbb
push
scas
fnstsw
repnz
mov
aad
repz
daa
iret
sub
xor
pusha
ljmp
pop
mov
push
loop
mov
inc
lret
or
cwtl
pop
out
aam
sbb
aam
mov
loope
add
insb
and
xchg
testb
into
mov
sbb
icebp
cmpsb
inc
lcall
ja
mov
cmp
pop
movsl
out
jp
lds
into
sub
std
shlb
xor
sub
xchg
push
and
fstp
mov
lds
sbb
fiaddl
les
lods
and
sbb
cltd
cwtl
ret
fs
add
iret
pop
cmp
mov
lods
movsb
incl
jl
mov
cmpsl
sbb
lahf
and
cltd
inc
xchg
imul
fdivl
insb
int
adc
iret
iret
lods
mov
jp
pusha
and
bound
insl
sbb
jo
push
or
das
pop
push
dec
ret
shrd
popf
and
adc
or
les
cmp
stc
xchg
insl
cmp
daa
mov
or
xchg
sbb
push
test
aam
pop
dec
push
and
mov
in
xchg
sub
roll
xlat
repz
clc
adc
xchg
jle
jbe
in
pop
scas
mov
xor
xor
jp
mov
cmp
push
addl
insb
mov
xchg
iret
push
in
ss
xor
stos
pop
imul
sub
sbb
pushf
pushf
inc
fsubs
mov
aaa
aaa
sti
lods
pushl
mov
je
lcall
xor
xchg
xchg
neg
scas
cld
dec
dec
nop
xor
lret
movsl
fwait
push
mov
pop
jge
int3
adc
mov
out
mov
pop
mov
in
add
pop
fdivs
into
cltd
cmp
inc
inc
pop
push
push
jb
int
inc
jno
not
lods
imul
outsl
sahf
stos
pop
xchg
add
sti
into
in
pop
add
inc
shlb
ljmp
xor
lret
pop
pop
je
stc
std
xor
sub
imul
mov
dec
outsl
cmpsl
jg
out
push
sub
adc
jo
lahf
shll
in
xchg
mov
xor
aas
dec
xchg
xchg
sbb
roll
jb
pop
xchg
jbe
ss
push
or
fidivs
data16
dec
stos
inc
popf
mov
pop
jbe
test
cwtl
inc
mov
xchg
xchg
div
mov
stos
insl
ja
or
dec
jnp
shrl
and
dec
rcll
stos
in
gs
ja
mov
xchg
sbb
inc
cbtw
dec
push
xchg
arpl
sbbb
imul
sti
bound
mov
lahf
pusha
mov
fdivr
pop
loop
outsl
aas
and
add
loopne
jne
pop
cmpsb
lahf
pop
in
xchg
dec
pop
out
mov
imul
xchg
test
jns
mov
push
hlt
pop
dec
xchg
jns
xor
lahf
ret
inc
jno
or
ret
rcl
mov
sar
out
jne
cld
jb
xchg
mov
outsb
loope
out
stc
jmp
or
and
xchg
adc
mov
daa
in
lock
aas
push
rcrb
fcompp
inc
sahf
xor
enter
pop
cwtl
dec
scas
jle
into
dec
outsl
shlb
rcll
push
or
fwait
cmpsb
lock
jmp
loopne
sbb
pop
lock
cmp
sub
out
lock
sbb
xor
jo
xchg
in
cltd
std
pop
and
test
pop
fbld
aad
pop
int3
idivl
jp
mov
inc
mov
mov
mov
and
nop
push
pop
dec
or
add
pop
ljmp
ret
lcall
dec
lea
or
dec
addb
mov
push
jo
mov
repnz
dec
dec
xor
push
lods
inc
les
jl
cmc
dec
mov
jle
push
mov
movb
sahf
in
xlat
mov
leave
loope
jo
jns
fs
cmp
ss
ret
and
jb
rcrl
outsl
mov
or
roll
cmpsb
add
test
mov
into
or
xlat
push
pop
or
imul
mov
ret
sbb
xchg
int
mov
adc
mov
testl
fwait
dec
cmpsb
xchg
lds
pop
xchg
mov
daa
dec
shr
sub
mov
adc
roll
mul
ss
adc
cli
add
dec
mov
push
jbe
mov
pushf
push
test
mov
int
cmpsb
pop
ds
lcall
jmp
mov
pop
sbb
xchg
out
sub
rcrb
sbb
or
and
xchg
pop
lods
xchg
ljmp
lods
imul
push
jmp
ret
cli
rorl
push
adc
pop
push
cmpl
stc
ss
fwait
pop
sbb
icebp
mov
sub
or
mov
jle
mov
mov
inc
inc
ficoms
and
call
pop
mov
mov
xor
dec
les
lods
fildl
jno
mov
aaa
cli
sub
sub
negb
adc
mov
sbb
mov
int
cmc
mov
lea
sbbl
in
out
xchg
mov
and
nop
pop
lea
push
lret
jne
add
std
xchg
jge
icebp
gs
stos
bound
loopne
ret
jge
mov
mov
out
adc
xlat
jl
dec
dec
rcrl
scas
pop
jp
and
call
stos
mov
or
xlat
and
push
mov
cmp
cmp
repz
lock
mov
rcll
add
movsl
mov
rcl
xchg
mov
rcrl
ret
xchg
imul
mov
in
scas
leave
sub
jb
mov
ljmp
mov
cmp
jp
jns
lock
or
loope
inc
or
jmp
xchg
rorb
push
stos
movsl
adc
mov
imul
lods
push
icebp
arpl
in
int3
loope
daa
xor
cmp
and
shlb
or
stc
test
scas
bound
jge
push
lret
pop
arpl
andl
sub
xlat
cltd
leave
xchg
sbb
imul
jno
cs
mov
xor
cld
sub
and
lods
repnz
mov
pop
repz
sbb
push
push
lds
icebp
arpl
mov
test
adc
push
js
mov
je
out
aaa
addb
jae
mov
in
push
cmp
pop
pop
jbe
in
mul
xchg
pop
xchg
bound
add
fildll
je
mov
add
fdiv
mov
shrl
inc
jns
sub
jge
in
or
test
cmp
fisttps
idivl
or
idiv
inc
pop
pusha
nop
xchg
jecxz
lds
test
daa
mov
mov
jne
fcmovb
loope
xor
mov
cmpsl
adc
and
xchg
dec
outsb
inc
adc
cmp
fs
test
loopne
xor
adc
cmc
adc
mov
add
push
jg
aas
xchg
xchg
repnz
mov
xchg
fldenv
scas
sbb
sub
xchg
les
jo
adc
adc
stc
fcmovnb
inc
mov
sbb
sbb
sbb
outsb
pop
dec
mov
mov
and
das
adc
mov
inc
test
out
into
cld
jns
mov
test
add
add
and
cmp
add
fsub
loopne
cmpsl
push
sti
aam
adc
mov
dec
loope
aas
pop
jb
mov
dec
and
imul
push
ljmp
add
or
push
pop
adc
test
in
push
outsb
jno
dec
dec
mov
pop
cmp
pop
cmp
mov
fstps
stos
add
cmpsl
pop
pop
dec
add
lods
or
push
mov
mov
loope
sbb
xor
push
add
jne
mov
xor
dec
out
pushf
cmp
loopne
aas
jmp
jae
or
and
and
inc
icebp
cmp
lods
xchg
xor
testb
mov
gs
inc
pop
ja
cmp
in
ffreep
or
pop
sub
and
popa
ljmp
lea
xor
jno
xor
xor
in
inc
mov
adc
inc
loop
scas
push
cwtl
or
test
mov
push
add
filds
out
and
cmpsb
in
mov
insl
add
and
stc
pop
pop
jg
stos
lods
inc
cmp
jmp
cltd
add
inc
fcmovbe
cmp
sub
fisubrl
mov
jecxz
idivl
jmp
jns
inc
insb
in
xchg
sub
idivl
out
loope
inc
mov
jecxz
outsl
addr16
pop
pop
nop
out
xlat
inc
and
fstl
fwait
out
xchg
mov
aas
adc
out
ss
popf
enter
jl
push
test
jbe
add
jmp
xchg
popa
add
add
scas
das
xchg
xchg
and
cld
dec
pop
jne
sbb
mov
in
in
clc
ds
dec
loop
filds
mov
adc
jmp
pop
cmc
xor
arpl
jmp
leave
add
add
cmp
mov
push
sbb
and
je
mov
lds
mov
pop
mov
movsl
insb
leave
inc
sub
je
push
adc
mov
pop
testb
daa
insb
cmp
out
sbb
jle
outsl
adc
add
jno
xor
jns
xchg
stos
lods
ja
xlat
out
mov
xlat
testl
sarl
inc
lods
mov
fs
xlat
lcall
xor
adc
andl
cmp
pop
xchg
push
test
and
aad
negb
icebp
stos
stc
and
xor
test
mov
inc
mov
ficoms
sub
jmp
sub
inc
push
xlat
xlat
and
sahf
in
sbb
xchg
bound
in
pop
dec
mov
ljmp
testb
jp
and
push
cmp
hlt
enter
ror
or
lods
insb
sar
hlt
iret
sub
push
out
cmp
hlt
dec
add
jecxz
sbb
xor
fiaddl
inc
test
dec
ret
popa
fs
mov
inc
rorl
out
movsl
sub
xor
fnstcw
jmp
and
jl
sub
adc
test
ja
dec
push
fldcw
cmp
std
xor
xchg
enter
push
iret
add
jno
lods
jns
ljmp
cli
in
jg
or
sti
enter
ds
push
test
push
lea
xlat
pop
icebp
push
xor
in
jne
fstl
imul
adc
inc
idivl
dec
shl
sbb
inc
call
cmpsl
loopne
and
insl
xchg
push
fnstenv
in
sub
push
lret
in
stos
push
negb
sahf
xchg
and
lret
add
add
jg
jl
sbbb
fmull
fstpl
pop
movsl
lret
push
mov
sbb
imul
cmp
jno
push
xor
sub
jb
cltd
mov
mov
add
mov
leave
push
mov
sub
daa
xor
lods
push
ret
in
aaa
cmp
adc
shll
lret
pop
sbb
pop
jnp
imul
lock
inc
ficoms
fdivr
aaa
arpl
add
int3
ljmp
mov
pop
mov
shl
inc
jae
inc
add
inc
ljmp
mov
iret
test
xchg
and
adc
add
push
or
mov
into
cwtl
mov
mov
add
mov
and
cmp
mov
mov
push
iret
dec
incl
jae
and
xlat
sahf
sub
add
stc
fsubl
cmc
xchg
xchg
push
fistl
push
dec
or
movsb
in
mov
jmp
cwtl
xchg
hlt
mov
jnp
testb
sbb
fistps
xlat
cmp
mov
mov
cmp
out
dec
daa
or
cmp
mov
jmp
adc
mov
les
and
cmp
push
stos
mov
jno
inc
cmpsl
fwait
hlt
mov
sbb
call
cmpb
lret
mov
and
movsb
sub
push
test
stos
mov
fs
pusha
add
jne
sub
loopne
into
add
pop
or
fbstp
or
imul
jle
push
add
jg,pt
fdivs
fdivl
push
lret
jp
jl
xchg
xor
xchg
push
test
cmpb
sarl
sub
push
mov
popf
dec
shlb
mov
fstpt
and
lods
repnz
fcmovnbe
ret
cmp
mov
sbb
xchg
sarl
adc
mov
sti
push
out
lahf
inc
lcall
jno
pop
repnz
outsl
lahf
int3
mov
jmp
push
cmp
movsb
aas
adc
adcl
adcl
lahf
enter
xchg
mov
dec
pop
sbb
xchg
xor
mov
jno
mov
mov
jns
lret
out
xor
adc
fcmovbe
mov
inc
sahf
std
mov
sbb
pop
mov
xor
inc
imul
das
sbb
aad
sar
jge
test
pop
and
inc
pop
xchg
mov
out
nop
shlb
mov
leave
and
pop
mov
sbb
test
test
push
mov
adc
xor
stc
pop
xor
andl
inc
inc
andb
fistl
jns
fildll
dec
jo
popa
inc
lcall
into
or
test
or
pushf
jmp
push
imul
xor
jbe
jns
jg
cli
push
cs
xchg
out
push
or
ds
movsl
push
add
sub
ss
cmp
imul
leave
jb
push
dec
pop
hlt
sub
test
in
cs
mov
mov
icebp
out
sub
sub
cmp
adc
mov
cmp
cmp
cmpsl
out
cmp
jno
repnz
dec
flds
dec
cli
sti
adc
and
stos
mov
imul
ds
icebp
ljmp
test
cltd
out
add
rolb
dec
cmp
lock
loope
and
iret
inc
sub
imul
jg
or
pop
insb
out
push
xchg
test
mov
add
fcoms
imul
faddp
jl
ret
pop
punpckhdq
popf
icebp
xor
stos
push
xchg
ljmp
jl
mov
and
pop
in
cmp
outsl
jp
pop
lods
inc
fstpl
sub
lret
mov
sub
fld
and
lock
into
aad
cmp
rorl
addr16
nop
bound
aaa
or
dec
sbb
jnp
test
fwait
adc
scas
aad
xor
insl
fs
sbb
icebp
mov
ret
mov
out
xlat
loope
add
xchg
push
les
orl
and
mov
push
ficompl
jae
jl
dec
repz
arpl
andb
sarb
mov
push
pop
mov
and
push
dec
leave
cmp
out
and
or
sbb
and
push
cmp
loop
lds
add
inc
cli
xchg
out
pop
mov
mov
dec
outsl
push
leave
xchg
xchg
jno
jg
ljmp
jbe
es
pop
movsl
sti
test
mov
xchg
mov
adc
push
mov
xor
push
mov
push
jle
sbb
popf
mov
mov
jno
and
lods
test
xor
dec
pushf
jge
loop
push
xchg
cmp
add
adc
lods
sbb
cld
cmpsl
mov
popf
cmpb
push
not
shrb
hlt
dec
je
cmpsl
fwait
movb
mov
out
and
jge
pavgw
cmpsb
or
test
hlt
movsl
scas
adc
ret
fcmovu
jg
cs
out
mov
subb
dec
push
xchg
cmpb
mov
adc
paddusb
jae
insl
mov
js
or
stc
and
add
ss
sahf
lock
cmpsl
mov
push
mov
jbe
mov
inc
add
hlt
rcrl
sub
mov
clc
in
or
add
sahf
pop
repz
mov
pop
dec
frstor
iret
and
dec
sub
in
cs
cli
in
pushl
fsubrl
mov
pop
hlt
sub
sbb
in
pop
stos
clc
in
popa
xchg
cmpl
lea
xor
push
sub
xor
flds
imulb
aaa
hlt
push
gs
inc
stc
pop
mov
mov
movsl
inc
adc
mov
sbb
jp
cmpsb
std
les
xchg
ret
outsb
fildll
jo
xchg
and
and
pop
cld
xor
movsl
inc
pop
mov
sbb
mov
pop
sbb
aas
inc
scas
outsb
cmp
jg
outsl
jle
adc
or
enter
fs
pop
pop
loopne
hlt
out
mov
les
sub
insl
lcall
jnp
aas
popf
sti
icebp
add
adc
adc
mov
xlat
mov
mov
add
push
into
push
push
rol
or
or
cmp
push
aas
inc
xchg
lock
sub
ret
jecxz
adc
inc
imul
cs
sbb
dec
jecxz
and
add
cld
lcall
fidivl
pop
pop
dec
jb
xchg
xchg
int
lret
fisttpl
cmpsb
xlat
and
mov
pop
and
push
push
jo
cld
cli
jns
xchg
into
stos
popa
mov
std
movl
sbb
inc
aas
xor
imul
addr16
js
aaa
loope
pop
mov
loop
jge
dec
sbb
in
cmpl
outsl
ret
xchg
jecxz
sbb
mov
xor
push
xchg
mov
std
popf
je,pn
shr
push
sub
mov
movsl
pop
fadd
cs
push
xlat
loop
sbb
and
call
jge,pt
cmove
ds
aaa
fldenv
pop
int3
nop
in
and
inc
lret
leave
jle
imul
dec
pop
push
cmp
icebp
cld
pop
sbb
inc
xor
dec
add
enter
lods
jg
lret
inc
mov
sahf
in
movsl
pop
js
sbb
andb
ljmp
int
mov
mov
mov
or
in
sbb
int3
or
or
aad
orb
mov
shlb
sub
enter
pusha
xor
mov
sbb
clc
dec
mov
adc
ret
in
xor
cmc
xor
or
adc
popf
cld
nop
pop
shrl
push
mov
sti
mov
and
push
stos
lcall
test
xor
call
ss
xor
fcomip
cmpsb
sub
add
outsl
xchg
cld
and
dec
rolb
insb
scas
clc
jp
or
jbe
adc
js
cmpsb
pop
push
mov
jmp
sbb
cmp
xchg
outsl
jle
scas
outsl
jbe
call
aam
in
repnz
push
shl
inc
jmp
ret
test
int3
sbb
lods
pop
adc
pop
in
xchg
jp
and
jecxz
fsubs
ljmp
xor
das
outsl
mov
mov
lea
call
inc
pop
mov
push
hlt
mov
gs
cltd
clc
mov
testl
pop
inc
add
fwait
jbe
jg
inc
mov
mov
pop
cs
daa
je
lcall
test
call
xchg
pop
jnp
cmpb
addl
fs
and
lods
fwait
xor
cmp
test
or
push
mov
scas
xor
test
xor
sbb
orl
cmp
int
dec
pop
jl
adc
cmpsb
stc
pop
repz
xchg
imul
out
jge
cwtl
fdivrs
aas
mov
sbb
dec
adc
dec
cmovs
inc
jle
push
test
push
fists
stc
sbb
and
inc
arpl
pop
xchg
xor
int
sub
push
sahf
sub
xchg
imul
or
lds
mov
push
test
dec
sbb
add
out
cmp
movsb
jbe
fdiv
jbe
fisttps
mov
sub
in
mov
jnp
or
addr16
mov
push
inc
lret
xor
jmp
fwait
pop
push
fisttpl
mov
or
nop
add
nop
in
mov
ljmp
fistpl
or
clc
pop
adc
and
xor
add
sub
pop
xor
iret
sub
js,pn
les
ret
pusha
sbb
pop
fwait
fbld
inc
inc
cltd
jne
adc
repnz
mov
ret
test
ret
jmp
mov
int3
fdivs
jns
add
jae
jno
cmpb
pop
dec
cmp
cmp
sub
dec
mov
adc
int
aas
data16
fisttpl
test
pop
xchg
and
sbb
popa
xchg
cmp
dec
test
cmp
sub
sti
iret
fdivl
aam
scas
aam
xchg
sbb
in
mov
mov
fsubrs
jnp
or
js
sbb
and
nop
inc
sub
xchg
hlt
shrb
mov
inc
mov
mov
bound
xchg
dec
test
add
fnstcw
mov
mov
push
aad
cmp
pop
sti
sbb
push
jne
stos
icebp
cli
pop
arpl
ss
out
nop
ss
idivl
xor
inc
popa
int3
cmp
addr16
call
pop
xchg
mov
push
jbe
adc
jl
mov
cmp
loope
aam
mov
push
outsb
lods
mov
push
fdivp
jg
ss
add
cmc
jno
cmp
pusha
sbb
mov
pusha
and
mov
xor
mov
mov
test
dec
cmpsl
mov
clc
push
inc
cli
das
movsl
mov
aad
cmp
mov
ret
jne
test
inc
adc
and
cmp
incl
ret
dec
ret
lret
add
nop
cmc
es
insl
daa
push
in
or
inc
mov
mov
dec
out
sbb
jl
stc
loopne
xchg
jo
leave
ret
mov
lds
cmpsl
std
and
sbb
shr
xchg
dec
dec
jne
xchg
jecxz
out
jne
cmp
push
adc
dec
stos
jae
mov
add
mov
pop
lods
stos
ja
jge
mov
mov
popa
jne
push
dec
adc
inc
mov
add
push
arpl
and
loopne
popf
out
jmp
push
bound
ds
and
adc
outsb
mov
inc
sbb
repz
in
pop
ficoml
inc
test
fdivrl
inc
xchg
aad
aaa
xor
jecxz
cmp
jg
fisubs
ds
sbb
jp
movsl
add
jmp
adc
aam
jne
push
pop
xlat
lock
inc
ret
test
sub
push
mov
pop
push
imul
inc
nop
xor
stos
mov
in
in
popa
out
and
out
pop
mov
test
out
daa
repz
sub
int3
lret
lret
jle
cmp
sarl
jne
adc
cwtl
ljmp
rcll
xlat
mov
test
rolb
and
xor
cld
mov
jp
js
mov
int3
sbb
ja
inc
mov
mov
sub
push
push
xor
xchg
adcb
imul
jecxz
mov
sbb
sbb
inc
hlt
jns
jg,pn
das
cmp
es
or
cli
add
je
and
sub
popa
mov
cli
js
clc
push
out
movsl
xlat
lcall
in
pop
pop
push
mov
inc
fistl
sub
push
fisubs
jmp
or
mov
pusha
lret
or
mov
push
testb
lods
xor
aad
ljmp
lock
sbb
fiadds
inc
mov
mov
stos
scas
dec
adc
insl
adcl
sarl
xchg
push
xlat
and
aad
iret
push
jno
mov
inc
add
dec
and
and
rorl
daa
ja
pop
inc
sbb
push
lret
cltd
das
push
mov
cs
xchg
and
cmp
test
xchg
lock
jo
xchg
mov
outsb
jb
stos
movsb
inc
mov
adc
out
mov
dec
cmpsb
push
dec
inc
add
cmpsb
mov
repnz
hlt
xor
cmp
sbb
scas
scas
sub
cmpsl
out
movsl
rol
xor
add
mov
add
xchg
jo
and
inc
sub
lds
ud2
dec
idivl
inc
pop
gs
fcomi
jge
out
jl
pop
mov
sbb
jle
dec
jnp
and
push
xchg
sub
lret
ret
lea
lahf
push
lret
dec
mov
lock
xchg
int
dec
cltd
sbb
inc
dec
sub
es
js
mov
xor
lds
mov
out
fcmovnbe
loop
mov
and
icebp
pop
out
addb
aam
and
sbb
sar
push
scas
sahf
fstpl
mov
sbb
pop
mov
icebp
jbe
xchg
dec
jecxz
outsb
sbb
cmp
sub
mov
insb
mov
lret
xchg
or
sbb
add
add
aam
enter
call
pop
lea
popa
divl
jne
xchg
fsubrl
push
shrl
cmp
push
je
dec
or
arpl
ficoms
rcl
int3
pop
inc
int3
cmp
xor
push
out
adc
test
nop
fidivs
mov
popf
or
and
leave
mov
mov
mov
aas
xchg
sbb
xor
sahf
inc
mov
pop
gs
mov
cwtl
push
inc
int
cmp
mov
dec
ret
mov
mov
adc
notl
insl
jnp
orl
pop
cmc
jns
sbb
insl
mov
mov
sbb
in
ret
pop
dec
pop
outsb
ret
xlat
das
xor
push
xor
jg
into
fbld
xchg
push
popa
sbb
xchg
mov
fcmovu
and
out
sub
daa
dec
fistl
call
add
cld
pusha
lds
lds
popf
sbb
sahf
pop
xlat
mov
sbb
adc
cmp
sbb
xchg
inc
insl
pop
insl
jge
cmc
test
push
scas
add
cmp
jo
daa
scas
mov
pop
sar
sub
lock
jle
repz
jns
mov
fdivr
xchg
jp
hlt
stc
jne
repz
dec
and
mov
lcall
push
shr
shrb
fs
mov
addr16
adc
mov
mov
jnp
pop
test
cmpsb
add
xchg
push
mov
int3
cmp
xorb
call
mov
adc
mov
jge
dec
lea
jp
dec
mov
mov
in
outsl
in
lret
in
jmp
pop
notl
dec
mov
push
sub
cmpsb
mov
dec
lret
call
jns
fsts
int
mov
jecxz
dec
repz
cwtl
jnp
xchg
xchg
loopne
lahf
adc
mov
lds
xchg
push
or
mov
out
bound
in
sub
sbb
cmp
pop
mov
aad
int
push
adc
xchg
dec
ficomps
lds
mov
mov
dec
xor
dec
js
leave
outsl
clc
and
rclb
lcall
pop
pop
lds
rclb
in
in
mov
adc
xchg
out
fwait
pop
xchg
dec
mov
jmp
dec
jmp
mov
xor
cmpb
sub
xlat
je
mov
inc
enter
mov
fwait
cs
mov
loopne
adc
inc
xchg
adc
jp
dec
movsl
sbb
sbb
sbb
or
dec
add
pop
cpuid
fcoms
jae
arpl
iret
adc
fistl
add
jb
sub
addr16
or
stos
pusha
sub
and
std
aas
insl
lret
hlt
or
int
pop
pusha
fidivrl
xchg
sbb
push
repz
mov
pop
xor
add
leave
jle
insb
enter
add
arpl
mov
leave
mov
fldt
xor
ljmp
shlb
std
aam
jl
nop
xorb
fisubrl
ds
sub
bsf
ret
lcall
mov
out
aam
ss
xchg
cld
inc
add
fisttpl
or
pop
mov
in
add
mov
mov
cmc
jae
or
outsb
gs
nop
shrb
dec
xor
push
cmc
sahf
add
sbb
addl
and
cli
in
mov
hlt
shl
sub
push
jmp
jl
ret
fs
mov
bound
ljmp
or
pop
fs
mov
loop
popa
gs
add
repnz
cli
cwtl
loope
inc
js
sbb
repz
inc
dec
xchg
push
js
fs
sub
out
lods
call
jbe
jno
icebp
popa
cmp
ret
xor
cmp
shr
addr16
mov
test
mov
loopne
fistl
jge
inc
push
xor
mov
lret
push
test
lahf
mov
mov
jae
push
cwtl
in
rcrl
xor
iret
shll
lahf
std
test
mov
out
fs
sub
xor
pop
ds
lret
dec
jg
sbb
pushf
rcr
mov
xchg
cs
xchg
mov
pop
iret
push
fimull
push
inc
cmc
rorl
xor
mov
add
cmp
ds
test
sbb
mov
addr16
lods
lods
shrb
iret
inc
xchg
fs
mov
adc
aad
ficoml
je
sbb
orl
push
xorl
lahf
jnp
sbb
mov
mov
jge
mov
fmull
popa
fstl
pusha
sti
arpl
fs
xchg
xchg
insb
addb
lret
xlat
push
mov
cmpsl
repz
adc
pop
xor
std
out
lret
or
xor
stos
int
outsl
lcall
in
insb
in
ret
iret
pop
jmp
jbe
jmp
push
xchg
push
adc
jle
inc
test
test
mov
loopne
push
and
into
inc
or
mov
flds
stos
or
sarl
lods
push
jbe
gs
xor
lods
rorl
jg
lock
negl
stc
daa
xchg
mov
adc
aaa
lock
xchg
or
test
jb
jg
mov
aas
dec
sbb
adc
sahf
clc
test
push
adc
jbe
jo
xchg
inc
dec
jbe
adc
ja
fsubrl
sbb
adc
ror
push
pop
sbb
outsl
ds
mov
xlat
mov
jmp
xchg
jbe
int
pop
sub
out
lods
xlat
ja
fisttps
test
pop
jbe
cli
je
push
and
add
mov
jge
ss
sti
jg
lret
mov
mov
fiadds
imul
cmp
and
gs
pop
push
mov
xlat
add
test
adc
adc
out
lea
jae
cltd
dec
ret
mov
or
cs
into
adc
fiadds
jae
vsqrtsd
mov
dec
sahf
mov
dec
lret
hlt
movsb
push
sbb
push
movsb
cmp
loopne
and
push
push
xor
mov
or
jle
fldenv
jmp
sbb
leave
pop
pop
push
pop
hlt
dec
insl
cmpsb
cmp
jb
and
pop
lcall
mov
mov
out
xchg
dec
jle
dec
xor
mov
xchg
jne
mov
fsubrl
icebp
dec
bound
mov
dec
or
add
push
loop
rcl
sub
in
pop
dec
push
pushf
mov
pop
cli
mov
push
and
cmpsl
inc
or
pop
cmp
pop
add
mov
js
imul
jns
stos
mov
push
and
std
shl
popf
shlb
xchg
fs
out
and
cmpsl
push
shlb
xchg
ds
fmulp
mov
add
std
inc
jecxz
inc
mov
test
dec
pushf
sbb
ret
cld
push
adc
jg
cwtl
jg
iret
aas
push
push
shll
jno
imul
mov
vmwrite
mov
inc
arpl
divb
dec
pusha
lds
sti
and
push
rolb
xchg
push
xor
ljmp
les
mov
lods
clc
pop
push
dec
push
in
adcb
cltd
mov
fldt
aas
call
nop
jbe
fnstenv
adcb
jne
cmp
jge
es
mov
jecxz
push
or
jmp
xchg
mov
adc
mov
dec
scas
int
fdivl
mov
xchg
mov
and
push
push
mov
leave
cli
stc
out
sub
push
sub
es
or
test
orl
imul
cmpsl
adc
hlt
loop
mov
test
lret
cmpsb
and
inc
fwait
mov
jb
loop
xchg
adc
popa
sub
mov
jle
mov
jl
cmp
sbb
popf
sub
mov
dec
mov
cld
sbbl
xchg
xorl
popl
or
inc
lods
adc
js
mov
std
mov
aas
cs
loop
fimull
or
push
aad
sbb
popf
insl
or
fsubrl
mov
rcrb
cli
pop
fwait
loopne
stos
scas
pop
and
mov
or
or
fcoms
xchg
fs
add
jne
iret
adcl
vmread
pop
inc
pop
fldl
and
pop
mov
pop
int
add
push
adc
and
icebp
jmp
leave
sub
cld
jns
push
and
add
adc
scas
push
test
out
pop
mov
jecxz
xor
mov
fwait
mov
jge
mov
lods
and
mov
and
lds
out
sbbl
inc
sahf
mov
push
push
nop
or
xchg
xor
pop
stos
inc
ret
jle
enter
xchg
add
inc
pop
out
inc
sub
inc
xor
das
in
and
sub
jmp
jge
mov
xor
jno
das
add
pusha
jbe
pop
sbb
dec
and
flds
dec
xchg
ss
sub
push
in
aaa
int
sub
outsl
jno
mov
shlb
xchg
sub
shrb
sub
pop
xchg
imul
gs
inc
mov
cmc
xchg
daa
jnp
adc
out
sub
loopne
inc
push
sub
xor
inc
lahf
call
mov
daa
inc
and
ret
fadd
mov
in
ret
cld
in
dec
sahf
jns
aam
mov
adc
push
adc
mov
popa
fbld
push
mov
leave
xchg
jne
aaa
push
rcll
xchg
loope
in
sahf
xor
and
popf
sub
cmp
mov
mov
mov
push
xchg
inc
lods
outsl
jno
popa
push
dec
bound
xchg
xchg
js
pushf
jnp
rolb
xor
ds
sub
leave
jecxz
adc
inc
cmpsb
aas
push
sti
and
mov
hlt
or
jns
pop
inc
scas
mov
es
inc
cmpsl
fists
mov
or
push
enter
push
xchg
sbb
mov
cs
out
ja
loop
js
imul
jp
and
mov
xor
pusha
push
paddw
xor
lea
loopne
adc
and
cmpsb
pushf
cmp
dec
sbbl
in
out
lret
or
std
inc
xchg
sbbl
data16
movsb
stos
dec
mov
fsubrl
rcrb
dec
jmp
scas
mov
push
cwtl
fiadds
adc
shlb
pop
fwait
xchg
xor
addr16
test
fldl
in
scas
gs
hlt
leave
stc
insb
dec
push
ds
push
enter
movb
cld
int
out
jbe
cmpsl
jbe
jns
loope
push
cs
jmp
mov
int
movsl
stc
cmc
mov
xchg
outsb
push
mov
cmp
cmp
adc
lret
in
and
mov
xchg
mov
or
scas
cmp
lahf
xchg
sub
xchg
xor
leave
push
cmc
sete
inc
sbb
add
inc
int3
pop
sar
movsb
mulb
test
mov
inc
fs
pop
mov
pop
pop
jl
popa
cli
cmp
lcall
adc
push
mov
test
and
sahf
jle
ja
mov
dec
jmp
mov
js
fs
movsb
sti
or
leave
ljmp
dec
push
loopne
mov
mov
sub
jl
inc
adc
cmp
scas
jno
jns
dec
pop
in
mov
vmread
jmp
sub
cwtl
je
dec
popa
inc
jmp
sahf
das
and
jg
mov
cmc
ja
insb
leave
icebp
mov
pop
loop
clc
cli
pusha
out
adc
mov
sub
mov
dec
push
bound
dec
or
hlt
cmpsl
add
test
icebp
cmpsb
subl
out
xchg
pop
test
cmp
fisubl
hlt
test
xor
and
mov
lahf
lods
pusha
jo
push
sub
xor
lock
jl
jb
mov
adc
mov
sub
lret
test
pushf
outsl
mov
popa
xchg
add
fildl
enter
mov
fsub
adc
jl
pusha
add
xor
enter
jle
pop
xor
cld
sbb
jle
stc
sub
mov
imul
ret
pushf
fadd
push
scas
xor
xchg
outsl
out
add
test
into
orb
mov
daa
xor
push
je
lahf
out
xor
or
fldenv
clc
pop
cmpsl
in
enter
mov
ret
xor
sub
jb
cmp
jle
push
inc
mov
xchg
mov
add
dec
jecxz
mov
loope
sub
leave
push
pop
clc
lcall
pop
pop
adc
enter
mov
flds
jle
or
push
inc
fsubrl
popa
sbb
fwait
shrb
and
loopne
stos
xchg
into
push
je
adc
sahf
inc
xchg
jnp
icebp
mov
ret
jo
out
gs
push
inc
fildll
and
cmp
in
aam
mov
pop
mov
fstpl
shr
cs
mov
cmp
dec
stc
jae
xchg
ja
cmp
adc
jnp
insb
sarl
add
push
lds
shrl
mov
and
mov
add
cwtl
pop
shrb
outsb
stos
pop
in
inc
cwtl
aad
mov
dec
notl
into
and
cmpsb
jp
stos
pusha
cmpsl
adc
lock
pop
inc
in
in
adc
xchg
cwtl
sbb
and
aam
jne
add
out
xchg
add
sub
ljmp
pop
inc
pop
daa
mov
lods
mov
lret
ret
cmp
or
and
mov
add
lahf
xchg
push
imul
mov
mov
and
cld
pusha
push
mov
xor
gs
xor
mov
cld
xchg
xor
jge
xchg
mulb
lds
jecxz
sub
or
adc
aas
xchg
inc
add
stos
pop
ret
and
and
pop
out
inc
xchg
ror
inc
jecxz
add
push
cmp
fs
mov
push
xchg
adc
dec
jg
mov
sahf
inc
cmc
pop
in
fistps
aas
sub
push
mov
inc
xchg
popf
lahf
xlat
xchg
push
jnp
push
xchg
arpl
or
testb
xchg
and
cmc
jb
cwtl
mov
shr
dec
pop
jle
imul
out
test
cmpsl
fistps
ja
jg
add
stos
xor
idivl
or
dec
push
sbb
push
jmp
cmp
mov
and
adc
adc
push
jbe
clc
cmpsb
js
push
out
in
rcl
mov
sub
or
iret
in
and
scas
adc
push
psubw
clc
jp
popf
xor
push
ss
arpl
add
push
sbb
mov
int3
pushf
or
mov
jg
movsb
into
dec
mov
and
jbe
arpl
mov
hlt
movsb
cmp
mov
insb
imul
xchg
repnz
xor
dec
mov
mov
pushf
cmpsl
mov
in
pop
shll
scas
adc
daa
or
sub
fsts
xchg
xor
jns
add
xchg
in
mov
sbb
rol
push
adc
dec
cs
inc
cmp
mov
mov
nop
add
loope
pop
push
test
lods
scas
mov
vmovsd
adc
fcomps
xchg
jge
inc
mov
jb
mov
sbb
mov
notb
sub
inc
xor
and
ds
test
das
mov
and
jns
mov
fadd
icebp
femms
hlt
ds
mov
mov
xlat
test
in
lret
sahf
cmp
pop
ret
and
popa
push
test
int3
inc
jecxz
and
xchg
add
cmc
or
lret
ss
xchg
sbb
xchg
jg
mov
mov
sbb
xchg
dec
mov
xor
pop
cmp
push
pop
or
clc
push
add
lock
mov
std
sub
movsb
push
xchg
xchg
lahf
andb
adc
mov
cmp
sbb
aad
mov
push
lods
stos
cli
inc
and
xor
or
daa
nop
ss
outsl
pop
bound
shll
pop
fcoml
pop
js
cmpsb
and
jecxz
add
jb
push
xor
pop
pop
fadd
pop
jb
test
mov
enter
in
cmp
inc
and
mov
mov
pop
loop
lods
js
shlb
loope
sbb
jecxz
rclb
sub
aam
push
jmp
ficoml
sub
lcall
inc
scas
pop
fmul
push
outsb
and
clc
xchg
lea
inc
mov
movsb
pop
or
xchg
push
xorb
fdivl
jns
aam
sbb
pop
idivl
imul
mov
jp
sbbl
or
pop
add
jns
pop
mov
xchg
sbb
xchg
xor
movsb
lods
jbe
inc
movsl
adc
mov
inc
es
lcall
mov
cmpsb
mov
adc
adc
ficoms
lds
icebp
jle
push
insb
stc
push
loop
cmpsl
lods
adc
and
xchg
mov
and
cmpb
out
dec
daa
fdiv
mov
adc
sarb
or
pop
outsl
or
dec
lahf
xchg
adc
fs
leave
lock
lret
pop
jns
adc
or
outsl
jecxz
shlb
jae
mov
adc
movsl
or
sub
push
ds
loop
aaa
or
xchg
mov
fimuls
leave
mov
sbb
jp
rcr
arpl
xchg
dec
xchg
arpl
int
mov
imull
jle
mov
inc
xchg
adc
dec
mov
push
loopne
mov
lods
or
pushf
mov
lret
adc
cmp
cld
aas
adc
adc
sbb
inc
out
movsb
or
inc
push
mov
xchg
push
scas
stos
cmpsl
cmp
repnz
insb
stos
ds
mov
cmp
dec
cli
sahf
mov
imul
sbb
test
mov
adc
cltd
mov
inc
int3
mov
jns
sub
ja
push
sti
repz
aad
xchg
jbe
sub
nop
add
sub
lret
fldcw
cltd
push
enter
xchg
mov
adc
nop
jmp
das
fcoml
scas
xchg
push
sti
iret
and
test
nop
in
inc
mov
lea
std
gs
shll
mov
jge
mov
xchg
lock
mov
cmovne
clc
xchg
inc
cmp
outsb
jge
push
fisttpl
mov
pushf
dec
in
popf
jl
dec
sub
in
fdivr
sbb
sub
dec
insb
mov
or
mov
mov
popf
cmc
movl
and
scas
gs
pop
sbb
jns
loop
sub
mov
stc
aas
nop
sub
popf
pop
xchg
dec
or
mov
gs
cwtl
enter
pop
mov
sti
pop
lock
enter
inc
sahf
cmpsb
sub
cmpsb
orl
cltd
and
pop
outsb
inc
xor
ret
cwtl
leave
loopne
mov
lock
jbe
lcall
push
jo
xchg
cwtl
jge
arpl
push
mov
adc
mov
add
enter
repnz
int3
dec
insb
ljmp
mov
sarl
ds
shll
lahf
add
fcomi
mov
mov
sub
adc
adc
loop
jne
addr16
cmp
mov
pusha
test
push
test
rolb
scas
mov
cmp
les
lcall
inc
ljmp
repnz
or
test
pop
and
mov
push
sahf
rclb
lret
mov
inc
das
mov
fisttpl
jp
xchg
out
jp
cmp
push
sti
insl
loope
cs
and
xchg
add
orb
fs
in
mov
pusha
pop
sbb
icebp
std
fnstsw
sub
imul
add
cmc
push
fsubs
pusha
dec
xor
push
bound
cmp
and
pusha
mov
xchg
jae
mov
idiv
xchg
jbe
xor
adc
loop
adc
inc
mov
insb
dec
inc
test
icebp
bound
lods
mov
int3
and
pop
cli
jbe
rorl
jae
in
mov
adc
sub
sahf
sub
arpl
mov
inc
test
arpl
cltd
out
sub
inc
imul
cmc
mov
cmc
mov
ljmp
xor
mov
push
adc
roll
jns
jl
aas
subb
insb
dec
push
fxch
jp
lea
dec
jge
negb
addr16
mov
push
mov
pop
jae
or
mov
icebp
xchg
push
xor
xor
xor
sbb
add
or
xchg
xor
xor
mov
shrb
inc
loopne
test
inc
push
leave
cmpsb
int3
insb
mov
pop
outsl
mov
je
add
xchg
cs
icebp
bnd
cwtl
or
in
sbb
add
inc
cmp
xchg
js
imul
cmp
mov
aaa
push
pop
jnp
pushf
pop
jge
mov
les
push
test
test
adc
cs
lods
mov
call
imul
add
dec
mov
les
push
leave
add
jns
sbb
mov
call
sbbb
push
mov
or
popa
pop
out
jle
in
fsts
les
adc
cmp
ret
push
sub
xlat
cmp
mov
into
dec
push
ret
cmpsl
mov
shr
mov
fwait
std
sub
ljmp
mov
jnp
scas
inc
pmaxsw
inc
lods
rclb
pop
aaa
rorb
add
mov
iret
shrb
mov
or
mov
rolb
ja,pn
int
jnp
dec
jge
pop
mov
adc
out
xor
test
pop
arpl
jg
jb
mov
sub
pop
out
adc
subl
and
pop
aam
xchg
out
je
jle
jbe
out
pop
or
cmpl
pop
add
int
push
das
jp
dec
in
gs
sub
testl
mov
and
mov
ss
xor
call
rep
add
push
push
and
sbb
lret
lret
xchg
xchg
mov
mov
aas
in
mov
das
js
fs
int
mov
fs
into
fisubl
lcall
popf
jb
mov
pop
mov
out
fcoms
jge
cld
mov
out
cmp
scas
pop
mov
or
jg
fcompl
lock
mov
dec
mov
stos
lret
sarb
mov
xlat
mov
rorb
ret
pop
scas
sub
roll
lcall
fbstp
call
mov
sbb
xlat
popa
ja
sbb
repnz
in
aad
rcrb
lods
mov
gs
pop
repnz
xor
cmp
push
sbb
imull
sbb
shlb
or
and
xor
adc
dec
mov
lcall
xchg
add
fsub
in
mov
jno
push
jnp
xlat
or
pop
jne
test
pop
in
mov
adc
loop
ljmp
mov
pop
je
fildll
inc
sarb
shl
sub
mov
inc
divl
cli
jnp
jb
ljmp
pushf
dec
sub
and
nop
cmpsl
mov
adc
mov
rcr
adc
dec
shll
ret
or
cwtl
or
call
mov
cmp
fwait
cmpsl
dec
push
mov
daa
jbe
loopne
hlt
aam
or
loopne
enter
xchg
jo
jno
daa
rcll
sbbb
and
sub
adc
jmp
inc
int3
icebp
or
mov
popf
lods
jl
cmp
ret
mov
pop
jg
sbb
js
pop
cs
inc
and
inc
mov
xchg
cwtl
sbb
inc
jnp
out
inc
mov
iret
add
push
je
call
jnp
adc
push
addl
adc
pavgw
repnz
out
pop
iret
imul
pop
push
pop
push
add
xor
mov
gs
addr16
pop
ljmp
leave
test
in
rcrb
pusha
push
in
clc
bound
pop
xor
jb
daa
sahf
jge
std
fists
push
xchg
in
adc
stos
pop
jo
cld
dec
sub
sub
mov
enter
ret
mov
and
mov
bound
out
insl
mov
arpl
enter
aam
out
add
and
inc
add
and
aad
pop
sbb
pop
adc
scas
mov
pop
stos
mov
ds
sub
test
sub
pop
adc
iret
cwtl
nop
and
inc
dec
pop
cmp
inc
and
in
lahf
cmp
jmp
xchg
sub
fbstp
inc
ret
mov
in
test
jecxz
mov
mov
mov
inc
mov
mov
pop
add
gs
pop
cmc
cmp
xor
enter
or
cmp
cld
add
inc
and
sub
push
aad
mov
xor
mov
aas
out
aaa
xor
adc
movsl
lret
inc
dec
aas
sbb
mov
lret
mov
stos
push
je
xor
jns
and
les
or
je,pn
fwait
test
mov
add
xchg
mov
push
jmp
std
rcrl
push
xchg
add
lods
enter
pop
cmp
js
and
shll
in
or
push
xchg
or
outsb
jae
movl
ds
adc
ret
sub
mov
shll
fs
outsb
add
cltd
inc
ret
out
cld
pop
pop
shrl
in
add
loopne
ljmp
aaa
clc
shlb
cmpsl
popa
hlt
push
stos
sbb
les
xchg
mov
xchg
je
or
loope
lds
lret
repz
jmp
outsl
data16
mov
dec
out
aas
and
subl
cmp
lahf
dec
xchg
mov
cmpsb
adcl
pop
dec
dec
movsb
and
pop
adc
mov
ljmp
add
and
ljmp
pop
jecxz
jmp
mov
push
icebp
loope
fisttpll
ljmp
lret
pop
fdivl
repnz
and
xchg
cmp
sbb
xchg
cmp
add
fbld
jae
xchg
mull
xor
fcoml
push
mov
inc
xchg
jmp
ja
les
sub
jmp
cltd
pop
fnstsw
xchg
ret
hlt
push
je
adc
sub
test
push
int3
or
cmp
pop
jno
daa
sbb
pop
test
std
mov
icebp
fisubrl
add
call
push
mov
inc
ds
mov
dec
and
das
push
lods
int
jae
xor
xor
add
cld
or
cmp
icebp
sub
rorl
jae
stos
jl
pusha
dec
test
in
xchg
cmp
pop
insb
orb
outsb
daa
xchg
cmp
daa
fldt
add
pop
and
adc
and
cli
jp
and
push
push
add
pop
jbe
cld
pop
ja
out
or
mov
push
repz
aaa
pusha
push
and
stos
xor
cmp
xor
push
xor
or
mov
xchg
testl
mov
stc
sarl
mov
dec
jecxz
xchg
stos
lods
mov
int3
aam
loopne
mov
pop
adc
repz
xor
pop
pop
dec
adcb
add
cld
pop
xchg
mov
repz
loop
hlt
adc
jp
scas
jns
or
test
adc
pop
movsb
push
inc
push
mov
sub
mov
dec
repnz
jl
cltd
std
cld
push
aam
mov
shl
test
repz
cmc
in
std
scas
or
mov
out
xchg
inc
stos
sub
scas
pop
dec
xchg
ss
cmpl
leave
push
idiv
addr16
les
inc
cli
sbb
jns
sbb
pop
or
testl
shlb
pop
or
xchg
push
cld
jno
pop
cwtl
mov
imul
sbb
nop
mov
ljmp
out
jp
add
mov
mov
lea
dec
mov
jg
adcl
xchg
aam
push
cld
sub
sbb
jo
loope
adc
jne
mov
cs
scas
es
xor
adc
out
es
mov
bound
popa
mov
jno
dec
xorl
fstpl
xor
scas
cmp
mov
aaa
movsl
push
cmp
jmp
and
mov
scas
add
les
addb
lret
mov
jno
inc
inc
mov
out
cmp
mov
stos
add
sub
orb
mov
dec
mov
testl
frstor
ret
pop
popa
cld
nop
dec
sub
cmp
pushf
xchg
jle
mov
mull
jae
test
stos
daa
icebp
mov
or
dec
jo
inc
test
stc
hlt
ss
lods
fistpl
dec
data16
orl
or
icebp
mov
add
movsb
jb
and
jmp
jo
lods
out
insb
pop
adc
dec
mov
mov
mov
aaa
jb
jns
adc
in
xchg
aad
mov
imul
mov
jb
fwait
dec
push
pop
dec
xchg
fsubs
push
leave
sub
xchg
cltd
stos
xor
push
xor
mov
cmc
xor
pop
mov
lcall
and
leave
ds
and
mov
xchg
ret
pop
shl
mov
push
cs
mov
lods
stos
sub
iret
insb
fildll
daa
mov
lret
xchg
repnz
ds
ret
roll
inc
jmp
pmulhw
lods
push
ljmp
push
ja
sahf
sbb
and
sub
mov
mov
sbb
mov
xor
inc
ljmp
rorl
cmp
jb
sarl
inc
inc
dec
scas
mov
push
push
mov
outsb
addr16
sub
stos
scas
xchg
sahf
out
testb
lcall
jecxz
adc
cmp
pusha
into
loope
das
inc
mov
out
mov
std
mov
pop
les
scas
xlat
xlat
cs
data16
ret
stc
cmpb
jmp
jmp
xor
arpl
js
or
ret
lahf
or
xor
out
inc
dec
mov
jl
and
cs
jno
icebp
cmpb
and
xchg
and
mov
insb
imul
ret
mov
push
jp
movsb
cltd
lock
jo
push
test
and
inc
adc
adc
dec
push
fisttps
xor
cmp
iret
add
pop
es
push
xchg
btc
cli
repnz
stos
mov
mov
repz
outsb
movsb
pop
and
scas
push
pop
movsb
out
lods
ljmp
out
lcall
data16
int3
add
loopne
and
in
dec
mov
pop
das
stos
mov
xor
cpuid
in
lret
add
jne
mov
inc
shll
fwait
add
inc
sub
ljmp
into
fsts
sub
test
adc
mov
xchg
ja
pop
lret
and
mov
jp
pop
movsb
jmp
and
rcl
fnstenv
cmpsl
aaa
or
xchg
fcomp
rcl
repz
test
dec
add
ret
mov
enter
push
scas
cmp
dec
cmp
adc
sbb
cmpb
into
mov
jmp
dec
scas
mov
jb
cmpsl
into
xor
lahf
sub
or
add
sahf
pop
dec
inc
int3
aas
in
jno
mov
data16
dec
stos
jle
push
cmpsl
mov
stc
and
imul
in
or
sub
cmp
cmp
sbb
clc
cmp
loopne
sub
mov
mov
mov
sarb
jge
fcmovbe
or
js
or
inc
fisttpll
dec
fs
pop
inc
xchg
and
out
xor
pushf
ljmp
pop
loop
sub
mov
jbe
fnsave
mov
out
pusha
dec
mov
jbe
mov
dec
mov
in
sbb
dec
jle
addr16
sub
xor
int3
xchg
and
aaa
cmp
popa
ret
and
imul
mov
scas
pop
idivl
pop
test
lods
mov
pop
sbb
jnp
mov
in
xchg
pop
sbb
fisttps
ds
mov
mov
push
pop
std
adc
data16
aas
stos
bound
je
popf
jg
sub
sub
sbbl
imul
adc
clc
fstl
in
xchg
cmc
loop
lock
jecxz
jecxz
inc
fistl
mov
rorl
mov
loope
and
pop
xorl
and
mov
pop
mov
out
add
in
std
cmpsb
inc
xor
pop
neg
cmp
xchg
xchg
aad
lahf
stos
mov
scas
out
or
pusha
in
cmp
xchg
xor
and
je
lcall
jg
pop
rorb
inc
pop
paddb
rcrb
sbb
inc
sub
dec
dec
add
mull
rorb
cmpsb
movsb
fwait
in
sbb
and
leave
imul
sarb
cmpsb
loop
movsb
dec
test
mov
aad
add
mov
xor
dec
aam
xchg
push
push
sbb
mov
mov
int3
jge
mulb
and
das
mov
adc
dec
pop
adc
mov
js
mov
mov
imul
push
loopne,pn
add
xor
dec
xchg
cmp
nop
and
xor
cs
cmc
inc
in
jnp
jae
clc
je
push
scas
or
test
jl
loopne
jl
push
dec
or
cmp
lret
popa
and
iret
push
cmp
clc
testl
scas
and
popa
movsl
rolb
push
adc
mov
aaa
gs
inc
add
push
shl
pop
add
jns
mov
rorb
rcrb
xor
dec
stos
sbb
fildll
push
lret
pop
not
in
mov
xor
test
add
jno
push
addr16
xlat
into
imul
mov
cwtl
sub
js
sub
xor
or
or
adc
adc
sbb
insl
mov
sbb
and
inc
mov
pop
clc
sub
sub
dec
or
mov
inc
les
inc
sbb
stc
push
lret
rorb
ret
add
pop
lods
dec
push
adc
mov
jne
repnz
mov
je
popf
mov
sti
or
cmpsl
sub
adc
scas
push
leave
sbb
repz
in
jns
div
pusha
lods
xor
and
push
mov
repnz
popa
dec
std
or
push
jb
push
cs
jp
decl
ds
mov
dec
fisubrl
out
outsl
movsb
out
sub
mov
mov
insb
sbb
add
nop
repz
in
lea
out
sbb
sbb
push
int
test
cs
mov
insb
sahf
into
mov
jecxz
ss
push
push
mov
sub
sub
fadds
jns
lret
add
sub
jne
jb
cltd
mov
into
mov
out
je
push
xor
jb
jle
mov
sub
ret
fbstp
sub
mov
add
popf
jmp
sahf
ret
dec
pushf
std
faddl
pop
jns
xor
cmovle
out
push
in
add
int
ret
outsb
sbb
scas
lds
or
adc
jecxz
push
leave
sbb
mov
cmpsb
mov
in
mov
fsubl
movsl
jnp
pusha
xchg
inc
lret
xchg
fmulp
xchg
incb
fs
ss
push
xchg
and
xchg
and
lret
xchg
sbb
adc
xchg
loop
dec
les
xchg
repz
sarb
cld
test
add
movsb
and
out
not
fistpl
cmp
or
jl
enter
sbb
mov
sbb
ss
mov
popa
sbb
cmp
arpl
aam
xor
xchg
add
sbb
pop
lahf
lcall
push
gs
and
xchg
xchg
sub
and
and
adc
lods
and
nop
ds
cmpsb
mov
dec
mov
sarl
repz
or
dec
push
lock
lock
enter
es
cmp
sub
mov
dec
into
pushf
ret
out
insl
xchg
ficomps
and
aam
xor
xlat
mov
push
es
sub
sbb
xlat
in
xchg
cli
ret
jge
jmp
mov
add
add
jp
jg
cld
aas
loopne
cmc
mov
inc
std
int
mov
and
fiaddl
testb
sbb
jg
call
or
ss
cmpsl
xlat
ret
mov
dec
imul
cli
dec
in
and
or
movsb
lods
data16
mov
push
iret
xlat
pop
xlat
es
jle
popf
mov
jno
adcl
into
addr16
inc
rcrl
add
mov
out
cmpl
dec
icebp
xchg
jle
jns
and
shlb
sbb
pop
outsl
adc
enter
popa
jb
sub
adc
add
adc
xchg
in
push
mov
xor
std
sahf
iret
cmpsl
idivb
lret
lret
lock
jb
cmp
rclb
test
xor
nop
scas
hlt
lret
out
sbbl
aas
mov
aaa
xchg
out
adc
jnp
in
pop
out
ss
jmp
movsl
and
loope
pop
sbb
std
roll
pop
lods
jne
sarb
pop
ja
shl
inc
adc
clc
xchg
adc
jno
mov
std
mov
xor
lcall
mov
sbb
cmp
insb
outsl
cmc
imul
cwtl
mov
fiaddl
leave
sub
inc
mov
enter
out
and
rcr
subl
jbe
sbb
xchg
or
cld
pop
add
xchg
mov
inc
leave
cmc
ficoms
sbb
je
pop
push
xor
xor
mov
or
sbbb
jl
cmc
popf
lret
clc
insl
sahf
dec
mov
dec
pushf
push
inc
add
stos
out
adc
inc
jl
sub
fbld
and
pop
imul
daa
bound
lock
outsl
xchg
hlt
jns
insb
mov
jge
sahf
jae
pop
inc
sbb
sbb
imul
sub
sahf
fistpll
pop
inc
jecxz
jo
jp
add
xchg
aad
scas
mov
dec
hlt
mov
in
push
cmp
dec
xor
push
dec
ret
insb
fimull
push
push
sub
out
in
shl
push
pop
pop
sub
imul
mov
mov
adc
cld
mov
test
dec
and
mov
aam
out
mov
adc
repz
cld
scas
movb
cmp
adcb
sub
faddl
adc
xchg
mov
lods
mov
mov
add
data16
mov
test
testl
sbb
add
pop
fadd
mov
or
mov
and
dec
jg
adc
cmp
in
cmp
outsb
xchg
lds
daa
daa
mov
inc
rorl
ret
ljmp
pop
insl
data16
xor
shrl
jne
movsl
xchg
adc
call
inc
inc
enter
or
mov
fdivl
out
lret
jb
cmpb
pop
imul
dec
out
mov
mov
mov
pop
lret
aaa
sub
pusha
or
vaesenc
xchg
insl
das
xchg
lods
int
notl
or
sub
or
xor
sbb
lds
and
adc
sbbb
push
aad
sub
pop
cmpl
cmp
and
push
pop
cmp
xchg
ficompl
cmp
cli
cmp
call
sub
ret
sbb
movsl
xor
int3
mov
push
cltd
inc
arpl
std
mov
push
mov
jle
decb
cwtl
sbb
lods
jb
xor
outsl
jnp
divb
push
movsl
popf
rcrb
fsubrs
mov
jae
or
mov
les
aaa
pushf
jmp
cli
shll
adc
adc
leave
ja
ret
repnz
scas
into
push
xchg
shll
fsubrl
xchg
int3
das
jge
movsl
ret
mov
inc
dec
dec
mov
push
outsb
leave
sbbl
or
ja
or
mov
add
xchg
xor
out
and
pusha
sub
loope
insb
xor
xchg
lcall
mov
iret
sbb
jno
les
nop
imul
push
jp
test
into
xchg
lret
and
ret
mov
add
sub
xor
mov
inc
pushf
mov
xchg
push
stos
loop
pop
mov
data16
mov
incl
fldcw
shll
leave
and
mov
loope
mov
ja
insl
pop
roll
sbb
aas
lret
loope
stos
xor
jo
mov
jo
jecxz
mov
js
or
sbb
mov
fstpl
hlt
xor
jmp
mov
test
mov
jecxz
jne
fidivrs
cs
ja
dec
jbe
xchg
fwait
adc
pop
lds
jg
lea
mov
jecxz
sbb
dec
push
cmc
mov
fldl
and
mov
adc
leave
stc
sbb
xchg
inc
mov
fisttpl
popa
sub
outsl
adc
subl
cmp
stc
sub
xchg
out
and
mov
xor
dec
push
out
push
mov
fidivl
lcall
xchg
sbb
mov
sub
adc
ficompl
jb
mov
loopne
push
nop
jb
adc
cmp
clc
jae
fwait
push
inc
cmp
ficomps
jns
cld
inc
jmp
into
dec
fstpl
jb
push
lods
cli
lods
rolb
jl
rdtsc
sub
xchg
popf
push
jle
jb
mov
xchg
cmpsl
mov
mov
jecxz
pop
xchg
sbbl
es
add
repnz
pop
or
fdivrs
lods
outsl
sbb
or
adc
mov
push
pop
enter
fmull
push
sbb
sar
mov
in
scas
xor
stc
mov
mov
cltd
or
jne
jo
inc
xchg
push
add
das
ret
leave
outsl
cmp
mov
loope
adc
mov
mov
push
leave
hlt
loope
inc
xor
inc
insb
add
scas
rcrl
in
mov
xor
sbb
push
jle
lcall
sub
insl
clc
pop
xor
test
popf
or
cmpsl
inc
mov
cmp
popa
loop
inc
xchg
stc
aaa
sub
das
loopne
xchg
add
lcall
adc
mov
jne
mov
adc
aam
ljmp
enter
out
movsl
sar
out
xor
bnd
lret
cwtl
jmp
xchg
les
cmpsb
jp
lcall
stos
test
xorb
js
xchg
mov
and
out
std
rolb
cmpb
roll
test
call
pop
cmpsl
lods
jg
mov
mov
sbb
aad
ljmp
or
push
fdivrl
adc
cld
lods
call
mov
enter
cmp
xor
lea
divb
mov
xchg
mov
pop
xchg
testw
jno
mov
inc
out
jmp
lahf
lods
out
ret
adc
adc
pop
sbb
shlb
into
mov
mov
xchg
lret
aaa
inc
cmp
ds
leave
mov
mov
mov
mov
or
stc
mov
sbb
cmc
pushw
sbb
incb
cmpsb
mov
lods
data16
push
mov
push
and
aad
das
hlt
jnp
push
fimull
jg
call
pop
sti
testl
mov
es
jecxz
jl
in
ljmp
inc
lods
fs
or
or
fidivrl
sahf
jns
sbb
out
out
lock
lahf
imul
push
pop
inc
sub
mov
xchg
xor
sbb
push
dec
adc
xor
lcall
mov
stos
sahf
cwtl
inc
lret
xchg
scas
dec
int3
xor
xor
lea
fmull
je
cmp
lock
inc
inc
lret
xchg
xor
daa
cmp
les
cmpsl
outsl
jo
js
cli
repz
pop
imul
test
xlat
xchg
lds
outsl
mov
pop
inc
cmovge
jmp
stos
jne
fnstsw
in
add
adc
outsl
add
js
mov
mov
xor
push
imul
out
ds
jno
ret
and
jns
jns
jecxz
dec
fstps
movsl
outsl
test
test
mov
cwtl
inc
mov
inc
inc
cmp
push
inc
mov
scas
cmp
sub
mov
aam
out
xchg
or
add
xchg
cmpl
lret
popf
xor
in
fbstp
pop
pop
fcoml
mov
in
mov
lahf
xor
jae
xlat
xchg
adc
ds
jmp
icebp
jl
pop
scas
xchg
sbb
inc
push
pop
cmp
jns
push
gs
xchg
sti
repz
sbb
sub
lahf
add
leave
pop
divb
in
inc
xchg
and
dec
adc
mov
dec
popa
xor
mov
or
and
pop
pop
jns
cmpsb
test
sub
inc
adc
movsl
fmull
enter
gs
popa
push
dec
in
enter
movsb
sub
popa
repnz
stos
test
imul
js
hlt
test
xor
das
dec
inc
mov
lret
movsl
push
fsubrs
or
pop
in
fcoml
mov
rcr
adc
aaa
loop
int
out
jbe
test
test
rcll
leave
adc
xor
inc
xchg
dec
pushf
jmp
int
and
fnstcw
xor
repnz
cs
push
sub
xchg
sbbl
xchg
xchg
arpl
mov
jmp
popa
orl
xchg
mov
sub
call
mov
dec
cmpsb
cld
and
popf
lock
pop
int3
test
nop
call
inc
repz
dec
mov
fisubs
pop
in
push
jp
shlb
push
pop
out
outsb
iret
call
rclb
pop
sub
xchg
jecxz
inc
jns
mov
jp
into
push
aam
mov
mov
nop
test
mov
in
cmpsb
out
xor
call
iret
arpl
and
adcl
jne
jo
jg
sarl
push
and
sub
add
jle
dec
add
push
stc
push
mov
inc
cmp
jecxz
inc
imul
adc
insb
add
pusha
push
xor
aam
mov
outsb
ret
out
ret
xchg
fcmovne
jne
testl
sar
xor
push
pop
les
jbe
lea
imul
pop
or
push
addr16
xchg
jmp
sub
fmull
ds
mov
jmp
test
enter
sub
inc
push
and
sbb
push
xchg
push
push
lcall
imul
and
xchg
outsl
and
lock
dec
adc
mov
sar
pop
lds
int
insl
xchg
daa
mull
rorl
cmp
in
mov
out
push
push
stos
mov
or
mov
sub
jge
mov
push
daa
and
sti
fbstp
mov
add
shlb
repz
cmp
jb
jno
rcrb
cli
and
pop
stc
addb
bound
lods
and
sbb
lahf
cltd
test
sahf
inc
sahf
xorl
mov
lcall
push
icebp
lret
adc
push
pop
test
out
sahf
pop
mov
ja
xor
popa
frstor
mov
les
and
leave
push
lahf
mov
fistpll
pop
imul
or
sbb
adc
push
xor
add
sbb
mov
test
out
int
das
adc
push
cmp
aad
and
push
adc
adc
dec
test
sti
ja
inc
popa
hlt
pxor
cltd
push
or
imul
test
pop
sbb
inc
dec
out
fistpl
xchg
push
push
sbb
stos
leave
adc
fcomps
xchg
inc
and
sbb
jp
in
pop
mov
add
insl
pop
xchg
push
sti
into
aas
or
jne
inc
jmp
or
pop
aas
mov
or
jns
fildl
jge
and
fstps
stos
in
sub
jmp
add
rcrl
add
cltd
out
call
out
fsubr
shrb
sub
xor
inc
dec
lea
lods
jno
jge
cmp
outsb
inc
add
ret
mov
and
sub
push
xchg
mov
cmp
arpl
jmp
jb
and
xchg
dec
sub
sahf
adc
lods
ja
xor
mov
lcallw
aad
ljmp
dec
sahf
les
sub
mov
cmp
fisubs
neg
mov
cli
jb
adc
pop
sbb
pop
movsb
mov
loopne
sbb
xchg
es
cmc
sub
lret
xor
int
and
or
in
fldcw
sub
insb
dec
xchg
add
push
test
out
or
jp
fists
mov
inc
mov
in
inc
cmp
lahf
pushf
pop
imul
jae
ja
dec
mov
jge
mov
or
out
cmp
add
mov
push
pop
sbbb
ret
xor
lock
or
add
mov
mov
add
leave
push
mov
xor
and
xor
and
incb
aaa
push
fadds
mov
cmpsb
push
movsb
pop
cmp
andl
jae
push
lds
pusha
mov
adc
das
jnp
in
mov
inc
stos
adc
dec
mov
xor
lret
xor
or
out
mov
dec
add
or
nop
adc
jae
daa
data16
fwait
adc
fisubl
mov
xchg
mov
ja
push
xor
mov
pop
lods
arpl
pop
xchg
sbb
sbb
aas
xchg
sub
cmp
xchg
mov
mov
dec
push
cltd
jge
mov
sub
adc
sub
cltd
cmp
xchg
in
or
dec
xchg
push
sub
mov
cmp
mov
and
pop
das
push
int3
jns
lret
icebp
mov
loope
sub
popf
inc
sbb
sub
lods
outsb
rorb
test
pop
in
push
outsb
mov
pop
xor
imul
popa
sbb
jge
mov
cmpsl
mov
mov
dec
xchg
notl
dec
xor
jle
aas
fs
clc
std
imul
mov
icebp
scas
out
in
sbb
push
bound
add
pop
fucom
ret
adc
or
or
fisttps
test
cmp
sar
out
jp
lahf
fwait
add
lds
test
lcall
das
jbe
cmp
jns
shlb
lds
mov
rcrl
out
xchg
xchg
pop
add
mov
fiaddl
lods
xor
push
push
mov
outsl
popf
imul
out
test
mov
daa
fldcw
jb
insl
and
andl
cmc
fildl
cli
lock
dec
out
in
sbb
inc
cmp
shlb
cmp
fbstp
mov
adc
push
push
xchg
xor
add
ds
jg
neg
dec
rclb
sub
jp
push
mov
repz
inc
aad
xor
push
pop
test
and
sub
xor
add
test
mov
xchg
ds
dec
push
fdivr
sbb
shl
ret
mov
or
cld
or
or
xor
in
pop
sti
cld
flds
hlt
pop
pop
mov
cmp
mov
rcl
loope
xchg
repnz
sbb
or
inc
jmp
mov
adc
inc
add
xchg
cli
push
xor
cmpsb
out
xchg
js
ljmp
and
insl
mov
shr
xchg
cmp
xchg
cmp
aas
xchg
test
jb
or
popa
mov
test
movsb
movsl
popf
add
insb
cmpsl
push
mov
inc
xchg
sbbb
pop
and
imul
repz
pop
add
lcall
push
lods
in
outsl
popa
js
aam
jmp
pop
test
dec
es
je
pop
dec
loop
jnp
add
insl
andb
es
jae
add
cli
repz
mov
push
out
xor
mov
xchg
cld
sbb
add
jl
push
xchg
cmpsl
sbb
jecxz
inc
cmc
rcr
dec
cmp
cmp
push
inc
xchg
adc
cwtl
data16
imul
rcr
lahf
and
arpl
insl
aas
out
lods
xchg
dec
je
sahf
lcall
mov
scas
iret
daa
into
push
push
cmp
repz
icebp
sub
loopne
mov
subl
fdiv
cmc
or
cmp
push
stos
out
jecxz
mov
inc
dec
sub
in
dec
mov
std
ljmp
mov
sbb
shrb
sub
cmp
or
push
pop
or
rcl
aaa
dec
outsb
das
addr16
jbe
call
jbe
pop
repz
into
mov
orl
adc
push
add
and
pop
or
xchg
mov
jbe
dec
test
adc
inc
pop
in
pop
xlat
cmp
mov
dec
icebp
testb
adc
or
cmpsb
and
or
outsb
dec
mov
adc
stos
pop
pop
rcl
xchg
cmp
popf
in
mov
ss
frstor
push
in
loope
icebp
and
mov
mov
jmp
das
pusha
sub
das
cmp
cmp
adc
aad
pop
mov
inc
bound
aad
mov
jl
movsb
fwait
clc
ja
sti
or
sub
adc
into
sbb
out
popa
das
test
rcrb
ret
push
adc
test
das
adc
repnz
pop
movsb
add
mov
test
lret
sub
inc
popf
lcall
jno
aaa
add
stc
popf
mov
mov
dec
add
fcmovu
xor
mov
insl
xor
push
push
push
xor
mov
sub
cltd
xor
sbb
fidivl
and
or
out
test
popl
mov
dec
push
xor
add
xchg
lcall
insl
ret
or
cmp
insb
push
cmp
out
pop
xchg
sbb
mov
sarl
sahf
mov
xchg
push
cmp
pushf
leave
jne
mov
sbb
adc
pop
xor
inc
punpckhdq
bnd
push
mov
xchg
sbb
insb
fimuls
mov
lret
or
xor
dec
aam
mov
xchg
jge
dec
lcall
xchg
out
or
xchg
mov
mov
and
mov
repz
pop
scas
aas
lods
mov
xchg
fwait
sub
repz
hlt
mov
mov
xlat
ja
notl
mov
dec
jb
push
xchg
imulb
jb
je
lds
xchg
mov
push
fnstcw
mov
movsb
loop
push
out
es
xchg
adc
in
xchg
mov
flds
xor
test
adc
jg
cmpsb
lret
insb
sub
jo
gs
mov
xlat
and
push
mov
or
mov
push
lcall
push
hlt
dec
ror
mov
adc
popf
scas
adc
adc
add
pop
fcmovb
mov
lahf
push
pusha
or
sbb
loop
and
sbb
lods
dec
das
adc
in
and
popf
mov
add
mov
mov
shrb
test
pop
or
cmp
push
call
mov
scas
daa
mov
test
cmpsl
sub
xchg
dec
xchg
notl
xorb
int
xchg
daa
je
xor
sbb
mov
cmc
and
enter
jmp
in
xor
dec
mov
mov
out
idivl
cld
cmc
pop
cwtl
add
dec
ficompl
pop
mov
cmovg
and
int
cmpsb
test
ret
cld
fisubrs
xor
or
sub
movsb
sbb
mov
popl
enter
shlb
adcl
cld
outsl
pop
pusha
test
and
xchg
sbb
popf
sub
add
or
dec
mov
sahf
ljmp
jmp
movsl
dec
repnz
lahf
cmp
movsb
dec
mov
sbb
in
and
cmp
xchg
xor
cmp
lea
cmp
jmp
lock
repz
inc
xor
mov
mov
inc
or
mov
cmp
cmp
clc
or
imul
in
rorl
stos
ljmp
and
ljmp
sti
jmp
xchg
mov
test
push
rcl
mov
ljmp
and
pop
push
stos
dec
xor
movsl
je
pop
imul
inc
shrw
movsl
scas
pop
daa
fsubr
mov
inc
mov
subb
stos
inc
es
pop
test
lret
dec
jp
mov
xlat
jo
mov
xor
dec
mov
xchg
lock
mov
notb
mov
out
arpl
push
fcmove
mov
mov
mov
cld
out
movsb
fiaddl
mov
mov
mov
ret
jmp
adc
push
movsl
mov
add
arpl
push
arpl
or
mov
gs
pop
sbb
and
push
xor
leave
fsubl
repnz
mov
push
jecxz
cwtl
dec
call
push
push
and
mov
xor
add
repz
jmp
pop
pop
mov
dec
sub
repnz
jne
mov
cmp
or
and
sub
ffreep
mov
ds
int3
roll
or
jne
les
gs
test
xchg
inc
ja
pop
inc
pop
fidivrl
insb
cmp
mov
popa
xchg
leave
dec
out
xor
and
mov
pop
and
lahf
sub
clc
bound
add
sarw
cli
fisttpll
pop
jl
lahf
call
in
dec
add
mov
add
ret
sbb
addr16
iret
cmp
adc
push
imul
push
jne
loop
dec
int3
divb
scas
mov
cmp
aas
addr16
mov
mov
add
sub
test
dec
out
test
outsb
leave
adc
dec
mov
inc
aad
sub
xor
mov
push
in
mov
jo
mov
addl
jmp
lret
dec
test
inc
pop
mulb
cmp
dec
lock
xchg
ljmp
shll
mov
push
shll
mov
add
sub
test
push
test
pop
mov
pop
cld
out
lea
fidivrs
scas
cwtl
and
push
fistps
push
fdivs
mov
shl
outsl
xchg
sbb
lcall
js
sbb
jge
es
add
sbb
xchg
jne
cmp
outsb
test
ja
subl
nop
cli
out
rorb
xor
insb
stos
or
jmp
push
imul
inc
sbb
mov
cmp
pusha
cmp
stos
and
push
xor
faddl
icebp
vmwrite
out
or
aaa
mov
mov
xor
fdivl
out
hlt
das
cmp
std
mov
pop
jecxz
xor
jmp
ja
jge
sub
add
lock
call
jp
mov
nop
pop
mov
push
push
inc
jmp
shl
les
jle
lea
or
sbb
cmpsl
lods
add
jnp
xor
insl
subl
pop
or
ret
push
sub
shll
cmp
std
hlt
das
add
clc
gs
std
jg
cmp
dec
pop
inc
test
mov
addr16
insl
js
adc
push
ds
push
xchg
push
into
and
xor
xor
sbbl
orb
jb
fs
pop
cmp
xchg
mov
mov
inc
repz
fisttpll
sub
sbb
sub
adc
pop
or
mov
jno
xchg
nop
sarl
leave
in
sub
and
ja
sbb
sahf
outsl
cmpsl
inc
xor
cmp
xchg
insl
dec
pop
mov
xchg
pop
ror
sbb
sub
xor
inc
xor
adc
fs
cmp
enter
inc
in
loop
jg
cmp
mov
mov
pop
out
sahf
xchg
mov
push
movsl
cmpsl
pusha
or
and
cmp
jo
cmp
jge
out
and
adc
mov
adc
hlt
mov
pop
mov
push
fcomps
mov
and
ret
subb
mov
leave
xor
dec
out
arpl
sbb
cmp
cmp
cvttps2pi
fcmovnb
andl
jo
xor
ret
jo
mov
addl
dec
add
xchg
adc
xorl
repz
or
jmp
xor
addl
sbb
hlt
or
mov
jl
pop
out
lods
test
jp
addr16
push
mov
cs
push
loop
mov
roll
xor
adc
bound
mov
pop
mov
or
jns
repnz
rorb
out
and
imul
movsb
dec
jae
adc
fs
push
xchg
xchg
cltd
stos
dec
push
test
cmp
pop
jbe
and
aad
sub
out
mov
popa
lds
or
es
call
inc
shrb
loope
outsl
pusha
inc
nop
adc
aas
dec
fmul
movsl
cmp
fwait
add
adc
stos
enter
adcb
cmp
in
lcall
out
jg
xor
repz
xor
sub
mov
sub
out
mov
inc
test
cmp
dec
jo
adcb
shrb
idivl
sbb
mov
push
add
inc
stos
fiaddl
outsl
fwait
mov
pop
adc
das
push
mov
sbb
fwait
imul
jno
adc
mov
jg
in
sub
jmp
es
jmp
and
sbb
mov
mov
sub
insl
pop
aaa
outsb
mov
lret
stc
adc
mov
lret
mov
outsb
dec
pop
scas
and
pop
ss
push
push
fbstp
cltd
pop
orl
lahf
stos
out
pop
pop
push
hlt
mov
fs
mov
cwtl
adc
iret
js
mov
mov
jbe
aad
call
cmpsl
mov
xor
jns
cwtl
dec
push
lret
lods
jmp
push
pop
pop
je
dec
jae
adc
clc
add
mov
push
dec
cmp
push
dec
and
pop
lea
xchg
aas
rcl
push
inc
js
pop
jmp
cli
hlt
popf
shl
lock
adc
dec
push
js
jmp
pop
repz
xchg
xchg
jle
add
div
ds
dec
ret
loopne
pop
loopne
orl
test
and
insl
mov
je
shr
add
adc
mov
mov
or
adc
ret
aad
fcoms
add
xor
outsl
xchg
into
lea
das
mov
out
data16
jmp
leave
bound
push
push
icebp
fdivs
cmpsb
and
inc
jp
fisttps
adc
xor
dec
adc
cmp
aam
push
xor
xchg
lock
pop
adc
cld
mov
cs
mov
add
mov
enter
cli
lods
in
loop
xchg
out
mov
push
test
mov
aam
mov
push
int3
mov
add
cmpsb
shrb
das
sbb
enter
xchg
mov
push
adc
sbb
inc
sbb
test
mov
xchg
ss
aaa
inc
push
cmpsl
mov
jnp
pop
fdivrl
loop
fst
jmp
cmp
fnstenv
dec
sbb
sysenter
cmp
cwtl
mov
sub
dec
dec
fwait
jcxz
mov
or
sti
sbbl
or
adc
push
in
pusha
push
ljmp
mov
adc
pop
ret
out
push
mov
cmc
test
mov
ds
hlt
lret
ds
fwait
xchg
aas
jo
dec
ss
mov
and
sbb
fs
inc
lret
mov
jecxz
fwait
lret
fwait
xchg
push
cld
pop
inc
addr16
xchg
mov
add
inc
pop
jl
mov
sti
xchg
aaa
stc
iret
and
rclb
pop
loopne
movsl
sub
pusha
adc
scas
add
mov
int
xchg
xor
pusha
rcll
cmp
cwtl
and
push
pop
ljmp
push
adc
jnp
pop
adc
je
in
fdivl
daa
call
fwait
adc
or
pop
xchg
xchg
mov
mov
jnp
popa
aad
movsb
xor
xlat
adc
jnp
jp
negb
les
ret
mov
aas
call
sbb
or
rcrb
lds
and
dec
xchg
add
enter
push
sbb
mov
or
movsl
fldl
sub
cmpb
shufps
jl
pop
data16
cld
jecxz
jb,pt
repnz
leave
mov
in
scas
lahf
lret
jns
ret
sbb
dec
mov
cs
sti
mov
imul
or
mov
push
mov
repz
xor
lahf
mov
cmp
xchg
pop
or
or
xorl
test
imul
add
lret
dec
mov
and
inc
repnz
popf
addl
ds
mov
cmpsb
icebp
out
mov
mov
jbe
test
or
add
imul
outsl
inc
stos
dec
sbb
adc
xchg
adc
inc
xorl
test
add
fildl
dec
out
cmpsl
xchg
cmp
cmpsl
add
shlb
cmp
and
inc
sub
call
cmp
jae
rorl
icebp
mov
inc
jg
test
sahf
shll
lret
and
push
mov
fisttps
sti
shrb
pop
rcrl
test
ret
std
std
lahf
push
push
lds
pusha
icebp
outsb
and
cltd
push
sbbb
int
cmp
shrl
aad
xchg
xor
roll
mov
pop
mov
sbb
jl
pop
sbb
sbb
das
adc
mov
pop
and
test
or
jbe
into
test
ja
pop
cmp
jb
fidivrl
xchg
lahf
push
dec
xchg
iret
cwtl
add
jbe
dec
xchg
adc
push
pop
sahf
mov
jno
adc
push
hlt
pop
mov
popa
out
fwait
es
mov
cmp
cmpl
stos
jg
data16
jle
mov
mov
push
xor
mov
pop
arpl
sti
enter
lcall
loope
test
leave
jbe
and
inc
rcl
sbb
clc
cmpsl
mov
cmp
mov
mov
adc
sbb
mov
or
cltd
mov
pop
call
iret
push
fcoms
insb
ss
mov
inc
and
fmull
push
lods
stc
pop
or
xor
mov
mov
or
inc
cmp
jbe
sbb
scas
jbe
cmp
loopne
loopne
xchg
es
pop
mov
cmc
icebp
fldt
inc
mov
mov
push
push
popa
add
int
sub
xchg
jg
add
mov
insb
sub
test
dec
lods
xchg
repz
add
sbb
fisubs
pop
cltd
arpl
push
dec
mov
fs
xchg
pop
stos
mov
or
or
or
mov
loop
add
dec
or
and
lahf
mov
fnsave
push
jno
cs
loop
or
adc
pop
lret
sbb
scas
leave
inc
jo
push
sub
adc
data16
clc
or
cmp
xchg
push
mov
stos
cmp
or
int3
adc
test
lcall
stc
and
sti
mov
jnp
or
js
mov
mov
mov
ret
rcll
mov
call
xchg
xchg
test
jp
ss
ja
test
or
fxch
and
pop
bnd
addr16
mov
mov
pop
nop
call
fucom
fs
and
fsubrl
stc
cmpsl
fwait
mov
testl
mov
and
xchg
iret
roll
je
pushf
ret
cwtl
arpl
loopne
pop
out
mov
test
dec
scas
sbb
ret
les
lret
in
dec
mov
xorb
mov
rcrb
popa
out
pop
xlat
pop
rcrb
in
sub
imul
jno
jmp
xchg
fistpl
xchg
pop
or
aaa
mov
and
insl
push
xor
loopne
push
dec
mov
outsb
rolb
ss
fmull
jno
or
mov
jl
jmp
push
pop
sub
add
ja
and
js
cmpsl
and
clc
out
xchg
push
mov
push
pusha
aaa
dec
and
xor
mov
dec
aad
add
lea
mov
adc
movsb
loopne
jmp
fwait
in
and
mov
and
sahf
pop
xor
adc
outsb
push
fcomp
jnp
cmp
shr
icebp
lret
sti
jg
mov
shrb
scas
scas
sbb
sub
jbe
jno
pop
hlt
sub
cmp
xchg
lahf
xlat
cmpsl
sbb
xchg
cmc
xchg
out
cmp
xchg
out
pushf
mov
arpl
push
shrl
in
add
xchg
cmp
dec
out
or
mov
cmp
aam
mov
mov
repz
lret
add
or
in
or
adc
mov
cmp
imul
insl
loop
js
or
sarl
xlat
inc
push
add
mov
push
pusha
add
in
or
jl
jnp
mulb
inc
imul
inc
sub
test
popa
out
xlat
int
js
andl
in
je
sbb
in
ljmp
jae
das
in
adc
jp
mov
cs
loope
push
or
and
neg
addr16
in
gs
ffreep
push
add
xor
ljmp
jge
stos
pushf
or
dec
mov
mov
pop
fimuls
mov
in
mov
xorb
fbstp
outsb
enter
mov
dec
fmuls
cmp
mov
popa
leave
bound
outsb
pop
lods
jb
cld
push
push
mov
jbe
pusha
cmp
xchg
int
cs
or
movsb
inc
mov
lock
stc
push
out
mov
mov
mov
cmpsl
inc
outsl
addl
subb
adc
mov
insl
push
or
lods
das
ds
in
fisttpl
xchg
cli
sub
inc
repz
sub
xchg
hlt
daa
push
std
into
jmp
movsb
jg
jne
or
ds
jae
dec
xor
or
ljmp
inc
mov
out
xor
mov
ljmp
daa
sub
adc
push
jmp
scas
or
jge
pop
loope
mov
sub
mov
rorl
fsub
dec
cmp
ja
insl
les
insb
icebp
adc
push
and
ret
cs
in
stc
scas
scas
rol
mov
inc
lret
adcb
into
out
jmp
fisubrs
fs
xchg
andb
movb
call
stos
ds
xchg
fmuls
loopne
das
mov
jae
imul
sbb
std
lods
aas
clc
scas
js
aam
mov
and
mov
mov
mov
mov
xchg
es
fdivl
movsb
mov
cmp
lret
jnp
add
loop
repz
adc
add
mov
pop
xchg
jae
xchg
gs
add
ljmp
or
lds
mov
mov
ret
je
jmp
xchg
out
xchg
inc
xor
imul
js
ja
push
mov
out
scas
fs
mov
je
lods
mov
pusha
flds
call
sbb
xor
pushf
mov
insb
mov
push
shr
sub
dec
lock
insl
pop
dec
add
push
out
shll
pop
adc
icebp
inc
dec
sbb
cmc
jb
adc
xchg
cwtl
lods
xchg
fnsave
jno
fwait
xchg
out
add
jmp
cmp
pop
ds
cli
xor
xchg
mov
cwtl
push
sbb
push
cmpsl
stos
sub
ja
into
outsb
pop
fnstsw
stos
fcomip
psllq
mov
mov
cwtl
adcb
xchg
jno
scas
imul
xchg
cmp
push
add
push
jle
icebp
jae
lret
cmc
dec
outsb
xor
and
adc
mov
lret
movsb
cmp
shrb
adc
xor
dec
mov
mov
into
daa
xchg
adc
repz
iret
push
insb
mov
cltd
xor
push
addr16
cmp
and
add
xlat
fsubrl
pop
or
pop
mov
fldcw
jns
xchg
mov
lret
jg
pop
jae
cmc
xchg
add
or
test
les
in
daa
mov
int3
ja
aad
ds
leave
xlat
and
cwtl
jp
ja
cmp
shlb
addb
inc
sub
mov
xchg
inc
rorb
leave
sti
repnz
push
pusha
pop
popf
mov
or
lds
inc
insl
cmp
pop
in
data16
push
mov
iret
cmp
dec
fxch
leave
push
mov
mov
orl
push
lahf
loope
mov
es
sub
sbb
xor
and
movsb
iret
dec
mov
outsb
push
cwtl
addr16
pop
sti
mov
inc
test
sub
fnstenv
testb
pop
pop
sub
jbe
and
xchg
cmp
xlat
mov
add
mov
pusha
popa
or
sub
int
mov
mov
cld
lea
cmc
in
pop
aam
mov
stos
dec
push
ror
sub
sub
and
pop
or
add
jmp
fnstenv
int
das
shl
bound
pop
cmc
enter
fimull
xor
inc
out
and
jmp
sti
add
jl
jb
dec
gs
outsb
test
mov
mov
div
sub
jmp
in
popa
out
jecxz
fnsetpm(287
pusha
cmp
pop
out
sbb
cmpsl
push
lret
pushf
adc
cmpsl
notb
adc
stos
cmp
and
and
adc
and
out
mov
imul
in
orl
mov
sub
adc
out
push
or
lret
pop
ret
js
sbb
fidivs
imul
daa
dec
xlat
push
es
shrb
lcall
xor
addr16
cmp
push
ljmp
cltd
push
pop
sar
les
dec
jne
mov
xlat
mov
add
xchg
imul
cmp
add
out
popa
mov
loopne
mov
out
jp
rol
mov
mov
sub
scas
das
lds
sti
clc
add
sbb
dec
pop
movsl
mov
nop
push
adc
je
xchg
sbb
xchg
inc
loope
jle
repnz
jl
rcrb
mov
fdivrp
out
add
jmp
cmp
sbb
jb
jnp
repz
mov
loope
insl
inc
int
leave
xor
and
ds
call
dec
or
jmp
adc
cld
add
int3
adc
mov
leave
adc
xchg
or
insb
stos
and
mov
loopne
mov
push
or
rolb
lret
test
pop
arpl
xchg
in
mov
cmp
out
in
fnstsw
data16
inc
cli
in
mov
mov
add
cs
iret
out
cmp
jmp
jne
in
pop
or
insl
shlb
mov
mov
idiv
lock
dec
gs
cltd
idivl
fildl
in
mov
jmp
std
inc
pop
sbb
mov
cmpsl
js
data16
lds
out
fists
notl
adc
sbb
dec
add
cmpb
or
and
inc
cmp
in
cmpsl
loopne
hlt
cwtl
outsl
jne
xchg
int3
mov
and
movsl
clc
cmpsb
xor
scas
cwtl
jl
lock
jp
push
adc
xor
add
or
sub
cmp
xchg
arpl
adc
or
lock
cs
and
dec
jg
adc
cmpsb
jmp
enter
cltd
sub
aas
subb
mov
outsb
xchg
push
test
jae
sbb
sbb
scas
inc
jg
xlat
or
lock
repz
xor
xor
popf
cltd
mov
add
jbe
xchg
push
add
imul
repz
idivl
or
aaa
popf
fimuls
mov
jbe
and
or
inc
and
and
in
dec
jno
gs
das
xchg
dec
out
jo
cmc
push
sbb
xor
lods
movsl
dec
sbb
mov
js
push
ret
cwtl
or
sub
notl
call
mov
add
pop
aas
jo
in
gs
pusha
dec
adc
fsubs
shlb
adc
mov
hlt
add
bound
mov
popa
sbb
jae
xchg
push
lods
imul
call
lods
xorb
jg
push
pop
nop
adc
loopne
pushf
inc
aas
lret
daa
insl
jno
push
cmp
cmp
mov
add
pop
fwait
push
add
daa
xorl
jno
aad
adcb
mov
xor
or
sbb
ds
xor
adc
icebp
push
ret
js
inc
add
dec
rcr
fsubl
and
rorl
movb
rclb
out
xor
out
dec
nop
aad
push
xor
cwtl
movsl
sub
sub
rcll
push
fiadds
aam
jno
out
mul
mov
push
jnp
cwtl
loop
and
call
xor
out
loop
clc
jnp
xchg
or
push
sub
dec
mov
and
push
fistps
mov
and
bound
mov
loopne
dec
push
and
das
mov
into
and
xchg
jne
pop
jmp
cltd
std
mov
sbb
outsl
and
test
subb
lds
cwtl
test
clc
out
outsb
xor
cmp
test
lret
mov
imul
loope
pop
push
inc
in
lock
stc
xor
addr16
jl
pop
mov
xchg
faddp
mov
cmp
add
pop
pop
leave
sub
and
and
js
stos
jns
ficoml
outsl
sbb
lods
pop
or
cld
xorb
pop
pop
jo
jge
in
mov
mov
ljmp
and
out
xchg
cltd
ret
out
xlat
sbb
sub
das
add
cli
push
xchg
out
addr16
imul
push
in
lret
xchg
add
sub
loope
xchg
es
sarl
shlb
test
xor
in
cs
add
out
and
ja
sbb
out
dec
pop
pop
push
movsl
lods
lret
in
inc
push
inc
scas
cmp
out
fisubs
inc
sti
cld
mov
mov
mov
xor
push
mov
pushl
push
adc
lock
adc
filds
cltd
cltd
int
or
push
dec
aaa
dec
imul
mov
add
pop
popa
cs
mov
xlat
loope
jnp
cmpsb
jle
inc
negl
cld
aaa
dec
xchg
sahf
jecxz
mov
rcr
ja
fistpll
sti
cmp
sahf
mov
repz
sarb
dec
inc
jg
jmp
pushl
mov
mov
loop
and
and
xchg
pop
cmp
lret
mov
shr
mov
std
outsl
popa
mov
lcall
mov
in
dec
adc
xor
aaa
in
das
repz
out
das
mov
xchg
inc
mov
jmp
add
or
bound
mov
or
cmp
jns
sub
push
add
inc
sbb
mov
jg
ss
sbb
in
cli
daa
mov
inc
ljmp
xchg
dec
and
adc
jno
mov
enter
repz
mov
xchg
scas
lcall
sbb
mov
fistpl
jp
sbb
cmp
icebp
sbb
faddl
shlb
pop
xor
mov
stc
std
dec
pusha
jno
jno
pmulhuw
out
sub
push
dec
inc
pop
mov
clc
cli
das
push
inc
int
or
push
in
mov
sbb
testl
mov
inc
sbb
stc
rcl
test
cs
out
test
cmpsb
fcmove
xchg
sub
jge
pop
xor
mov
ret
int
test
xor
jns
hlt
mov
or
popa
andb
mov
int3
cmp
jecxz
insb
out
out
push
pop
cmp
push
add
sahf
frstor
lock
push
mov
fnstenv
or
fcomps
mov
xchg
cltd
stc
sbb
enter
cmp
pop
inc
mov
in
cmc
or
loop
inc
push
cmp
mov
jecxz
dec
insb
sarb
jmp
popa
loop
pop
mulb
sahf
mov
xchg
mov
jecxz
in
mov
pop
dec
ja
pop
cmc
xchg
movsl
sub
call
push
gs
int3
jmp
mov
pop
add
mov
add
mov
jmp
mov
jnp
sbb
aad
vrcpss
jecxz
shl
arpl
sub
test
add
frstor
mov
scas
mov
xor
in
jmp
sub
sbb
or
adc
imul
aad
xor
cmp
pop
sub
mov
cmpsl
insl
repnz
fidivrs
jmp
aaa
imul
arpl
pop
fs
xor
lds
cltd
and
xchg
test
push
movsb
xchg
sub
leave
xchg
mov
cmpsb
imul
mov
clc
pop
nop
mov
pop
rcrb
push
and
mov
out
pop
data16
dec
test
dec
sti
sub
and
jg
std
out
push
mov
pop
mov
test
mov
pop
lret
movq
sbb
sub
mov
sbb
addr16
mov
loopne
imul
shll
or
ss
in
ret
mov
dec
pushf
dec
int
mov
jl
dec
cltd
imul
out
sbb
scas
mov
pop
lret
ja
xlat
add
aaa
add
test
lds
jnp
es
fmull
mov
icebp
ljmp
dec
push
nop
arpl
dec
mov
lea
mov
fdivl
sub
adc
fmuls
sub
in
fidivrs
out
insl
lcall
testb
popf
dec
jp
dec
ds
mov
and
fcompl
xlat
xchg
dec
adc
pusha
loope
jecxz
imul
mov
xor
out
dec
mov
push
inc
enter
mull
insb
lahf
adc
out
cmp
cmp
call
adc
in
cmc
push
lgs
inc
cmpsl
incb
outsb
adc
dec
cs
pop
mov
xchg
push
push
les
pop
lcall
or
ljmp
mov
xor
imul
int
insl
test
std
loope
jp
dec
cmpl
cltd
mov
or
jg
repnz
lea
push
xlat
cs
mov
inc
push
lods
popa
adc
vsqrtsd
sahf
push
xchg
sbb
testl
mov
and
adc
out
scas
es
nop
adc
push
add
sub
adc
inc
lds
ficomps
inc
fwait
insb
sbbb
push
sbb
cld
sbbl
js
xchg
push
jl
out
cmp
jg
in
daa
in
add
aaa
xchg
pop
xchg
sbb
dec
fidivl
push
dec
push
lea
sbb
add
mov
aaa
fs
inc
jbe
ret
cmp
pop
mov
test
jnp
movsl
insb
mov
sbb
in
push
unpcklps
xchg
adc
pop
mov
int
mov
pop
xchg
cmc
loopne
jne
mov
stos
in
push
adc
mov
push
fucomip
movsb
jb
cmc
clc
jno
mov
jno
jno,pt
lods
inc
push
and
mov
in
xlat
or
and
or
cltd
insl
mov
fdivl
hlt
test
adc
out
orl
lods
out
mov
sub
cltd
xchg
ret
dec
mov
push
loope
pop
mov
gs
out
out
addr16
and
sbb
mov
std
inc
xchg
inc
fimull
jns
cltd
pop
push
pop
mov
dec
stos
sbb
or
pop
mov
adc
adc
iret
jecxz
push
adc
dec
imul
adc
mov
lock
mov
scas
jns
dec
sti
fildl
fiaddl
data16
mov
aad
cld
mov
insb
jno
jns
or
pop
sbb
lods
jg
pop
jg
lea
mov
rclb
rolb
and
fld
das
insb
dec
adc
shll
xlat
push
pop
cmpsb
aad
push
imulb
fsubl
ds
ror
dec
or
jne
lods
push
xchg
pop
cmpsl
mov
pop
imul
and
leave
lock
inc
jp
xchg
sti
push
or
sbb
repz
das
outsl
das
mov
les
cmp
push
stos
mov
mov
inc
xlat
movsb
popf
outsb
mov
or
push
xchg
sub
push
jle
pushf
test
test
int3
xchg
push
pusha
add
nop
test
out
in
ljmp
mov
repnz
fldl
repnz
in
push
xor
xchg
js
out
mov
aaa
addr16
add
movsl
shr
inc
sbb
add
mov
jmp
jae
lcall
arpl
orl
loope
adc
xchg
and
push
mov
inc
popf
mov
icebp
sub
pop
inc
sbb
adc
xor
and
addr16
mov
mov
mov
sub
mov
pusha
ja
inc
and
sahf
ja
sbb
int
xchg
or
je
and
mov
inc
jno
push
test
cltd
sub
mov
pusha
cmp
jbe
mov
gs
xor
dec
inc
in
stos
push
cld
xchg
xchg
push
adc
stc
inc
xor
div
mov
push
or
push
sub
mov
mov
xchg
ljmp
leave
mov
jl
jb
shrb
repnz
ret
dec
dec
fidivrs
out
xlat
fistpl
sub
pop
loope
push
mov
lods
add
popa
fnstenv
insl
xchg
cmpl
mov
out
icebp
cmp
push
inc
icebp
push
dec
fnstsw
xchg
push
lret
into
jecxz
mov
outsl
in
push
dec
in
add
and
and
outsl
push
loopne
cmp
cmp
leave
inc
mov
dec
das
or
adc
cmpsb
mov
mov
stos
insl
rcll
aam
or
stos
cltd
xchg
int3
sbb
loop
hlt
adc
les
popf
dec
xchg
fisttpl
data16
mov
dec
or
in
loopne
or
loope
repnz
or
cmp
xchg
hlt
lret
orb
pop
jg
dec
pop
push
push
and
add
cmc
xor
dec
jo
adc
push
loopne
pavgw
test
inc
xchg
jp
aaa
mov
or
test
and
sub
into
scas
or
cmp
je
cmpsb
jge
fidivrs
rcl
dec
mov
pop
add
or
ja
sub
addr16
test
pop
sub
sti
inc
les
mov
js
jno
rol
bound
repz
scas
mov
push
inc
adc
jecxz
jbe
xchg
xchg
mov
mov
in
xor
sub
inc
inc
push
fcomps
cmpl
pop
push
bound
shll
push
aas
mov
push
ffree
pop
int3
fistps
add
call
xor
mov
xor
or
shr
dec
fldl
int
cmp
add
mov
push
mov
pcmpgtd
lret
mov
arpl
pop
and
mov
adcb
xlat
push
aam
and
mov
pop
aam
push
in
enter
push
and
stc
dec
mov
dec
in
arpl
fcompl
xor
repnz
mov
mov
and
popf
xor
lock
popf
pushf
add
sbb
lahf
inc
and
orb
outsl
imul
jp
cmp
movsb
inc
xchg
clc
fmuls
ss
lahf
outsl
aaa
jno
ret
inc
push
sub
pop
and
shrl
je
add
mov
xlat
xchg
cwtl
cmpsl
insb
and
adc
pop
add
push
sbb
mov
mov
inc
mov
or
xchg
in
mov
sub
dec
lods
cld
lret
das
jp
int
mov
inc
xor
popa
mov
or
aas
cmpsl
jbe
sahf
mov
cmp
sbb
mov
lods
out
or
clc
sbb
xor
iret
mov
or
pushf
je
mov
idivb
mov
mov
xchg
xchg
scas
insb
cmp
sub
lret
inc
movsb
mov
cmpsb
nop
loope
pop
je
xor
int
jl
subb
imul
sbb
and
jp
stos
fnstenv
lret
mov
push
test
std
add
mov
negl
sbb
xor
mov
push
pop
pop
push
jne
in
add
hlt
jp
fstpl
lds
rorl
stos
sbb
and
or
mov
aad
leave
stos
mov
test
jle
pusha
lret
mov
mov
pushf
cmp
pop
inc
daa
xor
and
cmp
lock
dec
insb
xchg
inc
int3
push
hlt
int
test
aas
les
andl
pop
lods
add
jo
pop
add
sbb
sbb
mov
jns
xchg
pop
orb
fisubrl
mov
xor
shll
and
push
aaa
sub
inc
outsb
divl
or
add
xchg
aaa
rcr
push
xor
mov
call
xchg
add
pop
push
enter
dec
lret
aaa
mov
cmp
jecxz
inc
or
mov
xor
sbb
lea
mov
out
divl
sub
mov
push
inc
sub
inc
ja
mov
add
movsl
inc
icebp
or
lret
testb
inc
out
adc
stc
pop
in
out
jbe
xor
lcall
jle
neg
cmp
repz
imul
push
dec
or
pop
sbbb
cmpsl
inc
fmull
and
sbbb
sbb
adc
push
out
jns
mov
jl
mov
pandn
mov
mov
cwtl
jge
and
pusha
push
test
dec
add
xchg
ret
loope
inc
push
adc
mov
stc
push
push
inc
loopne
push
add
or
mov
fsts
in
xchg
inc
mov
fildl
pop
jne
inc
ror
mov
mov
mov
mul
push
lahf
push
dec
call
inc
in
adc
fcoml
sbb
rolb
andb
loop
push
adc
xor
pop
jns
mov
cmp
cmp
add
and
mov
add
movsl
and
push
insb
mov
fldl
mov
pop
mov
rol
jae
mov
mov
leave
cmp
push
faddp
mov
adc
push
dec
dec
pop
inc
mov
push
into
sub
ret
cmpsb
iret
das
xor
mov
sahf
push
or
lcall
les
aam
ret
mov
inc
ret
adc
jno
jne
loop
aad
lcall
ljmp
testb
dec
cmp
lods
adc
or
sbb
dec
int
sti
jp
push
push
mov
cmp
out
dec
cmpsl
mov
loopne
test
adc
jno
push
shll
dec
mov
sahf
xchg
addr16
cld
or
mov
scas
aam
xchg
fsub
sbb
adc
inc
mov
jb
mov
push
mov
push
ljmp
ja
stos
mov
std
push
pop
out
in
call
fwait
movsb
leave
mov
rcrl
push
cmp
and
scas
dec
lahf
in
cwtl
fwait
imul
xor
test
mov
pusha
sbb
divb
add
fsubl
nop
in
inc
lods
loop
shl
mov
inc
ds
sub
jo
xor
ss
in
dec
mov
dec
sarb
mov
add
insl
mov
aam
fstpt
and
push
out
shl
je
aaa
inc
cwtl
push
xchg
add
call
mov
add
lcall
das
mov
adc
ljmp
ja
cltd
lret
popl
int
popl
repz
dec
mov
fcmove
pop
inc
clc
mov
mov
jp
sub
xchg
add
add
mov
mov
pop
dec
pop
repz
mov
push
ret
or
cmpsl
push
sub
imul
xchg
sub
pop
movl
aam
mov
push
sub
or
jno
inc
fldt
lock
dec
add
mov
mov
aas
repz
add
inc
push
ja
dec
inc
jno
cli
cs
imul
pop
dec
lcall
int3
inc
xchg
add
mov
mov
test
mov
cmp
mov
ds
xor
inc
mov
pusha
xchg
and
lods
jb
bound
xchg
jb
imul
call
xor
jmp
or
mov
pop
dec
xlat
mov
push
and
mov
scas
jle
cmp
jge
hlt
in
ds
adc
rcrl
adc
jbe
dec
adc
push
jmp
cwtl
push
sahf
mov
aaa
mov
mov
notb
rolb
fxch
iret
mov
mov
dec
mov
sets
push
cmp
xor
fsubs
arpl
mov
push
fadds
inc
lahf
dec
shrb
xchg
or
mov
xchg
lea
mov
adc
mov
ret
enter
repz
mov
jle
iret
notb
popa
es
mov
imul
jno
mov
inc
cmpsl
mov
cmp
jnp
pop
fs
pop
mov
aaa
lea
push
outsb
and
xchg
push
cwtl
outsl
or
sbb
jecxz
mov
adc
hlt
outsb
pop
mov
jge
push
jns
push
arpl
sbb
or
dec
adc
add
movsb
or
int
cmpsl
xchg
in
adcb
pop
adc
insb
lcall
or
rcrb
dec
xor
pop
cmp
push
sub
mov
push
addr16
xchg
and
add
push
xor
mov
jno
in
xchg
pop
pop
insl
loopne
negb
jnp,pn
in
push
jl
int
repnz
das
add
xchg
pop
xchg
jmp
adc
pop
inc
les
lahf
mov
arpl
shr
std
dec
adc
push
jmp
add
std
ficomps
xlat
mov
stc
jg
in
lret
ljmp
lds
mov
movsb
fs
cltd
cmc
sbb
cmp
inc
imul
ror
mov
cs
stos
fdivrs
jnp
pusha
fistps
mov
fmull
cmp
pop
enter
mov
dec
push
mov
mov
add
shl
adc
test
add
test
pop
gs
divb
popa
std
xor
and
ficoms
push
inc
aas
in
repnz
or
pop
out
or
or
fisubrl
mov
cmpsb
pavgw
mov
sbb
mov
inc
dec
das
out
std
insb
std
andl
inc
es
and
sahf
lret
cmp
lret
cmp
jmp
and
dec
movsl
mov
xchg
imul
je
pop
push
fstpt
mov
outsl
fimull
cmp
cmp
cltd
into
stos
xor
jmp
mov
add
ss
movsl
pop
push
xchg
mov
js
or
push
add
lcall
test
loopne
into
adc
fcomps
stos
fcoml
mov
stos
jb
rcrb
mov
lock
push
adcl
cmp
pop
gs
mov
repnz
pop
inc
cmc
das
pushf
shrl
imul
xchg
rcl
adc
repz
mov
pop
mov
and
and
out
mov
out
les
cmp
nop
or
fs
cmp
xchg
scas
sbb
jb
sub
sbbl
lcall
mov
jge
cmp
pop
inc
pop
jecxz
test
out
addr16
popf
dec
mov
and
arpl
jo
push
xor
sbb
or
cmp
aam
mov
jecxz
inc
dec
imul
push
add
pop
pop
dec
sti
sub
stos
mov
popf
lahf
insl
cmp
inc
pop
pop
les
test
arpl
rcrl
mov
push
adc
and
add
rorl
lret
lods
pop
pop
mov
rolb
and
das
cltd
lock
pop
jge
pop
into
add
iret
sbb
pop
lds
xor
sub
mov
pop
and
xor
pop
mov
subb
mov
mov
ds
pop
movsb
xchg
test
outsb
push
outsb
and
or
cwtl
push
decl
and
push
inc
xorps
sbb
movsl
xor
std
xor
xchg
je
xchg
sub
movsb
icebp
shrl
ss
sbb
jo
mov
popa
les
sarl
mov
add
push
mov
pop
sub
adc
dec
dec
jecxz
jl
movsb
xchg
js
add
add
ljmp
and
jae
jb
mov
ja
inc
mov
jbe
sbb
pop
aad
push
add
xlat
mov
push
adc
cmp
mov
scas
jno
cmc
mov
add
sub
mov
mov
xor
aas
pop
jl
enter
sub
daa
sti
shll
fldl
mov
jg
or
jp
jo
and
and
cmpl
cli
add
daa
rcrl
ret
scas
es
pop
sub
ja
pusha
shll
leave
add
inc
mov
stc
lods
pop
mov
lods
fcomps
mov
mov
jae
dec
ljmp
flds
icebp
rcl
push
mov
sub
mov
das
and
fadds
lods
lods
and
data16
in
push
push
dec
xchg
vxorps
test
mov
and
xchg
bound
lahf
test
adc
cmpb
je
or
imul
xor
daa
and
and
cmp
ret
stos
mov
dec
jecxz
ds
es
int
xor
aam
stos
mov
adc
xchg
pushw
outsl
push
into
add
sbb
or
inc
fdivp
lods
adc
inc
imul
pop
mov
xchg
sbb
fs
cmp
les
clc
shlb
mov
mov
xorb
test
jecxz
jmp
fs
das
adc
xor
imul
xor
ror
push
aas
jp
push
cli
xchg
dec
sub
sbb
adc
clc
mov
jmp
adc
fstps
mov
das
ret
sub
sbb
pop
nop
shll
xor
push
jp
push
lret
pop
out
sbb
inc
adc
les
in
push
in
ret
adc
orb
inc
xor
push
movl
lea
rclb
cli
pop
insb
incl
loope
push
add
mov
push
xor
adc
or
out
or
rcrl
xchg
push
into
aad
cmpsl
mov
ljmp
aam
xchg
sar
xchg
enter
das
sub
mov
adc
jae
cld
and
sti
mov
xor
jl
cld
iret
ss
and
push
push
xchg
call
in
jle
sub
adc
mov
inc
ret
lcall
insb
mov
xor
bound
xchg
mov
call
jne
rcll
mov
cltd
and
dec
dec
push
pop
mov
out
add
and
popa
mov
sub
fcompl
addr16
mov
out
popfw
or
les
xor
jnp
xchg
shll
rcr
shlb
jno
mov
fistps
pop
inc
daa
lcall
cli
shrb
in
int
lret
xchg
arpl
mov
sbb
push
or
add
pusha
outsb
mov
cmpsb
inc
icebp
lea
shll
pslld
aas
cmp
lods
int3
loope
xor
push
pop
jge
jno
shll
pop
sti
in
pop
push
or
ljmp
sub
insl
pop
sub
stc
shl
or
and
and
dec
adc
jp
sub
test
imul
faddl
pop
ljmp
cmpb
inc
xchg
subb
jnp
dec
rcrl
scas
xchg
hlt
fwait
pop
pop
lret
lock
jb
or
jb
mov
test
leave
popa
xor
aam
add
push
cmp
ss
loop
iret
decb
adc
xchg
push
aad
test
fwait
sub
pop
int
hlt
rdtsc
sub
fwait
xchg
jae
cwtl
jno
lcall
fs
and
pop
mov
mov
lahf
jnp
loop
xor
pop
in
jbe
aaa
pusha
mov
xor
ljmp
push
xlat
and
pop
or
scas
fists
xor
lret
es
mov
bound
sub
sbb
js
shlb
aad
mov
ljmp
jge
dec
es
sub
sbb
or
out
scas
mov
in
mov
mov
pop
pop
cmp
jno
dec
loopne
pushl
int3
push
lahf
pop
imul
popf
hlt
xchg
ficompl
push
shll
pop
and
pop
shr
cli
dec
dec
sahf
aaa
jle
lahf
jg
test
pop
cmp
out
out
jmp
ffreep
cmpsl
cmp
loope
fsubr
jg
and
sahf
fbld
out
in
push
cltd
mov
ja
pop
dec
pop
inc
outsb
xlat
testb
leave
sbb
dec
testl
push
iret
mov
mov
int3
fnstsw
mov
outsb
sbb
stos
mov
pxor
aam
dec
movsl
lods
xor
sahf
mov
in
orb
or
icebp
call
mov
pop
shrl
in
or
arpl
pop
jle
outsb
xor
sahf
icebp
int3
out
jmp
sub
sti
inc
cmpsl
arpl
pop
fsubr
lcall
in
mov
jmp
push
dec
xchg
pushf
daa
sub
decb
in
ffreep
data16
shll
mov
cmpsb
mov
ljmp
mov
add
mov
jns
push
push
xor
leave
fdivp
push
adc
dec
jmp
mov
data16
pop
xchg
adc
xchg
loopne
aas
in
fs
adc
jnp
cwtl
test
push
xchg
mov
cmp
les
pop
push
cmpsl
push
test
push
add
popf
xchg
cmp
repz
jae
mov
jne
push
lds
data16
jno
sub
mov
test
lods
sbb
aaa
std
push
insl
xchg
push
cmpsb
loop
aad
arpl
adc
and
xchg
aaa
cmp
mov
xchg
xor
or
jg
and
mov
xlat
mov
out
lods
push
push
mov
aas
cmpsb
or
dec
scas
push
movsl
inc
call
inc
mov
rcrb
mulb
repnz
nop
repnz
loope
fisubrs
ljmp
std
cmp
xchg
ret
leave
imul
outsl
dec
cmpsb
inc
jg
inc
mov
std
xor
mov
push
add
push
popa
adc
xchg
mov
pop
daa
je
mov
mov
int
dec
jmp
rcll
cli
ljmp
fidivrl
jle
das
xor
mov
out
mov
push
cltd
xor
sti
pop
and
mov
or
movsl
adc
call
imul
pop
fadds
xor
inc
mov
rolb
adc
in
push
push
notl
add
insb
adc
dec
fucomp
movsb
dec
cld
sub
mov
pushf
pop
jnp
mov
cs
inc
pop
int3
jno
std
cmpsl
movsw
inc
imul
and
push
insl
pop
xor
xchg
pop
nop
adc
mov
push
arpl
loop
lock
dec
inc
insb
pusha
pop
into
push
pop
nop
xor
fisubrl
push
and
imul
mov
into
iret
mov
and
dec
test
lcall
insl
sub
jle
mov
call
push
pop
fwait
out
jle
neg
jle
inc
adc
inc
xor
cmp
sbb
in
pop
cli
jge
lret
popa
aam
jne
dec
inc
mov
cmp
pop
cmp
test
cmp
int3
int
stos
or
das
mov
cli
mov
push
mov
popf
and
in
in
jae
fdiv
cmp
test
pop
dec
and
add
es
cltd
jo
push
fildll
popf
aad
out
add
push
or
jae
sbb
lods
adc
add
jp
aad
lock
stos
xor
sbb
xchg
dec
push
mov
repz
loop
inc
xor
cmp
xchg
lret
xor
cmp
repz
inc
rcr
adc
xor
xchg
mov
and
flds
lea
js
or
es
lods
popf
bnd
pusha
pop
mov
aas
stc
std
jg
and
fs
xchg
xor
aam
out
push
movsb
pop
loopne
aas
xlat
rcll
mov
mov
sbb
mov
out
add
dec
push
div
test
sbb
enter
dec
mov
repnz
inc
or
test
jl
add
push
lcall
jmp
jmp
push
je
mov
xorl
test
out
cmp
lods
lret
mov
sub
call
sub
leave
pop
jecxz
jae
mov
sub
sbb
xchg
xchg
jl
gs
or
pop
mov
lcall
pusha
mov
fwait
sar
pop
jnp
adc
mov
andnps
adc
loopne
outsl
aaa
mov
in
fs
xchg
sbb
imul
addr16
push
loopne
mov
sub
sbb
aad
scas
int3
shlb
testl
imul
inc
adc
and
xchg
lods
or
cli
test
dec
jecxz
mov
fucomi
add
sub
ja
addr16
add
pop
xor
cmpsb
push
lret
mov
aas
mov
cmp
jno
out
sbb
mov
pop
mov
aad
mov
fidivl
std
xor
mov
mov
fs
push
orl
add
out
pop
xor
lock
lock
js
lahf
mov
push
andb
lock
cmp
mov
lcall
dec
outsb
sub
xor
jmp
mov
push
cltd
push
cmp
inc
fsts
scas
lret
pop
clc
sub
out
enter
add
mov
or
mov
testb
dec
cmp
mov
and
or
jl
fstpt
outsb
jno
dec
mov
lods
loope
mov
sub
mov
jb
push
mov
iret
rcrl
in
push
xor
xor
std
lahf
rcpps
cmp
inc
js
push
dec
jne
in
or
fs
add
mov
pop
push
and
or
andb
outsb
push
hlt
out
daa
rclb
push
pop
scas
rcrl
add
sub
fwait
adc
dec
call
roll
cltd
sub
mov
into
push
inc
pop
inc
cli
mov
push
and
and
and
imul
into
cld
jge
loop
test
jnp
and
jmp
test
xchg
into
inc
movsl
ja
pop
jg
lods
adc
mov
dec
std
leave
xor
lock
scas
daa
xchg
outsl
mov
mov
imul
ret
mov
sahf
add
sbb
rcll
cld
pop
sub
ds
lods
pop
loopne
dec
dec
jnp
dec
or
rcr
out
inc
xchg
inc
cmc
push
jmp
inc
cli
inc
xchg
sub
ror
nop
cld
mov
lea
add
jg
mov
in
lahf
flds
mov
fdiv
stc
mov
out
push
jbe
mov
les
mov
mov
repnz
ss
divb
sbb
jp
pop
adc
shlb
sub
cwtl
xlat
xchg
jle
lahf
push
ret
jne
sub
sbb
scas
andl
loopne
std
lds
dec
push
outsb
jbe
add
fidivrl
mov
pop
imul
bound
mov
mov
pusha
lret
inc
psrad
fildll
add
lods
leave
fisttps
nop
jge
test
jg
mov
lret
inc
mov
push
mov
cmp
jmp
inc
mov
add
push
movsl
adc
dec
out
rcrl
xor
and
pop
inc
movsb
test
mov
mov
dec
jae
mov
mov
daa
cltd
jg
mov
je
popa
movb
mov
and
or
sub
add
jno
out
ss
aam
call
jns
cmpsb
cli
jp
xchg
xor
fildl
adc
movsb
cmpsb
dec
out
movsl
or
pushf
jno
shrl
ds
mulb
clc
jo
mov
inc
sub
pop
and
xchg
or
stos
call
push
int
push
es
std
outsb
sub
mov
out
inc
cmp
jne
or
or
sub
test
insb
aas
mov
call
sub
and
bound
inc
mov
dec
jmp
push
sahf
or
cmp
data16
add
sahf
aas
pop
and
rcrl
dec
push
loopne
out
aad
mov
mov
pusha
mov
test
lods
ret
fistpl
sbb
inc
cmp
mov
push
or
out
xor
jno
push
fiaddl
sub
add
dec
outsb
sbb
add
test
adc
push
mov
lahf
cmp
sti
jb
dec
mov
sti
movsl
sub
shr
aaa
add
sub
and
mov
jg
ss
aam
ljmp
xchg
cltd
sahf
mov
pop
bt
data16
xchg
test
mov
int
jno
ljmp
add
add
xchg
test
xor
adc
sbb
fsub
lods
sub
mov
test
push
and
sub
cld
in
inc
int
imul
insl
fs
cld
add
jbe
hlt
ljmp
cwtl
shll
sbb
xchg
repnz
data16
and
insb
dec
fs
and
fdivp
cmp
push
inc
add
or
lret
into
cli
scas
mov
add
fnsave
cmp
sub
lds
xor
fdivp
jno
out
xor
cli
and
mov
and
shrl
testb
push
mov
pop
idiv
test
in
or
cmpsl
jg
mov
jnp,pn
push
cmp
scas
jl
mov
jmp
int3
daa
insl
call
imul
aad
ret
pop
ljmp
mov
mov
lret
repz
ret
cmp
mov
inc
test
push
xchg
jb
dec
fnstenv
out
das
pop
repnz
push
jmp
mov
ror
jecxz
cmp
pop
pop
xchg
pop
dec
mov
out
push
fs
pop
or
inc
mov
decl
sarl
push
sub
jl
xchg
add
lcall
mov
jno
cli
rcrl
lods
je
ja
sub
jmp
push
loopne
enter
dec
push
jmp
pop
cmpl
jge
inc
ss
popa
push
lock
fs
add
test
ds
pushf
dec
inc
mov
push
add
shl
mov
fs
xlat
xor
mov
jo
lret
and
lock
test
les
pop
xor
pusha
fstps
shrb
movsb
mov
mov
push
sbbl
scas
insl
xchg
xor
leave
push
jns
pop
int3
jns
push
daa
pusha
fs
int3
shlb
bound
jecxz
push
inc
fdivrl
pop
in
das
sub
test
xlat
xorps
dec
add
lock
inc
add
fmulp
sub
mul
adc
call
pop
mov
gs
js
clc
mov
cmpsb
imulb
in
add
dec
mov
push
adc
call
aaa
and
cs
pop
fcom
scas
sahf
mov
pop
mov
dec
cmpl
and
bound
push
test
or
cwtl
xor
jle
enter
adc
mov
push
push
lods
inc
adc
negb
jb
fidivrs
add
and
or
cmp
pop
idiv
pop
data16
pop
jle
cmp
pop
mov
push
mov
and
mov
sub
les
arpl
mov
pop
cmp
daa
stos
pushf
mov
mov
ds
lock
jmp
sbb
scas
repnz
jmp
fsubrl
or
cmpsb
je
movsb
pop
xchg
cmpb
stos
push
into
rcll
testl
or
xchg
decl
xorl
fiadds
pop
jl
stos
dec
enter
push
insl
xchg
test
xchg
cltd
sub
adc
loopne
ljmp
xor
add
imul
inc
fdivrs
bnd
stos
or
jg
sub
jbe
adc
addb
repz
cmp
sarl
xor
xchg
cmp
cmpsb
add
cmp
jl
xchg
cmp
mov
adc
popf
lcall
repz
insb
lock
mov
dec
stc
pop
or
in
or
adc
jnp
mov
enter
xchg
sbb
subb
push
jo
sub
not
add
fistl
sar
testl
in
jo
stos
jg
aas
int3
mov
repz
stc
mov
jg
daa
les
jo
jl
mov
je
es
neg
and
xchg
repnz
fdivs
sub
push
push
daa
out
aaa
roll
pop
fldcw
xchg
out
cmc
or
add
add
aad
mov
pcmpgtb
sbb
or
loope
mul
mov
jne
push
inc
orl
adc
imul
cmp
xchg
push
xchg
fs
shrb
xor
pop
mov
aas
adc
inc
sub
inc
test
sub
jo
ds
testb
mov
mov
fnsave
mull
jnp
cmpsl
inc
gs
cmp
iret
inc
sub
mov
std
popa
jmp
out
es
xor
imul
cmp
cmp
lret
out
ret
insl
push
stos
sub
bound
addb
fwait
jb
pushf
xor
push
fucom
xorb
adc
mov
adc
sbb
inc
xor
mov
mov
dec
rorl
xchg
lods
sub
jp
cmp
movsb
mov
adc
jecxz
xor
rcrb
lret
inc
push
sub
push
gs
push
test
push
sarb
sbb
sbb
dec
and
dec
add
push
out
jle
cmp
adc
sub
push
fidivrl
sbb
stc
inc
sbb
and
and
adc
cmp
dec
pop
jno
clc
imul
rolb
sub
outsb
std
mov
mov
iret
adc
cmp
mov
jle
sarl
jg
shlb
adcb
mov
lods
mov
pop
scas
and
mov
xor
les
sbb
jg
pop
mov
repz
sbb
push
mov
mov
aaa
arpl
addl
xor
negb
inc
or
add
mov
mov
mov
cmp
cmp
flds
jbe
dec
add
loopne
push
cmp
lea
xchg
mov
jbe
mov
clc
icebp
xor
inc
in
rcrl
jle
lret
sbb
add
adc
aam
mov
cld
pop
pop
pop
enter
sarb
dec
notl
test
ficoms
movsl
push
xlat
int
cltd
pop
cmc
dec
mov
movsb
or
dec
push
movsb
stos
incl
shlb
cltd
in
mov
dec
mov
nop
call
call
inc
lods
movsb
or
mov
cmpsl
in
faddl
in
inc
sbb
enter
mov
cmpsl
mov
out
xchg
mov
cmp
notl
push
pcmpgtb
dec
and
xor
fucom
pop
mov
popf
cmp
sbb
cmpsl
sbb
jge
mov
xchg
jno
out
aas
out
roll
jecxz
inc
push
xchg
pop
push
sbb
test
add
in
mov
cmp
dec
mov
or
pop
rcll
cmp
xchg
fbld
aam
or
mov
les
addl
rolb
or
adc
daa
repz
push
sti
jb
jae
cmp
cltd
fcomi
lret
shrb
stos
xlat
sbb
dec
movsl
sbb
pop
insb
mov
dec
xor
ret
and
ja
stos
cltd
lock
mov
pop
scas
add
fwait
dec
and
dec
dec
and
xchg
xchg
adc
popa
icebp
fsubrs
into
into
fcoml
xchg
fiadds
or
inc
or
lret
in
add
pop
fcomps
gs
mov
testl
imul
inc
insb
cmp
push
call
mov
cmp
andl
fcomps
lods
mov
fnsave
inc
test
repnz
outsl
mov
inc
xchg
xchg
lea
add
sub
loope
movsb
jnp
mov
or
das
nop
jnp
int3
and
push
dec
lahf
cmp
lock
int
xchg
jmp
xor
aaa
psraw
nop
clc
xor
push
or
xor
push
xchg
jns
lock
rcrl
imul
mov
jle
jb
mov
fcoms
lods
stos
dec
jmp
sub
mov
in
rorb
add
mov
andb
hlt
adc
daa
test
aad
shll
daa
jns
xlat
xor
cwtl
and
ss
fistl
dec
inc
and
fwait
stc
sub
dec
xor
cmpsb
fbld
pop
fistpll
pop
inc
insb
jne
add
scas
adc
movsl
pop
lret
test
notb
pop
je
out
rorl
mov
or
popf
add
cmp
push
add
mov
cltd
test
xor
cmp
and
inc
fldcw
test
iret
jmp
sbb
push
pop
scas
sub
or
out
fsts
pop
sti
fcmovnb
into
jg
scas
mov
push
push
and
lock
int
add
adc
out
and
out
es
inc
jnp
push
sahf
xchg
push
imul
xchg
out
xchg
push
inc
ret
stos
popf
mov
inc
outsl
fstpl
xor
int
neg
and
jno
mov
sbb
mov
aam
and
xchg
push
mov
hlt
jns
cmp
test
pop
stc
imul
sub
and
dec
andl
insb
imul
enter
imul
dec
xchg
loop
jne
int
xchg
ret
dec
xchg
test
imul
arpl
addr16
sahf
jnp
xchg
jle
in
fistpl
pop
cmpsl
jo
dec
hlt
aad
push
or
pop
jno
add
cwtl
ljmp
push
jle
jne
and
and
scas
cld
sbb
pop
cmp
fwait
test
gs
outsl
mov
and
dec
mov
mov
out
mov
das
xor
in
inc
push
dec
lret
sbb
cwtl
or
add
pushf
add
cmp
dec
sbb
jmp
mov
imul
jbe,pn
fcmovbe
movsb
xchg
pop
push
popf
sti
jne
and
js
xor
mov
out
sub
es
test
add
mov
pushf
xchg
std
bound
pop
arpl
adc
cltd
aas
std
std
and
push
inc
js
cmp
adc
xchg
mov
push
pop
jae
mov
xor
sub
iret
ljmp
mov
mov
inc
dec
mov
subl
fs
out
cld
sub
jg
push
imul
cmpsb
and
jne
popf
inc
cmp
popf
das
push
adc
jg
jmp
cmpsl
lods
add
xlat
adc
add
jns
jmp
arpl
and
je
loopne
push
test
je
adc
mov
rorb
mov
mov
ficoml
xchg
pop
lahf
inc
push
inc
in
hlt
cltd
fisubl
mov
sahf
xor
lds
in
lret
mov
aad
sahf
add
jecxz
xlat
jp
cs
add
jno
cwtl
cli
rep
cmp
add
mov
mov
data16
insb
pusha
enter
rolb
jns
fs
push
dec
inc
fisubrs
cmpsb
cmc
lahf
push
fs
cmp
aad
in
fcmovnbe
jmp
push
cmp
jp
popf
mov
xor
fldz
jne
jnp
std
ss
imul
js
ds
sahf
imul
aaa
lock
mov
sahf
xor
sub
sub
fildl
cwtl
xchg
aad
add
cmp
out
stc
pop
orb
cmp
shll
push
and
fists
cmp
dec
dec
push
loope
loopne
ljmp
stos
jmp
outsl
in
inc
ret
push
mov
iret
out
or
mov
pop
nop
mov
into
std
loop
pop
cmp
and
pop
js
insb
mov
test
mov
sbb
xorb
insb
fsubs
je
jae
data16
les
enter
mov
push
jmp
xor
mov
xlat
lods
mov
xor
or
movsb
pop
sbbb
icebp
sub
ficomps
inc
add
jge
jo
xor
xorl
out
adc
aas
xchg
cmpsb
lods
cmp
xchg
enter
pop
xchg
fwait
lods
je
mov
ret
push
int3
jle
mov
scas
enter
cli
leave
cmp
jnp
xchg
mov
xor
sbb
imul
xor
sarb
inc
inc
les
cld
and
cli
rorl
ja
in
dec
mov
insl
push
inc
jle
cmpsb
mov
sbb
lret
cltd
ja
mov
test
loop
loope
vmwrite
negb
xor
inc
inc
lahf
divb
pop
inc
loope
adc
insb
mov
jmp
lcall
in
mov
mov
iret
jne
pop
inc
push
es
or
frstor
cwtl
xchg
jg
cmp
arpl
std
mov
roll
pop
stos
cmp
ss
mov
repnz
push
mov
cld
ret
inc
negb
stc
ss
loop
repz
rep
dec
pop
xor
out
scas
out
sub
icebp
inc
popf
inc
xchg
ret
int3
adc
pop
insb
mov
push
pop
push
insl
ja
xor
jp
pop
jg
stos
pop
dec
pop
in
push
fsubs
sub
sbb
inc
pop
fnclex
lea
mov
aas
push
in
xor
jmp
jmp
lods
adc
cmp
cmp
mov
adc
insl
mov
in
movsb
ds
out
sahf
xchg
pop
dec
or
ret
pop
sbb
jb
pop
xorb
sbb
dec
mov
loopne
xchg
fisttpl
push
incb
pop
rorl
imul
mov
cmpsl
fnstsw
gs
push
and
in
push
xchg
inc
or
mov
fildl
dec
iret
cwtl
daa
mov
jmp
insb
sbb
lds
xor
push
test
es
inc
movsl
xor
sub
sub
fnstenv
jnp
fwait
pop
das
aad
jge
loop
sbb
int3
dec
cmpsb
sbb
xor
in
or
cwtl
push
ret
dec
fwait
bts
push
scas
cli
jle
mov
dec
push
in
ds
hlt
jle
imul
mov
fwait
mov
mov
fmuls
adc
cmp
jno
sbb
adc
lret
popa
imul
add
adc
mov
hlt
pop
fldl
or
xchg
dec
scas
mov
pop
xchg
xchg
rorl
xor
add
mov
aas
dec
push
lock
or
in
jno
sub
rcrb
in
iret
aaa
push
test
cmp
fcoml
pmuludq
xchg
arpl
push
jl
sti
js
add
mov
incb
in
pop
fdiv
ror
nop
sti
mov
cwtl
cmpsb
in
xchg
leave
pop
pop
lret
push
pop
sahf
jbe
in
add
push
movsl
mov
ljmp
mov
mov
cmp
and
push
mov
scas
ror
sbb
push
add
inc
mov
sbb
xchg
repnz
repnz
xor
jne
jbe
xor
mov
cmc
ds
imul
xor
sbb
push
insb
dec
or
into
inc
sbb
mov
stc
mov
sbb
lods
clc
imul
data16
push
nop
inc
aaa
mov
mov
mov
daa
jecxz
outsb
dec
mov
sti
pop
mov
int3
lret
ja
dec
sub
jp
addr16
add
in
or
stc
das
pop
jp
lods
mov
fwait
adc
push
js
pushf
xlat
imul
scas
jbe
clc
movsl
jb
xor
mov
jl
xchg
test
and
xchg
push
in
jns
sahf
idivb
cmp
mov
scas
mov
rclb
in
cld
dec
shll
pop
popf
ljmp
jge
mov
enter
ja
adc
push
clc
fbld
cmpsb
adcb
xor
adc
lods
inc
adc
add
sarb
js
ljmp
pop
push
clc
lcall
mov
pop
xchg
clc
push
and
filds
xor
loope
sbb
inc
jne
bound
sbb
decl
lcall
jns
sbb
pushf
test
or
sbb
jp
stos
stos
pop
int3
lock
fstl
push
idivl
clc
xor
rorl
cltd
inc
pop
stc
inc
iret
add
lcall
mov
stos
xchg
adc
out
ficomps
or
xor
stos
and
pop
lea
nop
orb
push
mov
add
push
stos
sub
xlat
push
ret
cmpl
push
orl
cmp
and
cmc
fsubrs
xchg
xor
lods
lret
push
je
data16
xchg
inc
sub
push
xor
ss
cmp
call
xlat
fiaddl
cmc
add
dec
lods
sti
test
mov
ret
loopne
xchg
test
ss
inc
xchg
cmova
xchg
push
sarl
xchg
das
rol
or
pop
add
cmpsl
jno
mov
aad
pop
lret
movsl
mov
int3
ret
mov
out
popf
enter
mov
sbb
add
inc
add
ljmp
insl
push
push
fcomps
daa
add
xchg
push
dec
int
iret
scas
jnp
xchg
mov
rorb
fildll
es
int3
xor
mov
xchg
sbb
pcmpgtd
ds
fdivrs
adc
add
decl
inc
sub
xor
call
pop
fiadds
push
xchg
rolb
mov
inc
jg
in
mov
sbb
sahf
or
sbb
mov
cmp
cs
imul
sub
in
jnp
cmp
fwait
push
xor
jbe
jp
lods
js
pusha
dec
ror
inc
pop
dec
cltd
sub
gs
lock
cmpsb
jne
outsb
scas
and
sbb
sahf
lahf
dec
mov
outsl
mov
dec
or
cmp
ret
xchg
testb
stc
lahf
das
pop
imul
mov
mov
test
and
cwtl
in
sbb
push
and
xchg
int3
dec
sbb
cs
ret
pop
cmp
pop
mov
xchg
sarb
sahf
ss
ret
mov
adc
or
repnz
rorl
leave
adc
cmp
bound
js
sub
test
dec
fsubrl
repz
pop
or
rcl
fwait
and
mov
andl
shlb
push
cmp
testb
fs
lahf
icebp
lods
inc
inc
lcall
mov
lret
shr
shll
fdivrl
shr
push
mov
xor
cmp
mov
popa
es
sub
sub
mov
mov
inc
fs
push
sbb
adc
ljmp
cmp
fcmovu
sbb
pop
inc
mov
pop
in
gs
jl
dec
mov
ror
fidivrl
cltd
and
push
xchg
scas
pop
jb
outsl
jecxz
cmp
pop
cs
inc
inc
jo
setnp
mov
aad
mov
clts
pop
xchg
mov
in
int
xor
pop
cmp
adc
pop
xor
movsl
in
les
sub
ljmp
out
mov
cmp
mov
sub
adc
pop
insl
and
adc
adc
loop
and
jo
hlt
xor
daa
dec
sub
orb
and
push
adc
mov
cwtl
add
jno
cmpps
inc
pop
ret
dec
jmp
hlt
dec
push
jb
cmp
sbb
out
mov
mov
shl
aad
cmp
out
inc
iret
and
sti
push
cli
cwtl
inc
sahf
mov
lahf
ss
push
cmpsl
inc
js
jle
adc
nop
cwtl
mov
sub
jge
push
sbb
pop
cmp
icebp
xlat
mov
ljmp
fcoms
xor
xchg
mov
cmp
rorl
into
aas
loope
int3
pop
mov
in
xor
mov
xchg
add
dec
popa
std
shll
ljmp
xlat
dec
add
stos
dec
ds
lock
xor
idivb
pop
outsb
add
mov
mov
pop
inc
pop
je
adc
ror
dec
nop
lock
jne
adc
cmp
sbb
lret
icebp
pop
sbb
or
rclb
xchg
stos
sbbl
andb
hlt
imul
mov
xchg
sti
sbb
mov
aas
aaa
jne
leave
aam
mov
adc
jg
cwtl
sbb
in
lea
cmpb
out
aad
outsb
mov
hlt
jp
mov
jnp
cmp
push
scas
cvtdq2ps
lret
mov
inc
mov
lea
xchg
push
inc
cld
clc
add
jecxz
iret
inc
dec
leave
jne
lds
mov
repnz
jle
inc
push
xchg
lahf
jo
inc
mov
dec
inc
add
rcl
test
fdivl
pop
cmpsb
fstpl
fiaddl
aad
movsb
test
frstor
das
pushf
pushf
push
ret
or
sbb
mov
cli
push
dec
ss
xor
fstpt
jge
jb
inc
jns
dec
ds
sub
mov
cli
arpl
mov
and
test
bound
sar
pop
cmp
adc
add
lret
mov
stc
or
add
es
xchg
imul
sbb
push
push
xchg
mov
add
or
ret
leave
fldt
pop
das
orl
out
lods
leave
cmpsl
inc
test
push
addr16
pusha
pushf
int
xor
add
push
sub
adc
and
jmp
xchg
push
scas
jmp
cs
and
jg
lret
imul
punpckhbw
lret
jne
pop
mov
inc
add
add
fmull
frstor
xchg
scas
js
push
ret
jge
es
jo
mov
inc
sub
cmp
stos
andl
mov
fcmovnb
pop
andb
adc
cmp
mov
insb
out
out
ss
jb
fnstsw
dec
jne
sub
add
xlat
stc
fisubs
fs
jmp
gs
push
loope
sbb
mov
and
stos
rorb
mov
jecxz
dec
fisttps
or
mov
pushl
ret
push
jl
in
repz
lods
cmp
mov
fwait
cmp
pusha
mov
mov
rorl
stos
sub
loope
sbbb
dec
test
loope
es
cmp
std
push
cmpsb
or
mov
cwtl
xlat
fisubrs
or
into
data16
jmp
and
inc
aam
mov
jl
push
sub
push
stc
push
sti
mov
inc
data16
fxch
add
adc
sub
fildl
xchg
scas
dec
insl
andl
inc
mov
ljmp
pop
addl
loope
sahf
xor
aas
out
mov
daa
pop
cmp
pushf
lahf
jp
shlb
inc
jmp
jae
cltd
popf
out
adc
add
push
pop
mov
fcoms
adc
ss
cmp
mov
in
stc
pushl
data16
js
loopne
sar
dec
mov
mov
stos
push
das
mov
pop
adcl
mov
pop
adc
inc
jns
in
enter
cmp
scas
mov
mov
cmpsl
enter
mov
xchg
add
int
cmp
cmp
ret
out
and
js
shll
and
cwtl
ret
je
jle
sti
dec
ret
rcll
loop
cmp
inc
aaa
stos
in
leave
jne
test
sub
mov
push
imul
pusha
insl
pop
xor
xor
pop
scas
cmp
scas
pushf
outsb
sub
lock
lock
xor
jle
inc
fsubl
pop
lcall
jge
pop
jp
add
mov
rorb
addr16
jecxz
lcall
rorl
mov
loopne
mov
lahf
sub
push
cmp
and
inc
add
repnz
jge
xlat
sahf
xor
mull
testl
dec
or
in
pop
xchg
in
and
mov
not
jo
adcl
pop
adc
movsb
push
sbb
pushf
rcl
adc
insl
es
cld
mov
shll
hlt
addr16
lret
into
incb
loop
push
jp
ljmp
xor
pop
cmp
sub
cld
sub
andb
mov
movsl
repnz
lock
pop
pop
icebp
jnp
mov
or
fs
add
inc
jge
cmc
add
call
cmp
jl
shrb
insl
xchg
idivb
jae
adc
lods
in
push
mov
sbb
xor
rcrl
fists
jp
mov
xor
sbbb
into
insl
cmc
testb
imul
fnsave
sbb
sahf
cmpsl
adc
imull
push
xchg
mov
aad
mov
mov
push
jns
ss
adc
xor
adc
mov
xor
lahf
ljmp
pop
dec
lret
pop
sti
sbb
add
jmp
push
pop
sarb
push
or
cmp
mov
adcb
fs
lahf
std
adc
dec
fldenv
aaa
add
pop
mov
aad
mov
and
xchg
push
dec
mov
inc
mov
sub
outsl
ret
jl
pop
and
jg
loopne
add
leave
pop
clc
sbb
xlat
xlat
push
stc
mov
xor
jb
or
xor
addr16
lret
in
orl
lret
fst
js
fldt
dec
fmuls
mov
and
mov
xor
mov
sarl
cmp
filds
and
and
daa
push
add
adc
sub
popf
jl
movsl
lret
and
xchg
mov
sub
xchg
xor
pop
test
je
iret
in
insb
xchg
out
into
sub
dec
insb
stos
pop
jge
xor
icebp
repnz
out
and
dec
lret
in
xchg
push
inc
xchg
push
lds
test
and
mov
in
add
out
push
mov
push
inc
or
lret
loopne
add
pop
cmp
sbb
sub
fdiv
mov
jns
push
push
adc
pop
into
mov
fstpl
add
pop
dec
stc
mov
ficompl
stos
push
and
sbb
sbb
add
adc
dec
mov
push
sub
cld
cmp
dec
insl
push
add
das
stos
pop
jae
popa
enter
ds
loope
imul
inc
test
xor
jo
lahf
mov
inc
mov
leave
icebp
mov
add
sbb
dec
lret
mov
popf
cli
leave
mov
lret
jmp
pusha
in
push
sub
and
cmp
pop
sahf
loop
lea
repz
mov
in
aam
lods
daa
stos
adc
push
leave
and
and
mov
xlat
rclb
push
fiaddl
xor
cmp
int
das
out
jnp
inc
sbb
mov
sbb
and
lods
daa
push
out
push
mov
cmp
adc
loope
xchg
dec
cwtl
dec
lret
push
mov
add
stc
imul
mov
movsl
mov
cmp
roll
int
sub
pop
or
fmull
pop
jg
mov
pushl
cld
imul
fucomip
aaa
mov
jl
add
xor
sbb
repnz
call
sbbb
nop
or
sbb
cmc
jno
mov
adc
sbb
ja
mov
mov
mov
mov
movzbl
mov
pop
fcmovne
sub
pop
out
and
mov
test
mov
xchg
xchg
out
push
xor
nop
xor
jae
addr16
pop
orb
xor
pushf
cld
xchg
inc
or
dec
int3
rclb
mov
mov
xor
out
lock
hlt
pop
clc
sbb
sub
cmp
xor
push
insb
arpl
loopne
test
ss
lock
aam
out
dec
dec
imul
xchg
add
pop
inc
movsl
rcll
or
mov
xchg
jns
lds
sahf
dec
dec
lods
jae
add
mov
loop
mov
or
fcmovbe
push
push
std
fbstp
push
adc
repz
or
lods
push
lahf
xor
fcomps
sub
cmp
cmc
push
pushf
addr16
jnp
into
into
mov
xor
into
andb
dec
mov
cmp
jecxz
jns
hlt
inc
aas
dec
jecxz
mov
dec
cmp
mov
mov
mov
pop
xlat
pop
mov
xor
xchg
lret
xchg
ffree
xor
and
stos
arpl
fcoms
xchg
xchg
jp
pop
fisttps
andl
mov
or
popa
out
xchg
int3
sub
imul
lcall
daa
xchg
lds
enter
or
xchg
push
lock
jecxz
call
fisttps
mov
sub
cmc
outsb
pushf
jmp
mov
stos
adc
add
adc
inc
mov
stc
fimull
xchg
xor
jbe
imul
xchg
jl
xor
cmp
leave
in
push
out
in
xchg
pop
jnp
call
mov
sbb
nop
incb
mov
les
loopne
inc
pop
mov
insl
and
xchg
movsl
mov
insb
dec
jmp
int
xchg
push
loopne
or
lock
adc
and
scas
jmp
shrb
jno
iret
insb
push
test
shr
cmp
xchg
call
into
sbb
fisubl
cmpsl
ret
mov
mov
push
jnp
cmp
js
in
push
addb
fstpt
int
cld
pop
sub
filds
sub
push
bswap
imul
loop
push
dec
dec
sbb
push
inc
cs
iret
sbb
mov
push
pusha
iret
outsl
out
mov
rcll
xor
xchg
dec
sub
jg
xlat
imul
popf
fsubrl
fabs
jns
aas
mov
pop
adc
js
cmp
push
addr16
shl
rolb
imul
rclb
imul
div
stc
pusha
jle
sti
mov
sbbl
jl
jp
mov
dec
adc
arpl
fnsave
pop
jno
sub
mov
cmp
js
xor
sbb
sbb
aaa
jg
mov
mov
xchg
mov
je
outsb
jb
out
xchg
lret
push
pop
xlat
push
dec
dec
mov
jbe
mov
fcomi
push
xchg
pushf
pop
push
cmp
fpatan
into
jno
fs
sbb
pop
sub
inc
or
fstl
sub
adc
sarb
xchg
loope
jp
mov
xor
rol
dec
sbb
movsb
mull
repz
in
push
out
rolb
xor
add
out
jg
mov
and
add
adc
rclb
adcl
mov
cwtl
fdivs
xchg
lret
icebp
addb
insl
xor
add
ja
gs
imul
addr16
jg
clc
push
add
pop
cmc
cs
mov
data16
ljmp
das
test
xor
stc
sub
leave
outsb
jae
aam
adc
gs
mov
cmpsl
ret
sbb
and
adc
cmp
adc
cwtl
adc
cmovbe
fbld
mov
adc
and
mov
negb
dec
dec
movsl
add
jnp
lds
inc
and
lahf
sub
sub
jl
mov
dec
add
dec
loop
sub
test
or
cmp
popf
inc
jle
jge
inc
in
rcrl
fmuls
push
lret
xchg
xlat
addr16
adc
mov
outsl
sbb
pop
dec
dec
test
adc
jbe
mov
xchg
stos
mov
out
sbb
call
lods
dec
add
es
push
repnz
loopne
or
lahf
inc
outsb
and
cmc
xchg
inc
mov
shlb
mov
adc
pop
add
fs
inc
into
rcrl
lret
mov
pop
mov
dec
cmp
fs
rcll
into
clc
push
dec
sbb
outsl
or
jae
mov
xlat
dec
loope
sub
lock
and
mov
aas
ret
in
mov
das
sub
xchg
mov
push
xchg
cwtl
mov
lods
xchg
sbb
shlb
mov
fistpll
lock
jns
lret
cmp
out
sub
loop
and
ljmp
xchg
dec
test
adc
call
push
in
test
mov
pop
push
adc
loop
sub
jp
es
insb
xchg
rcrb
shlb
dec
gs
arpl
sub
ret
ret
sbb
out
out
sbb
cmp
xchg
sub
push
icebp
pusha
or
jle
scas
lahf
jle
xchg
dec
pop
movsb
inc
das
dec
movsb
adc
add
inc
loop
ljmp
das
dec
and
push
bound
out
cmp
mov
aam
pop
lods
aad
icebp
add
lahf
in
frstor
bnd
movsb
repnz
loop
test
lcall
loop
pop
xchg
cmc
sbb
pop
mov
mov
jecxz
into
daa
inc
out
inc
xchg
mov
jo
push
jp
sbb
pushf
or
pop
sti
dec
loopne
cmpsl
push
sub
ret
jns
in
int3
mov
movsb
push
int
and
sbb
push
push
inc
out
jge
jnp
jne
or
jns
cmpsb
clc
das
int3
ja
mov
icebp
std
push
push
cmpsl
mov
pop
fsubr
jg
or
xor
push
in
push
xchg
out
js
xor
fiadds
jno
pop
jp
test
jle
jb
push
and
push
inc
adc
or
inc
aas
idivl
push
adc
adc
lods
mov
jne
xorl
xchg
dec
cli
int3
dec
add
rcrl
and
dec
and
inc
inc
filds
cmpsl
and
xchg
mov
lcall
popf
imul
sub
mov
imul
bound
push
mov
cmp
dec
or
add
or
push
add
pusha
cmc
leave
sbb
loopne
out
xchg
fs
ds
pop
sub
shrb
pop
sarl
lcall
negb
ror
in
insb
push
push
dec
ja
int
icebp
hlt
xor
jmp
sub
sub
js
jecxz
xor
push
or
cli
add
pop
dec
pop
out
imul
sahf
test
loop
lret
pop
test
cmp
push
mov
lea
sub
movsl
fildl
push
add
jno
push
fsubs
in
adc
pop
icebp
push
push
push
repnz
outsl
dec
test
scas
jle
cld
pop
pop
repz
into
les
push
ficoml
push
push
add
adc
push
pop
jne
in
mov
lock
xchg
movsb
ss
addr16
fcoms
sbbl
cmp
popf
jns
cmp
inc
mov
aaa
inc
sub
out
imul
shlb
push
xchg
mov
jne
vphadduwq
test
push
inc
push
adc
imul
pop
dec
cmp
sub
data16
and
adc
shrl
jnp
lret
and
lds
mov
and
ret
xchg
fstl
enter
mov
loope
or
push
cs
cmp
sti
fimuls
in
adc
lahf
das
xorb
bound
push
idivl
jmp
pop
mov
mov
xchg
mov
push
sbb
out
jns
scas
jl
mov
xchg
mov
jecxz
add
stos
cmp
nop
pop
lahf
pmulhw
sub
pop
jbe
leave
pop
add
cmp
pop
pop
out
lret
mov
das
mov
cmpsl
pop
fdivr
pop
jl
popf
out
test
push
pop
lock
sub
inc
push
ret
add
int3
inc
jl
fcoml
mov
fs
out
shll
out
pop
sahf
inc
shll
jne
lods
or
lea
xlat
cmp
cld
jg
xchg
cmc
adc
repz
cltd
xchg
mov
adc
push
nop
sbb
arpl
stc
dec
push
out
sub
das
in
jno
mov
cmp
sahf
jecxz
into
daa
scas
nop
xor
xchg
inc
fnsave
scas
push
push
test
inc
ljmp
sub
lock
outsl
lock
xor
test
int3
inc
std
sbb
push
pop
mov
inc
and
jne
or
pop
cmp
jmp
pop
cltd
push
icebp
fistps
insb
sahf
xchg
dec
lahf
rol
push
icebp
repz
imul
jmp
sub
inc
rcrb
bound
roll
jecxz
adc
pop
ds
out
sti
aas
xchg
pop
mov
mov
sbb
movsl
dec
push
xchg
das
add
and
or
add
movsl
pop
dec
push
fstp
lret
hlt
cmp
in
cwtl
pusha
mov
push
ljmp
orl
roll
js
push
add
cmp
push
sbbb
push
lcall
cmp
cmp
fs
fcmovne
and
clc
mov
or
dec
jle
xchg
cmp
pop
call
inc
sbb
dec
sahf
add
jo
pushf
stos
testl
adc
jp
cli
out
mov
and
push
mov
jp
jecxz
dec
cmp
adc
pop
daa
stos
movsl
jno
std
pop
jmp
jnp
icebp
sbb
enter
or
adc
mov
mov
scas
cltd
in
lds
scas
xchg
loopne
adc
insl
pop
pusha
fsubrp
pop
sahf
mov
push
sarl
pop
mov
inc
mov
jmp
imul
pushf
call
inc
scas
scas
add
cmpsl
mov
mov
insl
out
mov
sbb
jbe
or
hlt
ljmp
into
push
xor
jmp
and
mov
arpl
fdivl
lods
aam
aam
xchg
sub
xchg
adc
jnp
movsb
jbe
lock
rorb
cmpsl
aam
sbb
stos
adc
mov
adc
sbb
imul
mov
aaa
cmp
mov
cmpl
or
xchg
xchg
fnstenv
jbe
pop
repnz
mov
and
adcb
adc
ja
sbb
into
int3
xor
sahf
lds
lea
mov
push
and
stc
dec
dec
add
imul
dec
dec
iret
loop
fucomi
adc
mov
inc
dec
push
je
add
clc
testb
popa
fsubrs
in
adc
notb
lods
clc
test
sbb
punpcklwd
dec
and
scas
pop
mov
cld
sti
push
pusha
int
push
imul
outsl
fwait
cltd
jo
pop
lods
nop
jge
int
icebp
ja
dec
pop
sbb
xchg
lret
inc
jne
add
cmp
cmpsb
enter
sub
sbb
insb
repz
mov
mov
cmpsb
pop
jg
inc
fidivs
sbb
xchg
aam
jns
out
lret
pop
pop
jbe
push
push
test
cmpsb
fdivrs
jno
sub
inc
adc
mov
xchg
loop
scas
mov
pop
imul
enter
mov
mov
push
aad
dec
hlt
mov
inc
imul
fisubrl
shrl
mov
ds
xor
ss
rcll
leave
cmpsb
xchg
xchg
clc
inc
aas
inc
fnstenv
sub
cmpsb
test
sub
faddl
lods
sub
mov
mov
pop
and
movsb
mov
mov
imul
pop
aaa
push
das
or
xchg
test
sub
xchg
push
sarb
xchg
enter
push
out
cmp
cwtl
jl
mov
push
cmp
add
call
jne
test
fs
adc
pop
scas
add
inc
idivb
mov
mov
dec
dec
arpl
dec
jnp
ljmp
xor
es
jmp
pop
push
mov
xchg
xchg
in
rep
clc
addr16
stos
push
fdivrs
jne
pop
test
jo
push
out
push
enter
pop
lea
xor
mov
inc
jne
outsl
xor
push
jg
loope
jo
sbb
xchg
pop
inc
aam
xchg
lcall
jecxz
cld
orb
adc
daa
test
xchg
imull
xor
sub
in
test
mov
sti
out
mov
in
push
clc
inc
addr16
mov
jno
movsl
sub
adc
mov
add
dec
sarb
repz
aad
cwtl
decl
jnp
test
cmp
aam
and
jecxz
sbb
sbb
test
lods
insl
mov
jne
mov
pop
lods
jp
cmp
repz
out
inc
loopne
or
push
idivb
jecxz
int3
lods
lods
fiaddl
loope
mov
cmp
in
and
mov
lods
loopne
into
push
xchg
mov
mov
mov
and
out
ror
loopne
call
cltd
cmp
arpl
out
aam
psubb
arpl
xchg
cmc
push
inc
lahf
push
push
adc
dec
imul
scas
pop
test
mov
lahf
pushf
dec
xor
lock
mov
mov
dec
mov
xorl
cli
lret
roll
in
lret
aaa
xchg
sub
or
fsubrs
add
lds
aaa
cltd
mov
add
and
adc
cmp
jbe
and
rclb
inc
test
xchg
cwtl
mov
icebp
mov
sub
mov
aas
lods
sbbl
pop
xor
data16
push
cmp
pop
jmp
jbe
test
shll
xchg
mov
outsb
and
jmp
adc
rep
stos
xor
addl
or
rorl
mov
push
mov
cmovno
movsl
hlt
mov
test
cmpsl
and
pop
sbb
adc
loop
lret
and
mov
push
adc
ljmp
dec
imul
sbb
jne
fimull
cli
decl
call
outsb
jno
fcoml
dec
dec
or
mov
or
adc
jno
dec
push
xor
in
ss
push
push
xchg
xlat
cmp
das
call
and
jbe
jge
inc
test
rorb
sub
or
popf
mov
xchg
push
imul
or
sub
mov
test
xchg
cmp
aaa
inc
add
xor
xchg
xchg
adc
jmp
push
sahf
push
iret
sbb
iret
fstps
lcall
cmp
xchg
out
aam
les
in
in
inc
dec
test
push
jns
mov
xchg
xor
or
lea
mov
loopne
rorl
data16
adc
mov
fwait
les
ficomps
inc
addb
ja
pushf
xor
add
shll
jo
bound
test
add
subl
sub
lods
fiadds
es
adc
fs
dec
mov
and
mov
lods
jmp
mov
sub
rcl
pop
push
pop
cs
aad
in
lret
pop
jmp
mov
sbb
imul
pop
pushf
notb
add
test
and
xchg
jno
out
cmc
stc
push
cmpsl
sbb
add
push
fistps
push
int3
cmpsl
hlt
add
rcl
adc
in
pop
or
scas
and
mov
outsl
mov
test
mov
and
push
movsb
pushl
mov
and
or
sub
dec
pop
aad
fistps
mov
sbb
clc
test
iret
fsts
dec
pop
add
sub
repz
mov
imul
xlat
in
and
stos
and
jmp
out
mov
jnp
push
rorl
out
jle
add
mov
xchg
sbb
int
inc
lock
into
xchg
sbb
jmp
jnp
lds
push
cmp
dec
cli
xchg
jno
dec
int
lahf
cmp
scas
les
add
mov
ret
sub
cld
pusha
mov
jnp
pusha
stc
mov
in
push
clc
pop
jb
lahf
and
sub
mov
out
shrl
add
and
dec
push
mov
repz
sahf
adc
lods
mov
out
xchg
jns
mov
cmp
into
lahf
sbb
inc
jp
insb
adc
pushf
sbb
jp
xor
push
dec
jmp
je
ja
pop
ja
push
outsl
in
dec
repnz
into
pop
test
test
out
das
inc
and
jmp
lock
lock
cmp
inc
scas
sarb
cwtl
jmp
daa
fsubrl
inc
jecxz
add
or
cld
pop
test
adc
and
mov
fstpt
stc
push
fiaddl
ljmp
stos
ror
ficoml
cltd
xchg
sbb
pop
lock
jmp
pop
cmp
enter
lods
add
cmp
test
mov
test
inc
xchg
into
pop
jg
xchg
inc
adc
cmp
xor
jl
pop
arpl
mov
test
push
sbbb
lea
loopne
es
cmpsl
lods
dec
jae
push
pop
test
jg
and
sub
xor
pop
jns
sbb
into
hlt
lea
in
daa
ds
ret
cmp
cld
imul
arpl
fs
mov
lods
mov
cmp
rcll
lods
sub
mov
lods
clc
dec
outsb
stos
jb
leave
popf
or
insl
out
fnsave
inc
sahf
mov
mov
pop
test
ret
push
adc
in
adcb
lret
xor
lds
and
scas
sub
cmpb
fldl2e
call
mov
lret
jo
push
mov
loopne
pop
movsl
xchg
je
jmp
adc
push
xor
dec
lea
pop
fimuls
out
adc
mov
mov
sbb
adc
cmp
rcl
test
jecxz
shlb
push
cmp
gs
shl
inc
mov
jl
xchg
jbe
mov
jl
sub
add
cmpsl
xor
addr16
mov
xor
cs
pop
xchg
cld
jb
adc
mov
mov
sub
mov
mov
cmpsb
cmc
jbe
pop
pop
or
or
popa
int3
test
xchg
popa
aas
subl
dec
mov
sbb
pop
push
fisubl
cltd
loopne
add
inc
aas
lds
lret
push
mov
and
pop
daa
mov
and
lock
lock
out
in
jg
loopne
adc
pushf
dec
fcomps
jbe
jl
and
pop
mov
cmp
cmp
add
imulb
mov
enter
xchg
xchg
push
push
add
adc
dec
in
mov
into
mov
jle
adc
das
popa
inc
imulb
fidivs
add
int
addr16
fmul
or
jnp
and
cltd
mov
jle
pusha
data16
jp
push
mov
pop
loopne
mov
sub
jge
add
lock
leave
adc
stos
dec
and
pop
cld
lea
or
hlt
call
js
cmc
mov
arpl
jnp
lock
pop
adc
sub
ss
imul
cmp
adc
mov
jbe
jmp
cld
push
mov
sbb
shlb
cld
iret
adc
movsb
cmpsb
pop
fdivl
push
inc
lahf
adc
add
push
sub
xlat
dec
jns
push
jo
jp
fnclex
inc
roll
stos
test
adc
mov
test
jmp
inc
inc
ljmp
jle
subl
lea
into
scas
lock
cmpsb
pusha
jge
jo
loop
imul
aas
mov
adc
popa
pop
inc
roll
mov
movsl
test
push
inc
out
nop
in
lcall
mov
les
sbb
inc
dec
mov
icebp
or
sub
push
and
scas
shlb
adc
mov
sarl
and
push
shlb
dec
adc
adc
sti
mov
jp
in
pop
jo
mov
mov
mov
or
orb
or
inc
test
push
aaa
je
xor
inc
cmpsb
push
aas
lds
mov
dec
adc
jbe
sub
cmc
pop
repz
iret
xor
in
jl
sub
out
stc
lea
cmp
mov
add
insl
adc
dec
imul
mov
icebp
or
sti
mov
pop
in
add
mov
jmp
dec
fsubp
inc
data16
loope
mov
jnp
clc
push
ret
movsl
dec
sub
adcb
adc
js
imul
jne
jo
rcrl
inc
jecxz
lcall
adcb
push
push
insl
pushf
ret
add
jg
movsl
and
jmp
sub
scas
arpl
aaa
in
loopne
into
insl
pop
js
fdivrs
mov
mov
ljmp
sahf
fnstenv
jae
cmp
pop
mov
std
mov
adc
stos
enter
fstpl
inc
mov
fadds
and
inc
in
xchg
aad
out
rorl
inc
cmp
dec
adc
push
cmp
xchg
adc
xchg
movsb
repnz
mov
mov
cmpb
lods
sbb
mov
xchg
pop
cmp
pop
or
pop
out
and
scas
inc
pushf
push
aad
imul
bound
adc
aam
ss
xchg
in
pushf
lcall
lret
push
icebp
lods
popa
xor
jg
arpl
iret
cli
mov
je
cmpsl
stos
sub
repz
stc
loop
dec
cmp
cmc
gs
cltd
lret
sub
pop
or
push
mov
add
dec
mov
xor
and
fstl
lcall
decb
imul
ljmp
loope
inc
xchg
xorb
test
cmp
jae
cld
shl
adc
scas
inc
mov
stos
xchg
inc
or
fstl
rol
scas
loop
inc
enter
sbb
jp
iret
cld
mov
pop
xchg
arpl
insl
hlt
jbe
sbb
das
mov
mov
xchg
loop
mov
xchg
enter
mov
xor
enter
lret
int3
push
push
pushf
mov
dec
inc
push
hlt
sbb
ficomps
clc
scas
imul
xchg
bound
xchg
in
popf
das
pop
mov
xchg
rdmsr
sti
in
fs
sahf
adc
prefetchnta
mov
mov
xchg
outsl
mov
push
jns
cltd
cmpl
orl
mov
arpl
fcompl
cmc
pop
rol
pushf
les
xchg
sub
orl
int3
aad
scas
mov
sti
mov
jb
lods
imul
mov
sti
inc
jbe
jmp
sub
mov
in
inc
das
mov
pop
test
or
and
mov
bound
xchg
xchg
mov
xchg
xlat
nop
cs
push
adc
jmp
insl
bound
pop
mov
imul
push
daa
fistps
sub
rolb
jns
sar
daa
push
dec
iret
lds
incb
push
mov
stos
dec
mov
nop
pop
aad
jno
jl
sbb
pop
cmp
ja
scas
jo
cmp
inc
sti
sbb
ret
mov
in
dec
push
and
and
dec
or
test
mov
pop
mov
mov
std
popa
xchg
sahf
mov
shll
shl
push
mov
cmp
out
int
xchg
jl
push
out
mov
xchg
clc
ss
cmovl
in
call
adc
xchg
inc
pop
push
jge
sbb
or
push
or
push
or
mov
mov
out
and
jge
rorb
loopne
popa
dec
jge
mov
aas
mov
mov
mov
sub
mov
jp
inc
sub
and
pop
insb
call
test
cmp
xchg
xor
movsl
js
addl
mov
cmp
mov
cmpsb
push
lret
push
dec
pop
daa
aad
popf
pop
shrb
sbb
xchg
test
out
bound
add
inc
push
jp
outsl
shlb
into
in
iret
push
icebp
push
sub
jo
mov
rcl
xor
mov
cmp
sbb
jbe
dec
and
dec
inc
push
addr16
xor
lahf
mov
jg
fs
xor
stos
cmpb
xor
mov
lret
sar
ja
mov
dec
mov
sub
cmp
mov
pushf
push
jnp
testl
jge
imul
nop
xchg
sbb
test
sti
push
int
rclb
pop
iret
adc
add
mov
std
test
push
add
es
sbb
xchg
ds
pop
mov
test
clc
fbld
jl
inc
jg
bound
stos
loopne
mov
pusha
repz
sub
push
lock
fsts
mov
add
out
jb
cmp
leave
mov
inc
aam
ret
jae
mov
std
jg,pn
push
enter
repz
mov
jg
cld
cmp
frstor
nopl
cmp
out
dec
cmp
clc
clc
xchg
mov
or
addr16
xchg
push
sub
and
fcmovu
enter
test
xchg
inc
pop
stos
mov
divl
sbb
mov
sub
sbbl
ljmp
mov
xchg
cmp
hlt
or
cmp
lahf
push
cli
mov
pop
out
jmp
add
test
arpl
or
pop
mov
push
sub
pop
stc
subl
mov
lock
test
rorb
addb
mov
xchg
pop
aas
jecxz
add
scas
daa
bound
in
sbb
or
insl
pusha
adc
inc
jl
into
mov
ret
adc
adc
push
cmp
dec
stc
lret
ss
aad
js
pop
and
rcll
push
pop
push
test
jge
adc
xchg
push
cli
cmpsl
xchg
in
jns
cmp
or
and
sbb
in
dec
rorb
cmp
rcll
rcll
lret
es
inc
imul
loopne
mov
jno
inc
or
test
test
out
adc
or
xor
or
adc
pop
sbb
into
or
push
movsb
popfw
popf
rorl
movsl
and
lahf
sub
clc
stos
jmp
repnz
fcoms
cmp
dec
in
xchg
xlat
mov
mov
ss
fisttpl
mov
fwait
mov
popf
sbb
stos
lcall
add
push
jns
inc
sbbb
dec
jg
cmc
mov
xor
dec
ja
or
add
pop
xor
fnsave
add
outsl
nop
test
cs
xor
inc
inc
ds
pop
sarb
cs
push
mov
xchg
popf
leave
fdivrl
cmpsb
je
in
es
icebp
push
daa
shrl
test
jge
imul
inc
jl
mov
scas
loop
add
scas
xchg
lock
es
add
xchg
or
jl
push
sti
sti
imul
aam
mov
mov
jbe
mov
pop
cmp
test
and
lahf
xor
dec
rcrl
xor
popf
lods
hlt
loop
outsw
test
jns
fmul
sbb
sbb
jmp
push
lea
cmp
sbb
pusha
ljmp
dec
test
inc
mov
jae
push
sub
nop
movsb
mov
scas
and
fstl
xor
jb
mov
std
adc
ficoms
iret
scas
jg
in
cmc
imul
in
adc
adc
jp
test
mov
outsb
sub
dec
insb
ret
es
insb
sbb
cwtl
push
push
iret
mov
pop
loopne
xor
insl
mov
pusha
ret
cmc
gs
inc
and
xor
push
int3
clc
jg
mov
jae
rcll
data16
xor
popa
push
shrb
imul
loopne
dec
sub
push
ficoml
inc
fs
lods
fld
aam
xor
das
pop
xlat
sub
leave
sarl
push
mov
pushf
sub
loopne
aam
das
dec
enter
dec
lods
or
sbb
test
mov
pop
pop
jnp
andl
sub
ds
inc
enter
bound
insb
push
or
lcall
out
xlat
out
ds
or
lock
mov
mov
ret
stos
xor
mov
dec
jg
rolb
and
lahf
and
mov
or
aad
jp
fcmovb
bound
mov
out
ret
lcall
mov
repz
push
ja
mov
push
pop
lock
arpl
fsubrl
int3
sub
pusha
cs
cmp
mov
fmuls
jbe
adc
hlt
xchg
test
imul
imul
pop
xor
adc
adc
add
add
imul
mov
sub
lret
or
dec
push
adc
pop
mov
jmp
lss
mov
cmpl
into
mov
mov
jp
add
adc
mov
ret
mov
aam
inc
leave
loop
mov
push
dec
addr16
sti
mov
and
iret
pop
mov
lahf
dec
jecxz
adc
fildll
xchg
sbb
mov
repz
xchg
mov
push
sbb
je
out
flds
sahf
insb
jno
mov
sub
cmc
mov
pop
arpl
pop
test
outsb
cmpsl
dec
mov
dec
dec
aam
sub
mov
push
loope
pusha
test
daa
inc
add
imul
pop
pusha
int3
add
pushf
test
push
fnstenv
je
fs
outsl
mov
int3
xchg
push
les
cmpsb
sub
mov
pop
mov
iret
jp
jns
xchg
fimull
push
out
mov
push
movsb
mov
scas
mov
jno
mov
dec
ss
xchg
xor
mov
and
movsl
out
add
jg
fldcw
cmp
movsb
aas
mov
inc
testl
icebp
fadds
push
mov
mov
std
mov
lock
jg
mov
shlb
mov
imul
pop
bound
rorl
mov
mov
sub
adc
push
mov
push
movsb
inc
mov
xchg
add
test
sti
xor
insl
scas
add
inc
testl
sub
sbb
inc
dec
in
dec
loope
push
shlb
test
jmp
repnz
pop
mov
mov
pop
push
jno
mov
inc
filds
test
hlt
fsub
add
inc
jg
fcmovu
test
xchg
mov
adc
mov
adc
lds
lock
push
mov
mov
jb
sub
rol
mov
push
mov
nop
sbb
xchg
mov
mov
or
pop
add
cmp
pop
loopne
dec
dec
add
dec
dec
mov
imul
mov
sub
addr16
aas
jp
filds
scas
pushf
push
rcr
pusha
cmp
mov
mov
nop
mov
gs
outsl
inc
add
test
repnz
ljmp
pop
jg
dec
es
bound
mov
lahf
and
test
inc
or
ret
xchg
mov
mov
dec
or
mov
adc
mov
dec
loope
orl
cmp
pushf
pushf
pop
dec
sub
dec
push
movsl
shr
sub
fimuls
jge
testb
cs
fists
ss
inc
jg
ret
pop
negl
mov
mov
cmp
xor
mov
sbb
bound
mov
inc
aad
std
dec
subb
ja
mov
out
push
aaa
inc
sub
mov
cmp
and
lods
mulb
and
cmp
inc
lahf
xor
mov
cwtl
test
xchg
mov
jge
jge
aaa
fldcw
imul
push
mov
pusha
sub
mov
stc
jno
and
adc
lods
icebp
mov
lock
fstpt
scas
hlt
inc
mov
push
les
popf
jnp
or
fs
aam
push
outsb
cmp
mov
int3
or
inc
mov
dec
pop
lahf
or
sbb
xchg
scas
cmp
jne
jno
mov
fnstsw
mov
imul
leave
pop
leave
ljmp
inc
shrl
lock
std
ficomps
inc
rorb
push
pop
jnp
dec
push
ret
push
aas
je
push
push
xchg
fidivl
inc
jno
daa
add
scas
add
aas
inc
xor
test
ret
ret
push
push
adc
mov
ds
sub
cmp
inc
test
xchg
push
lea
mov
jmp
or
mov
xlat
lds
mov
mov
ja
out
pop
cmpl
sbb
mov
scas
jnp
or
dec
and
sbb
ss
call
pop
roll
push
push
fisubrl
jmp
sbb
lret
clc
and
orb
cmp
dec
decb
mov
lahf
bound
idivl
mov
sub
sub
push
pop
push
push
mov
pop
push
outsb
loopne
es
sub
sahf
in
scas
cmpsb
xor
shlb
or
iret
outsl
mov
mov
adc
das
add
adc
mov
sub
dec
push
mov
lock
sub
std
inc
fcmovne
outsl
xor
dec
dec
add
sbb
jnp
push
dec
xchg
push
cmp
call
cs
fwait
subl
das
push
stos
add
xchg
arpl
mov
subl
arpl
shlb
test
sbb
cmc
fidivs
pop
push
jb
test
movsl
in
lock
adc
outsl
dec
test
ret
jb
xchg
or
call
mov
mov
lock
cmc
popf
aad
stc
ret
jne
mov
jne
lcall
pop
scas
mov
mov
add
and
jmp
idivb
cmpsl
add
cmp
jo
push
repnz
sbb
leave
stc
repnz
sub
mov
push
sbb
in
add
out
inc
cli
xchg
mulb
or
data16
xor
lahf
inc
adc
pop
xchg
sub
fstps
pop
shlb
inc
je
enter
addl
call
decl
call
pop
and
sbb
fstl
lock
in
std
sti
xor
adc
fstps
sbb
aas
adcb
icebp
fstpl
loopne
push
xchg
shll
and
call
adc
bound
mov
push
jge
mov
sbb
fildl
and
adc
in
out
inc
and
adc
testl
and
jns
inc
add
std
sbb
mov
pusha
leave
popa
cmpb
or
and
sub
or
cmc
or
outsl
daa
test
cs
or
mov
mov
mov
and
loop
inc
cmpsb
gs
xchg
push
icebp
inc
icebp
dec
stos
xchg
push
mov
cmp
test
int3
lret
sub
dec
cmp
mov
out
cmc
or
fsubs
nop
cmpsb
out
cwtl
adc
inc
mov
subl
call
je
adc
aad
sbb
xchg
inc
rcrb
in
fistps
cmp
push
push
stc
in
out
inc
xchg
stc
in
shlb
testb
jl
imul
daa
iret
sbb
sbb
rclb
adc
xchg
aaa
fimuls
mov
pushf
xchg
test
imul
ja
mov
outsl
cs
ja
push
mov
addb
push
shll
xchg
xor
add
mov
cmp
mov
mov
and
lds
lods
sub
lret
sbb
bound
gs
dec
fnstenv
pop
ja
into
cmpsb
sahf
sti
push
mov
jbe
adc
nop
mov
push
int3
pop
arpl
add
mov
aam
das
cs
test
bound
adc
imul
aas
adc
loop
adc
or
mov
into
sbb
adc
cmp
pop
and
dec
repnz
fsubrl
mov
jl
xor
mov
inc
jo
inc
ljmp
stos
aaa
fwait
dec
dec
cmpsb
into
push
fisubrl
mov
subb
sub
mov
push
or
insb
stos
fldt
push
jg
clc
mov
pop
js
push
mov
jb
ljmp
sti
sbb
dec
xchg
dec
xor
pop
xor
mov
fidivrl
jecxz
popf
popf
jb
cmp
stos
es
testl
cwtl
xchg
push
mov
add
mov
xchg
adc
xor
movsl
pop
cmp
daa
fmulp
leave
dec
pop
lock
fmulp
testb
repz
pop
xchg
aad
or
add
adc
pop
adc
jle
inc
add
clc
arpl
pop
test
jp
fwait
lods
fiaddl
pop
lock
lea
aam
bound
dec
mov
xor
mov
dec
shr
pusha
inc
aaa
call
and
xor
fisubl
imul
aaa
xor
mov
adc
imul
cwtl
adc
mov
int
adc
sbb
inc
jo
cmp
mov
xor
jge
outsl
sti
insl
adc
pop
std
lds
jb
dec
repz
loop
pop
stc
js
mov
div
sbb
mov
std
fnstsw
mov
add
inc
jp
jbe
push
or
sarb
jl
dec
outsl
mov
cld
cmp
push
mov
mov
cmp
js
sub
mov
pop
jo
dec
addr16
fwait
scas
dec
rcr
loopne
lcall
inc
adc
aaa
mov
add
test
addr16
add
unpckhps
mov
aam
pop
xor
fists
cmpsl
js
scas
in
xchg
idivl
xchg
mov
pop
int
or
pop
jae
inc
rorl
inc
dec
neg
and
pop
cmpsb
test
fistl
ljmp
mov
bound
hlt
lret
add
lods
or
and
and
or
cmp
cwtl
sarb
push
adc
test
and
fadds
lret
rorb
push
add
js
in
fwait
inc
aad
out
pop
das
scas
fisttpl
mov
push
and
push
out
aad
jmp
mov
lahf
lods
sub
inc
aas
xchg
sbb
cmp
jecxz
enter
mov
popa
jle
ret
lret
adc
inc
dec
jl
test
in
int3
out
lods
lea
pop
add
push
in
cmpsb
ljmp
fldl
subb
lods
inc
push
call
push
es
out
in
mov
inc
xor
dec
xchg
or
cmp
aas
pop
arpl
cmp
dec
js
lret
dec
xchg
outsl
das
pop
xorl
xor
push
push
mov
sub
lock
dec
push
enter
std
lcall
jl
fmull
dec
ljmp
cmp
add
rolb
cmp
pop
inc
jb
add
push
mov
dec
icebp
inc
in
fsts
push
mov
mov
mov
pop
dec
lea
fwait
iret
and
sub
popf
fsubl
xor
dec
repz
push
sbb
mov
xchg
arpl
sbb
js
sbb
aad
shlb
jno
mov
movsl
mov
mov
movsb
and
jp
push
dec
ficoml
jg
gs
adc
rolb
mov
inc
jne
scas
sbb
dec
cltd
mov
xchg
dec
loope
push
sub
dec
mov
pop
push
andl
dec
jb
pusha
xor
mov
jno
pop
cmp
cmp
sub
imul
orl
jmp
fwait
ljmp
popa
test
sti
imul
in
cld
mov
mov
cmpsb
out
sub
inc
sbb
mov
xlat
xchg
and
fists
popf
imul
mov
stos
int
cmp
mov
mov
adc
add
cld
xlat
roll
mov
scas
repnz
inc
cmp
decl
xor
mov
ljmp
stos
mov
xchg
in
cmpsb
jb
loope
test
filds
jecxz
insb
outsl
iret
arpl
sub
out
or
mov
mov
mov
aas
cmpsl
pop
lods
ds
xor
daa
xchg
into
shl
dec
mov
xchg
adc
scas
leave
jne
arpl
xor
pushf
mov
push
inc
cmp
pop
pusha
xor
loop
pop
loopne
imul
or
sbb
xchg
pop
insb
ret
movsl
mov
adc
push
mov
jl
pop
popf
adc
mov
push
pop
xor
insl
in
pop
xor
das
push
mov
andb
test
adc
cmc
pop
and
inc
cld
sbb
dec
and
insb
xchg
test
mov
call
dec
cwtl
lock
lods
cmovle
out
nop
add
lret
push
fsubl
divl
insl
aas
mov
into
outsw
push
jle
add
out
roll
sbb
loopne
dec
jne
mov
cmp
mov
in
dec
mov
mov
lcall
pop
outsl
mov
cmc
pop
incl
jbe
testb
push
mov
enter
push
movsb
loop
xchg
pop
lahf
xchg
stos
mov
stc
pop
push
cmp
mov
mov
mov
rcl
xlat
lock
sbb
and
sbb
mov
sub
jg
movsb
addr16
mov
jg
jg,pt
stos
sti
push
fcomip
dec
ret
xchg
clc
xchg
adc
into
insl
mov
hlt
pop
or
lods
push
lods
fcoml
adc
mov
loopne
mov
sbb
mov
js
test
test
or
rcrb
xchg
fxch
inc
adc
std
jg
mov
xor
shl
xchg
jns
jg
arpl
movsl
inc
mov
scas
mov
dec
fsubr
sub
call
into
pop
testl
mov
xor
daa
pop
stc
mov
aam
mov
idiv
mov
push
jo
in
imul
pusha
xchg
ja
shrl
xchg
sahf
lock
lahf
out
dec
push
cltd
shl
andb
jne
sub
inc
mov
les
cmp
sbb
jge
lret
sbb
mov
mov
dec
bound
shll
or
gs
ds
jbe
aam
scas
mov
ret
in
loopne
insb
xorb
cld
xlat
das
divb
jns
fwait
xchg
mov
sub
arpl
xchg
push
jo
scas
mov
fadds
sub
pop
lcall
aam
mov
jns
scas
cmc
enterw
xor
cmpsb
fmull
pop
fsub
int3
into
add
pop
mov
clc
fwait
dec
fcoml
neg
dec
and
adc
fwait
or
or
xchg
fsubp
push
dec
btr
lds
scas
inc
xchg
push
jnp
xor
push
aas
add
pop
addr16
adc
mov
pop
or
mov
insb
xchg
lods
inc
imul
mov
mov
dec
ds
fisubrs
out
push
pop
cmpsl
pop
jmp
adc
fldt
adc
and
jmp
gs
xchg
cmpsb
nop
adc
nop
je
movsl
in
mov
in
inc
adc
push
jne
addr16
and
test
sbb
sti
ja
mov
xchg
sub
fmull
inc
inc
pop
xchg
enter
out
shr
insl
adc
in
push
push
push
cmc
mov
sarl
jns
mov
or
sbb
mov
sysexit
or
sbb
inc
popa
jo
xchg
mov
andl
popf
int
and
or
jbe
adc
mov
or
xor
mov
xchg
inc
aam
push
bnd
jmp
stos
in
mov
mov
cmp
lea
xor
movsl
and
cli
inc
out
and
movsl
sti
prefetch
or
pop
push
and
movntq
cmp
pop
les
adc
push
sbb
js
mov
cmp
lock
fimull
inc
and
add
push
call
pusha
sub
or
notb
push
or
sbb
jle
js
mov
adc
xor
sbb
repnz
mov
xchg
dec
xchg
sub
in
cwtl
loope
jnp
add
adc
dec
ds
sahf
repnz
sti
fs
or
popf
ret
ret
fadds
std
push
and
scas
and
sub
outsb
out
mov
inc
shr
popf
mov
add
lods
jmp
cmp
loope
mov
arpl
xchg
sti
cmpb
insl
push
fdivrs
or
aas
inc
pop
add
mov
outsb
jecxz
or
pop
mov
mov
arpl
out
fdivs
ds
movsl
pop
shl
mov
fwait
adc
int3
into
mov
lods
test
add
out
and
push
movsl
sub
or
cmp
mov
sti
jecxz
shll
sbb
mov
iret
cmp
xchg
testb
rorb
int
jle
push
lea
pop
and
scas
jae
popa
fisubrs
add
out
jbe
or
shlb
mov
mov
jo
fimull
mov
xchg
sarl
push
pop
stc
mov
jmp
xchg
sbb
inc
mov
jmp
mov
cmpsl
adc
outsb
push
dec
mov
jbe
mov
mov
fcmove
rclb
dec
xchg
adc
mov
hlt
mov
mov
cs
shlb
les
xchg
aas
je
cmp
loopne
and
rcrb
arpl
addb
xchg
faddl
outsl
adc
mov
dec
sarl
xchg
mov
sub
cmc
mov
hlt
push
in
shr
pop
mov
lret
lret
lds
int3
mov
rclb
test
sub
aam
out
push
in
addr16
or
insb
mov
dec
mov
aam
sub
xchg
and
imul
cmp
cld
xchg
loopne
clc
xchg
pop
jmp
push
mov
repz
out
in
in
jmp
sbb
loopne
subl
fucomip
pushf
inc
out
adc
ljmp
cltd
enter
push
jecxz
xchg
sahf
push
lds
out
push
push
in
or
mov
ss
push
or
dec
xchg
test
xor
mov
lret
push
cs
aas
dec
push
sbb
push
dec
and
and
mov
pushf
mov
dec
jle
imul
iret
and
test
jbe
shl
jmp
jmp
mov
sub
les
pop
pop
lcall
cmpb
sub
inc
mov
loope
push
sub
pop
and
gs
pop
popf
cmpsl
movsl
in
lock
and
xchg
xor
bound
adc
or
outsb
mov
lret
and
or
add
push
lods
mov
scas
divb
dec
cmp
or
mov
cmc
cmc
cmp
xor
push
lea
xor
xchg
inc
in
std
std
inc
sahf
sarb
mov
adc
sbb
mov
scas
mov
sarl
add
adc
fwait
cs
and
insb
pop
cmpsb
adc
push
push
inc
je
hlt
repz
jmp
int3
xchg
cli
inc
and
mov
mov
jbe
sbb
sub
pop
stc
aas
jg
jo
cld
inc
lds
mov
xchg
sbb
ljmp
xor
jge
cmp
jnp
add
xor
mov
sbb
or
push
mov
mov
les
add
cltd
popf
inc
iret
dec
fsubrs
mov
dec
and
insl
push
movsl
shll
repnz
dec
mov
loopne
insl
into
or
pop
and
sti
imul
xor
jae
psrld
out
scas
or
bnd
push
inc
je
mov
push
aaa
xchg
push
call
arpl
je
aas
mov
jle
stos
addb
cmp
mov
pop
leave
mov
jle
mov
mov
add
adc
rcrl
and
push
aas
ss
ds
in
jg
dec
or
push
call
dec
and
shlb
cwtl
push
jecxz
pop
insb
pop
inc
pop
add
aas
or
sahf
gs
test
sub
ficomps
jb
inc
xor
xchg
jno
fisttpll
sbb
pop
dec
or
adc
jb
ja
sar
lret
mov
rorb
pop
lret
push
mov
dec
pop
and
push
push
out
pop
mov
mov
das
bnd
imul
xchg
cmc
and
lea
xor
adc
xchg
dec
pop
mul
aam
sbb
dec
pop
shlb
mov
in
jmp
or
orb
bound
lods
inc
sbb
mull
cmp
inc
mov
imul
ljmp
clc
xor
add
xchg
shlb
ljmp
xor
shl
test
mov
push
ljmp
fisttpl
insb
ds
pop
js
jb
imul
push
mov
addr16
jmp
mov
xchg
cwtl
dec
cltd
fistl
dec
loop
xor
insb
inc
out
mov
or
lds
add
xchg
jecxz
cmpsb
in
sub
push
mov
andl
outsl
lods
popa
cmc
and
jnp
sti
nop
fdivl
sbb
ret
xor
bound
sbb
adc
xor
pusha
iret
mov
sbb
test
das
stc
xor
insl
mov
pop
inc
xor
insb
not
xchg
outsb
inc
aam
test
mov
mov
and
adc
cmpsl
push
xchg
jo
mov
jne
xchg
leave
jl
sbb
mov
test
lea
hlt
or
inc
ret
cli
inc
mov
xchg
je
mov
stos
std
adc
lahf
jmp
ret
mov
ret
pop
das
xchg
cmpsb
mov
pop
ljmp
mov
mov
sub
fdivrs
scas
shl
pop
popa
or
insl
pop
xchg
sbb
lea
mov
pop
dec
xchg
idiv
shufps
inc
sub
xor
push
daa
xor
sub
push
mov
sahf
arpl
sbb
ljmp
sbb
and
add
daa
mov
xor
jp
jnp
pop
and
inc
std
push
ret
ja
cmp
scas
js
je
dec
hlt
subb
mov
call
sub
push
insl
xor
pop
xchg
mov
cld
adc
fisubrl
dec
mov
sarb
inc
pusha
fsubrl
out
xchg
and
push
adc
pop
ret
xchg
jmp
dec
cmpl
pushf
js
shlb
sbb
and
jecxz
jmp
sbb
mov
fwait
mov
xchg
out
jo
orb
mov
mov
stc
push
sub
test
jmp
xchg
mov
repnz
add
xor
call
mov
cltd
adc
ret
mov
pop
jo
jb
jns
out
push
add
xchg
mov
popf
lock
mov
fcmovnu
pop
mov
scas
inc
pop
and
add
iret
xchg
repnz
mov
and
dec
sbb
jo
mov
fnstsw
push
xchg
push
imul
mov
sbb
push
jns
ret
imul
sahf
dec
mov
jecxz
cmp
cmp
cmp
repnz
fmulp
inc
or
repnz
cltd
or
movsb
jge
lahf
sar
sub
movsl
cwtl
outsl
and
push
xor
popf
adc
popa
lds
addl
aaa
cmp
pop
lods
outsl
cs
pop
clc
ror
fwait
mov
mov
push
sbb
mov
js
les
mov
jo
mov
dec
in
cli
push
inc
and
aas
pop
or
mov
xchg
pop
jg
lcall
cmp
mov
aad
arpl
xchg
scas
mov
test
into
lcall
inc
push
adcb
and
test
jle
scas
adc
test
in
lock
xchg
pop
in
mov
hlt
bound
addl
ffreep
push
pop
sub
push
adc
cmp
shll
test
mov
mov
dec
stos
mov
inc
loop
push
sti
jo
loop
xchg
insl
mov
mov
adc
loope
sbb
rol
jl
dec
mov
mov
ret
sbb
aam
in
test
int
loope
jmp
nop
aam
mov
lea
add
cmpsb
mov
es
and
out
movsb
jno
xchg
jo
inc
inc
dec
pop
inc
jo
cld
mov
icebp
push
add
shll
imul
imul
jnp
dec
push
out
cmpsl
sbb
xchg
sbb
test
mov
jno
mov
push
mov
sub
lret
sbb
sti
icebp
xorl
jb
out
xor
test
sbb
cmpsl
scas
or
cmp
mov
in
aam
cwtl
mov
aaa
mov
int
xchg
pop
or
inc
movsb
lret
paddq
and
pop
nop
xchg
inc
enter
add
mov
jecxz
push
push
mov
inc
mov
jmp
ret
dec
iret
cmp
sbb
xchg
cmp
pop
nop
loopne
lds
xchg
inc
mov
add
dec
test
cmp
push
mov
lahf
pop
lock
sub
and
shrb
cmp
mov
int
stos
mov
scas
inc
or
fs
push
mov
pop
subb
and
and
push
lcall
push
mov
xlat
shrb
mov
ja
and
and
adc
or
and
je
sub
mov
loopne
je
out
outsb
jbe
cmp
and
cwtl
jns
popa
ds
sub
jne
pop
mov
pop
nop
mov
jb
repz
insb
xchg
cld
int3
pop
stc
enter
fists
orb
xchg
lret
mov
pop
rorb
aaa
mov
rorb
fstl
fwait
or
jbe
scas
or
pop
pusha
mov
lahf
aam
sub
xor
sub
xchg
push
cmc
jns
mov
sub
jns
add
shlb
dec
aam
and
pop
outsl
or
jmp
cltd
fwait
push
aaa
xchg
inc
or
das
xchg
inc
mov
and
jne
push
mov
stos
xchg
ja
ja
pop
filds
call
fildll
in
cmp
cmp
in
daa
jnp
sbb
leave
adc
in
out
xor
shlb
sub
das
jg
jmp
into
adc
imul
daa
push
dec
and
pop
xor
push
daa
fiaddl
jmp
cltd
fidivs
mov
popa
aad
sbb
cmp
lret
jns
aaa
lidtl
mov
or
fcoms
push
mov
inc
inc
xchg
or
data16
call
dec
xor
jb
push
push
lret
fucomp
mov
inc
hlt
fcomi
mov
push
mov
movsb
call
fistps
jae
pop
in
adc
cld
fsubr
xor
test
mov
push
pop
jecxz
sub
inc
fstl
pusha
scas
lods
xchg
pop
add
subl
mov
arpl
mov
jb
mov
cmp
dec
fisubl
cs
xchg
add
lods
in
sub
es
inc
pop
lds
aad
test
dec
sti
aam
xor
inc
mov
xor
mov
and
cli
inc
fbld
mov
mov
mov
faddl
jno
les
cmp
and
icebp
aam
loopne
cmc
insb
into
jne
push
fimull
out
ret
jp
and
bound
lahf
jo
jbe
repz
cmp
pop
out
stc
cld
mov
aad
pushl
loop
pop
sti
jg
sbb
test
lods
or
hlt
push
loop
stos
inc
push
ret
and
hlt
lock
gs
loope
leave
sub
pop
mov
stos
cmc
stc
jle
and
mov
call
iret
jecxz
les
imul
adc
mov
mov
pop
out
jnp
into
fistl
and
mov
inc
ficomps
pop
fld1
jecxz
lret
push
mov
xor
idivb
pop
popa
fwait
repnz
sub
push
jge
adc
mov
mov
fnstenv
mov
pop
lds
fucom
xchg
pop
mov
ljmp
stc
mov
clc
popa
rcll
pop
cmp
mov
imulb
mov
stos
mov
mov
sub
shl
jmp
push
inc
popf
or
and
nop
fildl
pop
jle
push
pop
or
aaa
add
or
inc
xchg
adc
aam
add
xor
mov
cli
xchg
adc
mov
enter
mov
mov
notl
outsb
adc
cmc
das
mov
shrb
mov
fmul
inc
push
test
push
jl
loop
shll
mov
push
pop
or
leave
clc
lret
adc
ret
mov
orl
pop
fwait
iret
mov
xchg
sbb
lret
sub
and
mov
xchg
xchg
shrb
pop
pop
lahf
rclb
in
sub
gs
orb
jbe
mov
int
movsb
mov
jp
xchg
std
xor
inc
stc
incb
je
jb
push
sub
mov
xchg
and
scas
lahf
std
enter
sbb
cmp
jl
cltd
xlat
iret
int
or
ret
mov
sahf
rcrl
orb
xor
fs
hlt
cmp
into
cmp
and
sti
sbb
jo
and
inc
ret
dec
mov
jl
into
jge
pop
bound
inc
xchg
cmpsb
int
cmp
push
insb
mov
or
push
in
fdivs
out
xor
std
mov
sbb
lock
fiaddl
mov
mov
lahf
int
mov
leave
sbb
leave
jg
sti
xchg
jbe
lea
jbe
push
mov
ret
bound
sbb
lods
mov
and
loope
fwait
ror
rcr
neg
cli
jnp
xchg
jle
xchg
add
ficomps
sub
and
and
sub
and
xor
sbb
mov
sbb
shr
jno
pop
fldenv
pop
dec
subb
shll
inc
cld
stos
jg
xor
mov
cmp
arpl
xchg
add
inc
mov
cmp
aad
aaa
lret
xchg
sub
test
pusha
sbb
sbb
and
shlb
jl
pop
sti
or
add
bound
mov
ret
repz
xchg
pop
fiadds
dec
popf
dec
xchg
sub
mov
cmpsl
call
in
out
sbb
rolb
aas
mov
xor
sbb
jns
mov
std
mov
sub
fwait
or
or
jo
push
jge
cmp
jle
sub
sbb
push
pop
push
push
mov
jae
jecxz
adc
lock
in
sub
sbb
lcall
in
adc
cmp
iret
das
pop
mov
icebp
fimuls
add
adc
mov
mov
orl
outsb
fucom
adc
sbb
lock
adc
aas
jns
sub
lret
or
jnp
jecxz
xchg
js
dec
and
mov
mov
mov
aas
pop
data16
mov
aam
lret
dec
mov
xor
xor
popa
mov
adc
xchg
rcr
push
pop
ljmp
xchg
cli
adc
sub
sbb
jns
mov
push
mov
das
pop
mov
push
mov
addr16
subb
ljmp
xor
inc
adc
aaa
lret
test
popl
scas
lcall
lahf
pop
xchg
je
aam
cmp
mov
or
xor
push
mov
leave
repnz
divb
jo
mov
xor
clc
xor
addr16
add
jns
jno
lcall
mov
sub
jle
inc
pop
mov
pop
cld
jne
lahf
int
shrb
popa
dec
mov
leave
shlb
ljmp
cwtl
or
inc
scas
call
push
dec
xor
insb
push
mov
fisubs
or
popa
fstpl
in
les
inc
xorb
jns
or
adc
out
xor
add
adc
adc
ljmp
fstpl
jae
cmp
xor
lcall
mov
xchg
sub
rorl
xchg
mov
or
popa
inc
into
pop
and
push
loope
out
and
movsl
pop
aas
xor
out
xchg
fucomp
cmp
mov
cs
cs
mov
inc
test
aas
test
or
cli
cmp
fcmovnu
lods
push
rcr
jae
orl
mov
lods
jb
jnp
popa
push
sub
sti
movsb
mov
inc
lock
push
cmp
into
mov
shlb
lret
adc
enter
bound
jle
mov
andb
jb
add
add
or
pop
std
outsb
dec
pop
data16
xlat
sbb
cmp
scas
ja
pop
fcmovb
stos
mov
cwtl
inc
inc
or
lds
arpl
jb
or
fidivrl
sub
jno
and
sbb
xchg
xchg
adc
bound
jmp
mov
and
mov
inc
jge
inc
je
pop
and
jb
inc
mov
cmp
mov
dec
mov
sbb
push
push
arpl
xchg
mov
int
mov
daa
out
int3
inc
mov
scas
aaa
xchg
lahf
call
and
icebp
lret
gs
outsl
sub
lret
in
sub
dec
jns
pop
jae
sbb
or
shrl
adcb
enter
cmp
dec
test
mov
sbbb
push
movsl
dec
xor
sahf
in
in
int
cmp
cmp
jp
cmp
scas
add
pop
ficomps
lea
mov
xchg
int
push
mov
repz
out
fsubs
out
xchg
loope
xchg
push
jo
push
xchg
mov
mov
mov
sbb
cli
mov
xchg
or
nop
push
test
or
ss
dec
pop
xor
jp
xchg
ja
cmp
jmp
mov
sub
scas
sbb
xchg
adc
mov
push
pop
sub
iret
int
and
cmc
ret
or
inc
pop
xchg
jg
mov
xlat
sbb
mov
sbb
xlat
les
dec
xor
pop
pusha
or
adc
iret
mov
aas
pop
cld
and
incb
pop
dec
push
shl
push
pcmpgtd
lret
fsubs
cmc
fbld
dec
jp
xor
sub
jne
pop
mov
or
jmp
orb
cmp
lret
adc
lret
scas
shll
sub
shlb
daa
outsl
xorb
loop
ja
aaa
adc
pop
loop
mov
mov
cmpsb
and
pop
push
mov
sbb
ficoml
inc
rcll
cmpsb
in
inc
dec
arpl
xchg
pop
popa
or
mov
xor
call
jle
sbb
or
sbb
inc
mov
shl
dec
cs
int3
adc
mov
jmp
in
pop
fstl
das
dec
xlat
sahf
push
ret
mov
mov
push
cmc
ljmp
jmp
stos
adc
repz
jle
push
add
jb
fwait
mov
lods
ja
and
lds
mov
pop
and
fstps
pop
xchg
xchg
cmp
test
sahf
sbb
inc
arpl
cmp
dec
jge
add
xchg
orb
xchg
xor
push
in
cmp
call
mov
cmp
dec
leave
inc
fdivl
imul
xchg
cmp
les
dec
pop
xor
add
push
or
fadds
xlat
filds
cltd
xchg
push
adc
in
shrb
cmp
fistpl
lea
subl
repz
jge
xchg
lcall
cmp
rolb
or
dec
mov
cli
mov
push
jecxz
push
mov
shr
push
xchg
inc
je
cmp
jmp
push
arpl
sbb
in
mov
mov
or
fstpt
mov
loope
inc
jbe
xor
data16
lock
fimuls
dec
into
cmc
jno
cmpsb
stos
jle
shrl
fldl
adc
jp
pop
in
xor
add
pause
cli
inc
xchg
mov
inc
lods
sub
cmpsl
aas
mov
xchg
outsl
cwtl
and
popf
inc
pop
mov
hlt
dec
pushf
hlt
iret
pusha
sbb
sbb
inc
fmuls
sbb
fnstenv
fcmovbe
mov
cmp
inc
xchg
add
jbe
lea
clc
mov
movsl
xchg
out
jae
mov
fcmovu
sti
mov
adc
mov
test
fidivrs
repz
les
push
push
inc
fmuls
fs
lods
xchg
push
push
out
lods
jecxz
xor
mulb
rcrl
add
cmpb
popa
loope
ficompl
ljmp
into
jl
cmp
aad
adc
pop
movsl
gs
aas
dec
fdivs
cmp
pop
push
clc
bndldx
cmp
movsl
rcll
fdivrl
ret
xchg
es
or
mov
mov
or
xor
adc
jno
gs
ficoml
adc
fidivs
xchg
mov
adc
jb
and
ljmp
push
mov
sbb
sarl
gs
xor
subb
jmp
and
mov
adc
mov
xor
mov
sub
out
jbe
iret
xorb
sub
inc
and
bound
leave
jno
mov
push
mov
out
pop
ret
aad
mov
pop
dec
scas
or
adc
dec
mov
enter
add
inc
cmc
pop
sub
pop
mov
xchg
push
int3
sbb
pop
jecxz
xor
xlat
cmpsb
fnstsw
push
into
pop
push
sub
jno
mov
cli
push
hlt
popa
xor
xchg
aad
or
pushf
cmp
insb
out
pop
fimull
je
jle
aad
and
push
lds
push
jo
mov
lds
fsubrl
cmp
cli
lods
push
lods
cmp
rcrl
mov
popf
arpl
cmpsl
call
mov
jnp
aas
push
push
mov
adc
fnstcw
xchg
cmpsl
stos
test
mov
dec
es
add
mov
mov
repnz
aad
push
out
cmp
or
jno
sti
cmp
dec
iret
aas
mov
cli
dec
add
dec
nop
pop
arpl
adc
loope
stos
xchg
mov
es
sbb
jnp
rdmsr
lock
mov
push
push
xor
sub
inc
or
data16
lret
xchg
or
cmc
mov
bound
or
inc
inc
dec
xor
push
out
fisubl
fimull
psubsw
insb
daa
inc
aad
pop
mov
sub
sbb
fildl
ss
outsb
fnstenv
ret
xchg
jle
inc
and
mov
hlt
lret
out
lods
sbb
xlat
dec
cmp
pop
jge
cld
in
push
icebp
roll
sub
push
jg
in
repnz
mov
xchg
mov
test
pop
data16
dec
cmp
repz
lret
mov
call
add
sub
enter
test
sbb
insl
or
test
pop
lcall
loope
rolb
xorb
das
jbe
adc
test
pushf
mov
add
or
adc
jno
mov
lcall
scas
addr16
push
je
loop
arpl
out
jge
push
outsb
push
push
pushf
xchg
fiaddl
insl
adc
mov
add
cmpsl
or
xor
into
jnp
inc
js
ret
ljmp
jecxz
jmp
negl
stos
xchg
sub
pop
push
aaa
fmull
sarl
jl
aaa
in
mov
add
pop
jbe
mov
movsl
mov
sub
xchg
push
mov
push
cmpsb
cmp
or
mov
push
imul
icebp
xor
gs
pop
jp
mul
jae
hlt
xchg
jecxz
dec
xor
cmc
mov
outsl
test
dec
fmul
add
or
push
pop
popl
nop
adc
js
in
loopne
pusha
out
shrl
aam
and
ret
xchg
add
xchg
data16
loopne
inc
in
pop
push
pusha
pop
mov
lret
push
mov
pusha
jae
adc
ret
gs
cld
push
pop
xor
mov
test
mov
dec
cmpl
or
int
xor
dec
sbb
call
jg
xchg
push
push
add
fistl
jg
sbb
pop
ljmp
lret
and
decl
loope
addr16
popw
lds
jge
add
xor
or
sub
mov
sbb
mov
in
mov
jg
adc
arpl
leave
icebp
pop
cmpsl
out
xor
sub
jl
insl
xor
xchg
out
in
test
xorl
and
jns
fisubs
shrb
xchg
out
or
ss
vphaddwd
sahf
xchg
out
mov
cmpb
repz
je
in
xchg
mov
cld
mov
ljmp
xor
inc
push
rcrb
imul
push
push
inc
pop
in
adc
jmp
sbb
mov
pop
mov
daa
pusha
jb
push
je
mov
inc
xor
jne
sub
lcall
lcall
data16
shll
adc
fidivl
lods
inc
lock
dec
movsl
lcall
xchg
sbb
sti
mov
movsl
roll
pop
sbb
gs
insb
add
stc
movsl
push
loopne
testl
popa
mov
enterw
mov
adc
and
fimull
mov
dec
out
popf
idivb
cmp
jno
xchg
xor
sbb
push
in
dec
fwait
scas
mov
test
in
mov
call
pop
nop
leave
shl
pop
movsl
or
pushf
popa
out
mov
ret
arpl
lods
sbb
andb
movsl
jae
or
test
mov
stos
sub
test
mov
lret
inc
jns
sub
notl
pop
pop
sub
mov
leave
cmpsb
daa
outsl
leave
mov
mov
mov
lahf
pushf
pop
jge
or
cli
xor
xor
shrb
test
and
and
mov
push
sahf
int
cmpb
rolb
bound
xchg
js
testl
pusha
xchg
fiaddl
movsb
out
inc
push
mov
dec
cmp
in
and
stos
sbb
data16
push
dec
cmpsb
enter
mov
les
test
xchg
add
cmc
test
inc
jne
mov
or
cli
mov
dec
ficomps
cmpsl
and
gs
lea
push
or
rcr
push
mov
nop
pop
aam
push
mov
push
push
jae
sahf
dec
xchg
push
jb
sub
sub
cmp
xor
clc
cmp
fwait
adc
lock
add
bound
lods
fsubrs
and
icebp
add
mov
out
into
insb
mov
in
fldenv
cld
sbb
js
sub
aam
pusha
push
add
or
mov
iret
xchg
sahf
hlt
jbe
xchg
inc
stos
mov
fsubs
outsl
ret
test
mov
in
fstps
repnz
ret
outsl
fucomp
mov
insl
adc
scas
sbb
mov
mov
jg
dec
xor
subb
jae
jl
aas
fisttps
pop
shll
js
ss
enter
xor
add
inc
xor
jecxz
mov
mov
push
mov
in
pop
gs
xchg
lcall
push
in
scas
mov
rcrl
mov
and
xchg
aad
sti
and
inc
sub
push
pop
pop
js
aas
xor
mov
mov
mov
adc
in
and
int
dec
mov
xor
adcb
inc
push
mov
dec
dec
mov
gs
cltd
aas
sti
sub
xlat
mov
pop
xor
cmp
push
lea
or
aaa
ret
repnz
cmpsl
sub
enter
inc
insl
xchg
sbb
or
push
add
dec
fwait
xor
sbb
xor
cmp
popf
mov
lahf
fisubrs
add
sbb
xor
ja
jecxz
ret
mov
int
lcall
push
mov
xchg
push
dec
adc
in
call
push
mov
sti
jnp
stos
lcall
pop
in
ss
fcmovnu
xor
lods
inc
mov
push
inc
dec
out
gs
pop
roll
push
sahf
or
push
adc
xlat
arpl
scas
jb
jmp
pop
adc
or
jbe
lock
xor
pushf
ljmp
mov
xor
outsl
or
shll
jg
ljmp
jp
clc
xlat
xlat
mov
mov
ljmp
push
test
clc
sbb
pop
or
xorl
loop
pop
test
test
dec
fimuls
hlt
cwtl
je
xchg
outsl
pop
mov
xor
fldenv
or
push
jb
sahf
jae
pop
sti
pop
adc
cmpsl
adc
subl
cmp
cmp
insb
add
neg
divb
sbb
pop
add
int3
xchg
push
add
xchg
cmpsl
inc
adc
in
outsl
ret
imul
inc
push
jg
dec
out
mov
cmp
xor
je
stos
fnstenv
aam
pop
outsl
push
inc
mov
push
and
pop
push
cmp
cltd
ds
pop
xchg
sarl
aam
test
dec
insl
pop
dec
mov
cmpsl
sbb
clc
out
shl
fwait
icebp
push
sbb
cld
incb
mov
add
clc
jecxz
xchg
dec
adc
imulb
cli
sbb
pop
sbb
xlat
shll
push
add
jns
mov
movl
dec
xorb
fistl
scas
or
pop
xchg
stos
or
int3
fidivrs
xor
pop
subb
scas
es
loope
iret
mov
sbb
addr16
sub
push
insl
divl
dec
test
sub
pop
lods
and
pop
in
nop
fwait
inc
aas
fists
xor
mov
mov
loop
and
xor
call
jg
int
dec
cmpsl
pop
sbb
orb
popf
jns
stos
into
inc
push
or
ja
repz
mov
mov
mov
je
shll
push
fsubl
inc
cmp
shlb
adc
ret
pop
ds
sub
pop
pop
jmp
xor
mov
movsl
imul
stos
iret
pop
jmp
stos
xchg
adc
in
jbe
xchg
and
leave
mov
loope
cmpl
popa
sub
pop
xor
inc
aam
adc
sbb
js
fidivs
mov
add
imul
in
jno
fldl
lret
daa
lds
out
sahf
in
notb
ficomps
sbb
push
mov
imul
dec
adc
dec
rcr
xchg
or
stos
cmp
add
cmc
mov
inc
push
add
xor
jae
add
inc
sub
add
aad
sbb
xchg
incb
push
cmpsl
jl
clc
sub
cmp
enter
enter
mov
je
adc
add
movhps
mov
sbb
jp
std
cli
aas
xchg
cmpl
and
push
dec
mov
shrb
or
inc
pop
or
and
xor
mov
cmc
dec
add
xchg
fdivs
shll
jae
pushf
ret
dec
lods
lret
dec
or
mov
or
adc
and
je
aam
lods
add
clc
sbb
jle
mov
sbb
dec
mov
push
repnz
iret
fsubs
pushf
fsubs
fidivrl
pop
inc
fwait
inc
push
outsb
or
popf
js
push
ret
dec
cmpsl
scas
shll
repnz
ret
pop
adc
mov
sub
pop
iret
jo
lahf
test
xchg
dec
xor
mov
cli
out
xor
cs
mov
dec
sub
cmpsl
and
pushf
movsl
xchg
test
orl
stc
sbb
push
mov
xchg
mov
movb
xchg
dec
or
jl
sbb
pop
js
sarl
in
dec
mov
cli
fcomp
push
dec
inc
sbb
ret
shlb
aas
ja
mov
vaddsubpd
movsb
lock
or
and
sahf
popf
fs
popa
jl
addr16
out
mov
dec
je
push
cmp
sub
repz
push
xchg
mov
cs
cmp
sahf
add
push
sbbb
push
cmp
inc
xchg
ficoml
int3
imul
adc
lea
push
addr16
xchg
xor
push
jns
dec
loope
push
or
xchg
loope
or
pop
adc
push
insl
sub
or
push
jle
or
jns
fistpl
mov
jns
mov
mov
jnp
js
lret
fdivl
adc
int
arpl
jmp
lea
add
pop
aam
lods
mov
mov
dec
stc
add
xor
or
inc
pop
icebp
hlt
cld
dec
xchg
lods
int
push
call
into
addr16
in
mov
xchg
mov
xchg
cmp
pop
jmp
lds
jne,pt
test
pusha
imul
dec
inc
jmp
inc
or
pop
cmovl
nop
mov
push
sub
push
rcr
lods
cwtl
xor
cmpsl
sub
jle
mov
mov
mov
daa
ja
mov
movsl
xor
mov
mov
aam
pop
sahf
sarb
and
jb
pop
pop
mov
mov
cmpsb
sbb
and
cmp
jo
insl
mov
sub
push
dec
cmp
test
push
cmc
xor
fdiv
mov
jmp
lds
out
out
les
idivl
cld
sub
push
or
xchg
mov
lret
xchg
jl
jbe
xchg
out
xor
out
mov
xchg
out
xor
fcom
inc
dec
sbb
sti
shll
leave
pushf
fbld
mov
sbb
imul
pop
test
push
lods
mov
test
cmp
push
xor
psrlw
leave
adc
int
incb
jns
jmp
pop
in
ret
jnp
and
xchg
adc
jo
insl
sahf
pushf
cmp
or
in
and
lret
dec
cmp
test
js
add
cwtl
lahf
test
adc
jnp
xchg
mov
add
add
fcmovb
push
bound
hlt
mov
push
cmp
cli
jo
dec
bound
jge
sbbb
out
in
adc
pop
or
sarb
push
movsl
adc
dec
jne
push
sub
enter
dec
mov
insl
or
leave
call
cmp
addb
mov
rcrl
popf
xchg
inc
mov
inc
push
xchg
xor
je
fistps
and
ss
push
out
push
xchg
adc
xchg
jmp
pop
mov
jmp
cltd
xorb
jnp
addl
push
xchg
cli
insb
xor
and
add
push
fs
in
call
fidivrs
or
adc
test
ds
mov
mov
leave
and
fsubl
data16
inc
je
mov
mov
out
inc
jne
stos
and
xchg
mov
stos
mov
mov
daa
pop
dec
pop
fstl
mov
cmp
jg
scas
call
gs
or
mov
repz
call
sub
subb
movsl
mov
xor
adc
cmc
xor
repnz
mov
scas
mov
pushf
mov
shl
mov
mov
stc
cmc
cltd
dec
clc
and
mov
and
stos
xchg
rclb
xor
dec
imulb
lcall
outsl
or
test
mov
cmp
jl
cli
adc
pop
jb
test
rcrl
cmp
pop
sarl
add
cli
push
stos
pop
sub
mov
mov
add
or
dec
and
pop
push
daa
xor
out
imul
jecxz
adc
mov
int
movsb
dec
push
or
sarb
das
sbb
and
loop
add
jne
adcb
lods
pop
rorb
ret
mov
stos
inc
mov
inc
adc
aaa
mov
xor
cwtl
arpl
fdivrp
adc
jp
aas
inc
scas
inc
orb
shl
hlt
or
add
das
fstpt
adc
js
mov
rcll
lret
jo
sub
sbb
lock
inc
jle
imul
xchg
or
jns
rorl
xor
dec
push
lret
stos
pop
movsl
fcmovb
bound
lcall
inc
adc
mov
rcll
sbb
add
adc
pop
nop
loop
scas
int
movsb
testb
aam
ret
or
call
jno
mov
fcom
adc
andl
mov
push
adc
push
jmp
mov
lret
push
xlat
pop
outsl
std
cs
xchg
xchg
adc
rcll
push
mov
fisttpl
mov
xor
inc
xlat
pop
push
cmpl
cwtl
shll
addr16
inc
mov
mov
xlat
imul
roll
and
sub
or
jge
sar
insb
dec
xchg
popa
adc
pop
and
xor
pushf
dec
pop
mov
outsb
dec
out
cli
mov
sub
pop
sbb
pop
push
xor
sub
and
loop
imulb
jge
mov
in
fisttpl
fbstp
stos
jmp
dec
xor
test
xchg
push
cwtl
mov
pop
xchg
adc
dec
sbb
mov
and
popa
repnz
dec
aad
or
ret
dec
pop
jbe
out
int3
sub
repz
adc
cmpsb
add
sbb
shlb
daa
repz
stos
imul
imul
sbb
jl
pushf
movsl
push
addr16
stos
aam
loop
ret
cmp
popa
mov
cmp
das
fadds
in
push
adcl
cmp
out
dec
jo
idivl
nopl
sti
icebp
stos
lds
subb
lods
xor
mov
fstp
mov
inc
cmp
mov
jno
loop
mov
lcall
cmp
or
mov
into
leave
nop
adc
mov
and
aas
add
insl
aam
push
inc
xlat
mov
mov
xor
les
ljmp
test
push
nop
fmuls
mov
and
fcomps
aad
adc
sub
or
jp
fwait
popf
outsb
subl
insb
add
push
sbbl
mov
lods
imul
or
ss
cmp
push
pop
cmp
jecxz
stos
and
rep
cmp
subl
sub
mov
sub
rol
xchg
lret
jb
jle
sub
cmp
adc
stos
stos
mov
jle
xchg
sub
incl
inc
jmp
subl
adc
adc
lock
orl
dec
xor
inc
dec
adc
je
rcr
lds
dec
xchg
clc
adc
jb
mov
jmp
stos
and
inc
xchg
nop
dec
shlb
sub
jnp
cmpsl
adc
rcll
inc
mov
pop
icebp
lock
and
dec
add
and
pop
es
add
xor
mov
push
mov
mov
mov
sbb
addr16
add
stc
sbb
cmc
push
mov
aam
aaa
into
xor
push
inc
add
cld
sub
les
mov
ficoml
sahf
movsl
fistpl
dec
leave
cmp
nop
aas
pop
in
lcall
mov
scas
xor
jle
movsb
xor
mov
adc
xchg
jo
pop
dec
in
jg
and
decb
mov
mov
cli
jb
xchg
in
insb
mov
sub
jle
call
push
test
je
or
cmc
mov
insb
xor
jae
lock
sub
fbstp
lret
cli
js
hlt
lods
jl
stos
ret
fst
sub
sub
xchg
test
push
shll
jmp
mov
lods
pop
cmp
sbb
arpl
sub
adc
movsl
mov
xlat
int
imul
dec
sub
insb
fisubrs
cld
outsl
cli
inc
lea
jg
xlat
pop
loope
xor
rol
movsb
pop
xor
add
jle
scas
cld
and
loope
mov
push
out
aad
jns
repnz
sar
cltd
leave
sbb
cmp
sub
out
pop
mov
fsubl
push
icebp
mov
dec
mov
adc
aaa
xchg
out
mov
dec
test
jne
mov
xor
pop
mov
ljmp
test
xchg
or
mov
mov
xchg
add
push
mov
ljmp
aaa
xor
out
mov
pop
or
pop
jp
call
fldenv
mov
test
mov
jne
lcall
repz
idivl
js
push
jle
jnp
sbb
lods
les
xor
pop
loop
testb
pop
retw
popf
push
mov
mov
push
and
fimuls
and
call
or
inc
cmp
in
scas
ljmp
outsl
movsl
enter
pop
ss
out
sub
out
in
mov
cmp
daa
xchg
into
shll
aaa
push
xchg
xchg
mov
inc
fimuls
andl
sti
es
add
sub
push
rcll
add
andb
in
mov
jp
sub
xchg
imul
sub
pop
cmp
cmp
jnp
sbb
ret
lahf
shl
push
and
out
xchg
inc
xchg
xlat
mov
imul
xor
loopne
lods
mov
fs
sbb
aad
pop
sub
mov
dec
scas
mov
pusha
mov
aas
les
sbb
ljmp
loop
push
dec
les
adc
mov
jecxz
mov
popa
pop
xchg
stc
test
sub
lret
cmp
sub
loop
inc
mov
test
aaa
mov
addr16
inc
rcll
cmp
sbb
addr16
push
inc
mov
mov
sub
sbb
push
jnp
cli
rol
mov
mov
sub
inc
pushf
pop
outsl
lea
inc
sti
cmp
mov
into
ja
cltd
pop
and
lahf
out
sbb
cld
aad
inc
fsubl
out
sbb
lock
mov
pop
mov
sub
std
out
lret
in
mov
mov
adcl
stos
scas
jle
cmp
cmp
push
test
sahf
repz
mov
cltd
stos
inc
lcall
fwait
sub
mov
insb
repnz
fcompl
mov
jae
mov
pop
and
lods
scas
sar
fwait
inc
inc
add
es
movsb
arpl
inc
psubb
inc
sbbb
inc
cmp
adc
in
mov
sti
cltd
push
mov
repz
inc
add
sub
lock
sub
sbb
in
mov
shll
inc
and
popf
mov
out
test
push
jbe
inc
das
loopne
inc
pop
push
xchg
sub
in
jp
and
imul
lcall
push
je
imul
arpl
cmpsb
push
jp
xor
jbe
pop
sub
inc
fmull
push
popa
sbb
adc
andl
jge
rorb
loope
lret
push
xchg
adc
stc
mov
xlat
mov
in
dec
adc
out
mov
mov
push
cmp
push
add
jns
in
pop
inc
add
xor
enter
or
fcmovbe
aaa
scas
popf
popf
sub
pmovmskb
orb
and
jl
aad
dec
sbb
leave
dec
dec
sahf
in
imul
negl
mov
cwtl
mov
mov
sub
icebp
lds
or
or
jnp
xchg
push
dec
mov
movsb
xchg
mov
les
fwait
iret
rcrl
adc
sahf
mov
aam
pop
mov
lods
test
gs
adc
int
jle
mov
mov
into
fs
clc
mov
adc
stc
aad
sbb
dec
sahf
cmp
clc
mov
les
sti
bound
or
xchg
mov
hlt
addr16
and
into
rcr
jp
xchg
cmpl
cmc
shll
pop
jl
xchg
mov
nop
test
pusha
sub
jne
adc
push
push
dec
jns
fisubl
dec
aad
ror
icebp
xchg
inc
cld
cmp
inc
scas
xor
mov
cmp
sbb
push
int
push
adc
jg
or
adc
loopne
ret
jae
es
cmp
dec
jne
insb
mull
mov
xchg
mov
push
pop
imul
shrb
cld
jge
insl
scas
cmc
dec
in
cmp
mov
clc
xlat
adc
mov
popa
insl
mov
gs
pop
lcall
xchg
sub
cmpl
push
enter
test
jg
popa
ss
lods
pop
out
mov
jnp
xchg
std
pop
and
mov
xor
test
jo
lahf
hlt
jecxz
xor
rorb
inc
in
fdivrl
sub
mov
mov
add
in
pop
dec
or
pop
xchg
lret
fcomps
xor
pop
dec
iret
lret
inc
sub
stos
jbe
add
inc
add
push
ja
nop
jns
lcall
cltd
js
mov
cld
hlt
xchg
pand
loopne
int3
stos
ds
sub
fcompl
imul
xor
inc
xchg
xor
mov
mov
sub
aaa
jbe
daa
pop
add
or
mov
sbb
add
mov
xor
int3
fildll
pop
add
or
dec
dec
pushl
outsb
imul
pop
fucom
rcrl
pop
pushf
or
outsb
movsb
shll
mov
aaa
stos
fcmovnbe
push
and
popa
pusha
je
lds
mov
jle
cwtl
mov
push
cwtl
popf
lahf
jae
adc
call
div
test
inc
cmp
in
xchg
add
in
push
iret
lret
mov
pop
add
negl
mov
sub
leave
testb
and
sbb
mov
lcall
and
adc
add
cld
ljmp
ret
push
sub
faddl
cs
ljmp
subb
in
or
ja
aas
xchg
iret
adc
push
mov
dec
daa
aad
movsb
adc
rcrb
add
add
push
add
xchg
add
icebp
jmp
movsl
xorl
ret
scas
stc
jns
dec
push
pop
xchg
jns
aaa
bound
xchg
inc
call
cmp
ljmp
pop
shr
imul
mov
inc
xor
in
shl
sbb
pop
fiaddl
cs
mov
clc
sub
fs
repnz
ret
mov
inc
jae
lods
or
mov
mov
push
out
or
fsubp
or
or
mov
subl
fld
push
mov
mov
rol
movsb
pop
fucomip
int3
pop
dec
sub
popa
xchg
xlat
fstpt
fndisi(8087
addl
lret
lcall
call
jne
adc
add
les
mov
xchg
pop
aad
mov
hlt
addl
xchg
jne
xor
ds
test
rcl
lock
int3
adc
sbb
movsb
sub
sub
inc
cmp
cmp
outsb
daa
push
sbb
je
push
nop
xor
push
jae
test
ljmp
int
jp
nop
into
xor
xchg
fbstp
inc
in
shr
dec
cltd
push
xchg
mov
xchg
popl
stos
cmp
jno
and
insb
cmc
scas
int
adc
je
push
fsubrl
jge
aad
or
cmc
lods
fdivl
jbe
jmp
mov
loop
je
adcl
movsb
int
mov
ret
push
xlat
aam
add
and
cs
scas
in
pop
sbb
push
sbb
imul
sbb
or
mov
add
clc
inc
enter
jae
xchg
cltd
bound
in
xor
testl
insb
inc
ffree
jp
nop
lods
pop
add
xchg
jae
or
das
int
add
inc
ss
enter
adc
push
adc
je
lret
mov
movsl
mov
sbb
arpl
in
test
mov
jecxz
lcall
jb
loop
loop
insl
repz
pop
jecxz
sub
mov
adc
xor
mov
int
sbb
mov
and
jmp
jmp
popa
mov
and
stc
rcrl
push
lds
mov
cs
sbb
cmpsl
gs
dec
jmp
popf
ljmp
sub
fwait
scas
cltd
and
outsb
pop
fidivl
frstor
xchg
test
lea
lea
xchg
push
or
adc
sub
test
cmp
push
repnz
lods
pushf
daa
aam
cmpsb
ja
add
repnz
push
mov
xor
jns
movsb
fs
dec
add
call
jg
fsubrl
mov
bound
jecxz
int
fsubl
add
add
fbld
pop
sub
or
dec
daa
aas
aam
rclb
shl
stos
inc
jnp
mov
cmpsb
addb
sbb
lock
pop
in
jle
lock
pop
pop
xchg
cmp
arpl
sub
cld
and
push
mov
cwtl
clc
test
fldcw
xchg
outsl
inc
movsl
cld
div
sti
mov
outsb
push
cmp
mov
rorb
call
dec
xchg
jle
int
xor
insl
push
or
mov
outsb
cmpsb
frstor
mov
pusha
and
jle
cwtl
xlat
xlat
repnz
in
jne
push
lds
js
xor
lret
mov
sti
jae
add
inc
stos
ret
dec
jp
and
sbb
fs
fnstsw
stc
push
das
push
insb
mov
aaa
testl
in
insb
jne
pop
in
jl
lahf
jp
repz
lods
sbb
popf
unpckhps
push
sub
xchg
jl
adc
jbe
scas
push
outsl
sahf
mov
das
nop
mov
mov
jo
push
push
sti
cmpsb
into
imul
fsubs
mov
sub
mov
push
mov
cmp
imulb
in
sbb
pop
pop
aaa
cmp
dec
mov
arpl
rcll
insb
fs
xchg
popa
andl
xor
fistpll
loop
test
loop
jle
mov
in
repz
icebp
pusha
imul
adc
jnp
add
jge
ljmp
push
push
xor
daa
xchg
orb
fstl
enter
push
lock
pop
dec
not
decl
jns
repnz
xchg
jns
pop
push
loop
add
sbb
fcoms
push
mov
jecxz
out
insb
enter
outsl
clc
push
xchg
mov
jle
cmp
pop
jge
push
sbb
jbe
jg
repz
jbe
or
mov
ret
incb
outsb
mov
xchg
in
push
in
loop
push
pop
daa
or
pop
inc
out
add
push
fisubrl
inc
sbb
lods
jle
pop
push
cmpsl
add
popf
in
ljmp
pusha
push
dec
ljmp
aam
hlt
aaa
shll
repnz
insb
adc
iret
xchg
clc
flds
fdivrl
bound
leave
sbbb
int3
dec
jo
pop
mov
mov
iret
lods
sub
inc
push
movsl
or
iret
pushf
int3
or
cmpsl
mov
lcall
and
loop
jae
fsubrp
pop
cli
mov
sub
push
jnp
stos
pop
cmp
aas
dec
out
je
xor
add
outsl
je
out
into
in
lods
xor
jnp
jge
test
movsl
sahf
cs
inc
dec
shlb
mov
test
jle
aas
mov
mov
mov
js
pop
pusha
mov
out
dec
sahf
xchg
out
sub
mov
inc
xor
mov
inc
push
mov
clc
mov
movzwl
fwait
sbb
and
push
inc
sub
pushf
fcmovne
mov
out
das
clc
sti
pop
not
push
cs
pop
gs
and
add
call
pop
dec
mov
popf
dec
aad
jno
dec
adc
sub
js
mov
pop
cmp
fstpl
cmpsl
fisubs
bound
in
push
mov
mov
dec
cwtl
mov
mov
pop
das
ret
popf
out
jmp
and
in
out
adc
add
ds
mov
out
mov
std
in
loopne
jecxz
fnsave
jbe
arpl
mov
fldenv
ret
sub
pop
dec
and
hlt
stos
rclb
and
fnstenv
mull
inc
nop
mov
or
mov
mov
call
std
cwtl
mov
fs
add
aas
loop
les
xor
add
push
in
and
add
dec
pop
loop
fdivrp
dec
je
xor
push
push
cmp
aas
fsts
jbe
mov
push
cmpsl
dec
jge
mov
pop
hlt
jo
and
iret
cmpsb
sub
add
shl
sbb
dec
rorb
xor
mov
xchg
adc
cld
sbb
lret
mov
scas
push
js
fcomps
arpl
arpl
adc
rolb
inc
jl
call
into
xchg
inc
xor
cwtl
mov
xchg
loopne
or
xorb
pop
jne
cmp
jnp
imul
sub
sti
mov
movsb
dec
pop
push
mov
xor
push
lea
hlt
mov
lea
xor
push
rolb
inc
cli
jo,pt
inc
mov
dec
shlb
insl
out
mov
insl
adc
sub
call
cmp
dec
jnp
add
cs
notl
xchg
jo
addr16
sbb
lret
or
aad
data16
dec
loopne
mov
cmp
pushf
scas
pop
out
pop
sbb
ljmp
inc
adc
out
in
jl
inc
push
dec
pop
mov
lock
insb
call
ret
jnp
repnz
dec
fs
mov
pop
sbb
push
ficomps
pop
orl
test
inc
dec
xor
stc
cmp
es
jnp
add
sahf
pop
aaa
aam
ljmp
cmpsb
insl
nop
pop
rcrl
cs
inc
mov
adc
inc
lods
rcl
shlw
movsl
shlb
jl
jp
cmp
mov
cmp
daa
mov
js
daa
inc
push
add
mov
enter
mov
add
xor
cmpsl
mov
out
fdivrl
mov
into
fdivs
outsb
aam
imul
adc
fistl
stc
xchg
lods
fsubr
jmp
fadd
mov
xchg
popa
add
je
lods
sbb
push
out
mov
mov
cmpsl
sbb
in
iret
mov
xor
leave
call
sti
add
iret
mov
mov
and
inc
dec
jbe
xchg
xchg
mov
andl
mov
cmpsl
mov
insb
mov
pop
cli
and
insb
scas
jne
lret
scas
sub
rolb
mov
rcrb
add
sub
lock
in
sub
jne
cwtl
jns
in
sti
movsb
shrb
outsb
dec
add
leave
test
or
cli
push
inc
push
adc
cmp
cmp
outsb
inc
mov
xchg
or
or
imul
push
push
lods
pushf
test
sahf
push
popa
jge
insl
pop
cmc
test
lcall
dec
push
out
dec
in
cld
mov
xchg
pop
stc
and
cmpsb
fdivl
cli
lcall
into
cmp
insb
loope
inc
pop
or
sub
or
pop
dec
and
call
xor
mov
sbb
js
xor
and
cmp
push
int3
push
cmp
dec
jns
jnp
mov
cmp
movlps
jno
mov
jp
sub
jecxz
in
jnp
ljmp
and
sahf
mov
adcl
inc
inc
shl
pop
dec
stc
pop
shlb
iret
cmpsb
xor
jnp
inc
jae
jle
sub
loope
ja
lea
mov
rolb
mov
mov
inc
adc
popa
jmp
scas
das
inc
cmp
sub
fwait
and
daa
jnp
mov
add
mov
mov
mov
jne
mov
push
ss
xchg
aam
lea
icebp
pop
cmp
mov
sbb
dec
push
mov
das
out
pop
jge
rorl
mov
cwtl
jge
cmpsb
nop
add
sbb
int3
cmpsb
and
fsub
xorb
test
cmp
xlat
sub
ficoml
push
cltd
cmpsb
pop
outsb
jge
pop
rcr
pop
mov
daa
in
pop
cs
push
or
test
cmc
sub
mov
and
movsl
pop
aas
xor
mov
sub
add
cli
subl
inc
leave
mov
jnp
mov
shrb
test
push
xchg
mov
movsb
push
stos
sbbl
ret
in
mov
lret
outsl
mov
fstp
popf
or
mov
fmul
dec
loop
mov
xlat
shlb
sahf
xchg
sahf
pushf
mov
sub
aam
rcll
push
cmp
add
sbb
sti
or
cs
and
mov
push
lahf
gs
stos
icebp
cli
movb
push
popa
fwait
and
mov
sbb
lods
imul
add
adc
cltd
ret
cmpsb
or
xor
lock
icebp
icebp
pusha
in
jle
mov
out
test
test
int3
jecxz
sub
push
movsl
sbb
dec
push
mov
push
dec
out
subl
out
mov
pusha
xor
cld
sbbb
cwtl
pop
lahf
cli
add
repz
mov
inc
mov
mov
push
mov
out
sub
sub
stos
sti
mov
faddl
data16
loop
dec
sti
xor
cmpsl
mov
pop
inc
mov
imul
outsl
jne
dec
cld
and
pop
xor
inc
in
add
sub
pop
xchg
sub
sbb
int3
inc
sub
fadds
dec
inc
stos
daa
shr
push
mov
idivb
mov
inc
sti
stos
dec
hlt
inc
mov
lret
push
and
sahf
lahf
cmp
sbb
push
std
jmp
dec
testb
aam
mov
out
pop
icebp
pop
pushf
shr
xor
call
mov
scas
sub
cmpsl
lea
fimuls
push
in
lods
mov
js
or
ret
out
sub
cmpsb
cmp
add
mov
rcr
pop
faddp
sub
shrb
ret
fisttpl
sti
rcll
jecxz
aad
outsb
jmp
dec
mov
hlt
dec
test
add
fcompl
fimull
adc
adc
std
call
cmp
xor
in
mov
cwtl
jae
mov
sub
fwait
inc
push
in
aam
xlat
test
xchg
out
fnstcw
imul
or
adc
mov
stos
test
jmp
jp
js
aas
into
push
and
sub
popf
inc
pop
and
fidivrs
jno
adcl
ret
jne
add
push
jge
mov
leave
push
aad
sahf
ret
jb
sub
add
sbb
shr
jne
dec
fcmovu
pop
sbb
xor
push
jne
arpl
js
lahf
push
adc
lods
test
jbe
lds
shrb
lods
movsb
xor
sti
int
xor
or
sub
aad
out
in
cmp
shll
ret
mov
xor
lds
fsts
ret
gs
xchg
mov
mov
push
int3
andb
sbb
inc
daa
and
test
ss
movsl
sbb
imul
ljmp
cmpsb
in
ret
push
test
inc
mov
icebp
je
daa
push
cltd
sbb
pop
arpl
jae
std
ficoms
or
pop
cld
and
pop
cld
mov
pop
lock
ds
or
fmuls
cmpsb
jne
push
imul
outsl
mov
fs
movsl
xor
or
nop
mov
add
fcomp
ljmp
das
movsl
test
xor
adcl
movsl
es
xlat
inc
scas
push
hlt
xor
pop
dec
movsb
and
sbb
xchg
mov
enter
xor
cmc
in
insb
pushf
lahf
stos
dec
cmp
out
into
testl
rcr
mov
cmc
pop
jmp
xor
ja
mov
sbb
je
paddsw
pop
xchg
inc
mov
testl
jae
xor
inc
jecxz
xchg
leave
mov
mov
mov
addr16
lahf
cmp
sbbl
out
fstpt
adc
popf
pop
in
push
hlt
xorl
stos
repnz
outsb
cmp
mov
out
out
sub
pushf
adc
jb
fdiv
lcall
into
loope
mov
testb
and
in
leave
xchg
stos
cmp
jl
pop
or
loope
push
add
std
push
loope
mov
stc
cmc
push
bound
cmp
clts
jb
add
popf
push
xchg
fs
dec
jle
enter
and
lea
sbb
bound
pop
mov
flds
movsb
ret
jge
idivl
and
test
adc
dec
js
rcrb
add
sbb
fistpll
push
adc
iret
inc
fwait
mov
shll
xchg
fcmovnu
arpl
inc
dec
push
dec
and
pushf
adc
cmp
lds
pop
dec
inc
addr16
out
iret
cld
aad
sbb
ret
inc
mov
pop
fdivs
imul
ror
test
jns
insl
dec
xchg
push
jle
sarl
xchg
mov
jge
xchg
adc
lcall
pop
mov
out
dec
dec
jae
ja
inc
xlat
int3
xchg
dec
into
mov
xor
adcl
movsl
mov
mov
push
lock
push
jb
mov
es
dec
test
mov
sbbl
adc
add
fs
mov
jns
call
sbbl
pop
popl
adc
mov
pop
lea
push
fwait
pop
cli
cmc
add
sbb
cltd
scas
es
sub
je
lret
push
out
jno
mulb
and
and
xor
sar
sbb
sub
pop
xor
xorl
shrl
jno
sub
adc
fidivl
in
addr16
push
dec
mov
out
loopne
pop
movsl
mov
push
or
pop
lret
out
int
or
fwait
ja
lea
cmp
clc
push
in
lret
jmp
stos
leave
dec
sbb
cmc
mov
orl
std
pop
sti
andb
push
xchg
pop
in
ljmp
xchg
aam
push
mov
addr16
xor
add
in
outsl
cmp
mov
jbe
add
popa
outsb
fsts
or
call
push
mov
pop
pop
mov
movsb
insl
loope
enter
sbb
mov
cmp
mov
shr
jmp
pop
inc
cmpsb
repz
jg
cmpsb
repz
fbld
scas
dec
sbb
adc
push
pop
dec
popf
fwait
jns
xlat
adc
xlat
stos
xchg
sbb
ret
and
jmp
ds
sbb
out
divb
rorb
cmc
dec
dec
mov
sub
outsb
loop
das
jecxz
add
pop
push
xor
xchg
pusha
sbb
in
clc
mov
mov
mov
sub
mov
insl
add
int
or
adc
popf
cmp
cmp
or
xchg
aaa
push
je
or
push
pop
inc
lea
mov
and
cmp
mov
pop
addb
setae
ret
sub
loope
xlat
xchg
xchg
in
mov
inc
xor
mov
iret
js
scas
bound
sbb
pop
mov
push
mov
mov
and
cmpsl
pop
mov
in
mov
push
pop
mov
add
out
cld
add
pushf
sbb
pop
lods
jmp
jle
mov
sub
aad
fcomps
sysret
out
and
movl
xor
insb
into
mov
add
jae
ljmp
xchg
add
testl
mov
cli
mov
mov
aas
xor
lock
insb
mov
xchg
jl
fcmovbe
dec
je
add
pop
lcall
mov
fidivrl
in
stos
add
mov
movsl
dec
int3
pop
dec
jge
insl
addr16
lds
sub
lcall
adc
adc
push
push
test
test
push
sahf
cmc
mov
sub
pop
cmc
xlat
add
or
cmpsl
jnp
test
popf
pop
or
jle
jno
xchg
or
in
mov
fxch
fwait
into
test
in
sub
leave
adc
and
pushf
pop
scas
pop
pusha
pop
mov
pop
insb
inc
inc
lods
lahf
cld
stc
das
shl
lret
mov
stos
or
test
and
jge
mov
fcoml
mov
fdivrl
vcvtss2si
mov
push
call
in
cmp
pop
cmpsb
aas
jne
or
mov
jbe
stc
ljmp
add
popf
inc
rolb
mov
mov
mov
xor
ja
push
inc
loope
jns
lahf
and
sub
cmp
ljmp
pop
es
movsb
std
in
push
scas
scas
xchg
sub
fstl
clc
cli
fbstp
movsl
adc
mov
mov
jne
lea
test
sub
andb
and
xchg
shll
and
xor
loope
int3
imul
or
jno
mov
cwtl
imul
xlat
fstl
sub
into
add
or
dec
adc
std
and
mov
pop
xchg
adc
inc
rcll
sbb
addr16
and
addl
scas
cld
xchg
repnz
inc
cmc
adc
sbb
imul
adc
int3
and
loope,pn
inc
mov
pop
test
dec
call
cmp
jge
or
stc
icebp
jno
mov
xlat
sub
loop
and
inc
inc
sbb
xchg
outsb
jl
fisttps
popa
inc
loopne
pop
aas
or
cmpsb
fnsave
push
icebp
loop
cmpsb
pop
sbb
cmp
repnz
jno
bound
fabs
outsb
pop
cmp
adc
mov
test
rcll
dec
jle
xor
pop
ret
push
pop
ret
sub
inc
loope
mov
mov
imul
push
mov
mov
cld
mov
stos
cwtl
hlt
fs
xchg
push
fisttps
rcrb
fimuls
or
xor
fwait
adc
out
hlt
mov
sbb
popaw
loopne
out
inc
add
or
int
insl
stos
cmp
mov
push
cmp
lds
call
dec
xchg
jb
inc
aam
xor
popa
xor
jne
es
cmpsl
addb
loope
mov
pop
mov
jb
jno
icebp
pop
in
xchg
insb
jnp
into
dec
sbb
xlat
mov
in
add
sub
jge
pop
int
es
stos
sub
test
mov
nop
mov
test
ljmp
iret
in
sbb
inc
in
loopne
lods
jnp
push
xchg
aam
rcrb
stos
sbb
jb
pop
mov
push
bnd
xchg
mov
out
mov
clc
pop
lds
addr16
inc
mov
mov
dec
xor
aad
inc
mov
iret
cmp
sub
cld
pop
rorb
mov
jp
push
mov
aas
int
ja
sbb
sub
ficomps
add
pop
test
push
cmp
dec
cmp
cli
inc
std
test
andb
push
aaa
mov
lahf
mov
inc
jnp
sbb
loop
add
dec
jp
nop
ja
cmp
dec
imul
pop
gs
jecxz
add
jb
push
or
into
jmp
lret
je
jno
jbe
dec
out
cmc
ret
add
or
or
push
mov
sbb
sub
sbb
movsl
xor
mov
je
hlt
mov
or
js
pop
mov
es
or
cs
popa
xor
in
cmp
mov
out
fs
add
xor
cmpsl
js
push
sbb
xlat
mov
xlat
out
leave
and
mov
xor
data16
in
sbb
and
add
stos
adc
jg
jnp
pop
imull
add
inc
xor
insl
cmpsb
jo
inc
jo
daa
movsb
jnp
bound
jb
adc
fldt
xor
xchg
mov
mov
mov
adc
mov
nop
jmp
iret
or
jbe
call
jb
inc
dec
mov
mov
rcr
jne
pop
push
xchg
push
out
call
int
mov
mov
cmp
scas
push
sub
lcall
stc
jle
sub
cmp
mov
pop
inc
mov
popa
movsb
cmp
push
adc
decl
roll
mov
dec
inc
int
add
sbb
loope
out
lods
pop
pop
pushl
shlb
jno
mov
pushf
repnz
fsts
movsl
popf
and
push
pop
xlat
mov
test
fildll
testl
adc
aam
jge
test
push
xchg
outsb
push
cmp
leave
mov
cmp
pop
jno
mov
mov
dec
lcall
jg
xchg
sti
push
mov
mov
xorb
push
sub
jge
mov
inc
cwtl
cmp
rorb
push
dec
stc
dec
sbb
fistpll
sbb
pop
jmp
cmp
lock
aas
ljmp
test
pop
dec
fcmovnb
mov
push
mov
sarb
dec
loopne
and
and
xchg
add
lret
mov
sbb
push
add
push
loopne
shlb
pop
jmp
loop
xlat
xlat
inc
sahf
mov
sbb
dec
movsb
sub
and
mov
xor
add
dec
aaa
xor
std
cmp
dec
repz
repz
aam
xchg
das
xchg
mov
test
cmc
stc
inc
mov
jbe
lock
cmpsb
lods
mov
cmp
mull
imul
add
iret
push
icebp
arpl
dec
imul
sub
xchg
ror
call
imul
into
adc
ret
ret
fists
fbstp
sub
lock
push
push
mov
cmp
add
xchg
adc
mov
mov
mov
pop
bound
mov
out
outsl
jb
subb
cmpl
std
xor
fcmovne
stos
in
mov
and
inc
hlt
adcl
jnp
sub
mov
or
std
or
decl
jmp
xlat
mov
loop
and
call
xor
lret
cli
jle
add
jb
cmc
inc
xchg
add
pop
mov
cld
dec
cwtl
pop
pusha
adc
ja
int
xchg
adcb
movsl
cmp
fstps
xchg
in
iret
xchg
add
inc
mov
outsb
call
enter
mov
cmc
pop
jle
mov
insl
ret
ss
cmpsl
or
mov
and
sub
xor
dec
int3
pusha
mov
loopne
jecxz
cs
xor
shrb
aad
inc
fbld
lds
xchg
rorb
mov
stos
dec
mov
jg
stc
cmc
jmp
adc
jae
jbe
jmp
mov
lods
jb
jecxz
pop
in
repz
mov
dec
test
sbb
mov
mov
insb
jp
cld
out
movsl
jle
cli
imul
dec
scas
adc
adc
jmp
inc
xor
mov
dec
ljmp
xchg
rclb
sbb
cwtl
lret
cmp
and
cld
pop
pop
lock
push
scas
push
sti
jg
stos
and
pop
push
scas
gs
xchg
iret
mov
xchg
std
sarl
push
lock
inc
jns
jbe
inc
int3
fisubs
mulb
pop
mov
shll
dec
jle
insl
sbb
add
cmpsl
fwait
inc
int
dec
es
xchg
int3
jp
or
stc
bound
cmc
adc
out
shl
mov
adc
push
mov
pop
inc
scas
sub
inc
pop
push
cmpsl
stos
rcll
cmpsl
sub
cmp
in
and
xlat
xchg
inc
int3
xchg
call
fisttpll
mov
in
sub
ret
fs
cmpsb
gs
jp
bound
push
mov
adc
stc
or
insl
jno
jle
jle
fwait
add
sbb
push
pop
jb
pop
pushf
das
ret
stc
mov
pop
xor
sbb
hlt
arpl
pop
into
ds
lahf
mov
sub
jp
dec
lahf
out
xor
mov
sahf
or
lods
loope
and
cmp
adc
cli
push
stos
or
cmpsl
les
dec
sbb
xchg
jbe
mov
in
xchg
cmp
sbb
jns
shr
loop
cmpsb
or
ret
jecxz
mov
add
fldl
loopne
xchg
movsb
lock
jo
and
and
jp
lds
pop
push
sbb
or
ret
outsb
and
int3
in
out
sbb
jp
or
fbld
icebp
out
cmc
pushf
pop
cmp
push
mov
push
jmp
mov
mov
inc
sub
lds
int
push
add
incl
add
inc
dec
dec
xor
pop
fbld
push
jno
mov
mov
inc
addr16
push
inc
mov
adc
js
cmp
call
notl
pop
jecxz
call
mov
loop
call
pop
xchg
mov
xlat
into
rorb
inc
or
jne
das
sub
xchg
mov
call
mov
mov
jae
iret
test
mov
add
pushl
fiadds
adc
xchg
mov
pushf
aam
mov
xchg
lret
mov
xchg
scas
mov
mov
ret
fisubrl
add
outsb
jnp
lods
incb
leave
loope
jb
push
xchg
out
aam
ds
div
bound
or
cmpsb
dec
popa
aam
lahf
xchg
lret
xchg
jbe
sbb
daa
add
sets
fs
xor
test
ljmp
stos
and
fwait
out
cmp
xlat
mov
popa
sub
push
incl
adc
mov
add
mov
pop
adc
jp
cmp
mov
push
shrb
mov
enter
movsb
or
sahf
dec
fdivl
fistpl
adc
xlat
push
int3
adc
mov
inc
les
add
out
mov
inc
clc
ret
das
cmpsb
fsubs
call
test
je
push
lock
mov
xchg
or
stos
mov
mov
fcomps
or
cmp
inc
ud1
or
sahf
ret
xchg
pop
xor
xor
andl
in
jle
jnp
pop
jp
push
out
imul
out
mov
imul
xchg
fnstcw
add
sbb
loope
and
into
dec
sbb
stos
daa
push
xlat
cmpsl
int
shl
rcr
stos
xchg
or
fcoms
pop
lcall
lcall
aad
push
rorb
ljmp
mov
pop
std
jno
stos
pop
mov
dec
sub
mov
ja
imul
add
imul
adc
inc
mov
xor
cmpsl
lea
lret
fidivl
in
or
movsl
popa
sbb
divl
xor
sbb
jno
pop
jle
mov
pop
mov
lahf
xchg
test
ret
pop
sub
inc
movsb
gs
push
outsl
dec
cmp
setge
cmpb
mov
loopne
out
jb
jmp
ret
jl
stos
pop
push
push
push
mov
jno
in
shrb
xchg
mov
in
movsl
mov
int3
mov
loope
adc
adc
int
movsb
xchg
and
test
enter
pushf
sub
enter
adc
pop
push
out
pusha
nop
cli
inc
and
add
jne
sub
dec
xchg
cwtl
xchg
out
pop
repnz
cli
fldenv
mov
xlat
jno
jno
sub
inc
add
cmc
inc
mov
mov
lds
add
daa
cwtl
cld
mov
imul
mov
or
mov
mov
dec
adc
adc
in
mov
and
mov
mov
scas
cmp
lock
mov
pop
xchg
adc
cwtl
sub
mov
cmp
inc
add
call
inc
lods
loop
push
jecxz
sub
and
mov
mov
add
dec
rcr
les
add
mov
mov
shl
inc
or
jns
mov
cmp
xor
mov
inc
push
mov
push
and
cmc
push
notb
sarl
xchg
jge
fstl
out
push
fimull
xchg
or
sub
jae
cmpsl
pop
and
out
pop
mov
sti
adc
add
pop
pop
inc
stos
xor
adc
sub
movsl
fidivl
test
enter
test
jb
pusha
add
push
add
outsl
repnz
icebp
jo
sbb
add
daa
es
pop
scas
fistpll
mov
inc
scas
std
clc
add
repz
mov
pop
jge
cli
imull
cltd
popl
aam
hlt
pop
mov
fmuls
movsb
mov
sub
push
xchg
lock
sahf
rclb
insb
xor
push
or
push
adcb
movsb
popf
dec
cltd
lahf
or
xchg
adc
mov
push
mov
and
bnd
fmuls
jae
cmp
loopne
add
fnsave
lock
and
fs
jge
or
pop
pop
push
dec
cltd
imul
mov
cmp
aam
inc
cmpsl
out
andb
xchg
xchg
push
je
pop
lods
jmp
ret
inc
ss
inc
cmp
movsb
mov
mov
mov
inc
inc
cmp
jns
sbb
push
push
test
mov
test
shl
mov
test
cs
mov
push
and
push
mov
jbe
cltd
cli
dec
loopne
loop
jp
scas
and
push
mov
jnp
pop
es
pop
sbb
mov
xchg
lods
arpl
xchg
xchg
pop
sub
jns
sbb
iret
push
cli
xchg
mov
lods
bnd
pop
int
lcall
movsl
push
test
xchg
jle
dec
ljmp
out
cmp
cmp
mov
dec
xlat
bound
les
push
cmpsb
cmp
jns
rcll
orb
aam
aaa
dec
les
jge
jl
lds
loope
push
in
xor
and
stc
sbb
mov
add
jl
push
mov
int3
push
add
inc
pop
and
mov
push
lret
cmp
xchg
cmpsb
leave
pop
jg
push
popa
testb
push
mov
addb
lahf
cmp
xor
xchg
and
cmpsl
aaa
adc
mov
jo
xchg
inc
cmc
mov
adc
inc
aaa
aaa
popf
std
mov
enter
icebp
or
sub
shll
sub
jp
add
fstpt
out
pop
int
xchg
push
mov
mov
add
neg
int
xor
out
dec
sti
testb
rolb
fmuls
idiv
imul
orb
enter
jo
jo
js
mov
mov
imul
dec
aas
mov
lds
inc
dec
push
mov
icebp
imull
jbe
xchg
xchg
popa
push
fs
scas
ljmp
mov
or
out
outsb
leave
push
adc
repnz
out
push
jae
sti
aaa
lods
and
sub
or
mov
sub
movb
icebp
fldenv
inc
popf
aam
cmp
push
bound
mov
sbb
call
sti
sbbl
ret
or
loope
fisttpll
cmpsb
fwait
mov
dec
lods
push
adc
shlb
sub
testl
inc
or
push
arpl
cs
cld
xchg
and
xchg
mov
and
xchg
jl
mov
enter
mov
xorl
push
and
inc
dec
scas
sti
jg
orb
pop
repnz
sbb
cli
imul
bound
dec
pop
add
inc
mov
outsb
xchg
jbe
in
xchg
ds
jae
xlat
popa
cs
dec
adc
rorb
mov
lds
cmp
sub
or
scas
sti
fs
dec
ret
jb
pusha
inc
sub
testl
imul
ret
cmc
pop
push
loopne
sbb
mov
ret
sbb
inc
in
add
mov
fisubrl
insl
xor
xchg
adc
dec
push
aaa
mov
mov
dec
imul
push
insb
repz
inc
clc
mov
push
dec
int3
add
dec
mov
sub
sbb
inc
pop
fnstsw
xchg
leave
mov
sub
loopne
mov
pop
push
int
mov
pop
test
loopne
inc
aad
xor
movsl
mov
jg
movsb
in
pop
cld
mov
enter
lret
jl
push
xchg
fistpll
xchg
mov
lahf
inc
pop
adc
mov
push
push
dec
jne
sbb
ret
mov
movsl
mov
xor
cmp
js
aam
dec
jo
lcall
dec
xlat
cmp
out
repz
adc
roll
idivb
push
xchg
push
aaa
cmc
jle
fwait
loope
jmp
mov
movsb
add
out
pop
and
lods
push
or
out
sub
pop
jbe
negb
dec
dec
scas
add
je
ss
ljmp
xor
pusha
jge
fwait
sbb
dec
sti
lods
lods
int
push
stos
lods
jecxz
jle
or
hlt
pop
in
ss
cwtl
icebp
std
rol
fldt
xchg
inc
enter
rcrl
ljmp
rclb
lcall
bound
addl
divb
jns
icebp
loope
pop
rclb
jbe
es
jle
jb
mov
lahf
xor
inc
inc
ljmp
or
outsl
xchg
popa
std
cmpl
mov
xchg
or
fcmovnb
popf
iret
shlb
cmp
fildll
stc
xchg
sti
sbb
sbb
xchg
addl
mov
jp
xchg
adc
cmc
outsl
fldt
or
xchg
adc
push
int3
pop
dec
cmp
andb
mov
mov
fcmove
cmp
dec
mov
pop
cmp
stos
and
mov
xor
jle
popa
insl
decb
fcoml
sti
out
imul
in
push
mov
fs
lcall
fcoml
mov
jne
and
cwtl
nop
inc
pop
xchg
xchg
mov
lds
imul
mov
jb
push
adc
inc
dec
xchg
mov
je
scas
or
out
xchg
xor
adc
movsb
stos
mov
lea
rclb
insl
popf
aas
dec
bound
jns
jge
lock
adcl
xlat
push
dec
push
adc
mov
cmc
add
xor
les
std
testl
dec
sub
sub
and
add
roll
mov
clc
add
push
and
loopne
push
repnz
orb
test
mov
cmc
fidivl
pop
cmp
lods
shlb
xchg
fwait
aam
inc
std
fldl
mov
xchg
loop
cmpsb
es
loop
mov
add
das
and
cwtl
dec
add
in
adcl
and
ljmp
stc
cltd
lock
lods
mov
pop
rorl
mull
lods
int
loope
mov
in
mov
jle
pop
int
dec
nop
bound
sub
and
mov
mov
xchg
shl
cli
ret
push
xchg
in
das
test
stos
mov
inc
popf
outsl
sbb
pushf
nop
js
and
sub
jnp
dec
cmp
mov
ja
mov
imul
das
sub
lret
repz
adc
xor
pop
mov
mov
lcall
push
cmc
mov
jge
mov
mov
fcmovnu
mov
or
xor
sbb
daa
sbb
and
mov
outsl
insb
xor
xchg
idivl
pop
cmp
jle
and
cmp
dec
insb
cmpb
inc
cmpsl
pushf
inc
jp
add
mov
xor
xor
push
push
jl
mov
rclb
aam
test
pushw
bound
push
and
push
sub
jbe
imul
iret
jl
and
push
in
cmpsl
or
neg
jmp
arpl
incb
mov
lds
push
ss
or
mov
mov
dec
sbb
inc
pop
das
jecxz
mov
ds
sbb
xchg
xchg
les
lods
out
cmp
insl
and
idiv
les
mov
stos
mov
inc
push
out
push
jg
fsin
push
inc
dec
cmpsl
pop
data16
adc
into
lahf
push
sub
mov
xor
cmpsl
pause
push
xchg
jbe
bnd
outsl
fcmovnb
xlat
daa
lods
cmpsb
es
pop
les
iret
pusha
pop
in
jge
call
or
out
pop
dec
imul
stos
mov
imul
cmpsb
lock
sbb
jmp
cmp
push
and
push
jae
and
dec
dec
pop
inc
icebp
int3
dec
sbb
cmp
sub
insl
mov
jmp
pop
push
push
xor
sub
push
and
or
and
rorl
or
pop
enter
nop
fs
mov
out
test
dec
or
jns
pushf
fistps
sbb
fs
sub
sub
lock
mov
and
xor
fists
mov
sbb
adc
fcoml
adc
mull
cltd
cmpsl
mov
cmp
leave
stos
push
mov
psubq
fiadds
shll
mov
in
popa
and
movsb
div
mov
loope
inc
push
adc
rorb
adc
imul
fnstcw
or
movsl
jns
xor
lret
xlat
xor
sub
mov
xchg
xor
cmp
daa
outsb
cld
pop
aad
in
mov
pop
xlat
call
jmp
mov
int
dec
in
pushf
stc
subl
cmp
imul
mov
xchg
hlt
sub
fsubr
repnz
inc
jnp
sbb
pusha
insl
xchg
lahf
jb
cmpsl
loopne
test
test
cmp
push
and
ljmp
sub
in
and
inc
sbb
or
das
xchg
pop
mov
mov
jg
or
dec
mov
inc
mov
push
loope
mov
lock
addl
movsl
cld
scas
into
xchg
into
aas
addr16
sarl
scas
cwtl
dec
lods
mov
push
inc
dec
fucomi
aaa
adc
ficoms
xchg
lcall
cmpb
fdivs
and
lcall
xchg
js
inc
mov
insb
insb
cmp
mov
xlat
pop
xor
pop
stos
xchg
push
sbb
xchg
rcl
lds
and
xchg
push
notb
clc
jb
mov
mov
mov
push
push
mul
lods
hlt
lods
loopne
sub
pop
int3
or
sbb
jmp
imul
movsl
repz
pop
mov
cmp
jo
sub
movsl
fs
push
push
cwtl
inc
sub
pop
pusha
mov
or
mov
das
inc
or
andl
xchg
dec
mov
cmp
outsb
ljmp
inc
push
inc
test
push
cmp
adc
rcll
fnstsw
mov
fsubrl
rorb
repz
sbb
or
lock
inc
mov
rcr
sbb
into
ret
shll
fs
add
mov
pop
pop
jecxz
jg
out
idivb
nop
addl
adc
sbb
xchg
pushf
stc
dec
push
push
ja
adc
and
icebp
jne
xchg
cwtl
add
jno
jbe
ret
loopne
push
mov
jo
pop
push
pop
xchg
inc
enter
fisubs
push
mov
xor
mov
push
adc
movsb
xor
ror
cmp
xchg
push
in
in
xor
and
sti
cmpb
scas
jle
add
imul
mov
sbb
scas
mov
push
push
movsb
pop
xchg
pop
ja
les
aam
test
pop
mov
imul
cli
pushf
xor
scas
int
repnz
fistpl
std
test
mov
push
out
mov
adc
xchg
cmc
fldcw
xorl
or
roll
in
mov
jo
fimull
dec
repnz
or
jle
mov
mov
sub
mov
pop
sbb
pop
mov
incb
xchg
push
jnp
mov
mov
cwtl
pop
push
in
adc
mov
sub
add
rcrb
or
dec
daa
mov
aam
fistpll
mov
mov
bound
dec
les
aas
rcrl
movsb
push
bnd
inc
or
sbbl
fimull
out
sbb
aam
imul
lea
adc
push
repz
int3
imul
fnstsw
sub
mov
xchg
ficoml
lret
shlb
scas
fs
faddl
push
gs
je
xchg
mov
inc
dec
test
out
mov
inc
pushf
clc
jae
jp
test
addr16
mov
inc
push
or
or
sub
in
sbb
daa
xor
imul
inc
or
fstps
dec
stos
mov
add
cli
mov
mov
nop
out
fistpll
movsl
mov
inc
adc
sub
mov
jp
adc
jmp
adc
pop
outsb
aas
cwtl
push
adc
sub
xchg
add
pop
mov
dec
add
ret
mov
outsl
xchg
jmp
lcall
mov
or
push
mov
jno
inc
sub
leave
jbe
cmp
push
mov
sub
add
scas
mov
stos
mov
stos
outsl
lret
xlat
push
shlb
daa
pop
scas
fidivrs
movsb
cmp
and
mov
rcl
add
ja
popa
test
xor
fcoml
data16
jge
mov
adc
dec
mov
jbe
dec
imull
xor
movsb
fcmovnu
xor
loope
lds
push
mov
and
shlb
aam
push
cld
int3
xchg
adc
cs
cmp
xchg
jmp
mov
fs
pop
or
repz
inc
push
lds
mov
push
and
cltd
lret
xor
xorb
jp
and
cmpl
sub
fisttpl
sbb
dec
pop
shrb
or
add
hlt
dec
aaa
mov
stos
hlt
sbb
ret
sub
cs
add
adc
mov
lea
sarl
out
or
mov
test
mov
push
add
sub
adc
sbbb
in
inc
mov
inc
lret
mov
add
xchg
pop
cmpsb
inc
popa
xchg
out
test
adc
roll
les
into
hlt
into
push
push
in
jge
or
test
xor
add
sub
rcrb
dec
dec
cmp
or
int
imul
inc
movsl
jbe
mov
push
clc
fmull
xchg
jnp
mov
adc
mov
aas
cmp
mov
dec
jle
pop
outsb
ror
into
fmulp
ret
or
movsl
inc
push
ja
xorl
pop
jecxz
inc
inc
shr
jmp
adc
mov
jg
and
mov
jl
js
int
cmp
or
andl
mov
add
pushf
xor
stc
push
nop
das
xchg
inc
xchg
sbb
ss
shll
lds
insl
inc
jecxz
sub
or
orl
dec
pop
cs
xchg
out
stc
sbb
inc
int3
pushf
out
mov
cmp
ds
inc
stos
and
mov
add
nop
mov
jg
nop
cmp
pop
xchg
fwait
or
mov
cwtl
cmp
sti
jge,pt
or
cmp
lret
dec
pop
ljmp
adc
outsl
ljmp
scas
out
pop
inc
inc
inc
mov
jmp
aad
push
cmp
adc
fcmovu
fwait
mov
ds
gs
sbb
in
push
cmp
pop
xchg
sbb
fimuls
imul
mov
and
cli
adc
aam
inc
insb
mov
push
mov
cltd
imul
jmp
cmpsb
fs
adc
sub
das
outsl
jo
adc
rorl
imul
ret
inc
fiadds
jl
mov
idivl
mov
jns
jo
jbe
dec
loope
in
push
js
sub
cmp
test
sub
out
lock
inc
pop
mov
das
subb
outsl
mov
jb
and
inc
push
dec
mov
pop
dec
sbb
and
jle
adc
xor
dec
mov
xor
clc
mov
fcoml
xor
mov
dec
jb
inc
adc
icebp
shrl
lods
mov
cmp
sbb
push
pop
mov
imulb
sub
lret
xor
or
rcrl
stc
lods
fisubl
ret
out
sub
sti
mov
insl
xor
out
mov
jmp
js
loope
cmp
repz
push
dec
adc
xchg
add
sub
push
in
push
pop
ljmp
mov
pop
stc
sub
lds
mov
fwait
lcall
push
scas
outsb
inc
sbb
pop
lods
sahf
xchg
inc
push
shl
rol
ds
jecxz
jecxz
or
add
shrb
jb
jp
test
cld
jb
mov
fisubl
or
je
sub
jmp
mov
cmp
mov
lret
dec
pop
push
mov
loope
gs
xchg
jge
clc
aad
pop
pop
icebp
movsb
ja
jnp
push
shll
xchg
pop
adc
sbbl
out
and
and
lret
shlb
in
ljmp
jb
jecxz
xchg
sbb
xchg
roll
push
mov
out
loop
sbb
pusha
insb
mov
sbb
insl
outsl
inc
dec
ret
xchg
and
iret
add
mov
pop
dec
adc
cmp
mov
adc
repnz
cmp
fwait
shr
lock
push
int3
orl
pop
inc
mov
dec
adc
jo
sub
jl
into
dec
and
icebp
sbb
jl
loopne
cld
mov
ret
sbb
nop
insb
push
sub
and
pop
xchg
popf
popa
insl
cmpsl
pop
and
rorb
xchg
sbb
xor
jno
mov
pop
inc
pop
jg
pop
mov
mov
lret
or
push
sub
and
cmp
je
in
out
xchg
popf
frstor
mov
pusha
mov
jge
mov
sbbl
lahf
pusha
mov
fnstcw
xlat
sbb
cli
add
or
mov
mov
roll
mov
push
xchg
xchg
or
xchg
jg
lods
popa
lahf
movb
movsb
out
je
xorb
mov
fstl
je
leave
jns
in
jns
mov
repz
inc
fcoms
movsl
xchg
mov
push
dec
mov
xlat
sti
pop
or
js
cmpsb
idivb
in
sbb
adcb
adc
inc
shrl
push
clc
into
jp
sti
push
jae
sub
pop
out
adc
enter
cld
dec
or
add
loope
test
mov
nop
fs
inc
and
or
xchg
popf
or
es
std
jg
adcb
in
loopne
jl
sub
es
sub
or
ja
xchg
clc
insl
cmc
mov
ja
inc
xor
stos
xor
mov
adc
pop
pushl
out
xchg
sbb
incb
loop
repz
push
push
xor
and
gs
lds
outsb
mov
js
sub
jge
sub
pop
lock
cwtl
enter
xor
and
push
pop
mov
and
sbb
ret
inc
icebp
in
sbb
jecxz
pop
int3
jmp
push
loop
sbb
scas
aas
inc
cld
andl
clc
jle
ss
fcomps
ja
repz
jg
xor
mov
jp
jnp
dec
pop
add
jle
push
mov
lods
dec
mov
jns
nop
mov
gs
mov
hlt
and
aam
fsubr
fsubrl
inc
insb
shlb
xor
fidivl
xor
fbstp
mov
xchg
mov
fcoms
cld
mov
mov
int3
into
xchg
dec
mov
dec
xchg
mov
rcr
and
mov
and
fs
les
sbb
sub
or
dec
adc
sbb
mov
stc
lock
stc
push
stc
out
push
aam
mov
cmp
jo
stos
cmp
mov
sbb
mov
jb
enter
daa
lret
xchg
xchg
mov
icebp
mov
fcmovnbe
scas
sbb
ljmp
adc
lahf
mov
outsb
jno
cmp
stc
fldt
cmp
inc
and
xor
cld
xor
sahf
fcmovu
inc
pop
call
add
xor
icebp
mov
pop
lahf
sbbl
jae
mov
jg
data16
dec
ffree
scas
sbb
loopne
lods
cmp
lret
out
out
mov
adc
pop
pop
clc
in
aaa
repnz
outsl
clc
les
xor
shl
xchg
jb
outsl
adc
and
adc
dec
cmp
mov
jne
repz
sub
or
sub
and
ss
andb
mov
jb
movsl
fcmovnbe
lcall
enter
in
fldl
mov
fnstenv
cs
ficoml
in
daa
gs
test
shl
shrl
pusha
in
out
decl
iret
cmp
cmp
jmp
dec
pop
add
sahf
push
arpl
lds
rorl
enter
jns
jmp
mov
push
pop
lock
imul
push
sahf
int3
call
ficomps
push
cwtl
loop
arpl
jae
cmp
dec
xchg
aaa
push
imul
in
movsl
or
loopne
faddl
in
jp
insl
loope
cmp
inc
js
pop
ja
les
test
add
and
mov
mov
lcall
sub
aas
xor
sub
lret
ds
mov
out
aaa
or
es
mov
insb
sub
mov
or
mov
notb
pop
mov
addr16
pop
ljmp
mov
mov
movsb
add
shrl
sub
ret
adc
inc
int3
and
dec
js
add
lcall
arpl
aaa
sbb
pop
aad
push
repz
xor
loope
ss
lods
add
arpl
fistl
push
out
xchg
cwtl
loope
pinsrw
sar
cmp
sarb
jmp
and
push
or
mov
mov
stos
sahf
or
mov
mov
scas
push
loop
shlb
xorl
push
not
xor
imul
mov
mov
dec
cmpsb
push
jns
cmp
dec
dec
enter
pop
inc
push
fidivl
roll
mov
add
int
push
ljmp
clc
fs
jno
mov
in
lock
adc
pop
test
imul
pusha
popf
xor
adc
test
push
mov
sbbl
pusha
ss
clc
jmp
dec
xlat
pop
push
mov
icebp
or
icebp
dec
cmc
jl
cwtl
add
adc
les
add
mov
aas
or
inc
lret
or
lcall
imul
jne
mov
xchg
jno
sbb
xor
fst
mov
aaa
arpl
lea
sub
xchg
dec
lahf
push
sbb
dec
mov
inc
es
push
outsb
fldcw
push
pop
out
dec
outsb
repnz
xor
xor
lea
dec
and
out
sub
test
in
cmpsb
cmpsb
movsl
ret
sub
inc
jno
and
jbe
xchg
and
fdivr
mov
clc
movsb
movsl
pop
cmc
mov
fldcw
cmpsl
rcrb
push
add
xlat
mov
xor
sub
cld
push
xor
bound
lea
scas
pop
fwait
push
dec
cld
and
add
lret
add
xor
add
jg
push
dec
in
xchg
shl
or
dec
js
push
dec
cltd
les
stc
in
mov
out
js
push
pop
jecxz
mov
fstl
jmp
mov
mov
popf
xchg
jb
pmulhuw
movsl
loope
aas
xchg
inc
push
push
dec
add
stc
int3
push
mov
mov
xor
stos
push
dec
mov
je
aaa
data16
loopne
lcall
mov
fs
xor
mov
xor
out
outsb
dec
rorl
cmp
mov
inc
mov
in
ret
mov
add
dec
jne
outsl
cwtl
and
scas
loopne
sahf
std
out
clc
and
outsl
xchg
ret
push
fwait
mov
rcrb
add
les
cmp
inc
iret
aas
pop
imul
xor
lret
incb
lcall
icebp
aas
aam
mov
daa
mov
mov
in
add
mov
sbb
lea
cmp
cmp
push
add
aam
into
fwait
mov
outsl
aaa
xor
or
mov
test
mov
clc
sub
cmp
mov
js
dec
lods
fcompl
rolb
stos
jmp
mov
and
mov
cmc
push
daa
mov
jo
push
arpl
xor
xchg
mov
mov
in
cmp
add
jbe
push
fwait
dec
mov
leave
out
xchg
pop
cmpsl
push
or
gs
mov
xchg
mov
adc
push
mov
int3
mul
imul
adc
popf
loop
mov
ljmp
xchg
xchg
cmp
jbe
or
int
andb
or
xchg
and
mov
sbb
imul
loopne
fisubl
mov
add
nop
mov
xor
xlat
push
dec
rorb
push
pop
cmp
fimull
dec
xor
xor
mov
js
iret
inc
stos
rcrb
bound
das
in
into
stos
xlat
xchg
fstl
jns
clc
dec
ret
lret
daa
addr16
pand
cmc
test
fwait
outsb
int3
xor
dec
pop
ljmp
lea
loope
inc
lcall
repz
pop
bound
subl
enter
ds
fs
xor
sbb
add
testb
jp
mov
lods
or
sub
pushf
inc
dec
add
popa
leave
mov
jns
push
scas
cli
jbe
ret
ret
mov
ljmp
add
add
dec
ds
mov
in
gs
outsb
pop
stc
push
lods
shlb
or
or
cmpsb
aad
fisubs
fbld
push
jno
ds
adc
fstl
or
fnstsw
insl
ret
rcrl
dec
sub
and
fwait
bound
inc
sub
pop
xor
ffree
aas
popa
sub
sbb
out
loop
dec
sbb
mov
mov
pop
cld
mov
sub
sub
dec
push
jo
comiss
mov
cmp
push
adc
or
ljmp
mov
lods
test
out
lods
jb
fisubrl
and
ljmpw
ja
push
test
push
les
in
mov
jns
sbb
or
cmp
jb
dec
jno
clc
cwtl
scas
les
push
xor
mov
push
ret
rolb
je
mov
data16
cmp
fsub
rorl
xor
fs
add
in
pop
and
icebp
sub
jle
xorl
lods
cmp
orb
or
fnstcw
inc
jno
idivl
inc
jg
dec
mov
lahf
js
and
ret
sbb
or
mov
or
push
pop
scas
jmp
rorb
sub
shll
cmc
xchg
int3
dec
fwait
add
add
adc
push
or
insl
xchg
ss
cmpsl
es
and
sbb
outsl
sbb
xchg
aad
add
adc
or
loop
adc
cld
cltd
mov
add
xor
xor
in
cmp
cmp
ss
sbb
adc
add
push
repz
xchg
adc
sub
ret
ret
repz
adc
sbb
movsb
daa
filds
and
and
call
ret
mov
imul
in
jg
sbb
inc
rorl
test
and
jg
test
das
dec
icebp
rcrb
mov
cmc
mov
ljmp
in
mov
fmull
sbb
in
jae
lret
das
lret
jle
aam
push
and
cmp
jmp
int
push
xor
inc
xor
mov
sub
pop
sbbl
data16
mov
cmp
jmp
adc
in
jns
pop
fsubs
pop
jmp
jbe
loopne
push
in
or
push
or
dec
mov
jp
gs
jbe
repz
subb
dec
sarl
js
xchg
mov
jg
xchg
inc
leave
ret
fwait
push
jl
add
adc
adc
mov
out
inc
div
cs
mov
xchg
sbb
cmpsb
inc
popa
lret
mov
in
xchg
lret
les
fisttpll
mov
ret
or
ja
and
out
imul
out
jp
sbb
sbb
fimull
dec
add
push
jecxz
cmc
adc
xchg
mov
in
mov
lock
inc
and
mov
add
js
aad
and
test
mov
jo
cmp
sbb
sarb
mov
xchg
cmpsb
out
mov
dec
pushf
pop
inc
mov
lcall
aas
pop
aam
sub
and
xor
push
xor
mov
daa
push
sub
movsl
xor
jge
xchg
push
out
jmp
popa
dec
testl
nop
sub
cli
fstps
or
lahf
fcmovnb
data16
decb
ffreep
push
insb
inc
mov
cmp
test
out
pop
xlat
mov
fwait
andl
or
sbb
lret
pop
stos
decb
inc
aam
cmpsl
lock
idivl
subb
and
mov
mov
pop
mov
jbe
inc
fsubs
and
and
shlb
or
mov
dec
inc
ds
addr16
pop
jbe
scas
call
cmp
aam
lods
iret
jg
cmpsl
pop
ss
xchg
and
mov
sub
sbb
dec
xlat
xchg
fwait
jg
push
out
int3
stos
test
mov
xchg
jge
cltd
cwtl
sbb
cmp
divl
or
pop
add
xor
in
sub
fstpt
mov
jecxz
mov
call
insl
cmp
es
inc
movl
clc
scas
sti
mov
and
push
push
xchg
rolb
in
pop
outsl
xchg
mov
mov
shl
lods
out
cli
insl
fisubs
jmp
pop
rclb
mov
daa
cmp
cwtl
les
aas
or
mov
jle
jns
adc
adc
jns
mov
sbbl
mov
add
dec
icebp
xchg
mov
fiaddl
comiss
shrb
imul
pop
sbb
sub
popf
xorl
adc
out
pop
xor
mov
pop
mov
gs
cli
mov
xor
loope
add
push
je
jo
sbb
xchg
sbb
out
cltd
bound
mov
sub
cli
pusha
hlt
push
jge
xorl
jmp
xor
in
rcll
fcmove
es
out
imul
mov
not
and
cmp
mov
nop
nop
cmp
ljmp
inc
inc
out
jno
fs
popa
andl
fcompl
dec
jmp
lds
adc
pop
lcall
scas
xor
sbb
sbb
jno
xchg
jns
popf
sub
mov
imul
mov
push
ds
sti
out
icebp
dec
adc
mov
xor
stc
xor
and
fcomps
jecxz
out
paddw
adc
pop
lret
mull
or
stos
xor
cwtl
pop
leave
dec
inc
shll
pop
fcomip
mov
xor
add
data16
sub
xchg
pop
or
movsl
sub
xchg
xor
in
bound
test
lahf
mov
test
adc
jo
incb
or
cltd
cmp
lret
dec
fistps
out
inc
addl
pusha
rol
daa
psubusw
in
outsb
adc
cmp
push
mov
mov
enter
jp
add
lret
cmp
subb
jle
jecxz
jle
test
stc
popf
sub
xlat
out
or
push
lods
pop
jg
dec
inc
cwtl
test
inc
jb
stos
leave
mov
lret
push
dec
xchg
ds
loop
xchg
pop
xor
or
in
lea
clc
daa
mov
and
in
in
add
mov
cmp
adc
hlt
sbb
jne
add
mov
sub
pushf
inc
sbb
jmp
pop
sbb
or
inc
repz
popf
jae
movsb
out
jecxz
cmp
dec
push
imul
into
sahf
fimull
test
int
adc
jp
mov
js
and
cmp
int3
in
js
cli
inc
outsb
push
ffree
scas
mov
xchg
dec
into
popf
jle
cmp
and
push
sbb
outsb
je
jmp
pop
mov
cmp
mov
push
dec
inc
or
mov
xor
add
mov
ljmp
jl
mov
insb
jno
jae
mov
call
lcall
pusha
mov
jecxz
mov
dec
adc
fisubl
jnp
jg
stos
and
pop
in
xchg
or
inc
outsb
xor
pushf
add
cld
or
into
inc
push
ret
cli
cwtl
addr16
pop
hlt
pop
hlt
or
mov
lods
xchg
push
cli
mov
nop
shr
cmpsb
cltd
jg
mov
or
jo
sarb
rclb
pop
hlt
ds
add
fildll
pop
mov
cmp
add
out
cmpsl
ret
push
inc
inc
pop
push
sbb
inc
jmp
mov
add
fcomps
push
sub
inc
xlat
dec
add
divb
sbb
xor
mov
sub
inc
daa
inc
in
xor
ret
mov
inc
jns
cmpsb
notl
lcall
ljmp
pop
pop
lret
or
shll
sub
xor
mov
mov
add
ss
add
into
lret
jnp
xchg
jo
mov
mov
test
ljmp
cmp
and
jae
test
jmp
aam
or
jb
push
das
pop
div
add
add
lods
rcl
push
inc
cmp
ds
cmpsb
xchg
rorl
cwtl
mov
clc
and
sbb
ret
popf
jle
daa
aaa
dec
mov
jbe
incl
int
mov
mov
mov
sub
fisubrs
push
lea
adc
iret
mov
push
mov
or
hlt
insl
add
push
xchg
loope
std
mov
xor
mov
xor
lcall
testb
test
repz
or
cmp
leave
xchg
js
and
fiaddl
xchg
js
dec
sub
and
int
mov
pop
fisubl
mov
and
out
jbe
fdivr
push
push
inc
mov
aaa
xorb
imul
mov
test
notl
sbb
xor
sbb
ja
add
sti
adc
or
and
fistpl
pusha
test
mov
hlt
jecxz
sarl
push
adc
fdivrl
push
cmp
mov
cmc
add
inc
aad
mov
in
shll
cmp
inc
daa
ds
pop
adc
pop
andl
lret
mov
jno
pusha
mov
test
pop
arpl
mov
fisttpl
pop
mov
addb
nop
lods
aaa
add
imul
in
cwtl
inc
in
int
hlt
add
mov
insl
xorb
and
fsubs
jbe
cmp
add
and
aas
xchg
lea
div
jb
sub
sbbb
cmp
push
mov
icebp
pop
mov
mov
cmpsl
or
cmp
and
movsb
loop
addr16
lds
mov
pop
shlb
out
popf
fstps
sbb
leave
or
mul
lods
pusha
into
mov
push
sbb
mov
dec
hlt
pop
cmp
sub
test
mov
lods
mov
jae,pt
mov
jne
pop
push
and
into
mov
and
jo
frstor
cmpsl
fldl
fcom
shrl
call
ss
aad
mov
push
mov
add
mov
lods
jmp
in
or
pop
and
popf
inc
insb
movsl
push
aad
sub
aad
inc
cmp
imul
ljmp
ljmp
shll
adc
fistpl
cmc
frstor
mov
and
pop
outsb
dec
sbb
mov
jp
lock
fwait
pop
jnp,pt
pop
dec
push
cmc
in
pushf
insb
cmp
in
mov
nop
pop
imul
pop
push
and
and
sbb
add
sbb
das
cmp
mov
dec
insl
inc
lret
push
add
rcl
mov
xor
add
and
nop
inc
push
xor
adc
dec
arpl
sub
sbb
push
inc
sub
out
mov
jne
scas
sbb
dec
inc
xchg
and
sub
ret
pop
out
add
inc
cmc
jmp
sub
xlat
inc
out
pop
and
cmp
cmp
xchg
xor
mov
pop
adc
cmp
mov
shrb
cmp
sbb
repnz
aam
jnp
sbb
je
stos
cwtl
sub
jle
movsb
mov
sahf
cmpw
rolb
movsb
scas
aaa
mov
sbb
push
or
add
push
rcrl
jo
push
inc
xchg
xor
inc
push
jae
rolb
xchg
pushf
lods
movsl
sub
stc
xchg
adc
not
cmp
or
popa
cmp
fsubrs
stos
dec
and
inc
xor
push
mov
insb
js
negb
cli
xchg
je
sti
gs
orl
xorb
nop
mov
or
adc
lahf
sbb
mov
shll
out
cltd
dec
cmpsl
jne
or
in
xor
add
gs
push
push
lock
test
push
dec
and
ror
mov
xlat
pop
xor
xchg
push
lret
adc
adc
out
cmpb
push
and
sub
or
mov
push
mov
pop
mov
mov
or
mov
aad
in
fdivrs
and
mov
inc
js
sbb
outsl
and
nop
ret
dec
jno
ss
enter
mov
call
add
sub
or
and
scas
push
push
fcoms
icebp
pop
inc
and
xchg
lods
sub
jmp
sub
fstpl
push
scas
sub
xor
scas
arpl
xchg
lret
cmp
lret
les
sarl
movb
add
add
es
inc
test
test
mov
add
fmul
es
lds
push
inc
out
test
fdivr
mov
adc
jbe
aaa
inc
mov
push
mov
or
xor
xchg
jp
mov
mov
xor
sub
sbb
scas
dec
rorl
aad
cwtl
dec
push
push
cmp
adc
xchg
enter
outsl
shr
pushf
out
fisttpll
shrl
test
push
and
lret
lea
lods
cltd
mov
pop
fs
add
adc
cld
xor
sub
push
push
inc
jae
push
xchg
repnz
or
leave
dec
and
in
ljmp
pop
pop
mov
push
adc
repnz
push
dec
mov
stc
push
rol
jle
cwtl
jae
cmpsb
cli
xchg
pop
pusha
pop
adc
jecxz
mov
in
jmp
push
cmp
lods
cltd
shlb
movsl
mul
insb
daa
fnstsw
scas
mov
push
pop
out
jae
pop
add
std
mov
sbb
xchg
adc
fwait
push
mov
cmpsb
out
out
push
out
sbb
andb
ljmp
gs
mov
adc
mov
or
test
rcrb
clc
mov
pushf
adc
out
pop
mov
push
sub
jl
loopne
xchg
shll
imulb
popa
pop
dec
iret
insl
sbb
add
ror
sub
mov
in
cli
daa
jbe,pn
pop
pop
inc
mov
adc
scas
sbb
cli
inc
cmpsb
pop
test
rol
scas
jne
mov
mov
repz
loopne
ds
int
xchg
cmp
pushf
int
mov
fwait
mov
inc
loopne
and
mov
push
mov
imull
stos
outsl
imul
push
enter
or
mov
fdivrl
add
lods
lods
stc
add
fldenv
cmp
push
rcrl
push
mov
loop
lret
adc
adc
dec
cmp
and
jmp
into
gs
add
or
sahf
add
js
and
loopne
aad
push
pusha
cmp
cs
mov
sub
ja
pop
sbb
ja
pop
in
ds
sub
push
push
ret
sbb
mov
pusha
inc
xor
jo
sub
movsb
push
inc
fsubrl
sbb
iret
xchg
push
add
aas
push
add
loop
jp
loop
pop
fwait
cmpsb
and
cmp
leave
rcrl
sub
fwait
push
sbb
jne
lahf
mov
cmp
faddl
std
inc
movsb
cs
mov
push
out
mov
jl
out
enter
nop
sti
scas
mov
ret
xchg
push
daa
mov
call
add
ja
arpl
fs
xor
inc
in
pop
in
pop
dec
fwait
out
and
shll
orl
push
mov
or
in
push
sub
ja
inc
popf
pop
enter
mov
call
sub
mov
popa
mov
ja
sbb
nop
mov
inc
or
out
stos
decb
ret
inc
mov
fldt
xchg
add
pop
cmp
sub
xchg
push
cmp
xor
fistpll
adcb
cmp
aam
insb
addr16
bound
insl
adc
push
adc
xchg
lods
out
jne
xchg
cmp
xchg
fldenv
cmpsb
cwtl
xlat
rolb
repz
lcall
mov
sub
arpl
or
mov
sar
mov
xor
xchg
push
jbe
mov
mov
lcall
pop
sbb
lcall
push
dec
and
call
mov
sbb
sbb
and
and
decl
pop
sbb
stc
movsb
xchg
cmpsb
jbe
int
pushf
stos
in
jmp
mov
sbb
mov
fucomi
mov
in
fistl
xorl
inc
inc
jbe
shrb
ja
add
push
test
pop
into
popf
shll
mov
mov
mov
and
push
or
mov
test
lret
enter
inc
orl
ret
mov
xor
cli
rorb
cwtl
movsb
lahf
xor
add
loope
or
push
ds
jle
jle
mov
mov
loopne
clc
and
cmpsb
sbb
cmc
lds
jmp
and
pop
push
cli
fnstcw
cmp
cmp
shrl
loope
pop
lods
fdivrs
dec
enter
test
ret
test
loope
push
loop
pop
push
pop
cli
and
xorl
fdivrl
mov
lret
hlt
dec
lods
loope
mov
push
add
mov
sbb
js
push
icebp
cli
adc
cli
nop
aam
sub
test
icebp
out
rcrl
stos
notl
pop
jecxz
insl
pushf
mov
imul
inc
imul
pop
xor
xor
cmc
enter
mov
jl
clc
dec
add
pop
or
jg
xor
or
push
cld
xchg
dec
jp
adc
sbb
dec
bound
data16
mov
push
inc
int3
loop
in
jae
dec
sub
lods
jae
fistps
fwait
pop
mov
in
sbb
sbb
jbe
pusha
rcrb
xchg
mov
xor
in
dec
push
jae
stc
xor
sbb
xchg
xchg
pop
daa
mov
mov
loope
popa
cmpsl
mov
jl
xorb
mov
aas
sti
shrb
mov
scas
stc
fsubr
clc
stos
jp
inc
sahf
push
fcom
mov
rclb
xchg
and
add
push
push
test
jae
lock
fldenv
add
cmc
pop
or
push
push
sbb
andb
xchg
lock
jp
jmp
insl
dec
stos
stc
adc
out
or
call
in
loopne
fbld
lods
adc
cmp
dec
dec
pop
inc
sar
mov
ss
mov
xchg
fimuls
sti
imul
mov
mov
push
inc
xor
inc
bound
mov
push
test
or
jecxz
movsb
ss
jecxz
adc
cmpsl
inc
cmp
dec
sahf
pmulhuw
mov
out
adc
pop
daa
xchg
fs
out
dec
int
push
arpl
jne
mov
outsl
outsl
in
dec
push
add
mov
jl
repnz
fiaddl
sahf
fwait
pushw
and
popf
xlat
dec
cmp
xchg
mov
cli
test
out
daa
gs
jmp
or
rolb
hlt
sbb
add
outsl
xor
jnp
call
pop
push
fldcw
scas
inc
aas
pop
in
fadds
rcrl
xchg
pop
push
scas
in
and
cmp
mov
mov
imul
cmpb
push
inc
add
jmp
and
inc
imul
or
and
test
leave
jbe
xchg
mov
add
jmp
arpl
jbe
xchg
es
cmpsl
cmp
sbbl
into
jmp
mov
mov
sahf
dec
and
xchg
nop
ja
mov
popa
jae
mov
gs
push
xor
or
pop
fstps
mov
push
scas
inc
pop
call
dec
inc
adc
das
xchg
xor
adc
cmc
jp
clc
cmp
ret
pop
push
aad
fstpt
sahf
aad
sarl
mov
out
mov
scas
xchg
or
outsl
scas
sub
and
iret
in
mov
sub
cmp
and
lcall
mov
in
jmp
test
or
clc
test
daa
clc
mov
pusha
aad
jne
and
push
outsl
sti
out
push
or
cmp
xchg
loopne
sub
inc
push
fs
add
outsl
scas
sub
sbb
push
add
xchg
loopne
lret
adc
sub
lods
int
jnp
addr16
mov
dec
adc
mov
in
in
fwait
leave
pushf
fdivl
mov
sbb
cmp
pop
lahf
and
xor
dec
dec
out
test
nop
adc
adc
insb
mov
adc
mov
push
adc
outsb
dec
add
dec
fisttpl
xchg
mov
mov
sub
cmpsb
inc
pushf
pop
loop
stos
xlat
dec
jp
sahf
mov
out
add
addr16
jle
lahf
sbb
mov
inc
mov
addb
adc
int3
push
movsl
addr16
loopne
mov
repz
je
adc
and
rcrl
loop
stos
out
and
out
dec
sti
jbe
insb
sbb
xor
mov
dec
dec
adc
insb
popl
pop
and
rcll
sbb
lds
hlt
push
data16
popa
lock
inc
out
test
test
cmp
test
ja
sbb
add
ret
mov
sbb
xor
mov
dec
sbbl
adcb
sbb
xchg
mov
testl
mov
mov
jg
in
out
sbb
aad
aas
adc
add
nop
add
pop
adc
ror
sbb
ljmp
leave
stos
jne
cmpsl
ret
cmpsl
inc
int3
add
sub
mov
mov
adcl
mov
xor
test
loope
rcll
cmc
jae
ret
push
mov
cltd
mov
das
jne
dec
or
sarb
sti
mov
loopne
mov
ds
pop
push
push
fnstcw
adc
stc
jle
clc
push
rcrl
lret
jg
cmp
ja
mov
push
rclb
or
push
fisttpll
pop
nop
sahf
imulb
pop
adc
adc
add
lods
or
mov
or
cwtl
push
and
fbld
mov
imul
aas
mov
sub
icebp
jo
in
test
icebp
loopne
insb
pop
mov
and
xor
adcl
fisttpll
mov
push
adc
mov
jnp
imul
es
shrb
cmp
ljmp
pop
fld
and
inc
fisubrs
push
cwtl
es
mov
cmp
xchg
sub
inc
inc
out
xchg
dec
pusha
adc
push
or
mov
ja
fistps
xor
sbb
rolb
add
ror
adc
int3
leave
fwait
cli
daa
pop
fs
mov
cmpsb
or
test
sbb
lcall
ljmp
inc
loopne
push
pop
push
xor
xor
mov
push
add
out
nop
lds
lcall
inc
add
add
int
or
outsl
test
push
push
movsl
arpl
loop
sub
jmp
mov
les
or
xor
dec
cmp
xorl
xor
insb
cmpsl
mov
jg
pushf
fcomps
insb
push
push
shr
std
pop
flds
call
fisttpl
jl
divb
mov
lods
sub
in
rorl
or
mov
xchg
fwait
dec
push
bound
inc
cltd
cmp
outsb
and
test
adc
inc
cmp
out
gs
lods
add
sbb
shrb
aam
iret
andb
jecxz
sub
xor
inc
sub
out
sbb
aas
push
out
gs
mov
xor
inc
shrl
js
int3
mov
subl
and
aam
jp
dec
js
pextrw
mov
pop
dec
addr16
insb
sbb
cmp
or
adc
cmp
mov
xlat
pop
popf
mov
pushf
mov
jb
call
or
je
pop
jne
jnp
insb
xchg
jge
jne
dec
lret
incl
int3
es
in
stos
out
dec
cmp
mov
iret
jge
mov
das
into
nop
xchg
pop
xchg
fst
ja
dec
insl
sbb
icebp
fisttpll
dec
call
andl
clc
add
ret
andb
adc
aas
rcrb
cld
cmc
mov
dec
rcr
repnz
jl
pop
push
pop
push
or
xor
sbb
stos
rcr
mov
jmp
add
fwait
mov
xchg
sbb
jmp
jp
in
popa
mov
mov
adc
mov
lcall
or
sub
xlat
xor
test
pop
or
mov
fdiv
add
lods
sbb
into
hlt
push
scas
push
addl
out
out
push
jbe
push
sub
div
sub
push
jg
jbe
mov
in
cmpsb
andl
es
mov
clc
fisubl
push
sbb
mov
leave
mov
dec
and
scas
pop
fdivs
and
inc
jmp
push
daa
mov
adc
dec
sub
jle
cmpsb
in
xor
mov
push
loop
cli
movsl
das
mov
dec
xchg
or
cmp
loop
cmp
std
cmp
bound
mov
add
popa
aad
sti
dec
or
mov
hlt
cmpb
xor
daa
sbb
lea
inc
and
mov
fdivrl
cwtl
push
in
mov
xchg
adc
jns
mov
sub
add
fstpl
mov
jecxz
cmp
pop
xor
rorl
pop
lahf
stos
mov
lods
pop
cmp
jns
push
shl
rcl
lock
sbb
mov
mov
mov
push
int
divl
addb
orl
mov
lcall
in
movsl
repz
dec
testb
pop
mov
jecxz
fbstp
loop
cmpsb
cmpsb
sub
mov
xor
frstpm(287
lahf
mov
mov
fimuls
int
pushl
std
or
call
cmp
stc
push
xor
fcmovb
gs
out
aaa
leave
mov
mov
sbb
aaa
imul
in
sti
daa
mov
cmp
fistpll
ds
mov
jno
addr16
or
lock
loopne
ds
ror
pop
mov
mov
out
movsb
inc
mov
mov
cld
mov
jl
lahf
xchg
in
lahf
and
xor
scas
popa
mov
and
push
pop
or
bound
pop
mov
inc
mov
fmull
pop
insl
push
stos
dec
loopne
sub
push
cwtl
mov
daa
sbb
leave
xchg
xor
ja
loop
push
lods
hlt
scas
pop
insl
mov
shrb
xchg
add
imul
mov
lahf
fs
cmp
pop
lock
fs
mov
loop
mov
hlt
hlt
dec
jle
add
adc
fs
std
call
test
jnp
sub
test
je
popa
push
cmovl
pop
push
push
pop
jmp
dec
out
stos
ficoml
add
push
cmpsb
pushl
ret
scas
sub
aad
lea
lock
mov
dec
mov
ret
clc
push
pushf
dec
popa
mov
ss
push
cmpl
jns
mov
inc
arpl
inc
adc
js
sub
xchg
inc
adc
cmp
rolb
cmpsl
push
adc
add
or
or
jne
dec
in
imul
jg
mov
lock
push
test
das
test
leave
ror
mov
mov
mov
jg
mov
push
cmp
adc
mov
dec
test
loop
fldt
lahf
cmpsl
lea
in
jne
ret
ret
mov
inc
push
pop
iret
jge
mov
dec
mov
aam
push
fcmovnbe
imul
mov
bswap
ljmp
xchg
pop
xor
jmp
test
adc
sub
dec
out
jle
jb
and
fcomip
in
push
sub
adc
test
or
mov
add
ficomps
add
fwait
mov
into
dec
jmp
add
or
pop
xchg
mulb
mov
sub
mov
pop
iret
mov
cltd
cltd
lahf
je
pushf
int
arpl
add
lret
les
pop
xchg
mov
add
jp
or
sub
push
mov
arpl
xchg
pop
xor
ss
pop
fildll
and
or
rorb
clc
and
xchg
add
pop
les
lods
int
repz
inc
daa
xchg
lds
jbe
jne
xchg
rcrl
sub
jg
faddl
stos
jno
jmp
fidivrl
mov
push
xor
mov
int
cmp
sub
aad
insl
pop
xchg
cmp
movsl
jnp
testl
loope
test
pop
xor
cmp
or
or
push
cmp
jg
rcrb
test
push
ds
jnp
mov
adcb
es
es
sbb
add
mov
lds
pop
push
popa
inc
push
xor
notb
clc
dec
out
mov
push
xor
push
mov
repz
cs
pop
jmp
xchg
pusha
or
hlt
or
nop
pop
fdivrs
and
jge
pop
add
jle
add
inc
or
stos
pop
int3
ret
jmp
mov
jb
or
or
jmp
stc
pop
int3
dec
fiaddl
nop/reserved
imul
adc
icebp
popf
xchg
mov
jmp
in
dec
repnz
sar
orl
sub
jge
pop
mov
push
dec
fadd
jp
xor
ss
xchg
dec
push
loop
sahf
je
dec
shll
adc
jge
mov
mov
sahf
cmpsb
sub
xchg
or
adc
push
sub
sbb
sbb
gs
mov
add
adc
filds
inc
stc
push
loopne
test
xor
test
jmp
outsb
sub
pop
inc
popf
inc
push
xor
std
jns
pop
and
aaa
xor
cmp
mov
dec
sbb
iret
and
mov
stos
mov
mov
and
mov
repz
int3
popf
cltd
mov
mov
sub
push
bound
pop
dec
xchg
sbb
repz
dec
add
adc
in
jp
popa
enter
mov
rcl
jo
jl
mov
loope
pushf
cmp
daa
xchg
push
dec
ds
cmc
arpl
xlat
mov
jnp
data16
mov
arpl
loop
xchg
sub
sub
dec
popa
mov
dec
pop
mov
adc
pop
out
dec
rcll
icebp
pop
pop
sbb
aas
cli
jnp
xor
mov
push
pop
shlb
into
mov
ljmp
push
arpl
cli
and
cmp
push
cmp
lods
arpl
shr
sti
scas
and
bound
xor
call
mov
popa
sub
imul
push
dec
jo
int3
mov
clc
dec
pop
into
sub
movsl
push
jae
scas
pop
pop
loop
ss
insb
jp
push
ss
and
cwtl
mov
adc
aad
pop
cs
mov
inc
cmp
scas
in
cli
or
adc
mov
loope
jbe
cmc
push
push
setnp
jb
leave
fsubrs
and
fsubl
inc
adc
outsl
cmp
mov
xchg
imul
dec
fistl
inc
imul
jno
dec
loopne
push
xor
xchg
xor
ds
int
mov
push
sub
cmp
dec
mov
rcl
outsb
repnz
pop
lcall
mov
adc
mov
jo
cmp
pop
rcll
push
pop
xor
and
mov
mov
cmp
jg
sahf
and
mov
add
leave
repz
js
ss
mov
sahf
cmp
lahf
sbb
cmpsl
repnz
adc
sub
add
fmul
jmp
jmp
sbb
inc
pop
in
push
sbb
fwait
jmp
into
push
mov
xchg
push
sbb
add
dec
scas
push
loopne
mov
out
dec
cs
cmpsb
inc
mov
mov
iret
ficoms
adc
stos
fidivl
insl
mov
loope
or
hlt
dec
jle
and
pop
xchg
jl
add
and
aad
mov
xor
mov
mov
xchg
sub
cli
je
xchg
out
sbb
cli
mov
and
movsl
in
pop
mov
xchg
call
mov
sbb
pop
out
or
or
xor
cmp
pop
or
aad
push
popa
stc
out
mov
loopne
fimuls
dec
stc
cmpsb
sbb
push
loop
adc
aam
and
cli
ret
outsb
gs
daa
out
inc
cmpsl
sub
test
lock
xor
pop
insl
negb
pop
mov
xor
dec
mov
test
mov
jo
mov
or
test
insl
xchg
cld
bnd
test
inc
or
fsub
add
outsl
mov
jne
push
lods
lods
lds
clc
cmp
add
sti
push
add
add
jmp
dec
int3
push
jmp
push
cli
push
int
lea
jbe
mov
push
push
mov
pusha
add
xchg
insl
and
stos
clc
cmpsl
xlat
loope
stc
sahf
call
lahf
ds
aad
mov
push
repnz
pop
arpl
das
adc
insb
fwait
cli
lcall
xchg
shlb
out
repz
pop
jns
push
mov
dec
mov
out
outsb
jmp
mov
in
lds
roll
in
cmp
and
mov
mul
inc
iret
sbb
push
sbb
jb
pop
loopne
roll
xor
mov
jl
mov
inc
push
mull
mov
and
sbb
inc
lea
sbb
pop
mov
sti
lods
xchg
add
je
ret
fdivs
dec
xchg
rorl
pop
adc
dec
pop
sub
scas
leave
out
mov
adcl
pop
push
ffree
repnz
inc
dec
jae
inc
mov
arpl
add
std
enter
rclb
dec
xchg
lret
jecxz
mov
dec
mov
xchg
leave
mov
lahf
cmpsb
call
jg
jns
fadd
jl
fldcw
imul
sbb
shrb
jl
mov
in
arpl
cmc
jg
icebp
sbb
or
jnp
inc
dec
jns
pop
xor
cmpsl
jnp
das
and
daa
dec
popa
cli
cmc
shrb
ficoms
add
mov
pop
js
xchg
test
loopew
push
movsb
out
js
jno
mov
mov
inc
add
mov
mov
pushf
in
jge
and
jae
lahf
push
roll
fidivrs
mov
push
ljmp
rolb
push
loop
lcall
dec
mov
rorb
lock
cs
je
imul
shrb
test
push
pop
mov
and
and
lock
sub
cltd
add
int3
cmc
or
adc
or
and
sbb
sbb
xchg
cmp
push
mov
nopl
lods
mov
dec
sahf
jmp
call
adc
mov
js
andb
mov
or
dec
arpl
sti
jbe
iret
adc
jg
cmp
lods
fwait
mov
lret
dec
sbb
pop
sub
jp
inc
adc
mov
int
test
dec
inc
mov
jp
call
test
lret
jge
fwait
in
leave
jnp
and
fstpl
pop
push
mov
mov
dec
xchg
icebp
mov
aad
xchg
js
fcompl
jecxz
cltd
inc
aad
mov
fsubr
inc
insb
and
cmc
adc
leave
subl
sub
cmp
adc
and
repz
adc
test
pop
cltd
outsb
std
sub
push
sbb
push
add
xchg
test
fistl
loope
add
or
sub
xchg
scas
mov
std
enter
lock
aaa
loope
call
hlt
mov
cmp
add
mov
adc
in
hlt
xchg
fwait
js
push
cmp
shr
lea
xlat
add
sbb
out
out
dec
pop
dec
cmp
pop
in
scas
cmp
cli
daa
mov
iret
xchg
jge
sub
xorb
sub
inc
push
push
jle
call
xor
xor
loopne
daa
mov
call
fistps
popa
daa
mov
inc
jg
nop
adc
inc
outsb
pop
pop
add
xchg
mov
in
dec
mov
hlt
es
mov
into
xchg
fwait
mov
add
std
icebp
pop
dec
fwait
xor
pop
lea
clc
push
fdiv
lahf
pop
std
fisubs
push
ret
or
mov
fmul
mov
dec
cmp
and
xchg
pusha
pushf
lods
push
mov
mov
ret
push
sub
lods
out
ficoml
dec
xchg
lds
sti
dec
jl
pop
xor
mov
leave
movsb
jle
inc
xor
les
mov
movsl
movsb
mov
adc
jae
cmpsl
or
pop
mov
iret
push
orl
bound
mov
lret
add
mov
outsl
cwtl
pop
add
mov
mov
push
flds
mov
xchg
jg
test
arpl
mov
sbb
rorl
insb
sbb
dec
xchg
ja
jg
dec
ljmp
filds
jge
fs
pop
or
jecxz
icebp
sbb
and
mov
mov
lret
xor
mov
gs
jb
inc
sub
mov
lcall
pop
mov
pop
les
xor
cld
test
xchg
mov
dec
xchg
clc
enter
jp
test
or
jae
js
loope
mov
ja
pop
mov
dec
dec
test
xor
cmp
adc
or
inc
fcmovb
jle
fnstenv
and
mov
mov
ret
jns
add
xchg
or
loope
push
movsl
bound
popf
add
sbb
cmc
jp
dec
leave
cmp
mov
xchg
and
mov
mov
pop
mov
adc
in
xchg
aad
push
in
cltd
or
mov
push
ficomps
popf
mov
cltd
insl
pop
and
daa
ja
xchg
cmpsb
inc
ljmp
dec
aas
adc
sub
sti
jno
push
stos
and
fiaddl
mov
rcrl
idivb
pop
sti
popf
mov
pop
mov
xor
orl
mov
pop
aam
xchg
push
dec
or
mov
push
mov
arpl
pop
adc
push
or
into
mov
shrb
mov
and
dec
cld
imul
popf
mov
test
mov
xor
fistps
sub
fcmovb
out
mov
out
aaa
push
add
movsl
or
and
int
push
aad
jae
in
push
into
sub
imul
mov
add
lea
mov
sbb
sbb
rorb
aas
outsb
mov
cmp
pusha
iret
push
cmp
mov
pop
popf
and
push
loope
subl
xor
bound
or
mov
jl
fnstenv
std
dec
nop
js
jl
nop
mov
in
pop
inc
jmp
je
xchg
xor
iret
cmpb
or
lea
aam
mov
leave
aam
jno
clc
enter
inc
lock
adc
sbb
and
aas
lock
adc
xchg
test
sbb
push
and
push
mov
shll
popa
adc
inc
movsl
mov
pop
out
jae
xchg
xchg
inc
lods
rcrl
cli
rolb
xchg
lock
xchg
mov
outsl
and
inc
in
movsb
xchg
ficoms
mov
sbb
push
xchg
cmpsb
jo
push
push
push
fmuls
ret
mov
dec
xor
insl
pop
icebp
outsb
aad
ret
andb
xor
ljmp
jno
call
push
adc
mov
mov
dec
clc
in
xlat
cmp
pusha
or
or
into
cltd
lods
pop
iret
mov
fstpl
or
mov
sahf
movsb
bound
push
lods
lods
cmpsl
pop
addb
fs
mov
mov
icebp
sbb
jecxz
imul
pop
into
test
mov
xor
push
popa
aad
inc
dec
mov
arpl
int
fsts
xor
mov
jmp
cmpsl
sbb
out
jo
mov
xor
ret
mov
into
ljmp
mov
push
jns
pusha
pop
movsb
inc
add
xchg
sub
aaa
xchg
sar
mov
mov
xor
daa
push
test
divl
and
sbb
or
push
sub
fistpl
test
loopne
loop
cs
rcr
pop
bnd
bound
cmp
dec
stc
loop
pop
inc
dec
mov
in
sub
test
cmp
sbb
loopne
jae
cmp
fcoms
mov
xor
lret
mov
push
sub
mov
sub
bound
xchg
pusha
int
and
push
ret
mov
es
sub
pop
adc
jb
mov
mov
rclb
stos
rcrb
and
push
insl
cli
stos
jle
aaa
mov
aad
and
stc
dec
outsl
testl
mov
rcrl
js
cmp
in
cmp
shrb
iret
fs
movsl
mov
jmp
ss
and
xorb
sub
repnz
aad
mov
xchg
mov
sub
pop
stos
xchg
xchg
and
or
sub
outsb
hlt
out
nop
sbb
sbb
sbb
pusha
ret
cmpsb
test
jle
icebp
xor
js
shl
fldl
xor
mov
or
enter
sub
push
cmpsb
ret
jle
xor
repnz
fsubs
movsl
inc
sahf
insl
cli
pusha
sub
push
sub
je
pop
jg
and
dec
sub
pop
lock
cmp
imul
iret
test
cmpsb
popf
ror
jmp
scas
movsl
push
fwait
cmp
push
adc
shrl
add
clc
lods
inc
push
sahf
mov
add
jae
cld
mov
xor
rcll
add
filds
jbe
cmp
clc
mov
jnp
cli
into
lds
idivl
or
cmp
xchg
das
or
push
push
negb
pushl
test
out
subb
clc
push
and
shrb
inc
call
xor
mov
in
loop
gs
pop
inc
arpl
test
cmp
pop
rcll
cmp
imul
and
flds
and
jmp
cmpsl
lahf
push
xor
and
pop
pop
xchg
aad
push
fs
ja
inc
cmp
sbb
mov
or
mov
mov
jb
mov
das
or
push
and
and
jge
mov
mov
dec
jmp
ret
dec
or
mov
faddl
outsl
jne
imul
push
xchg
add
lcall
imul
mov
mov
jge
mov
adc
jnp
ljmp
mov
aam
xor
mov
imul
test
xor
sub
jne
cmc
and
lahf
fcoml
movsl
and
std
dec
and
into
testl
inc
or
popl
add
push
movsl
xchg
xchg
jp
test
sub
xchg
shlb
adc
and
mov
aad
lods
pop
orb
or
push
in
ds
pop
daa
sub
mov
jb
lds
enter
pop
mov
mov
daa
aas
std
jmp
mov
sbb
xor
dec
sti
lea
xchg
adc
jnp
cmp
out
jmp
mov
popa
pop
sub
push
jbe
arpl
pop
ja
arpl
out
add
popf
pop
cmp
sub
cmp
and
lret
adc
popa
mov
mov
add
aad
leave
xor
push
mov
cld
dec
idivb
jge
movl
inc
stc
stc
sti
scas
inc
fisubl
loopne
lcall
lods
ret
and
mov
fldcw
pop
sbb
fistps
cmp
fwait
jl
mov
nop
sahf
bound
inc
outsl
push
inc
sbb
sbb
pop
lcall
xchg
ja
hlt
jl
cmc
dec
stos
lcall
inc
cmp
fimuls
xchg
xor
inc
xor
jmp
out
test
jg
jno
add
jp
mov
push
add
int
shrl
jnp
pop
xor
je
xor
add
inc
andb
cmpsl
insl
or
and
mov
xchg
xchg
add
enter
lahf
dec
mov
das
jle
out
push
mov
xor
fdivs
outsl
and
out
andl
and
mov
call
sub
and
sbb
subl
ds
outsl
and
outsl
aaa
aad
sbb
aam
cltd
stc
in
lahf
pop
mov
push
stos
mov
popa
std
mov
or
sbb
push
in
mov
cmp
insb
call
cwtl
call
dec
lock
xlat
cmp
jp
mov
mov
add
imul
ret
jno
cwtl
leave
push
cmp
fsubrl
dec
dec
sub
stc
into
xor
xor
mov
negl
mov
movsl
lock
subb
pop
sbb
shrw
pop
add
xchg
and
jb,pt
outsb
scas
dec
scas
pop
cli
in
and
dec
daa
fsubr
bound
push
xor
pop
mov
ret
cmp
inc
out
testl
and
sub
push
sbb
shll
xchg
push
vpunpckhwd
bound
loopne
push
push
aad
ja
rorb
pop
sub
jge
sbb
inc
and
jl
outsl
out
faddl
mov
cmp
pop
aad
inc
pop
in
mov
outsb
pushf
rclb
mov
mov
jne
nop
hlt
xchg
adc
jns
push
push
jecxz
mov
lods
adc
mov
roll
ds
into
dec
sub
mov
sub
sub
xchg
outsb
add
dec
inc
mov
imulb
mov
pop
out
add
and
xsavec
jb
shr
push
adc
push
jl
les
sub
or
mov
and
sbb
pop
in
inc
xlat
loope
les
and
sub
cmp
es
xor
mov
jno
push
inc
iret
hlt
dec
add
add
push
sub
cld
mov
mov
jo
sub
cli
and
sbb
mov
pop
mov
add
in
push
inc
mov
mov
adc
out
or
icebp
scas
xchg
xchg
push
fbld
inc
push
mov
mov
jl
mov
movsl
xchg
pop
fimuls
and
push
sbb
fs
fidivrs
in
or
inc
dec
push
and
hlt
push
jno
sbb
popf
sbbb
push
pop
add
ja
repz
and
sub
push
xor
testb
das
cltd
push
xor
and
push
pop
push
ljmp
cld
mov
or
cld
xchg
jp
push
dec
xor
sbb
add
jmp
mov
ret
cmp
ss
and
bound
dec
das
dec
pop
push
or
pop
push
jmp
inc
fdiv
push
out
iret
movsl
mov
and
adc
mov
mov
imul
and
in
pop
mov
movsl
push
stos
mov
pop
call
in
mov
add
adc
sbb
es
pop
and
ss
pop
stc
sbb
add
cmp
fimull
mov
jb
test
cmpsl
ret
mov
pusha
mov
dec
push
rcr
and
in
out
sub
ror
xor
add
aaa
xchg
enter
xchg
inc
or
push
cs
scas
xchg
xchg
sti
mov
and
and
cmp
push
mov
shlb
jle
jmp
xchg
repnz
adc
cmc
js
pop
fwait
jb
mov
dec
int3
testl
into
and
add
mov
jo
repnz
cmp
sub
sti
sub
adc
daa
mov
push
rclb
xlat
fxch
mov
inc
sbb
aam
mov
push
pop
xor
and
xchg
cmp
scas
dec
push
cli
cmc
sti
jne
insb
adc
xchg
hlt
popa
lods
cld
jb
adcb
add
jne
arpl
adc
mov
sahf
cli
add
shrl
mov
jle
xor
inc
xchg
mov
daa
shl
dec
sbb
xlat
pop
xor
push
nop
fadds
insl
ret
inc
or
push
and
mov
stos
decl
fucomi
add
xchg
xor
movsb
add
push
mov
shrb
gs
in
xchg
int3
inc
mov
sahf
and
cwtl
dec
xchg
mov
pop
popf
push
mov
pop
aaa
sbb
sub
sub
cwtl
add
int3
or
dec
jno
and
sahf
or
sahf
push
or
add
pop
push
fs
clc
lahf
cmp
and
test
jae
cmp
push
arpl
leave
cs
stc
lds
mov
subb
dec
dec
lahf
jle
sbb
inc
xchg
mov
pop
xor
mov
addb
and
add
rcrb
push
xlat
mov
push
loopne
jecxz
ret
cmp
int3
add
cwtl
shlb
jns
pop
and
mov
shlb
cmp
pop
in
sub
cmp
jae
fs
shll
cmp
gs
or
cli
cmp
mov
jg
repz
inc
test
xor
popa
setle
pop
insl
pop
dec
dec
add
dec
pop
or
mov
add
jns
xorb
negl
mov
gs
pushl
mov
sarb
shll
mov
fadds
sbb
pop
or
mov
add
aam
cs
es
or
ret
xor
ds
mov
rcrl
pop
xorb
dec
pusha
sbb
loopne
jg
call
cmp
push
mov
fistpl
es
in
cs
shlb
divl
lock
jge
or
loop
enter
inc
or
jecxz
or
inc
inc
inc
xchg
mov
lret
mov
mov
push
or
mov
sbb
inc
lret
sbb
jle
pop
outsb
pop
pop
sbb
mov
push
les
stos
xchg
lahf
adc
leave
add
push
mov
dec
add
sti
daa
mov
adc
sub
add
repnz
ficompl
mov
and
and
js
not
cli
jmp
nop
cs
or
jle
pop
adc
cmp
adc
je
mov
dec
mov
mov
inc
into
andl
cmp
in
fs
push
imul
mov
mov
mov
cs
or
mov
or
pop
or
outsb
sub
add
mov
ljmp
das
dec
fnsave
fldcw
ds
lods
pop
nop
or
jnp
mov
push
push
test
sub
insl
rclb
mov
jle
call
stc
mov
inc
fwait
imulb
add
cmp
movsl
scas
enter
imul
jne
ss
sti
test
jno
jl
mov
xor
fstpt
stc
mov
lods
fisubl
dec
ficoml
sbb
sub
pusha
sub
je
sub
or
sahf
cmp
inc
test
jno
enter
xor
icebp
xchg
cmp
xchg
cmp
jg
adc
test
cmpsb
jne
into
adc
icebp
push
sub
mov
inc
bound
divl
pop
and
test
nop
cmpsl
add
and
shl
sbbl
pop
ja
mov
jno
dec
xor
mov
aam
adc
mov
sti
adc
int
push
xchg
jle
filds
test
pusha
pop
mov
scas
lods
sub
stos
mov
mov
aam
mov
or
sbb
push
push
mov
into
lahf
sub
outsb
std
outsb
lahf
fwait
adc
and
inc
add
insb
or
mov
cmpsl
fldcw
pop
in
pop
xorl
icebp
inc
mov
mov
sti
push
aad
in
and
les
shrl
lret
dec
and
hlt
mov
lcall
adc
fisubrl
lahf
xor
aam
jle
insl
dec
xor
push
jo
push
movzbl
adc
sbb
mov
xchg
xchg
inc
fmull
xor
std
int
jl
push
xchg
int
out
outsl
out
mov
out
das
test
scas
adc
in
push
loopne
lret
or
icebp
int
ja
dec
dec
popa
ret
bnd
sub
imul
xlat
xorb
outsl
mov
sbb
sbb
lods
int3
add
mov
test
stc
mov
inc
sahf
mov
lcall
pop
rcrl
mov
jno
jge
cmc
xor
sub
xchg
adc
test
and
push
xchg
cmpl
cli
sub
add
inc
mov
lret
clc
lds
js
lods
call
or
xorl
leave
and
sti
mov
lods
mov
mov
sub
ja
dec
xchg
jo
xchg
pop
loopne
jne
xchg
mov
stos
dec
xlat
inc
cltd
cmp
pop
sub
sub
mov
sti
inc
lds
aaa
adc
aad
outsb
pop
pop
push
pop
inc
jp
js
xlat
dec
cmp
testb
and
pop
vpcmpgtd
outsb
jecxz
mov
or
fsubs
jae
test
sbbl
pop
adc
sub
dec
adc
add
push
insl
aam
mov
adcl
fstpl
in
jp
pop
inc
jp
or
cwtl
pop
mov
pop
mov
fucomip
adc
jae
lahf
jo
jg
test
lods
sub
aad
xchg
or
clc
sti
arpl
data16
subl
int
js
adc
ret
jnp
cs
inc
mov
dec
fiaddl
popf
ror
push
xor
jo
idiv
pop
out
sar
es
loop
or
add
xor
std
pop
lcall
and
cltd
xchg
mov
lods
jae
in
lahf
add
out
cmpsb
divl
inc
je
inc
inc
jmp
decb
cmp
ret
sub
stos
dec
loopne
xchg
lahf
mov
jns
rcrb
and
and
push
ja
ret
mov
enter
sub
outsl
cld
xchg
mov
mov
movsb
roll
jns
mov
adc
lret
movsb
fwait
sbb
pushf
inc
push
bound
dec
push
jmp
and
fdivs
push
lock
lret
jl
adc
lds
aaa
adc
pop
scas
fistl
js
push
cmp
add
jae
jl
ret
clc
mov
andb
and
jns
arpl
jo
sub
mov
mov
repnz
sarb
cmp
mov
dec
mov
fwait
xor
jge
cmc
cmp
sbb
mov
insb
ljmp
cmpl
out
xchg
or
fdivrs
xor
adc
and
les
xchg
test
or
decb
aaa
notl
arpl
js
jnp
wrmsr
nop
stos
fisubrl
hlt
push
imul
pusha
xchg
sub
mov
loop
lds
jle
xor
int
mov
hlt
shlb
push
sub
es
es
or
int
scas
testb
jns
xorl
xor
cltd
movsl
xchg
dec
lret
sub
rcrl
fsts
dec
xor
cli
jl
adc
pop
push
lods
jae
pop
xchg
adc
and
inc
xchg
popa
xor
sbb
repz
push
inc
cmp
pop
mov
repz
add
rcrl
dec
outsb
adc
rcll
cs
xor
sub
mov
cmp
jg
jne
out
pop
jl
mov
xchg
outsb
add
daa
mov
daa
push
sbb
xor
mov
repz
mov
orb
xchg
push
cmp
or
adc
gs
mov
pop
lret
ljmp
mov
in
sarl
xor
mov
mov
jno
add
dec
jecxz
xlat
mov
jp
aas
inc
xor
pushf
leave
jne
mov
sub
jne
add
xlat
test
dec
in
dec
int3
adc
push
out
jge
rcrb
test
mov
lcall
push
test
ljmp
and
push
jnp
fists
ss
mov
push
icebp
lea
dec
or
push
test
pusha
sbb
push
add
jp
dec
or
neg
pushf
xlat
sahf
sub
in
cwtl
inc
subl
dec
lds
mov
stc
pusha
stos
pop
sbb
gs
repnz
jle
or
mov
inc
xor
mov
or
addps
xor
stos
fwait
xchg
cmp
retw
cwtl
call
pop
push
in
sbb
out
aad
mov
and
aaa
jno
mov
shll
pop
jg
ror
cs
mov
mov
cmpsl
xlat
mov
pop
pop
mov
pusha
mov
cld
and
mov
push
push
jge
outsb
and
scas
cmc
xchg
repz
and
jle
push
lcall
sbb
fisttpl
pusha
jne
ret
pop
inc
adc
pusha
and
pop
cmpb
xchg
arpl
pop
add
cmp
loopne
pop
mov
pop
jecxz
mov
rcrl
jae
mov
jecxz
sti
jge
jecxz
andb
fbstp
in
aam
adc
movsb
mov
push
dec
jmp
mov
mov
out
pop
test
push
jns
and
dec
loopne
push
lcall
cld
or
lea
jle
roll
movsl
insl
cwtl
lods
inc
mull
call
subl
adc
cmp
add
inc
dec
aas
scas
sbb
in
cmpsb
inc
pop
mov
pop
std
cmc
pop
ror
mov
inc
cwtl
popf
push
pop
inc
jg
lods
insb
sub
test
fisttpl
mov
xlat
loopne
ret
cld
fimuls
mov
fcomip
push
loop
mov
leave
or
lock
push
cwtl
cwtl
fadd
xchg
push
mov
or
inc
jo
jno
inc
mov
cld
movsl
dec
sub
ja
int
xor
gs
mov
ret
inc
pop
les
fwait
imul
and
mov
adc
pop
es
or
and
sub
leave
xor
xchg
in
add
and
es
xor
popf
push
std
xchg
mov
decb
sub
nopl
int3
push
jg
jbe
push
xor
xor
and
mov
adc
leave
or
cmp
add
iret
les
daa
in
cmp
ss
xchg
jae
pushw
jg
mov
fs
dec
xor
dec
jle
lret
test
jb
lret
imul
test
jae
inc
mov
loop
sarl
cwtl
mov
ds
insb
mov
xor
and
jge
lods
and
dec
js
leave
lods
pop
roll
les
fwait
mov
sbb
sub
cmp
adc
in
fldcw
test
jle
scas
sub
nop
lds
out
cli
cmp
jne
mov
fs
and
push
mov
xchg
mov
in
fidivl
repz
inc
lea
mov
cmp
popa
add
pop
cmp
lcall
lods
push
nop
jle
mov
inc
mov
lds
dec
push
mov
pop
xchg
mov
test
arpl
or
lret
mov
adc
push
cld
mov
push
das
jb
decb
jge
mov
in
push
push
stc
lret
xchg
mov
push
cmp
cmpsl
enter
lods
xor
je
hlt
outsb
cmp
data16
xchg
inc
mov
das
test
mov
cmp
fisttpl
outsb
xchg
pop
pop
mov
mov
inc
loope
jne
movsl
das
or
subl
jmp
inc
jnp
mov
negb
adc
cs
ret
test
adc
mov
sti
inc
shl
sti
outsl
decb
shlb
jmp
in
mov
lahf
or
loope
pop
and
xorb
fisubl
clc
test
shlb
sti
mov
insl
addr16
xchg
sar
or
nop
jb
fdivrs
push
add
out
enter
adc
adc
mov
imull
pop
lahf
es
dec
stos
sahf
js
add
movsb
pop
lods
pop
iret
jecxz
mov
cli
jl
push
sbb
mov
push
ficoml
daa
mov
les
push
push
ret
jecxz
and
dec
scas
sbb
shlb
mov
pop
pop
je
mov
dec
nop
fdivrl
push
mov
and
xchg
and
add
popf
xor
addr16
add
cmpsl
data16
jg
popa
cmpsb
rcl
mov
dec
scas
bound
in
and
hlt
push
cmp
outsb
pop
mov
push
push
adc
add
pop
fstl
xchg
inc
sub
pop
inc
stc
fsubrs
xchg
pop
int3
call
xor
jo
cli
xchg
packsswb
mov
fwait
and
and
dec
cmpsl
ss
je
int3
sbb
mov
and
cmp
leave
jge
xchg
test
jg
loope
mov
cld
push
adc
xchg
cmp
mull
popl
imul
mov
ret
mov
cli
adc
pop
sub
sub
inc
or
pop
dec
mov
lahf
test
xchg
pop
imul
fisubs
leave
pop
mov
jp
cltd
fimuls
loop
and
lcall
loop
std
fcomi
lahf
mov
repnz
jne
out
mov
sbb
test
aas
push
mov
pop
pop
push
pop
iret
outsb
push
sbb
push
push
ds
ds
sahf
sbb
cmpsb
mov
lods
inc
xor
add
mov
out
push
add
pop
mov
pop
xchg
repnz
cmc
iret
mov
inc
std
out
in
outsl
push
jmp
insb
mov
pop
push
adc
or
xchg
rorb
and
mov
or
std
sbb
push
mov
loope
inc
xor
jo
int
or
insb
pusha
and
mov
fnsave
and
sbb
adc
loop
xor
decl
mov
jp
or
mov
les
push
outsb
int
fimuls
xchg
push
xor
popa
mov
sahf
jnp
bound
cmp
into
stos
add
leave
push
mov
popa
and
lret
movsl
enter
cmp
jnp
mov
scas
dec
sbb
inc
ret
jne
cmpb
loop
shr
pop
aad
pop
push
test
rorl
outsb
inc
mov
mov
popa
jg
imul
jecxz
push
imul
mov
push
repz
fldenv
scas
mov
sbb
outsb
fidivs
cmp
out
jmp
pop
dec
ficoml
movsb
test
mov
iret
pop
push
not
or
enter
jmp
das
sub
iret
lds
aam
fisubrl
lcall
clc
inc
orb
push
mov
add
mov
fstpt
pop
and
loop
insl
add
roll
inc
ret
adc
mov
dec
mov
pop
pusha
das
cltd
flds
pop
jno
sub
fsubl
ret
lea
xor
adcb
in
mov
xchg
in
jb
loope
imul
addr16
mov
dec
jnp
push
jl
mov
loopne
inc
xor
or
add
pushf
mov
jo
fildll
ret
xor
bound
push
dec
mov
in
xchg
cmp
frstor
mov
sub
adc
pop
mov
sbb
sbb
repnz
inc
mov
loopne
aad
inc
mov
push
xor
fisubl
cmp
sub
cmp
jb
mov
jne
pop
xorb
repnz
ficompl
scas
out
rclb
into
inc
or
xchg
cs
or
xchg
out
fldt
push
mov
cli
dec
push
ss
out
stos
dec
jg
stos
pusha
push
lea
and
push
fisubrs
leave
testl
jecxz
jns
mov
xchg
adc
stc
jl
cmp
mov
xor
aaa
mov
adc
insl
addps
push
sarl
cwtl
ljmp
xchg
mov
mov
and
xchg
xor
sub
movsb
dec
xor
jbe
xor
pop
mov
imull
sbb
cli
loopne
lock
push
sbb
and
adc
dec
daa
jo
mov
stos
lock
cltd
jle
sarl
inc
inc
jge
sbb
bound
push
push
movsl
pop
scas
pop
sub
out
cmc
sub
test
inc
insb
pop
xor
fiadds
dec
fidivrl
cli
mov
push
xchg
enter
stos
hlt
xor
xor
sahf
rorb
mov
xchg
mov
inc
and
jbe
xchg
or
jmp
cmp
and
push
xchg
push
mov
mov
jbe
xchg
adc
test
clc
mov
xchg
in
cld
stc
jb
test
or
call
sbb
mov
or
test
jnp
jno
dec
mov
cmpsl
inc
ljmp
and
psubd
imul
hlt
sbb
ljmp
push
js
and
arpl
mov
test
jge
pop
rcrb
lods
mov
pop
and
adc
cmp
cltd
push
push
jge
push
fbstp
inc
pop
aad
lock
lods
out
push
sbb
push
pushl
add
lahf
mov
in
mov
fildl
mov
mov
jp,pn
cs
jo
sbb
shrb
pop
pusha
lahf
fsubrs
xor
movsb
mov
fildl
pop
clc
pop
cwtl
rorl
xor
ljmp
mov
into
cmp
subb
add
adc
jnp
fnsave
jp
jp
adcl
int3
fisubs
mov
outsl
addr16
movl
pop
and
add
hlt
aaa
jp
add
jge
mov
ss
loope
push
pop
outsl
inc
in
and
or
je
and
adc
das
push
dec
cmc
insb
cwtl
mov
push
mov
fimuls
xchg
and
arpl
adc
enter
or
mov
push
or
scas
mov
lds
loopne
and
pop
icebp
in
int3
rcrb
rolb
mov
pop
fnstenv
xchg
and
push
jae
inc
or
sahf
das
stos
sbb
mov
xchg
in
and
push
xchg
sub
pop
inc
insb
xchg
sbb
pop
and
mov
cli
psraw
push
imul
pop
jno
mov
pushf
aad
icebp
sahf
loop
js
roll
inc
neg
and
pop
jecxz
loopne
faddl
out
mov
jp
pop
sar
jmp
imul
out
lock
xchg
ds
mov
cld
sbb
push
mov
nop
std
pop
inc
in
nop
adc
or
insl
dec
xchg
imul
fwait
jg
cs
ja
adc
adc
inc
shrl
inc
fsubp
call
dec
sub
mov
cli
mov
xor
mov
or
int3
inc
jecxz
adc
ljmp
mov
int
dec
in
inc
fmuls
push
adc
imul
jecxz
imul
daa
xchg
push
pop
pop
xorl
and
aas
orl
jo
or
push
outsl
rcrl
sbb
cs
jbe
aam
xor
sbb
adc
jno
mov
jns
xchg
pop
int3
outsb
stos
movsb
mov
sub
iret
movsl
add
and
jmp
cli
xchg
add
inc
ds
adc
push
xchg
fldcw
sbb
rclb
icebp
test
lds
jae
sub
jno
scas
seto
lods
cli
testl
and
dec
push
loope
mov
mov
sbb
jp
jecxz
mov
clc
out
push
sbbl
pop
mov
ficomps
pop
ja
dec
lahf
xor
mov
sub
cmp
mov
push
inc
movl
repz
jns
xorb
mov
mov
fiaddl
ret
push
arpl
pop
shrl
insb
xchg
int
cmp
movsl
lods
lock
xchg
scas
pop
dec
stos
mov
push
push
add
pop
into
xor
popa
aam
cld
mov
rolb
fstl
dec
xchg
sub
lock
sbb
cmpsl
pop
sub
in
mov
mov
xchg
pop
inc
mov
rcl
enter
das
int
adc
nop
sub
mov
roll
mov
sbb
lods
sbb
aas
popa
adc
dec
mov
adc
fidivrs
xor
mov
xor
xlat
adc
push
push
adc
jo
insb
cmpsl
les
in
insb
jo
js
fsub
ja
sub
lock
andl
out
sbb
mov
out
add
pop
dec
divl
inc
rorb
sbb
daa
arpl
or
sar
add
ds
enter
fisttpll
imul
popf
stos
call
jbe
xor
int
jmp
leave
stos
loope
pushf
push
int
ret
mov
fs
pushf
xchg
or
aaa
xor
fisubl
frstor
jge
jb
add
cmp
inc
scas
xchg
sub
mov
xchg
fdivs
int
mov
inc
mov
adc
fstpt
mov
iret
test
mov
push
push
repnz
je
ja
mov
jmp
pop
repz
imul
jne
push
jns
mov
add
in
mov
imul
jl
jb
cld
gs
mov
shl
push
fldt
xor
ja
ljmp
fisttpll
jb
sbb
mov
pop
ds
ffreep
pop
mov
mov
add
rolb
divl
clc
jnp
dec
nop
lods
int3
mov
xchg
sub
stos
dec
push
loop
insl
leave
into
mov
mov
mov
sbb
cwtl
mov
or
in
and
push
bound
ret
sti
add
sahf
sbb
xchg
mov
sub
out
idivl
insb
in
mov
mov
mov
push
out
and
inc
cwtl
add
xchg
xchg
mov
outsl
cmp
arpl
mov
scas
push
out
inc
add
xchg
repz
neg
lret
jg
cmp
or
dec
in
jb
and
xchg
js
jb
ror
or
adc
mov
subb
pop
iret
pop
lret
leave
xchg
push
add
arpl
cmp
outsb
dec
shlb
inc
jg
lods
out
out
push
mov
or
insb
fucomi
cmpsb
push
bound
pop
mov
ja
jmp
cld
xorb
movsl
xor
sub
adcb
in
jns
scas
incb
push
xchg
push
insl
add
pushf
cmc
add
mov
xchg
mov
cmpsl
adcl
or
xlat
and
insb
rcrl
jae
fdivrs
imul
inc
xlat
leave
inc
enter
lds
in
push
push
movsb
bound
div
out
les
mov
xlat
in
pushf
in
xor
push
cmp
mov
sbb
lcall
fidivs
xchg
call
pushf
or
push
ja
push
stc
xchg
cltd
push
jl
mov
fsubs
pop
shlb
cmpsb
out
mov
out
lcall
jno
int3
pop
jbe
push
sub
sub
sub
xor
aas
ss
rol
ret
or
test
jmp
shll
mov
cmp
or
dec
pop
push
cwtl
clc
xor
xor
sub
pusha
jmp
jmp
sahf
lods
sub
mov
shll
arpl
js
out
or
mov
push
ds
xchg
pop
mov
fyl2xp1
jns
mov
jnp
in
jmp
stos
es
fbld
pop
repz
mov
stos
scas
sbb
adc
push
popf
incb
subb
pop
mov
lcall
popa
or
dec
mov
in
fwait
and
seta
fs
ljmp
or
jle
data16
mov
test
jmp
sbb
or
filds
cmp
aaa
hlt
outsb
push
mov
jno
xor
test
nop
movsl
sbb
fisubs
movsl
xor
or
mov
adc
add
mov
pop
adc
arpl
mov
fcmovne
mov
jnp
movsl
xchg
test
loop
cmpsb
jns
xor
mov
into
data16
xchg
xchg
js
mov
rorb
pushf
loopne
pop
mov
cli
das
repz
sub
in
and
mov
andl
jnp
xor
dec
ficoml
mov
pop
xchg
ss
xchg
inc
mov
lahf
flds
or
mov
xor
enter
aad
outsb
jbe
cmpl
push
sbb
and
xchg
inc
adc
mov
push
push
jnp
or
lret
pushf
daa
outsb
out
fcom
shrb
data16
ss
negb
cmp
pop
fidivrl
jp
insb
push
mov
mov
mov
sub
shll
xor
leave
jb
sahf
lods
xor
loopne
test
inc
cmc
xor
inc
jb
mov
mov
pushf
pop
clc
push
inc
mov
sub
mov
dec
inc
lcall
add
inc
mov
add
shlb
jbe
mov
dec
sahf
jnp
mov
dec
adc
movsl
les
sbb
insl
in
ret
mov
pop
pop
cwtl
popl
jne
ds
cld
mov
pop
addl
cwtl
cld
push
jno
mov
adc
mov
push
and
sub
mov
and
mov
jno
jecxz
cld
icebp
mov
xchg
adcb
push
fsts
cltd
add
in
dec
stos
xchg
push
cltd
iret
pop
cwtl
repz
test
cld
mov
lret
sbb
adc
dec
in
hlt
lds
mov
xor
sbb
imul
imul
imul
dec
out
jp
fnsave
idivl
aas
or
xor
adc
mov
mov
fiadds
adc
and
mov
shll
jmp
ret
out
fildl
mov
adc
mov
repz
xor
mov
add
ja
inc
xchg
push
cmpsl
adc
cmp
sarl
mov
push
adc
inc
and
pop
movsl
je
es
mov
adc
mull
push
mov
out
adc
or
push
mov
test
xchg
add
mov
add
lret
cld
or
fs
adc
mov
imul
ds
imul
jb
gs
mov
mov
mov
aad
ret
cmpsb
fisttps
inc
es
hlt
pop
and
fidivl
mov
stos
stos
mov
inc
test
fsub
sub
cmp
dec
insl
and
sbb
xor
pop
jle
push
dec
nop
pop
mov
lds
movsb
cld
inc
loope
int3
mov
std
aaa
push
mov
pop
mov
adc
incb
mov
jae
data16
mov
adc
mov
push
outsb
repz
jl
inc
mov
aas
and
mov
inc
add
pop
push
jle
ss
add
cmp
pop
add
and
repz
jb
imul
and
add
push
jmp
ret
rclb
sahf
int3
dec
sub
jnp
mov
dec
xor
dec
or
jmp
mov
xchg
shlb
out
sub
mov
and
mov
dec
adc
inc
mov
negb
jle
xchg
pop
repz
call
out
inc
imul
adc
add
ret
jae
cmp
and
lcall
imul
movlps
ja
out
jo
lods
push
dec
cmp
and
push
cmpsl
insb
dec
lods
in
movsb
jns
adc
bound
or
movsl
mov
or
int
int
and
in
negb
push
and
sti
enter
mov
shl
ss
add
dec
insl
outsb
or
sbb
mov
push
mov
cmc
or
andl
adc
test
fmuls
push
aas
pop
subb
cs
xlat
dec
out
movsl
sub
pop
aad
addr16
xor
js
inc
int
adc
sub
data16
lds
sbb
add
sar
in
sti
mov
mov
jae
movsb
sub
jno
rcll
cmp
rorl
mov
jmp
jnp
cmp
out
push
lret
jno
lret
and
and
xor
adc
xchg
cmpb
pop
mov
xchg
mov
mov
scas
scas
mov
xchg
mov
sbb
push
or
xor
xchg
imul
jmp
aad
fidivrs
sar
xlat
rcl
dec
mov
loopne
fdivl
and
das
xchg
repz
jb
add
or
inc
dec
or
out
pop
push
pop
fs
cld
push
in
adc
mov
pop
push
cwtl
loope
mov
je
std
sbb
ljmp
add
outsb
and
out
xchg
mov
daa
movl
push
mov
fxch
hlt
xchg
jb
push
adc
cmp
fisubrl
cs
movsl
mov
sbb
mov
xlat
arpl
testl
push
push
push
lret
jecxz
mov
xor
negb
mov
outsb
bound
xchg
test
adc
push
cmp
sbb
xor
clc
pop
inc
push
lahf
sbb
and
outsb
push
xor
lret
cmp
rcll
sahf
fstpl
jmp
test
repnz
mov
insb
sbb
int
lea
push
jns
movsb
jmp
mov
cltd
in
push
mov
mov
mov
test
shlb
cmpl
int3
xor
sbb
jg
movsl
enter
outsb
je
jno
ja
pop
ret
loopne
mov
inc
and
push
mov
imul
pop
adc
and
mov
push
dec
jl
ror
sarl
mov
jmp
insl
xor
mov
imul
andl
xchg
pop
push
or
test
xor
xchg
pushf
outsb
sbb
xor
imul
dec
and
or
xchg
or
jge,pt
loopne
cmp
dec
lret
cli
mov
aas
mov
and
aaa
fdivl
xor
dec
mov
cli
test
lock
sbb
push
pop
setns
inc
inc
out
sub
mov
mov
in
jnp
jae
imul
mov
scas
sub
or
pop
stos
or
pop
inc
sub
xor
andl
call
mov
mov
mov
sahf
dec
jae
lahf
mov
lods
cmp
adc
popa
jp
push
cmc
xchg
addb
loopne
cmpb
orb
daa
cmp
gs
out
cli
cmpsb
inc
sub
sarl
sarl
cwtl
fstpl
stc
leave
xor
jp
and
jo
andb
test
jno
out
xor
out
out
aam
daa
lods
xchg
outsb
sbb
and
adc
lret
fcomip
pop
bound
mov
pop
fstpl
or
aas
cs
xchg
and
out
jp
das
jbe
mov
cmp
out
icebp
mov
sub
inc
sub
add
pop
sub
jo
in
lcall
and
inc
sbb
mov
cmpsb
jo
push
es
inc
incb
in
push
movsl
xchg
pop
test
pop
cwtl
cmp
addr16
pop
xchg
add
ret
pop
xchg
ja
sub
out
xchg
jmp
sub
sar
pop
mov
jnp
or
lds
mov
fcoms
cmpsb
int
pop
xchg
mov
fldt
fsubrl
inc
mov
fidivs
jg
jne
jge
dec
ja
push
or
dec
leave
lods
or
jb
outsl
jge
push
cs
lret
add
jbe
negl
mov
cmpsb
je
call
mov
rclb
jae
clc
xor
jb
xor
mov
fdivr
cmp
roll
dec
cmpsb
aam
scas
pop
cmp
adc
repnz
push
push
push
pop
jno
cmpsl
daa
gs
dec
rorl
cmp
aaa
add
in
out
mov
xchg
stc
jp
jbe
jl
xor
or
jnp
sub
out
adc
into
sub
fst
jge
add
xorb
pusha
mov
pop
cmp
divb
in
pop
or
test
pop
pushf
lcall
ja
push
pop
pop
push
push
dec
mov
xchg
insb
mov
jne
mov
jmp
xchg
imul
or
ss
fcoms
dec
test
add
adc
fsubr
mov
inc
cmp
pop
data16
pop
add
jae
shll
push
dec
rolb
add
out
pop
mov
jne
cmpsl
outsb
mov
in
inc
mov
and
inc
or
daa
lods
push
add
mov
adc
test
test
das
rclb
outsl
dec
mov
bound
mov
rcl
int3
pop
mov
fldt
sbb
gs
push
sbb
enter
outsl
fndisi(8087
dec
repnz
test
icebp
mov
test
lods
repnz
mov
xchg
sbb
inc
jle
push
xchg
pop
or
popa
addr16
sahf
les
xchg
adc
outsb
or
bound
mov
lahf
fwait
pop
mov
cmc
notl
mov
sarl
dec
cmpl
imul
xchg
xchg
dec
in
subb
mov
mov
test
cmp
cmp
into
pop
les
lods
incb
ds
add
jecxz
pop
mov
notl
xchg
sbb
test
test
pop
outsb
xchg
xor
add
shll
test
sub
and
js
and
mov
je
imul
aas
sbb
scas
xor
sahf
dec
not
test
call
test
mov
lea
sub
jno
movsb
cmp
fcompl
imul
fs
and
cmp
cltd
scas
or
jb
xchg
insb
adc
fcomps
mov
jl
or
hlt
fwait
mov
xlat
fstpl
dec
mov
fadd
sbb
ret
fstpl
adc
mov
int
mov
pop
push
dec
lret
push
lods
aam
out
push
in
loopne
mov
scas
int
into
mov
adc
mov
mov
jl,pn
jmp
sub
xchg
sti
cmp
cltd
and
dec
insb
adc
shll
clc
ficomps
dec
les
lcall
scas
push
jmp
inc
or
mov
int
dec
add
push
mov
fidivrl
mov
mov
jmp
or
fmull
aaa
clc
call
test
lret
mov
out
jle
popf
push
call
sub
sbb
dec
sub
xlat
push
and
inc
rolb
pop
and
cmp
ret
mov
mov
adc
mov
mov
xchg
mov
ljmp
inc
nop
lret
lret
test
ret
jge
in
jb
mov
sahf
jae
sbb
imul
pop
and
stos
mov
iret
mov
scas
pop
mov
mov
imul
jp
or
ss
add
lret
repnz
std
mov
cmpsb
fbstp
or
sti
mov
lods
push
lods
sub
out
sahf
fwait
pushf
pop
in
sub
pop
cs
inc
sti
push
lret
fsubs
cmp
adc
and
inc
sub
ds
outsb
fdivs
adc
xorl
adc
mov
lahf
movsb
mov
pushf
dec
cs
call
loop
hlt
imul
pop
js
mov
adc
cmp
test
mov
push
rcrb
jge
mov
sub
leave
fildl
stos
sub
jecxz
jb
movsl
and
jp
push
jle
pop
les
in
aaa
adc
cmp
sbb
aam
mov
mov
inc
add
scas
jo
xchg
testb
outsl
imul
push
mov
mov
mov
cli
test
or
push
addr16
ljmp
out
sub
shll
inc
mov
mov
push
js
jo
mov
in
xchg
pop
or
out
fwait
mov
clc
sbb
out
add
jo
call
adc
push
lea
stos
xlat
imul
pusha
popf
mov
scas
hlt
and
mov
fdivrs
test
adc
loope
loopne
mov
sbb
dec
cld
or
jge
in
xchg
in
divb
xlat
inc
icebp
xchg
xchg
jnp
sti
test
add
sbb
push
push
test
addb
out
dec
aas
int3
scas
sti
fistps
jl
jecxz
cmp
sahf
insl
mov
mov
dec
cmp
out
push
jecxz,pn
push
addr16
mov
movsb
cmc
subb
fbstp
jl
fsubrs
popf
pop
mov
cmpsl
fs
mov
sub
call
sub
pop
stos
out
jg
ficoms
and
pop
popf
dec
adc
mov
dec
dec
sub
call
jecxz
pop
xchg
test
pop
js
aaa
lods
ret
out
or
mov
dec
inc
xchg
mov
fsts
push
xor
inc
or
mov
cmp
and
mov
test
pop
fldl
mov
add
jl
lods
mov
xchg
arpl
mov
out
les
rep
pop
push
push
les
xchg
push
out
adc
mov
mov
out
adc
jne
pop
mov
push
dec
xchg
dec
cltd
stos
add
imul
dec
pop
test
inc
les
or
ret
into
iret
jge
xchg
mov
std
lahf
sbb
mov
pop
mov
jp
stos
imul
jecxz
inc
dec
insl
or
pop
popf
test
or
arpl
in
shll
cmc
sbb
pop
adc
dec
cmp
add
repz
imul
add
inc
test
add
leave
jg
lahf
jbe
les
faddl
shlb
mov
xchg
jbe
ret
pop
sub
mov
out
cmp
jle
sar
ja
or
inc
mov
rclb
leave
jo
mov
xor
pop
adc
mov
je
stc
cmp
jb
pusha
mov
lcall
jnp
push
mov
nop
cwtl
add
leave
mov
mov
inc
fldcw
cltd
xchg
push
lock
xlat
jae
sbb
pop
jae
cmp
fwait
call
mov
push
mov
in
imul
mov
or
push
mov
and
je
inc
shll
mov
leave
out
orl
outsl
add
fildll
inc
mov
sahf
xlat
pop
fsubl
and
rolb
mov
adc
mov
fmull
mov
lret
bound
inc
adc
lret
fwait
sub
arpl
cmc
mov
not
ds
sub
in
pop
and
imul
mov
mov
xlat
rcll
mov
ss
out
movsl
pop
jne
dec
incb
ja
mov
iret
popa
daa
ljmp
pop
or
addr16
jecxz
fldcw
lods
dec
ficoms
mov
addr16
push
das
sbb
lods
pop
stos
inc
or
sub
jbe
pop
adc
adc
mov
push
mov
flds
ret
repz
ss
pusha
or
adc
pop
into
mov
or
fistl
loop
or
daa
xchg
in
loop
jns
mov
das
movsb
cmpsl
cmp
xchg
xor
imul
jbe
push
push
out
xor
stc
adc
jns
cmc
into
negl
popa
out
push
inc
decl
lea
aam
scas
or
pushf
leave
je
fcmovne
ss
subb
push
and
pop
inc
loope
lea
cmp
cmpsb
mov
dec
ret
aam
lcall
adc
adc
aas
imul
insl
mov
and
lods
gs
loopne
mov
cmp
scas
cmp
cmpsl
xor
fnstcw
xchg
jmp
cmpsb
mov
cld
xlat
imul
decl
dec
pop
data16
jb
pop
insl
sahf
adc
mov
xchg
push
pop
inc
mov
in
or
inc
xchg
sbb
sbb
lcall
sbbl
and
xchg
and
push
mov
pop
rcrl
clc
aas
bound
aaa
aas
or
push
cmp
mov
or
arpl
jbe
testb
ljmp
xor
divl
lods
push
out
sbb
mov
dec
lods
push
cmc
cmpsb
cmp
or
jae
jo
push
into
jecxz
out
cmpsb
and
mov
ret
jbe
dec
mov
lret
ljmp
dec
inc
and
in
repnz
xor
icebp
pop
mov
cltd
and
ret
adc
sub
and
push
xchg
dec
xchg
xchg
dec
in
pusha
mov
fcomps
cli
mov
sbb
das
mov
addr16
cmpsb
or
push
loop
push
clc
push
jbe
or
and
data16
cmp
sub
lret
xchg
test
pop
aaa
in
ds
rcll
movsb
mov
sub
jp
sub
cmc
and
mov
ret
stos
lods
mov
aad
aam
adc
sarb
fs
xadd
pop
jnp
popa
xchg
adc
icebp
mov
js
and
in
pop
cmp
clc
adc
jmp
inc
xlat
xchg
xchg
pushf
mov
dec
sub
inc
add
mov
fldcw
pop
test
xor
adc
js
shlb
inc
jae
pop
push
in
push
repnz
xchg
sar
pop
mov
pushf
mov
or
pop
mov
rorl
ds
outsb
cmp
dec
in
pop
jbe
ret
sub
das
adc
jno
insl
sub
dec
or
jae
test
adc
shll
jecxz
inc
mov
push
sbb
or
mov
sub
sub
jl
shr
jg
mov
daa
adc
iret
pop
jnp
xchg
scas
or
mov
inc
pop
ret
adc
dec
in
cmp
imul
loope
ficoms
loope
cmp
lods
loope
scas
lock
lret
xchg
je
mov
lods
push
lahf
rcrb
ljmp
dec
sub
test
push
sbb
and
inc
xchg
jae
jmp
push
jle
lods
pop
test
mov
aad
cli
cwtl
scas
adc
and
xor
out
push
adc
scas
mov
push
add
inc
mov
lret
mov
mov
push
xchg
cmpsb
add
les
dec
xor
test
ficompl
iret
or
dec
insb
repnz
ret
cmp
aaa
sub
fcomip
jmp
flds
push
mov
cmp
inc
lods
stos
subl
xchg
ja
pop
lock
insl
insl
fcmovne
and
stos
not
fisubrs
mov
jle
pushf
lahf
lods
xor
fcomip
push
jp
int
cmp
hlt
dec
scas
leave
jecxz
xchg
fsubr
xor
dec
call
jle
inc
mov
outsb
push
rcrb
push
in
mov
mov
cli
or
push
arpl
or
ljmp
push
fsubl
lods
je
mov
mul
or
xchg
int3
or
xorb
je
addl
stos
xlat
adc
dec
dec
or
mov
sbb
mov
sbb
mov
call
jge
jecxz
sbb
adc
xchg
fs
mov
adcl
lock
ret
sbb
insb
mov
or
push
loopne
imul
or
in
testb
movsb
jb
add
or
test
adc
push
test
jnp
pushf
adc
cld
mov
dec
adc
mov
sub
add
test
fdiv
or
or
fldcw
push
jecxz
sahf
and
and
out
shlb
adc
push
inc
or
xor
in
aad
lds
mov
int3
push
mov
cli
enter
insl
outsl
aaa
in
iret
xchg
test
pop
push
repnz
roll
movsl
push
mov
jmp
enter
mov
movsl
call
mov
push
mov
int3
mov
cmp
xor
sarb
mov
push
xchg
stos
dec
pop
and
sbb
fcomi
dec
xor
adc
and
xchg
pop
in
xchg
popa
mov
and
or
insl
ljmp
fildl
iret
pushf
dec
push
aam
add
sbb
je
cmp
mov
lret
cmp
int
sarb
je
push
in
lahf
cmp
in
mov
jg
lods
cld
scas
ja
xchg
mov
mov
insb
out
inc
push
mov
not
leave
and
xchg
ret
jno
inc
and
fdivl
mov
cmp
mov
out
pusha
repnz
ret
dec
lock
andl
int
xchg
jge
and
packssdw
inc
idivb
cmpsb
cltd
add
dec
mov
adc
xor
mov
out
ja
cmc
int
xchg
dec
ds
adc
push
ret
sub
stos
sub
cld
out
pop
mov
or
jmp
out
xchg
loopne
push
andb
or
jmp
dec
jo
mov
fidivrl
inc
adcb
cmpsl
cmp
imul
outsb
mov
jo
enter
imul
gs
lret
jbe
aad
jge
dec
inc
inc
push
roll
sub
nop
xorb
test
push
xchg
outsb
pop
jge
repz
ret
mov
jns
dec
mov
outsb
aas
cmovl
inc
js
test
pusha
hlt
shrb
in
adc
push
arpl
orb
cmp
push
cli
ljmp
scas
shl
adc
icebp
push
cltd
je,pn
gs
test
pop
std
inc
rclb
dec
push
adc
jb
jns
lock
pop
pop
xchg
out
jb
enter
push
mov
loope
xor
push
mov
sub
xor
icebp
inc
mov
incl
ret
repz
fsubrp
xor
aas
inc
adc
mov
sbb
cmp
shll
int3
cmp
mov
push
fstp
pop
or
dec
shrb
cltd
inc
shll
cmpsl
sub
xor
adc
dec
cmp
loop
arpl
adc
jbe
pop
inc
movsb
adc
pop
std
cmpb
fsubrs
mov
mov
sub
lahf
insl
stc
fsincos
xor
adc
or
jb
hlt
imul
add
pop
adc
lds
push
push
vmovsd
jae
pusha
arpl
push
push
scas
imul
jl
insl
fst
sahf
sub
jo
mov
xchg
push
mov
clc
jecxz
sub
sbb
fbstp
adc
jle
or
jl
aas
sbb
mov
mov
lods
sub
mov
jmp
pop
push
jle
aaa
xchg
cwtl
in
ljmp
bound
fdiv
pop
mov
mov
imul
rcll
ss
aaa
leave
pop
inc
cltd
lds
xlat
int
jmp
lds
push
stos
aad
add
fs
xchg
pop
fldcw
mov
jbe
pop
imul
cli
add
cmp
or
mov
cmp
jg
roll
aaa
push
inc
aas
dec
mov
push
cwtl
jl
pop
insb
add
testb
push
out
or
movsl
xchg
lods
int3
mov
pusha
dec
cli
into
ret
mov
pushf
sbb
rcrl
rclb
cmc
hlt
adc
cs
cld
or
add
outsb
cmp
add
xor
or
out
out
mov
stos
std
cmc
les
test
mov
aam
sbb
mov
stos
adc
xchg
out
ret
cwtl
jmp
stos
sub
aam
aas
add
aaa
addl
and
divl
fcoms
les
mov
cli
sbb
dec
int
push
gs
lea
popf
push
daa
testl
lea
repnz
movsl
push
cltd
mov
mov
repnz
daa
bound
mov
imul
xor
push
mov
pop
xchg
in
clc
lahf
arpl
or
insl
movsl
mov
adc
jp
cwtl
int3
mov
movsl
mov
or
lahf
cs
push
sub
lret
and
sub
mov
sbb
popf
lds
mov
fbld
fwait
decb
mov
jb
jmp
int3
out
cs
fnclex
jbe
xor
test
aas
les
test
outsl
mov
jmp
push
add
adcl
repz
sub
xchg
pop
xor
sbb
or
nop
insl
ret
xor
in
inc
lcall
push
push
add
lret
stc
aam
out
inc
mov
in
xchg
pop
repz
pop
xchg
pop
decl
xchg
xchg
dec
popf
das
loopne
imul
sub
leave
xchg
pop
mov
mov
cmp
das
fcomps
insl
ljmp
pop
xor
pop
jnp
or
in
sub
cmp
sub
in
jle
out
enter
jbe
sbb
push
pop
lods
or
std
xchg
or
in
pop
scas
adc
jge
jg
fdivrs
icebp
iret
push
mov
mov
xchg
jb
enter
shlb
sahf
xchg
xchg
xchg
push
jae
or
mov
and
push
dec
pop
sbb
fisttpl
aaa
bound
jno
in
jge
dec
fwait
xor
fs
sbb
and
sti
adc
xchg
shl
pop
nop
push
pop
cmp
aaa
mov
xor
ret
repnz
nop
and
jecxz
lahf
jl
addr16
shrl
dec
sbb
inc
push
push
pop
lods
mov
pop
push
jb
icebp
arpl
push
aaa
sbb
sbb
fdivl
mov
lret
jnp
pusha
popf
rcll
dec
cmpsl
sbb
dec
jno
dec
jle
cmp
imul
ds
mov
lret
or
mov
add
fwait
idivl
mov
rolb
sub
fstp
dec
sub
rcr
add
shll
dec
shrl
mov
fsubrp
loope
dec
and
in
fcmovbe
or
ljmp
xchg
vcvtsd2si
in
xor
sbb
cmp
test
int
pop
rcll
xchg
sbb
sahf
sub
ds
mov
call
je
mov
daa
test
push
mov
movb
inc
xchg
test
push
sbb
test
dec
lcall
add
cmp
adc
push
jbe
adc
int
mov
icebp
gs
sti
popa
jns
push
scas
out
fildll
xchg
sahf
fimull
or
pop
lods
inc
and
push
pop
sub
aad
jle
push
pusha
shlb
mov
jg
loop
mov
jnp
fistl
data16
lret
mov
sarl
jnp
mov
pop
pop
daa
repz
std
in
mov
xor
mov
or
cmp
mov
mov
cmp
stos
jle
outsl
cmpl
cmp
popa
lcall
sbb
inc
xchg
pop
or
call
jne
jp
mov
subb
cmp
inc
in
xor
movsb
imul
jmp
jo
sti
dec
repz
cmp
testl
push
stos
gs
jecxz
dec
pop
fistpl
fcom
outsb
stos
into
loop
insl
enter
movsb
sti
repnz
fs
mov
test
shll
in
aad
jecxz
loopne
dec
mov
out
push
sbb
aam
cs
in
in
xor
sbb
adc
bound
lock
fstps
das
push
call
push
scas
jmp
pop
mov
mov
adc
sbb
push
ja
mov
pusha
mov
sbbb
and
loopne
stos
jne
xchg
jmp
cmp
lods
dec
pop
dec
adc
in
cmp
pop
je
dec
xchg
xor
in
icebp
and
sub
or
rcl
in
mov
dec
mov
or
xchg
addr16
push
mov
fimull
pop
insb
xor
or
and
or
in
fists
lret
roll
sub
xor
add
xchg
fildll
loop
ds
jb
and
test
fimuls
insl
mov
fidivs
test
sbb
push
adc
frstor
sti
xor
fsubrl
inc
stos
movsl
dec
xor
ljmp
in
int3
sub
popf
out
push
loopne
fbld
mov
cli
in
mov
cmp
das
inc
jno
mov
mov
jmp
jg
scas
mov
outsl
out
sub
mov
test
dec
cmp
pop
pop
inc
jl
pop
push
fdivrl
imul
jmp
cs
lret
push
inc
fnstcw
mov
and
pop
pop
in
inc
arpl
outsl
dec
dec
scas
cmp
add
outsl
sub
stos
lea
test
xor
addb
push
fwait
xlat
cs
cmpl
lods
mov
rolb
out
movsl
jl
in
sbb
scas
loopne
adc
js
mov
cmp
sahf
push
fcmovbe
pushf
sbb
lods
xor
pop
out
push
je
add
jns
inc
mov
mov
sbb
and
popa
mov
cmp
adc
cmp
xor
xor
mov
notl
pop
iret
insl
fsubrs
push
js
cmp
xor
lea
mov
movsb
fwait
lret
inc
cmp
jo
jb
pusha
ret
ss
pop
push
pusha
out
std
pop
test
leave
mov
push
sbb
mov
idiv
jns
outsb
cltd
cmpsl
jae
push
xchg
loopne
xchg
das
inc
jb
in
inc
inc
inc
shrb
xlat
or
icebp
inc
in
mov
sbb
mov
xor
add
loope
mov
in
into
cmp
data16
sar
add
mov
xor
pop
mov
mov
ret
jne
andb
adc
mov
lcall
jmp
mulb
mov
stos
cmp
sbb
call
cmp
das
movsl
mov
jbe
repnz
cmp
mov
sahf
insl
jns
clc
lea
mov
mov
cs
or
filds
pop
sar
stos
int3
sti
or
arpl
test
stc
stos
ret
ds
iret
sub
loopne
nop
loop
add
xor
jbe
push
sarb
stc
ja
mov
and
dec
gs
mov
lea
xchg
popf
rcrl
dec
jne
sub
cmp
insb
push
mov
push
cs
mov
push
xchg
or
and
test
loope
insb
push
mov
mov
mov
popl
mov
push
mov
and
pop
pop
and
sbb
cmc
das
jo
xor
jle
adc
pushf
and
scas
push
xchg
movsl
pop
xor
mov
imul
ficoms
jge
std
fidivl
mov
popf
xchg
aas
fistl
cmp
pop
aam
jb
push
cmp
js
fmuls
dec
inc
and
fistl
push
bswap
and
mov
imul
lock
dec
sarb
sbb
mov
sub
push
scas
pop
shlb
iret
push
jmp
dec
call
cvtps2pd
or
cmp
sbb
add
ds
pop
mov
cmp
rorb
std
or
add
xchg
jp
and
adc
dec
filds
inc
dec
daa
xor
cmp
das
mov
cmp
icebp
or
div
push
adc
outsl
pop
inc
stos
subl
int
imul
popa
jge
rcrl
pop
mov
sbb
adc
pop
nop
sub
push
adc
and
xchg
adc
push
mov
in
shll
pop
xchg
ds
rcrb
mov
sbb
fs
dec
iret
loopne
fdiv
inc
outsl
add
andl
or
or
sarb
cmp
xadd
mov
dec
in
inc
repz
mov
loopne
leave
cmp
xor
and
mov
mov
pop
jp
push
clc
pop
loopne
adc
fldcw
push
sbb
jbe
fucomip
or
lret
enter
in
pop
or
or
mov
lock
test
xchg
int
das
negb
xchg
mov
notb
lret
xchg
sub
clc
mov
or
xchg
rorb
mov
lret
es
pop
clc
mov
sbbb
pop
cmp
fildl
xor
wrmsr
ficomps
addr16
xchg
xchg
test
xchg
xor
xor
rep
xor
adc
inc
test
and
pop
pop
mov
inc
scas
push
xor
jge
jnp
and
std
add
and
and
test
jle
fwait
imul
aas
cmpsb
ss
xor
and
mov
addr16
mov
mov
test
mov
repz
repz
out
cmp
pop
mov
adc
cmp
inc
test
in
push
jb
or
mov
pop
negb
out
pop
mov
add
fmul
add
push
xor
pop
sahf
enter
jne
sahf
iret
daa
push
int3
xchg
aaa
lcall
popf
xor
xor
pop
ja
and
mov
arpl
push
cmp
jp
and
das
stos
push
xchg
xchg
cld
in
test
xchg
cmp
mov
scas
popa
xor
icebp
lret
fisttps
fsubr
adc
or
cmc
fwait
sbb
shll
jbe
or
pop
inc
into
data16
imull
jge
push
xor
add
out
push
mov
mov
int3
fldl
mov
pop
xor
jnp
jp
gs
or
jp
out
mov
xor
jmp
dec
ljmp
call
imul
fcoml
stos
mov
in
mov
sub
clc
push
aad
shlb
lock
flds
adc
cs
mov
testl
dec
sarl
sahf
pop
or
or
adc
in
inc
xchg
cltd
mov
js
inc
std
insl
into
adc
jae
iret
movsb
dec
fmulp
cmp
and
push
aam
jecxz
pop
aad
jo
xchg
fdivs
arpl
mov
pop
test
sub
inc
sub
inc
lock
roll
and
stos
loope
je
inc
and
stc
jnp
fwait
xchg
sbb
sti
pop
jmp
and
inc
add
add
test
lock
scas
cwtl
stc
xchg
repnz
push
sub
inc
inc
addr16
pop
sbb
iret
mull
mov
pushf
jnp
push
fwait
cld
cmp
das
out
pop
xchg
loopne
jp
fucomi
xor
xor
xchg
jecxz
and
loop
cmpsb
jp
adc
cli
dec
lea
add
lea
sub
sbb
fs
jae
icebp
test
enter
jbe
popf
fsubrl
fidivs
movsl
mov
mov
iret
lahf
cmp
mov
inc
dec
xchg
inc
divl
in
popf
jo
or
pop
jecxz
xchg
loopne
mov
int
es
cli
fisttps
out
mov
test
pop
inc
lea
lret
sbb
mov
pop
sahf
fwait
dec
sahf
cmp
xchg
add
inc
dec
inc
mov
lcall
add
inc
push
stos
out
cmp
movsl
mov
xchg
pop
push
out
sub
sbb
mov
cmp
jns
sbb
ja
int3
jnp
int
mov
pop
inc
loopne
ja
loope
decb
sub
repnz
gs
push
repz
fnsave
push
xlat
mov
xchg
je
pop
push
jle
test
loopne
cli
jge
or
jne
repnz
add
pop
stc
dec
xchg
cmp
incb
arpl
sub
loop
divl
xchg
incb
pushf
rcl
lock
adc
push
or
push
add
in
lea
ds
clc
dec
xorl
adc
pop
js
sahf
cmp
rcr
loopne
mov
stos
mov
loope
push
mov
pop
sbb
ja
int
cmp
push
fnsave
mov
imul
dec
js
insl
aas
lret
mov
push
subb
or
insb
outsb
mov
stos
sti
int
mov
mov
mov
or
mov
idivl
add
sarb
or
cli
addr16
push
mov
adc
xor
jae
dec
in
jle
mov
enter
sbb
mov
cmp
jl
push
movsl
push
lcall
add
fidivs
or
adc
les
ret
notb
jge
mov
mov
mov
or
dec
gs
out
enter
inc
push
adc
add
and
lods
mov
ja
into
adc
out
jnp
loop
push
fistpll
xor
outsb
mov
xor
add
lea
push
std
mov
add
inc
daa
dec
cltd
jb
rcrl
or
mull
mov
jp
pop
xor
fisttpll
lea
inc
fs
jle
inc
xchg
js
adc
push
aad
pop
jb
xchg
sub
cmc
mov
paddb
test
mov
cs
xor
mov
pop
and
int
pop
das
push
mov
add
out
je
mov
pop
roll
mov
push
bound
ret
test
sub
setnp
jno
push
inc
stos
sub
daa
dec
rcrb
scas
out
testb
test
mov
lcall
add
rcrl
inc
leave
pop
addr16
inc
jmp
sub
pushf
sub
inc
pop
mov
ret
xchg
inc
es
fisttpl
jmp
jne
push
movsl
mov
mov
xor
outsl
je
scas
jp
in
add
mov
fbstp
and
xorl
adc
shll
jmp
jae
mov
jmp
aam
lds
outsb
push
mov
sub
dec
mov
mov
sbbl
jmp
pop
in
xor
rorb
sbb
xor
shlb
pop
and
loopne
fwait
sbb
mov
ljmp
mov
data16
push
fwait
push
dec
push
adc
loop
fnsave
jle
jne
popa
mov
pop
aad
pop
push
cmp
inc
xor
cmc
rcl
add
fidivs
popa
or
out
and
add
sub
cltd
test
jbe
fisttpl
cld
cmpsl
cmpsl
test
cmp
dec
mov
lods
sbb
movsl
fsts
and
je
cmp
dec
sbb
jle
bound
mov
or
es
and
jecxz
inc
inc
in
in
outsl
or
push
and
lret
popa
mov
lods
and
add
mov
xchg
or
pop
mov
jae
scas
sahf
ja
cmpsb
add
mov
xchg
loope
mov
movsb
pop
decl
lret
adc
dec
mov
test
sbb
push
jo
fs
das
lret
push
jno
jle,pt
inc
outsl
aam
pop
out
icebp
ja
push
cld
mov
pop
enter
hlt
push
call
clc
sub
cwtl
mov
add
mov
or
mov
addb
adc
bound
imul
das
pusha
test
es
lret
xchg
sti
rcrl
subl
jo
int3
xchg
dec
xchg
push
repnz
dec
mov
jecxz
das
push
popa
adc
cmp
scas
and
stc
cmpsl
mov
shr
cmp
daa
pop
stc
and
and
stos
leave
insl
mov
leave
lods
or
xchg
into
shrb
pusha
test
mov
ficomps
mov
pop
xchg
push
popa
loopne
je
or
and
push
mov
mov
arpl
jp
lods
loop
je
cmp
inc
xchg
test
stos
inc
adc
mov
cmp
xchg
movsl
mov
fs
ss
in
xor
stos
ljmp
xor
loope
lret
push
xchg
or
sub
jne
inc
dec
add
pop
pop
clc
sub
rcl
sbb
xor
fcomp
call
mov
dec
test
push
test
sbb
sahf
mov
sub
inc
inc
or
sbb
lods
frndint
scas
cwtl
mov
xor
mov
push
dec
push
cmp
mov
das
ljmp
les
std
cltd
movsl
movb
mov
movsb
mov
push
lds
js
xchg
add
in
pop
std
test
lcall
fwait
ret
jl
pop
or
int
mov
outsl
mov
and
roll
xchg
jnp
out
sbb
jmp
jne
jmp
sbb
test
and
cmp
decl
int3
call
jecxz
jae
mov
js
pop
pusha
and
adc
dec
push
mov
iret
lea
iret
push
loope
negl
mov
pusha
xor
mov
insl
fistpll
sbb
js
pop
adc
jb
mov
int3
cltd
outsl
fmul
aas
and
pusha
cmp
lret
aaa
xor
clc
mov
je,pt
pop
sbb
mov
sub
mov
sbb
pop
es
repnz
adc
rorb
es
lds
xlat
dec
imulb
sbb
addr16
les
mov
jle
and
push
movq
ret
add
push
sbb
dec
aad
lcall
repz
pop
pop
mov
das
sub
gs
mov
dec
fnstsw
dec
stos
aad
mov
daa
les
loop
add
ss
sbb
ret
adc
stos
cmp
test
mov
fadds
inc
adc
hlt
jl
jno
push
jp
bound
sbb
decl
dec
addr16
push
or
pushf
test
jbe
lds
fwait
out
cld
shr
or
sub
jge
loope
and
add
cmpb
jbe
mov
sbb
in
je
mov
not
dec
inc
pop
stos
in
push
aam
sbb
outsb
xchg
orl
cmp
inc
nop
jae
cmc
xchg
mov
xor
mov
inc
out
jnp
movsb
push
dec
std
adc
mov
xlat
fxch
push
ljmp
xorb
andb
mov
fiadds
jne
xchg
sbb
push
lds
adc
jno
jb
push
pop
dec
lcall
lahf
push
xchg
or
fldt
pop
sahf
mov
insl
out
frstor
jbe
mov
lock
jne
mov
pusha
mov
jp
popa
pusha
fidivrs
mov
xchg
push
xchg
and
stos
popf
lea
mov
mov
sbb
mov
mov
mov
mov
adc
lods
scas
push
inc
jb
or
leave
dec
pop
add
fiadds
mov
push
test
mov
lods
out
test
sbb
sti
sub
xor
insl
sub
jge
rcll
stc
pop
loop
xchg
push
data16
insl
mov
ret
movsb
dec
hlt
jne
xor
lea
cmpsl
push
dec
clc
sbb
mov
mov
mov
aam
clc
or
lock
xlat
lea
mov
jle
ret
pop
dec
fdivr
jp
push
dec
insb
fwait
adc
mov
xchg
and
addl
cmp
out
pusha
sub
sbb
mov
push
clc
add
out
ljmp
mov
shrb
sbb
jmp
xchg
aad
sub
mov
mov
push
popa
xchg
jae
icebp
xor
sahf
sbb
and
aam
in
fbstp
ljmp
into
sub
pop
daa
fisubs
sbb
cli
fwait
das
sub
fs
pop
xchg
sub
call
pop
test
adc
jge
fcoml
add
rcrl
shrl
orb
xlat
jmp
ficomps
repnz
outsb
int3
lods
jecxz
vmulpd
fsubrs
stos
xchg
xchg
or
pop
jge
test
add
push
jge
leave
push
add
or
pop
cld
fsubrp
and
sub
cmpsb
push
mov
cmp
lea
pop
jg
or
xchg
push
inc
leave
cltd
ds
push
inc
scas
inc
xchg
test
cmp
es
mov
push
scas
push
andl
dec
icebp
cmp
aas
pop
xor
scas
out
fidivrl
cmpsl
xor
or
and
jo
std
sub
inc
dec
jns
call
xchg
pop
inc
aad
and
adc
stc
dec
pop
shrl
cld
cmp
jp
outsl
popa
mov
int3
xchg
dec
inc
scas
dec
rorl
test
scas
or
jns
ffree
sbb
popl
dec
sub
add
and
js
mul
push
fadd
sbb
mov
inc
movsb
xor
lahf
push
mov
add
lock
sbb
pop
mov
inc
jnp
fwait
mov
xchg
sbb
ja
inc
jo
loopne
pop
add
mov
arpl
cmc
xchg
and
add
rorl
or
dec
out
stos
pop
pop
pop
je
int3
scas
adc
sbb
std
lods
inc
adcb
out
scas
idivl
jl
mov
xchg
push
dec
dec
out
fwait
sarl
iret
data16
dec
inc
mov
or
mov
es
cmp
ja
push
in
cli
cld
ficompl
adc
js
cs
nop
aaa
ds
sub
jo
ljmp
icebp
and
pop
insb
test
enter
mov
lahf
outsl
mov
mov
mov
push
daa
aas
inc
cmp
mov
cmc
push
insl
test
mov
pop
insb
cmp
adc
pushf
add
inc
jns
movsl
ljmp
sbb
push
jne
fiaddl
aam
push
inc
test
inc
std
ficoml
ret
add
or
ljmp
dec
push
int3
pop
mov
mov
mov
les
arpl
lock
dec
test
pop
div
bnd
out
inc
shrb
mov
jnp
int3
mov
jle
lcall
jecxz
les
test
lret
or
arpl
jmp
bound
cmp
mov
or
cltd
and
mov
jl
cs
fadds
mov
cli
ret
or
inc
fwait
mov
loop
nop
sub
jno
xor
loope
xchg
insb
mov
xlat
rcll
shrl
cmp
pop
popa
push
stc
xchg
inc
aas
xor
or
sub
xor
or
xchg
aam
pop
and
in
pop
in
jge
shlb
pop
lods
sahf
inc
adc
repz
ds
cmp
das
jp
cmp
and
mov
mov
xlat
js
sbb
push
imul
push
jl
nop
push
mov
fwait
sub
sbb
pop
mov
dec
pop
sbb
lret
addr16
jmp
push
push
daa
jmp
cmp
mov
adc
aas
or
cmp
pop
push
in
adc
jae
shrb
jne
in
inc
ds
in
data16
dec
aam
in
orb
lcall
jge
lods
arpl
jmp
icebp
inc
test
pop
dec
or
test
fistpl
push
fildll
lret
dec
loopne
sbb
lret
cmpsl
sub
jl
movsl
aad
mov
or
scas
popa
xchg
xor
out
shlb
inc
adc
sbb
imul
dec
jl
shr
int3
push
or
cmp
in
lret
xor
ret
lds
mov
fildl
scas
ss
add
sub
sub
mov
and
sub
mov
mov
pop
or
or
jo
jmp
mov
xlat
movsl
mov
je
add
xchg
loopne
out
cmp
lods
jno
mov
popa
and
push
lods
imul
bound
test
adc
xlat
cltd
in
cs
sbb
mov
adc
pinsrw
in
add
sub
pop
stos
push
das
addr16
fdivrp
lret
push
push
mov
imul
xor
mov
fcmovnb
pop
pop
outsl
sti
dec
ja,pt
ret
jne
stos
js
sbb
cwtl
lret
pop
sbb
or
sbb
xor
test
pop
ljmp
je
inc
fwait
cmc
adc
and
sarl
cmp
cmp
test
push
jle
xor
shll
sbb
mov
cwtl
in
shlb
mov
xchg
jno
and
bound
mov
add
inc
in
xchg
mov
jb
aam
cwtl
mov
shlb
xchg
push
lea
inc
dec
test
rcrb
jb
or
repnz
or
je
testb
pop
jge
sbb
pop
inc
js
mov
inc
or
repnz
xor
mov
dec
int
push
inc
xor
dec
fimuls
mov
dec
jns
push
and
daa
cwtl
mov
sbb
movl
ja
push
repz
mov
daa
test
pop
xor
mov
xor
loop
rorb
rol
test
push
inc
push
jb
pop
add
dec
daa
popf
in
lea
cld
and
fisttpll
out
fadds
dec
dec
cmp
and
mov
push
rclb
cmpsb
xor
stos
adc
xor
sub
cmp
sti
xchg
test
cmpsb
push
in
movsb
in
ja
mov
jmp
aad
mov
out
cmp
or
and
push
hlt
and
mov
pop
xchg
dec
pop
shr
ret
sarl
sti
pop
sbb
or
xlat
lods
mov
or
cmp
ja
lret
movl
iret
cmpb
sub
push
fdivl
sbb
jl
adc
cvtpi2ps
jecxz
sarl
mov
out
ror
gs
ret
pop
mov
pop
pushf
pop
ret
inc
jno
xor
aad
xchg
push
test
ds
or
outsb
mov
int
pop
jo
adc
nop
dec
shlb
sub
sti
pop
scas
dec
in
xchg
popf
ficoms
shl
mov
mov
push
loop
ret
adc
flds
sub
dec
jl
lahf
jns
or
cld
dec
aam
enter
xor
cld
enter
cmp
lret
xchg
mov
inc
jecxz
stos
int
test
dec
insb
jl
mov
sub
pop
pop
sbb
xchg
shll
lret
test
daa
fwait
lea
xchg
lock
mov
dec
push
dec
pop
rep
test
jecxz
dec
test
pop
shl
incb
mul
loope
addr16
fstpl
push
or
scas
mov
and
jmp
sarb
dec
jl
xor
es
ffreep
xlat
mov
dec
out
push
inc
dec
push
lret
gs
jb
cld
cld
inc
out
mov
int3
cmp
jbe
jmp
and
adc
or
mov
jmp
jb
dec
in
rolb
mov
out
es
jmp
xchg
mov
ret
inc
aam
cmc
lret
dec
les
sub
fs
les
mov
icebp
sti
in
pushf
pop
cmp
mov
lods
pushf
js
jnp
jbe
int
mov
push
out
bound
adc
xor
loope
push
mov
xchg
mov
pusha
addr16
mov
xor
xchg
arpl
inc
lods
inc
mov
sub
inc
sub
test
lds
mov
stos
pop
in
int3
pushf
cmp
movsb
loope
fbld
cmp
or
ljmp
repnz
iret
sub
jecxz
pop
dec
push
pop
shr
or
repnz
mov
in
xchg
cmpb
mov
dec
fwait
repnz
pop
pop
or
cmp
xchg
fmuls
cs
dec
cmc
xor
rorl
enter
fidivrs
cs
xchg
adc
and
orl
and
lods
pop
or
fwait
sbb
in
push
jp
add
loop
adcb
or
addr16
dec
aaa
mov
int
adc
xchg
roll
in
outsl
jne
xor
mov
cmpsb
adc
aaa
minps
inc
aad
mov
pop
inc
adc
and
mov
mov
inc
push
mov
pushf
pop
gs
jae
out
ficomps
cmp
sbb
push
rol
mov
inc
inc
mov
mov
scas
add
cmpsl
test
cmc
aam
test
punpcklwd
sbb
cwtl
mov
aas
pop
sbb
cmpsl
in
mov
mov
pop
dec
jne
inc
fnstenv
push
dec
lods
mov
push
bound
ja
inc
je
shlb
push
dec
xchg
or
test
pop
rcl
pop
inc
xlat
push
sahf
jne
push
mov
push
sbbb
loope
pop
push
gs
les
popf
push
mov
rcl
fildll
fildll
int3
neg
aad
lock
mov
lahf
fidivs
repz
rcrb
sub
mov
es
sub
popl
push
jo
and
sbb
push
sahf
popf
shlb
push
int3
push
cmp
and
pusha
fadd
push
mov
orb
lahf
jne
xor
push
dec
fs
cmpsb
jg
mov
outsl
adc
pushf
test
popa
add
negb
push
and
jp
xor
loop
daa
sti
fstpt
cmpsl
stc
dec
jg
mov
in
ret
rolb
xor
lods
xor
sbb
stos
scas
in
cmp
or
les
cmp
mov
std
cmp
sti
clc
add
pop
addr16
dec
shlb
dec
adc
dec
and
push
and
xlat
test
fmuls
rcrb
jnp
dec
fucomi
and
dec
adc
xchg
outsl
imul
das
pop
loopne,pn
enter
jbe
cmc
sbb
mov
inc
push
fs
xor
push
lret
movmskps
dec
dec
ss
movsb
xchg
xchg
jl
xor
icebp
fcoml
jmp
ss
stos
dec
jg
xor
test
cmp
addb
push
insl
in
ret
cltd
mov
ja
mov
or
addr16
jbe
int
and
sbb
push
leave
xchg
dec
add
movsb
dec
pop
sti
cmpsl
push
das
mov
xchg
out
insb
mov
call
lahf
call
scas
inc
loop
incl
xchg
lahf
enter
es
decb
rcrb
arpl
sbb
mov
mov
or
fucom
sub
sbb
mov
into
in
sub
out
dec
sbb
outsl
stos
insl
and
cltd
xchg
add
cmp
imul
sbb
mov
add
adc
inc
test
fcompl
add
loop
xchg
pop
push
mov
adc
scas
adc
adc
inc
inc
jecxz
and
outsl
jl,pn
cmp
into
cli
dec
lret
cmp
push
icebp
xchg
stc
or
push
outsl
mov
lretw
push
mov
push
xchg
outsl
push
fwait
pop
inc
push
mov
into
push
sbb
sbb
cld
mov
sahf
ficompl
js
in
adc
sahf
xchg
xchg
out
cs
and
mov
call
mov
arpl
clc
mov
vpmacsswd
aad
push
inc
sbb
fildll
pop
push
divb
nop
dec
xchg
int3
xchg
cmpsl
aam
pop
int3
mov
xchg
stos
imull
lds
cld
xchg
inc
loope
rcr
inc
mov
adc
dec
xchg
push
xor
cmpsl
jbe
inc
faddl
jp
int3
adc
jns
dec
movsb
fisttpl
cmpsb
popa
enter
jo
sbb
stos
enter
fwait
das
inc
sarb
imul
fs
adc
or
sbb
ficoms
hlt
xchg
push
mov
pop
scas
add
cmp
sbb
mov
ret
loop
lea
idiv
pop
push
and
mov
xor
dec
and
enter
push
sarb
adc
sti
pop
mov
stos
and
hlt
cmp
sbb
push
add
pop
imul
xor
jb
lods
xchg
inc
je
add
frstor
iret
in
aam
cmp
clc
and
jecxz
mov
out
push
or
adc
mov
add
les
and
sarb
push
sub
rcll
icebp
data16
mull
outsb
insl
das
xchg
xchg
cs
dec
sbb
and
mov
lods
lds
and
cmp
inc
cmp
inc
loop
dec
popa
jmp
or
ret
cmc
int
lret
out
jge
int
enter
cli
xchg
insl
mov
jle
in
cmpsl
pop
lods
adc
mov
pop
mov
cltd
or
pop
sbb
ret
ficoms
and
xor
add
inc
ja
aas
mov
sbbl
psrad
rcl
icebp
notl
stc
sub
inc
fstpl
xchg
mov
dec
lret
cld
repnz
inc
in
clc
fildl
out
fcmovb
push
out
inc
nop
push
out
push
xor
int3
xchg
push
sub
in
loop
cmp
pop
push
add
adc
insl
gs
push
push
clc
sub
cmp
add
mov
popf
int
jno
pop
lret
sarl
in
pop
jns
fwait
arpl
pop
lock
and
inc
inc
jmp
fisttpll
int
inc
xchg
mov
lret
aas
in
icebp
sub
push
add
mov
loope
dec
dec
dec
xor
push
rcl
movsb
je
push
iretw
movsl
xor
cmp
and
int3
fs
or
or
ds
jp
sarb
lea
mov
js
fistpll
imull
sub
xchg
inc
ret
outsb
jnp
xchg
adc
xor
dec
pop
mov
sahf
outsl
jp
imul
sbb
addr16
aad
shrb
addr16
jmp
aam
xchg
arpl
jo
or
push
adc
xlat
test
xchg
cld
imulb
lods
mov
lahf
mov
paddd
dec
daa
ret
outsb
movsb
jle
outsb
outsl
out
jno
test
mov
mov
ss
sub
or
add
jecxz
or
xchg
loope
into
xlat
dec
xor
rcll
push
pop
mov
sbb
add
inc
rorb
sbb
stos
jnp
xor
adc
mov
pop
cmp
fwait
movsb
xchg
mov
jae
and
enter
sbb
xor
fists
pop
push
xor
pop
mov
mov
xchg
out
enter
test
mov
hlt
arpl
jp
sub
imul
in
cmp
imul
scas
popa
cmp
rorl
mov
mov
xor
mov
sub
push
jae
int
addl
in
inc
jmp
sbb
dec
out
pop
fcoml
xor
inc
mov
and
adc
mov
or
dec
adc
dec
push
rcrl
test
sbb
das
aam
lret
inc
sbb
nop
fwait
push
mov
inc
das
xchg
mov
mov
xchg
ljmp
test
jl
stc
nop
mov
and
xchg
test
inc
add
inc
inc
lcallw
dec
out
jne
xchg
fcoms
loope
pop
sub
xor
aam
and
repnz
shl
loope
pusha
hlt
mov
xchg
fwait
sbb
aad
adc
das
das
popf
les
js
imul
cmp
imul
cmpsl
into
shlb
inc
cmp
fsubrs
jns
mov
adc
add
pop
inc
xor
pop
xor
aad
out
ret
mov
push
mov
addr16
sar
or
push
add
subb
sbb
scas
dec
int3
sbb
out
arpl
dec
push
movsb
push
sbb
jge
test
scas
popa
xchg
out
push
and
sub
lret
sub
push
push
xchg
cmp
sub
sub
arpl
push
fcompl
sarl
inc
pop
popa
adc
cld
ss
cmp
mov
push
repz
and
or
aad
xchg
xchg
mov
jg
xchg
push
mov
push
and
jo
mov
sub
addr16
fs
daa
push
xor
dec
add
fs
repnz
shlb
jl
ds
sub
mov
fiadds
dec
mov
out
inc
dec
and
xor
adc
jecxz
push
mov
add
cmpsl
test
mov
xchg
insl
xchg
pop
daa
mov
push
dec
xor
jbe
loop
je
popa
pop
iret
lcall
out
nop
out
xor
imul
mov
cmp
dec
jg
sub
fistpll
cld
dec
dec
sahf
xor
cwtl
ds
push
out
fs
mov
int3
in
repz
adc
xor
call
into
push
adc
push
mov
in
cmp
sub
sub
data16
out
fcompl
into
nop
push
movsl
cmpl
pusha
in
in
les
aam
mov
xchg
in
shll
mov
pop
call
shlb
adc
and
je
pop
aad
sbb
mov
jae
addr16
or
dec
xchg
xchg
addr16
movsl
test
push
out
mov
imul
mov
mov
xor
add
sbb
pop
dec
repnz
gs
push
push
cli
or
into
dec
jo,pn
pop
lret
xorb
lds
sbb
shll
mov
imul
call
push
std
fisubs
ret
daa
mov
in
cli
sti
in
xchg
bswap
mov
sub
loope
inc
add
and
cmp
jae
shrl
or
jle
lcall
sub
dec
rcrb
pop
xchg
xor
pop
jno
mov
insl
pop
pop
jecxz
test
xchg
aas
test
push
push
add
fwait
push
nop
clc
popa
sar
subl
pop
mov
scas
cltd
test
push
out
sarb
xor
jge
sub
pop
imul
ror
pop
je
push
mov
daa
mov
out
and
lret
xchg
shlb
ja
lcall
dec
lds
sti
lret
lret
cltd
out
inc
je
xchg
mov
inc
push
out
jecxz
and
inc
push
bound
rcrb
push
inc
loop
mov
adc
clc
push
arpl
fisttpll
cs
push
add
mov
or
data16
push
addb
iret
repz
outsb
fwait
dec
inc
rorl
pop
mov
fadd
xchg
notb
scas
subl
loop
push
cmpsb
add
jp
xor
mov
adc
and
inc
cs
mov
ja
jmp
jb
nopl
mov
gs
inc
cli
inc
mov
pop
push
xor
pop
push
or
imul
pop
or
dec
ficoml
jns
mov
stos
cmp
sbb
icebp
stos
mov
adc
call
out
bound
daa
mov
in
jnp
pushf
xchg
cmpsl
and
xor
scas
push
xor
scas
xchg
es
call
adc
stos
lods
call
rcrl
in
loop
cld
les
dec
pop
fcmovne
sahf
ja
loope
add
push
xchg
incb
fisubs
and
mov
subb
fstl
pop
push
push
xchg
mov
aad
and
lea
inc
adc
loopne
rclb
push
jecxz
pop
cmp
repz
cwtl
ja
sub
shll
imul
add
sbb
addr16
movsl
aam
popf
bsf
mov
nop
cmpsb
setp
and
xchg
arpl
jnp
push
movsb
movsb
movsl
pop
cwtl
fmull
ds
in
mov
shrl
add
arpl
popf
cli
subb
mov
xchg
mov
sub
cmpsl
imul
mov
out
lret
or
lret
cwtl
aad
outsb
add
xchg
mov
inc
xchg
sub
sbb
das
mov
add
xchg
rcrl
mov
aam
test
pop
int
movsl
outsl
cmp
fwait
loop
pop
iret
repnz
sahf
cmp
xor
jle
mov
push
xlat
icebp
enter
xor
std
mov
fisubs
and
adc
sbb
fidivs
mov
pop
in
xchg
cli
stos
or
jecxz
sahf
arpl
adc
movsb
loop
enter
shl
mov
in
push
jnp
mov
add
jb
gs
cmp
inc
sbb
dec
dec
fcom
mov
ficoms
insl
sub
ror
mov
fisubrs
ljmp
aad
mov
imul
push
shll
jns
fcomp
add
push
leave
xchg
cmp
rolb
pop
lds
and
lods
test
push
cmp
sbb
ret
js
xlat
mov
cmp
and
test
xorl
sbb
mov
jecxz
hlt
pop
xor
or
test
mov
jbe
imul
push
lret
iret
xor
gs
nop
jp
imul
roll
mov
in
jmp
sub
inc
adcl
addr16
adc
je
push
ds
dec
jl
lock
cmp
fimull
cs
out
xor
ljmp
scas
test
adc
fld
imul
mov
and
xchg
add
pop
pushf
push
out
andb
pusha
ret
pop
std
push
sbb
push
fnstenv
loopne
int
test
rclb
jmp
cmpsb
push
stos
hlt
test
xchg
insb
je
repnz
pop
push
out
pop
add
aad
xchg
incb
pop
mov
xchg
lods
fidivrl
loop
xchg
sbb
aas
addr16
xlat
sbb
add
es
pushf
outsb
mov
xorb
inc
shl
repz
xchg
fs
mov
add
fcomps
xchg
dec
daa
loop
repnz
or
cmp
and
fisubs
cli
repnz
imul
xchg
daa
shrl
inc
mov
in
mov
pop
cs
dec
mov
pop
cmp
fidivrl
je
int3
loope
out
cld
push
xchg
and
in
mov
xlat
pop
cwtl
mov
dec
add
aas
and
cmp
in
sti
loopne
push
daa
xchg
adc
arpl
mov
mov
ja
jno
dec
push
loopne
or
jbe
das
sarb
cmpsb
sbb
rolb
jo
add
stos
stc
sub
cmp
les
test
in
adc
dec
lods
pop
push
movsl
call
pop
and
cmp
pop
pusha
adc
call
out
enter
mov
add
mov
popf
xlat
push
cmpsb
dec
xor
int3
dec
or
cmp
rcll
data16
cld
lea
and
lcall
adc
push
push
pop
jnp
data16
idivl
aaa
repnz
sahf
mov
ret
jl
dec
dec
imul
lods
push
mov
xchg
push
call
xor
shlb
jno
data16
mov
aad
lds
xor
insb
imul
fistps
sub
das
ss
xor
lock
insb
push
loopne
jmp
dec
stos
int
loop
cmp
cmp
adc
lods
sbbl
shrl
shlb
mov
and
mov
inc
inc
add
and
enter
leave
fs
je
fisttpl
daa
jmp
lea
or
fsubl
repz
fimull
jbe
loope
mov
shl
fld
sbb
lods
scas
and
imul
mov
fsubl
cmp
gs
stos
ret
out
add
stos
mov
das
cmp
cli
div
scas
divb
mov
add
lock
mov
mov
inc
jo
lret
fisubrs
pushf
in
sbb
jp
sub
cmp
mov
xchg
mov
imulb
xchg
insl
adc
lret
jmp
pop
jp
xchg
bound
lods
imul
and
mov
push
mov
aad
push
ljmp
out
jge
dec
inc
dec
enter
adc
in
inc
cmpsb
repnz
movsl
mov
dec
cmpsl
pop
data16
stos
negb
lcall
scas
and
cs
sti
pop
jb
ret
out
xor
inc
cmp
mov
aad
orb
mov
out
jae
xchg
jecxz
leave
lcall
mov
lcall
loopne
xor
sbb
cwtl
fistps
loope
sbb
js
adc
pop
test
mov
repnz
pop
mov
in
cs
scas
jae
jge
leave
scas
inc
aas
sbb
mov
lahf
add
xor
pushf
jp
xor
mov
and
adc
fcompl
sahf
mov
jns
inc
test
adc
mov
xlat
inc
mov
inc
pushf
push
pop
mov
pop
pop
cmp
cs
cli
inc
movsl
cwtl
mov
xor
fisubrs
sub
imul
add
xchg
mov
mov
movsl
dec
sbb
lret
push
and
aas
pop
imul
add
rcll
lock
xadd
push
sahf
push
js
xchg
scas
into
xchg
xchg
xor
or
icebp
dec
lahf
std
popl
push
out
cmpsb
cs
in
or
push
loopne
push
xchg
mov
lahf
aam
test
rol
movzbl
std
push
inc
cwtl
xchg
fldt
sub
out
ret
sbb
mov
cmpsl
sbb
fists
dec
mov
das
imul
push
pop
inc
in
jmp
push
mov
jne
clc
je
stos
adc
pop
sbb
into
shll
fimuls
xchg
sbb
xlat
pop
out
stos
jb
jno
mov
lods
call
enter
push
icebp
call
inc
negb
inc
push
pop
mov
jo
loope
lods
inc
stc
xchg
push
ds
in
imulb
loopne
add
inc
pop
hlt
sbb
inc
lret
pop
sbb
cmp
mov
lea
jg
adc
mov
mov
xor
sti
out
cmpb
and
or
and
loope
xchg
and
mov
xor
arpl
fabs
or
push
lea
fsts
add
clc
out
fstps
lods
mov
xor
or
std
mov
fldcw
out
mov
outsl
sti
iret
test
jge
mov
jmp
sub
mov
lahf
vcvtsi2sdl
adc
or
jno
lahf
mov
mov
scas
sahf
decl
push
mov
lea
fwait
inc
push
jge
push
gs
sub
lret
aad
jecxz
shrl
sbb
addr16
stc
repnz
decl
xor
push
jae
mov
sbb
xchg
push
in
ljmp
mov
push
adc
in
fidivs
std
ljmp
scas
inc
xor
cmpsb
bound
nop
xchg
int
cwtl
lcall
xchg
inc
pop
xchg
mov
adc
and
leave
jg
push
add
adcb
out
out
sub
pop
enter
lods
push
in
or
je
lret
int
out
jle
inc
rorb
fisttpl
push
adc
sub
iretw
add
ret
insl
andb
enter
es
int
ds
inc
add
fiadds
mov
rcr
mov
faddl
ds
fmuls
jp
mov
xchg
or
xchg
pop
xchg
gs
imul
iret
jne
jo
out
lock
imul
inc
int
or
push
push
test
jns
out
dec
xchg
cs
repnz
aaa
xor
lods
cwtl
fdivs
lahf
inc
mov
mov
push
insl
jns
fs
pop
shr
sbb
int3
leave
cs
hlt
push
xchg
mov
lret
cmp
mov
mov
imul
jno
push
movsb
xorb
mov
lods
sahf
adc
inc
sarb
loope
cmp
shll
inc
jnp
push
notb
or
lock
pop
or
imul
add
ss
push
fnstsw
icebp
jno
test
pop
push
insl
dec
arpl
add
sub
push
dec
push
bound
sub
jmp
adc
insb
nop
fisubl
addr16
sbb
cmpsl
aam
test
jmp
mull
adc
cmc
aaa
aas
and
mov
shr
mov
adc
ss
movsb
jo
xchg
mov
enter
lret
fs
xorl
mov
mov
sbb
push
inc
scas
jmp
imul
cmpb
jae
dec
mov
push
mov
add
sbb
mov
inc
jae
add
pop
adc
fnstenv
into
push
lcall
xor
dec
stc
ret
rolb
mov
mov
push
fsubrl
adc
test
adc
adc
lods
and
outsb
cmpsb
jb
lods
andl
sbb
mov
aaa
fnstsw
enter
jbe
mov
xor
fnstcw
jg
mov
iret
add
mov
add
mov
adc
je
xor
sbb
adc
fmull
xchg
mov
outsl
xor
sub
fsubr
outsb
dec
cmp
cmp
mov
repz
or
cmp
xchg
movsb
in
arpl
push
mov
adc
rcrb
aam
push
sub
inc
aam
jge
pop
inc
xchg
mov
sbbb
lea
xchg
loope
mov
pop
mov
push
dec
movsl
jl
cs
or
jp
pop
pop
aaa
push
pop
outsb
clc
in
jmp
add
push
aaa
ds
or
jo
cmc
jb
mov
fld1
adcl
jne
pushl
in
mov
push
pop
subl
mov
push
mov
mov
lahf
jge
shlb
lds
mov
mov
inc
cmp
adc
sub
idivb
push
loop
int3
bnd
insl
pop
lock
jp
notb
fldcw
clc
imul
pop
test
or
xlat
mov
sbbl
pop
push
fstps
icebp
je
popf
ljmp
xor
sti
sbb
mov
mov
add
icebp
stos
add
test
mov
mov
xor
mov
cwtl
int
in
sbb
pusha
into
mov
inc
push
add
iret
mov
sbb
test
mov
push
cmp
push
jbe
int3
repnz
fucom
push
test
cmp
mov
cmp
mull
pop
cmp
shll
out
or
inc
in
dec
jnp
orb
sbb
sbb
andb
cmp
cmc
mov
pop
xchg
in
popa
js
out
xchg
nop
xor
into
loop
jns
jecxz
or
fldcw
sub
cmp
imul
iret
arpl
inc
jae
daa
nop
shl
jmp
cmpsl
push
push
xlat
out
loop
scas
add
push
or
into
test
imull
out
js
lods
cmp
xchg
rol
and
test
dec
sahf
sub
add
xchg
rcrl
fs
loope
sub
pop
mov
rcrb
ja
rorl
icebp
cli
jecxz
andl
rorl
ja
xchg
xchg
push
mov
int3
jecxz
lods
or
insl
pop
adc
das
std
repnz
cs
add
mov
call
testb
mov
push
or
pop
push
add
xor
sub
aam
scas
push
int
movsl
jno
sbb
sbb
cmp
sub
xor
imul
xchg
sbb
fsts
xor
push
and
nop
xchg
jge
fcmovnbe
mov
dec
push
movsb
int
and
add
inc
mov
xor
fldt
pop
sbb
xor
loope
dec
dec
push
into
stos
int3
rep
inc
popf
pop
fsubrl
std
divl
push
mov
outsl
jecxz
push
inc
mov
enter
jns
shrb
aas
or
in
mov
push
andl
jge
inc
cwtl
push
jg
jb
cli
jge
inc
pusha
ja
push
push
or
lahf
dec
cmpsl
scas
jg
mov
fcomp
aaa
mov
ret
loope
js
sarl
push
sbb
fdivrl
ror
ret
inc
mov
or
xchg
adc
lods
cmp
inc
movsl
xor
inc
jbe
sub
lcall
push
sub
popa
nop
nop
mov
jb
or
icebp
fsubr
pop
adcb
or
mov
add
rol
repz
ja
cmp
mov
outsl
jge,pt
or
call
stos
addr16
addr16
leave
es
pop
cltd
stos
fs
iret
xor
or
pop
xchg
fmul
cmc
mov
add
add
xchg
test
sub
fcomp
pusha
enter
nop
mov
clc
push
mov
aam
push
pushf
push
add
rorb
mov
jle
ficompl
adc
or
cmp
arpl
push
popa
mov
out
mov
loop
jmp
jl
add
push
xor
repz
rorb
in
repz
popl
out
cmc
inc
and
mov
dec
pause
flds
add
mov
repz
inc
mov
rorb
popa
test
add
rcl
mov
and
sbb
jg
pop
std
cwtl
mov
test
je
mov
push
pop
and
fwait
popf
sahf
mov
cmp
inc
sub
xchg
push
sub
imul
divps
or
pusha
fs
mov
lods
f2xm1
scas
push
mov
push
inc
xor
or
cmp
psubusb
jmp
mov
adcb
int3
mov
mov
sub
jo
dec
loopne
mov
xchg
or
push
cmp
sbb
sub
fdivs
sub
lods
add
fbstp
out
gs
mov
mov
sub
iret
dec
dec
dec
or
aas
outsl
dec
bound
out
pop
sub
cmp
sub
out
dec
push
and
fsubl
xchg
hlt
jne
mov
add
fcomps
xchg
cs
sub
push
cmp
xor
xor
test
or
out
iret
sub
xchg
mov
sbb
mov
mov
xchg
add
sbb
ss
push
sbb
roll
lods
push
addr16
jo
fbstp
cmpsb
cmp
das
mov
inc
inc
cmpsb
and
cli
lcall
insl
js
jg
dec
mov
ja
lds
test
dec
xchg
scas
inc
mov
inc
fidivl
lds
nop
sbb
mov
das
mov
push
nop
in
cmpl
add
xchg
rolb
adc
sti
push
or
pop
jg
imul
add
fsubs
cmp
push
sti
xor
bound
rorl
xor
test
mov
hlt
push
repnz
jle
or
int3
mov
adc
mov
push
ds
pushf
mov
pop
inc
pop
les
cmp
ret
push
sbb
sti
lret
mov
out
imul
iret
push
pop
fisubrs
pop
mov
dec
inc
out
add
mov
out
cwtl
xor
ljmp
outsb
jns
or
stc
dec
xor
and
dec
movsl
add
adc
js
inc
fs
mov
mov
lcall
imul
mov
scas
int
mov
push
les
push
gs
xchg
gs
loope
push
sub
sub
inc
arpl
sub
mov
mov
rolb
frstor
mov
cmp
fmull
xchg
out
push
push
in
fisttps
xchg
aaa
xchg
test
xchg
scas
jmp
test
cwtl
inc
loopne
dec
je
pop
test
fadd
xchg
out
cmp
negl
mov
loope
jo
cmp
fidivl
mov
jg
jmp
leave
es
cmpl
pop
popf
cmc
mov
daa
xchg
mov
into
cmp
aad
adc
mov
jle
sbb
movsl
xchg
xchg
add
pushf
push
scas
aaa
adc
rcll
push
xor
and
jmp
pop
std
std
inc
sbb
gs
jp
jo
push
and
or
das
in
lods
xchg
inc
mov
sub
scas
adc
jbe
ret
mov
cmp
idivl
cmp
adc
imul
scas
ret
cld
repz
sub
pop
call
jno
aaa
jp
nop
pop
dec
or
xchg
stos
shrl
cmp
aaa
fists
or
add
das
daa
mov
sub
cwtl
dec
xor
stos
mov
mov
adc
mov
sbb
into
or
sub
stc
aas
fisubrs
iret
ds
push
outsb
add
mov
jmp
in
push
xchg
orl
testl
push
mulb
lahf
aam
dec
leave
xchg
push
or
jecxz
push
jmp
mov
adc
push
fwait
dec
mov
sbb
cmp
in
xor
sub
lods
daa
lock
es
orb
je
and
lock
jp
lahf
xchg
adc
cmp
fdivrs
add
sub
mov
insb
test
ja
enter
xchg
mov
stos
movsb
arpl
roll
and
int3
fstpl
aaa
xchg
cltd
ss
out
insl
outsl
arpl
push
ja
stc
inc
hlt
in
loop
lret
in
jne
ret
movsl
mov
push
lret
movsl
sub
jmp
pop
mov
testb
out
shl
sti
jle
sbb
push
inc
fbld
mov
andl
lret
fwait
sub
xchg
loope
xchg
xchg
enter
cmp
mov
push
test
loop
sbb
fyl2xp1
dec
into
add
cmp
xchg
inc
test
push
add
js
pop
cmp
icebp
imul
or
lods
sahf
jnp
dec
adc
mov
hlt
mov
fs
sub
adc
cs
incl
lcall
cwtl
adc
adc
sbb
dec
jle
mov
notb
cmc
popa
pop
std
int
cmp
xchg
rorw
dec
mov
add
inc
and
lods
pop
push
jmp
pop
addr16
adcl
daa
mov
push
test
sbb
mov
imul
lds
xor
repnz
sbb
pop
test
movsl
dec
data16
js
mov
cld
sub
lods
in
dec
mov
enter
fstpl
ds
lock
aad
lods
rcrl
jnp
jl
out
mov
insb
push
imul
sbb
cli
pop
push
sahf
push
mov
cmp
stos
daa
push
jne
out
out
fs
js
sub
inc
sbb
lock
mov
lds
rcr
jl
arpl
adc
and
shr
mov
clc
ss
lods
push
pop
jge
sub
mov
xor
mov
shll
outsb
push
sbb
xchg
mov
inc
or
add
pop
ret
jnp
mov
rorb
test
loope
sub
scas
mov
cmp
into
cwtl
bound
nop
fbld
test
push
add
sub
fnstcw
test
push
cmp
inc
sbb
cld
insl
xchg
push
jl
cmpsb
xor
mov
insl
lahf
sub
and
insb
aaa
mov
fdivp
hlt
pop
testl
outsl
pop
pushf
mov
rorb
ds
imul
adc
lcall
imul
sbb
push
or
mov
clc
movsl
out
test
ret
cmp
cmp
xor
sbb
out
mov
dec
push
ja
int
sahf
push
lds
ljmp
mov
lcall
sbbb
pop
inc
test
lcall
rolb
aaa
out
cs
scas
or
xchg
hlt
into
push
inc
sbb
xchg
shll
lahf
mov
lea
fnstcw
int
inc
sub
popa
out
imul
inc
sbb
leave
pop
popf
or
push
ja
xor
jo
paddsb
rclb
and
jbe
add
fbstp
loopne
push
icebp
dec
cld
out
shr
mov
add
xchg
rcrb
ds
inc
stos
es
lods
fmull
imul
rorl
adc
mov
icebp
mov
loope
fimuls
adc
shlb
mov
test
xchg
popa
je
push
loop
movsb
sbb
into
cmp
xor
jno
xor
dec
add
div
xchg
pusha
pop
pop
pop
pop
jne
ret
pop
stos
adc
aam
popa
push
out
dec
shrl
sbb
imul
jle
repnz
insb
xchg
in
gs
adc
test
iret
int
cltd
icebp
out
xchg
or
rolb
cmp
xor
jo
sar
and
scas
pop
and
adc
pop
or
in
mov
pop
mov
push
sub
dec
shlb
mov
out
hlt
mov
pop
xor
lock
pop
fs
test
mov
loop
adc
adc
mov
push
mov
push
outsl
aad
sbb
push
sub
ds
push
push
cmp
pop
es
add
jge
sbb
int
fcomps
mov
xchg
inc
subl
xchg
les
sahf
sbb
outsl
and
sbb
inc
jno
stos
and
inc
cmp
and
lock
cmp
mov
mov
sub
icebp
lods
outsb
lret
lea
lock
mov
inc
dec
add
pusha
shlb
ja
mov
stc
clc
or
aas
add
cmp
gs
sbb
sbb
sahf
or
mov
cmpsb
push
data16
pop
or
or
out
outsl
stos
mov
jmp
cmp
out
add
aaa
imul
pop
mov
pop
cmc
nop
adc
filds
ljmp
stos
sbb
insb
ds
or
push
jg
jns
cmp
lret
jmp
lahf
cmpsb
enter
mov
fs
or
imul
daa
sub
xlat
dec
pusha
xchg
leave
call
aad
daa
mov
dec
add
push
rorb
enter
pop
mov
push
ss
cli
mov
mov
mov
push
dec
push
popf
xchg
jno
pop
imul
outsb
add
fistpl
andl
std
xor
sub
pop
jle
iret
cmpl
xor
mov
or
jb
xchg
fwait
push
scas
fimuls
mov
lcall
lret
inc
or
std
lahf
xor
and
gs
loope
fisttpl
jg
xchg
dec
push
or
dec
fisubrs
inc
mov
xor
dec
faddl
mov
push
in
xchg
data16
stc
sarb
inc
enter
add
out
aam
add
repz
adc
adc
xchg
pop
sub
cmp
push
jno
test
mov
movsb
cmpsl
mov
fs
js
xor
jns
outsl
add
aam
sbb
lret
stos
adc
inc
push
pop
and
stos
scas
lret
lock
frstor
sbb
adc
aad
sub
add
aad
cmp
stos
xchg
in
cmp
es
hlt
je
aam
jle
pop
aad
icebp
lcall
or
mov
jns
int
pop
sbb
dec
inc
iret
adc
sti
push
fs
sbbl
stc
cmc
jmp
insb
test
cmp
scas
jnp
das
loop
jns
in
clc
and
and
lock
cmp
popf
dec
cmp
in
std
in
dec
nop
mov
mov
mov
dec
xor
scas
cmp
jae
imul
mov
movsl
sub
cmp
inc
in
sub
and
and
sahf
push
nop
jmp
or
in
dec
push
imul
mov
add
mov
cmp
inc
or
test
fldt
outsl
ret
dec
mov
push
cs
cmpsb
out
cmp
or
pushf
outsb
rclb
call
jle
aad
sbb
out
jnp
jmp
adc
int3
dec
xchg
jno
push
mov
dec
sub
mov
cltd
lahf
pusha
cwtl
dec
sub
into
push
imul
js
sahf
and
mov
insl
test
les
daa
sbb
push
push
mov
test
adc
push
rorb
jb
addl
xorb
sub
arpl
cmpsl
push
ja
jbe
ds
in
fnstsw
bound
add
adcl
sbb
push
xchg
outsb
ret
mov
jg
fwait
out
cs
push
or
je
fdivl
jbe
pop
cmc
imul
adc
shlb
push
ja
mov
dec
xor
or
ja
fnsave
pop
push
or
mov
cs
lods
jmp
sub
cwtl
lea
sahf
mov
mov
fsubrl
jmp
incb
stos
sub
loop
mov
mov
lcall
std
lock
js
loope
dec
sub
push
ret
lods
leave
rcrb
loop
ror
xor
test
insb
inc
dec
pop
pop
cmp
xor
into
sbb
nop
adc
inc
das
push
shll
nop
mov
rcrl
clc
clc
mov
jno
in
sub
incb
mov
or
inc
adc
lods
imul
out
insb
aad
mull
mov
stos
xacquire
xorl
cmpsl
fldcw
cmp
adc
push
jnp
inc
mov
js
xchg
scas
js
cmpsb
sub
stos
cmp
and
rclb
fstl
les
and
sub
loop
sbb
imul
xchg
adc
data16
std
out
test
adc
cmp
out
fsubp
xor
adc
shlb
scas
jnp
sahf
mov
insl
dec
cmpsb
dec
data16
dec
cld
movsl
and
push
lahf
pop
fisttpll
dec
fwait
xchg
or
fsts
fwait
push
scas
adc
mov
sub
xor
jbe
out
pop
jnp
adc
lods
xchg
fwait
aam
stos
gs
mov
stc
sbb
adc
adc
mov
jge
sarl
fwait
int
sbb
sahf
push
cwtl
insl
dec
std
mov
gs
outsl
out
lret
pop
jno
fwait
inc
xor
ret
pop
les
inc
inc
inc
orb
cltd
divb
jge
inc
dec
fistpll
or
jle
sti
xchg
in
in
jg
pushf
push
mov
jle
cmpsl
je
dec
lods
popa
adc
jge
fs
test
push
dec
nop
call
or
cmp
inc
idivb
imul
les
inc
les
jl
shlb
dec
sub
scas
mov
jge
mov
inc
sub
stos
jecxz
sub
fstpl
add
push
add
push
jns
sub
jmp
pop
mov
and
sbb
fmull
and
loopne
xchg
out
inc
in
mov
es
xlat
in
adc
stos
popa
mull
rorb
bound
pop
stos
cmp
mov
inc
insb
mull
cli
inc
push
mov
int
push
je
imul
out
mov
mov
stc
xchg
ljmp
rorl
push
leave
mov
mov
shll
stos
xor
nop
loope
mov
or
adc
mov
sub
cmp
sub
aaa
cmpsb
xchg
add
mov
sbb
pop
xchg
in
mov
push
fsubl
jmp
in
xor
out
loopne
mov
notl
sbb
int
push
lret
mov
mov
test
push
dec
nop
fidivs
inc
sub
das
push
dec
ficoms
fidivl
add
ret
xor
cs
cmp
mov
cmc
cmp
lods
test
jns
inc
push
jns
xor
lret
cmp
jle
lds
jns
outsb
clc
cmp
pop
ds
push
lret
pop
sbb
nop
jb
cmpsl
jmp
xor
jo
jnp
sub
xchg
mov
insl
or
ljmp
add
xchg
outsl
sar
mov
je
or
pop
subl
xchg
pop
mov
andl
cmc
nop
adc
cmpsb
and
scas
pop
in
ret
ret
dec
mov
aad
bound
stos
mov
subl
clc
inc
mov
xchg
mov
lahf
mov
or
cmpsl
jne
mov
adc
in
push
ljmp
dec
add
xchg
add
jbe
and
push
add
popl
movsl
xor
sbb
stos
popa
rorl
sahf
inc
inc
mov
pusha
fdivl
push
imul
stos
in
mov
mov
icebp
mov
lret
mov
and
movsb
pushf
adc
test
ds
mov
popa
mov
jnp
out
mov
xchg
in
loop
loop
dec
jnp
dec
and
rcl
rep
cmp
enter
jae
popa
adc
loopne
sbb
jl
mov
dec
shll
sbb
pop
mov
inc
ljmp
cmpb
mov
mov
sti
dec
lods
into
xor
xchg
int
popa
add
adc
pop
ret
push
add
adc
xlat
outsb
shll
out
std
pop
xor
cmpsl
cmp
inc
test
adc
mov
adc
pop
mov
leave
inc
lock
dec
sub
adc
test
mov
into
cli
inc
mov
xor
cmc
xchg
scas
sub
jae
or
insl
add
sub
add
mov
adc
lcall
hlt
mov
stos
jae
roll
aam
daa
arpl
or
mov
adc
push
pushf
out
lods
sub
rolb
or
cmp
and
dec
pop
mov
imul
xorb
cmp
movsl
inc
adc
jecxz
ror
jl
xchg
dec
and
pop
enter
dec
lret
xor
stc
aaa
adcb
jb
int
fstpl
cmp
inc
cmpsb
mov
and
cwtl
mov
ss
inc
das
jae
sbb
pop
jmp
jno
mov
add
dec
mov
xchg
fstps
adc
jge
sbb
ficompl
sub
out
mov
imul
and
insb
js
out
dec
fstpt
ds
jne
in
mov
add
arpl
jno
dec
scas
clc
nop
out
mov
mov
scas
mov
pop
in
cmpl
aaa
scas
cwtl
cmc
and
fistps
pop
sub
out
cmp
popa
shlb
xor
mov
nop
sbb
or
shlb
sub
add
adc
or
jmp
push
js
add
adc
inc
inc
pop
mov
xchg
cmc
mov
adc
and
repz
mov
mov
rcll
in
ss
pop
pushf
xor
mov
movsb
gs
pop
ss
add
xor
idivb
inc
mov
mov
cmpsb
dec
test
nop
mov
xchg
imul
mov
or
jne
dec
inc
stc
fisttpl
fistl
jo
test
call
test
fisubl
mov
clc
les
out
rcll
mov
cmpsb
aam
lret
test
sbb
pushf
mov
loope
aaa
and
sahf
mov
jle
xchg
cmp
lds
sbbl
andb
movsb
outsl
mov
xchg
into
lahf
pop
and
dec
xor
jmp
mov
out
sbb
lds
not
xlat
dec
dec
xor
ljmp
mov
pop
bound
shl
sub
nop
mov
or
mov
dec
int
popf
pop
cmpsb
daa
lret
sbb
lahf
add
cmpsb
mov
push
popa
sbb
mov
cmp
mov
dec
adc
mov
jge
mov
lds
cwtl
cld
jb
cmp
xchg
xchg
adc
popf
lods
mov
or
mov
icebp
mov
int3
push
push
pop
or
xchg
hlt
fmull
sub
cwtl
xchg
imul
orb
or
mov
mov
mov
rclb
aas
pop
sbb
jne
out
xor
inc
in
xor
add
and
les
pop
je
in
orl
and
lock
and
movsb
sub
jmp
pop
mov
or
data16
mov
cmpsb
dec
and
movsl
sbb
lahf
dec
test
cwtl
mov
lret
and
mov
orb
lods
aam
xchg
imul
xchg
mov
test
mov
fsubs
cmpsb
shll
jle
pop
lcall
repz
mov
iret
scas
push
std
shll
adc
fildl
orb
test
mov
mov
mov
movsl
add
push
add
mov
test
push
mov
cmpsb
inc
ljmp
push
in
xlat
inc
inc
into
push
mov
shl
add
subps
movl
call
push
adc
add
into
mov
mov
cmpps
ret
push
lds
sbb
pop
fwait
jbe
mov
js
cwtl
mov
rclb
xor
mov
xor
pushf
mov
cltd
loopne
pusha
jns
xchg
cmp
xchg
sti
icebp
or
fdivl
sti
xor
cli
mov
loop
lcall
mov
divb
pop
jno
push
dec
outsb
in
in
pop
ss
push
nop
stos
cli
std
and
mov
cmp
dec
repnz
popf
cmc
mov
xchg
jp
sub
mov
dec
mov
jno
js
jbe
test
jmp
and
enter
push
push
pop
int3
mov
clc
and
mov
and
test
push
sub
or
mov
call
xchg
or
je
std
in
hlt
pop
jno
popa
frstor
adc
mov
mov
or
and
or
das
adc
mov
cli
js
and
sbb
ss
or
out
xchg
jmp
adc
dec
jp
out
xor
sbbl
push
mov
cmp
ret
adc
push
enter
add
push
fiaddl
xor
jnp
jg
and
rol
mov
test
mov
mov
xchg
dec
inc
jb
jns
imul
imul
lods
mov
addb
icebp
mov
lds
inc
mov
sahf
call
sub
sbb
jae
mov
xor
bnd
sub
pop
sbb
sub
sbb
inc
ljmp
cmc
clc
or
daa
addl
dec
loop
or
lea
ss
cld
pop
push
xor
imul
in
ret
fdivl
imul
test
xchg
jnp
mov
and
test
std
push
lahf
inc
push
mov
cmp
cld
lret
cltd
xlat
iret
in
stos
adc
fcmovb
cmpsl
out
in
imulb
cltd
iret
jp
lods
add
popa
push
movsb
popl
mov
shll
aaa
jae
cmp
clc
inc
loop
jle
xor
push
aas
loop
rclb
lea
subl
lret
lds
push
aas
imul
fwait
dec
movsl
xchg
fisttpl
jp
mov
into
cmp
subl
pop
xchg
lahf
daa
je
into
xchg
jmp
inc
cmpsl
xchg
int3
xor
loopne
sbb
ds
jmp
dec
mov
sbb
adc
push
hlt
leave
dec
loopne
cmp
lds
xchg
scas
jl
ja
fsubl
psadbw
movsb
lock
jnp
pop
repnz
je
sti
imul
out
lods
pop
adc
sub
push
mov
shrb
pop
xchg
fldl
cmpsl
es
packssdw
dec
adc
cmp
shlb
outsb
test
shlb
rorb
push
movsl
or
mov
push
leave
sti
xor
je
imul
sahf
mov
xchg
jae
aad
jle
insl
test
call
fbstp
fxch
sbb
inc
sbbb
sub
std
loope
push
fbstp
adc
out
aas
mov
jne
inc
ss
iret
rcrb
add
ret
pop
lods
or
or
mov
test
xchg
mov
dec
clc
repnz
jne
push
adc
data16
bound
in
sahf
loopne
and
and
movaps
inc
popa
movsb
cmpsl
leave
aaa
insl
add
jo
xchg
pop
cltd
iret
cmp
test
push
stos
imul
jp
loop
mov
pop
lea
push
adc
lahf
push
mov
push
sub
or
cmpsb
scas
ret
push
out
dec
ja
sbb
sahf
or
lods
aad
lock
loopne
or
adc
stos
lcall
push
sar
xchg
outsl
das
out
ljmp
jne
cltd
mov
cmpsb
xchg
or
lret
mov
mov
xchg
in
fcmovb
pop
out
out
pop
mov
sub
stos
xor
jbe
inc
cmc
mov
aam
stc
and
push
jmp
pop
pop
imul
push
mov
and
hlt
push
test
insl
pop
mov
jns
jmp
dec
into
dec
jecxz
xchg
das
dec
lcall
fcoms
dec
mov
dec
test
adcb
mov
mov
push
lahf
sbb
subl
repz
and
jecxz
lods
or
add
in
sbb
pushf
cld
addr16
xchg
sbb
insb
jecxz
std
test
movsb
cmp
lods
push
in
cvtps2pi
cli
push
xlat
jge
sub
or
sbb
loop
mov
dec
aaa
scas
sub
pop
xchg
cmp
mov
pop
and
add
or
sub
out
jns
imul
clc
push
xchg
mov
dec
stos
jno
xchg
xor
mov
pop
roll
not
push
sbbb
push
and
loop
lret
leave
nop
cmpsl
and
je
ret
mov
cwtl
icebp
inc
popf
cmpsl
xchg
mov
fistps
lahf
repnz
test
cs
fimuls
add
fadds
js
mov
cmp
push
dec
jmp
lret
inc
cmpb
inc
jae
xor
mov
repnz
jne
lock
push
push
xor
repz
dec
hlt
and
push
xchg
pop
mov
jno
lods
int3
icebp
shrl
push
fbld
iret
jp
cmp
bound
push
arpl
mov
test
mov
or
pop
and
or
inc
mov
ja
fcmovnb
jle
add
idiv
push
jae
mov
push
addr16
aad
mov
and
fstpl
insb
add
pop
mov
push
inc
push
movsb
cmc
rorl
push
sbbb
push
pop
xchg
inc
das
sahf
mov
out
xchg
imull
scas
dec
lret
dec
movsl
jbe
cltd
and
xchg
or
aad
das
cmp
fadd
lods
stos
or
fnstcw
inc
adc
xor
out
mov
popf
stos
roll
or
pop
sbb
sub
push
mov
ficomps
push
sub
imul
lcall
jns
icebp
cmp
roll
inc
stos
and
test
jno
mov
adc
lret
je
dec
inc
sub
and
lahf
xchg
and
adc
addl
xchg
xor
scas
jge
pop
push
jb
and
in
loop
jecxz
lcall
int3
mov
dec
popf
mov
loop
ret
push
add
lods
fsubs
push
jp
fnstenv
mov
testl
mov
xchg
ds
ja
add
ret
or
jge
stos
xchg
sbbb
aaa
dec
adc
push
sbb
mov
inc
bound
add
mov
xor
adc
cmpsl
lods
sub
and
or
movsb
jmp
mov
ficompl
testb
out
mov
fbld
inc
lahf
fs
arpl
jne
outsl
adc
push
cltd
sbb
adcb
sub
stos
clc
sahf
mov
fsubrl
add
icebp
ss
push
inc
cmp
stc
push
out
adc
add
cwtl
inc
cmp
inc
and
dec
sbb
bound
in
stc
push
gs
push
cmp
jl
xor
jnp
sbb
dec
sbb
mov
jbe
pop
imul
cmp
outsl
rclb
insb
sbb
ljmp
js
mov
xchg
xchg
pop
add
movsb
popf
cmp
std
fsts
daa
ljmp
pop
into
es
sub
or
sub
mov
fldt
jb
mov
mov
sarl
fnclex
das
bound
je
add
xchg
add
dec
in
mov
shl
lock
push
in
int3
sub
and
push
push
in
push
cmpsb
jbe
xchg
stc
pop
jb
sbb
addb
dec
xor
into
int3
test
addr16
cs
loop
xor
fnstenv
ja
push
pusha
nop
or
pusha
add
pop
lcall
pusha
jl
cmp
push
push
addl
jns
outsb
sub
jns
and
xorb
mov
mov
filds
mov
sub
pop
fisubrs
dec
pop
imul
hlt
inc
les
push
pop
vmovdqu
jae
sub
das
pop
notb
rolb
rcl
insb
lds
push
fcoml
dec
daa
aad
cmp
cmp
jg
dec
jp
out
enter
mov
stos
not
icebp
loop
push
cmc
jl
pop
test
int
and
and
out
pop
or
dec
mov
push
in
and
jmp
xchg
sub
pushf
nop
dec
cpuid
pushf
lret
aas
inc
in
outsl
add
popf
std
dec
mov
je
jbe
jne
aaa
push
jl
out
mov
mov
testb
popf
mov
int
in
sbb
xlat
je
inc
fadds
loop
filds
xor
mov
jecxz
mov
aaa
in
pop
pop
cmpb
popa
push
std
cmp
adc
mov
pop
sbb
xchg
sbb
inc
push
mov
pushf
jb
mov
xchg
repnz
jbe
push
jno
inc
data16
cmc
lods
adc
addr16
pop
testb
push
inc
or
mov
sbb
vminpd
jnp
and
mov
and
fs
push
movsl
mov
in
mov
test
pop
in
hlt
add
idiv
jne
fwait
jbe
jo
mov
mov
xor
push
sahf
cmpsl
cltd
fs
dec
adc
mov
insb
enter
scas
insl
icebp
jl
lahf
leave
aas
cmp
jmp
clts
mov
ljmp
cmc
xor
outsb
push
rorl
ret
adc
lret
outsb
lcall
imul
mov
icebp
and
cmpsl
fwait
roll
jg
out
inc
push
inc
cmpsl
inc
mov
enter
dec
test
jno
dec
or
adc
pop
mull
add
mov
xchg
vmovhps
in
mov
outsb
pop
adc
aas
cmpsb
or
mov
pop
mov
mov
aam
test
pusha
pop
mov
mov
ret
pop
lahf
xor
mov
repnz
mov
mov
movsl
popa
cs
mov
arpl
xlat
lcall
cltd
mov
dec
idiv
call
outsb
pusha
add
daa
lds
inc
inc
and
add
add
jne
mov
hlt
mov
rcr
inc
adc
push
cmovo
mov
jecxz
push
dec
sbb
xor
data16
xchg
lret
jge
and
lea
in
xchg
movl
sbb
outsb
enter
or
jle
add
repnz
inc
int3
and
pop
jno
idivb
or
mov
pop
enter
sahf
test
cltd
nop
outsb
and
out
jge
inc
inc
stos
pop
push
cli
lret
mov
cmp
mov
outsl
out
push
jno
popf
imul
sbb
push
jnp
mov
cmp
aaa
into
lahf
movsl
outsb
xor
lods
mov
add
dec
test
fimull
dec
ret
frstor
popa
pop
jp
sarb
xchg
iret
das
pop
mov
jbe
clc
out
mov
mov
ds
clc
out
xchg
push
cmp
faddl
test
inc
mov
or
mov
mov
push
dec
mov
inc
cmp
scas
into
xor
pop
dec
call
les
mov
gs
adc
and
popf
sbb
inc
test
dec
inc
daa
or
mov
dec
add
adc
dec
cmpb
scas
push
dec
test
cmp
ds
sti
and
mov
xchg
lea
cmp
push
dec
mov
sbbb
fwait
jl
dec
ss
hlt
fstpt
sub
adc
xor
cltd
xor
addr16
js
iret
pop
or
and
xchg
inc
ds
jnp
sbb
daa
jmp
test
sub
jne
push
imul
mov
add
dec
mov
cmp
shll
dec
push
adc
and
add
in
outsb
adc
repz
inc
lret
in
outsl
or
and
out
push
add
cmc
inc
and
mov
outsb
xor
dec
fldcw
push
inc
stos
lcall
pop
push
mov
repnz
xchg
mov
and
fwait
insl
jge
cmp
fs
inc
mov
movsb
nop
dec
mov
push
outsb
xchg
push
daa
cwtl
xchg
jae
insb
fadds
pop
dec
icebp
cmp
icebp
incb
mov
cltd
cmp
jmp
adc
rol
push
dec
jno
add
addr16
scas
js
mov
mov
loope
es
lock
pusha
lods
adc
lds
xor
mov
adc
jbe,pn
jecxz
test
lods
mov
xchg
pop
movsb
jecxz
imul
push
mov
mov
gs
dec
jno
inc
outsl
add
sbb
cltd
xchg
jmp
mov
aam
jecxz
pop
addr16
dec
cld
daa
sub
xor
cmp
and
pop
adc
lret
imul
stc
stos
cmp
pop
clc
stc
test
adc
xor
xor
lea
ss
dec
sahf
movl
sar
jne
push
push
mov
add
jg
or
add
mov
in
sti
and
jnp
pop
stos
mov
cmp
add
adc
sti
ss
and
fs
fbstp
aas
inc
or
mov
pop
pushf
mov
pushf
add
aam
fstps
pop
cmc
mov
iret
test
shr
pop
cltd
ds
cld
hlt
and
lret
cmpsb
adc
movsl
sub
or
fldl
jg
cs
je
cmp
push
xor
xor
shl
jmp
mov
mov
bound
sub
sub
pop
cltd
mov
jno
xchg
lods
xor
add
cmp
sbb
mov
arpl
xor
mov
icebp
mov
xchg
cs
mov
sbb
mov
mov
or
dec
adc
mov
jmp
jle
in
hlt
or
clc
pusha
dec
mov
shl
cmp
dec
es
xchg
dec
and
adc
cmp
stc
add
shlb
lods
mov
push
inc
xor
cwtl
push
ficoms
in
ss
ds
repnz
es
fcompl
fwait
shll
decb
push
xor
mov
sahf
std
stos
add
out
aam
cltd
fwait
repz
icebp
mov
dec
sbb
and
das
jo
outsl
cmp
into
add
mov
and
dec
jne
dec
mov
repz
pop
pop
adcl
cmc
imul
mov
jnp
mov
xlat
mov
xlat
movntq
add
ds
insb
imul
aas
dec
loop
icebp
mov
inc
mov
push
dec
sub
dec
and
xor
pop
jbe
jbe
cmp
gs
jbe
xlat
mov
sbb
mov
out
fs
jmp
add
fdivrp
inc
adc
cwtl
or
mov
dec
int3
mov
adc
ja
jno
mov
mov
pop
adc
xchg
mov
outsl
iret
inc
roll
cmp
xrelease
mov
testb
divb
dec
jmp
andl
imul
pop
xchg
subb
jg
shlb
jnp
or
adc
jmp
scas
imul
mov
sbb
dec
ljmp
les
popf
inc
mov
rorb
je
xlat
rcrb
lret
pop
sbb
test
arpl
cmc
xchg
cs
mov
into
mov
pop
xchg
adc
mov
ss
xor
sbb
cmpb
ljmp
dec
sbb
lods
inc
mov
outsb
or
and
ret
cmp
cmp
cmc
test
stos
cmp
sarl
dec
mov
sti
imul
lock
cmc
or
xor
mov
xor
cmc
hlt
sub
vpshufd
mov
cmp
and
push
jmp
inc
out
mov
cmp
mov
outsb
cmp
fisttpll
mov
ss
mov
push
mov
negl
mov
les
insb
adc
fs
sarb
scas
mov
outsb
dec
xor
jmp
xor
orl
jmp
or
pop
sarb
jbe
sbb
fisubs
loop
mov
jns
lret
jp
je
push
sbb
pop
sbb
test
inc
test
pop
xchg
dec
outsb
sub
leave
into
lods
clc
pop
scas
int3
scas
jp
pop
or
shlb
mulb
jecxz
imul
addr16
ftst
paddusw
cmp
mov
jns
jle
enter
xchg
xchg
les
mov
lock
push
imul
push
add
daa
int3
out
push
sti
mov
cmp
jb
add
cwtl
push
xlat
pusha
fistl
imul
fisubl
popa
pop
jae
inc
sti
in
xor
aas
xchg
out
in
xchg
xchg
xor
cmp
mov
imul
jecxz
int3
xlat
push
dec
das
push
jmp
jp
pop
mov
add
fistl
mov
movsb
mov
sbb
dec
dec
fsts
nop
add
aam
lods
mov
shr
in
push
in
mov
mov
dec
pop
incl
jmp
ficompl
call
aad
push
push
mov
aaa
lea
pop
mov
dec
jle
pusha
dec
xor
dec
adcl
and
mov
and
mov
pop
cmp
push
jbe
sub
or
xchg
fisubrl
repz
shrl
mov
loop
adc
sub
shll
pop
mov
int3
push
loopne
test
cmp
add
sub
cmp
add
mov
push
pop
not
in
mov
test
xchg
mov
xchg
insb
adc
addr16
push
cltd
or
pop
addr16
mov
cmp
call
clc
mov
mov
outsl
jg
pop
and
testl
mov
jns
push
jp
push
adc
ss
aaa
and
jo
mov
cmp
push
xlat
push
daa
in
ds
mov
stos
xchg
ret
outsl
and
or
xchg
push
inc
and
and
lret
pop
mov
repz
lea
push
and
hlt
loope
xor
pop
sahf
in
dec
push
mov
sbb
rorb
imul
aad
lds
sbb
pop
imul
mov
jmp
push
xchg
call
pop
inc
in
adc
mov
sbb
dec
mov
aas
into
pop
or
out
pop
in
dec
pop
mov
adc
cmpsl
movsb
and
mov
addr16
pop
pop
lds
inc
and
ljmp
push
cwtl
sub
inc
imul
pusha
mov
push
xor
aad
add
inc
xchg
add
mov
sub
lret
xchg
test
pop
sub
inc
mulb
fisttpll
push
popf
jp
cwtl
sbb
jge
mov
push
xchg
xchg
dec
jl
iret
add
test
pop
imul
mov
and
push
xor
rolb
and
in
mov
xor
js
int3
jns
lock
nop
mov
sub
pop
sub
push
adc
nop
pop
cmp
xor
dec
push
js
fsubr
lods
movsb
add
cmp
std
dec
or
mov
mov
xor
mov
mov
jmp
ja
adc
lods
jbe
rcrb
cs
xlat
xchg
sub
scas
push
int3
push
jge
stc
and
adc
out
nop
mov
mov
adc
outsb
testb
sbb
xchg
push
xor
fs
push
or
pop
add
xor
jl
mov
push
fnstsw
test
inc
add
scas
push
inc
scas
popl
pusha
or
cmpsb
in
fistpll
cmpsl
dec
jge
outsb
out
stos
lret
mov
mov
arpl
adc
fisttpll
pop
push
cltd
fistps
orb
repnz
das
pop
sub
cmp
imul
add
sbb
push
xor
ss
mov
and
fisubl
mov
sub
std
not
mov
adc
das
imul
pop
dec
stc
andb
rcll
nop
mov
jne
pop
subb
mov
adc
fs
push
std
cli
push
test
mov
sub
cmp
mov
jge
loopne
jg
sahf
popf
es
aas
mov
out
divb
stos
jl
call
sbb
rcl
add
stos
mov
sbb
push
pop
mov
cmp
pushf
xchg
rolb
xchg
inc
aad
inc
test
aaa
push
repz
mov
xor
ja
mov
aad
fimull
xchg
jmp
sub
mov
leave
roll
in
add
mov
scas
es
and
xlat
mov
shlb
push
mov
dec
imul
lret
or
inc
adc
cmpl
mov
pop
inc
mov
mov
cmpsl
popf
insl
xchg
iret
and
out
sub
mov
pushf
dec
int
dec
fisubrs
dec
insb
fmulp
pushl
xor
jne
sti
xchg
mov
add
pushf
sbb
in
scas
cmp
push
test
mov
rcrl
sbb
xchg
push
and
iret
cmp
cs
dec
mov
into
mov
add
sti
jp
loopne
push
cmp
imul
and
jp
decb
push
sub
lock
jle
jbe
push
sbb
je
and
arpl
push
inc
push
fldl
test
insl
mov
and
push
xor
into
sub
cmp
pop
arpl
data16
mov
sub
lock
repnz
js
and
cmpsl
adc
aas
lret
jns
dec
mov
aaa
mov
cmpsl
in
lahf
lea
add
jo
xchg
jle
fimuls
or
cmp
mov
or
push
mov
mov
push
sbb
dec
test
jl
hlt
pop
ljmp
push
xor
daa
fwait
mov
mov
cltd
call
fsubs
mov
stc
int
xor
mov
add
cmp
and
sub
stc
mov
pop
stos
lahf
xchg
shrb
outsl
jbe
cmp
cli
cmc
xor
mov
ds
or
scas
call
in
sub
inc
lret
mov
inc
and
faddp
jecxz
mov
xchg
loope
fs
cmc
mov
lcall
dec
adc
icebp
dec
xchg
cmp
out
mov
mov
addr16
and
jno
xor
mov
mov
ljmp
dec
int
sub
xchg
shll
add
or
lea
vpaddb
push
vpaddq
divb
mov
xchg
cmp
pop
fdivrp
mov
xor
icebp
mov
rol
push
lods
out
mov
inc
js
cmp
in
sbb
cmp
jb
repnz
adc
jae
int3
cltd
inc
roll
and
xchg
pop
inc
scas
xchg
cmp
movsl
mov
das
dec
pop
xor
mov
adc
mov
xlat
adc
xor
cmc
xor
dec
mov
cmc
dec
dec
jne
sbb
mov
push
inc
lea
movsb
mull
les
dec
cmp
jl
pop
pop
shlb
mov
mov
push
push
mov
cld
lahf
add
sub
jl
inc
pop
scas
pop
xchg
inc
pusha
fwait
insb
push
pop
mov
mov
mov
loope
push
or
bound
cmpsl
mov
adc
std
push
xchg
add
lret
stos
mov
mov
add
jns
mov
lahf
ret
push
jp
subb
push
mov
mov
mov
xor
es
hlt
leave
push
imul
div
ret
mov
stos
cli
arpl
cld
jo
or
jb
paddusw
mov
sub
inc
lret
pop
pop
fcmovbe
add
nop
enter
mov
pop
or
ret
or
ficoms
imul
and
ljmp
mov
test
add
jle
movsl
jl
fisubrl
fidivrl
mov
dec
dec
inc
ret
jge
push
jb
icebp
mov
dec
outsl
pusha
xchg
sbb
add
cwtl
cmp
push
rolb
test
in
or
xor
fucomip
jns
add
or
pop
sbb
inc
push
mov
or
sti
dec
test
inc
testl
or
into
xor
add
ret
sarb
pop
gs
push
cmc
dec
mov
mov
or
mov
sbb
movsb
call
jno
pusha
es
jl
pop
enter
les
nop
cli
mov
mov
imul
push
push
adc
test
lret
sub
sbb
jp
cmpsb
mov
xlat
jp
mov
cmp
jns
shr
inc
mov
pop
mov
or
mov
jecxz
add
cmpsb
ficoms
mov
sub
pusha
xchg
xor
xor
in
je
std
je
jno
int3
jns
mov
andb
icebp
and
sahf
mov
divl
dec
sbb
ljmp
dec
add
enter
mov
fistpl
rcr
or
push
sbbl
xchg
and
jb
in
xchg
lcall
adc
leave
or
in
iret
es
inc
dec
xor
jbe
push
je
mov
inc
or
mov
inc
int3
je
xor
cli
and
mov
xchg
adc
pop
cmp
es
subb
add
push
in
shld
rcll
aas
mov
imul
repz
cli
insl
daa
and
mov
dec
jl
jnp
cli
and
pop
loopne
aaa
cmp
jg
xor
push
pop
dec
pop
sub
int
add
jmp
inc
imul
and
rorb
mov
movsl
xlat
xor
add
out
lods
mov
das
and
ret
andb
ret
push
icebp
xchg
mov
clc
jg
int
cli
iret
push
xchg
repz
adc
adc
loop
push
dec
std
jle
cmpsb
js
inc
mov
and
push
in
xchg
jb
pop
rcrb
adc
jg
icebp
jg
jno
mov
mov
out
add
out
add
pop
inc
pusha
xchg
push
fucomp
cmp
int
push
mov
and
sahf
mov
adc
push
jb
sbbb
sbb
js
pushf
lret
ljmp
lods
mov
shll
cli
push
mov
insl
mov
jg
frstor
cmp
or
rorb
push
and
add
push
mov
cmp
in
aam
rcl
push
cmp
flds
jmp
lock
sbb
in
sub
sub
adc
adc
pop
lods
inc
jb
add
or
xorb
dec
out
lahf
push
cmp
sub
aad
jne
fxam
cli
pop
pusha
rcll
push
fisubs
fldenv
insl
lea
aaa
jae
xor
stos
adc
das
sbb
je
inc
push
jmp
add
test
mov
xor
xor
mov
subb
gs
fwait
aas
fldl
xor
mov
les
mov
sub
icebp
push
mov
cmp
mov
aam
cmp
lods
fstp
aam
fwait
or
rcr
push
fidivrl
movsl
dec
mov
sbb
mov
xor
movsb
jl
dec
dec
in
sbb
aaa
addr16
pop
out
std
or
into
mov
xchg
in
gs
xchg
lret
dec
iret
sbb
dec
jb
hlt
mov
sub
dec
push
je
add
or
outsl
imul
daa
stos
call
sbb
cmp
xchg
jl
lock
jne
xchg
pushf
rcr
mov
adc
icebp
fsubrp
add
cli
dec
pop
jg
pop
lods
xchg
pop
div
cmp
or
subl
mov
inc
out
push
cltd
fcompl
frstor
cmpsl
jo
mov
int3
les
int
jnp
aas
jl
out
xchg
sbb
mov
ja
jbe
jae
adc
gs
mov
jmp
add
ljmp
notl
adc
pop
jo
push
push
mov
fcmovnb
push
fldt
cmpsb
sub
fbld
test
cld
out
dec
fiadds
dec
sbb
shll
jecxz
movups
inc
in
insb
in
test
cli
out
bound
adcl
ret
loop
shll
sub
std
fstp
sub
scas
and
push
fs
pop
or
stc
pop
scas
int3
push
test
mov
pop
outsb
mov
ljmp
loop
mov
notl
mov
sub
ss
mov
aad
in
aaa
sbb
mov
inc
pop
push
pop
or
les
fisttpll
pop
sub
push
sbbl
mov
mov
insb
sbb
out
xor
or
lods
imul
cmp
jmp
jp
push
or
in
lret
sbb
mov
inc
xchg
cmp
iret
inc
pop
and
fscale
cmpsl
jns
xchg
push
jbe
rclb
mov
cmp
or
cmpsl
pop
leave
test
lods
sbb
hlt
mov
pusha
fisttpll
push
cltd
jp
mov
ror
xor
insb
xor
sahf
ret
or
shl
cli
push
sbb
aas
sub
lahf
shll
jno
jecxz
sub
sbb
xchg
cmpsb
mov
mov
out
out
ret
mov
mov
sub
fists
cmp
dec
jo
lea
loopne
pop
loop
pop
rcrl
rcl
daa
or
xorb
cmpsb
test
mov
xor
mov
iret
adc
jmp
inc
stos
ficoml
add
cmp
js
sbb
sub
bound
jo
hlt
call
jmp
stc
lock
das
int
mov
sahf
cmpsb
jge
mov
push
fidivl
dec
stos
sbb
nop
jecxz
xor
mov
and
jo
pop
cmp
lods
xchg
jae
inc
and
xor
hlt
adc
sub
mov
lret
scas
xor
dec
push
movsb
fsubp
lds
pop
iret
ljmp
xchg
hlt
jg
test
xor
in
in
xchg
or
add
cmp
shl
cld
sarl
into
es
xor
xchg
cmp
pop
adc
scas
subl
andl
and
cmpsl
add
pop
xorl
lock
jmp
arpl
mov
jg
jne
shlb
sub
sub
js
cmp
ja
dec
popa
mov
mov
jb
dec
jge
shlb
mov
sbb
lock
scas
scas
push
xor
inc
lods
sahf
jmp
dec
repnz
loop
mov
xor
cs
fcmovne
and
shlb
and
out
cli
jp
mov
out
repz
xlat
and
dec
mov
pusha
add
mov
flds
lds
roll
icebp
neg
lsl
ja
cmpsl
inc
lcall
fsts
mov
add
fdiv
xor
sub
xor
mov
cmp
clc
les
jle
inc
mov
imul
idivl
repnz
dec
rcll
cmpsb
jb
xchg
jp
and
movsl
enter
loopne
out
or
rolb
cmpsl
ret
loop
add
ds
pop
out
or
xchg
lret
fadds
mov
add
sub
shll
cltd
xchg
leave
inc
in
mov
lods
jno
ret
test
leave
inc
push
lods
jle
mov
or
mov
pop
inc
inc
lods
inc
inc
flds
mov
push
jb
stc
and
rol
dec
mov
cld
or
test
addl
jg
inc
pop
inc
frstor
add
mov
cmp
lahf
scas
push
daa
inc
fistl
xchg
add
lret
pop
imul
popa
inc
push
int
push
popf
enter
shlb
sub
mov
in
mov
popa
mov
ficoms
pop
imul
lcall
test
xor
enter
loop
cwtl
cmp
loop
pusha
popf
fldcw
add
mov
add
sub
aam
dec
pop
jne
pop
popa
rclb
incb
ss
xchg
daa
fwait
push
fs
adc
jge
mov
xchg
jg
dec
and
jge
mov
mov
pop
lods
fmuls
rclb
cmp
or
dec
mov
hlt
or
cld
mov
cld
stos
xor
aaa
movsb
add
ret
dec
repnz
icebp
mov
stc
andb
dec
cmc
push
mov
fcomps
and
xchg
pop
stos
jno
into
adc
xchg
sbb
outsl
push
adc
pop
loop
push
lock
imul
dec
xlat
jle
pop
mov
data16
xchg
mov
cmp
xor
lock
les
mov
je
xchg
out
cwtl
jmp
jle
fstpt
and
lods
loop
inc
scas
add
daa
loope
popf
pop
pop
fwait
pop
loope
jge
inc
cli
jge
mov
push
enter
subl
pop
sbb
push
rol
inc
sub
xchg
mov
mov
sbb
inc
gs
jl
cmp
adc
fidivs
add
stos
mov
inc
pop
and
lret
push
pop
mov
xor
fstpt
mov
sti
pop
addr16
or
xchg
sub
sub
and
lret
popa
sub
int
dec
add
mov
xor
xlat
xor
js
sbb
mov
sub
fmuls
pop
adc
xchg
fdivrl
sub
sbb
jns
hlt
hlt
fwait
inc
push
push
push
and
inc
cli
ret
mov
lock
icebp
fbld
push
testb
cli
mov
call
addb
in
lret
cmc
out
pop
xor
out
sete
adc
rcrl
push
adc
push
or
daa
add
push
pop
loope
xchg
pop
mov
in
pop
sbb
inc
sub
aaa
fimuls
mov
push
add
mov
std
push
cmp
mov
mov
mov
mov
push
mov
jnp
add
pop
sti
inc
mov
cmp
stc
fisttpl
pushl
cwtl
cmp
pop
test
mov
xchg
ja
daa
push
insl
xchg
fdivs
gs
lods
or
out
rorb
movsb
aad
mov
mov
cmp
jno
or
jnp
in
inc
cli
imul
cmc
mov
xchg
addr16
stos
jno
sbb
xlat
mov
loope
and
loope
sub
push
or
cmp
imul
les
out
negb
add
pushf
cmpsb
mov
xor
insl
dec
push
add
xchg
and
pop
rcrb
or
cli
sbb
lea
testl
rclb
mov
outsl
jbe
xchg
cmp
adc
rcl
in
pop
adc
std
jbe
inc
mov
test
push
xchg
xchg
xchg
mov
sub
sar
dec
xor
imul
sbb
dec
icebp
cmp
aaa
mov
shlb
mov
inc
popf
xor
lods
loop
xchg
insb
pop
out
jmp
scas
jl
dec
push
faddl
mov
inc
jg
repz
inc
ret
sbb
inc
jl
mov
ss
lock
jae
mov
mov
jns
arpl
jg
movsl
lods
mov
xchg
cli
jmp
add
inc
sarb
mov
loope
shr
push
in
mov
inc
jno
test
mov
sbb
cltd
rclb
or
add
loope
fstpt
pop
ror
es
xchg
shll
outsb
ret
ds
mov
repnz
hlt
mov
test
cmp
add
jae
faddl
enter
repnz
lods
pop
cmp
insb
push
shlb
mov
mov
push
ficoms
mov
mov
stos
push
pop
ret
lahf
pusha
setns
pop
adc
daa
add
cld
icebp
xchg
push
jecxz
dec
mov
xlat
sbb
or
cwtl
pop
test
jle
addr16
loopne
push
mov
lea
cmp
sub
pop
stc
dec
scas
or
je
in
sahf
or
mov
test
js
jnp
mov
dec
jmp
insl
xchg
mov
mov
loop
mulb
push
push
add
jge
dec
push
push
outsl
mov
ljmp
add
out
gs
and
fisttpl
and
test
dec
sahf
popa
popf
sub
sahf
add
outsl
add
mov
out
fs
test
jnp
stos
cs
pusha
jno
adc
pop
jnp
fbld
mov
aam
loope
sub
jmp
push
fadd
and
jae
int
mov
push
rorl
sbb
repz
cltd
mov
jmp
fwait
adc
mov
pushf
pop
push
lcall
shl
fmuls
and
xchg
outsl
jnp
push
and
gs
loope
scas
lea
mov
cmpl
je
insb
and
ss
out
js
lock
lret
and
pushf
cmp
fstpt
ficoml
mov
add
pushf
mov
subl
add
out
cmp
inc
sbb
pop
add
test
shrb
jae
push
inc
push
jb
xlat
push
rcl
mov
sbb
cld
or
cltd
jnp
aad
mov
ficoml
xor
cmp
jp
fs
pop
cmp
stos
popf
xlat
or
roll
or
inc
cs
add
xorps
pop
dec
push
xchg
scas
fs
cltd
call
ds
adc
jmp
sub
dec
xchg
jb
add
js
jnp
rorl
inc
or
adc
inc
cmpsb
pushf
push
mov
pop
mov
inc
cld
pusha
xor
les
mov
add
cmc
rorb
xchg
xor
mov
out
aas
mov
movsb
clc
arpl
inc
pop
sub
outsb
jbe
cmp
xchg
loopne
xor
jge
dec
clc
add
sub
and
jae
inc
jno
scas
mov
ret
pop
mov
push
lds
adc
sbb
and
jb
in
xchg
adc
mov
sub
or
aad
rcrb
pushf
inc
jg
xchg
mov
rcrb
dec
stos
lods
repz
or
popf
and
and
jecxz
or
pop
pop
cs
notl
jmp
jle
mov
mov
adc
jle
or
test
cwtl
push
adc
int
outsl
mulb
aad
push
jb
stc
test
sbb
aad
lret
hlt
test
mov
jecxz
push
mov
inc
aaa
jle
ja
dec
xchg
xor
iret
or
inc
mov
xor
sbb
sub
jmp
mov
in
jnp
mov
pop
pop
out
popa
mov
sahf
sbb
mov
or
adc
add
mov
mov
aas
inc
mov
ret
pop
clc
dec
inc
lret
xor
lahf
outsl
lcall
icebp
push
out
fcompl
inc
leave
xor
jmp
mov
xor
not
jb
clc
mov
pushf
adc
aam
pop
rcrl
and
fdivr
fcoms
xchg
sar
mov
dec
cmp
cmp
or
xchg
or
mov
clc
outsb
arpl
sbb
jecxz
mov
add
rorl
lock
stos
mov
jl
mov
iret
shll
lea
popa
out
fs
push
pop
xlat
dec
mov
lahf
adc
aas
mov
stos
fstpl
inc
outsb
lods
dec
jle
sbb
pop
cmp
sub
pop
mov
xchg
fld
add
aam
ror
pop
icebp
xor
or
shl
in
and
pop
cli
clc
pop
inc
icebp
test
sub
mov
jne
or
iret
cmp
lock
int
sbb
aad
popa
in
outsl
jbe
das
pop
fwait
je
jp
outsb
stos
loopne
adc
add
sti
lea
add
jb
dec
jbe
int
lret
dec
dec
pop
movb
sbb
or
mov
fdivr
rorb
lds
sbb
mov
inc
hlt
mov
ret
pop
mov
jle
fcmovu
mov
cmpl
pop
js
cltd
scas
jmp
xchg
int
inc
lock
das
push
dec
outsb
pop
jl
orb
cs
cs
cmp
xchg
xchg
sbb
push
inc
bound
mov
cmp
dec
jp
dec
jb
cwtl
lret
mov
loopne
xchg
sbb
out
es
jns
dec
or
ljmp
and
dec
int3
or
mov
popf
jo
call
mov
out
lock
push
repz
and
sbb
lret
mov
xchg
push
pop
jge
lret
xor
mov
xchg
loope
cmp
xchg
lds
femms
cmp
inc
xchg
add
or
ss
inc
mov
cmpsl
xchg
pop
and
je
pop
cmp
cwtl
xchg
inc
fsts
add
xor
jecxz
add
push
loope
andb
cmpsl
lods
mov
adc
incl
mov
jnp
aas
xchg
mov
sbb
clc
mov
lret
adc
jmp
adc
sbb
gs
cld
xor
frstor
mov
mov
adc
pop
add
test
cs
add
or
mov
or
or
sti
xchg
pop
loope
sub
call
stos
dec
mov
mov
inc
pop
or
or
sysenter
imul
jmp
xlat
nop
andb
stos
xchg
mov
repz
cmp
jo
jle
inc
loope
pop
sbb
dec
jo
cmp
mov
sbb
mov
inc
add
jmp
cmp
push
cmpb
data16
and
jae
addb
in
shl
xor
mov
mov
dec
mov
pop
jg
sbb
popf
cmp
adc
out
dec
inc
outsl
adc
test
arpl
ds
push
addr16
rorb
jmp
dec
dec
movb
xlat
cmp
pop
stos
inc
cmpsb
jge
sub
pop
add
leave
fdivp
insl
stos
adc
int
xchg
sbb
push
in
pop
subl
cwtl
mov
mov
add
mov
pop
mov
cmc
mov
pusha
lods
loopne
jnp
dec
fs
xchg
mov
sbb
add
stos
mov
pop
xlat
clc
jns
or
mov
jmp
lret
jp
enter
xor
or
dec
loopne
jp
jne
xor
mov
iret
rorl
sarb
xor
or
and
dec
push
mov
sbbl
xchg
test
xchg
stc
jge
push
orb
push
mov
mov
shll
xchg
dec
mov
mov
pop
test
stos
data16
push
jno
hlt
js
mov
movsb
lds
mov
ja
cmp
xchg
sbb
and
addb
add
inc
push
jmp
mov
sbb
sti
push
sbb
dec
sbb
insl
cmpsl
push
fisttpl
mov
test
dec
pop
xchg
lret
aaa
push
push
das
sahf
je
sbbl
mov
in
inc
and
pushf
flds
ret
xchg
push
push
je
into
mov
lcall
lret
dec
fistpl
xor
jge
fistpll
dec
or
jp
cmpsl
lock
cltd
pop
add
mov
mov
outsl
scas
popf
push
jle
out
aam
cli
dec
les
xchg
sub
mov
sbb
aam
lock
pop
or
fisubrl
inc
and
and
sbb
xlat
fnstsw
int3
adc
sbb
jae,pt
sbb
add
inc
jno
cld
xchg
xor
in
xchg
dec
and
pop
arpl
jmp
mov
lea
rorl
fadds
aaa
jne
inc
xor
fldl
rcr
jecxz
xor
test
pop
rcrl
xchg
jg
jb
push
rcrl
and
jle
call
mov
mull
in
mov
adc
fiaddl
mov
add
int
and
dec
cmp
push
gs
push
rclb
enter
int3
insb
movsb
shlb
inc
xlat
jecxz
cli
sub
call
push
shlb
cmp
push
jne
or
push
and
stos
dec
fadd
pmulhuw
adc
jnp
mov
cmpsb
xor
jbe
pop
rcrb
in
rol
push
or
out
and
repz
jmp
dec
or
std
or
mov
sub
xor
mov
cmp
jg
jne
mov
lds
sub
mov
sbbl
mov
cmp
popa
xchg
ficomps
mov
mov
outsb
and
dec
test
sbb
jne
popf
mov
xchg
cld
dec
and
and
xchg
aad
jge
std
fs
loop
inc
push
sbb
orb
jg
int3
inc
push
and
push
mov
in
fs
pop
ss
inc
daa
add
pop
mov
cmpsb
push
mov
test
jmp
sbb
push
dec
negl
idivb
push
adc
gs
ja
nop
sub
inc
jno
pop
fs
sub
sub
sub
jo
xor
mov
dec
inc
int3
xlat
cmp
fidivrs
std
push
icebp
jne
in
lret
and
outsb
push
imul
loop
ret
and
dec
mov
push
arpl
addl
jbe
outsl
inc
movsb
mov
sbb
leave
testb
addr16
dec
std
add
xchg
push
in
into
cmpl
cmpsb
dec
push
cmpsl
lods
andl
lods
lds
mov
shll
lret
push
inc
cs
sub
fcompl
nop
push
and
jl
jmp
loop
clc
add
cs
jo
sbb
add
pop
shrl
gs
push
pop
cmp
cmpsb
or
imul
or
sbb
xchg
js
dec
pop
ror
rcrb
sub
mov
aas
lods
xor
cmp
jb
lods
ret
es
cltd
inc
mov
push
outsb
test
jl
lcall
int
mov
sbb
push
jnp
sti
mov
pop
add
mov
mov
js
cmpsl
dec
adc
divb
aaa
mov
jo
pand
sub
cmp
add
ss
adc
pusha
sarb
xor
rolb
dec
adc
mov
jp
mov
mov
mov
fwait
adcw
adc
dec
sbb
push
movsb
repnz
frstor
pop
insl
add
subl
pushf
bound
scas
or
repnz
sub
inc
cmp
nop
xor
jl
jno
outsb
push
mov
and
bound
daa
mov
cmp
mov
sti
int
pop
mov
xor
pop
dec
loop
ss
stc
loope
insb
js
lods
aam
cmpsb
repz
test
pop
test
shl
sub
sti
inc
mov
or
xchg
mov
mov
imul
outsb
mov
stos
cmp
jno
inc
jbe
fs
xchg
fld
in
retw
push
and
sbb
mov
rorl
adc
pop
dec
lods
je
dec
sarb
mov
pop
divb
cmp
mov
outsb
xchg
mov
insb
call
lret
dec
inc
pop
jo
das
in
add
jns
inc
in
mov
add
lcall
outsl
xchg
roll
int
cmp
in
lods
shl
xor
and
and
sub
test
enter
daa
test
xchg
xor
fst
leave
sbb
or
ja
out
cmpsl
lds
sbb
sbb
mov
and
or
rol
jg
mov
or
out
fildll
mov
into
xchg
je
adc
mov
in
insb
push
test
jns
cmc
neg
and
xchg
add
arpl
push
sbb
and
jno
inc
xor
aam
mov
inc
pushf
fwait
rorl
dec
cltd
cmp
fistpll
mov
sub
ss
and
jge
jg
aam
inc
enter
mov
xchg
fwait
mov
jp
mov
pop
mov
fmull
sub
cmc
xchg
loop
push
test
sub
jg
lods
push
lods
into
push
inc
mov
mov
imul
dec
inc
mov
int3
dec
xor
add
jmp
jp
cs
add
mov
or
gs
push
jge
mov
out
mov
adc
mov
sti
lahf
shlb
adc
and
jb
ret
cltd
icebp
data16
out
sti
test
push
and
pushf
dec
xor
pop
xchg
xlat
xchg
cs
adc
inc
rcll
les
daa
adc
pop
movsb
jp
or
add
iret
inc
or
sub
push
cmp
adc
iret
cmp
jl
shll
or
jmp
xrelease
or
and
in
fs
push
stos
rcrl
mov
cmp
adc
mov
nop
shlb
adc
outsb
push
fdivs
stos
mov
fsubl
sub
loopne
push
push
push
outsb
and
adc
inc
repnz
out
loope
cmp
jb
jns
xchg
out
addr16
imul
add
xor
lahf
pop
outsb
mov
es
scas
jle
xchg
adc
or
mov
dec
sbb
mov
mov
or
std
and
imul
sbb
ja
adc
jbe,pt
shl
add
xor
and
repz
popf
in
sbb
fistps
insb
push
xchg
adc
in
aam
jae
dec
mov
xchg
or
fnstenv
scas
pop
push
and
fcmovnbe
insl
loopne
push
popf
sbbw
pop
lcall
inc
aaa
jbe
mov
sbb
in
addl
pop
adc
test
shll
mov
adc
jp
test
mov
mov
popf
mov
adc
xor
adc
mov
cs
out
fs
scas
sbb
cmp
and
pop
hlt
fs
pop
jno
mov
je
sbb
mov
sub
xchg
cmp
clc
sbb
in
xchg
cmp
sarl
movsb
out
in
mov
jae
jne
bound
sar
jmp
sbb
in
repz
nop
lods
int3
pop
aad
cmc
popa
lret
aam
popa
add
fidivl
xchg
repz
mov
fdivr
in
jg
enter
inc
adc
std
insl
sbb
jnp
xchg
jl
push
iret
psrlq
push
push
cmp
aas
outsl
in
out
sti
scas
int
cmp
loopne
mov
and
and
aas
push
add
adc
insl
xor
mov
fcoml
dec
nopl
shl
bound
movsb
add
push
fs
mov
scas
in
jmp
es
or
jge
xor
sbb
ds
sub
or
or
gs
cmp
test
and
leave
cmc
mov
lret
test
lods
xchg
incl
loop
movsl
mov
xor
mov
filds
test
pop
jecxz
mov
and
fists
mov
int
cmp
cmp
dec
sti
loop
and
jle
js
and
or
test
cwtl
inc
and
loopne
pop
mov
sub
in
mov
xor
xor
push
sub
idivb
xchg
scas
imul
push
adc
aas
pop
cmpsb
inc
out
je
adc
ja
imul
add
adc
and
mov
xchg
pop
xor
sub
mov
popa
adc
inc
lret
dec
pop
lods
ret
adc
mov
push
jl
pop
in
adc
mov
cmpsl
mov
add
inc
dec
fsubl
or
xor
cltd
out
and
mov
sbb
data16
into
mov
addr16
xchg
fiaddl
or
mov
or
sub
mov
lods
ret
inc
andb
aam
sbb
mov
shlb
push
bound
pop
mov
adc
sbb
jle
jne
xchg
popf
xlat
ja
lock
jp
rcl
loopne
inc
imul
data16
cld
push
dec
in
mov
ss
nop
or
enter
inc
add
cltd
fdivs
dec
fstpt
loope
jp
inc
push
jno
jmp
push
fcoms
cmpsb
shrl
setp
inc
in
lahf
sub
mov
cmp
jno
mov
add
in
pop
or
aaa
mov
repnz
aaa
push
push
push
divb
cltd
dec
xchg
dec
testl
not
push
mov
and
dec
and
adcb
out
ljmp
lods
mov
push
mov
or
adc
stc
add
or
xchg
jge
inc
cltd
shlb
or
aad
adc
add
pop
push
jb
xlat
mov
rorl
add
adc
xor
cli
add
add
lds
push
lea
push
push
mov
and
and
pop
mov
xor
xchg
xor
pop
mov
xchg
jne
xchg
std
xchg
push
pop
add
push
ss
shl
sbb
lret
jg
mov
mov
xchg
cmp
or
in
hlt
add
aad
pop
loopne
push
cs
pusha
xorl
cld
jno
or
xchg
icebp
sub
pop
sub
popa
sub
inc
cmpsb
push
aam
or
mov
mov
xor
ja
and
in
xchg
in
push
pushf
mov
ja
xchg
shl
popa
rorb
or
mov
arpl
cmp
xchg
xor
push
pop
fldcw
push
inc
dec
in
call
ret
call
sub
js
out
imul
inc
cmp
jle
cmp
imul
push
int3
lea
test
mov
mov
xchg
jbe
in
add
dec
jecxz
and
orl
sbb
adc
mov
push
jp
call
int
in
shlb
push
mov
dec
ss
repnz
mov
jae
fisttps
inc
and
jmp
adcl
xor
ret
loopne
out
or
push
arpl
xor
cmpsb
mov
pop
mov
shll
jl
rolb
rcll
jae
xor
les
jmp
out
enter
add
adc
inc
mov
in
push
dec
sbb
ret
flds
mov
fisttps
push
orb
cmp
mov
shrl
dec
sbb
iret
test
and
add
jge
stos
xor
pusha
insl
lahf
cltd
mov
jl
ljmp
push
push
xor
lret
rcrl
jo
mov
fwait
jge
push
pusha
mov
out
sysret
call
adc
lcall
add
and
dec
lcall
lcall
fsubrl
inc
mov
adc
add
int
fwait
sbb
cmp
sub
add
test
push
clc
rcr
dec
or
sbb
stos
cs
outsl
xor
xor
decl
cs
repz
test
dec
movsb
lcall
shlb
cmp
js
stos
cwtl
mov
ror
mov
ret
rorl
xchg
and
cld
lods
std
das
inc
std
cwtl
lods
jbe
mov
int
inc
dec
xchg
adc
lds
pop
inc
movsb
adc
mov
out
movl
ret
mov
testl
movsl
jne
adc
push
cld
in
insl
push
jge
loope
jbe
lret
mov
mov
ljmp
pop
out
mov
inc
or
mov
push
clc
aam
ja
push
in
adc
mov
aaa
aaa
and
fistps
push
std
or
mov
fildll
ds
add
setb
hlt
push
xor
sti
dec
scas
stos
popa
adc
xchg
divb
mov
js
mov
mov
cmp
pop
pushf
into
jbe
mov
push
in
cmc
add
sub
dec
fsubs
dec
xor
or
mov
cmpsl
es
pushf
jns
cmc
loope
jns
fstpl
cwtl
loop
jno
xchg
in
add
mov
add
gs
cmpsl
and
jae
lcall
loopne
jne
jne
stos
jl
sbb
lock
pusha
jo
adc
rorb
xchg
sub
mov
mov
pop
xor
sbb
adc
lds
lcall
lret
sbb
ret
sub
ret
scas
sbb
stos
pop
inc
mov
inc
cs
inc
lds
fiadds
lods
ffree
mov
push
inc
shrb
in
pop
ret
jns
push
aam
lods
aas
cmpb
or
inc
lcall
pop
xchg
push
test
repz
sbb
and
jnp
or
aas
jne
cltd
je
mov
arpl
sub
fldt
push
out
mov
lahf
aam
xor
jo
add
adc
nop
inc
pop
aad
loop
das
mov
sbb
in
sbb
push
in
call
cmpsl
mov
push
dec
mov
mov
inc
call
in
xor
sub
sbb
xchg
stos
ret
ret
mov
sbb
inc
sarb
loop
daa
ljmp
js
mov
mov
sub
imull
int
jmp
push
dec
icebp
int
mov
jmp
cmp
add
mov
out
adc
pop
pop
out
fnstsw
mov
pop
arpl
sbb
leave
adc
inc
cmp
ljmp
xor
bound
addb
push
ret
and
dec
cmp
push
push
cmp
jle
add
dec
mov
int3
sbb
out
or
and
out
sub
out
andb
dec
lock
or
push
adc
dec
lcall
andb
imul
sbb
in
outsl
mov
dec
push
mov
repnz
je
sar
mov
in
divb
mov
inc
xorb
pop
jg
ret
or
inc
mov
or
jp
sub
pushf
ss
mov
and
sbbb
and
pop
notl
xorb
sub
cmc
loope
sbb
sbb
mov
sbb
repnz
cmp
mov
out
dec
jmp
pop
pop
dec
aam
xchg
add
adc
into
pop
cld
out
inc
xor
jge
and
pop
out
add
xor
or
and
sti
outsb
jg
mov
pop
dec
jns
cli
inc
dec
scas
pop
mov
mov
outsb
in
sub
push
imul
cs
sahf
fwait
adcl
jo
inc
movsb
mov
xor
mov
xchg
imul
xor
data16
pop
sbb
test
jo
cmp
add
scas
cmp
aam
cmpsl
out
rcll
sub
orl
cltd
popf
lcall
adc
jb
pop
aas
insb
inc
fdivl
xchg
inc
sbb
enter
sub
out
aaa
js
dec
mov
inc
adc
iret
jb
xor
mov
inc
jge
dec
push
mov
push
mov
pop
mov
and
inc
sub
loop
push
or
ljmp
test
or
xchg
hlt
sahf
push
mov
popf
mov
fildl
add
js
lods
lods
cli
push
aam
xor
imul
adc
jl
mov
out
and
mov
xlat
cld
shrl
jnp
fdiv
rcrl
mov
add
xchg
mul
shr
xchg
pop
mov
xchg
cmp
in
push
je
pop
inc
pusha
mov
sub
inc
pop
int3
xlat
mov
dec
xchg
movsl
dec
push
add
repnz
test
adc
mov
mov
addr16
into
cld
jmp
hlt
test
jae
inc
std
pop
fiadds
jp
into
xchg
or
sub
repnz
das
adc
xor
or
fidivrl
xrelease
jo
in
imul
adc
enter
cmpsb
add
les
shufps
or
xor
cmp
js
fcmovb
cltd
pop
int3
inc
cmc
mov
xor
imul
mov
pop
daa
adc
mov
mov
clc
mov
mov
lods
pop
fwait
mov
jmp
and
mov
push
cmpsb
inc
push
movups
daa
push
or
ret
fwait
sub
jno
push
lods
ret
mov
rolb
sub
data16
fisubrl
in
push
adc
inc
loope
sar
or
or
ret
push
shl
data16
cmc
shl
lds
inc
lds
sbbl
jno
test
div
pushf
icebp
add
jo
lcall
cmpb
fadds
movsb
jo
mov
adcl
fwait
dec
sub
stc
ds
dec
and
mov
shr
popa
push
loope
xor
or
inc
lahf
ljmp
in
lds
in
pop
xor
icebp
popa
ss
cmovnp
dec
out
insb
scas
xor
jno
pushf
and
test
cmc
dec
pop
mov
xor
pop
leave
or
inc
scas
push
jb
pop
mov
ja
mov
out
inc
out
xor
add
mov
std
ds
pop
movl
push
fwait
push
mov
scas
mov
orl
xor
or
sbb
adc
das
jp
fs
jle
adc
mov
and
popf
xlat
pop
mov
ja
add
adc
imul
out
clc
or
jmp
loopne
fildll
xor
or
pop
sbb
dec
xchg
ret
sub
aaa
lods
addr16
sub
out
andb
add
jecxz
out
dec
or
inc
insl
popa
add
aaa
push
xchg
mov
sti
mov
idivb
dec
or
jecxz
mov
jle
jg
data16
jbe
clc
inc
daa
mov
icebp
jge
or
jecxz,pn
fwait
xor
xchg
push
sbb
sub
dec
and
xor
sub
adc
data16
cli
aad
and
cmp
or
out
leave
cwtl
jmp
pop
in
mov
inc
push
leave
jnp
mov
out
mov
add
mov
dec
xchg
xchg
inc
push
mov
hlt
cltd
or
add
push
lret
in
mov
inc
sub
loopne
xor
and
retw
rorb
leave
fs
repnz
jae
stos
loop
dec
xchg
mov
int3
mov
sub
decl
jb
push
insb
jbe
je
push
popa
jle
sbb
mov
inc
add
cmp
adc
cmc
jae
les
pop
jns
test
nop
cmp
nop
xchg
nop
dec
cmpsb
imul
fcoml
mov
dec
pop
and
rcrl
mov
adc
ds
test
mov
je
stc
call
pop
loop
push
in
call
fcomp
mov
sub
pop
mov
dec
xlat
ret
mov
mov
outsl
loope
pop
mov
push
and
push
sbb
mov
ror
adc
aaa
pop
lahf
fcomps
sbb
fcmovbe
push
je
roll
movsb
and
xor
mov
je
ret
mov
mov
mov
out
shll
jge
sbb
sub
aaa
cmpsl
xchg
adc
or
movsb
stos
je
mov
sbb
sbb
pushf
sbb
jmp
xor
mov
and
pop
sbb
lods
cmovp
mov
imul
cmp
lret
jp
fs
hlt
lds
cwtl
cmpsl
aam
sub
std
scas
mov
imul
pushf
add
call
repnz
adc
inc
pusha
dec
inc
cmc
out
adc
xor
lret
clc
push
fs
es
push
xchg
sahf
movsb
rcl
cmp
pop
daa
push
in
es
loop
jg
cmp
in
ljmp
xchg
xchg
jo
jle
adc
ss
adc
test
cmp
pop
pushf
lret
xchg
mov
test
adc
sub
mov
mov
repnz
mov
push
das
pusha
add
mov
lret
sub
arpl
orb
cmp
addr16
subl
push
mov
ljmp
lret
pop
sarb
dec
mov
lds
loop
jmp
insb
and
in
addr16
cs
pop
jl
inc
in
insb
push
mov
popf
scas
push
sub
pop
int
test
in
addb
xchg
push
sub
aaa
cmp
ss
jae
stc
pop
mov
add
insb
cli
scas
xchg
xchg
das
xor
push
into
mov
push
in
ficomps
fs
lret
out
jp
mov
mov
test
mov
movsb
inc
jmp
jmpw
or
pop
inc
outsl
dec
or
das
add
jmp
add
out
mov
xor
adc
std
int
je
loopne
cli
jp
inc
xchg
in
sbb
add
daa
mov
daa
adc
jne
imul
xorb
push
out
adc
jmp
cmp
pop
fwait
scas
push
into
js
cmc
pop
mov
jo
mov
lds
orl
mov
lods
mov
clc
mov
mov
or
in
in
push
pop
ds
cmpsb
and
xchg
mov
mov
test
and
jp
sbb
mov
iret
mov
push
inc
aad
mov
movsl
jns
push
jp
add
shl
pop
das
out
arpl
scas
leave
lds
inc
insb
popf
jnp
fisttps
test
push
aam
loop
and
jle
sub
outsb
stc
jp
cmp
xor
and
pushf
scas
sbb
dec
xchg
nop
xor
pop
les
repnz
es
xchg
scas
adc
sub
shl
adc
adc
addb
push
xchg
cwtl
stc
fdivr
jl
aas
xor
and
mov
sub
pop
add
add
psubd
inc
popa
cmpsb
subb
shrl
mov
fwait
and
mov
pop
and
shl
jmp
pop
push
test
fidivrs
ljmp
xor
call
xchg
insb
inc
xchg
fiadds
cmp
mov
ss
sbb
arpl
pop
jnp
sbb
daa
push
sbb
and
push
popl
add
xchg
or
ret
adc
add
sub
push
insb
int
fldl
add
jge
or
jge
mov
outsb
pop
jmp
pusha
inc
jg
mov
jmp
fsubl
das
outsl
sbb
rorl
cmp
jle
lcall
cwtl
inc
mov
xor
test
fsubs
decl
sbb
inc
push
icebp
outsb
lods
sub
test
push
dec
xor
fsubl
sub
sub
mov
adc
cmpsl
mov
inc
fs
mov
stos
jecxz
pop
in
mov
lea
jo
mov
cmp
in
pop
cli
inc
or
jecxz
pop
xchg
je
inc
dec
imul
xchg
pop
fdecstp
cmp
push
lcall
pop
jecxz
mov
cmp
adc
rol
aad
fxch
cmp
cmpsb
sbb
int
aas
cmp
cmpsb
xlat
pushf
mov
sbb
js
sub
addb
inc
scas
push
pushf
imul
icebp
outsl
add
outsl
inc
int3
push
cmp
enter
out
and
pop
les
pop
mov
xor
dec
sbbb
js
lcall
mov
das
dec
popf
push
sbb
bound
pop
stos
sbb
push
pop
pop
lods
in
je
out
fcompl
push
inc
insb
out
and
adc
mov
pop
ljmp
in
lods
adc
cs
add
lods
cmp
and
push
das
xor
in
out
xor
push
adc
mov
imull
lods
sbb
pusha
jecxz
dec
icebp
mov
aad
jl
inc
nop
sarb
lahf
and
cmp
loop
pop
decl
xchg
mov
or
rcrl
and
cmp
lea
divb
popa
stc
and
idivl
lret
push
sarl
lret
jbe
popa
mov
inc
cmpsl
xchg
mov
mov
mov
add
hlt
cmp
sub
pushf
aas
push
pop
mov
add
cmp
sub
mov
clc
into
ret
dec
mov
mov
mov
xchg
and
xor
iret
xchg
xchg
pop
fnsave
outsb
jmp
shll
sbb
outsb
sbb
jge
sbb
xor
nop
mov
outsb
lahf
ds
psubq
jecxz
mov
out
imul
and
sub
sbb
push
jg
inc
in
cwtl
into
push
mov
xor
fs
adc
es
shlb
add
addr16
fistl
push
mov
stos
xchg
inc
out
test
and
or
and
lods
iret
lock
fbstp
ds
inc
addr16
push
cmpsb
cmp
inc
in
test
ret
mov
lock
xchg
inc
cmpsb
insb
aas
adc
pop
push
lea
mov
fs
add
jmp
aad
shr
cmpsl
stos
sbb
repz
cmpsl
dec
insb
xor
pop
or
sub
or
int
aad
or
ja
mov
mov
clc
lahf
data16
repz
push
in
dec
mov
std
pop
push
push
rep
mov
xlat
sub
std
jg
iret
cmp
stos
sub
inc
lcall
mov
popa
fs
repz
sbb
test
sub
rcl
and
jmp
add
dec
mov
es
sub
xlat
ret
mov
sbb
inc
pop
add
or
xor
jns
pop
jl
push
xor
mov
repnz
rcrl
lods
imulb
lahf
add
jmp
push
ljmp
faddl
bound
inc
xchg
xor
xlat
mov
cmp
xor
mov
call
xchg
std
push
jae
mov
lds
call
fwait
and
jg
jg
or
mov
mov
and
inc
sahf
dec
dec
mov
filds
or
cmp
jp
xchg
adc
or
jb
int3
sahf
stos
mov
cld
fadd
jo
push
lds
pop
jns
pop
pop
sub
xor
add
inc
mov
mov
push
dec
scas
or
mov
imulb
mov
cld
xchg
dec
or
cli
lock
fcompl
fisubl
push
push
pop
loop
adcl
shrl
sbb
adc
xchg
sbb
out
push
or
cmp
cmpsb
das
jno
lds
outsb
movsl
pop
orb
dec
shlb
dec
psubusw
subl
adc
mov
xor
sahf
or
movzbl
frstor
pop
arpl
push
sub
xor
xor
nop
pop
rol
pop
adc
or
testb
bound
pop
rcll
push
shll
movsb
dec
testl
int
in
mov
sbb
sti
mov
sbb
sbb
inc
ret
xor
cmpsl
out
popa
jnp
popa
outsl
stos
js
xchg
pop
inc
dec
push
or
stc
imul
jmp
repnz
mov
test
mov
ss
jae
dec
int
xchg
mov
push
in
js
adc
push
xchg
loop
dec
push
or
mov
iret
cltd
inc
daa
fnstenv
inc
mov
fwait
mov
xchg
subb
add
movsb
mov
jmp
fcomp
inc
outsl
xchg
fldl2e
repz
rorb
test
je
mov
sbb
mul
or
or
lret
jnp
fwait
and
pop
jge
int
xchg
mov
out
outsb
mov
pushf
mov
ja
or
pushf
dec
push
repnz
scas
pusha
inc
add
adc
pop
cwtl
dec
pusha
sbb
pushf
jge
divl
jge
jno
mov
mov
fisubl
daa
push
clc
add
add
stc
pushf
aam
ja
and
loopne
mov
ficomps
loopne
pop
xorl
shrb
inc
mov
ret
rcll
adc
negb
mov
xchg
or
lods
adc
xchg
ja
movsb
neg
mov
insb
jecxz
addr16
stos
and
cmpsl
rcl
xor
push
test
stos
xchg
enter
es
repnz
sbb
in
bound
push
outsl
and
lock
ficoms
repz
adc
xor
jmp
sbb
xchg
es
sbb
dec
fidivs
cmc
inc
dec
into
add
add
test
iret
push
cmp
imul
outsl
xchg
fcmovne
scas
xor
fs
dec
add
pusha
syscall
sub
jnp
cmp
and
cwtl
pop
and
push
xchg
repz
loop
dec
mov
test
popa
ficompl
mov
loope
push
xor
enter
jo
jo
push
fcompl
out
adc
lock
jns
jecxz
stos
mov
sar
cwtl
and
hlt
repnz
cltd
ss
mov
imul
scas
pop
pop
mov
mov
popf
bound
dec
gs
icebp
jle
inc
in
popa
cmp
xchg
or
push
subl
xchg
push
push
cmp
mov
xor
mov
cmpsb
and
cmpsb
xor
dec
psubsw
inc
ret
jno
adcl
cltd
cmp
loop
into
faddl
jnp
mov
nop
test
int
out
push
push
rclb
ret
loope
cmp
mov
or
inc
test
dec
sahf
fstps
sbb
leave
inc
out
dec
jbe
daa
cmp
mov
mov
fsubs
mov
nop
push
push
inc
sub
out
and
aaa
mov
fmuls
xchg
inc
lods
lcall
xchg
repnz
pop
dec
xor
loop
sub
call
iret
lods
mov
mov
stos
pop
ficompl
jnp
xchg
and
sbb
je
ret
mov
nop
inc
loope
bound
mov
ficompl
mov
jl
or
push
xor
pop
outsl
jl
inc
clc
inc
add
rcrb
rclb
mov
roll
mov
xchg
cmp
mov
and
sub
mov
jge
push
clc
fs
fistps
or
adc
repz
cmp
sbb
sub
leave
cltd
shll
jnp
bound
in
stc
loop
cmp
pop
popf
arpl
or
and
test
cmp
xor
aas
dec
jecxz
jne
clc
inc
xcrypt-ecb
cmpsl
or
popa
or
in
mov
lea
sti
adc
rcr
mov
lds
loopne
ds
push
dec
int
test
repnz
push
ja
push
adc
add
mov
call
mov
fldenv
xchg
add
fcmovnb
shl
jnp
mov
pop
arpl
cmp
and
sub
jp
fnsave
mov
and
jge
je
outsl
pop
jle
cmc
stos
adc
leave
push
fdivrp
shlb
pop
repz
sub
or
push
inc
fsts
sub
fwait
out
gs
sub
out
inc
xor
or
aas
mov
cwtl
in
leave
cmp
ret
push
dec
inc
lret
jae
push
lcall
push
pop
ss
xchg
js
ret
fnstenv
pop
dec
lock
mov
andl
popf
add
ja
ja
fisubrl
push
out
push
sbb
cmp
cs
ds
inc
mov
or
xchg
ds
jno
push
lahf
loope
jne
aam
xlat
cmp
pop
cmp
mov
fwait
add
xchg
data16
pop
xchg
inc
xor
mov
xchg
and
repnz
mov
lahf
hlt
sub
or
jne
mov
xchg
jge
lret
sub
into
stos
fldt
icebp
mov
icebp
rcrl
dec
fs
xor
pop
push
movsl
or
push
mov
or
xchg
sub
outsl
stc
jo
jae
iret
hlt
out
pop
mov
sbb
out
fmul
push
ss
rcr
jbe
fisttps
mov
add
sbbl
inc
sub
pop
and
xor
lods
in
inc
hlt
push
mov
push
mov
sbb
jno
mov
stos
mov
in
jo
in
aaa
adc
pop
ljmp
enter
out
aaa
mov
mov
cmp
rorl
cld
adc
push
cmp
mov
clc
mov
or
rorb
inc
int
jmp
sbb
pop
lods
xor
sub
jae
or
jns
or
jg
addr16
popa
push
fs
flds
imul
and
pop
pushf
lretw
inc
mov
mov
es
cld
or
push
das
add
jne
cmpsl
xchg
dec
stos
stos
mov
icebp
jnp
push
cs
int
cld
cmp
dec
mov
pop
xchg
pop
ret
je
pop
cld
xorl
and
into
xchg
je
xlat
sub
int
push
jmp
inc
out
push
mov
dec
test
stc
orb
push
dec
and
mov
call
popa
sarl
rcrb
and
pushf
dec
psadbw
jb
push
lcall
mov
pop
in
xor
jp
pushf
mov
fimuls
add
andb
int
xchg
xchg
jbe
adc
in
pop
pop
sbb
lahf
fldl
mov
rclb
fs
ret
and
mov
xchg
jo
sarb
in
test
popa
les
lea
aas
lret
sti
fsubrl
dec
idiv
jo
lahf
pop
stos
clc
xor
xor
lds
and
cmp
push
push
inc
mov
xchg
sbb
add
or
inc
and
out
sarb
pop
mov
test
lods
push
xorb
jge
ror
xchg
enter
push
cltd
data16
ds
sub
xchg
dec
aam
cmpsl
fmul
mov
arpl
xor
ficoms
sbb
mov
jne
cltd
ret
mov
push
lahf
loope
movsb
pop
jb
mul
sbb
sbb
lds
pushf
jmp
ficomps
sahf
aas
inc
je
push
and
cs
push
pushl
jnp
jno
add
mov
jecxz
adcb
scas
stc
movsb
xor
cmp
gs
test
orb
test
jle
mov
and
mov
pop
ja
cmp
daa
ficompl
loope
rolb
mov
and
ss
and
popa
dec
jecxz
mov
imul
lret
jae
inc
jne
adc
jo
or
adc
mov
cmc
inc
or
testb
lock
adc
imul
mov
hlt
or
jl
push
outsl
es
rorl
cld
push
sub
cltd
fwait
nop
mov
es
sub
enter
mov
and
jae
adc
fs
push
andb
pop
adc
xchg
push
adc
and
or
or
repnz
popf
add
stos
divl
incl
repnz
andb
lods
push
jae
ss
lods
mov
xchg
fwait
in
ss
fldl
xchg
cmp
data16
adc
mov
in
mov
sub
xor
shrb
or
adc
cld
mov
fidivl
lock
mov
hlt
hlt
test
push
sbb
jl
mov
xorb
movsb
je
mov
sti
mov
sub
or
int3
xchg
mov
cmpsl
les
add
nop
mov
dec
sub
int3
aas
int3
mov
es
andl
jmp
stc
mov
mulps
mov
rcll
mov
int3
jle
sbb
inc
dec
xchg
inc
jl
xchg
push
das
daa
xor
repnz
mov
or
adc
xchg
inc
xchg
cld
les
cmp
repnz
out
jecxz
out
enter
push
enter
dec
hlt
xchg
mov
sub
xchg
adc
je
test
mov
icebp
push
aam
jbe
pushf
test
sbb
test
mov
js
push
push
sub
cmpsb
imul
lcall
lea
xchg
call
cmpsb
imul
test
push
addr16
and
pop
mov
lods
lret
inc
cmpb
fldenv
shrb
fnstsw
add
xor
mov
call
rcrl
dec
bound
sahf
push
fs
xor
push
jae
pop
add
fldenv
or
pop
xchg
sub
xchg
sbb
and
sub
inc
cmpsb
push
pop
mov
ds
jp
rclb
cmp
lret
mull
sbb
or
ficompl
xor
sub
out
addr16
push
dec
arpl
and
dec
sub
cltd
sahf
jge
cmp
jecxz
inc
mov
or
pcmpgtb
clc
adc
or
pop
jl
xchg
lods
push
out
lods
out
aas
inc
mov
pop
pop
ds
push
xchg
mov
push
dec
insl
and
jle
xchg
cmp
inc
orl
jg
fldt
adc
jmp
sbb
push
mov
pop
test
repnz
adc
or
push
fisubrs
popl
jno
pop
push
inc
mov
jns
cwtl
dec
jo
test
jg
cs
cmc
scas
cmp
inc
dec
jl
xorl
loopne
pop
mov
aam
xor
sub
loop
and
subb
mov
add
add
fstpt
jle
loopne
call
shll
lret
cmp
ljmp
dec
stc
xchg
sbb
mov
or
pop
sbb
pop
lods
jmp
jae
fmull
lahf
fildl
notb
xor
mov
insb
cld
push
lds
pusha
pusha
cmp
inc
adc
dec
ret
fs
dec
and
dec
test
fbstp
push
addr16
push
inc
sbb
lds
ss
xor
cmpsb
mov
jle
push
aam
sti
daa
insl
shr
add
and
repnz
repz
add
mov
dec
cld
stc
imul
adc
scas
lods
jge
jnp
popf
lds
mov
pop
or
sub
ret
mov
push
popf
cmp
iret
mov
call
aad
shlb
jge
dec
aad
ja
pop
add
jo
fidivs
mov
push
fnstsw
xchg
les
adc
aaa
scas
sub
mov
push
dec
in
jecxz
dec
loopne
cmp
fimull
or
fisubrl
adc
mov
push
cmp
cli
jl
pop
gs
ss
int
sbb
les
dec
fsubrl
and
insb
push
cmpsb
jb
les
adc
push
cmp
mov
adc
in
mov
call
aad
in
mov
lds
mov
mov
push
inc
movsb
mov
hlt
ja
sbb
testl
cmp
stos
stos
loop
jl
pop
out
les
mov
adc
sub
jl
decl
push
das
test
xor
dec
sub
daa
fldl
mov
push
ficoms
mov
push
sub
ret
or
in
cmp
ljmp
es
fimuls
test
lahf
dec
xchg
inc
rcrl
in
fs
add
scas
fimull
lds
jae
rorl
or
mov
ret
fcmovu
test
mov
xor
jae
sbb
xchg
imul
sub
pop
pop
into
out
push
mov
mov
sti
add
add
test
lds
push
repnz
test
cmpsb
popa
andb
dec
push
rolb
ljmp
aas
es
pop
scas
mov
sbb
mov
xorl
mov
jl
aam
xchg
ret
ret
jo
adc
cmp
mov
inc
cld
xchg
div
insl
popf
jl
sahf
or
mov
pop
jns,pt
and
scas
cmp
inc
lea
fistps
push
stc
shlb
dec
mov
jp
sar
cmp
cmpsb
ljmp
or
cmc
call
movsl
cmp
sub
mov
lds
sub
mov
in
clc
pop
fxtract
subl
mov
xchg
xchg
or
rcll
lock
jge
orl
or
ret
pop
sbb
cli
sub
int3
lret
sti
inc
jl
nop
rep
adc
fdivs
dec
push
mov
mov
inc
and
inc
insb
jne
mov
adc
mov
iret
imul
insb
mov
and
push
cwtl
mov
xor
ja
es
and
jmp
lahf
rcrb
fimull
xlat
jnp
aaa
arpl
loopne
int
out
addr16
outsl
adc
sbb
cmp
and
cs
imul
ficompl
lret
mov
mov
js
jmp
and
adc
aas
sbbb
jmp
inc
cwtl
xchg
add
or
add
xchg
adc
pop
movsl
imulb
sub
bound
jns
adc
add
push
or
flds
cmp
jo
roll
mov
test
es
push
jge
aas
rolb
sub
out
mov
or
cld
andb
cmpsl
mull
sub
push
and
daa
mov
fisttpl
and
out
test
lahf
mov
cmp
xchg
insb
lahf
pop
push
mov
add
cmp
outsl
push
icebp
es
pop
sub
mov
mov
shrb
jne
mov
stos
jnp
fildll
inc
dec
xor
mov
jno
dec
push
jle
and
js
cmpsl
roll
int3
shr
pop
call
lods
popf
call
xor
pusha
or
push
in
test
ret
cmp
or
aam
push
or
cmp
movsbl
pushf
push
sbb
leave
mov
jle
jno
arpl
ja
imul
ret
push
shlb
add
fwait
scas
leave
lret
xor
pop
insl
xor
ljmp
and
xchg
shrl
adc
shr
test
cmp
inc
mov
lahf
dec
mov
inc
dec
aas
push
ja
cmp
or
push
sbb
mov
out
dec
adc
sahf
test
push
outsl
jp
imul
shll
sahf
jbe
pop
es
stos
pop
nop
mov
jo
push
mov
aas
test
add
mov
mov
movsb
loop
and
stc
cmp
jge
movsb
repz
shlb
jbe
mov
xchg
flds
enter
jne
xchg
push
xchg
jle
daa
hlt
into
mov
cmp
movb
and
or
sub
lods
int
jmp
push
push
pop
test
push
test
push
cmp
shlb
inc
lds
lods
repz
push
pop
idivl
int3
test
sbb
adc
aaa
out
mov
pop
push
ja
jmp
filds
mov
jae
icebp
jp
add
pop
aam
in
ljmp
push
add
arpl
mov
clc
loope
fstp
outsb
mov
je
out
mov
mov
dec
jns
push
cli
insb
pushf
pushf
arpl
push
pop
dec
and
fld
cs
leave
mov
or
imul
or
jne
out
jns
mov
cmp
out
cmpsb
jb
out
testl
mov
mov
andl
inc
dec
xchg
in
push
stos
jno
jecxz
jmp
sub
or
leave
scas
daa
daa
std
push
cmp
add
in
jbe
mov
or
mov
jbe
test
repz
clc
inc
sub
js
add
mov
jnp
repz
or
outsb
scas
out
pusha
loop
inc
cli
fiaddl
or
movsb
pop
xor
dec
mov
pop
call
aam
mov
ficomps
add
cmp
push
mov
call
push
jecxz
fmull
out
imul
pop
shll
jg
enter
lret
sahf
push
inc
aaa
xor
dec
mov
mov
popa
stos
rorl
cwtl
sahf
jle
ja
out
rcll
sub
cli
popa
stos
push
pop
cmp
adc
mov
ds
or
sub
jl
incb
xchg
pop
pop
aas
lahf
out
fildll
dec
sbb
bound
loope
dec
popl
imul
fistps
sub
scas
jno
jbe
xlat
movsb
mov
xor
cmp
push
xchg
mov
pop
cmpsb
mov
xchg
push
insb
and
cld
lods
ror
sub
mov
aaa
loop
mov
iret
mov
in
imul
cmp
inc
shrl
ds
lret
jg
lret
mov
fs
push
orb
jae
adc
xchg
or
sub
repz
push
int3
mov
inc
mov
or
into
dec
sti
xchg
push
inc
mov
cmp
pop
ret
sbb
xchg
clc
cwtl
sbb
dec
outsb
out
or
in
inc
jge
mov
jb
or
adc
loopne
lcall
jb
movsl
inc
push
hlt
outsl
in
add
les
aad
in
in
arpl
cli
insb
cltd
stos
adcl
dec
pop
outsl
push
adc
mov
cs
or
dec
xor
mov
lret
mov
and
mov
push
push
jae
sub
fldl
pop
inc
nop
mov
ss
mov
sub
out
test
mov
mov
and
and
push
mov
test
or
ljmp
pop
sub
xor
stos
mov
lock
mov
cmp
daa
cmpsl
in
scas
lcall
cmp
dec
add
in
iret
cmpsb
outsb
pop
out
lock
dec
and
test
cwtl
xor
fildl
xchg
mov
test
sbb
mov
loope
jp
mov
xchg
adc
out
adc
xor
push
in
adc
push
insl
push
push
xchg
in
pushf
mov
dec
push
out
lock
imul
icebp
les
cltd
les
cli
mov
sbb
repnz
jl
in
pop
jnp
and
lcall
loop
and
mov
xor
orb
in
jge
iret
mov
out
in
mov
inc
and
and
andb
mov
pop
lods
out
cmpsl
dec
int3
cmpsl
cmp
loop
shll
xchg
push
mov
cmp
mov
xchg
xor
mov
cltd
push
outsl
lea
test
out
adc
xchg
add
js
xchg
adc
test
pop
inc
mov
gs
push
add
das
mov
std
repz
out
jno
sbb
push
xor
enter
fcmovne
add
fiaddl
lcall
jo
test
adc
lret
out
repz
mov
sbb
push
adc
lea
stc
push
push
out
pushf
inc
call
mov
movsb
sahf
sbbl
pop
mov
pop
inc
or
sub
out
ds
jmp
push
dec
sub
mov
js
mov
xlat
sbb
or
insl
xlat
inc
cmpsb
imul
repz
mov
jno
push
out
addb
ds
je
add
pop
inc
sti
jb
out
pop
jle
jnp
das
mov
idiv
push
out
mov
scas
icebp
mov
sub
lds
dec
test
pop
mov
cltd
pop
loop
and
loope
leave
sub
dec
adc
jge
jb
xchg
mov
testb
lret
out
or
dec
aam
ss
dec
mov
into
and
inc
iret
jo
loop
notl
push
xchg
arpl
rorb
or
push
insl
push
icebp
pop
and
popa
mov
mov
scas
sahf
insl
push
call
cli
cmp
jnp
out
movsl
test
cmpsl
xor
and
mov
inc
sbb
es
ret
mov
add
inc
fdivs
push
negl
stc
push
jmp
pop
lret
push
mov
push
mov
and
test
push
inc
adc
xor
jp
in
sbb
into
jb
sub
lods
push
and
aaa
sahf
testb
scas
and
sub
js
sub
push
pop
sti
cltd
cwtl
fstpl
sahf
lahf
cmp
adcb
inc
inc
sub
xor
adc
push
adc
sub
scas
int
aaa
xchg
pop
mov
cmp
arpl
lret
mov
test
clc
daa
sub
adc
jl
out
aad
data16
fwait
adc
mov
cmc
sbb
arpl
es
sbb
adc
out
imul
fs
mov
popa
cli
inc
in
cmpsb
xor
mov
xor
cs
lret
into
or
in
pop
push
jge
xchg
pop
daa
jg
inc
rclb
mov
jbe
ror
addb
in
test
adc
outsb
cmp
lds
jle
mov
adc
mov
repz
push
xchg
mov
repz
jns
push
or
mov
push
jnp
cmp
add
mov
stc
imul
in
pushf
shlb
add
dec
mov
dec
add
push
mov
lods
test
aad
lods
jo
popf
dec
xchg
ljmp
push
lock
pop
inc
and
sti
mov
shr
idiv
jecxz
cmp
sahf
les
xor
xor
fldenv
jmp
js
adc
xor
push
out
push
push
push
cmp
mov
mov
mov
fwait
test
mov
loopne
lods
and
sub
push
inc
xor
mov
leave
pop
filds
sbb
mov
mov
cmp
and
pop
clc
adcb
xor
xor
inc
cmp
ja
jns
js
nop
and
lods
hlt
inc
cmp
mov
nop
lods
repz
xor
fs
push
movsl
out
mov
jns
pop
out
lahf
sbb
add
in
lret
pushf
repnz
fists
cmp
insl
and
call
push
test
insl
adc
and
and
icebp
imul
push
jecxz
pushf
pop
insb
repnz
mov
xchg
inc
lret
xchg
rcr
out
lock
mov
stos
mov
push
cld
into
ljmp
push
icebp
ret
movsb
fbld
std
pop
inc
xor
das
outsl
xchg
and
imul
sti
and
mov
cmpsb
cwtl
sbb
insb
rclb
xor
std
and
lock
cmpsb
test
dec
xchg
stos
mov
xor
inc
addl
sbb
fbstp
popl
mov
sbb
mov
xor
add
dec
dec
adc
test
test
mov
mov
incb
xchg
pushf
xor
ljmp
sbb
aaa
mov
push
push
adc
fiaddl
cltd
shrb
cmc
insb
ss
jae
int3
xchg
adc
or
insl
out
inc
js
inc
mul
lret
mov
in
aas
imul
xor
outsb
sbbb
add
bound
and
movsl
loope
jns
xor
xchg
ljmp
sbb
mov
push
sbbl
repnz
in
mov
into
jb
js
mov
faddp
shl
pop
or
dec
push
daa
sub
sbbb
hlt
jl
jbe
mov
dec
inc
jnp
pop
jg
aas
xor
ja
outsb
pop
add
fidivrl
inc
bound
lea
add
mov
mov
or
pop
fs
in
push
dec
and
aaa
xchg
movsl
inc
lret
push
test
outsb
adc
stc
jcxz
and
or
cmc
mov
jp
dec
int3
aad
jo
std
fidivl
insb
mov
js
cmp
mov
in
mov
popa
sbb
sub
mov
or
cmp
xchg
cmc
dec
lods
xor
das
mov
inc
xchg
ret
orb
adc
addb
push
imul
mov
xchg
mov
pop
fwait
aas
movsl
aad
cmp
cmp
push
mov
add
and
outsl
sub
mov
mov
popa
dec
mov
push
xorl
lods
xlat
jbe
sbb
and
imul
pop
aad
dec
imul
add
stc
xchg
push
xchg
or
cmp
jo
dec
sar
mov
xor
and
lcall
or
push
es
pushf
jae
mov
out
mov
imul
add
js
sbb
outsb
clc
jns
xchg
cmpsb
icebp
push
cs
mov
mov
je
mull
dec
inc
aam
add
jne
and
adc
xor
jne
jmp
adc
mov
fstpt
pop
out
iret
test
cli
mov
cmp
cwtl
push
inc
add
add
mov
mov
popf
shlb
iret
pop
adcb
outsb
jo
sub
jg
xchg
xchg
nop
adc
push
mov
cmp
mov
js
jae
jecxz
pusha
xor
aaa
mov
aam
clc
mov
and
mov
push
fisttps
shll
ds
adc
mov
sbb
aaa
aam
mov
and
sbb
sub
repz
inc
cmovle
fldt
or
cmp
in
inc
dec
jg
push
lea
pop
cmp
jno
sub
adc
xchg
pop
sub
sub
unpcklps
jne
cmpsl
or
idivl
mov
addr16
jl
xchg
ja
mov
iret
mov
mov
mov
stos
mov
inc
jno
scas
mov
cmpsl
adc
adc
fdivl
xchg
mov
jecxz
fsts
bound
int3
mov
xor
sar
sub
mov
out
mov
add
xchg
je
lahf
aas
stc
pushf
sbb
push
or
int
sub
ret
jns
cmc
jp
ret
mov
cld
subl
leave
pushf
clc
xchg
xchg
cmp
ljmp
mov
sahf
cld
mov
mov
cmp
mov
aas
lods
aad
jmp
dec
ds
popa
test
sub
xor
stc
enter
jb
push
popa
pop
movl
pop
ja
fwait
dec
mov
cmp
ss
in
cmp
jae
jl
or
out
or
xchg
mov
in
gs
add
ja
in
xor
mov
xor
in
lret
pop
inc
xlat
rorl
xor
jl
mov
or
xchg
into
icebp
xchg
fldenv
fisubs
fwait
std
test
outsl
adc
push
xchg
mov
dec
mov
test
es
jle
ret
adc
ljmp
pop
out
sbb
mov
bound
out
sarl
mov
popa
fstpt
leave
stos
add
jno
xor
mov
jns
repnz
int3
xchg
jmp
mov
lret
mov
mov
sub
lods
bound
jp
mov
cltd
mov
mov
or
popf
mov
sub
inc
aam
sbb
jae
cld
xor
add
call
inc
sub
int
pop
mov
add
outsl
push
add
cltd
push
mov
xchg
push
sub
sbb
ror
add
add
add
and
add
lcall
push
sbb
jmp
push
jns
fwait
add
loop
iret
adc
push
lock
test
mov
pop
cmp
lods
pushf
fldl
sbb
cmpsb
cmp
lods
movl
push
and
mov
daa
stos
inc
into
fadd
stos
aam
mov
aam
push
sar
ss
sarb
xor
in
and
add
mov
add
repnz
dec
jecxz
std
std
insb
aam
sub
stc
aaa
mov
push
add
push
and
sti
inc
sarl
sbb
int3
dec
jne
adc
bound
adcl
imul
aaa
btc
aas
dec
inc
dec
insl
fdivrs
push
repnz
dec
stos
ja,pt
loop
xchg
jnp
dec
bound
cmp
cmp
es
inc
push
test
mov
push
popf
pop
mov
add
inc
xor
xchg
push
push
mov
push
jae
fwait
bound
pop
xchg
mov
sarb
jb
jne
lock
aaa
orl
rcrl
and
jl
pop
insl
ss
lret
xchg
pushf
mov
and
inc
dec
jmp
and
mov
mov
pop
xor
icebp
dec
std
outsb
sbb
inc
mov
dec
pop
sbb
addl
es
movsb
jbe
push
pop
out
call
fnop
jno
imul
fdiv
out
loope
js
fs
sbb
xor
add
psrlq
ret
lods
mov
aad
cmp
cmp
push
ds
mov
scas
xchg
pop
js
xor
sbb
insb
dec
xchg
sbb
push
adc
out
xchg
mov
push
mov
pop
movsl
mov
mov
and
pop
es
pop
flds
xor
imul
sbbb
jl
ret
sahf
mov
and
push
cmpsl
jae
movsb
push
and
lret
imulb
and
aas
dec
jno
mov
test
jns
repnz
iret
push
and
inc
lods
cmp
jg
fnstsw
inc
sti
fmuls
lahf
ret
movsl
fstpt
out
push
test
mov
aaa
addr16
int
mov
outsl
clc
xchg
sub
popf
xchg
cwtl
aas
jno
test
jecxz
flds
sarl
add
and
fwait
lock
repnz
dec
ljmp
scas
leave
mov
and
inc
inc
jae
dec
mov
pop
inc
adc
sar
inc
test
ret
inc
xor
pop
jbe
xor
push
dec
pop
push
sti
sti
inc
dec
mov
out
jae
es
neg
cmpsl
mov
adc
push
lea
cmp
jno
mov
stc
lret
sub
in
cmp
cltd
add
sarb
call
adc
push
mov
divl
and
lret
dec
leave
mov
repz
inc
mov
add
test
aad
dec
icebp
add
mov
insb
push
imul
push
movsl
arpl
cmpsb
hlt
xor
in
add
mov
pop
adc
out
fnsave
xchg
clc
ret
push
lret
clc
mov
mov
ss
xor
pop
sbb
mov
cltd
push
arpl
pop
lahf
stos
bound
fcoms
repz
sub
sbb
lock
aas
inc
xchg
mov
inc
sbb
and
subb
stos
andl
pop
test
clc
xchg
movsb
pop
stos
mov
jecxz
out
cmpsl
ljmp
sub
fmull
ret
outsl
mov
dec
mov
mov
cmp
out
repz
cld
mov
iret
inc
pusha
rolb
flds
push
cmp
add
mov
ja
aad
pop
fnstcw
out
or
push
aad
add
adc
mov
dec
cs
push
sbb
and
jbe
xchg
adc
imul
pusha
cmp
test
out
adc
add
test
lret
sarl
in
dec
shrb
add
pop
out
xor
add
outsl
push
lods
jmp
dec
mov
mov
inc
cmp
dec
push
mov
cmpsl
mov
mov
jmp
incb
in
cmp
ja
and
loopne
sahf
inc
orb
jno
std
js
or
push
jle
das
aas
mov
inc
sub
test
imul
or
mov
je
mov
dec
mov
iret
add
hlt
inc
fs
movsl
aas
xchg
lods
mov
nop
clc
stos
adc
inc
cltd
outsb
inc
add
shll
lock
xor
stc
hlt
ret
mov
lcall
push
lret
testl
mov
mov
clc
xor
hlt
rorb
gs
xchg
mov
mov
push
test
ds
stc
leave
faddp
stos
cmp
lods
sbb
stc
cld
xchg
mov
pop
int
aaa
xor
sub
daa
into
movsl
push
das
repnz
add
es
out
add
add
pop
in
and
int3
test
popa
or
push
out
mov
jbe
push
dec
xor
inc
into
xor
testb
call
les
cld
and
lcall
or
xchg
jno
test
leave
sbb
bound
addb
cli
dec
cmpsb
and
pushf
or
and
movb
sbb
push
xchg
push
jle
sti
in
xor
popa
neg
int
jo
idivl
lea
stc
stc
daa
sbb
imul
adc
push
test
int
cmp
loopne
ret
mov
cmp
mov
add
out
out
pop
mov
dec
dec
jb
ficomps
adc
mov
lods
sub
adc
aad
mov
stos
mov
jns
out
test
push
pop
xor
outsb
inc
stc
ja
sbb
pop
mov
int3
lcall
cmpsl
sti
inc
cmpsl
adc
jne
mov
xor
adc
xlat
push
popa
sbb
cwtl
sub
push
sbb
push
fcom
pop
adc
or
les
int3
cmp
cmp
imul
out
mov
sets
mov
push
loopne
cli
ret
xchg
push
dec
xor
int
mov
dec
push
dec
stos
movsl
adc
push
xchg
stos
enter
adc
cmp
adc
xchg
lahf
inc
push
mov
cwtl
add
jnp
dec
and
loope
arpl
fmulp
sub
ret
out
mov
pushf
inc
mov
push
fistpl
scas
repnz
rorb
into
inc
rorb
pop
int3
mov
pop
push
jp
add
push
mov
loope
arpl
in
sbb
jp
cmp
pusha
mov
jg
mov
pop
cmp
imul
popf
ja
popa
roll
ret
lods
xchg
pop
pop
sti
in
add
lret
add
fcoms
lahf
aaa
xchg
les
jmp
dec
inc
mov
sahf
cs
push
xor
xchg
mov
fiadds
in
mov
test
out
dec
popf
sub
nop
cmpsb
jno
pop
lret
int3
sub
mov
adc
fcoms
dec
sub
ss
leave
sti
xchg
cmovns
lods
js
fs
movsl
fsub
sbb
mov
pushf
mov
sahf
or
in
cs
jmp
dec
inc
je
push
lods
arpl
xor
or
pop
fisubs
and
test
in
insb
adc
mov
aas
js
and
mov
xchg
mov
mov
sbb
or
sbb
testl
adc
adc
adc
add
out
imul
or
fdivl
jbe
aas
dec
in
add
mov
lret
adc
arpl
add
dec
mov
scas
pop
outsb
mov
fstpt
clc
mov
jbe
jnp
lcall
imul
pop
out
jnp
push
mov
pop
cmp
insb
jb
mov
clc
stos
pop
or
dec
or
repz
rcl
fs
dec
aas
hlt
mov
outsl
data16
jb
sub
imul
fdivrp
sbb
pushf
std
repz
or
cmp
xchg
adc
std
icebp
lock
clc
xchg
aam
fsubl
adc
lods
jb
hlt
dec
call
xchg
ret
outsl
sbb
mov
scas
icebp
out
shr
lret
and
cmp
mov
or
jmp
sub
mov
repnz
pop
push
jmp
mov
out
imul
mov
insl
lds
xor
jno
int3
mov
adc
leave
mov
shlb
pop
pushf
test
popa
andl
push
fwait
sbb
mov
xor
stc
pop
pop
bound
roll
sub
cmp
push
or
mov
fldenv
xor
int3
push
mov
fdivr
mov
and
lds
insb
nop
push
fisubl
rolb
cmp
into
inc
out
cmpb
aaa
push
cmc
into
xchg
imul
lods
sahf
jae
sahf
test
xor
mov
pop
int
and
xchg
and
jg
jb
xchg
addr16
xchg
jl
in
mov
pop
push
pop
xlat
movb
int
outsb
mov
xchg
jns
negb
addl
cli
movsb
pop
cmp
pmulhw
sbb
scas
les
push
fmull
cmpsl
lods
aas
andl
sub
mov
inc
jo
mov
jmp
xlat
xchg
scas
and
imul
aam
loopne
mov
sbb
test
jp
in
popf
aam
pop
out
xor
pop
insl
lret
lea
pushf
aad
inc
into
and
adc
dec
push
std
sbb
sub
ror
lods
fcomi
movb
divl
sub
mov
jae
or
mov
mov
push
jl
in
lds
adc
test
and
out
mov
xchg
jae
and
insl
mov
nop
pop
push
xchg
movsb
xchg
rolb
and
xor
stc
std
jge
cmp
and
movsl
xchg
inc
xchg
pop
fwait
sbb
mov
fcomp
xchg
dec
fists
imul
or
lds
pusha
lcall
mov
cmpsl
mov
cmp
jno
jge
cltd
sbb
dec
or
ret
jge
push
out
pop
dec
dec
movsl
mov
mov
inc
sbb
xchg
sub
inc
out
sub
and
xchg
inc
and
jbe
outsb
sub
push
mov
js
xor
test
les
cmp
push
movsl
sahf
lahf
fmul
push
sbb
fmull
xor
sbb
pop
pop
sub
cld
pushf
and
jbe
sti
aas
jnp
scas
aad
or
push
cltd
pop
and
scas
fwait
mov
loope
dec
lret
push
or
loop
mov
pusha
lret
sahf
mov
pop
fsts
jl
mov
sub
cld
cld
jecxz
fisubrl
jecxz
imul
inc
rorl
jecxz
scas
ljmp
push
sbb
jne
mov
jne
xchg
pushf
ss
and
insl
jge
add
lds
adcb
fimull
addr16
adc
sbb
out
cmp
pusha
aad
js
mov
lock
dec
stc
jno
jge
and
pop
stos
pop
ljmp
jecxz
mov
push
xor
loop
out
fwait
add
call
xor
xchg
push
xor
inc
add
add
stos
sub
outsl
jmp
test
pop
cs
notb
mov
mov
pushf
in
mov
iret
fld
lcall
cmp
in
mov
cltd
bound
dec
cmp
mov
jmp
push
and
lcall
push
adc
sbb
xchg
ljmp
imul
ret
push
out
cs
push
dec
pop
xchg
add
pop
lret
aaa
mov
pop
lods
mov
mov
pop
fldenv
jae
stc
inc
sub
addl
pushf
divb
fstps
adc
sub
jae
inc
mov
lret
test
loope
call
mov
std
in
rorl
jo
push
les
pop
jno
cmc
jmp
sbb
sbb
test
mov
xor
sti
movsb
ss
push
or
push
xor
scas
int3
push
or
sbb
out
mov
and
pop
mov
es
inc
cmpsb
dec
sub
mov
push
aad
lret
std
orb
jbe
mov
push
out
adc
sbb
push
ret
pop
and
lret
out
pop
hlt
in
insb
sub
rcr
scas
cmp
aaa
adc
mov
sub
in
jbe
push
and
cmp
add
or
stos
sti
mov
idiv
xor
roll
jne
cmpsl
lret
loop
push
xchg
call
xchg
xchg
icebp
fmull
fnsave
and
jecxz
inc
push
dec
das
dec
shrl
pop
xor
sbb
daa
mov
and
outsb
push
jns
stos
dec
dec
stos
loope
in
sarl
lahf
out
xor
popf
arpl
and
inc
sub
lods
jl
lds
sar
inc
leave
mov
fiadds
out
repz
pushf
mov
mov
or
jmp
mov
das
popa
ja
xchg
jbe
jg
mov
js
pop
arpl
adc
and
push
out
mov
in
jbe
fadd
adc
loopne
sbb
mov
jne
jns
mov
xchg
xchg
push
cmp
mov
push
lds
dec
cwtl
pop
and
push
sub
cmp
sbb
loopne
shl
jb
loop
inc
loopne
lahf
es
jecxz
mov
sub
test
daa
jle
xchg
sub
out
mov
xchg
xchg
test
mov
cltd
test
sbb
mov
dec
jp
js
xor
leave
cmp
mov
out
push
jmp
mov
push
or
add
mov
loope
mov
mov
dec
outsb
mov
push
adc
sbb
ja
push
cmp
outsb
lds
call
dec
push
cmp
lock
add
mov
sbbl
xchg
sahf
mov
cwtl
lock
jge
test
and
sbb
xor
and
cltd
pop
adc
sub
fs
lret
shrb
push
inc
sbb
or
mov
sub
pop
push
pushf
pop
shll
add
in
sbb
sarb
mov
sar
lcall
xor
jae
cmp
cmpsl
cmp
xorb
push
xchg
sti
and
out
loop
pop
add
mov
pop
push
sub
pop
xor
ret
or
sbb
in
repz
pop
pop
fdivs
div
jg
mov
cmpsl
fildll
imull
push
and
adc
xor
adc
push
fldcw
lods
cltd
cmpsl
mov
inc
pop
xchg
outsl
sub
aaa
xchg
adc
hlt
bound
xchg
fildll
or
dec
cmp
mov
mov
adc
lcall
dec
movsb
sub
notl
inc
inc
or
mov
mov
dec
sbb
jp
add
jns
in
sbb
sti
jecxz
mov
mov
out
dec
rorl
stos
pop
ja
sbb
adc
imul
ljmp
divb
and
and
pop
sub
and
xor
cltd
inc
and
imul
cmp
icebp
adc
sub
fwait
stos
addr16
stos
sub
addr16
xchg
not
pop
jg
mov
dec
in
or
int3
lods
xor
clc
jbe
add
sbb
dec
pop
les
jmp
repz
mov
sub
jb
ficoms
dec
into
push
ja
mov
or
stos
aas
adc
test
call
mov
fwait
dec
inc
add
cltd
pcmpeqd
lea
pushf
aad
xor
adc
inc
imul
in
push
enter
jnp
scas
nop
shlb
mov
pop
ficoms
cltd
sti
pop
sub
sub
inc
in
call
cmp
inc
add
insl
and
xchg
cmpsb
dec
push
push
stos
push
insl
repnz
cmpl
cld
arpl
dec
clc
dec
rorb
mov
dec
cwtl
xor
cmp
sbb
dec
sti
stc
xchg
add
inc
xchg
jp
xor
adc
and
jno
push
sbb
pop
jl
sti
dec
mov
xlat
mov
push
incb
or
inc
pop
mov
adc
popa
mov
inc
mov
mov
xor
out
sbb
clc
pushf
pop
decb
jno
push
xchg
cmp
aaa
add
xor
std
movsb
sti
inc
dec
pop
xchg
mov
rolb
imul
cmp
out
adc
dec
xchg
cmp
repz
lret
mov
idiv
je
lock
inc
mov
cwtl
xor
mov
enter
pop
push
mov
pop
insl
ja
inc
mov
add
xor
cmp
test
or
es
or
aad
stos
enter
mov
pusha
push
inc
rcll
scas
jge
in
das
mov
sbb
push
dec
mov
addb
insl
jge
addr16
jecxz
adc
ffreep
int
jns
mov
imul
and
imul
add
out
cmp
in
mov
loop
andl
push
jne
stos
pop
rcr
cmp
fucomi
cmp
xchg
xor
sahf
xlat
imul
add
dec
sbb
xlat
test
aad
popl
xor
and
aas
fdivr
repnz
ljmp
sbb
pusha
cmp
mov
inc
add
mov
inc
cs
loop
nop
or
fsubs
adc
loope
fcoml
inc
mov
add
pop
das
arpl
xor
out
sbb
sti
je
mov
cmp
mov
mov
clc
inc
xor
fidivs
adc
lods
lahf
int3
pop
mov
ret
xchg
dec
xchg
loopew
adc
lods
test
ficomps
adcb
mov
pop
mov
push
jnp
mov
jae
xor
xchg
adc
outsb
addb
rcl
pop
push
stos
bound
push
andl
scas
mov
cmp
mov
xchg
leave
add
push
and
sarb
and
repz
mov
enter
jp
into
clc
testb
shl
sub
xlat
idiv
ret
add
aaa
push
add
xchg
out
outsb
sbb
mov
mov
popf
inc
repz
arpl
stc
je
inc
fistpl
std
mov
out
rep
cmpsl
jns
xor
rcrl
cli
mov
repz
jne
fdivrp
sbb
ss
inc
dec
pop
xor
es
jne
subl
loope
rcll
sub
dec
sbb
adc
mov
sub
lods
cmpl
adc
out
iret
fwait
push
jae
adc
mov
aaa
dec
jae
fldl
mov
sti
stos
mov
aam
je
xor
sub
cmp
dec
dec
movsl
inc
xchg
jnp
push
movsb
rcrb
scas
icebp
imul
pop
jno
xchg
icebp
daa
inc
xchg
out
jmp
daa
shl
mul
and
mov
sbb
in
es
dec
and
es
jns
shrb
add
push
sbb
mov
jge
out
mov
and
mov
loop
inc
out
test
adc
dec
icebp
dec
mov
dec
into
aam
nop
adc
dec
lods
scas
or
or
out
cmpsb
test
sub
out
pop
in
pop
mov
pop
cmpsl
sti
cmpsl
int3
pop
dec
rcll
sbb
or
dec
mov
mov
cvtps2pd
mov
inc
xor
scas
jns
nop
xor
cmp
jle
pusha
insl
pop
sbb
lret
dec
imul
xchg
cmp
dec
mov
out
mov
adc
fs
sub
sbb
imul
cmp
enter
mov
lea
inc
cmp
call
mov
lods
shll
adc
int
pop
or
fidivrs
cmpsb
or
gs
jns
sahf
int
out
push
int3
jae
out
push
sub
cmp
jb
cmp
arpl
out
cld
sbb
ja
pop
fadd
mov
jno
and
movsb
test
scas
inc
imul
stos
jg
xor
scas
lret
cli
enter
aas
ja
add
std
xchg
leave
dec
aam
mov
ficomps
mov
sbb
sbb
cs
inc
je
push
xor
or
test
mov
test
cmp
mov
mov
xchg
pop
in
rclb
push
outsb
mov
push
clc
adc
repz
mov
adc
es
inc
imul
sahf
and
add
jne
xor
push
or
push
gs
mov
fwait
push
daa
dec
jae
dec
cmp
stos
jns
fs
xchg
add
inc
in
outsl
rcll
xchg
mov
int
xchg
movsl
lds
mov
aad
iret
cli
out
test
ljmp
je
pop
add
into
inc
xor
hlt
or
and
cli
loop
imull
in
cld
out
fnstenv
addb
stos
jg
arpl
neg
xchg
push
push
dec
mov
xchg
pop
ljmp
cmpsb
sbb
fsubrs
or
popa
pop
sub
icebp
push
cmp
cmpl
lods
mov
insl
ret
push
test
int3
cmp
imul
into
add
adc
sahf
adc
xor
mov
leave
ret
pushf
pop
jo
and
stos
push
imulb
pop
push
mov
dec
scas
nop
mov
icebp
pop
cmpb
mov
and
xor
popa
fidivs
mov
imul
xchg
fldcw
icebp
daa
iret
adc
je
adc
ja
xor
icebp
aam
mov
imul
xchg
ret
fucomp
mov
inc
bound
pop
mov
sti
rcll
adc
sub
test
inc
dec
fidivrl
pop
test
stos
push
dec
scas
jnp
and
inc
inc
lods
jnp
call
mov
stos
std
sbb
in
adc
inc
fwait
icebp
jl
test
outsl
and
fisubrl
clc
and
cmpsl
mov
xchg
sub
aad
cltd
icebp
sub
cltd
bound
in
sar
cli
mov
fwait
ret
lret
aas
xor
mov
insb
jl
dec
xchg
ret
push
pop
mov
out
call
and
fldt
cli
repz
jbe
ljmp
stos
mov
dec
outsb
icebp
xor
movzwl
cmc
add
mov
hlt
cmp
add
into
mov
insl
les
outsl
push
push
inc
xlat
hlt
leave
mov
negb
aam
or
cwtl
popa
shll
cmp
push
cli
mov
jmp
call
test
xor
jg
and
pop
sub
test
adc
outsl
sahf
adc
cmp
cmp
push
scas
aam
sbb
int3
insl
mov
cmpsl
rcr
sbb
loope
mov
cmc
call
xchg
enter
push
and
adc
mov
add
dec
jge
dec
call
inc
lahf
or
adc
xchg
xor
ss
ja
jecxz
jne
push
pop
out
ficoms
cmpsb
fisttpll
lea
cmpsl
push
push
dec
fsts
test
shll
scas
pop
fisubl
adc
jo
jnp
xchg
inc
cmp
cmpsb
mov
mov
arpl
mov
ja
mov
xchg
nop
repnz
dec
xor
mov
das
repnz
pop
call
adc
mov
out
jb
pop
dec
lock
pop
lods
arpl
cmp
ss
iret
lea
jl
xchg
xor
pop
dec
cmp
pop
sbb
push
fbstp
dec
testl
aaa
mov
xor
movsl
inc
sub
xor
mov
sbb
ss
dec
jb
and
sbb
addb
sub
leave
jle
xor
andl
dec
aaa
push
mov
in
out
in
outsb
aam
jno
nop
add
in
jmp
testl
and
fldcw
fcmovb
xchg
jne
push
mov
push
xchg
mov
inc
xchg
mov
lock
lods
cmp
push
add
lcall
pop
pop
and
jb
mov
int
mov
ret
and
cmpsb
push
out
xor
repnz
aaa
je
stc
stos
in
bound
add
dec
adc
push
dec
rorl
xor
adc
mov
mov
xor
test
mov
loopne,pt
fildll
sub
out
arpl
aad
cmp
adc
lea
push
adc
sub
xor
adc
ljmp
test
loope
lods
popw
fdivrl
xor
dec
das
sbb
repz
loopne
jo
adc
inc
dec
mov
out
or
testl
xchg
mov
pop
jbe
jb
out
cmc
int
popf
test
or
idivb
dec
xor
daa
ret
cmpsl
cli
mov
dec
js
hlt
fs
aas
pop
test
lods
test
int3
jo
ret
add
int
cmpsl
pop
pop
in
cmp
dec
sub
pop
dec
xor
aas
inc
out
push
lods
lock
lret
dec
in
mov
testb
mov
mov
mov
xor
fmull
inc
xor
insb
lock
jnp
fs
mov
dec
ret
mov
xor
inc
add
test
rcrl
inc
shll
inc
scas
add
je
mov
cwtl
cli
dec
push
cli
fimuls
sub
and
inc
or
mov
mov
std
sbb
add
push
xor
jbe
pop
push
jnp
repnz
enter
xlat
pop
adc
dec
notl
jg
fcmovu
out
js
mov
xchg
stos
inc
bound
lgs
add
fst
lock
and
jmp
lcall
mov
pop
repnz
aad
rcrb
jbe
fsubs
movsb
mov
inc
xorb
push
push
add
add
jmp
fs
nopl
mov
jae
orb
dec
in
shrl
lahf
mov
mov
jb
and
ja
insb
xlat
loop
push
jnp
mov
inc
xchg
test
stos
scas
cs
jnp
inc
mov
xor
inc
aas
mov
mov
lock
in
pop
dec
int3
rorb
nop
and
ja
add
adcb
or
aaa
xor
add
cmp
orl
push
and
insb
pop
pop
decl
adc
insb
int
jg
mov
pop
inc
int3
xchg
pop
stos
mov
add
sbbl
iret
outsl
mov
jp
insb
ljmp
and
sbb
mov
jg
xor
pop
inc
lret
add
pusha
jecxz
nop
addr16
mov
add
or
cmp
imul
cld
pusha
add
jge
sbbb
xor
mov
xchg
pop
or
pusha
fwait
jge
adc
push
mov
lods
out
mov
sbb
mov
push
sbbb
out
push
addb
out
sub
shr
pop
fbstp
enter
and
test
icebp
inc
movb
cmp
xchg
iret
out
stos
in
rorb
gs
or
push
inc
xlat
imul
xchg
mov
lock
jp
sbb
jbe
and
stos
mov
jo
mov
pusha
cmp
add
cmp
lods
and
enter
mov
inc
stc
jmp
ss
and
push
out
nop
cmc
lret
je
pop
jge
sti
das
xchg
movsb
lock
std
imul
fadds
adc
movsl
or
scas
or
jg
lea
sbb
inc
jg
enter
jns
lods
divb
int
std
jo
jecxz
xor
jecxz
rorl
enter
mov
or
mov
cmp
in
or
je
js
or
mov
lods
inc
out
mov
jns
shlb
leave
repnz
enter
out
push
jno
add
and
daa
outsl
push
stos
push
cmpl
and
loopne
outsl
push
cmp
sbb
icebp
lods
and
sti
jg
cltd
fsubl
shlb
pop
test
or
xchg
jecxz
mov
jle
std
mov
mov
loop
in
scas
jecxz
aaa
xor
jns
loopne,pn
jo
jae
pusha
fldl
dec
fldl
dec
pusha
mov
or
jl
mov
dec
dec
jp
xchg
xor
ror
in
pop
out
std
xchg
pop
das
inc
lods
es
sub
iret
sbb
mov
xchg
mov
ficoms
mov
test
xor
jb
inc
filds
xor
push
daa
aad
stc
popa
or
adc
lcall
faddl
outsb
nop
daa
fwait
mov
rol
jecxz
xor
inc
add
pushf
mov
stos
and
cmp
popf
test
idivb
incl
mov
stc
xchg
scas
cmp
pop
mov
and
cld
mov
lods
xchg
lret
out
gs
std
xchg
testb
sub
mov
mov
push
mov
jl
push
stos
aaa
dec
pop
pop
adc
test
jle
and
adc
pop
dec
xchg
jge
cltd
bound
fcoml
pop
fidivl
push
jno
inc
mov
fsubr
xchg
lods
mov
or
adc
push
adc
scas
jmp
sbb
xchg
repz
mov
es
lret
rclb
dec
cli
data16
lock
ret
mov
jnp
xor
pop
lret
jecxz
fld
push
xor
inc
mov
mov
pop
sbb
stos
stc
lcall
movsb
dec
mov
adc
cmp
or
sahf
push
adc
xchg
stos
in
cltd
inc
jae
aas
std
inc
and
xchg
shrl
jno
mov
xchg
pop
xchg
pop
jle
xchg
inc
mov
mov
aad
push
rolb
mov
xchg
aad
cmp
js
adc
mov
jo
int
sbb
movsb
xor
lcall
cmpsl
xchg
popf
mov
add
insb
and
adc
daa
jns
lcall
mov
sub
xor
shll
adc
shrl
xor
pop
mov
shrb
pop
ss
sub
enter
loopne
mov
pop
or
mov
std
popa
inc
data16
pusha
aaa
and
mov
jl
inc
jo
push
push
xor
sbb
mull
loopne
pop
mov
xor
pop
cwtl
cmp
push
lds
push
ja
jecxz
push
hlt
adc
sub
xlat
das
push
add
mov
jne
sbb
push
shlb
dec
xchg
xor
cmp
aaa
add
pop
in
inc
xor
scas
aas
fmull
mov
lcall
mov
cs
xorl
xor
filds
sbb
or
loop
mov
or
xchg
fisubrs
lea
dec
xchg
lods
sti
hlt
movsb
mov
adc
mov
out
push
xchg
and
arpl
jmp
jns
sbb
into
cs
imul
enter
jno
and
popa
jge
mov
fmul
nop
aas
sub
cs
mov
imul
repnz
mov
sub
mov
scas
cmpsb
std
gs
cmpsl
hlt
adc
jge
or
push
xor
xor
shlb
cltd
dec
add
and
lods
loopne
dec
sbbl
inc
cmp
pop
fwait
mov
and
push
mov
aam
mov
lock
pop
mov
jne
test
sarl
jg
mov
sub
loope
int3
flds
es
fnsave
add
mov
shll
xor
mov
pop
cmpsl
mov
in
mov
sahf
pop
and
mov
movsb
mov
ret
mov
scas
sub
dec
cwtl
out
sub
aam
pop
sbb
cmpsb
mov
mov
lods
mov
imul
jmp
pushf
das
adcl
sub
dec
inc
test
push
inc
cmpsl
dec
sahf
and
adc
pushf
xor
mov
lods
je
dec
into
mov
sub
sbb
cmpsl
movsb
les
and
inc
es
jnp
and
roll
cmp
dec
fistl
inc
jl
sub
push
in
jge
repz
std
dec
lret
dec
leave
dec
mov
xor
jg
out
push
mov
jno
push
xor
testb
add
movsb
push
inc
xlat
xor
cmp
ja
scas
pmaxub
out
call
xchg
dec
sub
xchg
xor
jnp
and
pop
iret
lcall
add
out
mov
outsb
or
and
jl
push
or
pushf
sub
mov
and
sub
jl
jle
imul
in
jp
adc
push
push
call
jmp
sbb
daa
cmpsb
movsl
fcoml
mov
dec
or
adc
lods
sbbb
mov
dec
pop
mov
add
mov
push
mov
mov
fwait
add
out
push
rclb
lcall
xchg
fldt
add
add
lds
ja
and
push
jg
cmp
mov
sbb
js
in
ljmp
pop
sbb
ja
hlt
xor
imul
not
idiv
adc
scas
shl
stc
jo
inc
mov
inc
fwait
push
mov
push
add
into
cwtl
sub
add
mov
and
adc
or
xor
sbb
xchg
sub
push
mov
ja
sbb
jbe
pop
sbb
je
jl
stos
or
popa
xchg
icebp
repnz
xor
sbb
aad
subl
mov
sbb
inc
repnz
cwtl
test
in
xchg
dec
sub
xchg
cmp
sbb
out
int3
stc
cmp
out
lods
push
js
xor
out
and
sub
mov
jnp
lock
sbbl
scas
stc
mov
sbb
fistps
movsl
xor
in
jb
dec
insl
mov
and
pop
add
sbb
sahf
movb
mov
pop
sbb
mov
lds
sub
pop
in
and
dec
mov
aam
or
loopne
sbb
aas
pop
mov
mov
js
add
push
js
jle
insb
jmp
cmp
mov
aaa
lods
ret
out
mov
ljmp
or
add
out
es
in
inc
ljmp
out
outsl
ss
or
lods
or
out
inc
inc
daa
xchg
mov
aaa
ja
out
cmp
push
test
mov
or
add
or
cmpsl
movsb
lods
add
loopne
mov
ljmp
testb
mov
push
push
add
sbb
lds
sub
icebp
mov
cmc
stos
enter
mov
cmp
movsb
cmp
ljmp
xor
pop
inc
inc
adc
int3
movsb
xor
sar
pop
test
push
es
mov
adc
push
mov
dec
cmp
adc
mov
movsb
push
push
idivl
sbb
sbb
inc
sbb
dec
ds
push
sbb
lods
outsl
xchg
add
popa
pop
add
cmp
xchg
aas
sub
sub
loope
mov
sub
fwait
adc
fimuls
in
push
test
push
loope
movsl
mov
rcll
adcl
mov
cmp
xlat
gs
lret
std
dec
call
cs
arpl
mov
cmpsl
leave
pop
fs
rclb
xchg
xchg
push
jbe
cld
dec
mov
adc
jne
fs
in
js
xchg
mov
sbb
push
outsl
dec
mov
ja
mov
je
mov
shll
sahf
mov
jp
inc
fmulp
and
sbb
mov
cmp
dec
jecxz
or
jge
out
sub
ret
and
adc
popa
lahf
popl
ret
flds
ret
in
insb
fs
inc
jo
jnp
idivb
inc
add
lretw
and
mov
add
or
pop
dec
test
sub
push
std
jno
mov
xlat
and
or
sbb
int3
bound
outsb
and
mov
xchg
push
jecxz
aas
loope
pop
push
inc
sub
std
xor
stc
data16
lds
sbb
fildll
mov
ljmp
sbb
dec
mov
ret
lods
daa
inc
mov
inc
stos
pop
inc
pop
push
rcrl
shl
jg
xchg
daa
data16
cmp
add
filds
adc
fstl
test
pop
aaa
lods
pusha
pop
repz
cld
mov
rcl
in
jmp
add
stc
addl
int3
dec
mov
rolb
sbb
imul
frndint
ss
mov
xchg
decl
fsubrl
bound
stos
rolb
jbe
fcomps
ljmp
adc
xor
lret
pmaddwd
cmp
mov
add
jmp
mov
jo
sub
lods
roll
out
lea
push
mov
push
in
shll
lcall
ja
cwtl
jl
sub
inc
inc
lea
fbld
out
xchg
mov
incb
das
cmp
orl
ds
fidivrl
push
pop
icebp
jmp
shl
dec
arpl
jmp
cmpsl
pop
inc
insb
pop
enter
pusha
daa
push
clc
ret
popf
mov
sbb
leave
mov
sbb
mov
mov
or
scas
dec
fprem
out
xor
add
add
add
push
or
adc
mov
rcrb
js
dec
mov
pop
jecxz
enter
sbb
rcl
mov
rorb
lcall
scas
mov
inc
dec
xor
cmp
push
test
aam
loop
shlb
dec
call
adc
mov
add
aad
ficompl
aad
lahf
shr
xchg
lcall
popf
xorb
sti
or
mov
testl
xchg
mov
jo
xchg
cs
test
pop
jnp
or
movsb
mov
inc
test
inc
mov
mov
push
mov
out
or
jmp
ucomiss
mov
inc
push
imul
inc
loope
ss
scas
cmp
lods
shld
aam
jo
mov
lret
out
sti
nop
mov
cmp
push
nop
or
fsubl
dec
xor
sub
aas
mov
push
flds
mov
cwtl
dec
dec
out
jnp
inc
and
xchg
pop
or
rorb
mov
and
or
push
cs
fisubrl
push
insl
fwait
sbb
pop
subb
push
pop
sub
popa
or
lret
aam
sub
hlt
sbb
pop
mov
dec
xbegin
call
loop
stos
test
add
mov
lcall
jb
cmp
into
mov
and
rol
push
inc
stos
xchg
ret
inc
jne
lahf
out
lds
lds
popa
mov
sbb
mov
xor
mov
adc
addl
mov
inc
sub
sbb
cmpsb
bound
mov
xor
js
push
add
dec
in
out
leave
cmp
cmp
and
rclb
push
dec
push
pop
add
mov
daa
inc
jmp
cmp
out
addr16
push
loop
daa
or
mov
cltd
xor
scas
icebp
loopne
psubusb
rcll
cld
lods
fstps
out
imul
jl
add
push
cli
insb
fnsave
lret
mov
lret
xor
sahf
out
aas
repz
fildl
daa
xchg
std
jg
xchg
outsl
cmp
mov
int3
dec
in
cmp
fs
ret
outsl
pushf
inc
test
faddp
mov
lods
dec
sub
loop
pop
jmp
xor
jns
in
imul
jl
or
in
bswap
dec
pushl
adc
mov
test
push
into
icebp
dec
xchg
daa
or
test
sbb
adcl
test
xchg
pusha
pop
inc
xor
sub
clc
cmpsl
mov
imul
aad
cld
inc
or
mov
pop
pushf
push
jb
and
in
repz
aad
push
cld
xor
pop
out
mov
jmp
lret
jbe
mov
fcomp
sti
dec
cld
or
or
cs
jne
pop
dec
push
pushf
dec
imul
mov
leave
lock
sub
ljmp
rcrl
cli
xor
stc
aad
mov
xor
lahf
jp
loop
push
stc
inc
repnz
aam
xchg
cmc
repnz
push
or
mov
sahf
mov
mov
cltd
cmp
ret
jmp
mov
jo
nop
mov
pop
adc
add
and
mov
sub
dec
sbb
outsl
test
sbb
xchg
sbb
add
inc
lock
fcmove
adc
insb
ret
jl
insb
setno
jmp
pushf
scas
gs
imul
sub
mov
mov
shrb
jno
fisubs
dec
adc
icebp
and
rolb
mov
push
icebp
mull
fmull
and
arpl
push
sti
lods
mov
movsb
push
and
mov
ss
adc
test
pop
add
mov
sub
lcall
subb
imul
push
jmp
rcll
idivb
push
sbb
pop
pop
stos
lret
clc
scas
mov
inc
adc
and
loope
sahf
stos
cmp
jae
and
pop
pop
mov
sbb
lea
cmp
aam
sub
repnz
inc
mov
jns
pop
adc
xor
rorl
cli
mov
repz
lcall
adc
loopne
xor
movsl
jbe
mov
cmc
int
les
hlt
fadds
add
mov
dec
xor
movsb
add
mov
cmp
mov
pushf
dec
xor
xor
lahf
shrl
ljmp
sub
daa
notb
inc
loope
stos
push
outsb
add
or
xor
xchg
pop
push
nop
mov
je
xchg
mov
aas
or
push
addr16
jl
pop
adc
sbb
loopne
mov
repz
jp
pop
cmc
sub
in
stos
inc
jnp
nop
ret
inc
inc
push
add
jmp
inc
cmp
sahf
inc
mov
sbb
data16
cmp
subl
popf
push
inc
cmp
mov
test
lods
outsl
dec
dec
jl,pn
gs
jae
hlt
sub
jbe
bound
imul
dec
es
int
xor
cmp
mov
xor
cmp
sti
lock
mov
popf
mov
fildll
leave
loop
pop
mov
arpl
jne
ret
jbe
xchg
adc
ret
cmp
scas
dec
int3
jg
jbe
jno
lret
or
mov
jmp
jb
bound
movsb
or
movsb
les
or
in
xchg
js
bound
ret
xor
lahf
xorb
or
test
iret
mov
cmp
loopne
cmp
int
ret
jle
sub
jmp
icebp
repnz
lcall
pop
sub
fwait
pop
inc
pop
mov
adc
cmpsl
loop
mov
push
roll
mov
lret
mov
sub
lods
push
stos
cmp
lcall
xchg
lcall
and
leave
setnp
dec
jg
pop
pop
inc
hlt
jle
sub
cmc
pop
pushl
sbb
lcall
mov
test
cmc
je
push
adc
jmp
inc
outsb
lea
jae
fcmove
roll
in
loope
les
fs
xchg
in
idiv
push
pop
das
adc
in
or
mov
dec
xchg
adc
sub
and
das
call
push
imul
lret
inc
pop
jmp
in
loope
out
popf
rolb
xor
dec
jmp
dec
cmp
push
lret
in
stos
push
cmpb
xor
jl
test
je
push
sahf
or
mov
mov
mov
or
sbb
push
in
movsl
sub
mov
and
mov
mov
das
popf
xor
repz
cmp
jns
adc
loopne
repnz
in
pusha
jno
mov
xor
dec
jecxz
push
rorb
mov
mov
push
add
fdivs
into
sub
mov
loopne
shll
push
fcoms
dec
cmpsb
sub
fists
inc
pushf
mov
mov
cmc
xchg
jo
loope
xchg
mov
cmp
dec
mov
les
orl
pop
cli
pop
sub
mov
push
loopne
adc
xchg
rorl
stc
aas
cmp
out
cmp
fisttps
or
jmp
push
loop
mov
xor
pusha
imul
inc
mov
xchg
out
pop
out
cld
fwait
movsl
push
loop
jmp
xor
sub
jo
cwtl
sbb
cmp
pusha
ror
xchg
mov
sarl
int3
sti
or
data16
jmp
imul
cmpsl
mov
add
hlt
xor
pushf
dec
mov
add
mov
insb
data16
fwait
icebp
loopne
out
cmp
mov
imul
aad
and
cmpsl
or
movsl
mov
mov
data16
cld
push
mov
aaa
cmp
mov
mov
mov
push
mov
daa
cmp
adc
push
adc
inc
push
push
loop
and
mov
cmpsl
outsb
jmp
hlt
push
push
adc
sti
mov
inc
pop
push
stc
mov
cmpl
push
int
mov
in
lods
sahf
jb
dec
mov
or
mov
movsb
cltd
daa
ljmp
scas
je
xchg
add
cmp
pop
dec
and
dec
scas
jne
test
pop
cmp
dec
sub
push
or
sub
xchg
mov
pop
xchg
fs
aad
out
sbb
fdivr
adc
dec
scas
xchg
inc
subb
lret
xor
daa
and
or
sub
in
aas
mov
rolb
inc
sbb
or
inc
mov
cmpsb
iret
fsubs
or
cmp
gs
ja
lea
outsl
cs
cmp
inc
das
test
cmp
loopne
test
inc
mov
mov
loope
pop
lret
cmp
inc
xor
push
and
sbb
cmp
xor
push
daa
inc
push
imul
push
push
pop
jmp
sbb
data16
pop
xor
lret
lock
popf
imul
adc
adc
out
lret
fsubp
out
cmc
jp
loopne
adc
inc
inc
sub
adc
les
mov
cmpsl
push
xchg
testl
popf
pushf
sbb
pop
fdivrl
add
xchg
mov
hlt
jg
in
scas
mov
popf
test
sti
push
loop
movsl
sarl
sub
stos
repnz
and
push
mov
loope
mov
lcall
mov
cmp
jnp
test
test
mov
jne
idivl
stos
cld
das
ret
or
jb
inc
sti
inc
repz
inc
xlat
imul
sub
add
mov
sbb
in
sub
xor
adc
es
out
shrb
sub
ret
inc
sti
push
cli
push
in
pop
add
or
mov
clc
push
cmp
xchg
loope
pop
stos
mov
das
mov
aaa
ss
sub
mov
jns
mov
jbe
mov
sbb
xchg
dec
cli
std
add
jmp
cwtl
dec
push
mov
pop
push
xor
jns
lods
and
push
icebp
add
lret
add
sbb
mov
int3
sub
fistl
sub
fldcw
lcall
stos
popf
inc
push
stos
mov
loope
shr
lret
ret
xchg
sbb
fisubrl
int
imul
mov
mov
cmp
mov
movl
xchg
xchg
mov
pop
out
mov
jns
loopne
mov
and
xorl
cmpsb
in
mov
mov
mov
ret
jmp
in
cmpsb
xchg
ret
inc
push
js
out
pop
jmp
mov
dec
sahf
cmpsb
or
testb
push
push
in
xor
test
mov
sub
popa
test
dec
xchg
sbb
mov
pop
loope
fwait
jecxz
lcall
andb
int3
inc
out
adc
in
sbb
je
adcb
loopne
out
pop
out
cltd
add
lcall
and
aaa
jl
fstp
adc
aas
test
test
pop
test
mov
xchg
je
sbb
mov
out
arpl
fistps
mov
adc
aaa
js
insb
imul
mov
lcall
int3
lahf
dec
js
add
loope
pop
mov
les
push
dec
adc
dec
add
pop
in
fnstsw
inc
xchg
push
lods
xor
pop
outsb
mov
lret
adc
adc
pop
sub
negb
jo
fdivs
jae
enter
nop
jnp
mov
mov
cli
loop
mov
cmpsl
mov
jno
dec
sub
push
fsubrl
testl
enter
in
mov
aad
mov
jecxz
lret
mov
repnz
repnz
ss
sbb
jge
mov
aad
insb
xor
stos
outsb
mov
mov
pop
dec
hlt
addb
cmp
sub
or
jg
and
test
call
subb
ja
mov
xchg
xor
mov
cmpsb
mov
inc
nop
jg
add
inc
sti
inc
mov
mov
mov
jge
aad
mov
xchg
les
xchg
mov
mov
mov
imul
in
dec
pop
or
lcall
sahf
add
sub
repnz
shr
dec
mov
jbe
sbb
aas
xor
mov
xor
inc
or
mov
mov
cmp
lret
pop
es
les
lret
ja
repz
stos
ss
out
fcompl
ret
ret
xchg
out
dec
xchg
in
mov
addr16
dec
in
clc
cmc
out
call
mov
mov
mov
out
push
nop
pop
mov
mov
movsl
pop
xor
inc
ret
test
add
addr16
mov
cmp
add
xor
test
fcmovbe
int3
das
cmpsb
push
mov
sub
dec
out
rcrl
lds
cmp
addr16
cmp
lods
jb
lds
aad
mov
dec
out
push
pop
mov
aaa
lret
pop
cli
rol
aad
fld
pop
push
bound
xchg
fwait
pop
lcall
lea
clc
hlt
cmp
cld
ja
aad
mov
shlb
repnz
or
lea
dec
fneni(8087
push
int
add
cs
pop
enter
jns
arpl
dec
push
pop
jge
xchg
mov
push
or
adc
adc
aaa
xchg
dec
and
mov
sub
inc
inc
ss
or
xchg
ret
in
in
cmp
stos
ret
out
scas
iret
addr16
rclb
sahf
mov
call
and
and
mov
mov
push
pop
cmp
sub
cs
sub
daa
out
jns
mov
aam
inc
add
ret
inc
decl
mov
loopne
rol
jmp
daa
rorb
js
insl
ja
popf
mov
cmp
in
push
xor
cmpsl
pop
xor
jne
stos
sub
inc
mov
sbb
dec
icebp
mov
inc
mov
add
in
cs
dec
jae
mov
repnz
pusha
cwtl
dec
mov
dec
xlat
mov
ds
cmp
mov
cmp
mov
jo
cs
sbb
orb
fdiv
dec
push
mov
inc
inc
or
jecxz
fadds
sub
inc
scas
dec
repnz
mov
pop
jne
fidivl
imul
out
or
mov
add
and
out
aam
sbb
popf
out
mov
lock
imul
inc
jno
adc
pop
push
and
insb
insb
add
in
inc
xchg
popf
push
pop
mov
loop
jo
jno
test
cmp
insl
add
xchg
mov
cmp
jl
pop
inc
or
mov
inc
aaa
adc
mov
popa
push
sbb
fs
mov
scas
dec
icebp
add
sbb
mov
sub
mov
mov
fmuls
push
mov
xchg
loop
add
insl
jae
aam
jle
stc
enter
hlt
jecxz
ret
nopl
stos
movups
faddl
aaa
inc
jle
fcompl
dec
aam
sbb
das
ror
jbe
cltd
rep
mov
and
add
jno
adc
rclb
adc
inc
adcb
cwtl
jl
nop
outsl
sub
rclb
aas
bound
adc
int3
pop
js
sahf
fwait
push
subl
xorb
in
pop
scas
jle
clc
xchg
jmp
lret
sbbb
mov
cmp
and
cmp
mov
les
xorl
push
std
adc
data16
and
push
cmp
lcall
cmp
jecxz
les
ss
inc
inc
addb
push
pop
cmp
push
or
mov
ret
add
mov
lock
and
push
lahf
xlat
cli
dec
add
std
fistpl
or
pop
or
idivb
push
lret
add
fildl
shlb
xchg
enter
push
adc
lret
xorl
stos
mov
mov
and
mov
or
in
xchg
or
or
jg
outsl
pushf
xor
jmp
jg
jp
mov
mov
and
fimull
pop
xchg
cmpsb
sub
jae
in
dec
imul
or
stc
mov
mov
xchg
xchg
push
sub
lahf
mov
scas
loop
dec
lret
test
jecxz
pop
cmp
pop
jp
aaa
sbb
es
cmp
nop
stos
rorb
add
push
xor
sbb
jno
nop
and
cmp
mov
inc
es
outsb
ffreep
icebp
inc
adc
cmp
stos
outsb
xor
into
int
es
shrb
in
int
lahf
ss
jno
out
test
repz
scas
movsl
cmp
stos
dec
cmp
mov
xchg
lods
shlb
push
cmp
nop
sub
mov
fs
inc
pop
sbb
jb
fcomps
rcll
pusha
dec
mov
ss
cs
add
push
dec
adc
cli
js
dec
inc
mov
lods
cmpsl
fcoml
jnp
mov
dec
loope
jns
inc
mov
out
add
movsb
lds
xchg
jns
stc
inc
jmp
lcall
push
daa
add
fs
mov
dec
pop
negb
pop
push
andl
dec
pop
repnz
cmp
pop
into
add
fists
andl
xor
add
hlt
out
sbb
xchg
sub
mov
cmpsl
data16
jae
scas
push
push
mov
inc
test
push
add
dec
xchg
push
jno
and
dec
mov
dec
lea
icebp
mov
jne
in
adcb
mov
dec
adc
fwait
mov
sbb
push
xchg
lods
fmull
push
mov
lcall
mov
jmp
cmp
fcmovnu
rcrl
ss
inc
in
sbb
lock
mov
push
add
lret
push
cld
in
mov
mov
mov
adc
jo
cmp
gs
lea
push
and
xchg
sti
icebp
pop
sbb
shl
cmp
mov
jne
scas
push
lock
cmc
jbe
xlat
leave
add
push
inc
xchg
sti
lcall
int3
outsl
mov
xchg
xor
and
jo
push
ret
rcrl
push
sub
lock
mov
xchg
out
or
mov
mov
pusha
fsubrl
inc
nop
shrl
je
mov
sub
sub
inc
das
out
popa
sub
jp
in
stos
mov
sbb
sbb
test
ljmp
fistl
jns
shrl
aas
fistl
cmc
or
ljmp
mov
xchg
xor
in
mov
lock
or
jge
sbb
out
stos
aas
sarb
add
int3
cli
imul
loopne
inc
sarl
push
xchg
jns
clc
decl
and
sbb
enter
ror
in
jmp
jbe
mov
int3
dec
adc
jge
popf
mov
jo
xchg
mov
or
or
mov
lahf
popa
aaa
stc
sbb
jo
dec
addr16
int
inc
mov
punpckhbw
icebp
dec
mov
jns
ret
stos
fistpll
xchg
jmp
lock
or
xchg
add
cli
push
inc
xor
call
xor
jmp
aas
jo
mov
push
imul
fldenv
jp
mov
test
adc
insb
test
jnp
xor
inc
xchg
and
mov
adc
outsl
cmpsl
xor
iret
repz
outsl
cmpsb
mov
mov
vmwrite
test
pop
mov
test
push
pop
inc
jne
pop
jmp
mov
mov
lea
cld
and
lret
subl
arpl
movsb
stc
lods
jno
jns
pop
push
out
pop
ljmp
das
dec
out
jne
bound
mov
fsub
test
cltd
sbb
push
lret
stos
and
gs
int
sbb
mov
jecxz
js
fistpll
cmc
push
repz
popf
and
xchg
mov
adc
les
repnz
xchg
popa
jmp
hlt
test
inc
adc
mov
adc
shlb
movsb
sbbl
sub
aas
scas
jne
call
testb
push
mov
in
mov
mov
xchg
int
fisttpl
imul
hlt
xlat
leave
inc
out
xorb
outsb
add
dec
out
fwait
push
sub
cmp
xor
xor
xchg
mov
sub
outsl
out
mov
cmp
lcall
cmpsl
sbb
xor
push
mov
rcr
flds
stos
push
imulb
and
or
add
xor
mov
cmc
sbb
loopw
outsb
and
ss
shlb
lea
dec
fstpl
pop
inc
lods
jnp
clc
push
add
aas
pop
movsb
cld
jnp
lahf
xor
sub
out
jmp
fisttpl
add
inc
clc
cmp
mov
jl
xchg
fprem1
xor
cmp
cli
bound
sbb
xchg
cli
mov
repnz
mov
cmp
pop
and
adc
outsl
call
adc
mov
xor
push
xor
daa
dec
idivb
mov
mov
xor
cmp
mov
push
in
clc
outsb
mov
add
cmp
xor
sub
mov
pop
fistpl
xlat
std
ljmp
js
sub
add
jmp
gs
add
jmp
in
adcb
fmuls
test
imul
pop
push
sub
fcmovnb
mov
dec
inc
sbbb
xor
mov
les
dec
insb
clc
or
pop
xchg
mov
movsl
cmp
add
pusha
sbb
sub
xchg
cli
jecxz
or
ja
fwait
dec
fidivs
jl
jns
dec
sbb
cmpsl
ds
shlb
and
imul
lods
sub
mov
mov
jl
shll
mov
push
push
shl
fs
push
daa
and
or
add
jne
sbb
pusha
lods
sub
out
or
mov
push
cmp
or
mov
sub
cltd
lods
xor
xor
cmp
popa
xchg
sub
and
test
mov
lcall
fistpl
aaa
push
fdivs
sub
push
stc
aas
jno
add
dec
lock
ljmp
repz
mov
xchg
mov
in
xor
hlt
dec
and
mov
xor
cmp
lds
pop
lret
pop
xchg
cmc
xchg
sub
shlb
ss
jae
out
icebp
lea
and
outsb
xchg
xchg
cltd
inc
xchg
ljmp
jns
cmp
cwtl
dec
or
dec
mov
or
jnp
inc
fidivs
clc
mov
cmp
shl
and
data16
xor
or
cs
inc
xor
mov
pop
cwtl
add
loope
xchg
jno
mov
test
xchg
dec
imul
iret
and
inc
add
push
pusha
push
inc
mov
sbbl
movsb
mov
push
in
jle
scas
mov
sbbb
adc
dec
in
mov
mov
addr16
or
sti
cmpsl
xchg
mov
pop
shlb
xchg
or
mov
ret
adc
or
jnp
cmp
pop
mov
jno
shlb
leave
or
dec
mov
jbe
dec
loop
push
ret
lds
mov
rclb
loope
js
lea
dec
cmc
inc
inc
aam
mov
inc
push
cmpsb
jmp
jle
mov
int3
aad
and
int3
adcb
cmp
insl
push
or
das
adc
add
pusha
adc
and
push
addl
mov
loop
push
into
xchg
popa
push
aad
mov
mov
jecxz
mov
sbb
push
dec
pop
lea
adc
mov
or
sub
stos
enter
out
dec
xchg
subb
adc
adc
mov
dec
cmp
adc
pop
jne
xor
add
or
xchg
sub
stos
fcmovnbe
sub
shlb
adc
adc
sub
push
pop
cmp
cmpsb
mov
iret
icebp
and
xchg
sub
inc
xchg
lods
js
jnp
ficompl
test
dec
cmc
fldenv
pop
sbbl
dec
pop
sbb
cltd
lret
subb
adc
mov
or
dec
cmp
add
mov
lock
inc
rol
xchg
xchg
lcall
cmp
into
push
sbb
fwait
imul
cltd
adc
iret
sub
icebp
xchg
cwtl
or
sti
add
jp
add
mov
sub
add
cmc
scas
or
or
subl
mov
adc
xchg
lret
push
dec
sahf
mov
xchg
jg
int3
cmc
sahf
ror
pop
test
or
pop
or
pop
and
adc
scas
pop
rorl
in
jo
mov
inc
jle
sbb
xor
jle
movsb
jmp
stos
sub
lods
xor
cmp
test
push
pop
xor
inc
cwtl
adc
add
rcr
scas
test
loope
pop
fs
les
mov
cli
shl
dec
mov
and
and
mov
test
xor
sbb
mov
pushf
stc
sub
xchg
std
pop
dec
cmpsb
pop
push
int
sbb
call
xchg
das
push
int
out
test
testl
push
xchg
mov
enter
ljmp
ja
test
fs
int3
test
mov
xchg
pusha
mov
nop
popf
xor
cmp
lods
xor
push
lods
mov
adc
mov
jge
je
mov
or
sbb
fs
iret
nopl
pop
inc
push
lods
mov
mov
daa
out
mov
repnz
fsubrp
ds
mov
or
mov
dec
and
jg
xchg
in
push
sub
das
push
inc
mov
mov
jne
mov
loopne
push
mov
pop
pop
sbb
sbb
mov
call
pop
into
mov
sub
mov
pop
adc
les
dec
sub
test
incb
sti
lcall
push
jbe
je
mov
adc
xor
push
inc
test
repnz
xchg
outsl
cltd
in
inc
lock
xor
sub
sbb
mov
xchg
xor
push
xchg
dec
push
xor
sub
mov
mov
cli
cmp
and
std
jle
rclb
pop
mov
pop
inc
or
cli
into
or
push
pop
daa
rcll
inc
dec
jmp
sub
jmp
adc
add
in
sub
mov
add
jge
icebp
or
xor
push
out
loopne
xor
mov
xchg
fs
call
jb
popa
sbb
fstps
mov
leave
cmp
mov
push
sbb
add
add
mov
mov
jo
inc
sbb
movl
ret
in
inc
outsb
gs
jg
mov
sbb
cld
movsl
push
fucomp
sub
add
sbbl
xchg
or
call
xlat
in
sbb
xchg
outsb
sub
stos
test
das
jle
dec
sub
xor
imul
mov
aas
loope
mov
pop
jg
mov
inc
in
xchg
or
aas
cmp
push
mov
sbb
stc
add
iret
adc
or
cmpsl
jae
jg
pop
ror
push
test
nop
dec
lods
cmp
inc
mov
xchg
push
xchg
rcrb
std
jg
and
shl
sbb
mov
jbe
xchg
idiv
es
add
inc
data16
int
sub
cs
mov
xor
push
mov
std
out
push
inc
sbb
leave
inc
testl
cwtl
jmp
test
push
push
sub
xchg
mov
into
xor
mov
sbbl
jp
mov
mov
fadds
jns
loope
into
cmp
push
jp
nop
inc
into
xor
mov
aam
jnp
pop
xchg
daa
jle
in
push
scas
mov
xor
inc
jb
in
movsl
push
add
add
adc
js
inc
jmp
je
repnz
mov
inc
sub
dec
or
mov
das
out
cmp
push
xchg
movsb
orb
rorb
je
sti
add
test
inc
inc
in
rcll
fstps
fisubrl
inc
ror
out
cmp
mov
repz
jge
sbb
cltd
fcmovu
lahf
sbb
pop
outsb
scas
jp
adc
jmp
jo
mov
lods
out
lock
fs
jb
pusha
in
and
into
insl
push
push
iret
lret
sbb
test
inc
fcoms
pop
sbb
aaa
cmp
ja
jo
movsl
out
sbb
mov
enter
int3
rclb
fisubl
cmpsl
outsb
push
loope
adc
push
insb
adc
jbe
add
outsb
ret
push
or
neg
loopne
push
inc
mov
icebp
dec
jmp
loopne
imul
std
in
xchg
pop
movsb
aaa
jns
and
mov
outsb
sbb
fisubrl
rclb
outsl
roll
sub
movsb
sahf
lret
push
ret
pusha
jns
jbe
xchg
mov
and
mov
lcall
inc
jno
loopne
xor
cmp
mov
mov
push
jmp
aad
clc
dec
addr16
test
scas
dec
data16
test
and
jp
mov
mov
fbld
jle
aas
mov
lock
adc
popf
sub
std
xor
mov
outsl
mov
sahf
sub
xlat
in
adc
mov
das
or
sbb
repz
popa
cmpsl
or
add
lcall
fldenv
push
pop
stos
scas
adc
ds
jle
and
add
and
pop
ret
xchg
scas
mov
repnz
cmp
add
jne
inc
ljmp
sbb
lea
call
cmp
stc
mov
xchg
sbb
or
mov
fiadds
lods
neg
xorl
inc
icebp
movsb
jl
movsb
ds
fsubs
lcall
je
jae
push
ret
xchg
xor
lahf
fiadds
insl
lret
mov
ss
cmpb
fwait
neg
inc
xchg
fidivs
pop
out
push
daa
cmp
call
repnz
mov
bound
and
mov
das
jecxz
mov
mov
sbb
or
and
xchg
lods
cmp
mov
aam
mov
xlat
sub
sbb
mov
bound
ror
fstl
dec
pop
jne
mov
int3
sub
dec
or
jne
int3
loop
test
mov
push
sahf
andb
mov
jp
sub
jae
lods
lea
or
test
movsl
fidivrs
cmp
popf
or
jbe
or
adc
cs
int
fs
mov
ds
fxch
mov
pop
push
jno
cmp
push
jne
ret
mov
outsl
or
jnp
pop
notl
and
mov
jae
mov
fidivrl
insl
inc
outsl
sbb
ds
sbb
ja
and
jnp
xor
pop
pop
push
mov
dec
clc
popl
int
cmp
lds
jb
push
insl
pop
lods
and
xchg
das
jbe
in
adc
call
inc
pushf
pop
out
aas
inc
mov
mov
lea
adc
pop
mov
mov
dec
pusha
mov
stc
sbb
pop
or
xchg
mov
push
xor
adc
push
inc
fdivrp
movsl
push
arpl
shlb
insl
lds
test
mov
leave
or
es
dec
add
int
cmpsl
or
lret
sbb
aad
ss
jmp
dec
je
xchg
cmp
cli
jge
call
add
sub
push
cmp
nop
jl
leave
ja
aas
jno
pusha
call
insb
mov
inc
fsin
pop
jg
imulb
incl
ret
sbb
fidivl
inc
or
test
sub
inc
shr
xchg
das
inc
loope
mov
sub
xchg
pop
or
inc
xchg
lock
mov
mov
popl
xchg
sahf
fidivs
xchg
lock
cld
lods
xor
mov
jo
or
push
into
cld
cmc
movsb
lcall
fstl
nop
les
test
iret
sahf
ja
xchg
test
lea
inc
add
js
pop
or
lcall
jl
frstor
scas
imul
lret
aam
daa
dec
xchg
push
mov
sbb
sti
cmpsl
clc
call
movsl
aas
sub
and
mov
in
inc
lret
cmp
ss
imul
pop
iret
aad
popa
ja
inc
stos
mov
push
sub
orb
push
cs
fnstsw
fnstenv
lret
fwait
movsb
jbe
ret
adc
jnp
out
mov
mov
push
enter
dec
rcll
nop
sub
fucomip
jns
std
dec
in
call
pop
push
daa
dec
mov
jnp
adc
pop
dec
adc
or
inc
lahf
call
out
insl
imul
inc
xchg
dec
popf
push
xor
fs
mov
test
cli
outsl
ficoms
pushf
pushf
mov
insl
sub
fucomip
fldcw
repnz
lock
movsl
sub
add
pop
das
fnstsw
xor
adc
orl
stos
sahf
aaa
jae
or
dec
push
mov
xchg
stc
je
jb
xor
addl
mov
and
lock
pop
lcall
and
and
nop
fidivs
xchg
movsb
adc
cmp
ss
add
xor
push
pop
mov
cmp
xchg
fucom
into
int3
jns
idiv
push
and
mulb
and
mov
cmp
insl
subb
sbb
or
sbb
aaa
or
not
ficompl
out
add
pop
sbbb
outsb
pop
jmp
cmp
test
xchg
push
xor
imul
repz
jno
in
test
movsl
rcrl
leave
scas
xchg
push
fcompl
xor
push
jg
enter
inc
xlat
cmp
add
hlt
dec
fcompl
roll
dec
mov
incl
mov
inc
mov
mov
dec
loope
fidivrl
mov
cmp
mov
int
push
mov
sbb
out
jle
add
xchg
sub
xchg
mov
mov
mov
sub
jge
jbe
mov
pusha
scas
mov
das
stos
repz
pop
sbb
hlt
dec
out
cmpsl
cmp
in
pop
xchg
ret
xor
mov
stos
mov
mov
sub
push
leave
pushl
and
fptan
xchg
jae
lret
ja
sbb
test
out
adcl
jnp
mov
jbe
push
shrb
cs
jne
or
loop
mov
lods
fbld
xchg
and
adc
sbb
lods
mov
daa
jb
insl
popf
dec
push
aaa
icebp
or
rolb
or
push
push
push
das
jmp
mov
push
dec
clc
jmp
inc
cmp
cmp
sbbb
cltd
mov
xlat
cmp
push
test
mov
mov
jecxz
sub
inc
into
jns
mov
sbb
push
jns
mov
xchg
pop
xchg
cli
je
xchg
pop
stc
mulb
dec
dec
dec
int3
sbb
mov
lods
leave
inc
sbb
fldt
pop
or
arpl
push
jae
inc
mov
insl
or
mov
sbb
mov
push
pop
push
dec
enter
dec
ljmp
inc
add
mov
insb
inc
icebp
aaa
fbld
test
inc
out
cmpsb
push
fdivrs
inc
dec
sbb
dec
sbbl
cmpsl
ja
arpl
popa
sbbb
pop
mov
mov
jne
insl
jb
cmp
inc
repz
test
and
fistps
call
dec
xorl
jno
xor
cmpb
divl
fsubrs
sub
xchg
dec
mov
lea
sub
aad
inc
sahf
mov
sub
call
les
cmpsb
adc
pop
mov
fcmovnb
sub
and
imul
xor
and
jp
stos
jle
xchg
mov
bound
xorb
and
or
popf
mov
or
push
dec
cmc
movsl
push
iret
sbb
cmp
push
lret
mov
out
mov
push
hlt
mull
inc
in
dec
shl
cltd
or
jmp
in
or
movsl
dec
sub
and
cwtl
negb
aam
xorb
pushf
pushf
push
mov
mov
pop
dec
fildl
fwait
jge
ja
imul
pusha
cld
pop
ret
adc
add
clc
test
lret
aam
je
mov
inc
movsb
data16
ds
in
mov
mov
loopne
lcall
mov
fs
mov
mov
and
pop
mov
jl
jo
in
mov
sbb
les
je
iret
xlat
adc
fmuls
loopne
enter
sub
cmp
and
or
ds
out
les
xor
fsts
xchg
sub
imul
addb
outsl
or
mov
cmp
scas
ret
in
xor
mov
push
and
out
sub
push
mov
mov
add
daa
or
syscall
add
xor
add
clc
mov
inc
inc
add
jecxz
lods
lock
push
out
cmp
sar
mov
push
dec
enter
pop
lea
popf
adc
or
adc
lods
sbbl
jecxz
mov
sub
fisttpll
dec
lds
cmp
cmp
push
jne
dec
cmc
test
adc
fiaddl
sub
push
lret
pusha
repz
inc
push
je
adc
and
dec
xor
sbb
lods
movsb
call
fadds
pop
fimuls
rcll
leave
xchg
mov
lret
ds
mov
ret
stos
lcall
mov
xchg
out
inc
fbld
jae
mov
pop
outsl
lock
mov
jmp
arpl
dec
pop
lds
cmp
sub
sub
xlat
inc
push
ss
adc
movsl
push
push
nop
imul
fcmovne
in
fdivl
xor
shl
les
imul
fcompl
stos
sbb
cmp
dec
rolb
jae
les
xor
pop
xchg
out
push
sbb
outsb
and
cmp
sti
pop
mov
inc
pop
mov
ja
clc
mov
stos
test
or
fnstsw
mov
scas
aaa
iret
pop
push
inc
xorl
sti
mov
xchg
mov
jae
out
orl
dec
cwtl
in
cmp
cmpsb
dec
ret
jg
add
adc
movsb
fnstenv
and
xor
je
add
mov
jp
sbb
lahf
cltd
nop
xchg
or
push
movsb
mov
sbb
addr16
or
scas
clc
mov
loop
insl
fadd
and
aas
and
insb
cli
dec
dec
dec
jb
inc
and
fdivs
shlb
sub
push
push
test
lods
cmpsl
xchg
shll
pop
js
jb
jp
imul
push
pop
or
cltd
lret
push
jnp
inc
and
mulb
sbb
mov
nop
xlat
lahf
cmp
je
inc
sbb
pop
insl
outsb
mov
cld
sub
jge
fwait
sti
lea
sbb
fimull
pop
or
sti
repnz
jnp
push
xchg
cmpsb
inc
push
fiaddl
push
pop
imul
loopne
lock
out
enter
push
addr16
movsl
inc
cld
and
fldcw
add
cmc
insb
inc
frstor
mov
js
enter
test
stos
aas
inc
mov
in
push
aas
addb
cmp
aam
lahf
mov
sub
popa
clc
das
inc
xchg
pop
mov
mov
insl
adc
xchg
cmp
test
rcrb
and
lret
xchg
andl
and
push
cmp
mov
xorb
dec
lds
mov
cmp
or
and
and
cmp
jp,pt
negb
lock
fisttpl
sbb
shl
or
lea
push
push
mov
loope
ljmp
negb
gs
and
movsb
jo
xchg
push
xchg
lret
outsb
mov
les
push
adc
mov
push
call
imul
in
call
inc
inc
pop
lock
jp
jo
aam
in
fidivl
jb
mov
repnz
call
das
lock
jl
lret
xor
adc
gs
or
sub
xchg
push
jmp
push
loop
cmpsl
push
sbb
push
xchg
test
lea
lods
imul
adc
std
in
jae
inc
ds
gs
push
mov
lret
push
lods
repz
dec
mov
pop
fnstcw
mov
out
push
adc
insl
hlt
lods
fwait
mov
inc
xor
cs
ja
sub
cmpsl
clc
fidivrl
sbb
repz
movsl
sbb
andb
mov
adc
mov
loopne
inc
push
lahf
popa
mov
in
pop
ss
push
xor
add
cmp
fsubrp
and
test
sub
ret
cli
push
fwait
cmp
pop
jg
icebp
jne
xchg
in
jg
cmp
dec
aad
bound
jno
pushf
fidivs
cwtl
mov
cmpsl
hlt
mov
mov
imul
xor
pop
inc
ljmp
enter
xchg
jp
or
inc
je
std
das
loope
jecxz
push
mov
mov
fstpt
push
test
xchg
xchg
into
lahf
xor
jle
or
daa
in
xor
scas
adc
pop
sub
repz
std
int3
cwtl
mov
int
mov
sub
push
test
ret
clc
inc
scas
repnz
mov
xchg
jge
mov
jno
outsl
outsb
lret
pushf
pop
jnp
call
push
sti
xchg
jb
in
clc
xchg
insb
repnz
lret
lret
testl
sysexit
in
jmp
fisubrl
jp
iret
sbb
jbe
decb
jb
jle
out
rorb
or
inc
test
out
inc
sub
dec
loop
insl
and
mov
adcb
outsl
jo
frstor
jb
jbe
daa
shll
rcrb
jecxz
out
lods
aad
es
mov
cld
inc
jmp
cmpsb
mov
push
ficompl
addr16
and
jno
lock
pop
ficoms
cmpsl
out
mov
adc
pop
subb
xlat
scas
stos
mov
xor
in
mov
inc
inc
lret
notl
rolb
cmpsl
push
ret
add
mov
sarl
lods
inc
leave
aad
data16
aad
je
jnp
inc
xchg
dec
mov
mov
ja
loopne
pop
les
mov
mov
popa
out
imul
pop
test
es
testb
cmp
pop
fstpl
imul
adc
test
pop
xchg
dec
dec
xchg
lock
cmp
lret
inc
mov
mov
mov
jp
or
popa
cmc
ja
in
in
popf
scas
jbe
mov
xor
inc
iret
inc
mov
inc
scas
add
loope
std
pop
push
pop
push
mov
popf
cmp
adc
lahf
movsb
fidivrs
adc
repnz
inc
jo
mov
add
fstl
mov
lea
lods
cmp
sbb
dec
cmp
mov
push
xchg
pop
inc
in
jp
lahf
cmp
into
or
lock
test
mov
shll
frstor
pusha
fnsave
pusha
add
addw
enter
out
fistpll
ja
ja
cmpsl
xchg
xor
push
clc
out
push
sbb
jg
ljmp
adc
xchg
mov
es
lods
pushf
in
add
mov
ja
in
stos
stos
inc
mov
xor
loope
mov
bnd
sub
adc
test
sbb
sbb
mov
sbb
cwtl
ds
push
mov
ja
aam
inc
or
cli
sub
xchg
jo
mov
repz
mov
lahf
dec
rcr
or
test
lods
mov
xchg
daa
cmp
add
out
addl
sbb
ss
ljmp
mov
in
or
jnp
xchg
enter
scas
pop
pop
push
cs
jecxz
popf
fnsave
xor
sbb
insl
dec
mov
pop
or
imul
xchg
jae
pop
scas
xchg
hlt
rorb
cmp
pop
adc
inc
icebp
mov
adcl
pusha
add
sbb
pop
in
add
jns
in
pop
imul
xchg
cmp
lods
daa
lahf
cli
and
out
mov
into
sub
mov
dec
jbe
xor
pusha
stos
mov
sarl
inc
outsl
nop
pop
mov
sbb
dec
pop
rcrl
mov
sysexit
dec
rcrb
cs
in
mov
xchg
ss
or
loopne
std
and
xor
int3
das
arpl
pop
stc
mov
out
adc
test
pop
aas
push
in
inc
pop
jae
xchg
outsb
popf
push
mov
jnp
xor
mov
add
scas
adc
es
or
in
fsubrl
adc
adc
lcall
popa
xchg
or
leave
adc
jle
adc
lods
dec
hlt
and
std
or
pop
pop
mov
add
pop
bound
mov
cmp
cmpsl
rolb
pop
orb
int3
push
add
sti
aad
into
in
jne
cld
xor
xor
adc
mov
jmp
cmp
sub
ljmp
cmp
mov
pop
mov
test
dec
adc
cmp
mov
jmp
jo
lea
jns
and
xchg
enter
xchg
mov
cmp
xchg
xchg
xor
xchg
out
xlat
jne
addr16
cmp
imul
stos
dec
jge
lcall
and
popf
rorl
dec
dec
cwtl
inc
cmpsb
out
jg
sbb
dec
sarl
lea
jl
push
xchg
fsubrs
cld
out
lcall
xor
je
fistl
add
out
mov
shrb
xchg
or
mov
movsl
test
andb
sbb
mov
daa
fdivs
push
pusha
jno
sbb
int
lahf
jb
loop
cmp
sbb
pop
mov
daa
ss
xchg
xlat
add
aam
adc
daa
push
subb
xchg
fadds
inc
push
pop
mov
xor
dec
pushw
loop
in
mov
enter
xchg
ja
in
inc
jo
sahf
repz
pop
lcall
or
jge
and
xchg
jne
push
fnstcw
leave
mov
insl
fwait
lock
xchg
push
add
scas
mov
aas
mov
mov
sbb
icebp
movsb
shrb
or
sti
shlb
mov
push
sar
cmc
repnz
loop
outsb
mov
outsl
loopne
cmpsb
insb
in
scas
push
dec
or
cltd
mov
xor
scas
cs
xor
dec
xchg
sbb
bnd
push
or
into
cmp
cmp
fld
cmp
jl
jo
enter
fwait
push
sub
in
outsb
fldenv
cwtl
sub
sub
mov
xchg
hlt
bound
leave
mov
notb
push
bound
push
jmp
jecxz
add
insb
call
mov
push
sub
bound
xchg
ficompl
or
jle
push
mov
dec
and
mov
inc
fyl2x
add
xlat
aaa
mov
jae
repnz
and
push
nop
mov
jecxz
xchg
adc
iret
mov
idivb
push
xchg
dec
mov
stos
sbb
push
mov
mov
ja
imul
add
vphsubdq
pop
xchg
pop
jnp
add
in
pop
xor
pop
jne
adc
jo
pop
mov
dec
sbb
xorl
xchg
add
push
adc
xchg
popf
add
mov
adc
mov
cmp
hlt
add
imul
pop
and
jns
popa
xchg
call
jbe
filds
divb
push
lcall
pop
jnp
dec
jl
pop
add
add
loope
push
push
sbb
and
inc
lcall
and
mov
insl
lea
das
xchg
pushf
sub
and
add
stos
mov
xchg
inc
and
into
jne
sti
jbe
pop
out
bnd
pop
daa
out
xchg
imul
mov
insl
jecxz
fistl
dec
clc
dec
in
inc
pop
adcb
dec
inc
mov
jle
lods
inc
mov
or
xor
jge
dec
cmp
ja
in
and
xor
outsl
les
fdivs
out
push
mov
and
movsl
call
push
das
and
std
movsb
add
push
jb
mov
jl
dec
stos
xor
and
sar
mov
push
aam
xchg
mov
xchg
icebp
sub
xchg
push
clc
push
sbb
out
movsb
ja
inc
push
out
test
xlat
sti
popf
xchg
sub
or
stos
rolb
stc
jl
mov
mov
mov
pminsw
add
cmpsb
mov
ret
pushf
imul
mov
and
jge
push
mov
dec
xchg
addl
mov
inc
xchg
push
lds
decb
aas
xor
and
cmpsl
cs
sbbl
mov
std
insl
shr
sub
mov
in
aam
xchg
cmp
in
mov
jnp
rcrb
inc
cmp
cmp
mov
mov
push
xchg
mov
loop
mov
enter
icebp
fmul
add
je
mov
dec
push
clc
and
fstpl
xchg
xor
and
or
test
sbb
lcall
lret
mov
lret
adc
es
push
mov
mov
pop
fs
lahf
pop
dec
xchg
cmpsb
inc
ds
or
bound
loope
adc
xor
and
xorb
push
cmpsl
imul
and
les
jecxz
cmp
div
hlt
repz
xchg
add
push
stc
xor
cmc
stc
sub
jbe
sbbb
mov
xchg
cmp
mov
aaa
loope
nop
or
add
imull
jo
bound
push
push
adc
xor
xor
test
xchg
mov
push
mov
in
scas
sahf
int
xchg
inc
enter
sub
and
shlb
cs
add
int3
fisubs
pop
mov
dec
sub
xor
push
mov
dec
dec
or
lret
out
xorl
mov
inc
add
sub
imul
jmp
test
lret
mov
pop
std
mov
sbb
adc
lea
push
outsb
pusha
loop
mov
insl
icebp
push
adc
pop
aad
and
mov
in
jnp
xor
and
je
aam
scas
lret
imulb
push
in
test
mov
notb
mov
mov
je
int
adc
dec
arpl
mov
test
xchg
inc
pop
xchg
sub
loope
cmp
add
fs
inc
mov
mov
outsb
fldl
cmp
cltd
mov
rcll
mov
xor
cs
es
mov
int
pop
push
sub
cmp
dec
inc
ljmp
pop
jle
clc
and
or
xor
in
push
mov
addps
and
ret
sahf
rolb
push
add
repnz
int3
mov
xor
push
pop
addl
in
push
pop
lret
sub
push
ljmp
push
lahf
sti
fbstp
pop
mov
jno
or
adc
and
mov
int
data16
push
in
jmp
sbb
ja
cmp
movsl
push
bnd
sbbl
sbb
pop
mov
jae
cs
dec
jnp
shlb
dec
aad
outsb
lods
sub
push
out
stos
push
out
and
out
cmpsb
dec
push
sbb
inc
jae
sub
add
lret
cmp
add
movsl
push
dec
and
les
lods
pop
std
cld
xor
roll
aad
jl
inc
dec
ss
fs
int3
sbb
std
jl
jne
push
aam
cltd
cmpsb
inc
sub
mov
mov
mov
lahf
inc
mov
aad
ficomps
repnz
jmp
jl
and
sub
mov
push
cwtl
xlat
lahf
add
inc
pop
sahf
jl
ret
push
add
mov
hlt
rorb
mov
mov
aas
xchg
cwtl
and
cwtl
fldcw
xlat
jbe
add
cmpsb
mov
mov
pop
dec
sub
push
dec
jb
dec
addb
in
or
andb
dec
sti
and
or
fsubrs
jecxz
add
stc
push
js
rcrb
neg
fisttpll
mov
xor
sbb
inc
scas
or
into
xor
andl
sbb
scas
stos
adc
cwtl
push
dec
sbb
ds
xor
ss
leave
lret
sbb
jns
dec
xchg
bound
fdivl
lea
dec
lret
dec
into
rcr
test
add
dec
push
xor
stos
arpl
jae
pop
pop
shl
xchg
je
xor
mov
jb
and
jmp
iret
pop
fldt
pop
adc
arpl
jge
dec
sbbl
into
repnz
xchg
jg
out
cmpsl
xorb
fsubs
mov
and
adc
imul
pop
sbb
imulb
and
mov
cmp
sub
cmp
jmp
push
mov
mov
shrb
cmp
cmc
xlat
and
and
bound
out
int
enter
je
mov
loop
jno
cmc
and
lret
ljmp
mov
sub
xor
in
pop
jns
adc
inc
inc
std
pushf
mov
lods
mov
sbb
sti
xor
or
lock
lods
hlt
into
push
jnp
xor
es
xchg
pop
lods
mov
imul
cmc
mov
scas
and
mov
imul
leave
add
dec
mov
jno
rcrl
imull
fimuls
lea
into
imul
mov
mov
mov
int3
sub
jb
daa
scas
fs
lods
out
cmpsb
loopne
aam
and
rcl
movsl
cmp
xor
ret
mov
inc
ss
movsw
mov
xchg
dec
cmp
mov
jo
jg
xchg
hlt
out
ret
and
jecxz
xor
incl
mov
aaa
mov
dec
mov
leave
bound
mov
xchg
push
data16
xchg
mov
pop
mov
mov
add
lcall
ret
loop
test
and
lret
adc
call
rorb
in
mov
push
call
das
jle
loope
cli
pop
or
cwtl
outsb
mov
pop
sub
xor
xor
out
lea
push
jmp
or
add
add
dec
inc
sbb
jbe
or
mov
mov
fistps
jg
int
jbe
rorl
mov
mov
push
cmp
rclb
xchg
loopnew
mov
or
adc
cmp
or
arpl
js
imul
sarl
jge
or
mov
mov
lock
sbb
mov
inc
cmp
add
addr16
stos
enter
out
inc
mov
js
iret
sti
fidivrl
mov
imul
pushf
inc
data16
test
int3
lods
bound
loopne
sub
stos
dec
loope
pop
enter
int3
mov
push
fcmovu
bound
mov
dec
sbb
or
fiaddl
dec
cmp
jecxz
push
je
aam
cmp
aam
jmp
imul
cmp
fistpl
pop
icebp
lret
movsb
cmp
mov
xchg
inc
and
xor
mov
in
xchg
mov
jno
lds
call
cltd
ljmp
cmpsb
xor
add
and
add
shl
sub
stc
mov
je
lcall
push
push
scas
push
push
push
or
bsr
ret
scas
call
pop
and
or
or
mov
lahf
int3
adc
sbb
imul
xor
movsb
insb
aad
setge
cmp
cli
lds
jp
pusha
mov
loop
mov
sbb
fsubrl
sbb
loope
test
mov
mov
iret
into
inc
dec
mov
sbb
mov
inc
push
add
mov
pop
fs
aaa
push
fistpll
sub
ja
in
push
data16
punpckhdq
jbe
pushf
ds
jo
and
dec
out
dec
enter
jmp
in
lcall
outsl
movsb
rcr
sbb
iret
inc
inc
ret
call
rcrl
loope
inc
lds
push
jne
xchg
jle
in
fisubs
pop
hlt
testb
rorl
testb
aas
sub
push
pop
rol
mov
xor
xlat
push
inc
xchg
inc
flds
dec
mov
std
dec
fs
pop
or
adc
push
movl
pop
loop
push
loopne
adc
das
jmp
jmp
sarb
incb
pop
lcall
and
sbb
popf
lret
ret
xchg
cmp
cwtl
data16
inc
and
shrl
shlb
inc
push
test
outsb
ss
stos
xor
dec
sti
xor
cwtl
pop
fcoml
push
push
adc
dec
loop
testb
inc
inc
add
jns
mov
adc
repnz
insl
lret
mov
mov
xchg
pusha
out
xchg
or
mov
enter
imul
aad
lea
pop
out
cmc
and
loope
push
xchg
aaa
sub
and
push
add
cmp
test
adc
int
pop
mov
and
mov
outsl
inc
popf
rorl
adcl
dec
int3
sub
sbb
sbbl
jbe
or
push
stc
stos
xor
pop
pop
test
xor
jg
jne
clc
xor
rorl
jge
pop
inc
jnp
pop
int3
insl
repnz
aaa
aas
xchg
dec
jg
mov
pop
xchg
adc
stos
adc
testb
out
testl
int3
cmp
sub
mov
inc
rolb
cs
sub
pop
shrb
or
pop
dec
cwtl
adc
roll
adc
mov
fstpl
pushl
mov
fldl
pushf
cmp
adc
dec
mov
sub
test
in
fwait
daa
add
outsb
fidivrs
or
xchg
pushf
adc
shlb
mov
rcll
mov
jg
cmp
sbb
scas
mov
adc
pop
mov
mov
in
jo
xlat
or
push
cltd
and
jo
and
push
paddd
mov
clc
scas
inc
inc
frstpm(287
lret
xor
mov
in
cmp
inc
ja
int3
arpl
and
inc
pop
adc
imul
mov
stos
rclb
int3
and
add
insl
add
fimuls
outsl
in
jb
fs
mov
push
loop
fbstp
insl
mov
or
cwtl
push
jg
jne
sahf
das
arpl
cmp
dec
mov
arpl
cmpb
push
fstpl
xchg
shll
lret
or
es
aas
mov
push
sarb
sub
jo
jecxz
lahf
push
pop
xchg
sub
sbb
loope
and
add
lret
add
fnsave
sbb
mov
mov
jns
mov
icebp
ds
jno
xchg
fmuls
cmp
stos
xchg
jb
push
test
xchg
mov
movsl
repz
lret
pop
xor
lahf
cmp
cmpsb
fld
loop
or
bound
push
testb
arpl
mov
gs
push
test
ret
cmpsl
subb
scas
jns
leave
nop
sbb
fs
xlat
mov
in
inc
rcrb
and
add
repnz
xchg
mov
xchg
xchg
mov
push
popf
test
and
mov
lahf
xchg
inc
fisttpl
ficompl
push
bnd
or
mov
push
sbb
mov
xchg
cld
mov
in
cmp
push
or
cmp
outsl
inc
jg
mov
lods
sub
mov
jne
fwait
sub
lahf
adc
out
pop
lcall
sub
inc
in
ja
ljmp
and
dec
popf
test
outsb
xor
and
jbe
loope
pop
mov
inc
popf
xchg
mov
xorl
sbb
das
mov
insl
jno
xlat
lock
xchg
test
jne
xor
ds
cmp
jb
pop
pusha
jno
cmc
add
pop
inc
pop
cmp
cmpl
pop
out
icebp
pusha
rcrb
movsb
mov
pop
cmp
push
lods
jle
stos
aad
xchg
fs
mov
int
fwait
push
xorb
movsl
in
xor
jo
aad
xchg
push
or
sbb
or
adc
add
test
cmpsl
mov
sub
inc
mov
or
mov
jl
lcall
loop
scas
sbb
stc
inc
orl
in
shlb
fwait
add
sbb
push
mov
sahf
enter
add
inc
xchg
mov
movb
pusha
cmp
sarb
es
pop
fcmove
cwtl
cmp
xlat
test
push
xchg
push
cli
mov
fsubl
xchg
ret
add
or
je
in
mov
sti
imul
lods
sub
xchg
xchg
test
xchg
inc
scas
jle
mov
daa
js
jb
cmp
clc
adc
or
test
push
or
sahf
jmp
ja
shrl
cltd
pusha
les
cli
xchg
add
pushf
bound
je
call
mov
sub
stc
sbb
cld
inc
cmpsl
repz
jge
call
cmp
push
jb
imul
rorb
int3
mov
daa
pop
mov
inc
xor
or
sub
sub
je
sub
ficompl
stc
pusha
mov
mov
mov
iret
ss
lds
scas
pop
xchg
mov
mov
aad
jno
cltd
loopne
shll
cmc
dec
clc
dec
movsl
push
dec
dec
sub
xor
mov
js
rorb
mov
lcall
lods
mov
out
mov
es
lret
frstor
xchg
addb
sub
cli
std
imul
mov
cs
xor
xchg
push
nop
into
out
mov
push
lods
lret
cmc
mov
or
cltd
pop
fdivl
lea
les
mov
sar
or
mov
pop
das
aaa
or
js
cmc
xchg
dec
jl,pn
clc
push
cmpsb
rcrl
adc
sbb
inc
jge
dec
repnz
and
pop
scas
leave
rcll
and
int3
ljmp
push
lahf
adc
mov
aaa
jle
mov
xchg
je
pop
push
xchg
in
mov
fcoml
rcrl
fldl
imul
das
js
imul
insl
mov
popa
push
push
loop
bound
jg
sbbb
call
fwait
stos
dec
or
mov
xchg
xlat
add
pop
mov
shll
fistl
add
clc
outsl
movsb
mov
mov
js
sub
mov
into
mov
or
rorl
call
and
mov
cmp
fisttpl
lea
mov
xchg
das
je
stos
bound
sub
fidivl
and
hlt
lea
inc
fsubl
les
mov
out
sub
gs
shl
mov
out
out
and
sbb
ja
insb
fldt
pusha
mov
add
scas
dec
loope
xchg
dec
fnsave
inc
pop
and
xchg
fnstsw
cmp
push
mov
pop
cmp
sahf
divl
inc
cli
jb
lods
xor
xor
jnp
mov
sbb
ror
cld
inc
cmp
mov
pushf
sbbb
pop
inc
mov
andb
je
out
in
stc
dec
setb
cld
sti
movsb
dec
xor
lds
jne
pop
int
jle
xor
hlt
xlat
sbb
fsubrs
bound
je
dec
mov
nop
sbbb
jne
in
mov
in
mov
pop
push
push
outsb
pushf
add
movsl
stc
cs
ret
sbb
sub
int3
pushl
dec
mov
fadds
push
add
xchg
mov
stos
repz
sti
jecxz,pn
shl
xchg
shll
inc
cld
mov
inc
test
rcr
into
mov
sti
mov
int3
xor
test
in
in
js
lock
js
cli
je
aaa
or
mov
es
lret
adc
mov
push
mov
mov
out
out
mov
sub
popl
mov
scas
cwtl
mov
push
push
xchg
fstl
jns
mov
or
add
fsts
into
jecxz
dec
jne
js
inc
cwtl
cmp
call
loope
les
mov
outsl
xor
xchg
sahf
inc
ret
repnz
test
cmpsl
popa
adc
sahf
add
es
add
or
inc
add
add
or
dec
pop
rcll
cmovo
mov
cmpsl
mov
ja
and
loope
mov
neg
ds
inc
push
xchg
cmp
test
or
andb
adc
mov
pop
adcb
ficoms
mov
mov
dec
mov
stos
add
jmp
inc
mov
xchg
jnp
dec
push
enter
test
in
xor
pop
xor
ret
ljmp
in
les
jo
xchg
ffreep
out
stc
dec
aaa
inc
push
push
jl
jg
cmp
push
pop
clc
pop
ja
sbbl
je
dec
dec
int
stos
adcl
mov
sub
pop
mov
inc
scas
fidivl
loop
bound
repnz
cmp
dec
push
xor
incl
pushf
adc
sbb
push
shrb
rcrb
push
xchg
sbb
scas
sar
sbb
outsl
int
add
pop
mov
add
stos
jg
gs
rolb
mov
mov
out
flds
jne
pop
adc
lret
hlt
rol
insb
fdivs
sbb
push
test
mov
dec
inc
pop
sub
or
vpshlw
jge
into
xchg
clc
inc
xchg
mov
push
sbbl
mov
in
mov
and
bound
mov
lods
sub
test
test
shll
xchg
movsb
int
pop
add
mov
or
lea
shlb
xor
idivl
addr16
decl
fistps
scas
movsl
addr16
cmc
into
repz
dec
shll
adcl
sahf
cmc
or
add
mov
mov
pop
sti
cli
push
mov
inc
add
pop
jo
shr
mov
dec
andl
jle
adc
and
aas
xor
faddp
jns
sub
and
int
outsl
scas
pop
add
xor
out
fldcw
or
jne
cmp
fs
mov
pop
or
adcl
rcrb
mov
or
fcoml
hlt
pop
push
testb
in
popa
sub
sti
push
repnz
xchg
mov
push
pop
into
jne
push
in
dec
lea
and
sar
xchg
adc
adcl
int3
repz
push
dec
push
fs
pop
push
test
ret
cmp
push
mov
bound
stc
pop
dec
movsl
dec
lret
mov
movsb
ljmp
mov
mov
mov
mov
outsb
mov
call
push
dec
ds
es
sbb
sarl
sbb
mov
daa
xchg
popa
aaa
push
adc
icebp
sbb
push
dec
int
jb
or
xchg
shr
adc
mov
and
mov
hlt
shl
push
and
or
jp
xchg
lods
sbb
icebp
cli
push
iret
sbb
popa
pop
mov
les
js
sbb
fldpi
imul
fisubs
push
insl
add
add
hlt
fs
outsl
addl
repnz
push
rcr
pop
inc
xor
sub
xchg
insb
aas
push
fmull
gs
and
push
dec
not
insl
addb
aad
add
lcall
insl
rcrb
jns
add
push
inc
mov
mov
xchg
push
fsubrl
adc
imul
mov
add
inc
sub
scas
jno
shr
or
mov
cmp
jnp
cmp
sar
push
pop
roll
aaa
ret
out
into
mov
push
dec
in
std
je
cltd
jbe
jo
sbb
lret
cmpsb
or
sub
imul
push
jns
xchg
int
inc
jo
rorb
ret
outsb
fmuls
inc
mov
cmp
je
je
adc
xchg
int3
pop
fdivs
xchg
mov
ja
xor
sub
mov
scas
scas
sbb
sti
sub
push
divb
pop
pop
enter
es
xchg
clc
loop
aaa
pop
push
sbb
mov
jecxz
cmp
xor
ficoml
nop
daa
mov
shl
add
aam
jno
and
push
lds
sbb
cmp
dec
jae
leave
push
push
leave
popa
sarb
das
popl
xor
pop
mov
jl
loope
mov
ja
jl
sub
popa
cmc
pop
adc
lahf
shl
sbbl
jp
fstl
shlb
push
mov
mov
push
lret
dec
sub
insl
add
in
sbb
push
notl
mov
inc
mov
fnsetpm(287
sbb
xchg
sub
out
mov
jae
lock
fsubl
test
jno
sbb
lea
mov
inc
xchg
in
jo
pop
imul
dec
clc
cmp
loopne
add
jmp
and
and
aam
fldenv
mov
loopne
cmpsb
inc
shlb
sub
adc
scas
out
mov
mov
ss
sti
cmpl
nop
push
mov
pop
mov
mov
rolb
jno
push
adc
add
pop
lret
and
xor
mov
insl
adc
ret
and
stos
mov
lahf
push
cmp
dec
lods
push
jecxz
sbb
sbb
fisubrs
inc
popf
cmp
aas
push
xor
test
dec
push
jp
shrb
and
jmp
lods
adc
cmovne
push
mov
cmp
aam
in
jno
xor
movsl
add
push
mov
sbb
or
mov
sub
fstps
jae
xchg
cli
aam
sub
sbb
push
rcrl
fcompl
aas
xor
mov
adc
add
out
mov
adc
mov
std
fs
push
jbe
ja
push
or
bound
or
dec
jg
sub
cltd
jo
int3
push
push
std
movsl
inc
or
inc
mov
fsqrt
dec
dec
jo
dec
and
fnstenv
fld
shrb
fcompl
int
movb
cli
sub
not
bound
icebp
jns
xchg
pop
mov
sti
movsl
pop
aas
fimuls
cmpsb
ja
mov
jmp
popf
fwait
addr16
mov
xorb
aad
push
inc
adc
jbe
mov
sahf
addl
push
and
or
add
cmp
out
sti
and
mov
aam
jbe
mov
push
lods
mov
loope
sbb
adc
mov
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
rorl
adc
xor
mov
mov
dec
bound
push
mov
adc
les
cwtl
pop
ljmp
dec
sub
cmp
add
mov
or
mov
sub
jp
push
pop
cmpsl
adc
fldenv
dec
sbb
push
pop
mov
dec
fistps
or
das
push
lds
mov
popa
in
faddl
dec
shll
cs
rcll
insb
xlat
jp
add
sub
mov
in
inc
insb
jg
adc
shll
popa
int
mov
cld
push
push
sbb
pop
push
jne
int3
imul
scas
jns
fisubrs
jbe
call
or
xchg
aad
std
out
xchg
movsl
xlat
adc
insb
jp
sbb
push
xor
fstpt
push
insl
fisubrs
shl
int
dec
mov
push
cs
mov
enter
int
inc
sbbb
rcl
mov
nop
rolb
xor
sti
fsts
lea
push
out
xchg
scas
mov
fidivl
add
xchg
cmp
lahf
xchg
in
mov
pop
dec
jecxz
pop
rclb
test
jecxz
pop
hlt
push
cwtl
adc
jnp
mov
add
fsubrp
nop
pop
xchg
popf
lds
mov
loopne
and
sbbb
mov
jl
sahf
adc
vpsadbw
cmpsl
in
pop
lock
inc
lahf
jae
dec
sbb
jp
sbb
push
cmp
push
push
in
jno
movsb
rcrl
lea
jnp
push
mov
test
add
test
pop
dec
pop
imul
xor
pop
adc
adc
cmp
push
repz
add
mov
fiaddl
cmp
mov
jp
adc
cmp
in
pusha
xlat
jle
cs
jbe
jns
data16
mov
push
pop
fidivrs
mov
pop
stos
mov
and
mov
fcmovnb
mov
scas
sub
adc
pop
fwait
mov
mov
pop
insl
mov
pop
divb
iret
insb
inc
outsb
push
pushf
mov
call
and
test
mov
pop
aaa
stos
push
pop
dec
jp
mov
pop
dec
test
inc
iret
fs
inc
mov
jo
pop
cmp
iret
clc
aas
and
mov
cmp
inc
inc
iret
cmpl
push
sbb
xlat
mov
fidivl
add
repz
das
jle
sbb
icebp
pop
jp
xchg
test
inc
aad
xchg
aaa
out
push
adc
xlat
inc
mov
rcll
xchg
mov
dec
out
fwait
adc
out
insl
or
or
pop
push
mov
sbb
push
lds
mov
popf
imul
sub
and
xchg
out
aaa
add
lahf
dec
in
xchg
ja
cmp
dec
fnstcw
bound
out
jnp
xchg
into
sub
mov
xchg
adcb
lret
cmpsl
sub
cmp
inc
das
inc
jg
mov
push
ja
inc
mov
sub
xor
add
lds
inc
imul
adc
mov
push
or
mov
fnsave
xor
add
push
sahf
leave
cmc
movsl
enter
push
sbb
pushf
mov
test
dec
dec
fs
mov
pop
and
loopne
scas
scas
test
iret
shr
or
out
out
xor
fmull
cmpsb
sub
add
int
out
or
fbstp
cmpsb
stc
imul
cmp
sub
test
adc
inc
mov
ljmp
fisubrl
rcrb
or
call
es
xchg
or
hlt
mov
push
push
jo
imull
hlt
pop
xchg
in
mov
cmp
push
andb
mov
push
stos
mov
xchg
es
mov
mov
mov
mov
cmp
mov
inc
mov
ret
pop
notl
filds
jns
sti
into
add
addr16
jno
int3
xor
and
loop
inc
jae
jl
sti
insl
leave
cmp
lret
in
lods
rorl
and
mov
push
or
addl
and
cli
add
mov
pop
sub
jmp
lods
adc
in
cltd
js
cs
popf
outsl
jnp
mov
lods
sahf
movsl
mov
std
mov
imul
sahf
xacquire
in
hlt
xchg
lock
fdivl
mov
sahf
lcall
idivb
adc
test
mov
cmp
bswap
bound
mov
mov
rorb
xchg
adc
xor
cmp
aaa
xor
cs
bound
push
jle
imul
pop
dec
add
cmp
dec
xor
sub
mov
cmp
add
mov
pop
js
or
mov
adc
mov
ja
dec
in
xchg
adc
in
mov
push
in
rcrl
push
dec
lahf
inc
mov
cmp
xchg
call
pop
ja
dec
adc
jp
lods
out
jg
enter
lock
mov
loopne
cmp
add
sti
mov
dec
or
or
movsb
push
rcrb
mov
adc
dec
mov
sub
inc
xlat
sub
hlt
xchg
imul
push
popl
lret
icebp
sub
pusha
sbb
sub
repz
inc
inc
daa
adc
jns
int
test
fsubp
lds
cmp
sub
xchg
cltd
push
xor
xor
push
mov
das
psrlw
pop
xor
iret
out
add
add
out
jno
jp
fistps
into
xchg
fisubl
xchg
incl
popf
std
fdivs
sbb
cmp
xor
jge
inc
or
in
sub
jmp
mov
test
imul
insb
adc
inc
in
sbb
or
push
pop
js
lret
dec
sti
inc
out
loope
ljmp
mov
inc
imul
divl
cmp
inc
push
or
scas
mov
stos
aad
jno,pn
mov
cwtl
mov
adc
loop
shll
add
or
and
out
faddp
test
push
popf
aaa
pop
loope
iret
nop
iret
xchg
or
cmc
xchg
xor
push
aad
or
add
mov
movsl
add
or
pop
scas
push
mov
sub
sbb
cs
stos
sti
shrb
icebp
enter
push
loopne
je
pop
jmp
push
imul
repnz
jae
add
dec
cltd
aas
adcb
add
pop
pop
lret
daa
lods
inc
cmpsb
pop
aad
in
sti
gs
fistl
cmp
add
retw
or
cs
enter
arpl
add
pop
aas
mov
mov
xchg
add
xchg
adc
out
mov
pop
lcall
or
mov
aad
add
add
sahf
outsl
push
stos
out
jne
xlat
stos
add
out
xchg
sbb
dec
cmp
push
cwtl
xchg
mov
bound
pop
xchg
mov
out
cmp
les
jbe
cmpsl
sbb
inc
jae
inc
cmp
add
xor
push
imul
and
pop
cmc
aaa
inc
and
sbb
out
stos
or
aaa
arpl
sahf
jmp
adc
inc
and
daa
jl
pop
dec
and
sbb
or
lahf
pop
mov
add
adcl
repz
and
sbb
int3
aam
stos
sub
ja
lea
cmp
jl
pop
and
push
loopne
jge
daa
das
add
mov
divl
in
or
out
js
mov
pusha
push
push
in
jno
mov
cmp
shl
lret
hlt
cmp
movsb
daa
pop
loop
insb
out
push
and
jns
jmp
lahf
pop
push
aam
lea
fs
dec
icebp
mov
mov
cmp
roll
jae
push
push
aam
add
lret
es
rcll
jns
scas
xchg
int3
push
mov
push
lods
aam
xor
adc
mov
lahf
test
inc
iret
inc
xchg
xchg
mov
adc
add
fucomi
or
std
popa
cmp
and
in
xor
push
scas
mov
pusha
inc
stos
sbb
or
adc
ja
fisttpl
jno
je
popl
xchg
sbb
pop
dec
and
je
mov
xor
repz
dec
lods
hlt
mov
adc
fldenv
add
cwtl
pop
lods
pop
ret
jo
mov
push
stos
cmp
jge
cmp
cmp
adc
inc
mov
jb
out
rorb
pop
lret
fdivp
sub
hlt
xor
mulb
mov
adc
pusha
out
shlb
mov
gs
out
xor
and
das
es
push
or
sbb
ljmp
andb
or
movsb
and
push
outsl
daa
call
xchg
jl
mov
pop
repz
or
int
scas
sbb
inc
pop
inc
jae
xchg
pop
sbb
add
mov
sub
adc
out
sbb
add
std
xor
imul
scas
add
cmp
iret
add
jmp
cs
aad
lret
jne
pop
movsb
jle
icebp
jno
nop
cmpsl
jle
push
roll
lds
add
xchg
mov
cmpsl
mov
jge
add
leave
sub
jne
test
fistl
add
xchg
push
xchg
jo
adc
aam
aad
sbb
shr
cmp
repz
aas
dec
lahf
hlt
jp
push
aad
testb
jge
push
enter
pop
xchg
fadds
xchg
pop
add
push
aad
pop
popf
cmp
and
icebp
xchg
shr
out
cli
out
movsb
xchg
pop
adc
scas
insl
and
pop
jecxz
mov
div
pop
stos
or
push
or
data16
call
inc
pop
out
sbb
fnstsw
lcall
sbb
leave
cmp
cs
fadds
orb
dec
dec
push
mov
je
out
push
mov
or
aad
es
out
repz
inc
xchg
movsb
mov
sti
cmpsl
adc
mov
fs
mov
subl
data16
bound
imul
jb
dec
out
push
mov
fildll
cmpsb
pop
cltd
pop
push
rcll
imul
mov
push
out
cmp
xlat
sub
cmp
int
add
cmp
mov
dec
fistl
mov
jl
sbb
das
sbb
inc
inc
pop
sbb
call
lock
or
sarl
mov
call
cwtl
out
js
xchg
xorb
adc
jbe
pop
test
cli
dec
xchg
gs
adc
inc
xor
xchg
jae
in
add
fadd
cs
push
lds
sbb
repnz
ds
pop
or
and
mov
or
mov
xchg
mov
fiadds
sub
scas
or
out
sub
add
and
or
mov
in
inc
repnz
cmp
andb
dec
jl
ret
popf
popa
cmpsl
aas
ror
out
pop
jne
jne
or
outsb
sbb
jno
insb
xchg
scas
lcall
xchg
pusha
shll
clc
sub
or
fmuls
scas
mov
or
jno
sub
movsb
ljmp
shr
adc
sub
mov
movsl
mov
popa
xor
cwtl
sahf
add
mov
ds
jle
jmp
dec
addl
pop
ret
lock
ja
pop
loope
fidivl
dec
cwtl
cmp
call
ds
gs
sbb
jmp
adcl
insl
mov
lods
repnz
adc
mov
ja
inc
mov
push
and
xchg
xor
shlb
fsub
or
jmp
mov
call
testl
stc
push
push
inc
test
orl
xor
je
mov
dec
mov
test
rcrl
js
inc
jo
pop
fcomps
and
or
mul
imul
or
jb
arpl
adc
dec
cmp
mov
ret
loop
and
mov
ss
test
xor
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
insl
add
insl
