ret
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
push
roll
or
push
or
lock
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
fldl
add
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
add
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
inc
inc
add
add
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
add
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
add
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
add
or
test
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
add
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
inc
add
push
push
push
add
push
call
and
jne
inc
add
test
cld
lea
call
mov
cmp
je
inc
add
push
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
add
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
loopne
add
add
adc
pop
mov
call
inc
add
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
add
pushl
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
inc
add
add
jne
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
inc
add
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
enter
mov
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
jmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
add
mov
dec
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
add
push
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
add
add
add
clc
ss
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
pop
flds
push
push
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
inc
add
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
inc
add
call
lea
call
lea
call
cmp
jne
inc
add
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
rolb
or
add
or
add
or
add
lea
xor
add
test
inc
js
shlb
adc
pop
mov
mov
push
call
lea
add
movl
movb
add
add
and
mov
str
add
sbb
mov
add
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
add
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
add
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
inc
add
pop
mov
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
push
je
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
inc
ret
push
mov
cmpl
jne
xor
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
fldl
push
fstl
push
fldl
push
fstl
lea
fldl
mov
faddl
fldl
faddl
lea
fxch
push
mov
fstpl
fxch
push
fstl
push
fstpl
fxch
fstl
fstpl
fstpl
call
fldl
add
fstpl
xor
fldl
fstpl
jmp
fstp
fstp
fstp
fstp
mov
mov
lea
push
lea
push
push
call
fldl
fldl
add
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
fldl
fldl
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
add
cmp
jl
mov
fxch
fstl
pop
fxch
pop
fstl
pop
fxch
fsubp
fstpl
fsubrp
fstpl
mov
pop
ret
fstp
fldl
fstl
jmp
fstp
fldl
fstl
jmp
cmpl
jne
mov
test
je
incl
mov
test
mov
jne
ret
pushl
mov
movb
call
ret
push
mov
push
mov
test
jne
leave
ret
push
mov
mov
push
xor
cmp
movl
jne
mov
cmp
jne
push
push
add
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
pop
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
push
push
call
test
jne
mov
xor
mov
push
lea
mov
call
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
mov
push
push
push
call
test
js
mov
mov
mov
add
call
push
push
push
push
call
push
push
push
pushl
call
test
js
mov
mov
lea
push
push
call
test
lea
js
mov
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
jne
lea
call
lea
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
push
mov
mov
call
add
cmp
jl
jg
mov
cmp
jbe
mov
mov
mov
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
call
mov
mov
lea
push
push
push
mov
mov
call
add
je
sub
inc
and
pushl
pushl
pushl
pushl
pushl
push
lea
push
push
call
test
je
jmp
lea
call
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
push
xor
cmp
push
je
pushl
pushl
call
pushl
mov
pushl
call
mov
add
push
mov
call
pop
xor
pop
pop
pop
ret
mov
push
call
test
je
mov
push
call
test
je
mov
orl
jmp
push
mov
mov
test
je
mov
push
push
call
mov
test
je
andl
pushl
mov
call
pop
ret
push
lea
sub
mov
xor
mov
cmpl
mov
jge
test
push
push
je
andl
push
pop
mov
xchg
inc
add
lea
push
mov
mov
mov
push
movl
mov
movb
call
test
js
mov
andl
test
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
andl
lea
push
lea
lea
push
mov
movl
mov
mov
movb
mov
push
call
test
je
testb
jne
testb
jne
lea
call
testb
jne
testb
jne
xor
pop
pop
mov
xor
call
add
leave
ret
pushl
lea
call
pushl
mov
lahf
roll
or
add
call
pop
pop
lea
call
pushl
pushl
call
pop
xor
pop
inc
jmp
mov
add
call
ret
mov
test
je
mov
dec
push
mov
lea
mov
add
rorb
add
push
mov
mov
push
push
mov
call
test
pop
pop
jne
mov
andl
and
xor
or
jne
mov
pop
pop
ret
push
push
mov
test
je
cmp
jne
mov
and
or
jne
cmpl
jne
cmpl
je
pushl
mov
pushl
push
call
test
je
mov
pop
pop
ret
xor
jmp
mov
and
or
jne
mov
call
mov
jmp
mov
add
mov
call
mov
jmp
xor
jmp
push
mov
push
mov
push
push
push
lea
call
test
jne
mov
test
jne
mov
test
jne
mov
mov
mov
mov
lea
call
test
jne
test
jne
mov
mov
push
pushl
push
call
test
je
pop
pop
pop
pop
pop
ret
xor
jmp
pushl
mov
mov
call
mov
jmp
incl
jmp
pushl
mov
mov
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
xor
cmp
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
mov
mov
cmp
mov
jne
mov
test
je
test
js
test
jne
add
cmpl
jne
test
mov
mov
mov
mov
jne
mov
mov
mov
pop
pop
xor
pop
ret
mov
test
lea
je
test
js
xor
jmp
mov
test
je
test
js
xor
jmp
mov
jmp
mov
jmp
push
mov
call
cmp
jne
mov
xor
jmp
mov
jmp
cmpl
je
push
lea
mov
call
cmpl
je
mov
test
je
call
mov
mov
jmp
mov
test
je
mov
jmp
push
mov
mov
call
cmpl
je
mov
jmp
mov
mov
lea
push
push
call
mov
pop
movl
mov
pop
xor
pop
ret
mov
mov
lea
push
push
call
cmpl
jne
jmp
mov
cmp
jne
mov
cmp
je
xor
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
push
mov
push
xor
push
mov
push
lea
push
lea
push
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
add
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
test
je
test
jne
mov
lods
rolb
and
jne
mov
call
mov
mov
mov
cmp
movb
mov
mov
mov
jne
mov
xor
inc
and
call
test
je
xor
cmp
mov
call
insb
cmp
jne
lea
push
lea
push
sub
cmp
mov
mov
mov
jne
mov
mov
mov
push
call
cmp
je
mov
mov
mov
mov
call
mov
mov
cmpb
jne
mov
mov
mov
mov
inc
rolb
add
ret
lea
call
mov
cmp
jne
mov
mov
movsl
int
add
lea
push
push
call
cmp
mov
mov
jne
jmp
mov
mov
mov
mov
and
or
movl
jne
mov
call
mov
mov
push
mov
mov
mov
call
mov
push
push
call
mov
mov
add
push
lea
mov
mov
call
mov
add
cmp
mov
jne
mov
call
mov
pop
fadds
decl
decl
adc
into
call
mov
ljmp
and
mov
jmp
mov
mov
mov
push
call
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
mov
lea
call
mov
pop
leave
ret
int3
push
mov
mov
test
je
call
testb
movl
je
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
mov
mov
test
mov
jne
test
jne
movl
mov
test
jne
testb
je
push
call
add
mov
pop
pop
ret
lea
push
call
add
test
jne
push
call
add
jmp
push
mov
push
push
push
mov
mov
cmpl
jge
mov
andl
mov
push
call
mov
test
pop
jne
test
mov
jne
testb
jne
lea
mov
lea
call
xor
mov
call
andl
push
call
mov
test
pop
pop
pop
je
mov
push
push
call
lea
call
leave
ret
push
mov
push
mov
push
lea
push
lea
push
xor
push
pushl
mov
call
cmp
je
cmp
push
jne
xor
testb
je
mov
mov
mov
cmp
je
mov
mov
cmp
aaa
flds
cmp
jne
cmp
jne
cmp
jne
mov
pop
pop
leave
ret
lea
inc
mov
add
jne
mov
test
jns
push
mov
call
cmp
je
mov
jmp
mov
mov
mov
call
cmp
jbe
pushl
mov
pushl
mov
pushl
call
xor
jmp
xor
jmp
xor
inc
jmp
mov
cmpb
jne
push
call
test
je
pushl
mov
pushl
push
call
ret
mov
cmpb
jne
mov
push
lea
call
test
je
mov
lea
call
xor
ret
push
mov
lea
call
mov
test
mov
je
add
push
call
test
pop
jne
push
call
pop
pop
ret
push
mov
sub
pushl
andl
mov
lea
movl
call
mov
test
jne
push
push
mov
lea
cmpl
push
je
xor
call
lea
mov
test
je
mov
lea
pushl
push
call
xor
mov
call
xor
mov
call
mov
test
mov
je
mov
push
call
test
jne
mov
mov
call
mov
test
jne
lea
mov
test
je
mov
mov
orl
mov
mov
and
jne
orl
cmpl
je
test
jne
call
add
mov
andl
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
mov
cmpb
jne
mov
test
mov
jne
and
neg
sbb
and
push
call
call
mov
jmp
mov
mov
lea
call
pop
pop
xor
pop
leave
ret
push
mov
push
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
andl
push
mov
push
mov
test
mov
je
push
call
pop
movl
mov
call
test
je
xor
cmp
jne
cmp
je
mov
cmp
je
cmp
je
push
call
pop
xor
pop
pop
leave
ret
test
je
movzwl
mov
mov
mov
incw
movzwl
cmp
je
test
je
cmpl
je
push
call
pop
xor
inc
jmp
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
push
call
mov
mov
lea
mov
mov
mov
mov
lea
call
mov
lea
call
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
and
add
cli
sbb
add
dec
and
test
sbb
dec
sub
inc
and
add
add
cmpl
jne
mov
sub
add
push
pushl
call
pop
pop
xor
cmp
je
cmp
je
pushl
call
pop
mov
cmp
je
mov
push
call
lea
call
cmp
je
mov
test
jne
sub
push
push
push
push
call
add
push
imul
xlat
add
mov
jae
test
mov
testb
lahf
pop
in
push
add
aad
add
lods
add
add
add
mov
loope
add
in
hlt
pop
popl
push
push
lea
push
push
call
jae
add
mov
add
add
add
jl
roll
mov
jnp
push
mov
in
mov
div
addb
add
add
xchg
mov
xchg
movl
ret
add
into
addb
pop
push
push
push
push
call
jno
add
add
fwait
add
insb
mov
lret
test
subl
lods
in
lret
xlat
add
in
in
mov
add
add
nop
jo
mov
jmp
in
add
lcall
push
push
push
push
push
push
lea
push
lea
push
call
enter
add
pop
cmpsb
jo
push
imul
lods
add
ljmp
add
add
mov
mov
mov
xchg
mov
jge
push
jno
add
icebp
add
in
in
call
push
push
push
lea
push
push
push
push
lea
push
push
push
call
jp
rclb
pop
jmp
add
nop
out
lret
filds
add
cld
mov
add
push
cld
add
int
add
add
add
jmp
xorb
xchg
imul
add
gs
cmc
icebp
add
add
jno
mov
data16
lcall
add
or
add
xchg
mov
call
add
ljmp
hlt
aam
add
add
pop
add
lock
add
add
xchg
add
lea
scas
push
add
out
mov
add
push
add
sub
pop
jmp
push
push
push
push
call
mov
lcall
push
pop
test
add
mov
loope
jbe
add
rolb
add
sti
addl
iret
mov
icebp
add
cld
add
add
add
add
repnz
xchg
outsl
add
int3
add
add
ret
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
out
add
je
pusha
pop
add
add
cmp
shll
add
imul
jl
add
out
add
fsub
push
push
mov
out
stc
push
movb
add
add
xchg
add
mov
test
in
loopne
lcall
inc
hlt
mov
push
push
push
push
push
call
imul
mov
int
roll
enter
pop
pop
pusha
add
imul
fdivs
add
jno
mov
mov
add
jge
push
in
fadds
push
rolb
xchg
add
add
in
in
pop
add
push
push
push
push
lea
push
push
call
add
add
add
mov
add
add
insb
add
pop
add
add
add
add
add
filds
sub
pop
add
push
push
call
lods
add
lock
ljmp
lods
out
std
add
add
add
add
fisubrs
loop
lea
add
add
stos
add
jns
popf
mov
lcall
outsl
fcoms
jmp
cwtl
pusha
xlat
std
sub
pop
add
push
lea
push
push
call
add
add
add
jecxz
xchg
pop
mov
add
out
push
mov
cmpsl
movsl
xchg
xor
sti
add
add
add
add
pop
repnz
add
add
arpl
sub
pop
mov
push
push
push
call
mov
aam
std
push
aad
add
add
add
lods
les
enter
out
jecxz
add
add
mov
in
fstpl
add
mov
nop
mov
js
add
cmpsb
add
stos
cltd
add
stos
xchg
add
add
xor
push
lea
push
call
add
add
add
testb
add
add
add
loope
add
pop
mov
push
add
add
popa
add
movb
add
add
add
add
lret
xchg
int
mov
jmp
arpl
fldl
mov
add
lret
add
add
sub
pop
add
push
push
shl
rol
push
or
inc
add
add
add
sub
add
shr
shl
pop
ror
pop
push
push
push
lea
push
push
call
add
popf
add
xchg
add
add
testl
fst
mov
mov
imul
add
push
add
add
testb
pop
pushl
push
lea
push
lea
push
call
mov
popf
rolb
pusha
stos
test
add
pop
add
add
mov
add
jp
add
add
add
flds
mov
hlt
pop
call
push
push
push
push
push
push
call
add
in
addl
mov
std
ret
xchg
cld
add
loopne
fiadds
xchg
add
mov
add
add
add
call
into
add
mov
mov
mov
lcall
inc
lock
push
push
lea
push
push
lea
push
push
push
push
push
call
add
repnz
add
rolb
fnstenv
test
add
je
ljmp
test
pop
xchg
push
add
add
push
mov
mov
rolb
rol
shll
mov
xlat
pop
mov
jnp
jae
mov
pop
lds
lcall
push
lea
push
lea
push
push
push
call
pop
cmpsl
loope
std
aad
loope
cltd
add
movsb
lock
add
add
jge
out
add
add
data16
add
add
add
rolb
sti
sahf
add
mov
lret
add
xchg
add
out
scas
pop
sti
add
ret
pop
jge
add
lock
add
lcall
jne
push
lea
push
push
push
lea
push
call
add
add
pop
add
add
fcoml
add
sti
in
mov
out
in
bound
push
add
lods
mov
add
rcrb
sub
pop
pushl
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
xlat
mov
add
add
add
add
add
mov
pop
add
add
add
push
in
mov
add
lcall
xchg
daa
add
push
lea
push
lea
push
call
add
mov
jno
add
in
xchg
jo
add
add
incb
into
fcom
add
out
mov
add
add
mov
sahf
test
pusha
jmp
addl
ret
xchg
add
in
hlt
pop
pushl
push
lea
push
push
push
call
fucomi
lds
add
sahf
pop
mov
add
add
mov
sbbl
add
jl
add
filds
int
icebp
add
roll
add
mov
jns
jne
add
mov
add
add
lods
jecxz
lahf
add
std
lea
negl
lcall
pop
pushl
call
push
push
inc
sub
add
push
or
not
add
inc
lea
add
sub
rol
sub
pop
not
shr
shl
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
add
mov
enter
push
mov
nop
add
sti
push
jp
add
add
add
mov
mov
leave
cwtl
add
out
xchg
fisttpl
mov
add
xlat
xorb
add
insb
lods
add
fcomps
jne
push
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
call
rcll
jmp
add
pop
test
mulb
add
aam
push
add
add
lock
sub
pop
call
push
push
push
add
xor
push
sub
add
shl
rol
sub
add
not
add
pop
rol
pop
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
cmpsb
sbb
pop
add
stos
lret
add
add
ficoml
add
js
add
push
ret
pop
jo
mov
add
add
add
xchg
add
add
lea
jb
add
shlb
into
cld
stc
xchg
xchg
loope
sub
pop
push
push
lea
push
push
push
push
push
push
push
lea
push
call
hlt
cltd
ret
add
leave
add
pop
add
lret
add
lret
ja
mov
push
pop
mov
lea
mov
int
sti
flds
mov
add
fcmovnb
stos
loopne
lock
pop
add
push
pop
bound
xchg
add
into
push
add
jns
add
les
mov
pop
sub
pop
push
push
push
push
push
call
sbb
add
lods
add
add
pusha
push
js
add
add
cmc
push
xchg
add
pusha
xchg
call
pusha
jmp
test
add
add
lret
imul
add
mov
lcall
rclb
dec
sbb
call
add
jmp
imul
gs
ja
add
add
pop
xlat
outsl
add
add
cli
lock
pusha
add
add
add
cld
pop
out
add
pusha
fldenv
sub
pop
mov
push
push
lea
push
push
push
push
push
call
jecxz
jle
mov
add
add
int3
add
enter
mov
out
push
loope
add
bound
add
push
mov
call
add
add
add
out
icebp
add
add
stc
add
negl
add
lcall
push
push
push
push
push
call
addl
int
jae
test
fsubr
mov
mov
add
cld
sti
push
test
fsubr
shlb
xchg
xchg
jmp
add
add
cmc
add
jbe
jmp
pop
bound
add
xchg
in
pop
push
mov
push
lea
push
push
push
push
push
push
call
xchg
add
add
mov
add
add
test
mov
lret
add
add
add
pop
mov
add
add
in
in
add
push
lea
push
push
push
push
push
lea
push
lea
push
push
push
call
int
add
in
mov
mov
ret
lods
xchg
mov
add
jl
add
addl
fsubp
add
add
add
add
shlb
into
leave
add
add
fdivr
lcall
ret
add
add
push
push
push
push
push
push
push
call
add
add
sahf
add
shlb
rcrb
pop
add
add
add
mov
lcall
ret
or
add
cmp
push
add
add
add
add
push
add
into
mov
stos
gs
fiaddl
incb
mov
add
cld
add
add
pop
icebp
ret
lret
lock
in
xlat
test
les
mov
scas
add
mov
mov
iret
mov
mov
add
add
clc
pop
mov
xor
push
push
push
push
call
add
mov
sahf
filds
shl
add
add
subb
ljmp
in
xchg
jno
add
rolb
add
ret
push
add
jl
repnz
mov
add
add
rolb
xchg
mov
add
mov
sub
pop
add
push
lea
push
lea
push
push
call
pop
add
lock
fadd
aad
arpl
js
add
add
pop
add
xchg
add
ret
add
data16
add
add
add
add
jmp
add
testl
mov
movb
lock
push
mov
xor
push
lea
push
call
add
fcmovnu
add
add
clc
add
hlt
add
push
jo
repnz
jecxz
push
add
call
add
add
cmpsb
sub
pop
add
push
push
lea
push
push
push
push
push
call
cltd
imul
add
mov
add
xchg
mov
cld
push
push
push
mov
push
in
add
mov
pop
add
mov
mov
add
addl
mov
leave
addr16
xchg
push
add
add
add
add
add
scas
aam
cmc
push
add
add
add
lcall
mov
xor
push
lea
push
push
call
pop
cmpsl
add
fildl
mov
pop
add
xchg
fldl
shl
mov
mov
andb
jne
je
add
add
jle
fninit
in
add
add
mov
add
leave
cmpsl
mov
in
hlt
lcall
mov
xor
push
lea
push
push
call
cwtl
jmp
incb
shr
xlat
add
mov
add
mov
add
add
add
in
add
add
mov
add
lcall
enter
movsl
insl
notb
imul
sub
ljmp
dec
clc
leave
push
push
push
call
push
bnd
add
add
movsl
push
sti
cmpsl
fcomps
add
add
add
test
push
test
add
push
mov
add
addb
mov
aad
add
outsl
ljmp
jmp
xlat
jo
mov
insb
add
pusha
add
lcall
rep
push
push
call
add
lds
add
add
int3
cli
scas
fadd
jge
push
in
add
jbe
add
push
add
lock
add
add
movsl
xchg
xchg
add
test
push
pushf
test
add
jle
je
push
fwait
add
jns
sub
pop
pop
mov
push
push
push
push
push
lea
push
push
push
push
call
imul
mov
lea
les
add
js
mov
add
xchg
out
lods
mov
jmp
add
lcall
pop
in
add
push
push
lea
push
lea
push
push
push
push
push
push
call
pushf
add
mov
loope
add
add
mov
xchg
add
xchg
out
sarb
add
add
add
int3
add
ljmp
mov
fs
pop
add
push
push
push
push
push
push
push
call
mov
push
shll
pop
jbe
mov
fildl
movl
add
mov
bound
xchg
in
pushf
std
add
jns
cwtl
push
pop
pop
jno
push
add
sub
pop
mov
xor
push
push
push
lea
push
push
push
push
push
push
push
call
sahf
sti
add
icebp
xlat
fcomp
stc
mov
pop
add
andw
aam
imull
in
mov
icebp
fcoms
add
add
pop
lret
add
shr
add
cmc
add
addr16
lods
fisubrs
xlat
add
add
add
add
cmc
std
in
movsl
popa
add
in
fcomps
push
and
out
int3
iret
iret
push
lea
push
push
lea
push
lea
push
call
lods
popf
xchg
clc
mov
add
or
cwtl
aam
aad
add
add
clc
outsl
add
add
jmp
notb
out
add
movsb
jmp
add
jle
out
pushf
pop
mov
add
add
add
mov
add
sub
pop
xor
push
lea
push
push
push
push
push
push
push
call
incb
add
call
add
bound
cmpsl
lods
add
add
jno
loope
add
in
jbe
add
cmc
mov
add
aad
add
cld
mov
mov
mov
add
mov
add
out
add
add
push
push
push
push
push
call
out
xchg
hlt
jno
into
add
out
cwtl
push
movsb
xchg
add
add
lret
add
push
stos
xchg
jmp
orl
add
mov
in
in
lcall
dec
sub
int3
iret
iret
push
push
lea
push
lea
push
push
push
push
push
call
pushf
mov
insb
xchg
testl
pushf
add
jmp
call
iret
in
mov
push
mov
add
out
into
add
add
mov
add
pop
add
add
fildl
xchg
mov
pop
add
add
in
loopne
xor
push
push
push
push
push
push
push
push
push
push
call
add
add
movsl
add
int3
pop
repnz
pop
into
add
add
pop
callw
add
add
in
xchg
add
xchg
aam
add
fisubs
xchg
push
enter
add
cli
xchg
add
add
mov
xchg
xchg
add
outsl
icebp
lret
js
into
add
clc
sub
pop
add
push
push
push
push
push
push
lea
push
push
call
add
mov
push
in
add
add
pop
xchg
rcr
lock
repnz
xchg
popa
movsb
testb
lods
jmp
cld
jo
cwtl
mov
aad
fs
push
add
push
push
push
push
push
push
push
lea
push
push
push
call
add
scas
lret
push
push
lock
add
mov
add
rol
jns
out
mov
aad
mov
divb
push
push
scas
lds
in
add
add
add
cli
aad
add
sub
pop
add
mov
push
push
not
push
and
add
rol
dec
not
shr
sub
sub
rol
shr
pop
lea
not
inc
pop
push
sub
pop
pushl
push
ror
add
rol
pop
call
push
push
push
add
ror
add
add
push
push
pop
add
shr
ror
sub
sub
lea
pop
inc
rol
add
pop
push
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
add
popf
ja
add
nop
lea
pop
mov
add
add
add
fbld
mov
add
out
xchg
add
add
add
add
test
mov
mulb
add
mov
jno
add
pop
add
lcall
push
lea
push
push
lea
push
push
push
call
lret
add
add
data16
add
test
jp
test
pop
js
mov
add
add
int
xchg
andl
sti
ljmp
pop
push
push
lea
push
push
push
push
push
push
call
jle
mov
mov
add
add
add
add
jno
add
test
sti
lret
mov
mov
rolb
jnp
ljmp
push
ret
jecxz
loopne
je
push
fisubl
mov
stos
data16
add
pusha
xchg
rclb
xlat
pop
mov
push
push
dec
rol
shr
pop
push
push
not
not
shr
not
pop
mov
add
push
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
add
faddl
roll
xchg
test
add
add
int3
lcall
addb
mov
test
ja
movsl
loopne
xlat
and
add
add
in
lock
std
mov
movsb
push
aad
sub
pop
add
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
pop
add
add
push
add
add
lea
add
bound
push
add
add
add
lret
xlat
arpl
add
int3
add
js
cmpsb
jle
add
sub
pop
add
mov
push
push
lea
push
push
push
lea
push
push
call
filds
out
imul
add
jo
push
test
add
rolb
add
add
pop
add
clc
mov
fiaddl
movsb
mov
cwtl
pop
jns
jbe
add
mov
jmp
test
mov
in
call
push
lea
push
lea
push
push
push
push
push
call
pop
jle
mov
jl
add
add
std
bound
xchg
add
mov
add
push
xchg
add
mov
ljmp
mov
lcall
les
add
pop
add
push
push
sub
pop
mov
push
push
push
lea
push
push
push
push
push
call
pop
in
test
add
imul
push
add
add
imul
stos
add
push
aad
add
mov
stos
add
popa
popf
add
xchg
pop
stc
lods
mov
sar
movb
add
call
scas
add
add
push
push
push
lea
push
push
push
lea
push
push
push
call
jns
arpl
push
mov
add
push
add
xchg
movsl
jecxz
js
mov
push
lods
cli
fwait
add
rolb
js
add
add
movsl
lcall
add
scas
in
int3
mov
push
add
fs
add
jb
add
lcall
les
sub
shr
xor
lea
pop
add
push
push
push
lea
push
lea
push
push
push
push
push
call
xchg
mov
in
add
push
push
in
fs
add
popf
add
add
mov
clc
out
cmc
mov
mov
add
add
test
xchg
scas
out
fwait
les
mov
les
aad
filds
fadds
add
je
add
add
filds
jge
pop
test
faddl
sub
pop
pop
push
rol
pop
mov
xor
push
push
call
int
mov
mov
add
add
mov
imul
pop
arpl
add
add
int3
add
add
stos
jb
push
leave
arpl
add
add
fdivs
push
add
mov
fwait
lods
mov
add
add
cmpsl
xchg
sub
pop
rep
push
push
push
push
call
mov
mov
add
add
add
mov
push
jo
in
fsubs
clc
push
addr16
out
add
out
jnp
xchg
subl
fildl
dec
and
icebp
out
int3
iret
iret
push
add
pop
or
je
push
sub
add
add
pop
mov
push
push
lea
push
push
push
push
push
push
push
lea
push
push
call
fidivl
xchg
push
add
add
mov
mov
lock
lcall
mul
in
sub
pop
xor
push
lea
push
lea
push
push
push
call
add
mov
lea
rolb
add
xchg
pop
les
add
add
arpl
add
push
in
add
add
lahf
jnp
shll
jmp
fildl
imul
add
test
ret
testl
add
mov
into
stos
leave
lods
sub
pop
add
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
jp
mov
push
add
add
movsb
add
hlt
add
add
bound
hlt
add
push
jp
je
arpl
imul
pop
jge
add
add
std
pop
pop
jno
popa
ja
out
add
add
mov
add
mov
in
loopne
lcall
push
sbb
int3
iret
iret
push
push
lea
push
push
push
push
lea
push
call
add
add
mov
cld
jmp
test
push
pop
out
add
imul
jle
js
jno
shr
xchg
sub
pop
xor
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
int3
fsts
insb
mov
jns
add
xchg
pop
xchg
arpl
mov
add
loopne
add
add
jle
data16
mov
mov
xchg
add
mov
divb
clc
fsts
xorb
add
add
sti
fildl
jb
push
add
nop
sub
pop
add
push
xor
pop
add
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
bound
jns
lahf
jae
add
add
add
add
out
popa
stc
push
roll
add
std
push
add
sarb
add
jp
mov
gs
add
cmpl
in
fdivr
lcall
jne
push
lea
shl
pop
push
push
push
push
push
lea
push
push
push
push
push
call
xchg
jne
fiadds
add
jl
add
shrl
loop
jle
add
jecxz
lret
mov
add
add
add
xlat
je
mov
cltd
xchg
push
testl
add
add
push
add
arpl
fcompl
inc
or
int3
iret
iret
push
push
push
push
lea
push
call
jp
pop
mov
jne
les
xchg
add
cmpsb
mov
lahf
xchg
pop
add
mov
add
add
test
add
push
jp
roll
sub
pop
xor
push
push
push
lea
push
push
lea
push
push
push
push
call
push
add
jb
not
pop
lock
je
rolb
loopne
add
shll
add
jns
jno
mov
add
push
shr
ror
inc
pop
add
pop
push
lea
push
lea
push
call
popf
enter
add
push
lods
add
add
add
mov
add
int3
jb
add
mov
scas
ja
add
add
add
int
lret
test
xchg
jge
shl
negb
sub
pop
rep
push
push
push
lea
push
push
lea
push
push
call
jp
mov
xchg
mov
stc
mov
lods
ja
add
into
jo
jp
in
add
mov
xchg
les
fdivr
iret
lods
add
add
add
sub
pop
mov
xor
push
push
push
push
lea
push
push
lea
push
call
add
xor
add
add
arpl
loop
pusha
adcl
add
cld
outsl
mov
fs
sub
pop
or
je
mov
push
push
push
push
lea
push
push
call
add
jnp
xchg
loopne
imul
sahf
mov
add
in
xchg
push
add
mov
add
out
mulb
add
out
mov
popf
mull
add
cld
sub
pop
add
push
push
push
call
lods
add
pushf
add
int3
xchg
push
mov
cmpb
add
add
push
mov
popa
mov
addl
roll
add
add
add
jmp
add
mov
add
mov
push
flds
jge
add
push
popf
testb
add
movsb
push
push
lea
push
push
push
call
push
fildl
divb
add
add
add
ror
fwait
gs
addb
scas
call
popl
add
add
add
xchg
add
add
mov
add
push
mov
lcall
sahf
in
cmpsl
loope
mov
add
add
push
push
shr
push
or
not
add
shr
rol
sub
add
xor
not
not
pop
inc
pop
push
push
lea
push
lea
push
push
push
lea
push
push
call
int3
add
pop
mov
add
add
imul
in
cmpsl
xchg
add
imul
add
add
jo
add
ror
fnstsw
mov
add
fldl
add
add
mov
out
add
in
loopne
lcall
push
add
pop
mov
push
not
ror
not
dec
pop
mov
mov
push
push
push
push
call
add
add
xchg
loop
xchg
lcall
add
cmpsl
je
mov
fadds
push
roll
sub
pop
jmp
push
ror
dec
shl
pop
push
push
sub
shr
pop
mov
push
push
call
add
pop
in
int
mov
add
add
cli
rolb
add
fsub
mov
ret
popa
jge
lcall
jae
icebp
add
in
in
clc
pop
add
push
push
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
pusha
out
add
pop
icebp
loope
jge
popl
lahf
push
mov
add
mov
add
add
scas
aam
jb
mov
add
push
push
test
pop
add
jbe
stc
add
add
data16
in
pop
fadds
jp
mov
lcall
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
scas
jne
into
jae
cmc
mov
add
mov
ja
scas
add
mov
insb
imul
int
add
out
mov
mov
mov
add
out
jge
add
movb
movsb
add
imul
add
add
push
add
jo
sub
pop
push
push
push
call
add
lcall
add
clc
jo
push
cmpsb
in
xlat
aam
jbe
stos
add
lods
mov
add
popa
push
insb
sahf
add
nop
enter
lcall
push
lea
push
push
push
push
push
push
lea
push
call
add
jp
cld
mov
add
add
add
lcall
sti
add
ljmp
add
jae
jns
sub
pop
mov
push
push
push
push
push
push
push
push
push
push
call
les
jno
stos
add
xchg
enter
shrl
push
mov
push
sahf
add
lea
pop
pop
cmpsl
jecxz
out
in
lret
cmc
add
add
test
add
push
mov
out
rolb
add
pop
ficompl
jbe
std
mov
shll
in
fdivr
lcall
pop
push
push
push
lea
push
push
call
lea
mov
nop
add
lcall
into
cld
gs
add
testb
xchg
xchg
mov
mov
pop
pop
pop
push
shr
add
pop
leave
push
push
call
add
add
add
add
jecxz
add
add
fnstenv
pop
imul
add
fwait
ja
sti
fiaddl
add
popa
add
movsl
roll
xchg
add
je
sub
pop
ret
push
dec
add
pop
push
push
push
push
call
push
add
add
add
mov
ja
add
add
jp
out
push
xchg
jle
add
jecxz
mov
sub
pop
mov
add
push
push
push
push
call
stos
add
add
jne
mov
add
mov
push
jno
add
mov
rolb
add
xchg
add
rcrb
in
sahf
fiaddl
std
fldt
test
fildll
add
enter
add
out
std
jp
add
push
sub
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
insb
add
add
mov
add
lret
mov
sti
xlat
add
add
add
ljmp
fsubrl
sti
add
pop
popl
add
mov
int
add
add
stos
negl
int
rolb
add
push
sub
pop
movl
push
push
push
push
lea
push
push
push
call
sarb
les
add
add
aad
add
add
into
pop
add
add
add
add
jae
shl
push
add
mov
aam
cld
mov
add
gs
cwtl
mov
jae
cwtl
sub
pop
addl
push
push
lea
push
push
push
lea
push
push
call
sahf
xchg
std
add
add
jmp
out
xchg
xlat
pop
add
jmp
jl
aam
add
aam
mov
xchg
rolb
add
add
je
push
pusha
data16
cmc
bound
add
mov
out
add
add
jp
add
xchg
add
fadds
xchg
jns
add
pop
test
je
mov
push
push
push
push
push
call
cltd
cmc
add
add
je
jge
mov
jge
lods
add
lea
xchg
jle
loopne
imul
mov
pop
push
mov
lods
insb
movsb
fs
mov
bnd
fldl
movsb
xchg
add
in
lcall
push
push
call
insb
in
in
push
add
iret
icebp
ja
mov
add
hlt
add
adcl
add
add
cld
cmpsb
aad
fiadds
jmp
add
add
pop
cmc
roll
add
add
add
mov
mov
out
add
add
pop
pop
push
lea
sub
rol
pop
pop
pop
push
ror
shr
pop
leave
push
push
push
call
mov
addl
add
xorb
push
repnz
add
xchg
lcall
movsb
add
lock
add
loopne
add
add
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
add
bound
js
add
add
add
add
hlt
ror
scas
vpmacsdd
add
scas
sti
stos
add
add
ret
lea
fs
add
xchg
add
add
out
cltd
sbbl
jecxz
in
add
sub
pop
mov
add
push
add
add
add
pop
push
push
push
push
push
lea
push
push
lea
push
push
call
add
push
jae
add
jle
mov
aam
test
add
push
add
add
add
add
add
jno
add
push
push
filds
add
loopne
lcall
push
pop
push
push
push
push
lea
push
push
lea
push
call
fstps
add
pop
sti
add
pop
mov
pop
fwait
je
add
push
fadd
shll
rolb
lret
shl
loop
mov
add
arpl
leave
faddl
scas
add
sub
pop
push
push
shl
sub
pop
testl
push
shl
xor
rol
sub
pop
addl
push
sub
pop
push
call
push
push
push
push
lea
push
push
push
call
movb
fucomp
cwtl
add
movb
scas
mov
out
mov
scas
jmp
pop
jle
pop
xchg
fwait
jbe
jle
gs
in
mov
mov
add
sub
pop
mov
push
push
call
fxtract
add
jae
imul
add
pop
pop
push
add
add
movsl
push
add
sarb
push
mov
mov
add
ljmp
pop
add
add
flds
mov
xchg
sti
add
xchg
add
aam
rcll
add
lcall
jne
push
xor
pop
push
push
push
push
lea
push
push
call
stc
mov
add
mov
popa
data16
add
add
int3
add
jmp
call
push
scas
not
enter
ret
fsub
std
aam
imul
lock
addb
add
add
push
jo
stos
add
mov
ret
add
push
push
push
push
push
push
push
lea
push
push
push
push
call
aam
xchg
mov
add
add
mov
jecxz
add
mov
add
xchg
call
fs
pop
std
sahf
cmc
movsb
add
mov
pop
push
stc
lds
outsl
stos
mov
scas
add
lods
xlat
movb
in
fdivr
lcall
mov
call
mov
inc
add
arpl
push
lea
push
call
add
add
addr16
cmc
arpl
lahf
add
mulb
testb
stc
mov
jmp
out
add
add
mov
in
in
pop
cmpl
jne
push
pop
pop
push
lea
push
lea
push
push
lea
push
lea
push
call
ret
add
cmpsl
add
les
pop
hlt
add
add
add
add
add
fldl
jp
fwait
jns
pop
jo
mov
add
add
add
mov
add
sub
pop
pop
push
xor
pop
pop
push
push
push
push
push
lea
push
push
call
roll
mov
add
add
push
xchg
jp
add
xchg
add
mov
add
push
popl
mov
push
add
jns
out
mov
js
xchg
cmc
stos
add
add
mov
divl
fimull
mov
pop
add
add
add
test
leave
push
sub
lea
shl
dec
pop
ret
push
ror
pop
push
mov
push
sub
pop
add
push
push
shl
pop
push
push
inc
inc
pop
push
push
push
not
dec
lea
pop
movl
push
push
lea
push
lea
push
lea
push
call
lods
add
add
data16
add
add
push
jnp
add
adcb
add
add
mov
xchg
rcl
push
add
add
cld
add
lcall
add
call
add
add
test
in
xchg
add
push
add
add
mov
fidivs
pushf
imul
out
lods
pusha
mov
out
ja
roll
add
jne
add
add
add
mov
in
add
jbe
add
iret
loop
pop
add
mov
add
sub
pop
call
push
lea
push
push
push
lea
push
push
push
push
push
call
mov
add
jl
add
test
stc
push
data16
push
shrb
add
stc
mov
rcll
out
aad
arpl
add
ror
add
add
mov
pop
stos
addr16
add
ljmp
lods
add
hlt
icebp
add
mov
in
fdivr
lcall
adc
ljmp
call
push
pop
subl
cmpl
jne
push
lea
inc
shr
pop
pop
pop
push
dec
xor
shr
pop
pop
pop
push
rol
lea
inc
pop
leave
ret
push
shr
sub
pop
push
push
push
push
lea
push
push
lea
push
push
push
call
add
add
mov
movl
lock
popa
jge
add
data16
fadds
add
ffreep
add
leave
orb
jmp
add
in
loopne
lcall
in
push
inc
pop
add
push
push
rol
shr
xor
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
call
movsl
popa
rolb
sarl
add
push
cmpsl
fwait
pop
add
add
mov
xchg
add
clc
add
sti
mov
add
mov
add
add
and
lcall
push
inc
ror
add
pop
push
push
push
inc
shr
push
sub
add
xor
sub
dec
pop
xor
pop
push
push
lea
push
push
push
push
push
push
call
stos
rolb
outsl
add
xchg
add
add
call
xchg
mov
push
add
mov
add
push
add
push
mov
jnp
int3
add
mov
int
sub
pop
pushl
call
push
dec
not
lea
pop
call
push
push
dec
rol
push
sub
add
add
shr
dec
sub
sub
not
pop
add
pop
push
sub
shl
not
pop
pushl
push
shl
pop
call
push
push
push
push
push
call
mov
mov
js
xchg
add
cltd
add
jp
push
jnp
jl
ret
add
add
add
jns
aam
jmp
jp
lcall
cld
add
cwtl
mov
jge
mov
in
pop
call
push
push
dec
shr
push
or
inc
add
shr
sub
add
shl
pop
inc
pop
push
ror
xor
inc
pop
pushl
push
inc
rol
lea
dec
pop
call
push
sub
lea
pop
call
push
push
dec
lea
shl
sub
push
push
pop
add
rol
lea
sub
shl
dec
pop
sub
shl
pop
push
add
pop
pushl
call
push
push
push
push
push
lea
push
push
push
call
jo
add
fnstsw
add
mov
shlb
add
mov
shlb
add
mov
mov
rolb
xchg
mov
add
mov
fwait
lods
push
mov
les
cwtl
add
xchg
int
sub
pop
call
push
push
call
sahf
cltd
stos
add
pop
test
movb
sahf
add
bound
mov
nop
icebp
into
js
add
shr
add
add
add
pop
lcall
mov
mov
stc
aad
sahf
add
jp
push
add
testl
clc
pop
mov
lea
push
add
pop
sub
mov
push
dec
ror
dec
lea
pop
shr
add
push
not
pop
mov
push
dec
pop
mov
add
push
shr
shr
pop
add
mov
push
ror
xor
sub
pop
mov
push
push
call
in
add
add
fsubr
add
cld
add
cltd
add
pop
add
xchg
add
test
mov
add
into
add
mov
mov
negb
cmp
jne
cmp
jne
push
xor
pop
mov
push
sub
ror
pop
movl
push
pop
jmp
push
rol
add
ror
pop
mov
push
push
push
call
add
in
nop
jnp
xchg
call
add
add
pop
int3
push
push
add
popa
add
jno
pop
add
add
iret
push
imul
ret
stos
imul
in
xchg
mov
mov
add
sarl
pop
add
ret
add
cmpsb
mov
sub
pop
mov
sub
jne
push
push
push
push
lea
push
push
push
push
push
push
call
pop
mov
add
bound
add
cmpsb
add
add
addb
add
rolb
jb
cmpsb
fwait
sahf
add
add
lcall
inc
adc
add
add
push
push
lea
push
lea
push
push
push
push
call
jmp
lds
testb
add
cmpsl
flds
sub
add
out
mov
add
xchg
lds
add
mov
add
add
lock
pop
add
add
mov
in
add
mov
add
imul
lcall
jae
add
mov
push
sub
ror
add
add
pop
mov
push
sub
pop
cmp
jne
push
rol
pop
mov
push
lea
pop
movl
push
rol
rol
pop
jmp
mov
push
push
push
lea
push
push
push
push
push
push
lea
push
call
xchg
add
add
loopne
mov
add
out
add
add
clc
xchg
push
add
leave
add
add
mov
xchg
in
fcomps
cmpl
jne
push
add
pop
mov
movl
push
push
push
push
push
call
int
out
call
loope
repnz
push
jp
add
lods
rclb
insb
shlb
add
pop
cmpsb
cmc
add
call
cltd
mov
andb
pop
lock
xlat
test
mov
jmp
xchg
add
lcall
xor
add
pushl
push
push
push
call
loopne
add
add
lret
add
add
mov
add
push
sti
roll
add
xchg
add
add
add
add
push
ret
mov
jbe
push
add
add
add
mov
sub
pop
pop
push
lea
rol
pop
mov
push
inc
pop
mov
mov
push
push
sub
add
push
and
add
not
sub
sub
pop
dec
sub
pop
push
sub
pop
push
push
push
push
push
lea
push
push
push
call
jge
fadds
add
add
sahf
add
mov
jo
add
addl
add
add
add
lcall
push
js
pusha
fs
add
add
jle
jns
iret
andl
sub
pop
call
push
not
not
pop
cmpl
je
push
push
shl
sub
push
or
not
add
sub
sub
rol
pop
lea
pop
push
push
call
mov
faddl
imul
jb
add
imul
add
add
mov
add
lock
add
add
jnp
add
pop
jae
add
out
add
call
push
push
push
push
lea
push
push
lea
push
push
call
movb
out
jl
adc
scas
data16
add
add
lock
mov
jae
add
add
jle
add
and
mov
pop
in
add
mov
mov
jno
jnp
in
loopne
cmpl
je
push
push
dec
add
rol
push
sub
add
sub
sub
shl
sub
not
sub
lea
pop
ror
pop
push
push
lea
push
push
call
mov
pusha
scas
mov
mov
add
add
add
add
add
xchg
jmp
imul
in
cltd
sahf
faddl
iret
test
stc
in
add
pusha
add
out
add
mov
mov
fs
xchg
xchg
out
add
add
add
cltd
mov
leave
aam
xchg
fisubs
pop
push
push
xor
pop
call
push
pop
cmpl
je
push
push
sub
add
not
dec
push
or
inc
add
add
dec
dec
sub
shr
pop
sub
add
xor
pop
push
lea
push
push
push
lea
push
push
lea
push
call
pushf
add
add
add
xchg
lds
jmp
imul
pushf
mov
jge
sti
add
add
roll
add
add
add
xchg
jp
add
add
add
flds
mov
add
lahf
cmpsb
add
lahf
flds
push
lea
push
lea
push
push
lea
push
lea
push
call
roll
arpl
mov
add
add
add
jae
add
stc
fimull
add
ror
mov
xchg
lea
sub
pop
call
cmpl
je
push
push
sub
push
sub
add
rol
sub
rol
add
shr
inc
pop
xor
inc
not
add
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
call
add
add
scas
pop
push
mov
push
add
addl
add
lds
add
movsb
fadds
jne
in
roll
add
ret
push
push
cmpsl
jo
pop
clc
lods
mov
ljmp
roll
sub
pop
push
call
push
push
push
lea
push
push
push
push
push
push
call
lcall
mov
fildl
add
add
jnp
pop
lea
arpl
scas
bound
in
push
lcall
fiadds
pop
add
add
mov
push
add
add
add
add
movsl
fimuls
mov
push
testb
add
xlat
cwtl
add
add
xchg
js
xor
ret
test
add
push
push
ror
sub
inc
push
xor
add
lea
sub
ror
shl
dec
pop
add
pop
push
not
sub
rol
pop
push
call
push
add
add
pop
cmpl
je
push
push
not
push
or
not
add
sub
shr
add
pop
xor
shl
add
inc
pop
push
lea
push
lea
push
push
call
add
bound
add
jno
stos
push
rolb
mov
add
add
add
cld
insb
push
add
movsb
push
xchg
pushf
mov
lock
lcall
push
lea
push
push
push
call
movsl
pop
je
jp
mov
add
add
in
add
cli
push
add
stos
jecxz
pop
add
add
ret
int3
sti
xchg
add
fistpll
add
push
lret
cmpsl
js
add
add
mov
leave
sub
pop
call
cmpl
jne
push
sub
not
pop
mov
push
push
push
push
push
push
call
add
add
out
add
add
add
add
jmp
xchg
fadd
ret
add
jno
notl
add
js
add
xchg
add
lret
mov
test
add
addl
add
ja
add
mov
in
sub
pop
movl
jmp
push
sub
pop
xor
push
lea
push
call
add
pop
subl
in
cltd
jbe
les
add
stc
mov
push
push
call
clc
movsl
add
add
add
add
jne
add
add
add
data16
fsubl
cltd
shlb
add
in
clc
lcall
push
push
push
push
push
lea
push
push
push
call
push
add
push
add
stos
add
fildl
add
in
mov
add
rolb
xchg
add
test
in
mov
push
add
push
jp
mov
jo
cltd
movsl
sub
pop
pop
push
shr
add
add
pop
pop
pop
push
inc
add
shr
pop
leave
push
pop
ret
push
push
push
push
push
push
push
call
mov
add
add
loopne
imul
mov
lret
add
rolb
add
push
faddl
jl
loopne
iret
mov
push
push
add
shr
add
pop
mov
push
push
push
push
push
push
push
push
push
call
jne
add
imul
jo
pop
call
hlt
ret
add
flds
gs
mov
fisubs
in
out
xchg
mov
popa
imul
add
testb
mov
mov
add
outsl
push
insb
or
enter
add
sub
pop
add
cmpl
jne
push
push
dec
push
and
add
inc
sub
xor
pop
xor
add
dec
pop
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
add
cli
jle
xchg
out
in
add
iret
mov
add
xchg
add
add
call
stos
add
test
sub
pop
pushl
push
lea
push
push
push
push
push
push
push
call
jb
stos
lcall
nop
add
and
cwtl
icebp
lahf
add
mov
sbb
addb
add
pop
add
out
cmpsl
leave
rcrb
jmp
add
jb
cltd
pop
mov
add
mov
mov
xchg
add
xchg
leave
push
cld
cmpsl
std
lret
jno
loopne
jns
push
cwtl
aam
mov
incb
push
add
add
lcall
mov
push
lea
push
lea
push
call
lods
cli
lea
add
incb
nop
out
int3
add
jnp
add
fdivs
int
push
jno
push
movsb
data16
jo
lahf
add
mov
mov
in
lock
lcall
call
push
shl
ror
xor
pop
jmp
push
dec
sub
pop
cmpl
jne
mov
push
push
push
push
push
push
push
call
add
stos
push
sti
mov
call
add
jne
int
out
leave
xlat
call
add
lea
jp
andl
leave
lret
add
pop
add
add
jne
scas
add
add
in
test
sti
iret
add
sub
pop
call
push
sub
pop
ret
push
push
push
push
lea
push
call
add
icebp
push
movsb
shlb
pop
imul
mov
roll
add
add
add
add
add
lods
jecxz
add
jnp
add
les
test
addr16
add
sub
pop
jmp
push
push
push
push
call
add
add
add
scas
mov
add
scas
pushf
mov
lret
add
addb
hlt
popa
push
fdivp
add
jno
mov
jno
add
push
pop
cltd
rolb
test
idivb
cmpl
jne
push
push
xor
dec
xor
push
or
not
add
lea
ror
sub
not
add
pop
rol
sub
pop
push
lea
pop
pushl
push
rol
pop
call
push
push
push
push
push
lea
push
push
push
push
push
push
call
imul
les
jle
add
add
mov
add
leave
shlb
push
mov
add
add
jecxz
add
add
add
loope
lds
add
xchg
scas
push
arpl
add
cwtl
nop
arpl
add
lds
addb
call
add
pusha
sub
pop
call
push
lea
ror
pop
jmp
push
push
push
push
push
call
add
imul
push
add
jns
lock
mov
pop
sti
lret
mov
pop
jmp
ljmp
add
jge
add
test
add
push
shl
ror
pop
cmpl
jne
push
push
push
push
push
push
lea
push
push
call
add
add
in
add
cmpb
fs
jmp
add
fiaddl
mov
add
mov
out
mov
xchg
in
xchg
lcall
add
mov
lcall
add
add
mov
push
push
call
clc
jne
add
add
pusha
gs
add
jp
test
stc
outsl
stos
add
gs
cld
jmp
enter
mov
roll
add
add
push
mov
pop
std
rolb
mov
add
add
add
gs
add
fistl
mov
push
add
add
movsb
sub
pop
push
push
push
shr
xor
push
and
add
not
sub
shr
pop
shl
ror
rol
xor
pop
push
push
push
push
push
push
call
imul
add
mov
mov
jecxz
add
add
leave
add
nop
popf
jo
add
rcll
sbb
ja
popa
add
add
fistpl
add
pop
pushl
call
push
push
push
push
push
lea
push
push
call
add
add
push
leave
add
add
add
add
add
add
mov
aam
rcrl
add
mov
loopne
add
add
in
add
add
test
test
pop
add
add
insb
add
mov
call
int
add
jle
add
lcall
shrb
pop
lds
push
sub
push
or
not
add
shr
shl
sub
add
sub
xor
pop
sub
xor
dec
pop
push
shr
pop
pushl
call
push
lea
xor
pop
call
push
push
lea
not
inc
push
xor
add
sub
not
shl
add
sub
dec
add
add
pop
add
pop
push
push
push
push
push
push
push
push
push
push
call
mov
jp
stos
ficompl
aad
rcrl
push
push
int3
aam
add
bound
scas
add
add
mov
add
cmpsb
jle
stc
mov
in
fdivr
lcall
jne
push
push
push
call
xchg
add
pop
lods
add
mov
cmc
add
jp
call
add
jle
loopne
pop
push
shll
add
cld
mov
pusha
lds
add
xchg
add
add
in
sub
pop
call
push
sub
pop
call
push
push
rol
push
push
pop
add
inc
add
shl
sub
ror
not
not
pop
sub
pop
push
shr
sub
inc
pop
pushl
push
pop
call
call
push
push
shl
rol
shl
shl
push
and
add
dec
xor
sub
ror
add
pop
xor
ror
dec
sub
pop
push
dec
pop
pushl
push
inc
add
pop
call
push
push
push
lea
push
push
lea
push
call
mov
test
pop
lahf
cwtl
add
add
aad
fwait
sar
add
mov
call
jge
aam
add
add
push
hlt
mov
add
add
jmp
xchg
rorb
add
add
cmc
cli
sub
pop
call
push
push
inc
not
dec
push
and
add
dec
lea
sub
sub
inc
shr
sub
pop
inc
shl
ror
pop
push
ror
not
rol
add
pop
pushl
call
push
push
call
imull
mov
into
add
cmpl
test
add
lret
pop
mov
add
add
add
add
mov
cld
sub
pop
call
push
push
rol
add
not
push
push
pop
add
sub
xor
sub
sub
sub
pop
sub
inc
sub
pop
push
dec
ror
pop
pushl
push
push
lea
push
push
push
lea
push
push
call
add
add
test
test
xchg
in
add
add
cltd
out
add
xchg
add
sti
popf
add
xchg
cwtl
add
add
fstpl
add
add
add
clc
lods
je
fdiv
scas
int3
fimuls
sub
pop
call
call
push
push
xor
inc
push
xor
add
dec
not
ror
sub
shr
shr
pop
lea
pop
push
lea
push
call
hlt
jmp
add
add
add
add
lods
add
add
push
fnstenv
add
jne
int3
add
add
roll
xchg
add
aad
sub
pop
pushl
call
push
push
call
into
les
add
add
add
add
push
jbe
pop
loopne
add
fisttps
add
mov
add
add
sub
pop
call
push
push
shr
lea
add
push
sub
add
inc
sub
add
inc
sub
lea
not
lea
pop
add
dec
pop
push
push
push
lea
push
push
push
call
hlt
add
mov
jno
int3
data16
frndint
add
add
jmp
int3
xchg
add
pop
jnp
stos
mov
jb
jne
mov
xlat
jl
lcall
jmp
sub
pop
pushl
push
push
push
push
push
push
call
mov
pop
loop
add
test
push
push
out
pop
pusha
test
insb
movsb
cltd
fildl
ljmp
xchg
mov
sarl
loopw
lds
add
mov
add
mov
mov
add
add
loope
jmp
add
call
call
call
push
push
xor
push
push
pop
add
sub
add
sub
rol
pop
sub
lea
shr
sub
pop
push
push
lea
push
call
add
fldl
add
add
pop
jbe
add
push
add
into
test
jnp
add
clc
outsl
add
xchg
pop
pushl
push
shl
sub
sub
pop
call
lea
push
xor
inc
add
not
pop
push
push
shr
pop
call
push
push
add
push
push
pop
add
inc
ror
add
lea
sub
dec
pop
ror
not
rol
pop
push
push
call
mov
mov
lea
fcoml
std
add
add
add
mov
ljmp
add
aad
mov
add
test
add
movsl
push
mov
pop
add
fwait
add
add
lcall
jne
push
pop
call
push
dec
ror
sub
pop
call
push
push
dec
dec
dec
push
or
inc
add
ror
add
sub
shr
pop
dec
shl
dec
rol
pop
push
ror
pop
pushl
push
shr
pop
call
call
push
push
add
shl
add
push
push
pop
add
add
rol
ror
sub
sub
ror
pop
not
shl
pop
push
add
pop
pushl
push
add
pop
call
call
push
push
rol
add
rol
push
push
pop
add
xor
inc
inc
sub
lea
add
inc
ror
pop
xor
add
pop
push
lea
push
push
push
push
push
lea
push
call
xchg
mov
xchg
pushf
add
cltd
jge
addb
mov
fwait
test
sti
add
add
add
add
add
add
lds
xchg
cmpsb
add
mov
jno
add
jl
add
add
cmpb
pop
pushl
call
push
push
shl
push
push
pop
add
sub
sub
pop
lea
pop
push
push
shl
sub
lea
ror
push
xor
add
add
sub
add
sub
add
pop
not
pop
push
dec
pop
call
pop
push
shr
xor
pop
dec
jne
push
push
ror
add
push
push
pop
add
add
shr
sub
shl
sub
inc
rol
pop
add
pop
push
sub
pop
pushl
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
jmp
imul
add
mov
shlb
push
add
stos
pop
add
add
push
rolb
add
test
enter
fcmovne
mov
loopne
push
call
add
mov
fiaddl
pop
mov
add
ja
aam
sbbb
sub
pop
call
push
pop
mov
push
push
push
lea
push
push
call
xchg
jno
add
jge
add
outsl
js
js
add
add
add
add
jb
test
add
pop
add
jnp
lock
rolb
mov
lahf
add
int3
add
mov
jns
flds
cmc
mov
add
mov
xchg
mov
add
jbe
add
enter
xchg
test
sub
pop
lea
push
push
dec
not
xor
push
or
inc
add
lea
sub
not
add
sub
rol
add
xor
pop
not
rol
pop
push
lea
push
push
push
push
push
push
push
lea
push
call
fistpll
out
add
gs
push
jle
add
xchg
arpl
cli
add
stos
mov
cltd
and
add
bound
pop
std
into
mov
xchg
icebp
add
cltd
ljmp
aam
add
jne
call
push
pop
lea
push
lea
push
push
push
push
push
call
lods
add
test
js
add
xchg
add
xchg
fldcw
add
pop
add
mov
mov
add
add
sti
out
add
jne
sub
pop
push
push
push
push
call
mov
add
push
pop
xchg
js
add
add
xchg
test
add
cmpsb
pop
cwtl
hlt
mov
mov
in
hlt
pop
push
push
sub
shl
inc
pop
push
pushl
push
push
rol
push
or
not
add
add
xor
sub
dec
add
sub
pop
inc
add
ror
pop
push
rol
pop
push
push
lea
push
call
xchg
cltd
stos
pop
add
roll
lods
stc
out
xchg
mov
cmc
data16
out
mov
lods
add
addr16
add
jno
mov
clc
pop
call
push
add
pop
call
push
lea
push
push
push
call
add
add
imul
mov
add
jno
cli
xchg
add
add
into
in
jmp
jle
aad
push
cmpsl
sub
pop
mov
lea
push
push
add
sub
push
xor
add
shl
lea
sub
rol
pop
not
pop
push
dec
ror
pop
pushl
push
ror
rol
pop
call
push
push
push
push
lea
push
push
lea
push
push
call
add
cld
pusha
test
out
add
add
call
add
add
push
mov
add
nop
jne
mov
negl
add
xchg
insb
mov
add
pop
add
add
pop
outsl
js
xchg
pop
call
push
push
inc
xor
push
or
not
add
sub
add
sub
xor
pop
add
not
pop
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
lods
add
lods
add
ja
pop
add
enter
pop
push
pop
divb
push
add
mov
in
mov
add
mov
xchg
add
stos
add
add
fisttps
add
lret
pusha
in
add
lods
loopne
xlat
ret
rolb
add
add
add
add
sub
pop
pushl
push
push
push
push
lea
push
call
pop
add
push
data16
add
add
loope
mov
xchg
add
mov
jns
add
add
fsubrs
rcll
xchg
xchg
add
add
pop
imul
in
lcall
mov
add
call
push
shr
dec
pop
mov
push
sub
pop
lea
push
push
rol
sub
push
or
inc
add
rol
sub
sub
shr
not
pop
pop
push
sub
shr
pop
pushl
push
push
push
push
push
lea
push
push
lea
push
call
pop
xchg
mov
add
in
cld
add
loopne
xchg
cmpb
add
add
xchg
add
scas
jno
add
add
loopne
xchg
add
into
test
xchg
repnz
sub
pop
call
push
shl
dec
pop
lea
push
lea
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
pop
mov
mov
add
jnp
add
push
scas
aam
pushf
fs
lret
cmpsl
add
jne
add
cmc
add
flds
lcall
push
push
push
push
lea
push
push
call
add
mov
pop
mov
mov
test
ficoms
mov
mov
mov
out
add
mov
fdiv
sub
pop
push
pushl
push
push
rol
add
not
push
push
pop
add
sub
sub
add
pop
ror
lea
sub
pop
push
push
push
push
call
add
adcb
add
rcll
mov
roll
add
add
add
jge
jne
mov
add
add
add
xchg
fucomip
add
enter
add
add
addl
sub
pop
push
push
sub
shl
pop
call
push
push
sub
push
and
add
sub
pop
dec
pop
push
dec
shl
shr
pop
pushl
push
shr
shl
shl
pop
call
push
sub
inc
shr
pop
push
call
push
push
inc
not
push
push
pop
add
sub
not
sub
rol
ror
pop
ror
ror
shl
sub
pop
push
push
lea
push
push
push
push
lea
push
push
call
lret
fwait
add
add
movl
add
jmp
add
mov
add
xchg
mov
mov
mov
mov
negb
fdivp
rcl
scas
leave
clc
mov
add
pusha
stc
add
pop
add
add
mov
in
loopne
lcall
jne
push
xor
sub
rol
pop
call
call
push
sub
pop
pushl
mov
push
push
push
lea
push
lea
push
push
push
push
call
add
roll
add
out
mov
add
imul
add
sarb
add
jge
sub
pop
jmp
push
push
inc
inc
push
push
pop
add
add
sub
pop
add
pop
push
push
push
call
pushf
fildl
sti
add
add
add
add
push
mov
xchg
add
hlt
in
add
lcall
jge
add
pop
add
pop
add
push
add
iret
aad
pop
push
pop
rolb
icebp
add
jne
push
push
push
lea
push
push
push
lea
push
call
add
repnz
xchg
add
add
add
add
add
arpl
mov
movsl
movsl
test
je
add
pop
add
push
repnz
stos
pop
add
add
int
add
ja
pop
mov
ljmp
lods
add
jge
add
xchg
xchg
mov
add
mov
fdivp
pop
mov
sub
pop
call
push
push
push
call
outsl
lds
std
add
pop
pusha
pushf
movsb
bnd
andl
pop
jmp
addb
in
add
stc
mov
stos
aam
mov
pop
call
push
push
lea
shr
push
xor
add
xor
shr
sub
xor
ror
pop
pop
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
call
cmc
add
lods
addl
add
add
add
add
add
rcrb
push
iret
outsl
lea
mov
fwait
sahf
gs
push
push
out
add
cltd
mov
mov
add
add
pop
add
repnz
mov
test
std
out
sub
pop
pushl
push
lea
push
push
push
call
stc
testb
push
add
add
mov
mov
add
jecxz
add
gs
add
mov
add
incb
lods
add
jle
add
push
pop
sti
add
cmp
add
push
inc
sub
not
pop
push
push
push
push
push
call
add
out
sti
add
jle
add
lret
add
push
xchg
stos
scas
hlt
add
jp
fdivp
test
test
bound
rolb
jl
popa
cli
add
add
xchg
add
mov
repnz
xchg
add
xchg
add
stos
movsl
pop
add
sub
pop
call
push
not
shr
shl
pop
leave
push
pop
add
pop
push
push
push
push
push
push
push
push
call
add
mov
add
sub
add
pusha
je
mov
add
enter
jae
add
pop
fisubl
add
movsl
add
add
add
out
je
add
add
add
add
add
add
stos
add
movsb
test
pop
push
dec
sub
pop
pop
push
sub
shl
pop
xor
inc
push
pop
ret
leave
push
shl
sub
ror
sub
pop
ret
push
push
dec
dec
add
pop
mov
push
push
push
push
push
lea
push
push
push
push
push
call
jb
jae
xchg
js
add
mov
add
out
add
add
sti
add
popf
movsb
add
add
add
add
pop
add
sub
pop
cmpl
jne
push
push
push
call
add
in
int3
add
outsl
mov
mov
aam
add
cmpsl
add
add
lock
repnz
add
add
add
outsl
add
add
imul
mov
push
add
add
fs
movsb
add
out
flds
lcall
inc
and
push
rol
dec
pop
jmp
push
lea
push
lea
push
call
push
in
clc
add
cmpb
add
jmp
jecxz
add
add
pop
fidivrs
iret
arpl
xchg
add
cld
add
add
add
add
fildl
fs
sub
pop
mov
push
push
lea
push
call
pop
adcl
add
jl
add
add
mov
push
enter
stos
fs
mov
add
mov
add
lods
fwait
imul
push
scas
data16
mov
sub
pop
and
push
lea
push
push
call
jmp
mov
pop
jb
mov
icebp
pusha
rolb
push
xchg
loopne
mov
pusha
mov
mov
lds
add
lret
xchg
mov
add
mov
jge
nop
scas
xchg
pop
xchg
iret
xchg
push
les
fldt
int
push
add
push
cmpsb
push
sub
pop
xor
xor
push
ror
not
pop
add
xor
push
sub
add
pop
dec
push
push
push
push
lea
push
call
add
lret
add
out
arpl
add
push
add
nop
add
add
add
imul
fmulp
mov
push
lahf
movsb
add
lcall
jmp
push
sub
dec
sub
pop
jmp
push
xor
rol
rol
pop
sub
push
push
push
lea
push
lea
push
push
call
mov
iret
mov
add
push
addl
push
fwait
add
add
frstor
jle
lods
mov
add
enter
mov
shlb
insb
popf
push
cltd
test
fidivrl
add
sub
pop
pushl
push
add
sub
add
pop
pop
sub
push
push
lea
push
push
push
push
push
push
push
push
call
mov
add
xlat
add
jge
add
add
mov
cltd
loope
add
add
add
lahf
shlb
add
jmp
mov
add
faddl
cmp
sbb
call
fs
lods
test
add
push
add
testl
shlb
pop
add
add
add
int
add
push
shlb
add
jne
lock
mov
sub
pop
mov
lea
push
lea
push
push
push
call
push
mov
fisubl
mov
push
addr16
mov
add
clc
push
add
add
jno
add
add
jnp
pushf
test
add
jl
xchg
mov
add
jecxz
add
xchg
add
add
int3
mov
add
movl
push
push
push
push
lea
push
lea
push
push
push
push
push
call
jns
addr16
add
xchg
add
mov
lea
mov
lahf
movsl
aam
lea
pop
add
in
add
out
cli
pushf
add
add
push
add
pusha
add
add
mov
sub
pop
shr
add
push
rol
ror
pop
sub
push
dec
add
inc
pop
pushl
pop
push
lea
push
push
push
push
push
lea
push
call
add
add
add
add
ja
aam
stos
mov
mov
add
jne
xchg
add
addb
add
mov
mov
xchg
mov
add
add
subl
add
scas
xchg
bound
add
mov
js
in
in
shr
push
push
call
les
in
xchg
fidivl
mov
add
filds
xchg
loopne
mov
add
pop
add
jmp
sub
pop
and
push
not
add
add
sub
pop
sub
cmp
jne
push
sub
add
pop
leave
ret
push
shr
pop
push
push
shr
xor
sub
pop
mov
push
push
push
push
push
lea
push
push
call
add
add
add
add
js
shl
cltd
add
loopne
add
mov
push
mov
mov
fucomip
push
add
in
in
add
push
push
lea
shl
xor
pop
push
push
push
call
addl
add
add
imul
mov
mov
scas
add
add
jnp
mov
cmc
cmc
add
movsb
add
pop
mov
in
mov
clc
lcall
push
add
pop
push
push
push
push
call
mov
add
cld
add
loope
push
add
cwtl
add
movb
cmpsb
add
mov
add
add
mov
movsl
mov
sub
pop
push
mov
push
push
push
push
push
push
push
push
call
add
add
addl
add
xchg
add
add
call
jl
add
add
add
fisttps
frstor
movsb
mov
jmp
stc
icebp
mov
je
enter
leave
fistpl
js
lcall
mov
sahf
movb
add
out
sub
pop
lea
sub
push
sub
pop
mov
push
shr
pop
shr
push
push
lea
push
push
lea
push
call
cmpsb
cli
add
add
arpl
add
stos
in
mov
mov
add
mov
push
add
pop
add
jecxz
leave
jge
add
clc
jae
add
pop
aam
push
add
add
mov
js
lret
add
mov
movsl
xchg
add
in
in
pop
add
mov
push
pop
add
push
push
push
push
lea
push
push
push
call
fistpll
in
insb
xchg
add
add
add
add
add
push
in
jmp
js
add
add
add
add
ljmp
add
mov
outsl
ret
add
push
mov
cmc
ljmp
cmpsl
pop
sub
pop
mov
add
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
enter
add
xchg
add
add
add
xchg
add
add
mov
add
pop
xchg
add
gs
add
add
lods
mov
push
add
mov
data16
stos
out
add
std
testb
mov
subl
add
jmp
add
add
mov
sub
pop
xor
mov
push
push
push
push
lea
push
lea
push
push
push
push
call
mov
scas
xchg
jecxz
mov
cmpsb
add
add
loopne
fwait
idivl
add
out
imul
lods
shl
lahf
sub
pop
and
rol
push
push
lea
push
push
call
add
add
mov
add
cltd
add
pop
mov
fdivr
add
jle
push
addb
popf
mov
add
test
mov
add
bound
in
fcomps
mov
add
mov
cld
mov
in
lock
lcall
rolb
push
lea
push
call
cli
leave
xchg
add
push
roll
jb
xor
adcl
add
add
rol
add
add
jl
jmp
sub
pop
xor
push
pop
inc
cmpb
jne
push
push
lea
push
call
xchg
outsl
add
mov
add
push
add
xchg
add
aam
fldl
add
push
notb
add
add
aam
xorb
add
fldl
lcall
inc
pop
ss
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
mov
les
mov
test
add
add
xchg
arpl
add
add
pop
add
cmpsb
ja
add
add
add
add
mov
mov
cmpsb
jae
add
lahf
iret
xchg
push
add
add
call
pop
cmp
je
add
push
xor
pop
cmpl
jne
push
push
lea
push
call
insb
iret
imul
push
mov
jle
ret
arpl
icebp
add
add
add
mov
mov
shl
xchg
lcall
rcrb
not
pop
pop
pop
push
sub
pop
pop
push
push
push
push
push
lea
push
push
push
call
add
add
data16
jmp
std
icebp
add
push
mov
in
xchg
jmp
add
movb
jb
scas
add
jbe
push
add
add
fsubs
jnp
add
leave
push
lea
push
push
lea
push
push
push
push
lea
push
call
clc
xchg
std
movsb
add
add
add
std
add
ljmp
addl
mov
pop
popf
mov
add
jp
mov
fistpll
pushf
push
fsts
add
pop
add
bound
outsl
mov
add
sub
pop
ret
mov
push
push
push
call
lock
enter
out
iret
shll
mov
loop
icebp
stc
mov
cwtl
rclb
fwait
loope
shrl
push
add
jnp
mov
fnstsw
into
xchg
fidivl
subb
add
lcall
push
or
mov
push
lea
push
push
lea
push
push
call
add
add
mov
push
test
jo
add
lock
enter
ret
stos
cmpsb
add
js
add
xchg
test
push
std
xchg
mov
test
mov
add
add
out
fcmovnb
popf
icebp
sub
pop
pushl
push
push
call
lahf
add
xchg
mov
add
add
loop
add
subb
int3
lds
rolb
cmpsb
mov
xchg
xchg
add
popa
mov
add
lcall
les
inc
pop
push
call
push
push
push
push
push
push
push
call
outsl
add
add
popa
add
idivb
push
mov
movsb
out
popa
sarb
movb
sarl
add
add
add
stos
aad
pop
repnz
xchg
mov
add
add
in
xor
push
lea
push
call
lock
add
mov
addr16
add
in
add
add
mov
ret
add
lret
aad
fdivs
add
addl
pushf
add
add
cmpsb
add
xchg
add
test
pushf
stos
jns
fiadds
lcall
pop
push
sub
sub
pop
pop
push
push
push
push
push
push
lea
push
push
push
push
call
jno
push
insb
out
add
xchg
pop
pop
lock
popf
add
add
loop
add
test
loop
popf
add
add
addl
add
add
add
fcom
sub
pop
pop
pop
push
push
push
lea
push
push
push
push
lea
push
push
call
jmp
add
fldl
add
mov
add
add
add
in
lret
mov
add
add
add
fsubrs
add
jne
add
aad
add
add
pop
add
mov
stos
pop
add
in
in
fcompl
ret
push
push
push
push
lea
push
push
lea
push
call
mov
mov
xchg
stos
add
pop
int
add
xchg
roll
jns
add
neg
add
stos
rolb
jne
add
scas
fs
out
add
movsl
pop
insb
xchg
add
test
add
lcall
push
lea
not
lea
dec
pop
mov
push
sub
pop
add
push
push
push
push
push
push
call
push
int3
mov
mov
out
shr
mov
fiaddl
nop
aad
in
add
jp
nop
nop
add
push
add
mov
add
ja
mov
add
ror
movsl
jb
sbb
pop
ret
js
add
add
mov
roll
aam
mov
mov
cli
idivl
mov
add
sub
pop
push
push
xor
pop
push
push
sub
pop
push
push
push
push
push
push
push
push
call
add
cmpsl
add
icebp
add
add
shll
lods
mov
mov
add
add
imul
add
add
outsl
add
jmp
lds
add
sub
pop
mov
push
push
xor
pop
pop
push
lea
push
lea
push
push
push
lea
push
call
add
pop
fdiv
add
add
add
push
xchg
shrb
add
aad
mov
mov
test
push
ror
jle
add
js
xchg
push
fcomi
push
xlat
push
xchg
fcmovne
add
add
mov
pop
fcmovb
mov
add
add
ret
mov
call
lea
sub
push
sub
pop
mov
push
lea
push
lea
push
push
call
add
fldl
xorb
xchg
mov
add
jle
jmp
xorb
mov
add
mov
add
popf
jmp
mov
mov
jl
hlt
movsb
add
add
mov
xchg
sub
pop
shr
push
xor
pop
add
mov
push
sub
add
inc
not
pop
add
push
push
push
lea
push
push
push
call
add
sti
mov
lret
loopne
leave
mov
add
fmuls
xlat
add
add
push
add
fwait
clc
add
popf
lret
pop
add
mov
add
int3
add
add
ret
hlt
pop
out
add
add
add
add
outsl
add
lcall
jae
push
push
lea
push
push
push
call
cmpsb
mov
mov
xchg
xchg
add
jmp
popa
add
test
add
pusha
add
mov
push
sti
data16
icebp
add
add
call
lock
mov
movb
cmpl
add
add
in
arpl
pop
pop
cmpsl
popl
lds
mov
addb
add
pop
popl
mov
push
sub
pop
add
xor
push
push
push
push
push
push
call
into
cmpsb
out
fldl
roll
iret
jbe
add
add
add
add
add
arpl
mov
push
add
fiadds
fnstsw
jle
repnz
mov
push
les
lea
add
add
arpl
xchg
icebp
fadds
add
adc
push
add
pop
mov
add
push
push
lea
push
push
call
mov
cld
xlat
fsubrp
je
jno
ja
ja
add
add
ret
mov
push
test
mov
add
addb
les
xchg
push
rorb
add
je
push
js
add
add
xchg
out
mov
add
add
cmpsb
add
add
lcall
rol
pop
push
push
push
push
lea
push
push
call
push
fisubrl
add
add
add
add
iret
in
pop
add
add
mov
add
add
pop
pop
addl
push
push
push
push
lea
push
push
call
add
add
ljmp
jno
xchg
add
sahf
jl
add
add
enter
fildl
mov
scas
sub
pop
xor
push
lea
push
lea
push
push
push
push
push
push
call
jno
cmpsl
lock
mov
cld
jle
cwtl
popl
enter
add
cli
enter
cwtl
add
add
add
add
arpl
sub
pop
nop
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
rcll
jle
add
lea
add
add
notb
cltd
add
insb
fsubp
lahf
add
test
add
add
mov
cltd
out
imul
add
mov
pushf
jmp
add
jnp
add
pop
fisttps
ja
add
lcall
inc
push
dec
pop
nop
nop
push
sub
pop
cmpb
jne
add
push
lea
rol
pop
nop
push
push
push
call
fstl
insb
add
enter
xchg
cltd
add
xchg
loope
add
in
nop
add
add
add
out
movsl
testl
add
lcall
cmp
je
push
push
lea
push
push
call
jmp
jne
mov
test
pop
add
push
mov
jge
lahf
mov
lods
leave
lods
aad
add
add
add
addr16
pop
nop
nop
push
dec
inc
sub
pop
inc
push
lea
push
push
push
call
add
popl
mov
add
testb
jno
add
add
push
in
add
add
pop
mov
leave
lahf
add
stc
imul
hlt
cmpsl
leave
xchg
jno
movsb
insb
add
clc
add
add
imul
nop
push
push
push
lea
push
push
push
call
add
add
lahf
mov
jo
mov
mov
stos
add
cltd
mov
mull
roll
sub
pop
nop
push
dec
dec
pop
cmp
jb
push
xor
pop
xor
push
push
push
lea
push
call
sarb
add
add
pop
jmp
xchg
add
xlat
jge
add
arpl
push
add
lret
push
jge
add
lds
imulb
add
add
mov
add
add
lcall
xor
add
push
push
push
lea
push
push
call
mov
mov
add
add
pusha
std
mov
cmc
shrb
stc
add
add
mov
add
std
add
xchg
mov
in
ja
fcoml
add
add
add
sub
pop
mov
push
shl
not
pop
add
push
push
push
call
add
movsl
int
add
lcall
add
push
jle
pop
movsl
add
mov
jge
add
leave
xchg
add
test
out
lret
add
call
test
loope
call
mov
mov
aad
add
jecxz
add
pop
notl
add
add
movb
pop
movzwl
push
push
push
push
push
call
filds
outsl
mov
push
add
mov
fdivl
leave
cmp
xchg
loopne
cli
push
loopne
add
sahf
fildl
aad
add
aam
pop
mov
add
add
repnz
jge
add
add
inc
sbb
push
lea
push
push
push
push
push
call
mov
add
into
jp
out
add
add
jl
mov
mov
mul
movsb
int
lret
push
loope
rcl
in
andb
popa
add
add
sub
pop
add
mov
push
dec
rol
pop
xor
xor
push
lea
push
call
add
add
loope
fwait
xchg
data16
lahf
push
fwait
add
add
xchg
addl
addl
mov
data16
adc
add
stc
lods
add
loopne
add
add
mov
lahf
cmc
add
scas
fidivs
adc
rolb
lcall
loope
push
push
lea
push
lea
push
call
add
hlt
add
mov
stc
add
icebp
add
pop
add
add
aam
nop
add
jle
cld
les
add
test
add
shrb
add
faddl
add
jle
rolb
out
ret
add
add
add
add
ror
sub
pop
xor
push
lea
push
call
add
std
cli
mov
xchg
ja
jle
in
add
add
rcll
js
ljmp
mov
add
imul
lcall
loope
push
push
call
add
mov
fstps
mov
ficoml
push
loopne
insb
xchg
loop
lods
add
aad
mov
cli
cld
int3
faddl
add
jbe
add
add
movl
push
push
push
push
call
sbbb
xchg
cwtl
add
scas
add
add
add
fs
push
xlat
movsl
mov
mov
add
xchg
add
add
add
mov
filds
sub
pop
shl
push
dec
dec
ror
shl
pop
xor
push
push
push
push
call
pop
mov
pop
add
add
jmp
clc
fldl
mov
add
mov
add
mov
add
movsl
add
pop
add
addr16
pop
in
movb
jecxz
out
add
shlb
add
add
add
push
clc
rcrl
rcll
nop
bound
in
lock
lcall
rcll
pop
lods
push
push
push
push
push
call
pop
add
xchg
out
add
les
add
add
into
xchg
enter
nop
mov
aam
add
les
addl
pop
push
jp
add
add
sahf
add
mov
add
pop
add
pop
push
lea
push
call
les
out
les
addr16
pop
into
mov
add
add
pop
movsb
add
add
add
roll
flds
mov
jne
mov
clc
pop
pop
push
push
call
sbbb
push
in
add
clc
pop
movsb
cmpsb
test
add
mov
add
add
pop
nop
into
out
xchg
mov
call
mov
xchg
mov
add
filds
add
xchg
fiadds
enter
in
add
jo
into
flds
nop
add
add
pop
push
popa
lea
add
lcall
push
push
push
push
push
push
call
neg
lods
mov
add
add
jle
add
mov
mov
mov
add
stc
pushf
rorb
push
shr
add
add
xchg
subb
add
add
pop
add
pop
mov
mov
jmp
mov
add
add
push
sub
dec
rol
add
pop
leave
push
rol
sub
pop
ret
push
push
add
pop
mov
push
push
lea
push
push
push
push
push
push
push
push
push
call
add
add
add
add
lods
std
movsl
add
xchg
add
and
movsl
jecxz
jno
add
movsb
int3
mov
mov
push
jecxz
int3
test
insb
lods
add
int
addl
fcomps
push
not
not
pop
push
push
push
push
push
push
push
push
call
add
jmp
add
pop
mov
shrb
cwtl
je
imul
mov
repnz
cwtl
jno
add
add
pop
testb
add
shr
not
pop
mov
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
call
addl
mov
add
add
add
add
add
push
movsl
hlt
mov
add
push
cli
lods
int
cli
call
jb
mov
push
mov
cmpsl
add
pop
sub
pop
mov
push
pop
mov
test
je
push
inc
pop
mov
push
rol
shr
pop
test
je
push
xor
inc
sub
pop
mov
push
dec
lea
lea
pop
mov
push
add
add
pop
mov
inc
push
not
pop
cmp
je
push
lea
push
lea
push
push
push
push
call
xchg
mov
mov
add
mov
add
fsubr
mov
add
add
xchg
arpl
lret
add
add
pop
mov
add
lcall
rolb
add
add
les
jmp
pop
cld
incb
add
add
add
test
add
flds
add
add
sub
pop
test
je
push
push
push
push
push
push
lea
push
call
add
in
add
ljmp
call
gs
add
add
add
sti
mov
cli
stos
push
scas
adcl
pop
mov
push
push
call
add
notl
in
lds
push
add
add
cli
xchg
add
mov
movb
jo
mov
add
mov
sub
pop
inc
push
add
add
pop
cmp
je
push
xor
xor
shl
xor
pop
test
jne
push
push
push
push
lea
push
push
push
push
push
push
call
lock
ja
add
iret
add
xchg
pop
jmp
add
je
bound
add
push
add
rolb
pushf
jp
in
fcomps
rclb
xlat
mov
shr
add
add
mov
mov
pop
test
mov
fadds
int
lret
add
lods
add
movl
add
test
int3
add
shlb
jns
add
mov
test
sub
pop
pop
push
lea
push
push
push
lea
push
call
jo
mov
mov
add
add
push
andl
add
cmpsb
bound
add
jmp
add
add
add
jmp
add
mov
jnp
out
add
add
imul
sub
pop
pop
push
push
push
push
push
push
call
cwtl
add
add
add
fwait
jp
add
mov
roll
out
fnsave
add
add
lcall
rcl
mov
flds
je
xchg
lahf
add
add
add
roll
ljmp
xchg
pop
xchg
cld
add
add
pushf
fidivrs
je
add
sub
pop
pop
push
lea
push
push
lea
push
push
push
call
pop
fisubrs
mov
push
fcmovnb
lods
out
mov
mov
add
push
leave
add
lds
mov
test
je
mov
add
push
add
icebp
test
pop
add
ja
enter
jge
rclb
jno
add
fcoms
pop
pop
leave
push
lea
push
push
push
push
push
call
fadd
mov
bound
jbe
xlat
dec
lds
add
pushf
add
mov
add
add
add
xchg
mov
add
lahf
aad
lcall
int
lcall
add
mov
add
add
imulb
mov
arpl
lcall
or
mov
push
xor
pop
inc
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
call
stos
add
add
int
add
shll
jmp
add
add
xchg
mov
mov
add
mov
add
sub
pop
cmp
jne
push
lea
push
push
lea
push
push
push
lea
push
push
call
jl
pop
add
aam
add
pop
add
push
add
cmpsb
mov
div
scas
jb
add
add
add
lcall
jle
mov
push
add
pop
test
je
push
push
push
push
push
push
push
call
fwait
add
mov
add
jge
aad
ja
add
rcrl
add
xchg
add
enter
xchg
stc
add
add
add
add
add
mov
js
push
fiadds
test
lods
add
add
test
add
stc
out
mov
sub
pop
mov
push
push
push
push
push
push
lea
push
push
call
add
add
add
add
add
pop
pop
in
add
push
add
jp
arpl
add
add
les
rolb
xchg
add
add
lcall
add
add
add
push
add
in
loopne
lcall
movb
loopne
test
call
ret
push
xor
shr
pop
mov
push
lea
push
push
push
push
lea
push
call
add
mov
add
out
fldl
add
sti
add
pop
add
add
lret
nop
test
roll
mov
loop
add
jmp
push
add
mov
add
sub
pop
test
je
push
shl
not
sub
shl
pop
mov
push
lea
push
lea
push
call
mov
int
xchg
mov
add
scas
int3
cwtl
int3
test
jmp
add
nop
jnp
lret
add
add
add
enter
testl
add
add
xchg
add
lcall
roll
push
push
push
lea
push
push
call
cld
add
push
mov
add
shlb
popa
pop
in
add
fildl
jns
add
rolb
jnp
in
shlb
stc
add
pop
add
in
call
test
std
jmp
push
push
call
jle
add
add
out
add
mov
std
cmpb
mov
mov
add
jo
mov
andl
filds
lcall
rclb
push
push
push
push
call
mov
cmpsb
add
add
add
and
jae
jbe
add
add
xchg
movsl
scas
call
add
add
add
repnz
pop
insb
lret
roll
cmpsb
add
xchg
add
shr
sub
insb
lock
pop
je
jnp
test
push
add
pop
add
aad
sub
pop
pop
pop
push
sub
pop
pop
pop
push
push
push
lea
push
push
call
xchg
mov
bnd
cwtl
adcb
add
out
scas
add
mov
adcb
out
rolb
jmp
mov
fiaddl
ja
mov
mov
push
add
push
xorl
push
pushf
in
add
test
add
add
je
rcrb
in
lcall
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
add
add
add
cmpsb
xlat
mov
in
mov
xchg
mov
mov
add
repnz
mov
cli
lret
call
xchg
add
jns
lahf
arpl
call
movsb
sub
pop
ret
push
push
push
push
call
imul
add
filds
add
mov
add
add
fiadds
out
add
mov
ja
jge
ret
popa
add
xchg
add
add
mov
in
enter
add
data16
rcr
add
add
add
push
xchg
add
lods
add
sub
pop
lea
pop
push
rol
sub
pop
pop
push
push
call
lds
add
add
push
in
add
pop
lcall
pushf
add
mov
xchg
test
add
add
xchg
jae
add
add
add
lcall
push
shr
shl
pop
pop
push
lea
pop
leave
ret
push
rol
pop
mov
push
rol
shl
pop
pop
push
shr
pop
pop
pop
push
not
add
pop
pop
push
push
lea
push
push
push
push
lea
push
push
push
call
mov
scas
stos
mov
push
jnp
js
mov
xorb
je
add
add
xchg
ljmp
add
mov
add
bound
nop
mov
popa
rolb
in
fcompl
push
lea
push
push
push
push
call
out
add
push
add
jo
movsb
jno
fdivrp
push
sti
loop
add
hlt
mov
xchg
mov
add
add
add
add
sti
scas
xchg
in
pushf
add
stc
ficoms
push
add
xchg
add
add
add
add
mov
push
rcll
pop
in
data16
in
lcall
or
out
jl
iret
out
jl
iret
scas
stc
iret
iret
out
lods
lret
iret
out
pushf
iret
iret
mov
mov
iret
iret
out
fmul
iret
out
iret
iret
iret
cmpsb
add
iret
mov
xchg
imul
roll
je
jae,pn
pop
sub
imul
lea
lds
in
fisubs
test
je
movsl
jne
jecxz
dec
sub
out
test
or
jnp
call
ljmp
xchg
in
sub
notl
push
jge
lock
cmpsb
std
dec
xor
outsb
mov
arpl
xchg
push
shll
push
adc
scas
jg
mov
or
dec
jb
add
lret
push
out
lods
dec
sahf
test
dec
push
shl
inc
push
xchg
fcoml
push
mov
pushf
or
xchg
mov
sar
je
fisttps
cmp
lea
lods
sti
jecxz
mov
mov
lods
movsl
or
add
std
shll
and
outsl
and
jle
loope
jns
loop
xchg
gs
popa
push
call
xor
xchg
mov
push
adc
xchg
mov
shll
dec
stos
inc
jnp
in
pmulhuw
mov
xor
and
jp
arpl
add
cmpsb
inc
cmp
jle
sbb
xor
divl
cltd
lods
out
and
aam
in
fs
orl
decb
sub
jg
fs
cmc
popa
in
lret
inc
pop
mov
fpatan
mov
and
scas
push
test
out
test
adc
loope
loope
sbb
sbb
inc
movsb
fbld
in
pop
xor
sbb
inc
pop
mulps
sbb
mov
jmp
or
rorl
pop
aam
rclb
cld
push
cmc
arpl
xchg
mov
repnz
pop
dec
adc
fcmovnb
je
sbb
imul
jmp
outsb
nop
cmp
stc
loopne
pop
je
xchg
pop
popf
add
out
ja
jne
mov
cmp
subb
int
jo
cmp
cmp
rcrl
mov
cmpsb
in
lahf
sbb
pop
inc
addr16
clc
mov
xor
push
mov
pop
sub
sbb
add
pop
aaa
mov
imul
pop
insl
push
lret
xor
or
aad
mov
add
pop
addr16
jl
femms
add
or
imul
mov
push
or
or
push
leave
fstl
fcmovnb
fldenv
out
es
jno
jb
push
out
xorb
xor
xchg
jns
mov
repz
jo
enter
push
cwtl
test
xchg
push
cmpsl
ret
aam
push
outsb
lock
imul
mov
das
scas
ljmp
sbb
dec
push
xor
mov
or
jp
lcall
mov
add
sahf
xlat
jne
push
add
xchg
inc
das
hlt
jg
dec
xorb
inc
jne
push
mov
rcr
mov
xor
xchg
mov
fwait
add
lret
test
and
icebp
and
adc
cmp
lea
int
push
gs
cs
xor
sub
std
lret
fcompl
test
inc
and
jbe
cmp
imul
jbe
push
into
hlt
outsb
pop
ljmp
cmc
fmuls
ljmp
sub
addl
push
test
out
adcl
pop
mov
xor
add
mov
and
dec
cmpsl
xchg
int
ret
scas
sarl
jns
rorb
fstp
xchg
jno
jnp
dec
mov
pop
jbe
push
aas
mov
ljmp
cmp
mov
dec
add
push
hlt
jb
xchg
clc
orb
dec
fldcw
cmp
lock
push
mov
pop
mov
cmp
es
and
lret
xor
out
mov
dec
sub
xchg
repnz
out
cmc
cwtl
and
aam
das
add
movsl
xor
push
aaa
sti
js
test
lods
pushw
pop
lock
or
xchg
mov
push
int
push
sub
fwait
mov
aas
pop
jg
xor
call
ss
test
mov
retw
rep
sbb
pop
dec
js
shll
inc
loop
xor
lret
jmp
test
mov
ljmp
add
cwtl
movsl
repnz
ja
orl
add
into
and
push
jnp
insb
stc
fstp
mov
push
jmp
aam
dec
sub
mov
jbe
cmpsl
cmpsb
test
push
loopew
xchg
shll
fstpt
adc
jb
sbb
and
dec
std
push
add
jne
lds
in
out
add
sbb
lea
rcr
outsb
imul
xchg
inc
xchg
sbb
sub
jle
sahf
xchg
ss
ds
mov
cld
push
or
stos
mov
lahf
adc
jge
ret
inc
mov
bound
sbb
xor
in
aam
mov
pop
out
xchg
lods
repz
lods
inc
pop
ja
stc
jne
mov
xchg
fists
gs
daa
mov
xor
movsl
and
and
mov
xchg
jbe
adc
cmp
jp
push
mov
push
sti
pop
fsubrl
cld
ret
cmp
div
popf
sarl
bound
sarl
lds
movsl
insb
or
or
aam
inc
adc
mov
frstor
test
lods
sbb
iret
jo
xchg
jne
fs
pop
aaa
xchg
arpl
sub
mov
pop
inc
repz
xchg
testl
sub
sub
aam
jp
mov
negb
insl
test
fsubl
push
stos
cmp
jo
movsl
dec
inc
dec
arpl
int
test
push
repz
sbb
jne
int
imulb
jge
jne
xchg
mov
or
repz
mov
dec
xorb
add
jl
inc
mulb
adc
inc
fidivrs
jae
dec
shr
lahf
dec
xchg
pop
arpl
mov
fidivrs
imulb
test
cmp
notb
stc
push
out
test
fistl
and
out
adc
mov
iret
lock
test
mov
nop
cli
xor
mov
in
rol
pop
lahf
xchg
mov
in
mov
jns
in
xchg
pop
mov
punpckldq
or
and
xor
dec
fsubr
es
jb
pop
pushf
push
push
push
out
mov
cmp
cmp
xchg
daa
pushf
push
push
mov
xor
inc
ja
mov
cltd
or
sbb
xchg
jae
xor
adc
popa
pop
mov
icebp
insl
jb
xchg
mov
into
jbe
dec
xchg
xchg
push
enter
popa
fisubrs
mov
subl
repz
nop
cmp
enter
pop
jmp
adc
rol
push
and
or
dec
scas
hlt
movsl
movsb
stos
xchg
test
sbbb
or
hlt
and
sbb
insl
mov
idiv
and
inc
vgatherqpd
repnz
adc
push
pop
clc
test
in
rcll
xor
add
arpl
movsb
push
sbb
in
lret
mov
cmp
enter
test
bnd
mov
mov
repz
sbbl
and
arpl
bound
dec
sub
mov
sbb
rclb
or
mov
xlat
and
sbb
mov
bound
es
xchg
sub
jmp
xchg
orl
lcall
mov
cmp
sbb
cli
jno
cmp
movsl
loope
stos
in
mov
test
and
bound
jecxz
imul
jae
in
jno
xor
xchg
lret
loop
fistl
mov
xchg
xchg
ret
mov
scas
adc
cs
xbegin
adc
notb
mov
test
jbe
xchg
mov
xchg
mov
addl
ds
sub
stos
adc
and
roll
fdecstp
in
es
test
sub
or
push
into
push
rcl
xchg
inc
mov
and
ret
cmp
sub
pop
xor
push
ret
stc
loope
mov
js
test
dec
mov
xor
push
mov
sti
sbb
dec
xor
fistpl
mov
push
xchg
xchg
nop
call
int
jp
mov
xchg
cmpb
notb
push
jnp
mov
adc
inc
push
cmp
mov
popa
inc
cmp
arpl
fwait
adc
pop
dec
xchg
fstpl
rol
pop
dec
lret
pop
xlat
xlat
adc
push
adc
aas
cmpsb
test
jbe
outsl
inc
sub
xor
pop
lcall
mov
jnp
aas
jae
sbb
lea
mov
idivw
shl
cltd
outsb
les
shrb
outsb
divb
adc
stos
stos
mov
mov
mov
iret
enter
popa
cmp
sbb
push
add
and
mov
sbb
push
add
cld
mov
insb
push
shll
lods
andb
and
les
popa
out
mov
cmc
sub
shrb
or
pop
sbb
inc
mov
mov
xchg
test
mov
test
push
push
mov
rcll
cmpsb
jge
repz
movsl
xchg
inc
jmp
insb
pop
sbb
and
add
add
aam
mov
aas
nop
xor
dec
sbb
lahf
scas
or
lret
mov
cld
jne
jbe
into
inc
push
xor
xchg
sub
inc
push
movsb
adc
repnz
stos
sub
dec
dec
inc
and
dec
push
push
outsb
sbb
push
dec
aas
incl
mov
cmp
and
inc
lea
test
mov
xchg
pop
aas
insl
mov
cmp
negl
jl
pop
inc
and
jnp
jmp
fwait
sub
jge
outsl
stos
or
jb
arpl
jecxz
cmpsb
push
add
test
out
inc
mov
cmp
sub
mov
push
ljmp
out
push
adc
adc
test
xchg
jne
ds
mov
aad
fstpl
movsl
mov
xchg
in
pop
loop
adc
jg
movsb
add
mov
push
cmp
mov
stos
pop
xor
popf
mov
push
pusha
sbb
out
hlt
arpl
mov
scas
push
inc
das
mov
jecxz
jl
xor
dec
js
mov
add
imul
jmp
ret
cmp
cwtl
lods
cmpsb
xor
mov
adc
lahf
aam
ficoms
bound
push
push
dec
sbb
loopne
rcrb
xor
aas
adc
lret
fistps
xchg
in
clc
call
push
adc
sub
push
or
xchg
rcl
mov
pusha
mov
fdivrp
push
ss
xor
adc
push
adc
xchg
loop
dec
inc
jle
cmpsl
or
hlt
ljmp
jae
pop
fcmovnu
inc
xchg
cmp
sti
mov
data16
aam
gs
mov
xor
scas
xchg
insb
mov
sbbb
pop
mov
dec
mov
sbb
and
das
xchg
les
mov
xchg
add
and
pop
jae
dec
push
movsl
test
jle
xchg
imulb
xorb
xchg
push
js
xlat
sub
cmpsb
fwait
hlt
jno
adc
mov
cmp
mov
jp
lock
mov
mov
scas
rcll
dec
or
in
gs
pop
sub
ljmp
mov
call
lret
cmc
daa
fnsave
imul
adc
pop
lods
xchg
idivb
lds
xorb
dec
fdivr
or
sbb
xacquire
in
and
pop
scas
and
adc
movsb
imul
cmp
jno
data16
sbb
lock
mov
cld
clc
into
test
inc
push
popa
stc
xor
pop
je
sub
mov
jge
jg
jb
inc
shll
popa
jge
pop
cmp
insb
or
mov
stc
pop
cmp
or
mov
ljmp
jae
hlt
mov
push
in
inc
dec
outsb
loop
lret
cmp
aaa
xor
lcall
movsl
xchg
inc
inc
push
push
fimuls
jmp
ret
lods
mov
aas
cmpsb
sbb
add
ja
gs
outsb
das
test
xchg
cltd
aaa
jbe
jle
xor
in
jb
add
push
and
adc
sbb
sbb
inc
or
inc
mov
adc
arpl
rorb
popf
gs
sarb
xchg
lods
mov
rcl
xchg
lods
xchg
ljmp
push
movsl
cmp
roll
fstpl
cmp
in
dec
cmp
in
shll
pop
add
es
jb
jle
test
nop
imul
mov
rclb
scas
fs
movsb
nop
cmc
in
xchg
mov
push
popf
cltd
in
mov
sahf
cmpsb
cmp
jns
pusha
arpl
sbb
out
sub
pop
mov
add
cmp
je
lock
dec
xor
enter
xor
lock
jo
xchg
cmp
mov
loopne
mov
dec
sbb
cli
ja
call
in
mov
outsl
mov
lea
cli
adc
inc
push
inc
ss
ja
xchg
je
add
icebp
xor
addb
and
mov
xor
xchg
call
adc
mov
mov
iret
cmpl
xor
enter
xchg
mov
inc
das
fcompl
mov
jae,pt
cmp
sub
jno
mov
cli
std
inc
movsb
push
sbb
nopl
jns
fisttps
adc
ds
mov
xor
fldl2e
gs
add
outsl
mov
in
in
loope
jmp
and
scas
pop
mov
insl
nop
and
dec
and
fnsave
xor
out
push
jge
test
shlb
sub
jae
stos
or
pop
rcrb
sub
cmpsb
sub
je
movsl
shl
mov
sub
fwait
ret
inc
adc
mov
inc
adc
sub
adc
xchg
scas
inc
push
out
adc
fdivrs
rcrl
cmc
lods
in
and
mov
sbb
adc
add
arpl
xchg
mov
jge
adcb
mov
or
andb
adc
addr16
ror
out
pusha
sub
sbb
in
rol
xlat
sbb
rcl
nop
mov
addl
jmp
jl
les
sbb
pushf
add
fxch
sti
idivb
out
adc
js
or
ljmp
jns
and
ficomps
sub
add
gs
fistpll
cmp
inc
cwtl
adc
sub
rclb
in
cmp
inc
ret
nop
rcll
sti
jne
push
jbe
jp
mov
xor
xchg
add
mov
xor
jge
pop
mov
shll
js
jmp
pop
dec
adc
shlb
pop
sbb
hlt
inc
sbb
loope
fbld
hlt
int
mov
cmpsb
add
cltd
xchg
je
add
daa
jmp
addr16
js
sbb
in
cmc
push
ret
sub
xchg
test
sub
xchg
std
in
movsl
shl
stos
xchg
dec
out
rorl
je
sti
adc
ljmp
and
jo
addr16
add
fisttpl
pushf
es
sub
cmpsb
mov
mov
out
sbb
mov
shr
ret
lret
cmp
sub
nop
xchg
repz
test
js
dec
push
mov
cmp
sub
fcompl
and
mov
xor
xchg
pop
dec
cmp
mov
sub
jl
dec
xor
cltd
pop
inc
xchg
xchg
aad
jle
frstor
in
pop
cmp
xchg
icebp
xor
or
pop
mov
idivl
cwtl
les
sahf
or
test
push
in
push
lcall
jg
loop
scas
sbb
jb
leave
jg
cld
lock
jle
jl
cmpsl
inc
mov
scas
pushf
dec
inc
insb
inc
int
xchg
nop
shrl
jbe
inc
lahf
and
mov
xchg
dec
pop
dec
inc
jmp
jbe
fidivrl
add
push
cmp
inc
rolb
bound
sub
cmc
aas
dec
imul
push
and
push
faddl
outsl
sub
cmp
test
adc
inc
mov
in
xorb
faddl
fsubr
push
sub
test
push
sub
ficomps
lahf
out
mov
int
push
rorb
mov
fucom
push
or
dec
icebp
cmc
cs
loopne
inc
sbb
mov
pusha
in
jb
je
jae
outsb
enter
jp
cmp
dec
add
xlat
sub
int
in
mov
maskmovq
imull
mov
mov
cmpsl
mov
lock
push
pop
imul
imul
in
dec
jbe
jae
mov
cmp
xchg
sahf
mov
dec
leave
pop
ret
adc
imul
movsb
pop
mov
and
ljmp
push
or
pop
mov
jle
mov
mov
pop
mov
int
loop
pop
cmp
mov
cwtl
dec
adc
imul
outsb
cmp
inc
je
inc
adc
outsl
dec
test
pop
inc
arpl
dec
cmp
mov
cs
roll
movsb
adc
jecxz
scas
mov
mov
cmp
loopne
mov
or
push
lahf
mov
mov
lea
icebp
fcmovnu
xor
ljmp
hlt
xor
popa
iret
mov
fimull
push
cltd
dec
out
mov
push
xor
mov
sub
cwtl
faddl
mov
cli
jae
fnstenv
insl
xchg
jne
iret
dec
ja
push
sbb
sub
xor
pop
or
mov
cld
xlat
int
cmp
test
mov
lods
dec
mov
lcall
mov
adc
pop
push
in
mov
xchg
pop
stos
outsl
add
xor
jo
aam
and
mov
lods
mov
jno
aam
mov
inc
add
andb
and
fcmovnbe
int3
sbb
ljmp
repnz
test
jge
mov
gs
in
daa
bound
les
es
lahf
push
adc
push
pop
push
or
add
ja
mov
lcall
mov
sti
insl
pop
jge
clc
mov
jne
rcll
sbb
and
shlb
lret
cld
in
out
das
rcrl
hlt
xchg
test
das
frstor
mov
mov
outsl
and
pop
xchg
add
lods
gs
decl
xchg
xchg
mov
adc
add
mov
sub
jmp
lods
aaa
imul
xchg
popf
mov
or
cltd
pop
pop
adc
push
xor
aas
sub
adc
xchg
das
cli
or
enter
push
sahf
icebp
movsb
adc
dec
imul
xchg
push
shll
pop
sub
sbb
sarl
jno
lods
inc
idivl
aas
and
cwtl
lahf
jmp
mov
dec
mov
add
call
pop
sbb
ja
push
sti
clc
in
pushf
popf
pop
jecxz
jb
jb
ljmp
sbb
mov
lahf
cmp
mov
imul
jo,pt
mov
sbb
lods
lret
imul
inc
gs
adc
inc
lret
or
lahf
push
aaa
daa
cmpsl
insb
pop
mov
jl
ror
mov
js
adcb
ror
lcall
or
imul
outsl
fsubl
mov
cmpsl
sub
jge
push
mov
xchg
or
dec
xor
inc
mov
loop
ja
push
mov
popa
dec
push
js
lret
shrb
arpl
sub
lret
mov
in
pop
jns
mov
imul
jmp
pop
add
xor
fst
and
push
sbb
cmp
cmc
xchg
jbe
cmp
sbb
ds
lahf
xchg
cmpsl
rorb
lret
pop
cmp
xor
lods
mov
pusha
xchg
in
jecxz
test
test
mov
jne
sub
inc
mov
cmp
es
xchg
insl
out
xchg
or
inc
adc
std
rorl
push
sub
scas
inc
cli
cmpsl
add
and
mov
mov
mov
test
add
push
and
xchg
insb
or
and
je
pop
xchg
mov
inc
daa
dec
add
xchg
faddl
jl
clc
cmpsb
inc
lds
mov
je
sbb
xor
fisubrs
jno
inc
bound
push
cmpsb
repz
shll
subb
fidivrs
dec
adc
cmp
stos
dec
mov
outsb
in
push
fs
mov
add
mov
mov
lods
ja
mov
pop
dec
lods
sub
fldenv
jns
ret
push
or
test
dec
xor
movsl
inc
xchg
aaa
sar
es
or
inc
lods
mov
lcall
inc
popa
mov
call
xor
cmpsb
dec
movsl
push
pop
jecxz
popf
mov
cmp
int3
push
xor
out
push
das
pop
in
mov
mov
or
mov
or
pop
and
cmp
aam
cmp
ja
mov
in
sub
mov
jmp
dec
xor
jl
jmp
pusha
push
pop
xchg
mov
and
jno
xchg
out
xchg
adc
push
sub
mov
sti
dec
cs
movsb
es
test
cli
out
bound
push
rclb
in
add
and
pop
call
jno
pop
or
lret
movsbl
call
push
rcl
mov
out
in
push
add
sub
clc
xlat
sub
or
sahf
les
outsl
or
lret
lods
idivb
mov
orl
jg,pt
ret
mov
aas
mov
jne
push
js
ds
push
pop
popf
scas
imul
stc
or
xchg
enter
xor
add
ja
cmp
mov
sub
jo
int3
inc
adcb
dec
popf
xor
dec
ljmp
inc
jp
inc
addb
ja
bound
or
loope
push
push
cmpsb
xlat
int3
dec
scas
adc
hlt
xor
push
jge
inc
or
cs
popl
shll
aam
and
mulb
jb
repz
rolb
cld
fsubr
xorb
xlat
pop
fs
popa
sbb
aaa
or
xlat
stc
push
pop
das
xchg
test
push
popa
test
add
repz
inc
sbb
imul
in
push
repz
pop
insl
movsb
xor
push
cwtl
daa
adc
faddl
mov
shl
rclb
iret
push
leave
cli
or
int3
jge
and
scas
pop
cmp
and
push
shlb
cmpsb
xor
push
stc
dec
cmp
cld
mov
incl
and
mov
push
mov
dec
inc
xor
pusha
pop
daa
stc
nop
push
adc
xchg
mov
cmpsl
rcrb
xchg
loope
sarb
xchg
push
pop
pop
adc
inc
movsb
jg
mov
scas
repz
cmc
out
xchg
cmpsl
inc
out
jl
rorl
cmp
pushf
test
aam
int3
jmp
ret
out
push
stos
jg
sbbb
adc
pop
testb
imul
jbe
cmpsl
lds
lods
inc
adc
stos
cmpsl
inc
loope
mov
and
sbb
dec
cmc
lods
xchg
jmp
xchg
jbe
xor
roll
shr
repz
sbb
add
les
mov
jne
add
mov
jl
and
adc
push
daa
push
je
inc
rorb
cmp
mov
pop
jle
in
and
mov
stos
repnz
inc
ror
cmp
dec
jo
divl
mov
cmp
mov
aas
ffree
mov
pop
imul
mov
pop
mov
or
sub
xchg
ljmp
in
hlt
jne
push
lret
fwait
pop
pavgb
push
pushf
or
cmp
sarb
and
das
xor
adc
ss
loope
fucom
rorb
ret
add
jecxz
mov
mov
dec
shl
cmp
aaa
pusha
and
or
fdiv
rorb
dec
xchg
mov
lods
xchg
fs
icebp
psllq
and
rol
inc
pop
rcr
add
mov
and
sar
test
clc
adc
rclb
lea
jne
outsl
gs
es
xlat
outsb
loopne
pusha
inc
in
out
jb
loope
clc
sysexit
ds
test
ficoms
sub
loope
and
adc
add
mov
int3
xchg
sbb
and
jbe
xor
movsl
adc
push
and
iret
scas
inc
or
dec
xor
sub
aas
or
lods
lock
push
pushf
lahf
mov
inc
dec
or
jg
push
push
sub
sbb
push
inc
iret
int3
stos
movsl
mov
pop
push
sbb
pop
outsl
stc
mov
mov
test
push
nop
mov
mov
cmp
outsl
cmp
mov
pop
pop
pusha
pop
imul
sbbb
test
ror
jecxz
mov
adc
push
scas
mov
push
in
mov
jg
inc
ja
inc
dec
xor
add
sub
xchg
fwait
inc
and
add
jecxz
clc
add
jne
mov
sbb
ret
jae
test
or
mov
imul
cmp
outsl
mov
lret
ficoml
inc
test
mov
cltd
repz
fucomp
lcall
ds
adcb
popa
in
or
in
sbb
in
push
lcall
in
push
or
pushl
mov
add
jno
inc
or
inc
or
add
push
adc
inc
adc
add
lar
pop
enter
jns
mov
lods
push
das
inc
mov
dec
fdivp
or
jp
stos
dec
mov
push
sbb
aad
lret
mov
scas
or
mov
cmc
ds
leave
pop
movsb
sti
or
lods
ret
lock
ds
mov
push
test
test
ret
mov
outsb
sahf
or
mov
fwait
clc
jp
stos
pop
dec
loop
cmp
jp
sub
lock
fiaddl
xchg
mov
and
xchg
aam
int
ret
rorl
push
ds
ret
in
dec
mov
dec
jae
aas
stos
xchg
sub
pop
outsl
adc
xchg
push
cmpsb
dec
mov
out
mov
ss
dec
pop
scas
xor
fstpt
xchg
daa
sti
mov
xchg
mov
loope
es
sub
stos
es
mov
jg
mov
loop
push
adc
jmp
push
fists
fidivrl
lahf
test
pushf
sbb
xor
push
lds
dec
imul
outsw
push
mov
pop
adc
sbbb
test
dec
xchg
insb
jge
mov
push
xchg
adc
in
xchg
mov
rcrb
mov
in
sbb
dec
test
push
in
dec
dec
gs
arpl
popf
inc
xor
pushf
and
mov
push
push
xlat
outsb
movsl
lea
loopne
jmp
aad
cli
out
ret
sub
pop
pushf
pushf
dec
cltd
inc
into
inc
aas
mov
mov
xchg
push
push
dec
in
mov
xchg
data16
push
fwait
xchg
mov
push
icebp
lods
dec
mov
arpl
sub
enter
sbb
in
je
rcrl
pop
or
push
lret
es
inc
xchg
ds
loop
fdivr
jo
das
and
inc
fcompl
push
xchg
or
lcall
out
xchg
inc
cwtl
mov
addb
enter
dec
insl
lret
sahf
cvtdq2ps
jmp
jge
inc
lds
lods
out
outsl
mov
lods
ja
jp
mov
xor
iret
cmp
inc
loopne
xchg
loop
sub
mov
stc
test
pop
add
push
cmc
aaa
lea
fsubp
jnp
test
iret
push
jecxz
iret
push
mov
inc
jmp
cmp
mov
pop
inc
mov
sbb
dec
sub
iret
inc
cmp
pop
shll
loope
inc
inc
push
fstpl
daa
mov
iret
pop
push
pusha
aas
popf
fisttpll
push
jmp
in
pop
and
mov
and
imul
jo
popf
iret
xchg
test
inc
std
add
jmp
inc
push
mov
mov
dec
and
cld
add
sub
sti
xchg
mov
subb
in
adc
mov
orl
push
xorl
js
push
testl
sub
xor
cmp
fsubs
fidivl
mov
cmpb
mov
sbbb
xor
dec
idivl
pop
sub
cmc
ret
jae
dec
pop
pop
dec
test
orb
add
mov
xor
test
lcall
es
or
or
movsb
pop
push
adc
test
dec
jne
inc
add
je
lcall
and
xchg
mov
or
cmp
mov
inc
ds
arpl
rcrb
lcall
out
mov
xchg
jae
out
in
mov
and
dec
pop
data16
jecxz
mov
add
std
xor
aas
and
ds
fcomp
lds
sahf
fld
add
jmp
dec
xchg
push
jp
inc
imul
add
leave
mov
lods
and
push
jbe
rolb
xchg
test
mov
jae
pop
out
sub
mov
enter
mov
dec
aaa
mov
jg
dec
shlb
xchg
and
jmp
mov
sti
bound
jae
mov
leave
frstor
dec
xor
mov
mov
movsb
pushl
loop
pushf
popf
cmp
lods
sar
dec
sbb
fwait
in
lock
popa
cmp
or
mov
rcll
sbb
pop
push
cltd
cmpsb
sbb
outsl
lds
mov
inc
sbb
pusha
cmc
data16
push
imull
mov
inc
lcall
and
inc
ja
repnz
xor
dec
int3
and
xor
cmpb
imull
leave
xchg
adc
stos
shlb
rcl
outsl
ret
mov
shll
shrb
xor
call
adc
gs
test
add
out
jb
xor
pop
in
fcomip
pushw
cld
mov
mov
repnz
or
sahf
mov
outsb
not
add
cltd
jl
and
cli
loop
les
dec
das
cwtl
cwtl
cmp
je
mov
pop
or
and
adc
popa
je
or
cmpsb
or
jb
xchg
jecxz
inc
mov
or
and
and
frstor
dec
jnp
xor
fidivs
mov
clc
or
dec
sti
fwait
cld
fldcw
push
push
xor
js
push
dec
cld
lret
adc
lock
mov
mov
aad
pop
enter
out
push
sub
pushf
mov
jge
sub
mov
cmp
rcl
jae
or
in
jl
add
ret
sub
test
and
sub
insb
sub
mov
jo
movsb
jae
ja
incl
inc
lods
or
call
pop
sub
sbb
scas
hlt
iret
sbb
enter
mov
cld
fidivs
loop
icebp
std
popa
shlb
and
int
inc
stos
movsl
pop
adc
pop
jo
adc
push
out
xor
sarb
or
out
into
ret
lds
dec
clc
lds
inc
popa
mov
addr16
xchg
or
xor
repnz
ljmp
mov
xchg
subl
fisttps
mov
icebp
das
imul
inc
test
lods
or
filds
pop
cmpsb
cmp
mov
test
int3
mov
iret
mov
adc
cmc
hlt
adc
or
jg
adc
xlat
xlat
adc
cwtl
add
or
sar
jmp
je
std
jnp
adc
fwait
sub
pop
jecxz
adc
in
push
ja
adc
lahf
mov
ret
xchg
mov
mov
mov
jg
ja
pop
xchg
or
dec
dec
leave
jle
sbb
xlat
jno
fisttpl
outsb
jg
pop
mov
shll
push
test
dec
pushf
rcll
sbb
pop
ja
movsb
ja
mov
ss
mov
mov
aam
cmp
mov
int3
sbb
inc
cs
shlb
out
shl
mov
pop
xchg
leave
mov
or
clc
inc
into
out
test
xor
sbb
test
stos
xchg
mov
cmp
xchg
fs
or
movsb
adc
sbb
stc
ret
adc
sbb
xor
jl
pop
rcll
aam
ljmp
loopne
or
adc
jb
loope
jmp
fwait
xchg
jecxz
aas
fcom
push
adc
push
dec
inc
rcrb
push
bound
insl
decl
mov
mov
daa
std
pusha
scas
add
or
add
jecxz
xchg
dec
pop
stos
xor
mov
mov
mov
or
xorl
outsl
adc
mov
ss
leave
xchg
mov
jb
icebp
lods
test
shl
sbb
lahf
repnz
nop
loope
repz
cmp
fistpl
mov
push
jno
aam
jo
mov
mov
test
xor
out
imul
and
ss
push
mov
mov
jle
push
icebp
mov
and
rcrl
mov
sarl
fsub
or
hlt
xchg
push
sub
ret
aad
xchg
loopne
test
popa
in
pop
xchg
xchg
jne
and
aas
or
push
aam
sub
stos
add
dec
mov
faddl
xor
addr16
movsb
jg
sti
movsl
add
or
sub
jg
cmp
mov
and
std
dec
inc
out
enter
xor
mov
fidivl
out
xlat
mov
inc
sub
sub
dec
and
cltd
fidivrl
pusha
ret
and
ljmp
mov
jbe
add
jl
int
xchg
xchg
sbb
sub
xchg
mov
add
ss
xor
leave
or
daa
testl
ja
mov
stc
loope
fidivl
lods
mov
out
mov
xor
lock
in
arpl
inc
sub
rcrb
jns
ds
rclb
sbb
inc
mov
and
xor
test
in
and
jne
push
popf
sbb
dec
ret
jnp
mov
sbb
pop
and
add
ljmp
pop
ret
xor
inc
dec
call
jae
push
xor
cli
add
std
andb
cld
xor
fs
loope
xor
mov
lahf
outsb
sbb
inc
xlat
sub
push
sarb
xor
popa
jp
adc
push
nop
push
jmp
or
enter
nop
mov
pop
mov
dec
ret
popf
xor
jns
mulb
enter
mov
cmp
popa
lret
mov
mov
pusha
loopne
push
adc
mov
xor
cmp
je
adc
jno
mov
mov
cmp
popf
inc
test
pop
adc
lods
and
add
mov
iret
cmp
outsb
mov
sbb
addr16
and
mov
movsb
pushf
fldl
pop
in
push
cmc
pop
pop
pop
mov
jno
in
inc
xchg
mov
test
xchg
mov
jmp
push
mov
lds
cwtl
sbb
mov
orb
mov
ds
fisubrs
jmp
mov
fwait
inc
xor
rorl
sti
lahf
idivb
push
push
leave
lea
or
popf
mov
mov
or
iret
mov
cltd
mov
sub
or
push
or
mov
int
dec
inc
out
pusha
cmp
xchg
or
popf
add
lock
lods
mov
cmp
adc
xchg
jno
fadds
xor
push
mov
outsb
cmp
adc
rol
scas
imull
and
ds
inc
js
dec
mov
inc
into
cmc
pop
cmp
jp
push
mov
insb
mov
jecxz
push
add
pop
jb
pop
mov
pop
leave
dec
sub
jmp
adc
and
fwait
sub
test
push
jmp
loopne
stos
insl
hlt
push
sub
fwait
mov
movsb
outsl
xlat
dec
arpl
push
mov
mov
insl
lcall
jecxz
jno
gs
lahf
jnp
or
stc
jge
or
cmpb
jno
pusha
sti
scas
fcmovbe
dec
loopne
or
arpl
pop
faddp
shrb
jmp
mov
lahf
fs
and
fidivrl
or
pop
dec
cmp
jge
mov
mov
hlt
popf
inc
in
mov
cltd
jns
inc
idivl
jp
jecxz
mov
jl
stos
lock
in
fnstsw
jo
xor
mov
or
inc
sbb
jp
lahf
jo
inc
jbe
pop
addb
and
daa
dec
out
cmp
mov
pop
inc
mov
and
mov
cmp
sti
sbb
aas
negl
hlt
and
xchg
repz
push
nop
leave
addr16
push
mov
xor
mov
mov
xchg
jo
xchg
subb
and
xchg
mov
dec
repz
repnz
cmpsl
int3
loopnew
jae
out
jl
pushf
imul
fsubp
inc
fidivl
xlat
aad
lds
or
arpl
fmul
cmp
aas
aas
or
mov
adc
lret
sub
clc
sub
jl
sbb
les
cmp
les
inc
stos
cmp
loope
inc
cltd
jl
push
push
and
andb
mov
sub
aaa
das
inc
jb
jbe
push
pop
lds
cmp
popa
mov
adc
xchg
xorb
mov
sbb
fistps
movsb
xchg
add
lahf
mov
mov
hlt
sarl
into
jnp
push
addl
insl
dec
or
popa
mov
inc
inc
mov
in
out
push
mov
and
push
fldl
mov
or
mov
pop
inc
xor
cmp
mov
jo
add
or
dec
mov
leave
mov
hlt
and
xor
add
es
js
jl
ljmp
mov
jb
stc
lods
addr16
cmpl
out
and
int
and
jo
xchg
out
jbe
or
dec
scas
in
dec
adc
outsl
test
mov
ret
sbbb
sub
dec
fidivrl
lods
sbb
jmp
mov
add
inc
mov
addl
sub
push
lods
pop
jp
xor
xor
inc
in
dec
jbe
cmp
mov
inc
or
clc
cmpsb
adc
cmc
cmpsl
sti
xor
mov
sub
lock
jae
dec
push
fwait
mov
pop
fs
inc
push
loopne
clc
inc
loop
imul
pop
jne
jne
dec
mov
sub
imul
test
inc
out
sub
gs
mov
or
add
dec
sbb
stos
adc
mov
mov
js
pop
cmpl
movsl
inc
stos
ljmp
out
cmpsb
mov
pop
or
jl
fstpl
mov
fidivrl
les
push
fstpl
repz
xchg
push
stos
pusha
jbe
or
jge
cmpsb
adc
or
out
outsb
jle
scas
jg
pop
cmpsl
mov
xchg
mov
aam
ret
adc
sub
mov
out
mov
jmp
push
jnp
stos
push
jecxz
sahf
lret
gs
pop
sbb
data16
inc
scas
sub
cmpsb
jp
adc
movsb
daa
addr16
push
scas
jae
inc
ficoms
repz
mov
outsl
roll
outsb
adc
sub
fnstcw
daa
clc
xchg
shlb
mov
sarb
sub
movsl
in
push
adc
repz
in
repnz
sbb
test
das
or
scas
cmp
int
ljmp
inc
pop
bnd
clc
sbb
sub
and
fxch
addr16
push
push
mov
push
aaa
mov
dec
sub
lret
and
mov
test
adc
sbb
sahf
jbe
sub
jb
sub
jo
push
sbb
fsubl
data16
fsts
push
or
push
ss
shll
sahf
rep
ds
mul
push
les
mov
cld
mov
cs
in
jmp
mov
in
sub
loopne
jno
or
bound
xchg
pop
shll
jno
outsl
adc
test
push
les
adc
aad
ds
jne
popa
jno
test
inc
pusha
push
push
sbb
mov
pop
mov
clc
cmp
movl
mov
in
and
out
int3
sub
lahf
dec
pop
xor
push
rorb
sub
gs
add
sub
mov
cmp
imul
dec
and
mov
aam
in
insb
push
push
cmp
xlat
and
xlat
lret
cmp
jmp
mov
xchg
outsb
shlb
push
aaa
push
shl
ret
and
xlat
adc
fmuls
adc
enter
dec
jp
cmp
lea
pushf
jg
lret
icebp
push
lods
pop
lret
and
sahf
leave
mov
fs
push
jp
mov
test
imul
adcl
iret
shll
jno
push
in
ja
jno
les
mov
mov
lret
outsl
or
mov
mov
in
and
aad
dec
lcall
jecxz
aaa
out
xchg
mov
pop
jbe
cs
out
push
dec
cmp
mov
popf
jecxz
jne
mov
xor
cmp
mov
ret
fnstcw
ret
inc
test
mov
sbb
mov
es
outsl
insb
xchg
sub
outsb
cmpsb
out
andps
pop
nop
data16
push
inc
inc
mov
add
ret
jge
cmp
xchg
scas
or
in
bound
xor
dec
adc
popa
cld
outsb
aas
push
or
xchg
add
fistpl
sbb
push
in
idivl
jo
sbb
orb
or
stos
jmp
je
rcr
mov
pop
mov
rcrl
mov
es
in
lods
adc
jge
gs
adc
cli
inc
dec
stc
movsl
daa
mov
adc
push
inc
push
adc
add
arpl
sub
add
dec
push
imul
hlt
pushf
pop
lea
and
xor
jo
lods
cmp
mov
jg
in
mov
mov
repnz
or
lds
mov
and
jl
shr
xor
adc
addr16
int3
rep
icebp
and
shr
mov
push
cmp
push
test
lret
mov
sarb
fstp
push
push
cmp
dec
icebp
and
sbb
or
insl
popf
popa
add
les
and
movsl
xchg
add
inc
xchg
repz
sbb
cld
dec
cmpsl
insl
sbb
and
push
lret
jle
hlt
xor
sbb
imul
cmp
push
mov
pmaddwd
into
push
mov
fisttpll
imul
call
cs
mov
sti
jae
arpl
xchg
jmp
loope
jge
in
mov
jne
sub
jl
ljmp
cmp
pop
idiv
dec
push
mov
xchg
jg
mov
jl
test
insl
in
sti
lds
das
fcomip
xchg
lcall
sub
mov
adc
xor
test
mov
daa
stos
push
inc
loope
aam
push
sbb
mov
roll
sub
pop
inc
out
jo
sub
push
push
repz
sub
clc
enter
push
scas
add
lds
jmp
leave
xor
cmc
inc
test
popa
stos
scas
push
add
mov
in
jmp
mov
outsb
sub
fdivl
mov
mov
pop
loope
xchg
sahf
or
sub
mov
mov
stos
jge
lcall
cltd
dec
dec
jo
call
pop
jg
shlb
sbb
rclb
cmp
std
mov
pop
sub
mov
loopne
fs
je
lcall
pop
mov
pop
or
jo
loop
cmp
pop
cwtl
test
mov
testl
sbb
jnp
push
dec
jae
test
mov
daa
mov
js
call
inc
insl
xchg
loopne
push
lret
jge
cmp
push
stos
push
lea
dec
xor
jbe
in
test
add
imul
mov
push
insl
sbb
rclb
or
push
clc
test
sub
popa
jecxz
push
sbb
pushf
jmp
sbb
repz
lahf
imull
add
jbe
insl
jg
push
cwtl
inc
in
mov
sbb
pop
leave
dec
jno
fs
sti
rcl
push
push
into
into
mov
sbb
loope
xor
and
insb
sahf
rorb
adc
aas
in
mov
in
sub
cmp
mov
std
push
lods
test
arpl
cltd
mov
xchg
aaa
mov
pop
xor
and
mov
insl
add
rcrb
cmp
test
movsl
lea
inc
rolb
movsb
sbb
mov
pop
lods
rclb
add
das
jg
mov
xorb
push
insl
aaa
inc
roll
dec
aas
cltd
rolb
lods
jb
subb
call
mov
stc
push
cwtl
sbb
mov
push
dec
imul
out
ljmp
pop
sub
mov
ret
pushf
add
cmpl
or
xor
test
mov
jmp
or
xlat
mov
loope
sub
imull
mov
or
sub
add
sbb
call
and
jne
nop
jbe
inc
cmpsl
or
subl
mov
cmpsl
enter
ret
push
jne
add
popa
sarb
popf
inc
fimuls
inc
test
and
je
dec
loopne
ds
rorl
push
test
xchg
fs
adc
sub
xor
jle
pop
addb
cmp
push
or
or
outsb
out
cs
jmp
mov
into
ds
cs
incb
mov
idiv
mov
add
notb
icebp
adcl
add
aam
dec
sarl
repnz
cs
scas
sahf
mov
ret
fcmovnbe
mov
dec
cs
iret
andb
sti
push
jbe
dec
mov
outsb
inc
jge
jbe
inc
test
divb
movl
fsubr
pop
mov
mov
test
add
mov
pop
xchg
pop
xor
inc
test
daa
movsb
push
test
shl
xchg
aas
ss
iret
stos
lods
leave
fdiv
repz
subb
jns
data16
cli
pop
dec
push
cmc
aad
mov
push
inc
mov
sbb
push
jge
sbb
cmp
jecxz
sub
mov
pop
and
push
cmpsb
mov
add
fcompl
out
out
outsb
ljmp
test
in
or
jne
imul
rorb
lret
cmpsb
dec
rcll
jnp
xchg
popf
out
cmp
sub
je
test
pop
aad
xchg
adcl
mulb
int
int
int3
adc
out
shr
sbb
cmp
inc
sub
xchg
jbe
sbb
out
cmc
sahf
mov
jp
mov
bound
pop
out
nop
xchg
cwtl
xchg
mov
adc
fwait
mov
push
sbb
lea
dec
aas
add
adc
scas
jl
xchg
or
in
mov
push
push
add
pop
sub
stc
jg
scas
xchg
ljmp
mov
cmpb
xor
and
and
xor
push
xor
ss
or
fistpll
popl
fimull
call
xchg
jle
xor
xor
push
pop
fs
pop
jle
push
sbb
sbb
xor
aaa
dec
lods
repz
popf
inc
dec
cmp
push
cld
cli
decl
xor
in
pop
add
pop
shl
inc
sahf
adc
pusha
or
inc
out
cwtl
xchg
sub
push
jmp
pop
dec
adc
sahf
ret
xlat
adcl
sbb
test
aaa
mov
in
pop
sub
pop
pop
add
mov
push
jg
dec
stos
mov
xchg
xor
mov
stos
mov
inc
mov
shlb
fistps
insl
push
dec
cli
or
mov
ret
lods
pop
stos
xchg
adc
notl
imul
xor
shll
mov
add
push
add
push
push
or
jl
sub
sbb
jg
cmp
into
cmpsb
jne
in
lods
add
ret
mov
or
xorb
xchg
pop
cmp
mov
sub
xchg
lds
push
int
sub
clc
jge
adc
jg
aam
add
push
add
pop
cmpsl
sbb
pop
icebp
sub
scas
dec
xor
lock
rcll
test
or
cmp
jne
clc
test
data16
cwtl
cmpsb
fnstenv
mov
mov
mov
enter
mov
mov
pusha
mov
std
push
rcl
and
cmpsb
nop
mov
insb
imul
int
jns
fisttpll
mov
mov
mov
or
add
or
mov
mov
mov
mov
adcb
push
xor
sti
push
js
stc
mov
cli
jns
add
repnz
mov
push
pop
xor
outsl
punpckhwd
pop
fdivrs
adc
test
lea
imull
cmp
xor
scas
mov
leave
adc
enter
or
and
mov
push
xchg
andl
test
sahf
xchg
test
mov
outsl
je
outsl
pop
pop
es
clc
dec
movsb
pop
bound
ret
dec
aad
cltd
mov
ficompl
cmpsb
and
ljmp
fwait
dec
hlt
mov
xchg
test
sub
out
dec
xchg
mov
adc
inc
jbe
jg
stc
push
stc
aas
sub
mov
inc
cmpsb
jg
scas
or
sbb
inc
popa
stos
neg
nop
pushf
out
fs
xchg
dec
lods
aam
pop
push
cltd
inc
xor
cmpsl
or
add
adc
inc
mov
xchg
clc
clc
imul
mov
jno
sahf
cmp
mov
xor
push
pop
mov
push
es
test
hlt
push
mov
repnz
adcb
shlb
cmp
jbe
in
cmp
inc
nop
cwtl
jle
notb
jg
dec
mov
addr16
repz
out
gs
cmpsl
ja
fdiv
negl
shrb
or
test
fs
mov
mov
inc
ljmp
aam
aad
pop
addr16
and
mov
adc
adc
aas
jp
mov
mov
cs
sub
adc
repnz
and
xchg
aam
in
pop
arpl
fiadds
je
repnz
jg
in
mov
and
lret
and
dec
in
add
jmp
cmp
jbe
mov
imul
clc
orb
adc
sbb
xor
adc
hlt
adc
incl
mov
mov
pushl
mov
sbb
hlt
mov
mov
imull
sbb
mov
jg
cmp
pop
inc
lock
ror
mov
sbb
scas
mov
rorl
dec
out
mov
xchg
dec
rcrb
adc
jns
adc
adc
icebp
pop
and
aas
imul
sub
mov
mov
inc
lret
out
cwtl
je
stos
jnp
xchg
xchg
mov
repz
jnp
movsl
add
mov
jle
xor
cmp
call
push
or
in
sbb
pop
jne
test
mov
in
icebp
out
push
mov
gs
ret
jnp
aas
xchg
and
jo
xchg
clc
inc
pop
sbb
xchg
add
fwait
mov
mov
jnp
jb
mov
xchg
ss
dec
fcmovb
jecxz
push
mov
fldl
nop
jne
into
pop
mov
cs
push
lods
inc
call
add
les
je
and
and
sahf
scas
popf
and
inc
into
sub
jne
mov
add
mov
cmpsb
mov
and
lock
popf
pop
push
push
enter
xchg
inc
mov
mov
dec
mov
jg
out
cmp
adc
aaa
dec
shll
sbb
fsts
cmp
cmpsb
out
push
enter
jp
xor
lds
fcomps
xor
and
inc
jbe
fsubrs
mov
xor
push
das
test
pop
pop
push
jno
add
ret
pop
mov
sub
in
cmp
xor
inc
push
cmp
or
lods
sarl
int3
sarl
add
adc
jmp
lcall
inc
and
popa
push
lods
xor
insl
and
fldl2e
push
icebp
nop
daa
add
sbb
iret
sub
mov
scas
push
into
mov
dec
call
test
ror
mov
lret
jno
aad
sbb
in
push
cmpb
push
shl
or
cmp
push
mov
sbb
scas
rolb
jae
inc
pusha
std
mov
cltd
ds
mov
shlb
dec
aaa
sti
sarb
das
inc
clc
and
mov
dec
call
mov
dec
add
mov
push
mov
dec
mov
xor
cmpsb
daa
xor
ja
add
gs
xor
adc
daa
dec
xchg
mov
pop
movsl
adc
push
xchg
add
mov
std
orl
or
cld
cmp
loop
and
stos
dec
rorb
testl
test
cs
pop
enter
rorl
loope
adc
inc
mov
addr16
aam
inc
clc
cmp
pusha
stos
mov
mov
clc
ss
in
push
pop
gs
in
clc
scas
mov
lods
gs
int
fnstsw
daa
pop
add
adc
imul
push
sti
inc
sbb
cmp
mov
rcr
aad
insb
gs
and
or
outsb
repnz
mov
add
pop
out
xchg
and
push
mov
out
adcl
rcr
lods
sahf
lahf
mov
push
adc
lahf
sbb
adc
mov
sub
std
fistpl
mov
test
rclb
clc
insl
mov
add
inc
xchg
cmp
mov
xchg
cltd
scas
mov
xchg
push
ffreep
test
int
je
inc
pop
add
pop
adc
push
int
aaa
repnz
dec
mov
mov
push
test
insb
push
arpl
test
into
out
ds
sub
stos
xchg
mov
mov
pop
nop
leave
push
imul
and
into
test
jb
decb
arpl
subl
cld
fcompl
je
sbb
pop
mov
add
add
cmpsl
dec
sbb
ljmp
shrl
cmp
pop
rcll
pop
pop
jge
dec
sub
jns
cmpsl
fs
xchg
sub
lea
jmp
out
sar
or
adc
rcl
fs
and
xchg
xchg
int3
sahf
roll
and
jmp
mov
cmpsl
dec
mov
jns
jg
adc
mov
mov
pop
add
xchg
pop
add
pop
fadd
addb
push
jmp
sub
xchg
add
add
lock
es
das
popf
push
neg
sbb
fstl
inc
gs
test
es
jg
rol
ds
sub
push
dec
aaa
fimull
dec
hlt
rcrl
inc
mov
dec
inc
inc
hlt
cwtl
aad
pop
adc
push
mov
cld
int3
jbe,pt
shlb
xchg
adc
aas
xor
js
mov
scas
xchg
repz
inc
mov
mul
out
pop
add
or
mov
mov
push
jo
jle
sbb
sahf
add
add
mov
cli
sbb
or
cmp
sbb
xchg
inc
sub
inc
lock
pop
into
mov
and
in
mov
sub
cmc
cltd
dec
cltd
mov
jns
rcll
jle
or
addr16
fimuls
shr
lods
xor
mov
xchg
mov
mov
xchg
mov
inc
fcomps
cmpb
fwait
and
sbb
mov
imul
mov
cwtl
sub
sub
add
pop
fsubrs
jno
fidivrl
test
add
test
rorb
lds
push
aas
xor
pop
test
aas
xchg
sahf
xor
jg
cld
jmp
push
pop
addr16
fiaddl
pop
mov
es
or
mov
clc
cwtl
inc
aam
mull
in
mov
xchg
mov
sub
xlat
cs
pop
xchg
loopne
mov
xchg
xchg
pop
mov
imul
cmc
mov
inc
mov
xchg
cmp
mov
inc
sar
adc
jnp
adc
jae
cmc
sub
hlt
stos
lahf
mov
pop
xchg
shl
testb
or
xor
mov
xchg
mov
scas
fisttps
jp
lds
lods
push
jle
jns
lahf
sahf
add
xchg
out
add
dec
rcrb
push
fmuls
mov
mov
pushf
push
bound
cmc
adc
arpl
pusha
hlt
mov
lods
add
push
push
sub
pop
dec
mov
mov
stos
popf
insl
push
lea
add
das
sbb
ret
xchg
mov
inc
mov
ds
jmp
jge
lods
addr16
shl
mov
mov
out
sub
push
inc
add
jmp
mov
push
or
pop
xor
loope
aas
sub
push
sbb
mov
push
pop
sbb
test
sbb
add
or
hlt
dec
lods
bound
pop
sbb
sbb
adc
inc
dec
je
push
popf
mov
jg
xchg
and
xchg
inc
jle
fsubr
rol
leave
inc
and
and
cmp
shrl
jbe
xchg
push
xlat
shlb
arpl
icebp
ret
mov
push
andb
mov
push
test
aas
fs
inc
jecxz
xchg
and
or
or
push
shrb
push
mov
xchg
fisubrs
mov
inc
insl
inc
adc
shll
push
add
scas
jb
cmp
test
or
enter
gs
inc
xchg
pop
fs
push
rcrb
fadds
das
fstp
fidivs
mov
jmp
cmp
xor
inc
loop
push
cmpsb
xchg
cltd
xchg
lcall
bound
ss
or
mov
fwait
dec
mov
mov
cmc
pop
ss
xchg
push
sbb
es
lock
add
lods
push
iret
nop
add
xchg
int
push
pop
divb
xchg
cmp
mov
cmp
imul
fistps
dec
testl
lcall
cmp
hlt
or
inc
int
mov
repz
filds
subb
mov
cltd
std
icebp
and
lret
ja
mov
mov
push
mov
vsubpd
into
test
je
subb
sbb
pop
rorl
aas
inc
pop
lods
jb
xchg
jg
mov
xlat
xchg
sub
xchg
out
out
cmp
rclb
fstp
dec
mov
fldt
mov
frstor
cld
pusha
popf
xchg
push
push
jge
aas
jnp
fistpll
test
or
inc
mov
sahf
test
popf
mov
movsb
test
iret
loope
mov
mov
adc
stos
dec
xchg
cmpsb
adcb
movsl
pop
js
add
sar
ljmp
mov
stc
test
mov
cmp
sub
addl
push
inc
jno
sbb
xlat
out
mov
pop
push
stos
loope
aad
mov
sbbl
xchg
push
add
mov
testb
xchg
add
mov
insb
add
fabs
fiadds
mov
fucomi
repnz
std
fdivrl
lcall
pop
adc
add
aas
sub
xor
xchg
leave
xchg
xchg
lods
jo
sbb
mov
inc
xchg
repnz
inc
loop
fsubrs
cs
dec
sbb
mov
mov
or
jmp
jo
jp
fdivrs
mov
add
aas
push
cli
sahf
arpl
cmp
mov
ds
in
cld
adc
inc
jl
lds
fs
mov
lea
jno,pt
sbb
adc
ljmp
cmp
cmp
div
leave
divb
cmp
dec
cwtl
fisubrl
jno
arpl
mov
and
sub
or
movsl
ret
sarl
cmp
mov
ret
loope
adc
and
xchg
mov
push
jb
xlat
and
dec
test
dec
or
xchg
adc
int3
adc
jnp
divb
shufps
inc
jmp
dec
dec
cmc
hlt
pop
repnz
inc
rolb
lock
push
fistpl
inc
ret
push
aad
das
cmp
mov
push
push
jmp
push
pop
xchg
popa
outsl
in
dec
xor
rcll
das
push
or
mov
movsl
cmp
lret
pop
dec
in
adc
int3
movsl
pop
or
in
cmp
push
mov
sbb
sub
cld
sub
mov
addl
mov
mov
xor
aas
outsl
adc
jns
in
mov
pop
sti
jg
and
repnz
lret
add
mov
adc
pop
or
cwtl
fmul
sbb
les
inc
jb
sub
mov
out
inc
cmp
aad
call
adc
push
sub
jp
pop
testb
fisttpll
fwait
push
sbb
cmpb
adc
pusha
xrelease
test
scas
inc
cld
jae
sahf
xchg
scas
mov
int
lock
popf
adc
std
sti
test
inc
inc
leave
pop
test
dec
xlat
pop
pop
in
test
mov
dec
or
test
insl
loopne
or
lods
ja
sbb
xor
pop
insl
push
pusha
mov
push
in
aas
adc
rol
sbb
sbb
sahf
cmpb
sbb
data16
popa
pop
mov
xchg
cmpsl
push
push
push
mov
lods
jns
mov
cmpsb
add
mov
in
mov
mov
cmp
push
adc
cli
cmp
leave
mov
test
or
xor
xchg
and
ja
sub
cmp
shrb
xor
loope
fnstenv
push
cmpsl
sbb
xor
sub
xchg
xchg
movsb
dec
int3
loope
loopne
cmp
cltd
mov
jbe
or
mov
dec
les
hlt
dec
aaa
ljmp
adc
mov
adc
push
sbb
mul
jns
or
or
scas
iret
out
push
mov
inc
pop
lods
inc
or
mov
sub
push
dec
sub
cmp
orl
cmp
dec
dec
fildll
mov
jmp
or
jge
or
mov
outsb
lock
lcall
test
dec
fidivrl
mov
bound
pop
mov
xor
sub
xor
inc
dec
cvtps2pi
mov
jns
sbb
or
loop
xchg
fsubrl
rcll
jg
xchg
sbb
inc
pusha
mov
push
insb
lods
sysenter
insl
pop
push
pop
xor
je
dec
imul
or
cwtl
insb
fs
xor
mov
sahf
push
addr16
adc
cmp
jle
dec
dec
mov
and
sub
bound
mov
leave
data16
xchg
pop
mov
add
aas
sahf
lcall
add
pop
dec
add
xchg
jb
and
xor
push
mov
fnstcw
xchg
sbb
outsb
pop
or
lea
cwtl
jmp
fwait
add
call
das
sub
sub
or
adc
push
sbb
and
jno
pop
mov
mov
mov
js
push
ljmp
xor
addr16
mov
stos
xchg
rcl
mov
out
nop
lahf
or
iret
shrb
sub
jp
mov
stc
sbb
cmp
jp
enter
pop
std
dec
jo
mov
lret
mov
dec
lret
add
xor
cwtl
sbb
fstl
adc
mov
cmp
mov
xor
jmp
icebp
jp
mov
iret
rclb
mov
repz
and
hlt
cld
loop
add
orl
lret
clc
imul
lock
lods
test
xlat
push
bound
lahf
cwtl
test
sbb
icebp
shrb
lahf
out
mov
pushf
adc
negb
leave
bound
jne
andb
shrb
mov
cmp
sub
clc
rolb
xchg
dec
fstl
lods
adc
lock
inc
adc
sub
inc
sub
test
fimuls
sbb
bound
adc
repnz
cli
out
add
pushf
or
dec
dec
xchg
mov
dec
push
mov
dec
je
xlat
dec
mov
scas
jns
imul
dec
out
push
push
or
xchg
xchg
mov
mov
adc
sbb
fcmovnu
add
js
enter
mov
cld
fwait
mov
xor
cld
addr16
in
popf
sbb
push
aam
xor
or
ficompl
mov
and
popa
in
movsl
outsb
sub
repz
das
stc
out
dec
fmull
popa
mov
aam
xchg
xlat
push
xchg
cmp
xor
daa
stc
jmp
dec
and
mov
mov
imul
rcrb
dec
push
mov
popf
cltd
xchg
sbb
mov
scas
xlat
jmp
ss
xor
pop
test
fcoml
insb
mov
push
cmpsl
adc
dec
add
stos
mov
or
cmp
pop
scas
mov
jns
cmovge
ret
shl
in
filds
mov
out
cli
add
hlt
pushf
ds
out
insb
insb
in
aaa
xchg
and
inc
fiadds
pusha
inc
dec
or
std
sbb
xor
shl
mov
mov
pop
mov
push
inc
mov
pop
or
sbb
clc
fldlg2
movsb
adcl
mov
mov
repnz
aam
sahf
xchg
pop
bnd
pop
insl
cmc
or
fimuls
dec
ss
xchg
ret
fisubrs
loop
out
ret
bnd
ja
mov
cs
jns
xor
hlt
adc
mov
sub
jmp
inc
mov
push
jnp
inc
or
adc
dec
or
xchg
mov
es
mov
fildll
mov
sbb
lods
dec
loope
outsl
push
aad
mov
inc
addr16
aas
mov
cmpb
aas
adcb
sbb
adc
add
sub
sbb
lds
sbb
lods
icebp
xor
pop
nop
push
test
insb
pop
cmp
test
ret
test
aam
insl
insl
popa
xchg
mov
pop
xchg
les
ljmp
and
jp
mov
aas
jmp
out
xchg
into
adc
xchg
mov
push
or
insl
mov
fcmovne
or
push
adc
nop
xchg
jns
push
cs
mov
xor
ret
fs
xor
pop
out
jne
jecxz
and
jae
lret
out
sub
inc
cmpsl
clc
or
in
ss
mov
movsl
outsl
lret
pop
dec
pop
jmp
movsb
pushf
pusha
daa
add
jg
xor
movsl
mulb
xchg
xchg
push
lret
lcall
sbb
mov
or
or
add
les
iret
xor
jbe
cmp
sahf
lahf
sahf
push
or
xchg
jge
movsb
iret
jge
sub
jnp
inc
test
arpl
jg
mov
mov
sub
decl
fmul
sub
jmp
scas
push
out
sbb
mov
dec
popa
xchg
test
cwtl
jg
and
lods
hlt
aas
xchg
lods
sahf
xchg
or
pop
mov
add
adc
mov
addl
andl
sub
fldenv
int3
and
push
push
or
xchg
leave
sub
outsb
jb
in
movb
leave
push
enter
in
pop
shlb
out
mov
rol
shrb
xor
outsb
movsb
fistpll
lahf
mov
mov
jg,pt
cmpl
movzwl
jecxz
or
sbb
test
int
cld
add
fisubl
sub
push
cmp
xorl
ljmp
out
lret
pop
test
xor
fcoms
cmp
dec
mov
xlat
mov
and
stos
lds
outsl
repnz
and
into
lods
outsb
jnp
dec
adc
xor
jmp
pop
shll
add
push
repnz
mov
mov
mov
into
lds
arpl
mov
xchg
movsl
dec
fsubrl
repz
or
fldt
cmp
arpl
test
lock
inc
nop
add
iret
repnz
ljmp
inc
arpl
es
shrl
inc
add
ret
mov
mov
inc
inc
and
push
jge
push
sub
scas
push
or
orb
add
rorb
gs
leave
repz
iret
and
add
dec
call
stos
xchg
xchg
cmp
xorb
xchg
xchg
ss
enter
jecxz
dec
inc
aas
sub
ljmp
pop
adc
stos
movsl
int3
out
repnz
mov
outsl
cmpsl
pop
or
sub
lds
stos
jmp
xlat
fnstcw
in
out
jne
push
lcall
push
xor
imul
add
sub
xor
jb
xor
xor
sub
imul
addr16
pushf
pop
and
push
mov
roll
fcomi
stc
out
inc
xlat
inc
ret
lahf
mov
leave
sub
ds
sbb
test
dec
testl
mov
jmp
ret
aam
inc
and
mov
aas
stos
push
into
jmp
call
mov
je
divb
fdiv
xchg
push
sti
test
lods
mov
daa
inc
pusha
daa
push
loope
pop
mov
xchg
leave
popf
mov
nop
lods
push
push
dec
loopne
or
lock
jecxz
mov
test
cmp
loopne
and
sub
je
stc
inc
sbb
dec
fs
dec
mov
cli
lret
inc
lcall
and
or
cmp
dec
add
or
sbb
dec
hlt
out
outsl
mov
sub
std
lea
repnz
inc
das
sub
xchg
xchg
adcb
jmp
and
stos
sub
stos
in
insl
jb
pop
mov
lcall
sub
pop
fsubrp
jbe
mov
and
pop
loopne
jne
sti
js
mov
push
xchg
xchg
jo
pop
xchg
ljmp
rolb
jge
push
inc
sbb
cmp
mov
jecxz
lcall
aad
push
add
push
inc
pop
fidivrl
mov
rcrb
insb
hlt
leave
arpl
or
ret
mov
jno
ficoml
xchg
je
call
xor
adcl
daa
cmp
push
stos
vmovsldup
mov
sbb
inc
jmp
push
inc
in
lret
divb
shlb
push
aam
loopne
and
add
mov
cmp
clc
test
mov
lods
push
lahf
call
sbb
dec
cld
movsl
ret
inc
aaa
push
das
test
jle
fs
subb
lea
mov
pop
or
inc
adc
push
vmptrld
pop
out
ret
inc
adc
xchg
mov
dec
xor
pop
mov
adc
outsl
das
cs
jg
test
mov
cmp
mov
jecxz
outsb
pop
std
mov
sarb
mov
push
cmc
pmaxub
cltd
shlb
in
aas
loopne
out
repz
mov
xor
jecxz
jbe
inc
push
push
inc
aad
fs
jno
cld
xchg
xor
pop
jno
mov
shl
xchg
stos
push
shlb
xor
mov
inc
sbb
or
fnstenv
mov
fwait
hlt
xor
mov
xor
in
mov
mov
addr16
cmp
icebp
ljmp
daa
in
cwtl
loope
bound
cmp
dec
cmp
pop
loope
imul
jge
repz
add
loope
fsubl
sbb
jge
xor
mov
in
and
adc
or
lods
and
jecxz
lock
in
repnz
sar
or
loopne
test
dec
addb
outsb
fdivp
ss
add
cmpsb
inc
lahf
cld
xor
fmull
xchg
and
dec
aaa
xor
inc
dec
jae
dec
stos
out
in
scas
sbb
jmp
cmp
mov
pop
rep
out
pop
dec
push
push
lock
and
add
hlt
mov
stos
imul
movsl
paddw
dec
and
mov
out
push
adc
and
lret
cli
ja
js
mov
sub
fldenv
fnstsw
mov
jmp
mov
popa
mov
incl
inc
outsb
mov
xor
mov
rcrb
imul
jmp
adc
lds
cmp
daa
push
sahf
jno
jl
jp
idivb
movsl
cmpsb
or
out
out
pop
rol
pop
popa
mov
mov
dec
mov
cmp
push
fistl
push
ficomps
pop
lret
rcl
cli
in
mov
jnp
jp
mov
and
call
imul
fsubrp
das
add
xchg
mov
movsb
xchg
xchg
or
mov
mov
out
mov
lds
dec
sahf
or
and
xor
aad
inc
add
pop
xor
mov
aas
lcall
add
jno
ficompl
les
ficoms
sbb
dec
iret
push
cmpsb
or
xlat
jae
add
adc
pop
and
xchg
in
lret
lods
pop
or
data16
xor
pop
dec
xchg
sub
push
ret
pop
addr16
xor
aam
fidivl
icebp
jo
dec
xchg
iret
pop
adc
pop
and
cwtl
outsb
orb
push
test
cwtl
lods
icebp
mov
imul
xor
jecxz
stos
iret
add
inc
lods
orb
and
fndisi(8087
mov
lcall
sbb
movsb
cli
mov
icebp
les
outsb
aam
or
pop
xchg
aad
mov
xchg
mov
movsl
dec
std
push
inc
cli
push
adc
mov
xchg
out
outsl
outsb
sub
gs
inc
pop
testl
adc
pop
icebp
push
mov
mov
pop
or
jl
cmp
or
jno
jo
stos
jp
xchg
lods
jae
popf
jae
sub
inc
in
jns
mov
les
cmpsb
inc
movl
lcall
mov
adc
cmp
in
nop
orb
outsl
push
jge
out
sti
pop
sbb
in
aam
jmp
rclb
jmp
pop
mov
outsb
daa
mov
jecxz
xchg
test
cmp
movsl
and
add
dec
jle
add
cmp
push
in
or
push
pop
js
out
and
pushf
lods
sub
jno
idiv
ret
sbb
int
add
sub
push
test
mov
add
and
xchg
in
xor
jnp
stc
rcr
hlt
pop
adc
xlat
xor
sub
pushl
dec
call
dec
or
dec
mov
mov
jns
push
insb
jmp
in
in
mov
jne
xor
sbbb
and
or
cli
jno
insb
or
push
mov
aaa
ss
sub
idivl
out
mov
scas
jmp
pop
lcall
ret
push
stos
into
pop
pop
fists
jo
mov
add
addr16
push
add
or
dec
rcl
or
and
push
les
mov
xchg
dec
iret
ljmp
repnz
cli
xlat
dec
les
mov
cmpsl
enter
ja
fxam
imul
fwait
mov
mov
test
or
gs
in
add
int
xchg
in
mov
add
hlt
or
jae
insb
ret
push
mov
in
jne
mov
movsl
int3
lahf
mov
mov
iret
ror
push
mov
sub
mov
push
in
je
fsubs
xchg
hlt
ret
in
jo
push
out
filds
ffreep
dec
jo
add
enter
cmpsb
lods
cmp
mov
js
mov
iret
cld
push
lock
test
push
fstpl
cmp
and
cmp
xlat
sbb
rcr
xchg
push
imul
adc
das
data16
das
mov
inc
inc
cltd
lds
shll
mov
rclb
xchg
out
pop
dec
es
loopne
push
push
andl
inc
dec
mov
or
jle
je
cmp
nopl
mov
hlt
mov
aaa
push
enter
or
adc
sub
mov
mov
jl
iret
pop
dec
js
hlt
mov
fs
push
jne
or
jnp
aam
adc
add
je
xor
mov
push
scas
stc
pop
inc
cmpsl
std
das
shll
lds
cltd
gs
enter
cld
and
imul
jne
fidivs
jns
pop
jno
outsl
in
addr16
push
lcall
iret
call
xor
cs
in
loope
dec
dec
push
inc
jmp
pop
and
cli
imul
pop
sub
test
mov
push
adc
xor
dec
push
pop
cmp
pop
push
addr16
rcrb
mov
shll
sar
loop
xchg
jl
and
xor
fs
movsl
mov
rcr
test
xchg
loop
pop
push
push
mov
lea
and
inc
or
adc
inc
rol
loopne
xchg
cmp
out
push
push
fsubrs
jo
mov
pop
nop
add
and
adc
fcmovu
lret
jmp
outsl
sbbl
jmp
jecxz
mov
ds
rcr
imul
ljmp
popa
adc
xor
jns
sub
inc
inc
or
jle
pop
mov
cmp
inc
inc
mov
mov
pop
sarb
sub
ljmp
aas
xchg
xor
movsl
cmp
cmp
rolb
nop
jl
test
out
or
adc
mov
mov
rcr
fldt
mov
in
mov
mov
stos
sub
jge
mov
addr16
jb
xchg
movsb
dec
xchg
dec
sbb
or
mov
jb
mov
or
xor
push
in
mov
adc
jge
push
out
mov
mov
inc
mov
pop
push
cmp
adc
or
movsb
push
pop
imul
inc
xchg
fbld
jmp
xchg
shrl
jno
inc
fdivrs
cmp
cmp
loope
test
xorl
movb
sbb
dec
repnz
rol
xchg
sbb
lret
jecxz
loope
xor
push
fldl
stc
iret
out
es
fsubrs
pushf
xchg
add
mov
stos
xor
mov
jae
sbb
inc
push
hlt
mov
xchg
push
push
shlb
jo
aaa
or
jns
push
fwait
cmp
xchg
nop
mov
inc
out
add
repz
add
cs
repz
das
or
lea
xchg
les
fsubrp
inc
adc
mov
mov
xchg
outsl
xchg
pushf
sbb
imul
popf
xchg
lret
cltd
push
push
lcall
ret
or
cmp
and
cmpb
loop
jp
jecxz
inc
enter
js
andl
psrlq
mov
or
shr
lahf
xlat
stc
jecxz
cmp
push
xchg
rcrl
push
dec
insb
pop
push
int3
pushf
or
sbb
ljmp
xor
lret
jmp
push
jo
loop
sub
fildll
loopne
sarb
dec
and
fndisi(8087
rolb
shll
push
jecxz
adcb
test
xlat
xlat
in
add
aam
jle
push
xchg
sub
mov
sub
add
mov
test
xchg
repz
call
add
xor
dec
adc
ret
dec
stos
sbb
mov
test
fisttpll
iret
adc
fildl
punpckhdq
mov
or
scas
test
repz
fucom
jg
dec
in
imul
addl
out
mov
xor
test
mov
mov
scas
ret
jo
xchg
jae
ret
cmpsl
add
sbb
adc
add
pop
popf
roll
xchg
sub
aad
sbb
pusha
jg
mov
pop
mov
xor
xchg
fisubl
scas
push
xchg
cltd
xor
inc
mov
out
and
cld
cmp
pop
and
or
sub
pop
hlt
jns
and
adc
adc
pushf
dec
ja
pop
sti
cld
fwait
xchg
pop
push
xchg
mov
xor
xchg
ss
into
sub
cmpsl
xchg
add
mulb
popf
mov
mov
sti
rorb
push
xor
jo
add
push
adc
inc
test
add
sub
scas
xchg
dec
dec
xlat
fwait
lret
mov
es
inc
xor
out
sub
xor
rcrl
stos
incl
inc
and
cltd
and
into
imul
daa
and
adc
pop
xchg
add
jb
cwtl
and
mov
mov
and
mov
or
fcompp
and
call
jb
jno
pop
sti
test
inc
aas
add
sub
xor
mov
adc
andl
adc
dec
arpl
mov
or
add
scas
jl
iret
jae
mov
imul
add
jle
push
outsb
std
mov
jmp
sub
and
notrack
mov
push
xlat
movsl
sbb
adc
daa
or
inc
enter
mov
jmp
addr16
sti
test
mov
add
sarl
pop
sbb
and
xlat
popf
jl
movsb
adc
inc
sub
cmc
or
push
inc
push
inc
mov
mov
addr16
cmp
cmp
ret
lds
xor
stos
ja
mov
ds
jb
mov
addr16
and
ret
fmuls
jle
jp
xor
std
imul
and
ja
iret
fisubl
jl
jle
mov
int3
pop
push
jp
xor
adc
mov
push
pop
sarl
lret
outsl
mov
xchg
data16
aam
fisubrs
jecxz
pop
inc
mov
push
ja
mov
push
mov
sub
std
test
out
or
int
xor
orl
orb
jp
sbb
ret
cmp
adc
dec
xor
xor
sub
mov
mov
into
xchg
inc
bound
shll
jae
jae
aam
nop
xor
inc
js
pop
jp
mov
push
jno
xor
sarl
addr16
cmp
repnz
jecxz
imul
mov
mov
insb
mov
cmp
mov
aad
sbb
cmpb
mov
repnz
inc
adc
xchg
js
cmc
fisttpll
or
in
xor
adc
std
rcl
fldenv
xchg
push
mov
xchg
outsl
xor
bound
mov
test
mov
mov
pushf
enter
loope
add
adc
jnp
lock
and
fstp
push
push
imul
inc
xchg
fmull
add
lods
popl
in
or
lock
imul
cmpsb
imul
jl
mov
xor
push
sub
push
insb
shrl
or
xchg
inc
inc
arpl
call
stos
ja
out
sub
and
ds
out
in
push
mov
cmp
imul
pop
mov
inc
push
nop
outsb
push
cmp
cmp
outsl
pop
bound
in
cmp
ss
scas
repnz
pop
mov
jns
repnz
clc
cmc
inc
pop
mov
jne
cmpl
mov
xor
flds
stc
popf
rol
and
and
jo
test
add
push
sub
mov
jno
add
mov
push
stos
xchg
inc
call
add
inc
dec
cmp
pop
pop
cs
pusha
sub
push
sub
faddl
les
notb
pop
les
add
jl
ljmp
xchg
cmc
push
lret
shrd
add
negw
sbb
fisubrl
in
rcll
cmp
mov
mov
pop
xchg
sbb
xchg
lret
ljmp
jl
in
mov
popa
frstor
and
leave
sub
add
subb
insl
repz
pop
mov
sub
mov
dec
mov
mov
test
leave
sbb
in
mov
adc
jecxz
pushf
adc
dec
fwait
enter
xor
cmp
push
sub
pop
mov
loope
pop
pop
inc
fidivrl
mov
and
and
lret
mov
int
stos
fildl
mov
cmc
jmp
scas
pushf
js
movsl
ret
cmp
sbb
jg
lods
lret
inc
cmc
inc
enter
xchg
lret
or
imul
or
outsl
xor
and
aaa
push
scas
inc
sbb
repz
ret
mov
roll
mov
or
leave
mov
dec
jne
clc
mov
fucomp
pop
mov
aad
fnsave
xchg
pusha
adc
js
in
sbb
es
mov
or
call
sar
fdivrs
fnstcw
mov
xchg
daa
pop
jbe
call
jl
xchg
or
loope
idiv
fstpl
adcl
add
imul
incb
adc
pop
add
mov
lret
jne
rorl
jmp
push
out
jp
add
cmp
cmpsl
test
inc
mov
mov
push
adc
push
rorb
stc
mov
test
sbbl
movsl
rolb
xor
jmp
stc
pop
xor
repnz
xor
adc
movsb
adc
xor
sbb
adc
mov
repnz
pop
mov
adc
shll
fs
mov
mov
push
xlat
test
and
and
lret
js
test
adc
inc
mov
es
push
insb
aad
sbb
ds
test
xchg
mov
xlat
adc
adc
mov
pop
mov
sahf
cmp
ret
mov
sub
clc
fdivs
xchg
inc
cld
jne
sbb
or
pop
sti
loopne
mov
xchg
mov
inc
popf
insl
jge
add
test
xchg
imul
roll
jecxz
pop
xchg
xor
loop
hlt
cmpsb
pop
cmc
pusha
mov
jp
or
leave
mov
mov
iret
xchg
mov
and
shl
jne
jbe
mov
cld
xlat
pop
rorb
sbb
pop
mov
into
mov
mov
out
mov
mov
rorl
mov
nop
cmp
test
mov
jnp
and
ljmp
ljmp
push
cmp
xrelease
clc
aam
xchg
push
fdivr
mov
mov
iret
or
mov
or
arpl
jb
push
dec
sbb
mov
lahf
int
lret
sbb
jno
pop
jle
push
pop
cmp
cmp
aas
not
inc
push
in
fs
pop
aad
incl
xor
test
mov
push
clc
cmp
dec
sub
stos
shlb
mov
jnp
and
dec
ljmp
xor
cmp
push
or
es
lods
mov
outsl
stc
addr16
mov
lret
hlt
fwait
rol
push
cmp
mov
out
sbb
test
pop
push
lods
loope
test
inc
stos
shrb
cmc
jo
inc
ljmp
dec
cmp
jge
add
mov
shlb
mov
cmp
inc
lods
xchg
mov
mov
jg
subl
adc
mov
sub
xchg
iret
xor
lods
add
push
lods
mov
jg
and
out
xchg
shr
data16
and
sub
fisttpl
and
mov
std
cwtl
clc
fwait
mov
jmp
inc
sbb
cmp
inc
in
mov
or
arpl
mov
jo
cmp
push
movsl
pushf
cmp
mov
pop
dec
insb
fcoml
sub
std
xlat
inc
xor
comiss
mov
or
adc
sbb
inc
ficompl
fiadds
mov
mov
in
jno
dec
fucomi
mov
pop
ret
mov
test
mov
ljmp
incl
mov
enter
jae
cmpsb
arpl
in
out
lahf
jl
pop
ret
mov
fisubrl
add
jb
test
flds
sub
mov
inc
jns
mov
gs
push
cmp
das
rorl
negb
mov
pop
popa
mov
loop
pop
test
pop
movsb
xchg
fneni(8087
jp
mov
inc
inc
sub
call
mov
add
daa
and
cs
pop
clc
enter
xchg
in
or
nop
pop
aaa
insl
in
enter
sub
cmp
and
retw
mov
mov
add
scas
pop
adc
data16
lahf
mov
scas
out
lret
pop
inc
inc
stc
push
push
xchg
les
xchg
push
mov
ret
fmuls
dec
cmp
push
jmp
je
push
lds
outsl
cld
test
add
and
and
mov
cmpb
subl
xchg
cli
fsubl
sbb
dec
out
sub
cmp
imul
mov
cmp
test
fistpl
ret
fisubrl
xchg
adc
loopne
js
aaa
mov
xchg
sbb
faddl
in
out
pop
xchg
in
pop
jo
push
cwtl
lahf
divb
mov
mov
mov
dec
test
sbb
rorl
xchg
inc
pop
and
aam
or
dec
sti
push
mov
jge
xchg
mov
dec
cmp
jno
push
mov
aaa
bound
ljmp
xlat
int3
ds
mov
movsl
out
pop
jl
loope
mov
sahf
add
shlb
testb
add
and
data16
dec
adc
dec
gs
jg
ljmp
sbb
out
xor
jp
dec
loope
es
ficoms
pushf
repz
mov
popl
mov
xchg
shrl
sarb
movsb
cmp
scas
add
push
jne
push
jp
mov
add
push
insb
add
mov
jae
stc
in
and
dec
xor
xchg
ret
testl
inc
or
sbb
dec
fmull
sub
ret
and
cmpsb
dec
xlat
pop
mov
jo
mov
jo
loopne
popa
xorb
push
fwait
ret
or
pop
insb
jge
inc
aad
int3
push
mov
mov
ret
fwait
sti
sbb
loopne
pop
cwtl
cs
xchg
pop
sahf
dec
adc
pop
xchg
pop
addb
mov
outsb
insl
sbb
jae
mov
jle
insb
imul
pop
xor
jo
sbb
xadd
or
adc
pop
push
out
lret
in
mov
leave
movsl
or
ss
inc
add
push
lret
cld
pushf
sbb
cmpsl
ficompl
jo
and
push
sub
rcr
push
mov
leave
aas
mov
ds
xchg
or
push
dec
mov
and
push
arpl
xor
sbb
out
add
insl
and
mov
mov
in
or
lret
jmp
xor
hlt
fs
cld
xor
into
aam
mulb
mov
int3
shrl
shrb
xor
mov
mov
and
aad
mov
cmp
shrl
aam
mov
fs
aad
pop
jne
mov
sbb
pop
pop
mov
stc
dec
mov
mov
push
jmp
in
adc
xchg
mov
mov
cli
push
dec
jne
cmc
xor
dec
pop
iret
ret
loopne
imul
cmp
pop
mulb
or
pop
dec
mov
or
rcl
adc
add
mov
aam
sub
push
pcmpeqd
sbb
jl
jl
daa
inc
adc
mov
scas
sub
pop
dec
lods
mov
rcrb
pop
in
adc
sbb
mov
xchg
out
stc
and
sub
and
js
push
adc
xor
sbb
loopne
xchg
cmp
dec
mov
std
pop
fiadds
add
dec
push
stos
in
dec
lahf
pusha
dec
lahf
push
mov
and
mov
push
and
in
mov
test
ljmp
push
stos
inc
xchg
cld
ja
or
pop
mov
loop
add
insb
roll
rcr
daa
jecxz
xor
cld
push
mov
inc
push
cmp
jne
jp
pop
cmp
or
xchg
xchg
scas
mov
mov
sar
call
js
cmp
fldl
gs
fstl
or
es
rcrl
mov
add
xor
scas
xchg
push
paddb
loop
sarl
mov
and
insb
into
sub
addr16
ja
out
loope
pop
lret
pop
inc
bound
xchg
ja
cmp
sar
lret
nop
mov
clc
into
ds
add
aam
lret
pop
add
fs
jae
pop
arpl
insb
das
pop
mov
fstpl
and
jns
pop
jne
lahf
mov
and
push
dec
mov
cltd
add
mov
xchg
xor
or
out
add
jo
add
mov
sbb
push
enter
push
out
mov
dec
cmpsl
popf
shll
xor
sub
jne
inc
sub
sub
fidivl
mov
cmpl
int3
rcrl
xchg
inc
jns
imul
cltd
cmpb
sub
in
push
call
jle
out
daa
aas
fistps
pusha
or
or
ror
jg
or
clc
fldcw
lahf
pop
mov
out
xchg
adc
jns
fdivl
or
sub
scas
pop
clc
bound
sbb
or
jnp
in
loopne
in
pop
les
adc
cmpb
lea
out
push
xchg
add
lret
cmp
add
rolb
pop
fisttps
mov
sub
scas
xor
mov
js
cmp
adc
subb
xchg
mov
xchg
push
adc
or
xor
in
mov
mov
test
int3
loop
jbe
je
popa
push
sbb
gs
jecxz
push
pop
xchg
mov
cmc
cmp
mov
leave
adc
lahf
sub
popa
jle
xor
lret
dec
push
adc
jb
sbb
pop
imul
out
mov
mov
pop
test
sub
popa
in
mov
inc
dec
movsb
int
popf
sahf
cmp
inc
gs
notl
adc
mov
adc
aam
cltd
sub
adc
add
xchg
add
movsl
mov
mov
aam
or
into
add
lret
movl
mov
jle
nop
leave
into
add
movsl
inc
and
sbb
stc
add
enter
cmc
addr16
push
test
mov
adc
fwait
xchg
xchg
mov
mov
sub
sbb
pop
ret
test
pop
xchg
fisttpll
popf
lcall
jle
sub
mov
and
mov
jp
mov
insl
xor
loop
xchg
clc
cmpsb
pop
movsb
mov
or
ss
cmpsb
nop
and
or
dec
cmp
jge
xchg
mov
xchg
sbb
enter
sub
insl
scas
loop
push
into
jno
add
xor
call
jns
add
adc
bound
sbb
aaa
ret
lret
xchg
fs
and
cmpsl
int3
jo
cmovnp
mov
adc
ljmp
test
out
jle
data16
fldcw
cmp
sbb
sub
mov
add
gs
pop
and
inc
or
std
enter
or
aad
pop
jp
and
orb
pop
jns
or
xchg
and
popa
xor
outsb
jp
cmpb
fwait
jecxz
insl
mov
arpl
lcall
jns
and
das
lods
mov
pop
lret
lret
pop
sbb
lret
pop
or
push
std
das
cmp
add
inc
pushf
mov
ss
mov
add
xchg
movsl
push
int3
into
lret
dec
adc
mov
movl
push
cmpsl
cltd
pop
gs
inc
xchg
jecxz
fucomi
xlat
mov
push
outsl
jbe
sub
and
cltd
sub
es
cld
sub
push
int
in
adc
stos
inc
dec
adc
mov
jbe
mov
add
pop
sbb
sub
push
or
dec
inc
jecxz
movsl
mov
rcrb
lea
push
fs
scas
push
imul
enter
xchg
arpl
test
rclb
push
cmp
int3
cmp
mov
jae
xchg
sub
loopne
push
sarb
jmp
pop
scas
push
es
out
lods
dec
cmp
lret
xor
shlb
or
xor
xrelease
jno
sbb
ret
dec
xchg
xor
pop
inc
movsl
cmpsl
es
jbe
xchg
loopne
jbe
or
loop
fwait
mov
add
inc
jp
inc
cmpsl
sub
mov
and
sbb
fnstenv
cltd
pop
test
push
adc
cli
lock
ficomps
jmp
mov
or
or
pop
cmpsb
fmul
and
xchg
sub
pop
lods
jae
sbb
orl
push
jle
int
ret
aad
pop
cmp
ja
push
les
jp
mov
lods
mov
sub
cmpsb
push
out
add
std
aas
pushf
loopne
inc
sbb
fsubr
fs
js
fdiv
cmp
mov
aaa
mov
outsb
rorl
and
imul
dec
shrl
push
pop
les
mov
sub
jb
out
push
mov
or
cmp
xchg
leave
jle
xor
cltd
push
cmpl
fisubrs
cmp
scas
fcoms
dec
xchg
pop
fbstp
iret
push
add
sbb
aaa
adc
rorb
dec
mov
lock
mov
imul
adc
xor
lds
sub
ret
scas
in
dec
pop
dec
sub
loopne
cwtl
inc
inc
xchg
jecxz
into
mov
insl
mov
insl
add
sub
imul
mov
adc
dec
add
orb
dec
scas
jae
sub
xlat
out
lahf
divb
xchg
rcrb
sbbb
enter
push
and
adc
mov
xchg
mov
xor
jl
mov
outsl
inc
int3
jmp
sub
lret
push
push
popl
pop
shr
mov
ja
sub
cwtl
fs
push
adc
pop
lea
mov
sti
and
int3
jo
into
sub
enter
push
insb
jbe
adc
inc
mov
clc
mov
mov
pushf
push
popf
fisttps
icebp
fstl
or
mov
lea
arpl
stos
sarl
insb
loopne
imul
mov
sub
jb
into
pop
ret
push
repz
sbb
data16
or
and
icebp
mov
inc
popf
xchg
xchg
data16
jne
ret
fiadds
in
or
sbb
lret
xor
lods
int
pusha
push
lcall
fnstsw
mov
roll
adc
fiadds
loope
pop
jns
sbb
sbb
cmp
adc
push
mov
cwtl
jns
jne
scas
aad
repnz
or
sub
into
pop
sbb
mov
mov
pushf
stc
ljmp
inc
adc
ljmp
ljmp
loope
lcall
pop
scas
mov
stc
popa
mov
out
adc
pop
cli
dec
or
xchg
push
adc
popa
add
push
movsl
orb
arpl
cli
xchg
jge
pop
cwtl
pop
sub
push
sub
mov
cmp
jns
cmp
call
jno
int
fadds
inc
mov
into
xlat
test
decb
outsb
cmp
lcallw
jp
nop
pusha
in
sahf
sub
ja
pop
fxch
out
jl
stc
xlat
xchg
fwait
pop
into
jmp
jle
jbe
lret
lcall
repnz
dec
xor
out
daa
xchg
adc
mov
inc
push
push
idivb
jecxz
fs
stc
sub
lahf
or
mov
fs
lods
inc
sbb
jl
push
mov
out
push
cmp
lds
xchg
mov
loopne
add
movsl
outsl
lock
clc
add
pusha
sbb
xchg
push
aam
ds
sub
scas
jg
push
aas
cmc
fsubrl
xlat
insl
cmpl
scas
adc
loope
xlat
xchg
pop
pop
jnp
test
flds
dec
int
loop
mov
mov
push
cmp
push
mov
in
faddl
sbb
nop
out
cltd
inc
pop
cmp
adc
add
dec
sti
rorb
call
sahf
insb
mov
inc
inc
xchg
insb
xor
in
sub
outsb
cmpsb
flds
jmp
sbb
nop
jmp
js
sub
and
and
push
or
repnz
sbb
sub
xchg
gs
mov
lcall
add
lret
jae
ret
adc
and
adc
cmp
sub
mov
mov
pusha
clc
icebp
call
dec
cwtl
mov
and
adc
fdivrs
jae
pop
xor
xchg
pop
jo
cs
adc
out
cmpsb
lcall
pop
push
in
icebp
sub
add
push
popl
daa
xchg
and
jne
dec
mov
inc
inc
jb
cmp
sbb
jne
adc
out
cs
sbb
jns
pop
cmpsb
lods
sbb
pop
sbb
or
enter
repz
movsl
lds
sbb
mov
pop
pop
stos
mov
sub
les
fistpl
xchg
scas
daa
loopne
cmp
mov
mov
xor
mov
mov
xchg
xor
mov
cld
xchg
leave
cmp
nop
inc
push
mov
mov
jmp
jl
fucomp
sub
rcll
xlat
mov
outsl
dec
dec
inc
pop
cmpsl
stos
mov
cmc
setl
lods
jl
stos
push
lret
xor
or
out
jecxz
ss
add
lods
or
lret
or
cs
jle
test
mov
mov
mov
sbb
add
xor
fisubrl
push
arpl
push
add
fisttps
sub
dec
hlt
test
mov
jns
fs
cmp
push
bound
outsb
sub
mov
stos
test
rcll
ljmp
data16
ljmp
pop
push
sbb
popa
cmp
ret
sti
daa
pop
sbb
dec
stc
cltd
xchg
jnp
mov
mov
mov
imul
pop
or
popa
mov
push
test
pop
jp
in
sti
dec
out
mov
or
xor
push
addl
fcompl
clc
mov
cmp
sbbb
cmp
inc
and
pop
or
mov
xchg
jmp
xor
and
sbb
cmp
mov
stos
or
inc
ljmp
aad
xchg
mov
fiaddl
sbb
fs
or
xchg
mov
mov
mov
inc
stc
adc
mov
aam
popa
aam
adc
sarl
inc
mov
inc
xchg
mov
jmp
xchg
xor
ja
sbb
jl
pop
fwait
nop
mov
xor
or
mov
jg
mov
mov
pop
loopne
js
scas
in
cmc
rorl
xor
cwtl
xchg
popf
dec
sbb
mov
outsl
js
xchg
iret
jecxz
xchg
movsb
stc
push
or
jb
roll
sub
addl
arpl
cmp
mov
sbb
js
stc
fcoml
push
adc
mov
in
sbb
xor
aad
in
fdiv
sbb
and
lahf
push
and
and
adc
sahf
iret
clc
xor
mov
mov
scas
sbb
pop
or
mov
or
mov
je
shlb
stos
xchg
adc
push
test
into
aad
or
dec
sub
sbb
stc
fnsave
add
aad
mov
mov
repz
pop
pusha
enter
jge
popa
mov
fidivl
lret
inc
aam
inc
das
mov
push
pop
lock
xlat
or
mov
pop
arpl
mov
repz
lret
adc
lea
xor
sahf
mov
mov
sub
dec
cs
xor
adc
adc
adc
popa
ret
enter
xchg
out
jmp
in
enter
insb
cmp
mov
scas
in
adc
cld
fwait
sub
dec
subl
sqrtps
pop
push
cltd
jno
hlt
in
xchg
fcomp
or
repz
dec
mov
adc
mov
mov
test
inc
test
out
dec
rorl
xor
xchg
lds
cltd
mov
pop
fwait
or
dec
mov
loop
cmp
pusha
lcall
push
pop
jl
ror
add
jae
fistps
fisttpl
fadd
mov
leave
or
lock
mov
js
xor
mov
push
adc
push
jmp
divl
or
or
dec
add
mov
or
xchg
sbb
add
inc
in
mov
xor
loope
js
fildl
out
add
mov
or
or
sub
gs
push
adc
push
loop
inc
push
xor
insb
jno
call
mov
leave
mov
push
add
xlat
enter
test
xchg
sub
arpl
xlat
stos
rcrl
mov
sub
stos
jmp
int3
adc
inc
fmull
mov
ret
outsb
data16
pop
inc
mov
pop
adc
lds
out
mov
jl
std
and
fs
jle
jb
std
jb
fisubl
mov
rolb
xchg
inc
loop
pop
out
xchg
xor
ja
lods
call
leave
fldl
fildll
adc
push
xchg
cmpsl
ljmp
jp
dec
loop
xchg
xchg
lcall
xlat
fists
imul
and
sbb
popa
xchg
pop
lea
incb
push
mov
jecxz
loope
pop
int
mov
pop
roll
aam
loop
inc
mov
and
mov
test
std
idiv
mov
sti
push
and
rorl
aas
arpl
ret
jo
ret
push
into
push
inc
mov
jge
rorb
orl
jmp
mov
add
ret
xor
repnz
stos
imul
pop
and
ja
js
test
dec
push
xor
dec
xchg
lret
push
mov
mov
cli
sub
pop
lret
test
test
mov
adc
mov
imul
loope
inc
sbb
mov
mov
xor
push
and
aaa
adc
xchg
and
or
mov
in
mov
inc
pop
addb
inc
testl
jns
mov
jg
jne
aas
push
adc
aaa
mov
jp
mov
test
mov
mov
movsl
fucomi
jo
out
dec
neg
sbb
and
fldenv
push
mov
pop
mov
int
jns
lcall
adc
repnz
sub
mov
push
sbb
xor
mov
fisubrl
out
stc
in
popf
cs
or
lods
mov
adc
cld
sub
data16
aas
outsl
loop
push
adcl
cmp
iret
out
rorb
dec
dec
add
push
pushf
adc
addr16
inc
pop
fmul
adc
sbb
or
cld
lock
adc
sbbb
je
jge
mov
sbb
add
jle
jge
mov
adc
test
dec
das
aam
into
aaa
and
add
mov
mov
add
ljmp
jmp
cmp
and
add
push
add
leave
pop
add
pushf
sub
gs
sub
fbld
push
push
sbb
jge
gs
fbld
or
xchg
in
mov
inc
imul
ss
imull
jne
cmc
mov
sub
push
rorb
pop
jl
fsubl
aas
mov
adc
push
xor
mov
int
sbb
pop
in
lret
sub
icebp
jnp
sub
mov
aad
mov
repnz
fwait
push
fwait
jbe
push
stc
jns
or
lahf
addr16
push
sub
pop
movsl
scas
xorb
mov
ja
xor
push
xchg
inc
mov
sbb
sbb
sbb
add
mov
push
mov
orb
sub
fmull
jl
scas
dec
cmp
ss
inc
xchg
cmp
rclb
outsb
cli
ds
sub
jp
dec
rclb
stos
shlb
and
int3
mov
and
add
mov
movsb
mov
adcb
shrl
rcll
movsl
jno
add
xchg
mov
pusha
stos
jae
mov
sbb
outsb
js
gs
jle
out
push
test
dec
cmpsb
incl
xor
insb
pop
jecxz
insl
daa
pushf
adc
fisubl
movsl
jnp
push
push
and
das
cmc
lods
rorl
stc
pusha
xor
mov
sub
das
jle
xchg
loop
stos
in
insb
gs
and
or
push
ficoml
testl
test
pusha
fs
sbb
jbe
cmp
cmpsl
jae
outsb
mov
mov
insb
imul
pop
xor
aas
xor
loopne
xor
xor
fstps
jno
stos
and
jns
mov
push
cmpsb
push
jmp
or
mov
mov
data16
push
and
cmp
sbbl
sub
jns
pop
pop
xchg
outsl
mov
in
addl
push
nop
pop
jl
and
add
std
and
lock
outsb
pop
xor
lret
adc
add
cmp
cmpsb
pop
fmuls
xchg
imul
mov
rolb
mov
mov
in
jnp
into
lods
add
push
mov
mov
cli
lods
cmp
repz
cmpsl
adc
push
inc
sub
ss
push
mov
push
and
lods
stos
cmc
cld
sub
inc
scas
mov
or
popa
inc
xchg
out
pop
sbb
lea
mov
popa
mov
pop
loopne
dec
mov
adc
bound
push
jo
cs
sub
and
js
and
push
mov
shlb
sub
inc
movsb
arpl
stos
xchg
enter
sti
js
cwtl
int
add
into
push
xchg
addr16
add
jno
in
add
mov
repz
push
test
mov
jg
loopne
and
ret
inc
jnp
and
sub
insb
mov
icebp
add
repz
inc
mov
clc
cmp
sbb
mov
sbbb
pushf
jae
push
lods
mov
inc
scas
push
adc
rcrb
test
sbb
lret
pop
or
add
adc
cmp
xor
pusha
lods
sub
lcall
imul
inc
inc
jbe
xlat
cltd
sub
out
jbe
push
sub
mov
lods
sbb
scas
xor
jp
in
push
push
sub
or
xchg
dec
fistl
mov
fwait
cmpsl
pop
mov
xchg
in
in
xor
test
into
rcl
scas
notb
mov
movsb
adc
cmp
dec
mov
xchg
sbb
or
fidivs
in
lret
mov
mov
addr16
jmp
in
aad
mov
lds
lock
push
popa
call
in
addl
push
sarl
jno
das
je
xor
xchg
pop
lret
imul
ss
je
mov
clc
pushfw
pop
test
pop
jmp
jb
std
xor
or
ror
inc
arpl
hlt
leave
leave
adc
gs
sub
ljmp
and
xchg
push
cmp
xor
jmp
cmp
add
pop
fwait
pop
xchg
xchg
sub
fistpll
jne
jnp
movsb
les
mov
ror
xlat
xor
pop
in
lahf
add
in
popa
and
adc
mov
enter
pmullw
pop
aam
cmp
pop
pushf
fisubl
ja
rol
je
je
test
out
cltd
sub
cld
sarb
outsl
jo
andb
sub
fmul
adc
inc
dec
in
hlt
or
sbb
push
xor
dec
mov
cs
adc
fidivl
xchg
cmp
pop
sbb
mov
pop
imul
jb
fnstsw
push
sbb
dec
lods
xchg
or
adc
leave
xchg
ds
jo
imul
mov
in
and
out
xor
pop
add
insl
jnp
ret
mov
inc
icebp
add
bound
jae
mov
sub
sub
cmp
in
push
adc
bound
sbb
sarb
cli
pushf
aaa
aas
adc
ficomps
jg
fsts
loope
rclb
ja
jg
sbb
int3
inc
lods
push
push
imul
dec
cltd
jmp
sbb
mov
data16
mov
sbb
bound
fsubs
lock
int
mov
xor
add
xor
pop
mov
bound
gs
sbb
int
aad
and
adc
pop
add
or
push
imul
or
addr16
ljmp
jmp
jae
pop
pop
lret
insl
cmpsb
fcmovnb
mov
mov
cmp
scas
cmp
mov
rorb
lahf
es
push
fisubrl
mov
fcom
and
push
xchg
adc
dec
subl
es
jp
repz
aas
mov
subb
arpl
lods
das
ret
mov
xlat
test
aas
xor
xchg
mov
iret
das
mov
push
push
outsl
xchg
or
push
sub
add
add
and
mull
dec
xchg
mov
ret
jge
pop
mov
pop
jg
mov
pop
sbb
icebp
mov
arpl
jmp
mov
pop
mov
xchg
notl
mov
test
add
xchg
push
dec
jp
mov
xchg
add
std
cld
sti
shlb
sbb
mov
cmp
xchg
ljmp
mov
stos
xchg
out
fninit
movsb
leave
clc
shll
outsb
mov
in
int
loopne
hlt
fmul
mov
push
mov
push
jo
xchg
xor
stos
push
mov
cmp
mov
out
iret
sahf
stos
lcall
adc
mov
mov
inc
xor
dec
daa
mov
pop
push
outsl
mov
xor
jb
sbb
push
imul
bound
jmp
xchg
pop
jmp
adc
pusha
popa
or
aas
shr
pop
iret
fiaddl
mov
lahf
in
pusha
jmp
dec
js
ja
packssdw
cmpsb
xor
int3
mov
push
mov
cmp
out
mov
testb
and
xor
and
pop
pop
jne
fiadds
imul
daa
xchg
cli
ss
sbb
fdiv
aaa
popf
sbb
clc
pop
sub
xchg
jmp
cmp
das
aad
lcall
xor
je
mov
sarb
or
mov
xor
adc
mov
insl
jae
jo
dec
xor
lds
sub
test
fsubrl
or
insl
mov
add
lock
push
loop
call
mov
popa
lret
inc
or
cmp
loope
cltd
push
insl
loopne
add
in
pop
pop
test
mov
into
sti
add
or
adc
sahf
adc
add
inc
mov
ds
push
ss
mov
jecxz
imul
or
ret
in
leave
in
sbb
pop
add
mov
outsb
xchg
out
fsubrl
jo
not
fwait
jle
adc
push
lods
scas
mov
mov
push
xor
loope
adc
mov
iret
bound
lret
hlt
or
shr
inc
adc
inc
fstl
aam
mov
mov
je
mov
push
jp
push
and
push
inc
pop
inc
and
jmp
insb
nop
or
ljmp
or
pop
sub
mov
inc
push
loopne
adc
int
push
orl
cld
vpcmpgtw
mov
lret
xor
mov
lahf
js
stos
sub
pop
mov
xor
adc
sub
subl
imul
in
dec
shlb
adc
les
bound
pop
subl
and
xchg
mov
push
ds
dec
fdivr
and
dec
cld
in
cmpsl
out
int3
and
std
jae
xor
pop
or
mov
outsb
cs
or
cmpsl
xor
lahf
fistl
pusha
cwtl
addr16
aas
dec
int3
inc
test
sbb
ja
ret
into
jno
addr16
mov
jns
inc
pop
sbb
push
sbb
mov
sub
fs
inc
sbb
mov
pop
sbb
mov
js
mov
scas
mov
mov
shlb
sbb
pop
jbe
loopne
push
jge
push
mov
into
shll
pop
mov
rolb
push
mov
cmpsl
jnp
stc
jns
push
cmc
mov
lret
sbb
sar
pop
xchg
add
arpl
inc
mov
jo
mov
sbb
js
or
les
frstor
data16
pop
push
cli
push
xchg
mov
xor
xchg
aas
mov
inc
sub
out
xchg
test
sub
or
bound
out
mov
inc
ss
xor
xlat
jno
divb
rol
inc
scas
arpl
dec
jecxz
sti
lods
rorl
cli
xchg
adc
rcll
dec
mov
xchg
jb
lds
or
std
and
notl
pop
es
push
xchg
and
or
mov
push
push
enter
lret
mov
movsl
ret
int
xor
mov
pop
push
push
pop
add
xchg
push
in
adc
mov
mov
gs
sbb
adc
dec
add
imul
arpl
dec
xchg
adc
pop
cmpsb
push
or
adc
pusha
cli
es
xchg
das
xchg
movsb
xchg
pop
lea
mov
rcr
ret
adc
divl
loopne
lcall
mov
call
nop
pop
mov
sbb
adc
lock
push
inc
push
aas
addr16
aad
xchg
lea
mov
out
std
jg
xor
es
or
rclb
ds
les
sarl
jmp
jo
bound
out
or
fstps
sbb
pop
xor
sbb
xchg
out
pop
and
movsl
xor
pusha
add
lret
inc
adc
lret
and
dec
add
jae
repz
mov
lret
xlat
mov
xchg
dec
adc
cmpsl
push
call
inc
cmpsb
cli
bnd
loop
mov
pop
jne
push
roll
xchg
cld
xor
xlat
ret
cmp
sub
stos
pop
sbb
push
imul
imulb
mov
repz
ds
mov
xlat
cmc
stc
xorl
or
pop
mov
adc
fisttpl
jl
inc
ljmp
dec
sub
push
inc
fxch
loope
fidivrl
jle
sbb
pushw
lods
mov
lds
dec
icebp
mov
sub
stos
outsb
pop
jle
sbb
mov
pop
iret
ljmp
arpl
lock
pop
jp
inc
and
scas
or
cltd
inc
es
pushf
es
sub
in
shl
test
outsb
les
sti
into
inc
mov
daa
dec
int
and
jbe
cmp
push
or
fs
in
mov
add
mov
adc
int3
das
xchg
inc
inc
outsb
aam
push
movsb
lods
jae
adc
test
test
repnz
sbb
mov
movsl
push
cmp
jae
inc
daa
jo
in
mov
test
stc
clc
mov
loop
js
lcall
mov
adc
push
xor
stos
push
jns,pt
sarl
xchg
arpl
mov
test
pop
add
out
mov
mov
add
jecxz
or
divb
out
ljmp
ror
lock
inc
and
stos
mov
mov
or
sbb
sbb
test
xchg
int
out
mov
mov
fsts
pop
xchg
inc
jns
lahf
sub
in
cmp
mov
cltd
xchg
jle
mov
idiv
fstpt
cmp
shrb
jb
push
pop
testb
bound
adcb
xchg
jmp
scas
ss
ficoms
xor
pop
dec
adc
addr16
cli
mov
pop
add
lret
mov
js
test
hlt
int3
out
mov
je
or
fdivs
sahf
test
add
adc
call
push
int
aaa
ror
adc
fsubrs
mov
insl
out
sbb
pop
jne
fs
enter
roll
xchg
jno
mov
mov
and
lea
sub
mov
ret
dec
lea
jl
in
push
jle
in
into
jl
sub
dec
push
push
xor
xchg
sbb
cmp
lock
pop
mov
or
mov
jge
repnz
in
leave
push
imul
cmp
jb
cmc
or
xor
popf
mov
addr16
das
idivl
or
loopne
mov
push
cli
inc
loope
sbb
dec
sahf
pop
pop
fcoml
mov
push
mov
cmp
nop
bound
xor
jae
imul
mov
mov
and
stc
mov
and
std
cmp
and
jge
imul
fisubs
bswap
mov
lcall
popf
mov
inc
push
inc
mov
das
pop
pop
push
fs
inc
sbbb
stos
aaa
jnp
mov
mov
fwait
pop
out
ss
mov
es
loope
pop
jb
cmp
sbb
testb
cwtl
or
loopne
jbe
jl
jbe
orb
push
inc
test
sub
fsubl
cmpsl
fistl
adc
std
xchg
add
enter
leave
frstor
cmp
add
mov
sbb
std
rorl
inc
aas
clc
loopne
jns
ss
xor
into
gs
mov
fstpl
ljmp
mov
sub
adc
xchg
mov
das
mov
test
xchg
enter
sahf
ret
mov
xchg
push
jge
mov
jmp
outsb
sti
in
sub
mov
mov
in
cmc
inc
jbe
mov
xor
mov
lock
jo
lcall
pop
push
test
hlt
jnp
adc
stc
rcrl
mov
decb
stos
stc
inc
push
fstp
popa
mov
mov
lahf
leave
mov
sbb
pusha
xchg
add
or
sbb
sub
mov
mov
xor
pop
and
ret
cmpsl
cli
dec
rclb
mov
dec
jp
pushf
push
leave
adc
sbb
add
test
into
xchg
test
xchg
pop
outsl
fstps
fldl
notl
addl
inc
sub
decl
aad
stc
or
xchg
push
sub
and
enter
cmp
test
or
stos
mov
mov
cmpsl
mov
lahf
std
cmc
push
cld
outsl
jb
pop
xor
mov
in
stos
imul
jmp
inc
push
pushf
add
add
jmp
jno
mov
pop
data16
orb
int3
pop
sbb
fstl
add
add
stos
int
cltd
into
mov
fcomps
push
clc
sbb
fisttps
aas
pop
cmp
or
push
mov
jbe
aas
int
scas
push
sub
cwtl
cld
cwtl
xlat
fldt
inc
xchg
sub
stos
lock
jb
fistpll
mov
lahf
clc
xchg
xor
cmp
mov
stos
scas
fildll
add
adc
sbb
cli
cmpsb
mov
hlt
ret
fists
push
lahf
adc
jge
int3
shrl
mov
shll
inc
mov
shl
inc
mov
in
xor
ret
mov
cwtl
movsb
dec
push
int
es
or
mov
pop
inc
dec
subl
and
fmull
enter
stos
ret
testl
insl
push
or
jmp
mov
xor
dec
jnp
mov
js
movsb
call
dec
mov
sti
aam
out
jno
xchg
test
movsb
sbb
imul
mov
cmp
sbb
ret
mov
cltd
cmc
inc
enter
dec
lahf
test
cli
mov
jbe
xchg
cld
cld
iret
xor
lods
adc
fdivl
jns
cmp
mov
fists
aas
add
adc
adc
clc
outsl
pusha
cld
jae
dec
scas
test
push
inc
data16
outsl
lahf
stc
xchg
cwtl
cmc
sub
imul
loope
cmp
call
cmpsl
dec
jmp
icebp
pop
mov
dec
mov
push
dec
loop
insl
mov
sub
cmp
negl
jecxz
pop
push
jmp
mov
adc
mov
andb
sub
sbbl
cmp
cld
popf
inc
inc
stos
mov
mov
cmpsb
scas
in
pop
sbb
divb
sar
shrb
fsubrs
push
stos
into
cmc
shll
jae
mov
sub
push
mov
cmp
xchg
xor
cmpsb
das
jp
mov
shlb
add
es
cmc
mov
idivl
sub
push
test
shrl
and
inc
adc
in
or
addb
add
in
lahf
push
mov
loopne
cmp
aad
sub
adc
sub
add
inc
sbb
mov
dec
testb
mov
cmp
push
insb
push
shrb
aad
xchg
test
inc
idivb
int
nop
mov
lret
pop
sahf
add
iret
ret
dec
pop
mov
xchg
js
mov
inc
lods
pop
rclb
pop
jno
mov
ret
add
fnstenv
sub
mov
or
out
push
inc
fadd
xor
cld
out
movsl
and
imul
lock
cmp
daa
scas
inc
xor
lahf
mov
sbb
sub
test
sub
lret
cwtl
shr
or
mov
sbb
mov
and
int3
scas
lods
cmpsb
xlat
outsb
mov
insl
nop
test
cld
mov
xor
ret
in
jb
test
std
xchg
sub
pop
jecxz
push
jge
pop
fwait
mov
pusha
pop
mov
xlat
fcomps
inc
orl
in
cmp
pop
add
into
dec
popf
orb
mov
mov
xchg
xor
mov
jnp
aad
inc
jp
cmpsb
mov
xor
jnp
or
mov
push
push
sub
popa
or
mov
cmp
clc
pop
outsl
pop
xchg
pop
push
xor
loop
xchg
cmpsl
test
mov
lock
out
xor
push
cmp
xor
call
int
shll
dec
lds
lods
xchg
push
lods
sub
cmp
cmp
adc
cld
xchg
mov
idiv
push
movl
imul
jns
call
dec
mov
xchg
test
shrl
sbb
test
orl
sbb
repnz
int
sub
es
stos
push
insl
nop
out
inc
popf
xor
ljmp
xchg
and
inc
shll
pop
je
stos
dec
sbb
lahf
nop
popa
push
sbb
or
jne
es
js
cwtl
cwtl
and
jg
ret
repz
xor
pop
mov
rcrl
ljmp
mov
or
pop
mov
in
fmull
jae
mov
movsb
insl
or
push
jnp
sti
in
push
test
sub
push
sbb
xchg
mov
pop
adc
push
jl
mov
add
hlt
loopne,pn
stos
sub
jmp
xlat
dec
imul
insb
mulb
mov
das
cltd
cmp
mov
sub
jb
rcrb
imul
jnp
lods
dec
cmc
pop
jbe
add
lock
stos
sub
jmp
mov
push
sbb
movsl
data16
inc
pop
jmp
lods
xor
in
mov
sub
in
cld
iret
pusha
iret
mov
xchg
push
xchg
ret
shlb
js
mov
scas
loope
pop
negb
mov
adc
jp
sbb
out
cmp
js
dec
and
adc
loop
in
mov
mov
call
stc
addb
lcall
cmp
cmpsb
incl
sub
daa
popf
mov
outsb
xchg
cltd
andb
mov
cmc
inc
out
out
xor
sub
loope
adc
ret
sbbb
ret
jnp
bound
bnd
test
jns
push
loope
and
outsl
pop
lods
jae
push
jg
aam
mov
dec
pop
dec
jecxz
in
shl
aas
and
xor
add
mov
mov
jnp
lret
add
jns
adcb
scas
push
ffreep
outsb
cmp
jle
or
and
popf
add
mov
and
test
mov
ds
xchg
cmp
xor
dec
xchg
jnp
push
aaa
adc
aaa
and
cmp
shrl
fcompl
jb
notl
cwtl
in
or
push
fnsave
orl
test
test
push
in
aas
jbe
outsb
movsb
rcrb
dec
inc
add
inc
adc
push
xor
push
sahf
lahf
shrd
or
movsl
fs
mov
fsubrl
pop
and
mov
mov
cmp
pop
sub
push
data16
xchg
dec
xor
mov
cmpl
int
outsb
sti
inc
out
cmc
add
xchg
sub
lock
push
inc
mov
push
inc
mov
repz
arpl
arpl
xchg
ret
mov
push
mov
orl
int
loope
mov
mov
dec
bound
mov
push
add
test
inc
or
mov
pusha
and
jnp
adc
and
sub
testl
jmp
in
mov
cmp
outsb
popf
test
lods
add
inc
jne
sbb
sbb
scas
jecxz
fcmovnb
inc
mov
out
inc
mov
ss
mov
popf
jle
or
mov
mov
mov
ds
and
xlat
xor
ret
cmp
out
gs
sbb
cld
insl
and
lret
dec
cmp
or
daa
cmc
shll
aam
jbe
adc
out
add
mov
stos
xchg
jl
jae
mov
mov
xchg
hlt
and
dec
mov
cli
jecxz
mov
push
inc
jle
and
xor
movsl
sub
mov
or
je
mov
std
or
and
cltd
sub
sbb
popa
ss
push
xor
cmp
int3
test
push
cltd
jnp
push
into
stos
lods
sbb
jmp
nop
and
jmp
mov
test
or
and
out
and
push
int3
push
jnp
dec
mov
push
rcrb
loop
enter
xor
insl
push
lds
add
sbb
in
cmp
xlat
cmp
mov
add
rcrb
mov
xchg
cmp
fsts
dec
les
push
inc
ja
push
adc
or
repnz
sub
xchg
or
addb
in
dec
mov
bound
or
and
in
pushf
clc
push
pop
rcr
sub
data16
cmovae
in
jle
int3
popa
xchg
push
movsb
popf
fisubs
inc
push
rolb
xchg
push
std
mov
xchg
add
xlat
push
sbb
xlat
dec
loope
ret
test
pusha
ret
out
sbb
fs
inc
pop
stos
ljmp
test
jge
mov
ret
rcrb
push
and
loop
and
sub
dec
aaa
push
dec
mov
bound
insl
ret
test
lret
ja
inc
xchg
xchg
leave
lock
in
inc
mov
aaa
xor
mov
xchg
ficompl
lcall
xchg
dec
clc
xor
cmp
cs
ret
sbb
stc
xchg
cmpsb
mov
fsub
pusha
push
sub
into
out
sarb
int3
ret
rcrl
pop
or
mov
add
lock
sbb
mov
arpl
out
insl
push
or
dec
enter
fdivl
xor
mov
mull
adc
mov
xchg
push
pop
lahf
pop
xlat
pop
fidivl
jmp
push
insb
jne
test
adc
cmc
pop
dec
dec
int
adc
adc
lds
mov
xor
adc
xor
into
push
enter
movsb
std
pop
fisttpll
xchg
jp
call
stc
jg
sbb
cmp
lea
lock
or
and
add
rorb
adc
in
xchg
test
xchg
cmpsl
cmpsl
xor
cmpsb
sahf
icebp
adc
jp
nop
add
mov
fcomps
out
pop
add
fwait
cmp
mov
inc
fsubs
shll
jmp
ret
and
add
mov
fwait
push
sbb
imul
subl
jle
and
mov
sub
lcall
dec
and
push
cmc
hlt
out
cmp
andps
add
lods
mov
dec
fisttpll
lret
push
add
lock
cmp
dec
jecxz
mov
std
test
or
sbb
imul
repz
pop
stos
xchg
and
pusha
jecxz
pop
inc
into
mov
push
inc
jl
inc
inc
fiaddl
mov
bound
jns
jp
add
add
or
out
cmp
cmpsl
push
mov
mov
pop
lds
leave
dec
xchg
jo
mov
sahf
in
jne
add
push
lret
jns
and
outsb
cltd
lods
push
les
scas
add
mov
xor
jg
dec
enter
xor
pop
popa
sahf
jecxz
fistpl
push
cmc
and
xor
xchg
sbb
cli
pop
jb
loope
jo
icebp
and
pop
sub
incb
jb
lret
jo
mov
imul
std
or
je
and
out
push
add
pop
and
push
testb
xchg
or
dec
xchg
fidivrs
mov
hlt
stos
pop
stos
lods
ss
push
jle
sbb
aaa
pop
out
push
adc
cmp
jmp
orl
push
jl
insb
insl
jge
inc
jae
imul
cltd
sbb
and
sub
jp
lret
cmp
adc
adc
jae
shl
inc
iret
jbe
shrl
sub
lcall
je
jnp
iret
xlat
push
or
stos
inc
imul
xchg
je
jl
scas
js
add
test
insb
sahf
les
xchg
mov
cld
or
in
sub
lock
fists
and
cmp
jge
daa
stos
dec
mov
lock
scas
mov
pop
cmpsl
pushf
xchg
sbb
leave
sub
sub
sub
mov
adc
stc
fwait
cmp
xchg
ja
jb
mov
sub
lds
xchg
cmpsl
and
xor
mov
push
or
pop
aad
xor
xchg
mov
inc
xchg
add
mov
and
out
sub
fcmovu
pop
repz
in
test
jno
pop
mov
sbb
ss
jp
and
popf
in
les
in
cmp
mov
push
adc
cli
enter
int
imul
in
mov
xor
js
dec
clc
test
or
fsubl
xchg
dec
pop
jl
pop
hlt
lods
repnz
movsb
mov
sbb
into
ljmp
sbb
adc
cmp
es
rcr
es
or
jo
inc
sbb
and
ja
into
sahf
loop
gs
push
or
add
push
fwait
sub
jp
xor
dec
fcompl
das
add
mov
inc
push
stos
xor
xor
adc
mov
jb
movsb
sub
add
pop
fwait
push
rcl
cmp
jo
cmc
sti
sbb
fstl
stos
dec
inc
loope
cmp
mov
xchg
sets
or
outsl
ret
add
aam
outsb
jmp
xor
mov
push
lret
lret
cwtl
testl
aaa
sbb
fstps
adcb
fwait
xorl
pop
xor
leave
lea
dec
sbb
mov
sub
pop
repz
sub
pop
clc
lods
mov
mov
cmpsl
int
xor
xchg
daa
inc
mov
in
or
pop
push
shlb
movsb
add
scas
dec
bound
es
into
lcall
stos
mov
xor
lahf
je
push
push
jmp
mov
bound
sbb
push
pop
pop
adc
pop
xor
pop
sarl
rcrb
push
cmp
and
xor
lahf
push
repz
dec
cmc
sbb
push
sbbb
xor
aad
jmp
add
std
pop
out
lea
shrb
lar
inc
outsb
ret
mov
push
add
movsb
xchg
mov
in
nop
jo
mov
lret
andb
push
sarb
filds
cmpsb
sub
and
aad
xchg
mov
test
inc
push
mov
jne
cmp
and
pop
ja
add
insl
mov
mov
or
xor
ror
xor
les
arpl
jb
movntps
cmp
jb
xchg
cmp
daa
dec
mov
fs
push
adc
sarb
fnstsw
movaps
jo
or
mov
sub
or
je
daa
lods
scas
cs
jno
mov
push
xchg
outsl
push
sbb
std
lea
xchg
movsl
adc
fdivrs
xorb
loop
leave
or
and
repnz
shll
jno
add
mov
rclb
mov
imul
fnstcw
inc
pop
in
jo
loopne
xchg
cmp
xor
push
mov
inc
sub
and
cwtl
mov
mov
cmp
test
ret
jl
call
or
mov
stos
outsb
aas
xchg
ds
je
push
jmp
sbb
cs
sbb
loop
filds
mov
imul
sbb
and
fcmovnbe
in
sbb
adc
inc
jle
data16
dec
bound
xor
mov
clc
fs
inc
lods
ret
pushl
push
lock
sub
sbb
add
pop
andl
push
fdiv
push
xor
push
out
mov
or
xor
push
fcomps
push
sbb
mov
dec
pushf
sbb
rcrl
xor
out
mov
int
lods
test
mov
jne
aaa
and
dec
adc
jge
aaa
push
pop
lods
xchg
xchg
inc
mov
test
loopne
sub
jns
dec
mov
fs
out
ret
cli
mov
ret
mov
pushf
cmpsl
and
sarl
jecxz
cmc
dec
aam
xor
jo
mov
repnz
ja
sbb
cmp
pop
mov
push
insb
andb
pop
jg
sub
in
rcrb
jnp
rol
fistpll
cmpsb
or
push
jle
pop
out
incb
dec
lret
mov
das
std
fists
ja
aad
sub
imul
sar
xor
out
clc
cmp
sbb
pop
xchg
je
call
mov
lahf
xlat
sub
jmp
lds
jp
mov
mov
xor
cmp
or
daa
fcompl
or
ds
movsb
test
test
loope
ror
xor
mov
ss
lcall
push
cli
cmpb
pop
cmp
aad
jmp
test
jno
shrb
fildl
dec
ja
xor
fidivrs
hlt
or
movsb
mov
popa
dec
sahf
inc
sub
inc
lock
fidivrl
xor
aad
or
mov
int3
sub
aam
mov
xorb
lds
pop
mov
sub
clc
push
out
mov
in
push
add
jne
push
fs
adc
pusha
adcb
pop
cmp
leave
pop
mov
lcall
cmp
in
lock
stos
aas
je
lea
mov
out
stos
inc
dec
jmp
pop
outsl
jbe
mov
fisubs
pcmpeqd
mov
jo
jnp
jle
xchg
cwtl
mov
sbb
cltd
push
pop
rcrb
out
repz
push
xchg
xchg
jl
into
mov
inc
fnstcw
js
aas
rolb
je
aam
xchg
cmp
push
popf
loopne
push
leave
add
ficomps
stos
aad
jle
das
imul
andb
movsl
push
and
mov
xor
xchg
ja
sub
hlt
xchg
cld
push
mov
test
fldenv
ja
mov
jge
sahf
dec
inc
lds
add
pop
les
xchg
mov
jo
adc
sbb
mov
nop
cmpsl
in
imul
fdivrl
xchg
sub
mov
lock
addr16
and
out
cltd
inc
mov
addr16
cs
neg
adc
test
mov
jle
mov
pop
xchg
repz
hlt
loope
mov
sarb
insl
or
nop
shll
and
loop
data16
call
les
sub
xor
xchg
loop
mulb
mov
jne
sub
jl
lret
mov
ret
mov
or
cmpsb
test
sbb
push
lahf
xchg
test
int
mov
out
inc
repz
push
iret
add
fwait
mov
and
call
and
dec
ss
sub
mov
aad
push
mov
mov
mov
cmp
mov
movsb
lods
popa
or
pop
sub
pop
iret
daa
adc
mov
or
cmp
loop
sbb
js
inc
sbb
sbb
push
rcrb
and
push
dec
xorl
out
and
arpl
lret
sub
test
mov
fsubrl
dec
fdivrs
cmp
pop
jecxz
ret
xchg
pop
out
sbb
jns
imul
mov
test
add
pop
or
decl
lcall
mov
loopne
ret
das
rorl
and
inc
xor
push
lds
mov
push
aas
negb
mov
mov
xchg
mov
cld
es
scas
dec
les
iret
cmpsb
insl
add
das
or
jge
xchg
add
pop
out
lds
jb
shlb
sbb
push
sbb
xchg
cmp
pop
es
mov
dec
js
adc
outsb
insb
mov
call
dec
shlb
dec
xchg
xor
incl
pop
cmp
adc
add
xor
mov
or
push
mov
daa
cmp
pop
sahf
lock
mov
je
jp
xor
popf
in
pop
xchg
lcall
sub
and
test
sbb
xor
cmp
xor
popa
mov
fldenv
jg
add
test
mov
pop
hlt
pop
insb
cmc
fistpl
mov
pushf
inc
data16
pop
inc
pusha
add
inc
sub
call
mov
ffreep
adc
sub
arpl
mov
jne
pop
test
ret
or
mov
pop
cli
insb
fildl
xchg
pop
push
scas
add
aaa
mov
mov
dec
ret
fstpl
push
sbb
in
in
insb
mov
jp
out
jmp
mov
lret
inc
xchg
mov
mov
xor
popa
setnp
mov
fmull
fdivrl
push
jbe
cmp
in
shlb
push
xchg
xor
mov
pop
and
and
ss
cmp
sarb
mov
mov
icebp
jl
scas
lea
sbb
movsb
ret
push
xor
jbe
xchg
inc
pusha
ja
mov
jecxz
lret
bound
push
jl
pop
inc
add
dec
sub
cwtl
mov
cmp
hlt
fldlg2
lods
jns
push
ljmp
test
idivl
ret
lds
lahf
pop
push
pusha
inc
and
jno
out
inc
mov
cmp
dec
mov
scas
fwait
std
xchg
or
push
pop
xchg
repz
mov
add
mov
sbb
out
scas
pop
mov
nop
and
mov
cld
cltd
movsl
pop
mov
mov
mov
pop
mov
xor
bound
xchg
dec
and
cmpsl
mov
fstpt
mov
fcmovnbe
mov
repz
cmc
cltd
leave
xchg
sti
xchg
add
dec
addr16
testl
loope
sub
xchg
pop
mov
jl
out
add
xchg
inc
arpl
push
leave
aas
outsl
rcl
jle
mov
xor
mov
inc
sub
incb
pop
incb
fmul
loope
xchg
inc
icebp
add
test
scas
push
cs
cmp
lahf
ss
dec
xor
push
mov
mov
lret
jg
or
add
incl
cld
jge
mov
loope
jmp
popa
cmp
out
add
cli
mov
in
mov
and
sub
mov
fs
sbb
mov
xchg
daa
rolb
jo
stc
jl
xor
cmp
mov
or
mov
pop
mov
push
dec
repnz
dec
mov
pop
push
cmp
add
loop
sub
out
cld
cmpsl
sbb
popf
cmc
loopne
mov
lcall
or
fiadds
add
test
mov
out
mov
pop
ja
dec
fdivs
cmpsb
pop
rol
cmp
jecxz
sbb
cmpsl
out
shl
mov
fsubrs
leave
mov
add
adc
clc
insb
fidivs
stc
cmp
push
jb
test
xor
mov
sbb
xchg
js
pop
mov
or
icebp
rorb
div
or
pop
fsincos
sub
mov
xlat
cmp
and
mov
cmpsl
fisubs
push
inc
xchg
sbb
stos
sbb
push
xchg
stos
xor
pusha
jecxz
add
add
xchg
int3
lea
jno
push
pop
sbb
lret
cmp
sub
mov
fs
cs
mov
push
pop
inc
lock
mov
sub
lds
pop
and
and
outsl
std
fmuls
aaa
cmp
pop
pusha
xchg
into
insl
pop
repnz
jl
push
push
mov
cmp
sub
rcr
sbb
xchg
enter
out
pushf
insb
mov
pop
lret
repnz
mov
and
iret
addr16
mov
out
pushf
jle
sbb
mulb
es
test
mov
in
rcl
rclb
or
pop
rcll
cmp
shrl
pop
cmp
jbe
scas
cmp
outsl
lcall
mov
add
mov
jg
xor
lods
jne
ja
sbb
pminub
push
add
push
into
aam
mov
out
shll
hlt
add
adc
int3
ret
adc
inc
mov
xor
jp
jns
and
mull
add
sub
or
outsl
fisttpll
xor
ret
dec
jp
popf
cwtl
faddl
popa
out
jbe
mov
xor
lock
mov
cmp
aam
sbb
or
rcll
mov
mov
fdivl
fadds
cmc
xor
jae
bnd
or
outsl
mov
mov
mov
daa
dec
inc
mov
xorb
adc
jbe
cmp
imul
rorl
std
mov
xchg
in
or
cmp
mov
jno
mov
jns
imul
popa
push
and
sbb
int
pop
pop
fucomi
stos
out
jl
lods
and
xchg
clc
mov
mov
insb
gs
jp
fisubrs
jge
fs
and
cmp
je
pop
test
pop
out
jb,pt
repnz
data16
or
inc
or
inc
les
shll
jb
repnz
xor
div
jecxz
call
inc
into
mov
jmp
and
sbb
or
dec
fistpll
xchg
sub
mov
mov
out
sbb
packuswb
test
mov
pushf
icebp
in
arpl
jno
jnp
in
push
rcll
movsb
int
push
rcr
inc
push
mov
roll
dec
ja
add
fisubl
imul
mov
dec
cmpl
imul
js
insb
dec
hlt
movsl
adc
sbb
popl
lea
pop
dec
scas
jp
xchg
sbb
sahf
push
mov
cmp
dec
int3
push
xchg
fsubr
mov
ja
ljmp
xchg
bound
out
std
fbld
pcmpgtw
mov
xchg
xor
and
adc
and
mov
insb
lcall
ret
jecxz
sub
dec
adc
cmp
cli
das
in
insl
pop
push
insb
icebp
in
inc
mov
mov
pop
shll
inc
cmpsl
icebp
mov
sub
sahf
ror
mov
sbb
out
stos
sub
js
jbe
aaa
push
std
mov
lret
cmpsl
pop
sahf
mov
mov
xor
push
or
mov
data16
and
mov
or
lock
mov
mov
pop
push
push
lods
xor
pop
sub
push
cmp
lret
inc
adc
jg
roll
adc
or
xchg
push
xor
xchg
adc
insb
pop
pop
push
stos
ds
cmp
in
or
fdivs
or
and
inc
loop
xchg
jb
outsb
mov
das
adc
repz
test
ret
xchg
repz
cmpsb
push
inc
dec
fs
adc
nop
pop
dec
js
int
popf
stos
jne
stc
push
enter
scas
push
adc
scas
sub
jb
lods
and
dec
adc
adc
sub
mov
cwtl
rcll
mov
ficomps
popf
pop
adc
sar
adc
out
sbb
test
or
pop
je
or
cs
lods
inc
cmp
mov
inc
stos
and
sub
jg
rorb
jmp
pop
jle
nop
ljmp
divb
shrb
addr16
into
loopne
mov
add
push
xchg
test
pop
adc
xor
mov
clc
cmp
adc
lahf
mov
pop
aad
popa
adc
mov
mov
add
add
ds
mov
sub
inc
and
sub
outsb
jno
cmpl
push
aam
cmp
jnp
sub
sbb
andl
out
mov
and
das
push
je
sahf
in
dec
add
or
mov
mov
pop
pushf
ds
cltd
add
loopne
frstor
lcall
in
clc
in
and
shrb
jg
jns
mov
outsl
dec
mov
and
movsl
dec
dec
lock
pop
or
xor
inc
xorb
mov
aam
cltd
and
xor
bound
icebp
add
and
sbb
in
jecxz
test
cmp
jae
pop
sarb
data16
dec
mov
leave
xor
sahf
xor
hlt
and
mov
jle
int
and
add
orl
jne
sub
gs
je
or
lods
pushf
cmpsl
es
and
nop
loop
mov
das
jo
stos
mov
aad
add
inc
repz
push
mov
std
add
mov
lods
pop
fs
jnp
mov
mov
cli
cmpsb
dec
cmpsl
push
sbb
sbbl
dec
mov
sbb
sub
jp
add
sahf
jnp
and
lea
mov
xchg
and
jbe
js
jmp
xor
repnz
sub
aas
out
sahf
add
hlt
xchg
pop
ficoml
cmp
stos
or
jg
stos
push
int3
xchg
sti
shlb
stos
ficoms
call
repz
sub
mov
jmp
stos
jne
pop
push
xchg
sbb
sbb
arpl
xchg
js
and
fiadds
xchg
sbb
and
push
out
inc
aas
icebp
mov
aas
into
icebp
push
idivb
xor
clc
popf
jg
call
pop
jae
cmp
dec
fnsetpm(287
xorl
dec
in
rcrb
testl
addr16
fcoms
xor
and
jb
das
and
dec
jg
or
or
test
jmp
pop
jge
rol
mov
movsl
xor
das
pushf
sbb
ret
cld
enter
loope
fsubl
ja
sub
add
jns
and
mov
mov
mov
mov
in
cmc
and
outsl
dec
xchg
pop
dec
dec
std
dec
mov
bound
and
cs
movsb
mov
adc
ljmp
sub
push
andb
leave
mov
and
adc
or
and
add
mov
fwait
jb
xchg
xor
push
adc
leave
jbe
cmp
dec
je
inc
std
mov
pop
xchg
sti
fsts
lahf
mov
sbb
xchg
xchg
jnp
mov
gs
in
push
cmp
lea
add
loope
adc
inc
hlt
cmp
ljmp
mov
add
insl
shll
push
adc
xchg
je
dec
lret
clc
adc
sbb
push
call
pop
test
fwait
daa
fbstp
sarl
xchg
mov
shlb
dec
jg
xor
add
push
jge
cli
out
lcall
movsl
mov
gs
jo
not
push
fs
call
in
popa
mov
in
frstor
sbb
add
sub
clc
das
mov
or
cwtl
fcmovbe
xor
sub
fnstcw
sub
push
jne
daa
rol
jae
xor
js
jno
ret
cwtl
pop
repnz
ja
fidivs
imul
insb
xchg
out
mov
in
pop
xchg
rorl
das
mov
loop
sbb
movsl
bound
sbb
pop
sub
push
mov
dec
outsl
shll
mov
push
push
jae
and
in
pop
lea
sahf
ss
inc
cs
iret
negl
rep
lret
flds
push
in
dec
test
outsb
mov
jae
add
negb
push
push
mov
notl
stos
int
sub
xchg
push
cmp
popf
cld
jmp
pop
sbbl
push
push
stc
push
movsl
sub
mov
mov
xchg
push
fnsave
es
orb
xor
lcall
jp
mov
cs
aad
mov
pusha
xor
pusha
cld
cli
add
fsqrt
fadds
ds
cmc
xchg
lods
xchg
add
imul
enter
mov
js
lahf
repz
roll
out
mov
inc
or
scas
xor
sub
aaa
pop
stc
ja
pushf
arpl
mov
int
stc
insb
push
test
cltd
pop
add
cmpsl
sub
push
sahf
repnz
add
and
jnp
insl
test
icebp
add
icebp
xchg
lock
dec
int3
pop
and
int3
stos
mov
mov
pop
test
inc
aas
push
repnz
sub
lods
add
pop
mov
cltd
scas
fidivrl
iret
loop
xor
pop
mulb
aas
push
adc
sbb
and
sbb
insl
negl
mov
out
sbb
add
dec
xchg
in
insb
sbb
adc
in
call
shl
push
push
ret
cld
leave
les
lock
or
repnz
push
push
jp
mov
mov
fisubl
out
jb,pn
inc
out
out
in
jl
dec
xor
mov
sub
cmpsl
xchg
cmp
loopne
adc
repnz
popf
adc
inc
pop
fbstp
mov
cmp
in
pop
dec
pop
push
jl
push
scas
lock
sbb
fs
sbb
jge
and
add
outsb
mov
mov
pop
stos
mov
push
shlb
cmp
dec
add
cmp
xor
pop
int3
xor
inc
cmp
stc
add
xchg
sbb
sub
pop
cli
lret
mov
rorl
adc
cli
les
add
push
fs
mov
out
insl
push
xor
xchg
cli
jae
ss
stos
xchg
inc
xchg
scas
aad
jle
outsb
leave
outsb
mov
xor
stos
pop
mov
fisubs
pop
pop
cltd
stos
mov
mov
mov
dec
mov
fisubrl
popa
das
dec
jge
or
pop
push
cmp
sbbb
je
cmp
int
lret
dec
mov
push
pop
mov
aam
notl
jmp
or
xchg
adc
add
jecxz
in
jne
xchg
adcl
hlt
sbb
lods
pop
pop
pushf
xor
in
jge
or
cld
xor
dec
cli
inc
jno
aad
aad
add
faddl
jle
rcll
ljmp
lock
cmp
cmp
mov
push
and
adc
imul
xor
cmp
push
cs
gs
lahf
xchg
xchg
enter
mov
je
repz
adc
fdivl
push
mov
mov
xor
and
sbb
es
jg
xchg
insb
aad
popa
lcall
subl
aad
stos
dec
into
jae
sub
ret
fldcw
clc
cmp
xchg
in
xchg
lret
cmp
dec
sbb
subb
adc
sub
mov
bound
jns
movsb
jnp
pop
jno
or
jae
cmpsb
add
fwait
pop
int
rcrl
pop
or
shlb
xlat
adc
testl
sarb
mov
cmp
xor
push
lcall
push
jge
les
cmp
pop
mov
jg
sarl
mov
jno
xor
nop
jo
hlt
or
int3
sbb
cmp
jns
jns
add
pop
pop
in
adc
loopne
lcall
push
mov
repnz
insl
pushf
cmpsb
ror
cld
mov
xchg
jmp
add
mov
add
jne
adc
or
fsubr
movsb
rorb
outsl
lds
sbb
add
lods
in
push
mov
stos
insl
pop
or
loope
cmpsl
mov
mov
inc
and
pop
xchg
outsl
sbb
mov
icebp
outsb
push
fidivrl
aas
sbb
sbb
sbb
add
movsb
sub
and
test
xlat
into
jmp
cmp
jmp
xchg
cwtl
test
cmc
or
dec
in
flds
inc
inc
out
pop
ljmp
rcrb
stc
test
loop
adc
std
and
mov
out
cmp
sti
sbb
mov
jl
int
jnp
mov
adc
mov
imul
cli
and
pop
shlb
sub
test
sbb
decb
mov
add
xchg
mov
xor
gs
jns
dec
mov
shlb
push
adc
loope
aad
ret
lahf
xchg
jns
fwait
xor
jnp
mov
mov
mov
xchg
imul
scas
pop
cs
and
lods
dec
mov
mov
push
iret
lock
movsb
lret
lock
sbb
cli
sub
es
pop
pop
arpl
cmp
sar
add
out
push
push
sbb
push
jne
jns
push
mov
cmp
add
sub
int
xchg
cmp
jbe
mov
pop
jb
or
lds
dec
ss
pop
adc
test
mov
incb
mov
xor
scas
jnp
and
call
repnz
shlb
push
jecxz
sub
inc
loope
test
and
test
insl
test
out
out
into
clc
xchg
mov
cmp
ret
stos
aas
rol
addr16
mov
sub
mov
push
mov
mov
dec
cltd
cltd
fs
sarb
fnstcw
shrl
mov
cmc
lea
xchg
pushf
mov
jb
std
push
pop
mov
fimuls
cmp
mov
mov
sub
mov
xchg
jg
insl
cmp
stos
cmc
and
add
rcrl
mov
xor
fcmovnb
xlat
inc
std
popf
fwait
leave
loop
mov
push
push
mov
dec
lds
iret
leave
jb
icebp
lock
sbb
fisubl
int
jo
cmp
push
cmp
mov
mov
cld
push
xlat
sub
pop
and
dec
push
or
insb
jns
and
loope
add
int
fldl
outsb
cmp
adc
lahf
idiv
popa
ret
push
fnstcw
jmp
push
dec
loop
scas
inc
movsl
xchg
pop
sub
movsl
jno
sbb
dec
stc
data16
jle
and
mov
sub
xchg
ret
mull
pop
cmp
cmp
cmp
pop
imul
mov
add
inc
ja
pop
loope
mov
adc
ret
fimuls
rcrl
sbb
push
clc
xor
push
add
xchg
sbb
mov
shrb
addl
shl
rcl
fisttps
inc
push
adc
adc
ljmp
jno
stos
mov
ja
adc
adc
adc
shll
out
lods
pop
cmp
jne
icebp
aaa
pop
ss
shl
sub
and
sub
insb
lds
in
mov
sub
aas
sub
cmp
movsl
and
fisubl
sub
cld
cmp
movsb
jae
sub
sbb
or
fs
mov
adc
imul
sahf
xchg
mov
inc
stc
sbb
fisubrs
jmp
idiv
push
dec
jnp
aad
sub
sbb
das
jne
sahf
les
xlat
sbb
dec
lods
fisttpl
mov
in
pusha
out
in
push
jae
lret
push
aaa
push
cltd
xchg
js
dec
mov
dec
mov
shrb
cs
loope
lock
cltd
fwait
int3
lods
adcl
xor
sbb
nop
loope
shlb
leavew
pop
nop
scas
pop
in
movsl
xchg
cli
xchg
leave
xor
push
adc
mov
inc
push
shlb
push
mov
dec
repnz
enter
popa
jge
push
jg
scas
or
pop
adc
mov
mov
aas
mov
push
mov
into
scas
add
sti
js
pop
xchg
orl
popa
adcl
push
outsb
stc
jno
iret
push
xchg
daa
movsb
mov
int3
xchg
pushw
out
in
lcall
lcall
jns
pop
sbb
and
jle
ficompl
movsl
jns
movsb
imul
jle
cmpsl
push
xchg
cmp
ficompl
xorl
cmp
rcr
stos
cmp
cmp
mov
pop
insl
push
and
popa
inc
in
fdivrl
cs
lahf
ja
xchg
cmp
data16
and
mov
adc
int3
fldl
imul
sub
scas
fwait
fwait
hlt
xlat
ret
popa
test
sub
mov
xor
mov
adc
aas
mov
push
lds
test
ds
stos
push
and
adc
lds
xchg
mov
mov
ljmp
xor
dec
lcall
cmp
push
sub
jo
cmp
out
pushf
pushf
cmpsb
xchg
push
push
push
push
les
jp
push
scas
movsb
pushf
arpl
into
sbb
or
hlt
mov
scas
es
js
notb
pop
mov
and
out
enter
sub
xchg
sub
inc
es
ret
cmp
movsb
add
mov
cwtl
mov
stos
xchg
mov
lods
ds
or
push
mov
cmp
jns
insb
fwait
jle
jmp
mov
pop
dec
mov
leave
loop
mov
int3
push
jecxz
add
loope
adc
push
adc
fs
adc
fstl
fbstp
push
shll
ds
enter
sahf
adc
gs
push
jmp
cld
or
sbb
pop
push
mov
int
inc
push
jns
sbb
and
add
mov
xor
ret
pop
mov
push
lea
lods
push
sti
insl
add
push
pop
and
leave
in
movsl
and
sub
or
dec
mov
push
push
stos
pushf
aas
pop
cmp
es
cmp
dec
mov
movsb
pop
xchg
add
sbb
adc
ret
or
sub
mov
xchg
jl
jmp
add
xchg
adc
cltd
rorb
ja
mov
mov
nop
popf
movsl
insl
pop
daa
jg
lahf
mov
fdivrp
sub
movsb
mov
jecxz
push
mov
mov
sbb
fdivrs
call
imul
stc
cmp
push
push
sbb
lods
mov
add
and
cmpsl
nop
addl
scas
add
lea
movsb
push
sub
adc
fldenv
cmp
fldenv
test
aaa
mov
imul
xchg
or
push
mov
addr16
popa
fidivl
push
shrl
push
push
gs
lret
bound
cmc
daa
fmuls
push
adcl
inc
ljmp
xlat
and
gs
popa
mov
mov
arpl
bound
lods
ljmp
ficomps
daa
mov
mov
ja
notl
dec
add
inc
jecxz
outsl
dec
inc
push
xlat
inc
aas
xor
das
popf
and
adc
xorl
shrl
ja
mov
pop
sbb
lods
aad
ljmp
lret
dec
add
jb
out
sub
sub
inc
lret
sbbl
xor
or
lods
inc
inc
and
js
xlat
mov
idivb
pop
int
mov
js
mov
shlb
ja
inc
jb
adc
adc
cld
mov
fildl
and
jl
ret
enter
push
shl
lods
mov
vpshufd
dec
out
push
xchg
mov
jmp
scas
mov
test
mov
and
addr16
mov
sub
push
movsb
in
mov
push
aaa
jmp
jle
fsubrs
mov
out
adc
jle
dec
inc
add
clc
fisttpll
mov
negl
icebp
scas
in
sbbb
pop
cltd
movsl
call
pop
mov
mov
push
inc
xchg
pop
or
adcb
xchg
push
inc
dec
and
ret
pop
push
outsb
adcl
scas
in
outsb
xlat
jae,pt
pop
inc
mov
aas
add
loopne
pop
loopne
pop
in
sub
aad
sub
xor
cld
jp
push
arpl
adc
cmpsb
mov
pop
les
insl
mov
cld
mov
loop
std
cmpsb
jbe
out
jbe
jae
jmp
sti
sbb
les
lahf
jb
mov
pop
mov
mov
push
ret
mov
aaa
test
mov
lret
xchg
cmpsb
sub
add
xor
push
or
gs
lods
orl
add
xor
and
iret
lret
mov
mov
hlt
shll
insl
mov
inc
in
inc
loopne
push
mov
mov
sub
fcmovu
or
out
cmp
in
mov
jns
jle
jns
ja
mov
gs
rorl
bound
sbb
add
addr16
rcrl
push
bound
xor
idiv
loopne
sub
sub
sbb
push
les
hlt
imul
insl
ja
rclb
leave
mov
fldcw
and
popf
sbb
das
cmc
adc
dec
xchg
into
add
push
shl
and
inc
jl
scas
popf
add
dec
shrl
dec
xchg
orl
scas
jl
sarb
imul
mov
mov
xor
push
mov
scas
mov
cmc
lahf
std
pop
push
bts
mov
insl
rcrb
xchg
mov
xchg
inc
jo
push
je
mov
popf
adc
test
fs
adc
add
inc
out
pop
nop
xor
jp
cmp
lods
sub
push
pushf
mov
or
cs
inc
cltd
idiv
aaa
aam
shr
leave
mov
mov
dec
std
jo
mov
mov
sub
lds
jnp
mov
jns
push
cmc
fyl2x
ja
rcl
dec
shrb
mov
dec
fs
mov
xor
pop
cwtl
jmp
popw
inc
fstpl
outsl
jae
sbb
inc
inc
stos
lret
ret
cmpsb
adc
sbb
pop
or
sysret
ds
mov
sub
xorb
cltd
repnz
ret
sbb
fcomps
pushf
mov
or
scas
mov
pop
jp
jge
pop
pop
ja
lcall
mov
xor
pop
dec
pop
stos
lods
push
dec
das
mov
mov
cmp
xor
fwait
js
pop
lret
ljmp
clc
pop
inc
jo
repnz
movsl
cmp
pop
fisubs
shll
icebp
and
js
jge
pop
mov
addb
sti
incb
jae
in
mov
mov
mov
mov
push
pop
or
add
repnz
xor
adc
pop
in
adc
cwtl
pop
cmpsb
jbe
dec
in
and
add
mov
enter
add
push
pop
adc
xchg
imul
lods
outsb
ret
rcrl
movsb
and
out
addr16
adc
std
mov
dec
out
xchg
rol
push
sbb
adc
out
pop
cmp
scas
xchg
xlat
cmp
push
mov
sbb
cmp
xchg
out
sub
lahf
jno
test
jecxz
pop
fldl
pop
sbb
lcall
cmp
insb
fisubl
mov
jp
jl
jl
sub
xorb
mov
fwait
sbb
xor
cs
aad
in
mov
jmp
xchg
int
mov
mov
dec
test
mov
shlb
sbb
push
xor
stos
sub
test
adc
mov
test
or
sub
mov
dec
pop
adcb
jecxz
xlat
rcr
jecxz
pop
cli
pop
mov
ja
add
scas
jbe
mov
add
dec
jbe
cmp
jmp
mov
mov
dec
aas
clc
and
fmuls
sbb
jns
je
jmp
push
inc
mov
mov
pop
fidivrl
shlb
aad
ja
imull
roll
into
jno
cmp
lock
insl
adc
jp
inc
cmpsl
inc
add
dec
sub
push
lods
push
into
gs
divl
ret
call
pop
cmp
arpl
dec
outsl
add
dec
outsl
ficomps
gs
leave
fs
pop
sub
cmp
cli
dec
mov
test
cld
add
mov
mov
repz
leave
push
pop
mov
xor
rcrl
imul
xchg
lret
sub
bound
mov
sbb
cmp
loopne
lret
sbb
je
xchg
addr16
stos
and
push
lods
mov
iret
cmp
enter
out
xchg
imul
or
sub
pop
cltd
cld
xor
shll
sbb
aaa
xor
jle
mov
add
leave
fimuls
pop
sbb
cltd
movb
leave
pop
xor
into
test
test
dec
xchg
push
adc
or
icebp
adc
inc
dec
jmp
lahf
cli
xor
es
dec
cmp
xor
xor
insl
imul
jo
out
repz
dec
addb
mov
jl
je
lods
cmp
or
jbe
mov
xor
sub
sbb
lret
je
mov
out
jae
sbbl
push
adc
nop
mov
sub
stc
mov
sbb
push
gs
push
shll
sub
cs
add
hlt
nop
in
push
mov
mov
lods
adc
lret
les
dec
sti
int
mov
sbb
push
stos
sbb
scas
xlat
jno
push
lods
or
dec
scas
add
mov
xchg
loope
jecxz
imul
pop
ja
cmp
ja
adc
mov
aad
lret
mov
jb
pop
gs
dec
xor
add
jge
push
ljmp
mov
cmp
outsb
cmpsb
jo
push
fnstsw
add
mov
cmp
insl
out
xchg
stc
dec
lahf
mov
dec
push
jg
pop
popf
lds
int3
or
int
mov
in
lds
adc
inc
jecxz
jb
fs
pop
imul
sub
mov
orb
mov
push
loopne
fcomps
cmpsl
cmp
mov
cwtl
xchg
enter
dec
movsb
arpl
fs
pop
cli
cli
push
mov
cld
or
sbb
daa
mov
test
incl
jae
push
hlt
hlt
lods
mov
lret
adc
sbb
fistpl
push
and
ljmp
pushf
sbb
rorb
dec
aaa
jnp
cmpsl
sbb
push
mov
or
jnp
cld
in
lods
pop
xchg
mov
outsl
jmp
cmp
push
adc
cmp
xchg
js
out
ret
and
in
pop
push
int
sbb
sbb
xchg
iret
adc
add
iret
les
pusha
mov
mov
cmp
or
xor
lods
mov
dec
cmp
xchg
out
ss
cmpsl
mov
or
sbb
stc
add
sbb
hlt
faddl
shlb
faddl
fwait
rcrb
sub
repnz
ja
rorl
in
dec
test
add
ss
sbb
pop
fisttpl
outsb
imul
sbb
cmp
push
push
sub
mov
pop
fnstsw
ret
push
in
loopne
sub
lea
inc
dec
sbb
std
dec
inc
sub
dec
divl
addl
xchg
sti
out
stc
test
or
mov
add
sbb
push
hlt
aaa
cmpsl
jne
cmp
mov
pop
sbb
in
pop
pop
cmp
and
sbb
dec
mov
cwtl
cmpsl
rcll
ret
pop
mulb
add
or
mov
dec
xor
cmp
out
inc
mov
call
sbb
mov
clc
aas
in
mov
or
test
fwait
xor
mov
movsb
mov
stos
mov
pop
mov
jb
mov
pop
or
inc
sbb
jge
mov
fldenv
inc
push
jp
add
xchg
ret
fucomp
nop
lods
insl
jecxz
in
and
lds
dec
into
cmp
xlat
and
and
xor
xchg
jg
fwait
in
insb
xlat
in
pop
outsl
sub
test
dec
in
jmp
pop
adc
lcall
frstor
orb
mov
xchg
mov
scas
adc
mov
fs
inc
mov
packuswb
add
and
int
and
sarl
and
pop
in
jnp
insb
dec
stos
mov
out
push
loopne
test
and
clc
xchg
arpl
int3
cmp
cmp
lahf
loope
and
js
and
sbb
in
inc
mov
mov
cmpsl
mov
out
movsl
in
rcrb
fdivrs
xor
adc
push
mov
mov
xchg
push
xchg
push
jmp
jns
xor
lock
inc
into
fiaddl
in
adc
lds
inc
inc
shlb
adc
mov
mov
push
dec
test
hlt
test
repnz
jmp
dec
ljmp
dec
cli
pop
ljmp
jb
adc
pushf
outsl
jmp
or
dec
xor
dec
fldl
mov
test
dec
pop
cmp
pop
inc
jb
mov
add
and
xor
xor
fstl
pop
mov
rclb
and
jb
scas
cmp
pop
mov
or
dec
test
clc
sbb
cwtl
dec
sar
movb
repnz
into
xchg
adc
out
mov
insb
cmc
pop
out
mov
pushf
lret
push
mov
cld
aam
push
test
cli
mov
insl
xchg
outsl
pop
leave
out
test
jo
dec
ja
int
popl
dec
mov
xchg
out
mov
inc
mov
xor
xor
xchg
repnz
sbb
dec
mov
movb
je
aas
imull
movsl
mov
sub
mov
xchg
mov
scas
popl
dec
inc
jl
lret
jo
in
dec
fmuls
test
pop
ja
mov
xchg
mov
lock
inc
lds
mov
mov
aas
jne
jge
mov
xchg
pop
cli
lahf
pop
jecxz
daa
movsl
aad
cli
clc
mov
xor
out
push
pop
push
push
jg
js
cmc
arpl
subb
das
add
andb
jbe
popl
dec
inc
mov
add
xchg
imul
mov
pop
movsb
cltd
push
stos
cmp
xor
mov
scas
inc
icebp
fdivrp
push
mov
xchg
cmp
mov
out
sub
js
mov
inc
lahf
adc
add
push
jl
ret
cmp
sub
dec
jb
std
adc
fs
sbb
xor
push
or
mov
div
pop
xor
into
add
pop
nop
mov
pop
fldcw
into
cmp
mov
imul
cltd
movsb
scas
movsb
xchg
mov
es
pop
adc
mov
mov
aaa
mov
cli
push
hlt
lcall
push
negb
std
loop
insb
shll
push
orb
jle
addb
sub
les
pop
push
mov
push
cmp
inc
xchg
adc
outsl
xorl
sub
add
mov
mov
into
cmc
orb
les
jg
daa
push
dec
aas
fwait
ret
mov
inc
and
std
jbe
sarl
push
in
loope
sbb
popa
sub
iret
inc
decb
cltd
ss
inc
mov
push
or
lret
stos
faddp
mov
mov
mov
jmp
mov
jge
insb
out
push
pop
or
idiv
push
dec
cmc
add
addr16
dec
sbb
cmpsb
sbbb
xor
jge
ss
add
cmp
ret
daa
cwtl
xor
lahf
out
and
dec
push
lea
and
insb
nop
ret
mov
imul
loopne
jmp
hlt
lret
aaa
xchg
nop
test
or
imul
xchg
mov
imul
lock
and
push
or
inc
xchg
sahf
push
hlt
aad
iret
add
notb
xor
pop
cwtl
adc
out
mov
test
fidivrl
lcall
popa
xchg
inc
fldcw
inc
test
pop
ss
push
insl
and
aaa
adc
cmpsb
jg
movsb
xchg
nop
and
imul
sbb
adc
scas
dec
test
or
jb
shlb
mov
aas
sub
or
aad
mov
imul
fcoms
dec
inc
jp
dec
fcomps
push
and
iret
out
lock
xor
mov
xorl
outsl
and
test
add
scas
mov
mov
xor
icebp
and
sbb
icebp
mov
cltd
push
sub
rorb
pop
or
cld
adc
push
fdivrl
mov
inc
jns
ficomps
rorl
xor
cli
mov
pop
bnd
lock
inc
mov
fiadds
and
sbbb
or
and
or
dec
jmp
clc
add
xor
cmp
mov
test
add
or
pop
aaa
xchg
adcb
outsl
cmp
test
or
pop
and
mov
shlb
insb
ror
fcmovb
not
movsl
cmp
dec
stos
addr16
and
sub
filds
pop
lret
ret
xor
add
jecxz
push
mov
pop
out
mov
xor
pop
arpl
xor
jge
adc
mov
outsl
int
pop
es
dec
fbstp
pop
hlt
incb
push
repnz
jle
dec
pop
inc
ja
sub
adc
sbbb
testl
add
jno
imul
fidivs
mov
jg
ja
cmp
mov
cmp
push
push
sbb
das
fidivl
lret
shll
insl
cld
rclb
fldl
fmuls
sbb
icebp
frstor
cld
inc
hlt
add
adc
call
cmp
lods
and
xor
je
pop
and
inc
jb
mov
and
int
xor
push
push
pushf
or
out
jbe
xorb
rsm
push
mov
sub
cmpsl
push
sar
mov
jmp
add
addr16
lahf
imul
mov
add
push
or
dec
sub
in
mov
push
or
sti
dec
push
insb
sbb
call
cld
popa
mov
mov
adc
sbb
pusha
js
adc
adc
mov
aaa
aaa
lahf
xor
jmp
fwait
sbb
out
mov
out
dec
out
sarl
fisttps
adc
adc
push
jmp
daa
aas
mov
inc
lock
repnz
and
outsl
aaa
popa
jle
call
mov
loop
xor
sbb
mov
dec
das
xchg
inc
scas
pop
insl
mov
out
rcrl
fs
adc
xchg
ja
data16
rorb
jnp
mov
out
pop
mov
push
shll
sbb
mov
xchg
jge
xchg
mov
jecxz
rorl
cmp
test
or
fldl
dec
loope
mov
jecxz
js
jp
aam
fidivrs
add
push
jg
xor
jg
loopne
in
mov
insb
add
lds
xchg
jmp
insb
shll
fucomip
pop
dec
mov
xchg
fmull
shrl
mov
data16
pop
push
add
std
mov
scas
lret
cmc
xchg
xlat
fstpt
bound
mov
loopne
jecxz
xchg
and
dec
xchg
mov
popf
inc
movsb
cwtl
mov
jo
pop
inc
stos
push
mov
ds
xchg
cmpsl
xchg
call
mov
dec
push
mov
ror
ljmp
stc
outsb
mov
push
adc
or
adc
in
sahf
test
hlt
enter
in
mov
stos
or
repnz
enter
pop
aaa
es
mov
aaa
in
shlb
xor
sti
ja
and
inc
pop
and
xchg
aam
daa
sbb
push
xor
push
sub
inc
mov
xor
lods
int3
aas
adc
inc
outsb
jb
je
xor
adc
adc
dec
int3
push
les
mov
shll
add
orb
ds
xorb
sbb
imul
fisubl
adcl
enter
sub
aam
ss
aad
xor
jge
jmp
push
sbb
insl
rolb
ljmp
inc
rorb
ds
in
mov
gs
shl
dec
inc
pop
xchg
sbb
fidivrs
push
pusha
cmpb
mov
xor
xchg
cmp
inc
bound
pop
mov
push
mov
mov
aas
iret
mov
sub
sbb
or
mov
mov
jp
insb
sarb
fs
mov
in
es
ficompl
popa
jg
jnp
rol
popa
sub
std
xor
cs
mov
mov
or
jnp
scas
cli
movsb
sti
cmc
add
and
jl
fs
outsb
les
inc
imul
push
fisttps
sbb
and
ret
imul
stos
popf
cmpxchg
out
add
aad
and
jg
mov
hlt
pop
mov
ret
adc
ret
sub
push
aas
clc
adc
push
out
push
jg
bound
pusha
stos
push
dec
cmpl
cmp
or
cmp
push
sbb
es
addb
jl
cmpsb
lods
add
repz
mov
push
mov
cmpsb
outsl
ret
push
mov
addr16
movsbl
add
outsb
jmp
xor
insl
lock
andb
mov
pop
js
xorl
std
bound
pop
jnp
clc
sti
adc
es
mov
add
and
mov
pop
adc
iret
sub
nop
cmp
pop
or
xor
push
pop
les
cmp
push
inc
aad
add
xchg
fstl
inc
mov
aaa
or
push
shl
push
mov
jbe
adc
push
dec
jne
xchg
test
cmc
sbb
sub
lcall
add
and
xchg
add
push
sbb
xchg
jns
pop
aad
repz
outsl
mov
xchg
pop
mov
fnstenv
add
mov
jmp
fwait
push
mov
xchg
mov
push
sub
ret
xlat
testb
inc
xor
or
cld
fists
imul
lds
xchg
cmp
add
test
cs
dec
pop
js
pop
in
adc
or
icebp
push
leave
and
sti
push
adc
push
push
test
mov
lods
imul
push
pop
pop
sarb
int3
lcall
and
sbb
inc
push
stc
lea
mov
stos
addr16
popl
xchg
aaa
dec
repz
adc
xchg
adc
out
adc
inc
and
jbe
das
add
xchg
inc
repz
or
ret
mov
ret
out
imulb
imul
xchg
por
dec
out
stc
insl
jp
dec
fildll
roll
lcall
push
jae
and
adcb
mov
push
mov
jge
and
mov
add
loope
test
or
int3
adc
push
mov
nop
outsl
jne
cmp
stc
les
cmp
push
cld
or
push
loope
popa
and
adc
ss
fmulp
pop
test
cmp
dec
pop
lods
lahf
clc
xor
push
in
data16
and
cld
sub
andl
mov
fcmovnb
or
insl
cmpsl
xor
sub
lret
inc
sahf
daa
fwait
sahf
sub
sbb
xchg
adc
icebp
inc
into
rep
fadds
lcall
and
arpl
xchg
test
lea
cmp
fisttpll
cs
inc
dec
out
cmp
in
fxam
aaa
and
add
push
nop
sbb
dec
ljmp
shlb
xor
mov
adc
pop
rcll
push
adc
out
jbe
fadd
out
push
rcrb
mov
cmc
stc
inc
in
xor
dec
jecxz
in
test
outsl
movsl
jb
mov
dec
inc
popf
lods
sbb
ficomps
sub
outsl
imul
push
cmpsb
arpl
insl
in
mov
mov
imulb
jle
inc
inc
int
enter
inc
and
stos
mov
push
jns
arpl
shr
sahf
sti
mov
dec
in
dec
in
lock
scas
mov
push
push
cmp
push
loopne
lahf
in
icebp
addr16
sub
test
push
call
stc
outsb
les
outsb
out
ret
jbe
or
xchg
sbb
push
mov
push
fisubs
jne
sbb
xor
pop
lret
clc
adc
mov
pop
mov
or
and
xchg
mov
dec
int
sarb
clc
inc
add
and
xor
push
cmp
sbb
xchg
push
cwtl
jne
mov
shrb
outsb
lret
lods
scas
shl
sub
fldlg2
push
adcb
leave
outsl
movsl
mov
push
mov
or
call
dec
out
pop
cmc
jle
and
in
testb
cmp
xchg
xlat
pop
shrb
int
sti
inc
rcr
jmp
movsl
icebp
mov
test
out
adcl
pop
int3
test
idivb
inc
ja
jle
dec
mov
jmp
or
scas
and
lods
jb
enter
mov
jb
adc
push
pop
mov
add
shlb
inc
mov
ljmp
fwait
pop
add
pop
lods
into
pop
imul
push
mov
imul
mov
add
mov
lahf
sbb
cmp
mov
ret
inc
loopne
cmpsb
nop
das
push
aam
push
out
fistpl
sbb
aas
lock
sbb
xchg
movb
leave
adc
test
pop
sub
inc
outsb
rcr
cld
icebp
mov
lock
test
dec
xor
or
gs
mov
pop
push
shl
dec
iret
roll
xlat
xchg
adc
mov
push
sti
sbb
add
dec
das
xchg
pop
fistpl
fwait
inc
cmp
std
push
jle
daa
sub
jge
inc
pusha
add
aaa
cld
sub
mov
test
push
addr16
sbb
pushf
mov
dec
arpl
push
fcmovnbe
dec
mov
inc
cli
lods
mov
in
ds
fisttps
add
push
inc
sbb
frstor
dec
mov
imul
sub
and
sbb
in
push
mov
mov
in
mov
adc
fildll
pop
scas
sub
and
and
mov
mov
pop
sub
lea
pop
into
mov
int3
inc
mov
fwait
test
jl
shlb
and
adc
cli
int3
push
les
xor
pop
mov
add
or
xorl
sbb
out
fmull
mov
fdivs
jp
cmp
mov
outsb
movsb
orl
inc
jae
push
cmpsl
sbb
dec
outsb
add
das
mov
lods
ds
push
out
imul
mov
add
outsb
jbe
ficoms
pop
push
cmp
cmp
xlat
xchg
inc
fsubp
test
popa
cmpsb
cmp
clc
push
ss
inc
jne
dec
push
insl
dec
sub
adc
rorb
roll
adc
mov
adc
xor
push
dec
in
cmp
pop
movsb
mov
and
mov
push
ret
ds
popf
out
addr16
std
and
test
cmp
fcomi
push
adc
inc
roll
insb
adc
test
cmp
add
add
push
inc
adc
mov
iret
ds
test
daa
imul
sub
insl
inc
jo
or
jbe
lock
imull
xchg
lcall
pop
mov
cli
pop
mov
enter
jns
xchg
adc
rolb
add
mov
and
jae
rclb
pop
push
mov
mov
inc
bound
neg
or
add
cwtl
dec
jnp
pop
outsl
and
add
rcl
lods
outsl
dec
scas
out
das
sbb
popf
arpl
fsubl
repz
clc
cmpsl
or
dec
aas
dec
sbb
or
mov
cld
stos
lods
xchg
push
mov
jl
xchg
mov
out
and
ret
int3
xor
dec
sbb
pop
xchg
pop
pushf
jg
xchg
insl
pop
add
cmp
cltd
sub
lock
hlt
xchg
mov
sbb
xchg
andl
and
popa
push
inc
out
push
push
mov
cltd
xor
ss
push
pop
stos
xor
cmp
sbb
cmp
mov
ret
push
push
jecxz
in
xor
push
xchg
es
pusha
jmp
test
add
pop
cmpsb
in
mov
mov
mov
aad
push
in
loope
pop
sbb
pop
mov
mov
lods
sti
xor
jns
data16
addr16
pop
loopne
inc
insb
sti
ja
mov
fsub
mov
lea
mov
xchg
mov
sub
rol
insw
mov
add
out
pop
mov
fstl
mov
movswl
fnstenv
or
lea
add
es
xchg
loopne
loop
push
or
sub
bound
dec
pop
ds
repnz
jmp
bound
outsb
push
mov
xlat
cli
mov
inc
sbb
cld
inc
pop
sbb
loop
shlb
insb
mov
cmp
mov
outsl
dec
lcall
jmp
div
mov
inc
mov
imul
call
sahf
sub
sub
fcmovu
fadds
lret
popa
popf
in
pop
jmp
xor
mov
hlt
xor
daa
lods
repz
inc
pushf
ds
push
shl
sub
add
in
cmp
popa
icebp
xchg
in
mov
out
xchg
fsubs
sbb
lahf
addr16
pop
xchg
daa
or
cltd
ds
pop
and
pop
push
add
int3
sub
bound
hlt
push
lcall
cld
xchg
fists
pop
push
fisubl
movsb
fsubl
sbb
idivb
arpl
cld
das
or
iret
jl
add
inc
repz
clc
inc
pop
cmp
loopne
mov
lret
imul
mov
adc
arpl
cmpsb
pop
inc
sbb
mov
cmp
jle
push
cmp
mov
push
push
pop
mov
cmp
dec
pop
fstpt
cld
xor
xchg
ret
js
xlat
push
push
orl
add
pushf
hlt
rclb
mov
mov
mov
pop
cmp
sti
insb
leave
outsb
pop
insl
shrl
mov
dec
imul
dec
ret
xchg
and
fmulp
adc
and
pop
dec
or
pop
xlat
movsb
and
jl
mov
pop
out
cmp
push
popa
mov
testl
and
mov
out
jb
mov
fs
jmp
daa
and
fadd
shlb
movl
adc
testl
jae
push
fdivs
cmp
jo
ljmp
pop
cltd
cmc
outsb
jge
sbb
leave
stc
cwtl
xchg
sub
mov
lock
jl
cmp
insl
mov
in
std
mov
and
loope
js
fimull
jnp
stc
adc
inc
popa
in
inc
ljmp
jnp
out
or
mov
and
xchg
mov
jg
push
cmp
xor
sbb
fistpl
lods
test
push
mov
push
or
out
jmp
test
lcall
adc
mov
decb
jae
popa
mov
sbb
xor
movsl
pop
stos
mov
scas
out
addps
leave
and
ds
lret
push
dec
mov
popf
pop
js
xor
push
icebp
rolb
or
sub
sti
or
outsl
lret
and
aaa
repz
pusha
jg
pop
daa
ret
out
mov
cli
call
ja
xchg
in
jbe
adc
stos
push
jge
leave
sbb
ss
sub
or
sub
pop
sub
test
outsb
loopne
cli
lods
inc
mov
adc
xchg
popl
test
lods
sbb
cmp
inc
into
bound
aas
mov
and
test
in
stc
loopne
mov
lds
ret
pop
ret
fxch
hlt
jle
xor
add
pusha
fildl
jnp
mov
xor
clc
mov
dec
out
push
shll
daa
movsl
aam
sti
mov
or
xor
ljmp
test
inc
pop
lock
mov
inc
sub
data16
sbbb
or
lock
pop
test
scas
fwait
shlb
fdivrp
dec
add
inc
push
jp
fwait
lahf
pop
sub
lea
clc
popa
call
sub
icebp
sti
not
inc
lods
adc
daa
xor
scas
loope
movsb
inc
xchg
inc
inc
mov
xlat
dec
jno
add
in
adc
je
imul
aas
push
add
pusha
icebp
dec
mov
jno
test
adc
cmpsb
sub
shll
jecxz
popf
test
mov
cmp
jo
cmp
enter
dec
repz
mov
push
out
jbe
pop
xchg
xchg
lds
or
cmpsl
icebp
stc
sti
cwtl
and
adc
call
mov
ljmp
dec
bnd
sub
dec
and
lret
je
fdivrp
stos
test
pop
xchg
sti
mov
outsb
jns
jecxz
test
es
inc
or
push
ds
sbb
mov
push
xor
jecxz
lret
cmpb
dec
push
pop
sub
or
je
jp
scas
pop
insl
pop
ret
mov
jl
out
imul
js
cmp
adc
or
sbb
push
mov
cmp
mov
inc
sbb
fcoml
cmp
mov
test
stc
andb
push
inc
mov
xorl
mov
repnz
repz
lds
mov
test
push
lret
jecxz
add
pop
jnp
sbb
in
dec
clc
loop
mov
loop
cltd
and
test
inc
or
mov
popa
out
jmp
mov
mov
dec
jp
mov
sbb
or
mov
xchg
pop
aam
push
in
sbb
pop
jns
shll
into
test
pop
push
ret
lea
mov
insl
fnstenv
scas
imul
cmpsb
cmp
mov
les
cmp
push
xor
fisubs
test
int
js
jmp
fisubrl
aaa
popf
add
clc
sarb
jmp
fstpt
lods
adc
arpl
xor
arpl
jo
out
mov
out
inc
jb
das
or
push
push
mov
cmp
adc
lahf
cmpsl
xor
sub
fidivl
jne
sub
dec
mov
cmp
fstps
popa
xchg
xlat
into
lock
mov
jae
test
dec
mov
icebp
outsb
stos
enter
cmp
mov
das
hlt
sbb
aad
mov
icebp
fwait
loop
push
out
mov
mov
mov
cmp
push
adc
test
stos
pushl
or
xor
pop
rolb
push
sbb
jbe
mov
sti
rorl
imulb
add
jp
jmp
inc
jle
cmp
mov
xor
mov
js
int
repnz
adc
movsl
out
loope
sub
les
push
dec
outsb
shll
pop
sub
sub
add
pop
mov
pop
and
notl
lahf
je
mov
testl
stos
cmpsl
jmp
mov
mov
pop
dec
cli
xchg
int
cmp
pop
cmp
jns
lea
enter
out
jno
cmp
inc
inc
das
mov
aam
data16
mov
sbb
clc
jae
dec
dec
mov
push
test
cmc
cmp
mov
adc
dec
out
and
pop
jno
bound
pop
mov
xchg
inc
dec
jecxz
mov
push
stc
ret
aas
mov
sub
xor
vpand
jne,pn
loopne
stos
mov
data16
aaa
data16
inc
jl
adc
insl
fidivl
jl
loop
iret
dec
add
push
mov
dec
mov
in
or
lods
adc
push
loope
addb
out
dec
xchg
aam
or
dec
pop
xor
push
pop
dec
pop
hlt
dec
leave
mov
adc
aaa
lret
push
mov
fistps
jae
mov
inc
das
pop
sti
and
cmp
xchg
clc
aam
and
cmp
fisubrs
push
repnz
mov
ss
dec
inc
xlat
pop
mov
rcrb
or
fsubrs
movsb
popa
mov
ja
clc
mov
sub
stos
jne
jae
call
nop
mov
into
adc
lds
arpl
insl
xor
jl
jge
cli
pop
outsb
stc
addb
add
dec
dec
out
pop
pusha
pop
out
cmp
push
or
mov
cmc
lcall
and
es
mov
ja
push
add
mov
push
aas
sti
jne
loopne
cmc
push
add
push
jbe
push
lds
leave
out
add
mov
fwait
inc
xchg
sub
dec
mov
sub
dec
cmpsb
and
in
loop
pop
inc
jo
xchg
loopne
mov
jbe
loop
fcom
adc
lods
test
fdivs
in
push
jge
test
cwtl
jns
inc
ds
call
test
mov
in
pop
mov
movsl
push
es
push
xchg
aad
mov
fstl
xchg
pop
ret
aam
xchg
popa
repz
fst
fistpl
fdivrs
jno
test
mov
jae
les
jo
jecxz
int
pop
fsubs
mov
bound
push
scas
jno
inc
add
mov
inc
mov
xchg
lock
cmp
cmpsl
incb
in
test
xchg
shl
lods
push
jns
dec
arpl
lods
pop
jl
cli
int
and
cmp
push
cmp
add
pop
outsb
push
cmpsb
fimull
push
mov
jb
sub
lret
add
shll
cli
stos
lock
pop
scas
inc
mov
jl
inc
pop
inc
pop
mov
dec
or
popf
out
dec
movsl
mov
lcall
jge
dec
inc
inc
ja
aam
or
adc
mov
xchg
inc
test
or
sub
or
push
outsl
shll
xchg
fsubp
mov
jg
push
xor
cs
xchg
cmc
test
sahf
pop
adc
rol
cmp
fistl
aad
frstor
aaa
mov
cmp
cmp
mov
enter
mov
add
xor
fildl
cltd
push
pusha
xchg
xchg
decb
mov
inc
cmp
pop
cs
push
push
xor
adc
inc
pop
or
pusha
sub
pop
mov
out
mov
push
xor
lret
add
xchg
jecxz
cmpsb
mov
imul
stc
xor
popa
push
aad
or
rclb
in
adc
sbb
jl
and
test
mov
addr16
gs
sbb
pusha
test
daa
inc
sub
mov
push
cld
jne
out
xchg
pop
mov
pop
push
mov
push
pushw
jnp
test
inc
xor
mov
andl
dec
out
fistpl
shrd
ss
and
movsb
dec
mov
in
ficomps
clc
aas
add
push
repnz
push
cmpsl
out
stos
call
inc
lret
out
sbb
mov
add
and
into
ret
push
jmp
loope
cltd
add
jae
je
mov
jp
out
fists
pop
jp
xchg
inc
outsl
cmp
xchg
pop
jge
fwait
pop
adcl
and
mov
cltd
loope
pop
pop
lock
dec
sub
gs
out
dec
leave
pop
leave
sahf
jp
inc
add
add
pop
sub
ret
in
mov
mov
nopl
setb
test
es
das
jg
adc
xor
dec
popa
enter
into
in
ds
mov
mov
xchg
lret
pop
lcall
stos
push
mov
add
leave
in
lcall
jbe
mov
loope
xor
addb
shrl
gs
in
push
in
lea
dec
pop
insl
jmp
add
xchg
sbb
sbb
adc
int
stos
jnp
xlat
clc
xor
push
ret
lock
lcall
repnz
lock
das
inc
sbb
insb
call
push
jle
rorl
jge
jb
pop
call
lcall
neg
xchg
xchg
push
mov
add
stc
nop
gs
stos
fmuls
movsl
scas
idivb
inc
xchg
das
or
jo
jbe
pop
repz
ss
dec
jmp
jmp
addr16
jge
mov
add
dec
movsl
dec
imul
and
lods
ret
adc
dec
cs
xor
je
jl
jne
fildll
or
inc
imul
lock
sbb
mov
out
ja
fcoms
push
es
pop
mov
add
cmp
frstor
xchg
or
xchg
cmp
lret
cli
fcmovnb
or
iret
rcr
mov
subb
or
lcall
aad
in
adc
mov
dec
je
or
pop
es
or
std
das
or
aaa
out
mov
ret
dec
push
inc
inc
jge
insb
sarl
mov
sbb
out
dec
fwait
sbb
mov
imul
jp
lret
cltd
iret
adc
push
pop
shrb
gs
insl
fs
loop
ds
mov
xchg
push
jae
cmp
into
es
in
gs
inc
notl
lcall
cs
cmp
or
push
rolb
mov
fldt
cs
fidivrs
xchg
fimull
jg
pop
mov
jg
mov
or
lret
mov
cmpsb
xchg
dec
das
jl
mov
jle
lahf
push
mov
push
nop
jecxz
add
push
jne
or
mov
sub
jno
loopne
lcall
cmc
sub
scas
repz
cmpl
or
mov
fldcw
adc
aaa
lahf
dec
das
mov
js
push
inc
mov
imulb
pop
xchg
add
das
push
mov
scas
push
mov
mov
or
mov
sub
xorl
popf
lret
scas
shrb
test
jne
mov
scas
loope
int3
ja
adc
sub
int
xor
mov
or
shll
jno
push
xorl
cmc
nop
and
aas
sbb
mov
sbbl
pop
push
or
mov
and
add
js
test
ljmp
sahf
lret
cmc
imulb
ja
add
stc
scas
popf
aad
jl
xchg
out
jne
or
dec
std
mov
mov
shlb
xchg
jne
testl
pop
ljmp
inc
fstp
es
xchg
lock
fistpl
in
cmpb
mov
xor
das
lret
or
sbb
pop
xchg
cld
out
xor
mov
add
dec
or
and
mov
gs
add
sbb
aam
hlt
call
int
insl
xor
inc
in
je
push
sub
out
or
sub
dec
rorb
fistps
fistpl
fisubs
lret
cli
cmp
and
aam
clc
cs
outsl
mov
out
scas
jl
ficompl
and
ljmp
dec
lods
adc
push
jae
mov
lcall
sbb
sbb
andl
pop
jmp
cmp
dec
fldz
xchg
imul
sbb
mov
cmc
mov
shrl
divl
mov
jae
out
insb
sbb
vunpckhps
pop
insl
sbb
popf
inc
push
ret
jo
adc
push
mov
sub
and
mov
sbb
mov
mov
jne
adc
xor
jmp
aam
pop
fs
sbb
push
outsb
fidivrl
test
in
jno
push
adc
jnp
inc
dec
push
adc
or
ret
rolb
daa
adc
lahf
and
js
hlt
fsubrs
push
inc
mov
mov
push
sbb
and
out
mov
fcmovbe
adc
fs
xchg
cmp
xor
fsts
cmp
hlt
filds
inc
testl
push
daa
test
sub
stc
mov
fs
jne
ja
iret
sub
dec
lret
push
jle
adcl
mov
fwait
or
adc
repnz
lea
jg
mov
lock
stos
aad
imul
sti
jg
pop
ljmp
cltd
inc
lock
mov
jmp
push
cmpsl
lods
outsl
stos
add
xchg
mov
jecxz
lock
in
mov
and
test
imul
jo
out
jp
pop
rcll
cmp
push
jb
dec
pop
repnz
cmp
sub
mov
jo
jne
je
ret
cmp
sarb
push
movsb
data16
dec
lret
in
pop
inc
mov
cli
mov
add
sbb
pushf
add
lret
push
dec
repnz
popa
scas
lods
loope
shrb
push
sub
std
xchg
adc
adc
lock
sbbl
push
push
lods
cwtl
out
fwait
jmp
imul
call
pop
mov
fdivp
ja
lahf
or
mov
stos
iret
sbb
ret
push
push
pop
cmp
sub
insl
sub
mov
es
jl
xchg
ret
movsb
jnp
shll
mov
sub
pusha
pop
jb
mov
incb
lahf
mov
xlat
lahf
push
mov
es
xchg
cmp
dec
cmp
call
inc
jg
rorb
cmp
mov
xlat
fimuls
test
adc
sti
lods
test
xchg
cmpsl
in
add
leave
out
cmp
scas
dec
pop
inc
fbld
sbb
mov
jo
inc
cli
fidivrs
push
or
dec
movsl
sbb
cmpsl
push
mov
sub
bound
xor
mov
ja
jb
push
aas
jne
shll
pop
loope
and
out
out
scas
and
sub
std
scas
xchg
pop
stos
lock
in
mov
xor
sub
push
jb
bound
gs
sbb
sbb
mov
and
stos
lea
mov
out
faddl
xchg
shr
lret
loop
pop
and
mov
jae
push
xchg
sbb
aas
decb
jno
aam
xchg
push
imul
push
jp
pop
cmc
insb
mov
stos
sub
outsb
push
insb
sbb
jo
jns
inc
lret
adc
inc
pop
jl
xor
imulb
push
daa
sahf
mov
and
popf
push
xchg
jnp
stc
imul
jecxz
dec
cmpsb
aam
fsub
sti
jae
ja
outsl
fistpl
pop
into
and
imul
push
mulb
cmc
push
xor
adcl
push
or
adc
sub
insb
lret
ja
push
adc
cld
cmpl
outsl
out
sub
stos
jge
cld
mov
test
cld
out
add
movsb
int
sbb
test
outsb
add
jnp
mov
cmc
out
dec
enter
sbb
mov
daa
and
jl
cwtl
sbb
push
jne
adc
lret
mov
xchg
xor
mov
rcl
jecxz
sbb
jg
jecxz,pn
inc
cmp
imul
push
mov
xor
push
lods
lcall
shld
xor
mov
insl
sbb
pop
mov
lods
mov
fistpll
out
and
sbb
or
and
je
and
inc
enter
std
jbe
add
pop
scas
push
sbbb
inc
mov
addr16
jae
xor
and
pop
pop
fidivrl
sbb
push
xor
loope
add
adc
std
insb
inc
lods
idivb
jle
and
or
xlat
dec
leave
adc
subl
icebp
roll
jl
je
cltd
lahf
std
mov
fs
stos
mov
adc
jae
lea
outsl
loopne
int3
sbbl
jne
push
ds
pop
shll
js
mov
fs
sbb
push
lret
ret
hlt
cmp
sbb
pop
adc
jg
ds
rcll
pop
pop
in
fs
jecxz
add
and
push
leave
add
and
pop
pavgb
test
insb
mov
ficoms
push
or
mov
lea
sub
movsb
popf
mov
cld
cli
jl
cmc
sti
add
in
push
add
ficomps
scas
fsubp
repz
sbb
mov
sbb
and
add
sub
mov
jl
decb
cltd
push
rolb
enter
cmc
sbb
jp
aas
xchg
cs
nop
mov
jnp
test
push
test
adc
sbb
dec
mov
fbld
jmp
and
jge
mov
push
adc
inc
test
xchg
or
jns
dec
cwtl
icebp
or
mov
lret
fldenv
push
cmpsb
lods
mov
mov
sub
dec
xor
aas
fcompl
dec
jp
sub
mov
jp
sub
inc
rep
push
sbb
int
dec
pop
rorb
fnstsw
inc
jne
ljmp
cld
jmp
and
scas
movsb
xor
fs
xchg
jmp
js
cmp
sub
pop
inc
mov
mov
adc
subb
xchg
mov
std
out
or
push
push
and
notb
push
or
add
mov
insl
out
jge,pn
xor
xor
out
mov
fidivrl
lahf
cltd
addr16
orb
outsb
je
cwtl
and
rcrl
pop
data16
ret
and
enter
in
push
das
mov
dec
inc
sub
adc
mov
aas
daa
mov
roll
mov
rol
mov
lret
mov
push
or
loopne
aas
mov
data16
xchg
lock
in
test
mov
dec
cmp
loopne
mov
jp,pn
je
sub
push
adc
cli
mov
arpl
out
addr16
xor
cwtl
dec
vmwrite
mov
dec
jg
sbb
mulb
cmp
aad
jg
pop
dec
mov
adc
loopne
roll
xchg
mov
aam
lea
inc
mov
sub
mov
push
push
push
sbb
adc
and
cmp
out
xor
inc
sub
lea
mov
pop
push
mov
data16
xor
xchg
mov
push
xchg
sub
fisubrl
scas
pop
das
or
mov
loopne
std
mov
insb
adc
push
cmp
and
aam
arpl
iret
inc
std
lock
test
insb
mov
add
dec
mov
std
loope
add
xor
jae
sub
loope
xor
ljmp
jb
adc
add
dec
popa
add
pop
dec
jl
cwtl
mov
insb
aaa
push
gs
dec
sub
push
cmpsl
ds
in
xchg
pop
ja
mov
leave
xor
lods
sahf
in
dec
in
mov
pop
arpl
and
fwait
mov
inc
ss
les
dec
inc
push
push
dec
xchg
mov
test
push
jmp
sub
sbb
imul
stc
adc
int3
pop
shrb
dec
popa
adc
cmc
inc
dec
xor
pop
mov
sbb
ret
dec
in
sub
mov
push
push
sub
iret
dec
sbb
jno
ds
ds
cli
fcomps
mov
push
int3
adcl
push
rcl
add
cs
jno
push
mov
cmc
add
gs
ret
loopne
orb
mov
pop
outsb
out
push
push
lret
inc
cmp
jno
loopne
adc
stos
push
mov
ret
in
cmc
cmp
add
popf
sub
fwait
popf
add
es
jnp
mov
dec
push
pop
sub
out
dec
dec
xchg
repz
jno
adc
fists
sti
push
sarb
inc
add
jno
cli
jo
aam
ret
xchg
xchg
pop
add
jmp
mov
mov
pop
fisubl
inc
mov
decl
fdivrs
push
or
xchg
dec
movswl
jg
inc
sahf
outsl
sbb
cmp
jbe
add
cmpsb
mov
mov
int3
aaa
lds
les
push
ljmp
inc
push
scas
adcb
xchg
adc
jp
xor
sbb
add
stos
je
pop
cmp
shrb
mov
cmp
jl
jnp
popa
movsb
enter
inc
es
dec
rorl
insb
addr16
and
into
xchg
insl
dec
mov
push
test
movsl
pop
daa
jp
test
push
sub
aam
bound
hlt
adc
lds
xchg
lods
cmp
outsb
out
ss
loop
cmp
sub
dec
fs
jbe
ja
stos
add
test
push
mov
sub
or
cmp
mov
xor
inc
js
rolb
jl
inc
mov
enter
sub
push
push
add
testb
ror
pop
adc
aam
or
push
fs
notb
aas
push
ja
sbb
std
jge
scas
fwait
dec
popa
jnp
sub
and
cmp
enter
lock
popa
bound
inc
pop
movsl
shlb
mov
push
call
outsl
notl
pop
fimuls
aaa
push
jb
push
test
cmp
and
mul
clc
insl
add
mov
jle
cltd
mov
adc
fdivr
push
pusha
push
lahf
sub
insb
repnz
popf
dec
insl
hlt
mov
and
sarl
popf
sahf
adc
jnp
jp
ljmp
push
xchg
stc
idivb
mov
shl
andl
mov
cmp
xor
mov
mov
rcl
add
sbb
dec
in
pop
lea
in
xor
rolb
aaa
cmove
gs
sub
mov
rcrl
cld
sub
inc
jb
scas
mov
andb
mov
adc
and
test
or
jge
lock
into
daa
dec
sbb
jno
xchg
adc
popf
arpl
in
adc
xchg
outsb
xchg
cld
dec
mov
mov
mov
cmp
addl
sbb
and
add
pop
or
inc
mov
ljmp
call
sbb
and
cmpsl
mov
loope
neg
movsb
in
bnd
sbb
sub
shl
add
jno
je
cmc
adc
push
or
push
por
loope
sar
mov
lods
mov
pusha
mov
out
and
cmp
dec
jo
add
adc
testl
sbb
lds
pop
fwait
movsb
lods
sub
push
hlt
add
imul
cmp
lods
adc
jp
call
cmpsl
ret
fistpl
or
fptan
in
enter
dec
stos
fs
pop
pop
xchg
pop
adc
xchg
xor
or
imul
aad
add
or
xchg
dec
dec
pop
xchg
lds
push
mov
lds
lret
es
inc
xor
add
into
or
push
daa
or
bt
lock
ja
sub
xchg
cmc
inc
enter
xor
jb
push
notb
pop
adc
out
cli
cld
ss
sahf
lea
insb
cli
jnp
pop
repnz
mov
mov
sbb
jecxz
in
shl
push
lods
push
out
jmp
inc
stos
cmc
mov
in
and
push
mov
sbb
lea
bound
out
mov
mov
adc
xor
ja
in
jo
pop
insb
sbb
push
add
jge
jge,pt
out
je
and
sub
or
lret
jno
mov
fiadds
daa
and
sbb
xchg
fwait
sub
stos
sub
lret
scas
sub
enter
repnz
xchg
scas
pop
fistps
add
lcall
jne
jle
xchg
scas
enter
jb
aas
inc
xchg
push
icebp
mov
fwait
jge
bound
ljmp
lods
xlat
adc
mov
jecxz
adc
adc
in
xchg
bound
lret
push
movb
mov
test
es
in
movsl
insb
pop
cmpsl
and
rcl
pop
add
sub
mov
cmpsb
cld
cmp
stos
lock
int3
xor
xlat
mov
sahf
mov
aad
add
adc
and
xchg
xchg
pusha
sahf
dec
push
fisttps
cmp
jge
xor
xchg
mov
and
xchg
ret
mov
adc
test
scas
clc
cmp
ret
inc
pusha
out
jne
push
push
fsubrl
xchg
push
jp
or
mov
mov
cwtl
dec
dec
cltd
int3
pop
xor
adc
or
sbb
xchg
loop
out
jnp
xor
pusha
mov
lret
sti
lret
mov
or
add
lea
push
andl
xor
clc
scas
imulb
mov
test
push
cwtl
mov
aas
inc
xchg
cvtps2pi
push
push
pop
fcomps
ljmp
loop
cmp
mov
sub
mov
lret
daa
iret
lods
push
and
inc
or
mov
add
inc
sub
fcmovb
adc
aam
push
cli
dec
mov
ds
into
jle
push
xchg
dec
lods
lcall
int
scas
inc
lret
das
push
fmul
mov
xor
push
jne
loop
lods
sahf
das
or
lock
in
popf
jne
push
add
cli
lea
jo
cmp
pop
loope
fcoms
test
push
cmp
sbb
stos
mov
jns
loop
repnz
movsl
lods
push
dec
pop
or
iret
rorl
cmp
sahf
pop
fwait
in
mov
push
int
in
or
in
mov
insl
jo
xchg
or
out
outsb
test
and
pop
test
stos
loop
xor
push
cmp
testl
mov
nop
icebp
xchg
std
jmp
fisttpl
es
ds
shll
call
push
sarb
jg
inc
addr16
xchg
repz
xor
sub
jbe
daa
outsb
and
lcall
push
inc
dec
pop
imul
lock
jg
jecxz
dec
insb
mov
cmp
adc
jp
adc
fcmovne
inc
mov
int
popl
fimull
lea
in
xchg
pop
mov
and
or
push
pushf
in
fs
sub
shrl
xchg
mov
add
aad
mov
in
xor
fidivrs
es
dec
jg
mov
test
adc
lds
mov
ret
daa
push
or
adc
outsb
pop
inc
lods
cmp
add
clc
or
loope
add
daa
xchg
push
mov
mov
dec
sbb
jg
movsb
data16
adc
cli
mov
popf
fbstp
mov
xchg
outsb
sub
scas
xchg
push
xorb
stos
mov
in
call
in
cld
inc
insl
call
repz
frstor
push
pop
stos
shrb
mov
stc
test
js
add
sbb
xor
rorl
rcrl
lds
fstl
push
push
popa
jnp
dec
mov
loopne
leave
into
add
xchg
mov
inc
test
iret
fcmovnb
das
imul
or
ljmp
call
js
loop
dec
inc
and
push
out
ljmp
mov
xor
sbb
in
push
imull
add
dec
dec
scas
or
xor
jno
dec
mov
test
shrl
out
mov
adc
mov
movsl
mov
xchg
mov
aas
mov
dec
bound
ds
stos
push
aas
add
cmp
cltd
jl
pop
mov
add
cltd
add
mov
dec
pop
ret
call
je
mov
into
jb
and
and
xor
mov
test
or
insb
jmp
into
or
pop
dec
decb
mov
ds
cmpsb
outsb
ret
push
rcll
and
or
and
jne
xor
jbe
inc
pop
dec
testb
insb
nop
lock
fstpt
cld
out
add
inc
sub
testb
mov
shl
and
mov
cmp
inc
mov
call
jno
lods
outsl
cmc
xor
call
mov
sbb
dec
int3
arpl
rclb
or
mov
repnz
testl
add
data16
dec
mov
mov
push
jb
and
and
ret
cs
lds
das
jg
testl
addr16
pop
jp
mov
gs
and
cmp
add
test
adc
sub
xor
fidivl
outsb
pop
and
lock
roll
fcomps
dec
mov
lods
and
sub
scas
shlb
movsb
in
pusha
arpl
add
jo
movl
cli
mov
loope
xor
mov
ret
fwait
loop
hlt
xorl
xchg
pop
sub
mov
sub
mov
jnp
xchg
int
xchg
inc
jl
add
gs
sti
pop
mov
es
insb
xor
cmp
inc
inc
jge
imul
loop
pop
jae
lahf
add
cltd
mov
adc
sbb
jl
fisubl
stos
lods
or
sbb
test
mov
ds
pop
xchg
daa
lret
iret
incl
shll
push
and
cmpsl
mov
inc
xor
notb
jo
inc
loopne
mov
mov
jo
ret
aaa
cmc
imul
jg
inc
xor
or
cld
pop
cmp
dec
outsl
enter
mov
cwtl
mov
inc
das
mov
xchg
mov
cltd
mov
pop
leave
push
jnp
cmpsb
dec
jg
mov
adcl
loopne
dec
pop
dec
and
or
xor
lds
in
jns
sbb
andb
int
shl
test
rcrb
jecxz
sbb
cmp
xor
arpl
stos
and
mov
jmp
xor
push
cmp
cmpl
dec
mov
cmp
ds
cmp
push
repz
sbb
movsb
and
negl
jb
sahf
jo
pop
adc
or
and
rolb
cmp
cmp
jae
push
xchg
mov
stos
mov
jle
pop
mov
push
jg
xchg
or
js
shll
cmp
pop
push
call
sarl
pop
bnd
add
call
lds
sti
imul
mov
std
dec
test
xchg
js
sub
sub
inc
fldcw
neg
cmp
pushf
jge
scas
jle
xchg
dec
jns
mov
std
incb
dec
mov
or
xlat
ret
mov
out
push
or
div
popf
rclb
mov
mov
les
mov
jge
enter
adc
wrmsr
adc
sbb
push
adc
cmp
lea
fildl
or
dec
in
mov
sahf
daa
cmp
frstor
iret
pop
aaa
flds
lret
inc
int3
or
and
mov
std
mov
lret
das
cmp
rcrl
sahf
outsb
inc
fdivrl
sub
cli
js
pop
add
and
cmp
inc
je
fxch
leave
in
mov
xchg
and
repz
pop
adc
js
arpl
jae
mov
insl
add
cvtps2pi
adc
push
insl
sub
rcrb
bound
enter
push
sbb
sub
sar
divl
icebp
dec
xor
nop
push
fadd
adc
lea
into
push
les
add
fdivp
xor
push
pusha
jnp
push
sub
jne
pop
iret
jmp
stos
jmp
enter
mov
fsubr
adc
xchg
imul
pop
sti
sub
jnp
or
ja
or
add
fs
in
xlat
clc
cli
push
pop
xor
out
lahf
cli
test
mov
and
stc
cmpsl
mov
xlat
into
pushf
and
je
cmp
xchg
shrl
repz
in
xchg
jge
loopne
cltd
pop
popa
push
dec
in
rcl
js
and
ja
adc
into
mov
push
mov
cmp
scas
popf
mov
sbb
and
ret
aam
mov
in
cmpsb
xchg
cld
mov
mov
aad
clc
jns
mov
dec
xlat
xor
jp
cli
call
pop
rorl
push
pushf
xchg
test
xchg
sbb
pop
in
mov
push
pusha
insb
sub
lret
rorl
shrl
nop
push
or
jns
xchg
sub
adc
xor
dec
mov
loop
icebp
push
pop
adc
xchg
cwtl
jl
cmp
mov
mov
push
or
scas
pop
sub
iret
sbb
orl
cs
or
repz
jbe
cmc
arpl
cmp
fisttpll
test
imul
call
mov
cmp
cmc
push
fwait
repz
jl
mov
gs
mov
fistpl
and
lret
inc
add
lds
sbb
adc
mov
cmp
addr16
addl
les
pop
cmp
or
cltd
pop
xchg
cmpb
leave
pusha
cmp
dec
push
inc
mov
pop
jge
mov
pop
sbb
adc
lret
in
xchg
ss
jo
dec
ficoml
mov
outsb
jp
lret
ret
lea
mov
sub
lock
dec
outsb
sub
pop
cld
js
loopne
addr16
mov
mov
mov
mov
mov
fnstsw
lret
test
inc
insl
inc
pop
pop
jne
push
cs
xor
adc
stos
add
loop
aam
push
ljmp
sub
mov
mull
adc
mov
ds
jno
inc
js
int
jbe
adc
push
inc
jmp
out
in
jge
sbb
xor
insl
int
pop
mov
jg
xchg
xchg
push
pop
sbb
ja
fs
adc
aas
insb
mov
xchg
xchg
js
push
sub
dec
clc
adc
in
inc
or
mov
adc
cwtl
adc
mov
push
push
out
push
into
pushf
cwtl
add
sub
adc
or
je
sti
jp
enter
xchg
push
lock
gs
mov
push
insb
add
mov
cmpb
jbe
xchg
jnp
add
ja
mov
outsb
cmpsl
cmpsl
adcl
dec
push
lret
or
inc
popa
xor
call
jle
shrb
test
pop
gs
cmp
xor
in
ljmp
ljmp
fstpl
sbb
enter
inc
push
cmpsb
lret
adc
cmpsl
and
pop
les
mov
pop
sub
jle
pop
scas
and
mov
and
lods
sbb
xor
mov
sub
inc
fs
jle
into
mov
add
jb
jecxz
and
ror
mov
or
data16
pop
xchg
pusha
mov
or
ret
pushf
xchg
mov
movsb
loop
ror
js
nop
in
jmp
push
pushl
xor
push
and
sub
dec
mov
add
pop
addb
dec
cmp
cwtl
jmp
sub
pop
icebp
dec
xor
ret
push
cli
pop
jg
inc
jo
aaa
mov
mov
iret
sbb
aam
fidivs
mov
pop
mov
pop
jle
mov
hlt
dec
fsubrl
jb
mov
rcrb
test
dec
and
mov
icebp
es
and
jle
nop
fisttpll
jge
stos
mov
jno
js
repnz
aam
lds
adcb
sub
cld
iret
movl
cs
inc
loopne
div
dec
lods
shl
cltd
pop
adc
repnz
push
stos
mov
xchg
int
xchg
dec
cmpsb
cmpsl
sub
hlt
sarl
adc
xchg
movsl
xor
shll
std
xor
lods
mov
fidivrl
insb
lret
repz
movsl
cmpsl
xchg
lea
into
hlt
mov
xchg
dec
sbb
test
fs
gs
fdivs
pop
test
addl
cmp
mov
movl
fcmove
dec
scas
push
mov
lahf
push
test
mov
or
jmp
jl
sti
stos
or
les
mov
push
xchg
popa
xchg
mov
adc
insl
lcall
fiadds
ljmp
std
scas
and
jno
xchg
inc
cmpsl
xor
push
pop
out
lods
test
sub
jo
scas
sub
leave
cmp
loope
xorb
or
scas
push
rcr
hlt
shrb
mov
rclb
adc
cmp
daa
vaddss
adc
inc
or
cwtl
mov
je
les
dec
int
dec
ror
and
ja
decb
and
fistpl
push
mov
cs
sti
imul
ljmp
sbb
and
sub
in
fimuls
mov
mov
jp
gs
mov
out
jno
in
js
addr16
push
mov
lret
sbb
in
push
jne
mov
sbb
cltd
adc
jmp
insl
rcl
pop
mov
mov
mov
sti
arpl
cli
arpl
mov
aaa
mov
jmp
loopne
ret
xacquire
fsubrp
adc
scas
jmp
pop
lret
push
fisttpll
adc
push
mov
adc
sub
cmp
xor
cmp
pop
jno
pop
cwtl
and
dec
rcrb
orb
dec
pop
lods
cmc
shrl
int
push
mov
addr16
inc
jbe
cmpsb
loop
mov
lods
mov
jge
xor
setp
jnp
out
xor
xchg
mov
adc
pushf
adc
pop
lods
mov
push
jl
js
aaa
sbb
outsl
pop
push
inc
mov
cmp
adc
adc
cmpsb
pop
jb
icebp
lods
add
mov
jnp
mov
call
dec
loope
mov
inc
sub
jns
jno
sbb
das
mov
dec
fnstenv
xchg
adc
lret
pop
xor
int
iret
add
jo
mov
in
fsubs
xchg
pop
lcall
out
ss
out
inc
push
xchg
mov
ds
clc
sub
push
test
lret
fdiv
dec
sbb
andl
and
icebp
lret
sbb
sub
push
mov
neg
xorb
ljmp
stos
lods
icebp
mov
sahf
cmp
inc
inc
mov
cli
and
mov
movsl
sbb
fcomps
inc
out
xchg
adc
movsl
or
jns
mov
cmpsl
movsl
cld
inc
test
fs
scas
jg
repz
out
imul
or
or
or
and
xchg
loope
mov
ja
js
lods
nop
mov
mov
imul
add
repnz
movsb
inc
gs
lea
xor
mov
cwtl
lock
sub
push
aaa
and
dec
ret
pusha
lcall
lds
inc
insb
repz
push
shrb
fwait
mov
mov
call
lcall
bswap
add
push
imul
jae
jecxz
lods
xchg
pop
aas
adc
mov
inc
or
add
pop
push
sub
mov
mov
mov
mov
mov
sbb
inc
mov
aas
or
les
fnstsw
outsl
adc
jmp
inc
mov
push
push
movsb
mov
stos
jg
in
fistpll
loope
xor
cmp
mov
push
cmp
jmp
pop
movsl
std
cwtl
cmpsl
mov
addr16
pop
sbb
mov
jb
or
mov
pop
mov
sbb
hlt
mov
testb
ja
pop
mov
cmp
gs
inc
imul
add
push
adc
test
jo
dec
sbb
cmc
and
mov
shufps
or
enter
adc
out
std
arpl
jp
jae
scas
dec
pop
aad
icebp
sub
dec
fcmovnb
mov
mov
dec
and
jle
icebp
daa
add
fdiv
scas
mov
lea
ss
mov
outsl
test
xchg
push
shr
push
mov
xchg
lahf
popa
outsl
test
mov
lahf
aaa
push
loopne
add
or
mov
xchg
xchg
test
pop
xor
cmpsb
les
je
xchg
loope
je
mov
adc
mov
pop
push
pop
movsl
notl
mov
lock
mov
std
and
pop
dec
mov
pop
and
sub
cmpsb
add
xlat
jle
pop
rcl
je
or
sub
dec
sbb
xchg
ffreep
jmp
dec
jno
and
inc
jl
xlat
or
in
push
cmpsb
inc
arpl
jae
test
iret
data16
insl
dec
mov
not
jle
mov
sub
push
or
lret
cs
xor
ja
adc
in
aaa
mov
cmc
imul
icebp
add
sbb
pop
push
mov
int3
pop
xchg
push
mov
mull
push
mov
sbb
gs
movsb
cmp
in
daa
into
out
fimuls
stos
int
pop
jns
mov
adc
scas
cmp
dec
or
mov
pop
jnp
sub
mov
or
mov
add
push
mov
dec
enter
fwait
gs
push
jbe
xchg
jns
in
mov
cmp
xchg
int3
in
dec
dec
add
cmp
mov
cld
xchg
xchg
test
orb
add
inc
ss
pop
sti
xchg
pushl
ja
push
cwtl
fidivrs
mov
sub
pop
in
dec
mov
mov
push
fcomps
cmp
inc
mov
lock
push
mov
js
xchg
movsl
bnd
in
mov
aad
iret
stc
aas
enter
adcl
rep
mov
sub
shll
mov
rcrb
and
jecxz
ds
cltd
inc
pop
push
mov
fisubrl
gs
sbb
sbb
dec
pop
mov
inc
and
and
enter
data16
mov
pop
adc
cmpb
lods
mov
orl
mov
and
lret
loop
cwtl
hlt
test
insb
loopne
pushf
mov
movsl
daa
imul
int
mov
xchg
decl
xchg
push
syscall
imul
xchg
fcmovnu
or
pop
test
lret
ljmp
mov
call
arpl
les
pop
mov
lcall
ret
adc
xor
sbb
in
push
rol
fdivp
push
out
add
pushl
fidivs
mov
je,pt
cltd
inc
das
cmovnp
loop
popa
fcom
adc
outsl
dec
in
pop
pop
mov
add
or
xor
lret
out
push
data16
mov
pop
pop
xchg
test
rcrl
lock
nop
push
mov
sub
mov
lea
lret
and
mov
dec
mov
xchg
add
mov
int
sarl
push
lods
adcl
fstl
movsl
ficomps
and
or
xlat
sbb
dec
roll
test
sti
inc
dec
cli
xor
jg
pop
cwtl
sub
inc
push
mov
insb
adc
es
loopne
out
push
fcoms
add
rorl
mov
cmpl
arpl
add
cmp
mulps
sbb
mov
mov
jns
mov
stc
and
mov
mov
and
xchg
into
aad
xchg
mov
adc
mov
pop
fs
pop
sahf
dec
gs
call
fldl
in
lea
mov
sbb
cmp
and
das
in
jg
sub
cli
xchg
mov
lcall
or
fsubrs
push
and
fcom
gs
daa
lcall
imul
xor
pop
sbb
stos
or
pop
sub
test
sub
stc
and
in
scas
mov
xor
ja
out
mov
jno
adc
fidivs
mov
enter
adc
mov
mov
in
je
add
rolb
xlat
in
ljmp
shrb
loopne
xchg
add
sub
adc
xchg
pushf
push
ret
ret
shlb
stos
repnz
sub
mov
gs
fwait
inc
dec
push
jmp
pop
mov
mov
paddw
add
andl
xor
popa
xchg
mov
mov
jmp
outsb
pop
stos
aad
xchg
sbb
test
sub
in
and
lea
jo
pop
jmp
mov
sub
jno
sbb
push
xlat
jns
ja
mov
das
push
shlb
ficompl
mov
mov
dec
lods
mov
into
mov
test
scas
lcall
test
cmp
add
sbb
call
enter
and
cwtl
pop
sub
xchg
sub
adc
idivb
je
sub
jg
push
push
sbb
pushf
add
ficoml
into
add
mov
pop
jae
sbb
and
cmp
cmp
sti
sub
dec
dec
mov
jnp
iret
test
sub
shlb
fdivl
mov
jecxz
int3
incl
and
or
addl
out
lret
jb
ret
xchg
sbb
cmpsb
xchg
sahf
movsl
cmp
das
test
mov
mov
hlt
addr16
setbe
push
xchg
cmp
cli
push
hlt
sub
clc
inc
or
mov
dec
lret
das
xor
incl
in
xor
shrb
lea
xchg
dec
test
mov
pop
cmp
mov
xchg
mov
and
xchg
ljmp
dec
orb
movb
fsubs
adc
pop
xor
pusha
add
pop
inc
mov
mov
sti
loop
mov
ja
dec
movsb
add
ds
sub
sub
sub
cmpl
sub
sub
xchg
ss
iret
and
cltd
hlt
or
lods
dec
push
mov
mov
sbb
insb
sub
push
mov
mov
inc
push
cmovno
scas
push
jo
xchg
mov
lcall
ljmp
out
icebp
push
push
push
pop
adc
aad
mov
cmp
push
mov
out
aad
ja
and
xor
cmc
push
ret
xchg
shr
push
ret
xor
dec
xlat
in
test
dec
mov
aas
adc
repz
loop
outsl
cmpsl
imul
dec
imul
dec
ss
mov
inc
mov
test
mov
in
imul
aaa
fldt
sbb
push
pop
clc
or
test
ror
test
sub
in
lods
out
stos
in
out
mov
pop
jp
sbb
je
jns
addr16
mov
cltd
fnsave
mov
mov
add
mov
bound
andl
mov
push
aas
dec
loop
insl
sbb
mov
xchg
loop
push
xchg
jg
mov
push
push
pop
cwtl
adc
sbb
sti
adc
push
das
mov
loope,pn
mov
aaa
jnp
or
sbb
mov
mov
jne
push
cmpsb
lock
cmp
rol
sbb
mov
fildl
pop
or
repz
push
leave
outsb
sub
xchg
cwtl
nop
cmc
sbb
lahf
out
lcall
mov
ss
mov
jnp
inc
mov
into
jns
outsb
jne
mov
jnp
sti
inc
jo
ljmp
das
sbb
lret
mov
sbb
cmp
stos
int3
stc
xchg
cld
out
mov
in
sbb
sbb
mov
scas
push
cmp
std
cmp
xchg
adc
fs
in
dec
cmpsb
fbstp
lret
aad
sub
sub
mov
cs
int3
js
inc
ret
in
rorl
inc
std
dec
push
sub
pop
mov
mov
in
ret
adc
push
iret
adc
pusha
adc
aad
imul
mov
bound
xchg
popa
scas
in
test
push
cmpsl
push
sbb
inc
sub
cmc
push
add
cltd
jns
les
rclb
dec
xchg
pop
insl
sbb
inc
shll
fndisi(8087
xor
clc
cld
ds
fisubs
lret
int3
pop
shl
sub
xchg
les
or
xchg
cs
in
clc
jge,pt
dec
inc
ds
ljmp
push
push
lods
scas
adc
mov
call
sahf
imul
jbe
sbb
xchg
inc
jb
cmp
addl
inc
scas
xor
cld
insb
and
xchg
xor
dec
push
adc
ret
negb
cld
push
nop
dec
js
jne
push
imul
and
add
or
gs
inc
push
fmull
or
xchg
cld
mov
sub
les
and
daa
pop
fwait
and
pop
cld
mov
pop
repnz
inc
mov
push
pop
stos
adcl
adc
mov
mov
add
jo
add
push
out
pop
jbe
jge
hlt
test
inc
fdivs
cmpsl
insl
das
aas
xor
push
aad
faddl
add
pop
mov
not
sub
or
insb
and
js
into
push
daa
pop
mov
sub
fs
daa
mov
sub
movsl
sub
pop
outsl
lcall
inc
mov
lahf
int3
gs
cmp
inc
or
stos
popa
popa
inc
ret
test
adc
popf
lret
dec
fstl
xor
mov
hlt
pop
nop
xchg
sbb
inc
xchg
fnstcw
mov
imul
mov
fmull
push
sub
inc
adc
mov
test
mov
mov
mov
dec
jg
insl
jp
cli
mov
dec
lret
shrb
mov
daa
mov
or
dec
mov
mov
fdivrs
test
mov
pop
adc
js
int
cmp
mov
or
xor
mov
imul
test
jae
loope
popa
dec
je
shlb
pushf
sbb
cmp
test
and
leave
adc
inc
cmp
imul
mulb
mov
in
ret
scas
xor
cmp
push
jae
and
pushl
sbb
push
mov
inc
in
sub
mov
push
add
and
xor
mov
jge
xor
cltd
push
push
cwtl
pop
jmp
cltd
cltd
xor
push
je
outsb
negl
mov
or
imul
pop
xor
outsb
inc
pop
mov
xor
ret
lods
adc
and
mov
and
stos
adc
nop
das
inc
adc
addr16
push
adc
sub
xchg
sbb
pop
in
daa
shll
and
ljmp
rcll
jb
fstps
idivb
push
sbb
push
and
lcall
xlat
mov
pop
push
dec
pop
mov
andb
pushfw
flds
aas
aas
sbb
sbb
mov
shrb
dec
repnz
push
in
into
inc
mov
icebp
mov
pop
push
jb
sub
pop
pop
adc
pop
inc
adc
movsb
cltd
mov
adc
lods
xchg
mov
cmp
sbb
clc
dec
mov
out
push
ljmp
mov
push
test
outsl
test
push
jl
mov
aaa
sub
push
add
fsubl
daa
xchg
outsb
dec
ret
cmp
add
repz
int3
fwait
jb
in
mov
ja
push
loop
dec
stos
rorb
in
test
dec
imul
shll
and
xor
mov
or
rcll
or
imul
sbb
sbb
pop
fwait
cli
movsb
push
clc
fnstenv
jl
dec
mov
pop
out
sbb
idivb
mov
mov
xor
test
les
cld
push
mov
sub
int3
inc
cmp
fildl
jne
cltd
out
cmpsl
cld
shrb
lret
cmp
out
mov
pop
les
sahf
shrb
out
push
dec
jae
xchg
notl
pop
fildll
out
pop
dec
imulb
xchg
lcall
push
sarl
pop
es
sbb
jmp
scas
lock
add
jae
int3
xchg
repnz
sbb
xchg
outsl
fcmovnu
sub
loop
push
aam
ficoml
movsl
lret
mov
arpl
repnz
adc
xchg
arpl
cwtd
cmp
jne
fwait
rcll
or
mov
push
sub
es
int
pop
mov
lods
xchg
or
pop
pop
pop
lock
xor
mov
cmp
mov
repz
jo
and
inc
push
iret
scas
and
sub
test
dec
ret
bound
and
sbb
lods
pop
ja
pop
cmpsb
stos
stos
cmpsl
mov
shlb
xchg
jmp
sub
cmp
mov
dec
xor
and
stc
out
mov
sti
adc
sbb
jns,pn
dec
mov
mov
inc
xor
and
sbb
pusha
cmpsl
sbb
and
push
aas
jns
cmp
ret
pop
mov
lds
xchg
lahf
push
andb
jecxz
jg
adc
pop
dec
nop
jb
mov
cmpsb
push
jne
arpl
add
bound
fistpll
jno
pushf
push
mov
dec
stos
xchg
sub
mov
pushf
mov
mov
inc
movsb
loop
out
and
aad
xor
call
in
pop
mov
mov
push
xchg
lds
daa
test
std
inc
pop
pop
dec
out
push
addr16
cmp
hlt
push
notb
add
es
sub
fnstcw
pop
lret
jmp
push
imul
cmpsb
jnp
test
pop
dec
pop
fldl
fcoms
fistpl
and
jmp
dec
jnp
addr16
lcall
mov
sub
loop
and
dec
out
inc
insl
mov
test
mov
sbbl
jecxz
ja
fs
lcall
sub
xor
cmp
add
mov
std
xor
lods
ljmp
jp
stc
adc
mov
sbb
mov
mov
xchg
pusha
jne
push
popa
adc
jmp
movsl
push
push
ja
fldl
out
adc
inc
shr
out
adc
lods
pop
popa
cli
test
shlb
and
xor
adc
mov
sbb
pushf
jge
xor
jnp
insb
sub
mov
mov
sub
cmp
movsl
jge
push
sbb
cmc
lcall
pop
add
adc
pop
ds
jnp
shll
add
mov
pop
fisttpll
push
push
pop
adc
sbb
loop
pop
int
out
jg
sub
arpl
xor
aaa
lock
mov
dec
inc
mov
sbb
mov
mov
cmp
shr
xchg
add
lahf
and
out
int
mov
mov
les
das
jbe
pop
adc
rolb
mov
test
orb
mov
lret
popf
jno
push
das
sbb
pop
cmc
or
inc
ret
push
jle
out
cmp
fxch
mov
subl
negb
out
add
push
movsl
pusha
mov
popa
cmpsl
or
or
xchg
mov
insl
in
out
scas
movzwl
outsb
xchg
sub
or
sub
lahf
push
inc
adc
repnz
cmpsl
test
and
jl
mulb
jo
lods
jae
cmp
clc
mov
mov
ret
ret
stc
jge
nop
sub
dec
fiadds
mov
mov
test
xorl
pop
mov
xchg
fs
outsb
mov
aad
mov
rcll
orl
repz
sbb
in
jp
xchg
dec
mov
push
xor
fucom
loop
out
adc
arpl
adc
std
pop
cwtl
in
adc
das
aaa
sub
mov
test
jp
dec
xor
rcl
cwtl
sub
sbb
lds
inc
mov
cwtl
addr16
pushf
xlat
fwait
cmpsl
xchg
ljmp
cmc
mov
lds
inc
test
shll
inc
xor
jb
rclb
es
push
cli
sbb
fidivl
ljmp
and
dec
mov
lret
mov
mov
push
and
or
pop
mov
mul
test
test
sti
xchg
pop
stos
rcll
pop
adcl
inc
mov
bound
test
cmp
cli
cli
pop
xchg
out
test
in
rcr
in
aam
test
add
sub
pop
fwait
mov
xchg
xchg
dec
nop
cmovb
xchg
inc
aas
cld
jecxz
mov
call
dec
popa
sbb
sti
cwtl
and
mov
mov
sbb
jle
out
ds
inc
pop
jle
dec
xchg
cmp
jbe
adc
fimuls
push
clc
testl
loop
lods
sub
call
dec
insb
into
push
in
iret
pop
insl
scas
xchg
rorl
adc
sub
sub
pop
mov
aad
aam
data16
nop
sub
sbb
cmp
add
in
movsl
mov
push
pop
clc
stos
mov
test
out
inc
sti
outsl
fildl
repnz
or
cld
xchg
push
ficoml
adc
repz
lds
iret
mov
add
xor
testl
mov
dec
daa
push
dec
mov
fldenv
xor
out
dec
jnp
or
sub
ja
std
js
ja
stos
mov
and
push
js
fdivrl
mov
or
leave
push
sbb
dec
inc
dec
lret
push
cmp
pop
mov
jne
cmpsb
cmc
popf
pop
frstor
xchg
movsl
fprem
cmp
out
fmuls
and
pop
sub
cmpsl
mov
xchg
lret
call
test
idiv
andl
add
push
xchg
aaa
jns
xor
inc
xor
popa
cmp
dec
xor
imul
aas
xor
xchg
cli
mov
lds
sbbb
rcr
lret
mov
inc
aaa
pusha
cmpsl
sahf
pop
mov
cmp
dec
sbb
cmc
nop
pop
stc
push
sarl
xor
das
into
out
adc
cmp
aad
pushf
mov
outsl
ficoms
jbe
fs
sub
cmc
int
lods
or
adc
jnp
cmp
push
pop
mov
mov
push
insb
nop
dec
adc
lock
mov
ret
or
outsb
xchg
lock
mov
fwait
and
and
fnstcw
inc
inc
pop
xchg
mov
mov
fstps
fldl
jbe
enter
sbb
das
test
mov
dec
cmp
outsb
mov
jns
popf
cmpsl
add
das
sub
pop
les
sub
cmp
mov
or
xor
xchg
jno
adc
test
aad
jecxz
sub
cmp
and
pop
add
push
push
mov
mov
inc
mov
jle
xchg
jmp
or
pop
cltd
jmp
fbstp
xor
mov
sbb
xchg
xchg
cld
sahf
ljmp
sahf
mov
int3
jle
lock
test
or
iret
stos
mov
inc
and
sbb
push
mov
sbb
jmp
popa
in
inc
mov
pop
repnz
repnz
fiadds
add
mov
and
push
jge
inc
shrb
xchg
imul
pop
movsb
mov
out
dec
dec
icebp
xchg
pop
das
mov
mov
mov
int
inc
jae
adc
sbb
pop
dec
mov
test
sub
mov
add
int
xor
push
xrelease
jmp
and
cmp
movsb
rolb
mov
pop
mov
fildl
mov
stos
cmpsb
les
popf
aam
mov
clc
cvtps2pd
sub
test
movsl
imul
fsubr
jo
outsb
mov
mov
sar
or
xchg
cmp
lea
ret
mov
xchg
xchg
mov
mov
inc
xor
dec
cmp
incl
push
dec
dec
cltd
dec
dec
jp
push
jmp
lock
rorb
out
es
pop
ss
jp
lret
mov
mov
xchg
push
cmpsb
cmc
rclb
test
adc
mov
out
push
jge
sahf
inc
xchg
cmp
and
push
jo
clc
mov
push
and
mov
cli
stos
jle
nop
fs
xor
jg
rcl
cmpsl
sub
inc
in
dec
or
xchg
add
aaa
mov
fildll
shrb
xor
pop
mulb
mov
addl
mov
xor
xor
imul
and
cmp
sbb
add
loope
cmc
mov
push
mov
pushl
imulb
cld
cmp
sbb
add
jle
pop
ficompl
mov
lods
push
sbb
in
add
add
inc
mov
inc
add
rorl
gs
lods
cwtl
cmpsb
orb
or
shlb
mov
loopne
movb
sbb
mov
lret
mov
push
movsl
jecxz
pop
xchg
int
test
shlb
fcomip
adc
repnz
push
inc
add
fidivs
fs
and
iret
in
lret
adc
mov
xchg
iret
pop
pop
ja
pop
subb
je
out
aam
jnp
or
pop
fwait
jg
adc
cld
mov
stos
movsb
imul
mov
sarb
stos
jg
insl
jp,pn
push
ret
shll
clc
push
mov
and
adc
mov
dec
aas
sub
lods
incl
les
xchg
mov
mov
add
pushf
jecxz
jb
mov
adc
mov
movsb
mov
aaa
dec
pop
stos
inc
shrl
mov
nop
and
mov
mov
mov
jo
mov
lret
jns
inc
push
cmp
adc
ds
adc
mov
pop
xor
fistpll
test
jbe
cmp
jb
jb
push
mov
out
push
into
js
lret
fnsave
jg
jbe
imull
orl
dec
mov
fcoml
out
and
mov
es
fcomi
je
dec
xchg
daa
mov
cld
int3
dec
pop
inc
add
pushw
mov
inc
add
loop
cwtl
iret
sbb
mov
add
imul
jbe
aad
ret
sub
mov
rcll
inc
cmp
es
lds
cmp
pop
popa
test
xchg
push
jl
add
stos
loope
sub
pop
cmp
xor
jbe
mov
sbb
aam
dec
mov
subb
leave
add
inc
nop
insl
into
inc
call
les
jl
xchg
fs
mov
mov
pushf
fwait
out
dec
in
mov
inc
push
iret
cmp
repz
mov
out
dec
les
loop
loope
fdivl
out
into
pusha
mov
pop
jbe
leave
inc
add
mov
mov
push
fwait
popa
xchg
or
pop
sti
cmpl
push
sarl
mov
inc
jmp
mov
jno
cmp
or
es
jmp
cmp
jp
out
jle
inc
mov
xchg
mov
ds
jb
xor
cmpsb
aaa
sbb
push
push
xlat
test
shll
fwait
in
stos
sub
cmc
cmp
inc
jno
jmp
add
std
clc
jns
cmp
jge
in
dec
cmp
daa
dec
mov
pop
cmp
push
jno
loopne
adc
clc
ja
dec
push
mov
sahf
pop
ja
lods
push
test
les
and
icebp
jmp
gs
dec
cs
sub
adc
or
js
sti
fiaddl
add
mov
jns
rcl
lods
cli
das
jle,pt
arpl
pop
imul
repz
push
sbb
lods
test
push
xchg
call
fimull
adc
fwait
cvttps2pi
mov
sbb
xorl
hlt
mov
mov
divl
sub
sub
or
into
push
pusha
cmp
inc
clc
dec
lds
shlb
in
xchg
frstpm(287
adc
scas
adc
lods
cmp
jg
roll
fnstsw
icebp
orl
xlat
lcall
mov
ljmp
cltd
sub
pop
mov
or
mov
incb
pop
sub
cmp
repz
jae
sbb
mov
sbb
cltd
inc
sub
inc
arpl
fcmovnu
movsl
aaa
loopne
xlat
ljmp
adc
in
cmc
mov
ror
sarb
xchg
aaa
adc
fidivs
lahf
cmp
gs
pop
mov
and
add
loopne
mov
xchg
dec
loopne
std
mov
jno
cmc
aam
push
sub
push
or
incl
test
movsl
repnz
and
int
aaa
jge
call
cs
cmp
sarb
pop
cltd
mov
pop
gs
sub
in
or
daa
and
shll
pushf
adc
sub
sbb
xor
lea
add
and
dec
sbbl
cmp
imul
imul
cmpsl
sbb
jge
cmp
sbb
lods
jl
fbstp
movsl
push
mov
ffree
pop
enter
stos
sbb
ljmp
xor
push
jo
jg
lods
pushl
lea
sahf
cwtl
xlat
xor
lret
jb
repz
jle
stos
jae
mov
or
and
rcll
xchg
inc
pop
xchg
push
cmp
inc
jbe
xchg
adc
mov
int
adc
iret
push
icebp
fildl
or
mov
lahf
pusha
jns
pop
mov
roll
addr16
lock
out
cwtl
cwtl
xchg
or
dec
sub
loope
add
sahf
imull
mov
insb
or
scas
push
mov
pop
jl
cmp
stc
repz
mov
bound
stos
jo
imul
enter
orl
xor
das
sub
dec
data16
lahf
jo
nop
or
clc
stos
mov
ret
addr16
mov
repz
sub
icebp
pop
push
xlat
pop
lcall
dec
cmp
sbb
xor
popf
sub
movsb
call
sub
je
scas
dec
popf
popf
je
pop
mov
movsl
cmp
and
hlt
push
xchg
xchg
adc
sarl
jmp
mov
lds
sarb
push
push
int
test
mov
push
jb
pushf
or
adc
cltd
sbb
jb
xchg
stc
sbb
xor
arpl
sub
sub
cs
adc
out
and
mov
pop
pop
or
cmpb
sub
pop
in
hlt
sub
push
rorb
mov
xchg
addr16
mov
adc
push
lock
mov
movsb
out
adc
insb
aam
call
pop
out
xor
in
int3
adc
sbb
push
das
rcl
push
aad
pop
xchg
mov
inc
jle
jne
mov
cmp
push
mov
repz
pop
inc
adc
pop
loopne
jmp
cmp
push
fsubs
inc
add
mov
fcompl
cmp
mov
add
sahf
lcall
pop
push
lcall
push
add
ljmp
push
pop
inc
sbb
sbb
ret
sub
and
in
shll
ret
insl
xor
mov
pop
mov
or
xchg
adcl
mov
repz
jp
inc
push
daa
xchg
sub
dec
dec
cld
sub
adc
das
lahf
pop
shlb
xchg
or
gs
pusha
jbe
jae
inc
sbb
sahf
popa
xchg
mov
mov
jg
sbb
add
dec
and
push
xor
mov
and
mov
xlat
mov
mov
stos
mov
insb
mov
lret
jns
insb
subl
test
stos
xor
cmpsl
loope
mov
cltd
mov
xor
inc
jmp
pmaxub
pusha
daa
mov
scas
je
xchg
fsubs
jp
pop
cmpsl
cmp
fs
pop
cwtl
loopne
ret
gs
ss
and
jecxz
pop
cmpsl
pusha
cmp
ja
in
pushf
mov
pushf
sti
movsl
push
mov
adc
sbb
xchg
iret
or
mov
mov
mov
xchg
mov
jmp
sbbb
stc
jo
sahf
inc
shll
dec
fildll
test
mov
fstps
call
repnz
dec
mov
movsb
push
divb
xor
push
loop
add
fidivrs
out
xchg
and
ja
sbb
scas
sbb
scas
shl
sub
or
lret
inc
mov
es
fcompl
ljmp
push
out
out
imul
push
aaa
aam
adc
inc
enter
lret
pop
shll
xchg
in
aam
pop
cmpsb
into
cmp
pushf
std
push
xor
add
insl
adc
jecxz
fimull
and
or
add
cmp
pop
leave
inc
fdivs
mov
les
test
and
pusha
orb
mov
mov
clc
mov
xor
bound
inc
sahf
aad
jno
pop
lcall
rcrl
push
bound
mov
and
outsl
jns
pop
adc
cmp
loop
leave
mov
outsl
sbb
lahf
stos
shlb
mov
mull
and
mov
jae
or
in
mov
or
push
xor
mov
test
mov
pop
add
icebp
pop
cmp
out
dec
aas
cmp
out
mov
adc
scas
adc
fldcw
in
aad
lcall
push
sub
cld
lds
dec
pop
int
push
sbb
mov
push
push
cwtl
cmp
or
aas
cmp
mov
in
jmp
jnp
and
mov
xor
fwait
adc
pop
sarb
call
inc
scas
fmul
test
add
arpl
pop
xchg
mov
stc
or
in
add
jp
icebp
aam
jge
mov
jg
push
mov
cs
and
sti
ss
fisttpl
sub
mov
aaa
sub
es
stos
out
lret
and
pop
arpl
ss
push
jmp
aaa
jmp
cmp
pushf
aas
in
out
or
xchg
add
mov
rcll
pop
jne
into
inc
sbb
inc
pop
or
jbe
sbb
jne
or
xchg
mov
push
xor
xor
or
je
inc
stos
xor
push
push
arpl
dec
out
popa
push
xor
and
aam
inc
or
ficoml
mov
out
stos
mov
inc
mov
mov
mov
lcall
fsts
or
fwait
jg,pn
adc
loop
sbb
cmpsl
push
mov
ret
iret
lea
pop
jl
inc
pop
mov
das
ljmp
dec
shr
fbld
mov
jg
fucom
lea
stos
mov
dec
cmp
shl
fildl
repz
iret
fsubrs
rclb
fldenv
push
pop
xlat
or
push
sahf
dec
scas
sbb
push
and
mov
leave
cmp
pop
dec
mov
into
cmp
jg
idivb
je
xor
fidivrl
cmc
les
push
out
faddl
call
das
adc
and
nop
or
mov
es
movsb
test
dec
cs
inc
pop
imul
dec
push
jns
loop
dec
adc
jge
inc
fstpt
dec
cmp
loopne
pop
add
shlb
repz
pop
xchg
push
xor
mov
movsb
les
scas
dec
ljmp
pushf
stos
cltd
inc
sub
lock
lret
pop
adc
xorb
sbb
mov
and
cmp
inc
outsl
mov
jg
jns
inc
ljmp
icebp
ret
xlat
cltd
das
and
mov
adc
xor
jmp
cmp
adc
xorl
cmc
ljmp
aaa
xchg
push
push
into
or
aas
mov
adc
sbb
fnstcw
push
add
pushf
in
mov
testl
outsl
push
and
jb
addr16
mov
fs
test
cs
push
pushl
jns
shll
adc
inc
dec
mov
jae
movnti
mov
mov
push
inc
fnstenv
jne
clc
sbb
decb
sbb
mov
lcall
xor
adc
loop
or
fidivl
out
fs
or
sub
mov
ret
shl
push
and
in
dec
lahf
test
cmp
push
mov
imul
int
shll
xchg
adc
and
fisubl
fmull
pop
xor
fistpl
dec
sti
adc
test
lods
out
out
lods
inc
repnz
repnz
xor
mov
pop
push
pop
pop
add
call
jo
pop
pop
aaa
sbb
jp
xchg
es
lea
jle
adc
add
cwtl
inc
cmp
jae
add
aad
rcl
lea
mov
orb
mov
sbb
jmp
mov
test
decl
out
ja
int3
pop
negb
mov
xor
cmp
jg
cmp
stc
pop
adc
orl
cmp
enter
repnz
mov
icebp
pop
dec
incb
add
mov
dec
adc
cmc
inc
aas
or
fstpl
xor
pop
mov
inc
sub
lods
pop
clc
xor
push
fnstsw
inc
out
std
test
cs
ss
fsubp
cmpsb
dec
aas
mov
mov
das
jmp
iret
mov
push
faddl
mull
psubusw
inc
ficompl
sub
std
dec
mov
cmp
add
sbb
fwait
call
cmp
and
sbb
dec
push
inc
jecxz
jnp
push
cmp
inc
out
fdivrs
mov
or
cmp
xor
popa
pop
insl
add
cmp
fs
bound
push
ds
movsb
in
jp
clc
cs
and
pop
dec
in
sub
mov
xor
inc
das
add
push
stc
pop
dec
mov
cmp
out
out
xor
pusha
mov
inc
adc
dec
inc
push
in
mov
test
das
xchg
xor
sbb
xchg
xchg
pop
push
sti
dec
add
je
mov
cld
addb
mov
xor
loope
nop
dec
pop
fucomip
repnz
xor
add
adc
outsb
shr
loope
and
or
fwait
mov
cmp
adcl
and
and
fisttps
cwtl
je
pop
testb
test
sub
gs
push
bound
jnp
int3
jns
repz
mov
fstpl
or
xchg
jp,pn
sbb
out
dec
mov
xchg
loope
outsl
inc
jg
jno
jb
mov
pop
loopne
fbld
jno
add
data16
inc
jl
mov
subb
cmp
or
mov
sub
mov
xor
loop
pop
xchg
lea
jnp
pop
mov
sub
xor
inc
aaa
jbe
jno
pusha
cld
test
loope
shlb
repz
sbb
mov
or
push
sub
adc
out
stos
dec
dec
cmc
sbb
je
aam
call
frstor
jl
insb
je
in
test
mov
pop
aaa
mov
ret
test
in
pop
ss
dec
ljmp
inc
rcrb
mov
add
mov
inc
adc
pop
in
push
scas
lods
jno
movsl
and
lock
cltd
lock
or
mov
sub
and
sbb
push
flds
lcall
addr16
pop
pop
push
xlat
dec
and
addb
fwait
push
pop
mov
mov
loopne
aam
mov
xchg
andl
cmpl
push
stc
push
or
xchg
pop
pop
lock
jnp
out
cmp
rorl
pusha
insb
mov
in
mov
jp
jp
inc
sbb
cmp
mov
sub
sbb
sub
insl
insb
mov
pusha
insl
push
out
repz
ret
push
pusha
hlt
sbb
fistl
sub
push
jmp
adc
xchg
mov
mov
fucomip
daa
pop
push
movsb
xchg
cmp
mov
outsb
or
lret
xchg
popl
mov
cmp
push
dec
push
fs
xlat
jmp
call
mov
xor
xchg
add
jecxz
adc
xorl
sbb
sub
mov
mov
test
xchg
and
pop
and
inc
and
hlt
loope
inc
lret
ficoms
fstps
outsl
pop
sti
pop
or
push
out
ja
dec
setge
push
inc
pop
sbb
inc
sti
aas
cmp
mov
and
movsl
std
out
inc
push
je
or
out
mov
xor
sbb
jmp
pop
pop
lahf
imul
inc
add
and
loop
sub
lcall
rcrb
cli
test
push
jo
and
mov
stc
push
fidivrl
popa
outsb
popa
cmpsl
adc
or
push
mov
call
lods
movsb
sbb
popa
add
pop
jno
sub
jp
mov
cmpl
mov
stos
outsl
dec
xor
mov
popf
std
arpl
mov
inc
sbb
add
popf
movsl
test
jge
lcall
lahf
sbb
and
adc
pop
jmp
mov
rcll
arpl
mov
jno
mov
mulb
jmp
add
inc
cmp
ds
jp
iret
adcl
xlat
mov
jae
enter
pop
xchg
insb
push
gs
inc
push
adc
sub
aad
pop
loopne
lock
cmp
imul
and
or
sub
push
mov
jmp
mov
mov
dec
icebp
shrl
je
pop
sub
jbe
xchg
fdivrl
sub
mov
cmp
dec
inc
shll
dec
loope
xchg
cltd
push
dec
arpl
dec
jl
cltd
into
pusha
jecxz
xchg
sbb
push
mov
int
or
cmp
jb
sub
push
btc
inc
ret
es
xor
imul
outsl
cs
jmp
mov
scas
cs
int3
jg
cmp
add
faddl
push
and
orb
push
jns
enter
lret
movsl
inc
add
adc
lahf
inc
lret
adc
dec
sub
sub
or
lods
outsb
cmpl
pushf
adc
jo
pop
jae
or
xchg
and
jg
mov
cs
xchg
push
cwtl
pop
add
or
add
ljmp
cmp
jmp
not
cltd
test
xor
adc
movd
in
push
xor
mov
rclb
scas
xlat
xchg
mov
leave
lret
test
mov
or
repz
fnstenv
mov
adc
rol
mov
xchg
lods
mov
mov
lcall
int3
incb
jl
dec
cmp
mov
push
mov
pop
push
push
scas
push
dec
sbb
jo
movsl
pop
outsb
hlt
sbb
imul
push
in
inc
sub
repnz
mov
dec
std
push
scas
jmp
bound
insb
stc
mov
fsts
cmpsl
xchg
ret
push
mov
adc
push
mov
xchg
pop
cmp
dec
icebp
mov
cmp
mov
fwait
cwtl
push
into
mov
adc
add
sbb
lea
je
jg
mov
js
popa
mov
cwtl
imul
push
test
xor
pop
inc
pop
inc
je
sbb
cmp
mov
orl
push
rcrl
call
loope
ss
pop
mov
cld
jb
in
das
movsb
arpl
daa
jl
loope
pop
inc
addl
es
ja
adc
xorb
aaa
cmp
lds
jnp
repnz
in
pop
mov
sbb
lret
inc
mov
fcmovbe
xor
test
cmpsb
pop
mov
daa
aam
jmp
mov
fmull
adc
cmp
mov
mov
call
scas
inc
pop
loop
mov
dec
push
daa
mov
sbb
push
or
imul
outsb
or
sub
addb
aas
add
push
sbb
fmull
jg
or
pop
sub
sub
cmpsl
inc
adc
mov
and
add
pop
add
testl
push
or
ds
adc
sahf
or
mov
jle
ljmp
pop
rorl
test
cmp
mov
or
stos
in
jno
cmpsb
push
mov
fcoml
mov
int
adc
divl
sbb
xchg
imul
jbe
in
or
inc
cmpsl
pushf
mov
jb
repz
bound
sahf
arpl
test
pop
int3
adc
into
push
scas
adc
cs
sub
js
shll
mov
cmp
dec
aaa
in
push
pop
adc
call
adc
insl
mov
bound
jo
sbb
ljmp
mov
mov
adc
push
cs
test
insl
inc
out
or
adc
or
loopne
nop
or
imul
into
push
xchg
dec
mov
ljmp
les
rcll
ret
rclb
outsb
dec
push
js
add
jb
mov
pop
or
imulb
push
outsb
sub
sbb
mov
mov
addl
push
dec
cmpsb
ja
sbb
lret
fs
and
mov
inc
sbb
ret
dec
xor
ret
xchg
gs
xchg
pop
fwait
mov
jo
jae
push
add
mov
sub
pop
sti
outsb
inc
pop
mov
mov
insb
add
insb
jne
fisubs
mov
stos
inc
jle
dec
ret
mov
adc
push
push
or
pusha
xlat
data16
fdivp
cmp
and
in
lret
push
or
sbb
jge
or
xlat
jne
roll
add
pusha
xor
add
cmpsl
xchg
mov
out
push
mov
arpl
inc
jo
cs
and
jg
imul
mov
fbld
call
stc
pop
xchg
imul
xchg
mov
mov
cli
mov
out
add
mov
cmc
mov
shlb
mov
lret
cltd
jge
lret
cmp
testb
stos
xor
pop
mov
mov
adc
or
es
jmp
dec
cmpsb
dec
popa
mov
inc
xchg
pop
xchg
mov
mov
dec
jnp
scas
std
into
mov
push
push
aam
inc
mov
pop
cwtl
push
and
leave
ret
mov
push
test
fwait
mov
cmp
notb
sti
sbb
adc
xor
xor
pop
fwait
jns
inc
inc
loope
add
fbld
cmp
addr16
fimuls
mov
xchg
out
outsb
cmpsb
ljmp
xchg
mov
loope
out
outsl
sub
iret
jmp
repz
fildll
sub
scas
pop
loope
icebp
jp
inc
mov
in
lea
push
sub
out
jne
adc
cld
jge
cld
neg
movsb
sbb
mov
fisttpl
jmp
stos
jl
pop
psrlw
insl
test
outsl
jmp
sbb
push
shrb
sub
xor
pop
mov
xor
xor
fistps
popf
mov
subb
in
movsl
scas
add
jp
in
in
mov
outsl
sub
jle
pop
lock
adc
jge
aam
dec
cmp
mov
out
push
hlt
in
add
xor
or
push
out
xor
rcrb
insb
ljmp
pushf
dec
loope
pop
mov
stos
sbbl
cld
cmpsl
mov
pusha
adc
in
fnstcw
pop
enter
rcll
test
mov
adc
push
das
pop
xor
sbb
sti
cmp
hlt
ja
and
in
es
mov
sub
popa
xchg
jne
mov
mov
mov
dec
loope
sbb
adc
push
in
jno
fiaddl
std
or
enter
sbbb
repz
imul
test
andb
out
nop
cltd
jnp
cmp
mov
imul
push
push
mov
push
stos
push
stos
fiaddl
std
jb
scas
aas
cld
ficompl
dec
cmp
mov
jecxz
mov
lret
xchg
adc
outsb
leave
xor
addr16
fwait
or
push
stos
cmp
jle
fstpl
add
pop
mov
pop
jb
fiadds
out
pop
pop
test
adc
xor
xchg
sti
xchg
add
mov
adc
call
pop
ret
adcb
mov
mov
das
push
mov
data16
jns
jl
cli
add
fwait
dec
jmp
mov
jae
jp
mov
fdiv
scas
cwtl
push
loop
js
loope
jle
test
adc
add
sub
pop
push
sahf
mov
cwtl
scas
pop
jmp
sub
in
and
pop
push
scas
ljmp
out
test
pop
pop
in
add
out
pop
dec
pop
or
pop
pop
jge
in
lret
dec
test
adc
out
mov
dec
mov
pop
mov
dec
push
pop
lods
add
mov
ljmp
je
ret
jo
pop
sub
sub
shlb
idiv
pop
jno
xor
inc
jne
jnp
and
insb
adc
adc
scas
jne
mov
add
jge
adc
and
out
hlt
mov
sbb
adc
pop
or
jmp
dec
inc
ss
pop
loop
cld
and
pop
arpl
mov
fld
adc
int
lea
adc
add
stos
pop
testb
addr16
popa
pop
test
in
push
jmp
scas
push
push
std
js
mov
xchg
sub
imul
lea
cmp
jecxz
mov
scas
aaa
cmp
add
add
pop
addr16
pop
mov
lds
std
mov
push
jns
lcall
pop
mov
mov
sub
ss
jl
notb
in
mov
inc
orl
mov
cmc
repnz
aas
iret
jp
cmpsl
nop
pop
rcrl
mov
js
sti
addr16
pusha
ja
les
stos
imul
daa
xchg
outsl
fidivrs
or
fucomip
push
or
sub
imul
mov
iret
test
ljmp
insl
aas
sub
shlb
rorb
mov
jno
jns
lret
push
scas
outsl
mov
in
adc
adc
mov
std
mov
outsl
mov
fldcw
and
jae
lcall
or
or
add
mov
push
movsl
fildl
mov
adc
lcall
leave
repz
fdiv
icebp
out
shll
sarl
test
lahf
cld
mov
dec
fdivrs
and
roll
mov
jmp
pop
mov
mov
mov
or
adc
sub
repnz
add
ja
aad
sub
mov
clc
cmp
adc
sub
mov
cmp
insl
inc
enter
pop
jae
ret
pop
mov
and
outsb
mov
sahf
aad
pop
push
nop
mov
aaa
dec
xchg
insl
and
mov
xor
imul
add
int3
cli
xor
insb
inc
cmpsb
sbb
xchg
jbe
cwtl
jle
repz
push
rcr
das
or
ret
mov
int3
or
add
lods
ret
mov
sbb
xor
sbb
inc
cwtl
push
push
add
sahf
jae
test
sbb
fs
mov
mov
out
xor
xchg
or
neg
adc
test
xorl
lods
sub
push
and
pop
mov
bound
push
test
mov
add
fsubrs
jle
cmp
push
xor
inc
jl
jns
dec
mov
rolb
sub
push
mov
popa
sti
test
lds
out
ret
xor
xchg
pop
daa
and
add
daa
addl
outsl
xchg
or
lcall
cli
xor
fstps
jae
out
aaa
jmp
mov
mov
push
nop
or
mov
mov
xchg
je
mov
call
aam
sahf
lods
call
shll
mov
push
cltd
bswap
cmp
daa
ss
adc
into
jg
movsb
js
cmp
or
mov
xor
jno,pt
inc
adc
stc
ret
in
negb
cmp
enter
xlat
mov
addl
je
pop
test
pop
mov
cmpsb
push
inc
jbe
std
jmp
pop
stos
sti
jae
icebp
cmp
xchg
iret
mov
incl
gs
stos
or
cmp
mov
pop
lret
mov
cmp
dec
dec
aaa
out
pop
jnp
mov
inc
or
mov
shlb
push
xor
jae
lret
out
mov
xor
add
lcall
add
push
mov
dec
inc
dec
push
add
jno
push
imul
ja
call
jo
mov
mov
mov
push
push
sbb
sahf
call
jle
adc
mov
mov
pushf
dec
jge
clc
aas
mov
fsubrl
fld
dec
add
subb
movsl
fsubrl
ss
inc
inc
and
aad
fisttps
xchg
js
dec
in
fwait
mov
call
test
lds
lcall
jl
xor
shr
inc
daa
pop
mov
pop
jnp
pop
jnp
movsb
lea
xchg
mov
out
dec
xor
mov
dec
sbb
lock
fdivrs
stos
lock
add
ljmp
pop
push
out
scas
jmp
and
or
into
pop
daa
lret
out
jecxz
sbbb
sahf
mov
and
hlt
sub
sbb
shrl
aam
cmpb
leave
push
and
jp
jmp
push
xchg
test
cmp
dec
xor
sub
jecxz
add
cmp
stos
addr16
popf
fcmovnu
stos
insb
sbb
cmp
pop
sub
es
daa
push
outsl
stos
mov
xchg
fs
sub
inc
ja
sbb
push
das
sbb
xor
jne
and
xchg
icebp
mov
inc
popa
cmc
loope
add
inc
dec
mov
mov
lock
jl
imul
push
mov
jg
or
adc
in
xchg
movsb
cmp
mov
mov
cmpsl
lods
dec
cmp
or
pop
ds
pop
das
test
adc
inc
mov
inc
add
xchg
pop
lods
and
fsubs
in
adc
jne
xchg
inc
cld
ja
mov
pop
xor
cli
mov
dec
test
imull
mov
xchg
or
jbe
lea
adc
pop
out
or
sub
jle
or
lock
or
mov
pop
js
ret
stos
imul
int
sbb
mov
adc
sbb
sbb
jne
lock
mov
in
sbb
add
in
das
xor
inc
cmp
mov
test
pop
stc
xchg
aam
std
mov
xor
jne
ficomps
cmc
jg
roll
fstpt
lret
dec
ret
cvttps2pi
sbb
mov
lret
jle
scas
and
ret
lods
out
in
inc
ret
pop
dec
mov
add
loop
add
and
sub
cld
xlat
and
inc
adc
add
jmp
inc
mov
fisubrs
adc
shr
mov
fisubl
inc
fmull
aas
int3
dec
jp
aas
cmpsb
inc
sti
xorb
stos
out
pop
dec
fidivs
fstps
andl
add
test
pushw
shlb
adc
fs
out
orl
gs
test
dec
add
mov
and
pop
add
imul
stc
stos
rcll
pop
xchg
pop
test
mov
pop
fists
insl
mov
and
fnstenv
imul
sbb
fcmovnu
inc
or
adc
xlat
xor
push
cld
lret
rcrl
sbb
loopne
push
pop
mov
and
ficoml
sub
pusha
lods
fcomi
in
sbb
cmpsb
or
test
jle
push
stos
xlat
das
xchg
rclb
mov
push
adc
paddq
or
rolb
mov
mov
push
cmc
stc
punpcklwd
popf
sbb
negb
stos
mov
sarl
jb
aas
lea
call
push
adc
cmp
jae
xchg
jecxz
dec
outsl
scas
stos
into
ljmp
xor
popa
and
sub
sbb
ret
add
js
xor
loopne
jo
out
mov
sub
das
xchg
dec
rorb
movsb
sar
add
pop
pop
adc
pop
sub
push
in
jo
movsl
mov
adc
xchg
into
out
sahf
in
bound
and
cmp
and
xor
sahf
out
orb
adc
jle
loop
mov
jnp
sub
cli
xchg
not
rcr
xor
pop
mov
add
mov
int
mov
jge
cmp
adc
imul
adc
mov
xchg
mov
mov
iret
and
ficomps
out
and
xorps
fisttps
ja
lret
dec
stos
mov
shlb
adc
sub
adc
add
push
pop
push
push
adc
adc
test
jne
inc
popf
sub
fists
stos
push
dec
inc
mov
mov
jnp
fildl
sbb
inc
push
test
movl
cmc
and
xchg
mov
popl
and
add
sbb
inc
lret
push
gs
scas
js
cmp
pop
mov
mov
sub
ss
mov
enter
test
pop
out
jns
rorb
cmpsl
cs
negw
repz
pop
xchg
push
sbb
hlt
popf
dec
outsl
xor
stos
push
ficompl
xor
fstp
add
in
fcoms
xor
push
jno
es
lds
dec
jp
cltd
push
imul
and
mov
sbb
inc
movsl
jle
sub
jp
inc
cmp
fsts
stos
xchg
pop
sub
jl
fsubl
jge
dec
aas
cli
in
and
sbb
lcall
cmp
shrd
push
arpl
jmp
add
push
xlat
fmul
and
fld1
xchg
ret
sub
inc
add
sahf
push
sub
out
ret
andl
fwait
mov
pop
clc
sub
fdivrs
push
fiaddl
mov
push
shlb
xchg
mov
repz
into
xchg
std
or
jle
cmc
jb
ja
mov
aaa
shl
mov
cmp
fnsave
daa
aaa
lods
std
addr16
xchg
dec
outsl
cmp
pop
push
dec
jmp
push
call
rcrb
push
ds
mov
mov
dec
inc
or
sahf
xchg
cmp
in
cmpl
dec
cmp
addb
jo
outsb
xor
xor
mov
stos
divb
push
push
xchg
pop
into
repnz
ljmp
out
insb
xchg
sahf
lsl
jbe
xlat
jne
call
ss
sbb
test
arpl
lret
sub
jbe
jmp
jp
or
pop
sub
arpl
movsb
push
aas
xchg
mov
ss
add
loopne
rcr
mov
xchg
imul
cmp
int3
repz
xchg
jle
pop
mov
inc
push
add
xchg
rcl
int
sub
xchg
cs
xor
js
imul
fwait
adc
cmp
lcall
jp
xor
int3
sub
sub
popf
jle
aas
adc
fwait
pop
jmp
jle
pusha
sbb
mov
in
cmpsl
in
stos
inc
dec
push
add
in
insl
stos
inc
and
push
sti
arpl
stos
add
les
stos
jno
sub
hlt
test
inc
mov
lcall
pushf
cmp
cmc
inc
movl
jb
lods
pop
ljmp
adc
scas
into
mov
mov
mov
daa
bound
adc
dec
cmp
outsb
sub
dec
and
sub
dec
mov
add
push
xor
cmpsl
fidivrs
xchg
jns
test
xchg
pop
rol
cli
aaa
bound
add
mov
ret
mov
inc
daa
add
out
jo
mov
adc
loopne
mov
sti
repnz
jae
mov
shll
add
jecxz
mov
jl
loop
outsl
cmp
and
loope
xchg
cld
leave
sub
jbe
cmpb
mov
jae
loope
mov
add
arpl
mov
adc
ret
popa
xchg
pop
push
mov
ljmp
push
fst
push
loopne
mov
cmp
fidivs
adc
and
call
insb
adc
stc
jae
push
mov
dec
push
std
gs
and
jno
fdivrs
std
mov
decb
and
mov
movsl
xlat
into
in
hlt
mov
daa
ja
rorb
or
jnp
sbb
lock
orb
ret
roll
test
and
add
rcr
lds
mov
or
or
add
scas
dec
jl
mov
push
stos
lret
out
test
out
fwait
add
cmp
inc
loope
es
ret
fsts
push
adc
rorl
xor
pop
xor
jne
pop
pop
and
and
cmp
inc
xchg
pop
insb
mov
frstor
sahf
push
and
int
faddl
js
sub
cmp
cmpsb
inc
or
cli
inc
jl
push
pop
adc
sbb
jnp
xlat
inc
mov
inc
xor
cs
jns
or
ds
push
mov
mov
or
mov
pop
and
add
adc
aas
jmp
in
aad
into
scas
mov
stc
out
rcrl
dec
fildl
test
jp
push
ljmp
xchg
mov
insl
mov
mov
divl
ss
lds
or
mov
inc
sbb
fprem
sahf
pop
or
and
shrl
or
pop
inc
xor
sub
clc
sbb
xor
mov
popa
pop
mov
rorb
cmp
mov
lods
jns
imul
sti
pop
jge
fnsave
or
lds
fdivrs
push
jno
imul
adc
cmp
push
mov
fsubs
inc
test
mov
in
bound
pop
xchg
incb
filds
add
cmpsb
sarb
int
push
and
xor
es
xchg
out
fsubr
enter
imul
mov
xor
inc
dec
aad
rcll
add
and
add
cmp
cli
movsb
sub
sarl
sub
or
inc
sbb
xchg
jg
loop
inc
int
mov
push
leave
push
sub
and
pop
std
fstps
sub
cwtl
mov
ja
int3
addr16
jo
jle
lea
js
loopne
xor
ljmp
add
decb
repnz
dec
loop
mov
or
cmp
ljmp
insl
outsb
leave
jns
jle
adc
cmc
stos
jno
test
xlat
pop
push
xor
dec
add
xchg
mov
dec
xor
mov
cmp
mov
mov
shll
les
lods
lahf
mov
fabs
push
out
fstpl
xlat
in
mov
cmp
test
leave
ficompl
fmull
notl
jecxz
mov
jnp
jnp
loop
mov
lea
sbb
mov
or
cli
jns
enter
jo
aaa
pop
mov
xchg
fdivrl
in
sub
mov
cmp
pop
jnp
ds
mov
pop
outsl
xchg
jle
mov
mov
lea
dec
decl
repz
daa
insl
sbb
in
cmp
xor
cmp
jns
push
mov
or
xchg
mov
inc
push
fisubs
dec
mov
scas
movsb
lcall
lahf
mov
adc
xchg
jmp
jp
cmp
movsl
out
ja
stos
mov
sub
cli
ret
jecxz
jne
cmp
adc
add
sbb
adc
les
xor
out
ret
fbld
mov
aas
dec
bound
jmp
sahf
push
jmp
imul
orl
fldt
lea
inc
mov
or
mov
cwtl
rep
cli
inc
mov
sbb
pop
push
push
sti
dec
sahf
aad
push
sbb
xchg
inc
out
mov
aaa
jl
add
into
insl
in
cmp
or
jnp
or
pop
dec
xchg
ret
scas
push
jmp
test
push
mov
sub
mov
dec
xor
xchg
xor
gs
popf
repz
call
lods
pop
add
pop
sub
push
xchg
mov
repnz
sti
sub
pop
idivl
xchg
and
push
sub
jge
inc
outsl
mov
mov
inc
jl
mov
mov
and
push
jle
jecxz
mov
mov
mov
cli
ss
cmp
jae
nop
cld
and
cmp
or
jmp
or
test
jb
movb
insb
ja
imul
int
gs
stos
repz
dec
mov
out
test
mov
or
inc
insl
sbb
int3
inc
lea
sbb
adc
cmp
mov
shll
mov
jae
imul
sub
push
call
and
stc
cmp
xchg
pop
pusha
jmp
outsl
push
dec
pop
int3
lret
fs
std
std
ret
test
jp
in
ja
xchg
lcall
call
dec
hlt
test
sbbb
jne
mov
orb
jl
ss
daa
pop
push
xchg
add
cmp
pop
dec
jp
sbb
adc
sti
movsb
aaa
fnstcw
push
or
mov
fwait
decb
push
mov
mov
frstor
das
cmp
push
in
inc
test
enter
movsb
sbb
adc
js
xchg
sbbb
dec
adc
daa
or
push
je
xor
movsb
outsb
add
loopne
rcrl
mov
stos
js
pop
imul
pop
or
out
ss
adc
mov
mov
aas
jo
xor
push
mov
push
nop
and
fimull
dec
xchg
xchg
lods
jge
bound
fsubl
arpl
leave
mov
push
xchg
aas
xor
outsl
sbb
mov
sahf
cmp
lret
mov
adc
sbb
pop
movsl
fwait
sbb
mov
push
fs
das
mov
sub
and
mov
jb
dec
adc
mov
jne
push
out
xchg
imul
lret
xor
jo
xor
bound
out
inc
and
testl
sbb
insl
imul
out
insl
xchg
add
aad
into
not
inc
jns
int
xchg
inc
sub
sub
shll
and
in
je
test
or
push
loopne
mov
cli
adc
cmpsb
addr16
loop
scas
inc
mov
dec
dec
fnstcw
mov
test
add
addr16
loope
loop
inc
xchg
mov
test
sbbb
adc
stos
icebp
jge
adc
aad
dec
mov
sbb
movsb
icebp
cmp
test
add
add
inc
in
sti
shl
jge
mov
xor
cs
sbb
mov
mov
cli
jecxz
sti
fldl
cmpsl
push
mov
jl
push
jbe
xchg
dec
aad
shlb
bound
rol
fs
daa
repz
sbb
arpl
mov
mov
xchg
cmpsl
pop
inc
fcmovnbe
cmp
or
movsb
lock
or
test
roll
cmp
adc
xchg
jmpw
push
into
cmp
aaa
dec
push
pop
fsubrs
ss
loope
mov
mov
mov
fdivrl
cmp
dec
cltd
in
sub
fsubrl
mov
adc
sbb
jp
imul
or
je
xchg
rolb
jl
test
adc
or
jp
mov
addl
lock
fadds
movsb
sbb
test
fimuls
ja
lods
cltd
test
pop
add
stos
loopne,pt
sub
das
mov
jne
imul
pop
jbe
jne
jno
mov
mov
call
pushf
push
test
mov
test
mov
pop
stc
and
push
adc
movsl
jle
rclb
fadds
mov
jl
scas
ret
and
inc
push
ret
xchg
or
add
jle
scas
push
jbe
repz
xor
nop
lret
mov
sbb
stos
pop
jle
push
insl
adc
arpl
jae
rep
jb
hlt
pop
dec
loop
movl
push
push
iret
push
in
adc
sub
sbb
fmull
fdivrs
pop
insl
filds
loope
cmp
lret
cli
je
cmp
scas
sub
jmp
stc
push
sbbb
pusha
daa
les
aas
adcb
adc
xchg
pushf
loop
fdivr
dec
pop
imul
or
or
outsl
dec
loop
arpl
mov
xor
cmp
loope
jp
loopne
push
imul
adc
sub
das
test
add
jno
test
in
lods
scas
pusha
rolb
clc
push
mov
fistps
loope
outsb
icebp
push
pop
mov
sub
mov
jle
mov
lds
iret
xchg
xchg
inc
dec
aad
xor
ja
sbb
jge
mov
mov
dec
shrl
mov
imul
or
dec
mov
notl
dec
inc
push
lods
subl
pop
cmp
jnp
pop
fldt
cmp
mov
test
pop
jecxz
les
lds
cmc
xor
in
ret
pop
mov
fwait
xor
fistl
mov
out
lret
cmp
pusha
scas
pop
cmpsl
imul
sub
popf
sub
insb
iret
aad
jns
cmp
mov
gs
popf
add
xchg
mov
adc
or
pop
cmp
leave
push
mov
out
testb
aad
out
insl
ja
es
xor
cld
in
mov
stos
in
hlt
and
adc
or
movsl
jecxz
fldln2
test
icebp
jno
jle
lock
rol
pop
jb
sub
adc
in
and
lret
xor
xchg
xchg
cs
outsb
cmc
and
add
addr16
mov
add
mov
adc
js
shl
insb
hlt
fisubrs
xor
shll
scas
pop
mov
inc
sbb
cmp
pop
pop
inc
ret
push
sbb
push
inc
mov
sub
dec
orb
inc
outsl
mov
lds
fistpl
push
pop
sbb
out
rcrl
jle
push
push
lcall
icebp
ror
add
adc
enter
sub
sti
fcomp
stos
outsb
bound
out
jb
add
aam
adc
pushw
icebp
in
sub
adc
jg
jnp
aas
mov
sbb
int
inc
mov
dec
loope
imul
xchg
pushf
std
adc
enter
mov
sbb
xor
arpl
in
cmp
loop
ret
inc
rcrl
jae
rorb
push
mov
and
xchg
inc
imull
imul
sbb
in
mov
aad
iret
or
sub
fildl
jnp
inc
add
ja
adc
inc
popa
ss
leave
cmp
sub
sbb
pushf
pop
cmp
pop
pop
repz
cmp
stos
inc
pop
inc
lret
ja
push
push
outsb
mov
lcall
mov
clc
or
dec
aam
mov
cmpl
iret
fdivs
xorb
test
movsl
mov
fstl
mov
jo
fcmovnu
mov
test
cld
mov
inc
hlt
out
mov
in
push
leave
sbb
adc
cmc
inc
mov
xor
push
mov
xor
into
sub
add
jno
stos
cmp
pop
pop
lret
lahf
and
mov
pop
test
ret
je
test
sbbb
movsl
test
cmp
push
lcall
jmp
enter
mov
push
icebp
popa
out
dec
xchg
adc
mov
xchg
adc
fnsave
and
dec
sub
lods
mov
sahf
xchg
in
out
or
mov
cltd
pop
xchg
das
mov
in
int
loop
cmp
dec
les
lods
mov
call
xchg
push
inc
inc
cmpsb
int3
fnstsw
xchg
inc
outsl
xchg
es
js
ss
sbb
pop
fsubl
pop
arpl
pop
push
divl
xchg
enter
nop
shrl
add
lods
inc
pusha
negl
sub
mov
popf
fisttps
jge
xchg
xor
dec
sub
cmp
mov
dec
jge
jmp
sub
add
sbb
inc
jmp
mov
push
cmpsb
dec
fwait
mov
out
xor
cmp
jne
mov
negl
inc
mov
movsb
stc
adc
or
pop
jne
mov
dec
push
lods
andb
jg
aam
sti
push
jge
and
inc
dec
lret
pop
lods
or
mov
xchg
out
push
sub
xchg
push
sarb
add
repnz
orb
dec
fwait
enter
mov
jo
in
aas
notb
jle
pop
cmp
iret
mov
pop
xor
lcall
mov
jmp
fnstenv
push
int3
xchg
jecxz
cmp
jg
cmp
sub
ret
nop
push
roll
xchg
lds
pop
xchg
fistpll
adc
ss
pop
lret
add
mull
jmp
cmp
je
out
ret
inc
mov
pop
push
lods
push
mov
xor
add
loope
addr16
aam
nop
mov
test
mov
stc
push
fistpl
adc
les
bound
ret
jo
xchg
cltd
dec
addr16
sub
call
pop
test
pop
adc
adc
inc
jge
inc
movsb
jp
mov
mov
cmp
xchg
bound
or
stos
xchg
loope
xlat
outsb
icebp
ror
sub
xor
mov
mov
xor
loop
mov
dec
insb
ret
cltd
cmpsb
push
jle
push
int3
fnstcw
and
leave
shlb
jne
in
dec
pop
xchg
sahf
ss
mov
fisubrs
push
xlat
xchg
xchg
jb
push
push
leave
fists
outsl
sahf
sbb
jne
ss
lea
jp
ss
and
pop
nop
hlt
adc
daa
test
or
je
mov
cwtl
pop
xor
sbb
scas
jge
cmp
icebp
repnz
js
les
popa
js
testl
popf
dec
and
or
and
sbb
mov
adcb
xchg
scas
and
pop
xlat
scas
in
nop
push
popf
fistpll
pop
aas
out
xor
sti
jl
icebp
lods
mov
or
into
push
cld
or
pop
fnsave
push
test
mov
adc
int3
loopne
rcll
push
fidivs
insb
push
insl
nop
lock
stos
enter
mov
aas
cli
mov
in
imul
jl
std
dec
dec
or
repnz
adc
xchg
test
loopne
popa
push
sub
arpl
pop
or
popf
in
jns
mulb
das
lds
adc
or
bound
aam
xor
pop
mov
or
cwtl
nop
repnz
insl
pop
bound
test
outsb
push
inc
aas
addr16
jns
loopne
cmp
andl
data16
or
inc
fldt
jmp
sti
inc
int3
jmp
je
dec
push
outsl
outsl
mov
neg
leave
test
xchg
xchg
sub
divl
lret
clc
popa
icebp
push
adc
xchg
sub
repz
sub
dec
mov
repz
jecxz
cld
add
gs
stos
jno
jne,pt
imul
or
aam
aam
cmp
fwait
pop
sti
divb
and
loope
aad
ds
push
sbb
jne
je
mov
push
test
ret
dec
jns
ljmp
adc
sub
adc
cmp
xchg
jl
hlt
mov
scas
push
mov
mov
xchg
sbb
clc
dec
fnstenv
aad
cmp
push
pop
dec
arpl
xor
stos
xor
push
scas
or
xor
mov
xor
push
sbb
push
movsb
inc
sti
or
sub
lahf
popa
call
mov
xor
lods
xor
imul
cmp
in
sub
test
dec
enter
and
outsb
push
pop
in
mov
fwait
sub
sub
push
fs
push
dec
add
mov
sub
insb
pop
mov
push
out
std
data16
or
ja
leave
xor
jno
outsl
int3
sti
insl
jge
push
cmp
and
mov
dec
add
scas
push
inc
dec
hlt
shl
fcmovu
dec
cld
add
aam
aad
push
or
enter
mov
mov
inc
inc
out
stc
pop
ss
pop
mov
arpl
push
jg
xchg
pop
in
sbb
lahf
mov
mov
mov
dec
push
orl
cmpsb
inc
popa
test
adc
add
jnp
int
xchg
inc
insl
ret
fs
xor
jg
inc
dec
js
lcall
adc
cs
mov
push
mov
push
mov
jle
or
ds
lahf
pop
xchg
xchg
jmp
mov
add
loopne
fmull
pop
mov
fsubs
sub
push
ljmp
add
mov
decl
in
insl
mov
fucomi
cmc
pop
mov
jmp
or
pop
shr
push
sti
aaa
inc
inc
outsb
loop
pop
push
ljmp
cmp
std
call
int
aam
jge
sti
into
mov
lea
in
cld
add
xor
xchg
test
dec
mov
loope
loopne
jl
fstl
pop
adc
lret
dec
or
pop
enter
and
mov
xchg
push
stos
and
aas
int
leave
movsb
jle
inc
mov
rorb
pop
mov
mov
inc
int3
testl
xor
stos
xor
fldl
add
inc
add
addr16
push
mov
orb
shll
repnz
push
sbb
cmp
mov
int3
mov
daa
sub
loope
xchg
cmc
add
test
push
mov
add
xchg
push
mov
cmpsl
push
xchg
sahf
jb
icebp
pop
mov
pop
mov
mov
mov
shll
or
mov
icebp
jae
mov
push
pop
push
inc
add
shlb
pop
mov
insl
pop
push
rolb
je
add
pop
add
lret
xor
xor
jp
adc
hlt
cmpsb
cmp
adc
mov
adc
in
data16
cmp
shlb
rorl
push
pusha
in
cwtl
enter
cs
sbb
cmp
inc
or
jp
mov
or
dec
cli
pop
mov
mov
das
das
inc
sar
pop
insl
loop
inc
mov
dec
pop
mov
mov
pop
fisubl
or
lcall
jg
jmp
cwtl
gs
loop,pt
mov
sub
cmp
int3
adc
mov
jle
xor
stos
aas
push
dec
add
loope
cmp
stos
lods
and
add
xlat
shll
aas
ja
outsb
ficompl
out
out
cmp
xchg
push
sahf
sub
daa
stos
movsb
dec
mov
jo
out
cwtl
mov
ja
jb
lahf
or
and
cli
lea
add
sbb
xchg
or
add
icebp
cmpsb
jecxz
repnz
mov
pop
adc
jbe
mov
push
or
dec
sbb
pop
cmpsl
pop
pop
xchg
sbb
xor
iret
stos
lock
rcl
std
push
stos
ljmp
cmp
test
mov
sahf
insl
stos
cmp
xchg
sbb
mov
lret
les
jns
push
mov
xor
adc
jae
mov
xor
int
in
jl
xchg
pop
movsl
lods
cmp
bound
mov
cmp
and
jle
mov
popa
int3
sahf
mov
or
xchg
mov
add
rcrb
sahf
data16
xchg
out
jecxz
std
fcom
jns
push
push
cmp
imul
pop
lock
sahf
int3
nop
jge
rclb
and
push
jecxz
icebp
movsb
test
xchg
add
aam
fadd
cmpsb
shlb
add
jmp
cltd
push
lock
jg
fcom
pop
cwtl
int
in
inc
jl
cmpsb
int3
in
push
push
cwtl
das
lods
lock
imul
sbb
push
sarb
aam
mov
xchg
out
sahf
jb
pop
loope
cmp
int3
mov
test
cmpl
jmp
push
cltd
push
fwait
inc
cmp
mov
sbb
dec
iret
inc
cld
iret
in
scas
test
and
insl
das
popa
bound
pop
data16
clc
lahf
sbb
xor
mov
insl
cmp
repnz
scas
mov
les
ficomps
les
mov
push
daa
jbe
fdiv
cld
sahf
testl
cmp
test
xor
mov
mov
push
and
adc
fdivr
cmp
cld
lahf
and
fidivrl
scas
enter
popa
fcmovbe
sbb
mov
or
add
lea
inc
lret
add
test
popf
sub
mov
lahf
lcall
xor
mov
leave
mov
icebp
pop
pop
inc
loopne
sbb
into
add
or
xchg
out
fistl
cmp
nop
add
aas
movsl
add
insl
cmp
dec
sbb
mov
xchg
pop
xorb
mov
inc
inc
ret
lss
xor
arpl
loopne
cltd
pusha
cli
test
mov
int3
mov
push
jnp
insb
mov
add
sti
arpl
ret
mov
inc
cmp
lock
fldcw
and
filds
arpl
fiadds
mov
std
ret
cmpsl
mov
sahf
sub
mov
cltd
les
mov
pop
shrb
iret
subb
and
jmp
dec
or
jns
inc
push
les
lret
cmp
xchg
movsb
adc
lods
jno
mov
ja
mov
mov
pop
jg
popa
fisubrl
fstpt
hlt
add
shll
jmp
enter
jmp
inc
and
push
mov
mov
pop
cs
sub
sbbb
int
orb
addr16
adc
cli
and
xorl
hlt
mov
mov
lret
xor
dec
jl
arpl
xor
adc
out
test
out
pusha
add
jl
push
jmp
adc
jle
sub
sbb
lahf
push
dec
out
aaa
loop
adc
xor
xchg
jae
iret
sbb
or
pop
xchg
fstpl
dec
pop
mov
aas
das
jnp
xchg
into
lret
and
jmp
fbld
std
cs
adc
push
xchg
insl
sub
bound
jb
cltd
lret
repz
lods
lret
lahf
imul
popa
xor
adc
jmp
out
sub
cli
aam
loop
ljmp
shr
sub
push
int3
adc
cld
loope
sub
mov
mov
add
add
xchg
xor
dec
lods
mov
lods
hlt
rcr
dec
lods
ds
insb
clc
adc
jbe
inc
mov
xchg
and
cltd
sbb
lock
push
and
mov
stc
call
outsl
aad
lahf
push
sbb
sbb
inc
pop
pop
push
stc
adcb
and
inc
inc
or
repnz
inc
jmp
xor
incb
or
imul
hlt
xor
or
outsl
jb
dec
sub
jb
shrb
xlat
xchg
subl
hlt
cmp
jle
and
xor
push
ja
xchg
adc
adc
push
mov
fadd
push
ficompl
and
sbb
and
testl
xchg
jle
jne
sub
scas
sti
and
sbbl
shr
and
ss
push
lea
adc
or
notl
mov
les
into
out
and
lcall
lock
sahf
xchg
sub
inc
push
clc
sbb
cmpsb
sbb
fsts
fwait
cltd
jae
into
adc
cmp
mov
stos
xor
mov
jbe
cmc
mov
cwtl
daa
sbbb
loopne
aas
subps
inc
or
movsb
pop
push
loope
add
xor
mov
mov
jmp
pop
add
push
sbb
xchg
aad
push
aas
mov
push
nop
cli
bound
scas
and
push
pop
pop
sub
gs
mov
daa
sbb
jnp
mov
lret
or
imul
pusha
fsubrs
fildl
mov
dec
movsl
aaa
div
hlt
mov
mov
loope
push
inc
cmp
mov
shlb
aas
xor
adc
xchg
xlat
in
aaa
and
sub
sbbb
pop
fstl
shrb
jl
jns
lret
inc
nop
pop
xlat
gs
adc
xchg
inc
push
insb
mov
mov
jle
xlat
fadds
pop
shrb
lahf
cmp
fiadds
imulb
mov
dec
sbb
cmp
sbb
or
dec
stos
sub
pop
in
fstpt
push
adc
mov
xlat
pop
sub
ja
movsb
add
int
add
pusha
test
push
lea
pop
cltd
lahf
out
bound
std
xchg
cmc
jl
add
test
mov
repnz
mov
into
xchg
push
in
repz
sarb
lret
shlb
push
push
jne
xchg
push
pop
adc
xchg
sbb
cmc
xor
mov
xor
dec
cmp
xlat
in
leave
xor
aas
jnp
jnp
decb
mov
jle
mov
jno
jg
inc
inc
lahf
std
push
icebp
cmp
imul
sbb
insl
pop
dec
xlat
ja
add
xchg
cli
inc
out
sti
dec
or
mov
inc
lcall
arpl
popf
jne
sarb
jl
popa
mov
mov
dec
mov
xchg
andl
xchg
out
ret
push
add
mov
fnstcw
jns
outsl
ror
aas
dec
es
rorb
pop
jp
pop
loope
jp
imul
dec
mov
in
jno
or
mov
pop
xchg
insl
and
push
scas
cmp
cmpsb
add
in
or
push
lea
cmp
jnp
adc
loopne
shrb
das
scas
aas
cmp
jae
mov
sbb
xchg
lea
call
ret
xchg
es
xor
popf
shl
fnstcw
and
xor
shrl
push
inc
gs
or
pusha
aad
inc
outsl
inc
mov
dec
and
pushf
jae,pn
mov
mov
xor
lret
xor
sbb
fs
ret
jns
add
mov
jae
mov
sti
sub
dec
aas
dec
shll
in
sub
xor
imul
or
pop
out
inc
cmp
or
in
in
adc
cwtl
in
mov
ljmp
sbb
pop
or
shlb
inc
adc
and
cmpsl
aam
test
out
test
mov
mov
enter
push
test
pop
xor
stos
dec
or
leave
fbld
mov
bound
sbb
jbe
arpl
sub
sarl
loopw
ss
add
cltd
dec
arpl
ret
cmp
ret
cwtl
iret
mov
int3
mov
imul
call
addr16
xchg
not
div
gs
jo
xor
mov
pushf
mov
lahf
into
and
xchg
js
loop
mov
outsb
xchg
cmpsb
les
jecxz
insl
fsubs
xchg
push
popf
inc
and
adc
les
icebp
hlt
push
test
hlt
cmp
dec
sti
ljmp
and
pusha
in
mov
jae
pop
jb
mov
cmp
xchg
push
addl
imul
fnstsw
fcoml
xchg
aam
clc
test
adc
inc
sti
xor
pop
jp
repz
sub
and
push
mov
testl
push
mov
push
cmpsl
movsl
enter
and
xor
in
xchg
xlat
mov
emms
rcll
push
sbb
cwtl
cs
lock
std
sbbb
xchg
fcmovnbe
jecxz
pop
lahf
cmc
push
test
mov
sbbb
cs
fdivp
popf
add
in
js
or
clc
test
cwtl
xor
mov
sarb
add
dec
dec
mov
sti
setae
mov
lods
fwait
jno
loop
pop
mov
shlb
xchg
loop
imul
jmp
stos
add
sub
ficoms
int
test
ret
sub
adc
pop
cwtl
mov
aam
stos
inc
inc
into
scas
ret
adc
mov
xchg
sub
and
cmp
addr16
out
cwtl
test
jns
sub
sbb
push
jmp
jge
jmp
add
and
test
cs
mov
sub
mov
andb
xor
pop
mov
and
pop
pop
and
push
mul
rclb
push
xor
jl
sbb
fists
fimull
mov
push
xor
mov
xchg
into
sub
lret
mov
adc
pop
mov
or
stos
push
add
pushf
jnp
or
sti
inc
jbe
xchg
les
cwtl
inc
dec
adc
push
mov
mov
inc
xchg
jp
cmp
fwait
icebp
pop
xchg
ljmp
mov
mov
nop
movsl
sub
fildll
out
jbe
xchg
scas
mov
sub
jg
loop
sub
xor
and
add
das
pop
push
gs
adc
sub
addr16
pop
push
mov
xchg
shrl
push
cmc
scas
jns
enter
lret
cmp
incb
adc
into
xchg
ret
call
inc
movsl
mov
sbb
or
fnstcw
in
int3
sbb
push
xchg
leave
lods
jecxz
push
jg
in
or
mov
or
stos
insl
push
push
inc
lret
les
pop
cmp
xor
xor
incl
mov
repnz
sub
adc
jge
fnstsw
jnp
arpl
jae
mov
clc
es
pusha
sub
xchg
movsb
pushf
jl
rcrl
je
pop
xchg
xchg
loop
ss
leave
xor
xor
add
inc
or
mov
cli
mov
jbe
cmp
lret
mov
movsb
movsl
jl
pop
stc
dec
dec
xchg
ja
ja
fwait
inc
pop
mov
ds
sahf
aas
sbb
mov
cmp
push
int3
lret
xor
jne
call
or
lcall
in
test
mov
jbe
and
mov
sarl
mov
lahf
jnp
xchg
lods
sbb
inc
jle
repnz
xchg
lcall
lcall
xor
popf
test
adc
mov
dec
dec
jns
sub
mov
dec
fstps
or
fbstp
add
jnp
adc
inc
push
jb
sbb
nop
adc
inc
scas
sar
cmp
int3
jmp
jnp
bound
mov
popw
xchg
xor
push
mov
inc
and
jb
gs
es
mov
push
lds
mov
add
fwait
dec
lea
loope
cmp
out
ljmp
je
aam
mov
mov
sbb
inc
aam
hlt
repnz
loopw
and
in
xchg
fs
sbb
sbb
push
jmp
cwtl
mov
loop
daa
mov
in
les
add
fwait
ds
call
and
stos
divl
xchg
mov
clc
jo
push
xchg
call
in
inc
add
addr16
pusha
cltd
mov
mov
cmpsl
leave
in
hlt
jle
fcmovbe
lea
mov
and
outsb
sub
or
scas
pusha
cmpsl
xchg
js
sbb
loope
fs
addr16
int3
popa
push
mov
dec
test
jp
dec
xchg
push
repnz
out
add
cmp
in
and
fs
sbb
fstl
popf
data16
into
fisttpll
push
loopne
scas
mov
cli
cwtl
push
aam
ja
xor
out
in
jne
mov
sbb
cli
push
xor
and
fwait
sbb
repz
fsts
in
pop
xchg
jns
adc
pop
lcall
pop
inc
clc
add
push
and
rcl
or
adc
out
xchg
mov
push
push
mov
insb
cwtl
adcb
inc
pop
mov
iret
loopne
dec
sbb
mov
and
push
xchg
mov
shl
in
pop
push
mov
pop
out
int3
lods
mov
out
and
insb
sbb
cmpsl
clc
je
cmovl
fwait
lahf
mov
cmp
outsb
add
jmp
or
fisubl
std
sbb
pushl
sti
cs
out
daa
fdivs
and
xlat
push
rcr
mov
fisubrl
dec
pop
stc
dec
mov
jnp
add
aaa
or
jns
or
repz
cmpsb
add
stos
adc
nop
ja
xor
mov
ja
jo
dec
out
add
and
sarb
xor
pop
jne
add
adc
add
popa
add
mov
and
insl
lods
adcl
das
or
sub
sarl
cmp
mov
data16
push
fstl
test
into
push
jo
decb
ljmp
notb
shl
test
jecxz
fidivrl
push
xchg
frstor
icebp
loopne
sbb
mov
inc
mov
push
xchg
sub
mov
mov
insb
jp,pt
sbb
xor
popa
pop
mov
push
dec
arpl
movsl
es
lret
out
cmp
mov
sbbb
mov
mov
insl
popa
dec
cmp
dec
push
jle
sub
mov
mov
fs
push
or
and
repz
mov
test
fstpl
lret
scas
jp
push
stc
orl
in
adc
imul
cmc
ficoml
dec
inc
movsb
mov
pop
rcrl
insl
and
add
or
push
or
or
adcl
dec
mov
pusha
aam
insb
mov
sub
mov
pop
inc
mov
dec
mov
out
lea
mov
jno
xor
daa
push
add
jno
add
mov
lods
push
aaa
andl
imul
nop
outsl
push
mov
gs
leave
repz
lret
push
xchg
fdiv
pop
aas
lock
dec
cs
into
sbb
add
jo
and
or
scas
mov
jge
push
mov
sub
pop
xchg
or
lcall
add
dec
in
test
call
or
xchg
stos
pop
popa
fcompp
and
dec
sbb
out
mov
rcrb
arpl
mov
dec
loopne
mov
sahf
insb
pop
cmc
mov
and
mov
pop
das
repnz
ret
scas
cmc
pop
mov
data16
sbb
or
mov
sti
iret
cmp
cld
sbb
outsb
sbb
xor
and
fdivp
mov
jp
cmp
sbb
or
and
fdiv
add
fidivl
pop
mov
xchg
xchg
aas
xchg
loopne
fmulp
shlb
mov
fsubrp
add
sbb
lock
jne
cmp
lea
push
xchg
xchg
push
enter
adc
lods
inc
push
cmp
rorb
fsubp
jg
pop
lds
and
or
in
movsb
cmp
jp
je
popf
outsb
mov
xchg
insl
and
add
rol
push
lahf
shlb
lods
pop
cmpsl
test
add
add
adc
fisubrs
jecxz
mov
fsin
addr16
inc
addr16
in
push
out
sbb
add
mov
mov
inc
jns
out
shrb
jmp
js
inc
dec
test
lret
stos
enter
xchg
aaa
or
or
mov
out
mov
out
sub
aaa
lret
add
mov
dec
pop
iret
jnp
shrl
jo
jge
jg
mov
jnp
xor
out
xchg
xchg
aad
addr16
pushf
sbb
xchg
arpl
mov
mov
mov
adc
cld
cmp
aas
and
leave
lods
mov
push
xchg
inc
mov
in
repnz
or
test
loope
movsb
cmp
cmpsl
cmc
cwtl
lods
pop
pushf
imul
dec
loopne
aad
xchg
add
pop
cmp
popf
sbb
in
rorb
aaa
pop
jb
jbe
cmp
out
insb
or
loop
adc
mov
nop
int3
xor
mov
out
push
jmp
sarb
add
lret
add
scas
movsl
nop
call
fwait
stos
inc
lret
clc
loopne
pusha
rcrl
mov
filds
jle
adc
adc
sub
jno
mov
pop
cmp
inc
mov
mov
je
or
ja
iret
mov
adc
pop
addr16
mov
sahf
arpl
insl
mov
fst
mov
sub
xor
dec
imul
add
nop
shrb
xchg
xchg
std
mov
fsubs
jns
jns
xor
mov
inc
outsl
xchg
xchg
pop
xor
mov
pushf
stc
ljmp
stos
adc
stos
or
lahf
or
mov
lds
dec
inc
loop
pop
test
cmpsl
pop
add
xor
in
in
add
loope
jns
push
mov
stos
inc
pop
dec
fwait
sub
xchg
mov
fsubrl
adc
dec
scas
call
imul
inc
cmp
fs
test
cmp
lods
pushw
sahf
jae
sbb
sahf
xor
test
cmp
int
andl
rclb
ficompl
sub
stos
pop
inc
mov
dec
cld
lods
xchg
dec
rcrb
nop
int
popa
scas
sbbb
adc
pop
imul
scas
mov
push
or
push
out
mov
fisubl
ret
setnp
or
insl
aad
dec
or
push
filds
add
mov
mov
push
cli
call
outsl
sub
adc
push
das
cmp
lods
dec
out
mov
xor
xchg
push
cmp
xchg
xchg
jecxz
cmp
cli
loope
mov
sahf
mov
aaa
fsub
xor
ss
leave
cltd
in
popa
insb
cmpsl
sbb
adc
add
pop
dec
in
sub
test
mov
mov
enter
mov
jnp
cmp
add
in
add
pop
mov
scas
js
imul
xrelease
sar
test
and
jbe
int3
in
and
jne
or
dec
call
les
jno
jmp
or
mov
aas
mov
mov
push
ja
pop
mov
popa
roll
dec
cli
clc
sub
jecxz
hlt
lods
fdivrs
jl
push
mov
scas
pmaxub
and
mov
jl
jne
je
lds
lret
sbb
adc
fmuls
mov
and
jo
push
push
orl
insl
mov
xor
push
adc
adc
iret
mov
mov
subl
or
loop
rcrb
loopne
pop
or
test
or
pushf
and
pop
cmp
mov
xchg
mov
adc
jle
jp
mov
dec
pop
movsb
jge
add
mov
scas
sbb
arpl
lods
push
mov
shlb
popf
das
repz
js
add
xchg
fmulp
lock
ret
add
bound
cmp
aam
sbb
scas
add
xor
add
fndisi(8087
pop
je
mov
jne
add
sub
data16
sbb
addl
sarl
jmp
mov
adc
bound
mov
jns
in
dec
jns
mov
ds
dec
mull
and
xchg
push
stc
rcll
dec
xor
mov
adc
pop
aam
cmc
andl
andl
push
xchg
loop
sbb
xor
cmp
movsl
and
cmp
add
adc
ja
insb
dec
mov
and
cltd
xorb
and
sub
push
dec
fdivr
iret
mov
inc
pop
std
cmpsl
cmp
imul
nop
mov
pop
dec
cmp
push
ljmp
in
inc
add
test
jecxz
outsb
stos
into
inc
xor
jnp
subb
lret
xchg
push
testl
xchg
jne
cmp
and
sbb
add
jmp
jg
popa
push
xor
icebp
lahf
xchg
addr16
setle
jae
imul
jecxz
repnz
pop
bswap
xchg
dec
xor
repz
mov
xchg
adc
mov
fstl
repz
or
stos
cli
xor
jnp
lock
inc
inc
js
mov
jg
inc
push
jp
xor
pop
push
dec
inc
xchg
or
rcl
pop
jge
sahf
loope
push
cli
cmp
mov
pop
add
fs
icebp
jecxz
sti
or
movb
ja
movsl
dec
rcrb
std
insb
xchg
mov
push
mov
push
imul
adc
lcall
out
sub
sbb
jne
faddl
lcall
push
and
add
sbb
push
jmp
dec
in
lcall
mov
mov
enter
pop
or
dec
cmp
aas
xchg
mov
mov
test
shlb
pop
dec
out
jnp
popf
cmp
ret
mov
dec
jae
das
xchg
cmp
mov
loop
mov
push
orl
test
repz
pop
sbb
pop
sahf
xor
outsl
out
loopne
xchg
lcall
sahf
and
or
outsb
test
lods
mov
lock
out
push
jns
mov
ret
jae
imulb
inc
jae
sbb
fsts
andl
add
jo
fsubr
add
ror
inc
scas
xchg
pop
enter
adc
pop
sub
lcall
jecxz
ret
mov
lea
adc
mov
jo
and
mov
rcl
or
repz
add
inc
push
pop
pop
mov
add
out
mov
pushl
pop
adc
and
fnstcw
js
ljmp
loopne
push
out
xchg
xchg
shl
sub
xchg
gs
insb
enter
addl
dec
sub
leave
jle
pop
lcall
push
jae
jecxz
int
pop
mov
lock
stc
sbbb
cli
inc
push
push
sub
xor
mov
pop
lea
int
push
mov
xorb
mov
aam
out
sbb
loope
mov
sub
loopne
mov
pop
jnp
loop
xchg
pop
jle
push
leave
stos
mov
rclb
nop
adc
dec
lock
test
addr16
les
gs
dec
mov
es
cmp
popa
mov
lock
or
xchg
or
clc
jo
sbb
pop
data16
mov
pop
xchg
cld
push
pop
mov
out
lods
xor
jns
cmp
dec
xor
adc
xlat
addr16
cld
adc
loope
xor
test
jo
lahf
std
cmp
mov
lcall
add
arpl
xchg
cmp
lahf
ret
adc
xor
test
cmpsl
decl
loopne
pop
inc
xor
mov
test
cmc
in
out
addr16
fidivrs
push
mov
ret
dec
sub
inc
enter
ss
call
jp
leave
xor
adc
cmpsl
ds
push
lods
add
fs
out
shlb
mov
mov
mov
fnsave
es
push
mov
jb
add
popa
sub
mov
push
into
cli
mov
xchg
in
jno
sub
jnp
add
dec
lcall
fcoml
mov
testb
sbb
lods
dec
mov
int3
mov
popf
dec
mov
and
jmp
loope
jae
cmp
xchg
pop
in
fnstsw
xlat
aaa
pop
punpckhwd
and
cltd
out
pause
jle
cmpl
push
xchg
mov
push
aam
dec
loop
xor
sar
inc
jle
jo
cmp
push
gs
adc
adcb
mov
xor
or
mov
inc
push
idivl
jp
es
lret
out
cwtl
cmp
cmc
adc
clc
pop
mov
jg
fisubrs
add
add
jne
pop
arpl
hlt
hlt
jg
outsl
mov
jnp
mov
lods
add
adc
mov
jno
mov
jle
movsl
jle
int3
mov
in
jb
in
pusha
shll
loop
test
mov
loop
and
xorl
scas
test
scas
cmp
pop
jb
jbe
xor
jl
ror
inc
dec
nop
ja
cmp
sarl
lret
stc
jo
rolb
das
shrl
pop
and
sub
adc
bound
lret
cmp
call
aas
sbb
push
adc
outsl
lock
cli
cmp
pusha
xchg
dec
mov
jg
mov
dec
sub
xchg
out
push
cmpsl
sbbb
inc
rorb
loop
xor
xchg
je
cmc
test
sahf
lods
in
sti
push
loope
outsl
cwtl
or
xor
arpl
mov
xor
pusha
jmp
cmpsl
lods
xchg
push
ja
inc
daa
dec
inc
jns
push
xor
icebp
inc
in
sub
pop
push
jg
jmp
pop
roll
pop
fcmovnbe
inc
xorl
addr16
fbstp
mov
mov
xor
js
lea
out
xchg
inc
test
outsl
adc
test
cmpsl
dec
sub
aad
loope
mov
movsb
les
pop
out
iret
loopne
inc
or
pop
dec
lret
inc
out
mull
in
hlt
and
jbe
cmpsb
dec
cmpsb
adc
jo
add
inc
mov
fucomip
scas
andl
fdivs
jb
inc
imul
in
pop
fsubr
popl
and
mov
aas
adc
xor
jp
mov
and
xchg
aas
test
adc
sub
aad
mov
mov
out
sbb
fisubrs
jnp
cmc
and
inc
cmc
push
cld
cld
jle
fists
push
ficompl
gs
icebp
addr16
mov
aaa
addr16
insl
pop
add
push
jnp
pop
daa
and
adc
stc
sahf
add
cs
mov
outsl
stc
das
aaa
fiadds
add
rorl
and
cltd
cmp
or
pop
add
dec
push
cli
mov
push
mov
adc
repnz
loopne
sbb
loop
int
scas
push
addr16
add
ljmp
mov
rcll
out
mov
sub
jns
xchg
mov
insb
xor
negl
loop
push
ja
aam
cs
sbb
lret
ss
lods
pop
lock
sbb
aaa
sti
aas
push
mov
outsl
inc
jne
lret
test
jle
mov
xor
daa
or
out
push
lds
lret
addr16
cmpsl
dec
rcl
mov
int
lret
cmp
mov
sahf
xchg
fcompl
test
sbb
out
pop
or
lret
std
jne,pn
pop
dec
mov
das
or
outsb
imul
cwtl
imul
out
cmp
fisttps
xchg
xor
jecxz
popf
xor
xchg
mov
div
fcomip
xor
cmp
or
cmp
lcall
sub
leave
mov
icebp
adc
add
sub
in
cmc
lods
adc
xor
mov
xor
dec
ret
repnz
repnz
push
push
jle
cld
shlb
dec
sbb
push
lahf
and
inc
pop
inc
sti
and
orl
aaa
inc
dec
mov
test
orb
xorl
mov
mov
leave
clc
subl
mov
iret
std
fistl
shl
data16
movsb
call
in
daa
jp
sarb
imul
fs
pop
mov
incb
mov
mov
pusha
fists
lret
xlat
dec
xchg
jl
mov
roll
adc
dec
movsl
daa
xor
push
push
dec
add
sarl
cmp
roll
cmp
aaa
insl
jns
mov
popf
adc
dec
aad
lcall
pop
sbbl
cwtl
mov
sub
outsl
mov
mov
cmc
stos
repnz
dec
adc
addb
inc
push
lods
or
int3
addr16
shll
mov
or
pop
pusha
add
pop
jnp
adc
xchg
dec
dec
and
mov
adc
jmp
sahf
adc
pop
push
adc
inc
shll
int
daa
stos
mov
mov
cmc
imul
andl
je
jmp
iret
std
sahf
push
push
dec
inc
mov
push
pushl
inc
test
inc
frstor
jns
mov
sti
insb
popw
rcl
pop
mov
and
mov
or
cli
subb
xchg
test
shll
pushf
or
loop
ljmp
xchg
test
mov
push
lret
in
push
jmp
jge
dec
decb
jmp
lds
push
jle
fnsave
cmpsb
lahf
flds
cmp
or
es
mov
push
pop
jmp
or
xchg
fiaddl
inc
lods
lea
cmp
imul
das
jmp
out
inc
fsubp
imul
shrd
xchg
icebp
xor
insb
inc
dec
stos
push
inc
or
add
sub
lock
inc
pop
sbb
pop
addr16
xchg
popa
into
stc
pop
pop
mov
cld
xchg
dec
jmp
add
and
lcall
rolb
mov
mov
jg
jle
push
mov
movsl
sbb
xchg
xor
mov
mov
lea
pushf
mov
push
xchg
rorb
or
pusha
cs
sbb
pusha
cmpsb
mov
pop
gs
push
mov
jne
es
jbe
mov
sahf
xchg
sub
popf
repnz
test
fnstsw
cwtl
jecxz
adc
fstpl
push
lods
out
pusha
subb
dec
and
mov
jp
cmp
adc
notl
sub
add
outsb
insb
add
dec
xchg
push
out
in
movl
lods
out
and
xchg
andl
movsb
jae
sub
ror
cwtl
insl
je
fstpt
pop
pop
bound
jns
pop
pop
cmp
cmp
jmp
loop
mov
adc
and
movsl
add
xor
lods
jnp
adc
das
pop
push
cmp
add
inc
lock
dec
imul
dec
fcmovu
or
mov
push
scas
jnp
add
lds
xor
and
repz
rcrb
inc
adc
mov
cs
gs
adc
insl
adc
gs
into
xchg
movl
aas
ss
aad
out
xchg
inc
aaa
jo
div
jecxz
sarb
dec
int3
out
lea
repnz
test
hlt
adc
sbb
mov
loopne
xor
rcll
add
mov
or
xor
hlt
pop
add
pop
sbb
adc
cmpsb
repz
xlat
in
inc
rcll
bound
stos
leave
incb
jb
push
adc
mov
jae
and
jb
push
sub
test
int
push
out
popa
sub
or
add
mov
leave
mov
out
arpl
dec
jne
cs
inc
mov
dec
push
cmp
and
push
shl
mov
in
and
out
dec
pop
or
pop
mov
inc
push
insb
xor
inc
xor
mov
push
inc
pop
lahf
shll
xlat
sbb
sub
lock
sbb
or
mov
arpl
ja
add
rorl
aas
lahf
shlb
outsl
sbb
xor
jnp
add
movsb
mov
lahf
dec
adc
mov
sub
push
mov
call
pop
mov
jmp
and
and
inc
mov
loopne
test
lods
sub
dec
das
subl
jbe
call
mov
jmp
xor
xor
pop
sbb
clc
mov
sbb
dec
icebp
mov
pusha
pop
lahf
std
enter
lahf
fisubrl
push
cmpsl
pop
xchg
pop
cld
in
mov
sub
sahf
cld
pop
jo
imul
repnz
cli
std
add
push
mov
cmc
cmpsb
push
into
push
jo
xor
fsubr
mov
or
sub
pop
pop
scas
adc
lret
shlb
mov
cmp
or
fwait
push
cmp
inc
lds
scas
inc
nop
sbb
or
jno
jne
icebp
in
mov
adc
scas
push
in
jp
sarl
mov
mov
adc
les
jns
add
ss
cmp
repz
jae
jnp
lcall
xchg
add
jb
outsl
aaa
add
fnstcw
imul
sbb
fsubr
fs
pop
in
aas
push
or
sbb
popf
add
pop
mov
adc
pop
pushl
push
je
pop
imul
fimuls
pop
cmp
mov
fdivrs
pop
fisubl
repz
mov
sub
ljmp
iret
sub
popa
mov
mov
xlat
adcl
std
pop
fwait
push
fldenv
and
adc
mov
pop
push
repnz
cli
std
nop
lods
out
sub
pushf
dec
xchg
xchg
lret
sub
insl
clc
repz
jno
push
fldcw
jp
mov
jb
scas
dec
stc
inc
adc
pop
loop
rorl
xor
xchg
push
insl
stos
test
cmp
inc
jge
push
imul
cmp
dec
ds
cld
repnz
aad
adc
in
lret
mov
test
mov
jle
icebp
rclb
aas
sahf
decb
lds
incl
mov
pop
mov
adcb
jbe
aad
js
cmp
das
jg
add
cli
jmp
xor
insb
popa
sbb
les
fs
int
pushf
inc
or
xchg
fistpll
enter
enter
push
xor
or
cs
fwait
add
inc
aad
mov
jne
cwtl
sti
add
in
pop
addr16
mov
mov
jmp
and
pop
repz
sar
in
xorl
and
cmp
test
testl
mov
int3
hlt
jle
lret
dec
pop
hlt
or
stos
xlat
aad
add
cmp
adc
rcrb
sbb
mov
nop
test
aad
int3
in
loope
and
sub
arpl
daa
sub
mov
sbb
repnz
pop
in
jle
pop
dec
in
out
mov
sbb
test
push
js
xor
adcl
ss
lods
jle
mov
movsl
aaa
cmc
push
add
xchg
mov
cmpsl
push
into
cmp
jb
mov
hlt
enter
sbb
mov
mov
cli
xchg
inc
mov
push
ljmp
jmp
fcoml
and
sbb
data16
adc
sbb
push
sarl
mov
sbb
xchg
in
test
xchg
xor
das
je
andl
inc
in
out
stc
inc
sub
pop
in
loopne
add
push
je
or
lock
aam
add
cld
mov
test
and
cli
leave
push
cs
frstor
test
adc
dec
ds
je
xor
mov
out
push
mov
dec
add
mov
int
test
mov
push
pop
imul
subb
repnz
cwtl
xchg
mov
std
xor
jle
lods
inc
out
ja
in
std
sub
out
mov
or
mov
sub
mov
or
mov
out
insl
jmp
nop
imul
inc
mov
dec
inc
dec
and
pop
ret
stc
enter
movsb
test
push
lret
mov
sub
sahf
insb
pop
mov
movsb
mov
jo
pop
shlb
mov
loop
lds
add
test
pushf
arpl
mov
fwait
push
imul
repz
lods
leave
pop
fs
fdivrp
sub
pop
mov
cmp
mov
or
movsl
dec
lods
mov
push
enter
cld
inc
pop
in
inc
repz
jbe
mov
sbb
sarb
out
push
mov
and
ljmp
adc
test
das
pop
inc
adc
int
push
nop
push
int
shrb
cltd
mov
neg
out
jl
pop
xlat
je
jo
xor
and
loop
cmp
adc
inc
mov
dec
fiaddl
sub
call
popf
ljmp
dec
scas
shrl
pop
inc
cld
outsl
dec
mov
mov
jge
in
dec
pop
jns
sub
pop
lds
mov
mov
push
mov
hlt
mov
adc
add
scas
inc
ja
imul
adc
cltd
es
mov
mov
mov
cld
lods
rcrl
add
sub
pop
push
pop
loope
xor
mov
movsb
cs
fcoml
movsb
imulb
test
pop
arpl
adc
xor
dec
addr16
shrl
scas
push
cmc
add
ja
mov
insl
push
xchg
je
mov
scas
xlat
es
mov
loopne
and
jl
leave
clc
push
inc
lods
xchg
dec
and
movsb
jnp
sbb
fcoml
repz
gs
lods
lods
outsb
and
in
cmp
clc
fwait
add
adc
pop
stos
das
pushf
pop
sub
shrl
add
clc
fbstp
sbb
xchg
xor
test
lret
pusha
and
xor
sub
outsb
popa
aas
out
fadd
pusha
rcr
or
lock
jne
cli
repz
enter
pop
out
jns
jecxz
jge
cli
jl
dec
push
pop
popa
mov
and
stos
sbb
xor
cmp
pop
je
or
stos
repnz
push
xchg
add
ror
add
ss
ja
cs
push
inc
mov
sub
jnp
fiadds
mov
sti
in
cmp
out
jl
sub
lods
mov
xlat
or
out
jno
aad
push
call
jb
mov
cli
mov
lret
int3
mov
pop
out
cmc
dec
cli
sbb
negl
adc
into
xchg
sub
and
fwait
mov
xchg
fcoms
push
aas
mov
jle
xor
lret
cs
sbb
lea
popa
sbb
mov
cli
jno
push
sbb
xchg
and
mov
mov
sti
data16
bound
sub
fisttpl
and
pop
inc
cmp
imul
sbb
adc
fidivs
adc
std
jae
add
popf
in
pop
fsubl
addr16
dec
pop
subl
in
pop
cltd
repnz
xor
jnp
std
mov
je
outsl
inc
js
add
bswap
sti
cmp
std
mov
into
repnz
repz
mov
and
sub
lods
ljmp
push
cmp
mov
outsl
add
push
xchg
jle
jne
cmp
dec
mov
push
aam
in
jne
in
xchg
push
pop
clc
test
lods
arpl
aaa
pop
js
jne
add
dec
inc
lcall
pop
pusha
cs
mov
daa
das
loope
pop
xchg
test
shl
ja
jecxz
test
mov
mov
jle
cld
ja
push
push
add
pop
mov
mov
cmp
sbb
les
push
dec
ja
xlat
xor
adc
xlat
in
adc
sub
out
sub
mov
das
je
pop
incb
add
jl
cmpsl
rcrb
imull
mov
out
test
pop
mov
cmp
xchg
dec
push
shrb
xchg
xchg
inc
push
ljmp
add
sbb
mov
inc
jl
in
add
xchg
loop
mov
cmpsl
mov
cmp
jbe
inc
leave
ret
pusha
sbb
sub
push
xor
outsb
fldenv
sub
insl
icebp
nop
pop
inc
add
icebp
push
inc
das
mov
pop
mov
mov
fcoms
int3
cmpsl
xchg
xchg
in
repz
mov
mov
cli
outsl
addr16
push
lss
aam
pop
sbb
xor
pop
std
dec
test
leave
fwait
xchg
xchg
push
and
pop
or
out
jg
fidivrs
push
sbb
adc
jge
rcrw
pushf
imul
mov
in
jecxz
arpl
aad
inc
pop
xchg
cli
sbb
dec
idiv
sbb
out
insb
add
lahf
push
fs
cmpsb
adc
ss
or
outsb
pop
lret
dec
pop
mov
iret
cmp
sub
dec
push
leave
push
mov
insl
out
lcall
int
adc
int
faddp
stc
add
cli
adcl
xor
fisttpll
outsl
add
jg
imul
jae
add
xor
mov
data16
adc
xchg
adc
add
mov
jno
cltd
in
stc
ret
aad
icebp
xchg
subl
push
aas
mov
gs
in
addr16
popf
cmp
andb
insl
out
adc
mov
pop
test
mov
dec
push
mov
adc
and
mov
pop
jmp
xor
scas
notb
imul
dec
sub
imul
or
jb
or
roll
or
inc
inc
or
jecxz
int
xor
mov
in
pop
pop
std
lods
mov
and
push
mov
mov
mov
push
cmpb
add
jmp
ffreep
sub
out
popa
aaa
jno
pop
ret
out
cmp
push
scas
jnp
push
pop
sbb
xchg
pusha
cmp
xlat
dec
cmp
rclb
jp
fisubrs
dec
test
mov
ffreep
sbb
cld
jle
pop
sub
fcompl
aam
fistpl
loop
inc
jae
jo
mov
scas
jae
call
rcll
mov
lea
std
sub
cmp
pop
addb
int
ds
or
pop
sbb
or
subl
das
cs
pop
sub
icebp
xchg
pushf
pop
insl
sbb
out
mov
xchg
and
pop
pop
cmp
cwtl
mov
xchg
pop
insb
arpl
loopne
or
push
or
jge
outsb
cmp
imul
xchg
mov
mov
push
sbb
and
xchg
jg
inc
push
pop
push
xchg
adc
sarl
lods
and
pop
out
lock
mov
addr16
imul
mov
and
shlb
lds
out
sub
cmp
fwait
les
fs
dec
fistpl
int
cmp
repz
sbb
popa
lods
loope
xchg
ja
xor
test
popf
xchg
out
nop
mov
aaa
add
out
lods
iret
psllq
lods
push
mulb
sahf
sbb
sbb
int3
sub
sbb
lods
dec
js
scas
jg
addr16
inc
ret
inc
jns
or
imul
scas
jecxz
sahf
pop
inc
mov
xor
adcl
xchg
pop
nop
dec
clc
cmp
gs
outsb
cmp
pop
cmp
mov
out
xor
jmp
and
daa
daa
in
mov
push
clc
fstpt
mov
lahf
inc
xchg
cs
and
je
sbb
pop
push
adc
mov
test
pushf
jg
jle
pusha
add
aaa
sbb
lods
sarb
xlat
stc
les
push
xchg
in
mov
test
stc
dec
gs
jle
je
subl
dec
lds
dec
sbb
popf
jecxz
int3
jp
mov
loopne
add
repz
mov
dec
pop
and
rcl
jecxz
push
es
jecxz
pop
adc
insb
in
lea
inc
push
jae
mov
bound
cltd
jne
mov
dec
pop
push
popa
outsl
pop
jecxz
or
in
in
cmpsl
mov
mov
pop
or
insl
mov
xchg
std
and
add
xchg
jp,pn
stos
push
out
ja
jns
cs
loop
jge
jo
or
sub
push
add
inc
push
stos
outsb
in
ret
xchg
or
std
mov
cmp
mov
mov
mov
and
sbb
in
mov
fs
push
cwtl
adc
cwtl
jmp
leave
mov
out
lcall
bound
inc
mov
mov
adc
sbb
inc
xor
scas
ret
ja
out
popf
cmp
push
dec
ficoml
mov
clc
add
fsubr
push
in
aas
mov
sub
and
js
push
popa
ljmp
cmpsb
dec
mov
mov
pusha
add
jne
mov
je
jmp
jns
ds
pop
sub
sbb
push
cmp
dec
icebp
xor
pop
in
sti
test
cwtl
test
cmpsb
in
les
repnz
push
inc
das
mov
es
insb
loope
mov
add
pop
cbtw
push
mov
cmp
jns
mov
push
sbb
adc
imul
fisubrl
push
rclb
xlat
dec
xor
cmc
sub
xchg
cmc
dec
push
adc
mov
test
push
repz
cmp
ds
mov
mov
arpl
pusha
add
mov
push
and
push
stc
imul
ja
stos
pop
fstl
lock
rorl
cmc
xchg
cmp
cwtl
inc
cmp
jnp
stos
out
xor
into
cmp
lret
pop
pop
cmp
adc
bound
sti
xchg
and
jo
mov
adc
push
out
cmc
dec
push
mov
mov
inc
aad
pop
pop
cmc
fwait
in
loope
or
into
aad
sahf
jecxz
mov
sub
pop
addr16
lods
je
decl
fs
jne
sbb
ljmp
push
divb
xchg
out
adc
or
lret
in
insl
lret
xchg
ret
adc
add
sub
clc
les
fwait
lods
loope
mov
cwtl
shrl
jns
lods
repnz
in
cld
pop
sahf
ja
mov
cmpsb
mov
popa
rol
xorl
inc
ret
mov
pusha
shl
xor
fadds
mov
ldmxcsr
cmp
pop
mov
mov
or
sbb
popf
pop
sub
jp
fisubl
jne
or
cmp
jle
mov
insb
loope
dec
sbb
into
in
cmpsl
ljmp
cmp
adc
cld
repz
fs
mov
lds
mov
imul
dec
aas
fs
icebp
pop
xchg
loopne
repnz
js
enter
and
cli
fimuls
scas
mov
lret
jbe
ds
mov
imul
dec
pop
adc
mov
pop
adc
pop
cli
pop
js
fs
push
xchg
call
outsl
movsb
daa
imul
std
cmp
dec
adc
pop
fiadds
in
les
lds
mov
mov
xchg
add
fdivl
loope
or
mov
cmpsb
adc
mull
nop
andb
sarl
sub
sub
inc
mov
push
xchg
lret
push
inc
inc
scas
mov
popf
loope
inc
lea
cli
out
shrb
xchg
lcall
push
int3
or
jmp
shl
inc
inc
and
or
jg
push
push
lds
mov
ret
add
insb
fcmovu
out
sub
or
mov
xor
inc
or
sbb
cld
mov
aaa
mov
jae
mov
or
fisubl
pop
pop
es
fsubrp
arpl
add
lea
icebp
nop
pop
mov
enter
pushf
into
pop
stos
add
add
push
jle
lret
mov
leave
fcmovne
mulb
cmp
insb
aaa
jbe
shrb
xorb
aad
mov
pushl
cmp
ret
xchg
and
or
test
jno
leave
adc
mov
mov
push
shlb
cltd
jnp
xchg
dec
js
xchg
icebp
in
mov
iret
mov
push
lock
pushf
lcall
mov
xchg
jp
arpl
lods
jle
xchg
call
mov
cmpsb
jnp
xchg
jg
mov
sub
pop
js
or
test
shl
add
sub
sub
loop
xchg
popf
or
out
jg
shlb
fstl
xor
pop
clc
mov
lret
jg
xchg
jmp
xchg
jmp
mov
int3
test
repz
xchg
je
adc
mov
mov
imul
pop
jbe
lock
hlt
dec
shrl
ljmp
inc
or
test
lock
leave
push
loopne
shll
aaa
pop
stos
jb
ret
lahf
dec
or
repz
fldcw
fisttps
rolb
push
xor
inc
enter
jne
loope
and
mov
outsl
jne
push
and
xor
daa
fwait
int
lret
repz
cmpb
data16
cmp
cmc
xor
sub
mov
stc
mov
sub
cmpsl
je
scas
jmp
hlt
mov
or
mov
cltd
mov
inc
cli
dec
jbe
mov
dec
cwtl
mov
mov
outsb
inc
out
jae
adc
pop
sarl
fnstcw
xchg
push
movsb
and
les
mov
mov
cld
lds
pop
sbb
shll
iret
in
add
cmp
cmp
dec
push
push
ficoms
popf
clc
sbb
lock
fwait
dec
dec
rclb
and
xor
orl
jno
jecxz
sbb
scas
std
xor
addl
jle
jle
leave
xchg
sbb
xor
dec
xchg
xchg
or
and
push
jo
add
inc
push
sbb
jb
inc
xor
and
or
loopne
pushf
repnz
pop
sub
push
dec
xchg
mov
push
leave
pop
mov
call
sbb
jno
movsb
mov
insb
pushf
or
cmp
cmpsb
sub
push
cld
clc
jl
cmp
and
adc
and
and
or
fldl
orb
xor
and
outsb
mov
jge
jo
stos
jmp
pop
inc
inc
xchg
imul
push
dec
xchg
lahf
cwtl
inc
mov
lret
negl
gs
cmpsb
push
loope
xor
cmp
xchg
js
dec
xor
jle
or
hlt
inc
clc
push
gs
sbb
in
pop
jmp
pop
dec
and
dec
sbb
fldenv
dec
ror
test
jecxz
cmp
mov
fistpl
test
jge
jp
mov
ss
in
sub
push
lret
imul
pop
mov
test
sub
in
pop
add
call
mov
or
dec
jns
mov
cli
and
mov
inc
xchg
stos
into
mov
repnz
sbb
loopne
jae
ret
popa
cwtl
es
xchg
orb
ds
fwait
cmc
add
cmp
xchg
subl
imul
mov
mul
and
repnz
sbb
fincstp
sbb
mov
dec
out
pop
mov
cmpsl
lret
imul
ss
mov
test
aad
or
nop
add
cmpsl
fwait
jg
xchg
sbb
in
jmp
in
cli
addr16
test
xor
xor
mov
cltd
jne
mov
inc
inc
in
add
pop
gs
out
jne
push
test
mov
pop
aam
inc
dec
call
fcmovbe
and
inc
sbb
test
cld
inc
out
adc
inc
movsl
mov
xchg
aaa
push
mov
insb
fisttpll
adc
es
sbb
mov
loop
mov
push
pop
lods
mov
pop
addr16
les
push
adc
xor
xchg
sub
adc
movsb
or
jb
fwait
xchg
cmp
mov
sub
outsl
mov
cmp
mov
sub
ss
xchg
xchg
inc
cmp
shlb
and
pop
repnz
push
ljmp
fdivp
cmc
xor
xchg
mov
in
jg
repnz
aas
test
out
mov
lret
movsl
bnd
mov
fwait
shl
mov
dec
bound
lcall
cltd
adc
out
movb
push
and
popa
or
sbb
in
lcall
jne
jp
ja
iret
and
xchg
ss
cmp
inc
xchg
xchg
cmp
push
gs
push
lods
push
pop
enter
dec
jno
fisubrs
es
push
out
mov
add
mov
fadds
stc
in
fnstsw
mov
fadd
dec
or
in
push
insb
sub
and
cmp
sbb
mov
icebp
js
pushf
mov
lret
mov
mov
je
bound
fstl
sub
mov
xor
sbb
cmp
sbb
push
cmp
dec
and
xchg
das
cs
inc
dec
je
jbe
inc
cwtl
stos
sti
pusha
mov
ljmp
dec
sub
or
sub
push
dec
xor
lret
stc
in
mov
xchg
leave
sbb
test
jae
imul
test
push
fisubrs
out
or
push
std
lds
mov
arpl
and
jns
pop
lcall
divl
jns
sbb
test
sub
and
xchg
pop
pop
xchg
mov
fbld
and
mov
adc
fldenv
mov
ret
add
repnz
or
dec
outsb
outsl
xor
js
push
nop
inc
pop
xor
imul
adc
outsb
jecxz
sub
cs
lds
es
ja
mov
icebp
push
lahf
enter
hlt
inc
mov
xchg
fsts
mov
fdivs
or
xchg
sbb
ja
jge
add
pushf
mov
popf
shll
add
lock
mov
xlat
leave
dec
or
shll
fistl
scas
mov
out
outsl
scas
je
mov
lods
jae
mov
inc
cmp
sub
loopne
mov
leave
or
mov
mul
push
mov
or
andl
and
dec
jle
and
pop
fbld
mov
pmulhuw
loope
pop
icebp
xor
stc
jg
push
dec
mov
lret
mov
sbb
pop
das
fnop
repz
cmc
push
das
cmp
mov
aaa
xorl
or
pop
sbb
pop
cmpsb
jns
insb
sub
xor
enter
test
test
adc
sbb
loopne
mov
mov
int
jp
jne
fistpl
lock
js
popf
cmp
arpl
in
dec
pop
xchg
xchg
dec
cmp
inc
xor
inc
and
add
popf
xchg
xchg
mov
cmpsb
and
addr16
shll
pop
cmp
lods
mov
push
xchg
or
and
div
sbb
pop
mov
mov
jbe
test
fsub
cmp
mov
in
popf
xorl
inc
mov
fs
js
popa
dec
jns
xor
adc
cmp
jge
xor
sub
xchg
mov
pop
sub
sahf
inc
ljmp
pop
mov
sarb
dec
mov
jmp
in
int3
pop
sub
adc
clc
push
call
rcrb
mov
push
fmuls
lods
fnstenv
fnstsw
imul
cltd
hlt
cmp
pop
jnp
repz
xor
xchg
repz
pop
push
les
repnz
stos
inc
loop
clc
mov
rcll
out
add
loop
std
xchg
loopne
lods
adc
cmp
pop
xchg
sub
mov
pop
inc
mov
pop
jp
cmc
scas
dec
pop
loope
mov
rolb
int3
xchg
aam
pop
inc
sarl
adc
scas
das
pop
dec
adcb
into
mov
nop
outsb
inc
push
in
mov
sbb
jg
rcl
or
add
subl
mov
xchg
mov
loop
mov
mov
mov
mov
aam
adc
testl
bound
pop
cmp
xor
call
push
popa
movsb
pop
sbb
cmp
out
fs
das
sbb
data16
enter
mov
jo
mov
mov
xchg
add
sub
rol
add
pop
mov
mov
subl
or
fsts
cmp
arpl
iret
cmp
addl
inc
sbb
call
sarb
pushf
aad
imul
shll
jl
mov
out
add
loopne
sub
jo
push
cmpl
fwait
adc
ret
imul
xor
addb
add
jge
popa
mov
mov
adc
cli
inc
sbb
sub
fcompl
cmp
popa
insl
leave
cmp
xor
push
adc
pushf
push
sbb
mov
cmp
into
adc
imul
daa
xor
mov
jle
pop
cli
sub
pop
sub
pop
sbb
adc
test
sbb
push
add
push
in
jbe
cmp
leave
or
ja
rclb
pop
mov
cld
loopne
jb
adcb
out
int
lret
pusha
insb
loop
push
out
jo
data16
push
xor
repz
fidivrl
cmp
jl
jmp
mov
inc
into
inc
nop
push
cmpsb
and
jo
imul
dec
xchg
cmpsl
mov
fdivs
sti
dec
lock
imul
stc
dec
pop
sbb
jo
lahf
mov
lds
xchg
push
inc
aaa
lahf
adc
repz
mov
or
out
mov
xchg
ljmp
outsb
or
dec
pop
sub
adc
leave
std
jns
ror
xchg
dec
inc
inc
jns
es
cmc
lahf
mov
mov
jp
sub
popf
lcall
loop
jmp
sub
and
js
femms
jo
jmp
fiaddl
into
daa
sbb
mov
outsb
jg
in
mov
xorl
mov
mov
sahf
scas
dec
into
insb
jmp
in
lret
push
loope
push
and
adc
fmull
shl
scas
ret
and
les
xor
xchg
stc
in
imul
inc
enter
movl
gs
rcrl
nop
adc
jl
mov
sbb
and
inc
push
push
loopne
test
push
push
lods
fwait
call
std
stc
inc
or
dec
cmc
sbb
jno
stos
adc
lods
js
add
repz
push
push
push
adc
or
sub
rcll
push
mov
mov
out
pop
test
xlat
loop
lcall
push
dec
push
or
xbegin
add
stc
in
insl
inc
fdivrs
inc
outsl
movsl
sbb
mov
mov
enter
jb
or
jne
je
call
loope
cmpsb
rolb
sub
mov
dec
or
sub
pop
sub
fstpl
addr16
push
inc
movsb
jno
popa
xor
sahf
lret
pop
add
ret
fnstsw
or
mov
mov
stos
lahf
jbe
pop
mov
or
cmpsb
imul
icebp
xchg
mov
mov
addr16
clc
mov
lret
push
and
sbb
enter
imul
insb
lock
sub
and
or
leave
push
and
aad
cmpb
je
sbb
jne
test
or
sub
ljmp
sbb
jb
jne
ss
arpl
mov
mov
adc
fisttps
mov
push
shlb
pop
into
xchg
jmp
jnp
ljmp
out
jne
cmp
sub
es
mov
mov
je
sahf
xor
movsb
dec
dec
mov
add
sahf
and
jmp
xchg
jmp
sub
mov
jl
gs
fadds
mov
add
jmp
inc
pop
cmp
into
shll
daa
push
loop
test
mov
jle
outsb
movsb
or
cli
out
mov
adc
jge
jecxz
int3
nop
add
jp
and
lea
cmp
xchg
jmp
repnz
mov
ljmp
add
or
aam
push
stos
iret
xchg
in
mov
sbb
icebp
lds
daa
out
lods
idivb
aaa
das
pop
stc
fadds
inc
repnz
fstl
dec
dec
mov
nop
das
mov
pop
sysexit
pop
shr
pop
jnp
mov
mov
pop
sub
outsb
pop
sub
sbb
dec
cs
sbb
mov
adc
mov
pop
push
sub
and
lret
js
xchg
mov
push
push
js
and
movsb
sub
sti
xor
lret
mov
sub
pop
orb
mov
popa
pop
sbb
jp
mov
pop
scas
mov
rorb
fstpl
fisubs
jno
mov
les
sarb
imul
ja
out
dec
lods
jl
idiv
decb
push
xor
cmpsb
dec
mov
outsl
test
dec
int3
arpl
pop
aaa
mov
push
lock
mov
loope
test
mov
mov
scas
mov
add
mov
cwtl
pop
filds
std
in
jae
xchg
push
sahf
leave
fdivl
lcall
loope
inc
daa
stos
mov
xchg
imulb
scas
aam
mov
xchg
push
sbb
pop
sub
sub
out
mov
jb
pop
sahf
jbe
mov
sub
xchg
add
or
sub
mov
loope
fcomi
pop
fwait
clc
jmp
xor
subb
mov
aam
pusha
xchg
shrd
iret
xchg
push
ficompl
adc
xchg
cmpsb
mov
inc
scas
insb
fst
mov
scas
adcb
add
jbe
cmp
push
pop
dec
popa
pusha
jp
or
xlat
addr16
lock
inc
mov
sub
repnz
xchg
mov
je
pop
cld
add
out
mov
sbb
ja
sbb
mov
arpl
adc
mov
xchg
jl
ja
sub
mov
pop
jle
cli
divb
pop
call
fisttpl
sub
or
dec
inc
xlat
int3
sbb
adc
cwtl
jl
pop
fchs
lcall
and
pusha
jb
adcl
fimuls
and
pop
imul
adcl
adc
fisubrl
and
mov
or
clc
add
mov
adc
fs
xor
sbbl
dec
lock
daa
adc
in
in
aam
jbe
lock
out
fldcw
fbstp
je
mov
jns
popa
rorl
cmp
out
clc
stos
out
adc
jbe
pop
out
mov
roll
add
stos
scas
cmp
rcll
push
mulps
pop
push
cmp
sbb
push
imul
ja
scas
sar
mov
sub
imul
jnp
and
or
sbb
jbe
out
jmp
adc
js
mov
movsb
mov
xor
cmp
cmpsl
mov
mov
or
mov
insl
jle
sub
sub
es
inc
fwait
call
cmpsl
sbb
in
xchg
pop
fildl
lods
sub
inc
lahf
les
sbb
loop
mov
aad
je
xlat
dec
sbb
stos
dec
js
out
dec
movsl
sub
mov
ds
xchg
jns
ror
mov
fisubl
adc
push
push
add
mov
ds
mov
xchg
and
test
jge
ret
cmp
es
xlat
dec
xchg
loopne
rcl
loopne
mov
inc
add
int3
sbb
xchg
sarb
fdivs
int3
fucomip
in
mov
int3
mov
sahf
mov
test
cmp
mov
jae
or
add
mov
mov
repnz
add
mov
repz
mov
nop
add
jb
sub
ffree
leave
ds
aaa
mov
sti
lock
xor
mov
outsb
jo
jbe
push
adc
add
out
pop
test
add
cmp
push
daa
popf
adc
inc
inc
insb
popf
push
addr16
aam
push
push
gs
neg
sbb
xchg
movsl
outsb
push
sbb
scas
out
pop
dec
adc
loope
fisubrs
add
add
imul
adc
adc
out
pop
enter
fnstenv
scas
dec
jl
cmp
jne
or
sub
pop
testb
and
ret
inc
cs
lock
add
mov
sbb
sub
push
in
or
jnp
lret
sub
push
adc
imul
enter
xor
add
ja
cmp
or
or
pop
aaa
cmp
push
or
idivb
cltd
pop
in
dec
mov
cmp
add
mov
xlat
stos
test
mov
ss
out
nop
sbb
hlt
jbe,pn
test
clc
adc
push
mov
mov
scas
adc
stos
out
ja
lahf
or
and
or
das
dec
gs
push
jno
movsl
push
icebp
push
imul
mov
mov
in
int3
rcrl
daa
mov
and
inc
or
jp
mov
push
or
push
repnz
sub
gs
les
pop
fsin
in
mov
add
mov
call
cmp
cmp
sub
mov
fidivl
adc
cmp
ja,pn
push
jge
pop
outsb
fisubrl
fldt
mov
mov
mov
imul
mov
mov
mov
je
mov
data16
in
ficoms
adcb
dec
sbb
sti
mov
sub
mov
aaa
add
and
lret
aad
insl
pop
stos
xor
aad
cmp
mov
scas
lret
xchg
repz
and
ds
data16
jg
inc
pushf
adc
jae
xlat
inc
and
imulb
fadds
mul
outsl
mov
outsb
dec
adc
mov
or
and
movsl
xchg
mov
adc
mov
xor
mov
fildl
aad
stc
pop
inc
test
lods
push
std
pop
subl
sti
cmpsl
fld
xchg
lahf
int3
or
lret
pop
ja
jg
orb
cmp
mov
mov
xchg
jl
and
out
push
lea
cmp
mov
mov
jp
mov
pop
lods
clc
jns
mov
insb
in
or
and
inc
iret
ret
aad
add
fisubrl
stos
fdivrl
and
cmp
mov
das
and
push
xchg
in
mov
stos
cmp
dec
push
fisubrl
and
orb
mov
and
pop
xchg
push
popf
loope
add
into
stc
in
sub
outsb
in
sbb
mov
inc
jmp
sahf
pop
dec
mov
imul
push
scas
xor
arpl
adc
lods
fldenv
sbb
mov
dec
in
je
pop
sarl
nop
in
enter
jmp
mov
xor
xchg
scas
xchg
jns
mov
nop
push
addr16
sub
fnstenv
out
out
lret
insl
xor
aam
inc
sbb
fldt
fwait
push
lcall
gs
push
jl
comiss
mov
cmpb
or
gs
cmp
mov
push
sbb
inc
inc
sub
pop
jmp
sbb
daa
roll
enter
xchg
push
jb
add
and
sbb
cmpsl
icebp
dec
push
or
test
dec
fldt
imul
aad
lock
jmp
frstor
mov
pop
mov
cmp
xchg
scas
mov
out
addb
insb
ds
fcmovne
mov
sub
mov
add
into
lahf
cmpsl
mov
or
fsubrl
push
popf
adc
jle
mov
sar
out
jle
add
xchg
cmpl
or
notb
ss
jecxz
aaa
jl
and
lcall
neg
bound
je
dec
inc
icebp
jg
loop
push
or
dec
dec
gs
int
out
enter
pop
fdivrl
jge
xchg
cmp
push
sub
fwait
mov
cltd
pop
je
sbb
jno
mov
scas
mov
data16
pop
mov
in
xor
je
rorb
jg
ds
popa
mov
add
xorb
imul
int3
mov
mov
lret
bound
jb
sbb
mov
std
pop
adcb
mov
xchg
xor
fs
mov
mov
enter
xor
popa
mov
ret
out
pusha
adc
dec
shl
clc
in
enter
pop
rclb
dec
and
mov
scas
sbb
jne
popa
cmpsl
lahf
add
push
push
insl
in
xor
scas
dec
pusha
jb
dec
cmp
das
mov
mov
mov
push
cmp
adc
sbb
cld
mov
lcall
stos
lahf
stos
pop
xchg
adc
jl
es
sub
leave
jo
imul
jp
and
mov
sbb
ljmp
add
lods
sbb
sub
pusha
xchg
add
xchg
fcomp
mov
into
in
aam
dec
xor
mov
imul
aaa
mov
dec
mov
shl
mov
mov
jle
ljmp
js
loop
and
or
gs
loope
push
cmc
out
mov
enter
mov
mov
icebp
sti
mov
aad
hlt
pop
sarl
insl
fdivs
mov
push
lcall
dec
and
outsb
mov
dec
outsb
int3
test
ss
cmp
mov
fcmovb
stos
cmp
into
popf
negb
xchg
cwtl
or
xchg
loopne
mov
stos
xchg
rorl
jmp
mov
xchg
cmp
imul
frstor
cmp
flds
lahf
jge
ret
pusha
sbb
dec
sbb
dec
cmpb
das
popa
mov
mov
cmp
shrb
imul
jg
pushf
idiv
add
adc
push
testl
out
test
pop
xor
push
inc
and
pop
sbb
mov
mov
jmp
dec
mov
int3
sbb
mov
nop
push
mov
lret
out
loope
fistpl
and
clc
pop
push
lds
pop
jmp
sahf
xor
dec
or
jl
jnp
or
mov
and
pop
lahf
lret
imul
pop
jnp
xchg
mov
pop
add
leave
leave
sub
or
push
mov
push
and
addl
mov
push
and
inc
cwtl
mov
jno
or
push
and
test
test
jae
cmp
fstl
sarb
fs
xchg
lret
or
sub
or
inc
loope
inc
ret
dec
mov
lcall
int
mov
and
xchg
iret
loop
pop
jbe
lods
jmp
dec
in
fstp
js
test
test
and
lods
hlt
and
bound
pop
aad
das
dec
add
pop
sarl
pop
fidivs
cmpsb
arpl
aas
mov
or
imul
or
inc
jg
scas
insl
push
ja
mov
imul
mov
lods
jae
sbb
mov
or
int
sbb
push
dec
cltd
lods
pushf
jns
mov
gs
mov
mov
mov
faddp
shr
add
std
int
aam
fiaddl
mov
dec
or
lcall
aad
pop
xchg
mov
xchg
mov
out
adc
stc
aad
mov
mov
call
test
mov
push
push
xor
push
jmp
add
pop
insb
or
mov
dec
div
das
sub
lcall
jb
mov
and
dec
sbb
into
xchg
insl
repnz
mov
add
int
lret
js
xor
adc
dec
push
dec
ljmp
iret
pop
addb
xchg
push
clc
test
cmc
js
sar
jmp
and
jns
add
dec
cld
test
mov
xchg
mov
mov
jge
sub
sbb
jno
lods
ds
mov
cmp
push
je
test
xchg
cltd
imul
dec
mov
cmc
shl
lcall
ret
inc
iret
xchg
aas
and
lret
stos
xor
xchg
mov
into
aas
jbe
andb
push
iret
pop
pusha
pop
mov
andl
mov
icebp
cmp
leave
mov
ret
js
out
lret
into
adc
subl
xor
adc
mov
addr16
in
scas
xor
or
pop
push
dec
test
adc
sub
mov
xor
in
jae
push
lahf
xor
lods
jae
hlt
sub
movsb
mov
inc
loop
dec
movsb
xchg
fldt
in
loop
cmp
dec
adc
lret
sti
adc
fisubrs
out
xchg
mov
lods
push
push
and
and
push
dec
or
xchg
mov
lahf
data16
icebp
fs
insb
sbb
sbb
lea
popf
push
jge
jmp
cmovl
sbb
daa
jnp
int3
push
sahf
aam
pop
xor
mov
rolb
push
fwait
movsl
lods
in
lahf
xor
lock
mov
sbb
js
movsl
mov
inc
ret
fdivr
xchg
or
mov
xchg
or
stos
lods
push
add
add
imul
jmp
pandn
xor
xchg
jg
gs
mov
call
or
pop
push
mov
inc
test
xor
add
sub
pop
adc
out
and
sub
dec
xchg
lahf
jl
ret
mov
xor
hlt
pop
xlat
jmp
stc
jg
and
lock
adc
xor
add
cmc
test
adc
xor
movsb
xchg
popf
adc
pop
cmpsl
in
mov
cmp
scas
aas
pop
sbb
fld
mov
iret
cmp
test
mov
mov
int
stos
and
out
push
xlat
fwait
cmp
les
mov
cmp
cmc
loope
push
add
punpcklbw
mov
xchg
add
mov
lds
adc
xchg
pop
sahf
lcall
adc
aam
gs
mov
cltd
adc
dec
decb
adc
and
pop
xchg
loope
cmp
jnp
negb
in
push
test
cmpb
xor
ret
out
mov
je
mov
xchg
mov
addl
cli
jg
jle
jge
jo
cmpb
aaa
cmp
popa
lcall
cld
imul
push
in
inc
gs
dec
xchg
add
stos
add
jp
inc
incb
mov
mov
ljmp
ret
mov
ds
sar
cli
pop
push
out
jno
mov
fwait
mov
mov
push
pusha
mov
cmp
test
icebp
xchg
movsb
in
and
push
fdivl
sbbl
lahf
iret
movd
lods
or
cli
leave
sbb
sbb
dec
mov
stc
fwait
add
xor
js
jmp
ret
pusha
dec
dec
sbb
jg
rep
scas
jmp
or
fstpt
push
icebp
stc
mov
xor
and
loopne
jae
insb
or
push
sub
xchg
mov
sbb
or
stos
sbb
cmpsb
fstpt
jmp
in
pop
inc
fdivrs
add
mov
mov
cli
push
into
lock
imulb
jmp
adcb
mov
sbb
les
std
imul
lds
inc
in
cld
iret
popa
repnz
xchg
or
pop
mov
into
test
xchg
mov
leave
jecxz
out
jge
xor
lret
fwait
lds
adc
sub
jg
xor
or
outsb
push
mov
add
jb
clc
repnz
int3
cmp
dec
jp
cli
push
fsubl
xor
sbb
dec
mov
push
or
push
cmp
push
int3
mov
es
je
xchg
cmp
mov
or
mov
int
jno
pop
xor
shl
aam
sub
pop
add
in
mov
push
xchg
jns
dec
xor
pop
push
and
notb
out
cmp
xor
lcall
sarl
gs
jge
mov
push
push
mov
int
fwait
cmc
sbb
ja
adc
or
adc
ret
cmpsl
gs
cmp
adc
inc
jne
pop
inc
jb
mov
outsl
xchg
push
push
std
and
imul
fs
inc
jo
cltd
cmp
mov
cld
push
xor
sbb
mov
aas
call
aas
int3
dec
mov
adc
loope
sub
mov
cld
adc
loope
dec
in
cli
jo
push
dec
xchg
in
pop
rclb
dec
pop
psubsw
ljmp
sbb
adc
mov
jg
ret
cltd
sub
fstl
lods
add
std
dec
mov
cmpsl
das
test
mov
jl
stc
mov
sub
sub
mov
xor
push
mov
pop
loope
mov
int
psllq
push
les
jp
lock
inc
add
push
mov
mov
ret
cmp
popa
andb
ja
xchg
flds
adc
pushf
or
cli
sub
xchg
test
or
dec
cltd
cltd
imul
xorb
scas
das
into
lahf
stos
imul
sub
mov
das
mov
pushf
ljmp
ljmp
cmp
out
jns
push
sbb
and
push
pop
add
adc
cmp
testb
inc
sbb
or
xchg
mov
sbb
pop
jl
adc
rol
xor
aaa
repz
mov
cmp
lret
sub
push
je
xchg
test
add
jno
sbb
jns
cwtl
ret
mov
inc
dec
dec
ret
ficomps
sbb
xchg
ja
xchg
xor
xor
push
sub
push
loopne
xchg
scas
data16
in
test
mov
push
pop
xchg
push
fistl
pusha
filds
or
ds
repz
ret
adc
cs
dec
dec
xor
frndint
xor
movsb
mov
fsubrs
repz
mov
aad
push
movsb
mov
mov
jge
sub
inc
xor
ret
pop
mov
sbb
aad
leave
push
mov
mov
jno
pop
and
xor
aad
xorb
inc
mov
ds
cli
push
mov
aas
pop
aad
inc
cmp
lock
imul
ja
nop
dec
adc
roll
or
cmp
rclb
cwtl
inc
cwtl
cmpb
loop
ret
pop
push
ror
dec
sub
out
les
adc
push
sahf
push
out
jp
mov
pop
add
add
inc
mov
roll
sub
into
lret
sbb
pop
fsubrl
pop
push
push
movsb
adc
push
xor
cmp
or
xchg
dec
xlat
out
mov
mov
outsl
addr16
and
pop
xchg
cli
cwtl
subl
add
adc
sbb
mov
out
adc
dec
testl
pop
jg
fsubrs
stc
xor
mov
repz
ljmp
mov
out
cmp
bound
push
test
adc
sub
imul
push
xor
shrl
jnp
add
andb
negl
jo
mov
aaa
push
pop
in
push
aaa
push
mov
scas
ja
and
jo
sub
and
push
stos
loopne
popf
test
pop
add
xchg
das
cmp
xor
sti
mov
xchg
fistps
lret
mov
fs
jnp,pn
hlt
mov
test
inc
fstl
inc
iret
test
cmp
mov
imul
int
fisubrs
leave
aad
test
jo
mov
mov
iret
inc
mov
sti
push
jmp
inc
test
sub
add
das
imul
sahf
or
flds
mov
scas
fstpl
ret
jle
loope
lcall
jne
pushf
js
pushl
inc
mov
in
inc
or
push
adc
dec
and
je
jbe
cli
dec
pop
test
rcrl
mov
xlat
in
repz
push
cmpsl
mov
mov
into
xor
in
xchg
movsb
test
mov
xchg
add
push
testl
pop
jnp
iret
sub
popl
mull
jp
fwait
sub
lret
out
adc
fiadds
jp
ljmp
dec
or
dec
fdivrp
incb
jb
xchg
out
in
loopne
das
fiadds
mov
enter
icebp
movsl
push
int
xchg
jns
popa
cmp
repnz
adc
cld
stos
jns
sub
inc
arpl
push
jae
cwtl
mov
sub
mov
scas
push
inc
test
ret
pop
andb
add
jecxz
cmp
mov
sbb
pushf
jge
push
mov
xor
fcoml
repz
hlt
cwtl
push
std
sbb
dec
mov
int
fistpll
mov
ret
cmp
jbe
js
dec
or
pop
sbb
test
movl
jbe
arpl
test
inc
fbld
ficoms
dec
adc
sahf
jno
pop
mov
loopne
pusha
jne
cmc
scas
mov
xchg
mov
xchg
cmp
std
sti
push
inc
int
out
jae
xchg
ja
sub
daa
repz
shr
push
fcoml
jno
xchg
sti
sub
pop
aas
je
icebp
outsb
lahf
inc
shll
xor
jmp
fisubrs
mov
test
adc
mov
xlat
ss
or
cltd
das
cmp
repnz
jne
insb
dec
fnstsw
pop
and
sub
in
push
sahf
sbb
lock
repz
sbb
mov
insl
dec
push
push
pop
cmp
mov
or
push
test
lock
fstpl
in
xlat
enter
inc
dec
xchg
xchg
test
lods
outsb
test
in
or
and
mov
xchg
into
rolb
xchg
mov
and
dec
mov
out
and
push
dec
push
xchg
jno
and
and
sub
test
inc
inc
mov
and
in
inc
lds
dec
dec
xchg
dec
add
mov
and
cltd
ret
jo
push
jb
mov
mov
mov
inc
orl
scas
xor
sub
arpl
or
imul
enter
cmpsb
sbb
aad
loope
rcr
fiaddl
ret
adc
addr16
pop
outsl
dec
repz
xchg
xor
out
rorb
jns
cmc
movsl
sarb
out
mov
js
mov
add
and
insl
pop
dec
and
mov
out
shlb
inc
jne
jg
fiaddl
dec
cmp
mov
rcrl
mov
fstpt
mov
add
mov
gs
gs
xchg
xchg
pop
cmp
sbb
push
in
sbb
cld
xor
test
jg
cld
or
adc
addr16
pop
orb
mov
sub
rcr
sub
fdivs
test
cmp
enter
sub
in
inc
ret
mov
repnz
xchg
and
lret
mov
lret
loopne
sbb
sarb
pop
jge
scas
outsl
out
gs
mov
dec
mov
mov
jl
out
scas
and
cmp
movsb
pop
imul
loopne
dec
clc
lahf
or
mull
ret
jo
mov
cmpsb
mov
shll
jb
mov
cmp
mov
sub
in
cmpl
sbb
or
jp
test
jmp
push
pop
xor
addb
hlt
pop
mov
xchg
shr
js
inc
lods
push
and
aam
xchg
push
mov
stos
lret
dec
lcall
xor
mov
xchg
cmp
inc
inc
dec
imul
xchg
jno
iret
lret
dec
push
outsb
sbb
notb
mov
cwtl
sti
ret
cmp
cld
pop
sub
pop
sbb
sbb
add
pushl
and
jl
or
xchg
push
clc
mov
xchg
and
sbb
xchg
xchg
mov
adc
shlb
push
xchg
inc
int3
mov
inc
xchg
repnz
fwait
test
dec
ret
mov
sbb
adc
icebp
rcll
adc
sbb
xlat
cmp
iret
push
lcall
xchg
jne
ret
jae
lcall
fisubrs
mov
repnz
mov
xchg
xor
lods
imul
cmp
rol
xor
mov
sub
call
dec
fcmovnu
jo
sti
add
mov
mov
sbb
inc
lret
outsb
out
idivl
xor
cmpsl
repz
dec
jmp
out
sub
xchg
add
push
xchg
jmp
mov
mov
or
in
and
test
jmp
mov
lods
std
daa
sbb
jp
jno
lahf
mov
and
mov
out
xchg
sub
addl
jae
clc
out
or
scas
fcoml
repnz
mov
push
cmp
gs
push
pop
push
push
xor
es
mov
push
mov
lea
pop
xchg
mov
or
push
pop
repnz
out
mov
pop
mov
cwtl
push
push
sbb
insl
jle
in
jbe
shrl
jl
aad
shl
push
jo
push
sub
scas
pop
cli
movsl
push
inc
add
or
cmp
adc
imul
stc
sti
pushf
cwtl
or
ret
cmp
insb
movsl
inc
mov
dec
lock
ja
jge
sub
dec
push
add
int3
iret
jmp
je
pop
dec
cmp
pop
mov
lods
xor
cmp
mov
or
jb
pop
inc
bound
popf
dec
int3
iret
cmp
mov
xchg
shll
outsb
and
push
dec
ret
pop
inc
fistpl
les
xchg
and
cmp
fstpt
adc
push
fwait
mov
inc
repz
cmp
mov
popf
push
clc
mov
call
test
mov
lea
fwait
enter
jns
sbb
outsl
inc
and
ror
mov
ds
xor
movsl
out
and
inc
xchg
rcr
sbb
cli
out
fwait
or
orb
mov
pop
mov
inc
loop
les
in
xor
dec
cli
sbb
out
fs
loope
xchg
fbstp
outsb
dec
push
mov
and
or
mov
dec
lahf
cmpsb
pop
push
pop
mov
push
std
mov
hlt
test
mov
sarb
cmc
mov
cmp
mov
or
sti
enter
push
pusha
fstpl
adc
push
sub
outsl
ljmp
mov
idivb
loope
dec
outsl
pop
dec
or
jbe
dec
orl
shrb
andb
call
hlt
iret
imull
int
add
aas
enter
cltd
sahf
or
hlt
mov
and
daa
pop
jne
push
inc
dec
push
add
stos
jnp
ret
enter
inc
jl
daa
ds
and
mov
jle
fdivrp
mov
mov
mov
xor
clc
ds
call
add
adc
ja
mov
xor
test
jnp
or
sub
pop
mov
mul
xlat
cld
jmp
setae
xorl
popa
mov
iret
stos
adc
inc
shlb
jle,pn
sti
mov
mov
or
inc
call
mov
cmpsb
aas
pushf
les
fstpt
fsubrp
mov
cmc
in
add
aas
imul
adc
ljmp
inc
lods
mov
adc
add
bound
pop
pop
cld
cmc
sub
in
xchg
test
pop
xor
pop
lock
sub
adc
inc
fnsave
pop
clc
jb
movl
int3
mov
mov
xchg
and
jle
insl
rcll
mov
sub
lods
xchg
and
dec
iretw
imul
mov
cmp
push
jge
add
sub
mov
push
test
mov
xchg
add
pop
jo
ss
cmp
arpl
gs
dec
push
movsl
lock
stos
mov
mov
ret
ret
sbb
jne
jmp
and
js
popa
pop
rcl
into
gs
cmpb
cwtl
lea
jae
insb
outsl
sbb
jno
cmp
mov
shl
lds
subl
das
sub
lea
push
call
jnp
xchg
int
rcll
push
jg
jl
subl
pop
sbb
inc
jecxz
xchg
ja
jle
and
sbb
js
add
lock
pop
adc
and
frstor
xor
nop
push
imul
stos
mov
ret
inc
nop
fisubrl
int3
xorb
ja
or
add
pop
add
mov
and
adc
adc
pop
jae
pop
lock
orb
out
fimull
bound
fisubrs
shlb
push
add
ja
inc
lock
aaa
jnp
xor
sub
addr16
ss
lcall
cli
ljmp
ds
and
push
cmp
outsl
push
js
jl
fisubs
ret
popf
jns
sarl
dec
pushf
sahf
shlb
sbb
mov
pop
and
mov
xor
xchg
test
mov
gs
int3
pop
ss
lcall
sahf
mov
cmpl
pop
das
adcb
jmp
mov
jbe
dec
lahf
xor
mov
pop
xor
jo
cmpsb
or
sbbb
repz
inc
mov
cmp
pop
jb
add
fstp
push
leave
xorl
cmpsb
js
fstps
mov
shrb
sub
add
adc
mov
jo
xor
popf
jle
fistps
and
fldl
inc
ljmp
jne
out
ss
int
and
sbb
or
push
gs
gs
adc
lea
popf
xchg
fs
int
mov
mov
mov
mov
cld
loop
testb
add
cmp
cli
mov
ja
xchg
cs
jbe
fucomp
lods
adc
inc
and
fdivrl
cs
lahf
xor
fcoms
pushf
aaa
mov
das
adc
rolb
push
shlb
inc
lcall
les
jnp
pop
inc
test
inc
or
xchg
inc
cmpsb
dec
adc
test
adc
fadds
fadds
cmp
popa
fildll
mov
out
jg
out
rcrb
and
push
cmp
push
push
pushf
shl
mov
inc
xor
ret
sub
aad
arpl
xor
inc
jns
mov
inc
clc
in
out
and
push
popa
or
ffree
int
fwait
and
push
push
cmpsl
push
push
fucomip
or
mov
mov
stc
outsl
cmpsl
dec
jne
sbb
int3
jo
sarb
xchg
std
in
iret
cld
out
je
idiv
call
ja
cmp
dec
inc
mov
lahf
jns
loope
cs
popf
fnstcw
pop
rorb
dec
mov
push
mov
fists
xor
sub
push
fdivrs
test
mov
mov
stos
push
mov
push
shl
loope
adc
xchg
lret
jmp
lds
inc
pushf
inc
stc
fldt
dec
in
xchg
push
fs
mov
repz
adc
daa
mov
hlt
cli
mov
incb
add
dec
mov
xor
pop
mov
and
pop
stc
and
adc
push
jp
fcmovb
cmpl
call
jmp
fsubrl
repz
std
mov
xlat
pusha
aam
sahf
insb
sbb
push
divps
jo
insl
test
sbb
loopne
cmc
cwtl
lods
mov
pop
mov
xchg
sub
dec
int
push
ret
sarl
adc
push
cmp
cmpb
sub
adc
stos
and
cmpb
inc
sbb
mov
push
xlat
mov
sbb
pop
xchg
pop
lods
cwtl
stos
es
fiadds
fs
pushl
sbb
jp
out
jae
pop
mov
in
fidivrs
rorl
adc
dec
xchg
pop
scas
cs
jo
add
sub
mov
jns
add
or
xchg
cmp
xor
adc
pop
sub
lret
js
ret
adc
jp
mov
lret
fists
in
out
push
adc
je
dec
jns
and
mov
push
jmp
xor
pop
cmp
jns
nop
inc
out
mov
jl
pmuludq
lds
adc
inc
cwtl
bound
sub
inc
push
insb
xor
sbb
inc
push
adc
add
cld
cmp
sbb
loopne
in
or
push
inc
push
scas
mov
pop
addr16
xchg
jne
sub
add
jns
add
jecxz
in
notb
dec
jp
xchg
in
cli
js
sub
or
popa
or
mov
add
iret
inc
or
ss
enter
mov
pop
mov
xor
loopne
std
into
nopl
jg
mov
fistpll
mov
nop
leave
inc
in
mov
lret
and
fistpll
sbb
or
add
or
or
dec
cld
push
repnz
mov
xchg
fsubrp
lds
and
das
hlt
push
je
add
jmp
adc
insb
add
repnz
sbb
insb
lods
inc
stos
stos
test
loopne
xor
push
call
or
lfs
and
push
popf
movsb
pushf
and
in
lods
xchg
cld
sahf
pop
fisubrl
out
in
mov
push
mov
adc
psllq
out
pushf
int3
jb
ror
rclb
add
mov
adc
orb
xchg
hlt
popa
sbb
push
out
inc
cmp
lods
jl
insl
lods
mov
in
dec
fadds
cmp
jae
out
mov
jns
sbb
pop
adc
dec
fisttpl
stos
jecxz
sbb
cwtl
nop
jae
pusha
js
roll
jne
inc
adc
dec
aam
jp
out
lcall
inc
loop
pop
stos
imul
pop
pop
inc
ja
icebp
out
cmc
imul
sbbb
jmp
aad
iret
dec
adc
test
jne
push
or
or
mov
sub
addr16
movsl
jae
repnz
pusha
xor
jecxz,pn
mov
add
pop
push
adc
dec
adc
test
push
cmc
adc
cmc
sahf
pop
xor
lds
or
ja
xchg
inc
adc
sahf
int
xor
and
xor
scas
mov
into
shrb
xchg
mov
movl
pop
aad
cltd
cmpsb
stos
nop
lods
push
enter
mov
add
loop
add
push
out
xchg
mov
test
and
sbb
stos
inc
repz
inc
jle
repnz
mov
mov
sub
cmp
cmp
shll
push
jno
cmpsb
cmpsl
dec
mov
in
adc
lahf
fwait
sti
inc
or
mov
cmp
cs
cmp
mov
arpl
pop
out
push
push
add
cmp
pop
mov
bsf
jnp
test
push
sbb
popa
adc
adc
mov
cli
sar
adc
sub
jg
mov
addl
xchg
mov
cmc
out
stos
lea
xchg
push
dec
cmpl
ds
outsl
in
lds
ret
outsl
jne
mov
mov
in
mov
push
mov
jbe,pn
sbb
iret
icebp
shll
xchg
or
lea
adcl
inc
inc
es
into
sahf
push
out
les
fs
subb
fnstcw
and
jge
lret
cmp
test
sub
jp
push
mov
jb
out
das
add
std
cwtl
fists
xor
les
cmpsb
xchg
dec
sbb
repz
mov
mull
sarb
push
repnz
dec
xor
and
or
out
jb
pop
test
cs
and
add
mov
mov
repnz
stc
cmp
pop
fistpll
add
ret
sub
jecxz
std
call
daa
aad
cltd
pusha
lcall
dec
adc
fwait
adc
and
mov
xor
aas
cmp
aas
jb
cmp
pop
aaa
adc
dec
push
xor
pop
inc
jge
int3
and
outsb
and
aam
dec
mov
aam
rcll
ror
or
jmp
mov
stos
mov
cmp
jnp
lock
jp
inc
mov
add
cmp
adc
into
rcr
pop
daa
rcll
lods
cmp
inc
mov
add
es
cmpsb
mov
add
mov
out
mov
test
or
jp
xor
iret
mov
jbe
push
mov
les
cmp
mov
add
xor
notl
sbb
fiaddl
out
cltd
adc
popa
push
xchg
fstps
das
add
mov
jge
jno,pt
mov
fsubs
ja
mov
pop
mov
fwait
dec
and
sub
movsl
mov
fnsave
ds
add
push
imul
lods
mov
inc
call
dec
or
pop
pushf
xor
vmovd
xor
add
mov
bound
dec
mov
sbb
mov
cmp
bound
pushf
cs
je
fdecstp
mov
je
cmc
pop
jecxz
daa
sbb
test
stos
jbe
add
lods
out
clc
push
push
inc
xchg
sbbl
pop
ret
insb
adc
sub
jo
pop
mov
mov
mov
je
inc
flds
jl
pushf
mov
sbb
cltd
cmpsb
fstpt
mov
sbb
mov
das
aas
xor
int
sub
add
pop
movsl
push
pop
imul
push
mov
cs
sub
jmp
imul
adc
idiv
hlt
mov
cmp
stos
push
cmp
fdivl
cli
es
outsb
js
nop
test
sbb
dec
mov
and
fsubr
push
jg
hlt
mov
in
jp
subps
test
andb
push
or
push
xchg
iret
push
add
pop
cmp
in
notb
int3
mov
pop
aad
ja
mov
mov
jbe
adc
inc
je
mov
jl
lahf
mov
jns
push
cmp
xor
jnp
adc
cld
jne
or
int3
jnp
arpl
shr
push
jp
movsb
and
jmp
push
adc
push
outsb
les
aaa
into
gs
pop
jmp
into
mov
mov
adc
sti
jg
xor
hlt
movsl
adc
dec
test
hlt
inc
inc
inc
cmp
int
and
or
fsub
dec
gs
jae
add
std
out
dec
mov
lods
bound
sti
mov
mov
or
push
shl
int
xlat
pop
repz
cwtl
scas
vpcomltq
lods
fdivl
sub
scas
and
ret
mov
pusha
fsub
pop
fdivrs
pushf
mov
lret
ljmp
push
sbb
cmc
stc
int
mov
and
inc
mov
out
jnp
adc
into
xorl
pop
lret
inc
jg
inc
imull
shr
stc
lcall
cmp
pusha
xlat
push
jecxz
dec
sub
fmull
popa
mov
pop
jle
mov
sub
or
dec
jns
dec
jecxz
iret
jb
inc
es
divb
loope
xor
jns
push
repz
mov
pop
test
jbe
arpl
in
xor
out
out
jl
lea
mov
push
or
xchg
mov
pop
jp
push
adc
imul
in
sbb
adc
pop
stc
and
shrb
clc
inc
in
rorl
sub
pop
mov
jmp
or
std
movsb
jmp
loop
pop
push
and
jnp
jp
fsubs
or
fcoml
dec
pop
repz
mov
inc
mov
and
xor
mov
sbb
outsl
add
test
sbb
enter
lock
out
scas
sub
js
push
notl
push
adc
sub
lcall
add
xchg
cmp
dec
lret
ljmp
mov
lock
adc
lret
cli
lock
cmpb
stos
fwait
cmp
xchg
adc
push
cmpsb
or
and
sbb
jbe
ja
sahf
in
add
and
xchg
or
mov
adc
lods
cmp
fnstenv
dec
ds
mov
sub
xchg
lods
pop
lret
lods
inc
shll
outsl
jo
insb
pop
andb
mov
xchg
xchg
adc
fstl
dec
pop
cmp
push
out
inc
cld
mov
mov
aam
test
mov
mov
inc
into
or
mov
cwtl
jp
sbb
or
and
out
stos
jbe
add
in
jp
pop
mov
movsb
pop
lods
xor
sub
ja
cmp
aaa
fisubs
adc
leave
cmp
gs
rcr
add
insb
cld
hlt
ja
sub
js
cmp
lret
cmp
mov
sub
lds
jns
fsub
insl
xor
sbb
scas
les
xor
pushf
ja
mov
rcl
xchg
adc
jl
popf
mov
jmp
sbb
test
faddp
push
loopne
dec
and
lea
sbbb
xchg
push
sbb
sub
mov
pop
aaa
inc
cmp
fwait
push
cmp
or
jno
fnstsw
jecxz
repnz
orb
idivl
inc
outsl
xchg
fadd
adc
icebp
push
sub
stos
sbb
mov
jp
out
and
clc
fcomps
loop
xor
je
outsl
repz
in
xchg
ret
jecxz
insl
mov
into
adc
jecxz
enter
jnp
cmp
pop
mov
jl
sbb
aam
dec
fildll
stos
sbb
jmp
hlt
xor
mov
jb
cs
mov
pusha
lret
push
lahf
mov
int
shll
repnz
dec
fs
jno
jl
sbb
pop
adc
pop
nop
into
pop
cld
xchg
lea
jo
pop
fstp
pop
lods
jl
bound
inc
movsl
stc
fs
rcrl
cmpsl
add
dec
movsb
xor
divl
dec
push
cltd
jle
inc
dec
sbb
loop
setl
cld
add
jle
or
pop
pop
les
add
jge
cmp
pop
jle
mov
inc
mov
adc
out
sbb
inc
fists
push
es
push
aas
pop
cmp
aad
test
in
jge
loop
fnstcw
sub
pop
dec
mov
and
or
xchg
push
pop
pop
xchg
push
aad
out
out
in
jno
xchg
xor
mov
mov
xchg
fldt
lretw
dec
daa
and
push
mov
jo
pop
xchg
aam
mov
dec
xchg
jmp
mov
adc
or
inc
fists
outsb
dec
mov
outsl
pusha
jecxz
hlt
repz
push
xor
into
les
pop
mov
jge
mov
jmp
adc
sub
push
dec
adc
mov
cmp
pop
stos
pop
inc
push
mov
scas
rcrb
int
rclb
jmp
iret
divb
sub
hlt
jo
arpl
mov
xor
xchg
fdivrl
test
xchg
jecxz
cld
outsb
mov
jae
cmpl
add
pop
in
mov
mov
xor
pop
out
aaa
mov
leave
rcr
notl
add
jb
cmp
or
add
addb
aad
call
pop
fcoml
jo
es
std
or
rorl
cli
jbe
xor
mov
cmpsb
jns
sub
jp
pop
lock
fcompl
mov
cmc
lret
xchg
mov
cmp
xchg
lret
es
sbb
jne
imul
push
pop
lahf
and
in
xor
lods
pop
and
add
sub
mov
addb
add
xor
cltd
adc
stos
cld
lret
cmpsb
cmpsl
clc
aaa
or
lea
xchg
lea
sub
stos
sub
jle
dec
int
push
jge
cld
sub
push
mov
adc
xor
ljmp
insl
inc
xor
shlb
shll
inc
mov
cmc
mov
mov
mov
cld
cmp
cwtl
in
or
inc
popa
inc
or
xchg
xchg
push
inc
pop
sahf
cmp
jecxz
pop
mov
sbbl
cmpsb
xor
mov
loope
rclb
dec
cmp
mov
add
sub
popl
mov
mov
loopne
or
jge
fdivl
pop
mov
and
xor
ss
mov
sub
arpl
and
cs
shrl
pop
xor
or
push
push
out
dec
pusha
pop
mov
push
cmp
mov
xchg
sub
inc
jle
cmc
mov
cwtl
jge
fwait
lods
popa
orb
xor
mov
adc
mov
dec
adc
cmp
insb
pop
cmp
or
push
fisubl
mov
int3
jle
xchg
dec
addb
inc
xchg
inc
cli
cli
xchg
outsl
ret
xor
mov
xchg
dec
aam
add
mov
push
push
test
repz
test
loopne
inc
push
mov
test
mov
dec
enter
repz
daa
push
out
subb
call
scas
mov
lods
js
pop
push
sub
or
cli
cmp
mov
pop
cmp
add
mov
jnp
inc
nop
push
xchg
xchg
push
push
mov
test
aam
std
xchg
mov
fsubrl
ret
xchg
cli
push
dec
rcrl
inc
mov
push
adc
scas
lret
into
imul
jp
into
mull
sbb
xor
add
sub
and
xchg
lods
test
xchg
std
movsl
sti
scas
loop
add
pop
sti
mulb
xchg
or
adc
or
adc
popf
or
js
jg
pop
jl
jg
sbb
jo
sbbl
insb
jge
dec
pop
psubw
and
push
cli
push
mull
out
mov
xchg
subb
cmpsb
cmp
lods
cltd
cmp
adc
lods
pop
add
mov
sub
jmp
aas
xchg
inc
nop
call
sub
shll
pop
std
cltd
add
js
sbb
pop
ficomps
inc
cmp
push
test
mov
loope
cmp
push
push
js
daa
movsl
inc
aad
lods
mov
jae
cli
stos
sbb
sbb
mov
xchg
sub
sub
aam
mov
in
mov
jb
div
dec
sub
sbb
lods
jnp
rorl
orb
cmc
ret
mov
cmp
js
sbb
mov
insl
rolb
add
ret
stc
jmp
js
daa
iret
xor
insl
inc
or
xchg
mov
notb
aas
pop
mov
jmp
sti
add
ret
iret
sub
clc
xchg
sti
push
fbld
fildl
push
testl
and
mov
lret
out
fbstp
das
call
lret
push
add
xchg
test
cmpsb
pop
jle
int3
dec
cwtl
cltd
jmp
jne
or
jb
cmc
cltd
or
add
jb
test
loop
xlat
mov
adc
sub
pop
mov
jl
sbb
jle
cwtl
inc
adc
fisubrs
bound
imul
data16
negl
aaa
xor
push
lret
adc
pop
sub
lret
jne
mov
mov
push
dec
cli
sub
jbe
outsl
mov
mov
std
sbb
loop
inc
push
mulb
xchg
aas
adc
push
int3
cmp
in
loop
push
insb
jb
cmp
mov
insl
jg
cmc
sbb
xchg
ret
or
or
iret
addb
insb
jge
xor
pop
mov
addl
adc
movsl
bound
xor
push
mov
xor
inc
push
dec
movsl
inc
hlt
xor
sbbb
insb
mov
pop
inc
push
fists
xor
nop
clc
jmp
inc
shrb
dec
fyl2x
loop
cmp
jmp
push
in
mov
jne
xchg
mov
rcrl
fstpl
pop
push
mov
imul
repnz
inc
pop
adc
lcall
inc
fldl
imulb
pushf
cmpsl
add
mov
sbbl
ficompl
test
dec
xlat
iret
fistpl
push
imul
enter
stc
scas
ficomps
cmp
push
push
xchg
jg
rorl
test
lock
inc
sbb
orl
shll
lret
cmp
adc
sub
mov
jnp
inc
dec
out
jl
push
mov
cmp
popa
adc
pusha
in
lret
pusha
inc
xlat
sub
pop
outsb
fcomip
pushf
imul
sub
lcall
scas
fwait
insl
cltd
pop
les
dec
pop
lret
sbb
popa
leave
outsb
in
js
outsb
and
dec
mov
insl
xor
addr16
outsb
shrb
cmp
hlt
scas
jb
xchg
icebp
pop
jg
aaa
js
mov
or
lcall
mov
rorl
imul
pop
cmp
test
dec
dec
cltd
icebp
cltd
and
shrb
sbb
imul
lock
cwtl
clc
jbe
mul
iret
mov
jp
mov
mov
notb
pop
adc
xor
lret
fdivs
test
sub
add
bound
leave
add
mov
lods
inc
push
jno
and
sub
jl
mov
mov
pop
shrl
xchg
fs
mov
cld
popa
mov
cmp
in
ss
mov
loopne
out
sub
cmp
sbb
xchg
pop
dec
jp
lods
cld
jg
aas
pop
sbb
xchg
int
sahf
pusha
lock
and
add
cld
mov
ja
out
pop
adc
cmp
test
jb
dec
test
ret
lret
inc
sbb
dec
cmp
mov
fistps
movsb
xchg
or
dec
sti
push
pop
test
aam
aas
pop
leave
jecxz
fldcw
enter
push
push
pop
add
lahf
outsl
in
inc
adc
mov
in
andb
pop
jle
sub
inc
test
out
pop
cmp
dec
fldt
popf
cmpsl
imul
fbstp
fisttpll
flds
jae
ja
rorl
movsl
cmp
aad
mov
call
dec
xchg
xor
test
popa
rsqrtps
sbb
push
lret
push
pop
lcall
mov
es
rcll
pusha
mov
leave
inc
cmp
cmc
and
sub
xor
add
xlat
pop
mov
mov
adc
mov
aas
daa
repnz
and
xor
fstpl
stos
add
mov
sbbb
pusha
stos
cmp
dec
pop
cmp
inc
ret
call
push
jne,pn
lret
add
xchg
cmp
stos
bsr
lret
mov
push
adc
pop
movsb
jl
jbe
xchg
cld
jae
push
push
sbb
fs
jge
popa
jl
fidivrl
fistps
jno
pop
js
adc
sti
shrl
imul
cmp
loope
dec
inc
lea
xchg
addb
out
lock
sar
mov
jne
daa
pushf
push
adc
mov
mov
fnstsw
out
aaa
inc
notl
xchg
aaa
in
clc
js
les
jmp
rclb
movl
xor
push
push
pusha
push
xchg
dec
movsl
xor
and
fmul
and
pop
arpl
lods
mov
movsl
xchg
movsb
mov
and
xchg
and
adc
mov
call
lods
push
xor
cmpsb
pop
xchg
outsb
divb
adc
xor
xchg
xor
gs
test
pop
or
mov
aad
sbb
add
pop
pusha
int3
pop
cmp
dec
mov
add
sbb
xchg
mov
xchg
xchg
pop
jl
sbb
test
pop
lods
xchg
mov
or
int3
cli
fldt
arpl
dec
scas
outsl
loopw
gs
cmp
sti
mov
xlat
popf
and
mov
out
xchg
imul
push
push
scas
hlt
sub
enter
int
dec
adc
jmp
jne
pop
pop
ja
pop
andl
jmp
shr
push
mov
push
adc
jl
xchg
cltd
pop
clc
ss
inc
frstor
lds
fsubl
addb
or
cmp
mov
or
mov
stc
add
sti
mulb
add
sub
idiv
inc
pop
pop
mov
repz
psubd
int
arpl
in
sti
fsts
icebp
cwtl
outsl
xchg
clc
mov
stos
adcb
cmpsl
loopne
ljmp
push
or
and
int
push
es
aaa
jb
cmp
or
fbstp
lcall
mov
and
xor
and
sarb
daa
cmpsl
sbb
orb
push
in
sub
xchg
fstpl
fmuls
out
cli
push
pop
notb
and
xor
adc
aam
pop
mov
insb
lods
fld
adc
fwait
std
negb
test
movsb
shr
sub
mov
pop
dec
sar
roll
mov
mov
inc
sub
insl
sub
sub
repnz
testb
lds
jnp
pop
sbb
mov
dec
push
cmpb
lea
inc
cmp
mov
sbb
aas
insl
jno
inc
sub
bound
jnp
push
jp
aaa
mov
jle
loope
mov
psraw
shl
test
ret
cld
ds
stos
jp
int3
push
mov
mov
nop
inc
fbstp
insb
test
pop
loop
pop
sub
or
sub
mov
sub
pop
test
cmc
inc
add
cmp
cmp
mov
daa
jl
rcl
adc
sarb
cmp
pop
aas
fsub
imul
divb
mov
negb
mov
push
and
rcrl
fbstp
pop
dec
mov
lods
leave
mov
cmp
cmc
aas
add
es
pop
repnz
mov
stc
pop
test
sbb
lea
xor
add
cmc
xchg
sub
xchg
cli
test
repz
or
mov
outsb
inc
mov
pop
pop
shlb
es
ret
shl
mov
inc
mov
imul
xor
pop
repnz
ficomps
negb
jno
out
dec
shl
mov
lret
nop
inc
mov
cmpsb
mov
inc
push
in
sbb
xchg
outsb
gs
and
movsl
fists
fs
xchg
int3
xor
mov
enter
fiaddl
pop
pop
cld
mov
xchg
pop
shr
movsl
imull
rcrb
in
or
sub
dec
lods
mov
lds
and
nop
ds
cmp
pop
rcrb
adc
stos
pop
outsl
dec
inc
aad
test
pop
mov
aaa
sahf
xchg
mov
les
je
repz
sub
sahf
test
sahf
push
dec
push
jnp
push
sub
insl
pop
mov
lds
inc
ljmp
aas
fidivs
out
fildl
int
das
push
inc
out
pop
and
es
pop
insl
icebp
jg
dec
jb
mov
stos
pop
mov
sub
aas
lret
dec
jmp
test
pushf
add
popa
loopne
dec
inc
or
shlb
addr16
outsl
mov
mov
stos
lret
add
test
jp
rcll
mov
inc
adc
adc
or
sbb
jp
ss
gs
addr16
lret
jae
in
icebp
out
push
mov
push
das
jecxz
rorb
jp
call
or
sub
mov
inc
sub
leave
into
repnz
rolb
les
movsl
inc
dec
cli
in
add
shll
js
cmp
xor
xor
sbb
pop
inc
insb
xchg
sbb
dec
lods
sbb
adc
repz
xchg
ja
jno
fldcw
int3
xor
jo
mov
aad
push
jno
xchg
sbb
mov
mov
inc
xor
rcll
frstor
dec
xchg
sub
pop
fs
popa
dec
pop
movsl
xchg
repz
mov
das
aam
pop
push
nop
jnp
mov
mov
xchg
sti
hlt
test
lock
and
or
mov
sbbl
inc
into
xchg
cmp
adc
pop
pushf
insl
scas
jne
adc
fisttpll
mov
cltd
call
ljmp
mov
imul
and
cmp
xor
stc
and
popf
push
push
popa
fwait
and
movsl
aam
pop
movsb
ja
sub
ljmp
mov
lcall
xchg
lods
mov
add
pop
flds
ja
popf
inc
pop
pop
aam
xlat
scas
test
movsb
push
jae
inc
in
lock
xor
mov
xchg
mov
fxch
enter
jno
ret
loope
dec
jecxz
push
jns
enter
dec
cwtl
aas
mov
sahf
sahf
pop
jmp
or
loopne
sbb
lock
cmpb
nop
stos
js
dec
sbbl
dec
aad
das
imul
pop
cmp
mov
hlt
xor
in
outsl
mov
cmp
cmp
inc
hlt
mov
cltd
shrb
loopne
outsb
andl
inc
or
adc
cli
adc
push
dec
int3
outsl
adc
icebp
shrb
xchg
imul
mov
push
pop
jne
cltd
repz
cmp
int3
mov
lahf
rolb
jbe
rclb
leave
push
push
iret
pop
mov
rcll
cmp
dec
rcr
mov
fdivrs
paddsb
sub
call
xchg
mov
stc
xchg
rcr
stc
sub
aad
cmc
jo
movsl
mov
leave
inc
pop
mov
jl
ror
or
dec
sub
dec
xlat
pusha
dec
sti
pop
repnz
sub
mov
fcom
push
lds
repnz
xchg
adc
mov
inc
iret
andb
je
push
cld
test
loopne
mov
cmp
ffree
xorb
sbb
mov
or
popa
int
das
mov
xor
cld
shr
leave
mov
xchg
cmp
sahf
or
jge
dec
out
mov
pop
mov
call
or
jge
mov
lcall
and
lea
cwtl
inc
fnsave
pop
adc
push
or
xchg
xor
sbb
inc
fistpll
jno
stc
out
jmp
mov
ror
sbb
mov
add
dec
mov
pop
stos
xor
notb
mov
pop
add
or
nop
aaa
mov
gs
jmp
mov
aas
pushw
and
inc
mov
test
stos
mov
insb
mov
sub
xchg
jo
or
out
lret
push
es
pop
mov
in
push
sub
or
and
test
iret
push
test
xchg
scas
les
sbb
pop
pusha
cmpsl
icebp
push
inc
loope
movsl
xchg
rclb
mov
xchg
shrb
xlat
imul
jns
test
repnz
fisubs
dec
or
test
mov
ljmp
enter
lods
sub
leave
and
jnp
push
xchg
incb
iret
addw
pop
mov
leave
insl
movsl
inc
xchg
imul
ret
test
cmc
stc
repnz
hlt
xchg
std
mov
popf
cli
jle
sub
filds
add
pop
push
repnz
ret
cmp
jb
cmp
mov
mov
mov
into
and
mov
andb
call
jne
scas
jns
fst
in
push
les
ljmp
mov
stc
add
xor
pop
cmp
pop
jno
cmp
leave
enter
inc
xchg
push
pop
lods
stos
inc
call
lcall
sbb
cmpsl
sub
pop
sbb
sub
add
or
clc
mov
mov
mov
insl
mov
xor
pop
leave
call
push
xlat
push
push
xchg
mov
dec
add
nop
jnp
cmp
xchg
mov
jae
lret
mov
jne
in
addr16
lea
aaa
mov
jp
jge
push
ja
arpl
aam
scas
inc
and
cmpsl
rorb
lods
jb
cmp
fidivs
xchg
ds
out
lret
call
jbe
mov
fcoml
mov
aad
mov
xchg
push
out
sahf
sub
pop
or
add
jo
push
rorl
pop
sub
leave
out
mov
iret
inc
xor
imulb
or
out
or
add
repnz
stos
pusha
pop
jno
daa
js
pushf
aaa
jmp
scas
jl
shll
scas
mov
push
xor
fbld
arpl
inc
adc
adc
or
test
out
enter
cwtl
les
push
sbb
mov
lea
in
pushf
mov
popa
les
adc
sub
mov
insb
das
push
iret
frstor
inc
imul
adc
sub
lock
fsubp
mov
loop
repnz
ret
test
mov
cmp
mov
push
cmp
lret
mov
xor
xchg
jno
into
test
jmp
inc
inc
nop
test
adc
dec
xchg
test
xor
subl
jecxz
lods
pop
jnp
lret
insl
fs
fmull
dec
rcrl
or
jecxz
pop
ret
movsl
mov
fldt
shlb
inc
or
or
cmp
int
cmp
shr
push
in
mov
inc
loope
push
jo
adc
rcrb
cmc
jecxz
add
sub
xor
mov
jne
cmp
jp
mov
mov
ret
pusha
scas
add
out
or
xor
fisttps
sub
mov
push
or
mov
ret
test
out
addl
pop
insb
cmp
mov
sahf
push
inc
mov
bound
or
outsb
push
cltd
shl
add
mov
movsb
xchg
jmp
inc
xor
stos
mov
int
add
sub
fistpll
outsl
lahf
and
mov
and
sub
mov
fiaddl
or
ja
dec
jns
mov
pushf
test
dec
mov
test
sbb
adc
lcall
icebp
and
xor
inc
fbld
inc
jecxz
inc
dec
xor
adc
lds
mov
jecxz
sub
mov
and
nop
out
sti
pop
push
scas
add
sbb
testl
loop
test
mov
add
pop
and
ret
ljmp
out
push
cmc
push
dec
xor
imul
mov
call
xor
mov
xor
sub
test
push
mov
jmp
cld
cmp
ret
dec
mov
bound
pusha
and
mov
mov
es
int3
out
int
out
mov
test
jo
pop
aas
xchg
or
icebp
scas
jns
aaa
mov
mov
push
jmp
popa
cmpl
ljmp
cli
and
and
jle
jp
dec
popa
jbe
fisubs
out
cli
popf
mov
push
mov
fs
dec
lcall
jb
or
and
push
mov
popf
in
adc
icebp
loop
jmp
fbstp
xchg
mov
sub
cs
std
sarb
call
icebp
jp
inc
mov
pop
xchg
cmp
jl
adc
testb
aaa
orb
jp
sbb
mov
dec
outsb
xchg
xchg
dec
cld
fiadds
sarb
dec
mov
pop
pusha
push
ljmp
lea
out
ret
jl
loopne
adc
mov
mov
cld
mov
je
pop
inc
lret
insb
jp
mov
in
imul
xchg
das
sub
nop
das
add
push
js
fcoml
subb
sub
xchg
popl
pop
dec
jle
dec
js
stos
mov
jb
loope
loope
bound
dec
sbb
outsl
daa
push
mull
xor
mov
mov
popf
imul
aad
js
cmpsl
in
push
popa
icebp
movsb
xchg
push
inc
xor
mov
test
cmpsb
dec
lret
mov
aam
sub
fs
hlt
out
adc
cld
sti
pushf
mulb
dec
ret
mov
mov
xchg
negl
cmp
leave
cmp
fstl
cmp
jle
out
sbb
xlat
call
pop
inc
test
orl
adc
pop
in
xchg
and
dec
cmp
push
cmpsb
rorb
sti
lds
movsl
mov
inc
add
sti
daa
fwait
and
outsl
xchg
hlt
mov
not
inc
pushf
push
cmc
pop
mov
fucomi
xchg
push
xchg
pop
adc
mov
cmc
insb
outsb
mov
cli
push
lahf
lds
fists
lds
out
out
ja
cmp
xchg
outsl
adc
loopne
mov
or
or
xor
jbe
mov
add
notb
outsl
cmpsb
ret
sbb
jnp
pop
out
lods
sub
push
aaa
stos
dec
in
test
pop
inc
xor
push
push
add
jmp
push
dec
mov
xor
mov
mov
loope
insl
pop
jb
mov
scas
shlb
outsl
fisubrl
in
mov
pop
pop
shrb
lret
and
cmp
outsl
pop
lcall
mov
aad
mov
push
scas
or
push
pop
movsl
adc
mov
das
cmc
push
pop
xlat
push
push
dec
stos
clc
adc
subb
negb
pop
dec
jmp
stos
es
outsl
in
cld
mov
out
bound
mov
mov
lods
test
stos
cmpsb
sti
bound
cmpl
fnstenv
inc
sarb
add
push
repnz
and
dec
imul
fisttpl
int
js
es
and
fstpt
mov
jb
insl
ljmp
mov
ja
or
and
cmpsb
cmp
dec
xchg
out
shll
cmp
stos
jnp
dec
mov
je
add
cmp
dec
mov
mov
jnp
inc
gs
test
ljmp
mov
inc
cld
mov
push
xchg
xchg
test
into
imul
push
push
hlt
xchg
and
cmp
fcoml
xchg
stc
mov
daa
inc
mov
dec
xchg
into
mov
mov
sub
sub
sbbl
mov
ds
imul
jnp
sub
arpl
sbb
inc
jno
std
jle
sub
jne
dec
sbb
movl
push
adc
adc
out
dec
fimuls
mov
call
jbe
mov
fadd
push
dec
mov
inc
ja
xor
mov
pusha
adcl
lock
test
xor
lahf
in
ss
ja
jg
xchg
out
cmp
arpl
leave
jmp
jb
movsl
sahf
mov
call
mov
outsl
push
shll
sarl
js
jp
cmp
int
lods
push
aad
aad
test
lods
mov
jno
add
or
mov
mov
or
repnz
iret
mov
std
mov
and
pop
and
sub
pop
mov
cmc
xor
pusha
in
lods
xor
push
jle
popa
push
out
lret
sbb
out
jecxz
push
cs
push
push
pop
push
xor
add
cmc
inc
mov
jae
lahf
cwtl
lret
sub
sti
pop
rclb
dec
in
lods
dec
inc
insb
lods
pop
xchg
imul
push
jbe
ds
mov
adc
mov
sti
mov
dec
rolb
or
add
out
cwtl
into
stc
mov
add
mov
pop
or
inc
aaa
scas
and
push
jnp
test
xchg
mov
mov
in
dec
and
cmp
mov
xchg
and
mov
cmp
mov
inc
sub
or
out
in
cs
or
jg
sbb
out
jl
jge
sub
push
xor
add
das
xchg
mov
jno
and
mov
lcall
addr16
inc
bound
aam
scas
mov
inc
jne
sbb
jbe
clc
dec
adc
sub
lret
push
inc
xchg
jl
xchg
pop
mov
mov
pop
outsb
pop
xlat
aaa
popf
dec
xor
sarl
lea
les
loopne
pop
stos
lea
cmpl
cmp
ret
xorl
pop
pusha
inc
fisubs
cmpsl
inc
cmp
and
aam
mov
es
lret
xchg
mov
sub
pop
das
imul
push
xor
mov
inc
outsb
push
movsb
and
mov
lock
inc
and
mov
jae
outsl
int3
inc
cmpsl
sub
add
test
push
cmp
sub
xchg
mov
cwtl
push
mov
dec
mov
dec
mov
or
shrb
and
xor
push
ljmp
dec
out
mov
push
push
cmp
movsl
outsb
mov
lahf
adc
jae
xchg
stos
cmp
xorl
push
dec
inc
add
cmp
mov
xor
lock
shlb
push
and
xchg
fdivs
pop
lret
mov
mov
cmp
push
mov
fisubrs
push
mov
imul
inc
ficoms
cs
lock
pop
push
cmpsl
push
jb
add
fidivs
insb
faddl
mov
out
aaa
hlt
jp
and
push
rep
mov
sbb
fbstp
sbb
les
fdivl
dec
fistpll
out
sbb
shrl
xchg
cmp
xchg
into
mov
add
sub
nop
mov
xchg
mov
pop
push
jp
imul
jl
dec
testb
inc
mov
or
int3
mov
cmpsl
jmp
xor
fwait
fwait
pop
in
xchg
fldl
int3
mov
push
adc
and
mov
cmc
xchg
repz
mov
ret
jbe
add
xor
int
pop
jecxz
fmul
xlat
movsb
mov
xchg
loopne
xchg
mov
mov
push
negl
outsb
popf
int3
inc
jmp
pop
sahf
xchg
pop
popa
lahf
psubsw
ret
fisttps
jge
into
insl
clc
mov
adc
push
imul
hlt
mov
cld
bound
sahf
sbb
mov
push
aas
pop
lahf
scas
add
ffree
lock
cmp
daa
loope
xor
jp
andb
mov
addr16
sub
aaa
faddp
add
cmpsb
mov
std
leave
jl
and
mov
or
adc
mov
push
sub
popf
decl
mov
dec
lock
xor
call
sub
repnz
mov
testl
sbb
jmp
mov
ret
pop
iret
in
mov
mov
mov
xchg
xchg
repnz
and
test
jno
add
out
mov
push
sub
jg
sub
and
or
pusha
jne
aaa
lock
int
cmp
and
stos
arpl
rcl
add
idiv
je
sub
or
cmpsb
cmpsl
pop
or
outsb
or
xor
add
mov
cmp
imul
push
mov
out
xorb
gs
lods
dec
mov
scas
xor
fsubr
outsb
je
fdivrs
mov
into
cmp
dec
mov
add
mov
out
cvtps2pi
insl
stos
sub
add
xchg
fstl
mov
sbb
lods
addl
imul
xor
stc
xor
repnz
mov
xchg
ja
les
jmp
mov
scas
mov
sub
jle
mov
push
inc
adc
ret
or
les
das
popf
mov
rclb
sub
out
jo
xor
out
pop
pop
aad
mov
loope
out
cwtl
dec
sahf
push
es
in
xchg
cmp
mov
jmp
dec
repnz
std
or
mov
xor
das
push
xor
mov
aam
addr16
mov
test
mov
xchg
out
hlt
pop
push
insl
push
xlat
sbb
and
jmp
cltd
ljmp
popa
rolb
test
xchg
add
cmc
cmp
inc
lods
inc
pushf
mov
jle
mov
xchg
mov
jbe
sti
jle
mov
or
dec
or
mov
loopne
pop
and
inc
cmp
add
pop
inc
pop
pop
js
xlat
addr16
xchg
inc
xchg
ja
mov
pop
add
lcall
dec
cmovge
imul
cwtl
fbstp
jmp
lret
fs
fnstsw
in
push
jbe
add
jge
xlat
and
push
ss
cmp
out
xor
insl
out
cmp
adc
jge
popa
aad
ds
addr16
loopne
jbe
in
inc
fildl
push
shll
sub
dec
jno
ja
xor
xchg
mov
int
mov
pop
test
mov
cli
insb
push
mov
add
mov
push
lds
lods
sti
aaa
xchg
add
mov
dec
sub
je
jp
nop
inc
pop
mov
adc
sbb
add
or
fwait
or
cld
dec
hlt
in
insb
out
jo
jns
sbbb
ss
lds
je
jnp
fs
jne
iret
cmp
adc
scas
pop
and
cmp
popf
xchg
clc
repnz
ss
push
fcoml
mov
je
inc
scas
lods
fisttps
nop
fwait
into
into
movl
test
push
add
mov
cli
cmp
inc
idivl
popf
pop
and
loope
pop
sbb
stos
push
xchg
pop
inc
sbb
cmp
mov
mov
dec
loopne
ret
pop
xor
cmc
jecxz
gs
repz
mov
inc
jge
dec
negl
cmp
repnz
or
mov
xor
or
cmc
divb
in
clc
mov
lret
repz
test
icebp
inc
sti
insb
ficoml
lea
mov
push
xor
sub
out
pop
pop
sbb
mov
and
jnp
stos
imulb
adc
dec
sub
sub
mov
loopne
mov
repnz
push
mov
fwait
sbb
mov
inc
sbb
mov
sub
push
enter
pop
sub
inc
sub
fsubl
rorb
ret
ror
xlat
adc
loop
je
movsl
pop
mov
and
testl
lret
cmp
adc
or
push
ret
fmul
xor
dec
mov
sbb
divl
push
repnz
rorl
mov
popa
divb
movsb
mov
mov
je
sbb
pop
mov
movsw
aam
imul
int
scas
pop
lahf
adc
sbb
adc
dec
roll
xor
repz
inc
rcll
pop
shr
adc
shrb
scas
jns
mov
mov
or
add
pop
sub
loopne
gs
rorb
inc
mov
and
inc
out
push
std
dec
or
xor
sahf
fs
push
int3
sbb
pop
sub
popa
inc
inc
push
dec
sub
xchg
lods
or
addr16
xor
enter
lret
movsb
nop
fstps
cli
imul
mov
fadds
je
and
add
test
jno
in
ror
leave
out
inc
movsl
add
movsl
jne
pop
arpl
sub
cmp
aas
dec
pop
sub
lea
or
or
mov
xchg
jl
out
daa
daa
ds
out
sbb
or
xor
xchg
jno
pop
arpl
lods
sbb
inc
mov
popf
bnd
or
rorb
mov
das
idivl
cmc
sahf
cmp
xor
mov
inc
stos
rcrb
lahf
sahf
leave
pop
pop
pop
enter
daa
je
stc
jb
pop
dec
xchg
dec
nop
test
dec
stos
lcall
push
icebp
dec
testl
jecxz
movb
push
in
sbb
out
inc
pushf
pop
inc
outsb
mov
imul
leave
stc
ja
subb
add
xchg
inc
sbb
pushf
add
pop
add
mov
push
inc
aaa
jecxz
cmc
pusha
and
sbb
repnz
jl
dec
inc
decl
fiaddl
ret
in
movsb
pop
dec
and
neg
adc
add
or
pop
mov
pushf
aad
or
mov
ret
inc
adc
mov
dec
arpl
jl
repnz
jb
scas
decl
adc
mov
fs
and
push
clc
jne
adc
imul
shlb
push
pop
cmp
fidivrl
or
sub
add
cs
addl
pop
loop
lods
mov
cmc
jb
sub
xor
pop
fs
mov
xor
mov
sbb
bnd
adc
dec
mov
das
push
inc
shlw
arpl
lahf
out
shll
fildl
pop
ja
pop
je
sbb
scas
rcr
adc
sti
cmpsb
pusha
out
mov
push
xchg
popa
jne
mov
dec
in
or
movsl
cmp
ljmp
cltd
adc
pop
int
cld
sbb
daa
mov
addr16
into
sarl
mov
data16
sbb
scas
inc
dec
neg
imul
ja
dec
insb
mov
mov
sub
cmp
add
dec
xchg
es
rcl
fucom
and
mov
and
sbb
inc
sbb
sbbl
sbb
lldt
or
dec
mov
and
loopne
pop
push
adc
mov
sub
gs
cmp
ss
cmp
popa
cltd
jle
add
ja
push
fmull
aam
sub
cmp
in
stos
cmp
data16
push
cmp
insl
insb
and
mov
jnp
xchg
xorb
scas
dec
aad
test
push
xchg
add
xor
fsubs
xor
cmp
daa
pop
jp
insl
cmc
adc
bound
add
xchg
pop
flds
add
iret
pop
xchg
std
ficoms
fmull
or
pop
cmp
outsb
pop
fcomip
icebp
lods
dec
notl
addb
push
pop
pop
aas
sti
inc
outsl
outsb
xor
mov
push
sbb
xor
repnz
into
repz
sbb
adc
xor
mov
pop
les
iret
mov
jnp
rcrw
je
mov
stc
jecxz
mov
cltd
push
orl
jl
clc
xor
inc
test
je
xchg
popl
jp
cld
dec
mov
mov
hlt
call
ss
pop
xchg
daa
mov
popf
and
movsb
jp
push
bound
mov
lock
pop
dec
lods
in
cs
lds
mov
mov
bound
dec
enter
mov
inc
jge
ss
fnstsw
ljmp
in
shl
pop
cmp
fdivs
dec
out
ja
insb
inc
add
ds
jmp
push
frstpm(287
jg
lret
pop
mov
rcrl
int
xchg
push
in
mov
cli
and
mov
addl
mulb
fisubl
dec
xor
sub
push
sub
ret
mov
mov
sbb
sub
mov
add
push
int3
cmp
dec
arpl
pop
inc
mov
xor
test
and
in
inc
inc
in
sbb
mov
push
mov
ss
shll
fcompl
jo
xor
fnstcw
jp
scas
mov
xor
into
add
testl
in
test
jg,pt
ljmp
dec
ds
sbb
sahf
jb
jl
push
repz
mov
sbb
add
test
stos
xchg
fucompp
std
jne
test
xor
ja
xchg
pop
push
push
arpl
mov
loope
push
pop
mov
subl
jg
xor
sub
iret
xchg
scas
in
or
aam
and
ja
push
stc
lods
lods
mov
cmp
out
push
out
andb
push
mov
xchg
sti
and
xchg
into
mov
jnp
add
jnp
mov
fdivrl
in
mov
call
sahf
popf
jmp
mov
insl
test
pushf
dec
icebp
or
imul
nop
mov
inc
cwtl
pop
xchg
adc
cmp
xor
mov
mov
sub
clc
sub
pop
adc
stos
lcall
jbe
push
adc
loop
xor
dec
jb
push
jbe
sbb
aas
or
fwait
xchg
mov
into
push
pop
push
adc
fsubrl
xchg
aam
mov
xchg
sbb
push
scas
ja
lods
pop
ljmp
push
adc
push
mov
push
das
rcll
push
data16
mov
mov
fmuls
sub
and
in
rcr
imul
jle
add
jae
ja
xchg
jo
xor
popf
cs
clc
xchg
push
xlat
test
mov
xor
sbb
jecxz
and
pop
push
out
scas
cli
xor
in
and
cmpsb
movsb
inc
dec
ja
and
test
test
xchg
lcall
xor
ret
adc
cmpsl
push
addr16
jmp
enter
fwait
inc
mov
call
mov
in
pop
add
iret
cmp
mov
mov
inc
push
jg
jo
lods
cwtl
out
or
jle
popa
decl
pop
jge
inc
sahf
lock
cmp
and
dec
push
not
insl
sub
mov
and
shl
in
in
mov
test
mov
aad
daa
ffreep
pop
mov
sbb
cwtl
sub
stc
test
cmp
xchg
push
cmp
inc
cli
push
out
mov
scas
sub
and
shr
dec
mov
inc
cmp
insl
rcrl
int3
bnd
rorb
aam
add
xor
inc
fucomip
test
mov
mov
push
ljmp
add
cli
insl
mov
je
in
sbb
and
mov
mov
jns
decb
adc
jp
pop
push
and
addr16
add
scas
sbb
int
inc
add
jge
inc
gs
sbb
mov
shrl
push
pop
cmp
mov
jl
test
imul
or
mov
jmp
imul
push
pop
fisubs
mov
pusha
inc
sbb
inc
mov
or
sub
cltd
pop
xor
mov
jo
push
rcl
sbb
fwait
dec
xlat
jp
ret
lret
jnp
mov
jg
push
jns
fwait
and
inc
dec
mov
jns
icebp
sbb
shlb
sahf
fisttpl
xlat
mov
hlt
xchg
jecxz
lock
or
adc
push
mov
xor
lret
int
fisubs
adc
sub
mov
movsl
test
fdivl
bound
into
cmp
cmpsb
jecxz
mov
mov
push
mov
es
call
mov
inc
rclb
sub
mov
mov
popf
cmp
bound
loopne
inc
rolb
mov
repnz
scas
xlat
pushf
loope
fwait
jae
cmp
orl
jle
sti
add
movsb
shlb
fmuls
push
cmpsb
test
js
testb
in
arpl
in
aaa
jbe
loopne
lea
jg
jne
xor
call
dec
mov
adc
icebp
les
adc
out
lcall
dec
mov
or
cmc
das
mov
push
mov
in
add
lahf
in
add
jb
add
and
ljmp
jle
xchg
in
aaa
rcl
push
dec
xchg
xor
popf
stos
test
and
sahf
and
push
in
or
adc
mov
sub
data16
lock
aas
notl
stos
push
pop
cmp
pop
dec
aaa
call
cmc
mov
add
cli
aaa
in
adc
cli
hlt
ja
mov
iret
pusha
push
jo
sub
adc
sub
push
xor
filds
lcall
adc
mov
add
aaa
jns
pop
cmc
imul
movsl
das
dec
xor
cmp
out
or
aam
inc
cmpsl
xchg
adc
jecxz
test
das
xlat
test
loop
dec
std
outsb
inc
test
push
cld
xor
lret
jo
into
in
scas
bound
addr16
mov
lret
jb
nop
sar
loopne
or
mov
or
mov
xlat
or
adc
xor
sbb
data16
incb
dec
in
inc
in
sub
inc
repz
es
shrb
push
dec
test
xlat
rcrb
xor
and
push
push
push
fisttps
xchg
jle
push
sbb
sahf
and
in
shrl
fists
dec
das
cltd
aad
outsl
jb
sbb
popa
xor
xlat
mov
dec
out
stc
jnp
pop
mov
jne
sbb
inc
and
push
fst
add
jb
dec
mov
mov
lods
adc
pop
aas
ds
lret
scas
mov
pop
loope
xchg
pop
movsb
add
inc
rcrl
ret
mov
in
out
subl
test
xchg
jbe
faddl
sbb
ds
xchg
dec
cmpsl
insl
stos
push
aaa
cmp
cld
pop
jp
push
aad
call
out
push
lea
cmp
xchg
dec
jo
es
or
mov
stos
pop
pop
ss
mov
jbe
andb
jo
xor
mov
xor
inc
cmp
sbb
es
mov
inc
jg
or
dec
movsl
xor
inc
mov
shufps
jge
insl
mov
xchg
icebp
int
add
pushl
mov
sbb
xchg
repnz
inc
sbbl
push
es
subb
jl
lods
adc
jnp
xor
cld
scas
mov
test
adc
sub
cltd
xor
push
sub
inc
jge
lret
fnsave
lret
mov
int3
or
fst
lods
sbb
cmpsb
lea
aam
inc
rcrb
stos
in
aam
lcall
mov
js
sbb
mov
pop
pop
in
add
ljmp
lods
icebp
push
clc
outsl
cli
movsb
jl
loopne
dec
xlat
or
cwtl
pop
xlat
imulb
fsubr
fidivrs
mov
adc
pop
fldenv
sbb
jo
cmc
es
hlt
jmp
push
xchg
int
out
dec
adc
pop
mov
dec
test
insb
mov
push
gs
add
loopne
jp
dec
hlt
jbe
mov
ja
dec
sub
sub
jb,pt
sbb
inc
xchg
leave
inc
fwait
adc
inc
cmp
mov
testb
iret
ds
sbb
paddw
cli
fimuls
shl
loope
dec
xchg
or
dec
ja
xlat
or
fdivs
cwtl
push
push
adc
sub
or
or
push
cmp
push
mov
adc
test
popa
fs
aas
iret
je
mov
push
int3
mov
mov
push
repnz
sti
fdivs
orl
jo
cmp
lods
stc
rorl
adc
pushf
ret
mov
cwtl
inc
fcomps
xchg
ss
cld
cmc
hlt
clc
notb
and
nop
lahf
test
mov
into
mov
pop
lret
in
and
test
mov
pop
rorl
jno
into
fbld
cmpsl
test
clc
pushf
mov
cmovle
fdivl
jle
pusha
jmp
adc
and
popa
lret
shrl
sbb
enter
xor
movsb
in
dec
xchg
add
jmpw
dec
mov
jne
fisubrs
imul
mov
xor
inc
repz
movsl
inc
push
and
faddl
in
scas
pop
lret
outsb
out
inc
sub
int
xchg
xchg
repz
gs
mov
ja
sbb
push
icebp
add
pop
inc
insb
pop
jmp
std
inc
xor
dec
mov
mov
ja
lahf
test
push
stc
ss
daa
bnd
fs
pop
jp,pn
mov
cli
imull
adc
into
daa
xor
mov
add
subb
pushl
dec
nop
xlat
ss
dec
loop
idiv
loopne
jge
js
aaa
sbb
lock
dec
sub
pop
call
lods
or
push
push
mov
xor
mov
adc
imul
fisttps
jb
fsubrl
das
mov
cmp
iret
out
push
jo
aaa
mov
mov
and
xor
adc
sub
fldenv
imul
add
imul
adc
movsl
arpl
xchg
xchg
aaa
xlat
lret
shrl
add
mov
jno
andb
xlat
cmp
pop
lods
inc
push
push
lock
jp
mov
push
popf
cmp
int
or
repz
mov
movsl
lods
stc
shr
and
add
and
aaa
jns
xor
arpl
andl
inc
clc
cmp
jle
lcall
std
mov
into
or
push
outsb
loope
xlat
leave
fdecstp
sbbb
adc
xor
es
push
mov
fnstcw
imul
inc
popa
in
lret
ds
sub
fdivs
cmp
popf
pop
dec
aas
int3
int3
fisttpl
shrb
dec
in
adc
lret
mov
pop
aad
ss
push
cmpsb
ret
addr16
stos
das
jg
test
cwtl
jmp
push
mov
push
xchg
scas
add
nop
inc
cmp
or
xchg
scas
xor
mov
faddp
dec
cmp
fsubs
mov
pop
loopne
cli
pop
out
popf
pop
mov
pop
ret
loope
mov
jno
scas
into
pop
lret
sub
xchg
int3
shll
and
nop
loopne
pop
nop
mov
lret
add
aad
rclb
xor
test
dec
sub
pop
push
es
loope
aad
fs
mov
adc
fisubl
xor
mov
sbb
add
or
gs
outsb
jmp
mov
or
rorl
dec
inc
shr
int3
cli
add
push
sub
call
lea
dec
and
mov
std
mov
xchg
bound
lods
xchg
fwait
sub
jmp
mov
fimull
jb
insl
inc
lods
xchg
jecxz
inc
push
xchg
aad
addr16
outsb
mov
dec
repz
pop
xchg
push
sub
cmp
xor
inc
lcall
into
mov
sbb
aam
mov
test
je
cmpsb
in
arpl
dec
lret
out
add
mov
xchg
adc
sbb
sub
sub
mov
test
jbe
shll
inc
cmc
test
test
adc
cmp
xor
daa
test
adc
xor
movsb
cltd
mov
mov
sarl
xlat
stos
fsubrl
jnp
outsl
mov
jne
xchg
lock
push
dec
rorb
pop
in
lods
xchg
dec
out
loop
pop
lcall
add
outsl
jbe
call
aam
xor
push
inc
inc
lret
mov
into
fadds
adc
lahf
xchg
jns
inc
jmp
sub
loope
ja
loopne
ds
xor
pop
lods
add
int
daa
pop
gs
pop
or
adc
xorb
mov
mov
sbb
fstpl
sbb
and
add
and
mov
add
sub
fwait
adc
cmp
aaa
mov
lcall
cwtl
ds
shl
add
mov
or
jg
or
outsl
and
jne
add
fnstsw
je
pop
inc
stos
push
cmc
std
fisttpll
xchg
mov
clc
add
push
clc
inc
inc
add
ja
jmp
test
loope
push
aaa
jp
pusha
jmp
adc
jnp
testb
jnp
lret
mov
mov
outsl
cmc
shll
pop
inc
cltd
into
repz
in
jno
mov
xchg
push
and
push
js
mov
ret
sbb
mov
mov
int3
xor
xlat
icebp
xchg
push
cmp
pop
stc
out
loopne
add
lahf
mov
sub
and
mov
out
nop
jl
xchg
loop
push
dec
cmp
cli
loop
call
decb
stc
movsl
xlat
jl
xorl
mov
push
xchg
js
ret
mov
fsubrp
jecxz
push
adc
jp
sub
and
ss
xchg
movsl
ja
gs
cmpl
pop
loopne
jne
jnp
add
fisubl
jmp
mov
gs
push
mov
int3
dec
in
add
jne
dec
fstl
iret
mov
imul
jmp
rorl
adc
or
addr16
adc
out
mov
fidivrl
push
mov
add
rcpps
repnz
sbb
pop
push
mov
push
out
mov
cld
loope
sub
xchg
dec
jbe
add
xchg
movd
push
fimuls
or
inc
and
lds
scas
in
dec
or
cmp
sbb
roll
inc
cmp
and
in
mov
incl
stos
inc
sbb
sbb
rclb
push
adc
lret
scas
pop
cs
inc
cltd
inc
add
sub
testl
push
leave
pop
stos
xor
inc
enter
repz
in
std
xchg
jns
scas
addb
inc
adc
sbb
popa
adc
push
subb
push
out
ljmp
sarl
aam
inc
xor
push
jl
popf
push
mov
outsb
stc
ljmp
mov
sbb
das
push
mov
add
lea
ficompl
rcrb
inc
sub
inc
xlat
adc
mov
repz
push
test
and
and
insb
inc
lock
movsb
xchg
leave
test
nop
lret
test
aaa
cmp
push
enter
ret
addr16
xchg
iret
scas
xchg
es
mov
lods
aam
inc
inc
cld
mov
cmp
leavew
je
adc
bound
shl
outsb
mov
popl
add
out
scas
ljmp
cmc
cmc
pop
lahf
jg
jecxz
push
cmp
cmp
in
bswap
enter
ja
sub
orb
negb
ds
test
movsl
push
jno
outsl
push
popa
xor
je
sbb
nop
leave
sbb
std
mov
inc
xchg
and
cmp
xor
insl
add
int
vdivpd
mov
cs
or
icebp
xchg
insb
loop
inc
dec
sti
rolb
xchg
dec
outsb
jnp
sbb
inc
jmp
in
jp
mov
insl
or
inc
push
push
push
xchg
movsl
dec
addr16
in
pop
fwait
call
mov
pop
or
loopne
mov
or
inc
or
or
cmp
fisubl
fs
lods
iret
xlat
mov
es
cmpsb
scas
sub
mov
jb
pop
inc
test
jmp
mov
negl
jge
sub
jae
in
inc
xchg
inc
mov
sbb
jp
lret
shll
jnp
lock
sahf
ss
dec
fcoms
xchg
fldcw
add
scas
mov
rcrb
sahf
fdivrs
ja
add
or
cmp
fsubrl
mov
add
adc
push
xor
jo
pop
in
lock
enter
imul
xchg
and
js
aad
xchg
push
fisubrl
mov
fcoml
xchg
jecxz
daa
ret
inc
cmp
jp
fnstsw
sbb
inc
test
imul
jae
pop
jns
pop
push
icebp
lods
out
push
jecxz
adc
movsl
sbb
pop
dec
push
ret
mov
loop
orb
call
pop
inc
dec
hlt
mov
aaa
push
stc
cli
lahf
pop
or
adc
jo
das
inc
dec
xchg
sahf
pusha
outsb
subl
push
stc
cmp
jo
stos
push
push
prefetchw
sbb
add
mov
fists
cmp
sarl
loop
fimull
insb
push
pop
sub
rcrl
jno
sbb
dec
sahf
cli
push
cmp
sub
data16
stos
movsb
and
sbb
in
push
dec
das
aas
adc
daa
xchg
push
inc
jne
nop
enter
shrl
xor
sbb
subl
cmp
cwtl
push
cmp
cmp
mov
push
xor
fnstenv
xchg
cmp
insb
cmp
rcl
dec
jbe
xchg
sub
in
imull
xchg
sbb
pop
push
test
cmpsb
pop
sub
mov
xchg
xor
add
push
mov
dec
dec
mov
jb
mov
loop
call
outsl
push
imull
push
push
dec
pop
jle
add
fcmovnu
inc
pop
test
rcr
lret
fstl
mov
bound
xor
xor
ret
push
or
mov
jg
leave
jmp
pop
ds
sub
std
in
icebp
mov
sbbb
pop
or
mov
pop
mov
pop
adc
adc
mov
xor
js
sbb
xor
aam
mov
out
dec
movsb
push
xchg
mov
inc
push
dec
xor
std
xchg
mov
shrl
jle
cmovle
outsb
pushf
inc
sub
dec
movsb
je
imul
leave
mov
inc
loope
lock
adc
or
xor
ja
push
sub
ret
idivl
and
adc
fildll
lret
pop
push
mov
aad
in
repz
jo
dec
stos
popf
dec
mov
sub
mov
xchg
nop
popa
cmp
push
mov
or
int
inc
pushf
pop
inc
cmpsb
int
add
rclb
add
push
fidivs
gs
adc
pop
dec
jne
cs
pop
ljmp
xor
push
xchg
dec
mov
in
cmp
sbb
mov
xchg
dec
add
cli
ljmp
imulb
adc
cmpsb
jnp
iret
add
adc
mov
push
mov
pop
lahf
jl
pop
push
mov
pop
outsl
pop
or
and
or
mov
push
inc
sub
flds
popa
mov
and
fldenv
mov
fwait
test
cmpl
std
cmp
jb
cmp
out
rolb
cmp
lret
loope
addr16
sub
loope
inc
and
loope
sbb
sub
test
in
mov
jle
mov
arpl
push
imul
adc
pushf
adcb
or
push
and
lcall
frstor
jne
test
stos
js
int
and
out
add
mov
lods
cmp
add
mov
pop
dec
sub
cmp
enter
pop
das
mov
or
mov
sahf
sub
add
or
loopne
negb
sysret
inc
add
or
dec
jne
pop
pushf
push
ret
lret
sbb
in
xlat
test
adc
mov
addr16
jo
mov
mov
push
movsl
lret
lods
test
xor
add
aaa
fcmovnbe
aad
or
xor
push
xchg
inc
imull
cmpsl
icebp
notb
inc
sahf
or
js
and
imul
mov
les
das
and
fimuls
or
stos
xchg
dec
jne
je
movsl
or
or
fbld
cmp
cmp
adc
push
adc
jno
fmull
pop
xchg
fcomip
out
xor
add
jo
adc
sub
cltd
xlat
mov
mov
daa
call
xchg
iret
and
les
in
cmpsb
inc
adc
movsb
test
sub
xor
test
lcall
push
notl
int
adc
mov
xchg
push
and
xor
pushf
ficoml
shrb
negb
movsl
out
gs
xor
pop
mov
ss
or
mov
sbb
inc
pop
subl
add
add
xor
aaa
fdivr
pop
scas
stos
xchg
js
mov
dec
pop
jg
lock
mov
repnz
packuswb
shlb
adc
aad
stc
in
mov
popa
movsl
arpl
mov
xchg
pop
mov
fnstcw
pop
es
dec
iret
out
adc
inc
test
sub
shlb
or
jg
sub
mov
ficomps
fstpl
xchg
sbb
stos
cmp
dec
and
xorl
dec
jne
rol
push
mov
inc
adc
xor
pop
insb
mov
lods
mov
adc
push
bound
cmpsb
test
cld
ret
cmp
xor
iret
loopne
movsl
adc
sbbl
pop
mov
nop
mov
xor
sub
enter
cmp
jno
cmpsb
mov
adc
cmp
xchg
adc
dec
repnz
outsl
int
nop
push
dec
out
and
out
mov
fisttps
pop
mov
cmp
out
adc
jmp
das
mov
arpl
movsb
insb
xchg
xchg
je
mov
dec
stos
cmpl
pop
fwait
jo
sub
sbb
mov
pop
mov
and
jbe
xchg
mov
lret
and
jmp
je
aad
repnz
icebp
mov
test
std
jb
fcomip
stos
mov
mov
call
sbb
xor
imul
cmp
and
pop
fisubl
mov
cs
dec
out
jle
adc
xchg
int
popf
add
cmp
cmp
mov
in
pushf
test
or
orl
std
mov
sbb
imul
xchg
fsubs
outsl
add
push
add
rorl
jb
pop
push
cmp
mov
mov
cmp
adc
push
pushf
scas
pop
cmc
sub
mov
aaa
xchg
je
or
int3
inc
mov
mov
pop
mov
inc
jae
outsb
jle
mov
inc
and
lcall
ljmp
push
hlt
out
dec
pushf
add
hlt
jb
cltd
arpl
mov
scas
fwait
mov
sub
sub
pop
das
pop
movsb
test
jle
or
leave
jp
adc
jns
neg
ds
loope
lds
or
icebp
add
adc
add
lds
ret
movsb
inc
cmp
and
scas
and
inc
mov
in
jae
lds
das
fcompl
dec
scas
inc
out
out
mov
dec
scas
call
xchg
jp
pusha
pop
pop
cmp
lret
insb
repz
pop
fucomip
push
dec
push
mov
clc
sub
call
movsl
and
xchg
and
testl
sbb
jo
adc
movsb
inc
cmc
in
inc
cmp
cmpsl
addr16
xlat
ja
xchg
pop
in
test
mov
adc
pushl
cmp
cmp
push
call
fiaddl
aaa
pusha
mov
bound
dec
sbb
mov
mov
push
lock
add
stos
inc
loope
xlat
jle
sbb
mov
out
arpl
shlb
mov
xchg
adc
sahf
add
repnz
int
cld
shr
xorl
inc
cmc
inc
mov
out
call
aas
movsb
mov
jl
adc
nop
dec
sbb
cmp
jge
mov
imul
and
push
xchg
cmp
mov
or
push
test
ret
sbb
mov
shrb
out
cmp
mov
xchg
mov
and
add
push
add
mov
out
inc
push
xor
jnp
out
and
dec
mov
cmp
aas
add
int3
mov
inc
cmp
cmp
xchg
sub
lea
push
insb
jns
pusha
in
decb
sub
xchg
jmp
cmp
mov
daa
dec
cmpsb
dec
adc
loope
shlb
repnz
out
popa
sahf
jg
xchg
and
les
repnz
mov
sub
push
cmpsb
add
add
or
push
into
pop
lahf
scas
xchg
popa
sub
pusha
cmp
adc
test
rcr
inc
lods
clc
or
arpl
fsubp
mov
and
xchg
mov
divb
stc
mov
gs
mov
pusha
cltd
lcall
in
xchg
outsl
mov
leave
in
pop
pop
fstl
in
inc
inc
ss
add
outsb
or
fists
xchg
xchg
daa
sbb
push
sub
lods
add
cmp
push
pop
out
mov
popf
or
add
cli
pop
int
fistpl
xor
adc
ret
rorb
int
sar
pushf
nop
sti
popf
pushf
sbb
addr16
xor
inc
dec
pop
dec
xchg
shr
add
adc
test
les
ret
dec
rorl
rcrb
cmpsl
pop
cmc
mov
cmp
es
sub
popf
cmp
sub
mov
dec
push
xchg
lcall
push
add
mov
cli
sub
mov
add
mov
mov
sub
xlat
cmp
mov
jnp
inc
test
jg
icebp
int3
inc
xlat
lea
push
lods
js
in
mov
or
lods
dec
fpatan
sub
push
popf
rcl
or
enter
mov
fcoml
push
pop
lret
inc
xor
pop
pop
jo
popf
call
iret
int3
push
cltd
test
aaa
push
xchg
lea
add
xchg
sahf
jae
test
std
pop
adc
cli
pushf
mov
push
and
ret
sahf
mov
shrb
in
insl
outsl
inc
scas
cmpsb
das
out
xchg
add
aam
cltd
pushf
stc
loopne
and
mov
icebp
sbb
ret
or
cltd
clc
popl
add
pop
pusha
or
out
jbe
jmp
xchg
enter
in
pop
test
jae
sbb
stos
repz
fwait
test
adc
xchg
mov
ss
xchg
jbe
push
xor
ljmp
dec
pop
push
idivl
mov
bound
dec
mov
xchg
push
fs
fdivs
mov
sti
cltd
je
mov
and
into
cmp
push
xorb
rorl
call
movsb
adc
aaa
pop
andl
cld
mov
adcb
cmp
clc
sbb
inc
add
lods
test
pop
add
jge
popf
test
or
test
xchg
jbe
push
or
cmp
jae
xor
mov
ja
mov
mov
cld
arpl
repz
fcmovne
cmp
push
xchg
fisubrl
mov
gs
mov
loop
js
lods
lahf
pop
adc
jbe
or
cmpb
ficompl
sub
hlt
push
in
inc
jp
in
stos
mov
mov
iret
push
js
push
imul
mov
cli
lds
stos
pop
push
mov
cltd
test
jns
xor
sbb
lret
adc
outsb
ljmp
push
inc
pop
sub
cmpb
ljmp
jo
jmp
stc
or
xor
clc
out
fs
mov
jle
jp
sbb
fwait
add
shrl
jbe
ret
loopne
pushf
ja
pop
xchg
inc
cmp
out
std
ret
and
dec
cmpsb
into
test
sbb
xlat
mov
add
xor
mov
iret
movsb
fists
dec
outsb
scas
pop
dec
push
push
lret
mov
push
sub
test
sub
cmpsl
cmpsl
inc
xor
repnz
lock
mov
dec
cwtl
fs
mov
mov
aad
neg
dec
movntq
xor
xchg
lahf
shl
imul
bound
cmc
xchg
dec
in
das
pop
jecxz
cs
lret
int3
mov
insl
incl
pop
xor
fcmovnb
je
out
test
movsb
adc
cmp
adc
adc
scas
test
cmp
imul
mov
ffree
xchg
inc
sbb
mov
stos
jmp
sub
arpl
push
imul
lock
mov
cli
dec
or
lods
in
enter
int
xor
jle
arpl
xchg
lret
jo
das
les
pop
aad
out
stos
xchg
stc
jnp
mov
shr
mov
adc
sbb
adc
loopne
jmp
mov
and
out
fdivl
mov
clc
xor
mov
mov
mov
popl
and
mov
scas
push
ficompl
mov
in
sub
mov
stos
xchg
loope
in
rcl
sbb
mov
enter
jecxz
cmp
cmp
cld
pop
sbb
shrl
dec
out
dec
dec
sub
or
pop
cmp
sub
test
popf
shll
add
ret
cs
push
repnz
mov
jle
xlat
dec
inc
ss
cltd
xor
jne
jno
imul
xchg
repnz
push
mov
es
mov
mov
push
mov
mov
testl
sub
les
push
aas
arpl
int
xchg
das
xchg
and
xor
mov
mov
addb
scas
frstor
js
or
fs
push
bound
jb
jle
jns
push
in
xchg
test
inc
add
rcr
or
inc
sti
dec
enter
test
iretw
loope
mov
sub
dec
inc
nop
mov
rol
sub
mov
mov
ja
fimuls
cwtl
jecxz
xchg
mov
sub
mov
sti
mov
fwait
mov
out
inc
out
fistpl
jp
imul
sub
or
push
enter
jle
scas
mov
fstpt
or
dec
or
xlat
popa
into
jge
fnsave
mov
mov
jne
adc
push
xchg
add
imul
mov
dec
out
and
push
sub
cmp
mov
mov
jp
jmp
sbb
es
sbb
ja
xlat
andb
jmp
pop
daa
xor
adc
stos
jnp
add
inc
sub
les
arpl
xchg
insl
jmp
dec
push
mov
into
or
sub
leave
xchg
jb
jl
sti
test
inc
xor
dec
dec
sbb
das
sub
repnz
add
and
ficompl
mov
sub
mov
mov
xchg
sti
fcomps
movsb
xor
lock
loope
push
jns
jno
jge
xchg
hlt
clc
mov
xlat
aad
add
push
out
data16
push
adc
sbb
scas
in
in
fistpll
addr16
out
cmp
lret
jp
sub
popa
mov
push
lods
test
push
push
adc
outsl
mov
popa
pusha
push
mov
lds
mov
lods
cld
loopne
scas
dec
imul
pop
dec
xor
lods
idivl
xchg
push
scas
scas
pop
xchg
mov
lret
push
fidivs
adc
xor
xchg
out
mov
int3
int
aas
fmul
lret
popf
xchg
adc
push
sbb
cmpsl
cmp
jmp
mov
jp
jp
or
iret
jo
jmp
loop
jmp
mov
call
push
cmc
inc
pop
pop
loope
adc
sub
jmp
jno
push
xchg
adc
cvtps2pd
add
lcall
faddl
mov
sbb
shl
filds
mov
ss
fldln2
int
jb
mov
mov
sbb
popa
lret
pushf
shlb
xor
jge
sub
das
icebp
mov
stos
stc
mov
jmp
and
test
pop
inc
stc
int
pusha
xchg
mov
mov
leave
cmp
xor
bound
cmpsl
repnz
cmp
cmc
sub
adc
sbb
mov
nop
fisubl
js
nop
dec
mov
insl
fs
std
jle
jl
mov
fiadds
xor
push
test
xchg
icebp
push
add
or
out
inc
push
mov
rcrb
scas
add
jb
es
dec
inc
push
sub
arpl
cmpsb
mov
cmpb
jle
xchg
stos
mov
dec
shlb
mov
insl
cltd
lea
lea
jno
push
mov
mov
xor
push
xor
pop
dec
jbe
stos
or
inc
mov
pushf
mov
mov
mov
shll
and
adc
andl
adc
movsb
fimull
sub
sbb
jnp
inc
jne
xor
jo
out
or
sub
adc
daa
and
pop
aad
imull
sbb
adcb
lret
lds
and
add
pusha
or
es
ja
jecxz
mov
movsl
sub
sub
subl
push
lret
push
das
leave
adc
shrb
mov
movsl
sub
das
lahf
daa
mov
inc
push
pop
xchg
and
in
xchg
pop
inc
adc
push
lret
push
xchg
and
xchg
mov
in
cmp
adc
js
scas
mov
ja
out
cli
mov
xlat
xchg
test
jno
sub
cmpsb
push
test
jo
jge
popa
dec
xor
aas
cmp
mov
lahf
push
inc
aaa
pop
test
ja
in
repnz
call
cmpsb
cmpsb
cmp
das
ja
in
xchg
or
sahf
pop
cli
sbb
mov
mov
sahf
cmpsb
mov
or
sbb
dec
popf
cmpl
sub
cmc
and
pushf
cmpxchg
clc
mov
mov
sbb
cwtl
push
xchg
inc
sbb
rorl
mov
and
or
add
push
inc
jmp
data16
iret
loope
xor
fs
sub
jle
adc
les
push
add
fstps
iret
cwtl
shll
addb
or
ror
popf
jge
mov
rcl
call
mov
clc
call
es
and
pop
push
dec
pop
hlt
in
cmp
mov
movsb
or
jge
addl
lods
bound
and
adc
xchg
dec
test
and
js
lods
sti
sbb
mov
inc
inc
dec
and
mov
and
mov
nop
ret
and
xchg
add
xchg
in
push
sarb
xor
sbb
jns
push
rorl
adc
repnz
jnp
mov
mov
or
jecxz
aad
cmp
or
pop
insl
das
and
inc
stos
cwtl
fldpi
mov
je
negl
mov
aaa
pop
xchg
inc
iret
sti
ss
scas
fsubs
pop
mov
loope
sub
test
jo
pop
cmp
pop
ss
xchg
xchg
addr16
cmp
pusha
sbb
daa
roll
push
jae
ficompl
cmp
arpl
push
rclb
inc
shlb
adc
aad
sbb
jns
jb
hlt
fcmove
jle
xor
loop
popf
mov
xor
prefetchw
or
mov
fisttpll
xor
cmp
addr16
jb
sub
rcrb
ja
out
divl
loop
cmpsb
rorl
and
or
xchg
inc
or
xlat
call
int
movsl
add
xchg
mov
adc
stos
xor
cmp
mov
xor
lods
ficompl
mov
cmp
fstl
or
pop
or
jge
int3
test
aad
out
add
leave
lock
popa
mov
decl
cltd
and
mov
add
xor
fcomip
or
adc
push
cmp
test
jp
jmp
rolb
out
adc
or
jne
mov
imul
mov
sti
int
add
aam
xchg
mov
xchg
loope
insl
ss
pop
pop
push
dec
pusha
push
lds
mov
cs
pop
cmp
test
scas
inc
jns
insb
inc
jmp
xlat
ret
pop
mov
mov
movsl
neg
add
xchg
or
xor
jnp
push
mov
js
pop
in
divb
iret
dec
adc
incl
loopne
push
xor
ja
pop
daa
xor
pop
pusha
jns
out
add
icebp
or
loopne
pop
push
rcrl
xlat
mov
push
xchg
std
jmp
jne
mov
inc
or
enter
packsswb
iret
loopne
xorb
push
or
mov
adc
xchg
subps
xchg
lret
mov
or
mov
ss
fcomip
imul
dec
adc
mov
repnz
nop
xor
mov
into
jb
je
inc
push
clc
mov
inc
mov
xor
fcoms
jl
push
ja
xchg
xchg
shlb
sub
add
ss
mov
jecxz
sahf
push
rcrl
push
inc
inc
xchg
das
andl
mov
ficoms
adc
mov
sbb
sbb
pop
es
jmp
push
mov
imul
xchg
ficoml
fidivl
push
mov
or
inc
js
push
xor
lret
cmp
pop
inc
movsl
scas
lods
cmc
mov
testl
pop
dec
fdivrl
nop
in
add
sbb
out
test
aad
lret
xor
test
adc
xchg
ss
movsb
and
insl
xchg
mov
fnsave
xchg
scas
cli
push
sahf
fidivrs
and
out
shl
jecxz
imul
cmpsl
lea
das
lea
mov
outsl
sahf
popf
inc
adc
lea
stc
inc
stos
pop
jp
imul
mov
push
xorl
arpl
add
dec
jb
test
lea
sub
or
insb
xchg
sbb
icebp
pushf
and
cs
cmp
jmp
in
in
adc
mov
or
pop
xchg
pushf
inc
loop
xor
dec
dec
pop
out
int3
push
dec
sbb
inc
cmp
stos
ret
subl
aas
sbb
mov
xor
sbb
daa
jge
dec
or
lahf
out
pop
aas
outsl
or
or
xchg
sahf
mov
dec
dec
sbb
fmul
or
ficoml
fwait
jg
mov
dec
xlat
insl
aaa
sbb
and
or
roll
push
fwait
mov
and
xabort
or
addr16
mov
pop
pop
je
pop
sub
bound
cmp
loopne
dec
or
in
mov
cmp
mov
inc
jecxz
shll
add
mov
xlat
sbb
dec
rorb
mov
out
fcom
shrl
es
add
xor
pop
insb
push
xor
sub
hlt
sbb
xchg
gs
nop
sub
mov
mov
pushf
test
sbb
adc
mov
xchg
dec
cli
imull
cmp
leave
je
shlb
sbb
out
clc
sbb
pop
xor
inc
out
movsl
push
dec
mov
mov
fstpt
popl
jnp
sbb
ds
jg
lret
cmp
lds
pop
shl
add
dec
lods
or
jne
pcmpeqb
mov
aad
leave
enter
out
adc
gs
inc
in
lahf
mov
mov
repnz
jb
mov
mov
jecxz
lcall
mov
jbe
xchg
jo
leave
jle
or
mov
xchg
jg
add
jp
inc
xchg
les
das
xchg
and
mov
jnp
sub
pop
and
push
pop
stos
std
lret
mov
sbb
aad
orl
or
test
adc
nop
mov
fs
lods
rdmsr
scas
pop
xchg
mov
lcall
inc
xchg
push
jecxz
push
out
adc
cmpsb
sbb
and
fildl
jbe
sub
imul
mov
pop
mov
aaa
add
int3
pop
rorl
sti
mov
adc
iret
jmp
cmp
shlb
push
dec
cmp
sbb
cmp
jnp
aam
loopne
leave
sahf
shl
roll
push
enter
push
scas
jnp
sbb
sbb
mov
ss
jnp
movaps
mov
jae
xchg
pop
lret
cli
pop
std
add
lahf
sub
push
cmp
add
mov
gs
mov
and
daa
lods
popf
mov
pop
or
leave
pop
shlb
shlb
popf
icebp
rolb
in
fwait
insb
bound
push
inc
gs
std
loop
daa
push
jno
stos
out
rclb
adc
jno
inc
stos
inc
push
jno
sub
mov
cmpsl
hlt
sti
sbb
xchg
push
pop
add
ds
push
sub
jne
adc
fistl
outsl
fidivs
mov
fxch
stos
aaa
clc
subl
dec
dec
loopne
cmpsb
mov
dec
mov
inc
repz
cmp
test
lahf
push
mov
mov
and
add
in
arpl
mov
xchg
sub
mov
adc
dec
and
nop
cld
dec
jecxz
dec
jmp
jnp
outsb
mov
ret
fsubl
xchg
xor
sub
js
sbb
div
ljmp
lahf
in
repz
pop
dec
fs
xor
adc
pop
push
push
mov
jae
pushf
mov
pop
and
xlat
xchg
int
rorb
sbb
mov
loop
cmp
mov
fdivrl
dec
xchg
sahf
stos
lods
mov
mov
push
inc
mov
xorl
std
cli
insl
dec
xor
test
out
out
js
lds
imull
aad
pop
test
and
ss
movl
repz
cltd
xlat
push
xchg
js
imul
xchg
sub
cmp
loopne
jne
cmp
aam
xor
lret
clc
fistps
dec
xor
dec
jae
mov
xchg
lods
cmp
daa
push
sub
filds
ljmp
nop
push
dec
stos
and
mov
icebp
ret
arpl
stos
xchg
push
rcr
cmpsl
js
stos
jmp
mov
scas
rcrl
popa
je
stos
cmp
fs
das
add
test
sub
ficomps
inc
mov
test
xchg
fidivrs
and
or
cld
pop
movsl
aas
cs
ret
stos
sbb
into
adc
mov
adc
mov
frstor
jno
cli
jbe
inc
sub
subb
aaa
rorb
cmpsb
nop
repnz
jg
lods
xchg
dec
sbb
push
decl
iret
clc
sbb
pop
movsl
aad
popl
ljmp
mov
cli
aam
aam
xor
cli
push
pop
repnz
sub
mov
cli
lds
sti
fistps
fcoml
mov
xor
sub
or
add
outsl
jo
gs
pop
mov
in
repz
and
mov
lcall
loop
jle
add
sarb
jno
jno
jl
push
inc
inc
pop
xor
out
sbb
arpl
jne
shll
ret
pop
inc
push
add
cmp
call
mov
mov
into
pop
jmp
out
shll
push
xlat
daa
adc
jecxz
sbb
outsb
xor
cmp
mov
xlat
lods
sarl
push
test
pop
inc
push
pop
out
mov
icebp
cmpsl
or
in
rolb
sbb
inc
cmpsb
decb
or
fs
pop
cmp
adc
sub
lret
fsubr
pop
pop
jmp
and
std
test
jo
rclb
sub
int3
xchg
in
scas
gs
fnsave
sub
fs
add
inc
xchg
loope
pop
sbb
cmc
movsb
jno
loopne
test
cmpsb
bound
cmp
lea
mov
pop
notb
cmp
rorl
aam
mov
or
xchg
andl
inc
pop
sahf
pop
daa
xchg
mov
and
int
xor
mov
hlt
add
clc
negb
push
xchg
sub
sbb
pop
add
push
xor
xchg
inc
out
mov
cmc
mov
xchg
or
pop
outsb
mov
sarb
pop
pop
add
or
cs
adc
sub
rorl
cmpsb
outsb
adc
add
shrl
mov
inc
mov
ret
dec
mov
push
sbb
cwtl
jle
sub
rcrl
lcall
xor
inc
leave
test
inc
ret
ret
cld
adc
mov
add
push
fs
enter
xchg
in
push
mov
incb
test
insb
cmc
or
cli
lods
cmpsb
jo
sbb
mov
pop
mov
pop
cmp
ds
sbb
pusha
imulb
add
jae
add
pushf
out
repz
in
inc
scas
pushf
ret
nop
cmp
in
push
mov
jmp
push
and
mov
hlt
adc
lods
and
popf
pop
and
pop
push
mov
sub
out
add
stos
xchg
and
fidivs
jo
mov
das
fldcw
add
daa
les
fldcw
ds
adc
and
xor
out
mov
push
and
push
push
add
inc
add
and
ja
iret
das
mov
dec
test
sub
dec
lret
outsl
or
push
pop
aaa
inc
imul
mov
inc
pop
xchg
cld
mov
mov
fsub
xchg
mov
cld
or
pop
xchg
jno
loopne
xchg
popf
sahf
loope
mov
push
jmp
xor
jae
call
lods
xor
mov
mov
repnz
leave
xor
adc
js
dec
sti
into
int3
mov
push
pop
or
fs
jge
clc
insl
cmpsl
mov
sub
mov
enter
mov
mov
stos
iret
int
lods
and
inc
mov
xorl
push
pop
repnz
scas
enter
rcll
xor
jmp
mov
add
ret
sbb
or
cmp
data16
gs
ss
push
lds
mov
lods
pop
jle
roll
jecxz
xchg
xchg
mov
fistpl
cmp
cli
cmpsb
bound
jl
jbe
fstps
std
arpl
pop
dec
sub
sub
fucomi
movups
mov
xchg
addr16
fucomi
mov
push
adc
mov
sbb
dec
cmp
ret
inc
cltd
fnstcw
sbb
xor
push
add
xchg
inc
push
dec
daa
or
xor
faddp
sub
dec
cmpsl
pushl
sahf
decb
push
imul
pop
push
rclb
ja
jmp
push
mov
cmp
mov
mul
pop
hlt
movsb
das
aad
push
mov
pushf
mov
cmp
cmp
dec
dec
std
sub
pop
loopne
std
push
xchg
into
stos
pop
pop
loop
xchg
arpl
sbb
cmp
lock
inc
adc
cmpsb
rcr
hlt
in
ficoml
cmp
push
mov
mov
popf
inc
fmuls
mov
xor
lds
xor
add
fpatan
ja
adc
inc
mov
mov
mov
out
lods
jbe
sub
pop
dec
ljmp
rolb
xchg
pop
push
xchg
ret
test
or
adc
mov
add
andl
popf
push
fwait
icebp
cwtl
push
ss
mov
lock
mov
mov
add
add
fcomp
jmp
call
inc
mov
repz
sarl
mov
or
mov
mov
inc
add
add
in
outsl
insb
loop
scas
or
jmp
pushf
sub
xor
rol
push
mov
in
lods
clc
jns
xlat
pop
dec
xchg
inc
sbb
ljmp
xorb
fisubrs
fcmovnbe
pop
pushf
jno
adc
cmp
pop
mov
add
enter
mov
or
inc
mov
add
out
repz
pop
dec
mov
sbb
adc
out
adc
imul
xlat
mov
aad
daa
sbb
stos
xchg
push
push
inc
mov
mov
mov
inc
rorb
dec
mov
jno
or
lea
mov
test
clc
fildl
dec
xor
or
rcl
adc
xchg
xchg
cmpsl
and
lret
in
xchg
sbb
or
gs
jo
add
pop
mov
ret
pop
xor
and
scas
scas
pop
popa
cmp
test
stos
xorl
mov
inc
adc
pop
or
out
lret
dec
inc
mov
jmp
loopne
je
lcall
xor
adc
and
out
mov
xchg
mov
dec
das
jae
adc
and
js
and
mov
xchg
jo
out
inc
scas
mov
jmp
movsb
and
into
xbegin
inc
shrb
jnp
ja
or
or
cmp
sbb
cmp
imul
imul
mov
pop
xor
or
mov
mov
lods
mov
ja
in
test
mov
out
aas
sub
repz
cmp
mov
enter
inc
dec
inc
add
jnp
sbb
add
loop
es
mov
pop
fmuls
mov
dec
xor
mov
pop
pop
sub
scas
fdivr
push
pop
ficomps
enter
and
jno
or
lock
fildll
jl
inc
mov
loope
mov
stc
icebp
xor
add
sub
and
outsb
dec
leave
adc
cld
ljmp
stos
sbb
add
sub
or
lcall
stc
add
shrb
and
sbb
and
dec
sub
xchg
push
mov
push
icebp
push
jge
xchg
ret
stc
test
xchg
jo
cmp
pop
push
notb
cmp
push
push
mov
mov
jnp
cmp
pop
or
push
ljmp
int3
gs
mov
loope
fmuls
sbb
and
cltd
aas
adc
fidivrs
dec
pop
add
stos
loop
lds
pop
jecxz
ja
xor
int
push
mov
cmp
xor
hlt
test
jbe
imul
cmpsl
cmc
adc
iret
mov
xchg
jp
pop
adc
or
pop
lahf
inc
xor
outsb
fmull
aaa
adc
loop
sub
ret
cmpsl
pop
dec
inc
mov
cmc
and
ret
push
aam
repnz
loope
call
in
mov
pop
mov
addr16
cld
jge
or
jge
data16
lret
sub
xchg
sub
mov
lods
imul
adcl
addr16
aam
dec
in
test
ret
inc
ja
push
dec
dec
leave
push
xor
scas
mov
and
sbb
incl
daa
mov
cwtl
loope
repz
das
insb
test
jle
jp
and
pop
fistpl
ficompl
fisttpll
outsl
out
push
xorl
fs
adc
es
inc
test
push
repz
cmpsb
adc
xor
jg
cmp
and
loop
adc
lahf
out
mov
and
std
mov
lahf
pop
repnz
xor
daa
cmp
je
mov
jbe
lcall
rcll
pusha
bound
jle
imul
roll
jg
icebp
int3
mov
fisttpll
xchg
inc
loop
mov
scas
or
icebp
xchg
xchg
dec
xchg
cmp
cmp
dec
xor
jbe
cmc
rcrl
int
xchg
filds
inc
aaa
lcall
dec
dec
mov
fstpl
sub
repnz
push
push
insb
movsb
sbb
mov
lods
dec
mov
mov
xchg
pushf
jp
fdivr
add
je
mov
lds
popa
jbe
dec
test
inc
xor
or
ss
ftst
imul
add
mov
jl
jns
pop
bound
pop
addl
popf
int
add
lea
push
or
icebp
negb
std
jbe
cmp
add
add
push
ja
stos
push
mov
aam
enter
divl
push
in
pop
mov
sahf
aam
sbb
sti
or
mov
stos
inc
or
bound
lret
or
mov
test
dec
and
inc
dec
push
je
add
roll
pop
xchg
into
int
test
push
sub
xor
out
loopne
int
xchg
adc
pop
jno
pop
loope
mov
xchg
scas
scas
mov
out
sbb
dec
lahf
dec
arpl
adc
pop
push
clc
fstps
pusha
jnp
out
ja
scas
mov
inc
hlt
mov
fcom
leave
mov
xor
ret
push
cmp
push
int
aaa
adc
pop
adc
xor
sbb
test
mov
and
andl
sarl
lcall
mov
ja
aad
sub
and
push
jge
inc
mov
and
faddp
cmpb
fdivl
insb
das
jae
pop
or
adc
pop
push
inc
xchg
ljmp
adcb
mov
dec
fcmove
in
pop
add
sub
in
addr16
and
mov
jne
lods
pop
and
scas
mov
stos
fiaddl
pop
or
je
sbb
sub
inc
outsl
inc
lahf
xchg
daa
fnclex
stos
xor
push
push
sbb
xorl
push
cmp
xadd
sbb
mov
or
sahf
je
and
cmp
sbbl
repz
jge
ss
cmc
xor
scas
mov
lods
loop
or
lock
lock
push
fiadds
mov
mov
movb
cmp
cltd
cmc
pop
push
decb
paddb
add
in
jo
imul
fs
xor
rcrb
adc
cmp
iret
mov
lock
xor
cmp
pop
xlat
jp
clc
test
nop
loopne
imul
lea
lahf
test
dec
pushf
mov
xchg
push
ljmp
xor
push
subb
es
mov
and
or
sbb
xor
fwait
aaa
jae
cmp
adc
jp
pop
xchg
daa
ret
imul
mov
xor
aad
aam
and
leave
xchg
push
lahf
ret
cwtl
fs
insb
inc
dec
cli
mov
ret
cmpsb
icebp
loopne
sbb
fwait
cmp
loopne
sbb
loope
sbb
loop
xchg
mov
inc
fs
add
jne
and
or
pusha
call
push
shl
in
jno
xlat
decl
sub
pop
jb
jb
lock
xchg
mov
cmpl
das
cmc
adc
mov
push
push
dec
xchg
mov
inc
adc
ds
aam
mov
cmpsb
push
xor
xor
xchg
jl
cwtl
mov
xchg
fildll
stos
and
mov
xor
or
cmc
cld
inc
aaa
fidivrs
flds
fstpt
mov
push
pop
js
jmp
cs
orb
cmp
pushf
mov
cmp
mov
cmp
xor
inc
or
xchg
add
or
pop
add
pop
pushf
push
ja
ds
add
inc
mov
xchg
fistpll
sub
and
and
and
cmp
xchg
sbb
add
mov
jmp
sub
clc
hlt
mov
dec
aas
pop
aaa
ljmp
cmp
and
rorl
push
test
in
cmp
jo
jmp
push
add
sbb
pop
xor
stos
or
in
aas
jb
adc
add
jno
stc
in
jecxz
not
push
sub
adc
add
std
jo
fucom
mov
push
stos
movsb
inc
push
mov
insb
and
inc
mov
notl
sub
adc
lods
stos
push
fdivrl
arpl
or
arpl
fnsave
cmpsb
andb
mov
dec
test
in
or
xchg
dec
cmp
dec
pop
push
inc
cmp
push
or
mov
outsl
sbb
mov
loope
dec
xor
sub
sahf
into
addr16
jbe
jno
lret
and
xor
aas
mov
pop
pushf
xchg
cmp
xor
push
jns
inc
xlat
adc
or
mov
insl
clc
adc
dec
dec
popa
daa
xchg
in
push
decb
rolb
rclb
daa
nop
sti
ret
pop
jg
cmpb
push
and
jno
pop
cmpsb
ja
mov
push
arpl
fcoml
hlt
adc
sbb
ror
xchg
mov
lods
mov
addb
jp
daa
sbbl
lods
xchg
scas
inc
cmp
scas
loop
ret
cld
xchg
dec
fiadds
loop
jmp
shll
test
hlt
lods
pusha
mov
fstpt
movsl
outsl
sar
repnz
mov
jno
push
sub
pushf
inc
cmp
jle
pop
push
jne
insb
cmpsl
push
daa
mov
aad
movsb
inc
scas
mov
testl
lods
mov
mov
fildll
adc
lds
je
test
inc
sahf
pop
mov
test
int
add
mov
inc
scas
inc
cmp
out
sbb
xchg
dec
adc
and
pop
imulb
inc
cltd
fcomp
pop
mov
xor
sub
lret
inc
mov
sbb
mov
sahf
xchg
mov
sub
pop
push
sub
sub
jge
xlat
or
ja
and
movsl
push
jb
sahf
sub
and
test
stc
sbb
xchg
jns
ret
or
cmp
roll
dec
inc
adc
xor
or
inc
pop
std
cmp
inc
inc
add
and
aad
jp
xlat
nop
decl
dec
outsb
ret
mov
cltd
xor
cmpsb
mov
xor
cmp
jb
out
fdivs
cmp
test
inc
mov
mov
cmp
xor
ret
fs
aas
dec
inc
js
adc
stc
or
adcl
cmc
cmp
arpl
pop
nop
cmpsl
dec
imull
add
into
cltd
mov
mov
bound
lahf
dec
cmp
dec
cld
js
das
stos
jmp
arpl
and
mov
dec
ja
scas
subl
push
push
ja
pushf
jp
dec
jmp
inc
sub
dec
xorb
pop
jnp
jo
or
aad
insb
repnz
daa
cwtl
call
hlt
mov
int
fwait
ljmp
rep
shll
pop
xor
shlb
fnstenv
insl
xchg
xor
enter
lods
or
cmp
repz
push
out
mov
xor
addb
test
int
rorl
pop
mov
dec
stos
hlt
or
cwtl
mov
pop
lock
mov
stos
cmp
add
imul
push
push
pop
jnp
pop
sub
sbb
jb
cmc
cwtl
push
jae
repnz
mov
mov
cwtl
jl
hlt
sub
inc
aas
xchg
mov
xchg
xlat
fstpl
jne
adc
cli
add
sbb
sbb
push
mov
mov
fmull
mov
pop
inc
inc
mov
adc
xlat
push
stos
stos
jbe
jg
lcall
push
inc
add
fstps
and
pop
push
rcll
pushf
gs
sub
pop
cmp
movsb
mov
xchg
jmp
les
sahf
jno
mov
push
xchg
subb
cmp
adc
jecxz
bnd
sbb
push
pushf
aad
cmp
mov
jbe
cmp
inc
test
bound
xchg
call
sbb
sbb
inc
imulb
movsb
sbb
jge
jp
dec
fimuls
pop
lods
scas
lock
loope
and
pop
jge
push
jmp
adc
adc
sbb
lods
sbb
repnz
fwait
cmp
pop
jns
ds
dec
or
arpl
adc
xchg
or
loope
imul
sub
xchg
xchg
cld
sub
cmp
jno
and
xor
jg
call
fdivrp
adc
mov
adc
imul
ret
pop
rorb
xchg
cmc
int
mov
fadds
cmc
sbbb
call
pop
and
cld
mov
aad
cmpsl
mov
int3
push
cltd
push
popf
fwait
sbb
push
in
sbb
or
xchg
adc
jnp
sbb
pop
fcmovne
dec
aaa
dec
dec
jmp
mov
jge
and
cmpsb
mov
sub
mov
negb
push
xor
sub
add
dec
ror
mov
into
jle
imul
mov
mov
orb
and
daa
stos
sbb
addr16
lret
enter
lods
inc
dec
aam
cld
add
std
imul
fs
pop
push
repz
mov
add
imul
into
or
test
xor
mov
xor
xchg
mov
sbb
jnp
inc
repz
or
test
inc
stc
cmpsl
add
add
outsl
jne
mov
mov
inc
mov
repz
pop
sbb
jae
sub
mov
sbb
dec
push
fldt
je
mov
xor
aad
mov
lcall
adc
xor
aad
mov
std
dec
xor
xchg
sbb
jle
sub
and
test
ds
xor
push
pusha
mov
out
jmp
lds
cmc
mov
inc
pop
pusha
subb
mov
cmp
test
jl
fs
mov
repz
jp
ss
mov
int3
mov
lcall
aad
mov
mov
addl
call
adc
ficoms
ds
es
sbb
pop
and
dec
repnz
fnstenv
cmp
mov
rorb
hlt
adc
and
lahf
out
mov
mov
lret
adc
dec
xchg
cmpl
cmpsb
hlt
mov
or
fcoms
add
movsb
call
ret
daa
jns
inc
fs
repnz
and
insl
mov
jne
sbb
out
mov
push
gs
out
jmp
xchg
xchg
js
push
dec
stos
in
fists
sub
jecxz
jecxz
div
pop
or
subb
subl
push
xor
xor
nop
and
dec
or
sti
fwait
jo
lret
sti
pop
cmp
adc
mov
sub
lcall
dec
or
test
pop
xchg
dec
imul
pop
sbb
mov
out
pop
xchg
in
mov
mov
jns
cld
xlat
pop
push
mov
push
negl
add
push
mov
mov
lds
cmp
stos
xchg
movb
inc
mov
cli
and
outsb
stos
aam
inc
lock
imul
cwtl
mov
jecxz,pn
movsb
push
mov
mov
cltd
imul
fadds
rcrl
and
jge
mov
cmp
xchg
add
add
cmp
or
pop
pop
jns
subb
dec
das
ret
lock
fcoml
scas
push
adc
out
pop
fyl2xp1
mov
mov
andl
jp
mov
mov
sub
roll
mov
mov
xor
into
lea
aaa
int
dec
jb
inc
cmp
or
shll
stos
cmpsb
adc
movsl
shll
pop
scas
xor
frstor
outsb
daa
stc
and
ret
inc
arpl
bound
stc
adc
sub
aam
lahf
andb
ret
cmpsl
pcmpeqb
aad
inc
mov
jns
and
jbe
rcrb
std
movsb
test
gs
lcall
push
or
outsl
inc
push
divl
gs
adc
mov
sub
lcall
lret
jo
sarl
sarl
mov
test
scas
mov
nop
adc
dec
shl
pop
push
mov
arpl
outsl
inc
push
stos
fildll
pushf
adc
lock
push
movsl
call
jb
popf
aaa
xor
adc
xchg
sbb
out
cmp
mov
mov
xchg
push
xchg
inc
xor
pop
les
mov
sbbb
stos
dec
fisttpl
fsubs
sub
xchg
rcl
or
or
inc
scas
push
jo
rclb
mov
popa
pusha
cmpsb
mov
into
movsl
mov
cli
rclb
out
mov
pop
jmp
cmpsb
sbb
inc
sbb
sub
mov
pop
lahf
push
lcall
add
pushf
adc
sub
test
jl
imul
lods
mov
jo,pn
sbb
fwait
sub
fwait
sub
xchg
arpl
inc
mov
std
lea
fcompl
mov
add
fsub
arpl
pinsrw
mov
add
call
pop
int
dec
je
jb
popa
pop
jo
mov
jp
push
push
push
test
inc
jecxz
inc
cmp
mov
mov
rcrl
mov
mov
sbb
jae
xor
cwtl
xchg
mov
popf
cmp
imul
inc
push
xchg
mov
insl
insb
mov
xor
cs
mov
lock
das
outsl
test
xchg
and
adc
and
loope
dec
xchg
aas
lret
adc
cmp
mov
sub
test
jo,pn
xchg
mov
es
int
lahf
xchg
and
stos
loopne
sub
cmp
xchg
into
daa
xchg
arpl
jmp
int3
jno
ret
cmp
mov
add
lods
add
xchg
push
lods
fmull
in
and
aaa
rorl
fcmovbe
mov
lods
fistps
cs
insb
lods
sbbb
ret
mov
imul
cmpb
shl
mov
cmp
icebp
ljmp
push
out
insb
shll
jb
add
repnz
sub
jno
sub
pop
rcl
mov
push
ret
stos
loop
test
repnz
jae
stos
lea
jmp
fidivs
pop
test
or
jb
xchg
xchg
lahf
outsl
sub
add
ss
repz
cmpsb
pop
jo
xchg
push
or
push
mov
sub
sub
push
pop
jo
sbb
and
cmc
or
mov
cltd
adc
add
sbb
cmp
or
push
mov
dec
mov
leave
dec
pushf
fs
pop
mov
pop
aad
push
jp
mov
lcall
lods
xor
adc
shlb
push
xchg
movsb
fnsave
mov
lods
insl
insl
pop
psubusb
lods
movsl
pop
jmp
subb
push
popa
cli
pop
imul
in
std
xor
inc
outsb
fistpl
es
cli
enter
dec
fwait
pop
mov
filds
cs
mov
enter
mov
ror
xchg
mov
mov
lods
ret
mov
daa
sub
push
xor
arpl
jne
int
sbb
cltd
mov
push
dec
adcb
jne
push
cld
int3
shr
in
or
clc
mov
in
add
or
xchg
adc
mov
les
addb
xchg
mov
ja
fs
lods
leave
and
mov
push
xrstor
dec
jnp
adc
and
inc
jge
nop
popa
mov
pop
insl
mov
mov
pop
in
popf
fistpl
and
sahf
push
shlb
movsl
lea
js
fisubl
out
jmp
inc
xor
sahf
pop
js
or
inc
sahf
mov
pusha
scas
test
or
inc
sub
add
lcall
in
outsb
pop
loopne
pop
xchg
lret
cwtl
inc
and
push
cli
fwait
sub
aaa
stc
lret
pop
mov
mov
add
mov
or
stc
movsl
inc
shrl
imul
push
pushaw
pop
aam
mov
push
fcompl
xor
cmc
jg
in
mov
js
dec
aam
mull
cwtl
sub
imul
mov
rcrl
jmp
cmpsb
dec
mov
mov
mov
jns
sbb
frstor
imulb
jge
insl
jl
xlat
inc
popf
imul
mov
nop
sub
push
bound
xchg
hlt
ret
pop
jge
popaw
mov
frstor
lea
cwtl
leave
mov
jae
xchg
repnz
cmp
and
call
jp
adc
pusha
mov
arpl
gs
jle
push
lret
xchg
punpckhwd
int
xchg
pushf
jns
inc
jnp
cmp
push
dec
pop
rcl
popf
test
dec
rol
inc
cmp
cli
lods
add
sub
std
add
fsub
cmpb
inc
mov
add
movsb
in
sub
xchg
out
mov
pop
stos
bound
push
fisubl
mov
push
push
pop
xchg
je
jbe
rcrl
mov
imul
mov
lock
mov
flds
push
test
arpl
test
mov
repnz
or
xor
jge
adc
push
jmp
iret
arpl
or
inc
push
lret
add
pop
add
cmp
cld
sub
push
aas
sete
sub
stc
lds
fsub
adc
outsb
std
fildll
shll
lods
ret
cmp
mov
xor
fsincos
mov
stos
loope
mov
subl
enter
mov
add
inc
shlb
sub
mov
jle
in
cmpb
test
in
push
ret
inc
xchg
shl
mov
jns
int
mov
push
and
lods
xorb
popf
scas
xor
mov
mov
aam
addr16
repz
pop
mov
mov
stos
lods
and
push
js
sahf
push
lock
mov
les
mov
pop
xor
andb
xchg
inc
push
les
xor
jbe
xchg
mov
cmpsl
mov
fdivr
fs
inc
mov
lods
inc
sbb
xchg
and
jb
adc
xor
aad
xor
bound
loopne
test
jecxz
rcll
push
leave
mov
lret
rcl
mov
push
push
in
mov
adc
xchg
push
cmp
enter
lods
insb
and
pop
rclb
ds
arpl
inc
pushf
in
pushf
sbb
aad
das
imul
and
stos
sbb
in
push
xchg
mov
mov
and
stos
and
jl
and
popa
cli
add
sbb
push
or
in
mov
in
test
sub
roll
sbb
pop
popa
push
sub
mov
inc
cmp
add
cmp
icebp
div
add
icebp
mov
add
popa
adc
sbb
pop
fcmove
loop
mov
mov
cmp
sbb
pop
or
lcall
dec
lahf
push
push
ds
add
mov
mov
cmpb
ss
xchg
in
mov
ror
jmp
daa
out
fwait
sbb
xchg
cmp
lods
lahf
in
cmpsl
mov
dec
or
add
out
jp
test
out
out
cmp
push
fwait
cltd
push
push
or
jmp
xchg
add
clc
in
sbbl
cmp
jmp
pop
test
leave
sub
mov
push
jl
lcall
sbb
lea
mov
jp
loope
jp
dec
mov
lret
jp
or
push
ss
cs
mov
testb
cmpsl
mov
pop
sub
outsb
lds
and
inc
call
dec
test
js
pushf
bound
xor
jle
stc
addb
clc
jl
mov
out
push
sub
inc
jmp
dec
stos
cmp
into
and
push
aad
sub
test
xchg
out
in
mov
mov
lods
jnp
dec
mov
jg
xlat
inc
inc
sbb
sbb
pop
jb
sbb
cmp
movsl
test
addb
clc
or
imul
fsts
jge
lods
jle
jge
xorb
jo
out
jne
outsl
pop
mov
orl
in
shl
xor
insb
sbb
out
nop
lock
jbe
scas
push
cli
or
pop
mov
mov
mov
mov
arpl
repnz
fcoml
cmp
aaa
iret
fwait
in
or
fcoml
int
pop
dec
cmpsl
test
lcall
sub
enter
fmull
lods
ds
mov
jle
or
dec
dec
jne
scas
loop
xchg
rcrl
push
test
mov
rcll
jb
cmp
frstor
inc
push
shrb
dec
aam
out
inc
mov
mov
mov
scas
cmpsl
jp
or
lret
fstps
cli
sub
pop
xchg
cld
xlat
mov
jg
sub
and
add
inc
sbb
in
jmp
or
mov
adc
adc
sbb
std
fildll
cmp
fistl
loopne
sti
pop
mov
cmp
and
mov
mov
adc
adc
mov
loopne
push
mov
test
xor
pop
out
mov
cmpsb
jo
pop
int3
or
cmc
cmpsb
arpl
sbb
das
stos
aaa
adc
xlat
and
xor
push
cltd
inc
mov
mov
adc
jno
mov
mov
xor
test
jl
mov
lcall
add
fidivrl
inc
repz
fcoml
js
mov
hlt
mov
mov
lods
mov
stos
adc
addr16
insl
inc
loop
das
dec
xor
xor
sub
js
cmpsb
push
lds
lcall
sbb
inc
sbb
cmp
rcrl
mov
test
mov
mov
inc
mov
pop
xchg
subb
cmp
js
cmp
xor
rclb
and
bound
dec
movsb
js
inc
xchg
jmp
sub
xor
cmc
xchg
stos
scas
pop
push
add
mov
addr16
sbb
xorl
sub
jg
jmp
or
xchg
inc
pusha
jb
aad
add
xor
imul
mov
nop
mov
dec
loop
aad
fadds
lcall
sbb
lods
aam
hlt
lds
xor
int
mov
sub
jb
sahf
sub
pop
mov
fsubr
and
mov
cwtl
jmp
rorl
pop
shll
pusha
sub
in
mov
adc
mov
inc
fcompl
ljmp
into
mov
stc
mov
in
roll
outsb
adc
stos
loope
adc
test
jle
sbb
cmp
test
ds
add
bound
ret
push
fisubrs
sbb
sbb
or
xchg
mov
sub
mov
stc
fwait
xchg
mov
xchg
enter
imul
xchg
adc
adc
xor
popf
call
push
mov
pop
adc
dec
sub
sbb
pop
daa
repnz
cmpsl
shll
adc
fisubs
pop
jg
inc
and
popa
xchg
aam
xor
test
mov
xchg
pop
jnp
lods
adc
lock
adc
adc
mov
sub
aas
int3
mov
or
dec
jbe
mov
je,pt
daa
out
sbb
repz
jge
aad
outsl
inc
leave
adc
inc
cltd
push
sti
and
jae
stos
std
aas
mov
stos
adc
and
decb
add
pop
stos
out
jl
push
mov
pop
dec
pop
mov
xchg
fists
xchg
mov
add
add
test
movsb
ss
pop
cmc
hlt
sbb
xor
push
jg
das
bound
in
orb
pop
out
xchg
mov
mov
movsl
or
mov
cmp
dec
and
in
lret
stc
push
sbb
in
fs
jne,pn
mov
pop
mov
xchg
shll
mov
cld
lret
mov
xchg
std
es
fwait
add
mov
nop
rclb
mov
adc
xor
int
cmpsl
adc
inc
add
xor
in
sbb
ss
hlt
xor
jg
ljmp
loope
jb
push
mov
aas
sub
lret
call
mov
jle
testl
push
or
xchg
or
popf
mov
std
bound
mov
fisubrs
jae
xchg
cs
mov
loop
cmp
inc
jmp
in
push
jae
das
pop
add
imul
xorb
pop
out
or
ss
fwait
xlat
jns
adc
aaa
mov
psubq
icebp
mov
adc
int3
cltd
add
jp
push
int3
mov
lea
jae
mov
int3
xrelease
loop
test
cmpsl
adc
rorb
into
mov
jp
push
ljmp
jnp
lret
cmp
cmpb
inc
popf
dec
mov
mov
daa
push
pop
inc
icebp
jg
mov
outsb
pop
popf
cltd
mov
push
loopne
bound
cltd
or
out
mov
mov
insb
or
inc
outsl
jg
mov
sahf
cmpsb
xchg
dec
jmp
stos
inc
outsb
bound
and
movb
cmp
out
inc
and
mov
outsb
and
xchg
sub
outsl
push
stc
push
out
in
pop
hlt
push
xlat
jg
pop
mov
sbb
jge
out
and
jg
xor
xchg
push
pop
rorb
jle
roll
push
push
mov
push
pop
ja
cmp
repz
adc
divl
mov
inc
jb
add
popa
mov
andl
arpl
scas
cmp
les
adc
aas
ljmp
dec
movsb
cmp
rorl
arpl
xchg
mov
pop
jecxz
fistps
xchg
pop
addl
in
xor
test
add
loopne
aaa
les
adc
xchg
sub
sbb
push
push
rorl
push
xchg
cmpsl
mov
dec
in
adc
push
jae
icebp
jb
lods
or
popa
lds
arpl
shrl
addr16
sub
push
sbb
xchg
adc
add
mov
pop
popf
aam
cmp
rolb
inc
push
out
fistl
das
add
insb
and
sbb
pop
or
xchg
add
dec
pop
inc
dec
push
idiv
std
xor
fcompl
add
xor
stc
push
pop
leave
test
aaa
call
mov
pop
shlb
sbb
cmp
popf
test
sbb
jp
jge
and
insl
jle
mov
popf
int
out
incb
lods
scas
xor
inc
ss
popf
push
cmc
inc
mov
sub
or
out
ljmp
or
test
dec
and
lret
inc
mov
fidivrl
ret
xor
xchg
dec
test
aas
cmp
mov
xchg
data16
rorl
jecxz
sub
imul
and
mov
in
cmp
mov
fwait
jns
xchg
xor
sbb
ss
mov
pop
sbb
data16
mov
jbe
imul
imul
pushw
aas
movsl
aam
or
xor
inc
pushf
inc
ja
subl
push
shl
xchg
mov
mov
dec
cld
dec
stos
outsb
pop
jle
mov
inc
stos
ja
mov
aas
enter
pushw
mov
pop
dec
into
mov
cmc
sub
cli
or
aad
out
mov
mov
sbb
xor
out
adc
dec
shll
rcr
outsl
sub
xchg
mov
xchg
add
pop
mov
jns
hlt
cmp
movsl
sahf
in
add
ror
icebp
daa
and
loopne
vmwrite
jb
pop
mov
movsl
roll
cmpsb
jns
fldz
into
mov
mov
pop
cwtl
mov
jb
push
xchg
pushf
push
in
push
data16
shlb
sub
or
aad
aad
scas
xchg
shlb
loopne
ja
shlb
mov
or
mov
jno
xlat
push
hlt
jge
test
stos
add
cmp
sbb
popf
imul
mov
test
loope
leave
pop
repnz
test
and
ret
sahf
dec
pop
gs
dec
cmpsl
lods
mov
dec
enter
xchg
adc
mov
sbb
jmp
mov
in
add
or
xchg
push
adc
jb
lret
fwait
push
inc
daa
adc
xlat
cmp
stc
fcmovbe
fldcw
pusha
jo
mov
or
xchg
leave
pop
push
push
loop
add
inc
xchg
xchg
sbb
cmp
insl
test
jl
jne
fdivs
push
or
fs
pop
jg
or
dec
in
out
mov
test
mov
jns
mulb
je
jmp
or
adc
mov
js
jecxz
scas
push
pop
add
adc
inc
into
divb
cmp
popf
sub
cmpsl
push
enter
lods
add
in
cmp
cmp
mov
pop
ja
xchg
imul
jo,pt
xchg
adc
imul
shll
orb
rcl
push
sbb
jecxz
enter
ds
out
daa
cmpsl
aam
lret
lods
mov
jno
jge
out
aaa
cmpsl
sub
test
jg
sbb
or
pop
loopne
dec
aad
xor
sub
or
push
xchg
push
inc
mov
enter
aaa
jbe
pop
mov
clc
mov
clc
mov
cmp
repnz
cwtl
mov
out
setp
shrb
imul
test
mov
xchg
xlat
mov
repz
cwtl
aaa
leave
xlat
xor
xor
scas
std
sbb
jle
shr
pop
push
mov
int
cmp
jbe
mov
cmp
test
out
pop
inc
lods
push
mov
xor
cmpsl
call
cmp
jle
xchg
mov
scas
add
cld
mov
pusha
loope
test
out
sbb
mulb
repz
int3
mov
lahf
sbb
dec
jae
mov
jmp
fsubl
mov
dec
cmp
or
das
adc
popf
cmp
xchg
sbb
and
mov
lret
push
mov
xchg
lret
icebp
sahf
xchg
outsl
add
out
sbbb
stc
sbb
push
in
out
into
ljmp
dec
pop
scas
add
loopne
repz
xor
repnz
jno
rcrl
mov
mov
xlat
es
mov
mov
gs
or
mov
test
inc
or
fidivrl
mov
cmpsl
pop
cmc
add
adc
dec
cmp
data16
mov
or
lcall
dec
jae
out
and
leave
xor
or
sbb
push
fcoml
push
outsl
push
jo
sub
pop
xchg
pusha
jge
jo
iret
sub
fildll
add
in
xchg
lret
add
jo
cmp
sub
je
sbb
inc
mov
push
sub
std
pop
or
fadds
add
xor
test
lods
fstpl
movsb
pop
outsl
mov
lock
pop
push
pop
pushl
mov
or
push
cmp
xor
mov
lea
aas
addr16
sub
xor
xor
je
icebp
sub
sbb
or
inc
mov
rcrb
jno
mov
cmc
xchg
test
xlat
cs
xchg
xchg
subps
push
cltd
movsb
dec
int
push
scas
push
int3
lcall
fists
test
ss
inc
dec
dec
sbb
cmp
loope
nop
daa
mov
xchg
subl
mov
and
test
dec
xor
and
adcl
ds
popf
shl
dec
into
xor
mov
lcall
push
lock
inc
movsb
lret
adc
clc
and
cld
out
outsl
das
out
mov
jbe
dec
lahf
jnp
push
loope
fwait
push
or
and
lret
push
xchg
push
push
in
inc
adc
xlat
add
xor
mov
xor
or
fcomps
insl
push
lcall
fdivl
pop
rcr
sbb
js
enter
jb
dec
sub
inc
xor
and
push
jp
stc
scas
mov
mov
fbld
js,pt
dec
dec
dec
cld
adc
jno
mov
fldlg2
push
xchg
sub
jg
test
adc
inc
test
aaa
jb
jmp
imul
sub
pop
jl
push
call
in
pop
xor
movsl
cli
xchg
into
cmp
mov
pop
cltd
adc
cwtl
dec
adc
sub
mov
sti
mov
rcrb
addr16
sbb
std
int
sub
divl
push
push
test
outsb
mov
orps
or
jae
sarb
fistl
mov
xlat
cmp
mov
fisubl
pop
mov
lret
sub
orb
jbe
flds
rorb
test
mov
test
repz
cmc
xchg
paddw
and
rcl
lock
sub
in
aam
inc
test
mov
das
mov
add
hlt
cmpsl
sub
jne
lret
jg
xor
je
jnp
rol
or
frstor
push
xchg
mov
mov
mov
test
cmp
jno
cmp
lcall
lds
test
cmp
mov
imulb
mov
jb
jle
jbe
insl
test
add
lea
frstor
int3
mov
xchg
inc
adc
dec
cmp
addr16
push
in
lret
dec
pop
repz
mov
inc
scas
xor
sahf
or
popa
sbb
mov
mov
mov
stos
or
loop
fsubl
jmp
mov
inc
arpl
cmp
loopne
sub
cmpl
fsts
add
movsb
xchg
test
xchg
insl
ss
add
test
in
pmaxub
lea
and
int3
push
pop
cmp
cmp
addr16
push
aas
lods
add
adc
dec
mov
cmpsb
cmp
jne
mov
adc
cmpsl
test
xchg
cltd
xchg
jmp
jno
xchg
loopne
mov
rolb
push
jno
hlt
adc
lcall
and
xlat
pop
add
jmp
or
mov
sbb
cmpsl
lods
inc
out
mov
in
pop
mov
dec
js
push
push
and
push
sbb
jecxz
je
pusha
mov
sub
fs
arpl
js
aad
rcl
stos
sub
jae
lret
mov
mov
cmpsb
or
test
fsubrs
imul
mov
xchg
mov
push
lahf
shlb
nop
sti
ja
mov
lret
fadds
pusha
mov
cwtl
push
and
test
dec
jecxz
or
sbb
ret
or
orl
xchg
inc
ds
fdivl
mov
dec
arpl
jle
adc
repz
push
mov
adc
sbb
pop
js
daa
mov
lods
jp
out
pusha
inc
test
ss
push
inc
mov
push
fildll
outsl
xchg
dec
daa
jl
mov
xchg
bound
out
mov
mov
mov
xchg
xchg
fwait
xor
mov
adc
sti
mov
daa
fcomps
and
dec
daa
fdivr
jmp
sub
push
insl
push
and
cld
lahf
hlt
scas
mov
mov
inc
cld
push
jmp
cmp
adc
jecxz
cwtl
push
pop
arpl
cmp
cmp
ja
sti
cmpsb
movsl
mov
jne
aad
mov
ljmp
cwtl
pop
dec
psubb
adc
fstpl
bound
jnp
pop
dec
clc
jbe
lcall
and
xchg
cmp
pop
rcr
push
inc
sbb
imul
or
push
fs
push
jb
arpl
or
popf
cmp
push
call
and
test
push
or
mov
lods
dec
dec
aaa
add
sub
adc
dec
push
daa
add
pop
punpcklwd
test
mov
inc
pop
and
jns
clc
inc
add
jns
test
in
add
in
dec
in
hlt
add
ja
sarb
and
js
adc
js
lods
repnz
mov
out
or
xchg
xor
lcall
lret
scas
pop
lahf
js
cmp
adc
stc
cmp
rol
stos
pop
test
andl
jecxz
mov
jno
sub
stc
sbb
movsl
dec
xchg
ret
or
imul
inc
lods
incl
fwait
push
dec
dec
xor
movsl
adc
sub
cmc
fsts
adc
mov
fldenv
pop
gs
inc
in
pop
sahf
mov
cmp
popf
je
mov
inc
outsl
xor
or
and
jnp
cmpsl
mov
ret
movsl
inc
sub
xor
pop
sub
fnstenv
pop
lahf
mov
add
mov
jbe
stos
sub
push
stos
and
adc
jae
in
cld
inc
push
aaa
in
test
test
xchg
sbb
cmp
mov
lcall
movsl
cmp
xor
out
in
cld
std
cmp
xchg
fmuls
and
push
div
les
inc
mov
adc
rclb
fiaddl
fmul
or
cs
xchg
int3
cmp
push
fidivrs
cld
les
call
mov
cld
lret
loope
outsb
arpl
leave
inc
dec
stos
or
xor
push
mov
add
in
mul
ja
fsubs
ljmp
imul
adc
pop
pop
movsl
push
loop
jb
insb
mov
divl
test
fildl
rol
jg
mov
xlat
mov
mov
mov
or
es
mov
ds
ret
sub
cmpsl
fsubrs
jns
inc
jmp
and
xchg
inc
jle
mov
daa
lahf
push
pop
sti
add
sub
mov
es
or
es
sti
popf
cli
cmp
cwtl
fsubrs
mov
mov
call
loope
sbbl
andb
add
inc
lret
jbe
xchg
lock
jns
cmc
jo
xor
sub
push
out
xchg
pusha
fisttpll
fcoml
fdivr
jne
mov
push
test
fmul
popf
aad
lret
pop
xchg
test
popa
out
jns
pop
xchg
and
int
aam
push
jnp
popa
out
push
add
mov
roll
lcall
nop
cmp
push
mov
ds
dec
cwtl
and
scas
push
mov
popf
add
push
pop
push
pusha
xchg
mov
das
ss
ret
cs
cmp
pop
adc
jg
adc
mov
xchg
movsb
lahf
dec
jae
aam
jmp
lea
jl
cmpsb
inc
ja
cmp
adc
cmp
inc
js
sti
imul
mov
sbb
push
mov
sub
push
add
push
insb
sub
cld
rcrb
xchg
pop
ret
adc
je
test
call
mov
imul
push
out
push
sub
lret
mov
dec
movsb
xchg
ret
fcmovne
ja
jne
fsubrl
push
cltd
jne
movsl
mov
mov
or
lcall
fstl
dec
push
sub
sub
jnp
xor
jg
sub
fwait
lret
pop
out
inc
ret
call
in
loope
fldt
inc
xchg
mov
imul
out
arpl
loopne
dec
call
mov
xchg
inc
imul
dec
in
push
les
cltd
adc
lock
xchg
xchg
sub
adcb
fisubrs
sub
sbb
cwtl
cmp
mov
idiv
dec
je
mov
int3
test
inc
fbld
ret
sbb
and
repnz
and
dec
mov
cmpsl
orb
test
mov
ret
adc
dec
pop
jb
mov
cltd
dec
xor
mov
sub
xor
lcall
inc
fisubrs
push
xchg
pop
jns
daa
inc
sub
lcall
xchg
cli
sti
xchg
fs
mov
cmp
sbb
lods
cmp
adc
jge
xchg
jno
lret
push
sbb
mov
hlt
test
rolb
jmp
imul
outsl
ds
inc
mov
lahf
xor
mov
sub
fimull
cltd
jle
in
xchg
scas
xor
movb
push
clc
cmpsb
jmp
pop
in
pop
cltd
sbb
lods
imull
out
iret
lock
push
sahf
lret
mov
xlat
sti
mov
jp
aaa
cmpl
mov
das
add
push
daa
popf
xchg
test
xchg
fisttpll
inc
sub
push
jecxz
pop
lret
in
fs
jb
cmp
or
and
clc
adc
aad
push
mov
sbb
bound
push
lock
push
push
div
inc
pop
sbb
inc
sbb
jnp
imul
push
lock
mov
jp
and
rolb
aas
or
in
rcrl
add
pop
ficompl
shll
test
xchg
push
mov
jns
pextrw
xor
jle
imul
jl
jbe
mov
xchg
adc
out
stc
idivb
jge
mov
movsb
mov
das
out
xor
int
sub
push
xchg
xchg
jae
decl
add
ljmp
push
xchg
test
fld
inc
mov
shrl
jns
mov
movl
inc
arpl
out
loopne
aam
mov
sti
mov
xor
fisttpl
sbb
cmp
jge
lret
lahf
and
in
mov
adc
insl
das
scas
jnp
jge
add
cmpl
in
fcoms
or
push
mov
cmpsb
xor
dec
xchg
rorl
cmp
mov
add
out
filds
dec
jp
pop
fld
loope
fcompl
add
fiaddl
dec
aad
or
push
xchg
dec
push
insl
xor
outsl
pop
sti
rorb
dec
mov
and
push
iret
mov
rcll
push
fsubs
xchg
adc
xchg
hlt
stc
rcl
adc
jl
and
sbb
sbb
cli
test
sahf
inc
push
adc
lods
jbe
sub
mov
adc
hlt
test
enter
sbb
inc
lods
in
sahf
jge
int3
dec
inc
insb
add
or
je
lahf
lret
test
rolb
jl
pop
lahf
cld
test
adc
jb
mov
leave
into
xchg
dec
adc
pop
xor
das
push
or
arpl
arpl
push
inc
pop
mov
sarl
mov
inc
mov
xor
jo
fmull
rcrl
lea
add
mov
mov
cs
test
add
lods
mov
adc
imul
add
dec
out
xor
mov
xlat
push
out
dec
out
cmp
and
lods
out
push
mov
push
loop
inc
loop
pop
hlt
jae
adc
pop
add
loop
xor
mov
pop
into
push
xorl
insl
mov
dec
insb
in
and
or
cmc
adc
lods
jmp
int3
xchg
ret
xor
cwtl
inc
inc
clc
inc
xchg
xor
aad
jp
and
pop
push
mov
pusha
add
mov
xor
inc
fwait
aad
scas
and
push
lock
dec
adc
cmp
mov
push
dec
cwtl
jp
in
loop
cwtl
call
shl
and
scas
cwtl
lods
insl
stos
inc
aad
loop
fbld
sti
psubd
je
shl
outsb
lea
dec
shrb
popa
test
xor
mov
test
pop
fidivrs
mov
ds
adc
loopne
xchg
icebp
out
imul
test
insb
outsl
xchg
mov
adc
sub
into
out
daa
cmp
lea
shlb
in
roll
stos
push
movhlps
into
push
mov
and
shll
push
inc
in
dec
push
and
push
xchg
xchg
andl
xchg
xor
jnp
sbb
mov
sbb
mov
xor
inc
or
adc
syscall
lea
fcmovnu
mov
jb
xor
into
scas
insb
push
mov
lret
push
scas
jmp
xchg
mov
pop
cmpsl
push
sub
rcr
dec
stc
gs
pop
inc
lahf
fnsave
adc
inc
xchg
popl
and
mov
mov
mov
scas
lock
aad
inc
ret
ljmp
adc
aad
inc
or
xchg
stos
sbb
mov
js
cmp
cltd
jne
aad
xor
addr16
dec
pop
addb
sub
sub
pushf
js
mov
push
add
loope
addl
mov
fsubp
xor
std
stos
xor
and
int3
out
sbb
cli
dec
sub
scas
or
dec
jnp
sbb
fisttpl
jbe
js
sub
jns
jl
inc
dec
cmp
cmp
dec
sbb
daa
mov
cld
in
fdivs
xchg
movsb
test
push
mov
cmp
sbb
mov
mov
loope
pop
pop
push
das
aaa
sbb
jns
dec
stos
pusha
fdivrs
sbbl
inc
enter
xor
insb
dec
inc
or
mov
add
adc
inc
dec
clc
push
mov
push
push
cmc
push
adc
mov
jge
push
out
or
mov
pop
and
mov
lds
adc
jo
aaa
cmp
imul
dec
les
sbb
cmp
push
inc
inc
imul
inc
scas
int
daa
stos
or
js
mov
cli
dec
and
and
jmp
mov
lretw
xor
insl
pusha
xorb
enter
inc
negl
mov
mov
sbb
aas
repz
pop
push
inc
rolb
jae
fwait
push
test
and
loopne
outsb
pop
cmpsl
cwtl
push
test
pop
push
mov
pop
fnsave
mov
mov
pop
mov
mov
mov
repnz
cmp
dec
add
lods
dec
pop
addl
mov
xor
mov
adc
cli
mov
jb
or
pop
in
outsb
mov
in
roll
fisttpl
sub
sbb
jl
mov
repz
mulb
cmovno
inc
stos
and
fdivrs
push
in
xchg
push
rcl
pop
inc
push
icebp
pop
adc
sub
add
mov
mov
loop
fwait
jae
in
and
or
add
aas
aad
or
pop
pop
mov
mov
shlb
xlat
sti
sahf
add
lock
cmp
cwtl
jl
pop
popa
jb
mov
jae
aas
ljmp
cmp
andl
sti
mov
and
hlt
call
ret
nop
out
pop
dec
jb
xchg
sbb
jecxz
push
mov
mov
es
flds
and
mov
sub
xorl
stc
loope
ja
sub
mov
addr16
mov
xor
in
sbb
aam
mov
lods
mov
xchg
mov
das
mov
jle
mov
push
pop
mov
sbbb
xchg
xor
pushf
adc
pop
mulb
jo
jnp
push
sbb
shr
or
out
cmp
lret
popf
or
in
and
mov
test
idivl
mov
xchg
xchg
mov
sbb
sbb
add
jmp
adcl
inc
xchg
cmp
es
sub
inc
pop
test
or
jmp
jg
push
mov
mov
loope,pt
adc
dec
inc
push
clc
fdivrs
sbb
inc
jae
or
inc
aaa
mov
test
jbe
sbb
xor
icebp
test
xchg
hlt
and
in
jmp
enter
loopne
mov
mov
push
mov
inc
shr
sub
xor
popf
inc
test
or
aas
xlat
push
or
cmpsb
mov
cld
ljmp
out
mov
mov
adc
aaa
add
pop
sub
lahf
push
mov
icebp
push
push
adc
adc
out
xchg
in
jl
push
ds
inc
mov
adc
jle
dec
out
cmp
lds
mov
mov
xchg
leave
cmp
dec
es
ds
dec
xor
jecxz
jmp
icebp
add
aaa
inc
loop
sbb
push
repnz
out
push
lds
imul
xrelease
cld
in
mov
push
sahf
inc
movsb
es
daa
repnz
sbbb
in
dec
inc
dec
fiaddl
sbb
mov
iret
outsl
fs
arpl
imulb
sub
xor
daa
lcall
pop
jo
adc
and
cmpsb
ret
negb
xor
and
dec
dec
xchg
int3
mov
inc
cmp
jmp
stc
xchg
into
xor
mov
cmc
push
test
in
pushf
adc
mov
outsb
xor
lock
lods
ja
jbe
push
xchg
imul
lods
mov
cltd
mov
cmc
nop
pop
test
iret
decb
mov
add
cs
outsl
jle
pushf
ret
jp
rolb
inc
xor
imul
dec
inc
enter
push
cmc
xor
mov
loop
and
sarb
in
xor
and
dec
and
mov
clc
jne
xor
sub
dec
sbb
call
push
sahf
xor
jmp
mov
imul
pop
stos
inc
and
sub
loop
std
fildll
inc
pop
dec
cmp
lea
enter
inc
adc
jmp
dec
sahf
setae
mov
imul
stos
test
xchg
mov
movsb
repz
push
or
scas
mov
sbb
push
mov
ret
push
mov
jno
imul
push
enter
in
push
cmc
imul
mov
fidivs
push
mov
test
fwait
mov
stos
icebp
sar
jbe
popl
mov
fistpl
fcmovnu
fbld
push
push
hlt
fmulp
push
hlt
sbb
push
push
adc
and
movsl
outsb
adc
mov
xor
sar
inc
sbbb
lods
mov
icebp
push
lds
xchg
mov
neg
mov
lds
fbld
push
xchg
test
and
sahf
add
sub
loop
xor
dec
std
sahf
adc
xchg
in
scas
dec
aaa
rcrl
stos
fcompl
cmpsl
negl
sbb
into
xchg
fwait
add
data16
push
cmp
loope
scas
xchg
xchg
inc
sbb
test
jne,pt
rcrb
adc
es
cwtl
data16
xchg
scas
adc
mov
repz
std
pusha
dec
mov
nop
xorl
mov
xchg
repz
cmp
pop
push
ret
int3
jbe
les
or
cmc
sbb
leave
stos
clc
add
jb
decb
call
sbb
jle
leave
xrelease
ret
aam
dec
push
mull
mov
shlb
into
or
dec
jne
or
add
les
out
repnz
sarl
loop
inc
int3
xchg
shll
push
lahf
call
ret
and
mov
out
mov
sub
inc
mov
enter
std
and
push
lods
inc
fldenv
lds
mov
fnstenv
mov
jae
xchg
jl
ret
cmpsl
imul
adcl
insb
dec
lcall
stos
and
adc
fsts
xor
mov
mov
mov
aas
ss
and
pop
in
sbb
inc
cltd
mov
int3
sbb
scas
sub
shlb
ss
add
popa
ljmp
insb
or
xor
xor
outsl
call
arpl
addr16
std
add
jg
sub
pop
sub
sbb
xor
loopne
fst
mov
sub
adc
and
pop
dec
mov
in
jae
gs
add
mov
jg
rcl
add
xor
fisubs
xchg
jb
clc
push
push
sub
out
test
sub
pop
cmp
sub
mov
and
add
lock
out
dec
ret
push
iret
xchg
fwait
nop
push
jmp
cli
pop
pop
scas
or
mov
jnp
push
cmp
icebp
push
sbb
jmp
int
fistpll
jb
and
ljmp
in
mov
xchg
mov
mov
fisubs
fiaddl
out
repz
cmp
movsb
bound
in
pop
dec
gs
imul
and
cltd
mov
jg
loopne
lret
add
out
push
mov
in
loop
sub
xor
jnp
test
pop
lahf
pop
das
movsb
adc
sbb
into
pop
data16
aaa
daa
cmp
lret
jo
pop
shlb
fs
xor
xchg
pop
lcall
cmp
xlat
jmp
dec
test
jae
pop
jg
sbb
out
aaa
xor
mov
faddl
xchg
xor
pop
xlat
xchg
sub
shlb
mov
cmp
add
cld
inc
mov
pop
cmp
xchg
nop
pop
mov
lock
enter
jecxz
sbbl
std
inc
bound
test
push
leave
xor
xchg
add
lcall
decl
adc
fistl
lcall
dec
jge
cmpsl
test
jge
loope
cwtl
inc
push
fiaddl
inc
pop
cmpb
push
sbb
dec
push
cmp
hlt
sub
xor
and
push
dec
mov
or
add
test
out
sbb
push
dec
leave
and
idivb
mov
mov
sub
xchg
push
addr16
sar
insl
mov
cltd
adc
test
jns
inc
sbb
xlat
adc
mov
fadd
daa
push
cltd
pop
cmp
rolb
imul
push
jg
jbe
jp
mov
jp
push
sub
ljmp
push
ljmp
sbb
sarl
pusha
out
repnz
sbb
cwtl
pop
add
aas
lods
push
stos
xchg
sub
frstor
sub
and
adc
lock
daa
xor
repz
dec
pop
hlt
js
es
xchg
je
xlat
fstpl
movsb
mov
leave
adc
mov
pushf
pop
hlt
sub
mov
in
cmp
outsl
clc
je
lea
dec
repnz
fmull
fidivs
pop
out
pop
adcb
jb
inc
push
mov
pop
mov
dec
jae
add
test
mov
xchg
cmpsl
jo
mov
xchg
sahf
sbb
sti
movsb
add
movups
cli
jl
ds
pop
xchg
dec
jo
push
or
cmp
or
add
out
into
into
push
mov
mov
and
jp
jp
cli
ret
gs
andb
xchg
pop
cltd
out
out
aaa
jg
xchg
fcmovnu
ret
mov
sbb
negb
pop
scas
aad
jnp
pop
push
adc
mov
pop
sub
and
ret
jbe
dec
mov
mov
hlt
adc
aad
cmp
stos
sti
adc
loop
roll
adc
mov
push
nop
out
and
in
out
pop
jnp
dec
mov
test
ss
pop
scas
jnp
in
add
movsl
cmpsl
in
out
iret
mov
xchg
xchg
nop
mov
rcrb
cmc
xchg
loope
jnp
jmp
or
sub
shl
repz
and
lret
cli
jle
mov
jp
outsb
jecxz
push
fbld
lahf
scas
das
inc
jl
mov
adc
ret
pop
popf
jae
lea
mov
mov
mov
sub
adc
pop
lods
dec
popa
cmpsb
cmpsl
or
daa
test
je
int3
mov
popa
clc
push
test
lea
jae
data16
xchg
lods
dec
jmp
popf
push
jo
pop
test
add
mov
pop
in
xor
notb
pop
les
incb
mov
cmp
fldt
out
mov
mov
ja
out
enter
xchg
push
pop
xchg
mov
push
mov
in
and
shll
sub
sub
push
in
shll
icebp
in
in
lcall
adc
mov
mov
jae
pop
push
orl
in
inc
cmpl
sbb
xor
and
cmp
xlat
cmpsb
jns
xor
push
popf
fcmovnu
and
je
adc
stos
js
loop
dec
mov
fisubrl
sti
pop
push
push
shrb
push
aad
jns
jae
cmp
test
inc
mov
insb
fwait
mov
mov
mov
push
aas
lret
faddl
movsl
or
gs
jns
icebp
in
cmp
rep
cmp
mov
pop
inc
mov
add
add
adc
loope
fsubl
std
daa
mov
repnz
push
xchg
xchg
adc
pop
cmp
rcrl
mov
sahf
cs
out
xor
and
xchg
pop
jnp
loop
jne
cmp
scas
jb
pop
decb
adc
push
clc
inc
xchg
xchg
pop
mov
or
sbb
lods
cmp
push
jecxz
cli
sbb
xchg
movsl
imul
inc
add
test
es
mov
push
mov
loop
inc
es
imul
mov
jns
ljmp
mov
mov
adc
in
lods
lcall
outsl
pop
jmp
xchg
dec
test
stc
mov
out
mov
aam
sub
mov
daa
test
sahf
sub
cmp
and
inc
stos
mov
arpl
xchg
insb
cmpsl
mov
scas
mov
inc
adc
sti
add
xor
jmp
sahf
js
adc
pop
push
lret
jbe
fs
push
sbb
xchg
out
repz
fsts
ljmp
sub
mov
add
xor
xchg
add
lret
add
jle
std
andb
aad
push
mov
jp
jns
adc
pop
mov
loop
mov
sub
nop
fisubl
xchg
dec
add
add
sub
pop
jge
cmp
or
push
int3
iret
lods
sub
cmpsb
ss
out
mov
dec
xchg
daa
scas
insl
mov
scas
test
lods
mov
aas
iret
pop
and
movsb
in
mov
lcall
orl
inc
cli
mov
inc
xchg
loop
sbb
cli
xor
vmovddup
xchg
and
mov
mov
adc
mov
jp
stc
std
xor
cld
addr16
insb
loopne
sbb
repnz
sub
cs
aaa
mov
aam
dec
inc
leave
loopne
lret
nop
cmp
enter
adc
mull
outsl
add
push
gs
push
adc
pop
adc
lods
mov
rorl
mov
in
push
das
ljmp
xorl
mov
and
mov
dec
xor
mov
mov
pop
lods
mov
outsb
push
inc
and
popf
push
sbb
icebp
das
movsb
dec
and
and
adc
outsl
int3
pop
test
lahf
mov
aam
sub
fisubl
stos
leave
movsl
sub
push
lea
cmp
cmp
ljmp
test
xchg
cld
loopne
data16
xchg
ds
mov
ret
in
lahf
jmp
xor
rcr
cwtl
mov
pusha
int3
lcall
jmp
jle
or
fstpl
test
mov
dec
rol
repnz
xchg
xchg
sahf
jne
out
dec
cmpsl
push
mov
sub
sbb
push
sbb
aas
mov
mov
dec
push
xchg
adc
add
mov
sbb
or
roll
repz
mov
pop
pop
mulb
popa
nop
inc
push
popf
test
xor
rcl
mov
mov
scas
test
rol
movsb
fldt
cld
sbb
xorw
cwtl
rcr
adc
lods
sbb
push
mov
stc
xchg
mov
bound
jle
mov
sbb
ss
adc
stc
or
cmpsb
add
and
or
mov
fcompl
rcrl
pop
out
pop
cmc
sbb
add
fsubl
push
in
sbb
or
aaa
push
add
cmp
outsb
xor
sub
pop
fisttpl
out
xor
movsl
imul
movsl
arpl
lret
daa
stc
dec
int3
pop
or
jns,pt
dec
mov
loop
sbb
call
mov
repnz
push
jg
xor
ss
lock
xor
sbb
dec
and
daa
rol
enter
ret
sahf
lret
jbe
in
sub
pop
xor
movsl
call
dec
jbe
int3
mov
movsb
mov
and
adc
lret
aam
int
clc
push
mov
xchg
pop
and
push
push
and
push
gs
mov
jne
in
leave
fbld
mov
clc
mov
mov
sub
imul
js
cmp
mov
or
call
pusha
mov
hlt
popa
stos
aam
and
sub
mov
pop
sbb
bound
aaa
lods
or
pop
jle
dec
fs
or
je
sbb
fwait
dec
jg
pop
leave
aas
imul
or
xor
cmp
aas
xchg
push
jl
add
cs
ret
mov
insl
insb
out
jno
mov
dec
inc
aad
cmpsb
xchg
aaa
jns,pn
icebp
rolb
pushf
pop
sahf
mov
test
jmp
or
adc
fnsave
shrl
mov
jle
dec
add
aam
negl
popf
pop
cmpsb
and
lret
xor
aad
movsl
adc
popa
jmp
sahf
pop
sbb
fwait
or
xorb
je
loopne
push
add
or
sbb
lret
jmp
ret
stc
shrl
push
adc
jmp
adc
jl
sbb
jge
add
iret
mov
or
or
mov
cmp
lods
mov
mov
stos
push
sbb
cwtl
sbb
sti
shlb
decb
adc
outsl
imul
shlb
jnp
pop
pop
push
dec
icebp
loop
add
cli
lret
or
or
dec
and
cmpsl
clc
in
lods
mov
mov
sbb
imul
mov
pushf
fisubl
bnd
test
add
std
xor
mov
mov
out
pop
pop
inc
push
jmp
pop
ror
sbb
mov
ss
dec
sub
in
int
and
jmp
push
jb
es
jg
sbb
stos
lods
lcall
mov
fs
aam
mov
nop
jg
movl
pop
js
lds
fwait
and
add
js
aad
mov
adcb
dec
fldl
mov
inc
fisttps
aas
dec
loope
xchg
fdivrl
das
xor
je
out
xchg
loopne
jl
cli
enter
call
jmp
mov
roll
or
cmc
test
pop
dec
clc
add
or
loopne
push
pop
sti
loop
fdivrl
ja
jbe
sbb
insl
scas
mov
stos
mov
gs
repz
ffree
lahf
push
jmp
in
bound
and
lock
icebp
aad
xor
fstpt
js
les
sub
lret
sub
dec
roll
push
sbb
and
nop
test
inc
dec
and
dec
pop
insl
outsb
pop
sarl
and
bound
imul
dec
das
loopne
inc
leave
in
sbb
mulb
lea
repnz
push
or
and
aaa
sbb
and
stos
mulb
mov
test
mov
inc
addb
lret
inc
notl
pop
dec
into
cmp
stc
sahf
mov
in
mov
mov
mov
mov
pushf
or
mov
fists
push
shrl
enter
test
or
das
jmp
andb
gs
xchg
mov
and
adc
dec
icebp
popa
sub
lret
xor
lock
inc
dec
push
or
rol
push
jge
lahf
cmp
cmp
lea
arpl
mov
jp
lods
dec
fisttpl
movsb
fs
int
stc
or
or
mov
xor
sub
inc
mov
or
xor
cwtl
or
push
ret
push
pop
cs
mov
cmp
out
pop
mov
je
mov
fld
enter
cwtl
sub
popa
add
xor
and
out
iret
push
sbb
movsl
popa
mov
sub
std
daa
ret
lea
mov
lea
stc
sbb
or
or
out
aad
sub
imul
iret
cmc
mov
and
loope
or
cmc
aas
cld
fnstenv
xchg
adc
sub
sbb
and
dec
mov
mov
mov
outsb
fcomps
pusha
shll
pushf
or
rcll
les
mov
fisttpll
mov
insb
sarl
roll
ds
sbb
xchg
sub
and
fnstcw
hlt
fists
arpl
jo
jno
int
dec
jmp
sub
icebp
add
das
sahf
sbb
pushf
popf
xor
xlat
lds
add
js
int
mov
dec
xchg
mov
out
fsincos
sti
push
out
xchg
mov
aas
add
lret
rclb
jmp
push
imul
pop
test
fcomip
insl
cmp
inc
cmp
out
dec
sub
sti
inc
cltd
loop
xchg
in
adcl
hlt
jns
jle
sbb
or
xor
iret
adc
fs
shrl
icebp
push
xor
sarl
lock
add
lret
sub
sar
repz
lea
sbb
mov
outsb
xchg
mov
pop
int
or
mov
sbbl
ja
sub
inc
cwtl
imul
bound
add
jmp
cmp
pop
push
mov
jo
dec
pop
mov
std
or
fmul
pop
aas
pop
or
ds
jb
stc
aaa
adcl
mov
mov
jo
mov
in
xchg
orl
sbb
es
stos
int3
dec
pop
dec
adc
push
jl
cmc
push
xor
repz
cld
scas
fcomi
es
mov
jecxz
loopne
xchg
adc
mov
mov
or
mov
cs
or
push
sub
test
loopne
fisttpl
mov
ret
xchg
jl
xchg
jb
or
ret
jecxz
pop
dec
jnp
jl
push
out
js
jbe
loop
rcr
nop
rcrl
inc
adc
pop
jmp
inc
push
mov
sub
push
stos
push
inc
das
aam
mov
jb
addb
jmp
cmpl
xor
adc
jnp
or
imul
stos
push
into
mov
arpl
testb
in
pop
rolb
daa
leave
aas
lahf
xchg
insb
mov
mov
push
mov
das
int
ror
push
mov
inc
push
sbb
mov
jp
sahf
and
dec
in
and
add
xor
mov
sub
fildl
or
push
adc
ret
mov
mov
int3
cmc
or
jb
xchg
sub
mov
stos
inc
icebp
mov
int
sub
mov
data16
outsb
mov
inc
loopne
aaa
aaa
cmp
pop
xchg
mull
xchg
pop
mov
nop
cwtl
in
jno
cmpsl
out
fsubl
mov
call
das
adc
mov
test
adc
shll
jmp
cs
dec
ret
jae
jecxz
inc
gs
push
icebp
dec
jmp
xor
xor
repz
xchg
popa
test
mov
loopne
ss
outsb
push
pop
add
push
dec
lcall
outsb
lret
shrl
lods
push
pop
iret
jecxz
cmp
popa
mov
xchg
ljmp
sti
shl
xor
movsl
mov
loopne
cmp
in
andl
lcall
xchg
scas
scas
andl
ds
fldl
add
in
sub
fidivl
inc
xchg
pop
mov
into
mov
mov
test
inc
leave
in
xor
xor
or
pusha
sbb
js
fstpt
mov
cmc
sbb
iret
lock
cmpsb
push
xor
les
sbbl
xchg
in
pusha
icebp
insl
loop
sub
daa
push
rcrb
adc
xor
xchg
jo
popf
cmpsw
xchg
aas
push
pop
cmp
sub
or
inc
daa
jp
in
div
arpl
dec
lods
jns
lahf
dec
daa
ja
pop
out
inc
std
xor
mov
cwtl
neg
iret
or
icebp
stos
mov
in
dec
fsubr
mov
das
std
in
push
xor
aam
sbb
pop
loop
dec
add
adc
push
aaa
stos
or
cmp
sahf
mov
and
xor
pop
js
push
sbb
cld
cmp
mov
sbbl
adc
jle
jae
pusha
dec
movsl
add
bound
cmpsl
pop
mov
xor
xchg
mov
mov
sbb
xchg
push
mov
mov
lret
hlt
repz
lahf
xchg
xor
pop
or
ss
fnstenv
idivl
jecxz
pop
dec
push
xchg
xor
or
mov
push
push
sbb
out
sar
gs
and
jne
loopne
sbb
jnp
sub
pop
pusha
imul
push
test
push
push
jae
lret
nop
dec
xlat
add
lret
daa
mov
out
aaa
sub
rcr
xor
and
imul
lret
sub
std
push
xor
aad
rcll
stos
sub
xchg
sub
xchg
jle
mov
inc
add
adc
bswap
dec
movsl
mov
or
dec
orb
aas
pop
addr16
stc
loope
mov
into
icebp
clc
in
pop
sub
loop
xorl
dec
push
adc
and
pop
into
xchg
imull
inc
pop
jae
mov
mov
xchg
lcall
adc
or
or
nop
xchg
test
cmpsl
mov
insb
lea
iret
insb
jno
jge
enter
cltd
pop
mov
push
shll
pop
or
sub
popf
sbb
mov
test
push
pop
sub
mov
rorl
or
movsb
xchg
xor
rcl
into
icebp
inc
mov
cltd
add
sbb
and
and
xor
test
sbb
dec
out
test
orb
dec
std
lea
sahf
ss
pop
int
ds
cmp
adc
sbb
dec
jb
push
jns
rcl
jns
sbb
mov
outsb
test
push
out
ss
stos
clc
sub
push
and
sub
insb
ljmp
ljmp
test
mov
xor
int
nopl
mov
adc
fiadds
adc
mov
or
testb
cli
fiadds
data16
repz
dec
inc
pop
push
mov
sbb
xchg
lods
lock
testb
loopne
fisubl
shlb
cld
xor
ss
mov
movsb
jno
xchg
addr16
cs
xor
shr
fdivrs
inc
call
and
pop
mov
pop
add
int3
cmp
sbb
ficompl
sbb
mov
or
jg
mov
dec
pop
add
testl
popf
jb
insl
inc
and
pushl
into
call
add
rcll
mov
adc
mov
pop
xor
orb
mov
andl
cmpsl
pop
add
add
movsb
hlt
jecxz
dec
mov
insl
stc
jmp
in
jb
stc
ror
orl
sub
call
pop
xchg
insb
cmp
sub
pushfw
jg
mov
dec
pop
push
push
test
mov
fidivl
ja
mov
dec
jl
cwtl
sbbl
je
int3
push
xchg
xor
add
aas
xor
int
fisubl
jne
stos
ret
sar
mov
and
mov
in
aad
ret
clc
xor
notrack
sti
ror
gs
fcmovnb
pop
push
dec
js
movsb
and
cmp
pop
or
movsb
dec
test
mov
sub
jbe
jo
sahf
js
mov
mov
iret
adc
sbb
test
dec
push
xchg
xchg
xchg
mov
adc
dec
jmp
pop
sti
mov
das
divl
aad
xor
adcb
jecxz
mov
xlat
addl
movsl
pop
jns
push
xchg
fcmovb
clc
add
mov
fs
inc
js
rorl
sub
sub
xor
out
cmpsl
addb
push
xchg
or
or
sub
pop
pop
mov
ss
mov
adc
pop
imull
mov
mov
add
mov
push
clc
mov
sbb
popf
add
movsb
js
sbb
fsubs
ret
gs
ja
movsl
call
xchg
or
enter
push
rclb
hlt
clc
loope
ss
bound
dec
mov
lret
push
cmp
push
jo
cmpsb
mov
mov
popl
push
ret
dec
call
jmp
repnz
mov
dec
push
pop
and
stc
sbb
push
push
xor
add
jmp
xor
cmp
push
sti
jecxz
xchg
daa
mov
scas
jle
jmp
cmp
ret
es
out
es
clc
ror
adcl
dec
dec
jno
stos
jmp
enter
clc
das
iret
push
inc
rcl
push
aas
aas
outsb
xchg
push
mov
dec
xlat
push
pop
iret
call
dec
add
repz
pusha
or
shll
cmp
adc
push
daa
mov
mov
pop
jecxz
sbb
and
sbb
push
insb
jmp
push
xchg
adc
or
push
mov
or
inc
movsl
ret
xor
rep
fwait
mov
sub
nop
int
dec
cltd
cmp
fwait
jns
aaa
div
es
js
in
arpl
jb
int
jnp
cmpsb
cmc
in
jno
lret
cmpsb
push
in
popf
cmp
sub
push
mov
mov
push
sub
mov
mov
mov
cmpsl
sti
insl
xchg
mov
mov
lcall
aaa
dec
movsb
bound
sbb
imul
fsubr
add
fwait
adc
sub
jnp
or
mov
imul
mov
pop
movsb
stos
nop
jbe
mov
cmp
push
push
nop
or
xor
sbb
and
lcall
hlt
xor
fisttps
stc
daa
fiaddl
cld
addr16
push
lea
in
sub
std
xchg
mov
xor
push
dec
mov
jp
jge
stos
pop
andb
loope
xchg
and
adc
iret
jmp
cmpsl
hlt
lret
daa
test
cmp
jnp
addr16
mulb
shlb
aad
mov
push
mov
repnz
fisttps
xchg
cmp
pop
rol
test
fistpll
mov
mov
pop
inc
sub
mull
psllw
mov
js
mov
shlb
lock
push
sahf
dec
int3
xchg
and
adc
lahf
jl
sub
mov
sub
and
mov
lret
shll
out
add
enter
ljmp
outsl
bound
cmp
lret
push
xchg
pop
lahf
fldcw
in
mov
mov
jle
dec
dec
sbb
mov
das
xchg
in
and
sbb
pop
mov
std
pop
movsl
shrb
add
inc
jb
inc
stc
push
icebp
test
addr16
movb
pop
fdivl
loop
test
push
or
shl
ljmp
inc
dec
cmp
adc
pushf
xchg
cld
fmuls
add
mov
int3
fisttpl
mov
call
icebp
or
loope
lock
stos
push
cmp
test
sub
cmc
stos
mov
jg
mov
push
lret
out
shlb
scas
push
mov
stc
pop
sahf
sub
sarb
mov
popf
jg
xor
sub
clc
mov
mov
jb
mov
jns
ret
jge
subl
pop
mov
mov
jecxz
pusha
mov
xchg
test
push
fwait
je
aas
fcom
fcmove
dec
dec
adc
xchg
and
stc
and
test
mov
cs
mov
jle
mov
mov
xor
mov
das
or
enter
lret
mov
sbb
setne
popa
mov
andl
mov
mov
dec
inc
jmp
std
mov
in
jge
imul
hlt
cli
mov
movl
sub
mov
loopne
inc
push
dec
rolb
cmc
push
add
lds
mov
mov
or
mov
in
in
push
scas
mov
pop
test
hlt
dec
outsb
insl
ljmp
rorl
imul
dec
add
sbb
mov
nop
out
mov
outsb
roll
aaa
lds
addr16
lds
int3
sub
cltd
arpl
and
dec
dec
or
xor
repnz
cmp
jecxz
pop
cmp
adcb
cmpsl
icebp
repz
aad
shlb
mov
adc
add
rorl
or
jmp
push
arpl
insl
inc
shll
or
inc
aad
jecxz
cmp
or
outsl
add
test
lock
dec
pop
lock
mov
ss
lock
adc
jmp
cmc
call
cmp
mov
in
adc
jmp
fstpt
sub
test
decl
mov
outsb
sti
jg
adc
gs
mov
and
add
loopne
pusha
or
sbbb
ss
repz
xchg
mov
inc
or
wbinvd
sbb
gs
stc
stos
int
cld
in
imulb
mov
mov
xor
pop
mov
add
adc
push
inc
sbb
jb
pop
cmp
arpl
inc
popl
repnz
in
ds
psubq
cld
loop
mov
and
pop
pushf
mov
mov
mov
notb
iret
lods
xlat
push
cmp
ret
neg
dec
cwtl
outsb
mov
xor
lods
push
xchg
push
sub
cwtl
in
push
mov
cmpsb
mov
add
fdivr
cld
aaa
jbe
ja
push
roll
sbb
mov
jb
das
push
mov
repnz
xor
aas
es
aam
push
jecxz
enter
out
cmpsb
fcomp
stos
add
mov
xchg
lcall
bound
or
daa
push
dec
push
jo
outsb
ret
sbb
cltd
sahf
ret
jp
mov
ss
negb
dec
sbb
stos
push
arpl
push
dec
aas
cmp
push
mov
push
mov
xor
clc
inc
push
or
adc
sbb
sbb
std
sbb
cmp
mov
fsubl
je
mov
sbb
sub
outsb
pop
fxch
sbb
cmpsb
sbb
push
lods
mov
mov
fisubs
pop
fcomps
push
repz
cld
push
sub
sbb
inc
sahf
sbb
std
ret
sub
and
push
stc
push
shl
fwait
sub
daa
out
lahf
mov
xchg
and
mov
inc
imulb
out
sbbb
push
jmp
movsl
xor
xchg
fsubr
clc
xchg
clc
jo
xor
jnp
pmaxsw
inc
aad
jb
pop
mov
push
inc
push
enter
xor
pusha
or
mov
xor
xchg
sarl
jp
mov
push
fildl
push
push
mov
jg
lods
fisubs
xor
push
push
pop
sti
insb
and
mov
push
mov
push
mov
rclb
jns
insl
pop
insb
jae
push
aas
cmpsb
aas
fstpt
add
or
ss
and
xlat
adc
dec
adc
cmc
ret
mov
xchg
cltd
jae
and
cmpl
xor
pushf
or
and
lret
mov
mov
insb
ret
aam
in
xchg
addr16
cmc
movsl
xchg
rorb
sub
jle
stos
iret
add
pop
or
mov
xchg
mov
xlat
icebp
mov
push
dec
nop
mov
hlt
jecxz
xchg
iret
outsb
mov
mov
pushf
fsubrl
mov
mov
sbb
sbb
sbb
mov
and
jmp
or
add
cltd
in
loop
mov
sbb
jmp
add
jmp
lret
loope
mov
into
out
scas
enter
cmp
cltd
pop
adc
movsb
dec
cmp
push
sub
mov
out
fnstsw
daa
jnp
fndisi(8087
add
aad
es
ja
sbb
imul
pop
jle
lods
aam
je
lahf
cmp
inc
push
arpl
out
dec
in
cld
addr16
or
jecxz
jmp
or
jmp
push
push
loop
notb
fwait
lret
mov
es
iret
lds
pop
out
scas
pop
out
mov
pop
jg
fldl
push
or
mov
bound
fidivrs
xchg
xchg
cmpsl
push
sub
jbe
pop
pop
or
push
mov
jae
sub
pop
push
pop
jns
lods
int3
in
dec
es
dec
mov
cwtl
mov
and
mov
push
insb
cmp
cmp
dec
adc
cmp
dec
iret
lcall
fcmovnu
mov
adc
lds
push
dec
test
push
test
pop
xchg
mov
jle
sub
jl
jp
or
enter
mov
jecxz
push
rcll
shll
nop
jge
stos
mov
dec
push
mov
dec
sbb
stos
call
fcompl
movsl
aaa
loop
enter
and
cmp
or
xor
fbld
cmp
movsl
push
push
outsb
push
imul
adc
xor
sub
ss
fnstenv
dec
xchg
cmpsb
mov
rcl
pop
movsb
xchg
lret
inc
inc
inc
popa
iret
add
pop
clc
cwtl
jo
sbb
pop
xlat
sahf
nop
or
inc
aad
cld
jbe
inc
sub
fisubrl
test
dec
dec
ss
dec
mov
insl
sti
enter
in
addl
inc
mov
pop
nop
cmp
inc
loopne
or
or
out
cs
xor
dec
mov
sbb
adcb
or
and
xor
cmpsb
cmp
pop
sbb
push
adc
xchg
sbb
mov
call
push
jg
repnz
adc
js
and
mov
jl
dec
mov
rclb
xchg
mov
adc
mov
push
jle
inc
hlt
inc
cmp
push
repnz
dec
cwtl
cmpsl
int
aas
loope
clc
outsl
scas
sub
fistps
mov
inc
enter
insb
js
xor
push
pop
sub
xor
stc
xchg
pusha
scas
lcall
or
xchg
push
jbe
push
xchg
aam
sbb
imulb
out
pop
nop
or
or
test
push
lods
xor
pusha
xor
pusha
icebp
rcr
jg
lock
repnz
out
test
dec
and
adc
adc
call
movsb
xchg
in
mov
mov
sub
adc
sub
jbe
scas
pop
pop
sbb
dec
scas
roll
sbb
dec
jg
dec
test
xchg
mov
insb
xor
mov
popf
outsl
dec
add
mov
or
mov
inc
xor
rorl
fldt
push
sbb
sub
pop
rorl
out
iret
jb
fdivl
repnz
add
in
int3
mov
cmpsl
pop
adc
daa
cmp
pop
push
push
stos
push
mov
out
adc
mov
inc
or
insb
xchg
mov
cltd
out
scas
lock
addl
jnp
pop
push
xchg
jns
xor
js
or
lock
outsl
movsl
xchg
xchg
cs
subb
xor
sub
push
cmc
xchg
adc
sub
imul
mov
cmp
sbb
adc
sub
out
repnz
roll
xor
loopne
test
mov
and
cli
adc
int3
pushf
mov
add
fldcw
out
and
hlt
loopne
addr16
inc
add
dec
js
cmp
push
add
or
mov
frstor
and
jg
jecxz
push
imul
test
xchg
pop
or
subl
mov
xor
int
mov
push
adc
xchg
adc
mov
aaa
filds
mov
aam
mov
jge
mov
shll
cli
aam
or
and
jmp
push
loopne
push
test
cmp
cmp
and
add
cmc
aam
push
push
cmp
js
jb
mov
fwait
lods
jecxz
xchg
inc
dec
movsb
jnp
or
sub
out
aam
push
pusha
cld
jno
dec
dec
mov
lock
or
mov
pop
cmp
call
or
vpcmpeqd
test
jnp
mov
imul
js
pop
jo
push
pop
sub
sub
pop
or
cld
jno
adc
fistpll
or
faddl
add
add
xlat
outsl
mov
icebp
sub
adc
inc
jl
aas
iret
xor
notb
aam
adc
out
add
imul
adc
fidivrs
pop
lock
les
fildl
jle
push
and
push
pop
movsl
mov
inc
pop
cs
cli
push
popf
sahf
and
pop
pop
or
push
sub
pop
xor
xor
dec
mov
int
sub
push
test
test
ret
imul
fnstenv
sub
xchg
sbb
or
pushf
push
mov
pop
cmc
loopne
cmp
clc
les
mov
dec
and
xchg
js
and
and
xlat
movsb
ret
stc
and
or
out
add
mov
and
nop
mov
mov
push
pop
lret
jb
adc
sbb
adc
pusha
mov
mov
jo
sbb
jle
xor
movsl
xchg
das
mov
lahf
shll
mov
or
lock
cmovge
fisubl
pextrw
and
pop
ret
fsubs
les
pop
movsb
das
mov
sahf
test
movsl
loopne
out
sub
arpl
or
adc
mov
add
lret
adc
inc
or
add
xor
mov
xchg
rolb
adc
cmc
fdivl
cs
out
push
pop
lahf
pop
es
cwtl
jle
sub
into
pop
sub
inc
in
ljmp
shlb
repnz
daa
notl
loopne
pop
pop
dec
dec
pop
jnp
loop
popf
push
aad
pop
out
outsb
cli
adc
adc
arpl
mov
mov
mov
sub
data16
popf
jno
jmp
sub
xchg
rolb
pop
inc
call
pop
xchg
fs
push
sub
push
adc
adc
and
ljmp
sub
or
lcall
sub
xchg
mov
rcr
bsf
into
aas
push
push
std
lds
inc
xor
xchg
mov
jmp
cs
cmc
add
adc
mov
pop
in
sub
dec
lret
sti
incl
ds
sub
xchg
mov
pop
aas
mov
data16
mov
nop
lods
aad
pop
or
or
shlb
in
jo
jns
dec
mov
and
loop
test
dec
fwait
cmp
xchg
decl
sti
mov
dec
mov
cmpsb
mov
inc
push
popf
pop
repnz
push
jle
mov
push
inc
fadd
ficoml
out
pop
mov
jae
icebp
je
pop
fisubs
adcb
scas
mov
or
lods
aam
js
fidivrl
dec
bound
dec
insl
nop
call
push
cmp
xchg
jne
jne
sbb
push
and
cmp
std
xchg
ss
aad
mov
loope
pop
sahf
shrl
gs
jb
xor
das
cmpsb
stc
pop
mov
pop
cmp
lahf
outsb
sahf
inc
mov
test
loop
jecxz
pop
loope
jbe
out
xorb
push
xor
xor
mov
sti
notb
sti
jecxz
mov
bound
mov
and
xchg
negb
mov
bnd
add
jb
sbb
cmc
leave
jno
out
cmp
dec
arpl
cmp
sub
outsb
dec
sarl
insb
jmp
mov
lcall
rorb
adc
into
in
cli
add
test
pop
and
cmp
lcall
jg
lods
enter
pop
xor
loop
or
jg
test
lds
ds
fstpt
ret
cltd
aam
vunpcklpd
ljmp
xchg
hlt
andl
lods
xchg
push
adc
push
cld
lahf
push
aad
add
addb
jg
push
cld
test
cmp
movsl
or
hlt
mov
je
sub
add
xchg
jne
adc
sbb
stos
icebp
imul
mov
pop
cltd
jge
leave
lcall
sub
cmp
call
adcl
andb
fmulp
pop
cli
and
test
push
jbe
incb
es
nop
pop
sub
fldlg2
inc
imul
dec
lock
cli
in
and
mov
lret
mov
cmp
mov
pushf
mov
push
repz
adc
cmp
out
or
mov
xchg
push
xchg
in
scas
push
lret
aaa
mov
into
mulb
ds
pop
lcall
jb
or
mov
sbb
xchg
rol
fnstcw
jo
cli
repnz
or
xchg
inc
fcmovnbe
cmp
cmpsb
andb
inc
jb
mov
imulb
cld
sub
push
pusha
pop
adc
add
pop
loope
dec
xor
cmp
fdivs
daa
je
daa
adc
pusha
loop
push
or
and
stos
mov
test
dec
aad
and
pop
int
inc
inc
aaa
cmpsl
push
fldl
push
rcrb
js
data16
rcrl
imul
mov
cmp
mov
jl
test
scas
inc
mov
or
jmp
subl
xchg
and
dec
xchg
mov
loop
xchg
mov
mov
mov
inc
jne
fidivl
dec
pusha
lods
out
cmp
out
sahf
rorb
test
lcall
mov
test
and
stos
in
scas
add
xchg
push
jb
out
rorb
mov
dec
fcoms
lods
mov
push
jecxz
jb
popl
mov
test
sbbl
int
clts
es
inc
push
fsubl
jae
jo
cmp
inc
mov
ds
push
imul
pop
push
add
jns
cmp
pop
fstl
dec
push
pushf
jl
mov
gs
jne
mov
or
or
jecxz
sub
imulb
das
fmulp
in
mov
shrl
add
orb
mov
in
mov
xor
aaa
dec
dec
push
push
test
cs
shll
add
cmpsb
sub
fs
rcrb
pop
or
mov
push
xchg
push
int
mov
les
push
or
mov
sbb
cli
xchg
call
movsl
fisttps
cltd
loop
popa
pop
testl
sub
mov
pop
pop
sub
lret
pusha
sbb
mov
shll
jbe
stc
in
aam
ss
jp
jmp
jmp
pop
inc
leave
pusha
and
or
in
in
lret
enter
mov
mov
and
xchg
shl
inc
test
pushf
hlt
xchg
das
lret
sub
jecxz
iret
pop
out
and
daa
cmp
stos
cmp
movsb
dec
imul
sti
xchg
into
inc
outsl
jnp
lea
push
in
mov
push
leave
int
dec
in
aaa
je
cmp
push
mov
sub
xchg
xchg
xchg
mov
loop
jecxz
mov
sti
jns
std
jo
je
inc
push
xor
cmp
ret
mov
xchg
sti
mov
and
popf
shll
ja
xor
shrb
test
jo
add
jp
data16
add
mov
add
cs
mov
sbb
iret
loop
push
mov
cwtl
mov
cwtl
mov
test
mov
divb
pop
cltd
mov
imul
sub
cltd
and
or
insl
dec
mov
iret
mov
addr16
shrb
sbb
mov
jmp
and
xchg
adcl
jle
aam
daa
leave
mov
push
arpl
xor
mov
mulb
cmpsl
push
loope
adc
mov
arpl
inc
push
pushf
xchg
push
xchg
sub
push
les
jae
xor
mov
jp
add
xchg
scas
jle
xchg
daa
arpl
imul
clc
mulb
fcmovbe
arpl
xchg
cwtl
out
fisubrl
mov
sahf
mov
iret
fdiv
stos
mov
sub
pop
mov
xor
mov
insb
ja
mov
mov
mov
jg
mov
push
jle
fwait
les
adc
mov
mov
sub
fs
cmp
sbb
repnz
jg
jne
fdivr
jno
inc
test
insl
fisubrl
mov
shrl
imul
pop
icebp
jno
out
lahf
add
fwait
loopne
cmp
mov
in
dec
cmp
mov
jno
daa
push
addr16
fmull
pop
fcoml
add
mov
or
sub
pop
and
rorb
cld
push
inc
mov
ds
adc
push
add
roll
lret
inc
clc
mov
sbb
daa
out
fildl
jno
xor
mov
add
mov
push
iret
xor
jmp
lcall
mov
adc
inc
push
mov
lret
mov
mov
push
mov
hlt
cltd
mov
and
add
xchg
jbe
jg
or
mov
out
cs
or
xchg
bswap
push
clc
jg
dec
int3
jmp
in
pop
sub
in
test
into
sub
add
mov
mov
iret
ret
push
fwait
scas
xchg
jne
dec
pop
daa
iret
xchg
lret
mov
mov
adc
pop
addr16
in
jae
cmc
subl
dec
pop
dec
pop
ss
xor
inc
lea
test
sub
sahf
in
fwait
aad
aaa
notl
js
into
mov
ds
lret
aad
fwait
xor
inc
add
xchg
lcall
std
cmp
mov
fsubl
ljmp
xor
lds
int
outsl
bnd
cwtl
xchg
or
sub
sbb
cmp
sub
add
test
push
add
xor
std
pop
movsl
insb
mov
dec
xchg
mov
or
jecxz
repnz
xor
cmp
push
aaa
aad
inc
out
xor
lds
leave
es
fadds
xlat
push
test
scas
add
outsl
ljmp
clc
aam
shrb
ja
xor
in
jno
fpatan
lds
fs
fistl
jmp
repnz
sbbb
jle
in
movsl
xchg
out
jne
hlt
ret
fildl
xchg
cmp
stos
stc
sbb
xchg
mov
repnz
mov
cmpsb
lock
popf
iret
nop
scas
push
push
imul
stos
mov
jp,pn
jle
push
out
mov
les
das
xchg
test
mov
dec
jbe
leave
add
push
mov
jb
adc
xor
mov
mov
pop
add
push
xor
sbb
inc
cmpsb
sub
pop
push
insb
cmpsb
fiaddl
mov
and
xor
in
aas
inc
mov
mov
xchg
mov
cli
mov
dec
jnp
sbb
xlat
add
sbb
repnz
daa
loopne
mov
sub
and
orl
stos
jae
mov
aas
stc
sbb
xchg
ds
or
sbb
adc
pop
divl
dec
cs
sahf
add
scas
rcrb
scas
stos
imul
mov
cwtl
push
fcmovu
roll
sahf
cltd
or
or
shrb
int3
in
inc
rclb
lods
sbb
sub
and
jae
adcb
cli
push
and
jnp
jp
push
dec
pop
cmpsb
out
js
push
clc
xor
pop
pop
sub
dec
sbb
mov
mov
test
adcb
jne
xchg
cld
into
stc
dec
fs
lock
sub
push
cmpsl
shlb
adc
stos
dec
mov
jp
cmp
test
ret
mov
pop
std
std
jnp
je
push
jmp
ds
jo
stos
push
subl
cmp
dec
pop
xchg
mov
pusha
mov
jp
shrw
inc
lods
int3
aam
cmp
xchg
or
fcoml
hlt
xchg
dec
rorb
movsl
ret
mov
scas
inc
in
out
mov
inc
mov
xchg
pop
mov
sub
inc
ja
loopne
movsb
xchg
sub
std
repnz
jmp
out
xlat
aam
push
addr16
sbb
pop
pop
fcomps
shll
mov
or
mov
aas
scas
in
psubsw
bnd
cmpb
add
sbb
rorb
setbe
ds
popl
jns
sub
xor
hlt
addb
addr16
pop
scas
nop
out
shlb
add
data16
shlb
mov
in
outsl
addr16
sub
das
mov
idivb
xchg
rclb
or
jns
lcall
lea
test
pop
bound
xor
mov
outsb
pop
cmc
out
test
daa
mov
lock
sub
dec
ss
mov
add
scas
inc
out
pusha
and
js
mov
popl
insl
cs
not
lcall
mov
fs
in
inc
lds
jl
call
in
sti
add
stos
shl
sahf
xchg
es
cmp
push
fwait
dec
jmp
jo
pop
jo
loop
hlt
dec
addb
push
pop
scas
cmp
push
or
jg
int
loopne
jmp
arpl
insb
jne
mov
add
cmpsb
imul
lret
nop
js
mov
sbb
into
xor
repnz
mov
adc
fdivrs
ja
jmp
stc
mov
mov
mov
pushf
cmp
push
mov
in
mov
les
shlb
jne
xor
push
push
or
inc
stos
xor
pop
pop
mov
or
push
adc
int
jae
cmp
and
push
movl
clc
cld
jns
jp
push
nop
cld
repnz
shrb
push
pop
popf
push
add
pop
inc
testb
adc
jae
movsl
lcall
dec
jmp
sbb
aam
stc
frstor
cmp
js
aam
lahf
adc
and
push
jle
sbb
cmp
out
testl
sub
and
mov
jmp
arpl
mov
adc
test
or
je
add
mov
cmp
sub
add
mov
mov
dec
test
lods
inc
cld
outsl
xor
je
aas
jne
or
dec
cmp
iret
stc
and
xor
mov
arpl
ss
stos
inc
pushl
aas
fnstcw
popa
insb
imull
xchg
mov
ret
push
inc
xchg
jns
mov
pop
inc
sub
mov
les
cmc
cmp
and
jo
lock
cmpsb
mov
dec
mov
fs
or
jmp
fdivrl
xchg
push
lahf
mov
jo
sub
mov
xchg
stos
jae
outsb
sbb
ds
fimuls
mov
jecxz
ret
aaa
ja
aaa
push
sbb
adc
movsl
idivl
jp
andb
mov
mov
ret
jmp
iret
jbe
sbb
adc
jo
push
clc
add
adc
mov
stos
je
out
ret
lret
xchg
fidivrl
sahf
ja
fld
popa
mov
mov
imul
pop
add
shr
add
mov
or
lods
adc
in
mov
cmpsb
lret
inc
sbb
mov
mov
sbb
cmpsb
inc
dec
lahf
ja
es
pusha
addb
subl
mov
incb
jmp
in
sub
sbb
adc
dec
fiaddl
and
or
outsl
shrb
adc
xor
mov
cli
sub
mov
int3
lret
inc
cmpsl
cmp
test
imul
push
fldl
jp
sbb
cmp
cwtl
sbb
jle
push
or
push
aam
mov
jne
xor
dec
out
pop
jbe
mov
je
sbb
imul
jno
in
mov
pop
lock
jae
sub
xor
sub
push
cs
cmp
mov
lods
pop
stc
jge
in
add
add
xchg
pop
or
rcll
std
jecxz
adc
shlb
test
bound
cmp
lods
mov
xor
mov
loop
push
aam
mov
xor
push
lock
xchg
popf
dec
sbb
in
cli
sub
aas
and
mov
out
dec
jle
loop
cmpsl
repnz
jle
sti
stos
bts
push
popf
sti
fildll
xor
dec
xchg
dec
icebp
push
lret
xchg
stos
add
and
xor
add
xchg
ret
sub
call
cmp
pop
enter
leave
test
scas
jnp
inc
inc
pop
adc
sub
adc
fiaddl
add
test
mov
repnz
jns
mov
dec
pushf
es
cltd
jnp
inc
lds
fucomp
hlt
jb
and
xchg
push
dec
fwait
xor
in
out
lds
inc
aas
and
fldcw
push
mov
and
cmc
mov
or
xchg
stos
push
pop
and
fistps
arpl
fstp
mov
push
xchg
xor
hlt
jae
sbb
xchg
or
cltd
xchg
jbe
sub
out
push
push
dec
mov
lcall
adc
mov
fstpt
pop
xor
sahf
outsb
inc
fsubs
jmp
or
data16
pop
xchg
imulb
and
movsb
add
push
sub
xor
hlt
pop
push
popa
mov
je
push
insl
jbe
iret
mov
subb
inc
pop
js
pushf
shlb
pop
jbe
lock
jp
movb
pop
lods
scas
xchg
mov
or
ljmp
movsl
push
or
cld
adc
sub
and
ja
sub
mov
sbb
pop
loopne
ror
mov
pop
sub
inc
mov
clc
insl
push
push
xor
push
push
cmp
sbb
cmp
cmpsb
loop
mov
movsb
out
push
pop
inc
frstor
pop
xchg
or
loop
sub
or
mov
jae
insl
divl
or
stos
jg
push
in
call
stos
lods
lret
cmp
lods
pop
cmp
fildl
data16
test
cmp
ljmp
lods
stos
cmp
call
mov
xor
imul
sub
dec
ret
dec
adc
mov
das
inc
inc
std
or
mov
test
insl
pop
push
shl
adc
lock
jecxz
mov
adc
xor
sti
push
mov
std
clc
inc
ljmp
inc
cmp
test
fmuls
inc
cli
push
mov
mov
or
mov
xor
xor
aas
fs
add
xor
pop
jo
ret
lods
lahf
out
js
loope
mov
stc
fnstcw
pop
cmp
and
leave
sbb
movsb
popf
dec
mov
cmpsl
sbb
imul
adc
push
or
sbb
stos
sti
or
sbb
sbb
ja
loopne
data16
jl
out
cld
loope
ret
ljmp
adc
ret
xchg
xor
out
add
sti
cmp
dec
shrb
int
push
push
dec
decb
mov
xor
mov
cmp
or
repz
sub
and
rorb
loop
mov
pusha
xor
or
sub
xchg
sti
test
mov
adc
ds
lea
test
aaa
mov
es
jne
mov
xor
popa
lods
dec
or
jmp
jp
out
sub
dec
ja
dec
adc
pop
pop
push
ljmp
fildll
pop
call
fxch
loope
cmpsl
jmp
aad
fsubp
push
sbb
mov
ja
cs
mov
imul
popf
into
mov
aad
aam
fisttpl
sbb
fiaddl
xlat
lods
sahf
aam
sub
enter
icebp
cmp
aas
mov
xor
xchg
ret
jo
dec
ss
outsl
jne
sub
pusha
sbb
push
jns
push
xor
adc
jno
das
jb
fdivrs
or
mov
sbb
or
mov
fisubrs
cmp
push
in
shrb
sub
inc
sbb
in
fsubrs
inc
ja
jo
cltd
mov
dec
int
mov
jp
ss
mov
sub
inc
jecxz
push
test
fsubr
lock
imul
aas
cmp
sub
mov
adc
mov
cmp
mov
stc
inc
sub
ds
scas
sub
xchg
mov
pusha
cli
or
sub
enter
icebp
sbb
jnp
cmp
lods
xor
lret
leave
stos
loop
mov
push
scas
arpl
test
fstl
movsl
push
and
adcb
pop
cs
add
and
in
mov
std
jnp
sarl
outsl
xor
xor
mov
cmpsb
jmp
sbb
repnz
les
inc
ds
push
repnz
sub
push
nop
outsb
adc
filds
out
repz
jno
sub
push
paddusw
pop
mov
fwait
rcrb
fstps
lret
adc
outsb
adc
aam
mov
inc
mov
sbb
mull
fsubl
arpl
push
and
fstps
cmc
mov
repz
stc
and
inc
push
sub
cmpsb
das
test
adc
repz
ljmp
fmul
dec
scas
xor
push
add
sub
js
sub
dec
xchg
aam
mov
dec
xchg
jp
pop
aaa
pop
xchg
push
pop
pop
ds
xor
jle
dec
mov
test
in
add
mov
inc
outsl
test
pop
in
ror
lods
jbe
or
mov
mov
dec
sbb
mov
movsb
mov
mov
dec
xchg
lcall
and
fwait
inc
out
nop
mov
pop
xchg
std
testb
sarl
xor
inc
ret
mov
aaa
mov
iret
sub
sbb
test
mov
movsl
and
push
mov
sbb
xchg
out
sub
leave
push
fnstsw
in
mov
dec
xchg
loop
or
testl
or
add
xchg
sub
pushf
add
adc
iret
sbb
lock
jne
jo
stc
imull
inc
shll
jecxz
shl
loopne
or
jp
movb
jecxz
mov
xchg
insb
jg
cwtl
xchg
lret
inc
test
dec
push
das
dec
rcrb
adc
stos
mov
pop
inc
xchg
add
lock
push
cmp
push
or
and
xlat
sbb
in
cmp
out
loope
inc
ret
lcall
dec
sub
mov
and
fmul
shll
jle
push
cmc
or
and
sti
das
pushl
pop
into
xor
pop
ljmp
cmp
or
stos
xorl
les
cmpsb
sbbl
jl
test
dec
push
out
sbb
jp
fs
call
out
repnz
scas
test
arpl
push
mov
dec
popf
sub
fbld
or
test
push
inc
dec
int3
push
fadd
test
pop
fisttpll
dec
xor
and
cmp
jne
xchg
pop
xchg
inc
fstpt
mov
scas
cmp
sub
je
int
int3
mov
fistpl
ds
dec
xor
cmp
mov
repz
je
push
mov
push
adc
or
adc
xchg
arpl
or
aad
jp
cld
repnz
std
subb
and
out
mov
cli
xor
add
lcall
pop
inc
sub
imul
dec
jb
icebp
cli
in
pop
movsl
jecxz
mov
dec
ret
aas
jp
fs
pop
aad
adc
outsb
mov
or
out
adc
sbbb
sbb
push
shr
jle
adc
jg
cmp
icebp
mov
aaa
inc
xchg
add
jecxz
mov
inc
cld
jnp
mov
pop
mov
dec
mov
in
adc
cmp
xchg
dec
movsl
mov
sbb
push
gs
rcr
jns
xchg
mov
xchg
cmp
movb
adc
jecxz
jmp
out
lock
lods
xor
shrl
pusha
sub
popf
cmpsb
pop
shlb
pusha
dec
mov
hlt
mov
adc
sti
jbe
in
jo
xor
aam
inc
xchg
xchg
loope
cmc
inc
out
inc
cs
mov
dec
ss
outsl
fcomps
lea
push
in
mov
int3
call
mull
int
mov
dec
adc
or
jl
stc
push
mov
pop
rcrl
lods
enter
cmp
mov
sbb
and
lret
jns
in
add
xchg
lea
mov
rcl
adc
xchg
inc
test
js
mov
xchg
push
enter
out
or
int
data16
hlt
add
or
push
adc
pop
sub
jle
icebp
ss
das
test
adc
mov
out
dec
pop
add
adc
lds
cltd
rorb
jg
pop
mov
bound
mov
movsl
insb
adc
push
jnp
inc
xor
jmp
sti
ret
jmp
or
pusha
into
in
add
rcr
jl
lea
imul
jbe
jo
outsl
mov
es
cmp
push
fisttpll
jmp
les
and
loope
idivl
loop
jns
outsb
mov
loope
inc
imul
aad
mov
xor
lret
inc
inc
pop
pop
and
push
fwait
xor
pop
rcrl
pop
sub
pop
add
div
insl
mov
es
into
subb
push
shlb
shlb
ljmp
call
xchg
xor
test
push
lret
movd
je
pop
or
push
lods
sub
cwtl
sti
pop
loope
mov
enter
mov
insb
xor
and
push
ss
push
and
fucom
mov
pop
in
cmp
addr16
nop
mov
mov
or
inc
jno
loope
enter
into
adc
xlat
shlb
sub
mov
in
xchg
push
xchg
loop
in
pop
mov
mov
ret
stos
or
mov
push
lods
push
scas
movsl
pop
testl
insb
mov
sub
shll
fldenv
jecxz
xor
jb
rcl
pop
lahf
inc
push
ss
loope
sub
push
cmp
mov
push
pushf
push
or
je
mov
mov
push
idivb
jp
xchg
xchg
fbld
cmc
daa
rorl
inc
pop
cwtl
and
jnp
jp
dec
movsb
sub
xor
cmpl
mov
dec
stos
cmpsb
push
xor
or
xor
test
sbb
mov
push
jge
pusha
xchg
adc
aam
xchg
lods
aam
jge
in
ficoms
movsb
iret
xchg
cwtl
fcoml
jns
mov
xchg
push
mov
sub
mov
sub
xor
out
hlt
fwait
cmp
outsb
pop
push
loopne
test
xchg
je
insb
fs
mov
flds
sti
adc
test
outsb
addr16
push
mov
cmp
jno
inc
xchg
inc
insl
arpl
pop
das
mov
push
or
rcrl
mov
imul
adc
aas
or
xchg
les
mov
ja
imul
cmp
dec
push
dec
ret
inc
push
sub
adc
inc
test
imul
inc
or
cmp
icebp
pop
shlb
jl
push
cld
call
dec
xor
cmpsl
clc
repnz
push
rclb
cmp
cmp
cli
stos
test
push
or
cmp
sbbb
jecxz
popa
add
pop
leave
xchg
pop
dec
movsb
mov
pop
out
adc
dec
xchg
pop
mov
or
cmpsb
out
dec
pop
fwait
aaa
or
int3
mov
or
jns
add
sub
aad
mov
dec
mov
std
mov
dec
test
outsb
adc
stos
xor
ficoml
push
in
test
ljmp
lahf
mov
mov
stc
aaa
mov
mov
out
faddp
lds
popa
dec
int
mov
adc
xor
and
out
shufps
sahf
jmp
add
inc
mov
push
sbb
mov
into
mov
pusha
mov
aad
lret
and
mov
or
outsl
icebp
movsl
pop
xchg
stos
ja
notb
js
or
outsb
cmpl
pop
or
push
dec
out
pop
jp
xchg
pop
hlt
jge,pt
inc
and
pop
roll
lahf
nop
std
and
cmpsl
movsb
mov
xor
adc
adc
outsl
xchg
cmp
add
ja
faddp
xchg
jbe
cmpsb
mov
cmp
fmull
aam
jbe
jne
bound
add
sub
insb
aam
loope
fdivrs
and
mov
mov
mov
cmp
stc
cltd
divl
sub
jle
sub
xor
gs
push
bound
jae
mov
jb
mov
jp
div
ret
cld
mov
movsl
repnz
popf
fcoms
pop
gs
jne
out
imul
out
pop
push
out
jmp
mov
jo
ja
dec
shrb
enter
push
aas
out
cmc
dec
or
leave
pop
ds
jnp
rcrl
rcr
jnp
dec
and
push
sub
or
xor
and
in
rcl
and
stos
aas
cwtl
imul
gs
inc
loopne
pop
and
jmp
sub
jle
dec
sbb
imul
xor
fstps
mov
std
or
adc
or
add
mov
xor
loop
aas
xor
mov
hlt
cmp
inc
lea
sbb
adc
push
mov
dec
in
inc
sub
pop
hlt
or
pop
fisubrs
sbb
scas
pop
sub
lret
inc
dec
inc
pop
sti
push
aas
xchg
jp
xor
inc
test
and
sub
cwtl
jl
or
ljmp
add
lock
mov
or
push
out
mov
push
push
dec
or
sbb
mov
notb
lods
dec
jae
ret
inc
inc
insb
mov
cmp
xchg
jecxz
lods
push
jecxz
dec
sahf
scas
out
imul
aam
mov
cvtpi2ps
jo
es
movsl
adc
insl
orl
xchg
imul
xlat
xchg
jmp
push
mov
imul
sarb
lea
addb
jb
insl
mov
mov
xchg
cmp
fdivs
cmp
lcall
ljmp
jae
arpl
loope
push
sub
das
andb
das
fnstcw
inc
xor
ljmp
adc
xchg
daa
ret
mov
in
adc
push
in
shl
mov
jl
add
aas
mov
cmpl
xchg
mov
pusha
stos
cmp
xor
inc
stc
and
xchg
or
lcall
push
repz
or
xor
xchg
cmp
mov
xchg
push
mov
adc
insl
push
mov
out
mov
pop
aad
call
loop
fsubrs
sub
cmp
pop
xor
cwtl
arpl
icebp
test
mov
or
xor
sahf
push
insl
adc
cmpsl
sub
out
sub
in
and
xchg
inc
xor
lret
test
pop
shll
out
mov
stos
mov
jmp
cvtps2pd
fs
imul
xchg
icebp
cld
jnp
clc
sub
lret
je
cwtl
repz
stos
jl
test
xchg
dec
mov
or
xchg
xor
sti
cmpsl
cmp
out
inc
mov
jne
dec
incl
adc
or
cmp
or
pushf
repnz
sub
mov
and
rcrl
pop
jecxz
iret
adc
and
es
jnp
in
fdivs
mov
dec
dec
loope
mov
pop
ds
sub
push
test
adc
lret
add
cld
ljmp
mov
sahf
js
jb
add
xchg
or
push
cmc
xor
shll
mov
rcrl
jne
jl
shlb
push
fists
gs
repz
and
add
dec
outsb
movsl
cmp
lds
sub
jp
stos
fldl2e
lods
pop
lods
scas
mov
dec
mov
aad
test
lcall
sub
mov
mov
test
jae
daa
push
clc
dec
xchg
mov
movsl
jne
pop
lods
cmp
stc
inc
mov
pop
dec
push
jg
fisttpll
push
mov
mov
mov
cs
dec
mov
test
xor
and
dec
jbe
icebp
push
mov
aad
fldl
loop
jo
lods
push
cmp
dec
dec
test
xor
insl
cmp
dec
adc
cwtl
out
xchg
ljmp
popa
aam
fdivl
stc
test
mov
fldenv
mov
rcl
jbe
push
and
inc
push
push
sub
sub
ljmp
fucom
ja
lahf
cmp
adc
nop
test
or
ret
dec
cmpl
jno
mov
ss
sbb
pop
into
jg
pop
stc
mov
test
pushf
out
push
fldcw
addb
push
push
in
inc
add
imul
inc
std
std
pop
loope
ret
jmp
add
mov
out
or
cld
mov
ja
sbb
adcl
mov
mov
mov
call
test
mov
mov
test
mov
leave
aaa
cltd
movsl
adc
add
or
dec
cwtl
lret
popf
dec
mov
or
cmp
push
xchg
nop
dec
inc
sbb
mov
cwtl
cmp
adc
orl
jg
inc
stos
pop
iret
sub
popf
cs
loop
les
dec
jnp
push
xchg
fwait
mov
lcall
or
scas
sbb
arpl
jle
push
inc
psubd
xchg
aas
xchg
mov
pop
lods
int
and
or
pop
cltd
loope
pushf
sub
fs
mov
mov
xor
mov
enter
xchg
jns
fsub
push
or
sub
cltd
mov
dec
in
loope
popa
cmp
test
dec
iret
mov
rcll
adc
lock
in
jno
mov
cmpsl
insl
lcall
cld
test
lret
push
xor
out
daa
icebp
jecxz
push
pop
mov
push
dec
xchg
aas
and
add
cmove
dec
addr16
test
dec
jle
mov
negb
add
mov
es
jae
out
ror
out
out
xor
add
clc
inc
repz
mov
pop
fldenv
pop
fdivp
and
jl
dec
hlt
into
mov
fidivrl
into
mov
jmp
mov
gs
loopne
popa
xchg
pusha
jo
mov
loopne
insl
movsl
jge
jmp
icebp
les
sub
or
rorb
in
ret
push
aaa
insl
cmp
fistl
mov
pop
mov
mov
rcl
aaa
dec
add
out
sbb
aad
rorb
cwtl
out
dec
loop,pn
dec
mov
or
xor
rcrb
jo
cmp
and
xchg
push
pop
sub
sbb
test
inc
push
lret
fld
movsl
repnz
rolb
lret
or
push
cmp
je
mov
inc
loopne
outsl
lods
mov
push
addr16
inc
out
push
mov
mov
jae
xor
ret
mov
popf
cmpsb
lods
shll
cmpsb
jno
mov
scas
push
out
cmp
fprem
subl
jecxz
cmpsl
cmp
in
lcall
imul
add
pushf
fisttps
push
sub
xchg
enter
lods
fistpll
loopne
and
inc
pop
pop
push
push
jl
xor
push
mov
or
fs
and
js
sbb
jae
inc
push
inc
mov
mov
icebp
mov
mov
cmp
jg
push
or
fldenv
and
fcoml
aaa
out
mov
fsubp
int
add
xchg
dec
push
cmpsb
xor
mov
push
mov
inc
gs
adc
